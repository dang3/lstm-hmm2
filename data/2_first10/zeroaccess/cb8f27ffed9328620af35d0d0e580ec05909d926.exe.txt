push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
mov
orl
orl
sbbl
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
je
push
push
push
call
orl
orl
adc
xor
neg
neg
cmpl
movl
mov
mov
movl
jmp
movl
jg
push
call
xor
adc
movl
mov
add
add
not
mov
sub
mov
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jbe
push
pushl
push
push
pushl
call
mov
mov
sub
and
sbb
sub
adcl
orl
or
orl
mov
mov
sub
or
lea
cmpl
mov
movl
not
mov
jmp
mov
not
jge
push
push
push
push
push
push
call
or
adc
sub
incl
mov
mov
sub
or
and
xor
xor
and
adc
mov
mov
cmpl
movl
mov
not
mov
jmp
mov
jle
push
push
push
pushl
call
orl
xor
mov
sbb
sub
mov
and
mov
xorl
xor
or
sub
mov
inc
mov
xor
add
mov
mov
add
mov
mov
addl
shrd
shr
mov
mov
xor
xor
addl
or
mov
add
mov
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
pushl
push
push
push
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
movl
or
movl
movl
movl
add
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jle
push
pushl
push
push
pushl
call
andl
notl
andl
orl
addl
sbbl
mov
subl
shl
xor
mov
xorl
push
sbbl
push
push
push
sbbl
call
mov
or
mov
mov
or
mov
xor
mov
mov
cmpl
mov
movl
mov
notl
jmp
movl
movl
jl
push
push
call
adcl
sub
adcl
negl
and
or
movzwl
add
mov
sbb
add
sub
sub
mov
xor
or
adc
lea
subl
mov
inc
mov
andl
or
and
adcl
mov
adcl
or
xorl
xor
movl
cmp
movl
jne
and
mov
or
mov
shrd
adc
shr
notl
mov
sbb
mov
shl
subl
xor
xor
or
mov
movl
cmp
movl
jne
xor
mov
mov
addl
xor
mov
sbbl
mov
mov
add
mov
shrd
andl
mov
mov
addl
xor
xorl
shr
mov
adc
mov
xor
movl
or
movl
shl
sub
mov
mov
subl
mov
add
mov
mov
add
mov
sbb
mov
shrd
cmpl
not
not
mov
mov
jmp
movl
movl
ja
push
push
call
xor
add
and
mov
movzbl
adc
mov
sbb
and
movzbl
sub
cmpl
mov
mov
mov
jmp
movl
jge
pushl
call
sub
mov
mov
or
subl
or
neg
adcl
shr
sbb
mov
mov
sbbl
xor
xor
shl
adc
xor
or
add
mov
mov
andl
jmp
mov
imul
push
pop
mov
pop
adc
pop
out
cmp
fisttpl
lds
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
push
mov
mull
shr
enter
xchg
sbb
xchg
sub
inc
cltd
mov
dec
imul
int3
pop
fsubs
clc
pop
mov
jnp
xor
dec
ret
mov
mov
lahf
ret
nop
pop
xchg
dec
test
cs
push
aad
xchg
ljmp
lods
xor
jb
mov
xor
adc
mov
pop
xor
inc
dec
mov
mov
xchg
pop
push
mov
push
std
push
data16
sub
and
movsb
xor
sbb
inc
xchg
scas
ficomps
mov
inc
icebp
int3
sub
fsubs
and
mov
mov
lock
mov
int
out
popa
aam
dec
push
jecxz
sbb
jbe
insl
into
stos
clc
rolb
dec
or
cli
rorb
filds
imul
cltd
test
mov
add
cwtl
iret
arpl
push
mov
pop
test
out
sbb
xchg
cmpb
or
mov
add
cs
cmc
aaa
sbb
inc
pop
aaa
adc
inc
cmp
add
adc
iret
dec
aaa
into
adc
add
add
push
and
insl
insl
fimuls
popf
lods
in
dec
xchg
scas
ret
jns
jne
sbb
lahf
sbb
lcall
scas
add
or
pop
adc
std
jge
dec
roll
mov
call
mov
pop
shll
sahf
lock
add
jmp
jecxz
sub
in
loop
jl
cmc
scas
pop
lcall
iret
stos
out
adc
sbb
daa
jae
xor
repz
mov
and
outsl
ss
imulb
arpl
push
and
pushf
stos
nop
xor
fwait
pop
sti
dec
mov
jp
cltd
jp,pt
cmp
outsb
movsl
push
or
popf
or
mov
stc
jl
dec
pop
test
dec
bound
xchg
test
pushf
hlt
cmp
lcall
pusha
adc
call
push
test
push
push
adc
cmp
xor
mov
mov
hlt
xlat
or
pop
cli
pop
arpl
and
int
inc
lods
fsubs
mov
pop
adc
arpl
retw
bound
add
lcall
and
adc
cld
jl
loop
push
jbe
scas
push
mov
adc
xor
into
hlt
out
andb
pushf
aad
mov
pushf
out
mov
push
sub
lods
or
aaa
mov
lahf
add
mov
testb
pop
shr
imul
inc
or
push
adc
mov
jmp
lahf
push
frstor
dec
adc
shlb
xchg
cmp
jnp
and
leave
int
sub
std
std
pop
jmp
pusha
adc
lea
mov
stc
cwtl
lea
mov
sbb
aam
std
outsb
add
push
jbe
add
rorb
decb
mov
pop
adc
lods
xlat
cmp
les
outsb
inc
daa
push
pop
stos
sbb
je
fcomip
add
outsb
push
xor
stc
out
call
testl
fdivrs
push
xchg
xor
stos
pusha
xchg
icebp
adc
cwtl
loopne
xchg
scas
mov
adc
fwait
out
push
inc
mov
add
lds
ja
dec
sub
nop
mov
aaa
mov
fadds
loope
push
push
mov
inc
lock
mov
fiaddl
jne
xchg
push
stos
aas
inc
loopne
out
push
mov
mov
mov
add
daa
ljmp
mov
testb
movsl
inc
xor
rorl
or
int3
ljmp
dec
scas
mov
shrb
push
adc
cli
mov
xchg
in
push
adc
rcll
lods
inc
push
les
repz
sub
rol
int3
daa
dec
jl
push
add
mov
fadd
pop
fwait
repnz
repnz
xor
cmpsb
shll
push
xchg
fwait
push
pop
jo
xchg
repz
jmp
les
mov
aad
setnp
ret
xchg
or
aam
sub
jbe
cltd
loop
push
dec
fldenv
and
int3
cmp
and
out
loop
div
imul
movsb
jmp
mov
les
inc
daa
stc
andb
push
cmp
xchg
aam
ds
xor
hlt
repz
shll
aam
cmpb
lock
es
out
rorb
cltd
icebp
adc
pop
sub
stos
push
pop
mov
push
pop
xor
xor
add
mov
sub
mov
or
call
aaa
test
mov
fsubrs
into
lcall
popf
mov
sub
cmp
mov
fs
int3
fstp
pop
leave
sahf
inc
jecxz
bound
jmp
cmpb
clc
jae
cmpsl
movl
aam
mov
aam
add
cmc
in
pop
aad
inc
incb
iret
mov
fdivs
mov
xchg
pop
mov
and
push
test
mov
std
bound
sti
out
mov
jnp
sub
xchg
test
daa
int3
jecxz
test
movnti
mov
or
inc
outsl
inc
mov
int3
cmp
inc
xchg
xor
int
push
fstl
imul
inc
sub
test
loop
rorb
mov
mov
jmp
arpl
push
shrl
rcll
pop
push
mov
and
imul
test
sbb
inc
push
cwtl
sub
add
sub
insb
int
ret
ds
inc
cs
imul
outsb
sti
pop
repnz
test
outsl
jno
pop
cld
mov
test
lods
lods
pop
scas
cmpl
mov
or
cmc
orb
mov
dec
fwait
and
inc
mov
lds
inc
mov
add
int3
sbb
dec
addr16
jp
push
mov
clc
into
daa
aas
repnz
int
movsl
xchg
nop
adc
sub
insl
push
add
outsl
xor
sahf
rcl
fadds
pop
cli
push
mov
push
outsl
sbb
loope
loop
mov
cmp
lods
lret
pop
cmp
cmp
fldt
jle
mov
repnz
xchg
mov
inc
mov
dec
mov
mov
sbb
dec
nop
sub
lret
in
call
sub
jge
nop
and
jge
xchg
or
pop
imul
mov
into
sub
fwait
push
fucomp
fdivr
aaa
dec
mov
adc
inc
add
sub
pop
sub
int3
adc
loopne
daa
mov
imul
and
fwait
jg
loopne
pusha
xchg
fcomps
and
mov
andb
pop
stos
xchg
cld
push
add
sub
fcmovne
popf
fstp
mov
scas
pop
dec
sub
jns
pop
or
inc
test
stos
lahf
pop
xchg
pop
out
out
dec
adc
adc
ss
dec
icebp
outsl
in
hlt
lret
xchg
sub
loopne
lret
sbb
sbb
into
or
xchg
addr16
cmc
fbstp
lea
and
jo
jle
rorb
into
push
rcll
sbb
stos
or
addl
push
test
xor
cmp
sbb
clc
mov
xchg
pusha
push
inc
out
mov
hlt
pop
lock
ja
popa
xor
int3
clc
fstps
stos
iret
or
xlat
push
sahf
jmp
push
adc
leave
lea
push
ja
insb
test
jnp
xchg
mov
push
mov
clc
jmp
xchg
fmull
or
push
inc
adc
out
or
lret
testl
xchg
or
out
movsl
rcl
addr16
call
push
lahf
pop
iret
stos
fstps
popa
cmp
mov
xor
in
loope
mov
in
mov
pop
pushf
jp
mov
add
push
sti
and
mov
fsubrp
loop
or
xchg
push
sahf
xor
jb
mov
dec
cltd
rcrb
xchg
mov
push
adc
jle
flds
inc
push
xchg
lcall
int
data16
cld
dec
mov
scas
push
popl
inc
pop
cmc
or
and
inc
jmp
xor
mov
and
popf
mov
cmpsl
add
stc
loope
xor
cltd
inc
mov
mov
jge
and
cmpsl
cmp
mov
aad
mov
jmp
xlat
outsb
cli
jbe
sahf
lret
push
fs
pop
lret
lea
testb
insb
sub
xchg
nop
mov
cwtl
movb
xchg
add
sbb
pop
ret
jnp
add
jg
sub
in
mov
mov
inc
mov
jge
lods
fs
popa
mov
ja
sbb
in
push
inc
mov
xor
xchg
dec
push
dec
outsb
pop
xor
imul
lahf
cmp
fcmove
mov
dec
xchg
xlat
jl
insl
jp
dec
nop
mov
movsl
jo
cmp
imul
pusha
xchg
mov
lret
cmp
cwtl
out
rorl
xor
pop
in
bound
pop
jg
adc
mov
push
jns
inc
sub
mov
jae
adc
test
test
push
into
in
and
rclb
pusha
pusha
fidivrs
test
push
inc
sub
push
jl
inc
fadd
test
jp
int3
ds
jbe
lds
dec
clc
cld
cmp
lea
sub
inc
mov
lea
aaa
out
or
pop
aaa
pop
add
call
jle
jg
popf
pop
push
jnp
repz
insb
dec
mov
insb
cmp
pop
add
cld
cmp
movb
shl
and
out
mov
jb,pn
or
sub
out
jne
add
push
and
push
aad
mov
pop
rcl
addb
out
mov
ss
adc
push
mov
pop
sarb
imull
out
sbb
xor
mov
xchg
cli
fiadds
je
fiaddl
sbb
clc
jnp
aam
pop
roll
sbb
xor
jbe
mov
dec
fldenv
inc
jmp
std
lods
aaa
mov
scas
dec
sub
push
inc
cmpsb
sub
movaps
fwait
insb
adc
add
aaa
test
out
std
fdivs
mov
mov
and
and
adc
data16
cmc
dec
fisubrl
ficoms
les
xchg
sti
loope
mov
mov
push
sub
outsl
in
dec
lcall
push
sahf
cmpsl
adc
push
cmp
xor
mov
jo
bound
add
mov
int
sbb
loope
or
outsb
in
fdivr
in
aam
sub
enter
mov
add
add
push
jns
scas
fs
jmp
sbb
xchg
xchg
ljmp
aad
int3
fdivrl
ret
repz
jb
lcall
sbbl
push
punpckldq
mov
sbbb
mov
mov
lock
adc
push
dec
fstl
inc
jae
jp
loope
leave
rcr
sbb
cmp
scas
mov
lods
cmp
cmc
cmp
fdivl
mov
leave
and
sub
dec
jb
sub
pop
cmp
movsb
icebp
test
sbb
jb
jle
rclb
scas
dec
das
nop
jle
mov
call
in
dec
bound
xchg
mov
push
in
xchg
nop
mov
add
xor
adc
into
sub
sbb
mov
rol
jl
jbe
sub
xor
cmpsl
jg
add
leave
outsb
sub
lods
adc
in
dec
andl
and
test
pop
dec
jp
adc
aam
mov
adc
pop
sbb
jnp
je
lret
int3
mov
sbb
cmp
lret
iret
sbb
mov
mov
sub
movsb
push
mov
data16
rclb
pop
ja
add
ret
mov
cmp
mov
and
or
int
rdtsc
push
jbe
mov
dec
imul
mov
lret
inc
sbb
in
fdivs
xor
lock
mov
leave
xor
xchg
fistps
je
adc
ret
and
roll
cmp
loope
adc
pusha
jbe
push
and
repz
mov
dec
xor
xchg
and
pop
fimuls
push
mov
adc
popa
jmp
jmp
xchg
les
or
pop
pop
and
mov
jge
clc
lret
push
fsubrs
xchg
or
aaa
ds
add
jecxz
popf
xor
cmpl
inc
jno
cli
xor
and
push
ja
dec
fstpl
and
xor
sub
dec
scas
pop
xlat
pop
sahf
ret
jae
and
test
inc
ja
ds
shll
lcall
push
xchg
adc
pusha
imull
inc
popa
bound
scas
xchg
stos
popa
testb
sbb
push
xchg
dec
mov
xor
mov
mov
dec
pop
xor
xor
cli
jmp
inc
mov
and
test
jb
push
xor
ljmp
test
int
adc
xchg
sahf
xor
jl
jge
xor
xchg
daa
clc
mov
fldenv
ss
adc
push
int
insl
lcall
aaa
lcall
testb
xchg
lods
dec
movsl
enter
or
add
mov
fisubs
pop
int
inc
fists
fisubs
add
pusha
sub
fnsave
xchg
add
pop
aaa
pop
nop
push
mov
push
sub
leave
mull
push
dec
cmp
lret
ljmp
dec
or
cltd
fistps
cld
popf
mov
ja
mov
test
enter
xor
push
cwtl
shll
inc
stos
imul
shrb
dec
add
into
test
sbb
cwtl
pop
cmp
pop
cs
xor
adc
xor
sub
xorb
jmp
es
insl
jl
sub
mov
addr16
cmp
test
mov
xor
push
jno
xlat
data16
je
repnz
into
fldpi
ja
and
mov
xor
daa
inc
mov
enter
xchg
clc
sti
scas
or
pop
cmp
xor
add
pop
in
or
dec
rol
data16
pop
out
mov
lret
repz
in
into
xchg
mov
jno
mov
fsts
rcr
xchg
cmp
dec
scas
push
xor
sbb
repz
das
cmp
jmp
mov
pop
adcl
clc
jne
mov
cmp
push
inc
dec
dec
test
scas
jbe
mov
sub
cmp
mov
inc
add
xchg
cltd
and
xchg
std
test
mov
fisubrs
arpl
outsl
cmp
lock
pusha
jb
fcomp
mov
pop
sti
cmp
negl
lret
cs
mov
out
out
dec
cmp
inc
push
fdivrl
jge
adc
mov
adc
jg
out
test
push
call
mov
movsb
out
xor
lods
std
mov
lds
ret
add
inc
in
sub
insl
sub
ret
icebp
xor
xor
clc
rolb
jnp
out
or
cmc
xor
aam
dec
repnz
dec
cmp
sbb
mov
dec
jno
push
cmpsl
cmp
test
mov
or
xchg
mov
outsl
pop
lods
lcall
sub
dec
mov
iret
xchg
jo
inc
push
scas
mov
add
jnp
sbb
call
adc
mov
stos
ror
jge
movsl
push
in
repnz
pop
lods
jge
push
mov
lds
push
cld
inc
ss
leave
leave
movl
dec
mov
idivb
jge
or
adc
into
inc
pop
fnstenv
xor
lret
out
idivl
lcall
push
jne
xchg
mov
adc
mov
push
data16
shlb
push
icebp
and
arpl
mov
adc
jno
fistl
rcrl
adc
xor
and
sti
test
mov
cli
fs
jmp
fmuls
mov
mov
pop
ja
mov
js
adc
icebp
push
testb
mov
inc
mov
mov
jmp
je
jp
jae
push
jecxz
cltd
jmp
sahf
in
mov
cmp
cmc
das
daa
mov
aas
xorb
jp
data16
push
addr16
cltd
stos
xchg
dec
or
mov
mov
sbbl
mov
test
adc
push
mov
inc
cmp
jg
dec
lods
jl
xchg
jo
xchg
pop
int
cmp
adc
fistps
jg
mov
push
xor
xor
mov
aam
jbe,pt
sti
addr16
lcall
popa
out
dec
pusha
mov
out
pop
cmc
xchg
or
test
sub
enter
lea
mov
push
or
sub
lock
xor
or
lret
outsb
test
pop
scas
mov
dec
sub
scas
cmpsl
enter
fwait
loop
fmuls
ret
push
js
loope
shl
lods
inc
popa
dec
test
cmp
cli
xchg
sbb
add
test
icebp
stos
sahf
les
rcrb
lret
bound
mov
sbb
jge
fcmovne
jmp
lds
dec
out
push
xor
ficoms
gs
loopne
lret
popf
push
xor
stc
das
jl
pop
jns
pop
aaa
movsl
aas
ret
pop
jg,pn
lret
xchg
jne
cld
mov
js
jae
cld
aad
mov
repz
cwtl
and
xchg
loopw
rol
push
in
hlt
ljmp
lods
rcrl
imul
loop
jne
in
or
push
sbb
xorb
xor
push
loop
leave
xchg
mov
enter
aad
fdivl
push
in
fildll
push
outsb
icebp
add
cmp
and
jmp
mov
xchg
and
shll
xchg
add
out
jb
int
fsubrl
add
clc
sub
pusha
dec
add
add
sub
loopne
push
lods
mov
jmp
jo
arpl
jge
leave
push
sub
fistpll
adc
sbb
int
test
pop
xchg
ljmp
sar
sbb
dec
dec
jae
daa
orl
into
or
lret
dec
jecxz
loope
cmp
pop
xchg
outsl
and
arpl
and
and
dec
and
cmpsl
push
add
aas
push
fimull
inc
jne
pop
push
mov
dec
mov
inc
shlb
jle
sub
negl
es
jo
mov
orb
out
stos
repz
in
mov
push
push
shlb
xor
fwait
outsb
outsb
mov
add
inc
mov
ja
jl
outsb
mov
adc
lahf
mov
jne
dec
das
add
hlt
in
dec
jo
pop
out
adc
nop
insl
sti
js
cli
lods
cli
push
mov
dec
loope
mov
or
push
adc
movsl
leave
int
imul
loopne
push
scas
icebp
rolb
mov
imul
or
bound
gs
ret
fimull
xchg
rolb
int
sbb
and
pop
rcll
jbe
lcall
addr16
cs
cmp
dec
xor
xchg
outsb
xchg
add
lcall
or
mov
pop
mov
xor
out
jo
sbb
repz
sub
jp
mov
fisubs
add
xchg
cmpsl
ja
and
mov
cmpsl
jbe
mov
nopl
stos
in
mov
mov
mov
mov
in
fistpl
loopne
scas
pop
inc
hlt
inc
out
sbbb
mov
out
outsl
sub
mov
mov
pop
movsb
mov
add
xor
lret
or
jecxz
addr16
fs
ds
insl
cmp
in
mov
push
loope
jnp
sbb
jo
ss
dec
fcomps
ret
xchg
test
das
inc
fiaddl
in
xchg
cltd
inc
fidivrs
push
pop
sbb
fistps
push
in
lret
xchg
or
sarb
pusha
fsubs
or
jecxz
sub
adc
out
adc
cmp
push
into
or
gs
cmp
push
pop
mov
cmp
push
xchg
add
aad
and
adc
in
loop
cld
jb
sbb
lock
sub
mov
test
daa
addr16
popf
jae
ja
xor
ja
mov
imul
fcomi
bound
or
loopne
push
icebp
mov
cmpsb
jg
inc
loopne
bound
lret
js
mov
test
dec
mov
push
dec
pop
in
pop
cmp
movsb
cmpsl
jno
lret
insl
inc
fisubl
fildl
adc
cmp
out
fmull
jl
out
cltd
nop
les
inc
decl
sbb
pop
movsb
leave
shll
cs
out
mov
nop
and
mov
mov
cwtl
pop
sub
decb
lea
call
or
inc
int
repz
scas
sub
sbbb
in
sti
pop
or
push
mov
sbb
push
pusha
pop
jno
jmp
lahf
fcmovbe
test
andb
shl
inc
adc
xchg
push
pop
lret
and
jns
sbb
pop
xor
popf
rcl
lods
gs
fcmovu
mov
inc
cmp
lock
xor
push
repnz
ds
dec
xchg
or
lcall
push
rcll
xchg
fs
negb
inc
es
dec
repz
push
lea
xor
fsubrs
jmp
push
adc
cmpsb
add
mov
imul
mov
jg
ror
and
dec
push
add
add
fists
sbb
sbb
cmp
fnstenv
mov
imul
lods
dec
loope
fisttpl
lcall
sarb
push
movsb
insb
dec
push
mov
jb
pop
sbb
data16
popf
mov
jbe
dec
mov
lcall
adcb
fcompl
sahf
mov
dec
add
push
pop
insb
mov
bound
cld
add
sahf
inc
mov
mov
inc
jecxz
je
popf
ss
cmp
roll
es
xchg
jmp
test
xchg
stc
add
shrb
jge
and
int
mov
xor
gs
mov
imul
orb
stos
or
and
das
cli
in
adc
hlt
sub
xor
and
mov
xor
repz
sti
pop
jmp
cmpsl
lds
out
ja
sub
inc
js
outsb
idiv
sbb
mov
xor
popa
in
adc
and
es
dec
gs
dec
adcb
cld
xchg
xchg
int
sti
leave
test
jne
push
popa
movsl
clc
mov
mov
int
pop
mov
and
rcrl
inc
sub
popa
xor
xchg
cld
int
xchg
pop
sbb
fcmovnb
inc
or
mov
gs
rclb
push
arpl
shrb
xchg
addl
movsl
shll
ror
pop
outsb
xlat
ret
cmpsl
or
outsb
mov
adc
int3
jb
push
or
inc
mov
imul
dec
bound
sub
cmp
arpl
in
push
inc
mov
aas
rolb
inc
movsl
pop
pushf
xchg
cmpb
and
pusha
out
nop
js
pop
cmp
push
push
movsl
ds
xchg
fdivr
push
jg
dec
and
inc
fsubrp
icebp
push
ja
jae
rcl
bound
mov
dec
sub
mov
cmp
inc
jecxz
xor
xor
dec
xor
jecxz
and
lea
pop
sarl
mov
adc
movsl
and
jb
sub
out
jmp
xor
pop
ret
xor
cmp
mov
cmp
cmp
jnp
int
pop
sbb
and
pushf
imul
test
rcrl
out
push
mov
mov
adc
jg
jbe
cmp
aad
int
cmpsl
add
xor
loope
push
sub
xor
je
shlb
push
out
push
cmp
push
loop
ja
push
loop
and
adc
mov
fcoml
adc
cmp
ret
or
and
xchg
lea
test
and
loopne
sub
mov
pop
pusha
in
xchg
adc
inc
xchg
pop
push
cli
daa
out
nop
mov
or
orl
jecxz
add
arpl
fcomps
inc
and
movsl
jmp
push
or
pop
xchg
sti
lret
sub
es
fsubl
cmp
xor
sahf
mov
push
data16
call
in
mov
or
push
cmp
leave
cmp
and
cmp
mov
enter
and
repnz
jo
dec
int
jp
adc
mov
cmp
and
mov
mov
inc
imul
cmp
pop
push
mov
mov
push
addb
cwtl
cltd
sub
sbb
xchg
hlt
push
jb
sub
shrb
lret
int
cmp
aaa
jmp
mov
dec
fcoml
inc
outsl
or
or
jne
js
dec
sub
inc
xchg
out
and
dec
push
push
imul
fistl
push
clc
test
pusha
inc
or
rorb
inc
loope
out
sub
mov
nop
ja
popa
mov
mov
add
xlat
pop
push
pop
sarb
fs
mov
loop
inc
outsb
ret
and
insb
dec
fdiv
std
jp,pn
cld
and
fwait
pop
jno
xchg
xchg
outsl
lea
mov
ret
out
jmp
les
adc
jo
dec
jae
xchg
push
test
je
outsb
cmp
add
add
mov
and
jmp
fwait
sbb
ljmp
mov
aad
jo
adc
repnz
adc
adc
aam
or
iret
inc
inc
cs
push
fnsetpm(287
xor
adc
mov
sub
push
xor
shr
mov
cmc
pop
aas
into
inc
jl
jmp
pushf
dec
xchg
in
sti
mov
addl
nop
mov
cmpsl
jge
sbb
aaa
movlps
fildl
dec
mov
stc
cmp
rcr
pop
mov
mov
xchg
imul
mov
cmpsl
leave
xchg
adc
dec
push
pop
mov
into
xchg
mov
sub
jo
xor
cltd
sub
jo
inc
xor
stos
jns
inc
and
and
in
adc
cmp
nop
sti
sarb
jb
cmpl
jge
pop
add
stos
inc
xchg
iret
fdiv
lods
jb
dec
outsl
test
xchg
ret
ss
cs
js
sbb
and
and
pop
mov
xor
insb
fbld
mov
test
fs
xor
ljmp
cmp
mov
jb
cli
mov
ljmp
je
xor
sub
dec
add
or
mov
and
sub
jl
in
fs
sti
sbb
dec
ds
hlt
or
dec
jmp
xchg
push
in
mul
add
testl
fadd
inc
iret
je
orl
dec
or
or
sub
xchg
jecxz
leave
cmp
cmp
loope
movsl
mov
dec
lret
ret
ss
mov
push
mov
cli
inc
xor
cmp
or
cmpsb
xchg
cltd
and
jae
jmp
cmpsl
sbb
or
fcompl
push
sbb
push
adc
cmc
sub
push
aad
mov
pop
out
mov
mov
in
sbb
ficompl
std
cs
in
add
lret
lahf
inc
mov
or
adc
pop
push
pop
dec
pop
sub
cmpsb
leave
repnz
jne
inc
xchg
in
test
pop
inc
int
dec
ds
mov
xor
shrl
sahf
mov
push
and
imul
lods
lods
push
mov
test
enter
fidivs
rcll
loopne
adc
sahf
mov
adc
mov
pop
dec
or
out
or
adc
rorl
loop
stc
scas
jmp
loope
pop
push
sarb
mov
mov
pop
out
cmp
inc
inc
aad
call
rcll
xor
pop
ja
xor
add
addr16
fisttpll
jns
xchg
pop
and
mov
test
lahf
stos
int3
outsl
pop
mov
xlat
pop
out
xor
mov
pop
cmp
pop
xlat
sbb
mov
fsubl
inc
jecxz
js
cmp
shrd
shr
sbb
mov
mov
mov
orl
xor
xor
or
orl
shl
addl
lea
or
mov
cmpl
mov
mov
jmp
mov
movl
jl
pushl
pushl
push
push
call
sbb
movzbl
xor
mov
addl
sbbl
mov
sbbl
shrd
andl
shr
xor
mov
and
mov
mov
sbb
xor
movzbl
or
mov
mov
subl
xor
or
orl
shl
imul
mov
cmpl
mov
mov
movl
jmp
notl
jne
push
push
push
push
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
movl
or
and
sub
subl
sub
sbbl
mov
adcl
shrd
mov
mov
xor
decl
shr
cmpl
movl
movl
jmp
movl
movl
jl
pushl
push
push
call
adc
or
or
sbb
xor
neg
sbbl
mov
mov
sub
mov
mov
xor
or
negl
shl
xorl
sub
mov
movl
cmp
mov
mov
movl
jg
and
mov
mov
xorl
shrd
mov
xor
mov
xor
shl
xor
or
shr
cmpl
mov
movl
jmp
movl
movl
jb
push
push
pushl
push
call
neg
xorl
neg
xorl
inc
andl
adc
mov
addl
mov
cmpl
mov
mov
jmp
movl
jne
pushl
call
adc
sub
sub
and
sbb
mov
cmpl
mov
movl
jmp
movl
ja
pushl
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
shrd
shr
mov
mov
cmpl
mov
not
jmp
movl
movl
jl
call
dec
movzwl
sbb
and
xorl
movl
add
mov
xor
movl
xor
adcl
or
xorl
shl
subl
imul
adcl
sub
movl
jmp
movzwl
sbb
mov
mov
cmpl
movzwl
mov
movl
not
jmp
movl
movl
jg
push
push
push
pushl
pushl
push
push
push
pushl
call
adcl
sub
sbb
adcl
xorl
not
xor
xor
sub
mov
decl
shrd
mov
decl
mov
xor
xorl
shl
decl
xor
or
addl
shr
mov
mov
mov
and
mov
sbbl
shrd
sbbl
shr
decl
mov
cmpl
movl
not
jmp
mov
movl
je
push
call
and
adc
mov
sub
mov
movzbl
or
add
xor
xor
add
mov
sub
sub
mov
mov
xor
xor
orl
or
addl
shl
xor
add
add
mov
mov
xor
shrd
movzbl
sbb
shr
mov
mov
orl
xor
shl
xorl
xor
or
sbb
mov
xor
or
sub
mov
movl
sbb
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
push
push
push
push
push
push
push
pushl
call
dec
movzbl
sbb
sub
and
mov
mov
sub
add
mov
movl
mov
mov
sbb
mov
xorl
jmp
pop
pop
iret
pop
cltd
sbb
dec
fldenv
push
scas
pop
lods
pop
adc
pop
adc
pop
test
xor
add
das
mov
repnz
rcrb
xchg
mov
push
jo
aas
fdivrp
jbe
sbbl
and
testl
scas
lock
mov
in
push
xchg
je
cmp
push
add
lea
jecxz
adc
cwtl
ss
fwait
xchg
lahf
or
mov
stos
fdivrl
rcll
pop
jnp
dec
mov
dec
inc
xor
movzwl
outsb
push
xchg
xor
inc
mov
dec
mov
ds
adc
movsl
mov
daa
in
mov
cmp
xor
sbb
lret
lods
into
insb
stos
sub
pop
sti
push
int
les
popf
movsb
cmp
xchg
or
out
mov
push
pop
xor
icebp
cmp
sti
mov
sub
jb
loope
cmp
mov
jo
mov
insb
mov
add
ret
pop
scas
in
pop
js
push
xor
xor
hlt
xchg
and
push
repz
bound
fiaddl
cltd
jecxz
pop
push
stos
int
data16
dec
and
push
fs
sub
cmc
fsubl
cmp
or
pop
push
aam
inc
and
mov
inc
xor
mov
jp
jae
sbb
xlat
mov
sub
fdivrl
xchg
sub
and
cmp
hlt
icebp
mov
testl
and
mov
jl
and
call
into
pushl
jae
sbb
icebp
pop
xorb
pushf
leave
sarl
orl
and
xchg
pop
pushf
int
mov
ret
sub
jge
insb
es
lret
imul
nop
sar
mov
pop
aaa
sbb
pushf
jns
xchg
and
scas
cmc
jle
push
and
fisubl
and
negb
adc
loopne
cld
cmp
or
icebp
mov
inc
bound
xor
fcmovb
daa
and
in
jmp
ljmp
xchg
popl
inc
sbb
sbb
movb
ret
jnp
mov
aaa
add
fistpll
pop
inc
pop
adc
subl
lcall
jle
xchg
inc
test
mov
dec
or
cmpsl
mov
inc
cltd
test
add
inc
pop
ficoml
mov
jl
test
cs
add
fwait
xchg
mov
xor
in
lods
movsb
lods
add
push
ljmp
cmc
mov
dec
mov
fidivs
xor
cltd
cmpsl
xchg
jbe
and
pop
dec
inc
cmpsb
sbb
sbb
pop
lods
aaa
pop
pushf
cmp
add
int3
or
and
inc
bound
sbb
addr16
cwtl
jne
repz
sub
in
and
outsl
mov
ret
cmp
mov
out
rcll
dec
into
xor
mov
sub
mov
gs
push
jg
je
xchg
js
pop
add
ja
sub
repz
push
rcrb
adc
inc
mov
lret
xchg
push
lcall
and
stos
call
fdivs
lds
sbb
arpl
sbb
js
push
insl
inc
add
mov
lock
js
adc
xchg
xor
xor
insb
inc
add
sbb
mov
in
inc
dec
dec
movsl
xchg
xchg
or
mov
xchg
sub
orl
hlt
pop
xor
cmpsl
adc
cmpsb
xchg
add
test
pop
push
pop
push
ljmp
std
jp
mov
inc
ret
inc
dec
cmpsb
test
shrb
jns
dec
ret
cmpb
sub
or
mov
push
adc
mov
dec
cmpsb
inc
sbb
adc
imul
inc
sub
pop
dec
push
cmc
icebp
nop
mov
xchg
stos
scas
push
shrl
xchg
andl
jecxz
call
stos
push
push
and
into
scas
aad
or
add
add
scas
sbb
cmp
insb
bound
pop
sbb
mov
out
xchg
sub
outsb
lods
fdivl
push
shr
mov
test
inc
jae
jecxz
mov
jmp
addr16
ljmp
fistpl
iret
cmpsl
mov
aaa
cmpsl
movsb
mov
xor
xor
es
or
add
sub
aam
cmpl
ret
popa
movsl
out
jbe
fwait
and
ret
mov
aas
push
cmp
test
mov
test
xor
fldl
pushf
sub
iret
out
cmp
fmulp
pop
jmp
clc
jno
inc
xor
add
shrl
pop
stc
push
jle
subb
les
into
cmp
and
sbb
fwait
ret
pop
popf
mov
adc
push
dec
dec
adc
adc
mov
sub
mov
xor
pop
mov
add
mov
dec
subb
jmp
xchg
call
push
ljmp
jns
sar
mov
movsb
xor
dec
out
xchg
and
jo
or
fucomi
or
cmp
mov
or
negl
ret
add
stc
sbb
mov
mov
nop
mov
das
std
out
and
stc
lret
inc
push
push
sbb
xchg
pop
or
push
pop
fwait
cmp
movsb
test
rorb
push
lods
lea
add
dec
pop
cmp
jns
mov
aaa
xchg
fcomps
add
sub
jno
jmp
cmpb
and
lock
popa
cltd
popf
jle
push
fcmovnb
cltd
pop
shlb
popa
test
sbb
xchg
in
lahf
or
into
adc
addr16
push
sbb
xchg
rorb
rcrb
pop
scas
enter
or
pusha
push
and
fwait
add
fwait
pop
dec
insl
or
loope
sbb
mov
xor
negb
cwtl
lods
int3
xlat
pop
imulb
inc
or
sub
pop
mov
jmp
add
pusha
pop
stos
sub
bound
sub
dec
add
std
push
stc
inc
mov
fbld
test
pop
addr16
stc
push
and
repnz
stc
fisubl
les
and
push
int
fisttps
mov
mov
xchg
leave
sub
push
inc
movsb
jae
jbe
lret
ljmp
enter
mov
decl
inc
call
rcll
sbb
sub
pop
sbb
pusha
in
dec
jp
out
daa
add
jecxz
data16
popf
xchg
pop
or
dec
stos
pop
adc
and
cmp
stc
inc
cltd
ficoml
scas
and
addr16
std
pop
in
dec
enter
ret
or
fucom
mov
pop
push
or
cmp
orl
sub
pop
push
test
xchg
jo
sbbl
mov
push
lret
cmp
loopne
inc
push
add
cmp
cltd
add
mov
shrb
push
xchg
sbb
sbb
sbb
data16
push
jmp
cmp
call
and
adc
sub
es
dec
in
imul
push
jmp
jns
jecxz
fnstenv
enter
dec
mov
push
mov
push
cmp
shrl
aad
pop
test
add
push
movsl
xchg
movsl
cmpsl
nop
in
imul
ja
sub
pop
hlt
cmpsl
in
push
test
xor
rol
hlt
and
insb
xchg
popa
hlt
loop
mov
jmp
mov
cs
add
push
dec
ljmp
xorl
es
pop
push
xor
test
add
andl
jnp
sub
lock
jbe
mov
scas
inc
in
mov
mov
cmpsl
fstps
outsl
push
xlat
leave
mov
repz
push
mov
xchg
outsl
negb
mov
imul
cmp
repnz
scas
or
cld
inc
insl
or
mov
xchg
adc
sbb
add
js
jg
mov
lret
mov
mov
xor
xor
and
or
scas
jbe
mov
pusha
jge
ror
mov
dec
inc
inc
mov
push
pushf
ljmp
ss
movsb
sahf
xor
out
mov
or
pop
xchg
popf
jge
mov
cmp
rorb
pop
dec
push
mov
jnp
test
or
cmp
fdivrp
dec
negl
sti
inc
cmpsl
stc
outsl
out
xor
arpl
and
xchg
repz
xor
mov
out
sahf
lods
cwtl
fwait
and
loopne
push
xlat
push
inc
repz
lret
scas
dec
rol
inc
dec
aaa
jl
fdivl
fsincos
setno
add
fwait
xchg
xor
insb
sbb
pop
fs
icebp
in
stos
shlb
cmc
cld
dec
sub
jle
xchg
sbb
inc
js
mov
mov
cmpsl
rcl
jg
inc
push
jno
sub
mov
or
adc
or
sub
dec
push
jo
lret
sbb
jle
jl
dec
and
or
test
jbe
xchg
mov
mov
insb
and
push
mov
lods
adc
pusha
frstor
xchg
mov
inc
daa
outsl
ljmp
jg
loop
int
int
push
mov
xlat
mov
jg
aaa
cmp
adc
daa
mov
dec
dec
sti
dec
lea
pushf
mov
push
or
icebp
add
fs
jg
pop
subb
or
mov
int3
in
dec
or
repz
pop
lock
subb
sarb
and
lahf
outsb
adc
push
inc
stos
cmp
test
and
pushw
fisubrs
add
cmp
jmp
rclb
cmpsl
mov
loopne
test
outsb
add
repz
pop
lods
mov
out
cmc
cli
rclb
mov
imul
mov
sub
cmp
dec
pop
sub
inc
add
lret
and
or
dec
lcall
js
lods
push
mov
jns
iret
push
int
negb
mov
xor
int
int
cmp
pop
pop
out
test
idivb
cmp
mov
xchg
dec
dec
pusha
out
cld
sarl
push
out
in
and
das
pushf
jae
mov
fsubs
xchg
addr16
jbe
movsl
add
inc
xor
movsb
add
pusha
lods
push
push
fwait
aaa
mov
scas
pop
sbb
jb
popf
dec
adc
inc
jp
cli
mov
sarl
mov
and
roll
shll
push
pop
stos
or
mov
scas
pusha
inc
fstpt
cmp
mov
sub
das
test
iret
sub
inc
aaa
lret
shrl
into
xchg
sub
xor
movsl
pop
jge
push
mov
mov
hlt
sbb
inc
dec
rorb
lock
and
mov
cltd
js
dec
insl
sub
push
jae
outsl
jp
out
aam
push
lock
mov
push
ret
sahf
ss
add
popf
aaa
das
lds
pop
out
xchg
test
xchg
pop
faddp
sub
std
addr16
xchg
aad
jmp
lahf
or
bound
lock
inc
arpl
cmpb
push
ja
shl
leave
xchg
jbe
xlat
in
dec
pop
scas
aas
or
xor
cs
jp
insl
decb
xchg
jno
add
mov
dec
fistps
jecxz
ljmp
cmovl
add
repnz
movsl
andb
push
fwait
sbb
fisttpll
mov
add
lahf
repnz
aam
stos
adc
or
adc
roll
leave
cmp
xlat
sub
outsb
es
push
ja
jmp
inc
jecxz
dec
mov
jo
inc
and
mov
clc
das
in
lret
pop
cmpsb
cmp
sbb
dec
mov
pop
push
or
gs
addr16
xorb
leave
xchg
mov
imul
fcmovbe
or
shrb
movsb
push
pop
ret
leave
icebp
sub
jae
sub
adc
cmp
xor
jge
xchg
pop
jo
mov
push
dec
push
mov
mov
dec
or
xor
xor
loope
leave
pop
lret
pop
and
add
dec
cmp
pop
and
call
pop
push
shrb
cltd
shr
and
cmc
mov
rcrl
fsubrp
jns
out
adc
into
ja
and
xchg
jno
sub
loope
inc
roll
repnz
jmp
inc
fstl
push
jb
divb
add
stos
in
hlt
testl
test
mov
jmp
jge
jne
fnstenv
popa
cmp
sub
mov
cmpsl
lret
sahf
mov
mov
stos
mov
in
and
into
inc
loop
jle
mov
xlat
mov
dec
ret
call
mov
and
cmp
mov
xchg
in
xor
fcomps
lds
or
jno
lret
jae
cmc
jge
add
outsb
fmuls
mov
sahf
mov
add
and
xor
dec
pop
mov
int3
and
lahf
xchg
add
mov
cmp
sbb
or
test
scas
negb
jle
inc
cmpsb
cmpsb
sbb
lret
mov
mov
insl
xor
pop
jbe
sbb
outsb
jge
or
push
daa
pop
dec
lret
clc
pop
leave
push
mov
pop
xor
popa
pop
inc
or
pop
push
mov
data16
arpl
sbb
stc
imul
mov
outsl
repz
sbb
sbb
and
pushf
adc
cmp
daa
pop
ds
int3
cltd
push
lret
dec
mov
sbb
clc
dec
popa
xor
ljmp
sahf
pop
and
out
std
xor
mov
movsl
mov
rcl
ja
mov
daa
sbbl
jl
outsl
int3
movsb
aam
sbb
push
movsb
fwait
js
repz
sbb
push
cmp
aas
xchg
loope
mov
inc
push
outsl
push
stos
test
sub
outsb
imul
mov
shlb
and
mov
std
sub
sbb
sbb
or
mov
insl
cmp
fsubs
inc
insl
lock
aaa
insb
loopne
cmp
insb
mov
xchg
or
jns
lret
cwtl
xlat
push
scas
jmp
mov
sbb
cmp
nop
dec
xorb
fistpl
mov
sbb
jp
imulb
orb
add
je
data16
inc
add
sbb
imul
sbb
mov
xchg
lahf
cmp
cs
xor
imul
xor
fcmovne
pop
and
arpl
adc
pushf
cmpsl
inc
inc
cmp
popa
decb
cli
pop
ljmp
mov
icebp
xor
sbb
and
shll
push
pop
arpl
stc
cmpsl
adc
sbb
mov
mov
mov
rorl
mov
mov
test
mov
pop
pop
shr
es
sbb
xor
inc
mov
adc
loop
adc
in
pop
and
idivb
and
adc
xchg
into
inc
adc
jmp
inc
inc
sbb
dec
outsb
std
iret
xlat
cmc
jge
xor
enter
out
adc
in
test
pop
adc
pushf
mov
sub
inc
divb
ss
sub
jecxz
les
xchg
rorb
loopne
cltd
sahf
ds
insl
pushf
iret
in
aas
and
jl
pop
repz
and
outsb
mov
addr16
enter
mov
int3
pop
lahf
inc
in
mov
stos
dec
or
cmc
shrb
arpl
inc
adc
shll
inc
loope
jo
sbb
stc
jo
lock
rorl
mov
lcall
pop
pop
ja
out
daa
add
inc
ret
stos
into
rclb
lret
es
aad
fmuls
mov
cmp
in
iret
cmpl
fwait
sbb
lods
stos
xchg
sbb
mov
negb
inc
fcomi
jb
mov
mov
in
push
movsl
lods
sbb
push
dec
movsb
xchg
cmp
cmc
xchg
hlt
and
add
nop
push
pushf
das
clc
push
sbb
mov
pop
xchg
call
sub
push
sbb
mov
js
js
xor
daa
popf
fadd
es
rorl
fcomps
xchg
loopne
xor
das
adc
test
leave
enter
mov
cmp
cwtl
divl
fdivl
jle
out
pop
pop
cmp
enter
pop
inc
cmp
mov
je
shrb
push
imul
ss
test
es
add
cmp
inc
pop
cmp
add
mov
xor
jmp
je
jge
pop
cmp
and
push
rolb
xchg
mov
pop
and
testb
jb
sub
cmpsl
inc
outsb
mov
pop
sahf
mov
xor
hlt
mov
insb
jne
mov
sahf
call
jae
mov
jno
pop
mov
push
inc
insl
subb
cmp
inc
repz
mov
loopne
test
test
dec
mov
push
cwtl
rcll
mov
pop
mov
lock
cmc
xor
popa
push
out
testb
mov
insb
jnp
dec
jnp
mov
fisubs
in
stos
ret
pop
popa
dec
repnz
xchg
mov
test
rcl
mov
loopne
rolb
inc
pop
and
adc
daa
rcll
mov
xlat
add
xor
add
xor
stc
dec
jmp
insl
cmp
sbb
in
iret
jne
ja
mov
jae
mov
cs
lea
clc
mov
add
inc
dec
out
aas
push
mov
jle
dec
pusha
ss
cmc
sub
sti
std
call
call
ret
add
jl
dec
and
ret
icebp
or
movsb
fistl
xor
mov
mov
mov
vorps
das
or
mov
mov
hlt
xchg
stos
mov
fistl
out
dec
neg
sti
int
xor
adc
cmovae
and
push
cmp
jno
icebp
jecxz
push
test
hlt
cli
push
jle
test
and
or
hlt
sbb
push
pop
stos
sub
mov
sub
push
jo
icebp
mov
lods
in
adc
push
xchg
arpl
jmp
cs
nop
and
sub
loopne
add
xor
aad
aaa
jp
mov
sti
daa
ja
test
aaa
sti
mov
mov
in
mov
cmp
or
adc
pop
mov
in
cli
cmp
push
popf
add
daa
jno
push
popf
push
stc
xorb
cmp
nop
inc
pop
rorb
xlat
xor
int
mov
mov
cmp
shlb
jg
out
push
int3
fcoml
out
mov
ret
flds
and
jbe
cld
repnz
movsl
xlat
xchg
or
jbe
jge
cmp
inc
inc
stos
adc
loope
ret
stos
out
pop
arpl
int
add
push
or
mov
mov
sahf
sbb
mov
lahf
in
das
pop
jne
dec
cmpsl
aaa
std
je
dec
jne
or
pop
add
ret
in
adc
xor
test
jmp
push
lds
adc
inc
popf
jmp
mov
and
push
lahf
add
sbb
fucom
ljmp
add
aaa
adc
fstps
sub
bound
icebp
movl
sbb
repnz
rolb
aad
sub
nop
dec
inc
das
and
fmull
fstl
ds
xchg
xlat
cmp
jbe
lahf
mov
inc
int3
jge
inc
popa
out
mov
cs
xchg
cmp
lock
add
daa
orb
jle
mov
out
shll
sub
sub
fisttpl
roll
mov
stos
push
aad
out
stos
lods
sarl
xor
out
lahf
adc
dec
pushf
adc
ss
les
test
and
lods
das
sbb
xor
ror
push
addr16
out
mov
dec
ret
mov
repz
aam
stc
popf
je
repz
int3
addr16
sbb
sbb
and
xor
and
mov
cmpsl
adc
xor
mov
stc
pop
mov
sbb
fldenv
ret
lods
fucomi
add
push
outsb
shrl
and
stos
mov
pop
sbb
push
sbb
sbb
arpl
lahf
in
fwait
arpl
lahf
pop
test
je
sub
push
sub
inc
xchg
xor
bound
xlat
ret
sti
outsb
shll
pop
xchg
in
jbe
movsb
insb
xor
lods
gs
stc
fimuls
adc
inc
push
imul
mov
ss
mov
pop
and
or
mov
cld
and
mov
push
jmp
add
adc
sbb
lock
cmp
jmp
add
mov
push
inc
sub
push
fcom
insl
repnz
sub
sarl
inc
sub
outsl
out
mov
pop
lcall
fs
mov
mov
leave
mov
jge
lcall
adc
adc
mov
out
push
dec
cli
fimull
and
push
mov
imul
cmp
fs
push
jp
mov
push
cmp
aas
mov
add
and
jecxz
lea
daa
dec
dec
jno
aas
in
or
lahf
fs
jmp
shll
xor
mov
stos
aad
out
gs
mov
xor
inc
popf
sbb
adc
mov
or
mov
mov
pop
jecxz
pop
fdivrs
adc
mov
into
stos
mov
divl
jae
cmpl
cld
imul
in
hlt
movsl
fdivl
in
jg
movsb
cs
loopne
or
loopne
in
sbb
push
or
mov
sub
loope
enter
jno
mov
xchg
xchg
ljmp
lret
inc
insl
fs
outsb
imul
fnstsw
xorb
dec
and
pop
lahf
fisubs
test
or
mov
sahf
pop
add
mov
leave
mov
push
xchg
xchg
and
lret
pop
xlat
scas
clc
cltd
add
adc
inc
lahf
scas
jle
les
outsb
fbstp
pop
ljmp
mov
dec
out
jp
rcrl
pop
fcoml
mov
pop
xchg
fs
push
add
js
cs
int3
int3
push
test
stos
cmpsl
add
inc
fistpl
jp
jnp
int3
aam
inc
xchg
orl
xchg
enter
cmpsb
fisttpl
rcrb
jbe
inc
mov
in
pop
out
push
fstpt
push
lahf
xor
push
nop
sbb
ja
jp
mov
push
mov
repz
adc
rorl
mov
add
and
mov
icebp
or
out
push
aam
jae
xchg
lret
pop
lahf
bound
sbb
pop
cmp
jno
add
jb
push
ss
jns
jmp
in
xor
and
cmc
stos
popa
fcomip
pusha
pop
fstl
xchg
push
shrl
jbe
imul
pop
add
leave
mov
sbb
imul
sbb
inc
jo
ds
xor
xchg
out
sub
call
dec
repz
sar
pop
in
stc
push
gs
cmpsl
xchg
jno
sarl
mov
xchg
rcll
test
test
pop
negl
add
pop
sahf
pop
or
mov
cmp
xchg
xor
push
push
xor
dec
ja
jb
lret
push
push
into
inc
jbe
or
stos
mov
jmp
arpl
pop
test
and
mov
cld
pop
dec
fadd
aad
push
outsb
sub
testb
pop
pop
jl
inc
xor
cli
test
lret
jnp
jne
ds
jp
xor
dec
mov
mov
lea
cmp
stos
cmp
add
loop
inc
in
jg
in
out
rcrl
push
xchg
repz
std
sub
mov
cmp
aas
data16
inc
sub
hlt
sub
xchg
lret
in
push
jb
sbb
jbe
xor
push
jg
imul
loope
xor
jb
stos
icebp
rcrb
pop
mov
pop
movntps
pushf
adc
push
stc
push
sti
adc
mov
jb
aas
neg
xor
lcall
idivb
xor
pop
cwtl
out
test
call
or
pushw
sub
sub
sub
cmpsb
pop
das
xchg
cmpsl
push
out
adc
repz
xor
ret
sub
add
out
sbb
jo
push
mov
xchg
bnd
mov
mov
mov
pop
aad
dec
ret
mov
or
in
outsb
nop
lcall
shrl
sbb
inc
pop
sarl
in
enter
cmpb
push
lock
push
jbe
xchg
adc
push
xchg
jns
mov
lret
or
daa
or
cmp
inc
lods
push
dec
ja
test
dec
or
mov
mov
mov
adc
inc
pop
cmp
pop
ds
mov
push
jge
and
sub
xchg
add
pushf
mov
or
lahf
adc
pusha
movsb
inc
push
mov
pusha
cmp
cmpsl
movsb
xchg
xchg
pop
sub
test
jge
enter
jno
add
push
add
out
jp
lds
push
add
push
mov
flds
hlt
xchg
addr16
mov
xchg
xchg
adc
xor
mov
jns
and
lds
out
inc
or
shlb
jmp
test
jecxz
scas
or
adc
push
movsl
sbb
cmpsb
add
or
bound
imul
inc
mov
ss
dec
mov
test
jne
sbb
out
mov
scas
mov
xchg
jle
flds
lds
xchg
jns
fdiv
movsl
adc
jecxz
shrb
mov
fildl
or
ficoms
cmp
xor
push
cld
int3
scas
or
jbe
loopne
push
imul
jne
pusha
mov
add
icebp
and
dec
jmp
lcall
ret
sub
mov
data16
bound
cmp
jbe
lret
int
scas
mov
addr16
fcoms
mov
add
sub
and
lahf
rcrb
in
xchg
or
jmp
push
mov
pop
xchg
mov
imul
or
in
jmp
mov
dec
rorl
xchg
adc
mov
lret
stos
push
cmp
aad
fdivs
std
push
pop
inc
mov
shll
dec
jbe
dec
jnp
stos
mov
cld
mov
mov
xor
test
adc
mov
and
ljmp
out
sub
stos
gs
mov
lds
andb
sub
int
daa
dec
adc
inc
cmpl
fsubl
fldenv
ljmp
or
shll
or
jno
mov
xlat
push
nop
jnp
jg
mov
xor
xchg
aas
fmuls
test
dec
in
lds
les
mov
repnz
aas
gs
cltd
in
push
jb
dec
pop
fists
inc
jg
lea
shl
jbe
xchg
repz
xlat
arpl
xor
inc
and
testb
add
inc
add
fisttpll
cmp
test
ret
lds
scas
xchg
rcl
cmpb
lret
ss
dec
mov
or
cmp
sahf
cmp
xchg
add
popf
inc
jae
test
cmp
adc
imul
and
insb
xor
test
fsubl
imul
ja
add
dec
inc
sub
imulb
push
bound
mov
jp
sbb
sbb
mov
lods
xor
push
stc
test
notl
xchg
inc
sbb
add
mov
lahf
or
xorb
pop
mov
lods
xchg
mov
mov
test
pop
dec
movsb
loope
xchg
sbb
add
sub
pop
nop
xchg
jl
mov
lret
hlt
stos
cwtl
mov
adc
push
or
jbe
lock
outsb
add
mov
out
int3
inc
jmp
cwtl
jge
xchg
jecxz
cmp
jge
shl
sbb
in
mov
xor
dec
rol
stc
es
push
fadds
fsubrl
inc
pushf
or
sarl
stc
push
cmp
test
jmp
adc
incl
fldpi
pop
adc
inc
jp
mov
decl
dec
out
cs
sbb
daa
mov
out
test
bound
mov
aas
loopne
cmp
pop
xchg
jo
jge
mov
or
test
fadds
adc
lods
ljmp
leave
insl
add
jbe
xchg
jbe
mov
xor
add
imull
test
stos
out
cmp
movsb
xchg
hlt
cmp
sbb
and
jle
xchg
sub
aam
jecxz
push
cmc
xchg
pop
lret
push
test
pop
add
mov
mov
inc
ret
bound
xchg
and
insl
pop
shl
xor
mov
not
dec
js
add
cmp
xchg
out
les
loopne
or
aaa
sbb
in
dec
mov
mov
arpl
fs
data16
frstor
and
daa
jmp
lcall
mov
sub
mov
cmp
jno
xor
push
dec
dec
sar
xchg
test
jb
arpl
jbe
inc
hlt
jb
jge
add
jp
dec
jl
xor
fstps
push
dec
mov
mov
add
pop
pop
jl
sbbb
push
in
xor
xor
pop
outsb
mov
xchg
add
jg
pop
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
call
or
adc
xor
mov
xor
or
sub
xor
xorl
xor
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
jmp
push
shl
dec
jne
sub
lods
hlt
ret
lahf
xchg
adc
pop
adc
push
mov
ljmp
jbe
lahf
mov
leave
cmc
and
xor
aad
call
or
jl
pusha
or
mov
sbb
sbb
sti
movups
repz
stos
cmp
xchg
fnsave
pop
data16
push
insl
ret
mov
push
stos
mov
loopne
pop
cli
mov
inc
gs
stos
mov
xor
cmpsl
arpl
adc
lods
mov
mov
jne
into
jns
repnz
jl
dec
std
sub
add
mov
mov
xor
sbb
scas
push
ret
aad
cmpsl
clc
inc
lds
rcl
inc
sti
mov
mov
pop
jb
mov
clc
pop
and
nop
hlt
aas
lods
popa
ds
sub
mov
stos
es
inc
mov
bnd
shrl
jbe
test
lcall
int
dec
test
scas
adc
incb
cmp
lret
lds
aas
xor
cmp
cmp
sub
add
inc
pushf
mov
into
or
mov
in
mov
add
cmpsb
xlat
xchg
pop
div
lods
push
cmp
aam
dec
test
xchg
ja
xchg
xor
cwtl
inc
jmp
out
add
popa
xchg
dec
test
mov
push
sub
mov
mov
fs
test
xchg
sbbb
rcr
fldcw
mov
imul
cmp
xchg
popa
pop
cld
jl
pop
inc
pop
add
xor
inc
inc
push
cwtl
push
cmp
pop
mov
add
lock
xlat
mov
xor
adc
lock
stc
ret
xchg
aam
xor
push
sub
cmc
xorl
xor
aaa
add
jmp
xchg
fistpl
pop
mov
and
dec
push
and
mov
jo
sbbl
sub
out
adc
rcrl
insl
shrl
ljmp
test
pop
mov
jge
arpl
cmp
add
xchg
mov
jmp
into
imul
orl
jp
sbb
rcrl
inc
mov
adc
mov
sbb
xlat
dec
and
inc
push
test
pushf
add
out
mov
ret
inc
xor
push
inc
test
lahf
mov
pop
mov
jmp
sub
adc
cwtl
roll
sarl
inc
rcrb
outsb
mov
xchg
cmp
cmpl
inc
mov
and
xchg
jp
mov
ja
push
mov
das
fwait
clc
fdivp
adc
scas
adc
pop
mov
mov
cli
icebp
stos
js
push
rcrl
fcmovb
and
shll
fmul
lahf
out
and
push
cmp
lret
push
lods
xchg
fildll
and
xor
fs
inc
sub
xchg
jecxz
sub
mov
mov
adc
mov
sbb
xchg
ret
popf
adc
ror
enter
jl
outsl
in
push
inc
inc
and
stos
lods
sub
std
fdivs
lods
shr
aad
fdivr
or
cmp
add
push
aad
jne
rcll
fistps
mov
ret
and
daa
jo
push
test
sub
bound
xchg
jle
xor
jne
sbb
cmpl
jl
enter
fsts
jno
xchg
lock
add
mov
mov
ds
jo
and
mov
sbb
aas
fwait
out
push
pop
fs
jns
in
jmp
push
sbb
repz
into
dec
lret
enter
adc
clc
ds
sbb
pushf
testl
push
js
dec
jmp
sub
jle
loop
cmp
in
sbbb
push
movsl
insb
and
loop
jns
xor
jns
cli
lret
xor
fs
or
movsb
xlat
xchg
lods
jbe
in
pop
cltd
push
mov
lret
sub
add
das
cmp
mov
jo
pop
jb
cmp
mov
xor
daa
or
sbb
es
sbb
fwait
push
lods
mov
mov
and
leave
cmp
xor
fnsave
add
notb
mov
jecxz
iret
lock
scas
clc
pop
push
and
jno
jmp
roll
test
clc
call
aaa
sub
movsl
mov
aad
cli
test
out
ret
push
shrl
xchg
jb
push
stc
inc
incb
into
push
cmpsb
lods
pop
pushf
sub
cltd
cld
fimull
xor
lds
movl
xchg
sbb
int3
test
xor
mov
enter
js
loopne
lret
push
sbb
das
cmp
mov
add
in
or
dec
int
das
in
xchg
cmc
int3
inc
inc
das
test
lret
aam
mov
xlat
dec
call
test
xor
cli
add
sbb
sahf
and
mov
clc
mov
xor
daa
mov
inc
fstl
lret
or
xchg
mov
test
imul
int
enter
jg
shll
rcrl
js
rcll
mov
xchg
and
and
jg
jle
cs
sub
push
dec
clc
mov
xchg
pop
nop
push
roll
sarb
shll
inc
sbb
jo
cmp
insl
add
mov
stos
int3
add
mov
icebp
pop
mov
mov
setnp
outsb
mov
arpl
inc
xchg
ljmp
mov
imul
pop
cld
insl
test
push
mov
xchg
rclb
inc
push
mov
adc
in
push
jle
sarl
mov
cmc
std
pushf
sarb
xor
mov
test
stos
mov
or
aad
cld
in
mov
xchg
xchg
inc
xlat
adc
xchg
ja
and
pop
pushf
fadds
popa
stos
fisubs
jnp
or
out
js
aad
inc
xor
xor
adc
pop
mov
dec
movsl
inc
push
jne
shlb
jbe
in
xchg
jle
lahf
test
leave
negl
xchg
orl
inc
lds
push
or
bound
sub
xchg
dec
push
gs
adc
fwait
dec
or
js
jo,pt
fstpt
push
and
stc
mov
mov
push
jb
in
imull
adc
cmp
pop
sbb
nop
dec
mov
addl
mov
jp
test
loopne
enter
push
xchg
loopne
mov
mov
mov
mov
lret
push
stc
pop
jg
pushf
stos
xchg
jle
fnsaves
in
cltd
std
dec
incl
test
shrb
in
cmp
mov
mov
dec
adc
or
jg
mov
jno
repz
addr16
dec
mov
movsb
mov
mov
xchg
jae
js
jae
movsb
mov
xchg
or
ret
inc
push
mov
pop
in
roll
stc
mov
push
sub
sub
popl
push
mov
shlb
mov
notl
jecxz
add
jnp
popa
push
mov
pusha
pop
iret
push
mov
inc
out
dec
sbb
cmp
test
mov
adc
test
or
mov
xor
cltd
mov
inc
imul
mov
jg
rcl
insl
jbe
je
jae
insb
adc
push
fwait
jle
dec
jnp
cmp
pop
mov
xchg
mov
cmpsl
movsb
fbld
xchg
fldenv
cmp
call
dec
push
xor
mov
mov
xchg
iret
mov
stos
lahf
mov
movsb
sub
ja
out
sarb
dec
xlat
imul
adc
sub
ret
insl
les
mov
bound
xor
xlat
add
test
pop
mov
sub
mov
cwtl
pop
xchg
dec
mov
ja
insb
jle
mov
enter
xor
xor
pop
stos
dec
adc
sbb
stos
mov
cmp
scas
xor
insl
and
mov
lahf
or
inc
sbb
stos
lods
mov
rolb
fcmovne
js
and
fcmovu
push
psubb
icebp
xchg
sti
dec
push
mov
xor
dec
sahf
clc
insb
mov
stos
dec
nop
out
cmpl
notb
iret
je
dec
add
mov
in
mov
jl
fnstenv
add
loop
or
jo
jnp
inc
pop
mov
clc
or
add
xchg
in
xchg
mov
jne
jne
push
in
loope
jmp
sbb
popa
pop
ljmp
adc
pop
scas
push
inc
jge
cld
fldl
add
fsubrl
xor
lcall
push
aas
loop
fsubs
adc
lcall
dec
jae
pusha
mov
mull
ja
pop
aam
cmp
mov
push
into
leave
xchg
aam
adc
add
mov
fmuls
mov
jne
jbe
sahf
fmulp
test
jo
mov
les
pop
out
mov
data16
sub
fmul
jg
add
enter
dec
add
sbb
pop
mov
shlb
mov
push
push
mov
sub
jg
testb
add
or
or
mov
and
inc
jns
dec
mov
cmova
orl
addl
and
icebp
or
dec
div
lahf
dec
cmp
jne
jae
jno
outsb
mov
cmp
xchg
inc
pushf
sub
pop
shrb
jl
aam
jmp
cld
test
in
and
push
sbb
pop
add
loop
inc
dec
into
loop
pop
and
dec
add
scas
pop
xor
mov
sub
hlt
cmp
xor
ss
loopne
mov
or
inc
dec
test
mov
lods
cmp
pop
add
lret
or
test
enter
popa
mov
add
add
push
xor
ficomps
shrb
sbb
lahf
push
sub
icebp
int3
enter
insl
inc
push
test
das
out
push
mov
jne
push
sbbl
fildl
insb
aaa
and
test
call
ror
sbbl
std
dec
rcll
repnz
stos
jle
xor
pusha
jl
adc
mov
add
push
push
jo
mov
in
out
inc
and
enter
and
push
and
and
mov
inc
je
mov
push
divb
xchg
jl
pop
inc
imul
stos
and
lea
jg
cmp
addr16
pop
ret
adc
sub
mov
sub
scas
ss
sbb
pop
mov
mov
xchg
pusha
jnp
xlat
sbb
test
pop
xchg
clc
js
inc
dec
or
subl
xor
arpl
mov
ror
dec
scas
xchg
or
pushl
dec
mov
cmp
push
sbb
iret
test
xlat
inc
jns
lods
in
frstor
sahf
adcb
ljmp
xor
cmp
mov
and
lret
mov
xor
test
test
std
daa
insl
testl
sub
scas
pop
iret
in
call
out
daa
sbb
xor
popa
inc
jno
in
jg
int
xchg
add
inc
jmp
int3
jae
or
call
dec
lea
jp
cmpsb
pop
mov
xor
mov
lcall
mov
repnz
or
pop
jp
sub
jb
int
lcall
push
xchg
mov
ss
out
pop
add
jbe
aad
xchg
sub
pop
xor
jne
pop
fiadds
pop
jbe
mov
fsubrs
and
push
cmpsb
and
and
sub
pop
aad
sub
cmpsb
lret
add
and
ds
add
jp
push
adc
aas
fwait
jp
dec
xor
fxch
push
incl
mov
lcall
sub
gs
mov
sub
fistpll
or
dec
adc
fisubrl
loop
fistps
mov
push
sbb
and
mov
cld
sbb
fdiv
int
push
stc
flds
adc
mov
cmp
push
loop
push
fs
mov
fldenv
pusha
ja
aaa
jecxz
stos
xor
lahf
mov
lret
push
aas
push
leave
pop
sysenter
pusha
ret
sbb
push
dec
xchg
sbb
cmp
mov
test
movsl
push
test
push
iret
jg
lock
jle
or
mov
sbb
clc
dec
inc
mov
hlt
repz
dec
push
or
lds
xor
js
cmpsb
inc
jne
call
sahf
pop
push
aas
xlat
jle
push
icebp
sahf
imul
cmc
lret
mov
push
inc
jae
ss
pusha
mov
je
int3
cs
push
xor
jmp
outsl
jne
cmpsb
rcrb
mov
push
decl
test
pusha
adc
lahf
loop
inc
jae
inc
lahf
jne
sahf
std
sbb
sub
push
jne
cmp
lea
jmp
in
jbe
jmp
loopne
pop
jle
aad
dec
push
dec
push
sub
ljmp
cmp
fidivrs
cmp
shlb
jb
fcmovb
lret
daa
scas
sub
repnz
push
and
mov
mov
test
xchg
mov
in
mov
lds
clc
shl
inc
repz
inc
movl
outsl
bswap
call
cmpsb
je
out
mov
push
es
mov
mov
aas
fimull
pushf
xlat
clc
mov
push
popf
enter
xor
xor
jmp
fmull
mov
mov
shll
dec
clc
leave
jnp
pop
daa
sub
fistps
mov
sti
outsb
push
mov
jno
into
scas
cmp
aaa
iret
pop
mov
cltd
test
test
cmpsb
scas
rcl
ret
add
or
jmp
inc
pushl
push
mov
outsb
jb
jnp
shrl
xlat
jne
sbb
adc
and
stos
shlb
push
and
iret
daa
jno
jbe
mov
imul
sahf
inc
add
mov
or
out
adc
insl
xchg
mov
sti
mov
lock
jb
pop
mov
jo
test
adc
mov
mov
dec
addr16
push
into
popf
bound
mov
xchg
pop
push
pop
stos
or
push
cwtl
sub
mov
lods
jno
xlat
fsubrp
push
mov
cmp
cmp
mov
mov
dec
bound
inc
adc
ds
or
movsl
sub
or
mov
jnp
iret
pop
dec
xchg
cwtl
scas
dec
push
mov
lods
pop
pop
jge,pn
mov
and
push
ret
insb
xchg
cltd
rcr
daa
movsl
and
test
mov
lea
icebp
lods
mov
out
mov
dec
fwait
ds
jecxz
xchg
in
sbb
push
or
add
adc
enter
je
or
jmp
rorl
jg
ss
jns
jle
lret
dec
push
lea
dec
loop
test
loope
test
decb
mov
and
xor
mov
push
pop
dec
aad
dec
loop
inc
xchg
adc
jg
inc
mov
mov
sub
or
mov
in
jnp
cmp
in
imul
fprem
xchg
push
or
jne
add
push
or
or
push
movsb
push
adc
outsl
xor
push
sbb
pop
mov
or
mov
dec
orl
dec
ret
aaa
xchg
test
leave
aam
push
or
mov
lock
orb
jmp
xor
pop
jle
movb
pop
inc
fwait
dec
pop
out
mov
lods
cmp
shl
aas
scas
in
adc
into
stc
xor
ja
lahf
xchg
jnp
pop
cli
pop
dec
mov
sbb
xor
xchg
push
mov
jo
aaa
js
cmp
pushf
cli
outsb
fnsave
jns
push
jns
mov
aam
jo
mov
cmpsl
rorb
sbb
inc
inc
push
sti
mov
jge
aaa
jmp
nop
pop
rcrl
add
sbb
mov
cltd
test
jbe
jne
popa
out
dec
add
pop
outsl
inc
pusha
xchg
jmp
xor
sbb
in
xchg
out
cmc
jnp
mov
mov
aad
sbb
sub
cmp
jbe
sbb
jecxz
dec
mov
xchg
pop
dec
push
xchg
enter
lock
push
daa
push
lcall
loopne
xor
or
rcrl
bound
cltd
jp
cmp
test
jno
int3
dec
push
iret
sbb
mov
arpl
test
mov
adc
and
dec
sbb
inc
and
lea
mov
cld
jecxz
push
gs
call
add
hlt
xor
add
vpsubusw
pop
jge
xor
and
sbb
dec
shrl
iret
cld
rcrl
xchg
xchg
loope
sbb
ljmp
xor
or
xchg
dec
js
mov
cltd
and
push
lret
pop
popa
aaa
sub
loopne
in
xchg
or
push
mov
imul
xchg
mov
mov
faddp
js
les
cmp
divb
push
or
xchg
out
cmpl
mov
cmc
or
test
jl
and
out
jnp
and
ret
add
stos
movb
cmp
sbb
pushf
cmp
xchg
sbb
ffreep
movsb
leave
push
xchg
lods
js
jmp
ret
ffree
popa
add
loopne
fcomp
cmp
faddl
loop
xor
inc
mov
xlat
and
movsl
fisttps
cs
inc
imulb
outsl
fidivrs
or
sahf
sub
add
dec
sbb
xchg
xchg
mov
test
insb
cmpsl
mov
outsl
out
mov
cmc
or
stos
test
mov
pop
mov
push
repz
inc
jne
mov
pop
aas
sbb
pop
in
inc
rcr
movsb
ljmp
mov
inc
fwait
mov
test
or
cmc
adc
pop
push
xchg
andb
out
dec
or
mov
inc
rcr
pop
xchg
fisubs
insl
cltd
mov
mov
xchg
iret
sub
xchg
sahf
hlt
jle
sbb
mov
xchg
cmpsl
ds
sbb
xorl
dec
inc
popa
jns
in
mov
ret
push
and
cmp
rorb
divb
mov
adc
daa
jnp
lds
je
sbb
outsl
pop
aas
dec
xor
incb
dec
fs
es
sti
jmp
lods
adc
mov
xchg
or
inc
daa
fisubrs
ficompl
inc
jp
fsubl
jp
cli
scas
loope
repnz
fs
pop
addr16
mov
jl
pop
or
outsb
jp
sbb
int3
fwait
push
mov
data16
jle
jg
mov
popf
out
cmp
loope
stc
jl
mov
shrb
ficomps
fdivs
out
fbstp
sub
popa
jb
test
cmp
and
mov
adc
dec
fs
fwait
aam
xor
add
sbb
dec
inc
fwait
add
jb
add
jmp
sarl
mov
push
pop
dec
data16
in
mov
lret
push
or
or
mov
sbb
fisttpl
int
mov
jmp
rcrb
inc
push
lock
dec
in
fldl
outsl
push
pop
push
stos
adc
adc
pop
inc
insb
inc
lret
inc
xor
mov
sbb
ja
fcmovne
lret
push
in
xchg
stos
adc
sub
lret
in
xchg
add
call
lods
cmp
xchg
pop
rorb
dec
sbb
xor
jg
xchg
mov
aaa
jbe
popa
cmc
dec
inc
jbe
push
adc
aas
mov
dec
sahf
push
xchg
jno
pop
xchg
xor
scas
fstpt
add
xchg
lret
dec
xor
xchg
ret
cld
movsb
cmp
add
bnd
cmp
pusha
mov
loope
stc
cmp
mov
pop
mov
out
inc
mov
add
lcall
dec
dec
pop
arpl
dec
cs
sub
out
les
scas
fstl
push
in
lret
ret
add
inc
gs
icebp
rolb
mov
lods
pop
cmp
arpl
cmp
cwtd
mov
imul
hlt
inc
mov
add
jo
sarl
scas
jne
or
cmp
or
push
xchg
push
xchg
test
inc
adc
test
idivb
ljmp
push
mov
movl
push
int3
sar
fimuls
decb
pop
clc
andb
add
add
idiv
dec
xchg
fildll
mov
mov
cmc
or
and
sbb
sti
pop
cwtl
jo
mov
scas
addr16
pop
ret
mov
inc
sub
imul
and
push
jg
jmp
push
bound
xor
adc
inc
xor
mov
xchg
inc
mov
or
mov
ds
std
push
daa
or
mov
int3
into
bound
insl
scas
push
in
push
aam
push
and
mov
lcall
add
cwtl
xor
push
insb
xor
jecxz
lock
cmp
mov
inc
mov
push
rolb
pop
xor
outsl
jo
aad
mov
xor
subb
lock
ret
cwtl
int3
cltd
xchg
xchg
or
mov
push
in
arpl
mov
mov
dec
cmpsl
xlat
cmp
push
shll
lret
xor
xor
leave
scas
test
cmp
mov
mov
sbb
inc
inc
xor
jnp
outsb
shll
lock
xchg
ss
dec
setle
fimull
pop
aas
jae
outsl
jge
rorl
lds
out
lea
fisubrs
jne
daa
jmp
loopne
sti
push
enter
ljmp
jnp
das
insl
mov
sub
arpl
jbe
cs
fnstenv
fwait
in
sub
out
aad
in
popa
push
shlb
and
and
pop
test
loopne
push
into
aaa
push
pop
push
add
pushf
and
mov
or
fbld
in
movsl
les
mov
adc
cmp
sub
sub
dec
mov
add
xlat
jno
mov
cmovle
dec
pop
into
shll
sti
out
cwtl
dec
stc
push
icebp
movsb
inc
lahf
jl
or
lret
xchg
icebp
test
push
pop
movsb
jmp
xchg
add
shrl
inc
and
repz
data16
insb
in
in
loop
ljmp
add
sarb
insl
jg
mov
inc
nop
cmp
mov
fisubl
rolb
push
and
adc
addr16
mov
cwtl
sbb
dec
jl
cmpsl
jb
add
imul
test
ljmp
jmp
fdivs
mov
and
fildll
pop
imul
jbe
out
adc
pop
ljmp
add
insl
mov
jecxz
insb
push
mov
fisttpl
fisttpl
mov
in
popf
mov
and
inc
scas
push
aas
stos
push
out
push
mov
je
lret
push
add
popf
in
das
pop
xor
sub
ss
loope
aas
pop
xlat
popa
sub
mov
sbb
ss
mov
nop
inc
push
pop
xchg
adc
stos
push
push
out
pop
inc
stos
frstor
cld
fnsave
notl
push
in
or
fs
push
daa
xchg
imull
jp
jle
jp
xchg
xchg
push
xchg
push
pop
add
jo
je
lods
iret
lahf
and
dec
xor
xor
iret
aaa
adc
cmc
mov
xor
push
outsb
sbb
mov
pop
jb
mov
pushf
inc
std
ds
gs
mov
push
aad
test
pop
jnp
dec
sub
push
dec
out
dec
pop
inc
sbb
pop
es
movsb
sbb
dec
xor
xlat
jle
jecxz
outsb
repz
push
in
jl
or
pop
jne
dec
loop
xchg
out
jp
cmp
fstps
frstor
inc
movsb
scas
outsl
xor
sub
popf
cmp
xchg
adc
imul
push
mov
int
add
int
sbb
cmp
into
jnp
test
xlat
sti
in
xorps
pop
arpl
jecxz
outsb
mov
xor
dec
cmp
clc
dec
xchg
xchg
mov
mov
jbe
out
xchg
dec
jmp
jb
xor
adc
movups
sbb
jns
lods
pop
add
fisubs
pop
mov
sbb
out
sub
fcoms
mov
push
jb
outsb
in
jmp
push
mov
pop
mov
xchg
mov
dec
ss
mov
mov
add
hlt
aas
das
add
and
sbb
hlt
std
and
mov
adc
addr16
ja
into
mov
test
popa
or
jge
push
ja
out
pop
arpl
dec
jp
stc
je
sub
dec
dec
add
push
cli
cwtl
sbb
mov
sysexit
stos
fldenv
xchg
sub
fstps
cmc
xchg
xchg
arpl
sbb
mov
inc
pop
pop
imul
adc
or
std
jne
fldl
xor
adcl
xor
mov
cld
push
pop
mov
and
dec
stos
cs
sahf
xor
sub
dec
lret
adc
dec
in
xchg
ret
ja
dec
xor
loope
mov
push
cld
mov
cmp
mov
push
adc
mov
cmc
dec
mov
pop
pop
xor
pop
in
dec
sub
cld
repz
jecxz
rolb
lret
sub
inc
push
icebp
lret
xchg
lret
adc
push
mov
rcl
cwtl
enter
pusha
je
cmp
inc
cmc
jmp
pop
and
test
cmp
fbld
or
mov
push
mov
das
mov
push
fldl
mov
or
fdivl
lahf
xchg
mov
sbb
faddl
mov
xor
pop
in
mov
xor
mov
and
xor
fwait
daa
xor
mov
adc
jecxz
xchg
ja
mov
adc
jbe
inc
mov
cs
push
es
cmp
in
mov
pop
dec
or
into
jecxz
add
nop
mov
aaa
xchg
incl
aas
ret
sbb
mov
xor
jmp
mov
movsl
mov
pop
and
cmp
add
dec
mov
nop
loope
pushf
sbb
jnp
lds
hlt
aam
clc
sub
lods
fsubrp
dec
pusha
stos
pop
or
and
cmpsl
and
jne
mov
sbb
dec
enter
jge
lcall
stos
mov
jns
loope
jecxz
xor
bound
cwtl
cmp
inc
add
mov
orl
jns
hlt
div
inc
xor
lds
loop
push
cmpsl
mov
cmp
call
dec
mov
pop
adc
push
movsb
cmp
enter
cmpsb
lgs
xchg
lret
add
bound
mov
inc
sub
dec
out
inc
mov
sub
mov
jge
push
jno
int3
and
lcall
adc
mov
xor
clc
stos
pop
mov
test
into
lret
xchg
sub
push
xor
jge
aad
or
or
and
mov
push
push
mov
je
push
js
stc
cld
jle
sub
xchg
mov
test
loope
jnp
std
sbb
or
xor
es
ljmp
jg
js
test
lret
xor
pop
sub
movsb
insb
lcall
insl
lahf
push
rol
aaa
xchg
movsb
jmp
js
push
mov
jae
scas
scas
and
orl
jle
insl
dec
stos
test
mov
jp
out
mov
push
jmp
out
push
xor
in
rorb
xchg
fmuls
gs
sub
dec
aam
sub
mov
or
loop
shlb
leave
mov
mov
xor
mov
ds
push
ret
pusha
inc
and
lock
lret
add
in
daa
jnp
sub
push
mov
sub
mov
mov
call
js
femms
mov
incb
bound
int3
lret
mov
adc
dec
adc
fwait
outsb
dec
aas
add
ja
cli
out
xchg
out
pop
add
aas
mov
xor
xchg
lock
jecxz
jmp
push
cmc
imul
adc
and
data16
flds
in
fdivs
xchg
xor
in
out
add
mov
adc
push
dec
sahf
popf
add
inc
sbbb
iret
fimull
pop
int3
sbb
hlt
lret
aas
ja
and
and
pop
jmp
dec
xchg
ret
shl
adc
add
push
imul
loopew
popf
cmp
adcl
mov
loop
sti
inc
lea
cltd
fstpt
lcall
scas
sbb
pop
ss
insl
jbe
out
sbb
mov
adc
cmp
mov
add
sarl
imul
jns
cld
mov
mov
rcrl
pop
fwait
lock
pushf
imulb
rcll
or
fwait
sti
inc
xchg
dec
push
pop
sbb
loop
sbb
and
cwtl
add
movsl
mov
cmp
push
or
stos
dec
pop
aam
je
aas
inc
roll
fimull
xor
xchg
sbb
mov
out
adc
pop
ss
mull
adc
jnp
xchg
popf
pop
dec
and
stos
roll
fistl
push
add
bound
xor
shrl
mov
and
push
mov
mov
fstpt
mov
dec
out
inc
jo
xchg
pop
pop
out
shll
cwtl
std
or
outsb
xchg
sbb
aaa
stc
mov
mov
cmp
pop
addr16
or
data16
lahf
push
dec
fcoml
push
stos
cmc
les
inc
cld
jmp
sub
mov
fstpt
cmp
adc
adc
push
xor
xchg
mov
popf
fs
mov
scas
sub
xchg
addr16
arpl
loopne
mov
pop
xor
jb
das
cmp
xchg
gs
in
cli
inc
mov
add
leave
jbe
lret
mov
push
shl
insb
pop
shll
xor
pop
jp
sbb
pop
sarl
fldt
divb
mov
out
sub
shlb
scas
mov
loope
cmp
ds
and
jle
insl
inc
popf
inc
mov
dec
test
sbb
sbb
shl
stc
jnp
mov
rcrl
sub
xor
cmp
mov
sub
xor
std
ja
mov
or
popl
xor
adc
lahf
mov
jne
jecxz
lret
in
xchg
mov
divl
xor
push
xchg
sbb
xchg
pop
or
repnz
inc
xchg
and
push
outsb
dec
insb
inc
lcall
rorl
mov
xor
mov
xor
daa
and
into
int3
jno
add
push
mov
movsb
add
into
jo
dec
jnp
xchg
mov
loope
dec
sahf
jmp
mov
mov
mov
imul
mov
jb
sbb
cmp
cwtl
dec
icebp
shl
sarb
test
icebp
testb
call
jno
adc
add
popa
inc
and
inc
sti
subb
mov
test
inc
testb
aam
jg
lret
or
xchg
ret
mov
sub
mov
or
aam
imul
mov
mov
shll
shll
shl
popf
mov
mov
je
xchg
sti
les
sbb
insl
and
fldcw
sbb
dec
lret
pop
insl
popa
testl
jb
jg
dec
jb
addr16
ds
ljmp
iret
xchg
sbb
int
inc
mov
inc
push
lcall
push
loope
add
repz
add
sbb
pop
sbb
cltd
mov
sbb
xorl
jl
push
mov
fisubl
sbb
mov
jb
nop
nop
movsb
shrb
add
mov
xor
and
cld
sbb
jb
incl
pop
mov
popa
lret
cmp
inc
push
addb
adc
fsubrl
pusha
fdiv
ja
pop
mov
movsl
outsl
dec
xchg
insb
inc
cmp
into
jmp
stos
xorb
pop
repz
jo
inc
mov
push
or
lods
sub
test
fnsave
int
pushf
cmp
and
push
mov
addl
jecxz
jg
xchg
inc
pop
negb
scas
call
fldenv
mov
rcrb
and
mov
pusha
adc
cltd
push
andl
pusha
fimuls
xchg
add
jmp
push
and
pop
push
in
dec
push
shll
and
jae
xchg
mov
ds
scas
jbe
mov
adc
sbb
daa
mov
repnz
xchg
jnp
jo
push
cmp
dec
in
enter
pop
push
push
lret
inc
sarb
in
and
sar
xlat
lds
mov
cld
pop
xchg
les
sarb
bound
and
cmp
fcomi
xor
loop
add
push
jns
mov
cmp
mov
xchg
mov
imul
rcrl
and
nop
mov
xchg
mov
jecxz
adc
iret
push
rcrb
ret
and
sbb
push
or
jns
or
adc
xchg
out
push
mov
jmp
xchg
jl
mov
xlat
dec
sub
out
and
fwait
dec
cmpsl
clc
fsubrl
cld
mov
rcrb
add
jl
sub
out
mov
lods
jmp
pop
rolb
iret
out
pop
push
push
pop
or
out
and
cmpsb
pop
hlt
int3
pop
jp
xor
mov
test
shll
adc
or
mov
aad
repz
dec
mov
or
icebp
cmpsb
jns
aad
cmp
ficoml
mov
inc
push
insl
xchg
ror
jae
ss
scas
hlt
rcrl
stos
out
push
outsb
mov
adc
inc
bound
aaa
gs
aam
pushf
push
jnp
pop
lock
dec
mov
inc
mov
add
mov
jbe
sbb
mov
ret
inc
inc
or
popf
adc
push
mov
xlat
pop
icebp
adc
aad
sti
pop
ljmp
nop
add
jbe
fildl
aaa
aaa
mov
out
das
or
pop
xlat
dec
push
xchg
cmp
xor
jp
adc
outsb
or
dec
movsl
and
sub
add
cmp
mov
lods
loopne
dec
sub
sahf
pop
incb
pop
imul
pop
inc
mov
sbb
push
pop
popf
fstpt
sahf
cmp
das
pop
inc
test
mov
pop
and
inc
mov
adc
es
call
fcmovbe
lods
mov
mov
cmpb
aam
sbb
cmp
dec
pop
popf
sbb
mov
adc
in
or
insb
or
fdivrl
pop
xlat
std
pop
cltd
pop
das
jae
fistpl
ss
mov
pop
sub
or
sti
mov
adc
push
xchg
xlat
pop
xchg
imul
or
adc
ja
push
jg
stc
xchg
jns
mov
xor
xchg
aaa
mov
push
data16
stc
xchg
add
lds
imul
adc
adc
andb
fwait
mov
mov
inc
daa
pop
inc
jge
xchg
lods
cltd
mov
ja
pop
imul
xchg
jecxz
push
jl
lret
push
jo
mov
fildl
das
adc
lret
out
ds
psubusb
push
nop
mov
push
adc
cmc
in
mov
sbb
mov
sub
pop
test
cmp
notl
in
mov
enter
inc
cmp
cmp
ret
les
popa
mov
shll
pop
mov
inc
mov
adc
into
aad
in
cmp
je
dec
adc
scas
jg
pusha
arpl
mov
fnstsw
pop
lock
and
daa
push
lcall
xchg
loope
sbb
fcompl
stc
sti
add
xchg
mov
outsl
aaa
mov
shl
test
lahf
int3
xchg
jle
into
in
outsl
sti
aad
xor
test
or
adc
loope
mov
ds
jbe
pop
cmp
fwait
das
aam
mov
mov
test
fwait
and
mov
pop
aas
gs
daa
push
mov
mov
les
push
jne
iret
daa
outsl
outsl
insb
scas
mov
inc
cwtl
sarl
push
push
fiaddl
push
adc
in
cmp
sbbl
pop
pop
addr16
enter
cmp
xchg
cltd
insl
cmp
cmp
mov
notl
mov
mov
lds
das
out
divb
iret
bound
ret
pop
and
orl
xchg
xor
ljmp
cmp
lret
clc
pop
sub
incl
js
dec
out
rcll
repz
mov
inc
mov
mov
out
push
sbb
jp
enter
mov
jl
rorb
dec
xor
mov
mov
mov
and
sbb
shll
mov
xchg
xor
ja
jb
test
cmc
lretw
popa
sub
fsubl
lods
sbbl
mov
out
sbb
xor
adc
loope
imul
sahf
mov
cs
sub
push
lea
shlb
into
stos
jbe
push
pusha
or
sub
adc
or
or
or
loopne
mov
test
ficoms
scas
lret
cmp
pop
mov
mov
sbb
xchg
xor
and
test
lahf
jne
in
enter
leave
or
pop
dec
pop
aam
stc
cmpsb
add
daa
fwait
js
mov
mov
push
add
sub
jle
fldt
fwait
pop
xchg
mov
sbb
xchg
cmp
mov
sti
dec
negb
mov
push
lea
scas
jno
xchg
scas
insl
push
lods
add
fmull
xor
mov
sbb
and
inc
cmp
sub
and
jg
jae
fiaddl
int3
add
out
pop
cmp
add
xor
hlt
cmpsb
cmp
test
pop
ret
leave
and
sub
test
jle
cmp
pop
dec
daa
push
test
inc
mov
sub
repz
adc
xchg
dec
sahf
sub
loop
dec
xchg
test
mov
mov
mov
mov
push
jmp
jbe
add
pop
pop
fnstsw
push
cld
mov
std
outsb
test
repz
sbb
jb
insl
ret
mov
rcr
xchg
and
push
popf
xor
movsb
cmp
clc
sub
push
ds
movsl
in
cmpsb
sbb
mov
dec
mov
xor
cmp
das
and
mov
mov
mov
mov
mov
mov
or
jb
jo
sbb
inc
mov
adc
jbe
aad
push
lods
popa
lret
inc
push
incl
inc
add
xchg
int
xorl
push
dec
and
ret
outsl
cmpsl
xchg
insl
fwait
pop
stos
mov
das
out
inc
das
inc
int
adc
aam
jl
into
inc
and
addr16
stos
pop
fiaddl
sahf
aaa
dec
leave
out
sub
mov
out
dec
icebp
ja
cmp
push
pusha
lcall
sbb
sar
mov
lds
lock
lods
pop
ret
gs
or
push
aaa
mov
pop
addr16
xchg
xchg
sbb
idiv
mov
jge
cmp
push
mov
lcall
lods
adc
scas
dec
lahf
lods
xlat
lahf
stos
or
dec
ljmp
fildl
add
call
sub
sbb
add
inc
push
mov
cmpsb
ss
mov
xchg
fxch
neg
aaa
jne
pop
add
fistpl
adc
pop
in
xchg
pop
repz
inc
jp
xor
or
sbb
xchg
mov
pop
inc
cmpsb
cmpsb
mov
mov
mov
xchg
stos
pop
fists
or
lock
pusha
mov
lea
sbb
push
pop
sbb
mov
push
jle
sbb
ffree
mov
pop
pop
insb
inc
push
xchg
sbb
or
and
sbb
jne
and
and
aam
cmp
mov
outsl
rcrl
xchg
int
adc
insl
jecxz
xlat
xor
sub
clc
mov
push
xor
repnz
push
jp
jbe
aas
mov
mov
vpor
dec
iret
push
es
sbb
push
call
out
mov
mov
and
aas
cs
xchg
outsl
and
rcll
add
mov
imul
lods
out
int
dec
mov
repnz
inc
pusha
cmpsl
ja
inc
add
lret
mov
ss
rclb
or
push
mov
repz
leave
pop
scas
sbb
cmpsb
ljmp
mov
in
lods
sbbb
jmp
nop
mov
add
cmp
loop
cmp
pusha
outsb
jg
test
adc
addr16
hlt
mov
inc
movsb
in
aas
test
repz
out
mov
mov
push
xchg
dec
sub
cmp
loopne
bound
pusha
mov
ds
leave
shll
repz
andb
inc
sub
jge
and
lahf
addr16
add
pop
data16
fistps
lods
in
or
lods
sbb
jg
icebp
xchg
sub
sbb
push
mov
clc
mov
daa
insb
les
push
pop
adc
loop
shr
int
jae
int3
inc
push
xchg
daa
dec
pushf
sbb
cwtl
outsl
and
xchg
sbb
mov
sub
push
ss
pop
xor
fistpll
push
int
iret
cwtl
xor
test
xchg
stos
sahf
jecxz
cmp
lods
xchg
mov
lock
popl
fmuls
mov
pusha
sbb
mov
mov
stc
push
outsb
fstl
xor
dec
push
mov
add
js
fsubl
outsl
sub
shrl
test
pop
lcall
shll
mov
leave
jb
imul
xchg
mov
insb
hlt
popf
movsb
fwait
setg
test
or
mov
dec
in
pop
mov
inc
pop
in
outsl
sub
cmpsl
sbb
cld
lahf
mov
pop
cmp
lock
repnz
ds
sub
fcomps
cmpsl
adc
je
mov
mov
and
jp
test
mov
dec
js
mov
adc
inc
popf
outsb
scas
dec
mov
pop
mov
push
mov
clc
scas
lds
cs
repz
es
inc
pusha
in
mov
je
iret
push
sti
mov
push
fildll
xchg
add
jno
cmp
shrl
fisttps
adc
mov
mov
movsl
jp
lea
xlat
jbe
adc
fs
jl
mov
loop
lock
pop
sahf
mov
sub
test
or
out
sbb
fistpl
mov
pop
addr16
hlt
flds
or
mov
dec
cmp
idivl
dec
test
stos
outsb
daa
bnd
faddp
lcall
outsb
rcll
aad
add
lods
cmp
pushf
jne
ret
inc
scas
movsl
ficomps
pop
in
imul
loop
pushf
and
adc
cmc
mov
shll
js
jg
mov
jle
pop
mov
fisubrl
ficoms
add
jns
mov
cwtl
test
imul
jl
lock
rorb
cmpsl
hlt
or
pop
xchg
jns
pop
inc
scas
loope
cwtl
mov
inc
push
lcall
xchg
out
loope
lcall
mov
in
pop
jns
decb
addl
jl
lea
cmpsb
mov
mov
lds
mov
repz
repnz
jo
dec
and
push
loop
rorb
insb
and
fbld
push
and
mov
dec
inc
pop
jns
jp
int
or
adc
out
xchg
cmpsl
and
xlat
mov
lds
inc
push
call
lds
dec
cs
add
and
stos
loopne
adc
aad
test
aad
adc
xchg
sbb
push
xchg
cmp
mov
fistpll
loope
xlat
hlt
push
xor
clc
in
cmpsl
xchg
push
pusha
jecxz
icebp
out
fsub
sarl
aas
mov
ja
push
out
scas
add
jno
pop
cli
sub
addr16
push
sub
data16
and
jb
mov
loopne
adc
inc
cmc
enter
mov
pop
sahf
cmp
scas
stos
jg
es
fisttps
add
xlat
rclb
push
and
mov
mov
mov
mov
in
xlat
pusha
arpl
xchg
bound
and
cmp
es
push
sub
jo
and
push
pusha
lret
fimull
push
js
or
add
sbb
mov
out
fcomp
lret
insb
or
cmp
push
sub
jecxz
mov
rcr
inc
or
mov
and
add
xlat
cwtl
inc
cmp
jg
push
inc
or
cmp
ja
idivl
daa
in
cmp
das
xchg
push
imul
in
ljmp
loope
lods
push
loopne
cltd
fcomps
mov
pushf
lods
xchg
mov
mov
jae
dec
shll
mov
decl
sub
hlt
loopne
jp
mov
addb
and
fucomip
aam
jne
repz
xorb
pop
fucomi
pop
jne
sbb
jge
push
jg
fisubrl
in
ja
push
add
es
xor
dec
mov
insl
ftst
xor
pop
ljmp
inc
out
mov
jg
sbb
adc
cmc
sbb
cs
jnp
add
adc
mov
pop
rcrb
mov
es
in
out
bound
cmpl
rcr
mov
ja
adcl
sub
sub
xor
push
cs
sti
xlat
adc
fisttpl
int3
mov
into
inc
mov
pushf
xchg
push
icebp
test
or
decl
cwtl
mov
scas
imul
loop
outsb
lret
movsl
loop
aas
out
pop
sahf
add
add
pop
cmp
xchg
adc
cltd
push
xchg
in
decb
mov
test
enter
and
mov
inc
adcl
incl
xor
sbbl
setbe
push
pushf
outsl
push
out
pop
pop
insb
jb
movsb
jecxz
pop
iret
data16
mov
mov
add
filds
cmp
sbb
jp
ret
and
push
loop
xor
and
int
sub
jp
pop
add
adcb
test
mov
jnp
sub
mov
pushf
mov
add
inc
mov
outsb
lds
js
mov
arpl
sbb
addr16
fcomp
jmp
cmpsb
insb
cmp
out
aad
mov
mov
pop
negb
rcll
cmc
mov
and
loopne
sub
pop
aam
push
test
and
xchg
push
fs
bndldx
push
ja
cmpsb
xorb
dec
jo
dec
cmp
popf
cmp
jnp
pop
addr16
mov
ja
out
and
sub
out
in
push
or
mov
and
lods
push
sub
pop
sub
and
adc
iret
jle
xchg
jmp
fst
negl
jbe
xchg
aam
out
pop
in
mov
push
mov
aas
iret
fistpll
pushf
jae
scas
mul
push
sbb
inc
push
movsb
jle
jnp
hlt
js
lret
lods
and
fstl
jno
add
or
loopne
add
sub
adc
push
jnp
aas
imul
and
stos
cmp
fs
cltd
loope
mov
mov
and
push
mov
in
jne
xchg
out
inc
fistl
test
out
sub
add
test
fucom
test
mov
pop
mov
imull
call
and
rorl
or
stos
ret
adc
in
jecxz
pop
call
insb
push
dec
pop
and
repnz
or
std
xchg
sbb
and
xor
jae
xchg
pusha
pop
mov
repnz
xor
cli
std
mov
mov
pop
or
fsubrl
ret
in
pop
rclb
fmul
clc
in
addr16
and
xchg
push
mov
ds
in
sti
aas
pop
jnp
sub
cmpsl
adc
mov
xorl
outsl
mov
mov
cmc
push
jge
sti
es
push
lds
mov
arpl
sub
repnz
mov
ret
pop
add
scas
sbb
pop
pop
fs
mov
and
stc
pop
cs
call
insb
js
or
or
inc
or
mov
mov
jmp
dec
inc
mov
cmp
out
pusha
sti
rcrl
lea
or
lods
jns
mov
or
or
mov
sub
jnp
inc
mov
loopne
adc
inc
ret
stos
cmp
outsb
push
loope
adc
push
mov
lret
sbb
shrb
inc
mov
cmpsl
cmp
stc
push
in
xorl
cmp
jnp
scas
jne
out
push
lret
xchg
mov
scas
imul
inc
std
jbe
jae
sbb
push
push
push
jbe
lea
cmp
and
ss
add
ds
aas
insl
cmp
iret
xchg
dec
mov
fwait
imul
xchg
mov
lahf
mov
lds
mov
les
adc
inc
inc
mov
pop
scas
movsl
bound
mov
xchg
adc
out
xchg
xor
int
lcall
push
jp
loop
mov
es
aaa
repnz
icebp
lds
xchg
pushf
cmp
in
xchg
or
mov
out
imul
or
push
cmp
dec
stos
push
push
mov
sub
loopne
mov
mov
dec
lea
test
imul
iret
mov
sub
stos
dec
sub
mov
and
mov
std
mov
fldl
lcall
sbb
sbb
es
int3
mov
mov
into
xor
xor
cmpsb
loopne
push
lods
into
loop
xchg
outsl
pusha
insl
cmp
jno
cld
xchg
insl
pop
js
mov
cmp
xor
fstpl
push
xor
add
jae
fs
cmp
xchg
pop
push
inc
jmp
pop
xchg
add
dec
mov
push
pushf
mov
add
cmp
cli
out
ds
lods
xorb
jno
jns
or
test
shll
xchg
lret
mov
cltd
pop
movsl
fistpll
jne
mov
mov
lds
lods
dec
ret
jbe
dec
addr16
push
push
into
pop
jecxz
xchg
and
lret
cmp
addr16
test
sbb
xchg
out
fs
mov
les
dec
in
inc
shrl
test
in
jno
adc
gs
outsl
push
cmpsl
cmc
aaa
test
lea
enter
push
push
dec
lock
sti
mov
jl
and
xor
rorl
pop
daa
mov
lock
aad
mov
push
sbb
push
push
and
mov
lods
lods
lret
repz
inc
fcmove
pop
or
scas
into
inc
mov
fsub
jne
leave
pop
push
mov
imul
shlb
stc
mov
fsubr
out
repz
cli
leave
mov
mov
xchg
push
push
sub
mov
bound
dec
test
mov
cli
pop
and
and
mov
adc
lret
cmp
cmpsl
pop
into
or
addb
cmp
repz
inc
cmp
loopne
loopne
xchg
cmp
pusha
jmp
pop
into
push
sbb
dec
mulb
xor
xor
mov
sub
jns
jge
stos
and
dec
inc
sahf
insl
mov
dec
in
hlt
jb
mov
leave
dec
outsb
push
cld
and
pop
lods
or
jmp
cs
pop
pop
sub
jne
push
in
push
sub
les
or
xchg
fisttps
dec
fadd
shlb
ret
dec
inc
cmpsl
icebp
cmp
stos
shll
test
add
movsl
xchg
sbb
xor
popl
icebp
mov
jmp
jns
ss
fmuls
int3
fnstcw
adc
xor
lahf
lcall
and
paddusb
mov
jl
test
xchg
fdivrl
xchg
test
push
enter
aam
sti
out
sbb
inc
add
fs
imul
stos
popa
jns
sbb
dec
adcl
shlb
sbb
push
inc
mov
xor
xchg
cmpsb
xor
sti
into
mov
sub
or
fistpll
es
sub
sti
mov
iret
xor
loopne
stos
outsb
lea
adc
pop
pop
fwait
push
xchg
pop
leave
jge
xchg
inc
sub
loope
icebp
push
sbb
push
int
inc
pop
fsubrs
lea
cltd
inc
aas
xchg
cmpsb
das
orl
sahf
inc
or
rorb
int3
and
jo
call
push
sub
or
mov
add
mov
mov
cld
movsb
xchg
and
mov
sahf
lret
push
shll
cmp
inc
dec
negb
shlb
popa
jne
lock
cmpsb
inc
mov
pop
lcall
test
movsl
imul
repnz
adc
sbb
int3
pop
aas
mov
cmp
jecxz
sub
clc
sbbl
or
push
sbb
xor
inc
mov
mov
push
ds
loopne
push
lahf
sub
add
xor
jg
cmpsl
and
movsl
loope
jecxz
sarl
es
bound
in
xor
sbb
hlt
adc
sub
ja
std
pop
int
mov
data16
or
push
push
mov
imul
pop
mov
lcall
pop
loop
adc
jmp
sti
nop
insl
mov
into
insl
cmp
loope
dec
inc
inc
rcpps
push
jo
push
push
adc
retw
mov
mov
jecxz
mov
mov
ret
inc
test
inc
ljmp
push
ljmp
frstor
ds
jnp
mov
lock
cltd
pop
inc
xchg
vpaddw
push
je
dec
aad
insb
pop
adc
mov
enter
out
inc
dec
fnstenv
aas
mov
sub
dec
dec
imul
jmp
jle
lea
mov
jno
fcmovne
lock
das
xchg
mov
dec
jo
adc
call
xor
ja
xchg
ds
and
ret
push
dec
mov
add
and
sahf
mov
jb
repz
push
xor
dec
cmp
cmc
sub
lods
aaa
das
xchg
int
xor
mov
popa
hlt
daa
mov
repnz
cmp
inc
push
jnp
jb
xor
sbb
mov
rcrb
out
out
loop
out
cmpsl
add
mov
mov
add
push
in
xor
leave
jl
enter
pop
outsb
mov
jl
or
loop
cmp
dec
js
push
xor
xorl
mov
int3
sub
out
jle
sbb
dec
rclb
jl
sbb
cmc
andl
das
xor
fstpt
jne
jmp
rcll
in
cmpl
xor
mov
rorb
test
pop
lods
pop
cmp
lret
jle
mov
stos
adc
sbb
mov
rclb
test
jmp
lahf
pop
jnp
xlat
mov
add
adc
repnz
push
fdivrs
addb
dec
loop
add
stos
sbb
neg
lret
rcrb
xchg
sub
add
ret
jmp
lret
jecxz
push
cmc
sub
xor
xchg
cmpsb
and
sub
or
das
icebp
test
and
sbb
gs
nop
mulb
cmc
std
jne
jnp
lret
inc
scas
mov
adc
leave
sbb
aaa
inc
out
in
into
xchg
add
in
loop
insl
cmpsb
clc
nop
add
cmp
add
inc
cs
jns
mov
cld
ja
movsl
das
push
aas
loopne
jecxz
lods
pop
jbe
pop
mov
icebp
jnp
inc
push
inc
add
add
leave
pop
mov
sbb
testl
popw
out
outsl
mov
pop
bound
mov
jnp
nop
dec
mov
aad
adc
addr16
mov
push
scas
jg
xorl
fsubr
pop
sub
rol
int3
outsb
fisubrl
xor
movsl
pop
iret
jb
xchg
and
or
mov
loopne
xlat
aad
dec
adc
add
adc
mov
popf
add
cmp
sti
sub
or
xchg
mov
in
mov
sbb
adc
add
or
and
gs
jae
xchg
fdivp
sbb
xchg
fildl
imul
sbb
nop
je
insb
mov
dec
jp
into
sahf
cmp
adc
test
rol
jnp
in
xor
push
cmpsl
dec
scas
or
add
push
or
and
mov
roll
jb
and
inc
pusha
and
lahf
imulb
insl
movsb
ret
lcall
cmpb
mov
cmp
jbe
arpl
inc
popa
add
jns
movsl
loopne
jge
imul
or
push
test
or
push
push
es
js
in
mov
xorl
icebp
jae
fisttpl
shl
mov
repz
pop
out
mov
outsl
out
lret
ret
xor
test
or
insb
ret
aaa
mull
jne
lret
adc
cltd
jmp
fnstcw
sbbl
iret
xchg
outsb
decl
and
mov
cwtl
xor
aad
add
xorl
insl
push
aam
roll
push
or
bound
shrb
repnz
cmp
sub
outsl
gs
dec
mov
adc
xor
mov
add
fwait
in
adc
inc
or
dec
cli
mov
mov
int
xor
jae
aaa
jae
into
notl
inc
and
xor
mov
dec
stos
pop
adc
in
cltd
jp
pop
sub
pop
out
push
mov
dec
cmpsl
ret
scas
dec
sahf
repz
outsl
shlb
leave
jnp
lahf
stos
test
mov
leave
and
dec
icebp
outsl
and
mov
bound
push
hlt
push
xor
sbb
pop
xchg
and
jae
push
pop
pop
es
jl
pop
andl
lret
loopne
mov
mov
ljmp
fidivrl
push
mov
fs
fmull
lods
mov
inc
lods
push
mov
jbe
mov
das
sbb
andl
stos
aam
cmp
jp
pushf
mov
add
mov
fidivrs
mov
dec
cmp
jbe
hlt
jae
cmp
adc
add
push
cmpsb
sbb
lods
add
or
out
add
push
dec
aas
add
push
lret
xlat
pop
mov
xchg
test
lcall
push
pop
dec
mov
fldcw
xor
addr16
rol
sub
cmp
lret
mov
into
mov
push
dec
cmc
sbb
test
and
fneni(8087
add
ret
mov
dec
mov
ss
in
aaa
jb
pop
outsl
inc
jo
shlb
sahf
adc
int
cmpsb
add
testl
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
lods
mov
xor
pop
sbb
js
mov
adc
pop
adc
nop
xor
hlt
push
mov
cmp
mov
dec
addl
in
scas
ja
lcall
mov
add
mov
call
xor
mov
jge
adc
mov
push
mov
out
and
xchg
ss
jp
es
sbb
mov
add
sub
mov
shrb
inc
dec
subl
and
xor
inc
daa
mov
movsb
cli
xchg
mov
cli
sahf
cmc
dec
outsl
xor
dec
pop
push
and
dec
das
mov
fbstp
loop
jnp
das
cmc
and
pop
xor
mov
sbb
inc
addr16
xlat
aam
pusha
xchg
jl
test
dec
mov
enter
pushf
mov
jmp
mov
sub
addr16
aaa
xchg
and
ja
or
xor
and
jnp
mov
mov
je
ds
sbb
adc
sbb
cli
adc
push
aas
add
fld
sub
push
xor
scas
mov
lods
rcr
jae
icebp
sub
icebp
bound
cs
inc
lds
dec
shl
push
dec
mov
sub
loop
pop
inc
cmp
mov
adc
jae
jns
pop
popa
adc
ror
push
mov
stos
leave
sub
test
jge
inc
push
mov
add
js
xchg
cwtl
or
stc
dec
cli
imul
push
rolb
jl
addr16
jnp
imul
xchg
pop
rclb
aam
sub
cmp
xor
lods
jmp
cmp
dec
xchg
clc
mov
mov
inc
mov
or
mov
out
mov
push
movsl
lods
in
and
js
outsl
xchg
stos
inc
mov
movsl
in
movb
or
jle
loope
adc
push
addb
aam
insl
jg
sahf
sbb
mov
mov
inc
dec
fidivl
jp
imulb
dec
xchg
sbb
jecxz
mov
xor
cmp
push
stos
sbb
xchg
imul
push
add
js
mov
ja
mov
add
das
mov
cs
jge
sbb
sbb
data16
rcrb
mov
fucomip
sbb
shlb
xchg
out
fsubl
stos
jle
lcall
fmull
pusha
ss
xchg
push
je
adc
cmp
sub
inc
xchg
adc
shlb
sub
pop
nop
jno
dec
fs
dec
add
mov
pop
in
dec
pushf
jecxz
inc
xor
cmpsl
pop
and
jb
sub
into
ret
loope
jl
pop
jno
inc
shlb
pop
mov
xchg
stos
out
adc
mov
jb
shll
jg
sub
xor
test
mov
movsl
sbb
rcll
xchg
data16
cmp
out
inc
sbb
pop
xchg
sbb
inc
shl
adcl
aad
adc
and
xchg
xor
insl
push
fstps
pop
push
lret
adc
mov
or
xchg
sbb
icebp
inc
js
mov
push
or
fs
mov
dec
fiadds
fxch
add
mov
movsl
adc
pop
iret
or
in
dec
icebp
out
icebp
push
jne
add
xchg
add
stos
and
loopne
nop
push
daa
push
gs
pop
cmp
and
pop
test
fidivs
scas
mov
aad
arpl
std
dec
mov
ret
pop
mov
stc
fnsave
jecxz
cmp
and
push
shll
fisttps
fistpll
cbtw
fimull
xor
cmp
cwtl
mov
inc
push
add
xor
push
adc
pop
arpl
gs
sti
lods
rcrb
mov
stc
xchg
inc
mov
mov
jle
inc
leave
jge
jno
mul
lock
push
jmp
fbld
mov
jmpw
xor
add
jmp
movsl
or
pushl
or
cli
inc
cmp
pop
fs
mov
loop
mov
iret
dec
or
leave
mov
jge
loopne
inc
lds
jmp
add
adc
adc
and
sahf
sbb
push
mov
xchg
mov
sbb
dec
xor
mov
mov
pop
sti
jg
call
or
mov
mov
jae
add
in
fdivrl
cmpsb
lods
rorb
inc
sar
pop
les
jo
mov
cmp
cmpsb
mov
push
push
and
inc
push
cwtl
or
adc
ss
cmp
ljmp
mov
out
je
loop
inc
cmp
mov
lods
fbld
out
pushl
mov
add
xchg
add
arpl
mov
je
cmp
lods
mov
add
dec
out
stos
mov
push
imul
jne
aaa
ret
lock
dec
jne
or
lock
cmp
jmp
push
xor
mov
scas
cwtl
jne
and
mov
jmp
jns
addr16
in
subl
sbb
in
repnz
insl
sbb
outsl
repz
push
out
lock
inc
xor
sbb
xchg
cmpsb
cmp
inc
add
push
cmp
sbb
ljmp
imul
mov
jnp
dec
xchg
push
popa
lods
pop
xchg
sub
mov
push
fldpi
cmp
dec
mov
movb
shl
xchg
arpl
or
cmp
adc
sbb
cltd
in
hlt
or
repz
arpl
ss
pop
add
rcr
cmp
cld
sbb
jne
in
stc
lods
cmp
xor
cld
or
mov
ja
das
fnsave
stos
mov
sub
lcall
mov
and
xor
sub
mov
jle
pop
das
and
jb
ret
pop
pop
movsb
mov
hlt
adc
xchg
lock
imul
aad
nop
and
add
sbb
mov
xchg
pushf
pop
lods
inc
repnz
ljmp
cwtl
lahf
cmp
jb
cmp
out
pop
mov
mov
testl
scas
push
mov
mov
cltd
mov
cld
pop
daa
negb
and
cmp
insl
fnstcw
daa
jmp
push
and
push
sbb
push
hlt
sarl
mov
ret
cmpsl
push
lods
or
mov
icebp
mov
jp
loop
mov
pop
xchg
jnp
nop
leave
pop
push
stos
sub
je
add
sbb
lea
aam
add
push
pop
and
adc
das
add
inc
mov
xchg
pop
xchg
sahf
movsl
bound
cmpsl
mov
adc
not
xor
sub
popf
leave
mov
inc
dec
and
leave
add
mov
popa
shlb
lods
icebp
rcrl
loopne
jno
xor
and
inc
lahf
jno
lds
sub
fstl
stc
mov
nop
mov
xchg
ja
sub
xor
mov
pop
aaa
addr16
je
scas
add
push
and
add
push
popf
shrb
xchg
outsb
xchg
xchg
and
inc
push
mov
aad
xchg
mov
pop
and
dec
dec
lea
out
mov
xchg
adc
test
orb
jp
orl
sub
jno
cmp
loop
pop
inc
xchg
les
mov
ja
cmp
sbb
push
and
ljmp
shrb
int
pop
loopne
in
jp
xor
xlat
cs
push
inc
scas
xor
jle
ja
sbb
insl
pop
push
mov
aad
lods
insb
dec
loop
and
pop
pusha
loope
sub
movb
dec
pop
sbb
sbb
cmp
sub
aas
push
or
clc
cmp
vpshab
faddl
push
xor
jbe
mov
lods
mov
mov
popf
fld
xchg
inc
test
scas
xchg
pop
loop
dec
mov
mov
and
aas
inc
inc
jl
scas
les
mov
adc
push
insb
out
inc
stc
pusha
popf
adc
xchg
mov
push
push
sub
cmp
cmp
aaa
add
loope
mov
fcmovne
xchg
fidivrs
mov
pop
xchg
das
mov
in
data16
pop
adc
mov
jg
ret
sbb
mov
pop
mov
das
orb
in
or
xchg
hlt
out
mov
lcall
inc
movsl
stc
cmc
arpl
pop
cmp
jne
pop
mov
xchg
int3
jb
test
test
xchg
jo
mov
movsb
xchg
clc
push
insl
test
and
xchg
mov
fistpl
xchg
adc
aas
test
lret
std
in
jno
lret
enter
stos
enter
pop
cmpsl
ret
in
adc
addl
ret
clc
bound
mov
enter
add
pop
adc
jnp
cmp
xor
sahf
aaa
mov
rol
fs
mov
mov
clc
jl
shrl
mov
dec
mov
xor
imul
or
repz
xchg
decl
pop
xchg
std
repz
adc
mov
out
add
adc
neg
in
hlt
mov
pop
cmp
addb
leave
flds
lods
idivb
sub
sbb
xor
vpsubsb
sbb
adc
pop
nop
sub
mov
cwtl
sub
or
aam
or
jo
cltd
sbb
push
xorb
add
push
mov
push
cmc
shll
ss
repz
roll
fwait
pop
shll
mov
mov
xchg
mov
rol
xchg
cmp
push
push
adc
movsl
popa
xchg
and
xor
inc
cwtl
in
xor
pop
mov
roll
pop
loop
mov
hlt
test
aam
loope
push
sbb
outsl
int3
cli
out
movsl
out
cli
cmp
ret
aam
cmp
out
and
and
or
or
sub
dec
popl
ja
xor
loop
adc
jb
out
pop
dec
push
sbb
gs
cmp
mov
dec
out
aas
pop
jns
xchg
add
mov
aad
addb
iret
mov
xor
scas
xchg
push
mov
jb
mov
repz
adc
inc
mov
pusha
jecxz
and
enter
ja
inc
jle
hlt
int
push
pushf
adcl
outsb
leave
cmovne
out
int3
sub
scas
xchg
outsl
mov
or
mov
int
shrl
mov
xor
xor
ljmp
mov
scas
sti
xchg
rol
or
iret
and
adc
out
mov
icebp
mov
lret
push
dec
cld
out
add
mov
and
cmp
hlt
adc
sub
xor
enter
jecxz
es
xchg
push
sbb
jl
leave
jecxz
xor
mov
pop
mov
testb
push
dec
cli
std
inc
jp
jb
cmpsb
int3
ja
or
out
push
fwait
lret
pusha
cmp
or
aas
jl
jmp
cltd
pop
mov
cmp
mov
enter
sbb
shl
jl
fisttpll
inc
mov
cmpsb
jno
or
xchg
cmp
jne
popa
dec
add
dec
xchg
fwait
lods
push
in
lea
add
dec
mov
xor
int3
inc
jbe
jle
out
adc
push
imul
push
shr
data16
jbe
sub
and
fstl
push
mov
pushf
cmp
mov
add
xchg
jle
xlat
or
jp
cwtl
xor
xchg
insl
mov
lods
gs
jne
cmp
sbb
divl
xorl
push
mov
testl
pop
cmc
je
js
mov
daa
mov
pushf
cmp
or
inc
mov
gs
icebp
outsb
call
popa
add
sbb
sbb
jg
subl
lods
daa
cmp
pusha
push
call
insb
xor
mov
dec
mov
mov
pop
arpl
mov
hlt
popa
leave
sbb
ds
or
xchg
dec
les
or
imul
sti
cmpsl
push
inc
ja
adcb
enter
scas
repz
ss
sub
xchg
icebp
lods
adc
cmpb
sbbl
jmp
mov
mov
ret
lcall
cwtl
pop
mov
loopne
stos
or
fisubrl
or
cmp
mov
sti
fbstp
popa
inc
cmp
jge
mov
fiadds
or
ret
sbb
mov
inc
inc
push
mov
imul
call
aas
int
xchg
rol
push
les
push
inc
je
sarb
aad
sub
arpl
pop
sbb
jmp
xor
push
std
push
and
icebp
addr16
sbb
decb
push
inc
repnz
and
ret
sbb
adc
sub
mov
in
jnp
outsl
mov
sub
fimull
push
xchg
sub
cmp
cmpsb
ds
lcall
jmp
pop
pop
mov
sbb
dec
clc
rolb
int
pop
dec
adc
jecxz
ret
sti
popf
sbb
inc
pop
sahf
or
pusha
not
lahf
mov
jnp
sbbb
shl
fisubrs
lods
dec
xlat
dec
lea
cli
pop
out
hlt
shlb
cmc
jl
push
inc
call
pop
icebp
sbb
rcl
into
inc
sarb
das
dec
add
cs
adc
push
or
repz
aaa
sub
cmp
das
or
sahf
inc
ja
mov
pop
fs
add
ret
out
push
in
pop
adc
dec
jae
push
ret
mov
mov
rolb
data16
shlb
mov
sub
mov
std
mov
mov
sbb
imul
jbe
cmc
sbb
in
fisubl
sub
fsubl
sbb
jne
mov
mov
sub
cmp
push
inc
pushf
test
scas
fldenv
mov
rcll
aas
jno
lret
sub
pop
leave
popf
sub
lcall
jmp
cltd
add
xor
sahf
xchg
xchg
inc
mov
decl
or
out
inc
sbb
cltd
bound
push
mov
mov
scas
xor
jl
imul
jo
xchg
testl
push
rcrl
cmp
ds
add
cmpsl
adc
stc
inc
sub
mov
inc
push
xchg
mov
into
js
xchg
dec
sti
mov
pop
inc
cli
test
cld
jle
popf
jmp
lods
mov
mov
sbb
pop
inc
movsb
xchg
sub
insl
or
ss
scas
jbe
dec
ds
daa
outsl
xlat
push
test
mov
fistps
jbe
idivl
mov
inc
mov
mov
mov
es
add
cmp
out
rcrl
lret
push
test
mov
cmp
and
clc
sub
xor
xchg
lret
in
data16
lds
imul
and
xchg
xchg
mov
mov
jge
adc
pop
inc
je
mov
mov
ss
sbb
out
jp
xorb
imul
test
inc
push
es
adc
inc
jae
test
je
mov
fucom
xor
cmp
repnz
dec
out
int3
mov
es
xor
dec
add
push
push
and
fcomps
lcall
mov
push
and
mov
cwtl
jae
jns
rcl
add
cld
cwtl
sbb
jl
dec
pop
pop
insl
cmc
pop
out
movsb
fldenv
add
pop
xor
fidivrl
mov
cmp
ljmp
add
mov
ljmp
clc
call
in
adc
push
sbb
enter
jle
ficoml
jne
jmp
icebp
xchg
sbb
cmp
mov
push
in
and
cmp
pop
shll
jnp
dec
lds
xchg
mov
scas
pop
inc
jbe
dec
xchg
xchg
hlt
inc
popf
adc
subb
push
adc
into
das
sbb
jmp
jl
adc
lods
lret
add
jmp
cmp
xor
add
mov
cwtl
add
xor
adc
rcrl
jmp
out
inc
push
sub
and
out
dec
dec
sarb
js
mov
imul
mov
mov
addl
jnp
add
shrb
sbb
sub
fidivrl
mov
scas
test
pop
jg
jg
inc
les
pop
neg
sarl
cltd
xchg
add
pop
push
mov
xchg
mov
insb
iret
int
jno
adc
xchg
jb
inc
lods
icebp
xor
mov
add
jae
sbb
movsl
iret
insl
mov
cmpsb
ljmp
push
ljmp
int
cmp
lock
sti
jmp
cmp
movsl
mov
insb
add
dec
adc
shl
ret
out
pop
adc
xor
dec
daa
push
jmp
adc
dec
stos
push
mov
or
inc
push
imul
add
sbb
and
push
mov
pop
inc
adc
les
nop
push
adc
les
shlb
sti
loope
mov
fistpll
stc
lcall
fs
fstpt
int3
subl
rclb
mov
ss
pop
outsl
sti
cwtl
dec
xor
push
adc
and
shr
out
push
push
adc
into
test
out
out
jmp
cwtl
icebp
shl
scas
jnp
rorb
rclb
push
sbb
or
dec
test
mov
insb
xchg
arpl
jae
sub
mov
ret
dec
and
xchg
mov
jne
mov
sbb
adc
in
mov
out
sbb
sbb
xlat
add
ds
ds
dec
mov
insb
in
sub
pop
add
or
pop
and
imul
jno
sbb
popf
stos
and
push
bound
in
ret
mov
addr16
ja
incl
cltd
fmull
cmpsl
iret
push
daa
into
out
rclb
inc
test
xor
and
mov
push
adc
and
shlb
imul
adc
dec
inc
in
test
stos
cmpsb
push
jge
inc
ficompl
jl
divb
in
imul
mov
and
test
jo
dec
push
push
scas
test
imul
xchg
or
cs
nop
loop
push
pop
cmpsl
or
or
test
mov
arpl
shll
jae
pop
test
push
scas
ficoml
xchg
cmpsb
cmpsl
sub
push
loop
mov
shll
cwtl
sbb
jmp
cltd
test
and
inc
int3
xchg
adc
inc
gs
addr16
inc
lahf
pop
push
aad
mov
je
inc
cltd
lods
inc
pop
cwtl
add
jl
popf
shlb
adc
ss
addl
std
popf
mov
lds
push
dec
adc
cmp
mov
lret
jae
adc
int
add
shr
add
xchg
xchg
mov
mov
xor
dec
adc
jmp
stc
test
inc
outsl
enter
jae
decl
jmp
lret
insl
cmpsb
aad
es
push
add
pop
and
popa
mov
ficompl
add
aaa
and
mov
mov
xlat
inc
cmp
ljmp
shl
inc
xchg
mov
mov
dec
pop
enter
sbb
fld
push
cli
xchg
adc
mov
stos
cs
shlb
mov
mov
test
roll
out
mov
stos
jbe
dec
iret
and
pop
loope
fs
mov
add
out
mov
push
and
jmp
shlb
mov
lret
lea
jle
push
fs
cltd
leave
popa
inc
mov
cmp
cmp
or
scas
cld
cmp
push
sub
scas
mov
jmp
sbb
sar
dec
mov
xor
mov
jl
or
add
es
aaa
push
and
cmp
xor
sbb
fidivrl
lret
movsb
rcrl
in
jae
sub
push
rorl
lcall
out
test
push
out
jl
and
mov
std
xchg
les
xchg
mov
pop
pop
or
sbb
cmp
sbb
and
adc
fs
mov
das
jecxz
insb
iret
push
addr16
loopne
xor
insl
mov
jl
adc
fstpt
cs
add
popf
inc
xor
sbb
jle,pt
adc
mov
jbe
cmp
test
or
mov
jb
js
in
std
pop
mov
test
xor
xor
adc
mov
js
repnz
cmp
int
rcrl
fadds
faddl
daa
repz
fadds
std
inc
fiadds
sub
or
scas
push
ljmp
add
push
ja
test
jp
pop
daa
jae
push
rcll
aad
xchg
adc
ljmp
xor
sub
xlat
in
dec
popa
repnz
clc
push
gs
push
das
lret
xor
adc
int3
adcb
leave
jg
mov
xor
cli
pusha
insl
stos
outsb
cltd
push
pop
aam
int3
rcll
cld
inc
frstor
ja
aaa
pop
cmp
es
shlb
mov
repnz
cmp
cltd
shll
cmc
lret
cmp
xchg
cmpsb
add
cli
add
jb
mov
outsb
pop
pop
pop
lods
pushf
test
sarl
mov
sbb
mov
mov
or
sub
inc
loop
clc
mov
push
pop
pop
cmc
push
xor
int3
add
pushw
adc
cs
push
iret
mov
testb
push
jecxz
and
jne
sub
xchg
sbb
xchg
ljmp
mov
subb
lods
push
cmpsl
sbb
scas
mov
lods
inc
mov
mov
test
xchg
and
in
pop
mov
cltd
aas
adc
cld
icebp
call
cltd
loopne
mov
ljmp
xchg
sub
ret
xor
sub
shrb
adc
xchg
dec
lret
mov
xchg
mov
cmp
out
mov
out
test
jg
jmp
call
pop
mov
in
ja
add
scas
and
pop
aaa
shlb
pop
inc
es
mov
mov
loopne
rorb
cld
add
cli
push
out
push
sub
dec
dec
and
lcall
push
movsb
into
aaa
loopne
jne
xor
decl
addr16
inc
or
mov
shrb
cmp
jmp
sbbb
sbb
cmc
inc
lea
jb
lcall
jns
fldcw
stos
int3
pop
sbb
cli
callw
call
cmp
sbb
lcall
subb
or
or
add
mov
movsl
jle
jecxz
push
jnp
sahf
pop
mov
movsl
mov
cmp
jle
bound
out
or
in
ss
repz
mov
daa
adc
cmp
out
test
std
lock
add
adc
inc
or
shl
pop
or
in
mov
gs
mov
sub
out
jns
mov
mov
xor
adc
lds
adc
cmp
aad
data16
adcb
push
push
iret
mov
xchg
push
lea
mov
dec
js
mul
dec
movsb
xor
incl
inc
fistpll
and
gs
mov
imul
mov
cltd
subb
popf
cmp
jne
dec
jbe
orl
nop
out
adc
jnp
adc
xchg
pop
decl
scas
sub
sbb
xor
lea
mov
mov
arpl
pusha
lods
mulb
and
mov
mov
and
sar
xchg
nop
jnp
testl
pop
jp
ss
inc
sbb
pop
push
stc
push
pop
xor
and
sub
fsts
inc
sbb
cli
shrb
icebp
push
mov
adc
dec
lret
jge
jns
jp
pop
les
test
andl
in
in
pop
push
loop
xchg
ja
push
adc
push
jg
push
mov
mov
stos
xor
lret
add
mov
out
jb
rclb
mov
bound
bound
inc
ret
cld
je
cwtl
mov
outsb
clc
xchg
mov
fadd
fdivrl
lock
lea
push
jbe
mov
mov
cld
mov
out
inc
daa
pop
je
mov
jl
sub
add
jmp
xlat
jne
sbb
pushf
out
mov
les
je
adc
cwtl
pusha
pop
insl
ficompl
dec
ja
xchg
cld
jns
std
shlb
pushf
mov
cmpb
fs
aaa
lret
lea
lcall
repz
mov
jae
sbb
add
inc
mov
movsl
xchg
dec
arpl
lods
test
xor
mov
and
push
ja
dec
stc
add
les
insb
mov
mov
loope
out
xchg
add
fdivrp
cmp
rcr
or
cmpsb
mov
mov
xor
mov
js
push
and
cmpsb
pop
xor
sti
mov
data16
shlb
jns
mov
aaa
xor
add
sahf
shrl
movsb
mov
repz
pop
lahf
sub
mov
pop
jb
icebp
inc
mov
or
xchg
enter
aaa
inc
inc
cmp
dec
daa
or
push
ret
push
push
idiv
cmp
cmp
or
insb
in
jmp
cld
jp
decb
xor
ja
or
ss
fs
xchg
xor
push
jns,pn
jge
jbe,pn
adc
mov
pop
fistl
push
ret
adc
push
cmp
fdivl
inc
xor
or
pop
insl
xlat
xor
test
xchg
cld
xchg
jno
movsb
jo
xchg
addr16
inc
aam
insl
dec
sbb
sub
adc
fs
popf
mov
leave
xorb
out
movsl
out
xchg
out
cld
inc
or
xchg
pop
pop
movb
imul
cmpsb
mov
sbb
cmp
pusha
ret
push
test
mov
or
es
pusha
mov
and
xor
mov
mov
out
mov
dec
xchg
xchg
pop
insl
inc
push
inc
sub
sbb
enter
loope
or
stos
repz
dec
pop
sub
inc
loopne
pop
pushf
mov
clc
cli
aas
jp
pushw
addr16
nop
in
les
sub
addr16
push
mov
dec
clc
inc
cmp
dec
icebp
lcall
and
inc
sar
imul
or
push
aad
insl
sti
int3
dec
ret
lods
sub
jge
adc
pop
fndisi(8087
sub
or
jns
data16
lret
jg
lds
fildll
mov
test
inc
push
jl
imulb
mov
js
fnstcw
fdivs
xchg
push
mov
roll
push
pop
add
pop
in
inc
bound
hlt
iret
mov
push
or
popf
test
pushf
xor
adc
fcoml
sti
out
mov
or
jge
cltd
jg
rcr
dec
push
stos
mov
xchg
mov
ja
les
popa
leave
xor
and
add
jl
push
adc
dec
sub
mov
sbb
vfrczss
movsl
bound
cvtdq2ps
movsl
icebp
test
rolb
cwtl
inc
cli
pop
mov
cmp
aad
xor
dec
lods
adc
mov
mov
rcrl
sbb
dec
lcall
push
cwtl
mov
imul
xor
negl
leave
cmpsl
leave
push
sub
mov
fbld
add
pop
lods
add
out
xchg
or
std
push
dec
inc
leave
mov
xor
mov
and
loopne
pop
lret
xchg
inc
sbb
xor
dec
sub
cs
inc
jecxz
pop
cltd
mov
repnz
jge
xchg
outsl
or
call
sbb
push
ljmp
and
mov
pop
sub
ljmp
dec
adc
cmc
stc
mov
sbb
lock
es
add
dec
in
jecxz
lods
jmp
sbb
pop
xchg
ja
pop
repnz
jle
fwait
push
sti
sub
mov
lahf
scas
sbb
shr
out
imul
push
test
inc
hlt
movsl
adcl
push
adc
loop
adc
je
in
add
insl
mov
in
pop
sub
popa
jp
data16
mov
inc
or
sub
mov
cs
sbb
mov
lds
es
aaa
mov
popa
in
fadds
lods
xor
dec
or
jl
sbb
insl
push
push
push
clc
mov
imul
add
lahf
cmpsl
dec
test
test
jecxz
scas
mov
pop
sub
inc
sub
adc
sbb
incb
mov
xchg
sbb
sub
pushf
out
adc
mov
stos
sbb
dec
pop
cmc
pusha
dec
les
cltd
push
pop
test
mov
mov
test
adc
js
sub
iret
push
mulps
fwait
mov
sahf
test
sub
jmp
int3
stc
rcrb
pop
iret
cli
adc
icebp
bound
inc
and
iret
imul
sbb
sbb
aaa
or
gs
jae
push
sti
xor
fadd
mov
je
mov
inc
cs
fwait
xor
cmpsl
clc
add
add
lret
xchg
arpl
mov
cmpl
int3
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
jmp
inc
mov
aaa
cwtl
arpl
push
cmp
stos
jbe
adc
pop
adc
mov
test
jae
cld
pop
ret
jb
cmc
adc
cwtl
ss
leave
clc
fs
pop
out
dec
subl
add
mov
inc
lcall
jp
cmpsb
int3
scas
push
pop
fmul
lret
faddp
scas
out
or
jge
pop
addr16
pop
mov
add
or
pop
lret
mov
in
fcmove
std
mov
sbb
mov
jne
lods
dec
das
je
inc
mov
popa
jmp
mov
daa
das
test
stos
pop
cmp
jp
xchg
sub
dec
xor
push
hlt
push
dec
insl
dec
mov
inc
sti
sbb
and
mov
add
lods
fiaddl
mov
push
bound
sbb
scas
dec
and
test
dec
dec
jle
xchg
sbb
adcb
push
push
xchg
xor
insl
jb
jno
arpl
mov
aad
mov
fildl
insb
pusha
jecxz
or
lea
outsb
ss
push
iret
sahf
push
stc
in
push
call
inc
mov
out
xor
push
clc
pop
mov
and
sub
clc
adc
lahf
cld
pop
cli
dec
repnz
sbb
xchg
out
aas
mov
xchg
inc
cs
fwait
pop
rorl
das
fistpl
or
sub
mov
and
and
lds
addl
mov
es
cld
outsb
jecxz
cmp
rclb
push
push
iret
sti
jo
mov
sbb
mov
jb
mov
jle
mov
cltd
cmpb
sbb
shrl
xor
les
mov
or
out
xorl
fisubl
in
pop
and
xor
rorb
xchg
add
aas
xchg
cs
in
adc
stc
push
lahf
movsl
andl
outsb
and
pop
outsb
cmpsb
lds
add
dec
and
ret
out
popa
mov
rcrl
push
insl
test
loop
push
imul
daa
lret
fcmovnbe
mov
les
divl
dec
test
mov
mov
jle
scas
int
push
insb
in
mov
lahf
cmp
pusha
rcrb
loop
ljmp
adcl
lahf
xlat
inc
out
jnp
pop
imul
fadd
nop
pop
int3
into
dec
push
popa
popf
lret
dec
push
sub
or
mov
mov
jge
mov
test
push
int
and
or
mov
push
dec
sbb
inc
xor
xchg
or
pop
sub
xor
arpl
fsts
cmp
je
insb
jo
and
push
cmpsb
outsl
in
xor
push
pop
stos
xchg
idivl
mov
pop
push
xor
repnz
jnp
imul
mov
addr16
pop
pop
outsb
dec
int
jnp
mov
lret
jmp
mov
jb,pn
aad
lcall
into
mov
or
pop
pop
mov
jge
add
sub
out
loopne
ret
lock
xor
lea
sub
jmp
sub
mov
inc
in
data16
arpl
adc
xchg
clc
repnz
mov
mov
gs
das
fldcw
sub
int
aad
repz
dec
fsubs
lods
mov
adc
xchg
add
and
mov
sbb
hlt
es
test
mov
sub
pop
add
repnz
aaa
jne
ds
mov
rcr
lods
popa
scas
test
int3
adc
cmpl
in
push
insb
or
ss
fistpll
mov
aaa
push
imul
testl
add
pop
xchg
inc
test
push
xor
dec
iret
fistl
fwait
movl
jo
cmp
stos
aas
in
movsl
inc
jno
inc
push
sub
cltd
inc
loop
or
cmpb
loope
daa
mov
jbe
aas
clc
dec
cmp
xchg
push
sarl
jbe
mov
dec
insb
out
inc
and
aas
sbb
add
lods
jo
fs
cltd
cli
mov
xchg
sbb
out
ret
fisubl
dec
and
insb
sub
pop
lock
push
popl
out
addb
ds
out
bound
sbb
adc
imul
mov
jmp
idivl
cltd
in
rclb
outsb
fldcw
ljmp
inc
mov
lahf
cmp
jnp
cmpsl
mov
pop
xchg
test
scas
xor
out
sub
lret
scas
adc
mov
roll
mov
inc
xor
mov
lahf
jg
xchg
jno
in
or
xor
aas
mov
jo
lods
popa
jmp
in
inc
mov
in
sbb
loope
insb
hlt
mov
sbb
cmp
shll
xchg
int3
cmp
shlb
xchg
jmp
xor
test
sub
sahf
arpl
adc
cmp
pop
std
filds
xchg
add
mov
lahf
xchg
dec
stc
rcrb
sbb
add
jmp
icebp
push
pop
xor
mull
pusha
push
repz
int
nop
outsb
mov
fdivp
lcall
jp
xchg
enter
push
ret
xchg
inc
inc
out
xor
in
int3
push
adc
mov
lcall
add
mov
jne
jle
jecxz
adc
push
ds
add
cmpsb
adc
daa
cmpsb
or
push
push
movsb
pusha
dec
ja
clc
ret
addb
add
push
jbe
fwait
imul
sub
jl
int3
inc
add
cmp
xorb
cld
idivl
jge
sbb
int3
mov
and
es
inc
enter
nop
icebp
andb
xor
les
ret
and
adc
mov
jo
inc
outsl
jg
add
jno
test
in
out
mov
insb
in
lahf
ljmp
add
cmp
push
jnp
pusha
movsl
rcl
clc
dec
push
addl
std
sbb
adc
test
cmpsl
in
in
lods
pop
cmpsl
fadd
lahf
in
stos
in
dec
cli
jne
inc
cmp
nop
aam
repnz
pusha
mov
test
inc
ss
and
pop
cwtl
out
or
lret
adc
fcom
je
jg
xchg
adc
int
mov
fbld
ss
adc
stos
clc
dec
mov
inc
stos
push
mov
add
or
sub
aaa
dec
insb
imul
mov
mov
xor
jmp
jne
daa
xor
add
push
fwait
or
push
add
outsl
xchg
mov
and
gs
fidivs
fiaddl
popa
dec
add
stos
sub
movsl
call
push
push
jmp
inc
mov
ret
in
nop
jle
repz
xchg
in
pop
push
and
ror
xchg
fbld
push
fstl
loop
push
xor
mov
lods
pop
test
jne
sub
test
dec
shll
push
in
out
jp
pop
add
inc
out
xor
mov
fwait
int
adc
cltd
cwtl
jb
lods
sub
pop
faddp
in
pop
push
call
jo
xor
scas
std
cmp
fmuls
sti
fisubrl
enter
push
inc
aas
push
jbe
or
xor
cmpl
test
xchg
fisttpll
dec
orb
mov
xchg
sahf
negb
jecxz
dec
mov
repnz
jb
les
mov
cltd
jge
mov
cs
push
mov
icebp
call
jp
lcall
mov
sbb
in
cs
pop
pop
popf
xchg
lock
call
arpl
inc
out
fs
jg
rorl
jmp
data16
std
fbld
iret
pop
push
push
inc
aam
push
in
mov
repnz
xchg
jno
inc
gs
nop
add
insl
sbb
cwtl
push
js
aam
jmp
sub
inc
add
std
mov
sbb
pushf
call
pop
loopne
stos
inc
push
mov
cmp
subl
popf
pop
pop
mov
fldenv
add
add
cmp
adc
lock
pop
outsl
outsb
xor
jl
pop
pop
dec
sub
inc
ret
lods
lcall
add
push
aaa
lds
fxch
adc
cltd
mov
pop
or
xlat
push
aad
cli
jae
clc
xchg
mov
in
loopne
fildl
xchg
adc
rcll
pop
xor
pop
mov
jnp
and
mov
mov
fisttps
xchg
movsb
pop
divb
cmpsb
sbb
pushf
inc
push
fwait
xor
cmp
and
mov
xchg
popa
into
and
push
mov
bound
pop
popa
scas
cmp
in
mov
lret
xchg
xor
jo
rclb
es
cs
repnz
jb
pop
push
mov
pop
fcomps
cld
push
adc
adc
jnp
fcoml
sbb
shlb
or
jb
inc
dec
iret
push
xlat
lret
mov
mov
les
mov
lock
sbb
jno
pusha
clc
jne
push
or
and
addr16
xchg
sub
inc
jae
push
test
and
adcb
fsubrs
xchg
subb
out
loope
inc
fucomp
sub
jo
and
jnp
inc
inc
jae
mov
mov
ljmp
cld
sub
xchg
imul
js
adc
outsb
jns
outsl
mov
cmp
jmp
xor
fucomi
hlt
mov
cltd
adc
mov
out
jmp
sbb
ljmp
out
adc
mov
lret
aam
jae
ss
out
xor
adcb
stos
adc
in
les
add
repz
inc
pop
dec
xchg
jmp
mov
push
rcrb
xor
data16
adc
adc
dec
stos
inc
mov
scas
pusha
inc
mov
xchg
xchg
lds
iret
in
jb
loopne
test
out
xor
pop
das
stc
add
inc
test
stos
out
fisubl
nop
fld
mov
or
test
pop
sub
push
les
xchg
pop
dec
in
or
je
gs
lret
mov
cmp
mov
shll
xchg
jbe
les
xor
imul
and
je
outsb
fstpt
inc
sbb
jns
in
test
cs
and
sub
inc
xlat
lock
mov
ret
scas
int
jbe
lods
cmp
jmp
push
cmp
dec
mov
add
dec
dec
push
dec
pop
movsb
data16
sub
mov
fnstcw
jge
loopne
mov
sub
dec
mov
cld
mov
outsl
add
adcl
frstor
xchg
notl
pop
xchg
jp
sub
push
mov
adc
xchg
iret
cwtl
dec
mov
pop
lods
sar
fidivs
sub
fidivs
das
jg
xor
mov
pop
test
mov
out
push
mov
cld
shll
inc
mov
repnz
jns
icebp
arpl
add
push
jmp
rclb
loopne
fcomps
lcall
pop
push
jecxz
movsl
and
jb
insl
mov
cmp
jb
test
lret
pop
inc
mov
std
fisubrl
lret
pushf
mov
inc
cmpsl
adc
pop
lret
push
push
add
mov
insb
inc
and
lods
lea
negl
mov
sub
mov
pop
in
outsb
cli
cmp
mov
inc
aam
pop
daa
repnz
pop
out
ds
jbe
aam
cmp
in
add
mov
inc
jge
mov
sahf
push
lea
mov
or
mov
mov
xor
pop
dec
and
les
jmp
mov
sub
test
dec
gs
int3
push
das
js
and
push
aad
leave
jne
xor
je
push
lods
and
inc
xor
or
cmp
mov
insl
in
jp,pt
ficomps
sbb
inc
cmp
jne
dec
adc
lahf
dec
js
popf
call
mov
pop
xchg
ret
stos
adcb
inc
cli
and
mov
dec
cmp
call
lret
xorl
mov
push
aaa
adc
out
popf
adc
cmpsl
mov
ljmp
into
leave
sub
jae
int
sub
or
fwait
push
mov
jns
into
inc
aad
cmpsb
xor
pushf
jno
push
push
xchg
testl
push
pop
adc
push
out
mov
dec
add
adc
test
fcmovb
shll
data16
xchg
daa
push
fisttpl
fbld
sbb
add
sbb
push
pushf
mov
ffree
call
enter
xchg
mov
or
inc
je
pop
pop
fisttpl
and
cmp
mov
inc
or
sub
pop
jo
mov
pusha
push
rcl
enter
ret
cmp
mov
pop
cmp
mov
or
insb
jge
push
fbld
mov
sub
scas
or
notl
sub
adc
dec
xchg
pop
jge
mov
insl
and
outsb
ljmp
push
lret
rcll
call
or
std
movsl
jl
add
push
xorb
mov
pop
cli
push
mov
mov
mov
ret
adc
aaa
bound
into
imul
gs
add
rclb
xchg
mov
adc
icebp
mov
nop
popf
rcrl
pop
dec
js
add
adc
sbb
jecxz
mov
adc
pop
imulb
lret
shll
fmuls
mov
or
mov
test
mov
popf
sbb
push
inc
fcmove
mov
cmpb
int3
push
jle
inc
repnz
call
pop
push
pop
or
pop
clc
sub
test
in
nop
pop
leave
jb
subb
pop
dec
push
stos
rclb
lods
and
adc
test
lret
pop
cwtl
add
stos
out
paddsb
lret
fimuls
stos
sbb
jge
mov
int
jns
dec
adc
push
mov
in
sbb
mov
out
pop
mov
shrb
pop
or
push
push
push
out
test
or
inc
mov
jmp
mov
outsl
pop
push
out
jmp
mov
shrl
dec
jbe
or
aad
movsb
adc
mov
pop
or
push
xchg
push
xchg
jae
cmp
dec
dec
xlat
xor
xor
sub
call
in
aas
cld
test
cld
pop
mov
popa
ret
lods
jge
adc
in
sbb
sub
mov
fadd
imull
popa
loopne
in
ss
mov
ss
lahf
out
adc
inc
xchg
pop
xor
cmp
push
mov
popf
cmp
sbb
pop
sub
dec
imul
and
pop
out
in
testb
cmp
into
pop
insl
push
scas
push
fcom
insb
xorl
mov
add
outsl
cmc
mov
cmp
mov
loope
inc
testl
mov
mov
call
mulb
jb
cmp
cmpsb
xor
cld
push
jmp
fiadds
bound
and
inc
dec
aaa
shrb
inc
ljmp
call
movsb
insl
sti
rorb
mov
nop
pop
mov
cmp
mov
pop
stc
imulb
inc
sub
sbb
mov
mov
repnz
push
adc
mov
dec
repnz
ja,pn
enter
jg
mov
mov
pop
cmpsl
cmpsl
pop
and
andl
rcll
cmp
push
xchg
xor
dec
sbb
add
aam
mov
mov
push
sti
push
jns
or
jge
pop
fstpt
inc
push
jmp
jl
inc
aad
cmp
stos
push
adc
leave
aaa
cmp
int3
dec
mov
xlat
xchg
aam
jb
and
adc
sti
dec
lcall
out
pop
outsl
pop
inc
inc
bound
cmp
in
mov
cmp
stos
cmp
in
jno
add
mov
stos
test
add
int
outsl
sub
sbbl
adc
lea
mov
imul
loope
in
xor
mov
adcb
rcrb
in
xchg
out
loope
sbb
test
xor
inc
mov
push
pushl
mov
push
lret
scas
fcoms
jp
lods
dec
lds
cli
hlt
filds
pushf
jmp
sbb
pop
xchg
xchg
xlat
out
pause
mov
cmp
push
cmpsb
das
xchg
jne
jge
jmp
fisubs
lods
adc
out
scas
shll
fiadds
lahf
test
outsl
stc
and
lret
sahf
dec
ret
data16
das
pushf
lret
mov
sbb
push
leave
pushf
adc
xchg
pop
jl
dec
add
rep
and
mov
adcl
cltd
outsl
push
dec
or
lea
mov
or
stos
or
mov
xchg
sbbl
jl
push
test
xchg
insl
imul
jmp
xchg
pop
fisttpll
rolb
or
lock
push
inc
mov
xchg
inc
adc
insb
je
sub
xchg
dec
int3
inc
outsl
outsb
cmp
jnp
push
out
aam
jl
sub
ret
and
jnp
xchg
push
mov
popf
pushf
ret
adc
dec
scas
call
pop
repnz
mov
loope
add
xor
pop
mov
push
or
cmp
call
fimull
imul
inc
cmp
mov
outsl
xlat
pop
das
xlat
cmp
adc
mov
add
lret
test
pop
bt
int
push
ja
inc
dec
inc
mov
lahf
aas
pop
fwait
mov
sub
inc
mov
ror
shrl
es
push
shrb
mov
sbb
stos
sbb
lahf
and
pop
jne
test
adc
dec
subl
loope
mov
sbb
xor
das
pop
insl
bound
jle
mov
lret
push
insl
ror
or
mov
sub
cmp
xor
in
loopne
push
out
sub
mulb
insb
mov
idivb
les
stos
sub
inc
lahf
js
cld
dec
cltd
inc
jle
int3
and
cmp
popf
iret
jmp
xor
inc
xchg
sub
xor
lods
cmp
lock
cmp
push
repz
pop
and
cmpb
repz
mov
jnp
adc
cmpsb
push
sub
mov
jge
push
push
sbb
enter
scas
cmp
mov
icebp
or
push
clc
movsb
cld
inc
and
loopne
xchg
jmp
mov
xor
mov
add
ds
fcmovb
sub
mov
cmp
cmpsl
cmp
sub
xchg
fcmovb
mov
pop
jg
push
mov
xchg
in
cli
jb
fs
ljmp
aas
sti
movsl
and
fidivs
cmc
mov
dec
mov
push
dec
xchg
xchg
sub
fdivl
popf
push
and
aad
cmc
add
ficoms
cmp
push
decl
pop
xor
fcmovbe
adc
add
lret
cmp
out
dec
lahf
data16
sub
in
add
sbb
aaa
sub
adc
xchg
popa
lcall
push
cmp
aas
inc
mov
test
sbb
or
fidivl
or
test
arpl
xchg
xchg
push
out
push
lret
jns
dec
insl
decb
psubsb
cmp
dec
jae
jns
mov
jecxz
xlat
xchg
shl
lods
mov
fdivs
dec
inc
inc
mov
push
pop
and
idivb
mov
cmpsb
in
pusha
sti
add
fwait
jmp
cmpsb
iret
mov
rclb
test
xchg
mov
in
adc
push
mov
pop
sti
divb
loope
icebp
lods
fimuls
and
sbb
dec
stos
push
les
add
cmp
call
jp
inc
loop
roll
movsb
je
cmp
adc
arpl
ds
xor
fldt
stc
aam
dec
pop
push
xorl
outsb
adc
mov
cwtl
push
out
sub
inc
pop
clc
int
js
or
cmp
or
pop
out
outsb
pop
outsl
mov
inc
sub
sub
repz
test
sub
loopne
out
adc
jno
mov
aad
xchg
fmull
movsb
rclb
addr16
push
lods
xchg
xorl
loop
sbb
mov
xchg
cmp
mov
out
data16
xor
out
xor
lds
push
pop
mov
fistps
jmp
sbb
adc
xchg
icebp
cmp
mov
pushf
xor
in
push
fwait
jp
pop
xchg
gs
inc
cs
arpl
loope
cmpl
inc
lret
out
pop
pop
xlat
push
or
std
out
jnp
mov
xchg
jge
xor
push
add
aam
fdivp
std
xlat
testl
imul
es
movsb
sbb
push
mov
ret
mov
mov
xchg
fnstcw
out
push
rcll
mov
arpl
xchg
dec
mov
mov
mov
jge
mov
jge
add
stos
push
inc
cwtl
cli
mov
xor
xlat
dec
xlat
dec
sbb
inc
inc
stos
cwtl
xor
add
inc
imul
fimull
jno
cli
sbb
ljmp
xor
add
mov
inc
stos
jo
in
stos
dec
cmpsb
push
dec
cli
mov
pop
push
mov
xchg
xchg
pop
test
mov
leave
pop
mov
cs
mov
jp
push
xor
addl
adc
and
lods
xchg
dec
mov
and
jmp
divl
lahf
or
cmp
inc
dec
in
jmp
div
fwait
shrl
test
mov
repz
mov
push
dec
cmpsb
pop
fstps
pushf
not
out
mov
flds
mov
sti
adc
pop
daa
and
ret
mov
jmp
icebp
pop
aaa
sub
cmp
cmp
sbb
rolb
inc
mov
loop
xchg
dec
insb
out
sub
lods
hlt
sarb
xchg
int3
xlat
ljmp
pop
mov
mov
sbb
push
bound
mov
mov
mov
dec
inc
outsb
insw
pop
jb
hlt
clc
mov
and
iret
and
push
inc
mov
inc
cmp
arpl
sbb
lods
push
mov
popa
and
and
mov
inc
and
pop
mov
sahf
andl
push
or
gs
cltd
inc
or
movsl
out
pop
cmpsl
sub
mov
cmc
ljmp
xchg
add
jb
mov
lret
xor
or
jnp
fs
or
in
shl
dec
xchg
cmpsl
mov
add
js
jl
out
add
pop
dec
popf
mov
inc
les
or
push
inc
push
es
adc
daa
aas
jl
rcrl
das
testl
pushf
sbb
add
mov
lds
mov
out
jp
xor
push
add
push
mov
pop
cmp
pop
loope
cwtl
pop
roll
and
pop
mov
cs
test
adc
jecxz
shl
clc
cmpsb
scas
mov
scas
and
js
std
inc
mov
push
in
fidivl
xchg
stos
inc
jae
inc
or
test
pop
inc
rcll
lret
inc
xchg
and
sub
clc
dec
clc
and
pop
jecxz
test
and
cmp
push
mov
rcr
arpl
cmc
adc
cmp
test
mov
xchg
cwtl
mov
arpl
sahf
lret
push
pop
cmpsb
or
rcll
and
mov
adc
push
or
mov
bound
and
cmp
jl
cwtl
pop
test
lea
es
xor
xor
xchg
aaa
or
sbb
adc
out
fisttpl
mov
adc
and
push
mov
fdivl
pop
int3
push
push
pop
mov
dec
dec
sbb
fnstenv
cmpsb
inc
leave
xlat
adc
pop
lock
out
inc
test
jmp
mov
inc
mov
aam
jecxz
mov
jb
mov
inc
and
mov
lcall
mov
sbb
push
jmp
clc
add
lea
sub
cltd
std
sub
ret
jp
gs
icebp
lcall
sub
xlat
mov
adc
lcall
inc
lods
mov
out
iret
push
or
fwait
shl
pop
lock
dec
pop
mov
add
rorl
imul
ja
ret
add
xchg
push
push
sbb
pop
data16
cmc
int3
ret
bound
dec
xchg
aam
sub
scas
xchg
mov
and
and
xchg
jmp
cmp
cmp
leave
in
test
mov
mov
add
pop
sbb
dec
add
scas
mov
mov
jg
jae
cmp
jecxz
imul
subl
adc
andb
xchg
add
mov
xor
int
mov
push
mov
dec
imul
xor
test
cli
dec
ret
xchg
faddl
inc
stc
sub
dec
add
fisttps
adc
les
int3
jp
xor
ficoml
xchg
or
and
xor
dec
and
dec
pop
adc
cs
pusha
rcll
shll
leave
and
and
popf
xchg
imul
add
mov
inc
mov
push
pop
fistps
mov
movb
adc
mov
ss
push
mov
add
jnp
aad
push
dec
out
or
lahf
fildl
mov
cs
jl
add
insl
and
cltd
jb
mov
loop
or
test
jne
int3
or
jg
jo
cmc
scas
cmp
sahf
mov
xor
mov
mov
sub
shlb
scas
jmp
dec
stos
aad
inc
leave
xor
fisubs
mov
xlat
xor
testb
dec
movsb
pop
orl
imul
dec
cmpsb
mov
mov
movsl
inc
fnsave
arpl
int3
ret
dec
bnd
sbb
inc
push
xor
mov
mov
or
aad
ficompl
lds
sub
fmuls
loop
or
loopne
out
roll
mov
repnz
pusha
mov
add
and
pop
incl
xor
add
stos
push
xchg
pop
mov
jp
out
stc
aas
fwait
cmp
lret
outsb
aas
loop
jle
inc
gs
loopne
pop
repz
adc
std
and
mov
dec
mov
je
fsubrs
xor
ret
adc
cmp
mov
lahf
lret
shrb
mov
sub
mov
mov
add
loopne
imul
je
mov
push
cmpl
fimuls
dec
clc
in
insl
or
mov
outsb
out
ds
xor
pop
jmp
sbb
in
mov
pop
test
loop
movsb
xchg
pop
test
imul
mov
pop
xor
xor
aaa
aad
fisttps
pop
xor
add
les
add
pop
inc
xchg
cmpsb
jbe
aad
cmpl
dec
mov
jo
stos
out
jecxz
push
xchg
push
movl
test
mov
int
fmuls
add
jmp
sbb
pop
pop
inc
scas
cmp
cmp
cmp
test
fildll
cmp
jl
cmp
rcl
dec
out
fcompl
test
add
es
daa
scas
iret
mov
rcrb
inc
jnp
sub
insb
fwait
push
jg
out
add
xor
and
inc
stos
mov
xor
pop
ja
pushf
push
inc
movsl
clc
mov
inc
push
xlat
cmp
test
lods
xor
out
jmp
dec
mov
cmp
idivb
jae
push
cmp
jmp
xor
in
mov
mov
es
inc
jne
lods
cld
mov
negb
cmp
cmp
or
fs
shll
cltd
or
in
outsl
aaa
cmp
arpl
dec
js
movsb
lret
mov
lahf
add
pushf
mov
fwait
out
or
cmp
call
cli
cmp
cmc
mov
pop
fists
mov
and
push
imul
pop
into
or
lods
xor
int
mov
dec
mov
sub
and
dec
add
jl
std
push
imul
clc
pop
pop
idivb
scas
rcrl
mov
add
int3
adc
sbb
xchg
imul
dec
mov
aas
adc
mov
add
popa
pop
jae
inc
jle
dec
push
mov
sbb
pop
in
sti
pushl
dec
das
ret
cltd
dec
ud0
stos
imul
add
xchg
xor
scas
hlt
lret
xchg
popa
flds
lods
add
outsb
cld
cmpsb
ja
mov
mov
scas
call
fisttpl
sub
pusha
cmpsl
rolb
out
cltd
inc
push
jne
dec
shlb
push
xor
adc
mov
std
pop
mov
jge
rorl
lock
sahf
cs
mov
scas
xor
stos
mov
push
mov
and
fmull
mov
mov
icebp
aaa
pop
data16
mov
pop
push
test
mov
push
bound
nop
insb
xor
rcrl
pop
sub
dec
jns
imul
jno
or
and
adc
jp
sti
add
test
fldl
stos
fwait
lods
pop
iret
mul
call
mov
or
mov
xchg
f2xm1
mov
cmc
fsubrl
mov
dec
mov
out
rcll
nop
sub
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
jmp
add
lret
lret
add
push
sahf
mov
mov
adc
inc
inc
mov
aad
cli
sub
ja
mov
fisubl
fidivs
testl
xchg
xchg
fwait
movsl
sub
pop
xor
ror
pop
sar
rol
xor
push
dec
sub
pop
inc
cmp
je
into
popa
push
movsl
sbb
or
sbb
call
and
jo
xor
and
push
mov
inc
sub
or
push
loopne
dec
imulb
cs
pop
and
movsb
out
cmp
pop
lret
jge
dec
mov
out
bound
dec
cmp
rcll
lods
inc
in
inc
mov
push
pop
add
cmpsl
dec
add
xchg
mov
xor
jbe
and
popf
test
dec
jae
mov
jecxz
mov
movl
les
ljmp
popf
push
push
push
shll
mov
loope
scas
aad
dec
ja
push
mov
mov
dec
sahf
xchg
das
dec
push
lods
mov
cs
imul
mov
sbb
shlb
jmp
test
or
outsb
int
test
mov
add
pop
adc
sbbb
pop
mov
mov
in
adc
lret
xor
pop
incb
sub
cmp
and
mul
push
or
jg
jle
xchg
sbb
xor
hlt
cwtl
gs
mov
adc
lahf
dec
les
mov
icebp
lret
jmp
pop
jb
pop
orb
xchg
outsb
aaa
xor
jg
push
cwtl
mov
mov
mov
xchg
divb
dec
mov
adc
xchg
push
lods
nop
inc
cmpsl
pop
sub
fistps
in
sbb
sub
lds
adc
ja
shrl
cli
roll
inc
outsl
jl
jmp
hlt
adc
mov
push
or
testb
mov
jno
xor
test
dec
push
lret
xchg
pop
daa
jne
or
sub
xchg
aam
cmp
and
loopne
out
inc
inc
xlat
ljmp
jo
das
cmc
xlat
dec
out
sti
add
addr16
mov
aad
into
fidivl
mov
out
adc
inc
inc
rcr
int
nop
cwtl
xlat
xchg
loop
ljmp
mov
push
fidivrs
ja
push
sbb
jle
notl
mov
cmp
loope
cmp
push
inc
mov
outsl
or
sti
add
in
popf
movsb
dec
sub
xchg
ret
or
dec
mov
pop
and
int3
push
fistpll
inc
pop
add
xor
out
cmp
mov
fwait
adc
movsl
repnz
out
out
fnstsw
loopne
xchg
jle
inc
aam
stos
push
sub
loop
ret
out
xchg
imul
ret
push
repz
sbbb
mov
add
int
out
fnsave
jne
sbb
push
loop
loop
xchg
jae
xlat
lahf
dec
adc
adc
jo
push
jne
mulb
mov
jp
or
dec
pushf
add
adc
jp
filds
dec
imul
sar
js
rcl
gs
lds
cmp
insl
loopne
pop
loop
adc
or
mov
fbld
mov
mov
hlt
cld
call
pop
insl
out
hlt
jb
bound
test
push
mov
mov
pusha
lcall
add
jno
mov
xchg
add
adc
mov
in
lret
mov
and
stos
test
repz
xchg
test
inc
inc
push
leave
or
rcrl
aad
in
lret
xchg
lcall
mov
les
push
jmp
mov
cmp
aaa
es
pop
adc
sub
dec
clc
ljmp
mov
mov
and
push
pop
mov
pop
dec
adc
stos
out
fcomi
cmpsb
or
frstor
imul
xor
std
pop
inc
aam
cmp
jnp
cmpsb
and
jp
pop
mov
hlt
or
lock
fdivl
add
mov
sub
xor
inc
cmp
sti
fistps
push
or
xchg
inc
xor
insb
loopne
mov
adc
xchg
push
cmp
popf
or
mov
mov
sub
sbb
je
dec
nop/reserved
xor
xchg
xchg
ja
mov
cmp
mov
xchg
and
ficomps
inc
push
stos
test
dec
cmp
jno
jae
and
idivb
jmp
cmp
pop
mov
into
popf
sbb
out
xor
push
cwtl
sbb
test
xorl
adc
xor
mov
sub
shrl
mov
adc
imul
in
xchg
push
fsubr
call
jl
mov
aas
xchg
adc
pop
jmp
insl
cmp
lahf
push
push
stc
fstp
inc
cmp
adc
xchg
mov
xor
jle
or
test
ret
pop
bound
std
jmp
dec
mov
stos
jb
js
ss
rcll
jb
mov
mov
movsb
cmp
pop
adc
or
mov
inc
dec
out
cmpsb
mov
mov
cmp
dec
fcomp
fnstsw
jmp
jle
add
sub
or
mov
sbb
xchg
imul
repnz
lds
adc
mov
scas
add
jae
out
pop
push
loopne
mov
pushf
int
sbb
xchg
mov
push
sbb
inc
jne
into
frstor
jl
out
aam
std
cli
inc
lret
mov
cld
out
in
add
xor
fistpl
mov
pop
push
add
cmc
cmp
mov
inc
xor
test
imul
loope
cmpsl
sub
jmp
pop
push
insb
cltd
andl
nop
shrl
cs
test
xchg
outsb
js
icebp
pushf
jno
aad
daa
ret
dec
cmp
cmp
into
pop
pushf
jns
inc
out
nop
ja
dec
jbe
into
pop
mov
mov
incb
int3
adc
sti
aam
pop
xchg
pusha
or
mov
call
bound
and
mov
push
xchg
loope
daa
popf
adc
or
sti
fstpt
rcrb
cmp
mov
pop
sahf
dec
enter
sub
and
enter
xchg
int
fidivl
sub
or
jg
xchg
add
push
mov
fistpll
jnp
mov
test
ret
fnstcw
outsb
sbb
mov
nop
adc
out
dec
stc
push
push
loop
pop
mov
pusha
lock
loope
pop
test
sbb
fnstenv
push
fiadds
pop
mov
fsubrp
popf
arpl
pop
mov
sbb
inc
mov
stc
push
push
sub
dec
add
sbb
jmp
scas
repz
adc
and
addr16
cltd
shll
je
mov
fldl
jle
int3
fiaddl
pop
sbb
mov
dec
push
mov
xchg
addb
xorb
iret
jae
enter
out
mov
push
ss
mov
or
imul
add
adcb
fmuls
xchg
pushl
shlb
xchg
cmp
ret
sbb
sub
cmp
push
push
push
mov
imul
xor
mov
pop
shlb
mov
in
inc
push
push
xchg
sub
add
jnp
xchg
mov
andl
jns
sub
lds
enter
cwtl
push
fldl2t
add
inc
push
leave
lods
cli
sbb
gs
popf
cli
dec
xchg
or
loope
loop
jno
mov
cmpsb
out
test
cmp
or
ftst
popa
and
xchg
cmpl
loope
jo
out
out
and
sub
into
je
adc
aaa
ja
jne
or
xchg
out
fs
ljmp
xchg
mov
frstor
pop
mov
test
lahf
arpl
std
das
fistpll
and
xchg
ret
pop
mov
cmp
and
dec
add
in
scas
cmp
and
xchg
dec
sbb
addr16
cwtl
mov
hlt
and
gs
push
lods
insl
fsubr
sub
or
fs
cwtl
pop
into
fidivrs
iret
and
mov
jmp
pop
mov
sbb
sar
sbb
pop
es
lods
iret
loopne
jl
rep
out
sbb
nop
inc
xchg
sub
mov
lea
add
mov
sbb
out
rcr
mull
iret
notb
inc
inc
fwait
mov
adc
sbb
ret
sarb
cmp
and
xchg
outsl
std
xchg
lcall
aaa
xlat
jno
mov
adc
lods
dec
mov
dec
ficoms
popl
or
arpl
xor
test
stos
push
mov
in
pop
add
xchg
mov
sbb
fwait
adc
insb
pop
mov
das
cmp
loopne
ss
cs
inc
subb
movsl
inc
xchg
jg
fcomip
ror
in
mov
fwait
iret
cmc
data16
out
mov
scas
mov
cld
fistps
bound
cmp
push
test
jo
mov
jg
pop
sub
pop
mov
cmp
jg
iret
mov
cmp
mov
mov
sub
sti
icebp
mov
outsl
jne
mov
push
inc
jl
lahf
bound
xchg
push
add
or
iret
dec
in
pop
pushf
insl
arpl
and
mov
pop
sbb
in
pop
ffreep
ljmp
out
test
or
dec
aaa
jmp
daa
sahf
mov
cmp
loopne
or
mov
cmpsl
imul
xchg
std
roll
xchg
add
xchg
jno
cmp
icebp
popa
push
mov
enter
mov
popf
fdiv
mov
scas
mov
inc
and
xor
ret
dec
fwait
dec
mov
andb
or
add
or
jno
incl
mov
outsb
fisttpll
fwait
lea
or
outsl
shll
or
jb
cmpsb
aam
call
jbe
mov
xor
movsl
cmp
mov
push
in
data16
aam
test
adc
fldcw
xchg
scas
in
mul
and
mov
outsb
outsl
loopne
push
in
xchg
pop
int
fcoms
ret
and
and
push
push
pop
mov
pop
mov
mov
repz
cmpsl
dec
lods
mov
nop
mov
sub
ret
inc
les
in
shl
push
fwait
sbb
insb
sub
xchg
sub
inc
leave
push
pop
aaa
jbe
mov
xor
cmp
pop
out
sub
ds
or
lret
or
hlt
inc
add
adc
aam
es
loope
fimuls
sarl
jl
xor
and
fdivs
fsubr
hlt
icebp
inc
push
jmp
inc
jo
push
mov
mov
mov
sti
das
inc
pusha
shrb
sbb
dec
mov
mov
ljmp
out
push
jbe
pop
xchg
jae
loop
xor
push
push
cmc
add
jnp
push
pop
add
mov
mov
adc
adc
scas
sub
ss
into
insl
enter
add
xchg
sbb
and
dec
imul
lcall
sub
push
cs
add
pop
mov
mov
lahf
repnz
stc
lret
int
inc
cmc
jnp
cli
mov
and
jecxz
lcall
add
lret
repnz
push
add
xchg
int3
shll
outsl
rdmsr
in
clc
pop
icebp
push
add
inc
sub
mov
pop
sub
jae
fisubs
mov
mov
cmp
mov
mov
daa
repnz
add
jnp
lods
rol
test
fstpt
dec
mov
push
lcall
addl
imul
and
enter
and
ja
jp
xor
popf
sub
loopne
xor
sbb
sahf
pop
adc
push
pop
add
fists
test
push
inc
dec
pusha
inc
add
add
outsb
lcall
jmp
stc
shlb
jno
sahf
inc
fwait
mov
sub
sarl
hlt
pop
popf
mov
in
int
and
ss
je
mov
cli
std
icebp
sbb
clc
adc
hlt
mov
test
cmp
cmpsl
xchg
pop
mov
out
mov
mov
jg
xor
xchg
popf
or
xchg
pop
lods
insb
and
or
in
lock
in
mov
addr16
add
lss
movsb
ss
lock
xchg
pop
jo
jecxz
mov
in
icebp
sub
mov
or
notl
xor
es
lea
ja
fsub
push
ss
dec
sbb
arpl
xchg
js
fstps
jle
inc
jo
adc
push
mov
das
adc
fadds
add
aad
fisttps
cmp
mov
xor
mov
ss
movb
cs
pop
cmpsb
int
outsb
jp
movsb
rorb
mov
mov
mov
sub
xlat
pop
mov
loop,pn
jg
fidivl
lret
dec
out
inc
jns
imul
es
fsin
push
repnz
decl
pop
pop
dec
and
inc
ljmp
cmc
xor
icebp
sbb
xor
mov
dec
cmc
lcall
mov
stos
imul
xor
subl
pop
je
popa
arpl
pop
sub
cwtl
mov
xchg
pop
pop
and
sbb
movsl
cwtl
mov
jae
lock
in
shrb
in
int
mov
cmp
add
jns
sahf
sub
scas
or
loope
jno
popf
out
lret
cld
bnd
mov
iret
cmp
and
stos
mov
pop
xor
aad
js
dec
stos
nop
in
es
dec
inc
mov
pushl
inc
data16
xor
fisttpl
into
loope,pn
and
lret
fldcw
dec
mov
jb
and
jbe
jns
and
ja
push
push
stc
add
xchg
fucomip
fdivrs
jne
adc
mov
mov
pop
pushf
fisubrl
lods
pop
xor
mov
xchg
iret
dec
inc
mov
in
xor
insl
inc
mov
mov
and
and
faddl
xor
ror
cltd
out
das
dec
out
gs
mov
adc
sbb
ret
loop
mov
outsb
sahf
xchg
pop
pop
test
lret
scas
mov
or
mov
mov
xchg
in
push
or
das
fisubs
xchg
push
xor
pop
push
repnz
addr16
sub
dec
insl
jl
jb
into
in
cltd
push
sbb
test
mov
mov
shrb
xchg
cmp
outsl
das
rcrl
outsl
push
addr16
adc
dec
xchg
add
mov
int3
les
std
je
das
pop
jns
in
lea
inc
aaa
mov
mov
popa
mov
fdivrl
adc
xchg
fisubrl
cltd
movsl
les
je
mov
loop
repz
test
orb
insb
mul
xor
mov
and
adc
scas
add
mov
push
dec
dec
hlt
sbb
xchg
xchg
xor
je
cmp
cmp
sahf
sbbl
ret
stos
push
xor
mov
cmc
imul
dec
xchg
sub
add
sbb
push
jle
and
scas
mov
aas
loope
push
loope
xchg
and
xor
cmp
mov
push
in
imul
jge
fbstp
sbb
pushf
inc
ljmp
dec
mov
xchg
out
cmp
sbb
imul
cmc
or
inc
je
rcl
inc
insl
fmull
fwait
inc
lds
sub
pusha
mov
inc
enter
xchg
jb
pop
bnd
adcl
js
lret
mov
pop
inc
xchg
in
std
cli
push
or
cld
fdivs
push
sub
cli
mov
add
fidivrs
out
repz
mov
mov
push
or
mov
int
xor
xchg
mov
mov
mov
popf
mov
inc
lahf
push
lock
jp
popf
ljmp
fsubl
pop
leave
and
test
mov
pop
mov
cld
aas
movsb
xlat
push
andb
mov
jmp
sbb
xlat
pavgw
lea
sahf
xchg
nop
into
clc
sub
scas
jp
lret
sbb
adc
fs
and
cmpsl
ljmp
mov
or
pop
dec
rcr
jae
jge
outsb
iret
in
out
inc
jp,pn
mov
cs
cmp
lock
sub
ret
and
mov
and
pop
mov
ds
repz
mov
xor
icebp
and
jge
cli
push
movsl
jnp
imul
hlt
icebp
jl
stos
and
sbb
popf
jecxz
enter
and
dec
xchg
mov
adc
cmc
pop
repz
jmp
jecxz
inc
clc
mov
pop
aad
and
add
ja
movsb
dec
nop
inc
push
adc
ret
mov
and
daa
out
jecxz
mov
adc
negl
fsubl
pop
loope
dec
sarl
nop
adc
mov
fldcw
add
sub
cmp
aad
in
out
repz
fucomip
push
dec
sbb
cmp
push
dec
jmp
jl
pop
jo
fldl
inc
cmp
js
addr16
adc
in
xor
insb
inc
push
adc
add
pop
inc
icebp
or
mov
insb
or
arpl
lea
mov
xor
mov
sub
fistl
stc
and
mov
or
negl
fildll
push
scas
shlb
out
in
add
push
push
cwtl
jecxz
xor
leave
ss
out
jb
sahf
cmc
push
pop
jno
leave
je
and
lahf
sub
fisttpll
mov
or
decb
jne
xor
jp
ret
and
add
andb
shlb
in
hlt
movsl
int
inc
and
lret
and
bound
mov
cmpsl
test
pop
ja
mov
outsl
bound
clc
adc
jnp
adc
cwtl
jo
aas
adc
jb
fidivs
gs
int
insb
jne
addb
dec
out
aad
inc
std
dec
bound
xlat
jg
xchg
jno
out
decl
outsb
arpl
imul
xchg
xor
mov
lea
mov
mov
xchg
adc
and
mov
mov
dec
scas
cmp
mov
imul
push
popa
in
js
mov
cmc
fisubs
fwait
cmp
jno
sub
loopne
inc
dec
pop
leave
aam
iret
lcall
jo
adc
ds
pop
pop
pop
repz
mov
push
xchg
xchg
pop
cmpsl
xor
cmp
mov
inc
pop
push
loop
mov
cmp
jae
adc
inc
ret
rcrl
outsb
aas
repnz
sbb
sub
sbb
test
fdivs
xlat
stos
pop
mov
add
test
jp
mov
loop
dec
pop
xor
shrb
inc
pop
and
add
aas
ja
outsb
dec
cld
xchg
mov
gs
sub
shlb
cmc
adc
adc
mov
adc
cltd
es
xchg
xlat
push
push
cmp
sbb
not
cmpsl
sbb
mulb
sub
cltd
dec
in
dec
addb
cwtl
lcall
inc
inc
mov
dec
jbe
hlt
jns
jmp
iret
test
jl
mov
xchg
enter
add
cld
cmp
mov
cmp
stos
sub
push
ret
fwait
stos
pop
adc
jp
loop
sub
mov
cs
mov
dec
xchg
mov
stos
sahf
dec
dec
adc
jg
pop
sub
movb
in
mov
out
les
add
jmp
xchg
pop
in
cld
ss
adc
and
xor
jmp
cmp
add
xchg
push
mov
sbb
inc
lods
popf
insb
mov
lods
add
pop
inc
pop
sahf
adc
jp
sbb
in
cmp
test
jae
lret
clc
push
in
test
lcall
sub
ds
imul
andl
pushf
or
sub
sbb
lahf
sbb
or
movb
out
cmp
mov
int3
insb
mov
aas
and
in
sub
cwtl
cmc
les
repz
xor
popf
mov
or
icebp
out
popf
addr16
cs
jns
aaa
in
ss
xchg
ret
xchg
fldt
mov
pop
adc
test
mov
jg
dec
pop
push
push
js
jae
cmp
in
out
sub
dec
clc
pop
aas
repz
sub
imul
sub
lds
jae
adc
shr
mov
mov
popa
pop
mov
sbb
fsub
dec
push
push
lock
xor
push
dec
inc
xor
insb
insb
rclb
stos
xchg
movsl
lods
xchg
xchg
dec
xor
ficoml
ret
mov
enter
jae
les
rcrb
sbb
mov
xor
fidivrl
call
enter
imul
in
adc
dec
inc
adc
inc
icebp
int
in
sbb
scas
jno
xor
shr
imul
sub
mov
inc
cmp
mov
shrl
dec
xchg
jl
sbb
jp
adc
pushf
clc
jmp
iret
mov
cmpsb
in
jp
pop
shlb
pop
pop
sti
cmp
stos
fiadds
adc
jne
push
cmp
add
in
into
hlt
mov
sti
mov
std
jbe
dec
add
std
stc
mov
cmp
sub
mov
push
jg
mov
sbb
sub
lahf
mov
dec
mov
xchg
sub
jae
sbb
add
sub
insl
push
lock
ljmp
add
jge
cwtl
dec
arpl
test
dec
mov
out
cmp
xchg
ljmp
xchg
push
aas
ds
cmc
dec
mov
fisubrs
data16
jp
scas
pushf
pop
and
lahf
out
mov
lods
sub
loop
xor
mov
les
mov
out
pusha
das
and
movsb
xchg
out
or
push
adc
scas
add
es
inc
or
out
ja
or
cmp
mov
aas
mov
bound
xchg
shrb
gs
pop
enter
les
mov
les
push
inc
inc
jne
movsb
fwait
testl
and
xchg
cmc
mov
jno
repnz
adc
cltd
push
mov
xchg
add
leave
jno
cmp
and
ja
and
pusha
lock
jecxz
jnp
xor
fistpl
loopne
and
mov
pop
in
sbb
stos
ret
sbb
popa
leave
in
xchg
popf
in
imul
xor
movsb
lret
stc
into
jns
sarl
test
inc
int
fs
xor
dec
rcrl
ljmp
mov
dec
pop
push
mov
adc
pop
mov
or
lods
inc
es
xchg
push
mov
dec
cmp
inc
pop
sub
dec
int
lods
jl
shrb
pop
xchg
cltd
clc
icebp
arpl
ffree
mov
or
and
inc
dec
sahf
sarb
aas
aad
adc
cmp
stc
test
rol
sub
mov
aaa
mov
sbbb
xchg
jecxz
xchg
pushf
jecxz
pop
int
incl
jecxz
sbb
sbb
pop
cmc
insb
mov
stc
aam
xchg
sbb
or
mov
call
sbb
xchg
fiaddl
mov
out
out
mov
gs
and
sub
adc
daa
jle
push
mov
mov
in
jl
loop
mov
lret
rolb
fistpl
das
fidivrl
push
nop
sbb
lahf
sbb
lea
jmp
rclb
cmc
in
fwait
push
out
fisubs
aas
mov
pop
dec
pop
pop
xor
xchg
push
imul
jns
mov
stos
mov
pop
sub
sub
jecxz
pop
rcrb
xchg
mov
jmp
pop
mov
outsl
dec
lods
xchg
dec
sbb
call
es
in
repz
aaa
sbb
mov
out
lcall
arpl
divb
mov
pop
xchg
and
dec
fcoms
cltd
adc
mov
xor
pusha
inc
mov
sub
testb
and
jge
sub
cmpsb
les
pop
and
or
leave
cmp
outsb
inc
outsb
repnz
adc
aad
xor
fnstsw
mov
dec
int3
add
filds
mov
push
movsl
sub
sub
test
sub
int3
mov
aas
stos
rcrl
inc
sub
dec
movl
fldenv
mov
dec
fcomi
andl
es
lahf
test
in
dec
int3
test
push
mov
addr16
js
jp
in
mov
sbb
in
mov
dec
xor
dec
cmpl
pop
xchg
jns
inc
adc
jp
or
iret
adc
loop
mov
and
aam
sbb
mov
lahf
pop
leave
gs
and
sub
test
or
stc
out
push
xor
movsb
xor
cmp
sub
mov
inc
pop
pop
push
out
pop
bnd
sub
mov
pushf
ror
movsl
subb
cmc
adc
cmpsb
addr16
jecxz
ret
add
and
bt
mov
jmp
ds
mov
in
int3
push
pushf
arpl
and
push
inc
scas
cs
mov
mov
scas
adc
scas
mov
cmp
push
lock
or
pop
cltd
dec
pop
mov
xorl
xchg
mov
addr16
pop
lcall
jae
and
pop
arpl
mov
repz
mov
push
push
adc
inc
mov
sub
and
or
mov
mov
pusha
ss
xor
outsb
je
xchg
cmc
mov
arpl
sub
in
sbb
or
rcrl
xchg
fsubp
fldcw
outsl
leave
idivb
enter
xchg
inc
pop
inc
jg
lret
fs
mov
add
fldt
std
add
mov
push
cltd
adc
xorb
fdiv
adc
stos
inc
pop
add
jnp
mov
cmp
and
loop
hlt
cmpsb
call
sbb
out
cmp
andb
in
mov
stc
xchg
cmpsl
fsubs
shlb
pop
dec
adc
fildl
and
pop
in
mov
fprem1
mov
cwtl
add
fucomi
or
js
push
pop
sahf
int
cmp
shl
mov
popf
in
dec
jne
or
in
jb
insl
and
mov
ljmp
push
cli
jge
cmpsb
iret
ds
adc
jnp
or
out
xlat
xchg
pop
sub
dec
sbb
fidivl
push
lahf
negb
repnz
xor
pop
rcrb
es
leave
jp
andps
test
adc
sub
sti
pusha
push
je
cwtl
aas
mov
and
in
cmp
jle
clc
shrb
nop
xchg
add
int
adc
add
adc
mov
sub
xchg
gs
int
push
adcl
mov
fwait
daa
popa
jns
lock
xchg
mov
sbb
icebp
sbb
fisubs
inc
fmuls
out
test
inc
dec
cwtl
pushf
add
xchg
inc
data16
shll
ret
sarl
dec
pop
daa
repnz
rcr
jg
xor
adc
and
add
neg
mov
pop
push
rolb
insl
sti
or
or
bound
sub
push
inc
pop
xchg
xchg
mov
aad
bound
mov
cmpsb
xchg
mov
dec
pop
jmp
sub
mov
push
and
stos
sub
sub
jmp
adc
and
and
push
mov
ljmp
sbb
or
leave
jo
psllq
stos
push
jmp
das
inc
in
leave
pop
nop
shl
inc
sbb
aad
push
and
mov
imul
add
xchg
outsl
ret
aaa
std
mov
out
pop
scas
int
sbb
mov
push
aas
out
enter
enter
add
sub
decl
rolb
push
cmc
mov
sbb
mov
xor
adc
clc
inc
cli
andl
aam
test
dec
mov
int
add
inc
sarl
insb
mov
repz
add
push
mov
adc
jecxz
fwait
adc
mov
movsl
fiadds
stc
dec
outsb
mov
push
sub
into
xor
imul
push
sub
pop
icebp
subl
mov
lret
aaa
clc
jno
lea
mov
cmpsl
cmp
bound
pop
inc
outsl
mov
fsubrp
inc
test
xchg
leave
dec
fwait
call
dec
notb
popf
push
aas
cmp
pop
std
pusha
mov
adc
sbb
add
push
jmp
popa
mov
dec
out
out
push
xchg
mov
les
jb
scas
in
sub
je
xchg
out
jne
mov
xor
mov
cld
sarl
repz
sub
cmp
jp
cld
hlt
arpl
loope
pop
bound
cmpsb
leave
cld
adc
push
enter
lds
xchg
add
aaa
clc
add
or
mov
lods
xchg
mov
inc
fldt
das
in
push
mov
jae
mov
and
sti
in
jo
in
push
fsub
mov
cmp
cmc
ret
rcl
in
das
and
mov
jge
cmp
into
addb
and
cmc
into
mov
fcomp
dec
jo
call
sti
jo
ss
movd
sarl
shll
fdivrs
lcall
push
inc
data16
jecxz
lods
sub
out
adc
shr
sub
movsw
push
bsr
xchg
mov
iret
mov
or
cs
jl
es
sti
adc
jge
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
jmp
jnp
imul
sub
and
mov
pop
adc
xor
sarb
cmp
pop
adc
xchg
jnp
ss
mov
dec
cmc
xor
dec
lret
fwait
pop
test
imul
and
pop
addr16
mov
push
push
jle
cmpsb
push
or
sbb
xlat
lock
lods
jmp
cmp
outsl
iret
mov
xchg
cmp
sarb
shll
lds
dec
jge
and
nop
lcall
gs
out
lds
andb
mov
inc
pop
arpl
call
outsb
ja
jne
sbb
je
stc
test
mov
lahf
pop
xchg
sbb
jbe
ficoms
pop
pop
daa
or
adc
jnp
ss
scas
cmp
lods
dec
rcrl
cmp
push
adc
jg
dec
sbb
loop
or
fcomps
adcb
and
out
dec
jo
lret
sbbb
mov
xor
stos
cltd
incl
mov
push
movsb
jno
das
and
inc
cmpsl
or
mov
pop
imul
pop
mov
and
shll
faddl
sti
xor
xchg
in
pop
mov
cmp
movsb
mov
imul
and
cmp
mov
fstpt
ljmp
fwait
js
xchg
movsl
mov
add
leave
pop
xor
ss
or
mov
mov
pop
jl
push
into
loope
fwait
std
faddl
sti
into
fldl
faddl
lods
mull
jl
ds
nop
lods
lea
mov
sbb
inc
scas
je
movsb
mov
and
cld
out
cs
gs
std
pop
mov
xchg
imul
addr16
jmp
ret
xor
inc
adc
fs
add
jp
in
inc
mov
xchg
cmp
out
mov
das
dec
push
cmp
jne
jns
xchg
jmp
out
mov
push
inc
pop
pop
outsb
xor
push
loopne
sbb
jl
test
mov
mov
cmpsb
das
addr16
aad
xchg
sbb
sbb
outsb
js
lret
outsl
andl
jb
or
push
add
pusha
sahf
mov
jmp
scas
ss
std
jne
insl
pop
sub
movsb
mov
add
add
cmpb
add
pop
jb
or
dec
pop
lds
outsl
aam
push
or
jle
std
and
sbb
pushf
les
out
sbb
push
add
xchg
jle
shll
cmpsl
arpl
pop
ss
inc
inc
pop
pop
push
shll
pushf
in
hlt
cmp
xchg
pop
inc
pop
mov
push
cli
and
rcrl
in
inc
cltd
push
mov
scas
scas
sbb
mov
cmp
lcall
sub
ja
call
out
arpl
sbb
push
sbb
das
sbbl
xchg
pop
mov
cld
pop
scas
outsb
push
test
jecxz
jp
test
mov
adc
mov
sbb
out
mov
and
mov
mov
fnstcw
cmp
ficompl
add
fwait
stc
stc
mov
xchg
push
gs
dec
andb
lret
pop
mov
loop
dec
je
hlt
cmpsb
cld
iret
pop
dec
sub
pop
ss
cmpsl
or
inc
leave
insl
in
fsubl
sub
xchg
ja
xor
mov
pop
mov
sub
pop
mov
jle
push
popf
mov
cmp
and
insl
cmp
xor
jle
cmp
mov
int
mov
sub
les
cwtl
pusha
inc
mov
fs
movsl
push
and
or
adc
push
mov
mov
sub
sub
pop
mov
aas
and
jb
sub
ret
xchg
pop
dec
dec
push
testl
jo
ljmp
stos
loope
ss
cmpsl
mov
stos
daa
push
inc
lretw
jmp
dec
pop
jae
jmp
pop
mov
push
in
jg
inc
mov
int3
not
lcall
lea
in
rorb
push
pop
jns
or
dec
push
xchg
cmp
jns
outsb
adc
adc
xchg
xlat
int
jno
lock
mov
loopne
xchg
outsl
in
adc
lods
xchg
xor
outsb
in
dec
scas
inc
outsb
testb
cmp
out
gs
push
cli
sbb
pop
mov
inc
fsubrl
imul
xor
in
mov
les
cmp
std
sub
mov
jne
fadd
sub
repz
incb
popf
pop
xchg
dec
aas
or
in
sub
pop
test
ljmp
das
adc
cmpsb
cmc
dec
xchg
mov
mov
adc
movsb
addl
push
daa
in
lcall
push
imul
mov
mov
fcmovbe
pop
inc
jb
cmpsb
mov
xchg
data16
push
jbe
popa
inc
mov
adc
movsb
es
lock
jle
loop
call
sub
or
inc
xchg
ds
ffreep
aaa
lret
push
daa
inc
sbb
pop
xchg
mov
push
mov
mov
roll
enter
inc
cltd
jae
test
in
test
mov
in
sbb
cmpsl
inc
mov
or
inc
sbb
orb
pop
cmpsb
mov
add
fs
in
jge
mov
addr16
jne
enter
mov
ret
in
cmp
jno
or
lret
lods
test
scas
sub
ffreep
loopne
xor
inc
lcall
cmpsl
jge
push
jecxz
pop
or
ds
xchg
fldenv
call
push
xor
jae
jmp
pushf
jae
sbb
pusha
mov
ljmp
xchg
jp
addr16
inc
pop
and
dec
jp
adc
js
pop
push
je
dec
jno
sbb
xchg
sbb
sub
adc
shll
jl
pop
add
sbb
jnp
lods
fmulp
jno
cmpb
rcrl
cmp
xor
movsl
pop
cmp
mov
dec
sub
sbb
sbb
je
push
jno
int
xlat
push
mov
cwtl
or
xchg
xchg
ret
push
test
rol
sti
pop
cld
dec
dec
mov
adc
bound
inc
sub
jns
xlat
test
arpl
xor
dec
jp
or
mov
xchg
ret
add
mov
fstpt
addl
jp
xchg
ljmp
jae
into
out
scas
add
idiv
leave
jb
xor
je
lahf
sub
xchg
int3
arpl
fcmovbe
sbb
into
mov
jbe
es
lods
jecxz
iret
pop
daa
mov
repnz
or
push
and
lock
cwtl
fs
test
imul
cmpsl
nop
mov
pop
inc
and
or
pop
xchg
les
sub
or
mov
push
div
nop
or
xor
pushf
call
popa
dec
jb
in
lret
pop
sub
js
int3
loop
lahf
pop
mov
xor
add
cs
testl
cmp
test
ret
jne
add
jecxz
jl
mov
inc
jg
imull
aas
dec
cltd
nop
andl
movsl
and
les
je
sbb
aad
mov
popa
xchg
outsb
ljmp
and
push
notb
fs
adc
cmp
out
in
test
push
cmpsl
adc
stos
pop
push
loop
loope
mov
add
repnz
iret
sub
mov
leave
in
dec
js
cmp
ljmp
cmp
dec
aas
sbbl
jo
and
out
lods
cli
lds
jno
ljmp
inc
xchg
sbb
pop
mov
mov
mov
aad
out
xchg
add
hlt
rcll
sahf
sub
or
dec
sbb
xchg
enter
cmc
jle
jb
loop
ss
into
sub
pop
pop
fwait
int
add
aad
add
ret
dec
mov
enter
add
jmp
xor
cmp
aam
xor
stc
sbb
jb
shlb
adcb
mov
lret
sbb
arpl
es
loopne
pop
xor
je
mov
mov
hlt
pop
and
and
ret
add
jo
popa
cmpsb
xchg
push
fimull
jns
xor
insb
iret
insb
jb
jne
jge
fidivrs
inc
jb
les
cmpsl
mov
jmp
jbe
jmp
adc
inc
sub
mov
jl
in
push
sbb
test
sbb
and
out
std
sbb
es
pop
sbb
xlat
ja
inc
leave
push
mov
pop
cmp
mov
xlat
lea
loop
out
inc
or
mov
inc
jg
out
or
fcompl
pop
push
lea
jmp
out
mov
test
xor
sub
aad
sub
mov
pop
addr16
in
jno
mov
stos
call
fisttps
cmp
and
inc
cltd
cwtl
pop
lods
mov
sub
pop
mov
hlt
xchg
cs
into
movsl
neg
mov
int3
sub
sub
mov
mov
xchg
xor
add
and
fidivrs
mov
xor
inc
xor
dec
xor
sub
sub
push
cmp
call
mov
in
push
test
rcrb
sbb
lds
out
pop
in
bound
cmp
mov
sbb
jmp
adc
inc
stc
pop
lods
sub
iret
jae
inc
test
sub
sub
addb
das
cli
mov
lahf
daa
jnp
ficompl
adc
jbe
jb
xorl
cmc
icebp
sub
popa
aaa
xor
xchg
outsl
push
in
mov
sbb
xor
stos
popf
xor
in
adc
mov
lcall
mov
in
scas
outsl
jg
sahf
sbb
push
mov
nop
dec
stc
repz
ljmp
cmc
out
ja
cmp
repz
and
rcl
call
xchg
dec
in
prefetchnta
and
movsl
sbb
rcrb
add
cmpsb
cs
xchg
jp
or
outsb
mov
nop
lret
push
jnp
ljmp
xorb
push
dec
xchg
mov
mov
faddl
mov
cwtl
sbb
roll
jb
loop
or
xlat
jbe
and
int
sbb
adc
jb
mov
pop
push
cmp
xor
xchg
call
add
adcl
jle
jns
lret
mov
mov
fildl
push
push
and
sbb
sub
stos
jno
push
out
or
adc
fdivrl
cmp
dec
das
je
lock
sti
std
cwtl
jo
push
ret
cmp
addr16
jnp
mov
scas
sti
outsl
mov
ljmp
js
cs
lahf
cmp
or
leave
out
mov
imul
scas
fdivrs
pop
scas
xchg
fldcw
jnp
add
fsub
iret
ret
pusha
and
sti
and
mov
ret
sub
push
int
mov
xchg
das
mov
push
lods
lret
fwait
jg
lods
mov
imull
inc
lahf
ss
sub
mov
sti
out
mov
mov
lea
aad
sbb
je
in
loop
cmp
shlb
jmp
stos
inc
adc
pop
fsubrs
daa
pop
int
mov
mov
jle
xchg
or
inc
mov
cmp
adc
or
rcrb
leave
cmp
nop
popf
adcl
and
sub
xor
inc
mov
into
inc
lds
loop
dec
pop
shr
mov
and
imul
incl
xlat
insb
ss
pop
js
dec
lods
enter
or
sub
nop
dec
lret
lods
push
dec
test
insl
fs
dec
loop
jle
aad
cmp
idivl
xchg
inc
iret
add
xor
sub
dec
add
xor
sub
stos
mov
hlt
mov
sbb
clc
and
mov
mov
add
lods
stc
sub
out
or
shl
inc
mov
or
dec
ja
lret
arpl
loopne
jno
mov
std
sbb
cmc
fiaddl
test
and
push
inc
mov
pop
sti
xor
jecxz
adc
jns
mov
rclb
mov
mov
xchg
mov
mov
cli
je
pusha
mov
xchg
cmp
movsb
out
ror
xor
cltd
xchg
lcall
push
and
add
aad
push
xchg
cmp
xor
inc
and
fldt
hlt
and
stos
sbb
idiv
fsts
mov
loope
adc
fwait
sub
ret
jae
or
shll
cmp
inc
and
in
in
pop
mov
in
inc
stc
pushf
fdivs
cmp
outsl
pop
push
pop
popf
pop
scas
sti
dec
cs
xor
into
sahf
add
pop
stos
out
popf
jnp
or
mov
dec
mov
ret
sub
fwait
mov
insb
adc
mov
dec
imul
leave
add
out
inc
pop
cmp
pusha
jbe
lret
jl
shll
mov
cmp
or
sbb
jne
mov
cli
inc
push
push
popa
scas
mov
lret
stc
sti
ja
xor
sbb
hlt
std
mov
mov
mov
or
mov
in
pop
xlat
and
mov
sub
aaa
mov
je
xor
xchg
aad
lret
movsl
shrb
sbb
pop
stos
cmc
into
xor
aas
cmp
push
sbb
push
xor
call
rolb
andnps
orb
dec
mov
cs
inc
jg
pop
inc
sub
inc
cld
movsb
and
imul
adc
dec
mov
cmp
pop
loopne
outsb
test
xor
inc
decb
rclb
mov
cmp
not
xchg
ret
scas
mov
pop
rclb
sar
pop
mov
xor
in
add
popa
jo
ja
adc
sub
adc
jge
mov
cltd
add
or
out
xchg
ret
sbb
jge
or
fsubl
ds
mov
enter
and
mov
daa
arpl
in
jecxz
ret
fbstp
dec
aaa
xor
cmp
inc
cwtl
or
movsb
pop
mov
jp
mov
loope
and
andl
mov
jmp
mov
lock
pusha
xchg
mov
pop
cli
lods
mov
fstp
divps
xchg
jp
jno
mov
rclb
je
cmc
add
stos
movsb
ss
cmpsb
dec
ficomps
adc
cwtl
lcall
cmp
sar
mov
ljmp
mov
or
insl
daa
xchg
push
mov
dec
or
pop
cmp
fs
pop
or
popa
loop
repnz
test
jp
lret
js
mov
jg
jns
adc
add
mov
lahf
aam
popf
ljmp
arpl
jecxz
sub
xor
lcall
ret
xor
dec
dec
es
mov
cmpsl
gs
pushf
std
cmp
fst
cmp
mov
xor
divl
fdivrp
mov
pop
xchg
mov
mov
shlb
jp
fistpll
xor
xchg
mov
sahf
cmp
inc
jp
mov
stos
enter
jg
repnz
xchg
shlb
push
scas
in
pop
stos
jl
aaa
pop
movsl
sahf
sbb
outsb
ljmp
cmpsb
loop
sub
call
shll
mov
jae
in
into
cmp
shll
call
dec
push
gs
and
xchg
pushf
ret
cmp
mov
jnp
cmp
fwait
jae
push
cmp
add
mov
sub
adcb
add
and
sbb
pop
in
push
pop
jb
cmp
mov
mov
or
hlt
les
vmovupd
mov
sbb
ret
push
add
arpl
mov
xchg
sub
lret
mov
sub
cmp
mov
insl
push
ljmp
insb
adc
je
call
mov
push
orb
push
and
imul
rol
clc
xchg
mov
xor
jp
inc
cmpl
pop
cwtl
lcall
sub
sub
lods
out
stos
out
pop
lds
fwait
dec
or
ret
stos
adc
push
fxch
push
sbb
imul
mov
xor
std
cltd
push
sarb
pop
or
cmp
lahf
lock
outsl
pop
mov
pushf
add
xchg
push
and
sub
stc
dec
pop
pop
out
pop
sbb
fildll
xchg
cmp
aad
outsl
shlb
cmpsb
pushf
orb
cmc
popf
fldl
ret
adc
into
fucomi
cmp
bound
daa
jae
jecxz
push
aas
sar
mov
cmp
rcll
push
outsl
mov
in
xchg
scas
mov
dec
js
jmp
xchg
inc
repnz
pop
push
sub
hlt
fcomp
dec
cmpsl
jno
mov
daa
or
popf
out
sbb
out
jecxz
loopne
xchg
loope
push
insl
movsb
je
and
dec
push
adc
xchg
shrb
jno
or
stos
mov
xchg
shl
popf
and
stos
das
cmp
jl
in
jmp
jge
in
scas
divb
xchg
pop
push
jae
ljmp
es
adc
mov
lds
or
in
in
inc
mov
fsubl
data16
xchg
mov
cwtl
icebp
mov
outsl
imul
xor
mov
mov
xor
std
and
and
cmpsl
imul
imul
sbb
and
and
inc
sub
std
or
mov
xchg
xchg
mov
stos
cmp
mov
mov
and
stc
jp
ds
cmp
fistpll
cmpsb
es
call
mov
cltd
xchg
out
pop
test
xchg
add
outsb
xor
mov
pop
imul
cld
lcall
jg
dec
pop
mov
push
aas
inc
xor
cmp
mov
pushf
in
int3
dec
mov
je
popf
jle
or
in
dec
jmp
inc
push
outsl
jp
loopne
repz
dec
xor
add
pop
add
pop
mov
pop
add
inc
push
stc
mov
mov
adc
push
jno
lock
cmp
shrl
mov
inc
mov
ds
xchg
incl
lret
shl
mov
jp
pop
cmp
pop
aad
stos
mov
out
jo
mov
jb
shrb
repnz
lea
xchg
ret
les
movsl
add
int
daa
pop
daa
lcall
mov
or
les
mov
aaa
int
ficoml
xlat
inc
jl
ds
mov
mov
mov
push
je
movsl
inc
test
or
push
or
iret
daa
int
xor
xchg
inc
xor
pop
pop
aas
out
inc
mov
pop
sub
fwait
pushf
fidivrl
leave
inc
cmp
mov
mov
xchg
bound
mov
lcall
cmc
in
and
rcll
add
sahf
dec
out
and
or
lock
xchg
xchg
jns
xchg
pop
pop
loop
out
icebp
push
outsb
xor
xchg
adc
adc
push
js
cmp
pop
pop
jle
xchg
jnp
ficoms
cwtl
jbe
fistpl
aaa
jae
cmc
adc
ds
mov
add
rcl
mov
and
add
and
fwait
and
add
dec
xchg
imull
dec
inc
jo
and
lods
dec
push
in
je,pt
inc
or
inc
sub
roll
scas
scas
clc
push
out
jo
into
xchg
rorb
sbb
adc
out
scas
dec
aas
jns
ss
in
dec
cmp
cmp
shlb
sbb
sti
outsb
mov
xchg
pop
add
std
add
dec
pusha
jle
insb
scas
pop
leave
jmp
sbb
pop
xchg
adc
fisubrl
adc
stos
mov
test
in
pop
mov
mov
push
inc
inc
insb
pop
add
mov
cmc
rcll
cwtl
movsl
sbb
bound
lret
in
enter
idivl
aam
lock
scas
outsb
lods
das
mov
shrl
subl
ss
fldt
scas
mov
dec
bnd
inc
ds
sti
lods
aas
loopne
jnp
js
inc
push
dec
stos
out
movsl
jo
out
pushf
iret
cmp
pop
cmp
push
push
mov
fimull
dec
imul
movsl
pop
lret
stos
cli
sti
daa
adc
mov
or
cltd
inc
jnp
push
scas
cmpsb
mov
ljmp
fs
xchg
fdivrs
push
add
push
jecxz
dec
push
mov
popf
pop
dec
jns
mov
push
xorl
int3
ret
mov
test
ds
jecxz
in
and
inc
in
out
std
fldcw
xchg
rcll
fiaddl
cld
sub
pusha
fsub
jnp
mov
in
sbb
mov
dec
mov
add
dec
pop
mov
mov
adc
dec
iret
xchg
rorb
or
fstpt
insb
add
inc
pop
push
sbb
jp
je
stos
push
fs
cmp
scas
push
mov
lds
cmc
ret
test
pop
mov
mov
scas
je
jg
adcl
les
ds
cmpsl
repz
pop
stos
jb
pop
jb
xlat
cmpsl
ret
mov
pop
ja
in
movsb
pop
add
xor
push
dec
fdivrs
and
add
ficoml
push
sbbb
sbb
data16
mov
push
gs
or
push
adc
mov
or
adc
incb
popf
dec
and
xchg
or
mov
pop
out
fistpl
jno
lahf
adc
mov
das
notl
lahf
gs
outsl
push
and
pop
cmpsb
jl
pop
mov
sbb
jae
out
data16
jl
mov
adc
popf
aad
inc
mov
fcomp
xchg
jecxz
push
fstpl
push
pop
aad
jmp
sbb
sub
or
loope
rcl
aad
fstp
leave
insb
ljmp
sub
test
into
pop
out
aad
pop
and
pop
enter
and
jno
jae
loop
aas
rorl
enter
sub
add
fwait
jno
in
cmp
aas
xor
scas
aaa
pop
mov
adc
flds
adc
jo
test
sub
or
push
adc
mov
xor
xchg
mov
mov
ret
or
popa
test
pusha
cmp
aaa
or
lret
add
cltd
repnz
stos
mov
aam
mov
jp
dec
cld
xor
ljmp
sbb
cmpsb
dec
sbb
add
pop
test
jg
in
lock
bound
and
lds
mov
out
inc
sub
enter
es
xor
sub
add
ret
or
jne
roll
hlt
mov
fildl
scas
pushf
lret
xlat
jle
fsubl
lods
fbstp
and
inc
inc
jne
push
mov
adc
pop
clc
aaa
int
mov
inc
jl
arpl
js
lahf
out
push
xchg
mov
test
std
decb
jl
dec
ret
mov
mov
movb
lgs
imulb
jp
and
pop
in
aam
insl
rcrl
shll
xchg
pop
cld
mov
pop
pop
sbb
inc
jge
call
sub
mov
xchg
shl
add
jmp
cmp
ja
push
ret
daa
cmp
sub
push
xchg
jle
scas
inc
xchg
out
lret
inc
ja
outsl
xchg
xchg
ja
dec
push
pop
lahf
out
sub
adc
jnp
negb
sub
nop
icebp
xchg
hlt
jecxz
data16
sub
xchg
jb
cs
fs
scas
imul
insb
pop
cwtl
shrl
cmp
pop
or
aam
cmp
add
pop
and
in
movl
cmp
cld
inc
sahf
and
imul
sub
es
jae
test
jl
aaa
add
sbb
rcll
sbb
fs
cwtl
jae
fimull
xchg
mov
cmpb
pop
dec
dec
adcb
xor
incb
dec
movsb
out
add
imul
pushf
lods
outsl
lea
mov
dec
jo
test
pop
pop
dec
mov
popa
outsl
dec
mov
inc
fbstp
lock
clc
jle
cs
outsl
xchg
lea
lret
enter
test
add
inc
mov
mov
movsl
out
fmull
clc
aas
sbb
inc
cmp
insl
mov
insb
leave
mov
lret
test
sub
popa
outsb
negl
dec
jno
inc
mov
inc
iret
movsl
fldenv
ss
or
in
cmp
sbb
ljmp
cmpsl
sub
ret
push
pop
cmp
xor
push
xlat
fstl
cld
lret
in
dec
push
stos
mov
add
lock
sub
mov
dec
imul
in
adc
daa
ds
sub
int3
dec
repz
sahf
js
movsb
mov
fisubrs
mov
icebp
ds
scas
sti
fwait
sbb
cmp
rcll
xchg
ret
iret
mov
adc
jecxz
sbb
sub
mov
repz
mov
dec
pop
jle
xchg
cmpsb
jl
xchg
out
jns
sti
jns
fs
sub
xor
pop
inc
sub
into
sbb
jmp
inc
arpl
in
sbb
dec
xchg
insl
sub
push
and
xor
xor
roll
addr16
adc
jle
push
push
mov
push
dec
xlat
jmp
loopne
mov
mov
mov
lahf
mov
insb
pop
call
adc
xchg
pushf
imul
pop
lcall
lcall
loope
mov
repz
push
scas
daa
mov
mov
movsl
sub
adc
cmp
shrl
or
xchg
push
aad
adc
inc
fucomip
mov
call
rol
sbb
sub
ret
adc
je
or
jne
lods
jle
and
arpl
cmp
dec
jns
es
scas
cld
add
and
daa
insb
add
xchg
sub
push
pop
loopne
int
pop
lcall
inc
cmp
adc
loopne
adc
idiv
in
push
mov
lcall
mov
repz
sub
imul
cmpsb
pusha
ret
or
xchg
mov
sub
xchg
insb
mov
add
sbb
jge
aam
mov
mov
ljmp
je
add
stos
push
push
testb
add
std
test
mov
aam
les
mov
xor
mov
imul
add
addb
cmpsl
shlb
incl
adc
inc
mov
lahf
lret
inc
pop
or
pop
inc
add
jo
rcrl
sbb
lds
cmpsb
std
mov
aaa
dec
cmp
pusha
sbb
inc
leave
cmc
sub
mov
mov
or
cmc
sub
push
mov
and
mov
insb
add
cmp
or
sub
repz
out
mov
dec
sbb
iret
push
adc
inc
lret
sbb
or
pop
ss
fadds
pop
push
int
inc
mov
mov
mov
add
mov
out
in
enter
lret
cld
dec
pop
push
xchg
mov
in
mov
push
testb
xor
xchg
fwait
lock
pop
inc
clc
stc
jge
cwtl
mov
adc
push
dec
dec
jecxz
pop
push
jl
mov
push
fadd
js
pushf
aas
lret
mov
jmp
xchg
mov
test
cmp
rcr
dec
xlat
xor
xlat
jo
rol
pop
repnz
mov
addl
jb
xchg
fnstsw
imul
dec
imul
adc
inc
cmp
stos
fcmovb
xorb
pop
mov
lds
xor
push
pop
aad
inc
jmp
das
xchg
mov
xlat
dec
nop
pop
test
jne
fimull
psllq
mov
pop
leave
push
lods
mov
sahf
insl
roll
sub
ret
sub
nop
mov
inc
and
pop
sbb
dec
repnz
dec
sbb
xor
jne
or
in
data16
loop
jle
push
cmp
lds
cmp
fnstenv
in
fwait
and
or
mov
push
out
add
xor
cltd
dec
test
orl
mov
scas
stc
adc
and
mov
push
ficompl
and
fdivrl
add
sub
lea
add
ds
pop
push
insl
test
lahf
mov
mov
adc
inc
in
jmp
pop
clc
add
xchg
or
rcr
and
enter
cwtl
push
dec
mov
mov
icebp
mov
jl
cmp
pushf
out
out
out
lcall
mov
xchg
inc
cmp
sub
cmp
std
inc
jg
push
jge
mov
cltd
mov
xor
dec
add
add
jb
jnp
out
push
and
movsl
mov
sti
inc
mov
push
aaa
test
cmp
in
in
das
in
mov
je
mov
dec
jmp
hlt
mov
mov
cmp
fstpl
xlat
dec
sub
mov
out
inc
cmc
sbb
pop
xlat
cli
push
rolb
lret
mov
hlt
imul
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
jmp
shrb
push
sbb
mov
inc
notl
adc
mov
mov
aad
mov
dec
or
cwtl
mov
mov
lock
aad
fwait
das
das
enter
sub
testb
dec
adc
movsl
imul
aaa
std
add
and
mov
mov
fs
inc
leave
cmpsb
pop
call
fisubrs
sub
cmp
add
xlat
stos
lret
mov
inc
stc
shrb
dec
jp
outsb
neg
inc
cwtl
mov
imul
lahf
aad
jns
dec
in
jo
mov
xchg
jb
adc
mov
shll
push
sbb
jmp
repz
mov
cli
mov
pushf
or
dec
out
jp
dec
pop
dec
stos
adc
les
scas
mov
rcll
xchg
jo
pusha
outsl
loopne
sbb
repz
xchg
xor
rcll
stc
sahf
int
sub
mov
inc
pop
adc
out
test
dec
jns
pop
sub
inc
mov
push
xor
xor
mov
xor
sar
lds
inc
mov
daa
xchg
test
or
in
push
jmp
cwtl
popf
out
xor
ds
dec
sub
jo
xorl
inc
sahf
or
adc
shl
adc
movsb
das
mov
cmp
int
or
in
add
jecxz
bound
pop
adc
cs
mov
gs
gs
xor
shlb
sti
fisubs
jle
pop
test
stos
insb
and
sahf
pop
or
add
lds
push
cmp
adc
movsb
inc
clc
inc
pusha
insl
sub
popa
or
stos
pop
cmpsb
das
adc
aam
cmp
inc
sub
repz
aad
and
inc
mov
out
xchg
sbb
or
test
push
inc
jb
sbb
testl
add
and
flds
les
cmp
int3
cmp
call
lock
mov
and
lods
lods
xorl
mov
loopne
orl
dec
leave
bound
nop
cmp
mov
xchg
dec
imull
mov
or
and
push
adc
push
lret
gs
lods
scas
jecxz
lea
mov
fadds
mov
and
jg
push
push
fsubs
ret
adc
divl
jae
push
outsb
dec
xchg
push
rol
aaa
jmp
incb
jg
xor
inc
leave
rcr
fstl
xchg
dec
jl
aas
stos
shlb
ljmp
ljmp
or
or
jb
sbb
xchg
sti
aam
pusha
fwait
adc
adc
je
cwtl
inc
sub
stc
cmp
mov
and
adc
add
jg
loope
out
mov
ds
mov
std
fs
push
cmp
subb
lea
arpl
mov
lret
sahf
add
ja
mov
mov
outsb
fbstp
sub
adc
sbb
in
test
sbb
cmp
lret
push
pushf
mov
and
mov
inc
outsb
inc
dec
and
shr
lcall
mov
or
scas
sub
jo
xchg
jle
sbb
mov
out
int
dec
popf
xor
leave
lods
adc
int3
xor
xor
rcr
cli
int3
dec
mov
shl
mov
pop
out
pop
push
sbb
xlat
lds
ror
sbb
fldpi
lock
push
xchg
bound
stc
fldcw
cmp
iret
fdivs
mov
jl
push
sarl
cmp
js
mov
sbb
xor
pop
dec
repnz
popa
popf
or
adc
jl
fbstp
adc
les
ret
sub
add
inc
rcr
cltd
jle
cmpsb
movsl
push
pop
mov
pop
dec
mov
sbb
cmpsb
dec
sar
mov
mov
insl
sub
call
xchg
lahf
cltd
into
push
push
repz
xchg
push
mov
xchg
lahf
sub
sub
jne
dec
or
aad
test
daa
sub
fcompl
lahf
dec
mov
iret
ret
ljmp
inc
fwait
mov
push
jmp
scas
insl
popa
scas
add
aas
movsb
in
fs
lock
mov
sahf
xchg
aas
cmc
mov
sbb
or
lcall
mov
adc
das
xchg
lahf
in
pop
push
xor
and
or
imul
jecxz
mov
cmp
std
or
leave
call
dec
cmpsb
mov
lret
test
adc
push
lcall
shl
addr16
in
mov
cmpl
cld
mov
and
cmp
insb
mov
jno
xor
cmc
jp
jmp
jno
movlps
popf
fmull
jbe
fdiv
mov
dec
adcl
lods
in
or
xlat
sbb
sahf
pusha
inc
out
inc
mov
cmp
mov
inc
cmc
fwait
sub
fnsave
xor
and
cld
or
imul
jns
int
sti
imulb
stc
mov
int
mov
jae
mov
das
daa
data16
cmp
lds
mov
hlt
sbb
jecxz
mov
xchg
dec
mov
dec
cmp
test
pop
mov
fs
aam
push
int3
and
in
aas
cmp
jb
adc
jl
pop
push
sbb
push
pop
rcll
mov
aad
xor
xchg
fsubp
adc
popf
mov
cmp
xchg
cmp
sti
jmp
mov
lods
mov
cwtl
popa
popl
ja
stos
push
lock
inc
jg
add
lcall
popa
imulb
into
cmpsb
mov
movsl
xchg
fidivs
test
lods
cld
cld
in
sub
pop
call
jnp
jo
add
jp
sti
jno
je
mov
xchg
xchg
int3
mov
aam
out
add
xchg
adc
xchg
icebp
dec
shrb
out
sbb
inc
lds
cmp
mov
rolb
and
sub
lret
leave
jno
lock
inc
idivb
dec
mov
out
rcrl
std
lret
xor
sub
inc
mov
sub
and
dec
aaa
push
and
lcall
lahf
cltd
and
xor
sbbl
cmpsl
sbb
mov
sbb
js
push
pop
xchg
adcb
jns
mov
fcomip
cmpb
dec
sub
pop
xchg
pop
push
test
mov
aad
les
rorl
sbbb
dec
pop
mov
xorb
imull
sub
jecxz
and
inc
cmp
adc
ljmp
rol
sub
jg
cmpl
push
push
dec
dec
mov
xor
dec
lds
mov
sbb
add
mov
mov
xlat
movsl
jbe
stos
adc
movsl
pop
cmpsb
fs
xchg
movsb
mov
mov
pop
sub
fcomip
sub
push
es
jecxz
cmp
pop
pusha
dec
xor
popf
mov
pop
jne
sbb
adc
mov
lahf
outsb
pop
push
sbb
fsubrl
popf
mov
scas
gs
push
mov
adc
push
dec
outsl
sub
lds
stos
insl
sub
mov
pop
or
jl
adc
xor
test
int3
cmpsl
shll
mov
frstor
clc
iret
lcall
insl
push
shlb
jl
mov
xchg
adc
rep
sbb
lods
jg
int
and
jae
xor
out
mov
lods
mov
mov
push
add
or
mov
repz
xchg
daa
out
movsl
and
sub
fs
adc
cmp
repz
add
push
dec
sub
sahf
or
mov
pop
daa
scas
fwait
int
ret
jl
mov
cmp
ljmp
sub
sub
dec
push
mov
mov
sbb
rcrl
mov
xor
test
add
cmc
push
cld
in
popf
pushf
mov
popf
xor
cmp
cmp
inc
mov
xor
into
push
fbld
or
sub
and
jb,pn
rclb
dec
mov
xor
push
sar
fsubs
cmc
je
or
hlt
rcrb
xor
adc
push
std
push
out
add
test
leave
fcompp
scas
mov
lds
mov
icebp
pop
lahf
insl
inc
and
pusha
iret
push
clc
loope
or
lea
pop
movsb
jmp
mov
into
sub
inc
rorb
into
xchg
jecxz
inc
out
push
pop
movsb
mov
fiaddl
mov
fdiv
ljmp
movsb
mov
aam
jmp
add
dec
xor
lods
pop
fidivrl
pop
mov
sub
cltd
lcall
pop
push
adc
lds
inc
aam
aas
testb
xchg
je
push
adc
stos
sbb
sub
lds
pop
ror
out
xor
loop
out
pop
and
decl
bound
adc
jbe
and
iret
mov
in
lahf
pop
aas
stc
addl
insb
add
cmp
sbb
push
or
adc
jbe
gs
jmp
xor
lcall
xor
or
mov
jg
xchg
insl
dec
test
aad
mov
push
rcl
inc
or
ficoms
mov
jb
aam
out
sti
inc
sahf
in
inc
mov
xchg
pop
mov
or
and
fcomps
int
jne
sub
inc
sub
or
xchg
mov
pop
enter
sub
inc
adc
sub
adc
rorl
xchg
sbb
push
pushf
movsb
loope
xor
xchg
push
inc
adc
cmp
stos
mov
sbbb
adc
mov
push
fadds
cmc
xchg
sub
call
xchg
mov
imul
lcall
cld
pop
pop
add
in
pop
inc
mov
in
mov
mov
nop
std
aas
cwtl
pop
cmp
pusha
mov
aam
out
sahf
jae
mov
dec
mov
or
addr16
mov
sbb
mov
push
aas
xlat
aam
sahf
nop
ret
mov
pop
rcrl
mov
or
inc
arpl
insl
les
std
stc
mov
jge
int
add
sub
aas
jo
ljmp
test
lods
das
jno
repnz
out
adc
lods
pop
mov
test
mov
jge
push
movsl
push
out
enter
movsb
pop
cmp
xor
mov
xor
jbe
rcl
test
push
fisubrs
outsl
and
loop
cltd
pop
cmpsl
and
jg
mov
outsb
out
scas
mov
imul
pop
fadds
loopne
or
jo
mov
add
icebp
jp
push
adc
fwait
pop
stos
add
jb
xor
jno
gs
out
jl
push
ds
jmp
les
push
pop
push
push
xor
mov
mov
xchg
jb
dec
std
mov
ljmp
ds
lods
movsb
xor
dec
call
fnstsw
fs
jb
clc
dec
pop
je
out
jecxz
push
call
test
ret
adc
dec
cmpsb
mov
jp
sub
stos
ss
mov
leave
mov
shll
xchg
test
add
pop
inc
mov
inc
mov
ss
xlat
in
int
xor
xchg
scas
pop
and
push
xchg
enter
sti
xor
push
cmp
loop
mov
fadds
sub
stos
mov
jp
jg
xor
cmp
or
xchg
out
xchg
ljmp
xor
jne
add
xchg
mov
lcall
aas
scas
unpckhps
mov
ljmp
mov
sub
jmp
pop
aad
push
jp
push
dec
pushf
jb
repnz
push
cld
jns
or
jge
pop
fs
nop
lods
cmp
cld
mov
cmp
inc
lret
fildl
xchg
stos
fsubp
lock
pop
pop
adc
mov
js
jmp
push
pop
inc
sbb
cmp
jbe
shlb
insb
insb
leave
sbb
add
or
std
cwtl
int3
lods
loop
ljmp
sbb
dec
or
test
inc
add
push
push
adc
mov
loopne
idivb
sbb
es
aam
xchg
jo
int3
in
mov
adc
mov
jle
xlat
xor
addr16
orl
mov
jae
cmpsb
fistps
ss
js
sub
and
div
out
push
inc
out
jns
push
out
inc
arpl
sbb
jl
jg
mov
ret
mov
fwait
sbb
jae
lcall
ds
push
lods
lahf
add
push
sti
jb
mov
jmp
sbb
ljmp
icebp
and
mov
sarl
adc
jae
jb
movsb
icebp
push
out
or
call
push
addr16
mov
push
pop
push
in
mov
and
int
jecxz
data16
adc
data16
ja
mov
clc
push
int
sti
std
push
jno
mov
sti
xor
push
sub
sbb
jg
outsb
pop
std
and
ss
mov
xor
add
cmp
xor
add
bound
adc
test
aam
and
adc
inc
or
push
fs
adc
jmp
dec
inc
stos
shlb
scas
jo
jg
arpl
bound
aas
int
cmpsl
ret
popa
movsl
lea
adc
aad
ret
or
cmpsl
arpl
jg
sti
sahf
lods
int
stc
jne
movsl
cwtl
aas
test
flds
mov
sbb
and
mov
mov
rorb
jg
fsubrl
mov
dec
cmp
xchg
xor
mov
daa
inc
fnsave
or
add
cwtl
divb
repz
call
sub
and
add
cmpl
mov
sahf
xlat
imul
je
mov
imul
cmp
mov
jne
inc
les
repz
jns
test
pop
add
pushf
jne
daa
sbb
imul
add
xor
cmp
pop
stos
push
ror
into
jecxz
push
or
jb
icebp
and
jne
fidivl
lret
jle
inc
cmp
push
repnz
sbb
mov
ret
fstpl
mov
lret
sub
inc
or
lcall
or
mov
mov
adc
adc
jecxz
xor
add
lret
dec
clc
pop
push
out
add
test
into
adc
pop
and
je
sub
push
mov
jecxz
sbb
push
xlat
jnp
and
xchg
push
aam
jl
test
insb
mov
and
addl
clc
mov
jae
dec
push
inc
stc
test
addr16
daa
mov
incb
xchg
roll
fs
data16
mov
out
out
xor
inc
mov
mov
and
test
push
sbb
test
xchg
icebp
and
xchg
call
or
mov
inc
lds
push
ljmp
or
sub
adc
sbb
fucomi
jmp
jae
popa
fisubs
mov
cmp
xor
and
cwtl
sti
cwtl
int3
out
sbb
imul
sub
stc
faddl
fistps
xchg
and
mov
lret
decl
adc
movsl
xor
mov
pop
xorl
push
ss
popf
sbb
idivb
int3
mov
xor
and
xchg
mov
pop
push
mov
push
loopne
pop
xor
inc
xchg
or
mov
lock
popf
xchg
out
jp
adc
ja
ljmp
lods
mov
xor
or
stos
lods
fisubrl
push
xchg
cmpsb
cli
dec
movsb
loop
dec
mov
add
push
adc
in
and
jnp
mov
jg
lods
movlhps
ja
aaa
inc
sahf
repz
sbb
fldt
xchg
lret
lea
loop
rorb
sub
jbe
cwtl
pop
lret
xor
idivl
pop
xor
add
scas
jecxz
fisubl
in
push
jae
std
pop
mov
cmpsb
xor
xchg
scas
inc
inc
sub
pop
pop
push
jbe
pcmpgtb
jmp
popa
sub
push
add
or
push
fmull
push
pop
hlt
xor
cmp
aaa
pop
and
jns
andl
and
pop
aas
pusha
scas
push
sbb
adc
pop
test
loop
xchg
iret
loope
ss
cmp
out
ja,pn
xchg
cmp
sbb
jecxz
sbb
gs
or
repnz
lret
popf
lea
notb
and
cld
inc
enter
jne
add
adc
test
outsl
mov
add
ret
mov
sti
xor
or
cltd
movsb
rorl
jle
push
insb
in
movsl
lock
shl
jno
mov
insl
dec
push
inc
mov
pusha
ret
inc
inc
mov
addb
xlat
inc
jne
ret
insl
sbb
inc
xchg
xchg
test
pop
test
popa
xor
mov
xchg
push
test
xchg
push
sti
sbb
ss
mov
rcrb
xchg
pop
jecxz
pop
call
fldl
in
and
sub
jl
pop
mov
jle
and
out
mov
std
xchg
mov
mov
flds
pop
jmp
mov
mov
addr16
stos
aas
ror
inc
xchg
or
bound
loop
mov
bswap
pop
fwait
popf
mov
jne
jle
mov
movsl
scas
fadd
in
mov
push
repnz
mov
sub
sti
or
int3
push
lahf
sbb
xchg
jns
fistpl
movsb
test
pop
sub
and
dec
xchg
rcl
movsl
sarl
sub
add
jno
or
lret
push
mov
imul
xchg
in
xchg
mov
loopne
jns
pop
push
mov
enter
add
jb
js
cmpxchg
mov
dec
mov
adc
and
aaa
xchg
ljmp
xchg
dec
fstpt
inc
ljmp
test
push
push
or
aam
jbe
lret
adc
arpl
nop
out
adc
push
sub
mov
and
cmp
out
cmpsb
jne
popf
inc
pop
insb
jl
adc
cmpsb
and
mov
mov
jmp
inc
fldt
popf
dec
aaa
xorl
adc
jmp
bound
out
mov
out
pop
cmp
sbb
dec
jbe
mov
jb
insb
push
daa
clc
xchg
push
mov
push
pusha
and
mov
loope
push
scas
testb
mov
pop
and
mov
mov
adc
mov
fsub
data16
mov
aad
cmc
js
pushfw
icebp
jge
xchg
jae
mov
lcall
lock
push
push
cmp
push
inc
jns
lods
mov
sbb
mov
mov
mov
sbb
test
mov
jo
ret
fimull
jmp
jbe
xchg
sti
daa
cmp
dec
sub
dec
mov
loop
add
jo
fcomps
dec
shl
shll
add
or
call
negl
out
dec
cmp
in
push
dec
xchg
loopne
divl
jns
adc
pop
jae
push
enter
push
mov
cmc
shlb
xchg
or
fimuls
scas
mov
fldt
ret
popf
jecxz
das
in
xor
or
adc
add
fstpt
addr16
fisubrs
pop
test
add
fadds
icebp
xchg
adc
mov
inc
inc
dec
adc
sub
filds
push
int
or
daa
inc
fisubrs
lds
and
fs
in
mov
or
cwtl
outsb
add
jmp
out
out
daa
jns
inc
fmull
adc
xor
mov
pop
ljmp
insl
nop
fsubl
dec
jbe
jbe
daa
test
cltd
sbb
fistps
xor
je
pushf
hlt
dec
push
jl
cmp
lcall
flds
dec
sahf
mov
pop
filds
lret
rcrl
and
push
xchg
inc
mov
jmp
add
mov
les
add
jecxz
cwtl
in
adc
je
pushf
sub
xchg
lcall
sub
and
popa
popa
jne
jns
arpl
div
das
movsb
jne
push
xchg
fsts
hlt
cltd
adc
imull
pop
jns
jne
cmp
mov
les
loope
cmp
push
aad
dec
xchg
mov
mov
ss
inc
push
adc
push
adc
fdivp
loopne
sub
ja
dec
mov
sarl
bound
add
jge
lods
jg
fnsave
sub
cmp
movsl
mov
xor
mov
jae
pusha
push
std
enter
je
daa
mov
lock
sbb
cwtl
mov
lods
sub
dec
ret
rcl
js
adc
add
mov
ret
sahf
dec
mov
out
inc
mov
les
add
mov
mov
inc
sahf
sti
xchg
mov
add
xor
hlt
test
jo
nop
dec
push
jbe
scas
cld
push
mov
mov
aas
out
jbe
lods
inc
jp
xchg
call
xor
jmp
inc
cmp
test
add
shrb
repz
hlt
mov
sbb
popf
inc
xor
sub
sahf
cmpsl
xor
movsl
mov
sbb
pop
adc
xchg
inc
push
in
test
mov
fsubp
fdivl
js
add
xor
repz
or
std
sub
fsub
js
mov
fisubs
xorl
int
push
sbb
xor
ja
push
push
out
adcl
fisttps
outsl
xor
mov
jbe
or
cmp
jb
push
sub
fnstcw
sbb
movsl
xchg
and
sub
repz
ja
lcall
fistps
jmp
nop
movsl
push
addr16
jg
sbb
pop
loop
mov
test
pop
lret
jl
mov
adc
adc
adc
cmp
inc
cmc
mov
add
jno,pt
scas
jp
les
sarl
je
ss
ds
aad
nop
pop
mov
es
mov
mov
push
imul
int
push
mov
cmp
push
rol
ja
and
fstp
dec
dec
lock
je
rcl
inc
adc
jp
lret
inc
and
in
lods
sti
cs
sub
aam
pop
mov
pop
js
test
ljmp
test
and
rorl
sti
pop
jmp
fmull
lret
std
push
jnp
cld
jno
push
push
push
cmpsb
pop
xchg
popf
mov
xor
les
and
push
jecxz
lcall
or
sbbl
cmp
adc
dec
jb
or
pop
jge
bound
sbb
test
ret
sub
adc
jnp
inc
imul
ja
andb
pusha
push
rorb
leave
rep
adc
jecxz
adc
cmpb
jge
or
push
aas
stc
lcall
out
test
lods
and
adc
mov
jnp
inc
stc
add
mov
cmpsb
add
mov
pop
out
insb
sub
xchg
movb
pusha
loope
pop
dec
xchg
add
out
or
adc
hlt
pop
dec
rcrl
shlb
ljmp
cmp
jno
xchg
xlat
rcl
jge
xor
repz
icebp
pop
and
outsl
clc
jmp
imul
add
or
sub
mov
in
nop
cmp
aad
pop
pop
test
les
and
or
push
fisubl
jecxz
inc
idivl
inc
xchg
sub
cld
fisubrl
arpl
push
icebp
or
nop
mov
mov
add
ficompl
mov
cmp
and
lock
leave
scas
mov
dec
out
add
jne
jl
mov
and
cwtl
sub
add
arpl
subb
dec
adc
dec
ds
push
jno
mov
jg
stc
or
lods
mov
mov
mov
adc
imul
iret
cmc
ret
jle
or
ret
stos
and
nop
mov
xchg
mov
mov
mov
mov
in
shll
test
je
int3
cmp
cwtl
xchg
pop
fisttps
enter
jmp
jl
mov
arpl
aad
and
cmp
hlt
sub
dec
sahf
lods
hlt
cld
cmp
cmovl
add
out
outsb
aaa
in
nop
ja,pn
lds
mov
cmp
sysenter
lds
scas
mov
fdiv
xchg
cld
mov
sub
mov
ss
cs
pop
xor
add
mov
dec
inc
jmp
sbb
imul
add
pop
cli
xchg
ds
into
push
incl
cmc
jg
jecxz
jnp
test
pop
pop
dec
jne
inc
decb
jno
das
mov
push
rclb
mov
inc
fwait
loope
and
outsb
cmp
push
cwtl
cmp
aam
mov
xchg
xchg
loop
jmp
xchg
int
push
int3
int3
or
and
popa
das
gs
stos
xor
dec
xchg
insl
aas
xchg
mov
out
test
jb
int3
mov
xor
mov
inc
enter
push
les
xchg
mov
lcall
dec
dec
adc
adc
fsubrl
lods
mov
add
pop
dec
loope
aas
adc
fdivrl
mov
ljmp
xchg
add
int3
mov
or
jmp
lods
xchg
jo
addb
movsl
xor
test
stos
xor
repz
dec
sub
cmp
lods
jge
sub
dec
dec
xlat
rcrb
mov
inc
add
xchg
dec
sbb
inc
mov
test
repz
mov
dec
ficomps
data16
repz
xchg
and
ljmp
in
push
mov
pop
inc
rolb
inc
push
dec
cmpsl
movsl
repz
fsubrs
cmp
dec
mov
ja
scas
and
out
repnz
dec
std
cmp
sub
xchg
ja
movsl
jb
cmp
mov
insb
or
dec
lds
mov
popa
sbb
mov
daa
cmpsb
cmp
inc
push
mov
push
xchg
jmp
repz
dec
pop
add
dec
mov
es
and
mov
mov
aam
js
add
jns
pop
add
not
sub
mov
popa
addb
push
xchg
iret
xchg
jnp
push
cltd
outsb
sbb
sbb
fsubs
jne
int3
jo
jl
dec
inc
cmpsl
popa
lods
xor
cmp
jne
lea
shlb
fisubs
stos
inc
dec
js
inc
push
rorb
int3
leave
sub
mov
inc
mov
xchg
jo
push
fprem1
sahf
add
mov
movb
pop
jp
push
setb
aad
fsubs
leave
add
mov
jb
pop
fsubl
sbb
or
push
push
mov
in
xchg
push
loope
lods
cmp
out
pushf
push
sub
xchg
lahf
xor
dec
xchg
hlt
scas
jno
enter
in
arpl
xchg
jle
sbb
and
xchg
stc
jmp
loopne
dec
mov
and
dec
xchg
test
lret
pop
movsb
aad
lcall
xor
add
ja
mov
mov
sbb
cmp
roll
mov
roll
cmp
not
out
filds
fstpl
push
pop
mov
mov
cmp
pushf
cld
fdivl
imul
adc
jo
dec
negl
lcall
js
xor
aas
dec
push
jp
mov
jne
add
aam
jmp
out
push
jns
sti
imul
cmpsb
in
jle
addr16
in
inc
pop
cld
mov
repnz
iret
rorl
xor
insl
adc
adc
and
mov
lods
mov
xchg
jmp
cltd
add
dec
add
push
fmulp
jno
push
jge
adc
inc
pop
adc
push
xor
push
repz
insb
out
fstpt
int
mov
dec
jl
rclb
cmp
xchg
in
enter
xor
xchg
loopne
push
jle
leavew
mov
mov
lcall
enter
in
push
push
adc
data16
mov
adc
push
and
adc
dec
outsb
jg
cmp
inc
pop
and
popw
pop
and
dec
sar
adc
jb
scas
cmp
mov
in
jo
pop
or
scas
xor
pop
rorb
push
jns
sub
imulb
movsb
inc
mov
mov
inc
aaa
cmp
popf
cmp
adc
push
pop
out
xchg
dec
mov
xor
sbb
orb
adc
insb
mov
add
neg
jns
push
dec
push
add
push
jo
sahf
addr16
cli
out
movsl
inc
xor
sbb
inc
mov
movl
icebp
dec
lea
mov
mov
and
xor
scas
lods
mov
mov
cmp
or
sarb
fadds
movsb
in
enter
pop
cmpsb
xlat
pop
add
jb
inc
jae
xchg
sbb
push
outsl
mov
dec
cld
fstl
inc
inc
mov
jnp
cmp
jecxz
pop
enter
cmp
shl
jae
subl
cmp
pop
aam
popa
pusha
mov
add
repz
mov
and
lcall
ret
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
shr
ret
mov
xor
addl
and
shr
ret
jmp
mov
and
loopne
dec
mov
lea
adc
fstp
ljmp
mov
jno
jle
std
push
jae
mov
roll
test
xchg
sahf
pushl
xchg
ret
mov
fidivrs
out
jl
inc
mov
iret
std
shlb
lds
sti
aad
out
mov
sbb
jns
and
invd
subl
bound
sbb
mov
mov
cmp
mov
call
add
add
inc
in
push
sti
nop
push
pop
push
hlt
jecxz
clc
sub
sbb
iret
idivl
sub
pop
mov
outsl
pushf
push
in
leave
pop
in
ljmp
or
cli
pop
test
mov
in
repnz
xchg
shl
inc
mov
loopne
xchg
inc
dec
add
divl
les
inc
cld
adc
or
cmc
push
loop
iret
adc
jno
outsb
dec
jmp
dec
mov
dec
aas
notb
in
push
inc
cli
jo
lods
or
mov
sahf
dec
out
fldenv
jns
stos
mov
mov
cmp
jne
stos
inc
adc
sub
sub
dec
sar
xor
or
dec
push
lret
mov
clc
dec
dec
mov
adc
mov
add
scas
fldt
lds
sti
fldl
and
mov
imul
or
adc
lds
sbb
in
gs
xchg
lret
jnp
icebp
jmp
or
movsb
jmp
cli
in
push
pop
popa
sbb
mov
divb
mov
xchg
inc
dec
js
mov
mov
rcll
inc
cld
lods
test
add
dec
in
out
push
xlat
in
fs
cmp
xlat
pop
sbb
dec
imul
sub
and
sbb
gs
repz
push
mov
mov
flds
lahf
pushf
bound
or
mov
or
adc
adc
popa
aas
inc
ret
in
into
lds
divl
cmc
push
sub
jo
inc
pop
ret
xchg
rorl
stc
mov
mov
jne
and
test
aaa
fnstenv
imul
pop
sbb
insb
stos
jg
fadds
mov
insl
adc
xchg
into
pop
mov
inc
std
mov
mov
or
push
inc
mov
fdiv
in
inc
loopne
cmp
pop
sub
jmp
xor
push
les
lcall
cmp
add
xorl
lcall
push
test
movsb
mov
xor
adc
out
fwait
andl
sti
inc
push
jmp
xchg
pop
pusha
stos
cwtl
aaa
xlat
rorl
jl
and
cmp
es
sub
into
pushfw
mov
pop
movsl
int3
imul
or
mov
lods
inc
pop
cmp
ja
out
mov
push
fldt
fmuls
xlat
in
aas
insb
das
jb
dec
pop
cmpsb
loope
pop
mov
jge
and
cmp
xchg
sbb
mov
popa
subps
mov
adc
inc
adc
jb
clc
cmpsb
dec
add
xchg
mov
mov
pop
outsl
enter
imul
loopne
les
iret
push
popa
test
mov
jns
mov
push
mov
mov
clc
addr16
movsl
jo
xlat
sbbl
xor
mov
lret
orb
sub
movsl
dec
add
in
aaa
xor
loopne
or
aaa
sbb
fdivrs
pop
stc
scas
out
out
push
sar
ret
xor
leave
xchg
lea
jae
cmp
and
mov
ret
cwtl
inc
sbb
daa
rep
xchg
cmp
mov
pushf
arpl
insb
push
fnsave
mov
in
jp
adcl
icebp
loopne
xchg
jg
dec
pop
add
mov
jnp
push
out
push
xchg
lock
test
mov
mov
les
fadds
jecxz
add
testb
mov
loopne
test
aaa
pop
xlat
out
fcomp
xor
sahf
xadd
or
leave
push
pop
xchg
rclb
bound
mov
xorl
hlt
mov
sub
mov
shll
sti
or
daa
and
cmpsb
or
add
mov
sub
in
lods
jbe
add
or
push
mov
test
jnp
push
into
cltd
jge
cs
popf
mov
mov
mov
cmp
inc
jp
shll
xor
pop
cmp
enter
test
pop
jne
mulb
dec
clc
xchg
adc
lds
and
cmpsl
add
sbbb
and
sti
cwtl
ljmp
push
push
imulb
jg
push
aaa
xor
lahf
mov
mov
cmp
dec
push
pop
push
inc
cmpl
xor
imul
inc
loope
stos
cmp
cmp
lcall
dec
mov
mov
mov
cmpsl
push
or
inc
and
cmpsl
enterw
in
fs
adc
adc
addr16
stc
sbb
test
test
push
jg
add
jne
mov
push
adc
fistl
out
and
pop
jnp
jge
mov
cmp
push
stc
roll
fwait
mov
jns
jnp
sbb
or
sbb
sbb
cmp
lahf
shll
pusha
mov
pop
mov
cmp
push
sbb
into
mov
and
sbb
push
push
inc
cmp
push
mov
dec
and
lods
dec
stos
call
lods
jns
adc
adc
outsl
add
js
daa
repz
test
lock
sbb
loop
shll
ds
mov
cli
mov
inc
push
lahf
mov
push
cmp
lahf
insb
xchg
mov
sbb
mov
xlat
lds
inc
into
pop
shrb
xor
stos
ret
cltd
int
out
aaa
sub
adc
jb
mov
stos
sub
mov
out
in
fld
mov
es
and
fwait
mov
and
jle
push
stc
movsl
ss
xor
jmp
xchg
mov
mov
push
mov
dec
dec
jae
jae
repz
in
imul
das
lds
mov
inc
pop
sub
mov
int
xor
adc
pop
insl
jo
scas
out
jnp
idivb
mov
push
sub
push
xorb
sbb
dec
loop
dec
stc
jb
or
aam
push
hlt
sti
push
or
cwtl
jnp
test
pop
and
leave
dec
repnz
leave
insl
and
ds
cmc
fs
ds
ss
push
push
jmp
mov
add
mov
cmp
fimuls
mov
out
pusha
sub
dec
adc
xchg
shlb
and
movsl
loope
sub
pushf
push
rcl
mov
repz
and
sub
adc
mov
cmp
and
out
pop
movsl
aam
pop
popf
insb
adc
sub
divb
cltd
jns
pushf
pushf
mov
es
mov
pushf
mov
test
cmpl
or
jmp
jg
outsl
xchg
push
add
out
in
xor
mov
push
in
add
je
mov
scas
inc
pop
jmp
iret
fnstsw
cmp
add
add
data16
out
xor
out
pop
adc
and
dec
push
rcl
daa
jne
fistpll
add
insl
call
ss
sub
cmpsb
je
push
push
push
mov
subl
scas
mov
mov
adc
je
sub
fwait
push
inc
decl
lds
inc
int
imul
fdivrs
push
jne
or
jae
out
add
aas
in
xor
test
jg
sbb
gs
mov
call
movsb
mov
push
jbe
fwait
aaa
adcb
out
push
movsb
and
imul
popf
pop
or
push
dec
xlat
test
cmp
cmp
add
cmp
ret
xchg
and
adc
xor
add
push
call
es
lret
hlt
dec
lret
in
jo
mov
sub
sti
xchg
sbb
loope
push
and
push
aam
aad
and
cld
or
dec
lahf
lret
sti
shrl
les
roll
das
mov
adc
jmp
push
dec
lds
and
ret
jne
divb
lahf
mov
xchg
pop
xchg
sub
stos
cmp
inc
adc
lahf
loope
loope
pop
outsb
jge
mov
lcall
mov
jbe
sbb
repnz
sbb
arpl
daa
mov
cmp
adc
outsl
lahf
mov
jle
dec
jp
aaa
pop
xchg
adc
and
cmp
test
cwtl
cs
sub
addr16
inc
in
int
insl
xchg
pop
aad
push
jmp
push
repnz
jge
dec
mov
cld
inc
add
jle
rorb
loope
cmc
xor
shrl
mov
mov
outsb
dec
outsl
mov
pop
mov
jecxz
dec
lcall
aad
imul
mov
popa
mov
gs
dec
and
xchg
cmp
fnstenv
mov
je
mov
ss
stos
popa
jo
jecxz
pop
sub
jl
cmp
pop
lods
js
pop
lret
pushf
dec
fnstenv
mov
pop
push
push
push
sbb
cmpsb
nop
in
sbb
adc
pminsw
inc
or
add
cmp
xchg
adc
int
xlat
rorl
or
scas
popf
ss
xor
jp
or
or
mov
sti
daa
lock
jg
test
mov
xor
test
mov
out
hlt
stos
mov
dec
repz
cmp
out
in
lods
push
inc
stos
out
outsb
scas
in
and
inc
in
fs
push
pusha
imul
in
test
mov
fnstcw
mov
enter
shll
adcb
int
pop
insb
or
es
pop
int3
out
cld
jno
inc
or
cs
inc
xor
repz
jb
pop
fdivs
adc
lods
aam
outsl
jo
sbb
cmp
andb
add
insl
mov
sbb
call
cmp
inc
mov
insb
enter
add
ja
out
je
adc
jecxz
mov
mov
or
push
cld
in
out
stc
popa
cltd
fnsaves
xchg
outsl
stc
and
push
adc
mov
hlt
loopne
mov
lret
faddl
das
or
xor
test
sub
cld
pop
hlt
popa
jo
xchg
sbb
mov
add
cwtl
ror
ljmp
jle
dec
pop
inc
inc
and
test
scas
daa
inc
repnz
xor
mov
add
mov
jnp
nop
pushf
xor
mov
test
ljmp
dec
lret
jmp
jne
loop
iret
or
dec
repnz
insl
sub
pop
scas
dec
lretw
push
or
add
daa
xor
mov
imul
and
out
ret
xchg
pop
imul
fmulp
outsb
pushf
lret
or
loope
pop
into
push
cmpsl
sub
sub
popf
loopne
mov
repnz
loope
test
ficompl
cs
pop
xchg
punpckhwd
inc
lahf
icebp
adc
jnp
adc
adc
aad
std
notb
push
push
nop
aam
fistpll
stc
and
xchg
pop
mov
xchg
into
call
decb
sbb
ffreep
inc
push
add
and
sub
push
fistps
dec
call
mov
gs
and
idivb
add
ja
iret
out
stos
cmc
inc
jecxz
in
inc
cmp
mov
lods
and
xor
add
sub
mov
or
pop
mov
clc
scas
add
popaw
mov
xchg
push
mov
xchg
iret
xchg
call
xor
bound
jne
outsb
mov
mov
scas
scas
insb
or
adc
roll
ret
cmp
push
out
adc
rcll
adc
stos
clc
xchg
push
rorl
cmpsl
les
iret
or
fxrstor
jae
lret
mov
insl
test
xor
and
outsb
mov
cmp
ret
sub
mov
test
idivl
pop
hlt
pop
cmc
push
xor
repz
mov
or
push
mov
fwait
ja
pop
cltd
add
ds
lcall
jae
frstor
mov
sbb
mov
fwait
stos
xor
sub
scas
jno
or
orl
xchg
push
pop
jo
shll
andl
or
jno
mov
bound
add
stc
lcall
adc
fcomps
pop
mov
mov
insl
cmp
lods
push
add
or
mov
mov
mov
ja
stc
inc
adc
lahf
dec
cmc
repz
xor
push
cmp
out
push
outsl
push
sbb
mov
idivl
mov
inc
mov
aam
jmp
xor
pusha
iret
test
xchg
inc
dec
xor
int
adc
aas
dec
cwtl
push
jne
aam
lods
sbb
mov
repz
movsl
add
inc
orb
adc
cli
sub
xchg
xchg
push
xlat
je
push
rcrb
lea
cld
inc
cmp
out
mov
mov
dec
sti
cmp
adc
out
pop
in
movl
or
out
dec
addl
cld
stos
jle,pn
loopne
adc
xor
push
or
push
push
enter
aas
in
rcrb
jbe
out
aaa
mov
or
pop
imul
test
addl
aas
push
push
out
cmp
sbb
jo
rol
and
shlb
pop
cmp
adc
pop
loope
mov
xchg
push
loopne
sbb
mov
push
or
sub
sub
pop
test
mov
sbb
inc
test
mov
inc
push
enter
out
in
rol
jmp
inc
orb
daa
sbb
mov
mov
sahf
andl
fcoml
pop
dec
xchg
imul
cltd
jbe
aas
mov
cmc
repnz
xlat
xor
pushf
in
test
ja
mov
mov
shrb
imul
sub
add
mov
movsb
cmpsl
sahf
mov
rcll
pop
scas
cmpsb
sbb
jae
xchg
fsubrs
lahf
fdivs
imul
mov
fcmovnbe
inc
les
sub
nop
sub
icebp
mov
mov
lret
push
pusha
jmp
jp
movsl
mov
outsb
call
les
pop
cli
call
and
and
push
mov
aad
addl
pop
mov
data16
icebp
jno
pop
aas
pop
cli
jae
loop
jge
call
divb
dec
popa
jle
xlat
xlat
sahf
jp
pop
dec
std
ror
gs
imulb
lret
mov
mov
mov
xchg
mov
imul
icebp
jae
fdivl
jmp
out
jb
test
push
jbe
adc
ss
stos
fstps
fldt
cld
mov
cmpb
adc
or
shlb
jno
es
lea
stos
pusha
fldl
imul
add
and
lret
cld
cmp
push
add
xchg
adc
out
lahf
dec
xor
in
andb
test
add
jg
push
mov
dec
int
dec
xchg
jns
xor
call
push
pop
cmpsl
add
int
inc
call
ret
sarl
in
fimuls
mov
mov
pusha
in
rcl
mov
and
inc
jmp
and
test
pop
pop
fildll
mov
loope
or
les
jne
fisttpll
iret
cmpsl
lahf
mov
and
insl
popa
and
lods
inc
scas
sub
pop
bound
xchg
divb
add
enter
push
insl
pop
div
sub
orl
push
mov
mov
pusha
or
xlat
popf
sti
push
dec
dec
and
scas
pop
jbe
cmpsl
jle
jne
fists
nop
mov
inc
sbb
sbb
out
adc
pop
xchg
lods
lret
lret
xchg
and
idivl
imul
push
jbe
insl
jns
ds
pushf
popa
pop
pshufw
lock
stc
dec
rorl
or
negb
adc
ret
jnp
pop
push
mov
mov
aas
outsl
cmp
ret
lds
or
inc
sub
xchg
fcmovb
dec
rol
int
cwtl
lret
icebp
xchg
in
les
mov
mov
sar
mov
and
adc
mov
cmpsl
dec
cltd
xor
out
outsb
cmp
loopne
push
jmp
jmp
xor
outsl
frstor
or
fldl
pusha
mov
out
lods
add
bound
inc
in
or
fiaddl
cmpl
jo
daa
gs
pop
rclb
mov
mov
fisubrl
jg
mov
mov
pop
shlb
mov
adc
xor
int3
cwtl
jl
or
bound
pop
out
aad
shlb
dec
fisttps
xchg
jo
mov
shrb
adc
ljmp
xchg
sahf
push
fmull
ss
adc
xlat
sub
inc
insl
int
ljmp
mov
xchg
shll
dec
fsubl
arpl
mov
inc
xchg
lret
js
add
ss
fs
rcrl
in
fstpt
idivl
je
inc
or
sbb
sbb
stos
clc
ja
pop
adc
aam
and
inc
cmc
dec
insl
nop
mov
adc
imul
jne
ficompl
mov
fidivrl
mov
push
dec
mov
mov
mov
out
dec
sarb
or
lock
cmp
das
lret
dec
jb
in
or
icebp
sub
int
fnstenv
outsl
xchg
sbb
push
je
lcall
ret
push
jecxz
dec
push
scas
rcrb
sub
mov
pop
mov
rcr
and
test
or
xlat
mov
xor
orb
in
mov
xorb
aaa
enter
das
outsl
mov
mov
icebp
mov
mov
push
out
add
and
mov
insl
adc
sub
cmp
or
in
nop
dec
xchg
std
iret
in
orb
sbb
lcall
out
in
mov
xchg
pop
jno
insl
adc
lret
adc
push
sbb
rcr
dec
xchg
sub
lcall
push
je
sbb
loope
lock
and
cmp
lcall
mov
bound
or
pop
das
lock
xchg
or
sub
lds
cltd
inc
sub
pop
xchg
push
icebp
loop
xor
lea
lods
out
inc
popf
ja
in
ljmp
xchg
js
add
mov
mov
mov
orl
loope
movsl
fistps
cli
mov
mov
and
xchg
pop
fwait
repnz
dec
push
setbe
xchg
andb
and
xchg
jle
push
inc
or
loope
mov
push
pop
repnz
ss
and
jno
lret
or
pop
outsb
adc
imul
push
mov
es
jbe
dec
inc
lods
push
sbb
jnp
scas
out
ds
adc
addr16
iret
lods
insb
in
jmp
cmp
ja
adc
sbb
call
cli
leave
adc
mov
push
mov
mov
jo
adc
fiadds
out
jne
mov
iret
fstl
test
repz
cmpl
sahf
sti
or
iret
in
inc
cmc
lcall
lock
pop
jge
add
bound
stos
scas
adc
cmp
lock
jle
stos
or
subl
mov
enter
jl
mov
inc
ljmp
bound
scas
mov
out
xchg
frstor
push
jnp
add
mov
xchg
and
dec
rorl
pop
mov
call
jne
mov
jns
aam
fs
dec
addr16
push
fldenv
orl
pop
push
data16
mov
fbstp
inc
aaa
mov
das
or
fld
test
jne
inc
rcr
or
fnsave
leave
mov
mov
cmp
test
mov
push
cmpb
aam
mov
stos
fdivp
daa
out
xchg
or
sbb
mov
cwtl
mov
test
jne
xchg
push
mov
clc
cmpsl
pop
rcll
xor
and
fwait
outsb
mov
and
gs
adc
dec
jb
je
sbb
cmpl
jae
movsl
adc
dec
dec
loop
ficompl
das
pusha
inc
fmull
sbb
pop
lcall
loope
mov
mov
dec
lds
mov
in
jge
add
pop
push
test
jnp
cmp
push
adc
out
cltd
std
stos
pop
fs
xlat
andb
dec
cltd
cmp
bound
push
inc
cmp
inc
inc
and
mov
fdivl
adc
dec
mov
inc
dec
into
dec
pop
data16
pop
mov
ret
inc
cmp
lock
jns
xchg
pop
push
lea
es
xor
or
cwtl
ret
and
jnp
pop
sub
push
into
xlat
mov
inc
jae
out
aam
jae
sti
and
scas
pop
pusha
pop
int
and
test
movsb
lahf
and
in
movb
out
sbb
sbb
shl
xlat
out
push
sbb
push
push
lret
sbb
pop
dec
sbb
pushf
movsb
xor
int3
lds
lods
push
add
out
jecxz
adc
imul
add
push
lods
jbe
shrb
mov
orl
cmpsb
mov
into
jmp
ret
stos
sarb
clc
leave
mov
std
cmp
push
stos
fildl
popf
and
aam
mov
xor
sub
cld
sbb
lcall
inc
push
or
imul
cwtl
jge
sti
fistps
or
xor
outsb
out
xor
mov
and
xchg
sbb
sbb
fmulp
dec
mov
pop
iret
aas
mov
enter
inc
pop
adc
ja
nop
addr16
cld
cmp
popa
in
mov
pop
sub
lret
out
xchg
enter
add
xor
loop
push
roll
cmc
xor
dec
mov
out
dec
mov
aam
pop
push
movsl
or
stos
xchg
pop
out
sub
divl
sub
test
pop
sbb
xchg
push
mov
outsb
ja
aam
and
fists
xchg
sbb
sbb
call
add
roll
test
lock
dec
jl
stos
or
fdivrl
xor
fadd
add
xchg
frstor
sahf
inc
inc
xor
test
cli
mov
pop
lahf
xor
inc
sbb
fidivl
mov
movsl
sbb
mov
or
shlb
lea
repnz
jp
dec
jl
mov
fildl
loopne
jb
cli
dec
jbe
mov
add
inc
data16
inc
outsb
mov
ret
mov
mov
sub
sti
fmull
cli
fwait
xchg
dec
add
aaa
iret
outsb
pop
sub
or
xorl
add
jno
jecxz
lahf
sbb
rorl
push
call
inc
arpl
and
repnz
gs
add
xchg
ja
and
fwait
xor
in
inc
fbld
jmp
sub
inc
jecxz
out
inc
mov
cmpl
nop
xchg
push
fsubrl
aad
lods
cmp
sahf
ret
and
mov
in
dec
cmp
mov
cld
iret
mov
sub
mov
movsb
cmp
dec
pushf
loope
xchg
pop
cld
cmpsl
add
mov
xchg
mov
push
cld
aaa
mov
pop
shlb
push
lahf
inc
xchg
push
mov
push
pushf
inc
mov
cmp
insl
loopne
fdiv
lods
pop
mov
mov
push
ljmp
xor
dec
arpl
push
das
lret
jno
cmpsb
ja
jo
xchg
fldl
cmp
sbb
pusha
dec
mov
mov
sbb
and
testl
ror
aaa
call
in
fs
pop
push
jge
mov
push
in
lret
mov
ds
cmp
push
lock
out
xchg
iret
popf
ss
push
xchg
sub
jnp
sub
lahf
xchg
imul
repnz
xchg
enter
dec
popf
xor
adc
pop
cmp
int
inc
fs
in
sahf
cmpsl
or
cli
std
bnd
xchg
add
or
push
push
fcoml
movsb
mov
xchg
lea
idivb
es
dec
cltd
dec
mov
repnz
mov
pop
shll
cmpsb
sub
loopne
sar
out
sub
and
stos
pop
test
out
jns
data16
lods
mov
or
cmp
xchg
mov
xor
inc
fprem
push
sbb
or
xchg
cmp
add
test
adc
xchg
testl
mov
sub
sub
dec
adc
dec
and
dec
testl
aas
lods
xchg
xchg
mov
dec
mov
jae
inc
lret
pushf
je
add
add
xchg
insl
xchg
push
add
jl
fwait
or
pusha
adc
ja
xchg
jg
cli
sbb
fidivl
in
inc
sbb
pop
or
mov
jns
mov
mov
inc
sbb
mov
pushf
mov
or
movsl
inc
out
push
jnp
aam
cmp
adc
inc
xor
lods
cwtl
fcompl
jbe
add
adc
xor
sti
adc
decb
jae
jo
push
jns
insb
xchg
xchg
scas
jle
or
push
xchg
xlat
call
push
hlt
out
push
cmp
arpl
mov
dec
jae
dec
pusha
out
mov
jp
mov
movsb
cmpsl
inc
mov
imul
mov
xchg
pop
mov
mov
sbb
ret
xchg
repnz
das
inc
lods
add
popa
push
xchg
rcrb
fwait
pop
xchg
imul
jecxz
cmc
es
hlt
shll
addr16
cmpb
std
add
pop
lds
das
xor
test
leave
aam
adc
int3
leave
mov
jns
loope
pushf
iret
leave
or
loope
jl
pushf
sahf
mov
jae
cmp
in
mov
and
push
mov
add
and
xor
jnp
ss
in
add
loope
push
sub
or
jo
push
mov
shl
cmp
loope
pop
mov
push
std
out
lahf
data16
gs
xor
std
cmc
or
loopne
and
push
stos
add
stos
mov
pop
dec
push
xchg
xor
out
outsl
adc
pushf
push
repnz
int
cld
sub
ja
xchg
call
rcl
inc
insb
and
in
hlt
mov
fidivl
outsb
xchg
and
call
mov
sub
push
bnd
and
inc
add
adc
dec
xchg
cmp
mov
movsl
movsb
mov
xor
lcall
ja
popa
pop
bnd
je
inc
mov
fbld
xorb
loop
pusha
divb
in
cmp
sub
stc
mov
fdivl
fidivl
add
lret
outsl
and
sub
icebp
lret
scas
popl
mov
negl
fdivs
out
xor
rorl
pop
xchg
adc
adc
sbb
enter
loop
xlat
ret
push
xchg
inc
mov
icebp
xchg
mov
lock
fwait
gs
cmp
xor
pop
push
pop
mov
inc
test
and
xchg
mov
cmp
or
lds
movsl
cmp
cmpsb
cmp
xor
sahf
loopne
inc
mov
cmp
add
stos
jno
and
mov
cmp
sbbb
xchg
inc
jne
add
and
cmp
push
or
xor
leave
adc
stos
sbb
and
xchg
cmp
rclb
ss
jne
mov
stos
lods
aaa
lcall
inc
mov
test
lcall
push
inc
lods
stos
jbe
or
ficoml
mov
and
mov
sarl
jb
sbb
jle
insl
int
fisubl
jle
lock
test
imul
jns
gs
dec
pop
fimuls
inc
sub
fisttps
push
aaa
rcrb
push
int3
fstps
and
call
mov
mov
mov
or
je
test
inc
dec
xchg
ret
or
mov
fistps
mov
cmp
xchg
test
aam
and
xorb
pop
ror
cmp
pushf
pop
adc
xchg
xchg
jle
mov
daa
push
mov
movsl
pop
mov
push
cs
pop
mov
mov
fadds
jle
sbb
ret
pop
xor
lcall
jmp
push
mov
imul
mov
mov
out
pop
aad
sub
insb
movsb
insb
pop
jb
enter
outsl
xor
sbb
cmp
adc
mov
es
xchg
and
pusha
in
jl
xor
add
ds
inc
or
cmp
ret
push
mov
sub
sbb
movl
mov
orl
mov
movl
cmpl
mov
movl
not
not
jmp
mov
ja
push
push
call
or
mov
xor
xor
add
or
sbb
add
adc
movzwl
xor
dec
mov
movl
addl
movl
cmpl
not
movl
jmp
mov
mov
jne
pushl
call
inc
movzbl
xor
mov
or
neg
and
adc
xor
movl
add
movl
movl
cmpl
mov
mov
jmp
mov
movl
jb
push
push
push
call
add
movl
xor
xor
movl
mov
mov
cmpl
mov
movl
movl
jmp
mov
jg
push
call
subl
or
add
sub
and
xor
add
sub
mov
andl
mov
sub
mov
push
mov
sbb
mov
cmpl
movl
movl
mov
jmp
mov
je
pushl
push
push
push
call
orl
dec
adc
xor
xorl
xor
or
mov
andl
push
addl
push
notl
push
push
incl
call
mov
mov
xor
and
not
xor
and
xor
or
mov
sub
xor
and
cmpl
mov
movl
jmp
movl
jg
pushl
push
pushl
push
pushl
pushl
pushl
call
add
xor
add
and
add
mov
and
add
mov
jmp
movsl
add
mov
stos
xchg
adc
adc
pop
and
xchg
pop
sbb
clc
inc
movsl
push
sub
aad
lahf
cltd
cld
add
lahf
push
leave
mov
adc
xchg
enter
dec
push
and
xchg
dec
ss
ja
or
cltd
mov
sbb
out
adc
out
inc
outsl
push
adc
mul
push
cmp
sbb
andl
fdivl
cmp
dec
aad
sbb
fstl
cmp
push
shrb
pop
fistl
sub
xchg
add
inc
inc
leave
pusha
aas
mov
bound
sti
dec
mov
out
jo
into
cmp
pop
loope
add
xchg
adc
aad
fwait
call
dec
das
pop
dec
ret
rcl
pop
xor
mov
outsb
iret
jne
movl
cwtl
rorl
pushf
insl
sub
or
in
xchg
test
sub
out
xorl
mov
in
mov
sbb
jae
and
sub
int3
cmc
insb
fstpt
pushf
aam
xchg
in
stc
xor
mov
pop
adcl
jns
fwait
inc
adc
dec
sbb
push
inc
aam
cltd
je
lea
xchg
loope
fistpl
repz
cmp
insb
push
adc
sub
subb
add
mov
daa
insb
sbb
aam
iretw
lahf
clc
push
hlt
into
push
arpl
ss
mov
and
dec
rcrl
and
test
sub
in
jmp
pop
outsb
cwtl
jg
sbb
xor
std
jns
xchg
movsb
stos
lahf
addl
inc
inc
repnz
jno
shrl
dec
call
adcl
insl
cmp
fsubrl
pop
lcall
and
popa
out
repnz
sbb
int3
mov
and
adc
inc
psubusb
call
xchg
sub
repz
mov
je
dec
mov
rcrb
xorl
dec
jne
lock
out
cmp
cld
imul
into
cli
pop
dec
mov
hlt
mov
mov
add
loope
xor
mov
lods
jp
mov
cmp
test
in
insl
sti
aad
fs
inc
lds
fsts
movswl
and
dec
cltd
xor
arpl
lret
pop
xchg
mov
pop
push
cmpsb
mov
sbb
dec
inc
mov
test
and
cltd
sub
test
outsl
push
mov
adc
cmpsl
test
fcom
inc
cld
adc
das
inc
in
aaa
add
push
inc
ss
outsb
push
jns
lea
icebp
sbb
cmp
dec
cli
fidivrl
loop
cs
bnd
mov
cmp
ljmp
sbb
pop
ret
fs
push
out
addr16
inc
sbb
xchg
xchg
push
nop
out
jno
or
nop
cmc
jnp
sti
add
xor
data16
mov
leave
imul
lcall
mov
xor
stos
pop
mov
clc
into
jne
cs
shrb
pop
cmpsl
push
cmpsb
mov
fidivs
lret
aam
dec
jbe
mov
sbb
arpl
mov
fisttpll
repz
adc
mov
or
or
das
movsl
or
test
cmp
shr
jbe
fs
push
fiaddl
lea
out
sbb
push
pop
adc
sbbb
ret
mov
and
roll
lahf
jae
negl
orb
popa
mov
push
je
pop
and
dec
fdivs
pop
fildll
aaa
or
dec
sahf
sarb
hlt
scas
enter
jne
mov
mov
cmpsl
xor
out
mov
jbe
ret
mov
andl
xchg
cld
addr16
sub
push
repnz
mov
xor
mov
pop
mov
adc
loope
dec
or
hlt
or
pop
dec
xor
lea
mov
jmp
add
negl
movsb
out
lods
pop
sarl
movsl
outsb
je
into
cltd
lret
cmp
and
data16
call
leave
pop
adc
insl
mov
push
stos
fcmovne
xchg
mov
jb
mov
out
xchg
ficomps
mov
pop
rorb
and
mov
xor
int3
pop
gs
and
je
mov
ljmp
mov
adc
xchg
aas
jl
scas
mov
push
fisubs
shrb
andb
sub
adc
out
dec
pop
jno
adcb
push
repz
in
mov
sbb
ret
add
xor
xor
sbb
jo
cli
mov
jbe
arpl
jmp
cmpsb
and
into
lock
repz
out
bound
and
in
push
push
pop
sbb
out
shl
and
hlt
xlat
jecxz
or
mov
pop
dec
sub
dec
aaa
jnp
ret
jg
mov
addb
push
mov
and
into
and
add
pop
add
iret
dec
mov
dec
fcmovnbe
sub
pop
idivb
orl
cs
popa
or
pushf
push
and
push
test
lea
outsl
push
loopne
adc
roll
dec
pushf
stc
xor
testb
sbb
jle
imul
fimull
daa
and
jl
mov
cli
sbb
xchg
push
mov
test
xor
add
out
pop
dec
jge
pushf
or
out
or
movsb
pusha
fiadds
mov
test
pop
pop
push
repz
lods
xchg
cmp
cmp
mov
add
notl
inc
cmpsb
pop
and
xor
stos
jns
shrb
pop
add
sbb
movsb
scas
fldl
adc
pop
xchg
dec
xchg
in
mov
jno
dec
mov
mov
push
test
mov
or
vmovd
pop
loope
xor
cmp
pop
add
xor
sub
push
adc
lea
push
lahf
decb
addr16
adc
mov
cmp
push
out
mov
lds
xchg
outsl
pop
mov
mov
push
or
and
push
js
les
mov
lcall
lods
sub
mov
jno
repnz
fnstcw
arpl
add
cmove
push
mov
xor
rorl
fisubrs
cli
addl
mov
pop
divb
sbb
sbb
test
js
add
mov
pusha
nop
lock
inc
jnp
inc
imul
loop
imul
nop
sysexit
cld
pop
in
scas
mov
dec
fsubl
ja
adc
xchg
fs
lea
lret
adcb
divl
mov
mov
loope
sub
ret
xchg
push
test
push
add
cmp
mov
cmp
or
sahf
in
int
and
cmp
shlb
rcl
xor
push
out
dec
jns
sahf
data16
dec
inc
adc
jbe
sub
aas
fnsave
mov
js
mov
inc
std
cld
add
leave
stos
xor
inc
in
popa
lock
in
es
into
dec
insl
dec
mov
mov
call
dec
jbe
or
test
inc
cmp
or
add
in
add
push
test
xchg
xor
nop
pop
int3
gs
pushf
mov
ss
loop
mov
aam
fwait
push
and
xchg
jge
inc
sub
jg
pusha
mov
jmp
dec
sub
or
mov
add
jae
push
mov
xor
sub
inc
jae
lock
sbb
add
add
pushf
lock
fcmove
adc
lods
push
push
dec
push
xor
sar
inc
mov
jle
sahf
mov
divb
aaa
cmp
xor
in
shll
test
inc
test
mov
pop
sbb
out
insb
loope
push
xor
sbb
push
stos
push
jge
xchg
jo
jno
add
out
lods
je
xor
je
xor
jbe
enter
clc
mov
jg
pop
call
daa
mov
mov
popa
cld
aad
test
xchg
pop
jb
sti
xlat
dec
push
cmp
jns
out
ret
mov
adc
jmp
sbb
lcall
rcrb
add
adc
mov
jno
iret
test
push
cltd
sbb
pop
outsb
mov
cmpsl
repnz
dec
sarl
out
faddl
inc
dec
xchg
xchg
cmp
inc
dec
imul
xchg
push
lock
adc
jmp
mov
inc
ss
push
iret
dec
xchg
imul
out
cltd
jl
sbb
mov
mov
pop
cmp
jg
cmp
ror
loop
xchg
int
xchg
out
or
out
cli
loope
je
test
xor
mov
sub
push
fiadds
ret
mov
sbb
pop
mov
xchg
hlt
dec
adc
insb
cmp
xor
nop
mov
and
pop
cpuid
lahf
xchg
outsb
aad
mov
pop
imull
sub
cltd
push
es
out
xor
pop
jne
fists
lea
je
ja
mov
adc
dec
repnz
pushf
mov
cmc
and
sbb
mov
xchg
mov
bound
pop
jg
xor
leave
fs
call
cmp
adc
enter
jge
arpl
pop
out
xor
ljmp
ret
sub
xchg
adc
imul
and
dec
cmc
push
repz
add
pop
rcrb
outsl
dec
scas
out
fptan
xor
xchg
les
mov
xchg
es
shrl
xchg
cmp
int
lret
movsl
push
pop
jl
xlat
imul
mov
xor
add
pop
scas
mov
pop
imul
push
inc
or
sub
jbe
fists
xchg
xchg
add
push
lods
or
push
cmp
and
xchg
subb
cld
inc
nopl
cli
test
jle
xchg
or
je
les
loope
mov
sub
mov
mov
cmpsl
push
dec
fstpt
push
add
es
sti
daa
sbb
mov
lret
addl
jnp
push
dec
outsl
rcr
pop
push
iret
pop
push
or
aad
ret
pop
add
pusha
ds
sbb
pop
out
pop
rcl
cli
pop
lcall
data16
dec
fs
inc
test
push
mov
push
lods
out
pop
jg
jae
ds
mov
pop
notl
mov
dec
adc
push
lahf
hlt
cmpsl
or
mov
test
mov
ret
adc
testl
mov
dec
dec
lods
dec
cmpsl
mov
xchg
jnp
cmpsl
call
imul
fisubrs
test
decb
mov
mov
add
add
lret
pop
lcall
mov
push
aad
sub
add
adc
dec
loop
lock
enter
cmp
adc
popa
dec
and
cmpsl
pop
std
lock
js
jecxz
jle
int
mov
stos
or
je
cwtl
mov
cmp
sub
add
push
daa
js
pop
jge
ja
test
sub
int
insl
sub
adc
rcrl
jbe
push
adc
ja
xchg
je
mov
lds
fisubl
dec
cmpsb
or
inc
shll
dec
mov
lods
mov
fdivrs
cli
and
dec
mov
sbb
adc
cmp
xchg
push
and
es
test
sbb
lds
xor
repnz
clc
adc
jp
adc
rep
sub
gs
pushaw
pop
les
pop
push
sub
cmp
and
loope
mov
bound
sti
mov
out
jnp
std
das
ljmp
out
sub
adc
ja
movsl
jbe
jnp
das
popf
add
add
mov
out
outsb
icebp
mov
das
xchg
and
clc
testl
jg
add
arpl
outsl
pop
into
mov
data16
xor
xchg
jmp
sub
jecxz
inc
movsb
cmp
stos
sub
mov
xchg
adc
and
push
xchg
sub
cmp
add
and
mov
fcomip
add
movsl
jmp
push
dec
push
fcoms
shll
divb
jns
or
jle
dec
mov
sbb
shll
lahf
inc
and
bound
pop
orb
shlb
bound
jno
je
and
mov
mov
insl
jnp
mov
jno
mov
mov
push
mov
std
xchg
mov
mov
mov
je
or
stc
jle
repnz
enter
rcr
and
sub
or
jl
push
fldcw
js
inc
in
inc
lds
mov
outsb
ret
daa
bound
sbbl
and
lods
cmc
enter
mov
popf
push
pop
pop
cli
cmpl
popf
jl
jl
mov
inc
loope
je
loopne
hlt
push
push
adc
les
shrl
xlat
std
lcall
cmp
mov
push
and
cmp
adcl
xchg
mov
dec
std
sub
mov
data16
and
mov
push
inc
sub
or
or
fildll
data16
addr16
xor
insl
add
add
dec
xor
mov
hlt
add
dec
add
lcall
movsb
leave
sub
pop
lret
das
or
xor
sbb
xchg
daa
sbb
pop
adc
sub
xor
in
pop
jne
xchg
cmp
cmp
lds
test
inc
jbe
mov
xor
shr
dec
xor
sub
pop
in
pop
ficomps
or
les
icebp
jmp
and
test
aad
jmp
std
mov
in
int
sub
sub
xchg
sub
pop
mov
xchg
bound
lret
and
cli
sub
inc
add
lods
es
pop
mov
mov
das
out
in
lea
enter
mov
sub
std
adc
mov
push
ljmp
clc
mov
mull
sbb
leave
xor
ja
xor
in
sub
cmpsb
inc
std
mov
mov
ficomps
nop
mov
pop
fistl
shlb
ret
cmc
imul
fdivs
std
xchg
inc
pushf
scas
dec
les
ss
adc
adc
popf
daa
loopne
cs
dec
pushf
loop
into
out
std
mov
sbb
or
xchg
sbb
lcall
stc
dec
jmp
hlt
mov
in
pop
int3
jmp
and
adc
push
jno
fwait
and
lahf
stos
loope
push
adc
scas
in
pop
cmp
push
cmpsl
pop
sub
jb
push
daa
mov
pop
test
hlt
sar
ffree
sti
rorb
sub
xlat
clc
jnp
jns
cmp
sbb
xchg
into
jno
xchg
movsl
push
stc
ss
dec
inc
outsb
icebp
xchg
cs
mov
inc
mov
dec
add
hlt
push
ret
add
pop
addr16
sti
jp
or
dec
pop
xchg
and
cltd
hlt
jnp
inc
mov
ja
flds
push
jbe
movb
dec
or
pop
cmc
ret
cmpsl
stc
xlat
jle
arpl
mov
and
mov
out
mov
sbb
jns
mov
mov
jnp
data16
adc
dec
cmpsb
cli
rcr
repz
jb
inc
jb
aam
mov
mov
cmpsb
jl
xor
xchg
jge
fs
cmc
push
push
cli
push
pop
iret
imul
xor
lahf
cmp
inc
push
sub
xchg
ret
sbb
lock
fisttpl
xor
in
lahf
testb
jbe
jne
cld
xor
xor
les
xlat
pop
xor
push
xchg
mov
inc
dec
ss
adc
add
scas
lfs
jno
sub
addb
push
sub
push
pop
xor
int
pop
test
fisttpl
and
xchg
mov
xchg
push
test
cmpb
lret
mov
or
mov
lahf
lock
lahf
enter
stc
jb
pop
push
jl
test
mov
stos
cmpsl
cmpsl
jo
mov
imull
imul
dec
inc
cmc
pop
aam
testl
add
push
push
das
pop
hlt
adc
rclb
sub
sahf
cmpsl
mov
fcoml
in
fsubl
sbb
inc
dec
xchg
jl
mov
iret
sub
jnp
mov
cmpsl
lods
enter
test
xchg
das
push
cmpsb
cli
addr16
lret
pushf
fdivrl
cwtl
addb
icebp
mov
pop
add
shlb
lock
ret
mov
jno
mov
sti
push
inc
jne
js
xor
mov
mov
enter
out
jg
mov
or
inc
push
sbb
in
and
cmp
push
cmpb
mov
loopne
stos
or
fisttps
sbb
xor
pusha
xor
movsb
pop
icebp
add
scas
in
sub
loop
adc
sub
or
out
pop
scas
jne
sti
jp
rcl
fsubr
inc
cmp
or
int3
mov
movsl
jle
test
nop
les
cmp
js
pop
data16
fiadds
pop
pop
push
sbb
outsb
ljmp
sub
loope
mov
mov
std
leave
cmp
icebp
and
jno
sub
adc
ljmp
mov
stos
pop
push
lcall
std
in
sbb
cs
push
or
loope
stos
ret
mov
xor
in
data16
inc
add
sbb
scas
mov
add
lcall
push
imul
outsl
mov
fimuls
xchg
xchg
add
jne
in
pushf
xlat
fistpl
cmp
out
into
push
je
test
cld
xor
call
call
rcrb
cmp
dec
push
sti
js
roll
sbb
xlat
ljmp
sub
jle
sub
fs
mov
daa
or
sub
xchg
mov
xchg
rolb
call
outsl
pop
icebp
push
es
ljmp
rolb
inc
movsl
dec
out
push
loopne
das
daa
xchg
dec
cmp
jmp
mov
cmpsl
in
scas
mov
pop
jmp
loop
xor
mov
sub
or
popa
mov
cmp
adc
pop
shl
cmp
lcall
cmp
push
data16
dec
xchg
fstl
mov
test
lock
stos
scas
mov
test
mov
mov
dec
mov
cmc
out
cmpsl
roll
mov
push
aad
xchg
loope
dec
jns
iret
out
mov
mov
daa
mov
pop
push
iret
shll
push
popa
les
lods
aaa
xor
inc
lret
pop
sbb
dec
rclb
popf
aam
repz
push
dec
xchg
cmp
outsl
je
adc
subb
sub
jbe
inc
pusha
push
xrelease
stc
loop
icebp
jno
cmp
push
ret
iret
sub
pop
call
lret
fisubs
sarb
int3
mov
add
test
sbb
xor
cmc
mov
fstp
dec
mov
jp
call
dec
adc
inc
inc
setbe
inc
lods
sub
xchg
or
mov
inc
push
push
adc
incl
sbb
idivl
mov
add
rcl
mov
test
repz
test
cmp
xor
jno
cltd
xorl
into
pusha
sbb
xor
or
inc
jbe
sbb
ficoml
mov
adc
mov
mov
xor
int3
pop
adc
je
jecxz
sub
push
mov
inc
or
xchg
leave
fistpl
pop
dec
stos
mov
xchg
stos
fcmovb
or
sti
jo
fistl
je
mov
push
xchg
insb
inc
jmp
mul
cs
call
lds
test
fsubrs
out
pushf
pop
lods
add
in
mov
mov
cmp
fcmovb
mov
xor
xor
inc
cmp
int3
insb
pop
jno
call
and
out
cmp
dec
scas
movsl
ss
push
mov
and
dec
lcall
bnd
call
inc
push
enter
push
adc
mov
sbb
xor
jns
mov
lahf
cmpsl
testl
pushf
outsb
out
fucomi
stos
mov
adc
mov
and
jbe
add
bound
or
movsb
sbb
shrl
mov
arpl
outsb
jnp
mov
sbbb
jl
notl
jbe
lcall
and
lret
lods
pushf
and
repnz
mov
jp
add
add
lods
push
mov
out
xlat
jl
adc
mov
jmp
dec
popf
ret
les
sub
xchg
xor
xlat
mov
pop
xchg
stos
adc
sub
std
cvtps2pd
rcrb
movsb
and
mov
mov
rcrb
cmpsb
in
iret
bound
add
dec
imul
xor
fcoms
push
pushf
testl
jp
int3
and
mov
scas
or
mov
mov
mov
aam
inc
or
hlt
gs
imul
xchg
add
dec
lods
mov
and
push
arpl
insb
xor
xchg
bnd
inc
call
push
stos
int
sbbl
decl
push
out
pop
cmp
pop
adc
arpl
and
xchg
jb
hlt
mov
xchg
add
pop
jl
pop
mov
xchg
mov
push
dec
aaa
into
sti
andb
sahf
sbb
sbb
or
idiv
aas
outsb
add
cld
ja
or
insl
jle
add
imul
add
xchg
xor
adc
shrd
fwait
out
jecxz
xor
inc
fwait
into
xor
or
fdiv
pop
jmp
cwtl
ret
std
clc
scas
imul
imul
test
cmp
popf
out
outsl
pop
and
int
mov
dec
jp
mov
push
fdivrl
add
xchg
dec
mov
push
inc
test
push
cs
js
mov
out
mull
shll
add
adc
xchg
inc
sbb
hlt
data16
mov
cld
cli
sbb
push
movsl
cs
and
adc
xchg
lock
aaa
jb
and
aas
pushf
fdivl
test
push
xor
push
adc
sub
movsb
mov
in
imul
mov
aad
jecxz
sbb
loope
jns
mov
faddl
add
outsl
xchg
push
jl
in
pop
pop
cwtl
push
sub
pop
mov
sbb
sbbb
jmp
xor
mov
add
cmpsb
ljmp
pushf
pop
mov
outsl
add
pop
or
mov
and
jae
lret
out
shlb
jmp
mov
call
rolb
push
loopne
adc
aaa
fwait
rcrb
mov
ds
stc
adc
leave
cmp
mov
iret
lcall
std
pop
lret
repnz
dec
push
iret
sarl
shll
jb
cmp
lret
mov
adc
data16
jo
js
dec
movsb
pop
jb,pn
movsl
sbb
btc
pop
sbb
xor
inc
sub
daa
xor
adc
and
stos
lea
insl
jbe
repz
fwait
enter
lock
jmp
repz
insb
aad
fsubrl
inc
dec
pop
lea
or
stc
xor
cs
inc
test
cmp
hlt
push
lret
popf
in
pop
lahf
xor
lahf
jno
add
in
dec
hlt
loopnew
mov
mov
add
insl
iret
mov
adc
in
leave
popa
xor
cmp
and
aaa
mov
push
ds
divb
je
jmp
push
bound
movsl
cmc
shlb
and
mov
fwait
sub
fsubs
mov
xor
fadds
xchg
dec
mov
xchg
jae
fwait
cmpsl
lret
sub
adc
push
mov
rep
mov
or
cmp
ljmp
lea
mov
jns
or
data16
shrl
mov
xor
jmp
push
flds
mov
testb
xor
sub
jnp
outsl
pop
out
js
rorl
imul
dec
hlt
iret
data16
leave
xchg
stos
adc
ja
push
jns
push
jne
mov
mov
mov
fnstsw
fnstsw
jo
inc
jo
adc
daa
dec
aam
fs
stc
clc
pusha
jp
int3
jbe
xchg
push
push
scas
jp
icebp
ss
cs
mov
mov
pop
mov
cmp
mov
mov
fs
adcl
insb
mov
jl
and
jmp
and
cmpsl
mov
fnstcw
sbb
mov
xchg
pop
jns
mov
add
aam
repnz
pop
sahf
jns
pop
xor
xchg
cmpsb
addl
js
imul
pushf
add
test
push
sbb
jmp
inc
out
cmp
jp
cmpsl
sub
jle
mov
in
inc
jnp
pop
xor
add
xchg
in
nop
mov
mov
ja
lds
incb
mov
push
int3
test
fldcw
mov
out
cld
test
xlat
fadds
pop
cs
mov
mov
xor
int
inc
das
sahf
inc
or
mov
mov
adc
dec
rolb
sub
mov
adc
iret
xor
dec
into
movb
fisubrl
andb
mov
cmp
arpl
je
enter
hlt
ret
mov
test
ret
adc
dec
aaa
or
out
adc
xchg
cs
xor
pop
shlb
sub
and
xchg
ds
das
loop
rolb
repz
inc
les
and
ljmp
out
pop
mov
lock
sti
mov
inc
adc
add
or
sub
jle
and
outsb
cmp
mov
outsb
popa
inc
jge
or
cli
fdiv
or
xchg
nop
sbb
lahf
xor
push
mov
enter
pop
out
scas
or
cmp
stos
in
scas
ror
lock
insb
cwtl
cmc
dec
jnp
cs
into
sti
stc
jge
inc
adcb
popf
test
cmpb
xlat
dec
leave
push
pop
xor
or
jp
mov
jnp
lock
mov
mov
add
insl
xchg
in
sbb
or
shlb
mov
out
sbb
inc
lds
addb
add
hlt
lea
iret
shrl
push
mov
or
scas
mov
arpl
enter
xor
sub
sbb
mov
ds
or
test
into
cmp
sub
push
aaa
and
sahf
lea
mov
movsb
add
or
out
xchg
ss
leave
enter
and
mov
adc
aad
lret
lock
or
pop
xchg
adc
pop
add
mov
dec
shl
into
push
mov
ljmp
hlt
or
shll
scas
sub
cmpsb
xchg
dec
test
add
or
mov
rolb
mov
adc
mov
arpl
mov
inc
std
push
icebp
popa
dec
dec
bound
jo
add
mov
pop
pop
fisttps
xor
mov
pop
out
outsl
cltd
lret
test
xchg
cmp
mov
xchg
mov
stc
sub
dec
fildl
sbb
sahf
inc
insb
loop
andl
pop
cmpsl
add
faddl
test
shrb
je
cmp
inc
aad
sbb
sbb
mov
adc
orb
lret
jno
sub
lods
and
idivb
bound
jge
inc
nop
lds
add
popf
popf
mov
add
push
cltd
xlat
mov
sar
dec
mov
or
pop
leave
mov
dec
in
cmp
mov
jmp
out
outsb
xor
sbb
adc
inc
xchg
mov
push
cmp
pop
add
test
lret
daa
jae
sbb
jnp
cmp
imull
out
push
clc
cmp
popf
xchg
xor
hlt
xor
arpl
out
fsts
or
fisubl
push
mov
adc
test
jmp
insb
adc
fnstsw
mov
fsubs
mov
sub
cs
lods
jbe
xor
xchg
cmpsl
in
rcrl
xor
xchg
cmc
ret
arpl
daa
push
gs
cld
dec
cmpsb
pop
mov
rorl
ret
insb
out
idivb
fs
jmp
adc
pop
ljmp
sbb
push
mov
jg
push
lret
push
test
lea
adc
ss
mov
imul
mov
pop
sbb
pop
add
cli
mov
ds
and
push
lcall
scas
arpl
loopne
mov
stc
loopne
sbb
lret
pop
in
dec
inc
mov
and
pop
movb
pusha
int
imul
in
push
sar
das
lret
push
push
or
jo
add
cmpl
movl
mov
mov
jmp
mov
je
push
push
pushl
pushl
pushl
call
mov
mov
sub
xor
xor
xor
sub
andl
add
mov
adc
mov
movl
inc
movl
or
movl
cmpl
mov
movl
mov
jmp
movl
mov
jl
pushl
pushl
push
push
call
xor
movzbl
adc
mov
neg
adcl
sub
cmpl
mov
movl
movzwl
jmp
mov
jl
call
andl
adc
or
neg
sub
add
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
add
insb
shrb
sbb
jbe
push
push
cld
and
xor
adc
in
push
es
pop
mov
gs
xor
push
mov
push
mov
shll
icebp
stc
fidivs
in
pop
mov
lock
and
lock
xchg
pop
jl
and
dec
dec
fistl
mov
adc
loope
lahf
and
mov
clc
outsl
sbb
mov
scas
roll
adc
xchg
adc
pop
test
enter
mov
daa
sbb
imul
int3
jae
add
pop
fsubl
enter
mov
dec
jmp
dec
mov
lcall
popf
jb
ret
mov
inc
movsl
gs
clc
stos
lret
mov
pop
cmpb
shll
imul
adc
and
scas
iret
adc
sbb
jb
sbbl
or
inc
cwtl
scas
ss
or
ds
jp
clc
jmp
mov
popa
pop
and
loop
jne
aas
out
cbtw
jae
fcomps
cmc
mov
bound
cmp
pushf
ljmp
rorl
inc
xchg
push
mov
js
cld
mov
adc
sub
push
and
pusha
jg
mov
jp
dec
mov
std
gs
sub
xchg
jbe
rcr
sub
ss
cld
out
push
mov
adc
cmp
bound
popa
lds
stos
fistps
jle
push
ds
xor
fsubs
lock
int
jno
sub
leave
cmp
sbb
jne
sub
mov
out
xlat
add
int3
shrb
inc
enter
orl
mov
jb
mov
sub
inc
xor
push
lds
fcomip
loopne
jbe
mov
in
repnz
inc
and
mov
int3
data16
or
movsl
insb
div
cwtl
cltd
or
xor
and
cwtl
cmp
test
sbb
ret
xchg
int
dec
or
mov
mov
push
repz
sbb
mov
adc
cmpsl
mov
insl
or
dec
test
pop
lret
mov
lods
jp
mov
pop
cmp
and
dec
pop
jg
ret
sahf
pop
inc
gs
sub
les
ret
out
enter
shrb
mov
lods
pusha
das
jno
movsb
out
pop
pop
popf
cwtl
jae
dec
loop
jae
mov
clc
imul
out
and
loopne
hlt
xchg
ss
dec
cmp
fnstcw
lods
add
mov
rclb
and
xchg
sub
dec
stos
mov
mov
mov
cmp
pop
ret
push
add
push
cltd
divb
pusha
add
insl
test
pop
adc
std
fsts
xchg
sbb
mov
int
jp
xchg
mov
push
jnp
mov
mov
loope
in
shr
arpl
xor
mov
mov
rclb
jbe
mov
jnp
sub
addr16
into
sbb
lds
or
icebp
fs
cmp
and
fisttpl
xor
xor
cmp
xlat
loop
pop
mov
sub
add
mov
int
mov
and
pushf
push
in
js
sbb
pop
fwait
and
ss
adc
call
xor
sbb
mov
pop
divl
sbb
xchg
sub
andb
push
das
jge
mov
push
mov
dec
xchg
jmp
cltd
jae
ljmp
jmp
mov
hlt
mov
adc
shl
adc
and
sbb
adc
pusha
inc
pop
add
add
mov
lea
ret
rclb
inc
fistpll
std
sbb
ds
mov
push
andb
aad
mov
push
mov
adcl
jg
push
cwtl
lea
mov
stos
lds
add
mov
pop
fs
icebp
pop
xor
add
pop
repnz
mov
sbb
jle
pop
ja
repz
ss
test
aam
xchg
int3
mov
stos
mov
push
mov
pop
mov
inc
je
lods
aaa
mov
hlt
dec
add
sar
or
and
std
nop
push
adc
stos
push
cmp
xchg
push
mov
and
xchg
arpl
in
imul
imul
jmp
pop
push
pop
cmp
lcall
jecxz
sub
enter
pop
jns
stos
scas
pop
jae
fidivrl
sbb
xchg
sbb
pop
inc
dec
insl
and
cld
xor
not
call
movsl
pop
inc
xor
les
xchg
adc
jle
movsb
and
sbb
inc
mov
sbb
jle
in
jbe
stos
pop
in
mov
and
lods
into
cli
lahf
bnd
lahf
stc
loop
or
test
mov
neg
mov
adc
call
mov
sbb
test
jl
xchg
push
dec
fwait
popf
mov
imul
sbb
mov
bound
inc
and
popf
xor
fsubs
push
and
jb
clc
mov
jle
imul
jnp
lea
jecxz
cmp
mov
xchg
jecxz
lock
jg
sub
or
inc
mov
xorb
dec
jmp
out
lahf
or
ljmp
ja
xchg
push
jg
sbb
inc
adc
dec
cwtl
jmp
fs
into
frstor
mov
mov
daa
iret
lods
pop
imul
repnz
sbb
or
imul
mov
adc
popf
neg
xchg
sbb
sbb
leave
jbe
lret
xchg
in
je
lret
fxch
add
sbb
dec
mov
ja
and
push
xlat
adc
sbb
jae
lret
sub
xchg
js
sbbb
jle
call
sub
xorl
aad
sbb
addr16
mov
sbb
jecxz
rcr
movsl
inc
xlat
inc
repz
clc
xchg
jmp
cmpl
int3
cmp
rcr
loope
mov
js
mov
loope
out
jmp
lds
and
cmp
stos
loopne
ss
jmp
jb
sti
roll
push
xor
adc
push
lret
lahf
push
jno
dec
push
adc
iret
push
shrl
mov
fldl
mov
sbb
inc
decl
mov
lret
filds
mov
test
rol
outsb
loop
bound
or
pop
orb
or
daa
lock
mov
jo
xor
mov
pop
mov
inc
lds
lock
sub
cmp
shrb
mov
dec
add
enter
adc
bound
mov
ret
adc
movsl
addl
dec
adc
pop
sbb
inc
xchg
or
adc
jae
cmp
add
out
test
cmp
andb
push
fldt
adc
arpl
push
loope
xor
cli
cmpb
push
sbb
mov
and
out
adc
push
outsl
test
jae
in
lret
xorl
rcll
dec
xchg
roll
add
xor
repz
dec
mov
add
inc
pop
xlat
popa
popa
xor
mov
arpl
bound
outsb
nop
lcall
adc
stc
pop
cli
jp
enter
add
or
ficompl
decl
jne
hlt
and
add
pop
cmp
cltd
push
xor
rolb
sbbl
idivl
mov
push
and
pop
mov
xor
inc
inc
pop
xor
add
cmp
dec
sbb
adc
arpl
aas
popa
adc
add
inc
xor
sahf
out
mov
stc
xchg
dec
xlat
pop
ret
aas
pop
or
daa
mov
inc
pop
aad
sbb
bound
fbstp
jmp
mov
fiaddl
push
and
push
xor
adc
and
adc
iret
ljmp
xchg
or
mov
jge
adc
sbb
mov
adcb
sar
pop
ja
fstpt
in
lcall
add
lret
mov
and
test
xor
sub
push
stos
andl
out
mov
outsb
outsl
mov
xor
sub
lods
mov
test
in
lret
push
pop
cmp
pop
pop
add
int3
sti
jmp
and
push
rcl
cmp
pop
jns
mov
mov
xlat
push
add
push
test
cmp
xchg
clc
add
mov
mov
lret
rcll
xchg
sub
mov
sub
cmp
mov
jecxz
push
and
inc
dec
xor
mov
jl
pop
mov
mov
mov
data16
in
add
pop
mov
jb
cmp
call
fsubp
mov
jns
es
push
insb
jno
daa
sub
push
dec
adc
fiadds
jae
das
xor
sub
or
sub
cmpsb
scas
aas
scas
shlb
fwait
mov
jbe
mov
loope
scas
pop
and
push
fstpt
in
mov
ja
int3
dec
ss
push
dec
add
gs
jp
pop
xor
mov
gs
imul
push
int3
xchg
dec
jge
repnz
outsl
add
aam
cmc
inc
fwait
test
rorl
movsl
stos
push
rorl
xlat
divl
shlb
lret
pop
mov
jbe
sub
inc
pop
lds
insl
lods
inc
mov
sbb
dec
jecxz
or
in
mov
add
aam
popa
push
lea
cld
fsubrl
sbb
das
dec
ror
mov
movsl
iret
enter
pusha
or
cmpb
or
sbb
mov
cmpsl
outsb
mov
dec
sbb
inc
push
inc
add
mov
or
xchg
les
xchg
aaa
lcall
jg
push
ljmp
cs
or
clc
inc
inc
stc
adc
dec
test
fadds
int3
sbb
fucomip
xchg
sbb
fsubs
fldl
mov
and
mov
sub
adcb
scas
or
and
in
sbb
aam
stos
imul
jbe
push
xor
es
inc
orb
mov
add
and
dec
das
enter
cmp
mov
movsb
inc
leave
adc
arpl
and
cmp
push
data16
pop
rcrb
pop
add
scas
jle
ret
sbb
movsb
das
push
subl
loopne
adc
push
push
add
jg
pop
and
pop
lock
lret
push
ljmp
sbb
cli
sbb
lret
jp
daa
sarl
outsb
gs
dec
jmp
mov
pop
sbb
movsl
cs
push
adc
scas
outsb
adc
cld
dec
lret
out
mov
add
lahf
imul
pop
mov
mov
sub
jae
mov
or
xlat
aaa
jnp
pop
add
js
add
lahf
std
fldenv
lods
push
mov
fdivs
sub
inc
sti
fistpl
cli
mov
xchg
out
es
xchg
std
adc
mov
fcompl
inc
cwtl
iret
testb
jg
hlt
push
push
lret
dec
pop
lcall
and
and
sub
dec
xor
gs
jns
xor
add
cwtl
inc
cmpsb
dec
inc
dec
push
loopne
jne
fildl
jbe
loop
into
mov
addb
cs
sub
pop
int
cmp
adc
mov
pop
pop
dec
sbb
push
pop
out
pusha
mov
xorl
push
into
cmp
xchg
cld
or
imul
push
adc
adc
dec
cs
outsl
jae
repnz
or
jp
xchg
xchg
cmp
pop
lock
pop
dec
add
jmp
inc
inc
insb
cli
xor
pop
and
xchg
jb
jns
mov
sti
pop
mov
jg
imul
fists
adc
mov
dec
call
ret
mov
push
leave
mov
dec
adc
fisttps
push
call
js
in
push
cmpsl
cmp
xlat
or
andb
sub
bound
or
cmc
insb
js
dec
xor
pop
aad
or
icebp
adc
nop
mov
and
push
xor
call
hlt
out
lods
and
call
mov
out
std
adc
mov
sahf
cmp
and
or
jge
push
mov
mov
or
cwtl
ljmp
xchg
insb
xor
dec
mov
and
sub
ss
or
or
mov
int3
add
cltd
in
ja
mov
inc
pop
sbb
pop
mov
mov
cli
mov
mov
xor
fistps
and
leave
out
in
fisttps
andb
mov
leave
push
in
sar
mov
fwait
gs
mov
ret
sbb
punpcklwd
out
dec
lcall
dec
mov
mov
adc
xor
jl
pop
push
pop
lret
inc
popf
lods
orb
adc
ret
fsubs
cmp
jo
mov
in
mov
pop
pop
inc
lock
mov
rclb
lret
outsb
xchg
adc
mov
push
inc
movsb
and
mov
inc
dec
loopne
daa
jnp
js
xor
xor
rcrb
push
into
jae
lea
rcl
sti
hlt
cmp
sub
cmc
call
neg
cmp
aaa
and
dec
adc
aas
sub
js
negl
sahf
fcomps
dec
pop
jnp
test
in
in
fcmovnbe
add
bound
push
int
pop
sar
fsubs
mov
dec
mov
xchg
loop
xchg
jmp
pop
lods
push
in
cmp
fldcw
lret
jb
add
es
sub
std
out
jno
push
sub
push
dec
xchg
xchg
out
stos
enter
and
adc
mov
push
loope
push
sub
mov
and
loop
jns
xchg
repnz
push
xor
aad
stc
test
std
push
lretw
cld
lahf
sbb
jnp
mov
xchg
loopne
aam
leave
sbb
out
jmp
lea
jl
add
dec
add
stc
in
and
imul
cmp
jns
nop
xchg
imul
add
mov
inc
in
les
fidivs
mov
iret
hlt
int
sub
pusha
aaa
xchg
adc
jle
adc
and
jle
in
iret
repz
inc
cmc
xchg
add
fwait
adc
cmpl
lods
mov
sbbl
jae
dec
add
mov
test
test
bound
adc
jg
pop
nop
inc
cmpsb
fsubr
push
fwait
xchg
sub
ret
divl
jecxz
or
daa
pusha
movsb
pop
nop
pop
out
test
test
cmpb
mov
pop
dec
jecxz
jle
mov
enter
cmpsb
out
out
iret
div
je
xor
cltd
nop
xor
mov
ss
decb
mov
test
cmc
pop
pushl
dec
js
roll
push
add
testl
sti
sbb
pusha
fildl
fdivs
mov
jo
femms
mov
lock
imul
jne
mov
push
pushf
push
xchg
dec
mov
dec
aad
ss
xchg
jne
pop
pop
cli
enter
push
mov
push
xor
shlb
sub
outsl
pop
push
cli
mov
sbb
xchg
push
ds
imul
in
dec
dec
push
les
dec
test
rcl
sbb
fdivs
sbb
xor
test
xchg
stos
int
jno
shrb
push
repz
in
in
jbe
rcrl
cmp
lock
mov
push
add
cmpsl
cwtl
rcl
fdivrp
dec
in
outsb
adc
icebp
or
testl
stc
and
dec
sbb
lahf
sub
mov
js
leave
sbb
xchg
jl
sbb
pusha
push
cmpb
and
fwait
lret
dec
push
add
sti
lods
jmp
push
inc
data16
and
mov
push
shl
xor
addr16
out
adc
in
jns
test
sbbb
push
push
mov
stos
fbstp
shrb
out
dec
xor
add
jmp
stos
xchg
mov
int3
mov
mov
mov
pop
mov
popa
jnp
dec
dec
mov
popa
dec
sbb
pop
lret
cltd
fiadds
adc
cmp
rcrl
and
push
outsl
idivb
leave
mov
adc
jle
push
push
sbb
subb
pop
jmp
jb
scas
xor
fstl
addr16
inc
popf
mov
mov
pushf
jmp
or
fdiv
test
mov
mov
iret
and
clc
out
mov
dec
mov
cmc
add
lea
add
sub
sbb
xlat
pushf
pop
mov
push
cmpb
jns
int
push
xchg
jno
inc
out
rolb
add
sahf
loopew
out
sub
adc
mov
enter
xor
inc
mov
ss
adc
mov
in
or
cmp
mov
sbb
jp
cmc
test
loope
pop
outsb
mov
add
arpl
movsb
inc
in
jo
xor
or
mov
inc
dec
icebp
adc
add
shlb
mov
clc
push
cmp
pop
aas
testb
dec
sub
insb
push
sub
mov
xchg
mov
call
push
or
inc
cmpsl
addb
and
outsl
add
cltd
lcall
enter
adc
jmp
out
into
sub
arpl
and
sbb
lcall
hlt
aam
cli
sub
jns
das
outsl
inc
aad
xchg
fmul
push
pop
mov
mov
jb
dec
adc
sbbl
mov
xor
xchg
mov
pop
stos
sbb
cmp
sbb
jge
in
or
inc
sti
and
out
cmc
or
push
adc
xor
sbb
iret
adc
add
sub
push
sub
or
popa
or
insl
jb
pop
pop
jp
dec
push
mov
mov
stos
es
jle
jae
orb
xor
or
aad
jl
jns
movsl
nop
inc
std
enter
mov
in
popf
adc
lea
outsb
sub
and
xor
mov
adc
jne
and
ja
mov
out
subl
mov
push
inc
hlt
add
add
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sbbl
push
push
mov
cmpl
mov
mov
movzbl
jmp
movzwl
je
pushl
call
and
or
xor
add
xor
mov
mov
xor
mov
orl
add
adc
mov
shrd
cmpl
movl
movl
not
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
adc
addl
mov
mov
sub
xor
xor
xor
and
adc
or
cmpl
not
movl
movl
movl
jmp
mov
ja
push
push
call
negl
mov
mov
xor
or
sub
adc
mov
xor
movzwl
add
shr
adcl
mov
mov
mov
sbb
xor
cmpl
movl
mov
jmp
mov
jle
push
pushl
push
push
call
mov
sub
mov
and
movzbl
sub
not
xor
or
xorl
mov
add
mov
not
shl
xorl
mov
shrd
sub
xor
shr
cmpl
movzwl
not
mov
movzwl
jmp
movl
movl
jbe
push
push
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
jae
pushl
push
pushl
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
mov
mov
mov
jmp
movl
not
jg
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jb
pushl
push
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jg
push
pushl
pushl
pushl
push
pushl
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
mov
movl
mov
jmp
movl
movl
jle
push
push
call
dec
sbb
xor
xorl
sub
addl
xor
shld
movl
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
cmp
movl
jne
cmp
movl
je
mov
subl
mov
sbb
push
pop
cmpl
mov
movl
jmp
not
jae
push
pushl
pushl
push
call
mov
or
mov
adcl
xor
xor
xor
mov
and
xor
or
add
movzwl
adc
xor
decl
shl
mov
xor
shr
incl
or
cmpl
mov
movzwl
movl
mov
jmp
movl
movl
jg
pushl
pushl
push
push
pushl
call
sbb
or
xor
sbb
and
adcl
movzbl
add
mov
mov
mov
adcl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jbe
push
push
call
sbbl
xor
neg
add
inc
adc
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
cmpl
mov
movl
jmp
movl
mov
jae
pushl
pushl
push
pushl
call
or
or
xor
pushl
pop
adc
mov
add
xor
adc
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
movl
jne
adcl
xor
jmp
xor
add
mov
sub
sub
mov
add
movl
mov
mov
and
movl
cmpl
movl
mov
mov
jmp
mov
jg
pushl
call
or
mov
xor
sbb
adc
xor
xor
mov
adc
and
not
and
movl
movl
movl
cmpl
not
mov
jmp
movl
not
ja
pushl
pushl
pushl
push
call
mov
mov
xor
or
sub
adc
movl
sbb
cmpl
mov
mov
movl
mov
jmp
mov
jge
push
pushl
call
mov
mov
add
sub
add
add
movl
movl
xorl
push
movzwl
sbb
movl
or
mov
mov
subl
push
sbbl
push
andl
push
andl
call
mov
mov
push
adcl
push
push
xorl
push
adcl
call
mov
mov
sub
sub
mov
sbb
mov
add
movl
mov
movl
adc
mov
addl
xor
mov
subl
xor
mov
cmpl
mov
mov
movl
jmp
mov
movl
je
push
push
push
pushl
push
push
call
adc
movzwl
and
adc
and
xor
xor
xor
xor
sub
movl
cmpl
mov
movl
movzbl
jmp
movl
mov
jle
pushl
push
push
call
add
sub
xorl
incl
neg
or
movl
cmpl
mov
notl
not
jmp
mov
jg
push
push
push
call
mov
sub
mov
xor
movzwl
sub
sbbl
and
movzbl
sub
movl
cmpl
mov
movl
mov
jmp
movl
jle
push
push
push
push
push
pushl
push
call
adc
xorl
xor
add
adc
sbb
mov
sbb
mov
add
xor
movl
cmpl
movl
movzwl
movl
jmp
mov
movl
jbe
push
pushl
pushl
call
adcl
sbb
xor
add
xor
sbbl
adcl
sub
sub
movl
adc
push
add
movl
mov
mov
add
mov
mov
incl
push
sbbl
push
subl
push
adcl
call
cmpl
movzwl
mov
jmp
not
movzwl
ja
push
call
xor
or
xor
sbb
xor
adcl
mov
mov
xorl
push
push
adcl
push
push
call
cmpl
mov
movl
jmp
mov
movl
jl
pushl
push
call
subl
adcl
xor
mov
mov
sub
and
movzwl
add
or
and
mov
orl
mov
xor
orl
mov
sbbl
xor
mov
xor
sbbl
xor
cmp
jne
cmp
jne
movl
mov
adc
movl
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
push
pushl
pushl
push
call
adc
xor
xor
mov
sbb
xorl
or
movl
xorl
mov
adcl
imul
add
xor
mov
div
movzbl
and
pushl
or
xor
sbbl
and
not
xor
inc
pushl
mov
movzwl
adc
mov
push
notl
pop
xorl
div
mov
andl
sub
add
xorl
imul
adcl
and
xor
pushl
pushl
pushl
pushl
andl
pushl
call
movl
sub
movl
cmpl
movzbl
movl
jmp
movl
jbe
pushl
push
push
pushl
call
xor
sub
sub
add
adcl
mov
xor
or
mov
or
mov
adcl
sub
cmpl
movzbl
mov
movl
jmp
movl
jle
push
pushl
push
push
call
add
and
add
adc
dec
xor
add
add
dec
mov
andl
xor
adcl
xor
movl
div
imul
addl
xor
sbbl
pushl
sbbl
pushl
sbbl
call
sub
movl
cmpl
mov
movl
jmp
mov
ja
pushl
call
sub
and
add
sbbl
mov
sbb
andl
mov
movl
movl
mov
mov
sub
or
mov
mov
mov
adcl
mov
push
push
adcl
xor
xorl
xor
push
push
notl
call
orl
add
mov
movl
adc
mov
sbbl
movl
andl
movl
movl
addl
movl
dec
jne
cmpl
movl
movl
movzwl
jmp
mov
jle
push
pushl
call
sub
sbb
adc
not
sbb
sbb
add
movl
xor
mov
mov
subl
movl
mov
call
cmpl
movl
mov
movzwl
jmp
not
movl
jb
pushl
push
call
adc
xor
mov
add
mov
xor
lea
mov
lea
xor
add
mov
adc
mov
subl
mov
xor
or
adc
mov
mov
cmpl
mov
mov
mov
mov
jmp
mov
jae
pushl
call
xor
xor
mov
sub
xor
orl
xorl
mov
xor
mov
xor
mov
xor
and
xor
shl
subl
shr
or
sbb
mov
cmpl
mov
mov
movl
jmp
mov
mov
jl
push
call
adcl
sbb
adc
subl
dec
subl
mov
mov
mov
mov
mov
sub
sub
mov
add
mov
mov
shrd
shr
mov
add
mov
mov
xorl
xor
addl
xor
or
mov
subl
push
pushl
addl
lea
andl
push
shl
subl
call
lea
push
andl
mov
movl
mov
sbbl
lea
xorl
push
mov
adcl
lea
mov
orl
mov
sbbl
mov
push
sbbl
call
movl
push
orl
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
addl
push
sub
push
adc
movl
movl
mov
adc
movl
mov
movzwl
xor
mov
subl
xor
div
or
imul
cmpl
movl
mov
movl
jmp
movl
mov
jbe
push
call
movl
orl
mov
or
xor
or
adc
and
add
mov
andl
xor
and
xorl
mov
xorl
xor
div
cmpl
mov
mov
mov
jmp
mov
movzwl
jb
push
pushl
push
call
mov
mov
sub
and
mov
mov
sub
xor
xor
xor
add
sub
imul
adc
mov
mov
adc
mov
mov
adc
and
sub
mov
movl
add
movl
movl
or
mov
andl
add
neg
xor
xor
sbbl
imul
mov
or
mov
mov
and
xor
add
mov
or
sub
adc
mov
sbb
movl
sbb
movl
notl
movl
add
movl
and
mov
movzwl
xor
imul
adc
mov
cmpl
movl
movzwl
movl
jmp
mov
jae
push
push
pushl
call
mov
sbb
mov
sub
andl
and
mov
sbb
mov
imul
imul
neg
mov
xorl
and
dec
or
xor
mov
xor
mov
mov
xorl
lea
mov
mov
sbb
mov
movl
movl
cmpl
movl
movl
mov
movl
jmp
mov
mov
jle
pushl
call
xorl
sbb
dec
subl
mov
mov
or
and
adc
movl
cmpl
mov
movzwl
mov
movl
jmp
movzbl
notl
jge
pushl
call
and
xor
movzwl
adc
and
xor
sbb
mov
xor
mov
or
or
add
or
mov
or
add
or
xor
mov
movl
cmpl
movl
mov
movzbl
jmp
movl
je
push
pushl
pushl
push
call
not
mov
mov
adc
sub
mov
mov
and
or
movl
cmpl
movl
notl
not
mov
jmp
mov
mov
jae
pushl
pushl
push
pushl
pushl
pushl
call
neg
dec
movzbl
and
dec
sbbl
sbb
sbb
cmpl
movl
mov
mov
jmp
not
jge
pushl
push
pushl
call
mov
adc
or
xor
xor
xor
mov
xor
mov
add
adcl
movl
mov
add
mov
addl
sub
mov
adcl
lea
sbbl
or
cmpl
movzbl
mov
jmp
movl
jl
push
push
pushl
call
and
adc
add
and
adc
mov
add
mov
and
sub
mov
xor
mov
mov
xor
movl
cmpl
mov
mov
jmp
mov
movzwl
jae
pushl
push
push
push
call
mov
or
mov
orl
orl
sbb
and
adc
movl
mov
add
imul
mov
adc
mov
adcl
imul
orl
xor
xor
or
or
mov
div
cmpl
mov
mov
movl
jmp
movl
movl
jle
pushl
pushl
push
push
pushl
call
adc
or
add
xor
add
neg
xor
xor
and
sub
or
mov
addl
movl
sbb
movl
and
movl
mov
mov
sub
mov
cmpl
mov
movl
jmp
movl
jge
call
adc
or
mov
adc
sbb
sub
mov
adcl
xor
addl
div
imul
cmpl
mov
mov
mov
movl
jmp
movl
movl
jne
pushl
push
push
pushl
push
push
pushl
call
orl
xorl
xor
and
orl
orl
inc
add
mov
subl
xor
movzbl
sbb
mov
xor
mov
adcl
div
add
xor
movzbl
adc
mov
movl
movl
movl
cmpl
mov
mov
jmp
mov
movl
jbe
push
push
pushl
call
add
sbb
movzwl
sbb
adcl
movzwl
sub
or
movl
mov
and
mov
andl
sub
shr
sub
mov
addl
imul
cmpl
movl
movl
movl
jmp
movl
jl
pushl
call
sbbl
xorl
xor
orl
sbb
mov
and
cmpl
movl
movl
jmp
mov
jle
pushl
push
push
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
sub
mov
neg
movl
xor
movl
xor
mov
or
xor
mov
or
movl
sub
dec
mov
movl
mov
xor
add
sub
imul
movl
movl
movl
add
movl
movl
movl
mov
mov
or
add
orl
mov
sub
incl
mov
movl
imul
imul
andl
mov
orl
or
mov
lea
orl
push
xorl
call
sub
mov
mov
imul
add
cmpl
movl
movl
mov
jmp
movl
jb
pushl
push
call
sbb
mov
or
xorl
addl
xor
add
adc
addl
and
mov
sub
mov
sub
or
xor
mov
xorl
div
cmpl
movl
mov
jmp
not
jl
push
push
push
push
call
xor
movzbl
and
mov
and
or
xor
add
add
mov
adc
movl
movl
movl
movl
mov
xor
movl
sbb
movl
cmpl
mov
movl
movl
jmp
mov
jbe
pushl
push
call
sbb
sbb
sub
adc
adc
movl
or
movl
sbb
movl
cmpl
movl
mov
mov
mov
jmp
movl
jge
push
push
call
andl
and
adc
mov
mov
and
sub
mov
or
movl
cmpl
mov
mov
jmp
mov
mov
jle
pushl
call
adc
mov
and
mov
xor
mov
sub
movzwl
and
mov
adc
movl
movl
and
mov
xorl
mov
adc
mov
and
and
sbbl
sub
sub
imul
mov
xor
lea
xor
mov
orl
mov
or
mov
mov
xor
add
add
mov
cmpl
movl
mov
jmp
movl
movl
jbe
push
push
pushl
call
or
sub
adc
xor
dec
movl
or
or
add
lea
or
and
mov
add
sub
add
add
mov
mov
xor
or
sub
xor
movl
mov
sbb
mov
movl
movl
adc
movl
and
mov
orl
mov
subl
mov
addl
xor
orl
xor
adcl
mov
notl
call
add
mov
sub
mov
mov
andl
mov
xor
adcl
xor
mov
orl
call
subl
or
or
adcl
mov
mov
adcl
xor
adcl
xor
sbbl
mov
call
mov
mov
mov
cmpl
movzbl
mov
mov
movl
jmp
movl
jle
push
push
pushl
call
sbbl
notl
xorl
neg
add
mov
xor
orl
xor
andl
mov
movzbl
adc
mov
mov
mov
xor
mov
adcl
mov
subl
mov
sbbl
call
sub
mov
or
mov
orl
or
subl
push
push
subl
push
xorl
push
call
mov
cmp
movl
jne
mov
cmpl
not
movzwl
mov
jmp
movl
ja
call
mov
sbb
sbb
xorl
movzwl
sbb
and
xor
mov
xor
orl
xor
orl
mov
xorl
call
cmpl
mov
movl
jmp
movl
jg
pushl
push
push
call
mov
add
and
or
or
mov
mov
sub
or
xor
mov
sub
mov
mov
adc
mov
xor
andl
xor
mov
subl
call
or
cmpl
movl
movl
jmp
mov
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
pushl
push
pushl
call
adcl
orl
adc
sbbl
orl
addl
notl
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
movzbl
sub
push
mov
or
movl
jne
or
mov
cmpl
notl
mov
mov
jmp
mov
jae
pushl
call
or
adc
xorl
movzbl
or
mov
sbbl
sub
mov
xor
incl
div
xor
or
sub
mov
mov
sub
mov
orl
div
mov
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
cmpl
mov
mov
movl
mov
jmp
movl
movzbl
jne
pushl
push
call
sbb
add
mov
xor
add
sub
and
inc
add
add
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
orl
shld
shl
ret
cmpl
mov
movl
jmp
movl
movl
jge
pushl
push
call
sub
xor
sbbl
movzwl
adc
mov
xor
and
shl
ret
xor
xor
ret
