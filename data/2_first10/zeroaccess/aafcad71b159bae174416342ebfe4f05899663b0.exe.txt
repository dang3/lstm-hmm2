push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
jne
addl
push
push
call
test
jne
addl
push
sbbl
push
adcl
push
call
xorl
test
movl
jne
push
andl
push
adcl
push
sbbl
call
sbbl
test
jne
addl
push
push
call
orl
test
jne
andl
push
subl
push
call
xorl
test
movl
je
sbbl
xor
movl
jmp
movl
dec
mov
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
decl
mov
movl
not
lea
sbbl
mov
mov
add
mov
lea
inc
mov
adc
mov
and
mov
mov
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
movzwl
add
xor
movzbl
xor
mov
subl
add
movl
mov
mov
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
adc
add
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
add
xor
movzwl
or
add
adcl
mov
and
mov
mov
orl
mov
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
mov
neg
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
sbb
mov
movzbl
add
mov
mov
xor
mov
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
sub
mov
xor
subl
add
movl
jmp
mov
mov
xor
andl
lea
push
mov
orl
xor
orl
lea
push
mov
addl
pushl
subl
call
and
mov
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
lea
sub
mov
mov
movl
xor
addl
xor
add
sbbl
mov
adcl
xor
lea
movl
mov
cmp
jbe
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
mov
mov
sub
movl
mov
mov
sbb
mov
push
adc
mov
xor
mov
andl
push
or
mov
sbbl
add
movl
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sub
mov
xorl
mov
jmp
inc
stos
pop
mov
mov
inc
addr16
jp
jp
add
jp
sub
cmp
popa
cmp
ret
push
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
add
sbb
daa
les
push
in
rcrb
push
dec
fcmovbe
push
and
loop
hlt
std
or
dec
nop
lahf
dec
lea
leave
and
leave
lret
sti
jnp
leave
mov
push
inc
or
lret
out
xchg
xchg
mov
cltd
sub
fcompl
mov
int3
dec
ficoml
sti
inc
out
inc
pop
in
jmp
shl
pop
fsubl
xchg
addl
mov
iret
adc
ds
sbb
adc
push
fdivl
push
jbe
lahf
cmp
shl
and
or
sbb
loope
dec
test
xchg
pop
es
in
fstl
cltd
pop
cmpsl
pop
dec
shrb
lahf
add
loopw
in
jnp
in
xchg
inc
mov
and
cmp
inc
mov
pop
push
adc
rolb
repz
outsb
xchg
icebp
or
xchg
insb
push
mov
push
push
daa
push
ret
daa
shl
sbb
add
pop
loopne
jae
popf
aam
std
sbb
dec
jno
cltd
jg
shlb
mov
cmpsb
and
mov
leave
fwait
sbb
pop
fs
pop
movsl
push
cmp
dec
add
ret
xor
cmpsb
pop
cld
mov
xchg
pop
fsubrp
add
and
jns
and
dec
adc
pcmpeqw
mov
std
add
adcl
scas
sahf
xor
and
adc
dec
outsb
mov
inc
out
aaa
lret
jle
adc
push
test
stos
push
test
cmpsb
add
adc
dec
jl
xor
lahf
push
fistpll
mov
inc
ret
cmp
psrlq
mov
ret
jmp
jmp
fwait
les
pop
stos
push
jb
pop
leave
cmp
and
fidivrl
sub
cs
test
pop
pop
and
lods
es
jb
and
lahf
pop
push
sbb
fucomi
out
int
movzbl
js
jno
movsl
shlb
or
dec
cmpsl
in
adc
outsl
scas
mov
ret
fisttps
ret
mov
popa
xchg
stos
fcoms
adc
adc
mov
push
pop
pop
jne
pop
popa
xchg
pop
outsl
cmp
pushf
fistpl
xor
scas
out
loopne
ja
out
movsl
pop
lods
or
arpl
or
or
lds
xchg
add
or
and
sbb
imul
data16
adc
adc
arpl
mov
jno
lret
dec
dec
lds
lock
or
mov
adc
mov
sub
push
dec
sbb
xchg
stos
pop
iret
je
es
out
or
dec
stos
push
sub
add
lahf
mov
or
aas
push
test
mov
pop
aaa
mov
push
lds
test
push
inc
outsb
sbb
mov
dec
repnz
lret
aad
sub
mov
mov
lds
inc
push
in
cld
fcompl
inc
cmp
movsb
insl
ss
insb
and
pop
pop
dec
in
jecxz
rcrl
data16
ret
xchg
xchg
dec
enter
pop
shrl
icebp
mov
lods
in
inc
mov
scas
sbb
adc
xor
fcomps
lock
imul
in
outsl
mov
sub
adc
jl
mov
aas
sbb
ficoms
mov
dec
sahf
test
add
arpl
repnz
inc
and
dec
mov
fldl
jl
inc
inc
push
inc
pop
popa
fisttpll
fstps
jge
jnp
or
jno
stos
lea
sbb
in
pop
cld
pushf
ret
addps
pop
pop
cli
je
cmp
addb
out
out
lret
and
int
add
pop
pop
int
mov
loope
xchg
lds
outsb
or
cmp
or
dec
and
cmp
cmp
inc
cmpsl
iret
sub
cli
dec
sbb
mov
repz
shll
repz
call
pop
leave
add
cli
sub
jge
and
lret
or
push
mov
into
pushf
fwait
pop
dec
mov
in
leave
jnp
push
loopne
push
outsb
push
aad
mov
fs
or
sahf
scas
aad
pop
jnp
mov
push
dec
cmp
mov
arpl
out
outsb
fdivl
lods
pop
filds
movsl
push
call
jbe
push
stos
jb
pop
push
mov
inc
roll
push
mov
jns
and
std
xchg
jp
mov
ja
adc
and
ret
xchg
jbe
sarl
mov
cmp
repz
dec
or
daa
mov
jle
std
clc
call
or
incl
jecxz
mov
je
mov
ljmp
lret
jae
add
pushl
fildll
push
jge
fxch
mov
orb
loop
sbb
mov
mov
mov
and
and
cmp
inc
jmp
or
js
push
add
xor
dec
jne
incl
subl
cmp
cmp
inc
loope
insl
je
dec
inc
mov
or
pushf
fldl
push
mov
mov
scas
insl
cmp
fwait
xchg
shll
stos
aaa
lcall
in
repnz
stos
mov
int3
or
inc
into
push
fwait
lahf
movsl
movsl
dec
jp
push
pop
mov
ja
xchg
cmpsb
jl
jne
inc
adc
jp
rcr
out
jp
jne
div
gs
scas
stos
fadd
outsb
insb
cs
sti
pop
pop
cltd
push
mov
mov
repz
lret
rolb
test
andb
xor
pop
xchg
inc
fs
lods
test
mov
sub
push
cmpsb
int3
mov
push
repnz
or
mov
pop
outsb
scas
add
dec
and
roll
fmul
fsubrs
mov
cmpsl
xchg
ss
adc
clc
mov
stc
je
fsubr
fs
or
cmp
pop
or
xchg
aaa
cld
jge
xchg
rolb
xor
sbb
dec
std
lds
daa
aaa
lea
mov
orl
arpl
adc
shlb
fs
lock
xor
push
mov
js
inc
test
dec
out
adc
xchg
sbb
outsl
and
push
outsb
rcrl
in
loop
jb
sub
idivl
dec
adcb
sbb
add
or
mov
repz
cli
ljmp
dec
cmp
sbb
fstpl
add
mov
add
arpl
cmpsb
mov
ret
imul
push
inc
xchg
lcall
push
out
shlb
shrb
cmp
push
divb
inc
adcl
movsb
cmp
jp
shrl
les
rorb
pop
int
and
mov
cmp
inc
push
lods
xchg
inc
jae
push
dec
cmp
and
mov
sub
lods
mov
xchg
jb
adc
test
sbb
mov
pop
bound
aam
xchg
xor
or
and
std
outsb
adc
outsb
xchg
lret
ficoms
cmpl
int3
cltd
pop
aad
mov
cmp
mov
adc
jl
shlb
ret
fdivrl
les
push
ljmp
mov
mov
adc
notb
cmp
sub
int3
stos
lea
imul
inc
inc
add
out
pop
scas
adc
das
pop
icebp
ss
test
imul
in
bound
mov
adcb
sbb
xor
ret
into
jecxz
aaa
pop
dec
jno
sbb
push
ret
sahf
in
js
sub
test
jo
test
mov
or
xchg
cwtl
nop
mov
push
popa
add
in
roll
mov
xchg
mulb
loopne
frstor
sbb
sbb
pusha
sbb
push
cmpsb
pop
lcall
mov
or
leave
and
out
ret
loope
or
jnp
pop
test
inc
pop
mov
pop
and
mov
sbb
cmovle
imul
cmpsb
les
add
enter
push
fidivrl
outsl
mov
pop
dec
je
mov
jecxz
push
pop
sbb
add
or
fsts
inc
rol
xchg
test
sbb
mov
inc
ret
fs
fwait
loopne
movsl
or
add
xchg
dec
dec
push
cmp
js
or
jl
ss
jg
cmp
lods
pop
je
ljmp
mov
movsb
lods
cmp
jecxz
insl
fnstenv
push
pop
aam
out
gs
out
dec
fcomp
test
push
and
out
movsb
dec
push
addr16
imul
sbb
fnstenv
jo
insl
adc
lock
cli
in
dec
fs
ja
lds
mov
scas
repnz
cwtl
std
or
fidivs
andb
lods
incl
push
faddl
jecxz
mov
lret
inc
insl
je
cmpsb
pop
add
outsl
rorl
jae
cmpsl
clc
daa
fcoms
out
or
test
mov
or
fwait
adc
outsb
xor
pusha
jp
xor
jl
mov
lea
jb
insl
incl
push
ss
fbld
xchg
cwtl
xchg
sub
mov
stc
or
rcrb
addr16
lea
clc
inc
std
mov
xchg
lock
push
mov
xor
jg
push
stos
mov
or
fldl
push
cmp
lahf
out
mov
pop
lods
cmc
insl
mov
shl
out
pop
cli
out
out
mov
push
aas
xchg
inc
cmp
enter
jno
sti
pop
pusha
dec
xchg
mov
call
out
adc
xor
or
fldpi
mov
ficompl
js
ljmp
sub
js
sub
jns
push
inc
popa
push
pop
sbb
dec
orb
sbb
push
ss
fisubrs
mov
fwait
enter
sub
pop
out
fdivrp
in
sahf
or
out
inc
lods
jecxz
push
jp
add
ja
fists
adc
fists
stos
popa
mov
dec
in
mov
jne
and
int
in
or
mull
pop
add
mov
jno
lods
fnstcw
movsl
insl
jnp
stos
outsb
inc
or
xor
jnp
mov
add
cwtl
es
outsl
push
call
mov
nop
cmpsl
xchg
sub
mov
in
aam
cmpsb
fiaddl
sbb
xor
xor
je
mov
push
imul
arpl
and
cs
dec
mov
or
add
mov
lods
jnp
shr
fsubl
leave
cmc
xor
xchg
xchg
cmp
jecxz
mov
mov
aam
pop
add
cmp
mov
in
mov
test
sub
gs
lods
nop
in
push
jno
inc
clc
push
jbe
xor
stos
insb
xchg
out
insl
cmpsb
icebp
psubusw
gs
fnstenv
filds
fadd
cltd
and
lret
arpl
jns
jle
arpl
iret
insb
rorb
notb
pop
loope
iret
enter
mov
ss
loop
aad
or
jno
push
and
test
cwtl
scas
cmpb
fisttps
out
mov
cmpsl
xchg
or
adc
sub
scas
push
inc
and
data16
xorl
jae
mov
fnstenv
xchg
sbb
pushf
lods
in
in
enter
scas
icebp
jnp
dec
jmp
int
jg
in
xchg
mov
jne
in
xchg
lret
sbb
pop
jns
sbb
pop
and
inc
popf
adc
mov
cli
pop
mov
testl
ds
out
mov
xchg
push
pop
ljmp
subb
lods
cmp
add
sti
andb
rcrb
sti
fwait
jge
mov
mov
les
ja
pop
adc
mov
xor
mov
dec
orb
mov
sbb
insb
pop
jne
in
inc
jbe
sbb
popa
sbb
push
shl
out
lahf
rcll
xor
js
aam
and
sbb
out
loop
rcl
sbb
pop
push
cld
pop
inc
decb
sub
and
dec
jo
sub
hlt
dec
das
xchg
stos
aam
jmp
dec
fstpl
sahf
lgs
cmpsb
icebp
cwtl
adc
mov
sbb
loop
sub
push
xor
outsb
pop
ja
sbbl
ja
arpl
imul
shll
pop
je
nop
mov
fwait
add
aam
mov
sub
je
lcall
rolb
cmp
dec
xor
gs
jns
mov
fiadds
mov
rcll
cmpsb
cmp
xor
movl
aad
lods
dec
dec
add
rcll
js
call
mov
movsl
pop
call
mov
pop
lock
mov
dec
lahf
in
mov
shrl
movsl
or
in
pop
fsub
and
in
fwait
or
fsubr
sub
inc
mov
dec
jg
cmpsb
cmc
aad
ja
jo
movsl
push
xchg
loop
fldl2t
bnd
aas
pop
jnp
mov
scas
imul
pop
das
jg
and
hlt
xlat
pop
adc
test
mov
movaps
xchg
inc
xchg
icebp
xchg
xchg
adc
xchg
pop
xchg
stos
repnz
xlat
pop
add
inc
push
in
inc
sti
mov
out
jae
repnz
out
push
js
es
sbb
call
push
inc
sub
pushw
pop
inc
and
stos
jl
jo
imulb
jo
or
hlt
stos
adc
out
sbb
lds
fucomip
jl
les
add
daa
int
cmc
cwtl
lret
rol
and
insb
call
cmp
jge
xchg
add
clc
jne
dec
repz
jge
adc
dec
cmp
loope
sbb
ljmp
imul
scas
xchg
adc
inc
cmp
xchg
pusha
lret
inc
fdivl
sbb
cmp
or
shll
in
jmp
aas
nop
adc
test
dec
xor
mov
inc
out
je
pop
mov
or
xchg
lock
mov
jecxz
cmp
jae
lret
sbb
push
pop
enter
test
pop
mov
mov
sub
add
jbe
nop
movsb
fstps
jnp
jb
imul
lock
je
and
and
xchg
scas
push
sub
jg
add
jb
push
ret
cmp
aad
or
out
enter
xor
imul
jg
stos
ret
call
push
xlat
mov
pop
dec
mov
dec
and
pop
or
xchg
cmc
shl
pop
call
fmul
lcall
out
sub
cmp
rcpps
mov
cld
push
mov
xchg
mov
mov
xchg
popa
jl
push
shlb
test
bound
jno
rorl
add
push
xor
fistpl
dec
xchg
sub
fldenv
fs
es
xchg
out
mov
cmp
in
dec
jecxz
mov
and
loope
insb
xchg
xor
ss
mov
leave
psubsw
adc
ret
or
enter
imul
mov
lcall
loopne
mov
popf
dec
inc
bound
shrb
xchg
adc
pop
popa
fbld
jge
and
add
and
add
sti
pop
sub
pop
shrb
test
enter
sub
lds
je
test
cld
push
adc
mov
jbe
inc
mov
aas
insl
sub
mov
sar
or
test
sbbl
dec
mov
dec
and
call
fstpt
repz
jp
xchg
xor
jae
and
mov
ret
push
and
dec
xchg
cmp
push
fwait
mov
cli
fcmovnb
jne
xor
jb
mov
clc
loope
mov
repz
std
stos
xor
lods
inc
inc
pop
lods
int3
lret
lods
adc
cmp
scas
imul
adc
inc
inc
and
int
inc
add
test
ret
clc
outsl
dec
pushf
sbbl
mov
nop
test
jl
inc
insb
xor
mov
insb
dec
in
dec
sbb
fwait
in
adc
pop
loopne
sti
push
dec
mov
aad
test
gs
addr16
sub
dec
and
fst
rcr
iret
jns
addr16
out
sahf
adc
adc
jmp
cmp
dec
fldcw
add
shlb
stc
jbe
cmp
adc
xor
loope,pn
push
lds
int
push
xchg
out
ret
sbb
add
jle
daa
inc
stc
loope
stc
shll
es
sarb
dec
filds
cld
xor
out
push
mov
mov
or
jl
cmp
sub
sub
sub
scas
dec
out
pop
mov
in
xchg
cs
pop
clc
push
pop
push
loop
cwtl
inc
out
leave
popa
call
push
js
shrb
jnp
mov
pop
int
mov
and
fcoms
cmc
inc
jne
or
jecxz
outsl
push
xchg
ret
notb
adc
xchg
lahf
ljmp
imul
aas
push
and
popf
mov
sub
insb
cmc
xor
jp
cmp
fnstcw
outsb
adc
into
mov
aad
neg
sub
negl
mov
pop
mov
and
inc
dec
notl
jbe
jns
test
lods
fs
pop
loop
mov
jecxz
xor
inc
pop
mov
mov
testl
mov
sub
inc
pop
lahf
push
das
div
xchg
in
fs
xor
push
jb
ljmp
push
push
push
pop
cmp
or
fadd
test
push
ret
mov
mov
pop
hlt
nop
sub
ror
shl
xor
and
cmpl
push
test
outsl
mov
xchg
cmpsl
or
insb
sub
xchg
aam
pop
insb
ss
loopne
push
pop
into
repz
sbb
push
mov
ljmp
lods
test
adc
pop
mov
jecxz
cmpsl
rcll
test
xor
jmp
xor
call
sub
and
pushf
jle
sub
sub
cmp
pop
sub
testb
add
xor
arpl
adc
dec
cmpsl
lea
popa
mov
cld
mov
mov
sbb
pop
mov
rcrb
pop
test
decb
fistps
cs
fwait
jnp
xor
ret
dec
xchg
pop
pushf
push
hlt
dec
popa
inc
jge
rcll
je
jns
sbb
or
out
cmc
mov
enter
dec
push
insl
leave
aad
mov
divb
mov
sub
es
ja
jo
xchg
adc
and
cmp
inc
jl
popa
sub
pop
push
test
cmp
gs
jnp
mov
and
sarl
cwtl
int3
dec
out
cmp
xchg
imul
sbb
aaa
sub
test
shlb
lret
adc
xor
popa
sub
rolb
ret
inc
mov
in
jl
mov
stos
push
mov
sbb
incb
ja
xor
out
lahf
or
loopne
pop
xchg
sub
popa
and
add
mov
jmp
cli
dec
xor
mov
bnd
pop
aaa
push
and
push
push
mov
jo
and
jbe
push
sub
mov
imul
xor
andl
cmpsb
fimuls
xchg
call
inc
out
call
fsubrs
xlat
rcr
adc
lcall
gs
lock
sbb
aaa
push
aaa
lret
jmp
sub
rcll
adc
push
inc
in
pop
cmp
fildll
jnp
xlat
je
imul
sbb
ss
and
ljmp
enter
mov
ret
mov
xchg
repz
mov
call
pop
mov
jae
stos
popf
fidivl
lea
loopne
idivb
mov
jns
cmp
outsb
add
mov
jo
inc
iret
imul
and
call
jne
daa
dec
sub
add
xchg
mov
cmp
mov
push
imul
add
push
dec
sbb
cmpsb
mov
adc
cwtl
sub
jmp
lcall
cmp
push
push
dec
or
inc
jo
popa
test
push
pop
sahf
xor
leave
mov
dec
and
push
sub
ja
pop
xor
and
mov
lods
jns
call
dec
ds
push
sbb
inc
aam
xorb
insl
adc
mov
sbb
popf
hlt
cld
aad
and
lea
testb
repz
ljmp
cli
xor
inc
ds
mov
in
mov
cmpsl
or
sub
lea
popf
in
nop
rcll
loop
hlt
fadd
adc
or
xchg
rcr
mov
aad
fldt
leave
cmp
inc
pop
or
popa
nop
ret
cmp
cmp
sub
dec
cmc
repz
outsb
dec
sub
loopne
fs
xchg
iret
mov
mov
mov
or
out
sbb
cmp
pop
leave
dec
jge
push
and
faddp
outsl
or
stos
call
into
mov
subb
add
bound
stc
enter
sbb
adc
insb
cmp
imul
lret
xorb
adc
ja
popa
mov
dec
pop
adc
pop
jg
jbe
imul
sbb
mov
cmpsl
lock
adc
adc
xchg
mov
inc
cmpsl
lret
repnz
pushf
push
inc
in
push
add
fs
mov
movsb
scas
xchg
dec
add
sub
cmpsl
cmpsl
incl
dec
fs
aas
jb
add
xchg
int
lods
divl
mov
push
aam
aas
inc
test
stos
loope
int
jo
js
stos
mov
inc
xchg
mov
aam
into
adc
pushf
cltd
mov
ss
cmp
mov
enter
shr
ret
mov
or
leave
loope
mov
out
in
dec
jno
xchg
out
loope
scas
or
imul
mov
cli
mov
push
mov
or
or
add
arpl
dec
movlps
popa
adc
enter
das
lret
es
xchg
push
add
outsl
jle
mov
and
jg
inc
pop
cwtl
fisubs
andb
out
xor
sbb
ficompl
xchg
cmp
push
dec
imul
sti
dec
pop
jne
popf
pop
ret
cs
mov
push
mov
mov
inc
jle
cld
hlt
dec
xor
and
movsl
mov
testb
xchg
dec
cmpsb
jge
out
and
jb
adc
adc
push
into
stos
sub
sub
pop
fsub
sbb
icebp
les
xchg
int
stos
pusha
fldl
and
in
imul
jo
pop
repz
jnp
cmp
mov
lods
mov
push
lods
fldenv
mov
inc
std
js
rclb
mov
push
jmp
dec
add
cmpsb
pop
iret
jecxz
rcrl
test
icebp
inc
into
cld
call
sbb
insl
cmp
sti
stos
outsl
sahf
adc
loopne
enter
xor
push
imul
data16
add
xor
fistl
adc
mov
jb
push
push
xlat
lret
pop
rcrl
mov
inc
xchg
into
and
inc
rcrb
out
cltd
inc
lahf
sub
fs
jp
cmpl
mov
jg
xor
mov
loope
outsb
sahf
xchg
jns
sub
data16
stos
push
push
xchg
pop
cmpsb
ja
mov
movsb
jmp
xchg
gs
mov
inc
je
es
or
mov
rcll
cmpsb
pop
call
popf
gs
mov
test
pop
push
dec
xor
cmp
cmpsl
cmp
add
pushf
adc
mov
test
xor
xchg
pop
repnz
stos
icebp
inc
mov
rcr
xchg
push
dec
mov
test
adc
mov
decb
popa
inc
je
xadd
mov
sti
push
inc
mov
and
xlat
and
mov
cmc
xor
aad
sahf
es
jge
mov
js
sbb
jmp
int3
stos
popf
aad
jp
ret
sar
inc
repz
jmp
pusha
bound
iret
xchg
imul
shll
jp
int
or
pop
xor
scas
pop
sbb
dec
and
cmp
xchg
mov
jmp
cmc
cmpsl
in
mov
sub
add
inc
xchg
mov
adc
inc
adc
movsb
btc
int3
jge
in
mov
and
fcmove
decl
rol
pop
add
xor
dec
int
pusha
inc
push
in
shll
mov
sbb
and
adc
inc
sub
cmpsb
pop
push
pop
jge
dec
fistps
nop
mov
mov
pop
lret
jne
cld
push
mov
xor
jl
mov
rep
adc
and
mov
pop
aam
sub
sub
loopne
lods
and
lods
xchg
addb
out
add
sti
aaa
add
sub
mov
imul
out
dec
mov
mov
rorl
xlat
loopne
adc
cmp
addr16
pusha
cmp
out
inc
mov
xor
aam
fs
lret
sahf
xor
adc
push
fistl
mov
pusha
mov
cmp
pop
test
pop
dec
add
movsb
loope
push
cmp
ds
or
mov
add
dec
gs
aaa
je
jle
sbb
iret
in
inc
xchg
test
jg
mov
ja
arpl
mov
sub
mov
leave
and
movl
dec
rcll
pop
je
or
aaa
sbb
xchg
inc
aas
inc
mov
push
or
jecxz
mov
push
jmp
mov
stc
ret
or
lds
repz
insl
push
push
cmp
decb
stc
mov
pusha
test
and
js
enter
test
pop
into
ds
cmp
shlb
std
cmp
into
cmp
cmp
add
jmp
rclb
jo
xlat
loop
leave
mov
lods
aaa
cmp
sub
cmc
aam
idiv
xor
adc
inc
aam
stc
cmpsb
xchg
inc
dec
ret
adc
inc
cmp
push
lret
mov
call
mov
add
mov
stos
xlat
test
mov
push
push
push
lock
lds
push
imul
neg
mov
and
sbb
push
iret
fsts
sub
add
mov
int
xchg
and
xor
inc
push
leave
push
adc
sbb
pop
mov
lods
rcr
add
dec
pop
shll
cmp
jecxz
shlb
adc
cli
bound
jge
adc
jmp
cmpsb
pop
icebp
lods
mov
faddl
sub
fwait
aad
xchg
jle
aas
clc
xor
mov
shrl
add
jb
out
add
dec
js
inc
imul
adc
dec
pop
or
cmp
mov
adc
lds
stc
push
outsb
ja
pop
lock
add
sbbl
shlb
xchg
or
jecxz
in
push
mov
mov
pushaw
hlt
xchg
repz
xor
cwtl
push
add
addr16
cmp
outsl
test
lods
movsl
jle
test
inc
aas
loop
popl
push
add
mov
shlb
mov
push
jns
cwtl
xchg
lea
imul
fstpl
xchg
movsb
dec
pushf
test
hlt
mov
test
ja
int3
lret
inc
pop
pop
adc
sub
mov
loop
jp
inc
adc
inc
xor
mov
mov
pushf
int
rcr
aam
dec
mov
ret
loop
mov
pop
outsl
dec
xchg
outsl
test
mov
call
mov
sbb
sub
orb
push
js
mov
repz
cmp
in
out
mov
mov
mov
mov
inc
add
cmp
push
add
orl
dec
adc
pop
push
add
clc
jnp
int
pop
push
push
es
mov
lret
ret
push
out
int3
aam
jmp
adc
dec
dec
mov
iret
scas
in
out
push
clc
cmpl
or
cli
xchg
lea
orb
push
pop
jns
sub
xor
push
push
inc
pop
cli
sub
rcr
mov
repz
lret
push
mov
mov
mov
xor
mov
outsl
arpl
or
aam
lea
div
repz
cmc
and
sbb
stos
addr16
xchg
push
mov
in
outsl
lret
inc
adc
dec
dec
call
repnz
rcrl
hlt
stos
push
in
fs
scas
gs
xchg
insb
call
mov
pop
bnd
jl
xchg
mov
dec
insl
mov
inc
and
out
xor
lcall
pop
xor
lcall
adc
stos
daa
pop
popf
jmp
and
rcrl
push
cmc
hlt
jnp
inc
std
add
je
push
lods
sub
cmc
popf
cltd
pushf
icebp
pop
test
adc
ss
adc
mov
jmp
stos
in
xchg
push
stc
rorb
call
mov
xchg
and
fimuls
std
sbb
clc
insb
push
test
sub
rcrb
ds
cli
sbb
test
loope
dec
push
and
sahf
int
mov
jmp
test
enter
push
push
sbb
xor
jmp
dec
mov
jbe
addr16
sbb
lods
pop
out
add
jo
pusha
mov
pop
jne
sub
xchg
push
pop
xor
xor
sbb
sbb
lret
dec
pop
pop
int3
jnp
jmp
sbb
arpl
jb
mov
jbe
pop
out
mov
out
ret
adcb
add
clc
mov
and
adc
clc
xor
dec
jmp
mov
insl
rcll
in
adc
mov
je
arpl
xchg
pushf
ds
sub
cmp
inc
stc
in
fs
shll
jl
pop
dec
cmp
jmp
outsb
dec
shll
repz
adc
cli
int3
test
push
lock
testb
inc
popf
fwait
xchg
es
jmp
outsb
pop
cli
dec
sub
sub
cmp
mov
adc
jns
stos
nop
jmp
aad
fwait
cmp
test
in
adc
inc
mov
sbb
mov
jg
xor
call
mov
xor
inc
or
cmp
mov
cmp
sarl
sahf
adc
mov
inc
dec
add
lods
xor
lods
cld
and
cmpsl
insb
mov
mov
cmp
cmp
xchg
fmul
fs
leave
dec
js
shl
dec
nop
pop
sub
cmc
mov
insb
and
rolb
add
inc
add
lret
adc
inc
add
into
add
movl
adc
andl
xor
mov
push
add
xor
xor
sbb
mov
add
movl
adc
xor
orl
xor
movl
cmp
jne
cmp
je
jmp
or
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
subl
push
movl
push
addl
lea
push
subl
lea
addl
push
call
xorl
push
sbbl
jmp
push
xorb
es
and
jp
add
jp
cmp
pop
lcall
in
mov
negl
sub
lahf
cli
sub
push
dec
rcll
lods
adc
jb
jns
inc
insl
ret
jge
mov
scas
divb
int
hlt
shll
mov
stos
outsb
add
lods
or
pop
or
dec
loop
jmp
aas
add
xchg
jns
lea
mov
and
bndldx
inc
inc
sahf
dec
inc
call
repnz
stos
mov
add
xor
xchg
pushf
sub
dec
lods
jecxz
xor
scas
dec
and
mov
jbe
mull
test
in
inc
cmp
xchg
adc
push
pop
pop
push
int3
adcb
fcompl
pop
aaa
loopne
push
cmp
cmp
icebp
rclb
sbb
aam
or
pop
sbbb
inc
add
sarl
fbld
or
addr16
out
push
sarl
push
cmc
lds
xor
pop
mov
test
dec
push
pop
out
and
jno
adc
push
scas
add
cmp
sbb
mov
sub
ss
and
popa
jbe
dec
lea
movsb
popf
add
pop
adc
mov
out
int
mov
rclb
hlt
jmp
xlat
pop
jge
jg
push
icebp
push
push
jno
add
repz
testb
aad
mov
ret
adc
mov
push
hlt
mov
xor
dec
mov
xchg
std
insl
addr16
mov
lock
xor
outsb
xchg
test
or
jae
sub
pop
pushf
aam
cmp
aad
frstor
pop
subb
mov
rcrb
ja
incb
stc
pop
mov
testl
int
dec
outsb
sub
inc
cmp
or
inc
push
in
jb
pop
loope
push
jge
adc
aaa
adc
into
xchg
pop
or
pop
jle
gs
inc
rclb
out
pop
ret
out
in
sub
lock
into
jno
aas
cmpsl
loopne
cmpsb
rorb
mov
push
mov
sti
mov
inc
inc
aaa
fdivs
js
add
inc
sbb
cs
bnd
aaa
xchg
sbb
inc
adc
cmp
sarb
push
fbstp
dec
adc
sbb
xchg
std
push
jl
mov
and
pop
stc
adc
mov
mov
lds
lret
shrb
or
jg
jle
pop
adcb
push
or
add
loop
movsb
xlat
stos
jecxz
add
stos
rcl
ret
or
jnp
jae
cmp
pop
jg
mov
sub
ljmp
push
jnp
mov
dec
mov
gs
out
bound
pop
inc
in
ja
call
inc
jg
jle
lret
or
sbb
xchg
out
xchg
add
fcmove
cmp
testl
inc
sbb
pop
xor
inc
cmp
or
adc
mov
sbb
xchg
pop
call
loope
mov
jbe
in
and
rcll
lods
pop
push
sbb
mov
inc
mov
xor
repnz
insb
movsl
adc
adcb
mov
or
cmc
pop
fsubl
icebp
xchg
rorl
int
push
adc
je
out
dec
lcall
enter
xchg
mov
ljmp
xor
ror
fldenv
mov
inc
xchg
jo
outsl
in
lock
in
add
loopne
mov
in
lahf
dec
insb
lcall
sub
jno
sbb
movb
inc
jb
fsubrs
aam
dec
scas
push
popf
xor
push
adc
out
sti
jae
pop
fistl
pop
lret
in
sbb
sti
aaa
repnz
les
rcrl
mov
inc
sub
push
mov
cmp
sti
or
xchg
pop
daa
pop
push
jne
sub
jmp
insb
incl
xorl
out
inc
call
or
sbb
popa
mov
inc
repz
insb
xchg
jmp
xchg
fsts
inc
jo
lock
lcall
adc
add
adc
xor
pop
popf
push
shrb
add
xor
sbb
cmpsb
pop
rorb
lds
js
inc
push
fbstp
arpl
stc
pop
adc
xchg
xchg
dec
das
mov
jg
push
mov
mov
jnp
mov
pop
into
flds
pop
pushf
psubusb
mov
cmpb
sbbb
pop
in
sbb
push
jae
rclb
bound
dec
xchg
aad
movsl
ud2
xchg
inc
cwtl
rcr
int
leave
test
fsub
repnz
adc
mov
loopne
inc
xchg
icebp
repnz
xchg
push
lock
pusha
rclb
andl
int
rcll
popa
cmpl
sbb
and
or
mov
xchg
aaa
and
jno
add
lret
ljmp
stos
aaa
sti
inc
jl
and
aad
aaa
mov
push
popf
fistpl
cmp
adc
imul
xchg
mov
xorl
shl
enter
jecxz
jo
xor
enter
dec
es
cli
sbb
aas
and
insl
lret
js
or
iret
sbb
dec
cmpsb
jl
or
add
add
leave
repz
add
aas
xor
repnz
fwait
insl
mov
mov
hlt
mov
xor
cmp
sub
in
dec
aas
mov
insb
idivl
push
ficomps
hlt
scas
cmpsl
mov
dec
stos
mov
jle
ret
inc
in
mov
pop
pop
inc
mov
pop
xlat
insl
mov
and
outsb
std
jns
daa
loop
pusha
jmp
ljmp
mov
dec
pop
push
inc
test
outsb
cltd
jnp
icebp
imul
cld
testl
pop
pop
rcrb
jae
mov
cmp
shrb
pop
shld
roll
in
xor
js
fs
xchg
xchg
andb
rcll
pop
push
repz
cmc
xchg
imul
dec
pusha
test
outsb
out
and
inc
mov
dec
out
dec
lcall
cmpb
cs
adc
cmpsl
xor
inc
or
lahf
aas
ficompl
dec
loop
cmp
ret
xchg
jbe
pop
stc
lret
inc
out
pop
mov
dec
mov
sti
enter
push
pop
test
jp
sbb
cwtl
aaa
xor
fadds
fmul
ret
enter
pop
imull
dec
inc
int3
jns
or
subl
loop
lea
dec
popf
sahf
filds
mov
dec
mov
mov
les
push
xorb
xchg
dec
arpl
sub
xor
pop
and
sarl
pop
pop
jbe
inc
stos
xchg
ds
pop
sbb
cmpsb
test
das
or
adc
push
clc
pusha
pop
dec
sub
ljmp
pop
cmp
dec
pop
xchg
push
pop
inc
rcll
cmp
pop
int3
shl
xchg
mulb
lds
pushl
pop
mov
out
roll
mov
fs
es
mov
cld
push
add
notl
sarb
popfw
mov
ljmp
fs
jg
lods
fisubl
mov
test
sub
dec
and
jbe
cmp
out
mov
in
cmp
outsb
and
xchg
and
loope
mov
in
or
push
cld
in
js
ljmp
mov
arpl
lcall
sahf
in
push
lahf
gs
or
xchg
andb
sub
jmp
out
inc
push
inc
jb
pop
push
dec
mov
jge
loop
stos
out
and
loope
jb
nop
cs
fadds
fcoms
repnz
cmp
mov
or
ficompl
movsl
les
mov
je
and
xor
ds
repz
mov
dec
mov
adcl
jo
jp
jg,pn
addr16
and
addr16
xchg
cmp
addr16
sbb
mov
lds
add
push
and
xor
inc
sub
cmp
scas
mov
jmp
mov
rcrb
mov
dec
cltd
js
push
insl
inc
xchg
or
mov
mov
and
sbb
lret
cmc
test
js
xor
lahf
xchg
fwait
data16
insl
xchg
adc
sub
fbld
pop
dec
sahf
xchg
nop
cmp
pusha
xor
pop
jecxz
loop
imul
pop
imul
inc
mov
loopne
dec
xchg
mov
sbb
xchg
enter
cmpsb
pushf
movsb
stos
push
pop
mov
clc
idivl
jb
test
bnd
add
push
clc
cld
leave
fs
add
sub
push
adc
aad
push
or
sbb
shl
dec
jl
js
in
inc
inc
cmp
dec
fildl
sub
push
xchg
lcall
inc
jns
xchg
lock
push
sbb
mov
gs
jecxz
jne
lods
ljmp
mov
mov
imul
sub
andb
nop
pop
fsubrl
cmp
or
inc
adcb
and
mov
pop
sti
scas
push
bnd
jbe
iret
sbb
leave
jle
lea
adc
popf
cmp
push
mov
jmp
pop
sbb
mov
mov
pop
dec
sti
inc
sub
inc
lahf
js
sbb
or
cs
pop
addr16
fiaddl
pop
rorl
filds
jo
sub
adc
out
lret
sub
int
dec
pop
mov
popf
sti
sub
hlt
ja
xor
pusha
lret
mov
cmp
mov
jp
popa
dec
imul
pop
in
aad
mov
jb
ret
pop
cmp
dec
fsubrs
inc
xchg
jnp
gs
int
dec
push
pop
test
addr16
mov
and
and
test
mov
adc
cmp
lds
pop
lcall
fistpl
shrb
pop
loopne
pusha
inc
shrl
mov
lds
adc
or
repnz
xchg
mov
jmp
flds
test
dec
pushf
cmp
sub
push
dec
mov
lds
xor
cmp
inc
cmp
and
push
stc
add
jae
fwait
pop
call
movb
js
test
mov
xor
or
testb
cmpb
xchg
mov
xchg
xchg
stos
add
stc
mov
cwtl
hlt
loopne
lods
and
ds
jle
xchg
mov
mov
jbe
cmc
jno
lods
stos
mov
xchg
lods
or
sub
addr16
stc
pop
dec
test
cmp
cltd
inc
xchg
push
jle
xor
mov
mov
mov
popf
mov
movsl
jg
movsb
mov
fstl
add
pop
cli
add
push
aaa
ret
mov
jo
push
movsl
fadds
test
ds
test
lea
out
andl
mov
push
in
addr16
dec
cmp
xorl
addr16
mov
fcoml
mov
mov
fisubl
xchg
arpl
push
pushf
stos
add
push
cli
aam
shrl
inc
js
xor
push
pop
add
shlb
push
adc
out
stos
jp
mov
lret
push
pop
xor
adc
pusha
fisttps
push
mov
pop
dec
fists
push
fcomip
into
mov
arpl
or
dec
xchg
gs
stc
cmc
aas
ret
ret
dec
cmp
repnz
sub
pop
lcall
lret
repz
cwtl
lcall
fisttpll
mov
jnp
faddl
add
and
ret
pop
dec
xorb
lahf
xchg
push
adc
data16
and
dec
adc
stos
xchg
or
dec
ret
lahf
xchg
push
imul
xchg
jbe
and
fstps
cld
mov
cmp
shr
test
sbb
sub
xor
sbb
mov
or
ret
xchg
push
adc
inc
mov
add
jl
adcl
lret
sbb
rcrl
xor
lds
lret
js
cs
or
into
test
and
add
xchg
cmp
dec
jmp
or
sbb
fsubrp
into
aas
or
mov
jmp
cmc
aaa
jne
fmuls
fcmovb
sub
sahf
push
lods
shrb
push
cltd
sub
jns
or
pop
ret
sbb
and
insb
jns
filds
std
inc
or
int
sub
sbb
xchg
jle
cs
idivl
aas
lock
add
in
es
dec
int3
icebp
cmp
lods
push
jmp
or
movb
push
jge
mov
lods
mov
test
mov
pop
sub
xchg
test
mov
int
jp
daa
inc
repz
mov
test
scas
pop
mov
pop
and
adc
adc
shll
je
scas
pop
adc
xor
cmp
stos
cmp
icebp
pusha
mov
pop
inc
dec
xor
hlt
pop
ljmp
clc
fsubs
or
lds
pop
ds
push
cmp
pop
lahf
push
dec
and
and
hlt
ret
aam
fdivrs
jle
add
xchg
sbb
mov
addr16
adc
inc
push
stos
pop
fsts
fidivs
pushl
jecxz
lea
xchg
lahf
jne
sub
popf
or
ds
movsl
xor
divb
cmp
shl
mov
ds
mov
dec
mov
fs
movsb
mov
rcll
cmp
xchg
pop
or
sub
inc
jg
add
into
fcompl
add
in
ja
push
add
xor
xchg
dec
mov
arpl
inc
aas
xor
movsl
stc
popf
push
pushf
push
sbb
mov
aas
dec
cmp
sti
push
push
cmp
ljmp
stos
pusha
pushl
cli
ficomps
outsb
cltd
pushf
in
sahf
lret
sti
push
nop
out
lcall
das
mov
sbb
outsb
movl
loopne
add
dec
cmp
adcl
fdivs
sahf
shrb
cmpsl
sti
inc
fwait
lret
imul
stos
xor
pop
add
nop
mov
inc
stc
das
cmp
xchg
not
jo
or
mov
in
out
xchg
dec
pop
add
fcmovb
pop
adcb
dec
les
xlat
popa
mov
xchg
jp
insw
test
in
movsb
lcall
decb
rolb
ss
pop
add
aam
call
jbe
ret
movsb
sub
push
xor
mov
dec
xor
pop
ja
lds
xor
push
pop
add
add
in
data16
xchg
mov
mov
mov
popf
add
sbb
adc
in
jb
je
xchg
or
add
adc
popf
jmp
adc
call
sub
insb
inc
gs
cmpb
sub
inc
push
sub
jmp
out
push
xor
sahf
leave
dec
movsl
or
jg
rorb
cmpl
ret
pop
js
sbb
and
movsl
xchg
sbb
mov
fcmovu
jge
mov
movsl
movsb
scas
imul
clc
mov
icebp
sub
out
sbb
add
mov
in
push
les
mov
dec
aaa
xsave
pop
add
testb
lods
cli
xor
pop
test
popf
sarl
pop
push
and
test
dec
daa
xchg
dec
adc
inc
mov
mov
into
inc
rcll
jns
cmp
fsub
std
lea
cld
stos
lds
mov
xchg
pop
fs
movsl
repz
mov
decb
xchg
fwait
imul
lea
lcall
cmp
idiv
lret
dec
icebp
mov
add
add
pop
not
mov
gs
push
std
and
addr16
fisttps
xchg
lcall
jae
or
or
aaa
rcrl
adc
sub
mov
filds
mov
daa
mov
mov
push
xchg
pop
leave
fstpt
mov
loopne
or
push
mov
mov
sub
mov
adc
add
cmc
sbb
push
pop
pop
lret
sub
imul
mov
out
pop
pop
add
popa
ja
mov
pop
jp,pt
or
push
inc
xor
testl
shll
push
cld
inc
mov
ds
push
lret
and
lods
mov
inc
push
mov
xor
sbb
int
fcmovnu
sbb
mov
fwait
mov
bound
and
mov
mov
test
loope
out
xlat
cmc
loopne
and
fsubl
push
mov
or
inc
sub
es
cmp
mov
es
test
pop
movsl
fwait
xor
mov
sbb
pop
inc
adc
or
mulb
xchg
dec
or
jecxz
pop
lods
jbe
int3
shl
or
xor
fiaddl
sbb
and
rclb
sbb
mov
mov
sbb
mov
cwtl
and
dec
jge
fiadds
xchg
cmp
add
cmp
and
fnstsw
ss
pop
sub
adc
lock
test
mov
or
jb
gs
pop
xchg
and
xchg
mov
add
movsl
jl
lahf
ret
jo
jge
pusha
mov
mov
pop
aad
cmpsb
inc
xchg
mov
test
sub
mov
mov
xchg
add
test
insb
pop
pop
xchg
in
cmpsl
shlb
adc
mov
pop
cli
insb
arpl
inc
cmp
les
outsb
popa
or
or
mov
cwtl
mov
pop
inc
inc
jne
push
jmp
movsl
jecxz
inc
ret
out
bound
in
cmp
mov
and
ss
sub
mov
movsl
pop
or
testb
je
hlt
pop
cmp
out
xchg
in
test
mov
mov
mov
mov
jns
xchg
adc
aam
mov
aam
int
aad
xchg
je
sbb
std
mov
mov
fsubs
aas
es
xor
cltd
xor
push
mov
incl
pop
mov
les
popf
insb
test
add
mov
inc
mov
sub
stos
push
xorb
js
in
loop
pop
pop
push
cmpsb
gs
addb
adc
repnz
push
cld
in
bound
fmuls
mov
daa
int
cmp
iret
popa
sub
sbb
repz
and
xchg
pop
notb
add
mov
sbb
sub
imul
enter
sbb
add
cmp
imul
cmpsb
xchg
repz
pop
dec
jle
mov
fdivs
loopne
out
xchg
inc
xchg
aaa
push
or
loop
sub
push
out
in
cmpsb
inc
jp
std
fdivp
jne
pop
xchg
inc
mov
insb
and
insb
cmpsb
mov
push
xor
jle
shrl
xor
jnp
nop
or
sbb
insl
add
push
inc
nop
dec
mov
outsl
sbb
je
movsl
mov
push
mov
fs
dec
dec
add
fs
mov
lret
inc
rcrl
sbb
sbb
cmpsl
in
adc
jbe
nop
cld
lahf
int3
fadds
cmp
inc
movsb
pop
and
scas
cmpsb
decb
sbb
rclb
cmp
xor
push
test
movsl
add
rcll
shlb
outsb
test
outsl
push
mov
pop
cwtl
mov
or
adc
sbb
pop
repnz
cli
jne
fxch
out
add
mov
jnp
aas
std
movsl
clc
and
xorl
push
jno
rcrl
add
je,pn
cmp
mov
scas
rcll
fmul
jnp
mov
call
ljmp
xchg
cmp
or
inc
fcomp
ds
mov
or
push
mov
dec
mov
ret
mov
xor
std
je
pop
ficoms
pop
fisttps
outsl
mov
adc
sarl
fwait
das
push
jb
dec
test
jne
fldl
jns
lods
inc
mov
repz
sub
or
sub
or
or
ja
mov
mov
call
addr16
pop
rcrb
push
lods
cwtl
jns
and
inc
pop
frstor
pusha
in
imul
sbb
adc
inc
mov
fs
fwait
addl
fldcw
pop
xchg
outsl
out
in
fisubrl
xor
or
jge
stos
and
insb
or
call
outsl
pop
sbb
cmpsl
inc
mov
aas
ja
jns
daa
out
mov
mov
sub
dec
jg
movsl
ficoms
xchg
sbb
mov
addr16
cmp
adc
and
in
adc
xor
subl
inc
in
and
add
stos
or
das
push
xchg
mov
add
ret
lock
loope
sbb
or
or
push
int
insb
je,pn
mov
dec
jp
or
xchg
jmp
insb
adc
fisubs
stos
pop
fdivp
shl
xor
adc
jbe
pop
xchg
inc
push
rclb
movhps
mov
jle
rol
pop
jbe
cmp
ja
ret
ljmp
dec
enter
rorb
adc
out
popf
cmpsb
pop
in
ja
js
cmp
outsb
outsb
mov
sbb
mov
pop
movsb
in
jle
flds
out
push
in
out
stc
repz
insb
sbb
dec
adc
or
mov
push
dec
mov
xchg
lods
pop
cmpsl
out
test
pushf
scas
push
mov
lahf
or
xchg
test
fisubrs
into
jecxz
mov
test
fists
icebp
and
jmp
adc
and
inc
rcl
dec
pusha
lea
or
int3
iret
data16
add
ret
out
ficoml
push
mov
test
rcr
loopne
int3
scas
lahf
and
push
sub
push
jge
pop
push
rolb
dec
sbbl
pop
fiaddl
mov
ret
jmp
jno
push
mov
cmp
pop
hlt
call
push
fcomps
sbb
sbbb
dec
push
mov
xchg
jae
je
cmp
clc
add
iret
or
add
and
mov
mov
mov
cli
adc
cli
or
sbb
idiv
xor
xchg
dec
mov
das
jmp
test
enter
adc
pop
push
dec
mov
lods
fbstp
lds
pop
cmp
inc
lahf
lock
daa
leave
mov
sub
les
arpl
pop
add
add
push
xchg
push
and
lret
add
pop
mov
int3
stc
mov
loop
fildl
movsl
cs
add
in
cmp
out
call
mov
sahf
or
xchg
xchg
or
sahf
mov
ror
xor
out
sub
insb
sub
push
lcall
cmp
pop
int
pop
sub
out
icebp
jmp
xchg
jle
data16
add
pop
sahf
adc
outsl
out
movsl
dec
xor
sti
xchg
pop
setbe
sub
pop
sbb
xor
cmpsl
pop
fiaddl
shlb
and
out
addb
sub
mov
xchg
ljmp
xchg
pop
out
pop
aas
sub
psraw
stos
out
repz
cmp
popf
adc
mov
clc
out
lods
cli
je
mov
subb
pushf
sub
loope
scas
mov
sahf
xchg
jp
push
adc
dec
faddl
pusha
cmp
dec
xchg
je
aad
adc
ror
cwtl
in
dec
or
and
das
push
push
push
xchg
int3
mov
test
pop
and
inc
push
fldenv
fsub
lahf
sub
hlt
lds
pop
inc
cmc
mov
lret
jne
test
lds
fildll
push
adc
pushf
cltd
cmpsb
arpl
xchg
mov
or
mov
int
jb
inc
xchg
xchg
cltd
or
js
jl
mov
mov
movsl
lret
cltd
bound
aam
in
add
ljmp
in
and
enter
nop
and
dec
test
sub
fdivs
or
and
or
in
shl
jmp
adc
cltd
mov
pcmpeqd
das
pop
enter
xchg
lods
in
lods
popa
jno
stc
sbb
sbb
add
fistpl
pop
lods
lahf
mov
sub
out
enter
test
les
cmpsl
test
add
dec
je
out
shll
push
xchg
cltd
pop
mov
ljmp
hlt
push
push
loope
idivb
xor
jecxz
xchg
and
jl
shl
sub
adc
or
xchg
fwait
test
out
pop
orl
and
int
dec
hlt
pop
movsb
mov
idivl
ljmp
cwtl
in
mov
aam
fisubrl
imul
cmc
xchg
sar
xor
mov
dec
aad
sbb
add
or
mov
mov
add
lret
sub
aas
outsl
imul
in
testl
call
jb
jl
loope
sub
xchg
or
ffreep
mov
dec
icebp
rcl
sub
inc
sub
fsubl
lds
fimuls
fbstp
or
stc
inc
fisubrl
and
les
xor
add
loope
cwtl
push
cwtl
pusha
mov
inc
and
pop
into
mov
cs
insl
popf
dec
cli
push
jne
insl
fcompl
jmp
addb
or
lds
jno
inc
pop
jg
andb
int3
cs
mov
pop
pop
inc
pop
ret
pusha
popf
dec
rcl
inc
and
cld
lock
arpl
add
aad
mov
mov
adc
inc
and
mov
xor
mov
rol
popf
sarb
clc
lods
call
xchg
sbb
jmp
inc
inc
in
push
dec
pop
and
fimull
cmc
icebp
leave
cmpsl
push
outsl
dec
ss
popa
out
arpl
icebp
jbe
cld
sbb
jg
xchg
les
lods
add
xchg
pop
call
xor
mov
add
hlt
lret
lods
adc
add
outsl
jecxz
fsubrs
adc
aad
xchg
xor
xchg
push
cmpsl
lds
push
or
dec
push
sarl
jl
push
das
mov
int3
sub
dec
mov
push
js
mov
and
pop
insl
gs
ret
mov
ror
popa
pop
dec
dec
adc
or
sub
or
pop
xchg
sarb
repnz
push
dec
xchg
or
push
cmp
jb
inc
cmpsl
sahf
mov
adc
test
lock
fbld
loop
cmp
sub
sbb
sahf
inc
fwait
dec
into
and
and
xor
inc
enter
je
loopne
lcall
das
dec
ss
test
dec
xchg
jae
xorb
mov
pusha
arpl
xchg
ljmp
pushf
pop
mov
dec
dec
nop
cli
loope
mov
shrl
in
push
stos
mov
enter
mov
data16
xor
jmp
xor
inc
mov
pop
push
pop
push
jbe
arpl
push
inc
arpl
cs
daa
les
lods
les
inc
and
bound
cmp
dec
adc
pop
jge
repnz
or
push
out
mov
lcall
ss
push
imul
xchg
or
cmp
sbb
popf
pop
dec
xor
sbb
jnp
unpcklps
icebp
jle
movsb
jb
sub
add
ja
mov
incb
adc
out
add
dec
addr16
int
mov
shl
in
lret
addr16
mov
cmpsl
shlb
cmpsb
jmp
add
popa
addr16
or
pop
xchg
xchg
fidivrl
movsl
xor
add
stos
lods
fucomip
pop
cs
ja
lds
cmc
call
out
dec
inc
into
loope
mov
jmp
es
and
fcmovnb
lods
sub
lds
cld
test
jg
adc
imul
or
cmp
lcall
jmp
sbb
jle
cmpsb
ficoml
rolb
inc
aas
popa
hlt
sub
in
mov
mov
jno
lods
enter
jp
jns
and
shrb
lock
ja
lock
fwait
repz
dec
sub
mov
gs
and
push
add
sbb
mov
sub
and
mov
xorb
or
scas
leave
jmp
in
xchg
xchg
imul
outsl
or
nop
cmp
out
xor
popf
jl
xchg
inc
clc
pop
arpl
push
push
dec
mov
pop
sbb
mov
fcmove
pusha
insl
inc
test
pop
push
sub
xchg
sbb
push
js
add
sbb
aas
pop
verw
sahf
out
pop
lret
movsl
in
push
das
pop
sub
addr16
xchg
mov
rcll
in
inc
lods
fdivrl
adc
add
decl
inc
clc
daa
add
jge
rol
lea
mov
out
jl
sub
ja
cltd
jnp
push
or
shlb
pop
test
mov
xor
ret
inc
sahf
sub
ror
mov
lods
mov
jnp
push
pop
data16
nop
jg
mov
in
and
add
and
je
sub
inc
and
into
insl
add
leave
xchg
sub
sbb
pop
ret
xchg
or
fcom
xor
mov
sub
inc
jmp
sub
add
ss
imul
xor
inc
sbb
lea
mov
adc
popf
lcall
cmp
aam
xor
lea
jmp
sub
popa
mov
call
in
sahf
fsubrs
cmpsl
sahf
aas
and
inc
mov
push
jecxz
stos
sub
aam
mov
pushf
adc
xor
add
jle
sub
add
mov
mov
sbb
dec
fidivs
mov
int
mov
inc
pusha
jmp
inc
nop
insl
jae
pop
cli
mov
push
inc
loopne
flds
popf
add
pop
rcll
push
mov
jo
test
cmp
leave
xorl
mov
xor
jmp
jno
mov
xchg
outsl
je
xor
in
jns
jl
sbb
pop
inc
inc
dec
aad
iret
cmp
jle
push
ja
std
cmp
adc
out
adc
call
fsubrs
mov
cld
addl
lods
sbb
xor
arpl
test
inc
mov
ljmp
jnp
mov
cmp
adc
push
cli
push
lea
adc
mov
loope
arpl
pop
add
add
orl
push
call
adc
movl
addl
movl
neg
mov
mov
decl
xor
and
mov
andl
add
mov
sub
mov
test
je
and
mov
movzbl
sub
mov
mov
mov
mov
xorl
xor
dec
add
sbb
mov
xor
mov
neg
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
adc
xor
add
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
sbb
add
mov
addl
sub
lea
addl
xor
xorl
xor
movl
cmp
movl
je
mov
mov
adc
mov
adcl
xor
adcl
add
cmp
movl
jne
subl
pushl
xorl
call
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
xor
decl
add
cmp
je
andl
pushl
pushl
xorl
call
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
xor
mov
mov
mov
mov
sub
and
mov
mov
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
andl
mov
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
jmp
icebp
pop
call
das
sbb
mov
lods
stos
xchg
stos
cmp
jp
pop
jp
adc
xchg
inc
cltd
enter
fidivrs
mov
and
xchg
arpl
mov
ljmp
jbe
adcb
cld
xlat
enter
cmp
mov
push
jnp
mov
mov
push
outsb
out
or
lret
add
cli
test
sarl
int3
dec
in
inc
jne
push
and
repnz
cmp
stos
mov
lods
jo
push
punpckhbw
aam
sti
jl
hlt
pop
insb
jecxz
jmp
mov
or
cltd
insl
lahf
iret
enter
push
lods
push
imul
ss
imul
push
es
cli
ss
push
adc
or
cltd
dec
ljmp
mov
call
or
enter
jmp
push
mov
xlat
fiadds
ret
sti
aad
nop
dec
mov
push
xchg
gs
push
jbe
ficompl
mov
mov
add
mov
lock
adc
pop
xchg
fxtract
sarl
rcll
or
pusha
out
cmp
leave
and
addr16
cmpsb
cmp
xorl
mov
loop
mov
sbb
pushf
fimull
jae
push
dec
data16
cmc
addr16
xchg
pop
mov
jno
in
xor
sahf
shll
inc
adc
inc
and
jge
pusha
repnz
clc
add
sar
mov
cli
mov
push
jecxz,pn
push
in
add
addr16
out
sti
push
sbb
mov
popa
jecxz
xor
adc
xor
sub
sub
pop
aad
repnz
pop
repnz
out
xor
add
or
mov
adc
movsl
mov
sahf
jbe
mov
jno
addl
inc
dec
shll
jo
push
or
or
push
stc
sbb
and
loopne
pop
pop
test
adc
jbe
mov
mov
pop
mov
das
leave
addb
mov
rolb
sbb
repz
pop
mov
push
pushf
sbb
aad
out
cmp
adc
mov
or
jns
repz
push
ljmp
int
mov
fisubrs
aaa
mov
pop
sub
das
shll
add
sti
mov
scas
or
outsl
and
jbe
arpl
xor
mov
xor
push
in
and
inc
fcomp
mov
gs
and
cmpsl
and
add
sbb
dec
mov
ds
pop
aaa
sub
stos
or
in
stc
pop
sahf
sbb
xor
ja
jno
dec
cwtl
out
add
imul
jle
gs
das
cli
cld
sbb
ja
clc
lret
mov
sbb
mov
inc
ja
cld
push
lds
xorb
mov
ret
inc
in
hlt
dec
add
jbe
pushf
and
pop
push
idivb
mov
push
mov
push
out
test
shl
push
jo
push
or
push
les
inc
dec
push
stos
inc
mov
adc
and
icebp
dec
jae
inc
mov
pushf
ljmp
insl
das
mov
vmovdqa
fsubrl
sub
and
xchg
adc
icebp
sbb
xchg
sbb
and
out
movsl
push
mov
iret
mov
in
jae
int
push
ds
mov
xor
dec
xchg
or
lahf
or
xchg
repnz
jl
faddl
sub
lret
outsb
xor
jns
cmc
int
int
lods
xor
mov
mov
fidivrs
sahf
inc
hlt
pop
inc
or
loopne
or
outsb
addb
cltd
sbbl
negl
lcall
push
xchg
in
addr16
orb
adc
rclb
sbb
outsb
cmp
push
rorb
pushf
push
aad
cltd
mov
jmp
idivl
and
jp
mov
push
mov
in
mov
outsl
push
mov
push
insl
popf
lock
xorb
xor
inc
das
mov
pop
jmp
out
mov
sbb
cmp
sarb
repz
push
mov
test
sbb
jns
inc
sti
jns
cmp
xchg
dec
jmp
mov
int3
xor
ret
fmul
lcall
out
add
out
mov
loop
sub
pop
icebp
inc
dec
loop
dec
and
icebp
lods
push
stc
icebp
jnp
adc
into
sub
sbb
pop
in
add
lods
addb
xchg
cs
xor
jl
pusha
popa
dec
mov
and
mov
sahf
cmpsb
xor
xlat
jae
pop
jl
popf
jnp
push
push
jo
jb
outsb
pop
pop
sbb
mov
mov
idivb
xchg
and
jbe
test
fiadds
jb
or
lds
test
ljmp
xor
ret
into
xorl
adc
or
shl
addb
jg
mov
push
aam
pop
add
enter
xor
jae
jbe
not
clc
jne
mov
jl
stos
mov
out
dec
sahf
sub
push
add
into
push
lea
mov
sbb
aaa
jnp
fabs
stc
dec
sub
subl
xlat
js
and
jbe
stos
sub
jae
out
push
jnp
jnp
out
loope
push
push
add
stos
pusha
out
xor
adc
lret
fldl
loopne
out
jae
and
fwait
jp
cwtl
clc
adc
lret
ds
jge
push
pop
pop
cld
and
lock
in
push
imull
in
idivb
ficoml
xor
rcrb
orl
and
or
adc
pop
mov
mov
out
movsb
loope
xchg
insl
jmp
cwtl
mov
iret
xchg
data16
hlt
imul
jg
mov
sbbb
dec
in
dec
sbb
mov
mov
mov
xor
ja
and
dec
shll
sub
rclb
imul
je
inc
jns
jnp
ret
ds
cmp
movsb
sub
mov
repnz
es
paddb
aam
lahf
popf
loopne
adc
stc
mov
cltd
xor
pop
fnsave
jl
sarl
push
xor
push
mov
mov
jno
xchg
fadd
shl
inc
js
fsubrs
mov
xchg
inc
mov
stos
cs
mov
movsb
inc
xchg
fimuls
imul
mov
js
aas
ja
push
or
rcrl
shrl
inc
jmp
mov
jo
ss
inc
add
mov
iret
call
ds
push
inc
xchg
adc
pop
loope
mov
push
dec
call
daa
inc
sub
xchg
or
int3
lea
xorb
jo
mov
mov
fldl2t
popf
jne
int
dec
inc
loope
pop
xchg
cmp
out
insl
mov
cmp
les
or
mov
jae
ficompl
mov
pop
lret
inc
cs
stos
faddp
out
fadds
test
addb
faddl
pop
push
lods
add
pop
mov
xchg
dec
cli
pop
inc
test
inc
popa
pop
call
sub
fs
test
mov
inc
mov
loop
xchg
in
pop
fcomps
or
aas
mov
mov
mov
cmp
jnp
xchg
jbe
or
push
int
xor
xchg
jno
push
pop
insl
push
mov
push
or
adc
xchg
in
inc
int3
mov
xchg
xor
mov
cs
stos
pusha
mov
addl
imul
scas
jl
dec
dec
xchg
pop
push
xlat
sbb
xor
or
loopne
adc
outsb
or
mov
nop
add
lahf
sti
xlat
inc
pop
jmp
mov
or
fcomp
out
sbb
pop
sub
pop
and
and
lods
call
mov
jp
lahf
lcall
cmpsl
inc
je
mov
mov
xchg
jp
jle
dec
insl
pop
loopne
dec
pop
pop
lods
pop
pop
jp
imul
adc
out
dec
jmp
dec
inc
mov
into
mov
dec
loopne
fistpl
mov
xchg
mov
out
mov
mov
cli
out
or
push
xchg
addb
jp
mov
pop
ja
inc
fcmovnbe
sub
inc
clc
ret
cmp
jle
fdivr
push
leave
sbb
xor
das
inc
popf
xchg
fsubrs
or
xlat
cmpsl
shlb
in
or
inc
negb
lds
cmpsb
push
jae
testl
pusha
fdivrl
stos
sub
lea
dec
shlb
aam
pushf
imul
int
leave
xchg
mov
std
js
mov
sbb
xor
push
and
mov
push
xchg
mov
iret
mov
cmp
addl
or
dec
ss
mov
mov
andl
lods
orl
repnz
push
dec
pop
dec
ss
jno
loopne
scas
sar
or
jmp
pop
fiaddl
push
dec
add
mov
pop
dec
jp
sbb
push
call
sbb
add
sti
add
icebp
xorb
pop
and
sbb
push
jle
xchg
stos
push
cmp
fmuls
dec
inc
jg
jge
in
ljmp
cmp
jne
aam
aam
add
std
inc
aaa
pop
xchg
ljmp
lods
jecxz
push
and
clc
xchg
jno
xor
xchg
xchg
dec
inc
out
ss
scas
jns
fcoms
call
xchg
int3
lret
pop
xor
push
cmovnp
jb
sarl
pushf
and
jl
mov
xor
fcoms
push
push
pop
leave
adcl
xchg
pushf
notl
mov
js
ljmp
ds
push
or
adcb
push
popa
into
adc
loop
movsb
or
pop
ret
int
in
jbe
cs
inc
fstpl
xor
sub
mov
xchg
jmp
xchg
pop
cs
loop
std
sahf
jl
fadds
xchg
imul
adc
fsubr
or
push
std
enter
push
out
out
inc
movsl
pop
arpl
rcl
movsb
loope
and
and
pushf
mov
mov
pop
out
lret
sub
clc
mov
or
addr16
adc
mov
leave
xchg
xor
je
ret
push
jp
icebp
jb
mov
fnstcw
fdivrs
jge
cmp
inc
cmp
and
out
jo
sbb
cs
mov
xchg
mov
mov
je
and
arpl
negb
pop
xor
sti
push
xchg
inc
jbe
cmpsb
xchg
mov
dec
rclb
sbb
mov
insl
cmpsb
dec
dec
pop
add
xor
ds
aas
subl
push
jnp
lods
in
add
loopne
data16
inc
or
pop
inc
mov
mov
or
pop
or
xor
dec
push
jl
rclb
mov
mov
pop
in
mov
pcmpgtb
sahf
jns
lahf
orl
sbbw
mov
jge
cmp
cmpsb
or
shr
ffree
xchg
fcom
mov
xchg
cmp
add
dec
inc
mov
mov
sub
jns
or
in
inc
insb
rorl
out
mov
push
andb
sub
jnp
mov
sahf
ror
add
into
clc
push
pop
mov
stos
inc
mov
lret
dec
mov
lea
stos
mov
pop
push
mov
out
sub
sub
addb
loop
jp
jge
pop
ret
or
inc
out
das
sbb
cmpb
and
cmpsb
das
mov
dec
xchg
adc
add
test
cwtl
adc
xchg
movsb
inc
push
shl
xchg
push
mov
xchg
xchg
sbb
add
add
dec
out
lods
dec
push
bound
fsubs
sbb
jns
lcall
iret
stc
cmp
add
inc
arpl
shrb
sub
nop
or
fs
mov
and
and
pop
leave
lret
ret
sub
fstpl
cmp
adc
fs
addr16
cltd
hlt
mov
adc
cmp
push
mov
xchg
adc
jecxz
nop
mov
inc
mov
push
test
mov
sbb
mov
xorb
scas
imul
xchg
js
mov
mov
or
cmp
sarl
andl
pop
stc
add
sub
nop
cmp
pop
sti
or
lock
pushf
into
and
mov
in
scas
mov
xor
ljmp
sbb
jl
xorl
xchg
mov
jnp
xlat
scas
sub
test
xchg
pop
xchg
or
adc
push
rclb
lds
lea
cmp
and
push
and
aad
jo
or
lods
adc
push
xor
insl
mov
bound
xchg
sub
mov
out
rcl
xorl
sti
dec
mov
add
or
stc
xchg
cmp
fcmovbe
adc
stc
in
sub
ds
sbb
insl
mov
cmp
pop
jae
popa
push
inc
mov
addr16
dec
dec
push
mov
les
cmp
adc
test
cmp
adc
xchg
pop
jmp
push
ja
jge
sarb
mov
push
pop
mov
jns
push
fisubs
loop
ja
mov
inc
pop
sbb
mov
loop
xor
inc
ds
insl
call
leave
adc
inc
dec
mov
aaa
es
mov
lcall
imul
mov
imul
mov
or
adc
sbb
in
adc
sub
pop
pop
cmpsl
insl
jbe
mov
xor
loope
aam
scas
aam
fcompl
sbb
xchg
xchg
je
jp
xchg
xchg
inc
push
std
mov
imul
sub
jmp
sub
adc
mov
xchg
mov
mov
xor
mov
adc
or
lods
iret
adc
mov
jmp
sub
pop
loope
mov
inc
push
xchg
js
or
invd
add
jne
push
jo
xchg
xor
adc
pop
aad
push
push
inc
and
imulb
cmpsl
pop
xchg
nop
insb
lcall
xchg
mov
add
insl
dec
ja
mov
insb
sub
ja
add
out
int3
das
sbb
popa
inc
ret
or
mov
ja
test
cwtl
gs
lahf
push
sub
push
orl
lret
aam
dec
sub
sti
es
jp
mov
std
adcl
sub
jne
cs
out
stc
jns
loopne
pushf
lods
hlt
push
ljmp
or
mov
data16
push
or
int
lret
add
jmp
jmp
mov
ret
jl
mov
sub
rorb
and
shlb
pop
inc
sbb
rorb
jne
shl
or
loop
repnz
imul
out
and
dec
xchg
fnstcw
pop
nop
sahf
or
xchg
xchg
std
mov
shll
test
sub
test
mov
pop
jne
xchg
rcll
mov
or
ljmp
jno
test
fisubrs
rolb
mov
sub
lea
lcall
std
dec
mov
test
dec
jb
sbb
out
fsts
push
dec
pop
mov
mov
push
iret
fld
scas
aas
out
loop
xorb
ljmp
inc
sahf
and
xchg
push
mov
push
inc
dec
clc
lea
mov
fs
xor
mov
dec
mov
aas
jno
repnz
xor
pop
pop
cli
push
mov
xchg
dec
push
fiaddl
ret
sbb
xchg
fdivl
js
test
sti
adc
jno
xchg
dec
ds
shr
negb
xor
add
sbb
les
das
jl
xchg
pop
jmp
jbe
xor
mov
mov
stos
mov
mov
push
pop
loop
aam
cmp
add
inc
pusha
cwtl
lock
ja
pop
cmp
sub
into
fdivr
cmp
jp
popa
dec
call
push
sbb
push
les
div
data16
pop
or
xchg
cltd
test
enter
out
jecxz
or
jne
rcr
jecxz
jb
das
lahf
dec
into
rcll
sbb
mov
xor
enter
mov
fcomps
inc
sub
inc
mov
std
je
jo
imul
add
jbe
in
pushf
scas
ja
dec
xorl
and
push
push
lods
arpl
ficomps
xchg
lret
out
mov
mov
scas
test
pusha
dec
jle
addr16
cmc
push
jns
loop
scas
popa
into
cmp
popf
mov
fidivs
jmp
sub
pop
pushf
cmpl
push
or
fstps
imul
cmc
adc
or
iret
pop
ja
inc
test
xchg
xchg
aaa
pushf
or
vmovapd
jbe
mov
sbb
mov
inc
loop
xchg
divl
sub
jo
mov
sub
jle
mov
xchg
es
pusha
inc
outsb
adc
mov
clc
push
add
pop
out
dec
dec
or
sahf
shrb
pop
adc
mov
mov
les
subl
daa
fcoms
inc
ljmp
inc
mov
int
cltd
jne
call
add
aaa
sbb
cld
scas
push
in
mov
mov
aaa
inc
outsb
jmp
pop
jmp
scas
push
xchg
sarb
cmp
fstps
std
fadd
fstl
or
mov
push
ljmp
faddl
cld
mov
scas
lret
sbb
cmp
push
adc
in
pop
bnd
mov
sbb
inc
aam
push
and
jb
xchg
sbb
sub
xor
std
or
push
inc
mov
inc
mov
inc
xabort
pop
and
inc
mov
jne
mov
dec
es
inc
stos
sub
je
mov
inc
loope
addr16
mov
pop
lahf
jae
test
imul
cmp
aam
fdivrp
or
add
in
enter
sbb
sbb
push
pop
ss
xchg
outsl
movsl
mov
rep
dec
ja
push
lret
mov
mov
or
pop
push
sahf
or
xchg
clc
cld
das
push
fs
and
adc
push
jmp
int3
dec
mov
es
xor
mov
sbb
scas
cmp
cmp
add
dec
cs
addl
cwtl
outsl
xchg
xor
pop
repnz
outsl
xor
std
mov
cmp
pop
out
addr16
inc
pop
out
dec
mov
addr16
es
pop
cli
xor
mov
push
mov
lret
setnp
int
mov
pop
push
push
out
mov
mov
sub
ds
sub
and
sub
in
lds
pop
cmpsl
mov
jecxz
jg
pop
add
mov
xchg
outsb
loopne
cld
xor
dec
nop
xor
lahf
pop
cmpsl
adc
inc
sub
enter
mov
cmp
jne
mov
jecxz
aas
mov
stos
pop
test
arpl
cmpb
push
push
dec
and
mov
cltd
jno
adc
shll
shrl
imul
ret
pop
xchg
das
std
xchg
insb
cmp
popf
sbb
jl
sub
xchg
or
dec
jle
in
test
cmp
mov
popf
cld
jnp
dec
cmp
cmp
and
pop
loop
lret
pop
or
mov
xor
pop
mov
mov
out
push
push
jo
ret
adc
and
repnz
xchg
sub
idivb
mov
adc
pop
shr
lahf
and
and
add
or
lret
jbe
iret
sahf
in
mov
les
push
cmc
test
push
dec
add
lods
scas
hlt
xchg
scas
int3
cwtl
sbb
icebp
mov
addr16
test
ds
in
mov
ja
inc
add
mov
pop
xor
push
push
push
rorb
je
dec
jge
out
sub
jnp
ja
mov
ret
add
test
push
jae
mov
sub
lea
xchg
es
push
bound
nop
mov
pusha
into
shr
or
bswap
sub
imul
into
hlt
gs
push
outsb
xor
jl
push
dec
repnz
insl
sti
lds
adc
mov
xor
pop
iret
xor
push
inc
jo
inc
or
in
addb
inc
sub
fnstcw
iret
popf
dec
in
ret
add
xchg
test
pop
adc
nop
out
push
xor
jo
cltd
stc
sub
ljmp
arpl
mov
jnp
mov
and
ret
sbb
movsl
pop
push
lret
fwait
pop
adcl
clc
xchg
or
cmp
cmpsl
add
and
sbb
adc
mov
mov
mov
add
fldenv
jmp
int
sbb
loopnew
ss
dec
testb
out
cli
lock
sbb
fistpl
xchg
scas
xor
inc
jne
pop
mov
xor
jmp
push
mov
cmp
add
mov
aaa
test
sub
cwtl
sbb
and
rclb
in
push
lea
jg
xchg
xlat
out
sbb
mov
mov
jno
fnstenv
and
sbb
and
fdivr
in
dec
out
test
xchg
dec
cmc
test
sbb
mov
cli
les
mov
mov
enter
mov
cli
or
mov
pop
pop
dec
fwait
jp
sbb
dec
cmpsb
inc
mov
lods
cld
mov
sbb
xchg
jbe
fmuls
ljmp
popa
iret
jo
inc
xor
movsl
fs
inc
cmpl
data16
mov
inc
enter
movsb
jmp
fstl
pop
jl
xor
cs
dec
cltd
cmpsb
and
fisubrs
fildll
dec
pop
stc
outsb
jb
out
xchg
inc
cli
ss
jno
mov
test
or
fiadds
pop
vandnpd
rcll
xchg
test
andl
rolw
pop
stos
jnp
cwtl
std
dec
ficoms
mov
jecxz
fs
in
sbb
in
aaa
sbb
dec
aad
loopne
sub
and
jb
fnstsw
jmp
dec
sbb
pop
notl
mov
sahf
dec
sub
ja
pop
inc
std
std
popf
dec
rorb
loopne
sbb
frstor
cltd
hlt
lds
clc
inc
mov
in
jnp
pop
adc
loopne
pop
mov
outsb
adc
div
ret
dec
sarb
outsl
and
inc
sub
add
test
jge
int
sub
xchg
ja
mov
lea
fsub
xorl
mov
inc
popa
stos
adc
stc
dec
faddl
ljmp
add
jbe
shlb
shlb
ficoml
repnz
pop
repnz
scas
scas
adc
xor
cmpb
ljmp
lods
negl
jmp
cmp
push
push
loopne
dec
into
cmp
or
push
cmp
out
fildl
leave
pushw
adcl
pop
cmp
and
jmp
pop
mov
mov
mov
adcl
jmp
test
out
push
xlat
mov
rclb
aad
hlt
pop
add
in
inc
in
mov
inc
add
sbb
call
lret
js
pop
and
dec
mov
adc
add
test
sbb
push
pusha
push
mov
into
fistpl
insl
jne
mov
test
mov
ja
pop
popl
mov
insb
jp
int
movsl
loope
arpl
js
and
jns
push
scas
and
or
mov
mov
fs
gs
fistl
loopne,pn
loopne
pushf
roll
push
shrl
inc
or
sbb
cld
adc
fcmove
adc
add
adc
cwtl
imulb
mov
fidivrs
adc
cmc
pop
stc
test
cmp
mov
mov
outsb
aaa
lods
scas
inc
or
and
lods
xchg
add
shll
mov
cltd
iret
pop
sti
xchg
lret
fimuls
xlat
addl
jbe
mov
lods
jl
aas
or
out
lret
jecxz
pop
lahf
ja
push
jecxz
adc
push
or
fsubrs
lock
gs
xchg
cmp
xor
addr16
sti
or
and
movsb
sub
mov
xchg
jl
cwtl
push
push
add
mov
jns
push
mov
mov
mov
jae
sub
inc
xchg
out
outsl
and
call
cmpsb
cmp
dec
push
dec
mov
popf
and
ja
les
mov
decb
mov
mov
call
sbb
xchg
mov
pop
stc
add
jp
outsb
push
call
sub
mov
jg
ljmp
test
xor
push
jle
ret
pop
inc
xchg
push
test
xchg
mov
xchg
clc
add
add
pop
xor
movsb
ret
push
xchg
test
push
add
fdivs
lea
and
fisubrs
fidivs
push
xchg
rcrb
lret
mov
xchg
mov
sahf
cmp
dec
test
cmp
cmp
lock
out
cmpsl
cld
in
mov
push
dec
aaa
rcl
enter
les
or
scas
add
sbb
in
iret
mov
fnsave
fs
into
cli
inc
mov
xchg
or
push
testl
pop
loope
jne
popf
mov
mov
jns
js
std
rep
andl
cwtl
sub
ja
dec
jle
push
or
hlt
pop
cwtl
adc
divl
popf
sti
mov
stc
scas
std
fcoms
inc
pop
insb
jo
xor
push
sahf
push
leave
aaa
xor
fadd
je
sub
sub
cs
nop
mov
ljmp
mov
hlt
lea
mov
scas
mov
js
pop
xor
push
cs
ljmp
test
pop
daa
and
ss
mov
jnp
push
mov
jp
mov
and
and
adc
test
cmc
mov
dec
inc
mov
enter
daa
ja
in
cmp
lret
outsl
inc
pop
lea
addr16
sbb
push
adc
push
dec
arpl
ds
ficoms
or
es
outsl
lods
imul
jnp
filds
add
mov
adc
add
sub
jbe
inc
jle
sub
cmp
repz
pop
jmp
mov
cmpsl
jmp
es
push
cmp
in
lea
scas
iret
lahf
mov
jg
mull
out
mov
inc
les
mov
add
in
test
ds
dec
mov
std
dec
in
lret
ret
inc
xor
jne
dec
les
cmp
push
add
mov
fildl
js
sub
sub
pusha
out
push
sub
aas
or
pop
fldenv
sub
xchg
mov
sbb
push
cltd
jns
push
push
sub
jb
lea
add
rcr
jno
add
cmp
sbb
orb
jno
or
pop
xor
insl
mov
xchg
cmp
dec
jge
add
or
lods
testb
lret
cld
repz
je
or
push
mov
xchg
dec
dec
mov
ret
fcoml
xor
sbb
xchg
push
push
sti
fwait
xchg
cmp
aaa
cmp
and
xchg
mov
cmp
pop
popf
mov
sarb
mov
cmpsl
xchg
loop
ret
imul
cmpsl
fmulp
mov
jp
inc
movsl
add
in
lret
pop
mov
ret
and
aam
pop
int3
push
pop
ss
push
movsb
push
inc
mov
insl
cli
cmp
sbb
xor
shr
ljmp
clc
pop
mov
add
add
or
push
das
and
pop
mov
cwtl
shll
lods
out
xchg
xor
sbb
mov
into
xchg
outsl
dec
or
xchg
arpl
mov
outsb
popl
iret
negl
fistpll
push
xchg
mov
insb
inc
pushf
xor
lods
repz
pop
pop
and
test
mov
jne
xor
aad
dec
xchg
jmp
ss
outsb
enter
ss
mov
jecxz
rolb
jg
outsl
sub
fwait
xlat
dec
inc
xor
push
jno
adc
add
aas
ss
mov
or
out
in
std
xor
xchg
cmp
jl
adc
inc
jne
xchg
mov
mov
sub
and
lahf
mov
xchg
sarl
jecxz
out
sub
pop
icebp
mov
sbb
test
push
fwait
icebp
add
xchg
test
dec
lock
xor
xor
add
imulb
mov
xchg
cmp
jge
daa
filds
adc
push
jecxz
inc
fdivr
pushl
pushf
cmp
push
add
ja
mov
iret
adc
mov
jle
xlat
in
mov
push
sarl
mov
dec
outsb
or
xchg
aad
insb
mov
push
in
daa
fs
test
jnp
addr16
insl
in
sub
sub
data16
mov
or
jbe
in
push
stc
test
inc
push
xorb
imul
ss
les
sub
pusha
test
mov
mov
xor
stos
mov
mov
scas
push
or
inc
lea
into
sbb
adc
jo
push
pop
lret
scas
inc
cs
cs
adc
push
cmp
in
mov
in
jmp
sbb
sarb
into
and
outsl
xor
shl
fbld
mov
fistps
mov
pop
xchg
xor
es
stos
xlat
pop
lods
jo
mov
notb
mov
sub
jmp
data16
hlt
ficoml
insl
xor
int3
xor
pushf
insl
ret
int
out
sbb
jbe
push
sysret
push
sbb
mov
aaa
jbe
and
ja
fnstenv
sub
aam
in
hlt
adc
xchg
ja
sarl
sbb
adc
push
sub
adc
lret
repz
push
mov
repnz
mov
test
lahf
in
les
pushf
lods
mov
mov
loop
xchg
data16
stos
es
xchg
cs
fwait
mov
dec
fmull
and
and
sbb
iret
pop
call
into
push
loop
fwait
or
lock
jae
xchg
test
xor
or
lods
ljmp
push
lock
xchg
jbe
sbb
out
stos
clc
dec
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
jmp
incl
je
fs
mov
add
add
jp
movsl
sbb
dec
sub
movsl
enter
cmp
mov
xor
pop
mov
jae
jecxz
mov
xorb
xchg
mov
rolb
movsl
pop
sahf
das
fsubl
and
push
or
xchg
sbb
lahf
add
es
xor
das
xor
adc
pop
mov
jbe
inc
lods
outsl
popf
jmp
mov
dec
bound
dec
add
push
mov
push
mov
cwtl
ret
leave
call
in
shl
lods
or
mov
dec
idivb
mov
into
mulb
scas
push
pop
clc
and
mov
icebp
sbb
and
gs
cmpsl
subl
lret
add
lcall
xchg
addr16
mov
les
cmc
xchg
push
xor
sub
es
jge
shll
fisttpl
daa
scas
shlb
data16
decb
push
nop
fs
sub
mov
mov
in
out
lcall
push
shll
pop
and
pop
add
mov
or
mov
or
sub
into
aas
inc
loop
fdivs
mov
out
lahf
pop
loop
daa
xor
jl
xor
sahf
push
jg
shll
repz
and
cmp
hlt
mov
pop
push
mull
pop
jns
fistps
ds
push
add
xchg
or
sbb
pop
and
or
jle
mov
loop
xchg
scas
push
les
xor
jmp
mov
imul
adc
mov
and
in
mov
mov
pop
xor
in
in
adc
inc
and
cmp
das
jo
mov
outsl
in
xor
xor
pusha
pushf
push
pushl
push
lock
mov
addl
jp
cmp
shl
pop
jmp
scas
xchg
jge
cltd
push
les
scas
iret
cpuid
aaa
and
cmpsb
adc
shl
pop
dec
rclb
inc
jbe
push
mov
jae
xchg
icebp
std
cmpsl
cmp
test
push
lea
dec
es
shl
loopne
xchg
inc
fsubs
or
mov
or
mov
push
enter
push
bound
adc
mov
add
xlat
push
cmpsb
xchg
jae
pop
and
loop
add
jge
push
fwait
pop
dec
out
movsl
pop
mov
jp
add
lret
inc
scas
xchg
nopl
fidivrl
or
addr16
into
jo
outsb
pop
sub
or
fistps
out
les
cmp
cli
insb
sub
stc
scas
int
xchg
mov
es
adc
lods
adc
add
xchg
add
test
sbb
inc
add
and
loopne
mov
mov
dec
xor
mov
movsl
xchg
add
out
dec
pop
push
jb
mov
hlt
mov
sub
xor
ret
shl
mov
sub
shlb
outsb
js
movsl
mov
outsl
ror
mov
popa
rclb
scas
mov
sub
in
repnz
mov
out
sub
daa
jmp
pusha
mov
popl
in
jno
pop
add
fmuls
dec
add
jg
loope
cli
dec
arpl
divb
scas
mul
mov
ret
int
mov
xor
lea
pop
mov
mov
imul
or
mov
loop
dec
adc
cmc
jb
sbb
xor
loopne
or
add
mov
imul
mov
shlb
jl
cwtl
sub
mov
ficompl
pusha
inc
inc
push
loop
lret
ret
mov
cmp
xchg
inc
and
mov
addr16
pop
xchg
sub
push
cmp
sbb
jns
pop
mov
ret
xor
jg
notb
pop
add
scas
rorb
jb
push
das
push
jle
movsb
pop
fdivs
aas
orb
ljmp
scas
cmp
xchg
jo
scas
mov
sub
nop
mov
cmc
aas
ljmp
pop
in
jne
gs
mov
ss
inc
sub
cltd
mov
pop
cmp
push
cltd
dec
xor
push
and
xor
dec
and
adc
ret
ds
mov
lods
clc
sahf
ljmp
add
int3
adc
jecxz
sub
adc
pop
mov
pushf
lcall
push
add
pop
cmpl
ret
mov
pushf
mov
push
lea
jmp
push
add
and
dec
mov
sub
imul
das
xor
adc
sbb
and
mov
repnz
mov
jno
lds
clc
cmp
insb
gs
adc
lods
pop
fs
add
call
mov
sbbl
inc
pop
pop
lcall
push
cld
sbb
addl
lock
inc
sarb
push
lock
mov
loope
iret
mov
ja
adc
pop
dec
mov
sbb
cld
push
test
mov
call
xchg
scas
pop
dec
add
enter
scas
ja
fstl
mov
adc
int3
lahf
iret
and
jmp
ljmp
loopne
cld
dec
push
inc
leave
js
jecxz
out
stc
pusha
lahf
add
mov
test
cmp
inc
ftst
jmp
jmp
jns
add
arpl
jbe
stc
in
test
js
mov
xor
mov
fcmovnb
xchg
xchg
into
scas
mov
pop
mov
inc
cmp
pop
push
jb
cmc
lahf
sub
mov
stc
xor
addr16
into
insb
dec
push
cmp
repnz
sbb
test
inc
or
js
push
cmpsb
dec
stos
xlat
pop
sbb
imul
pop
and
pop
in
pop
add
andb
mov
adc
je
mov
clc
lret
inc
mov
hlt
cltd
sbb
ljmp
jle
adc
lods
ljmp
mov
pop
sbb
dec
dec
dec
bound
push
xlat
mov
sbb
outsb
aad
or
xchg
sub
jmp
adc
in
ret
lock
fldcw
hlt
xchg
int
pop
out
add
mov
inc
stos
push
test
and
lcall
dec
xor
add
pushf
bound
push
imul
popf
add
daa
in
lahf
mov
orl
mov
dec
inc
mov
imul
mov
test
and
out
pop
mov
fdivrl
shrl
add
jns
loop
insb
loopne
enter
inc
adc
add
loope
scas
pusha
sub
test
popf
pushf
aaa
cmpsl
add
jne
sub
inc
push
das
mov
iret
jle
and
adc
xchg
sbb
sbb
clc
sbb
jg
cmp
mov
rol
push
add
xchg
daa
xchg
or
pop
hlt
fsubrs
cmpsb
jnp
shrl
call
idivl
int
push
rcll
jbe
xchg
sbb
pop
xchg
ja
imul
sahf
out
gs
adc
push
adc
or
popa
clc
mov
hlt
jb
xchg
popf
xchg
movsl
mov
dec
mov
hlt
pop
cmpb
lods
adc
jp
push
imul
xchg
lds
gs
mov
icebp
pop
dec
fbstp
lea
jb
jg
lahf
cmpsb
sub
jmp
sub
xchg
stos
mov
ljmp
int
ret
dec
push
xlat
add
fmuls
mov
adc
ret
ss
es
js
test
fildl
dec
push
shll
insb
das
lods
test
decl
xchg
mov
ret
sbb
hlt
jns
jbe
cmp
add
push
push
call
xchg
cld
jge
add
and
mov
mov
sub
sbb
or
mov
push
arpl
xchg
pop
xor
mov
ret
in
adc
into
sub
lock
sub
and
jae
mov
outsl
lds
pop
ss
ds
ud0
sub
addl
jge
popf
gs
inc
dec
popf
and
fs
popa
cs
dec
inc
pop
or
jge
push
xchg
imul
leave
into
aaa
cwtl
bsr
imul
mov
sbb
inc
cmp
outsl
lock
xlat
add
fcmovu
jp
mov
outsb
and
push
or
or
and
jae
ret
mov
dec
or
mov
jle
and
jns
pop
mov
add
sub
jecxz
add
jnp
add
mov
das
jno
ljmp
inc
test
stc
lock
cltd
sub
xchg
sahf
sbb
iret
mov
movsl
sbb
fcmovnu
gs
push
and
xchg
in
out
push
xchg
pop
pusha
ljmp
sahf
add
and
aam
inc
mov
mov
inc
pop
fsts
sub
test
push
xchg
jl
xchg
daa
lret
test
xor
add
dec
fists
insl
pusha
orl
in
push
push
xchg
stos
inc
js
mov
mov
pop
inc
mov
pushf
test
pop
in
leave
movsl
mov
fs
mov
loope
sbb
cmp
xchg
out
repnz
popa
push
and
xor
stc
mov
inc
iret
mov
dec
outsl
aas
xor
mov
call
push
sub
jb
js
mov
sub
fnstenv
add
fs
push
es
lcall
enter
lret
add
into
push
lds
loop
lock
loope
push
mov
mov
sbb
lods
pop
rolb
rcll
inc
int3
xlat
mov
add
and
jp
je
ljmp
mov
sti
pusha
adc
mov
mov
mov
xchg
out
sub
inc
lods
jle
and
data16
mov
test
xchg
fldt
bnd
cmp
inc
xchg
mov
cs
pop
les
test
and
sbb
mov
cs
and
adc
push
and
imul
out
jle
jbe
xchg
cmpsb
add
sbb
adc
pop
arpl
pop
xchg
pop
imul
jle
mov
outsb
pop
push
and
orl
testb
dec
fcomp
dec
je
xor
idivb
jb
popa
lret
pop
mov
movsb
mov
and
pop
jl
pop
sbb
mov
sub
fucom
pop
arpl
sbb
inc
push
fimull
je
pop
cld
push
sub
push
gs
push
sub
fstl
xor
cmpsb
es
pop
add
lods
xor
sub
lret
or
es
or
and
and
mov
enter
xor
sub
fnstenv
popa
adc
dec
adc
fidivs
fbld
sub
push
sbb
mov
shll
xor
mov
insb
dec
pop
and
lock
lds
popa
insb
mov
cmpsb
mov
push
cmp
add
cmp
aaa
ljmp
dec
data16
ret
or
das
xchg
or
gs
ja
inc
std
mov
ret
repnz
das
outsb
pop
lret
push
sbbb
fwait
sbb
xchg
pop
xor
mov
fs
subb
call
lret
jl
aad
jo
dec
cmpsb
sub
jae
xor
push
push
or
xor
sub
pop
mov
sub
jg
mov
pop
pushf
insb
and
adc
cmc
xchg
sbb
xor
inc
mov
out
cmpsb
cmp
xor
pop
xor
sbb
or
lock
jnp
add
stos
std
cmp
shrb
decl
ljmp
nop
and
sbb
aam
fstl
faddl
das
enter
pop
add
adc
lods
fucomi
adc
addl
xor
add
scas
lret
lret
pop
xor
arpl
pop
adc
sub
inc
mov
lods
inc
es
pusha
and
mov
bswap
push
dec
sbb
cmpsl
mull
mov
cltd
inc
add
call
cmp
inc
mov
jne
dec
push
testl
jnp
lcall
xchg
push
js
add
push
aam
dec
jns
fisubrs
adc
xchg
fcompl
lds
mov
sbb
xchg
stc
loope
daa
dec
adc
movnti
icebp
mov
xor
aas
xorb
repnz
xor
mov
mov
dec
inc
push
fists
mov
cmc
jae
mov
mov
ficoms
and
jp
addr16
cmp
sbb
pop
cli
jecxz
ljmp
push
insb
stos
sbb
inc
adc
push
mov
roll
test
adc
adc
std
sbb
mov
pusha
sbb
mov
pop
push
xchg
repnz
dec
popa
mov
jno
rcrl
enter
test
loopne
hlt
idivl
dec
pushf
fprem1
cmp
mov
es
inc
push
ret
loopne
lret
or
dec
push
and
cli
sbb
mov
ds
addr16
adc
xor
pushf
out
dec
imul
xor
mov
repnz
test
push
mov
mov
test
xor
jle
in
es
sub
inc
adc
push
mov
loopne
xchg
iret
pop
mov
jo
dec
inc
inc
jmp
testl
cwtl
mov
lock
mov
xchg
pop
test
mov
mov
sub
jmp
adc
add
fildll
or
and
lcall
mov
mov
aam
add
inc
adc
sub
cmp
pop
mov
and
mov
mov
dec
cwtl
addr16
js
mov
adc
shll
sahf
jno
lods
and
ja
mov
adc
test
push
pop
pop
mov
mov
jne
testb
adcl
or
xchg
jl
jl
adc
pop
xchg
pop
xor
cli
inc
sbb
in
adc
jge
sub
mov
mov
sbb
sub
aaa
int
nop
sahf
pushf
xor
mov
les
fwait
sub
out
xor
mov
xchg
scas
mov
incl
and
mov
mov
mov
loopne
daa
test
xor
dec
sti
xor
in
mov
xchg
mov
jbe
xor
xlat
push
inc
negb
mov
hlt
cs
or
andb
pushl
stos
cli
or
imul
out
cmp
add
pop
jmp
mov
in
adc
cmpps
jne
add
dec
mov
adc
je
mov
add
mov
cmp
mov
in
or
jl
mov
lret
cmp
lret
add
cs
je
loop
movsl
cmp
ret
in
mov
pop
data16
and
mov
push
sbbb
shlb
xor
cwtl
dec
stos
mov
jge
pop
or
mov
push
mov
cltd
dec
mov
or
add
jno
push
js
clc
adc
add
movsb
movsb
repz
mov
xorl
cmpsl
outsb
ljmp
inc
imul
adc
andb
pop
mov
ret
ret
jmp
lock
pop
cmpsl
lds
pop
imul
int
xor
cmp
mov
or
mov
dec
lds
jg
lods
fstpl
loopne
int
cmpsb
dec
adc
lahf
in
bound
fs
inc
and
push
dec
inc
icebp
dec
idivb
ret
push
inc
out
mov
inc
std
jae
es
or
jo
cmp
fbstp
push
jmp
int3
jecxz
lds
lret
lods
push
push
push
xchg
jmp
jo
pushf
shll
adc
inc
shrl
inc
sbb
stos
ret
pop
xchg
push
inc
into
scas
sbb
test
mov
xor
mov
mov
out
dec
ficoms
mov
popf
push
xor
call
dec
jp
insl
push
jg
pop
test
inc
ss
adc
jle
xchg
popa
adc
fadds
sbb
mov
out
mov
mov
fcompl
loop
dec
adc
inc
xor
dec
mov
jne
xchg
repz
arpl
sbb
or
xchg
rclb
jb
out
mul
stos
and
mov
sub
push
xor
dec
xchg
out
jae
and
cs
rorl
adcl
mov
imul
mov
dec
inc
fisttpll
push
repnz
sub
outsb
and
lods
subl
adcl
fs
or
mov
and
faddl
xchg
xor
ja
mov
lea
mov
mov
jbe
lock
push
sbb
cmp
pop
dec
mov
push
jns
addr16
lea
pop
pop
jbe
idiv
mov
sub
xor
push
leave
fdivl
sub
addb
lods
jmp
sbb
nop
xchg
pop
mov
stos
cmp
pop
dec
arpl
or
push
add
es
scas
lds
sub
xchg
push
and
ljmp
or
xchg
ja
jnp
aas
pop
pop
mov
sbb
shlb
xchg
mov
jge
cltd
pop
push
jp
or
mov
mov
cmp
clc
mov
dec
aad
stos
sbb
pushl
xor
and
jns
xchg
dec
bnd
push
mov
jb
lret
or
out
lock
cmpsl
nop
cmp
test
adc
xor
xchg
enter
fwait
adc
nop
out
pusha
fildll
cmp
jp
adc
cmpsl
lds
pop
xchg
stos
xchg
mov
cmp
jecxz
and
adc
sarb
sbb
fsubrs
stc
repz
adc
jmp
or
push
pop
xlat
push
iret
mov
push
mov
cmpsl
jle
aad
mov
add
xchg
aad
mov
jb
xchg
and
rolb
fsubl
repz
jl
add
pop
pop
dec
xor
cld
xchg
add
push
nop
lret
sarl
jmp
pop
xchg
out
lret
insl
fisttpll
loop
dec
inc
dec
mov
shll
jb
push
and
inc
cmc
xor
jg
mov
clc
fisttps
loope
pop
loop
je
jbe
imul
orl
xor
es
leave
daa
cmp
js
dec
mov
popf
mov
cmpsl
or
dec
inc
js
xor
aaa
xchg
cli
ret
pop
push
sbb
sbbl
les
xor
mov
aam
insb
rcr
scas
imul
xlat
sbb
mov
mov
mov
and
adcb
push
sbb
mov
aas
lods
add
std
push
leave
sbb
dec
adc
int
aam
mov
lret
mov
mov
into
push
push
xchg
jle
mov
fistps
add
lods
xor
push
leave
bound
aas
xlat
inc
adc
repnz
mov
mov
or
daa
outsb
jbe
inc
in
in
stos
fadd
pop
ss
stos
sbb
jne
fdivr
nop
loopne
inc
aam
xorl
pop
xor
lods
stos
pusha
push
rorl
ret
xor
loopne
pop
repz
aad
out
pop
mov
dec
faddl
pop
movsb
adc
mov
adc
adc
pop
ficoml
fbld
jl
push
mov
inc
push
jl
jge
sub
bound
inc
mov
sarl
xchg
push
inc
loope
xor
add
cmc
cli
hlt
or
and
enter
movsb
fstpl
call
call
test
sub
enter
pop
stc
leave
daa
aad
iret
jns
xor
mov
dec
push
jne
cwtl
inc
push
mov
fisttpll
pop
jno
pop
jno
cltd
push
cwtl
bound
outsl
pop
pop
mov
jle
jae
jnp
rcll
xor
arpl
sub
iret
out
jmp
inc
xor
dec
cmp
cmpsb
jge
inc
xorl
cmp
orl
leave
pushf
push
mov
idivb
xlat
push
or
js
adc
stc
jns
out
mov
sub
dec
loope
mov
divb
jno
inc
push
jbe
fsubrl
movsb
xchg
inc
inc
js
xchg
cmpsb
push
cmp
inc
and
scas
ret
pop
dec
insb
jb
xchg
movsb
mov
cltd
test
loop
cli
push
lock
outsl
cmp
jle
inc
add
jmp
call
insb
shrl
pusha
cmp
add
or
lods
sti
fsubr
inc
sarl
call
std
xchg
jge
loopne
xor
mov
imull
cmp
jo
jmp
pop
cmpsb
jecxz
or
cmp
cmp
iret
jmp
lahf
clc
loop
dec
and
dec
add
ret
es
sbb
cmp
popf
fcoms
out
sub
pop
aaa
xchg
pop
fisubrs
sbb
lods
mov
mov
imul
inc
aad
cmp
out
je
mov
sahf
mov
jge
fbld
and
gs
movsb
mov
adc
pusha
stos
cmp
sbb
xchg
cmpsb
iret
cmpl
stos
mov
and
cltd
xchg
sbb
outsb
lods
mov
sbb
jno
push
cs
outsb
insb
shll
jo
iret
mov
test
dec
xor
es
imul
inc
pop
std
push
or
lods
addr16
jns
add
mov
call
xchg
test
gs
test
mov
mov
dec
or
fimuls
fcoms
daa
call
pop
and
insb
mov
adc
cmpsb
push
or
lods
aaa
les
movsl
jle
add
incb
outsb
push
sbb
iret
mov
enter
movsl
sub
mov
lcall
repz
fldenv
fnstenv
push
xchg
sbb
repnz
ret
adc
mov
inc
add
cld
in
ljmp
push
pushf
xchg
loopne
jb
fwait
add
xlat
data16
and
clc
adc
rorb
pop
bound
push
jb
xchg
or
xchg
or
notb
push
sbb
stos
punpckhdq
cwtl
sbb
pop
jmp
dec
test
xor
out
xchg
call
xor
pop
jb
cltd
jg
sahf
out
notl
ds
mov
mov
shrl
jae
test
add
xor
mov
out
adc
in
sub
jbe
test
fimuls
sub
xchg
cmp
ljmp
test
cmpsl
jge
mov
mov
adc
adcl
mov
adc
pop
mov
and
repz
bound
mov
and
push
mov
loope
jecxz
out
jg
movsl
mov
sbb
fisttpll
jo,pt
lods
inc
cmp
fsts
idivl
inc
call
push
mov
movsl
sub
enter
push
push
cs
or
leave
cmp
lret
lret
idivl
cwtl
in
clc
repnz
flds
into
adc
shll
mov
dec
sbb
mov
cmpsb
insb
jne
xchg
jp
js
inc
push
stos
aaa
jge
adc
add
push
movsl
fdivrl
dec
pusha
jmp
or
fistpll
test
and
ss
lahf
xor
daa
out
inc
pop
jae
test
sbb
repnz
or
mov
popf
xchg
cwtl
nop
divb
lds
add
fcoml
jp
jns
popf
adc
sbb
inc
test
push
cmp
idivb
int3
mov
pop
push
in
nop
and
ds
sbb
popa
fdivl
pop
dec
push
jo
xchg
lea
fdivs
sub
or
xchg
cld
out
adc
divl
xor
fwait
mov
aam
ds
push
or
jno
xor
into
popf
lea
jl
movsl
cmpb
xchg
cmpsb
fucomi
mull
cmp
fcoml
mov
inc
lds
std
and
mov
mov
mov
push
out
fisubrl
mov
int
hlt
cwtl
enter
jne
cmc
rolb
sbb
pop
jnp
adc
sbb
cmc
call
popa
arpl
mov
repnz
mov
in
push
add
rclb
mov
rcrl
das
repz
sbb
xor
jns
lea
adcb
and
adc
pop
data16
adc
ficompl
ret
repnz
adc
push
les
jge
mov
rcr
sub
sbb
iret
into
push
imul
xor
jmp
jl
in
mov
test
cli
jge
adc
jnp
ficomps
xor
xor
add
pusha
or
mov
sbb
mov
repz
fs
inc
or
pop
shlb
lret
leave
hlt
out
push
repnz
jecxz
into
hlt
sub
sahf
leave
sbb
sub
icebp
cmp
movb
xor
popf
add
nop
bound
daa
subb
pop
or
jnp
fistl
test
and
push
ss
or
pop
sub
pop
popf
push
test
rcr
or
jl
fists
lret
inc
stos
mov
inc
dec
nop
adc
mov
enter
stc
adc
or
lods
fsubp
insl
adc
xor
and
pop
or
in
out
int3
xlat
cmp
sahf
jp
fsubs
lods
jl
sub
or
sub
ds
mov
cwtl
pop
dec
outsl
xchg
sbb
cmpsb
fldenv
fidivl
lock
imul
gs
lahf
jecxz
xor
rolb
mov
popf
and
push
and
jl
and
mov
loope
out
adc
push
pop
pop
cli
pop
pop
cmp
jb
sub
mov
in
xchg
and
mov
sbb
es
dec
mov
or
je
mov
mov
cwtl
push
mov
cmc
fldenv
out
les
fidivl
cmp
lahf
stc
or
jg
shlb
lock
sbb
jbe
inc
sub
xchg
das
cmp
push
outsb
lret
je
int3
or
fnstsw
fcoms
dec
push
sbb
mov
jnp
dec
sbb
pop
enter
out
in
push
fstpt
jb
out
inc
cwtl
mov
and
nop
cmp
cs
pop
mov
jmp
shrl
cmp
fbld
int3
ljmp
dec
loopne
sub
push
mov
fistps
or
mov
push
xchg
lret
xchg
push
cwtl
aaa
jecxz
das
add
lea
nop
xor
lret
mov
cmp
nop
cmp
xchg
outsl
rclb
enter
cli
int3
mov
shl
cs
pop
sti
mov
pop
call
daa
jecxz
ds
mov
in
xor
push
nop
inc
je
and
fidivs
sbb
scas
out
mov
ds
jecxz
outsl
int
jle
fidivs
add
addr16
daa
lret
jg
out
sbb
int3
add
notb
jne
lods
es
sti
sar
jo
xlat
popa
xchg
imul
pop
pushf
and
rorb
mov
push
push
lahf
iret
sub
or
pop
test
stos
xchg
sub
aaa
fs
cld
iret
pushf
aas
dec
or
inc
mov
xchg
arpl
sbb
scas
test
mov
mov
sarb
mov
in
roll
add
bswap
int
rcll
jo
inc
mov
outsb
sub
jl,pn
dec
add
fs
inc
inc
ljmp
sahf
nop
lock
push
sub
jb
outsb
in
mov
movsb
xchg
lock
fnstcw
xchg
inc
xor
in
jl
mov
mov
test
adc
jl
ret
clc
dec
in
clc
xchg
mov
push
imul
mov
mov
lret
cmpsl
push
xor
xor
nop
fdivrs
insl
dec
fwait
pop
inc
cld
neg
inc
jo
xchg
loop
sbb
shrl
out
jg
je
scas
xor
in
scas
sub
or
addr16
dec
movsl
stos
fdivs
inc
movsb
lret
and
lock
into
and
mov
ret
lret
xchg
cld
mov
int3
sbb
js
dec
daa
filds
das
cmp
outsl
cmpsb
daa
ret
adc
and
xchg
ret
cmp
popf
mov
cld
test
insl
pop
jge
push
or
call
pushf
dec
mov
push
or
push
mov
popf
scas
sub
add
mov
inc
xchg
into
add
mov
insl
add
lret
daa
xor
adc
sahf
repz
sbb
sahf
call
dec
adc
stos
aam
pop
mov
aaa
mov
aad
xchg
mov
es
adc
inc
jg
sbb
aas
mov
out
push
aaa
lret
mov
jb
push
cmp
and
repnz
mov
lahf
dec
push
int
or
add
in
sub
cwtl
loope
lds
xor
rorl
mov
call
fs
ret
mov
and
lods
neg
push
scas
enter
enter
xor
sub
push
addl
mov
inc
adc
xor
and
lods
dec
mov
mov
rcrl
xor
or
push
fldt
xchg
lock
xor
jo
fwait
cmp
ret
inc
icebp
testl
neg
jmp
mov
jne
sub
mov
jmp
add
in
rcrl
cs
outsb
push
mov
int
sub
lea
pop
popa
mov
loop
xor
adc
in
jb
adc
scas
mov
mov
movsl
cmp
cmc
fstps
jmp
pop
js
test
lret
adc
sbbl
enter
adc
xchg
and
in
mov
fwait
mov
mov
jbe
jns
xor
jne
sar
lock
cmpsl
jg
std
xchg
inc
scas
sbb
data16
test
mov
inc
inc
ja
dec
xor
xchg
fstpt
notb
in
stos
sub
sahf
adc
sbb
add
xchg
xchg
popf
adc
mov
jae
ret
mov
sbb
xor
jecxz
pop
icebp
xchg
jle
sti
add
jmp
cli
ret
inc
adc
clc
sarl
add
mov
cmp
stc
sbb
test
jmp
and
push
xchg
adc
mov
pushf
ret
mov
pop
orl
pop
sbb
or
push
filds
adc
jp
add
hlt
mov
sub
imul
lahf
cmp
pusha
lcall
mov
in
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
push
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
andl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jb
xor
mov
mov
and
sub
sub
mov
xorl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
sub
mov
sbb
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
adc
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
dec
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
adc
mov
lea
sbb
mov
xor
or
mov
adc
mov
addl
mov
mov
xor
sbbl
add
xorl
mov
orl
mov
mov
mov
sbbl
add
dec
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
or
mov
adc
mov
mov
xor
mov
subl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
add
mov
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
not
mov
sub
mov
mov
or
mov
xor
add
adcl
imul
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
add
cmp
movl
mov
movl
push
movl
je
sub
mov
add
dec
mov
mov
adcl
xor
addl
add
subl
imul
movl
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
jmp
xchg
rolb
jae
fs
movsb
xlat
arpl
jp
pop
jp
mov
mov
aas
push
sub
aaa
mov
mov
adc
rcrb
in
ja
xchg
jnp
push
dec
mov
pop
ja
int3
je
lock
testl
shlb
ljmp
add
cld
outsb
dec
jno
cs
dec
mov
pop
lret
lea
enter
dec
pop
je
push
cmp
jo
jno
les
aad
or
cli
andb
loopne
outsb
add
xchg
pusha
cld
popl
mov
out
sub
loopne
in
lret
xor
lods
test
lds
push
adc
test
jae
gs
push
ja
jp
mov
out
cmp
negb
push
inc
and
test
add
xor
push
test
mov
xchg
idivl
and
aam
xor
dec
pop
mov
dec
pop
xor
sub
jno
xchg
test
cmc
shl
adc
adc
jnp
mov
fwait
push
mov
lret
sub
mov
inc
shl
les
loopne
cmp
push
lcall
pop
mov
fs
dec
idiv
repz
sub
jecxz
adc
xchg
fcmovne
dec
outsb
jmp
jns
mov
adc
add
and
add
je
and
bnd
js
fs
inc
cmp
lret
pushf
inc
xchg
imul
shlb
test
stos
fwait
inc
ljmp
lret
loopne
xor
fxch
out
or
ret
mov
movsl
mov
xor
andb
mov
fildll
mov
rcll
xchg
cld
lods
mov
lea
push
notb
mov
inc
ljmp
ljmp
lods
cmp
fcompl
mov
adc
push
scas
jb
sub
nopl
faddl
pop
imul
shlb
add
rolb
mov
pop
add
fdivrs
addb
cmpsl
ljmp
cmp
pop
and
ret
xor
mov
dec
in
xor
cmc
mov
movsb
fs
xchg
out
fwait
ds
cmp
lods
fwait
mov
aam
dec
es
cli
xchg
mov
or
mov
mov
add
popl
pushf
push
cmc
test
rorb
add
bound
rcll
loop
cmpsl
test
mov
sar
fwait
and
outsl
inc
mov
mov
xlat
push
push
and
cmp
xor
int3
in
add
xlat
repz
adc
sub
sub
lods
mov
add
mov
fcomps
xor
movsl
xor
and
jb
xor
dec
pop
dec
outsl
pop
idivb
add
xchg
push
out
push
bound
jmp
insl
dec
movsl
adc
jp
fwait
push
adcl
lahf
xor
imul
shlb
daa
push
notb
push
jb
push
jno
xchg
add
out
pop
into
in
mov
repz
sbbl
sbb
cwtl
sub
cwtl
mov
pop
mov
and
cmp
call
gs
sub
or
cmp
pop
jmp
loop
nop
je
aaa
pusha
hlt
push
push
out
nop
rcr
mov
lcall
test
mov
pop
jns
xor
adc
sbb
aas
mov
xlat
jecxz
mov
xlat
push
fsts
shll
insb
sbb
mov
gs
pop
push
mov
dec
push
xor
mov
popa
js
cwtl
mov
mov
pop
or
mov
cmp
addr16
push
pop
push
jmp
push
dec
or
xchg
xor
sti
bound
mov
ljmp
filds
rorb
mov
add
fiaddl
jnp
leave
jo
insl
int3
sub
xchg
sub
pop
in
repnz
mov
iret
sahf
xlat
dec
in
adc
stos
stos
movsl
stos
rcrl
rcll
dec
clc
mov
cmp
jnp
cmpl
mov
jae
imulb
add
sbb
add
dec
xchg
sahf
mov
lahf
inc
xor
stc
imull
stos
lcall
mov
das
adc
in
dec
std
loope
stos
popf
or
sbb
iret
push
outsb
fwait
data16
pop
xchg
cmp
out
dec
push
into
jbe
add
xor
pop
loope
ret
lret
sbb
add
das
lret
jmp
mov
add
xchg
mov
jp
push
push
aad
ficompl
xor
je
test
in
add
out
jo
inc
ja
sarl
mov
cmp
inc
xchg
and
cli
stos
cmp
aas
push
xchg
sub
out
daa
ror
insb
mov
in
adc
sbb
out
popf
ljmp
xlat
ds
and
std
pop
mov
dec
lods
icebp
mov
pop
jno
jmp
xchg
sbb
je
mov
pop
add
mov
adc
mulb
pusha
mov
lods
mov
lahf
mov
fwait
cmp
mov
ja
outsb
or
xchg
leave
inc
fsubs
sub
nop
adc
jns
mov
test
cwtl
push
aas
cmp
or
jnp
push
xor
sbb
push
mov
fstps
or
and
lock
cmpsb
out
cmpb
hlt
pop
test
add
mov
cmp
sti
jl
and
cmp
jl
insb
mov
insl
rorb
pop
mov
cmp
jno
hlt
and
sub
stos
in
test
loop
mov
gs
jns
and
sub
out
xor
dec
jo
enter
stc
jge
jae
shll
mov
cli
test
dec
lds
addl
ss
fdivp
cs
imul
in
roll
jl
xor
pop
cmp
jae
and
push
fnstenv
push
mov
jns
mov
dec
xchg
cli
mov
dec
cmc
das
xlat
ljmp
mov
pop
int
jl
sbb
push
bound
inc
xor
es
xlat
jo
insl
jb
mov
mov
or
cmp
cs
lcall
add
sarl
xchg
sub
into
sub
test
test
push
adc
sub
jo
rclb
push
pop
adc
int3
cmc
outsl
sbb
fistpll
shll
sbb
ret
lock
neg
test
push
mov
mov
and
pop
pop
adc
and
out
add
dec
and
push
je
cmc
daa
xor
cmpsl
dec
aam
insb
mov
mov
mov
and
sub
pop
out
test
or
push
adc
pushf
loopne
and
push
xchg
fs
xor
movsb
nop
out
test
mov
dec
je
sarb
rcr
daa
mov
jnp
pop
fsubl
andl
rorb
ret
mov
addr16
push
lahf
popf
in
mov
adc
ljmp
cld
call
cltd
testb
imul
inc
out
into
xchg
mov
jbe
cmc
adc
cld
mov
mov
pushf
rcll
push
je
mov
xlat
jle
sub
cmc
inc
jecxz
outsb
stos
sbb
sbb
push
aas
mov
and
add
fstpl
xchg
mov
push
aas
push
xor
insb
cmp
mov
test
aam
xchg
call
lods
das
stos
lret
push
lods
cmp
stc
push
xlat
aas
stos
or
mov
mov
mov
in
pop
shr
jb
fs
or
push
sahf
call
inc
cltd
daa
adc
add
movsl
adc
dec
or
adc
lret
test
mov
mov
mov
addr16
fmull
mov
fwait
test
rorl
jp
in
pusha
xchg
dec
sti
xchg
insb
sbb
mov
pop
push
xchg
fwait
push
in
push
pop
xlat
loop
stos
fadd
xchg
jle
lock
xchg
dec
daa
inc
push
push
and
insl
icebp
pop
faddl
jnp
cmp
mov
mov
xchg
lods
jo
scas
mov
pushf
push
call
mov
mov
cmp
enter
pop
adc
sub
mov
sahf
or
xchg
or
inc
pop
nop
cmp
and
rcrl
jb
or
mov
jg
sub
adcb
lds
jne
icebp
imul
and
mov
inc
xor
out
pop
aam
push
inc
mov
cmp
dec
or
add
xlat
jae
pop
stc
jl
inc
pop
jae
sbb
pop
in
jmp
jge
and
aad
dec
pusha
inc
jb
xor
push
xor
mov
pop
mov
aam
std
or
das
fsubp
pop
mov
push
xor
mov
sbb
xchg
std
mov
out
and
out
hlt
imul
pop
in
cmp
in
xor
test
adc
xor
mov
icebp
mov
int3
fbld
mov
shr
in
das
bound
jle
das
ja
jae
iret
fnsave
aas
pop
mov
add
dec
fstl
mov
ficomps
and
cmp
cltd
outsb
mov
insb
inc
rorb
mov
jne
xchg
or
dec
pop
enter
fildl
push
jae
loope
xchg
mov
mov
shlb
outsl
xchg
mov
mov
mov
fcmovnu
stos
scas
xor
insb
insb
in
pop
push
in
gs
imul
xor
push
xchg
cmp
pop
add
jo
xchg
adc
mov
add
add
aaa
and
ret
add
mov
sub
or
aam
mov
test
out
jno
lds
ret
jg
imul
fnstcw
mov
xor
js
int3
ret
bound
sub
fstps
xchg
sub
xor
push
mov
cmp
mov
fbstp
nop
ja
std
scas
gs
insb
jae
and
xor
xor
mov
aas
push
scas
setge
dec
cmpl
dec
mov
add
pusha
out
add
in
repz
sub
jnp
loop
mov
and
xchg
cmp
xchg
cmovbe
jg
mov
push
movsl
add
stos
mov
xchg
sub
cmp
mov
push
test
and
mov
jl
adc
push
lret
out
push
pop
or
rcrl
rcl
fs
or
xchg
inc
mov
lahf
push
jl
movsl
mov
push
xor
adc
mov
push
jmp
mov
icebp
icebp
bound
mov
inc
add
int3
popf
in
dec
call
outsl
sub
pop
call
test
jb
jg
jb
mov
sbb
pop
aam
mov
lea
push
roll
lahf
sbb
fnsave
or
ret
out
jbe
and
add
shrl
pop
dec
mov
jle
dec
lahf
scas
push
mov
jmp
fdivrp
jo
pop
arpl
pop
lcall
add
xchg
in
push
mov
xchg
sbb
inc
push
loop
inc
mov
sub
xor
dec
inc
arpl
jp
inc
xor
mov
xchg
mov
xor
js
sbbl
sarb
fnsave
idivb
and
jbe
dec
mul
js
xor
sub
pop
add
dec
mov
dec
sub
sbb
cs
aam
pop
push
mov
mov
fildll
cmpsb
cmp
sub
scas
iret
add
int3
sbb
lret
sbb
inc
imul
mov
xchg
cmc
inc
xor
pop
inc
mov
or
lret
xor
lods
rclb
out
in
rclb
into
inc
mov
inc
cli
fnstsw
pop
cli
adc
daa
and
fbstp
mov
jl
mull
jae
ds
pop
stos
cmp
mov
jmp
mov
add
stc
or
sub
lock
sahf
cmpsb
sbb
jecxz
mov
jbe
mov
jg
fnstsw
add
imul
pop
inc
scas
mov
leave
aad
cmovs
lea
es
into
adc
ret
inc
mov
cmp
test
scas
out
sahf
daa
dec
imul
xor
lods
ja
loopne
ret
pop
add
les
sbb
not
stos
sar
pop
or
loope
aas
andl
iret
iret
pop
hlt
mov
push
xor
xchg
inc
cwtl
enter
or
jg
sub
jp
mov
inc
mov
sbb
cmp
fstpt
mov
popa
pop
shrl
mov
or
cmpsb
mov
mov
addr16
lods
outsl
or
add
or
js
and
mov
fwait
sahf
outsb
push
push
loope
or
and
aad
mov
push
add
add
lods
or
push
aaa
fildl
mov
xor
data16
cmp
mov
loope
int
mov
leave
mov
sbb
dec
jbe
and
shrl
fnstenv
sbb
movl
std
push
jbe
dec
sbb
sub
push
into
sbb
lods
js
sbb
mov
ja
mov
jmp
ret
pusha
inc
lret
aam
fs
and
stc
mov
jg
mov
xor
outsl
scas
outsb
lret
or
pop
adc
insb
jb
loopne
lret
aas
inc
inc
xor
test
popf
dec
cmp
adc
imul
jbe
cmpsb
ror
outsl
insb
and
movsl
js
xchg
imul
mov
jb
sbb
xchg
js
add
sub
scas
cmc
andl
mov
fwait
and
testl
cld
out
mul
jmp
mov
push
push
rorb
ljmp
and
cmpsl
xchg
dec
jg
pushf
and
mov
jae
lcall
std
bound
xor
dec
fisttpl
jp
icebp
int3
and
cli
ja
das
jo
add
sub
mov
pop
and
pop
dec
popa
push
popf
or
lods
test
mov
lret
sub
aad
xor
xchg
repz
arpl
scas
scas
adc
rcrl
push
or
jp
pop
mov
and
pusha
push
out
dec
mov
mov
outsl
int
mov
xchg
inc
jg
into
inc
in
rorl
fidivl
cmc
fstl
push
jae
insl
adc
mov
rcll
aam
dec
sti
or
pusha
xchg
or
roll
popf
xor
cs
inc
test
lds
pusha
ds
and
ret
jmp
mov
xchg
sbbb
test
imul
ret
in
jl
lret
iret
inc
and
loopne
and
icebp
sub
push
repz
test
jns
test
lea
or
cmpsl
sbbl
out
cmpsb
cmpsb
push
fbstp
sub
loop
xchg
jp
lret
rolb
and
mov
sub
jns
pop
jl
pinsrw
arpl
and
pop
xchg
adc
sbb
jmp
inc
stos
push
ja
popa
and
mov
mov
jle
imul
hlt
sbb
xchg
inc
xor
push
and
outsb
jne
mov
int
inc
outsb
push
dec
outsb
add
lcall
popa
outsl
daa
xchg
add
jns
sub
fcom
lret
adc
dec
mov
xor
or
adc
shrl
sti
lods
adc
imul
jle
lods
push
test
shrl
add
fists
cmpl
pushf
or
or
pop
inc
fwait
xchg
js
dec
dec
daa
addl
xor
and
js
lahf
mov
fwait
daa
add
inc
xor
inc
mov
imul
cmp
xor
cmc
push
imul
xor
adc
add
cmp
shll
push
ljmp
xchg
lock
mov
pop
lods
sbb
mov
sbb
or
test
mov
inc
pop
mov
sti
inc
int3
in
jns
add
sahf
sbb
ljmp
lcall
aam
mov
fldl2t
leave
test
js
dec
pextrw
mov
mov
fldenv
fimuls
movsl
mov
lea
pop
inc
pop
cmp
jae
jecxz
push
jg
enter
xchg
inc
fsubrs
sub
pop
sub
lar
cmp
sub
xor
inc
scas
in
pop
or
fstp
aad
add
mov
pop
mov
std
adc
aad
lcall
push
inc
push
enter
repz
push
cld
push
and
xor
int3
jo
add
cli
aas
adc
xlat
ret
pop
sbb
stos
sub
sbb
push
es
pushf
cmpsl
stos
push
cmp
adc
mov
pop
leave
cwtl
cli
ficompl
lahf
lock
jmp
stos
outsb
inc
into
popf
push
stc
xchg
int3
jns
dec
add
or
bound
jmp
mov
push
pop
pop
test
std
lea
pop
xor
cmpsb
rcr
pop
pop
mov
dec
dec
pop
push
ds
int3
sub
lret
pop
mov
jmp
jge
push
inc
test
sti
xchg
inc
icebp
in
push
adc
lea
arpl
lahf
pmullw
cwtl
fsqrt
sbb
xchg
dec
cmp
push
pop
mov
dec
std
pushf
int3
jnp
inc
imull
lahf
adc
cmc
or
call
das
outsl
jmp
lahf
and
outsl
lret
sbb
pushf
outsl
pop
inc
test
in
insl
shlb
sarl
aam
gs
cltd
ret
iret
xor
sbb
jo
push
xchg
pavgb
and
xchg
sub
insb
mov
inc
rcrl
xchg
gs
inc
iret
lahf
sbb
xor
push
jecxz
inc
push
push
fnstsw
mov
insb
push
xorl
and
push
popf
in
or
pop
aaa
inc
mov
xor
into
cmp
xchg
iret
scas
mov
pushf
or
jp
call
sahf
and
nop
pop
mov
fidivl
dec
popa
cs
fnstcw
ja
push
cmp
xor
mov
jle
cmp
bound
inc
mov
stc
xchg
jb
xorl
stc
popf
out
mov
xchg
sub
sub
repz
divb
or
xchg
imul
mov
in
cs
lods
xor
xlat
cmpsb
cwtl
adc
push
iret
push
lods
jo
push
adc
lods
js
sahf
inc
iret
loope
ret
adc
js
loope
fsubr
cmpsl
jmp
sub
cmp
adc
pop
cli
insb
icebp
push
addb
or
nop
dec
lods
mov
pop
jne
mov
aas
jge
ret
mov
mov
adcl
xor
add
pushf
imul
in
out
xchg
int3
add
sti
xor
imul
cmp
mov
jl
flds
jg
rcrb
insb
mov
testl
inc
mov
xchg
jmp
cmp
pop
icebp
fwait
mov
testl
or
xor
push
adc
mov
bnd
icebp
sahf
xlat
jne
push
sbb
xorl
data16
sub
pop
fnstenv
aad
icebp
xlat
mov
das
ret
push
int
movsl
arpl
mov
mov
mov
cmc
xor
shr
test
mov
movsl
adc
push
pop
sub
sbb
out
ja
leave
add
mov
pop
jle
add
or
mov
cmp
cmp
sbb
add
dec
out
pop
js
mov
push
adc
sarb
pop
les
dec
imul
sbb
movsl
xlat
fisttps
fdivs
xchg
lahf
or
mov
loope
pop
or
mov
xchg
xor
std
inc
add
adc
sbb
push
jb
xor
dec
add
push
xor
je
sbb
mov
rclb
js
ret
lock
jns
cli
test
pop
mov
cmp
inc
scas
data16
push
js
push
out
lret
xchg
and
enter
fcoms
fldenv
xor
inc
cmp
mov
out
subb
ja
das
nop
rol
fcoml
mov
inc
xchg
xor
jl
cmpsl
pusha
ret
lahf
mov
loopne
and
scas
cmp
push
sbb
pop
mov
nop
iret
call
push
jbe
jmp
test
int3
out
out
addr16
es
stc
dec
test
loop
std
leave
sub
pop
loop
lods
loope
push
mov
ja
iret
add
mov
rorb
jo
xor
lahf
cld
cmp
jnp
jb
mov
cld
inc
mov
pushf
lret
test
andl
cmp
pop
arpl
mov
inc
movsb
dec
fstps
mov
cmp
rcrl
out
mov
popf
int
jae
mov
cmp
es
mov
popa
xlat
inc
nop
cltd
dec
xchg
loopne
dec
or
std
lcall
nop
scas
jl
ret
call
leave
enter
xor
mov
stos
sbb
sub
add
cwtl
xchg
fisubrs
pop
mov
cli
pop
leave
cmp
in
xor
jno
pop
inc
xor
adc
popf
lock
mov
pop
popl
outsl
js
outsl
leave
mov
ficompl
push
in
cmpsl
sbbb
sahf
dec
lcall
leave
add
push
pop
loop
in
nop
inc
cmp
pop
jmp
jmp
adc
pop
cld
test
cmc
cld
in
jle
jnp
push
shll
sbb
cmp
jge
xor
sbb
call
cmp
movsl
dec
lock
call
inc
dec
inc
dec
std
sbb
scas
leave
sbbl
negb
sbb
rol
jl
jmp
push
xchg
mov
aad
cmp
push
jp
mov
mov
inc
insl
out
nop
jo
push
in
mov
jns
aam
jbe
pop
repz
xor
inc
andb
mov
mov
mov
out
jo
pushf
push
sbb
push
fwait
gs
dec
mov
loopne
das
add
lcall
push
insb
lods
jmp
cmp
or
arpl
xchg
scas
dec
mov
mov
xchg
int
and
jge
pop
adcb
insl
ja
hlt
shll
sbb
mov
jmp
fcmovbe
xor
mov
mov
dec
subb
cmpsl
mov
sbb
divb
sub
sbb
aam
lahf
jns
dec
adc
imul
test
adc
sbb
insl
add
sub
push
loopne
dec
repnz
or
notl
scas
push
icebp
sub
and
nop
jno
outsb
pop
adc
test
rolb
in
cmc
cmp
test
or
jle
xor
subl
orl
xchg
cmp
add
cmp
aas
icebp
and
mov
and
mov
lds
aad
or
mov
loopne
ja
cli
shr
add
roll
xchg
pop
cmp
add
xchg
cltd
mov
shll
xchg
push
mov
out
adc
bound
popa
subb
adc
pop
xchg
jo
push
mov
cmp
gs
mull
cmp
fidivrs
xchg
push
dec
jmp
popa
xor
insl
lahf
mov
and
xchg
pop
lods
mov
cmp
dec
mov
pop
mov
stos
nop
rorl
sbb
enter
sbb
das
pop
negb
xor
loopne
jmp
clc
jmp
outsb
push
cmc
clc
push
cmpsl
jnp,pt
sbb
in
xchg
add
jbe
pop
push
jl
adc
rcll
pop
or
jno
cmp
fldenv
loope
bound
xor
mov
out
dec
test
sbb
cmp
mov
push
pusha
dec
add
fstpl
and
fisubrs
and
mov
mov
dec
out
push
mov
cmp
das
mov
pop
daa
push
jns
psrad
xchg
movsb
xchg
mov
jne
jecxz
jo
jns
fildl
out
fstps
sar
add
insb
jle
mov
and
je,pt
mov
add
sbb
aaa
pop
inc
andb
inc
and
sub
mov
ds
dec
pop
fcoms
jmp
add
xor
sarb
jecxz
mov
xchg
inc
jbe
sub
stos
cmpsl
mov
aad
call
nop
jo
inc
fistpl
mov
and
icebp
lods
scas
add
fbstp
lret
pop
pop
push
cli
push
ret
addl
enter
cld
and
scas
jne
test
orb
int
xor
cmc
sub
cmpb
jnp
xor
nop
insl
jge
push
add
mov
mov
mov
dec
stc
movsb
cmp
xchg
shrb
push
call
xchg
sahf
push
sbb
inc
jg
fs
rorl
lahf
js
push
ficoms
xchg
pop
inc
mov
or
push
add
jl
aas
movsb
cli
fnstcw
out
cli
pop
clc
lods
cmp
pop
xchg
sbb
fmull
push
out
mov
sub
cmp
push
cmc
imulb
addr16
jb
inc
push
jae
mov
jo
sarl
dec
dec
jmp
add
mov
pop
lcall
leave
lods
aam
xchg
imul
call
bound
daa
push
popf
adc
mov
arpl
faddl
in
js
cmp
add
xor
mov
cld
fisubrl
sarl
movsb
mov
mov
sub
mov
cmpsl
sub
jl
std
loopne
leave
repz
add
or
popa
loopne
jmp
add
rcl
loop
lods
push
push
outsl
dec
iret
xchg
or
push
shll
mov
sbb
add
cmpsb
leave
sub
loop
ja
les
outsb
adc
ja
and
cld
jle
out
mov
bound
test
add
jnp
int3
ret
sbb
xor
out
stos
jns
push
jno
leave
dec
pop
pop
xchg
mov
in
push
or
add
mov
ficoml
aas
and
ja
mov
xor
out
adc
sbb
mov
mov
clc
and
enter
pop
pop
aaa
dec
daa
addr16
add
sbb
jp
mov
xor
or
cmpsb
fidivrl
and
sbb
mov
push
imul
scas
jns
sub
lea
idivb
lret
add
xchg
aam
xchg
out
cmp
popf
pop
xlat
ljmp
movb
enter
sbb
or
mov
icebp
dec
mov
out
das
pop
icebp
aas
adc
xchg
ds
fldt
ss
cmc
jne
stos
pop
mov
dec
adc
sbb
pop
or
pop
dec
sub
repnz
daa
xchg
mov
das
pop
sub
jo
notl
xchg
cmp
icebp
jo
xor
cltd
into
movsb
xor
test
sub
mov
dec
hlt
fstpl
sub
call
dec
adc
flds
icebp
insl
lcall
sbb
stos
cmp
sbb
fidivl
imul
lret
loopne
sbb
xchg
repz
fnstsw
decb
in
xchg
insw
sbb
call
mov
cmp
mov
int
pop
xchg
leave
push
jbe
cld
jns
pop
mov
call
adc
xchg
add
adc
repnz
jle
mov
pop
lcall
or
les
and
add
ss
stc
pop
in
xor
xchg
in
ja
dec
repnz
push
and
inc
scas
add
xor
inc
pop
jge
xchg
fadd
pop
cmpsb
faddl
xor
xor
xchg
int3
gs
mov
jg
cmp
gs
aad
daa
cmp
xchg
push
mov
add
sbb
clc
push
mov
xor
inc
out
mov
mov
addb
fnsave
dec
jmp
mov
notb
pushf
push
icebp
lods
lret
add
adcb
dec
test
dec
fidivrs
mov
gs
push
fwait
inc
mov
xchg
aam
into
mov
cwtl
inc
or
push
call
cs
roll
add
mov
mov
into
add
test
arpl
xchg
subb
out
jns
mov
sub
mov
fiadds
dec
inc
lcall
aas
aad
pop
xchg
stos
jg
dec
subb
test
jp
jne
pop
cltd
insl
mov
insl
and
jg
dec
fs
test
fildll
insl
sub
jbe
cld
mov
cltd
pop
xor
and
xchg
call
sarb
jno
aam
mov
adc
inc
jmp
push
outsb
jae
add
push
jmp
xchg
xchg
pop
fs
cltd
dec
enter
in
or
or
push
dec
loope
pop
jg
call
sbb
jb
cmp
mov
das
inc
and
push
je
and
mov
gs
push
mov
mov
xorl
ja
push
arpl
mov
mov
cs
xor
fcmovnu
mov
xor
pop
sub
loop
stos
xor
push
ret
cmp
jmp
push
inc
sbb
ja
mov
in
or
xor
js
aam
or
sti
stos
out
adc
and
mov
lea
call
xor
iret
imul
xor
stc
pop
add
je
sbb
cmc
and
mov
idiv
pop
push
pop
or
xor
pop
mov
bound
or
mov
and
and
xchg
push
jecxz
out
rcrl
insl
out
jo
popf
mov
jp
jge
mov
jecxz
sub
push
movsl
jo
fldcw
pushf
mov
clc
pop
cltd
js
mov
push
inc
scas
mov
and
sti
fsubrp
sbb
outsl
enter
jns
pusha
lods
cmpb
outsl
lahf
xor
clc
lret
dec
pop
sbb
mov
dec
test
in
insl
mov
fcmovnb
inc
out
xchg
push
fidivs
imul
daa
push
jnp
mov
xchg
add
leave
xchg
pop
repz
fisubrs
dec
add
leave
adc
movsl
jp
adc
cmp
iret
add
jl
pop
sarl
fisubl
mov
sbb
inc
pop
push
sti
push
ja
jb
not
outsb
aad
stos
ljmp
addr16
xor
push
push
or
mov
dec
fwait
std
out
movb
sahf
jnp
xchg
aaa
lahf
pop
jg
call
jle
mov
lds
sbb
inc
and
bound
lock
add
out
test
and
adc
fwait
pop
push
mov
inc
repnz
cmc
pop
mov
shl
fisubs
cmc
and
cmpsb
or
mov
jmp
mov
inc
sub
pop
add
adcb
mull
mov
add
jne
jecxz
scas
fistpl
xlat
outsb
hlt
pop
loop
xchg
lea
pop
scas
imul
sbb
mov
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
xor
push
mov
mov
sub
add
mov
addl
mov
movl
push
or
mov
mov
xor
mov
mov
mov
incl
xor
movzwl
adc
mov
xor
mov
andl
add
add
imul
movzwl
mov
cmp
movl
je
mov
sub
mov
xor
add
adc
mov
xor
addl
lea
xorl
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
add
imul
mov
cmp
je
jmp
xor
aaa
fwait
mov
gs
fiadds
jp
inc
pop
jp
lcall
xlat
lods
lock
loope
enter
dec
push
imul
mov
fldl
jb
jle
push
js
fsubrs
lea
fcmovnb
jnp
inc
cmp
or
jns
scas
xchg
push
push
or
cld
pop
sahf
in
jp
mov
scas
mov
xchg
inc
scas
cli
int3
hlt
pop
pop
inc
and
pop
ljmp
sub
cli
fistpl
mov
or
jnp
mov
loope
bound
sbbb
je
sub
jnp
fiadds
popf
sub
mov
mov
xorb
fcoms
jl
stos
mov
mov
shl
mov
clc
xor
int3
cmpsb
loop
cmpsb
loope
xchg
cld
inc
jne
mov
pushf
scas
sbb
or
add
js
pushl
xchg
out
addb
mov
cs
mov
cmpsb
pop
and
outsl
lret
push
aas
xchg
repz
xor
mov
mov
mov
and
push
not
fwait
sub
pusha
sbb
shll
pop
stc
test
into
dec
mov
int
or
aaa
sbb
stos
int3
in
xchg
out
notb
fbstp
in
pop
inc
das
stos
imul
dec
and
loop
nopl
xchg
dec
xchg
mov
xor
jmp
mov
mov
pop
dec
cmp
sbb
std
cmp
pop
jnp
sub
jnp
sbb
gs
testl
cmc
jp
adc
or
mov
cli
nop
cmpsl
xlat
inc
fwait
mov
cwtl
js
dec
jge
jnp
mov
mov
xlat
out
daa
shlb
roll
mov
add
imul
push
pop
bound
fwait
mov
mov
jns
xchg
sub
in
pop
sbb
bound
out
add
push
add
loope
mov
dec
and
int
or
pop
movsl
jae
sahf
rol
test
loope
je
jmp
ds
pop
xchg
jne
je
hlt
xor
outsl
popf
rcll
fisttps
xchg
or
test
les
jo
sbb
mov
xor
lods
fistl
imul
or
scas
out
cmp
xor
add
dec
out
repz
dec
data16
inc
pop
push
push
cmpsl
push
fs
xor
fildl
or
add
mov
sahf
jecxz
loop
cmc
mov
in
pop
inc
pop
sbb
lcall
dec
inc
shlb
addps
or
push
rol
nop
mov
sub
xlat
fistl
ficoml
aas
xchg
sti
fcmovnb
cld
fstps
and
dec
inc
or
dec
sub
lea
xor
mov
and
out
enter
int3
dec
shrb
lahf
push
outsb
std
push
mov
and
mov
jno
push
insl
inc
out
mov
pushf
in
addr16
cmp
push
outsb
fcomp
arpl
xor
lret
test
loopne
inc
mov
and
push
ficomps
and
popa
cmp
data16
popf
test
sbb
dec
stc
lahf
rolb
jl
sbb
movsb
sbb
add
not
xor
sbb
mov
add
outsb
push
cmp
pushf
cli
cmpsl
out
lods
inc
scas
mov
xor
mov
fidivl
out
pop
lock
inc
iret
ret
jmp
jno
pop
add
outsb
mov
pop
cmp
jb
and
stc
shl
ljmp
stos
out
pop
int
add
push
mov
arpl
mov
nop
jg
xlat
insl
or
fnstcw
and
sbbb
jg
lock
insl
mov
data16
add
hlt
jnp,pn
cltd
lret
and
int3
testb
orb
das
dec
and
scas
jp
shll
pop
sbb
xor
sub
decl
jo
xlat
xchg
lahf
fistpl
mov
dec
pop
outsb
shll
xchg
jmp
loop
mov
mov
ja
ret
xor
add
jbe
add
ret
push
hlt
mov
in
ret
xchg
and
add
ficomps
or
insb
cld
cltd
movsb
pop
mov
or
outsb
jl
add
jb
and
insb
shll
jo
fisttpl
push
sub
push
pop
stos
out
pusha
xor
loopne
fstps
add
movsl
mov
sbb
or
or
fcomip
mov
ljmp
xchg
arpl
repz
xchg
pmulhuw
stos
aaa
in
notrack
scas
rol
repz
adc
dec
movsb
sbb
lahf
in
or
pop
cmc
jp
insl
mov
lcall
test
pop
push
pushf
push
xchg
add
jne
test
push
push
inc
in
push
mov
aad
or
or
das
cwtl
aad
repz
outsb
and
xchg
mov
clc
shlb
push
push
das
push
sub
call
mov
mov
in
xor
les
xchg
aam
sbb
xor
out
cmp
loop
cmpl
pop
int
cld
rorl
mov
lret
adc
xchg
cwtl
mov
or
test
ja
jl
xchg
mov
adc
pop
xchg
jl
arpl
into
cmp
pushf
cs
mov
jg
dec
jnp
in
jl
scas
xchg
sub
out
sbb
shll
sbb
xor
into
daa
repz
sub
adc
out
mov
ja
lock
lret
jno
inc
in
shlb
sub
cs
negl
rcr
bound
pusha
subb
xchg
cmp
mov
pop
cmp
mov
cmpsl
inc
enter
mov
fsubs
icebp
xor
outsb
xor
outsb
and
add
das
leave
cmp
lcall
leave
cmp
sub
and
jnp
mov
mov
shlb
scas
adc
pop
movsb
aas
fsubp
mov
cmp
and
lret
aaa
das
sarb
enter
xchg
inc
jne
mov
roll
cmp
negl
in
sub
insl
enter
ds
dec
push
adc
sub
in
and
imul
or
xor
add
loop
adc
jnp
or
inc
cmp
cmp
outsl
sub
inc
notl
cmpsl
mov
fidivs
push
and
xchg
dec
shl
xor
xlat
aaa
cld
neg
and
cld
xchg
lock
cmpl
pop
pushl
push
fldl
lock
jbe
sahf
shr
push
adc
addr16
and
dec
cmpsb
cld
and
jg
dec
cwtl
pop
push
fdivp
fs
mov
fcoml
adc
xchg
mov
cwtl
sbb
xchg
cmpsl
add
dec
out
pop
xor
xchg
pop
jnp
jmp
scas
mov
cmpsb
inc
mov
cld
jg
jb
jnp
mov
mov
xor
cli
mov
pop
sub
ret
lock
jecxz
cmp
mov
aas
andb
or
add
sub
shrl
jnp
xchg
and
pop
dec
call
das
xchg
pop
scas
dec
shl
and
mov
ret
and
and
mov
pop
xchg
clc
adc
dec
enter
icebp
fnstenv
sbb
or
mov
xor
les
fcoml
lret
cmpb
subb
seta
jecxz
loop
xor
inc
or
sbbb
aaa
je
ret
adc
in
call
out
dec
dec
aaa
sub
and
stc
filds
std
loope
js
hlt
mov
pushf
movb
bound
dec
bnd
lret
push
xchg
dec
insl
xchg
jns
adc
sbbl
data16
das
mov
mov
pop
add
and
stos
mov
shl
sbb
test
popf
fildll
mov
or
int3
iret
cmp
jp
mov
mov
jnp
mov
jno
stos
out
addr16
out
lock
xlat
mov
xor
and
imul
pop
jg
ja
insl
inc
test
imull
mov
loopne
xor
loopne
jnp
mov
in
out
je
test
sarb
inc
adc
pop
and
mov
call
bound
xchg
push
xor
jmp
std
push
mov
mov
jmp
mov
or
or
lods
push
and
jmp
into
mov
into
adc
inc
shl
lock
jg
movsb
shlb
xchg
xor
into
sbb
sbb
sbb
sub
cmp
imul
movsl
inc
mov
push
movsl
repz
ja
es
adc
in
adc
pop
mov
shlb
repnz
xchg
or
adc
test
xor
outsb
add
adc
push
inc
out
mov
mov
adc
lock
xor
scas
xchg
dec
fistpll
scas
mov
inc
lods
pop
loopne
mov
outsb
jo
cmpsl
mov
fcoml
add
fcmovne
sub
mov
pop
lds
js
popf
mov
sub
adc
pop
mov
xlat
imul
add
inc
pop
and
sub
jb
fidivrs
cmp
xchg
push
fimull
adc
fucom
insb
push
jp
mov
jp
iret
xor
fcmovbe
gs
mov
daa
or
or
lret
adc
cwtl
pop
test
mov
data16
fstp
mov
push
sub
lea
imul
push
mov
jbe
iret
cmp
or
add
daa
imul
ret
into
in
outsl
push
mov
sbb
sub
push
jnp
jle
add
xchg
sub
stc
clc
mov
stos
add
pusha
mov
push
mov
pop
lcall
add
sbb
ja
mov
dec
push
fwait
ja
inc
mov
inc
or
repnz
mov
dec
dec
mov
sub
sub
mov
or
sti
mov
xchg
xlat
mov
or
mov
adc
xor
repz
pusha
xchg
fildl
xor
xchg
or
adc
jns
jae
sbb
and
sub
test
xor
lcall
sti
add
repnz
or
sbb
std
pop
lods
jne
stos
es
ss
mov
sub
call
pop
xchg
mov
daa
subl
xchg
xchg
pop
divl
ret
cmc
mov
ljmp
leave
sti
mov
mov
pop
adc
mov
inc
sbb
outsl
adc
stos
lods
mov
dec
mov
xchg
dec
loopne
insl
cld
or
pop
cli
or
adc
mov
jno
mov
dec
idivl
mull
cmp
ficoms
decb
xor
mov
aam
mov
adc
jb
lret
aad
loope
fs
push
push
push
cltd
push
pop
push
mov
xor
pop
sbb
add
es
dec
cwtl
sub
jo
std
out
lds
lods
pop
in
or
jbe
cmp
popf
pop
cmpl
test
xchg
push
pop
add
xor
or
lahf
or
rcrl
roll
xor
mov
imul
pop
into
adc
fcompl
sti
adc
sub
out
lods
stos
pop
test
dec
xor
in
add
into
mov
cmpsb
in
lret
mov
shlb
sub
clc
int
push
inc
sub
repnz
push
add
rcrl
xchg
dec
and
ljmp
jo
push
jecxz
mov
loopne
int3
jb
pop
dec
jns
add
mov
dec
dec
outsb
adc
push
mov
jge
outsl
cmp
sbb
and
sub
mov
stc
add
sub
scas
xor
stc
and
mov
mov
cmp
cmp
mov
mov
cmp
dec
dec
xlat
mov
rcrl
lds
inc
mov
xchg
mov
pushf
mov
push
add
mov
cmc
repnz
inc
mov
insb
adc
mov
jecxz
lahf
in
jl
out
fimuls
movsl
and
addr16
mov
pop
cs
imul
dec
cmp
adc
xchg
arpl
call
dec
inc
fldt
lds
les
mov
or
test
mov
into
insb
cmp
leave
leave
mov
mov
jnp
xor
testb
add
push
lcall
inc
lds
outsb
pop
repnz
and
outsb
jmp
or
cmp
in
clc
pop
icebp
pop
xor
daa
fcmovu
push
jo
jmp
inc
jp
push
mov
rcl
addr16
loop
inc
sbb
and
adc
lret
push
adc
push
in
repnz
xlat
push
and
mov
fists
xchg
inc
out
xor
lcall
int
leave
xchg
fisubl
jle
arpl
int3
xor
hlt
jge
mov
in
jae
daa
mov
lods
mov
je
xchg
mov
shl
or
push
adc
cmpsb
sarl
inc
jmp
sub
push
in
or
sbb
jnp
cs
pop
add
xor
scas
xor
sub
mov
or
fdivrl
mov
xchg
mov
jb
mov
push
lea
cmp
insl
jnp
ror
mov
loop
xchg
andl
loop
data16
in
sbb
hlt
push
push
jb
xchg
pop
dec
mov
xchg
add
or
icebp
mov
inc
add
arpl
ss
aas
mov
inc
xchg
stc
rcll
jno
outsb
icebp
and
cltd
xor
addb
adc
ret
pop
shll
cmpsl
ret
fildl
add
shll
mov
or
bound
inc
cs
test
mov
pop
lret
shlb
or
sub
addr16
enter
jl
xlat
rcll
notb
lahf
jbe
cmp
pop
push
clc
out
lds
mov
mov
pop
xchg
mov
xchg
std
cmp
xchg
mov
sub
mov
lahf
and
cltd
ret
adc
mov
std
ljmp
pop
mov
fbld
lods
dec
out
cmp
gs
dec
push
xchg
stc
mov
xchg
loope
cmp
mov
adc
adc
sbb
movsb
sub
push
jb
jecxz
sbb
test
cmp
pop
xlat
jae
mov
ljmp
insl
mov
insl
mov
pusha
xchg
popa
test
adc
jno
sahf
pushf
sbb
es
add
or
test
pop
cmp
xorb
or
lcall
xchg
sahf
and
xlat
cmpsl
jg
dec
xchg
in
jle
clc
xor
mov
cmp
hlt
sub
out
adc
mov
pop
mov
inc
dec
sbb
out
ret
lds
sbb
cmpsb
cmpsl
loopne
cmpsl
pop
pop
jle
mov
enter
or
cld
or
xor
adc
je
sbb
insl
test
dec
or
fucom
fdivrl
jne
shlb
sub
sbb
ret
jmp
lahf
sub
sub
ret
ret
mov
sbb
or
pop
lret
sub
inc
push
inc
shl
cs
and
outsb
clc
out
push
lods
inc
dec
enter
les
jo
ret
ja
jg
lods
pop
mov
dec
dec
dec
out
scas
rclb
shr
stos
jmp
or
inc
shlb
pop
adc
mov
sarl
es
shlb
scas
add
inc
add
fisttpl
icebp
inc
inc
aas
sub
loopne
sub
cmp
pop
dec
cli
fldt
pushf
or
sub
mov
lret
cmp
push
rolb
bnd
push
lea
mov
jae
dec
in
sbb
xor
call
loope
call
jp
xchg
int3
cs
pop
lods
mov
test
adc
xchg
inc
out
xchg
hlt
lods
mov
sub
pop
ficoml
ret
out
call
mov
test
inc
push
pop
popf
notb
out
sbb
adc
test
mov
aas
sbb
jg
js
int
fistpl
mov
aam
sahf
add
lret
jb
imul
imul
or
stos
adcb
fimull
rcrb
leave
mov
test
jns
lcall
mov
dec
jmp
fwait
andl
ja
cmpsl
lods
lret
imul
pop
ds
cs
sbb
mov
xchg
hlt
pop
pop
sbb
shrl
call
xor
pop
pop
jb
loope
lea
add
lret
inc
pop
jge
adc
mov
xor
push
test
lods
fucomi
scas
jp
aaa
sub
enter
xor
aaa
push
js
popa
push
rcrl
in
cs
xor
sub
push
es
out
mov
jb
dec
in
subl
mov
fwait
shrl
jecxz
shrl
cwtl
push
mov
jle
pop
sub
xchg
push
out
jnp
dec
les
sub
lcall
pop
shl
popf
or
test
out
push
in
xor
arpl
adc
divb
data16
sahf
fistl
adc
add
outsl
enter
mov
and
pushf
lods
mov
inc
aas
adc
cli
xchg
iret
ret
cmp
test
mov
push
mov
loope
or
xchg
mov
xchg
adc
jle
stos
mov
or
and
sbb
jg
jbe
pop
pop
pop
bound
add
jg
movsb
jnp
js
jge
rorl
in
js
xchg
and
jmp
insb
mov
or
insb
and
pop
push
mul
jo
pop
mov
popa
pop
jne
xlat
lret
shll
jp
enter
jno
and
popa
sub
push
pop
mov
loop
hlt
adc
test
adc
out
xor
add
push
push
std
mov
std
inc
xchg
push
ljmp
orl
cmp
std
lret
push
dec
add
jne
xor
xchg
sbb
das
movsl
jbe
push
arpl
enter
push
imul
outsl
mov
fisubl
dec
and
fsts
pop
faddl
and
add
mov
loopne
adc
pusha
push
xor
subb
pop
call
mov
lahf
pushf
leave
bound
dec
mov
adc
or
cmp
mov
divl
xor
notb
stc
adc
stos
mov
jbe
xor
data16
jno
sbb
jo
aad
mov
jge
jbe
pop
inc
jecxz
cltd
xchg
shll
push
stos
pop
je
mov
inc
ljmp
push
jae
push
out
dec
pop
or
loopne
stc
enter
and
in
jns
xor
or
and
sub
nop
push
pop
flds
cmp
fisubrl
dec
mov
lock
ret
sub
lds
icebp
enter
jb
mov
inc
mov
pop
fs
test
sti
jo
test
mov
cmp
aad
push
dec
xor
xchg
test
or
sarl
sahf
xchg
movsl
cmp
lcall
xchg
mov
cmp
gs
aaa
in
push
rol
lahf
or
and
outsb
cld
aaa
fwait
out
rcr
or
iret
div
loopne
call
jecxz
movsb
jno
orb
jp
sub
es
mov
or
pop
push
sbb
mov
rcrb
and
xchg
adc
sub
push
adc
divb
jb
insb
adc
dec
mov
outsb
xor
je
mov
dec
push
push
xor
pop
cmp
add
lods
ljmp
in
mov
les
shl
std
mov
imul
jns
sahf
nop
mov
adcb
mov
out
nop
push
outsb
adc
jmp
xchg
and
nop
mov
mov
push
jbe
int
das
dec
xchg
loopne
mov
test
jg
js
scas
ret
or
insb
insl
add
stos
or
push
cmp
sub
push
cmp
arpl
push
vphaddbq
cmp
sbb
pop
add
push
push
xor
jno
dec
outsl
and
rcr
jb
pop
xor
xor
mov
add
sbb
lock
and
dec
dec
xchg
cmpsb
sbb
lock
test
pop
sbb
or
fsubp
ror
dec
mov
sub
add
jp
test
xor
xor
push
cmp
push
in
sbb
sub
jp
idivl
xchg
jecxz
gs
dec
push
clc
daa
stos
and
mov
mov
mov
incb
push
dec
aas
cmp
popf
xchg
or
jns
xchg
push
mov
add
nop
cmp
mov
adc
repz
push
lods
nop
inc
leave
pop
cmp
pop
xchg
sub
ret
mov
adc
int3
adc
int
js
jo
inc
add
pop
sbb
fcom
push
mull
sub
xor
rcll
cmp
dec
repz
mov
ret
adc
pop
sub
sub
fucomi
or
pop
jmp
xchg
inc
or
pop
std
pop
push
lcall
push
xchg
mov
mov
mov
cmp
inc
pop
add
dec
jmp
movsb
inc
jbe
lret
or
movsl
ret
scas
mov
repz
lahf
aad
mov
icebp
pop
inc
or
pop
mov
xlat
or
dec
lock
xchg
lock
stos
sbb
lahf
add
jbe
mov
cltd
pusha
lret
inc
cmp
pop
sub
xor
pusha
movsl
roll
or
loopne
mov
sub
fnstcw
mov
and
mov
inc
jne
pop
push
mov
adc
mov
mov
cmpsl
call
pop
out
int3
pop
movsb
loopne
pop
rorb
ljmp
push
inc
sti
mov
sub
ljmp
pop
xor
sbb
cmp
popf
and
jnp
aad
pop
stos
fs
sbb
jmp
fldl
sbb
pop
sub
ret
jb
mov
mov
mov
cltd
pop
addb
cmpb
sbb
dec
mov
xor
adc
or
sub
cmpsl
sbb
mov
fwait
aam
xchg
clc
sub
and
adc
pop
sbb
lock
cwtl
das
jb
addr16
push
imul
dec
enter
fmul
add
mov
or
enter
fucomi
fidivs
jno
jecxz
mov
jg
dec
adc
pop
insl
mov
outsb
adcl
nop
test
mov
shlb
repz
jnp
add
test
in
jg
ret
jge
xor
test
inc
xlat
cmp
jne
das
and
inc
cltd
push
and
xchg
adc
sub
inc
int3
loop
cmp
popf
pop
xchg
pop
push
popa
dec
lods
add
jle
sub
push
fisubs
push
inc
pop
xchg
pop
fs
push
rorl
scas
nop
jns,pt
cs
ret
fldcw
jecxz
outsl
iret
addb
xchg
push
aas
negb
xor
cmpsl
xchg
cwtl
push
enter
out
rcrb
mov
leave
or
mov
jl
insb
bnd
adc
aaa
push
mov
jmp
shrb
mov
xchg
sbbl
pusha
das
inc
jae
xchg
rcll
ficompl
cmpsb
mov
rolb
xor
and
insl
clc
mov
insl
mov
js
stc
out
push
dec
mov
inc
hlt
xchg
xlat
jl
cli
push
mov
ss
push
fsubl
pop
or
add
push
and
add
iret
push
adc
cmp
std
cmc
scas
jns
lret
jp
mov
push
roll
mov
add
adc
out
mov
lods
dec
pop
cltd
dec
and
jno
xchg
idivb
out
cmp
lock
sbb
dec
push
pop
inc
mov
sbb
xor
adc
adc
dec
movsl
repnz
aad
scas
push
or
ret
mov
aas
std
and
sub
dec
sub
sub
mov
and
testb
sar
inc
mov
inc
inc
or
test
mov
loop
cmp
push
out
mov
rcll
inc
cvttps2pi
lods
popf
cs
mov
push
ljmp
push
arpl
dec
insb
lock
mov
sbbl
int
subl
inc
push
into
mov
lea
call
adc
and
int
test
das
and
jnp
notb
ds
mov
idivl
fisubl
fisubl
jmp
dec
adc
in
lret
in
rcr
pusha
mov
gs
mov
jne
cmp
mov
mov
mov
fcmovnb
cmp
jg
sbb
push
push
pop
lock
repz
sub
movsb
xor
and
mov
pop
jae
jno
cld
adc
mov
dec
xchg
mov
popf
lret
adc
jmp
inc
cmp
or
mov
sub
sbb
jb
outsl
lcall
fcoml
mov
jae
ret
jmp
dec
dec
out
mov
pop
sub
cmp
ss
fcoml
dec
xchg
sbb
sbb
imulb
add
aad
jns
sbb
jge
push
gs
lock
ret
ret
push
mov
test
movsb
mov
jle
sub
xchg
bound
xor
cmp
xor
in
addb
rcll
lods
cmpsl
lret
pop
call
mov
mov
adc
pop
sub
cmp
push
mov
shl
in
out
add
adc
dec
sbb
aaa
es
inc
test
cmp
mov
shll
das
cmc
punpcklbw
pop
out
fisttpll
jl
dec
stos
cli
mov
movsb
xchg
jbe
jbe
fiadds
leave
add
mov
inc
notb
cmp
imul
xchg
sbb
add
inc
rolb
push
jmp
adc
lret
dec
es
cmpl
into
pop
pop
jle
das
mov
stos
push
pop
pop
xor
std
loope
hlt
push
aas
out
push
sbb
es
mulb
incl
test
js
sti
inc
or
or
dec
out
lret
sub
pop
fadds
arpl
inc
sub
cs
xor
iret
popa
xchg
sbb
cltd
pop
inc
push
or
inc
popf
mov
mov
pop
neg
daa
xchg
rcll
mov
lret
mov
sbbb
push
pop
pop
pushl
bnd
ja
rorb
loop
xlat
add
iret
pop
jp
cwtl
test
sbb
out
push
xchg
jl
add
fsubrl
adc
push
int3
dec
cmp
shrb
inc
mov
movsb
and
mov
in
adc
ret
lahf
ficompl
dec
and
aad
gs
daa
imul
or
fiadds
cmpsb
pushf
js
lret
lock
add
fsubrl
data16
mov
ds
sbb
pop
pop
lds
cmp
lret
repz
js
mov
gs
jmp
or
ds
insb
sub
fsubs
mov
inc
dec
into
xor
aad
sub
or
inc
es
dec
add
jmp
loop
rclb
jae
sahf
out
jl
pop
jmpw
int
scas
sbb
ret
je
jae
ss
ljmp
push
adc
mov
cmp
cmp
cmovae
das
movsb
pop
out
xchg
push
mov
movsb
mov
int
mov
mov
movsl
push
lret
or
push
jae
fwait
jp
dec
hlt
fstl
jg
or
loopne
cmc
inc
xchg
mov
js
add
scas
xchg
fsubl
sub
divb
cmpsb
insb
aam
mov
push
shll
sub
adc
pusha
jmp
sbb
pop
xor
xchg
fnstenv
sub
addr16
stos
cmp
sbbl
je
fisttps
mov
jno
cmpsl
in
mov
int3
jnp
adc
enter
dec
sti
jne
jb
lret
insb
lock
jae
adc
push
dec
cmp
insb
lea
dec
mov
and
movsb
lock
les
push
add
push
cmp
dec
lods
loope
into
lret
mov
or
mov
scas
push
xchg
jno
dec
das
fidivs
inc
aad
insb
test
dec
pop
pop
cmp
sub
in
or
xor
push
iret
das
or
ficompl
cmc
sahf
mov
aad
pushf
mov
bound
stos
test
repnz
pop
add
mov
ss
xchg
lahf
cmp
xchg
push
mov
push
and
sub
jo
into
repz
outsl
jbe
ds
sti
xor
push
inc
push
jae
mov
fistl
push
pop
jns
jbe
daa
add
adc
into
daa
mov
jbe
xor
popa
xlat
mov
jp
nop
push
movsl
fs
sbb
pop
pushf
popa
mov
jg
mov
inc
mull
push
out
push
dec
xchg
mov
leave
or
xchg
add
pop
pop
int3
jge
xlat
add
pushf
pusha
je
jmp
shr
inc
scas
sbb
bound
je
in
rclb
lret
adc
mov
jl
fidivs
cli
dec
pop
dec
imul
test
aas
or
xor
add
ja
aam
mov
inc
dec
insb
clc
push
cmc
call
std
mov
aam
daa
imul
rclb
mov
jae
jnp
lret
pop
xchg
xchg
push
lock
inc
gs
ss
cmc
in
into
outsb
sahf
xor
cmpsb
and
xor
lret
adc
in
ds
loope
stos
repnz
push
mov
cmp
fs
xchg
pop
cld
mov
fcmove
mov
jl
dec
adc
mov
cmc
push
cwtl
xchg
shll
sub
shlb
aas
mull
jl
pop
dec
add
xchg
mov
mov
sbb
adc
pop
mov
sub
cmp
or
cld
fstpt
jbe
std
pop
call
pop
push
mov
xor
mov
mull
fwait
sbb
and
mov
pop
ja
mov
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
adcl
mov
xor
sbbl
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
add
mov
movzbl
adc
mov
adcl
xor
mov
orl
add
xorl
movzwl
mov
movb
adc
lea
mov
sub
mov
orl
mov
andl
xor
orl
sub
orl
mov
andl
movl
xor
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
addl
push
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
xor
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
push
add
movl
jmp
mov
movl
mov
movl
inc
movl
cmp
jb
mov
addl
xor
adcl
add
movl
jmp
mov
movzwl
sub
mov
mov
decl
xor
mov
andl
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzwl
orl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
movl
mov
mov
adc
xor
sbb
add
or
mov
movl
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
movl
mov
or
mov
mov
xor
add
add
movl
mov
mov
mov
je
mov
mov
jmp
mov
pshufw
fdivl
push
adc
jp
popf
mov
add
mov
orb
mov
mov
and
dec
movsb
cltd
mov
add
bound
push
insl
jae,pn
jbe
mov
loopne
or
inc
in
push
imul
leave
xor
adcb
jge
jnp
outsl
lret
add
and
dec
in
aaa
roll
pop
stos
cmpsb
cmp
xor
aam
mov
fiadds
and
das
in
xchg
inc
push
xchg
push
clc
andb
pop
mov
sbb
sub
add
fwait
and
outsb
imul
mov
mov
jg
int3
mov
out
jne
jbe
sbb
les
inc
or
cmpsb
popa
lods
icebp
dec
out
bound
or
loope
push
outsl
std
jno
sbb
inc
jmp
inc
out
xchg
adc
out
ret
mov
lods
jbe
dec
into
insb
and
mov
ror
mov
mov
lret
dec
repnz
shr
clc
adc
bound
cmp
jmp
mov
or
repnz
mov
cmp
icebp
ss
pop
jb
and
lret
sbb
jae
xor
mov
es
adc
or
aam
xor
imul
xchg
mov
xor
push
sarb
xor
stos
cli
pop
xchg
jbe
pop
fsubr
add
jno
inc
andb
lds
aaa
mov
jbe
mov
mov
js
fwait
imul
adc
inc
jle
jnp
add
or
bound
or
lods
loope
loop
cmp
push
jne
aaa
repnz
fnstenvs
test
sbb
or
subl
xor
xchg
sub
popa
loopne
xchg
xor
pop
in
shrb
xor
cmp
xor
pop
jge
stc
loop
dec
sbb
cmp
bnd
inc
add
dec
lcall
in
jg
push
je
mov
je
pop
pop
pop
dec
fmull
out
add
xchg
lods
subl
sub
scas
test
or
pop
loope
dec
inc
xchg
sbb
push
inc
and
call
push
sbb
dec
or
out
mov
push
add
fdivrs
fs
pop
cli
pop
push
mov
inc
or
sub
add
bound
fnstcw
inc
mov
and
aad
lock
mov
inc
stos
std
popf
inc
popf
adc
movsb
outsb
xlat
inc
or
mov
test
mov
push
xorb
call
pop
gs
xchg
mov
loop
bound
cmp
bound
jl
mov
fldl
push
shlb
ss
xchg
movsl
sti
sbb
in
mov
cmpsb
movsl
cmp
lahf
mov
fildll
dec
out
xchg
mov
cwtl
rorl
rcll
pop
inc
mov
and
adc
lret
imul
sbb
sub
addr16
add
shl
jmp
cmp
divl
and
loopne
xlat
cmp
fisttpll
pop
lods
rcrl
mov
cmp
iret
mov
xchg
xor
inc
xor
int
inc
ljmp
mov
cltd
out
aas
movsl
call
cmp
scas
mov
xchg
add
jg
fimull
cld
mov
xchg
mov
lock
add
mov
mov
xorb
xchg
scas
out
cmp
xor
xor
shrl
push
ja
nop
jle
jne
sub
push
sbb
les
int3
push
lea
mov
xor
fiaddl
jbe
ficoms
test
mov
lret
xchg
dec
cmp
jbe
hlt
test
in
pop
movsl
loop
lret
pop
stos
les
pusha
mov
jo
mov
inc
idivl
jb
call
adc
stc
push
fs
outsl
das
hlt
xor
mov
mov
test
mov
cld
js
adc
nop
push
push
fildl
out
rclb
or
ljmp
dec
dec
arpl
std
push
mov
xchg
add
mov
ret
push
adc
lods
sub
ficomps
in
aas
out
clc
insl
out
daa
je
pop
sbb
sbb
leave
sub
shl
xor
fdivs
xor
popa
addb
sbb
mov
frstor
iret
das
stc
out
fimuls
push
pop
pop
pop
sub
sbb
mov
idivl
loope
aas
lock
add
mov
js
inc
shlb
xor
stos
mov
cmp
inc
iret
filds
dec
shll
fs
or
sbb
insl
and
ja
mov
fistps
js
call
mov
cmp
mov
cmpsb
mov
out
jne
sarl
or
divb
xlat
cmp
and
sahf
xchg
and
push
fisubrs
xchg
ja
fldcw
xchg
rcll
mov
fistps
std
mov
inc
stos
mov
jns
lods
stos
lods
xlat
movsl
cld
inc
dec
and
aas
sbb
rcrb
cmp
nop
xor
jbe
gs
outsl
xchg
push
das
cltd
jge
mov
out
mov
mov
sarl
mov
dec
mov
lret
insl
jo
cwtl
xor
in
iret
fsubrs
add
rcl
cld
mov
movsl
data16
roll
je
inc
outsb
sub
iret
pop
jge
dec
shlb
sbb
rcr
jae
mov
and
jnp
push
popf
dec
inc
mov
adc
outsl
fcompl
adc
and
mov
mov
mov
adc
and
mov
dec
test
nop
inc
repz
in
jo
sti
jo
cmp
mov
nop
mov
mov
fidivrs
and
xor
cmp
fldcw
cmpsl
ja
sbb
cli
dec
mov
add
push
mov
aas
mov
mov
or
cmp
call
jp
sahf
push
adc
pushfw
insl
and
cli
pop
mull
pop
popf
jbe
cmp
xlat
sti
pushf
mov
push
lcall
sbb
mov
mov
nop
in
or
xchg
test
dec
ljmp
push
add
imul
lcall
add
push
in
push
jge
fildll
add
cwtl
stos
dec
mov
hlt
movsl
inc
jmp
cmpsb
add
push
mov
stc
cmpb
pop
sti
jge
mov
push
xchg
aas
scas
cs
sahf
mov
dec
aas
ficoml
aad
ret
ret
push
les
enter
adc
shrb
leave
and
stos
mov
outsl
add
cld
in
or
stos
sbb
xchg
add
pop
mov
xchg
lds
lock
popf
pop
and
or
and
sbbl
pop
add
mov
cmp
xchg
jno
sbb
fsubrs
movsl
shl
xchg
cmp
adc
push
jne
jb
jno
pushf
or
mov
inc
jmp
xchg
mov
mov
push
sub
ret
mov
or
sub
cmp
jmp
out
jnp
dec
push
les
ret
aam
nop
push
test
push
les
dec
shll
leave
mov
mov
add
cwtl
sbb
xor
push
and
scas
gs
jnp
out
outsl
add
mov
sub
lcall
push
cmc
xchg
mov
pop
and
mov
movsl
xchg
movsl
in
inc
cmp
sbb
cmp
mov
push
mov
mov
sbb
adc
ja
ja
sahf
lcall
cli
inc
sahf
lods
jne
ja
mov
mov
cmpsb
xlat
dec
cmp
jnp
js
clc
pop
pop
or
je
and
es
push
inc
ljmp
pusha
mov
cmp
mov
mov
jns
jne
or
subl
in
in
cli
stos
sbb
es
mov
lds
test
rolb
push
lcall
inc
adc
xor
jmp
sub
jle
insl
pop
pop
cmc
push
jecxz
lock
and
or
popf
out
cmpsl
mov
jecxz
sbb
stc
jg
inc
xor
js
out
mov
jb
icebp
daa
out
cwtl
jbe
or
stc
call
jno
push
mov
loopne
pop
imul
or
or
addr16
xor
pop
inc
cmp
mov
xchg
and
pop
sub
cmp
mov
xor
sti
sbb
pop
push
cmp
lret
sbb
fcmovbe
add
sahf
push
call
lahf
mov
push
push
and
dec
lock
mov
in
adc
sub
pop
pusha
mov
add
mov
jl
push
mov
orl
lods
lock
dec
mov
mov
mov
ljmp
aaa
jb
and
jno
ret
cmp
mov
filds
fisubl
or
lret
out
jg
movsl
push
mov
outsl
pop
pop
inc
cli
xor
pop
iret
imul
xlat
jg
and
inc
icebp
enter
loope
leave
pushw
xchg
testl
adc
add
or
pop
xor
data16
pop
das
stc
jbe
pusha
ret
sbb
fdivrl
into
mov
cld
in
push
inc
jnp
hlt
enter
dec
fidivrl
adc
add
and
fisttps
fxch
adc
cmc
or
fcom
stos
cmp
xchg
mov
mov
sub
movsl
jmp
dec
es
xchg
cwtl
ds
sub
decb
adc
mov
push
and
cmp
add
cli
mov
xor
testb
xchg
dec
notb
sbbl
cwtl
call
pop
loop
xlat
lahf
add
je
cmp
mov
std
aad
pop
cli
cwtl
sbb
push
xor
and
fldl
loop
mov
ret
cmpsl
aad
xor
or
js
mov
mov
fdivl
imul
in
push
std
mov
test
sub
adc
mov
jl
rol
jae
xchg
jg
pop
xorps
in
mov
xor
xchg
rclb
outsl
cmp
xor
cs
in
sub
mov
adc
ret
leave
lock
imul
cmpsl
pop
push
and
push
cmp
mov
bound
push
lock
bound
imul
in
cwtl
jnp
icebp
das
mov
inc
jl
popf
pop
inc
jnp
pop
cmp
or
sbb
xor
notl
rcrb
lcall
int
sbb
mov
jno
xchg
sub
sahf
xchg
inc
ds
sbb
stos
fstl
test
mov
movsb
mov
dec
mov
jp
sub
xor
pop
xor
aaa
pop
sub
fiadds
leave
add
pusha
pop
cld
xbegin
cmpb
je
ror
jo
fsub
cld
inc
mov
test
insl
cmp
stc
pop
lea
mov
push
cld
ds
stc
and
mov
arpl
stos
xchg
pop
rcrl
cmp
popf
test
cld
push
inc
push
inc
rcrl
repnz
shr
mov
pushf
fstl
out
cmc
sub
out
inc
icebp
cmp
add
xchg
aad
lahf
sbb
stc
loop
cmp
mov
sahf
in
cmp
pop
lret
icebp
inc
dec
sub
sti
out
popa
js
insb
ret
mov
sbb
in
or
fnsave
jb
jecxz
cwtl
or
inc
xlat
dec
pop
and
cli
sbb
sub
mov
adc
loopne
int3
scas
fs
fcomi
enter
adc
push
xchg
test
pmuludq
shll
subps
and
xor
xlat
jecxz
loope
push
pop
pop
pop
mov
jo
mov
movl
adc
fs
jecxz
dec
stc
sahf
sub
mov
mov
aas
ret
out
ror
out
clc
imul
mov
add
les
es
ss
insl
rolb
lds
test
cmp
inc
xorl
mov
punpcklbw
imul
test
ret
ja
push
or
sub
into
push
sti
add
mov
or
xchg
and
icebp
mov
inc
loope
loop
or
mov
aam
xchg
notb
mov
sub
call
in
cli
fucomp
jg
fldenv
xchg
mov
jecxz
shlb
stos
lea
scas
jecxz
inc
jp
dec
cmp
inc
inc
push
sbb
fnstenv
clc
sub
leave
cmp
fs
jns
in
sbb
push
sbb
mov
add
out
fwait
sbb
xor
and
popa
fstpl
adc
ds
test
mov
pop
ljmp
repz
bound
popf
and
xchg
xchg
stos
xor
int3
mov
cmpsl
fwait
inc
sbb
aas
scas
out
fbstp
mov
js
mov
pop
adc
bound
stos
ficoms
outsb
pop
jmp
shll
add
pop
inc
cmp
push
loope
incl
sbb
xchg
adc
mov
push
ja
adc
ds
js
loopne
mov
push
push
mov
leave
inc
cmp
mov
pop
add
js
sub
test
mov
fsubrl
rcrl
xlat
jle
cmp
mov
js
mov
mov
imul
in
mov
xchg
iret
mov
in
in
add
mov
in
sub
sbb
addl
out
shll
adc
orb
icebp
js
in
cld
and
inc
dec
je
cmp
inc
sub
out
and
mov
mov
mov
pusha
jecxz
icebp
xchg
fsubl
lods
pop
xchg
push
imul
mov
ret
inc
call
pop
lea
add
mov
mov
push
fwait
cmpsb
mov
cltd
pop
or
enter
sti
fldt
es
in
push
mov
add
cmc
mov
mov
xor
xor
push
ret
stos
aaa
lahf
lret
bound
mov
sbbb
mov
movsb
sub
arpl
lcall
aad
inc
or
mov
and
aam
aad
pop
fisubl
mov
cs
jecxz
aad
popa
lods
std
push
mov
sbb
in
add
cmpsb
or
push
loop
inc
mov
or
push
cmp
sbb
adc
mov
or
std
ret
mov
jg
jecxz
mov
pusha
xlat
pop
das
lock
dec
fwait
sbb
ret
dec
in
pushl
jp
aaa
jbe
cmpb
jge
xchg
mov
ljmp
pop
or
out
aam
add
sar
mov
fyl2x
ret
imul
dec
push
addr16
das
imul
jbe
jle
lods
dec
out
pop
insb
xchg
sbbl
cmp
iret
popf
gs
mov
mov
mov
insb
jmp
lcall
gs
sbb
push
lods
xor
insb
mov
int
mov
loop
movsl
adc
mov
loope
andb
cmc
mov
sub
jae
jecxz
push
lds
cmp
cltd
fs
popf
ret
call
loop
gs
ljmp
mov
in
pop
dec
sbb
je,pt
jg
dec
dec
jp
inc
xchg
xor
subb
pop
dec
out
dec
mov
lahf
sub
ret
mov
int3
cltd
imul
out
push
out
lcall
movsl
mov
add
xchg
ret
mov
divb
pop
scas
icebp
pop
loopne
mov
dec
sahf
fdivl
test
cmp
bound
aam
dec
enter
cmp
adc
push
aas
shlb
mov
inc
jmp
and
sbb
add
std
sub
bound
std
push
sbb
movsl
ja
or
pusha
jg
neg
stc
mov
push
xor
dec
cmc
sub
xchg
pop
in
push
xor
rolb
xlat
imul
dec
std
insb
or
inc
pop
int3
pop
xchg
decb
pop
ja
sbb
jne
adc
pusha
or
out
pop
and
mov
imul
cli
test
sub
sub
inc
mov
cmp
xchg
repz
loopne
das
cmp
jle
jge
mov
gs
aad
jmp
pop
cmpsl
aad
pop
or
aad
cmp
jp
aad
inc
js
pushf
and
xor
lcall
fwait
lcall
push
js
int3
jge
fiadds
mov
popa
lea
add
cmpl
pop
push
xor
mov
fldcw
push
pop
arpl
cmp
scas
ja,pn
scas
lods
adc
shlb
in
or
sahf
mov
dec
sbb
xchg
loop
jl
inc
movsl
mov
test
cmp
lcall
out
push
cmp
daa
mov
jg
mov
mov
mov
rorl
push
aam
out
sub
js
and
leave
in
cs
cmpsb
adc
imul
dec
shll
inc
sbb
push
out
xor
les
mov
push
dec
lea
dec
stos
ljmp
lcall
stos
pushl
mov
mov
rolb
lahf
lods
inc
icebp
xor
in
mov
inc
out
jnp
loop
and
ret
decl
mov
sbb
lock
mov
ja
mov
mov
rcrl
xor
arpl
mov
fistpl
insb
idiv
sub
or
insb
pop
xchg
ret
add
xchg
jnp
jae
xlat
jno
fsubs
push
aas
out
fisubrs
jmp
test
add
std
inc
mov
and
inc
cmpsb
or
hlt
jge
cld
mov
aad
dec
enter
xor
insb
jmp
sarb
out
jnp
and
or
jbe
gs
cltd
insl
push
fmuls
in
sub
jge
iret
out
or
jecxz
jbe
pusha
inc
jmp
cmp
loop
jecxz
in
cmp
sbb
movsl
jmp
adc
cmp
ss
ss
shll
sarl
lea
loop
xchg
loop
jmp
dec
addr16
sbb
jno
mov
pop
xor
stos
inc
mov
xor
pop
and
hlt
repz
pop
xlat
inc
cmp
xor
ret
jae
arpl
repz
xor
xlat
jge
inc
lds
jmp
loopne
or
hlt
notb
push
sahf
push
sbb
testl
inc
jnp
cmp
xchg
mov
and
or
xchg
mov
stos
cmp
mov
sbb
and
je
cmp
ds
inc
lods
inc
nop
cld
daa
shrb
adcl
dec
mov
pushl
inc
call
testb
lret
sub
mov
jae
sub
iret
dec
rol
sbb
cmpsb
jl
neg
les
movsl
dec
ja
add
and
pusha
sarb
add
lret
inc
orb
scas
loope
inc
dec
insb
arpl
aam
testl
cli
cmp
sarb
mov
inc
cltd
xchg
adcb
push
inc
pop
push
adc
sbb
shrl
insb
inc
bswap
jmp
out
inc
sub
push
ret
mov
mov
dec
jp
xchg
cltd
jle
pop
sbb
movsl
jl
fadds
dec
mov
cltd
fimuls
fdiv
push
jnp
add
shll
test
test
xchg
enter
mov
mov
mov
pop
sti
rcrb
jle
jo
lret
mov
imul
mov
loopne
or
jbe
jle
mov
sarl
cld
insl
mov
loope
xor
sahf
dec
mov
movsl
jnp
push
mov
mov
pop
pop
pcmpgtw
sbb
or
jbe
dec
icebp
push
mov
and
jno
and
loope
icebp
inc
out
jae
adc
mov
pop
lock
fucomip
into
jo
adc
cwtl
dec
mov
xor
and
cmc
pop
mov
inc
in
je
iret
add
ficoms
nop
mov
jl
push
mov
fiadds
xchg
movsb
mov
imul
or
adcb
xor
test
leave
sub
cmp
mov
loop
inc
roll
mov
xchg
aam
imul
imul
xor
sbb
mov
push
xchg
pop
inc
mov
imul
xchg
repz
repnz
popa
xchg
adc
out
lock
es
call
mov
or
dec
or
aad
into
ss
inc
xorl
sbb
mov
lret
fsub
push
sbb
arpl
inc
add
add
pop
pushf
test
shrl
inc
int3
hlt
out
jnp
xchg
dec
mov
pushf
sbb
mov
jmp
jne
or
cmp
xor
inc
jecxz
inc
es
leave
insb
pop
out
je
addr16
jns
dec
sarb
ret
xchg
out
inc
mov
pushf
cmp
scas
mov
test
push
js
inc
push
loope
xchg
shrl
adc
fs
mov
daa
fs
mov
sbb
jnp
iret
adc
hlt
sub
add
xorl
aam
lret
lods
stos
mov
cmpsb
mov
xor
push
ljmp
popf
shlb
in
xor
imul
sahf
andl
xchg
fsub
mov
mov
lds
gs
dec
cmp
movsb
jl
into
les
or
lahf
or
jb
push
hlt
in
jle
inc
jmp
js
stos
push
int3
out
out
call
call
xchg
sbb
or
leave
in
scas
xor
adc
fs
push
pop
xchg
outsl
test
push
lods
aas
inc
lcall
subb
aam
push
sub
or
push
pop
sbb
pop
push
dec
int
ret
adc
sbb
loop
adc
sarb
mov
or
or
aad
and
jg
add
cmpsl
mov
push
loope
js
hlt
jns
sbb
pop
push
cmp
push
inc
and
pop
jns
mov
dec
mov
sub
and
jmp
inc
or
add
int3
iret
pop
test
mov
and
add
ret
aad
jno
fwait
repnz
xchg
mov
cmp
push
xor
jg
push
xchg
mov
stos
xchg
pop
fcoml
sahf
dec
sbb
jecxz
xor
add
sub
pop
xchg
inc
xor
filds
nop
sub
xchg
add
in
jge
ret
mov
icebp
rclb
inc
and
ds
cmpsb
xchg
shll
push
jnp
std
adc
cmc
xchg
in
mov
xchg
shl
into
mov
das
or
fldt
jle
push
fisttpll
out
push
pop
or
or
stc
pop
sbb
shlb
sti
pop
loopne
test
inc
add
fcomps
lock
ja
add
jg
pop
aad
lahf
das
loopne
cli
mov
xlat
sbb
aad
adc
mov
std
xor
mov
jbe
fneni(8087
in
cmpb
inc
mov
test
pusha
cmpl
mov
and
xor
ret
fs
jb
jecxz
xlat
cld
pop
in
push
clc
add
or
sub
mov
cmp
in
xchg
pop
aas
int3
ret
scas
rcrl
xchg
inc
call
jp
popa
imul
and
in
clc
add
cmp
dec
add
adc
call
xchg
addb
mov
fbld
aas
cmc
mov
sub
fwait
aaa
cmp
xlat
ss
adc
adc
lods
fmulp
out
and
inc
dec
cmp
inc
out
lods
pop
sub
sub
adc
jbe
add
js
ret
jle
adc
movsl
add
dec
popa
hlt
pop
mov
sbb
xor
shl
stc
repnz
insb
in
mov
inc
sub
adc
lock
xchg
fdivrs
xor
orl
int3
out
popa
and
jl
or
mov
cmp
xchg
scas
rcr
xor
out
neg
enter
stos
and
inc
adc
cltd
es
adc
out
sarb
loop
and
cmp
out
xchg
addb
sti
xchg
cmpsb
lret
adc
inc
push
xor
hlt
pop
faddl
sub
repz
add
das
inc
pop
inc
pop
ret
push
stc
xchg
cmc
mov
fisttpl
enter
add
ss
adc
bnd
je
stos
cmp
cmpsl
hlt
push
js
xor
je
push
les
fs
xor
jbe
mov
sbb
loopne
adc
jge
adc
pop
sub
mov
push
imul
cmp
cltd
pop
daa
jp
gs
sbbb
fldenv
xchg
mov
aad
lea
lods
popf
adcb
icebp
stc
jge
add
push
cmp
push
push
rorl
add
fimuls
adc
mov
push
and
pop
ret
insl
xchg
addl
push
add
ret
jb
shl
enter
mov
add
pop
test
sub
ds
dec
sahf
rclb
data16
shrd
rcr
and
ss
jno
mov
mov
in
dec
xor
lea
sub
int
mov
shll
add
push
testl
out
imul
push
rcll
xchg
push
xor
cmp
adc
lcall
adc
outsl
lcall
sub
xchg
xlat
mov
mov
or
add
sub
jb
mov
aaa
cwtl
sbbb
test
xchg
ja
and
outsl
shrb
push
aaa
cmc
fdivs
sbb
std
inc
rcr
lea
jl
je
shrl
mov
leave
push
lods
xor
adc
ja
sbb
rorb
cmp
imull
xor
mov
dec
testl
pusha
mov
pop
mov
rol
add
imul
movsb
inc
pop
adc
dec
sub
fstl
popf
out
fldcw
fwait
mov
and
out
lods
adc
lock
or
adc
fs
stos
pop
fsts
mov
std
cvtps2pi
xor
rcll
xchg
jl
sub
cmp
int
push
xor
cmc
push
cmp
lds
out
mov
cmpsl
repnz
jp
mov
and
sbb
scas
in
jecxz
popf
popa
sbb
ja
fsubrl
sarl
and
inc
xor
test
adc
mov
pop
adc
mov
ret
mulb
loopne
mov
jnp
fidivs
add
sahf
and
pop
ss
jecxz
or
ss
iret
jnp
imull
dec
dec
mov
imull
jmp
repz
push
inc
cmc
pop
sbbb
xor
sbb
icebp
mov
adc
in
dec
jl
dec
ret
repnz
cli
loope
adc
and
pop
sarb
ja
lds
push
sub
jl
sub
pop
fnstsw
cli
repnz
xchg
inc
notb
push
es
dec
cmc
addb
fcmovnb
mov
mov
mov
or
insl
xor
jne
adc
xchg
or
or
and
in
add
sub
sti
subb
stc
scas
xlat
shrl
ror
mov
mov
in
cld
sarl
inc
cli
sbb
cmp
out
mov
decb
mov
pop
imul
mov
pop
sub
adc
xor
inc
jns
xchg
mov
mov
icebp
mov
mov
inc
mov
mov
out
pop
adc
std
adc
stos
or
leave
cmp
call
clc
jno
xor
mov
cmc
ljmp
xchg
jo
daa
outsb
rcl
pusha
cmp
lds
popl
aam
push
test
pop
das
mov
pop
or
cli
cmp
lea
fwait
xchg
mov
adc
cmp
push
int3
shrb
cmc
or
and
in
je
jecxz
mov
jl
insl
adc
jnp
addr16
les
jns
int
notb
jp
movsl
in
stos
mov
mov
xor
jmp
pop
xor
and
lea
mov
iret
shr
mov
cld
sub
adc
imul
fcomi
orl
fdiv
and
sbb
js
lret
jle
ja
ljmp
popa
mov
out
push
loope
sub
ja
cli
imul
and
insl
cmp
mov
movsb
imul
repz
xchg
mov
jns,pn
xchg
mov
jno
add
in
adc
jge
in
stc
jne
dec
fwait
lock
adc
adcl
xchg
jl
sbb
xchg
or
cmc
shrl
std
cld
inc
daa
out
fmull
aam
push
push
sbb
cwtl
jb
xchg
fidivs
test
scas
sbb
cmp
outsl
shrb
call
mov
dec
mov
pop
mov
cwtl
lcall
mov
movb
iret
incb
sub
mov
sub
sbb
movsb
je
test
or
cmpsb
mov
scas
leave
call
outsl
cmpsl
inc
cmp
data16
cmp
mov
sahf
adc
iret
in
or
loope
ret
insb
inc
in
ret
shll
push
push
notl
mov
je
xlat
std
cmpsl
inc
nop
pop
rorb
stc
inc
inc
mov
add
das
xchg
fnstsw
arpl
and
es
xor
pop
or
adc
mov
mov
lea
jmp
push
or
dec
pop
mov
insb
sub
std
dec
iret
jge
jp
sbb
cmpsl
xchg
xlat
cmp
subb
cs
jp
xchg
divb
cmp
sbb
cmc
xchg
dec
jg
jl
adc
sub
mov
fildll
outsb
jecxz
pop
rclb
jp
adc
cmp
jecxz
inc
jg
pop
jecxz
dec
cmpsl
pusha
or
outsl
jge
ljmp
xchg
xlat
adc
pop
lahf
mov
cmp
pop
pop
sub
test
sbbl
pop
mov
hlt
out
mov
cwtl
repz
int3
stos
cwtl
or
daa
icebp
xchg
and
inc
cmc
fsubp
jne
cmp
or
inc
sub
dec
push
fisubs
sub
mov
pusha
jg
fnsetpm(287
jb
dec
mov
je
dec
dec
pop
jo
addr16
mov
mov
mov
xchg
mov
stos
lret
stos
es
fnsave
and
int3
out
int3
inc
mov
mov
dec
mov
and
add
inc
flds
insl
imul
inc
hlt
nop
in
dec
push
dec
pop
push
xor
pop
xchg
mov
and
lret
inc
jp
aas
inc
repz
shrl
pusha
jecxz
in
rcrl
cmpsl
push
xor
cmp
and
lret
xor
inc
fimull
lret
in
xchg
aaa
adc
sbb
or
cltd
xor
xor
xorl
sub
movl
sub
or
xor
movl
mov
mov
mov
add
orl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movzbl
or
mov
movl
mov
addl
add
xorl
or
mov
not
mov
mov
add
xor
adcl
mov
mov
not
mov
subl
add
subl
and
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
movl
lea
andl
mov
mov
mov
sub
add
subl
mov
mov
orl
xor
add
movl
jne
movl
jmp
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
xor
mov
sub
mov
sbbl
mov
incl
xor
addl
xor
movl
sub
subl
sub
xor
movl
mov
mov
movl
mov
jmp
mov
neg
mov
xorl
xor
addl
xor
sub
and
sub
xor
mov
mov
adc
mov
xor
xor
adc
mov
mov
xorl
add
imul
xor
or
add
mov
mov
mov
sbb
mov
xor
xor
add
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
jmp
sub
jg
imul
stc
nop
inc
sub
sub
jp
fcomps
jp
test
aas
enter
imul
push
mov
push
jns
pop
js
sbb
sbb
and
mov
jg
xor
ror
mov
push
or
add
call
and
dec
imul
testl
popf
cwtl
je
or
and
mov
add
xlat
sub
ret
xchg
out
fucomp
adc
adc
int
sbb
ret
adc
dec
movsl
xor
in
xchg
dec
dec
into
stos
leave
jo
xlat
insb
pop
dec
fsub
aad
xor
push
fwait
dec
hlt
xor
les
add
out
sub
int
jp
push
ret
and
aam
push
adc
push
xchg
mov
sbb
bound
xor
out
ja
rolb
push
sbb
cli
pop
insl
pushf
es
xor
cmpsl
loop
jbe
cmp
mov
outsb
mov
xchg
loope
or
pop
mov
fwait
aaa
out
or
ret
pop
into
mov
lea
jno
and
aas
in
jge
mov
movsb
lods
mov
sub
ret
arpl
inc
mov
rcrl
icebp
sahf
or
adc
out
jecxz
iret
in
aam
cmp
xor
xchg
jle
insl
mov
mov
ret
cmp
push
jb
jb
jo
sbb
arpl
inc
pop
pop
sub
fwait
movsb
cmp
sarb
das
fs
pop
ja
test
je
push
fildl
int3
cmpsb
aas
mov
sbb
clc
aaa
dec
cs
add
cmp
cmp
dec
sbb
into
test
jns
or
xchg
xor
repnz
in
dec
in
mov
pop
and
outsb
sub
and
jecxz
stos
push
push
aas
and
xchg
sub
mov
inc
jg
mov
in
mov
inc
fisttpll
adc
add
mov
push
adc
mov
jmp
fcmove
in
or
outsl
xor
aad
es
loope
sub
jle
xchg
jns
xor
adc
lcall
popf
orb
stos
mov
push
push
movsl
aas
xchg
pop
xchg
sahf
or
jno
lds
dec
push
xchg
mov
sbb
cmp
test
push
cmpsb
lods
fs
cmp
add
jne
sbb
cwtl
test
or
cs
and
movsl
fidivrl
loop
inc
xchg
sahf
jle
mov
mov
ficoml
mov
pusha
pop
and
pop
lret
fsubrl
sti
mov
push
add
fcmove
push
sbb
mov
dec
cs
popl
cmp
fcmovnb
cmc
pop
aas
sbb
dec
adc
lock
mov
mov
faddl
lcall
sub
mov
std
sub
and
mov
mov
cmc
xor
push
mov
sbb
iret
rcll
mov
sbb
sub
xor
fcompl
cmpsl
add
test
add
xchg
aad
and
outsl
xchg
jg
mov
xor
and
repz
das
loop
mov
hlt
sarb
popa
in
jge
dec
cltd
jo
addb
data16
cwtl
pop
mov
les
mov
sub
fisubl
mov
push
cli
or
sti
in
fiaddl
andb
mov
std
dec
push
movsb
fucom
mov
scas
scas
mov
dec
sbb
sub
divb
sub
or
inc
jp
xchg
aas
and
cltd
test
cmc
nop
mov
push
insb
int3
dec
imul
pushf
jge
ret
fs
insb
scas
cmp
adc
dec
sub
cwtl
ja
mov
iret
dec
data16
mov
and
movsb
test
mov
dec
rcrl
mov
jle
cmpsb
mov
dec
dec
cld
jns
push
aaa
test
rolb
rolb
mov
mov
fnstcw
jg
and
fwait
test
stos
stos
adc
sbb
sub
cld
inc
pop
mov
cmp
cmp
fldt
xchg
push
sbb
das
mov
adc
movsl
xlat
and
int
aas
sub
adc
gs
dec
pop
xor
inc
sub
cmp
les
ficomps
testb
jg
hlt
pop
adc
int3
and
push
push
pop
daa
addr16
sub
sar
inc
inc
aas
pop
sub
lahf
mov
dec
mov
int3
arpl
loope
movsl
jae
ljmp
mov
jle
jb
cltd
push
enter
mov
js
inc
test
lcall
leave
sbb
inc
inc
or
inc
xchg
xor
pop
mul
xchg
and
js
dec
jle
cmp
or
outsb
sti
push
mov
sbb
das
test
ficoml
leave
pop
fildl
insl
movsl
inc
fistpl
add
addb
cmp
pop
push
xchg
in
bound
fs
mov
push
mov
xchg
pushf
dec
cwtl
sub
ret
xchg
cld
loopne
aas
es
stos
pushf
popa
cltd
cli
shl
popa
js
jecxz
ss
adc
gs
stc
mov
inc
and
mov
loope
sub
loopne
mov
fisttpll
cmp
repnz
push
je
push
dec
mov
rcll
and
in
push
jp
into
andl
mov
or
or
leave
repz
adc
cmovs
pop
je
add
cli
jbe
mov
mov
loopne
sub
sbb
jb
adc
push
xchg
jp
nop
mov
sbb
fsubs
shlb
and
test
inc
inc
xlat
adc
nop
lods
loope,pt
stc
pop
add
mov
mov
mov
sbb
orb
adc
fdivrl
sbbb
sbb
cmpxchg
or
shrb
and
jg
pop
test
mov
fwait
pop
and
mov
loope
ret
out
inc
stc
inc
loopne
inc
stos
jge
adc
xlat
clc
std
arpl
hlt
lea
xorl
jge
es
sti
insb
insb
incl
dec
push
daa
dec
xor
mov
aas
mov
sub
push
int3
mov
xor
mov
push
xchg
movsl
cmp
ret
or
dec
mov
scas
xchg
xchg
xchg
push
push
dec
rclb
std
or
testb
pusha
lds
int3
or
popf
cmpb
pop
jl
inc
mov
and
mov
popa
andb
stc
dec
jp
cmp
sub
test
mov
push
cmp
jb
push
js
leave
hlt
sbb
sub
mov
lcall
sahf
rcrb
mov
arpl
stc
je
or
xlat
test
mov
sub
xor
push
jb
and
insl
shll
adc
lock
test
dec
bound
inc
popa
lahf
stc
push
sub
jg
jo
cmp
clc
jp
mov
imul
sbb
adc
sbb
sub
jle
testl
jp
push
fs
sti
lret
mov
push
or
add
in
mov
shrl
mov
xor
adc
data16
lds
sarb
xchg
add
mov
repz
or
repnz
adc
add
inc
js,pn
inc
scas
mov
cmp
sbb
jl
popa
xchg
pop
rcll
and
adc
mov
fsubrs
inc
sar
insb
movsl
push
adc
test
insl
jmp
push
xor
data16
popa
ss
mov
sbb
aam
mov
adc
fbstp
fists
xlat
lret
push
jne
es
xchg
mov
sub
sbb
pop
dec
push
ss
mov
mov
enter
mov
sbb
sub
mov
shll
add
rcll
push
and
push
fadds
out
les
jb
arpl
add
jp
cmp
icebp
mov
xchg
sahf
pop
and
mov
ljmp
jge
mov
sbb
cmp
sti
cmp
pop
xchg
pop
aam
adc
in
jbe
shr
cmpb
fistpll
subb
push
ss
push
lods
test
pop
inc
loope
add
popa
jge
mov
testb
fwait
inc
int3
adc
mov
enter
imul
jl
inc
pop
ret
std
sbb
bnd
dec
pop
mov
mov
out
call
ror
testb
push
mov
jl
clc
stc
mov
add
test
nop
nop
and
mov
out
out
mov
sbb
dec
iret
xor
vdivss
cld
psubusb
cmp
inc
ss
pop
dec
sub
or
mov
mov
rcr
mov
pop
mov
adc
xor
dec
or
out
shlb
xchg
or
insb
cmp
mov
int
sub
push
out
xchg
dec
movsl
push
mov
lahf
and
xor
data16
in
dec
xchg
stos
mov
pop
lods
dec
mov
ret
xor
clc
dec
push
loope
sub
cmpsb
pop
pop
mov
jge
stos
rcrb
or
push
mov
and
xorl
ss
push
adc
sub
cmpsb
les
std
jns
xor
into
xor
lods
sub
mov
mov
mov
xchg
div
lds
sbb
sub
cmp
inc
mov
cli
stc
xchg
xchg
mov
js
in
sub
cltd
mov
cld
xchg
rcrl
into
sub
xchg
hlt
out
sti
insb
add
lret
rorb
cmp
mov
mov
mov
pop
push
add
sub
sub
sbb
aas
xor
pop
and
jns
fs
lret
sub
lods
dec
jmp
jg
jmp
bound
jae
and
packssdw
std
xchg
cmp
cs
inc
and
out
dec
mov
fsubrl
dec
loopne
int3
loop
cmp
xor
bound
xchg
mov
push
jne
jp
dec
jnp
inc
pop
cmp
dec
mov
dec
and
adcl
xchg
push
aad
mov
loopne
pop
xchg
inc
imul
sbb
int
cld
enter
mov
fldl2t
jle
mov
add
loop
mov
or
mov
fucomip
cmpsl
add
mov
adc
movsl
lods
push
mov
push
xchg
test
aam
and
sarl
mov
in
add
xor
scas
adc
dec
movsl
testl
in
aam
mov
and
cmp
mov
xchg
jg
repz
add
dec
outsb
sub
mov
inc
cmovb
cmp
pop
orl
inc
and
iret
sahf
mov
mov
push
mov
imul
imul
sub
sub
sub
adc
cwtl
or
bound
ret
int3
cli
dec
push
push
or
push
lods
cmc
push
popa
xorb
pop
mov
jo
stos
xor
mov
cmpl
enter
or
sub
testl
bound
popa
dec
leave
adc
mov
faddl
sbb
cmp
pop
sbb
xchg
mov
add
int3
push
xlat
movsb
push
bnd
rcrl
jecxz
pop
or
push
or
mov
shll
cmpsl
sub
xchg
aas
xchg
add
lods
inc
dec
mov
les
lods
fidivl
lea
idivb
mov
js
mov
outsl
push
adc
mov
cs
loope
aas
push
lds
xor
xchg
popa
add
mov
jmp
shrl
leave
pop
mov
test
sbb
push
mull
fildl
mov
xchg
inc
inc
mov
or
xchg
cltd
cmp
cmpsl
mov
data16
popa
pop
fs
js
lock
and
adc
sub
or
mov
mov
mov
das
shll
sub
fsubrl
sbb
sub
jae
in
mov
mov
scas
xchg
push
pop
arpl
and
add
or
xlat
xor
xor
dec
and
mov
sahf
jae
or
sub
add
xchg
dec
inc
xor
or
pushf
fs
rcrl
sbb
jmp
hlt
pop
push
mov
pop
xor
fisubl
mov
xlat
je
pop
mov
popf
push
jnp
xchg
cmp
sbb
add
je
jge
mov
pop
les
xor
lock
lcall
iret
pop
push
pusha
add
jae
push
ret
sub
imulb
mov
std
jmp
sub
xor
xchg
adc
mov
or
les
mov
sub
addr16
jae
lcall
xchg
or
ja
lret
scas
dec
jle
iret
push
bound
cmpb
dec
sbb
and
sub
and
jnp
push
xor
push
inc
ja
pop
inc
jle
mov
aaa
inc
push
pushf
rcrl
add
sbb
and
sub
js
add
push
mov
pop
xchg
in
mov
mov
in
sub
add
sub
sbb
out
fmul
xchg
jmp
inc
mov
sahf
mov
shll
bnd
xchg
sbbb
mov
push
mov
xchg
shl
dec
les
adc
sti
data16
icebp
cltd
rcrl
ds
pop
loop
addr16
sti
dec
lcall
fsubrs
ds
add
inc
adc
andl
in
movsl
add
or
push
call
insl
mov
das
push
dec
cmp
xchg
cmp
sub
cmp
or
cmp
stc
adc
mov
outsb
push
sub
aaa
mov
lods
ja
dec
sarb
pop
jns
jmp
lahf
adc
add
xchg
loopne
add
push
fidivrl
stos
inc
jnp
sub
push
incb
mov
add
xchg
cltd
inc
sarb
cs
orl
lcall
adc
pop
pop
fsubrp
lds
jae
inc
dec
scas
pop
loop
in
adc
cld
out
push
pop
dec
repz
add
scas
iret
stos
sti
cmp
jge
xchg
push
jp
jge
cmp
jnp
pusha
mov
xchg
pop
pop
and
scas
test
pop
in
mov
std
fs
loopne
pusha
je
dec
pop
push
lret
popa
push
fmuls
pop
push
adc
jo
lods
loopne
out
aas
pop
insl
add
int
jp
sub
mov
test
or
xor
es
push
insb
or
cmp
adc
sub
mov
dec
xor
mov
sub
in
sar
add
mov
xlat
dec
and
add
cmpsb
adc
repz
aad
push
add
or
std
in
sub
and
or
adc
cmp
dec
mov
xchg
lcall
pop
add
push
xor
push
arpl
lods
fwait
cmp
mov
scas
jmp
sub
push
mov
jg
dec
stos
lcall
les
and
xor
aas
inc
xlat
add
repz
and
sbb
inc
push
subl
inc
inc
xor
fmul
mov
rolb
jecxz
arpl
dec
add
nop
test
notl
clc
nop
mov
push
js
inc
pop
cmp
xchg
mov
sti
std
nop
or
pop
call
adc
dec
add
and
cmp
push
add
mov
inc
call
dec
insb
mull
push
pop
roll
cmp
jbe
jle
fwait
int3
push
xor
test
fists
arpl
dec
jecxz
push
lcall
or
hlt
mov
fwait
pop
xor
push
shlb
add
test
mov
push
mov
dec
repnz
std
sbb
in
jge
xchg
push
repnz
iret
cmp
shrl
dec
sub
jg
mov
sbb
subl
push
pop
pop
stc
call
scas
mov
add
aad
xchg
ret
add
lock
sti
fxch
mov
in
shr
loope
mov
pop
push
mov
mov
lods
in
out
arpl
cltd
lret
movsb
test
mov
cwtl
mov
lods
iret
inc
adc
mov
inc
inc
in
fs
push
popa
sbb
sbb
sub
lcall
mov
xor
xor
ja
out
out
jo
ret
push
mov
lret
pop
dec
stc
mov
inc
cmp
ret
mov
mov
ret
testl
jae
movsb
sbb
jg
mov
test
mov
fcompl
and
fildll
out
fs
mov
mov
mov
dec
dec
and
push
stos
test
xor
jne
xchg
mov
iret
popa
enter
xor
sbb
jle
xchg
popf
push
dec
xchg
push
mov
push
inc
add
fistl
insb
mov
les
or
push
stos
repz
insl
push
dec
add
jge
in
pushf
jbe
rcrb
jne
xlat
je
mov
xchg
sub
scas
dec
lcall
test
int3
inc
data16
je
mov
enter
pop
cmp
and
movsl
pop
out
insb
inc
and
xchg
lock
inc
shl
cld
and
cld
adc
fs
fstpt
xor
mov
loopne
pop
aaa
xor
test
stos
mov
inc
fbld
gs
fidivrs
sarl
adcb
mov
push
pop
mov
jns
fists
fnstsw
stos
xchg
adc
adc
dec
mov
sbbb
push
jl
cltd
xchg
popa
loopne
adc
inc
jle
or
movsl
test
mov
mov
mov
sub
pop
inc
into
cmp
js
jp
icebp
push
das
mov
inc
push
adc
enter
push
dec
icebp
push
mov
into
xchg
int3
xor
int3
add
test
push
dec
cmpsl
fsubl
or
cmp
cmp
mov
sub
icebp
notl
mov
mov
pop
arpl
aas
sbb
cmp
pop
mov
in
shlb
adc
sar
add
mov
mov
or
fstps
in
aas
dec
dec
push
jb
mov
out
stc
pusha
jg
inc
aas
int
leave
pop
outsb
inc
int3
mov
push
cmp
push
xchg
jb
sbb
inc
dec
jae
outsb
fldt
std
adc
nop
pop
scas
inc
sub
dec
cwtl
sub
rolb
mov
xor
xchg
ss
loop
test
sbb
or
cli
add
adc
xor
push
or
dec
xor
jge
popf
lds
dec
xor
cmpsl
leave
popf
jg
bswap
pop
sub
sub
mov
out
stos
out
add
pushw
aaa
pop
sub
push
mov
mov
mov
gs
inc
push
add
mov
clc
push
xor
movsl
push
leave
arpl
jne
pop
aad
xlat
jne
sbb
pop
mov
or
dec
sub
mov
cmc
in
xchg
or
xlat
sbb
aas
outsb
sub
leave
and
cmpsl
mov
int
ljmp
testb
loop
and
lods
jno
lods
dec
add
cmp
sbb
jp
or
cmpsb
outsb
ds
cmp
cmp
adc
shlb
inc
cmp
outsl
int
popf
xchg
and
call
push
push
mov
roll
sahf
cmpb
add
mov
fsubl
test
into
lea
nop
add
call
dec
sbb
jle
mov
shl
pop
imul
loopne
and
sub
outsb
jns
add
xchg
sar
xor
in
lahf
addb
pop
cmpsl
orl
lea
jecxz
out
mov
inc
cmp
ds
repnz
dec
dec
jmp
cwtl
movsb
cmp
in
das
pop
pop
and
and
push
xchg
fistps
inc
stos
and
xor
das
int
addr16
shrb
push
mov
fldenv
fbld
loope
nop
outsl
out
test
and
ror
sbb
popf
mov
pop
sbb
push
fcomip
add
xor
shll
lods
fwait
add
sbb
lds
jns
bound
mov
lods
push
pop
nop
in
mov
out
dec
aaa
push
xlat
lret
jb
cwtl
mov
adc
inc
or
xor
mov
pop
xor
add
xor
in
dec
div
fcomps
ret
push
cwtl
add
dec
cmp
pop
lea
out
and
fimull
and
inc
jnp
sub
clc
mov
mov
and
adc
clc
jns
add
imul
sub
inc
js
inc
push
lcall
jae
cmp
fistpll
push
sbb
mov
fsubs
adc
enter
out
int3
sub
stos
inc
adc
or
mov
pushf
sbbb
repz
and
xor
sbb
mov
and
movsb
in
jb
xor
pushf
stos
aad
mov
dec
inc
mov
incl
cltd
mul
xor
xor
js
aad
repz
mov
or
inc
mov
ljmp
dec
sbb
push
lahf
push
mov
dec
insb
rcrb
or
cmp
mov
pop
lahf
adc
pushf
push
add
adcb
push
push
push
jmp
mov
jnp
add
neg
sbb
mov
in
dec
cmpsl
push
add
mov
pusha
into
lea
xchg
sbb
ror
mov
jb
mov
popf
std
xlat
or
sbb
int
ja
ret
stos
cld
xchg
aaa
mov
xchg
jns
jp
or
jae
pop
loop
fisubrs
pop
test
cmpsb
scas
adc
repz
jne
mov
xor
imul
mov
and
jge
ja
xor
inc
push
push
es
stos
dec
daa
or
or
subl
andl
hlt
mov
push
adc
repnz
jae
scas
cmpsb
and
outsl
pusha
and
addr16
dec
mov
xchg
in
out
pop
stos
loopne
jl
pop
dec
mov
inc
test
xor
xor
mov
mov
push
ja
icebp
inc
mov
push
adc
xor
pop
and
std
movsl
jl
mov
leave
sti
ja
mov
pushf
pop
adc
mov
or
inc
and
fbld
and
push
or
mov
add
lret
push
dec
add
stc
jnp
cltd
std
incl
jae
and
out
loope
jmp
addb
sub
rcrl
dec
dec
sub
or
iret
fadd
dec
cmp
repnz
jecxz
ss
scas
jno
std
jne
cmp
xchg
test
adc
cmpsb
adc
adc
and
and
fldt
inc
jns
shrb
add
jp
jae
add
dec
mov
mov
out
xchg
into
lods
in
gs
dec
add
adc
int3
mov
xchg
test
cmp
test
inc
sahf
insl
test
cmp
dec
aam
push
jge
mov
pop
cmpsl
pusha
adc
cmc
rorl
inc
adc
pusha
shll
aaa
gs
dec
cmp
push
mov
out
call
push
loopne
lea
ret
repz
icebp
leave
aam
clc
pushf
dec
inc
sub
jo
arpl
sbb
jns
fmull
shll
jne
jle
into
decl
dec
popa
cmp
push
cmp
jae
xor
movsb
das
out
dec
out
mov
hlt
std
cwtl
data16
lock
mov
push
and
in
xchg
gs
and
and
jge
mov
test
or
and
popa
cmp
dec
shrb
jmp
shlb
movsb
decb
into
pop
push
mov
adc
dec
insl
icebp
into
mov
push
push
nop
add
mov
scas
imulb
adc
ret
ljmp
nop
data16
and
dec
xchg
sbb
arpl
enter
xchg
lcall
das
lods
icebp
cmp
enter
test
jo
mov
rcr
scas
push
sbb
cmpsb
pop
stos
test
cltd
lahf
scas
cmpsb
cli
lods
cmp
jno
mov
xlat
repz
mov
mov
hlt
jmp
xor
iret
mov
push
mull
xor
jp
idivl
in
mov
and
add
cmp
outsb
xor
rorb
nop
sbb
inc
hlt
lahf
mov
les
pusha
push
jae
or
insl
addb
dec
lods
testb
jg
and
gs
repz
mov
aas
andb
insl
sbb
adc
cld
leave
icebp
mov
movsl
sub
xchg
ss
mov
and
xchg
imull
xchg
insl
out
popf
icebp
or
aam
mov
data16
fucom
sub
lods
cmpsl
xor
lea
mov
dec
stos
jne
pop
andb
das
mov
inc
lret
and
out
xor
mov
push
and
test
and
mov
fnclex
les
sub
and
loopne
in
add
push
testb
ror
jl
js
enter
adc
and
ja
sbb
test
popf
mov
jo
paddsw
inc
cld
jp
dec
repz
lret
sarl
jns
xchg
dec
sti
dec
sub
mov
imul
jp
mov
test
sub
loope
aas
int
sbbb
pop
loope
fdecstp
sbb
movsb
jo
jl
or
rcr
inc
jbe
mov
rcrb
jle
lea
mov
jg
jmp
ja
in
mov
mov
orb
push
mov
push
sub
jo
or
xchg
mov
inc
jecxz
les
ss
int3
scas
rorl
jl
test
xchg
fisubrl
and
and
mov
test
adc
mov
lahf
xor
hlt
call
fs
push
loop
dec
push
fnstcw
imul
sub
mov
hlt
test
mov
mov
xor
and
out
push
mov
mov
pop
xchg
cli
ds
lock
sub
mov
outsb
repnz
xchg
inc
cmc
test
cmp
cltd
jo
sbb
subb
pop
repnz
mov
and
jnp
ret
xchg
mov
stos
fstpt
mov
mov
clc
sti
and
cltd
aas
lock
dec
mov
sub
cmp
fnsave
sbb
popa
rcr
push
xchg
stos
cmp
xor
div
dec
ds
push
jp
cmpsl
subl
pop
xchg
xchg
push
push
push
loopne
push
push
ljmp
cmp
js
push
in
xor
inc
jge
inc
cmpsl
fisttpl
imul
sub
push
rorl
push
dec
out
pushf
loop
ret
or
mov
and
fidivs
xchg
inc
jp
mov
aas
mov
inc
in
outsb
pop
mov
out
leave
pop
mov
sub
add
lahf
mov
mov
push
push
test
sbb
ret
mov
loopne
inc
loop
in
mov
popa
mov
push
insb
xchg
ficomps
or
add
out
repnz
xchg
cmp
into
leave
dec
xchg
dec
in
xchg
jmp
xlat
dec
fistl
push
jmp
pop
inc
mov
cli
xor
iret
xchg
sarl
sbb
out
fdivr
stos
adc
notb
test
outsb
sbb
adc
jns
push
push
rol
sbb
mov
inc
lret
out
shrb
out
cli
je
addr16
pop
mov
lret
ja
lcall
or
in
cmpsl
xchg
clc
xchg
in
daa
rcrl
int3
xor
insb
xor
nop
cltd
mov
out
add
lock
insl
inc
mov
inc
daa
fists
xchg
out
outsb
or
dec
or
sbb
data16
idivl
lods
addb
outsl
daa
popf
sub
push
mov
mov
test
idivl
add
push
inc
cmp
xor
push
mov
gs
pop
rcll
std
sbb
sbb
out
and
and
mov
fs
lods
icebp
icebp
dec
xor
imul
xor
ss
aad
ficoml
xlat
repz
aaa
mov
inc
add
pop
fiadds
outsl
xlat
or
mov
or
push
jo
test
movsl
mov
push
imull
xor
std
xor
xchg
dec
repz
pop
out
adc
insl
push
mov
xchg
sub
frstor
inc
lods
hlt
pop
push
sbb
push
and
xchg
js
cmpsb
out
movsl
pop
inc
js
out
jp
sub
mov
shrb
icebp
mov
fisubl
xchg
mov
test
xchg
xchg
js
and
insl
int3
cmpsl
jle
xchg
sbb
mov
test
inc
in
xor
fcmovnu
pop
sti
cmp
sti
insl
test
jno
add
cmp
cmpsl
dec
ret
data16
jno
cmp
cmpsb
adc
push
dec
xchg
push
roll
xor
adc
inc
popa
mov
jbe
lds
lret
into
add
mov
faddl
jb
mov
hlt
xchg
fidivrs
mov
or
sti
mov
mov
dec
push
call
xchg
fwait
lds
outsb
out
pop
in
xchg
jl
test
push
lcall
push
pop
mov
in
out
adc
pop
aam
lock
push
lret
pusha
pusha
mov
sbb
mov
test
or
jo
jo
sar
ljmp
push
mov
dec
cmp
adc
sub
jbe
lahf
sti
sahf
and
idivb
or
aas
sahf
js
mov
movsl
iret
cltd
rcll
int3
das
shlb
dec
je
aad
jae
lds
push
cmpsb
movsb
test
mov
mov
test
pop
int
pop
xlat
sti
or
das
xchg
or
push
gs
inc
std
fadds
das
dec
or
pop
xchg
mov
outsl
sbb
push
adc
or
ret
fldl
push
fs
stos
xor
in
bound
mov
enter
dec
les
test
adc
in
adc
and
jp
in
pop
ret
mov
fidivrl
das
push
or
arpl
mov
add
sbb
push
jnp
add
push
inc
sbb
inc
imul
dec
frstor
sbb
cld
adc
test
pusha
rorb
mov
xor
xor
lock
insb
mov
jb
xor
cmc
std
pop
nop
cltd
adc
cmpl
fsubrl
jnp
xchg
neg
in
jge
scas
sahf
or
push
test
jno
jo
clc
arpl
sti
out
xchg
mov
xor
int
rcr
outsb
adc
mov
es
mov
mov
ja
cmpsl
xor
rcl
movsl
cld
fldl
imul
test
mov
jmp
repz
lods
fdivr
stos
pop
mov
ds
mov
cltd
repz
cld
and
mov
sub
pop
cltd
cmpsb
sub
leave
pop
jns
mov
push
test
fcoml
jnp
push
test
inc
mov
pop
leave
loopne
mov
les
enter
mov
loop
pop
cli
sub
add
mov
mov
xor
add
jmp
clc
fsub
mov
mov
mov
cmp
push
jns
fcomps
jp
dec
dec
cmp
stos
mov
outsb
ja
subb
mov
roll
sub
xchg
loop
xor
lds
outsl
imul
xor
dec
and
mov
jl
inc
rolb
enter
push
xchg
xchg
sub
mov
cmc
fdiv
inc
sub
nop
inc
pop
and
or
or
inc
and
sti
push
out
xchg
pop
aam
ret
add
xor
sub
xor
sarb
lcall
rorl
dec
cli
xor
outsl
push
enter
add
dec
sbb
shlb
adcb
sarb
xlat
adc
mov
or
mov
leave
stos
out
xchg
sahf
add
cmp
mov
xchg
mov
xlat
popl
rolb
dec
adc
adc
sub
loopne
jbe
push
out
scas
jns
add
sti
mov
shl
and
in
sbb
xchg
jns
nop
subl
cmp
xor
sarb
in
lahf
push
or
repz
scas
in
pop
test
mov
lret
and
mov
sub
dec
adc
jecxz
inc
test
outsl
leave
pop
call
pushf
bswap
jg
and
lcall
shlb
rorl
lods
repnz
out
lds
imul
lret
mov
sub
cmp
shlb
notb
xorl
fcompl
lcall
jg
aaa
mov
mov
leave
sbb
loopne
cmpsb
outsb
sbb
test
push
js
xchg
pusha
mov
adc
leave
or
jle
cltd
cmp
sbb
jo
mov
cmp
sbb
add
cmpb
xchg
fnstcw
mov
pusha
aam
push
in
push
xchg
mov
js
push
cli
dec
clc
divl
scas
add
cmc
jp
dec
mov
fcompl
pop
xor
dec
rorl
mov
jne
mov
movl
push
ds
stos
ds
fstpt
maxps
and
cmp
nop
test
push
outsb
jge
lret
arpl
and
negl
mov
cltd
pop
inc
jno
jae
mov
bound
mov
push
jb
sahf
out
pusha
clc
cltd
mov
xchg
leave
dec
mov
add
fs
xlat
not
jmp
imul
idivl
dec
inc
es
mov
pusha
shrb
int
sbb
in
xchg
stos
lods
iret
cld
ds
sub
ret
sub
push
hlt
mov
jnp
sbb
mov
pop
sub
add
sbb
mov
push
pop
fstenv
sbb
test
jno
dec
jg
inc
jno
movsl
iret
adc
mov
sti
mov
xor
pop
leave
andl
loopne
shll
out
cmpsl
dec
xor
das
cmp
loope
push
mov
loop
jecxz
hlt
or
divl
push
je
lahf
add
mulb
xchg
cmc
sbb
mov
sub
xor
inc
shr
dec
imul
loop
test
fsubl
jge
cwtl
mov
add
jecxz
push
pop
cli
in
data16
push
clc
sub
rorl
lds
and
lcall
daa
jp
mov
mov
xor
cmp
lods
jae
ja
add
aaa
scas
pop
add
xchg
bound
mov
aaa
stos
lock
clc
xor
ss
dec
xor
outsl
jno
lea
test
pop
inc
or
out
push
outsb
mov
jbe
push
andb
call
pop
mov
divl
push
and
xchg
fidivrs
mov
pop
push
pop
cli
outsl
in
xor
into
xchg
adc
and
jp
sbb
push
pmaxsw
ljmp
pushf
es
xchg
outsb
add
iret
jg
push
and
mov
pop
and
sub
subl
hlt
sbb
std
sahf
movsb
mov
mov
addr16
pop
stc
pop
adc
jae
adc
inc
das
and
add
sahf
cwtl
inc
into
jae
add
cmp
pusha
loope
dec
lret
rcr
mov
jnp
dec
fildl
test
out
and
inc
sub
pop
in
ret
add
push
sub
rorl
test
lret
mov
test
enter
rorb
popa
or
adc
test
xchg
and
mov
daa
dec
fisubl
mov
pop
cmp
jmp
gs
mov
test
adc
xchg
xchg
pop
lret
shlb
out
inc
xlat
ljmp
orb
ljmp
outsl
xchg
mov
xchg
lods
pop
lahf
es
jae
sti
adc
push
aas
test
pop
mov
imul
mov
push
pop
pop
fmul
push
pop
out
pop
push
mov
fistpll
push
out
enter
inc
mov
ret
push
insb
cmp
xchg
xchg
xchg
push
add
cmpsb
jnp
insb
add
or
in
and
nop
jl
rcrb
mov
clc
mov
xor
sub
inc
negb
inc
aad
and
aas
jmp
stos
xchg
movsb
daa
xor
adcl
nop
pop
pop
sbb
aam
or
fwait
sahf
icebp
repz
jmp
fwait
pop
xchg
push
mov
repnz
jge
pushf
pop
ja
ljmp
cmpsb
push
sub
stos
jno
xchg
and
dec
fldt
jnp
mov
nop
incl
inc
or
push
enter
mov
mov
mov
outsb
notl
xor
test
shlb
stc
fucomp
mov
iret
repnz
int
mov
jecxz
adc
fnstenv
xchg
js
addr16
sbb
adc
dec
cmp
adc
clc
in
inc
fnstenv
or
call
fwait
data16
xor
rorb
push
push
nop
cwtl
xor
loopne
cs
arpl
pop
cmp
sbb
xchg
cld
mov
mov
inc
not
out
scas
popa
nop
popa
mov
dec
popa
push
shlb
ljmp
gs
jno
cltd
scas
imul
cmp
pop
out
dec
mov
and
lret
enter
add
or
push
stc
imul
xchg
and
arpl
mov
dec
pop
aaa
fwait
dec
test
push
jns
or
cmp
repz
adc
push
in
push
mov
mov
xor
jmp
cmpsb
out
adc
out
enter
xchg
enter
push
hlt
sbb
xchg
outsl
adc
xchg
jnp
xorb
data16
inc
rcl
loope
out
mov
and
cmp
pcmpeqd
mov
stc
sub
insb
push
sti
cmp
bound
imul
cmp
cmovns
ret
out
push
add
scas
jae
jp,pt
sahf
nop
rcrb
lahf
adc
rclb
inc
das
xor
xchg
jnp
cmp
xor
insl
or
std
add
pop
adc
and
fstp
clc
loope
fidivl
inc
bswap
xor
lret
xchg
pop
movsb
add
and
and
in
pop
mov
hlt
mov
dec
jmp
imul
push
lock
xchg
mov
push
cmpsb
je
popa
adc
inc
mov
ds
test
or
subb
gs
add
sbb
xor
mov
jo
or
sarl
clc
jp
or
out
lods
mov
pusha
pop
scas
xchg
mov
jns
mov
fs
std
movsb
sub
cltd
orl
enter
scas
lret
gs
inc
xchg
jnp
add
fdivrl
push
loope
scas
sub
nop
xor
dec
pop
pop
push
mov
push
out
jge
or
mov
jge
fsubl
lcall
sbb
inc
or
adcb
cmp
mov
cmp
imul
and
sub
adc
push
pop
mov
in
pop
cmp
daa
lcall
pushf
fcomps
inc
and
out
pop
xor
outsb
ja
jmp
clc
jecxz
mov
pop
push
call
outsl
pop
xchg
sub
out
stos
shr
ret
and
cmp
outsb
push
fbld
ret
lahf
inc
pop
repnz
cmc
xorb
jbe
test
das
dec
xor
std
sub
int
popa
std
fstp
test
test
loop
adc
inc
sbb
adc
mov
das
imul
pop
arpl
jne
outsl
adc
lret
pushf
pop
test
jbe
dec
xchg
out
stos
mov
iret
xchg
shll
ja
jl
mov
aas
mull
sbb
subl
inc
jae
jbe
orl
repnz
out
push
pop
test
in
dec
xor
shlb
jnp
shr
inc
pop
and
push
mov
sub
fwait
adc
fdivrs
inc
dec
test
fs
adc
lods
cmc
pop
arpl
icebp
inc
inc
inc
or
push
lret
push
or
roll
dec
jnp
and
cs
mov
aaa
xchg
insl
das
rcll
mov
push
sbb
pop
add
jbe
jno
stos
or
popa
mov
fisubs
mov
call
mov
adc
stc
xchg
loope
dec
outsb
movsl
xchg
ljmp
pop
mov
add
adc
sub
scas
lea
jae
ja
nop
fistpll
mov
push
add
jne
dec
out
or
xchg
pop
pop
sub
mov
inc
pop
xor
insl
lret
fistpl
stos
xchg
ss
and
xchg
scas
xchg
cmpsb
xchg
lcall
cmpsl
jno
popa
gs
push
jge
xchg
jecxz
or
cmpl
test
je
fadds
xchg
fcoml
inc
sbb
jbe
mov
rorl
xor
xchg
mov
lods
mov
fisttpl
int3
mov
mov
xchg
nop
jl
jbe
push
jecxz
fsubs
cld
popa
pavgw
xchg
and
mov
movsb
push
js
cmp
or
shl
adc
and
iret
inc
add
loope
and
jns
call
mov
rcl
ljmp
xchg
inc
jb
cmp
out
mov
add
jb
xor
data16
in
aad
test
xchg
dec
lcall
pop
adc
push
cmpsb
scas
xchg
insl
or
mov
cmpsl
pop
cld
xchg
xchg
mov
sti
adc
test
js
fstps
inc
mov
fistps
sbb
imul
addr16
rorl
or
pusha
jp
jp
jle
ret
pop
nop
ds
movsb
idivb
aas
nop
dec
out
ss
push
cmpsl
xorl
rolb
xor
call
inc
loop
in
add
aam
incl
adc
sbb
out
loopne
or
aad
mov
stos
mov
add
lds
push
arpl
lea
cltd
fists
pop
movsl
jge
cs
cmc
orl
sub
xchg
fistps
xor
aaa
sub
fwait
movsl
hlt
adc
sbb
test
mov
pop
push
ss
outsb
loope,pt
mov
mov
faddp
out
pop
xchg
cmpsl
mov
loope
imul
mov
arpl
aad
lsl
rcl
inc
mov
push
fidivrs
enter
add
outsb
jmp
cmp
jne
movsl
test
push
incl
push
ja
es
insb
sub
out
bound
test
push
sbb
mov
sahf
test
mov
ret
sub
inc
dec
insb
sbb
dec
mov
jecxz
hlt
ja
mov
sub
or
adc
icebp
leave
ljmp
ljmp
movsl
push
call
sbb
imul
push
clc
xchg
outsl
icebp
in
xchg
fwait
push
je
mov
das
mov
pop
rolb
mov
xchg
jns
iret
aam
les
ss
add
push
mov
jmp
fdiv
repz
sbb
inc
mulb
jne
int3
jmp
repz
lea
mov
or
pop
dec
sub
dec
outsl
adc
fcmovnu
mov
lret
sbb
call
lock
adcb
mov
movsb
in
lea
outsb
data16
das
and
inc
mov
inc
nop
lahf
sbb
jbe
lds
mov
out
mov
inc
sti
aad
mov
push
loope
popl
icebp
je
and
cmp
rclb
out
mov
les
xchg
mov
push
inc
or
xchg
lcall
xor
mov
int
mov
out
sub
sbb
lock
and
pminsw
jge
jmp
inc
xchg
aam
jmp
and
fdivl
shl
insb
movsb
jl
insb
enter
xchg
push
and
xor
das
js
xchg
mov
adc
add
hlt
popl
lret
nop
loop
cmp
mov
lock
dec
push
sbb
fsubs
mov
xor
or
sbb
pop
xchg
aas
jecxz
ret
cmp
outsl
int
jnp
subb
push
arpl
jnp
imul
lds
sahf
cli
test
sarb
inc
sub
test
dec
shll
mov
cmp
cmpsl
dec
jno
cmpsb
mov
push
ret
inc
fwait
inc
cmp
mov
in
outsb
or
add
mov
loope
dec
xor
nop
aas
int3
mov
dec
fwait
xor
push
lcall
pop
mov
xchg
mov
std
loopne
sbb
jge
mov
lods
jge
shlb
or
mov
cmp
and
das
arpl
jnp
xor
cmpsl
jecxz
adc
cmp
adc
pop
inc
or
pop
test
into
imul
lods
add
mov
push
jmp
inc
mov
in
xlat
pop
stos
or
out
int
lcall
aaa
sub
out
sbb
sub
into
stc
mov
in
fsubr
and
push
imul
in
xlat
and
cmp
xchg
mov
cmp
push
inc
adc
loopne
std
lcall
cmpsb
enter
jno
pop
mov
mov
jp
push
sbb
jno
sub
gs
xor
std
xchg
mov
repnz
inc
imul
int
stc
xchg
std
or
push
iret
or
xor
cwtl
push
mov
add
cmp
stos
aaa
pop
jl
rcrb
lahf
lcall
xchg
dec
dec
xor
pop
shll
out
and
sarl
cwtl
adc
inc
sti
out
test
push
mov
pop
adc
lea
mov
or
icebp
in
add
adc
fs
push
pop
inc
or
enter
push
and
je
test
leave
inc
pop
ret
std
cbtw
mov
cmp
iret
jecxz
pop
mov
dec
mov
sahf
addb
repnz
into
icebp
arpl
sti
rcrl
rorl
out
rcl
sti
cwtl
inc
pop
push
dec
je
mov
dec
int3
jne
mov
fstpl
add
or
scas
mov
add
pop
ffree
movsb
mov
mov
adc
jne
test
cs
lahf
sbb
fcompl
and
in
dec
inc
push
leave
adc
fisubl
jge
or
adc
sbb
push
inc
std
sub
dec
pop
inc
cmp
bound
lock
fs
sarb
or
jp
xchg
jbe
pop
incb
add
out
jge
pusha
sub
in
out
pushf
test
lahf
imul
mov
push
cmp
xchg
lcall
inc
lcall
int3
cmp
sub
adc
aaa
lods
insl
jecxz
loop
stos
dec
jbe
jb
push
xchg
cwtl
add
imul
loopne
mov
push
push
rcrb
cwtl
clc
xchg
mov
pop
out
jnp
inc
in
icebp
sbb
iret
inc
xor
mov
push
xor
pcmpgtd
ja
lahf
cmp
andl
call
hlt
sbb
int
bound
pop
in
cmp
xor
fnstenv
repz
mov
xchg
sub
cli
inc
out
mov
inc
scas
subb
sub
add
add
iret
hlt
test
addr16
imul
out
div
ffreep
mov
adc
imul
pop
add
push
add
fs
jbe
dec
mov
mov
rorb
test
inc
pop
add
sahf
jmp
sub
dec
andl
shll
int3
or
pop
adc
push
xlat
cltd
rclb
push
xchg
push
ja
dec
into
lds
inc
js
push
dec
add
inc
pop
push
and
jmp
das
xchg
mov
mov
inc
jecxz
sub
scas
pop
xor
pop
mov
cmpsb
jg
fsubp
in
and
cld
mov
movsb
pushf
and
xor
fwait
jge
pop
mov
fisttpl
push
stc
cmp
lods
imul
loope
adc
leave
xor
jo
test
sbb
sub
not
mov
push
shrb
xchg
mov
jecxz
dec
fnsave
push
insb
mov
out
andb
jge
loop
popa
mov
mov
push
push
jne
mov
sub
pop
mov
lret
das
mov
inc
xor
aaa
mov
fldcw
andl
mov
dec
add
addr16
add
sahf
adc
pop
jg
fdivl
inc
dec
neg
and
inc
inc
pop
mov
loope
lods
ja
xor
stos
test
popw
xchg
push
outsl
mov
lds
sbb
inc
andb
jl
dec
inc
xchg
roll
dec
jnp,pn
xor
xchg
lds
repnz
lock
pop
add
mov
push
pop
fucomip
stc
call
cld
iret
mov
cmpsl
pop
ret
std
test
cmp
leave
mov
sti
mov
hlt
cltd
sbb
inc
test
pop
jl
add
pop
aam
or
jecxz
jno
mov
scas
pop
loopne
or
imul
push
subw
movsl
xchg
jbe
loopne
mov
push
mov
out
dec
call
xchg
lahf
arpl
sarb
xor
out
xchg
push
mov
mov
add
shlb
and
cmpsb
cmpsb
push
mov
cmp
popf
push
mov
cmpsl
and
lret
mov
inc
loop
loopne
stos
std
incb
aas
lret
xlat
push
or
sbb
mov
mov
ss
aas
ret
xchg
ja
jle
cmp
mull
xor
pop
cwtl
and
out
xorl
and
mov
lcall
xchg
into
sub
fidivs
imul
sub
xchg
int
or
dec
and
inc
adc
or
testl
xchg
and
add
jno
aad
sub
xlat
mov
loopne
dec
mov
insb
xchg
mov
pop
and
inc
ds
jno
movsl
bound
jmp
cmp
xchg
pop
rclb
jb
pop
pop
and
nopl
repnz
popw
lret
pop
pop
sbb
inc
jb
or
or
add
sbb
dec
dec
shrl
data16
jge
sbb
jo
pushf
loop
xchg
int3
std
pusha
cmp
add
sub
dec
and
lea
cmp
mov
and
cld
fcomps
mov
sub
cltd
out
xor
popf
cmp
sti
imul
add
insb
mov
mov
sarl
fbstp
cwtl
fsubrs
dec
add
push
insl
test
dec
mov
jg
les
cmp
pop
xor
lret
stos
repnz
or
dec
inc
dec
subl
gs
dec
outsb
test
sbb
orb
jp
mov
mov
loop
xchg
insl
and
cld
out
jns
enter
or
xlat
hlt
lock
ss
mov
iret
mov
lock
xchg
test
std
aad
adc
pop
jmp
push
fcoms
lods
popf
jnp
push
inc
out
addr16
pusha
xchg
jno
dec
movsl
mov
lods
push
or
xchg
xchg
pop
lea
dec
sub
push
aaa
push
sbbb
jecxz
cwtl
aas
lret
push
pusha
inc
clc
repz
mov
add
fildl
push
mov
es
and
sub
fwait
dec
cmpl
jp
mov
lods
mov
roll
hlt
shl
divl
icebp
sub
sbb
mov
push
arpl
out
cmp
jbe
movsb
test
lahf
nop
lahf
loope
shlb
adc
dec
push
std
pop
mov
mov
ja
or
mov
and
jle
subl
push
inc
sbb
ficompl
cltd
dec
addr16
repz
lret
jge
cmp
push
sarb
aas
fnstsw
sti
jae
repz
mov
jnp
lods
insb
mov
dec
mov
into
jbe
and
shl
repnz
and
mov
dec
sub
or
push
mov
int3
mov
inc
pop
adc
into
icebp
and
dec
sbb
xor
xor
adc
xchg
int
loopne
js
lods
leave
jg,pn
test
sub
sub
mov
hlt
rcl
out
mov
out
dec
xchg
mov
clc
push
shl
xchg
into
imul
clc
cwtl
dec
test
stos
shrb
lret
xchg
call
pusha
xchg
cmpsb
repnz
imul
push
mov
mov
cld
lds
inc
repz
out
das
int3
mov
sbb
push
je
jl
mov
inc
push
xor
enter
mov
xchg
ret
sub
cmp
dec
movsb
cli
mov
mov
xchg
add
stc
jg
add
insl
out
js
out
cmp
push
int3
dec
loopne
and
push
adc
add
jns
jg
pop
mov
loope
mov
inc
cmp
adc
int
mov
outsl
popf
mov
pop
xchg
add
daa
xchg
xorb
xchg
fldcw
xchg
aas
dec
jb
inc
imul
dec
cwtl
push
jl
loop
mov
out
loopne
push
es
cli
mov
jno
jns
mov
pop
sahf
popf
movsb
shlb
cmp
sbb
je
loop
pop
int
js
jae
movsl
stc
rolb
out
add
cli
int3
fwait
jae
shrl
shll
ds
jns
dec
jle
jecxz
mov
inc
jge
pop
jbe
outsl
lods
mov
lret
test
mov
in
std
bnd
insl
fstpl
push
push
lock
fisubrl
test
fidivrl
test
cmpsl
pop
inc
mov
sub
push
sti
mov
dec
push
dec
jg
jns
xor
cmp
scas
jmp
fstp
inc
pop
and
and
mov
dec
pop
add
ljmp
mov
sub
and
xlat
aaa
xor
push
stos
rol
jo
js
xchg
mov
int
loop
pop
jge
scas
or
shlb
or
inc
sahf
lret
cmp
dec
lods
sub
movsl
sub
sarl
or
aas
push
sub
pop
jns
je
or
fcmovnb
bswap
stc
ret
push
sbb
in
je
or
leave
lock
jmp
xchg
stos
loopne
fsubrl
xor
mov
test
or
adc
pop
push
dec
inc
mov
mov
inc
fwait
rclb
stos
inc
push
push
push
push
fisubs
pop
jb
pop
xor
je
sub
adc
stos
cmp
mov
lods
pop
pop
sbb
loop
dec
test
pop
and
pop
mov
loopne
shr
and
in
inc
imull
rol
push
add
pop
pop
or
dec
stos
jmp
cmpb
stos
push
push
lea
popf
fcomip
nop
test
push
mov
jl
mov
xchg
das
loop
jae
jne
test
cwtl
mov
clc
sbb
dec
adc
and
add
push
mov
pushf
das
sbb
je
and
stos
out
xor
mov
sbbb
jle
dec
lret
loop
xor
xchg
add
fs
mov
lock
add
lahf
pop
push
icebp
sbb
mov
pop
idiv
shrl
aad
cmp
xor
pop
jbe
add
push
into
xchg
pop
insl
cli
and
add
inc
outsl
cmp
cmp
xchg
or
push
fdivl
lods
cmpsb
pop
shll
call
lahf
mov
fldenv
ja
ficomps
inc
inc
or
xor
loope
fwait
inc
xor
dec
lock
in
popf
push
and
cwtl
dec
or
or
mov
outsl
ret
xchg
jb
pop
repnz
sbb
movsl
mov
lods
pop
push
ja
fs
pop
in
mov
std
push
gs
or
insb
insl
cmpsb
mov
inc
lods
icebp
xor
sarb
xor
mov
arpl
in
jnp
es
rcr
nop
aaa
cmp
jle
dec
lds
and
sbbb
xchg
roll
jmp
out
inc
xor
idiv
and
jmp
repnz
ror
mov
not
or
int
mov
push
and
mov
lret
into
push
mov
mov
jecxz
xor
dec
inc
xchg
mov
xchg
jmp
pop
icebp
cmp
inc
mov
mov
inc
and
loopne
into
test
iret
push
lret
xchg
das
or
and
cwtl
or
test
sbb
stos
xchg
lods
or
and
jl
add
stos
out
xchg
in
out
repz
push
call
ja
fwait
push
dec
push
pop
popf
ss
mov
ror
xchg
lods
push
lahf
stc
pusha
dec
jl
cwtl
or
dec
andb
dec
inc
enter
in
movsb
movsl
data16
dec
movntps
movsb
jle
fdivs
pop
pop
sbb
xchg
mov
xchg
inc
add
mov
jle
push
add
inc
push
pop
jnp
push
sbb
subl
gs
push
shl
sbb
test
in
in
ror
inc
fcmovb
aad
push
mov
xchg
fsub
pop
pop
pop
scas
popf
push
mov
iret
arpl
call
mov
xchg
lods
push
jle
int
in
cmp
movsb
sub
inc
cmp
sbb
pop
sub
repnz
popf
cwtl
add
ljmp
stos
cs
sbb
xor
leave
jno
insb
adc
les
inc
mov
sbbl
add
pop
or
je
xor
and
sub
add
push
in
popf
pop
fwait
iret
test
lret
xor
inc
pandn
sets
push
std
hlt
ret
cmp
lret
lcall
pop
aam
fisubs
fcomps
scas
mov
addr16
inc
xlat
dec
hlt
add
cmp
inc
sarl
cmp
test
jp
jmp
bound
fs
loop
shll
lds
stc
mov
cmpsl
mov
loope
popa
pop
popf
or
xlat
mov
ja
sti
xchg
cmp
add
out
pop
mov
pop
xor
std
sti
mov
push
cmp
cmp
idivl
sub
xlat
cmp
add
mov
cmp
sarl
inc
or
push
xor
roll
test
sub
das
in
fs
mov
call
mov
arpl
out
loopne
xor
into
or
cld
fwait
imul
lret
test
cmp
dec
lock
push
pop
das
and
jl
cmp
das
mov
xchg
pop
insl
inc
sub
inc
jo
inc
sub
xchg
adc
lahf
lret
jno
dec
jp
fs
es
test
pop
lret
push
ss
leave
cmp
ret
rorb
jns
adc
add
sbb
push
test
xchg
push
adc
jmp
xchg
testb
jno
out
fs
inc
sahf
sti
and
mov
lret
mov
iret
movsl
gs
push
mov
loop
es
arpl
jb
sbb
rcl
lds
mov
push
call
inc
out
cmp
iret
dec
ret
mov
test
add
mul
xchg
and
inc
dec
movsl
gs
mov
out
push
aaa
sbb
cltd
sahf
lods
pop
xor
and
stc
push
or
xchg
gs
fldt
mov
iret
sbb
jg
aam
adc
fdivl
xchg
add
jmp
daa
sbb
jmp
jmp
xor
push
aaa
xor
push
mov
push
mov
pop
imul
lret
bound
lds
les
mov
data16
push
cmp
cmp
xchg
cli
push
xchg
movsb
aaa
lock
jl
das
fwait
and
mov
enter
scas
cmp
xchg
aad
cmp
test
and
mov
sub
shrb
sub
into
shlb
jle
test
add
les
mov
pusha
pop
and
cmp
lods
addr16
lods
cmp
add
or
pop
cmp
int3
inc
add
mov
dec
scas
jne
cmpsl
int
jbe
out
test
jmp
jo
repz
loop
lcall
lds
xchg
or
leave
sbb
jbe
pusha
mov
jae
xlat
cmp
fadd
test
jmp
js
jmp
addr16
xor
negb
mov
inc
imul
popf
jbe
sub
xchg
mov
mov
cmp
stc
mov
je
xor
aas
lods
test
jecxz
pusha
int
cld
push
pusha
pop
lret
mov
out
push
sub
movsl
mov
leave
or
inc
sbb
imul
cmp
push
call
adc
pop
stos
add
in
add
pop
lahf
push
push
cld
and
outsb
push
fsubrs
fsts
call
push
std
popl
or
test
jge
xor
jo
sub
cld
stos
sub
in
dec
dec
mov
shl
insl
sub
sarb
and
mov
add
fcoms
or
test
sbb
jle
add
cltd
std
or
and
jp
mov
sbb
adc
push
mov
aaa
add
push
xchg
fistps
dec
add
xchg
in
mov
ret
or
xchg
stc
repz
stos
sub
lods
jnp
aad
iret
out
sub
pushf
mov
mov
push
xchg
iret
daa
ret
push
repz
cmp
test
push
xchg
stos
out
xchg
pushf
ret
mov
jle
enter
movsl
cmp
stos
jo
mov
out
sub
jmp
ja
rclb
outsl
mov
hlt
insb
jb
dec
and
inc
pop
add
leave
es
cli
insl
dec
push
iret
bound
ljmp
mov
mov
add
mov
lods
rorb
enter
push
pop
sub
ret
jge
push
insl
or
adcb
sub
add
incl
pop
sbbl
movq
stos
inc
stos
add
xchg
js
stos
cmp
lcall
mov
add
and
sbb
pop
jnp
jno
mov
ret
pop
mov
xor
mov
dec
int3
jnp
jo
mov
das
js
add
vpsrlw
mov
popf
inc
rorl
add
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
sub
pop
dec
add
add
add
add
cmp
popl
add
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
clc
mov
add
mov
add
popl
add
sub
add
popl
add
add
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
testl
dec
test
adc
enter
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
mov
sub
add
dec
nop
mov
filds
sbb
xor
lret
int
test
dec
jl
leave
inc
cmp
push
cmpl
cli
cmp
dec
cltd
mov
inc
imul
lods
dec
jne
jle
sar
sub
fstpl
and
lock
loopne
mov
push
mov
add
sbb
mov
int
xchg
clc
enter
dec
mov
xchg
test
push
jnp
xchg
pop
push
cmp
jne
loope
jp
jno
add
mov
scas
in
enter
push
push
inc
xchg
test
jle
scas
fsubrl
insl
movsb
mov
stc
xchg
movsl
flds
dec
lock
push
fwait
jl
rolb
lahf
mov
mov
gs
repnz
call
jmp
andl
mov
les
mulb
insl
das
cmc
das
in
arpl
ficoms
lods
das
mov
mov
imul
lahf
sbb
jno
lcall
fsubrp
shlb
sbb
fisubs
mov
or
cltd
test
fwait
call
pop
xor
and
mov
add
enter
xor
mov
dec
jnp
sbb
adc
movsl
sbb
jge
stos
out
fwait
pop
cld
scas
scas
cmpsb
call
fxch
aaa
lret
xchg
and
in
lret
clc
icebp
loop
aas
adc
cs
mov
shll
inc
jp
xor
push
mov
mov
inc
je
mov
fs
testb
clc
test
sub
test
push
lcall
pop
or
cmp
inc
add
daa
outsl
cmp
push
inc
pop
pop
adc
jge
sbb
cmp
push
xor
xchg
sarb
and
push
fistl
pushf
loop
nop
xchg
xchg
lahf
aaa
mov
pop
mov
pop
into
cli
test
or
enter
shlb
mov
ret
repz
lahf
inc
inc
ljmp
sbb
bound
cld
push
adc
cs
pushf
inc
pop
rcl
push
lret
shll
adc
cltd
pop
fwait
sbb
pusha
sar
int3
mov
mov
mov
aam
adc
inc
pop
mov
fs
jne
mov
pushl
push
cmp
push
lock
sub
nop
xchg
ljmp
mov
out
fnstsw
loope
orl
sbb
iret
inc
add
push
loopne
ja
aas
push
addb
pop
cwtl
repz
into
sub
shl
mov
ss
mov
adc
lcall
test
std
mov
or
jbe
dec
push
lods
xchg
test
test
shll
add
mov
inc
sarb
mov
insb
pop
jns
cmpsl
fadds
lret
cs
dec
cmp
scas
ds
fnstsw
scas
fbld
ret
ja
idiv
jg
mov
mov
xor
inc
add
sub
add
add
xchg
addb
cwtl
push
icebp
add
adc
jmp
xchg
mov
pop
and
xorb
jmp
push
lods
lods
iret
cmp
adc
aas
mov
xchg
fs
mov
push
mov
sub
sub
rcrb
stos
nop
inc
out
scas
or
lahf
iret
push
inc
mov
in
add
stc
mov
mov
clc
andl
push
push
xchg
iret
imul
sub
pusha
xor
sbb
js
or
jmp
push
pop
lahf
or
out
bound
stos
xor
or
inc
test
repz
add
pop
sbb
shlb
cmp
aas
movsl
pop
and
inc
inc
adc
mov
push
movsb
jp
adc
inc
out
push
lret
jge
ror
sub
add
adc
std
shll
in
lods
and
scas
cmp
fs
pop
pop
pop
popf
and
daa
leave
xor
sub
mov
sub
jecxz
inc
pop
in
xchg
mov
stos
xchg
aas
pusha
push
add
jbe
mov
shlb
and
mov
rcrl
xor
add
repz
or
cwtl
ja
push
pop
mov
cld
jns
cld
loope
jg
fisubrl
mov
adc
jbe
add
mov
push
scas
xchg
mov
mov
movsl
psubq
mov
or
clc
es
push
adc
stos
push
inc
xchg
pop
push
sbb
mov
bound
fiadds
sub
mov
lods
adc
in
pop
xchg
in
mov
pop
aas
pop
mov
jge
or
lahf
flds
pop
mov
mov
xchg
inc
xor
xor
gs
int3
xchg
mov
push
add
adc
pushl
repz
movaps
and
lcall
mov
mov
xor
out
xor
fnstsw
arpl
lahf
xor
pushf
inc
clc
jmp
pop
or
mov
mov
xor
cli
xchg
sub
in
cmc
test
in
cld
inc
ds
sbb
sbb
xchg
add
lock
cmc
ja
scas
mov
mov
sti
xchg
mov
xchg
add
mov
sarb
mov
push
loope
sub
cmp
adc
jbe
add
sbb
pop
out
cmp
enter
add
pop
mov
mov
xchg
aaa
and
loopne
cmp
cs
fmuls
loope
mov
adc
mov
lds
sub
inc
inc
pusha
setb
mulps
sarb
adc
fsubl
add
not
pusha
or
into
sbbb
scas
push
mov
enter
jmp
dec
push
cmpsl
inc
mov
fs
aam
in
jg
add
add
sbb
pop
xchg
mov
cmp
add
add
mov
xchg
cwtl
mov
or
shrl
fmuls
inc
mov
bound
jg
mov
mov
popa
jmp
out
mov
and
xor
or
js
cmp
popa
jnp
ss
lret
inc
jae
xor
movsl
in
mov
pop
scas
add
add
xchg
jnp
fildl
fdivrl
dec
add
sbb
jp
dec
mov
xor
pop
outsb
in
in
pop
jp
mov
jno
das
push
jmp
sbb
mov
xchg
jmp
pop
mov
and
xchg
xor
mov
test
cli
shrb
imul
inc
popa
mulb
sub
rcrb
loop
inc
jnp
stos
or
in
sub
jnp
out
test
das
jmp
push
mov
out
fsts
xchg
adc
add
pushf
clc
std
sbb
or
clc
rcl
lds
or
cli
in
aas
push
and
ret
int
je
push
push
cmp
pop
jo
adc
sbb
roll
leave
ret
mov
dec
cmpsb
dec
lock
rolb
icebp
out
lea
inc
mov
cmp
cmpsb
out
ds
push
jge
push
adc
dec
out
ja
imulb
movsl
in
je
mov
jbe
jo
je,pn
cmpb
mov
cmp
or
fsts
xorb
movsb
jnp
add
pusha
or
lcall
dec
test
cmp
sahf
iret
sbb
pop
call
jg
or
insb
push
int
addr16
mov
xchg
loop
aam
movsl
mov
push
push
mov
push
fdivr
mov
jno
sti
jge
lret
push
imul
xor
and
aam
sbb
clc
jae
mul
fs
icebp
outsl
iret
jecxz
in
inc
push
sahf
out
mov
fsts
dec
shrb
movsl
stc
outsb
mov
pop
fs
adc
dec
push
xor
dec
jo
in
xchg
sub
cli
inc
cmp
sub
mov
in
lea
pop
cltd
xchg
cld
ret
notl
push
iret
sbb
nop
and
arpl
or
xchg
scas
mov
dec
dec
inc
add
xor
cmpsb
lahf
pop
push
inc
sbb
jb
imul
add
mov
jg
fs
pop
cmp
dec
dec
inc
and
mov
vpcmpgtd
cmp
mov
and
repz
imul
mov
cmp
aad
xor
mov
adcb
cwtl
pop
outsb
sbb
js
xchg
mov
adc
in
lret
xor
scas
jmp
jmp
in
and
adc
or
fwait
or
adc
loope
ror
jmp
inc
rdmsr
in
mov
insb
cmp
push
add
mov
jp
push
sbb
add
sub
add
in
mov
or
pop
aam
out
cmp
sbb
inc
push
xor
mov
mov
incb
xor
dec
cmp
lret
sub
dec
sti
adc
rcll
xchg
inc
ret
jo
push
daa
das
and
jecxz
ret
jmp
jle
out
jno
stos
push
and
adc
sbb
cmp
fcomip
fistpll
jle
out
aas
cmp
int3
cs
int3
aas
mov
adcl
and
adc
jecxz
and
call
xor
bound
push
push
fmuls
nop
js
or
xchg
loop
jg
lods
clc
xchg
ret
lret
jb
mov
iret
dec
inc
add
xor
xchg
stos
cs
jle
repnz
test
and
push
mov
add
cmpsl
imul
adc
and
mov
cmp
sbb
pop
mov
sub
js
out
add
hlt
mov
insl
arpl
nop
fs
rcr
xor
outsl
push
fwait
dec
mov
shlb
and
andb
mov
or
jg
les
mov
jp
mov
sbb
jecxz
and
mov
jne
mov
packuswb
or
push
sarl
or
and
jecxz
lock
add
int
hlt
or
je
mov
ss
out
mov
daa
jmp
adc
inc
push
jo
lret
mov
xor
xchg
pop
sbb
push
rep
imul
xor
rol
out
push
out
or
pop
mov
rol
outsb
aad
or
mov
shll
sbb
repnz
fsubrl
push
push
sbbl
push
test
femms
xchg
xor
fs
inc
add
adc
inc
jo
jno
imulb
fcmovbe
mov
icebp
ja
push
daa
gs
jae
pop
ret
mov
or
push
xchg
scas
add
shl
pusha
scas
fildll
xlat
lcall
dec
aas
push
fldenv
jg
jge
push
aad
mov
stc
int
xchg
fdiv
jmp
imul
cmp
xchg
sub
jge
mov
pop
xor
addb
add
fildll
adc
adc
fists
lcall
cmp
mov
inc
pushf
test
jge
add
sbb
and
xchg
std
mov
les
cmp
iret
add
cmp
push
icebp
ds
jne
cmc
mov
jmp
pop
popa
pop
test
into
push
jne
call
repnz
shll
adc
out
icebp
pusha
sub
insb
ljmp
xchg
jp
add
adc
lock
cmpsb
inc
xchg
shrl
dec
pop
push
or
mov
cmp
addr16
mov
test
dec
addr16
movsb
sahf
pop
add
js
hlt
mov
std
jl
dec
pop
cmp
mov
sbb
sub
add
push
pop
jecxz
mov
push
ljmp
mov
ret
cld
xorb
bound
test
jge
cli
pop
push
mov
sbb
dec
pop
popf
rcl
sub
repnz
ret
adc
popf
dec
push
jns
ss
out
jge
adc
mov
aam
insb
cld
insl
nop
stos
and
dec
js
cmp
negl
loope
cmc
addr16
push
push
push
mov
xor
ret
cmp
push
xchg
int3
aad
push
inc
push
and
and
mov
mov
fcom
jns
or
xchg
jle
cwtl
daa
insb
subb
sbb
jo
rorb
sub
aaa
nop
pop
in
push
inc
cmp
pop
mov
cmp
cmc
pop
adc
out
mov
cltd
shrl
mov
das
das
xor
insl
out
dec
and
shrl
loopne
jge
movsl
sbb
outsb
push
fiadds
sbb
ss
les
jnp
clc
xor
mov
outsl
mov
xchg
repz
cmpsb
push
cmc
test
fisttpll
addr16
pushf
sar
xor
das
jecxz
xchg
cmc
stos
testb
out
pushf
cmpsb
and
inc
in
loop
pop
jge
andl
sti
ret
add
les
and
in
notl
push
popf
ret
mov
stos
rolb
movsl
rorl
stos
jge
lock
insl
les
popf
pop
xchg
js
pop
mov
cwtl
sub
adc
stos
ret
push
iret
inc
icebp
lret
cmc
push
fadd
shl
inc
jne
roll
mov
and
sbb
mov
push
sbb
aam
test
push
xchg
leave
xor
sahf
cwtl
lea
mov
lret
push
ret
or
in
xchg
stc
xor
pop
push
jb
jl
jb
mov
icebp
adc
sub
push
cld
adc
lock
or
inc
push
orb
out
mov
pop
cmp
lds
inc
call
pop
ret
mov
fdiv
ja
pop
pop
xor
aam
not
push
rorb
and
repz
cmpsb
jge
push
adc
imul
sbb
jbe
add
mov
movsb
sbb
cld
xlat
fistps
rorb
enter
int
in
ds
insl
sbb
lea
mov
and
roll
enter
pop
pop
aad
fists
aas
sbb
addr16
mov
cltd
subb
or
push
aas
mov
shrb
pushf
sbb
pusha
xlat
imul
aas
movsl
sti
ret
sbb
adc
and
and
popa
pop
jno
lret
ja
mov
stos
inc
xchg
xchg
pop
rcll
inc
fcomip
ss
pop
jecxz
add
jb
das
cmp
adc
popf
or
out
mov
sahf
sarl
xchg
clc
push
pop
add
jmp
add
xchg
ret
aas
leave
mov
inc
adc
aas
adc
mov
dec
pusha
xchg
inc
sub
xchg
mov
add
addb
inc
adc
cmpsl
sbb
push
inc
mov
add
pop
mov
mov
and
add
sub
add
or
insb
movsl
inc
sahf
les
icebp
test
dec
mov
es
jbe
dec
inc
sub
jecxz
add
mov
add
mov
movsb
in
pop
jnp
jmp
fldt
add
test
pop
push
push
ret
adc
mov
loopne
xor
sbb
outsb
xor
mov
xorb
mov
mov
or
test
pop
dec
mov
inc
popf
hlt
inc
dec
mov
and
sarl
push
stos
xchg
aaa
stos
adc
inc
sub
fwait
mov
sbb
mov
jle
hlt
add
lods
repz
xor
outsb
jno
dec
inc
and
pop
bound
outsl
jo
jg
jle
add
loope
rcrl
mov
loopne
cmp
jmp
mov
sbb
sub
inc
ds
nop
adc
inc
push
sub
mov
jbe
and
push
inc
stos
mov
mov
in
cmovo
int
mov
mov
stos
sahf
lret
outsl
adc
gs
lea
mov
dec
mov
out
ds
loop
add
sub
enter
bound
mov
xchg
mov
xchg
dec
out
add
lods
push
cmpsb
vpunpckldq
aas
movsl
push
call
pop
dec
jge
loop
lret
pusha
and
jecxz
or
jno
nop
cmp
lcall
mov
jg
int
stc
lahf
fidivrs
push
je
popf
sti
mov
push
fistpl
jecxz
sti
int
add
rcr
push
push
add
imul
xor
jb
mov
push
decl
pop
xor
push
movsb
push
add
jbe
leave
shlb
mov
movsb
adc
faddp
inc
addl
jns
pop
call
mov
popa
inc
and
dec
icebp
jge
aas
cmp
inc
inc
ss
ret
mov
rol
lock
pop
lahf
mov
in
mov
mov
mov
push
lods
repz
mov
xlat
out
lea
movsl
sub
dec
arpl
fadds
or
lea
push
mov
mov
inc
mov
divl
sbb
adcb
dec
add
mov
or
mov
xor
jns
int3
inc
fnsave
aas
arpl
xlat
cli
add
pop
fistpl
repz
imul
bound
iret
xorb
xchg
mov
sub
movsl
pop
lods
mov
adc
movsl
jl
fsubl
call
in
sub
ret
out
cld
xor
negb
mov
push
aad
outsb
cltd
ret
mov
loopne
imul
ljmp
mov
popf
jp
movsl
adc
cli
mov
jl
jp
and
cmc
xchg
dec
cld
xchg
xor
leave
js
cmpsl
fwait
test
movhps
insb
ja
out
sub
cmpsb
lods
xchg
mov
mov
push
push
stc
ljmp
dec
xor
pop
cmpsl
sbb
jg
pop
aad
pop
mov
mov
sub
add
mov
cmpsl
inc
dec
jae
clc
jno
mov
in
iret
fsubrp
aam
test
jecxz
and
aad
imul
ljmp
mov
test
in
ret
popf
popa
loop
idiv
cmp
jmp
xor
push
test
xchg
mov
sbb
jno
stos
mov
aas
cmpsb
mov
mov
xor
lcall
pop
ret
test
popa
push
inc
mov
orb
cmp
sub
mov
imul
hlt
cmp
adc
frstor
icebp
mov
inc
xlat
xchg
jg
rolb
decl
xchg
and
aad
pusha
jae
and
sbbl
mov
fsubs
stos
mov
inc
dec
inc
lds
jbe
dec
jecxz
add
popf
mov
xlat
test
loope
inc
push
push
gs
adc
jecxz
mov
mov
pop
pop
scas
jmp
sbb
push
scas
xor
mov
in
lock
enter
pop
pop
and
add
imul
outsb
test
mov
push
pop
sbb
adc
add
mov
mov
shll
clc
push
mov
pop
scas
rcll
mov
sar
fisttps
push
push
gs
std
je
int
lcall
in
les
pop
mov
add
mov
inc
je
jae
andb
in
popa
aad
jge
sub
xchg
mov
iret
mov
cmp
cmp
sub
je
sarb
dec
pushf
push
rol
fsubrl
xchg
cmpsl
cmp
dec
jbe
pop
cmc
pop
push
sub
cltd
cwtl
aaa
fmul
mov
jne
pop
or
ds
stc
mov
xchg
jecxz
shrl
mov
jno
push
test
jmp
fisttpl
subb
inc
mov
mov
sbb
jecxz
inc
add
cmovae
stc
in
pop
dec
pusha
loopne
push
push
es
int3
leave
test
rcrb
fcoml
loope
xchg
mov
out
xchg
gs
stos
or
xor
jno
pop
loope
sbb
enter
add
ret
das
mov
jb
es
jge
xchg
and
sub
jle
push
das
xchg
das
mov
iret
mov
inc
and
arpl
dec
mov
in
mov
pop
iret
mov
das
push
xchg
jbe
add
insb
mov
aaa
xor
int
jmp
negl
xchg
sub
fidivrs
jp
int
jle
jnp
cld
lds
push
add
or
js
inc
cmp
push
xor
mov
lcall
and
loope
adc
cmpl
inc
nop
cmp
cmp
jo
add
add
cmc
fistpll
stc
cmpsl
mov
into
and
add
add
into
test
mov
pop
mov
inc
aaa
mov
pushf
mov
lods
xor
jmp
mov
push
pop
mov
subb
and
js
mov
inc
or
xchg
pop
cmp
sbb
aam
jne
add
jg
in
cmpb
cmp
fnstcw
add
js
stos
cld
inc
adc
fadd
mov
ss
push
inc
shrb
addr16
scas
mov
dec
cmpsl
jb
adc
sbb
dec
sbb
cwtl
xlat
mov
je
lods
pop
and
xor
imul
xor
add
scas
push
cmpl
inc
fs
cwtl
cmp
sub
xor
into
xor
idivb
repnz
pop
xchg
adc
decl
repz
inc
add
lods
out
xchg
lea
cmp
fwait
sub
shrb
inc
outsb
pop
cmpsl
mov
into
out
ds
push
aaa
mov
daa
pop
mov
push
sti
loop
dec
les
pop
and
sbb
jecxz
xor
fstpl
xchg
jg
xchg
or
dec
outsl
mov
adc
push
mov
mov
enter
pop
pop
sub
pop
mov
sbb
loop
test
icebp
inc
bound
pop
sar
add
int
gs
scas
mov
pop
fildl
push
xchg
push
xchg
mov
sub
dec
std
cmpsl
das
and
je
icebp
pop
imul
cmpsl
and
lods
pop
aaa
das
adc
sahf
xor
lcall
stos
cmpsl
pop
pop
inc
cli
sbb
jmp
ss
outsb
scas
jecxz
nop
cmp
or
pop
popf
add
xor
inc
roll
loope
push
pop
js,pn
shrl
dec
loop
ds
push
popa
and
push
subb
ja
xchg
jecxz
sbb
cmp
mov
in
orb
mov
sar
fcmovnu
stc
popf
inc
mov
fs
mov
cmp
pop
and
fmull
mov
jne
enter
xor
mov
lret
xor
jo
test
pop
jnp
or
jge
out
andb
adc
fimull
inc
cmp
fcom
mov
add
rorb
xchg
inc
into
pop
lds
mov
dec
sbb
jmp
jo
mov
adc
mov
daa
dec
xchg
mov
std
imul
xchg
and
jmp
mov
sub
adc
pusha
xchg
push
cltd
sub
dec
stc
mov
xor
jl
jno
push
loop
push
repz
cmp
dec
push
lret
add
cmp
fs
jmp
inc
insb
les
ljmp
repz
jb
xchg
or
mov
prefetchnta
add
pop
inc
dec
int
aaa
repnz
xchg
test
mov
mov
xorl
xchg
in
ret
movsb
jnp
add
add
push
movsb
lea
lods
and
adc
and
pop
add
sub
add
clc
mov
xchg
lds
clc
ss
dec
jmp
inc
in
mov
xlat
sti
lds
lahf
xor
push
xor
data16
test
or
inc
mov
cli
jnp
repz
cmpsl
sti
lods
jecxz
in
cmpsl
gs
push
into
clc
enter
inc
shll
push
or
sbb
jmp
or
and
xor
out
push
ja
and
mov
cwtl
sub
push
sub
mov
loope
je
daa
rcrl
divl
mov
pop
test
pop
lahf
popf
fcompl
inc
into
daa
loope
andb
xchg
dec
popf
pop
jne
addr16
fwait
sti
push
fistl
push
aas
stos
push
jge
sbb
ret
pop
setne
cmp
aad
and
sarl
sahf
inc
gs
cmp
cmp
push
shrl
xor
push
es
sbb
lcall
je
sub
mov
mov
lcall
mov
daa
test
xor
xchg
lea
ss
shrl
ret
fnstsw
mov
mov
xchg
ja
jg
pop
and
adc
or
xchg
inc
adc
rcl
pop
sbb
jae
mov
push
in
int
ret
out
fs
fists
data16
sub
jbe
mov
stos
out
dec
lahf
fcmovb
sub
setb
mov
inc
push
inc
or
jb
or
in
je
xlat
pop
jle
push
in
ret
sti
inc
inc
shll
addr16
xor
dec
ficomps
in
iret
and
push
jne
gs
push
inc
mov
ss
add
sbb
inc
or
shrb
test
xor
movsb
and
cltd
test
repz
mov
and
inc
jno
jnp
push
das
fsubrs
movsl
mov
push
pop
jmp
das
in
insl
ret
popw
cmpsl
aam
ss
pop
xchg
fistps
add
mov
add
pause
inc
sub
xor
fwait
lret
mov
cmpsl
mov
mov
rol
mov
in
hlt
mov
loop
sti
push
subb
mov
call
sbb
pop
xor
push
jns
pusha
into
mov
sahf
adc
dec
push
inc
test
int3
out
pusha
cmpsb
lahf
sbbb
sbb
xchg
add
jmp
inc
scas
jecxz
cli
inc
cmp
inc
lods
adc
jle
ret
ljmp
rorl
adc
pop
dec
jecxz
test
cwtl
push
outsb
out
mov
mov
mov
es
fimuls
adc
add
lcall
ficoml
ret
nop
pop
cmc
sbb
mov
mov
int
lock
push
jp
jns
jae
and
call
int
fistl
ds
sub
push
lods
dec
sub
add
add
test
mov
ret
add
sub
add
imul
jg
repnz
xlat
addr16
xchg
fcoms
mov
loope
jns
sub
and
sub
mov
cmp
dec
pop
mov
fisttps
lds
cmpsb
cmp
dec
pop
and
fimull
jp
sti
cmp
or
adc
inc
inc
inc
ljmp
outsl
rcrl
into
inc
lahf
xchg
ja
pop
lods
xchg
mov
pushf
inc
dec
push
inc
testl
bound
mov
jl
sbb
rol
bound
in
inc
scas
sbb
popfw
adc
aaa
pop
stc
dec
insb
inc
push
dec
push
cs
push
push
mov
jnp
and
inc
sub
push
push
jmp
mov
repnz
inc
push
mov
or
xchg
repz
mov
hlt
insb
cld
sbb
ss
fcomip
pusha
leave
mov
mov
aas
xlat
mov
test
xchg
xor
mov
dec
lods
push
faddp
sbb
repnz
cmp
pop
incb
cmp
mov
mov
out
das
lahf
mov
mov
gs
xlat
dec
mov
xchg
enter
push
dec
push
xchg
cmpsb
mov
jmp
fsts
sub
ret
push
adc
in
push
push
or
out
xor
fstpl
popa
xor
or
sub
data16
out
lods
mov
jmp
stos
test
pop
addr16
fs
xor
push
inc
xor
sub
or
push
inc
push
or
pop
pop
daa
stc
fs
cmp
pop
push
mov
unpckhps
hlt
cmc
leave
hlt
xlat
or
fidivs
push
xchg
mov
jmp
mov
sub
int3
fildll
in
cwtl
adc
push
lea
xlat
dec
loopne
scas
jo
pop
lret
mov
arpl
sbb
or
sbb
dec
xor
mov
loopne
pop
je
push
xchg
add
popf
jg
daa
cmpsb
xchg
ljmp
mov
xchg
mov
popa
clc
fdivrp
push
cwtl
sti
mov
loop
mov
sbb
mov
rclb
jge
pop
sbb
jbe
add
fucomp
sbb
fucomip
enter
cmp
les
ret
push
cmpsl
dec
and
divl
mov
mov
xlat
sarl
xchg
lock
lds
lret
loope
inc
ret
pop
mov
xchg
adc
inc
inc
stos
mov
ja
cmp
shlb
xchg
pop
sub
mov
add
aaa
in
addb
or
nop
outsb
insb
insb
daa
adc
cltd
nop
int3
push
inc
fmul
and
mov
xchg
sahf
mov
mov
xchg
jecxz
adc
cmp
jmp
add
test
xchg
std
jg
in
pop
js
xor
negb
add
add
cmp
inc
in
popa
data16
mov
cmpsl
shlb
xor
mov
sbb
ds
pusha
jecxz
pop
add
pop
adc
mov
mov
fiaddl
pusha
int3
dec
clc
icebp
or
or
and
pop
push
scas
aas
sub
fwait
das
push
pop
fists
cwtl
ljmp
out
cmp
lods
cld
clc
pop
mov
push
insb
ficomps
jmp
push
adc
inc
pushf
jbe
mov
xchg
mov
xor
mov
fstps
xor
sbb
xchg
out
sbb
cwtl
movsl
pop
stc
and
push
mov
test
jmp
imul
bound
in
push
ljmp
out
insl
cmp
mov
sub
fwait
insb
test
inc
or
push
out
push
sub
mov
aam
jmp
adc
inc
and
jp
pop
sub
out
mov
imul
or
lret
jp
sbb
icebp
dec
rclb
mov
movsb
mov
bound
xchg
jno
and
insb
xchg
add
movsl
add
imul
xchg
mov
or
call
loope
cmp
jmp
out
push
aad
mov
inc
fisttpll
mov
in
addr16
pop
out
sub
dec
mov
or
scas
into
mov
divl
xor
pop
pop
xchg
data16
jo
xchg
clc
cmpsl
dec
xor
xchg
lods
mov
adc
jbe
lds
repz
inc
lahf
fsubrs
push
push
orb
addr16
add
xchg
pop
sbb
xor
out
idivl
movsl
sbb
stc
or
or
imul
inc
imul
aaa
mov
cmpsl
jns
ja
push
fcompl
repnz
out
adc
dec
gs
adc
mov
hlt
testb
ret
sub
in
aaa
shrl
pushf
ret
into
jle
add
daa
push
lods
add
out
stc
and
lods
cmp
mov
push
mov
xchg
lret
mov
adcb
pop
lahf
xlat
sti
cmp
aad
dec
mov
or
in
push
cli
test
dec
push
mov
int
and
pop
pop
pop
rcrl
shrb
mov
inc
je
movsl
dec
sub
inc
int3
imul
push
sbb
adc
lahf
ljmp
cmp
mov
adc
leave
adcl
xor
jg
lock
cmc
xchg
shl
out
btr
and
jl
dec
dec
mov
and
sahf
sub
inc
jo
rcll
movsb
or
ja
xor
outsl
mov
stos
cmpsb
cwtl
jae
sub
add
movsb
pop
dec
into
jecxz
enter
imul
mov
mov
idiv
iret
std
mov
lock
add
add
xor
call
int
mov
cmpsb
adc
ss
je
lds
jmp
lods
leave
mov
scas
jecxz
fcoms
test
jno
pop
test
dec
ss
pop
pop
fisttps
ficoml
mov
jecxz
in
cmovs
je
or
sub
pop
imul
push
inc
outsl
adc
mov
ficoml
mov
push
xchg
fisttps
or
out
pusha
cmp
push
pop
dec
movl
pop
sub
adcl
mov
push
jo
jg
pushf
sbb
pop
xor
das
loope
push
insl
jnp
aas
jae
cld
cmpsl
int
inc
cmp
mov
jl
or
push
nop
push
clc
xchg
pop
push
fcomps
movl
adc
inc
mov
inc
fwait
xlat
shrb
mov
cmc
shl
mov
cltd
jne
mov
sub
imul
and
les
dec
in
outsb
jns
movsl
enter
jne
bound
cmpsb
in
mov
je
int
mov
jl
ret
add
out
pusha
loope
xchg
xor
loop
mov
pop
bts
inc
ds
shll
pop
sbbb
xchg
inc
jne
into
add
push
fistpll
xor
test
xorl
fldenv
xlat
pushf
mov
aaa
mov
dec
xor
insb
and
cmp
imul
pop
gs
jp
gs
stos
into
mov
ja
jbe
inc
push
pop
ret
pop
xor
and
add
cmp
outsb
mov
mov
mov
push
shrb
dec
lds
aas
cmp
mov
gs
jns
xor
in
push
fs
push
pop
mov
sbb
pop
jno
aas
scas
mov
test
aad
imul
cltd
out
out
sbb
in
inc
cmp
sti
xchg
or
lcall
int3
rcrb
mov
loope
pop
testb
int
adc
lds
out
sub
pop
adc
mov
call
xchg
xchg
outsb
push
adc
fs
mov
fisttps
fisubrl
mov
cmp
scas
cmp
cmp
push
or
call
loop
addl
roll
push
mov
shrb
cmp
outsb
rclb
leave
repnz
jns
xor
xor
lret
call
loope
ja
fstpt
sbb
sbb
mov
jge
xchg
inc
movsb
cmc
mov
movb
into
mov
ss
pop
loope
xchg
incb
cmp
xor
jmp
jecxz
inc
xchg
cmpsl
out
sbb
xor
cli
mov
xor
jp
mov
outsl
mov
lds
add
add
ret
mov
out
mov
xor
add
sub
add
out
xor
xor
inc
mov
adc
pop
add
cmp
sub
jl
jg
pop
pop
inc
or
and
sub
adcb
pop
jle
jecxz
add
dec
pusha
xchg
icebp
js
insl
stos
adcl
mov
scas
scas
dec
push
fcmovbe
push
xor
enter
ljmp
out
jns
pop
stc
iret
xor
xchg
or
mov
fisubrl
shlb
into
cmp
push
add
ljmp
xlat
mov
test
add
push
and
into
int
dec
mov
jge
dec
aaa
addr16
cmp
adc
dec
js
fs
shr
jl
out
sub
scas
push
lock
xor
xor
sub
jp
cvtps2pi
fstpl
and
xor
add
xor
arpl
dec
andnps
jb
jbe
cwtl
inc
xor
mov
pop
push
sbb
dec
xor
adc
sbb
lret
cltd
movsl
imul
mov
sbb
push
push
pusha
inc
out
or
add
aaa
xor
fistpll
sbb
push
mov
shrl
push
insb
mov
cli
cmp
jb
vmulpd
enter
or
jmp
hlt
sbb
cmpsl
jecxz
in
pop
fiaddl
mov
and
inc
or
mov
aad
lahf
pop
xchg
and
cld
mov
dec
icebp
dec
or
cmp
push
jge
mov
pop
iret
lret
sbb
out
mov
ja
push
xchg
movsb
ret
mov
xor
xchg
xor
jmp
arpl
sub
add
cwtl
in
inc
mov
ret
jmp
jno
mov
or
je
sub
repnz
mov
lret
js
cli
pusha
ss
mov
cmpsl
pop
push
repnz
sub
rorl
repnz
add
sub
dec
movsl
ja
jle
sbb
es
lods
sbb
add
sub
sbb
das
and
pop
gs
xchg
lods
shlb
dec
and
jle
pop
push
add
pop
sub
cmp
pushf
pusha
rol
int3
or
push
mov
dec
loop
xchg
xchg
hlt
aas
pop
ss
repnz
inc
loope
sbb
fimuls
imul
sahf
bound
sub
nop
xchg
clc
outsb
fs
bound
pushl
aad
inc
and
lods
xor
sbb
sbb
mov
int3
shrb
insl
imul
insb
addr16
adc
cmp
test
xchg
cmp
andb
out
mov
mov
or
xchg
shll
movsb
cmp
fnstcw
mov
fcoml
inc
jnp
xchg
add
dec
ja
sbb
adc
mov
sub
in
mov
and
inc
xchg
push
push
jle
xlat
outsl
mov
lcall
add
sub
add
inc
jp
ret
sub
xchg
aas
lea
lret
adcb
ret
xchg
push
and
ds
cmp
mov
arpl
inc
mov
inc
xchg
in
nop
sar
out
rclb
sub
popa
nop
xor
mov
fwait
inc
xor
mov
clc
inc
xor
fistpll
jo
fcoms
in
cmpsl
adc
pop
or
dec
repz
jmp
jbe
js
xchg
mov
pop
add
mov
xlat
daa
bound
es
fidivrl
adc
adc
lahf
icebp
inc
pop
xor
push
mov
xchg
jno
ss
lahf
or
and
mov
shlb
les
mov
xchg
inc
cmp
xor
xorl
fcmovb
std
in
mov
cmpsl
bound
cld
jl
dec
scas
mov
cmp
je
push
js
cmp
xor
mov
add
or
addr16
jle
fmuls
adc
pop
ret
xorb
sub
fs
cmp
cmp
mov
mov
cmpsl
ljmp
or
push
push
pop
outsb
popf
enter
xchg
inc
dec
push
movsb
jnp
sub
jns
rcrl
lret
jmp
jae
in
jge
push
out
rol
xchg
fnstsw
or
xor
fidivl
les
pop
or
sub
in
ret
push
cwtl
sub
push
nop
add
scas
lock
mov
push
iret
divb
je
popa
sbb
clc
movsl
push
sub
sub
mov
daa
lods
adcb
lods
pop
xchg
sub
and
dec
and
add
call
jle
scas
pop
pop
sete
push
lea
or
in
cmpsb
xchg
sub
loope
stos
lret
pusha
mov
mov
shrl
pop
jg
inc
sahf
adc
fildll
inc
fs
sbb
fistpll
add
orb
sahf
dec
jns
xor
sar
scas
xor
imul
xlat
inc
add
cmpsb
jg
mov
jge
sqrtps
in
mov
stos
mov
cmc
out
mov
xchg
ret
sti
sahf
cs
stos
les
test
enter
fnstenv
or
adc
sbb
fwait
test
xchg
mov
mov
bound
sub
nop
xor
dec
xchg
sbb
test
cmc
cmpsb
jecxz
mov
pop
jmp
and
shll
loope
ret
out
dec
in
popf
cmp
enter
outsb
mov
dec
imul
jnp
ror
adc
in
outsb
push
jmp
xchg
scas
xor
pop
lret
es
ds
add
int
fiaddl
add
add
push
or
pop
out
repz
arpl
imul
sub
add
mov
bound
out
je
pop
push
adc
mov
mov
mov
lcall
loope
sbb
lret
jg
addr16
adc
pusha
insb
fstpl
xchg
lods
inc
es
add
add
aas
xor
imul
and
xor
push
adc
shrb
mov
in
inc
lock
push
pop
xchg
sub
js
lret
scas
das
or
test
int3
ds
jbe
icebp
clc
sub
pop
pop
mov
mov
jecxz
dec
mov
addb
xchg
pop
xchg
mov
pop
add
out
push
enter
mov
cmp
popf
popf
adc
jl
mov
pop
cmp
cmp
ss
idivl
aad
pop
dec
jno
inc
jae
cmp
cmpl
sti
aam
adc
fisttpll
fildll
mov
mov
int
mov
in
xchg
pop
pushf
xlat
or
ss
pop
int3
imul
xor
sbb
fisubrl
dec
inc
sub
jge
icebp
jbe
stos
shrl
sbb
pushw
pop
inc
in
bound
fisubs
or
cwtl
inc
mov
jno
push
clc
mov
gs
sbb
pandn
cltd
mov
test
pop
add
inc
cwtl
push
xor
bound
pop
xchg
ss
hlt
addr16
mov
fwait
mov
add
out
jp
fcmovnb
into
fldl
cmpsl
mov
pop
in
pop
fcmovu
fmuls
rcll
divb
fwait
and
fcom
pushl
sub
mov
inc
iret
xor
sahf
imul
jecxz
push
add
cmpsl
dec
pop
loopne
pop
imul
push
in
ss
sub
out
push
loop
xor
loop
adc
aaa
pop
aad
xchg
pop
and
dec
push
sbbb
popa
sub
mov
sbb
mov
aaa
mov
xchg
stos
sbb
push
fiaddl
fisttps
mov
jl
add
outsb
mov
int3
mov
lods
cmp
pop
mov
repnz
sbb
push
xchg
add
and
xchg
jnp
pop
dec
int3
jge
sbb
mov
ljmp
jp
fwait
pop
mov
pop
bound
dec
js
mov
loopne
push
sbb
and
test
rolb
mov
jb
mov
cmp
push
fld
mov
mov
rcr
lock
stc
jecxz
inc
scas
lcall
jbe
cmp
outsl
xchg
dec
in
clc
mov
scas
push
mov
jbe
shll
sahf
popa
aas
adc
push
test
loopne
mov
popl
call
mov
xchg
jbe
or
pop
cmp
inc
adc
iret
push
inc
into
repnz
rorb
imul
leave
xchg
insl
mov
aam
inc
fcomps
mov
add
sub
add
mov
add
dec
adc
sbb
pop
lods
cmpsb
stos
jns
mov
cs
adc
adc
outsl
xlat
jp
push
mov
push
cmp
dec
adc
rcl
and
and
decl
push
inc
adc
pop
push
rolb
jl
xor
and
idiv
pop
outsl
ja
fsubr
arpl
dec
cld
std
inc
sub
ret
mov
xor
push
arpl
cs
xor
lcall
dec
jae
fs
cwtl
cmc
xor
jecxz
add
push
shlb
leave
call
dec
lea
adcl
adc
aad
imul
nop
jb
shrl
subl
rolb
into
hlt
ficoml
enter
add
adc
adc
jg
out
push
iret
adc
fnstsw
jne
ljmp
adc
fidivrl
jmp
call
cli
fstpt
aaa
int3
xlat
lret
mov
popl
ja
xor
push
jg
mov
mulb
dec
popa
imul
pusha
ret
add
push
pop
sub
mov
inc
out
sbb
mov
sbb
jl
shll
mov
xor
or
insb
dec
jno
pop
loope
fidivs
mov
bound
xchg
jae
pop
pop
cmc
inc
mov
push
ss
subl
xchg
cld
inc
out
mov
aas
xchg
sub
decl
ljmp
out
jl
sbb
cld
mov
popf
pusha
loop
out
sub
add
cs
nop
jl
nop
adc
out
push
push
les
inc
aaa
jmp
into
add
ljmp
lahf
push
lods
imul
lds
jb
lret
sbb
or
adc
sbb
cwtl
cmp
and
pop
and
dec
cmpsl
nop
dec
popf
add
push
iret
dec
shl
mov
adc
ficomps
lods
mov
loope
aad
mov
cwtl
ss
mov
stc
cmp
adc
pop
mov
xlat
out
mov
cmp
jge
imul
out
cmove
in
and
test
mov
sbb
ret
aas
or
je
sbb
sbb
push
xchg
mov
ljmp
rcrb
or
mov
pop
stos
jne
xchg
xchg
les
in
adc
dec
loopne
push
div
mov
shrl
mov
and
sbb
dec
fbld
shll
pop
fiadds
sbb
xor
sbb
or
dec
pop
jle
jb
es
jg
and
push
mov
mov
jb
inc
mov
push
xor
inc
ljmp
ljmp
add
dec
out
ja
idiv
pop
out
dec
mulb
lret
jae
jno
add
add
xchg
mulb
imul
adc
movsb
mov
nop
and
xor
mov
movsl
inc
into
mov
es
rcrl
mov
xchg
lret
testb
mov
inc
dec
push
jmp
enter
sbb
xor
or
aad
aas
lahf
mov
sahf
pop
add
sub
call
lahf
adc
jle
dec
jb
sub
push
lock
clc
inc
insb
lret
movsl
repz
sbb
jecxz
mov
mov
loope
ss
popfw
push
dec
bound
adc
cmp
enter
push
fstps
or
ss
aam
adc
jecxz
paddusb
iret
sahf
out
push
pop
lret
cmpsl
sbb
cli
dec
push
repnz
xchg
inc
sub
int3
fs
lock
mov
sub
repz
es
cs
dec
pop
add
push
xchg
out
aad
out
adc
cmp
cmpsl
sub
mov
sbb
rcll
mov
fstl
lcall
cmp
fisttpll
nop
cmp
inc
push
and
jbe
nop
cld
or
mov
add
std
mov
mov
sarb
jl
aas
fistps
popa
add
xchg
mov
xor
imul
aad
int
mov
fidivs
lcall
cmp
lock
aas
jbe
testl
subl
lock
jg
int
push
inc
mov
push
ss
add
decl
dec
call
push
fs
sbb
fidivs
pop
rol
and
lret
ds
repz
add
adc
mov
scas
in
aam
sub
das
mov
push
mov
ljmp
fsubl
jb
sbb
dec
insb
bound
int
push
jl
stc
data16
daa
adcl
inc
decl
jo
pop
call
daa
cmovs
push
adc
add
xor
jns
lock
popa
mov
repz
dec
inc
inc
dec
dec
stc
mov
pop
inc
pop
cmp
xor
xor
and
sbb
seto
adc
scas
jnp
lahf
int3
test
out
mov
mov
lret
movsl
xchg
or
sbb
mov
mov
push
sub
daa
imul
xor
add
mov
out
add
sbbb
std
xchg
xor
loopne
jno
or
xor
sbb
lret
xchg
loope
cld
hlt
mov
bound
arpl
pusha
scas
lcall
cmp
pop
inc
jle
test
int
and
fxch
mov
loop
outsb
sbb
int3
aas
stos
dec
push
sub
add
popa
pop
leave
lcall
sub
adc
sub
adc
insl
mov
xchg
idivl
movsl
mov
pop
jecxz
sti
mov
test
fisubl
jne
add
add
xchg
jmp
or
ja
repnz
mov
aas
aam
clc
outsl
mov
inc
jmp
jle
xor
and
lods
sbb
pop
lahf
jecxz
xlat
cmpsb
in
fnstenv
jnp
out
xorl
movsl
stos
jp
jb
mov
pop
lea
in
sub
les
flds
push
cwtl
scas
mov
gs
add
outsl
jne
lock
or
leave
mov
adc
insb
xor
popa
jecxz
mov
jno
aad
pusha
out
je
cs
loop
dec
xor
cmp
or
out
pop
jnp
ret
nop
mov
add
add
jg
adc
pop
imul
out
and
sub
cmpsb
xchg
jno
fwait
pop
pusha
mov
cld
test
je
inc
dec
out
sub
push
add
out
sahf
cli
and
mov
push
jns
dec
outsl
pusha
xchg
adc
push
adc
mov
mov
jmp
mov
mov
mov
jnp
jge
jl
adc
inc
aad
fnsave
lret
xor
ljmp
sti
cmc
negl
xchg
xchg
out
xor
out
pop
fucomip
push
into
sbb
fst
iret
adc
out
mov
std
push
mov
pop
lret
adc
cmp
pop
xchg
adc
mov
xchg
or
sub
pop
lds
lret
mov
inc
jle
addl
jb
iret
add
adc
inc
int
int3
jnp,pn
jmp
jl
add
adc
add
jge
outsl
popa
adc
mov
pop
test
lahf
inc
arpl
push
mov
addr16
lea
out
dec
xchg
mov
mov
rol
lock
adc
in
mov
out
and
out
inc
pusha
mov
or
sub
adc
jg
addr16
sbb
add
sbb
into
cli
jle
push
insb
call
mov
jmp
neg
jb
pop
dec
jmp
repnz
sub
lds
mov
push
gs
outsb
mov
xor
jp
nop
mov
dec
daa
add
mov
dec
and
dec
fbstp
out
mov
xchg
mov
dec
loope
mov
clc
inc
mulb
jbe
pop
sahf
adc
mov
cmp
cwtl
fiadds
mov
or
adc
dec
mov
mov
push
frstor
insb
lods
jge
sbb
repz
dec
movsb
repz
push
jbe
xor
xor
call
dec
sarl
adc
cmp
add
or
in
cmp
in
and
fisttps
cmpsl
leave
sbb
test
mov
test
cmp
in
sub
les
mov
jg
cmpsl
lahf
cmpsb
dec
ret
jp
imul
fnstcw
ret
movb
add
xor
sahf
xor
mov
push
js
add
add
pusha
sbb
inc
in
xlat
pop
sbb
cmp
push
cmp
testb
iret
and
cmp
sbb
xchg
or
scas
adc
fldenv
mov
mov
adc
push
arpl
cmp
enter
inc
into
clc
and
and
cmpsb
sbb
int3
aas
movsl
lret
shll
out
xor
scas
sub
inc
lcall
stos
xchg
pop
insb
push
mov
mov
imul
into
jae
inc
adc
jp
fbld
xlat
sub
add
std
orl
lret
das
push
lods
jae
mov
scas
and
adc
mov
xchg
scas
push
loop
repnz
xchg
jne
mov
and
sti
mov
mov
test
jbe
int3
mov
mov
and
insl
cmp
xchg
lods
je
dec
movsl
ficomps
xchg
adc
adc
lods
aaa
xor
loope
xlat
push
sbb
loop
nop
mov
xor
sbb
mov
mov
mov
cmovno
mov
incb
adc
add
pop
imul
and
imul
shr
mov
insl
mov
adc
fsubs
out
jl
adc
push
leave
lods
scas
out
fs
adc
mov
fsub
xchg
das
or
xchg
insb
stos
sub
ret
adcl
sti
add
mov
fwait
in
and
pushf
adc
sbb
pop
or
sbb
sbb
in
mov
and
mov
push
sub
jl
dec
xor
in
push
jg
cld
cmp
sbb
call
hlt
add
mov
jl
jno,pn
es
xchg
pop
outsl
into
mov
fbstp
dec
mov
xor
cltd
js
cmp
rcr
inc
jge
mov
lret
push
jnp
mov
fld
xchg
push
push
push
test
ljmp
stc
fucomp
and
xor
mov
mov
cmp
jnp
insl
or
add
loope
jo
adc
rcrl
sahf
pop
sub
xor
pop
pop
cmpsl
loope
or
mov
das
inc
mov
hlt
cmp
aaa
es
lret
jecxz
xor
adc
aam
stc
sbb
mov
mov
filds
daa
out
sbb
das
out
iret
jne
inc
push
mov
bound
cmp
repz
add
pop
push
dec
mul
add
xchg
ja
xor
mov
dec
loope
mov
xor
push
jnp
enter
inc
jmp
sbb
imul
cmp
and
push
mulb
mov
popf
xorl
notb
lcall
xor
sahf
es
push
addb
add
stc
std
in
mov
mov
std
pop
xor
mov
xchg
adc
add
add
out
test
shr
mov
ror
add
addb
stos
mov
xor
sub
int3
ja
push
aam
mov
aad
enter
pop
lods
inc
fldl2t
inc
andnps
loopne
mov
inc
jge
scas
mov
pop
shrb
sbb
dec
dec
mov
inc
cli
fdivrl
add
iret
in
xor
adc
incb
sti
hlt
xor
dec
bound
inc
push
mov
inc
leave
lret
ja
das
sbb
imul
jbe
fstp
push
into
ret
enter
aas
cld
push
xor
clc
je
lods
and
sbb
mov
cmp
repz
ja
mov
xor
insl
scas
xchg
jmp
jo
outsb
and
sti
fs
xlat
arpl
iret
bound
mov
ljmp
vcvtsd2ss
sbb
out
sbb
in
shl
movsb
ror
pop
adc
loop
dec
inc
scas
cmpsl
out
and
jae
push
adc
pop
mov
outsl
cmp
xchg
frstor
sub
icebp
mov
jp
lods
lret
fsubrl
push
sbb
push
aaa
test
sub
xchg
addr16
or
outsl
int
cmp
ret
sbb
jmp
mov
jnp
add
sub
cmpsl
das
push
mov
sbb
mov
dec
fstps
std
movsb
mov
mov
stos
jecxz
xchg
mov
mov
les
nop
sub
xor
push
mov
lods
cmp
and
adc
xor
cld
xor
popf
mov
cmc
int
and
adc
fsubs
pop
sub
add
xchg
ds
xor
mov
pand
shlb
sub
clc
out
lret
jmp
mov
repnz
jmp
add
aaa
mov
mov
pop
cmp
pusha
fcom
sti
mov
or
lcall
or
and
jb
mov
les
mov
ficoml
mov
ljmp
xlat
push
scas
mov
fbld
fwait
adc
add
mov
push
lahf
mov
lods
test
shrl
adc
lds
dec
outsl
jmp
pop
sub
cmp
lcall
cmp
xchg
jne
out
xor
adc
inc
movsl
and
lods
push
mov
aam
pop
addr16
xor
jge
loope,pt
sahf
repnz
int
ficoml
cli
adc
or
dec
ja
out
stc
jmp
aam
arpl
pop
popa
lock
test
push
push
movsl
aad
cmpsl
or
jno
ror
sub
dec
out
mov
and
les
adc
sti
add
xlat
rclb
push
int3
mov
into
xchg
mov
lods
and
ja
mov
xchg
repnz
out
sub
movq
mov
scas
jle
add
add
lahf
js
cltd
imul
adc
rcll
lds
xchg
push
xor
cwtl
test
and
pop
sub
mov
xchg
je
and
jo
pusha
and
pop
scas
fisttps
add
dec
cmp
out
jae
enter
stc
push
mov
idivb
shrb
inc
sub
adc
lock
test
sbb
rcr
out
adc
cs
mov
pop
mov
test
push
idivb
filds
push
outsl
inc
into
repnz
enter
push
pop
dec
xor
icebp
mov
sbb
aas
movsl
pop
lret
movsl
das
test
std
fsubr
adc
xchg
add
push
sbb
outsl
in
lea
push
aas
pop
or
push
out
adc
jecxz
adc
lahf
xchg
sarb
roll
popa
dec
or
cmp
mov
mov
push
leave
push
pop
mov
sub
mov
dec
jmp
lcallw
mov
and
adc
int
or
stos
fsubs
fmull
jmp
into
sahf
daa
dec
in
scas
cmpsb
pop
ljmp
stos
movsl
arpl
sbb
sub
xchg
js
pop
mov
jp
jecxz
pop
out
xorb
es
adc
adc
mov
and
xor
push
rolb
fwait
jo
xor
out
flds
dec
xor
shll
movsl
xchg
push
or
fdivs
adc
adc
mov
sbb
test
movsl
pop
lcall
push
andl
imul
sarl
push
sbb
push
jb
xchg
lods
inc
sub
enter
mov
insl
dec
jae
ja
or
dec
xchg
xor
push
dec
and
hlt
push
sub
pop
cmp
or
dec
jg
int
dec
pusha
mov
clc
push
jnp
repz
fstl
xor
sub
xor
mov
jecxz
ret
add
clc
xlat
iret
sbb
into
pop
lret
out
pop
and
pop
stos
inc
cmp
sbb
mov
into
fadd
insl
outsl
imul
add
imul
movsb
add
outsb
aad
xchg
pop
sub
adc
inc
mov
pop
pop
sub
lret
cld
xchg
sbb
inc
cltd
nop
cmp
mov
leave
xor
pop
addl
fneni(8087
mov
hlt
lcall
roll
jle
lcall
pop
sbb
call
pop
flds
xchg
mov
xorl
mov
inc
call
gs
dec
adc
ljmp
lock
inc
jmp
cld
dec
leave
sbb
sub
cmp
adc
and
fsubl
cmp
mov
add
inc
inc
popa
data16
rcrl
xor
out
mov
sub
add
xor
xor
andl
push
pushf
xchg
mov
cld
mov
mov
shll
jno
shl
addr16
mov
mov
dec
xlat
jge
aad
aam
cmpsb
pop
aaa
push
inc
inc
mov
imul
or
adc
pop
in
aaa
in
xor
popf
aam
adc
xchg
aam
cmc
sub
xor
xchg
mov
cmpsb
cs
lahf
mov
cmp
mov
inc
fcmovbe
icebp
jg
shll
inc
inc
push
push
orl
push
mov
mov
jae
add
inc
mov
push
test
mov
push
jae
imul
lahf
fs
mov
jno
aam
lods
push
test
push
xor
fsubr
push
idivl
mov
dec
mov
sbb
mov
jecxz
mov
shll
incl
cmp
xchg
lea
sti
ret
std
fidivl
pop
ljmp
xchg
out
loop
mov
loop
gs
xchg
jg
jl
es
mov
int3
xor
push
cli
push
outsb
js
push
aaa
ficoms
inc
pop
mov
jmp
or
jne
gs
hlt
xchg
push
sahf
pop
pop
test
xor
gs
pop
push
xor
mov
jl,pt
pop
imul
jle
or
pop
mov
cmp
lods
imul
adc
adc
mov
enter
jg
xchg
pop
jb
mov
xchg
insb
add
rorl
xchg
ja
inc
add
test
loopne
inc
push
or
mov
imul
and
jl
add
mov
js
mov
dec
dec
es
cli
aas
call
or
xchg
test
pop
negb
dec
orl
popa
pop
xor
push
inc
roll
dec
decb
lahf
movq
mov
dec
je
pop
lcall
mov
outsb
out
aaa
addb
daa
jno
mov
jp
rorb
testb
idivl
mov
sbb
repnz
repz
and
leave
add
aas
dec
pushf
int3
js,pn
adc
idivb
sub
mov
scas
dec
ucomiss
pop
xchg
es
adc
inc
dec
mov
mov
xor
insb
pop
mov
add
xor
pop
shl
or
xchg
mov
mov
and
sbb
mov
mov
imul
inc
and
push
ja
aas
sbb
int
dec
and
push
push
iret
or
rcll
inc
bnd
sbb
js
in
lea
mov
or
and
js
dec
lods
sar
push
mov
mov
stos
enter
xchg
pop
lret
jmp
hlt
loopne
sbb
sbb
add
push
les
mov
rcrl
repz
cli
in
jg
loopne
mov
push
test
add
add
jp
cmp
outsl
pushf
jl
out
imul
jl
or
jge
lds
out
jmp
repnz
cmp
pop
lods
or
push
nop
xorb
xlat
or
shlb
orl
or
mov
adc
jb
add
aas
jp
dec
push
das
xor
cmpl
pop
xchg
out
fmulp
arpl
mov
mov
adc
push
mov
aad
dec
push
aam
imul
adc
dec
dec
inc
xor
cmp
mov
sbb
sti
inc
insb
sub
push
mov
sbb
xchg
leave
loop
dec
sub
rclb
mov
insl
cs
xor
inc
std
mov
subl
adc
dec
xchg
cwtl
loope
int3
into
pop
lea
jbe,pn
xchg
sti
ljmp
pop
popa
pop
push
in
inc
pop
xchg
sti
pop
jnp
and
data16
out
out
sub
mov
cmp
mov
push
ret
daa
lea
fwait
out
xor
dec
cmpsb
inc
stc
xor
or
and
dec
das
pop
sbb
flds
fcos
into
fidivrs
inc
sub
lock
xchg
fnstsw
popaw
hlt
lea
pop
inc
dec
out
cmove
movsl
es
dec
sub
jmp
and
sbb
test
stos
add
cli
scas
gs
add
js
pop
sub
cmpsb
mov
test
lahf
pop
cmp
adc
in
adc
inc
jbe
sub
push
sarl
jnp
push
repz
jge
push
ja
fwait
jmp
and
push
pop
and
sbb
sub
cmpsl
arpl
insb
mov
test
clc
inc
xchg
xchg
mov
xorb
lock
push
sub
insb
xor
pop
and
inc
dec
call
nop
pop
pop
shlb
dec
lds
in
testl
jp
stos
stos
pop
rcrb
std
jno
adc
repz
call
push
ljmp
in
inc
roll
ror
cli
mov
pop
mov
dec
aas
push
sbb
aaa
fisubl
and
fldenv
orl
fiadds
icebp
cmp
scas
ds
pop
popf
rcrl
sbb
jo
push
test
cmp
test
sub
ljmp
sbb
jecxz
mov
faddl
clc
dec
imulb
lea
sub
addl
stc
cmpsb
insb
clc
inc
in
mov
out
addr16
push
inc
push
mov
mov
push
sub
je
push
pop
cmovae
ficomps
dec
sbb
outsl
xor
jge
mov
enter
imul
in
in
in
xlat
loopne
js
jge
xor
lock
scas
mov
add
and
shlb
xchg
lcall
cmpsb
and
pop
testb
mov
add
add
mov
or
out
mov
adc
push
gs
lds
lods
inc
shlb
clc
inc
cli
loope
hlt
push
cmpsl
cld
jg
mov
enter
sbb
adc
xchg
hlt
sub
scas
ficoml
jmp
test
scas
imul
or
lock
xchg
cmp
jl
aaa
ljmp
shlb
lock
imul
mov
in
addl
fisttpll
mov
xor
lea
dec
jmp
or
mov
in
xchg
and
jmp
outsb
je
out
add
sub
testb
xchg
repnz
xor
sarl
or
inc
and
or
mov
mov
dec
add
lcall
mov
push
ret
adcb
push
cmp
push
es
fwait
shl
push
cltd
mov
or
enter
push
jae
in
aaa
jecxz
bound
lods
pop
ja
cs
imul
sbb
inc
pushf
cmp
andl
dec
add
idivl
push
je
iret
dec
in
cmpl
mov
jb
lods
pop
bound
leave
in
push
mov
ret
xor
mov
sbb
in
filds
xor
inc
mov
iret
pushf
push
inc
mov
mov
or
dec
int3
dec
adc
jmp
sbb
gs
loopne
cmp
pop
test
das
sub
ror
or
mov
inc
ficoml
in
mov
push
cmp
shr
stc
rol
xchg
in
mov
outsb
lds
mov
push
jae
ds
arpl
loop
sbb
xchg
out
fidivrs
and
sub
adc
fbstp
mov
pop
mov
adc
jge
stos
or
pop
or
add
out
mov
push
sub
lea
je
cld
imul
jnp
pop
cmpsl
or
fiaddl
loopne
scas
mov
mov
adc
sub
push
mov
jo
pop
js
cmp
fcompl
push
cli
aaa
mov
into
xor
jl
pop
imul
pop
sub
pop
add
dec
jmp
addr16
out
std
dec
adcl
dec
movsb
pop
pop
sahf
fistps
push
test
std
addr16
inc
sub
shlb
inc
jg
xchg
or
add
clc
mov
or
lret
jnp
mov
pop
cmp
xor
loope
adc
jg
loope
adc
add
and
cld
xor
xchg
sbb
test
push
jae
mov
sbb
dec
jbe
popf
daa
mov
cmpsb
fistps
mov
cwtl
pop
and
test
lcall
mov
popf
mov
inc
push
cmp
test
fnstsw
mov
add
jle
pop
mov
add
add
punpcklbw
test
ljmp
and
push
movsl
icebp
dec
mov
inc
icebp
ffreep
nop
leave
xchg
call
pop
jl
mov
je
pusha
or
daa
cmp
mov
add
out
and
ss
inc
push
cmp
mov
push
dec
dec
jo
adc
fcompl
fwait
inc
dec
sarl
test
stos
mov
pop
shl
xorl
in
enter
clc
fnsave
and
mov
mov
inc
clc
lds
jle
add
and
repnz
mov
jp
add
mov
cmp
mov
fimull
sub
lock
sub
fstps
clc
iret
jb
add
push
cmc
in
pop
and
pushf
loopne
push
js
jg
cmpsl
shll
in
adc
xorps
or
stc
mov
movsl
pop
dec
ds
jle
pop
sbb
pop
sahf
in
jp
cltd
lahf
xorb
add
lds
ja
lret
push
ret
inc
cmp
dec
sbb
mov
mov
mov
cli
push
sbb
jge
mov
adc
pop
jp
xor
push
inc
mov
aas
xlat
andb
push
or
andl
fimull
cmp
es
cmp
fsubrs
cld
insb
data16
test
out
lahf
mov
mov
mov
cmp
inc
push
and
clc
xor
leave
jae
idiv
jge
rorb
fld
push
shr
inc
jo
jecxz
js
mov
cmc
lret
mov
in
jnp
rorb
call
clc
rcr
mov
sub
cmp
sub
inc
push
das
push
fadd
pushf
mov
imul
cmpb
int3
lock
in
loop
test
and
add
lods
cwtl
aam
or
pop
xchg
jno
or
dec
xor
sub
adc
lret
cwtl
fiaddl
mov
jo
jno
dec
sbb
xchg
enter
out
popf
push
insl
dec
iret
lods
xchg
mov
enter
sub
mov
mov
stos
dec
xor
and
jge
or
out
movsb
or
icebp
cmp
fcmovnu
inc
or
sub
dec
add
jmp
xchg
int3
cmp
jmp
fsub
rorb
rcrb
mov
xchg
js
xor
cmpsb
adc
xchg
lea
dec
pop
stos
in
dec
pop
push
pop
adc
xor
mov
jne
mov
imul
mov
jecxz
add
push
sub
addr16
shr
adc
or
fs
cmc
sbb
push
repnz
and
cmpsl
vpmulhuw
aaa
push
in
or
add
ret
push
mov
fwait
cmc
in
and
popa
mov
mov
mov
fwait
add
inc
mov
and
mov
add
adc
lds
pop
lea
or
in
xchg
js
mov
popf
addb
imul
dec
push
adc
mov
movsl
and
enter
pop
fisubl
icebp
out
push
cmp
xchg
adc
sub
pop
push
insb
mov
daa
imul
push
in
mov
ss
mov
xchg
push
mov
push
mov
cs
out
jb,pt
stos
adc
jge
xchg
xchg
dec
adc
push
xchg
test
push
popf
out
gs
xor
jb
mov
push
xchg
mov
mov
sbb
ret
dec
daa
xchg
mov
std
ret
add
pushf
mov
sbbl
aam
in
sarb
xor
leave
cmp
gs
gs
mov
int
jno
mov
mov
inc
xor
jmp
mov
scas
mov
sub
pushf
lods
mov
test
lret
pop
dec
out
adc
jle
loope
push
imul
test
cmp
sbb
jle
bound
push
sahf
pop
sahf
cmp
cmp
setnp
sub
xchg
fistl
inc
lods
sbb
sub
orl
jecxz
xor
lods
les
dec
xchg
nop
dec
push
pushf
or
inc
add
or
loop
loope
call
scas
scas
mov
pusha
dec
or
mov
xchg
repz
or
rorl
in
inc
cmp
fisubrl
sarb
in
sbb
test
sub
imul
flds
push
push
inc
cltd
repz
dec
out
or
fs
xchg
push
adc
sub
dec
int3
inc
jns
cli
test
inc
sub
out
fmull
jp
sbb
negb
or
ja
lret
mov
push
sub
bound
shl
aad
cmp
add
ret
xor
ret
out
xchg
stos
rorl
mov
rcrb
inc
das
xchg
das
bound
loope
das
data16
fwait
imul
cwtl
jl
xchg
adc
push
xchg
mov
and
adc
movsl
inc
add
ss
xchg
jmp
or
sarb
lahf
dec
sbb
pop
mov
int
sbb
dec
mov
in
cmpsb
sbb
in
cmp
aad
mov
push
int
mov
cmp
cmp
mov
inc
or
out
xchg
sub
mov
aad
aaa
and
mov
pusha
aam
lret
xchg
or
jl
cmpsb
mov
enter
pop
adc
sub
lret
and
outsl
out
cld
sub
add
adc
jmp
clc
jae
add
fstpl
lret
lods
ficoms
arpl
fdiv
xchg
inc
stos
mov
cld
jge
and
stos
out
rolb
icebp
rcrl
push
and
ret
jb
cli
clc
mov
cmp
jle
xor
pushf
loopne
mov
add
sub
add
jnp
fs
std
or
ret
lds
or
or
lret
push
cli
xchg
jbe
dec
mov
shl
fsubl
daa
lret
jnp
fs
inc
push
es
sub
int3
or
popf
ljmp
vmread
pop
in
add
movsl
cmp
repz
daa
das
clc
pop
fiaddl
stc
and
rorb
out
jp
inc
rcrb
cmp
push
or
aad
mov
add
mov
ficoms
push
dec
cs
and
or
mov
pop
mov
rclb
roll
jne
pop
mov
push
jbe
ret
pop
lods
and
inc
shrl
orb
xchg
ret
jmp
push
or
addr16
xor
inc
mov
mov
pop
jnp
out
add
and
xchg
inc
cwtl
sub
mov
mov
jo
or
lcall
pop
sarb
dec
mov
mov
test
out
dec
jmp
push
call
cmp
ljmp
imul
or
cmp
mov
cli
cmp
pop
std
imull
js
mov
push
adc
je
out
mov
out
fs
adc
shr
jne
sbb
xchg
lahf
aas
call
add
inc
sub
add
mov
outsl
add
adc
adc
bound
dec
adc
subl
shrb
test
clc
es
mul
pop
mov
imul
push
popa
lods
std
mov
dec
fstps
std
inc
addl
mov
mov
and
jns
mov
pop
jo
loope
ds
pushf
aam
rclb
rorl
jg
sub
sarb
xchg
mov
insb
pop
lret
sub
fidivrl
and
jmp
mov
fcompl
ss
test
cmp
aas
imul
js
rcll
inc
add
sub
dec
mov
and
xor
mov
adc
sub
pop
or
pop
sbb
mov
cmpl
mov
mov
lret
and
lods
lret
push
xchg
jp,pn
cmp
mov
scas
aas
das
cs
mov
iret
jns
out
arpl
ss
and
insb
mov
iret
nop
add
je
add
insl
js
mov
pop
mov
and
adc
shll
in
inc
jecxz
std
shlb
lds
adc
push
lret
aad
or
jmp
sbb
mov
push
dec
mov
sbb
dec
aam
mov
pop
push
mov
sti
aas
pop
inc
dec
sbb
jno
int3
mov
jnp
out
adc
mov
aas
orl
add
cmp
out
idivl
mov
andl
xchg
add
sub
add
inc
dec
push
scas
mov
and
aam
lar
lcall
popl
insb
pop
test
xchg
btc
inc
outsl
dec
pop
sbb
sbb
mov
data16
inc
out
xchg
or
scas
dec
bound
loop
enter
lcall
jmp
mov
push
divl
sahf
mov
adc
shlb
lcall
or
inc
cwtl
cmp
mov
gs
inc
and
out
stos
mov
test
ret
in
shll
mov
int
lods
test
add
cmp
or
rcrb
idivb
push
repnz
lahf
orl
mov
outsb
mov
out
icebp
pop
adc
mov
loope
subb
mov
sbb
dec
or
lahf
push
jne
cs
stc
cmp
xchg
pop
jne
mov
jp
test
in
push
xor
test
scas
sti
sbb
lea
mov
fwait
adc
imul
push
mov
mov
mov
loop
sub
das
xor
lahf
repz
popa
rclb
mulb
xchg
out
mov
push
cltd
dec
outsb
inc
fs
cmc
popa
sbb
inc
insl
int3
pop
test
adc
dec
xor
sbb
aad
test
aas
scas
mov
mov
ret
lods
cmp
xchg
inc
ljmp
mov
push
jb
push
jo
nop
dec
testb
and
cmp
push
dec
sbb
ljmp
bound
rcll
inc
cmp
mov
pop
out
arpl
push
jecxz
dec
or
jbe
loope
push
cmp
jae
movsb
jmp
sub
mov
cli
std
fwait
sub
call
ret
inc
jne
dec
outsl
inc
ljmp
mov
pop
dec
jecxz,pt
rcr
and
scas
gs
or
xor
mov
inc
fcmovnb
xchg
pop
lods
lret
add
mov
ljmp
xorb
ja
push
call
fcoml
jb
les
push
scas
lahf
out
jp
pop
cld
xchg
ljmp
mov
push
bnd
adc
cmp
pop
push
fsubrl
lret
stos
outsb
jne
sbb
jge
int3
stos
adc
jns
pop
call
jo
or
xchg
dec
sbb
cmp
lret
add
push
fisttps
or
push
stos
jmp
aas
and
cs
adc
pop
insb
das
sub
ret
js
jecxz
roll
jle
mov
jae
pop
mov
dec
rcll
das
fdivrs
les
rclb
add
gs
fcompp
out
gs
div
adc
or
cwtl
add
sub
add
jp
mov
jae
lcall
sbb
mov
scas
test
jnp
dec
repz
mov
dec
jmp
lods
pushl
xlat
mov
sbb
lods
inc
xor
xor
fmuls
pop
test
sub
call
out
cmpsb
mov
jnp
clc
mov
imul
nop
jg
jg
cmp
jp
pop
das
outsl
sbb
inc
popf
cmp
dec
sbb
dec
into
xor
add
pop
xchg
cli
movsl
dec
xchg
subb
out
pushl
popf
inc
addb
iret
aas
dec
sahf
mov
push
push
jb
seta
out
negl
rcr
inc
dec
icebp
outsl
in
inc
rorl
dec
mov
mov
mov
fisubrl
xor
lcall
inc
xchg
add
outsl
mov
mov
enter
jb
lret
xor
xchg
sahf
jnp
int
scas
cmp
mov
outsl
mov
imul
jne
push
arpl
adc
int3
adc
push
xor
jo
push
sbb
xchg
sti
nop
cld
stos
cmp
cwtl
cli
mov
push
jns
pop
push
mov
daa
imul
mov
lock
sahf
mov
es
hlt
test
mov
les
xchg
xchg
sub
xor
hlt
test
movsb
imul
cmp
xor
mov
jb
push
xor
sub
jg
jecxz
pop
inc
cmp
push
push
cli
rcll
mov
int
shll
or
sub
fsubrl
das
jp
pop
icebp
inc
push
pusha
pop
dec
add
xchg
cmp
addr16
fsubl
pop
jge,pt
and
adcb
cmpl
cmc
xchg
and
daa
shll
or
fwait
dec
sub
cli
fistpl
and
add
add
test
xchg
jl
jnp
adc
jecxz
adc
lds
xor
push
jb
mov
mov
and
add
in
adc
cwtl
sbb
pop
ljmp
mov
inc
or
push
and
ret
inc
mov
ret
or
mov
add
pop
jnp
push
cmp
xchg
mov
mov
nop
ficoms
loop
xchg
xchg
push
or
xchg
cld
out
nop
scas
or
xchg
inc
in
popa
loope
sbb
bound
jae
or
mov
comiss
cmpb
mov
mov
pxor
inc
or
imul
and
cmp
jecxz
dec
jle
test
jmp
rolb
inc
in
pop
lea
out
mov
jb
cmp
mov
cwtl
mov
push
lods
lea
lods
je
mov
pop
std
pop
dec
ja
mov
imull
cmp
add
add
fsubs
jmp
adc
sub
inc
das
cmp
add
lahf
xchg
ss
sbbb
and
xchg
and
pushf
pop
lret
sbb
hlt
mov
shrb
lods
mov
out
nop
xchg
mov
and
shl
push
adc
cli
adc
jg
rolb
inc
repnz
std
cltd
cmp
inc
and
roll
sbbb
sub
or
cmpsb
pop
jl
je
add
mov
popf
adc
les
mov
aaa
int3
les
in
repz
xchg
out
or
shrb
out
pop
in
pop
jmp
pop
nop
and
pop
pop
stos
rorb
int
out
adc
mov
mov
test
negl
div
stos
movsl
xchg
push
sahf
xor
mov
cmovno
movsb
sub
push
pop
into
inc
xchg
pop
or
je
mov
push
add
inc
sub
leave
pop
inc
out
pop
mov
pop
push
repz
test
iret
pop
sub
lret
stc
arpl
test
mov
stos
lods
cmp
xchg
fwait
pop
jecxz
decl
mov
negb
outsb
mov
aad
inc
or
pop
inc
xchg
cltd
insl
and
jbe
push
mov
imul
lods
adc
test
mov
xchg
mov
push
sahf
dec
jne
inc
cmp
mov
scas
add
mov
loopne
xchg
xchg
hlt
fdiv
icebp
aaa
dec
mov
fsubs
js
sarb
mov
jp
push
fstpl
sub
into
clc
cmpl
mov
mov
insb
es
popa
les
arpl
pop
pop
pushf
pop
mov
loopne
push
xchg
popf
filds
ja
sub
adc
xchg
enter
inc
xor
imul
add
mov
imul
repnz
push
outsb
xchg
push
fcmovnb
inc
adc
inc
push
aas
mov
sub
stc
xchg
xor
mov
xchg
imul
and
mov
ficoml
mov
ja
xor
rolb
pcmpgtb
fs
insl
cmpsl
push
adc
and
andb
enter
rorl
cs
sahf
sub
cmp
rol
lock
xor
outsl
fwait
inc
loope
or
shlb
stc
jae
push
rol
and
insb
sub
and
imull
popf
hlt
mov
aaa
and
test
mov
cmp
loope
and
push
insb
sub
mov
out
or
lret
pop
lret
push
or
mov
add
and
insb
xchg
jno
mov
mov
mov
xor
sub
fmul
daa
insb
lcall
jo
jnp
inc
xor
push
xchg
push
adc
call
xchg
mov
ljmp
add
add
add
add
and
xor
ret
data16
add
sub
add
push
and
repz
cmpl
insb
int3
sbb
lods
mov
sbb
adc
shr
push
aas
mov
inc
aaa
ss
mov
sbb
es
mov
push
imul
lcall
scas
cmp
mov
inc
fiaddl
push
popl
out
adc
cs
mov
xor
pop
add
push
dec
aam
out
jo
rcrb
adc
fstpl
test
or
cmp
mov
jo
test
pop
shll
jne
or
sub
add
sub
in
out
push
inc
rolb
pop
scas
leave
adc
scas
fisttpl
lods
add
jle
add
pop
daa
mov
arpl
es
loopne
scas
push
mov
mov
jbe
jb
push
stos
sbb
ret
mov
or
push
test
push
sbb
movl
std
or
divl
mov
cs
cs
sub
iret
je
xchg
imul
stc
pop
lock
cmp
scas
fs
mov
sbb
xchg
xorl
dec
adcl
nop
out
push
je
stc
inc
addb
xor
mov
test
js
inc
loope
in
das
pushl
loopne
jbe
rcl
push
mov
xchg
mov
dec
ret
insl
pop
testb
test
pop
fwait
sub
jae
or
mull
test
jp
mov
cmp
xor
jb
xor
or
sbb
std
push
repnz
jg
push
and
call
jmp
stos
andl
jmp
fisttpl
ret
inc
push
js
push
aaa
xchg
mov
aad
pop
inc
mov
mov
xchg
jecxz
mov
repz
cmp
jmp
jnp
add
push
addr16
xor
mov
mov
movsb
subb
cmpsb
adc
inc
sahf
and
mov
mov
out
push
mov
mov
fistpll
jae
bound
std
outsl
add
jne
pusha
lds
mov
xor
cmpsb
in
ret
xchg
push
cs
jnp
scas
lahf
repnz
mov
fwait
xor
jno
out
ja
pop
aas
or
push
insb
ljmp
decl
sahf
sar
imul
pop
icebp
movsb
jb
sbb
dec
adc
je
loopne
push
mov
sub
nop
je
jns
in
mov
cmp
mov
xchg
and
pop
or
sbb
cmp
lcall
test
adc
push
ss
out
loop
or
inc
es
mov
test
scas
cli
insb
insb
or
outsb
dec
sahf
cs
js
or
ljmp
jno
daa
fidivs
lods
dec
sbb
pop
addb
cmp
fldl
add
add
push
jecxz
jg
popa
hlt
mov
cltd
xchg
mov
add
faddl
mov
mov
arpl
pop
scas
or
or
int3
shlb
fsubrl
and
clc
or
loopne
adc
inc
jns
dec
push
clc
arpl
cmp
shrb
movl
mov
adc
or
mov
addr16
cmp
outsb
call
ds
cmp
jp
das
push
gs
fsubl
mov
mov
and
test
movsl
outsl
xchg
int
sub
xor
cmp
cmp
lods
push
leave
sbb
sahf
xor
and
movsl
test
out
leave
adc
push
in
out
andb
stc
fcomip
movsl
cmp
sub
jne
pop
mov
sub
adc
cli
and
and
outsb
pop
cmp
jg
cmc
pop
adc
and
xor
and
mov
cmc
cs
fcomp
or
jnp
loopne
inc
and
roll
cmp
adc
aaa
jge
mov
jo
int3
sub
add
push
add
cmp
pop
js
out
test
out
xlat
mov
adcb
cmpsb
aas
dec
add
jne
jbe
scas
fstl
in
lahf
adc
out
dec
pop
pop
dec
in
push
je
out
rcrl
je
mov
push
and
lahf
clc
fisttps
jp
cmc
cmp
loope,pn
or
pop
insb
popa
mov
pop
mov
mov
ficomps
inc
mov
dec
push
push
pushf
sahf
add
bound
or
cmp
orb
jo
sbb
and
fcmovu
mov
push
jle
sbb
sbb
jge
cmp
ficompl
mov
adcl
pop
lods
push
mov
enter
adc
dec
popf
and
cmp
jbe
or
bound
out
xor
adc
ja
cmpsl
test
cli
cmp
fcmovbe
sub
popf
cmp
test
push
cmp
dec
scas
xor
or
xchg
es
lea
cltd
mov
mov
push
adc
js
out
push
dec
add
lds
mov
stos
movsl
jecxz
mov
idiv
leave
rorl
lcall
fwait
sbb
shlb
pop
dec
mov
xor
cli
ljmp
pop
movsb
sbb
in
out
icebp
cld
sahf
movzbl
les
add
sub
cwtl
nop
loop
sub
cwtl
cli
cmp
ja
push
adc
fdivr
ja
jb
lock
lret
pop
aam
daa
or
pop
test
stc
sub
test
xchg
scas
and
in
test
inc
cmp
mov
rorl
xchg
mov
adc
inc
fildl
out
lods
push
frstor
xchg
push
ret
pop
push
mov
cmc
jnp
cmp
nop
and
or
jmp
jo
and
int3
loope
add
add
pusha
jbe
out
fnstsw
je
iret
mov
add
add
jge
arpl
out
aam
mov
icebp
popf
adc
dec
out
fsts
lods
je
sbb
xchg
mov
jns
cmp
std
aad
cmp
mov
or
arpl
xchg
add
mov
out
push
mov
int
sbb
push
pop
lret
add
push
jo
es
cmpsl
jecxz
dec
push
lds
xor
fstps
fwait
and
add
xor
test
int
cmp
or
jnp
outsb
mov
dec
int3
push
fisttpl
out
inc
sub
fisttpll
cmp
loop
mov
sbb
push
data16
std
mov
adc
sbb
stos
mov
sarb
je
ud2
popa
cltd
mov
notb
sub
and
push
inc
inc
or
mov
lahf
int
fstps
jb
fnop
loope
and
out
and
int3
lds
xchg
inc
mov
shrb
adc
jle
lahf
lret
aad
ljmp
fidivl
popf
rolb
jmp
popf
out
insl
js
xchg
aad
aaa
add
add
push
faddl
push
mov
cmp
lea
insb
cs
pop
adc
cs
outsl
je
and
xor
jge
or
jmp
sub
push
and
jg
sub
stc
clc
fstpl
mov
push
pop
das
xchg
pop
cld
aaa
sub
fs
lock
ret
mov
pop
ret
leave
cwtl
fld
les
sbb
enter
insl
mov
xchg
add
dec
jnp
adc
lock
movsl
mov
hlt
mov
outsb
aas
lcall
fsubl
jecxz
cmp
mov
daa
out
jbe,pt
or
fdivrl
nop
in
push
mov
lods
sub
mov
test
xchg
mov
add
xlat
aam
pop
xchg
jno
mov
jns
lods
xorb
mov
or
rcl
movsb
xor
cmp
sbb
imul
push
movsl
jge
xchg
movsb
pop
rorb
push
out
jg
div
xchg
mov
nop
sub
fcomip
addl
test
inc
cs
cmp
cmc
add
cmpsb
out
rcl
pop
or
xchg
and
mov
out
mov
mov
and
test
rcpps
out
movb
sbb
iret
js
in
std
cs
xor
gs
pop
test
xchg
add
mov
cmp
out
xchg
in
icebp
mov
stc
pop
arpl
repnz
unpcklps
cld
stos
sbb
adcb
cmc
outsb
subb
dec
push
sub
repnz
dec
sub
insb
idivl
ljmp
sub
popf
jl
and
push
sub
fucomip
ficoms
adc
enter
cmpsl
add
sub
add
das
xchg
imulb
push
movsb
lock
test
jae
xchg
fisttpll
or
xchg
jb
push
popf
inc
fstp
add
loop
inc
inc
aam
adc
scas
loop
inc
xchg
repz
adc
pmulhw
pop
test
js
mov
adc
lds
push
add
mov
ss
iret
les
cmp
xlat
push
lret
sub
mov
and
pop
pop
stos
loopw
pop
sbb
fs
push
push
adc
pop
and
cmp
add
xchg
aaa
pop
ret
pusha
sub
movsl
aaa
outsl
dec
loop
add
mov
fnstenv
out
dec
ret
loope
add
fmuls
out
jp
jl
mov
std
in
pop
adc
or
xor
mov
in
stos
jno
es
popf
test
mov
inc
mov
dec
xchg
int3
aaa
aaa
fwait
mov
imul
bound
fisubrs
adc
outsb
mov
into
cli
outsl
jae
jns
inc
sbb
ss
cmp
xor
add
mov
fucomip
sub
int3
cwtl
dec
and
stc
lods
xchg
jno
mov
out
fdivl
pop
and
out
loope
imul
out
lods
pop
es
nop
shrl
or
xor
sbb
pop
inc
or
xchg
or
dec
mov
mov
dec
jno
xchg
xchg
test
addr16
xchg
leave
mov
out
pop
sub
xchg
sbb
cmpsl
push
push
add
hlt
xor
adc
cli
iret
sahf
stos
or
int3
jmp
pop
pushf
repnz
mov
das
xchg
xor
outsb
leave
out
in
dec
out
push
pop
xor
push
mov
cmpb
jecxz
out
sbb
jl
out
inc
hlt
addr16
mov
pop
pusha
aas
jo
es
in
pop
jo
or
pop
mov
cmp
out
xor
push
jecxz
pusha
or
mov
ja
flds
lcall
jns
movsb
mov
stc
out
les
dec
call
jo
dec
scas
test
push
das
mov
add
enter
in
insl
je
pusha
iret
pop
dec
xor
sub
add
cmp
insb
add
leave
push
cmp
sbb
in
mov
in
data16
shrb
add
and
jno
sbb
movsb
and
sub
imul
pop
jae
pop
add
or
pop
test
enter
mov
push
ja
pop
std
pop
mov
pushf
sbb
rcrb
dec
popf
xchg
ffree
fsts
jge
sbb
and
stos
add
jne
cltd
mov
stc
push
sbb
push
jg
pop
sarb
loop
add
add
outsl
daa
insl
push
push
stos
adc
pop
sub
stos
add
sub
add
les
lahf
mov
push
inc
popa
cmp
les
cwtl
movsl
xchg
inc
mov
add
les
jmp
pop
mov
xchg
les
lretw
and
pop
cmpsb
popf
iret
add
pop
aam
dec
mov
xchg
icebp
orl
aam
mov
push
sbb
arpl
add
lds
and
xlat
les
fstps
cli
imul
icebp
mov
push
dec
orb
cmc
jle
cmp
pushf
outsl
mov
into
sub
cmp
lds
jp
and
sub
lret
ja
orl
xchg
sbb
cmp
sub
jge
movsb
sub
mov
fmull
cmp
sbb
mov
xchg
xchg
pop
sub
in
sub
mov
int3
inc
les
outsb
mov
divb
add
mov
scas
add
inc
outsb
scas
and
mov
into
dec
add
add
loopne
outsb
bound
mov
shr
mov
jnp
aam
fiadds
push
ret
adc
pop
setle
xlat
rcr
jecxz
jo
es
addr16
sbb
sbb
mov
push
aaa
push
loope
in
adc
ja
xchg
push
outsl
xchg
cli
aaa
dec
aad
icebp
cli
lea
adc
std
js
test
jle
cmp
add
out
in
aas
es
outsl
cmp
push
bound
cld
cmp
jb
ret
sarl
or
adc
daa
outsl
dec
leave
fcoms
sahf
and
sbb
sbb
mov
sbb
repz
lods
inc
lock
xchg
sub
xor
dec
pop
mov
jns
xor
fs
inc
stos
fldpi
push
les
data16
in
hlt
jbe
cli
push
mov
fidivl
sbb
inc
push
out
push
jno
mov
fadds
jne
cwtl
stc
test
cmp
test
sbb
jne
mov
push
pop
dec
mov
adc
and
iret
add
in
mov
jae
xchg
loope
lret
dec
and
and
outsl
push
mov
gs
dec
adcl
jecxz
stos
inc
mov
or
stos
xor
nop
pop
test
filds
icebp
lea
mov
negb
jnp
jbe
xor
ficoml
outsb
insl
pop
mov
sub
ret
sbb
insb
std
jg
xor
inc
les
icebp
addr16
mov
add
add
cmp
cwtl
lds
jns
xor
cmpsb
test
mov
or
mov
cld
inc
inc
lock
lcall
ret
sbb
mov
add
add
pop
and
mov
out
add
stc
push
inc
scas
add
sub
add
notl
rcr
jmp
outsl
mov
add
dec
das
pop
mov
fiaddl
popf
das
mov
dec
iret
jmp
xchg
lahf
mov
sub
aam
lods
insl
cmp
out
sub
jne
popf
les
push
and
leave
rorl
cmp
daa
xor
call
inc
mov
mov
test
mov
push
in
fistps
jecxz
jecxz
xor
sub
push
lods
leave
adc
fwait
mov
loopne
mov
push
shll
and
jmp
orl
cmp
scas
push
and
dec
jae
scas
je
inc
andb
test
fadd
inc
out
mov
and
push
les
int
push
stos
adc
jmp
pop
into
fisubrl
insl
pcmpeqb
add
shl
and
hlt
jecxz
push
inc
ret
scas
dec
mov
pusha
or
xor
push
xor
jnp
in
subl
dec
dec
mov
test
daa
dec
and
adc
mov
das
movsb
ret
outsb
mov
shrb
push
insl
add
shl
sub
loop
int3
lods
sti
jp
imul
push
xchg
mov
jl
jecxz
and
xchg
jae
bound
push
lcall
scas
nop
xchg
pop
pop
arpl
adc
shll
ja
imul
push
mov
jl
cli
clc
data16
jne
or
lock
movsb
mov
pop
cmpsb
jnp
pop
xlat
jnp
mov
sbb
jns
lea
mov
fwait
push
xchg
cmpsl
inc
fwait
mov
mov
push
ljmp
test
pop
jl
xchg
mov
nop
ret
std
rorl
stos
xchg
push
push
xchg
out
xchg
pushf
inc
mov
pop
and
jne
add
frstor
lds
mov
pop
out
adc
jb
popf
jmp
adc
dec
jns
mov
and
lret
cmp
mov
push
dec
sahf
push
jmp
mov
shlb
adc
outsb
in
nop
add
sbb
ds
pop
mov
sbb
lea
out
aaa
and
nop
dec
push
scas
arpl
cmp
jg
rolb
xchg
mov
xchg
imul
pop
repnz
fwait
mov
sahf
shll
cmovs
adc
insb
mull
add
out
jae,pt
arpl
or
fmul
dec
pushf
push
xor
add
or
outsb
jbe
xlat
xlat
mov
jmp
popa
add
daa
mov
dec
sub
out
sbb
popa
pop
hlt
xor
icebp
mov
out
outsl
push
mov
in
xchg
mov
xor
push
dec
into
or
jg
inc
arpl
shll
sub
sahf
imulb
pop
mov
add
hlt
cmp
mov
enter
mov
add
add
adc
sub
or
cmp
ret
stos
jle
mov
or
sbb
mov
xchg
sub
xchg
bound
mov
in
adc
int
cmp
add
add
sub
add
gs
add
xor
or
xorb
cs
mov
adc
lock
addr16
and
jp
cmc
push
and
cmpsl
fxtract
sbb
scas
cli
shlb
mov
lds
dec
pop
xchg
sub
jb
leave
adc
int
addr16
inc
mov
lcall
sbbb
enter
shlb
in
fbld
and
and
insl
push
mov
enter
xchg
addr16
pop
fs
repz
ljmp
loopne
jns
lods
mov
les
adc
cld
sbb
xchg
dec
sbb
loope
sbb
mov
out
mov
fchs
out
sub
dec
mov
int3
push
addr16
jle
xchg
sbb
cmc
test
imul
repnz
or
or
loopne
test
outsl
loop
xor
pop
mov
repz
push
in
sbbb
push
mov
mov
lea
cmpb
test
xchg
sub
and
test
dec
mov
cmp
inc
iret
and
rsqrtps
xchg
in
add
mov
mov
pop
mov
fisttpll
pushf
mov
dec
inc
push
push
push
mov
xor
pop
mov
mov
and
jbe
push
push
inc
mov
imul
lcall
xorb
mov
jae
mov
loop
rorl
mov
inc
es
idivb
inc
adc
sbb
mov
mov
lea
sahf
and
xor
push
mov
mov
in
out
fcmovb
and
mov
add
dec
in
pop
dec
and
push
cld
mov
popa
dec
dec
movsl
sbb
sub
sub
ljmp
das
shrd
ja
mov
fsubrs
jno
lahf
movl
or
pop
sarl
dec
lods
adc
stc
decb
xchg
loop
pop
dec
mulb
mov
das
aam
jl
stc
in
cmp
jo
mov
mov
mov
mov
inc
popa
movsb
aas
out
frstor
loopne
stos
outsb
outsl
test
dec
xor
int3
xchg
fimuls
outsb
out
xor
or
lahf
fsubrs
pop
nop
int3
mov
pop
mov
repz
inc
push
push
aaa
xchg
mov
jp
pop
mov
xchg
push
mov
and
ljmp
inc
jl
stos
pop
and
mov
jnp
jnp
sub
add
sbb
jge
mov
outsl
xchg
lcall
add
mov
outsl
out
push
int
pop
dec
pop
fwait
lcall
pop
push
xor
mov
push
mov
lods
les
xchg
mov
inc
shlb
data16
out
add
add
int
xor
sub
xchg
and
cmp
lahf
mov
xor
ret
mov
xorl
sub
xor
pop
movsb
adc
mov
xchg
shlb
ds
push
andb
insb
cmpsl
movb
rcrb
pop
mov
cli
sub
xor
int
jnp
adc
in
lods
je
stc
addr16
jmp
inc
pop
lods
iret
je
mov
xchg
insb
mov
adc
enter
sub
lock
outsb
lds
add
stc
cmpsl
lock
out
lds
jg
stos
pusha
mov
add
nop
fisttps
lret
fiadds
insb
int3
mov
push
stc
sbbl
fadd
inc
jbe
lods
adc
mov
jl
outsl
mov
dec
arpl
adc
ficoms
add
jg
push
jb
and
dec
shll
jecxz
pushl
ja
shll
push
or
out
mov
subl
push
int3
jb
rorb
in
sub
xor
dec
xor
int
test
outsb
stc
mov
out
cmc
scas
push
fisubs
push
fdivr
jbe
in
adc
push
stos
shlb
dec
data16
fst
cmp
aas
add
imul
adc
or
in
mov
les
xchg
xchg
mov
hlt
filds
cmp
lods
push
icebp
dec
xchg
mov
dec
push
pop
loopne
sbb
cmpl
xchg
or
fcoms
enter
sbb
mov
stos
add
movsb
in
dec
xchg
das
pop
pop
repnz
mov
xchg
xchg
ss
data16
sti
and
xchg
mov
mov
push
pop
push
leave
sbb
repz
or
test
inc
shrl
adc
add
cmpsl
outsl
pushf
xchg
and
insl
inc
xchg
rcr
adc
push
cmp
bound
push
fisubrs
mov
fcmovnu
data16
jle
insb
push
in
std
sbb
adcl
xchg
lcall
jmp
jg
call
stc
push
xorb
sbb
ds
pop
popf
push
mov
arpl
iret
jns
inc
repz
cmp
jmp
in
aaa
or
and
xchg
lahf
adc
mov
in
daa
int
jl
mov
movb
test
dec
adc
inc
xchg
test
das
lods
mov
loopne
cmc
adc
mull
jl
mov
pop
jle
leave
repz
cs
add
add
mov
xor
mov
add
add
loope
rorb
jecxz
cmpb
inc
xchg
insb
bound
out
clc
sti
lea
mov
popa
cmp
cld
clc
shrb
movl
test
dec
jge
push
xlat
mov
xor
dec
jle
mov
stos
xlat
jle
cwtl
pop
lret
ss
sub
jmp
lret
or
addr16
pop
jmp
or
aad
outsl
adc
mov
mov
int
out
inc
pop
adc
pop
xor
sbbb
jle
xor
dec
cs
sub
push
outsb
scas
mov
xor
stos
jle
dec
and
ficomps
imul
pusha
push
or
push
push
cli
lock
lahf
mov
jo
and
fisttpl
lock
dec
int
cmp
lahf
mov
push
testl
sub
push
insl
fistps
out
pushf
in
or
and
mov
les
dec
popa
add
pop
fstpl
outsl
fcmovnbe
cmpsl
rorl
or
stos
imul
cvtps2pd
es
jno
push
jg
decl
fidivl
fs
sar
fstl
mov
dec
pop
loopne
jns
cmp
out
shrl
cld
jle
int
bound
xchg
xchg
cs
nop
mov
jge
insl
dec
icebp
repnz
test
sub
lds
lcall
sbb
mov
nop
test
mov
int
and
pop
loope
pop
mov
jge
xchg
or
fmull
shr
in
inc
push
push
pop
ficomps
push
mov
negb
inc
jg
hlt
mov
ret
jbe
mov
pop
add
mov
lret
sub
jbe
sub
stos
jne
enter
push
in
rcl
aaa
mov
lret
xchg
mov
mul
cmp
movswl
sahf
adc
addl
fsts
mov
daa
mov
sub
inc
fldl
lahf
dec
imul
cmp
push
in
cmp
mov
out
aam
out
add
pop
or
in
shr
mov
mov
mov
negl
or
pop
pusha
jge
fninit
pop
mov
jae
push
or
imul
ljmp
pop
ret
outsl
sub
loopne
aad
cltd
cwtl
cmp
popf
adc
push
scas
shrb
repnz
xchg
inc
dec
test
mov
hlt
cmpsb
sbb
data16
sbb
aaa
andl
mov
insl
icebp
or
jg
push
fs
cltd
jge
cmc
scas
mov
xchg
and
inc
leave
xor
xchg
insb
mov
push
outsl
add
or
jae,pt
sbb
adc
mov
cmp
dec
cmpsb
mov
sub
in
shlb
cmp
lcall
or
mov
mov
dec
pop
push
subl
cltd
dec
inc
mov
in
stos
clc
adc
or
dec
repnz
add
fisubrs
inc
or
test
andl
push
fnstcw
push
mov
int3
mov
cmp
and
dec
xlat
inc
popf
push
add
mov
mov
push
push
xchg
and
jbe
lahf
scas
push
jl
insl
enter
xor
sbb
repz
scas
xor
mov
test
movsl
xlat
in
xchg
mov
sarb
lret
inc
cmp
stc
dec
push
mov
xor
fildl
or
pop
and
sub
adc
sbb
and
repz
xchg
lods
aaa
add
cwtl
and
les
pop
sahf
mov
or
mov
repz
fwait
inc
pop
xor
pop
aaa
ficomps
loope
lret
and
and
cmp
jmp
insl
sub
pop
and
rorl
sahf
das
inc
sub
out
adc
sbbb
das
mov
mov
out
fiadds
mov
test
mov
out
in
outsb
ss
push
fsubrs
dec
inc
loop
or
dec
pop
out
inc
repz
xchg
scas
dec
mov
push
jle
add
js
lret
mov
and
imul
xor
addr16
pop
inc
jle
sbb
jg
cmp
bound
mov
push
inc
cmp
stos
repnz
sbb
pop
mov
sbb
xchg
movsb
dec
jns
xchg
mov
adc
rorl
pop
mov
push
xor
mov
test
mov
in
sar
out
in
jno
es
dec
and
mov
and
jno
sub
add
fistl
xchg
mov
negl
mov
dec
dec
loopne
bsr
mov
in
arpl
sub
iret
dec
rcr
int3
cmc
adc
pop
std
mov
repnz
mov
repnz
push
jnp
push
shlb
jle
jge
pusha
lds
jo
dec
sbbl
rolb
outsb
in
add
jnp
aas
in
adc
pop
sarb
jne
lock
sbb
dec
in
aad
sbb
or
cmp
xorb
inc
ds
mov
jne
cli
mov
adc
lea
into
fwait
lret
imul
icebp
stos
cwtl
jl
stc
gs
jnp
repnz
fadd
jecxz
cli
mov
stos
shll
cmp
xor
push
movsb
push
or
xor
outsl
shlb
adc
adc
sub
adc
cmpsb
xor
cmp
fldl
lds
arpl
mov
mov
testb
in
std
mov
pop
outsl
mov
xchg
adc
outsl
cmc
fistpl
lret
jne
add
in
jbe
or
or
xorb
or
lods
or
in
gs
and
xchg
mov
stc
jne
add
add
fldcw
loopne
inc
inc
push
mov
add
clc
inc
or
outsl
sub
std
aad
call
sbb
aam
mov
cmp
pop
aas
mov
lock
push
mov
xchg
loope
into
pause
mov
sub
add
push
aas
sub
cmpb
fstpl
lea
std
sub
sbb
inc
pop
clc
sbb
mov
es
jne
pop
jb
push
push
test
dec
sbb
xchg
add
nop
or
xor
roll
xchg
cmc
out
lret
movsb
outsb
out
test
test
xchg
repz
insb
fwait
movl
or
jb
xchg
ss
int
enter
xlat
pop
jmp
outsl
xor
aad
jl
inc
das
cwtl
push
arpl
push
rolb
xor
ficoms
arpl
cmp
ljmp
pop
lcall
push
xchg
push
jle
cli
sti
ret
das
enter
mov
bndldx
lods
mov
movl
arpl
out
push
int
int
shrl
push
outsl
push
call
cmp
mov
enter
imulb
adc
mov
int3
sbb
outsb
js
cli
inc
xlat
paddd
pop
fcomps
add
sub
ds
push
mov
xlat
sahf
pop
jmp
jb
ljmp
cmp
pop
push
popl
cld
push
int
cmpsb
shrl
sub
push
ja
sti
push
testb
sbb
push
andl
adc
repnz
push
bound
inc
bound
aad
mov
cmp
daa
push
ljmp
adc
ljmp
test
jae
fiadds
ljmp
adc
jg
mov
adcb
call
push
shll
int3
mov
xor
bound
loop
xchg
or
jnp
xor
in
shll
xchg
push
dec
data16
or
jg
popf
imul
add
out
mov
and
dec
ds
sub
loope
dec
cld
or
mov
adc
xchg
jb
lea
bound
add
push
sub
mov
lock
frstpm(287
sub
cmp
pusha
pop
cli
or
or
mov
cwtl
sahf
dec
pop
sarb
cmp
sub
or
mov
in
stos
mov
jge
jl
and
bound
sub
loope
mov
dec
xchg
sbbb
test
cmpsl
fs
mov
jge
das
xchg
cmp
mov
sti
ja
ret
adc
sbb
rcrb
jmp
push
mov
mov
push
out
iret
lods
xchg
and
fnsave
lcall
aas
mov
icebp
xchg
rcrl
imul
adc
movsb
icebp
dec
mov
adc
pop
push
mov
jae
je
dec
xchg
pop
xchg
js
mov
dec
roll
sub
add
dec
xor
jns
push
js
in
cmp
test
mov
cmp
test
mov
ja
cmc
adc
mov
sbb
pop
in
test
insl
in
das
fs
dec
nop
cwtl
sbb
inc
cmp
mov
js
int
lods
jg
pop
jne
sahf
scas
sub
jmpw
cli
xchg
rclb
cmp
push
cs
aam
mov
add
aaa
xlat
lods
add
sbb
rclb
int3
outsl
ret
sub
rol
mov
mov
pop
add
jns
cmc
adc
divps
les
in
pop
sbb
adc
lds
push
and
inc
stos
pop
mov
fcomps
mov
pusha
xchg
push
xchg
out
lret
xor
incl
cmp
mov
sub
in
nop
lcall
pop
pop
xorl
push
inc
inc
xor
inc
cs
cltd
pop
fstpl
dec
push
imul
dec
cltd
xor
jmp
jbe
inc
mov
mov
pop
pop
imul
rcrb
pusha
pop
jp
jbe
cmc
jmp
push
sbb
sbb
jg
ret
or
mov
xchg
mov
cld
lahf
stos
addb
clc
lea
inc
mov
mov
push
sub
loope
mov
fidivs
mov
pop
pop
ret
sub
fisttpll
inc
leave
sahf
fisttpl
mov
sti
adc
cwtl
jp
aaa
fwait
pop
xor
mulb
push
sub
jno
jp
fwait
not
pop
mov
push
loope
cltd
dec
xchg
movsl
lret
loopne
jg
cltd
subb
push
rorl
add
int3
test
xor
mov
jecxz
or
lahf
scas
inc
hlt
fsts
into
daa
inc
les
push
arpl
pop
lods
xchg
adcb
mov
insl
and
cmp
mov
sbb
mov
sub
xorb
testb
clc
xchg
fiaddl
jl
sti
rcrl
mov
cmpsl
inc
arpl
iret
dec
and
cld
frstor
icebp
icebp
loop
stos
sub
inc
cmp
lret
and
push
pop
aam
push
movq
into
xchg
aas
iret
mov
dec
push
sub
dec
xchg
cmpsl
je
sub
push
adc
mov
xchg
xchg
mov
jo
cs
add
ror
dec
mov
lods
cs
bound
js
xor
jmp
add
fldcw
sbb
int
fs
in
and
les
mov
push
mov
adc
push
cld
and
rclb
popa
stos
pusha
and
and
push
clc
cmpsl
sub
test
into
jl
jb
test
mov
aaa
or
mov
sti
sub
dec
inc
push
xchg
rcl
xchg
repnz
and
and
pop
or
out
aam
sbb
pushf
jge
popf
xchg
hlt
out
or
dec
mov
jo
lea
les
add
add
xor
leave
jns
test
cmpsb
lret
inc
xchg
loopne
adc
ret
imul
stos
xorb
jecxz
inc
dec
xchg
out
ret
aaa
add
adc
stos
xchg
pop
push
fstpt
add
sbb
addl
mov
loop
pop
fldenv
or
arpl
orb
lcall
mov
adc
adc
sub
incl
aas
inc
xchg
xchg
mov
push
scas
mov
mov
cmc
mov
mov
mov
setns
imul
daa
dec
dec
cs
cli
xor
fxch
fists
mov
and
mov
push
in
test
push
jg
inc
inc
dec
push
push
mov
push
enter
daa
scas
out
inc
or
or
add
data16
cmp
test
mov
push
sbb
test
cltd
sarl
add
movsl
icebp
push
out
addr16
xchg
scas
mov
fs
ja
or
test
sbb
mov
pushf
sbb
inc
std
xor
fstpl
ds
vpmulhw
stos
fsubr
in
lcall
sti
inc
pop
jg
push
fbstp
jae
loope
xlat
cli
mov
jnp
xchg
mov
ror
lret
into
shlb
fstpl
jle
movsl
test
jecxz
and
xor
nop
addr16
pop
cmpsl
fistl
ds
in
push
push
xchg
lea
pop
cmp
xchg
jae
sub
dec
and
ja
pop
push
cld
mov
or
mov
divb
pop
repz
out
inc
xor
sti
mov
subb
cld
push
push
mov
cli
lcall
imul
sbb
sbb
sbb
dec
push
scas
test
insl
pushf
push
mov
sub
test
or
test
je
jle
ljmp
xchg
cwtl
movsb
xor
jno
pop
imul
hlt
push
mov
mov
aaa
cli
dec
cwtl
sbb
out
in
rolb
scas
push
cmp
ror
jns
popf
cmp
adc
jp
leave
sarb
pop
imul
bound
loope
jle
pop
fadds
dec
fildl
dec
fs
lock
xchg
div
shr
jbe
in
push
dec
mov
mov
sub
mov
sbb
mov
mov
mov
and
pop
mov
or
sbb
xchg
pop
mov
push
mov
cmp
xlat
jmp
adc
lods
ljmp
in
cmovne
sub
fstpt
push
xlat
mov
or
or
push
dec
push
enter
lcall
lahf
pop
pop
stc
and
imul
sub
daa
ljmp
les
aaa
jbe
pop
adc
je
popa
test
incb
icebp
mov
ret
and
dec
repz
fldt
and
add
sub
add
jnp
fisubrs
std
iret
shlb
push
ret
clc
movsb
outsl
jge
add
in
gs
mov
call
fwait
les
in
xor
add
dec
hlt
imulb
sbb
lret
es
nop
inc
or
in
lret
lret
or
adc
fcmovnu
test
into
addb
clc
into
das
xchg
lods
stc
addr16
jle
dec
inc
fcmovnu
push
and
je
sub
cs
fists
imul
add
pop
jge
and
jcxz
aas
orb
sbb
jp
cltd
push
xchg
inc
pop
inc
fcomps
clc
dec
fcompl
jmp
shll
adc
lret
sahf
add
out
xchg
mov
dec
ds
mov
mov
xchg
jle
mov
cmp
ljmp
add
int
outsb
dec
ljmp
xchg
xchg
xorl
mov
mov
insb
test
scas
es
xor
movsb
enter
xchg
lahf
pop
xchg
orl
sub
dec
xor
add
in
add
icebp
pop
das
inc
addr16
pop
xlat
push
mov
push
les
pop
cmp
popf
jle
jle
fwait
adc
dec
fsubs
outsl
mov
push
ljmp
mov
scas
cmp
mov
push
xchg
xchg
testb
inc
arpl
bound
or
push
dec
shlb
xchg
ds
push
mov
aam
cmp
mov
call
sahf
add
add
pop
dec
xor
xlat
xor
xchg
add
push
pop
pusha
jmp
push
xor
fcompl
adc
xchg
inc
inc
xchg
mov
xchg
jl
xor
int
or
ss
sarb
jg
mov
notl
test
mov
push
je
lods
pushl
jle
push
aam
js
push
pop
cmpsb
mov
push
scas
pusha
and
int3
daa
shrb
sbb
mov
xchg
pop
xorb
ficompl
cmp
insl
int
xor
jge
add
lret
sub
cmp
je
jg
outsb
ds
sub
aad
or
adc
mov
mov
popa
push
pop
xchg
ret
push
out
lcall
mov
es
pop
push
jbe
scas
mov
jb
cmpl
aaa
sub
fsts
int3
dec
cmp
daa
into
mov
xchg
ret
es
cmp
out
xor
adcb
out
and
dec
mov
xchg
lock
cmc
jmp
hlt
inc
jnp
cmp
adc
xor
pop
mov
push
lods
test
in
cld
xchg
pop
cmp
sub
div
pushf
mov
sub
ret
push
movsl
pop
push
movl
jl
jo
add
add
lcall
mov
gs
into
lret
sub
add
pushf
adc
mov
lods
dec
rcrb
mov
mov
inc
ss
adcl
fdivr
xlat
sbb
daa
repz
push
push
sub
fs
xor
jb
xchg
fdivrp
ds
push
mov
sti
push
ficompl
insb
movl
jecxz
aas
xorb
cld
mov
pop
in
add
sbb
mov
push
into
imul
add
inc
xorl
xchg
sbb
push
dec
mov
loop
and
lods
push
mov
repz
icebp
enter
add
ljmp
dec
jge
pushf
mov
lsl
xor
add
jo
mov
mov
jmp
xchg
ss
and
inc
daa
jne
push
sbb
fmul
shl
clc
cwtl
mov
add
mov
aas
pop
xor
aam
fcmove
mov
push
inc
sbb
mov
mov
sahf
outsl
mov
add
cmp
out
mov
popf
xor
adc
out
fs
in
jns
lret
push
popf
in
mov
das
out
jns
mov
add
clc
cmp
frstor
scas
cmp
andl
arpl
and
daa
ds
lock
lret
mov
sbb
jg
enter
jg
pop
fildl
jno
lret
pushf
mov
movsl
push
mov
add
push
or
mov
or
aaa
mov
ret
cld
mov
out
push
jo
movsl
pop
xlat
xchg
xchg
loop
pop
inc
mov
ret
mov
jmp
xor
notb
lock
std
push
dec
xor
cltd
mov
pushf
cmpsb
fildll
testl
out
into
ret
leave
xor
push
gs
adc
shrl
cmp
je
mov
add
test
add
inc
fwait
test
cmp
xchg
xchg
mov
push
fnstsw
pusha
iret
out
int3
hlt
jbe
dec
xchg
jmp
jge
jmp
cmp
mov
stos
xchg
push
dec
lea
fmulp
icebp
cmp
mov
or
cmp
cmp
stc
xlat
sub
pop
mov
push
sub
xchg
daa
imul
xchg
jae
roll
fs
mov
cmc
cmp
jne
jb
in
pop
mov
jbe
adc
shrb
mov
jb
mov
add
std
xchg
inc
sbb
lret
pop
pop
mov
icebp
xor
pop
out
mov
aad
test
jge
pop
testl
and
xchg
xor
adc
cld
and
sub
ret
inc
mov
mov
in
add
pop
pusha
push
xor
dec
aaa
mov
movsb
xchg
lret
roll
fnstenv
mov
cmp
add
add
idivl
add
sub
add
cmpsl
pop
pop
movsl
inc
mov
push
in
mov
cld
sahf
repnz
jae
jmp
call
fistpll
jno
out
repnz
xchg
and
sub
xor
mov
cs
push
cltd
pop
je
popa
addr16
mov
push
fistl
xor
push
cld
in
push
sarl
dec
addr16
ret
cmp
pop
repnz
and
sub
inc
les
xor
sbb
inc
rcrl
pop
jge
test
xor
insl
adc
lret
and
and
xchg
popa
inc
lods
in
jno
or
push
xor
rcll
cltd
shlb
inc
fucomip
or
fsubs
push
mov
divl
jns
adc
fs
les
movsl
inc
jns
scas
or
jmp
adc
pop
movsl
test
fs
pop
sarl
jg
pop
insl
or
sbb
sti
sbb
mov
lods
xor
add
imul
dec
test
mov
fwait
cmp
sub
xor
or
xor
int
add
aad
rclb
add
out
add
stc
pop
lret
dec
je
pop
or
outsl
xchg
jae
mov
or
les
loopne
jbe
mov
or
popf
cmpsl
lea
fcompl
insl
xchg
gs
mov
mov
enter
aaa
dec
adc
popa
add
jmp
adc
mov
enter
ljmp
inc
xchg
jns
xchg
stos
cmp
add
hlt
mov
cwtl
xor
sub
mov
aad
daa
inc
jae
sub
arpl
or
mov
sbb
sub
jnp
nop
mov
add
fdiv
adc
push
inc
mov
sub
or
or
push
pop
pushl
mov
xchg
mov
push
lret
cmp
jne
add
lahf
add
pusha
sti
sbb
pusha
je
inc
imul
sub
imul
cwtl
push
lds
test
sbb
adc
int
pushl
out
xlat
rolb
cmpsl
std
je
andb
pop
mov
jmp
dec
jge
sbb
mov
cmp
jae
lods
xorl
sbb
push
sbb
out
jg
jbe
jge
jo
pushaw
add
and
jo
orl
dec
dec
jnp
mov
mov
jp
pusha
test
test
pushf
pop
cmp
stos
xchg
aas
mov
add
lds
pop
clc
and
cmp
push
xchg
and
popf
fisubs
mov
stos
fucomp
and
adc
cmpl
jl
arpl
sbb
shll
add
into
adc
ret
inc
and
cli
scas
push
cs
daa
mov
call
mov
cmp
add
sub
add
xchg
pop
mov
jb
hlt
stc
mov
jl
inc
inc
push
es
jmp
sarb
sbb
ss
mov
arpl
push
outsl
int3
mov
fldt
js
mov
push
and
aas
cmp
shrb
xchg
sub
or
xor
dec
push
loope
dec
mov
fdivrl
hlt
pop
fwait
push
or
inc
inc
adc
sbbl
dec
push
sahf
push
mov
jge
icebp
sti
push
sbb
jmp
push
lret
pusha
or
aas
pop
inc
movsb
pop
sbb
jno
or
pop
outsl
rcrb
xchg
arpl
sub
jno
or
gs
adc
mov
adc
push
sbb
xchg
adc
add
outsl
sub
or
and
fisubl
or
or
push
dec
xor
add
ret
movsl
xchg
push
lock
mov
clc
xchg
pop
mov
pushf
mov
or
inc
fadds
aam
inc
mov
test
sbb
or
outsl
rcrb
pop
xor
popf
add
pop
imul
mov
jp
inc
in
test
jns
loop
and
add
pop
outsb
sbb
enter
mov
repz
xchg
arpl
rcrl
orl
dec
fbstp
into
lock
push
lods
repnz
test
adc
sub
add
sti
hlt
movsl
mov
lcall
xor
cmpsb
cmp
pop
enter
cwtl
lods
sbbb
xchg
out
push
push
add
in
outsl
loopew
hlt
mov
mov
fs
loop
push
sarb
jne
inc
inc
jbe
jbe
je
pop
imul
jbe
fcoms
pop
mov
mov
shll
push
push
xor
sti
jnp
shl
or
mov
push
sbb
pop
gs
out
add
adc
xlat
ss
data16
in
jp
add
jbe
loopne
add
jnp
int3
call
stos
add
dec
adc
es
jbe
mov
inc
insb
shll
popa
push
cmp
aam
jmp
add
push
push
inc
popa
jge
xchg
dec
mov
sub
sti
mov
repnz
je
mov
cmc
fstl
xor
dec
push
out
ds
shrb
sbb
xchg
mov
sub
xor
enter
cwtl
cmp
lahf
push
sbb
inc
ljmp
outsl
push
xchg
popa
and
lret
outsb
js
addb
mov
dec
push
gs
jmp
push
out
inc
cmp
in
push
gs
in
outsb
iret
imul
pop
gs
cmp
adc
pop
lock
rorl
dec
imul
mov
add
mov
fsub
subl
push
push
xlat
xlat
push
aam
add
add
mov
sarb
fiadds
cld
lret
out
pop
lea
bound
stc
or
imull
fwait
xorl
test
insl
ret
push
rcl
push
int3
xchg
shll
int
ljmp
mov
sarl
xchg
jp
rcl
push
sbb
inc
in
and
adc
pop
jno
push
push
mov
stos
xlat
std
cmp
jecxz
je
lret
or
cli
sti
lahf
fiadds
clc
mov
mov
xlat
filds
sub
fisubl
jns
push
mov
leave
lock
mov
jl
mov
fistpl
inc
pop
bound
shrb
jmp
jo
outsb
rorb
pop
andb
jbe
insb
push
sbb
movsb
cli
insl
fneni(8087
je
shlb
and
mov
mov
xchg
adc
xchg
mov
repz
das
jae
dec
jmp
xchg
addr16
inc
rclb
shr
jb
jo
imul
or
inc
mov
out
pop
xlat
sbb
loope
pop
fcoml
mov
rclb
and
xchg
add
lret
cld
jo
aas
jge
ja
mov
arpl
xor
loop
jo
clc
addb
in
push
mov
adc
mov
cmp
push
fstpt
repnz
pop
adcb
dec
mov
outsl
movsl
and
lds
insl
pop
adc
dec
je
ret
xchg
cltd
adc
into
comiss
scas
shl
insl
cmpsb
xchg
push
mov
loopne
sar
imul
cli
jge
daa
out
inc
sub
cmc
insl
jb
xor
add
cmp
aas
hlt
stos
push
lock
pop
xlat
mov
out
pop
pop
fnstcw
push
push
clc
adc
mov
pusha
cmp
nop
mov
mov
xchg
sarl
addb
sub
arpl
out
cmpb
cmp
jg
sar
xor
mov
jnp
subl
cmpsb
mov
xchg
ffree
test
jns
jmp
mov
push
pop
clc
in
jb
xchg
xor
adc
popa
adc
jae
sbb
fwait
cmp
mov
push
xchg
loope
jp
addl
call
mov
mov
sbb
dec
test
rorb
inc
add
ss
push
aaa
xchg
jmp
mov
mov
dec
movsl
mov
in
in
adc
cwtl
cmp
js
sahf
and
mov
inc
stos
pop
mov
mov
mov
inc
in
cmp
enter
js
jne
sbb
or
dec
mov
fsts
outsb
xor
push
not
mov
fcmovne
jge
sarb
or
dec
and
movsb
sbb
xchg
mov
xlat
push
xor
lret
dec
loop
ss
lret
xor
into
repnz
dec
pop
lods
loop
xchg
or
mov
add
add
pop
sbb
cli
inc
cli
outsb
ljmp
jle
add
sub
add
divb
mov
xchg
pop
push
mov
bound
xlat
aad
mov
icebp
hlt
das
nopl
mov
push
sbbb
es
fadds
ret
adc
nop
in
lret
cwtl
loope
mov
lock
jno
decl
dec
inc
or
adc
test
ret
push
test
inc
jp
mov
push
mov
movsl
add
pop
out
sbbl
inc
loop
add
negl
xchg
sbb
rcr
mov
mov
xor
mov
push
jle
adc
xor
cli
cs
xchg
movsb
mov
jg
and
pop
push
out
and
fisttpll
xor
js
mov
ret
repnz
loop
and
push
inc
mov
mov
stos
push
test
xor
fmuls
stos
std
or
mov
xchg
add
ss
out
std
fdivrs
xor
sbb
call
or
lea
xchg
jecxz
jge
jbe
cmp
loopne
jae
fidivrl
inc
and
popa
mov
mov
xchg
ja
mov
loope
cmovae
mov
clc
xchg
sbbl
xor
sbb
repz
cli
add
pop
push
in
jne
jno
rcll
xor
aas
outsb
scas
ds
jno
sbb
arpl
jp
les
dec
mov
lds
jecxz
adc
not
adc
inc
jge
adc
lahf
rcl
and
push
push
push
fcompl
sub
pop
jle
pop
ss
sub
sub
cmpsl
add
sbb
in
push
cmp
xor
push
mov
lods
sub
sbb
sbbl
push
and
push
aam
xchg
rorl
cmp
jb
xchg
sahf
sub
xchg
adc
dec
pop
xchg
jbe
ds
inc
std
mov
mov
std
out
push
daa
iret
pushf
cmp
icebp
adc
push
sub
jae
cmpsl
fdivl
daa
out
into
out
sbb
rcl
cmp
fistps
inc
sti
mov
test
sbb
pop
mov
mov
xor
nop
lcall
adc
imul
inc
xchg
out
sbb
or
fsts
aam
adc
add
clc
inc
push
dec
stos
enter
dec
push
ja
mov
int
sub
or
arpl
sbb
call
aas
mov
int
xlat
pop
addr16
arpl
imul
push
jo
mov
aas
sub
lcall
stos
shl
fs
insl
call
push
cwtl
lds
jno
cmp
fsubrl
mov
fidivl
lds
ret
xchg
push
sti
mov
pop
movsl
test
loop
mov
repnz
aad
xor
add
mov
xlat
push
xlat
ja
out
ss
mov
stos
fiaddl
add
add
imul
jle
daa
ja
mov
and
push
add
sbb
shrl
adc
push
and
dec
and
test
or
ret
pusha
dec
addb
pop
pop
adc
mov
mov
xchg
cs
sbb
add
push
scas
daa
fiaddl
mov
dec
fsubr
inc
subb
sub
mov
xor
or
push
lods
movsb
mov
fsub
fdivs
mov
inc
lahf
add
add
dec
xchg
mov
popf
lahf
xchg
insb
fstl
addr16
xchg
jg
aas
xorl
push
jne
outsb
jge
cmp
sub
into
cmpsb
sub
push
js
shrl
lock
cld
pop
or
pop
repnz
lods
movsl
imul
jnp
popa
pop
add
jecxz
insb
push
xchg
insl
subl
scas
xlat
insl
add
fmulp
mov
mov
sub
loope
imul
pop
mov
test
lcall
jae
push
pop
mov
push
xor
cli
inc
lret
mov
add
scas
add
mov
xorb
mov
inc
and
add
jmp
in
fists
int3
mov
into
cmp
xchg
mov
aad
adc
repnz
sbb
cwtl
daa
cmpsl
cs
int3
divb
jg
addr16
scas
sub
arpl
lahf
and
or
loope
popa
fiadds
sahf
push
sti
adc
sub
mov
pusha
cmp
mov
ret
cmp
sbb
mov
incb
jl
lock
jge
sbb
loope
call
fdivl
xor
mov
fwait
add
dec
aas
pop
mov
add
je
xor
or
xor
xchg
mov
clc
imul
pop
rclb
rolb
movsl
sub
jnp
mov
ret
dec
xchg
out
insb
and
lock
add
mov
movsl
adc
fbld
cli
mov
xor
leave
notl
mov
lock
rcll
jo
mov
stc
clc
cmp
jmp
aas
test
insl
push
xlat
bound
or
stos
fnstsw
pusha
adc
pop
adc
adc
fsub
ficoml
xchg
fstl
stos
inc
push
lods
data16
sti
iret
repz
in
fsubrs
enter
mov
repz
jl
lods
imul
mov
mov
out
call
cs
sbb
ljmp
out
cmp
or
push
test
shlb
sti
xlat
sbb
mov
gs
nop
out
xor
lret
addr16
pop
dec
out
add
mov
adc
je
xor
or
ja
jge
scas
push
test
fbld
xor
pusha
cli
rcll
pushl
stos
xchg
sbb
fldl
add
add
xchg
adc
mov
das
fidivrl
imul
adc
dec
stos
pop
dec
adc
stos
mov
pop
cmp
imul
popf
adcl
test
push
gs
out
ljmp
dec
sahf
lock
sub
iret
pop
and
call
jp
test
push
mov
push
insl
inc
fcoml
loopne
in
mov
push
loope
sub
fmuls
fwait
dec
ret
call
lret
pop
push
iret
sbb
das
cltd
sbb
pop
scas
xor
mov
mov
daa
loop
nop
sbb
lret
in
movsb
ret
jp
aas
jo
jno
mov
sub
or
imul
jge
je
cmp
and
in
xor
mov
test
mov
pop
sbb
scas
js
iret
xchg
ret
fcoml
or
or
pop
xchg
addr16
mov
jae
mov
sbb
and
bnd
lods
or
xchg
data16
xor
mov
push
sbb
xchg
insl
add
les
mov
pop
out
jp
daa
xor
push
les
xchg
and
std
ret
inc
jmp
in
inc
xchg
ficompl
ret
int
mov
pop
lods
adc
pusha
xchg
push
test
jae
mov
pop
mov
pusha
push
cmpb
xchg
push
mov
or
dec
pushf
test
leave
mov
jmp
call
in
sbb
mov
ja
xchg
mov
sub
out
jp
or
add
mov
and
repz
jecxz
nop
nop
cmp
rorl
insb
js
data16
outsl
in
push
xor
or
fistpl
test
sub
jnp
xchg
mov
in
push
sub
mov
into
stos
mov
scas
scas
cmpsb
or
mov
jno
or
xor
and
in
xchg
cld
cmp
outsl
mov
out
xchg
jmp
lret
scas
mov
fld1
sub
scas
push
cmc
dec
mov
in
inc
lods
adc
pop
out
popa
or
and
aad
outsl
jle
imul
test
sbb
inc
jo
pushf
data16
scas
movsl
sbb
cmp
mov
cmp
jno
mov
iret
dec
jae
dec
xchg
mov
lahf
adc
mov
xchg
clc
loopne
into
lods
jo
loope
cmp
test
pushf
int
jnp
popa
sub
pop
test
ds
ret
pop
mov
xchg
add
test
mov
add
adc
ds
jecxz
add
cmc
enter
cmpb
jl
fstpt
fadds
mov
nop
je
xlat
mov
mov
pop
shlb
mov
imul
daa
pop
in
loope
nop
aas
movntq
repnz
adc
out
pusha
mov
nop
aad
adc
add
add
negb
out
lods
push
shlb
add
sub
add
xchg
pop
fisttps
inc
pop
aad
xor
and
push
mov
pushf
pop
jecxz
and
push
fldenv
pop
pop
out
push
and
add
push
lcall
or
je
shl
push
fyl2x
jne
mov
rclb
sub
jmp
stos
aam
push
pop
pop
and
pop
xchg
cltd
cmp
push
mov
out
ds
and
test
fisttpl
and
repz
jge
push
lret
xchg
loope
js
lret
inc
stos
js
test
inc
mov
int3
pop
fcmovnu
test
hlt
add
mov
jg
cld
jnp
cmp
clc
cmpb
hlt
sbb
mov
xchg
rcrb
inc
xor
clc
cltd
cmp
mov
mov
cli
or
jae
sbb
orb
and
jne
mov
dec
xchg
xor
test
sbb
or
lahf
ss
iret
outsb
aas
sub
cld
testl
add
pushf
or
loope
xchg
icebp
push
sbb
imulb
adc
pop
push
testb
testl
cwtl
out
push
ret
mov
cmp
ja
mov
lret
out
faddl
enter
or
mov
cmpsb
jne
xor
sar
dec
mov
out
push
xlat
dec
xchg
pop
push
test
mov
in
inc
jmp
add
cli
lahf
imul
mov
mov
dec
pop
and
scas
xlat
jl
jecxz
fs
subl
loope
stos
stos
cmpsl
movsb
xor
out
and
sbb
scas
push
pop
push
or
add
cs
popa
icebp
int
ret
inc
popf
mov
outsl
dec
loope
pop
pop
insl
cs
xchg
aas
stos
popa
jg
popa
push
out
xchg
sbb
daa
bt
fmul
insb
pop
imul
xor
mov
jg
aam
sti
shlb
push
pop
stc
adc
pusha
cmc
dec
stc
dec
inc
cmp
aaa
rorb
movsb
std
ret
sub
test
lods
imul
pop
stc
inc
test
std
lock
jge
push
addb
dec
out
incb
or
leave
lret
lods
mov
push
push
addr16
jecxz
mov
iret
pop
mov
in
cmc
les
sub
or
data16
mov
push
pop
stos
and
test
sbb
out
lret
lahf
fisubl
sahf
xor
add
repnz
and
clc
fidivl
rolb
jl
mov
das
mov
enter
enter
jl
data16
outsl
mov
mov
lahf
adc
rorb
xchg
mov
clc
nop
inc
fdivl
inc
sbb
pop
xchg
aam
xor
adcb
pop
cmp
loope
mov
div
aaa
mov
aaa
lods
sti
adc
dec
ror
xchg
push
push
jnp
fisubs
mov
add
add
jp
ss
aas
sub
gs
xchg
dec
lds
adc
call
jp
add
and
scas
cld
adc
cmp
cmp
cmp
mov
inc
add
cmp
outsl
ljmp
mov
inc
and
add
xchg
nop
xchg
xor
cltd
fs
mov
mov
push
push
out
outsb
in
mov
xchg
or
mov
into
lods
mov
daa
pop
push
add
and
daa
es
mov
shlb
inc
arpl
jecxz
and
mov
sub
mov
stc
inc
sbb
or
or
jle
lcall
sub
test
or
mov
dec
sub
push
stos
xor
daa
daa
popa
push
jns
jl
out
inc
cmc
outsl
out
and
dec
cmpsl
push
xor
enter
into
ror
inc
pop
into
add
xlat
xchg
mov
ret
sbbl
into
inc
push
stos
add
jge
inc
pop
xor
fadds
icebp
outsb
hlt
mov
xchg
repz
outsb
fimull
push
push
shl
pop
rorb
lds
loope
or
mov
push
into
mov
lcall
loopne
sbb
cmp
pop
repnz
jno
lret
je
jb
mov
fdivrs
outsb
jb
lcall
mov
add
xchg
repnz
dec
cwtl
or
dec
pop
aaa
inc
pop
push
ret
mov
pop
mov
adcl
outsl
outsb
add
cltd
into
add
lods
xchg
dec
clc
or
fdivs
or
cmp
stc
dec
stos
xchg
lcall
mov
and
push
sub
mov
lret
mov
and
lods
dec
cmpsl
inc
inc
ja
addr16
push
es
fdivrl
rorl
jg
fcmovu
out
lret
out
mov
movsl
int3
xor
idivl
out
outsb
shl
cmpsl
inc
shll
jns
sbb
sbb
pop
rorl
push
dec
xor
inc
iret
int
push
xchg
and
pop
push
jmp
or
out
or
jmp
add
jl
clc
mov
mov
lret
clc
add
cmp
std
mov
or
sbb
push
js
movsl
or
mov
neg
test
mov
push
xlat
mov
or
sub
sbb
into
and
jmp
icebp
ret
push
xchg
jl
mov
add
test
mov
add
into
mov
add
test
mov
subl
fs
jecxz
xchg
jae
or
fistpl
aaa
cmp
mov
adc
shlb
jo
fnstsw
mov
mov
stos
xor
ja
stc
jae
arpl
ss
lods
xor
lahf
push
jecxz
jecxz
cltd
enter
mov
push
outsb
ja
test
pop
out
add
add
in
mov
and
scas
push
jge
or
and
mov
jbe
add
movsl
cmp
and
mov
in
sahf
in
ret
filds
cli
scas
adc
iret
push
sbb
add
mov
hlt
addb
testl
hlt
mov
aaa
and
dec
out
arpl
xor
jnp
xchg
movsb
and
inc
repnz
icebp
stos
adc
mov
push
mov
sbb
add
ljmp
insb
lock
xor
sub
dec
mov
adc
xchg
imul
sbb
les
dec
inc
repz
adc
sub
adc
loop
imul
jle
pop
enter
adc
rorb
inc
mov
add
shlb
rcrl
cmc
shr
jo
jo
xchg
pop
lock
xchg
test
push
lea
and
cs
mulb
adc
mov
pop
sub
scas
js
dec
xor
outsl
shl
mov
imul
pop
and
lods
sub
mov
sbb
jecxz
dec
jno
sbb
mov
fst
pop
test
mov
jne
nop
ds
pop
jle
mov
outsb
sbb
xchg
dec
out
and
scas
ja
ret
or
pop
into
popl
mov
dec
pop
cmpsl
pop
push
and
inc
push
addl
in
cmp
inc
cwtl
setg
out
rcll
shl
push
fnstcw
pop
cmpb
mov
xchg
jo
jecxz
xor
loopne
push
lods
fdiv
or
dec
or
inc
cmp
mov
rol
loope
pop
rcrl
mov
es
adc
nop
jo
bound
in
jnp
push
push
xchg
lock
shrl
bnd
and
jb
pop
dec
xchg
or
in
push
fsubl
lds
jbe
aad
bound
add
dec
mov
scas
aaa
add
xor
mov
sub
push
lret
mov
or
add
call
mov
imul
outsb
ficompl
stos
jl
or
in
hlt
and
pop
xor
pop
cmp
cmp
int3
loop
mov
xchg
xchg
mov
push
mov
fstps
lahf
pop
fsubl
xchg
jecxz
push
fs
jbe
pop
clc
push
ficompl
dec
jle
cmp
int3
cltd
imul
mov
mov
jge
mov
add
lahf
jne
sbb
ficoml
adc
jg
inc
ret
pop
push
cltd
outsl
imul
pop
push
adc
push
out
aam
mov
pop
xchg
jb
stos
adcl
xchg
sbb
add
adc
pop
xor
iret
sarl
sbb
inc
add
leave
outsb
mov
sbb
pop
insb
jge
test
into
std
xor
stc
pop
mov
add
add
sbb
jge
int3
outsb
xchg
jecxz
cmc
push
xchg
add
sub
add
mov
mov
cltd
and
jmp
loopne
stc
aam
stos
into
ror
or
push
lcall
inc
andl
loopne
popa
mov
cmpsl
popa
aaa
aas
jle
sbb
ret
std
add
jp
sub
cmp
inc
adc
jge
sub
stos
dec
roll
stos
shl
and
daa
int3
mov
ds
es
sbb
scas
mov
inc
mov
sti
loope
xchg
cmpsb
inc
or
icebp
mov
je
ss
cmpsb
cmp
xor
das
push
lret
xchg
push
bound
dec
sti
pop
push
dec
push
das
lahf
jecxz
inc
push
int3
divb
xor
lds
xchg
test
hlt
mov
push
into
inc
cmp
lods
orl
shrl
outsb
lcall
incb
jmp
insb
push
xor
sub
sbb
mov
mov
ljmp
movsl
cmp
adc
repz
lret
inc
rcl
cmpsl
outsl
popl
xlat
mov
dec
test
addb
mov
xchg
mov
enter
add
lcall
seta
inc
or
arpl
inc
mov
pop
xor
xorb
mov
pop
dec
sbbl
add
lods
add
mov
push
fmuls
fidivl
add
add
fsubrs
push
push
scas
cwtl
or
push
push
mov
sbb
roll
lock
dec
xchg
push
jb
dec
sub
and
rcll
cwtl
jae
lcall
mov
mov
and
and
pushf
mov
iret
je
into
repnz
shl
mov
lock
int
add
add
test
loop
aad
aam
cmpsb
jbe
lret
repz
cli
cltd
jmp
cltd
lret
xchg
cltd
std
aam
daa
imul
xor
negl
fwait
je
cmpsl
cmp
mov
fwait
xlat
xor
bound
dec
popf
jno
cs
aam
fdivp
loopne
test
test
lret
adc
cmc
nop
inc
pop
aam
ljmp
and
add
mov
out
icebp
sub
test
pushf
mov
pop
adc
pop
aas
xchg
iret
in
cld
xor
pusha
adc
fwait
sub
push
and
lds
adc
outsb
lret
inc
fidivrs
aam
cld
int3
xchg
call
imul
out
xchg
into
pop
xchg
cmp
pop
aas
out
fwait
sub
scas
fldcw
jle
or
mov
sub
adcl
jmp
rorl
sbb
cwtl
sbb
out
aaa
movsb
mov
fldenv
mov
jmp
add
sbb
mov
jle
aaa
aam
ljmp
mov
je
adc
xchg
push
push
adc
push
jb
add
add
pop
add
inc
fcmovnb
fstpl
sub
fbstp
add
add
lods
xor
sbb
xchg
ja
loope
mov
cmpsl
cmc
xor
fimuls
inc
push
lcall
push
adc
pop
fcomp
jns
fildl
lret
fisttpll
add
in
cmp
pop
test
dec
dec
fbld
fstpl
lods
test
repz
mov
dec
shll
lock
xor
xlat
dec
inc
jg
and
xlat
sub
mov
push
fwait
iret
mov
push
aas
repnz
in
cs
lods
jne
adc
jbe
outsb
fs
add
repnz
addr16
enter
mov
sub
aam
stos
pushf
mov
pop
jbe
inc
fildll
fstpl
daa
bound
nop
cld
and
sti
or
repz
cli
shlb
out
mov
outsb
les
pop
stos
mov
push
push
dec
ljmp
std
xchg
pusha
mov
outsb
ja
dec
xchg
push
fsubrl
add
mov
lods
icebp
cwtl
add
mov
mov
sub
rcll
fdivrl
pop
xchg
addb
ds
stc
repz
jb
stos
cmp
and
stos
jmp
xchg
ret
fwait
sbb
cltd
inc
test
out
mov
dec
jmp
pop
adc
bound
shlb
daa
sbb
dec
sbb
jnp
stc
mov
cmp
hlt
mov
cmp
pop
mov
outsb
sub
loop
loopne,pt
fwait
pop
imul
sbb
pop
mov
call
jno
pop
imul
jmp
cmp
mov
bnd
repnz
pushf
jge
adc
cmp
hlt
out
xchg
and
cmc
push
mov
mov
jnp
cmp
jne
in
adc
shlb
xor
push
lods
mov
sarb
aad
push
sbb
pop
or
push
mov
adc
in
cld
leave
stc
out
mov
jmp
sub
mov
sub
incl
inc
cmp
push
push
fldenv
jae
rclb
lea
call
push
xchg
jle
sbb
mov
and
mov
in
lods
andl
jnp
sbb
mov
mov
loopne
mov
pop
inc
pop
inc
mov
bound
cmp
or
cmp
xchg
into
mov
pop
mov
jns
and
cmp
pop
jl
sub
push
sarb
lret
and
inc
mov
or
movsb
push
ljmp
jbe
jecxz
int3
and
and
das
aas
xchg
dec
rcll
pop
sub
mov
push
ljmp
push
movsl
cs
or
xchg
mov
mov
sbb
xchg
pop
lds
add
movsb
das
xchg
insl
scas
push
or
shll
test
jmp
shlb
sbb
pushf
cli
mov
scas
aad
aad
out
stc
fdivp
add
sub
add
push
mov
jns
lret
and
pop
sbb
add
xchg
les
push
movsl
jecxz
in
lods
xor
sub
xor
stos
ss
test
jge
cld
dec
shrb
jo
mov
jae
jmp
ja
jno
into
jb
push
mov
push
push
mov
imul
mov
cwtl
testb
lock
imul
and
jmp
push
and
std
shrb
fsub
sub
loopne
out
inc
push
cmpsl
push
movsb
sub
push
cmp
jo
les
mov
out
stc
cmp
fisttpl
lea
fisubs
mov
flds
pop
out
icebp
jg
addr16
mov
ljmp
mov
js
mov
int
jae
xchg
call
jmp
insl
enter
stos
add
dec
je
scas
push
mov
push
setbe
add
rcl
into
jae
outsw
in
repz
sub
push
xor
and
bound
hlt
sarb
outsl
sahf
jns
ret
add
dec
in
and
ss
mov
adc
inc
imul
test
js
lret
shlb
pop
pusha
leave
in
sahf
mov
xchg
or
and
push
dec
das
jns
dec
xchg
icebp
jecxz
popa
stc
shrl
adc
inc
dec
adc
jl
xorb
lock
fdivl
pop
cmp
xchg
fildll
in
or
pop
out
fnstsw
repnz
sbbb
mov
jl
jb
jp
sub
xchg
mov
pop
mov
cmp
aas
xchg
and
xor
inc
addb
mov
adcb
ret
push
mov
fldt
das
fwait
jns
push
mov
xor
outsl
addb
jmp
xchg
pop
loop
sub
ret
call
pop
repnz
add
in
addb
dec
mov
adc
dec
add
std
lds
inc
std
xchg
in
adc
inc
repz
pop
jp
loope,pt
adcb
jnp
xor
mov
vpaddq
test
cltd
mov
in
mov
cmpsl
xchg
inc
sbb
pushf
stc
imul
fbld
mov
lods
outsb
mov
push
dec
je
xor
sbb
push
push
push
mov
cmp
arpl
mov
dec
dec
mov
pop
xlat
imul
xchg
and
dec
mov
lods
testl
inc
push
je
add
sbb
mov
and
mov
or
xlat
in
or
icebp
lock
movsb
mov
mov
pop
inc
ret
shrb
pop
and
ljmp
gs
call
test
jle
adc
pop
sub
mov
sahf
outsb
stc
sbb
inc
mov
push
gs
add
lcall
bound
ret
hlt
add
sub
add
mov
cs
jle
cvtpi2ps
adc
mov
loop
sbb
sub
push
mov
dec
mov
mov
sub
push
jne
fdivl
imul
cmp
jle
mov
sub
sub
nop
int
jmp
negl
roll
mov
fst
clc
mov
aaa
loopne
adc
leave
in
insl
mov
popf
es
sbb
pop
lock
shrb
or
cmpb
mov
lcall
sti
xor
pushf
inc
lret
filds
or
dec
insl
inc
imul
iret
dec
sub
les
inc
fdivp
xor
mov
pop
mov
lahf
cmp
add
outsl
out
mov
pop
jl
pusha
sbb
rclb
cwtl
mov
add
dec
scas
mov
jmp
stos
xor
push
push
cmpsb
fisubl
fbld
inc
fnstenv
orb
adc
cmp
pop
cmp
aaa
inc
por
push
mov
repnz
fisttpll
in
int
and
test
imul
ret
sub
adcb
or
fstps
push
insb
loopne
cmc
push
push
testb
fsubp
ljmp
and
adc
jne
mov
add
in
inc
xor
sarl
std
stc
mov
or
mov
iret
xor
sti
ret
addr16
fucomip
stos
or
int
popa
lret
rol
dec
sbb
scas
leave
clc
aam
mov
cmpsl
jp
lret
add
mov
add
in
test
lds
sbb
xchg
lds
push
and
call
test
cwtl
or
aaa
mov
mov
inc
xchg
mov
in
dec
out
mov
xchg
jp
push
jecxz
pop
test
xchg
test
push
test
lahf
vmovdqu
pop
lahf
xor
jmp
pop
and
inc
cs
int3
and
in
in
mov
pop
int
xchg
leave
clc
mov
dec
mov
fcmove
nop
adc
mov
sub
or
cld
jge
movq
fadd
dec
fcoml
push
test
repnz
lea
outsl
mov
adc
pop
sbb
push
js
sub
inc
ficomps
sbb
jb
repnz
inc
scas
push
lea
and
mov
sub
and
faddl
mov
dec
mov
xchg
xchg
leave
scas
iret
stos
pop
pop
mov
outsb
xor
pop
cmp
pop
neg
imul
push
js
jecxz
mov
dec
jg
in
mov
inc
adc
cmp
insl
jge
and
adcl
shll
lret
rcll
js
xchg
loope
xor
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
or
add
sub
add
and
lds
je
sub
sti
xchg
adc
outsl
xorb
and
movsb
mov
mov
call
fnsave
out
xchg
inc
in
and
push
mov
movsl
loope
add
stos
mov
mov
cmpl
ror
in
xchg
ret
ja
xorb
xor
lcall
cs
std
ss
add
adc
sarb
dec
testl
gs
ss
insb
pop
icebp
enter
loope
ret
out
scas
inc
mov
mov
cmp
aas
test
das
xor
mov
push
pop
gs
sub
sahf
enter
cltd
rclb
push
and
xor
add
js
jmp
mov
mov
mov
aam
fisubs
and
lods
cmpsl
push
stos
dec
lret
cmp
pop
push
mov
push
push
lods
imul
adc
jae
sbb
cmc
and
lahf
jge
iret
pop
or
and
mov
add
inc
shrb
dec
ret
loopne,pt
dec
jmp
ja
xchg
cmp
cmp
test
in
dec
push
in
popa
mov
imul
jnp
mov
xor
cmp
stc
push
stos
sbb
in
add
popa
gs
into
dec
push
jmp
lret
ret
aaa
mov
xor
mov
outsb
jmp
sbb
jl
push
dec
add
fsts
xchg
js
add
push
in
add
lods
push
lahf
repz
cwtl
pop
xchg
sbb
pop
pop
icebp
rsm
decb
mov
cli
pop
ja
dec
bnd
hlt
mov
adc
sub
jns
icebp
pop
jne
push
xchg
xchg
mov
ljmp
out
pushf
push
pop
push
cld
cli
enter
mov
jnp
xor
jb
loopne
or
jge
or
inc
cmp
xor
call
enter
jge
popl
clc
and
iret
add
stos
ret
pop
andl
push
out
mov
lcall
fnstcw
sbb
ret
push
pushf
scas
mov
cli
mov
fistpl
stos
mov
xchg
pop
loopne
mov
fsubl
mov
lahf
orl
mov
nop
inc
dec
bound
mov
int
lahf
mov
cmp
insb
push
jp
jmp
and
cld
pop
iret
or
bound
sbbb
mov
jge
mov
cmp
push
dec
stos
fidivs
fcomp
aad
ffreep
pop
and
or
inc
notb
popa
pop
hlt
jle
cmp
cltd
shrl
addb
scas
lods
loope
mov
out
push
movsb
jge
push
mov
icebp
daa
lds
in
add
iret
cld
add
dec
in
mov
les
std
cmp
stc
int
xor
imul
in
cli
add
sub
add
add
arpl
jp
scas
or
daa
lahf
pusha
imul
decb
rorb
jmp
push
in
fsubrl
mov
mov
addb
jae
inc
js
inc
loopne
iret
pop
fisttps
out
sahf
mov
ja
and
push
out
out
xor
sbb
out
jne
ds
xchg
sub
mov
in
pop
mov
mov
sub
mov
mov
xorb
or
dec
arpl
ss
adc
push
lods
fs
push
pushf
jle
and
xchg
js
les
mov
bndldx
in
lods
repnz
cltd
test
or
xchg
and
cltd
mov
ret
jb
or
adc
aaa
mov
loope
push
pop
nop
lods
cmp
int3
aas
subb
aad
ret
mov
jb
xchg
mov
jb
ss
les
test
cmpsl
dec
sub
push
mov
mov
sbb
dec
jmp
jle
shrl
dec
cmp
jno
mov
pop
or
adc
mov
js
xchg
outsb
xchg
pop
ret
or
out
add
and
ss
int3
aam
lods
dec
shrb
out
jmp
jnp
imul
clc
xchg
xlat
sub
dec
inc
xchg
mov
inc
mov
sub
dec
inc
mov
popf
xlat
imul
cmp
fidivl
imul
or
int3
movsl
cmp
into
icebp
loopne,pt
jnp
jne
movntps
popl
mov
xchg
cmpsb
loope
cli
cmpsb
jne
pop
mov
adc
test
mov
popa
mov
in
popf
mov
pop
and
mov
pop
sbb
mov
mov
out
call
or
mov
push
test
xor
jl
mov
arpl
outsl
xor
and
into
shrl
rcrl
pusha
or
bound
mov
ja
mov
dec
js
mov
imul
mov
sbb
cmp
mov
fld
cmp
push
pop
notl
mov
leave
jne
jecxz
fisttpll
mov
andl
jecxz
adc
ucomiss
lds
push
cmp
jle
fwait
push
sub
bound
adc
mov
loope
shrb
adc
dec
movsb
mov
or
lea
stos
adc
jno
jl
mov
xchg
xorl
clc
mov
or
mov
jge
jns
lcall
mov
mov
leave
inc
test
mov
mov
cld
add
out
adc
test
mov
xchg
sbb
sub
sbb
insb
popf
mov
in
ffree
pop
hlt
out
jb
pop
xor
inc
addr16
divl
gs
mov
test
cmp
mov
int
std
add
sbb
pop
mov
outsl
jae
mov
test
jle
mov
sbb
