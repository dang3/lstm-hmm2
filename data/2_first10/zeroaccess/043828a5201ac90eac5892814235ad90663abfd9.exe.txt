push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
xor
data16
push
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
mov
xchg
pop
lods
ljmp
in
ja
jp
imul
inc
fsubrs
mov
loop
xor
dec
test
enter
aas
dec
or
stc
addr16
and
sub
inc
and
sbb
addr16
mov
dec
out
daa
or
sti
sub
xchg
cs
sti
push
in
xlat
mov
adc
jbe
jbe
and
xor
lock
notl
sbb
test
add
inc
mov
push
dec
push
push
push
pusha
clc
cmp
jg
push
lret
mov
inc
lahf
stos
jo
clc
inc
pop
inc
out
shrl
xchg
addb
pushl
inc
fwait
or
bnd
std
insl
hlt
cmp
shrb
scas
push
subl
jmp
mov
pushl
inc
or
bound
out
mov
xor
fwait
shl
je
xchg
and
ja
out
push
ja
lret
jns
in
jbe
ret
hlt
out
cmp
cli
out
fldenv
imul
xor
rcrl
dec
or
lds
mov
movb
pop
or
or
jl
mov
ljmp
inc
lds
cmp
adc
hlt
jae
jecxz
jl
icebp
scas
inc
push
cmpsl
lods
and
sub
mov
cltd
fildl
mov
mov
push
lahf
loope
icebp
mov
scas
ss
fsub
jne
cmc
mov
cmp
add
sahf
jbe
test
les
lahf
int3
outsb
jp
call
addb
xchg
adc
push
rol
and
and
jnp
dec
call
fwait
cmp
aas
pop
pusha
sahf
insb
ret
cltd
sar
inc
cmp
fs
and
jns
push
out
popf
mov
inc
push
sub
js
push
jp
lcall
dec
dec
mov
out
push
add
outsb
and
adc
xor
movsb
int
jbe
sub
cmpsb
ss
xchg
into
inc
xor
xchg
mov
mov
fisttpl
jge
push
not
inc
jno
adc
jp
xor
pusha
int
das
or
mov
push
push
sub
pop
icebp
jns
add
mov
add
fcom
or
add
sub
scas
sar
repz
inc
mov
xchg
pop
fdivr
adc
out
mov
adc
cmp
mov
pop
adc
mov
dec
sbb
imul
in
dec
iret
or
ss
mov
cli
cli
mov
cmpsb
daa
sub
inc
loopne
xchg
jo
into
mov
repnz
shlb
lods
push
hlt
jecxz
and
mov
xlat
inc
xchg
leave
outsl
adc
and
add
inc
jnp
cmp
mov
fadd
or
jp
dec
mov
sbb
inc
cmp
add
out
lods
nop
mov
fnsave
mov
ds
mov
loope
add
adc
or
bound
adc
mov
mov
addr16
cmp
out
loopne
jecxz
mov
jo
inc
sbb
add
and
cmp
out
mov
loope
adc
jge
and
out
imul
pop
scas
popa
je
add
rorl
dec
push
push
dec
xor
mov
xchg
cltd
call
popa
loop
sarb
aad
cwtl
xchg
inc
adc
repnz
lret
popa
stos
mov
fcmovnbe
leave
jbe
and
imul
in
lcall
pop
sub
mov
cmp
mov
xlat
xlat
mov
push
fs
fmuls
daa
imul
aad
mov
pop
dec
mov
lret
pop
stc
scas
fst
shrl
lret
inc
sbb
inc
fsubrl
sub
aaa
mov
mov
xor
and
or
inc
dec
insl
cwtl
mov
cmpb
fisubs
jecxz
mov
mov
adc
cmp
mov
mov
call
jbe
xor
dec
cld
imul
xorl
mov
pop
pusha
mov
loope
pop
test
imul
call
xchg
dec
add
push
pop
inc
in
mov
xor
test
je
mov
shl
pop
mov
outsl
insb
mov
mov
jmp
rcrb
fsubl
jl
aas
pop
fwait
cmpsl
divb
sub
mov
dec
add
sub
imul
orl
xor
mov
and
jbe
insb
add
popa
mov
and
xor
fstps
dec
inc
test
jne
adc
inc
nop
cmpsl
sahf
add
and
adc
aam
sub
ret
push
adc
xor
xor
pop
data16
pushf
xor
ret
lahf
aam
sbb
inc
out
mov
stos
cltd
in
test
pop
or
dec
jle
push
movl
lock
or
inc
cmpb
scas
xchg
in
xchg
add
ljmp
mov
sub
mov
cmc
nop
adc
pop
adc
sub
inc
and
imul
inc
imul
pop
ds
outsl
fdivl
cmp
arpl
xor
cmp
test
subl
mov
pop
in
in
ret
jp
stc
dec
pop
push
push
mov
insl
push
mov
sahf
or
mov
xor
pop
add
push
pop
ljmp
fwait
in
mov
icebp
pop
js
pop
mov
fmull
negb
cltd
pop
add
sbb
xchg
pop
push
das
pop
in
fcomps
jmp
mov
pop
jle
movsl
mov
fimuls
push
pop
lret
shrb
push
adc
hlt
pop
cmp
rcl
mov
enter
pop
in
xchg
mov
push
cmpsl
cmp
jg
mov
leave
xchg
out
popa
scas
push
aam
push
mov
mov
pop
add
shll
pop
orb
in
push
lret
jbe
xlat
adc
push
cmp
jno
add
mov
mov
jle
shll
test
cmc
push
lcall
sahf
inc
cmp
test
inc
sub
int3
mull
push
cmp
push
cmp
sbb
sti
outsb
xor
into
dec
jmp
cltd
sbb
popa
or
aad
push
sub
add
mov
lock
das
ret
cmp
mov
lods
outsb
cmp
sbb
mov
jbe
adc
jne
mov
cltd
mov
xchg
inc
xchg
mov
pop
das
rorl
add
clc
adc
lcall
or
jno
pop
stos
jge
cli
vorps
and
pop
loop
into
or
in
into
cmc
scas
jge
xchg
mov
fnsave
enter
add
pop
cmp
out
in
mov
test
sub
inc
dec
icebp
dec
rcrl
xor
sar
or
mov
xchg
adc
mov
sahf
inc
idivl
mov
loopne
iret
dec
mov
test
mov
xchg
mov
xchg
sar
mov
sbb
lahf
bound
into
stos
shl
addr16
mov
mov
mov
inc
orb
fucomp
mov
popa
in
je
mov
cmp
ljmp
add
pop
dec
xor
bound
mov
mov
mov
dec
dec
jl
dec
add
push
cmp
and
inc
jno
push
mov
dec
sbb
in
add
dec
and
adc
inc
push
lahf
loop
sub
xor
jne
add
fwait
js
adc
mov
lods
stos
mov
les
or
orb
js
sbb
into
test
add
xor
adc
sub
cmc
cmp
jge
je
sub
stos
adc
mov
pop
movsb
adc
sbb
cmp
push
cld
dec
cs
mov
add
jne
lcall
mov
lahf
mov
popa
cmp
jbe
pop
add
sahf
std
mov
and
ficomps
jl
rcrl
pop
call
fwait
insb
mov
into
iret
movsl
outsb
test
cmp
inc
push
stos
hlt
in
push
loopne
fisttpl
icebp
mov
clc
insb
push
out
jg
loope,pt
ficoml
xchg
cmp
jecxz
std
out
jnp
leave
ja
xor
xchg
push
push
aas
fdivrs
inc
fistps
loop
jnp
push
das
out
pop
cltd
xchg
and
and
out
cmp
arpl
push
mov
lock
pop
sub
lret
push
add
rcrl
pop
pop
or
cmp
mov
sub
xchg
adc
lods
cmp
rolb
lds
adcb
loope
pop
imul
add
mov
jb
lret
adc
xor
mov
enter
or
cmpsb
nop
mov
pop
in
mov
shrb
pop
and
mov
xor
jae
iret
mov
adc
rol
mov
push
call
ret
pop
and
filds
adcb
xlat
xchg
cmp
mov
sti
cmpsb
jmp
into
xchg
fwait
jecxz
adc
xor
test
inc
ret
call
ljmp
cwtl
fnsave
mov
dec
and
inc
jo
sarb
push
int
lods
aas
mov
cmpl
push
lock
lea
adc
add
cmp
cwtl
filds
shrb
sbb
jmp
mov
int3
cmp
sbb
clc
mov
push
sbb
cld
push
pop
pop
mov
test
jg,pt
sub
jae
or
jg
cmp
ret
xor
and
dec
inc
inc
mov
stc
ja
sub
jne
push
mov
insb
imul
daa
cmp
push
std
js
adc
sbb
push
push
inc
int3
dec
mov
sahf
xor
xchg
dec
fcmove
hlt
fiaddl
aaa
push
and
incl
gs
lods
jmp
test
stc
lods
cmpb
movsb
dec
adc
clc
lods
and
pop
xchg
adc
fidivs
add
mov
pop
mov
lret
and
or
push
out
fs
clc
jecxz
js
sub
js
cmp
movsb
dec
rclb
dec
jg
cmp
jno
hlt
mov
lods
or
push
lret
or
jno
rcrl
mov
xorl
inc
inc
jbe
fidivrs
lea
or
and
and
mov
mov
xorb
push
enter
push
call
pop
sub
std
and
jmp
ds
sub
dec
push
leave
je
jno
cmp
mov
xchg
pop
cmp
dec
imul
sbb
cmp
ds
cli
out
xchg
adc
sbb
push
sbb
xlat
or
mov
int
test
sub
ficoms
mov
mov
scas
stos
push
dec
and
jg
or
push
pop
inc
and
adc
jl
push
fbstp
iret
push
jmp
pmulhuw
clc
shrb
dec
pusha
add
nop
in
sub
jg
jb
mov
mov
ficoml
ss
loopne
enter
mov
popf
inc
ss
repz
push
push
scas
or
sarl
push
xor
scas
jae
dec
vpcomq
clc
pop
mov
pop
cmpb
sub
loopne
lods
xchg
sbb
mov
jb
adc
and
cld
sbb
push
cmc
test
js
rcll
arpl
andl
mov
or
jae
mov
xchg
add
movsl
sbb
in
pop
out
sub
push
js
sub
jno
sub
cmp
add
mov
jno
dec
les
insl
cmp
test
fdivs
lods
pop
push
mov
jb
addl
mov
inc
jecxz
cmpl
adc
js
sbb
and
movsb
xchg
ret
adc
mov
and
scas
mov
repnz
in
mov
es
out
ret
lock
mov
or
jp
sahf
or
sub
sbb
xchg
dec
iret
fldcw
or
mov
leave
daa
data16
xor
arpl
test
xchg
outsb
int
xlat
dec
mov
aas
dec
call
std
ds
jp
inc
fstl
xchg
inc
std
das
and
cmovno
gs
outsl
dec
lock
insb
xchg
xor
jb
in
jb
daa
cmp
pop
pop
mov
sub
es
pop
sub
xchg
jne
adc
sbb
xchg
dec
push
mov
sub
xor
int
cmp
push
mov
xchg
out
in
push
stos
bound
mov
adc
inc
cmp
push
xor
mov
adc
shrb
mov
xor
mov
outsb
std
stos
adc
ret
and
fmuls
inc
bound
and
fadds
adc
subl
mov
cltd
add
pop
or
push
adc
test
xor
xchg
cmpsl
or
std
insl
lock
jmp
adc
adc
or
test
rorb
mov
sbb
pop
xor
jnp
cwtl
stos
mov
push
jo
push
pushf
mov
mov
jge
aaa
je
and
cmpsl
das
jb
push
aad
shr
mov
mov
jbe
xchg
icebp
popa
jecxz
test
cmpl
mov
aam
or
dec
xchg
iret
clc
xor
dec
cli
mov
aad
pop
into
jecxz
loope
push
icebp
xchg
pop
fstps
mov
cmpsl
gs
dec
jp
stc
mov
mov
hlt
shrl
mov
xor
and
push
clc
hlt
outsl
push
pop
cvttps2pi
aaa
push
lcall
lods
mov
daa
cmpsl
add
dec
movsb
mov
push
mov
in
or
cmp
cmp
sbb
dec
mov
popf
mov
xor
call
adc
mov
dec
xchg
adc
pusha
inc
mov
repz
add
test
xlat
or
jp
pop
or
mov
ss
mov
decb
in
xor
inc
les
sarb
cmp
jbe
adcl
out
adc
aas
insl
shrl
nop
push
mov
test
push
jl
loope
mov
int3
xchg
pop
data16
daa
xchg
or
ficoms
outsl
hlt
sub
scas
jmp
int
cmpsb
loop
cs
das
subb
lods
test
mov
mov
add
xchg
js
xchg
sub
sbb
or
jbe
sbb
rcr
in
imul
mov
mov
out
lods
and
movsl
das
or
in
pop
xor
push
enter
dec
lcall
xor
decb
jle
sbb
mov
leave
leave
scas
adc
rclb
in
insb
das
push
popf
push
daa
mov
test
ss
xor
dec
push
push
push
inc
in
ss
inc
pop
shll
sbb
roll
adc
cmc
cmp
int3
loopne
test
cmp
adc
sub
cmp
mov
xchg
cmpsb
ret
mov
pop
ss
add
leave
insb
dec
xor
arpl
push
mov
nop
in
pop
dec
push
daa
mov
push
in
dec
dec
xchg
ljmp
adc
arpl
mov
jle
frstor
lock
push
pop
insl
in
inc
stos
sbb
mov
dec
jecxz
or
fsub
call
or
jg
sarb
aas
mov
pushf
clc
jo
lret
popa
add
adc
pop
dec
inc
jg
ffreep
cli
pop
dec
xchg
jne
xchg
pop
fwait
and
jge
pop
push
pop
jb
jbe
fldcw
adc
or
dec
adc
stos
fidivs
mov
shrb
mov
cli
sbb
enter
add
lods
inc
mov
ret
mov
sahf
aam
sbb
sub
faddl
cltd
push
inc
xor
lea
cmp
jbe
lods
xlat
push
icebp
ds
xchg
popf
es
or
lcall
in
mov
jle
andl
lcall
popf
shl
mov
push
gs
das
cld
imul
adcl
mov
adc
jmp
and
call
push
xchg
lods
stos
stc
pop
xchg
mov
lret
arpl
or
daa
lods
data16
pop
call
sub
addl
mov
gs
es
add
jecxz
cld
hlt
push
movsb
adc
loope
shlb
out
push
inc
cmp
icebp
je
bound
arpl
adc
shrl
movsb
jnp
push
imul
aaa
jmp
or
mov
subb
and
cwtd
pusha
xor
mov
filds
hlt
mov
gs
xor
lea
out
outsb
mov
push
loopne
mov
aam
aas
int3
sub
mov
mov
movsl
lock
dec
cmc
inc
mov
es
loop
xchg
add
xchg
mov
dec
cli
and
loop
xor
outsb
mov
cld
push
test
in
or
inc
aas
loope
inc
push
repz
and
cmp
sarl
mov
in
hlt
in
cs
xchg
sbb
aad
pop
in
xlat
int
inc
xchg
xor
xchg
jb
mov
inc
mov
movsb
lret
sbb
in
lret
ret
pop
xor
clc
sbbl
sbb
pop
mov
icebp
dec
cmpsl
cmc
popa
imul
dec
pushf
ss
rclb
cli
inc
cwtl
and
ljmp
jno
stos
scas
test
cmpsb
or
scas
jge
pop
aam
mov
pusha
xorl
out
dec
icebp
scas
data16
push
insl
inc
hlt
and
sub
pop
or
fldl2e
and
psubw
cmp
mov
loope
cli
mov
dec
fdivr
cmpl
repnz
mov
outsl
frstor
mov
mov
pop
fcmovu
and
out
pushf
in
mov
decb
das
shlb
jmp
mov
lret
and
leave
int
push
sub
test
adc
fs
cmp
mov
cmc
rcr
push
push
mov
or
das
push
stc
icebp
xor
repnz
pop
xor
rorl
cmp
sarl
mov
outsb
mov
shlb
push
lods
iret
push
jg
popf
sub
es
jns
stc
pusha
dec
jmp
pop
jp
jmp
sbb
inc
ds
sub
sub
sub
lea
shrl
xchg
fsubrl
adcl
sub
pop
mov
aam
dec
add
cmp
imul
nop
sbbl
rclb
movsb
sub
js
fmuls
jg
inc
repz
jno
add
mov
add
insl
nop
mov
jecxz
aaa
mov
sbb
clc
psubb
sub
gs
leave
fistpll
cltd
in
inc
adc
fnstcw
daa
cmpsl
cs
sub
inc
ficoms
lock
pushl
dec
mov
icebp
adc
push
leave
mov
push
mov
cmpsb
outsl
andb
fdivrs
sti
mov
mov
es
xor
xor
push
sub
dec
arpl
mov
fdivrl
sub
adc
fadd
ror
sbb
imul
jne
insl
fucom
aad
mov
mov
insb
rol
loope
sub
int
loopne
inc
repz
aam
loop
popf
out
lret
push
daa
scas
dec
dec
aas
adc
and
ret
dec
fsubs
test
sub
dec
stos
xlat
mov
push
xchg
cld
push
pushf
mov
jbe
mov
iret
xor
mov
and
xchg
jecxz
mov
in
out
lret
shrl
add
or
pop
mov
sub
movsb
lock
add
paddsw
lcall
imul
popa
insb
lcall
push
mov
xchg
pop
and
repz
cmp
xchg
filds
js
popa
push
daa
lods
cli
frstor
xchg
js
fbld
iret
test
push
pushf
aas
daa
cmpsl
imul
imull
or
cmp
or
push
rcrb
sbb
pop
frndint
push
cmp
scas
mov
cltd
fdiv
inc
sbb
mov
inc
xor
mov
jbe
insl
loopne
jb
add
push
loop
mov
mov
xchg
sub
mov
jo
divb
repz
or
pop
into
add
jns
sub
ret
addr16
mov
jae
es
rorl
jae
xchg
iret
and
mov
add
add
sbb
inc
loope
inc
fimull
lret
add
mov
push
and
jle
xor
montmul
cmpsb
add
int
cmpsl
and
lcall
mov
movb
je
dec
sub
and
pop
dec
stc
ds
add
loope
mov
iret
sahf
aaa
xor
outsl
repnz
daa
outsl
incb
jle
adc
push
movsl
inc
mov
mov
xor
loop
insl
mov
or
inc
and
inc
xor
jb
cmp
jle
jecxz
jle
rcr
push
dec
mov
xchg
cltd
mov
inc
mov
mov
js
and
test
push
mov
mov
ja
dec
and
out
sbb
inc
dec
jae
xchg
xchg
pop
adc
fmuls
push
mov
in
jae
xchg
leave
xchg
adc
push
pop
bound
jle
addr16
pop
aam
cmp
test
inc
roll
ficoml
pop
inc
adc
je
loope
das
fcomp
xchg
cmpxchg
testb
ret
test
mov
int3
push
shlb
out
xor
and
loop
jge
cltd
arpl
push
lcall
inc
lea
or
testb
inc
das
cmpsb
jbe
sbb
out
orl
popf
jle
test
xorb
out
jge
mov
push
test
inc
test
sub
mull
mov
and
push
lret
cmp
aad
ja
sarl
popf
or
mov
inc
movsb
out
mov
lret
pop
dec
cmp
pop
jae
or
cs
jae
cli
test
or
add
lods
mov
in
jecxz
sub
dec
mov
mov
push
ret
pop
or
mov
enter
jns
gs
lock
mov
bound
fcomps
dec
fstpt
mov
and
mov
mov
je
xlat
je
cmp
pop
ja
sbb
mov
xor
fcoms
in
mov
adcb
clc
faddl
jmp
pop
pop
mov
aaa
xor
das
mov
ljmp
jecxz
mov
mov
fdivs
fwait
gs
stos
mov
jbe
adc
negl
xorl
stc
or
sbb
dec
add
inc
addr16
mov
sbb
mov
push
aas
or
lret
flds
mov
cmp
xor
jecxz
in
int
popa
or
cmc
hlt
adc
out
leave
mov
pop
mov
test
lods
jge
or
cmp
push
jno
imul
lahf
ljmp
or
dec
dec
sub
push
rcr
jmp
test
aaa
loope
scas
add
cmpsl
cmpl
push
pushf
fisubrs
xchg
mov
mov
mov
jge
stc
xor
xor
mov
in
mov
je
cmp
mov
test
bswap
push
xor
ja
or
jbe
or
loope
xchg
jo
lret
dec
push
push
adc
sarb
fstps
mov
pop
or
xor
in
aam
mov
xchg
lcall
insl
fimull
clc
sti
sub
or
je
divb
sbb
sar
or
pushf
inc
lods
lods
dec
ret
orb
mov
roll
mov
and
outsl
mov
movsl
in
ret
lock
loop
outsl
jle
pop
sub
movsl
mov
cmc
xor
in
shl
data16
in
push
fcoml
addl
dec
add
cmp
out
jge
pop
dec
mov
jg
pusha
adc
fs
sahf
lret
push
dec
add
push
xor
scas
insl
xor
push
xchg
insl
lea
xor
scas
sbb
push
jl
mov
push
xor
cmp
outsl
or
test
pop
mov
cld
lods
das
push
lcall
sbb
xchg
pop
jle
test
dec
push
sarl
pop
mov
pop
mov
enter
mov
ret
push
iret
xchg
xchg
lods
jecxz
into
adc
xchg
and
out
rclb
rcl
adc
das
vpsubq
daa
xchg
mov
mov
daa
leave
das
mov
pop
inc
lea
stos
mov
sub
hlt
mov
lds
loope
shrl
int3
lret
ds
das
lods
and
jmp
fs
cmp
cmp
mov
and
and
inc
push
fsubrs
lods
sbb
push
enter
push
jecxz
sub
not
push
rcrb
mov
ret
adc
cmp
push
lahf
inc
cltd
push
dec
mov
mov
mov
lret
mov
pusha
stos
test
push
jo
movsb
cs
mov
inc
add
sahf
dec
sub
decb
mov
andl
inc
bound
jle
sub
je
jno
lret
popa
xor
inc
stos
jae
push
add
add
cwtl
adc
mov
mov
xchg
popa
mov
ss
mov
in
sub
lods
jmp
pusha
push
xor
push
mov
stc
out
and
jge
mov
cs
sahf
js
dec
les
ss
mov
lea
inc
mov
addr16
outsl
scas
mov
sbb
fldl
stc
int
pop
dec
or
sbb
xor
int3
push
mov
add
sbb
in
xlat
fldl
mov
testb
je
addr16
cmp
sub
inc
push
cmp
xchg
movsl
lds
inc
dec
pop
pop
loope
dec
xor
daa
fnsave
aam
and
test
adcb
push
push
jp
mov
cltd
adc
ret
cltd
bound
ret
push
xchg
push
mov
outsl
adcl
fnsave
repnz
inc
repz
out
ret
gs
push
test
pop
and
mov
inc
mov
aaa
ds
hlt
call
sbb
insl
int3
pop
mov
shrb
ja
cmc
outsl
shll
leave
mov
cmpl
out
mov
mov
mov
leave
aad
stos
lahf
cs
mov
mov
xor
loopne
sbb
and
inc
es
inc
xchg
shl
pop
mov
sub
mov
adc
add
pop
xchg
cmpsl
lds
jne
repz
call
call
and
xchg
sbb
bound
pop
inc
enter
in
aad
lret
mov
sub
cmp
mov
adc
in
xor
cmp
cmp
mov
mov
cmpsb
sbb
ss
mov
imul
arpl
cmp
xchg
dec
and
pop
cwtl
clc
lret
pop
sti
jecxz
fdivrs
jnp
mov
out
movsb
lds
dec
lcall
and
or
mov
push
out
mov
insb
jge
fiadds
ds
push
fisttpl
push
jp
mov
xchg
add
jno
and
cwtl
es
ret
fistpll
cmc
mov
ljmp
push
mov
and
mov
test
sahf
roll
and
sbb
mov
lret
jl
out
mov
sub
jle
mov
mov
lods
test
das
inc
clc
xor
mov
cld
not
xchg
add
jmp
xor
or
cmp
pushf
popa
cli
mov
movsb
imul
xchg
arpl
pop
dec
cmp
mov
addl
or
lea
mov
das
cmp
shl
jecxz,pn
push
add
cltd
xchg
aas
cwtl
and
fstpl
adc
std
push
push
movsb
sbb
pop
iret
lods
faddl
push
and
jnp
rclb
and
xor
or
lret
fidivs
shl
std
mov
cmpsl
adc
jnp
cmp
push
js
cmpsb
adc
lret
mov
jbe
lock
je
push
les
aas
jmp
rorl
sub
xor
jge
lock
pop
xor
mov
cld
popa
lret
pusha
jecxz
jne
jg
into
jge
loop
inc
mov
xchg
mov
adc
pusha
jmp
push
mov
jl
pop
into
mov
daa
cmp
mov
xchg
push
inc
fs
inc
mov
jp
popf
sarb
aam
orl
dec
fsts
lea
xor
ljmp
insb
loope
sbbb
es
sbb
jbe
movsl
jl
js
fstpt
mov
or
fsubrs
je
mov
ret
and
icebp
cmpsl
sub
adc
stos
xchg
push
loop
aam
lret
xchg
jb
out
repz
lods
or
adc
ficoml
lds
addr16
push
mull
adc
jo
insl
stos
xchg
sub
in
mov
inc
or
cmpsb
xor
add
push
stos
lods
jge
jns
mov
jecxz
sub
fdivl
cmpsb
bound
lcall
add
mov
in
push
sbb
std
dec
sti
xchg
and
jno
lds
dec
mov
cmp
inc
test
adcb
dec
and
sub
dec
xor
pop
test
xchg
icebp
cld
enter
pushf
jmp
test
push
iret
popf
xor
cmp
out
mov
push
sahf
push
push
mov
imul
cmpsb
loopne
pop
xorl
adc
fsubp
cmp
mov
test
arpl
rorb
shll
cwtl
mov
arpl
add
hlt
inc
and
pushf
fstps
rolb
mov
xchg
xchg
sahf
pushf
ss
sub
mov
cmp
mov
pop
bound
jmp
add
mov
mov
push
inc
and
fildll
popl
pop
fwait
dec
mov
ds
loop
adc
adc
mov
push
jbe
pop
xchg
outsb
aaa
push
sub
cmp
je
addl
pushl
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
cs
rclb
pop
jp
in
jp
je
into
and
ljmp
add
mov
int
movl
sahf
sbb
add
popf
push
pop
cmp
pop
outsl
xchg
push
dec
cmp
cmp
clc
xor
shll
loopne
jmp
in
mov
sbb
jmp
subl
jmp
sub
dec
mul
jle
mov
andl
int3
inc
das
or
out
cmp
mov
fs
imulb
test
push
push
mov
push
bound
jecxz
int
xchg
outsl
movsb
xchg
shll
ret
mov
xchg
dec
push
fsubrl
push
add
mov
fwait
jae
jae
cmc
out
aaa
xchg
adc
into
loopne
add
xorb
inc
out
icebp
out
stc
sbb
jno,pt
jns
stos
imul
pop
sub
ret
sbb
lret
sub
push
mov
insb
lahf
stos
pop
js
jbe,pn
sbb
cs
pop
pop
or
repz
addl
push
icebp
popf
xchg
loop,pn
mov
hlt
imul
int3
mov
int
dec
sub
sub
imul
pushl
add
and
push
rclb
mov
sbb
cmp
iret
cmp
adc
push
loopne
fxch
sbb
iret
cmp
mov
es
dec
ret
ffree
das
shlb
xor
jg
imul
repnz
dec
pop
cmpb
imul
cmp
lods
dec
popf
lock
or
mov
jecxz
push
mov
add
push
ljmp
xor
stos
or
into
mov
test
jge
aam
dec
pop
mov
stos
dec
bound
add
mov
insl
mov
lods
and
stc
jbe
out
mov
mov
jb
aaa
xor
xorb
rorb
cmp
mov
dec
xchg
int
mov
jmp
mov
xor
cmpsb
ret
pop
cld
rol
mov
in
cmp
loopne
add
cwtl
bts
sbb
out
in
xchg
mov
push
push
or
pop
in
push
out
add
test
iret
dec
fcoms
cmovl
lcall
xor
pop
sub
aam
outsb
xchg
ret
push
adc
mov
lods
sbb
bound
divl
xchg
in
xor
mov
jno
mov
lods
mov
shrb
jae
aam
mov
and
push
shl
fisttpl
out
imul
repz
loop
mov
ffree
sbb
jp
sub
push
jge
icebp
jae
lcall
jns
push
pop
clc
jl
mov
es
push
repz
sub
xor
ret
js
or
movsb
int3
sub
inc
dec
or
push
mov
push
shrl
add
xchg
aam
pushf
aad
inc
and
lods
aam
xor
daa
add
dec
scas
adc
dec
sbb
xor
mov
test
inc
and
repz
sub
push
adc
sbb
jo
or
or
mov
mov
mov
cmc
add
jbe
shrb
sahf
mov
inc
hlt
fidivrl
dec
out
je
mov
test
fiaddl
push
dec
setl
jae
stos
jae
dec
and
aaa
push
add
jb
add
sub
dec
in
push
das
or
xor
cwtl
inc
roll
cmc
and
stc
add
cmpsb
cli
dec
repnz
add
mov
mov
or
cli
xchg
cwtl
mov
gs
cmp
push
jle
inc
push
xchg
add
fidivrs
pop
call
xchg
sbb
push
sbb
dec
inc
add
pop
lahf
gs
xor
inc
in
and
repnz
and
jge
dec
jle
xlat
aad
sbb
cmp
stos
or
jecxz
sahf
pop
jmp
sub
movsb
jecxz
in
jno
pop
shll
adc
pop
add
iret
cwtl
gs
adc
fmuls
repnz
xchg
roll
shll
pop
xchg
mov
sub
ja
fwait
cmpsb
stc
mov
mov
stos
and
mov
xor
mov
or
and
or
sbb
repz
push
mov
xor
add
xlat
stc
cltd
jo
mov
stos
fwait
push
into
lret
jno
push
jno
mov
add
dec
lret
xchg
add
or
xchg
ljmp
je
cld
pop
ret
mov
rorb
inc
jnp
lock
repz
fidivrl
mov
xor
test
data16
push
loopne
inc
test
stos
sbb
dec
cmp
loope
inc
mov
negb
xor
xchg
add
cmp
inc
mov
inc
into
das
enter
mov
shll
sub
mov
push
fmuls
sahf
and
leave
xchg
ja
or
or
add
out
inc
mov
sbb
fs
or
mov
add
add
pop
ret
push
and
sbb
add
push
inc
aas
add
or
ss
imul
repnz
js
lret
icebp
shll
sbb
sahf
add
dec
outsb
xorb
xlat
loopne
jbe
test
cwtl
inc
push
ret
xchg
gs
xchg
setns
movb
in
sbb
fwait
int
pop
xor
scas
mov
mov
lret
and
mov
and
lds
jne
cmp
cltd
mov
sbb
outsb
push
addr16
mov
cld
mov
test
mov
lods
or
adc
inc
inc
cmp
rcll
xchg
push
sub
and
xchg
sti
and
lock
mov
stc
mov
data16
jo
jae
ret
push
mov
xchg
xor
pop
imul
push
ret
jl
push
adc
mov
push
pop
sahf
bnd
pop
sti
sub
adc
out
and
out
into
adc
jge
scas
dec
jge
mov
cmpsb
jns
dec
pop
ds
cld
std
mov
mov
jns
add
clc
xlat
adc
lret
jns
xchg
lahf
inc
shlb
loope
cmpsb
inc
inc
nop
pop
jle
and
jo
fnstsw
adc
dec
push
jecxz,pn
push
bound
mov
push
movb
pusha
bound
imul
pop
out
into
ret
lret
mov
out
add
cs
sbbb
push
pop
cmp
xor
cli
enter
add
mov
xchg
xchg
push
sub
mov
push
in
sti
cltd
pop
sub
mov
cwtl
aad
in
inc
aad
adc
mov
mov
shl
jp
sub
aaa
imul
and
inc
sbb
or
adc
mov
pop
cmc
add
inc
jbe
mov
icebp
rcll
mov
xchg
sbb
cmpsl
stos
pop
add
push
mov
push
ret
pop
mov
add
sar
insl
fmull
cmpsb
cmc
sub
push
aad
call
std
mov
dec
adc
stc
lcall
add
mov
xor
inc
add
movsb
sbb
dec
dec
iret
fdiv
das
pop
gs
and
inc
je
stos
sub
push
sbb
out
stos
or
cmp
jo
pop
in
inc
or
mov
js
adc
cmp
jo
mov
ja
test
outsb
cmp
pop
xlat
scas
push
movsb
or
inc
mov
and
icebp
dec
pop
call
mov
mov
sub
fsubrs
pop
lods
shr
mov
dec
xchg
fnstenv
and
push
lock
sub
mov
add
xchg
push
mov
imul
daa
and
mov
lretw
sbb
cld
iret
dec
lods
adc
pushf
mov
sub
fistpll
sub
ss
scas
or
addr16
mulb
jo
cmp
and
jne,pn
jmp
out
lret
imul
fdivs
mov
mov
xlat
xor
movsl
aad
pop
sub
push
stc
adc
stc
pusha
cmp
push
out
lret
sub
inc
loope
cli
and
dec
jae
leave
aad
adc
ret
jecxz
xchg
pslld
xchg
add
sub
popf
test
int3
sub
mov
sub
push
sbb
addr16
lods
in
add
xchg
inc
mov
dec
aam
mov
mov
pop
dec
daa
std
mov
mov
jge
cli
pop
dec
jmp
xchg
fldenv
ljmp
and
jg
jg
out
pop
addl
cmp
lds
dec
subl
pop
lds
js
mov
push
cmc
mov
cmp
dec
leave
push
push
mov
dec
fcmovne
mov
shl
in
ffreep
int
mov
jne
cmpsb
repnz
sub
cmpsb
sbb
pop
jp
and
xchg
mov
ds
push
lock
ds
pop
sti
sbb
push
cli
es
pushf
jg
aad
and
or
and
movsb
inc
pop
and
ret
mov
xor
inc
pop
movsl
dec
mov
arpl
push
pop
mov
push
jae
push
es
lods
out
sti
mov
in
bound
nop
jg
xchg
sarb
les
or
mov
mov
cmp
jbe
jp
inc
ss
mov
fdivl
rcrb
lret
push
mov
xchg
bound
shl
and
loopne
cmp
mov
pop
popa
pop
inc
dec
ljmp
out
loope
test
push
mov
mov
imul
lods
mov
pop
fidivs
roll
xor
bound
or
cmp
insl
ficompl
sahf
test
or
mov
mov
adcl
test
inc
ret
xor
imul
cmpsl
loope
add
stc
add
cltd
cmc
add
xchg
mov
push
repnz
xchg
mov
sbbb
test
scas
lock
je
jl
dec
lcall
daa
mov
cmp
loope
jle
cmp
dec
bound
or
push
sub
es
cltd
dec
xor
loopne
sub
cli
and
adc
bound
xlat
inc
xchg
jns
hlt
mov
jnp
sbb
dec
arpl
ret
shlb
adc
in
ss
int3
jg
xchg
in
int
and
shll
mov
add
cltd
call
imull
syscall
cmc
push
dec
lods
scas
mov
push
jg
in
lahf
cmpsl
fdivs
mov
mov
push
stos
movsl
and
sbb
xchg
lahf
mov
icebp
stos
sbbl
es
jb
mov
add
pop
jno
jbe
movb
xor
clc
insb
mov
gs
das
push
add
mov
rol
cltd
push
dec
subl
cltd
fucomp
cltd
dec
stc
fmull
loop
cwtl
dec
sub
std
and
jno
and
mov
iret
mov
fisubl
sbb
lds
rcrb
nop
das
jno
inc
xor
dec
pushf
fnsave
push
mov
or
dec
dec
aaa
rcrl
out
stos
sub
push
cmp
push
jae
je
pop
pop
leave
rcr
jnp
sbbl
in
into
push
mov
out
push
push
aaa
movsl
sbb
sub
mov
mov
jl
xchg
inc
cli
int3
mov
jnp
jnp
mov
sub
in
ret
mov
aas
test
xchg
inc
imul
test
push
or
xor
inc
xchg
adc
ss
add
jmp
bound
jecxz
sub
lods
pop
mov
pop
and
lret
das
negl
popa
mov
xlat
mov
mov
insb
std
lret
xchg
jmp
fidivs
mov
cmp
cld
cmp
cmpsb
cli
sbb
push
repz
jg
xor
jmp
enter
popf
popf
mov
pop
aad
or
xchg
jo
aaa
stos
test
jg
and
sti
jo
inc
xor
cmp
ljmp
lods
jno
lahf
fcompl
loope
mov
aas
xchg
dec
loop
test
pop
les
fnstenv
sub
loop
sbb
xchg
mov
out
or
je
movsl
sub
call
cmpsb
ljmp
push
mov
lock
mov
pushf
ljmp
jb
das
sbb
sbb
inc
iret
cmc
testl
fsubr
jo
dec
in
movsl
addr16
daa
jg
aad
pop
popf
dec
sbb
push
xor
leave
faddp
cmp
add
or
nop
es
shrl
add
cmpsb
gs
adc
pslld
adc
pop
les
cmpsb
sbb
fstps
xchg
inc
adc
movsl
mov
pop
sub
mov
roll
sub
lret
or
repnz
js
xor
cmp
in
push
pop
roll
fwait
shlb
icebp
in
je
fnstsw
rolb
mov
clc
fmulp
mov
dec
or
sub
cwtl
jne
mov
mov
fwait
loope
stos
rorl
test
xor
mov
bound
es
sbb
ret
dec
cmp
in
in
leave
mov
xor
gs
lcall
aas
inc
rcrb
ds
cld
sarl
dec
mov
repz
sub
sbb
movsl
mov
ret
jp
stos
pop
mov
fidivl
sub
push
cs
mov
xor
shrb
or
mov
fnstsw
mov
repnz
mov
loopne
xchg
test
sarb
cli
dec
adc
rcll
dec
movd
cmp
mov
int
mov
pop
inc
mov
popf
pop
add
cmp
dec
lock
jle
and
and
mov
xchg
in
adc
imul
out
and
aam
pushl
test
adc
loope
aas
push
adc
cwtl
xchg
into
popf
pop
clc
sub
or
adc
pop
sbb
mov
int
pushf
imul
cld
fsub
imul
enter
dec
cwtl
repz
mov
jbe
cmp
repnz
dec
mov
push
ljmp
dec
movq
rep
divps
inc
arpl
push
dec
jp
inc
fwait
sbb
xchg
adc
rcll
lea
js
jl
nop
test
repz
dec
fidivrs
push
cmp
mov
jecxz
add
notw
dec
in
shlb
xchg
nop
testb
sub
xor
push
in
call
dec
cltd
outsb
daa
mov
insb
repnz
mov
xor
jno
movsb
js
xor
test
mov
daa
mov
jle
inc
jbe
leave
jl
out
xchg
xchg
insl
mov
jmp
xor
add
push
pop
lock
dec
fstpl
gs
std
add
cmc
pop
orb
sub
adc
adc
cmp
dec
ss
imulb
lcall
push
jb
mov
mov
in
into
jae
or
ret
xchg
mov
jle
lods
out
sbb
mov
iret
sub
dec
sahf
int
roll
add
pushf
repz
inc
or
loopne
mov
mov
cmp
sbb
ret
dec
movsb
int3
mov
gs
xchg
push
aaa
jl
add
out
xor
sub
ljmp
jae
push
cmp
lods
mov
mov
xchg
arpl
pop
mov
dec
sub
insb
mov
dec
push
jecxz
shll
popa
outsl
adc
pop
mov
aad
add
pop
icebp
sub
cmc
stos
sbb
xchg
nop
inc
adc
mov
lods
loope
pop
xchg
loop
sbb
pop
ret
mov
daa
jecxz
pop
or
into
dec
inc
mov
sub
mov
xchg
cmp
sbb
mov
adc
pushf
stc
jb
xorb
inc
bound
dec
mov
jecxz
ret
xor
cli
fadds
scas
test
adc
in
dec
adc
sbb
jp
lods
aas
xchg
add
inc
movsb
mov
repnz
adc
and
sub
jp
mov
outsl
inc
ss
add
xchg
lahf
je
fidivrl
add
pop
xchg
sub
push
stc
daa
in
push
cmpsl
ljmp
std
fsubs
pop
mov
fmull
and
gs
insb
sbb
push
pop
orb
cmpsl
mov
jb
mov
jne
outsl
jmp
add
adc
inc
test
or
ss
out
sub
push
bound
scas
push
shrl
add
xor
xchg
pop
adc
imul
dec
icebp
jmp
pop
sarb
aam
shll
cwtl
sbb
int
mov
sbb
sub
arpl
xchg
loope
mov
movsb
xchg
in
cs
and
mov
dec
dec
and
and
stos
and
push
cmpsb
mov
icebp
jnp
xor
cmc
cs
mov
mov
xchg
pusha
loope
adc
and
lahf
and
lock
push
bound
filds
fwait
inc
testb
adcb
and
out
repnz
jl
sub
std
cltd
adc
xchg
cmp
and
pop
rclb
inc
xchg
cmc
or
xchg
lods
add
sub
xchg
sub
shll
fwait
insl
sarb
int
xor
mov
mov
inc
or
nop
lods
enter
ljmp
hlt
shll
push
rorb
sbb
insl
adc
xor
jl
cld
loope
into
push
loop
dec
adc
imul
mov
bound
loop
and
test
ret
and
inc
inc
jl
insb
xchg
add
cmp
lods
mov
xchg
mov
gs
jge
pop
dec
xchg
or
aam
enter
xchg
pusha
xchg
inc
mov
jge
repz
aam
ds
sub
mov
in
loopne
stos
jo
jb
and
mulb
pop
mov
pop
loop
jge
mov
aas
mov
and
popa
cmp
jl
push
aad
roll
les
fcompl
fidivl
fcoms
imul
in
mov
movsl
stc
idivl
stos
cmp
mov
movsb
popf
xor
cmp
mov
xchg
xchg
pop
adc
sbb
insb
lret
adc
add
fisubl
xchg
mov
leave
hlt
or
adc
dec
jb
clc
cmpsb
jnp
push
push
invd
fstps
fimull
mov
jmp
loope
pop
in
aad
out
push
cmp
stos
cmp
xchg
jge
and
lods
mov
stc
adc
outsb
out
test
div
adc
imul
jle
mov
and
xor
daa
movsl
adcb
jbe
test
sub
jbe
sub
xchg
and
shlb
mov
scas
jne
push
push
add
cmp
and
arpl
lods
add
ret
push
xchg
aad
out
mov
pop
or
xor
jmp
fwait
aam
in
popa
jno
adc
mov
mov
xchg
pop
jge
dec
out
js
jp
fs
stos
imul
jge
cmp
sarl
ja
ficoms
sub
int
ss
sbbl
adc
imul
lahf
lods
jge
sbb
add
fs
loop
je
and
mov
mov
sbb
fmull
loope
or
sahf
addr16
inc
jmp
outsl
call
out
dec
mov
fstpt
daa
adc
seto
popl
outsb
push
jae
aad
mov
iret
xor
add
sbb
pop
pop
insb
lcall
xor
pop
sub
xor
orb
cmp
mov
mov
icebp
xor
ljmp
lds
nop
push
lea
adc
add
mov
sub
or
sbb
ss
cli
add
add
adc
mov
mov
fsubrs
lcall
cmp
movb
cli
gs
adc
pop
pop
dec
lret
cmp
cmpsl
stc
sbb
adc
or
movsl
push
pop
pop
sbb
mov
lahf
push
out
mov
in
add
ljmp
push
sbb
imul
aas
xchg
dec
cmp
mov
jecxz
fld
add
mov
int
mov
push
dec
adc
rol
shll
inc
repnz
gs
andl
dec
xor
enter
add
pop
into
fwait
mov
rcrl
imul
add
mov
addb
pusha
sbb
mov
loopne
xor
popa
pusha
divb
add
jle
call
icebp
or
sub
cmc
pushf
or
cli
andb
out
dec
jno
test
pop
xchg
lods
xor
jo
fsubrl
mov
nop
imul
and
popa
iret
mov
and
std
shl
stos
or
adc
inc
js
push
out
push
add
fsts
inc
fisubs
js
scas
in
sbb
cmpsl
sub
mov
ss
insb
js
insb
cs
je
jbe
stc
ret
dec
pop
dec
sahf
outsb
adc
mov
add
inc
push
add
mov
jae
inc
mov
cmpsl
inc
sbb
aam
mov
push
adc
daa
push
divb
sbb
jae
pop
xlat
dec
arpl
cli
pop
jbe
pop
out
les
fstpl
xchg
cmpsb
cwtl
scas
int
sbb
ja
aad
sub
repz
js
cld
and
push
pop
and
in
enter
test
icebp
inc
addb
adc
ljmp
addl
je
jnp
arpl
scas
jno
ds
mov
add
adc
stos
mov
scas
inc
and
pop
xor
xchg
xor
test
mov
xor
sarl
repz
push
mov
outsl
aaa
sti
cs
cmp
cmp
insl
and
add
cmp
repnz
jp
test
inc
movsb
jae
ja
lods
xchg
data16
std
subl
in
adc
inc
addr16
insb
cltd
mov
jmp
lods
addr16
and
mov
jp
decl
adc
jle
bound
jns
add
cli
pand
fimull
jnp
jo
dec
cwtl
xor
push
cmpl
std
test
rclb
inc
je
stos
rcr
push
scas
inc
adc
lret
push
jl
and
andl
jmp
inc
stc
cwtl
fwait
mulb
popa
fbld
dec
or
lds
imul
and
aas
outsb
add
cmp
sbb
xchg
ss
mov
mov
jnp
scas
fdivl
sbb
cmc
inc
mov
fs
cmp
into
andb
mov
mov
lcall
sub
clc
xchg
sbb
pop
adc
daa
enter
clc
daa
lock
cmp
bound
das
push
lahf
outsl
fs
mov
sub
jl
adc
pop
adc
scas
shrl
imul
mov
lea
xchg
arpl
jne
jg
xchg
or
outsl
jp
les
mov
jno
mov
mov
dec
sbb
mov
xor
jb
call
popf
je
mov
test
int
sub
jns
je
test
xchg
lret
addr16
ds
xchg
inc
and
fs
aam
sbb
mov
aas
xchg
dec
jecxz
and
push
or
sub
scas
rolb
push
mov
inc
rcl
push
insl
pop
mov
push
mov
int
mov
xchg
test
ja
sbb
mov
pop
dec
popa
inc
jo
sbb
or
xchg
or
aas
imull
sub
test
insb
mov
out
push
add
xor
hlt
mov
test
test
dec
and
pop
ljmp
sbb
lea
pop
lret
lods
fidivrl
xchg
dec
popl
mov
adcb
dec
mov
scas
es
inc
jno
out
iret
xchg
rcll
movsl
pop
aas
std
lods
dec
sahf
xchg
sub
cwtl
mov
lock
cmp
xchg
movsl
sub
add
dec
adc
fs
push
mov
jge
adc
test
mov
test
pop
cld
adc
out
aad
ja
mov
clc
call
xchg
jo
test
xor
repnz
xchg
lea
xor
lods
call
fwait
adc
push
dec
scas
pop
aam
jae
push
imul
flds
jecxz
xchg
out
lds
rorl
jp
push
out
pop
mov
pop
push
inc
xor
xchg
shlb
ljmp
pusha
repz
dec
jle
xor
or
jecxz
push
ror
push
sub
insb
lds
xchg
adc
xlat
cmp
sbb
xor
fistps
gs
adc
dec
aaa
in
out
mull
aas
dec
and
lds
or
push
std
xor
push
in
fstpl
jmp
inc
outsl
pop
scas
ja
lods
mov
xchg
cmp
mov
pop
shll
clc
cmovno
cltd
add
sub
add
xchg
and
adcb
and
push
icebp
jp
add
inc
xchg
lahf
call
std
sbb
aam
and
js
mov
shll
push
mov
loopne
movsl
roll
ficomps
push
sbb
sbb
test
loopne
movsb
push
cmp
mov
push
ficoms
dec
inc
cmp
xchg
iret
sahf
and
loopne
sbb
and
xchg
out
shrb
dec
inc
cld
lret
adc
in
sub
push
push
adc
lods
shrl
scas
sub
sbb
lds
jbe
pop
loop
std
out
mov
sub
add
inc
adc
push
dec
jno
dec
mov
add
faddl
push
stos
cwtl
loopne
outsl
fidivl
inc
mov
mov
xchg
add
fstps
div
jae
add
fadd
in
mov
xchg
enter
jae
call
pop
data16
inc
aam
popa
xchg
push
add
mov
movsl
aad
dec
xor
push
xor
mull
mov
jae
aas
aad
mov
ljmp
xchg
jae
xor
dec
lock
add
xor
cltd
jae
adc
arpl
pop
sub
push
lds
bound
and
and
test
pop
dec
mov
repz
cmpsl
pusha
test
adc
dec
bsr
test
jno
fidivrl
inc
mov
dec
out
xchg
lods
xor
mov
orl
adc
push
loop
mov
in
stos
je
mov
adc
neg
xor
cmc
jns
mov
add
mov
cltd
leave
jne
add
mov
aam
popf
push
sub
push
adc
lret
pop
shrb
mov
and
fsts
jmp
add
or
inc
lcall
push
add
popf
outsl
in
aad
xlat
mov
sbb
std
mov
ds
push
pop
imul
sbb
mov
inc
cmp
enter
cs
fs
sar
ss
test
pop
into
dec
fnstsw
pop
inc
int
lea
repnz
or
pushf
icebp
data16
sbb
gs
mov
call
mov
mov
and
mov
sbb
imul
dec
dec
sbb
mov
xor
pop
mov
sub
mov
xor
stos
stos
push
cli
insb
ret
sti
lods
dec
gs
out
xchg
cmp
and
mov
popf
mov
insl
fistpll
pop
cmpsb
lock
sub
mov
fsub
sub
fs
jle
sti
pop
mov
jb
call
mov
push
hlt
mov
in
loopne
mov
shrl
xchg
adc
pushf
cmp
scas
fwait
add
push
stos
popf
dec
scas
sub
lret
in
pop
cmpsl
or
je
in
inc
xchg
scas
rsm
xchg
int3
or
mov
test
jg
push
fs
cwtl
roll
cmp
test
sub
jnp
out
mov
or
xchg
es
pop
cmc
mov
pop
xor
mov
cmc
or
dec
cli
aad
neg
dec
mov
jp
pop
adc
mov
sbb
imul
sub
subb
inc
and
mov
scas
lock
adc
mov
pop
pop
loopne
mov
bound
cmp
cmp
dec
push
inc
fistl
mov
fs
mov
test
and
add
jge
mov
js
jb
out
popa
xchg
je
jb
repz
dec
mov
hlt
bound
pop
imul
int3
iret
mov
dec
punpckldq
inc
pop
inc
das
sub
cld
test
mov
int
mov
lock
mov
push
mov
test
enter
dec
jecxz
add
push
adc
cld
sahf
jecxz
xor
mov
test
dec
sbb
insb
xor
shr
xor
gs
mov
adc
pop
and
sub
sahf
mov
adc
cwtl
lahf
ret
dec
mov
pop
lret
mov
push
call
xor
add
mov
push
outsl
test
inc
jecxz
xor
in
int
leave
dec
shl
push
push
inc
popa
xchg
xor
mov
cli
popa
or
cld
ret
stos
scas
jno
in
call
stos
dec
orb
dec
fdivl
push
mov
or
shlb
cltd
or
sbb
cmpsb
lods
add
cmp
mov
ds
sbb
mov
fcmovbe
inc
popa
mov
sub
in
mov
sub
sbb
jmp
repz
dec
dec
aad
sub
add
or
mov
iret
lret
add
mov
test
das
ret
test
aaa
jmp
mov
and
sub
ja
jle
insl
fdivl
mov
mov
ljmp
xor
pop
gs
addr16
fistpl
lods
inc
outsl
lods
imul
in
repnz
or
push
bound
mov
cmp
xlat
fdiv
dec
aas
stos
xchg
pop
push
or
xor
pop
addr16
inc
xor
pcmpgtb
out
aas
scas
adc
decl
mov
nop
dec
mov
xchg
jl
sti
mov
cmpb
imul
cmc
arpl
in
jb
in
test
push
clc
dec
shr
adc
dec
xlat
jmp
jns
out
pushf
fiadds
pop
and
xor
and
jge
jno
out
out
std
push
les
xchg
aaa
and
mov
or
sbb
add
mov
add
add
pop
icebp
int3
xchg
and
add
out
lret
dec
faddp
movsl
add
std
jmp
inc
jp
inc
mov
push
xadd
es
std
bound
scas
loopne
negl
es
adc
push
testl
hlt
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
push
in
mov
pop
jp
push
ret
fsubl
in
icebp
add
push
insl
or
mov
rorb
or
pop
js
dec
lods
cmp
loope
out
adc
add
adc
adc
inc
loope
add
lock
imul
add
xor
xchg
pop
push
mov
and
daa
outsb
pop
das
jge
ret
sbb
sbb
test
inc
loope
jb
lea
cmp
or
inc
wbinvd
jecxz
test
add
xorb
push
adc
call
aam
lea
xor
lcall
cmc
pop
cmpsb
fiadds
fisubl
xor
inc
mov
xlat
enter
lock
and
inc
je
and
fwait
or
jb
jle
adcb
and
enter
divb
dec
frstpm(287
jne
loopne
sbb
jecxz
xor
in
hlt
loopne
ds
push
mov
and
in
xchg
sbb
jb
lahf
sub
stos
das
out
hlt
gs
test
xchg
push
lea
pop
and
test
cmovge
repnz
jns
sti
inc
or
js
mov
mov
xchg
mov
repnz
in
adc
dec
nop
pusha
popf
into
sbb
loope
fwait
dec
xor
mov
std
imul
rcrb
add
mov
out
scas
jnp
rcll
cmc
dec
push
jno
sbb
out
xor
push
xor
adc
and
jecxz
push
dec
add
data16
clc
mov
cltd
sbbl
mov
mov
mov
dec
dec
xorb
dec
loope
mov
jg
aaa
xrelease
add
cltd
xchg
setp
out
mov
add
sbb
stos
outsb
ret
add
mov
and
call
push
jo
mov
or
xor
mov
mov
data16
mov
mov
jae
popf
fildl
fdivs
dec
cltd
jns
pusha
loop
fdivl
jg
xor
test
adc
mov
imul
inc
pop
adc
aam
adc
push
or
and
icebp
lods
outsb
sbb
jbe
dec
adc
sahf
mov
push
fidivrs
mov
inc
ror
arpl
je
mov
xchg
les
mov
jecxz
mov
pop
leave
enter
mov
stos
out
test
outsl
mov
pop
ficoms
mov
rclb
dec
insb
loop
xchg
push
fiadds
lret
ficompl
out
iret
and
sub
insl
jo
inc
aaa
push
and
insb
mov
test
lcall
fdivl
sbb
nop
stc
inc
test
lods
mov
addr16
adc
push
pop
dec
mov
test
add
dec
sti
mov
push
cmp
sub
mov
addr16
adc
jno
lods
dec
test
mov
in
sbb
js
stos
cli
insb
repnz
xchg
pop
sbb
jp
or
push
shrl
lds
xchg
xor
clc
int3
mov
sbb
lahf
inc
int3
dec
sbbl
sarb
daa
cmp
out
jne
rorl
xchg
lock
adc
bound
jno
notb
out
xchg
sub
mov
frstor
xchg
sahf
ja
and
int3
loope
cltd
adc
scas
push
jge
aad
mov
mov
outsb
adc
jb
pop
aaa
mov
mov
mov
inc
pop
dec
fwait
inc
sub
mov
jbe
and
mov
stc
dec
mov
loopne
iret
add
inc
outsb
lods
sbb
xchg
xlat
cmp
mov
int3
cmp
mov
fistpl
sbb
fwait
insl
cli
inc
lcall
pop
fnsave
pop
fstl
into
mov
stc
inc
int
mov
add
xchg
or
dec
fucomip
pop
push
xor
cmc
lds
or
mov
sub
jle
jmp
jmp
call
cmpsl
mov
fldcw
lahf
mov
cmp
and
pop
mov
repz
jge
mov
dec
sub
push
addr16
int3
sbbl
mov
test
push
rcrb
push
pop
rcrb
dec
in
cmp
lods
mov
xor
dec
inc
cltd
orb
push
data16
lods
lods
aad
mov
enter
xor
inc
and
adc
shrb
cmc
sbb
dec
addb
pop
and
stc
mov
insb
mov
mov
or
pop
xor
mov
pop
xlat
mov
dec
lock
rorl
push
fistps
bnd
loopne
dec
in
or
pusha
sbb
std
xor
inc
lea
cmpsl
stos
adc
pop
jne
and
ljmp
rcrb
int
inc
cltd
xchg
xchg
roll
iret
aas
sbb
repz
mov
ficoms
lahf
cmp
push
or
mov
pop
mov
inc
sar
ds
adc
mov
mov
in
in
and
cmpsl
sub
jle
fnstsw
stos
push
fcomip
jl
dec
pusha
movsl
and
pop
add
rcll
xor
or
add
mov
sahf
sbb
addr16
pusha
mov
ljmp
mov
dec
inc
pop
lret
cmpsl
sbb
test
inc
or
cli
dec
jp
std
mov
cmc
loop
jae
xor
pop
fistpll
pop
mov
jnp
scas
and
iret
jle
sub
add
loop
lea
cmp
lret
std
nop
jmp
mov
mov
xchg
pushf
mov
pop
xor
fists
mov
sub
add
je
ds
orl
mov
lock
inc
jb
cmpsl
lcall
pop
adcb
inc
pop
lods
clc
movq
nop
push
adc
or
mov
mov
push
push
in
popf
cwtl
lock
xchg
lods
push
out
jg
or
out
pushf
div
mov
push
je
pop
xchg
femms
lahf
dec
lock
push
call
das
jb
sub
push
xlat
add
add
mov
mov
cltd
pop
imul
adcl
jbe
pop
mov
xlat
mov
add
fstl
fildll
push
ljmp
lea
jge
enter
sub
or
pop
or
aam
out
pop
adc
and
add
faddl
repnz
daa
mov
pop
rorl
xor
std
imul
push
std
mov
lcall
mov
leave
mov
icebp
adc
iret
or
cltd
dec
push
cmp
or
test
mov
cmp
mov
cld
adc
mov
xlat
nop
shlb
clc
shlb
or
cs
or
pop
add
nop
lret
sbb
hlt
dec
or
jb
dec
mov
outsl
dec
int3
xchg
orl
and
je
jne
xchg
in
inc
inc
leave
mov
js
sti
mov
mov
stc
add
lcall
or
pop
lea
lret
std
dec
cs
jne
adc
lods
add
call
data16
pop
lret
dec
mov
push
xchg
hlt
mov
or
cmpsb
adc
out
mov
inc
cmpsl
push
cmpsl
popf
iret
push
push
dec
pop
or
nop
pop
test
fiadds
mov
lahf
cs
cwtl
xchg
hlt
mov
pushf
addr16
mov
jmp
sarb
test
jno
xor
push
ja
lahf
ret
in
hlt
or
pop
dec
es
fcomps
push
loope
jns
insl
sahf
inc
ljmp
add
out
clc
mov
adcl
hlt
sub
mov
cli
sub
rcl
test
sbb
sub
add
fistps
mov
jecxz
outsb
mov
cs
pop
leave
inc
push
in
pop
out
inc
pushf
xlat
in
cld
cmp
sti
adc
int3
les
hlt
xchg
dec
data16
js
aas
loope
dec
jbe
lea
add
pop
dec
inc
inc
pop
cmpsb
loopne
inc
dec
adc
orb
mov
test
or
nop
enter
xchg
aad
mov
ljmp
in
int
addl
mov
xchg
add
mov
push
gs
push
sub
push
mov
in
push
sbb
fwait
lods
push
xor
add
fists
lcall
push
in
push
and
mov
rep
dec
test
int3
mov
mov
mov
ja
scas
fsubrp
dec
xor
xor
jmp
push
inc
out
inc
sbbl
pop
notl
xchg
xor
sbb
shrb
lods
std
cmpb
adc
or
popf
into
clc
pop
movsl
add
lods
and
mov
sub
lods
jp
mov
adc
inc
cmc
push
les
popa
cli
adc
jns
xchg
mov
scas
hlt
cld
jo
cwtl
scas
push
aas
jg
push
dec
outsl
test
ja
and
lea
sbb
inc
mov
loop
xchg
mov
jno
push
movb
xor
jne,pn
dec
stos
popa
out
push
popf
insb
sbb
pop
fbstp
jno
dec
nop
movsl
nop
dec
fldenv
pop
aaa
inc
fs
lea
xchg
pop
scas
popa
push
mov
mov
xor
add
add
xchg
icebp
pusha
scas
pop
jge
scas
push
iret
cmpsb
xchg
ss
inc
rclb
inc
push
inc
push
sbb
jns
pop
dec
in
cwtl
cwtl
xchg
pushf
test
popf
jne
popl
lods
inc
int3
addr16
das
aaa
lea
test
shll
aad
xchg
xchg
inc
clc
test
leave
test
inc
mov
ja
cwtl
dec
pop
rorl
jmp
adc
or
clc
inc
lods
xchg
ss
cli
pop
outsb
pop
mov
sub
push
jp
mov
fs
subb
xchg
and
popf
xor
incl
dec
or
xchg
loop
xchg
into
or
mov
pop
cs
pushf
das
lret
test
notb
jno
scas
sub
cmovns
ss
test
enter
mov
or
pop
enter
jo
push
fsubl
es
xor
shll
mov
xchg
push
or
pop
jnp
mov
or
idivb
push
test
sbb
inc
xchg
aad
das
push
lret
and
jmp
adc
inc
loop
jp
inc
push
mov
adc
mov
clc
insb
add
daa
jae
mov
xchg
or
cmp
pop
mov
jb
mov
xchg
inc
jg
xor
pop
pop
add
jecxz
out
or
mov
pop
or
jb
mov
sub
fnstcw
or
jo
outsl
mov
push
sub
fdivl
xchg
or
jnp
push
push
inc
out
ds
out
neg
ss
fs
ljmp
inc
imul
xchg
inc
inc
fs
sahf
jle
or
cmpl
push
jns
push
push
hlt
jo
ror
cld
add
xor
mov
inc
movsb
insl
icebp
mov
xor
inc
mov
cltd
pusha
insl
sub
aas
add
inc
fmulp
mov
sbb
fsubp
insl
data16
mov
xorb
pop
loope
aaa
dec
jne
lret
jecxz
cmp
es
lahf
push
sub
test
push
fdivrl
ljmp
push
addr16
push
ficompl
dec
lea
ja
leave
sub
inc
outsl
bound
stc
mov
pop
out
les
sbb
js
xor
adc
hlt
je
test
lret
jle
test
jle
mov
in
lds
hlt
out
in
dec
pop
mov
dec
add
cmp
xchg
sbb
scas
repnz
push
loope
fsubr
adc
int
lods
dec
cs
aaa
sbb
mov
push
cld
lahf
ds
xor
mov
iret
jnp
std
popa
lods
xchg
push
sub
mov
mov
sub
lea
popa
ds
cli
subb
rorb
pop
sub
inc
shrb
push
enter
shl
sahf
loope
and
jnp
inc
xchg
push
mov
pop
loop
xor
xlat
mov
add
dec
mov
mov
xor
jecxz
dec
test
imul
pop
jno
xor
mov
or
jbe
push
out
movsl
call
sub
or
sbbl
out
cld
inc
rcl
into
test
and
outsl
adc
mov
mov
fisubrs
xchg
mov
lea
fimuls
add
jns
pop
xor
mov
ret
pop
jmp
xchg
std
push
nop
test
sysret
hlt
cmp
inc
insb
aam
jne
push
push
xchg
shrl
xor
fadd
mov
out
jecxz
cmp
pop
loop
mov
arpl
lea
xchg
xchg
dec
mov
cmp
int
jl
clc
jns
mov
jecxz
fsubr
dec
jae
pusha
aam
xchg
dec
mov
or
or
push
push
ret
das
xlat
or
ds
mov
lock
shll
pop
xor
jg
sbb
or
test
jp
push
sub
add
sbb
mov
in
mov
cmp
push
ljmp
ss
xor
sti
jnp
and
and
ljmp
std
imul
loope
in
rorb
fnsave
cli
sub
inc
cmp
rcrb
add
pop
mov
out
mov
or
cmpsb
je
jl
cli
in
notb
jae
xlat
mov
mov
test
shrb
inc
iret
inc
scas
sbb
das
adc
add
jnp
push
cmpsl
mov
dec
xchg
in
inc
lock
dec
fbld
repz
in
jle
js
std
loopne
dec
cmp
fisubrs
mov
push
sti
push
icebp
inc
add
dec
pop
pop
fdivs
repz
or
push
insl
or
xor
test
imul
ds
fs
fstpl
push
or
mov
mov
aas
sbb
pusha
cmp
lock
mov
sbb
push
mov
ficoms
jle
push
mov
aad
and
nop
mov
and
pop
inc
xchg
mov
neg
cmpsb
xlat
rcl
xor
dec
fnstcw
enter
stos
adc
scas
jle
xchg
xor
jne
pop
adc
outsb
mov
jle
dec
iret
call
mov
inc
out
mov
or
scas
jb
pop
pop
lds
imul
loop
lret
inc
mov
add
mov
roll
outsl
inc
in
push
stc
sarb
popa
mov
subl
jmp
stos
std
ficoml
adc
dec
push
mov
push
call
sbb
and
xchg
jle
lock
mov
clc
mov
std
lea
hlt
mull
inc
aas
outsl
adcl
inc
lods
pushf
push
push
add
and
cmpsl
and
jbe
adc
sbb
rclb
mov
pushf
test
out
dec
enter
mov
pop
mov
inc
inc
xor
icebp
or
ss
pushf
pop
out
and
jle
cmp
loop
fildl
leave
push
pop
and
or
pushf
inc
fstpt
mov
pop
enter
adc
push
out
enter
adc
clc
testl
adc
xchg
test
icebp
and
lods
cmpsl
sarl
inc
or
mov
js
imul
push
xor
cs
cmpsl
cld
cli
jne
pop
xchg
inc
decl
movups
adc
push
pop
and
faddl
nop
out
ljmp
add
cmpsl
cli
sbb
iret
jbe
lods
lods
add
xor
mov
insl
mov
cmp
int
fcoml
or
sub
cwtl
shl
icebp
adc
push
fimull
inc
sbb
dec
jge
hlt
push
sbb
jle
mov
fsubrl
pop
adc
popf
or
fbld
cmp
xor
mov
hlt
les
jne
add
push
mov
pop
or
push
adc
iret
scas
mov
push
cmp
push
aas
xchg
and
push
out
xchg
add
out
inc
lea
ljmp
cmp
ljmp
pop
repz
movsl
mov
inc
jle
push
cmp
mov
mov
outsb
xor
movsl
outsl
loope
fs
jns
sub
adc
inc
test
in
cmpsl
aam
mov
shll
xorl
into
or
add
and
and
pop
xchg
push
sbb
push
mov
mov
add
testb
es
scas
lds
test
sbb
movsb
dec
xlat
int3
push
dec
imul
stos
das
mov
add
mov
add
or
in
enter
adc
pop
sub
jne
mov
scas
and
add
mov
xchg
lret
mov
mov
jo
loop
test
out
dec
mov
gs
insl
loope
ret
lcall
fs
dec
mov
jg
addr16
or
pop
inc
sbb
int
cli
cmp
or
push
ljmp
test
and
lret
bound
cwtl
ret
inc
int3
imul
popa
lcall
mov
and
mov
das
cld
mov
sbb
xor
mull
or
mov
xchg
xor
xchg
shr
fcoml
mov
xor
cmp
and
jle
xor
jge
fwait
xchg
scas
jge
stos
mov
sbb
subl
xchg
mov
mov
push
mov
lret
mov
pop
nop
and
pop
dec
mov
sub
lods
push
repz
repz
aas
sub
mov
pop
jbe
push
mov
inc
cltd
xchg
mov
mov
movsl
lock
sub
and
in
cs
int
gs
sbb
lea
lcall
cltd
xchg
icebp
dec
push
xchg
jno
lock
jmp
or
xor
fwait
pop
sub
xor
stc
ljmp
push
mov
mov
test
mov
xlat
inc
and
cli
shrl
pop
scas
shrb
adc
cmp
inc
and
adc
jge
xor
rcrl
sub
ret
test
lods
adc
jmp
insl
push
xor
push
je
sbb
fmull
arpl
dec
sti
xor
leave
mov
mov
and
lret
mov
int
adc
cmpsb
sub
cld
mov
movsl
jge
or
je
pushf
mov
insl
inc
gs
inc
dec
fmuls
ret
movsl
pop
jae
mov
ds
sbb
sarb
aad
es
ret
sbb
outsl
loope
and
dec
pop
imul
mov
or
push
xchg
push
cmpsl
push
sbb
pop
dec
xchg
scas
rclb
out
out
loope
loopne
les
lds
aas
pop
jmp
inc
mov
imul
fisubs
sbb
popa
cmp
lcall
outsl
ss
pushf
into
fsts
pusha
inc
adc
xchg
xor
xchg
test
lcall
and
lods
sbb
push
add
loop
cmpsb
pop
cltd
stos
call
sbb
and
sub
pusha
and
dec
mov
mov
mov
popa
mov
pop
and
repz
int
bt
jo
push
enter
pmullw
repnz
jle
stos
fst
cltd
popf
add
adc
xchg
mov
leave
or
lods
aas
lahf
gs
sti
xorb
ret
ret
or
ret
add
cmp
outsb
adc
std
pop
adc
lea
xchg
cmp
shl
cwtl
inc
outsl
mov
fwait
test
jmp
mov
mov
and
or
cmp
adc
dec
stc
mull
jae
rcrl
inc
add
bound
js
mov
movsb
popl
fcmovnb
or
mov
loop
mov
sub
xchg
test
pop
scas
roll
rol
out
hlt
or
add
aaa
movsl
xor
sbb
dec
data16
lahf
sub
mov
imul
or
and
pop
insb
sarb
popf
mov
dec
cmp
cmp
pop
push
cli
cmp
rolb
into
push
imul
mov
ss
mov
rorb
adc
in
les
ja
push
ja
push
cwtl
cmpsb
stc
mov
ret
insb
jnp
pop
xchg
mov
or
repz
aas
mov
inc
add
imul
mov
test
jl
xor
test
ljmp
add
xor
idivb
gs
test
sahf
adc
adc
mov
aad
stc
cmp
fstpl
fdivrp
add
test
loop
cmp
or
dec
lods
loop
xorb
mov
and
mov
and
in
sarb
sbb
sub
xor
nopl
xchg
test
mov
push
inc
xor
add
in
iret
shlb
out
stos
shlb
cli
xchg
scas
and
js
push
gs
xlat
dec
mov
jb
mov
filds
inc
inc
or
fists
jle
movsb
push
adc
lahf
insl
arpl
out
cmp
inc
add
scas
cld
and
mov
lock
movsl
xlat
jmp
imul
inc
fs
inc
or
mov
je
sub
mov
xor
mov
jae
mov
jge
xor
pop
cwtl
lock
xlat
sbb
or
sbb
mov
and
pop
cwtl
sbb
fs
lock
test
nop
aad
int3
divb
xchg
hlt
pop
lods
adc
cmp
sub
sub
pop
imul
pop
dec
insl
fsts
and
inc
and
add
mov
cmp
mov
cmp
cmpsb
and
adc
xor
pop
xchg
iret
adc
mov
stos
lret
adc
cwtl
cmp
inc
or
mov
outsb
pop
push
push
fadds
adc
mov
outsl
inc
mov
add
xchg
add
out
repz
mov
push
xchg
pop
test
out
repz
daa
add
out
inc
or
jmp
xchg
call
cmp
insl
test
inc
aas
jge
mov
in
cltd
imul
aad
out
mov
or
pop
sbb
out
and
rcrb
je
add
mov
adc
out
cmp
or
mov
xchg
xchg
mov
inc
mov
jle
loopne
sbb
cmc
test
xchg
rcll
pop
out
cltd
cmp
pop
out
js
push
xchg
lods
push
xor
fimull
daa
jg
mov
xchg
xchg
loopne
dec
out
mov
add
jmp
or
aad
pop
jg
cmc
repnz
loop
mov
dec
into
and
mov
pop
xorl
imul
or
mov
shl
arpl
fdivl
add
sahf
mov
out
jnp
loop
pop
out
es
pop
pushf
pop
pop
mov
sarl
sbb
sti
push
push
repnz
xlat
in
fmull
sub
mov
enter
jg
add
add
or
lret
mov
lahf
addl
xor
cs
lods
daa
mov
adc
mov
mov
sub
ret
or
inc
mov
nop
jno
pop
xchg
ljmp
shl
fnstsw
dec
inc
lcall
shlb
jae
scas
aas
add
cwtl
bswap
lahf
inc
or
pop
xchg
sbb
js
mov
repnz
jg
pop
repnz
mov
stc
imul
jmp
scas
enter
fsubl
and
mov
stos
adc
in
xor
fsub
out
bound
scas
icebp
das
test
mov
femms
and
push
and
fldcw
jl
sbb
mov
in
xor
push
mov
pop
dec
push
hlt
mov
xchg
add
and
xor
cltd
mov
insb
adc
jns
lret
xchg
ds
mov
push
loop
adcb
dec
jl
sbb
cmp
in
lds
dec
aaa
outsb
jmp
imul
lods
es
cmp
or
xchg
dec
xor
and
add
cmp
add
outsb
je
mov
adc
push
mov
outsl
dec
or
daa
xor
or
xlat
push
sub
xchg
pop
rcrl
scas
adc
mov
out
aaa
cmc
dec
insl
movsb
fcomps
mov
mov
jg
scas
xchg
mov
cmp
shl
inc
sti
insb
push
mov
or
fadd
mov
xchg
test
adc
incb
repnz
xor
jg
adc
arpl
add
cmp
mov
in
mov
rcrl
pop
push
cmpl
mov
mov
add
pop
shll
mov
or
inc
sub
shr
addr16
das
push
xchg
xchg
leave
inc
jns
and
js
orl
test
jmp
test
pop
inc
and
push
lcall
insb
and
jle
xchg
xchg
lret
add
and
pop
xor
mov
sub
fwait
insl
fiaddl
pusha
mov
sbb
and
add
push
shll
xor
dec
test
cmp
aas
mov
enter
mov
xor
sbb
xchg
mov
jp
or
mov
cmpsl
cmp
enter
arpl
movsb
aas
rcrl
inc
ficoms
into
cs
push
cld
jecxz
push
ja
jne
mov
inc
lcall
mov
pushl
cmp
sub
pop
xchg
cmp
xor
pushf
inc
xchg
in
aam
xor
and
scas
mov
jmp
xchg
dec
fiaddl
sbb
fiaddl
scas
inc
fisubrl
xchg
pop
mov
cwtl
xor
out
mov
fists
jmp
test
movsb
add
mov
dec
jmp
jg
or
stos
adc
sub
jmp
int
nop
and
xorps
fnsave
cwtl
rol
ss
and
cmc
ret
pop
xchg
pushf
adc
adc
fwait
rclb
jo
insl
shrb
cmp
xlat
into
xchg
ss
outsb
mov
cmp
stos
sbb
cld
add
or
loope
aas
sbb
pushf
sarb
loope
add
add
dec
sarl
or
pop
cwtl
pop
sub
xor
xor
lock
adc
cld
andl
call
stc
or
in
in
push
sub
outsl
xor
pop
inc
hlt
pop
test
mov
xor
pop
lcall
mov
mov
pushf
jb
mov
or
cli
mov
mov
sub
xchg
int
jb
dec
sbb
mov
push
lods
ret
mov
jno
lret
mov
fidivl
sbbb
sbb
ret
cmp
pop
mov
icebp
mov
mov
fisubs
cmp
hlt
mov
ljmp
fstpl
mov
mov
loop
es
sbb
loopne
mov
push
sbb
jnp
call
out
cs
cmp
push
cmp
xchg
loopne
or
lods
mov
jbe
scas
or
test
inc
lret
lea
lea
xchg
or
rclb
inc
mov
mov
mov
repz
jb
mov
test
fs
lea
in
adcb
push
xor
imul
loopne,pn
push
fistpll
dec
xchg
fistpl
mov
mov
loop
aad
push
ret
sar
or
sub
sbb
cmc
and
jmp
fistl
adc
arpl
pop
push
aas
push
aaa
adc
inc
loopne
out
sbbb
stos
out
mov
outsb
and
popa
frstor
popf
scas
sub
add
push
sbb
mov
push
xorl
xor
add
enter
jo
pop
mov
mov
lods
dec
mov
inc
jo
sub
adc
std
int
push
or
jle
nop
jno
sub
cmp
loop
in
dec
mov
mov
or
mov
punpckhdq
push
ret
sbb
sbb
roll
adc
pop
and
int
lea
sbb
xor
dec
inc
pop
add
shlb
imul
cmp
mov
fisubs
sarb
jne
sbb
aad
or
loope
mov
sti
scas
movb
mov
lret
inc
push
add
sbbl
push
sub
outsb
daa
and
xor
test
orps
mov
test
sbb
les
sarl
fsubrs
mov
scas
mov
push
popa
push
lea
repnz
movsb
jns
jg
xor
imul
ja
nop
jg
ficoms
in
pop
xor
pop
mov
mov
hlt
ljmp
inc
adc
mov
nop
adc
sub
or
mov
mov
sbb
aam
in
add
push
push
test
xor
sbb
dec
mov
movsl
into
mov
pop
pop
push
lea
mov
in
test
sub
inc
inc
sbb
and
sub
dec
or
frndint
aad
fwait
jmp
or
aas
aaa
push
and
shll
les
decb
jns
imul
cmpb
enter
into
movsl
or
pop
push
xchg
data16
sahf
shlb
bound
je
xchg
sub
xchg
pop
adc
jns
cs
jne
push
test
fxch
xchg
in
adc
lods
inc
push
sub
cmp
sub
fcoms
cld
xlat
fsub
xor
pop
pushf
movsb
jmp
mov
dec
inc
mov
pop
call
and
mov
dec
data16
negl
fdivr
mov
and
xor
xchg
xlat
jnp
mov
dec
add
jg
push
mov
inc
cltd
subb
cld
dec
lds
jne
movsb
xchg
jge
pop
sbb
test
inc
inc
mov
mov
inc
loop
cmpsb
jle
jnp
int3
mov
dec
inc
ret
dec
xchg
xor
rclb
jbe
jns
cmp
ljmp
sbb
stos
aad
sbb
bound
or
cmp
add
out
fcoml
outsb
or
shll
push
aad
out
je
jo
cmp
add
ficompl
lods
movsl
or
aaa
popa
imul
adc
inc
pop
in
out
ljmp
shll
call
or
cltd
sbb
sub
dec
mov
or
shll
data16
pop
sahf
testl
insb
call
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
popf
push
push
add
inc
pop
jp
stos
lds
test
hlt
mov
ss
pop
outsl
jle
pop
and
adc
lds
int3
push
pushf
push
mov
adc
push
iret
sub
cmc
sahf
sti
inc
sbb
jle
mov
lahf
jge
popa
mov
cmp
jmp
nop
jne
mov
movsb
das
movsb
pushl
mov
add
mov
mov
mov
into
ja
push
mov
sub
cltd
out
inc
mov
adc
lret
xor
pop
insl
push
inc
popa
push
pop
scas
push
push
mov
jno
fwait
cmp
mov
xor
insl
testl
shl
xor
jle
sub
xor
repz
xor
xor
adc
sub
pop
in
in
xchg
pushf
mov
and
xchg
inc
into
push
daa
outsl
bound
mov
cmp
push
cli
sti
pop
movsb
adc
pop
jno
inc
fwait
addr16
dec
jp
xchg
xchg
mov
mov
mov
xchg
std
mov
stc
dec
xchg
stos
lahf
adc
pushf
fmul
pop
sbb
jno
xchg
roll
and
inc
mov
lahf
shll
cmovae
imul
dec
inc
stos
mov
rcl
pop
xor
test
mov
mov
adc
in
lret
push
jno
js
rclb
push
add
sti
dec
push
addr16
lret
iret
xchg
aaa
cmp
adc
pop
aad
mov
cld
or
push
in
jmp
andl
mov
js
stos
mov
lahf
jle
add
cli
loop
incb
mov
sub
insl
xor
nop
sub
aas
pop
repnz
cld
pop
push
gs
adc
fwait
outsb
mov
push
inc
arpl
dec
das
and
ret
pop
and
jns
push
and
adc
or
mov
leave
push
je
imul
jns
sub
insb
mov
xor
lahf
test
icebp
xchg
daa
inc
and
push
pop
loope
inc
cltd
add
in
pop
adc
adc
adc
out
xchg
sub
jns
jge
xchg
aad
pop
sub
xlat
inc
addr16
mov
or
sub
mov
xchg
popl
mov
push
or
add
les
sbb
pop
cmp
jg
or
std
xchg
cmc
movb
inc
loope
in
sub
pop
movsw
push
mov
add
ljmp
lock
pop
pop
mov
int3
outsl
fdiv
lods
lock
push
adc
mov
mov
movsl
je
les
or
leave
dec
repz
rclb
or
lahf
dec
jmp
aam
pop
pop
jae
push
and
mov
insb
ret
sbb
push
xchg
cmp
mov
push
pop
cmp
adc
mov
jmp
fstpl
dec
xchg
push
dec
xor
jns,pn
adc
mov
push
jge
add
aam
clc
and
mov
pusha
and
daa
aaa
cmp
leave
inc
movsb
mov
and
nop
bound
aas
cmp
inc
jns
sub
fs
jne
sti
push
leave
stc
add
sbb
mov
and
xlat
adc
sub
ds
sahf
bswap
enter
push
mov
cmp
or
push
mov
jp
movsl
xchg
stc
aaa
jle
inc
jl
iretw
jnp
sub
movsl
push
or
stos
pop
jne
cmpsl
fmull
mov
ror
out
mov
lret
push
test
xor
pusha
mov
mov
notb
cld
popa
inc
lock
mov
xchg
adc
xor
ja
jno
sarb
loopne
inc
ret
mov
xchg
cmp
sbb
mov
js
xchg
ss
xchg
fs
ret
rorb
ljmp
xchg
mov
daa
outsl
lret
xlat
repnz
add
push
test
push
and
xor
jb
repnz
adc
into
add
pusha
lea
mov
enter
cmp
mov
lods
or
mov
xchg
xor
incl
or
frstor
jbe
pop
sbb
mov
fsub
xchg
add
fucomip
mov
mov
mov
mov
jbe
sub
stos
in
dec
push
or
orl
xor
dec
sub
and
jbe
jl
and
lahf
or
je
std
dec
insl
loopne
inc
fbld
jecxz,pt
repz
pop
push
xchg
pop
shll
xor
loopne
iret
insb
ret
movsb
pop
jmp
frstor
xor
mov
lret
iret
cmp
inc
out
je
out
xchg
pop
inc
push
out
ror
icebp
inc
aas
aaa
clc
shrl
add
mov
fcompl
sub
fbstp
jecxz
shrb
xlat
adc
testb
out
mov
adcb
pop
shrb
fldl
mov
pop
daa
addb
push
std
inc
add
arpl
push
sub
mov
mov
sbb
and
loope
push
ret
jbe
cli
orb
inc
in
add
add
or
sub
and
cmp
cs
inc
push
inc
xor
fdivrs
stc
pop
ret
mov
mov
leave
push
shrb
push
cmp
popf
adc
xchg
xor
cli
mov
stc
pop
jbe
rolb
jge
and
mov
sti
jl
inc
decb
dec
pop
mov
fidivs
fisttps
cmpb
xlat
jl
xchg
gs
sbb
pop
in
ss
mov
iret
sub
sub
fisubrs
into
jmp
es
adc
mov
aas
sbb
in
mov
fsubrs
push
push
gs
lock
pop
cmp
daa
mov
xor
popa
in
test
loopne
pushf
dec
and
in
popa
or
test
orl
adc
cmp
jo
je
pop
sahf
mov
aam
int
sti
ret
in
clc
inc
rcll
aas
sub
mov
shll
hlt
imul
dec
push
sub
out
push
idivl
push
sub
and
cmp
hlt
jg
aam
lahf
xchg
push
leave
push
repz
sub
cmp
call
leave
ret
data16
cmp
lahf
mov
pop
jns
idiv
mov
lds
xchg
and
xor
pop
rorb
sahf
push
daa
cltd
push
mov
adc
ljmp
xor
test
inc
adc
aaa
xor
aad
fdivrl
xchg
lahf
jo
adc
sub
aaa
lahf
add
repnz
pop
add
dec
leave
aam
pop
xchg
fstpt
mov
das
cltd
xchg
leave
aaa
mov
insb
push
add
add
jge
pushf
cld
add
xor
addr16
mov
mov
les
aas
mov
lods
jmp
dec
ljmp
mov
jecxz
ja
push
cmp
mov
xor
dec
dec
imul
and
fwait
cs
sub
jl
mov
lock
and
push
xchg
xchg
xchg
lods
mov
cmp
testl
inc
jp
jb
aas
test
mov
std
mov
jnp
imul
call
loope
mov
add
lahf
popa
add
ret
hlt
adc
in
add
pop
mov
test
ret
rclb
and
jecxz
add
mulb
std
cmp
ja
lods
pop
bound
and
les
jmp
or
inc
in
loopne
mov
js
cmp
mov
adc
es
ds
les
push
ret
mov
mov
adc
mov
in
mov
dec
inc
add
and
mov
out
cmc
imul
icebp
in
cli
dec
push
sub
mov
insb
hlt
loopne
add
bound
and
and
cmpsb
mov
jl
and
add
mov
in
pop
ret
mov
or
or
xchg
insl
sbb
out
std
mov
orl
cmp
mov
hlt
stc
addr16
stc
pop
repnz
mov
xor
add
movsl
pushf
aas
and
dec
pushf
fists
punpcklbw
mov
cwtl
xchg
idiv
mov
outsb
int3
jno
rcrb
lods
lock
test
inc
xor
or
jecxz
repz
nop
iret
lcall
jmp
mov
mov
dec
dec
jmp
repnz
push
ret
ja
es
test
mov
test
jmp
je
int
leave
push
leave
mov
xchg
push
fwait
push
loop
insl
sti
lock
mov
je
leave
push
movsl
in
shlb
cmp
mov
and
cli
je
shr
cmp
ret
lods
sbbl
cmp
mov
dec
jne
adc
mov
hlt
or
movsl
cltd
or
mov
jb
push
or
jecxz
push
fwait
mov
mul
push
inc
jmp
arpl
mov
dec
movsb
add
scas
popf
lods
fildl
dec
testl
dec
arpl
and
daa
mov
mov
cmc
insl
add
mov
sub
fwait
inc
arpl
dec
pop
inc
sbb
xlat
xchg
cld
mov
das
jg
lock
jns
mov
adc
mov
sub
xor
and
mov
cmc
pop
cs
adc
ss
pop
stos
cmpsb
adc
mov
sub
fstp
out
js
cmp
clc
xor
in
idivb
cltd
or
mov
cmp
mov
repnz
je
xchg
dec
lahf
mov
jecxz
mov
mov
stos
pop
jecxz
lcall
dec
pop
lahf
pop
sbb
das
push
test
sub
inc
push
loopne
loopne
mov
jns
cwtl
cmpsb
cltd
insb
mov
cmp
sbb
fsubp
orb
pop
dec
iret
and
aam
or
shlb
fcompl
jl
mov
push
mov
sbb
into
mov
push
dec
pushf
into
insb
mov
std
cmp
add
xor
fwait
lea
pop
pop
idivb
adc
pop
mov
sbb
int
push
pop
aas
insb
jb
mov
push
mov
jmp
add
xor
test
xchg
mov
pop
push
fstpl
pusha
jnp
cmpsl
add
test
fsubrl
daa
pop
mov
cmp
clc
cmp
addr16
and
scas
mov
rorb
stos
bnd
call
and
leave
in
js
rclb
pop
std
mov
pop
test
or
and
add
or
test
mov
xrelease
divb
and
test
fsubrl
mov
fimuls
or
cmp
xchg
mov
sub
outsb
mov
inc
dec
adc
dec
pop
lret
adc
cli
cmp
or
cmpsb
scas
lahf
popf
and
in
adc
jb
sbb
add
les
je
or
int
jae
push
in
or
int3
pop
mov
dec
add
mov
inc
fldt
xchg
jbe
inc
adc
pop
loope
cmp
out
xchg
push
sti
fcmovne
sbb
xchg
mov
push
xor
stos
and
pop
xor
in
out
inc
insl
mov
aad
addr16
insl
fdivr
mov
or
mov
loop
mov
jns
xchg
andl
inc
push
cmpsl
mov
jo
out
add
iret
mov
cmp
out
jbe
xchg
lea
iret
adc
mov
lahf
cmc
sub
push
leave
dec
jbe
adc
or
vpmacsdd
mov
mov
cmpl
pop
mov
je
cmp
xlat
cwtl
push
mov
push
adc
out
sub
jbe
push
mov
xchg
cmp
sub
lds
inc
rorl
insl
mov
pop
testl
xchg
pushf
mov
jns
cmp
or
addr16
jl
repnz
jmp
sarb
lods
inc
dec
mov
enter
mov
test
xchg
jle
mov
sbb
fldl
mov
mov
rep
push
push
pop
test
popa
mov
clc
jle
fiadds
call
stos
movsl
test
cmp
ret
mov
mov
jb
dec
fdivs
mov
das
out
loope
push
mov
out
insb
pop
mov
and
push
aas
test
mov
pop
inc
in
bound
arpl
mov
sub
roll
data16
push
xchg
pop
and
aaa
and
or
mov
push
leave
inc
addl
xchg
dec
jns
xchg
loope
mov
fisubl
sahf
xlat
xlat
push
jmp
sti
adc
jae
out
loope
xor
push
cmp
push
mov
mov
inc
xchg
add
add
sbb
pop
dec
pop
addl
nop
dec
inc
mov
incl
rcll
sbb
and
mov
and
push
pop
mov
hlt
dec
pop
sbb
ficoms
mov
xor
les
pop
les
lcall
ja
xor
push
dec
or
daa
in
test
add
add
dec
push
push
cmp
push
fdivl
xlat
or
shrb
jmp
or
pop
movsb
pop
je
push
lods
rcrl
pop
mov
lahf
hlt
insl
outsl
push
imul
outsl
inc
sarb
je
fwait
mov
mov
xor
xor
or
sbb
mov
push
jecxz
fisttpl
pop
loopne
rorl
push
sahf
inc
fbld
jno
cmp
data16
outsb
loop
and
aas
mov
jp
and
jmp
mov
out
aad
mov
cmp
ret
dec
push
mov
es
xchg
inc
out
pop
add
fsubrl
aam
xorl
and
inc
fdivs
adc
jge
lcall
in
jge
xor
rcll
std
out
call
mov
je
iret
jbe
adc
pop
mov
sub
pop
jl
fnstsw
pop
mov
xchg
push
sub
addl
dec
adc
adc
cmp
clc
mov
mov
and
xor
stos
xchg
pop
sub
lds
add
pop
lds
xor
cmc
jl
stc
fdivrs
lock
in
sbb
xor
jmp
outsl
jnp
push
stos
cmp
cmpsl
clc
xchg
inc
fs
sarl
adc
cmp
aam
lahf
outsl
divb
popf
sub
insl
mov
ret
inc
int
aad
xchg
push
xor
sbb
fisubrs
push
sub
movsb
sahf
adc
fcmovnbe
aam
pop
gs
pop
or
inc
push
test
and
sub
jl
sub
lea
out
lock
cli
repnz
repz
les
push
insb
sub
jae
dec
mov
test
xor
ret
fcmovne
push
ror
cld
push
pop
test
lret
orb
sub
inc
add
sub
cmp
mov
push
jo
jp
fstps
push
lock
rorl
lds
and
cmpsb
outsb
data16
sbb
enter
mov
jbe
pop
xor
out
xchg
scas
mov
packssdw
adc
lods
lock
add
bound
iret
sbb
fs
dec
clc
dec
mov
es
push
scas
fst
or
testl
cmpsb
mov
ljmp
scas
loopne
stos
lcall
enter
sti
ds
aad
sbb
int3
dec
in
enter
gs
pop
mov
arpl
repnz
fstp
jb,pt
pop
dec
cltd
fisttpll
dec
xchg
out
mov
test
fs
repnz
push
pop
jmp
push
inc
or
dec
mov
mov
pop
popa
outsb
cmp
icebp
lcall
mov
cli
fmull
movl
and
mov
mov
lds
scas
push
jne
inc
out
jnp
dec
mov
mov
mov
test
jno
sti
call
mov
push
test
jmp
out
loop
mov
add
xor
sarl
pop
cmp
cmpsl
lcall
icebp
loope
aam
negl
test
rcll
ljmp
pop
daa
and
adc
dec
sub
addr16
jno
inc
in
inc
dec
mov
cmc
shl
out
sub
test
ja
das
popa
icebp
ret
mov
pop
add
mov
push
and
movsb
pop
insl
filds
xor
mov
mov
push
mov
inc
repz
pop
jmp
pop
add
sub
inc
repnz
push
push
scas
inc
andb
jge
mov
out
test
jno
inc
mov
jge
xor
test
shlb
in
cli
jo
hlt
shll
or
sub
push
adc
jae
add
mov
cmp
icebp
std
sub
mov
pop
jp
shr
or
or
arpl
repz
and
aad
or
add
add
jne
inc
sbb
loop
fistpl
sbb
es
pop
aaa
mov
dec
add
call
ds
and
or
add
cli
sbb
call
js
fcmovnu
xor
mov
movsb
dec
or
sub
cltd
push
xor
int3
icebp
out
inc
and
pop
xchg
mov
in
xlat
enter
repnz
push
mov
mov
in
add
stc
jnp
repnz
cwtl
lock
sub
xchg
data16
inc
dec
sbb
outsb
and
inc
sbb
div
push
clc
cld
mov
aaa
jo
movsl
mov
loope
les
xchg
and
mov
mov
aas
cmp
push
clc
inc
test
and
jle
push
adc
cld
popf
mov
sti
repz
jmp
pop
cmp
or
pop
push
mov
lock
add
aad
lea
pop
xchg
push
addb
fstp
leave
cld
in
push
push
inc
mov
mov
mov
push
pop
adc
mov
mov
les
rcrb
inc
cmpsl
lods
inc
mov
cs
inc
leave
in
movsb
lods
fisttps
mov
loopne
and
xchg
mov
jg
test
push
popl
jge
xchg
ficoml
jmp
pop
sahf
lock
mov
mov
or
hlt
sub
repnz
aad
imul
shll
cli
das
mov
pushl
mov
or
movnti
out
hlt
mov
adc
xchg
dec
jns
mov
dec
jmp
dec
aaa
mov
pop
inc
dec
push
adc
adc
fsubl
jmp
jp
inc
fistpll
mov
leave
push
scas
xchg
sub
push
inc
xchg
arpl
hlt
xchg
mov
fists
daa
xchg
mov
out
cmp
clc
add
dec
inc
mov
scas
icebp
jl
cmpsl
adc
out
enter
popf
adc
ds
mov
adc
cmc
xor
pop
loop
jbe
lock
cmp
stos
mov
pop
xchg
cmp
lret
scas
and
in
shll
dec
or
mov
ja
mov
adc
jne
iret
loope
push
icebp
cmp
frstor
jno
lock
cmpsb
jl
adc
cli
jne
pop
mov
cli
cld
rolb
rorb
into
rorb
inc
push
cmp
push
push
or
cmpsl
xchg
xor
dec
out
push
inc
add
out
pusha
xchg
adc
sbb
negb
sub
ret
in
mov
push
call
fidivl
or
roll
addr16
jne
js
notl
mov
inc
pop
add
push
negl
lock
out
shl
push
xlat
xor
fisubs
das
mov
lret
mov
jg
arpl
mov
arpl
inc
jp
xorb
add
fidivrs
lock
gs
aaa
cltd
sub
imul
aam
mov
xchg
loopne
loope
or
mov
test
inc
out
adc
fs
repz
movb
cmp
add
cwtl
out
loopne
add
out
mov
popa
out
sub
test
adc
lea
lea
push
push
mov
sub
in
icebp
xor
cs
daa
mov
mov
aam
add
mov
jmp
imul
ss
test
mov
mov
push
sbb
xchg
imul
shl
mov
inc
jmp
aam
jg
dec
add
int3
jae
fadds
add
jmp
mov
sub
test
fwait
je
arpl
xchg
sub
jnp
jg
int3
test
inc
jne
int3
sbb
jb
repz
es
jno
lods
pop
rclb
testb
xchg
lret
mov
shrb
push
out
inc
cmp
mov
pop
fdiv
pop
inc
mov
sbb
std
addr16
mov
cmp
and
pop
das
cmp
jmp
lcall
test
mov
sub
xor
cmpsl
imul
push
mov
fldcw
pop
out
inc
decb
push
xchg
jle
and
xchg
pusha
mov
sar
aad
lret
add
fisubrl
aam
out
pop
jno
enter
mov
and
jg
add
xchg
cmp
add
out
inc
inc
pop
lea
push
xor
fwait
shl
push
lahf
mov
push
and
cmpsl
outsl
int3
mov
loop
subl
andl
cld
addb
mov
push
popa
arpl
xor
in
int
shl
insb
xchg
inc
and
push
test
out
cmc
push
and
mov
mov
adc
add
sbb
in
push
pop
int3
mov
push
cltd
aas
inc
sbb
lods
pusha
inc
xchg
stos
jno
dec
rcrl
fucom
int
jo
sub
push
push
pop
add
sbb
adc
divb
lahf
push
out
lock
cld
out
mov
mov
mov
in
hlt
out
adc
stos
jp
xor
jb
decb
inc
into
hlt
dec
ret
push
cmpsb
mov
adc
lret
mov
push
pop
sub
push
and
dec
gs
imul
jg
inc
test
out
imul
fmulp
jb
cld
fcoms
ss
jno
xor
outsl
inc
lret
insl
imul
cmp
in
add
rcl
lea
mov
sub
nop
shlb
in
xchg
add
aam
xchg
lds
inc
mov
push
int
and
adc
sub
push
pop
adc
or
cmp
test
std
push
stc
sbb
loope
inc
stos
inc
pop
xchg
ret
add
cmp
out
inc
xchg
lret
push
fiaddl
out
loope
outsb
ror
xchg
xchg
pop
cld
inc
and
xchg
testb
shll
jl
jge
dec
inc
mov
imul
jl
adc
subb
dec
dec
mov
dec
sarb
call
daa
loopne
and
or
and
add
aam
push
add
dec
pop
jbe
shrb
scas
xchg
adc
xchg
xor
add
mov
clc
repz
out
mov
stc
xchg
or
inc
dec
data16
xor
push
test
out
inc
in
mov
mov
push
sub
add
xor
inc
cmpsl
sbb
mov
cmp
insb
lods
rcll
in
bound
pop
jns
int3
mov
push
cmp
cltd
inc
cli
call
mov
lock
jp
jge
fsubs
nop
jb
push
arpl
jmp
sarb
jb
outsl
push
or
sbb
out
int
jae,pn
adc
popa
outsl
loope
lcall
shll
add
mov
add
test
in
leave
add
jl
lahf
pop
or
les
shll
mov
loopne
mov
mov
xchg
cld
lock
pop
mov
pop
insb
mov
and
or
add
or
mov
mov
xor
btr
adc
and
testl
leave
mov
push
sub
mov
jl
repnz
xor
leave
push
paddq
mov
idivb
daa
cmpsb
ds
inc
jns
or
pop
dec
dec
popf
rcll
xchg
insb
into
add
mov
cmp
mov
in
xlat
stos
cmp
jmp
and
imul
jne
xchg
xor
sub
xlat
jae
ss
and
pop
ror
dec
jg
lock
push
lods
inc
xlat
xlat
lods
loope
popf
stos
push
stc
add
sbb
test
aas
push
movsl
and
xor
push
sub
xor
and
and
push
scas
movups
divb
imul
fs
leave
or
inc
push
repz
imul
mov
fisubrs
jbe
pop
int
lcall
inc
movsb
clc
dec
pop
mov
lcall
add
movsb
out
jns
cmc
daa
mov
fs
push
hlt
std
in
inc
daa
test
add
push
je
adc
mov
mov
lods
mov
sub
aam
adc
inc
movsb
and
sti
and
lret
icebp
es
dec
std
es
jmp
or
dec
cmp
lods
dec
sbb
loopne
pop
cmc
pop
jge
add
xchg
xchg
cwtl
jnp
in
fsub
and
mov
int3
stos
das
divb
outsb
dec
adc
adc
fsubp
inc
rclb
scas
and
mov
daa
inc
or
orl
stc
inc
pop
dec
mov
jmp
dec
ljmp
adc
pop
notl
out
pushf
aam
pop
add
mov
mov
fisubrl
stos
lods
jo
xlat
cmc
pop
icebp
push
movsb
sbb
xor
lods
rol
data16
scas
mov
lock
push
sub
jne
mov
addr16
les
out
mov
icebp
fsubrl
cmp
lea
fsubp
and
and
mov
pop
pandn
repz
push
stc
xchg
mov
mov
jecxz
shlb
or
repz
cmp
sub
test
test
out
pop
fwait
dec
gs
pop
enter
shlb
jne
pop
loop
push
jp
mov
test
jecxz
cld
into
fmuls
cmp
xchg
sub
adc
pop
mov
test
cmp
js
iret
movsl
pusha
fisttps
cmp
or
mov
jge
daa
pop
sbbb
or
out
daa
pop
int3
add
cmp
pop
cmp
cli
popl
sbb
scas
inc
gs
and
mov
fs
xlat
addr16
cmpsl
es
jbe
jbe
mov
sbb
addl
hlt
mov
push
lret
rorl
lahf
pop
sbb
and
mov
xchg
imul
push
mov
sub
adc
in
cmp
ret
ret
dec
and
pusha
popf
fcomps
jnp
or
push
xchg
adc
mov
sbb
push
into
mov
push
sbb
fadd
jmp
or
xchg
or
aam
inc
mov
push
push
shl
inc
stos
test
sbb
pop
xchg
pop
outsb
mov
jae
pop
scas
mov
and
std
lcall
add
sub
cli
push
out
push
mov
dec
dec
bound
jnp
enter
mov
xor
out
lret
sub
push
and
xchg
insb
fwait
push
push
cld
jp
add
nop
mov
addr16
inc
mov
shrb
lahf
fwait
inc
push
int
cmp
add
mov
or
mov
dec
fnsave
fdivrp
loope
mov
dec
cmpsb
stos
insb
mov
test
in
jg
xchg
test
test
repz
xor
mov
inc
rolb
in
into
sbb
sbb
fsubrl
add
sub
dec
sbb
xor
pop
in
and
cwtl
daa
rol
pop
xchg
and
popf
mov
adc
out
mov
add
test
dec
cld
out
xchg
incl
dec
arpl
sbb
mov
lds
movsl
adc
add
sarl
jb
mov
cmp
add
xchg
xor
add
sub
mov
nop
cmp
dec
ja
int3
pop
cs
inc
pop
cmp
adc
loopne
lock
fldenv
ja
adc
fsubs
or
xor
pop
idivl
sarl
inc
les
es
push
pop
loopne
mov
xorl
pop
pop
push
lods
sbb
xchg
xchg
jnp
ja
bound
cmp
ret
frstor
test
mov
xchg
inc
loope
jge
sbb
lock
ds
pop
int
es
dec
mov
adc
pop
loope
dec
pop
add
stos
pop
inc
xchg
dec
sbb
cmp
clc
adc
push
outsb
xchg
negl
imul
insl
dec
xor
arpl
es
bound
dec
gs
push
js
mov
test
outsl
int3
cmpsb
dec
xorb
pop
push
into
cwtl
lods
adc
bound
jno,pt
xorb
pushf
popa
push
add
cmpsl
je
jno
cmpsb
xor
or
dec
cmp
jno
xchg
cltd
sub
out
stos
sbb
push
mov
inc
sbb
cmpsb
inc
fistpll
fisubs
movsl
add
lcall
xchg
mov
cmp
rorl
mov
pop
pop
cmp
push
sub
sarl
ficoml
das
int3
dec
lret
jg
shrb
int3
mov
cmp
push
shrb
roll
daa
cmc
fsubl
xchg
pop
sbb
jns
test
pushf
mov
lret
mov
test
or
pusha
pop
and
xchg
pop
jle
sub
in
mov
jne
lahf
xchg
in
sti
shll
repz
lods
xchg
mov
pushl
icebp
sbb
mov
lret
jbe
add
in
addl
mov
push
add
scas
int3
shrb
xchg
push
aad
pop
fisubrs
ret
push
pusha
xor
mov
jle
sti
jl
xchg
mov
cwtl
and
aaa
xchg
sti
xchg
lahf
clc
xor
xor
lret
push
jmp
les
ds
push
mov
cmp
push
mov
push
rcrl
sahf
dec
sub
in
push
insb
push
lcall
lcall
sahf
xchg
dec
inc
jbe
in
mov
inc
lea
jnp
mov
mov
inc
cmp
lods
xchg
sbb
add
rcrl
test
add
sub
iret
mov
sub
mov
insl
mov
js
mov
mov
rorl
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
dec
addr16
clc
in
jp
pop
jp
call
inc
and
sub
out
in
fs
sbb
cmpsl
sub
and
jbe
cmpsb
clc
xchg
test
dec
hlt
jmp
ss
mull
cwtl
and
jae
daa
out
pminsw
xor
cmp
stos
insl
lret
add
lea
pop
clc
ret
mov
xchg
leave
jnp
pushf
xchg
fsubrl
pop
mov
loop
in
mov
and
ds
lahf
test
dec
stos
sarl
jmp
pop
mov
add
pop
out
push
aaa
scas
jb
fcmovnu
and
cmpb
jl
push
das
dec
add
test
mov
dec
outsb
xor
xchg
dec
mov
icebp
xor
sbb
ret
pop
cwtl
lods
cmp
jmp
scas
out
pop
daa
xchg
stos
pusha
stos
mov
adc
test
lock
cwtl
mov
and
data16
sbbl
fwait
add
xchg
mov
and
xor
jl
int
mov
lahf
mov
icebp
cld
std
loopne
int
or
xor
dec
xchg
xchg
or
jo
in
idiv
ja
mov
lods
fsubs
push
jns
mov
push
sti
gs
subl
cmp
gs
in
lret
sub
jg
gs
or
xor
push
or
cli
ret
pop
dec
mov
xchg
in
ljmp
or
addr16
cld
xchg
sub
dec
pmullw
test
dec
push
leave
cmp
lret
shr
pop
mov
fidivrs
int3
or
jnp
ja
push
pop
push
fnsave
ds
into
in
lcall
xchg
pop
ret
jg
stos
xchg
daa
xor
outsb
daa
decb
cli
mov
push
mov
rorb
stos
cmp
or
xchg
xor
push
fcomps
call
inc
mov
pop
sub
cmp
nop
mov
push
sub
in
popf
cltd
ret
pop
jl
movsl
mov
hlt
es
inc
mov
lods
cmp
mov
xlat
adc
mov
inc
jb
xchg
push
pusha
pusha
push
cs
jns
inc
mov
sub
add
pop
jb
dec
adc
mov
jg
mov
cmp
xchg
ljmp
mov
jne
cmp
mov
jb
add
jg
cmc
out
jmp
cmc
dec
xchg
fidivrs
hlt
add
stc
dec
xchg
push
data16
push
rcll
xor
shr
dec
dec
andl
pusha
ds
adc
inc
and
test
dec
stos
cmpsl
sbb
sbb
jp
popf
mov
push
mov
mov
cmp
xchg
xchg
or
mov
pop
xchg
sbb
lods
add
out
ret
int3
leave
dec
sub
les
pushf
sbb
sbb
pop
mov
cld
xchg
pushf
push
jo
clc
dec
fiadds
xchg
hlt
jg
cmp
cmpsb
or
hlt
push
dec
inc
imulb
and
push
xchg
dec
dec
cmpsl
jne
or
in
out
or
sub
mov
bound
or
xchg
push
fsubl
inc
mov
fdivrs
es
repnz
scas
jp
aas
xchg
das
jne
je
int
pop
sub
repnz
jge
stos
jecxz
sbb
dec
stos
outsl
sub
lods
stos
insl
je
push
sahf
sbb
loopne
movsb
outsb
mov
fmulp
fucomp
pop
fs
jl
sub
adc
add
pop
and
jg
pop
iret
xchg
push
cmp
lods
je
clc
pop
test
push
mov
lret
js
add
sbb
adc
movsl
mov
pop
sbb
sbb
jae
sub
into
mov
jo
cs
aad
and
jmp
sub
cmp
fisttps
mov
lret
roll
test
scas
aaa
or
imul
mov
out
subl
frstor
lock
lahf
and
mov
lret
hlt
mov
mov
lods
cmp
dec
xlat
fdivrp
inc
sahf
push
std
fisubl
push
ss
inc
push
jb
mov
ret
cmp
xchg
stos
jns
inc
sub
shlb
pop
lahf
jmp
pop
shrb
jbe
xchg
fwait
scas
leave
xchg
int3
jmp
jbe
je
imul
dec
inc
pusha
sbb
scas
cmp
std
stc
xchg
bound
int3
add
xchg
outsb
fstps
imul
fcmovne
repz
shll
push
insb
imul
icebp
or
testb
mov
mov
push
cltd
cmpsb
push
aad
add
mov
aad
imul
repnz
arpl
insb
mov
sub
sbb
out
dec
fwait
cmp
xor
mov
xor
jno
faddl
inc
adc
leave
enter
stc
test
mov
popf
insl
in
outsb
stc
inc
stos
in
adc
orl
popa
sub
fnsave
cmpsl
mov
fmuls
inc
dec
adc
or
shr
sub
mov
mov
add
les
sbb
insb
gs
shlb
adcb
xorl
push
inc
addl
adc
jo
mov
insl
movsb
sbb
push
jmp
adc
dec
mov
jle
out
roll
in
mov
and
dec
jnp
lcall
sbb
xor
lock
mov
test
add
out
popf
pusha
push
sarb
outsb
push
jnp
push
sbb
sub
out
push
pushfw
pop
in
sahf
insl
xlat
out
cwtl
xor
in
insb
mov
jnp
push
and
pop
inc
or
jecxz
es
popf
stos
pop
push
jae
mov
or
inc
jg
inc
lret
les
sbb
ss
stos
movsl
mov
adc
cltd
and
lahf
pushf
adc
mov
in
jo
out
je
adc
movsb
inc
sbb
push
push
jne
aaa
sbb
jb
add
xor
adc
or
fs
mov
mov
cmp
xchg
xchg
xor
push
scas
imul
add
int
scas
jnp
add
mov
adc
fsubp
and
test
mov
dec
mov
int3
test
pop
mov
loop
movsl
pushf
fwait
push
push
jae
pop
add
mov
pop
adc
sbb
fcomp
lcall
mov
cmpl
jnp
jle
iret
rol
stc
shll
or
jmp
mov
and
sbb
cmpb
inc
ds
adc
xor
fwait
mov
lock
movsb
add
cmpsb
aas
xchg
sub
xchg
ljmp
lret
mov
testl
into
popf
dec
aas
iret
pop
sbb
pop
jbe
cmp
sbb
mov
push
mov
aas
in
inc
das
stos
sarb
filds
mov
xor
mov
pop
adc
aas
cltd
or
out
and
insl
in
dec
in
mulb
jp
mov
mov
xchg
icebp
xor
sbb
pop
mov
hlt
pop
dec
cwtl
dec
inc
sbb
jmp
sti
repz
out
xchg
inc
xor
in
mov
shlb
insl
aad
mov
inc
out
lock
cli
sub
int
xchg
js
ss
fmuls
adc
rcrl
sbb
mov
sub
xchg
aas
inc
inc
das
inc
mov
push
sbb
push
leave
lret
outsb
decl
scas
add
das
xor
pop
lcall
push
jl
pop
adc
jp
das
pusha
insb
popa
pop
xchg
daa
call
pop
sti
std
mov
push
call
mov
enter
insl
cmp
jne
add
sub
mov
rolb
adc
xchg
dec
pcmpeqw
sbb
ja
je
divb
xchg
add
push
xor
call
std
clc
lahf
push
cwtl
xchg
xor
cli
or
cmp
out
das
mov
movb
or
xor
push
adc
stc
gs
and
push
push
repnz
popa
mov
or
sub
dec
lock
es
xchg
jo
adc
mov
sub
lods
or
inc
mov
sub
testb
mov
xchg
jmp
test
or
scas
add
insl
lea
int
adc
dec
dec
inc
mov
rcrb
mov
fstps
jbe
mov
cmp
jns
mov
popf
mov
cmpb
mov
sbb
call
push
add
and
arpl
sbb
pop
dec
fisubrs
fiaddl
das
mov
pop
lods
jns
addl
xor
xchg
xor
cld
push
push
mov
imul
daa
mov
mov
lret
xchg
insb
inc
fadd
pop
sahf
xchg
in
sti
pop
adc
arpl
xchg
cmp
aam
das
add
dec
enter
jp
pop
inc
mov
lcall
lock
or
ficomps
jp,pn
cmpsl
lret
pop
jne
jbe
and
or
mov
fnsave
pop
test
dec
mov
jmp
xor
push
mov
sti
sti
mov
cli
jns
cmpsl
out
popf
fcomps
adc
inc
out
push
or
xchg
adc
pop
pop
lds
xchg
inc
mov
mov
push
leave
mov
xor
stos
xor
test
xchg
lds
push
call
inc
pop
sub
ljmp
push
and
inc
nop
scas
loope
xchg
out
mov
or
es
mov
imul
in
adc
add
mov
test
lret
mov
sub
mov
sub
stos
sbb
jns
cwtl
aas
sub
push
jle
jns
mov
jbe
rolb
adc
xchg
cltd
sbbb
ret
xor
fmuls
nop
cs
ja
cwtl
mov
rcrb
pop
lea
or
pop
ds
int
push
pop
mov
cli
fwait
xchg
add
hlt
repnz
or
xor
test
push
pop
jno
jp
and
add
inc
push
push
stos
rorb
mov
into
insl
enter
push
mov
sbb
cli
test
leave
jns
insl
mov
jbe
fnsave
and
je
lds
inc
push
push
xchg
xchg
sub
xor
dec
jle
fdivl
adc
out
jns
dec
add
ret
pushf
aas
push
mov
test
pop
popa
dec
pop
sbb
or
sahf
pop
pop
sbb
or
mov
pushf
pop
mov
and
mov
lret
movsl
scas
jo
mov
cs
push
jbe
jg
cmp
repnz
xchg
test
add
push
or
js
cmpsb
ss
sbbl
stos
stos
sub
clc
xorl
push
xor
gs
sub
push
imul
popa
sbb
mov
pop
fwait
in
sbb
imul
push
fwait
push
loop
stos
ds
outsl
out
pushf
add
push
pop
xchg
inc
aaa
xchg
push
xchg
mov
mov
daa
push
ljmp
jns
jecxz
imul
insl
sub
outsb
dec
and
ret
fnsave
push
mov
push
in
lods
lahf
push
xchg
in
jecxz
lahf
lds
cmp
xchg
push
mov
push
sbb
fidivrs
movsb
dec
pushf
pusha
pop
sbbb
outsb
mov
loopne,pt
xchg
jns
lods
and
es
and
and
fldcw
outsl
faddl
ret
bound
adcl
je
or
in
popa
dec
lods
xchg
sti
dec
lea
xchg
test
or
add
test
push
iret
mov
or
push
aad
mov
inc
clc
pop
dec
into
rcrl
loopne
in
cmp
mov
int
fcomps
pop
imul
fwait
ja
sub
mov
inc
mov
push
fistpll
mov
sarl
stos
and
pop
and
inc
push
sub
sbb
push
sub
mov
sub
jecxz
insb
mov
lcall
dec
loopne
hlt
fwait
or
cs
add
into
outsl
loopne
cs
jns
sub
subb
ss
aas
xor
rcrb
pop
popf
enter
push
sbb
mov
mov
pop
scas
sarl
mov
rcll
jne
andb
mov
iret
sub
sbb
ret
pop
pop
inc
lods
inc
xchg
dec
jnp
stos
sahf
jp
fs
jle
popf
mov
push
jb
jge
jb
sub
int
push
sub
sub
xchg
cmp
imul
fdivrs
aas
xlat
imul
fs
call
das
xchg
xchg
mov
cmp
dec
loopne
dec
imul
bound
mov
dec
or
dec
cltd
sub
addr16
mov
push
aam
cltd
and
mov
jne
lahf
push
xchg
sub
test
sti
xchg
xor
xor
mov
repnz
pop
mov
das
mov
push
mov
stos
aas
or
js
cli
mov
data16
clc
divl
repz
pop
jns
test
stos
jmp
roll
jnp
sbb
sub
repz
inc
inc
mov
or
pop
lret
adc
dec
sbb
xchg
pop
cwtl
fwait
or
pop
fs
mov
ret
dec
lods
lahf
movsl
xor
mov
inc
test
or
add
add
incb
pop
movsl
adc
cli
test
mov
rcl
repz
and
stc
cmc
cmp
or
pop
and
lahf
or
int
dec
mov
cmp
jge
jo
jg
xor
pop
pop
int3
roll
sub
mov
dec
cld
and
and
add
jg
das
in
scas
cmp
push
lret
popa
sbb
movsb
xlat
xchg
pop
lret
cmp
lahf
jmp
mov
adc
mov
arpl
jecxz
mov
les
cmp
add
sub
dec
inc
int
fstpl
loop
stc
cmpsl
mov
aad
push
popa
das
fwait
test
inc
lahf
rcrb
add
inc
setl
and
sbb
cmp
cld
sbb
shl
xchg
inc
insb
mov
nop
cmp
mov
jmp
dec
imul
imul
out
dec
pop
sub
inc
sub
add
outsl
scas
inc
inc
mov
xor
dec
fnstcw
jmp
sub
pop
shlb
push
mov
test
loope
xor
mov
mov
fwait
xorl
add
je
mov
push
mov
js
js
cld
and
and
ljmp
inc
bound
or
fmulp
jle
lds
mov
add
mov
jb
out
mov
push
inc
xchg
test
ret
mov
enter
in
mov
jle
add
cmp
inc
les
int
out
adc
push
push
cmc
addr16
push
sub
jbe
dec
sub
jge
mov
out
mov
lods
pop
lods
in
ljmp
xor
in
push
pop
pop
fsubp
add
enter
rcl
test
lret
xor
xor
arpl
fisttpl
fsubrl
in
dec
test
sbb
push
out
xor
cmp
test
mov
sub
popf
sahf
xor
popf
inc
xchg
mov
clc
adc
jle
pop
mov
shl
xchg
cmpsb
cwtl
add
pusha
dec
xchg
enter
sub
mov
jb
jl
lods
cmp
push
xor
gs
pop
jl
fs
sub
loopne
loop
dec
jne
ja
fimull
js
ljmp
adc
add
adc
das
dec
in
adc
inc
xchg
adc
push
insb
cmp
jne
push
test
mov
into
imul
sbb
rorb
arpl
dec
xchg
into
push
daa
mov
inc
and
push
push
xor
stos
xchg
subl
popa
fwait
dec
lds
cmpb
mov
lahf
mul
pop
test
rcll
add
pop
rorb
int3
mov
dec
mov
jae
shlb
jmp
testl
mov
and
int3
stos
adc
or
popa
iret
xchg
aaa
cmp
insb
sub
push
cld
pop
sbb
sub
push
addr16
sbb
xchg
add
fcompl
xchg
pop
mov
adc
aam
roll
fistpll
jp
rol
sahf
mov
pushf
mov
inc
and
jecxz
dec
cmp
cmp
xor
adc
mov
jl
insb
repnz
in
decl
xchg
lods
psllq
cmp
das
jbe
rcl
mov
pop
in
rolb
cld
roll
jge
adc
insb
push
adc
out
jp
mov
and
fsts
imul
mov
lcall
cmpb
inc
lods
adc
movsl
aas
mov
jns
dec
stc
fcompl
add
dec
aaa
sub
jbe
sbb
in
lret
fsubrp
xor
add
fldl
das
xchg
cltd
in
mov
xchg
aam
pusha
mov
add
ja
xor
rcrl
dec
add
and
mov
ficoml
in
and
dec
jg
cmp
test
sbb
adc
sbb
imul
out
or
mov
mov
or
or
shl
idivl
dec
cbtw
aad
loopne
push
sar
jp
xchg
jb
hlt
mov
xor
push
cwtl
pop
cmc
xchg
cli
fcoml
push
jge
or
imul
je
cmp
mov
sbb
push
pop
xor
jmp
sbb
ljmp
ret
popa
dec
pop
insl
rorl
and
loop
shlb
adc
scas
xor
push
stos
inc
les
lock
imul
sbb
and
dec
adc
xor
and
int3
loop
mov
sub
les
sub
mov
mov
pop
pop
in
mov
and
xchg
mov
jg
fiadds
std
jne
inc
fdivs
jl
jp
dec
ss
cmc
sub
cmc
inc
fldcw
mov
dec
or
pop
mov
inc
in
sbb
xor
and
mov
popa
adc
bound
out
ret
mov
nop
sbb
adc
adc
cli
jmp
popa
pop
scas
lret
js
loopne
cmpsl
jecxz
push
jo
push
mov
adc
xor
in
stc
aad
mov
sub
push
push
sbb
xor
repz
sysexit
outsb
xchg
outsl
sub
mov
sahf
xchg
jbe
xor
sub
mov
mov
push
mov
out
aas
add
mov
das
and
mov
vpor
loopne
sbbb
and
jle
scas
fdivrs
pop
pusha
xchg
fldenv
ror
mov
popf
inc
lcall
arpl
xchg
daa
xchg
jns
rorl
sar
pop
test
aas
sti
lret
push
mov
in
push
sbb
icebp
js
or
sub
cmp
add
xor
fmul
or
pop
jle
pushf
sbb
mov
pushl
movsb
sbb
test
mov
add
add
leave
fbld
loopne
push
stc
imul
pop
or
test
jne
adc
mov
stos
je
test
pop
in
mov
out
pusha
mov
scas
icebp
and
aas
fsub
out
sbb
test
lods
add
lret
sbb
sbb
in
sub
lods
inc
pop
jp
xchg
rorl
sbbb
movsl
xchg
and
loope
cmp
push
cld
sub
fdivs
mov
cmp
mov
sub
stos
sti
xor
dec
repz
cmp
mov
in
outsl
jbe
sub
mov
jbe
stos
ret
jl
jl
fildll
cmp
adc
pop
outsb
xchg
inc
movsb
test
mov
or
sub
xor
jmp
push
pop
rcrb
xor
movsb
in
xchg
inc
sbb
pop
jl
jbe
mov
dec
nop
lahf
stos
mov
and
aaa
test
insl
mov
jo
flds
mov
in
cwtl
repz
lcall
ljmp
pusha
add
bnd
cmp
jmp
xchg
sub
stc
xchg
sbb
dec
mov
pop
test
cs
dec
or
jl
data16
or
ret
mov
es
loopne
outsb
adc
adc
test
lods
scas
sub
data16
mov
push
stc
or
push
add
mov
mov
sbb
push
mov
mov
jle
aas
xor
rclb
ljmp
jbe
out
inc
daa
mov
rcrl
sbb
mov
pop
jmp
movsl
bound
dec
pop
dec
clc
sub
lds
xor
xchg
mov
out
xchg
test
pop
rorl
lock
inc
push
dec
stos
dec
sbb
jl
repnz
mov
pop
pop
ret
xchg
jp
jne
add
pop
add
and
ljmp
dec
fwait
mulb
push
jno
jmp
mov
ja
push
incl
sbb
mov
lret
jne
pop
nop
int
test
aam
decb
sarl
rcll
xor
lret
adc
sbb
push
sbb
mov
retw
add
adc
popf
xchg
pop
mov
mov
mov
lea
cwtl
add
pop
adc
jno
icebp
sbb
xchg
add
test
enter
or
jecxz
sub
rolb
pop
loope
sbb
shrl
cltd
xchg
mov
iret
sbb
lret
insl
ds
mov
ret
push
and
jo
fimull
sub
dec
push
sbb
lcall
mov
arpl
jg
lret
push
cltd
popf
bound
and
lock
ja
call
out
pushf
jp
mov
push
mov
mov
adcl
lock
flds
cmp
das
jne
leave
mov
pop
add
cmp
or
loopne
lods
xchg
insl
in
pop
scas
aaa
ja
or
cmp
sub
inc
fdivrs
mov
orl
je
out
fldl
pop
outsb
jmp
rcr
lock
pop
or
rol
insb
adc
arpl
and
rorb
sbb
add
pusha
out
or
nop
push
sbb
add
pop
loope
fs
nop
or
stc
mov
inc
into
cmp
fs
sbb
stos
jo
fdivs
push
cmpsl
cmp
hlt
and
and
into
push
or
enter
mov
inc
mov
dec
in
jge
cmp
arpl
cmp
popf
movsb
or
add
cmp
movsl
jmp
test
hlt
sbb
dec
push
pusha
sub
cli
jmp
jle
push
ret
mov
sarb
out
aam
ret
add
push
test
fildl
push
int3
popf
push
mov
call
push
fnstsw
pusha
out
jg
jecxz
subb
sahf
out
clc
dec
dec
hlt
scas
sbb
pop
dec
test
lret
and
int3
das
pop
mov
test
lods
push
and
push
in
xor
cmpsl
call
jge
mov
and
iret
push
psllw
fistpll
addl
mov
jb
lret
jbe
jbe
fwait
lea
or
inc
lcall
inc
push
jbe
fidivrl
jae
daa
add
xchg
mov
jl
hlt
ficoms
aas
xor
xchg
enter
mov
add
pop
pushf
add
test
lahf
outsl
leave
loop
int3
lret
pop
add
mov
and
or
sbb
mov
lock
lods
js
sbb
imul
adc
loopne
pop
pop
and
pop
rcl
lea
cld
jne
sbb
jg
in
xlat
push
inc
into
outsb
mov
aaa
scas
aad
or
rclb
xchg
sbbb
mov
inc
cmp
movsb
arpl
add
add
mov
xor
ds
popa
and
adc
imul
pop
pop
dec
aaa
scas
sbb
jg
sub
lret
push
outsl
mov
jns
stos
mov
mov
xor
adc
test
sub
jbe
nop
in
mov
adc
movsl
sbb
int3
mov
jno
sbb
jo
adc
nop
sub
push
loope
fcomip
movaps
cmpsb
enter
mov
sub
xchg
mov
mov
push
xchg
pop
add
mov
loopne
adc
adc
xchg
aam
js
in
test
push
out
push
fldenv
sti
xchg
lret
cltd
adc
movsb
cld
dec
outsb
mov
sbb
jecxz
repz
mov
loopne
or
mov
pushf
xchg
pop
fwait
lret
push
je
je
pop
mov
int
cltd
xchg
ret
ret
test
xor
ret
push
out
fwait
loopne
je
adc
xchg
nop
in
cmp
out
push
push
adc
fistpl
insl
rcll
out
pop
aad
leave
mov
inc
lock
fcompl
ret
scas
fists
or
lret
xchg
ja
cmp
sbb
rcrl
lret
in
inc
fs
testb
hlt
imul
sbb
xchg
cs
cmp
sub
data16
jne
jp
sbb
in
in
pop
inc
or
inc
push
mov
mov
xchg
xchg
pop
xchg
jo
adc
cmp
and
inc
test
and
xor
cld
ret
lods
mov
jo
popa
xor
sbb
pop
mov
jmp
push
mov
out
jl
out
sbb
push
push
dec
mov
repnz
push
xchg
dec
jne
mov
pushf
push
leave
and
mov
push
push
out
pop
mov
sbb
sub
mov
mov
das
adc
loopne
es
sbb
stos
mov
leave
test
jo
in
mov
sar
sbb
inc
jg
or
movsl
xchg
mov
and
repnz
enter
jecxz
daa
push
icebp
mov
test
pop
data16
leave
dec
cmp
and
push
sub
or
das
xchg
shll
inc
mov
sbb
pop
inc
loop
imul
and
cmp
pop
pushw
dec
lcall
ret
add
inc
cmp
push
aaa
push
mov
xlat
movsl
dec
mov
daa
faddp
pop
stos
in
shlb
cltd
push
lahf
dec
xchg
outsl
dec
sbb
xor
xor
sbb
repz
cmp
pushf
pop
xchg
fsts
std
and
cmp
jmp
call
mov
dec
test
cs
cmpsb
xchg
pop
aas
shll
out
xchg
fmuls
test
cmc
sti
popf
xor
cmp
aaa
push
scas
xorl
push
push
xor
mov
mov
jbe
dec
arpl
xchg
shlb
jmp
inc
cmp
mov
ret
ja
mov
push
pusha
lock
repz
jl
sub
dec
aad
test
inc
das
loope
nop
or
cmp
fisubl
sub
testb
mov
rorl
or
push
pushf
xchg
aas
ljmp
cmp
or
lar
pop
dec
in
xor
loope
push
xor
cmpsb
push
jns
jb
push
fdivl
mov
xorl
call
push
test
out
lock
aaa
in
cmp
cmc
adc
int
xchg
dec
xchg
sbb
jg
push
lret
push
sti
mov
repnz
and
loopne
push
hlt
mov
lret
inc
lret
xchg
ret
in
xor
fdiv
dec
fwait
shlb
adc
int
popf
into
inc
or
xchg
and
je
lret
xchg
sbb
sbb
scas
out
dec
out
lea
out
pop
push
fiadds
mov
sarb
dec
shlb
cmc
imul
mov
hlt
xor
aas
cwtl
jnp
int
js
mov
mov
in
and
lock
or
popa
cld
int
cmp
hlt
or
bound
lods
inc
dec
sub
xor
cmp
ret
cmp
sub
es
pop
cmp
fdivrl
mov
sbb
add
pop
pop
fldcw
fisttpll
and
arpl
test
sub
test
push
jo
pop
xchg
fidivrs
stc
or
shrl
sahf
sbb
roll
outsl
adc
jno
mov
popa
faddp
dec
xor
mov
rcll
in
dec
cmp
sti
nop
aas
popf
scas
jns
clc
cmp
mov
sbb
in
out
inc
add
int3
mov
out
mov
int
push
repnz
xor
cmpsb
pop
lahf
fs
repnz
loop
fistpl
inc
jle
pop
divl
cmp
adc
mov
mov
fmull
cmp
dec
sub
xchg
jge
aad
jne
cmp
mov
shlb
insl
push
xor
and
and
and
xor
mov
js
pop
cmpsb
push
add
rcl
lock
int3
aam
test
jmp
adc
aam
scas
pop
lds
xchg
cmpsb
shrl
mull
mov
fs
fimuls
push
dec
lea
sti
dec
fidivrl
cmp
into
and
mov
pop
ror
inc
test
dec
and
hlt
jl
imul
mov
ljmp
enter
ret
add
pop
jecxz
jns
xor
mov
push
adcl
adc
cmp
add
or
xchg
jp
push
push
sti
mov
cli
das
mov
lret
adc
faddl
cmp
fs
adc
ret
jb
lds
or
xchg
sub
stc
in
out
nop
loopne
mov
shrb
sbb
xchg
nop
je
nop
sbb
and
lret
adc
incb
cld
loope
adcl
dec
push
and
outsl
jmp
arpl
xchg
loopne
in
mov
sbb
mov
aas
dec
scas
xchg
ret
movsb
dec
push
cld
shll
test
xchg
add
ror
mov
mov
inc
je
lods
jb
iret
mov
cmc
in
ljmp
sbb
pop
mov
cmp
insb
ljmp
pop
fnstenv
cltd
pop
repz
adc
dec
add
mov
or
test
cmp
imul
sub
addb
mov
fadd
pop
mov
inc
sahf
jns
mov
cmpsb
clc
inc
leave
loope
add
fisttpl
pusha
cmpsl
pop
mov
mov
mov
mov
loop
mov
cld
mov
test
stos
xor
sti
mov
add
dec
sub
cmc
cmp
je
pop
jge
mov
test
inc
add
dec
insl
jae
sbb
jecxz
adc
loope
cmc
xchg
push
fwait
test
in
iret
push
mov
mov
and
and
shrb
adc
rorb
imul
cmp
and
or
add
xchg
repz
inc
mov
arpl
leave
jge
lahf
cmp
dec
mov
mov
cmp
int
mov
shr
fdivr
stc
mov
or
addr16
add
out
imul
jecxz
ret
stos
sub
pusha
jnp
mov
pop
in
or
mov
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
dec
fisubrs
add
jp
scas
aad
ljmp
loope
mov
cs
adc
sbb
sub
les
popf
aaa
jl
mov
cmpsb
push
rclb
iret
push
shll
out
sbb
add
push
pop
fdivl
std
pushf
ja
sub
pop
ja
mov
lds
imul
add
xor
cmp
push
jns
push
cmp
push
jge
sbb
fidivrl
popf
sar
inc
or
ljmp
out
jnp
inc
xchg
mov
in
inc
arpl
inc
mov
xchg
inc
stos
int
repnz
daa
xor
in
out
test
mov
jge
sbb
call
sub
ret
mov
xor
xor
cmp
fwait
pop
hlt
loopne
sbb
icebp
addl
imul
ljmp
test
pop
sbb
jg
test
adc
dec
mov
ret
mov
jns
adc
mov
sbb
stos
rcl
iret
push
adc
cmpsl
adc
pop
pop
popa
inc
push
push
sbb
movsl
test
dec
sbb
jae
pop
cwtl
lock
rorl
jl
mov
in
fucom
out
fcos
mov
cld
cmp
out
je
out
je
rorl
lahf
insb
pop
pop
bound
ret
lock
gs
mov
push
pop
mov
mov
push
mov
fwait
cli
add
inc
mov
pop
mov
xor
inc
dec
jmp
push
in
xor
add
mov
mov
mov
jae
jmp
movsb
cld
lea
sbb
mov
pop
icebp
sbb
lcall
push
mov
xor
or
mov
lcall
lret
inc
mov
cmp
mov
and
mov
cmp
icebp
daa
jp
fs
movsb
ljmp
mov
dec
mov
cmpsl
btr
loope
dec
cld
lock
iret
xor
sbb
inc
rclb
jge
jns
jbe
sub
sti
mov
sub
cmp
adc
adc
cld
cmpsb
or
sub
shrb
add
popa
in
cmp
pop
gs
fmuls
push
jp
scas
movsl
mov
inc
hlt
pop
mov
cmp
xchg
push
movsb
mov
push
push
or
and
or
lea
pop
xchg
dec
loope
add
pop
mov
enter
popa
js
add
clc
pop
jbe
or
xchg
stc
add
push
mov
mov
xchg
lea
push
sbb
xchg
ret
jae
adc
cmp
fs
pop
sbb
adc
cmp
push
cs
mov
popf
ret
aad
adc
mov
mov
jmp
pop
lcall
sub
in
hlt
inc
aaa
cmp
jl
cmp
pop
scas
xor
pop
add
arpl
add
xor
popa
inc
fidivrs
mov
dec
cmpl
addl
sbb
push
nop
mov
dec
and
cmp
adc
xor
sub
lods
sub
sub
pop
mov
xchg
mov
pop
scas
in
das
daa
or
scas
and
or
stos
setbe
mov
adc
cld
insl
sbb
push
xor
jmp
inc
jb
cmp
cltd
cmp
insb
fimuls
les
xchg
pop
jmp
cli
sbb
adc
addr16
pop
pop
addr16
pop
xchg
lds
aam
inc
outsl
cmpsl
daa
push
cli
jp
subl
cmp
leave
icebp
aad
xchg
pop
dec
les
add
fsubrp
movsb
test
xchg
jae
mov
daa
shll
je
jbe
xchg
or
adc
enter
mov
jno
enter
es
dec
in
push
mov
mov
nop
jp
js,pt
jbe
fistpll
loop
mov
inc
xor
and
ret
adc
imul
add
mov
lcall
subl
in
xor
cmp
stos
shrb
sub
cmp
inc
pop
xorw
mov
hlt
sub
sbb
mov
repnz
mov
iret
pop
adc
jmp
jns
pop
aas
out
jae
dec
dec
cmpb
stos
adc
into
cmp
xchg
js
jl
dec
test
xorb
vmread
bound
insb
out
cwtl
sbb
sub
jl
jg
aaa
jge
shl
cmpsl
mov
cmpsl
mov
imul
faddp
dec
divl
stos
fdivl
cltd
cmp
and
decl
test
fs
test
sti
addr16
add
pop
mov
fldcw
into
sbb
imul
mov
dec
xchg
dec
sbb
xchg
idivl
add
dec
dec
test
mov
push
leave
repz
jp
test
mov
jno
sar
cmpsl
add
mov
js
test
or
popf
pop
add
loop
jo
cmpsl
aam
mov
jb
fnstcw
cli
scas
cli
mov
sbb
andl
popf
add
pushf
jge
sbb
and
shlb
cmp
test
mov
xchg
and
cmpsl
jle
cmp
cmp
sub
and
or
dec
add
cmp
dec
lds
pop
in
or
mov
push
jne
add
test
sbb
xchg
lret
push
push
pop
mov
add
ss
pop
test
or
add
arpl
adc
adc
pop
xor
adc
dec
mov
repnz
mov
cmp
cmp
lahf
mov
and
pop
mov
fdivrs
fimull
xlat
jae
outsl
imul
add
add
push
std
loopne
outsb
add
test
cs
aaa
cltd
add
mov
mov
dec
mov
dec
loop
mov
jne
xlat
hlt
js
and
iret
fildll
out
mov
int
add
jae
popf
lret
pop
or
sbb
mov
mov
int3
push
stos
test
rcll
cmp
push
add
cmp
out
lea
lahf
push
sub
sbbb
xor
push
xor
mov
lds
xchg
mov
out
inc
stos
or
jnp
adc
jle
jecxz
pop
add
cmp
pop
sbb
mov
ljmp
ljmp
jne
pop
test
add
lret
jnp
cli
imul
addl
sub
sbb
cmp
xchg
loopne
mov
and
dec
adc
fnsave
xor
pop
adc
add
lods
adc
inc
dec
mov
mov
dec
cmpsb
jne
sbb
dec
mov
pop
mov
mov
and
jo
shrb
mov
inc
nop
xor
add
jmp
fsubrl
xchg
sbb
aaa
push
push
cmpsb
cli
pop
add
xchg
sub
jge
testb
adc
lods
outsl
sbb
lcall
adc
jb
jbe
push
dec
sub
pop
arpl
mov
in
mov
lret
fistpl
mov
ret
push
mov
cmc
cmp
cmp
push
xor
add
out
scas
sti
ja
test
in
and
jo
mov
dec
mov
push
aam
test
cs
sbb
sub
xor
orb
pusha
mov
mov
push
add
sbb
push
adc
movsb
push
add
or
jl
stc
sbb
sar
fiaddl
nop
dec
adc
push
add
stc
or
out
inc
inc
repz
jnp
repz
dec
pusha
add
mov
aam
mov
lcall
repnz
int
cmp
imul
repz
ret
mov
outsb
xchg
repnz
pushl
lret
inc
lds
out
xchg
out
enter
loop
rorb
fistl
pushf
mov
jbe
dec
sub
xchg
xchg
loop
push
dec
fnstenv
in
pop
test
mov
pop
mov
int
xchg
adc
push
nop
ficomps
bnd
pop
arpl
inc
and
mov
pop
cmp
and
dec
int
mov
sub
bound
adcl
mov
iret
jno
shlb
or
arpl
inc
call
ret
push
pop
inc
dec
sub
or
ret
and
cmpsb
cmpsb
insl
sub
ror
or
adc
fcmovne
jmp
fucomp
mov
rcl
bound
pop
add
xor
fsubrp
sti
cmp
mov
push
mov
call
xor
and
sub
fsubrs
mov
jo
sub
lret
add
mov
xchg
test
je
pop
jo
mov
aad
pop
mov
popf
movsl
xor
daa
test
or
js
and
push
add
addr16
lret
icebp
mov
xchg
pusha
daa
test
xlat
outsl
in
loop
out
adc
push
push
and
push
mov
lods
push
outsl
cltd
je
jmp
loope
mov
mov
sub
dec
cmpsb
dec
inc
push
rcrb
bound
popa
arpl
xor
std
cmp
jl
jnp
loop
ret
aaa
sbb
push
ljmp
dec
aas
mov
addb
jae
addr16
ds
push
test
jo
push
pop
inc
sbb
dec
xlat
add
sbb
cli
xor
je
cmp
adc
jge
push
add
and
test
dec
or
sub
and
jbe
fdivs
sbb
pop
arpl
mov
push
add
xor
mov
mov
aaa
je
inc
ffreep
sti
mov
mov
mov
or
sbb
push
jmp
or
jl
dec
sbb
insb
call
out
pusha
lcall
outsb
mov
mov
xlat
pop
sub
repz
jne
xor
cmp
mov
xchg
or
push
bound
pop
xor
xor
adc
push
inc
mov
pop
iret
subl
jmp
pop
mov
roll
pop
xchg
push
imull
inc
iret
push
add
dec
sub
and
setbe
pop
addb
ret
scas
mov
out
mov
test
rorl
daa
repz
js
xor
xchg
adc
adc
push
stc
fsubrl
pop
jne
cwtl
fidivrl
push
in
bound
jno
cmpsb
sub
addr16
fidivrs
mov
pop
xor
repz
or
imul
fisttps
add
ficomps
lret
fsub
test
jb
loop
shll
pop
jge
xorl
push
xor
mov
or
xor
and
jl
aas
dec
mov
enter
fistps
push
stc
xor
enter
cmpsb
fucomip
dec
xor
cmpsl
jno
aaa
insb
push
jle
jge
push
lods
js
inc
add
mov
stc
cmpsl
mov
jecxz
dec
fs
mov
into
and
fstpl
je
fadds
scas
sbb
not
push
cmp
xchg
test
mov
jl
mov
mov
sub
cmp
iret
cli
or
mov
dec
cli
pop
out
in
sbb
lods
cwtl
icebp
mov
jp
test
stos
ljmp
js
imul
rcl
sbb
dec
dec
fisttps
rolb
imul
pushf
mov
sbb
loopne
push
mov
inc
inc
mov
notl
push
cmp
stc
jg
stos
jg
adc
or
lcall
pop
or
add
adcb
test
lret
xchg
jp
in
gs
sub
fistl
es
adc
orl
scas
inc
jns
jp
lods
sub
push
int3
test
mov
or
or
out
lock
pop
jl
inc
pop
adc
loopne
hlt
aam
mov
mov
jno
ljmp
push
xor
arpl
andb
daa
adc
pop
cmp
shr
mov
in
test
sub
xchg
inc
jl
inc
out
leave
lock
testl
mov
unpckhps
push
mov
dec
jne
test
ret
out
cld
clc
push
jmp
in
or
adc
rolb
lret
cwtl
and
mov
lret
ss
inc
push
mov
shll
hlt
xchg
in
fbstp
in
pop
pop
mov
and
jae
data16
enter
pop
dec
jns
in
sub
cmp
aas
fcmovu
rcrl
jg
or
dec
pop
in
xor
cmp
loopne
push
test
fimuls
pop
mov
pop
jl
sub
insl
sti
out
loop
mov
push
hlt
icebp
jl
lock
cltd
dec
jmp
lds
hlt
inc
adc
pop
dec
addr16
inc
xorb
push
ja
dec
mov
push
leave
je
in
or
les
fwait
enter
aad
push
pop
xchg
jmp
mov
cvtps2pi
jb
cld
hlt
sub
jl
lcall
push
ud1
add
mov
leave
mov
scas
stc
imul
or
xchg
push
loopne
xor
cmpsb
cwtl
and
xor
mov
test
dec
or
outsl
stos
imul
cmp
mov
sbb
scas
inc
loope
cli
ljmp
loop
dec
mov
xchg
pop
in
sbb
aaa
sbb
out
add
in
adc
stos
xchg
jnp
fcoms
ds
xor
dec
jnp
loop
std
std
xor
cmp
sub
mov
jmp
neg
fcomps
ss
aas
or
in
lret
mov
adc
rcrl
xor
les
mov
clc
lock
xchg
pop
cmp
dec
pop
xchg
and
jne
ljmp
fbstp
ss
stos
or
out
rcrl
iret
fisubs
cli
repz
or
mov
adc
inc
ret
data16
les
pop
sbb
movsl
and
mov
push
mov
jne
test
jg
adc
cld
cltd
mov
sub
lahf
mov
sti
mov
aas
pop
jo
rcrl
into
loopne
dec
js
jo
lds
pop
and
adc
mov
or
testb
add
lods
int
xor
mov
mov
je
inc
test
mov
clc
jno
adc
lcall
and
push
lods
and
insl
push
dec
mov
sub
mov
jmp
icebp
push
test
mov
mov
aam
jecxz
xchg
out
aam
fdivrs
mov
out
cmp
inc
adc
dec
jge
pop
psubw
mov
sarl
jnp
jmp
test
xor
sarl
add
jecxz
leave
out
and
in
cmp
subb
mov
fistl
lret
xchg
mov
imul
mov
dec
xor
shll
ret
in
add
mov
sarl
dec
outsw
xchg
mov
cmp
xchg
cld
pop
xor
enter
mov
shrb
mov
shrl
inc
inc
xor
cmovg
or
dec
mov
ja
pop
cmp
inc
push
out
add
sbb
xchg
mov
sub
pushf
mov
mov
pushf
out
lea
adc
mov
pop
xchg
adc
xchg
fwait
dec
arpl
pop
add
scas
lret
jno
ficompl
pop
jg
ja
jo
in
adc
inc
mov
add
cmp
add
dec
mov
mov
repz
dec
inc
cltd
iret
cs
out
es
xchg
push
cmpsl
mov
sbb
cmpsb
and
mov
dec
cli
cli
enter
mov
mov
mov
sahf
add
int3
xor
jae
mov
mov
decl
fs
adc
lods
push
les
out
jmp
xchg
out
rcll
jg
cmpsl
push
sbb
sub
imul
imul
es
outsl
iret
inc
mov
mov
hlt
cmp
mov
xor
xor
pop
orb
aam
stos
sbb
lods
lret
lods
std
out
add
inc
out
fwait
pusha
out
xchg
rcrb
and
sbb
out
in
cmp
arpl
xor
pop
cmpl
xor
cli
insb
cld
neg
leave
js
push
cli
jns
scas
dec
push
mov
inc
push
sbb
loope
adc
cwtl
xchg
xor
xor
repz
xchg
fsts
or
cltd
in
stc
xchg
cmp
pop
dec
cltd
lods
add
cs
mov
test
dec
cmp
jnp
jnp
mov
shr
xlat
mov
xchg
cmp
xor
push
mov
mov
fbstp
sbb
and
and
pop
pop
pop
push
jge
rorl
vmwrite
fcmovnbe
int
repz
xchg
dec
mov
shrb
fiadds
fisubl
jbe
xor
in
popf
stc
xchg
jne
jge
or
push
insl
rcrl
adc
cmp
dec
xor
inc
push
lahf
jns
mov
xchg
xchg
sbb
and
nop
fyl2xp1
pop
nop
jmp
int
mov
adc
mov
mov
xor
out
insb
rorl
mov
and
js
add
pop
cmp
int
je
out
lea
fstps
adc
pop
add
cli
push
aaa
fdecstp
stos
insb
loopne
push
insl
shr
adc
fiaddl
call
nop
shlb
pop
mov
sahf
jbe
popf
gs
push
sub
imul
arpl
add
or
fcoms
inc
lret
push
dec
pop
leave
cmp
stos
push
sbb
push
cmp
mov
inc
jmp
imul
cmp
adc
push
ss
ds
mov
cmpsl
and
mov
xlat
in
cwtl
or
push
pusha
inc
inc
mov
filds
ljmp
pop
xchg
call
sbb
lcall
jge
into
insl
jle
xchg
mov
stos
insb
bsf
out
adc
int3
lock
inc
inc
or
leave
sub
adc
cmp
lods
movsb
cmpsl
jmp
mov
mov
lret
fucomi
mov
lods
incl
sbb
add
dec
fdivl
sub
inc
ja
aas
cmp
mov
mov
and
pop
or
cmc
jle
dec
mov
mov
aas
stc
cwtl
cmp
cmpsb
dec
push
ds
popa
ret
jmp
hlt
cli
xchg
or
ret
cmp
jecxz
adc
pusha
pop
outsb
in
push
push
xchg
cltd
push
push
in
fld
jo
aad
into
push
xor
xor
xor
xchg
xchg
dec
and
js
xor
outsb
inc
mov
je
repz
inc
push
inc
sub
js
xchg
fdiv
out
icebp
iret
cmp
xor
cli
je
fwait
add
into
adc
sub
push
enter
gs
std
mulb
mov
pop
pop
ret
pop
xor
push
pop
mov
add
lcall
ret
pushf
ss
xchg
mov
std
xchg
sbb
stos
adc
test
fstps
sbb
push
inc
icebp
push
mov
test
xchg
ljmp
sbb
enter
nop
pop
decb
dec
mov
mov
ds
sbb
int3
lret
mov
dec
scas
lcall
leave
sbb
scas
push
mov
adc
stc
imul
xor
jnp
lods
xchg
subl
adc
jns
jae
out
lret
pop
xchg
push
jge
ja
mov
lcall
test
fmull
sarb
pop
icebp
adc
cli
xchg
lods
xchg
mov
pop
mov
cmp
int
sub
xchg
inc
leave
sub
test
dec
jo
cli
test
shrb
xor
xor
jmp
aad
mov
ja
xchg
sti
jmp
pop
es
lock
dec
sar
fndisi(8087
and
push
imul
push
jbe
cmp
inc
or
jb
push
dec
int
mov
cld
or
test
xor
fsubs
mov
xor
cmp
lods
inc
inc
push
cmpl
out
ret
xchg
push
push
imul
icebp
int3
mov
xchg
inc
test
gs
in
sub
mov
cmp
aas
nop
negb
jg
daa
dec
or
jno
pop
std
inc
dec
mov
dec
xor
sahf
pop
test
fidivs
xchg
inc
mov
cmpsb
cmpsb
jno
pushl
cmpsb
and
mov
lret
lods
stc
fwait
js
jp
es
pop
loope
mov
outsl
pop
nop
jnp
jg
iret
dec
test
popf
pop
xchg
out
adc
fnsetpm(287
xor
popa
repnz
jg
out
push
xchg
iret
in
xlat
iret
xor
pushf
lock
and
inc
rcr
in
repnz
aad
iret
scas
or
aas
cmpsb
daa
lret
or
ljmp
fstl
lret
aad
and
mov
insl
push
out
push
mov
setb
bound
add
lods
push
and
iret
dec
pop
sbb
out
sbb
addl
in
xor
lret
scas
sbb
jl
fdivs
fcmove
sbb
jle
mov
lahf
imul
test
sbb
and
add
push
aam
adc
sub
push
in
mov
jp
mov
push
jae
loopne
ljmp
es
sbb
ror
cmc
mov
cli
and
daa
xchg
sbb
mov
mov
pop
bound
cmp
jp
insb
jns
cwtl
mov
jae
mov
es
test
out
pop
sbb
jg
lds
ret
mov
add
bound
xor
push
mov
dec
test
nop
int3
in
or
mov
adc
jne
xor
repnz
lret
sbb
xor
mov
lret
ss
mov
jbe
mov
and
inc
lahf
out
adc
jnp
aas
inc
xchg
nop
ret
cmp
fcmovb
fs
push
cmc
xchg
push
mov
mov
rcrb
push
cli
loope
inc
add
cmpxchg
cld
arpl
sbb
popf
and
loopne
aad
out
mov
or
loope
lret
aaa
or
push
shrl
push
enter
sub
pop
mov
andb
sbb
dec
pushf
add
clc
sub
lods
jp
xor
stos
cmp
jno
lret
sbb
cmpsb
mov
jg
jmp
sub
sbb
insb
test
in
inc
daa
push
sub
mov
fadd
jnp
pop
fwait
jne
jo
out
pop
imul
int3
jae
scas
shlb
and
scas
cbtw
lea
pop
sbb
add
fldt
or
or
cmp
lds
push
jns
cmp
lcall
addr16
xchg
sbb
adc
sub
xchg
rorl
sbb
jmp
dec
sahf
repz
pop
scas
mov
icebp
push
fstpl
cmpsl
xor
sub
out
push
lea
push
push
int3
mov
frstor
add
adc
adc
stos
cmpsl
and
jp
nop
test
fwait
mov
stos
add
scas
sti
xchg
daa
bound
xchg
xor
fldlg2
lds
ljmp
dec
popa
dec
mov
shl
sarl
stos
nop
cmpsb
jg
dec
sub
movsb
stc
cmp
xor
rcl
jno
addr16
push
jbe
leave
cmpsl
push
nop
into
inc
cmp
push
mov
adc
int3
ret
push
add
popa
sub
xchg
ret
movsb
movsl
or
sarb
pop
and
jbe
lock
loopne
subl
mov
in
or
ret
push
stos
js
movsb
mov
and
cmp
ss
sbb
lods
iret
rclb
cmp
outsl
loop
fwait
xor
aad
out
lods
fidivrs
pop
fisubs
cltd
xchg
pop
outsb
sub
or
ret
inc
bound
inc
hlt
call
dec
pushf
mov
adc
jb
cwtl
mov
cmp
cmp
cli
gs
out
cmp
xchg
fstl
push
cwtl
mov
dec
pop
mov
dec
sbb
fst
testl
ret
jbe
imul
jp
push
xlat
lcall
sbb
jmp
pushf
xchg
or
sti
pop
test
adcl
jl
mov
cmp
outsl
iret
inc
cld
pusha
and
jecxz
test
scas
adc
cwtl
or
jg
inc
popa
pop
inc
jns
jno
imul
push
xchg
dec
push
sbb
or
fldl
or
je
pop
xchg
cwtl
jmp
outsb
insl
ror
dec
add
xor
xchg
sub
mov
loope
in
lock
mov
pop
and
dec
imul
repnz
test
pop
ret
push
loope
fbstp
cmp
cmc
dec
adc
cltd
pop
fnstcw
xlat
call
cltd
mov
inc
call
add
out
pop
pusha
sar
aaa
and
inc
outsb
ds
jnp
xchg
dec
scas
loope
jle
xchg
idiv
and
xchg
lahf
sub
addr16
mov
subb
outsb
dec
cltd
ja
jle
adc
hlt
xor
repnz
mov
sbb
mov
push
push
hlt
cmp
into
mov
bound
add
fidivl
lock
and
out
jnp
outsl
out
insb
mov
and
ss
inc
stos
inc
mov
xchg
mov
jae
and
or
aad
cmp
cmpsb
add
push
jmp
jno
test
fwait
stos
sbb
pslld
aad
bnd
pop
fiaddl
jns
bndstx
push
call
dec
enter
push
in
cmpl
cs
mov
test
cmc
pop
inc
call
stc
dec
lods
loope
lock
xchg
fwait
or
fstpt
pushf
outsb
push
xor
xor
mov
mov
std
dec
adc
jmp
adc
jg
adc
or
aam
jmp
pop
arpl
das
lods
or
and
iret
xorb
lock
mov
mov
enter
sbbl
or
hlt
test
repz
subb
push
sarl
add
pop
mov
out
sub
add
fadd
pop
stos
or
clc
jo
dec
xchg
sahf
cmpsl
sbb
test
xor
pop
ret
inc
rep
mov
dec
mov
repz
sub
pop
popa
add
iret
push
xchg
icebp
add
adc
fisubrs
add
add
jecxz
jae
movsl
outsl
lahf
ljmp
hlt
icebp
gs
addr16
jge
jo
pop
ja
xchg
mov
or
fsubrl
jmp
mov
daa
adc
sar
cmp
je
jnp
and
xor
subb
stos
push
fdivr
aaa
mov
out
pop
mov
ds
into
pushl
mov
movsl
jp
lods
push
mov
mov
mov
fdivrs
jl
roll
outsl
cmp
addr16
mov
in
fisttps
xchg
cmp
add
xor
or
inc
adc
outsl
test
xchg
loop
popf
and
jbe
add
arpl
out
test
stos
test
xchg
inc
jo
stc
mov
xlat
pusha
mov
push
dec
out
in
jmp
mov
outsb
addr16
and
sahf
push
lods
add
push
mov
out
xor
out
stos
dec
jns
adc
cmp
xchg
jo
push
out
sbb
sbb
inc
and
mov
negb
inc
outsb
mov
pushf
sub
jmp
push
and
outsb
mov
mov
insl
roll
push
bound
lcall
xor
xchg
xchg
add
lahf
and
sbb
xchg
ss
pushf
popa
push
lock
mov
dec
xchg
pop
lea
mov
outsl
call
movsl
cmpsl
add
in
cmp
sbbb
aam
mov
cmp
ret
ror
gs
popf
jne
inc
jmp
sbb
inc
xchg
adc
mov
pop
or
popa
in
pop
clc
out
sbb
sbb
push
xor
sbb
or
popa
fists
xor
cmp
and
imul
adc
js
enter
push
loope
xchg
mov
iret
sub
aaa
popa
insb
loopne
test
sub
icebp
xchg
and
push
cli
jae
xchg
repz
out
push
mov
xchg
lods
cmp
stos
push
imul
jecxz
lcall
xor
hlt
ja
mov
movsb
cmpsb
dec
adc
pop
leave
and
mov
lods
mov
int3
pusha
adc
aas
dec
mov
pushf
jecxz
sub
jo
out
dec
jmp
das
adc
xor
aaa
xchg
dec
mov
cmp
ss
insb
out
jge
ja
xchg
arpl
in
shll
sti
pop
fldenv
mov
out
mov
pop
push
jecxz
xchg
pop
cli
mov
cmp
stos
idivb
pop
mov
mov
dec
lods
mov
xor
pop
outsb
scas
or
repz
fsubl
pop
sub
int3
imul
incl
xor
xlat
cmpl
pop
outsl
inc
imul
fdivl
movsb
jmp
inc
in
mov
ret
bound
fildll
daa
movsb
inc
jle
mov
mov
or
inc
cmp
dec
cld
mov
or
ss
ja
push
add
orb
data16
xchg
cmc
cmpsl
aas
inc
or
mov
xor
cmp
stos
jmp
vandnps
data16
mov
cmp
xchg
inc
cli
xor
xchg
cwtl
and
and
xchg
fadd
imul
mov
clc
push
pop
mov
ret
cld
idiv
mov
stos
fwait
lods
int3
jbe
pop
push
jb
ja
xchg
jae
inc
fsubs
mov
and
xchg
sub
fs
xchg
inc
sub
add
dec
push
mov
cs
ja
mov
les
sbb
mov
or
mov
stos
add
subb
pop
xchg
push
mov
or
out
test
jnp
cmp
popf
jmp
cmp
dec
test
jl
adc
push
jb
pushf
dec
js
cmp
pusha
mov
insb
cli
insb
push
jg
inc
lods
stc
movsb
pop
dec
sbb
pop
mov
std
mov
sbb
cmp
imul
jnp
or
cli
xchg
xchg
push
and
pop
xchg
mov
leave
dec
adc
call
aad
pop
xchg
ret
arpl
cs
bsf
mov
int3
and
xchg
cli
inc
sub
mov
xlat
sbb
mov
std
es
cmp
add
aaa
pop
lret
negl
xor
mov
pop
jg
popf
mov
into
sahf
xchg
das
push
scas
push
ljmp
push
imul
push
or
clc
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
fildll
scas
jp
add
jp
data16
test
aaa
or
fsubs
popf
loopne
sbb
jbe
mov
js
rorb
mov
lods
repz
fimuls
mov
cmpsl
xor
inc
sarb
and
mov
inc
dec
scas
push
int3
insb
inc
fcom
ja
add
loope
mov
insb
inc
pop
ss
pop
push
xchg
jne
fs
sub
add
xchg
push
lock
add
sub
outsb
add
aam
stos
push
je
mov
test
int3
mov
stc
pop
add
adc
fidivl
jmp
jns
pushf
leave
ret
hlt
sbb
adc
gs
out
cmpsb
mov
dec
xchg
mov
mov
mov
cwtl
inc
adc
out
ss
out
dec
and
cmp
out
arpl
dec
arpl
addr16
mov
sbb
dec
fidivl
xchg
cli
xchg
mov
outsl
push
orps
cwtl
das
stc
scas
push
leave
mov
ja
jo
adc
add
xchg
cmp
stos
hlt
adc
or
inc
pop
mov
pop
out
pop
xchg
dec
sbb
dec
pop
lods
outsb
call
test
rolb
jmp
hlt
adc
sub
ja
pop
cmpsl
or
rolb
into
inc
push
pushf
xchg
mov
lcall
pop
loopne
ret
cmp
mov
aas
loop
sub
lahf
mov
cmpsl
shll
inc
xchg
dec
push
faddp
scas
repnz
adc
inc
fsin
aas
int3
jne
push
rorb
xor
ret
sbb
push
lods
jne
cli
cmpsb
dec
roll
xlat
xor
push
test
outsl
iret
insb
insl
je
ret
mov
leave
out
xor
repz
dec
aad
lcall
add
mov
mov
dec
or
cmp
adc
xchg
push
xchg
xchg
lock
jo
outsl
push
sahf
sub
mov
adc
out
imul
and
xchg
sbb
jp
popf
inc
fcomip
popf
mov
add
cmp
mov
mov
cltd
inc
leave
fcmovnbe
xchg
nop
pop
repnz
push
pop
cmp
test
mov
lret
jne
in
cltd
push
icebp
or
push
xor
fucomip
loop
jle
xlat
jecxz
sbb
sub
stos
push
push
xor
xor
mov
ss
int
ret
ss
mov
pushf
inc
pushf
sub
mov
cli
int3
es
jmp
sbb
ja
xor
xchg
jne
icebp
int3
rorb
gs
dec
add
dec
call
cmp
ljmp
fisttpll
pop
lahf
jne
lock
clc
es
mov
ret
jb
add
mov
xchg
xlat
push
pop
enter
js
xlat
push
rcll
mov
out
sbb
jmp
mov
sahf
dec
or
sub
stos
stos
in
xchg
dec
sub
pop
inc
fstl
int3
int
rcrl
cmp
pusha
xor
sub
daa
in
mov
or
inc
vmread
xorl
sahf
bts
mov
xlat
sbb
les
nop
jns
stos
repz
sbb
out
push
mov
movsl
inc
push
orl
shlb
fcmovnu
nop
dec
fisubs
cmp
lret
cmp
mov
dec
mov
jp
pop
dec
testl
bt
fwait
jle
adc
inc
sbb
aaa
movsl
lret
int
loop
ss
mov
jno
or
mov
jno
cmc
sub
jp
cmp
pop
shlb
loope
xchg
sub
xchg
ljmp
sub
mov
lcall
mov
cmp
mov
addr16
cld
pop
out
or
jmp
stos
mov
sbb
fs
mov
icebp
int
mov
cwtl
push
add
out
jmp
leave
pop
stos
mov
lret
int
lcall
stos
mov
das
scas
leave
lcall
lret
adc
mov
testb
jb
pushf
mov
push
test
sbb
negl
in
imul
ds
xchg
je
scas
pop
repnz
fistps
rcrl
xor
popf
popf
cmc
sub
lret
xlat
out
adc
lea
jbe
mov
stc
sbb
xchg
pop
out
jle
and
daa
pop
inc
fsubrl
je
push
fiadds
repz
jbe
imul
int
and
aas
repz
mov
xchg
fistps
divl
adc
sub
sbb
cmp
test
jecxz
add
add
sbb
dec
popa
fisttpll
je
call
dec
enter
dec
dec
lods
lea
stc
mov
jno
jle
fistl
iret
dec
xorl
adc
shrb
sub
dec
or
xchg
lock
shrb
lret
cmp
out
push
jp
sbb
or
out
mov
cld
adc
aas
js
popf
ret
subb
pop
loop
pop
or
or
push
int3
push
or
mov
out
test
bound
mov
xchg
push
mov
stc
pushl
int3
test
mov
out
xor
xchg
popf
inc
adc
movsl
sub
movsb
ds
gs
mov
mov
shll
cmp
and
inc
xchg
daa
nop
sub
std
xor
std
daa
mov
sub
xor
inc
xchg
mov
xor
xor
inc
mov
xchg
int3
mov
setl
iret
pushf
xchg
xor
sti
sub
inc
push
fmuls
or
sbb
call
jns
adc
dec
mov
pop
fstps
jne
mov
push
fnstcw
jae
dec
mov
int
xlat
xor
aad
mov
or
mov
aad
mov
and
push
mov
mov
lahf
mov
mov
push
lock
add
jae
notl
xor
arpl
cmp
aaa
in
dec
mov
popf
pop
jns
lock
rclb
clc
pop
lods
mov
sub
or
jl
in
bound
xchg
js
andb
cmp
inc
push
out
jmp
lret
push
inc
out
dec
icebp
mov
mov
insl
imul
movsl
aad
scas
sub
aas
stos
xchg
push
inc
sbb
xor
mov
pop
test
adc
jl
aad
and
jae
insl
jno
jle
mov
pusha
arpl
pop
mov
mov
xchg
sbb
lods
mov
data16
adc
push
inc
rcr
mov
in
das
mov
push
jne
inc
sub
outsb
mov
insb
mov
push
lods
imull
insb
in
dec
cmp
pushl
repz
ds
dec
xor
mov
aas
test
lods
test
pusha
out
in
push
or
and
sbb
ret
int3
or
xlat
jmp
lret
or
pop
lcall
and
mov
mov
sub
daa
mov
sbb
pop
stos
jne
sbb
jb
ds
lods
inc
pop
cmp
loopne
insb
lcall
shll
fistl
lcall
popf
fildl
ret
jbe
xlat
sub
ljmp
scas
fs
adc
out
cld
pop
mov
add
inc
cmpsb
scas
imul
int3
sub
in
aas
std
mov
in
xchg
imul
jns
ds
out
lods
rcpps
cmp
lret
jae
push
loop
mov
cmpsb
jno
mov
pop
inc
dec
enter
dec
js
mov
fldcw
or
dec
and
movsl
les
test
push
mov
cmpsl
test
mov
push
or
add
xchg
xchg
jle
or
xor
cli
push
out
sbb
xchg
fs
pushf
xchg
lahf
add
or
mov
or
mov
adc
inc
jl
insl
inc
jg
mov
push
and
inc
movups
jmp
adc
xor
call
arpl
inc
std
rcr
add
inc
push
shl
loope
mov
daa
decb
adc
in
mov
adc
inc
into
scas
inc
aaa
dec
xor
mov
jle
cld
cld
stos
data16
rcll
cwtl
daa
lods
repz
mov
stos
scas
in
ljmp
jge
fnstenv
adc
leave
or
pop
sub
out
mov
insl
imul
out
and
shll
lods
gs
cld
orl
js
lret
sbb
lret
idivb
cmp
lea
outsb
movsb
add
rcll
adc
mov
xor
es
rorb
inc
sbb
mov
aam
lcall
mov
lea
and
sub
or
addr16
xor
mov
cmpb
jmp
lret
in
add
cmpsl
mov
aaa
popf
test
fnstenv
in
mov
or
sbb
push
sub
mov
cmp
pop
pushl
mov
push
mov
lahf
jl
in
jge
inc
js
cmpsl
push
push
cmpsb
testl
push
inc
push
xor
and
mov
mov
xlat
or
or
or
dec
js
mov
or
repz
aam
push
lea
jbe
fwait
not
mov
xor
bound
xchg
rcl
add
jmp
cld
add
xor
aad
insl
clc
mov
xor
jge
insl
or
insb
adc
shrl
and
sti
dec
push
jb
int3
frstor
mov
rolb
sub
adc
and
pop
cmp
ficoms
mov
sti
neg
xchg
and
cmp
and
sub
dec
and
enter
mov
loopne
xor
shl
imul
inc
xchg
mov
xchg
mov
ss
div
emms
mov
mov
mov
mov
or
mov
dec
out
lahf
mov
jno
jge
pop
jge
jb
push
xor
mov
lea
mov
cmp
sub
xor
sbb
xchg
repnz
push
dec
int
mov
test
in
lahf
xchg
outsb
jns
sarb
daa
cmp
xchg
sbb
in
push
lret
xor
out
ljmp
lret
rorl
or
inc
mov
jp
inc
popf
cmp
mov
mov
ljmp
in
or
pop
cmp
and
mov
pop
in
gs
sahf
jle
mov
adc
jg
mov
aad
jp
movsl
mov
fistps
ja
std
inc
adc
imul
or
out
mov
pop
stos
aaa
inc
rcl
xchg
stos
xchg
pop
pop
and
dec
pushf
fildll
in
dec
test
loopne
adc
outsb
xor
xor
loop
xor
inc
nop
les
inc
pusha
in
pop
sbb
xor
aad
dec
outsb
movsl
sbb
fildll
xchg
cmpsb
mov
lcall
lcall
xor
clc
pop
push
push
jns
adc
int
pushf
xor
arpl
and
pop
shll
lock
insb
lods
out
cltd
push
aad
scas
adc
or
mov
dec
loopne
sahf
je
and
iret
pop
fs
inc
out
sub
sbb
inc
xor
cmp
mov
inc
mov
fwait
sbb
cmp
mov
adc
leave
xor
sbb
mov
pop
shr
arpl
enter
and
sub
add
adc
popa
push
and
gs
shr
mov
popa
inc
mov
sbb
dec
sbb
ret
mov
dec
sub
xchg
push
xor
or
inc
scas
inc
enter
mov
and
repnz
adc
adc
mov
mov
fadd
or
testl
xor
je
test
in
inc
sub
jge
out
mov
xor
cmp
popa
in
inc
xchg
mov
or
outsb
sti
push
jae
push
div
push
fstl
gs
aad
push
inc
stos
std
mov
aam
bnd
ja
sbb
data16
js
mov
jo
adc
push
mov
lock
dec
ss
addb
add
dec
fidivs
cld
mov
jae
dec
xlat
push
sbb
cwtl
stos
aad
aaa
enter
stc
andl
stos
aas
dec
mov
xor
bound
fs
push
mov
neg
push
inc
adc
pop
popf
xor
cmpl
lock
mov
sbb
sbb
out
jle
fdivl
adcb
adc
call
fldt
in
cltd
push
test
ljmp
pusha
inc
loopne
js
sahf
mov
loope
jl
mov
cmpl
push
mov
add
xchg
leave
dec
dec
sub
cmpsb
push
out
mov
sbb
enter
push
cltd
in
test
lds
aaa
imul
add
xchg
xor
mov
mov
insl
jb
sub
gs
or
ljmp
icebp
mov
mov
pop
inc
push
std
cmp
dec
mov
decb
dec
adc
aaa
xchg
mov
inc
test
dec
push
jbe
push
dec
sub
int
sbb
ljmp
fcoml
arpl
push
nop
inc
push
lcall
xor
jle
int
pop
lahf
lock
xlat
jae
lods
inc
pop
fstl
ja
and
aas
mov
sarb
mov
insl
pusha
rcrb
sub
xchg
mov
cmp
jnp
rcrl
pop
loopne
add
into
lret
add
imul
adc
fs
jl
imull
mov
imul
jmp
popa
mov
mov
inc
adc
adc
or
xchg
lock
or
cmpsb
outsb
push
std
repz
cli
xor
cwtl
loope
popa
or
cmpsb
insl
testl
mov
lods
mov
inc
push
jl
orb
ds
into
mov
aaa
mov
add
gs
insb
js
mov
push
pop
xchg
xchg
lock
ret
test
xchg
stc
lock
mov
sub
sti
nop
aam
adc
add
jp
jae
ss
aam
inc
pop
pusha
mov
fistpll
push
inc
mov
out
lret
jmp
ret
mov
xchg
insb
sub
das
subb
jne
mov
outsl
fwait
out
mov
ds
jno
lods
inc
shr
jne
cmp
jno
and
and
test
ss
lock
call
les
jns
cmpsb
cmovbe
push
lret
pop
xchg
mov
fcoms
mov
jl
mov
and
push
pop
repz
outsl
mov
mov
cwtl
pop
mov
pusha
or
loop
jmp
adc
or
mov
cmp
out
loopne
je
cwtl
lock
or
outsl
add
scas
and
jg
cli
repz
ss
add
mov
pop
push
and
mov
adc
es
out
daa
sbb
dec
insl
push
out
lds
jo
add
in
pop
mov
push
les
dec
out
xlat
sbb
adc
mov
divl
aas
cmp
cwtl
sub
fstpt
loope
movsb
cld
stos
dec
das
cltd
cmp
stos
and
push
ds
xor
fistpll
je
or
mov
les
rcrl
out
push
movsb
in
mov
add
rcl
jne
call
es
jl
int3
jo
sbb
push
rorl
cmp
xor
in
adc
pop
adc
es
nop
pop
sub
adc
push
repnz
inc
insb
pop
jne
mov
aaa
ret
daa
mov
inc
es
sbb
test
mov
wrmsr
inc
cwtl
popf
cmpsb
jmp
inc
and
sub
mov
fs
fisubl
inc
aas
inc
loopne
neg
mulb
test
insb
addl
repnz
pop
mov
iret
insl
cmp
inc
xor
pop
dec
dec
adc
cli
in
mov
and
sahf
repz
jbe
mov
lock
popf
rcl
lret
std
mov
mov
add
popf
xor
lds
in
fwait
mov
inc
ljmp
sub
aaa
jne
pushf
std
xchg
dec
ret
push
cmp
pop
cmp
shll
xchg
lcall
add
adc
dec
mov
inc
ss
pop
add
sub
or
insl
push
dec
cmc
sbb
mov
cmp
int3
adc
lds
lret
rorl
mov
test
imulb
mov
in
xchg
sub
scas
insl
xchg
jecxz
test
cmp
ret
mov
out
scas
loope
lret
mov
xor
inc
in
push
into
fnstenv
xor
mov
add
movsl
push
mov
iret
scas
pop
ret
sub
bswap
movsl
xchg
jne
jnp
adc
push
in
cmpsb
mov
push
fsubl
cmp
and
jno
call
add
adc
mov
es
mov
sbb
dec
mov
sbb
sub
repz
xchg
add
mov
mov
dec
aad
aaa
fmul
lret
inc
ss
cwtl
pmaddwd
sbb
cmc
sbb
mov
addb
pushfw
jecxz
pop
lods
xor
lahf
fists
aas
popa
add
pop
int
jbe
test
shl
imul
pusha
xor
lcall
jbe
jg
out
pop
movsl
or
pop
das
es
andl
icebp
cmp
loop
add
bound
scas
add
mov
loop
inc
lcall
push
push
das
xor
xor
jmp
aam
rorl
test
mov
out
inc
in
lea
hlt
and
inc
sub
jmp
and
cmp
mov
test
or
mov
imul
adc
sbb
mov
mov
out
sub
ss
sbb
lcallw
inc
test
rcrl
sahf
push
ds
jo
sub
gs
mov
and
or
dec
push
jl
mov
js
mov
ss
movsb
or
sti
push
lds
xlat
ret
xor
loopne
push
popa
and
call
icebp
mov
mov
add
xorl
clc
inc
add
jecxz
push
jp
add
pop
push
push
leave
push
mov
sahf
int3
sbb
pushf
mov
jge
adc
and
popa
cwtl
cld
lret
aaa
push
enter
or
inc
scas
adc
xor
push
jle
inc
pushf
xchg
xor
aam
xor
inc
adc
cmp
dec
cli
pop
cmpsb
lea
or
movsl
mov
clc
or
lods
repz
ficompl
dec
push
mov
enter
cmc
lods
pop
or
int
push
pop
mov
cmp
cmp
pop
loop
xor
mov
movsl
movsb
add
adc
test
les
xor
cmc
mov
int3
iret
insl
dec
push
mov
ret
pop
xchg
or
mov
popa
pop
dec
out
push
mov
dec
data16
mov
fisubs
and
repnz
mov
jnp
inc
push
movsl
push
adc
mov
jo
mov
or
dec
outsb
jmp
or
adc
lahf
xchg
sbb
ret
test
int
sbb
push
subb
ret
sbbl
adc
out
out
xor
cltd
shr
xchg
fs
out
inc
xchg
cmc
fdivp
pop
adc
xor
jnp
leave
sub
call
mov
aaa
ja
test
in
fstl
leave
jne
ret
ficoml
push
dec
loopne
xlat
andl
out
xor
adc
hlt
test
mov
push
incb
add
sub
sbb
mov
and
repnz
mov
mov
inc
shll
stos
pop
xor
mov
repnz
lret
in
mov
loopne
ljmp
xchg
aam
mov
mov
scas
jbe
mov
lret
xlat
ja
loop
xchg
mov
mov
mov
shl
lods
cltd
fdivrl
xchg
leave
std
test
lea
xor
mov
push
cmp
scas
test
nop
and
imull
or
and
dec
loope
adc
jecxz
add
mov
and
scas
mov
int3
lahf
mov
jns
aad
add
xchg
add
out
xorl
dec
shrb
outsl
cmp
cmc
outsl
mov
stos
mov
fisubs
mov
fiaddl
arpl
add
inc
jle
mov
inc
mov
test
sbb
sbb
dec
adc
cs
cmp
lock
sub
push
xchg
or
mov
arpl
leave
pop
mov
mulb
loopne
xor
adc
stos
ljmp
mov
mov
mov
xchg
inc
mov
inc
pop
push
loop
mov
imul
ret
push
push
mov
dec
enter
adc
adc
mov
dec
or
jne
mov
sahf
into
frstor
fsubrl
pop
pop
dec
xchg
jbe
xor
out
add
xor
push
lods
xchg
sbb
sbb
adc
lods
jmp
fbld
adc
scas
test
bound
inc
pop
lods
mov
loope
and
repz
cli
dec
mov
rorl
jae
xchg
jg
sub
js
xchg
jns
cmp
jle
inc
sub
fwait
mov
stos
outsl
scas
fiadds
adcb
mov
iret
mov
int3
or
loopne
das
sub
sti
or
sub
into
inc
stc
fsubs
pop
repz
push
mov
adc
loope
jg
and
pop
outsl
shll
push
sub
mov
inc
jne
sbb
jge
and
xor
ret
push
enter
pushl
mov
or
in
fsub
icebp
in
insl
pop
or
sahf
lret
mov
lea
call
pop
ds
lods
pop
xor
push
xchg
mov
das
rcrb
adc
dec
into
lahf
pop
pop
add
and
sbb
ja
nop
jl
adc
adcl
cmpb
cmc
dec
sub
cwtl
push
sbb
es
mov
and
sti
adc
push
fistpl
cmp
gs
cmp
jbe
jmp
shlb
and
mov
jmp
int3
adc
out
call
les
jnp
and
mov
pop
ficoms
dec
rorl
in
push
pop
push
push
add
iret
xchg
shl
dec
addr16
sbb
mov
in
mov
xor
inc
mov
and
nop
push
fsubr
sbb
lods
stc
xor
lods
mov
stos
ficoml
in
add
sar
rorl
pop
pop
jbe
fildl
jge
jle
rolb
inc
inc
mulb
fisubl
rcl
fisubl
sub
or
lods
std
or
push
fisttpl
out
jnp
sub
fsub
add
pusha
pop
repnz
dec
mov
dec
jmp
insl
sub
dec
and
mov
adc
addr16
dec
xchg
loop
sti
sub
outsl
test
xchg
aas
ss
jmp
rcll
pop
jl
lret
mov
jl
sbbb
xchg
sahf
shll
sti
and
lahf
ret
pop
loope
popa
fstps
xor
aam
add
xor
xorb
jmp
pop
mov
pop
sbb
int3
test
cld
push
sbb
lahf
adc
xchg
ret
iret
push
fwait
jle
jns
hlt
push
and
pop
repz
leave
pop
sub
dec
jmp
aad
mov
fsubrs
scas
lods
sub
iret
push
pop
xor
jge
test
enter
cmp
push
push
test
jmp
cmpsl
push
cld
or
ud2
sub
dec
sub
inc
mov
sub
addr16
sbb
out
mov
fmuls
imul
mull
lahf
xchg
dec
cmp
ret
leave
jp
push
addr16
or
mov
pop
or
xchg
ljmp
push
test
dec
sub
std
mov
xchg
inc
mov
jne
imul
mov
add
fidivrs
jbe
daa
lahf
repnz
nop
or
in
aam
movsl
scas
inc
xchg
leave
out
cmp
inc
dec
fistps
push
and
jecxz
in
add
sbbb
cmpps
imul
cltd
dec
mov
push
mov
xor
arpl
daa
les
stc
ljmp
inc
xor
xor
in
xchg
sbb
out
in
cmp
xchg
dec
mov
hlt
xchg
adc
mov
dec
popa
sarb
sti
adc
fs
dec
xor
add
shll
mov
inc
sub
iret
jge
dec
mov
lds
sub
gs
xor
jns
cwtl
ret
icebp
pop
gs
inc
inc
xchg
push
icebp
xor
add
lret
xchg
pop
adc
dec
mov
aam
jb
outsb
cmp
outsb
jecxz
jnp
push
sarb
xchg
mov
mov
lds
cmp
fisttpll
out
adc
xchg
mov
jnp
xchg
fidivs
jbe
adc
push
fnstsw
jnp
or
nop
dec
mov
inc
push
jno
push
call
subl
inc
pop
jne
or
mov
lret
shlb
lret
es
mov
cmp
loope
pop
fcoml
lret
and
repz
out
add
js
addl
arpl
lea
cmp
inc
lock
cmp
pushf
jg
lea
cwtl
pushf
pop
ficoml
out
ss
xchg
fwait
jg
popa
negb
mov
inc
sbb
mov
jecxz
mov
in
enter
xchg
pop
inc
call
push
andl
inc
sbb
flds
mov
and
out
stos
mov
and
fcomp
out
sub
pushl
and
aam
mov
lods
lods
sti
fisttpll
inc
mov
jg
pusha
pusha
xlat
pop
add
mov
lock
dec
sahf
std
je
lods
fistpll
push
fstl
clc
into
mov
push
test
popf
add
lock
enter
inc
add
int
pop
les
insl
xchg
aam
push
add
sti
enter
nop
sub
pop
push
sbb
adc
clc
call
leave
sub
arpl
jbe
out
test
xchg
or
ss
cwtl
jg
push
shrb
aad
arpl
mov
repnz
add
push
xor
lcall
insb
pop
cmp
jno
jge
into
push
xor
sbb
xchg
popa
jl
daa
pop
aaa
sub
mov
loop
stos
and
adc
hlt
bound
lcall
or
out
cmp
inc
dec
test
cs
pop
ss
cwtl
push
inc
scas
sub
xor
test
lret
pop
sub
in
aad
dec
std
sbb
test
in
cld
jle
lea
push
shrb
mov
mov
pop
loope
push
xor
pop
add
movsb
stos
aaa
adcl
sarl
push
lock
dec
roll
in
pop
out
test
push
gs
ret
pop
leave
sar
inc
pop
stos
addb
test
or
xchg
or
mov
or
push
scas
xor
call
mov
fsubl
mov
clc
xor
jl
jmp
cmp
xor
jo
cmp
jbe
pushf
xor
xorl
inc
pop
inc
ds
inc
outsl
daa
les
push
dec
adc
and
js
pop
jae
dec
aaa
fsubrs
mov
jne
into
pop
jno
pop
je
pop
mov
repz
sbb
ss
orb
xchg
push
jecxz
into
add
add
out
pop
jmp
fidivl
iret
movsb
in
enter
sarb
pop
xchg
cmpsb
loopne
inc
inc
lods
pop
sub
pop
pusha
pop
int3
out
arpl
sbb
scas
orb
ja
push
dec
and
mov
sub
mov
inc
std
push
and
sbb
lcall
data16
pushf
xchg
stos
shl
in
sub
mov
insl
cmpsl
xor
fisttpl
pop
leave
jnp
test
cmp
sbb
arpl
jne
dec
jg
sbb
cmp
js
rdtsc
cltd
fs
or
pop
xorl
aas
cmp
sub
dec
inc
stos
xchg
out
or
stos
cmp
movsl
scas
aad
scas
jmp
lock
or
mov
cmp
and
pop
sbb
in
shrb
and
repz
pop
or
loope
mov
daa
xchg
test
out
mov
test
sbbl
outsb
dec
mov
stos
aas
mov
lahf
pop
sub
xor
cld
adc
cmp
mov
jns
lods
sbb
cmpsb
hlt
or
jae
inc
mov
rcl
mov
xchg
jg
and
repz
push
cmovg
push
lods
fstl
cmc
sbb
mov
mov
sbb
xor
shlb
dec
out
int3
cmc
movsb
add
fs
adc
test
pop
loopne
rorl
inc
push
xchg
push
outsb
jae
arpl
popa
fsub
mov
push
enter
xlat
mov
and
dec
pop
or
scas
xchg
dec
loope
jne
loop
sub
loopne
or
ss
mov
mov
mov
in
jae
jmp
rol
cmc
notb
subl
shr
sbb
jb
clc
fbld
pop
in
in
and
sbb
sbb
lahf
ljmp
in
loope
test
jo
mov
or
subl
sub
sahf
inc
push
and
and
xor
movsb
cmp
push
jg
leave
out
push
es
and
inc
icebp
in
scas
push
inc
lods
outsl
into
ret
mov
push
push
adc
sbb
pop
outsl
xchg
js
lods
dec
xchg
xchg
insl
fnstcw
cltd
jb
jns
nop
daa
push
xor
scas
sub
sbb
in
sbb
stos
lret
out
push
aaa
flds
jle
icebp
pop
outsl
loope
sbb
sub
inc
xchg
cld
cli
int3
add
cmp
mov
xchg
outsb
mov
jne
adc
jbe
xchg
mov
fdiv
popa
loope
test
push
lahf
mov
mov
mov
es
ljmp
dec
xchg
push
or
subl
or
sbb
mov
mov
mov
fidivrl
cmpsb
xchg
scas
dec
and
cld
push
cli
mov
notb
stos
fildll
push
add
shrl
mov
je
adc
xchg
movsb
shrb
pop
sahf
or
push
inc
or
mov
sub
std
mul
movsl
jno,pn
jle
adc
push
test
add
jl
fmul
dec
pop
cmp
inc
notb
xor
pop
repnz
cmp
lret
adc
xor
jne
movsb
xor
jle
fs
icebp
xchg
mov
mov
push
outsb
iret
mov
mov
aam
inc
dec
or
ficoms
lods
cmpsl
inc
test
sbb
ss
jecxz
sbb
xchg
add
movsb
xchg
loopne
xchg
xchg
pop
pop
adc
inc
sahf
adc
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
jae
jp
pop
jp
and
add
enter
and
and
std
pop
jb
clc
xlat
sahf
sbb
pop
icebp
pop
pop
mov
test
cwtl
jno
or
jle
inc
mov
shlb
adc
mov
or
js
push
rcrl
pop
push
into
imul
jl
jae
dec
sbb
jecxz
loop
add
xlat
dec
sbb
shll
dec
cmpb
clc
movsl
push
test
mov
loop
push
rcrb
call
lcall
dec
sbb
scas
jp
jecxz
jnp
jbe
push
jns
stos
scas
xchg
mov
push
dec
idiv
push
js
pop
gs
push
lahf
or
mov
test
dec
or
in
mov
clc
jl
inc
inc
loop
or
add
loope
dec
cmp
loopne
notl
mov
lods
out
orb
xor
mov
sub
jae
lret
lahf
fsubrs
pop
faddl
dec
lea
jb
aaa
and
adc
in
jno
mov
dec
sahf
dec
add
imul
xchg
into
mov
mov
xchg
and
sbb
push
jne
add
mov
std
sub
sbb
xchg
aas
fistpl
roll
lock
sbb
out
mov
sbb
or
pop
mov
sbb
ficoms
cmp
les
mov
xor
inc
mov
bound
test
push
sbb
add
test
popa
out
cmp
test
lcall
pop
shlb
cmp
mov
add
mov
outsl
add
loopne
xor
pmuludq
inc
push
cltd
enter
rolb
or
lret
stc
jmp
xchg
inc
cltd
xor
adc
rcr
gs
and
pushf
and
in
repnz
mov
dec
mov
repz
sub
divb
sbb
push
imul
fwait
push
jp
movsb
push
mov
out
cmpsl
xchg
pop
push
mov
das
push
push
mov
aam
mov
mov
mov
xchg
mov
pop
mov
mov
xor
lods
out
sbb
inc
test
rorl
pop
js
push
cmp
pop
clc
test
cltd
mov
lock
cmp
call
hlt
xor
lret
mov
inc
inc
cmp
jmp
shll
roll
dec
lock
mov
pop
mov
and
test
sbb
mov
and
jle
aad
xor
cld
fsubp
pop
hlt
jmp
insb
push
fst
cmp
jge
jae
adc
mov
je
sub
sbb
into
outsb
and
pop
and
movsb
lret
scas
dec
les
mov
pop
ja
push
push
cmp
jno
cmovle
in
dec
fs
les
iret
pop
jae
dec
fmulp
mov
push
cli
sub
lret
mov
je
pop
lea
in
jmp
mov
xlat
mov
fld
cltd
test
rol
jmp
mov
sbb
push
or
mov
xchg
xchg
mov
and
fimull
or
or
pop
roll
lods
push
pop
lods
jg
sub
mov
in
mov
cmp
mov
fnstenv
adc
and
shll
sbb
add
rcr
jl
adc
cmp
test
int
xor
mov
xchg
xchg
and
and
sub
aad
das
int
aas
inc
xchg
jecxz
jle
cltd
mov
lea
test
fildl
rcll
mov
cmp
das
test
test
dec
in
and
add
and
mov
mov
fidivl
faddl
jne
test
or
outsb
lcall
cld
push
and
sub
push
xchg
or
or
negb
cwtl
mov
lea
add
mov
adc
push
pop
pop
or
mov
jne
mov
scas
mov
push
and
sahf
lods
push
xor
and
jecxz
movsl
fisubl
stc
jg
xor
xchg
mov
cltd
lret
adc
loope
xchg
and
scas
xchg
mov
cmp
into
push
repz
pop
mull
imul
mov
shrb
sbb
lods
push
mov
mov
shlb
cmpsl
xchg
enter
jne
mov
test
sub
mov
addb
jl
inc
sub
repnz
les
mov
adc
aas
nop
aam
or
rcll
test
sbb
sub
mov
inc
inc
out
cwtl
icebp
pusha
adc
fcomip
sbb
mov
ficoms
pop
addr16
data16
dec
inc
out
jecxz
push
fisubs
push
cmp
sahf
jne
jnp
pop
lea
sbb
hlt
test
inc
push
repz
lods
sbb
and
iret
pop
cmp
sub
lahf
push
xor
mov
or
or
xor
push
sbb
ss
aaa
subl
pop
pop
ds
jle
lahf
mov
lds
push
in
push
hlt
add
lahf
push
pop
popa
pop
into
push
add
mov
cs
insb
fadds
sbb
hlt
rorl
xchg
xchg
pop
popf
add
shr
das
movsl
in
call
dec
xchg
sub
imul
roll
rorl
xor
sub
pop
push
jmp
lret
add
icebp
jmp
scas
fidivs
clc
je
or
inc
roll
cmp
popf
movsb
jae
xorl
pop
or
jle
adcl
movsb
out
mov
sub
in
jae
mov
push
jmp
test
xchg
sbb
jg
popa
fwait
lods
lcall
mov
cltd
sub
jns
jge
push
add
xchg
pop
pop
sbb
leave
cmp
insl
adc
mov
add
cmp
and
lods
ret
das
mov
add
lret
lret
cmp
xor
pop
sub
mulb
push
aam
and
mov
gs
cmpxchg
and
testl
mov
lds
pop
pop
fdivl
mov
mov
dec
insl
adc
push
push
mov
jmp
xchg
icebp
into
fildl
push
xchg
cltd
xor
push
ret
jbe
adc
and
jmp
jb
mov
bound
mov
xchg
int
pop
pushf
jmp
inc
std
inc
pop
sub
mov
popf
jne
sbb
sub
inc
stos
test
push
inc
cmpsl
sub
inc
push
scas
pushf
jp
jbe
pop
mov
or
cmp
cltd
push
xor
sbb
mov
cmp
fists
inc
leave
rcl
lret
insb
fdivs
or
aad
jl
pop
hlt
lds
xlat
sbb
xlat
in
addr16
data16
adc
mov
pop
cmp
repz
mov
lret
sub
insb
push
jne
gs
and
push
dec
mulb
adc
inc
xor
mov
movsl
cmp
ljmp
dec
jo
fisubrs
push
cmp
je
lods
lds
cltd
insb
inc
in
adc
jo
mov
jnp
mov
jb
stos
sub
sbbl
and
mov
dec
mov
dec
adc
out
pushf
outsb
and
notb
pop
subl
mov
subb
in
push
sub
pop
rcrb
dec
test
popf
lods
cmc
ja
clc
enter
fstps
cmp
aaa
and
sbb
sti
insl
aas
data16
pop
mov
lds
sub
push
jno
ja
pop
and
mov
insl
popa
enter
sub
cli
xchg
clc
data16
addr16
cmc
mov
shlb
out
jb
add
mov
aaa
ss
orl
int
insl
sbb
or
mov
clc
call
jg
adc
add
fimull
addr16
iret
add
push
cmp
repnz
or
cld
xchg
in
and
xchg
push
add
and
outsl
movsl
and
dec
lcall
fcompl
jb
pop
push
and
leave
or
push
hlt
mov
and
divl
jno
ret
sbb
or
fwait
mov
sub
jo
pop
jne
dec
add
dec
lock
cmp
call
scas
fdivs
dec
push
test
add
adcl
bound
lods
les
add
iret
sbbb
sarb
inc
scas
pop
xchg
add
pop
push
movsb
test
jb
lahf
mov
je
loopne
ret
int
and
jne
addr16
jle
cltd
jbe
cli
dec
xchg
movsb
shr
adc
cmpsl
call
add
push
jo
scas
jno
ds
stos
scas
incl
xor
adc
sub
adcb
sub
or
pop
mull
fldt
cs
sub
imull
sub
adc
jns
xor
inc
lock
shrl
ret
aad
sbb
xor
and
jle
inc
jmp
das
push
mov
pop
adc
inc
and
adc
xlat
mov
movsb
inc
or
ror
mov
imul
lock
jne
inc
insl
pop
sub
push
sbb
lahf
decl
mov
mov
lret
mov
aas
dec
outsl
or
jmp
jo
cld
pop
imul
sbb
pop
jae
mov
inc
push
outsb
mov
mov
or
aaa
jmp
push
outsl
out
cltd
test
data16
scas
adc
ss
xor
adc
hlt
int3
xchg
push
sub
push
jp
mov
mov
push
mov
or
bound
adc
pop
push
dec
in
xorb
out
mov
sub
pop
les
jecxz
mov
gs
cmp
xchg
or
adc
mov
mov
inc
cmp
jecxz
or
push
mov
enter
mov
add
stos
in
mull
mov
sub
pop
mov
aas
aas
xor
insb
mov
pop
je
mov
or
mov
stc
mov
or
pop
clc
pop
roll
sahf
or
inc
xor
in
sbb
cmp
mov
dec
xchg
cli
mov
adc
push
xchg
cwtl
jge
ja
mov
cs
xchg
cs
mov
iret
xor
sbb
or
jge
xor
loop
cltd
sub
mov
adc
xor
push
push
dec
cmp
xchg
mov
and
pop
cmp
incb
jns
xchg
dec
inc
add
push
add
jp
dec
dec
aad
shll
aaa
popf
outsl
fdivl
in
in
jbe
push
iret
inc
movsl
mov
pop
jns
or
push
inc
and
cmp
mov
repnz
lods
xchg
mov
insb
lahf
idivb
pop
fs
outsl
test
call
sub
in
adc
flds
inc
shlb
fsubr
or
movsl
sub
arpl
repnz
stos
cs
push
and
mov
and
ds
adc
leave
int3
xor
jbe
jle
std
je
cmp
imul
cwtl
iret
adcl
sub
xor
adc
xorl
fiaddl
fildll
xor
in
adcb
push
jmp
xor
arpl
insl
and
mov
aad
repnz
mov
das
int
gs
xor
dec
popf
sub
adc
mov
clc
xlat
sbb
inc
popf
jns
xchg
xchg
out
dec
lahf
dec
and
jge
outsl
int3
push
xchg
mov
mov
fsubs
imulb
xlat
sbb
test
xor
jnp
xchg
inc
jg
or
cltd
push
dec
dec
jo
js
mov
aam
ds
jbe
insb
nop
and
mov
in
je
push
inc
movsb
pusha
inc
jno
jmp
push
jne
dec
sub
push
dec
mov
movsw
push
mov
dec
loope
sarb
xor
pushf
addl
mov
mov
sti
rcll
sahf
sbb
imul
sub
and
inc
inc
daa
xchg
pop
popf
cwtl
stos
jo
sub
push
leave
dec
adc
out
inc
cmp
lock
sub
fcmovnb
inc
xor
xchg
mov
clc
pop
push
adc
nop
js
mov
cmpsl
pop
loop
lea
inc
pop
les
movsl
push
pop
sbb
outsb
inc
sub
ret
pop
ret
dec
sub
and
pushf
adc
add
out
dec
sub
arpl
pop
sub
imul
cs
jnp
sahf
into
push
inc
adc
popf
shr
push
cmp
jno
pop
sbb
call
dec
cmp
movsl
addr16
test
mov
mov
adc
jae
inc
cmp
fldl
inc
scas
pusha
mulb
or
inc
sarl
dec
mov
insb
enter
les
jnp
aaa
repnz
rcrb
cld
js
dec
cmp
negb
into
mov
ds
pop
inc
sub
sub
push
mov
jbe
push
int3
pop
sub
mov
xor
pop
fstps
jb
shrb
arpl
cmp
xchg
xchg
rep
test
clc
cmpsb
jns
push
inc
aas
mov
or
jbe
imul
test
aas
rcr
out
inc
mov
mov
rcrb
inc
adc
repz
lods
push
sbb
dec
fiadds
loopne
fidivs
in
loopne
out
push
rorl
das
jns
insb
xorb
dec
filds
cmpsl
andl
adc
cld
push
add
loopne
mov
jno
mov
mov
mov
add
loopne
out
mov
outsb
mov
in
and
and
add
shrw
jb
imul
cmp
push
mov
sti
popa
fistl
inc
or
lret
mov
xor
mov
push
adc
or
push
cmp
pop
test
ret
mov
data16
lahf
push
ja
sub
add
aaa
out
ret
dec
add
sub
dec
stos
pusha
fisubrl
dec
add
sti
mov
sahf
xchg
dec
into
cwtl
pop
cli
pop
nop
loopne,pt
jo
out
and
lea
sub
push
rcrl
jo
add
loopne
sbb
test
aad
mov
adc
adc
dec
sub
int
pop
dec
mov
xor
push
inc
lret
pop
pop
jmp
jp
adc
pop
scas
pop
push
arpl
scas
mov
test
xchg
xor
arpl
inc
lahf
inc
mov
imul
or
jmp
push
ljmp
push
int
sbb
lods
lods
mov
sarb
mov
add
push
xchg
jecxz
ja
add
lods
mov
iret
rolb
mov
jbe
jle
cmp
fdivl
push
fsubp
shr
pop
mov
outsl
testl
orl
jmp
sbb
std
cwtl
pop
mov
ljmp
std
loop
pop
mov
lea
daa
inc
divl
fnsave
iret
or
inc
fisubl
pop
clc
es
adc
and
nop
js
push
inc
in
mov
cmpsb
inc
and
add
adc
in
loop
mov
pop
int
jno
mov
test
lahf
dec
or
push
jno
sbb
ret
pushl
lock
lea
push
or
mov
push
outsb
inc
lds
jl
inc
xchg
mov
cmp
adc
cmp
pop
in
test
cli
sbb
xor
movsl
xor
data16
int3
loop
mov
mov
popa
out
imul
jne
xchg
fwait
negl
lret
xchg
mov
lret
cld
loope
sbb
mov
add
xor
cmpsb
mov
aad
mov
ja
pop
mov
adc
fbstp
js
jb
imul
sbb
outsl
test
xchg
cmp
xchg
mov
lcall
rorb
or
out
outsb
pop
jp
add
lcall
aas
rorb
push
loopne
mov
scas
add
ss
rolb
mov
int3
add
add
jns
je
xchg
shll
or
std
or
rep
test
mov
jg
mov
add
testl
jne
add
clc
hlt
lahf
fnstsw
popf
lcall
aam
clc
mov
cmp
sbb
push
fwait
jl
test
jae
mov
xchg
xor
idivl
repz
insl
int3
jmp
lcall
leave
pop
mov
shll
repz
pop
lcall
jmp
inc
jo
jle
mov
js
xor
dec
adc
push
lock
loop
mov
rcrb
mov
mov
mov
icebp
sti
rorl
sbb
dec
and
sbb
dec
test
xlat
jae
sub
mov
in
aas
jmp
aas
aad
xchg
fidivrs
jmp
aas
lock
loop
sub
lods
fmull
xchg
dec
nop
cwtl
rorb
mov
outsb
fiadds
mov
mov
enter
ds
ja
jmp
jg
leave
xorb
sub
cmp
lods
rolb
in
mov
mov
push
sti
mov
test
sbbb
aaa
and
into
cmc
mov
push
adc
stos
scas
pop
addr16
push
inc
push
sub
flds
jo
lcall
in
or
jmp
call
xor
aad
fisttpl
cltd
inc
mov
insl
sbbb
dec
insl
hlt
fwait
aaa
xchg
ffreep
std
frstor
cbtw
fistps
push
mov
jl
lods
cmp
roll
out
ds
int3
and
repz
out
sbb
pop
pop
adc
mov
dec
cmp
dec
adc
sahf
mov
aaa
push
pop
cmovge
int3
jl
mov
inc
push
insb
push
fcmovnbe
popa
daa
mov
sbb
gs
jle
xchg
mov
mov
mov
or
les
lcall
outsl
loope
out
mov
fdivr
jecxz
cld
pop
jmp
sbb
mov
inc
aam
shlb
or
xchg
es
pop
xchg
add
jno
arpl
repz
je
mov
movsb
cli
dec
movsb
cs
dec
into
pop
mov
xor
xchg
add
and
dec
stos
xchg
and
sbb
add
out
push
sub
jmp
mov
sbb
xchg
mov
pop
sbb
imul
and
mov
fidivrs
outsb
jp
and
mov
mov
aad
xchg
dec
aas
cmp
push
inc
loope
and
sbb
scas
ljmp
and
sub
xor
pop
jo
mov
xor
and
loop
in
mov
jo
icebp
xor
push
pop
mov
out
jns
mov
cmp
xchg
adc
xor
and
inc
das
and
test
stos
fbld
fwait
mov
in
jecxz
lds
fiaddl
mov
leave
cmp
xchg
test
in
lcall
fwait
repz
inc
pop
dec
pop
jle
push
jge
mov
outsb
aam
pop
adc
xchg
dec
outsb
cmp
aas
and
push
in
xor
inc
pop
mov
or
fistpl
fidivl
fucomi
jns
int
je
out
mov
mov
hlt
mov
cld
jmp
adc
sub
pushf
fistpll
inc
push
pop
dec
and
addr16
xor
jbe,pt
mov
mov
jmp
jmp
and
cmpsl
pop
jle
mov
test
push
dec
bound
in
fsubr
add
sub
push
jle
pusha
xchg
iret
lret
inc
aam
jge
xor
jle
clc
cmp
loop
popa
xor
sbb
jle
push
cmc
xor
aam
lods
fsubs
data16
jg
stc
pop
andb
lret
push
aaa
jg
jo
es
jnp
mov
pusha
push
jnp
or
xor
sub
add
xchg
push
arpl
add
xchg
out
adc
leave
pop
push
out
jno
idivl
idivl
xchg
gs
call
mov
xchg
mov
fsubrs
adc
add
jge
sbb
xchg
bound
cmpsb
push
adc
xor
hlt
out
jo
xor
xor
mov
mov
mov
shll
lret
cmpb
aas
aaa
jns
pop
push
mov
iret
xor
stos
pop
insl
imul
jge
movsb
mov
das
in
xchg
mov
mov
loope
jmp
shrb
in
pushf
lock
jp
psrad
jl
xchg
pop
mov
les
cmpsl
sub
xchg
fstpt
pop
pop
lahf
lods
pop
lcall
icebp
cmp
push
jecxz
push
fildl
pop
sbb
push
insb
cmpsl
cmp
lcall
and
fsubs
xor
adc
je
jae
test
xlat
mov
mov
cmc
pop
dec
ds
sbb
outsl
jnp
lock
pushf
cmp
scas
sub
sahf
arpl
movsl
out
int3
push
mov
dec
mov
pop
jno
aam
mov
inc
popl
mov
test
cmpsl
jmp
lods
incb
adc
and
fcmovb
int3
ret
shll
scas
std
and
xchg
stc
pop
mov
rcll
and
popf
add
mov
sbb
inc
sbb
push
sub
repz
cmpsl
sub
add
imul
lds
jne
mov
ja
shrl
mov
cmp
pop
lock
jecxz
dec
sub
pop
sbb
xorl
call
in
out
idivl
rcrb
inc
and
arpl
inc
fnstenv
nop
push
jnp
daa
dec
jecxz
in
scas
cmpsl
dec
mov
arpl
stc
je
ret
add
pop
adc
inc
leave
or
icebp
sub
pusha
into
xorb
push
push
ja
pop
pop
mov
adc
push
xchg
das
mov
jae
int3
bound
andb
xchg
cmpsb
sub
pop
cwtl
lcall
aaa
mov
inc
add
dec
xchg
andb
lcall
and
sub
insl
insb
faddl
loopne
mov
in
sub
iret
loopne
rclb
iret
mov
test
cmp
jge
mov
shrb
push
lea
aam
adc
push
loop
or
aad
mov
xor
lea
ja
and
nop
sub
pop
add
ficompl
out
rcll
mov
jnp
loope
int3
lret
decl
mov
loopne
pop
dec
and
inc
push
hlt
add
sti
mov
je
pop
pmulhw
lods
cli
inc
mov
cld
xchg
aaa
dec
add
mov
lea
cli
bound
outsl
inc
push
push
pop
add
arpl
data16
push
lea
mov
fidivrs
push
out
cld
push
push
ret
clc
and
pop
mov
fs
pop
sbb
aaa
push
mov
gs
cmp
mov
aam
inc
addr16
push
sbb
cmp
cmpsb
or
pop
sbb
add
std
lcall
push
or
jp
mov
mov
jo
dec
iret
xchg
mov
outsb
push
mov
cld
cmp
or
push
ret
mov
mov
jp
ret
jecxz
mov
sub
mov
dec
sti
jl
imul
outsb
jmp
bound
dec
sub
add
ds
fwait
scas
mov
loope
ja
cmp
cwtl
or
outsb
aas
int
sub
icebp
pop
mov
jno
enter
fnstcw
or
rcl
nop
and
shlb
cs
inc
and
inc
popa
push
inc
outsl
sbb
loope,pn
inc
mov
xchg
mov
pop
xor
push
jo
adc
lock
pusha
sti
xlat
mov
jo
sbb
andl
pop
xchg
lods
sub
mov
adc
adc
jo
push
jmp
addr16
xor
nop
sub
outsb
jns
out
mov
stos
xor
and
mov
rorb
out
push
movsb
cmpb
mov
inc
hlt
mov
and
bound
and
xchg
sbb
mov
data16
jo
ds
rcll
mov
lcall
push
or
jp
pusha
or
or
js
std
mov
dec
sbb
push
fisttpll
les
jmp
lods
pop
push
pop
les
adc
js
cmp
or
arpl
inc
or
scas
inc
mov
es
dec
cli
popl
and
sub
or
xor
movsbl
adc
adc
jne
jnp
movl
push
movsl
sub
shlb
cmp
inc
lret
adc
mov
add
scas
cmp
fucom
test
fiadds
add
sbb
lods
out
mov
adc
inc
mov
mov
pop
lock
sub
fisubrs
and
pop
and
in
shl
aam
enter
incb
xor
mov
or
int
cmc
scas
fsub
test
gs
fs
sti
stc
fstpl
mov
pop
imul
sub
pop
sbb
imul
jno
cli
xlat
fcomip
ret
xlat
jns
push
cmp
fnsave
fidivl
push
sub
jl
mov
xor
out
xchg
jg
insl
mov
decb
dec
xlat
mov
gs
sbb
add
packssdw
sti
shll
pop
mov
rorb
cli
pop
push
dec
xchg
mov
xor
lock
and
clc
mov
sahf
scas
cmp
jmp
das
dec
cmp
add
push
in
sub
lret
or
mov
je
sahf
adc
insb
mov
jmp
push
fstps
das
and
test
or
mov
push
dec
rclb
orl
hlt
sbb
push
push
inc
call
aam
icebp
sbb
or
call
sbbb
cld
aad
shlb
lret
inc
fsubl
adc
or
test
mov
or
incb
cmpsb
je
jecxz
pop
movsl
and
jmp
dec
dec
mov
and
pop
pop
fisubrl
cwtl
imul
mov
imul
cmpsb
mov
mov
push
jo
cmp
inc
subb
pop
les
and
jae
or
out
jmp
cld
mov
and
cmpsb
pop
push
or
lods
insb
repz
mov
adc
push
mov
and
and
mov
cwtl
and
es
jb
addl
lret
jmp
jns
push
or
xchg
dec
sub
fdivrs
mov
jb
lahf
fst
pushf
and
jns
jnp
cmp
mov
pushf
mov
cltd
pop
dec
add
lret
iret
mov
std
adc
outsl
push
stc
add
sub
std
adc
jl
or
push
gs
jmp
insb
cli
mov
sbb
mov
jnp
ja
push
xchg
das
xchg
mov
pushf
lret
popf
jecxz
sahf
or
jle
sub
sbb
sub
cmpsb
adc
push
popa
imul
test
dec
cmp
mov
into
dec
lock
inc
mov
xchg
adc
xchg
out
mov
fwait
dec
pop
jle
mov
mov
sti
mov
inc
xor
mov
mov
jnp
imul
xchg
or
loopne
xchg
xor
mov
mov
test
pop
in
lds
iret
jae
jle
les
cmpb
add
sub
mov
filds
lretw
xchg
fdivrp
xor
lahf
pop
jns
cmp
fldl
cmp
xor
insb
std
outsl
mov
jmp
test
jne
jp
in
sub
out
cmp
leave
ljmp
int3
ss
fs
adc
cmpsl
lods
je
push
daa
cld
in
dec
and
rorb
fwait
in
xchg
shrb
or
and
mov
mov
xchg
xchg
gs
ret
pop
mov
scas
inc
push
ljmp
jl
rclb
add
or
sub
icebp
cmc
popl
daa
xchg
push
add
xchg
bnd
xor
pop
sbb
call
aad
adcb
sbb
adc
iret
lret
lcall
hlt
testl
fwait
add
inc
int3
mov
xchg
insl
imul
pop
adc
dec
lret
test
pop
xchg
pop
jne
mov
bound
rclb
inc
cmp
fdivrp
sub
xchg
movsb
sub
lcall
shr
dec
or
or
adc
mov
and
insb
cmp
jmp
xor
ss
int
mov
sbb
std
cli
fcomps
add
aas
xchg
push
or
push
mov
inc
and
push
loope
sub
stos
lea
testl
jge
cmpsb
dec
adc
and
mov
or
inc
mov
add
aaa
mov
and
pop
hlt
xor
and
lock
pusha
mov
lods
pusha
ljmp
loopne
xchg
jmp
and
loopne
data16
push
jle
scas
or
xor
xchg
push
inc
dec
pop
jp
or
mov
ljmp
insw
xor
lahf
pop
mov
imul
mov
dec
push
iret
mov
aas
fxch
out
mov
hlt
xor
push
jo
sub
inc
xor
lret
les
pop
dec
repnz
push
jecxz
xchg
xchg
mov
test
xor
stos
mov
mov
adc
rol
aad
sahf
cld
xchg
push
repz
xor
pop
je
in
test
xchg
cwtl
gs
aaa
sbb
lods
mov
lods
je
sub
xchg
dec
rcrb
push
xor
add
test
push
aas
dec
idivl
and
call
sub
in
mov
xor
pop
insb
jge
and
inc
mov
sub
xchg
mov
out
adc
incl
jp
iret
int3
test
pop
jbe
test
lds
xor
cmp
and
lds
aad
mov
jb
jge
imul
lret
out
repz
inc
pop
sbb
ja
adc
mov
ja
popa
and
mov
or
not
movb
xchg
and
in
mov
jo
jecxz
js
mov
push
lods
xchg
enter
xchg
inc
das
pop
dec
je
mov
out
xor
stc
ficoml
lahf
fisttps
xor
js
shl
push
and
mov
sbb
inc
lods
stos
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
es
inc
pop
push
jns
add
jp
xchg
loop
ss
add
mov
pop
mov
sub
cli
scas
jmp
es
insl
sub
xchg
mov
getsec
mov
ljmp
mov
and
fmull
mov
andl
mov
add
enterw
inc
adc
stos
mov
inc
icebp
pop
cmp
nop
and
or
pushf
in
inc
or
fdiv
pop
insb
cmc
pop
xlat
xor
cwtl
adc
rol
or
or
push
imul
jmp
rclb
enter
pop
add
lcall
shll
cmp
mov
cmp
or
inc
or
push
push
repz
nop
jb
sbb
mov
jecxz
lcall
xchg
dec
jae
out
xor
pushf
ja
aaa
ss
jb
test
push
or
add
mov
xchg
and
sub
hlt
push
pop
sti
mov
adc
mov
pop
fdiv
cmp
sub
add
pop
jl
cltd
sub
lea
xor
jge
cmpsb
xor
ss
inc
iret
dec
inc
fwait
mov
insl
jbe
adc
cmp
sub
addr16
movsb
fs
ret
adc
pop
sbb
stc
rclb
bnd
paddb
outsl
mov
orb
les
adc
bswap
fdivp
inc
flds
cmp
jecxz
scas
dec
pop
dec
and
xor
mov
jle
xor
popf
shr
or
mov
sub
push
pop
xchg
ja
sti
cmp
lahf
addr16
enter
fdivs
inc
adc
int
loopne
sbb
cmc
imul
push
daa
shlb
xor
sub
insb
jmp
pop
jbe
in
cmp
and
xchg
movsb
sbb
lcall
mov
repnz
subb
test
jle
shlb
loop
sbb
add
into
adc
into
pop
jno
dec
sbb
fdiv
xchg
sbb
push
call
xor
xlat
push
test
leave
pop
sbb
mov
and
xchg
rol
in
insb
popf
and
sbb
mov
push
sbb
test
add
xchg
sub
or
out
jg
fists
hlt
pop
jbe
pop
setle
push
xchg
movsb
dec
cmpl
stc
add
xor
ret
fwait
loopne
nop
in
xor
hlt
xor
xchg
ja
and
fwait
inc
dec
mov
jb
mov
imul
out
cmpsb
mov
lods
xchg
rcrb
inc
hlt
test
scas
scas
mov
out
fdiv
mov
fucomi
cwtl
pop
or
add
mov
add
mov
repz
js
aam
and
mov
push
xor
mov
dec
xchg
aaa
hlt
int
pushf
pop
xchg
lds
xor
sarl
dec
mov
rclb
dec
das
in
pop
movsb
xchg
add
jmp
scas
sti
scas
jbe
cld
enter
xchg
cmp
shlb
or
mov
sub
pop
cmp
jns
xlat
lret
outsl
inc
sub
xor
xor
addr16
mov
repnz
pop
les
aam
dec
popf
repz
in
in
lcall
stc
pavgb
push
jl
inc
or
jge
pusha
imul
inc
or
scas
cmp
bnd
arpl
or
sti
cmp
pusha
iret
outsb
mov
xchg
xlat
cli
jle
mov
or
mov
dec
inc
sub
xchg
cmp
dec
icebp
in
mov
mov
ja
je
pop
cwtl
fistpl
popf
in
pop
pop
popa
xchg
jp
xor
xor
fmuls
fisttpl
in
mov
inc
push
push
and
pop
add
ret
mov
lret
pusha
stc
ret
in
inc
pop
jecxz
jnp
push
int
dec
push
dec
sahf
aaa
js
rcl
ja
popf
call
loope
outsl
mov
jnp
enter
xchg
mov
mov
or
inc
jge
adc
sbb
scas
addl
and
cmpsl
cwtl
mov
out
mov
loopne
dec
ret
cwtl
stos
xchg
pop
push
mov
pop
in
sti
jl
movsb
cmc
xor
mov
movsb
cmp
xchg
pusha
jne
mov
jmp
add
jo
push
jecxz
ret
push
push
or
les
mov
lret
sbb
push
ja
xor
lahf
add
gs
roll
inc
imull
mov
xchg
sub
cld
out
fwait
cmpsl
xchg
cmp
xchg
or
or
push
jle
incl
mov
adc
add
push
icebp
inc
mov
push
pop
prefetch
or
or
xchg
pop
popa
jge
pop
adc
inc
dec
fcomip
cltd
test
xorb
sub
subb
dec
jne
test
loope
sub
cmp
adc
or
add
pop
movsl
jp
frstor
aam
push
pop
leave
outsb
xor
and
out
inc
sbbl
test
sarb
dec
xlat
aad
popa
sbb
sbb
in
xchg
and
int
mov
dec
mov
lods
cltd
mov
mov
lcall
dec
cmp
cwtl
jl
dec
lods
cmpsl
aas
aaa
in
inc
cmpb
into
or
call
std
adcb
testb
jnp
cli
int3
inc
ret
out
in
fadds
pop
lods
xor
mov
ljmp
roll
xor
ja
ss
pop
shlb
inc
out
and
mov
push
sub
jl
add
sbb
shlb
push
loop
into
xchg
cmp
test
arpl
mov
cmc
mov
adc
aaa
insb
repz
push
repz
mov
call
cmp
jmp
or
mov
ss
sub
xchg
test
dec
test
cld
rcll
add
xor
adc
jb
in
cmp
inc
jne
xor
lcall
rol
mov
notl
arpl
fdivs
mov
mov
cmpsb
lea
lret
or
shrl
test
into
adc
cmc
test
loope
int
iret
push
pop
sub
mov
aam
dec
push
fiadds
les
push
xor
cltd
into
fldcw
jmp
scas
rcrl
movlps
lcall
mov
jno
cmp
les
divl
dec
jbe
push
mov
push
or
add
mov
add
das
mov
push
cld
push
adc
test
int3
add
fcomi
mov
sbb
sub
inc
inc
mov
shlb
test
das
jb
lods
and
xchg
movsl
sub
mov
es
cld
fadds
dec
adc
mov
call
mov
mov
mov
mov
movsb
stc
jo
fcomps
push
ljmp
dec
jmp
xchg
popf
icebp
in
mov
or
fsubrl
xlat
cltd
adc
inc
fldenv
loop
in
xor
sbb
push
in
push
pop
cmc
mov
aaa
stc
push
adc
pop
hlt
scas
mov
std
lret
pop
ljmp
data16
cmp
pop
popf
fmull
adc
add
test
adc
mov
push
jns
imul
cmpsl
pop
sub
lcall
mov
and
pop
into
xor
xchg
inc
and
adc
add
lahf
outsl
xchg
rclb
mov
pop
repnz
mov
in
jne
pushf
ja
xor
inc
jmp
push
aam
xchg
sbb
out
inc
inc
sbb
xchg
and
adc
dec
jg
mov
xchg
loop
xor
icebp
xchg
fdivl
sbb
loop
mov
pop
fisubrl
adc
iret
jns
lock
and
mov
roll
das
sub
cmp
adc
sub
push
js
fadd
xlat
push
icebp
jno
xchg
scas
adc
and
pop
jo
jge
jg
ret
adc
pop
mov
neg
sbb
xor
mov
bound
pop
sub
jl
mov
adc
fstpt
ror
mov
popa
sub
mov
push
lock
cmp
mov
mov
ljmp
push
fsubl
sub
daa
js
mov
add
cmp
stos
xor
call
aad
hlt
push
sub
pop
out
int
sub
adc
mov
out
push
dec
cld
lret
icebp
dec
jge
fbld
or
nop
adc
hlt
gs
or
sbb
ret
cmp
or
and
lcall
sbb
in
imul
pop
mov
pop
dec
ret
nop
test
insb
insl
outsl
mov
jg
subb
mov
jmp
sub
pushf
add
into
or
cltd
cltd
mov
nop
cs
mov
fs
out
push
jle
xchg
inc
sbb
mov
dec
xchg
stos
cmc
pusha
sub
gs
dec
mov
out
mov
adc
xchg
xor
inc
outsl
divl
cmp
sub
inc
lea
aam
outsb
pop
dec
sahf
mov
pop
jae
push
cmp
fwait
popf
std
xchg
sbb
sbbb
pop
jno
pop
popf
jmp
idiv
mov
mov
push
push
jno
arpl
xchg
lods
cmp
dec
sbb
stc
int
rcrl
shrl
bound
inc
xor
clc
leave
xlat
scas
cmpsb
jne
pop
ss
test
loope
inc
mov
mov
xor
mov
data16
mov
lret
ret
daa
popf
pop
idivb
push
mov
jle
add
mov
mov
jmp
adc
ret
sbb
fwait
jmp
push
xor
mov
outsb
push
aaa
in
lea
in
das
inc
cmpsl
mov
or
push
dec
lcall
movb
iret
cmc
lret
sub
mov
bound
xor
mov
lahf
out
call
out
fs
adc
jecxz
inc
xchg
popa
or
adc
lods
mov
xor
sahf
aam
push
mov
outsl
shlb
imull
adc
dec
dec
push
mov
jo
testb
out
inc
out
mov
inc
xchg
inc
aad
mov
sub
out
leave
cmp
push
aam
cmp
cs
cwtl
cmpsl
dec
test
ret
xor
shrl
sbb
jns
or
sub
jp
adc
cmp
push
xchg
fneni(8087
jl
inc
roll
arpl
scas
xor
ret
cmpsb
jmp
and
ljmp
hlt
sbb
mov
sbb
cmp
hlt
cmp
jne
dec
daa
mov
mov
inc
icebp
xchg
inc
adc
cmp
sbb
arpl
and
jo
sbb
scas
xlat
push
cs
lahf
jo
jo
ds
scas
mov
fisubrl
or
iret
lods
sub
add
cltd
in
stos
add
mov
or
cmp
dec
aas
cs
mov
inc
mov
stc
add
sub
lds
leave
popf
fdivr
clc
into
aam
enter
add
dec
or
jp
fwait
lcall
jae
push
cmc
sbb
sahf
dec
cmp
ret
mov
icebp
or
aad
xorb
adc
fimull
out
xchg
adc
sub
mov
xchg
pop
pushf
fldt
mov
lea
dec
pop
adc
inc
call
inc
pop
jb
mov
mov
jle
sti
pop
in
or
int3
inc
sub
rorb
inc
outsb
inc
les
mov
mov
jg
push
mov
xchg
or
loopne
and
and
push
adc
or
rclb
sub
add
mov
inc
bound
sarb
shlb
enter
lret
inc
lods
dec
push
outsb
nop
insl
mov
cltd
add
adc
repz
jbe
cvtpi2ps
stc
xchg
xchg
jne
cmpps
cmp
pop
pop
int
adc
adc
mov
insb
cmp
stos
loope
aas
push
and
hlt
sahf
leave
adc
lahf
movsl
push
data16
bound
xchg
lds
cmp
aam
icebp
mov
push
stc
sub
sti
movsl
pmullw
movsl
sub
xor
out
pop
jg
and
add
add
icebp
leave
test
sub
lcall
pusha
or
dec
mov
lret
mov
insb
push
sbb
sti
es
dec
ficompl
mov
lea
mov
mov
loopne
out
sub
rcrb
fs
fldt
sub
arpl
xchg
js
nop
bound
shll
cmp
test
fmull
fldcw
xchg
or
mov
out
pop
dec
fcoms
adc
jno
shll
std
mov
push
cltd
and
mov
call
sub
dec
jo
xchg
push
out
add
xchg
mov
ret
test
call
hlt
and
and
test
fnstcw
lds
mov
mov
xchg
imul
pop
lahf
fdiv
mov
xchg
jp
call
mov
popl
loopne
stc
movsb
sbb
cwtl
fidivrs
pushl
popa
outsl
inc
cli
jge
mov
gs
outsl
lcall
imul
xchg
mov
and
pop
lret
push
mov
pop
sub
or
lea
cmpsb
sbbb
fcomps
mov
mov
loopne
push
mov
jmp
aad
mov
xchg
and
lret
sbbb
outsl
enter
lcall
xlat
mov
sbb
fsts
fcmove
cmp
cmp
pop
shll
ret
cltd
mov
rcrb
xchg
jmp
jno
adc
ret
lock
jmp
mov
dec
adc
xor
fwait
xchg
bound
push
xchg
adc
or
mov
inc
jecxz
rcrb
dec
out
test
je
adc
mov
add
clc
repz
sbb
cltd
add
pop
xor
jge
sbb
xchg
inc
push
out
inc
mov
mov
jne
insb
addl
xor
adc
es
mov
scas
std
ds
popf
ret
cmpsb
sub
fs
pop
adc
inc
iret
mov
jg
nop
out
or
inc
in
or
addr16
pop
cltd
pop
sub
shrb
cli
ficoml
fsubrl
shll
pushf
jb
adc
ret
mov
inc
fstpt
mov
xor
add
out
sti
fbld
pop
test
mov
add
inc
sti
dec
in
push
addr16
pop
mov
scas
mov
icebp
leave
test
rol
jne
mov
in
fcoms
jecxz
rol
test
or
and
outsl
aam
sbb
push
scas
xor
adc
jl
or
clc
mov
jns
pop
jp
push
aam
jp
add
adc
sub
sarb
bound
cltd
ss
shlb
sbb
sahf
std
cmp
push
xor
sbb
pusha
xor
sti
pop
mov
loope
arpl
je
mov
shrl
xchg
orl
mov
xor
inc
jns
xor
adc
mov
jge
mov
mov
mov
xor
dec
and
mov
leave
mov
pop
cmpsb
bnd
adc
fwait
jle
push
pop
sub
fiaddl
sarl
adc
cmp
jecxz
loope
fsts
push
insb
sbb
xlat
jge
push
nop
push
and
test
cmp
in
xchg
mov
call
push
push
lea
mov
test
test
int3
lock
call
sub
in
inc
sahf
or
inc
in
fs
adc
dec
test
mov
adcb
out
cmpl
imul
lret
loop
inc
jbe
int
pop
lds
mov
jb
sbb
mov
std
mov
fisubrs
push
add
out
jle
mov
test
data16
inc
mov
aaa
repnz
rcrl
leave
cltd
repz
sbb
xchg
mov
pop
fisubrs
push
mov
std
push
mov
rep
inc
push
jle
xor
lock
or
lods
stos
push
repz
xchg
std
cmp
imul
sub
mov
push
jns
lcall
dec
es
sub
test
out
lods
lea
je
aaa
ss
jg
or
std
xor
stos
pop
mov
lods
pop
lcall
orl
push
popa
arpl
mov
call
inc
xorb
sub
push
xlat
cmc
or
push
add
bound
popa
inc
sbb
rcll
push
test
mov
sbb
loope
jns
int
xor
imul
sub
filds
mov
leave
mov
pop
jge
mov
ror
mov
in
test
je
ret
xchg
and
out
mov
pushl
adc
movsb
mov
cmp
ret
push
push
jae
dec
in
call
jmp
das
pusha
out
addr16
popa
sub
test
lret
das
xor
ret
loope
and
nop
dec
xchg
or
cltd
insb
cmpsl
ljmp
xchg
mov
inc
pop
push
dec
inc
dec
fnstsw
lock
mov
adc
xchg
pop
jp
gs
inc
mov
stos
sub
lcall
push
outsb
pusha
mov
cmp
mov
int
out
andb
push
out
cwtl
or
dec
adc
mov
in
les
repz
pop
mov
sbb
sub
scas
cld
push
hlt
nop
ss
scas
pusha
add
hlt
mov
mov
adc
movsl
cld
bound
add
and
jmp
cmp
jge
pop
out
loopne
jle
jmp
mov
add
sbb
mov
cltd
jae
xor
cmpsb
sub
out
adcl
mov
sub
insb
je
aaa
jle
and
ud2
sbb
mov
or
clc
adcb
adc
push
js
mov
mov
nop
js
pop
nop
or
lcall
adc
xor
push
xor
lods
inc
mov
dec
gs
mov
enter
mov
pusha
imulb
jmp
rorb
mov
jg
fwait
imul
inc
insl
imul
lret
stos
scas
or
pop
mov
jmp
xchg
or
sub
inc
std
leave
jo
repnz
and
je
cli
mov
inc
and
and
cli
mov
mov
fisubrl
jge
sub
das
aas
jg
jns
inc
shlb
push
ljmp
xor
mov
lods
enter
push
cmp
add
ret
fnstenv
adc
inc
enter
stos
xor
inc
lea
movsl
in
aad
sub
test
pop
lcall
sahf
cmp
outsb
test
pop
push
lods
jle
outsb
mov
adc
pushf
loop
inc
icebp
rolb
xor
mov
sub
cmp
repz
or
js
scas
sub
and
repz
fidivrl
mov
mov
testl
fildll
rcll
inc
cmp
jmp
push
mov
or
mov
call
inc
jae
fimuls
scas
or
inc
jecxz
outsb
pop
movsb
ja
repnz
adc
sbb
mov
add
push
pusha
movsl
rcrl
xlat
mov
lcall
pop
stos
fsubs
jnp
movsl
push
mov
and
mov
popa
int
popa
imul
pop
jns
adc
mov
dec
roll
xorb
cmc
mov
outsb
jne
pop
cmpl
sti
xchg
cld
lahf
into
push
sub
xchg
cmp
jns
push
lret
or
pcmpgtw
hlt
imul
mov
insl
rcr
fimuls
fnstenv
inc
add
or
mov
adc
iret
insl
fdivp
ficoml
adc
sbb
sar
sahf
jo
pop
push
popa
out
pushf
mov
mov
jp
xchg
outsl
sub
ja
js
sbb
push
cmp
jle
out
cld
mov
lock
dec
xlat
scas
int
push
pop
jb
xchg
jp
jp
sbb
imul
lock
movsl
mov
add
cmp
pop
push
cld
lock
mov
popa
xor
js
push
arpl
aaa
int
sbb
fsub
sbb
imull
mov
jno
rcl
and
add
pop
aaa
stc
push
xor
adc
dec
cwtl
mov
sti
repnz
hlt
sbb
and
mov
and
cmp
lea
gs
mov
rcll
dec
inc
mov
and
insb
hlt
es
xchg
fcomip
pop
push
in
and
lds
sub
jne
pop
xchg
lret
push
sbb
xchg
aas
fmull
push
jmp
cli
lcall
inc
fwait
pop
mov
jae
rorl
fcmovu
xlat
rolb
popa
pop
imul
repnz
stc
orb
push
data16
push
xchg
jns
jg
out
add
in
stc
mov
popf
aad
pop
stos
iret
clc
pop
xlat
fxch
xorl
cmc
in
sar
pop
cli
inc
mov
jbe
mov
adc
mov
pop
mull
mov
popa
pop
xchg
mov
adc
shrl
sbb
mov
in
out
adc
dec
into
or
adc
cmp
aam
aad
adc
outsl
push
push
enter
inc
push
jb
inc
jne
or
pop
dec
sahf
or
fimull
and
and
dec
icebp
out
jnp
pop
stos
cmp
outsw
ss
out
jp
sbb
int3
push
fcoms
sbb
dec
es
inc
xchg
mov
push
lock
mov
dec
int3
in
xlat
out
loopne
mov
jp
or
and
leave
mov
cmc
dec
pop
popf
stos
jecxz
xchg
ja
cmp
fmuls
rorl
xchg
fwait
jae
mov
pop
pop
ret
loopne
out
mov
lods
xor
pushf
push
mov
mov
pop
mov
cmp
sbb
mov
cmc
dec
jge
les
xlat
imul
out
pop
test
mov
xchg
into
adc
mov
out
dec
mov
iret
and
shrl
test
loope
or
dec
fisubs
inc
sub
cmp
inc
jge
or
push
push
sub
jbe
jge
stos
roll
or
push
jae
pop
pop
sbb
mov
icebp
stos
jp
and
arpl
movsl
pusha
sbb
dec
or
cmpsb
repz
sub
xchg
lahf
sub
mov
adc
imul
jns
mov
push
inc
pop
lcall
xlat
lock
lods
adc
push
dec
lods
clc
ret
dec
ds
lock
lahf
add
jle
jno
jg
sub
iret
lods
mov
mov
sub
call
sub
sbb
clc
loopne
scas
jmp
pop
rcrb
imul
call
loop
dec
inc
pop
xor
mov
mov
and
mov
sub
fiaddl
fildll
fisttpl
pop
and
mov
pop
jne
sub
jns
and
lahf
jge
or
jne
sub
pop
push
mov
aam
stc
cs
insl
cmc
out
outsb
pop
cltd
lds
and
dec
out
imul
jo
inc
outsb
inc
cmp
jecxz
in
xchg
cld
push
mov
mov
sahf
mov
test
add
jl
addr16
and
jp
outsl
cli
jmp
into
je
adc
jns
rorl
addr16
xchg
je
and
pop
push
ljmp
mulb
cmc
mov
sbb
xchg
xlat
mov
nop
jne
inc
loopne
aad
pop
push
cmp
push
and
fisubs
lods
jnp
in
nop
pop
xchg
test
aaa
rcrb
pop
push
xor
push
inc
ljmp
out
pop
cmp
add
sub
sbb
xlat
scas
shlb
mov
sbbl
cld
pop
mov
push
cmpsb
mov
aaa
cmpsl
fimull
stos
cmpsb
add
inc
fsubr
ds
push
in
jnp
test
jb
inc
mov
rorl
mov
sub
xor
push
xor
sub
aad
fidivrl
push
mov
push
push
xchg
jge
xor
sbb
insl
out
push
test
mov
sbb
out
xor
jnp
cwtl
je
aad
dec
mov
and
or
nop
jns
dec
sarb
and
xor
mov
xor
xchg
cmp
jecxz
jns
push
int3
outsb
inc
lds
push
adc
push
push
int3
ret
sbb
push
dec
adcl
ja
xor
pop
stc
mov
pop
cmp
mov
imul
jge
stos
in
push
ficoml
dec
xchg
dec
push
mov
sub
test
lea
jle
aas
cwtl
test
push
jg
mov
xor
adc
xor
test
or
xchg
sbb
cmp
pop
mov
icebp
fildl
mov
or
push
movsl
pop
int
filds
mov
jg
sub
inc
push
divb
lods
jl,pn
sarb
inc
orb
imul
xorl
fldl2t
mov
or
shrb
mov
inc
je
fcmovb
fldt
adc
pop
add
sub
shll
mov
inc
cli
sbb
pop
push
dec
sub
lods
or
or
push
push
js
imul
ja
rolb
fidivs
xor
and
sbb
int
pop
ljmp
pop
sub
out
aaa
inc
out
jp
notl
mov
xchg
add
mov
lods
sub
lods
js
cltd
icebp
orb
lds
in
fmulp
addb
mov
lea
mov
enter
fucom
rorb
sbb
pop
cwtl
loop
rolb
xor
sbb
shrb
in
inc
sub
xchg
jmp
jne
clc
jg
push
das
mov
sub
jbe
imul
and
push
jb
daa
ljmp
or
loop
push
sahf
xor
mov
xchg
cmpsl
jae
fwait
jge
mov
in
int3
pop
add
movsl
fisubrs
repnz
or
cmp
dec
mov
add
test
mov
cld
js
push
aad
xchg
fs
sub
mov
sub
and
mov
cmp
mov
fldenv
push
imul
mov
test
pushf
add
in
jno
or
pop
repnz
dec
pop
sbb
xor
dec
cmpsb
fsubrs
movsb
jno
inc
lret
lcall
pop
add
adc
loop
andb
stos
adc
mov
pushf
mov
dec
pop
mov
lods
cmpsb
sbb
cs
or
mov
lret
test
mov
mov
fstl
adc
push
lds
fistpl
shr
in
dec
adc
xor
or
sarl
xchg
dec
icebp
mov
dec
jb
inc
cld
jno
rorb
data16
xchg
mov
push
repz
lret
push
mov
icebp
cli
xchg
cld
negl
xor
insl
pop
xchg
rclb
mov
lods
shrb
fdivr
push
movsl
fdivs
mov
ja
sub
iret
sbb
add
sbb
daa
xchg
jb
gs
cmc
dec
push
arpl
sub
xchg
int
call
test
fwait
lret
xchg
xchg
xchg
xchg
cltd
cmp
testb
push
les
lds
daa
cmc
lock
scas
cwtl
enter
stos
int3
cld
push
and
adc
mov
mov
xchg
and
push
in
push
jnp
jmp
push
cmp
aam
leave
repz
lods
dec
push
mov
dec
push
es
add
cmp
in
mov
pop
push
imul
int
cmp
push
cwtl
or
adc
out
sbb
data16
mov
lods
mov
out
pop
and
or
mov
das
adc
cmp
fwait
mov
nop
shr
add
imul
outsl
dec
or
jle
movsb
xor
ret
rclb
add
int
fwait
mov
adcl
frstor
mov
sbb
cs
sub
jge
lret
mov
sbbl
mov
jnp
or
dec
mov
cli
push
repnz
jne
js
dec
and
push
push
mov
loope
je
aad
imul
or
mov
aaa
xchg
and
xor
pop
lcall
decb
and
fmul
movsb
fnstsw
xor
inc
in
cltd
repz
inc
das
mov
fisubs
ret
icebp
cmp
or
cmp
dec
sub
repz
inc
jl
inc
je
outsb
in
movsb
mov
mov
cmpsl
mov
pushf
push
sbb
mov
push
in
jmp
data16
fisubs
fstl
enter
movsl
sbb
sti
into
inc
fcmovne
fmull
push
adc
addr16
cmpsl
icebp
jno
mov
or
xchg
jp
inc
dec
xchg
scas
inc
rcl
or
daa
cltd
xlat
scas
jmp
xchg
out
mov
jecxz
sahf
mov
pop
xchg
sbbl
loop
mov
bound
cli
std
push
pop
movsl
xchg
stos
test
or
int
add
inc
cmp
jp
inc
cmpb
arpl
mov
cmc
xchg
pop
scas
sbb
cli
sub
jb
lea
mov
xor
fsubrp
jmp
std
and
in
cmpb
mov
cli
and
mov
mov
inc
jge
jg
jl
dec
and
jbe
sub
mov
out
int
pop
nop
push
and
loope
ret
insb
sbb
mov
gs
pop
pop
dec
dec
sub
sbb
push
mov
xlat
out
mov
inc
je
mov
test
jbe
sub
jno
adc
xchg
xchg
lock
and
or
mov
insl
std
std
pop
mov
dec
pop
mov
por
push
sbb
jmp
imul
sbb
push
fwait
out
test
push
jns
gs
outsl
inc
shll
or
in
leave
aas
push
scas
add
inc
iret
ss
cmp
stos
mov
push
or
dec
ljmp
sbbb
push
cltd
imul
cli
outsl
idivb
sub
mov
loop
fsin
jp
orl
xor
inc
or
dec
ds
and
or
adc
dec
or
cltd
jne
iret
insb
daa
es
movsl
jmp
movsb
or
js
aas
push
sahf
dec
cmp
icebp
outsl
call
jae
and
push
int3
xor
jne
lcall
pop
cmpsl
or
xlat
icebp
push
sbb
mov
mov
ret
mov
lods
les
xorl
or
clc
mov
cmpsb
cmc
int3
out
sbb
aas
lods
cs
jno
shll
xchg
andl
sbb
jb
add
lock
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
pop
mov
loopne
xor
jp
pop
jp
xor
out
loopne
jbe
test
jmp
mov
add
cmpsb
pop
jge
push
inc
jbe
mov
mov
cmp
mov
jle
fmul
pop
ret
adc
add
xchg
inc
insb
adc
mov
daa
mov
pop
test
adcb
fcoml
scas
xchg
bound
xchg
and
mov
push
inc
jmp
outsb
in
testb
mov
popa
out
mov
cmp
out
inc
test
fs
pop
lods
repnz
add
jp
sahf
sarl
xchg
cld
add
out
outsl
sub
fwait
sbbl
shlb
or
xchg
jo,pn
xchg
adc
add
cmpsb
dec
adc
rcr
pop
jmp
sbbl
push
cmp
sbb
xor
aaa
stos
add
push
imul
mov
cmp
sahf
leave
mov
and
jnp
or
std
scas
movsb
mov
rclb
lods
sbb
add
loope
icebp
aaa
addl
arpl
cmp
pusha
cltd
pop
aam
mov
dec
in
insb
ret
or
popa
sub
fmul
cltd
cmp
out
mov
pop
pop
out
cmp
inc
cmc
ffreep
sbb
pop
push
fidivrs
adc
pop
imul
and
hlt
sti
pusha
cli
mov
sub
fsubl
in
rcrl
scas
int
shlb
or
loop
sbbl
enter
adc
xor
cmp
mov
sub
sar
jo
je
xor
dec
inc
movsl
test
mov
or
push
pop
outsl
pushl
push
mov
inc
mov
sub
jo
lahf
insl
mov
or
shr
and
ret
push
dec
cmp
mov
adc
jmp
popf
pause
mov
mov
sub
adc
mov
sbb
push
in
adc
or
jb
cmp
test
loopne
xor
mov
dec
sbb
push
xchg
pushf
and
xor
and
sub
into
cld
jp
ret
rol
insl
das
daa
and
outsb
pop
aas
out
xchg
test
lret
mov
shrl
mov
lcall
jp
bound
adc
or
or
out
scas
jge
sbbb
cmp
push
add
out
xchg
ds
and
lea
xor
inc
and
xchg
xchg
cltd
dec
push
dec
xor
aas
xor
insl
dec
bnd
cmp
mov
movsl
cmp
stc
ds
jbe
sub
repnz
pop
xchg
leave
mull
int3
or
xor
mov
test
idivb
scas
in
pop
jl
push
add
fsubrs
pop
enter
pop
lret
xchg
jge
or
movsb
adc
nop
shlb
add
sub
cmp
iret
mov
pusha
jg
or
pop
addr16
sbb
test
roll
dec
sub
push
popa
lock
push
pop
dec
ja
fst
sbb
in
dec
dec
sub
inc
or
das
les
addl
mov
inc
xchg
push
jno
and
imul
sub
sti
push
sub
test
test
push
aam
or
aam
add
data16
jb
adc
fdivrl
scas
cli
push
pop
rcr
adc
pop
in
mov
enter
dec
arpl
xor
lds
es
mov
xor
shrl
mov
mov
dec
mov
push
mov
jl
or
xor
jmp
imul
into
jmp
leave
stc
cmpsl
cwtl
xorb
pop
mov
mov
out
repnz
fisttps
mov
cmc
pop
mov
cmpsl
data16
rcl
insb
mov
in
xchg
lret
xchg
jmp
xchg
cs
xor
stos
adc
fisubs
cmp
clc
sbb
lods
xor
fsubr
mov
cmpsb
sub
das
and
shlb
out
mov
dec
adc
xor
cmpl
sbb
xchg
adc
cmp
or
sbb
and
jmp
jne
sbb
les
aaa
or
jo
pop
pop
and
adc
pop
push
pop
xchg
cld
loopne
js
test
fstps
mov
movsl
pop
lret
mov
xor
and
nop
fistl
cs
out
test
in
jno
mov
jg
push
cvtpi2ps
jg
sahf
xlat
mov
ficoms
out
inc
mov
lret
add
cmpl
stos
lcall
mov
pop
cmp
test
and
loopne
clc
or
sub
adc
jb
in
mov
nop
mov
cmp
cwtl
mov
cwtl
lods
loop
jno
pop
in
das
jl
mov
sbb
clc
lods
mov
jns
imul
idiv
jmp
push
orb
sub
popa
and
jae
jb
in
out
aad
lods
push
jne
push
jle
add
jge
testb
jp
push
nop
pop
je
test
add
and
cmp
bound
mul
mov
shlb
push
stc
imul
and
dec
ja
xor
inc
cli
sbb
out
or
and
cmpl
inc
movlps
dec
sub
in
popf
add
sar
mov
pause
cmp
out
imul
jo
cmpsb
les
bound
daa
mov
adc
fwait
xchg
pop
clc
push
outsl
mov
or
xlat
ficomps
daa
sahf
mov
aad
gs
mov
filds
mov
dec
mov
leave
or
aam
int
lret
or
jb
in
cltd
jns
flds
cs
mov
fnstcw
rcrb
sbb
aam
jbe
in
mov
insl
mov
addr16
scas
xchg
mov
outsb
lods
repnz
pop
pop
ret
sub
call
mov
fdivs
or
sarl
movsb
mov
jp
lcall
in
xor
jge
imul
adcb
stos
jnp
pop
jno
clc
into
cmp
test
gs
lahf
and
imul
pop
mov
loop
frstor
imull
pop
imul
fcmovnbe
and
in
sahf
inc
fdivs
xor
jl
adc
sbb
fnsave
xor
inc
aam
lret
jg
or
dec
xor
push
and
xchg
gs
adc
outsb
test
test
pop
das
xor
lcall
in
pop
icebp
es
sar
push
clc
ja
pop
jmp
scas
adc
scas
jne
pop
cwtl
lcall
out
mov
ja
mov
jecxz
in
repnz
aam
mov
jb
xor
adc
push
pop
mov
pop
cmc
into
dec
cmp
mov
fnstsw
cli
jmp
divl
sbb
stos
sbb
popa
adc
sub
jl
sbb
cmc
shll
or
adc
inc
sarl
fbstp
insl
sbb
fdivs
inc
sub
js
or
ljmp
test
or
aad
or
sub
lods
aam
inc
adc
push
add
ds
into
jecxz
adc
and
jl
jo
hlt
loop
pusha
jmp
dec
pop
inc
arpl
insb
cmp
pop
cwtl
scas
push
add
fsts
dec
pop
fsubrl
lret
icebp
inc
loopne
and
lret
cmpb
ds
ljmp
icebp
jno
jmp
mov
loopne
sub
jmp
lret
popa
push
call
mov
pop
adc
mov
jne
jle
mov
test
cmp
dec
js
and
push
mov
sub
and
inc
push
jae
aam
pop
adc
sub
stos
out
xchg
insb
enter
imul
aas
inc
cmp
loop
push
notb
inc
cmp
or
sub
jl
pop
adc
sti
mov
add
ljmp
in
repnz
loopne
popf
fildll
push
pop
mov
adc
jae
loop
faddl
stos
dec
pop
mov
sbb
mov
sbb
pop
into
inc
lret
fs
push
inc
addr16
movsb
jbe
inc
arpl
dec
jp
xorl
sub
out
and
int
ret
push
aas
inc
xchg
ficomps
out
mov
add
mov
call
loopne
jle
pop
test
jge
pop
dec
test
dec
xchg
test
cmp
stos
xor
arpl
test
ret
mov
leave
lea
xchg
and
jo
mov
mov
pop
out
movsb
xchg
cld
push
rcr
mov
dec
insl
fiaddl
bound
pop
mov
push
adc
xchg
icebp
stos
push
push
inc
cs
push
xor
adc
sub
out
dec
add
dec
outsl
inc
pushf
ret
push
cmpl
jno
dec
sbb
fwait
hlt
jns
push
and
mov
mov
cli
jae
xor
mov
cmp
pushf
mov
shll
stc
and
icebp
sbb
cmp
mov
dec
jne
icebp
xor
mov
adc
cmp
sbb
jb
jno
mov
push
imul
addr16
insl
hlt
inc
ret
aas
fmul
mov
or
mov
in
in
rcll
cmp
test
or
dec
test
sti
push
xchg
xchg
cmp
xor
lea
and
push
lahf
cwtl
shl
leave
les
movsb
xchg
mov
arpl
int
dec
mov
pushw
lcall
fldl
adc
popa
loopne
push
cmp
stos
out
push
pop
dec
add
rcrb
push
std
loopne
pushf
addr16
sbb
stc
testb
lds
dec
add
fnstenv
xor
pop
shlb
adc
and
test
dec
jecxz
jae
lods
icebp
fnstsw
inc
das
arpl
xorb
mov
inc
cmpsl
inc
psraw
push
push
mov
movsl
js
mov
push
and
loop
cltd
and
adc
mov
xor
psrlq
lss
lods
jl
pmuludq
or
mov
loope
mov
mov
js
fstpt
pop
xor
fsubrl
jle
sub
icebp
inc
pop
testl
bound
imulb
aam
dec
adc
arpl
push
xchg
xor
cltd
insl
or
cld
fstps
jae
cld
aad
xchg
pop
inc
lds
rcrl
mov
pop
adc
hlt
call
and
inc
aad
mov
out
push
inc
in
pop
push
push
orl
add
and
shrb
adc
xor
popf
lock
shrb
mov
aad
adc
sbb
popf
mov
imul
dec
movsl
xor
push
daa
fsubr
sbb
xor
pop
fwait
sti
dec
int3
pop
sub
inc
add
js
push
pop
sub
and
movsl
push
xor
sbb
in
lock
mov
mov
mov
mov
ljmp
pop
xlat
lods
ret
push
push
and
mov
push
fstl
mov
notrack
pop
jne
lds
dec
push
mov
mov
mov
jmp
add
nop
int3
xchg
mov
xor
jns
std
fldenv
imul
cmc
ljmp
adc
sub
add
push
dec
xchg
adc
orl
lret
sbb
test
test
lahf
sbb
outsl
xchg
push
loope
sbb
xor
push
pusha
int3
cs
shll
xor
mov
stos
stos
int
loope
jae
fcomps
xlat
aam
pushf
mov
hlt
lock
in
les
jp
cltd
gs
push
cmp
lret
jo
fistl
ret
dec
lods
mov
push
loop
filds
rorb
ficoms
push
mov
push
ficoml
lods
mov
cmpsb
out
pop
testb
xor
in
pop
or
mov
loopne,pn
popf
xor
aaa
jecxz
pop
stos
mov
in
inc
das
ror
push
add
push
adc
pop
fidivs
mov
shlb
sbb
jns
fs
aad
testb
ljmp
adc
or
xchg
mov
das
xchg
aad
cmp
sarl
loop
xor
fidivrs
fdivrs
movsl
jno
scas
aam
into
cs
add
sbb
fs
lcall
incl
xor
add
leave
sti
ret
imul
mov
leave
inc
push
lds
sub
pusha
xchg
jnp
mov
icebp
loopne
mov
test
cmp
sub
jnp
jbe
and
inc
push
dec
popf
sbb
mov
imul
cmpsl
sahf
add
sti
mov
or
sti
sub
add
jle
or
xbegin
mov
mov
stos
enter
aaa
sub
mov
xchg
test
sub
sbb
enter
jp
adc
jne
push
add
in
mov
lahf
stos
jns
mov
mov
movsl
mov
sar
cmp
testl
add
cmp
outsl
push
incl
push
inc
jmp
pop
push
add
or
add
cmpsb
lcall
dec
mov
mov
sub
mov
inc
cwtl
pop
xor
cmp
mov
lcall
xchg
imul
std
jns
out
in
pop
movsb
and
addr16
sub
cmpsb
pop
lahf
addr16
outsb
jl
push
push
jp
adc
imul
push
mov
insl
adc
outsl
add
dec
push
cmp
pop
sub
push
jnp
inc
xlat
dec
lret
adc
gs
test
or
cmc
loop
mov
scas
push
mov
dec
xchg
cli
xchg
jg
aas
out
add
divb
fildll
mov
pop
fdivrs
int
xchg
movsl
jg,pn
mov
in
bound
pop
adc
adc
sub
fmuls
imul
pop
pop
test
xchg
mov
sbb
inc
aad
in
arpl
mov
or
mov
inc
jae
cld
jns
mov
mov
loop
shll
shll
out
mov
lea
xor
cld
int
xchg
gs
popf
or
call
pop
test
mov
out
pop
sub
lahf
rorb
push
repnz
add
fxch
jb
popl
pop
push
pop
sbb
decb
dec
adc
sub
mov
icebp
dec
loope
ja
push
pop
sbbl
test
push
sub
xchg
inc
imul
or
mov
sub
xlat
dec
loop
jnp
xchg
adc
shl
sub
push
les
xor
hlt
mov
inc
mov
mov
and
pop
and
add
js
mull
bound
mov
daa
xchg
xchg
jg
shr
cmp
mov
out
cmpsb
jmp
adc
push
adc
cmp
imul
push
sbb
sbb
push
rclb
adc
adc
lahf
in
in
test
pop
aad
daa
mov
nop
sbb
bound
inc
test
cwtl
inc
push
sub
mov
dec
jne
out
pop
xchg
mov
ja
lcall
out
and
and
xchg
flds
dec
mov
push
jnp
push
je
bound
inc
jne
add
push
and
daa
ds
push
cwtl
add
sti
mov
call
arpl
in
and
and
adc
xchg
sbb
cltd
jnp
mov
loope
inc
fimull
or
sbb
cmp
std
int3
scas
test
add
jp
sub
mov
shrl
insb
out
lods
popf
jno
hlt
cmpsb
pop
outsb
lock
pop
js
iret
pusha
addl
fistpl
xor
test
pop
cmp
hlt
mov
out
push
imul
xor
and
jecxz
jp
loopne
dec
sbb
inc
mov
clc
and
cltd
xor
inc
jp
and
mov
lahf
xchg
sub
cwtl
aas
or
sub
xchg
sub
push
mov
jmp
or
cmpsb
sbb
int
bound
add
dec
xchg
andl
js
or
push
or
jl
cmp
mov
insb
xchg
cmp
inc
jecxz
push
xchg
mov
stc
pop
xchg
test
inc
adc
jne
xorl
popf
bound
add
cmpsl
iret
dec
sub
jmp
shr
and
ret
xor
xchg
cmpsl
xorl
adc
mov
gs
push
sub
inc
xchg
or
imul
ds
lock
or
cmp
cmpsb
imul
outsb
in
fidivs
mov
dec
push
inc
shlb
enter
xor
lock
imul
push
dec
xor
insl
jecxz
ds
push
loopne
sub
and
adc
lea
ljmp
pop
xchg
lret
out
mov
aam
jp
mov
lahf
fstpt
mov
cmp
jge
rcrb
jl
dec
lods
push
sbb
sbb
xchg
or
ss
stos
or
das
cmp
pop
fsubrl
fsubl
fstpt
loopne
add
jne
dec
dec
ret
adc
add
dec
cwtl
int
popa
cmpsb
pop
ss
cmpsb
pop
rcr
int3
fs
inc
popf
pop
dec
pop
add
in
sti
cmp
nop
mov
push
or
push
test
xchg
fs
das
pusha
xor
stos
sub
clc
pop
movsb
pop
out
cwtl
jp
push
mov
iret
inc
mov
push
js
sub
movb
jg
scas
aad
or
addl
test
xor
mov
jne
out
pop
call
xor
xchg
sbb
into
mov
push
imul
push
jge
adc
adc
adc
sub
mov
push
cwtl
imul
sbb
ror
adc
push
movlps
mov
aam
push
push
cwtl
out
xchg
mov
rcll
fmuls
xchg
pop
lret
xchg
mov
cmp
call
lods
outsb
push
inc
adc
and
js
push
cwtl
ds
push
rcll
lods
push
outsl
add
outsb
mov
mov
jae
mov
fs
lret
in
cwtl
pop
cmpsl
jb
ljmp
push
int
pop
pushf
mov
fimull
add
push
lret
das
pop
push
out
inc
outsl
sahf
mov
nop
ss
inc
sbb
out
xor
jecxz
push
pop
adc
adc
jnp
sbb
popf
push
sahf
js
les
mov
or
mov
mov
int3
gs
mov
mov
lea
and
sarb
pop
lock
pop
fistl
mov
scas
shll
jle
test
test
mov
jl
mov
and
jl
roll
nop
push
cmp
add
jb
inc
jae
mov
jbe
inc
or
and
mov
pop
adc
push
incl
cli
mov
mov
les
out
sbb
jb
push
inc
adc
or
mov
dec
jmp
pop
fldl
stc
adc
and
pop
sbb
sahf
aad
lret
jecxz
inc
fimuls
shl
movd
ret
mov
jae
xor
in
into
add
mov
call
pop
add
cmpsl
push
icebp
jg
stos
cmp
ret
in
push
insl
inc
mov
rcr
and
int
adc
inc
je
cs
outsb
xor
testb
or
pop
dec
mov
mov
mov
subb
mov
cmp
into
mov
jbe
iret
cmpsb
and
dec
repz
xlat
xchg
outsl
push
test
and
push
sbb
js
and
jae
xchg
call
and
scas
jnp
mov
shl
subb
xor
and
pop
pop
or
sbb
and
xchg
imul
xor
das
out
imul
ljmp
lahf
sub
mov
dec
data16
les
mov
loop
inc
jnp
and
clc
sti
push
sub
aas
sub
cmpsb
jns
or
push
xchg
pop
outsb
cmpsb
and
inc
jge
cwtl
mov
outsb
outsb
sbb
pusha
mov
sbb
insb
fsts
mov
jb
xchg
lods
push
sar
pushf
imul
add
scas
icebp
jae
leave
sub
pop
les
cltd
pop
sub
daa
or
pop
jno
cmc
fistl
fbld
pushf
push
lods
mov
pop
sub
mov
push
add
enter
adc
cmp
add
or
test
pusha
jle
ljmp
push
push
les
adc
sti
or
lock
sahf
inc
aad
aaa
or
out
data16
sbb
and
sub
sub
mov
xchg
cmpsb
addr16
ret
pop
sti
jbe
std
mov
mov
mov
or
cmp
or
push
loop
push
sarl
adc
xchg
out
push
add
pop
stos
inc
inc
ds
xor
cmp
pop
lods
popf
ret
inc
test
inc
mov
sub
in
pcmpeqb
faddl
fiaddl
mov
out
push
pop
ja
hlt
pop
inc
pop
test
in
in
sbb
sbb
jecxz
rcll
jno
sub
sahf
cmc
and
push
add
rcr
stos
push
sbb
ja
add
mov
cmp
out
cmp
sbb
test
out
js
aam
xlat
bound
test
add
fstl
insb
pop
xlat
jge
rorb
cs
dec
mov
and
sbb
push
pop
jbe
jnp
push
push
mov
test
adc
push
cld
int
hlt
in
xchg
xor
mov
int3
sub
sub
push
mov
sbb
pusha
sub
mov
pushf
jle
dec
jne
mull
ret
jne
add
fistps
push
pop
and
xor
and
test
das
adc
pop
push
or
jmp
outsl
ret
into
mull
insl
gs
in
daa
imul
push
cmp
and
fstpl
subl
test
mov
ror
imul
or
aaa
icebp
mov
push
pop
dec
jge
inc
pop
pop
andl
mov
and
adc
and
jmp
pop
addr16
mov
mov
sub
shll
push
addr16
cmpl
pop
arpl
decl
mov
aas
mov
xchg
mov
lret
cmp
xor
es
mov
dec
movsb
lret
cmp
xor
movsb
push
inc
jg
jno
xchg
hlt
sub
call
ret
sbb
add
pop
ljmp
insb
fisubrl
cmp
pop
lods
mov
push
xlat
ss
push
xor
pop
lods
dec
lds
xor
icebp
adc
enter
sbb
add
aam
or
repnz
int
ds
add
and
clc
sbbb
icebp
sbb
fcoml
pop
mov
fwait
inc
std
add
stc
lods
pop
inc
ss
nop
dec
adc
adc
or
data16
or
out
lods
push
xchg
xor
jno
or
dec
out
cmp
mov
pushf
scas
sub
sar
fidivrl
xchg
pop
xchg
lds
ja
push
orl
out
dec
cwtl
aam
xor
lcall
neg
dec
test
mov
push
add
xchg
dec
sar
test
xchg
sbb
push
dec
push
dec
outsb
inc
inc
test
or
test
xchg
popf
cwtl
xlat
inc
je
incl
xor
pop
pop
and
cmp
ljmp
outsl
adc
or
and
xchg
and
in
sbb
jno
xor
push
fs
dec
mov
leave
popf
xor
mov
mov
inc
cmp
icebp
mov
in
clc
test
sub
mov
pop
inc
mov
mov
or
popl
sub
in
jecxz
mov
adc
jle
fstpt
test
jbe,pn
and
jge
push
cmp
cmpsl
adc
mov
shll
jg
adc
into
pusha
ret
subl
mov
lock
jp
pop
lea
mov
mov
imul
pop
cmp
loope
stc
fwait
call
fsts
pop
or
add
jl
inc
lds
mov
push
and
xchg
test
xchg
xchg
sbb
js
sti
sti
and
pop
mov
add
jns
repnz
outsl
scas
mov
aad
adcl
mov
mov
jnp
push
sbb
subl
ret
xchg
jnp
int
scas
xchg
bound
cmpsb
cmp
int3
mov
cli
bound
stos
inc
mov
and
push
inc
xchg
loopne
stc
xchg
out
sbb
ret
test
mov
hlt
xlat
stos
mov
add
dec
popa
das
movsb
sub
inc
orb
adcl
mov
mov
repz
in
push
les
inc
xor
mov
xchg
inc
jle
jmp
push
jl
push
jg
icebp
inc
adc
add
adc
rcll
or
pop
pop
test
xor
outsb
and
addr16
push
imulb
repz
cmp
aas
xlat
inc
mov
and
push
ret
inc
insl
jnp
jl
mov
faddl
or
mov
adc
and
sbb
lds
outsb
cmpsb
sub
pop
pop
mov
dec
mov
jae
mov
pop
mov
stos
mov
shlb
push
jb
or
test
cmpsb
aad
fadds
dec
and
out
jecxz
or
jp
adc
push
repz
add
inc
mov
xchg
jge
sbb
cmpsl
and
inc
popa
push
cmpsl
aas
test
insb
sti
or
in
stc
dec
sbbb
shrl
ret
cmp
out
int3
repnz
in
out
inc
push
sub
iret
push
into
rcl
cmpsb
push
xchg
xchg
pop
in
scas
mov
fstl
fistpl
mov
lahf
or
mov
ljmp
and
mov
mov
xchg
insb
jns
rcll
mov
insb
inc
loopne
cli
ljmp
adc
mov
jp
adc
mov
dec
shld
lret
scas
push
out
out
addr16
push
mov
mov
aam
mov
jge
movsb
mov
add
mov
call
pop
lods
jo
ljmp
pop
push
pop
or
je
aam
adc
jl
push
insl
pop
aaa
and
lods
lahf
sub
inc
adc
sbb
jle
insl
inc
xor
xor
or
pop
push
and
inc
pushf
mov
pop
push
mov
sub
pop
int3
scas
cmpsl
test
ds
loopne
dec
int3
xchg
push
adc
shll
push
lret
incl
pop
fs
lock
sbb
dec
xchg
mov
sub
pop
in
in
mulw
pop
popa
xchg
out
lock
xor
into
pop
insb
cli
nop
push
xor
xchg
pop
jo
addr16
je
xchg
lock
cmp
add
pop
data16
pop
add
lahf
call
movsb
or
add
mov
pop
add
outsl
aad
inc
cmc
arpl
fcoml
xchg
pushf
push
dec
mov
pop
lahf
jg
adc
mov
stc
pop
test
sub
inc
pushf
repz
inc
add
xchg
scas
push
inc
out
cmp
cmp
leave
pushl
adc
mov
stos
fs
lock
jmp
and
std
testb
xor
movsb
dec
push
test
jmp
mov
pop
lods
test
lea
pushf
stc
cmpsl
inc
or
rcrb
mov
roll
mov
cmp
inc
mov
jmp
mov
mov
pop
fs
xchg
and
and
push
lahf
push
pop
jecxz
les
enter
ljmp
cmp
pusha
dec
cmp
nop
cltd
movsl
pushf
fwait
xchg
lea
fisttps
mov
xorl
sbb
movsl
xchg
jl
loope
rcll
adc
in
in
dec
mov
dec
subb
mov
lret
popa
jle
test
into
das
fcmove
mov
rolb
int
sub
jmp
adc
jns
int
dec
mov
arpl
in
mov
ret
ss
xor
lcall
in
nop
pop
les
sti
ds
mov
aam
and
pop
or
frstor
add
popf
or
add
mov
xor
loop
adc
das
out
test
shll
lds
fidivl
aad
xor
mov
add
outsl
lea
iret
movsl
rorb
jle
mov
sbb
mov
or
pop
cli
mov
xor
popa
mov
mov
inc
ljmp
add
shll
ret
adc
mov
push
lcall
cmp
movsb
xor
xor
inc
roll
stos
outsb
push
jl
jle
les
lahf
adc
cmc
in
ficompl
loopne
dec
mov
insb
mov
sbb
mov
dec
jg
mov
xlat
cwtl
mov
ds
test
cwtl
pop
jmp
cwtl
add
pop
jmp
fists
icebp
jp
inc
push
jge
nop
push
adc
add
outsb
mov
dec
andl
out
std
inc
dec
and
es
mov
mov
mov
xchg
pop
aas
and
cmpsl
aam
movsb
dec
add
pop
sti
xor
lcall
pop
add
adc
popa
ds
cwtl
fs
nop
xchg
and
or
ja
cs
ljmp
inc
call
inc
jne
les
or
sbb
or
adc
adc
test
scas
rorl
and
aas
jmp
cltd
aad
xchg
in
sbb
mov
lods
xor
shr
xchg
lds
sahf
xor
push
mov
mov
in
in
jae
xor
pop
stos
cmp
fcmovnbe
adc
and
scas
loop
mov
mov
mov
nop
pop
add
movl
outsb
adc
test
jbe
mull
scas
mov
outsl
jecxz
roll
xor
jecxz
icebp
imul
rcl
lret
adc
and
push
and
mov
insl
jns
pop
cmpsl
pop
leave
adc
call
cltd
and
inc
insl
push
test
cmc
neg
and
jl
mov
cli
dec
mov
jbe
cmpsb
sub
mov
arpl
jno
sub
mov
xor
in
mov
fadd
add
nop
jo
insl
jae
dec
adc
jmp
jnp
jmp
and
addb
in
and
mov
mov
cmpsl
inc
movsl
mov
sub
fsubrs
sub
mov
or
adcl
out
test
inc
jno
sbb
xor
pop
in
xor
sbb
das
mov
mov
testb
add
or
add
ret
aas
inc
test
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
mov
mov
lea
or
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
das
clc
popa
add
xchg
add
ret
arpl
fldl
pop
not
hlt
repnz
fst
push
insb
mov
sbb
adc
inc
popa
aaa
xchg
shr
lock
clc
cmp
xchg
lods
pusha
lock
cmpsb
mov
jle
pop
cltd
sbb
sbb
adc
cmp
dec
push
bnd
outsl
mov
push
pop
rolb
push
mov
stc
mov
imul
adc
sbb
push
pop
movsl
push
insb
xchg
mov
push
data16
push
cld
dec
push
mov
andb
and
push
xlat
testb
arpl
es
scas
out
sbbl
add
imul
cmpsl
gs
dec
sti
sbb
or
push
mov
dec
ljmp
and
push
ss
hlt
jnp
inc
inc
xchg
out
and
mov
lea
jmp
xor
sbb
or
mov
js
or
push
int3
fstpl
add
ss
scas
inc
add
flds
icebp
cmp
pop
and
cmp
insl
jb
or
ljmp
push
popa
test
sub
dec
lcall
jne
movsl
pop
in
inc
push
pop
addr16
fidivl
add
cld
mov
loop
and
adc
push
outsb
outsl
lea
push
sti
inc
mov
mull
pop
test
sahf
sub
mov
push
inc
push
imul
xor
add
movl
fwait
push
sub
push
xchg
xor
ja
shrl
or
loop
cmp
add
int
mov
ljmp
ss
sub
std
fstpl
ret
into
fcomip
mov
mov
inc
repz
ret
jb
mov
dec
cs
ret
xor
test
cmp
mulb
dec
pop
pop
je
pushf
adc
sbb
fbld
pop
rcrb
ffreep
and
xlat
xchg
xchg
adc
xchg
scas
sbb
inc
xchg
lds
xchg
in
add
mov
cmpl
aad
mov
fwait
add
shrb
mov
test
jmp
xor
ljmp
jg
mov
mov
mov
add
xchg
add
mov
pop
imull
xorb
mov
imul
dec
pop
cmp
lahf
or
adcb
mov
mov
or
test
lea
dec
jne
shll
add
cmp
subb
imul
sar
out
negl
ss
push
push
sarb
cld
cmp
sub
inc
jne
jb
pop
out
mov
jge
orb
pop
lods
icebp
and
loop
sub
js
jno
das
insb
and
inc
ret
lret
lret
sub
pop
cwtl
adc
add
dec
pop
sar
fisttpll
aad
lcall
pusha
cmp
add
cmc
push
mov
add
dec
inc
loop
pop
mov
push
je
std
cltd
sahf
insl
jg
dec
loope
cli
adcl
into
add
jge
icebp
roll
inc
lcall
jno
inc
dec
xchg
les
faddl
leave
push
test
pusha
aam
popa
fdivr
je
sub
or
shl
pop
mov
push
lock
outsb
sub
xchg
fdivrl
mov
mov
and
enter
push
sub
and
popa
sub
stos
data16
push
dec
jbe
and
sub
and
xchg
xchg
pushf
pop
test
dec
addr16
cld
cmc
jo
je
in
push
pop
dec
sub
push
insb
fsubrs
push
in
clc
push
push
dec
cs
xor
inc
int
mov
out
scas
sahf
pop
sti
pop
fucomip
xor
push
pop
addr16
sarb
cltd
push
ljmp
mov
dec
adc
lcall
dec
stos
es
push
mov
sbb
adc
fcmovbe
lcall
je
fstpl
sbb
in
cmc
push
sub
jns
pop
mov
std
cmpsb
out
add
negb
roll
test
pop
dec
or
stos
mov
nop
jo
pop
ds
xor
rcrl
lret
or
call
push
cmp
mov
push
fmuls
addr16
xor
scas
shr
xchg
adc
aaa
pop
test
xchg
cmp
xchg
pop
imul
ja
adc
test
dec
mov
pop
sbb
pop
xchg
mov
xor
add
xchg
add
cmp
mov
adc
pop
mov
xchg
or
gs
aas
dec
and
dec
cmp
pop
loopne
add
jno
sbb
sub
ss
adc
xchg
jecxz
hlt
push
mov
push
mov
rolb
mov
add
mov
cltd
aad
xlat
pushf
sub
and
or
dec
lret
in
fimull
jnp
dec
sarb
sub
jle
rol
sub
jg
cs
pop
test
cmp
cmp
lret
xchg
push
mov
les
xlat
push
lret
push
sub
in
push
inc
dec
adc
or
andb
fcom
mov
out
jl
inc
push
in
xchg
mov
repnz
testb
inc
pop
sub
sub
jae
xor
push
pop
mov
in
cmp
xlat
out
add
cmp
pop
enter
fildl
sub
rcr
dec
das
add
or
aaa
or
into
push
call
mov
adc
out
aas
aaa
jp
mov
das
ucomiss
imul
icebp
dec
cs
cmp
pop
or
inc
mov
leave
incb
push
mov
and
hlt
add
jnp
imulb
int
dec
adc
jne
out
fxch
jecxz
aam
xor
shrl
or
inc
insb
mov
fisubrs
ja
movsl
jns
cs
out
xlat
inc
and
addb
int3
mov
inc
dec
and
jp
pop
mov
xchg
xchg
adc
lea
sub
inc
repnz
push
popa
nop
adc
mov
sti
out
rol
or
data16
pop
dec
sub
mov
cmp
cmpb
into
adc
add
lahf
lcall
xor
in
subl
in
inc
jecxz
test
daa
sub
leave
pop
repz
and
pop
mov
inc
jbe
inc
push
mov
pusha
cmpsb
dec
lds
xchg
sbb
adc
pop
sbb
add
push
xchg
repz
movsl
mov
shl
jg
fdivl
lds
jo
add
imul
push
mov
xchg
push
add
mov
jp
push
xchg
add
add
xchg
add
push
mov
sbb
cmc
mov
ds
mov
shlb
mov
sbb
in
cs
popf
insb
xchg
sbb
mov
push
mov
dec
or
push
xchg
xor
hlt
xchg
out
stc
js
inc
lahf
icebp
insb
push
jo
add
insl
xchg
into
clc
in
jns
push
pop
rcrb
addl
jbe
je
xchg
push
loop
pop
xchg
leave
push
lret
sbb
pop
enter
in
or
jne
lret
adc
dec
cmp
pop
jp
xor
pop
aaa
adcb
pop
xchg
push
repnz
jge
mov
scas
les
jns
out
js
rclb
stc
adc
lock
lea
stc
push
js
adc
sub
cltd
inc
mov
mov
inc
xor
or
adc
push
fisttpl
jo
sub
xorl
gs
push
cmp
popf
icebp
das
negl
xchg
xchg
dec
cmp
mov
add
rorl
mov
rcrl
or
gs
inc
jnp
stos
pop
ret
inc
add
dec
sti
mov
lahf
or
inc
add
cwtl
or
psubsw
mov
xchg
cltd
inc
push
subl
rorb
push
xchg
imulb
mov
lods
adc
adc
adc
std
push
xor
fimull
dec
xor
pop
jns
adc
js
mov
pop
xchg
and
push
sahf
fs
dec
cmp
mov
stos
int
and
cmp
dec
mov
movsb
pop
outsl
mov
je
cmpsl
push
sub
cmp
out
xor
mov
xchg
push
andl
fs
mov
push
lods
pop
push
and
in
jo
stos
data16
les
inc
stos
sti
pushf
movsl
or
cmp
es
dec
and
pop
or
adc
xchg
popf
mov
pop
xchg
out
cmp
int
and
cmpsl
std
in
insl
jno
jle
xchg
xchg
mov
data16
add
cmp
pop
sarb
ret
in
mov
pop
mov
and
and
mov
push
popf
in
rcll
out
add
jno
pop
jns
xchg
mov
rol
add
hlt
mov
std
jl
dec
pop
cmp
sbb
adc
add
xchg
add
aas
jbe
or
push
xchg
ficomps
or
cwtl
ret
lret
mov
out
push
sub
roll
cs
pop
fwait
int
and
rcrl
imul
xchg
call
jmp
loopne,pn
cmp
xchg
fdivr
and
rorl
shl
or
xchg
mov
jae
adc
and
addr16
or
das
enter
dec
mov
mov
dec
ds
hlt
fsubr
or
adc
push
mov
push
xlat
mov
or
in
iret
in
sub
insl
arpl
sub
loopne
loope
scas
sarl
arpl
popf
push
ss
je
mov
jns
push
aad
and
dec
adc
pop
negl
sti
jl
hlt
sbb
out
jmp
lea
fidivrs
scas
push
je
xor
fistpll
lods
push
sbb
mull
xor
dec
sub
adc
mov
hlt
stos
std
xchg
aad
hlt
push
mov
out
sarb
mov
xor
mov
fldln2
loope
arpl
sarl
or
mov
sti
stc
lret
int
jmp
into
or
aad
pop
mov
and
aaa
stos
inc
inc
dec
push
cmp
sub
pop
mov
outsl
push
dec
inc
push
loope
shrb
add
add
jl
testb
mov
mov
jbe
test
adc
lods
adcb
aad
mov
inc
sbb
stc
daa
cmp
fs
push
mov
scas
ss
ds
pop
into
sbb
xchg
cli
lods
mov
ret
scas
pop
mov
mov
sub
aad
stos
loope
bound
fildl
lods
sti
in
and
inc
lds
add
lods
out
and
imul
adc
fadd
sbb
rcrb
pop
push
fiaddl
sub
xchg
xor
test
call
adc
mov
fs
and
cmp
xor
icebp
add
jmp
popf
xor
cmp
out
mov
pop
sub
dec
and
fnstsw
in
icebp
pop
pop
lock
call
mov
fs
mov
adcl
scas
pop
shll
cmp
inc
add
imul
fdivrl
and
cwtl
fwait
outsb
add
xchg
add
push
pop
fstpl
jmp
pushf
xor
mov
push
mov
pop
out
int3
inc
insl
rolb
inc
add
movsb
add
out
lahf
and
mov
test
mov
je
xchg
lods
orb
leave
push
aaa
jl
jg
es
sbb
call
in
sub
sub
mov
mov
inc
je
out
push
jmp
mov
fiaddl
int3
jae
mov
es
mov
cmp
mov
sti
inc
cmp
daa
and
in
fisubs
popa
movsl
andl
jle
ss
sub
sub
inc
dec
roll
mov
mov
stc
xchg
mov
mov
call
mov
sub
or
ret
cmp
push
xor
cmp
test
inc
iret
out
or
pusha
ljmp
push
mov
leavew
je
insl
loopne
cld
popf
jo
arpl
adc
xchg
test
lcall
mov
or
xor
lahf
cmp
orl
pushf
shlb
inc
sbb
pandn
lods
jnp
mov
push
icebp
outsl
repz
testb
inc
cmp
repz
add
inc
sbb
mov
inc
and
insl
cwtl
add
shll
jle
repz
loop
sub
into
and
xchg
insl
mov
pop
cld
bound
shll
inc
and
adc
xchg
or
or
mov
mov
push
mov
inc
jns
mov
xchg
das
test
js
ret
sti
outsl
mov
sbb
jo
mov
idivl
or
loop
mov
add
pop
cmp
imul
jns
jbe
or
and
mov
sbb
mov
and
outsb
inc
push
or
sub
ret
mov
stos
inc
adcl
inc
mov
fcoms
mov
shrb
scas
sub
iret
lcall
mov
xor
arpl
filds
sti
jne
cmp
fwait
jne
pop
out
pop
rclb
pop
ja
xor
add
jg
pop
aad
mov
jno
add
in
mov
loop
cmpsl
dec
push
pop
ficompl
mov
insl
dec
lods
movsb
insb
clc
popf
sarl
aaa
jecxz
xor
loop
or
mov
inc
cmc
iret
xchg
cmc
cmpsl
cmp
sub
mov
jno
test
mull
and
inc
sub
dec
shrb
mov
lcall
sti
ret
aas
jnp
insb
mov
xchg
mov
pusha
lods
bound
inc
adc
jp
movsb
inc
es
arpl
sahf
and
xchg
jmp
in
push
lret
jg
mov
ret
daa
jmp
enter
push
cmpsl
or
adc
inc
pop
xchg
and
jnp
jb
loopne
sbb
mov
addr16
and
sub
mov
in
enter
xchg
mov
stos
add
testl
lea
adc
cmp
loopne
jae
aad
mov
cld
mov
and
and
mov
or
jg
mov
subl
fnstenv
jbe
adc
lret
fwait
pusha
push
arpl
jecxz
and
cmpsb
imul
adc
dec
scas
shl
add
xor
pop
mov
add
scas
lcall
sbb
out
xchg
mov
data16
push
mov
adc
rcrl
dec
nop
dec
jnp
push
inc
sub
aaa
stos
fld
or
leave
jle
std
test
sar
in
mov
in
or
adc
cmp
jge
add
std
push
pop
lcall
cltd
mov
sub
push
ja
fs
xchg
and
add
ficomps
cmp
aas
sbb
push
add
lods
mov
out
pop
das
inc
lea
pop
mov
sbb
pop
cmp
inc
aaa
mov
repz
jge
fldcw
pop
gs
aad
mov
rorl
adc
in
and
stos
ljmp
ljmp
pop
and
dec
shll
xchg
rcrb
xchg
lcall
stos
dec
lret
bound
inc
mov
mov
dec
or
int3
js
dec
jmp
mov
insb
jo
cld
pop
ss
pushf
test
stos
cmp
sub
add
jo
outsl
inc
jmp
add
cmc
fistpll
stc
cmpsl
mov
ja
xor
add
sub
jo
cmpsb
rcrl
test
in
add
leave
mov
ret
imul
cmc
ffreep
xor
add
xor
pop
add
ja
mov
das
lock
mov
push
pavgb
fstl
cwtl
hlt
fdivl
push
dec
arpl
fbld
jge
mov
rcll
xlat
movsl
sbb
sub
leave
adc
fisttps
rcrl
int3
lea
test
mov
addr16
or
xor
clc
into
lods
negb
shrl
inc
loopne
shl
imul
vandps
in
lds
loope
les
std
mov
adc
jmp
xchg
nop
adc
mov
out
fisubl
lea
enter
int
sarl
pusha
xchg
nop
cli
cmpsb
nop
incb
jp
or
xchg
push
xlat
rsm
adc
xchg
outsb
xchg
scas
xor
or
jns
or
xor
xchg
or
mov
out
mov
repz
lods
fidivs
sub
loope
sbb
push
xchg
les
mov
jge
shlb
les
mov
shlb
push
dec
pop
cmp
sbb
out
data16
cltd
inc
adc
ficompl
add
mov
cld
cmp
ret
lcall
push
sahf
jp
and
xchg
lock
addr16
add
jmp
xchg
addb
rorl
push
mov
rol
out
and
lods
outsl
ljmp
cmp
add
popf
pop
mov
pop
in
xchg
stc
js
dec
jg
or
push
outsb
xchg
sbbb
lock
mov
stc
pushf
in
test
cltd
in
xchg
js
mov
xchg
sbb
jle
jge
xor
test
cltd
mov
or
lods
push
ljmp
fsts
lea
insl
xchg
mov
repnz
inc
add
jne
pop
mov
jg
je
xchg
popa
jne
mov
movsl
sbb
cmp
push
inc
cmp
stos
add
inc
cmp
jno
lret
cmp
cmpsb
mov
rcll
cltd
mov
or
or
or
stos
arpl
adcb
movsb
lea
lods
and
jp
lea
jbe
add
sbb
jge
andb
sbb
aas
sar
mov
idiv
call
jge
ss
mov
test
add
dec
mov
mov
sbb
sahf
fidivl
cs
ss
js
mov
sub
lret
add
leave
inc
das
or
mov
rcrl
repz
int3
xor
sub
or
push
fnstsw
mov
add
in
sti
jmp
xchg
xchg
add
rorl
inc
out
rorb
cwtl
shr
cmp
js
mov
jl
mov
rolb
xor
adc
sbb
dec
pusha
lret
lea
mov
sub
call
decl
pusha
mov
nop
out
jnp
push
mov
or
or
fdivs
inc
jmp
scas
mov
jbe
orb
fs
add
xchg
loope
inc
ss
push
xor
mov
sub
mov
mov
add
arpl
out
sbb
push
mov
mov
cmp
pop
sti
push
rcll
cmp
cld
in
mov
lahf
mov
aaa
fidivrl
mov
xor
xor
gs
fldcw
xlat
fistpll
lods
sbb
add
pusha
aas
loop
xor
addr16
inc
subl
mov
inc
cmp
out
sbb
cltd
ficomps
addr16
and
dec
in
inc
xor
int
addl
fsubrs
push
lcall
stc
mov
xlat
lcall
pop
mov
adc
and
jge
jmp
mov
aad
fisttpl
lahf
andl
lock
inc
xchg
dec
rcll
mov
stos
ret
in
ret
data16
insb
adc
cmpsl
movsb
bound
inc
adc
stos
and
jle
decl
lods
lds
fsubrl
lret
sbb
aaa
lea
adc
pusha
sbb
cmpsl
cltd
xchg
sub
adc
imul
lret
jns
scas
dec
xchg
mov
sarb
or
fs
and
mov
rcll
in
jp
pop
cmp
cli
pop
mov
and
xor
jle
repnz
mov
xchg
or
mov
mov
cmp
test
xchg
arpl
add
add
or
test
jecxz
mov
xor
inc
cmc
inc
add
mov
repnz
in
push
jnp
sbb
push
dec
ret
mov
stc
xor
mov
lock
xchg
ja
inc
mov
add
sub
and
mov
mov
xor
xchg
cld
fcomps
sbb
test
xor
lea
mov
add
je
hlt
and
and
jnp
inc
dec
pop
das
push
or
stc
fldl2e
or
mov
test
scas
out
xor
mov
test
dec
mov
fbstp
pop
repz
shll
call
and
stos
pop
stos
xor
mov
int
test
or
outsb
mov
and
sub
inc
inc
inc
add
test
lea
jp
push
pop
mov
inc
imul
jmp
add
xor
and
push
enter
addr16
loope
data16
sub
ret
lahf
or
repz
sub
daa
or
xchg
mov
jae
mov
insl
mov
sbb
and
and
jnp
sub
jge
bound
push
jb
adc
pop
jns
mov
mov
out
cld
inc
xchg
mov
adc
mov
aam
mov
iret
lahf
repnz
mov
stos
xor
inc
addb
push
push
xchg
aad
dec
lret
std
pushf
cmp
adc
rcll
adcl
push
stos
adc
cmpb
inc
pop
mov
imul
xor
ss
mov
subb
je
ficompl
sub
jbe
push
scas
push
inc
pop
push
dec
sbb
dec
add
sbb
mov
cld
jo
sub
and
dec
mov
leave
inc
xchg
pop
xor
cltd
inc
dec
push
out
inc
ficompl
aad
or
mov
lcall
int3
xchg
cmp
dec
push
pop
push
nop
add
jp
and
popa
inc
push
in
and
shrb
mov
call
psrlw
mov
add
in
cld
jae
jno
jl
push
push
push
push
stc
out
mov
jb
or
cmpsl
mov
stc
ficomps
xchg
call
cltd
pop
add
add
xchg
add
sub
pop
lcall
xchg
or
jl
pop
test
pop
pusha
jo
sbb
mov
and
mov
push
push
in
jmp
xchg
mov
data16
cmpsb
pop
gs
out
jmp
lret
or
imul
or
and
mov
sbb
pop
scas
pop
push
or
das
push
adc
and
xor
inc
dec
xchg
pop
xchg
or
je
rorl
xlat
ret
leave
mov
mov
and
ds
push
lods
imul
cs
loopne
or
push
xchg
jl
pop
in
xchg
out
out
arpl
addr16
stos
enter
inc
and
jb
jae
mov
sbb
jae
in
stc
or
bswap
cmp
pop
xchg
stos
sti
stos
out
dec
iret
call
insl
or
insb
stc
pop
xor
inc
mov
jb
outsb
fnsave
addr16
lcall
dec
fsubl
clc
inc
pop
xlat
mov
adc
sub
fcompl
stos
mov
data16
or
arpl
xor
add
cmp
push
sbb
push
cmpl
loop
outsb
mov
lret
and
sarb
iret
mov
pop
xchg
movsb
subb
dec
iret
out
movsl
mulb
inc
movsb
addb
or
push
mov
xor
and
xchg
add
mov
inc
shll
and
mov
push
lret
out
lret
dec
cwtl
mov
out
mov
mov
outsl
xchg
rclb
stos
scas
clc
lahf
cmp
mov
negl
mov
jp
les
imul
lds
adc
jno
xchg
add
int3
and
jo
mov
stc
cmp
sahf
inc
xchg
in
addl
push
sbb
lea
and
imul
loop
femms
push
jl
int
mov
dec
and
movsb
mov
test
push
loope
inc
mov
adc
test
outsb
nop
test
rclb
and
ja
mov
mov
subl
mov
pop
push
sbb
lds
pop
neg
push
mov
sahf
aad
push
and
sahf
loope
lods
adc
mov
and
add
idiv
iret
std
mov
outsl
lds
add
dec
fcmovu
fadds
mov
xchg
xchg
movsl
mov
sbb
or
mov
iret
jmp
xlat
jne
std
jp
xchg
jns
or
jbe
xor
sub
push
mov
sbb
mov
jp
fwait
add
popf
ljmp
in
iret
mov
test
cld
popf
mov
js
sbb
pusha
aas
mov
fbstp
jns
lods
idivb
dec
push
sti
es
aaa
cld
sbb
xor
adc
add
pop
xchg
mov
sti
in
adc
stos
movsl
push
jecxz
and
sbb
lds
and
lods
cmc
jg
loopne
imul
jb
xlat
sub
sub
adc
mov
mov
pop
insl
pop
add
std
xchg
sub
popf
xchg
loopne
or
xchg
incb
fsub
repnz
rcll
pop
mov
adc
fsubs
or
jecxz
inc
aaa
mov
push
pop
lods
imul
add
stos
lcall
popa
or
call
test
xchg
in
lcall
jge
and
xor
pop
cmp
leave
inc
cltd
mov
xchg
mov
lods
testl
roll
mov
cli
imul
sti
dec
sbb
xor
test
pop
aam
mov
imul
xor
push
push
gs
push
or
mov
jae
mov
push
negl
pop
mov
imul
hlt
out
and
mov
out
xor
lea
imul
shlb
and
push
into
cmp
mov
cwtl
roll
mov
mov
push
mov
aaa
adc
clc
push
clc
ss
jmp
addw
xor
fdivl
xor
lods
fisubrs
mov
adc
mov
sub
pop
mov
dec
scas
sbb
sub
rolb
sub
pop
pmaxsw
mov
in
cmc
hlt
and
jge
mov
inc
call
cmp
pop
enter
jmp
inc
adc
jecxz
in
movsb
jle
mov
fsubrl
orl
push
add
pop
mov
push
ja
jns
ds
arpl
loopne
add
ret
mov
out
mov
mov
xchg
add
mov
call
hlt
xchg
inc
sub
bound
fisubl
popf
push
out
mov
sbb
jno
out
jg
jecxz
pusha
sbb
mov
pushf
sub
movsb
jne
xor
jb
mov
push
inc
fxtract
mov
ret
sub
out
or
xchg
lahf
push
loop
iret
xor
dec
jecxz
mov
push
mov
lret
lds
cmp
jne
pop
mov
jno
jle
push
xor
mov
das
inc
inc
xor
gs
pop
mov
push
sub
xor
push
mov
leave
stc
adc
mov
mov
popa
icebp
sbb
xchg
insl
out
stos
imul
stc
mov
or
test
outsl
mov
cmpb
inc
negl
leave
xor
jp
das
mov
mov
es
mov
jl
push
cmp
add
or
pushf
cmp
shl
in
push
mov
pop
rcrb
xor
ja
pop
xorl
jg
mov
mov
movsl
in
inc
and
and
add
xor
repnz
icebp
frndint
jno
ret
pop
mov
test
test
push
lret
mov
scas
notl
inc
aad
jle
push
mov
add
or
mov
adc
pop
adc
cmp
push
cltd
rol
cmp
cli
cmp
enter
push
dec
cmp
ljmp
cmc
fcoml
aam
sarb
cmc
mov
test
push
fcomps
stos
scas
push
sub
mov
jmp
cmp
imul
inc
xchg
daa
adc
mov
je
lahf
ret
jo
jl
popf
mov
iret
movsl
jmp
mov
mov
outsl
inc
outsl
pop
jmp
out
int
in
or
inc
fidivrl
xor
fwait
jbe
pop
xlat
sbb
test
xor
and
sbb
shrb
ljmp
add
dec
mov
mov
pop
shr
aaa
bound
mov
and
sar
mov
mov
pop
pop
outsl
mov
mov
clc
repnz
fcoms
jle
push
push
jle
xlat
outsl
mov
lcall
add
xchg
add
pop
and
insb
add
cmp
mov
sarb
push
outsb
mov
in
ret
mov
dec
jb
enter
and
mov
icebp
clc
lret
inc
mov
xor
out
jae
inc
mov
scas
cmp
cmp
xor
mov
outsl
icebp
in
loop
lea
add
mov
scas
mov
push
subb
out
hlt
dec
add
je
push
inc
lret
lds
mov
std
pop
popf
push
jae
rorl
sub
jnp
sub
xchg
test
je
or
out
fwait
push
lods
not
and
shr
sahf
pop
stc
fcomps
pop
xor
add
mov
sbb
push
movsb
xchg
pop
push
xchg
push
in
ja
mov
cli
xchg
testl
mov
and
sbb
xchg
mov
and
jb
pop
xor
iret
jns
adc
test
popa
xor
or
clc
aaa
cmp
hlt
ret
outsb
or
mov
jo
sub
cmp
movsl
jl
mov
mov
push
sbb
leave
cwtl
pop
in
mov
inc
addr16
push
jp
cmp
lcall
cmpsb
loop
enter
or
rorb
ror
insb
add
jno
adc
add
push
sub
mov
scas
xor
dec
xor
fwait
dec
das
mov
rcrl
lods
icebp
xorl
sbb
cmp
outsb
notl
repz
dec
pop
loope
xchg
sub
sbb
leave
cmp
dec
mov
xchg
mov
or
ss
stos
cmp
push
dec
xor
inc
jmp
ret
sub
jp
fcmovnbe
in
gs
cmp
mov
clc
dec
stc
fwait
xchg
std
aad
cmp
cmc
orb
mov
jnp
sbb
xchg
xor
sahf
lea
add
scas
or
sbb
and
cltd
xor
les
clc
fldt
insb
and
xor
aas
jo
adc
jg
inc
jle
adc
push
subl
dec
out
jnp
xchg
into
adc
pop
inc
add
and
mov
dec
cwtl
and
dec
mov
adc
aad
adc
pop
arpl
xchg
out
inc
mov
cmp
dec
inc
cmpb
mov
fsubs
cmp
mov
add
push
or
pop
out
repz
mov
jns
test
add
int
mov
push
popf
dec
loope
aas
push
out
filds
cmp
addr16
cmp
push
testl
cmp
mov
xchg
xchg
sub
mov
cmp
mov
mov
scas
stos
setbe
inc
cmp
dec
push
dec
jge
movsl
adc
jle
xor
sub
dec
cmpsl
inc
aas
sub
out
sbb
mov
or
dec
ret
pop
sbb
inc
sbb
inc
in
and
push
leave
push
test
jp
test
jecxz
into
add
mov
mov
into
sbb
enter
mov
call
sbb
push
sub
mov
repz
in
pop
fmull
out
mov
in
data16
lods
insl
xor
insl
nop
xorb
jns
pop
rorb
mov
loop
cmp
js
or
jne
jno
gs
sbb
cli
mov
imul
out
jb
shr
mov
mov
in
call
xor
rorb
inc
int3
scas
mov
sahf
fimull
push
inc
aad
or
not
jecxz
push
cmp
stos
jae
stc
outsl
int3
mov
cmp
in
lahf
enter
pop
push
xchg
adc
popa
push
mov
daa
iret
pusha
adc
jl
cwtl
lret
add
popf
push
or
das
add
inc
xchg
cmp
xor
mov
push
in
test
in
mov
push
lock
xor
xor
pop
push
add
sahf
mov
xor
push
nop
scas
xchg
sbb
insl
dec
movsb
mov
adc
pop
xchg
decb
push
movsb
sub
test
jbe
mov
arpl
and
test
mov
pop
mov
add
pop
cmpsl
or
fbstp
fsubrp
outsl
pop
adc
in
jmp
in
and
adc
adc
xchg
pop
and
insb
add
adc
xor
cmpsb
add
inc
call
dec
in
enter
push
pop
jno
icebp
rcrl
fsubs
push
in
jnp
dec
or
insb
add
mov
insb
xchg
sbbl
adc
mov
out
add
jb
in
inc
outsb
jb
jae
cmp
ficomps
test
jge
inc
pop
push
leave
xchg
insl
mov
aam
inc
fsubrs
repnz
loope
add
xchg
add
mov
dec
rclb
sahf
popf
pusha
notb
in
mov
fidivrl
cmp
cltd
out
ret
xchg
cli
nop
shlb
movsb
sbb
outsl
js
lods
mov
pop
mov
sbb
repnz
dec
mov
mov
stos
mov
dec
inc
push
or
mov
test
push
adc
inc
test
push
popa
fld
xor
bound
mov
xlat
adc
xor
scas
fiaddl
dec
and
stos
outsb
xchg
mov
sti
fimuls
mov
adc
lea
in
adc
mov
psadbw
cmp
sub
in
mov
clc
push
outsl
mov
push
outsb
xor
add
call
mov
fsubr
mov
lcall
outsb
cld
aas
push
icebp
jo
mov
fisttps
inc
mov
aaa
lea
inc
mov
sti
shrb
xchg
add
mov
mov
mov
rolb
push
mov
aas
and
addr16
insl
int3
push
xchg
dec
jmp
ret
scas
push
mov
daa
mov
pop
cmpsb
pop
adc
add
dec
ljmp
xor
out
lret
push
sbb
and
aaa
out
xchg
push
push
out
loope
xchg
push
mov
xlat
ja
mov
lods
ds
and
cltd
cld
xchg
rcll
enter
dec
cmp
andb
xchg
adc
push
fldl
push
xchg
pop
pop
cltd
sti
das
jae
sahf
xchg
sbb
jmp
mov
out
cli
lock
pop
and
push
xor
popf
cmp
jns
mov
dec
and
xor
fadds
sbbb
sub
fwait
adc
mulb
fistpl
jno
fmuls
ds
lcall
mov
sbb
sub
mov
orl
scas
std
xchg
mov
jp
or
pop
popf
add
xor
out
pushf
mov
pop
ficomps
push
je
adc
sub
pop
or
or
push
sar
outsb
dec
jp
or
out
sub
jns
repz
xchg
pushf
add
ja
idiv
pop
out
dec
mulb
icebp
pop
sbb
add
add
out
pop
call
loope
popa
scas
fs
arpl
out
roll
sub
fwait
xchg
pop
mov
out
add
sar
push
cld
test
mov
mov
int
test
fbld
out
popf
int
aas
data16
lds
int
sub
or
add
loop
in
enter
push
xor
lret
add
mov
jl
pop
andl
fistpll
jl
mov
cmp
es
sbb
les
das
push
and
ljmp
dec
inc
and
aaa
clc
pop
pop
mov
or
jge
gs
shlb
dec
xor
mov
fildll
in
shrl
imul
sbb
hlt
gs
cmp
adc
into
in
int
pop
xchg
pop
push
push
sub
fldenv
dec
dec
jns
loop
xchg
xor
mov
jo
xchg
adc
cmp
xchg
lea
into
mov
dec
icebp
or
xchg
loop
push
nop
inc
fsub
sub
aaa
sub
or
rcrl
aam
sub
sarl
add
dec
testl
imul
or
inc
clc
jae
sub
arpl
jp
jmp
movsb
idivb
jbe
das
jle
int3
lahf
mov
sbb
flds
pop
push
call
frstor
inc
ret
lret
pop
mov
jp
test
icebp
push
aas
jecxz
js
add
outsb
mov
stos
out
mov
pop
imul
fnstcw
push
cmp
mulb
dec
fcmovu
cmp
pushf
loop
mov
push
push
nopl
pop
pop
add
sti
shll
addr16
test
rcl
adc
loop
cmp
ja
pusha
test
push
inc
push
adc
clc
pusha
ljmp
adc
mov
int
daa
test
mov
fbstp
inc
inc
insl
dec
cs
lods
mov
or
jne
xlat
add
and
ds
jmp
out
push
mov
iret
leave
adc
rcrl
add
add
mov
div
aas
cbtw
and
scas
xchg
call
mov
scas
push
pusha
dec
mov
cs
mov
fwait
sbbb
sbb
sub
mov
pop
jecxz
sti
mov
test
mov
mov
add
adc
imul
jmp
jg
movsl
pop
hlt
dec
sub
ror
xchg
in
dec
es
aaa
insb
cwtl
movsb
xchg
xchg
shll
arpl
xchg
xor
sub
add
jmp
jne
fsub
add
fwait
rolb
andl
dec
lea
ss
in
loopne
ds
pop
jecxz
lret
xor
icebp
mov
loope
lea
arpl
sbb
test
mov
bound
loopne
clc
fstpl
sbb
or
mov
add
push
rcr
shlb
push
add
xchg
movsb
fs
mov
dec
dec
inc
mov
or
jne
add
jnp
xchg
shr
and
xchg
mov
inc
loope
incb
push
loopne
into
push
sar
ret
pushf
inc
push
sub
or
int
jecxz
xor
imul
lods
cmpsb
stos
add
stc
ss
sarl
cmp
lds
sbb
subl
pop
or
xchg
mov
mov
into
shlb
aas
scas
mov
pop
aaa
adc
jae
les
sbb
pop
lea
dec
mov
dec
scas
insl
int
push
and
lret
loope
pop
push
mov
ret
add
dec
adc
in
enter
adc
mov
ficomps
movsb
sbbl
lds
inc
jno
lea
out
movl
ret
mov
mov
jne
out
ret
dec
xchg
add
jle
popa
xorl
out
sub
push
sbb
fisttps
push
dec
int3
je
cmp
sbb
pusha
adc
hlt
das
loope
clc
jo
push
push
loop
adc
stos
or
xchg
sub
mov
aaa
push
sbb
imul
sti
dec
movsl
add
andl
sub
fidivs
pushf
or
stos
imull
mov
mov
scas
fprem
push
fiaddl
xchg
jecxz
loopne
repz
cmpb
push
in
dec
cmc
and
testb
ret
fcoms
filds
sub
pusha
sub
xchg
mov
inc
pop
adc
loopne
idivl
test
ja
jno,pt
cmp
dec
fisubrl
mov
pushf
test
jne
mov
movsl
insl
dec
xor
cld
mov
dec
jb
sarb
inc
jno
lea
xor
sahf
xor
mov
jbe
add
xchg
add
pushf
hlt
sbb
mov
mov
jbe
push
pushf
xor
subl
leave
xchg
push
cmp
xchg
sub
mov
xor
or
sub
cmpsl
lcall
and
gs
mov
inc
dec
in
fists
mov
out
lea
lods
xchg
in
add
jno
sub
xchg
cltd
lea
or
sub
mov
sbb
rcrb
outsl
imul
iret
in
sbb
leave
aaa
cmpsb
stos
fldt
xorb
ds
movsl
mov
pop
icebp
in
loopne
in
lcall
mov
call
sbb
pop
ljmp
lcall
movsl
enter
ficoms
in
mov
inc
sub
imul
repz
adc
cltd
pop
rcll
add
ljmp
mov
stos
test
lock
pop
mov
pusha
outsl
lret
dec
xor
loope
xchg
xlat
repnz
mov
and
push
jmp
xchg
lret
pop
add
dec
jno
pop
in
lea
rolb
cltd
cmp
xchg
mov
mov
gs
ja
loop
adc
fsts
shr
xor
test
ret
cmpsl
test
cmp
aas
adc
cs
imul
lock
inc
push
push
mov
xor
dec
leave
mov
or
into
mov
pop
push
cmp
adc
aaa
cmp
xor
sbb
gs
lods
and
pushf
mov
pop
mov
ret
mov
call
or
dec
shll
sub
push
loopne
sahf
test
mov
lret
bound
xor
add
fcomps
pop
sub
imul
enter
adc
leave
pop
mov
insl
xor
popa
xchg
xchg
or
sbb
stos
in
cmp
jnp
popa
xor
mov
pop
icebp
aas
or
sub
sub
leave
scas
cmc
adc
sbb
lcall
cltd
js
fisubrs
shlb
negl
leave
lods
push
mov
cmp
jle
pop
rcll
cmpsl
loope
jg
hlt
cmp
jmp
adc
pop
cmc
loopne
push
sub
cmpl
add
std
in
mov
mov
std
pop
xor
push
in
xor
xchg
add
xchg
add
mov
xor
jbe
mov
add
in
shlb
daa
mov
and
xchg
add
aam
mov
cmc
cld
xor
imul
call
xchg
push
pop
fsubrs
and
data16
xchg
shrl
or
cmc
addr16
test
outsl
stos
sti
lret
dec
in
mov
test
cmp
rclb
jl
ret
out
stc
cmp
loopne
aam
movsl
cmp
mov
pop
popf
xor
lea
or
xchg
in
roll
xchg
fldt
in
xor
fiaddl
adc
or
call
push
sub
fadds
ss
mov
rcrb
arpl
mov
jp
cmpsb
test
xor
or
popf
out
cmpsl
fstpl
lcall
and
xor
cmc
fldenv
push
leave
jp
inc
jle
jle
push
and
call
in
jbe
sbb
loope
lahf
fmul
testb
insl
jb
and
xor
outsl
xchg
sbb
push
xchg
cli
xor
pop
dec
mov
xchg
je
add
js
push
adc
mov
sbb
adc
mov
ss
xor
or
shlb
test
dec
cli
sarl
adc
ja
mov
push
dec
sub
adc
divl
adc
aas
mov
mov
or
adc
lahf
shrl
les
cmpsb
mov
mov
addl
mov
adc
cmp
lret
mov
jmp
add
std
loop
jmp
jne
lahf
lock
xchg
mov
mov
lods
outsb
push
pop
mov
adc
pop
push
movsb
cmpsb
ret
fsubs
sub
cwtl
fildl
xor
push
aas
xchg
icebp
test
test
dec
cmpsb
jp
adc
hlt
repz
test
lock
xor
repz
sarb
stos
add
dec
xor
lods
les
in
push
iret
call
or
lock
in
enter
insb
mov
push
bound
out
xchg
rcrb
stos
pop
aas
repz
fimuls
rolb
out
sub
into
mov
add
nop
push
adc
mov
pop
les
xor
outsb
flds
repnz
jp
test
and
ja
pinsrw
adc
std
mov
mov
cmp
mov
bound
dec
fdiv
and
mov
push
insb
hlt
enter
arpl
loopne
arpl
mov
sbb
mov
pop
cmpsb
mov
pop
negb
xchg
pop
jnp
jnp
je
pop
sub
xchg
jno
loope
ja
xor
fwait
mov
scas
loopne
pop
or
add
cmp
sbbb
push
mov
pop
mov
inc
xor
in
pop
es
jne
mov
adc
mov
fwait
push
stos
mov
out
movsb
movsb
bound
dec
call
pop
outsl
or
fiaddl
stc
adc
cli
mov
adc
mov
push
mov
insl
imul
adc
cmp
mov
push
jmp
pop
aad
and
shl
fs
pop
daa
jns
sub
test
add
scas
sahf
cmp
loope
scas
pushf
sarb
push
sub
cmpsb
mov
xchg
sti
mov
outsl
outsl
pop
mov
pop
xchg
hlt
hlt
enter
jno
jge
or
sbb
dec
arpl
incl
mov
fiadds
bound
pop
and
mov
cmp
push
push
sub
push
cwtl
mov
adc
loope
movsb
lahf
sbb
xchg
lock
aaa
orb
cmpb
lret
push
add
lret
xchg
insl
movsl
push
cltd
xlat
pop
lret
rcrl
fcmovnb
loop
leave
sub
pop
sbb
xor
les
imul
adc
loop
adc
xchg
dec
push
dec
bound
movsl
mov
cmp
jecxz
adc
cld
repz
add
jo
jns
rcll
lock
dec
not
shlb
xor
cmp
pusha
fiaddl
jg
xchg
insl
xchg
sub
andps
clc
ret
pop
lock
push
imul
movsb
jg
jl
push
cltd
cmp
and
xor
mov
xor
rcr
ret
movsb
scas
and
sub
stos
mov
ss
dec
je
lahf
mov
mov
mov
inc
popf
or
inc
inc
popa
data16
rcrl
xor
xchg
add
xchg
add
cltd
xchg
nop
push
pop
sti
lock
stos
loope
mov
ficomps
xchg
sbb
jge
mov
mov
ljmp
ret
mov
iret
shll
or
sub
loope
sbb
xor
icebp
jo
mov
mov
cmp
mov
pop
ret
inc
inc
sub
pop
fidivs
data16
or
repz
jo
push
add
or
test
sahf
mov
push
cmp
out
faddl
mov
xchg
push
pop
mov
push
push
push
dec
xor
jl
mov
jo
mov
arpl
mov
fbstp
jle
jle
out
push
cwtl
movsl
push
cmp
mov
or
stc
mov
jmp
pop
adc
mov
push
add
inc
and
loope
jle
fsubl
adc
adc
mov
in
dec
or
push
inc
adc
jge
mov
sub
ret
push
mov
andl
push
ds
jecxz
aaa
sahf
lret
arpl
loope
mov
fistpll
cli
inc
sub
add
js
add
cmp
jp
sbb
cmpsb
pop
insb
shll
subb
loope
push
jmp
icebp
dec
in
mov
rolb
add
insb
stc
jge
push
add
icebp
scas
lcall
in
push
pop
add
xor
mov
into
ds
cwtl
js
testw
xor
mov
mov
mov
mov
cmpsb
mov
mov
cmp
in
movsb
test
push
out
xchg
test
and
xchg
push
fsubrs
xchg
xchg
add
rolb
popa
pop
aad
pop
pop
mov
les
aaa
adc
je
push
sbb
sub
int
sub
leave
xchg
push
add
sbb
xor
sub
add
xor
mov
add
sbb
pushf
jmp
inc
lock
jmp
out
and
ja
cmp
xor
adc
mov
lea
cmc
es
incl
cmc
inc
movsl
and
hlt
subb
ljmp
pusha
lahf
shrl
push
add
cld
adc
ja
dec
sub
mov
sbb
fidivl
fmul
or
xchg
leave
mov
sti
outsb
add
cmp
cli
in
jg
loopne
jnp
mov
add
add
dec
sbb
mov
and
in
bound
mov
pop
test
popf
fsubl
or
lahf
and
stc
mov
icebp
mov
push
cmp
sbb
rorl
dec
jns
xor
insb
out
fbstp
add
dec
shrb
subb
movsb
mov
int3
and
mov
dec
lods
add
ret
mov
and
or
arpl
sahf
sbb
pop
xchg
push
ds
pop
adc
xchg
cwtl
push
and
outsl
inc
inc
pusha
xor
mov
mov
pushl
and
ret
test
push
or
outsl
imul
pop
sbb
rorl
pop
dec
lea
ret
fs
clc
sub
cli
push
and
loope
add
arpl
cmp
mov
push
arpl
mov
inc
dec
popa
add
cld
sub
xor
test
stos
pop
in
adc
popl
mov
icebp
mov
push
dec
lret
inc
cmp
testl
adc
pop
imul
shlb
xchg
and
cwtl
in
pop
lods
lahf
mov
cltd
sbb
inc
mov
jecxz
adc
test
pop
sub
cwtl
cs
das
push
ja
dec
ljmp
lds
dec
xchg
aam
sub
and
jno
repz
xchg
imul
jb
dec
add
imul
add
arpl
sbb
call
and
lret
sbb
pop
movsl
push
xchg
stc
and
add
xor
clc
and
out
cmp
cmpsb
or
lock
pop
mov
sub
inc
mov
jno
fsubl
and
mov
adc
pop
cmp
push
les
es
imulb
mov
inc
test
les
iret
pop
out
mov
cs
mov
mov
push
mov
and
mov
mov
jecxz
cmpsl
inc
cmpsl
and
fwait
jo
push
add
push
les
pop
push
lea
test
sti
das
scas
lods
inc
jns
cmp
jmp
ret
call
inc
push
rol
pop
mov
push
cmp
cwtl
rolb
cmp
xchg
ret
and
push
push
cmpsb
and
bound
sbb
add
sub
dec
loop
xor
push
je
mov
sbb
jae
out
loopne
flds
insb
and
sbb
jecxz
enter
jae
iret
inc
sub
pop
sub
pop
movsb
out
daa
fwait
pushf
icebp
in
mov
xchg
mov
jo
xorb
outsb
rcll
mov
mov
cmp
pop
call
inc
push
aam
ret
bnd
lds
push
mov
outsb
ds
std
xchg
fadd
hlt
push
and
add
and
push
push
imul
stos
sub
cltd
fstpl
repnz
int3
movsl
stos
std
pusha
lods
adc
fs
sbb
jge
xchg
cli
sbb
cwtl
lock
dec
xor
in
movsb
xchg
jmp
lock
lret
sbb
sbb
sbbb
into
in
fidivl
mov
jnp
sbb
outsl
fwait
addb
int
mov
lock
negl
mov
stos
or
sub
sub
xor
dec
xchg
xchg
ja
aad
jo
fidivrl
repz
jp
lods
test
into
sar
cmc
or
pop
in
bound
das
orb
fwait
sub
or
and
cld
fadds
mov
ja
or
mov
ljmp
rcrb
fs
xchg
loope
lock
mov
add
cmp
sbb
clc
add
aas
or
pop
daa
ret
lret
jne
lret
pop
adc
bound
inc
bound
mov
aaa
lds
xorb
ror
sahf
mov
and
inc
repz
test
mov
and
cmc
leave
jbe
iret
mov
and
pusha
ja
sub
imul
test
loopne
fcompl
das
or
dec
mov
cwtl
js
jmp
mov
lock
xlat
cld
inc
cmp
jno
sbb
dec
dec
push
inc
mov
dec
xor
in
rcr
jo
jne
xor
and
imul
cmp
mov
stc
sbb
pop
ss
mov
jbe
imul
pop
rcrl
sahf
mov
enter
cmp
outsb
pop
sbb
cmp
sti
rolb
mov
xchg
les
fnstsw
mov
add
outsb
xchg
mov
add
add
icebp
mov
das
out
push
mov
ss
adc
jo
lock
setl
sub
test
and
and
xor
pop
xor
and
sbb
mov
adc
mov
cwtl
add
faddl
imul
mov
mov
push
ds
inc
pop
test
xchg
add
push
xchg
xor
sbb
mov
pop
fs
movsb
outsb
or
rcrb
call
jo
jne
in
push
insb
or
cmpsb
sarb
ljmp
jge
pop
adc
pop
fidivrl
fcompl
mov
or
mov
ret
jb
add
pop
pusha
xorl
push
dec
and
and
jle
dec
jl
out
push
dec
add
sub
into
adc
cmp
hlt
or
xor
pusha
fwait
mov
adc
cmc
xchg
mov
push
cmp
cmp
lret
jnp
bound
and
testl
stos
sahf
out
aam
mov
mov
mov
mov
pushf
pop
mov
pushf
aas
shr
ss
mov
mov
sbb
sub
mov
loopne
mov
mov
mov
inc
repnz
enter
jae
dec
ljmp
icebp
adcl
pusha
ret
push
inc
orl
sbb
cmc
and
mov
adcb
xchg
ss
jmp
std
aam
int3
cmc
movsb
inc
in
and
mov
sub
pop
pop
cld
pusha
pop
js
or
cltd
add
xchg
cmc
lcall
inc
icebp
sub
sbb
iret
fs
add
shrl
push
stc
outsb
insl
decb
add
xor
mov
dec
pop
pop
scas
jbe
iret
test
loop
cmpl
adc
insb
push
cs
inc
pop
leave
pusha
shr
pop
hlt
mov
push
push
mov
loope
push
push
or
lret
hlt
pop
mov
push
push
mov
inc
sbb
arpl
sti
popf
sub
fcoml
aaa
jno
adc
ss
push
sti
mov
repnz
inc
inc
pop
add
jmp
xchg
pop
mov
sbbb
pop
fucomip
push
stos
dec
jnp
dec
lock
or
pop
setns
cmp
aaa
mov
aam
mov
aas
add
inc
mov
and
daa
mov
add
int3
fdiv
das
fs
lcall
das
shlb
dec
int
int3
xchg
outsb
loop
fs
or
loop
iret
sarb
sbb
pushf
lds
arpl
sbb
adc
pushf
push
xor
aam
lods
std
arpl
jg
cmp
push
cs
sub
in
in
xor
mov
pop
movq
lock
int3
pop
fmul
iret
ljmp
shr
inc
loop
dec
rcrl
or
sub
shl
cmc
adc
notl
pusha
cmp
push
shlb
pop
clc
insb
mov
cmp
dec
lods
scas
jnp
mov
sarl
nop
sbb
inc
push
out
daa
inc
ret
aad
inc
pop
cmpsb
fiaddl
sbb
test
fdivrl
fsubl
push
xlat
repz
push
pop
out
sar
aas
imul
mov
push
mov
jb
addr16
orl
jg
lcall
hlt
out
dec
mov
ljmp
fimuls
lock
lds
pop
push
addl
idiv
dec
mov
sbb
leave
inc
mov
and
rolb
push
jp
loopne
xchg
lcall
mov
js
mov
mov
cmc
jo
ror
and
icebp
inc
shrb
stos
arpl
fnsave
pop
movsl
and
jnp
cmp
fwait
mov
ja
test
fld
cmp
xchg
cmp
and
pop
repz
inc
icebp
xor
loopne
push
sbb
xchg
cmp
out
xchg
pop
cmc
sti
or
test
aas
pushf
cmp
cmpl
daa
pop
imul
xor
daa
xchg
std
mov
insl
jns
out
inc
sbb
pop
dec
inc
and
hlt
mov
ds
bound
mov
shlb
inc
push
dec
lret
push
in
dec
lret
jl
pop
jnp
loope
loop
popf
mov
repz
pop
sub
test
and
in
pop
and
lahf
xor
mov
popa
lret
inc
xor
test
into
mov
mov
ljmp
push
mov
mov
iret
daa
stos
jbe
inc
add
out
mov
clc
mov
cmp
jle
xor
lods
xchg
dec
scas
mov
add
movsl
dec
jg
or
xorb
aaa
mov
stos
push
push
sar
test
in
mov
push
cmpl
jmp
loop
imul
mov
add
and
add
push
jmp
inc
jo
cmpsb
fisttps
psrld
inc
int
ljmp
call
mov
sub
pop
cwtl
cli
popa
add
je
xchg
mov
dec
out
or
imul
pusha
shl
adc
loope
dec
sub
es
cmp
xchg
dec
mov
rolb
mov
arpl
movnti
clc
lea
mov
es
dec
add
idiv
je
into
cli
hlt
lret
sub
shrb
ret
sbb
push
pop
add
jno
ss
jns
lods
js
mov
int
pop
cmc
flds
xor
sti
inc
ja
popa
arpl
ret
popf
sub
dec
mov
rol
popf
sbb
roll
xlat
pop
add
aad
in
inc
lods
sub
mov
cwtl
pusha
inc
hlt
aaa
sub
pop
and
jb
cld
push
decl
movsl
jmp
jae
pop
dec
mov
pusha
pop
xchg
icebp
cltd
test
jmp
dec
adc
inc
fwait
cli
in
lds
mov
xor
mov
or
push
mov
add
xchg
pop
push
lcall
or
inc
aas
jmp
test
dec
mov
sar
loop
ret
xchg
jb
sub
sbb
sets
add
pusha
xor
cli
jl
pop
or
add
iret
fcmovnb
add
add
xchg
cmc
mov
push
or
jle
dec
push
mov
aaa
daa
insb
mov
lcall
xchg
pop
bound
lock
cmp
out
add
stos
push
fistpll
cmp
je
loopne
stc
call
daa
ss
cmp
mov
push
and
test
xchg
pop
jae
aas
sub
icebp
push
jl
sarl
lods
push
sahf
daa
stc
adc
pop
sbb
ds
test
mov
dec
ret
adc
jne
pop
aam
mov
or
test
push
xchg
inc
pushw
adc
or
sub
mov
mov
mov
jns
jecxz
ljmp
mov
mov
leave
test
rcll
add
sbb
out
idivl
mov
adcl
add
add
ja
std
rcrb
subl
xor
mov
lret
repz
clc
aad
adc
push
jl
and
lods
lcall
fdivrp
mov
cmc
push
daa
xchg
sub
aam
and
int3
jo
xor
mov
xchg
or
cld
sahf
jg
mov
push
pusha
int3
push
mov
aaa
push
out
test
xor
in
ljmp
hlt
mov
movsl
lcall
dec
sub
mov
loope
cmc
pop
lret
jmp
inc
and
popa
jns
xchg
xchg
in
enter
push
jge
addr16
cmpsl
cs
mov
roll
ljmp
int
shlb
cmp
repz
out
aam
fcmovnbe
repnz
iret
jg
loop
jp
out
je
jb
ret
fcompl
dec
aam
test
mov
pop
fdivrs
pop
pop
xchg
fsubr
aam
xchg
dec
jnp
test
lods
test
outsl
loop
add
nop
jecxz
cmpsb
cltd
mov
xchg
xchg
lods
arpl
ret
jecxz
adc
dec
push
fimuls
in
dec
pop
sub
dec
sub
test
sub
mov
mov
lds
sarl
push
data16
mov
jnp
cli
pop
xor
clc
icebp
jecxz
dec
testb
repz
mov
xor
scas
push
ja
daa
push
aaa
xchg
mov
adc
push
icebp
mov
movsw
cmp
rolb
xchg
test
mov
clc
add
jl
test
inc
cmc
stos
arpl
sbb
jg
or
xchg
pop
cli
mov
lcall
pop
jg
insl
push
movsb
or
sub
pushf
scas
xor
arpl
cmp
push
test
scas
pop
mov
inc
add
gs
cmp
xchg
je
pop
inc
call
addr16
push
cmp
jmp
sub
lds
and
rclb
scas
mov
pop
dec
int3
ret
sub
adc
or
fiadds
sub
daa
jle
sub
inc
jecxz
cld
arpl
in
test
jns
jle
dec
xchg
iret
sbb
test
aaa
aad
sbb
push
mov
add
roll
mov
fcompp
out
gs
imulb
lods
loope
test
add
or
xor
pop
sub
pop
repnz
sbb
pop
cwtl
arpl
mov
adc
xor
mov
je
daa
imul
das
mov
cmp
mov
mov
fnstcw
mov
notb
adc
test
push
stos
sub
pop
arpl
enter
push
aas
ret
aad
push
add
shll
and
rcrb
jp
fimuls
lds
call
cli
js
inc
jo
mov
inc
std
popf
mov
pushf
or
xchg
sti
push
pop
addr16
sub
add
sub
aam
jl
inc
cmp
jo
pop
or
leave
pop
push
jne
popa
push
adc
xchg
inc
mov
leave
push
hlt
pop
icebp
fmulp
dec
out
jne
push
mov
mov
test
in
leave
mov
lret
push
xor
jno
in
rcll
jnp
rcrl
push
or
inc
inc
jle
and
and
int3
jg
enter
dec
or
push
dec
push
imul
mov
ja,pn
xor
cmp
mov
inc
stos
stos
xchg
dec
dec
fiaddl
popa
rolb
mov
xor
mov
cltd
add
sti
pop
pop
xchg
xor
aam
and
cmp
or
lret
insb
movsb
pop
sbbl
xor
push
mov
repnz
mov
dec
cmp
rolb
ss
mov
and
jns
lods
rcr
mov
lods
cltd
mov
pop
sbb
lds
inc
out
fnstcw
push
sub
jg
jecxz
dec
test
nop
dec
xorb
jb
std
mov
inc
lods
cmp
inc
je
insb
xor
aam
loope
int3
stos
ret
movsl
rcll
enter
ja
scas
fcomps
pop
in
call
movsb
cmp
fsubp
stos
inc
sub
test
cli
addl
jb
push
mov
cmp
sub
mov
jbe
dec
insb
jecxz
push
push
int3
ret
sub
pop
mov
push
or
push
and
xor
mull
jecxz
or
imul
daa
mov
jle
adc
arpl
sti
adc
sub
mov
add
push
push
test
idivl
or
sbb
test
sbb
ficoml
pop
aam
mov
das
pop
ret
cltd
fidivl
jmp
cmpsb
shrb
or
fsubrp
adc
fcoms
jg
jp
push
aas
aad
mov
add
mov
sub
push
dec
call
addb
xchg
int3
aad
ret
pop
loope
addr16
sbb
dec
lock
cli
leave
test
xchg
xchg
mov
test
push
cmp
les
mov
xor
and
mov
jns
push
or
cmp
cmp
fldl
addr16
and
sub
push
inc
mov
pushf
das
clc
leave
jecxz
fsubs
push
mov
sub
testl
fimull
push
fisttpll
jno
cmp
cmc
dec
jle
lods
pop
xor
pushf
adc
dec
bound
data16
cmp
inc
sahf
push
les
mov
sub
data16
pop
xchg
test
das
rcl
adc
lret
cld
pushf
adc
or
loopne
inc
pop
and
leave
mov
mov
pop
negb
jae
adc
pop
add
fwait
mov
loop
push
pusha
cmp
inc
es
sub
xor
push
pop
sbb
movsw
jno
lahf
leave
inc
test
push
andb
or
add
inc
xor
mov
push
jb
sbb
ja
jno
adc
mov
cmp
jle
inc
push
xor
ja
fildll
ds
adc
out
pop
adc
add
and
sahf
in
dec
and
dec
mov
insb
dec
out
adc
sbb
mov
arpl
or
or
outsb
mov
pushl
popa
xchg
movb
rcll
dec
lcall
add
mov
sbb
sub
sub
mov
mov
xchg
pop
rolb
pop
jnp
sub
iret
inc
imul
pop
fs
mov
jp
push
inc
jae
ja
sbb
xor
and
inc
lret
sub
mov
inc
test
out
mov
sbb
mov
inc
stos
jle
jecxz
sub
dec
push
jns
les
push
push
hlt
repnz
addl
scas
mov
mov
lret
add
arpl
adc
push
xchg
arpl
lock
pusha
xchg
mov
mov
sub
imul
pop
imul
mov
mov
xchg
rcrl
jge
daa
pop
xchg
dec
add
int
scas
mov
into
pop
push
xchg
cmp
adc
xchg
jnp
sub
inc
mov
cs
out
cmpsb
int3
pop
movsl
or
adc
xor
jno
adc
mov
mov
dec
sbb
cmp
fistpll
loop
inc
in
lods
shll
dec
lods
add
dec
jno
lock
sub
mov
mov
or
push
in
outsb
gs
inc
mov
cmp
sbb
xchg
nop
mov
jb
pop
mov
and
ret
pop
fnstcw
call
out
imul
jbe
andb
fwait
cmp
mull
mov
outsb
pop
adc
jnp
lcall
je
jne
jp
stos
dec
mov
push
add
ss
mov
jo
adc
mov
mov
imul
enter
nop
insb
ja
popf
jo
shrl
aaa
push
jnp
sub
jae
fimuls
cmp
mov
lds
push
push
push
cmp
xor
jb
lcall
stc
jp
add
push
notl
jne
loop
jo
mov
or
jo
inc
push
es
xor
cmp
fildl
jbe
pop
fsubl
sahf
lret
cmpxchg
xchg
push
jb
nop
or
add
mov
int3
dec
adc
shlb
aam
stos
ret
lds
inc
movsb
out
dec
inc
xor
sub
fimuls
mov
and
mov
mov
jae
and
cmp
jle
nop
cltd
pop
lock
inc
xchg
rcrl
popf
stos
leave
mov
sub
imul
loopne
pop
cwtl
fs
pop
pop
mov
and
scas
insb
fwait
outsb
cmc
ret
add
in
loope
add
jns
cmpsl
shr
repz
stos
xchg
lahf
jg
xchg
push
sbb
jp
jae
cmp
insb
cmp
ret
gs
or
push
mov
loopne
pop
push
ltr
push
jecxz
jg
popa
hlt
mov
mov
add
xchg
add
in
mov
subl
enter
aam
out
icebp
mov
mov
mov
jnp
sbb
mov
cwtl
mov
jb
mov
movsb
mov
push
push
sarb
loope
jmp
fldcw
xor
pushf
hlt
pop
push
inc
test
jle
push
stos
das
or
movsb
push
movsl
or
xchg
mov
cmp
sub
sti
rcrb
ja
loop
jecxz
dec
stos
xor
add
inc
rorb
aad
sbb
lds
pusha
sub
test
and
mov
cmp
scas
ret
mov
push
mov
movsb
lret
push
sbb
push
aas
cmp
push
xor
sbbl
cmp
jecxz
pop
hlt
inc
pop
or
mov
gs
jg
pushf
js
test
xchg
daa
cmc
repnz
mov
add
fimull
or
addr16
adc
push
sub
aam
stos
in
inc
cmpsl
and
lods
mov
sub
cmp
cltd
scas
cmovo
mov
popa
shlb
mov
jbe
xor
and
fdivl
outsl
leave
movsb
loop,pt
jb
dec
notb
dec
add
xchg
icebp
ror
mov
arpl
fs
pop
pop
jecxz
imul
mov
pop
enter
loope
mov
stc
outsb
ss
mov
xlat
out
xchg
jge
inc
mov
stc
repnz
cmovno
xor
cmp
nop
cmp
dec
cmpsl
jbe
popa
repnz
subb
sub
adc
mov
clc
loop
pop
repz
aad
pop
fisubs
aad
clc
jae
sbb
shrb
test
xchg
ss
or
ja
cs
push
dec
push
shll
fstl
enter
std
adcl
push
jnp
loope
cmp
xchg
mov
add
mov
push
lods
insb
loopne
cmp
or
out
cmp
xchg
mov
or
mov
pushf
add
mov
js
sub
les
mov
loope
add
add
pop
adc
imul
pop
adc
and
mov
sbb
jns
inc
std
push
dec
adcl
inc
push
pusha
jbe
out
fnstsw
mov
enter
add
inc
pop
daa
push
push
decw
push
push
mov
scas
lret
ds
stos
lds
insl
in
sbb
jns
xor
fptan
or
loope
or
pop
test
enter
cs
lret
push
inc
xchg
jle
cmp
sbb
and
jecxz
jl
outsl
mov
mov
sarl
add
outsb
ret
dec
jp
sub
aaa
lcall
mov
inc
scas
outsl
std
arpl
clc
adcb
and
dec
repz
movsb
sub
mov
mov
fnsave
lods
adc
mov
mov
xchg
arpl
cmc
cmpl
dec
mov
mov
outsl
jnp
adc
or
xchg
cwtl
movb
lea
add
aaa
adc
sub
pop
aaa
mov
jg
xor
mov
cmpsl
cmc
jno
add
xchg
gs
xor
push
inc
imull
out
xor
add
fnsave
fbstp
sbb
pusha
lahf
std
or
nop
push
inc
add
cltd
into
dec
lahf
cmp
lret
aaa
not
frstor
or
in
dec
je
xchg
mov
adc
loope
mov
push
and
sti
pop
in
add
fst
sbbb
push
mov
and
mov
sbb
cmp
data16
mov
xor
fsubr
or
xchg
or
push
jae
add
lock
xchg
into
ljmp
test
jo
sub
mov
fnsave
sbb
out
mov
pcmpgtw
loopne
xchg
sbb
push
bound
in
and
scas
mov
xor
and
lahf
scas
mov
rorl
pop
bswap
jo
cltd
push
in
push
loopne
pop
and
push
pusha
loope
push
push
lods
push
add
test
push
dec
test
cmp
mov
add
or
enter
fnsave
in
out
inc
dec
push
pop
sub
ss
repnz
aam
cmp
leave
in
shlb
xchg
adc
stc
nop
and
push
inc
or
pop
xor
shr
orb
add
pop
cmp
int3
insl
fs
jnp
shl
add
mov
cmpsb
xchg
jne
jne
push
sub
fucomip
ficoms
adc
xchg
sub
pop
mov
add
and
adc
cmp
dec
and
lds
fnstenv
jne
test
repnz
popa
mov
push
sub
out
les
shl
shll
popf
jle
sbb
push
push
xchg
jmp
jnp
xchg
iret
inc
ss
jo
orb
cmp
aam
cmp
inc
cmp
xor
loope
inc
lret
scas
aad
mov
push
mov
mov
fwait
mov
xor
ficompl
jmp
popf
pushf
lret
sub
cmp
and
lahf
sub
shll
add
add
mov
stc
aad
shl
mov
arpl
push
pop
cmp
fdivrl
xchg
sub
cmc
xchg
fildl
shll
les
sub
mov
loope
test
or
pushw
aam
shrb
push
std
pop
mov
insl
je
or
push
inc
push
add
movsl
cmp
or
push
or
ret
mov
jae
pop
sarb
cmc
cmp
mov
and
sub
sub
and
js
jnp
mov
mov
hlt
push
and
mov
lret
testb
outsl
jl
jg
dec
les
shrb
fucomi
int
lret
pop
ljmp
inc
inc
fwait
lret
xchg
or
pop
cmp
test
inc
jo
mov
leave
movsb
mov
rcl
jg
lea
adc
in
inc
mov
fs
jno
lods
scas
add
mov
pop
pop
push
sbb
inc
icebp
mov
add
add
xor
test
sti
leave
cmp
pop
outsl
imul
adc
mov
and
outsb
dec
dec
orb
cmp
inc
xor
test
fidivl
jmp
pop
push
hlt
adc
loop
mov
xchg
lea
and
inc
push
mov
gs
hlt
xor
xorb
fcoms
mov
pop
fsubs
lods
add
movntq
add
loope
inc
jl
jno
jbe
movsl
xchg
fmul
das
test
mov
xor
xor
ss
xchg
dec
inc
iret
dec
and
adcb
loop
movsb
or
xorl
ja
add
outsl
daa
insl
push
push
stos
adc
adc
xchg
add
fcomps
jb
icebp
xchg
or
enter
in
dec
pop
mov
jmp
jle
iret
adc
out
enter
ss
and
cmp
mov
xor
pusha
daa
mov
sahf
adc
or
jmp
push
mov
divl
mov
out
mov
lock
cltd
addr16
aam
and
int3
jecxz
mov
cmp
mov
clc
sbb
add
pop
mov
lea
jge
mov
push
nop
gs
inc
mov
popf
push
std
cmpsb
xchg
and
out
lds
shll
jge
or
test
test
negb
jb
rcr
xchg
ja
cmp
sarb
xchg
mov
mov
mov
xor
xchg
cs
jecxz
jl
hlt
movsl
cmpl
xchg
jle
leave
cmp
in
mov
xchg
inc
pop
push
dec
pop
insb
sbb
xor
sahf
push
arpl
jl
int3
orl
pop
mov
sub
sbb
lods
in
inc
outsl
mov
out
mov
mov
testb
mov
int3
shlb
ficomps
cmp
pop
inc
out
lahf
or
pop
scas
insb
jb
fisubrl
cwtl
arpl
push
leave
pop
sahf
outsb
shlb
inc
mov
jle
addr16
xchg
cs
push
divb
int
push
repz
js
jge
out
das
push
mov
pop
cld
scas
cli
pop
scas
std
aam
repnz
je
mov
cltd
or
sti
dec
fildl
nop
sbb
push
push
xchg
cmp
cmp
mov
mov
loopne
mov
lcall
jnp
inc
push
bound
adc
pop
pushf
mov
xor
cmp
mov
movsl
cmp
fisttpl
out
int3
gs
inc
sub
test
movsl
add
ret
ss
push
add
pop
repnz
ret
je
pop
test
mov
lcall
cwtl
and
ss
mov
nop
daa
mov
add
jnp
movsl
pusha
mov
hlt
ret
jno
dec
jecxz
stos
fisubl
mov
call
leave
jmp
push
and
adc
imul
and
cmp
jne
stc
out
std
xchg
popf
pusha
add
loop
movsb
stos
sbb
repz
adc
jnp
aad
push
lcall
inc
lea
and
mov
out
add
mov
add
enter
iret
xchg
pushf
lea
cmp
dec
jecxz
push
push
pop
adc
dec
lahf
ret
jae
cmc
ficoml
mov
lods
jmp
or
add
and
scas
shrl
test
xor
ret
mov
rcr
lahf
jl
mov
adc
mov
xor
mov
pop
sbb
cs
xchg
dec
pop
jbe,pt
cltd
sbb
push
jg
and
mov
mov
xorb
and
mov
add
lahf
loope
mov
insb
lds
jne
mov
xchg
xchg
cmp
out
lcall
ljmp
lret
add
das
repz
xchg
enter
mov
jo
push
pop
sbb
ljmp
mov
sub
adc
pop
push
push
addr16
add
mov
jae
push
adc
sbb
dec
push
sbb
test
rclb
mov
sti
inc
bound
repz
push
test
outsl
mov
dec
pushf
fsubrs
lahf
sarl
mov
inc
jl
mov
xor
sub
loopne
add
ja
inc
mov
jns
pusha
popf
lea
sub
mov
ret
mov
out
inc
mov
jp
mov
add
mov
shlb
jg
xlat
mov
pop
jl
arpl
cmp
lods
fstpt
into
mov
push
xchg
fwait
aam
adc
push
dec
inc
adc
sbb
repnz
inc
mov
pop
sarb
mov
sub
cmpsb
dec
lcall
subb
lea
inc
fcoms
inc
ret
loopne
loope
fs
iret
lods
dec
loopne
imul
in
add
jle
mov
pop
dec
dec
subl
inc
push
mov
test
sub
aam
push
xor
add
insl
add
daa
fidivrl
addr16
out
enter
lahf
leave
inc
fldenv
loopne
add
lea
dec
push
sub
aad
mov
mov
cmp
stos
scas
dec
mov
push
or
fists
fdiv
addl
mov
pop
ss
js
cmp
loop
in
add
cmp
mov
push
inc
cwtl
lcall
add
aam
repz
in
and
cmpsb
fadd
mov
int3
sbb
mov
jecxz
xor
repnz
js
push
nop
adc
ret
sti
ret
stos
dec
xor
mov
sub
hlt
or
mov
and
push
push
or
mov
inc
or
mov
lahf
inc
xchg
jne
sub
out
ror
dec
jnp
ret
jmp
xchg
cmp
cmp
call
cmp
fists
subl
out
adc
pop
lods
push
testb
mov
pop
push
push
or
rcrb
sbb
fucom
or
es
push
cmpb
loopne
fstl
incl
int
and
notb
jne
and
leave
add
inc
js
sbb
and
rclb
xor
jge
sbb
scas
das
test
push
rcl
std
ret
inc
pop
jns
cld
repz
xlat
daa
xchg
test
inc
call
jb
mov
xchg
movb
mov
pop
inc
lods
add
jg
or
push
stos
jb
rcl
xchg
bound
mov
imul
and
dec
jle
push
push
jae
dec
mov
jne
mov
and
push
not
paddd
add
ret
popa
jp
sbb
into
add
loop
mov
sub
dec
sub
pushf
jb
pop
daa
fdivrl
and
sbb
xor
sub
cmc
lcall
mov
test
add
into
gs
adc
push
repz
adc
mov
popf
push
mov
mov
fwait
xlat
cltd
fdivp
push
lods
pop
cmp
xlat
jp
sub
ret
and
enter
jne
into
mov
mov
xor
adc
xchg
into
mov
jbe
rclb
repnz
dec
xchg
dec
movsb
in
ret
fdivs
in
iret
pushf
add
lcall
mov
mov
and
cmc
mov
nop
fists
negl
push
pop
into
inc
push
xor
inc
mov
sbb
sarb
data16
jne
sub
rclb
xor
sub
adc
jl
daa
add
cmp
xchg
les
daa
dec
insb
scas
push
mov
push
icebp
out
aaa
daa
add
sbb
jge
mov
pop
add
add
xchg
add
sbb
filds
mov
or
not
dec
sub
data16
fidivrs
sbb
es
arpl
or
lret
and
cltd
outsb
cmp
dec
xchg
pop
or
adc
mov
stc
mov
out
pop
notb
leave
push
pop
fwait
inc
fwait
cmpsl
nop
pushf
test
sbb
aad
xlat
in
xor
std
in
fidivrl
adc
dec
scas
sti
mov
xchg
xchg
dec
pop
push
pop
or
fldcw
insl
cmc
jbe
cmp
repnz
popf
mov
js
xchg
and
add
loopne
mov
arpl
fstpt
xchg
les
dec
adcl
outsl
mov
adc
xchg
scas
jo
add
inc
sub
jno
pop
leave
xor
sbb
cld
inc
call
pop
jne
push
dec
les
cltd
pop
in
test
cmovnp
inc
out
cltd
push
pop
mov
fstpt
ja
sbb
or
sub
jl
sbb
mov
jg
nop
and
or
ja
in
out
xchg
inc
cmp
sbb
xlat
sub
daa
push
ret
sbb
sbb
sub
sti
sbb
mov
inc
mov
dec
fcmovne
stc
test
cmp
jmp
sbb
push
xchg
aas
fildll
test
ficoms
sbb
adc
out
fistpll
mov
push
sbb
mov
cmc
loopne
add
mov
jmp
dec
pop
jbe
fnstcw
lods
or
imul
add
mov
and
lods
dec
mov
das
sub
shlb
cld
dec
in
mov
icebp
lret
mov
dec
push
push
fmuls
sub
pop
dec
in
rcl
cmp
jne
cli
mov
sbb
dec
loope
inc
xchg
or
in
js
sbb
rcrb
leave
dec
xor
mov
push
push
push
xlat
inc
pop
push
push
inc
pop
sub
mov
cmp
mov
jne
push
arpl
jecxz
inc
mov
ret
push
test
jo
adc
cltd
lret
mov
add
fisubrs
cmp
shll
int
push
mov
jle
add
mov
xor
ret
xchg
add
jb
shrb
imul
push
xor
xor
inc
les
adc
adc
fldcw
mov
arpl
pop
inc
loopne
push
sub
fistps
je
mov
dec
add
and
cs
mov
out
aam
arpl
dec
jg
mov
aam
test
fisubrl
mov
jns
imul
sub
inc
mov
int3
inc
outsb
stos
aam
push
xor
and
loope
inc
xchg
cmpsl
and
or
movsb
rorl
paddd
pop
jnp
fnsave
test
movsl
mov
sbb
cli
cmpsb
outsl
push
ror
push
mov
mov
sahf
andl
add
in
mov
mov
les
xchg
xor
xchg
in
cmp
test
icebp
sbb
sarb
fidivrl
add
testb
mov
inc
das
jb
mov
adc
cmp
mov
pushf
fisttps
fsubrl
jecxz
add
inc
dec
adc
push
orl
pop
jmp
cmp
push
sbb
pop
cmp
out
movsl
test
jle
mov
and
jg
js
and
test
lret
inc
adc
mov
jle
js
sub
jno
test
ret
cmc
outsl
jnp
cli
sti
sbb
jnp
cli
mov
mov
cmp
add
add
pop
mov
ljmp
mov
addl
adc
sbb
ljmp
icebp
movsl
pop
cmp
out
and
cmp
xor
fsubrl
sbb
xchg
fisttpll
xor
cli
loop
lcall
sbb
and
rorl
repnz
or
call
pop
xchg
add
fs
lea
xchg
lods
div
out
xor
call
push
inc
sbb
mov
loop
cmp
outsl
inc
jmp
rolb
daa
pusha
adc
adc
lods
mov
push
mov
mov
jnp
jle
cltd
xchg
mov
xchg
fisubrs
mov
cmpsl
push
sbb
mov
and
addb
push
xchg
xchg
or
dec
lahf
call
mov
in
stos
clc
adc
push
jmp
mov
add
xchg
add
inc
push
shll
push
es
lret
sbb
pop
lods
mov
cltd
dec
mov
scas
adc
jns
or
sbb
aas
xor
loope
xor
loope
insb
test
pop
push
push
testb
in
and
fwait
inc
lret
enter
add
xchg
push
or
pusha
mov
adc
sarb
sahf
loop
jl
push
add
xor
inc
aas
iret
testl
fs
xchg
and
leave
jo
out
xor
cmp
mov
jle
int3
orb
or
ds
mov
std
or
insl
add
imul
mov
pop
and
jmp
sub
jmp
rolb
or
push
sub
xor
adc
mov
push
in
and
stos
and
shlb
add
das
xor
in
inc
adc
inc
popl
pop
aas
push
mov
cmp
adc
shlb
push
lds
mov
pop
jl
pop
sbb
into
sub
mov
jmp
sbb
fdivs
fistl
int3
sub
clc
adcb
sbb
jp
pop
mov
fisttpll
ss
mov
hlt
fstl
and
jnp
adc
xchg
pop
jo
jno
push
xor
push
aam
xor
lahf
ja
fwait
dec
mov
in
outsb
imul
dec
lahf
aaa
dec
jecxz
mov
jae
incl
pop
fcom
loope
pop
mov
push
and
dec
insb
mov
movsb
int3
iret
add
test
push
mov
inc
pop
in
sub
xor
pop
test
or
enter
jle
cli
inc
pop
fcompl
and
into
cmp
cmp
inc
mov
rorb
adc
or
pop
and
dec
mov
jo
les
add
rcrl
test
hlt
xchg
lock
inc
add
or
xlat
test
xchg
cs
sbb
jns
sahf
out
lcall
dec
mov
lret
cwtl
pop
dec
sbb
adc
lahf
lcall
popa
push
andb
or
dec
insl
test
test
jno
dec
data16
dec
mov
sbb
ss
dec
lods
cmc
int3
rorl
dec
into
fldl
stos
jo
dec
cli
fldcw
loopne
dec
xchg
adc
add
xchg
add
pop
add
ja
fmuls
pop
xorb
pop
jg
lret
dec
mov
es
xorl
in
pusha
ret
lcall
js
scas
pop
sahf
data16
es
ficomps
xor
ja
lods
sub
and
adc
sub
sbb
cmp
dec
or
lds
cmp
sti
mov
cmp
fldl
stos
out
jg
orl
rcl
pop
rcll
inc
ds
pop
push
loope
call
popf
add
push
pop
in
or
daa
sarb
cli
mov
mov
xchg
adc
and
lds
mov
nop
inc
ficompl
sbb
dec
sbb
xchg
inc
stos
test
rcll
mov
cmp
xchg
arpl
inc
inc
fcmovnb
push
mov
push
push
add
into
xchg
pop
push
imul
fnstsw
psrad
aaa
sahf
add
mov
add
sahf
sti
cmp
aad
addb
in
mov
icebp
insl
cmp
push
pop
outsl
ljmp
int
outsl
pop
adc
inc
loop
por
cltd
sub
or
test
imul
movsl
test
cmpl
aas
test
je
mov
add
fldcw
xchg
mov
shr
push
xchg
inc
scas
data16
cltd
incl
dec
pop
add
inc
addr16
mov
out
fsubs
rolb
push
pop
push
dec
call
pop
and
mov
pop
ret
andb
ljmp
mov
ljmp
sahf
lret
xchg
push
sub
call
test
cmp
cmp
clc
outsl
test
or
fmull
sbb
lock
rorb
in
pop
sbb
fucom
mov
or
push
jo
cltd
movsl
stos
mov
int
adc
pop
or
loopne
sbb
ds
sarw
icebp
jne
add
push
cmp
xchg
jecxz
les
or
pmulhw
pop
push
sbb
sbb
jne
sahf
xchg
test
adc
testb
in
bound
add
push
dec
pop
xchg
js
mov
xchg
leave
add
xchg
add
rclb
mov
pop
js
imul
xchg
imul
dec
sub
xor
idivb
cli
maxps
push
dec
sub
clc
inc
scas
ret
inc
rolb
shlb
sbb
pop
inc
lds
and
rclb
outsl
adc
pop
and
das
ds
test
repz
mov
bound
xchg
push
test
test
jecxz
test
sahf
or
jmp
pop
xor
fistl
jp
gs
cmp
popa
insb
pop
es
leave
pop
inc
and
in
push
push
int
jne
xor
cld
lds
or
out
test
aaa
push
sub
sahf
sub
mov
or
mov
add
pop
std
add
xchg
insb
push
xchg
cmc
outsl
cmp
jae
mov
je
aas
outsb
dec
into
in
ljmp
in
dec
stc
jp
ljmp
cs
add
add
mov
xchg
push
push
mov
adc
ljmp
leave
inc
jb
bound
and
fsubl
outsl
mov
cmp
or
popa
dec
sarb
xchg
cmpsl
jle
pop
js
cmp
cltd
mov
mov
mov
mov
or
pushf
hlt
out
jbe
mov
into
add
sbb
fstl
std
in
loopne
jne
scas
add
addl
mov
mov
and
outsl
pop
arpl
dec
jno
mov
insl
in
fs
out
rcll
pop
scas
xchg
aad
cli
in
gs
cmp
into
and
cwtl
inc
rorb
push
cmp
fcmovu
mov
ja
push
lret
cmp
cmp
sub
sbb
cmp
xchg
mov
push
insb
sub
adc
outsl
pusha
in
out
loopne
pusha
outsl
jb
sbb
and
push
mov
stc
push
xchg
es
out
or
add
out
cltd
fcmovb
enter
push
jno
mov
mov
cli
pop
cmc
jge
cld
int3
decl
adc
popa
addr16
into
dec
dec
cmc
andb
repnz
mov
les
sbb
and
or
dec
mov
jo
lea
add
xchg
add
adc
aaa
mov
mov
loope
popa
outsl
outsb
push
sarb
inc
popa
jmp
loopne
loop
or
jns
ret
cmpsb
dec
sbb
mov
nop
sbb
mov
xor
pop
filds
adc
mov
mov
fcmovnb
add
call
xor
jle
mov
cmp
mov
dec
aas
mov
and
jae
stc
in
lds
paddusw
mov
fimuls
push
in
xor
ss
lcall
outsb
push
stos
test
addr16
add
fcomi
mov
jg
cwtl
inc
bound
mov
das
push
fists
push
mov
sbb
cli
inc
pop
add
mov
into
notb
notb
sub
negl
dec
or
and
cmpsb
and
mov
push
call
mov
popa
mov
xchg
cmp
mov
test
adc
sti
popl
fs
movsl
shl
loope
cmp
les
int
jne
fisttps
shr
dec
out
mov
rcrb
sbb
sbb
lcall
movsl
adc
push
or
sahf
repz
inc
cmp
xorl
testl
xor
jbe
add
or
into
pop
es
mov
pop
dec
lret
push
cmpsb
negl
mov
test
jb
push
mov
cmc
push
call
popl
push
mov
es
repz
mov
rcll
xor
dec
mov
out
lods
out
jbe
mov
add
sub
add
sub
push
add
pop
inc
inc
dec
out
lea
mov
popf
push
rcrl
pop
idivb
cmc
or
push
or
or
and
iret
outsb
mov
add
sarb
push
inc
adc
lods
jbe
rcrb
add
dec
or
pop
enter
pop
pop
sarl
mov
adc
ret
lahf
test
enter
scas
cltd
xlat
sub
inc
push
mov
jg
sub
lods
push
fdivrs
out
fwait
and
addr16
cmp
push
jg
sub
mov
repnz
daa
add
lods
pop
loopne
adc
mov
and
mov
dec
repz
fldt
sbb
cmpb
add
xchg
add
and
enter
incb
xchg
push
stos
loope
pop
fsubs
inc
cmc
cwtl
or
stos
outsb
in
leave
out
popf
xor
push
mov
and
test
jo
imul
mov
add
sti
outsl
lods
out
jne
and
in
daa
mov
cltd
mov
das
inc
pop
push
icebp
jo
cltd
add
jbe
xor
cmp
adc
mov
fdivp
adc
push
bound
push
in
adc
ja
push
sbb
add
aas
inc
das
inc
or
inc
push
xor
movsb
in
or
inc
mov
mov
jnp
or
mov
cld
test
scas
xchg
rorb
jb
inc
repnz
mov
imul
gs
jbe
add
mov
lds
lods
aas
in
or
pusha
rcll
lea
fdivr
fstl
loopne
out
or
mov
dec
sub
into
xchg
mov
mov
push
out
out
std
jnp
or
pop
inc
jbe
add
lea
bound
pop
push
xorb
jmp
ss
lret
movb
imul
mov
cmp
fs
adc
popa
sub
sarb
pop
in
aad
ds
fxch
data16
adc
dec
adc
jge
mov
xor
cmpsl
jb
mov
pusha
push
pop
push
test
pop
int
aaa
xchg
outsl
mov
add
fldcw
cmp
sbb
daa
inc
dec
adc
sub
pop
push
cmp
push
imul
lret
fistl
inc
imul
mov
xchg
loopne
roll
shr
pushl
xchg
mov
ja
and
jnp
jbe
popl
fbld
sub
stos
repnz
iret
mov
imul
adc
mov
xchg
xlat
bound
div
or
sub
push
ds
xor
mov
add
bound
push
jge
test
jle
in
lahf
push
dec
sub
inc
cld
jae
insb
stos
dec
fdiv
jo,pt
out
lock
or
xchg
fidivs
pop
in
movsl
cmp
cmpsb
or
rorb
mov
xor
je
inc
js
sub
addb
pop
pop
popf
cmc
dec
roll
lea
dec
add
cmc
rclb
out
xor
jmp
inc
pop
pop
mov
inc
mov
xchg
add
das
std
add
xchg
xchg
shll
adc
xlat
mov
xor
shll
cmpsl
cmp
inc
test
iret
iret
call
out
ret
call
int
and
ror
stos
mov
mov
and
std
xchg
lods
push
faddl
repnz
mov
pop
and
mov
pop
lahf
in
push
clc
mov
pop
inc
pop
out
or
jle
test
sbbb
inc
mov
out
loopne,pt
pop
adc
insw
xchg
pop
fsubr
and
sbb
clc
mov
lods
sbb
daa
xchg
nop
dec
loop
sbb
insl
jnp
jo
inc
add
or
fistpl
jns
fwait
sub
js
push
dec
aaa
jb
inc
xchg
add
push
jne
repz
ss
loope
sbb
xchg
icebp
dec
jmp
popf
rclb
push
dec
repz
cmpsl
sti
mov
dec
pop
pop
mov
mov
mov
sahf
cmc
loope
dec
idivb
sbb
addb
sarl
jl
rolb
adc
xchg
push
xchg
fucomip
cmp
sub
xchg
pop
jle
push
cmc
movsl
push
test
sbb
pop
pop
std
pop
inc
mov
stos
cmovs
add
lods
les
lcall
aas
mov
jge
sub
add
nop
and
call
ja
mov
mov
xor
add
js
test
inc
cmpsb
cmpsl
mov
mov
aas
jae
xlat
and
sub
push
arpl
rcrb
sub
xor
mov
popf
mov
test
inc
nop
fldt
xor
enter
mov
lea
mov
std
movsb
pop
push
psrlw
xchg
sub
fsubrs
pop
jle
inc
jo
mov
dec
push
int3
jno
push
sarl
xchg
xchg
jmp
pop
mov
pop
orb
pop
dec
adc
xchg
or
pop
inc
push
mov
ja
dec
pop
iret
pop
lds
xchg
xchg
sbb
cmp
push
jns
push
in
jo
aam
cld
adcl
fcompl
lea
sbb
stc
lods
bound
aam
test
iret
add
adc
mov
inc
pop
xchg
rolb
dec
idivl
fldl
roll
add
cmp
enter
pop
sarl
ret
in
add
outsb
sub
xchg
mov
or
repz
jg
pop
xor
daa
or
or
repnz
and
and
sbbl
lea
push
jge
sti
cli
es
xchg
jg
cmp
out
sahf
inc
xor
mov
sbb
push
icebp
nop
outsb
lahf
das
pop
mov
cmp
leave
je
pusha
filds
pop
push
cltd
decb
out
fisubl
inc
mov
push
push
pop
and
mov
into
or
xlat
fcoml
push
mov
inc
lret
jnp
push
test
je
movsl
pop
mov
rorl
xchg
xor
dec
sub
push
lea
mov
shlb
jb
mov
add
adcb
rclb
out
inc
clc
cmpb
xchg
xchg
sub
sbb
mov
sbb
jg
pop
mov
fistl
dec
sub
in
data16
fwait
js
addr16
leave
jl
outsb
out
sbb
inc
aam
imul
fdivl
push
addl
or
scas
or
test
cli
cmp
mulb
jge
sti
mov
js
ja
push
push
test
jecxz
fnstenv
inc
add
pop
or
icebp
sub
aam
mov
pop
std
cmp
mov
scas
leave
les
jne
or
mov
lret
xor
aad
and
mov
xor
or
lcall
jo
pop
pushf
sbb
and
xor
ja
mov
cmpsl
or
xlat
out
or
mov
inc
add
fwait
mov
xchg
or
fwait
std
cmpsl
and
mov
test
adc
cmc
in
loop
jg
repz
push
andb
insl
data16
mov
mov
rcrb
pop
push
xor
in
push
dec
sarb
and
push
dec
pop
fistl
push
inc
or
pop
pusha
aas
push
mov
sub
movsl
ret
mov
mov
jl
mov
sub
cmp
or
aas
inc
and
adc
hlt
mov
xorl
pop
inc
and
or
pop
movsb
enter
cmp
mov
call
mov
adc
sub
add
pop
pop
jle
dec
adc
stos
fldenv
xor
lcall
test
lea
repz
mov
lahf
leave
dec
pop
popf
stos
sbb
divb
lahf
jge
pop
sub
dec
int3
pop
rorb
pusha
out
das
adcl
xchg
in
push
adc
call
sti
jb
rcrl
sub
pop
enter
push
aam
inc
fildll
push
inc
lret
xchg
adc
jae
out
lea
test
pop
stc
or
stos
scas
cmpsb
cmp
adc
dec
faddl
dec
lahf
arpl
pop
shll
stc
test
mov
rclb
popa
dec
outsb
int
add
push
scas
dec
test
adc
add
lea
out
testl
imul
rcr
popa
mov
out
fdivs
or
sub
imul
or
mov
mov
addr16
dec
mov
or
sub
adc
push
clc
sub
dec
push
ficoml
mov
outsb
repz
mov
inc
xor
and
add
scas
scas
push
mov
sub
push
xor
ss
fwait
jo
xor
pop
mov
shr
cvttps2pi
push
jno
test
push
mov
dec
lcall
cmp
mov
bound
pusha
or
bound
pop
mov
push
xor
stos
jg
lock
mov
mov
scas
addr16
lret
imul
or
cld
ljmp
xchg
jp
mov
push
test
inc
cmp
fwait
pop
inc
sbb
flds
adc
and
inc
adc
cmpsl
rclb
pushl
std
cmc
aad
lahf
notb
sub
and
dec
out
mov
push
lods
shlb
cmp
sub
xchg
ja
adc
push
xchg
int3
inc
push
lret
mov
mov
dec
jne
hlt
insl
lods
mov
and
mov
push
adc
push
dec
xchg
push
dec
mov
mov
out
rolb
out
cmp
fwait
and
mov
fiaddl
mov
jge
mov
je
add
fmull
cmpsb
or
outsl
add
icebp
aas
or
xlat
xchg
jnp
sahf
inc
jle
add
ficompl
mov
out
movsl
ljmp
add
mov
cmp
xor
imul
jns
push
sub
mov
sahf
fbld
in
jle
push
push
jmp
mov
or
in
rep
sub
cwtl
bound
dec
mov
shrb
or
dec
test
push
pop
dec
into
xlat
and
insl
fwait
outsl
ret
mov
lret
repz
pop
adc
cmc
inc
sbb
rcl
dec
bound
pop
lret
dec
lret
scas
cwtl
push
addr16
sub
mov
sarl
pushl
repz
xor
xchg
inc
bound
cmpsb
fwait
add
orb
mov
loopne
js
lods
ja
mov
scas
add
fsubl
xor
cmpsb
sub
testb
push
push
or
sti
and
rclb
clc
divb
cs
in
pop
push
xchg
mov
stc
addl
add
dec
imul
jb
mov
sbb
pop
mulb
mov
cld
inc
scas
imul
adcl
pop
adc
sub
xchg
stc
sub
into
ret
test
adcb
js
in
into
xchg
pushf
loope
pushf
jge,pt
mov
and
cmp
xor
iret
pusha
cltd
insb
testb
inc
and
divb
mov
xchg
cltd
jnp
cmp
jg
scas
pushf
int
inc
fs
out
dec
xchg
pusha
push
cmp
cmp
xchg
clc
imul
aam
mov
pop
imul
jae
mov
push
cld
pusha
and
loop
aad
and
shrl
dec
ror
lds
adc
gs
fsubrs
add
jle
xchg
in
sbb
aas
mov
mov
pusha
mov
jg
dec
in
sahf
fstpt
sbb
mov
mov
cmp
adc
cltd
mov
dec
insb
and
fmulp
pop
cld
cs
stos
shll
sbb
mov
testl
addb
add
add
lea
test
inc
addl
lods
jle
icebp
jb
and
loope
adc
or
fs
imul
dec
and
jg
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
dec
fildl
add
cmp
insb
mov
push
or
nop
jle,pn
xchg
lock
sahf
xor
hlt
jl
sbb
pop
jb
push
push
mov
imul
stos
enter
xor
nop
std
mov
lds
dec
adc
sbb
mov
lods
sbb
or
xchg
je
adc
mov
fs
loop
insb
and
inc
das
xor
mov
xor
or
inc
push
ficomps
push
inc
inc
mov
mov
ret
sti
js
pop
dec
loope
out
imull
mov
call
dec
xchg
lret
stos
icebp
mov
stos
das
add
jno
add
push
popf
movsb
daa
jae
sbb
pushf
popf
pop
mov
xlat
aad
js,pt
inc
jb
xchg
cld
lret
pop
cmp
loopne
cmpb
ss
sbb
sbb
pop
mov
out
adc
sub
add
xor
test
sbb
lret
mov
cltd
pop
mov
sub
leave
out
cmpsl
lods
jp
mov
sub
or
fldl
or
lret
outsl
add
imul
xor
test
jne
test
je
add
stos
ljmp
ret
xor
add
iret
clc
mov
test
jb
add
xor
add
xchg
das
insl
loop
pop
sti
dec
fs
fldt
and
lahf
in
fadds
or
outsl
adc
mov
pop
fwait
aaa
cwtl
jo
repz
jp
mov
xchg
dec
push
pop
icebp
js
push
ds
fdiv
out
push
mov
mov
les
xlat
dec
push
std
mov
and
mov
scas
jecxz
lock
fldcw
test
adc
inc
push
jg
jb
pop
jo
mov
sbb
xlat
mov
out
or
push
mov
push
pushf
mov
outsl
jmp
pop
cmc
fs
mov
push
jnp
push
push
test
xchg
mov
cmp
lahf
mov
xlat
mov
outsb
fucomip
mov
mov
stos
adc
adc
les
mov
dec
push
pop
arpl
and
mov
push
mov
mov
jmp
in
aas
mov
pushf
in
mov
cmpsl
xor
and
test
xchg
mov
adc
cmp
js
stos
int3
and
nop
jg
mov
xlat
push
xlat
ja
out
ss
mov
iret
fldl
add
lret
xorl
cwtl
push
push
movsb
cld
push
aad
dec
into
in
test
mov
pop
xchg
push
inc
adc
or
lds
dec
lcall
add
addl
insb
inc
dec
sbb
test
mov
sbb
fstpt
mov
ret
xor
dec
cmp
cmp
in
movsl
fs
out
dec
leave
cmp
pop
div
sub
enter
fiaddl
pop
lret
and
popf
dec
ret
xor
or
lds
push
mov
sti
loop
mov
and
mov
popa
xor
adc
xor
hlt
mov
imul
popa
lahf
push
xchg
cmovle
scas
stc
out
pop
push
mov
stc
out
lds
cmp
cmp
testl
and
dec
adc
fwait
ja
int
out
mov
rorb
cmp
decl
shrb
mov
popa
cmp
int
cmc
outsl
out
clc
add
sbb
sub
xchg
insl
lods
in
in
xchg
xor
ljmp
xchg
jge
stos
lcall
jge
push
int
inc
inc
mov
pop
xchg
scas
scas
cmp
jb
sbb
jmp
push
mov
movsl
ss
insb
outsl
mov
xchg
xor
int3
sub
lahf
jno
jnp
pop
sbb
lcall
mov
mov
mov
test
ja
xor
jecxz
sbb
lret
mov
loope
imul
cmpsl
imul
xchg
xor
fdivl
in
dec
nop
scas
push
dec
sarb
outsb
fmull
ljmp
mov
idiv
test
push
xchg
filds
mov
or
dec
pushf
jecxz
in
icebp
into
adc
repnz
in
pop
and
mov
repz
jle
jmp
lods
loopne
nop
loop
out
popf
push
xor
push
repz
popa
idivb
mov
cltd
pop
aam
pop
xchg
iret
push
subl
xor
out
leave
outsb
sub
sub
jno
push
jnp
sub
sahf
out
pop
js
aam
std
mov
loop
dec
and
int
mov
add
inc
dec
jle
test
out
jno
inc
sub
adc
in
stos
push
test
rcll
pushl
adc
push
loopne
add
cmp
aam
inc
adc
movsl
out
mov
or
not
jnp
mov
adc
icebp
pop
mov
lahf
cltd
inc
inc
push
sahf
lods
pop
add
xor
rorl
rcr
sbb
insl
ds
dec
movsb
push
outsb
add
fidivrs
inc
lock
das
and
and
and
inc
and
test
cmp
xchg
jmp
cmp
jg
outsl
scas
imul
jge
jp
push
inc
sbb
or
pop
xor
movl
sub
push
hlt
gs
jns
xchg
aam
jg
mov
cmpps
in
sbb
inc
mov
mov
xor
push
pusha
out
and
in
push
in
inc
in
fsubs
fs
xor
cmp
dec
fwait
ret
mov
add
xchg
call
ljmp
mov
mov
jo
inc
xlat
sbb
add
lea
mov
push
arpl
pop
popl
mov
shlb
rcll
xor
push
and
into
jne
dec
data16
mov
into
rcll
arpl
add
loop
xchg
adc
pop
cmc
enter
add
mov
jecxz
rolb
js
add
inc
push
xchg
cli
mov
add
mov
and
daa
jbe
xor
add
fisttpl
adc
fmul
dec
cmp
mov
or
add
push
cmp
fwait
push
popa
mov
xchg
int3
out
or
sbb
addb
imulb
mov
std
lea
pop
rcrl
pop
dec
push
cltd
rep
shll
sbb
xor
fdivrs
lret
xchg
dec
scas
jmp
xchg
je,pn
and
jnp,pt
stc
mov
add
pop
adc
aaa
sbb
outsl
mov
sub
dec
pusha
outsb
dec
sub
dec
std
jne
cmp
mov
lret
orb
dec
lcall
mov
mov
jmp
lret
outsl
cmc
repnz
cmpsl
dec
jecxz
daa
jae
fidivrl
sar
aas
or
repnz
mov
push
xor
push
test
sarb
cmp
inc
mov
xor
leave
out
jnp
mov
iret
negb
out
lods
push
cs
add
xchg
add
ja
loopne
mov
cmp
pop
lret
jae
popf
xchg
repnz
test
jno
inc
rcl
aaa
pop
lods
pusha
stos
mov
aam
sub
notb
cltd
in
dec
testl
sbb
jae
lcall
out
das
pop
outsl
enter
stos
jno
lods
dec
pop
mov
mov
mov
mov
or
pop
sbb
push
pop
cmpb
adcb
mov
sbb
ret
xchg
and
dec
pop
pop
std
into
mov
push
pop
stos
push
frstor
pushf
sub
mov
enter
fsub
pop
in
lcall
jno
sub
lds
les
or
xchg
into
pop
sahf
pop
arpl
xchg
jecxz
repz
xlat
xchg
into
cmp
cmp
int3
cmp
jmp
pop
xchg
pop
pushf
lock
std
mov
dec
mov
mov
and
aad
call
rol
mov
mov
mov
mov
pop
popa
loope
pusha
jnp
xchg
or
mov
xchg
sbb
adc
adcl
les
lods
bound
cmp
sub
or
dec
push
cmc
sbb
mov
arpl
and
pop
jae
lret
cwtl
push
adc
pop
pop
mov
pop
ljmp
mov
cmpsb
mov
cmc
pop
jno
dec
xor
mov
bound
adc
inc
inc
lret
in
popf
cmp
sahf
dec
lahf
lret
push
cmpsb
mov
sarb
dec
js
inc
loopnew
xchg
cmp
mov
sub
mov
and
scas
pop
aas
movb
ljmp
xchg
insl
popf
cmp
pop
sub
push
jle
jno
pusha
mov
lods
mov
call
jge
insb
into
aaa
pop
loop
es
or
fistps
dec
xchg
roll
lahf
cmc
or
mov
push
outsl
pop
mov
js
fdivrl
aad
bound
and
mov
bound
and
mov
inc
insb
xlat
fwait
pop
fistl
jp
inc
mov
lret
out
or
rol
adc
arpl
push
xor
mov
aam
xchg
mov
pushf
jecxz
sbb
cmpsb
std
push
adc
stos
adc
mov
push
outsl
push
jnp
fisubs
mov
fs
add
xchg
jg
or
scas
mov
fdivrp
ret
push
fs
int
pop
xor
push
js
xor
test
cs
mov
out
in
loope
fstpl
lds
jo
call
dec
sub
movsl
and
sub
add
push
push
sub
bnd
xlat
repnz
mov
popa
cs
movsb
adc
shlb
add
xchg
mov
lods
or
push
mov
mov
lcall
cli
test
repz
jmp
lods
mov
xchg
js
cmp
mov
clc
daa
stos
gs
std
fimuls
push
and
shl
sbb
push
jns
push
add
ret
loope
lea
fs
test
int
push
mov
xor
or
fildll
dec
mov
adc
sbb
sub
push
daa
mov
lea
scas
cli
xor
or
lods
add
das
jnp
aad
call
pop
dec
mov
mov
push
shrl
jg
fldlg2
nop
orl
push
incl
repnz
and
xchg
iret
rcll
stos
cld
into
idiv
sub
mov
cmp
mov
ljmp
sbb
or
jne
cmp
and
icebp
sub
aas
aas
int3
bound
in
and
aaa
lods
add
xor
lock
sbb
mov
cmp
push
add
cmc
ret
aam
jmp
add
add
sub
lcall
hlt
push
imul
jb
and
decl
repnz
inc
sub
adc
movsl
mov
sub
fwait
sti
rcll
cmp
aaa
lahf
add
or
imul
or
sbb
sti
mov
cltd
or
outsb
scas
hlt
ret
mov
adc
and
mov
mov
mov
push
ret
push
inc
cmpsb
in
test
scas
iret
ret
mov
dec
pusha
add
test
les
mov
daa
pop
add
clc
imul
dec
xor
shlb
sbb
xchg
out
dec
mov
sarl
nop
add
ljmp
add
cli
orb
sbb
fstpt
enter
mov
push
outsb
jo
mov
add
loop
pop
ret
je
fistpl
repz
inc
ret
inc
jge
scas
ficoml
jbe
fwait
out
in
test
fstpt
mov
xor
cmp
cmp
cmp
cmp
loope
ret
cmp
mov
or
out
dec
dec
xor
test
xor
adc
dec
jecxz,pt
cli
push
or
push
cmp
mov
out
mov
les
dec
xchg
cmp
out
stos
arpl
outsb
je
pop
xorl
xchg
popa
and
dec
xchg
ret
dec
test
pop
mov
pop
sub
mov
enter
cwtl
jge
dec
mov
adc
mov
fnsetpm(287
jmp
pop
push
or
jne
dec
mov
test
push
fisubrs
dec
icebp
lods
inc
aad
mov
pop
jae,pt
adc
in
add
and
sbb
call
mov
pushf
in
lret
jecxz
cld
iret
mov
fldenv
mov
pop
cmp
mov
mov
jb
mov
mov
add
mov
scas
sbb
ret
int3
mov
mov
xchg
pop
xchg
dec
push
sub
push
movsb
add
jg
inc
pop
cmp
or
push
rcrb
addl
test
mov
out
or
mov
daa
sbb
ret
cli
fisttpl
add
fsub
mov
dec
enter
repnz
divl
movsb
pop
fwait
popa
pop
andb
pushf
daa
out
ret
fdivrp
bound
leave
mov
sub
jbe
xor
cli
add
sti
sbb
xchg
lret
mov
push
leave
stos
inc
ret
adc
imul
cmpb
dec
pop
dec
imul
and
push
adc
inc
or
inc
movsb
fldcw
imul
sub
cmp
push
push
mov
rorl
jmp
mov
test
dec
js
in
mov
lcall
push
fldl
loope
xor
and
aas
les
mov
and
mov
cmc
aaa
push
test
outsl
jg
jne
cmpsb
pop
mov
add
test
sub
es
fwait
das
pop
adc
stos
mov
cmp
hlt
mov
popa
mov
faddl
jo
jns
sbb
jge
int3
outsb
xchg
sbb
ljmp
jge
lock
dec
mov
mov
xlat
add
shlb
mov
shll
xchg
pop
test
sub
pop
jle
inc
add
repnz
and
ljmp
leave
aaa
cmc
sub
cmp
stos
push
pop
xor
jno
mov
jge
stos
mov
mov
pop
inc
mov
mov
cmp
pushf
mov
xor
or
cld
jl
lock
cmpsl
fisubs
ret
out
call
jl
js
lods
and
cmp
in
pusha
outsl
lret
mov
rorl
push
mov
push
cmp
pop
icebp
cmp
ja
enter
xchg
cmp
sbb
and
pop
sub
sbb
mov
lock
jno
pop
mov
push
xchg
jge
test
mov
popl
add
imul
adc
push
and
pop
mov
pop
ss
pop
inc
push
ja
push
xchg
lret
cmp
xchg
cmc
sub
xchg
sub
mov
aam
add
and
lret
ja
fistps
inc
push
xchg
and
andl
das
mov
mov
std
mov
mov
cmp
mov
popa
sbb
sbb
lock
clc
sbb
jno
push
lea
js
test
out
pop
inc
ret
jge
dec
jno
je
lret
xchg
andb
pop
ror
int
pop
mov
add
gs
jbe
jle
arpl
rolb
dec
jo
add
addr16
out
sbb
icebp
and
cmp
lret
popa
xchg
pop
inc
aam
push
jge
dec
push
shrb
fs
fadd
mov
je
subb
inc
jbe
clc
xlat
mov
mov
mov
or
and
mov
mov
pop
xor
shr
jl
test
adc
inc
icebp
in
push
clc
repz
mov
lret
cmp
jae
and
mov
and
hlt
iret
loopne
and
es
stos
loope
int
sbb
pop
cmp
ds
movsb
loopne
cmc
std
ss
jge
iret
add
roll
pop
sub
dec
stc
in
add
xchg
add
add
or
push
jne
in
or
pop
jge
lret
push
fnstenv
sbb
jecxz
das
xchg
inc
xchg
lods
push
sub
test
jae
jp
out
xlat
add
dec
push
enter
dec
inc
cmp
mov
test
je
cld
xor
ja
add
aas
mov
mov
enter
mov
andl
add
movsb
int3
jmp
lahf
pop
sbb
dec
out
fidivrs
insb
in
pop
adc
jl
xchg
xchg
loope
lahf
cmpsl
add
ret
rorb
out
and
and
mov
sbb
mov
roll
in
sar
je
leave
jmp
push
aaa
sarb
outsl
jmp
lcall
iret
sti
loope
ret
cmp
pop
sbb
jle
sbb
cwtl
push
sub
in
push
aad
mov
gs
lods
jae
bound
xlat
fs
xchg
mov
int3
dec
in
cwtl
dec
and
outsl
aaa
add
push
and
cmpsl
jp
and
mulb
cs
mov
jne
in
ss
mov
mov
sbb
dec
nop
fisubrs
and
cli
ljmp
mul
mov
and
and
jmp
leave
insb
xchg
or
pop
xchg
push
mov
add
adcb
push
adc
adc
cli
ljmp
xor
cli
scas
mov
xchg
inc
mov
scas
xchg
sbb
repnz
push
xor
push
outsb
and
xchg
or
add
pop
sbb
mov
scas
mov
iret
stos
pop
pop
cmp
and
int
testb
lahf
call
dec
repnz
ja
jo
loopne
adc
sub
sub
out
jge
inc
and
and
xor
mov
test
aaa
mov
lds
push
outsb
jmp
jns
push
push
add
jae
lods
pop
mov
push
sub
and
xor
inc
sbb
fcomi
fcompl
enter
sbb
imul
or
and
divl
cmpb
pop
sbb
iret
cmp
bound
std
stos
jnp
je
add
daa
pushf
cli
mov
scas
aad
pop
push
xchg
mov
out
add
xchg
add
aam
mov
bnd
mov
and
adc
xor
mov
loop
adc
test
xchg
std
int
shrb
sub
mov
shl
es
add
sub
xchg
push
xchg
push
xor
popf
mov
shlb
xor
les
push
data16
mov
xchg
repz
ljmp
shlb
pop
push
loope
or
fdivrs
in
sub
xor
push
fcoml
xchg
xor
ljmp
mov
test
pop
xor
insb
arpl
outsl
mov
rcrl
jb
data16
movntq
out
lahf
xchg
xor
imul
add
pop
hlt
dec
sbb
sbb
in
push
mov
lcall
rcll
es
scas
lods
stos
popa
mov
shrb
xchg
clc
mov
inc
pop
pop
mov
or
lret
cmp
push
sbb
dec
mov
movsl
cli
mov
push
or
mov
pop
inc
add
aaa
fs
cmc
mov
sub
repz
or
in
mov
push
icebp
xlat
pop
add
mov
fisttps
lea
ror
scas
outsl
jne
js
cmpsb
pop
sbb
repnz
mov
movq
cmovb
xchg
andb
lods
cld
mov
mov
lock
imul
push
das
adc
cmpsl
or
div
push
dec
mov
subl
idiv
cmp
inc
std
mov
dec
pusha
and
push
fisttpll
sub
scas
psubsb
rolb
popa
jp
stos
outsl
arpl
pushf
aad
xchg
imul
dec
aad
out
jg
jno
push
xor
jg
sub
or
jne
xchg
push
jp
jnp
movb
pop
dec
mov
jne
cs
ds
data16
xchg
out
bnd
or
and
mov
mov
cld
adc
out
push
cltd
pop
in
sub
test
mov
adc
mov
cmc
adc
push
clc
push
or
xor
inc
cwtl
xor
push
pop
insb
jae
and
sti
sbb
pushf
in
pushf
pushf
push
addr16
and
fisubl
mov
mov
pop
repnz
xchg
add
cmp
ret
into
cmp
ss
int3
in
sbb
and
ret
adc
cli
int3
mov
arpl
out
jg
data16
lods
lea
mov
adc
jb
outsl
andl
mov
das
nop
std
popa
mov
push
jg
rep
js
pusha
mov
shl
outsb
outsl
mov
pop
xchg
mov
mov
outsb
outsl
mov
add
xchg
in
pushf
enter
mov
leave
or
and
xor
xor
iret
cmp
xor
cmp
dec
leave
stc
xor
and
jmp
orb
les
outsb
cmpsb
adc
or
jp
and
data16
add
and
loopne
ror
pop
addl
sbb
mulb
xor
mov
adc
sub
add
ds
xor
push
dec
mov
js
cmp
rcrb
adc
lea
cwtl
out
push
push
cld
addb
xor
inc
sbb
adc
mov
xchg
and
and
addr16
loope
rclb
mull
inc
fisttpl
stc
inc
sub
bound
loop
jmp
lds
icebp
mov
data16
movsl
addr16
dec
xor
mov
aam
out
xchg
inc
push
enter
sbb
aam
inc
lds
aam
push
loope
mov
mov
ljmp
popf
cmp
and
mov
mov
call
add
cmpsl
stc
out
and
stos
jno
mov
push
imul
sbb
jecxz
add
xlat
mov
outsb
test
out
pushf
inc
and
mov
push
lret
scas
insb
mov
push
mov
mov
aam
xchg
shlb
sub
push
scas
adc
and
push
xor
iret
mov
push
sbb
mov
add
push
and
ret
iret
shlb
push
hlt
cmp
pop
sub
jg
pusha
inc
aaa
cli
dec
out
pusha
mov
popf
jbe
cmp
or
jg
or
lock
dec
and
cli
sub
inc
imul
sbbl
add
iret
cmc
sti
pushf
loop,pt
pop
arpl
insl
mov
add
xchg
add
pop
mov
das
xorl
jbe
or
and
fs
enter
push
stc
aas
add
movsb
push
push
adc
jl
in
outsl
mov
outsl
jge
dec
pop
mov
stc
ret
pop
jg,pt
out
call
lret
sbb
mov
pop
add
mov
stos
sub
fisubrs
das
jl
sub
popf
jo
mov
jg
aas
jge
jp
mov
push
hlt
push
sbbl
jne
daa
shlb
mov
mov
ds
and
sub
jae
dec
popa
jl
aas
loop
mov
pop
pop
dec
aaa
repz
jae
aam
js
out
jmp
test
mov
jne,pt
mov
addb
pop
cmp
push
mov
mov
xorb
add
xor
mov
vmovss
pop
jge
clc
nop
add
pop
fidivs
movsb
aad
add
sbb
cmp
add
cli
or
pop
jl
add
sarb
dec
pop
es
lds
scas
or
inc
out
dec
ss
cmp
push
negl
mov
push
xlat
jl
into
divl
pop
out
aad
mov
rcl
xor
loope
lods
roll
and
inc
cmpb
push
mov
push
scas
xor
xchg
mov
jmp
adc
daa
loopne
lods
loope
ljmp
add
dec
mov
mov
fidivrl
leave
add
jecxz
xor
pop
data16
repz
xchg
ljmp
fimuls
lahf
xchg
in
xor
pop
pop
das
aad
xchg
adc
in
dec
rcrb
sti
adc
mov
jns
pusha
mov
ja
mov
or
imul
movsl
sub
inc
mov
inc
xlat
jle
stos
fwait
push
xchg
mov
dec
pop
push
movsb
add
push
mov
loop
jbe
leave
pop
pop
and
add
dec
test
inc
cmc
call
or
mov
fwait
mov
dec
loope
pop
btc
into
xor
fildl
push
loop
push
out
jp
loope
les
mov
mov
add
pop
and
testb
addr16
pop
dec
pop
out
xor
aaa
push
testb
xlat
dec
roll
lahf
jl
or
mov
gs
sbb
xor
stc
int
xor
push
in
ja
testl
add
add
adc
cmpb
sub
sub
jle
add
scas
movsb
sub
push
dec
std
in
adc
rcrl
xor
adc
inc
inc
dec
cmp
inc
push
jne
fists
imul
lcall
popf
cmp
sbb
add
rcll
leave
filds
test
jo
xchg
pop
and
pushf
push
push
call
cmp
cmpl
xor
inc
stc
xchg
icebp
sub
pop
stos
and
inc
mov
pop
stos
pop
stc
out
scas
imul
jge
out
jnp
xor
adc
mov
mov
int
mov
fsubs
arpl
js
xor
mov
adc
in
mov
mov
test
xchg
and
inc
es
fs
aad
mov
lods
sub
jmp
cli
dec
mov
rcl
add
imul
in
out
movsl
out
inc
sbb
imul
push
lds
jbe
xchg
mov
daa
xlat
loopne
xchg
loop
fsubs
mov
cmp
jg
xchg
and
jne
movb
jbe
shl
push
cli
sub
sbbb
lret
repz
sbb
je
out
xchg
jle
jle
and
mov
stc
ret
sahf
addr16
scas
into
aad
cmp
sub
and
cmp
mov
stos
es
cmp
das
iret
push
pusha
xchg
loopne
and
stos
adc
and
stc
in
mov
loope
sarb
adc
fstpt
lods
xchg
js
push
and
rcl
adc
in
into
fnsave
cmp
js
inc
out
cmp
mov
xchg
in
push
fnsave
ror
cmp
fistpl
imul
scas
mov
ret
rolb
sub
jno
daa
sti
mov
mov
stos
mov
lds
sub
cmp
std
sbb
add
xchg
inc
sub
fisubl
dec
pop
daa
cmp
cmp
push
aaa
mov
decl
in
leave
lret
xchg
mov
test
test
and
cmp
jnp
mov
push
add
cmp
mov
mov
or
insb
sbb
sub
pop
cmp
