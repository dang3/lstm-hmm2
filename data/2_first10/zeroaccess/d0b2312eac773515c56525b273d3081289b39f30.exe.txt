push
mov
sub
orl
mov
add
push
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
push
and
push
and
mov
subl
xor
xor
xor
mov
sub
or
mov
movl
add
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jb
mov
sbb
mov
and
mov
or
mov
mov
mov
adc
movl
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jb
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
pushl
push
call
cmpl
jb
mov
movzbl
and
mov
not
mov
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
push
orl
pop
sub
mov
mov
sbb
add
sub
movl
jmp
sbb
ja
imul
push
aaa
xor
jp
pop
jp
and
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
xchg
lea
mov
adc
add
and
pop
negl
stc
mov
test
cmp
enter
test
subl
pop
mov
dec
cmp
stos
ja
mov
lcall
jp
push
mov
inc
push
rcrl
xor
jbe
sahf
sahf
ja
sahf
add
xchg
int3
in
adc
cmp
stos
xor
mov
pop
mov
push
mov
clc
in
shrb
add
les
and
fdivr
ror
mov
outsl
pushf
jbe
lret
sbb
mov
pop
sbb
pusha
add
xlat
mov
mov
dec
xchg
stc
push
mov
mov
pusha
mov
pop
xchg
out
jecxz
xchg
push
sbb
xor
stos
sub
nop
or
mov
mov
pop
and
std
sub
xor
cltd
adc
and
xchg
push
xchg
cmp
fptan
sti
test
pop
mov
ja
dec
daa
stos
inc
xor
and
sub
adc
dec
outsb
stos
push
mov
jle
and
out
cmp
leave
cmp
sbb
cmpl
les
jo
jmp
fadd
rcll
cmp
xchg
imul
mov
hlt
xchg
je
iret
fadd
dec
cmp
pop
mov
xchg
cmpsb
pop
dec
outsb
out
adc
and
jmp
inc
fs
mov
repz
adc
icebp
mov
xorl
ljmp
mov
test
cmp
loop
inc
sahf
mov
mov
sbb
jno
popa
sarl
push
xchg
or
orb
rcrb
or
cmp
xchg
lcall
xchg
loopne
mov
add
repnz
mov
flds
adc
xlat
mov
push
mov
pop
push
pop
fimuls
lea
pop
sbb
fisttps
mov
mov
cli
add
ret
aam
fnsave
adc
out
jbe
adc
push
es
imul
fistpll
pop
xor
mov
inc
test
mov
xor
cmp
jno
mov
pop
cmp
add
sub
sbb
inc
loopne
and
mov
out
xchg
inc
es
nop
xchg
sub
mov
ret
outsb
mov
cmc
and
add
cmp
cs
cmpsb
into
jb
insl
sbbl
movsl
stos
lret
mov
cmc
cltd
dec
push
aaa
and
out
mov
cmp
jb
pop
enter
push
sub
inc
mov
out
dec
outsl
fcom
ja
arpl
mov
out
js
or
pop
dec
push
mov
jge
iret
fldt
sbbb
xor
lcall
fldcw
push
mov
data16
add
in
add
cmp
movsb
scas
pop
xorb
cli
rorb
fsubrl
ss
pop
push
jae
mov
imul
push
pop
pop
in
add
out
arpl
push
xchg
movsl
mov
out
adc
xlat
dec
pop
rolb
mov
iret
fwait
cltd
mov
loop
stos
ds
imul
js
cld
pusha
and
sbb
test
push
loopne
mov
adcb
adc
dec
sti
cld
out
push
test
imul
jo
clc
inc
jle
or
cwtl
sub
cld
scas
and
push
js
cvtdq2ps
mov
cwtl
clc
shlb
mov
sbb
aaa
add
pushf
sub
out
adc
lret
fmuls
and
hlt
xchg
push
lods
repnz
pop
filds
repz
xchg
cli
inc
xchg
sbb
or
jb
dec
js
movsb
lret
jg
inc
add
add
repz
cwtl
ret
lret
add
xor
aad
lods
mov
cmp
int3
idiv
adc
sti
adc
xchg
pop
sbb
in
inc
sbb
cltd
add
iret
xchg
cmp
and
jae
cmc
sbb
inc
push
sahf
jp
cmp
xor
dec
adc
sahf
dec
in
pusha
addb
jecxz
jb
adc
jmp
push
xchg
pop
popf
cmp
lods
aad
es
and
xor
jp
stos
sub
sbb
test
inc
mov
push
pop
jge
ficoms
lods
xor
sbb
sbb
dec
stos
push
mov
imul
xorb
lcall
rcrl
xor
xchg
xor
test
push
loop
std
data16
adc
jo
dec
or
sti
jbe
adc
mov
push
mov
jns
sbb
icebp
inc
mov
ja
xor
icebp
out
pop
dec
cmpsl
into
xlat
es
std
or
arpl
or
mov
dec
mov
push
adc
shrl
addr16
repz
or
inc
mov
and
pop
cmp
push
or
ret
out
mov
in
xorl
ljmp
jmp
mov
fstl
out
push
dec
lahf
test
lods
repz
fwait
leave
jecxz
cmpsb
or
mov
aas
jbe
sbb
aas
test
pop
mov
push
jae
dec
in
aam
scas
push
int
inc
js
push
lds
xchg
xchg
sub
add
xor
inc
pop
popa
adc
xor
xor
data16
int
sarb
lret
sti
or
scas
mov
gs
dec
push
push
scas
daa
mov
dec
jae
xor
add
cwtl
mov
call
popa
lods
or
mov
mov
mov
push
cmpsl
push
cmpsl
gs
in
pop
das
adc
xor
ja
lock
and
lods
sub
fldcw
roll
dec
shrb
repz
call
test
pop
pop
clc
and
or
rcl
sub
mov
xchg
cmp
inc
xchg
and
mov
push
mov
ja
das
push
sub
je
jae
fsubl
pop
outsb
pop
cmovge
sbb
fistl
xchg
adc
and
push
imul
sbb
xor
loopne
mov
stc
ja
es
ret
aaa
in
jle
sub
repz
nop
insl
leave
lahf
das
insl
mov
xchg
push
mov
pop
scas
xchg
sbb
js
sbb
jmp
fildll
mov
pusha
gs
dec
fwait
jle
clc
nop
fnstcw
mov
mov
sarl
lret
icebp
in
jp
pop
clc
insl
push
mov
test
and
ret
lds
pop
xchg
rorb
mov
cmp
lahf
jp
adc
in
aas
xchg
jl
pop
loopne
jle
aam
fwait
movsl
push
jge
loop
mov
sbb
aas
sbbl
cmpsl
out
hlt
subb
push
popl
or
arpl
dec
push
or
sbb
add
addl
mov
fs
inc
lock
mov
mov
addb
jmp
mov
jecxz
push
rcrb
data16
out
das
decb
xchg
mov
dec
jge
lods
pop
icebp
jg
inc
repnz
data16
test
sub
fdivrs
movsb
pop
pushf
shlb
lock
test
cmp
mov
dec
call
mov
aaa
imul
nop
mov
pushf
mov
test
and
add
js
fdivs
stc
push
std
push
sbb
sub
push
loope
test
lret
add
inc
cltd
in
push
pop
out
out
xor
loope
hlt
shrb
pop
out
jmp
sarb
inc
jo
sub
cmp
pop
lahf
sbb
js
adc
dec
in
jb
add
ret
dec
xor
sbbb
rolb
sti
mov
jbe
dec
int
es
mov
fwait
dec
test
inc
rolb
push
add
pop
or
mov
out
and
jnp
pop
popf
jecxz
fs
pushf
push
stc
cmp
mov
xor
stc
jb
xchg
stos
mov
mov
and
icebp
inc
sub
add
mov
test
xchg
adc
mov
adcb
addl
negb
jnp
inc
cmp
test
mov
and
xlat
repnz
mov
mov
pop
andl
push
loope
jecxz
movsl
jo
adcl
pop
push
ds
xchg
cwtl
inc
mov
xchg
cmpsb
iret
cld
in
add
fwait
jns
rclb
lret
sti
test
xor
push
cmp
gs
insl
aad
lods
fiaddl
pop
mov
pop
ret
int
mov
fwait
mov
call
cmc
xor
push
dec
test
insb
addl
push
enter
push
push
add
test
adc
dec
lahf
inc
or
insb
and
movsb
adc
add
test
or
add
and
mov
stc
pop
sti
push
orb
push
mov
mov
fwait
adc
pop
adc
mov
push
fisubrl
std
test
push
in
xchg
rorb
sbb
ja
mov
imul
jecxz
in
dec
mov
cli
pminsw
mov
xchg
ret
pushf
or
aas
xchg
mov
inc
mov
rclb
fwait
fdivl
adc
dec
stc
andb
and
fsts
xchg
adc
mov
sbb
imul
cwtl
push
push
call
insl
in
xor
add
sti
sub
mov
dec
mov
test
fwait
addr16
add
dec
xchg
xorl
push
inc
dec
movsb
popf
push
push
cmp
stos
stos
cwtl
hlt
clc
shlb
imul
inc
add
push
pop
lods
sub
xchg
inc
sub
cmp
daa
dec
jbe
pop
shlb
adc
nop
outsl
fmull
std
and
inc
ret
push
lcall
xchg
daa
mov
inc
mov
aad
jle
imul
sbb
mov
or
mov
xchg
imul
scas
mov
xchg
mov
gs
inc
jl
xchg
push
rorl
sbb
push
sbb
fucomp
outsl
xor
das
jo
test
mov
out
test
dec
lahf
ss
nop
mov
outsb
or
lock
fstl
mov
add
lret
sahf
cmp
mov
and
inc
lret
addr16
je
das
xor
test
mov
mov
sbb
test
pop
pop
shrl
pop
cs
pop
sbbl
call
shll
jns
push
xor
inc
jecxz
sbb
repnz
cld
and
scas
cmp
in
and
aas
pop
cmp
xor
cmpsb
fdivl
xchg
repz
or
ss
fstpt
sub
mov
lds
adc
sub
and
mov
mov
and
cmp
aam
pop
test
dec
push
es
repz
push
jmp
movsl
ss
clc
mov
mov
push
xor
subb
adc
arpl
and
inc
cld
adc
adc
sbb
clc
inc
inc
jns
xlat
pop
xchg
mov
repnz
sarl
into
inc
jl
clc
sahf
in
inc
in
fnstcw
sbb
sbb
sbb
cmp
and
outsb
push
repz
das
xor
push
stos
loopne
addr16
xor
ficoms
push
pusha
ret
pop
jg
or
jmp
ret
cltd
lret
sti
push
dec
imul
enter
push
je
pop
mov
hlt
sti
test
movsb
push
xchg
xchg
xorl
pop
sub
inc
jo
mov
push
and
add
push
std
fisttpl
mov
int
cmp
aaa
lcall
adc
ds
inc
add
jo
daa
jge
dec
test
cmp
pop
in
add
arpl
jnp
shrb
xchg
mov
xchg
addr16
inc
sub
fisubrl
pop
mov
out
add
ret
pop
and
scas
lods
add
and
or
cmp
xor
cmp
mov
mov
imul
popa
sar
leave
mov
daa
je
cld
xor
dec
jno
rep
lahf
mov
out
adc
imul
stc
xchg
in
sub
add
pushf
pop
and
repz
dec
pminub
sti
jecxz
xor
cmp
push
es
xor
js
xor
xchg
mov
dec
mov
adc
xchg
and
sahf
test
mov
mov
adc
cmp
cmpsb
das
pop
lds
in
dec
push
xor
cltd
ja
xchg
or
imul
add
adc
adcl
sub
push
aam
pushl
push
shll
daa
mov
and
dec
mov
leave
pop
mov
in
sti
cwtl
stc
out
push
iret
mov
cmp
dec
lret
inc
xor
dec
sbb
jo
int3
and
jle
cli
jg
movsb
or
and
subl
xlat
add
mov
and
js
nop
xor
out
cmp
jae
inc
sub
mov
sub
lahf
or
inc
insb
mov
scas
or
mov
outsb
inc
or
sbb
pop
ja
test
pop
jno
enter
or
and
int3
add
movsb
or
push
repnz
mov
sahf
sbb
push
ja
mov
sbb
jbe
or
adc
sbb
ja
insb
xchg
fwait
pop
fidivrs
xchg
aaa
add
add
stos
cmp
xor
sbb
out
jns
ret
test
aaa
fisttps
clc
scas
and
fwait
mov
stos
sub
dec
lods
dec
test
sbb
lods
lret
cmp
jg
adc
xor
je
and
out
mov
sahf
xorl
jbe
lds
out
cmp
bnd
jge
xor
xlat
xor
push
das
outsb
test
fcmovne
mov
ret
jo
push
jl
lret
rclb
popa
sub
stos
inc
push
sub
popa
jbe
stos
fwait
xor
loop
xchg
jo
in
rcrl
sub
inc
shlb
sub
mov
jmp
mov
jl
daa
cs
js
ret
xor
std
inc
jmp
push
push
lods
fwait
cmpsl
mov
mov
and
mov
stos
xor
pop
jbe
sub
xchg
data16
loop
cltd
add
xchg
out
cmp
lahf
les
sub
xchg
bsf
shrl
fildl
hlt
mov
mov
movsl
iret
cmp
push
dec
inc
push
and
hlt
sbb
repnz
mov
sub
aam
lret
gs
popl
adc
mov
lock
sahf
sbb
pop
aam
js
mov
nop
inc
das
subl
ss
call
pop
add
xchg
iret
outsb
adc
shr
ret
mov
pop
add
lcall
push
iret
stos
sbb
cs
mov
in
and
sar
push
clc
jbe
add
jmp
sub
mov
mov
or
sahf
sbb
lds
out
mov
test
sarb
and
int
dec
scas
xchg
mov
xchg
call
xor
arpl
mov
mov
lret
addr16
out
mov
loope
jnp
out
int3
popa
mov
mov
xor
mov
ss
lock
mov
jle
push
sub
cli
inc
aas
sti
mov
push
ljmp
push
or
adc
fdivrl
pop
stos
mov
pop
xlat
xchg
stc
lock
js
jo
xchg
loopnew
jecxz
stos
fcomps
pop
mov
pop
into
mov
add
arpl
lret
pop
push
gs
aam
xchg
add
in
testl
mov
cmp
fwait
sub
icebp
cltd
and
lcall
sub
inc
sbb
data16
leave
mov
mov
mov
lcall
cltd
mov
testl
or
mov
mov
enter
mov
fwait
mov
pop
mov
add
lret
jl
mov
xor
lret
dec
adc
mov
pop
int
stos
mov
jp
and
nop
mov
xor
inc
xchg
lcall
rcrl
mov
add
or
loopne
dec
cmc
push
xor
movsl
or
xor
sti
outsl
pop
ret
sub
sub
xor
mov
push
sar
loopne
xchg
inc
addr16
add
nop
sbb
mov
in
in
mov
je
cmpsl
mov
pop
and
call
int
bound
dec
in
je
aas
and
cmp
data16
lret
push
movsl
xor
cmp
xor
pop
fdivr
add
leave
jle
pushf
scas
aad
cli
popa
daa
mov
jb
sti
out
clc
dec
pop
lret
pop
icebp
es
or
and
inc
loopne
mov
pop
jle
out
push
sbb
cmp
lea
orb
pop
inc
pop
sbb
ret
cs
mov
pop
outsb
sub
out
jge
std
dec
call
inc
xchg
adcb
sbb
jp
pusha
inc
sub
jb
xchg
jecxz
popa
ja
gs
mov
fadd
cmc
or
or
shl
add
movsl
jle
sbb
mov
ror
xor
jge
imul
lods
loop
add
imul
and
add
or
xor
and
fstps
addr16
and
pop
movsb
mov
dec
adc
adc
jnp
in
pop
mov
cmc
jb
mov
data16
pop
cmc
push
popa
mov
ret
push
je
fistpll
push
das
add
lret
cli
and
js
mov
test
pop
pop
xlat
leave
adc
mov
fcompl
and
pop
pusha
mov
dec
jae
es
sbb
cmp
jl
inc
fistpl
neg
mov
pop
dec
and
test
sbbb
stos
fstps
jns
xor
sbbl
pop
in
mov
cwtl
or
jmp
or
je
inc
imul
jl
fwait
add
outsb
idivl
shl
icebp
xor
push
mov
dec
jns
daa
sbb
dec
fwait
shlb
fsubs
clc
sub
xchg
sbb
ds
test
lods
dec
mov
lods
push
or
push
xor
xchg
mov
cmc
roll
arpl
xor
cmp
push
aam
adc
js
cmpsl
ljmp
jmp
repnz
fidivrl
pusha
xchg
test
iret
je
outsl
test
sbb
aam
mov
dec
mov
mov
and
mov
mov
xor
sbb
divb
jmp
out
sbb
pop
insb
fwait
xorb
and
mov
fisubrs
movsb
mov
inc
and
sahf
sbb
lock
test
sub
xchg
cmc
and
cmpsl
mov
repz
nop
in
rcrl
jmp
dec
dec
lahf
mov
in
pop
scas
cwtl
and
jg
dec
call
add
outsl
movsb
int3
jno
lds
icebp
pop
lds
call
xor
xchg
js
mov
fldl
es
out
dec
int3
mov
dec
rolb
xchg
inc
push
mov
push
lods
xlat
inc
adc
mov
fcompl
imul
test
iret
mov
adc
adc
mov
aas
imul
lret
sub
jp
dec
pop
test
mov
dec
and
push
stos
xchg
out
xchg
push
jne
cmpsb
dec
add
jmp
inc
fstpt
stos
orb
imul
jb
test
jecxz
sbb
cmp
lcall
scas
sub
mov
sub
sbbb
clc
jo
or
push
sub
adc
adc
push
daa
adc
into
and
rol
pop
ljmp
out
enter
sbb
outsb
mov
xchg
jne
fwait
inc
sub
cmp
mov
jns
jg
cmp
xchg
mov
xchg
mov
jnp
push
xlat
mov
inc
jecxz
inc
or
push
sub
mov
ret
in
xor
das
pushf
dec
gs
xor
push
xor
mov
sub
sahf
add
mov
lret
cwtl
aaa
jecxz
push
xchg
push
cmp
inc
sub
daa
jbe
sahf
pop
adc
jb
movsb
adc
ja
inc
out
pop
sbb
cli
fs
xchg
scas
fidivl
inc
sub
cmp
jg
pop
dec
xchg
aaa
adc
add
in
shrb
pop
in
sbb
data16
hlt
xchg
lock
cmp
or
aaa
push
or
aam
dec
sbb
or
pop
out
sub
gs
mov
es
loope
out
movsb
outsl
mov
clc
fimuls
sti
jg
sub
mov
lea
sub
mov
dec
fwait
adc
dec
xchg
sbb
imul
inc
stc
add
clc
js
repz
ljmp
jg
jecxz
dec
sub
stos
dec
mov
jbe
enter
jmp
faddl
sbb
mov
test
lds
aam
xor
leave
adc
stos
sar
xchg
jge
dec
les
shll
enter
stos
mov
imul
scas
xor
sbb
and
sti
mov
hlt
gs
movd
pusha
mov
push
xchg
xlat
sub
push
lahf
mov
into
fidivl
inc
rcrl
nop
loopne
fs
mov
mov
hlt
add
cs
cwtl
inc
cmp
fidivl
mov
adc
inc
add
inc
mov
jl
addr16
insb
inc
or
les
cmpsl
dec
out
js
sub
iret
jl
out
sbb
fldenv
out
daa
mov
cs
arpl
sub
mov
clc
ror
inc
pop
mov
test
adc
inc
or
sbb
xchg
cmp
sub
jge
aad
jle
xchg
jmp
pop
mov
das
enter
lock
sbb
and
jae
sbb
xor
mov
enter
mov
bswap
inc
mov
mov
mulb
push
jmp
sbb
mov
sbb
je
mov
popf
arpl
mov
mov
mov
mov
call
add
or
mov
mov
scas
add
xor
into
test
jo
pop
outsl
test
das
dec
repnz
lret
add
dec
fmulp
xorl
jg
adc
call
jae
shl
scas
orl
add
pop
lock
shr
sbb
and
fisubl
push
fucomi
cmc
jecxz
call
and
insb
fstpl
out
adc
stos
in
fs
cmc
mov
ljmp
jae
arpl
or
ja
push
je
loopne
ret
cmp
mov
inc
fcmovb
fdivrs
mov
dec
jl
push
loope
fistpl
test
mov
lock
in
daa
lret
adc
cmp
aas
pop
ret
outsb
sub
xchg
mov
sub
xor
lods
mov
pop
inc
xor
xchg
cmp
jl
test
and
lds
addb
jae
inc
push
imul
jo
push
in
insl
mov
jno
xchg
mov
insb
sbb
xor
add
insl
push
lea
outsb
cmp
mov
lods
je
iret
cmc
sbb
shlb
outsl
mov
inc
jp
int
xchg
mov
push
lcall
aaa
push
xchg
popf
aaa
js
shr
pop
loop
push
mov
or
xorl
xor
mov
bound
sub
xchg
or
sub
add
stc
mov
lea
lea
sbb
lahf
mov
mov
pop
imul
out
jae
ficoml
cmpsl
int
add
push
lahf
sbb
cmp
push
testb
daa
lret
loop
sub
or
je
fs
adc
mov
jle
frstor
test
lea
lret
test
mov
call
rcrl
nop
fstps
jb
dec
lret
out
or
cmp
roll
ss
dec
mov
cmp
je
inc
cmp
push
mov
outsb
dec
mov
daa
repz
add
imul
in
les
ret
sbb
repnz
ds
xlat
add
cld
mov
cmp
cmp
mov
popf
sub
and
in
adc
mov
dec
movsb
jl
push
mov
and
mov
xchg
gs
inc
sti
cli
subb
and
inc
out
lods
fsubp
mov
jmp
lcall
push
inc
jmp
data16
and
stc
sub
sti
dec
xor
imul
push
push
or
cmp
rolb
dec
sub
xchg
jae
sbb
inc
data16
lods
dec
divps
pop
adc
cld
sbb
xor
xlat
adc
mov
xor
push
add
scas
mov
loopne
add
imul
sbb
or
add
stc
dec
xchg
add
dec
add
aam
xor
jae
je
mov
push
std
sbb
lret
adc
add
jle
push
sbb
dec
sbb
xchg
push
mov
jbe
fs
jno
lahf
dec
orl
insl
cmp
inc
outsl
jmp
xchg
inc
jno
pushf
rclb
out
into
dec
pop
sub
cmp
fwait
push
cmc
imul
out
nop
std
cmp
xchg
fldcw
dec
xor
mov
addr16
mov
jns
stc
repnz
mov
lock
testb
pop
pushf
fdivrl
insb
adc
push
les
stos
test
repnz
push
mov
mov
dec
imul
daa
shll
arpl
cmpsb
mov
movsb
jl
arpl
addr16
outsb
jl
cmp
into
xchg
push
jb
leave
dec
push
sbb
mov
iret
push
add
jo
fwait
subb
cmpsl
out
sahf
jb
cmp
shrb
xor
jnp
sub
stc
jbe
push
loope
jmp
add
and
andl
out
xchg
and
adc
pusha
mov
push
sahf
shlb
test
fwait
and
mov
sbb
out
xchg
sbb
and
lret
daa
sbb
fwait
stc
and
outsb
movsl
mov
das
push
sbb
jp
pop
jns
mov
dec
and
or
jg
mov
and
call
mov
adc
inc
xchg
pop
jmp
sbb
jecxz
lea
in
adc
inc
cmpsb
dec
mov
jp
or
frstor
sub
adc
push
inc
dec
cwtl
imul
jg
mov
sahf
lcall
add
mov
and
stc
icebp
clc
mov
aas
fdivrs
cmp
xor
mov
mov
les
mov
push
mov
or
xchg
push
ja
lcall
dec
pop
shrl
push
cmp
xchg
lods
and
mov
fcmovne
or
cmc
imul
fcoml
inc
jl
add
int3
mov
add
cmp
iret
movsb
jge
hlt
sbb
movsb
push
xchg
or
pop
and
xor
out
or
ficoms
test
mov
sub
cltd
sbb
out
daa
inc
and
push
jmp
pushf
xor
xlat
out
lret
mov
cmp
lret
fistps
scas
stos
pop
ja
push
scas
scas
xchg
test
mov
arpl
sbb
pause
test
dec
ja
idiv
mov
scas
push
sbb
inc
add
ret
jle
xchg
pop
xchg
push
ljmp
aas
add
rol
cmpsb
jb
cmp
jno
cmp
outsl
sub
daa
jbe
movsb
enter
xor
xchg
push
lea
jp
jge
je
aam
stos
aas
mov
jnp
mov
leave
inc
add
aaa
subl
dec
ljmp
dec
loopne
xchg
std
or
mov
mov
sbb
xchg
jne
push
test
mov
loope
pop
test
xor
jg
std
ljmp
and
inc
mov
aaa
or
dec
jae
loope
rolb
mov
scas
pop
and
and
dec
addr16
xchg
rcrb
aas
icebp
dec
data16
jb
imul
xor
cmc
in
push
and
loop
lods
cmp
xchg
sub
movsl
lock
mov
loope
hlt
jmp
cs
lock
lret
xor
cmpsl
leave
popf
mov
hlt
push
jno
jnp
js
outsb
lret
dec
mov
sub
lea
mov
pusha
mov
jle
push
xor
mov
es
repz
ja
into
inc
xchg
or
test
push
xchg
xor
aam
xchg
das
imul
jle
mov
mov
movb
aam
jecxz
xor
int
inc
orl
std
mov
aaa
lahf
inc
imul
or
gs
sbb
rcr
cmp
stc
jp
shll
and
inc
jo
cmp
xchg
adc
mov
aas
mov
mov
pop
out
mov
cld
lds
pushl
xchg
cld
or
scas
ss
fsubr
cmpsb
ret
xchg
push
movsl
xor
adc
dec
xchg
cmpsl
xchg
pop
mov
and
enter
mov
cmpsb
out
faddl
pop
aam
pop
lds
aas
lahf
dec
loope
jge
repnz
jecxz
imul
mov
mov
mov
rorl
fldl
sbb
cwtl
and
clc
mov
push
js
xlat
scas
mov
into
ja
stos
in
cld
mov
movsl
js,pn
push
push
out
add
inc
pop
inc
ds
call
fldl2t
movsl
jp
sub
sub
mov
mov
rorl
push
jno
add
repnz
push
xor
mov
imul
fidivrs
call
add
pop
sahf
dec
outsb
adc
ja
mov
fwait
out
jno
dec
or
insb
jbe
jle
cmp
test
cmp
iret
in
fwait
sub
lret
repz
leave
mov
fcompl
iret
or
inc
mov
daa
stos
pop
jae
lret
push
aaa
sbb
test
jno
fdivl
push
pop
imul
mov
and
inc
add
add
mov
mov
adc
mov
sbbl
mov
mov
subl
xor
subl
add
mov
lea
mov
mov
xor
sbbl
add
sbbl
mov
xorl
lea
push
sub
mov
orl
xor
xorl
add
xorl
push
xor
or
adc
mov
push
addl
pushl
subl
call
and
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movl
mov
mov
mov
sbb
mov
lea
or
mov
movzwl
sub
mov
movl
addl
mov
xor
mov
sub
mov
mov
movl
mov
mov
cmp
je
mov
xor
mov
xor
addl
xor
addl
lea
mov
decl
xor
subl
div
dec
mov
add
mov
xor
adcl
xor
addl
sub
movl
cmp
jne
addl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
adc
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
sbbl
add
mov
cmp
jae
and
lea
xor
jmp
sub
std
sbb
cltd
cmpsb
cld
ss
sub
mov
pop
jp
cmp
jp
or
pop
push
cmp
sub
mov
movsb
pop
ret
push
mov
add
ret
cmp
pop
bound
sbb
call
in
sti
movsl
lds
push
pop
jle
fnstsw
lret
out
sub
sub
xchg
adc
iret
xchg
sbb
iret
pop
ljmp
rol
jne
push
les
stos
ds
adc
mov
sbb
loop
lret
jae
sbb
mov
mov
cltd
push
pushf
in
add
outsb
lods
clc
cmpsl
jecxz
mov
movsl
ss
fprem1
and
sbb
and
adc
lds
pop
hlt
dec
or
test
ss
testb
adc
or
mov
add
std
lock
mov
sub
fs
pop
inc
mov
clc
add
sbb
sub
clc
cltd
jns
jge
xchg
sbb
jle
cmpl
jns
push
sbb
mov
flds
test
or
inc
xor
mov
into
popf
jns
ss
gs
lret
pusha
fidivs
out
outsl
jae
push
out
popf
rolb
xchg
cmpsb
lock
push
out
mov
cmpsl
pusha
dec
loop
adcb
call
ja
std
dec
dec
pop
andb
xchg
inc
cltd
dec
cmp
mov
adc
out
movsb
ret
dec
mov
mov
pop
rorb
sub
stc
inc
and
dec
es
push
inc
mov
add
repnz
xor
js
push
jns
inc
pop
movsl
bound
cli
test
jle
aam
mov
outsl
data16
lods
adc
or
cs
mov
fs
push
inc
cmpb
mov
inc
dec
xchg
es
sub
xchg
dec
jg
test
pop
push
mov
add
fdivl
mov
rcl
movsl
scas
ljmp
jl
sub
into
loope
divl
xor
dec
fwait
lahf
int
int
andl
mov
mov
fiadds
xor
mov
pop
ja
movsb
repnz
lahf
push
out
cmp
popw
sub
sbb
aaa
loopne
hlt
es
loope
loop
fcmovnb
in
sbb
in
and
and
cmpsl
insb
push
adc
mov
jnp
pop
push
in
push
jbe
lds
jno
ret
mov
mov
push
ja,pn
xchg
cwtl
sbb
call
xchg
inc
mov
call
dec
outsb
divb
jb
cmp
mov
js
addr16
mov
mov
aaa
mov
mov
shrb
add
jno
rcrl
ljmp
repz
sub
mov
gs
xlat
setns
dec
push
jl
orb
xchg
jmp
mov
inc
orl
jns
or
push
sub
sbb
mov
dec
jl
and
push
and
es
fists
and
insl
pop
pop
and
cmp
aaa
cmp
out
mov
iret
js
adc
ficompl
movsb
es
in
cmc
test
or
aaa
lcall
jmp
test
push
push
mov
jb
shrl
mov
arpl
xchg
mov
jbe
and
inc
add
cmp
mov
add
jbe
lock
into
rol
add
and
je
in
inc
call
or
adc
and
cmp
xchg
cmpsl
jne
fimuls
inc
and
nop
shr
js
sub
in
and
shlb
sti
jne
outsl
ja
stos
pop
add
jmp
adc
rcl
push
adc
jns
adc
mov
call
lock
sub
dec
lret
mov
cmpsb
mov
mov
inc
jnp
cmp
loopne
add
cmp
js
icebp
das
ja
inc
je
sbb
sub
push
mov
std
faddp
xor
loopne
lea
adc
mov
aaa
popa
and
negl
xchg
inc
in
fadd
insb
dec
mov
outsl
jecxz
or
mov
int3
jge
ds
not
mov
divb
sub
ljmp
popf
shlb
dec
or
mov
cmpsl
arpl
sbb
sahf
mov
pop
mov
jnp
mov
imul
adc
mov
aas
xlat
fsubp
sti
adc
adc
in
aam
ficoms
rcrl
add
pop
mov
inc
mov
mov
in
test
mov
inc
dec
movsl
lahf
dec
lock
pushf
mov
pushf
divl
addr16
and
and
mov
dec
lds
xlat
jp
and
fldenv
xchg
stos
xor
loope
in
add
movsl
push
jl
mov
test
xlat
adc
jmp
daa
lods
sub
dec
mov
inc
fs
sub
nop
lds
ret
jg
outsl
in
or
dec
mov
outsb
push
movsl
add
ret
stos
in
jns
popa
aas
dec
xchg
js
hlt
or
push
cmpsl
lods
add
and
imull
xchg
int3
cmp
sbb
jo
sahf
popf
int3
cmp
adc
flds
roll
andb
xchg
adc
and
or
cld
and
inc
iret
cmp
adc
adc
add
cmp
pop
in
pop
push
pusha
sub
jmp
in
or
pop
xor
les
test
mov
pop
or
dec
jb
out
mov
repz
mulb
mov
mov
cmp
cltd
dec
sbb
rorl
pop
fldl
cltd
inc
sub
movsl
loope
jge
flds
sub
jbe
mov
scas
jno
fwait
cmp
or
fldenv
mov
ret
outsl
ja
mov
outsb
jne
adc
in
adc
push
add
add
enter
adc
xchg
ret
repnz
or
jg
mov
test
inc
push
mov
shll
xchg
jl
adc
mov
sub
jg
test
jns
fs
fists
out
push
inc
daa
insb
cmpsb
stos
mov
jg
fwait
movsl
adc
into
ret
pop
push
sub
push
ja
out
data16
cwtl
adc
jge
push
sub
lcall
adc
pop
popf
imul
and
add
and
pop
mov
and
push
push
insl
add
mov
gs
pushl
push
je
fcmovu
rcll
add
inc
add
insl
into
push
icebp
xor
int
insb
int
xor
call
incl
aad
sbb
lea
test
stos
sub
jbe
xor
lahf
out
dec
in
jle
adc
and
out
cld
into
pop
pop
sbb
fisubrs
sbb
into
pop
stos
inc
sub
sbb
pop
jbe
or
cltd
sub
add
out
sbb
mov
fidivs
lock
scas
rclb
mov
add
js
dec
lds
mov
pop
or
jne
sahf
sbb
ror
pusha
in
stc
lods
or
add
test
push
dec
cmp
push
inc
test
sub
sbb
add
push
mov
rclb
popf
popf
jb
or
aaa
mov
dec
sub
push
and
and
cwtl
pop
pop
movsl
pop
mov
roll
loopne
add
into
pop
jge
pop
xor
jmp
xchg
ret
push
fdivrs
into
rorb
push
and
jg
xor
or
shll
sti
out
jge
jno
cltd
push
cmp
je
stos
xchg
xchg
pop
outsl
sbb
cmp
nop
repnz
jno
adc
push
mov
lret
je
icebp
adc
les
add
nop
pop
cmpsl
js
fsubrs
jecxz
lahf
push
inc
jno
fstpt
mov
sub
xor
jnp
loope
pop
sbb
andb
adc
dec
cmpsl
loop
or
jb
dec
leave
add
mov
enter
dec
push
mov
mov
push
dec
mov
push
jae
iretw
mov
xor
add
sbb
fstp
push
fs
push
icebp
mov
std
mov
adc
pop
xor
fmull
push
in
inc
pop
sbb
aas
fsubl
sub
push
pop
jno
fcomip
adc
mov
cmp
and
mov
sbb
xchg
and
mov
ljmp
mov
sub
push
cmpsw
jb
insb
jno
mov
mov
push
loop
or
cmp
xor
inc
jle
mov
pop
xchg
xor
mov
loop
xchg
dec
loop
lea
mov
popa
jb
jle
or
int
scas
bound
outsb
jae
xor
add
jbe
mov
daa
sub
cli
or
dec
pop
leave
sbb
or
subb
jp
shl
sbb
cmpsb
or
jp
jle
inc
sub
adc
dec
test
and
add
xor
push
pop
cmpsl
add
pop
rcll
jne
scas
push
jecxz
repz
outsl
push
and
pop
mov
jne
daa
fucomp
mov
sub
loopne
aas
jle
popf
out
les
pop
mov
inc
scas
dec
xchg
sub
je
mov
les
adc
pop
hlt
shr
movsl
lods
icebp
dec
repz
jae
pushf
push
inc
push
fxch
inc
push
mov
pop
bound
mov
mov
xchg
adc
lods
add
add
sti
es
xchg
mov
jns
pop
sbb
xchg
mov
cld
or
jl
repnz
mov
js
aas
mov
cmpsb
sbb
dec
jle
sti
dec
out
or
sub
xchg
ret
andb
test
in
icebp
addr16
rolb
scas
xor
lock
pop
sub
jmp
test
cld
lods
ret
and
lods
mov
push
icebp
push
xchg
pop
sbb
test
popf
push
ds
ret
shlb
dec
adc
adc
dec
mov
jno
xor
push
push
jb
test
push
imul
sub
shll
inc
sbb
xor
gs
push
mov
pop
cmp
out
mov
dec
in
cmp
dec
jle
xchg
add
sub
dec
insb
icebp
das
ret
in
cs
xchg
fnstsw
cld
scas
xor
outsl
push
out
dec
sub
dec
sub
cmp
pusha
pop
movb
mov
jne
mov
inc
lds
pushf
out
add
inc
jns
cmpsb
jns
jae
insl
jp
jg
mov
in
cltd
pop
les
decb
sbb
popf
test
in
jo,pn
fcompl
testb
jle
cmp
lcall
sub
test
outsl
fdivrs
mov
mov
pop
cmp
mov
push
nop
cmp
enter
adc
xchg
xor
xlat
xor
out
sub
jmp
mov
sbb
mov
mov
pop
lods
jmp
mov
daa
dec
cwtl
xchg
incl
in
jbe
adc
jmp
dec
fildl
nop
add
ljmp
loop
add
xor
inc
insl
shlb
fstpl
xchg
xchg
scas
lret
sahf
sub
sub
and
jne
outsl
xchg
mov
add
cmp
dec
jle
inc
cwtl
subb
pop
ja
push
gs
sbb
inc
mov
loop
inc
and
lret
icebp
aam
mov
ds
pushf
cltd
jo
aam
cmc
mov
xchg
cmpsl
xor
adc
sub
rcr
add
and
shll
imul
pop
shlb
cwtl
ss
ret
xor
outsl
inc
rcrb
inc
xor
lahf
pop
adc
jge
or
in
or
pop
dec
sbb
mov
xchg
jge
cmpsb
insb
sub
cmpsl
popa
shlb
movsb
aam
popf
lcall
out
imul
mov
lret
decb
out
sbb
out
in
dec
addr16
adc
mov
xor
loope
xor
daa
or
lods
sbb
add
or
cvtpi2ps
mov
in
and
ficompl
cmp
cwtl
push
inc
rcll
jecxz
pop
jmp
fidivrs
and
or
xor
dec
lock
or
out
outsb
dec
ds
push
outsb
mov
mov
add
push
fiadds
dec
mov
adc
fsubr
jg
dec
or
jecxz
add
sbb
or
popf
mov
xchg
fdivp
dec
stc
dec
rcrl
rcrb
repnz
mov
or
addr16
loop
into
rorb
sbb
mov
pusha
pop
inc
cli
in
rcrb
jmp
jo
lods
dec
xorl
daa
adc
jle
jb
sbb
dec
xor
cmp
mov
jp
xor
lods
push
push
out
pop
push
pop
out
aam
lds
sbb
arpl
inc
wrmsr
fs
lahf
inc
mov
or
lret
jno
mov
popa
mov
ja
call
cmp
leave
and
mov
xchg
fimuls
jmp
jnp
mov
mov
lods
lods
inc
push
sti
cltd
jecxz
aad
insl
inc
sub
push
mov
push
shl
inc
movsl
xlat
or
mov
enter
adc
movsb
jg
sbb
or
inc
xlat
xchg
insl
adc
pop
pop
repnz
jle
out
xchg
push
inc
icebp
mov
outsl
fst
cmp
xchg
cmp
xor
insb
ret
or
or
sbb
outsb
adc
and
cmp
sbbl
or
xchg
xor
xor
xor
xorb
and
out
fisubl
ja
xchg
sbb
enter
cld
andb
sub
push
testb
jmp
push
push
hlt
jl
and
or
fwait
mov
ret
arpl
std
add
sub
lock
pop
sub
mov
push
mov
rclb
addl
xor
je
xchg
pop
repnz
mov
push
in
xor
and
in
pop
cmp
sbbb
pop
pop
movsb
jmp
jno
ljmp
shlb
ret
xor
or
into
cmp
jg
stos
xchg
xchg
repz
stc
mov
ret
jle
icebp
sbb
sbb
iret
pop
jg
mov
filds
lret
andl
rclb
inc
out
lahf
fdivs
add
sahf
xor
aaa
out
dec
cltd
mov
mov
push
aam
clc
jecxz
xchg
pop
dec
cmp
out
or
cmpsb
inc
call
stos
ret
in
outsl
popa
xor
sti
out
out
dec
stc
bound
pop
icebp
test
jb
adc
ljmp
push
cmpsb
hlt
in
dec
or
int3
jle
pop
cmp
sbb
xchg
jno
jnp
push
outsl
out
inc
adcl
je
and
sub
sbb
xor
push
pop
mov
jne
in
ret
insb
fdivp
pop
xchg
mov
cmp
cmp
aaa
ds
add
iret
dec
pop
insb
arpl
xchg
mov
cld
or
adc
loop
jle
cli
pop
push
fprem
sub
outsl
and
xchg
in
add
das
or
sub
mov
out
inc
jp
inc
outsb
es
lds
xor
push
arpl
mov
mov
xor
daa
cmp
sub
jmp
pop
cmp
insb
push
iret
shll
xor
leave
aam
ret
mov
outsl
test
mov
jg
xor
jbe
jge
jae
loopne
arpl
mov
movl
push
xchg
inc
out
mov
jno
cmc
dec
or
xchg
cmc
pop
cld
pop
mov
lahf
jno,pn
pop
ja
push
inc
cld
push
add
fists
push
jge
jns
or
mov
ss
outsl
mov
imul
and
dec
fwait
xchg
xor
jecxz
mov
push
inc
in
out
inc
popa
sub
adc
push
repz
inc
sahf
xchg
jb
jle
sub
mov
bound
push
stos
daa
lahf
into
aad
mov
into
stc
push
std
cmpsb
insl
bound
std
cltd
arpl
mov
es
fsubs
cmp
jge
cmp
xchg
jge
adc
push
arpl
gs
jle
out
jae
sbb
gs
pop
adc
mov
les
in
lea
stc
imul
mov
mov
mov
jo
cltd
in
flds
addr16
push
mov
mov
pop
sub
or
addr16
mov
lds
jns
out
fwait
xchg
cmp
ja
xchg
sbb
enter
imulb
ffreep
fnstsw
lods
andb
js
add
in
mov
mov
cltd
push
xor
mov
sbb
mov
lahf
pop
mov
loop
fdivl
imul
jmp
inc
push
xchg
subl
or
in
sub
mov
in
fs
aas
mov
ja
je
pop
decb
push
cmpsl
xorl
or
add
cld
arpl
xor
sbb
addr16
sub
sub
mov
in
cmc
iret
or
jb
push
arpl
mov
inc
xor
popw
clc
pop
pop
clc
mov
inc
es
fsts
xlat
sbb
out
or
out
lock
pop
call
mov
adcb
lea
push
pushf
mov
loopne
dec
call
sub
repz
cmp
adc
sbb
lds
sub
mov
pop
mov
rcll
or
stos
lret
mov
fsubs
pop
in
and
xchg
pop
dec
and
mov
xchg
mov
jge
cltd
dec
stos
cmc
adc
sub
ja
sarl
div
inc
adc
sbb
fucom
pop
test
xchg
pop
xchg
pop
push
sbbl
test
mov
lock
xchg
in
and
fisttpll
xor
arpl
mov
cmp
test
or
jbe
test
fidivrl
sbb
popf
jge
scas
inc
cmp
inc
arpl
shrb
inc
push
xchg
cmpsb
cmpsl
mov
sahf
jl
sbb
push
adc
aam
pop
fucomip
and
adc
cmpsb
cmc
pop
scas
sub
imul
loop
out
repz
scas
test
sbb
lock
testl
mov
shrl
mov
push
cmp
or
jmp
inc
je
pop
por
scas
hlt
imul
mov
daa
push
fs
loopne
xor
gs
icebp
sbb
mov
cld
inc
lcall
addr16
and
mov
lods
xchg
loop
xchg
pop
dec
out
dec
jecxz
incl
dec
mov
cmp
int
lahf
xor
xchg
addr16
and
xchg
test
loop
xchg
pop
loope
stos
jmp
ja
push
test
aaa
popf
nop
jb
jg
cmpsb
xchg
idivb
aas
rolb
gs
pop
jb
mov
cmp
sbb
fdivs
push
inc
mov
cmp
sbb
loopne
cmpsb
or
in
lods
orl
in
sub
repnz
arpl
aas
inc
sub
mov
fbstp
pop
cmp
test
mov
xchg
dec
movsl
dec
insl
scas
hlt
fwait
push
jno
mov
mov
mov
shlb
scas
clc
testb
mov
mov
mov
xchg
imul
add
int
fisubrs
or
adc
mov
addl
xchg
adc
das
lret
and
dec
push
inc
mov
and
cmp
mov
pusha
sub
ss
inc
in
ds
in
inc
nop
pop
leave
stos
sub
mov
adc
ja,pn
xchg
bound
cmp
pop
ja
lods
hlt
cmpsl
ret
mov
mov
or
cmc
jl
cmpsb
outsl
or
inc
xchg
test
jmp
enter
mov
lods
mov
outsl
sub
push
std
jo
xor
xchg
mov
ret
outsb
pop
insb
push
int
ret
dec
imul
xor
in
mov
lcall
sub
or
sub
fnstsw
push
push
loopne
pop
inc
fdivrs
push
shl
cmpsl
dec
sbb
nop
mov
and
cltd
xchg
mov
aaa
or
mov
xor
adc
mov
dec
jb
mov
in
ja
pop
movsb
jbe
mov
pop
mov
push
sbb
xchg
ds
ficoms
sbb
imul
jns
shll
loopne
nop
adc
test
ret
and
ja
mulb
es
mov
andb
adc
sub
mov
inc
sub
sbb
xchg
or
and
push
je
add
imul
pop
rcrb
stos
jmp
pop
int
or
inc
aad
inc
ja
shl
mov
jb
xor
mov
popa
xchg
pop
mov
decb
int
out
cmp
mov
cld
jo
lahf
mov
pushf
testl
nop
rcl
ds
outsl
cmp
lea
cmp
popf
cs
ljmp
test
nop
stos
jno
mov
lcall
pop
hlt
mov
scas
mov
repz
xchg
xor
xor
jne
push
lods
xchg
push
xor
lods
push
das
mov
fwait
cmp
inc
clc
add
shll
leave
stc
test
out
jl
jmp
xorl
out
push
int
cmc
shll
push
mov
mov
cli
push
dec
out
notb
out
xor
outsb
dec
insl
lret
add
pop
out
dec
or
data16
pop
pop
and
movl
xor
clc
or
push
or
sub
pop
lock
inc
fs
js
mov
pop
sub
push
scas
jns
lea
mov
adc
xchg
jno
or
pop
pop
or
mov
inc
push
cmp
je
mov
leave
xchg
icebp
fadds
std
xlat
xchg
ret
iret
mov
xchg
push
addr16
aas
adc
fists
adc
push
pop
mov
inc
sub
cmp
shrl
insb
or
jle
push
dec
leave
push
aas
sub
jge
in
jae
mov
jmp
clc
jmp
sbb
cwtl
jne
pop
push
fdivp
cmp
and
and
subb
std
outsb
mull
repz
dec
lcall
hlt
imul
mov
out
xchg
jmp
mov
ret
cwtl
add
cmpsl
addr16
stos
inc
and
lahf
sub
push
push
or
sbb
or
int
xlat
fbstp
std
jae
mov
mov
mov
fisubs
push
cmc
repnz
push
lahf
push
jbe
mov
dec
cmp
ffree
in
mov
push
ret
aam
aad
loopne
loop
inc
shll
inc
leave
cmp
sbb
pop
das
insb
jne
jbe
xor
pusha
xor
cmp
imul
add
xchg
fstps
test
mov
cmp
fdivl
data16
xor
rcll
sub
mov
fisttpl
pop
push
cs
addr16
aaa
popa
jge
sti
push
repnz
sbb
addr16
out
lods
mov
subb
xchg
ds
test
pusha
and
sti
fwait
mov
js
imul
fisubs
in
sbb
imul
xchg
rclb
xchg
mov
cmc
jecxz
fmuls
mov
mov
cld
mov
sub
mov
pop
adc
bound
ds
sub
out
test
mov
fs
xchg
in
repz
fnsave
or
loope
not
mov
mov
lret
insb
int3
popf
mov
xchg
pushf
push
push
and
add
sti
and
push
ret
pop
dec
or
rcll
fimuls
out
pop
fdivrl
jo
fisubrs
dec
push
loop
xor
mov
ret
pushf
dec
sarb
mov
mov
and
mov
daa
push
sub
xor
aam
jge
sbb
lods
sub
je
bound
and
mov
mov
mov
data16
in
sbb
dec
dec
inc
int
das
test
stos
adc
mov
adc
lods
inc
dec
pop
call
add
hlt
adc
push
xchg
and
cld
aas
sbbl
mov
outsb
adc
dec
and
pop
adc
icebp
fimuls
or
or
scas
add
jnp
jg
xlat
ds
push
jp
ljmp
cmp
int
mov
rorb
pop
js
pop
into
mov
mov
cld
inc
jp
adc
lret
push
sub
push
pushf
sbb
enter
lret
or
ds
xor
add
fists
xchg
daa
sbb
sub
or
push
aas
scas
push
pop
pop
in
cwtl
notb
pop
scas
cmp
inc
aam
ret
in
pop
in
lea
daa
xchg
imul
sbb
jl
xor
out
sti
shl
dec
arpl
jge
cli
pop
push
pop
and
aam
sub
dec
fidivs
adc
arpl
jns
cli
in
cmc
xchg
sub
jmp
sbb
in
fsubrp
mov
jns
adc
jmp
aas
push
and
push
mov
movsb
fldcw
jp
int3
adc
jle
sub
inc
imul
mov
inc
cmp
rcrb
mov
mov
mov
aad
aas
fimull
loope
xchg
cmpsl
fisubrl
cmp
push
mov
cmpsb
in
xchg
cs
sbb
add
stc
insw
aas
pushf
xor
dec
clc
js
aad
into
stos
sbb
mov
push
data16
mov
push
sub
aad
sub
cmp
push
mov
repnz
movsb
jb
jnp
xlat
sub
gs
lea
stos
ret
repz
pop
jns
dec
addr16
inc
mov
test
sbb
sub
enter
imul
scas
popf
push
pop
mov
cmpl
call
pop
mov
sbb
aam
sub
or
leave
sub
leave
test
inc
add
dec
adc
adc
lods
dec
jmp
dec
in
jl
fsubs
cmpl
out
xchg
or
fistpl
lods
push
mov
xchg
mov
add
and
inc
add
fidivl
nop
add
js
aam
or
out
inc
and
lods
outsb
or
out
lock
int3
out
dec
call
aaa
dec
neg
stos
icebp
paddq
mov
cmp
leave
or
andl
xchg
xchg
repz
dec
sbb
cmp
inc
and
loope
mov
in
push
test
jno
push
into
sbb
les
mov
jp
xchg
clc
pop
cmpsb
add
jmp
xchg
fcmovnbe
inc
sub
and
inc
xor
gs
cmpsl
sub
test
hlt
pop
movb
movsb
mov
test
out
cmp
add
inc
icebp
adc
outsb
sbb
adc
xchg
jno
push
rorb
fadds
mov
inc
xor
jae
popf
fdivrl
xchg
dec
enter
xchg
scas
sbb
xlat
lret
lret
jg
in
popf
sub
mov
xchg
dec
mov
xchg
loope
mov
pusha
mov
leave
adc
mov
stos
lcall
test
mov
les
pop
orl
mov
in
mov
mov
push
pop
sub
and
adc
sub
xchg
das
es
frstor
pop
push
xchg
mov
xchg
inc
add
lock
add
jge
dec
sbb
mov
mov
rcrl
inc
out
inc
inc
dec
gs
sub
dec
add
test
in
testb
and
mov
sarb
test
pop
jl
and
xchg
sti
loop
scas
mov
cmp
jnp
pop
mov
or
and
aam
bnd
fnstenv
mov
les
lods
loopne
pop
out
cmp
cmp
loope
jp
aad
mov
outsl
dec
sub
sub
pop
movsb
sub
movsb
dec
or
lret
dec
or
mov
lds
cltd
and
clc
inc
inc
mov
mov
popa
movsb
jo
sahf
and
rorl
loopne
out
mov
call
xor
test
out
imul
cmpsl
lret
outsb
xor
push
adc
aas
daa
pop
inc
mov
push
out
inc
es
jno
mov
in
mov
inc
es
jl
xor
xchg
jno
imul
mov
add
lahf
out
iret
gs
insl
sub
leave
fisubs
add
orl
inc
xlat
mov
aas
push
mov
xor
icebp
scas
pop
cmp
cmp
out
cmp
mov
scas
popf
add
sub
jle
mov
xlat
xchg
jge
cmp
or
lock
lahf
mov
and
mov
pop
data16
jns
pop
push
inc
das
or
pause
sub
in
cmp
push
dec
scas
pop
aas
test
test
mov
push
dec
and
incb
adc
lods
repz
add
pop
bound
mov
ret
cld
enter
xchg
mov
mov
mov
in
pop
roll
push
dec
inc
cltd
or
sub
fcomps
cmp
div
out
incb
aam
nop
scas
jo
addr16
push
rcr
aad
fisubrs
int3
pop
dec
rcll
mov
inc
hlt
loopne
cmp
ljmp
cmp
cld
sub
popa
add
add
jae
ret
push
mov
sub
jge
adc
out
mov
or
mov
insb
lods
icebp
lea
shrb
into
fbld
sub
sub
sbb
pushf
iret
fildl
pop
ret
cmp
test
loopne
hlt
cmpsl
stos
cld
scas
jns
inc
out
push
xchg
push
test
cwtl
adc
mul
fldl
movsb
mov
inc
loope
inc
sub
jbe
mov
addb
pop
jo
movsb
ss
mov
fsubrl
fstps
popf
fsubs
cmp
movsl
mov
ret
stos
jp
and
mov
roll
xchg
add
xchg
push
ret
insl
lret
pusha
push
bound
imul
mov
jne
mov
xchg
inc
ss
dec
mov
lret
lock
cld
ja
adc
jecxz
iret
xor
jno
movsb
jecxz
scas
cs
ds
js
add
repnz
pop
xchg
sahf
in
mov
pop
mov
pusha
mov
mov
inc
mov
stc
jno
repnz
cmc
out
ss
into
jg
mov
hlt
fbstp
add
xor
in
neg
fnstcw
add
fdivl
leave
sub
aam
je
aam
jg
gs
sahf
inc
push
and
cwtl
ss
jg
pop
scas
lret
and
sbb
inc
push
mov
push
cwtl
fimull
mov
add
xchg
push
ds
add
xchg
fidivl
call
pusha
push
movsl
ljmp
outsb
cmp
xchg
xchg
pop
loopne
or
in
inc
movsl
fisubs
sbb
cmp
enter
cld
mov
mov
jp
mov
fs
dec
in
mov
xor
addl
add
movl
lea
mov
movl
mov
movl
cmp
movl
jbe
subl
addl
jmp
orl
addl
sbb
mov
sbbl
xor
sbbl
inc
incl
add
movl
cmp
movl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
orl
mov
andl
sub
add
mov
xor
negl
sub
xorl
ror
xor
mov
add
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
jmp
lds
lea
jns
jbe
lret
mov
lret
sbb
clc
xor
cmp
jp
inc
push
ret
cmc
mov
dec
fstl
sbb
jne
fdiv
int
pop
gs
addr16
jl
inc
mov
pop
lcall
ret
fwait
lret
aas
pop
inc
int
mov
pop
iret
xor
es
dec
mov
mov
push
daa
sti
and
or
lahf
push
shl
or
push
pusha
lret
aas
mov
iret
sub
inc
mov
cld
addr16
add
cmp
xchg
js
into
lds
add
std
out
jl
mov
push
nop
call
inc
sahf
ret
sub
scas
rep
xor
sbb
data16
pop
daa
xchg
loopne
int
enter
xchg
fs
pop
lea
mov
mov
divb
sbb
notl
add
push
cld
inc
or
sub
dec
mov
adc
sub
popa
insl
test
in
lods
push
or
out
daa
out
mov
pop
movb
enter
in
sarl
cmp
add
loop
mov
sti
test
inc
mov
xor
push
shrl
add
push
push
and
into
pushf
pop
movsl
pushf
loopne
mov
movsl
adc
mov
lahf
adc
popa
cmc
call
cltd
cmp
jno
insl
pushf
repz
jo
stc
sub
cmp
out
mov
sub
jl
ss
jmp
mov
xor
mov
cmp
pop
addb
push
icebp
xchg
imul
mov
lock
rcrb
push
bound
mov
loopne
jp
jg
mov
test
dec
insb
in
sub
cmp
sahf
mov
into
fistpl
dec
push
adc
xchg
shl
daa
jp
pop
and
dec
pop
add
xchg
in
dec
fwait
push
mov
push
xlat
mov
xlat
mov
sub
cltd
popf
mov
mov
add
sahf
add
push
enter
or
mov
fisubrl
inc
dec
jge
out
jg
shll
jmp
xchg
and
lock
outsb
mov
rolb
ljmp
xor
and
loopne
sti
imul
adc
xchg
mov
add
inc
lret
adc
pop
inc
mov
filds
pop
arpl
fbstp
push
mov
les
inc
orl
sar
ljmp
mov
sub
dec
div
jne
dec
xor
sub
mov
pop
and
inc
sub
add
cmp
add
cmc
stc
jno
outsl
and
adc
pop
insb
subl
adc
pop
shld
sti
or
fnstcw
xor
jae
xchg
es
mov
int
scas
mov
mov
std
sbb
outsl
ja
add
mov
mov
out
jae
sti
cli
xlat
stos
adc
and
adc
dec
or
loope
into
dec
jle
mov
push
arpl
adc
mov
ret
dec
inc
adc
das
fldl
mov
call
pop
enter
sbb
shlb
cmp
je
cltd
pop
mov
sub
inc
mov
in
sbb
adc
dec
cld
rorb
das
icebp
imul
cmp
or
jg
dec
adc
push
test
and
sahf
roll
shlb
lret
loop
xchg
jb
fldcw
hlt
decl
mov
sub
orl
mov
stos
or
test
sti
pushf
leave
fldenv
nop
mov
test
xchg
sbb
mov
leave
mov
add
test
sarl
nop
xchg
pop
loope
push
js
data16
xchg
mov
ret
pop
dec
call
adc
inc
pop
rcrb
sub
jp
add
mov
lcall
std
pusha
loop
pushf
jg
daa
adc
mov
stos
pop
xchg
fsin
stos
in
out
imul
push
leave
xchg
cli
arpl
orl
pop
ja
xchg
pop
mov
push
cmpsb
sbb
xor
outsl
lahf
fimuls
imul
fcoml
mov
mov
xchg
sub
xchg
popa
fmull
shlb
xorl
int
sub
xchg
mov
sbb
fnstcw
lea
repz
cwtl
cmp
bound
jecxz
add
add
ja
mov
or
mov
lds
fwait
aad
andl
hlt
sbb
popf
push
xor
push
loope
test
lahf
xchg
inc
lcall
in
xor
sub
je
aaa
aaa
cli
aad
ljmp
imul
jmp
jo,pn
nop
pop
sbb
push
pop
inc
popa
ret
movsl
push
lock
and
pusha
cmp
cmpsb
iret
icebp
ds
mov
push
xor
sahf
mov
xor
hlt
aas
adc
mov
adc
lds
jge
leave
add
dec
lcall
aaa
push
adc
sbb
pop
or
mov
xor
mov
jl
out
sbb
pop
dec
fs
shrl
rcl
cmpsl
lret
mov
out
lds
cli
dec
aam
movaps
push
shll
cmpsb
fnstcw
adc
pushf
dec
insl
stos
mov
sub
mov
dec
lock
mov
mov
subl
pop
in
pop
std
mov
aad
dec
sub
in
addr16
sub
aam
sbb
cmp
pop
ficoms
cmpsb
jmp
fwait
lcall
jge
sub
mov
push
arpl
adc
mov
push
cmp
std
and
or
pop
xchg
inc
std
cmp
les
pushf
cmp
nop
jb
xchg
mov
push
sbb
pushf
add
push
js
jns
pusha
xchg
mov
jbe
dec
mov
cmp
mov
mov
call
jle
jmp
xchg
push
rclb
and
pusha
jmp
pop
add
mov
xchg
test
mov
cmp
lahf
scas
xchg
mov
sub
or
jmp
movsb
out
sbb
movsl
imul
dec
in
fcmovnb
xchg
aad
psrad
repnz
adc
insb
add
fnstenv
dec
mov
xchg
push
ss
insb
add
mov
push
lods
mov
push
lcall
sbb
stos
or
shl
add
pop
push
arpl
icebp
mov
and
ret
out
sbb
xorl
xchg
pusha
and
dec
mov
add
out
add
mov
aaa
jb
mov
sbb
mov
mov
push
mov
sbb
xor
mov
idivl
pop
cmc
pusha
shll
movsb
adc
outsb
mov
and
lock
mov
enter
aam
dec
cltd
in
pushf
int3
pop
movsb
mov
xchg
cltd
xchg
stos
xchg
mov
jp
pop
pusha
cmp
call
mov
push
mov
cltd
lahf
stos
inc
inc
pop
push
sub
fisubrs
loopne
int
div
jae
cmc
rorb
jl
pop
cmc
mov
push
push
in
sub
mov
adc
sbb
xchg
test
cli
das
sub
ja,pt
sub
cltd
lahf
popf
jne
push
mov
out
aam
mov
mov
add
mov
sub
mov
pushf
divb
fwait
into
out
adc
mov
cmp
and
inc
jne
and
xchg
push
jmp
adc
mov
mov
in
push
jge
mov
insb
insb
jo
xchg
mov
pusha
jnp
mov
cmc
pop
jecxz
and
in
and
pop
and
pushl
push
push
and
xchg
ficompl
lods
mov
jbe
test
fisubrl
mov
cmp
push
iret
pminub
paddd
inc
in
jbe
in
stos
push
mov
aam
fmul
push
cltd
jecxz
sub
mov
fdivrl
xor
or
in
jnp
adc
inc
cmc
cmp
inc
push
jo
loopne,pn
pop
popf
ret
imul
adc
in
pop
idivl
or
mov
pop
pop
pop
es
stos
mov
adc
and
mov
fnstsw
or
iret
outsl
loop
add
pop
scas
ud0
ficoms
lahf
mov
pop
mov
lahf
sbb
repnz
sbb
dec
lcall
xor
sub
repz
je
sub
cmp
outsl
mov
insb
addb
mov
xor
sbb
loope
jb
aam
cmc
scas
mov
inc
pop
mov
shrl
aas
fbstp
pop
cmp
xor
cmp
inc
xchg
daa
cmpxchg
or
cmp
stos
sub
adc
cltd
addr16
jo
push
push
jle
push
mov
in
sbb
xlat
movl
jl
mov
lods
push
adc
sbb
push
and
adc
js
test
pushf
sub
sbb
jno
pop
test
push
in
pop
mov
or
mov
div
push
scas
test
and
sbb
cmc
cmc
ficompl
stos
enter
ficoml
push
sti
pop
dec
nop
xchg
int
push
loope
or
and
sahf
ret
es
fs
cli
sbb
cmp
lea
adc
add
mov
mov
push
cmpl
iret
test
test
sub
loop
xor
sbbb
sahf
xchg
ret
sarl
xlat
mov
call
mov
mov
out
push
mov
addl
enter
imul
jnp
repz
mov
and
push
shrb
imul
sbb
mov
pop
jge
inc
ljmp
sub
mov
jb
pop
ret
mov
cmp
test
push
mov
mov
xorb
xlat
mov
and
cmc
imul
pop
cmp
arpl
push
insl
mov
xchg
dec
sbb
xchg
or
xor
cmp
dec
dec
repnz
andb
jne
jle
sub
jle
pop
jb
test
jae
mov
mov
aam
adc
adc
enter
out
cmp
jbe
cmpsl
int
and
mov
push
das
sub
lds
fstpl
or
mov
mov
outsb
les
cmp
sbb
paddq
rol
out
movsb
xor
sub
xlat
mov
ljmp
scas
cmp
cli
jnp
jp
icebp
arpl
jbe
nop
push
loope
insb
pop
gs
mov
stc
je
xor
push
aad
test
inc
or
lea
push
jnp
rorb
xor
and
xor
push
data16
out
cmc
xchg
in
ljmp
out
cld
push
int3
hlt
xor
aaa
insl
rorl
pop
and
pop
sub
xor
arpl
xlat
cmp
sbb
xor
xchg
fcomps
and
imul
push
mov
lret
mov
ljmp
repz
cs
mov
sbb
adc
dec
adc
or
jno
arpl
mov
pusha
and
mov
movsl
jp
dec
outsb
mov
pop
xchg
fdivl
repnz
push
lea
out
enter
mov
das
aaa
sbb
xchg
add
or
dec
mov
in
in
push
leave
std
orl
clc
dec
les
sub
add
inc
in
les
dec
adc
aaa
pop
push
xchg
dec
inc
add
add
sub
sub
mov
or
mov
jmp
pop
inc
icebp
cmpsl
pop
shl
bound
or
pop
sub
in
scas
pop
mov
inc
sub
push
movsl
aad
add
int
push
mov
repnz
es
fisubrs
add
mov
push
or
adcb
inc
mov
andb
adc
mov
pushl
sub
push
aad
movsl
cltd
xor
and
ss
mov
dec
loop
jnp
jmp
mov
leave
orl
test
push
xchg
mov
in
jnp
cmp
mov
je
out
sbb
sub
fadds
or
pop
xchg
sub
sahf
sti
add
roll
sbb
imul
pop
call
sub
mov
imulb
sbb
cmp
xor
les
bound
rclb
xchg
lock
cmp
cltd
mov
sahf
inc
in
adc
push
sti
inc
mov
push
insl
ss
ljmp
outsl
mov
imul
push
push
les
add
fmulp
jecxz
ret
push
loop
cltd
sub
jb
addr16
jmp
addr16
jae
mov
adc
mov
xchg
xchg
repz
or
or
inc
in
ret
xchg
xlat
and
dec
xchg
fnstsw
pop
mov
cmp
pop
outsl
and
aam
push
jne
lds
mov
std
jbe
aas
mov
pop
sbb
outsl
jg
lods
popf
clc
jp
lods
inc
int
mov
mov
aad
pop
or
rcrb
cli
mov
subl
cwtl
add
mov
xchg
insl
sahf
jle
push
mov
fisubs
cmp
les
mov
scas
xor
addb
iret
lcall
movsb
pop
jbe
or
sahf
mov
popa
into
mov
mov
movd
cmp
sub
enter
push
add
lea
mov
xchg
mov
addb
mov
cmp
push
mov
sahf
and
ss
enter
lahf
push
test
inc
add
fistps
pop
in
mov
pusha
imul
pop
mov
repnz
sti
test
push
push
mov
inc
arpl
insb
xchg
jge
or
add
mov
jns
sti
ret
test
xrelease
push
mov
popf
push
or
dec
mov
lds
cmpsl
xchg
loope
int
jns
orl
inc
inc
jp
push
and
cmp
adc
sbb
mov
mov
es
mov
xor
enter
lret
pop
push
inc
lods
xor
cwtl
and
in
loop
lahf
push
and
ficoms
in
add
adc
pushf
cmp
lock
and
push
addb
repz
dec
fs
cmpsl
inc
lea
xchg
fwait
addr16
pop
fidivl
adc
mov
xor
mov
jnp
xchg
scas
push
cli
iret
jno
imul
and
ss
inc
ja
mov
test
cltd
cltd
mov
cltd
mov
mov
xchg
je
lcall
js
cltd
sbb
pop
add
inc
inc
jo
int3
std
ljmp
adc
or
lods
add
add
sar
inc
dec
imul
enter
pushf
xlat
xchg
sbb
mov
jnp
ret
aas
pop
push
loopne
mov
pop
cld
test
addr16
gs
out
loope
outsb
shrl
leave
test
lods
mov
mov
cmp
lcall
xchg
popf
test
imul
aad
sbb
ret
jns
in
scas
inc
dec
xchg
mov
cmc
jl
adc
test
scas
sbb
in
mov
mov
ljmp
imul
mov
cmp
push
dec
cltd
mov
into
xchg
lret
repnz
dec
lret
icebp
mov
aaa
ret
aas
or
adc
jl
fadds
ss
push
outsl
bnd
mov
xlat
lahf
hlt
cmp
sub
mov
dec
out
dec
in
jo
adc
iret
incb
lods
call
xchg
test
add
inc
mov
or
push
je
js
rorl
sub
mov
xor
cmp
cwtl
mov
outsb
in
scas
aam
in
mov
enter
or
scas
inc
push
adc
mov
jl
sbb
scas
test
add
out
test
push
xchg
xchg
int3
and
loop
cmpsb
jns
push
push
pop
test
imul
lds
in
mov
js
hlt
inc
ljmp
int3
ficoml
js
adc
imul
fidivl
ss
aas
loope
xchg
js
cmp
sbb
xlat
cmp
pusha
ja
mov
cmp
imulb
push
sub
xchg
test
jbe
push
insb
clc
popa
mov
mov
push
lock
pop
ds
data16
dec
je
cmp
ficomps
cmp
ja
xchg
mov
adc
lret
shll
pop
sbb
xor
call
mov
movsl
sub
loope
loope
movsb
testb
fs
pop
aad
ret
xor
ffree
sbb
insl
cmp
fdiv
xchg
sbb
dec
aad
je
test
ss
cmp
mov
arpl
in
sahf
inc
add
dec
es
neg
push
fiaddl
popa
mov
mov
shlb
test
mov
loopne
js
stos
xchg
and
loope
mov
jno
aas
sub
mov
push
cmpsl
mov
fcompl
popa
in
sbb
into
xchg
or
sub
test
jno
ljmp
push
ficompl
inc
loop
mov
lods
adc
mov
mov
jae
push
push
jl
std
push
or
jl
cmp
mov
push
sahf
scas
push
mov
mov
sti
mov
jle
cs
dec
je
pop
jae
pop
jne
rol
xchg
pop
sbb
loope
inc
insb
sub
sub
dec
sbb
sub
pop
or
es
add
jg
insl
mov
fidivs
dec
xchg
enter
cs
shlb
imul
sub
enter
and
adc
outsl
dec
adcl
xor
jbe
xlat
insl
or
dec
fsts
cmc
cmp
mov
sbb
jae
cli
lcall
add
imul
xlat
out
push
incl
lcall
repz
cmp
xlat
add
in
cld
mov
push
outsl
aaa
mov
scas
dec
movsb
xor
imul
adc
sbb
sub
shl
lods
xor
insl
mov
xor
das
pop
sbb
push
xor
js
pop
sti
sbb
je
int3
std
xchg
jl
inc
mov
push
popf
pop
ds
popf
rcll
fcmovb
push
push
or
xor
mov
xor
cli
sbb
mov
int3
rcl
mov
stc
into
popa
rorl
cmp
fnstsw
lahf
pop
les
xchg
pushf
xor
mov
sub
sti
pop
leave
or
push
hlt
xchg
pop
sub
ljmp
push
push
xchg
inc
cltd
inc
pop
fiaddl
insb
mov
out
mov
jns
pop
adc
imul
aaa
jge
ret
fdivs
adc
jo
jle
call
fstl
pop
dec
movsl
sbb
into
cwtl
push
rcrb
ror
mov
adc
rolb
push
mov
xor
out
xor
xor
xchg
add
int
test
xchg
ja
jb
pop
sbb
xchg
cli
inc
add
jnp
adc
mov
lods
pop
rclb
jne
cltd
mov
push
das
xor
popa
sbbb
pop
inc
loopne
pop
sub
push
lret
movsl
movsb
lcall
scas
dec
pop
nop
jp
sub
inc
sub
gs
add
mov
inc
or
mov
lcall
cltd
dec
int
push
and
jmp
mov
outsb
pop
xchg
mov
xchg
into
jae
fiaddl
movsb
lods
cmc
inc
sbbb
aas
and
mov
push
movsb
cmp
into
push
int3
clc
mov
bound
outsb
pop
mov
and
unpcklps
hlt
cmp
in
int3
int
and
test
out
adc
add
xchg
sbb
xlat
dec
clc
mov
mov
stos
add
add
xchg
pop
addr16
pop
cmp
cld
push
xor
aas
scas
aaa
enter
sub
aas
subps
and
xor
mov
cli
pop
jb
lea
pushf
outsl
jmp
mov
dec
inc
mov
pop
sub
scas
push
sub
mov
jnp
push
lret
jp
pop
cmpsl
test
movl
aam
xchg
lret
imull
scas
aad
sbb
test
lcall
cs
mov
xchg
push
out
mov
in
xchg
mov
nop
shll
orps
jle
stos
imul
or
xor
mov
jno
cmpsb
xchg
mov
call
inc
xor
ficompl
inc
jp
xchg
insl
cmp
decl
cmc
push
and
repz
adc
cld
mov
inc
clts
pop
aaa
jne
jo
popa
repz
subb
cmp
movsb
jmp
je
incb
xchg
enter
and
out
lret
sbb
pop
inc
sub
dec
lea
cli
out
das
jns
sub
cmpsb
call
mov
jbe
es
cmp
cmpsb
push
lret
push
ljmp
out
cli
sub
movsb
repz
fldl
aam
push
sbb
leave
pop
xchg
mov
sbb
cs
leave
mov
call
xor
push
push
das
test
sub
add
aad
sub
pop
into
shrb
mov
lret
ja
mov
pop
jbe
pushl
xchg
mov
mov
outsl
xor
cmp
push
or
jp
xchg
and
fistps
loope
ljmp
fcoms
sbb
bound
icebp
push
or
mov
lret
test
pop
aad
icebp
or
pop
xor
repz
mov
mov
int3
repnz
mov
and
loopne
cld
div
fimuls
cmp
addb
pop
or
mov
outsb
pop
or
in
jp
cs
adc
mov
mov
jb
inc
lret
jl
mov
fstl
fbstp
sub
add
dec
testb
mov
pop
mov
pop
jp
outsb
outsl
out
push
adc
loope
xor
lret
mov
pop
faddl
xchg
cwtl
mov
mov
cs
add
cmp
cmp
sti
and
lret
cmovno
cmp
ja
cmp
mov
dec
aam
ret
mov
movl
xchg
sti
in
inc
into
out
sbb
push
shrl
adc
mov
mov
mov
inc
test
outsl
inc
sbb
jno
das
dec
cmp
xor
mov
add
cmp
sub
out
popf
shl
mov
pop
push
dec
inc
jmp
rcll
xchg
xchg
into
jl
push
mov
fistpll
outsl
stos
mov
xchg
loope
lea
adc
mov
add
mov
or
daa
jae
roll
push
push
jg
mov
xlat
pop
lock
test
push
nop
pop
arpl
and
xor
jno
es
inc
jmp
iret
int
sbb
jecxz
bound
movsb
sub
and
lret
push
out
dec
in
cwtl
pushw
dec
xor
jno
test
add
int
lret
or
mov
sarl
push
jp
mov
rol
pop
fiadds
pop
sbb
jb
adc
add
fstpt
out
xchg
add
inc
push
cmp
in
repnz
mov
imul
adc
xchg
add
aas
push
sub
mov
mov
test
add
pop
ds
mov
adc
lret
mov
das
cmp
mov
repnz
pop
call
inc
ds
dec
das
frstor
fcmovnb
lds
cmp
test
int3
mov
jle
jp
outsl
sub
test
mov
xchg
mov
adc
pop
int
shlb
mov
mov
mov
jle
in
push
push
sub
rcl
add
stos
xchg
dec
pop
lahf
pop
cmp
and
sub
loop
push
or
jmp
xor
push
lret
hlt
push
jnp
xor
mov
scas
aad
out
test
addr16
mov
les
xor
arpl
outsb
xorb
ljmp
cmc
lods
xor
pop
iret
bound
lods
mov
xchg
xchg
push
add
push
push
push
jp
movsb
es
add
inc
pop
or
cs
push
scas
fucomp
cmpsl
and
pop
inc
pop
pop
jns
sti
mov
loopne
cmp
jp
test
xchg
mov
mov
repz
dec
add
add
arpl
and
das
pop
jnp
js
pusha
lcall
and
mov
out
sti
add
mov
add
mov
inc
xor
mov
cld
mov
ss
or
jns
lcall
pop
aas
stos
mov
and
and
fcompl
dec
fbstp
push
or
jbe
insl
sahf
into
cs
add
lahf
or
enter
imul
inc
xorl
stc
stos
sub
inc
dec
lahf
nop
jge
xchg
adcb
bound
out
jecxz
mov
xor
enter
xorb
add
rcrl
xchg
mov
iret
dec
cmp
add
sbb
divb
insb
shrl
cmp
ret
bound
mov
inc
leave
lahf
enter
push
xor
lahf
std
cmp
or
inc
push
mov
xchg
dec
movsl
int
testb
push
daa
subl
sub
and
mov
xchg
xchg
cs
jmp
mov
xchg
mov
cmpsb
iret
cmp
rcrl
xchg
aad
outsb
xor
inc
dec
stc
mov
inc
mov
addl
dec
or
stos
and
daa
push
out
out
mulb
push
sub
fistpl
iret
fstps
jae
or
push
sbb
push
mov
out
mov
cmpsl
push
loope
fisttpl
inc
push
in
aaa
lret
mov
mov
rolb
mov
adc
movsb
fnstsw
inc
inc
pushf
ds
push
lods
dec
movsl
addl
leave
push
or
xchg
mov
push
push
jns
adc
cmc
loop
and
insl
mov
adc
into
jns
xchg
jnp
sbb
mov
cwtl
pop
call
adc
mov
push
xchg
mov
mov
or
andb
rcrl
decl
lds
push
dec
add
test
pop
jl
dec
sahf
jb
or
in
pushf
cwtl
jle
mov
push
fadds
pop
cwtl
dec
faddl
fdivr
outsb
sbb
js
lret
xchg
movsb
iret
sbb
gs
cmpsb
pop
cld
mov
lahf
ljmp
sub
test
inc
pop
lds
and
pop
in
mov
lahf
dec
out
mov
jo
dec
ficoml
and
inc
adc
mov
push
aad
mov
rcll
in
inc
rcr
dec
mov
push
mov
pop
adc
jl
in
out
mov
orb
cli
lret
repz
aaa
popa
pushf
mov
add
dec
incl
mov
jne
out
and
pavgb
add
mov
sub
icebp
lahf
dec
das
push
xchg
shrl
lods
pushf
scas
inc
aad
es
stc
bound
repnz
jg
add
mov
mov
xchg
sub
ret
xchg
in
shlb
fadds
test
push
int
sbb
cmp
lcall
ret
pushf
jmp
out
ret
cs
dec
mov
xlat
mov
iret
xor
push
lock
out
mov
push
cli
sti
and
xor
xchg
scas
jg
sti
sbb
cvttps2pi
cmpsl
lock
dec
sub
les
test
mov
inc
fwait
xor
ret
nop
sub
outsl
mov
push
lahf
push
test
imul
mov
or
inc
lods
adc
mov
mov
or
loope
add
push
pop
ja
into
arpl
outsb
pusha
mov
fmulp
push
es
stos
jns
call
mov
push
sub
sar
add
outsb
arpl
lahf
cmp
loopne
ret
repnz
lds
or
add
sahf
out
jae
add
xchg
or
pop
sbb
mov
stos
lds
xlat
sub
subb
dec
and
call
and
mov
add
sub
in
idiv
adc
inc
faddl
in
pop
mov
adc
bound
cmp
xor
ljmp
add
mov
scas
out
loopne
xchg
jmp
lahf
andb
lods
test
push
mov
ret
popf
add
fdivs
pop
mov
inc
jns
jb
xchg
lds
mov
fiaddl
movsb
xlat
mov
cs
test
jge
ret
pushf
add
scas
cwtl
pop
lahf
push
scas
push
leave
into
xchg
hlt
dec
mov
xor
stos
push
mov
lahf
jmp
mov
push
or
lock
lock
jne
test
adc
sub
enter
cmc
cmc
scas
jp
cld
xor
and
sub
fdiv
push
dec
inc
adc
cltd
mov
push
sbb
iret
es
jle
out
sub
xchg
sbb
jmp
std
jnp
mov
shrl
jno
sbb
movsl
mov
lret
dec
aaa
mov
pushf
cmp
lret
ljmp
std
rcr
add
test
cmp
leave
add
call
mov
push
daa
in
sbb
std
sbb
mov
mov
test
mov
or
lret
sub
jg
xchg
mov
fimuls
push
mov
cmp
aas
hlt
inc
mov
mov
jnp
adc
push
outsb
addb
and
lock
aas
xchg
repnz
lea
inc
sbb
in
lcall
jmp
int
jns
adc
rolb
fsub
dec
dec
int
pop
mov
jecxz
pop
xor
cld
xorl
cld
jns
xchg
ljmp
xor
aaa
mov
jbe
push
push
repz
sbb
dec
js
xorl
add
mov
stos
sti
or
jo
out
scas
fprem
inc
push
jmp
imul
loop
mov
out
xchg
mov
aaa
add
pop
mov
sti
lds
push
pusha
mov
imul
out
or
sbb
xchg
call
jne
or
lock
xor
inc
mov
sub
mov
sahf
bnd
adc
dec
mov
add
icebp
push
mov
push
lret
inc
pop
imul
add
dec
fiadds
data16
jo
jnp
dec
push
cwtl
aam
and
jle
lods
jp
inc
mov
mov
mov
sti
cmp
js
jg
aaa
into
sub
pushf
pop
sbb
mov
fisubl
adc
stc
das
in
jp
int
push
mov
sbb
int3
jo
mov
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
jmp
iret
xor
addl
adc
xor
fiaddl
cmp
jp
mov
adc
js
and
mov
mov
outsl
cs
sbb
jl
inc
aad
setne
adc
push
fimull
test
sbb
mov
in
int3
cmp
scas
and
call
outsb
ja
sbb
in
lahf
mov
mov
xor
fwait
mov
rorl
push
in
inc
lcall
pop
ja
aaa
add
xchg
cld
adc
adc
pop
cmpsl
addr16
mov
aas
into
scas
ret
jmp
mov
cmc
repnz
and
lock
sub
aaa
push
push
daa
or
sbb
or
sti
xchg
sub
mov
hlt
push
movsb
mov
push
icebp
fbld
cmp
mov
pop
je
jmp
mov
out
sti
push
mov
xchg
dec
cmpsl
add
pop
fs
std
int3
lds
xor
inc
xchg
cmp
call
push
mov
mov
cltd
dec
pushf
adcb
cld
mov
sbb
call
stos
outsb
fdivrs
jp
sbb
ja
mov
push
or
cli
test
xchg
sbb
sub
lds
pop
inc
adc
lea
bound
jne
mov
push
popf
fcoml
cmpsb
inc
mov
pushf
xor
jne
mov
xchg
mov
inc
loop
cmpsb
jge
fstpl
notl
push
adc
fs
fldenv
inc
loope
cmp
push
pop
mov
mov
dec
daa
dec
enter
movsl
mov
das
add
jo
lret
push
mov
push
lea
xor
cld
jmp
ljmp
jge
adc
mov
int
mov
mov
sbb
sbb
stos
ret
pop
lods
imul
fistps
sbb
mov
cli
pop
xor
jp
repz
jne
div
mov
shr
jb
add
std
sub
pcmpeqd
push
and
lods
and
xchg
and
dec
xor
dec
inc
loop
mov
fsubrl
mov
loope
jg
cmc
push
mov
adc
fldl
xchg
inc
mov
or
cmp
subb
fdiv
jg
out
out
movb
push
push
iret
cmp
sub
and
in
int3
dec
clc
mov
and
fists
ss
int3
shr
loope
insb
push
mov
jmp
cmpsl
inc
divb
in
sbb
andb
mov
imul
add
int
popf
aad
xor
loop
js
jae
mov
mov
es
stos
fsubl
xchg
aad
fsts
dec
lods
push
add
inc
xchg
cmpl
int3
pop
mov
inc
mov
insb
dec
jo
or
cmp
adc
je
lock
cmp
xchg
insb
cli
hlt
push
cmpsl
fwait
mov
jecxz
jl
cmp
mov
dec
adc
mov
es
popl
loopne
cmp
insl
jno
add
adc
fildl
mov
icebp
call
add
adc
sub
push
mov
push
je
inc
repnz
stos
mov
mov
and
and
imul
popf
adc
add
lods
je
cld
std
insl
xchg
repz
int
aad
testb
outsl
jp
scas
and
mov
jmp
jmp
jg
xchg
nop
sub
fmul
push
test
inc
sbb
out
pop
enter
add
in
xor
mull
lds
call
jp
es
mov
mov
ficompl
mov
jmp
sbb
filds
cmpsb
pushl
or
pop
iret
outsl
stc
pop
push
imul
add
xchg
repnz
jge
mov
js
jnp
jl
xchg
std
int
scas
mov
popf
in
comiss
sti
mov
js
sbb
mov
sub
shlb
mov
insb
fisttpll
inc
xorb
lahf
xchg
fwait
out
inc
cmpsl
out
sbb
dec
out
push
dec
fs
xchg
nop
sbb
cld
call
dec
xchg
jg
and
xchg
nop
and
arpl
dec
sbb
lret
dec
es
dec
mov
outsl
fmuls
pusha
dec
gs
stos
cmpsb
jne
push
lods
jge
cmp
dec
int
hlt
pop
sbb
fwait
in
movsl
shll
insb
popa
stc
mov
xor
jge
test
add
cmp
xchg
and
xchg
or
incl
dec
clc
or
test
mov
sbb
sbb
push
movsb
jne
jg
insl
inc
xchg
adc
mov
cwtl
popa
aaa
sbb
adc
movb
push
push
push
sahf
ja
mov
jne
mov
sbbl
sub
and
or
jns
out
or
fbstp
incl
lods
mov
daa
add
dec
dec
dec
out
inc
or
adc
xchg
or
stos
push
leave
jge
jecxz
movsl
les
sub
mov
cmpsl
inc
aaa
pop
adc
pop
lods
hlt
inc
ja
jnp
bnd
leave
lds
lods
lret
into
stc
dec
jp
scas
popf
inc
inc
xchg
inc
sbb
sahf
add
fcomps
mov
popf
add
mov
xor
xchg
in
lahf
outsb
xchg
je
mov
pop
fdivs
into
divl
push
stos
inc
repnz
stos
cli
mov
mov
insl
mov
or
jecxz
push
and
pop
lods
arpl
idivb
rcrl
dec
mov
fmull
ret
mov
imul
repnz
dec
xchg
mov
pop
int
xor
cmpsb
popf
orb
xchg
pop
scas
into
sub
bound
lock
or
adc
ja
cli
and
mov
mov
out
mull
add
inc
stc
hlt
popf
ficomps
stc
outsl
hlt
loop
or
mov
daa
add
and
xchg
or
jae
mov
inc
jle
pop
fadds
and
dec
pop
fcomps
repz
inc
sbb
adc
xor
enter
aam
xor
ss
push
cmp
cwtl
sahf
mov
call
cld
sbb
addr16
lock
lods
pop
repnz
xchg
adc
xor
sahf
mov
cltd
cmp
xchg
ljmp
sub
jg
xchg
cmp
pop
int3
or
push
in
cmp
push
jle
adc
pop
inc
mov
adc
mov
and
dec
add
dec
inc
cmp
fucomi
pop
xchg
pusha
inc
fimull
fs
cli
add
test
out
xchg
mov
cmp
sahf
movsb
mov
adc
xlat
cs
faddl
sub
pop
aaa
and
dec
aad
rep
insb
dec
sbb
cli
mov
inc
push
add
aam
in
add
fdivrs
or
inc
adc
sbb
mov
mov
mov
and
pushf
mov
lahf
lock
aas
out
hlt
xor
testb
push
cltd
imul
xchg
je
pop
xor
dec
clc
jmp
cmp
xor
xchg
dec
stos
out
in
decb
cmp
mov
lock
sbb
repnz
push
cld
outsb
jmp
mov
dec
cmp
test
push
lret
fsubrs
out
in
addr16
les
out
insl
loope
int
and
xor
xor
loop
sbb
loopne
mov
push
imul
cs
cmpsl
mov
lret
scas
sbb
adc
test
xlat
add
arpl
dec
jg
in
lods
add
cmp
cmpsl
pusha
xorb
jb
or
add
mulb
ds
cli
insb
xchg
push
push
ret
fildll
or
out
or
mov
mov
pop
out
in
test
pop
lds
lods
sbb
jmp
xchg
pop
int3
xchg
jl
adc
inc
das
rcll
insl
mov
xchg
arpl
or
pop
sti
imul
shll
inc
mov
call
out
cli
frstor
or
int3
jecxz
clc
sub
jae
mov
xchg
jmp
mov
jecxz
cmp
or
mov
adc
xor
xlat
cli
fnsave
out
jmp
ss
mov
test
inc
movsl
cmp
pop
in
mov
adc
data16
test
pop
cmp
js
mov
pushf
ret
insl
adc
outsl
cmp
sub
xor
xchg
shr
mov
in
xchg
jae
mov
arpl
in
stos
add
scas
cmp
xchg
push
and
sbb
test
imul
outsb
or
ret
int3
xor
pop
push
stc
dec
mov
shrl
lods
jecxz
fnstsw
cmp
sub
gs
daa
clc
cmp
jp
popf
xchg
loop
or
vunpckhps
cmpb
clc
rclb
jle
iret
add
sbb
scas
clc
shlb
adc
mov
sbb
jne
push
imul
imul
xor
mov
test
icebp
ficoml
lea
in
cmpsl
mov
adc
add
jl
sbb
sti
mov
decb
out
jl
push
rol
inc
adc
test
jbe
mov
add
sbb
int
lret
pop
repnz
pop
dec
in
lret
pop
cmpsl
and
inc
shll
mov
mov
sbb
aaa
xor
xchg
add
inc
push
xchg
pop
sbb
xchg
add
jb
mov
shrb
inc
sub
pop
or
pop
fistpl
sbbl
sti
jle
pop
aam
insl
mov
scas
add
les
add
lret
out
stos
stos
add
mov
adc
pop
jg
sub
jmp
out
hlt
test
lret
jp
jo
gs
sbbl
and
mov
inc
call
icebp
pop
sahf
or
movsl
jg
mov
int3
scas
jle
imul
or
les
mov
lret
pop
mov
add
test
das
out
add
push
xchg
aad
bound
jp
cmp
aam
mov
mov
aaa
into
xor
aaa
repnz
pop
std
clc
adc
in
pop
push
jmp
test
arpl
jno
out
out
shrb
roll
repz
cmp
dec
andl
jmp
jne
outsb
adc
jbe
lds
pop
mov
sti
aam
mov
dec
add
rorl
push
xor
imul
iret
mov
movsb
xchg
jnp
jno
ret
xchg
xlat
dec
inc
aas
lcall
mov
jecxz
sbb
ret
das
xchg
jae
mov
dec
jge
sbb
adc
popa
fiadds
adc
and
cmpl
lcall
push
mov
ss
cmp
lods
aam
xchg
es
jp
mulb
cld
lods
xchg
ja
and
stos
into
push
jo
inc
push
leave
dec
mov
dec
push
jecxz
leave
inc
inc
mov
sbb
cli
sahf
mov
sbb
sub
inc
sub
test
sbb
mov
cwtl
mov
lahf
sub
imull
andps
fisttps
mov
adc
sub
inc
stos
xor
adc
sarb
push
pop
lret
jns
loopne
and
fdivs
fisubrl
ret
pushf
adc
inc
or
inc
std
jmp
jp
shlb
mov
outsb
sahf
or
scas
in
adc
pop
and
pop
fwait
mov
push
sar
mov
or
aaa
in
lods
pop
pop
ljmp
aad
adc
scas
leave
mov
and
cmp
push
pop
add
or
xchg
pop
adc
add
fwait
push
imul
aaa
adc
jle
je
sbb
neg
sbb
xor
aam
aad
mov
shlb
xchg
mov
icebp
push
int
movsl
popf
push
lea
sahf
mov
sbb
sub
shrb
push
xor
jo
cmp
mov
dec
mov
sarl
mov
push
mov
or
push
in
dec
cs
sub
adc
mov
aaa
mov
mov
or
inc
inc
pop
mov
ret
gs
sbb
adc
push
stos
cmpsb
pop
mov
mov
and
ss
les
mov
xchg
adc
aas
idivb
sbb
mov
aam
mov
lods
pop
cmp
iret
jae
mov
out
jno
pop
xchg
jge
push
test
mov
push
mov
subl
outsl
mov
sarl
jle
ret
out
cmp
lea
out
push
pop
dec
cld
jns
lods
fdivl
jp
mov
fcmovu
add
dec
adc
sbb
loop
dec
cmpsb
mov
adc
fcoms
jne
jne
pop
pusha
test
jbe
or
or
mov
and
int
push
mov
rcll
jle
shll
fcompl
ret
sub
loope
cmpsb
mov
loope
lods
mov
and
je
cmpsl
dec
in
int
xchg
cmpl
rcrl
jne
cmpsl
adcl
xor
icebp
addr16
add
cmc
in
dec
int3
jle
repz
lock
out
cmpb
sbb
xor
lret
push
mov
pushf
mov
es
cmp
roll
adc
ja
dec
out
push
les
in
jge
pop
mov
jnp
pop
lcall
iret
out
sahf
xchg
mov
out
jecxz
jne
cmp
sarl
mov
shl
xlat
shlb
mov
mov
aas
xor
aas
test
jle
repz
jae
in
in
addr16
pop
dec
push
rolb
bound
std
mov
dec
xchg
dec
ret
ret
mov
insl
jp
mov
scas
repz
mov
jmp
xchg
cmpsl
out
xlat
xor
push
adc
mov
adc
mov
leave
in
ret
xchg
sbb
das
jbe
dec
pop
jno
and
jae
xchg
mulb
cmp
sbb
insb
xchg
sbb
adc
sahf
test
fsts
pop
movsb
add
xchg
int
adc
push
testl
jno
lret
cmp
add
or
xchg
sti
pop
in
mov
inc
popa
enter
xchg
inc
lods
or
sbb
lds
std
loopne
push
xorb
jecxz
je
popa
xchg
sarb
jb
or
test
lock
pop
es
pop
aad
dec
test
or
stos
xchg
jecxz
mov
ret
out
in
adc
push
jmp
hlt
lods
pop
mov
idivl
je
and
xchg
mov
cld
stc
xchg
js
pop
pop
cwtl
dec
inc
or
push
xor
cs
popa
pop
cmc
xchg
xor
imul
rclb
mov
or
inc
push
loop
adc
inc
pop
mov
lret
xlat
dec
cmp
div
aam
mov
jl
jecxz
jae
lds
dec
fsubs
jmp
rolb
in
ds
push
jge
shr
lods
cs
dec
push
shll
insl
pop
ljmp
les
pusha
mov
es
or
out
mov
inc
jg
and
add
js
xchg
cmpsl
jl
cmp
int
inc
pop
inc
outsb
mov
xor
xor
push
and
push
jmp
fsts
leave
sbb
push
scas
mov
jae
pop
shll
adc
gs
cmp
or
dec
lret
jb
lea
mov
inc
push
mov
outsl
out
repnz
aas
popf
aaa
push
add
mov
sbb
aad
sub
dec
movsb
mov
pop
out
jb
enter
gs
and
in
xor
enter
jbe
inc
mov
or
aaa
push
mov
pop
fildl
mov
jge
daa
repz
dec
xchg
incb
jns
insl
dec
pushl
pop
and
push
xchg
es
stos
pop
insl
xlat
mov
mov
cmpb
adc
loope
jo
outsl
fsubl
imul
jmp
dec
mov
std
icebp
jmp
push
xchg
and
hlt
adc
dec
clc
aaa
add
cltd
loopne
movl
xchg
fistps
fdiv
dec
xchg
mov
cmp
test
jo
jmp
pop
fisttps
lret
leave
fdivrs
pop
jo
xor
scas
pushf
and
bound
into
js
invd
push
jp
pop
imul
push
xchg
ret
fbstp
clc
pop
fistps
nop
gs
adc
int3
dec
xchg
popa
std
push
fcom
dec
xchg
xchg
jg
out
sub
jg
sbb
rol
cmc
mov
mov
mov
and
in
inc
mov
pop
sbb
in
push
lds
mov
fmull
add
pusha
push
insb
ljmp
popa
lds
xor
jbe
adc
sbb
aaa
dec
sub
leave
jp
loopne
jge
pop
mov
ss
mov
jbe
cmp
clc
and
sbb
fs
jg
sbb
out
cmpl
outsb
sti
cli
adc
mov
insl
aad
inc
sbb
jmp
cmp
or
inc
inc
jp
outsb
jmp
xlat
test
jnp
jmp
mov
sbb
push
das
mov
cmpsl
cmpsl
push
fiaddl
cwtl
hlt
mov
lret
cmpsb
jo
insl
mov
fmuls
mov
inc
dec
cmc
sti
inc
cmp
sbb
pop
xlat
cmp
mov
loopne
inc
pop
xchg
ljmp
dec
jne
test
xor
stc
iret
and
outsb
pop
inc
roll
mov
sbbl
pusha
sbb
shll
lret
dec
loope
shl
mov
lcall
lods
mov
movl
imul
xlat
shlb
lea
inc
mov
add
enter
push
and
cld
out
add
push
and
dec
adc
pop
inc
in
std
imul
decb
push
mov
dec
and
lahf
das
js
sub
push
rclb
fldcw
jae
sub
cmpsb
scas
jb
push
xor
pop
insb
outsl
ja
divl
popa
sbb
out
out
mov
and
aas
in
test
mov
cmp
pop
pop
clc
aad
call
add
add
loop
mov
test
push
add
push
jno
mov
mov
mov
repnz
cmp
or
ret
fisubrs
xchg
push
jae
mov
imul
sub
in
jle
adc
xchg
outsb
or
lock
mov
pop
add
sbb
lcall
adc
fisttps
jne
jnp
je
shll
aad
dec
xor
mov
loope
stos
mov
xlat
ljmp
fdivrl
repz
gs
ror
imul
or
xorb
add
cltd
add
pop
jle
push
push
mov
fisttpll
repnz
les
loopne
je
add
mov
add
or
xchg
xchg
or
fxtract
add
push
and
pop
movsl
scas
subl
and
imul
and
std
jge
push
cltd
int3
xor
dec
sbbb
mov
fstps
stos
lret
sub
mov
mov
std
inc
sub
fmuls
pop
xor
dec
cmp
ljmp
cmp
mul
mov
add
jns
and
push
push
test
imul
push
mov
movsb
das
pop
mov
fmull
dec
mov
nop
xor
add
test
out
adc
jmp
xor
lods
std
repz
xlat
inc
out
sbb
in
push
cmp
and
data16
mov
hlt
mov
fidivrl
sbb
push
out
iret
out
int3
cld
xchg
pop
adc
fiadds
pop
mov
sub
lret
or
ljmp
dec
ss
jbe
mov
sub
inc
add
aas
fs
push
cmc
hlt
inc
dec
testl
out
jecxz
imul
xchg
mov
pop
and
fwait
into
lret
call
in
pop
out
cltd
xor
mov
in
iret
push
arpl
aad
gs
mov
leave
cs
inc
outsb
stos
cld
hlt
addb
mov
call
das
pop
xchg
shlb
push
daa
insl
mov
fsubl
fbld
dec
repnz
xor
js
jp
insl
push
xor
dec
jno
ljmp
jo
xchg
scas
gs
fdivrs
mov
pop
das
loope
pop
pop
inc
pop
add
fcmovne
or
fnstcw
pop
and
lock
xlat
arpl
sbb
cwtl
lods
enter
fildll
in
or
cmp
adc
std
mov
loopne
std
push
push
or
stos
ret
jnp
icebp
mov
or
push
mov
xor
or
xchg
gs
mov
pop
jecxz
add
sbb
insl
enter
loopne
adc
push
mov
out
sub
mov
test
push
pop
out
ja
jno
push
push
push
inc
mov
dec
xchg
xor
lret
call
shlb
ljmp
mov
push
pop
into
cmp
das
jge
mov
std
leave
mov
push
aas
mov
mov
cmp
out
loopne
sub
sub
jp
and
je
int3
add
pop
inc
rorb
mov
xchg
hlt
imul
fsubl
mov
xlat
pushf
cltd
cmp
cld
in
push
jp
push
sub
aad
adc
ds
and
insb
or
mov
ja
loope
jne,pt
xor
jmp
bound
add
push
and
xchg
loopne
popf
pop
jns
adc
jl
inc
pop
pop
mov
dec
ret
inc
xor
loope
and
inc
fsubl
mov
mov
lock
pop
repnz
dec
stos
mov
push
jg
mov
dec
jl
int3
add
and
outsb
dec
lahf
jmp
sbb
ljmp
mov
xor
jno
and
sbb
and
aas
shl
fstpl
das
dec
fimuls
jnp
mov
jge
mov
push
adc
mov
test
cwtl
jg
cmpsb
jle
daa
movl
xor
dec
addr16
inc
in
cmpsl
mov
out
mov
out
ds
sbb
dec
repz
or
mov
fsubr
scas
inc
mov
xchg
sub
loop
fwait
jp
xlat
mov
dec
mov
cmp
mov
leave
cmp
stos
jmp
cli
xor
cwtl
push
out
mov
stos
leave
in
or
push
mov
and
repnz
cmp
ja
jmp
insb
fwait
xor
pop
les
fldcw
lods
cmp
int
sub
dec
clc
xor
fidivrl
pop
das
mov
repnz
add
xchg
push
pop
inc
jns
hlt
dec
decl
adc
dec
xor
outsl
popl
mov
not
dec
stos
xchg
dec
test
adc
lds
sbb
or
stos
lods
add
cltd
add
mov
shl
push
sbb
push
or
das
mov
lret
or
adc
pop
mov
les
push
mov
fists
sti
pop
or
adc
cmpsb
mov
cmc
pop
fmuls
out
pop
lea
gs
jns
and
fdiv
pop
push
daa
lea
sub
jp
add
push
repnz
and
lahf
pop
add
jns
call
ja
mov
dec
push
cwtl
ret
insb
fwait
xchg
cmp
sbb
xor
xchg
push
push
push
out
stos
or
loope
lret
jne
gs
cltd
outsb
shrl
ja
mov
and
xor
idivb
push
clc
ja
mov
inc
repz
push
sbb
mov
in
jo
loope
shlb
dec
xor
sub
xchg
in
pop
mov
jb
loopne
xchg
sbbl
pop
and
cmc
mov
mov
mov
push
test
popf
repnz
xchg
test
gs
stos
movntq
out
cld
stos
insb
or
ror
mov
jmp
jo
mov
mov
add
out
bound
std
jmp
gs
mov
repz
cmp
scas
es
push
testb
xor
lock
dec
nop
dec
sbb
rcr
xchg
push
mov
xor
push
xchg
popa
fsub
push
cmp
cmc
inc
popf
fimuls
adc
dec
dec
or
ja
cltd
mov
lret
shlb
out
scas
ret
mov
mov
call
in
jb
lods
das
ret
shll
leave
shl
imul
lea
xor
in
and
cmc
jo
mov
mov
adc
mov
ss
add
mov
pop
mov
inc
clc
or
push
pop
push
lret
or
aaa
jno
dec
andl
mov
inc
aad
jb
mov
jecxz
xchg
gs
scas
dec
adc
or
sbb
sti
cltd
lret
out
loop,pt
repz
sbb
lock
pop
mov
sub
cmp
pop
in
xor
and
rclb
mov
pusha
stos
push
rolb
je
clc
lcall
ds
jmp
pop
shlb
cmp
fwait
data16
fnstenv
daa
push
test
xor
out
pop
mov
shlb
cmp
dec
push
jno
add
jmp
repnz
shrl
loope
pop
mov
icebp
clc
ret
mov
mov
xor
aad
xchg
lret
outsl
lods
ror
mov
bound
pusha
mov
shrl
pushf
loope
add
es
push
adc
mov
stc
jne
pop
insb
movsb
cmpsl
pop
mov
cld
les
mov
das
loop
and
in
inc
push
repz
hlt
imul
je
adc
fwait
mov
and
pushf
pop
aas
jle
cld
mov
mov
outsl
mov
rolb
imul
ds
outsb
ret
movsb
subb
sbb
bound
mov
std
mov
mov
jge
add
jae
mov
pop
popf
adc
subl
jns
sub
rolb
verw
icebp
sbb
std
mov
ficomps
cmp
pop
jge
pop
mov
jo
pop
das
daa
xchg
stc
mov
pop
fstpl
divl
pop
aas
jbe
insb
push
jp
sub
jge
adc
cwtl
mov
outsl
fiadds
mov
test
pop
mov
movsl
lea
cli
mov
ja
push
loope
dec
sti
out
adc
repnz
add
rol
test
mov
xchg
hlt
mov
es
xchg
mov
shlb
jl
dec
ds
inc
ss
out
cld
sub
imul
push
fisttpl
push
jns
or
out
cmpb
and
dec
pushf
loopne
mov
add
mov
fisttpll
pop
xor
or
fwait
mov
inc
mov
mov
sbb
mov
xchg
mov
shll
into
and
iret
mov
dec
in
pop
pop
clc
mov
inc
std
sar
cmp
stos
les
inc
mov
rcr
inc
dec
adc
movsl
inc
push
insb
insl
push
ret
xchg
dec
and
cmp
stos
xor
in
fnsave
xchg
mov
insb
outsb
sub
add
scas
arpl
test
lock
adc
sbb
ljmp
jno
int
xchg
movsl
push
fmuls
mov
push
xor
cli
in
hlt
mov
xchg
mov
xor
sbb
xor
add
add
lods
jle
imul
sbb
mov
mov
stos
xchg
xchg
lods
addr16
adc
lea
adc
mov
xorb
js
push
das
scas
cli
outsl
call
incl
dec
sahf
cmc
in
mov
dec
jno
sbb
lahf
dec
xor
jge
cmp
mov
fs
add
pop
mov
xchg
pop
stos
sbb
push
daa
or
add
cs
jo
gs
sbb
sti
lds
rcl
mov
je
sub
scas
pop
loope
scas
daa
jae
shrb
imul
pushf
add
in
sbb
sbb
addr16
pop
in
sub
mov
in
sbb
jecxz
xchg
pop
add
loopne
sub
sub
stos
mov
pop
dec
aas
out
fistl
call
adc
mov
sbb
push
lret
jmp
popf
dec
adc
subl
fcomps
inc
lds
in
mov
push
push
inc
test
sti
mov
mov
jl
aad
icebp
iret
loope
adc
pop
cld
call
sbb
push
mov
xor
sub
jle
sbb
icebp
xchg
in
loope
mov
es
or
cmp
mov
lcall
shll
adc
das
aas
inc
int3
cmp
xor
push
jge
lods
dec
add
adc
mov
ret
lcall
pop
jb
ret
int
mov
rolb
rorl
dec
mov
jae
cltd
bound
mov
sahf
xchg
push
js
fwait
sahf
xchg
loop
test
aam
xlat
aad
dec
movsb
sbb
das
dec
ficoml
rcrl
test
ret
adc
ret
in
adc
jp
push
push
mov
jp
mov
andb
fwait
movl
lods
jge
or
or
adc
xor
stc
sbb
and
push
jo
inc
movsl
dec
sahf
adc
inc
fstp
scas
xor
fwait
jp
out
push
xorb
or
adc
lcall
cmp
arpl
outsb
xchg
inc
jne
arpl
pop
dec
fimull
sbb
mov
and
scas
loope
fstl
ja
cltd
pop
xchg
and
mov
int3
and
lcall
add
mov
cmpb
push
push
dec
shll
pop
jecxz
cmp
and
ja
int3
xor
adc
sub
int3
cmp
adc
pop
cmp
icebp
frstor
dec
ffree
test
mov
cmp
sbb
mov
ds
ret
aam
lcall
scas
repnz
sbbl
test
mov
ds
orl
xor
add
jnp
imul
pop
jae
xchg
fists
stc
mov
add
ljmp
testl
loope
test
xor
sbb
cmpsb
sbb
pop
adc
sub
or
int
xor
lods
leave
loop
data16
push
cwtl
push
iret
jo
adc
add
rorb
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
pop
inc
mov
mov
clc
jge
sub
xchg
jp
cmp
jp
sahf
test
ret
jl
es
movsl
mov
adc
orb
jle
cmc
and
int
fwait
std
push
dec
jle
fldl2t
inc
outsl
mov
imul
fadds
xor
mov
mov
mov
clc
pop
cmpsb
dec
mov
testb
sub
inc
inc
loope
loopne
adcb
pop
into
xchg
popa
sub
sbb
sbb
cmp
jne
and
mov
push
or
icebp
dec
push
lock
mov
fidivs
loop
xorl
jmp
leave
les
or
outsl
push
xchg
les
mov
xor
mov
mov
out
mov
subl
in
jns
nop
mov
sbb
shlb
int
mov
lds
rcl
outsl
and
fimull
mov
lahf
int3
lahf
push
scas
jmp
push
and
push
add
cld
ds
sub
nop
mov
mov
mov
ljmp
xchg
fmul
loop
jecxz
and
aam
js
jp
jp
lsl
insb
dec
xor
aam
pop
push
mov
lods
jmp
fcmovnu
pop
xor
xchg
rol
dec
or
and
or
mov
or
iret
jmp
ret
addb
mov
inc
mov
inc
fiaddl
movsb
out
mov
sbb
loop
cmp
sbb
jmp
xor
mov
ss
sub
daa
in
cmp
aad
fnsave
cs
ret
rorl
mov
push
jg
adc
insl
sbb
xchg
sarl
sahf
mov
jg
aas
jb
scas
mov
fdivrl
inc
inc
ja
insl
shlb
mov
cmp
xchg
insl
push
push
ficoms
sub
rorl
ljmp
enter
mov
or
or
icebp
ljmp
push
daa
or
push
icebp
dec
popa
mov
jb
lods
movb
out
addr16
das
shll
jae
add
mov
dec
sbb
dec
ret
cmp
xchg
xor
dec
mov
push
mov
stos
push
mov
gs
adc
and
mov
insb
or
imul
mov
sti
pop
jle
clc
sahf
push
iret
add
xlat
lock
or
mov
xchg
mov
mov
pop
lds
roll
fdivl
std
mov
mov
out
shlb
unpcklps
movsl
push
pop
jmp
cld
iret
push
jp
icebp
add
bound
ljmp
mov
push
out
ret
xor
xor
rolb
sub
ret
pop
push
pop
mov
push
dec
push
out
mov
jp
cmp
inc
xor
adc
test
and
arpl
cmp
or
clc
pop
or
cmp
das
or
cmp
popf
and
add
fsubl
jecxz
stos
lcall
and
imul
ret
xchg
jmp
imul
dec
mov
popa
jae
adc
jge
xor
loope
shll
nop
popf
sub
inc
push
jb
cmp
jge
hlt
mov
push
mov
jp
not
push
imul
push
and
xchg
int
shrb
mov
inc
sbb
roll
imul
decl
mov
insl
movsb
cmc
popf
pushf
cli
rclb
sub
or
jno
push
jb
movsl
aad
mov
dec
xchg
or
pop
imul
jnp
gs
clc
cmp
stos
mov
mov
jno
xchg
lret
fcomip
pop
ja
das
pop
int
pop
xchg
xor
mov
pop
inc
frstor
movsb
pusha
ret
outsb
bound
out
dec
es
call
mov
mulb
in
das
das
xor
je
int
fmull
mov
arpl
jns
mov
mov
lahf
dec
cmp
aad
arpl
push
fs
insb
cmp
xchg
sub
fcompl
mov
mov
shll
aaa
mov
outsl
sub
dec
adc
cmp
or
pop
or
mov
cmc
push
push
xor
xchg
rol
push
xchg
dec
sub
in
shl
stc
addr16
pop
jl
movsb
xchg
test
jno
mov
stc
aas
sub
outsb
jg
movsl
and
jg
push
sub
sub
and
loop
fwait
cmp
and
sahf
jns
cltd
test
cli
sub
xor
fwait
and
cmp
sub
mov
pop
push
dec
cli
shl
sbb
adc
movsb
push
jp
push
and
push
inc
sti
mov
nop
xchg
cld
pop
add
hlt
dec
jno
into
cmp
sti
mov
insl
fs
lret
cmpsb
ficomps
sub
inc
inc
dec
inc
scas
loop
mov
push
and
addps
dec
mov
hlt
add
mov
sub
icebp
and
jae
lods
ret
xchg
mov
inc
push
and
frstor
mov
sbb
mov
mov
adc
dec
aad
test
ljmp
inc
xor
mov
imul
loope
vxorps
mov
jb
push
push
cwtl
mov
imul
adc
mov
fsubl
pusha
ret
jno
push
pusha
pop
push
dec
jbe
jmp
jle
xor
fisubl
ret
loope
or
cli
lds
add
add
cmp
xchg
ficoms
cwtl
cmp
sbb
xor
repnz
mov
sbb
inc
xor
or
cmp
outsl
adc
es
jns
sbb
lret
icebp
sti
fmulp
add
xchg
or
jns
mov
cmpsb
push
stos
shll
jle
mov
cmc
in
in
andl
cmp
sbb
xor
jg,pn
and
adcl
xchg
cmp
pop
jo
in
add
jb
je
mov
pop
lods
and
movsl
lds
sbb
push
xchg
insl
xor
aas
push
leave
sub
scas
or
jecxz
iret
adc
pusha
dec
cmp
popf
sbb
mov
jecxz
add
dec
pop
pop
or
or
in
je
cmp
imul
fs
ss
pop
dec
fcoml
mov
add
pop
sarl
lret
xlat
sbb
push
cmpsb
xchg
mov
divb
xchg
mov
mov
dec
cmp
hlt
mov
outsl
xor
pop
xchg
push
jae
xor
mov
bound
pop
jb
filds
ret
outsb
cld
adc
xor
pop
nop
leave
mov
in
jae
hlt
je
cli
div
outsl
xchg
sub
repnz
sub
dec
test
fisttpll
mov
in
aad
icebp
sbb
push
jbe
jnp
pop
jb
fs
lds
cmpsl
sub
repnz
or
loopne
bound
dec
add
or
int3
pushf
mov
movsl
in
pop
mov
aaa
clc
mov
repz
fsubs
sti
iret
ljmp
jo
movsb
pop
cmpps
out
push
and
mov
pushf
rcrl
jge
bound
inc
jl
cmp
lahf
cmp
add
push
clc
push
cmc
scas
sub
test
push
enter
jb
jno
pop
adc
scas
inc
xlat
mov
jae
push
cwtl
sub
push
lods
inc
popa
hlt
jae
test
gs
fucom
mov
int
fldl
sub
xor
std
pop
inc
xchg
aad
fidivs
shl
dec
sarb
fsubs
sub
pop
jbe
es
adc
loope
fucomip
test
push
jmp
mov
inc
or
or
mov
lock
inc
xchg
addr16
add
decl
mov
push
rcrl
jecxz
ret
in
cmp
insb
jecxz
cmp
mov
pop
out
das
cli
add
stos
sbb
and
push
shlb
data16
fs
stc
lds
adc
adc
out
popl
insb
popf
jnp
loop
sarl
cwtl
sbb
xchg
ret
push
dec
push
add
aam
sbb
scas
scas
cld
nop
dec
nop
pop
out
sub
fildl
inc
mov
cmp
xor
and
out
push
loopne
cmp
out
add
push
mov
rorl
enter
jl
push
mov
xor
les
faddl
arpl
mov
insb
push
mov
sbb
test
scas
cmp
aas
repnz
add
sbbb
mov
or
xor
aad
adc
xchg
sbb
sbbl
inc
ret
out
dec
jg
jb
and
mov
cmpsb
daa
pop
icebp
mov
inc
stc
es
xor
mov
mov
pop
pop
ja
push
jmp
shll
ds
mov
gs
adc
bnd
data16
xchg
movsl
cmp
int
clc
int3
dec
hlt
call
mov
data16
jbe
mov
push
pushf
push
sbb
outsb
cmc
inc
sbb
and
sbb
and
dec
out
push
xor
adc
push
or
xor
hlt
cmp
ljmp
call
je
dec
sahf
icebp
in
xchg
aam
adc
cwtl
data16
xchg
mov
inc
and
mov
rcrl
dec
ss
fdivs
jecxz
aam
cmpsb
fwait
push
push
lret
mov
or
xor
mov
and
or
jl
call
cmp
in
jge
lret
arpl
mov
or
xorl
sti
pushf
fildl
xor
sbb
pushf
push
int
xchg
pop
xor
in
mov
mov
jbe
inc
addr16
idivb
movsl
mov
incb
ds
inc
mov
push
add
stos
aas
ret
pop
jg
mov
pop
lss
lcall
ret
mov
das
arpl
mov
ret
xor
mov
inc
mov
xor
cmp
xchg
sub
push
sbbl
ret
cmp
cmp
shl
mov
nop
add
and
call
aad
cmpsb
fistpl
out
cmp
xlat
adc
subb
outsl
xor
xchg
stos
cmp
pop
jp
xorl
pop
lods
mov
inc
enter
mov
adc
jl
cmpsb
into
push
adc
lea
and
sbb
test
mov
jae
jns
gs
lcall
sbb
in
js
fcoml
faddl
mov
into
and
cs
testl
addr16
dec
bound
out
dec
test
ds
xchg
inc
mov
or
mov
and
and
repz
ret
aad
mov
cmpsl
mov
push
jb
lar
scas
jae
add
sahf
mov
jg
cmp
dec
pop
add
orb
sub
or
scas
cmp
shrb
rcr
addr16
and
aam
bound
les
mov
dec
fsubrs
cmpsb
sub
lea
clc
lret
push
mov
leave
loope
xchg
xchg
stc
inc
add
xor
inc
fwait
repz
shlb
cmpl
fs
hlt
jo
inc
or
in
pop
cmpsl
mov
sbb
data16
mov
inc
cld
int3
xor
lds
divb
mov
and
sub
pop
int
mov
mov
add
insl
xchg
jmp
xchg
icebp
pop
clc
insl
dec
mov
shll
stos
into
jne
sub
mov
outsb
scas
call
cli
mov
shrb
in
sub
xlat
scas
in
ror
addr16
dec
add
lods
xchg
loope
and
sub
jp
inc
addr16
pop
mov
lahf
jae
outsl
jl
mov
mov
inc
pusha
addb
pop
stos
in
es
lcall
sub
sbb
inc
mov
in
lahf
mov
rorl
enter
inc
sub
and
sub
shl
js
xchg
sbb
push
std
sahf
push
dec
test
pushf
push
jge
pop
inc
fnstcw
enter
jge
fwait
stos
push
enter
xor
ljmp
out
jmp
lahf
inc
xchg
push
bnd
cmp
inc
lcall
inc
xchg
jmp
mov
das
scas
fs
jo
es
hlt
or
addr16
mov
nop
sarb
inc
mov
pop
push
mov
sbb
loopne
or
jmp
nop
cmpsl
jg
js
jae
inc
fadds
mov
cmp
ja
sahf
add
in
lock
or
sti
outsl
pcmpgtw
rorl
shl
leave
jg
add
and
push
in
popa
xlat
cmp
roll
fdivl
xchg
xor
imul
and
sub
aad
mov
cmp
push
fildl
test
test
and
jp
jnp
mov
push
jl
scas
subb
sbb
jecxz
mov
sub
sbb
fwait
lods
out
push
mov
aad
imul
mov
hlt
in
xor
cmp
mov
add
mov
mov
push
adc
es
ds
and
sub
popa
or
push
dec
xor
pop
loopne
pushf
and
push
je
imul
xchg
xchg
add
ret
jl
mov
rorb
push
dec
lds
and
inc
add
mov
loop
xlat
stos
jecxz
imul
cmp
lock
out
add
mov
fidivl
mov
cmpsl
jl
pop
xchg
fnstsw
adc
add
int
add
sbbl
cmpsl
xor
push
clc
mov
outsb
jb
mov
rorb
out
out
test
xlat
jl
scas
ds
cmp
repnz
sub
jmp
aas
call
outsl
lock
in
mov
add
mov
jnp
sar
adc
add
pop
add
inc
sbb
call
pop
or
movsl
mov
push
leave
into
aad
push
mov
inc
add
inc
leave
stos
imul
int3
shl
mov
lcall
xor
adc
and
int3
cld
and
mov
xorb
ret
jecxz
aam
leave
rcl
faddp
cmp
jo
out
pop
fs
sub
dec
addr16
mov
mov
testl
popf
hlt
sbb
bound
jge
jns
aad
jne
lahf
mov
clc
inc
xor
cmc
imul
jo
daa
loope
fcomip
cmpsb
pop
mov
mov
add
cli
jmp
and
xchg
xor
mov
jp
shrb
jne
xor
orb
lahf
dec
cld
iret
test
out
and
pop
nop
add
bound
out
aam
mov
sti
inc
add
cmp
lock
dec
jg
mov
sbb
int3
lods
xchg
scas
out
mov
test
stos
fsubp
xchg
mov
cmp
lods
jb
test
lret
ret
cld
adc
hlt
fisttpl
xchg
sub
ds
loop
movsb
add
pusha
cmp
xchg
pop
movl
nop
js
jne
cs
mov
lcall
cs
ret
ret
push
jb
clc
iret
push
ret
cmpsb
je
push
data16
test
lds
shl
nop
data16
sub
call
or
add
sbb
bound
pop
repnz
les
cmp
inc
adc
cmp
js
cmp
sar
lret
xlat
jne
mov
cmp
sub
adc
enter
jecxz
mov
fneni(8087
mov
lods
pop
mov
mov
call
mov
pop
fmulp
filds
adc
cmp
ret
std
mov
adc
or
xor
or
ljmp
subl
addl
imul
xchg
jno
idivl
fdivs
inc
or
lret
push
mov
and
xchg
dec
adcb
cwtl
dec
or
cmp
sub
add
ja
out
mov
push
jge
jnp
sub
fists
cmp
aam
int
arpl
lcall
push
inc
xchg
sub
xor
jbe
inc
mov
add
in
nop
aam
mov
xchg
jbe
lds
loope
sbb
imul
mov
je
dec
leave
jae
mov
mov
idivl
lret
fnsave
mov
std
popa
or
push
das
xchg
pop
mov
cmp
push
out
rcll
adc
xchg
lock
mov
sbb
adc
mov
and
dec
add
pop
sbb
mov
inc
rcr
aas
cmc
test
pop
sbb
and
xlat
cmpsb
xlat
jg
testl
ds
or
fisttps
dec
int
fwait
adc
fidivrs
dec
frstor
daa
jp
xchg
aad
fnstcw
int3
jl
out
shll
mov
dec
in
rorb
cld
inc
dec
mov
push
imull
mov
or
out
inc
divl
jecxz
sbb
arpl
repnz
xchg
mov
xchg
imul
add
push
lock
enter
cmpsb
popf
sbb
jecxz
cmp
fistpl
mov
out
jb
add
lods
jnp
cmpsl
call
push
xchg
sub
sub
pop
into
cmpsl
sbbl
jb
inc
test
jno
das
xlat
push
xchg
mov
push
dec
aam
out
shrl
jp
jbe
inc
push
cltd
mov
jae
call
ds
out
test
cmp
das
xchg
pop
fs
sahf
xchg
jle
popl
iret
mov
cmc
mov
lods
repnz
scas
xchg
add
pushf
xor
lds
xor
xchg
sub
ljmp
xor
imul
or
add
jl
into
jle
mov
fidivl
push
mov
push
pushf
ret
cmp
aaa
push
idiv
sbb
lcall
cmp
mov
out
mov
jnp
jne
push
hlt
and
ret
push
cld
jbe
test
jo
out
xor
xchg
shll
pop
or
pop
pushf
cmpsb
jle
popa
sti
jge
mov
sub
cmpsb
icebp
pop
lods
and
push
xlat
arpl
cmp
mov
inc
out
pop
push
addr16
cmp
jb
lods
cli
add
inc
push
sbb
mov
xchg
rol
dec
sub
jne
jb
or
out
jo
or
pop
call
or
repnz
mov
dec
ret
xchg
mov
js
jecxz
call
lods
mov
dec
out
xchg
mov
cltd
push
ror
push
jecxz
ret
sub
xor
mov
push
fs
icebp
jg
test
cli
xchg
mov
and
xchg
in
popf
enter
xor
push
or
push
aam
jmp
sub
inc
scas
adc
nop
mov
cli
sub
adc
sbbl
loop
rcrl
and
les
adc
pop
jle
mull
mov
and
iret
iret
or
mov
scas
adc
cld
in
and
loop
shrb
sbb
mov
out
inc
rclb
jns
pop
cmpsl
and
mov
mov
divl
into
cmpsb
dec
and
shlb
imul
jg
icebp
call
mov
fldt
mov
xlat
loopne
in
cltd
jg
ss
sbb
pop
xor
lret
lahf
test
sbb
rorl
ffreep
push
lcall
and
pop
lods
ds
movb
mov
test
test
push
xor
push
insb
leave
mov
push
movsb
inc
scas
xchg
sbb
push
mov
cmp
mov
adc
add
int3
mulb
mov
adc
pop
adc
sbb
push
shr
fmull
ret
xchg
pcmpeqw
cmp
inc
mov
sub
out
adc
pop
xor
xor
movsl
cmp
adc
dec
in
fcoms
pop
mov
adc
mov
int3
mov
shrl
mov
ss
jnp
sub
fcmovb
mov
fldl
out
jbe
mov
cmp
and
inc
in
xlat
stos
cld
jne
ds
xor
push
pusha
rcl
test
jecxz
int
push
push
pop
push
mov
imul
inc
and
call
and
mov
xchg
mov
xor
jbe
rorl
mov
in
add
in
adc
imul
in
les
pushf
push
fimuls
hlt
fisubrs
mov
les
scas
test
lock
repz
xchg
adc
push
sbb
fistpll
sub
daa
scas
jnp
fcmovnbe
pushf
fiadds
dec
mov
gs
mov
insb
pop
imul
mov
aas
push
icebp
sbbb
and
ds
adc
loopne
mov
dec
push
jle
jl
jmp
xchg
int
xchg
mov
mov
scas
stc
jae
icebp
dec
ret
pop
cld
inc
xchg
das
add
fcomip
jg
pusha
ja
fadds
sbb
into
sub
subl
jge
dec
inc
cmp
lahf
iret
jmp
mov
pop
adc
adc
in
adc
push
add
idivb
data16
sub
sub
sbb
fs
jle
pop
mov
cmp
or
cmpb
push
pop
stos
pushf
nop
pop
push
stos
scas
sbb
sqrtps
mov
popf
xor
sahf
stos
push
out
in
das
pop
popf
nop
nop
sub
call
add
call
das
into
cmpsl
mov
jb
cltd
mov
jl
dec
sub
jecxz
adc
nop
or
mov
in
lock
mov
mov
movsl
push
mov
orb
repnz
filds
sahf
add
andb
js
sbb
xchg
cmp
or
je
inc
int
jb
push
push
std
adc
testl
pop
fdivrs
cmpsl
jmp
or
fs
test
mov
add
push
mov
sub
jmp
in
cmp
mov
ret
mov
ljmp
loopne
dec
mov
xor
inc
mov
hlt
enter
cmc
leave
mov
xlat
cli
inc
sub
orb
and
insw
mov
subb
int3
cmp
in
jmp
and
pushf
lock
xor
lret
mov
cmp
jne
mov
sbb
sub
mov
pop
mov
lcall
clc
push
leave
xchg
scas
push
jns
xor
and
test
ss
ss
sub
mov
dec
sbb
mov
mov
or
out
cld
xor
daa
xlat
dec
mov
inc
icebp
adc
jo
xor
ret
into
push
dec
mov
xchg
adc
call
sbb
jmp
inc
movl
mov
xchg
pop
dec
hlt
cmp
and
and
adc
mov
jp
ljmp
pop
popa
int3
jg
push
or
sahf
inc
sbbb
rclb
ret
and
repz
add
jecxz
ret
hlt
xchg
mov
sbb
jne
sub
enter
imul
dec
mov
ss
or
jno
sbb
hlt
mov
pop
ret
dec
xchg
add
out
aad
adc
les
aad
cmp
xchg
aaa
in
call
push
insl
daa
xchg
cld
fldcw
in
push
lcall
fistl
frstor
xor
pop
outsl
cwtl
lods
lahf
mov
jne
mov
pop
cli
and
mov
xor
pop
jmp
push
cmpsb
jnp
and
fchs
nop
inc
mov
cmpsb
cli
or
inc
mov
in
mov
jmp
xor
sahf
fstpl
out
and
clc
sarb
gs
xchg
push
imul
push
rolb
cld
push
iret
flds
lahf
cmpsl
shrl
ljmp
test
fidivrs
sub
mov
cmp
cli
push
pop
mov
jecxz
and
ljmp
enter
xchg
sub
popf
dec
lret
outsb
adc
inc
scas
xchg
adc
js
insb
insb
cltd
adc
add
push
in
push
popf
cmpsl
dec
rdtsc
dec
hlt
imul
fcoml
mov
arpl
pop
popa
push
xchg
adc
aad
loopne
adc
lret
test
movsl
add
movl
jle
loop
jecxz
cld
int
mov
dec
das
cmp
xor
test
fsubr
jmp
mov
jnp
out
ror
ret
fisubrl
movsb
jg
mov
in
push
cli
xchg
xchg
rcll
std
ret
fmuls
xor
push
xchg
cmp
jmp
xor
push
xor
fstps
dec
push
pop
push
popa
cmp
sbb
nop
cmp
fwait
out
in
inc
orl
sbbl
out
stos
call
push
cli
rclb
lea
or
push
pop
xchg
cmp
sub
stos
movsl
sub
adcl
jno
jecxz
add
add
mov
and
testb
add
mov
mov
jnp
out
jbe
jnp
xchg
push
ret
lock
addr16
adc
push
xor
loop
sahf
jne
lret
shr
testb
push
in
repnz
inc
dec
xor
jge
subl
popa
imul
ds
rorb
cmp
bound
or
ss
inc
mov
jne
and
test
sub
mov
sub
imul
js
push
mov
ficoml
in
clc
and
push
movsb
jns
scas
mov
xchg
rolb
sahf
sbb
test
arpl
inc
sbb
imulb
insl
adc
jp
insb
push
and
scas
scas
add
xor
and
lret
pop
and
in
repnz
mov
stos
jg
lret
and
dec
or
jge
push
cmpsl
mov
jmp
mov
inc
sarb
lret
sub
lea
adc
cmp
xor
lods
add
xchg
mov
xchg
data16
pop
repnz
dec
hlt
dec
sub
or
push
jns
loopne
cmc
add
mov
or
dec
hlt
xchg
or
gs
cmp
jno
mov
and
add
push
fiaddl
inc
pop
sbb
int
lods
mov
or
fnsave
rcr
jg
lds
call
in
sub
add
lods
inc
sub
mov
dec
jecxz
add
dec
lods
adc
add
les
rcl
out
je
das
daa
andb
jp
mov
jecxz
pop
int3
and
jmp
es
dec
test
push
xor
mov
shrl
xchg
xchg
xor
rcll
xchg
mov
push
cmpsl
add
sahf
sbb
nop
jb
xchg
pop
out
add
test
adc
fwait
xchg
int3
fs
ret
push
or
dec
loope
cmp
xor
jnp
bound
aad
andb
loop
sub
add
icebp
adc
inc
pop
adc
mov
js
test
mov
cmp
mov
push
cltd
mov
pop
pop
fidivrl
test
je
add
fs
cli
xchg
dec
subl
inc
stos
cld
add
jo
adc
cmp
xchg
out
das
push
les
sarb
push
rcl
test
xor
cld
inc
mov
sub
and
add
push
test
jno
sbb
leave
in
into
jg
mov
cmp
fistps
push
adc
fbstp
fldt
int
push
fdivrl
pop
test
adc
cmpsb
adc
push
out
ja
push
jmp
add
jg
pop
xor
jp
test
rolb
add
fstps
xor
fsubl
test
test
mov
outsl
out
in
subb
imul
ds
lcall
mov
lea
xlat
push
mov
orl
movsl
mov
fwait
push
and
out
cld
in
push
mov
push
sub
les
ret
repz
jecxz
stc
sbb
mov
mov
inc
dec
inc
sub
xor
mov
cmp
in
push
mov
xchg
ret
push
jb
and
stos
fimuls
scas
inc
cs
xchg
mov
inc
cmp
sub
aas
ret
ret
mov
pop
aad
lods
and
mov
adc
mov
icebp
xchg
xor
es
dec
cmc
jne
sbb
popf
sub
fmull
add
sub
insb
push
jns
and
jnp
test
ret
xorb
and
add
sub
and
aas
shlb
int
sub
jle
inc
push
inc
push
add
js
and
dec
movsb
insl
leave
out
stos
repz
xchg
add
mov
pop
mov
insl
mov
test
into
adc
adc
mov
lock
push
std
ret
dec
jmp
xchg
int3
xchg
ror
mov
ja
pop
jmp
xor
ja
and
mov
mov
movsb
mov
sahf
enter
or
fwait
or
rcll
sbb
add
mov
mov
add
cmpl
das
mov
nop
in
dec
jb
and
push
sub
mov
lods
pop
push
push
sahf
xchg
dec
sub
mov
adc
xchg
adc
jne
mov
mov
xor
out
push
cltd
and
or
push
pushf
in
in
movsl
into
hlt
mov
iret
sahf
repz
push
call
aam
sbb
mov
mov
push
dec
mov
hlt
cmpsb
and
xor
xor
mov
and
call
in
jecxz
mov
sub
fidivs
sub
add
adc
xor
xchg
dec
xor
add
cmp
push
cwtl
xor
or
pop
sahf
fdivr
sub
and
outsl
adc
lret
xchg
jae
insl
jle
push
pushf
xchg
mov
fisubrl
daa
int
or
add
int3
insl
and
out
jle
gs
jae
xchg
ja
push
mov
daa
add
cltd
pusha
roll
sbb
int
fs
cli
loopne
and
xchg
cli
inc
repnz
xor
sbb
push
mov
inc
pop
fcomps
pop
xor
outsb
sbb
mov
xlat
out
mov
arpl
mov
push
push
mov
cmpsl
lods
repnz
fdivrp
fcmovb
inc
sti
add
roll
shll
shlb
bound
xchg
outsl
push
sti
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
movl
add
push
movl
xor
mov
push
mov
or
mov
mov
xorl
xor
andl
push
mov
add
orl
mov
sub
mov
sbbl
test
movl
je
mov
adc
mov
mov
mov
sub
xor
movl
cmpl
je
cmpl
jl
jmp
push
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
adc
mov
add
mov
xor
add
add
mov
mov
add
mov
xor
xor
add
or
mov
mov
addl
jmp
inc
mov
roll
sti
jne
xlat
sub
jp
pop
jp
les
fxch
push
dec
cmpl
and
scas
ret
lock
and
in
and
std
and
add
arpl
ja
call
mov
sub
aad
mov
mov
test
ja
shlb
pop
xchg
lea
cmpsb
mov
addb
push
xchg
rolb
inc
enter
adc
das
mov
mov
popa
out
mov
ficoml
pop
pusha
add
aas
fwait
aad
adc
fnstcw
cmpsb
repz
mov
xchg
icebp
loopne
sub
mov
jae
or
dec
mov
lret
rorb
xchg
test
arpl
or
inc
xchg
cmpsl
pushf
test
jle
or
mov
or
lock
mov
jne
lret
cld
push
pop
dec
push
cmpsb
leave
cld
pushf
jecxz
in
xorl
les
adc
icebp
fsts
loope
adc
ljmp
sub
xchg
out
cmpsl
add
insb
imul
test
dec
lds
cmp
cmp
shll
sbb
push
and
popf
stc
daa
xchg
in
aad
mov
ret
pop
adc
push
icebp
push
outsl
cld
in
cmp
repnz
shrb
push
rorl
loop
lock
rcrb
mov
jns
scas
das
xor
aas
hlt
xor
shrb
add
hlt
mov
pop
mov
pop
pusha
mov
push
in
leave
fwait
jg
repz
cmc
cmpsb
fwait
mov
pop
mov
mov
iret
pop
movsl
mov
mov
pop
mov
andl
jbe
push
xor
sarb
pop
sbb
mov
loop
std
pop
add
jnp
in
cmp
cmp
ja
sbb
rcll
fisubs
stc
lahf
shll
pushf
mov
sub
jmp
addr16
ljmp
inc
repz
in
mov
notl
clc
popf
inc
push
xchg
ljmp
lret
nop
mov
add
das
mov
stos
inc
test
ja
fsubs
mov
test
adc
in
mov
rcrb
cwtl
push
insl
cwtl
andl
mov
sahf
inc
mov
mov
fwait
jp
mov
sbb
sbb
movsb
jnp
leave
ss
js
xchg
mov
jnp
ss
loopne
leave
push
clc
imul
std
cmpsl
or
and
lock
sbb
icebp
sbb
popa
mov
jae
xor
cltd
or
test
xlat
xlat
xor
or
sub
sahf
mov
or
rdmsr
out
outsb
mov
pop
jecxz
mov
jbe
cs
out
pop
jnp
loop
jnp
inc
lret
mov
push
push
xchg
add
insb
into
fwait
lods
jl
adc
out
jne
mov
add
or
inc
mov
xor
ret
fwait
ljmp
aam
pusha
add
shlb
adc
mov
mov
test
mov
sbb
xor
hlt
ds
dec
push
pop
es
aam
mov
pop
adc
dec
mov
xlat
push
lcall
out
movsb
inc
stos
cmc
test
or
fwait
dec
lret
mov
cmpl
fwait
xchg
fstl
sub
out
jle
mov
icebp
cmpsb
or
mov
mov
or
jns
in
lahf
ret
jmp
pop
loope
aam
push
xlat
cmp
adc
or
xor
cmp
xchg
mov
pusha
xchg
addr16
stc
ret
xchg
stc
add
mov
or
adc
xorb
sub
cmp
jl
or
push
fmuls
cwtl
mov
and
mov
fistpl
enter
cmpb
xor
pop
std
and
mov
push
mov
in
pop
mov
push
ficoml
fucomi
inc
push
movsl
jge
leave
or
sub
dec
loop
rorb
rclb
jns
jge
add
mov
gs
mov
inc
mov
fisubrl
imul
fisttpll
dec
mov
leave
in
lret
repz
data16
inc
movzbl
pusha
or
jno
cmp
nop
mov
dec
inc
sub
in
ds
gs
mov
lret
cmpsl
and
mov
shrb
mov
fadds
pop
negb
repz
in
xchg
inc
cld
idivb
xchg
loope
sbb
mov
daa
or
fs
test
hlt
mov
inc
outsl
or
jle
pusha
iret
pusha
outsl
add
in
aaa
adc
mov
pop
push
mov
into
sbb
insb
les
out
out
jg
cmp
cld
mov
cli
push
je
repnz
sbb
fs
push
sahf
inc
xor
pusha
orb
lds
push
and
xor
add
stos
xlat
mov
xor
lret
or
push
sbb
sub
sub
inc
shrl
in
fs
outsl
jmp
and
inc
mov
pop
sbb
sbb
mov
cwtl
xor
pop
inc
push
pop
data16
hlt
dec
add
adc
mov
data16
push
push
addr16
cli
out
and
push
cmp
sub
mov
pop
rclb
and
and
or
arpl
movsl
insl
mov
loope
jns
jg
mov
mov
xchg
shll
mov
push
add
ja
inc
sbb
leave
adc
ljmp
mov
sbb
push
dec
sbb
xor
sub
push
repz
scas
xchg
out
add
jno
xchg
xchg
dec
sbb
insl
stos
popa
mov
ret
ljmp
adc
inc
sbb
pop
dec
sub
sbb
mov
push
mov
je
add
loop
loopne
ja
out
imul
mov
dec
adc
mov
jp
shll
or
push
push
inc
loopne
and
lods
sbb
mov
jmp
cmp
inc
xor
sbb
and
insl
mov
rcll
inc
mov
add
stc
xchg
aad
outsb
jmp
lahf
and
nop
scas
mov
jecxz
xchg
mov
push
cmpsl
popa
popf
mov
mov
sbb
mov
mov
or
pop
out
mov
jo
scas
lret
loopne
aaa
aas
lcall
mov
push
pop
xchg
or
loopne
pop
mov
jle
xchg
sbb
dec
bound
jne
xlat
mov
cli
cmp
and
inc
mov
cmp
pop
lret
lret
push
pushf
repnz
cmp
push
or
ds
pop
dec
out
add
jge
sti
outsb
xchg
stos
inc
jmp
mov
jg
notb
pop
ljmp
inc
xchg
in
xchg
or
or
mov
scas
ljmp
and
mov
xchg
iret
pop
dec
cs
out
aaa
decl
testb
mov
insl
mov
mov
or
ret
in
ja
loopne
xchg
stos
inc
ljmp
mov
bound
jb
xlat
or
popf
sub
jg
jp
pop
mov
lret
idivl
out
lcall
xlat
lcall
mov
loope
enter
and
mov
push
pop
ss
rcll
jge
rcl
pop
pop
mov
adc
fnstsw
leave
subb
mov
incb
lahf
push
ss
pop
stos
mov
cmp
pop
add
dec
mov
movsb
push
pushf
rcll
dec
push
pop
and
mov
inc
out
cmp
cmp
loope
dec
jne
dec
pop
sub
stos
inc
stos
les
pop
pop
mov
adc
lods
mov
and
push
aam
add
xor
push
inc
inc
jg
dec
push
cmc
xchg
cmp
shl
les
cmp
shll
rcl
jo
push
sbb
int
jns
push
rorb
hlt
dec
add
pop
push
add
xor
push
roll
into
sti
adc
push
and
cmp
ror
repz
cmc
xchg
cmpsb
int3
mov
lret
outsb
arpl
roll
ja
nop
inc
movsl
jecxz
insb
pop
mov
aam
cmp
cltd
lods
and
mov
pop
jo
cwtl
jbe
or
xchg
mov
dec
nop
pop
and
jb
xor
jmp
inc
int3
and
clc
push
or
push
xor
mov
mov
bound
lods
dec
hlt
out
or
addr16
gs
pop
adc
shrb
and
negb
cmp
sub
shrl
and
lcall
xchg
test
mov
sarb
xchg
test
xlat
xchg
sarb
hlt
ficomps
dec
and
ret
lds
push
cmp
sbb
and
cmp
xchg
test
add
clc
test
inc
hlt
push
add
aas
dec
lods
pop
cmp
data16
jns
xchg
div
push
add
inc
sbb
out
pop
mov
fnsave
mov
fstpl
mov
mov
mov
jp
cmpsb
jmp
or
mov
pop
loop
xor
negb
cli
add
jnp
std
or
ja
inc
fwait
jg
mov
sub
and
and
sarb
cld
sub
mov
xor
xchg
pop
push
pop
call
mov
mov
mov
sbb
lahf
out
xchg
push
mov
sub
push
push
lea
or
jo
dec
cli
lret
or
jno
push
aam
jnp
mov
inc
sbb
cmp
inc
inc
add
mov
mov
jae
fsub
pop
enter
pop
sbb
int3
std
mov
push
imul
and
jg
mov
push
stos
or
fidivl
lret
cmpl
adc
int
mov
cmp
mov
icebp
iret
cs
out
xor
jnp
xlat
daa
out
sbb
add
pop
jge
pop
arpl
and
popa
inc
mov
sbb
lds
scas
in
fucomip
push
das
and
pop
add
mov
lods
daa
ljmp
adc
out
mov
mov
repz
lret
lea
lods
push
sbb
push
ljmp
xor
divl
or
lea
xor
roll
mov
fsubrs
fidivs
pop
mov
sub
mov
lret
pusha
cmpsb
hlt
jp
add
or
add
jmp
push
iret
xchg
pop
scas
fstpl
int
mov
fimull
xchg
jns
out
sbb
adc
shl
mov
sub
jne
les
push
mov
arpl
sub
mov
sbb
test
jae
jl
xor
lcall
mov
test
pop
cwtl
ficoms
xor
insl
sbb
pusha
sbb
aas
adc
arpl
xchg
hlt
daa
lods
pop
scas
fldcw
and
in
int3
pop
push
daa
adc
mov
icebp
xchg
imul
mov
cmp
add
or
pop
inc
mov
addb
sti
mov
and
andl
mov
test
fstpl
add
jo
or
mov
push
std
arpl
jl
mov
das
andl
add
xchg
out
jle
pop
inc
lods
adc
addb
scas
sbb
inc
outsl
push
push
fistl
pop
pop
mov
ja
rcrl
jp
in
leave
xchg
pushf
sbb
ja
xchg
pop
loope
movl
insb
pop
sahf
les
frstor
and
mov
gs
and
cmp
rcr
jge
add
lret
xchg
addb
test
aam
pop
scas
inc
mov
sub
xchg
ds
push
jp
fildl
jmp
popf
lods
test
dec
movsl
andl
dec
cmp
js
scas
ss
mov
mov
sarb
lock
inc
or
js
cmp
jns
adc
test
bound
jbe
ja
cmp
mov
test
xor
xchg
stos
sbb
fildll
in
js
cmpsb
fcoml
push
push
mov
imul
mov
cltd
mov
mov
jne
int
and
decb
jae
nop
rorl
repnz
imul
icebp
clc
inc
mov
and
aam
ret
out
lds
dec
or
stos
enter
into
xchg
pop
cmp
loop
mov
cmp
ret
or
mov
mov
out
cmp
dec
ljmp
add
xor
add
pop
aad
ror
lods
mov
adc
insl
out
enter
mov
mov
mov
inc
cwtl
rep
fisubrl
push
ss
pop
int
jbe
jns
jecxz
daa
xor
jns
addr16
movsl
ss
sub
ss
inc
and
dec
mov
incb
testb
repnz
jmp
mov
jp
add
in
xor
cwtl
inc
aas
jne
jecxz
cmp
mov
loopne
dec
iret
es
mov
pop
ret
arpl
ljmp
xor
out
cmp
jecxz
in
jg
mov
mov
mov
jg
scas
fmuls
add
or
fsubrl
scas
dec
into
push
dec
dec
xor
popa
bnd
imul
add
loop
mov
and
mov
pop
outsl
imul
lods
jo
rolb
dec
cmp
je
dec
lods
inc
popl
sbb
cli
nop
filds
jle
jl
stos
sti
push
and
adc
cli
mov
inc
xchg
sbb
and
mov
sbb
xchg
in
iret
je
mov
fwait
fwait
pop
call
call
jne
push
xor
pushf
int3
sbb
and
fcompl
js
push
movb
mov
add
sbb
loopne
outsb
faddp
fsubl
cmp
sbb
adc
int
jecxz
lahf
xchg
mov
mov
add
hlt
dec
cs
bound
das
lock
mov
scas
jb
ljmp
dec
jmp
and
xchg
sbb
sbb
test
pop
ret
rcrb
mov
test
jnp
lock
hlt
imul
in
hlt
dec
fcoml
movsb
pop
sarl
mov
mul
jmp
add
out
jl
pop
lods
ret
and
hlt
test
lcall
add
cmc
nop
test
pop
insb
push
inc
and
adc
xchg
nop
insb
repnz
mov
sti
loop
into
or
jmp
jp
xchg
sbb
cld
jle
sub
int
sub
jmp
cld
pop
mov
adcl
bound
fnstsw
fcmove
leave
idivl
mull
in
fildll
repz
jg
stos
pop
inc
sbb
div
and
mov
pop
cli
xchg
add
adc
cmpl
sbb
in
pop
inc
iret
xor
push
cmc
or
cmc
arpl
test
mov
dec
roll
sbb
xor
arpl
xchg
or
adc
enter
les
test
in
leave
cld
mov
aad
out
or
pop
lret
fcoms
xor
nop
adc
and
sbb
mov
mov
int3
cmp
fcmovne
sub
dec
dec
cmc
out
adc
addr16
xchg
lret
stc
nop
lcall
lods
mov
imul
call
arpl
push
hlt
scas
cld
lret
add
xorb
aaa
in
sbb
dec
cmp
lret
cmp
pop
jl
dec
dec
jae
icebp
aaa
pop
push
ret
clc
and
or
out
xlat
adc
std
ret
xchg
sub
sub
add
push
push
inc
js
shll
fcmovne
in
or
das
cmpxchg
insl
cmp
cld
cmp
rcrb
xor
xchg
stc
pop
mov
xchg
in
ret
xchg
cli
xchg
jp
mov
rcrl
test
sub
push
jne
cmp
lds
xchg
imul
daa
hlt
lods
push
movsb
sub
mov
ljmp
outsl
cmp
add
sub
mov
push
ror
jg
scas
out
cld
add
mov
cwtl
xor
lds
rol
mov
add
cld
stos
push
mov
add
xchg
test
fs
xorl
mov
push
imul
lret
lods
ficompl
and
lret
repz
inc
test
mov
ds
sub
sbb
cmpsl
pop
sbb
lret
jns
xlat
cmp
ljmp
jno
movsl
or
xchg
cmp
ret
or
je,pn
push
data16
out
cmpsl
icebp
jns
int
xor
stc
pop
fcmovnb
rcll
hlt
in
xor
add
ror
out
xchg
add
sbb
rclb
cmp
adcl
pop
push
inc
push
xchg
adc
or
nop
into
out
lods
shlb
lock
pop
fidivrl
aas
mov
loope
sbb
int3
es
aam
stos
jnp
pop
push
pushf
test
adc
gs
xchg
push
call
push
add
cs
lds
sbb
popf
je
mov
dec
dec
out
push
test
pusha
stc
lret
fwait
mov
or
adc
mov
adc
les
push
sub
mov
ret
cmpb
add
xchg
fld
dec
pusha
dec
fmull
outsl
inc
jb
pop
mov
std
push
inc
out
push
xlat
dec
mov
mov
or
in
loop
xlat
mov
inc
inc
in
into
repz
mov
dec
js,pn
push
sbbl
fimuls
popf
repz
sub
cmp
cltd
ja
jns
icebp
mov
sub
sub
xor
aam
pop
je
mov
arpl
test
push
addr16
frstor
cmp
mov
pop
or
push
add
jns
out
movsl
mov
popf
xor
hlt
fisubs
scas
enter
das
lahf
push
out
add
push
in
sub
in
mov
mov
push
add
sbb
rcrl
ficompl
leave
popa
lret
stc
mov
pop
lods
pop
ret
pop
sub
lods
ret
xor
xchg
jp
inc
push
mov
imul
dec
pop
sbb
icebp
jb
leave
out
push
popf
cmp
mov
xchg
imul
sbb
lds
push
jbe
shr
xor
pop
push
ret
aaa
xor
lods
int
jge
pop
mov
ss
xchg
cmp
cmp
jbe
push
jo
xchg
cmp
rsm
add
test
adc
pop
and
jo
sbb
cmp
inc
loope
and
dec
div
mov
bound
lret
popf
lds
dec
sbb
mov
push
repz
mov
and
mov
pop
push
shll
cli
pop
cmpsb
xlat
fcmovbe
sti
inc
int
repnz
mov
ss
push
jbe
pop
adc
das
pusha
scas
in
sub
addb
add
xchg
imul
movl
mov
out
movsl
cli
ljmp
cmpsl
mov
xor
or
int3
xor
clc
push
xor
leave
int3
jns
xor
push
movb
mov
ljmp
je
out
leave
and
jmp
adc
call
pop
push
divb
ja
sar
loop
lods
sub
and
push
in
mov
xchg
movb
dec
movl
push
sahf
rorb
sar
rcr
mov
mov
sti
ret
cmpsl
roll
pop
jge
and
in
xor
nop
jns
mov
add
lods
mov
lahf
iret
push
hlt
int
xor
push
scas
ljmp
adc
mov
shll
xor
mov
fistps
daa
mov
pop
clc
jo
mov
adc
push
lret
fcoms
cld
subl
add
daa
cmp
dec
adc
repz
push
and
mov
sub
out
ss
xor
lea
jmp
jbe
jo
sub
fsubr
sti
fxch
shll
or
test
cmp
mov
fimuls
in
test
xchg
mov
or
add
or
testl
add
sub
jbe
jbe
hlt
xchg
popf
mov
clc
scas
push
icebp
and
jecxz
fs
push
mov
sbb
add
jmp
jp
or
hlt
adc
lahf
fs
jae
mov
adc
popf
inc
shl
cmpsl
int
or
or
ret
xchg
and
inc
mov
ja
jns
je
ret
js
negl
in
outsb
and
add
mov
out
imul
imul
xor
xor
or
or
pop
mov
insb
repz
dec
push
addl
in
mov
mov
lods
pop
inc
inc
stc
das
clc
int3
lret
idivb
sub
out
lahf
jb
mov
ret
nop
pushf
cmp
sahf
jnp
mov
pop
rol
lock
aas
pop
lods
lahf
loope
filds
les
imul
push
scas
inc
test
push
je
scas
push
jecxz
insb
adc
addr16
add
xchg
mov
fldenv
mov
jae
sahf
xchg
xor
hlt
sbb
and
dec
pop
push
add
mov
mov
cld
adcb
cmpsb
inc
cld
ret
clc
or
push
and
push
push
nop
imul
xchg
mov
clc
movsb
sarl
jl
insl
aam
xor
cmp
pop
jg
adc
sbb
xor
xlat
dec
outsl
je
das
sub
or
push
jno
xor
inc
mov
outsl
hlt
int3
fists
repnz
arpl
pop
jne
xor
inc
push
ljmp
cmp
mov
dec
adcl
imul
push
mov
mov
gs
mov
sbb
outsl
out
pop
mov
inc
popl
in
pop
sub
cmp
popa
cmpl
cmpsb
jg
int3
sbbl
xchg
add
mov
dec
cmp
mov
rorb
inc
fmuls
cmpsl
adc
cs
lods
mov
arpl
or
std
repz
rolb
mov
dec
mov
xchg
adc
sbb
xor
call
shrb
xor
out
add
sbb
jle
out
jno
push
js
push
fwait
and
pop
rcrl
out
sbbl
sub
adc
insl
fwait
ja
adc
incb
cmp
lcall
dec
sbb
and
sub
pop
mov
jb
mov
mov
filds
call
mov
push
or
lahf
xorb
mov
movsb
popa
pop
mov
xchg
gs
lcall
pop
adc
aam
loop
in
and
adc
jecxz
into
cmp
sbb
and
popa
bound
add
jae
adc
mov
lcall
dec
cmpsb
mov
gs
fstpl
sub
push
insb
mov
bts
xchg
sti
inc
dec
inc
or
mov
pop
addb
xchg
mov
ffreep
mov
or
aad
xchg
mov
pushf
push
inc
lahf
push
adc
push
hlt
dec
xor
push
daa
mov
and
xchg
cltd
imul
inc
js
ds
mov
sbb
inc
sarl
jmp
adc
jbe
dec
out
inc
hlt
jl
fisubs
fbstp
pop
lods
jmp
mov
pop
adc
adc
sub
addr16
xor
stc
repnz
in
and
mov
push
les
jle
sbb
aam
push
add
sub
lods
inc
adc
int3
mov
mov
rcrl
cltd
sbb
and
sbb
dec
mov
pop
cli
pop
xor
cmpsl
or
inc
pop
je
xor
mov
shl
add
out
ret
mov
jno
mov
scas
fwait
xchg
sub
ljmp
cld
out
or
lods
scas
aas
mov
push
mov
mov
push
hlt
sub
das
adc
dec
push
mov
ret
cmp
mov
lds
ror
popa
and
ljmp
mov
pop
mov
cs
xchg
jle
loop
lret
or
mov
and
dec
sarl
pop
mov
iret
add
cmp
popf
loopne
ret
push
cmp
xlat
jbe
mov
or
mov
cli
cwtl
movsl
xchg
insb
lea
dec
and
aaa
sub
or
push
mov
inc
fnstcw
nop/reserved
pop
adcb
stos
jo
add
fwait
popa
test
mov
sub
hlt
scas
sbb
xorl
lods
mov
test
lcall
xchg
lahf
mov
dec
int3
push
movsl
aaa
ss
pusha
wrmsr
mov
or
popf
pop
imul
aas
cmp
pop
mov
or
call
loop
mov
inc
or
std
popf
pop
push
xchg
das
jo
xor
xor
fcom
loope
xor
in
xchg
pop
push
clc
into
push
imul
xor
dec
fisttpll
pop
xchg
pop
sub
sub
outsl
and
outsb
sub
ss
and
das
mov
add
or
xor
push
inc
push
stos
popf
out
jbe
jo
frstor
ret
into
pop
pop
push
sub
xor
sub
sbb
adc
inc
daa
ret
push
xchg
mov
ja
mov
andl
dec
in
mov
mov
lods
incl
pop
repz
scas
pop
dec
mov
jmp
cmp
mov
mov
shll
xchg
fistl
filds
mov
shl
xchg
stos
loope
mov
sub
sahf
iret
sahf
xchg
cltd
push
xchg
jae
mov
mov
psubsb
cmp
inc
cmp
and
dec
daa
jns
in
push
jl
subb
movsl
les
dec
cltd
icebp
mov
fsts
jle
push
add
sbbb
rdpmc
mov
cmpsl
xchg
cld
push
or
mov
ficoms
dec
mov
jns
repnz
mov
test
out
mov
mov
jne
jno
sarb
loopne
movsb
sbb
das
mov
mov
scas
inc
aaa
sbb
cli
loope
jb
sbb
cmc
ret
std
inc
mov
xchg
ja
push
ret
add
repnz
cmp
push
in
sbb
sbb
iret
mov
add
push
mov
popa
lock
sti
lods
mov
mulb
ret
mov
and
aas
mov
bound
jb
inc
popf
rcll
or
add
xchg
xchg
sub
cmc
push
pop
roll
loop
into
cli
sbb
add
dec
pop
sbb
mov
test
add
daa
and
ss
xor
dec
pop
loope
out
in
in
add
pop
push
add
inc
add
fmull
mov
pop
sarl
mov
mov
andl
mov
cmp
dec
lds
pop
mov
xor
push
dec
pop
mov
add
loope
hlt
adc
push
movzbl
outsl
lods
ret
stc
movsb
jns
dec
movsb
mov
insl
mov
mov
shrl
lods
fstps
icebp
frstor
aad
test
out
cmp
xor
or
push
sbb
mov
cmc
decb
ret
jge
mov
pop
lods
xchg
pusha
stc
subl
rcrb
xlat
inc
pop
rolb
xor
and
fistpll
subl
repnz
loopne
pop
ret
pusha
aad
push
mov
fiaddl
loope
or
ja
insb
addl
mov
xchg
sahf
jg
testb
cmc
xchg
push
aaa
lock
int3
movsb
xor
xchg
es
xorl
jo
popf
push
aas
dec
push
cmpsb
stos
cmp
adc
mov
jb
jmp
xor
aad
dec
test
repz
jns
mov
rcr
lahf
and
lods
lahf
xor
push
add
dec
and
cli
or
and
shll
in
cmp
sub
mov
lods
aaa
fstpl
inc
adc
adc
push
ds
gs
in
mov
fstl
mov
mov
pop
call
and
je
adc
push
ret
testb
outsl
dec
ja
test
add
xchg
scas
aam
int3
pop
sbb
std
dec
sbb
test
lods
sahf
js
jecxz
gs
out
pusha
or
mov
nop
adc
or
xchg
std
repz
cs
xchg
sbb
dec
mov
adc
outsb
mov
cmp
xchg
vpaddusw
dec
jno
inc
imul
rcr
int3
cmc
outsb
scas
mov
xchg
adc
sbb
stc
xchg
xor
mov
fcoml
mov
dec
push
mov
or
adc
je
cmp
sub
or
or
mov
sbb
movb
cmpsb
rolb
sbb
fidivrl
or
fdivrs
repz
or
xchg
pusha
icebp
lock
cmp
inc
cs
adc
enter
jne
mov
insl
lret
push
das
je
mov
push
scas
pushl
xchg
mov
pusha
or
imul
adc
or
inc
fwait
push
cwtl
xlat
fmuls
mov
mov
jb
inc
cmp
call
ss
mov
mov
ja
jno
sbb
pop
and
or
mov
cmp
mov
std
cmpb
popa
out
aam
xor
or
into
inc
sbbb
stos
nop
mov
inc
push
dec
call
jmp
insb
push
popa
xor
xchg
push
loope
sbb
nopl
fstp
mov
and
jne
adc
xchg
xchg
xchg
sub
jno
dec
inc
daa
xchg
call
aaa
mov
mov
mov
mov
pop
sbb
cmp
xchg
scas
popf
add
jl
fdivs
into
lret
push
iret
shll
xor
push
popa
stos
mov
pop
outsl
cld
pop
stc
div
das
sub
ja
sub
mov
push
lods
out
inc
pop
mov
dec
push
loope
test
add
pusha
in
sbb
cmp
inc
jg
push
mull
imul
call
ja
dec
int
cld
mov
cmp
in
mov
icebp
and
jno
xchg
pop
inc
repz
out
push
jmp
cmp
ds
hlt
and
cmp
idivl
lret
sbb
pop
mov
mov
pop
into
jbe
sub
adc
sahf
mov
movd
dec
jno
adc
cmp
aad
loop
mov
pop
push
mov
pop
loop
subb
pop
xchg
lds
push
leave
mov
push
lcall
aaa
and
icebp
imul
movsl
daa
mov
inc
xchg
je
sub
mov
fiadds
add
rolb
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
lea
movl
xor
orl
xor
movl
cmp
movl
je
andl
xor
add
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
xor
subl
add
cmp
jne
pushl
call
mov
orl
mov
or
mov
adcl
xor
xorl
add
movl
cmp
je
pushl
orl
pushl
andl
call
dec
mov
xor
mov
adc
mov
subl
xor
adcl
add
movl
cmp
movl
je
xor
mov
mov
mov
subl
mov
movzwl
sbb
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
incl
add
sbbl
mov
mov
mov
sub
mov
subl
add
mov
movl
jmp
sub
mov
mov
mov
adc
mov
andl
add
add
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
call
jmp
mov
andl
xor
incl
add
cmp
jmp
push
push
or
inc
xor
xor
mov
scas
jp
add
and
xchg
and
fsub
mov
inc
out
cmc
call
addr16
mov
call
ss
push
push
pusha
lea
fsubrs
fwait
adc
cmpsb
rolb
clc
xorb
jg
add
test
xor
dec
ret
mov
insl
dec
pushf
inc
mov
bound
sbb
jno
and
decl
lods
sbb
add
je
and
and
sub
dec
mov
lahf
frstor
ds
cmc
movsl
out
in
movsl
jecxz
pop
inc
mov
pop
popa
jmp
fwait
mov
shrb
mov
lods
iret
les
dec
sub
insl
mov
sub
xchg
mov
sbb
cld
jne
mov
sub
stc
les
cmp
mov
pop
push
gs
inc
xchg
lcall
insl
call
ljmp
arpl
mov
pop
adc
cwtl
mov
dec
sub
outsl
fwait
sbb
xchg
push
in
add
gs
out
or
mov
call
or
sub
mov
ja
xor
jecxz
adc
dec
cmp
sar
imul
inc
inc
hlt
lds
cs
loop
lret
mov
jno
adc
jle
push
sub
pop
sti
and
mov
sti
testb
lahf
push
call
lret
cmp
in
iret
in
mov
scas
push
fdivrl
xor
inc
add
cli
sbb
test
jg
lret
sbb
push
sbb
and
push
lods
mov
inc
adc
popa
fsubrl
jge
and
push
mov
pop
and
and
stos
in
in
idivl
add
test
std
jmp
mov
outsl
dec
cmc
jg
lods
sub
mov
jecxz
orb
test
outsb
out
push
push
or
or
jmp
jo
xor
or
mov
dec
shrl
sub
mov
daa
inc
xor
fadds
repz
adcl
iret
pop
outsb
outsb
push
inc
push
ja
xor
stos
faddl
fdivrl
mov
pop
lahf
jne
cmp
scas
mov
iret
mov
pop
lret
inc
adc
cmp
adc
lret
pop
inc
mov
xchg
outsb
out
jbe
adc
out
mov
and
nop
cmc
mov
push
jp
mov
push
mov
push
xchg
enter
shrl
sbb
push
rol
mov
das
pop
sbb
fwait
popf
push
jmp
out
dec
mov
in
mov
pop
repnz
scas
test
lcall
mov
and
xchg
out
test
adc
es
sahf
adc
push
ficomps
pop
cmpsb
mull
js
inc
inc
js
cs
pop
sub
es
or
adc
int3
mov
inc
stos
out
imul
movsb
mov
jge
xor
pusha
mov
cmp
cmp
dec
lret
fwait
roll
jmp
xchg
cmp
dec
or
enter
jnp
cmp
sub
stc
in
jle
or
mov
cmp
dec
jge
sbb
mov
xchg
outsb
shll
imul
or
repz
pusha
xor
pushf
mov
mov
hlt
push
or
inc
scas
jns
ja
insl
cmp
lahf
scas
mov
cmpsl
roll
hlt
jo
mov
or
mov
mov
iret
jne
fimuls
push
leave
xchg
inc
pop
adc
xlat
dec
fdivr
sbb
sbb
aas
inc
jge
lea
or
jl
scas
pop
imul
in
jbe
mov
repz
xor
mov
std
inc
pop
movsl
leave
jle
jnp
push
dec
inc
movsl
stos
mov
xchg
and
inc
loopne
in
mov
dec
adc
cmp
rolb
inc
xor
jmp
cwtl
stc
clc
test
movsl
adc
add
add
or
movsl
scas
push
mov
out
pop
add
mov
jle
stos
call
xchg
fstpt
lds
xor
sti
pop
inc
iret
jmp
add
and
push
add
pop
dec
xor
data16
incl
add
js
ficoml
lds
inc
lahf
push
mov
out
cmp
pushf
jp
push
subb
call
test
insb
sahf
jge
mov
imul
nop
subl
addr16
pop
insb
iret
push
lret
ja
popa
aad
insl
jb
mov
jp
and
gs
xchg
pop
ja
rol
rorl
push
lods
jmp
movsb
stos
sub
fdivl
adc
inc
testl
rcl
pop
hlt
rcrb
out
rcr
adc
in
pop
popa
xchg
pop
jmp
in
andl
dec
clc
inc
mov
sub
pop
inc
lock
test
arpl
add
aaa
in
mov
test
in
in
fistpl
insl
jmp
jbe
push
popa
xor
inc
push
xchg
fs
mov
xor
cmpsb
and
adc
mov
pop
xor
mov
lcall
call
pop
pop
imul
sti
aam
push
inc
fs
imul
sub
pop
icebp
scas
popf
xor
pusha
mov
mov
addr16
in
je
outsl
and
lods
jne
push
fwait
push
lods
dec
mov
subb
sbb
or
jns
push
adc
imul
scas
fcos
xchg
sbb
adc
push
mov
movsb
or
cmp
dec
test
mov
add
jo
cwtl
cli
sbb
mov
inc
xor
pop
in
adc
fcmovb
lret
adc
push
pop
ret
mov
mov
fmuls
push
sbb
mov
and
cmp
filds
inc
ss
jg
jmp
or
mov
add
shlb
dec
loopne
mov
lods
dec
push
fistpl
scas
or
cld
leave
cmp
and
or
sub
sbb
jo
cmp
mov
addr16
jo
push
and
aam
addr16
sub
adc
adcl
xor
mov
lret
popa
stos
std
or
pushf
aaa
xchg
out
jp
shr
stos
popa
mov
or
mov
cmp
and
mov
jl
adc
fidivl
cmpsb
add
sbb
and
mov
loop
les
and
dec
adc
outsb
pop
in
mov
lcall
cmp
imul
into
add
pop
dec
dec
in
stos
sub
sub
jge
out
lock
dec
aad
rorl
test
loop
mov
or
lahf
nop
or
mov
movsl
movsb
cmp
and
movsb
out
xchg
mov
ljmp
xchg
std
inc
loopne
out
rcr
rcrb
add
fmull
das
inc
pop
call
stos
xor
jo
mov
int
jl
pop
fbld
outsl
dec
xchg
add
push
dec
sub
jnp
pop
lock
stos
sarl
xchg
test
pop
or
mov
andb
pop
mov
jo
push
adc
cmc
pushf
pop
mov
call
cmp
mov
les
out
cs
repz
rcll
lds
push
sahf
leave
mov
xchg
mov
je
dec
mov
js
in
inc
pop
outsb
push
sbb
mov
mov
les
jns
lods
jae
mov
push
sub
push
aad
jae
int
mov
adc
incw
sub
das
arpl
adc
or
xchg
push
xor
add
scas
jp
jnp
std
xchg
mov
movsb
aaa
insb
push
mov
xchg
xlat
cmp
mov
stc
xchg
ret
cmp
aas
lcall
sub
mov
adc
add
or
add
xchg
cli
stc
pop
imul
cmp
cli
xor
pusha
pop
fs
cmpl
ds
mov
xor
add
dec
push
rcll
js
movsl
adc
mov
cmp
hlt
and
sub
and
bound
mov
fwait
jge
in
sub
adc
xor
addr16
fildll
scas
adc
or
mov
arpl
int3
pushf
push
add
leave
and
pop
popa
stos
jg
pop
mov
pusha
data16
in
sub
or
xchg
mov
sar
lock
jmp
dec
inc
xchg
sub
jne
in
jne
mov
push
shl
jb
mov
push
pop
movsb
shl
shll
insb
mov
push
push
xchg
mov
rclb
stos
jge
push
push
jl
jo
mov
lds
out
inc
jno
in
jmp
int3
ljmp
outsb
mov
ds
ficoml
or
push
jb
insl
xchg
cltd
inc
or
shrb
xlat
cmc
lret
std
xor
nop
fsts
xchg
push
sub
jmp
gs
imul
xor
dec
pop
jno
mov
jge
es
adc
orl
fildll
cmc
clc
push
xlat
aaa
fsts
aaa
cwtl
cmp
xchg
cmc
cmpsl
lahf
test
mov
pop
xor
out
loop
data16
dec
fdivrs
mov
vmovntdq
and
scas
sbb
ss
aaa
aaa
and
dec
mov
push
aad
cmc
rcr
add
push
aaa
es
int3
pushl
in
or
enter
mov
mov
loop
data16
nop
movsl
insw
sti
aam
lea
stos
fs
sub
adc
mov
push
push
mov
movsl
shl
xchg
jg
adc
sbb
jo
cmpsb
sbb
mov
sbb
dec
mov
cld
aas
loop
pushf
or
push
xchg
mov
aas
cmp
hlt
mov
xchg
dec
cwtl
pusha
sub
cmp
jl
imull
mov
and
sbb
mov
cmp
adc
cwtl
mov
stc
inc
xor
jecxz
imull
cmp
mov
adc
pop
lods
adc
pop
push
add
sbb
inc
cld
pop
fs
lock
mov
xor
inc
lock
fiaddl
inc
rorl
test
cmp
mov
xor
and
add
jle
or
mov
inc
test
sbb
xchg
jnp
adc
imul
fdivr
pop
aad
jg
imul
mov
sbb
mov
xchg
xchg
adc
xor
cmp
mov
ljmp
and
icebp
xor
out
mov
mov
mov
cmpsb
test
rcrl
inc
lds
xchg
pop
dec
sbb
outsl
or
ret
and
cmp
sahf
dec
add
aad
js
dec
neg
cmpsl
mov
jne
je
or
jmp
push
mov
mov
pop
sti
imul
cmpsb
jecxz
stos
loop
mov
ds
push
mov
sahf
sarb
scas
xchg
iret
inc
adc
fnstsw
sbbb
insb
fdiv
pop
dec
cld
cltd
int
pop
dec
sti
and
fisttps
pop
sarl
inc
mov
push
push
mov
push
insb
inc
leave
and
mov
loop
cmp
xchg
fs
cmp
fisubl
add
xchg
loopne
out
movl
enter
sub
enter
es
mov
gs
fcompl
and
inc
les
xchg
cmp
sub
mov
lods
xlat
or
sbb
push
clc
shl
sbb
mov
jmp
test
or
ds
mov
cmp
sbb
out
pusha
scas
add
fnstcw
pop
xchg
mov
fwait
xor
push
xchg
mov
rorl
or
popf
jnp
movsl
shr
adc
xor
lock
cmp
and
dec
mov
inc
adc
mov
lea
mov
mov
push
loopne
fisttps
dec
push
push
or
fcmovb
xchg
adc
pop
mov
xchg
mov
cmpsl
mov
sub
mov
mov
xchg
sar
sub
imul
sub
xor
loopne
addr16
jl
mov
xchg
js
cmp
sti
xchg
je
and
dec
cltd
push
out
pop
xchg
sub
and
sbb
mov
jae
test
cmp
xlat
mov
lds
out
pusha
cmc
and
inc
or
lret
aam
es
aam
jns
out
add
mov
mov
xor
fidivrs
sbb
jg
inc
and
call
hlt
or
pop
push
cltd
jno
dec
mov
data16
xchg
pop
clc
jecxz
test
std
mov
push
cmp
cwtl
in
scas
xorb
xchg
in
leave
daa
fbstp
jae
stc
mov
out
jnp
or
mov
lea
lcall
mov
mov
xchg
cmp
jecxz
and
mov
pop
xor
bound
iret
inc
push
sub
sub
mov
les
mov
jnp
cmp
aaa
inc
mov
inc
fdivl
jno
sbb
mov
xchg
xchg
subps
mov
mov
fwait
cvtdq2ps
mov
inc
push
out
and
ja
test
in
outsb
fistpll
addl
adc
mov
sbb
adc
cmp
cli
dec
lret
sub
mov
sbb
push
ret
mull
pop
and
add
int
mov
aad
cltd
cmp
in
add
test
imul
lods
sbb
cli
scas
dec
iretw
or
sub
dec
fcomip
sub
and
xchg
ja
stc
mov
push
and
adc
in
push
and
or
aaa
add
jge
xor
adc
pop
idivl
pop
ficoml
sarl
or
dec
imul
scas
mov
out
xchg
lret
adc
lret
mov
mov
mov
mov
lahf
test
inc
cmp
psrlq
adc
fisubrs
xchg
pop
dec
iret
scas
mov
in
jo
test
mov
cmp
movsl
mov
int3
mov
out
mov
inc
mov
xor
addr16
out
xchg
ss
int
fldt
mov
mov
add
insb
sti
jmp
inc
arpl
jno
dec
ja
cwtl
sbb
adc
mov
ret
int
xchg
loopne
mov
mov
add
add
mov
mov
int
xor
out
adc
add
std
sbb
sbb
stc
dec
xchg
cmp
sbb
push
js
xchg
fstps
leave
aas
inc
int
add
add
push
out
mov
mov
orb
out
pop
xor
sub
mov
repnz
cmp
repnz
mov
xor
jno
and
mov
sub
les
shl
fdivrp
je
mov
cmpsl
stos
les
xchg
xchg
adc
test
sub
adc
or
incl
jmp
imul
push
mov
enter
sbb
pusha
aad
stc
mov
int
and
jecxz
les
rcll
cmc
add
mov
xchg
and
fcoml
inc
adc
loop
xor
ficompl
xlat
and
cmp
and
jae
ss
sub
and
insb
ss
adc
es
cld
jg
mov
sub
fsubl
and
mov
or
pop
shl
sbb
imul
xchg
or
insb
push
mov
rclb
sbb
stos
mov
dec
jnp
cmp
dec
jmp
and
xor
pusha
xor
xor
sbb
push
cs
icebp
cmp
popa
std
pop
pushf
sbb
cld
dec
or
push
stos
js
jnp
aas
or
inc
cmpsl
jno
dec
xor
loop
inc
test
jl
out
or
aas
jne
pop
fwait
jbe
mov
mov
pop
push
and
push
jp
gs
xlat
test
xchg
out
mov
push
popa
sub
push
daa
push
cmpl
lock
shl
push
inc
in
cld
insb
mov
ret
xlat
and
xchg
push
ficoms
movsb
leave
xor
pop
dec
hlt
inc
push
mov
adc
rcrl
jb
mov
out
mov
pop
idivl
cli
push
xor
inc
hlt
xchg
movsb
jne
mov
repnz
and
inc
test
jge
test
bound
imul
nop
mov
push
cmp
scas
and
jecxz
cmp
nop
push
or
rolb
or
sti
dec
insl
cld
mov
test
mov
ret
mov
imul
dec
loop
inc
jb
in
jge
xchg
adc
or
lcall
push
dec
sub
add
jmp
ljmp
pop
outsb
les
mov
andb
icebp
jbe
mov
xor
xchg
pop
das
adc
out
mov
sarb
push
push
enter
fdiv
lods
add
sbb
popf
xchg
int3
shrb
rorl
inc
aas
aaa
gs
dec
pop
into
push
mov
push
aaa
rolb
mov
push
cld
lea
jecxz
int
push
jns
imul
sti
test
pop
repz
xchg
jle
cwtl
and
out
mov
test
adc
into
jge
push
out
and
scas
lea
cld
xor
fadds
js
stc
je
xchg
fistps
jae
fnstenv
dec
or
and
jo
adc
data16
xor
int
mov
push
jle
testb
or
push
and
mov
jae
aas
sbb
cltd
push
rcll
add
flds
out
mov
fidivs
ja
daa
push
push
jbe
xchg
cmp
mul
imul
fsts
lock
test
dec
push
and
mov
int3
out
and
in
sub
sbb
into
cmp
hlt
lret
ljmp
insl
pop
out
pusha
icebp
jnp
mov
xor
ja
inc
dec
inc
ljmp
pop
jne
cmc
mov
popa
out
in
or
or
lods
jo
sti
add
push
xchg
es
push
or
loop
out
aaa
or
sub
in
xchg
cmp
cs
xor
rcrb
xchg
fs
adc
aam
push
movsb
test
lods
into
es
nop
xor
mov
dec
cmpsb
xchg
out
mov
std
shl
test
daa
or
mov
add
dec
movsl
xchg
and
xorb
leave
out
pop
xor
cltd
lret
sbb
fwait
push
push
cwtl
adc
cmp
ss
pusha
lret
leave
das
sbb
dec
cmpsl
jns
jl
lds
jne
in
in
cli
mov
mov
dec
call
xchg
sahf
dec
mov
lock
decl
jg
inc
mov
mov
push
push
std
adc
pusha
xchg
jecxz
cmpsb
cmp
fistl
add
lahf
ss
aas
push
dec
cmp
shlb
cmpsb
fistpl
aaa
and
push
mov
pop
shll
xchg
frstor
mov
xor
aas
push
mov
jmp
popf
cs
outsl
out
movsb
stc
addr16
mov
inc
pop
rorb
int3
sub
lods
bound
ds
out
ret
mov
rcr
call
sub
cmp
das
mov
mov
ret
jns
jecxz
in
sub
mov
mov
aas
lock
loopne
and
xchg
mov
icebp
insl
cmp
fwait
fs
pop
subps
push
xchg
mull
mov
repz
mov
jae
andl
adc
jge
cmp
repz
stos
jb
mov
bswap
flds
das
and
xchg
and
dec
mov
and
xchg
cwtl
repz
orb
aaa
jle
enter
imul
push
stc
test
rorl
nop
dec
shlb
test
outsl
add
sarl
xchg
cmpsb
inc
add
jae
int3
xchg
mov
lods
idiv
js
std
loope
or
test
mov
call
faddl
mov
sbb
andb
sub
lret
push
out
fimuls
mov
mov
cmpsb
movsl
cmp
cmc
shlb
imul
andl
lods
mov
outsb
out
push
pop
pop
loope
sub
cmpsb
decl
inc
jno
xchg
inc
cmp
out
hlt
int
sub
popa
aas
xor
add
cmp
mov
popf
jae
xor
and
push
jno
pop
cmp
lock
mov
mov
sub
sub
cmpsl
lds
mov
inc
daa
addb
mov
leave
cmpsl
xor
pop
sub
lods
xchg
mov
xlat
notb
bound
je
ror
xchg
in
les
lret
adc
jno
jmp
sub
mov
adc
xchg
fsubl
test
jb
mov
sub
mov
xlat
inc
gs
push
mov
inc
loope
and
push
pushf
push
mov
jbe
push
shl
jp
sahf
stos
inc
pop
adc
test
jae
aas
xchg
xchg
stos
cmp
xchg
es
std
inc
loope
push
sbb
pop
lahf
test
adc
sub
outsb
lret
test
mov
inc
aas
enter
aad
dec
or
outsl
inc
xchg
ror
adc
and
cmp
cli
addr16
stos
js
cmp
insb
mov
repnz
das
or
cmp
rorl
sub
add
test
fimull
pop
pop
jg
cmpsb
xchg
fisubs
lret
adc
int
scas
fmull
mov
mov
into
xor
dec
hlt
aaa
pop
push
repz
inc
cmp
mov
mov
popf
dec
xor
xlat
jne
add
insb
sahf
iret
cld
sub
mov
in
mov
cmp
xchg
iret
nop
jge
add
adc
cmp
dec
out
or
bound
mov
repnz
cmpsl
pop
addl
inc
jno
flds
xorb
adc
mov
mov
sub
scas
mov
rclb
push
repz
adc
movsl
xor
rolb
fldt
popa
sub
fmull
sub
ss
jle
or
ficompl
mov
das
inc
aad
rolb
mov
sbb
adcl
lods
pop
sub
roll
test
dec
shll
jmp
rcrl
repz
fstpl
inc
mov
stc
pop
adc
ss
xor
jmp
repz
sub
test
bound
and
pand
mov
inc
cmc
cmp
fildll
mov
mov
jns
push
test
cli
sbb
adc
mov
shl
fstpl
cmp
aas
jmp
imul
test
cmc
and
mov
les
xor
jnp
adc
cmp
icebp
fiaddl
dec
and
push
lds
cmc
xchg
mov
sahf
in
cmp
sbb
xchg
lret
lret
pushf
mov
mov
cmp
xor
sbb
dec
pop
xor
in
mov
hlt
and
inc
push
inc
lods
dec
icebp
and
and
repz
fisttpll
cmpsb
imul
jne
mov
fidivs
movsb
imul
enter
xlat
pop
hlt
and
xchg
jae
movsb
fidivrl
cmp
pop
movsl
pop
cmp
rcr
xchg
aam
mov
aaa
add
xor
add
pushf
push
cli
orl
dec
jnp
xchg
mulb
mov
popa
xchg
cmp
nop
mov
aaa
loope
mov
and
adc
jg
fnstenv
xchg
push
nop
das
ds
int3
in
mov
int3
bound
lret
jns
add
hlt
mov
scas
std
ret
mov
add
push
push
idivl
sbb
and
xor
mov
movb
out
jmp
jle
and
test
add
insl
mov
gs
ljmp
cmpsb
shlb
xchg
bound
mov
lock
leave
js
xchg
pop
xchg
notb
and
lea
leave
adc
in
aad
jb
in
lahf
fs
pop
add
add
divb
push
xchg
xchg
xchg
ljmp
add
cmpsl
cmp
add
testb
mov
push
iret
and
mov
jb
cmp
jecxz
nop
and
sub
lret
push
aas
pushf
jno
mov
mov
imul
sbb
bound
mov
xor
add
mov
dec
lods
add
je
movsb
xor
jg
popa
dec
lods
push
call
sub
jle
add
xchg
cmp
mov
aaa
mov
and
popa
mov
mov
dec
mov
out
data16
iret
sbb
fmulp
pusha
and
and
mov
jns
xchg
push
push
or
in
push
sbb
test
mov
icebp
insb
cmp
out
ret
sbb
cmp
daa
sub
mov
outsb
mov
cld
fadds
add
sub
add
loop
mov
adc
repz
mov
mov
stc
addr16
aas
add
scas
push
mov
mov
xor
popf
push
jb
ficoms
pushf
es
pop
mov
pop
lods
xor
adc
jge
cmp
push
pop
inc
adc
ss
rorl
in
mov
lock
jge
loope
inc
pusha
in
les
pop
and
adc
xor
cli
or
xchg
sbb
xor
aas
int
or
sbb
je
mov
jmp
mov
data16
lahf
dec
lahf
js
lock
shlb
fisubrl
rorb
mov
xchg
inc
push
or
lcall
insl
fcoms
cld
lret
add
push
int3
das
pop
sub
push
xor
cmp
fildl
rcr
pushf
fisttpl
pop
std
xor
dec
int3
pop
jbe
repz
pop
or
and
ficomps
inc
repz
lock
mov
test
das
add
mov
mov
add
movsl
test
nop
imul
pop
mov
sbb
frstor
lret
loopne
jbe
popa
cs
pushf
mov
and
and
arpl
sub
or
int
add
xchg
lods
sbb
ret
xchg
iret
dec
jmp
add
test
in
rolb
fs
xchg
push
fstpt
push
test
out
xchg
loop
jns
dec
fisubrl
test
test
mov
das
jno
out
cwtl
or
sbb
push
test
fwait
mov
xchg
mov
push
inc
movsb
shl
xor
pop
enter
dec
nop
fimuls
fsubs
pop
shll
xchg
dec
repnz
scas
add
repnz
adc
sarl
xchg
iret
ret
loopne
mov
push
add
push
nop
mov
test
in
out
sbb
cs
ja
loope
in
test
xchg
cmp
add
daa
arpl
aam
xchg
mov
xchg
mov
lret
mov
aam
lods
sub
xchg
xor
xor
int
and
loopne
fdivr
adc
push
outsl
nop
push
jo
push
dec
push
pop
push
dec
cmp
stos
sub
jo
inc
jae
jg
pop
faddl
popf
cmp
and
cmpxchg
in
dec
xchg
or
sbb
pop
punpckhdq
or
aad
dec
fnstsw
movsb
in
ljmp
mov
dec
hlt
dec
mov
sbb
cltd
not
pop
sub
jle
pushf
and
push
imul
enter
arpl
imul
cmp
mov
mov
out
scas
icebp
cmp
jo
adcb
push
dec
xchg
jg
jmp
or
mov
popa
pop
pop
cli
rolb
push
into
test
and
out
aas
push
lods
or
les
cmpl
and
xchg
mov
adc
popa
mov
loop
push
arpl
rolb
bound
mov
pop
div
insb
cmpb
mov
out
pop
dec
pop
mov
cmpl
push
arpl
mov
pusha
pop
out
cmp
jmp
mov
sub
and
les
mov
loope
adc
stos
imul
xchg
add
xchg
aas
add
nop
mov
push
jne
push
test
test
sbb
in
rolb
cmp
or
xchg
rorl
mov
dec
inc
xchg
int3
jecxz
test
aam
mov
imul
mov
cmp
scas
lods
jno
je
push
orb
into
movsb
fldt
loope
push
scas
push
jns
inc
arpl
mov
fcoms
fcmovb
jns
mov
and
jge
mov
rol
inc
jg
adc
fcompp
out
adc
mov
or
rcrl
out
test
stos
in
mov
clc
add
lock
add
add
mov
out
dec
nop
jne
or
lods
lret
in
xlat
dec
rorl
adc
test
jnp
push
push
sub
pop
sub
arpl
add
mov
gs
pop
popf
aas
test
xchg
jb
rcll
xchg
sbb
fidivrl
aaa
pop
lods
imul
cmp
sbb
enter
xor
jl
mov
xor
fisttpl
push
insb
daa
mov
mov
adc
pop
shl
mov
mov
mov
loop
pop
push
icebp
enter
jge
movsb
jge
and
aas
push
scas
arpl
mov
in
jae
pusha
pop
scas
fdivrl
xchg
bound
jl
mov
mov
xor
add
popf
mov
pop
jecxz
or
sbb
mov
jge
sbb
xchg
fistl
fcomps
into
and
push
in
int
pop
fst
xor
pop
int3
cwtl
and
or
loopne
sbb
cmc
add
mov
or
cmp
jne
in
mov
xor
jns
dec
jae
cmpsb
sbb
aad
xor
jmp
sub
clc
push
pop
sub
add
mov
sti
stos
add
lds
add
inc
sbb
mov
adc
test
ds
test
sbb
cltd
sub
stos
sub
adc
pop
test
mov
adc
setns
lcall
dec
mov
inc
mov
xlat
arpl
loopne
mov
shlb
data16
mov
daa
negl
fsubrs
push
out
and
jmp
andl
dec
aam
cmp
adc
das
cmp
cmp
je
fwait
imul
adc
and
sahf
ret
ficoml
jl
mov
fsubl
rcr
mov
mov
sbb
mov
cmp
mov
sbbl
dec
test
in
cmp
cwtl
jne
mov
mov
int3
xor
mov
movsb
mov
mov
loop
lds
daa
ret
push
testb
add
push
idiv
xchg
js
jns
cmc
stos
mov
insl
mov
cld
ljmp
sbbl
icebp
sti
mov
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
jmp
js
jno
arpl
test
dec
cmpl
pop
jp
pop
push
inc
sahf
inc
por
mov
sarb
xchg
js
mov
push
sbb
cltd
or
lock
dec
int
xchg
repz
dec
adc
pusha
push
xor
call
jae
pop
jnp
mov
and
jbe
cmp
arpl
pop
cmp
or
push
xor
xchg
mov
loope
shrl
fstpt
test
cmp
cmc
idivb
push
pop
popl
adc
scas
jbe
testb
das
test
movsl
loop
jbe
ror
and
icebp
out
cmp
mov
sub
stc
adc
imul
repnz
lods
sbb
imul
nop
sub
pop
adc
jns
adcl
push
hlt
test
arpl
aaa
dec
imul
popa
sbb
mov
loop
subl
test
ds
in
jp
and
stc
in
popa
jp
sub
andl
sahf
stc
sub
cmp
dec
cmp
imulb
mov
dec
icebp
mov
sbb
ss
cmp
test
aad
add
inc
hlt
popa
addb
es
hlt
nop
adc
out
push
sbb
xor
int
stos
and
in
add
jp
or
inc
sub
sbb
stos
fdivr
mov
cli
adc
cld
ja
outsb
fstps
adc
lcall
or
cmpsb
xchg
cmp
out
mov
cmp
jae
pop
std
sbb
mov
inc
inc
xor
cltd
fistpll
dec
lock
insb
cmpl
inc
sub
loop
mov
dec
or
lcall
cwtl
movsl
rcrl
mov
sub
js
dec
test
psrlq
sub
cli
mov
mov
mov
or
sub
push
pop
mov
lret
jns
sbb
mov
sub
cltd
arpl
loopne
mov
inc
lret
or
hlt
rolb
xchg
xor
jmp
fs
outsl
mov
and
xchg
popa
xchg
and
or
and
jecxz
sbb
cmp
addr16
shll
pop
cmp
cmpb
mov
test
mov
inc
aaa
ljmp
jo
cld
or
mov
mov
adc
sbb
add
or
imulb
pushf
jmp
adc
js
iret
mov
pushf
inc
pop
cwtl
mov
int3
int3
loope
jae
insb
mov
aas
or
dec
mov
xchg
test
fisttpll
xchg
xchg
sbb
mov
xor
hlt
cmp
pop
rclb
fs
sub
insb
popa
sahf
mov
and
ret
out
cmp
mov
push
xor
sub
shl
fisttpl
or
or
ror
fisubrl
stos
stc
loope
sbb
int3
mov
mov
jle
xor
push
push
inc
add
outsl
gs
mov
sub
data16
fadds
adc
mov
imul
cmp
cli
jge
cs
or
das
pop
or
push
in
xor
mov
xchg
add
loope
mov
jno
push
insb
xor
or
xchg
jae
cmp
daa
push
sbb
jmp
sub
or
or
xchg
xchg
addr16
jmp
xchg
or
dec
sarb
inc
fadds
dec
push
in
iret
movsl
scas
add
pushf
cld
dec
lods
mov
add
sahf
lret
cmpsl
jecxz
cmpsb
jb
pop
mov
scas
cmpsb
jp
nop
nop
push
cs
inc
in
lds
fisubl
jle
or
cmp
dec
push
sti
imul
adc
sbb
cmp
push
sti
sbb
sbb
and
or
filds
push
xor
cmp
test
es
inc
aam
xchg
push
pop
push
mov
add
push
adcl
rcrl
push
adc
cmp
mov
ja
aam
push
daa
cmpsl
imul
std
and
insl
daa
and
js
clc
in
mov
lea
mov
or
incb
mov
and
push
pand
mov
mov
popf
imull
or
cmp
mov
jno
add
xchg
rcr
sahf
lock
jle
movsb
fucomip
inc
test
xor
sahf
xchg
mov
sti
stos
xor
inc
fadd
jp
cltd
in
add
inc
and
and
sub
mov
ficoms
rol
lahf
loopne
out
fwait
call
add
pop
add
push
jnp
xchg
mov
inc
mov
add
xchg
pushf
xchg
hlt
int
add
iret
or
and
repnz
test
mov
clc
mov
clc
loop
adc
xchg
push
ds
and
stc
push
into
or
clc
lret
insb
xor
mull
pop
xor
aad
cwtl
repnz
xor
push
shrb
xor
ficoml
inc
mov
gs
repz
mov
lahf
sbb
cmp
out
fsts
lea
and
jge
rcll
or
jmp
mov
push
mov
push
push
cmp
push
and
mov
xlat
xor
jmp
xchg
cld
out
cmp
mov
ja
addb
adc
popa
mov
outsl
int3
lret
adc
mov
push
dec
lods
push
mov
jbe
fmuls
jge
xlat
lret
lcall
popf
xlat
ret
sub
or
and
in
mov
fcomp
lock
loope
fwait
imul
mov
mov
mov
pop
lods
repnz
clc
pop
mov
cltd
jno
dec
mov
inc
mov
or
fldz
jae
xor
push
insb
sub
dec
out
ds
add
sbb
cmove
fbstp
iret
push
inc
and
cmpsl
stos
loope
dec
inc
sti
or
decb
loop
and
test
repnz
mov
cmp
clc
cmpsl
mov
fs
push
sub
outsb
cmp
xchg
inc
mov
aas
xchg
cmp
stos
stc
fisttps
adc
inc
outsb
cmpsl
cmp
fisttpl
sbb
xchg
mov
scas
jmp
mov
xchg
imulb
shrl
xchg
jmp
dec
mov
sub
mov
pop
mov
xor
lods
mov
jbe
and
xchg
ljmp
icebp
testb
jle
jnp
mov
pop
fnstsw
xchg
jp
mov
cld
pop
jo
xchg
shlb
push
insl
in
pusha
loope
push
push
pushf
mov
loopne
xchg
adc
js
mov
ljmp
xchg
sub
inc
rorl
icebp
popf
xor
pop
add
in
push
sti
xchg
adc
add
jns
cmpsl
cmp
and
lods
mov
in
out
sbb
push
hlt
nop
sub
pop
fstl
mov
sub
cs
mov
in
repnz
xchg
fwait
xorl
inc
out
stos
movsl
adc
stos
push
xchg
sub
xchg
pop
cmpsb
cli
xor
lahf
fbstp
int
mov
sub
int
test
in
xor
dec
dec
jae
pop
arpl
mov
cli
loopne
mov
xor
or
lret
cmp
sub
inc
fdivs
mov
pop
rorb
lahf
test
mov
and
jle
adc
adc
sbb
inc
and
and
out
inc
popa
imul
mov
inc
repz
pop
xchg
fs
fcomi
cld
xchg
in
dec
push
mov
aaa
mov
sub
cld
xchg
es
pop
push
addr16
sub
mov
adc
dec
xchg
stos
adc
push
mov
lods
bound
out
je
cmpsl
stos
mov
mov
adc
mov
shlb
dec
lock
and
scas
xchg
call
push
xchg
stc
lahf
mov
shrl
jp
mov
mov
xchg
insb
push
mov
sbb
or
std
icebp
sub
ror
mov
int
dec
inc
shll
ds
enter
faddp
xchg
jmp
out
bound
loope
fnstsw
inc
pop
cs
orb
xor
mov
pop
std
lahf
xchg
out
in
add
subl
adc
arpl
pop
sbb
scas
lahf
imul
mov
push
jp
xor
shll
sub
out
push
ret
mov
lock
fwait
push
or
sahf
es
pop
ss
cli
cltd
cmpsb
dec
mov
and
fwait
int
adc
sbb
xor
and
jmp
in
dec
xlat
jno
scas
cmp
jb
push
inc
xor
rcrb
mov
insb
out
nop
lahf
das
mov
in
pusha
dec
add
fwait
sbb
lock
clc
jb
bound
sub
pop
adc
mov
pop
repz
cmp
push
pop
push
cmp
sti
inc
lahf
add
xchg
xor
inc
in
jnp
mov
jle
mov
cmp
xchg
rcll
rep
dec
xlat
in
addb
test
je
and
ja
lcall
dec
push
stos
pop
int3
jno
icebp
xchg
xor
cli
aas
mov
mov
sbb
addl
mov
mov
icebp
sub
ret
in
pop
xor
shr
cmp
outsl
add
popa
xchg
and
movsb
and
shlb
dec
insl
adc
stc
mov
stos
jae
jns
pop
insb
sub
cmpxchg
jge
adc
jns
scas
push
mov
sbb
cltd
addr16
clc
xchg
pop
push
sub
enter
gs
rolb
push
and
xor
js
sbb
push
push
mov
outsb
sbb
lcall
pop
and
fiaddl
out
shr
adc
rcl
mov
push
cwtl
and
mov
xchg
clc
je
ljmp
pop
sub
sub
stc
jnp
bound
or
and
mov
adc
pop
popa
fidivs
add
add
andl
in
fnstsw
xor
push
cmc
jp
cmp
pop
sahf
mov
decl
sbb
inc
pop
mov
add
and
dec
fs
inc
mov
scas
clc
pop
mov
adc
js
dec
fs
mov
add
lods
sub
mov
or
xor
aam
mov
lock
jne
insb
mov
pop
shrl
sub
cmpsb
mov
arpl
sbb
mov
jmp
xchg
inc
cmc
lods
pop
cs
push
xor
lds
and
or
sbb
mov
xchg
test
adc
fsubr
out
inc
push
gs
dec
ficoms
lea
aaa
idiv
les
jne
enter
jl
jle
and
jg
in
insb
dec
cli
adc
mov
shlb
lods
push
xor
mov
mov
push
mov
out
dec
les
fildl
js
test
ret
jecxz
mov
mov
mov
daa
idivb
ret
orb
jg
shll
xlat
test
mov
negl
adc
ficoms
lods
xchg
xchg
loop
aaa
xchg
inc
fidivl
pop
and
inc
or
mov
add
push
add
arpl
jo
cmp
lahf
in
shlb
popa
cld
inc
sti
int3
mov
or
cmpb
push
imul
mov
and
mov
adc
xlat
insb
cmp
imul
cmp
push
and
xchg
jg
mov
mov
lock
pop
inc
nop
inc
les
and
andb
lock
lods
sub
pop
lahf
imul
mov
int
std
adc
bound
sbb
dec
loopne
push
push
andb
lret
xor
addr16
mov
loop
les
test
mov
icebp
aam
cmpsl
js
aad
adc
dec
jle
lret
pop
les
lcall
dec
pop
jnp
popf
push
cwtl
les
pop
jae
pop
inc
sub
lock
sub
outsb
mov
arpl
repz
mov
cmpb
jge
repnz
mov
repnz
and
popa
andl
jns
add
sbb
jo
lcall
mov
rorb
mov
add
dec
xchg
pop
jns
in
and
out
add
xchg
scas
dec
push
push
push
sub
mov
add
adcl
xor
dec
mov
jg
xlat
scas
shrl
jge
ja
lahf
adc
out
fidivs
adc
mov
mov
scas
inc
icebp
jge
gs
rorl
ja
add
lcall
in
in
mov
dec
popa
sub
test
cmp
imul
cmp
add
lret
hlt
rorl
mov
pop
daa
hlt
dec
mov
mov
lret
xchg
sub
cmp
fnstsw
mov
mov
out
add
fxam
fidivrl
das
and
rorb
add
mov
xor
into
jecxz
cmp
jns
test
pop
iret
aam
add
mov
inc
in
mov
push
cs
inc
pop
movsl
aas
imul
adc
sarb
xor
xchg
int3
and
addr16
add
repz
xchg
inc
setns
pop
jae
aaa
mov
mov
push
xchg
and
fsts
jmp
sub
cmp
rorb
mov
jecxz
xchg
sub
xor
mov
add
inc
sbb
dec
mov
fidivrs
stc
xchg
iret
nop
pop
clc
ret
mov
ja
and
sarb
sbb
scas
fmul
lcall
div
out
fsub
and
dec
ja
icebp
cmp
xor
rol
adc
mov
mov
sub
cmc
in
add
jp
add
icebp
nop
das
pop
or
or
insb
imul
movsb
popa
test
mov
inc
stos
pop
ds
inc
cltd
fxch
mov
pop
sbb
pop
in
mov
aam
add
mov
push
and
rolb
cwtl
leave
inc
sbb
les
dec
jbe
dec
cmpsl
add
sarb
adc
add
in
lods
mov
scas
test
mov
insb
out
add
gs
dec
test
push
and
jo
xor
orl
int3
dec
add
push
aas
and
lret
adc
xor
inc
add
cmp
lret
cltd
sbb
add
data16
mov
divb
fnstenv
cwtl
mov
je
inc
pop
in
push
loop
icebp
test
daa
es
in
add
lea
jo
clc
aad
int
or
mov
std
cmp
dec
ficompl
pop
dec
jae
fsubs
xchg
xlat
jno
lods
cltd
in
sub
lahf
sub
jns
fisttps
sbb
loopne
in
adc
ja
mov
mov
mov
lret
pop
enter
inc
inc
or
mov
dec
ret
inc
xor
mov
ret
sti
mov
cmpsl
jge
negb
mov
andl
int3
fsubrl
fwait
cmpsl
out
push
jle
repnz
or
push
lods
es
test
fstpt
jns
jecxz
clc
std
xchg
repz
rol
add
lcall
jne
push
push
push
dec
or
jnp
int
aad
jg
stc
lahf
imul
dec
cmp
pop
mov
es
and
cmp
ret
jnp
addl
push
cmpsb
pop
adc
int
dec
inc
aaa
pop
dec
lods
push
pop
and
cltd
xor
push
inc
xchg
fstps
sbb
mov
adc
dec
mov
test
mov
cmp
mov
push
mov
nop
jl
inc
cwtl
mov
and
addr16
insb
xor
loop
lahf
cld
fxtract
fistpll
fcomps
and
push
orl
inc
into
sbb
test
fcomps
xchg
andb
mov
add
movsl
pop
bnd
mov
sti
add
rcr
jae
enter
dec
std
in
cmp
dec
jo
ret
sub
fs
dec
fiaddl
mov
leave
mov
pminsw
std
xchg
inc
push
das
mov
adc
int
jmp
and
in
add
leave
in
push
push
ffree
cmp
adc
jbe
mov
jnp
dec
add
and
jg
out
leave
lcall
fdivs
sub
jp
or
push
fistps
leave
icebp
std
add
inc
out
in
lret
push
aaa
mov
nop
add
ret
scas
mov
lods
push
ret
roll
mov
and
gs
stos
push
jbe
add
les
push
and
sub
out
or
je
or
cwtl
std
loope
out
test
and
je
pop
xchg
push
pop
mov
xor
lds
sarb
xchg
pop
xor
and
or
sbbb
cmp
jo
mov
repnz
xchg
fwait
lods
mov
jge
add
inc
outsb
mov
jg
pop
ljmp
mov
mov
repnz
psubsb
lahf
out
jle
shr
cmp
adc
and
add
xchg
lcall
jbe
enter
inc
icebp
out
add
cmc
sub
les
or
fisttpl
lea
or
int
push
adc
les
push
icebp
mov
outsl
fisubl
nop
or
mov
xor
std
dec
repz
xchg
insb
push
mov
inc
psllw
xchg
cmp
mov
or
bound
adc
cmpsb
and
out
lahf
sti
or
lea
sarb
lock
dec
sub
fsincos
arpl
daa
pop
pop
xorb
js
ret
and
and
loope
imul
add
rolb
xchg
mov
cmp
aad
xlat
mov
and
hlt
fldenv
mov
jle
in
cmc
xchg
fucom
xor
inc
daa
mov
push
test
push
push
xlat
xor
xor
and
out
lcall
fs
jle
sbb
or
adc
lcall
fldl
push
sbb
out
jle
mov
dec
daa
pop
or
repnz
js
sub
and
mov
pop
fmull
xchg
inc
xchg
cmpb
xor
lock
insb
fcompl
inc
jb
inc
inc
jle
in
xchg
or
cltd
je
pop
stc
jle
sarl
adc
mov
orb
push
mov
cmp
xor
sub
jg
lods
mov
add
out
ret
cli
cmpsl
jnp,pt
ljmp
insb
push
xchg
aaa
adc
xchg
jbe
adc
fnstenv
leave
hlt
cmp
adc
aad
js
int3
mov
jnp
and
or
in
lods
roll
nop
ljmp
or
test
xchg
ss
xchg
aas
cmpsb
call
sti
aad
mov
xor
shl
xchg
jl
adc
inc
in
test
cld
outsb
shl
int3
sbb
jmp
cmp
mov
andl
adc
mov
faddl
pop
dec
cmpsl
adc
cmp
cmp
test
push
sti
dec
xor
faddl
cmc
adc
insb
cmp
dec
adc
add
cltd
insb
add
xor
mov
popf
jne
mov
sbb
fildl
xor
mov
jne
iret
gs
std
sbb
push
push
add
xorl
jp
mov
aas
cltd
jne
out
pop
inc
adc
cs
ret
ret
push
subl
pop
dec
adc
sub
lret
xchg
inc
cmc
jb
adc
pop
xchg
mov
gs
inc
lds
mov
cmp
stos
xchg
cmp
jmp
inc
and
shl
cwtl
xchg
imul
or
mov
xchg
pusha
stos
hlt
mov
pop
jecxz
lret
mov
cmp
mov
adc
scas
popa
pop
xchg
xchg
xchg
pop
pop
dec
insl
mov
notb
adc
add
iret
cmpsb
lret
add
jecxz
mov
cmc
add
cmp
pop
fisttpll
outsl
xor
mov
pop
mov
sub
mov
mov
mov
stc
pop
cmp
mov
into
dec
divl
or
hlt
xlat
xchg
jae
cmp
repz
mov
outsb
imul
lock
adc
sub
sahf
sub
mov
sub
dec
dec
out
rolb
push
inc
or
out
xor
fidivs
outsb
jg
fucomip
push
out
bnd
sbb
out
imul
int3
push
pushf
call
popf
inc
lahf
push
and
pop
ljmp
lock
out
adc
dec
xchg
stos
dec
sbb
fbld
in
mov
lret
std
push
push
inc
mov
jb
cmp
push
arpl
cmp
adc
sub
mov
int
cmp
in
push
sbb
cmp
clc
mov
mov
mov
add
add
out
aaa
addr16
cmp
int3
xlat
push
mov
jo
das
lods
cmp
gs
xchg
xor
outsb
pop
sub
aad
imul
xchg
jl
xlat
cmp
dec
xor
addr16
add
movsl
or
add
cs
xchg
cltd
mov
mov
in
pop
sub
sbb
cmpsl
faddl
aam
insl
cmp
and
loopne
jne
mov
mov
lods
data16
cld
mov
inc
fbld
enter
mov
into
das
pop
mov
lret
inc
cmc
jae
mov
ss
ret
imul
ljmp
and
sbb
push
mov
xor
in
and
jne
sbbb
fdivp
or
xor
mov
xor
inc
pushf
cs
mov
in
ds
iret
jbe
push
and
out
jle
loopne
and
clc
bound
inc
scas
mov
arpl
leave
ret
inc
sub
outsl
xchg
and
rorb
testl
lock
pop
push
mov
int3
pushf
add
adc
outsb
in
fs
fcmovnb
std
loope
out
addr16
sbb
mov
mov
imul
mov
xchg
aaa
shlb
pop
and
leave
push
sbb
and
jmp
mov
inc
shrb
mov
mov
adc
insl
insl
icebp
mov
push
mov
insl
stc
flds
aas
mov
push
push
pop
cmp
shlb
add
rcll
popf
popf
adc
xchg
sub
enter
fs
mov
push
scas
lret
fnstcw
sbb
mov
pusha
fs
and
mov
jne
dec
test
ss
fldcw
add
testb
xchg
or
push
sbb
cmp
mov
dec
inc
mov
jbe
pop
popa
mov
sbb
add
loop
adcb
pop
inc
scas
adc
xor
and
in
cld
pop
insb
jp
adc
jmp
pop
jg
decb
dec
add
insb
fstl
loopne
fistps
pop
sbb
push
lret
xchg
mov
lea
adc
jmp
fs
mov
test
or
sahf
lock
loopne
mov
jne
mov
sti
mov
mov
or
iret
add
xchg
and
jb
pop
xchg
ret
mov
outsb
js
pop
inc
and
and
adc
insl
xor
sub
fildll
push
imull
jo
xchg
roll
xchg
pop
cld
or
test
nop
daa
outsl
div
ret
adc
std
mov
clc
ja
cltd
jns
cmc
aaa
or
pop
inc
xor
push
xor
dec
pusha
inc
push
jl
add
push
aam
inc
xchg
ret
jge
loope
ror
lods
push
lret
push
mov
sti
mov
test
lcall
pop
out
mov
xor
sti
out
std
fcmovu
jb
sub
push
iret
lret
add
pop
mov
lods
xor
push
push
xor
fistl
ret
ljmp
mov
pop
jne
push
hlt
xchg
cli
int
jne
les
ljmp
mov
int
xchg
mov
mov
push
cmp
movsb
hlt
leave
and
adc
or
mov
inc
cwtl
ljmp
mov
push
jl
add
lds
lret
inc
jl
push
inc
aam
and
pop
dec
dec
sti
jmp
lds
data16
jle
cmp
lcall
or
cmp
into
pop
addl
fldenv
je
imul
push
xchg
lret
mov
inc
rclb
xchg
fs
hlt
mov
stc
cli
call
pushf
xor
inc
push
mov
mov
and
mov
mov
xlat
jae
popf
sahf
dec
add
subb
cmp
into
mov
sarl
lock
out
imul
jle
fcmovbe
mov
jg
pop
lods
sbb
repz
testb
jmp
push
imul
jge
sub
test
pop
ljmp
aam
add
cld
add
cmpsb
push
inc
jl
dec
cmp
orb
movsb
mov
imul
js
call
jge
jle
push
rcll
sahf
out
shrb
test
std
repnz
ret
xchg
sahf
insl
ss
scas
data16
sbb
aaa
push
addr16
arpl
xchg
ret
ds
jp
dec
repnz
jnp
jb
loopne
push
mov
je
test
cmpsl
int
lds
mov
jo
aaa
xchg
std
sub
ds
cltd
or
xor
popa
and
dec
je
in
in
sub
gs
aaa
stos
pop
insl
mov
inc
or
or
jp
mov
lret
jl
mov
insl
dec
sbb
jle
in
in
mov
or
pop
mov
jno
adc
add
xchg
adc
pop
ret
les
mov
idivl
mov
fmull
filds
xor
xorl
push
std
pop
and
xchg
mov
jl
aad
fiadds
mov
fwait
popa
testb
pusha
mov
sti
and
data16
xchg
mov
sarl
pop
and
jecxz
inc
dec
fbld
ja
dec
push
outsb
sahf
data16
xor
aas
inc
push
xor
sub
cmp
ja
pop
jmp
mov
leave
popa
jg
push
cmp
int
and
cltd
jb
jecxz
xchg
cltd
out
loope
imul
and
fadds
or
pop
xchg
or
out
loopne
inc
add
icebp
addb
add
jge
xchg
xchg
and
xor
adc
jmp
or
mov
jmp
call
outsl
dec
fadds
and
cmpsl
movsl
adc
out
stos
leave
pop
sbb
xchg
mov
pop
das
outsb
fucomip
lds
push
pusha
xchg
push
scas
mov
cmpsb
pop
pop
fcom
jmp
inc
pop
lret
inc
push
pushf
cmp
sub
or
pushf
or
call
adc
sub
and
popl
clc
imul
jge
or
outsl
das
xor
imul
pop
add
fisubs
out
enter
je
pusha
fnsave
jne
repz
push
fwait
mov
cmp
lods
sbb
jle
out
inc
jo
xor
loopne
mov
push
ret
fsubp
inc
scas
cmp
mov
arpl
js
loopne
adc
jmp
je
aas
lods
xorl
cld
call
imul
cld
adc
push
pop
outsl
mov
mov
aam
inc
push
mov
in
or
cmp
arpl
loop
push
and
rep
cltd
sub
sbb
or
test
shll
subb
std
es
jmp
mov
sub
call
pushf
lret
cmp
dec
divb
adc
dec
fisttpl
push
aaa
pop
push
push
xchg
adc
mov
and
ja
lahf
mov
mov
test
mov
hlt
adc
pop
pop
pop
inc
fucomip
insb
cmp
mov
outsb
bound
scas
push
cmp
dec
aam
mov
add
ret
loopne
xchg
inc
mov
bound
pop
push
bound
pop
push
imul
out
or
clc
mov
push
mov
sub
fcomip
mov
out
and
pop
and
data16
movsl
ficoml
loop
dec
cwtl
cmpsb
and
fisubs
inc
add
imul
inc
sbbb
repz
cli
dec
js
pop
jne
add
addr16
and
scas
movsl
xorl
and
shll
mov
adc
inc
jno
jp
mov
mov
mov
jg
rcrb
int
adc
xor
test
fimuls
mov
push
pop
mov
dec
ror
mov
sbb
mov
popf
daa
sahf
push
in
dec
js
mov
fnstcw
and
mov
icebp
jb
adc
ja
mov
xchg
cmp
movsl
sub
les
scas
popf
fistl
lahf
cmp
scas
or
mov
sub
sti
into
fstpl
outsb
inc
xchg
xchg
pop
push
aas
push
imul
arpl
xchg
ret
js
jnp
loope
add
mov
nop
repz
mov
xchg
test
std
mov
sub
dec
sbb
sub
pop
cltd
ret
or
jnp
xchg
mov
inc
jb
dec
adc
into
mov
jl
pop
jne
iret
and
sbb
push
add
mov
sub
and
jnp
imul
cwtl
or
es
push
pop
xchg
jg
push
rcrl
aaa
xlat
cmp
xor
bound
fsub
jb
mov
test
xchg
sbb
jmp
inc
js
dec
ret
lea
lcall
push
fidivrl
fmul
imul
ficoms
hlt
push
lods
dec
fstpl
sbb
ret
xor
and
popf
or
pop
xchg
pushf
xor
adc
sbb
cwtl
pop
imul
xchg
bnd
loope
pop
arpl
push
sub
and
xor
lods
test
inc
sub
xor
jnp
xchg
push
int3
sbb
lret
mov
xchg
or
movsb
xchg
xlat
and
pop
test
fldl
int
sbb
mov
mov
mov
sub
test
adc
cmp
fldcw
jl
push
add
in
out
push
popf
dec
and
mov
je
mov
out
cld
in
imul
mov
xor
adc
cwtl
jno
test
and
shll
mov
and
cmp
jno
xchg
xor
insb
xchg
ficomps
sbb
adc
enter
pop
dec
out
es
imulb
addr16
jae
repnz
int
add
mov
imul
sbb
sub
dec
iret
lret
cmp
pop
ljmp
test
cmp
mov
mov
add
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
jmp
pop
adc
test
fadds
iret
or
shlb
add
ja
in
aas
mov
jo
insl
or
lea
sub
dec
xchg
daa
pop
inc
lock
adc
fst
mov
arpl
cmpsl
xchg
std
loope
movsl
jecxz
test
mov
and
movb
out
in
cmp
fnsave
fimull
lret
fs
xor
test
arpl
cmpb
es
imul
scas
fistps
mov
xlat
inc
mov
lret
jb
xchg
inc
mov
or
iret
loop
push
cmp
jle
and
std
mov
xchg
paddsw
push
jp
xchg
jne
sahf
jmp
mov
incl
leave
pop
mov
or
hlt
es
imul
jmp
pop
outsb
mov
ret
pop
and
in
xor
push
loop
test
inc
cs
xor
fcompl
mov
mov
mov
cmpsb
and
nop
iret
push
xor
notl
jne
cwtl
sti
jae
push
push
jns
mov
pop
mov
fnstenv
jmp
in
sbb
push
fildl
mov
cmp
std
cmp
mov
pop
sub
dec
xchg
lret
das
lods
ret
pop
sbb
mov
stos
fistpll
arpl
les
jmp
cmp
adc
movsb
add
cmp
arpl
lods
enter
sbb
in
jo
outsb
xor
fistl
sub
pop
push
sbb
outsb
push
adc
je
or
insl
aas
nop
call
pusha
sbb
or
mov
loopne
das
mov
ja
roll
ffree
sub
xchg
pop
mov
mov
stos
xchg
mov
jmp
xchg
lea
cmp
jns
push
cld
js
aam
jecxz
push
jmp
ret
lret
dec
cli
lods
lods
push
pop
outsb
scas
lret
js
jl
daa
call
mov
add
popf
lods
data16
dec
xor
mov
icebp
fdivl
out
mov
sarl
int
adc
xchg
mov
lahf
push
and
jae
sub
sbb
pop
es
jnp
push
jo
lahf
rorl
lahf
mov
adc
dec
loope
jno
add
not
cmp
cmp
dec
orl
xchg
xor
in
mov
inc
push
ret
jae
std
adc
cmp
xchg
dec
es
adc
push
cld
aas
aas
lods
push
pushf
jmp
jl
clc
and
mov
lret
test
in
mov
pop
push
andb
jmp
leave
mov
mov
arpl
add
xchg
mov
xchg
in
inc
xchg
cld
mov
je
sahf
sbb
lret
testl
repnz
adc
cmp
sub
aam
stc
int3
add
mov
scas
lahf
mov
inc
sbbb
cmp
mov
lods
pop
lea
inc
xchg
or
das
add
out
sahf
fidivs
mov
sbb
mov
and
insb
xor
popf
ds
movsl
or
cmp
popf
xchg
and
cmpb
sti
mov
pushf
mov
jne
lock
sbb
and
lods
pop
je
test
repnz
mov
jo
dec
out
adc
push
mov
sbb
sub
lcall
and
aam
cwtl
or
shl
lods
xchg
pop
arpl
mov
clc
mov
test
inc
stos
xchg
rcl
cmp
xlat
and
clc
rolb
data16
out
xorb
lods
cmp
lcall
cmp
xchg
jg,pt
pop
mov
pop
cltd
cmp
mov
fistps
in
aaa
pop
jge
les
fcmovb
mov
mov
mov
es
inc
cmp
ljmp
js
dec
cld
mov
je
iret
loope
xor
sbb
outsb
in
inc
into
das
cld
fadd
xchg
sbb
stos
sbb
fidivrl
and
cmp
sahf
and
pop
popf
pusha
enter
out
mov
or
rcl
sbb
mov
roll
imul
mov
push
pop
sub
aam
inc
cmp
scas
cmpl
jae
push
idivb
push
mov
es
dec
in
adc
daa
insb
adc
mov
sub
jge
leave
and
add
fcom
clc
arpl
in
rcl
cmovns
notl
jns
cmp
cmpsl
dec
mov
inc
out
insb
push
pop
cmp
add
sub
popa
mov
test
loop
pop
jl
ja
mov
jns
push
pop
repz
mov
mov
testl
pusha
xchg
ljmp
sarb
ljmp
or
sti
jns
ss
out
jbe
adc
sbb
loopne
aas
ja
pop
add
orl
sub
inc
sub
jg
test
jg
push
cmp
inc
pop
adc
sti
scas
gs
ss
adc
dec
mov
pushf
sbb
jne
mov
or
xor
rcrb
inc
mov
and
xor
movsl
cltd
jmp
insb
mov
stos
xchg
add
xor
or
jecxz
add
mov
jbe
int
and
aad
fcmovu
pop
push
push
lea
mov
jmp
jno
lret
push
idivl
in
sbb
push
mov
jbe
stos
loop
enter
xchg
lcall
add
es
cmp
imul
ret
inc
or
mov
in
je
icebp
inc
lods
aaa
jnp
inc
cmp
and
mov
mov
ret
mov
push
mov
imul
sbb
mov
inc
pop
fiaddl
push
shlb
push
jmp
cmpsb
pop
inc
loopne
xlat
mov
mov
sub
mov
jne
cmp
and
fs
icebp
mov
stc
sub
pop
mov
add
jge
and
adc
movsb
add
loope
pop
xor
sub
lahf
sub
enter
test
or
in
push
mov
sub
mov
shrb
sub
scas
jge
and
int3
pop
add
cmpsl
in
fucomp
loop
or
push
mov
out
lods
or
push
mov
stos
scas
fdivrs
imul
in
inc
iret
push
gs
insb
enter
adc
cli
clc
adc
xlat
into
jno
push
inc
setp
mov
dec
in
cmp
ficompl
push
pop
clc
push
loope
rolb
and
stos
inc
and
hlt
jne
cltd
fiaddl
aaa
push
jbe
mov
aas
decb
jo
push
jecxz
repnz
lock
imul
or
mov
push
push
push
add
je
inc
xor
cmp
push
stos
sbb
mov
cmp
idivl
mov
adc
xchg
push
fidivrs
icebp
in
test
sbb
mov
fidivrs
mov
imul
cmp
mov
hlt
hlt
mov
into
adc
sub
lret
push
add
xlat
jns
pushf
inc
fildl
pop
sarb
cmp
push
outsb
pop
loope
stc
mov
pcmpgtb
test
cmpsl
les
push
dec
ja
fimuls
stos
mov
divl
out
jb
aaa
inc
dec
hlt
orb
mov
ljmp
jbe
les
pop
int3
je
in
clc
popf
das
fucom
xchg
jbe
andl
ret
cwtl
lea
push
mov
inc
pop
clc
mov
loop
test
xchg
adc
or
dec
dec
lahf
cmp
or
shlb
popf
cmp
dec
fmuls
repz
mov
jb
or
jmp
sarl
sbb
inc
idiv
push
cmp
ljmp
mov
and
in
rcr
mov
pop
ficomps
outsb
gs
fiaddl
push
dec
push
in
aad
in
xor
negl
mov
adc
out
stc
mov
push
add
mov
shlb
pop
inc
pop
or
cmp
ljmpw
mull
cld
and
jl
aad
pop
sub
mov
sbb
pop
push
js
sub
or
sbb
xchg
insb
mov
and
pop
out
or
popa
adc
in
push
sub
sub
pop
ljmp
sbb
mov
stos
push
jae
sarl
inc
mov
inc
xor
push
inc
push
push
cmpb
pop
les
sbb
gs
andb
pop
push
testl
outsl
lods
mov
sub
shlb
test
xor
mov
xor
andl
sbb
push
out
mov
and
pop
sahf
xchg
jbe
jns
cmp
call
out
outsb
popf
push
jno
imul
idivl
faddl
push
xchg
mov
xchg
pop
pop
pop
test
cmpsl
into
inc
inc
js
push
stos
mov
aas
popf
dec
daa
xchg
dec
and
insb
ds
push
aas
bound
or
push
test
punpckhdq
inc
gs
jl
enter
scas
loopne
and
sub
jge
mov
jae
repnz
test
pop
lds
cmp
sarl
add
mov
ja
mov
sbb
add
and
es
imul
sti
push
je
xchg
mov
jl
sub
xor
movsb
push
mov
in
lea
jae
inc
mov
stos
jmp
jno
cmc
inc
out
call
push
daa
mov
insl
out
or
loopne
jnp
push
xor
jno
lahf
lahf
mov
dec
sub
pop
pop
sub
fs
xchg
mov
xchg
mov
xor
xchg
add
jecxz
stc
push
pop
aas
xor
ffreep
adc
xchg
inc
addr16
ret
inc
inc
out
stos
subb
rcl
adc
mov
mov
add
mov
mov
clc
push
movsl
xchg
movsl
sahf
lea
loop
notl
sbb
pop
mov
jmp
int3
lret
movsb
in
xchg
stos
xchg
lcall
pop
jmp
inc
jb
cmc
pop
pop
push
mov
and
mov
dec
iret
cli
mov
inc
roll
jno
ficoml
and
adc
pop
push
lock
sbb
out
das
jb
sbb
sub
xorl
movsb
xor
divb
repnz
add
cwtl
fwait
ds
cltd
pop
jle
xchg
mov
xlat
fcmovnb
fisttpl
dec
fdiv
mov
shlb
adcb
mov
mov
dec
out
sub
outsl
pusha
or
inc
loope
mov
mov
cltd
xor
xor
out
xor
push
mov
push
jb
xor
cmp
movsb
pop
addb
lods
pop
ficoms
cli
imul
cmp
into
pop
mov
jbe
fidivs
adc
stos
ficompl
pop
sbb
fdivl
push
sub
mov
mov
js
sarb
push
fs
repnz
mov
jle
mov
cmp
stos
flds
jg
or
or
cmp
fistpll
mov
pop
insb
or
ficoms
ljmp
jnp
test
jbe
push
inc
lret
addb
into
movsb
inc
push
cmp
mov
or
xor
adc
dec
bound
adc
push
mov
enter
adc
pushf
sbb
and
jg
mov
in
jno
in
rclb
push
xor
sub
and
sti
mov
in
aas
pop
pop
xchg
or
xor
sbb
adc
ss
xchg
jmp
dec
cld
js
adc
stos
push
xor
data16
cmpsl
rorb
out
push
cli
out
cmpsb
xlat
jno
das
xchg
sti
cltd
cmc
or
outsb
sub
movb
cld
mov
clc
lods
sub
or
or
gs
push
xchg
aaa
or
cli
xor
hlt
dec
nop
push
inc
sub
aas
clc
dec
lds
or
test
mov
lret
mov
inc
sub
outsb
add
mov
inc
cmp
mov
add
cmp
push
scas
mov
testb
shl
test
mov
fcoml
push
mov
push
add
mov
enter
cmp
adc
mov
out
and
xor
jp
cmp
jge
xchg
ret
dec
daa
sarl
sbb
addr16
dec
icebp
or
stos
cmp
adc
jb
pop
push
sub
and
loope
fwait
pop
std
leave
cmc
les
data16
les
dec
fidivs
mov
cmp
cld
dec
xor
mov
cltd
or
aam
adc
mov
sub
cmp
out
cmp
movsl
sbb
in
in
iret
jae
mov
js
mov
call
fidivl
repnz
adc
pop
into
push
dec
test
les
out
leave
cli
jne
jp
mov
pushf
pop
inc
jecxz
mov
ret
fistps
pop
xor
add
push
fwait
adc
pop
mov
aaa
xor
scas
xchg
pop
add
push
shlb
xchg
xor
cld
frstor
inc
in
jbe
dec
jl
aad
fcomps
mov
or
lret
adc
jbe
js
mov
ficoml
das
add
repz
sbb
jp
addr16
mov
jb
sbb
insl
jo
push
call
inc
nop
jecxz
mov
das
inc
cmp
jbe
pop
xchg
notb
lds
rclb
pop
xchg
lock
arpl
es
pop
imul
sarl
mov
call
cwtl
push
test
aas
andl
cmpsl
mov
pop
inc
lods
sbb
scas
cli
stos
subb
test
xchg
mov
repnz
lret
ja
dec
xor
jp
test
aaa
rcrb
pop
mov
ret
and
mov
outsb
test
pop
inc
test
jns
xor
dec
jnp
pop
pop
or
lahf
pop
push
enter
sub
xchg
mov
sarl
sbb
sub
in
shlb
aaa
push
mov
sbb
or
jle
sub
cmpl
push
clc
movsb
sub
xchg
clc
mov
and
aas
out
add
scas
ror
xchg
pop
std
jl
adc
mov
cs
in
pop
clc
cmp
das
or
mov
mov
imul
dec
mov
icebp
mov
or
and
nop
test
inc
or
push
add
and
fldenv
sub
pop
cmp
xor
cmp
jns
pop
jmp
inc
mov
adc
fstp
outsl
in
push
push
repz
lds
addl
pop
mov
ss
and
sbb
cld
lcall
cmp
ds
ficomps
mov
xlat
inc
cmp
jle
add
aas
into
push
pushf
cmp
out
imul
aaa
mov
or
cld
mov
fldl
add
in
adc
xchg
adc
adc
inc
mov
pop
cmp
mov
mov
mov
pushf
xor
pop
shl
sbbb
sub
les
xorl
jne
lea
cmp
pop
dec
mov
push
aas
inc
push
adc
lret
mov
negl
addr16
fdivr
out
inc
dec
and
mov
data16
out
out
int
in
ffree
mov
int
mov
mov
outsb
pop
mov
mov
mov
push
lcall
and
xchg
sar
leave
xchg
jge
push
fisttps
adc
fists
sbb
ljmp
xchg
jo
or
fisubrs
cmp
inc
xchg
and
nop
and
into
xchg
imul
push
jg
addr16
add
dec
ja
mov
xchg
xor
xchg
outsl
nop
scas
mov
or
mov
dec
out
and
jbe
cltd
cmp
in
aad
movsl
adc
fnstenv
and
mov
jne
pop
add
int3
into
cmp
cmp
or
daa
add
sti
mov
lods
shll
pop
jle
hlt
dec
test
xlat
cltd
mov
mov
inc
sub
test
int3
scas
lock
xor
xor
sarl
in
out
xchg
dec
jp
pop
mov
pop
mov
adc
in
shll
mov
mov
adc
mov
loope
loop
leave
add
jno
xchg
mov
or
pusha
push
adc
lahf
jo
enter
and
pop
imul
mov
jae,pt
out
mull
fsub
out
fidivrs
mov
imul
add
cmpsb
out
xchg
int
test
sub
push
fsubl
sub
adc
add
xchg
xchg
push
inc
pop
lds
cmpb
cmp
push
push
mov
dec
fsubrs
ds
imul
sub
cmp
xchg
push
mov
jbe
es
sarl
xchg
pushf
xor
mov
dec
nop
call
jno
sub
lret
mov
sbb
dec
notl
sbb
insl
pop
adcb
fwait
xchg
adc
data16
xchg
xchg
jnp
lahf
mov
daa
mov
lahf
or
cmpsw
cs
mov
rclb
jnp
sbb
test
cmpl
js
nop
mov
fxch
jmp
sub
mov
imul
js
sbb
mov
xchg
clc
insb
mov
sahf
dec
subl
or
fyl2x
loop
sub
adc
cld
jne
fld
pop
xchg
cmp
mov
call
mov
int3
push
enter
push
stos
aam
xlat
push
jmp
test
outsb
ljmp
and
nop
call
push
dec
fiadds
xchg
or
mov
mov
ljmp
lea
int3
in
cmp
mov
xchg
jge
jmp
mov
mov
das
aaa
sub
mov
cltd
gs
lds
mov
pop
pop
ret
out
mov
or
jae
mov
xchg
out
mov
in
loopne
cli
push
sbb
xchg
or
and
fldcw
orb
sbb
fdivrs
shr
cld
in
jo
test
aam
dec
rep
inc
sub
adc
js
push
xor
adc
movsl
pop
imul
pushl
add
mov
sub
xor
fcmovnbe
xor
in
std
lcall
js
aam
inc
mov
xor
mov
lods
push
pushf
mov
mov
and
mov
adcb
in
dec
sbb
mov
sub
mov
xchg
ja
in
pop
pop
fiaddl
mov
enter
mov
popa
popa
lds
mov
movsb
xchg
mov
aam
shll
pop
repnz
push
xor
dec
data16
pop
repnz
xchg
push
jg
ret
pop
xor
lods
sub
jmp
jl
push
fistl
dec
lds
out
inc
shlb
gs
aas
loop
sbb
rorl
or
or
mov
pusha
jbe
out
sti
aaa
popf
loope
addl
das
repnz
add
nop
fbld
cwtl
cld
scas
std
inc
aas
sbb
in
in
push
xchg
into
inc
mov
xchg
lock
add
cs
mov
or
mov
mov
push
pop
adc
cmp
nop
dec
test
mov
addr16
aas
out
iret
cmp
outsl
and
in
or
cmp
jae
add
inc
les
push
stc
out
lahf
pushf
adc
push
fdivp
add
cli
insb
pop
movsb
cmp
mov
jb
xchg
jne
cli
sub
jbe
or
cmpsl
pop
cmpsl
mov
ret
and
and
sbb
pushf
pusha
cld
and
test
mov
ja
sti
push
add
pusha
cmp
imul
xchg
xchg
test
movsb
cmp
enter
aaa
inc
jns
add
sti
sti
mov
cmpsb
enter
mov
pop
clc
mov
and
dec
clc
adc
push
incb
dec
push
fcomps
jecxz
mov
aaa
std
in
sub
pop
xorb
aad
mov
dec
stc
jmp
cld
pop
mov
lds
daa
stos
subb
add
cli
adc
fs
xor
jo
lcall
jl
push
sbb
dec
xchg
insb
cmp
ja
shlb
cltd
je
outsl
ficompl
mov
jecxz
ror
pop
sti
push
ja
mov
inc
movsl
out
jl
icebp
call
pop
dec
inc
call
test
dec
jl
hlt
lahf
or
and
insb
and
and
mov
dec
and
sub
xchg
push
mov
test
dec
jnp
jne
cmpl
mov
cmp
clc
shl
cmp
add
fdivs
mov
adc
int
inc
or
jne
ja
mov
cmp
adc
stos
pop
repz
dec
sub
cmpsb
fisubs
out
push
repnz
or
dec
ds
push
push
es
test
outsl
leave
pop
in
ja
push
pop
mov
inc
mov
push
mov
jle
ljmp
ja
adc
mov
aas
sub
xor
mov
push
push
stos
jge
gs
lahf
mov
loope
dec
negl
dec
popf
dec
pusha
lahf
mov
repz
stc
cmpsb
and
pushl
pop
xorl
cmp
xchg
out
and
shrb
mov
loop
dec
sbb
roll
push
push
ss
inc
ds
add
and
icebp
pop
int3
sbb
jmp
js
sbb
scas
adc
xlat
inc
pop
cmp
arpl
mov
jb
sub
in
pop
jge
aad
add
jnp
fnstenv
jle
push
ds
call
and
add
and
in
fcmovu
add
xchg
pop
add
xchg
cmp
xchg
xchg
add
sbb
jo
out
je
nop
jecxz
test
jle
jae
jns
fwait
xchg
into
push
or
test
mov
adc
popf
mov
or
or
mov
cmpsl
sub
sbb
fsubr
jg
sub
adc
jns
push
xlat
xchg
mov
faddl
aad
rcrl
dec
fwait
jp
push
jg
mov
inc
lret
insl
loop
outsb
xchg
fwait
into
stos
ss
fimuls
xchg
cmpsl
imul
pop
scas
out
mov
das
data16
shrl
and
ljmp
nop
adc
xor
mov
mov
push
adc
xor
inc
movsl
dec
mov
jl
repz
mov
outsb
mov
jl
push
cmp
lret
cmpsl
in
loop
pop
push
or
std
aad
dec
sbb
test
sub
out
imul
mov
lahf
outsl
and
dec
inc
adc
mov
cld
push
sti
aam
inc
xchg
mov
pusha
iret
adc
and
jne
stc
xor
gs
test
and
cmp
sub
data16
push
call
out
test
jp
push
mov
and
cmpsb
xor
jl
aad
je
sar
je
dec
mov
jg
jle
ret
xor
daa
push
mov
pushf
es
sti
icebp
cmp
xor
popf
es
pushf
jl
sub
fildll
jns
fisubrl
test
ret
dec
movsb
push
mov
xchg
add
add
daa
sbb
jmp
in
insb
add
stos
lret
xorb
add
clc
dec
call
ja
rorb
iret
mov
movl
jne
cmp
leave
cmpsb
fisttpll
aaa
push
out
fs
adc
ss
sbbb
shlb
fdivl
xor
cmpsb
pushf
jg
ljmp
adc
rorb
loopne
add
and
cmp
fidivl
clc
push
inc
stc
sub
jmp
cmc
stc
fisubl
gs
sub
inc
or
mov
out
pop
mov
xor
sub
movsb
sarl
das
in
es
aad
into
fldt
test
mov
mov
shl
xchg
mov
loope
jb
movsb
shl
add
pop
imul
xchg
push
loope
in
inc
mov
or
icebp
or
jmp
or
mov
popa
cli
push
stos
xor
in
sub
mov
rclb
or
fs
jo
push
out
hlt
dec
je
pop
imul
or
or
push
pop
sbb
fdivs
ljmp
fnstcw
cli
cmp
mov
loop
xor
inc
jb
dec
jle
xor
pusha
mov
mov
pushl
add
scas
push
pushf
xchg
data16
test
aas
rorb
testl
out
test
fst
cmp
adc
and
pop
andb
test
dec
mov
inc
jae
inc
cwtl
xchg
push
sbb
fiadds
cmp
adc
out
inc
mov
dec
adc
mov
jge,pt
in
fmull
ret
cmp
call
mov
sub
das
adc
push
fisttpl
pop
imul
bound
pop
daa
mov
dec
xor
int
mov
fbstp
scas
jecxz
enter
mov
pop
push
jg
lea
add
mov
mov
loope
js
pop
ret
pop
mov
pop
dec
sub
adc
or
aam
mov
pop
incb
in
xchg
jb
les
out
mov
cmp
jle
jno
enter
fldenv
sbb
sbb
dec
in
out
push
gs
adc
cmp
xchg
push
outsb
outsb
and
lock
push
std
xor
movsl
xchg
pop
in
cltd
je
movsl
pop
and
test
ljmp
xor
and
pusha
ret
and
sub
js
and
fs
leave
rolb
jle
pop
in
loope
pop
push
insb
ss
mov
jmp
jge
dec
or
mov
shlb
popf
repnz
cmp
leave
jb
call
daa
repnz
rcll
sahf
shl
fnstenv
ljmp
mov
pop
and
fbstp
sub
movsl
jecxz
fsubrp
imul
sbb
mov
and
xchg
jge
call
sar
call
jmp
out
repz
inc
add
arpl
cmp
inc
fdivl
out
sarb
lret
jl
data16
nop
mov
mov
cmpl
mov
pusha
dec
pop
pop
add
jne
ret
test
sub
outsb
xchg
into
jle
loopne
jbe
je
cmp
mov
scas
add
iret
loopne
pop
je,pt
sub
push
xor
mov
xlat
push
sbb
outsb
dec
inc
jb
mov
outsl
pop
rorl
repz
loope
mov
hlt
mov
data16
arpl
fistps
xor
pushf
stc
sbbb
cmp
or
orl
inc
inc
push
cmp
call
or
adc
mov
pushf
ret
inc
dec
inc
mov
mov
pop
mov
mov
aaa
loopne
punpckhqdq
gs
add
and
and
in
sub
insb
dec
xchg
in
rcll
pop
aas
inc
sbb
mov
lahf
mov
pop
imulb
aam
mov
cmp
insb
sub
ss
pop
gs
fstl
mov
mov
daa
outsl
jbe
jp
jne
lcall
push
push
inc
push
pop
mov
jp
sbbb
enter
pandn
and
in
ds
lcall
pop
sbb
jo
and
scas
xor
stos
sbb
cmp
iret
mov
add
repz
ja
repz
jp
push
dec
arpl
clc
cmp
mov
inc
ret
push
lret
xchg
add
pop
adc
inc
xor
stc
jb
imul
inc
pop
mov
or
test
push
or
sbb
dec
js
push
or
push
fnsave
and
and
fwait
insl
lock
adc
ljmp
movsb
dec
aaa
andl
daa
mov
movsb
fldl
fwait
mov
and
sbb
inc
cmpsb
scas
aam
jns
shl
push
out
push
das
or
mov
in
mov
in
dec
adc
xor
mov
push
test
mov
mov
sbb
push
mov
adc
mov
addr16
mov
xchg
jle
fxch
cltd
lcall
jbe
mov
stos
stc
pushf
stos
dec
popa
out
lds
jns
push
inc
dec
ret
inc
cltd
inc
push
scas
inc
mov
or
sbb
cmp
call
mov
call
jns
in
lods
lock
std
adc
ret
mov
std
sbb
xchg
xor
mov
fwait
inc
jmp
shll
or
in
sub
dec
push
les
mov
add
cmp
roll
xor
pop
subb
not
mov
icebp
test
jecxz
xchg
dec
cmp
add
jge
sub
jbe
std
and
pop
ds
imul
pop
jmp
js
nop
sbb
cmp
jg
mov
mov
and
lahf
insb
fmuls
jmp
and
sbb
jmp
xchg
lret
and
sbb
fidivrs
stc
or
idivl
lahf
shr
push
aas
lea
mov
jb
sub
cmp
ss
or
stos
mov
in
mov
add
movsl
jbe
mov
cltd
imul
lods
fwait
xor
mov
leave
and
scas
pop
xor
mov
addr16
in
pop
push
jns
inc
add
xor
lds
outsb
inc
clc
pop
out
and
push
imul
sbbb
mov
popl
dec
lods
cmpsb
dec
popf
outsb
jns
pop
xchg
mov
pop
ja
sti
sbb
enter
jns
std
sub
pop
testb
inc
fsubrl
insb
ljmp
bound
mov
or
add
int
xor
mov
push
js
and
jmp
testb
cltd
and
sub
out
sub
cmc
fnstcw
cmpsb
ss
divb
mov
aam
cmp
test
or
sbb
dec
je
xchg
insb
out
xchg
enter
call
adc
sub
jp
dec
scas
or
mov
adc
sti
ss
sbb
mov
jae
pop
repz
mov
add
test
dec
adc
xchg
push
pop
mov
dec
inc
jge
xor
pop
or
lea
push
sarb
dec
adc
inc
sub
lea
int3
sti
pop
out
cwtl
loop
jmp
inc
lods
test
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
or
mov
dec
mov
xor
add
adcl
mov
sub
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
sbb
mov
mov
mov
xor
mov
xorl
add
movzwl
mov
andl
movb
adc
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
subl
mov
xorl
xor
addl
sub
addl
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
andl
push
notl
movl
mov
addl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
andl
xor
mov
xor
mov
sbbl
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
cmp
movl
jb
mov
xor
add
jmp
sub
mov
mov
or
mov
xor
mov
addl
add
adcl
movzwl
movl
mov
mov
movzwl
addl
xor
adcl
add
mov
mov
mov
inc
inc
mov
cmp
jmp
shl
inc
dec
cmp
push
mov
pop
cmp
xor
jp
dec
xor
xchg
repz
in
out
nop
testl
cmp
fs
cwtl
pop
sbb
ds
fists
jnp
or
hlt
push
mov
fldcw
add
xor
push
imul
add
add
cld
ljmp
mov
cmp
and
in
mov
jge
fstpl
ss
cmpb
inc
cli
add
mov
scas
push
jle
fcoms
cmp
jae
cmp
mov
and
ret
into
fnstcw
jo
icebp
or
fsubrp
fs
jae
shl
jmp
sbb
adc
mov
dec
push
in
push
loop
sub
mov
and
xor
adc
push
jl
pop
and
or
push
pop
dec
adc
dec
and
filds
pop
xlat
js
mov
repz
nop
pop
add
dec
jne
xor
and
xchg
shll
pusha
add
ret
aaa
sbb
cmp
mov
cmp
mov
outsl
xor
mov
cmp
pop
lret
push
add
popf
lods
and
or
mov
jg
lea
addr16
test
loop
ja
pop
push
addr16
sarb
cwtl
mov
adc
movsl
cmpsb
adc
inc
xor
mov
inc
ret
insl
or
addb
push
int
adc
sbb
dec
test
jns
sarb
roll
inc
int3
add
jae
fstpt
cmc
popa
dec
fisttps
loope
aad
cmc
repnz
out
or
mov
sub
ja
sbb
fnstcw
lret
cltd
pop
iret
sub
sbb
movsl
or
inc
xchg
pushf
lock
ss
in
jle
mov
mov
and
mov
dec
dec
mov
popa
fucom
int
sub
lret
mov
sahf
cmc
inc
xchg
dec
jle
push
jnp
int
cld
mov
xlat
iret
icebp
cmc
mov
imul
mov
jnp
inc
in
aaa
dec
dec
bound
push
xor
inc
pop
jl
fldt
rcr
mov
mov
push
mov
sahf
push
nop
mov
jl
je
cmp
movsb
and
xchg
scas
cld
xor
stos
lods
inc
adc
dec
push
or
xchg
clc
imul
mov
xchg
mov
out
nop
xchg
lods
jmp
loope
jmp
jb
insb
cmpsl
sbb
lods
lcall
lahf
rcrl
jle
test
jne
cmp
ljmp
or
mov
inc
xchg
inc
cmp
fmuls
inc
in
pop
pop
sbb
sub
imul
decb
les
icebp
mov
nop
ficoms
in
xchg
adc
scas
sbb
dec
cmpsb
jns
cli
je
sub
lock
leave
imul
js,pn
add
loop
aam
ret
inc
lret
add
in
inc
and
or
ror
rcl
imul
fisttpll
push
pop
loop
jp
sub
add
inc
rorl
rclb
mov
cwtl
push
xor
push
dec
fcomi
mov
add
sti
rorl
mov
lea
enter
push
js
rclb
lods
adc
movsl
mov
pop
popf
shrb
pop
fisubrs
inc
xor
sbb
mov
or
mov
pop
into
cmpsl
idivb
and
pop
shl
lds
test
shll
popa
int3
mov
lea
shl
or
push
sub
mov
sub
mov
inc
xchg
sbb
cmp
pop
mov
push
dec
sti
sbb
xor
push
xchg
lea
mov
and
or
addr16
mov
add
popf
int3
push
jnp
lods
call
div
dec
sbb
jae
mov
add
dec
jmp
xor
fmuls
icebp
ds
cmpb
push
imul
xchg
mov
in
cmp
lahf
ficoml
test
lds
test
mov
testb
cmp
mov
jg
xor
addl
call
gs
fcompl
lock
xor
push
jge
into
sarb
sti
push
and
push
and
repz
push
jge
and
add
xor
movsb
xchg
lahf
adc
pop
fiaddl
insl
mov
dec
mov
shrb
cmp
call
rclb
daa
icebp
jbe
sahf
push
pop
das
lods
jno
imul
sarb
mov
mov
push
sbb
inc
jmp
clc
in
mov
xchg
pop
or
mov
jae
call
push
sbb
dec
nop
aaa
push
and
xchg
push
repnz
xor
sub
fcomps
sub
jne
mov
mov
push
int3
inc
mov
jge
pop
cld
push
xchg
jnp
ss
push
test
jl
lahf
mov
test
jno
imul
imul
pop
enter
cmp
jnp
adc
jmp
cltd
insl
or
fcmovb
and
les
sar
and
int3
push
sbb
xchg
adc
rcr
jo
nop
mov
mov
lods
xor
mov
inc
mov
mov
pop
rcll
imul
fcomps
sub
mov
dec
mov
mov
mov
mov
mov
mov
pop
adc
or
cmp
sbb
ds
ret
shrb
sahf
add
jge
popa
mov
lahf
inc
add
mov
xor
lcall
cli
pop
xchg
and
mov
fucom
call
pop
mov
mov
lcall
sbb
in
inc
sbb
jbe
fcomp
push
or
aad
pop
int
add
daa
ret
push
cmpsl
inc
mov
jnp
xchg
ja
insl
dec
stos
addr16
inc
call
stc
add
pop
or
push
hlt
cmpsl
sub
lods
out
mov
es
insb
push
sbb
jne
mov
fcmovnbe
sbb
inc
loopne
popfw
aaa
cmp
ljmp
xchg
xor
pop
addr16
scas
aad
insl
loop
pusha
sbb
setge
sub
xchg
stc
iret
fldcw
into
shll
dec
test
ret
and
mulb
add
push
xor
jnp
jecxz
sbb
andb
out
push
int
push
test
ljmp
add
mov
into
jp
arpl
sbb
cmp
push
cmp
fstpl
pop
push
cmc
test
in
into
sub
or
in
add
outsb
sbb
bound
mov
push
sub
hlt
call
sbb
jno
test
shlb
repnz
cmp
call
xchg
imul
xor
int
in
rclb
adc
xchg
jge
dec
lea
imulb
insb
scas
daa
cmp
inc
incb
stc
or
dec
adc
mov
mov
mov
gs
mov
push
jmp
mov
inc
pop
dec
jbe
sub
fs
add
stos
repz
xchg
cmpsb
les
push
lret
pop
cltd
jge
aas
das
out
sub
mov
pop
jge
pop
mov
div
mov
into
fidivs
mov
mov
cmpsb
sbbl
daa
and
dec
in
cmc
pop
push
mov
and
dec
repz
idivl
jp
adc
and
cli
popa
imul
jb
mov
cmp
mov
add
sub
push
bound
xchg
xlat
mov
shll
andb
iret
movsl
sub
add
scas
sub
adc
arpl
or
xor
xchg
std
jb
test
movsl
scas
jp
add
sub
jns
pop
jecxz
and
mov
shlb
rcrb
mulb
pop
mov
gs
aas
das
fwait
cmpsb
mov
out
cmpsl
shrl
clc
mov
mov
scas
xchg
cs
rcr
dec
inc
call
pushw
or
push
lock
aad
decl
enter
mov
jb
mov
insb
call
cmp
xor
popf
mov
lds
sub
insb
imul
xorb
pop
sub
ja
sarl
adc
addl
pushl
aam
out
lea
int
dec
aaa
ficompl
mov
cld
shrl
shrl
jmp
mov
or
or
xor
xchg
fdivp
push
inc
sbbl
fchs
pop
adcl
jne
xchg
xor
xchg
inc
dec
ljmp
xor
sahf
xchg
add
sub
pop
leave
cmp
movsb
test
out
je
sbb
pop
je
divb
test
rcrl
push
cmpsb
inc
loopne
and
inc
dec
out
scas
shlb
mov
cli
mov
lahf
sbb
fwait
cmpsb
push
xor
in
or
aad
roll
sbb
adc
adc
cwtl
xchg
sub
cmpsl
test
testl
xchg
addr16
pop
dec
fwait
pop
or
mov
jge
inc
sbb
mov
in
popf
add
jecxz
inc
ret
sub
cmpps
fisubl
dec
mov
adc
pop
movsb
xchg
lock
mov
push
insl
mov
sbb
nop
popa
int3
jp
bound
movsl
dec
dec
jecxz
loope
insl
repnz
push
fs
cmp
iret
movsb
jne
adc
test
shll
adcl
push
lcall
enter
hlt
stos
sbb
out
repnz
dec
mov
dec
xchg
in
pop
leave
push
int3
cli
sbb
and
mov
cs
add
mov
mov
push
and
mov
jnp
imul
or
out
cmp
test
pushf
mov
mov
xor
sbb
out
in
jbe
push
cs
les
xchg
push
cs
mov
call
sti
xlat
bound
pop
nop
inc
cmpsb
jge
add
inc
leave
rcll
push
in
popf
lahf
pop
adcb
test
push
fcomp
sub
dec
aad
insl
push
cmc
movsl
sub
jae
add
sbb
push
sub
fistpll
dec
in
das
jp
cmp
add
xorb
outsb
cmc
push
mov
mov
and
lods
xor
dec
jle
int
jne
and
cld
xchg
inc
and
scas
bound
les
mov
pop
xchg
adc
scas
test
sub
mov
pop
ss
andl
pop
lds
dec
xor
and
push
xor
mov
cmpl
jae
divb
test
aad
pop
jecxz
push
xor
jns
pusha
push
lahf
dec
push
scas
cmp
mov
sbb
jae
mov
cmp
inc
mov
in
rcl
mov
shlb
and
mov
add
pop
jo
pop
xchg
push
sub
xor
mov
and
adc
sbb
and
filds
sub
ja
out
and
aas
push
and
imul
mov
in
jl
lahf
cld
icebp
xor
or
cmp
mov
cli
add
xchg
jnp
mov
ss
mov
dec
pop
inc
mov
mov
lret
icebp
shll
lds
sbb
mov
inc
insb
inc
pop
subb
in
outsl
aas
mov
mov
xchg
lret
push
push
gs
xor
cmp
xor
dec
push
daa
fisttps
push
adc
mov
fcompl
call
fmull
pop
xlat
ret
and
lret
lods
or
adc
cmp
test
xchg
insl
aaa
xchg
mov
xchg
and
dec
fcoml
xchg
adcb
out
and
mov
ljmp
add
pop
aaa
out
mov
loop
and
mov
fsubl
cmp
enter
mov
mov
lods
leave
ret
dec
aam
and
call
xchg
icebp
sub
aaa
imul
jnp
sahf
push
sub
mov
cmpl
sub
dec
xchg
pusha
mov
push
dec
cmp
call
push
jle
loope
pushf
rcll
or
cmp
pop
pushf
adc
sahf
jecxz
sbb
dec
or
add
lret
and
xchg
data16
adc
ret
mov
js
dec
call
push
sub
mov
xchg
push
jge
sbb
sbb
jb
xor
jl
sub
mov
xchg
pop
mov
outsl
ja
test
test
cld
jp
ljmp
js
sub
out
or
jle
scas
test
sbb
xor
cmp
std
mov
mov
pop
jmp
mov
jl
stos
add
and
pop
ficoms
stos
xchg
lcall
jnp
push
in
xor
or
lock
pop
or
mov
loope
call
push
aaa
push
pop
in
int3
sub
gs
xchg
loopne
int3
xchg
sarl
cmp
scas
out
mov
xchg
sub
or
hlt
ret
in
pop
pop
pop
mov
shrl
xchg
aad
stos
xor
hlt
mov
or
gs
pop
dec
mov
mov
mov
push
pop
enter
push
push
aaa
je
or
jbe
jb,pt
jae
xchg
inc
adc
test
pop
movsl
pop
adc
mov
push
mov
ja
bound
popw
scas
inc
cwtl
jb
push
or
xchg
out
sbb
das
xor
scas
das
dec
adc
in
mov
ret
imul
fmul
pop
jnp
cmp
jmp
jl
ljmp
loop
std
lret
std
dec
mov
mov
and
rorl
js
sbb
das
mov
mov
repz
mov
sbb
and
int3
mov
in
xchg
mov
xchg
iret
shr
pop
std
lcall
imul
inc
in
cmp
movsl
iret
xor
mov
cli
jmp
std
jmp
in
jnp
xchg
sub
inc
inc
xlat
xchg
loop
fstpt
jns
ljmp
int3
add
adc
mov
or
xchg
fldcw
sub
in
mov
enter
mov
jns
lods
in
shlb
mov
add
sti
dec
nop
mov
or
push
lods
rcrb
pusha
pop
xchg
lcall
in
stc
jb
loop
push
lahf
cmpsl
mov
push
gs
mov
js
out
ret
lcall
pop
mov
push
rcrb
sub
arpl
fdivrs
xchg
movsb
cwtl
or
and
pop
iret
sbb
sub
rorl
push
arpl
xchg
fildll
cmp
inc
aas
ret
addb
mov
test
xchg
jp
popl
inc
loope
das
ljmp
add
jp
dec
popf
mov
or
movq
or
adc
cmp
push
imul
insl
adc
adc
dec
iret
bound
clc
dec
out
and
dec
repnz
lea
cmp
mov
mov
popf
adc
cltd
inc
lds
sub
lahf
dec
pop
push
xor
pushf
lds
pop
test
mov
pushf
in
pop
adc
sub
into
test
sbb
fistpll
faddl
nop
pop
cmpsb
fst
push
sub
movsl
lods
inc
mov
mov
cmp
mov
pop
test
in
pop
mov
repz
and
lea
dec
in
inc
es
push
jne
or
dec
add
test
aas
pusha
test
andb
mov
int
scas
jg
cmpsb
sbb
sti
or
cmp
jbe
inc
fdivr
dec
xor
cmp
add
test
jnp
jne
pushf
push
shr
jp
jno
ljmp
and
test
sti
movsb
push
and
dec
cmp
jg
loop
sti
sarb
and
sahf
push
nop
cmpsb
ljmp
jl
jns
xor
jb
xchg
and
adc
mov
jg
dec
outsl
jmp
cltd
mov
sub
sbb
jg
add
es
adc
insl
mov
mov
call
sbb
and
jmp
cmc
out
adc
inc
js
and
jno
lea
into
arpl
addr16
repz
in
movsb
mov
mov
push
cmp
daa
mov
jae
lds
ss
movsb
ret
test
js
xor
pop
jmp
out
fidivrs
jno
mov
mov
sub
sub
cmpsl
icebp
dec
dec
movsb
sub
repz
stos
cltd
pop
sbb
jg
jns
pushf
cmp
or
cs
xchg
xchg
fldenv
pop
and
pop
mov
lea
xor
add
jge
cmp
xchg
mov
jne
cs
fistpl
mov
inc
mov
jp
cmp
and
sbb
mov
mov
dec
add
std
mov
fsubs
ret
jmp
loopne
ret
mov
or
pop
and
lods
ljmp
xchg
std
or
or
pop
aad
mov
iret
dec
push
dec
gs
cmpsb
xchg
add
sub
jne
dec
push
mov
mov
repnz
pop
mov
fistl
jbe
sub
mov
bound
mov
adc
popf
mov
sar
inc
jge
pop
mov
add
test
jnp
stc
xchg
inc
adc
fcmovne
push
adc
sbb
dec
les
xor
cmpb
add
std
dec
nop
loopne
bound
cmc
les
and
repnz
adc
je
in
in
pop
in
dec
sub
data16
shlb
sbb
mov
test
popl
addr16
pop
mov
fcomps
pop
mov
scas
push
jle
adc
movsl
imul
or
xchg
cmp
mov
sub
add
cli
fisttpl
sbb
sub
lcall
fimull
jl
test
sub
arpl
test
scas
lahf
xchg
and
xchg
fnsave
in
mov
pop
std
sbb
cld
push
and
inc
sub
call
js
inc
jno
xchg
cld
mov
xchg
xchg
fnsave
jg
push
int
xor
xchg
lret
adc
mov
sub
and
out
aam
xchg
jbe
jmp
sub
dec
mov
imul
imul
dec
mov
jae
xchg
xor
lret
imul
aam
bound
push
adc
cs
inc
dec
sbb
mov
push
arpl
lock
push
ss
or
mov
mov
add
in
cwtl
pop
mov
imul
nop
js
jne
subl
out
out
xor
xchg
push
ret
popa
xlat
test
inc
aaa
jp
sbb
inc
std
sbb
jmp
rcr
push
jg
jne
das
xchg
stc
insl
ret
rorl
sbb
pop
mov
xchg
lahf
test
call
adc
pop
fstps
sub
pusha
jecxz
popf
push
mov
lahf
enter
out
in
xchg
adc
or
in
aam
lock
adc
jmp
pop
or
mov
movsb
push
sub
pop
jle
aas
cmpsl
dec
pusha
dec
pop
iret
adc
push
and
data16
icebp
mov
jno
in
int
jge
popw
int3
clc
push
leave
dec
aaa
xchg
test
pushf
or
jecxz
sbb
inc
outsl
inc
cs
enter
sbbl
jg
push
and
ja,pt
pop
nop
ljmp
test
pop
mov
xor
xlat
repnz
dec
push
scas
pusha
xchg
or
sbb
xchg
jno
fs
add
mov
in
adc
movsb
cmp
lea
stos
mov
out
push
cmpsb
and
pop
or
ss
out
in
sbb
sub
je
jmp
sbb
pop
xor
fsubs
stos
xchg
xor
je
adc
push
xchg
jl
pop
repz
xchg
sar
add
addr16
inc
cmc
lock
xchg
mov
int
inc
loopne
rcrl
push
cmp
pop
repz
stos
mov
lods
push
ret
xchg
mov
rcll
lcall
adc
cltd
cmpsb
shll
or
cltd
in
add
ja
es
inc
stos
mov
pop
and
or
cmpsl
loop
push
out
mov
insl
cmp
jge
ja
ret
adc
dec
add
mov
aas
data16
sbb
fidivrl
mov
jno
lea
insl
ja
inc
mov
and
adc
int
leave
push
js
jne
pop
lods
rorb
jmp
mov
inc
lods
xchg
addb
or
jge
lret
sub
fldcw
cld
sti
or
shl
pushf
pop
mov
clc
adc
lret
push
in
cmc
push
push
in
into
sbb
jp
bound
je
mov
pop
push
mov
jl
pop
dec
sarl
in
movsl
jp
adc
push
rclb
add
mov
mov
mov
icebp
inc
sub
mov
es
jmp
lea
pop
test
push
sub
xor
testl
fdivrl
or
push
and
aaa
rcr
add
call
lods
jno
stos
cld
mov
jns
xchg
add
or
jp
jae
dec
jl
mov
jle
jecxz
pushf
push
out
push
jae
mov
pop
sti
sub
imul
mov
jbe
or
sbb
jb
repnz
fstpl
push
aaa
push
jns
fiaddl
shrl
push
inc
scas
xlat
out
mov
ja
aaa
xor
jnp
sbb
es
sbb
xor
jbe
subl
xor
push
sbb
inc
pop
and
xchg
mull
std
dec
cltd
cmp
cld
cltd
jo
mov
pop
aas
enter
push
mov
stc
and
jns
mov
pop
mov
es
lea
cmp
js
sub
loop
push
je
cwtl
mov
shlb
dec
scas
sti
push
mov
mov
neg
pop
stc
mov
mov
push
clc
push
loope
sbb
sbb
int3
jbe
popa
mov
inc
mov
test
sub
mov
roll
rcrb
xchg
add
xor
lds
xchg
push
mov
pop
daa
mov
mov
dec
mov
mov
loop
hlt
fidivrs
ds
xchg
inc
jmp
dec
xlat
xchg
cmc
sub
cmp
ret
pop
loop
lahf
inc
es
addr16
cs
xor
jbe
divb
inc
loopne
icebp
adc
lods
ret
xchg
xchg
sub
ja
out
push
scas
cmp
sbb
mov
push
dec
jge
xchg
add
inc
pop
mov
add
mov
mov
add
pop
mov
fnsave
push
xor
jp
mov
aam
ds
pop
push
es
mov
dec
pop
inc
adc
jne
aad
sub
std
push
inc
xor
scas
mov
mov
hlt
adc
js
add
or
jbe
scas
imull
xchg
data16
jg
adc
aam
popa
inc
outsb
aad
xchg
pop
mov
sbb
sbb
fs
mov
sbb
jbe
ss
jge
pusha
mov
lods
pop
cld
dec
test
les
js
inc
sub
popa
mov
dec
fisttpl
test
ud0
scas
adc
sbb
sahf
or
cmp
fs
lcall
sub
sub
push
imull
xchg
pusha
pop
pop
jb
mov
daa
int
mov
test
adc
sub
push
or
fsts
xchg
sub
jmp
lock
mov
adc
ljmp
cmp
lret
or
sahf
ds
aaa
data16
aaa
fisttpl
mov
jge
or
jne
data16
jb
imulb
mov
imul
daa
mov
mov
loopne
sahf
movsl
in
xchg
add
xorl
fs
mov
addr16
jb
mov
or
push
sbb
sti
ljmp
sub
adc
test
inc
cmc
push
mov
mov
dec
gs
pop
adc
dec
sbb
push
ror
popa
adc
cmp
mov
popf
mov
out
movsb
addl
call
push
jge
sti
out
xchg
sbb
or
mov
jle
dec
repz
fistps
mov
xchg
mov
mov
and
hlt
test
push
rorb
or
clc
je
mov
clc
mov
rcrb
cltd
xchg
shll
mov
mov
jne
dec
ffree
imul
push
repz
stc
pop
xchg
and
and
mov
inc
adcl
addr16
pop
aas
sub
push
push
fcoml
sbb
dec
nop
cltd
lds
adcb
outsl
mov
rolb
mov
push
mov
xchg
loope
ljmp
jl
mov
cmpsl
in
daa
pushf
fildl
inc
jae
pop
jo
mov
mov
scas
fwait
adc
mov
mov
xor
or
adc
call
push
mov
test
insl
cwtl
test
test
loop
lret
push
scas
int3
outsb
fucom
lahf
cltd
jg
jns
loop
fistpl
sbb
mov
hlt
xchg
pushf
push
popf
aad
cmp
push
or
xchg
in
xchg
loope
js
in
movsl
xchg
push
xchg
xchg
int3
pop
repz
popf
mov
inc
xor
inc
push
cmp
dec
xchg
mov
push
and
jns
addb
pop
aam
cmpsl
pushf
or
dec
out
inc
jns
outsl
add
push
xchg
push
scas
bound
push
jmp
inc
xchg
cmp
pop
lahf
rclb
test
movsl
add
mov
add
mov
jae
shrl
call
pop
and
gs
adc
mov
xchg
inc
in
xlat
out
dec
jg
and
dec
ds
fistpl
or
out
xchg
add
cmpsb
push
shlb
push
mov
dec
add
test
lods
adc
push
add
movsl
pop
loopne
ret
es
or
cli
cmp
add
cmp
dec
jmp
daa
icebp
sub
cmp
shlb
push
subps
jge
xor
stos
jge
out
xchg
or
lock
mov
sti
jge
mov
lods
bound
mov
ja
cli
je
mov
in
xchg
outsb
out
inc
inc
dec
lcall
xor
and
jo
adc
outsl
in
cmp
pushf
mov
in
rcll
mov
mov
mov
movsb
lret
cwtl
mov
pop
push
inc
jb
dec
lcall
out
add
aam
dec
sub
push
push
cwtl
dec
out
insl
imul
pop
jp
inc
and
daa
inc
aad
orl
dec
push
jns
repz
lods
enter
pusha
mov
and
sbb
xor
lcall
ficomps
repz
xchg
ja
out
sbbl
jmp
pop
stos
sbb
sub
cmp
dec
and
add
dec
xchg
test
lret
mov
aad
les
inc
out
jb
icebp
jne
lret
dec
xor
fstpt
sbb
xor
sbb
adc
adc
xchg
imul
nop
test
and
push
push
rorl
pop
cs
jp
xchg
mov
push
and
and
lcall
cmpsb
mov
dec
add
cmpb
xchg
xor
fcomp
sub
xor
sbb
mov
mov
add
sbb
rcrl
cmp
stc
xchg
push
add
push
daa
fnstenv
ror
mov
adc
icebp
xor
or
mov
in
call
out
hlt
xchg
cmp
lahf
inc
adc
and
push
aam
int3
movsl
imul
call
pop
test
scas
ds
xchg
cmp
test
mov
xchg
enter
jns
cwtl
insb
leave
push
ds
dec
adc
outsl
pop
test
lods
es
push
fcmovne
add
or
mov
push
pop
adc
mov
pop
pushf
sub
daa
stc
in
aas
jns
jns
lods
push
ret
xchg
lret
jmp
sbb
jge
jle
push
and
xor
push
dec
jo
clc
fsubrl
sub
aaa
or
xchg
cmp
fdivl
xor
lods
rorl
mov
or
cmpsl
test
testl
pusha
mov
int
pop
lds
imul
dec
push
jp
inc
dec
int
xchg
xor
jle
mov
adc
mov
dec
cmpsb
mov
mov
shrd
or
cwtl
test
cmp
xor
mov
test
cmc
sub
pop
pop
mov
ret
ret
bound
mov
ret
shll
fisttps
xchg
mov
jae
out
or
push
mov
stc
sbbl
rcl
imul
test
cmp
nop
mov
out
push
mov
lcall
inc
push
adc
and
fmulp
mov
cmp
mov
in
mov
xor
popa
inc
enter
clc
lcall
imul
adc
jbe
popa
mov
sub
cmp
test
add
aas
cmpsb
jnp
je
jns
dec
sbb
std
loop
ljmp
or
adc
fistpl
lahf
sti
mov
lcall
ficompl
stos
mov
scas
fistl
dec
sub
imul
cmovge
and
mov
push
ja
ss
ss
jle
loopne
fidivs
out
pop
rep
stos
mov
cmpb
std
push
in
add
bound
xor
mov
mov
jecxz
or
mov
jmp
dec
out
notl
cmp
insl
jg
xchg
in
lahf
jno
lcall
jne
testl
or
mov
pop
mov
fadd
jno
loopne
mov
jb
ret
testl
push
pop
cwtl
data16
clc
push
jae
sub
sub
jecxz
mov
jge
jp
sub
pop
out
adc
push
repnz
pop
cmp
in
enter
pop
sbb
test
cli
xor
sub
in
lods
inc
insb
iret
and
push
sbb
push
mov
xchg
and
mov
xchg
jbe
cmp
xchg
mov
mov
test
mov
and
jp
movd
in
push
into
pop
sub
ret
adc
mov
mov
mov
scas
imull
out
fimuls
cmc
inc
aaa
pop
xchg
loopne
sbb
jns
jo
into
pop
cmc
das
test
filds
jne
sbbl
mov
mov
adc
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
xor
xor
or
mov
xor
sub
add
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
movl
movl
movl
xor
or
adc
mov
mov
add
mov
xor
adc
add
not
mov
movl
mov
je
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
xor
xor
andl
sub
sub
xor
sbb
mov
xor
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
subl
imul
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
mov
subl
add
or
and
mov
mov
xor
mov
addl
add
xorl
xor
mov
xor
mov
adc
mov
adcl
add
and
mov
xor
mov
mov
xorl
lea
mov
and
mov
adc
mov
sub
sub
add
incl
mov
mov
xor
xorl
add
jne
jmp
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
mov
mov
sub
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
decl
mov
sub
mov
or
mov
xor
xor
sub
xorl
sub
andl
xor
movl
mov
mov
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
andl
xor
andl
sub
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
call
jmp
xor
or
mov
mov
mov
subl
add
addl
imul
movzbl
or
mov
mov
subl
mov
xorl
add
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
pushl
push
pushl
call
jmp
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
stos
fsubrl
sti
mov
add
pop
cmc
cld
adc
jp
in
add
add
or
mov
scas
in
sub
dec
mov
push
lea
adc
xor
sbb
xchg
pop
or
daa
dec
and
sbb
xor
dec
mov
cmp
jmp
inc
cs
out
insb
mov
xor
lcall
das
inc
cld
mov
jp
xchg
mov
test
aaa
bound
mov
pop
xor
int3
jmp
or
mov
mov
imul
std
pop
jne
mov
cmpsl
cs
mov
sti
ficoml
pop
jo
mov
into
pop
sub
mov
mov
cmpsb
mov
or
adc
mov
jne
xlat
adc
xor
loope
cmp
xchg
dec
adc
jle
cmp
faddl
aad
imul
into
fmulp
stc
loope
inc
mov
shl
cs
lcall
es
adc
lcall
inc
jo
lods
mov
iret
popa
dec
mov
fldt
in
mov
nop
adc
sarb
daa
xlat
shrb
jnp
mov
mov
pop
add
outsl
ja
pop
adc
xor
mov
xor
jl
inc
ds
sbb
subl
adc
test
ljmp
jl
inc
push
adc
in
or
mov
xor
test
in
cld
jmp
arpl
rcl
jne
inc
fsubrs
mov
insl
xor
movsb
xchg
and
cwtl
lods
ja
inc
pop
add
je
out
repnz
and
adc
add
test
inc
insl
les
push
shlb
setns
lds
ds
mov
shll
mov
cmp
movsb
enter
gs
add
js
dec
shl
mov
or
add
jbe
jne
repnz
mov
mov
mov
jne
shrl
loop
lods
or
pop
mov
xor
and
pop
dec
fwait
sbb
icebp
repz
pop
xchg
sbb
outsb
aas
inc
cmp
mov
mov
fwait
out
pop
jl
cmp
mov
cs
inc
pop
mov
test
ss
lret
ja
mov
daa
mov
pop
jne
lcall
fiaddl
in
ret
xor
popa
sub
mov
add
clc
xchg
or
and
cmp
pop
movsb
jnp
jbe
jnp
rcl
mov
cmc
jnp
jge
cli
insl
fsubrs
jmp
dec
ret
out
xchg
add
dec
pushf
fs
inc
stos
pop
mov
mov
repz
mov
jmp
test
repz
das
pop
add
aas
cmp
or
inc
orb
sub
xchg
xchg
sbb
ficoms
cmp
push
xchg
mov
pop
inc
repz
adc
xor
push
sbb
sub
inc
dec
fmuls
push
loop
inc
out
jno
pop
jmp
popa
add
dec
xchg
sbb
xchg
icebp
jbe
out
fnstenv
pop
test
cli
xchg
sub
clc
inc
pop
nop
add
or
jmp
jg
and
outsb
mov
pop
outsb
in
out
mov
lods
and
mov
adc
jl
mov
pop
or
das
mov
sbb
out
inc
push
popa
popf
enter
cmp
dec
fisttps
icebp
or
xor
icebp
lahf
out
enter
cmpsl
cmp
jns
cmp
xor
movsl
cmpsb
pop
outsl
pop
insl
repnz
push
call
testb
mov
je
and
pop
dec
frstor
pop
mov
lock
pop
dec
jo
jnp
stos
inc
jmp
cmp
cltd
pop
jo
and
ljmp
push
jg
mov
je
test
jnp
adc
les
adc
imul
outsb
lods
mov
inc
mov
and
loop
pop
add
push
jnp
ss
sbb
fisttps
mov
pop
stos
call
cltd
je
jmp
aaa
push
test
xor
jl
xchg
and
inc
cmp
inc
cmpsl
test
mov
xor
jno
and
sub
lea
push
stos
adc
dec
or
mov
adc
jns
xchg
filds
cwtl
js
cmc
scas
lcall
jecxz
fidivs
add
stc
jb
sub
stos
jns
js
mov
push
ss
movsb
mov
out
cmp
roll
mov
sub
sub
adc
adc
movsl
imul
fwait
in
rep
popa
std
lods
jp
mov
sarb
cli
nop
or
mov
pop
cwtl
pop
jo
adc
lret
out
mov
pop
call
mov
insl
inc
arpl
int
roll
add
mov
mov
es
sbb
notb
pusha
inc
shlb
sbb
pop
cli
pusha
push
loop
pop
jecxz
and
mov
shll
fdivrs
inc
in
mov
mov
pop
addr16
iret
jp
sbb
sub
enter
out
sub
dec
push
jge
fadd
xchg
jp
mov
adc
hlt
or
pop
mov
pop
inc
ss
std
push
mov
outsb
xchg
sbb
or
xchg
pop
test
add
add
cwtl
sbb
jg
xchg
xor
xor
mov
jle
push
mov
ss
mov
into
test
sar
push
jecxz
xorb
insb
sbb
xchg
popf
and
sbb
cmpsb
mov
adc
nop
js
nop
mov
ja
lahf
lahf
loopne
dec
out
jl
fwait
push
fucomi
adc
jnp
gs
ss
jmp
mov
inc
stos
loopne
add
call
bound
pop
imul
aaa
rorb
je
sti
sbb
push
in
in
das
dec
scas
add
or
rorb
es
loope
xlat
movsl
and
push
out
fldcw
fildll
sarl
cli
pusha
xchg
enter
mov
ds
cmp
mov
xchg
and
jecxz
xchg
mov
jge
dec
shrb
sti
std
std
sub
or
stos
icebp
pop
test
pusha
add
sub
xor
fwait
or
stc
fcomip
fstpl
les
cli
sti
xchg
jo
rorl
insl
in
out
cmpsl
pop
xchg
mov
mov
jg
pushf
push
or
inc
ds
rolb
pop
mov
imull
and
inc
dec
jmp
jne
sbb
aam
lcall
cmp
std
inc
push
cs
loopne
inc
sarb
clc
jge
and
in
outsl
jnp
cmpsb
lods
mov
push
adc
xor
dec
repz
inc
mov
pop
data16
pop
data16
dec
mov
xchg
shrl
outsb
push
std
add
jns
rorl
jae
cld
lds
test
push
pop
inc
lcall
xlat
lahf
adc
bound
push
pop
imul
fnstcw
inc
ret
dec
mov
or
cmpsl
push
sbb
inc
xor
fs
add
inc
and
sbb
das
sub
test
mull
inc
inc
aam
daa
mov
sub
dec
sub
js
dec
add
and
outsl
xchg
push
in
adc
mov
push
inc
loope
scas
and
sbb
mov
inc
pop
mov
movl
adc
push
cmp
push
test
mov
cmp
add
out
jmp
add
jle
add
lea
stos
inc
fdivrl
rclb
jmp
inc
xchg
cwtl
sub
mov
jmp
testb
test
mov
xchg
cld
sub
mov
in
xchg
inc
notb
lahf
lods
jle
subb
popa
mov
sbb
int
call
jecxz
jb
add
cmpsl
es
xor
pop
add
addr16
mov
mov
push
adc
jl
pop
test
outsb
xchg
imul
adc
cmp
inc
xor
loop
mov
mov
data16
test
xchg
sub
adc
xchg
adc
stc
push
inc
aad
sub
orps
xchg
dec
lret
stc
jns
inc
bound
sbb
loop
int
je
ds
in
imul
js
aas
dec
xor
std
inc
pusha
popl
xchg
inc
pop
adc
inc
dec
push
bound
jp
cmp
movsl
jg
leave
ror
cmc
mov
or
or
in
outsb
sub
fsubr
movsb
jp
mov
jnp
dec
stos
cwtl
shlb
ja
dec
or
xlat
ror
fstp
xchg
aaa
pop
rcrl
outsb
inc
sbb
es
sbb
in
dec
adc
xchg
push
cmp
dec
mov
dec
sbb
lods
adc
mov
push
mov
das
mov
jb
pop
or
les
add
push
jns
fwait
les
or
or
ss
out
push
adc
push
inc
pop
sub
test
loop
mov
jbe
or
jmp
dec
pop
test
mov
outsb
insl
movsl
mov
call
push
dec
fnstsw
enter
xchg
xchg
das
popf
fcmovnu
push
jb
div
and
sbb
jne
leave
xor
inc
ret
mov
cmp
xor
mov
add
push
jns
push
ljmp
dec
and
sub
push
jns
ror
sarl
addl
pusha
mov
or
mov
jno
pop
cwtl
xchg
mov
insb
fsubs
scas
sub
pop
loope
out
mov
and
ljmp
cltd
ljmp
daa
mov
insl
mov
ret
rorl
in
xor
add
push
and
std
inc
push
inc
aas
sti
sahf
call
roll
ljmp
lea
into
adc
add
lret
xchg
jnp
cwtl
mov
mov
out
enter
xchg
and
mov
ss
adc
pop
inc
ret
dec
inc
cmpsb
mov
das
add
cmpsb
cmpsl
daa
fisubrs
ja
mov
fcompl
movsb
pop
mov
push
pop
sti
mov
lret
pop
and
outsl
cmp
enter
and
and
outsb
or
xlat
inc
scas
je
test
pop
cld
in
dec
jge
adc
xchg
loopne
fildl
psrlw
lods
outsb
sub
ljmp
mov
cmp
or
add
lret
mov
xchg
inc
fnstsw
fmuls
ss
mov
cld
mov
pop
fildll
fldt
testl
ljmp
pop
cltd
or
in
outsl
sub
pop
jge
lea
xor
xorl
cmpsl
cmp
and
mov
out
ret
sub
loope
pop
popf
mov
lret
pop
and
das
sub
inc
add
or
xchg
xor
mov
mov
jne
test
dec
popa
mov
dec
inc
sbb
sub
sub
cwtl
test
outsl
xchg
adc
push
push
mov
jo
mov
mov
push
das
scas
in
mov
ret
in
push
ljmp
addr16
fwait
insb
dec
sti
pop
adc
cmp
aas
imul
leave
es
jg
and
test
cmp
mov
mov
mov
cmpsl
xchg
or
mov
enter
in
xchg
aas
inc
mov
and
cli
in
jg
vxorps
push
cmpsl
mov
popf
in
loop
inc
inc
popf
cli
test
imul
rcrl
in
and
scas
pushf
mov
jno
bound
pop
xchg
xchg
push
in
pop
call
gs
lods
xor
add
fmuls
jp
movl
hlt
jg
dec
cmpsl
pop
fwait
jl
outsb
loop
fistpll
mov
push
jg
les
faddl
insb
sar
imul
loope
loope
js
pop
mov
sub
push
imul
pop
jmp
jp
cmpsb
daa
dec
or
stos
rcrb
or
pop
das
mov
or
jecxz
aas
out
lret
xchg
aas
je
mov
or
cmp
jb
mov
cmp
mov
adc
push
es
js
cld
sub
icebp
inc
repz
and
adc
lea
scas
adc
jae
or
push
loop
cli
mov
jp
fdivl
inc
sub
addb
mov
mov
call
popa
fldt
rorb
and
cmpsl
mov
dec
outsl
ja
mov
mov
arpl
inc
cs
fbld
aam
pop
jo
cmc
sbb
test
cld
add
hlt
mov
and
inc
xchg
testb
and
push
xchg
pop
sub
mov
dec
hlt
xchg
mov
arpl
lock
loope
sub
xor
dec
mov
jb
imul
sub
mov
incb
pop
xchg
sub
xor
sti
sub
insb
ret
xchg
stos
gs
sahf
mov
pop
jecxz
mov
popf
inc
ss
jecxz
out
mov
ds
push
arpl
push
adc
in
fbld
mov
arpl
or
sub
and
mov
stos
sub
xchg
cmpsb
xchg
movsl
ret
into
jg
sbb
jp
ss
das
pop
adc
adc
mov
xchg
lods
out
outsb
ror
dec
in
outsl
or
mov
loopne
jb
mov
test
enter
aam
test
sbb
fistpll
push
or
add
sarb
xor
sbb
and
fistpl
outsl
call
cwtl
mov
push
sub
mov
and
in
lcall
jnp
stos
pop
jne
nop
mov
nop
outsb
xor
daa
hlt
aam
push
mov
shr
sarb
dec
push
cwtl
sahf
mov
sub
push
fdivrl
je
ja
xchg
out
mov
mov
or
rcr
and
cmp
into
or
cmp
and
shr
mov
fiadds
fstl
pop
icebp
push
add
jne
orb
lret
add
push
push
xor
test
scas
jae
mov
add
inc
lea
adc
loope
inc
mov
sub
inc
xchg
mov
cmp
fsts
fildll
popf
xor
mov
xor
and
xor
sub
stc
or
hlt
jecxz
into
xlat
lret
push
xchg
mov
fsts
cmp
pop
mov
gs
sbb
inc
in
aas
movsl
lahf
out
fsubrl
push
add
loop
dec
lods
xchg
pcmpeqb
adc
inc
mov
movsb
xchg
and
out
xchg
jge
jae
mov
leave
icebp
jnp
lods
mov
leave
mov
mov
subb
stos
adcb
sbb
cmp
test
test
dec
in
repnz
cmp
jmp
in
sahf
loopne
push
and
push
pushf
and
xor
arpl
lret
sarl
inc
out
xor
xor
xchg
add
les
cmp
outsl
pushf
mov
pop
fsubrp
mov
mov
std
icebp
lds
xchg
jmp
ficomps
lea
mul
nop
mov
push
mov
scas
jne
in
into
ret
adc
adc
lds
inc
pop
scas
mov
jg
fidivrs
fildl
sbb
js
popa
in
gs
insl
mov
sub
dec
icebp
fs
xor
stos
and
xchg
into
push
insb
aas
jb
push
push
and
jmp
jmp
pop
dec
sbb
repz
sti
xchg
icebp
sub
inc
mov
pop
cmp
xor
testb
shlb
pop
inc
test
nop
in
jle
imul
add
mov
xchg
jmp
xor
xor
repz
ds
inc
pop
jo
nop
je
cmpsb
cmpsl
inc
dec
mov
mov
xor
jge
subl
xchg
xor
xchg
push
push
pop
jb
push
inc
mov
rcrl
iret
jns
lock
push
cmpsb
fsubr
jp
xchg
les
lret
sbb
mov
push
dec
adc
les
xor
mov
sub
mov
or
pop
jo
les
xchg
movsl
xor
dec
addr16
les
cmova
popf
mov
pop
addb
stos
jmp
outsb
and
sbb
cmp
cmp
testb
sbb
and
or
es
sub
popf
insb
mov
sub
add
enter
ret
add
cwtl
cs
mov
mov
clc
push
jnp
fs
mov
sub
jne
pop
out
in
fwait
sbb
popf
sub
les
xchg
popa
notb
mov
dec
sarb
in
sbb
test
arpl
das
push
ja
je
cmc
mov
in
mov
sbbl
and
cmpsw
nop
pop
xorb
adc
mov
push
jbe
xchg
xor
ficomps
fdivr
fidivrs
imul
aaa
cmc
mov
and
xchg
insb
cs
dec
mov
out
cmp
ss
test
mov
push
lret
lret
xchg
das
or
cli
mov
aam
mov
inc
cmp
and
inc
pop
xor
xchg
mov
stos
dec
adc
mov
mov
dec
je
adc
and
out
ret
pop
icebp
mov
ficoms
push
sub
xor
adcl
xorb
sub
mov
movsl
daa
sbb
lods
pusha
add
insl
xchg
inc
gs
test
inc
stos
mov
lea
jne
jb
sbb
sub
add
cmpsl
loopne
mov
xor
test
push
inc
xchg
test
adc
sti
lock
mov
movsb
xor
loopne
sahf
aas
mov
mov
and
mov
aad
pushf
xor
pop
lahf
out
jb
xchg
add
jnp
cld
int3
rorl
xchg
icebp
sub
pop
ficoml
xlat
ret
jmp
std
pushf
xor
or
sub
aaa
pop
sub
addr16
rcrb
xor
dec
push
or
cwtl
mov
mov
push
sub
rcll
repnz
sbb
mov
or
mov
hlt
clc
push
mov
pop
je
inc
pop
pop
xlat
out
inc
pop
push
mov
mov
jae
mov
daa
push
std
push
and
mov
stos
mov
scas
ljmp
jbe
and
frstor
gs
ficompl
sbb
sarb
adc
add
pop
imul
popa
lret
adc
mov
pop
ss
wrmsr
lods
sbbb
mov
test
or
rorl
std
fisubrs
sbb
icebp
or
divl
xchg
rorl
ret
jb
jmp
ss
mov
roll
int
cmp
mov
cmpsb
pop
mov
mov
push
les
imul
push
movsb
jno
out
enter
add
test
and
push
lods
mov
andb
mov
push
hlt
ss
xor
jno
pop
fisubs
aad
and
sbb
jge
jge
inc
xor
repnz
pop
sub
add
imul
inc
mov
sub
mov
pusha
test
adc
mov
incl
sti
inc
sub
pop
pop
xchg
cmpb
testb
into
mov
inc
out
mull
lods
pop
hlt
daa
lock
loopne
push
ficompl
and
mov
xchg
push
aam
rcr
add
fisubrl
dec
subb
jmp
std
movsl
xor
sub
and
xor
sub
test
fists
pop
test
sub
repnz
icebp
xchg
cmp
les
push
jg
cwtl
lds
arpl
lods
sub
rol
in
and
bound
and
test
push
movl
mov
mov
mov
fisttps
mov
jle
mov
push
sbb
xor
lds
mov
es
or
inc
repnz
fcoml
dec
mov
rcrl
insl
mov
jmp
cmp
in
inc
xlat
js
clc
add
enter
ja
xchg
scas
sub
call
notl
sub
fidivl
js
inc
popf
sbb
fwait
add
rcrl
aad
cmp
push
mov
xor
xchg
fwait
dec
pop
lahf
mov
dec
jecxz
leave
aaa
mov
stc
dec
sub
pop
jg
jb
mov
lods
aam
mov
cmp
inc
and
mov
jge
mov
sub
fadd
mov
std
mov
shr
add
sysexit
mov
addr16
jno
or
inc
jo
call
cs
mov
dec
stos
sbb
xor
daa
and
movsl
dec
outsl
popf
lods
arpl
sti
sbb
in
lret
aaa
and
out
mov
je
inc
cli
inc
mov
sub
dec
loopne
pop
lds
negb
mov
js
stc
pop
add
into
cmp
add
sub
or
push
sub
das
les
sub
aam
pop
dec
jmp
cmp
ja
into
fadds
xlat
icebp
dec
jmp
outsl
pop
xchg
and
das
daa
mov
xchg
orl
rcrb
lods
dec
ja
repnz
xor
push
jb
int3
jbe
mov
sbb
rorb
fcmove
out
mov
mov
jp
mov
insb
ret
inc
mov
out
outsl
andb
add
jb
mov
call
adc
dec
cmc
out
lret
sar
or
in
scas
xor
fmuls
shll
jb
inc
push
pop
xlat
js
subb
into
add
or
or
sub
fisttpll
clc
out
pop
mov
in
jmp
mov
or
sbb
xchg
sbb
aad
imul
dec
fstpl
movsb
shll
cmp
nop
jle
insl
stc
jp
mov
hlt
sub
outsl
dec
das
ret
icebp
mov
push
mov
mov
xchg
into
sti
je
jl
ret
test
jnp
int3
pusha
ss
ret
xchg
cmpsl
mov
xchg
jle
repz
push
insb
js
sub
cld
iret
or
outsb
lret
lcall
push
add
add
jne
sub
fistl
cmovle
jae
push
sbb
les
lods
nop
cmp
pop
mov
cmp
adc
add
pop
xchg
dec
dec
mov
dec
sub
jmp
popa
mov
push
movsl
pop
test
out
imul
dec
shll
clc
icebp
xchg
nop
sub
adc
lahf
outsb
inc
jp
mov
lahf
popa
test
cmp
dec
nop
add
xchg
popw
mov
adc
arpl
push
push
es
and
lret
dec
adc
sub
pop
jae
xchg
sbb
enter
and
sub
dec
addr16
rolb
sbb
xchg
in
pop
adc
sbb
stos
add
and
mov
ficoml
fisttpll
insb
jno
add
inc
sbb
cmpsb
xor
out
out
push
mov
cwtl
fs
dec
out
push
or
cltd
add
sbb
addr16
xor
pop
scas
jecxz
insb
inc
loopne
jmp
mov
in
adc
cmpsb
mov
dec
add
cli
and
mov
xchg
ret
xor
pop
clc
fdivs
and
jp
pop
dec
inc
inc
xchg
fs
adc
push
or
sub
rorl
inc
fisttpll
sub
test
movsl
sub
add
xchg
cmp
xor
xchg
dec
add
lret
jge
xor
sbb
push
xchg
ljmp
mov
mov
jl
dec
dec
das
xor
cmp
dec
in
jp
mov
xor
cmc
imul
cmp
fdivrs
push
dec
xor
dec
mov
push
push
repnz
test
mov
std
popl
dec
insb
rolb
orl
sub
daa
mov
push
dec
sbb
mov
out
data16
fcmove
add
jp
xor
jecxz
stos
xor
xchg
add
pop
fimull
pop
or
or
and
add
rorb
bound
pop
inc
test
lods
sbb
outsb
and
add
mov
or
fldt
push
scas
jnp
xor
jnp
jp
push
jbe
ljmp
mov
les
pop
cmp
dec
repnz
data16
cmc
addb
or
jb
inc
pop
fstpt
popf
sub
call
imull
sti
and
pop
mov
test
mov
std
movsl
test
stc
or
or
out
jae
out
adc
lock
insl
jl
loop
jns
dec
push
mov
cld
or
inc
into
cmp
cmp
inc
dec
lods
mov
dec
arpl
push
dec
jnp
pop
nop
repz
shrb
adc
testl
test
pushf
rcll
aam
mov
mov
or
int
dec
and
jbe
push
jmp
movsl
sub
rcll
and
inc
lret
js
xlat
scas
dec
inc
fs
aad
and
clc
mov
lods
incl
jo
sbb
ds
and
aad
sub
enter
inc
loopne
fwait
push
dec
inc
test
scas
adc
es
pop
mov
xchg
jecxz
cmp
shrb
test
mov
push
sub
test
pop
andl
cmp
jbe
mov
inc
mov
lcall
ror
push
bound
xchg
or
fwait
test
push
mov
mov
mov
lods
sar
std
clc
cmpl
xchg
cmp
sahf
idiv
ss
out
add
mov
js
add
lret
mov
inc
pop
into
push
test
movb
sub
jg
push
out
push
shlb
cltd
popa
es
dec
mov
cmp
cmc
stos
imul
sub
jne
mov
scas
push
add
outsb
cmpsb
out
mov
seto
pop
mov
arpl
mov
pop
cmp
dec
fsubl
xchg
mov
gs
ljmp
aas
cmpb
mov
fwait
je
lds
push
mov
in
mov
sbb
imul
xchg
call
mov
cmc
xchg
dec
cmpsb
mov
imul
push
int3
in
testb
mov
je
lods
add
adc
cmp
mov
test
sbb
js
mov
dec
das
call
cld
test
cmp
imul
cmp
xchg
mov
mov
je
jne
cli
icebp
mov
xchg
aas
mov
jge
push
jbe
in
inc
cmp
adc
pop
push
inc
pop
lds
mov
lret
aas
mov
dec
jmp
or
lret
enter
pop
jp
call
cmc
iret
int
movsb
push
xchg
mov
outsb
js
inc
mov
push
into
cld
js
cmp
dec
inc
das
popf
imul
mov
or
cmp
push
dec
push
aaa
and
or
mov
call
jns
jae
push
jo
pop
out
pop
sbb
cwtl
int3
and
lods
movsl
adc
sarb
sbb
or
adc
dec
shrl
mov
into
mov
test
inc
mov
add
mov
out
lea
mov
bnd
inc
lea
push
add
in
sbb
inc
or
popa
dec
fcoml
mov
mov
jnp
jecxz
enter
int
mov
xchg
loop
xchg
mov
aam
mov
fs
dec
sub
daa
nop
adc
xchg
jbe
jnp
sarl
sub
lods
loope
movsb
fnstcw
sti
jle
ds
or
clc
xlat
pop
insl
cmp
ds
cmp
push
or
sahf
cli
test
add
aam
pop
jge
lret
cld
jg
call
cmc
rclb
push
cwtl
cmp
mov
lods
push
xchg
lock
imul
lods
sahf
adc
frstor
sbb
test
mov
repnz
lea
add
and
xchg
mov
jae
xor
int3
and
fstl
loop
in
pop
mov
idivl
data16
jnp
lcall
mov
mov
inc
mov
mov
shrb
pop
lds
std
xchg
sbb
jg
stc
push
repz
ss
rorb
jp
mov
sub
xor
push
insl
fldcw
shll
cs
pop
cmp
mov
dec
cmpsb
sub
popl
or
shll
cmpsb
xor
lock
nop
jmp
add
psrad
pop
addr16
ds
xchg
mov
and
or
rep
ljmp
pop
mov
mov
jmp
lcall
movsl
jge
mov
daa
sub
out
mov
das
mov
pop
rorb
push
loope
lcall
push
inc
scas
lock
xchg
lret
mov
out
sbb
js
or
add
pop
mov
cmp
xor
jecxz
add
xchg
imul
stos
cmp
mov
fs
call
sub
jae
lret
sub
xchg
popa
dec
and
inc
or
mov
daa
add
out
ret
cmp
sbb
frstor
push
js
mov
loope
sbb
inc
in
sarl
xor
subl
xor
mov
push
xor
xor
add
mov
aas
insl
inc
sahf
sub
shr
ds
pop
out
std
and
movsl
mov
dec
push
fsts
and
subl
lret
shll
pop
test
cmp
xchg
mov
scas
sub
fdivrs
ret
sub
cltd
nop
pop
stos
stc
lock
ljmp
pop
es
push
xlat
jecxz
pop
push
xor
sbb
iret
mov
mov
or
mov
xor
rcrb
mov
xchg
jmp
inc
mov
jnp
push
push
pusha
mov
into
inc
mov
pop
std
sbb
mov
mov
cwtl
jns
movsl
rcrb
push
movsb
sbb
and
jl
je
pop
adc
cmc
sub
xor
test
mov
xchg
sbb
cmc
sbb
push
pop
mov
mov
int3
es
lods
loope
ds
stos
mov
outsl
loopne
test
sbb
pop
xlat
test
pop
ljmp
jno
and
sub
aaa
mov
leave
sarl
lcall
jecxz
adc
dec
dec
inc
push
and
pop
inc
jg
movsl
cli
jp
xchg
xchg
jae
pop
pop
aas
cltd
iret
push
and
lahf
xchg
dec
mov
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
popa
cmc
cwtl
mov
pop
popa
mov
push
lret
push
xlat
jge
xor
jp
adc
int
shlb
pusha
outsb
into
cmp
push
cmc
imul
pop
adc
hlt
add
inc
rcrb
jns
mov
arpl
mov
push
xor
gs
shlb
sahf
dec
dec
rcr
mov
dec
jnp
xchg
push
repnz
inc
dec
mov
mov
sbb
shll
xor
sti
push
int
out
add
xor
pop
icebp
xlat
scas
jae
sub
cmp
xchg
shl
inc
call
ret
lds
std
pop
sbb
test
out
leave
out
idivb
pushw
jge
daa
fwait
aad
dec
negl
lret
mov
daa
loopne
mov
cmp
mov
xchg
dec
stos
mov
jnp
mov
psadbw
lret
xchg
add
push
pop
movb
test
js
xchg
test
pop
sbb
mov
or
xor
lods
cmpsl
loop
imul
lock
out
dec
in
aam
rcll
ret
pop
cmpsl
pop
int3
xchg
adc
rorb
pop
ja
fldenv
movsb
mov
lcall
enter
nop
stos
inc
popf
cwtl
mov
cmp
inc
or
xchg
pop
sti
sub
aaa
test
mov
je
js
testb
xchg
inc
in
xchg
jl
sbb
mov
add
loope
jne
and
mov
mov
mov
ds
mov
lods
push
cmc
push
int
shll
pop
hlt
stos
divl
mov
add
iret
sub
or
cmc
push
shrb
cmp
imulb
sub
adc
adc
loopne
scas
cmp
bound
clc
xor
cmpsl
sbbl
cmpps
loopne
outsl
test
adc
adc
cmp
adc
mov
or
mov
call
sar
dec
adc
das
mov
sbb
dec
and
ret
lret
xchg
jb
and
cwtl
mov
inc
ds
xorl
movsl
rolb
fstl
cmp
aaa
leave
outsl
popa
test
adc
call
aam
stc
loop
mov
mov
adc
pop
sub
addr16
test
ret
cmp
dec
arpl
imul
loop
adc
popa
insl
or
cmp
adc
mov
mov
ret
or
adc
cmp
xor
mov
jg
sti
cmpsb
test
cmc
mov
jg
es
hlt
adc
push
mov
mov
icebp
cwtl
add
inc
stc
rclb
fstl
cltd
xchg
pop
leave
inc
lahf
int3
xor
dec
push
xchg
lods
aad
loopne
inc
inc
add
fs
pop
sbb
push
shlb
fnstenv
pop
testb
in
test
adc
and
and
int
push
test
mov
mov
and
inc
cmc
test
repz
loop
push
mov
imul
jmp
add
xor
push
push
xlat
lret
xchg
fwait
mov
dec
pop
pop
lret
xchg
and
xchg
adc
imul
mov
pop
jl
or
xchg
jle
lcall
sbb
cltd
orl
xor
push
cmpsb
out
mov
out
dec
fnstenv
xchg
or
dec
lea
lret
incb
insl
push
hlt
pop
std
mov
rcrb
xchg
jo
mov
push
lods
icebp
jle
or
js
and
mov
lods
xor
dec
pop
ret
cmovle
insb
stos
xchg
xchg
fs
insb
lret
and
cltd
inc
mov
mov
cmp
insb
in
and
jno
adc
je
addr16
or
push
jp
ss
jge
loope
cmp
shl
fcom
lock
sbb
xchg
pop
cmp
jge
sub
sbb
push
subl
mov
adc
ljmp
cs
sbb
fdivs
lret
loopne
adc
mov
inc
sub
mov
jge
popa
jo
sub
fs
adc
and
xor
and
outsb
jg
cmp
gs
jg
fidivrs
push
cmp
lcall
or
xor
div
sub
stos
and
daa
repz
or
and
jne
mov
scas
fsubl
pop
stc
xchg
mov
data16
dec
sbb
sarb
nop
jnp
mov
lahf
adc
add
push
push
loopne
dec
and
int3
cltd
jb
cmpsb
test
sub
or
lret
mov
repz
jl
or
rorl
adc
jns
push
pushf
icebp
addr16
subl
in
out
inc
xchg
test
xchg
ret
jle
add
pushf
ss
dec
rcll
adc
inc
dec
loop
inc
call
loopne
loope
lea
rol
adc
adc
xor
lods
in
inc
aas
xor
jns
ljmp
mov
and
or
repnz
mov
jo
cmp
testl
sbb
loope
xor
pop
aam
ds
adc
adc
xorb
dec
sbb
xor
cmp
ja
loop
mov
mov
xchg
cmpsl
pushf
sbb
push
lea
jns
push
dec
call
sub
cmp
sub
lods
mov
lahf
mov
int
arpl
pop
sbb
ds
jg
int
cmp
daa
cmp
popf
inc
jle
shll
mov
lcall
insb
cwtl
in
mov
incl
ret
jg
pop
sarb
or
test
jmp
lea
push
nop
xor
into
jg
xchg
jnp
mov
out
dec
sub
fildll
movsl
xchg
addr16
test
pop
stos
imul
aam
mov
test
inc
sub
inc
push
stc
cmp
sti
pop
int3
add
scas
push
movsw
add
and
cmpsb
test
roll
mov
addl
sbb
push
mov
pop
adc
pop
or
xor
jmp
adc
mov
mov
sub
loop
push
adcb
std
cmpb
jmp
pop
fsubl
jg
lock
mov
inc
mov
xorl
dec
push
cmc
cmp
mov
lahf
dec
pushf
xchg
push
xor
cld
mov
es
sbb
xlat
lds
lret
push
hlt
or
or
mov
stc
sub
outsb
cltd
bound
aaa
fwait
lock
cmpsb
cwtl
add
andb
lcall
test
orl
and
jb
jne
mov
movsl
aad
das
pop
cs
inc
clc
movsl
sti
push
mov
jb
pop
xor
pushf
imul
and
mov
mov
loope
lds
dec
sub
data16
mov
pop
lcall
repnz
hlt
or
cmpsl
insl
add
fisttpll
lds
jge
mov
sbb
cmp
outsl
loope
xchg
aaa
js
jp
ds
fstpl
pop
push
mov
movsb
in
pusha
daa
pushf
lahf
andb
mov
sbb
sbb
ud1
lock
iret
testb
loop
jae
rcrb
xor
loopne
mov
outsb
out
xor
repnz
jg
push
pop
out
jae
cmp
andb
out
out
repz
add
add
cli
in
mov
pop
mov
mov
push
hlt
sub
lret
fisubrl
lcall
fsubrl
jnp
mov
lds
leave
inc
sbb
fwait
arpl
jp
imul
jle
xor
jmp
shll
in
mov
aas
test
addr16
cmpsl
mov
xor
mov
add
mov
rolb
jle
in
out
jg
outsl
sbb
bound
mov
sub
xchg
jmp
push
cwtl
jge
mov
test
jno
popa
cli
mov
push
sahf
mov
mov
mov
jmp
rclb
fsts
adc
adc
mov
sub
scas
int
dec
imul
mov
negl
fs
orl
arpl
sbb
sub
dec
insl
lcall
cli
imull
pushf
xlat
xchg
mov
fidivs
pushf
add
repnz
sarl
aad
enter
push
dec
jmp
movsb
int3
xchg
negl
jp
xor
sbb
cmp
and
or
inc
sbbl
dec
jecxz
dec
ret
mov
xor
push
test
popa
icebp
outsl
fists
adc
inc
jne
fcmovnb
sbb
xor
jl
out
sub
gs
mov
pop
adc
arpl
stos
lahf
out
pop
stos
xor
leave
sub
jns
adc
rolb
xchg
dec
or
enter
test
fsubr
test
dec
dec
ljmp
or
push
pop
jbe
sub
xor
fs
es
insb
icebp
mov
jmp
inc
and
rcr
aam
ds
push
jae
push
testl
sahf
leave
mov
add
pop
cwtl
sti
inc
and
or
push
xor
gs
mov
xor
pop
clc
sbb
popf
insl
cmp
cmpsl
cmp
ret
dec
test
dec
fdivrl
lods
dec
hlt
loope
sarl
add
push
cld
leave
movsl
or
test
ja
repnz
dec
jo
sub
addr16
sbb
adc
pop
movsb
mov
sub
mov
sbb
fdivr
pop
fistpl
cwtl
jo
cmpsb
add
or
loopne
shl
add
ds
add
xor
push
call
and
pop
cmc
push
dec
sbb
pop
sbb
js
xor
das
dec
jns
push
fldl
les
pushf
xchg
shll
in
and
add
mov
jns
in
xchg
cmpsl
dec
cli
sub
in
dec
clc
insb
sbb
lds
popf
pop
add
or
push
or
leave
inc
or
addb
in
stc
pop
xorb
dec
xchg
inc
sub
cs
movsb
mov
push
lret
xor
outsl
into
ss
xor
ss
dec
adc
jae
shrb
test
jle
and
stos
bound
mov
jb
push
imul
andl
inc
leave
mov
scas
push
fimull
dec
outsl
xor
jp
shlb
jge
xchg
inc
push
xor
rolb
push
add
or
xchg
pop
add
mov
and
xor
inc
call
add
shlb
lahf
js
and
aad
test
mov
xchg
pop
dec
cld
lahf
sub
push
add
bnd
movsl
mov
mov
adc
lea
lods
subl
loop
push
fiadds
pop
test
lret
fnsave
add
xor
sahf
movsb
fsubs
jns
kunpckbw
popa
mov
test
cs
repz
cmp
cmp
pop
aad
mov
jo
rclb
xchg
fcomps
lahf
inc
jp
jmp
divb
jl
jmp
loope
sbb
subl
xor
stos
roll
jp
sarb
xchg
imul
cmc
xchg
mov
cmpsl
or
push
push
xorl
movsb
sbb
es
and
clc
sbb
icebp
test
jmp
push
fldt
mov
test
xchg
in
repz
aas
lcall
sti
fmul
outsl
sbb
push
mov
stos
xchg
movsl
lcall
popa
loope
mov
jo
add
pop
imul
sub
push
addr16
mov
pop
sbb
imul
xchg
je
mov
push
test
aad
test
scas
inc
dec
dec
sub
cmp
cvtdq2ps
cs
push
pop
and
cmp
movsb
mov
dec
das
insb
cvtps2pd
out
in
pop
dec
lods
dec
mov
sub
jp
sbbb
pop
dec
dec
dec
adc
or
push
jno
in
int
es
push
std
mov
sub
lods
xor
test
loope
push
push
or
in
mov
aam
nop
bound
ja
xchg
cs
fdivrp
inc
cmpl
cltd
xor
adc
out
insb
out
jbe
leave
and
insb
loop
dec
arpl
push
push
data16
or
cmp
or
ljmp
out
vpsubb
mov
xchg
clc
push
test
fcoms
pusha
or
mov
ficomps
mov
sub
pop
mov
pop
sub
nop
add
sub
js
aam
outsl
mov
iret
insl
add
in
add
sbb
int
test
and
and
je
dec
lock
pop
push
dec
or
lcall
iret
push
push
xchg
sub
pop
fnstsw
jg
adc
sub
and
mov
or
inc
xchg
ja
push
cmpsl
arpl
mov
pop
test
pop
jmp
clc
scas
push
sub
in
push
dec
add
idivb
or
mov
push
pop
shrb
fs
out
push
xchg
xor
aad
mov
and
cwtl
xor
fucomip
jnp
nop
dec
sbb
test
or
cs
mov
or
daa
pop
xchg
repnz
popa
lock
rorb
push
aas
pop
dec
pop
fxch
dec
mov
cld
pop
daa
je
in
in
in
into
xor
push
aam
test
dec
arpl
sti
add
push
pop
mov
xchg
sbb
pop
ljmp
pop
pop
push
xchg
ret
loop
jb,pn
jae
test
or
adc
fs
and
cs
cmpl
mov
imul
lret
test
adc
pop
cs
mov
sbb
ret
and
out
cmc
sbb
jnp
sub
ret
dec
fistpll
test
sub
out
sub
or
jbe
mov
scas
imul
add
jp
mov
mov
xor
or
adc
or
or
es
in
and
not
sub
sub
fdivs
fadds
out
adc
loope
xor
cmp
icebp
mull
movsb
das
int3
fistl
aad
xchg
and
lods
xor
cmp
push
dec
mov
ret
or
ljmp
dec
pop
adcb
andl
dec
pusha
ret
push
pop
or
cltd
ds
cmp
lods
push
insl
inc
mov
cmp
cli
lds
loope
pop
fisttpl
aas
mov
fstpt
jmp
jb
leave
in
pop
push
enter
jmp
in
ret
call
lret
pop
mov
push
in
jg
sbb
push
rcrl
rcll
out
xchg
and
fstl
rep
inc
adc
jo
movsb
adc
mov
daa
sbb
loope
mov
aaa
mulb
push
add
mov
popa
or
addr16
pop
add
popa
push
shll
jb
mov
push
jg
dec
in
dec
or
jmp
or
inc
and
hlt
leave
call
fcmovnb
xchg
push
sbb
pop
les
cmp
and
fwait
xchg
dec
mov
popf
or
sub
lret
dec
loope
push
pop
jl
push
stos
jmp
or
rcll
daa
sub
loopne
xchg
add
mov
push
int3
sbb
jp
jmp
mov
das
push
mov
adc
cmp
loop
test
push
leave
ffree
mov
mov
leave
ds
rol
sub
outsl
lods
jmp
loop
push
adcl
in
push
pop
cmp
push
inc
lcall
jp
dec
fistl
mov
arpl
cmp
or
in
notb
push
xchg
push
lret
lea
push
into
popf
dec
cs
vunpcklpd
jg
cmp
mov
adc
and
lds
in
push
jmp
mov
lds
stc
loopne
fcmovnb
scas
xorl
sbb
lret
adc
mov
mov
jo
aaa
adc
jle
loope
xor
into
mov
adcl
mov
jbe
sahf
xor
and
mov
xchg
and
lret
mov
rcrb
mov
xchg
mov
cmp
mov
popa
push
add
sbb
and
cmpsb
push
xor
loopne
fs
xchg
add
shlb
cmc
scas
fstps
lods
ljmp
inc
push
xor
xchg
out
rolb
inc
int3
xchg
sbbl
add
and
nop
idivl
repz
adc
mov
call
sub
fucomi
push
lcall
into
mov
sbb
inc
mov
jg
enter
pop
test
aad
jo
lcall
ds
mov
push
nop
inc
pop
fs
or
arpl
sub
fiaddl
sbb
fimuls
pop
in
or
js
jecxz
fmuls
jmp
jg
jmp
mov
outsb
mov
cmpsl
shlb
add
push
xor
das
and
cwtl
in
push
mov
mov
movsb
xlat
rolb
loope
popf
mov
mov
push
mov
popa
dec
out
xor
jns
xchg
dec
mov
push
dec
repz
cmp
push
and
imul
mov
mov
xchg
stc
lea
pop
fdiv
cmp
rcrl
push
inc
jmp
sti
xor
mov
ja
push
scas
sub
adc
ret
rcl
sbb
stos
push
rcr
ljmp
movsb
movsb
mov
fcompl
les
adc
adc
mov
jnp
mov
jg
subb
in
into
jecxz
inc
adc
mov
in
sbb
in
jg
in
push
add
sub
xlat
sub
mov
ljmp
in
pop
movsl
lea
dec
cmpsl
jmp
inc
mov
lods
jmp
xchg
lock
mov
cmp
les
pop
insl
sub
cmp
sahf
fs
jmp
call
mov
sbb
roll
jl
dec
push
push
leave
fimuls
out
mov
cmp
gs
jo
popf
clc
and
btc
jmp
mov
fldcw
mov
mov
sbb
adc
add
push
mov
lock
lea
mov
or
xor
jmp
push
or
mov
stos
sub
mov
out
imul
iret
jecxz
out
mov
jns
sbbl
bound
aam
push
dec
xor
sub
call
mov
dec
leave
inc
cli
mov
popa
xchg
push
add
add
cs
dec
adc
sub
outsb
push
aas
push
cmpsb
test
fdivrl
pop
sti
cmpsb
jns
jecxz
pop
bound
mov
jle
xlat
ror
mov
cmp
jns
cvtpi2ps
push
int3
pop
pushf
out
test
insl
je
loop
ss
lret
pop
push
cmp
mov
loopne
repz
arpl
push
and
add
aas
fimull
mov
sahf
mov
mov
scas
cmp
mov
dec
push
sbb
ja
sbb
pop
test
pop
lods
andb
rcrl
jp
mov
inc
aas
xor
jb
cltd
cmpsb
and
clc
sahf
jno
mov
xchg
fimuls
lock
int
cmp
inc
sub
cmpsl
sbb
xor
out
push
scas
movsl
dec
pop
xchg
dec
push
xchg
lcall
test
jo
inc
push
cmc
movsl
jno
xor
setns
inc
cmovb
repnz
mov
mov
add
hlt
adc
mov
xchg
sar
addr16
xchg
aaa
push
rcrb
adc
idivl
push
out
cmp
xlat
ljmp
fcoms
into
mov
add
je
cli
jp
xchg
jbe
xlat
mov
and
lcall
push
xor
push
mov
and
xchg
lds
or
push
push
rcll
push
sub
outsl
outsb
fldl
fmull
lds
xchg
mov
test
jbe
sti
movsl
scas
push
shlb
inc
pop
mov
fisttpl
imul
sbb
cmc
and
cmpsl
int3
jnp
pop
xchg
inc
popf
mov
aam
lds
sub
loopne
sbb
jae
inc
insl
pop
in
adc
in
pop
adc
cs
xorb
xor
mov
lea
dec
push
cli
out
mov
fcomps
mov
mov
cmpl
add
scas
push
std
sub
mov
xor
daa
add
fstpt
test
and
fbld
lods
dec
push
sub
sahf
into
xchg
and
pop
jnp
repnz
mov
sbb
add
mov
loope
ret
sub
adcl
pop
and
enter
rcll
add
mov
aaa
add
push
sti
xchg
sub
arpl
sbb
adc
icebp
mov
or
ds
sub
cmp
lcall
xchg
repnz
adc
subb
mov
jnp
cmp
sbb
push
jns
lock
lds
fwait
pop
shlb
nop
and
clc
cmpb
mov
and
xor
and
add
call
ret
push
aam
dec
jnp
sahf
mov
lods
lods
mov
jno
int3
cmp
int
ret
xchg
in
fidivs
or
divb
dec
adc
test
push
daa
sbb
dec
push
fistpll
lock
roll
add
dec
aad
jbe
cld
mov
pop
push
and
les
negb
push
dec
mov
or
fiaddl
jl
imul
das
fsub
ljmp
xchg
enter
xchg
dec
mov
addr16
jmp
mov
xchg
orl
dec
cmp
or
in
add
xor
xchg
xor
xlat
jp
add
in
sbb
int3
fnstcw
pavgw
int3
cmpsb
icebp
mov
ja
fistl
push
aaa
inc
sbb
jecxz
mov
idivb
call
fs
mov
push
fstpt
cmpsb
mov
xorl
add
jmp
dec
push
cmp
aaa
incb
mov
popa
mov
and
iret
outsb
adc
push
repz
inc
inc
fsubrp
sbb
mov
sbb
ss
mov
pop
pop
xlat
bswap
inc
add
push
or
arpl
outsb
leave
mov
sub
shlb
dec
jno
les
mov
push
pop
xor
cmp
pop
add
clc
pop
jp
pop
push
adc
push
test
shlb
cltd
in
and
mov
aad
test
movsl
inc
pop
sub
jl,pn
pop
popf
mov
insl
cmp
addr16
pop
loopne
nop
mov
ljmp
lcall
es
sub
sub
mov
mov
nop
lret
sbb
idivl
pop
inc
cmp
ljmp
or
insb
mov
jo
jp
add
mov
jmp
imul
add
ljmp
pop
jnp
js
mov
mov
dec
shr
inc
ret
test
pop
adc
jp,pt
pop
adc
outsl
xchg
ret
push
or
mov
lahf
inc
cmc
cmp
push
movsl
pusha
jb
sub
iret
xorl
sub
adc
cltd
ret
fcoml
mull
mov
mov
ficomps
or
lea
adc
mov
out
into
or
insb
psllw
std
daa
dec
mov
stos
or
aam
scas
repnz
stos
out
sub
push
mov
out
mov
sarb
ss
cltd
fcmovbe
jmp
lret
push
imul
shll
nopl
mov
xor
xor
ret
jae
fs
xor
movsb
jno
or
pop
fs
ja
push
lret
loope
sub
mov
pop
insb
jl
out
cld
lods
cmp
and
sub
push
pop
inc
sahf
jo
cmp
fistpll
add
or
shlb
inc
mov
rcll
das
sbb
push
mov
lahf
adc
aam
jnp
push
outsb
loopne
rcrb
push
adc
mov
imul
adc
jnp
sahf
xlat
mov
lahf
sub
push
mov
test
mov
jo
pop
pop
jmp
ret
jl
out
sbb
sbb
push
popf
popa
add
adc
outsw
xchg
ret
adc
dec
cmp
movsl
cmpsl
add
cltd
shl
stos
pop
dec
inc
or
jp
xchg
dec
mov
addr16
lds
or
push
mov
xor
cmp
call
rcrb
int
or
cmp
pop
mov
jge
jmp
ljmp
cmp
cmp
pop
insb
inc
xor
bound
jnp
pop
in
fstl
mov
push
pusha
mov
jle
addr16
gs
pop
or
sbb
mov
add
arpl
stos
sbb
insb
mov
in
adc
popa
orb
sbb
cmc
lahf
or
mov
dec
out
mov
inc
cli
imul
sbb
adc
mov
or
adc
sbb
outsl
das
cmpsl
inc
fnsetpm(287
push
call
add
in
jl
bnd
cmove
scas
and
dec
xor
jle
add
mov
sub
pop
xor
repnz
xchg
out
cmp
in
xor
cmc
and
incb
inc
scas
sti
sbb
clc
jns
xchg
cmp
inc
int3
into
cwtl
sbb
xlat
out
mov
cmp
xor
outsl
lcall
test
ds
sub
arpl
ja
mov
repz
cld
test
mov
mov
jle
cmp
int3
idivb
hlt
inc
adc
jmp
push
ret
cmp
je
clc
pop
or
fucom
out
lods
fsubs
icebp
push
mov
lea
out
dec
xchg
jbe
push
adc
push
xchg
add
rcr
mov
dec
jmp
pop
incl
mov
loop
sub
xchg
pop
jnp
or
push
push
addr16
jns
or
lahf
nop
sub
jp
movsl
pop
xchg
mov
mov
loop
outsl
cwtl
pop
sub
cmpsb
cmp
ds
stos
mov
push
outsb
ret
repnz
lea
cmp
mov
sub
xor
xchg
stc
ja
mov
xor
jns
aas
sub
pop
sub
icebp
dec
push
push
jmp
mov
lds
aam
jl
stc
popf
lret
mov
shl
stc
jae
sbb
mov
cmpsl
in
jl
cmp
and
sub
or
addb
and
inc
push
leave
idivl
das
dec
dec
inc
jl
add
rcrb
jg
les
xor
push
je
mov
imul
shl
adc
dec
test
mov
xchg
jp
adc
mov
in
jnp
xchg
pop
leave
imul
into
es
enter
xchg
addr16
push
or
push
mov
inc
mov
ret
ss
cmc
addb
mov
outsb
mov
stc
and
and
sub
fisubrs
jl
xchg
mov
cmpsb
fisubrl
adc
pop
ljmp
test
scas
xor
addl
cmpsb
xlat
dec
dec
xor
loope
aas
jecxz
mov
repz
and
xchg
sbb
mov
cmpsb
mov
loope
inc
movb
clc
adc
subb
push
sbb
jecxz
loop
push
xchg
ret
pop
cwtl
add
mov
dec
rorl
rorl
add
loope
dec
xor
mov
cwtl
jle
lsl
ss
out
out
das
xchg
outsb
jno
push
out
fs
fs
jo
push
shlb
sti
jns
fwait
sub
xor
xchg
adc
ds
shrl
jmp
divb
cmpsb
inc
push
aaa
ja
xor
mov
rcrl
sbb
or
fmuls
and
sti
dec
fbld
mov
sbb
std
mov
andl
aaa
aam
add
subb
ljmp
stos
push
repz
movsl
je
mov
dec
cmp
in
mov
push
pop
lea
lret
outsb
mov
pop
cmpsb
jo
jns
orb
adc
lds
mov
push
loopne
push
dec
rcrl
pop
push
aas
in
insl
in
sub
mov
shl
adc
mov
mov
je
repnz
inc
dec
cmp
rol
jae
push
jnp
sbb
pop
mov
idivb
into
sbb
push
mov
and
loopne
pop
orl
in
jge
push
bound
dec
mov
fidivrl
repnz
mov
ds
sbb
insb
lock
dec
xor
push
mov
add
xor
jns
pop
test
xchg
lods
notl
iret
adc
push
xor
jmp
negb
loop
inc
cld
mov
xor
dec
mov
xor
and
xor
dec
sbb
mov
ss
add
in
cld
push
imull
ret
sub
cmp
sbb
push
loopne
pop
push
mov
aaa
or
jp
jb
fs
dec
dec
rol
das
or
lods
enter
mov
or
lods
test
pop
es
pop
push
ret
adc
adc
repz
pop
call
pop
or
lret
xor
ljmp
lahf
cmp
cmp
loop
sbb
adc
rolb
ja
cs
test
cmp
inc
jl
icebp
xchg
out
dec
pushf
repz
test
mov
pop
pop
aad
rcrl
xchg
stos
mov
leave
popf
lods
and
mov
ret
adc
cmpsb
jle
popf
in
mov
jecxz
out
pop
loope
pop
mov
and
ss
fcompl
je
sarb
jne
std
pushf
and
cld
data16
fs
out
pop
dec
shl
pop
mov
mov
stos
push
ret
daa
inc
sub
jl
ja
fcoms
repz
in
sahf
cmp
mov
cmp
sbb
dec
pushf
daa
mov
push
jb
cwtl
add
mov
testl
les
cmpsb
popa
pop
in
pop
adc
mov
popa
lret
decl
adc
jbe
jne
add
sbb
not
mov
mov
fcomip
aas
pusha
inc
jle
inc
cli
in
shll
sbbl
add
test
sbb
jae
andl
dec
sbb
push
push
cld
aas
lahf
in
stos
and
hlt
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
jmp
bound
push
fsubl
xchg
jmp
repnz
sarl
xor
jp
add
into
popf
out
sbb
aad
adc
jge
and
imul
dec
call
push
sbb
imul
adc
int3
in
orb
mov
mov
pop
mov
xor
pop
aaa
mov
ja
inc
mov
dec
jle
mov
mov
sbb
dec
sub
test
orl
lahf
lcall
sbb
sbb
sub
and
sbb
pop
addb
shrd
test
inc
lea
push
push
hlt
or
fwait
or
cli
cmp
mov
sub
push
jo
cmpsl
popf
inc
pushf
jmp
shlb
stos
ss
pushl
and
jno
fnstenv
xlat
cmpsl
adc
cs
push
jne
mov
in
and
out
das
pop
dec
mov
push
enter
adc
and
inc
daa
in
dec
aaa
in
or
mov
jbe
cmpsl
jg
lods
xchg
push
in
sbb
pop
jg
js
aam
jo
insb
cltd
jo
add
out
cld
sti
cmp
fs
fistps
add
add
mov
rolb
sbb
outsb
roll
in
jp
xor
movsl
push
push
or
dec
push
test
push
push
sub
mov
and
scas
inc
push
cs
pop
sbb
jp
dec
fcomp
popa
pop
cmp
dec
fwait
mov
js
xchg
and
ljmp
sbb
rcrl
hlt
xchg
sub
imul
push
data16
or
mov
adc
and
xchg
scas
shll
cmp
ljmp
xor
sub
repz
lods
loop
int
pop
movsl
adc
xor
rorl
icebp
mov
jne
mov
stos
xor
jno
pop
xchg
int
or
and
jne
shlb
lds
dec
fstl
movl
xchg
mov
mov
push
mov
sbb
popa
loope
mov
mov
adc
mov
inc
mov
push
scas
sti
loop
pop
cmp
dec
jmp
cltd
push
test
mov
push
or
ljmp
fbstp
stc
jae
or
and
jno
dec
inc
mov
push
lods
jo
pop
mov
out
jl
push
bound
inc
mov
fdivrp
dec
jns
subl
or
jnp
hlt
jne
pop
pop
in
fidivs
inc
ds
or
dec
push
dec
das
cs
cld
lock
fsubs
jo
loop
and
notl
jnp,pn
call
inc
mov
xlat
dec
add
sbb
and
pop
out
pop
insb
popa
push
fs
rcrb
test
dec
fwait
lcall
lcall
xor
stos
daa
js
mov
push
int3
inc
add
ror
pop
or
mov
adc
sbb
int3
aad
sub
dec
outsb
xchg
xchg
push
cmc
inc
add
and
and
cli
aam
addb
lds
mull
push
jle
push
cli
xchg
jns
or
xchg
aaa
imul
fsubs
imul
add
insb
lret
add
cli
inc
or
loope
jge
pop
mov
or
sahf
cwtl
jl
mov
and
dec
lret
aam
jno
xchg
push
xor
xor
sub
pop
in
cli
dec
inc
ja
mov
aam
jg
push
mov
cmovs
jmp
jbe
adc
out
mov
rclb
aaa
jmp
fistpl
mov
adc
andb
jp
and
sub
mov
add
xchg
inc
xchg
mov
dec
and
cmp
pop
and
out
or
adc
fcoms
test
lds
mov
rorl
cmp
jp
and
mov
mov
outsb
sbb
outsl
sarl
gs
mov
or
mov
sub
data16
insb
pop
shl
dec
icebp
mov
iret
std
jl
ss
fistps
sub
cs
add
mov
outsl
out
repnz
cmp
test
push
cmp
mov
and
mov
std
cmpsl
xor
les
cmp
loope
mov
stos
neg
and
mov
lcall
stos
dec
xchg
xchg
push
xor
pop
loopne
mov
xchg
fcoms
ret
push
fwait
add
int
int3
cmp
sbb
insb
pop
cmpsl
push
movsl
cli
sbb
hlt
or
fstpl
lods
andl
out
mulb
test
test
addb
add
dec
mov
repnz
or
fisttps
loopne
mov
dec
inc
scas
sti
sarl
fistpll
scas
outsb
mov
jae
push
mov
sub
sbb
xor
cmpsb
jle
call
or
jne
sub
sbb
scas
lret
data16
cwtl
fstp
shl
fcmovb
push
stc
loope
push
mov
or
jmp
cmpl
dec
xchg
mov
fcoms
pusha
push
divb
mov
mov
add
out
or
and
out
mov
ds
scas
or
mov
shlb
mov
add
shr
daa
cli
jl
cmpsl
test
or
mov
jns
adc
lea
and
mov
clc
pop
popa
pusha
in
popf
imul
lret
push
mov
in
inc
jbe
aam
dec
loop
sahf
inc
fmulp
loopne
xchg
xchg
jae
cmp
mov
test
pusha
loop
pop
out
push
mov
in
scas
mov
mov
cltd
sub
xchg
repnz
testb
inc
xor
ret
push
xchg
push
xchg
enter
enter
cmp
test
movsb
iret
push
dec
push
pop
ljmp
adc
imul
leave
loope
lret
data16
jp
and
subb
stc
mov
lret
ja
pop
xchg
call
ja
push
inc
xchg
mov
xchg
and
cli
and
test
fdivrs
push
pop
pop
jns
xor
es
scas
or
ss
jg
fwait
or
testl
insl
sub
cld
lods
mov
mov
or
int3
daa
test
fistps
daa
insl
mov
test
int3
jge
add
mov
aaa
nop
jno
adc
fiaddl
mov
inc
xchg
fcmove
das
push
mov
jmp
ds
jecxz
outsl
dec
or
popf
loope
call
xchg
push
xchg
test
enter
ret
inc
mov
sti
adc
add
sbb
in
add
push
mov
fisttpll
jle
loopne
xorb
pop
std
sub
xor
loop
fsub
leave
mov
fstps
and
gs
adc
mov
sbb
shlb
sbb
out
xor
mov
jp
add
mov
sub
pop
pop
ljmp
cmpb
or
dec
push
out
or
pop
repnz
add
imul
and
in
cs
push
jnp
scas
popf
push
stos
int
mov
in
fmuls
sarb
mov
sub
jmp
pop
inc
or
rcrb
pushf
pop
mov
out
xor
gs
inc
cmc
int3
jne
jb
mov
mov
out
xchg
mov
mov
and
das
pop
inc
or
pushf
and
jmp
setno
push
test
enter
out
jnp
sub
jb
adcb
in
or
lock
std
pop
hlt
stc
lret
mov
push
mov
out
cld
out
xor
sbb
ds
insb
mov
push
out
mov
cmp
int3
dec
push
pushf
mov
mov
int
add
xchg
xor
leave
sub
psrld
xchg
lds
xor
adc
inc
mov
icebp
or
lret
mov
mov
xchg
jmp
push
jg
mov
loop
out
xor
shll
inc
insl
popa
cmp
push
add
jmp
repnz
scas
and
aad
stc
loope
xchg
je
pop
out
shlb
mov
sub
jnp
sti
in
jae
jge
add
xlat
testl
movsl
iret
mov
cltd
pop
ds
pop
sbb
adc
xchg
jb
jge
push
fwait
into
xchg
cld
cltd
in
outsl
inc
adc
push
addl
in
jb
jmp
aam
sub
mov
or
mov
inc
mov
int
mov
inc
adc
mov
or
sub
in
add
sbb
inc
xor
jae
js
xor
sub
jne
mov
xchg
fisttpll
push
fwait
push
mov
sbb
push
out
xlat
adc
or
cmp
push
jnp
pop
xchg
xchg
popa
ja
pop
pop
inc
xchg
mov
daa
out
sbb
xor
ja
push
add
or
dec
xchg
pushf
aam
add
sub
xchg
stc
lock
ret
mov
ja
mov
adc
loope
adc
je
mov
mov
je
ds
pushf
addr16
cmpsb
pop
leave
fwait
rorb
imul
and
cmp
or
pop
aam
jle
add
fisubs
insl
and
les
mov
daa
aas
stc
and
mov
je
push
nop
popf
icebp
dec
pop
add
adc
inc
stc
ds
fidivrl
js
arpl
and
daa
xchg
mov
mov
lds
sub
push
or
pop
imull
mov
outsl
mov
imul
sbb
and
shlb
addb
mov
pop
push
add
inc
push
jg
cmp
jae
push
insb
cmp
jne
in
jl
inc
cmpsb
mov
mov
in
in
rorl
ja
jmp
inc
inc
fsubrl
push
mov
scas
lcall
xchg
cmp
in
and
cmp
xor
add
pop
popf
adc
sbb
jnp
cmp
xchg
into
mov
pmulhuw
dec
into
or
pop
inc
rcll
int
sbb
push
sahf
sub
ret
roll
pop
add
fdivs
inc
mov
cmpsb
sahf
lret
sub
sub
cmp
arpl
outsl
push
push
push
int
cs
out
pop
cltd
and
fmulp
stc
push
enter
mov
mov
imul
inc
cmp
sub
xchg
and
mov
push
rolb
popa
dec
fcomp
mov
xchg
or
push
imul
pop
out
jae
push
lods
push
nop
inc
test
ret
dec
or
inc
push
jo
ror
test
nop
sarl
enter
out
xchg
fnstenv
adc
lods
cmp
or
cmpb
pop
pop
repnz
rcr
dec
dec
cmpsb
das
popf
pop
pop
inc
out
dec
mov
cmpsl
nop
xchg
aam
ja
mov
daa
enter
push
jg
push
jecxz
cli
mov
and
mov
scas
xchg
cld
xor
movsb
and
sti
or
arpl
fdivr
aam
cli
mov
push
mov
aad
pop
lock
xchg
test
fstpl
xchg
sub
test
pop
lret
iret
ret
nop
sbb
outsl
adc
loope
mov
push
lahf
cmp
dec
mov
inc
mov
adc
add
jne
loope
fisttps
xchg
call
loope
out
adc
popf
xor
inc
sub
popf
pop
cmp
or
sub
aad
sub
aaa
icebp
push
or
mov
lock
sbb
imul
jo
enter
mov
add
fcmovne
stos
cmp
fisttps
or
das
and
xor
mov
rep
mov
lahf
sub
fistps
sahf
push
jmp
ret
mov
lret
scas
sub
inc
stos
into
dec
push
push
adc
dec
adc
fidivs
mov
or
or
mov
fistpl
cmp
xchg
push
mov
mov
xchg
mov
or
testl
les
xor
dec
mov
pop
cmpsb
and
jae
mov
and
aam
push
aam
inc
push
sbb
and
dec
fisttps
mov
push
lret
sub
in
mov
or
insl
mov
or
add
mov
mov
xor
push
lds
inc
mov
in
test
mov
loope
sbb
push
mov
std
sbb
movb
or
pusha
popa
pop
pop
fcoml
ret
mov
sbb
filds
out
mov
cmp
sbb
jp
sub
jl
xor
cmpsb
shr
push
repnz
push
mov
mov
xor
dec
fdivrs
int
in
movsb
xchg
ror
push
in
popa
push
int
sbb
stos
leave
push
cmp
outsl
pop
jp
jge
cmp
inc
inc
sbb
or
dec
push
dec
or
mov
ret
sbb
xchg
cmp
ficompl
sbb
sub
and
cmp
jle
jge
lock
adc
or
lea
or
push
data16
insl
stos
xchg
adc
or
ja
push
lea
mov
push
push
push
arpl
mov
iret
outsl
fucomi
adc
mov
cs
pop
dec
dec
sti
mov
sbb
xor
inc
lret
shrl
add
cld
lret
cli
pusha
pop
call
es
outsb
icebp
popa
aad
cmc
imul
divb
sub
add
popf
or
jnp
xchg
es
into
aad
pop
lret
mov
das
or
or
push
mov
push
cmp
mov
jmp
incb
repnz
sar
int
mov
lcall
ja
mov
insl
mov
lods
cmp
sub
inc
out
mov
sub
adc
mov
lods
cmp
or
inc
or
bound
negb
enter
xor
mov
bound
cmp
cmc
jg
dec
cld
mov
dec
sub
add
popf
test
or
inc
lahf
loop
pusha
or
xlat
mov
add
std
lahf
nop
mov
dec
in
scas
mov
mov
xchg
push
sbb
int
mov
mov
dec
rclb
jbe
std
jbe
xchg
cmp
xor
pop
lahf
jns
xor
mov
and
lahf
xchg
fwait
or
popa
aad
jne
mov
mov
xchg
and
mov
popf
add
fdivp
mov
xchg
xor
push
in
into
pop
test
ret
insl
or
mov
mov
cmc
sbb
call
fimuls
add
out
add
and
dec
in
loop
movb
mov
push
ljmp
inc
cli
pushf
je
add
clc
outsb
xor
mov
aaa
lahf
sub
jae
movsb
bound
mov
mov
adc
lods
dec
div
push
mov
mov
jae
adc
xchg
pop
xchg
repz
repz
scas
xchg
gs
xchg
js
imulb
nop
sahf
lods
leave
lret
adc
xor
loopne
out
cmp
fimuls
pusha
add
xorb
jbe
inc
sbb
out
ds
ds
xchg
in
mov
gs
sub
mov
roll
rcll
cli
out
aas
mov
loop
dec
in
and
notb
adcl
sbb
arpl
mov
jo
lds
xchg
ja
dec
jo
test
cmp
loope
mov
mov
inc
or
sub
xor
out
aam
dec
test
clc
out
push
xor
or
in
jns
dec
jp
push
scas
pop
andl
inc
dec
mov
cs
mov
mov
xor
insl
cmp
adc
xor
sahf
je
mov
sub
sbb
shrl
cmp
mov
push
pop
sahf
mov
cmp
jnp
out
push
jle
test
out
mov
adc
or
mov
adc
xchg
cmp
daa
test
in
inc
imul
sbb
int3
mov
dec
rolb
test
xchg
jecxz
mov
fistpl
jge
mov
jg
movsl
jl
inc
sub
dec
or
fs
push
add
xchg
xor
and
lahf
fs
pop
add
add
mov
push
daa
ljmp
loopne
fs
xchg
shrl
movsl
fs
push
mov
jo
inc
cmp
sahf
mov
ret
and
add
add
or
mov
dec
imul
mov
jae
adc
sbb
jne
stc
and
xchg
jb
test
xlat
mov
jle
pop
movsb
in
mov
sbb
or
sub
xlat
dec
testb
mov
pop
dec
dec
push
aad
bound
pop
imul
pop
xorl
mul
cmc
xor
stos
inc
in
aad
mov
xor
pop
cmpsb
inc
in
aam
repz
mov
int3
push
or
pop
xor
sub
int
xchg
jno
loop
inc
pusha
dec
ja
scas
add
mov
hlt
loope
push
pop
push
das
xor
cmpsb
fmuls
fisttpl
pop
sbb
pop
stc
js
add
std
mov
adcl
add
xchg
mov
into
inc
xchg
loop
popa
ds
xor
mov
push
stc
xchg
mov
mov
cmp
cmp
fs
imul
jmp
lds
notl
aam
mov
pop
enter
push
cmc
clc
inc
fnstenv
mov
sub
popf
loopne
mov
movsl
hlt
sub
jo
inc
sub
arpl
in
lcall
jg
push
dec
mov
iret
int3
outsb
or
ficomps
es
incb
mov
ret
mov
fs
ret
xchg
jns
pop
push
cltd
fsubrl
out
lahf
shrb
stos
bound
adc
in
fnsave
pmuludq
shll
jecxz
into
xchg
inc
mov
test
xchg
pop
fadds
mov
inc
iret
add
fstl
sbb
add
jno
push
stos
repz
rcl
in
xorl
xchg
push
pop
add
mov
out
ss
adc
rolb
adc
mov
scas
sbb
jb
outsb
sub
call
and
or
fists
or
adc
mov
mov
roll
and
imul
pop
push
mov
je
dec
in
mov
mov
xchg
iret
ljmp
es
xchg
dec
mov
push
xor
and
dec
fsub
pop
cmp
call
dec
lock
add
cwtl
jb
cmp
xchg
in
idivb
cmp
dec
outsb
mov
rcrb
shll
jns
dec
inc
aaa
pop
iret
imul
cwtl
pop
mov
inc
repz
add
rcll
push
and
cmp
jns
daa
test
sbb
pop
scas
in
dec
sub
addl
mov
mov
jno
lret
int
aam
clc
into
into
jnp
jg
sub
out
jge
pushf
sub
outsb
jb
mov
xor
cwtl
mov
lret
add
push
mov
loop
pop
cs
repnz
and
pop
pop
push
mov
mov
aad
sti
popa
js
mov
in
adc
push
push
pop
imul
sub
jo
rolb
addb
push
push
add
test
lret
leave
push
loop
mov
lea
cmp
in
xchg
lds
mov
fisubrl
inc
dec
jno
dec
pop
hlt
dec
call
jg
out
mov
data16
push
mov
xor
jg
movsb
ljmp
scas
mov
pusha
cmp
mov
adc
enter
pusha
dec
cli
aaa
mov
mov
rcll
and
aas
mov
mov
cmp
pop
nop
push
dec
repnz
rclb
jge
sub
in
xor
add
cmc
mov
mov
jo
stc
adc
mov
fistps
je
sbb
aam
fimuls
xchg
or
dec
aas
push
or
lds
mov
cltd
sahf
aam
mov
inc
aad
aas
pop
lret
pop
adc
lcall
fimull
popf
aam
dec
popf
cmp
sbb
popa
into
repnz
sub
ss
push
int3
ljmp
ds
insb
push
outsl
out
jg
daa
repz
test
cmpsl
adc
mov
mov
push
cmpsb
xchg
pop
in
or
sbb
cmp
repz
xchg
jae
rcrb
jg
sub
out
fstl
xor
dec
ficomps
imull
xor
fisttps
call
popf
push
movsl
in
mov
jmp
repnz
dec
sbb
cmp
lcall
xor
cmpsl
push
insl
mov
cltd
jg
pop
ffree
cmp
cmc
add
jle
mov
push
popl
inc
leave
adc
lret
lods
popl
add
pop
cmp
or
pop
fwait
es
testb
clc
push
sbb
xlat
mov
dec
lock
push
shlb
int3
in
xor
inc
push
pushf
mov
shlb
push
roll
das
jle
and
jbe
cmp
xchg
loopne
das
xchg
cli
push
in
scas
pop
into
cmc
hlt
sbb
test
out
mov
arpl
repz
lret
sbb
push
jecxz
push
not
mov
xorb
leave
jne
jb
popf
mov
imul
ret
mov
mov
cmp
pushf
adc
stc
test
rcll
leave
addr16
cmpsl
imul
ja
inc
fisubrl
mov
or
push
xor
jo
mov
ret
pop
and
dec
jbe
out
daa
cmc
fstp
jae
testl
mov
addr16
sub
cmp
out
xor
das
add
push
aam
or
push
jae
pop
pop
add
push
icebp
cmp
adc
out
dec
push
jmp
inc
shrl
jge
lahf
pushf
lret
movsb
dec
and
inc
fs
xchg
loopne
adc
out
sbb
push
xchg
test
push
jbe
lahf
push
adc
out
leave
mov
cmp
mov
enter
mov
insb
aaa
rcll
jmp
xorl
jo
mov
dec
pop
iret
cmpb
add
insb
test
fadd
dec
and
orb
aaa
mov
js
fisttpl
mov
and
jle
ret
add
scas
cmp
and
lahf
dec
xor
mov
xor
test
sub
jnp
and
xor
repnz
cmp
push
add
and
lods
sub
jmp
test
movsb
test
icebp
mov
jnp
mov
je
mov
push
mov
or
jnp
aaa
lret
mov
repnz
xchg
xor
jge
sub
mov
stos
ficomps
outsl
ljmp
cwtl
adc
rcl
popf
mov
and
call
mov
outsb
movsb
ds
adc
jns
fidivrl
in
push
lock
leave
mov
push
push
shl
push
stos
fisttpll
pop
jae
clc
xchg
rcll
pop
sbb
movsb
add
testl
adcb
pusha
in
adc
arpl
xchg
out
push
ljmp
and
add
fsubs
adc
cmpsl
out
pusha
pop
and
es
popa
cmp
into
sar
jne
mov
lcall
into
std
out
mov
push
mov
mov
dec
scas
sbb
rcl
insl
je
arpl
cmpsl
push
adc
or
incb
ficoms
sbb
jb
cwtl
sub
cmp
pop
test
xchg
icebp
adc
jmp
mov
mov
out
subb
sbbb
sub
mov
mov
es
arpl
rcrb
enter
jl
arpl
inc
xor
shlb
inc
xchg
mov
pop
mov
ds
in
push
mov
jnp
fwait
mov
loopne
outsb
icebp
mov
jl
xlat
jne
or
jo
sub
inc
scas
les
shl
outsb
xor
xor
shlb
int
or
fwait
cmp
cmp
imul
insl
pop
push
xchg
pop
push
js
pop
pop
notb
mov
add
adc
jl
gs
push
cmpsb
pop
mov
dec
jp
jo
and
xlat
dec
nop
sbb
pop
sub
mulb
or
pop
or
pop
sti
leave
push
pop
outsb
lock
sub
add
shrb
test
jge
sahf
ret
xor
fs
xchg
lods
inc
pop
push
or
push
dec
aaa
xor
aam
mov
call
popa
in
jmp
loop
mov
jnp
xlat
out
cmpsl
push
or
add
pop
mov
and
adc
push
push
into
test
in
xchg
push
xchg
mov
sahf
int
fucomip
jae
getsec
pop
fisttpl
mov
arpl
fisubrs
and
out
jnp
adc
insb
outsl
cltd
insl
subb
pusha
dec
outsl
arpl
lret
ss
xchg
in
rcll
mov
cmp
pop
xchg
fs
xchg
xchg
and
mov
imull
jae
pop
cmp
jmp
adc
scas
sub
int3
popf
jecxz
stos
mov
push
xchg
mov
xor
fs
jo
sbb
fcoms
inc
sub
sub
loop
pop
outsb
mov
ljmp
sbb
sti
test
nop
push
int3
jae
bound
and
shll
lcall
cmp
aam
dec
sub
stc
lret
fnstsw
dec
cmpsl
adc
mov
adc
lods
push
pop
inc
sbb
cmp
jns
jns
stos
and
push
mov
sbb
jle
push
jle
cmp
fwait
xchg
movntq
inc
xchg
lret
inc
ss
jmp
mov
push
outsl
mov
and
sub
cli
sub
std
lret
add
adc
dec
out
mov
js
xchg
shlb
int3
hlt
jb
pop
adc
sub
sbb
pop
dec
xlat
lea
movsl
cwtl
ja
jp
insb
roll
hlt
push
xor
lods
nop
push
movsb
xchg
sbb
mov
lds
int
loope
les
repz
fsub
cld
outsl
xchg
enter
das
mov
repnz
mov
cmp
add
inc
jno
inc
popa
cmp
ret
and
mov
ds
xorb
sub
mov
pop
imul
sahf
adc
jmp
in
jae
stos
dec
arpl
xchg
in
mov
push
sub
std
xchg
inc
sub
xor
hlt
add
adc
push
jle
dec
pop
xor
xchg
push
dec
int3
mov
mov
sbb
mov
idivb
mov
inc
jecxz
testl
je
adc
pop
test
jmp
xchg
mov
enter
arpl
shlb
fstl
pop
out
gs
sbb
inc
mov
jne
mov
mov
sbbl
sub
sbb
push
popf
fstl
shl
pop
popf
mov
scas
jo
adc
icebp
and
dec
mov
int3
lret
and
scas
mov
mov
xor
fdiv
push
cltd
insl
mov
push
or
add
fcmovnbe
inc
in
outsb
fdivp
jmp
sub
add
xchg
push
mov
vcvttps2dq
out
pop
lods
mov
mov
push
add
insb
adc
cmp
cmp
mov
pop
push
adc
iret
sbb
pop
aas
or
rorb
notl
pusha
dec
test
mov
adc
vandps
addr16
stos
and
aaa
cs
fwait
bound
ds
iret
loopne
xchg
pusha
iret
mov
imul
enter
lret
int
add
daa
imul
or
push
inc
jle
andl
mov
fmull
dec
mov
mov
popa
cmpsb
pop
popa
sbbl
mov
mov
xchg
dec
gs
push
pop
jle,pn
inc
pushf
cmp
aaa
or
cmp
pop
divl
push
pusha
and
pop
mov
xor
push
lods
arpl
fs
and
xor
xchg
int
cltd
or
dec
hlt
mov
insb
jbe
xor
aas
sub
mov
stos
mov
push
sub
shlb
in
orb
jg
jmp
sbb
arpl
mov
push
fstpt
in
mov
adc
mov
pop
faddp
outsb
rcrl
sub
pop
fmull
add
xlat
int3
outsb
lods
mov
stos
and
adc
shl
inc
dec
leave
dec
enter
aaa
jo
aad
push
in
fsubl
and
pop
xchg
cmp
and
bound
das
in
setns
adcb
dec
mov
sbb
aaa
or
decl
inc
mov
shrb
xor
stc
lock
fdiv
cli
test
subl
inc
cwtl
mov
add
in
mov
dec
inc
hlt
pushf
fcmovb
mov
xchg
sbb
mov
das
inc
popf
sub
inc
test
outsb
cmp
cmc
jge
pop
ljmp
xchg
insl
rcll
test
test
ja
mov
fisubrl
xchg
popa
cmp
mov
push
cmpsb
in
sbb
clc
xchg
mov
xchg
int3
sbb
xchg
cmp
ficoml
notb
mov
jne
add
stc
test
aaa
xor
popa
call
loope
mov
pushf
fistpl
call
mov
inc
psubb
ret
scas
xlat
cwtl
fnstcw
or
add
or
pop
push
xchg
mov
pop
fnstenv
or
movsl
in
cmp
arpl
es
dec
arpl
jle
enter
jo
fnstenv
adc
lods
loopne
pop
dec
stos
aas
sub
pop
sbb
dec
imul
dec
scas
sbb
add
mov
lret
mov
adc
rorb
fisubs
cmpsb
out
aas
inc
and
ds
pop
sbb
ljmp
fisubrs
push
inc
cltd
pop
xlat
ljmp
add
fldt
dec
arpl
mov
insb
int
ljmp
push
pusha
or
lds
addl
popa
pop
cs
and
hlt
inc
pop
cmp
pop
pop
xchg
dec
inc
mov
jle
stc
and
loope
aaa
ja
pop
cmpsb
fdivl
stos
out
add
mov
imul
mov
adc
dec
in
jno
mov
cmp
bound
orl
sbb
es
lea
xor
enter
push
ret
adc
test
rolb
add
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
jmp
loope
xchg
xchg
fisttpl
test
push
xlat
inc
mov
jp
pop
jp
jnp
sub
pushf
clc
aas
int3
lock
btr
fsubp
movsl
adc
or
pop
mov
in
sbb
inc
sarb
scas
pop
aas
movsl
fisttps
test
out
arpl
sub
xor
jo
mov
xchg
dec
mov
mov
and
clc
jns
cmpsl
scas
sub
das
testl
xchg
sub
test
inc
adc
sbb
stos
jo
in
pop
inc
add
inc
sub
push
sbb
pop
xor
test
xchg
stos
jo
int3
cmp
rorl
or
mov
push
sahf
inc
js
popf
lods
movsb
pop
jo
lds
push
notb
push
aam
test
mov
movsb
fs
xor
repz
fcomps
dec
scas
insb
dec
shlb
fwait
loop
aaa
mov
adc
push
nop
inc
clc
and
sti
imul
insl
fmul
push
pop
add
daa
js
adc
rcll
fsubl
and
push
push
incl
mov
pop
push
dec
and
stc
xchg
mov
xor
dec
pop
inc
popa
jl
dec
daa
aad
cwtl
addl
dec
mov
add
mov
mov
jle
add
xor
sub
inc
fwait
addr16
jae
mov
xorb
leave
cmpsl
xor
and
in
fiadds
aad
jo
lret
cmp
into
sbb
sti
push
and
mov
stc
xchg
or
xchg
fistpll
jnp
push
jge
fildll
pop
in
mov
loop
jbe
inc
rclb
jp
ret
push
adcl
lret
or
pop
cmp
mov
sub
loope
xor
xor
mov
xchg
push
add
add
loopne
imul
sbbl
adc
jb
sbb
mov
les
mov
in
ret
lret
insl
pop
movsl
or
mov
loopne
inc
ret
cmp
push
test
lcall
adcb
mov
and
iret
sbb
mov
icebp
ss
add
xlat
and
ds
or
or
leave
insl
sub
outsb
stc
jg
sub
in
push
fcompl
xchg
aam
in
jge
clc
into
dec
shrb
lahf
jno
shlb
outsb
adc
cs
xchg
addr16
xchg
mov
out
sar
cli
xchg
sub
adc
hlt
icebp
add
fsts
out
loop
int3
inc
pop
dec
cmp
call
fmull
inc
mov
mov
repnz
cltd
cmp
mov
les
je
or
cmc
dec
sbbl
imul
incl
sub
mov
lods
sub
add
or
cmpsb
xchg
cmp
and
push
mov
ret
popa
pop
icebp
nop
cli
push
mov
push
mov
fs
dec
das
adc
sbbl
in
into
cmp
or
mov
sub
repz
data16
mov
pop
stc
loope
shlb
adc
jb
inc
mov
movsl
insl
and
enter
std
js
int3
sub
and
mov
and
mov
xor
add
or
pusha
push
push
mov
ret
sti
aad
and
fistl
in
stos
fistpl
mov
pop
movsb
faddl
push
push
pop
js
cli
fs
pushf
dec
inc
mov
or
jp
xchg
dec
and
iret
xlat
mov
jns
mov
jne
ds
aad
sti
jl
pop
negl
lret
pop
mov
mov
rcrb
xchg
rorl
mov
xor
push
sbb
movsl
mov
xchg
rdmsr
and
insl
lods
and
dec
inc
lret
mov
lcall
sarb
mov
sub
push
pop
xor
inc
lahf
out
jbe,pn
sub
push
inc
jb
ret
jbe
je
hlt
inc
pop
lea
or
je
arpl
dec
add
pop
shrl
out
ja
test
cmp
stos
pop
xchg
imul
sub
or
jns
mov
sub
mov
gs
or
adc
repz
repnz
or
xorb
testb
decl
pop
add
clc
sbb
mov
adc
xlat
pushf
int3
mov
stos
add
push
push
test
pushf
ss
faddl
js
jp
cmp
std
adc
pop
ret
arpl
xor
les
es
fidivrs
inc
jecxz
out
jb
push
inc
xor
dec
repz
dec
cld
notb
imul
push
jo
inc
push
and
push
push
popf
jns
scas
or
leave
and
mov
mov
mov
data16
inc
loopne
scas
ret
or
dec
into
sub
pop
leave
xor
xorl
cmc
inc
jne
ja
xchg
or
jnp
enter
jo
cmp
idivl
cmp
ljmp
push
sahf
cli
xor
xchg
pslld
sub
scas
pop
adc
mov
call
sti
pop
repnz
shufps
cwtl
xchg
push
jo
ja
lods
std
ret
in
cmp
and
pop
add
call
enter
mov
js
enter
sbb
mov
ret
stos
jle
scas
push
insl
les
dec
mov
xchg
ss
dec
dec
sahf
push
in
and
push
push
repz
add
lahf
sarl
mov
jne
pop
mov
mov
orb
pop
pop
pop
xor
mov
addr16
bound
xchg
pop
mov
xor
rcll
mov
stc
adc
mov
cmpb
pop
insb
pop
or
fisubrl
mov
sub
jg
mov
test
push
or
sub
popf
imul
push
lds
push
test
int3
lret
jecxz
fmull
lods
and
dec
xorb
add
jl
mov
fisttps
leave
pop
fistpll
xor
sbb
dec
xchg
xchg
mov
push
push
in
pop
enter
movsb
mull
fsubrl
sarb
dec
push
xor
push
stc
std
mov
pop
mov
sahf
lcall
jp
mov
iret
dec
jmp
cmpsb
dec
test
cld
pop
add
mov
mov
mov
jne
xlat
or
pop
and
roll
in
push
push
add
jae
stos
push
sbb
lcall
xchg
ss
into
pop
jnp
stos
push
ja
lods
jge
test
add
ficompl
xor
push
dec
xchg
cmp
ffreep
cmpsl
leave
inc
pop
cvttps2pi
or
scas
lcall
jae
adc
mov
ljmp
in
orl
cmp
repnz
mov
inc
or
inc
jp
dec
enter
cmp
je
imul
pop
daa
and
leave
jnp
outsl
mov
nop
cmp
mov
bound
xor
xchg
sub
lret
pop
dec
scas
jmp
subb
jp
cmpsl
mov
or
insl
insb
in
aad
fiadds
push
lods
xor
loop
nop
cwtl
cmpl
ljmp
jecxz
aad
cmp
ret
xor
outsb
gs
lea
aaa
mov
mov
popa
outsl
mov
pop
sarb
dec
mov
adc
in
inc
call
aam
pusha
cltd
mov
jae
mov
jne
xor
popf
pop
negb
cli
sub
xchg
dec
in
adc
and
je
inc
in
xchg
dec
fbld
sarb
sbb
cmp
push
je
fs
sbb
in
mov
mov
lds
idivb
js
inc
xchg
or
mov
push
loope
test
jno
js
pusha
les
cmp
pop
pop
adc
push
decb
imul
rcrl
test
int3
fsub
dec
cs
fbld
push
jecxz
in
and
adc
mov
xchg
xchg
in
sti
mov
xchg
dec
or
insl
pop
dec
popf
lcall
fnstcw
test
dec
adc
pop
mov
pop
xchg
jne
or
loopne
xor
pop
inc
loope
push
jns
xor
adc
lahf
or
push
xchg
xchg
xchg
pop
jmp
popf
lahf
adc
mov
inc
fsubr
enter
fadds
mov
rolb
jnp
xchg
imulb
jl
jo
mov
jo
test
dec
loop
repnz
inc
mov
imul
ret
mov
or
cmp
pop
jnp
sarb
clc
dec
jecxz
push
or
push
mov
lahf
inc
mov
hlt
adc
mov
sbb
xlat
jo
adc
jge
pop
cltd
js
aas
add
push
dec
movsl
cmpl
and
inc
cmpsb
mov
lods
repnz
xchg
ret
movl
fcoml
out
or
jl
pop
arpl
movsb
mov
push
outsb
test
xor
into
in
adc
and
in
add
repz
dec
pushf
clc
cmpsb
jbe
lock
pop
dec
subl
push
inc
inc
cltd
ret
or
jecxz
pop
loope
call
pushf
pop
and
xlat
out
jp
fwait
jns
or
sbb
xlat
insl
cmpsb
arpl
cmp
adc
lret
sbb
inc
ret
cli
add
xor
leave
or
pushf
lret
and
loopne
adc
pop
sub
push
sub
jno
in
inc
loop
inc
ret
ja
cltd
mov
cli
scas
je
push
cld
mov
xchg
subb
into
push
pop
xchg
sbb
mov
in
cmp
mov
ret
faddp
xchg
push
mov
jo
nop
or
testl
inc
lock
in
mov
js
addr16
mov
aad
sbb
dec
ret
jbe
rorb
inc
add
adc
lods
or
push
decb
add
fiaddl
js
cld
stos
dec
insl
js
mov
lahf
adc
mov
imul
push
idivb
mov
xchg
pusha
dec
mov
lea
mov
cltd
jb
aas
add
sahf
add
jmp
hlt
jae
pop
xor
in
rdmsr
mov
out
mov
lcall
test
cs
stos
enter
sarb
nop
lock
in
xor
leave
sub
push
and
mov
lret
es
in
mov
fsubs
sub
inc
insl
dec
add
lods
sahf
cmpsb
cmc
lahf
add
mov
jg
loopne
pop
xchg
jle
sbb
dec
mull
xor
pop
test
jbe
inc
pop
cmp
and
pushf
jbe
js
pop
sahf
fisttps
shl
data16
pop
clc
dec
mov
add
sti
popa
add
and
xchg
aam
fwait
mov
jno
ret
subb
loop
push
and
mov
pop
xor
call
push
int
push
leave
sub
stc
and
out
xor
ret
pop
push
cs
mov
jnp
xor
and
mov
fadds
xchg
lea
insb
push
cmpsl
add
mov
mov
lea
xor
adc
addr16
inc
jb
sub
adc
inc
pop
adc
icebp
int3
daa
sahf
mov
sub
dec
xchg
lock
clc
push
sub
pop
mov
rolb
std
mov
fcom
xchg
pop
mov
jno
inc
stos
mov
sbb
mov
insb
lret
test
loope
mov
and
lods
mov
rorb
insl
sub
jmp
shrl
adc
aaa
xchg
mov
lds
mov
pop
mov
das
mov
out
bound
xchg
into
mov
pop
add
or
lods
cmp
mov
lods
jae,pt
sub
test
lock
fdivs
fnstcw
stc
push
in
or
outsl
adc
adc
data16
sarb
fidivrl
push
cli
movsl
lock
sbbb
dec
xor
sahf
mov
add
into
es
adc
push
in
push
pushf
sub
lret
in
popf
mov
std
icebp
sar
lds
int3
xor
lods
push
es
cmpsl
mov
pusha
icebp
or
sahf
jae
xchg
cs
leave
test
adcl
in
xchg
fimuls
aad
test
fsts
stos
rorb
stos
xchg
push
outsl
arpl
mov
stos
fs
jne
stos
or
das
mov
stos
rcrb
mov
push
mov
imul
loop
pop
loopne
sti
cmp
add
push
mov
pop
imul
movsl
loope
or
mov
xchg
mov
mov
cwtl
or
movl
popa
push
sbb
cmp
mov
pop
das
out
mov
pop
or
adcl
xor
fstpl
das
pop
inc
cmp
lret
movsb
push
mov
rcrb
imul
jne
into
adcb
enter
test
push
or
arpl
xor
jl
pop
adc
jl
mov
xchg
lcall
clc
mov
jl
idivb
icebp
pop
pop
jae
jae
ds
out
das
mov
roll
mov
repz
cmpsb
mov
sbb
mov
fcomps
addr16
adc
std
lea
adc
pop
jno
cmp
in
mov
dec
aam
xchg
and
mov
stc
addb
nop
stos
sti
mov
xor
push
out
push
pusha
ds
rorb
adcl
int3
inc
cmpsb
push
jmp
inc
mov
push
fmuls
adc
adc
xchg
cmc
gs
push
mov
pslld
inc
int3
aam
clc
or
inc
xor
adc
mov
and
loop
int3
pop
mov
fdiv
fs
subl
imul
mov
mulb
jge
add
addr16
cmp
adc
adc
sahf
pushf
leave
out
add
in
data16
xorl
jnp
cli
ret
cmp
jp
ds
dec
hlt
out
sbb
push
sbb
shl
xchg
push
sahf
jb
test
mov
adc
inc
mov
push
xor
movsl
bound
ss
stos
daa
sub
jp
mov
outsb
outsl
out
cmp
mov
std
mov
icebp
xchg
xchg
je
mov
mov
mov
dec
into
or
repnz
lods
ss
int
jno
xor
scas
mov
cmp
fnstsw
mov
pop
add
xor
das
les
fwait
xbegin
pop
push
xor
out
ljmp
mov
push
jbe
xor
leave
fs
cmp
cld
cmp
std
sub
addr16
in
inc
jp
hlt
or
xchg
int3
sub
xor
sub
push
loop
ret
shrl
sbbl
cmp
jl
cmp
sbb
mov
gs
inc
mov
cmp
fists
subl
sub
add
nop
shll
gs
xchg
pushf
dec
lret
lret
add
push
testl
test
cli
xchg
pop
push
push
sbb
les
ja
imul
in
clc
sub
sbb
xchg
mov
clc
and
and
sti
xor
xchg
xor
outsl
ds
push
iret
sub
add
push
in
ret
xchg
xchg
cs
cld
shrb
mov
les
pusha
dec
pop
in
push
bound
lcall
in
test
xchg
xchg
xchg
push
sub
aaa
or
addl
xor
push
push
push
pop
pop
jo
dec
sahf
aam
es
fbld
imul
movsl
mov
aad
sti
fcmovbe
jns
in
outsl
sub
outsb
dec
push
dec
sub
inc
dec
mov
pushf
out
and
add
fisubrl
sub
faddl
inc
sahf
imul
jb
loopne
fldt
mov
push
cwtl
cltd
sbb
in
sbb
bound
xor
cmp
dec
add
pop
insb
xlat
js
mov
das
out
adc
dec
inc
scas
push
adc
pop
clc
mov
xchg
xchg
rcrl
out
daa
or
out
jno
adc
in
sahf
xchg
jno
js
rcrl
push
pop
inc
ror
test
in
push
pop
lods
xchg
pop
dec
ficompl
push
mov
push
mov
mov
mov
out
inc
std
cmpsl
pop
xorl
inc
sub
addr16
adc
movl
jmp
test
xor
imul
rol
mov
test
push
add
sub
sahf
sub
lock
inc
data16
xor
mov
loope
mov
dec
jge
sub
sub
fisttps
xchg
movsb
fsubs
pushf
pop
jecxz
jle
dec
fmull
inc
nop
prefetch
or
jo
ss
dec
and
xor
cmpsl
pop
aam
sbbl
xor
bound
add
mov
jle
lcall
ret
or
dec
cmpsb
xchg
sub
ss
xchg
les
xchg
or
sbb
inc
ficoml
add
adc
inc
addl
bound
adc
pusha
into
mov
push
adc
test
sti
sbb
xchg
pop
adc
loope
sub
test
xor
inc
pushf
mov
jecxz
dec
push
ret
push
adc
jg
call
mov
push
lods
movsb
pop
lret
mov
xchg
repz
scas
mov
pop
lods
std
movsb
mov
mov
std
jnp
add
fcompl
je
lahf
arpl
xor
add
jmp
mov
mov
sbb
or
imul
xor
les
ljmp
add
pop
xchg
shl
divb
aad
cmp
inc
dec
mov
pop
rol
movsl
jb
sub
add
add
fnsave
push
ret
repz
add
daa
das
cmp
sub
outsb
in
js
imul
je
das
and
or
test
in
mov
aaa
xchg
cwtl
clc
pop
mov
push
lret
push
xor
cmp
cmp
cs
neg
cmpsl
jo
in
adc
ret
mov
imulb
insb
pop
pop
push
movsb
xchg
popa
fidivl
fdivs
xor
mov
xchg
pop
sub
stos
and
fnsave
ret
pop
mov
loope
imul
lcall
or
and
push
aaa
lret
aas
fwait
push
test
sarw
repnz
insl
popf
pop
outsl
in
insl
scas
or
pop
lock
xor
fmull
aad
cmp
flds
cld
scas
adc
cmp
xor
aas
ret
mov
mov
pop
xor
fwait
add
xor
in
or
mov
mov
mov
jg
cmp
adcb
xor
and
incl
fldpi
add
nop
inc
inc
and
inc
clc
roll
adcb
aam
push
ljmp
add
cltd
insl
xor
ja
mov
adc
in
aad
bound
push
leave
arpl
sahf
notl
mov
push
mov
xor
lock
jo
adc
hlt
loope
cmp
imul
jbe
fcompl
inc
jbe
idivb
pop
addr16
fstpl
mov
call
lcall
and
imul
push
sub
call
adc
pop
inc
imul
add
outsb
imul
or
lods
out
bound
mov
xlat
jle
dec
inc
int3
pop
dec
clc
call
fwait
mov
iret
mov
lods
add
clc
cwtl
xor
jge
ret
push
sub
dec
sar
test
sbb
bound
mov
lds
cs
jo
out
out
xor
ljmp
fdivrl
mov
ljmp
mov
jecxz
pop
loope
loope
ficomps
mov
jno
test
lret
sahf
ja
adc
sbb
xlat
inc
mov
jbe
or
das
xchg
hlt
dec
inc
imul
add
test
adc
insl
outsl
jae
jecxz
ret
shll
icebp
mov
cmpsl
add
scas
out
inc
arpl
xchg
pop
insb
inc
jge
inc
dec
sbb
xchg
imul
gs
iret
xchg
sti
pop
stc
cld
sbbb
sbb
addr16
mov
int3
sub
fwait
jg
dec
jle
cwtl
jo
mov
adc
mov
daa
jle
sbb
push
das
icebp
pop
scas
cmpsb
fwait
outsl
and
out
aas
stos
xor
out
out
mov
test
addr16
shl
xchg
jnp
pushf
sub
testb
jle
mov
sub
mov
mov
add
push
rorb
fnsave
test
out
scas
mov
inc
subb
jo
out
in
sub
dec
jbe
jne
cmp
xlat
daa
in
mov
add
mov
jp
mov
leave
or
sbb
mov
gs
xor
test
pop
cmpsb
add
cmp
je
cltd
adc
lds
sarb
inc
inc
jmp
lret
push
insb
pop
dec
sti
cmp
fists
inc
fimuls
adc
push
push
xchg
sub
sbb
mov
aas
push
mov
fadds
arpl
inc
iret
inc
test
dec
sub
inc
mov
push
pushf
pusha
push
xchg
and
in
in
mov
lock
push
jne
mov
aam
cmpsl
and
mov
sahf
xor
mov
jbe
iret
and
icebp
push
out
daa
push
aam
jle
jb
lcall
popf
mov
mov
roll
int
mov
or
inc
dec
mov
xchg
cmp
loop
jbe
or
xchg
loopew
add
dec
sbb
cltd
adcb
add
outsl
mov
and
hlt
sub
and
je
sti
cmp
int
sub
int
push
notb
jae
lods
movsb
outsb
ss
aad
subl
fstl
cmp
sub
popf
cmp
inc
rorl
pop
iret
xor
push
in
cltd
mov
inc
xchg
cli
inc
test
cmp
adc
sub
cwtl
scas
jecxz
dec
cld
pop
dec
cmp
push
movsb
inc
xchg
inc
or
das
mov
les
bound
sub
dec
lods
mov
jbe
inc
sbb
pop
fcomps
cwtl
sbb
cmpsb
cmp
add
cmpl
xchg
sub
adc
shl
jnp
lea
dec
xchg
xchg
les
cmp
jg
stos
mov
mov
cli
xchg
xor
jl
push
gs
aaa
mov
arpl
je
std
sbb
push
fxtract
pop
in
dec
mov
or
insb
cmp
es
mov
data16
cmp
mov
xor
cli
cmpsl
ret
clc
xor
popa
dec
mov
repz
dec
leave
fucom
lds
mov
shrl
lds
jp
outsl
add
pop
int
ds
gs
shl
xchg
dec
stos
adc
xor
or
mov
sbb
mov
sub
mov
xchg
xlat
mov
and
repz
in
leave
adc
into
cwtl
fs
test
or
iret
test
jns
jo
mov
ficoms
jle
dec
hlt
pop
pop
xor
mov
sbb
int3
cmp
inc
popa
sub
push
outsb
leave
fnstsw
xchg
or
test
ss
jmp
lods
jmp
daa
sub
push
xchg
dec
mov
mov
push
jge
sarb
pushf
adc
pop
scas
adc
jne
push
aaa
add
mov
pop
into
out
and
stos
lcall
pop
pop
scas
js
adc
aaa
test
mov
xor
inc
jmp
test
jl
mov
add
and
lret
jnp
and
cli
mov
add
mov
loopne
mov
mov
rcl
cmp
push
loope
je
stos
and
xchg
cwtl
xchg
sub
icebp
cmp
mov
or
inc
push
add
ror
aas
adc
mov
into
movsb
mov
stc
daa
push
loop
push
add
xor
paddd
inc
cwtl
xor
xorl
sub
xor
mov
xchg
pop
lock
or
add
insl
cmp
mov
lret
mov
jmp
js
repnz
pop
inc
mov
test
xor
xchg
pusha
divl
pop
adc
push
cmpsl
js
or
push
lahf
pop
lds
andl
fidivs
movsb
fldl
nop
push
cmc
sub
andl
aam
and
add
outsb
cmp
imul
jne
int3
xor
loope
test
cmp
test
cmp
sub
insw
loopne
test
outsb
push
add
xor
in
das
mov
adc
pop
das
mov
cmp
inc
subl
xor
sti
mov
popf
jns
or
div
jno
sahf
cmp
pop
pop
push
jns
mov
jbe
out
dec
imul
inc
jbe
pop
mov
mov
push
inc
hlt
ret
cmp
movsb
loop
inc
mov
dec
mov
sahf
xor
outsb
and
cltd
push
jbe
mov
fistl
mov
cmpsl
add
call
aad
loop
test
orb
mov
push
mov
inc
fdivrs
leave
into
add
in
leave
data16
les
mov
dec
add
fcoml
mov
test
xor
and
or
in
push
push
mov
jo
ret
mov
adc
cmp
fs
jae
sub
imul
jecxz
cltd
jbe
ret
dec
sti
shll
pop
test
mov
pop
xchg
inc
loope
jae
orb
inc
gs
xchg
inc
add
pop
and
xor
insl
out
mov
adc
fisubs
pop
mov
lcall
cmpsb
and
lock
nop
sarb
dec
sbb
popf
aaa
sub
sarl
mov
rcrl
lret
jbe
shll
push
push
js
sbbl
mov
inc
fwait
xlat
mov
dec
push
add
cmp
fstpl
lods
fs
inc
jg
mov
adc
add
pop
insb
iret
imul
xor
xor
jnp
inc
fdivp
sbb
push
push
xor
cli
push
cltd
cs
ja
test
dec
out
insb
out
pop
inc
repz
je
aad
dec
aad
xchg
xor
int
mov
adc
cmp
cmc
lea
test
cwtl
jae
arpl
mov
cmp
mov
inc
popf
adc
xor
popf
faddl
cmp
sarl
inc
adc
and
testb
push
sbb
outsl
sub
cli
inc
out
jecxz
mov
stc
dec
sbb
je
dec
in
pop
shlb
sub
cmp
in
mov
test
push
push
sub
or
ds
jmp
jnp
mov
movsb
add
add
push
add
test
stos
inc
sub
stos
leave
fldenv
push
test
xor
test
and
jo
add
jl
mov
fs
dec
cmp
or
test
iret
sarl
xchg
aas
fcoml
psubw
lea
loop
pop
ror
xchg
jp
imul
cmp
mov
adc
mov
aad
mov
adc
cmp
lods
push
repz
in
mov
imul
lret
inc
mov
fistpl
outsl
out
mov
mov
stc
adc
jno
dec
insl
mov
sbb
ret
inc
pop
mov
inc
push
mov
xor
push
xchg
cmp
fisttpll
ret
mov
fstpt
mov
xchg
mov
xor
repz
shlb
lret
repz
insb
bound
nop
pop
and
addr16
into
fld
cmpsb
inc
adcl
stos
jp
test
jmp
icebp
jle
mov
out
jg
rorb
ds
xchg
enter
sbb
lods
into
test
sarl
cltd
xlat
mov
scas
cwtl
dec
test
adc
mov
pop
cmp
arpl
pop
ret
aas
sbb
in
rolb
sub
mov
rcrb
cmp
test
call
insb
lods
mov
shlb
cmp
aad
mov
testb
mov
xor
pop
dec
pop
lcall
and
xor
imul
pop
lea
xor
test
out
push
mov
inc
mov
int
loope
aaa
out
mov
pop
dec
dec
mov
sbbb
fsubrs
sub
inc
dec
push
in
xor
int
mov
repnz
mov
inc
sbb
push
lea
mov
or
fstl
jmp
xchg
adc
shr
cmc
sbb
sbb
pop
aas
sub
pop
or
add
jnp
cmpsb
mov
mov
insl
dec
jb
cs
xchg
test
adcl
pcmpeqd
push
sbb
lods
xor
adc
lret
add
outsl
fistps
push
mov
push
inc
push
pop
pop
jo
xlat
scas
stos
clc
mov
loope
cmpsb
int3
bound
stos
adc
xchg
mov
sarb
push
inc
push
ss
out
repnz
mov
dec
aas
cmpsl
and
jb
add
or
aas
xchg
outsb
lret
xchg
xchg
pop
ljmp
push
fsubrs
sbbl
fidivl
xchg
test
jne
add
dec
stc
dec
aas
call
setns
pop
cmpsl
lahf
mov
mov
xor
fsts
inc
pop
adc
das
adc
sbb
xor
pop
fwait
push
cs
push
inc
jmp
leave
les
jmp
cmpsl
sbb
mov
inc
paddb
push
sub
mov
sub
lahf
mov
jbe
pop
cmp
inc
cltd
gs
insb
ss
int3
mov
test
cmc
mov
in
jg
sub
jp
popf
or
call
test
mov
dec
sub
inc
lods
nop
adc
pop
in
movsb
in
adc
rclb
movsl
or
pop
int3
adc
test
adc
pop
push
add
dec
rcr
mov
enter
xor
outsb
fs
cmc
and
js
lret
push
stos
cmp
or
mov
mov
cmp
inc
inc
mov
inc
scas
xor
xchg
sbb
out
mov
inc
inc
and
gs
das
dec
sahf
push
jae
std
xchg
lock
jmp
push
mov
cld
jnp
shl
xor
mov
inc
jno
lcall
mov
cmc
push
and
and
or
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
push
mov
adc
mov
and
mov
adc
mov
mov
mov
sub
or
andl
sub
movl
movl
mov
mov
not
sub
mov
xor
mov
incl
xorl
xor
xor
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sub
mov
sub
orl
mov
mov
or
sub
mov
jmp
lea
test
enter
stc
mov
ljmp
insb
and
les
cmp
idivl
xchg
jl
lods
cmp
cltd
je
jl
insl
and
mov
popa
xor
xorb
pop
mov
jp
and
loop
fdivl
adc
adc
sub
movsb
cmpsb
cmp
inc
xor
add
popl
cmp
sbb
push
rcll
iret
cwtl
cwtl
adc
popf
xchg
divl
push
cld
fstps
roll
xchg
pop
loope
fwait
cmp
sub
add
mov
ja
xchg
pop
xchg
pop
ficompl
pop
dec
push
cli
mov
mov
inc
or
sbb
cli
jle
cli
push
mov
jo
sbb
in
mov
mov
in
lret
stc
or
jg
sar
push
aam
jle
jae
enter
outsb
jns
repz
repz
mov
add
lcall
je
loope
std
and
testb
cmp
rorb
test
sbb
lock
jge
or
nop
ljmp
insb
xor
cli
xchg
lahf
dec
aad
mov
repnz
mov
jo
out
pop
mov
mov
pop
lret
sbb
lcall
push
out
nop
sbb
inc
mov
lret
add
adc
rep
or
js
add
mov
jns
outsb
xchg
xor
cli
movsb
clc
sbb
clc
aaa
test
mov
iret
push
mov
outsb
fnsave
fistl
pushf
push
jecxz
lds
pushf
push
ret
aad
ja
adc
cmpsl
jg
je
mov
aas
lret
cmp
push
dec
sbb
or
fstp
xchg
adc
or
aas
imul
ss
mov
scas
call
and
or
adc
filds
test
mov
mov
jno
cmp
sahf
push
sub
stos
push
aam
or
or
adc
cmp
sbb
jp
shr
aaa
push
ja
pop
addr16
into
cmp
inc
dec
scas
lock
aaa
jl
and
jnp,pn
fwait
cwtl
aaa
mov
es
pop
aaa
cwtl
div
dec
mov
cmp
xor
mov
out
xor
xchg
cmp
jo
leave
movsb
test
mov
adc
push
mov
push
mov
push
jecxz
adc
neg
data16
inc
hlt
shll
xchg
cmp
scas
int
lock
gs
repz
push
out
outsb
popa
lret
jnp
mov
push
xchg
cmc
dec
and
cmp
insl
jae
clc
dec
addr16
movb
jae
bound
mov
jmp
mov
dec
inc
ss
inc
leave
enter
add
add
cmp
sub
idiv
jnp
fisubrl
xchg
pop
mov
es
cmp
lcall
sub
sub
idivl
add
popf
mov
daa
mov
popa
xchg
adcl
mov
xchg
lods
lahf
fiaddl
pop
push
sub
jb
pop
leave
clc
popa
jbe
je
push
push
push
stos
push
insl
lret
pop
sub
add
bound
call
xor
pop
xor
sub
pop
push
scas
aad
ret
fnsave
xlat
adcl
push
iret
cmp
xchg
mov
inc
sbb
in
mov
adc
pop
sbb
jns
xor
and
or
flds
call
fstps
inc
loopne
lea
loop
lahf
push
enter
mov
mov
in
mov
test
decb
cmp
cs
sub
mov
shrl
outsb
pop
mov
cld
mov
or
mov
sbb
sub
add
mov
loop
rcrw
and
icebp
pop
movsl
ljmp
add
and
mov
dec
lcall
push
push
shll
inc
lods
add
lea
or
dec
push
icebp
int
cli
ja
fstps
xor
in
jo
scas
push
clc
movsb
xchg
xor
popa
add
mov
sub
and
repnz
mov
cwtl
jmp
icebp
xchg
insb
pop
insb
dec
sbb
jo
lds
xchg
sub
jnp,pt
push
push
push
mov
adc
or
lock
push
sbb
pop
push
jo
mov
stos
ss
fildll
mov
mov
sbb
pop
movsb
xchg
in
idivb
out
or
fwait
das
fwait
push
xchg
and
jae
jae
cltd
mov
mov
add
movsb
lock
negl
or
aad
push
shlb
fldt
or
ja
ja
insl
jns
pop
push
push
std
and
je
shrb
clc
movsl
pop
lret
jno
repnz
add
jo
mov
ret
push
rcl
cmp
popa
stc
or
jb
push
mov
sbb
cmp
dec
pop
outsl
mov
sbb
mov
push
cmp
fwait
push
icebp
lock
mov
sbb
or
xlat
push
add
pop
cmpsl
lock
sbb
mov
in
test
dec
add
xlat
daa
imul
mov
push
mov
jp
in
and
mov
ja
jle
push
idivb
pop
sub
dec
adc
test
xchg
sbb
fcmovnu
rolb
push
stos
push
enter
lcall
push
ret
inc
pop
rolb
std
xorb
inc
mov
add
sub
addb
mov
adc
dec
push
lret
add
sub
xor
std
in
mov
and
out
jecxz
gs
arpl
or
add
leave
stos
or
or
loope
xchg
adc
jle
gs
int3
mov
outsb
int
sbb
and
push
push
dec
xor
mov
adc
mov
add
mov
lahf
pop
les
mov
push
jl
je
fnstenv
and
aad
mov
mov
sahf
int
sbbl
loope
cmp
push
push
push
and
adc
add
mov
dec
mov
xchg
inc
pop
cmp
fs
fildl
push
jns
sbb
or
xor
adcl
mov
imul
andb
sbb
push
mov
popf
mov
add
jl
repz
imul
pop
push
xor
fnstcw
out
rcrb
adc
test
pop
xchg
mov
ljmp
push
mov
mov
lcall
or
pop
fwait
pop
imul
sub
out
pop
test
push
insb
sub
popf
xor
dec
mov
mov
mov
fidivrs
jo
mov
scas
lret
into
data16
scas
movsb
pusha
lahf
mov
das
pop
roll
add
push
out
lret
pop
inc
pop
jl
out
adc
push
lcall
xchg
cli
test
add
dec
pop
outsl
outsl
jae
xchg
xlat
xchg
mov
sub
adc
adc
test
push
and
icebp
cmpsb
je
rorl
ja
or
jmp
jecxz
ret
jns
adc
ljmp
sarl
jo
das
push
xchg
mov
xor
int3
insb
mov
cli
cmc
rol
out
xchg
pop
loope
mov
adc
iret
pop
xor
mov
xchg
lahf
fstl
xor
mov
test
pop
or
addb
lahf
jmp
cltd
bound
and
lret
xor
and
xchg
out
rcrb
push
adc
pop
push
sti
aaa
push
aad
mov
into
adc
dec
in
inc
pop
and
std
and
mov
enter
loop
add
adc
ror
jnp
push
je
and
add
clc
dec
ss
inc
ret
add
les
xchg
cwtl
xchg
pop
jecxz
cmp
inc
shrb
cmp
leave
iret
xchg
ss
push
dec
shlb
shll
sbb
xlat
lock
movsb
adc
es
arpl
out
ret
pop
ljmp
movsb
and
inc
pop
popf
cmp
inc
lret
push
fiadds
arpl
ja
stos
notl
mov
mov
mov
mov
or
inc
es
gs
xchg
roll
dec
pop
xor
sub
dec
fwait
adc
cmc
xor
and
push
push
inc
push
lcall
mov
adc
dec
je
lret
pop
jns
dec
mov
cmp
mov
mov
add
or
inc
mov
in
lods
sub
out
int
jb
xchg
mov
les
addr16
sti
les
dec
dec
data16
push
rorl
pop
dec
mov
cltd
mov
and
popa
pop
fwait
clc
dec
jecxz
jl
cmpl
sbb
lock
in
aam
mov
and
and
lods
movsl
test
cmp
clc
mov
in
pop
sbb
aam
xor
and
nop
mov
pop
add
gs
adc
mov
inc
dec
adc
in
pop
cmp
mov
mov
imul
testb
mov
ds
xor
push
dec
lcall
ljmp
mov
mov
mov
std
mov
dec
mov
popa
lds
sbb
sar
or
movsl
nop
jbe
mov
das
push
lcall
popl
aas
mov
adc
sbb
imul
daa
mov
cmc
roll
pop
sbb
inc
xchg
iret
fdivrp
jge
in
mov
xor
inc
push
and
jnp
dec
push
fsubrl
ds
es
cmpsl
shll
andb
xor
js
pop
xor
sbb
scas
in
mov
in
loop
push
mov
jmp
les
loop
xchg
fisubrl
pop
inc
push
sahf
imul
hlt
int
dec
scas
dec
inc
dec
mov
and
pop
dec
add
fdivr
pop
xchg
sub
push
dec
or
pop
addl
out
iret
cli
cmpsb
pop
in
adc
ss
stos
push
xor
jl
mov
loopw
xor
jecxz
sbb
push
fildl
sub
dec
lret
xor
inc
stc
imul
icebp
es
hlt
push
pop
pushf
xchg
data16
xor
fs
fisubl
fcoms
and
inc
mov
negb
nop
lret
imul
dec
test
pop
cwtl
inc
ret
je
out
or
mov
xchg
js
clts
mov
data16
and
fwait
pop
or
mov
int
sub
jo
daa
xchg
cld
std
shll
mov
xchg
push
lcall
rolb
ja
or
xchg
xchg
mov
pop
adc
adc
mov
cmp
rorl
or
cmp
hlt
scas
scas
popf
push
clc
ja
or
repnz
jg
mov
adc
js
add
adc
lea
cwtl
jg
xchg
rorb
inc
repz
mov
cmp
scas
jns
xor
in
and
aad
mov
jge
xchg
dec
lahf
dec
stc
add
repnz
or
leave
push
lret
adc
jle
sar
andl
push
cmpsb
pop
push
push
fbld
clc
ds
je
pushf
jns
popl
cmc
pop
ja
sub
call
jp
in
lock
arpl
lock
xchg
scas
mov
mov
cmp
dec
dec
enter
adcl
push
mov
es
mov
ja
inc
jmp
shlb
push
xor
das
inc
add
dec
out
xlat
fs
mov
scas
cld
sbb
push
in
lds
scas
fisubs
sub
lods
lock
xchg
push
push
dec
inc
cmpsl
or
lods
lods
add
dec
les
or
jno
push
jge
and
les
mov
ljmp
je
out
shll
lock
outsl
xchg
sbb
mov
insb
jb
repz
or
sahf
mov
pop
ret
xchg
ret
subb
out
push
js
scas
cmpsb
push
shlb
and
ret
dec
and
aaa
nop
clc
pop
sbb
sbb
mov
mov
pop
fwait
dec
jmp
dec
sbb
cmp
or
lock
cltd
lret
movsl
adc
mov
jge
mov
in
aas
dec
cli
push
sbb
mov
shl
mov
xchg
insb
stos
mov
mov
add
xchg
xchg
aam
lea
inc
and
arpl
add
or
or
pushf
fdivs
das
pop
lods
aam
mov
xor
std
loopne
mov
mov
pop
pop
mov
jae
out
scas
orl
xor
push
nop
lahf
or
std
movsb
lds
inc
imul
out
push
imul
mov
push
push
cmp
sub
jmp
push
cmc
test
je
imul
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
push
call
cmpl
jb
mov
movzwl
adc
sub
xor
xor
sub
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
and
mov
mov
sub
mov
sub
mov
mov
sbb
mov
or
mov
xor
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
xor
add
add
push
mov
mov
movzbl
add
lea
or
mov
mov
and
mov
sbb
mov
adcl
xor
subl
add
mov
adc
mov
mov
mov
sbbl
add
movzbl
add
mov
push
movl
mov
and
mov
adc
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
call
cmpl
jb
xor
mov
add
mov
adcl
add
cmp
movl
je
mov
movl
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xorl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
addl
mov
andl
xor
adcl
add
imul
mov
xor
andl
add
cmp
notl
mov
movl
push
movl
je
adc
mov
add
sub
mov
andl
mov
xor
adcl
add
imul
mov
movl
jmp
adcl
mov
xor
mov
add
mov
mov
xor
xor
mov
mov
andl
sub
add
movzwl
adc
mov
or
mov
adcl
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
xor
sbbl
xor
lea
xor
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
push
andl
call
mov
sbb
mov
sbbl
push
call
adcl
test
je
push
adcl
push
addl
push
andl
call
movl
jmp
push
xor
or
sub
mov
mov
addl
lea
push
xorl
push
decl
call
test
movl
je
push
movl
jmp
sbbl
push
call
test
movl
je
adcl
push
push
push
addl
call
jmp
xorl
lea
sbbl
push
negl
push
call
sbbl
test
movl
je
orl
push
subl
call
jmp
movl
mov
sbb
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
movl
lea
adc
mov
lea
sbb
mov
inc
mov
mov
add
mov
mov
mov
movl
xor
sbbl
push
sub
mov
adcl
add
movl
mov
mov
mov
cmp
jne
mov
incl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
xor
or
add
xor
mov
mov
adc
mov
mov
sbb
xor
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
movzwl
and
mov
mov
adcl
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
or
mov
mov
xor
mov
dec
mov
or
mov
movl
adc
mov
sbbl
xor
add
jmp
mov
addl
xor
subl
lea
andl
push
movl
mov
addl
xor
andl
lea
xorl
push
adcl
mov
addl
pushl
call
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
xor
add
dec
mov
jmp
lea
neg
mov
adcl
mov
xorl
xor
andl
xor
add
mov
andl
xor
movl
lea
movl
cmp
movl
jbe
mov
mov
sub
mov
sub
mov
mov
or
mov
addl
sub
addl
xor
movl
mov
not
mov
movl
cmp
jne
xorl
lea
mov
sbbl
lea
mov
orl
mov
test
je
addl
push
call
addl
test
movl
je
push
push
movl
push
jmp
orl
lea
addl
push
xorl
push
orl
call
orl
test
je
movl
push
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
mov
not
mov
sbbl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
mov
dec
mov
jmp
mov
xor
or
mov
sbb
mov
mov
mov
notl
mov
add
cltd
mov
dec
add
mov
adc
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
push
xor
add
push
push
pushl
pushl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
push
mov
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
test
je
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
movl
movl
movl
movl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
push
add
push
lea
push
call
push
call
test
je
push
push
push
call
jmp
lea
push
push
call
test
je
push
call
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
and
mov
mov
mov
sub
xor
movl
xor
xor
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
call
jmp
push
dec
mov
xor
xor
orl
mov
push
decl
mov
adcl
add
cmp
movl
je
mov
adcl
mov
addl
xor
orl
xor
orl
add
xorl
add
movl
adc
sbbl
xor
xorl
mov
mov
xor
push
subl
xor
sub
xor
add
mov
sbbl
add
movl
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
jmp
mov
movsbl
mov
or
sub
mov
decl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sbb
push
add
mov
or
mov
movl
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
or
adc
mov
mov
mov
not
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xorl
xor
movl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
mov
add
add
add
add
add
add
aas
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
add
add
inc
push
hlt
loop
jno
das
inc
dec
lcall
leave
add
add
inc
cmp
insb
gs
and
popa
and
pop
inc
data16
jb
popa
jb
jns
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
aas
or
add
inc
mov
pop
mov
or
pop
adc
pop
or
pop
or
addl
lret
repz
dec
lret
ret
xchg
stc
sbb
cmp
cwtl
movsl
orb
repz
dec
xchg
xchg
sub
ret
lcall
push
cltd
mov
lret
ret
imul
sbb
push
lea
sbb
pop
lret
add
push
pop
aad
lret
ret
fnstenv
dec
aad
addl
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
