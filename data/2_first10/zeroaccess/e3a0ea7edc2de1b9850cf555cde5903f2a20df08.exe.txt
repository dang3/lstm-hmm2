push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
add
bound
fstpl
bound
sub
pop
add
pop
jne
imul
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
mov
repnz
inc
adc
std
push
cmp
int
outsb
or
inc
stc
jmp
fisttps
shlb
sub
js
fmull
sbb
out
cmp
push
outsb
sbb
outsl
adc
test
test
or
push
mov
leave
pop
jle
jmp
add
cmp
imul
movsl
test
movsl
jns
sbb
loope
mov
pop
cmp
or
and
out
mov
std
daa
inc
cmp
jmp
sahf
dec
mov
adc
outsl
sarl
adc
sar
fwait
sbb
push
sbb
push
pop
or
fs
jno
inc
sbb
js
mov
cmp
dec
repnz
imul
clc
jbe
out
sub
push
hlt
in
lret
fimuls
mov
or
mov
xchg
dec
movsl
andl
std
pop
imull
int
pop
fwait
lods
pop
mov
jne
int
std
cmpl
sbb
imul
fiaddl
ss
outsl
inc
cmpsl
mov
aad
xchg
negb
jge
or
scas
imul
mov
arpl
add
arpl
pop
add
push
shll
aaa
test
and
inc
out
xchg
loopne
lret
and
sti
sbb
mov
test
or
or
dec
pop
mov
les
in
sbb
cmp
add
sbb
idivl
mov
xchg
cmpsl
mov
fs
or
jge
dec
push
test
jp
jae
xchg
stos
enter
xchg
dec
sbb
mov
mov
dec
adc
xchg
push
inc
cli
adcb
dec
mov
cli
inc
imul
nop
lock
int3
adc
mov
inc
std
leave
xchg
adcl
ss
sbb
cmp
add
or
jne
add
dec
sub
arpl
movsb
inc
mov
adc
aaa
inc
push
test
ficomps
enter
sbb
add
inc
jne
in
shrl
jle
jbe
add
jnp
pop
and
popf
inc
adc
gs
les
js
sub
iret
sbb
jle
dec
jl
into
call
inc
popa
xchg
cmpsl
jecxz
and
push
fdivrs
mov
xor
cmp
es
faddl
cmp
pop
mov
cmc
xchg
mov
and
out
mov
std
adc
icebp
sti
inc
cld
push
fwait
mov
mov
sub
lcall
pop
cs
and
xor
jb
mov
push
mov
push
mov
in
mov
push
out
in
aad
cmpsb
gs
sbb
sahf
jle
adc
iret
pop
into
push
shll
mov
adc
cmp
ret
js
nop
test
test
sub
pushf
push
push
fwait
int3
into
scas
sbb
lods
fsubs
testb
cmp
mov
dec
imulb
scas
gs
jg
xor
loop
push
xchg
xor
mov
sbb
fs
jo
addl
ret
jl
testl
mov
popf
pop
xorb
lds
sti
pop
mov
std
xchg
loopne
push
cmpsb
mov
mov
and
xor
popf
add
jmp
cli
jne
push
lock
mov
mov
dec
dec
push
jbe
in
jge
fisttpl
cmp
jnp
xor
mov
mov
push
add
sub
pop
mov
lea
add
clc
aaa
scas
mov
or
fiaddl
xor
jae
ja
hlt
dec
icebp
jmp
jbe
icebp
fsubs
xor
mov
cmpsb
dec
cmpsl
adc
pop
push
cld
ds
mov
nop
dec
mov
nop
jge
rcrl
int3
mov
gs
push
mov
into
mov
arpl
lcall
mov
int
sbb
stos
push
cmpsb
std
data16
sub
inc
jne
mov
lcall
rcrl
inc
pop
xchg
mov
mov
fs
sub
lds
scas
aad
add
ret
orl
adc
stos
popf
jp
lcall
rcr
jmp
mov
jno
movsl
sti
xchg
addb
mov
lods
sub
outsb
adc
movsl
int3
xchg
ss
sarl
arpl
jmp
lods
adc
and
mov
popa
xor
cmp
adc
add
jae
repz
decl
addr16
jnp
fisubrl
add
dec
jnp,pn
out
xor
and
push
mov
movsb
jl
cmp
pop
cmp
test
pop
sub
push
sbb
stos
lret
sub
es
push
lcall
xor
adc
shll
loop
movsl
and
jno
adc
and
or
divb
les
sub
in
cltd
arpl
adc
jae
mov
sahf
and
mov
das
push
stos
inc
lods
mov
ds
jl
hlt
add
xchg
lcall
mov
cmp
jg
xchg
mov
scas
imul
xor
aad
dec
jmp
ficoml
push
into
sbb
dec
insb
push
push
or
inc
je
out
testl
add
fcom
das
das
fsubr
arpl
hlt
mov
fdivrl
aam
es
mov
xorl
lea
ret
inc
adc
insb
adc
cmc
adc
and
test
ds
cmp
add
sub
in
movsl
inc
or
pop
or
jle
movsl
insl
inc
mov
sub
sbb
dec
mov
pop
sbb
scas
cltd
incb
arpl
adc
popa
push
xchg
mov
dec
lea
iret
jns
or
subb
mov
je
insb
dec
inc
shlb
xchg
inc
xor
ja
int3
xchg
sub
xchg
and
jmp
or
inc
or
negl
mov
repz
arpl
and
adc
imul
js
mov
xchg
add
scas
add
sub
or
xor
insb
repz
push
xor
add
es
stos
daa
push
add
lods
arpl
sbb
es
adc
repnz
into
jge
arpl
add
sbb
cli
and
into
jg
mov
sbb
jp
ret
sbb
pop
xchg
je
jg
std
mov
jns
loop
jl
imul
cmpsb
rcrb
sbb
cltd
in
mov
inc
add
movsb
xor
inc
shlb
inc
scas
std
cld
and
mov
pop
mov
xchg
aaa
push
push
rcrb
je
test
jb
shl
mov
fistl
loope
push
xor
or
in
cmp
cmc
xchg
mov
out
xchg
cmpsl
les
lods
pop
push
dec
or
cmpsl
sbbl
lret
test
ljmp
popa
shr
int
dec
inc
jp
stos
fisubrs
repnz
idivl
out
insb
movsb
bnd
loopne
xchg
mov
movsb
out
push
out
rcr
aad
movsl
inc
cmpsl
lods
ss
sti
outsb
pop
push
mov
jp
sbb
inc
fwait
gs
and
mov
popa
xorb
push
cmpsl
xchg
jmp
stos
ret
lahf
inc
nop
aaa
mov
cmpl
xor
imul
outsl
sub
fisttpll
fimuls
xchg
jno
jae
ljmp
outsl
push
mov
pop
fdivr
lea
adc
lea
fistl
lods
leave
stc
mov
std
out
adc
fcom
fldl
lret
imul
xchg
xor
pop
cltd
stc
hlt
lds
stos
mov
insb
je
cmp
clc
mov
movsbl
xchg
cli
fiaddl
push
and
cs
gs
mov
push
lods
push
mov
rclb
pop
push
pop
dec
inc
mov
loopne
leave
iret
jnp
test
xor
jge
sahf
jg
cmpsb
imul
jmp
sahf
fucomi
mov
cmpsb
pop
add
xor
inc
jno
mov
mov
dec
pop
xor
jo
inc
or
loope
fnstcw
cmp
ret
lcall
sub
pop
mov
lahf
shlb
pop
aam
ljmp
inc
imulb
lds
add
or
into
jp
hlt
stos
aas
mov
cmp
xchg
jne
mov
mov
pop
cmp
jb
subl
ficompl
ljmp
or
mov
pop
dec
fwait
in
stos
add
sahf
add
push
inc
loopne
fsts
mov
and
in
sbb
loop
inc
jp
push
push
or
jecxz
and
pusha
andb
and
fidivs
mov
or
xor
aam
mov
cmc
mov
mov
mov
cmp
pop
cmpsl
or
mov
ljmp
cltd
call
push
fld
cli
mov
icebp
push
mov
jns
stos
inc
mov
jp
cmc
jecxz
mov
sub
ret
in
insl
push
push
movsb
and
in
push
divb
or
mov
and
pushl
mov
into
cmp
cmpsb
popl
ret
mov
mov
sbb
out
cmp
scas
popa
clc
inc
mov
mov
addr16
xor
jns
repnz
loop
les
clc
in
loopew
sub
push
xchg
scas
mov
pop
mov
pop
mov
inc
pusha
jo
cmp
sub
mov
push
or
jmp
pop
cmp
xor
add
out
jnp
dec
jl
inc
sbb
in
int
pop
dec
pushf
push
loopne
test
adc
sbb
insb
mov
repz
loopne
inc
fwait
push
repnz
jae
lret
adc
mov
and
pop
imul
shr
scas
mov
dec
sub
and
mov
pop
jecxz
dec
js
and
repnz
and
sbb
outsl
xlat
into
xor
mov
rol
lcall
mov
mov
scas
iret
imul
mov
push
jle
testl
jne
jno
fsts
push
subl
ds
fdivp
and
xor
ljmp
loop
bound
xor
xchg
stc
jge
inc
push
or
insb
add
and
inc
adc
xchg
test
int
dec
pop
inc
testb
xorl
sbb
jno
lds
sbb
adc
cmp
adc
inc
add
jecxz
loope
inc
xor
rorl
outsl
and
push
mov
ja
dec
stc
cmp
pop
shlb
cld
sbb
sub
mov
xchg
dec
stc
sti
pop
or
in
xchg
movsl
pop
push
mull
add
movsb
scas
xor
sbb
das
lods
mov
and
adc
or
or
je
leave
cmp
stc
popa
mov
or
mov
idivb
repnz
xor
sub
sub
sub
xchg
sti
js
push
rcrl
fmulp
push
jne
xchg
mov
xor
icebp
fs
xlat
add
adc
dec
sbb
mov
pop
lret
pop
mov
sub
stc
push
lret
fwait
repz
mov
pop
sbb
mov
and
jne
movsb
stos
mov
divl
sbb
loope
aam
xchg
sar
int
fdivl
xchg
mov
in
insl
dec
cmpsl
ss
mov
iret
adc
imul
xor
inc
ficompl
lret
add
ss
xchg
push
xchg
xchg
insb
sahf
aaa
adc
aaa
adc
outsl
aas
xorb
add
adc
inc
scas
push
mov
adcb
mov
sub
and
into
sbb
sbbl
jae
jge
xor
lret
sub
cld
int
fldl
adc
imul
fwait
subb
push
fidivrl
push
ret
and
decl
inc
lods
dec
cli
cwtl
loop
xor
xor
push
mov
adc
mov
ds
repnz
out
mov
push
icebp
adc
pop
mov
dec
push
and
sbb
outsb
test
inc
mov
mov
or
aad
pop
repnz
pop
out
mov
fwait
movsb
out
rcl
mov
adc
in
rcl
mov
sub
es
mov
cs
sbb
lret
push
movsl
stos
inc
jb
call
sub
into
enter
and
pop
jp
out
inc
loop
gs
call
data16
cld
sub
xor
push
xchg
adc
outsl
pusha
out
sub
call
mov
mov
sti
je
cmp
adc
ret
jmp
ss
sub
mov
inc
or
pop
test
xlat
addr16
in
loope
or
inc
out
loop
and
inc
orl
lcall
aad
mov
dec
inc
jmp
dec
xchg
cmp
add
repz
fs
cs
sbb
in
jns
cmp
dec
and
test
jns
cmp
jg
add
xchg
ficoms
add
jmp
clc
outsb
mov
push
push
lcall
sbb
push
adc
push
ljmp
popf
sub
mov
dec
cmpsl
and
addl
pop
push
scas
int3
lcall
stc
adc
adc
pop
movsb
test
lahf
mov
jecxz
pop
fisubs
mov
xchg
sub
xchg
icebp
add
pusha
or
clc
out
jecxz
pop
and
pop
scas
mov
test
mov
inc
fs
mov
adc
adcb
enter
mov
push
stos
push
jp
in
test
jecxz
adc
fildl
push
and
mov
hlt
vphsubdq
cwtl
push
je
negl
adc
add
sub
xor
cwtl
int3
es
sub
je
cwtl
xlat
and
dec
cltd
notl
sub
mov
add
fsubrp
test
jmp
xchg
or
insl
hlt
jbe
xchg
divl
sbb
out
loopne
cmp
outsl
push
xchg
jle
into
rolb
sbb
cs
out
cltd
inc
into
out
sbbb
mov
mov
mov
push
insl
in
stos
jecxz
jb
into
pusha
sarl
or
test
add
lret
dec
mov
pop
repz
jle
push
bound
gs
lret
std
sub
pop
dec
into
jns
sub
and
pop
and
xchg
nop
pop
hlt
xchg
push
push
push
sub
mov
adc
jmp
lahf
sbb
mov
negl
in
mov
push
jo
rorl
repnz
imul
cmp
mov
add
cli
iret
pop
sbb
jno
popf
cmp
sbb
dec
jmp
rcl
inc
and
xlat
mov
sub
mov
cmp
xchg
movsl
insb
rol
or
addl
xor
adcl
xchg
out
dec
adc
lcall
push
insb
pop
mov
dec
xor
imul
or
pop
rorl
or
test
push
int
xor
aas
and
adc
mov
cmp
loope
add
lret
inc
test
pop
mov
fwait
add
push
call
adc
in
mov
clc
inc
adc
xor
xor
add
cmp
mov
into
adc
mov
repz
mov
es
mov
mov
out
dec
mov
ljmp
push
and
jo
int
dec
cwtl
icebp
flds
cmc
and
sub
es
xchg
aad
pause
cmp
add
jmp
mov
into
inc
mov
jl
ret
ja
pusha
lret
and
leave
jbe
push
adc
in
xor
xchg
inc
add
leave
or
int3
mov
push
cmp
js
or
or
push
cmp
test
nop
cli
sbb
rcrl
es
flds
cmc
adc
popf
repnz
in
rcrl
fldcw
push
mov
scas
pop
inc
pop
imul
les
mov
cpuid
hlt
pop
cmp
pop
xor
into
sbb
dec
jl,pt
inc
sahf
and
lock
ja
and
cmp
xchg
leave
pop
add
push
mov
xchg
sahf
shl
xchg
and
mov
inc
loope
out
sub
adc
in
xchg
inc
jmp
sahf
dec
out
dec
scas
loop
scas
jg
mov
cmp
insl
mov
inc
test
lahf
xor
and
mov
mov
sbb
or
mov
loope
cmp
push
jb
and
add
jmp
out
es
ret
mov
xchg
adc
jg
sbb
cmpsl
jmp
mov
xchg
xorl
xlat
mov
imul
cmp
xlat
in
pop
xchg
xor
into
fmuls
lahf
push
inc
movsb
cmp
mov
test
loop
arpl
jbe
jo
jne
outsl
sbb
xor
clc
les
test
mov
sbb
cmp
in
std
sub
out
dec
fisttps
andl
scas
iret
loop
pop
mov
xchg
mov
push
or
cs
popf
mov
ret
filds
xor
push
mov
sub
push
sbb
aad
stos
cmp
leave
fmull
inc
frstor
popa
pop
dec
pop
das
mov
mov
popa
rcll
cltd
inc
stos
les
js
add
mov
ja
push
imul
xor
mov
mov
jno
cmp
xor
cmc
dec
fidivrs
mov
and
pop
cld
out
jne
jo
jnp
cwtl
jp
cmpsl
inc
sbb
outsb
fisttpl
adc
dec
xchg
add
stc
add
adc
not
in
stos
f2xm1
cwtl
sub
push
mov
sub
pop
sahf
adcb
mov
mov
dec
jnp
enter
test
test
jg
mov
test
btr
sbb
pop
mov
or
ficomps
stc
ret
xchg
and
imul
enter
mov
push
inc
cmp
ficoml
add
sti
mov
sbb
adc
mov
add
push
jns
dec
cmp
test
xor
stos
nop
cmp
icebp
mov
imul
mov
sub
adc
pop
sub
mov
sub
mov
jbe
mov
push
jp
les
mov
ret
lahf
subl
pop
call
or
dec
xchg
cld
adc
and
mov
cmp
mov
mov
or
mov
notl
scas
fldenv
dec
loop
pop
lret
aas
pop
sbb
std
scas
sub
sbb
add
pop
iret
test
xor
mov
rep
push
cli
gs
dec
mov
divl
jb
clc
fldcw
bound
fwait
dec
xchg
jg
mov
inc
add
pop
filds
cmpsb
sub
loopne
push
lahf
shufps
push
cltd
cmp
out
cmc
nop
dec
sbb
mov
xchg
aam
add
mov
xor
push
es
sahf
cmp
adc
dec
imul
mov
mov
inc
inc
jl
add
scas
daa
dec
add
mov
mov
imul
mov
sbb
ds
cmpsb
jb
inc
jo
mov
sbb
jge
shll
ret
lods
dec
push
mov
pop
mov
mov
imul
orb
hlt
add
lret
movsb
orb
ret
stos
inc
xor
and
push
pushf
in
je
std
rcr
test
loope
dec
jmp
push
cld
sbb
ljmp
or
sbb
adc
jne
mov
jge
xor
rclb
mov
mov
enter
cmp
sbb
lahf
mov
insb
xor
stos
jb
or
xor
adc
pop
dec
js
cmp
and
or
push
fwait
adc
clc
cli
popa
and
lods
push
cs
insb
xor
xchg
adc
fdivl
jge
shll
je
je
pushf
pop
or
fistl
mov
das
stos
lods
xor
lods
xchg
mov
out
stos
cvtpi2ps
inc
mov
mov
cmpl
js
push
hlt
or
xor
pusha
int
into
dec
mov
pop
cmp
outsl
loope
insl
adc
mov
xchg
aad
aam
scas
xchg
mov
rcrb
out
fs
scas
sbb
fs
mov
mov
pop
leave
pop
aaa
out
pop
jne
imul
adc
aaa
int
pop
xchg
push
test
pop
add
leave
inc
les
icebp
pop
xchg
cld
cmp
sahf
test
repnz
mov
mov
push
ljmp
jmp
repz
mull
in
mov
sbb
scas
lcall
dec
jge
pop
testl
popf
pushf
cmp
push
jp
mov
pop
loop
mov
cwtl
cmp
in
mov
and
and
sub
mov
imul
mov
push
pop
mov
add
dec
mov
inc
movsb
push
and
cmpsl
jmp
lret
mov
dec
push
inc
icebp
mov
pop
fistl
push
ret
and
mov
xchg
ret
jp
add
lahf
int
push
mov
rorl
dec
lret
lds
arpl
lds
loope
jnp
popa
sub
jb
repnz
in
jb
adcb
push
mov
rorl
jbe
mov
stc
loop
and
or
xor
jmp
cmp
ljmp
loope
inc
mov
iret
jmp
adc
push
inc
dec
push
or
aas
out
inc
in
fsub
xchg
mov
adc
inc
jne
js
xor
dec
mov
inc
mov
xchg
inc
aaa
push
add
adc
ss
lret
inc
mov
lds
out
negb
mov
xchg
dec
mov
loopne
out
loope
subl
cli
sub
les
fwait
shlb
mov
xchg
xor
loopne
sub
inc
fimull
jno
cmpsb
and
or
mov
sub
in
addr16
mov
in
sub
stos
inc
pop
int3
and
dec
mov
fiadds
lea
pop
imul
icebp
int3
aad
gs
bound
enter
movsb
call
out
mov
cmp
outsb
lods
lret
inc
sub
xchg
test
pop
movsb
aam
inc
or
int
push
mov
imul
jo
int
pushf
cltd
ret
mov
xor
xchg
push
pop
push
mov
test
inc
movsb
test
and
and
push
lods
adc
adc
lds
pop
repz
sbb
popf
fs
pop
cmpsb
inc
repnz
jge
mov
ljmp
out
lea
insb
or
adc
push
imul
cltd
push
pop
add
fnstcw
fisttps
jge
int3
sub
mov
jge
inc
ds
das
out
insb
add
sbb
test
or
fcompl
movsb
mov
xchg
cld
mov
lcall
out
inc
repnz
mov
sti
aam
sbb
subl
das
sbb
adc
stc
fsubrl
mov
popa
int
cs
dec
pop
lret
xor
daa
sbb
int3
dec
push
sbb
outsb
xchg
mov
mov
ds
in
inc
je
cli
shl
rorl
adc
push
inc
mov
pusha
mov
mov
ror
adcl
icebp
rorb
dec
leave
pop
pop
aaa
xchg
cmp
pop
mov
fxch
pop
ret
pop
aaa
and
lahf
jecxz
lods
das
fmul
mov
int
mov
ror
jp
cmp
or
cmpsb
fmuls
int
aas
aam
push
cmc
test
dec
pause
shrl
cmp
notb
cmpsb
aaa
subl
stos
dec
xchg
mov
jne
loope
push
sbb
dec
inc
scas
or
push
sub
push
dec
imul
pushf
cld
xorb
negb
mov
and
push
sub
xor
push
mov
mov
outsb
shlb
mov
pop
and
add
pop
shll
sub
outsb
sbb
ss
fildll
mov
add
pop
cmp
push
or
repnz
incl
shr
inc
addr16
pushf
aaa
cli
lret
inc
xor
cmp
dec
ret
adc
jne
cmpsl
pop
inc
mov
dec
add
popw
xchg
push
pop
aad
push
push
inc
insb
adc
add
mov
test
lods
xchg
cli
pop
mov
lea
cmp
cmc
mov
cld
cmc
mov
lret
mov
pop
insb
ja
mov
outsb
adc
mov
cmpsl
jno
sarb
sbb
out
mov
inc
adc
cwtl
ss
shrl
js
lods
mov
push
aaa
pop
imul
adcb
aaa
mov
arpl
scas
cld
dec
ret
xor
loope
out
pop
outsb
ds
repnz
cmp
or
pop
mov
inc
mov
inc
adc
lret
addr16
in
std
cmp
fsub
lea
jno
pop
sbb
jp
fs
rcll
and
mov
int
test
jno
cmp
popf
jmp
ret
lcall
ret
clc
push
pop
sub
cmp
popa
jle
xchg
daa
xchg
mov
push
push
add
imul
movl
scas
pop
xor
stc
adc
loope
fisubrl
addr16
xor
loope
int3
adcb
xchg
addr16
insl
pop
roll
idivb
push
jp
mov
jns
and
xchg
and
jge
mov
cmp
xchg
adc
sbb
mov
cld
leave
xchg
pop
inc
xchg
lret
sub
andl
out
jmp
xchg
pop
cmp
and
int
lods
jae
jno
mov
fs
xor
subl
push
sub
jnp
pop
add
das
stos
mov
mov
loopne
push
inc
xor
lock
jge
dec
push
fdivrs
cmpl
and
sbb
add
push
or
push
cli
push
mov
sbb
push
in
loope
in
je
dec
and
nop
adc
jo
adcb
movsl
jmp
shlb
cmp
lret
arpl
popf
out
popa
xchg
fs
jg
fsubrl
das
out
rcll
jp
and
dec
popf
inc
pusha
fistpl
xor
inc
sbb
mov
shll
leave
lret
xchg
lds
pop
shrb
popa
mov
inc
or
dec
cld
testl
add
hlt
sub
fsub
add
pop
pop
cli
push
xchg
movsl
xchg
popf
jmp
imul
cmpsl
mov
rorb
adc
mov
das
mov
and
push
and
test
adc
push
xchg
inc
jmp
dec
out
filds
cmc
mov
mov
das
push
int3
mov
sub
sub
sub
pop
enter
lock
dec
sub
into
in
sbb
mov
push
inc
cmp
mov
outsb
xchg
dec
in
mov
jl
mov
pop
push
lods
in
lea
test
jo
imul
add
jge
lods
xchg
push
int
incl
out
or
lcall
hlt
adc
fsubrl
ja
lahf
dec
mov
sahf
xchg
dec
in
mov
cld
std
loope
mov
adc
lods
mov
cmp
xor
cmp
scas
sbb
int
mov
data16
mov
push
outsb
xchg
xchg
das
call
scas
mov
out
push
test
push
sbb
fdivl
out
jo
loop
ret
std
xor
loopne
add
insl
xor
outsb
inc
pop
leave
mov
jmp
bound
dec
pop
inc
popf
jp
andb
stos
fstpt
xor
sub
jge
add
lock
push
shrl
or
lcall
repz
lret
pop
mov
popa
clc
in
repz
sahf
ljmp
fdivrl
pop
hlt
aad
pop
dec
daa
xor
out
sub
mov
jle
inc
mov
sarb
adc
sub
scas
cmp
add
push
push
inc
mov
push
add
add
or
jp
inc
cmc
jne
cs
inc
mov
and
ficoml
subb
jmp
sahf
enter
ds
jno
or
xchg
stc
xchg
xor
mov
push
hlt
sarb
push
in
aas
inc
mov
sub
cmpb
ss
int3
lret
cmp
lahf
nop
jmp
fcompl
xor
mov
fdivrl
xor
idivl
xlat
dec
sub
and
jge
jge
std
jmp
mov
jns
test
int
cmp
sbb
mov
fisubrs
mov
cmp
lret
mov
mov
dec
rorb
inc
aad
mov
frstor
add
jecxz
adcb
xchg
lock
mov
int3
lods
mov
aaa
jns
jnp
xor
mov
int
xor
lods
mov
cmpsb
pop
dec
hlt
sub
mov
pusha
mov
lds
pop
sub
mov
cmp
xor
repz
mov
inc
nop
mov
fdivrl
in
arpl
xchg
sbb
jle
mov
pop
ret
les
mov
in
fmulp
les
xchg
idiv
push
je
filds
out
je
mov
pop
adc
pop
dec
adc
ss
sub
test
pop
cli
fldt
mov
adc
jns
cmpsl
xor
dec
and
leave
sub
cli
test
xchg
loopne
push
sub
test
out
push
leave
jp
mov
loope
push
int3
add
lock
subb
jae
xchg
adc
inc
ljmp
jecxz
stc
mov
aas
push
push
mov
dec
sbb
imull
cs
sbb
rcl
clc
xchg
test
add
xor
loopne
call
xlat
roll
jmp
test
sub
insb
cs
cltd
pop
mov
xchg
add
loope
jle
lahf
out
mov
add
pop
adc
bnd
cs
mov
push
loop
xchg
daa
jnp
in
xchg
lret
xchg
sub
loope
fsts
inc
lods
ljmp
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
cmp
cli
fstpl
fstpl
fmulp
nop
int
xor
adc
repz
adc
mov
ret
adc
add
movsl
mov
mov
xor
xor
jae
in
adc
dec
xchg
insl
add
adc
movsb
jl
add
jae
jge
out
lret
add
add
xchg
fnsave
pusha
nop
push
in
inc
or
mov
sahf
push
add
mov
sub
ret
push
addr16
test
add
lcall
data16
cmp
lds
pop
or
xlat
jle
xor
mov
mov
je
negl
and
xor
push
push
dec
test
jae
movsb
push
lret
cmpl
jae
or
add
fildl
fsts
sbb
mov
xchg
js
insb
mov
sbb
in
ja
test
lds
cli
mov
js
add
sidtl
or
mov
stos
pop
fstpl
test
mov
adc
lcall
mov
inc
push
fs
mov
lods
xor
xlat
mov
cwtl
pop
out
mov
dec
mov
call
into
push
jp
and
in
fucom
xor
mov
dec
shrl
fs
out
mov
cmpsb
sub
push
or
mov
xchg
lea
or
aad
inc
push
add
mov
movsb
sbb
mov
pusha
mov
jno
mov
out
subb
mov
add
mov
insb
xlat
mov
xor
ficompl
in
loopne
cmpsb
ja
inc
adc
sub
mov
inc
stos
xchg
pop
and
lds
repz
xchg
into
popf
xchg
mov
adc
lds
push
leave
push
mov
cwtl
cmp
out
sarl
dec
jns
outsl
cmpsl
rolb
xor
ret
cld
sub
rclb
repnz
jbe
xor
jle
pop
xchg
repnz
mov
insl
mov
add
lea
ja
lcall
push
adc
xor
sbb
jns
enter
mov
push
inc
add
scas
inc
pop
imul
sub
test
mov
and
pusha
sar
aas
ror
xchg
jecxz
je
mov
std
rcrl
imul
pop
mov
mov
and
add
fimull
push
mov
pop
test
mov
loope
mov
cmp
out
adc
dec
mov
leave
pop
loope
call
mov
hlt
mov
add
and
xchg
sub
xor
out
mov
lods
pop
das
push
pop
xchg
push
push
repnz
xchg
test
std
or
dec
jle
xchg
out
aam
outsl
mov
jg
xor
add
nop
out
mov
xchg
out
leave
test
lea
xor
add
or
cmp
jmp
ja
mov
jmp
mov
enter
adc
je
mov
in
pop
jmp
sbb
popa
enter
adc
xchg
xchg
cmp
inc
pop
ret
dec
pushaw
mov
xor
push
daa
pop
xor
push
shl
xchg
cli
imul
xchg
mov
pushf
hlt
mov
cmp
xchg
add
pop
lods
aaa
and
inc
je
enter
push
lock
mov
addr16
mov
push
pushf
mov
ds
fildll
lahf
or
dec
jo
aaa
mov
pop
or
pop
js
sub
outsl
mov
idivl
mov
add
pop
sub
fldl
jg
add
es
dec
lds
cs
pop
shll
xor
in
cs
or
pop
scas
xlat
lahf
jne
pop
fwait
pop
fdivr
adc
out
add
loope
hlt
mov
nop
jge
je
cmp
dec
inc
std
push
mov
dec
rcrl
xor
fildl
lea
sahf
add
adc
cwtl
sub
lret
lea
adc
push
mov
jle
leave
in
jb
and
test
pop
mov
mov
xchg
shll
jns
nop
int
aad
shlb
je
sub
mov
leave
cltd
xchg
adc
arpl
out
enter
jno
dec
jnp
xor
mov
push
push
add
aad
hlt
popf
sub
out
repz
ror
insb
dec
add
lahf
mov
cs
in
movsb
sbb
sbb
cmp
fidivrs
idivl
add
pop
stos
loope
xor
xor
dec
mul
mov
cmp
es
pop
test
sbb
pop
mov
push
rorl
inc
push
popa
out
test
lea
ss
lret
sbb
dec
insl
mov
les
sti
mov
pusha
aaa
das
pop
jns
adc
xchg
xor
pop
inc
inc
addb
sbb
sarb
cmpsb
dec
pop
into
mov
out
movsl
fwait
lds
add
mov
jle
xchg
fisubl
sub
je
inc
or
iret
int
fsincos
es
and
cwtl
mov
pop
or
lea
iret
inc
cmp
mov
or
out
out
lret
mov
fwait
adc
testl
and
rorl
xchg
ret
mov
adc
jo
and
pop
pushf
pop
push
mov
add
add
subb
mov
xchg
mov
and
sbb
xor
sbb
sti
jl
out
adc
mov
jl
inc
inc
std
cmp
fcmove
jne
nop
or
out
leave
sub
inc
mov
fmull
lds
jmp
cmpsl
aad
cs
mov
leave
nop
cmpsb
mov
ret
cmc
popa
jecxz
mov
int3
imul
xchg
adc
mov
and
mov
inc
cmpsb
push
xor
iret
pusha
lea
popf
mov
sub
call
insl
xchg
stc
add
inc
jae
leave
cmp
pop
mov
daa
jbe
lods
dec
ret
lock
sti
in
std
in
jecxz
je
xor
cmpb
fyl2x
lock
test
data16
mov
loope
mov
addl
jbe
fistpl
jno
int3
mov
popf
jmp
dec
jne
mov
out
xor
out
or
pop
adc
and
shll
sahf
mov
popf
xlat
ret
repz
lock
jbe
int3
sbb
or
cmpsl
sahf
jmp
arpl
addl
jb
jns
fcmovu
push
and
push
in
fnsave
sub
lods
adc
addr16
inc
mov
adc
xor
decb
test
aaa
jg
jg
push
mov
jo
icebp
xlat
fcomip
sbb
arpl
ss
push
ja
fs
pop
mov
xor
inc
push
push
or
cltd
and
mov
jmp
icebp
cli
mov
sahf
cmp
cmp
inc
pop
jns
xchg
inc
dec
cmpsl
add
mov
mov
push
lds
add
sets
xchg
push
jno
je
shrb
test
xor
rcr
inc
jbe
dec
mov
add
movsl
pop
mov
push
stos
call
or
stos
add
mov
pop
mov
pop
mov
sahf
jno
or
call
mov
sti
daa
cmp
lahf
filds
icebp
fsubs
xor
stos
ficomps
jnp
sub
xchg
fadds
js
pop
lcall
xor
sbb
dec
out
cmp
pop
or
and
pushf
push
jbe
mov
mov
xor
shlb
popf
mull
pop
ret
mov
jns
ret
aam
inc
idivl
or
call
stos
xchg
inc
add
push
mov
mov
push
pop
push
push
leave
pop
pop
xor
or
sub
fnsave
or
scas
add
inc
inc
fiaddl
ror
pusha
pop
imul
jle
movsl
sbb
idivb
inc
xchg
pop
cwtl
cwtl
loope
mov
cld
pop
mov
lea
scas
lret
cli
and
dec
inc
pop
mov
stos
icebp
push
out
mov
xchg
ds
dec
test
adc
pop
inc
fldenv
sbbl
rorl
and
mov
mov
lret
xor
roll
cmp
test
or
movsb
or
xchg
ret
pop
mov
popf
sarb
push
test
jmp
jb
sbb
std
cwtl
addr16
dec
inc
pop
xor
icebp
ret
mov
lds
dec
pop
popf
mov
and
push
sub
jl
int3
stos
sub
push
push
cmp
popf
into
imul
xchg
fildll
sbb
cmc
and
mov
pushf
lahf
ret
enter
fstps
pusha
out
pusha
sub
jae
mov
dec
in
mov
orb
bound
test
and
cmp
insl
int3
inc
cmp
mov
jbe
add
mov
pop
fldenv
fsubs
mov
xchg
dec
inc
sbb
xchg
cmpsl
cwtl
jnp
push
push
aad
dec
sub
repnz
mov
cmp
jno
pop
sbb
and
aad
cmpsb
mov
dec
aaa
and
dec
arpl
lods
xor
pop
bound
mov
adcl
pop
or
fsubrl
push
xor
push
mov
add
int
ja
xchg
in
jmp
jle
nop
or
inc
push
inc
jo
pop
aas
adc
dec
mov
xor
lock
aam
fdivrl
ljmp
sbb
lahf
hlt
aas
das
mov
ret
mov
and
and
jno
push
or
pop
movsl
push
loop
xchg
dec
dec
xchg
ljmp
sub
lds
imul
push
sbb
xchg
cmp
js
push
xchg
fldenv
loop
outsl
mov
adc
cs
jae
add
orl
sahf
sbb
stos
mov
inc
pushf
outsb
cltd
mov
jno
jle
cmpsl
cmp
mov
popa
mov
and
faddl
jge
daa
dec
loopne
fists
sqrtps
int3
dec
fwait
inc
lea
je
cmp
jge
scas
and
mov
push
or
pop
cmovle
lods
and
pushl
ret
sub
push
xchg
stos
sub
aam
mov
mov
lods
cmp
or
inc
out
add
mov
push
inc
nop
add
sub
cmp
ljmp
scas
movsl
xchg
adc
sub
sub
outsb
mov
jge
outsb
jmp
or
mov
cmp
movsb
push
add
cmp
bound
subl
lcall
rolb
mov
push
out
pusha
sbb
push
jo
add
mov
pop
cli
cmp
ds
enter
xchg
js
add
adc
mov
nop
imul
sbb
add
jl
adc
or
jg
fucomi
pop
cwtl
push
mov
mov
cmpsb
dec
testl
xchg
mov
add
push
or
adc
add
xor
lahf
rcrb
dec
jg
dec
pop
aas
push
inc
sahf
test
insl
addr16
stc
push
inc
fs
mov
ljmp
or
xchg
test
cmp
jl
push
jp
dec
std
inc
xor
leave
test
add
sub
mov
imul
pop
mov
movsb
movb
add
push
xor
add
cmp
sti
loop
out
insb
sbb
scas
outsl
les
repnz
pusha
inc
push
clc
aaa
xor
test
pop
andb
rcrb
adc
cli
push
pusha
test
push
mov
push
icebp
fcomp
fldenv
jl
mov
mov
push
jecxz
repz
scas
or
inc
jae
dec
shrl
loopne
outsl
addr16
xchg
mov
and
cmp
out
xchg
outsl
mov
cmc
sub
jmp
je
lcall
loope
in
lods
sbb
push
mov
popf
xorl
sbb
pop
xor
sbb
std
sub
out
dec
jno
mov
xor
sub
ret
fidivs
xchg
bound
xor
fidivrl
decb
test
dec
xchg
mov
jns
int
xor
adc
call
cwtl
subl
repz
iret
dec
fs
lods
cmp
fiaddl
test
into
xchg
test
dec
lock
mov
cmpsl
push
mov
mov
inc
test
jge
mov
bound
ds
insb
pop
lods
xorb
or
fsts
insl
jne
adc
shlb
adc
xchg
inc
pop
push
ret
sbb
insb
mov
add
in
fisubl
or
in
lret
mov
pop
in
mov
out
shrl
lret
lcall
shrb
std
sbbb
pop
cmpsl
cli
sub
leave
movsl
push
sbb
leave
mov
mov
ret
push
mov
or
icebp
dec
inc
testb
aaa
push
dec
mov
outsl
std
dec
mov
add
sahf
or
dec
jmp
ss
lock
push
mov
aad
cmp
in
mov
sbb
out
bound
push
pop
ja
enterw
adcb
pop
push
dec
push
sti
es
sbb
add
in
and
push
dec
inc
outsb
stc
lret
sahf
out
cmp
jge
jmp
jns
outsb
iret
mov
inc
or
ja
pop
ds
je
ja
test
test
push
xchg
in
hlt
mov
aam
popa
or
lahf
and
arpl
dec
jge
jle
mov
pop
inc
ljmp
js
mov
cmp
addr16
insb
nop
xor
push
inc
add
ljmp
mov
pop
mov
pop
mov
imul
aad
lea
or
out
pop
jmp
fld
add
xchg
movsl
and
pop
pop
popf
xor
and
enter
push
adc
cmc
jl
or
add
inc
rolb
mov
lea
shrl
out
addr16
adc
mov
sbbb
sahf
ljmp
mov
lods
mov
lods
push
adc
out
jmp
xchg
jbe
mov
add
xchg
lock
pop
sub
pop
and
jne
adc
lods
add
xor
mov
popa
lea
dec
lret
pop
sbb
cmp
fs
mov
into
jnp
cs
sub
es
stc
sub
jge
push
test
mov
inc
jl
js
pop
cmp
cmp
leave
insb
xor
mov
mov
dec
mov
sti
nop
mov
dec
call
insb
pop
xchg
mov
xchg
cmpsl
cwtl
adcb
gs
mov
push
pop
dec
inc
and
pop
mov
add
test
xor
std
and
adc
imul
fwait
arpl
or
and
xor
pop
inc
push
cmp
dec
jnp
and
hlt
cmpsl
cmpsb
dec
mov
cld
mov
push
push
or
enter
test
test
sarl
xor
fcoml
push
out
push
mov
adc
jne
cli
or
sub
fnstenv
cwtl
repnz
sahf
ljmp
push
mov
fidivl
inc
inc
fsubrs
mov
adc
ds
and
pop
addr16
rorb
mov
pusha
jb
pop
repnz
lret
adc
or
or
xchg
shlb
and
cmp
push
imul
js
bound
push
sbb
xor
cmpl
and
push
int
jle
stc
xchg
fidivs
jmp
outsb
sub
push
xchg
sti
xchg
rol
push
cwtl
ljmp
dec
mov
mov
mov
mov
jmp
in
insb
xchg
daa
or
pop
xor
stos
negb
cmpsb
leave
xchg
ja
xor
jp
xor
lcall
cmovge
fldcw
in
stos
jo
dec
jge
out
xor
stc
xor
loope
mov
pop
cld
out
gs
cmp
jl
mov
sbb
icebp
cs
jb
jecxz
jg
mov
jp
mov
pop
xor
mov
mov
lea
out
push
cmp
gs
xchg
je
pushf
js
pop
nop
imul
pop
sbb
pop
xchg
pop
pop
jnp
mov
ds
jp
sbb
ljmp
loope
pop
gs
pusha
aam
in
sub
enter
lret
pop
adc
inc
daa
stos
dec
pop
popa
stos
xor
mov
xchg
mov
xor
and
imul
cmp
stc
test
mov
les
push
cmp
imul
fucom
xor
orl
iret
cwtl
mov
int3
add
sub
jge
loope
arpl
daa
les
dec
mov
bound
push
jnp
ds
mov
add
inc
sub
cmpsl
clc
idiv
inc
push
mov
mov
or
clc
mov
cmc
jmp
lahf
fildl
out
js
subl
cmc
jb
cmc
loope
popa
lcall
mov
addr16
pushf
xchg
push
jg
jmp
xor
jns
mov
popl
or
mov
orb
rorl
jp
and
and
add
loopne
gs
scas
dec
jnp
mov
lock
cmp
fisubrl
dec
jl
nop
movsl
sbb
dec
je
add
push
repnz
daa
mov
adc
cmp
lcall
adc
ljmp
sbb
sarl
leave
sbb
aad
xchg
lds
and
push
out
xor
mov
sbb
cmp
das
jg
jl
sbb
es
and
jle
out
cmpsl
rclb
int
lods
mov
lea
fsub
inc
es
cmp
sti
sbb
in
loop
daa
int3
int3
leave
sbb
iret
inc
jmp
push
lahf
clc
imul
cmpsb
cmc
sbb
inc
sbb
stos
and
mov
insl
pop
inc
pop
test
sbb
inc
push
std
in
sbbl
leave
sbb
push
or
inc
push
out
xor
sbb
aad
daa
out
test
lea
loop
lods
arpl
add
rcrb
mov
out
and
icebp
push
jae
pop
popf
incb
repnz
inc
mov
mov
movsl
imul
pop
add
ficompl
ja
mov
mov
adc
mov
hlt
mov
cltd
enter
repz
aad
jmp
repz
loop
fmull
mov
hlt
push
nop
into
mov
xor
mov
pop
std
daa
push
cmp
fimuls
and
pop
xchg
je
mov
fs
jne
cmp
out
bound
push
insb
jmp
dec
jmp
mov
dec
jmp
push
jae
sbb
stos
cwtl
mov
shrb
jle
push
mov
xchg
sbb
andb
xor
push
lahf
mov
cmpsb
sbb
rol
xchg
cmc
push
arpl
jns
lcall
mov
pop
lds
jno
push
xor
bnd
push
jns
lds
or
pop
jbe
call
fsubr
cmc
dec
ret
or
frstor
add
out
jl
sub
dec
js
fucomp
sbb
test
sbb
mov
adc
int
sarl
mov
rclb
mov
insl
mov
inc
shrb
mov
sbb
jnp
or
ret
cld
aaa
test
ss
lret
adc
sub
fbstp
mov
adc
fucomip
repnz
test
dec
adc
xchg
adc
xchg
stc
imul
add
imul
cmpsl
ljmp
loop
mov
cwtl
ds
test
mov
push
fimull
adc
xchg
mov
pop
sub
push
incb
push
sub
repnz
repnz
and
inc
xchg
xor
sahf
out
cmpsl
inc
into
nop
or
mov
sub
lea
sti
jge
fcompl
xchg
xchg
push
incl
push
xor
pop
rol
inc
jno
inc
enter
into
sub
sbb
pop
xchg
pop
icebp
sbb
jo
pushw
inc
mov
jg
stc
insb
insb
sti
jne
jae
les
mul
or
inc
cmp
pop
cld
cmp
mov
xchg
jmp
jns
mov
jge
es
fnstsw
test
pop
or
xchg
dec
icebp
outsl
lahf
jnp
jae
lock
inc
mov
sti
shr
push
xor
mov
ret
pop
mov
lea
jbe
enter
int
xchg
gs
lock
sub
sub
jbe
arpl
lods
sub
jb
adc
mov
movsl
cli
mov
fwait
lcall
pop
and
in
clc
mov
shll
aaa
inc
mov
add
ret
or
or
ffreep
xchg
push
js
xchg
out
mov
stos
or
ss
fwait
jle
pop
imul
inc
mov
mov
and
stc
or
mov
inc
fwait
adc
pusha
inc
test
xor
jo
leave
clc
push
pop
mov
adc
in
adc
adc
popa
icebp
neg
lret
or
and
andb
xchg
sbb
pushf
daa
or
jno
call
cmpsb
lods
ret
std
ljmp
pop
xchg
push
inc
je
jecxz
cld
leave
out
sbb
dec
xor
inc
lret
popf
xor
repnz
insb
mov
sub
lret
inc
sub
sub
adc
ret
push
es
pop
jne
scas
or
cmpsb
sub
cmc
scas
subl
in
jno
cli
pop
adc
in
in
cli
add
cmp
mov
xchg
add
ljmp
mov
arpl
mov
icebp
in
rcrb
sbb
push
scas
repnz
lret
jae
jb
cmp
loop
addr16
shrl
in
cmp
es
sbb
sbb
xor
add
push
cmp
dec
bound
mov
fidivs
dec
pop
popf
xchg
sbb
xchg
fimull
mov
sbb
mov
jl
gs
std
adcb
jl
adc
stos
mov
out
mulb
xor
dec
arpl
sbb
call
js
repnz
jg
add
das
mov
pushf
cs
push
jle
push
mov
cmc
popf
in
es
xor
daa
dec
inc
cmp
repz
orl
ds
and
push
jge
push
movsl
mov
leave
mov
xor
push
in
mov
jle
leave
xor
enter
mov
xchg
jg
cmp
dec
xchg
dec
push
dec
adc
xchg
ljmp
mov
mov
push
jmp
mov
mov
xchg
xchg
cmp
cld
jb
adc
mov
inc
mov
and
rolb
jp
dec
imul
fimull
movsb
and
xor
je
pop
jne
and
fidivrl
lahf
bound
lret
push
lcall
jo
popf
dec
lret
cli
int3
mov
or
notl
mov
dec
stos
insb
dec
adc
jg
xor
dec
js
or
add
in
movsb
lds
rcrb
in
add
fcomps
lds
cmp
jge
in
repz
test
inc
fildl
fisttps
xchg
add
push
jnp
mov
cli
mov
inc
fsub
imul
and
or
dec
pop
cmp
loopne
imul
dec
dec
xlat
sub
sbb
adc
jno
mov
fs
popf
cmp
inc
mov
sbb
lock
addr16
or
jecxz
mov
cmpsl
in
inc
mov
cmp
faddl
dec
mov
mov
cwtl
jnp
jmp
xor
mov
mov
push
mov
jp
pop
jae
shrl
leave
and
adc
and
gs
mov
xchg
cmp
cmpsb
out
aas
adc
xor
loop
add
pop
dec
mov
lock
repz
add
pop
push
adc
adc
lds
pusha
pop
movsl
fists
out
pop
cmp
cli
cmpsl
aaa
or
mov
iret
and
mov
inc
xor
leave
ljmp
xchg
mov
out
int
invd
outsb
xchg
dec
xor
pop
dec
jl
subb
jl
aam
mov
jecxz
sub
sbb
jge
cmpb
fiaddl
mov
inc
inc
pop
xor
sub
mov
clc
div
jno
addr16
loop
jns
mov
mov
xchg
es
into
aas
es
scas
pop
push
push
jno
fisubl
fcmovnbe
ja
andb
push
out
shrb
mov
cmp
lret
dec
mov
int
xchg
sbb
adc
in
fdivrs
sub
rcll
mov
cmc
int3
in
pcmpgtb
mov
sbb
mov
scas
inc
into
aas
sub
mov
and
xchg
mov
push
out
xor
push
push
mov
add
pop
add
lret
mov
mov
bound
shll
jp
pushl
push
cmc
jns
dec
out
arpl
pop
in
inc
xchg
clc
sub
ljmp
and
xor
mov
ror
inc
mov
outsl
ja
insb
int3
fadd
sbb
stc
jbe
ret
int3
movsl
fs
out
lret
mov
lock
and
jb
ret
addl
sbb
sub
and
pop
jnp
jp
xchg
mov
or
push
sub
adc
dec
sub
and
repnz
xor
pop
les
mov
call
mov
jmp
stos
xor
xchg
push
mov
jb
ror
push
pop
mov
sbb
daa
ljmp
cmp
cld
in
pextrw
hlt
sub
xor
fld
lds
mov
movsb
mov
push
xor
inc
adc
mov
mov
ror
mov
jecxz
es
bound
cltd
stc
push
out
dec
pusha
add
test
adc
test
pop
mov
jnp
push
incb
imul
rcrl
lods
repz
dec
jne
jnp
popa
sbb
gs
inc
movsb
xor
cs
movsl
cld
test
js
dec
repz
cmpsl
sti
mov
pop
pop
mov
jmp
cmpsb
mov
and
pop
in
in
into
xor
inc
push
repnz
loope
loope
inc
jecxz
dec
insb
and
stos
out
cli
andl
sub
lods
or
test
ja
repz
test
pop
xor
je
mov
cmp
pop
and
fs
fcmovnbe
mov
gs
mov
adc
js
lock
cmpsb
sub
mov
sahf
leave
imul
mov
mov
movsl
pop
push
movsb
div
mov
and
cli
in
test
sub
arpl
das
push
mov
sbb
or
or
insb
adc
cld
cmpsb
or
ljmp
add
mov
mov
lock
and
addr16
shlb
pop
cs
or
jmp
sti
insl
fstl
imulb
scas
popa
or
insl
dec
lock
push
xor
popf
cmp
aam
fadds
add
or
mov
cs
movb
stos
sub
mov
xchg
fwait
stc
sub
cld
or
int
or
movsl
aaa
lahf
lods
mov
leave
lods
adc
aas
subb
mov
nop
fidivrs
insl
sbb
pop
fsubs
test
fildll
mov
push
bound
adc
pop
pop
jnp
or
or
repz
lods
cmc
or
mov
lcall
dec
jnp
clc
lcall
dec
ljmp
cmp
lcall
xchg
push
stos
adc
or
sbb
aad
lret
lods
mov
adc
xchg
jg
inc
cmp
mov
outsl
sbbl
jns
test
in
cmpsb
or
xchg
les
jb
jl
fnstsw
sti
sbb
or
xchg
xor
arpl
loopne
popa
mov
fsub
outsb
addl
mov
hlt
jg
test
pop
mov
dec
push
pop
lret
xchg
in
mov
sahf
sahf
dec
dec
xchg
sti
inc
and
mov
sub
incb
adc
xchg
loopne
mov
mov
popf
pop
push
rclb
push
fldl
add
cmp
sub
lret
sbb
sub
and
dec
push
dec
shrb
mov
loopne
lods
into
je
mov
pop
pop
mov
dec
mov
pop
and
adc
mov
pop
xor
and
repz
or
mov
fwait
popf
int3
mov
fidivrl
fstpl
out
add
fsubl
sbb
in
jl
std
adc
call
add
sbb
inc
dec
lret
xchg
jge
pop
in
fstpl
les
fwait
mov
push
movsb
in
loopne
add
mov
jno
mov
fst
adc
jne
dec
jno,pn
push
enter
sub
or
mov
sbb
rorb
lret
push
scas
lea
lahf
fisubs
loopne
ffree
cli
add
mov
push
popf
out
sub
push
add
cmp
pop
mov
and
aad
rorb
scas
outsl
std
outsl
arpl
jg
out
into
insb
inc
jecxz
rcll
jbe
cmp
pop
sub
pop
ja
popa
out
push
dec
cld
pop
jle
add
aad
add
dec
pop
js
sub
xor
mov
dec
lods
or
clc
add
clc
jge
ja
mov
inc
sub
cmp
lahf
ljmp
scas
jne
or
cmp
push
out
arpl
adc
jno
adc
rcll
lods
sub
mov
mov
ss
xor
cli
inc
xor
mov
subl
sub
jp
sbb
and
into
mov
mov
je
shlb
mov
loopne
lahf
ret
mov
aas
add
leave
cld
and
sub
push
jae
insb
or
ss
pop
loopne
sahf
pavgw
dec
int
cmp
sub
dec
push
cwtl
aam
adc
add
movb
jge
mov
popa
xor
jae
pop
mov
mov
out
adc
mov
jbe
insb
xchg
notb
sbb
mov
mov
cmp
inc
push
mov
inc
popf
test
dec
loope
jle
imul
adc
cmpsl
lea
sub
push
decl
hlt
stos
cmp
in
adc
lds
loopne
fwait
or
insb
push
mov
outsb
mov
pop
out
out
cs
sbb
cli
ds
or
xchg
push
subb
sbb
hlt
lea
xchg
callw
enter
addr16
ss
jns
addr16
testb
inc
and
imul
inc
fsts
mov
sbbb
mov
mov
mov
inc
scas
jns
rcrb
inc
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
pop
stos
aas
cmp
cmp
adc
bound
push
cmpb
sub
pop
pop
inc
jo
mov
daa
jg
push
insl
xor
inc
repz
mov
xlat
xchg
jecxz
xchg
jg
adc
cmpsl
xchg
and
out
test
shl
add
les
je
mov
jle
sub
aad
call
mov
pop
mov
daa
mov
aaa
xlat
call
sub
pushf
ja
js
dec
inc
xchg
ds
adc
xor
pop
call
cs
mov
or
xchg
in
loopne
dec
jecxz
pusha
mov
shll
add
push
mov
rcrl
mov
stos
sbb
in
ss
scas
shl
sbb
shrl
jb
iret
and
fsubl
sbb
mov
add
cli
sahf
je
leave
test
pop
es
outsb
sbb
sbb
sbb
sub
fs
cli
xchg
adc
out
push
jo
mov
popa
and
in
jo
rolb
int
ja
pusha
andb
mov
std
dec
pop
inc
sub
pushf
inc
leave
inc
fisubl
in
inc
inc
dec
push
add
jecxz
jg
test
pop
add
rcl
jo
mov
sahf
jbe
lret
lods
filds
ds
xchg
or
push
pop
pop
ljmp
xor
andb
xor
jg
sub
mov
insb
xor
jo
je
mov
pop
sahf
rcrl
cmp
xchg
xchg
rorl
idivl
sarb
ds
and
adc
push
jb
out
ret
and
mov
fnstcw
test
cmpl
aas
ret
out
jne
mov
ret
outsb
pop
rorb
cmpsb
cmp
mov
and
loopne
repnz
or
mov
mov
repz
add
mov
push
jg
std
push
sti
sub
pop
xor
scas
or
mov
sbb
inc
call
notl
rcl
mov
test
mov
nop
adc
imul
popa
stos
aas
ret
cli
lods
and
test
add
jbe
fsubrs
push
mov
je
cmp
pop
inc
sub
pop
xor
sar
cs
call
push
sub
dec
fidivrl
push
imul
pop
xor
imul
daa
sub
cmc
fsubs
movsl
xor
mov
mov
inc
js
pop
push
loopne
jae
loopne
dec
lret
dec
xor
mov
xchg
adc
adc
scas
leave
inc
dec
int
cmp
hlt
lods
jecxz
out
fxch
sbb
mov
enter
xchg
movsl
xorb
push
sbb
sbb
icebp
lcall
xor
insb
pop
std
mov
mov
ret
jmp
adcb
in
jne
jno
loop
rorl
mov
cmp
clc
mov
mulps
hlt
adc
or
jb
lret
in
imul
psllq
lret
jmp
push
add
scas
xchg
add
nop
adc
dec
sub
sub
cmp
rolb
push
sbb
ret
pusha
sti
push
xchg
loopne
sbb
jmp
sub
out
mov
adcb
cmp
shlb
mov
add
repnz
int
pushf
cmpsl
jg
enter
fsubp
push
out
cmpsb
add
xlat
add
sub
aam
test
jecxz
xchg
xchg
aam
lret
lea
inc
mov
adc
lock
xchg
xor
lock
xchg
cmp
mov
xchg
int3
rcr
dec
int3
dec
cmc
addr16
pop
out
imul
call
mov
popf
adcl
adc
arpl
mov
mov
add
cmp
cld
lcall
clc
loopne
pop
push
jbe
imul
lcall
sub
mov
scas
pop
mov
pusha
sub
out
loop
shld
jns
add
bound
mov
mov
dec
or
mov
in
hlt
nop
cmp
mov
clc
xchg
xchg
jge
push
xor
inc
or
ret
sub
and
test
and
add
test
mov
xchg
cmp
fs
lcall
fcmovne
pusha
push
push
repnz
add
pop
jl
push
mov
add
std
loop
or
mov
shrb
mov
xor
cmp
mov
inc
sbb
daa
scas
xchg
inc
icebp
insb
cs
jb
cs
jne
lock
sbb
and
lahf
xor
leave
fists
mov
in
and
enter
xorl
mov
in
jl
mov
xchg
aad
enter
insb
out
inc
push
dec
insl
out
adc
out
scas
and
out
jmp
push
sub
xchg
imul
sub
mov
rep
pop
and
icebp
adc
lods
mov
xor
lods
xor
pushl
mov
pop
lods
xor
add
push
das
pop
stos
scas
xchg
dec
dec
mov
add
int3
insb
sbb
adc
jp
aam
loopne
sbbb
lret
repz
jge
lock
mull
mov
ret
bound
mov
jecxz
hlt
dec
arpl
into
inc
jne
push
cmp
fimull
dec
dec
shrl
mov
fsubl
adc
idivb
das
lcall
or
cmp
sub
xchg
rcrl
add
and
pop
imulb
mov
mov
dec
dec
imul
punpckhbw
xchg
dec
cwtl
mov
sbb
roll
sar
push
xor
jns
lret
jp
sbb
jge
adc
push
sub
mov
push
xor
sub
shl
adc
movsl
repnz
pop
repnz
cli
push
add
sbb
and
mov
cltd
sub
insl
adc
push
and
inc
jb
add
and
gs
push
mov
adc
jp
shll
inc
es
iret
mov
or
lcall
repz
fisttpl
adc
xchg
ds
sbbb
es
push
cmpsl
dec
mov
push
add
neg
movhlps
test
js
push
lds
sub
test
aam
dec
push
cmp
adc
shlb
pop
scas
ds
push
shlb
inc
out
mov
cmpsl
jge,pt
jmp
inc
out
push
fwait
lock
daa
dec
ds
in
xor
cmp
inc
cmc
inc
adc
ja
xor
sbb
pop
imul
pop
cld
jl
cwtl
jg
lcall
sbb
jge
cmp
cmpsl
sub
xor
aaa
sbb
lock
dec
loope
xchg
sub
inc
sahf
clc
inc
fisubrl
ja
fistpl
mov
pop
int3
int
insb
add
je
dec
inc
jp
gs
inc
dec
inc
push
dec
push
popa
xchg
je
scas
mov
rorl
div
arpl
ja
scas
sbb
xchg
in
xchg
bound
xchg
outsl
cltd
add
and
mov
ret
push
loope
push
mov
test
and
sti
mov
mov
je
std
mov
in
das
aam
ja
and
push
shrb
and
jne
and
arpl
arpl
dec
push
cli
push
inc
dec
sbb
jo
lret
daa
or
lret
int3
std
pushf
mov
fcoml
inc
shll
xor
test
mov
loop,pn
nop
std
cmp
fstpt
movsb
loopne
mov
mov
adc
sub
xor
push
sub
and
add
dec
mov
mov
popa
pop
jmp
inc
popa
xchg
mov
push
arpl
call
lock
fimuls
dec
pop
gs
cli
lock
aaa
ret
dec
push
push
adc
repz
bound
mov
leave
push
cltd
inc
sbb
mov
cmp
insl
rorb
adc
sbb
dec
outsb
cltd
sub
jnp
and
xor
je
nop
aas
pop
adc
pop
fstpt
lods
xor
mov
cmpb
imul
sub
stos
fwait
push
int
stc
sbb
icebp
div
movsl
sub
cmc
add
out
mov
or
sub
rcrb
mov
sti
aaa
push
stc
gs
mov
fwait
xchg
push
sub
stc
test
jmp
jle
xor
add
sub
dec
test
sbb
int
sti
push
ror
subl
popf
mov
pop
ret
in
sti
addr16
pop
roll
dec
sub
cmpsb
or
mov
push
jb
push
aad
jnp
test
out
in
sti
lock
cmp
pop
filds
enter
scas
fidivl
into
test
mov
repnz
and
aam
push
sahf
push
sub
push
push
mov
inc
cmp
aad
sub
mov
insb
fdivr
nop
mov
daa
mov
mov
push
ficoml
shll
adc
outsl
dec
push
test
add
sti
pop
sub
push
pop
out
in
lret
mov
stos
jmp
cld
lods
int
xor
jbe
mov
add
fimull
dec
xor
outsb
push
icebp
or
ret
push
test
leave
lret
xchg
jno
sub
sub
xchg
lds
fdivl
das
je
in
mov
imul
inc
mov
adc
stc
cmp
jecxz
ljmp
mov
in
mov
mov
jle
test
mov
mov
mov
sbb
xchg
push
insb
sbb
sub
dec
push
test
add
pusha
jne
push
xchg
inc
and
pop
into
rcll
push
mov
enter
lcall
into
or
cmpsl
lods
or
push
mov
jmp
pop
lods
lcall
push
es
cmp
mov
mov
cli
icebp
pop
push
repz
stos
std
push
mov
cwtl
sub
sbb
sbb
push
test
imul
fldenv
inc
jecxz
and
jp
cmp
stos
mov
lock
and
or
leave
xchg
sub
dec
and
dec
lret
mul
jnp
push
arpl
insl
mov
testb
mov
mov
or
push
xor
jnp
outsb
in
dec
add
imulb
out
jecxz
xchg
dec
xchg
pop
add
add
dec
aad
popf
dec
pop
xchg
dec
pop
sbb
aam
lahf
mov
jecxz
loopne
xchg
inc
push
push
dec
xor
mov
pop
jno
in
testb
or
test
mov
js
cmp
or
in
mov
dec
add
fnsave
jmp
rcl
rol
js
fldl
push
sub
jl
insb
xlat
xchg
mov
std
mov
push
lret
push
mov
test
push
push
lods
hlt
pushf
std
push
jmp
xor
bound
mov
and
mov
push
cmp
sbb
mov
mov
jmp
sub
mov
pusha
or
lods
sbb
cmp
jns
cld
cmpl
push
mov
jmpw
leave
imul
and
pusha
sbb
scas
scas
push
mov
fcompl
add
push
lcall
jno
mov
aaa
pop
mov
push
pop
jmp
leave
in
push
push
xchg
fisubl
mov
cmp
mov
lock
xchg
leave
fidivrs
xchg
sub
das
orb
adc
lds
mov
inc
cltd
cmp
xchg
adc
xchg
adc
andb
mov
in
jae
iret
or
sbb
mov
mov
sub
lret
pop
js
cs
negl
mov
mov
adc
in
inc
add
mov
movsb
inc
jno
test
mov
adc
cmpsb
xor
sbb
mov
js
mov
adcl
inc
sbb
lock
nop
cwtl
repnz
cmpsl
inc
mov
dec
or
xchg
and
lods
mov
lret
xor
xchg
fists
and
cwtl
sbb
xchg
xor
push
jae
add
jg
mov
adc
out
mov
sub
bound
mov
rorb
dec
shll
stos
adc
push
cmp
pop
ss
jo
jno
lea
pop
enter
out
das
xchg
mov
ret
popf
xor
decl
xlat
cmc
test
jg
ljmp
mov
xchg
test
push
mov
mov
mov
adc
pusha
ret
scas
imul
out
pusha
or
and
sbb
popa
mov
jne
jmp
pusha
inc
cltd
test
fimull
pop
xchg
push
xchg
daa
sbb
push
nop
mov
test
pop
sub
or
sahf
mov
in
sbb
pop
or
jae
and
in
jo
xchg
repz
ds
fdivl
fisubrl
xchg
cmp
inc
push
mov
inc
mov
imul
repnz
pop
lahf
int3
cmc
enter
adc
adc
jg
lret
mov
mov
pusha
cmc
test
lods
lds
adc
or
mov
rolb
testb
sbb
insb
mov
mov
aaa
push
or
jecxz
jno
inc
jecxz
mov
mov
out
cmp
daa
mov
out
adc
jle
popa
out
adc
pop
cmp
cmp
iret
insb
mov
xor
sub
lahf
push
xor
test
adc
inc
clc
dec
push
movsb
mov
pop
push
movl
mov
out
call
std
add
aam
popa
cmp
aam
mov
gs
or
fnstsw
pop
jnp
mov
mov
jmp
sbbl
int
xor
push
mov
test
ja
shll
xorl
divb
inc
adc
je
and
aam
out
int
pushf
cli
adc
push
jl
leave
jns
cmp
dec
xchg
ror
jbe
mov
fdivl
jl
in
pop
gs
arpl
adc
mov
fimuls
sub
cmp
sbb
popa
or
pop
jne
or
add
inc
mov
scas
xor
into
sbb
imul
out
stos
mov
test
adc
push
sbb
pop
insl
pop
or
test
std
adc
cmpsl
mov
les
js
not
lret
add
cmpsb
aas
xor
movsb
sahf
dec
loopne
mov
int
mov
jl
xchg
out
sub
cltd
xchg
bound
stos
gs
jge
inc
lea
push
rcl
pushf
cmp
outsb
cwtl
jae
fstpl
loopne
inc
xchg
xor
fstps
push
cmpb
aaa
adcb
aad
jecxz
jns
inc
out
ds
xchg
test
sbb
loop
jl
jbe
jae
mov
mov
fimull
mov
xor
jns
gs
lret
repz
sub
out
pop
lods
lds
in
dec
arpl
cmp
outsl
push
subb
fwait
aam
fsubl
nop
aad
std
pop
nop
mov
nop
addr16
jmp
push
adc
jl
imul
or
imul
test
outsb
sti
mov
jle
push
xchg
sbb
mov
test
xchg
or
sub
push
inc
and
dec
jmp
cmp
jecxz
idivl
push
mov
lahf
repz
cmp
loope
lahf
nop
jg
loop
mov
insb
idiv
inc
in
je
cmp
cmp
adc
xchg
int3
pushf
fsubrl
add
arpl
insl
in
mov
dec
add
loop
xchg
fidivl
sbb
lea
jae
lcall
movsb
sbb
pop
dec
lods
adc
out
mov
in
in
ret
sbb
push
aad
mov
jmp
lret
pusha
ljmp
mov
jl
sub
aas
inc
pop
ljmp
cmpl
inc
clc
movsl
inc
fldenv
hlt
jl
fsubs
hlt
lcall
mov
sbb
not
shlb
loop
lock
sub
sub
lcall
or
mov
ret
xor
int
cmpsl
xchg
test
pop
sahf
incb
test
push
mov
sub
push
xchg
push
es
jb
cmp
ds
ja
mov
lahf
lods
push
mov
xchg
loop
imul
mov
out
ficoml
jmp
iret
test
je
fldz
cmp
push
cs
out
pop
rcll
and
aam
dec
bound
int3
push
ds
push
pop
scas
std
push
aaa
mov
mov
test
ret
mov
stos
inc
adc
inc
in
xchg
out
and
or
mov
sub
xor
and
sub
sbbl
mov
pusha
ds
sub
push
pop
add
mov
or
lret
pop
xchg
fwait
push
sub
fwait
pop
imul
adc
fwait
mov
mov
repnz
js
push
and
cwtl
adc
mov
data16
jp
ret
je
xor
push
cltd
jns
mov
sbb
xor
test
js
lods
ja
and
sbb
cmp
sub
lahf
add
scas
loopne
fbld
call
and
jecxz
xor
fcomps
cmpb
jge
pop
cli
push
xchg
inc
lods
xchg
sarl
test
cmpsl
xor
je
int
ja
js
in
lahf
sahf
xor
leave
pop
movsl
cs
jl
cmp
addr16
jmp
movsl
movswl
pop
fdiv
inc
test
iret
pop
lcall
mov
mov
in
loop
mov
mov
lods
or
pop
push
pop
in
push
pop
testb
dec
lock
inc
and
push
lods
xor
sbb
aaa
mov
xorb
test
loopne
ret
pop
fstpt
in
data16
daa
gs
addb
push
aad
cmp
cmc
mov
rol
xlat
dec
inc
mov
jnp
lcall
push
mov
sub
in
sbb
in
inc
mov
lods
subl
lcall
mov
test
jno
ficoml
ds
or
dec
dec
jo
push
in
cmpb
xchg
cmpsl
lret
ljmp
orl
jecxz
out
push
and
xor
pop
sub
or
jecxz
es
inc
fdivl
mov
jb
stos
test
dec
sbb
pop
iret
mov
out
out
daa
inc
dec
cli
test
mov
cmp
pop
hlt
adcl
inc
rol
scas
jmp
mov
scas
loope
mov
mov
pop
or
jnp
xor
fwait
push
test
xor
inc
js
sti
loopne
int
imul
fbld
mov
sbb
das
inc
orb
jo
xchg
pop
hlt
scas
mov
or
cmpsb
mov
sbb
jp
and
mov
jns
dec
pop
ds
sbbl
out
push
inc
lret
push
dec
cmp
mov
mov
cwtl
sbb
adc
shrl
add
mov
cli
adc
bound
shll
inc
sti
lcall
cmpsl
lahf
pop
inc
fidivl
cmp
mov
bound
adc
out
mov
faddl
lea
cmp
inc
imul
mov
pop
fisubrl
imul
rcrl
cmpsb
ja
stc
jne
or
adc
bound
cld
jo
push
cmpb
mov
xchg
cmpsb
nop
popf
aas
daa
data16
ret
dec
icebp
mov
ljmp
ficoms
cmp
cmpsb
mov
nop
cmp
das
leave
adc
add
cmp
popf
mov
adc
fwait
outsl
add
cmp
and
mov
mov
ljmp
ljmp
cwtl
aam
shll
outsb
jns
jl
or
cld
in
rol
dec
int
insl
rol
ret
add
les
mov
arpl
xchg
mulb
cmp
outsl
xchg
test
or
stos
daa
stos
push
jmpw
mov
cmp
sub
fxch
test
mov
addl
incl
loop
imul
jae
clc
adc
mov
es
adc
jae
jge
pop
out
fistl
data16
ss
mov
dec
pop
jb
or
jnp
gs
push
inc
xor
hlt
inc
in
js
adc
sub
insl
ljmp
sbb
out
push
push
inc
sub
or
mov
push
push
jns
cmp
or
ds
jecxz
cmpsl
orb
sub
pusha
test
outsl
out
pop
cwtl
pop
insl
inc
outsb
inc
stos
mov
inc
mov
mov
jae
int3
jge
dec
sti
mov
push
mov
xchg
push
jno
ret
xchg
cltd
mov
lock
push
ficoms
push
lods
add
push
jmp
sub
cmpsl
in
movsb
std
xchg
lods
rcrl
aad
cltd
mov
xchg
lds
fstpl
and
lods
mov
dec
in
test
or
lcall
es
pop
push
push
sub
add
xchg
xchg
and
lcall
xor
jmp
gs
pushf
mov
inc
inc
mov
dec
pop
pop
mov
xchg
mov
pop
clc
bound
dec
cs
movsl
cwtl
xchg
and
out
cltd
and
repnz
les
or
push
jbe
or
pop
lahf
aaa
jmp
sbb
test
push
and
insl
xchg
je
sbb
cmp
repnz
push
repnz
and
add
mov
mov
jecxz
cltd
jne
in
loope
dec
jbe
adc
in
dec
sbb
mov
adc
adc
inc
push
cli
dec
and
das
inc
xor
inc
mov
and
push
sarl
jmp
cmp
clc
enter
mov
fstps
int
into
addr16
js
inc
adc
inc
and
fisubrs
arpl
cmc
mov
cmp
add
jp
pop
lret
inc
jns
out
decl
shlb
addb
stos
loope
dec
mov
fadd
cmp
mov
sub
xchg
push
stc
loopne
aad
popf
hlt
sbb
ja
sbb
into
xor
shlb
cmp
fistps
jae
mov
inc
icebp
arpl
mov
dec
mov
mov
cmpsb
lcall
push
dec
pusha
jle
out
pop
mov
inc
and
out
cld
push
pop
stos
pop
sub
ret
sbb
aas
add
push
pop
lods
pop
pop
inc
out
and
stc
cwtl
mov
inc
imul
inc
or
pop
shll
popf
sbb
inc
add
loop
ret
jb
in
or
xchg
imul
loopne
jmp
jecxz
mov
mov
sub
push
jg
ffree
popf
addr16
out
mov
add
je
addr16
aas
orl
cmp
dec
int3
std
add
lds
push
add
sub
xor
out
jb
inc
pop
orb
std
jb
sbbl
add
and
dec
repz
dec
cmc
enter
xchg
adc
add
or
pop
jne
pop
xchg
lds
or
ljmp
mov
jmp
insl
dec
dec
or
push
call
test
out
cmp
or
or
fdivrs
test
push
dec
stos
mov
cmc
inc
inc
and
test
test
push
cmp
xor
mov
filds
xor
loop
or
cmpb
sub
inc
adc
sbb
jge
divl
popf
cmp
fsubrp
and
and
sub
push
cli
jg
lret
mov
pusha
add
ljmp
push
daa
cmp
adc
in
xor
jge
pop
and
or
out
lock
xor
lods
stos
mov
cltd
or
neg
mov
inc
sub
test
mov
xchg
inc
jecxz
mov
push
dec
adc
addr16
les
sub
inc
fs
mov
ljmp
mov
xor
or
sti
xchg
inc
jo
cmpsb
dec
in
adc
ficompl
outsl
inc
pop
test
in
mov
mov
bound
inc
std
sbbl
cs
sbb
leave
push
fs
sar
and
jle
testb
mov
sbb
inc
ljmp
stc
mov
dec
sub
mov
mov
inc
cwtl
inc
aas
xor
sub
inc
aam
data16
out
mov
rcl
xchg
je
push
mov
pop
and
imul
out
cld
dec
in
aam
insb
adc
loopne
gs
shl
or
xchg
scas
pop
sbb
pop
int3
inc
pop
je
mov
push
sarl
push
or
fs
sbb
mov
shlb
cmp
cmpsl
loop
cmp
lods
jne
les
cwtl
jmp
jmp
nop
call
insl
jl
fsubrs
add
lock
jle
es
pop
adc
xchg
lcall
imul
xchg
pop
lcall
fstps
jmp
adc
in
xchg
mov
aaa
jmp
enter
xor
push
outsb
push
and
dec
add
daa
add
mov
pop
jae
shr
out
pop
aam
push
inc
jl
mov
pop
int
cwtl
push
mov
xchg
xor
fisubs
ret
pop
cs
jno
and
lcall
lcall
stc
push
xchg
jbe
mov
sbb
outsl
push
xchg
pop
push
xor
mov
dec
or
das
std
iret
insl
loopne
pop
shlb
orl
push
xchg
or
leave
add
scas
and
push
pop
jmp
cld
pop
stc
in
imul
es
adc
pusha
push
pop
test
jmp
xchg
cmpsl
in
dec
daa
fwait
outsb
mov
repz
sbb
push
sbb
pop
scas
addr16
mov
lret
fdivrl
cmp
mov
and
movsb
outsl
jnp
ficoml
lcall
inc
mov
mov
mov
leave
mov
add
test
lret
cmp
insl
fldl
xchg
cmpsb
dec
or
andb
fildll
sbb
pop
aam
inc
dec
lret
shl
data16
pop
sbb
cmpsl
xlat
daa
add
out
cmp
sbbb
adc
outsl
push
movlps
sbb
sbb
fsubrl
mov
push
popf
insw
xchg
mov
test
mov
pop
inc
jo
nop
jle
shrl
pop
frstor
xchg
or
adc
outsb
data16
adc
and
imul
jbe
std
mov
jnp
lahf
jno
sub
sbbb
mov
push
neg
call
cli
push
fisttps
imul
mov
lret
jns
rcrl
ljmp
rcrb
test
in
jo
sbb
sti
push
fisubs
movsb
cmp
jae
lds
dec
loopne
adc
xchg
in
cmpsl
cmpsl
sbb
mov
sbb
pop
cmp
mov
pushf
and
addl
shr
in
push
dec
mov
and
popf
mov
inc
ficoml
and
mov
push
test
push
sub
add
pop
cmpsb
sub
xchg
xor
add
inc
stc
mov
adc
mov
push
outsb
mov
imul
cwtl
subl
dec
fsts
mov
subb
decb
mov
sbb
xchg
nop
sub
dec
out
test
in
mov
inc
scas
popf
adc
es
push
test
pop
popl
xor
pop
adc
cmp
sub
test
jo
ss
mov
adc
roll
insl
ja
ja
bound
mov
aam
cmp
outsl
jmp
insb
mov
bound
ja
and
aad
nop
jnp
pushf
repz
lahf
fwait
dec
call
pop
fisttpll
popl
dec
or
mov
iret
push
fbstp
sbbb
jp
jns
shl
movsl
pop
aas
inc
push
inc
and
fstpl
call
loope
std
xor
in
adc
jmp
inc
add
dec
lea
inc
in
and
inc
rcll
xchg
ds
mov
xor
dec
push
into
addr16
and
mov
cli
xchg
aas
add
add
out
aam
outsl
cmpsb
out
insb
leave
into
pop
cltd
dec
xchg
aam
add
cld
insb
shr
ret
pushl
int3
rclb
test
daa
call
imulb
jmp
mov
lods
repnz
mov
std
jnp
mov
fwait
cmp
mov
imul
push
faddl
xchg
pop
mov
dec
int
jo
loop
inc
pop
push
shlb
pop
cmp
dec
push
ss
mov
pop
aaa
sbb
rcrl
dec
mov
fwait
pop
mov
mulb
cmp
or
in
or
xchg
jnp
push
sti
scas
inc
shr
mov
gs
pop
out
cmp
mov
sar
xchg
mov
inc
add
xchg
sbb
dec
xchg
fidivs
cmp
jb
dec
les
adc
std
outsl
out
sbb
mov
dec
add
mov
sub
push
mov
lea
addr16
in
or
shll
cmc
sub
icebp
ror
es
mov
ja
add
push
cmp
in
int
dec
inc
inc
test
ds
push
mov
mov
lods
ss
gs
shl
bound
jb
jbe
sbb
ss
xchg
xchg
xor
inc
jne
fwait
and
xlat
or
or
ret
sahf
lret
int
push
mov
mov
lods
call
imul
cs
sub
inc
push
inc
push
or
or
sti
adc
mov
xchg
pop
gs
push
pusha
pushf
adc
jo
rolb
lahf
fwait
lret
pop
dec
enter
sbb
repnz
push
add
pop
popa
fcmovne
push
cmpl
adc
pop
xchg
inc
popa
pop
test
lahf
adc
sbb
lret
lods
fcomip
and
insb
xor
pop
dec
movsl
aas
ret
cwtl
jae
push
or
stos
out
push
orb
clts
cmp
mov
mov
pop
add
je
mov
out
into
sarl
fxch
xor
xchg
repz
cmp
out
test
andb
cld
dec
jns
imul
jb
dec
mov
outsb
fwait
ljmp
fsubrs
lahf
push
mov
xchg
lea
push
or
stos
mov
jle
jle
push
mov
mov
gs
pop
mov
xor
std
js
dec
push
stos
mov
xor
cli
inc
pop
leave
xchg
pop
lock
xor
sbb
xchg
mov
fistps
mov
pop
push
in
das
jnp
movsb
mov
addr16
dec
js
adc
mov
cld
mov
std
pop
lods
push
stos
fcmovne
test
scas
rcrb
xor
mov
mov
push
sbb
push
sub
sahf
push
inc
jmp
dec
icebp
jb
or
pop
push
out
jecxz
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
fistpll
pushf
add
sub
push
push
cmpsl
jg
leave
pop
cmp
movsb
sub
push
out
sbb
leave
add
jecxz
in
push
add
cli
jmp
or
mov
dec
pop
ljmp
mov
in
repnz
lods
scas
dec
je
hlt
out
mov
test
fildl
mov
jae
mov
xchg
fidivs
into
das
sbb
xchg
adc
pop
mov
jge
inc
sub
xor
lcall
ljmp
xchg
or
hlt
jecxz
push
xchg
mov
ret
stc
jmp
sbb
jne
sub
add
jns
test
jmp
xor
cs
insb
mov
push
mov
add
sbb
pop
into
cmpsl
subl
add
je
sbb
lret
and
or
sbb
mov
push
or
negb
fidivrs
or
jecxz
dec
and
pop
and
jl
fs
sub
sub
pop
pop
dec
sbb
sub
mov
cmpsb
repnz
dec
sub
stos
inc
lret
adc
stos
xchg
add
dec
pop
add
fbld
sbb
adc
imul
mov
cmp
jmp
mov
in
imul
cld
jle
popa
data16
ds
in
adc
out
stos
dec
pop
idivl
add
jl
in
and
cld
inc
dec
pop
addr16
insl
ret
in
pop
push
inc
loopne
ss
sub
fistl
popa
sub
xlat
shr
lds
sbb
cli
push
jnp
sbb
into
push
aad
lcall
sbb
xorb
cmpb
hlt
movsl
ja
add
scas
mov
xchg
xchg
in
jmp
adc
push
jo
jmp
insl
imul
add
cmp
insb
sbb
jmp
push
test
loop
cld
icebp
mov
push
sar
test
cmp
sbb
mov
icebp
add
jno
addb
mov
add
inc
repz
sbb
mov
inc
pop
xor
test
sbbl
pop
jmp
outsl
mov
orl
outsb
xchg
aas
sub
xchg
adc
inc
mov
sbb
jae
mov
mov
lods
lret
scas
cmp
pop
lcall
popa
mov
clc
pop
adcl
xchg
lods
dec
mov
jge
mov
cli
sbb
dec
pop
fisubrl
lea
dec
orb
roll
clc
sub
insl
lds
call
insb
fldt
insb
std
or
mov
mov
jns
mov
in
out
dec
sbb
aam
mov
push
scas
scas
cmp
popf
out
setge
mov
aam
mov
jns
xchg
out
lea
push
stos
sub
popw
push
rol
jp
and
mov
ss
adc
mov
sti
popa
mov
and
pop
push
sub
mov
jmp
jp
jbe
sbb
fwait
adc
repnz
inc
jns
mov
fmuls
icebp
jg
jge
mov
loopne
fdiv
adc
inc
sub
movl
mov
jno
dec
jo
insl
movsl
sbb
sbb
out
es
sub
adc
xchg
jo
mov
out
es
mov
rorl
push
mov
ljmp
imul
jo
xor
sbb
insl
popa
or
mov
xorb
addl
and
xchg
mov
jle
jmp
sbb
rcrl
out
pushf
push
or
icebp
add
xchg
dec
inc
movsl
ja
or
mov
xor
clc
fwait
mov
jnp
or
in
sahf
mov
sub
inc
add
arpl
xor
sti
sbb
das
fbstp
cli
sbb
insb
mov
mov
adc
dec
pop
inc
shrb
or
pop
dec
adc
pop
lret
fildll
lret
and
mov
mov
cltd
push
in
in
enter
lahf
push
ret
sbb
outsl
xor
push
ret
push
mov
je
add
inc
adc
xor
jne
pop
inc
enter
daa
or
jno
inc
dec
lret
data16
xchg
mov
cltd
imul
or
sbb
xor
lock
cmpsl
lcall
xor
inc
cmp
shlb
or
xchg
lock
ss
test
add
jb
xor
ss
adc
lods
pushf
daa
push
xchg
cwtl
xchg
push
fnstsw
lret
inc
cmpsl
or
mov
and
push
dec
or
imul
add
lcall
sub
xor
enter
sar
lock
icebp
pusha
dec
das
sub
mov
mov
fs
pop
shlb
adcb
xchg
add
into
sub
xchg
int
out
pop
pop
sbb
es
xchg
xchg
dec
out
xchg
inc
cmp
shll
mov
lods
arpl
push
movsl
cld
subb
scas
lds
loopne
mov
push
inc
mov
es
pushf
js
inc
fistl
push
imul
pop
or
lret
leave
jmp
mov
inc
pop
xor
pop
mov
lea
xchg
repz
bound
cltd
jl
dec
mov
sbbb
and
jae
mov
mov
xlat
xchg
jno
cld
ss
mov
scas
mov
notl
mov
mov
popa
icebp
scas
jl
xor
add
pop
stc
popf
xchg
fists
xchg
subb
mov
pcmpeqb
xlat
test
shr
mov
aam
pop
xchg
dec
movsl
out
push
mov
orb
mov
es
add
rcrb
jo
add
and
push
jmp
push
clc
out
es
inc
jge
inc
movsb
cmp
jo
in
adc
sahf
adc
xchg
mov
inc
xchg
jle
pushf
mov
data16
addr16
pop
loop
adc
jno
arpl
bound
dec
mov
and
loope
and
mov
sbb
inc
lds
arpl
stos
mov
or
xchg
adc
pop
push
push
sbb
gs
test
dec
and
xor
inc
jle
xor
or
dec
arpl
jmp
sbb
fnstcw
mov
shr
test
mov
shlb
inc
shr
divl
push
adc
xchg
pop
in
inc
xor
in
test
mov
aad
cwtl
out
jo
xchg
jl
adc
add
pop
adc
enter
push
push
in
sub
cmp
inc
out
push
pop
sub
inc
loope
ficoml
mov
dec
and
mov
out
jle
mov
mov
stc
sub
inc
in
xor
shll
scas
shl
out
add
dec
test
js
scas
sub
lds
in
pop
scas
lret
mov
int
fsubrs
fdivrl
jl
jb
fcoml
push
jmp
movsl
mov
imul
imul
pop
int3
frstor
lea
xchg
sbb
lock
mov
gs
push
push
mov
push
sbb
dec
fmull
test
jae
xor
outsl
repz
mov
xor
mov
cli
and
cmp
sub
pushf
je
addr16
in
jmp
fwait
dec
add
mov
xor
sbb
xor
lahf
loop
mov
lcall
jmp
fcmovbe
pop
js
xor
mov
push
mov
push
testb
sub
mov
lahf
movsb
xchg
or
adc
into
loop
lds
or
std
sub
in
or
rol
sbb
dec
addr16
in
jl
mov
push
sbb
pop
lods
dec
xchg
pop
test
loop
repnz
fwait
push
leave
mov
mov
add
mov
jmp
mov
sbb
cmc
xchg
inc
dec
inc
sbb
lds
cmpsl
out
inc
and
and
mov
hlt
das
sub
loopne
lods
xor
xor
mov
sar
add
push
sub
cmp
jno
lret
shl
in
lcall
rorl
loopne
out
mov
cs
dec
ljmp
or
mov
jo
out
sub
call
movsl
xor
push
dec
mov
add
xchg
jo
ljmp
aas
mov
xor
stos
fnstsw
mov
mov
insb
andl
in
jmp
rep
incl
cmp
mov
scas
xchg
mov
push
scas
adc
or
insb
cwtl
ret
arpl
mov
push
mov
push
mov
clc
sahf
mov
and
shll
pop
add
adc
inc
push
lcall
mov
addr16
popf
cmp
jns
add
or
mov
cmp
push
mov
cmp
jmp
pop
addb
push
fwait
push
es
sbb
imul
int
jge
stc
push
push
and
jmp
aaa
out
xchg
cs
hlt
cmp
imul
pop
jo
and
add
lods
xchg
jg
in
adc
mov
push
int3
xor
enter
jo
adc
mov
nop
mov
je
pop
add
pop
rorb
push
rcrl
or
out
and
sbb
cmpsl
adc
add
aam
or
or
mov
push
cmp
out
inc
sub
iret
pop
dec
ja
mov
push
push
inc
xchg
jle
out
add
fisubrl
loopne
aaa
popf
pop
clc
out
sbb
ret
dec
leave
popl
pop
aas
sub
or
sub
xor
sbb
cmp
jp
mov
push
outsb
cs
dec
popf
inc
lret
dec
sbb
dec
fcompl
dec
scas
pop
test
cld
test
or
sbb
int
hlt
jmp
leave
xchg
pop
loopne
jnp
outsb
test
test
inc
sub
hlt
adc
dec
out
sbb
cmpsb
fbstp
testb
and
es
pop
clc
adc
std
cmpsb
or
dec
into
push
inc
mov
cld
scas
mov
xchg
xor
cmp
pop
push
cltd
xchg
sub
jbe
aaa
sub
mov
mov
jne
xchg
lock
push
lret
std
das
popa
iret
inc
aad
fstps
out
shr
pop
sub
fsts
xor
jb
push
push
insb
cmp
outsb
cmp
mov
fs
sub
rcl
add
sub
gs
bound
sub
mov
outsb
push
jb
inc
mov
inc
fistl
stos
mov
fldl
xor
xchg
mov
rclb
dec
int
push
push
pop
stos
fwait
xchg
paddsw
mov
or
shr
mov
cltd
or
xor
xor
mov
xlat
in
mov
outsb
mov
loop
xor
xchg
cmpsb
xchg
rolb
mov
loopne
into
fdivl
mov
stos
ret
sbb
mov
jle
cli
les
mov
test
cmpl
pmaxsw
push
mov
f2xm1
js
psrld
lret
cmp
fsubrl
cli
aas
lds
mov
das
jae
push
mov
cwtl
or
movb
cwtl
je
add
sub
mov
mov
adc
fisubs
lods
jl
jbe
inc
daa
jle
or
xor
cmp
cmp
jae
fbld
in
mov
inc
mov
jmp
adc
mov
sub
cltd
mov
jp
and
adc
dec
mov
or
je
sbb
sbb
call
dec
sub
loop
cs
js
mov
inc
jb
lcall
mov
int
sub
adc
adc
or
xor
mov
xlat
mov
xor
cmp
imul
addr16
dec
mov
jb
adc
xchg
push
movsl
repnz
call
ja
xor
sbb
push
cld
cmp
cs
lea
jmp
xor
inc
sub
inc
or
out
pop
ljmp
mov
or
pmuludq
dec
inc
pop
outsb
movsl
add
or
lock
mov
mov
jmp
das
shll
mov
js
pop
in
adc
adcl
mov
rcrl
cmpsb
mov
cltd
ret
or
hlt
or
xchg
cmp
jmp
jb
lcall
sub
int3
std
and
jp
inc
xchg
xchg
inc
pop
pop
insl
adc
mov
in
aam
adc
loop
xchg
mov
inc
lock
cmp
cltd
pop
xchg
in
punpckhwd
add
pop
aam
cmp
out
xchg
ja
stc
pop
into
mov
aad
imul
push
enter
sub
sub
push
sbb
and
pop
nop
xchg
push
jecxz
cmpsb
iret
shlb
jmp
dec
adc
mov
dec
mov
fisubl
out
cld
mov
enter
ficomps
xchg
shrl
shll
sar
add
dec
sub
mov
xchg
xor
sbb
out
adc
xchg
cli
pop
pop
cmp
add
mov
cmp
imull
ja
ljmp
rcrl
flds
shll
pop
jo
mov
scas
push
fxch
mov
orb
ret
les
cmpsl
out
insl
jae
mov
or
pop
repnz
lret
std
push
jnp
enter
leave
popa
jl
out
loope
in
jle
movsl
or
es
pushf
fincstp
xor
xchg
subb
inc
test
mov
test
jle
cmpsl
sub
mov
xor
call
jmp
jge
sub
pushf
push
sbb
stos
addr16
mov
cs
ja
pop
xchg
fnstsw
jb
out
cmpsl
scas
loopne
mov
leave
daa
sub
cld
shlb
fwait
cmp
mov
lcall
lcall
pop
push
data16
inc
pushf
add
js
mov
sbb
pop
xchg
shrb
clc
jns
in
je
jge
loope
sub
mov
movsb
aad
stos
add
dec
call
ss
lcall
testb
movsl
ja
lock
fcmovnbe
int3
mov
shll
cs
dec
cli
jo
jg
int3
lret
test
movsl
mov
mov
xor
addr16
jl
in
pop
aad
xor
pop
cmpsl
hlt
or
mov
lock
adc
andb
lock
xchg
sahf
mov
in
lret
or
mov
add
repnz
outsl
lcall
js
insl
sbb
mov
fistl
lea
mov
arpl
in
sbb
push
dec
test
wbinvd
cli
std
lods
add
scas
in
loop
sub
xchg
data16
jl
pop
mov
lret
cmp
xchg
ds
test
adc
movsb
shll
lods
xchg
or
inc
andl
sar
add
test
push
in
xor
dec
push
xor
lret
jno
das
jno
add
mov
repnz
sub
aaa
fcmovb
mov
xor
mov
dec
test
std
bnd
loop
jbe
mov
test
fscale
jns
jns
jae
push
mov
cmpsl
mov
or
cld
in
sbb
pop
inc
fsubs
cmp
dec
outsb
sub
jbe
add
push
pop
mov
xchg
sub
hlt
enter
outsb
flds
xchg
jb
ljmp
jmp
cmp
data16
add
loop
mov
stos
or
sub
int3
add
jecxz
outsl
insl
and
jge
jae
cmp
sbb
cmc
in
sbb
dec
cmc
jmp
rclb
inc
push
mov
das
test
idivb
xchg
xor
adc
jl
sbb
out
loop
imul
stos
js
push
dec
movsb
and
rorl
jnp
fwait
out
cmpsb
sbb
pop
in
mov
in
push
hlt
adc
aas
mov
xchg
jmp
aaa
ss
and
lcall
out
sbb
int3
sbb
outsl
clc
pop
loopne
adc
pusha
lcall
mov
popa
sub
lea
je
jg,pn
aaa
ja
lea
out
test
jnp
cltd
xchg
in
push
in
loop
push
ds
in
aaa
push
push
cltd
jnp
lahf
and
push
bound
arpl
loop
leave
test
popf
sti
popa
aam
and
inc
fistpll
xchg
adc
add
into
xor
in
push
jbe
test
arpl
pop
dec
add
xor
mov
sbb
push
mov
mov
lcall
out
mov
je
pop
sbb
inc
repz
shl
pop
mov
pop
mov
fldenv
jnp
rdtsc
icebp
push
push
sub
arpl
pusha
mov
lcall
and
dec
cs
mov
cmp
fwait
lret
cltd
mov
iret
loopne
out
ss
insb
jge
shll
movsl
jl
mov
add
cmc
mov
shrl
aam
mov
inc
cmp
jp
repnz
fwait
add
mov
sbb
and
cmp
xchg
sti
xchg
mov
stos
stos
cwtl
jmp
mov
inc
mov
inc
sub
adc
andl
adc
icebp
jne
daa
rcrb
aad
mov
leave
int3
cs
icebp
das
mov
in
inc
ds
adc
mov
inc
test
in
fdivr
and
icebp
cltd
xchg
imul
movsb
jge
mov
xchg
jge
and
push
sub
mov
or
pop
xor
fcoms
pop
or
notl
xchg
inc
mov
dec
dec
inc
or
pop
push
mov
ret
pop
stc
data16
or
mov
cmpsb
test
loopne
push
and
std
sub
ljmp
aas
repnz
jmp
cmp
imul
fs
sub
mov
mov
pop
pop
mov
dec
insb
hlt
xchg
sub
pop
xorl
aaa
xorl
sarb
xchg
push
mov
mov
cmp
dec
icebp
pusha
fstl
outsw
dec
jbe
pop
sub
sub
mov
xor
pop
inc
shlb
push
cmp
and
cwtl
and
mov
test
mov
lods
mov
mov
sbb
mov
movsb
lret
mov
imul
mov
dec
mov
mov
test
sbb
pushl
aaa
jno
idivb
sti
ret
mov
andl
outsl
add
push
test
fbstp
xchg
xchg
add
es
in
jle
shll
mov
pushf
ret
enter
lods
les
inc
in
inc
jp
jg
lcall
sub
popf
cmp
add
shrb
add
mov
in
xor
jmp
dec
jg
xchg
xor
xchg
inc
ffreep
test
jb
movsb
addr16
insl
addr16
jmp
inc
mov
xor
insb
mov
push
ret
push
sbb
fimuls
fwait
adcb
inc
or
lods
xchg
jno
or
xor
sub
ficoml
or
cmp
cmp
dec
push
cmp
lea
adc
pop
cmp
pop
jns
sub
test
insb
push
in
adc
js
jg
pop
xchg
ficoml
je
adc
mov
das
jne
gs
aaa
lea
add
call
jmp
cld
in
dec
mov
pop
adc
lods
jmp
and
nop
test
iret
or
int
test
xlat
dec
scas
movsb
mov
pop
cli
scas
and
cmpsb
adc
add
cmpsb
shll
sbb
rcrl
loop
xor
iret
or
ficompl
test
repnz
mov
xor
xchg
sbb
outsb
sub
fs
fcmovu
xchg
rol
xchg
daa
scas
add
pop
cmp
mov
and
pop
addr16
pop
add
daa
sub
xlat
push
lock
xor
fists
das
imul
les
mov
jl
lahf
mov
sub
add
pop
int
insb
arpl
inc
shrb
loop
add
and
mov
ljmp
std
push
pop
movsl
jo
insl
inc
stos
orl
dec
jo
lds
ret
lret
je
jae
inc
push
dec
test
mov
enter
mov
push
hlt
shl
repz
cmp
adc
outsb
push
mov
rorl
pop
dec
andb
pop
pop
daa
imul
jb
ss
movb
ret
inc
sbb
lcall
scas
dec
les
mov
data16
sahf
xchg
loop
or
push
dec
inc
pop
jnp
pop
addr16
sbb
fbld
add
or
inc
sbb
pop
dec
jecxz
js
iret
pop
push
mov
call
xchg
pop
mov
push
jmp
adc
addb
mov
adc
dec
push
cmpl
pcmpeqw
mov
mov
add
adc
xchg
inc
mov
sbb
and
dec
jmp
sbb
gs
lds
dec
adc
sub
fnstenv
adc
jl
mov
mov
test
add
jle
push
mov
dec
jo
std
outsb
stos
les
jecxz
fstl
es
shrb
xor
test
outsb
or
pop
xchg
pop
imulb
test
lods
fldt
or
daa
sub
test
jecxz
in
jecxz
or
das
sbb
movsl
sbbl
sub
push
cmp
and
or
mov
leave
subl
imull
stos
insl
addb
addl
in
pop
lret
popl
xor
je
iret
lods
jecxz
xchg
mov
sbb
sub
enter
andl
pusha
adc
lahf
filds
inc
mov
adc
inc
adc
int3
popa
sbb
or
mov
jge
fldt
mov
adc
jbe
sarb
mov
pop
cmpb
loope
rorl
das
scas
cmovbe
add
xchg
add
jo
ret
std
push
add
pop
std
ficoms
add
xor
js
adc
push
or
rolb
adc
sbbb
mov
pusha
lcall
int
out
push
adc
push
inc
push
ljmp
cs
push
insb
sub
cmpl
cmp
sti
xor
aad
imull
xchg
xchg
dec
xor
nop
add
xchg
mov
dec
jmp
push
jl
xchg
xchg
call
fndisi(8087
decl
insb
xchg
andl
mov
cltd
sbb
jg
mov
ret
fimuls
stos
lret
pop
in
and
pop
out
in
lahf
dec
inc
gs
pop
lahf
or
inc
bound
xor
arpl
inc
adc
pop
imul
sub
mov
sti
notl
test
and
rorl
dec
inc
imul
sbb
test
loope
jbe
hlt
or
addr16
mov
inc
dec
mov
arpl
push
push
xor
lret
mov
cs
xchg
adc
and
aas
adc
movsb
inc
pushf
outsl
leave
arpl
push
sbb
sar
rcr
sbb
scas
mov
pop
push
add
xor
daa
and
hlt
fists
cmpsb
test
xor
pop
pop
stos
sub
dec
in
mov
inc
outsb
cs
pusha
loopne
inc
mov
cli
aaa
sub
mov
jle
xchg
sub
pop
jl
ds
mov
pop
jno
mov
mov
mov
pop
loope
mov
xor
jbe
dec
push
mov
and
mov
out
dec
mov
inc
and
push
sbb
cmpsb
and
sarl
jns
xchg
hlt
mov
mov
and
dec
cs
out
or
or
fs
sub
subb
fiadds
push
iret
xor
into
and
inc
pop
clc
sbb
sbb
outsb
xchg
or
inc
out
adc
aam
mov
aas
push
das
jmp
iret
inc
pusha
xor
and
in
aaa
jnp
sbb
cwtl
movsl
arpl
or
jo
jg
insl
cwtl
repnz
cld
mov
xor
sub
mov
pushf
jbe
pop
adc
lds
leave
nop
fdivs
sbb
and
push
ja
inc
or
add
in
adc
xlat
pop
cs
outsl
jg
xor
aaa
hlt
xchg
hlt
cltd
add
sbb
insb
push
aas
add
pop
scas
dec
pop
push
aas
jne
aad
xlat
jae
xchg
mov
jle
mov
pusha
arpl
or
daa
out
and
lret
mov
jecxz
je
test
xor
insl
pop
icebp
jns
add
jp
test
xchg
pop
push
xchg
sub
xor
ja
in
mov
in
pop
in
sub
cs
lret
mov
lret
inc
stos
adc
pop
stos
sbb
repnz
xchg
add
xchg
int3
mov
pusha
sub
sbb
popa
dec
outsl
stos
cmpsl
inc
bound
sbb
mov
mov
cmpsl
push
sbb
test
insl
in
mov
mov
sbb
pop
loope
push
in
jp
jne
sahf
xchg
lea
adc
pop
lret
mov
sti
nop
fwait
mov
xchg
in
pop
into
xor
jo
sbb
shlb
fs
ret
cs
mov
inc
test
int3
push
lds
mov
ficoms
sbbb
cmp
imull
mov
sbb
jns
adc
jb
cmpsb
sub
pop
nop
jle
inc
pop
aam
xchg
out
sub
popa
mov
xchg
in
pushf
mov
lcall
fistl
lea
inc
mov
imul
inc
mov
jecxz
lahf
dec
popf
out
andb
movsb
cmp
cmc
shrl
mov
cmpsl
loop
inc
fsts
cwtl
lods
fadd
movsb
pop
xor
jbe
jnp
ss
popf
pop
mov
in
mov
aas
js
xor
mov
mov
pop
add
add
in
add
dec
add
imul
in
ss
fwait
or
mov
loopne
data16
ret
xchg
mov
sub
push
sub
ljmp
sbb
divb
adc
jb
int3
daa
push
jecxz
insl
pop
inc
stos
push
notb
sbb
dec
xlat
dec
mov
ret
inc
popa
xor
dec
ja
adc
pop
mov
sub
ficoms
and
dec
jl
cmovs
imul
lods
std
and
out
mov
inc
in
aad
fcoms
dec
or
xor
push
mov
cmp
scas
lock
mov
int
and
jecxz
fstl
xchg
popa
cmp
xchg
jp
jae
ja
into
fidivs
adc
cmp
int
lock
fcmovnb
mov
and
mov
push
dec
sub
lock
ds
adc
push
repz
add
xlat
mov
mov
add
rcll
or
subl
decl
xlat
das
add
cltd
push
imul
sbb
or
cmc
xchg
jb
frstor
inc
fildl
pop
xor
adc
nop
std
repz
sub
sbbl
or
push
jp
orl
ds
icebp
cmp
mov
push
int
jnp
vmread
cmp
or
dec
mov
push
call
xchg
inc
or
jb
pop
in
mov
jecxz
fiadds
push
pop
cs
jmp
cmpsl
dec
out
add
in
bound
jae
loop,pt
lock
xor
xchg
mov
mov
mov
int
add
rorb
sbb
mov
out
mov
rorl
aaa
ret
test
and
inc
cmp
aas
mov
stos
repz
pop
inc
je
loopne
push
scas
lods
dec
jno
decl
insl
push
fistps
xchg
add
or
psubq
sub
pop
fdiv
and
fdivs
ds
arpl
mov
mov
int3
shrb
mov
out
lds
aas
sarl
cmp
mov
ds
push
clc
stc
clc
call
inc
test
push
gs
jb
adcb
mov
mov
pop
or
dec
mov
lods
mov
xor
sbb
lods
jg
rcrb
fcmovu
pop
decl
add
jbe
mov
out
shrl
sbb
jnp
cmpsb
pop
rcrb
mov
inc
lret
test
in
cmp
cmc
mov
mov
push
add
arpl
in
jp
cmpsl
jmp
shlb
lea
cmp
and
divb
dec
dec
or
fnstsw
jne
int3
add
mov
daa
xchg
orl
outsl
jle
in
adc
cld
ret
mov
push
loope
cmpsb
inc
out
mov
mov
dec
jbe
pop
scas
xorl
xchg
xor
stc
jns
fldl2e
cli
cwtl
inc
enter
inc
add
adc
fnsave
adc
test
fdivrs
imul
jecxz
insl
mov
stc
aaa
xor
into
dec
sub
repz
jmp
mov
loope
add
adc
cmpb
pop
lods
fcmove
movsl
xor
jmp
cld
mov
loope
outsb
repz
pop
in
sub
aam
repnz
sarb
bound
mov
adcb
push
js
and
clc
sub
mov
inc
imul
add
sub
test
push
sbb
jae
mov
sub
jno
lock
or
hlt
mov
adc
pop
inc
mov
push
inc
mov
rol
ret
cs
test
test
int3
sub
gs
and
inc
loop
pop
lcall
xchg
xlat
out
divl
xchg
inc
fcom
mov
std
add
push
ds
sarb
movsl
cmp
xlat
jl
andl
in
test
xlat
iret
add
inc
ficoml
in
xor
push
cmpsb
les
jb
aaa
sbb
dec
push
sbb
mov
pop
pop
xor
jle
test
pop
dec
mov
andb
in
gs
lret
loop
xchg
sahf
or
cli
lcall
popf
xchg
loope
repz
js
adc
push
sub
inc
xor
mov
jge
add
mov
scas
imul
sub
sub
or
jb
add
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
fcoms
bound
pop
bound
xor
test
cmp
mov
inc
push
loopne
rcrl
mov
ljmp
pushf
dec
adc
subl
sarb
dec
mov
out
push
imul
fists
out
dec
mov
mov
push
into
sub
cmp
orl
dec
jne
ljmp
arpl
cmp
orb
lods
push
das
mov
push
lods
mov
mov
mov
cmpsb
jecxz
stc
mov
jge
shll
or
mov
dec
lret
bound
lret
sub
push
mov
into
jmp
inc
mov
arpl
movsb
lcall
fs
sbb
and
fs
aad
call
out
or
jp
movsb
popa
inc
lock
push
push
addr16
xchg
jo
xchg
stc
das
aad
not
sub
nop
add
and
xchg
ds
xchg
pop
aas
xchg
int3
fcoml
jmp
inc
mov
sbb
jmp
mov
ror
jo
add
iret
shr
inc
xchg
sub
lods
enter
cmpl
mov
dec
cld
fnstenv
xchg
outsb
sbb
pop
psubusw
inc
testb
cmp
dec
push
insb
arpl
push
mov
leave
repz
imul
cmp
xor
jp
or
mov
add
lods
adc
xchg
fidivrl
aaa
loop
add
ret
dec
pusha
xor
add
repz
adcb
pusha
xchg
cmp
mov
mov
push
cmp
lcall
add
movsb
mov
jge
addl
fwait
cmpsl
xor
fcomp
sub
xchg
pop
fwait
jmp
nop
mov
sub
pop
out
fcoml
dec
out
add
inc
jno
mov
rorl
push
repz
sbb
dec
mov
insl
push
push
jb
pop
sub
popa
push
cwtl
sub
dec
nop
int3
cmpl
xchg
jbe
sub
cmc
jg
inc
int
xor
jne
mov
mov
fld
fstpl
pushf
sub
aam
roll
pop
fdivrs
loope
lret
pop
jmp
dec
dec
popa
cmp
out
cmp
sub
sub
je
dec
pop
fwait
cmp
andb
test
xor
imul
adc
dec
sub
adc
dec
fxam
popa
xchg
leave
mov
push
pop
loop
and
lds
movsl
mulb
mov
adc
insb
ss
inc
lahf
loopne
xor
jecxz
adc
add
dec
add
ja
cmc
xor
sbb
int3
cmc
jo
arpl
xorb
ja
inc
mov
fsubl
and
mov
dec
lahf
pop
mov
shll
movsl
sub
inc
or
adc
or
and
incb
sbb
sbbl
jge
push
out
pusha
pusha
loop
adc
mov
fdivrl
sub
jle
or
testl
or
icebp
xor
mov
xor
xor
rcrl
rcrb
adc
into
sbb
data16
and
push
push
sti
out
pop
xor
sbb
stos
enter
test
jp
jmp
cmc
cmp
imul
mov
xor
and
mov
push
and
inc
sbb
cs
rcl
mov
mov
rcll
les
push
adc
jg
jnp
jg
add
mov
inc
sbb
push
mov
adc
or
push
leave
int3
xor
sbb
cmp
dec
xor
pop
xor
pop
cli
jp
insb
jp
loop
sti
or
add
jnp
cli
cmp
jmp
pop
hlt
mul
push
or
xor
xor
pop
xor
iret
sbb
cmpsb
cmp
cmp
inc
jp
daa
mov
insb
mov
mov
dec
movsb
xchg
pop
push
mov
mul
mov
cmpsb
adc
jb
dec
mov
inc
jg
mov
pop
push
inc
rclb
movsl
pop
mov
out
inc
sbb
or
leave
icebp
cltd
jno
lret
cmpsl
sbb
push
fnstenv
leave
inc
repz
sarl
cmp
mov
sub
fimuls
and
lahf
cmp
adc
hlt
stc
daa
cmp
dec
iret
mov
roll
and
fxam
fs
add
inc
mov
ja
bound
cmp
lods
push
push
popa
es
fadds
push
out
adc
or
pop
jle
mov
popf
lods
stos
movl
push
mov
mov
xor
shrb
mov
rorl
dec
sub
cs
fbld
stos
adc
rcll
int
sub
std
addl
and
xchg
add
repnz
pop
movb
cmp
inc
enter
dec
sbb
push
bound
cwtl
cli
in
popa
pushf
cmp
pusha
or
aam
insb
mov
xchg
sbb
pop
loopne
pop
repnz
adc
mov
or
inc
sbb
pop
pop
pop
and
jo
mov
aam
cmovs
es
fisubrs
pop
push
mov
mov
clc
xchg
enter
clc
sbb
es
xor
aad
cmpsb
cli
fstl
jno
adc
cmpsb
lcall
cwtl
cmp
xchg
inc
int
out
adc
xchg
sub
shlb
std
sti
xor
stos
mov
jne
popf
cmp
sub
jae
mov
lahf
in
inc
cmpsl
pop
cli
ficoml
jle
pop
pop
and
dec
add
inc
loop
repz
test
cltd
or
in
fnstsw
mov
aad
mov
stc
aad
push
inc
mov
imul
loop
pop
fisttpl
sub
lret
pop
lds
decl
lcall
push
decb
cmpsb
mov
sahf
sti
hlt
enter
sub
insl
lea
and
sbb
into
repnz
sub
in
loop
mov
jne
pop
jp
inc
push
pusha
cmp
test
xor
xor
xor
cmp
cmp
jmp
lods
sahf
gs
and
mov
fdivrl
mov
add
dec
sub
js
clc
neg
sbb
in
sbbb
jno
sub
leave
dec
cmp
cltd
out
push
inc
in
inc
inc
mov
in
lds
or
stos
lods
xchg
imul
dec
fisubs
fistl
push
jge
mov
cwtl
lahf
jo
pop
add
xchg
shlb
fstl
inc
in
cmp
sbb
mov
adc
and
sub
cmc
push
jp
imul
addb
and
lcall
or
cmpl
es
popf
icebp
xchg
fistl
repz
or
xchg
test
addl
in
xlat
lock
je
ljmp
cwtl
popa
jno
enter
and
dec
mov
push
aas
dec
inc
cmpsb
lea
enter
mov
out
lds
pop
cmp
mov
in
xchg
xchg
stc
adc
js
icebp
xchg
clc
je
jl
rorl
xor
jns
shrb
and
xchg
sbb
sarb
stos
int
fcmovnu
das
neg
adc
pop
xorb
lock
stos
int3
mov
dec
or
es
rorl
pop
jnp
push
mov
jecxz
sub
aad
shld
mov
inc
push
jecxz
xor
push
arpl
fbstp
jecxz
outsl
push
fcoms
cwtl
in
mov
ds
loope
sub
jp
push
dec
add
shr
das
mov
lret
repz
test
lahf
loope
and
ret
add
pop
mov
mov
addb
and
movsb
sub
loope
int3
fwait
push
cmp
xchg
aaa
call
xor
movsb
sub
dec
mov
rcll
jns
iret
popa
adc
xor
aaa
test
jle
add
push
std
aad
fstps
inc
sbb
js
sub
arpl
or
mov
sti
mov
cmc
cmpb
adc
orl
push
xor
jle
aas
movb
xlat
sbb
sbb
scas
pop
insl
inc
mov
mov
pop
jg
inc
shrl
into
xor
mov
sbb
fistpl
mov
cwtl
mov
pop
stos
or
outsb
mov
sub
nop
addr16
idivl
dec
or
fistps
cmc
jp
cmp
int
cltd
pop
ss
loope
dec
test
sbb
idivb
dec
in
mov
pushf
icebp
imul
popa
sbb
out
stc
loopne
mov
xor
xchg
xor
outsb
pop
inc
lods
add
imul
popl
mov
fwait
inc
jp
sbb
mov
cwtl
bound
pushf
pop
mov
jge
xchg
je
xchg
je
ret
mov
clc
lods
mov
scas
pop
repnz
pop
cwtl
mov
mov
cmc
movsl
scas
out
repnz
mov
adc
cmp
jb
mov
mov
rcrb
and
mov
sub
add
pusha
inc
xchg
push
fildl
dec
push
dec
sti
sbb
xchg
pusha
sub
lock
sbb
jb
insl
shl
pop
sub
mov
jg
icebp
or
mov
inc
movsb
hlt
fdivrl
pop
out
pop
jnp
call
jge
movsb
inc
add
pop
add
push
jl
je
pop
sbb
jg
iret
jo
push
jge
out
mov
xchg
inc
push
xchg
inc
xchg
cmc
leave
or
sbb
lcall
push
sub
jg
jge
std
sti
scas
aaa
xlat
dec
sbb
push
repz
adc
cmp
call
cmp
icebp
cmp
xchg
fnclex
test
in
sahf
mov
clc
dec
adc
inc
int
imul
mov
sub
cmp
jns
or
out
insb
jecxz
test
push
pop
out
dec
scas
inc
cmp
sbb
mov
and
lcall
mov
adc
mov
mov
sbb
imul
dec
idivb
jge
and
fmull
movsl
jne
xor
add
mov
mov
das
mov
sbb
fistpl
pop
aad
jmp
loopne
inc
es
hlt
and
into
mov
sbb
repz
mov
cmpsl
mov
pusha
mov
in
ds
push
pop
pop
sti
jmp
mov
fldl
pusha
jnp
data16
sub
xorb
cmpsb
out
xchg
ja
adc
sub
mov
push
addr16
jle
fucomp
dec
out
idivb
push
push
cmp
mov
mov
mov
insb
jg
push
pop
repz
dec
sbb
aad
fnstsw
imul
xor
sub
ljmp
xchg
adc
popf
mov
bound
inc
inc
jnp
repnz
cmc
jg
pop
inc
push
pop
xchg
add
add
enter
loop
sti
ja
je
das
cmp
sub
sarl
aad
mov
dec
pop
inc
loopne
std
cli
test
mov
lret
mov
out
sbb
lea
cld
jns
pop
jmp
sbb
fidivrs
mov
sbb
aaa
nop
jnp
int3
adc
aaa
cmovnp
push
lea
push
push
fdivrl
push
and
adc
cmc
fst
mov
mov
aad
pop
push
dec
jns
jnp
inc
and
clc
arpl
push
in
xchg
or
xor
test
icebp
adc
mov
cmp
lea
sbb
stos
cmp
sbb
push
mov
aaa
or
outsb
ljmp
test
or
jns
push
pop
cmpsb
or
mov
in
pop
mov
in
mov
sub
stos
call
es
push
jp
in
inc
add
icebp
test
stos
sbb
lock
rolb
cwtl
fsubrp
mov
inc
fs
loop
or
dec
xor
int
cwtl
add
imul
and
add
in
xor
imul
push
das
test
mov
inc
or
inc
cmp
sbb
ror
xorb
pop
adc
xorl
scas
repz
xchg
fs
inc
insl
pop
or
popf
or
out
movsl
sub
cli
daa
and
pop
push
mov
dec
sbb
inc
push
mov
add
xchg
xor
inc
or
push
gs
out
pop
pushf
movsl
out
xchg
repnz
daa
lods
aad
insl
jne
mov
aam
icebp
or
cs
or
or
pusha
ret
adcl
adc
push
jmp
ret
push
mov
test
sbb
je
sub
pop
mov
jg
cmpsb
sbb
cmp
mov
fildl
push
stc
sbb
lods
cmpsl
iret
fildl
mov
xchg
dec
add
jmp
lock
mov
dec
lods
mov
sbb
leave
mov
push
xor
aas
shrl
xor
jp
mov
loope
stos
das
fisubrl
enter
jnp
out
std
int
dec
jo
mov
shlb
mov
mov
dec
in
out
shrb
and
repnz
and
ret
xor
sarl
sub
addr16
mov
sub
sbb
out
push
pop
adc
out
test
dec
outsl
fcomip
fwait
inc
fnstsw
xchg
ret
mov
jl
dec
inc
popf
sub
push
mov
stc
jmp
mov
cwtl
xchg
cmp
and
sbb
ljmp
ret
or
bound
shlb
push
jno
cmovno
xchg
sbb
cwtl
add
pop
mov
dec
add
xor
mov
cmp
push
in
enter
xor
adc
clc
movsb
aaa
dec
and
push
jns
push
pop
pop
pop
sub
lcall
mov
dec
cmp
std
aam
sarb
cmpsb
add
mov
xor
pop
ret
rcll
xor
clc
jmp
in
mov
mov
mov
dec
dec
or
add
mov
jge
imul
xchg
flds
add
or
push
fs
stos
xor
fdiv
sub
inc
jge
push
insl
and
push
bound
xorl
sbb
push
or
repz
gs
cltd
scas
imul
fisttps
aam
mov
repnz
aad
repz
scas
repnz
dec
mov
mov
loopne
loope
cmp
popa
mov
sahf
in
push
fmuls
int
mov
int3
in
ror
mov
pop
adc
fbld
mov
dec
add
gs
mov
jbe
incb
ret
inc
inc
mov
ficompl
notb
into
in
and
pop
imul
xchg
adc
sub
push
mov
enter
pop
pop
aam
movsl
inc
daa
cwtl
dec
fisttps
lcall
jnp
out
mov
lea
sub
and
xchg
fwait
inc
popf
enter
xchg
in
call
inc
jl
outsb
push
mov
add
rclb
notb
mov
sbb
pop
insb
and
rcrl
xchg
push
sbb
sub
mov
pop
fdivrl
leave
jmp
jae
mov
adc
test
sub
lret
sbbl
lds
sbb
sbb
or
or
sub
adc
addr16
sub
in
push
push
sbb
test
int
aad
jle
bound
xor
xchg
popf
mov
adcl
jae
jle
mov
aam
out
and
in
push
js
sahf
pusha
sbb
add
or
aad
push
gs
mov
cwtl
or
or
ljmp
mov
dec
mov
loopne
fildll
idivb
stc
out
lods
mov
fldt
les
test
lahf
aaa
into
dec
pushf
adcl
xchg
cmpsb
pop
mov
leave
sub
lods
mov
pop
in
dec
in
ret
imul
push
movsl
gs
mov
lcall
inc
sbb
in
dec
dec
in
leave
or
sbb
fistl
insl
push
jmp
inc
ds
jns
jp
jne
scas
pop
xchg
inc
mov
push
mov
test
cmpsb
pop
adc
sbb
faddl
mov
pop
cwtl
sub
push
call
ficoml
subb
int3
sub
sub
jnp
pop
sbb
push
les
mov
in
shlb
sbb
push
dec
ficompl
bound
lods
sbb
daa
mov
bound
push
popf
xchg
jmp
dec
add
ds
imul
jo
pop
scas
cs
sti
data16
pop
js
shlb
jbe
mov
inc
ret
and
pop
call
out
shlb
nop
mov
imul
shlb
jmp
clc
fildl
xchg
lret
mov
jno
fildll
pop
jns
loopne
lret
test
inc
or
es
fisubrs
mov
pop
loop
daa
xor
mov
lock
pop
add
imul
sub
cmp
sub
or
lods
mov
outsl
mov
stos
dec
push
int
pop
pusha
sbb
push
sub
sbb
mov
ss
mov
cmp
repnz
sahf
cmp
pop
or
mov
es
mov
outsl
cli
pusha
mov
pop
xchg
mov
cld
or
ret
gs
jno
lret
jmp
iret
fsub
xchg
clc
test
push
bound
lret
ret
xlat
call
xorb
test
cmp
clc
ja
pop
in
enter
ret
mov
inc
clc
or
dec
mov
pop
sub
pop
negl
movsb
lods
push
lods
cltd
icebp
pop
fldt
sub
shlb
fiaddl
jae
or
and
lret
jbe
mov
testb
jle
rol
subb
shrl
xor
jno
jb
rcl
stos
ja
popl
jb
inc
sbbl
fld1
out
in
test
imul
xchg
stos
aad
lret
add
jno
nop
in
cmp
inc
inc
das
mov
sub
jl
adc
mov
cmpsl
lds
lahf
push
sub
sub
subb
push
into
dec
jmp
dec
imul
insb
jo
push
dec
push
imul
mov
test
pop
push
fildll
xchg
lea
cltd
adc
imul
into
cld
mov
inc
mov
jecxz
nop
enter
jg
fdivl
je
pop
ret
flds
ds
pop
mov
je
jno
dec
and
fadd
fdivrl
lods
jecxz
jne
fst
jecxz
xor
sbb
mov
out
and
inc
adc
mov
add
aaa
cld
dec
push
inc
cli
pop
mov
imul
enter
push
mov
out
ds
cmpsl
andl
xchg
mov
leave
jbe
cli
sub
test
dec
jae
xchg
scas
adc
xchg
mov
negl
shrb
cmp
pushf
xor
sbb
sbb
das
lret
call
test
jbe
sti
sbb
cmc
call
scas
insb
or
pop
jmp
and
sbb
add
cmpsl
ss
and
adcb
jae
popa
ret
mov
fsubp
shl
stos
movsl
push
test
jae
enter
repnz
add
cltd
sub
lods
and
adc
jl
mov
divl
out
mov
cmpsb
pushf
cmc
jle
dec
dec
ds
aam
sub
cmpb
cmc
pop
ds
jne
mov
into
adc
jne
dec
sahf
iret
jmp
es
or
in
rol
sbb
xor
aaa
jae
out
mov
in
mov
ss
xchg
lds
ret
jae
js
jb
pop
rcrl
iret
and
or
xor
and
movsl
jge
scas
lret
add
jl
push
scas
js
fs
inc
loopne
repnz
sbb
jle
jbe
and
sbb
lods
mov
out
imul
insb
gs
adc
call
xor
mov
imul
or
repnz
nop
sub
leave
inc
das
loop
add
mov
iret
pop
insl
repnz
shll
jne
sbbl
adc
daa
popf
ret
aam
in
cli
push
test
fisubl
jecxz
or
cmp
add
mov
cltd
dec
jns
sub
pop
mov
repnz
jnp
leave
push
sub
sbb
sbbb
stos
mov
push
push
shrl
dec
cmpsb
mov
xchg
scas
mov
pop
iret
fmulp
in
mov
fnstcw
ror
adc
outsb
xchg
mov
ss
stos
add
out
or
push
js
dec
cmp
mov
sub
enter
dec
stos
je
lods
cmp
push
in
ljmp
stos
and
and
nop
pop
std
dec
pop
sahf
jmp
rol
mov
push
pop
repnz
lcall
push
jecxz
dec
cmp
ret
sbb
cmp
ror
cmp
cmpsb
repnz
or
dec
imul
sub
dec
or
cmp
dec
mov
cmp
in
in
cld
fbstp
mov
hlt
jae
into
jne
in
jecxz
push
repz
cltd
xor
push
imul
jbe
adc
adc
xchg
push
xor
test
adc
stos
inc
adc
cld
pop
mov
loope
mov
pop
pop
push
xchg
lods
repz
xor
repz
push
in
js
mov
adc
jge
test
cmpsl
xchg
push
mov
sti
xchg
test
les
dec
or
ss
insb
jmp
sub
xchg
mov
filds
and
in
push
inc
insl
aam
mov
insb
jno
cmp
add
adcb
lock
dec
std
pop
dec
mov
push
or
jecxz
icebp
mov
mov
sbb
clc
push
out
push
in
push
xlat
mov
cltd
gs
enter
mov
push
bound
jecxz
dec
mov
fdivr
test
push
mov
push
adc
popf
sti
outsb
lods
jge
cmp
test
inc
adc
inc
lods
push
adc
add
mov
lods
ret
loope
xchg
ret
test
push
mov
popa
pop
cli
es
in
sub
sbb
sbb
xchg
lcall
xor
jo
inc
adc
test
xor
cmp
lcall
jno
imul
pop
jl
jne
stos
and
jne
outsb
dec
repz
adc
mov
cld
xchg
imul
lahf
xor
lahf
addr16
iret
add
adc
or
jno
das
data16
imul
sub
cmp
push
and
jg
and
arpl
inc
xor
notl
popa
icebp
cmp
cmp
push
and
jns
inc
pop
pop
shll
outsl
xchg
xchg
les
arpl
jmp
jbe
inc
stos
leave
or
dec
and
fcmovnb
mov
imul
add
adc
add
xor
into
icebp
lds
outsl
cmc
addl
faddl
xchg
test
aas
and
movsl
adc
dec
loope
inc
mov
sub
mov
push
jno
push
fistpll
jp
xchg
fimuls
jl
dec
mov
jp
jo
push
cmpsl
cltd
jge
xor
adc
push
mov
cmp
outsl
or
movsb
ficoms
pusha
out
and
fcmovnb
not
xor
inc
adc
test
mov
and
and
out
xchg
ja
shr
sbb
lret
or
hlt
and
push
insb
mov
sahf
sbb
pop
jmp
in
push
in
cmpsl
sbb
fs
mov
fcomi
jp
add
and
sahf
sub
lret
shrl
sub
sbbb
push
cwtl
in
xchg
sbb
push
mov
fsubl
imul
cli
test
icebp
push
jo
daa
sub
ljmp
popa
movsl
mov
fsubr
hlt
shll
js
cmp
dec
lcall
xchg
scas
push
xchg
gs
cmp
push
pop
ficoms
inc
xchg
cmp
jbe
test
jecxz
mov
sub
lret
dec
hlt
out
iret
shr
imull
cmc
xor
sub
rcrl
stos
int3
into
sub
mov
mov
cld
dec
sbb
rcrl
or
rorl
cmpsb
sbb
dec
or
lds
ds
push
mov
das
sub
out
mov
inc
add
mov
mov
jae
dec
sub
ror
cmp
adc
insb
push
push
inc
ljmp
inc
int3
push
in
push
adc
push
and
test
add
mov
push
stos
jne
jmp
mov
sbb
add
daa
pop
or
insl
pop
pop
pop
cltd
cmp
outsl
aaa
mov
xchg
lahf
pop
mov
add
jge
mov
and
out
mov
outsl
dec
test
std
mov
fs
incl
js
pop
insb
and
enter
mov
inc
sbbb
int
jg
sub
push
xchg
shlb
push
cmpl
je
dec
push
into
add
loopne
rorb
jne
push
clc
push
outsl
dec
ret
pop
xchg
jns
sbb
push
subb
cli
sub
insb
adcb
lahf
or
push
pop
jb
add
cwtl
std
lcall
test
popf
es
push
fldt
cmp
xchg
mov
fisubs
pop
jns
adc
mov
sub
adc
dec
in
andb
pop
cmp
sub
ret
adc
push
fisttps
adc
jecxz
sub
je
lret
orb
mov
add
ss
and
lea
jg
lahf
decl
imul
jp
les
rorb
jbe
in
repz
adc
cmp
in
test
jo
mov
aaa
push
aaa
sub
xchg
mov
inc
mov
jns
imul
cmpsl
push
add
in
mov
int3
fdivrs
or
add
or
movsl
xor
cwtl
push
ds
pop
sbb
or
decb
cwtl
xchg
sbb
xchg
dec
subl
lds
mov
and
and
push
jmp
xchg
movsl
aad
inc
icebp
movsl
inc
stos
loope,pn
insb
aam
adc
cmp
or
mov
mov
shl
addr16
out
insb
and
lods
aam
add
pop
not
ljmp
push
ret
call
dec
lret
mov
mov
int
mov
sbb
popa
icebp
lcall
jne
out
stc
lcall
fidivs
in
pop
lret
and
lret
dec
sub
call
add
mov
push
cs
stos
cmp
or
test
orb
add
inc
pop
pop
notl
pop
daa
xchg
repz
inc
xchg
repnz
movsb
in
sbb
jl
cmp
add
mov
mov
or
pushl
cmp
and
or
xchg
mov
mov
mov
sbb
mov
lea
and
popa
cli
jno
or
movsb
mov
cmp
cmp
sahf
ja
push
repnz
adc
pop
daa
xor
and
adc
dec
mov
dec
mov
je
fwait
mov
push
lods
jecxz
or
or
sbb
sub
jae
mov
add
mov
jb
mov
lods
adcl
jp
xchg
mov
iret
dec
xchg
mov
jecxz
jbe
mov
loop
push
lret
cmp
mov
mov
dec
or
adc
addr16
movsl
jo
cli
das
sbb
stos
incb
pslld
xchg
test
inc
sahf
std
lea
sub
add
fstl
mov
sub
pop
dec
xlat
into
mov
cmp
xor
mov
and
mov
addr16
dec
repnz
lds
inc
fnstcw
cmc
and
mov
jb
test
pop
shl
or
mov
arpl
pop
push
ret
fucomp
jecxz
pop
lea
test
dec
rorl
adc
outsb
sbb
pop
enter
push
add
fcoml
inc
test
mov
mov
dec
loopne
xchg
dec
in
dec
jb
rclb
jne
ret
rcrb
mov
mov
rcll
ss
sub
mov
xor
sbb
popf
lret
jl
call
orb
cmpsl
jl
repnz
popa
movsb
out
cmp
lea
push
mov
movsb
fs
xchg
rcrl
inc
pop
test
jae
push
sti
mov
xlat
push
xchg
or
cli
and
aas
jo
adc
jo
call
inc
push
test
data16
test
ds
dec
cmp
shlb
cmp
pextrw
sub
nopl
outsl
mov
inc
aas
mov
fwait
ret
popa
mov
xchg
and
and
jae
nop
inc
xor
sub
sub
push
ret
cmpsl
mov
xchg
insb
out
insl
fisubl
mov
add
mov
and
jp
jg
cli
sbb
xchg
xchg
and
jnp
outsl
xchg
movsb
dec
or
add
mov
adc
xchg
js
cmp
jmp
xchg
xchg
or
mov
jle
push
es
test
adc
sub
sahf
movsl
jle
sarb
lods
xchg
cmc
adc
mov
call
pop
in
or
cmc
lods
imul
pop
fst
or
xchg
mov
mov
std
pop
movsb
jp
clc
ss
pusha
adc
sahf
adc
jle
out
add
inc
adc
xchg
aaa
add
sbb
aas
inc
inc
jbe
jnp
movsl
iret
jb
cmpsb
cmpsb
clc
sahf
adc
xchg
loope
xor
int3
cmp
xor
mov
es
xor
jecxz
scas
add
sti
stos
add
shl
dec
in
test
dec
test
jae
push
mov
push
push
sub
push
mov
pop
insl
stos
stos
pop
sahf
add
insb
jl
fdivrl
xor
push
pop
out
push
repz
shll
repz
xor
push
xor
jne
or
pop
pop
ret
push
gs
imul
roll
push
cld
gs
loop
pop
mov
inc
mov
fs
fcom
iret
sub
test
das
cmp
ljmp
imul
jo
mov
push
fcoms
sbbb
or
dec
cmc
sub
mov
and
insl
push
jbe
mov
les
rep
jg
cmp
xchg
out
rcl
in
dec
dec
xchg
xor
adc
loopne
in
fldt
mov
shl
scas
mov
add
imul
ret
rorb
arpl
sbbb
dec
aaa
testb
and
std
adc
jno
add
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
test
push
push
ret
jmp
bound
inc
mov
xor
dec
mov
adc
mov
mov
pop
mov
jne
push
in
mov
fdivrl
mov
add
ds
push
pop
dec
ret
mov
fisubrl
mov
jl
mov
shll
dec
mov
clc
xor
imul
xor
mov
or
sbb
jp
push
fs
popa
adc
or
xor
add
aam
mov
push
mov
outsb
in
jno
mov
xor
jno
xlat
jg
shll
xor
shrb
pop
test
mov
jle
pmulhuw
insb
mov
nop
test
cmpsl
xchg
add
push
movsl
xchg
lahf
dec
scas
loopne
xor
inc
dec
loopne
popf
cs
push
or
cmp
inc
lea
add
inc
shll
rorb
stos
add
jmp
mov
popa
mov
scas
adc
inc
xchg
enter
loop
fnstsw
sub
sub
pop
stos
or
cmpsb
push
xor
jb
leave
or
add
das
pop
push
pop
scas
ficoms
mov
xchg
loop
jl
hlt
int3
jle
movsl
jecxz
lds
dec
scas
push
add
mov
cltd
add
in
data16
sub
movsl
jge
xchg
jnp
in
jo
mov
lds
dec
mov
ljmp
jge
push
inc
es
push
cwtl
sub
push
jecxz
push
cmp
jbe
xchg
icebp
addr16
jno
cmp
repz
popa
push
and
push
mov
and
aas
xor
rolb
mov
fistl
mov
dec
popa
call
fnsave
pop
mov
ret
mov
jb
fadds
daa
call
add
pop
nop
mov
cmpxchg
adc
mov
push
in
push
lds
dec
mov
adc
pop
mov
sbb
lcall
repz
push
mulb
daa
inc
lret
add
lcall
push
imul
ret
lea
cwtl
jae
stos
xchg
or
gs
fidivs
xorb
das
das
cltd
sti
rcll
mov
mov
mov
dec
adc
mov
test
pop
cmpsb
lods
push
xchg
lea
xchg
movsb
mov
sub
out
cmc
movsl
popa
shlb
mov
or
jne
dec
mov
pop
shlb
push
xor
mov
xor
cld
cmp
and
push
fs
enter
clc
scas
fptan
dec
xchg
pop
xor
scas
inc
cmpsb
addr16
inc
sub
jne
jge
mov
mov
mov
sbb
dec
repz
in
es
lds
sub
aad
daa
out
jmp
adc
xchg
js
inc
mov
jns
hlt
fidivl
jno
jno
ret
jle
insb
scas
std
pushf
xchg
std
mov
jb
bound
or
inc
jp
or
push
shll
mov
and
inc
fnsave
and
jle
xor
gs
pop
call
icebp
add
jp
out
add
xchg
jp
fs
js
jp
add
xchg
mov
mov
push
push
mov
inc
jmp
insb
ss
imul
sbb
xchg
jb
mov
ret
xor
rcrb
and
sbb
addr16
jle
insl
cmpsl
or
iret
roll
push
sub
or
pandn
rol
aam
je
adc
fbld
and
or
in
cltd
mov
insl
jl
stc
loopne
in
sub
sub
push
daa
and
out
pop
sbb
enter
xlat
sub
or
sahf
add
sbb
or
lock
roll
adc
dec
mov
clc
cmpsb
popa
cmp
push
fimuls
and
aaa
inc
lds
and
xchg
dec
push
cmp
or
incl
or
jmp
outsl
inc
roll
mov
inc
push
dec
mov
cmp
mov
pop
repz
ret
leave
leave
rorl
xchg
imul
push
mov
rorl
cmp
outsb
ficoms
add
dec
icebp
sbb
xor
cli
test
jmp
sbb
mov
nop
push
or
mov
and
rcll
xchg
pop
dec
jbe
mov
push
addr16
aam
sbb
adcb
loope
lods
scas
ds
adc
fdivrs
sbbl
sub
mov
xchg
and
test
lods
daa
cmp
xchg
mov
adcb
or
mov
aam
in
pop
and
mov
inc
sbb
or
dec
icebp
xor
enter
lret
cwtl
addr16
mov
lret
jns
ret
cmp
dec
sbb
mov
or
fistl
adc
clc
popa
jo
loope
mov
cmp
mov
faddp
push
in
jnp
dec
ds
pop
les
jne
mov
or
sub
and
mov
push
xchg
scas
push
daa
pop
mov
mov
push
dec
nop
adc
shlb
xor
loope
jg
adc
and
sti
xor
cltd
and
mov
ja
sbbl
inc
idivl
outsb
je,pn
push
es
sbb
movsl
cmpsb
fsubr
ds
in
popf
sarl
xchg
fsub
jbe
jb
and
cmpl
and
out
dec
icebp
mov
cmp
testl
vpmovzxdq
jecxz
lea
pop
js
insl
aam
pushw
testb
stc
and
scas
inc
jl
xor
adc
fucomi
or
jge
lret
stos
clc
aas
xor
ss
push
pop
jb
and
in
cwtl
cmp
test
push
xorb
dec
jmp
icebp
imul
cmp
sarb
mull
filds
mov
int
fisubs
sarb
dec
inc
ret
pop
fbstp
mov
dec
sbb
mull
sbbb
mov
sbb
outsl
loope
std
mov
es
inc
push
into
adc
adc
jns
jmp
repz
fmull
xchg
or
and
mov
ret
inc
pop
cmp
cmc
leave
and
inc
mov
stos
xor
arpl
adc
jo
push
sbb
pop
subl
fcompl
jecxz
fimull
sub
mov
dec
dec
insl
adc
mov
arpl
movsb
dec
repz
inc
jl
daa
xor
hlt
adc
fxch
out
rclb
add
cmc
xor
and
pop
push
push
imul
loope
mov
xchg
sbb
sub
inc
mov
lret
andb
mov
mov
xchg
jb
adc
dec
data16
inc
xchg
mov
cmp
sahf
pushf
add
adcl
pop
xchg
je
shr
and
jg
jmp
xor
scas
pop
xchg
popa
mov
push
mov
movsl
imul
fcompl
addl
imul
idivb
shll
loope
fisttpll
imul
dec
cwtl
dec
scas
pop
xchg
in
xor
daa
mov
clc
lods
and
jl
cwtl
jl
dec
inc
pusha
je
and
mov
test
ljmp
out
sbb
scas
lcall
cmp
dec
cmp
repz
jge
out
inc
cmc
add
jnp
call
jae
dec
dec
bound
jbe
push
mov
mov
and
insb
dec
outsl
mov
add
jnp
cmp
leave
es
add
jl
daa
pop
rcll
insb
adc
mov
repnz
jo
mov
or
and
pop
lret
pop
cwtl
call
shlb
ja
inc
adc
mov
aam
sarl
xor
jb
push
imul
sahf
jmp
jnp
loop
into
add
pop
cld
int3
lea
jg
test
mov
outsl
xchg
lcall
mov
int3
stc
sbb
jbe
xchg
movsb
pop
cmp
enter
mov
fsubr
stos
mov
mov
fsubrp
push
jns
cli
rcrb
xchg
or
pusha
and
inc
cmp
sub
mov
scas
mov
mov
add
inc
jg
sub
stos
push
mov
leave
aaa
es
fldl
imul
negl
sarl
jb
adc
into
mov
stc
arpl
repz
clc
or
inc
dec
and
jle
cmp
mov
xchg
aas
mov
dec
push
enter
ret
mov
xor
in
xchg
add
mov
in
cmp
sub
cmp
pop
lcall
or
popa
loope
xchg
jbe
popa
lods
push
idivb
imul
jne
mov
jmp
fldl
mov
subb
mov
pushf
push
sbb
or
mov
imul
add
adc
sub
push
int3
lods
sbb
outsb
cmp
popf
sub
or
jp
int
icebp
pop
iret
xchg
xchg
icebp
push
bswap
sbb
ret
shll
sbb
inc
popf
add
mov
push
mov
mov
and
sub
push
adc
cmp
insb
pusha
mov
mov
and
sbb
mov
push
xchg
jns
bound
jl
in
ja
cld
pop
imul
repz
push
hlt
sub
and
les
shl
xchg
mov
sub
xor
jmp
push
pushf
mov
fildll
sbb
pop
pop
aam
add
cmp
ds
mov
adc
mov
mov
bsr
xchg
inc
mov
outsb
mov
add
push
adc
mov
lret
in
push
popf
fldenv
and
jns
add
or
incl
ds
xor
stc
imul
mov
pop
loop
mov
mov
shlb
adc
kandnw
inc
mov
jbe
out
mov
lds
repz
mov
and
ret
or
shll
in
lea
push
in
and
or
shl
scas
mov
cmpb
lret
and
repnz
sbb
loopne
xchg
mov
pop
in
jns
xor
cmp
xchg
xchg
int3
dec
insl
sahf
inc
repnz
or
test
cli
loopne
js
jle
mov
icebp
push
ss
pushw
or
jno
sbb
addb
lods
inc
sbb
dec
outsl
ss
popl
call
cs
pop
dec
cmp
lods
movsl
inc
movsl
add
push
jns
sti
sbb
lret
or
das
cmp
jae
mov
adc
in
popf
arpl
mov
add
adc
xor
rolb
loop
xor
mov
push
notl
pop
repz
sub
mov
or
lret
shll
fldl
dec
loope
movsl
xchg
sub
mov
repz
outsb
push
add
ret
inc
clc
cmp
call
das
dec
aad
mov
push
or
pop
mov
sub
mov
sbb
push
scas
adc
push
sub
enter
inc
xor
movsb
aad
dec
iret
cwtl
fisttpll
rcr
dec
cmp
pop
adc
push
adc
push
or
clc
subb
mov
jbe
popf
inc
mov
add
daa
cmc
mov
lock
sti
add
andl
imul
mov
add
mov
arpl
mov
mov
push
movsl
out
sbb
pop
push
inc
lds
adc
xor
xor
cmpsb
in
jne
loopne
adc
aam
les
into
xchg
test
adc
iret
sub
push
or
pop
add
sub
fisubrl
lret
shrb
or
lds
lea
cs
lcall
sbb
das
int
cmp
jb
and
jns
xchg
hlt
or
mov
xor
ret
xchg
jb
push
daa
add
xorl
scas
pop
test
add
xchg
stos
dec
ficoms
in
data16
ds
jle
jg
xchg
loope
loope
sbb
jno
out
lahf
leave
movsb
nop
mov
faddp
pop
dec
cmp
test
inc
scas
mov
pop
stc
repz
into
dec
das
adc
pop
cmp
xor
data16
mov
dec
fidivrs
jne
pop
inc
jae
inc
jge
ret
push
jo
jecxz
ja
aad
pop
xor
push
outsb
and
outsb
bswap
jbe
cmpsb
fsubl
outsb
dec
or
inc
push
and
call
outsl
pop
shrb
xor
fmull
mov
sub
xor
cli
testl
je
or
inc
pushf
daa
sub
mov
jb
dec
movsb
sbb
jmp
cmp
test
movsl
mov
ljmp
int
lods
mov
bound
pop
push
shrl
jno
arpl
sub
push
leave
xchg
inc
and
ds
push
mov
mov
and
ret
cmp
in
adc
stos
les
or
fsts
test
imul
popl
lds
mov
lods
or
pop
ja
icebp
xchg
sub
stos
or
loopne
mov
jae
pop
jecxz
inc
xchg
xchg
jnp
gs
out
dec
xchg
repnz
mov
stos
rclb
pop
jbe
add
mov
xchg
cwtl
andb
or
add
sarl
xor
xlat
xchg
add
xchg
daa
loope
xor
fnsetpm(287
or
xchg
or
mov
loop
outsb
mov
jns
pop
test
mov
sub
cmpb
and
xchg
stc
fstps
stc
sbb
pusha
push
jecxz
dec
adc
je
mov
cmpsb
loope
xor
or
ljmp
push
hlt
iret
fcmovnu
xchg
jmp
ret
jo
iret
popf
out
pop
adc
push
push
sbb
ret
mov
sub
bound
je
rclb
pop
push
mov
sarl
je
pop
mov
aad
pop
or
push
mov
movsl
xchg
test
popf
cmp
xor
aas
sub
stc
cmpb
xchg
movsl
cli
jl
dec
add
popf
ficoml
push
xlat
fstl
movsb
cwtl
cwtl
adc
jbe
pop
adc
dec
push
add
jb
popf
jmp
add
or
iret
int
sub
ret
rcll
gs
cli
mov
outsb
jge
cld
sbb
xor
out
ja
pop
dec
pusha
jge
stos
jne
mov
rorb
cmp
das
inc
out
cmp
leave
push
xchg
mov
clc
cmp
push
mov
fnsave
mov
hlt
aaa
aam
bound
adc
movsl
fisubl
cltd
les
xchg
inc
idivl
mov
sub
and
ud0
inc
xorb
imul
ja
xor
push
push
sub
jae
mov
pop
dec
sahf
insl
outsb
jo
stos
jecxz
adc
push
loopne
and
dec
adc
in
fdivrl
sbb
insb
das
cmp
push
mov
add
inc
xchg
insb
gs
mov
or
cmpsl
aad
sbb
add
shr
inc
jmp
stos
enter
mov
pop
inc
les
or
fld1
mov
lock
sub
mov
pop
test
les
into
lods
mov
insb
jg
adc
ljmp
xchg
cmpsb
and
cmpw
cmpsb
aaa
insl
jmp
sbb
fisubrl
in
testl
stc
mov
out
mov
mov
scas
push
add
ds
pop
xchg
dec
cmp
and
jg
adc
sarl
mov
aam
jmp
out
sub
mov
insb
push
xlat
add
pop
jbe
aaa
ja
xor
inc
mov
and
pop
loop
addr16
das
popa
jo
xchg
loop
je
idiv
sub
test
in
imul
pop
and
pusha
pop
push
add
insw
adc
sarb
popa
jbe
dec
cs
cmc
adc
arpl
inc
jae
aad
inc
out
ficompl
gs
xor
inc
pop
es
lods
shll
pop
push
jns
push
mov
mov
fsubrs
adc
adc
jo
cld
outsb
lret
add
dec
mov
mov
jg
shll
sub
jp
pop
aad
test
or
push
das
popf
sub
dec
push
pop
pusha
nop
cltd
push
cmpl
addr16
loope
inc
or
push
call
cld
or
push
loopne
pop
dec
jne
loop
dec
xchg
in
pushf
sub
or
or
insb
mov
lcall
cli
xchg
icebp
fstpt
subl
movsl
mov
xchg
jbe
mov
jle
jo
shl
iret
jbe
shlb
shr
fadds
jmp
jbe
adc
testl
test
rorb
addr16
cmpsb
mov
je
fsincos
sbb
jg
cpuid
inc
sbb
push
pusha
aad
mov
xchg
out
ds
jmp
addr16
add
pop
xor
add
sbb
mov
and
push
mov
mov
and
adc
repnz
dec
and
push
or
dec
mov
hlt
insl
cmp
pop
jno
ret
ret
movsb
jbe
jle
push
les
push
addr16
sbbb
outsb
out
and
outsl
adc
lock
outsl
sbb
scas
pop
cmc
call
sub
push
dec
xor
addb
adc
repz
jmp
mov
jle
popf
ret
and
fsubrs
sbb
shrb
inc
aam
imul
dec
bound
jge
loop
pop
ljmp
movsl
pop
xchg
xlat
paddusb
lahf
fwait
fs
mov
inc
popf
rcl
loopne
fs
fistl
xchg
push
dec
push
stos
cs
cmc
popf
or
ret
sbb
mov
ljmp
iret
imul
push
ret
jmp
fcompl
mov
rorb
jnp
out
push
or
jns
jns
rolb
lcall
icebp
stos
mov
cmp
scas
mov
inc
pop
je
fldcw
mov
into
push
cmpl
push
xchg
pop
push
in
leave
shr
jae
lods
addr16
sahf
sub
pop
std
mov
jmp
pop
rcll
icebp
imul
cmp
jge
popf
jbe
aas
mov
add
mov
pop
call
pop
hlt
inc
jnp
adc
popf
inc
test
out
out
jnp
dec
lock
pop
jns
mov
fwait
movsl
or
and
sub
push
or
les
scas
sarl
sbb
mov
dec
mov
add
push
sub
stos
dec
and
push
ja
and
icebp
pop
icebp
les
cmpsl
adc
scas
fisubl
aas
or
movsb
cmpl
mov
inc
cmp
cmp
aaa
and
push
pop
inc
cmpsl
adcl
sbb
xor
movsl
mov
pop
and
neg
cmpsl
loope
bound
shll
adc
bound
aas
sbb
jge
jns
xchg
int
repnz
push
inc
rclb
sub
shr
test
inc
mov
dec
cmpsb
jo
js
sub
jg
sub
xchg
in
sbb
jnp
add
jo
add
rcr
lret
int3
and
scas
pop
cmp
pop
cmp
push
xchg
stos
mov
out
sbb
jecxz
loope
lods
pop
or
sbb
pop
mov
sahf
dec
xchg
aad
orl
sti
aad
push
inc
cmp
xlat
push
test
leave
add
stos
push
xor
outsb
lea
dec
mov
sbb
out
xor
inc
mov
pop
dec
and
dec
inc
xchg
sahf
sbb
or
xchg
adc
movsl
imul
dec
aas
inc
dec
xlat
icebp
pop
pop
ret
dec
inc
mov
lret
adc
inc
in
les
mov
xchg
push
pop
pop
in
std
minps
sbb
mov
xor
jle
imul
bnd
std
push
sbb
addr16
xchg
sbb
xor
int
aam
lds
mov
add
enter
xor
je
decb
fs
mov
into
pop
cmp
pop
cmp
shl
insl
pop
sub
jbe
mov
into
xchg
lock
and
scas
arpl
iret
popf
or
into
jbe
rol
lcall
daa
push
or
mov
ja
dec
dec
push
iret
cs
push
lret
cmp
js
and
sbb
xchg
mov
test
rcrl
cmpsb
sub
popa
dec
mov
inc
int3
xor
fbld
test
call
or
adc
out
jmp
into
and
sbb
jge
xchg
cmc
cwtl
js
xchg
outsb
sub
hlt
push
jo,pt
ljmp
xchg
add
lcall
data16
inc
hlt
pop
cli
je
pushf
test
mov
idivl
les
jae
and
imul
jae
xchg
pop
mov
nop
xor
hlt
dec
or
cmpsb
into
imul
je
call
mov
stos
gs
pop
sub
mov
insl
add
inc
dec
pop
xchg
data16
imul
and
jecxz
cwtl
scas
push
sbb
mov
and
out
and
push
xor
daa
xchg
dec
cmc
mov
xchg
mov
jmp
xor
adc
adc
jmp
outsl
repnz
sbb
mov
stc
mov
out
pop
xor
mov
int3
mov
mov
add
clc
notb
sub
shlb
enter
stos
loopne
cmp
dec
xchg
and
inc
iret
jecxz
icebp
cmpsb
lret
clc
fwait
xor
int3
cld
repz
or
jmp
sub
sbb
roll
aad
fwait
cmp
mov
dec
cmp
mov
push
inc
xor
insb
xlat
sarl
jl
jnp
mov
lret
outsl
ljmp
movups
xorb
xchg
hlt
ud0
mov
int3
insl
xchg
xchg
rol
jecxz
pop
ja
mov
lods
mov
addr16
sub
mov
jbe
sub
dec
lret
push
xor
out
xor
lahf
mov
push
decb
xor
movsb
push
inc
pop
std
jbe
stos
sbb
idiv
fs
jo
fcmovb
sti
dec
and
push
pusha
pop
out
sarl
dec
imul
rol
jne
pop
jbe
pusha
orl
fcoml
mov
int3
or
jmp
ljmp
mov
call
out
dec
jl
mov
fwait
push
outsb
lret
ds
addb
jg
mov
pop
xchg
pop
push
out
scas
test
lods
dec
stos
data16
mov
bound
and
ds
shrb
sbb
and
mov
or
dec
push
movntq
inc
repz
daa
mov
or
mov
sbb
pusha
dec
aaa
cmp
push
sbb
or
cmp
in
popf
loop
dec
push
add
call
xchg
in
icebp
xchg
pop
lcall
loopne
fwait
xchg
mov
ss
inc
cli
imul
movsb
mov
rolb
into
addl
push
fisttps
icebp
mov
test
inc
mov
push
pop
mov
repz
ret
pop
mov
pop
or
js
dec
push
adc
jnp
mov
and
call
xor
and
pop
inc
dec
mov
ret
inc
xor
jns
outsl
pop
or
int3
jge
shrb
inc
xchg
int3
stc
arpl
jns
ljmp
cmp
stc
rclb
movb
mov
mov
out
mov
sarl
pop
or
xor
imul
inc
cmpsb
out
mov
push
icebp
pushf
fstpt
or
sub
shlb
and
sbb
push
xchg
mov
push
fcmovnb
pop
push
daa
aas
sub
push
lea
fidivrl
imul
pop
icebp
pop
push
and
lods
repz
jne
jns
pusha
data16
out
sub
cmp
mov
cmp
inc
dec
xor
jns
lds
cmp
frstor
push
mov
hlt
ja
sahf
ret
mov
dec
sbbl
pushf
shll
sub
and
pop
adc
fmull
mov
and
popa
popf
popa
mov
dec
xor
insl
pusha
jae
leave
xchg
mov
push
mov
test
push
xchg
push
lea
enter
stc
mov
imulb
ss
cmp
scas
shrl
mov
fs
mov
sub
aam
mov
lock
mov
aas
cmp
popf
cmp
dec
out
lahf
cwtl
jl
sub
mov
adc
jae
int
shll
mov
cmp
in
in
jle
dec
std
jnp
pop
fildll
cs
pusha
test
push
loop
mov
dec
fcompl
adc
mov
pusha
and
dec
xchg
hlt
mov
pop
inc
and
xchg
pop
xchg
std
stos
jge
jne
fisttps
mov
mov
mov
jmp
pop
pop
ficompl
adc
nop
loop
cmp
rcrb
call
sbb
test
sbb
pop
nop
mov
stos
xor
popa
fisttpll
xor
ret
pushf
out
mov
pop
dec
jo
cmp
push
arpl
inc
jmp
out
cli
and
pop
ss
je
into
and
mov
cltd
in
hlt
stc
and
mov
xor
outsl
orl
sbb
dec
xchg
sub
insb
mov
cwtl
cmp
push
fwait
test
fcomi
mov
or
add
add
bswap
push
xor
scas
cmp
mov
cmpsl
mov
fstps
xor
cmp
or
jle
mov
leave
inc
push
adc
jno
icebp
mov
sub
scas
jg
inc
je
xor
outsl
mov
ret
adc
gs
jmp
lcall
sbb
xchg
clc
loope
rorl
or
push
sub
push
in
and
jb
int
fmul
mov
fwait
add
mov
mov
push
jbe
push
push
and
dec
dec
fs
shll
mov
dec
jl
mov
add
and
add
shll
push
pop
dec
je
pop
jl
loopne
add
dec
in
push
dec
sub
lahf
lcall
mov
push
xor
in
sub
mov
stos
popa
jle
jp
outsb
mov
jp
in
push
sti
adc
mov
arpl
enter
stos
jnp
dec
dec
popw
mov
jle
jecxz
jmp
cmp
push
cmp
pop
fsubr
sub
sti
adc
fs
add
fidivl
negl
jb
loope
cli
mov
or
ljmp
test
cs
stc
fiaddl
dec
sub
fs
insl
inc
std
mov
push
pushf
insb
mov
scas
adc
fistpll
and
sahf
inc
jbe
push
cwtl
popf
mov
sub
lock
fisubl
add
xlat
fstps
jg
loop
jl
enter
push
pop
loopne
push
xor
shll
inc
lret
pop
iret
mov
nop
enter
jmp
push
jo
lea
xlat
in
movsl
mov
xlat
and
sbb
lret
int
mov
mov
jo
mov
test
sub
arpl
imul
push
roll
push
div
sbb
out
jmp
in
pop
out
xchg
ss
fs
add
mov
sub
lods
sti
xor
inc
stos
aas
or
loopne
sti
inc
je
das
adc
pop
lods
and
mov
xlat
in
mov
inc
lea
or
sbb
pop
dec
stos
popa
mov
addb
pop
lret
mov
add
pop
stc
mov
push
lret
sbb
xor
sbb
lcall
mov
loop
xchg
frstor
in
dec
adc
jns
inc
jo
sbb
jae
push
je
in
incl
xchg
dec
icebp
xor
dec
dec
popa
ja
jmp
shlb
test
mov
mov
cltd
add
inc
mov
jno
mov
fcom
jb
mov
dec
push
or
fnsetpm(287
pop
shlb
jnp
fadds
insb
inc
inc
jnp
into
outsb
and
ljmp
sbb
lods
push
xor
jecxz
and
and
sbb
outsb
adc
xor
in
pop
pop
scas
lods
mov
in
cld
dec
sbb
or
call
arpl
je
fildll
sub
das
pop
loop
repnz
shl
es
sub
pop
das
inc
push
fsts
mov
js
mov
pop
addr16
pop
dec
jo
cmp
gs
pop
mov
xchg
adc
cltd
jecxz
xor
jae
out
lea
push
ret
or
add
aas
jb
out
sub
aam
test
push
icebp
ret
movsl
adc
cmpsb
gs
pop
inc
jle
mov
cmp
mov
jmp
js
or
andl
pop
mov
push
mov
mov
enter
sbbl
popa
mov
fwait
int
sahf
mov
fldenv
das
xchg
cmpsb
sbb
mov
imul
sub
or
in
sbb
pushf
ja
mov
fstps
inc
push
adc
cli
pop
dec
shll
mov
jle
xor
in
add
and
sarb
cmpsb
fisubs
fstpl
jno,pn
fisttpl
and
arpl
fiaddl
leave
inc
jmp
lahf
icebp
xchg
in
cld
pop
fs
pop
jmp
pop
dec
int
xchg
cmp
adcb
fdivrl
jge
in
add
fldt
in
into
dec
or
sub
jo
mov
push
add
insb
add
addb
xor
fstpt
push
ja
add
inc
lods
mov
xor
lcall
sub
lret
xchg
hlt
test
mov
subb
jno
imul
mov
xor
js
mov
fnsave
call
or
mov
sbb
arpl
das
xlat
and
imul
enter
inc
mov
push
imul
dec
outsb
cmp
fcmove
cwtl
adc
push
daa
xchg
sarb
sub
pop
or
mov
or
mov
iret
or
jb
sub
xchg
push
je
pushf
fnsave
mov
or
jno
shrb
fwait
test
sbb
sbb
lods
mov
adc
mov
nop
or
add
push
arpl
icebp
sti
add
or
dec
cmc
mov
inc
mov
outsb
aaa
popf
push
jmp
fs
add
pop
mov
mov
loop
xchg
pop
mov
and
push
push
pmaddwd
loop
sub
mov
xlat
gs
jnp
repz
addr16
les
sbb
add
xor
rcrb
add
pop
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
mov
lea
jmp
bound
xchg
or
shrb
jl
jne
iret
fwait
xchg
ds
inc
daa
mov
jg
add
jne
sub
sbb
flds
xchg
out
decb
inc
jnp
jmp
mov
and
inc
mov
mov
jmp
fdivrs
mov
daa
xor
fdivrl
xor
sub
test
aam
sbb
mov
xor
mov
cmp
push
ss
insb
lods
loop
out
cmp
mov
or
mov
push
pop
clc
fdivrs
lcall
testl
and
jmp
fidivs
xor
lods
out
jl
xor
push
push
jmp
pop
sbb
enter
outsb
jbe
lock
jnp
mov
mov
negb
add
cmp
or
sbb
pop
dec
pop
shlb
test
data16
dec
and
mov
cmpsb
int3
test
setp
aaa
mov
sub
sbb
sbb
mov
out
push
call
lds
push
pop
jo
icebp
pop
popf
add
imul
rcl
pop
and
inc
popa
inc
pop
sub
scas
push
mov
mov
inc
and
rorb
stc
adc
mov
imul
bound
lds
sahf
jns
dec
xor
cmp
jnp
ja
adcb
inc
dec
daa
and
nop
dec
mov
jl
popa
rcrl
in
mov
xchg
inc
push
add
inc
push
scas
rclb
popa
stos
adc
add
mov
addr16
out
add
mull
xchg
mov
jecxz
cmp
imul
jo
das
mov
movsb
jge
sarl
bound
aas
das
mov
adc
pop
or
dec
imul
adc
sub
xchg
adc
inc
aaa
add
les
inc
je
das
in
arpl
cmp
mov
ljmp
lea
aas
pop
jnp
push
jmp
sub
cmp
pop
lret
jnp
or
mov
iret
cmp
out
sub
ljmp
in
xchg
xchg
adc
movsl
enter
dec
adc
movsl
xchg
xchg
pop
mov
decl
ret
sub
xor
mov
pop
mov
jmp
fistpl
aas
fstps
mov
cmpsb
jo
and
clc
rorb
dec
cmp
dec
dec
into
mov
pop
cwtl
add
mov
loopne
and
mov
lock
mov
push
es
jl
push
jl
shl
outsb
cs
or
scas
call
xor
or
mov
jecxz
andb
mov
arpl
xchg
aas
loopne
push
ds
data16
fists
xor
mov
cmp
adc
rcrl
int
push
mov
test
push
push
adc
imul
fists
call
or
sbb
push
cmp
dec
ret
xchg
xchg
push
cltd
inc
push
das
or
int3
fld
push
push
mull
stos
jge
shll
fisubrl
xchg
out
pop
out
mov
mov
scas
jg
popa
jp
cmp
cli
test
iret
or
gs
insb
repz
icebp
mov
out
jae
je
movsl
in
aam
push
and
push
fdivl
scas
adc
negb
jle
aaa
mov
outsb
add
mov
cmp
movb
jg
lcall
dec
xor
sub
mov
addl
sbb
lahf
outsb
xchg
or
or
mov
popf
mov
ss
lock
mov
mov
cmp
jp
outsl
les
fwait
push
jne
lods
loope
fstps
sbb
push
popa
dec
cmc
js
loopne
sbb
test
je
into
pop
xchg
cs
mov
in
mov
mov
and
pop
dec
out
loopne
sbb
loop
mov
sbb
mov
daa
add
fcmovnbe
mov
xchg
sub
cmp
inc
leave
imul
out
and
arpl
cwtl
mov
push
dec
imul
mov
dec
add
jne
sbb
or
lret
cmpsl
xchg
dec
stos
cltd
inc
repnz
mov
xor
cmp
dec
push
jnp
and
hlt
scas
mov
rorb
mov
pusha
lock
loope
dec
mov
jg
cmp
push
xchg
lea
adcb
push
xor
cmp
mov
je
bound
push
enter
cmc
js
gs
data16
hlt
cltd
outsb
or
inc
pop
pop
fmul
gs
jecxz
xor
dec
jmp
push
les
pop
cmp
jl
iret
hlt
fwait
sbb
fwait
xchg
divl
mov
mov
rclb
mov
xchg
sub
in
xor
xlat
mov
js
or
loope
mov
jbe
repz
in
add
xchg
sbb
arpl
mov
jne
sbb
int3
adc
fnstsw
ljmp
sub
clc
sub
sbb
mov
js
clc
out
xchg
add
dec
xchg
pop
xor
mov
push
insl
dec
xlat
cmp
mov
subl
dec
and
adc
and
popf
xchg
push
ljmp
add
mov
aaa
push
cmp
sbb
inc
adc
xrelease
lock
mov
das
fs
arpl
decb
sub
mov
adc
xor
or
pushf
or
arpl
pop
xchg
fsubrp
xlat
stos
lcall
cmp
in
or
inc
scas
ret
gs
sub
cli
aam
or
or
push
sbb
pop
pop
orb
sub
add
pop
inc
push
jg
sub
push
cmp
mov
sub
sbb
pop
cs
xor
sti
push
ljmp
sbb
mov
test
mov
dec
fists
inc
adc
nop
mov
add
mov
jecxz
cli
out
pop
addl
pop
imul
fnstsw
cmp
bound
push
ljmp
xor
mov
or
pop
ret
aaa
inc
mov
lock
loope
or
xchg
xor
in
inc
data16
arpl
cltd
jmp
in
leave
les
add
mov
aad
cmp
arpl
push
fidivl
jge
cmpsl
pushf
adc
xchg
jg
xchg
leave
xor
fcmovnu
les
or
xor
sub
in
xchg
call
les
xchg
fdivs
lcall
leave
sbb
aaa
fldcw
dec
mov
jb
jns
out
cmc
frstor
and
fsubr
imul
push
mov
fcmovnb
js
lcall
xchg
mov
dec
mov
xlat
rcrl
imul
sub
xor
mov
lock
xchg
gs
pop
sbb
adc
sti
into
mov
dec
push
loope
push
ror
std
mov
in
test
and
fcompl
rorl
in
test
xor
inc
movsb
push
cmp
pusha
out
jnp
adc
orl
pop
jnp
int
cmpsb
scas
repnz
or
inc
popf
lret
insl
inc
aam
xchg
sub
int3
mov
mov
cmp
mov
jb
or
adc
pop
popa
notb
pop
in
mov
pop
leave
insl
rorl
out
nop
xchg
mov
rol
jp
sub
jle
xchg
test
jns
and
mull
jns,pn
mov
xor
mov
mov
push
sbb
add
arpl
in
out
pop
je
or
xchg
mov
jae
pop
clc
bound
xor
and
pop
fwait
xlat
int
add
push
xchg
sub
adc
loopne
jle
lods
push
lret
push
mov
cmp
xor
xchg
insl
push
pop
lahf
inc
test
orb
push
inc
pop
fidivs
call
data16
cltd
leave
movsl
test
cwtl
push
xor
jmp
and
xor
ret
xchg
or
in
sbb
or
and
int3
imul
xchg
sti
and
rcrl
push
jo
mov
lahf
mov
dec
dec
push
dec
jb
xor
ja
mov
rclb
aam
cmp
data16
pop
and
mov
or
lret
ret
xor
adc
and
daa
jae
das
ss
sbb
pop
je
and
pusha
inc
ljmp
sarb
test
sbb
push
add
mov
pop
jecxz
andl
mov
in
inc
lods
lahf
jmp
mov
jp
test
xchg
mov
and
mov
add
lret
xor
pop
pusha
js
mov
ret
addr16
ret
mov
dec
adc
dec
push
int3
imul
jo
mov
push
stos
adc
adc
xchg
rcl
inc
stos
mov
inc
xchg
mov
lcall
rcrl
loopne
mov
pusha
add
adcl
ret
imul
sbb
inc
xchg
push
pushf
roll
shlb
movsl
adc
add
mov
in
mov
mov
ret
or
call
sbb
jp
inc
pop
inc
les
cmpsl
or
sub
fstl
push
or
cmp
dec
data16
jle
inc
jns
push
jb
inc
repz
pop
fisttps
pop
cltd
lock
fcoms
push
adc
pop
mov
xor
or
imul
pop
aam
fs
fldenv
jg
pop
lret
and
push
ret
inc
inc
mov
mov
jmp
jb
pop
stc
stc
in
je
xor
or
cmpb
fiaddl
into
je
cwtl
dec
je
out
mov
int3
je
inc
divb
aas
dec
xor
pop
cmpsb
scas
xchg
ljmp
stos
inc
adc
lret
mov
test
dec
or
aaa
fnsave
ljmp
testb
lcall
jecxz
pxor
add
and
add
loop
push
mov
add
cmp
cmp
pop
xor
clc
pop
fistl
push
sbb
mov
jp
loopne
or
adc
mov
es
push
stos
inc
or
dec
add
sub
pop
bound
hlt
and
movsl
pop
add
enter
icebp
xor
jo
push
mov
pop
mov
or
sub
jp
dec
stos
popa
jg
sub
gs
mov
sbb
test
jmp
jl
imul
jp
push
mov
mov
push
mov
sbbl
cmpsb
shl
repnz
mov
adc
mov
dec
jg
idivl
push
pop
ljmp
xor
cmc
das
push
arpl
out
or
int3
into
push
pop
jb
cli
int3
push
imul
lods
jnp
stc
and
out
test
mov
add
mov
ret
sub
xchg
adc
and
pop
pop
adc
jp
mov
jl
xor
cwtl
test
ja
outsl
cmp
lods
dec
xchg
mov
sub
loopne
int3
push
arpl
pop
add
repz
orps
std
mov
fucomip
cmp
or
sub
js
sti
add
js
loop
dec
mov
lahf
or
aam
sbb
pop
rcrl
mov
shll
ss
and
cmpsl
popf
jno
mov
sbb
inc
cmpsb
adc
fldcw
fsts
fcomps
lahf
sbb
cmp
shll
cmc
jge
pop
mov
dec
sahf
test
pop
jb
fldpi
inc
xor
addr16
and
jo
rorl
nop
sbb
mov
ja
test
and
and
and
pop
pop
xchg
mov
push
ret
jbe
dec
repz
push
push
cwtl
iret
cmpxchg8b
lret
test
jno
andl
jns
repz
loop
sub
and
in
dec
sahf
push
xchg
pop
das
das
es
sbb
or
faddl
popa
push
jno
shr
dec
fisubs
and
iret
dec
dec
sbb
rorb
xlat
mov
int
and
adc
xchg
inc
je
pop
popf
mov
add
lret
sbb
jae
sbb
jl
in
inc
cmp
lret
add
imul
cmp
call
sahf
outsb
outsb
insb
cmp
sarl
ret
cltd
jle
dec
les
and
mov
sub
add
cmpsl
cmc
je
pop
or
sbb
and
cs
repz
xor
inc
lds
cmpl
inc
mov
stc
pop
pop
mov
push
ja
push
mov
jno
movsl
jg
or
pop
push
lcall
mov
stos
fadds
xor
mov
cltd
inc
out
xchg
mov
pop
cmp
cmp
jmp
je
in
fbld
add
outsl
mulb
xchg
xchg
int
cs
dec
fildll
sub
or
cwtl
push
insb
shlb
sarb
aas
dec
mov
mov
and
dec
dec
fcoms
fnsave
pop
out
insb
or
int
mov
loop
dec
imul
adc
rcrl
lret
pop
ja
push
mov
pop
push
push
loop
mov
mov
cli
adc
sbb
pop
dec
cmp
push
andb
clc
pop
dec
ret
mov
fnsave
inc
push
jmp
lds
flds
imul
push
inc
inc
dec
mov
pop
or
jne
ss
lea
hlt
mov
inc
inc
xchg
push
pop
call
out
ret
lods
or
adc
sbb
mov
or
out
in
mov
jl
imul
mov
out
testl
sub
imul
mov
scas
test
loop
jo
mov
jle
cwtl
int3
ds
icebp
jg
dec
in
mov
cmp
pop
std
es
jns
add
and
inc
sbb
hlt
mov
add
fidivrs
scas
ss
cmc
mov
pop
cmpsb
or
push
cmc
dec
fnstsw
cltd
inc
mov
xchg
pusha
fcompl
add
icebp
push
add
dec
repz
push
mov
adcb
adc
mov
dec
shll
nop
xchg
cmpsl
and
cs
dec
push
lahf
push
mov
add
fsubr
inc
mov
rorb
xchg
xor
jne
xor
xchg
mov
xlat
add
xlat
daa
xor
shll
aam
xor
test
sub
out
push
rol
ret
jmp
mov
scas
adc
sti
jae
fdivrl
fdivl
mov
sub
pop
fldl
jle
aad
xchg
inc
xchg
xchg
scas
xchg
lds
leave
xchg
pavgb
push
divl
inc
pushf
lret
sbb
xchg
xor
mov
inc
jle
and
mov
cmc
xchg
adcl
or
mov
ss
jae
lds
ljmp
push
testl
fldenv
mov
in
lods
bound
inc
or
adc
mov
shlb
movsb
out
in
jno
adc
or
or
mov
out
scas
xchg
xor
xchg
xchg
cmpsb
fistl
xlat
sbb
mov
imul
sahf
test
das
jb
cmp
mov
push
fsubl
gs
mov
lcall
outsl
outsl
frstor
out
outsb
mov
ss
xor
pushf
lret
pop
cmp
mov
and
jo
lret
aad
mov
add
arpl
jle
pop
bound
loop
dec
cmp
cmp
ds
sahf
movzbl
push
cld
cmpsl
adc
or
or
xlat
pop
je
pop
andb
xchg
inc
jle
mov
or
je
mov
shl
cmp
outsl
jmp
pushf
bound
mov
jp
dec
mov
xchg
test
popa
std
cwtl
cmpsl
outsb
sti
mov
scas
cld
lods
pop
fldl
testb
push
lahf
adc
out
xor
adc
and
push
mov
sub
inc
sahf
and
mov
imul
or
inc
adc
add
xor
add
shll
cmp
jle
add
dec
xchg
adc
mov
jb
xor
xchg
dec
jmp
inc
dec
cmpsb
jle
cmp
adc
adc
mov
sub
mov
adc
sub
ret
out
adc
or
sbb
sti
and
iret
and
imul
lahf
in
lea
or
add
vaddps
mov
cmp
mov
adc
or
cs
mov
mov
and
aas
cmp
xchg
cmp
outsl
xor
mov
mov
mov
xor
xchg
and
shll
add
add
cmp
or
dec
arpl
shll
add
cmp
flds
inc
mov
gs
out
or
movsl
inc
je
inc
xor
adc
shlb
inc
int3
arpl
in
scas
stc
dec
inc
and
fnstcw
in
icebp
imulb
push
jmp
stc
mov
movsl
scas
mov
xchg
lods
dec
inc
push
cli
cmc
cmpsl
mov
lods
xor
xor
pusha
ljmp
int
aaa
jecxz
popf
imul
ja
jae
stc
xlat
push
repnz
cmpsb
test
inc
arpl
push
sbb
jle
jb
or
scas
jnp
ljmp
cwtl
ret
dec
roll
int3
clc
pop
fnstcw
std
filds
nop
movsb
stos
loopne
ret
stos
add
jmp
adc
xor
inc
sbbl
fs
xor
pop
jae,pt
loop
sbb
push
aas
inc
add
pushf
cltd
dec
pop
in
xchg
or
rolb
and
or
jnp
les
mov
xchg
push
into
push
jge
popf
push
adc
or
dec
pop
cmp
popf
fs
imul
lret
mov
push
aad
loope
fstpl
negl
cld
inc
jmp
fisubs
push
loop,pn
outsl
pop
in
mov
xchg
or
adc
inc
mov
ljmp
xor
shrl
in
jbe
dec
dec
je
and
fnstsw
inc
popa
push
add
ja
stc
inc
pop
pop
stc
push
sub
sub
jecxz
jns
ficompl
mov
inc
sahf
xchg
dec
ret
inc
dec
lcall
and
xchg
mov
cmpsl
or
xor
outsl
pop
pushf
int
sbb
xchg
cld
dec
cltd
jg
mov
call
in
mov
mov
add
popf
cmp
sbb
aas
add
mov
or
ss
mov
mov
xor
inc
aas
and
inc
stos
jecxz
adc
ja
lds
and
push
clc
pop
out
sahf
sbb
push
lods
or
dec
test
sbb
add
push
daa
push
xor
es
xchg
jne
fstpl
mov
mov
xor
and
adc
mov
pop
iret
adc
aaa
jg
push
add
mov
cli
mov
pop
leave
mov
into
fwait
in
pop
ss
addr16
sub
and
rolb
scas
jmp
aad
jge
add
insl
fistpll
jge
ret
pop
jg
sti
push
scas
lcall
shlb
pop
out
push
mov
sarl
neg
and
sub
xor
cmp
addl
cmpl
sub
stos
fdivr
push
fcoms
fs
cmp
jmp
out
cmp
fcoml
mov
adc
pop
mov
jmp
mov
dec
or
scas
add
div
dec
xchg
subb
pop
les
nop
cmp
adc
incb
or
push
icebp
iret
adc
sub
in
sbb
icebp
mov
dec
stos
cmp
adc
and
sbb
sbb
xchg
scas
pusha
out
sbb
or
mov
sti
mov
mov
cmp
cs
inc
cmpsb
mov
sbb
icebp
pop
mov
insb
shl
pop
loopne
pop
pop
push
fdiv
mov
test
xor
pop
mov
and
inc
bound
adc
lds
xchg
jge
out
stos
je
sub
or
ret
or
frstpm(287
push
testb
or
add
out
or
inc
xchg
cmpsl
inc
addb
xor
xlat
sub
loope
repnz
xchg
fimull
sbb
popa
sbb
popa
jae
cmc
fdivs
aas
imul
cmp
js
mov
and
loop
ret
hlt
int3
add
pop
jmp
and
xchg
jg
and
cmc
xchg
inc
adc
mov
jecxz
fs
daa
roll
add
dec
movsl
fldenv
mov
mov
rcrl
fidivrs
mov
loop
loop
mov
mov
xchg
jne,pn
shll
mov
in
sbb
test
cmp
loopne
out
sub
lds
and
mov
push
fisttpl
mov
mov
sbb
xchg
aam
pop
sbb
jle
clc
shlb
push
jmp
sub
aaa
shrb
jbe
int
loop
lock
adc
out
fldt
mov
sub
sbb
dec
punpcklbw
pop
cmp
jmp
sbb
push
hlt
aas
mov
cltd
adc
pusha
fistpll
sarb
xor
inc
in
lahf
pop
pop
aam
push
jbe
mov
fbstp
sub
inc
pushl
sub
and
test
popa
insb
ret
call
or
pop
cld
cmc
testl
push
ljmp
loope
stos
or
mov
pop
stos
out
inc
dec
sub
push
shrb
lret
in
sbb
clc
pop
out
fs
xchg
mov
xchg
add
xchg
push
and
outsl
out
sbb
and
hlt
loope
scas
outsb
adc
sub
pop
pop
dec
add
jmp
shlb
in
and
nop
js
or
cmovne
jmp
pusha
leave
cltd
jl
test
pop
add
dec
sub
rcrl
sbb
adc
aam
fnstsw
fildll
fnstenv
leave
or
jmp
mov
xchg
xor
and
xchg
test
je
jl
adc
lea
or
and
test
sub
cmp
imul
sarl
xchg
idivl
inc
jp
arpl
in
outsb
mov
fwait
sarl
pop
xor
out
cmp
ss
pop
jg
mov
inc
pop
mov
sub
shlb
cmpsl
sbb
popa
loopne
sbb
icebp
and
xor
repz
sbb
mov
cmp
fimull
xlat
scas
add
jae
fdivrs
push
out
lods
xor
call
inc
repnz
mov
add
inc
cmpsb
pop
cmpsl
xor
out
add
add
cld
outsb
and
sbb
mov
inc
lahf
outsb
add
scas
sbbb
lods
mov
mov
fdivs
sub
pushf
mov
add
push
mov
add
je
in
test
lds
sbb
loop
cmpsb
mov
mov
cmp
dec
in
dec
jl
mov
jmp
xchg
inc
xchg
mov
mov
inc
push
pop
dec
mov
pop
fisttps
cwtl
lds
cmp
cmp
or
or
xor
fcoml
push
test
outsl
jbe
cmp
mov
push
cld
sub
in
dec
cmp
rolb
movsb
loopne,pt
daa
mov
sahf
sub
dec
jo
sbb
jecxz
push
jbe
insl
adc
jge
cwtl
das
in
pop
cmc
sarl
and
icebp
daa
xchg
mov
and
lods
sti
insl
inc
and
jle
negl
lret
xchg
test
and
movsl
cld
enter
nop
inc
pop
sbb
mov
fldl
ljmp
inc
aad
mov
mov
mov
jb
sar
out
push
push
dec
xor
imul
adc
add
jae
pusha
mov
push
xchg
mov
jb
adc
xor
jae
push
scas
icebp
adc
mov
cmp
iret
mov
hlt
imul
mov
in
or
jno
or
lahf
jbe
sbb
in
pop
jae
dec
jo
lods
jle
iret
add
pop
or
cmp
hlt
mov
fdivrs
lea
push
cwtl
mov
adc
cmpsl
sahf
pusha
inc
cs
les
mov
inc
test
xchg
cli
jns
scas
cmc
jmp
movsb
lds
push
jecxz
stos
inc
fldcw
xor
dec
or
push
inc
fiaddl
cmp
test
cmp
pusha
fcoml
lahf
jl
testb
sub
push
out
fistl
xchg
mov
pusha
adcb
xchg
cld
fwait
and
mov
inc
mov
call
clc
inc
insb
outsl
inc
cltd
outsb
ret
out
add
in
jb
add
lods
scas
out
push
mov
testl
mov
mov
xor
mov
mov
or
sub
inc
mov
pushf
xchg
and
out
cltd
mov
fsub
pop
imul
cli
add
jns
dec
inc
inc
aas
pop
std
push
shrl
les
test
arpl
aas
mov
and
mov
or
sbb
mov
mov
dec
cmp
rcr
ss
fwait
xchg
shrb
push
loop
sub
adc
jo
and
mov
inc
or
mov
mov
dec
jg
jnp
xor
jl
xchg
pop
jns
test
sub
inc
das
lcall
mov
mov
lret
push
in
fcmovbe
adc
out
push
repz
cwtl
sbb
lods
int
xchg
mov
pop
sub
cmp
xchg
jmp
adc
push
aas
bnd
pop
ja
mov
mov
xchg
scas
lret
jae
xchg
adc
fidivrl
inc
or
push
adc
add
lcall
push
mov
ds
xlat
jge
push
xor
cli
or
sub
or
jo
int3
push
inc
imul
sbb
je
xchg
fistpl
mov
pop
and
stos
mov
pop
add
sbb
out
fimull
inc
loop
in
add
ljmp
sbb
pop
inc
sbb
jno
popa
and
add
iret
js
dec
cmpsb
pushf
cltd
push
loopne
scas
sub
les
pop
stos
insb
or
cwtl
dec
mov
fnsave
notb
sub
sub
lea
cs
adc
cli
pop
jge
mov
inc
sub
jno
ljmp
dec
mov
xor
es
inc
xor
or
or
lods
scas
cmp
mov
push
incl
lea
mov
jg
es
pop
test
and
iret
popf
js
cld
inc
in
cmp
and
push
jp
cmpsl
xchg
pop
xor
push
data16
inc
push
lds
emms
pop
sub
popf
mov
dec
pop
sbb
add
cmpsl
push
add
in
dec
mov
cmpsl
stos
fnstcw
jl
bound
insl
sahf
aam
inc
rclb
outsb
xor
fpatan
adc
mov
fistpll
popf
lcall
pop
lahf
fisubs
fnstsw
in
jbe
pop
inc
outsl
ss
mov
mov
addr16
jg
scas
and
cmp
mov
inc
clc
sti
xor
pop
jle
adc
fcmovne
test
data16
fwait
inc
insl
add
mov
decl
xchg
jns
push
jmp
jg
insl
and
xor
mov
mov
sbb
in
movsb
mov
lret
fdiv
std
ds
popa
sub
sub
cltd
sub
sbb
repnz
xor
cmp
popa
ja
and
test
sbb
call
pop
imul
pop
push
mov
add
pop
cwtl
insl
sbb
bound
xchg
lods
mov
ret
jno
sub
paddsw
jnp
cmp
or
leave
cwtl
and
push
movsl
test
pusha
push
push
ljmp
cli
mov
stos
repz
out
out
jmp
xchg
cmp
repz
ds
pop
xchg
enter
pop
or
ds
sub
test
repnz
push
xor
cld
icebp
xchg
mov
scas
and
nop
mov
rcrl
nop
lea
in
inc
cmc
fildll
mov
push
sbb
lods
mov
jle
in
scas
mov
daa
push
ss
xorb
and
pextrw
leave
sub
xor
aaa
and
xor
test
jns
push
jg
arpl
les
jae
out
dec
imul
dec
sub
mov
in
xor
cld
aas
adc
in
lods
jg
adc
stc
xor
jmp
lds
scas
hlt
mov
aas
out
ficomps
adcl
inc
pop
dec
xchg
mov
sub
push
cmp
dec
xor
sub
leave
or
jb
cli
icebp
fsts
aad
ds
dec
call
and
pause
jbe
pusha
mov
jg
je
mov
inc
push
fidivrl
fistps
or
mov
jnp
sbb
push
ficomps
cmp
pop
cmpsl
add
sti
push
stc
mov
ja
bound
and
lret
push
xchg
or
inc
nop
testl
rcll
js
cmc
push
jae
jmp
xor
adc
and
pop
inc
gs
lahf
lcall
mov
sahf
sbb
popa
insb
and
inc
sub
or
lds
mov
shl
mov
and
imul
push
aas
pop
xlat
jge
pop
mov
mov
nop
aas
jmp
dec
add
push
inc
sbb
popf
lret
ficoml
sbb
imul
xchg
outsb
shll
cmp
add
mov
lods
mov
rorb
test
ss
xorl
inc
enter
inc
push
lea
shlb
hlt
out
adc
or
jle
dec
push
xchg
pop
xlat
cmp
sbb
scas
aam
rcrb
dec
testl
mov
les
popa
push
les
insb
push
sbb
cmpsl
push
ret
jb
cmp
stos
addb
push
add
or
xor
out
dec
movb
je
mov
cld
adc
and
cwtl
push
test
pop
cltd
mov
lcall
cld
adc
sub
in
push
jo
or
mov
enter
pop
sbb
fisttps
sbb
mov
sub
popf
cmp
mov
iret
dec
imul
or
bnd
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
push
xchg
hlt
push
jmp
bound
sbb
jmp
adc
and
mov
cs
pop
test
pop
lds
adc
push
and
ficoml
or
or
sub
insl
call
inc
xor
inc
int3
lret
fmuls
cmp
jmp
ss
popf
xor
rcrb
sub
push
sub
mov
push
frstor
lcall
xchg
push
addr16
push
into
arpl
cs
into
icebp
imul
xorb
cmp
jle
xor
out
mov
ljmp
mov
lcall
imul
push
test
sbbl
or
pop
mov
scas
movsb
and
jl
aam
adc
mov
push
stos
push
rclb
pushf
add
shll
cmp
mov
push
orl
or
mov
and
ret
test
mov
mov
add
lcall
xchg
mov
push
add
mov
fs
sub
jnp
rol
add
mov
sub
test
lret
inc
or
adc
push
add
dec
lods
cmc
sbb
pop
dec
movsb
xchg
fidivs
jno
xchg
mov
out
mov
jno
mov
cld
pop
je
mov
ljmp
mov
inc
nop
repz
iret
mov
sub
test
sub
mov
popa
push
mov
scas
test
mov
xor
pop
inc
int
pop
lea
pop
ficomps
mov
mov
mov
imul
mov
js
add
sbb
les
sahf
xchg
and
and
lea
add
cli
inc
push
stc
dec
mov
mov
shrl
sub
or
jl
and
mov
xor
push
cmp
add
sub
out
jb
les
xlat
les
imul
adcl
add
mov
popa
ds
sbb
add
xchg
pop
ficompl
pop
sbb
shrl
mov
ss
lods
push
pop
scas
stc
ret
sub
inc
jp
adc
dec
dec
xor
mov
push
dec
push
icebp
mov
jg
scas
jo
inc
lods
lods
push
int
in
rcll
rcl
aam
lods
and
aaa
add
flds
fwait
rorb
xchg
sub
cmpl
dec
movsl
les
out
jnp
inc
or
mov
jl
adc
inc
fwait
out
js
mov
test
out
sbb
mov
cmpsl
clc
out
test
and
inc
insl
xchg
mov
and
ret
mov
pusha
lods
sub
lock
lods
cmc
adc
ss
out
imull
mov
sbb
sub
jae
jb
xor
jns
das
xlat
sub
or
jle
repnz
add
mov
out
bound
inc
or
call
push
or
inc
mov
cmpsl
add
imul
lds
insl
clc
sti
xchg
jno
or
out
out
mov
clc
sub
daa
in
mov
and
lods
and
adc
or
pop
push
rol
insl
xchg
add
sti
addb
das
fwait
test
pop
sbb
xchg
xor
or
add
and
dec
ret
out
inc
and
ja
mov
add
mov
int3
imul
jge
mov
xlat
cltd
lea
loop
movb
dec
imul
bound
mov
push
jmp
cwtl
dec
jg
nop
mov
adc
or
mov
dec
xor
jo
shlb
or
pop
xor
pop
je
test
and
or
or
sbb
ficoms
xchg
test
dec
adc
pop
out
int
lcall
or
and
sub
mov
pop
xor
pop
pshufw
mov
push
fiaddl
pop
sbb
pop
push
fdivs
dec
mov
add
add
fs
es
insl
jge
jg
addr16
les
pop
push
and
mov
cmpsl
or
aas
lret
stc
push
scas
inc
sub
jb
in
and
pop
out
enter
popa
bnd
xchg
aad
jno
cli
pop
pop
or
pushf
lahf
mov
pop
push
repnz
xchg
dec
daa
sarl
cwtl
daa
or
fwait
add
mov
iret
mov
sbb
sub
add
fdivl
fcomps
jae
stos
insl
insb
push
scas
sti
jp
ffree
cld
jecxz
jl
jne
xor
ja
pop
pop
xchg
lods
pop
sarb
cmp
inc
outsl
push
aaa
or
std
xchg
push
push
xor
xor
outsb
shr
test
andb
pop
ds
xor
mov
or
dec
mov
mov
cli
xor
lret
jg
sub
add
fistpl
ficompl
movsl
scas
sub
jp
fs
and
cmp
out
push
inc
push
jle
cltd
add
cmp
xchg
js
stc
or
add
sahf
repz
in
mov
mov
mov
xorl
push
and
mov
pop
sbb
xchg
adc
pop
mov
pop
xchg
repz
loope
scas
or
nop
sti
mov
inc
clc
mov
xor
out
and
xchg
stos
xor
pusha
cmp
mov
pop
popf
sbb
and
mov
add
mov
mov
aam
loope
pop
stos
repz
ja
jno
sub
push
out
xor
xor
adc
mov
jne
jp
or
mov
xlat
les
cltd
cmpsb
inc
int
fcomip
out
pop
aas
mov
or
adc
ss
aad
and
pop
call
adc
shlb
dec
sbb
js
jnp
jb
cmpb
ja
xor
fidivs
jo
loope
test
xor
sbb
cmpb
adc
mov
pop
cmp
lock
hlt
push
fbstp
fadds
pop
imul
fisubs
fcmove
mov
xor
cmpsl
imul
mov
cld
rolb
mov
cmp
scas
in
repnz
mov
and
push
lret
cmp
xorl
xor
cltd
daa
in
inc
rorb
pop
xor
mov
mov
movb
push
inc
pusha
jle
xchg
push
xor
and
cmpl
adc
popf
dec
sbb
and
cmp
aaa
in
dec
sub
leave
mov
icebp
out
pop
mov
in
inc
into
fwait
push
ret
cmp
nop
lret
hlt
int
or
stos
inc
daa
push
jg
sub
lahf
inc
push
mov
mov
and
ljmp
xlat
mov
addr16
out
sub
push
push
xorb
xchg
or
mov
inc
sub
sbbl
xchg
pushf
mov
push
mov
cli
xor
jnp
rcl
cli
sub
arpl
add
ret
mov
cmp
sub
repnz
fiaddl
sbb
sbb
jge
push
xchg
aam
in
bound
jo
orb
xchg
pextrw
xchg
pusha
out
aad
insl
pop
fnstsw
mov
and
mov
pop
push
idivb
sbb
xor
sbb
push
scas
fists
inc
ret
cmpsb
jo
popf
mov
dec
imul
dec
in
adc
push
mov
popf
lock
pop
gs
pop
cmp
movsb
mov
xchg
add
adc
add
xor
cltd
push
lds
rolb
js
xlat
push
sbb
push
out
jmp
stos
outsb
or
out
and
call
lcall
sbb
sbb
popa
loop
cmp
ljmp
cmp
mov
sahf
ss
pop
mov
lods
ss
cmp
cs
in
lock
adc
adc
push
cltd
sbb
pop
nop
adc
cs
ja
pop
dec
rorb
jg
jo
bound
mov
in
xor
out
jge
pcmpgtd
movb
pop
imul
sbb
push
sti
push
sti
mov
ss
or
nopl
out
data16
int3
fadds
icebp
xchg
sub
add
roll
ds
verr
and
xchg
ficompl
push
push
and
das
fldcw
into
dec
jl
scas
int
stos
outsl
fimull
daa
mov
cmp
popl
jle
subl
arpl
and
pop
xlat
sub
mov
mov
test
fimuls
xchg
jecxz
mov
fs
cmp
lock
imul
mov
out
and
shlb
jge
fwait
movsl
cltd
aaa
pop
int
fwait
jae
arpl
sti
push
dec
cmc
or
adc
sub
push
pushl
xchg
add
aaa
movsb
cmp
je
leave
dec
mov
push
jge
pop
sub
or
mov
add
and
clc
mov
leave
cmp
mov
cmp
jno
ss
add
nop
adc
rclb
repnz
rclb
cmp
cmp
popa
pop
in
and
jg
orl
mov
mov
push
nop
test
xchg
sahf
cmp
cmp
mov
mov
dec
stos
js
scas
in
jl
mov
mov
jne
sbb
inc
add
imulw
sbb
cmp
dec
xchg
adc
mov
loope
mov
addr16
nop
jns
inc
xor
inc
dec
inc
in
mov
pop
jbe
add
jbe
cmp
pop
adc
adc
jbe
pop
fisttpl
adc
push
mov
in
int3
shlb
inc
sbb
pop
ds
mov
sub
mov
xor
lcall
idivb
cmp
sbb
sub
loope
sub
insb
hlt
daa
push
rol
fsub
dec
call
add
int
jne
xchg
jecxz
lods
dec
push
mov
loopne
push
lret
fildll
xchg
jmp
icebp
adc
jg
fcoml
icebp
addr16
bnd
pop
test
fs
sbb
leave
scas
and
ljmp
dec
pop
or
decb
lcall
cmpsl
push
jb
out
aam
inc
push
bound
or
mov
jo
jge
or
mov
add
nop
push
out
xor
sub
lods
xor
jl
outsl
shl
sahf
jp
pop
fdivrs
out
xlat
push
rorl
sub
fdivl
rcl
aad
jb
xchg
faddl
mov
inc
lods
ret
arpl
or
mov
lock
inc
daa
fwait
push
sbb
jg
adc
jae
inc
cmc
dec
movsb
rcrl
lea
pop
or
inc
stc
outsb
mov
repnz
cld
adc
mov
mov
lcall
push
push
ja
or
inc
and
shl
dec
in
lock
jl
je
stos
sub
loop
sahf
xor
mov
xor
adc
cli
inc
dec
leave
dec
inc
push
iret
cmpsl
cmp
push
cmp
push
mov
adc
jmp
test
mov
dec
bound
add
mov
mov
xchg
add
cmp
push
lcall
into
leave
dec
push
mov
push
nop
les
jb
roll
popf
add
add
aam
mov
gs
imul
loope
mov
xor
je
adc
or
jmp
jae
cmp
arpl
add
mov
das
jecxz
std
push
scas
insl
sub
jns
xchg
jp
fidivl
push
add
mov
or
sub
mov
mov
popf
push
loope
into
lret
repz
mov
jne
adc
movsb
lods
into
xchg
sti
fstps
sub
lds
test
scas
mov
dec
aad
sbb
cmc
push
cmpsl
push
mov
js
lock
add
rol
mov
movl
call
cld
stc
sbb
jo
inc
mov
jp
addr16
xor
mov
pop
pop
mov
insb
add
sub
out
sub
jle
and
stos
fwait
or
cmp
arpl
mov
lret
insb
imul
je
test
mov
rcr
pop
ja
lea
sub
xchg
sub
ds
adc
inc
out
pop
xor
add
fdivs
pop
push
stos
popa
jl
ljmp
sbb
cmpb
ret
cli
push
cmp
loop
jne
stos
jb
fwait
lret
sbb
xchg
popf
lret
mov
cwtl
mov
lods
jae
mov
fbstp
adc
push
mov
add
out
leave
lahf
testl
cmpsl
xor
xchg
xor
and
stos
and
mov
fs
pop
lret
mov
mov
sub
xchg
mov
mov
imull
iret
mov
dec
push
jbe
sub
int3
pop
lods
in
mov
add
xchg
cmp
jno
je
push
sub
inc
inc
jmp
cwtl
mov
mov
out
outsl
ret
lret
dec
dec
xor
jp
popa
clc
lahf
shrb
imul
sar
push
lret
jle
stc
and
pop
sarl
add
pop
or
adc
mov
pop
sbb
cmpsb
push
mov
sub
mov
pop
adc
cs
jle
mov
push
mov
call
cmp
fldcw
pusha
mov
mov
mov
mov
xchg
pop
sahf
or
outsl
jl
adc
jno
pushf
aas
inc
in
pop
pop
out
subl
and
or
mov
ret
mov
pop
inc
xor
cmp
xchg
push
xchg
imul
rcr
dec
lcall
pop
movsl
scas
inc
cmp
push
loope
leave
sbb
mov
in
sub
dec
sbb
icebp
mov
sarl
cs
repz
xor
jecxz
xchg
pushf
shll
mov
cltd
mov
pop
pushf
movsl
mov
stos
loop
mov
dec
cmpsl
push
mov
enter
lea
mov
out
sbb
cmp
fisubrs
aaa
jns
add
stos
sub
idivl
push
jmp
out
lock
add
insb
or
int3
das
jae
push
and
lret
sbb
jge
stos
sti
add
jbe
add
test
cmc
sbb
dec
jne
jb
cmp
pop
mov
inc
out
fidivl
outsb
aam
stos
and
or
repnz
outsb
mov
sbb
cmc
test
jge
cltd
hlt
dec
insl
jne
push
fistps
cmpsb
inc
outsb
fldt
aam
xchg
jle
mov
addr16
into
pop
adc
ret
outsb
or
movsl
push
pop
lret
jge
das
popa
imul
sub
push
pop
dec
push
inc
push
push
cmp
jo
scas
dec
cmp
adc
out
je
dec
fimull
push
sbb
xor
popf
mull
or
lret
pop
xchg
int
shl
cmp
cmp
inc
lret
jnp
loopne
xor
aas
pop
outsl
xchg
add
xor
pop
xor
aam
in
sub
movsl
lock
mov
push
mov
push
fwait
inc
adcl
lea
or
or
mov
mov
nop
ss
into
jne
mov
aas
lock
or
insl
xchg
mov
push
popf
sub
xchg
insb
xchg
fldenv
int3
cmpsl
arpl
xor
xchg
or
rolb
push
push
pusha
in
insl
inc
add
outsl
or
pop
dec
or
adc
cmp
sbb
sbbb
pop
mov
cmpsl
or
out
jle
inc
sbb
add
jp
mov
scas
adc
xchg
or
add
lds
push
jge
pop
ffree
shl
in
inc
pop
mov
popa
ficomps
xchg
lea
stc
sub
cmpsb
addr16
xlat
and
xor
loopne
push
or
mov
rorb
add
add
mov
nop
je
xchg
popf
and
adc
push
mov
xchg
jb
add
or
adcl
ret
insl
lcall
nop
in
and
lcall
sbb
push
negl
cmp
pop
aaa
fldt
iret
jmp
imul
cmp
fdivs
add
add
push
pushf
call
or
icebp
inc
dec
aaa
cld
inc
scas
pop
loopne
push
jg
dec
lods
rcrb
out
fisubrs
sbb
mov
pop
lock
cmp
sbb
rcrb
mov
adc
in
xchg
stos
sbb
notl
mov
dec
dec
adc
add
sub
dec
cmpb
mov
sub
mov
sub
pop
xchg
jnp
sbb
or
outsl
inc
mov
cli
scas
aad
adcl
movsl
xchg
sbb
mov
jmp
int3
dec
xor
scas
outsb
mov
dec
bound
xchg
push
xor
out
inc
lock
jecxz
gs
out
ret
lods
mov
out
dec
or
push
push
sbb
inc
push
shll
loope
sbb
addr16
sbb
pop
daa
mov
iret
mov
aaa
inc
add
xchg
nop
fisttpll
ljmp
into
push
sbb
xlat
dec
cs
sub
push
aaa
add
pop
out
in
fdivs
je
cmp
xor
hlt
int
pop
mov
jnp
pop
flds
push
sarb
jge
repz
pop
or
out
scas
pop
jl
cmp
sbb
test
sub
push
sarl
stos
push
adc
popa
imul
xor
pusha
test
or
pusha
sub
push
pushf
outsb
jne
push
xchg
imul
lcall
xor
stos
mov
ds
push
xchg
pop
xor
and
mov
fistl
jle
jl
in
cwtl
mov
loopne
sub
xchg
add
fldenv
sti
out
mov
les
pop
insb
sub
stos
sub
dec
push
ds
push
test
mov
bound
lea
rcr
add
lret
andps
or
adc
jno
adc
dec
leave
add
in
xchg
incb
shl
cltd
pop
aam
fiadds
test
cmp
out
hlt
push
add
movsb
call
push
cmp
shll
add
shlb
xor
orl
arpl
icebp
js
cs
jmp
jb
test
outsl
add
sub
mov
movsl
mov
mov
fistpll
in
jne
out
mov
add
mov
xchg
jnp
outsl
push
push
push
gs
cmp
mov
cmpsb
push
outsl
inc
mov
lods
dec
stos
xor
clc
sbb
paddusb
mov
shl
je
cs
scas
lock
xchg
jae
fisttpll
lods
jno
arpl
test
in
push
lcall
add
hlt
xor
cli
int
add
int
jge
push
xchg
and
mov
sub
mov
lds
mov
lret
popa
fsubrl
add
jno
dec
dec
xchg
push
fs
adcl
mov
sbb
ret
int
push
pop
in
pop
subb
jo
fbld
pop
cmc
negb
std
mov
xor
jp
adc
fnstenv
or
shl
fcomi
movsl
and
push
in
adc
pop
movsl
mov
daa
dec
test
xor
xchg
jae
outsb
aas
lahf
sub
stc
ja
sbb
pop
aas
subl
fsts
inc
mov
mov
sbbl
mov
out
push
repz
and
jo
cwtl
mov
sbb
in
ljmp
jecxz
mov
movsb
jno
mov
cmp
aas
nop
out
cmp
cmp
test
push
xor
sub
inc
xchg
push
adc
and
call
ja
add
pop
push
scas
into
or
cmp
stos
lods
fistpll
xchg
mov
sarb
push
inc
and
push
insb
inc
fisubrs
adc
pushf
add
or
jp
sbb
stos
cmp
mov
mov
push
aaa
jmp
xchg
inc
scas
je
scas
jae
inc
jmp
xchg
stos
sub
inc
xchg
push
or
outsl
xchg
fadd
mov
pop
xor
icebp
iret
push
loopw
cmp
scas
push
aad
in
les
sub
or
cmpsb
leave
push
dec
cwtl
mov
sub
push
inc
xor
pop
gs
lcall
sbb
iret
aas
jp
xchg
sub
xlat
outsb
movsb
outsl
ja
push
out
in
push
stos
push
out
les
cmp
nop
sub
jno
pop
movsb
xchg
pop
pop
shlb
jmp
inc
jnp
push
out
jl
add
or
dec
adc
push
xor
outsb
mov
mov
sub
movb
rcll
mov
or
mov
jge
xchg
mov
aas
xchg
cwtl
sahf
sti
jns
ljmp
push
repz
js
cmp
int3
aas
mov
fcoml
mov
clc
jg
push
jmp
popf
in
leave
push
adc
inc
jns
mov
mov
push
cmp
cmp
cmp
fwait
xor
mov
shlb
jne
mov
push
xor
rclb
inc
dec
adc
sub
inc
xor
int3
mov
fs
test
jno
sbb
in
add
mov
add
adc
or
mov
in
cmpsl
mov
data16
mov
jge
pop
mov
rorl
jecxz
nop
call
aam
daa
hlt
data16
call
xchg
dec
mov
lcall
test
clc
daa
rclb
movsl
push
dec
js
fisubl
adc
ret
mov
mov
and
inc
fsubrl
out
lea
cmpsl
lock
mov
out
adc
sbb
test
inc
jno
or
mov
mov
mov
std
sti
adc
xchg
xor
cmp
outsb
mov
leave
pop
jbe
sub
jns
test
aas
inc
add
mov
pop
sti
sub
fstps
xorl
bound
mov
add
ret
pushf
das
imul
and
inc
pop
push
fidivrs
out
sub
sbb
mov
outsb
shr
je
xchg
fidivl
sub
mov
dec
orl
outsl
mov
popa
repnz
jns
pushf
push
adc
movsl
mov
vaddpd
andb
dec
dec
ss
xchg
inc
sbb
push
adc
adc
mov
std
fs
dec
and
and
imul
cmc
pop
pop
popf
jmp
adc
cmp
data16
pop
ja
adc
sub
sub
cmp
sbb
dec
adc
stos
fstl
movsl
bound
iret
xchg
add
jecxz
into
sbb
insl
pop
inc
and
arpl
mov
nop
aaa
out
xor
rclb
into
xlat
mov
jp
int3
cltd
outsb
jns
sub
mov
add
push
or
iret
bound
aas
pop
push
sti
mov
dec
mov
inc
lock
push
cli
sbb
subl
imulb
montmul
cmpsb
push
xchg
pop
jg
xor
arpl
and
inc
pop
mov
pop
rolb
ficompl
xchg
jno
shl
cld
mov
fcoms
dec
mov
or
jns
out
cs
add
jae
mov
mov
sbb
xchg
stc
lret
pop
xchg
inc
xor
fnsave
adc
xor
cwtl
test
pop
inc
push
addl
inc
test
out
subl
push
dec
add
xor
mov
in
pop
fdivp
mov
sahf
cmpsl
jb
or
scas
aas
push
xchg
mov
out
fs
mov
cmp
push
mov
outsb
std
mov
sub
cmp
add
push
aam
shr
mov
xchg
ror
js
lds
jo
in
hlt
call
test
rclb
std
cwtl
ss
add
stc
ja
ret
jnp
mov
jnp
fdivrl
in
xchg
les
leave
xchg
fsts
popa
mov
cmp
bound
pop
mull
xor
icebp
push
cs
lds
sub
test
jg
int3
imul
or
addr16
aas
sbb
data16
movsb
imul
add
movsl
jne
jo
mov
scas
xchg
jo
push
jbe
mov
popf
fmuls
push
rorb
jne,pn
mov
nop
std
sub
ljmp
inc
imul
inc
push
sub
hlt
inc
mov
lret
xor
es
xchg
lock
mov
sub
lea
iret
push
push
mov
sbb
ds
or
pusha
adc
mov
in
pusha
xchg
rcrb
xchg
dec
dec
add
add
and
cmp
cmpsl
xor
mov
add
jmp
out
addr16
in
xor
push
sbb
jb
hlt
imul
das
or
jl
cmp
add
jae
aam
jmp
dec
outsb
jmp
ljmp
mov
pop
lds
xchg
dec
xchg
jo
sbb
add
test
lahf
lods
mov
pop
ds
jecxz
hlt
xchg
inc
pop
stc
inc
arpl
mov
outsl
jmp
push
sub
xor
xchg
and
xchg
or
cmp
aad
aaa
popa
lcall
inc
dec
out
pop
negl
cmp
cmp
popa
ljmp
ret
leave
subb
push
add
stos
or
cmc
push
aaa
imul
bound
jl
or
xor
xchg
rolb
dec
push
outsl
ror
scas
xchg
sbb
out
and
or
leave
in
inc
xor
pop
lret
cmp
sbb
bound
incb
shrl
enter
pop
xchg
dec
dec
xchg
mov
sbb
sub
ror
push
sbb
cmpsl
shrl
add
pop
mov
cmp
imul
sub
lret
rcrl
jne
sbb
int3
jl
sbbl
stc
xchg
test
mov
inc
xlat
pop
push
mov
mov
sbb
data16
dec
inc
addr16
ljmp
jbe
sub
mov
pushf
and
mov
jo
rcrb
fsubs
sub
call
addr16
aaa
or
mov
add
icebp
inc
stos
scas
pop
add
lret
xchg
and
pop
push
pop
sbb
test
add
pop
mov
sbb
jg
js
push
fidivrs
pop
je
iret
pop
ret
xchg
jbe
dec
add
loope
mov
in
jge
scas
ror
adc
enter
sub
add
pop
out
sbb
into
out
pop
xchg
pop
les
icebp
cmp
repz
mov
inc
mov
and
cmc
sub
inc
mov
into
jno
scas
fsubr
jae
pop
inc
movl
jmp
mov
in
imul
push
test
test
push
int
pop
fwait
sub
mov
ss
and
lock
mov
jmp
mov
xor
sbb
clc
jp
arpl
inc
push
sub
rcll
jb
mov
add
mov
lods
xor
sbb
in
outsb
sar
adc
add
add
sub
adc
repnz
mov
mov
lods
cld
push
lret
push
xorb
mov
loopne
inc
or
add
insl
jo
imul
into
xchg
bound
addr16
loop
popa
fwait
push
jno
push
pop
mov
jbe
add
cmpl
adc
mov
adc
mov
and
mov
cs
aad
add
pusha
and
hlt
jmp
aaa
lcall
loopne
mov
pop
pop
ljmp
xchg
out
sub
rorl
adc
outsb
ficompl
pop
xor
gs
dec
mov
cmpsl
push
in
cmp
stos
mov
addl
sarl
mov
mov
cmp
bound
mov
stc
icebp
xlat
repz
push
pusha
xor
push
adc
pop
out
or
loopne
adc
sar
imull
lea
sub
sub
pushf
jo
aas
inc
shlb
dec
lods
cmp
push
cmp
lret
mov
push
test
fwait
cmp
mov
ja
cwtl
addb
lods
mov
jge
in
cmc
cmpl
daa
sbb
mov
stos
mov
pop
add
movsb
aas
loopne
or
daa
dec
int
mov
inc
movsb
inc
jl
mov
cld
outsb
mov
sbb
test
popf
xor
or
ret
je
push
add
imul
dec
add
inc
sbb
adcl
push
loope
call
jo
xchg
sbb
ficomps
push
sub
jle
mov
outsb
je
dec
or
mov
testl
mov
inc
jge
cltd
mov
cmove
insl
lahf
iretw
inc
stos
data16
mov
out
fimull
mov
dec
mov
shlb
fs
pushw
stos
mov
or
arpl
inc
mov
pop
sbb
mov
or
lahf
dec
mov
hlt
loope
push
jnp
jne
aaa
out
pusha
mov
and
mov
mov
in
cmp
mov
mov
mov
int3
ss
push
mov
test
lcall
add
dec
inc
dec
xor
sbb
nop
popf
insl
and
xor
je
cmpsb
sub
sub
popa
jnp
push
fadds
popa
aam
xor
mul
jb
test
push
mov
push
icebp
popf
ja
or
jb
stos
mov
cmp
inc
sub
cmp
movsl
scas
push
and
sahf
icebp
iret
pop
sub
clc
daa
mov
bound
xchg
cmpsb
jns
lret
mov
xchg
decb
xchg
andb
pop
adc
subl
mov
adc
jmp
out
into
es
push
xchg
pop
aas
dec
fs
shrb
shll
ror
push
cmpsb
add
cmp
lret
or
lods
stc
xor
push
cwtl
and
sbb
scas
jns
roll
int
sbb
insb
sbb
push
insl
inc
push
aad
mov
mov
insb
loop
mov
pop
ds
lock
shll
imul
dec
sub
push
mov
cmpsb
inc
sbb
cmp
pop
xorl
daa
mov
jmp
mov
mov
xor
jl
shll
int
in
xchg
bound
dec
and
loopne
movsb
ss
cmpsl
or
sbb
mov
inc
mov
push
mov
dec
sbb
cld
fsts
movsl
jnp
dec
mull
jl
jmp
xor
pushf
or
mov
jbe
dec
cmp
in
ret
rcl
xchg
add
lock
xchg
or
jae
test
jp
jnp
lock
cli
aam
dec
dec
rorl
xor
gs
jl
cs
xchg
movl
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
sbb
inc
popa
rcrb
fwait
add
inc
fwait
push
insb
or
sub
mov
xchg
ja
lcall
and
lds
push
les
cmp
inc
scas
xlat
dec
sbb
inc
jo
add
sub
mov
iret
popa
xor
pop
daa
lods
xlat
cld
xchg
jg
out
loopne
int
mov
cmp
cltd
in
popa
jo
fsubr
stos
cmpsb
or
imul
adc
dec
vpcmpeqw
aaa
nop
mov
loopne
decl
insl
cld
test
push
aam
or
or
out
rcrl
repz
aas
push
lahf
pop
mov
push
arpl
mov
adc
mov
cmp
cmp
mov
popa
mov
adc
inc
mov
movsl
int
adcb
xor
inc
jnp
jp
push
add
ret
fs
or
mov
xlat
arpl
push
xchg
add
repnz
enter
stos
push
xor
and
cli
mov
and
aaa
dec
cmpsb
ja
mov
jp
push
sub
mov
cli
and
push
cmp
sbb
add
jnp
inc
mov
ret
mov
mov
dec
int3
jg
sahf
and
aad
cmp
imul
add
xor
pop
mov
inc
sbb
test
mov
dec
jno
mov
mov
mov
call
es
pop
adc
arpl
mov
mov
add
stos
cld
mov
xchg
icebp
fistpl
test
fdivl
jnp
lret
adc
in
xor
cwtl
loop
fisttpl
es
sub
adc
jg
cmp
and
pop
ret
sub
add
lods
out
sub
fwait
in
imul
fstpl
xchg
fdivrl
push
xor
popa
ljmp
dec
xchg
pop
inc
ljmp
add
bound
outsb
sbb
xorb
repz
out
pop
push
test
idivl
cmc
cltd
ljmp
negb
pop
mov
hlt
leave
pop
sti
loope
out
lcall
push
adc
fisubs
lret
jge
and
sbbb
pop
mov
loope
mov
dec
inc
cmp
faddl
out
jle
mov
dec
xchg
inc
fstps
sbb
out
lods
add
dec
push
shlb
out
das
movsb
insl
xchg
lds
xor
push
mov
jge
in
fsubl
cmp
push
aam
mov
insl
mov
int
idivb
ja
adc
pop
ss
ljmp
out
mov
add
sub
mov
jb
movsb
sub
cmp
and
add
mov
inc
lret
dec
pop
sub
jle
pushf
test
fdivr
insl
fsts
lods
aas
push
mov
jnp
dec
xor
jmp
pop
aam
arpl
pop
jnp
lock
shrb
sub
jo
icebp
sbb
test
mov
jge
sub
int3
jb
out
inc
movsb
mov
lcall
popa
in
mov
and
shlb
cld
add
cmc
xor
lret
pop
imul
mov
mov
clc
inc
fs
inc
xchg
ffreep
pop
pop
sarb
mov
and
notl
push
cmpsb
xor
sbb
inc
add
add
xchg
movsb
xchg
xor
push
xor
lea
jnp
jns
data16
lret
loop
and
pop
pusha
cld
lock
lret
cltd
and
or
pop
xor
add
mov
sub
dec
icebp
out
sti
mov
jg
push
in
adc
dec
pusha
push
in
push
push
mov
sahf
jb
sbb
adc
add
xchg
stos
xor
ja
jmp
addr16
xchg
pop
jecxz
sub
aas
sbb
ret
test
adc
pop
int
push
add
stos
sub
shl
xchg
add
sbb
into
sahf
and
xor
xchg
ret
mov
inc
push
lea
or
sbb
int
loopne
je
add
aam
mov
popf
inc
fwait
ds
push
xchg
adc
mov
ret
dec
push
sarl
clc
cmpsb
add
or
shrb
in
repnz
jle
pushf
enter
and
mov
lock
gs
and
pusha
cmp
jae
and
jle
daa
mov
cmp
add
add
pop
inc
dec
sbb
sbb
jae
fwait
and
mov
jb
loop
ret
jg
addb
gs
cmp
pushl
je
mov
xlat
cmp
ds
in
lods
aaa
inc
mov
pop
push
or
pop
push
sbb
mov
movsl
jno
mov
adc
or
sbb
jge
mov
ret
jne
push
int3
inc
shrl
pop
call
push
push
jne
shrd
xor
loope
jl
test
aad
adc
bound
ret
dec
ret
shrb
push
push
cltd
popf
adc
inc
mov
mov
push
lea
xchg
les
and
adcl
jo
mov
and
dec
sbb
mov
push
lahf
into
icebp
sbb
pop
cs
xchg
movsb
add
jmp
fs
stos
in
bound
dec
fldt
adc
nop
add
or
setg
push
inc
sarl
jo
xor
dec
cmp
inc
or
mov
js
loop
xchg
pop
pop
sub
adc
mov
les
sub
cwtl
and
dec
xor
or
jnp
cli
fs
sbb
jns
dec
jne
or
scas
mov
xchg
leave
outsb
enter
sbb
push
adc
dec
out
int
mov
inc
mov
mov
into
int
ds
sub
push
jl
add
lret
mov
pushf
sub
mov
push
jo
scas
cltd
jge
push
jg
pop
dec
imul
daa
mov
jge
or
mov
jmp
cwtl
ret
jne
fildll
stos
mov
test
or
or
sub
push
xlat
jmp
cmp
push
cwtl
xchg
pop
xchg
aam
mov
xchg
iret
and
cltd
mov
ret
and
pop
push
and
mov
mov
push
cmp
jne
stc
repnz
add
pop
jecxz
jns
dec
js
mov
xor
push
subb
jae
sub
xchg
scas
enter
popf
push
ror
xor
pop
nop
fs
frndint
ret
mov
addr16
xor
mov
cltd
xor
bswap
add
cmp
movb
add
inc
and
imul
fimuls
sbb
cs
das
iret
mov
imul
jmp
lea
jns
mov
sti
adc
add
pop
ds
ds
out
sarl
test
test
aam
loop
mov
cli
xlat
sbb
fistpl
push
sahf
cmp
negb
mov
call
mov
lods
lds
pop
lds
out
xchg
xchg
stos
pop
sub
xor
aad
dec
es
mov
popa
fcmovnb
sbb
repnz
js
sbbb
add
cmp
mov
jmp
xor
mov
ss
fwait
xchg
xlat
mov
pop
or
sbb
fs
cli
push
ficomps
int
pop
jle
lods
ficoml
push
add
sub
leave
fildll
and
popa
push
add
push
imul
aad
sub
xchg
test
lahf
ss
sub
inc
xor
std
or
loope
data16
cmp
imul
push
aas
sahf
sarl
push
push
lock
jo
mov
xor
and
sbb
mov
jg
lds
daa
call
fiadds
ss
adcl
adc
adc
addl
mov
repnz
adc
sub
sbb
sahf
inc
cmp
inc
das
roll
mov
mov
js
nop
stos
int3
aad
aas
int3
outsb
push
mov
jbe
vphadduwq
ret
adc
sbb
pop
push
addl
or
icebp
lea
and
pusha
xchg
test
in
mov
fistpl
aam
rorl
jecxz
stos
aad
and
sbbb
int
or
iret
inc
loope
sbb
xchg
and
test
push
aam
mov
pop
fdivr
add
mov
test
xor
inc
lds
std
inc
outsl
repz
rorb
and
xor
push
add
and
jp
in
jecxz
sub
cmc
clc
and
cs
adc
cmp
cmp
addb
mov
scas
pop
add
jecxz
cmc
dec
push
adc
push
test
sbb
or
addr16
gs
cmp
mov
je
cmp
clc
fwait
lret
sub
pop
sbbb
mov
adc
inc
int
lods
roll
in
std
mov
ljmp
rorb
fwait
dec
inc
and
xor
xor
dec
pop
pop
pushf
cltd
mov
jge
scas
ds
jnp
push
sbb
jg
add
notb
fbld
insl
pusha
add
pcmpgtw
pop
andb
daa
fdivrs
outsb
idivl
jmp
iret
mov
inc
xor
shl
push
pop
fsts
aam
xchg
jg
adc
sub
adc
xchg
imul
es
fisubs
mov
test
xchg
inc
shrl
fdivl
xchg
adc
pusha
mov
adcl
std
cmp
inc
lret
mov
add
pop
sbb
inc
icebp
dec
int
aam
jo
pusha
jno
sub
or
popa
pop
add
mov
inc
stos
nop
dec
insb
rcrl
mov
cltd
mov
hlt
cmp
repz
ljmp
xchg
es
loop
sub
int
adc
out
out
jo
insl
inc
and
adc
fistpl
cmc
jle
xchg
fistps
xor
ss
mov
push
decl
iret
shrl
imul
jp
adc
int3
and
sti
imul
imul
cwtl
test
fildll
sub
xchg
clc
or
in
mov
jge
sti
jl
mov
adc
movsb
cmp
and
cmpsl
xchg
cs
and
mov
push
cmp
and
stos
pop
mov
cwtl
push
or
fldcw
mov
repnz
rol
hlt
sbb
xlat
pop
push
lock
jg
push
mov
dec
mov
jnp
repz
dec
lods
push
jg
es
add
add
jo
mov
rolb
jl
push
mov
sbb
dec
mov
push
mov
out
push
mov
decl
and
into
lods
fmul
inc
adcb
ja
mov
or
mov
xor
mov
enter
jo
insl
subb
pushf
pop
push
push
adc
jnp
stc
ds
divb
cmp
iret
cmc
lahf
ffreep
mov
mov
sahf
push
jne
adc
sub
or
adc
lcall
out
gs
outsl
clc
pop
cmp
int
pop
xchg
xchg
ja
in
cwtl
adc
ss
mov
jg
cmp
jp
push
jecxz
mov
inc
scas
xor
pusha
mov
shl
mov
add
leave
push
sub
pop
js
inc
ljmp
xchg
cmp
add
test
adcb
or
push
mov
imul
or
daa
cli
xchg
int3
lods
into
cmp
add
ds
rolb
adc
sub
insb
sahf
xchg
lretw
mov
jnp
fdivrl
pusha
fldlg2
out
jp
jmp
negb
mov
and
insl
hlt
fwait
lds
push
aaa
jae
push
adc
cmp
jge
std
shll
loope
ret
push
imul
or
adcb
pop
mov
inc
inc
cmpsb
hlt
lods
pop
jl
and
ret
enter
add
xorl
push
mov
loop
in
fdiv
inc
fs
popa
and
sarl
mov
sub
lcall
fdivl
jnp
inc
ss
mov
repz
inc
lds
or
and
scas
loopne
dec
int
dec
cmp
or
test
dec
pop
inc
in
xor
fldl
fsubs
and
pop
insb
stos
cmp
nop
sbb
dec
xor
iret
add
cld
imul
push
shll
jae
fwait
lcall
ja
push
enter
sub
sbb
lock
mov
test
xor
xchg
mov
outsb
call
mov
add
push
push
pop
cmc
pop
mov
insl
fsubr
or
loope
inc
out
mov
clc
fidivl
add
sub
fidivrs
cmpsl
mov
dec
mov
mov
add
leave
sub
push
rclb
sbb
and
pop
into
dec
jle
add
out
cmc
mov
adc
push
rorb
aas
call
sub
insl
test
mov
sarl
scas
mov
mov
inc
push
arpl
in
cs
pop
mov
fdivrl
ja
mov
add
stc
fidivl
xchg
test
jns
mov
pop
lods
and
xchg
push
inc
pushf
lods
fidivrs
mov
mov
jg
mov
pop
inc
mov
loope
js,pn
sarl
call
and
jg
mov
mov
movsl
mov
mov
mov
loope
stc
cltd
jnp
add
jp
xor
out
sbb
lods
push
adc
jne
push
dec
out
sub
outsl
jecxz
out
mov
imul
lods
lods
pop
push
mov
aam
jno
jecxz
repz
add
lahf
add
bswap
cmp
xor
cmp
xchg
outsb
xchg
shlb
fisubrl
dec
popa
aas
js
out
mov
sbb
and
jg
xchg
test
jns
imul
pop
jp
and
xchg
test
inc
or
sbb
aaa
pop
ljmp
mov
lods
ja
fisubs
orl
jl
scas
out
int
fwait
adc
popa
pop
les
aaa
mov
cmp
clc
push
and
frstor
mov
leave
aam
les
jae
ljmp
scas
add
out
arpl
jg
cmpl
adcl
sub
jno
popf
pop
sbb
sub
xor
sbb
cmpsl
jecxz
in
inc
mov
push
pop
push
mov
lock
nop
cmp
or
je
test
daa
mov
sub
jno
aam
or
xchg
and
jno
jb
test
fimull
mov
cld
aaa
adc
stc
iret
add
dec
or
dec
call
or
adc
and
push
lahf
pop
add
stc
ds
addr16
imul
xor
std
stos
dec
sti
in
dec
and
dec
adc
int
call
push
js
and
mov
idivl
pop
pushf
daa
cmp
add
nop
sub
push
mul
lret
subb
jmp
rcll
pop
inc
sub
in
xor
cld
je
adc
popa
mov
mov
movsl
push
out
mov
sub
and
xlat
fidivs
mov
out
sbbb
push
jae
sub
push
dec
adc
pop
pop
je
cld
pop
push
jnp
mov
or
adc
pop
ret
add
mov
adc
mov
imul
test
and
mov
repnz
mov
jnp
pop
into
xor
jmp
pop
mov
push
cmp
out
and
push
pop
test
in
xchg
adc
mov
xchg
scas
inc
lahf
xor
fisubl
js
sub
movsb
sub
jmp
jne
xchg
mov
dec
inc
out
adcb
out
stos
mov
stos
scas
int3
inc
rcrl
pop
xchg
movsb
jp
fsubrp
fidivrl
arpl
repz
inc
inc
sbb
adc
mov
pop
push
cmp
cs
xchg
mov
sahf
clc
dec
into
hlt
push
pop
lock
inc
mov
xchg
xor
jno
leave
arpl
out
repz
jg
icebp
aas
sbb
fisubl
xchg
xor
dec
adc
push
ds
dec
sbb
loopne
jbe
ljmp
test
and
cmp
in
adc
and
std
leave
adc
mov
js
pop
dec
inc
sbb
pop
movsl
lcall
jnp
xlat
pushf
push
stc
jbe
or
test
loop
ret
ror
outsl
lea
pop
xchg
jp
push
fcompl
subb
jmp
jg
popa
js
stc
push
in
pop
jge
jecxz
dec
test
daa
xor
adc
jmp
add
fadds
lods
in
fisttpl
icebp
pop
xchg
or
test
arpl
inc
ds
mov
pop
cmp
jns
dec
dec
cltd
daa
popa
insb
or
arpl
mov
leave
xlat
mov
mov
xorb
fdivs
mov
mov
mov
jle
adc
test
mov
add
mov
jmp
mov
fwait
and
sbb
int
loope
ret
cmp
popf
jl
jae
inc
call
test
xchg
arpl
addr16
test
ret
int3
fidivrl
ja
mov
repz
ret
and
sarb
cmp
rorl
adc
out
add
fwait
adc
in
arpl
mov
xor
outsl
stos
int
sbbl
pushf
xchg
inc
and
inc
mov
mov
mov
pop
data16
xor
loop
sbb
mov
jb
jp
mov
jnp
adc
mov
dec
andl
mov
push
adc
push
sub
lcall
icebp
xchg
insb
sub
int
adc
mov
aam
push
xchg
push
insl
loop
pop
pop
sbb
popl
dec
cmpsl
sti
sbb
fnsave
cmp
fdivs
push
outsl
jg
xchg
test
xor
outsb
fs
cwtl
lea
outsl
jnp
jb
ss
arpl
xor
ja
xchg
fs
mov
jmp
leave
call
stc
xchg
lea
cmp
inc
dec
loope
jb
pusha
add
bswap
inc
mov
fdivs
dec
xor
dec
gs
mov
gs
or
repz
mov
leave
push
mov
clc
fdivrs
mov
cli
std
cmpsb
cmc
dec
sbbb
xchg
and
mov
jne
cs
xchg
mov
inc
and
cmp
sub
repz
cmc
sbb
aas
mov
push
xor
in
xchg
adc
add
or
sub
mov
adcl
cmp
je
inc
inc
mov
out
lret
lret
sbb
in
in
jp
pop
mov
jno
ss
sbb
xor
andl
dec
dec
daa
dec
sbb
fwait
mov
lds
or
aaa
or
cmp
hlt
in
fadd
push
notl
pop
mov
out
fmuls
je
jne
cmp
sbb
call
repz
sub
mov
add
sbb
dec
mov
ja
es
adcl
xor
jae
jmp
sbb
mov
sarl
mov
fistps
pop
mov
movsb
xchg
sti
push
scas
pop
test
push
and
mov
lods
sub
sbb
mov
repnz
mov
and
push
leave
iret
shll
push
add
adc
arpl
jo
or
push
ljmp
cmp
cmpsl
mov
addr16
movsl
stc
and
repnz
or
test
out
adc
lods
stos
inc
xor
jge
in
fidivrs
mov
mov
mov
loopne
pop
mov
inc
mov
nop
inc
xor
cmp
insl
cmp
or
in
shr
push
or
xor
or
fwait
xchg
stos
jmp
pop
xor
test
mov
repz
push
repz
push
lds
cmp
stos
sti
sbb
adc
pop
gs
xchg
sub
repz
movsl
gs
daa
jmp
xor
lret
pop
sarl
ret
lret
jecxz
adc
outsb
js
jne
push
xor
mov
xchg
ljmp
pop
inc
pop
sub
cld
mov
mov
xchg
adc
test
fcoml
xor
call
and
loope
or
mov
lret
fisubs
imul
push
push
mull
cmp
dec
rcr
mull
dec
subb
int
and
pop
shll
movsl
notl
sub
mov
ss
pushf
add
cmpsb
push
cmp
lret
hlt
call
adc
mov
sub
int3
adc
ja
pop
sbb
sub
lcall
mov
int3
cmp
add
jae
shr
or
loopne
and
addr16
stc
push
loope
sub
sarl
xor
in
add
mov
push
mov
and
fwait
inc
or
pop
pop
pusha
xor
les
inc
push
or
sarl
sub
into
dec
mov
test
es
push
mov
arpl
xorl
idivl
cltd
push
out
inc
and
push
repz
add
push
inc
mov
cmpsl
dec
jecxz
and
popf
out
push
or
cli
in
notb
push
inc
pop
sbb
cmp
xor
and
mov
mov
rcll
adc
xchg
xor
add
stos
out
mov
mov
push
mov
cltd
xor
sbb
les
call
sub
sub
inc
add
and
adc
mov
sub
dec
aad
jecxz
mov
out
mov
in
std
mov
ror
mov
xchg
pop
lcall
mov
and
mov
or
jg
lock
jae
shl
scas
fidivrl
jnp
lahf
add
adc
in
aam
dec
or
xor
dec
lds
mov
pop
fcoml
lock
pop
paddw
test
cmp
sbb
and
xor
add
aaa
iret
mov
cltd
call
fsubl
dec
in
fs
and
ljmp
imul
xchg
ret
push
call
xor
inc
mov
out
test
hlt
and
jecxz
rclb
xchg
cmp
aaa
mov
bound
cmp
xchg
cmp
scas
mov
test
negl
xchg
push
in
pushf
adcl
mov
mov
adc
nop
test
movsb
sahf
push
sub
mov
mov
sbb
mov
add
jnp
mov
out
adc
fcoml
cli
fimuls
add
mov
addr16
jno
mov
fistpl
lret
fisubrl
lods
mov
and
ljmp
std
insb
jo
xor
inc
sbbl
mov
sbb
aaa
and
out
xor
pop
rcrb
popf
xchg
stos
pop
adc
and
stc
sahf
inc
cmp
sbb
ljmp
int
fwait
cwtl
cmp
mov
insl
xchg
rorl
es
fwait
sub
xor
push
out
cmp
das
adc
or
dec
mov
nop
outsb
dec
add
or
sub
adc
cli
cmp
stos
repnz
clc
lds
ret
leave
daa
lea
mov
mov
add
repnz
mov
adc
push
and
xchg
pop
sub
mov
scas
adc
cltd
jno
jns
mov
or
xor
hlt
pop
rclb
into
orl
pop
aaa
add
popf
push
std
repz
gs
lds
pop
cmc
les
imul
movsb
in
sub
xchg
lods
sub
xchg
in
mov
adc
pop
mov
loop
orl
pop
sbb
mov
mov
pop
xor
popf
mov
push
xor
jecxz
inc
sbb
testb
push
jl
mov
out
lods
mov
pop
mov
xchg
cmpb
or
adc
int3
lret
jne
mov
test
or
in
push
mov
pop
jno
cmc
cmp
pushf
cmp
aad
pop
mov
mov
ss
push
mov
lea
pop
cmpb
push
xor
mov
sarb
adc
in
inc
push
iret
pop
stos
rcrl
lret
scas
and
cwtl
imul
mov
inc
scas
sbb
inc
icebp
mov
stos
add
or
xchg
or
addr16
cltd
shrb
sahf
mov
mov
push
dec
out
inc
or
out
aaa
mov
fwait
jno
bound
push
loope
mov
cs
xor
adc
loopne
adc
sbb
call
mov
sbb
lods
lret
outsl
ljmp
pop
sub
push
cmpsb
inc
and
inc
push
dec
mov
lret
outsb
pop
jb
xor
scas
fdivrl
arpl
mov
inc
jle
xor
and
outsb
xchg
jo
cmp
cmc
dec
stc
mov
mov
repz
decb
adc
es
scas
jae
dec
insl
xchg
repnz
mov
lods
clc
mov
sbb
xchg
jno
add
outsb
xchg
out
inc
push
xchg
scas
or
divb
popf
scas
test
movsb
jo
pop
inc
adc
lret
jnp
sub
jns
stc
adc
mov
movb
repz
std
fcomp
in
jmp
insb
jl
arpl
cmpsb
push
imull
pop
dec
cs
stos
cmc
sub
mov
popa
and
sbb
mov
and
inc
out
cld
in
mov
cli
dec
or
mov
sbb
outsl
je
sub
nop
dec
mov
cwtl
mov
mov
push
cmp
push
lahf
dec
mov
cmp
divb
mov
jae
hlt
xor
hlt
mov
push
xor
mov
out
call
pop
loopne
or
cmp
in
lret
jns
loope
les
enter
fisttpll
lret
xchg
das
lock
xrelease
pop
arpl
fldl
into
cmp
loopne
pop
and
sbb
andl
lock
insb
dec
sarl
lds
jl
andl
adc
jecxz
mov
adc
int
into
and
lcall
mov
xor
pop
push
rol
xchg
aam
jmp
push
cli
adc
outsb
inc
fldl
sub
fldl
out
imul
or
inc
sti
xchg
jae
or
xchg
jno
imul
sub
in
inc
into
ret
aad
and
sbb
xor
dec
cltd
pop
test
repz
test
sub
iret
cmp
mov
cmp
mov
dec
xchg
sbb
mov
sub
add
mov
push
xchg
mov
push
sub
push
add
add
cmc
aam
lahf
movsl
xor
xchg
add
xchg
int
fistl
xchg
cmp
xchg
xchg
js
pop
mov
mov
jo
leave
fcoms
mov
stc
imul
dec
mov
cwtl
push
jne
data16
mov
jecxz
jo
cmp
shl
nop
clc
lock
je
popa
mov
icebp
test
mov
lds
xor
and
mov
inc
mov
or
mov
mov
outsl
fisubrl
cmpxchg
sub
daa
lahf
cwtl
js
scas
rorl
mov
mov
cmp
rcrb
stc
mov
les
and
adc
inc
cwtl
push
std
daa
mov
dec
insb
repz
fs
out
jge
inc
int3
outsb
cmp
jne
push
imul
dec
dec
pop
movsb
push
into
subl
pop
push
imul
les
in
dec
mov
repnz
or
filds
push
mov
cmpsb
jo
xor
mov
or
ss
rcrb
dec
cmp
xchg
shlb
sti
or
aas
fadds
dec
repnz
fwait
ljmp
jp
pop
setno
orb
sahf
outsl
mov
into
push
dec
ljmp
cmp
mov
jg
rcrl
mov
cmp
jbe
sub
jbe
jns
cmpsl
adc
testl
jae
jmp
adc
stos
aad
mov
lea
ja
in
push
clc
mov
rcll
sbb
xchg
dec
xor
ret
or
dec
aad
jno
inc
push
jg
andb
daa
sarb
pop
or
test
mov
xchg
lods
jl
loopne
int
sbb
mov
je
push
xchg
jmp
rclb
test
lock
inc
or
ljmp
cld
icebp
dec
stos
vcvtsi2sd
jl
aas
mov
nop
cmp
lods
inc
rcll
stos
and
cs
cmp
xchg
sbb
adc
sbb
xor
xchg
cmp
nop
mov
insl
push
fstpt
cmp
adc
int3
sub
dec
leave
sbb
inc
lea
xor
scas
ja
or
cmpsl
and
ja
push
out
ss
or
pop
call
and
jnp
or
adc
outsb
jle
iret
in
mov
aam
or
cmpsl
jne
xor
push
sub
or
in
pop
mov
fnclex
pop
imul
cmp
cmp
mov
pop
xchg
mov
pop
xor
push
pushf
movsl
enter
inc
mov
lret
arpl
mov
rclb
push
or
cli
arpl
inc
test
ror
popf
pop
int3
mov
js
mov
pop
jne
push
or
shlb
jg
lock
lret
mov
xchg
aad
mov
clc
adc
push
or
mov
cmpsl
cmpsb
pop
sbb
mov
mov
dec
push
fnstcw
mov
push
pop
mov
xchg
test
mov
in
sahf
mov
mov
sti
dec
xor
xor
push
scas
or
std
ret
fisubl
lret
pop
movsb
into
mov
flds
and
repz
xor
xchg
sahf
scas
cmp
in
xlat
mov
ficoms
bswap
into
clc
xchg
movsl
arpl
out
loope
cmp
or
movsb
aaa
or
cmp
fwait
popa
ds
xchg
push
lods
out
clc
mov
adcl
pop
lock
stc
fnstenv
jbe
mov
fdiv
fmuls
cmp
jmp
lret
push
inc
jb
nop
mov
scas
dec
fiadds
push
cmp
sti
pusha
dec
adc
rclb
or
jge
out
out
mov
bound
mov
pusha
sub
fmuls
cmp
mov
clc
rolb
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
cltd
js
popa
rcrb
inc
out
and
cmc
in
xor
push
jg
inc
cmp
and
test
jns
inc
stos
pop
jmp
mov
dec
jne
and
xchg
cmp
ljmp
add
cmp
and
mov
outsl
sbb
lea
ss
pop
fwait
movsb
imul
adc
loop
imul
arpl
int3
mov
sti
cmp
xor
add
sub
lahf
dec
or
popa
cld
negl
add
jle
or
and
push
test
into
add
mov
mov
aas
jns
mov
mov
cmp
jle
loop
addr16
das
int3
in
lods
test
outsl
gs
setge
aad
das
inc
pop
mov
lret
int
repnz
into
es
and
pop
aam
or
shlb
dec
cmpsb
push
popa
ret
test
shll
lea
rol
call
es
xchg
stc
fcomip
mov
pop
iret
pop
push
addr16
imul
add
outsl
push
scas
xchg
scas
nop
sahf
mov
sub
jnp
mov
bound
andb
dec
jbe
popa
iret
test
sub
sub
mov
add
cmpsb
jg
xchg
push
jl
pop
dec
daa
rcll
lods
in
pop
gs
out
add
arpl
popf
lods
jno
and
xchg
inc
ret
dec
and
or
sub
mov
ds
test
mov
mov
pop
mov
lcall
jecxz
les
cmpsl
arpl
loop
std
scas
adc
test
fdivrl
and
rorl
outsb
movsl
mov
rcl
fists
add
ret
sbb
and
nop/reserved
lock
idiv
cmp
mov
inc
imul
in
sbb
adcb
xor
ljmp
inc
xor
and
dec
push
lods
sbb
pop
or
sbb
mov
sub
into
and
sbb
push
loop
or
push
ret
mov
xor
cmp
lret
loope
arpl
mov
out
movsl
insb
sbb
mov
pushf
mov
rcr
push
filds
sbb
xchg
push
in
cmp
xor
and
mov
rorb
insb
addr16
leave
arpl
popa
xchg
out
add
loopne
inc
aam
adc
cli
bound
jg
jne
mov
push
inc
repnz
insl
stos
dec
leave
xchg
repz
movsb
xchg
mov
test
mov
mov
or
push
jle
and
xor
or
add
sub
mov
out
add
or
push
test
adc
jbe
cmpsb
cld
ja
pushf
test
pop
inc
push
dec
lods
sahf
popf
adc
push
dec
repz
bound
shr
mov
cmpsb
cli
out
mov
xchg
xor
push
scas
cmpsb
mov
repnz
pop
out
push
dec
adc
mov
push
out
inc
test
add
jge
push
dec
sbb
mov
ror
jb
dec
addr16
out
jb
xchg
and
leave
cwtl
mov
or
push
push
mov
push
mov
dec
mov
popf
scas
lock
sub
mov
icebp
fiaddl
frstor
sub
fs
and
rorb
xchg
stos
dec
and
subb
bound
into
pop
jns
gs
loopne
scas
sub
enter
or
test
or
fdivl
imul
jae
clc
push
fnstcw
sub
jg
int
cld
adc
push
ljmp
mov
xchg
popf
lcall
les
xchg
jo
sbb
sbb
mov
add
pop
jmp
add
push
idivl
pop
jl
jge
and
lods
movq
lahf
pop
cld
push
push
ja
cmp
rcrb
push
lea
dec
jnp
leave
sbb
cs
xchg
loope
out
repnz
cmp
mov
jmp
aad
lret
imul
adc
fstpt
xchg
sbb
aaa
push
xor
loop
scas
jg
les
cmpsl
mov
sbb
inc
outsb
fsubl
pop
call
stos
sub
fnstcw
mov
lods
xor
jbe
aaa
mov
iret
ljmp
in
lds
daa
mov
and
dec
sub
lea
int3
cmp
loopne
pop
stc
dec
stos
sbb
xchg
xchg
mov
push
mov
add
xchg
cmp
shll
in
loopne
shrd
push
push
lods
ret
shll
cli
mov
jecxz
orb
dec
xchg
mov
sub
rclb
xchg
xchg
imul
jno
adc
lret
jne
lcall
sub
mov
xchg
xchg
sahf
add
popa
inc
sti
mov
push
cmpsl
push
fsubs
in
lahf
or
adc
pop
movsl
icebp
repnz
lret
ret
outsl
xchg
push
and
push
and
mov
lds
mov
cmc
adc
pop
cwtl
xor
out
imul
negb
cmp
cli
push
and
pop
je
or
inc
leave
push
outsb
loopne
mov
out
jbe
inc
rorb
movsb
cmp
sub
fnstcw
pop
inc
sub
out
insl
cmp
xor
sub
and
je
mov
sub
pop
inc
xor
push
add
loop
push
rorl
mov
fisubrl
loopne
jbe
ret
sti
mov
jno
mov
cmpl
mov
push
mov
lcall
inc
shrb
sbb
gs
data16
mov
lret
mov
imul
mov
lret
ljmp
mov
loopne
or
negl
out
pushf
mov
pop
lea
xor
adc
jno
mov
mov
mov
insb
lahf
movsl
test
sarb
jl
add
add
pop
inc
or
jge
les
or
gs
and
out
ror
jae
cmovl
hlt
add
mov
and
jp
in
inc
mov
jge
push
inc
inc
dec
test
fisubl
mov
or
lahf
sub
dec
sbb
cli
dec
push
js
daa
xchg
stos
scas
dec
scas
int3
jno
xchg
mov
adc
idivl
cmpsl
mov
andb
repz
add
mov
adc
cli
pop
jbe
push
mov
dec
sub
sbb
sbb
fisubrs
cs
ret
push
je
lods
sub
iret
jnp
fdivp
inc
sbb
pop
xchg
or
std
push
fistl
mov
or
inc
sub
inc
int
or
lret
test
mov
scas
daa
dec
ret
scas
popa
lret
or
dec
test
loopne
ret
addr16
stos
push
jae
jmp
hlt
aaa
push
out
adc
lahf
pop
cmp
je
xor
push
sbb
sbb
popf
xchg
ficompl
je
test
push
or
fstps
jmp
push
pop
jp
inc
aad
xchg
test
jno
in
pop
pop
clc
stc
jbe
xlat
sarl
xchg
jl
cmp
pmulhuw
iret
mov
pop
or
adc
jnp
pop
push
adc
sbb
aas
jmp
xchg
mov
dec
xor
gs
push
int3
movsl
dec
jge
mov
jns
popf
mov
lods
push
xor
pop
add
sub
outsb
push
add
push
shrb
mov
jmp
push
cmpsl
cltd
cli
xchg
daa
inc
and
xchg
sub
out
movsb
lahf
push
mov
add
cmc
loope
and
repz
fimuls
dec
and
push
ds
das
out
or
dec
cmc
inc
lds
adc
mov
and
mov
inc
or
jle
test
jg
insl
hlt
clc
mov
jbe
pop
sti
fdivl
mov
jge
fists
arpl
xor
sub
arpl
cmp
dec
xor
mov
push
sub
lods
pop
adc
data16
cmp
mov
js
xchg
mov
imul
movsl
fstpt
sub
sub
in
rol
cli
out
pop
add
sbb
stos
stc
and
jne
pop
jmp
jne
and
mov
pushf
xchg
adc
leave
dec
dec
stos
outsl
jge
lcall
adcb
aaa
cmpsb
pop
sub
rorl
mov
mov
add
test
add
push
push
sbb
movsb
add
sub
aas
sahf
push
jl
inc
mov
lds
push
je
fisubrl
xchg
xor
xor
shr
in
repz
xor
inc
andl
cmp
inc
in
sbb
sub
fsubrl
shrb
loop
add
push
sub
repz
push
xchg
daa
sbb
push
mov
imulb
dec
test
mov
or
mov
mov
xchg
cmc
xor
loop
inc
call
inc
adc
xchg
lock
mov
mov
outsb
push
xchg
test
sub
sub
daa
cmpsl
mov
sbbl
jb
pushf
lret
jl
adc
and
pop
daa
adc
mov
lcall
cmp
mov
cmp
leave
out
jecxz
xchg
pop
cli
out
mov
jno
adc
bound
mov
add
and
cmp
sbb
jbe
jle
fisttpl
add
pop
orl
mov
bound
jo
sbb
dec
cmp
sti
test
pop
das
jb
les
xor
cmpsb
mov
mov
stos
xchg
daa
push
push
mov
push
outsb
and
ljmp
push
addb
insl
ret
xchg
aaa
xlat
notl
push
mov
mov
jnp
adc
add
leave
loopne
addl
pop
jmp
mov
je
add
rclb
rorl
inc
mov
xor
push
mov
sbb
iret
add
cmp
cmp
push
inc
sbb
xlat
sbb
fidivs
cmp
mov
popa
mov
xor
cwtl
jecxz,pt
xor
or
mov
inc
and
xchg
cmp
add
loope
push
pop
les
or
xchg
sbb
inc
cmpsb
dec
push
sarl
jp
fs
ret
in
jne
pushf
push
or
jl
add
inc
push
test
inc
ret
xchg
arpl
xchg
pop
addr16
aad
sbb
fwait
or
ja
fldenv
arpl
sbb
mov
add
xor
in
sub
cmpsl
jo
testb
push
js
sbb
mov
or
das
rcll
jg
inc
adc
mov
mov
leave
daa
sar
xor
lods
in
shrl
jmp
int
sub
xchg
sbb
fmuls
mov
out
sbb
icebp
mov
xlat
lods
xor
xchg
xor
pushl
cli
divl
lea
xor
xlat
stc
and
or
xchg
jo
xor
setns
pop
outsb
iret
out
mov
insb
mov
pop
movl
inc
pop
jns
xlat
sub
ss
inc
inc
divb
insl
gs
mov
outsb
sbb
mov
or
add
xor
or
cwtl
xchg
loopne
imul
or
push
xor
mov
das
dec
mul
mov
mov
icebp
imul
out
dec
sbb
lret
mov
and
pop
xchg
cmpl
lea
inc
jns
fdivl
mov
pop
xchg
and
mov
imul
push
pop
ljmp
hlt
push
fdivl
cmp
inc
xchg
mov
push
mov
shr
dec
fldenv
fisubl
xor
js
jo
mov
inc
xchg
lock
jge
and
adc
dec
dec
xchg
xor
mov
int
push
stos
into
jle
in
cmp
xchg
pop
adc
sub
and
lcall
loop
addr16
dec
nop
mov
jnp
xor
fisubrs
pop
jg
inc
push
test
cmp
std
cmp
xorl
jle
cltd
xrelease
shrl
ret
call
nop
outsl
test
insb
adc
xchg
xlat
dec
inc
fisttps
or
dec
je
cmp
out
jbe
xchg
push
data16
push
int
sar
lahf
loope
les
or
xchg
jg
mov
divb
jge
cmp
faddl
out
push
push
mov
test
cwtl
xchg
dec
cmp
jb
sub
push
sub
mov
sub
mov
mov
imul
data16
mov
xor
pop
imul
sub
test
add
and
imul
add
push
pop
mov
sbbl
pushf
lea
mov
fsubl
mov
add
mov
iret
insl
iret
cs
jae
dec
sub
mov
mov
aaa
pusha
mov
inc
add
out
ds
out
mov
scas
je
es
lock
pop
loope
mov
dec
xlat
xchg
push
mov
sbb
popa
push
sub
and
scas
int3
push
fdivrl
push
dec
pop
and
cmpl
pop
cmp
push
pusha
xor
mov
fwait
and
inc
push
mov
scas
push
in
jno
and
adc
pminsw
push
cmp
fnstcw
push
inc
sub
sbb
fidivs
je
popf
fwait
lea
cmc
and
push
lahf
shld
aad
adc
cmp
pop
jge
into
fldenv
jl
pop
or
addr16
lods
xlat
cli
and
jae
out
cmp
push
jno
jge
inc
pop
adc
rolb
stos
test
xor
mov
rcrb
js
mov
ljmp
insl
dec
adc
popa
mov
or
jl
dec
aas
dec
push
inc
das
popf
aam
adc
hlt
stos
adc
jmp
es
out
xor
mulb
mov
call
sbb
mov
scas
ret
sub
js
and
mov
int
and
scas
mov
aad
pop
mov
lods
subb
fidivrl
mov
loope
jns
pop
mov
sbb
add
jl
dec
mov
push
lods
adc
and
pop
fwait
popf
mov
push
lret
push
popa
xchg
add
sbb
sub
mov
jle
xchg
aad
push
test
out
fs
es
push
mov
std
repz
mov
cmpsb
enter
and
pop
scas
pusha
add
cmpl
push
pushf
cwtl
push
push
inc
or
decb
out
pushf
xor
imul
out
lcall
js
xor
mov
out
and
shl
dec
mov
fldl
jg
dec
pop
xlat
jecxz
inc
inc
adc
and
rcrl
xor
sti
inc
mov
mov
mov
out
jbe
or
cli
and
dec
das
pusha
stos
aam
aad
pop
adc
gs
daa
hlt
mov
mov
push
inc
push
jp
lods
jg
and
repz
cmpsl
dec
mov
pop
imul
sub
out
sbb
fdiv
shlb
and
or
testb
ret
fidivrl
push
jnp
rcll
lods
mov
fcmovnbe
in
mov
sti
scas
sbb
out
jbe
into
push
xor
cmpsb
pusha
add
mov
jmp
scas
sti
and
cli
out
cltd
gs
jns
mov
fwait
xor
les
fsts
inc
sbbb
idivl
enter
and
mov
test
pop
lock
mov
stos
mov
lods
mov
inc
or
movsb
cmp
pusha
pop
sub
and
push
movsl
push
call
leave
sti
adc
xlat
cmp
fs
fistpl
in
push
xchg
cmp
or
push
sbbl
and
sub
lods
dec
mov
sahf
add
mov
decl
push
iret
clc
test
cwtl
mov
mov
and
cmp
pop
mov
test
mov
test
lret
inc
mov
jmp
nop
hlt
fsubrl
jnp
sbb
aam
xor
rcrb
push
repz
fdivl
imul
xor
sub
add
or
scas
xor
mov
xchg
jne
out
out
movsl
jle
jnp
pop
sbb
pop
das
sub
mov
enter
jbe
es
xchg
or
mov
mov
jbe
out
jl
lret
mov
cmp
lods
xor
jecxz
stos
test
gs
dec
mov
imul
aad
xor
psrlw
aam
clc
push
xor
sbb
push
jbe
pop
in
adc
les
xor
ja
iret
mov
xchg
cwtd
cmp
pop
ds
lods
cld
sti
push
push
shrb
fisubrl
sti
aaa
and
sbb
les
jle
je
inc
es
clc
xor
ja
xchg
mov
pusha
out
arpl
das
mov
cmpsl
cmp
enter
test
push
or
pushl
cmp
in
shr
pushf
pop
push
scas
sub
dec
fisubrs
xor
cmp
mov
cmpsl
sbb
mov
ss
mov
test
rcl
call
dec
and
cwtl
or
cmc
and
inc
mov
sbb
aad
xchg
lret
lods
test
mov
fwait
jb
jmp
pop
and
movsl
rolb
jno
dec
call
lods
mov
ficoml
rcrb
ret
fnstsw
ljmp
movsl
jnp
arpl
rcr
not
vcvtdq2pd
cld
cwtl
orb
out
mov
push
mov
mov
sbb
aam
fisubs
xor
fiaddl
iret
inc
add
sti
std
insb
mov
mov
ret
and
push
xor
roll
roll
in
movsl
sub
imul
cmp
inc
outsb
inc
in
mov
into
push
sbb
dec
dec
xchg
jecxz
mul
inc
lods
imul
int
mov
pop
and
add
ljmp
push
cmpsb
xchg
xchg
insb
add
dec
jns
mov
adc
cmp
or
cld
mov
test
adc
mov
mov
or
or
xor
jne
push
push
sbbl
cltd
add
dec
rolb
lret
fsubl
cmp
jnp
mov
add
enter
cwtl
je
scas
jecxz
mov
js
data16
pop
insl
imul
mov
push
mov
fisttpll
inc
stos
fwait
clc
lret
insl
sbb
sub
nop
mov
dec
stos
sti
jl
jae
lahf
mov
jnp
scas
add
mov
psubd
scas
hlt
lret
mov
sbb
pop
jae
lahf
pusha
pushf
mov
add
sbb
arpl
insl
xchg
insl
push
dec
loopne
mov
mov
leave
mov
nop
mov
addr16
fcmovne
pusha
pop
adc
test
fistpl
andb
roll
mov
adc
scas
and
pop
jne
pop
inc
aam
mov
inc
sub
stos
add
cli
cmp
out
scas
inc
mov
mov
ja
push
push
sub
loope
jne
fsubr
push
jecxz
dec
ljmp
addl
jns
outsl
in
sub
aad
inc
mov
mov
xor
fcmovu
dec
mov
inc
fwait
push
mov
popa
jg
test
loopne
fnsave
pushf
sub
mov
dec
cmp
adc
jle
mov
orb
subb
lock
lahf
lahf
mov
pop
lret
xchg
mov
out
rcrl
xor
gs
hlt
or
mov
push
in
ret
cmp
outsb
and
xchg
xchg
sbb
cwtl
mov
ja
fists
test
mov
adc
out
arpl
rol
push
sbb
cmp
mov
mov
xor
ss
cmpb
hlt
lods
xor
adc
sub
mov
mov
cwtl
bound
enter
mov
out
out
jbe
jl
jle
sti
movsl
test
inc
in
jecxz
hlt
lcall
sahf
fadds
mov
jns
push
pop
sub
xchg
xor
sub
and
cli
and
lret
push
jns
sbb
pushf
scas
jno
inc
in
scas
mov
aam
shl
sbb
addr16
adc
shll
scas
jmp
mov
leave
sbb
or
or
mov
push
push
push
pop
mov
dec
push
jo
pop
dec
fcompl
sub
mov
xor
add
xchg
jle
in
push
popf
cmpsb
xchg
shlb
and
hlt
popa
arpl
loope
push
sub
and
push
das
cmp
test
xor
std
jne
cli
pusha
xchg
clc
jne
addr16
inc
lock
inc
cmp
sub
pop
sub
push
push
xor
and
stc
bound
sbb
pop
das
inc
or
inc
cmp
mov
mov
lcall
add
xor
cmpsl
test
push
int3
leave
jecxz
adc
and
or
cmp
xchg
jg
lret
insb
cmp
or
push
xchg
out
sbb
je
fsubl
xchg
stos
add
jg
xor
and
iret
pusha
stos
sub
sbb
pop
sbb
loop
push
mov
mov
test
mov
inc
or
pop
xlat
jo
add
call
mov
adc
pop
std
pushf
pushf
mov
lret
js
pop
sub
mov
inc
mov
fnstsw
lcall
rolb
cwtl
and
fsubl
xor
mov
fwait
push
jo
mov
test
inc
or
sbb
aas
mov
in
enter
insl
xlat
xorb
jmp
xchg
outsb
sti
enter
call
imul
lea
jmp
xor
roll
cmp
mov
inc
movsl
inc
movsl
ret
repz
xchg
shll
and
jbe
mov
fsubr
mov
adc
push
mov
sbb
jno
scas
stos
std
or
sarb
sbb
bound
lret
clc
xchg
xor
mov
je
fidivrs
push
push
decb
int3
call
pop
jmp
daa
cmp
adc
pop
push
inc
repz
aad
cmp
dec
cmp
inc
mov
xchg
ss
cld
push
adc
mov
lcall
add
and
jl
lret
repnz
cwtl
daa
daa
aam
inc
outsb
std
sub
dec
xor
ljmp
mov
test
mov
das
leave
xor
mov
icebp
jle
pop
dec
loop
and
push
jne
sbb
lock
lock
mov
mov
icebp
shlb
add
dec
rcl
mov
rcl
add
adc
rcrl
push
jecxz
std
fsubs
lds
xor
add
sahf
aam
pop
test
lock
inc
adc
gs
xor
inc
daa
or
xor
pop
fnstcw
movl
jnp
mov
add
pop
ss
dec
jmp
bound
loope
inc
je
pop
dec
fidivrs
in
or
sub
int
imul
icebp
mov
sarb
sub
das
les
add
adc
push
and
shlb
arpl
xor
stos
jecxz
cltd
mov
repz
jecxz
dec
pop
mov
addb
xor
imul
movsl
cs
aaa
adc
xor
or
insb
jae
std
int
and
sub
rclb
cld
mov
sbb
mov
mov
mov
pop
xor
jge
mov
movsb
xchg
leave
insl
clc
sbb
icebp
mov
sysexit
mov
call
jae
xor
adc
cmpsl
sarb
xchg
pop
insl
pop
adc
mov
shll
pop
lret
xchg
stc
dec
pop
lea
lock
andb
jno
cld
mov
xchg
scas
dec
int
test
mov
inc
data16
aam
and
in
rcr
add
mov
fstpt
add
pusha
xchg
insl
sbb
rol
dec
xor
mov
pusha
xchg
mov
add
fwait
pop
loopne
jmp
sub
jg
jo
les
scas
fcomps
jns
push
dec
push
inc
xchg
sub
test
mov
jb
inc
outsb
push
scas
pop
xchg
mov
test
add
lock
out
pop
scas
shll
inc
xchg
xchg
mov
inc
test
and
test
js
dec
jns
xlat
adc
std
js
test
jns
sub
adc
mov
dec
dec
inc
jns
pop
add
outsl
push
xchg
into
or
lret
out
push
imul
test
mov
push
les
or
jb
out
jbe
xchg
leave
mov
or
mov
rorl
outsb
mov
mov
lods
cltd
pop
jmp
xchg
mov
push
hlt
add
jp
in
insb
enter
bnd
out
mov
out
js
push
outsb
decl
pop
pop
xchg
jnp
negl
loopne
repz
dec
sub
roll
test
xor
outsb
mov
ja
adc
jmp
shll
mov
rcrb
push
jbe
push
mov
out
and
mov
mov
ror
das
jbe
push
inc
cli
js
pop
xchg
aaa
push
sub
iret
shrl
xor
imul
mov
xor
out
xchg
xlat
jecxz
rcr
lahf
adc
jae
mov
mov
pushl
fldenv
xor
lods
mov
pusha
lock
mov
cmpsb
cmp
outsl
ljmp
orl
cmp
fimull
lret
mov
cmpsb
int
popf
pushf
dec
push
inc
enter
xchg
cmp
push
inc
add
inc
jl
call
jecxz
push
test
fwait
add
ret
adc
inc
pop
int
testl
movsl
pop
push
jns
jmp
gs
jno
and
je
mov
adc
in
xor
jle
aas
scas
or
xor
cmp
sub
bound
xchg
push
or
fnstsw
popa
dec
cmc
in
mov
inc
in
jnp
jmp
xchg
in
mov
cmpsl
jnp
xchg
adc
sbb
sbb
test
dec
xor
mov
mov
and
pop
rcrl
aam
sbb
pushf
or
pop
mov
push
into
add
cmp
add
fistl
nop
jb
mov
cwtl
leave
cli
inc
mov
push
inc
adc
or
push
arpl
mov
sub
jge
les
out
pop
push
loop
add
jg
imul
leave
sbb
subb
adc
fs
ret
and
into
fdivrs
inc
dec
xor
in
pop
push
stos
pusha
sti
add
je,pt
punpcklbw
pop
in
mov
xchg
mov
and
sub
and
bound
aam
cltd
pause
ja
scas
cwtl
xchg
shlb
lret
rolb
xchg
int3
adcb
leave
inc
adc
out
cmpsl
and
mov
xor
stc
sub
mov
push
hlt
test
pop
out
push
insl
out
notb
cld
push
push
jno
xchg
call
stos
pop
bound
ret
inc
lds
mov
mov
das
or
shl
call
mov
bound
push
push
jge
fists
xchg
ficoml
or
cltd
shl
out
lods
faddl
dec
or
in
aas
aad
lods
scas
lods
test
push
aaa
pop
enter
lcall
arpl
inc
mov
scas
mov
cld
lock
lds
mov
aad
pop
bound
cmp
xor
js
inc
pop
clc
lret
xchg
xchg
or
inc
sbbb
insl
fsubl
je
nop
add
lret
adc
orl
test
mov
pusha
jmp
psubusb
or
cmc
mov
push
sbb
icebp
out
ja
loope
adc
and
pop
fcoms
jmp
nop
push
pop
jmp
dec
jns
or
dec
push
es
bound
aaa
mov
dec
inc
sub
dec
inc
jg
inc
mov
in
dec
fistl
or
sub
jle
cmp
mov
cmp
add
cli
xchg
scas
jns
jnp
lret
leave
lds
xchg
cmpsl
test
ja
cmp
sub
mov
xor
gs
lods
insb
xchg
and
mov
xchg
std
insb
test
fneni(8087
test
dec
and
fdivs
sub
mov
jmp
lret
lods
int
sahf
sbb
push
add
in
jp
mov
in
pop
jge
int
dec
mov
xlat
mov
cli
aad
fstps
adcl
out
lock
pop
or
cmp
adc
lock
xchg
xlat
xor
and
pop
fdivr
mov
adc
test
mov
xor
loopne
popa
lds
ja
arpl
aaa
dec
loope
cli
loope
mov
pop
loopne
jg
fwait
push
mov
pop
dec
fstl
outsb
pop
inc
popa
or
lds
loope
mov
popa
lock
pusha
or
jo
lds
mov
push
sarb
fcomip
sub
sbb
gs
pop
sub
imul
add
dec
cmp
movsl
test
jecxz
cmp
scas
mov
test
les
faddl
xor
jae
lahf
push
pop
xcrypt-ofb
cmpsl
in
test
sub
sbb
ljmp
out
fsubs
or
push
sti
push
ja
fistpl
iret
push
shlb
repnz
sub
popa
xchg
cmpb
loope
xchg
js
lock
cli
pushf
rorb
dec
mov
fsubrs
jmp
sbb
inc
subb
jle
mov
negb
xchg
insl
in
pop
push
inc
xor
pop
and
dec
icebp
lcall
inc
and
pop
ljmp
in
and
stos
push
cmpl
sbb
adc
call
out
retw
out
loope
add
inc
ss
jge
popf
cltd
ljmp
push
mov
sub
sub
mov
jo
repnz
in
cmp
mov
push
mov
mov
leave
sub
push
iret
cmp
test
dec
cmp
gs
mov
xchg
push
pop
xor
push
je
pop
jns
int3
push
jns
in
and
dec
sbb
in
jnp
xchg
out
jg
aas
ja
idivb
std
add
xchg
inc
cmp
lea
cltd
test
jg
inc
test
jg
imul
test
mov
out
mov
in
lcall
xlat
or
repz
sub
xor
arpl
dec
and
push
je
fcomi
or
clc
repnz
and
pop
jae
xor
cmp
sbbb
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
sub
repz
cmp
popa
rcrb
push
pop
daa
mov
jbe
xchg
cmp
adc
call
daa
std
je
in
stos
fsubl
les
xchg
xor
psadbw
mov
xchg
jnp
xor
cmp
push
sbbb
mov
movsl
daa
mov
cmp
cmp
dec
cli
jbe
jmp
cltd
addb
sti
inc
mov
mov
mov
in
adc
sub
insb
clc
jo
pop
mov
nop
mov
and
out
xorb
bound
dec
filds
jne
push
insb
pop
test
or
mov
push
fistpl
test
inc
adc
movsl
xor
ljmp
inc
push
sub
fisttps
nop
mov
jns
sbb
aad
rep
adc
xchg
mov
pop
mov
mov
rcrl
enter
xchg
xor
or
dec
in
orb
aas
jo
sbb
push
inc
repnz
mov
repz
push
jns
xchg
dec
lea
testl
add
sub
pop
ja
cmp
sub
scas
lret
mov
add
int3
pop
xor
ror
out
xchg
xor
pop
lcall
mov
add
test
filds
xchg
add
outsl
movsl
adc
ja
fcoml
pop
hlt
les
fidivs
out
rorb
insl
cmp
pop
pushf
enter
inc
add
adc
test
idivb
inc
dec
sti
mov
lahf
mov
cltd
xchg
sbb
inc
jnp
mov
or
adc
push
xor
test
inc
mov
cltd
inc
fwait
mov
lret
mov
sbb
stos
mov
out
rcrb
pop
push
add
push
sbb
sub
ret
repnz
xorb
movsl
lcall
sbb
imul
xor
mov
cmovnp
stos
pop
push
jg
and
testl
pop
xchg
fisubrs
mov
pop
es
adc
xor
adcl
xor
pop
imulb
sbb
xchg
cmp
or
stos
jge
movsb
push
pushf
xor
bound
push
data16
mov
int
inc
rcll
inc
dec
cmpl
rorb
or
and
jmp
inc
sub
cmpsb
imul
mov
ffree
in
fbld
add
aaa
int
xchg
loope
jbe
aas
lret
sbb
add
or
repnz
push
push
mov
add
lods
test
sbb
mov
repnz
xor
outsb
scas
ljmp
fstps
jo
mov
sbb
clc
adc
xchg
outsl
inc
jb
fucomp
push
sub
daa
adc
push
or
inc
shrl
fnstsw
enter
cmp
jp
add
sub
push
and
xchg
push
orl
and
dec
sub
lcall
hlt
test
lods
cmp
pop
cmpsb
sbb
outsb
adcl
jmp
pop
mov
dec
add
es
jne
xor
lods
pop
push
arpl
int
pop
cltd
dec
dec
mov
mov
aam
in
mov
mov
rorl
movsb
jbe
rorb
insb
test
dec
mov
cmp
mov
sarb
dec
lret
scas
lret
lods
leave
mull
das
adc
mov
div
imul
dec
jecxz
inc
nop
lds
sbb
cld
aaa
dec
pop
pop
sahf
mov
inc
jae
pop
fwait
fwait
cmpsl
testb
rcr
out
lock
or
scas
inc
jnp
outsl
and
xchg
or
movsb
f2xm1
xchg
pop
xor
aas
push
mov
dec
lods
into
xchg
out
add
adc
dec
pop
scas
push
std
out
enter
or
pop
js
sbb
jne
int
gs
out
std
sbb
cld
stos
push
lret
jb
adc
push
cmp
inc
or
pusha
pop
outsb
dec
lret
pop
or
and
sbb
mov
ret
test
mov
xchg
enter
cmp
pop
stos
out
test
and
call
inc
into
outsb
popf
test
insl
test
lret
pop
or
enter
cmp
daa
sahf
mov
sub
je
dec
dec
lods
std
xchg
mov
jno
adc
add
gs
cmp
aad
dec
xor
les
push
lret
cltd
adc
pop
mov
or
cmp
jg
mov
pop
das
mov
sbb
loop
andl
std
jae
push
add
inc
mov
dec
cmpsb
sub
pop
aam
push
sub
imulb
popa
xor
sub
inc
mov
push
enter
lods
add
or
lods
xchg
jne
xchg
mov
imul
repnz
push
adc
xlat
jge
out
inc
jno
insl
mov
scas
scas
cmp
pop
sub
aad
arpl
cltd
fiadds
fcmovb
dec
xor
daa
shl
div
dec
cmp
mov
scas
lret
sub
xor
cwtl
lea
pop
pop
push
subb
and
sub
icebp
push
sub
push
cld
push
loop
lea
mov
mov
pop
enter
adc
popf
imul
sub
push
pop
jp
call
lahf
lods
daa
movsl
pop
adc
lods
sub
xchg
popa
lds
mov
jge
or
add
xorb
and
mov
dec
das
mov
inc
mov
cmc
imul
xchg
mov
inc
sahf
popa
mov
cld
dec
inc
test
into
les
mov
xor
jo
add
and
jg
imul
jge
cmpsl
xchg
mov
dec
push
sbb
loope
dec
mov
xchg
xchg
cs
fiadds
lds
into
sbb
fstp
xchg
push
pusha
jns
je
mov
inc
ficompl
push
xorb
sub
push
stos
sbb
scas
mov
dec
loopne
inc
mov
pop
and
fwait
das
push
in
ljmp
pop
es
sahf
lods
pop
and
loope
stos
pusha
popf
xor
xchg
in
movsl
mov
push
rcrl
movsb
test
clc
lcall
pusha
jle
add
mov
pushf
add
nop
int3
test
cld
jmp
mov
mov
sbb
imul
jne
jl
cmp
push
add
lcall
jae
testl
mov
and
rcrb
sar
in
dec
mov
or
inc
xchg
pop
test
mov
adc
adc
les
cli
mov
ss
push
icebp
xchg
out
mov
icebp
xor
or
int
repnz
xor
shr
add
pop
out
lret
mov
loope
lods
jb
inc
adc
and
mov
adc
out
lret
and
jo
push
je
dec
stc
aam
xlat
jge
mov
stc
int3
jg
sbb
xor
inc
sub
cld
in
push
das
jecxz
cmpsl
jbe
push
movsl
cmp
stc
scas
ja
mov
or
leave
int3
inc
int3
cmc
fistpl
out
dec
lods
dec
je
mov
shlb
cld
mov
mov
movsl
xchg
pop
mov
adc
xor
mov
adc
ljmp
add
mov
adc
sub
sti
movsb
jle
lock
mov
xor
popa
daa
push
lea
in
mov
dec
cmc
clc
addr16
xchg
stc
into
jne
andl
scas
hlt
idivb
mov
jge
cmp
mov
dec
pop
xlat
sbbb
mov
arpl
sub
out
lret
dec
lahf
pop
push
push
out
icebp
addr16
sub
lcall
imul
inc
or
outsb
frstpm(287
movsb
ffreep
mov
cli
int
xchg
ja
filds
pop
add
fs
inc
jb
sub
and
sbb
or
ljmp
cmp
insl
inc
xchg
dec
addr16
lahf
add
mov
sti
pop
or
fistl
sahf
or
shl
pop
or
cmpl
adc
fsubrl
gs
stos
fldcw
dec
jg
sbb
sub
and
mov
dec
fidivl
jnp
mov
jb
add
pop
push
xchg
test
ret
jb
jp
and
daa
test
sti
add
rolb
dec
or
mov
jo
inc
jp
pop
mov
in
push
stos
fwait
jecxz
ljmp
icebp
in
inc
sub
aad
inc
mov
jl
imul
mov
push
ret
inc
bound
bound
addl
fistps
int3
xchg
cmp
jne
mov
gs
fstl
test
notb
test
inc
nop
test
inc
mov
divb
scas
or
xlat
cs
inc
push
xor
lods
daa
cmp
into
add
loopne
clc
mov
or
pop
xor
ljmp
xcrypt-ecb
cmpsl
or
mov
lock
inc
inc
stos
int
loope
icebp
lret
fs
cli
lret
sbbl
push
dec
movb
std
and
pop
and
jnp
adc
in
lds
cmp
jmp
push
pop
add
inc
loope
lahf
inc
and
popf
mov
jb
in
addr16
lahf
jmp
jmp
add
test
jbe
sbb
and
cmp
push
xchg
into
sbb
repz
sbb
xlat
jne
negb
jae
xor
add
sub
cmp
std
movsl
mov
inc
aad
jmp
sbb
dec
das
mov
out
ficoml
sub
addb
das
aaa
xor
cmpsl
inc
mov
dec
push
cmp
adc
add
lahf
jns
push
mov
ret
sbbb
mov
dec
jbe
xor
lea
mov
sbb
push
out
xor
xchg
test
pop
js
xor
bsr
xchg
cmc
jmp
xchg
sub
jg
ljmp
xor
mov
int
in
into
rolb
arpl
repz
and
lock
leave
or
xor
scas
clc
sbb
fdivs
sbb
push
cmpb
or
or
ljmp
dec
mov
pop
push
lahf
je
pop
stos
lret
insb
fsubl
outsb
fldcw
lret
mov
mov
mov
pop
mov
out
es
pop
or
cmp
jl
mov
or
mov
fisubrs
inc
push
adc
cmp
ret
mov
jecxz
xor
or
add
sbb
sti
push
lods
and
out
enter
xchg
addr16
jg
out
fimuls
stos
shrl
inc
inc
stos
sub
movsl
loop
mov
xchg
pop
push
jp
sub
imul
xchg
mov
cwtl
cmc
push
xchg
mov
dec
std
out
dec
mulb
or
ljmp
add
pop
je
sub
fidivl
repz
cmpl
xchg
icebp
je
and
jne
dec
mov
push
repnz
stos
pop
into
mov
pop
cmp
xchg
aad
in
add
pop
movb
sahf
sbb
push
loope
int
dec
pop
fstl
adc
das
jl
mov
and
pusha
pop
mov
aad
cli
lret
xor
cltd
into
icebp
cmpl
aaa
ss
jecxz
adc
jnp
cmp
xor
rol
mov
xchg
out
mov
test
icebp
inc
frndint
cmp
sub
shlb
mov
pop
lahf
dec
hlt
sbb
je
in
push
dec
outsb
adc
outsb
outsb
inc
and
lret
mov
pop
jmp
inc
stos
jo
jae
outsb
pusha
cwtl
mov
sub
adc
mov
addr16
hlt
cs
mov
xlat
call
testl
pushf
ja
or
cltd
repz
push
mov
stc
push
xadd
shlb
mov
ja
in
xchg
jbe
push
lea
or
jno
xorl
inc
jl
orb
push
mov
addr16
mov
pop
mov
js
shl
sbb
and
lret
sahf
divb
xchg
sarl
jae
movsb
out
push
jo
dec
clc
mov
or
adc
add
sbb
push
out
pop
xor
pop
jnp
and
mov
lret
hlt
inc
adc
xorl
jg
cs
scas
xlat
arpl
mov
jle
or
sbb
xor
add
or
das
das
cld
mov
popa
or
sub
addl
mov
or
lea
daa
cli
hlt
lret
movsb
dec
cld
decl
jno
mov
loopne
cmp
dec
mov
in
lahf
xchg
fldln2
jnp
xchg
faddl
or
ja
lods
dec
push
dec
jmp
enter
iret
add
dec
xchg
insb
mov
dec
iret
ds
mov
xchg
cmp
dec
push
cmp
push
ds
inc
dec
out
mov
ljmp
lods
xor
in
rcl
mov
aam
pop
lock
test
lods
push
lock
roll
jbe
mov
dec
outsl
fdivl
rcr
daa
loopne
decb
mov
movsl
or
dec
sbb
add
cli
xchg
daa
jg
test
push
mov
or
inc
mov
ljmp
xor
das
cmpl
sbb
xchg
mov
mov
dec
mov
mov
add
mov
fwait
gs
sbb
rcrl
pop
inc
fildl
sub
sbb
add
fsubrs
push
lea
shrl
mov
imul
ljmp
mov
adc
adc
and
sub
fsts
xchg
lret
mov
in
or
sbb
data16
inc
jns
fwait
icebp
filds
and
dec
adc
movsl
adc
push
adc
out
mov
or
pushf
std
jp
out
out
ja
pop
mov
dec
push
dec
cli
out
jo
adc
inc
or
rcrb
adcl
mov
add
or
xchg
jnp
push
lock
int3
cld
leave
sbb
cmp
aad
fcmovnb
je
sub
xchg
les
pop
ss
xchg
shll
loop
in
cmc
push
push
repz
fstpl
cmpsl
sti
popa
in
mov
pop
fadds
sbb
inc
push
add
stc
popf
and
mov
mov
mov
add
js,pt
fdivrl
and
addl
call
daa
in
sub
sub
inc
xchg
ljmp
sbb
in
push
mov
das
inc
addl
or
add
xchg
push
cwtl
dec
mov
xor
push
pop
in
mov
es
mov
aas
shll
add
dec
lcall
pop
push
jne
pusha
sub
mov
push
movsl
scas
inc
dec
pop
lcall
out
adc
and
xor
sub
mov
mov
mov
mov
pop
out
xchg
jmp
lret
arpl
pushl
rclb
mov
ss
popa
xchg
pop
ljmp
add
lods
addr16
jnp
dec
jg
xor
adc
jb
outsb
adcb
iret
xor
jle
adc
sub
jne
adc
gs
mov
jne
test
jne
fistl
repnz
xor
pop
fisubs
or
das
pushf
push
sub
dec
leave
adc
push
hlt
sbb
aas
sub
loop
lock
mov
lahf
icebp
and
push
mov
push
and
adc
jecxz
loopne
pop
jge
cmpb
push
dec
popf
enter
or
dec
mov
or
mov
pop
push
leave
and
cwtl
das
pop
sub
jmp
ja
cmp
mov
push
or
ss
imul
add
leave
cmp
add
mov
jecxz
sarb
jb
rolb
bswap
daa
cmp
inc
out
repz
lock
pop
stos
xor
inc
or
lock
fimull
inc
arpl
dec
cmp
out
call
add
cli
into
cmp
lcall
xor
ret
sub
rcll
rcrb
fcomp
xchg
adc
mov
jno
mov
fbstp
add
data16
stc
popa
aas
repz
inc
mov
sbb
mov
js
aad
pop
sbb
add
pop
mov
lock
into
fwait
je
inc
or
repnz
xor
sahf
mov
pop
mov
aas
popf
jmp
push
lea
xchg
jg
lds
jo
mov
mov
ss
sbb
xchg
xchg
push
mov
adc
xor
adc
cmp
arpl
mov
mov
pop
mov
daa
pop
mov
sbb
lret
cmp
stos
push
cmp
adc
xchg
int3
movq
out
test
add
test
lods
jb
shl
dec
mov
pop
add
jle
scas
lcall
shr
les
std
jo
mov
in
or
fsubrp
adcb
push
sbbb
es
aaa
mov
sbb
mov
pusha
sarb
popa
movsb
dec
xor
add
fldt
xchg
adc
out
shl
cmc
pop
dec
fisttpl
or
mov
sti
sbb
scas
adc
push
in
test
sbb
fs
nop
xor
je
test
push
stos
pop
mov
imul
inc
aam
xchg
cmp
les
repnz
fmuls
stc
cmp
fisttpll
lahf
or
jbe
fcoms
fwait
push
cwtl
jno
dec
data16
in
add
xchg
push
push
mov
push
and
in
cli
mov
dec
xchg
outsl
rorb
data16
or
lahf
xchg
movsb
dec
jg
push
mov
mov
lret
mov
popa
idiv
adc
insl
xchg
fwait
out
pop
mov
and
pop
rcr
push
dec
adc
mov
inc
cltd
shl
cmp
pop
loopne
shl
sti
ret
mov
rcrb
add
push
or
movsl
or
add
push
xor
push
sub
std
out
push
xchg
pop
xchg
int
cmc
mov
cmp
test
test
jno
jb
movsl
stos
fwait
je
cmp
cmpl
push
pop
stc
xor
xchg
test
cld
repnz
pop
push
mov
iret
jo
cli
push
repz
fstpl
lcall
xchg
mov
fsqrt
push
into
lret
das
sub
xchg
test
int
or
jns
mov
pop
cld
cmp
push
stc
cli
mov
scas
les
xchg
popf
mov
push
push
stc
test
mov
ret
cmpsl
jle
add
je
xor
ret
stos
mov
xchg
add
and
xchg
inc
mov
movsl
std
jle
bound
ret
sti
mov
inc
cmp
fdivrl
movsl
push
dec
adc
popf
sbb
fldenv
rol
loop
jmp
jns
mov
push
je
stc
fisttps
dec
mov
data16
jns
je
push
fcmovbe
int
daa
add
xchg
call
cmp
repnz
aas
or
xchg
cmpsl
pop
mov
test
or
dec
imul
pop
jno
lahf
dec
xor
call
adc
push
lret
pop
dec
and
push
test
outsl
dec
test
add
jae
sbb
enter
loopne
add
fyl2x
aaa
lret
add
clc
insl
sarb
cs
adc
xchg
mov
cmp
inc
dec
aas
and
lods
enter
ror
sub
cmp
mov
mov
insl
xorb
cmp
cld
jb
fnsave
test
xor
add
ss
xchg
xor
lds
test
xor
insb
xor
test
sub
test
daa
jl
dec
dec
inc
add
jno
ret
cmpb
mov
fisubrl
cltd
out
popf
pop
jnp
ja
jae
loope
or
icebp
dec
cmpl
jl
xchg
pushf
data16
sbb
shrb
pop
cwtl
fadd
or
lcall
mov
out
sub
xor
xor
xlat
ficoms
jb
xchg
lods
idivl
xchg
pusha
push
lret
aas
jl
js
outsl
xor
iret
sub
imull
lahf
insb
dec
add
test
nop
iret
test
xor
loopne
enter
xchg
mov
or
inc
icebp
daa
lret
movsb
fdivl
lods
mov
mov
sbb
enter
jae
pop
mov
movsl
jecxz
or
mov
pusha
push
icebp
xor
lret
jbe
imul
sub
or
rclb
jmp
ret
iret
bound
pop
out
dec
fwait
mov
jp
mov
add
outsb
lods
fcoml
gs
enter
inc
pop
arpl
lods
xorb
into
mov
sub
loopne
adc
popa
aam
fldenv
ljmp
imulb
pop
lahf
imul
ljmp
cs
fnstcw
inc
xchg
jne
cmpsb
adcb
das
fwait
mov
movb
js
lcall
mov
imulb
mov
jno
je
js
jo
leave
nop
das
inc
xor
lahf
lcall
fmull
pop
insl
sbb
or
push
sub
sbb
dec
lds
dec
xor
and
add
loop
stos
popf
dec
sub
inc
cmc
lock
pop
push
mov
mov
sub
sub
xor
loopne
outsl
dec
add
jecxz
mov
mov
in
mov
sahf
pop
mov
mov
int3
adc
imul
lods
shlb
mov
sub
mov
out
jno
sub
inc
xchg
xchg
push
pop
push
call
es
cmp
adc
es
push
xchg
xchg
addl
dec
cmpsl
sbb
cli
lret
or
push
adc
jnp
cmpb
cmp
add
xchg
xchg
movsl
std
jo
push
push
sub
clc
ljmp
push
jns
xchg
inc
mov
iret
jno,pt
pusha
aam
lahf
out
and
outsb
xchg
outsl
add
aas
mov
mov
inc
jge
lods
insl
sbb
rcrl
xchg
bound
jle
mov
inc
jnp
add
sbb
dec
pop
pop
aaa
and
insb
ret
fisubl
jnp
cmpsb
cmp
push
leave
ficompl
cmp
xchg
xchg
ss
push
dec
ss
sbb
cmp
je
call
cwtl
hlt
lret
pop
pushf
or
push
cmc
xlat
jmp
ret
xchg
dec
xchg
loopne
insl
lods
sti
sbb
or
ljmp
push
sysret
popf
adc
mov
mov
pop
lret
in
dec
inc
pop
push
inc
pop
adc
rcl
mov
cmp
pop
in
jb
pop
mov
js
cmp
add
divps
shll
pushf
in
and
sub
movsl
sub
mov
lods
cmp
mov
ss
fwait
call
sub
daa
pusha
xchg
lods
sub
or
and
add
clc
aad
sub
push
push
out
adc
iret
call
loopne
mov
mov
bound
out
mov
icebp
pop
add
mov
mov
xor
bswap
jg
push
pop
lret
xchg
test
movsb
xchg
outsb
iret
fnstsw
imul
mov
fwait
inc
and
es
mov
roll
push
inc
adc
out
sti
je
mov
fistps
cmc
shl
leave
ljmp
xor
sbb
and
subb
das
mov
dec
inc
dec
jb
idivb
out
inc
mov
icebp
mov
inc
sub
add
inc
or
mov
cmp
jnp
sbb
sti
push
jns
ljmp
and
push
mov
adc
add
add
xchg
mov
outsl
or
mov
fcomip
repz
pop
fdivl
cmpl
xchg
fnstsw
pop
xlat
xchg
sbb
jne
cmp
mov
mov
test
lcall
cwtl
movb
jbe
mov
or
rcrb
test
mov
ss
adc
push
fsubrs
and
cmp
push
testl
adc
cmpsb
xlat
cltd
jecxz
andb
mov
out
push
js
aam
es
push
enter
push
sbb
mov
lret
sbb
aad
jmp
into
aam
mov
popf
cmp
pop
jmp
loop
stc
stos
shl
aaa
enter
dec
adc
enter
mov
outsb
adc
inc
xor
jns
or
arpl
mov
repz
cmp
les
movsl
push
adc
mov
lock
push
mov
mov
nop
test
loope
sarl
ljmp
fcoms
inc
inc
add
arpl
pop
dec
aad
dec
ljmp
jns
dec
stos
loopne
das
xor
or
aam
fucomi
mov
jns
add
jnp
pop
lds
push
dec
les
xor
mov
cwtl
xorl
mov
sub
cmp
shrl
push
out
xor
roll
mov
je
jbe
xor
in
outsl
sbb
fisubl
nop
xchg
jmp
enter
xlat
aad
hlt
add
xchg
repnz
mov
mov
or
movsb
jle
mov
repz
cmp
fs
jae
sub
icebp
fcmovbe
push
lds
out
addl
mov
inc
fists
mov
dec
sti
outsl
or
loopne
xor
mov
leave
jo
pop
sarb
movsl
xor
xor
dec
mov
ljmp
xor
mov
adcb
ss
daa
pop
xchg
in
sti
jl
lret
sbb
push
in
jnp
sub
js
fcoml
ret
and
xor
and
lods
popa
cmc
cwtl
cmpl
mov
mov
adc
inc
jmp
jg
loopne
lea
out
ja
mov
rcrb
jmp
test
test
pop
scas
pop
mov
add
bound
jp
xadd
outsb
aaa
and
add
rolb
data16
js
push
pop
stc
adc
inc
cmp
inc
or
std
xchg
or
dec
adc
jmp
mov
sar
mov
push
xor
out
jno
xor
imul
xor
dec
cmpl
jp
xchg
xchg
pop
xor
test
or
and
and
dec
cmp
bound
jbe
mov
out
mov
adc
lcall
lret
ror
cmpsb
push
or
out
inc
ret
arpl
mov
popf
mov
mov
insb
cmc
sub
mov
pop
imul
sub
out
filds
es
enter
sub
lods
push
jnp
push
pop
aad
insb
pushf
jecxz
mov
mov
push
cwtl
nop
jns
push
xor
sub
push
and
stc
mov
and
orb
jg
lods
mov
jo
test
jb
fists
movsb
pop
and
adc
cmp
repz
xchg
cmp
or
fidivrs
pop
inc
loope
fnstsw
xchg
enter
scas
test
mov
xchg
insl
lock
xchg
in
push
sub
and
mov
and
test
aaa
and
jo
das
jmp
rclb
jno
mov
sub
xlat
outsb
ret
sub
xchg
add
outsl
sbb
ret
or
mov
sbb
push
fmuls
cmp
andb
adc
adc
mov
repnz
dec
inc
test
and
mov
mov
dec
cmp
mov
jns
mov
das
sub
stos
pushf
xlat
loope
fdivr
mov
jmp
imull
mov
dec
mov
jmp
sahf
scas
or
enter
mov
mov
mov
mov
mov
add
push
inc
or
adc
jne
int3
adc
jbe
add
stc
test
mov
pop
imul
adc
jmp
push
sub
mov
movsl
outsb
or
dec
shlb
jns
movl
cmc
pusha
cmp
shrl
mov
pop
je
xchg
mov
pop
mov
mov
sub
lcall
cmp
push
sti
cmp
or
mov
fs
fs
or
inc
rol
aas
cld
pop
mov
cli
mov
iret
test
inc
mov
sub
add
add
and
cmp
sub
jne
and
outsb
js
lahf
mov
sub
arpl
dec
aam
cmp
cmc
push
and
roll
push
and
fnstcw
test
cmp
das
add
aaa
pop
ds
mov
sbb
std
repnz
push
fcomps
stc
xlat
sbb
pop
or
lldt
adc
loop
push
nop
iret
std
push
sub
cmp
push
mov
daa
mov
sarb
pushf
stos
into
add
push
fucomi
cli
outsb
xchg
les
popa
mov
ss
mov
cmp
cld
enter
mov
adc
cmp
xchg
pop
xchg
mov
mov
loope
aaa
xor
xor
test
lods
stos
dec
mov
sbb
jge
push
and
les
pop
cmp
inc
dec
addr16
cs
cmpsl
and
xchg
rcll
cld
sti
push
xchg
adc
pop
xchg
lea
cmpsb
xchg
cmp
adc
sbb
jns
mov
icebp
jp
imul
xchg
imul
leave
iret
aad
xchg
scas
popa
adc
pop
mov
or
mov
je
pop
adc
inc
push
jle
add
lcall
cmpl
sub
daa
mov
ja,pn
je
div
mov
scas
outsb
xor
mov
into
adc
jnp
ret
jb
inc
dec
jl
je
adc
and
add
les
mov
dec
fs
or
jp
popa
push
int3
rorl
imulb
inc
rcr
insl
test
jb
adc
dec
outsb
pusha
aaa
les
aaa
shll
stc
les
push
andl
test
xlat
xchg
push
ficomps
sbb
lds
js
arpl
jae
sub
push
adc
ss
pop
mov
rcl
popa
jecxz
gs
mov
xlat
js
test
or
std
cmp
sub
jae
pop
mov
pop
xor
gs
cmc
jp
push
lahf
xchg
leave
int3
enter
xor
ljmp
and
xlat
ljmp
imul
push
push
test
jne
dec
jmp
int
ret
divb
add
pop
jle
hlt
ficoms
ljmp
aas
int
enter
sub
jae
out
cmc
or
jmp
adc
lea
stos
sub
data16
adc
in
inc
les
or
xchg
mov
add
les
lahf
bnd
and
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
ror
xchg
cld
popa
bound
bound
push
adc
lods
cmp
mov
jbe
rolb
sub
test
stos
mov
cmp
stos
cmpl
jo
pop
xchg
xor
subb
mov
mov
out
idivb
insb
mov
or
sar
dec
pusha
imul
xchg
xor
dec
pop
add
test
nop
xor
test
scas
or
xor
mov
fisubs
xor
adc
jg
cmpsl
jns
mov
push
stc
mov
mov
sbb
or
mov
inc
push
jnp
cwtl
pop
dec
loopne
in
jle
mov
js
and
out
mov
add
call
hlt
js
fs
xchg
mov
push
xchg
stos
sbb
jo
lahf
popf
lret
mov
adc
fcmovb
lods
movsb
inc
nop
mov
sub
push
lods
icebp
and
push
outsb
hlt
mov
shll
cli
push
mov
dec
xor
push
xor
jnp
lods
lahf
js
mov
inc
or
cmpsl
fbld
push
xor
xchg
out
mov
pop
inc
pusha
and
push
push
xchg
in
pop
clc
xchg
daa
jle
insl
pop
inc
jbe
scas
cmp
icebp
loop
mov
add
adc
mov
sahf
lret
rolb
dec
pop
mov
roll
add
cmp
cmpsb
scas
dec
xor
es
test
mov
xchg
push
mov
push
push
out
pop
lods
fdivl
cmovno
sbb
mov
repnz
and
mov
into
pop
hlt
sbb
mov
mov
pushf
push
outsb
jo
ss
fucom
lret
sbb
dec
enter
xorb
mov
bound
test
xchg
es
les
mov
test
or
xchg
cmc
pop
jecxz
cmp
mov
xchg
dec
test
mov
mov
les
adc
sbb
cmp
sub
les
out
lods
rol
pushf
vsqrtpd
icebp
jle
or
in
dec
dec
jp
xchg
daa
cwtl
std
sub
xor
test
inc
or
movl
or
mov
lret
mov
mov
aaa
in
sub
movsb
stos
mov
mov
test
xlat
pop
in
cltd
lds
mov
cmc
cwtl
test
call
and
repz
mov
pop
fisttpl
lds
faddp
pop
ljmp
xchg
sti
mov
inc
inc
std
xchg
lret
mov
cmp
sub
out
cltd
inc
adc
sub
adc
stos
cmpb
pushf
aam
fidivrs
int
mov
mov
xchg
test
push
sbb
jecxz
rcll
popf
cli
xchg
popa
adc
mov
mov
ljmp
daa
leave
js
rclb
sub
pop
cmpsl
sub
cli
jmp
and
jns
mov
test
or
push
in
getsec
mov
lcall
in
inc
rorl
jmp
jo
in
in
cmpsl
pop
mov
roll
inc
shl
in
lea
loopne
push
mov
lahf
in
jo
ljmp
stos
jb
jle
fldt
jne
std
repz
or
or
test
mov
sub
sarl
xchg
nop
dec
mov
lods
scas
pop
mov
imul
scas
mov
pop
test
push
jno
jns
and
les
mov
out
inc
ret
ror
int3
push
cs
outsb
scas
push
cmpsb
sub
fst
and
test
sbb
jg
pop
cmp
lock
std
sub
leave
pop
add
and
jmp
and
imul
bound
sub
arpl
test
jbe
pop
jnp
xchg
into
jmp
and
iret
lahf
fldl2t
pop
jns
mov
push
es
scas
cltd
aaa
mov
pop
leave
jae
mov
call
and
lcall
or
mov
out
stos
nop
insb
jge
pop
shrb
xor
aad
int3
fdivrl
sub
jge
fwait
rolb
out
rolb
pop
imul
dec
push
jno
inc
ljmp
insl
inc
mov
pushl
xchg
in
lock
into
add
les
pop
inc
xlat
mov
sub
out
call
pop
gs
mov
jg
repnz
cmp
mov
repnz
xchg
jae
loope
dec
sti
leave
pop
cs
icebp
mov
loopne
inc
test
data16
int3
jmp
icebp
roll
or
dec
or
hlt
and
sub
dec
jle
repz
mov
xor
aam
pop
push
xchg
and
mov
cmp
pop
aam
aad
lcall
sbb
fldt
sub
aam
jno
xor
pop
sub
inc
xchg
and
jb
inc
cmc
xchg
add
dec
pop
stos
xchg
ja
jnp
mov
ds
nop
mov
ljmp
pop
dec
out
and
dec
addr16
adc
jge
sbb
add
fwait
int3
sbb
jb
dec
xchg
mov
std
stos
inc
mov
cwtl
mov
je
xchg
lret
aad
xor
shl
push
or
outsb
adc
mov
push
mov
mov
mov
and
adcb
ja
lret
rolb
je
out
rcrb
mov
add
enter
push
std
dec
dec
sbb
mov
fdivrl
es
mov
add
push
js
xchg
fidivl
pop
inc
cmpsl
pop
push
ret
fistl
mov
mov
into
xchg
imul
cmc
xor
mov
je
pusha
je
enter
fdivr
int3
xchg
insb
add
and
sub
inc
sub
and
dec
mov
lods
inc
insl
and
stos
mov
ret
mov
lcall
cmp
nop
cmp
mov
cmpl
in
lahf
dec
in
mov
sbb
lea
hlt
popa
push
lret
push
daa
mov
in
int
push
pop
movsb
xorl
fiadds
mov
mov
jge
sub
sub
dec
in
mov
dec
fst
hlt
mov
push
xor
mov
dec
iret
shlb
jle
jbe
dec
insb
pop
das
mov
iret
pop
fsubs
lea
adc
dec
cmc
mov
mov
mov
cmc
es
add
mov
inc
push
inc
shlb
push
and
das
into
lahf
add
js
or
repz
sahf
sub
shll
mov
orl
pop
arpl
sbb
inc
and
or
ficompl
shlb
adc
fimull
pushf
lea
testl
frstor
mov
lds
add
out
mov
incl
sbb
push
mov
inc
aaa
xchg
jne
mov
call
sahf
adc
mov
outsb
daa
daa
imul
cmpsl
enter
mov
cmpsb
or
or
in
and
mov
rcl
xor
leave
mov
adc
ret
std
jle
xor
decb
sub
dec
sub
sbb
and
pop
pop
add
repz
retw
cmp
mov
jl
add
fwait
ja
jmp
int
movsl
out
sar
popa
cmp
inc
fiaddl
adc
jae
mov
jle
inc
shll
mov
es
test
dec
pop
and
xchg
addr16
lds
jmp
adc
cltd
hlt
sbb
add
add
xor
ss
js
mov
scas
loope
ret
jl
jns
sub
mov
pusha
into
movsl
sub
mov
scas
or
ret
nop
xchg
fists
push
lret
push
sub
pop
sub
add
cmp
test
jle
sub
mov
mov
movsb
addr16
fstpt
jmp
xchg
push
dec
and
dec
xor
xchg
add
fisttps
notb
ret
jl
lret
ret
daa
insb
insb
cmp
add
imul
lods
insb
daa
int3
cmpsb
push
aas
pushf
in
add
lea
xor
ficoms
fcmovne
or
or
xchg
outsl
and
sahf
mov
loopne
fmuls
inc
cmp
insb
divl
jmp
jne
inc
aas
into
stc
mov
jne
decb
pop
pop
fwait
add
fidivrl
testb
iret
int3
pop
aaa
scas
pusha
xchg
sahf
js
and
icebp
push
xor
inc
fwait
lods
out
mov
add
add
hlt
mov
pop
mov
in
sub
push
inc
gs
rcrb
mov
rcr
xchg
mov
mov
sbb
inc
cld
push
fcoml
lahf
stos
push
mov
xchg
xor
mov
lea
jne
xor
repnz
dec
xchg
xchg
lahf
test
push
sub
inc
pushf
sub
cwtl
outsb
push
adcb
and
cmpsb
inc
mov
push
fwait
mov
ret
lret
mov
fildll
pusha
pusha
xor
push
daa
pop
or
popa
das
popf
aaa
xor
leave
lcall
int
popf
ror
pop
lds
xor
out
add
pushf
push
js
push
mov
push
mov
jg
imul
andb
stos
sbb
dec
lea
add
xchg
mov
rorb
mov
insl
enter
xchg
pop
enter
push
inc
mov
insl
in
bound
stos
jg
adc
mov
xor
pop
jnp
fisttps
loope
and
shr
pushf
dec
sub
add
xchg
in
cmc
aam
pop
cs
cli
dec
cwtl
lret
push
xor
add
sysexit
dec
fcoms
mov
das
inc
dec
mov
test
mov
cld
int
inc
out
inc
and
shll
sub
push
sub
jle
pop
xor
sbb
or
aad
stc
sbb
into
in
out
dec
into
dec
push
xlat
pop
mov
rclb
pusha
rorl
pop
sbbb
jmp
jne
push
notb
inc
inc
add
xchg
loop
sub
scas
mov
ret
ret
cmp
mov
fdivrs
jne
iret
push
add
cmp
add
cmpsl
add
jl
jmp
fidivrl
enter
test
sub
loop
jle
clc
insl
fs
js
sbb
add
cmp
cmp
or
scas
inc
mov
je
mov
mov
dec
divb
push
jmp
dec
movsl
stos
and
cmp
movsl
imul
cmp
lret
imul
xor
cmc
xchg
repnz
arpl
cmp
fisttps
nop
jb
cli
dec
adc
mov
dec
mov
cli
ss
cmp
dec
jns
clc
lret
xor
es
jmp
hlt
cmpsl
inc
shrb
add
ljmp
mov
add
iret
dec
aad
add
mov
rorb
xchg
aam
mov
in
scas
out
lahf
repnz
adc
pop
adc
fistpll
push
shll
add
mov
dec
mov
add
mov
stc
or
jmp
or
or
jmp
push
mov
nop
cmpsb
jg
jge
pop
insb
aad
dec
fistpl
fidivrl
mov
xchg
cmp
fdivrp
outsl
inc
jbe
xchg
mov
and
push
mov
out
xor
repnz
in
mov
push
sub
push
shr
shlb
and
lds
xchg
push
stc
and
cs
adc
test
int3
mov
aam
aam
jg
cmp
and
push
jp
insb
and
repnz
sahf
arpl
leave
lea
dec
jns
add
loope
sub
cs
cmpsl
ffree
aas
xchg
inc
jno
or
adc
fwait
mov
daa
fldl
sarb
std
and
test
adc
push
cmc
cltd
sbb
lret
push
ret
lcall
xchg
pop
imul
push
std
xor
loopne
mov
adc
sub
jge
pushf
jb
mov
outsl
or
jns
je
mov
mov
fsubs
or
mov
mov
or
cs
das
nop
testl
pop
nop
lret
xchg
pusha
fs
sahf
xor
rcrb
pop
test
stos
pushf
outsl
mov
pop
jge
int
aam
gs
mov
push
shrl
push
stc
sti
xchg
pop
fistpl
enter
jg
push
iret
push
rorl
jle
movsl
sbb
mov
decb
mov
bound
scas
sbb
and
push
jmp
mov
sub
mov
out
xchg
jl
bound
xchg
cmpsl
jno
jno
or
inc
pop
cmp
pop
sbb
add
adc
out
rclb
push
cmp
xor
jl
xchg
and
sbbb
cli
pop
push
cmp
out
pop
sahf
rcll
hlt
pop
fsubrp
mov
imul
cmp
bound
cmp
outsl
loop
mov
aam
push
jp
xchg
dec
fs
pop
mov
iret
push
ds
jo
dec
inc
push
cmp
push
fwait
jns
int
push
in
insb
push
xchg
ficoms
inc
scas
lcall
pop
lret
lods
fs
push
dec
insl
movsl
out
nop
xor
xchg
roll
push
ljmp
jg
shlb
out
in
push
popa
in
fisttps
lea
scas
mov
xchg
fistpll
and
push
andl
mov
sbb
xlat
dec
ret
cmp
in
cmp
ss
sub
mov
out
add
fisubs
mov
or
mov
ds
ficomps
mov
and
inc
pop
or
mov
mov
out
lods
das
mov
jl
mov
ret
fs
jp
mov
add
jb,pn
mov
pop
pop
into
push
add
enter
cmc
fimuls
jecxz
xlat
sub
in
mov
sti
pop
shlb
push
pop
xor
les
xor
push
aam
adc
divl
enter
xlat
mov
mov
int
sub
mov
in
jmp
in
sbb
mov
jmp
pop
fbld
shrl
cmp
leave
popa
iret
mov
pop
xor
enter
std
aad
fcmovu
fwait
std
divb
sub
push
incb
sahf
cmp
mov
xor
loopne
adc
in
out
mov
outsl
xor
stos
add
pop
and
lret
ja
pop
mov
dec
mov
icebp
dec
ficoms
xchg
mov
into
std
imul
mov
inc
and
ss
jl
adc
adc
into
jnp
pop
inc
test
adc
pop
inc
push
fxch
xchg
stos
push
adc
push
cmpsb
adc
aad
lret
inc
push
mov
mov
gs
inc
call
push
sbb
mov
scas
rorl
or
movsl
jle
andb
mov
jmp
les
hlt
dec
jb
mov
clc
or
push
loop
cld
iret
iret
dec
into
inc
push
ss
or
cld
adc
mov
sti
in
cld
mov
mul
pushf
or
fs
iret
or
aaa
mov
test
imul
sbb
test
inc
add
fadd
jg
add
scas
dec
aam
aam
mov
xchg
in
fcmovnu
shll
pop
or
lods
dec
pushf
and
fbstp
lcall
jns
pusha
mov
fcompl
hlt
cli
shll
aaa
mov
cld
mov
and
xchg
fldl
mov
fimull
or
stos
test
out
pop
xlat
stos
mov
popa
add
mov
addr16
and
xchg
test
mov
push
push
push
bound
sahf
enter
lahf
mov
ficompl
nop
jmp
int
xorl
mov
and
xor
fxam
rcrb
cmp
push
insl
divl
or
test
add
shlb
call
fnstenv
jnp
jo
pop
jmp
jl
adc
bound
sbb
out
sahf
hlt
mov
mov
mov
ss
popf
mov
push
jmp
loopne
test
jno
add
jge
mov
aas
push
pop
iret
inc
jl
add
or
cltd
cmc
bound
mov
pop
addr16
in
faddl
jge
jmp
mov
and
xor
cmp
inc
iret
ds
loope
xchg
lods
fildl
repnz
repz
dec
int3
adc
mov
inc
mov
dec
jmp
pop
repnz
jb
pop
xor
jmp
push
pop
arpl
shrb
xchg
lret
stos
pop
enter
adc
ja
cmp
es
nop
inc
popf
inc
add
or
xchg
push
lret
mov
aaa
cmp
outsl
mov
cld
dec
mull
rep
cmc
jmp
mov
sub
inc
xchg
leave
stos
pop
or
pop
inc
dec
frstor
xchg
int3
into
in
in
daa
test
dec
iret
mov
lcall
fisubs
les
test
scas
or
out
and
mov
jecxz
call
lods
xor
adc
mov
adc
add
and
lcall
sub
les
rclb
std
mov
das
decb
jns
bound
jl
lods
xor
lds
mov
shr
pop
xchg
dec
and
dec
leave
int
cs
push
add
arpl
lret
sub
sbb
sti
and
mov
jnp
decb
jmp
rcr
addl
sbb
mov
adc
in
leave
sbb
xchg
dec
push
inc
push
adc
xor
fcomps
outsb
nop
leave
lods
xchg
in
js
add
les
push
movsl
lret
into
js
nop
xor
std
inc
dec
mov
add
into
jns
aaa
lods
adc
cli
sbb
imul
int3
lcall
mov
cmp
dec
out
pop
std
fistl
dec
insl
testl
and
jg
aas
push
fisubs
mov
adcl
pop
rorl
or
sub
adc
sti
xor
ds
inc
xor
jp
dec
jp
add
pop
imul
and
xor
lcall
adc
xchg
xchg
cltd
out
sub
shlb
movsb
sub
cmpsl
pop
and
sti
xorb
mov
cmp
xchg
nop
pop
mov
icebp
xchg
sbb
cld
lret
mov
in
xor
inc
scas
add
stc
hlt
daa
sub
lods
cmpsl
cmpsb
in
cmp
inc
mov
inc
call
sahf
out
jge
sbb
aad
sbb
lret
and
daa
or
mov
jmp
bound
aam
pop
mulb
mov
test
divl
jmp
jp
jge
cld
ret
sub
xor
sub
cmp
mov
mov
inc
sub
and
lock
je
mov
cmp
xchg
mov
inc
dec
inc
sbb
shl
mov
daa
pop
std
ror
popa
pusha
inc
outsl
jbe
test
js
inc
es
xorl
push
hlt
test
pop
mov
leave
mov
test
dec
add
pop
mov
popa
cli
ljmp
jne
in
popf
mov
mov
cwtl
call
mov
stos
nop
pop
fcmovbe
inc
mulb
stos
pop
and
dec
je
lret
push
jl
mov
movsbl
adc
shlb
js
push
fwait
aas
stc
dec
mov
jg
cmp
dec
clc
add
xchg
movsl
ret
xchg
jge
btc
insb
stos
jge
xchg
sub
or
inc
push
sti
or
adc
jne
jge
inc
mov
mov
xor
push
inc
adcb
jg
jno
leave
outsl
std
cmp
daa
adc
mov
lcall
icebp
hlt
cmp
fcmovbe
pop
and
add
decl
push
sub
dec
mov
jbe
lea
in
sbb
push
mov
int3
add
fisubrs
mov
push
adc
loopne
adc
push
dec
mov
out
outsl
dec
xchg
mov
nop
loopne
inc
mov
dec
sarb
mov
pushf
cmp
lock
loope
sbb
lea
pop
loop
iret
arpl
xchg
pop
sbb
fnsave
das
insl
mov
into
cli
push
clc
mov
sbb
pop
and
sub
sub
cltd
and
ljmp
cwtl
adc
loop
mov
xor
push
imul
cld
ret
int3
push
add
into
insl
or
sbb
lods
jle
dec
fstps
pushf
sar
sbb
lret
cltd
aaa
jno
cmp
outsb
pop
arpl
mov
hlt
add
cmp
add
fildll
flds
aam
mov
in
fldenv
in
mov
mov
cmp
mov
shrb
jnp
je
xor
insl
loopne
ljmp
into
xor
sub
xor
push
call
mov
push
outsl
fisttpll
cmp
push
in
pop
jo
adc
lret
inc
cltd
inc
sbb
stos
dec
into
hlt
sub
sti
push
dec
gs
dec
out
adcl
jbe
sub
xor
and
mov
cwtl
mov
jl
cli
cli
xchg
ret
mov
pusha
adc
std
daa
lret
gs
int3
int3
pop
inc
adc
movsl
xchg
andl
sbb
push
fwait
sbb
testb
ret
mov
xor
or
pusha
mov
mov
sub
lds
push
dec
adc
movsb
jns
mov
pop
pop
scas
ss
std
mov
sbb
call
sub
stc
push
int
movsl
sub
mov
dec
repz
or
jmp
pop
mov
sub
or
mov
std
dec
jno
xor
imul
jle
push
ja
mov
or
cmc
mov
ficoms
xchg
out
cmp
push
sarl
add
js
cmpsl
es
test
or
mov
aam
js
add
xchg
icebp
sub
add
mov
sbb
mov
and
mov
push
lahf
rol
das
ficomps
mov
pop
iret
adc
xchg
and
into
mov
pop
rorl
push
cmp
loop
and
cmp
pop
ret
test
insl
or
aad
test
popa
stos
repnz
movsl
addr16
cwtl
popf
shld
adc
je
xor
fstpt
mov
cmp
dec
lcall
pop
pop
loop
mov
fistpll
jo
add
lods
add
sub
sub
cli
imul
mov
xchg
jecxz
dec
mov
mov
jmp
test
gs
inc
xor
push
movl
ds
out
loopne
jmp
xlat
pop
inc
and
fldl
mov
and
stos
and
jle
mov
push
cmp
out
jge
mov
sub
mov
add
dec
ja
xor
pop
out
inc
xchg
push
inc
mov
mov
cmc
sub
mov
outsb
repnz
enter
js
loop
xor
or
loopne
pop
and
cmp
xchg
pop
fwait
jns
jmp
loop
inc
popf
int
mov
int3
int
in
cltd
stos
loope
fcmovb
cmpsb
or
leave
mov
and
mov
int3
scas
sub
sbb
jle
in
add
or
leave
cld
mov
mov
jb
enter
pop
xchg
jp
add
lock
sub
cmp
shl
mov
push
nop
and
int
mov
dec
arpl
mov
jne
pop
cmp
pop
pop
inc
and
pop
loope
jl
xchg
pop
fdivrs
xchg
cmc
pushf
jmp
aam
dec
inc
inc
scas
add
xor
repnz
mov
and
mov
jp
dec
lds
frstor
insl
das
test
pushf
mov
rcrl
movsb
ss
pop
aam
adc
into
cmp
push
fnstsw
or
lahf
mov
scas
push
data16
stos
mov
mov
sbb
mov
test
dec
mov
xlat
aam
add
pop
jae
pop
pop
je
mov
or
dec
lahf
loopne
cltd
and
pop
fld
and
cmp
test
mov
enter
pop
jmp
add
dec
mov
add
push
xor
rorb
data16
clc
pop
xlat
mov
out
cs
cmp
and
in
dec
dec
fs
push
insb
mov
mov
call
test
ficoms
jno
fcomi
js
fistl
mov
notl
mov
xchg
cmpsl
addr16
adcb
cmpsb
sub
mov
es
adc
mov
sub
ret
mov
mov
fisttpl
jns
fmuls
aam
jno
dec
cmp
hlt
leave
test
loope
fidivl
adc
xor
inc
mov
mov
push
sbb
popf
inc
mov
stc
mov
adc
jbe
push
or
pop
jge
and
mov
push
lcall
inc
push
push
mov
or
push
xchg
fs
jae
ljmp
stos
adc
lds
mov
jp
iret
add
jmp
rorb
mov
and
movsb
daa
mov
test
mov
mov
icebp
cmpsl
fstps
push
out
or
ja
hlt
fucom
jb
inc
add
leave
stos
cmp
ficoms
leave
inc
jno
cmpsb
jecxz
mov
jp
lcall
mov
jno
jmp
dec
push
sub
and
out
pushf
jae
inc
sub
fst
mov
inc
xchg
mov
das
ds
stc
xchg
loop
call
lods
cmp
jb
cltd
std
jne
sti
je
enter
xchg
xchg
adc
in
pause
lcall
lods
gs
sub
sbb
into
movsb
mov
mull
andb
cld
pop
daa
fbstp
sub
pop
imul
push
sbb
imul
xchg
das
xchg
mov
and
pushf
jns
sarb
lods
ret
test
xchg
dec
in
or
loopne
stos
xchg
sbb
pusha
fimull
stc
or
mov
inc
movsl
test
cmp
inc
arpl
xchg
add
bound
sahf
inc
cmp
pop
ret
pop
pop
pop
or
shrb
and
js
mov
mov
mov
les
ret
cld
mov
mov
cmp
push
js
add
dec
push
loop
push
dec
sahf
lret
cmp
mov
jns
aad
xchg
pop
test
dec
pop
jg
imul
ret
jmp
jb,pn
sar
mov
fstl
rolb
jb
lahf
inc
in
orl
pushf
test
mov
xor
imul
js
mov
jne
adc
xchg
pop
enter
imul
outsl
subb
movsb
mov
imul
sbb
cmpsl
and
out
lcall
lds
pusha
into
ret
ret
xor
dec
sub
mov
sti
jnp
mov
jno
add
xor
rol
and
xchg
xor
mov
inc
cmpsl
sub
sbb
sub
cmpsl
mov
push
and
push
lret
mov
fsubl
imul
lret
imul
push
mov
or
jb
test
aad
add
sbb
sbb
pop
mov
sti
cmc
scas
push
cmpb
test
hlt
decl
not
dec
sbbl
push
je
es
inc
add
push
push
cli
divb
inc
cli
lds
jbe
push
dec
fwait
cmpsl
test
ret
cmc
insl
sbb
dec
shll
sti
cmp
insl
xor
mov
mov
fisttps
fiaddl
fabs
mov
ljmp
xchg
sbbb
adc
lods
mov
rolb
mov
xchg
fidivs
andl
inc
push
mov
or
stos
ret
xor
inc
inc
movswl
clc
das
les
push
and
dec
scas
or
or
adc
test
pop
push
adc
fs
in
daa
out
push
pop
mov
and
imul
ret
pop
push
sbb
mov
clc
dec
lcall
mov
cmp
cmp
data16
aaa
dec
shlb
stos
bound
xor
push
dec
int
inc
sub
pop
das
test
adc
jo
adc
dec
mov
repz
jg
mov
js
cld
bound
inc
insl
cmp
push
add
dec
add
xchg
fnstcw
mov
ljmp
test
in
arpl
pop
stos
jmp
sub
stc
mov
subb
adc
pop
pop
in
icebp
push
push
sahf
add
std
jmp
inc
not
mov
stc
movsl
inc
loope
bswap
cld
push
sub
mov
stos
or
mov
nop
and
jbe
cs
out
pusha
inc
add
decb
inc
mov
pushf
jae
icebp
mov
mov
xor
sub
jg
movsb
or
js
pop
mov
cmp
ret
addb
jge
sahf
int3
jmp
jge
clc
mov
fwait
adc
inc
rorb
inc
inc
dec
rdpmc
add
mov
lds
enter
roll
adc
fs
inc
pop
cwtl
mov
xchg
sub
mov
inc
shlb
lods
pop
dec
and
sahf
and
xorb
mov
xlat
fsubrl
scas
mov
pop
push
aas
clc
or
fcmovu
xor
mov
pop
mull
clc
call
cs
nop
ret
mov
inc
repnz
icebp
repnz
repz
adc
cld
outsb
adc
mov
xchg
and
addl
mov
jl
sbb
mov
sub
roll
adcl
lret
mov
pop
xchg
pushf
je
mov
mov
add
push
dec
test
loope
mov
dec
cld
cs
insl
and
gs
adc
in
dec
mov
pushf
push
or
jl
fistps
mov
mov
cwtl
mov
lock
jl
fsts
fnsave
add
hlt
inc
and
lea
testb
push
scas
and
mov
pop
push
shl
adc
int
xchg
lret
jae
add
mov
fisubrl
mov
jl
sub
into
jb
mov
jl
pop
sbb
fildll
cwtl
dec
mov
shlb
sti
aam
cli
push
push
icebp
shl
sub
pusha
add
add
xlat
cltd
ret
sbb
out
adcl
jbe
out
xor
push
xchg
xor
leave
inc
in
movsb
lds
mov
or
xchg
movsl
sbb
dec
or
aad
out
add
push
aaa
xchg
mov
and
mov
adc
or
jb
add
bound
jg
leave
scas
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
scas
sub
cmp
bound
pop
sub
in
and
fadds
sbb
mov
push
or
pop
aam
ds
ss
mov
jb
jecxz
xchg
xor
cmpsl
sbb
icebp
aaa
jbe
xchg
inc
mov
call
repz
lea
pop
or
and
xchg
xor
inc
inc
jno
sbb
js
stc
dec
add
inc
push
data16
cmp
adc
mov
std
xor
leave
pop
xor
iret
mov
pop
sub
pop
mov
push
jb
pop
les
stos
cmpsl
jnp
jno
cld
sub
ljmp
fnstenv
mov
shl
xchg
inc
neg
jne
mov
jbe
pop
jae
or
xchg
mov
rcll
aad
je
stos
test
outsb
mov
fwait
out
xlat
roll
inc
scas
or
je
push
jno
dec
icebp
cmp
in
loopne
js
loop
lret
push
test
jp
inc
in
and
cmp
fstl
add
cmp
inc
cmp
mov
je
ja
imul
jno
dec
push
and
test
push
jb
mov
cmpsl
mov
mov
loop
add
jno
ret
sub
adc
mov
lcall
lret
mov
call
add
pop
inc
lcall
mov
aas
inc
inc
jmp
popf
hlt
cmp
jp
xor
test
es
out
add
pop
fwait
add
dec
xor
and
or
add
jl
insl
mov
dec
mov
and
ret
dec
cld
popa
cmp
clc
je
outsl
cwtl
sbb
mov
mov
and
lods
mov
lcall
aad
in
lock
sarb
xchg
je
je
test
xor
adc
rol
pop
cmp
js
mov
call
sbb
xor
jnp
in
fiadds
lret
jno
sahf
stos
insb
jae
int3
pushf
mov
inc
out
loope
xor
push
sub
in
js
enter
cmpsl
pop
outsb
test
in
sbbb
mov
ret
sub
lds
stos
or
shll
pop
or
push
mov
inc
inc
repz
testl
pop
mov
mov
stos
pop
cmpsb
stc
push
dec
imul
push
fnstsw
cmpsb
sahf
xchg
aaa
ljmp
push
dec
cli
push
sub
test
clc
rclb
add
jns
jmp
push
dec
insl
sbb
inc
pop
adc
fcomp
pusha
jle
jns
push
sbb
sahf
or
jo
push
rcrl
and
pop
inc
orb
sbb
mov
cmp
cmc
mov
xchg
cmp
out
mov
mulb
xchg
push
push
aad
adc
adc
mov
fcompl
int3
lock
lods
or
inc
pop
mov
aaa
sub
test
dec
movsl
mov
push
add
xchg
jb
push
mov
outsb
nop
outsl
mov
xor
fsts
mov
pop
mov
out
adc
cltd
inc
loopne
jns
pop
mov
or
add
shrl
mov
mov
sbb
and
pop
xchg
inc
cs
movsl
stc
shlb
jnp
mov
movsl
mov
xor
mov
pop
scas
push
insl
testb
inc
push
or
mov
pop
pushf
pop
sarb
pop
lahf
push
aam
push
or
push
loop,pn
push
mov
cmp
fcoml
out
sbb
orl
pop
xor
in
push
mov
dec
mov
push
fsubrs
cmp
and
fs
mov
lea
cmp
sti
mov
push
or
push
sbb
mov
and
in
dec
pop
jno
mov
pop
jmp
movsl
je
sub
daa
cli
fisubrl
mov
pop
xor
add
inc
and
mov
jl
cli
lret
pop
adc
arpl
and
imul
jb
xor
fmull
inc
pushf
icebp
add
jno
jg
add
les
xchg
adc
cs
pop
in
xor
incl
push
pop
jle
lods
mov
mov
mov
addl
in
ret
pop
adc
cld
dec
ds
repnz
rcll
adc
add
fldenv
lcall
push
sbb
cmp
add
dec
fisubl
out
xor
add
bound
add
mov
push
in
ret
or
sti
mov
out
insl
mov
jns
ret
sbb
mov
pop
aam
outsl
aad
add
outsb
and
and
pop
sbb
sub
inc
test
mov
popa
jno
xlat
or
faddl
pop
or
mov
jecxz
test
push
jmp
or
int
out
or
ret
push
adc
lcall
outsl
dec
lods
loope
push
xchg
pop
push
bound
repnz
xchg
push
sahf
pop
imull
mov
rcrb
or
stos
jecxz
rcrb
push
mov
push
daa
stos
inc
mov
push
movsl
ret
pusha
pop
inc
jge
push
pop
and
std
enter
es
mov
loope
pop
adcl
xor
sbb
jns
nop
pshufw
cmp
imul
and
jno
outsl
xchg
inc
inc
xchg
pop
xor
xchg
out
add
cmpsl
push
lock
mov
test
addl
stc
mov
add
cmp
loop
stos
out
sti
cmc
or
adc
pop
ljmp
call
and
fwait
add
or
cmpsl
push
jnp
pop
add
stos
outsl
push
cwtl
or
add
iret
sti
mov
roll
push
sbb
xchg
or
imul
arpl
lahf
push
jp
mov
push
insb
push
sti
sub
sub
or
add
mov
add
inc
std
sti
dec
adc
adc
fildll
sarb
dec
int
dec
cmp
xor
test
jns
inc
mov
movb
mov
mov
addr16
insl
fwait
je
mov
lret
add
out
add
out
adc
andb
cmpsb
inc
ret
ss
xor
mov
cltd
in
out
adc
inc
lea
sahf
sti
pop
mov
sbb
ficompl
gs
sbb
test
xor
pop
pushf
iret
lock
push
mov
aas
mov
fcmovne
pop
fbstp
stos
stos
sub
sub
jle
insl
test
and
jg
js
push
stos
add
cltd
xor
xchg
call
insb
pop
mov
outsl
add
aam
out
sub
sarb
pusha
test
movzwl
sarb
fs
sbb
push
sti
sbb
arpl
scas
add
mov
xor
xor
cld
or
mov
pushf
cmp
out
sbb
sahf
inc
data16
cmpsb
sub
stc
jmp
mov
xchg
inc
sbb
xor
inc
mov
sub
scas
sti
or
fstps
cmp
or
inc
cmp
std
and
fisttps
ljmp
jmp
and
add
xor
xchg
xlat
pop
gs
push
in
mov
and
mov
movsl
cmp
out
add
push
mov
add
sub
int3
inc
shl
and
jecxz
jns
add
cld
push
repz
jle
leave
adc
inc
xchg
test
push
aam
mov
shlb
mov
movsb
out
or
inc
add
shrb
dec
mov
push
dec
lea
pop
stc
add
lds
orl
and
pop
je
test
xchg
jecxz
js
sbb
repnz
and
adc
cmc
inc
jnp
imul
or
mov
push
rcll
jae
insb
sub
cmp
scas
sbb
mov
pop
lods
into
dec
add
test
push
addr16
rolb
xchg
fiaddl
lock
jo
call
outsb
into
mov
dec
push
cmp
inc
mov
inc
in
pop
mov
std
sti
pop
jbe
mov
mov
popa
hlt
aaa
dec
js
idiv
jae
shrl
ja
mov
and
mov
repnz
or
jge
fsubr
rolb
xchg
loop
idivl
mov
jae
sbbb
push
aas
mov
stc
ja
cwtl
mov
call
mov
call
enter
inc
push
imul
lcall
sub
lcall
sub
mov
in
adc
andps
mov
add
sbb
lahf
ffree
cmp
sbb
stc
mov
adc
repz
add
push
jmp
pop
xchg
lret
push
iret
clc
inc
pop
bound
push
outsl
pop
outsb
shlb
sub
jbe
cmpsl
sub
jp
add
jo
xor
loop
data16
icebp
mov
dec
mov
xchg
push
stc
xor
add
push
fnstcw
xchg
mov
jge
ficoms
cmc
loop
cltd
enter
fwait
and
pusha
adc
adc
cmp
jg
push
insb
into
xor
insl
inc
popf
cmp
jae
and
cmc
adc
sub
je
pop
in
call
test
mov
clc
pop
add
push
hlt
in
cli
sub
fwait
fadds
mov
lock
push
dec
mov
pop
inc
std
sbb
push
iret
push
pop
inc
jns,pn
pop
jmp
xor
iret
mov
xor
roll
mov
pop
es
mov
je
fmull
lret
test
cmpl
push
sarb
inc
mov
js
shlb
jae
sbb
test
and
stos
dec
clc
dec
and
test
loope
dec
int
les
sbb
out
sbb
test
in
lahf
sbbb
test
les
push
cmp
loop
add
test
cmp
leave
xchg
or
sbb
stos
cmpsb
lret
dec
pushl
fists
jnp
outsl
insb
xlat
lret
out
adc
adc
js
rol
or
mov
xchg
subl
jae
push
pop
mov
pushf
popf
pop
xor
xor
mov
pop
lds
push
sub
and
js
mov
jb
outsl
adc
sarb
sbb
imul
sbb
jl
pop
xor
loopne
std
cmp
push
adc
scas
adc
mov
fadds
or
adc
les
push
xchg
adc
into
js
sub
push
add
loope
pop
mov
test
jno
rcrl
push
arpl
mov
repnz
cltd
push
shl
push
push
jnp
mov
jbe
push
pop
mull
aad
repnz
sbb
inc
movsb
outsb
sub
inc
scas
fistps
stos
cmc
mov
cwtl
hlt
push
outsl
lret
push
sarl
ljmp
xor
pop
push
ds
sbb
add
dec
mov
out
jg
pop
pop
push
orl
xor
int
push
jp
pop
mov
push
jmp
loop
cmc
sti
jecxz
dec
aam
pop
or
outsl
out
addr16
loop
inc
cmpsl
push
adc
test
xor
add
pop
loop
push
out
fsubrs
ljmp
das
int3
mov
stos
movsl
and
enter
fstl
sub
xchg
push
in
add
mov
lcall
aam
je
jmp
mov
loope
sbbb
jmp
lret
jp
repz
or
inc
jbe
push
push
push
adc
addr16
cmp
mov
movsb
cs
and
and
sub
aaa
sbb
xchg
cltd
mov
mov
out
pavgw
xor
push
pop
mov
pusha
sbb
mov
call
push
bound
push
xchg
cmp
bound
jg
stos
insb
ficomps
add
insb
xor
sub
int
and
jns
dec
pushf
inc
cmc
cmpsl
pushf
icebp
stc
dec
out
jnp
fistpl
fdiv
push
sbb
pusha
pop
xchg
pop
js
cld
in
mov
movsl
xor
stos
xchg
and
jp
shll
adc
push
dec
mulb
js
push
dec
add
repnz
push
xchg
pop
arpl
popf
rcr
mov
ror
cmpsl
lods
jnp
aam
xchg
icebp
dec
and
cmp
imul
cwtl
les
dec
test
js
pop
jge
leave
cmc
iret
lock
push
push
std
repz
outsb
mov
insl
mov
mov
mov
shll
pop
push
das
adc
hlt
mov
mov
sbbb
sub
test
jmp
cmp
mov
dec
pop
or
add
push
add
mov
data16
jle
mov
cmp
addr16
push
out
jge
loope
lods
push
jg
cmpsb
xor
and
xchg
xor
pop
je
inc
ja
hlt
cld
cmp
aas
mov
jge
mov
arpl
cwtl
mov
push
or
dec
lods
inc
or
add
or
loop
push
hlt
mov
mov
add
lret
add
outsl
mov
mov
mov
addr16
xor
jns
loop
mov
test
out
sarl
or
and
movlps
or
xchg
shll
test
sub
popf
inc
lret
dec
mov
ret
insl
test
pop
ret
imul
ja
ret
jp
cmpsl
loop
push
cltd
adc
cmp
pop
add
stc
sbb
movsl
or
and
push
add
icebp
test
cmc
pop
sarb
mov
pusha
push
lds
pop
xchg
dec
adc
cmpsl
mov
movsb
push
dec
cltd
mov
push
sbb
push
pushf
push
pop
xchg
xchg
stc
push
jb
and
loop
or
scas
add
dec
fdivrs
mov
shl
add
roll
jecxz
ret
jp
out
loopne
ficoms
setne
test
fucomip
mov
or
data16
sub
loopne
pop
mov
adc
leave
call
jne
popf
cwtl
lock
jb
aas
dec
rcrl
cmpsb
fdiv
test
inc
popf
pop
ret
cmp
jo
cmp
inc
daa
inc
test
sub
xor
xor
mov
mov
xchg
std
and
loopne
sbb
push
xchg
out
lahf
inc
mov
setle
push
adc
or
dec
movsl
sbb
gs
jl
mov
fmulp
cmp
sbb
stc
inc
int3
cmp
mov
sbb
mov
sbb
pop
mull
insb
sbb
in
mov
jg
jne
adc
fnstenv
mov
sub
mov
popf
lock
shll
jbe
mov
jo
lahf
sub
sub
mov
pushf
mov
lds
sub
pop
in
xchg
dec
and
pop
jmp
pop
xchg
scas
sub
xor
dec
pop
lcall
dec
imul
jp
addb
jno
mov
dec
sub
pop
and
push
mov
jbe
inc
decl
aam
mov
sub
pop
and
push
imul
pop
xorl
adc
leave
or
movsb
cmp
xchg
inc
push
dec
push
lods
mov
adc
es
push
popf
in
inc
xchg
icebp
das
cmp
fwait
jle
sub
pop
in
adc
mov
das
fbld
xor
fsubs
loope
addr16
lods
sbb
ja
xchg
lret
cmp
mov
scas
push
xchg
add
mov
fisttpl
sahf
incb
insb
sub
pop
movsb
aad
xor
xchg
mulb
adc
js
and
jns
in
sbb
mov
add
notl
sti
lret
je
sub
out
mov
mov
pop
enter
xor
rolb
cwtl
and
bound
filds
sahf
popw
dec
ds
fnstcw
ljmp
xor
add
xor
mov
add
xor
sbb
jl
xchg
out
cltd
lods
shrl
dec
pushf
dec
lds
rolb
and
or
pushf
xchg
pop
or
mov
movsl
push
inc
test
mov
sbb
fisttps
cltd
loopne
cmp
addr16
xchg
and
adc
mov
cmp
les
and
popf
mov
mov
cli
and
movsl
loop
std
adc
in
xlat
xor
jecxz
ss
sbbb
jg
push
pop
mov
push
xchg
add
addb
sbb
popa
cmp
and
dec
subb
cmp
inc
imul
movsl
pop
push
jp
cld
stc
dec
ret
push
js
movsb
push
sbb
not
sbb
ja
jmp
inc
pop
gs
cmp
adc
jle
into
repnz
ljmp
jecxz
push
ret
pop
repz
loope
pop
cltd
fimuls
sub
jle
out
jo
iret
vpminub
adcb
mov
xor
sahf
xchg
flds
mov
shlb
aam
pop
shlb
repnz
stos
data16
xlat
cmp
sarb
movsl
push
jnp
pop
sbbl
mov
jmp
mov
mov
incb
out
sub
pushf
xchg
subl
adc
lods
jle
adcb
mov
mov
dec
push
push
inc
outsl
sbb
sbb
movsb
fiadds
add
les
and
push
mov
fs
push
repnz
cwtl
jg
jmp
or
movl
mov
mov
push
movsb
push
or
jl
sti
or
jno
inc
mov
or
jnp
mov
test
cmp
push
and
lds
xchg
pop
inc
fmull
mov
subb
in
xchg
movsb
xchg
mov
data16
mov
inc
lret
mov
sub
icebp
pop
in
push
jae
xchg
mov
ss
mov
enter
out
add
push
test
negb
jg
xchg
aam
mov
shlb
xor
in
and
add
lcall
mov
and
mov
push
aaa
adc
mov
ja
mov
je
iret
cmc
in
std
sbb
or
scas
jecxz
sbb
dec
cli
in
dec
nop
cmpsl
sti
pop
sub
int
fldenv
aas
xchg
dec
push
sub
inc
mov
hlt
into
mov
outsl
out
les
xchg
popf
sub
pop
popa
jp
fistps
jl
jle
dec
mov
jge
das
and
add
cmpsl
cli
xor
sbb
test
adcb
lods
sub
pop
xor
lds
dec
bswap
xlat
mov
pop
sbb
fcompl
in
push
mov
cli
jno
fsubl
push
sub
rcrb
dec
mov
into
mov
add
or
ljmp
scas
loopne
stos
out
xor
mov
add
push
mov
popa
mov
ret
fisubrl
add
dec
sbb
mov
cltd
fdivrs
loopne
and
inc
cmp
mov
arpl
das
loope
mov
cs
cltd
jl
pusha
pop
in
fsubl
mov
cwtl
pop
popa
stc
push
mov
inc
mov
shll
sub
out
jns
jno
pop
sub
loopne
mov
xchg
sbb
pop
popf
dec
lahf
or
je
imul
mov
pop
mov
pop
cmc
addr16
aas
fildl
lahf
nop
test
mov
jo
int3
or
or
xchg
aas
inc
mov
ds
nop
push
lcall
popf
mov
cmp
cld
dec
lods
adc
dec
stos
cld
lahf
out
cmpsb
movsl
sbb
add
and
jae
test
mov
push
add
add
cltd
adc
mov
cmpsl
xlat
adc
mov
add
leave
fistpll
push
mov
xchg
lods
jg
sahf
test
cmp
push
clc
pop
dec
xchg
scas
and
push
add
xchg
lcall
push
outsb
sti
inc
sub
adc
ljmp
shlb
popa
push
in
loope
pushf
shll
xor
out
push
mov
sbb
popf
cwtl
pop
mov
xchg
sbb
ret
lock
ds
or
cmp
cltd
or
cmc
roll
sub
push
lock
int3
pop
jne
sub
lret
sub
dec
jb
stos
xchg
cmpl
scas
call
sbb
iret
outsb
out
inc
and
push
mov
mov
ret
xor
arpl
mov
inc
jae
leave
xor
enter
and
inc
push
cmp
hlt
inc
adc
lret
test
mov
xchg
lods
jge
incb
sbb
sub
mov
sbb
lds
gs
and
push
inc
add
sti
sahf
adc
push
xchg
movsb
nop
and
stos
popf
mov
push
aad
mov
sub
popf
ret
adc
cmpsl
jecxz
mov
sbb
jge
movsl
outsb
imul
cmpl
push
cmp
mov
mov
xchg
sbb
dec
jb
jbe
inc
pop
adc
or
sbb
aas
js
jecxz
jo
cld
enter
push
pop
les
cli
xor
fstl
lret
icebp
imul
daa
xor
pop
jo
push
push
in
push
inc
aaa
movsl
cmp
push
shr
or
rcr
hlt
mov
test
jb
outsl
cmp
enter
out
test
pop
jl
es
dec
clc
test
popf
das
or
mov
out
xchg
or
popa
imul
jge
inc
cmpsl
fisubl
icebp
xor
sub
out
addr16
or
cmp
push
inc
add
push
cmc
jg
popa
mov
add
cmp
jmp
or
lds
lods
int
inc
pop
xchg
cmp
cltd
pop
and
sbb
sahf
mov
or
adc
es
pop
outsl
mov
jbe
jecxz
inc
fdivs
jns
or
outsl
sbb
ds
mov
orl
int3
arpl
jl
or
mov
out
xor
mov
int3
cmp
shlb
fs
inc
adc
inc
inc
enter
sahf
aas
xor
sarb
xor
pop
xlat
leave
add
call
and
es
ja
or
bound
in
out
lea
pop
sbb
aas
mov
cmp
lea
sahf
mov
out
cmc
mov
out
or
xor
mov
mov
jnp
sub
xor
mov
sbb
jno
pminub
ja
push
xchg
jle
xor
mov
pop
rclb
rcrb
push
jle
sub
add
test
jb
mov
adc
test
cmpsl
push
ljmp
xor
cli
sahf
push
jmp
cmp
cltd
mov
cmp
ds
js
fisubrs
lret
inc
insl
rcrb
jno
stos
in
inc
cmpsb
adc
push
dec
cld
push
dec
sub
inc
insb
inc
mov
aaa
enterw
and
out
pop
das
je
mov
shr
sbbl
imul
xchg
push
inc
pop
cwtl
mov
inc
popa
das
pop
aas
adc
mov
or
pop
test
lds
int3
scas
inc
lcall
mov
and
ret
mov
sti
xchg
sub
fadd
push
lret
jmp
jle
scas
push
cmp
xor
mov
sarb
lret
sub
dec
repz
js
add
pop
fnstsw
xor
xor
sub
jbe
ds
sbb
test
movsb
hlt
stc
jle
push
xchg
pop
imul
jno
dec
in
sub
sub
pop
adc
cmp
shrb
rclb
push
stos
mulb
pop
jns
ljmp
xchg
scas
clc
jb
inc
and
inc
fcoml
jbe
push
push
adc
mov
mov
xchg
mov
sbbl
or
sbb
adc
gs
or
out
fcmovb
mov
stc
inc
xchg
xor
pop
je
lds
pop
jl
clc
push
leave
xchg
data16
popa
mov
cltd
in
sbb
loopne
and
mov
inc
lock
push
sbb
out
jecxz
data16
insl
out
and
and
pop
int
lahf
mov
cmp
xchg
xchg
cwtl
push
push
pop
sbb
movsb
xchg
mov
jb
push
iret
insl
daa
push
pop
push
lock
in
mov
pop
push
jae
xor
lcall
movsl
add
ljmp
in
xchg
sbb
ja
das
int
rolb
sahf
push
into
aad
add
mov
add
dec
mov
in
movsl
shl
sahf
mov
imul
popa
stos
incl
xchg
add
pop
adc
fadds
hlt
loopne
mov
movsl
daa
movsb
enter
pop
sti
or
pop
mov
negb
push
repz
add
cmp
add
mov
xlat
add
adc
gs
push
aam
jbe
es
icebp
iret
sub
xchg
inc
mov
inc
jmp
cs
push
mov
mov
mov
adc
mov
and
cwtl
arpl
and
in
stos
mov
aas
and
ja
inc
lea
les
lock
stos
mov
sbb
int3
clc
cltd
hlt
stos
ret
sbb
in
clc
cmp
add
adc
pop
jno
pop
mov
and
pop
pop
popf
push
cmpsb
dec
mov
ja
call
lret
fnstcw
pop
in
mov
and
mov
xor
decl
xor
pop
xchg
mov
repnz
arpl
sbb
and
or
test
addr16
shr
xchg
int
enter
and
int
in
jbe
sub
sub
movsl
cmpsb
fildl
mov
inc
and
leave
push
or
or
je
fisttpll
jns
shlb
lock
loop
frstor
pop
cmpsb
adc
aam
pop
push
push
jnp
shlb
fs
xchg
mov
popf
int
dec
nop
and
adc
call
pop
fisubl
jecxz
sti
and
mov
push
ss
cltd
sub
cmp
add
fwait
inc
xchg
dec
mov
add
sbb
pop
jmp
cmpsl
mov
out
fdivrp
fwait
mov
or
loop
lret
out
or
loop
aad
cld
sub
sub
jo
sub
jmp
ret
dec
fnclex
adc
sti
jns
icebp
int3
xor
mov
sub
push
aam
jl
mov
lret
pop
mov
jne
sub
pop
or
push
mov
jmp
push
mov
into
adc
xor
cmp
mov
loopne
dec
out
call
push
scas
lods
gs
lahf
orl
cltd
je
test
pop
roll
in
call
mov
pop
aaa
sbb
rolb
mov
pushf
out
stos
adc
mov
and
jns
inc
adc
mov
jae
xchg
dec
add
add
cmp
pop
jp
xchg
mov
sahf
adc
daa
pop
sbb
and
leave
jns
imul
mov
dec
pop
mov
out
sbb
lock
icebp
xchg
nop
jo
insl
sarb
sub
xchg
push
idivb
ja
mov
lahf
cmc
mov
daa
inc
xor
hlt
cmpsb
stc
sbbl
stos
add
out
mov
push
lret
xorb
lret
test
fbstp
test
sbb
repz
cmp
fs
add
data16
decl
dec
bound
ja
repz
mov
add
int
enter
lods
cmp
mov
gs
jle
daa
roll
mov
pop
cli
xchg
cmp
mov
in
test
lea
mov
sbb
lods
gs
jae
das
sub
jp
ja
xchg
lret
mov
loop
movsb
sbb
mov
mov
lret
cmp
sub
push
mov
mov
sub
repnz
jae
stos
push
or
cmpsb
inc
sti
push
jmp
push
mov
xor
cmp
std
test
ss
cmp
insl
sbb
cmpsb
in
cmp
mov
xor
icebp
xlat
push
idivl
pusha
mov
cli
pop
cmc
stc
xor
pusha
call
and
push
pusha
in
clc
pop
cmc
rol
addr16
lock
push
in
xchg
add
jmp
xor
bound
cmp
stos
aaa
aam
sbb
push
das
es
sbb
stos
aaa
push
jmp
scas
imul
dec
testb
mov
ffree
mov
dec
cld
or
xchg
enter
inc
jns
stc
ret
ja
add
rcll
or
je
fidivrs
xchg
int3
stos
xchg
push
pop
sbb
inc
aam
push
jae
pop
fucom
jnp
fwait
in
push
shlb
into
mov
inc
pop
idiv
jp
xchg
inc
lods
imul
pop
mov
pushf
notl
and
mov
adc
sub
or
stc
push
outsb
xchg
push
xchg
jb
test
rcrl
mov
xchg
fwait
loope
adc
mov
ret
or
add
push
add
pop
lret
jno
push
push
jns
sub
xchg
push
std
scas
xchg
jl
movsl
inc
add
stos
mov
movntq
outsb
sub
jo
lods
sbb
mov
rep
or
fs
leave
dec
shlb
sub
pop
sub
mov
fidivrs
pop
ret
leave
jl
fs
mul
xchg
ret
test
push
mov
ljmp
test
add
leave
mov
jge
mov
cltd
sbb
cmp
sti
inc
dec
or
mov
outsb
dec
sub
or
inc
mov
cld
mov
and
popa
ret
mov
fcmovbe
jge
inc
pop
sub
adc
fsubl
mov
sub
sub
es
aaa
out
push
out
adc
lods
pop
pushf
jae
push
movsl
imull
cmp
lret
data16
push
aad
jmp
sti
in
test
or
mov
pop
mov
cmc
stos
push
jns
cmpsb
test
clc
add
pop
sbb
test
inc
sub
mov
fdivrl
pop
jge
adc
aas
cmp
and
mov
xchg
adc
adc
pop
scas
sahf
cmc
lcall
pop
enter
jmp
aad
jno
je
sar
jl
mov
insl
cmpsb
or
dec
lea
and
lret
jbe
add
mov
cli
mov
jg
pop
imul
inc
xchg
popa
adc
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
mov
ja
add
arpl
add
repnz
test
push
mov
out
add
cmp
pop
xor
movsl
adc
adc
dec
mov
out
xchg
or
mov
sub
int
and
push
xor
mov
leave
xor
adc
mov
cwtl
or
rcl
cmp
fstp
add
add
add
sub
adc
cmp
out
pop
xchg
push
fcmove
add
arpl
add
xor
xchg
mov
clc
pop
add
inc
and
fdivl
cld
pushf
mov
xor
adc
dec
adc
cltd
scas
mov
orb
and
sub
lea
push
and
repnz
shll
pusha
and
cmp
mov
pop
pop
xorb
push
lods
cmp
cmp
add
add
pop
sub
sub
addb
into
add
arpl
add
je
adc
push
mov
pop
sub
jp
fadds
pop
mov
frstor
jecxz
scas
sbb
insl
xlat
es
mov
mov
push
sbb
lods
fadds
pushf
subl
decb
lock
outsb
pop
jge
mov
dec
mov
mov
mov
mov
lcall
add
and
aam
aam
ljmp
je
cmp
mov
add
add
add
sub
sbb
inc
dec
xor
jecxz
les
repz
inc
jae
mov
insb
mov
sbb
inc
xchg
dec
inc
xor
loop
pop
out
in
lods
arpl
aad
enter
leave
movsb
out
mov
push
imul
sub
imul
lret
dec
jle
sti
cmpsl
mov
dec
mov
add
add
arpl
add
hlt
arpl
fs
mov
inc
bound
imul
jle
push
mov
push
scas
or
pop
xor
xchg
push
sub
ja
adc
pop
xor
mov
shll
jle
pop
fucomp
mov
out
dec
mov
xor
int3
dec
add
xchg
insb
and
loop
add
add
add
out
lods
cmp
stc
stc
test
out
iretw
add
arpl
add
xor
pushf
pop
test
orl
scas
icebp
dec
dec
jp
xor
sbb
mov
add
outsl
and
ss
dec
sbb
add
pop
jmp
and
stos
inc
addr16
mov
adc
rcrl
pop
jno
adc
dec
hlt
fwait
mov
and
dec
shrl
add
add
add
inc
gs
aaa
push
jae
jmp
arpl
add
cmp
loope
es
add
loopne
in
cli
lea
push
test
adcb
test
in
sbb
inc
sub
test
sub
mov
or
enter
ret
ss
jp
or
add
pop
sbb
pop
mov
jecxz
nop
jb
and
repnz
add
add
adc
push
adc
cwtl
out
adc
add
arpl
add
dec
sbb
cmpsb
enter
and
lods
cmp
jnp
xchg
imul
push
jl
cwtl
mov
xlat
dec
fwait
bound
testl
out
push
fs
cs
push
sub
and
inc
xchg
adc
aaa
outsl
push
mov
push
jmp
out
scas
lods
lds
je
sbb
push
add
add
add
sub
das
jle
jg
imul
mov
jecxz
add
add
loope
es
mov
add
aam
jae
out
pop
xorb
mov
jg
xor
lods
cli
imul
push
in
or
or
cmp
orb
xchg
xor
jo
jmp
pop
ljmp
pop
push
push
and
sbb
fdivrp
cwtl
jge
cmp
in
test
cwtl
add
add
add
and
mov
mov
xor
arpl
add
dec
fistl
sub
sub
and
jbe
add
out
sub
xchg
inc
push
xor
push
push
bound
and
inc
dec
and
adc
aas
adc
push
mov
cld
ss
insb
inc
mov
nop
mov
lret
jo
ja
dec
rol
inc
divl
add
add
or
ret
lods
sub
mov
in
add
arpl
add
and
ss
test
fldenv
mov
inc
push
mov
fnstenv
jae
dec
dec
mov
fldenv
mov
mov
dec
js
adc
fcoml
stos
fcompl
pop
lods
mov
jno
xchg
sti
sub
pop
or
push
je
out
sbb
cmp
add
ret
pop
iret
fst
enter
ficoml
dec
dec
in
add
add
sbb
les
aam
ljmp
adc
and
xor
pop
sbb
sarl
gs
push
inc
out
pop
cmp
mov
mov
sbb
icebp
test
jl
lcall
mov
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficomps
inc
add
sbb
add
sbb
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
cs
inc
add
test
loop
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
into
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
ret
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
rcll
and
add
arpl
add
jecxz
lret
sbb
cmpsb
adc
pop
int3
into
mov
scas
js
mov
cmp
insl
push
shlb
mov
scas
mov
cli
adcl
pop
lret
addl
push
mov
mov
cld
decb
shl
and
sub
outsb
stos
lret
adc
clc
pop
jae
sahf
pop
out
je
add
add
add
mov
push
mov
xlat
push
inc
jae
and
arpl
add
repnz
mov
addb
lahf
dec
fidivrl
std
sbb
popa
mov
cmp
fs
xchg
pop
hlt
out
sbb
sub
scas
xor
cmp
sub
mov
aad
gs
ret
jnp
ss
xchg
push
push
dec
scas
sbb
and
push
fisttps
cmp
inc
ja
loopne
loope
jl
add
add
mov
jg
ljmp
push
sbb
xlat
add
arpl
add
int
inc
inc
nop
adcl
gs
dec
cld
push
mov
lcall
sbb
cmp
shl
push
aas
push
add
jl
xor
test
popl
jbe
push
or
xchg
leave
cmp
adc
pop
dec
mov
mov
shlb
jmp
out
pop
and
int3
and
pop
sbb
aad
add
add
add
cmp
in
fimuls
fcoms
fadds
add
add
aad
and
mov
repz
inc
test
inc
test
aam
sub
pop
xchg
outsb
mov
or
jmp
loope
cs
jg
pushf
lret
aaa
adc
or
and
movsb
js
test
clc
sub
or
daa
push
xor
push
cld
iret
inc
push
jge
inc
pop
adc
mov
jecxz
jmp
add
add
add
mov
sbb
std
negb
sub
adc
lret
add
arpl
add
dec
fs
pop
mov
inc
xor
andb
jno
cltd
cmp
xchg
mov
leave
dec
cld
mov
add
dec
cltd
out
inc
adc
xor
sub
or
cmp
jle
and
in
orb
out
mov
jne
fsubrl
test
mov
mov
add
dec
add
add
add
xor
jb
inc
mov
sub
flds
add
add
in
xchg
addr16
push
sahf
mov
sbb
or
mov
lock
inc
mov
mov
sbb
jo
insl
inc
test
push
push
or
xchg
or
xor
imul
bound
inc
or
add
push
adc
xor
add
add
dec
in
fwait
scas
fdiv
pop
sub
jb
flds
add
add
push
fmuls
lods
rorb
js
aad
mov
mov
lcall
int3
mov
add
aas
cmp
mov
push
mov
ljmp
pushf
jg
mov
sbb
fcoms
cmc
mov
scas
fdivs
or
inc
lahf
sub
das
ljmp
lea
dec
jae
loope
add
add
add
mov
aam
xor
and
xlat
flds
add
add
ss
mov
jg
sub
loopne
into
fdivs
lahf
xor
stos
in
sbb
cmp
xor
lods
std
inc
or
jmp
std
cmp
sub
or
imul
dec
int
leave
jp
or
push
cmp
xor
mov
jno
int
push
push
sbb
insl
lock
add
add
push
add
mov
out
stc
xor
cmp
add
arpl
add
jne
mov
sahf
out
lret
jle
mov
outsl
cmpsl
push
sub
mov
xchg
lods
fsub
and
dec
add
xchg
out
xchg
adc
das
xchg
push
mov
aam
cmp
popa
loope
ljmp
iret
fwait
xchg
mov
repnz
mov
jns
imul
mov
cmp
jne
add
add
jmp
repz
fimull
shll
arpl
add
pop
arpl
test
cmp
imul
icebp
mov
ja
shll
inc
jg
mov
dec
xor
insl
sbb
pop
insl
push
mov
daa
dec
mov
ljmp
daa
fnsave
add
or
in
xchg
repnz
add
sub
cltd
sbb
jmp
mov
add
add
add
pop
iret
pop
aad
ss
dec
inc
inc
call
add
add
push
mov
mov
leave
jmp
lock
xchg
hlt
mov
inc
addr16
add
repnz
int3
xchg
mov
sub
xor
imul
adc
dec
movsl
or
gs
xchg
shrl
in
sub
adc
popa
cwtl
adc
dec
test
hlt
push
bound
scas
es
imul
add
add
cld
int3
pop
inc
sub
add
arpl
add
mov
es
in
dec
daa
data16
push
or
ficoms
jg
or
lods
add
jle
or
and
outsl
cltd
push
sub
xor
test
lahf
jne
mov
xchg
pop
ret
pop
xchg
ret
push
hlt
in
ljmp
pop
and
sbb
or
pop
mov
lds
add
add
outsb
jae
lret
jle
repz
sub
arpl
add
dec
cld
xchg
insl
mov
and
xor
mov
sub
xchg
xchg
jge
daa
lea
inc
ljmp
xor
adc
jecxz
jmp
sbb
scas
xlat
adc
pop
es
arpl
pushf
adc
sahf
lods
ret
loope
pop
test
lods
mov
jns
sti
or
iret
aam
mov
inc
mov
icebp
mov
add
add
add
adc
adc
mov
lds
sub
add
arpl
add
daa
imulb
sahf
jle
out
sbb
pop
mov
jle
filds
fs
inc
cmp
push
ds
cmpsl
or
insl
rol
js
xor
mov
push
sbbb
xor
scas
xor
loopne
sahf
cltd
cmp
lea
and
add
add
add
mov
lock
mov
rclb
out
mov
add
arpl
add
pop
sbb
shlb
imul
aas
cmpsb
cld
stos
fiaddl
mov
mov
or
dec
inc
imul
pop
mov
push
mulb
jns
inc
sub
int3
fistps
or
jge
sbb
or
ret
push
xor
xchg
jg
clc
orl
aam
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
rcrl
call
arpl
add
push
mov
xchg
loope
and
adc
sub
mov
or
out
pop
sub
or
xchg
add
xor
dec
and
sbb
sbb
rep
fstps
dec
inc
shl
fld
push
jmp
iret
cli
add
push
pusha
leave
fdivrs
mov
add
add
int
xchg
inc
cmc
sti
fildll
fs
sahf
push
fldl
add
add
push
dec
jmp
sub
iret
cmc
xor
es
insb
mov
add
aad
lea
dec
shr
dec
js
mov
cmp
out
dec
push
jp
inc
sub
dec
xlat
test
dec
sbb
dec
fcmovnu
rclb
hlt
loope
sub
mov
scas
jne
fcmove
sbb
or
mov
scas
add
add
add
fs
testl
push
stc
mov
add
arpl
add
ret
cmp
and
push
hlt
dec
in
fsubs
sub
ds
cmp
lret
and
inc
jmp
sar
lds
popa
fidivl
dec
jbe
or
xchg
push
adc
insl
add
xchg
icebp
jg
adc
cmp
in
push
bound
add
push
lods
sub
dec
cld
loope
add
add
add
add
jne
jg
clc
cs
push
sub
add
arpl
add
xor
sahf
loopne
dec
dec
inc
add
mov
dec
lods
mov
jmp
cmpsl
insl
imul
outsb
sbb
xchg
dec
mov
fldl
jmp
cwtl
or
fsubrs
gs
push
pusha
push
ds
ret
xorb
popa
outsb
xchg
mov
outsb
adc
adc
push
pop
test
add
add
or
dec
mov
je
lcall
add
arpl
add
jmp
and
push
cmp
mov
mov
cmp
call
in
cmp
mov
ljmp
icebp
gs
out
insl
inc
inc
sub
mov
jb
lods
cli
and
aam
iret
rorb
inc
std
mov
xchg
sbb
fcom
add
callw
xchg
add
add
add
push
mov
mov
xchg
adc
repnz
repnz
add
add
jb
test
mov
cltd
rorl
inc
aaa
je
add
outsl
mov
jecxz
push
push
cmc
mov
jae
cmp
pop
out
loope
sbb
subl
in
sub
leave
fbstp
adc
inc
mov
sub
mov
push
push
fisubrs
push
push
pop
lcall
or
fcmovu
fisttps
push
lods
mov
add
add
dec
or
icebp
shl
pop
stc
lahf
ret
xor
push
mov
xchg
mov
sbb
ljmp
mov
adcl
jae
adc
or
mov
scas
xchg
insb
and
jns
in
or
fstpl
sbb
loope
dec
adc
and
jmp
sbb
and
mov
add
jle
out
sbb
mov
roll
add
add
or
add
stc
mov
add
lods
into
and
add
es
dec
pusha
adc
cmc
pop
stc
mov
sbb
push
fcmovbe
rcll
std
out
push
mov
pop
mov
add
fcomi
cmc
dec
fs
jbe
mov
mov
in
pop
clc
repnz
add
add
add
and
cmp
xchg
sbb
add
arpl
add
xor
or
outsb
std
mov
sub
mov
add
pusha
bndldx
jae
dec
sub
xchg
in
dec
cmc
cs
fs
lea
in
test
mov
cmp
mov
and
mov
insl
daa
enter
stos
incb
mov
popf
ret
push
xor
jmp
add
add
xchg
nop
ffree
popf
aam
andb
jle
add
arpl
add
mov
lods
cli
lahf
testl
mov
icebp
mov
insb
or
fucomi
inc
ret
jb
test
add
into
call
shl
leave
adc
repz
rolb
pushf
push
add
hlt
test
push
ds
dec
addr16
jno
into
ficompl
out
jno
mov
arpl
testl
mov
add
add
mov
jbe
hlt
mov
and
cmpsb
lcall
add
add
mov
adc
pushf
xchg
jmp
cli
je
inc
sub
dec
push
inc
jle
movsl
pop
add
imul
test
loop
jecxz
push
xchg
int3
push
or
shrl
xor
dec
fadds
mov
sbb
mov
xor
insb
jno
mov
cltd
jno
mov
in
pop
or
loop
jge
add
add
xor
into
mov
sub
out
xor
inc
roll
add
add
pop
fnsave
scas
mov
mov
jns
adc
push
cld
xor
pop
test
inc
xor
fstpt
movsb
dec
cltd
dec
pop
push
or
dec
inc
pushf
shlb
dec
stos
lcall
jno
push
into
add
lahf
push
pop
inc
inc
mov
push
xchg
inc
mov
in
mov
cmp
mov
and
add
fucomi
outsb
and
pop
mov
cmpsl
roll
add
add
jb
mov
adc
inc
inc
aam
inc
xchg
sbb
imul
pop
subl
sahf
notb
mov
mov
jae
loope
cmpsl
mov
cmpsl
xlat
popf
dec
jl
pop
xor
stos
cltd
repz
in
hlt
or
xchg
mov
add
test
sbb
add
add
mov
and
and
aam
add
add
xor
lret
push
mov
jbe
sbb
inc
mov
aas
xor
jb
mov
sub
mov
mov
out
push
bsf
mov
dec
jb
jno
adc
add
push
into
mov
dec
cmpsb
aad
or
movsb
fcom
imul
inc
jbe
sbb
fcmovnb
popf
into
lods
push
aaa
cmc
xchg
insb
add
add
add
stc
call
into
inc
mov
inc
xchg
mov
add
add
mov
mov
add
fstl
out
xchg
inc
popf
sbb
imul
sbb
cli
or
adc
lea
andl
aaa
push
push
jns
jge
sbb
lods
inc
cmp
inc
or
jns
xor
sub
iret
shrb
add
fisubrs
cwtl
sar
repz
jmp
xor
arpl
add
enter
and
mov
mov
push
scas
in
jne
xchg
push
cmp
sbb
sbb
push
les
outsb
xchg
push
dec
and
arpl
shl
mov
pop
mov
sbbb
rcl
jne
xchg
popa
jae
loop
andb
jne
out
inc
lcall
add
push
add
add
dec
aas
int3
sbb
out
loopne
lods
pop
xor
add
arpl
add
movsl
xchg
cmpsl
or
adc
fdivrp
and
jne
jp
testl
rcrl
lcall
scas
pop
mov
and
aas
and
mov
jbe
sbb
popf
sahf
rcrl
sub
pop
xor
jmp
movsl
scas
subb
divb
inc
lock
dec
dec
pop
push
jnp
fsts
add
push
test
fildll
popa
stc
hlt
xchg
aad
add
add
or
shll
mov
adc
testl
leave
sbb
cmp
fdivl
and
mov
ljmp
xor
xchg
mov
in
fwait
xchg
jle
push
fstps
cld
scas
mov
push
adc
xor
xor
fstl
inc
nop
ljmp
and
add
fwait
loope
sub
sarb
add
cmp
aad
add
add
nop
sub
jae
mov
cmc
leave
addb
call
bound
mov
adc
mov
stos
add
cltd
pushf
out
cmp
leave
jmp
push
enter
cmp
push
into
dec
orl
popa
test
cmpsb
insb
jo
lods
xchg
mov
lods
insl
aaa
xor
test
add
add
or
ja
dec
cmp
dec
fs
or
add
add
mov
mov
pop
add
test
jmp
mov
mov
jmp
or
sbb
sbb
fadd
jno
or
xchg
pop
insb
lods
xchg
push
fs
lock
push
lock
jmp
sub
xor
sti
nop
pop
in
nop
push
out
ror
data16
jecxz
cmp
add
add
add
arpl
jge
mov
daa
pushf
cwtl
pop
sbb
arpl
add
pop
push
fwait
sbb
or
je
daa
outsb
movsl
loop
pop
pop
xor
push
mov
inc
sahf
sbb
jecxz
xchg
bnd
rcll
mov
sbb
movsb
shlb
push
into
pop
les
popa
nop
mov
jns
sahf
ret
das
fs
fscale
push
dec
aas
inc
xor
push
mov
pushf
xchg
adc
inc
cli
iret
mov
andl
add
daa
push
imul
cmp
test
sbb
add
arpl
add
mov
mov
cmp
mov
pop
aam
clc
mov
dec
loop
popa
add
lahf
popa
nop
into
test
sub
mov
mov
arpl
daa
subl
cmc
xor
aas
and
pop
ret
enter
adc
mov
dec
shrl
sub
mov
dec
and
add
add
daa
ss
xor
and
subb
add
arpl
add
or
lea
das
cmc
sub
and
mov
jmp
outsb
out
and
push
jle
stos
pop
mov
push
adc
pop
or
out
sbb
das
iret
pop
and
and
lods
pop
lods
jb
sti
fsubrl
into
loopne
mov
xlat
stos
push
scas
dec
in
stos
jo
test
cmp
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
add
arpl
add
or
cmpsb
lahf
cs
lcall
insl
or
jno
cmp
sbb
lcall
pop
dec
jmp
nop
mov
je
hlt
and
dec
pop
push
inc
cld
lods
data16
mov
fcmovb
lock
pop
in
cmc
test
and
and
push
dec
dec
insb
inc
and
dec
pop
clc
addr16
xlat
into
test
add
push
aad
out
fucomip
ss
cmp
cmp
inc
filds
add
add
xchg
mov
dec
lds
scas
xchg
cld
xchg
pop
push
dec
sub
mov
notl
pop
xchg
fiaddl
mov
pop
insb
and
fiaddl
and
dec
cmp
mov
addr16
test
xor
push
pushf
mov
pop
jl
mov
outsl
bound
js
inc
sub
jp
sbb
daa
add
add
add
in
cld
fisubrl
sbb
or
filds
add
add
cmp
inc
in
shr
sahf
inc
outsl
xchg
xor
mov
out
cmc
into
add
aas
fwait
mov
sub
outsl
fidivs
data16
inc
inc
and
test
dec
mov
aad
push
xchg
fistl
jns
pop
cmpsb
adc
stos
xchg
aam
mov
shlb
daa
push
iret
lcall
data16
add
add
add
push
les
in
lahf
sti
ja
rcll
int
loopne
add
add
cwtl
sbb
xchg
addr16
push
xchg
push
xor
ror
cmp
sub
andl
outsb
mov
cs
inc
ja
or
lret
and
jnp
add
pop
scas
mov
jae
and
dec
jnp
mov
movsl
cmp
cmp
xchg
jae
cs
inc
add
add
add
jle
call
cli
lcall
add
arpl
add
cmp
insl
or
push
hlt
add
lods
xchg
push
imul
sbb
mov
mov
jmp
icebp
aad
add
inc
mov
shrb
xor
ja
fwait
in
stos
lret
or
lods
cmc
sbb
std
sub
pop
es
fdivrs
lahf
in
jbe
sti
add
add
add
fincstp
shl
frstor
pop
dec
inc
lods
out
and
loopne
add
add
out
push
push
sub
scas
or
or
cmpsb
stos
jne
cmpsb
mov
fsubl
loop
push
mov
rol
push
mov
pusha
mov
mov
dec
mov
cmp
mov
lret
loopne
inc
adc
bound
stos
addr16
out
scas
push
pop
ja
jge
call
jmp
sub
add
outsl
mov
jmp
push
fcmovu
in
notb
xor
add
arpl
add
sahf
sbb
int3
mov
xchg
aas
pop
jl
dec
aaa
add
lahf
inc
mov
jmp
fs
data16
lcall
mov
out
sti
push
inc
icebp
rol
or
pop
fldt
out
rcrb
ja
or
outsl
mov
rclb
xchg
scas
scas
int
outsl
incl
out
jg
loop
add
add
add
sbb
inc
jecxz
mov
add
test
add
add
sub
out
vmovlhps
xchg
lcall
or
jl
xchg
out
or
andb
movsb
adc
push
jne
jmp
push
jno
pop
xchg
cltd
add
adc
xchg
pushf
js
pop
mov
pop
xor
fistps
test
ds
mov
or
dec
outsl
ss
aam
sti
adcl
mov
mov
cmc
cwtl
jle
add
add
add
mov
icebp
and
aad
mul
add
arpl
add
pushf
inc
mov
aas
lret
sub
jae
adc
mov
or
cmc
adc
push
repz
addb
mov
in
push
xor
adcl
mov
push
call
sub
cmp
mov
lods
sarb
and
sub
lds
add
adc
repz
das
cli
fists
dec
es
jmp
cmp
pop
loop
add
add
pop
mov
ljmp
xor
cmc
leave
push
and
ljmp
pusha
test
push
sbb
clc
mov
rorb
scas
cmc
jecxz
xchg
inc
dec
in
std
gs
test
lds
mov
sub
fdivs
popa
lock
ret
dec
sbb
inc
add
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
add
add
add
add
add
add
add
add
clc
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
