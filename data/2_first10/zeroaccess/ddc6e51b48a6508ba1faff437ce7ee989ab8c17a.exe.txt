push
mov
sub
addl
push
subl
push
xorl
lea
incl
push
push
movl
call
adc
mov
andl
push
xorl
xor
adcl
inc
andl
push
adcl
push
xorl
call
xorl
test
movl
je
push
push
push
andl
call
test
movl
je
adcl
xor
jmp
orl
push
andl
push
addl
call
test
movl
je
lea
push
call
jmp
addl
push
push
addl
push
andl
call
addl
test
movl
jne
push
addl
push
call
jmp
push
push
addl
call
andl
test
jne
andl
push
push
subl
push
sbbl
call
addl
test
movl
jne
andl
push
push
call
adcl
test
movl
jne
mov
mov
and
movl
and
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
sub
movl
xor
add
xor
lea
mov
movzbl
or
mov
lea
mov
mov
addl
mov
xor
mov
add
mov
or
mov
movzbl
sub
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
addl
xor
orl
add
andl
mov
movzwl
or
mov
adcl
xor
orl
add
movl
mov
mov
mov
subl
mov
orl
mov
negl
mov
mov
adcl
mov
orl
mov
movl
push
mov
mov
xor
movl
xorl
mov
xor
add
movl
jmp
notl
mov
xor
lea
adcl
push
xorl
mov
xor
orl
lea
sbbl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
mov
sbbl
pushl
negl
call
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xorl
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
push
pushl
pushl
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
xor
andl
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
xor
movl
lea
movl
cmp
jbe
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
mov
sub
or
mov
mov
movl
sub
andl
xor
mov
mov
mov
cmp
movl
jne
push
xorl
xor
inc
andl
push
subl
push
call
test
movl
jne
sbbl
push
subl
push
call
orl
test
movl
jne
addl
push
adcl
push
adcl
push
call
sbbl
test
jne
sbbl
push
push
andl
call
xorl
test
jne
andl
lea
sbbl
mov
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
xor
add
dec
mov
jmp
mov
test
je
xor
mov
mov
add
mov
mov
add
mov
incl
mov
sbb
mov
inc
mov
movzwl
adc
mov
mov
movl
cltd
mov
andl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
inc
adc
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
movl
mov
adcl
subl
xor
adcl
mov
or
mov
sbbl
xor
movl
mov
cmp
jne
mov
cmp
je
adc
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
push
push
pushl
pushl
call
jmp
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
push
call
cmpl
jb
mov
mov
add
mov
mov
movl
jmp
movl
mov
movl
cmp
je
xor
xor
mov
sub
and
mov
mov
xor
orl
add
movl
cmp
movl
je
andl
push
xor
adcl
inc
push
push
call
adcl
test
jne
adcl
push
push
subl
call
andl
test
movl
jne
push
orl
push
push
addl
call
orl
test
movl
jne
addl
push
push
negl
call
adcl
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
xorl
mov
mov
pushl
mov
pushl
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
pushl
call
mov
mov
mov
jmp
push
xor
inc
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
orl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
movl
mov
or
push
or
mov
notl
xor
mov
push
addl
mov
adcl
add
cmp
je
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
orl
xor
subl
add
add
jmp
lahf
es
mov
fwait
icebp
sub
adc
xchg
cmp
jb
jb
pop
pop
jb
adc
and
popa
cwtd
js
bound
push
test
insl
push
iret
pop
inc
cmp
jg
mov
sub
data16
imul
xor
mov
xchg
fiadds
add
insl
fldl
push
repnz
arpl
scas
sub
cmpsb
jmp
inc
and
push
icebp
adc
jo
jnp
nop
pop
cmpl
sahf
cmp
mov
shrb
push
sti
iret
andb
enter
imul
or
sbb
fadds
std
push
movsl
icebp
pusha
mov
ljmp
ss
cwtl
cmp
xchg
mov
std
es
jge
hlt
ja
int3
mov
sub
sbbb
add
stos
cwtl
sahf
subb
scas
stos
sti
stos
and
dec
ljmp
popw
imull
sbb
add
xor
and
mov
cltd
aas
jnp
adc
cmp
lods
mov
gs
cld
incb
popf
je
mov
or
mov
mov
rol
push
jg
leave
sbb
outsb
fdivp
loop
jp
mov
loope
loop
push
lret
inc
ss
xchg
mov
mov
sbb
bound
cmpb
das
and
repz
mov
xchg
sub
std
and
jo
bound
or
div
mov
mov
aaa
dec
mov
lods
jb
lea
jmp
mov
sahf
jnp
out
cltd
aas
test
xor
xchg
xchg
jg
push
outsb
test
pop
jne
les
addr16
int
adc
mov
mov
pop
mov
imul
dec
imul
mov
incb
push
sub
push
es
in
ret
cmp
xchg
adc
cmp
cld
jmp
dec
add
roll
sbb
ret
add
loop
cwtl
mov
xchg
scas
fs
mov
shlb
inc
inc
lods
dec
int
cs
mov
dec
or
sar
jnp
sub
aaa
or
loopne
add
lock
aas
or
popf
cmc
lahf
inc
pop
stc
pop
icebp
mov
inc
call
jmp
push
testl
out
inc
mov
nop
icebp
inc
jo
dec
add
icebp
dec
ljmp
mov
jb
sarl
pop
fs
fimull
add
push
lret
fwait
cwtl
jp
sti
out
or
mov
pop
lods
or
cltd
sub
xorl
sub
and
add
lea
xor
nop
jbe
paddw
into
jnp
lods
int
imul
dec
jne
icebp
out
push
push
lods
dec
mov
pusha
mov
xorl
push
das
inc
cmp
sub
jmp
dec
and
lods
pop
adcl
adcl
imul
and
es
push
xor
std
mov
add
cmpsl
pop
inc
insb
jns
pop
jno
push
out
jle
mov
xchg
gs
jmp
add
mov
jae
dec
inc
imul
inc
jl
push
push
out
mov
dec
sub
ss
xchg
bnd
or
cmp
dec
jge
xchg
out
mov
add
xchg
lea
insl
xorl
push
mov
xor
je
out
sub
bound
ljmp
pop
cmpsl
inc
dec
stos
popf
jns
pop
cmp
iret
mov
or
dec
aad
cmpsl
fndisi(8087
aam
mov
mov
jo
lcall
mov
popfw
cs
adc
in
in
icebp
insb
mov
xor
in
fldenv
std
iret
jno
fstp
aaa
shll
and
loopne
sbb
test
inc
cmpsb
push
mov
jno
cmp
in
fcomps
pop
adc
sub
loopne
jmp
fdivrs
test
pop
movsb
scas
mov
dec
cmp
enter
pop
aaa
insl
dec
fucomip
mov
push
xchg
dec
sbb
aam
or
mov
loope
pop
adc
lock
testl
aad
ret
cmp
inc
xchg
mov
mov
mov
fcomps
push
pop
push
loope
and
cwtl
test
jmp
adc
out
fbstp
fwait
ds
fmull
pop
movsl
fisttps
test
cli
dec
mov
mov
push
and
sarb
cmp
adc
ljmp
fsub
loope
imul
pop
sub
in
adc
lcall
mov
test
out
popf
sub
jge
sti
jecxz
outsl
das
outsl
sub
data16
mov
push
push
xor
and
xor
mov
xor
push
leave
jo
mov
test
or
xchg
andb
les
fidivrs
mov
js
into
mov
subl
sbbb
movsl
cwtl
jno
inc
add
lcall
sbb
ret
pop
pop
movsl
or
mov
sahf
scas
inc
adc
mov
lds
jo
jbe
xor
mov
adc
int
adc
pop
stc
mov
sub
popl
jne
mov
xchg
lret
push
fcomi
mov
or
cmp
lock
enter
cmp
stos
dec
adc
movsb
stos
mov
adc
and
cld
dec
jge
ror
lahf
dec
or
adc
das
sbb
lea
dec
sbb
int3
jmp
jg
adc
jo
test
sub
in
pop
mov
sbb
mov
pop
ret
dec
mov
loopne
out
xor
dec
push
jmp
scas
pop
pushf
in
movsl
sarb
push
rcll
sub
mov
fimull
mov
mov
fiadds
out
push
dec
int3
fstpt
jb
std
and
pop
popl
push
xor
adc
pop
ds
daa
inc
arpl
iret
insl
mov
mov
aad
sub
or
dec
int
push
hlt
rcll
leave
test
sub
enterw
pop
mov
ja
jnp
pop
mov
xchg
cmp
call
ret
sub
push
mov
jecxz
inc
std
jae
pop
jmp
add
shl
fildl
xchg
push
movsl
mov
mov
pushf
mov
shll
popf
jbe
fimull
in
icebp
fcomip
push
xor
or
push
lcall
aam
push
loopne
adc
jb
ret
loopne
clc
cmp
adc
jae
push
jns
pop
subb
arpl
mov
push
movsl
ja
inc
dec
int
sub
ja
daa
pushf
hlt
push
lcall
mov
adc
xchg
insl
rorl
mov
push
jmp
cmp
inc
sub
es
in
inc
jns
pop
sub
push
aam
das
inc
inc
enter
fsub
xchg
pusha
data16
xor
test
dec
mov
popa
or
mov
out
xor
popa
pop
push
pop
mov
push
push
mov
pop
sub
dec
mov
test
lods
ficoms
ds
mov
mov
inc
js
repz
mov
inc
aam
lds
pop
mov
in
jmp
in
inc
pop
scas
or
mov
mov
inc
pop
loopne
loope
dec
cmpsb
jecxz
xchg
out
inc
xor
cwtl
pop
xor
sarl
fwait
adc
mov
in
push
addr16
mov
add
or
xchg
sti
ss
jle
cmp
or
sub
push
mov
int
pop
lret
insb
xor
cld
sub
sahf
nop
sbb
or
or
xchg
cltd
out
rorl
sbb
cs
mov
fisubrl
bound
ret
in
int3
in
mov
xchg
pop
sbb
and
or
pop
test
jmp
cld
mov
jmp
pop
movsl
sbb
and
add
icebp
iret
je
ffreep
sbb
xor
incl
shrl
push
add
pushf
in
xchg
mov
xor
mov
leave
xchg
jae
test
cmc
jmp
in
push
mov
int
sub
testb
arpl
outsb
aad
jle
fisttpl
mov
mov
mov
and
lods
rcrl
push
in
repnz
pop
push
sti
test
imulb
popf
dec
rclb
mov
jae
insb
xchg
ljmp
push
test
aad
sub
stc
mov
std
movsb
sbb
mov
in
jno
or
sub
or
jp,pt
stos
dec
jge
mov
xor
jbe
sahf
sbb
popf
cmp
sbb
ja
jns
fcomp
ljmp
test
jp
push
fidivl
jl
shlb
popa
in
pop
cmp
mov
mov
mov
xor
jb
popf
es
lret
arpl
jns
and
pop
fsubs
pop
mov
jp
stc
cmc
test
lea
push
push
cmpsb
cltd
rdtsc
addr16
lea
imul
lahf
mov
out
dec
add
adc
dec
mov
dec
movsb
add
push
inc
lret
jp
cmp
test
xlat
ss
scas
cmpl
not
inc
dec
jns
xchg
or
xor
sarl
or
adc
or
fcom
push
and
notl
addr16
jmp
sub
jne
add
adc
sub
out
adc
movq
scas
rorl
sbb
nop
shlb
rorb
test
ret
in
rep
ds
add
icebp
mov
push
pop
addl
icebp
ja
inc
icebp
shrb
fadd
cmp
push
test
sti
sti
out
mov
inc
ljmp
bswap
mov
lock
test
xor
in
pop
jp
push
sbb
adc
fisubrs
repnz
mov
cmp
jg
andb
pop
inc
sbb
fs
jecxz
mov
lock
push
je
lods
test
pop
dec
mov
mov
mov
lret
bound
and
mov
insl
arpl
rol
popl
push
icebp
sahf
das
sbb
dec
fidivs
lahf
jmp
outsb
test
jns
fcomps
iret
fcmovne
sbb
sub
mov
dec
lcall
xor
rorl
sbb
jge
push
pop
fwait
repnz
sbb
movsb
or
cmpsl
mov
xchg
fcoms
jno
mov
bound
in
jno
pop
imul
test
sbb
out
mov
loopne
pusha
xor
je
fsubl
lds
pop
adc
dec
dec
cmpsb
lret
ret
psubd
fdivl
in
jmp
int3
cwtl
enter
mov
add
mov
test
enter
stos
and
sbb
testb
cmp
xchg
in
pop
mov
jecxz
cmp
enter
adc
jns
ret
mov
inc
xchg
out
or
testl
push
in
jo
ret
xor
test
mov
jo
xchg
or
jecxz
rclb
stos
push
rolb
jb
aaa
adc
inc
faddl
jae
or
test
cmp
xchg
mov
scas
out
xchg
sbb
ds
cli
into
mov
popa
or
inc
or
lcall
jo
inc
lret
mov
enter
xorl
jo
dec
mov
sub
push
lock
fists
leave
and
adc
js
fwait
jl
rclb
aam
jmp
mov
sbb
pop
inc
pop
fisubrs
push
or
aas
dec
pop
jg
js
xchg
pop
pusha
inc
and
sahf
iretw
sti
int
idivb
ret
sub
insb
icebp
nop
je
fadd
dec
add
xchg
out
sarl
cs
and
sti
jle
adc
or
lods
or
cmp
push
sbb
pop
fistpl
jae
fbld
mov
in
fldl
fwait
add
mov
xchg
sbb
insl
xchg
loopne
xor
mov
pushf
sub
xchg
ljmp
cmpsl
pop
adcb
pop
push
int
lds
add
addr16
les
jb
mov
cmc
dec
lods
dec
push
fsubl
lcall
aaa
xor
mov
leave
push
or
push
jle
dec
push
push
dec
dec
es
stc
cmp
repz
aam
int3
pusha
fnstenv
adc
adc
adc
out
les
std
bound
out
and
popf
mov
mov
push
sbb
sbb
ss
cwtl
cmp
mov
dec
pop
xorl
std
sub
in
movsb
into
movsl
pop
mov
dec
jae
adc
bound
cwtl
mov
cmp
mov
jnp
cld
inc
xchg
and
dec
out
fldt
popa
orb
into
sti
out
sub
das
imul
int
sbb
sub
inc
cmp
pop
push
push
pop
fildll
jp
das
mov
inc
pop
das
cli
push
iret
jge
addr16
cmpsb
pop
mov
push
shlb
movsb
in
push
mov
int
outsl
add
and
and
arpl
mov
fidivrs
jg
mov
or
pop
shlb
pop
mov
loope
dec
test
or
or
xchg
add
sbb
dec
inc
inc
dec
adc
insl
pop
cli
les
pop
cmpsb
mov
xchg
rcl
jecxz
pop
out
insl
sahf
fdivrl
sbb
cld
ret
stos
inc
pushf
xorl
aaa
loope
add
push
lock
sub
push
imul
push
pop
pop
subb
out
dec
add
xlat
rol
and
add
sbb
orl
cs
test
test
add
insl
mov
xchg
andl
nop
ja
daa
mov
outsb
arpl
add
adc
shrl
cmp
repz
loopne
hlt
push
inc
add
ret
mov
xchg
dec
lret
xor
lock
rorb
repnz
dec
push
sub
in
push
pop
sbb
jbe
cld
xchg
adc
in
and
or
repnz
imulb
sarb
out
fs
lcall
and
popf
add
fiadds
push
sub
push
js
add
sbb
pop
data16
insb
sbb
pop
popf
lcall
jne
push
jmp
popf
push
push
sbb
adc
jno
push
cltd
xor
pop
ds
lret
pop
xchg
dec
and
gs
testb
lds
mov
leave
xchg
jbe
push
pop
pop
cld
jecxz
lock
jae
jle
push
stos
jae
fchs
insb
add
nop
aam
inc
out
dec
push
pop
in
inc
inc
push
cmp
xor
push
movsl
inc
outsb
lds
pusha
andl
dec
jp
pop
arpl
in
xor
rcr
sbb
inc
lea
xchg
jp
vandpd
sub
jmp
fsubs
iret
repnz
sbb
lods
add
shl
xlat
xor
imul
mov
mov
jbe
xchg
lret
add
repz
and
sub
adc
js
push
rcrl
dec
mov
push
inc
mov
mov
cmp
xor
sbb
cmp
test
int
nop
icebp
jbe
cmpsl
scas
push
shlb
jg
add
mov
rcr
dec
dec
aam
test
cmp
xchg
or
and
js
loopne
inc
shlb
mov
and
lret
mov
lahf
and
shrb
bndldx
aad
jecxz
cmpsl
insb
fidivrs
daa
aaa
int3
xchg
xchg
sbb
xchg
xchg
mov
ja
out
xchg
movsb
imul
push
lods
je
add
jge
adc
inc
xchg
jp
pop
and
into
sub
aam
xor
cli
icebp
adc
or
adc
mov
mov
or
test
xchg
out
in
xor
or
and
dec
inc
loopne
mov
jg
cs
cmpsl
pavgb
lods
jle
xchg
mov
inc
add
lds
mov
push
clc
shrl
repz
cli
pop
enter
fcompl
dec
test
sbb
lcall
rcl
cmp
enter
sarb
xchg
mov
sub
dec
xchg
test
pop
xchg
inc
and
sub
mov
xchg
jecxz
jl
cli
pop
lret
roll
addr16
das
sub
mov
xor
lcall
xor
inc
test
cmpsl
jmp
lea
fistl
dec
in
movb
lcall
push
loop,pt
mov
stos
jmp
adc
fidivrl
hlt
xlat
jno
push
out
jae
add
and
push
mov
icebp
cmp
xor
test
popf
sbb
loopne
push
or
hlt
dec
mov
sbb
jns
call
or
inc
mov
mov
shlb
cmp
fcmovbe
adc
inc
jp
call
dec
clc
push
rclb
jne
mov
in
ret
outsb
mov
cld
inc
cmp
gs
or
nop
mov
fwait
mov
pop
enter
sub
ret
cld
mov
sub
movsb
ja
repnz
mov
pop
mov
mov
call
sbb
xor
ljmp
adc
test
pushf
pop
int
jl
jmp
ss
xlat
clc
cmpsl
jo
push
xor
jnp
push
inc
xchg
sahf
pop
cmc
jl
jno
inc
cmp
inc
or
pushf
sbb
jo
and
mov
jbe
xor
push
dec
mov
psrad
and
mov
call
in
movsl
bnd
enter
mov
lret
push
and
push
or
fwait
cld
out
divb
int3
pop
fldcw
jg
push
scas
dec
xor
pop
and
mov
add
por
jg
movsb
dec
ret
sahf
adc
inc
cmp
jne
ljmp
mov
inc
push
jp
leave
mov
add
push
cltd
cwtl
and
xchg
pusha
fwait
pop
xchg
js
stos
inc
jno
andb
mov
pop
test
inc
imul
mov
stos
push
in
int3
cmp
or
imul
sub
inc
dec
mov
aam
outsl
ss
ljmp
pop
clc
pop
cli
jbe
sub
dec
jecxz
ja
or
pop
and
aam
inc
jmp
jne
xchg
ljmp
pop
push
pop
jo
sbb
adc
push
mov
iret
lret
or
mov
imul
jmp
dec
xor
rorl
push
lods
dec
pop
imul
inc
rcll
xlat
sbb
inc
dec
pushf
cmp
pushf
jae
dec
test
inc
xor
or
icebp
dec
test
stos
rorl
cmpb
cmpsl
cmp
mov
dec
cltd
adc
out
mov
jae
sub
imul
jmp
add
mov
or
jno
xchg
jl
dec
int
mov
adc
sbb
lahf
out
sbb
stos
sbb
lret
mov
pop
push
dec
aad
in
stc
jp
pop
and
xchg
and
pop
lret
lock
fcomps
rolb
dec
push
leave
orl
sbb
loopne
imul
xchg
scas
mov
xchg
jmp
ret
je
out
loopne
mov
ss
push
daa
dec
jns
sarl
or
ret
push
enter
mov
divb
sub
xchg
cmp
sub
cmp
mov
movsl
lret
loop
test
adc
push
inc
jmp
sbbl
pop
in
jp
lods
imul
sub
loopne
bound
sti
mov
imul
aad
test
cmc
push
jbe
pop
mov
mov
or
clc
mov
mov
push
xchg
add
jb
lock
aad
sub
push
inc
int3
insl
xor
jecxz
and
mov
push
rolb
in
xchg
sbb
sbb
cmp
sbbb
out
pop
icebp
daa
lds
mov
add
jp
and
push
and
pop
xchg
sub
cmp
int3
dec
lahf
lret
sbb
lea
out
lahf
andl
jmp
pop
mov
mov
hlt
jae
orb
xchg
xchg
inc
mov
sbb
xchg
inc
dec
rolb
testl
mov
mov
push
es
sub
std
mov
in
add
jne
fisubrl
sub
repz
cli
push
xlat
bound
pop
lret
inc
mov
fcmovne
jg
or
xor
push
clc
lret
ds
sbb
sub
sbb
shlb
adc
jge
enter
les
dec
adc
xor
int3
sti
cvtps2pi
xchg
gs
fnstenv
les
jle
out
mov
shrl
ret
inc
sbb
fnsave
lea
jge
test
add
sti
mov
inc
dec
into
sbb
mov
push
ljmp
pop
xor
ret
xchg
mov
push
in
pop
gs
mov
adc
pop
pop
ret
sbb
outsl
es
inc
and
addl
jb
pop
pop
jge
add
push
in
lahf
mov
out
jle
push
jle
cs
aaa
stos
test
mov
ss
outsl
jge
das
push
jne
dec
popl
mov
imul
xor
enter
sbb
pop
adc
adc
sbb
negl
out
mov
lret
inc
jnp
out
pop
bound
and
mov
movsl
xchg
mov
cmp
add
and
shl
push
jmp
ljmp
stc
das
in
shld
add
lea
mov
into
ret
lret
mov
sub
adc
fadd
arpl
stos
lods
dec
dec
mov
or
mov
dec
loope
pop
mov
idiv
xor
and
and
add
lcall
ljmp
add
cwtl
jg
lcall
cld
jmp
pop
fdivl
xor
imul
hlt
mov
pop
jno
mov
in
dec
push
jns
mov
lods
xor
cs
fwait
enter
inc
xor
negb
sub
outsl
aaa
xchg
sub
xor
add
mov
outsb
push
xor
mov
pop
pop
push
xor
mov
or
ret
pop
add
loope
imul
xor
push
insl
orl
jns
cmpsb
cmp
lcall
or
push
mov
xchg
je
lds
repz
mov
jmp
jmp
in
push
xor
mov
idivl
cs
mov
cmc
or
xchg
js
xchg
ds
add
and
xchg
mov
pop
dec
ljmp
fadds
adc
popf
sar
cmpsl
nop
mov
mov
popa
scas
in
mov
mov
repnz
xorl
and
and
scas
cmp
mov
lods
jp
gs
ljmp
daa
jge
mov
xor
movsl
ds
xchg
jno
add
ljmp
mov
push
imul
jo
mov
sub
rol
push
cli
push
fisubl
negl
sbb
sbb
mov
sbb
jp
adc
cmpsl
mov
stos
jecxz
push
push
imul
mov
mov
cs
dec
jb
in
insl
mov
inc
in
sti
push
imul
sti
sub
or
dec
mov
filds
stos
xor
insl
repz
imul
pop
or
or
rolb
xor
in
test
stos
lds
out
xor
inc
ss
xchg
mov
fsts
aaa
sub
xchg
fists
push
xor
sbb
dec
cs
cmpsb
mov
fistl
movl
push
insl
jbe
int
hlt
and
popf
inc
imul
dec
add
push
inc
aaa
and
xor
aad
adc
les
pop
sti
push
repnz
inc
lods
xchg
rorl
and
lods
nop
je
cmpsl
movsl
xor
jl
jle
xor
je
cmc
ret
sub
addl
pop
aad
push
inc
outsb
test
and
push
incl
mov
sbb
rcr
mov
subl
dec
cvtps2pd
scas
fldl
aas
cmpsb
dec
out
in
inc
adc
fidivrs
out
out
mov
xlat
sbb
cmp
cwtl
test
and
mov
or
ficoml
test
outsl
xor
test
sbb
mov
pop
xchg
movsb
mov
push
fildll
jno
add
sub
pop
clc
dec
pop
xor
lahf
stos
fidivs
inc
jp
lods
fsub
sahf
call
mov
inc
gs
je
push
iret
pop
mov
push
mov
shl
sub
pop
push
pusha
mov
xchg
add
and
push
mov
in
es
rcrb
cmp
push
add
xchg
cmpsl
sub
ja
ljmp
pop
movsl
mov
xchg
mov
pop
jmp
gs
dec
loop
add
push
jns
xchg
insb
lock
gs
dec
lods
lcall
add
push
in
lds
jmp
push
int3
inc
mov
or
stos
test
mov
add
sub
leave
fisttps
into
lock
cmp
leave
jo
xchg
jne
adc
sub
lret
mov
out
cli
je
cmp
mov
outsl
dec
lock
in
pop
sbb
sbb
cmp
sbb
fadds
sbb
dec
ljmp
mov
add
add
mov
mov
cld
and
inc
mov
sti
insb
mov
orb
mov
jnp
aam
xchg
xor
popa
xor
xor
ss
test
pop
fld
loopew
jmp
inc
dec
jae
inc
mov
lret
adc
push
jecxz
ds
cmp
and
flds
stc
lds
std
vcvttpd2dqy
sbb
push
or
pop
xchg
lea
hlt
adc
push
lock
push
stc
mov
stc
mov
mov
mov
cltd
decl
sbb
and
stos
divl
mov
mov
push
mov
bound
ja
sbb
jb
movsb
and
lods
mov
inc
xchg
mov
test
sub
fucom
stos
call
sar
imul
mov
sbb
iret
inc
out
lock
adc
mov
or
sbb
mov
pop
or
add
sti
arpl
inc
leave
pushw
shl
imul
scas
mov
mov
inc
scas
in
mov
aad
test
addl
cwtl
adc
mov
pushw
adc
sub
loopne
cmp
mov
mov
clc
sub
jecxz
cmpsl
leave
test
pop
clc
dec
out
outsb
cwtl
ja
add
xor
pop
xlat
jl
xlat
mov
fwait
add
insb
stc
ds
cmp
cltd
push
sbb
out
scas
mov
mov
jb
push
into
roll
adc
mov
fistl
xor
lds
pop
pop
or
mov
lds
scas
add
push
loop
aas
mov
and
loop
sub
xchg
xchg
fstl
fcoml
std
sub
pop
or
imul
fcomps
push
movsl
mov
sbb
mov
arpl
jl
es
inc
enter
sbb
push
testb
pop
lock
and
lods
mov
mov
cwtl
sub
mov
subl
hlt
mov
mov
pop
pop
dec
jno
popl
dec
sti
sbb
insb
in
sarb
push
adc
inc
xorb
xchg
and
push
xor
fs
xor
and
jp
cld
push
dec
iret
int3
push
xor
in
jnp
xlat
and
fadds
inc
dec
arpl
int
mov
adc
push
les
mov
sub
mov
and
mov
jecxz
inc
mov
push
outsl
imul
int
add
lret
sub
repnz
mul
outsl
mov
or
stc
xor
cmp
xchg
into
in
push
mov
bound
cmpsb
pushf
xchg
movsl
sub
ficoml
and
in
and
int
ljmp
push
je
mov
clc
push
out
das
add
lret
insl
std
hlt
cmp
mul
bswap
out
orl
lds
mov
mov
jo
pop
repz
iret
mov
fs
pop
inc
jbe
cltd
xchg
mov
enter
inc
xchg
jo
cld
jecxz
sub
mov
dec
adc
orb
pop
adc
iret
in
add
sbb
add
mov
pop
nop
cmpsl
push
xchg
loopne
push
popa
jmp
xchg
std
pop
add
sbb
xor
mov
xchg
push
aad
sar
rorl
jl
cmp
sbb
lahf
test
es
lahf
pop
sub
jbe
ficoml
iret
push
mov
je
in
int
mov
adc
sbb
cltd
and
push
int3
sub
jno
lret
nop
adc
inc
ficoms
adc
es
mov
jge
adc
jp
cmpsl
cmc
das
jmp
jp
inc
in
jb
push
pop
jo
mov
mov
aaa
es
cmp
sub
or
ja
or
lea
jbe
ljmp
mov
jge
xchg
js
adc
scas
cmp
dec
imul
push
jmp
inc
clc
andl
pop
clc
dec
fdivs
gs
inc
fs
loop
bound
cmp
sbb
push
pop
xchg
sub
adc
shlb
adc
test
add
mov
icebp
mov
push
scas
inc
lret
stos
out
dec
pop
or
jbe
hlt
ss
mov
adc
cmp
icebp
adc
loope
inc
sbbb
mov
cmp
sbb
push
ret
mov
ret
mov
pop
inc
mov
cs
or
add
lret
scas
cli
jo
ror
jno
push
rorl
and
loop
lods
pop
ds
push
inc
sub
xor
or
insl
adc
inc
sub
les
jg
inc
dec
fistpll
lods
inc
inc
dec
adc
mov
adc
cmp
xchg
rclb
jmp
dec
xor
xchg
push
push
out
push
insl
mov
es
pop
mov
jns
test
dec
test
fcmovbe
lret
js
add
adc
inc
inc
insb
icebp
cmp
inc
jnp
cmpsb
mov
cltd
mov
in
inc
int
inc
inc
sbb
add
movsb
pusha
test
aad
mov
pop
or
adc
mov
jp
scas
sbb
inc
jge
push
out
xchg
mov
dec
push
cmp
push
mov
call
jecxz
pop
and
cmp
popa
mov
jb
inc
jl
add
rorb
xchg
enter
subl
jo
pop
jecxz
sub
mov
icebp
scas
push
pop
mov
cmp
js
pop
mov
jg
lahf
lock
add
ss
dec
lds
push
add
ds
pop
fnstenv
push
orb
jns
rorl
adc
xor
addl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jb
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
jmp
das
cmp
test
subl
scas
pop
pop
jb
pop
pop
jb
shl
stos
ljmp
fimull
or
mov
mov
dec
dec
lcall
push
or
lds
mov
mov
mov
xchg
lods
push
in
cmc
cmp
sub
aam
mov
and
jb
push
mov
ljmp
sub
fs
and
jle
and
sbb
das
cmp
mov
push
xchg
mov
pop
loopne
ret
xor
aaa
inc
outsb
ret
fs
fsubs
ss
loope
mov
fldenv
mov
mov
mov
es
sbb
sub
sub
sub
jg
stc
movsb
test
int
cmp
imul
jo
lret
inc
out
addl
sbb
lods
and
xchg
inc
xor
in
cmp
sbb
call
mov
rorb
ss
adc
pop
sbb
mov
test
cltd
mov
cmpsl
lret
ds
adcl
lret
pop
out
add
data16
cmp
inc
add
das
pop
mov
push
pop
xchg
mov
call
scas
sub
decl
scas
or
enter
sti
and
sub
orb
fisubrs
or
loopne,pt
or
jns
xor
fildl
jle
fbstp
cli
cs
mov
out
loope
mov
add
into
hlt
xor
sahf
add
movsb
andb
in
fisttps
loope
xchg
and
and
sbb
sub
cmp
jnp
cmp
aaa
inc
cli
fimull
je
lea
in
insl
loop
push
lods
rorl
cmp
inc
pop
mov
push
inc
sub
mov
pop
das
outsb
jns
xchg
jns
lret
call
xchg
push
mov
sbb
push
xor
iret
lret
push
movsl
aas
cltd
imul
stos
pop
xchg
jno
shl
mov
cmp
jns
or
mov
sar
pop
sub
lods
hlt
or
xor
decl
xchg
mov
dec
pop
dec
push
dec
cltd
dec
xor
push
daa
cmc
mov
inc
jecxz
clc
ret
lds
push
mov
ja
fldcw
xchg
stos
mov
notl
out
cmovs
out
movsb
sub
push
mov
ds
jecxz
sarl
aas
add
xchg
jle
popf
jb
xor
or
arpl
out
dec
in
jne
and
mov
fisubl
mov
cwtl
mov
stos
inc
into
mov
scas
int3
xchg
xor
mov
pop
lock
mov
leave
inc
pop
aad
cli
loopne
gs
lods
hlt
dec
enter
sbb
fiaddl
adc
pop
push
in
inc
lahf
push
and
dec
cmp
lcall
out
les
pusha
pop
in
loope
clc
enter
int3
sub
into
inc
dec
inc
aam
xor
ds
pop
aas
push
aas
movsb
test
aas
es
out
jmp
or
fnstenv
jb
adc
jns
or
loope
jmp
ja
push
pusha
scas
mov
add
pop
push
xchg
pop
aas
jb
ret
push
out
fcomi
ja
pop
xchg
lea
pop
inc
jle
jp
dec
outsl
adcb
add
jmp
jo
pop
xchg
stos
and
je
sbbl
or
divb
jg
lret
imul
add
xchg
ja
stc
aam
dec
cld
push
and
xor
movsl
push
dec
cmpsb
sahf
sbb
ret
adc
pop
outsb
mov
dec
inc
movsb
lea
inc
push
cmpsl
jecxz
xor
cmp
cmp
mov
mov
mov
leave
ds
jb
out
stc
cmc
mov
loop
pushl
pop
mov
clc
aad
clc
sub
mov
orb
mov
loop
rorl
push
je
lods
idivl
push
icebp
or
fcmovnb
inc
dec
sbb
xchg
sahf
jle
movsl
mov
in
cmc
mov
mov
inc
and
lcall
cltd
pop
into
mov
stos
cli
mov
push
dec
out
pop
cmp
cld
movsl
sub
jo
scas
stos
push
and
inc
fldcw
xchg
icebp
sub
out
aam
adc
arpl
sub
lods
ret
dec
loop
jle
cltd
jno,pt
lea
adc
xor
sub
inc
out
lock
add
pop
js
lret
lock
pop
fisubrs
cmp
jg
adc
add
call
dec
in
push
lret
cmpsl
movsl
xchg
hlt
inc
movsl
xchg
shlb
inc
cmp
xchg
xor
cmc
clc
push
pusha
or
cli
loopne
push
or
sbb
inc
je
sbb
fisttpll
pop
adc
gs
mov
mov
or
out
lods
mov
mov
or
sbb
into
aad
sti
insl
inc
repz
xchg
sub
xor
inc
sarl
sbb
sub
orl
fisubrl
test
cwtl
sub
inc
ja
dec
mov
sub
add
loop
ja
sbb
xor
inc
test
outsl
cmpsb
adc
leave
lods
adc
imul
inc
imul
cld
adcb
push
leave
inc
dec
ret
mov
push
pop
mov
or
mov
xchg
aaa
test
loopne
pushf
pop
xchg
jmp
fs
int
push
aad
hlt
mov
adc
in
ret
jle
inc
fwait
dec
insb
sbbl
cmp
stos
push
outsb
adc
or
adc
andl
jp
cmpsl
jbe
pop
lds
insl
cmp
jb
push
lret
lea
or
cltd
cmp
xorb
inc
xchg
lahf
xchg
fnstcw
dec
xor
outsb
adc
fs
push
notb
mov
mov
fistpll
test
pushl
sahf
xchg
addr16
bound
xchg
inc
fcomps
cmp
fldenv
push
incl
popf
pop
add
jp
mov
test
xorb
adc
sub
out
gs
mov
add
inc
cli
sarl
pushf
mov
pop
cmpsb
xor
and
rorb
mov
add
jbe
pushf
lods
jle
pop
xor
nop
push
sub
mov
and
jecxz
pop
scas
lds
je
mov
out
adcl
mov
je
inc
fs
js
xor
mov
sahf
call
adc
mov
lods
adc
adc
sbb
aad
shrl
mov
add
jno
aad
or
js
push
mov
repz
scas
mov
or
mov
int
inc
insb
das
int
iret
and
or
xor
jp
pop
js
mov
adc
pusha
js
andl
dec
sbb
jne
mov
cmc
and
popa
dec
mov
repz
mov
pop
jge
or
or
stos
jl
insb
mov
cmp
sarl
pop
or
pop
mov
mov
inc
fildll
push
xchg
cmp
sbb
pop
cmpsl
mov
addr16
sbb
stos
xorb
pop
fnsave
inc
cltd
inc
or
repnz
fsqrt
push
xchg
xchg
add
xor
rcrb
jmp
pop
jbe
push
push
loop
cmp
idivl
insl
loopne
cli
or
pop
push
adc
scas
and
adc
aad
push
lahf
sbb
ds
mov
out
ja
cmpsl
jae
stos
mov
test
daa
stc
add
jo
push
push
scas
jle
push
into
rorb
or
in
xchg
insb
sub
add
or
sub
fldl
movsb
jp
ljmp
push
into
outsb
pop
pushf
imulb
sub
mov
push
lods
sub
ljmp
xor
stos
fsubrp
and
repz
or
or
mov
into
jns
mov
fstpl
ss
xchg
dec
push
jge
or
cwtl
lahf
xor
jmp
stos
mov
xor
loopne
aad
or
pop
xor
enter
arpl
sbb
out
icebp
adc
push
pusha
cmp
arpl
push
or
sub
sub
jmp
outsb
pusha
jg
loop
stos
lock
je
sub
cmpsb
jle
cmp
int3
sbb
mov
int3
dec
sub
pop
mov
and
cwtl
add
mov
and
lcall
fistpll
std
addr16
cmpsl
xchg
jp
jne
cmpsl
mov
fdivs
cmpsl
into
jnp
add
fdiv
loope
pop
cmp
mov
add
out
jno
sbb
xlat
daa
push
aas
jo
in
adc
mov
clc
paddsw
frstor
shrb
xlat
sbb
jge
ljmp
sbb
gs
push
inc
mov
jno
push
outsb
rolb
ret
popf
mov
pop
or
pusha
and
jge
stc
ss
das
shrb
push
jno
ret
stc
dec
and
jecxz
mov
add
lret
jge
nop
cmp
sahf
mov
arpl
adc
inc
lods
mov
cld
sbb
xchg
and
cwtl
mov
sbb
enter
movsb
pop
mov
dec
imul
mov
mov
push
add
int3
in
pop
les
sbb
sub
adcb
fcomps
mov
loop
loop
dec
xchg
out
push
popa
cmp
outsb
int
push
sub
popf
lret
pop
outsb
loope
push
bound
leave
pop
lret
stos
jecxz
imul
loopne
sub
xchg
outsb
es
loopne
dec
lret
scas
stc
shrl
cld
sbb
mov
mov
mov
jb
lcall
cmpb
jmp
popf
mov
pop
push
and
cld
push
pop
xor
test
in
jg
jb
mov
and
addr16
shufps
aaa
lea
push
hlt
xchg
push
adcb
lcall
call
mov
push
mov
outsl
fistpll
rcr
movsl
test
xchg
jl
and
cmpsl
in
call
cmp
out
fisubrl
mov
addr16
lock
popa
jg
xor
dec
mov
pop
negb
popa
dec
jge
mov
lds
mov
rclb
jnp
sub
in
sub
add
xchg
pop
jns
js
or
mov
pop
lret
pop
in
fimuls
mov
cli
push
ret
mov
mov
jae
inc
xor
mov
sbb
xchg
ficompl
adc
mov
jecxz
lods
inc
pop
mov
cs
push
ja
mov
mov
out
adc
sarl
adc
jp
mov
ss
cmp
ret
sub
imul
cld
or
int3
test
pop
mov
xor
shlb
sub
popa
jnp
adc
adc
dec
enter
repz
push
idivl
xchg
jmp
xchg
loop
or
cli
dec
iret
dec
mov
push
cmpsb
or
mov
mov
push
clc
push
loopne
test
and
fwait
push
bound
push
add
orb
shl
mov
je
mov
sbb
mov
add
sub
push
shlb
call
dec
jno
in
outsl
jo
jecxz
mov
push
mov
test
fistl
stos
pop
mov
push
jno
add
xlat
sbb
sbb
cmp
pop
pop
in
mov
jmp
xor
cmp
fdivrl
sbb
mov
add
inc
popf
dec
frstor
sbb
inc
or
mov
push
sub
mov
jecxz
lock
shlb
or
shl
dec
jecxz
stc
pop
pop
mov
lea
xor
shrb
mov
sub
mov
sarl
adc
inc
adc
mov
shrb
cmp
jns
push
and
test
ljmp
roll
push
cmp
pop
in
cs
test
fiaddl
je
test
aaa
mov
icebp
jnp
xchg
pop
out
jnp
adc
lret
sub
jno
push
jo
dec
out
test
inc
lahf
push
dec
mov
mov
sbb
xchg
pop
lahf
out
xor
xor
sbb
sub
das
sbb
jp
sar
or
or
dec
pop
xor
cwtl
jp
test
adcb
popf
addr16
add
xor
out
mov
je
js
pop
push
mov
xchg
xor
hlt
es
rcrb
sahf
in
dec
daa
cld
xchg
outsb
and
push
mov
imul
or
bound
cmc
jmp
pop
fcoml
punpcklwd
stos
loopne
jl
mov
cli
out
inc
inc
insb
cs
insb
lahf
cmc
dec
mov
dec
movsl
xor
leave
addr16
loop
aam
popa
popa
lock
push
mov
mov
push
out
pop
pop
movsl
adcl
add
and
push
test
dec
ficoms
mov
xor
cmp
popf
insb
jne
lods
imul
cmp
hlt
mov
mov
stos
xor
stc
adc
hlt
mov
mov
sub
cmp
sete
pop
mov
sbb
popf
xor
lcall
pop
push
and
bound
cld
push
stc
sub
stc
adc
stos
xchg
movsb
in
data16
sbb
inc
jl
push
cmpsb
out
shlb
popa
adc
add
jb
mov
sbb
cmpl
sbb
js
add
cmp
fdivrs
ficomps
pop
cmovb
aam
mov
xor
mov
cmp
ljmp
cli
inc
in
pop
pop
mov
aad
inc
call
pop
push
das
icebp
pop
or
mov
fisttpl
cmp
mov
hlt
out
scas
lods
ljmp
sbb
lock
mov
mov
push
xchg
sti
xchg
push
fsubl
jp
inc
rclb
and
or
lahf
push
pop
inc
push
push
repz
and
jb
out
mov
lcall
fnstsw
addb
mov
in
in
incb
lahf
ret
in
data16
dec
xor
jbe
push
insl
aad
inc
int3
adc
fdivrl
mov
push
and
jl
sbb
fs
movsb
inc
or
push
aaa
or
jmp
daa
lret
mov
cmpl
cmp
mov
mov
push
mov
dec
sub
dec
iret
in
sub
and
mov
icebp
aad
adc
lock
or
bound
push
repz
call
int
out
jge,pn
adc
in
push
sbb
xor
fists
aaa
jmp
and
jl
hlt
mov
xor
add
fimull
inc
inc
stos
sbb
mov
dec
loop
adc
push
jge
in
leavew
inc
dec
cli
inc
sub
jbe
cmpsl
mov
mov
imul
aad
insl
notb
lea
mov
sub
cs
int
sub
and
push
mov
push
and
dec
ja
dec
xchg
pop
pop
push
inc
and
sbb
inc
push
cmp
jl
xor
arpl
fisubrl
filds
push
stc
add
pop
sbb
pop
fstpt
inc
outsl
add
mov
js
adc
ret
ficoml
cmp
ljmp
data16
xchg
fnstcw
test
lahf
jg
or
mov
jmp
imul
addl
nop
jnp
dec
out
push
or
imul
rorb
subl
negb
je
add
inc
mov
loop
push
andl
ljmp
mov
pop
cwtl
into
je
int
xor
aad
push
sub
adc
mov
xlat
xor
mov
pop
std
sub
pop
in
sbb
test
sbb
push
jp
xor
out
in
xchg
lret
mov
cmp
stos
test
rol
jb
pop
js
push
ljmp
inc
int
jne
cmp
lea
lock
pop
outsl
push
push
rolb
jo
lods
stos
in
daa
jmp
inc
mov
jns
adcl
pop
test
xlat
outsl
outsl
test
jae
pop
sub
aad
arpl
imul
add
jne
fsubs
fstpt
adc
push
ss
inc
or
push
mov
sbb
pop
jl
scas
mov
pop
cmpl
fcmovne
in
in
lods
sbb
ret
int3
and
dec
mov
cmp
pop
mov
mov
inc
lcall
subl
in
loope
or
cmp
in
sti
cvtps2pd
imul
fisttpll
mul
sbb
sbb
jge
dec
xchg
jns
mov
enter
jp
bound
push
scas
in
cmpsb
sub
cmp
jle
bound
and
insl
sbbb
std
sub
mull
adc
push
rcll
mov
sbb
cltd
add
in
xchg
movl
xchg
leave
add
push
xchg
lret
imul
mov
or
ficoml
cmp
and
cli
adc
sti
cmp
mov
icebp
sub
addr16
lcall
push
xchg
lods
cwtl
add
dec
sub
xorb
inc
dec
cmp
arpl
adcb
and
ret
shrl
dec
repz
push
push
xchg
loope
cld
aaa
cmp
imul
mov
dec
push
cmp
mov
pop
xorb
stos
clc
cmp
jmp
mov
cmp
xlat
mov
sub
decl
fistpll
and
cmp
push
stc
xchg
dec
adc
ljmp
adc
xlat
and
test
add
mov
shrl
shrl
ret
lods
lds
add
dec
xchg
ret
stos
lods
xlat
rcrb
push
shll
movsb
rcr
ss
aas
es
xchg
aaa
mov
in
add
int3
shll
and
test
data16
push
lahf
cmp
std
movsb
adc
cmp
jge
push
push
add
dec
sub
add
add
jl
loope
mov
nop
mov
push
and
or
sub
and
jae
stc
ss
ss
scas
xchg
xor
push
bound
lret
lods
aam
lahf
in
and
or
push
pusha
add
pop
insb
clc
xor
movsb
int
insl
lahf
dec
shll
lods
lods
popl
mov
push
or
xchg
popa
in
or
test
mov
jno
sti
lea
xchg
push
hlt
leave
pop
movsb
popf
sbb
call
push
stos
sub
lret
push
xchg
lret
insb
in
andb
adcl
cwtl
mov
adc
sbb
aas
adc
pop
cld
das
cmp
loop
gs
shll
fildll
or
fwait
in
popa
lcall
pop
jmp
outsl
dec
sbb
pop
inc
xor
dec
xor
pop
adc
cmp
cmp
dec
mov
dec
add
ret
lret
test
mov
out
inc
adc
outsb
in
in
hlt
inc
xchg
adc
mov
mov
daa
lret
nop
xchg
fwait
lahf
inc
fsubrs
pop
es
mov
and
inc
mov
cmp
fisubrl
mov
push
pop
nopl
cmpsb
fwait
mov
out
mov
in
xchg
dec
lock
outsb
inc
mov
adc
pop
scas
lahf
push
jns
cmpsl
inc
dec
fistpll
mov
mov
cmp
push
mov
push
or
cli
decb
lea
jecxz
cwtl
add
adc
dec
mov
adc
inc
loope
ss
fadd
subl
js
push
mov
jge
mov
inc
call
cmp
add
push
daa
lahf
imul
dec
lahf
sub
das
jnp
bound
mov
lds
and
in
in
shll
and
cmp
cmp
add
xchg
out
xor
inc
repnz
mov
push
mov
xchg
inc
je
add
cmpsl
mov
shlb
in
pop
push
or
xchg
and
adc
mov
test
cmp
sub
cmp
lods
mov
sub
inc
lods
lds
xor
add
mov
jbe
loope
dec
cmp
loop
and
xchg
sahf
outsb
cmp
aaa
cmp
jp
lahf
xchg
xchg
jno
mov
enter
push
in
and
test
jg
pop
cs
and
mov
je
stos
fmull
test
orl
sbb
add
sub
push
in
test
pushf
nop
jns
pop
inc
jbe
pop
push
pop
push
movsb
and
rcrl
into
rcrl
pusha
jle
test
inc
sbb
jp
and
mov
adc
ds
fildll
test
pushf
mov
mov
fidivrs
push
cmc
lods
ret
arpl
popf
insb
das
dec
aaa
hlt
xor
and
pop
pop
jmp
loop
dec
leave
mov
pop
ds
adc
jmp
jle
add
add
cmp
mov
sub
xchg
and
mov
adc
xchg
fidivl
test
shlb
fcmovu
in
ja
push
or
faddl
es
pop
mov
nop
and
cld
rcrl
mov
sbb
std
pop
pop
add
inc
sarb
lret
js
mov
mov
fs
dec
rorl
inc
push
pop
and
out
jp
stc
add
mov
daa
repz
mov
lret
call
and
push
inc
movsb
test
enter
inc
push
push
lahf
push
lock
push
gs
nop
and
ret
sahf
fs
mov
outsl
dec
cmp
scas
add
inc
lret
jo
and
dec
mull
xchg
xchg
dec
out
mov
sbb
lret
mov
or
jmp
cmp
jns
mov
cmp
stos
mov
pop
enter
xor
in
outsl
add
push
xchg
leave
mov
fisubs
adc
sub
in
cld
jmp
jg
inc
data16
fs
shll
ret
jecxz
pop
push
jecxz
orb
addb
xor
movsb
ljmp
sub
test
sbb
jmp
bnd
aas
ret
test
int
call
dec
sbb
stos
sahf
jge
repz
push
clc
cmpsb
stos
sti
hlt
mov
inc
xor
js
pop
and
dec
adc
inc
lea
daa
out
dec
loop
push
movsb
xchg
dec
lock
sbb
je
or
push
mulb
das
shr
leave
or
lea
test
scas
insb
pop
and
sub
int
lods
je
test
mov
in
stos
xor
jg
cltd
cltd
sub
les
ljmp
inc
xlat
lea
xchg
and
push
and
cmp
cmp
outsb
mov
scas
idivl
or
mov
jns
mov
mov
cmpsb
pop
lds
mov
bound
xor
ds
inc
clc
sub
push
mov
mov
fimuls
lock
push
jl
hlt
jo
lret
lods
rcrb
inc
dec
stc
mov
pop
lock
lods
sti
call
lahf
and
scas
pop
clc
adc
jmp
cmpsl
add
adc
jne
or
popf
imul
inc
sub
sub
cmp
xchg
roll
movsb
lock
sub
push
pusha
jge
cmp
pop
inc
fldcw
or
or
jbe
jp
rcl
xchg
test
xorl
jbe
adc
cmp
test
out
mov
lds
push
das
test
lret
inc
cwtl
call
lcall
lret
rorb
test
adc
dec
imul
sbb
arpl
iret
les
xor
add
outsb
cmpsl
pop
push
inc
out
xor
je
sti
cs
clc
and
loope
jne
xor
sbb
test
dec
mov
in
adc
lds
je
xorb
lcall
and
rcl
mov
xor
push
inc
add
test
add
jmp
mov
mov
pop
pop
mov
test
leave
xor
sub
imulb
dec
adc
es
inc
push
mov
aas
push
sahf
outsb
lods
mov
inc
pushf
adc
pop
test
and
roll
out
pop
imul
out
xchg
xor
rcrb
popf
mov
scas
pop
cmc
xor
imul
icebp
inc
loop
push
lahf
ds
loopne
add
cmp
jge
fsubs
pop
or
jbe
in
xchg
or
or
les
xor
pop
inc
loopne
cmp
ffree
mov
icebp
cmp
jp
ja
xlat
add
cltd
dec
jle
or
mov
jnp
lds
les
call
push
divl
ds
insl
mov
mov
and
push
inc
mov
mov
out
testb
mov
sbb
sarb
mov
sbb
cmc
push
cmp
jecxz
nop
sub
mov
rol
fstps
inc
add
scas
rcll
cwtl
sub
sarb
out
out
push
lods
mov
jo,pt
cld
test
mov
incl
movsb
xor
pop
or
fisubl
jbe
hlt
les
jecxz
cmp
mov
jl
pop
movb
rcll
dec
jb
rcrl
push
pop
sub
cld
cmp
dec
lcall
imul
mov
jl
pop
or
inc
mov
jae
xor
xchg
push
push
inc
xchg
shrl
out
pushf
in
fnsave
pop
sbb
xor
frstor
add
cmpsb
adc
cld
fdivs
es
out
movsb
loope
lds
ds
sub
pop
adc
inc
mov
add
xor
sub
jno
jmp
mov
ja
xor
lea
mov
jb
jl
test
ss
push
movl
mov
popa
mov
stc
testb
mov
int
pop
xlat
jg
mov
mov
aaa
cmpsb
adc
xchg
xchg
clc
push
repnz
cmc
mov
mov
jp
push
cmp
ficomps
pop
xor
fdivrs
je
jno
popl
mov
sbb
push
imul
sbb
leave
inc
xor
pop
lret
jge
dec
xor
jl
lahf
cli
xchg
in
testb
sbb
std
int3
jbe
jno
xchg
mov
push
addr16
rorl
mov
stos
sub
mov
ds
inc
xor
xchg
or
mov
out
xlat
mov
aad
sub
cwtl
mov
adc
inc
adc
adc
sub
push
jbe
dec
and
xchg
repnz
and
popa
sahf
dec
inc
pop
add
mov
lret
sbb
sbb
ret
adc
xorb
dec
xchg
mov
xor
outsl
jge
cmp
in
pop
data16
dec
loop
lcall
xchg
sbb
sbb
mov
pop
xor
fldcw
sub
imul
dec
jne
mov
or
je
orl
cltd
jno
aaa
sub
and
xor
sbb
andb
es
xor
iret
addr16
jge
test
cmp
inc
lcall
jge
ret
cmp
mov
cwtl
push
push
ja
test
sub
or
iret
add
fdivs
adc
cld
inc
jno
mov
mul
js
sbb
push
adc
push
or
in
out
push
rclb
xlat
pop
jl
mov
pop
inc
jb
pop
sbb
std
and
sbb
lret
loope
or
jg
mov
mov
es
test
shlb
jb
fldt
jo
sub
xor
mov
in
mov
repz
lret
xor
adc
scas
frstor
pop
adc
gs
std
push
iret
gs
stc
aas
xor
sti
cmp
sub
sahf
movsb
into
xor
xchg
repnz
inc
clc
and
inc
inc
cmpl
insb
or
sub
sbb
lahf
jae
ret
insl
stc
mul
mov
cmpsb
mov
iret
jl
cmp
sahf
mov
pop
cli
and
sub
pusha
dec
loop
push
sub
and
pop
xchg
addr16
in
mov
test
adc
cld
aad
add
jmp
cmp
push
add
addr16
adc
mov
mov
cmp
les
adc
push
pop
fwait
mov
sti
bound
push
scas
sti
push
nop
fwait
cltd
enter
in
hlt
push
mov
inc
in
dec
sbb
repz
sti
cmp
cmpsl
and
lret
in
inc
mov
rcr
push
imul
mov
mov
cmp
sahf
fs
mov
ret
jae
int
mov
jnp
xor
adc
xor
sbb
lds
jp
dec
mov
add
mov
xor
push
into
es
cmp
inc
repnz
mov
ljmp
lock
inc
addr16
jb
mov
popf
mov
in
adc
mov
lcall
pop
pusha
orb
rol
iret
xor
int3
pop
pop
sub
push
popa
xor
sahf
xchg
and
leave
pusha
mov
or
sahf
test
mov
and
stos
sub
add
xor
sbb
rolb
movsb
adc
movsb
popf
rcll
imul
loope
mov
enter
les
enter
les
jle
ret
sub
fs
jno
jo
jle
stos
sti
ss
inc
cld
mov
jb
cmp
sub
mov
and
mov
aas
aad
aas
pusha
outsb
xchg
sub
pop
aaa
or
adc
xchg
mov
rolb
dec
push
push
cmp
pop
or
shl
es
nop
or
lds
jle
out
pop
cmp
pop
das
mov
cmc
andb
insb
rclb
outsb
cwtl
add
push
jg
add
xchg
pop
sub
mov
jg
and
xchg
loopne
add
out
mov
mov
inc
roll
jo
mov
out
mov
imul
pop
nopl
sub
add
inc
xchg
jae
xchg
loop
fmull
inc
bound
pop
or
or
pop
push
dec
mov
je
push
sbb
push
push
js
mov
xchg
cwtl
fdiv
daa
imul
cmp
jmp
orl
xor
out
xor
fidivrs
fnstenv
sub
js
loope
jmp
jmp
or
cwtl
negl
cmp
movsl
out
andl
cmp
cmpsb
shlb
cmpsl
bound
sbb
out
add
cwtl
sub
add
push
lret
lahf
test
xor
aaa
in
icebp
inc
aas
xchg
mov
cli
mov
or
and
into
fsubl
add
pop
pop
mov
dec
mov
jne
lcall
fnstcw
push
pushf
rcr
insl
fs
sub
pop
leave
ret
push
mov
push
or
movl
mov
not
movsbl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
mov
sbb
sub
mov
xor
movl
cmp
movl
jne
xor
mov
orl
push
mov
add
mov
mov
mov
xor
add
jmp
mov
lret
mov
mov
test
jb
adc
jb
add
push
sar
aaa
sub
jp
add
sub
push
mov
in
lds
pop
mov
cmp
dec
xchg
fmuls
andl
mov
loop
adcb
xchg
std
sub
sub
out
add
or
adc
jno
fdivl
jecxz
ds
cmp
into
ret
sti
rcl
or
icebp
rorl
push
cld
test
mov
inc
outsb
addr16
cwtl
pop
push
push
and
cmpsb
xor
xor
xchg
mov
loope
adc
in
sub
pop
jle
hlt
cmp
sbb
testb
test
cmp
jle
sti
fwait
out
xchg
and
dec
fcomip
mov
inc
mov
cmp
movsl
in
es
pop
xchg
mov
insb
jb
jae
std
cmp
ds
ss
loop
inc
mov
shrl
ret
jg
test
xlat
dec
jl
pop
mov
mov
cmpsl
cmp
mov
sub
iret
rcl
lock
outsl
cmp
mov
std
dec
sub
movsl
xchg
add
lret
jno
add
adc
push
popf
insb
rcrl
sub
sub
sub
push
mov
and
fucomip
icebp
mov
adc
shrb
pushf
sbb
test
or
mov
lea
cmp
stos
dec
out
inc
orb
arpl
mov
stos
adcl
in
lret
mov
shrb
cwtl
cld
dec
jbe
rcr
xor
pop
adc
mov
mov
lods
xor
xchg
sbb
insl
pop
repnz
ret
fstl
pminub
loopne
or
and
or
gs
pop
or
jnp
push
jno
jbe
mov
scas
jno
cmp
mov
scas
or
adc
cmp
inc
addb
ss
aas
or
ss
arpl
dec
jp
outsb
adc
rclb
mov
icebp
mov
pop
out
movsb
test
lcall
shlb
jp
in
inc
daa
push
repnz
mov
addr16
xor
pushf
pop
out
sub
mov
in
push
cltd
jbe
xchg
cmp
decb
fistpll
mov
test
xchg
sbb
cmc
cmc
shl
scas
pop
jge
or
lods
add
icebp
test
xchg
sub
ljmp
sbb
jmp
xchg
cltd
cmc
test
push
mov
fcoms
push
xor
mov
std
xorb
bound
sub
popa
pop
loopne
mov
ret
inc
xchg
jo
dec
xchg
jno
mov
int3
ret
sbb
leave
int
nop
pusha
fstl
loope
sub
push
and
mov
lret
mov
push
mov
mov
or
mov
das
jbe
icebp
inc
pop
divl
push
xchg
shl
push
mov
aad
sti
push
loopne
rorl
sbb
jge
mov
xchg
and
shlb
jbe
cltd
pop
cli
pushl
jmp
repz
sbb
pop
shrb
vmwrite
adc
push
push
in
mov
lods
xor
repz
test
sub
ja
cmp
fists
repz
icebp
jae
stc
add
or
jp
fcompl
mov
inc
jle
xchg
add
xor
cld
les
push
sub
data16
cmp
nop
mov
adc
mov
push
lods
sahf
movsb
mov
and
mov
daa
or
mov
enter
pusha
popa
je
popa
jbe
xchg
xchg
push
push
fs
ret
and
sbbl
fcomps
cli
fstp
and
aam
testl
jno
in
inc
in
fcmovu
xchg
arpl
in
iret
sahf
fmul
mov
movsb
int
out
and
jno
sub
xor
mov
xchg
push
sar
cmp
adc
js
or
add
or
jno
push
fdiv
movsl
pop
mov
fstl
lock
xchg
mov
leave
pop
js
xchg
dec
xchg
push
aaa
xor
jmp
lret
jae
xchg
add
adc
push
mov
mov
jl
in
cltd
daa
xchg
dec
push
mov
dec
stos
add
popf
in
sarb
fsts
mov
fsubs
andl
inc
in
insl
lcall
or
rcrl
fmuls
fistps
cmp
cmp
and
mov
push
xchg
clc
sbb
cmpsb
std
mov
sti
nop
mov
cwtl
jmp
neg
mov
mov
dec
pushf
xchg
lock
call
daa
test
jne
pop
fcmove
cmp
fnstenv
xchg
leave
and
cmp
repnz
sub
add
ret
cmpsb
cmpsl
aam
daa
stc
mulb
test
sbb
jb
inc
jno
out
pop
roll
addr16
adc
aad
syscall
ret
ds
mov
and
lret
mov
jo
fwait
jle
and
daa
fisubrl
cmp
xchg
adc
popa
jge
mov
repnz
shlb
jb
cmp
inc
test
cmp
pop
jne
inc
pop
dec
jl
mov
mov
mov
inc
mov
xchg
xor
in
dec
imul
and
jo
sbb
rorl
mov
inc
pop
push
notl
rep
rcll
fwait
dec
jo
lret
rcll
setp
dec
mov
loop
adc
xchg
inc
mov
jecxz
cmp
arpl
xor
pop
sbb
mov
lret
aas
pushf
pushf
test
insb
xor
pop
clc
xchg
lea
cld
sub
aas
pop
add
loope
sbb
push
dec
aad
sub
shlb
lods
aaa
xor
out
inc
mov
or
xor
outsl
mov
ljmp
inc
stos
mov
or
in
dec
ljmp
pop
jo
xchg
cmp
mov
div
inc
mov
lcall
push
rclb
or
jmp
mov
cwtl
outsb
mov
mov
outsl
dec
pop
push
dec
sub
popa
mov
mov
jmp
and
ss
adc
sti
cmpsl
adc
loopne
xor
cmp
mov
lret
sub
imul
loop
lock
ljmp
outsl
shll
mov
int3
adc
sbb
push
icebp
sbb
inc
inc
push
jge
je
cmp
or
ret
mov
push
rcl
xor
addr16
push
jecxz
mov
cmp
icebp
aaa
sbb
in
adc
and
lret
gs
lods
loope
dec
int
daa
inc
dec
cltd
push
lea
xchg
fsubl
ljmp
stos
int
out
mov
mov
jg
push
xor
push
rorl
pop
mov
sbb
shlb
rcll
mov
fsubrl
test
xor
sub
lret
into
cmp
data16
rorl
push
jmp
cmp
cwtl
out
shll
fstl
mov
jns
push
outsb
or
dec
dec
dec
pop
fcmovb
nop
sbb
ja
lock
hlt
mov
jae
pop
mov
shlb
test
cli
inc
mov
xor
jo
xchg
cmp
imul
jne
add
nop
jmp
and
dec
das
pop
lea
pushf
mull
fsubl
fwait
inc
fidivrs
int
mov
mull
sbb
popf
inc
jns
jle
xor
shl
xor
pop
mov
jbe
mov
inc
out
nop
xchg
lcall
lcall
notb
jo
mov
cmpsb
xchg
xorb
int3
xor
lret
scas
leave
and
ja
sbb
xor
sbb
add
pop
push
test
dec
fadds
jnp
mov
clc
fnstcw
lock
lret
xchg
mov
mov
repz
sti
pop
ljmp
out
mov
adc
mov
dec
jno
fldcw
pop
lock
or
addb
lahf
ror
je
push
push
or
cmp
mov
xor
xchg
insb
mov
repnz
mov
lahf
sbb
adc
lret
sti
add
sti
jns
and
insb
lret
jnp
push
mov
aaa
hlt
ss
dec
mov
pop
pop
pop
xor
addl
in
shrl
inc
scas
mov
add
xor
adc
cmpsb
icebp
and
inc
dec
inc
ds
rcrb
insl
inc
outsl
xchg
xor
xchg
push
lods
adc
xor
jle
pop
insl
jmp
mov
sti
les
in
sub
dec
hlt
adc
add
shll
push
das
data16
pop
jo
pushf
add
sbb
push
xorb
jmp
xchg
mov
add
lods
in
mov
jle
push
push
lock
inc
test
fistpll
xchg
loopne
rorl
mov
adc
dec
inc
js
cmp
in
push
pop
push
fdivr
mov
ljmp
cs
mov
jmp
or
lods
sahf
push
aaa
sbb
push
ja
pushf
mov
lds
fs
outsb
ret
adc
lahf
in
test
es
lret
loope
dec
add
jno
andb
jmp
mov
shlb
clc
mov
sbb
add
int3
int
or
fidivl
cld
pop
shll
stos
xor
jb
test
imul
sub
popf
push
pop
imul
pop
dec
add
inc
jp
mov
pop
mov
xlat
lret
or
sbb
adc
xor
push
insb
mov
pop
rcr
popa
aas
mov
lds
aaa
sahf
dec
jmp
je
mov
insl
aad
iret
sbb
movsb
mov
mov
sub
and
jmp
mov
in
cmp
sbb
sub
fldl
int3
jle
xlat
xchg
cmpb
or
les
fcmovnu
fldl
dec
push
lds
mov
cmc
xchg
pop
add
xchg
jae
cltd
mov
xor
mov
pop
adc
cmp
call
cmp
cmp
jno
aad
sub
je
and
mov
aaa
mov
mov
scas
jb
adc
pop
ss
lret
sub
in
sbb
aaa
fldl
sub
pushf
xor
pop
jecxz
add
sub
lahf
mov
insl
adc
das
ret
dec
jge
inc
movd
jge
cltd
jge
push
test
fnstenv
int
ljmp
pop
test
inc
xchg
stc
incl
scas
fwait
rsqrtps
and
dec
mov
mov
or
mov
addr16
dec
int3
or
xor
insb
push
jl
mov
xchg
add
and
das
sbb
cmc
inc
mov
cld
dec
std
inc
sub
insl
jl
jnp
or
mov
mov
and
pop
pushf
es
test
mov
push
stos
bnd
dec
pop
outsl
mov
or
int3
hlt
call
pop
stos
adc
insb
in
js
sti
out
enter
add
sub
xor
dec
mov
cltd
sbb
cmp
gs
lahf
icebp
cmp
adc
mov
leave
sbb
je
ss
or
inc
or
xchg
scas
xor
out
xchg
lods
movsb
xchg
out
pop
push
cmp
sub
mov
add
out
sub
sti
inc
aad
pop
push
mov
xchg
mov
jg
inc
xchg
js
cmpsb
addr16
outsl
les
xchg
push
xchg
imul
adc
cmp
cmp
aad
nop
dec
mov
sbb
adc
cmp
mov
lea
cmp
in
or
in
add
add
int
mov
cli
mov
insb
adc
adc
fidivl
insl
or
jae
jge
cltd
outsl
in
dec
jo
out
jmp
mov
mov
cwtl
or
cld
out
or
xchg
pop
shll
dec
bound
cld
sbb
dec
ja
jb
pop
das
subl
test
shlb
enter
or
shlb
setp
shll
sub
aaa
cmp
xor
out
sbb
sarb
or
pop
imul
sub
movsb
mov
in
dec
mov
sub
cs
sbb
out
int
shlb
pop
mov
xor
das
xor
or
rclb
add
faddl
loopne
mov
xlat
lods
and
pop
lahf
call
or
test
fisubrs
jle
sbb
leave
xchg
push
jae
mov
inc
push
add
cmp
sbb
dec
testl
cmp
dec
sub
add
lahf
shll
jbe
pop
xchg
icebp
sti
inc
and
test
push
fsubs
mov
or
inc
push
pop
push
shlb
sbb
pusha
jp
lea
test
cli
xchg
push
mov
lret
in
in
mov
or
xor
adc
aad
or
js
outsl
js
inc
mov
orl
outsb
sub
inc
aas
dec
insl
aam
xor
mov
out
mov
leave
pop
sub
dec
xchg
dec
pop
sub
repnz
arpl
inc
inc
mov
xor
xchg
mov
xchg
cmpl
sub
hlt
aaa
xchg
mov
xor
xor
rol
xor
in
dec
mov
aas
cli
rorb
add
lret
loope
inc
arpl
das
and
mull
cmc
outsl
ja
cmpsl
dec
mov
lret
pop
sbb
adc
lret
out
rcl
xchg
shrb
movsl
ret
ljmp
mov
sbb
xor
push
sbb
sub
dec
adc
loopne
das
adc
out
mov
pop
inc
push
dec
pushf
pop
adcb
jp
bound
dec
pusha
cltd
loop
sbb
ss
je
pop
dec
push
pop
imul
rorl
and
mov
jl
aam
mov
cltd
mov
insb
sbb
and
lcall
les
popf
sub
ret
xchg
outsl
jnp
add
cmp
mov
xchg
cmp
imul
push
cli
mov
cs
sub
and
sub
jmp
loope
or
xchg
cmpsl
jnp
lret
cmp
mov
data16
mov
xchg
cmp
ret
pop
mov
xor
cmpsb
xor
es
push
std
cltd
hlt
int
xor
mov
sub
mov
rcr
push
pop
mov
ret
call
hlt
dec
test
cltd
inc
subb
xchg
pop
std
mov
mov
and
leave
dec
aam
test
and
and
pop
pop
sbb
ljmp
sahf
popa
or
in
cmp
stos
jno
daa
scas
pop
sarb
sbb
inc
out
out
mov
mov
loop,pt
mov
cmc
cmp
pop
sub
dec
add
xchg
pop
stos
daa
pop
data16
bound
cwtl
sbb
mov
xchg
cmc
cmpsl
jo
jbe
inc
or
js
aaa
mov
sbb
inc
mov
ds
and
sub
scas
add
into
adc
and
dec
or
add
mov
dec
adc
sar
in
sbb
lock
std
test
push
jecxz
and
and
call
cmp
insl
inc
mov
aas
das
mov
inc
in
out
push
repnz
mov
outsb
pop
stos
stc
mov
lods
mov
bound
inc
sbb
imul
test
lods
idivb
pop
jmp
and
inc
das
andl
movb
push
es
sbb
cmp
stc
push
lds
in
in
adc
mov
jp
sub
pop
pushf
ljmp
fsts
xor
imul
jmp
xchg
pop
inc
ss
cs
and
mov
movsl
inc
ret
test
fs
adc
ret
jmp
mov
add
mov
sub
stc
cmp
sub
add
lods
inc
sbb
ljmp
and
inc
jae
iret
int3
push
cmpsl
push
ficoml
roll
push
jle
and
push
bound
jae
data16
fdivrs
out
inc
pop
ds
ret
movsb
xor
add
shl
mov
sub
xchg
ret
dec
dec
push
clc
cmc
popf
and
stos
jae
mov
adc
dec
or
mov
jae
xchg
rcrb
hlt
fnstenv
fmull
pop
mov
fbstp
sub
sub
sti
push
dec
imul
movq
push
mov
mov
shrb
cwtl
cmpsb
sub
movb
xchg
rolb
enter
pop
jnp
inc
xor
xchg
mov
jne
sub
fsubrl
dec
sbb
push
or
imul
inc
xchg
in
add
js
jl,pn
mov
mov
aas
push
in
push
xchg
jne
xor
cmp
pop
and
sbb
pusha
xchg
jne
push
ds
add
mov
fstl
test
fstl
int3
jne
mov
cltd
lds
cmp
roll
inc
out
inc
add
imul
nop
cmc
insl
cmp
jns,pt
scas
shrb
repnz
not
movsl
loop
and
xorb
data16
iret
push
jle
movsw
mov
icebp
and
into
inc
sub
and
add
adc
dec
in
aaa
pop
imul
ret
rolb
inc
ret
mov
pop
cmp
jo
shlb
inc
out
pop
adc
inc
mov
iret
push
mov
dec
fsubs
mov
cwtl
sub
clc
comiss
jmp
lods
jp
rdtsc
in
cmp
xor
xchg
shlb
pop
loop
xor
scas
gs
ror
icebp
test
fwait
pusha
cld
mov
in
xchg
jmp
adc
outsl
mov
sub
iret
add
pop
in
in
cmp
cmp
adc
jno
pop
std
in
xchg
rclb
cli
int
insb
lahf
in
xchg
repnz
test
mov
adc
inc
cs
cwtl
mov
mov
mov
iret
mov
mov
pop
and
nop
push
ficomps
aad
push
add
add
stos
je
shrb
lcall
sbb
or
push
popa
stos
in
sub
repnz
stos
mov
dec
dec
mov
cmp
lcall
pop
outsl
sti
in
scas
mov
jle
jl
jne
rorl
jne
rolb
xchg
jge
insl
ffreep
fs
sub
scas
add
mov
mov
xchg
stos
aam
pop
nop
or
sbb
popa
add
xchg
xchg
in
cmp
decb
xchg
jns
sbbl
push
addr16
sbb
cltd
dec
das
lock
jmp
jne
hlt
and
fcmovnu
cwtl
test
lcall
loop
pop
xor
add
add
mov
jo
sub
out
movsl
xchg
jp
jb
pop
dec
inc
sbb
stos
xchg
jno
cmc
call
movsb
jo
mov
inc
mov
fcomi
cmpsl
test
stos
mov
fcompl
fimuls
fidivs
mov
das
dec
mov
mov
ja
jae
push
dec
dec
cmpl
jo
inc
lret
sub
push
jmp
scas
sbb
mov
adc
or
jae
dec
sbb
xchg
cmp
cmc
popa
or
xor
inc
xor
negb
pop
pop
fildl
dec
push
fiaddl
in
mov
shll
imul
pusha
addr16
mov
add
ret
mov
jno
inc
pop
dec
inc
cmp
push
out
xor
loope
mov
xor
or
dec
add
out
mov
jns
leave
in
sti
sbb
and
repz
and
iret
leave
pop
insb
sub
xor
or
imul
push
and
sub
xchg
int
out
inc
int
leave
cmpsb
jecxz
add
aas
or
movsl
mov
repz
mov
inc
adc
xor
and
add
adc
sti
fs
cmp
xchg
add
or
ja
pop
lock
mov
popf
cli
xor
adcl
lahf
and
test
outsb
xor
pushf
cmp
mov
inc
outsb
add
mov
popf
rcll
add
and
test
shr
inc
sbb
sbb
jl
daa
inc
arpl
jo
outsl
cmp
xorl
mov
clc
mov
pop
sti
mov
and
je
cmp
jecxz
jl
clc
bound
rorb
loopne
push
cmpsl
sbb
cmp
jnp
lcall
xchg
xchg
sub
ljmp
sub
and
xor
dec
daa
inc
popa
je
fnop
loopne
lret
cmp
mov
jg
cmp
xchg
icebp
hlt
decb
mul
mov
xchg
xchg
test
addr16
jno
negl
dec
ret
outsb
jg
shlb
idivb
mov
or
lods
aad
push
sbb
mov
jne
xchg
push
les
adc
icebp
xchg
pusha
lods
stos
cmp
cld
sbb
popf
push
sub
fnstsw
sub
bswap
xor
xchg
test
mov
mov
dec
outsl
cmpl
push
dec
mov
push
pushf
sub
stc
mov
adc
mov
xor
adc
into
insb
addr16
xchg
subb
pop
xlat
sub
jns
div
cmp
mov
mov
test
pop
pop
hlt
dec
adc
mov
icebp
insb
movl
mov
daa
iret
add
inc
nop
lahf
in
add
lret
dec
stos
push
sub
pop
mov
pop
arpl
icebp
and
and
imul
sbb
stc
sbb
popw
push
ds
cs
in
js
xchg
sub
push
inc
scas
gs
xchg
pop
data16
xor
outsl
sub
repnz
stc
pop
loop
add
sbb
cmp
insb
xor
addl
xchg
leave
adc
aas
outsl
mov
sbb
jg
push
add
jnp
in
xorl
and
mov
outsb
xchg
jge
aas
lods
xchg
sub
push
cmp
xchg
and
inc
mov
adc
pop
xor
or
sub
jl
fisubrl
test
pop
xchg
add
clc
push
or
sbb
xchg
adc
mov
pop
sub
pop
inc
push
repnz
jge
sbb
sti
test
sbb
sbb
jg
push
cli
push
stc
pop
ds
sbb
mov
ds
je
or
cs
cld
outsb
or
sbb
lock
movsl
stos
mov
push
fidivrl
insl
sub
das
sbb
and
sbb
and
cmp
mov
lock
xor
sub
pop
mov
in
and
gs
in
push
pop
sub
jne
mov
pop
sbb
fs
xchg
ljmp
push
mov
in
test
sbb
stos
stc
jl
push
mov
adc
stos
sahf
adc
arpl
jno
jne
sbb
push
xor
adc
mov
and
ret
in
jno
xchg
adc
nop
adc
xchg
inc
idivl
popa
and
xor
sbb
nop
rcr
inc
adc
int
dec
push
dec
outsb
repnz
xor
add
xchg
add
js
repz
push
mov
ja
call
outsl
jns
sahf
lea
filds
jge
adc
xor
repnz
aas
inc
mov
outsl
rcrb
outsl
sti
cli
mov
adc
pop
push
je
inc
out
or
and
filds
movsl
mov
pop
call
cli
imul
mov
cmp
repnz
rcl
adc
ror
movsb
shll
jne
ljmp
imul
sahf
andl
pop
sbb
fnop
cwtl
mov
inc
mov
fstps
in
aas
sbb
xchg
xchg
sub
xor
sahf
or
push
dec
dec
fsts
mov
mov
xor
in
jae
inc
xchg
adc
cmp
inc
or
jecxz
into
in
add
repnz
jecxz
push
dec
xor
movsb
jmp
repnz
add
xor
push
cmpb
and
pop
lcall
add
pop
xor
sbb
dec
cmpsb
icebp
mov
fwait
jo
mov
rcl
cmp
sub
dec
out
movsl
inc
scas
inc
imul
xorb
sar
in
add
mov
or
dec
out
push
arpl
test
dec
pop
inc
mov
out
mov
xchg
je
add
mov
add
ret
mov
sub
aaa
adc
mov
cs
push
and
push
shll
xchg
aam
icebp
xchg
jne
aas
jge
sub
pop
mov
dec
orb
mov
jmp
jmp
stos
nop
outsl
and
loope
pop
adc
cmp
add
sbb
push
rclb
mov
repnz
mov
adc
inc
dec
jg
jp
jns
lret
in
xlat
push
jae
shlb
cmp
loope
adc
or
repnz
sbb
push
ds
in
push
mov
rorb
cltd
jns
jmp
xor
out
cmpsl
sti
cwtl
mov
pop
sbb
jmp
xchg
cmp
mov
aad
loop
and
addr16
mov
test
mov
daa
iret
shlb
lds
push
mov
shrl
lret
pusha
mov
out
sub
jae
or
mov
mov
ja
mov
jns
mov
test
and
shl
inc
mov
xorps
pop
push
push
fwait
jno
stos
sbb
jp
sbb
cmpsb
pop
movsb
addr16
jne
int3
fstpl
push
shrl
hlt
mul
sub
dec
mov
jp
fcmovnu
adc
xor
sub
cwtl
pop
mov
sbb
scas
cmp
xor
into
add
pop
push
sub
out
cwtl
fdivr
pop
test
adc
out
push
cld
gs
negl
or
clc
push
dec
out
or
addr16
mov
mov
adc
xchg
xor
push
push
pop
push
inc
lahf
cmc
add
xchg
add
aad
jge
pop
jb
mov
pop
jbe
xchg
pop
mov
jo
cmp
mov
fisubs
rcrl
imul
jle
pop
add
sbb
es
fcomps
sub
push
xchg
dec
adc
xchg
xlat
add
jb
shlb
or
push
xchg
jl
xor
enter
push
fcompl
in
pop
pop
lods
pop
jo
inc
fistps
call
test
repnz
add
aaa
xor
add
jmp
jl
xchg
out
sub
popa
clc
fwait
out
iret
dec
mov
adc
movsl
or
jne
add
mov
mov
loopne
or
outsb
dec
mov
leave
out
xchg
sbb
push
jp
mov
mov
ljmp
sbbb
sbbl
cmp
mov
lret
and
mov
aad
clc
addl
xor
test
repnz
insl
jp
add
mov
push
mov
xor
sbb
iret
add
or
xchg
test
stos
pop
cmpsb
or
jnp
insb
mov
add
push
inc
rcr
arpl
jle
mov
cmp
sahf
cs
push
inc
mov
out
lcall
outsb
pop
ss
push
mov
dec
fdivl
movl
fcoms
aad
and
inc
fs
mov
push
arpl
push
push
adc
out
scas
imul
adc
add
adc
imul
jle
jb
add
cmp
in
leave
int
mov
int
dec
push
cmc
push
mov
sti
gs
pop
push
cmp
push
dec
adc
in
mov
scas
lcall
xchg
xor
push
sbb
cmpsl
xor
mov
cmp
cs
and
pop
ja
loope
mov
aam
mov
loopne
push
iret
cs
pusha
pop
lods
mov
jl
repnz
out
jmp
dec
shlb
pop
iret
inc
adc
scas
push
les
enter
mov
sbb
push
inc
fmull
sarl
mov
pusha
mov
rcll
push
jnp
and
xlat
jl
mov
inc
push
flds
ljmp
fdivs
pop
icebp
xor
sbb
and
rcrb
xor
adcl
sarl
push
push
jp
and
and
add
call
inc
xchg
or
test
repz
in
bound
fstps
push
jo
sub
pop
imul
mov
push
push
inc
movsl
adc
cld
xchg
adc
test
jg
les
loope
movsb
jp
mov
mov
cmp
or
arpl
ret
sbb
xor
pusha
inc
sub
sbb
xchg
aas
or
dec
adc
mov
lock
add
int
cwtl
imul
pop
push
repz
mov
inc
xor
inc
loope
scas
faddl
push
in
test
gs
pop
push
mov
adc
nop
mov
aad
pop
adc
nop
mov
sarb
sbb
fistps
dec
leave
push
mov
xor
pop
insl
dec
outsl
int3
ret
test
stc
int3
leave
add
jnp
cmovg
les
dec
inc
pop
rcll
dec
out
cld
mov
sub
mov
divl
sar
inc
pop
sbb
cwtl
mov
jnp
out
sub
mov
sti
shrb
pop
das
adc
mov
cld
cld
int3
leave
inc
clc
jg
mov
push
or
andl
and
jb
clc
mov
loop
add
add
ss
enter
int3
sub
lea
ja
dec
add
dec
sbbb
pop
jb
fimull
lock
inc
fsubrl
mov
ja
push
sub
mov
mov
sahf
sarl
jle
push
inc
bound
adc
jns
movsb
ficoml
lods
and
aad
push
adc
or
push
and
stos
xor
push
adc
ja
repz
pop
xchg
lods
inc
push
int3
adc
cwtl
lods
mov
cmpsb
aam
adc
divl
shrl
and
ja
inc
push
imul
cwtl
stos
jne
inc
jecxz
adcb
mov
dec
stc
push
cwtl
push
xor
xor
mov
mov
dec
in
andb
rcrl
clc
lahf
mov
loope
loop
ret
outsb
test
inc
adc
sbbl
in
das
scas
mov
repz
jge
shr
inc
bound
rcrb
imulb
dec
stc
stc
repnz
push
pushf
out
std
inc
xor
sbb
in
outsl
insl
push
sahf
adc
jno
dec
lods
es
es
inc
jge
nop
mov
cmp
mov
in
inc
ret
fmulp
inc
mov
adc
stos
addl
inc
push
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
sbb
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
push
addl
mov
xor
orl
push
mov
decl
add
sbbl
mov
mov
addl
test
movl
je
mov
and
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
xor
andl
add
mov
mov
xor
or
sub
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
and
add
andl
mov
xor
mov
add
xor
add
sub
mov
mov
sub
xor
add
neg
mov
sub
lea
xor
xor
cmp
movl
je
mov
xor
movl
add
cmp
jne
pushl
orl
call
movzbl
add
mov
movzbl
xor
mov
add
mov
xor
add
cmp
movl
je
pushl
andl
pushl
xorl
call
mov
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
xor
or
dec
mov
jmp
mov
xor
incl
add
movl
cmp
movl
je
mov
mov
mov
mov
inc
mov
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
jmp
mov
adc
mov
sbb
mov
xorl
add
dec
mov
sbb
mov
or
mov
xorl
add
movl
mov
movl
jmp
mov
mov
add
orl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
jmp
lret
sbb
ja
mov
sbb
xor
jb
clc
pop
jb
jb
push
andb
pop
cmp
in
out
push
add
or
inc
int3
roll
and
jle
xchg
rorl
sbb
into
dec
push
mov
lea
xchg
pop
insb
call
inc
jl
arpl
btr
pop
cmp
sub
sti
cs
cmpl
push
push
sahf
push
rcr
xor
aas
cmpsb
add
xor
push
les
sti
add
jmp
dec
mov
mov
les
lahf
cmc
cmp
sbb
stos
and
into
fstps
sub
cmpsl
xchg
int
ja
xchg
ljmp
rcr
jns
add
mov
pop
aam
mov
pop
and
ja
fbstp
sub
call
xchg
dec
push
movsl
push
cmpl
scas
push
loop
xchg
neg
insb
jo
insb
test
stos
mov
sbb
in
adc
test
adc
mov
ret
call
out
jg
add
loopne
mov
or
scas
push
mov
pushf
nop
xchg
aaa
cmp
imul
sarl
or
and
dec
push
cli
sar
sbb
repnz
in
jmp
out
movsl
insl
xchg
jo
xchg
ds
mov
add
push
cmp
dec
cmp
xchg
add
insl
iret
les
mov
out
rolb
cmp
inc
adc
shl
orl
je
jo
repz
mov
movsb
cmpsb
pop
sub
int
mov
popf
mov
int3
push
sub
adcl
aam
mov
mov
xor
push
jo
and
int3
or
insl
pushf
in
outsb
repz
xor
repnz
movsl
clc
rcrl
add
movsl
jae
fcmove
loopne
pcmpgtw
push
dec
ret
dec
jo
or
dec
scas
lret
mov
sbb
icebp
mov
pop
inc
mov
pop
mov
shlb
sub
pop
mov
test
cli
pop
adc
push
jbe
out
aaa
rcr
outsb
add
mov
mov
add
inc
or
mov
mov
xor
cmp
mov
jmp
aad
test
pop
or
pusha
cltd
and
ficoml
mov
xchg
cmp
call
stos
addl
loopne
pop
push
sarb
lahf
add
es
jle
int
cs
pop
and
jbe
cmp
lods
push
out
lret
faddl
or
mov
push
xchg
inc
dec
ucomiss
jne
push
cmpl
hlt
mov
push
pop
push
stc
iret
fwait
mov
mov
ss
mov
shr
push
or
add
out
sub
push
adc
and
or
sahf
adc
add
mov
mov
repz
sahf
pop
mov
mov
loope
movl
sahf
imul
inc
cmp
mov
or
lods
dec
ds
std
inc
mov
dec
inc
mov
mov
pop
and
leave
fdivrs
mov
icebp
call
cmp
lahf
sbb
lock
mov
ret
lret
fwait
cmpsl
pop
dec
les
ret
mov
fisubl
mov
jo
stos
inc
dec
sbb
cld
pushf
jmp
mov
ficoms
sarb
mov
movsl
fidivrl
xor
pop
xchg
cld
dec
imulb
cmp
push
bound
dec
dec
sub
repnz
mov
xchg
in
add
insl
daa
test
push
mov
cwtl
push
inc
xchg
inc
sub
xor
add
cmpsb
mov
push
lcall
add
cli
xor
mov
leave
jp
add
xor
cmp
das
push
xchg
jo
inc
jbe
sahf
adc
ja
test
mov
out
ljmp
cmp
cli
adc
movsb
in
or
mov
and
ret
mov
pusha
sahf
mov
inc
daa
mov
cs
cmp
aad
mov
push
aaa
add
lods
in
add
jle
mov
hlt
adc
mov
cmp
or
ss
in
and
inc
gs
clc
sbb
sbb
inc
mov
sub
cltd
fadd
xor
fcmovnu
and
pop
lock
into
test
add
add
sbb
enter
mov
in
push
lret
lcall
insb
popf
test
sahf
cmp
sbb
push
mov
lahf
lahf
pushf
mov
lret
mov
shll
inc
xchg
push
pushl
mov
iret
push
in
push
mov
mov
adc
faddl
adc
sbb
mov
lock
pop
mov
sub
inc
mov
fwait
dec
mov
out
dec
scas
xchg
pop
hlt
xor
push
testl
xchg
shl
add
cmp
in
xchg
xchg
lea
in
in
js
pop
loopne
sbb
xor
jno
shr
add
jb
mov
push
jecxz
scas
dec
mov
jp
push
and
fisttpll
std
data16
jno
test
rcrb
jnp
jmp
jne
in
jecxz
loope
add
enter
fsubrl
faddl
daa
add
int3
or
adc
rorl
insb
out
es
lock
sub
ljmp
jno
fs
xor
mov
xor
outsb
sbb
stos
sub
pop
mov
in
or
cmp
lods
repnz
test
fsubs
sub
mov
sbb
negb
jo
push
cmp
inc
mov
aas
cmp
cltd
jno
or
clc
loop
in
jne
cmpsl
imul
jp
and
and
arpl
and
mov
xor
push
hlt
enter
cmp
arpl
mov
jmp
shlb
sahf
loop,pn
out
repnz
sub
js
adc
repz
out
rcrb
or
out
xchg
loop
imul
fadd
xchg
xor
jp
lods
arpl
leave
negb
mov
lahf
pop
or
enter
ficoml
test
mov
je
sbb
adc
jg
inc
mov
loope
or
jecxz
fnstenv
pop
aas
loop
jno
add
push
and
out
ret
mov
xchg
mov
repnz
push
arpl
test
aaa
mov
in
dec
scas
pop
negb
add
cmc
pop
pop
jmp
hlt
mov
movsb
adc
sub
cwtl
pop
cmpb
dec
adc
push
in
jb
std
arpl
gs
dec
shl
mov
sbb
stos
sub
sub
repnz
in
push
jg
cmp
push
pop
mov
test
cmpl
dec
push
xchg
je
nop
xchg
inc
and
sbb
jne
sbb
in
scas
xor
jecxz
cmp
ja
sti
pop
fwait
mov
push
adc
or
addr16
push
mov
inc
xchg
cmpb
mov
xlat
push
test
cmp
loope
mov
lret
jecxz
divb
add
outsl
mov
xor
jecxz
or
jbe
popa
cltd
inc
sbb
lock
cwtl
add
decb
adc
ficoml
mov
std
loope,pn
push
mov
jp
in
cmp
dec
shl
mov
sbb
iret
ss
ds
add
jle
sub
scas
leave
adc
xchg
xchg
lcall
test
loop
add
leave
dec
outsb
fstpl
pop
sub
dec
sub
push
mov
jg
sub
push
sbbb
push
mov
sbb
data16
lcall
inc
xchg
repnz
into
cli
mov
in
sbb
dec
inc
std
cmp
stc
jo
mov
lret
pop
into
xchg
push
push
test
push
mov
cmc
les
xor
jns
enter
idivl
cmp
das
ret
jg
bound
dec
shrl
stc
aas
push
mov
cmpsb
iret
cmp
popf
jl
out
jae
push
adc
sub
hlt
std
shlb
adc
cmpb
mov
adc
lea
popa
je
cmp
add
push
ja
or
cltd
das
test
lahf
outsb
fwait
mov
loope
icebp
lds
shlb
cmpsb
mov
lea
imul
ret
push
ljmp
inc
test
dec
inc
inc
push
xlat
scas
jle
add
xor
in
gs
cmpb
mov
adc
and
or
inc
xchg
pop
int3
test
subb
movsl
scas
stos
and
sub
rcr
cmp
in
mov
cmp
dec
mov
lods
call
push
pop
arpl
ja
pop
push
mov
fwait
mov
arpl
sub
mov
fisttpll
hlt
lods
mov
xor
fidivl
adc
mov
jp
test
xchg
ret
mov
sahf
push
xchg
pop
test
cmp
test
push
fcoml
or
push
repz
or
push
and
add
lcall
fldcw
cld
pop
push
outsb
not
xor
ret
insb
sbb
jle
and
cmpsl
aad
xchg
or
sti
push
cmp
add
cmp
dec
outsb
dec
fcoml
inc
push
das
inc
add
je
push
pop
pop
mov
jmp
dec
jmp
add
and
pushf
ljmp
ss
cmpsb
xchg
out
push
outsl
add
cmc
push
and
jge
addb
test
fucomp
loope
in
sub
sub
mov
jge
inc
stc
xor
addr16
insb
in
mov
sub
rcr
adcb
pop
add
sub
hlt
cmp
pop
jle
lock
push
mov
aam
movsl
enter
test
adc
subb
xor
cmpl
jns
sbb
push
out
fadds
xor
push
daa
lock
push
push
dec
or
pushf
sbbl
lods
std
loopne
cmpsb
repnz
xor
and
cmp
lahf
jmp
insl
push
out
ds
lods
pop
divl
nop
sub
or
cmp
push
lea
jge
pop
test
adc
loop
jnp
mov
mov
xchg
jae
test
push
sub
sub
testb
mov
int3
sbb
mov
into
xor
sbb
dec
out
xchg
fildll
dec
or
inc
sub
in
adc
enter
fs
popf
or
test
xchg
test
jge
cmp
sub
cld
cmp
pop
jmp
xchg
cmp
push
lret
push
fcompl
jo
dec
testb
sbb
xchg
xor
push
outsb
test
lods
cmpsb
jmp
lods
mov
pop
mov
mov
and
inc
lods
dec
push
jp
pop
and
into
cmp
out
pop
pop
test
pop
pop
sub
fsub
jle
movl
decl
sti
shl
mov
or
ret
inc
shll
test
mov
cs
adc
pop
roll
pop
mov
lds
mov
dec
mov
ja
dec
push
cmp
add
outsb
addl
cmc
stos
lods
cmpb
cwtl
xchg
pop
shlb
adc
insl
mov
daa
mov
hlt
sub
lahf
inc
cmp
test
xchg
jns
nop
push
xor
mov
fmuls
popf
ss
dec
test
out
stc
cmpsb
scas
js
mov
call
cwtl
pop
and
fsubs
cmc
jae
add
movsb
xchg
mov
icebp
jmp
nop
loop
sbb
outsb
maskmovq
imull
mov
aas
rolb
push
shr
test
outsl
fistps
adc
mov
xor
jecxz
inc
cmp
divb
fisubs
sti
movsl
add
test
lods
and
mov
cmpsb
je
pop
sti
in
adc
fisubl
aas
addr16
xchg
or
jp
int3
push
sbb
aaa
mov
out
test
xchg
shr
inc
roll
lret
jmp
dec
jno
lods
mov
lock
mov
sti
add
jmp
lods
adc
jmp
mov
pop
loop
or
stos
add
loopne,pt
sub
fbld
cld
testb
mov
je
out
jbe
leave
cmp
arpl
xor
fdivrp
in
push
repz
push
test
mov
imul
ficoms
mov
adc
and
mov
and
dec
nop
aad
popf
mov
cltd
into
jl
out
fidivl
iret
int
push
push
sahf
push
adc
push
dec
pop
clc
fldt
jge
cli
test
fmuls
mov
test
jo
pop
outsb
cmc
lea
sbb
push
dec
cmpsl
std
imul
sbb
push
or
or
mov
dec
in
or
push
or
lea
out
fcoml
rol
aaa
dec
and
cmp
push
and
js
jnp
or
dec
fidivl
adc
mov
jp
xchg
ljmp
add
push
or
out
std
push
dec
sti
xchg
xchg
add
loop
mov
fs
test
lock
int3
ds
cmp
add
outsb
cmp
jmp
push
xchg
or
sbb
pop
push
pop
sahf
popa
je
push
mov
mov
lahf
int3
jmp
adc
xchg
mov
rol
push
movsl
jo
lds
and
mov
cmpsb
dec
xchg
andl
sti
test
inc
lock
imul
rorb
push
dec
add
rcrb
fs
push
ljmp
pop
pop
cmp
xchg
lret
or
pushf
fsts
xchg
sarb
loopne
stos
xor
mov
rorl
mov
out
lods
mov
mov
pushf
mov
data16
les
lods
push
stos
mov
int
add
in
add
sti
fdivrp
popa
mov
std
or
add
in
lret
mov
aas
or
imul
addr16
in
dec
sbb
inc
es
or
clc
addb
frstor
jmp
out
adc
fldcw
jb
inc
cli
inc
mov
push
fld
pop
cmp
and
add
mov
jecxz
xor
imul
aam
fwait
jmp
mov
cld
stc
mov
jmp
test
jmp
jg
sbb
jbe
mov
lea
push
mov
xchg
out
lds
sub
lods
js
mov
mov
xor
cmp
rep
jle
lea
add
inc
xchg
mov
stc
push
cmpsl
lock
out
fwait
into
jl
pop
mov
inc
cwtl
cmp
mov
loop
cmpl
fsubr
pop
cmpsb
dec
ljmp
xchg
je
test
jb
jae
rcrl
adc
push
mov
cmpsl
dec
adc
mov
mov
sbb
mov
gs
rol
xor
inc
pop
mov
in
mov
xchg
aaa
mov
jl
and
push
in
mov
or
pushl
aas
js
jmp
pop
mov
pusha
fs
orl
es
pop
jmp
testb
fistl
sbb
inc
xchg
xor
rcrl
add
imul
out
stos
addb
xchg
pop
push
clc
mov
and
push
add
pop
cmp
es
rorb
pop
sbbl
jb
test
push
and
xlat
leave
push
mov
ret
stc
cmc
adc
jne
call
sub
xor
and
loop
cmpsl
pop
out
jns
lea
dec
movsb
mov
inc
push
fcos
push
popa
xchg
aaa
stos
aas
sbb
mov
adc
xchg
cltd
mov
mov
and
lock
cwtl
lcall
sbb
dec
sub
mov
repz
sti
stc
add
rcrl
xchg
faddl
mov
mov
repnz
mov
test
dec
stos
pop
push
and
add
outsl
and
xorb
push
jns
lcall
ss
cld
cmp
jno
jecxz
das
mov
test
lds
pop
dec
adc
mov
adc
mov
idivl
xchg
movsl
cli
pop
dec
shlb
out
pop
daa
sbb
mov
aaa
pop
test
jge
loope
mov
popf
pushf
mov
adc
scas
icebp
stos
clc
ss
mov
fisubs
cli
push
loopne
popf
adc
jl
adc
pop
outsb
add
ss
ss
adcb
push
cli
ret
add
cmpsl
add
cli
adc
lahf
and
inc
subl
dec
lock
push
je
mulb
dec
jle
push
add
shlb
jno
pop
cli
or
loop
jl
cmp
rorb
sub
lds
lea
mov
rorl
or
cmp
imul
mov
ficompl
mov
dec
adc
mov
push
sahf
add
enter
add
iret
cltd
aad
std
push
pop
or
ja
push
add
xor
xchg
fisttpll
pop
pop
xor
adcb
sahf
ja
add
in
add
sbb
lods
xor
jp
adc
adc
pop
jecxz
scas
and
lds
test
xchg
idiv
test
push
push
sub
sbb
int3
insb
xchg
lds
pop
int
test
repz
fsubp
mov
and
xchg
popl
dec
into
push
dec
mov
push
dec
loop
mov
cli
mov
icebp
test
outsb
inc
pop
cmc
sbbl
adc
movsb
cmp
orl
loopne
mov
jb
lahf
ljmp
mov
sbb
popf
repz
jb
xor
stos
int3
ret
mov
stos
gs
lret
cmp
dec
push
xchg
mov
or
and
mov
setnp
or
std
xor
or
jno
nop
pop
adc
movsl
lahf
mov
mov
dec
sbb
xor
xchg
mov
push
push
push
insl
mov
mov
pop
pop
in
into
and
dec
mov
mulb
sub
dec
sub
push
loope
push
jl
jnp
call
mov
sbb
gs
add
inc
jne
test
jg
jo
jge
dec
xor
fs
mov
rclb
test
jno
scas
je
sub
sti
ljmp
dec
mov
sub
sbb
and
outsl
sahf
insl
lret
add
out
repz
sbb
lods
mov
dec
imul
pop
dec
sbbb
cmpsl
mov
mov
jne
mov
adc
pop
add
ja
mov
cmp
push
test
mov
sti
outsb
xchg
out
jbe
nop
push
mov
outsb
test
ss
pusha
rolb
add
and
data16
cs
inc
and
xor
cmp
icebp
mov
mov
lahf
cmp
incb
or
jns
pop
cltd
test
in
push
test
sub
mov
movsb
add
push
adc
inc
add
adc
sbb
data16
imul
mulb
data16
dec
and
xor
in
mov
cmp
fsub
jne
push
ds
dec
lods
mov
sbb
mov
call
scas
push
lock
pop
push
bound
sub
or
mov
and
int
pusha
in
adcb
push
insb
loopne
mov
sbb
in
adc
ja
shll
add
adc
into
aas
je
adc
mov
cli
cmpsb
stos
adc
mov
mov
xchg
xor
sar
cmp
into
lcall
inc
cmp
fisubrl
stos
sbb
pop
mov
xor
cmp
add
cwtl
je
pop
int3
add
jp
sbb
cmp
insb
adc
xor
adc
call
push
xchg
xor
push
lock
lcall
inc
sbb
xchg
test
cmp
sub
cmp
dec
fcoml
add
adc
je
sysret
outsl
fimuls
pusha
clc
inc
in
push
push
pop
sub
push
and
insl
or
js
into
fs
sub
mov
in
mov
mov
or
xchg
sub
mov
pop
mov
push
adc
cmp
xchg
and
sbb
xor
sub
or
fsubrl
push
jecxz
test
subb
jg
es
cwtl
jmp
add
neg
scas
dec
dec
or
jne
mov
xor
lods
or
cmpsb
pushl
cmpsb
cmp
sub
jno
cwtl
lea
cmc
xchg
bound
test
cmpsb
inc
mov
imul
jae
stc
addl
mov
add
stos
fmul
or
inc
out
sub
sub
js
test
push
loope
or
jecxz
jg
fistpll
push
jle
in
and
jl
dec
pop
mov
sub
out
fdivl
inc
cs
push
cmp
push
js
push
xchg
in
notb
mov
aad
dec
sbb
lret
push
inc
lods
call
xchg
jg
sbb
adc
in
fwait
ret
subb
xor
jo
push
stos
iret
jle
mov
lcall
xor
stos
cli
stos
adc
cs
rorb
cmovle
xchg
in
or
mov
mov
enter
add
pop
xchg
lcall
sub
fdivrl
test
in
jmp
scas
outsl
xchg
mov
divl
push
dec
into
jbe
jl
test
lret
imul
sbb
mov
and
push
jp
sbb
sbb
test
mov
mov
out
jnp
out
rolb
std
xor
js
cmp
mov
nop
test
jmp
mov
fcoml
cmovns
jp
es
leave
dec
or
sub
sbbl
sbb
int3
mov
or
arpl
add
cld
and
and
pop
cmp
push
xchg
daa
add
pop
daa
sti
dec
aam
push
push
cmpsb
je
cs
lret
jbe
ret
cmp
mov
out
xchg
or
cs
adc
sub
test
aas
sub
shrb
sub
stc
jecxz
test
sub
mov
push
mov
mov
add
mov
or
lcall
pop
mov
cmpsl
sub
mov
and
mov
leave
test
pop
xchg
insb
cmp
int
and
cltd
dec
pop
add
ss
pop
outsl
insl
lds
loop
jbe
push
mov
cmc
hlt
leave
add
ja
ss
in
and
mov
fcompl
ljmp
mov
add
xchg
cmpb
pop
pop
inc
nop
push
jge
jnp
movsl
jno
mov
popl
stc
cmp
or
sub
dec
fwait
test
jmp
and
scas
push
and
push
add
jnp
bound
sub
xor
xchg
pop
addl
arpl
mov
popa
out
mov
lret
ja
push
and
jg
imul
cmp
adc
stos
mov
mov
mov
mov
sbb
stos
iret
xor
cmpsl
xchg
xchg
loop
push
sub
cmp
enter
cmp
jnp
mov
and
adc
push
xor
ja
enter
push
add
out
adc
dec
cltd
sub
cmpsl
xchg
pop
jmp
iret
jmp
push
bndldx
scas
cmp
data16
pop
stos
adc
jnp
adc
pop
xchg
push
mov
movsb
pop
dec
push
jae
push
cwtl
cmp
cmp
pushw
mov
xchg
dec
pop
pusha
fs
dec
icebp
fiadds
stos
dec
cmc
test
pop
lds
or
insl
imulb
mov
sbb
out
push
pop
mov
aas
pushf
sub
push
mov
sub
jbe
xlat
fstl
or
xchg
ja
rorb
push
dec
out
in
popa
push
add
inc
stos
mov
jo
shlb
mov
out
sbb
inc
inc
mov
jns
fnstsw
loopne
popa
jae
fnstcw
xor
cmp
fs
inc
or
es
xchg
cmp
sti
out
mov
mov
pop
std
notb
ss
mov
shll
iret
jmp
leave
pop
shr
cmp
ja
pop
repz
dec
sahf
jbe
push
jns
sub
push
push
jb
adc
dec
pop
mov
clc
push
enter
mov
or
pop
jae
mov
cmp
add
dec
faddl
mov
push
push
movsl
mov
pop
pop
dec
inc
push
fildll
inc
sti
sbb
push
cmp
cs
lret
push
push
and
jp
cmpsb
lds
cmp
test
mov
inc
jge
adc
jecxz
pusha
loope
jo
xor
in
shl
mov
push
fnstcw
mov
cmp
imul
les
push
xchg
pop
push
xchg
bnd
and
mov
xor
scas
jnp
inc
sub
adc
sub
mov
in
ljmp
xor
add
ret
and
ljmp
loopne
push
es
out
shlb
mov
sbb
lret
dec
fnstsw
inc
sbb
in
iret
out
je
mov
dec
repnz
sbb
xor
inc
mov
addr16
ja
lahf
fistps
mov
or
dec
push
je
xchg
test
inc
scas
bound
out
inc
out
test
lea
jecxz
dec
pop
mov
xchg
mov
mov
inc
jecxz
adc
or
movsl
addr16
test
inc
ja
scas
jg
stc
les
push
fists
mov
arpl
mov
sarl
shlb
in
movsl
gs
sbb
imul
std
pushw
fwait
lods
push
cmp
sub
inc
in
dec
and
mov
sbbl
jnp
in
je
pop
sub
loop
mov
adc
push
jb
clc
pop
xor
repnz
shlb
lods
inc
imul
ja
sub
ss
cmp
xchg
sbb
nop
add
sub
scas
andl
pop
lea
cmp
cld
xchg
xchg
mov
fidivrl
lods
xor
loop
out
push
add
xchg
ret
jp
jg
mov
jecxz
mov
bound
subb
jae
dec
xchg
sub
inc
ss
clc
xchg
loope
lods
xorl
int3
imul
add
jo
ret
jns
add
adc
xor
pop
pop
jp
popf
repnz
mov
dec
cmpsb
and
mov
mov
dec
mov
mov
sbb
push
pushf
xchg
std
outsl
arpl
aad
cmpsb
fidivrs
jo
mov
mov
cmp
pop
mov
ljmp
jl
ret
xor
fldt
sbb
xchg
push
bound
fisubl
test
dec
xchg
xor
mov
aad
lods
movsl
xchg
in
fsubrp
dec
aad
mov
xchg
aaa
add
cmc
js
mov
sbb
leave
sahf
int
jae
cmp
out
insb
and
mov
mov
fdivs
xchg
add
xor
sbb
xchg
push
or
sub
dec
sub
or
jg
lahf
aaa
xor
dec
inc
cltd
jle
or
popf
in
fisubs
jbe
in
aad
bnd
shlb
push
xchg
xor
stos
in
daa
pop
hlt
xchg
mulb
call
xlat
test
mov
dec
lods
mov
je
imul
xchg
pop
mov
mov
inc
sbb
stos
push
addr16
xor
mov
std
cmp
cmpl
push
call
add
pop
in
hlt
out
je
jns
daa
mov
pop
cli
movsl
shll
fsubs
push
push
jns
mov
xchg
adc
out
or
add
xchg
and
hlt
gs
addb
aas
out
fwait
jmp
mov
out
and
add
mov
inc
cmp
or
inc
out
push
fdivrs
js
ss
jb
dec
mov
shll
jecxz
mov
out
xor
movsl
inc
clc
jo
shll
mov
and
and
fnstcw
sbb
iret
insb
mov
xchg
rolb
cwtl
in
push
scas
pop
in
into
dec
gs
mov
sub
in
mov
dec
fcomi
daa
push
mov
idivl
xchg
push
out
pop
sub
sub
fmull
incl
cld
dec
xor
das
push
mov
or
push
cltd
inc
pop
mov
push
or
gs
push
jge
xchg
rorl
jae
hlt
arpl
adc
jg
stos
mov
cmp
out
jecxz
test
adc
dec
mov
and
jns
jmp
inc
ljmp
fs
rorl
mov
ret
mov
lods
lcall
testl
je
data16
mov
inc
movsb
xorb
andl
pusha
adc
inc
push
adc
mov
xchg
xchg
fwait
push
call
std
sub
repz
fs
addr16
xor
ljmp
out
push
mov
repnz
cmpsl
or
int
ss
push
sbb
vmovaps
fisubrs
jne
repnz
pusha
lods
aas
jmp
into
add
stos
cmp
aam
inc
iret
pop
clc
mov
mov
adc
cmc
push
sub
movsl
sahf
push
test
mov
jae
pop
out
gs
movsl
or
sar
fmull
dec
out
jnp
mov
das
dec
lds
xor
jnp
cmp
push
cmp
pop
aam
push
fsubs
lret
daa
sbb
adc
cmp
fwait
mov
dec
nop
ljmp
loope
or
jb
into
cmp
inc
mov
sbb
dec
add
xor
test
push
fs
jo
inc
push
sbb
push
loop
sbb
lcall
ljmp
lods
rcrl
popa
xchg
inc
lea
dec
in
push
imul
out
testb
jb
call
mov
sub
mov
xor
fsubs
lret
repnz
pusha
sbb
daa
jo
jae
test
jle
ja
jo
sub
pop
insl
sbb
sub
imul
or
jmp
out
jnp
aam
sbb
mov
lret
jns
mov
adc
xor
xchg
sub
subl
push
je
push
jp
ficoml
push
lahf
adc
mov
test
xchg
dec
xchg
jp
jmp
loopne
icebp
rorl
pop
ja
outsl
out
mov
neg
mov
rcl
das
pop
sbb
das
out
add
xlat
xchg
push
cmpsl
dec
ss
and
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
jmp
xchg
cli
testl
jae
adc
mov
clc
pop
jb
and
clc
les
sbb
mov
fcomps
cs
cmc
shl
test
jns
sar
fsubrl
sbb
hlt
jmp
and
jae
int3
pop
ja
cmp
or
ss
inc
in
mov
push
sub
mov
dec
call
jl
sbb
cmp
mov
test
dec
int
cmp
or
mov
das
and
in
cld
rcrb
cmp
sbb
mov
jl
ss
mov
jge
into
jge
pop
pop
repz
push
add
inc
in
out
cmp
test
dec
push
xchg
test
or
jle
lods
out
and
inc
jmp
xor
fsubrs
push
xor
xor
hlt
sbb
push
stos
mov
and
shrb
cmpsl
mov
pushf
jns
cmp
test
repnz
les
xor
xchg
aas
test
pop
xchg
add
xlat
jo
push
es
arpl
popf
repz
xor
ret
lret
shll
sbb
addb
imull
mov
shl
dec
call
pusha
jnp
aaa
xchg
jg
pop
or
enter
in
mov
ss
int3
insl
dec
sub
dec
imul
mov
jp
adc
iret
data16
xchg
imul
leave
insl
mov
ficompl
mov
aas
sarl
cs
hlt
scas
dec
filds
cld
and
push
mov
in
xor
lahf
ljmp
es
arpl
ret
adc
mov
jecxz
test
add
xchg
sub
xchg
xchg
or
cmpsl
arpl
add
jbe
hlt
iret
sub
pop
dec
cmc
cwtl
into
idivb
xchg
sbb
xchg
xchg
mov
out
sbb
loopne
cmp
pop
jb
add
sub
loope
jo
adc
mov
nop
mov
xchg
pop
jp
pop
popa
je
adcl
in
sub
and
push
insl
fisttpl
mov
leave
mov
repz
fdivrs
ljmp
xorl
add
add
fsubs
das
lahf
jl
daa
jl
call
out
adc
lds
adc
dec
pop
fsubs
lock
out
mov
jo
test
sahf
or
jb
push
sbb
xchg
mov
cmp
imul
loopne
sub
mov
adc
xchg
call
call
shrb
sti
iret
jge
lahf
mov
incb
pop
fwait
push
lds
jmp
sbb
jbe
push
add
stc
roll
xchg
pop
mov
jge
cmp
test
xor
cmpsb
lods
pop
int3
jmp
lods
dec
sarb
iret
aad
add
ja
loope
mov
xor
pop
or
loopne
imul
lods
mov
sub
sub
xchg
pop
lds
or
push
mov
dec
loope
shll
mov
cltd
sub
test
dec
out
in
je
jp
pop
hlt
add
push
sbb
in
shlb
mov
xor
or
add
pop
dec
cmp
mov
daa
lock
adc
pop
pop
mov
mov
mov
mov
in
pop
lcall
lods
imul
jbe
arpl
add
pop
sarb
cmp
movsb
xchg
outsb
jo
jmp
dec
jmp
mov
shrl
push
fisttps
cmp
shll
ljmp
test
mov
iret
mov
imul
xchg
cli
into
ljmp
fldenv
inc
in
int3
xchg
push
pop
jp
lods
push
arpl
and
xchg
lcall
xchg
aas
add
jle
in
add
inc
rcrb
inc
movsl
inc
dec
pushf
ljmp
xor
lret
or
mov
mov
out
outsb
pop
cwtl
fsubl
in
pushf
rol
mov
das
daa
icebp
adc
test
and
pop
sub
in
mov
mov
movsl
cmp
mov
cs
fsubs
cmp
jg
jne
sub
sbbl
push
cmp
hlt
insb
mov
loope
push
inc
std
and
mov
std
or
push
cmc
pop
cvtps2pi
pop
pop
adc
pop
xor
out
cmpl
or
xor
dec
outsl
mov
fs
js
sarb
jecxz
and
lds
push
test
test
lock
lods
pop
daa
aad
mov
sub
inc
rolb
data16
push
ds
mov
mov
mov
sub
shll
mov
dec
ja
pop
mov
push
add
push
divl
dec
sub
pop
sbb
test
fsubrl
push
jbe
fldcw
mov
insb
inc
inc
sbbb
sub
adc
add
sub
jecxz
push
xchg
push
mov
cmpsb
push
mov
cmp
test
nop
jp
pop
dec
repz
neg
xchg
xchg
sbb
push
cltd
rcrb
xchg
and
inc
fdivrp
push
adc
icebp
jne
ret
addb
clc
push
mov
cmc
sbb
sahf
jno
int3
imull
bound
dec
imul
aam
inc
call
das
jge
shl
and
leave
mov
loop
cmp
mov
fwait
mov
inc
stos
in
and
sbb
inc
mov
add
repnz
mov
fcoms
adc
mov
stos
and
test
loopne
push
in
sahf
ret
rcrl
inc
call
push
ljmp
pusha
out
and
iret
lcall
mov
je
fs
pop
aam
sbb
into
lock
cmpb
adc
pop
sub
sbb
out
mov
sub
pop
jb
arpl
movsl
jnp
adc
pop
push
xchg
jnp
pop
leave
fsts
pop
jle
sub
pop
popa
pop
jae
pop
in
aaa
fwait
jl
sbb
push
lahf
daa
hlt
movsb
in
int3
stos
bound
cltd
pop
mov
mov
push
sbb
mov
dec
jnp
xchg
pop
popa
movsb
push
stc
and
fincstp
sub
popf
popa
adc
subl
mov
xchg
push
rep
mov
sysexit
mov
cmp
aad
test
in
xor
jae
inc
inc
cmp
or
shl
in
inc
sub
lret
cld
repnz
cmc
xor
repz
push
pusha
xchg
icebp
inc
int
pop
iret
rol
push
lea
mov
popf
fdivrs
dec
push
mov
in
aaa
stos
hlt
movsl
fs
clc
pusha
sub
sbb
ror
add
xor
dec
sbb
cmp
lcall
cmp
dec
xchg
imul
les
or
mov
fdivrl
test
fisttpll
in
xchg
add
loope
inc
or
fimuls
jp
cmp
div
aaa
jno
jecxz
jecxz
es
mov
sbb
push
pop
out
cmp
cs
or
jo
std
jl
fsubs
filds
in
addb
in
fnsave
pop
pop
movsb
xchg
sbb
outsl
out
test
fmull
stc
mov
dec
lods
mov
jne
push
aam
fdiv
push
mov
int3
rclb
add
pushl
cmc
push
pop
xor
outsl
popf
cmpsl
movsl
rclb
mov
sbb
sbb
in
push
aam
xor
rcrb
test
arpl
mov
in
les
ret
fisttps
aas
call
data16
adc
push
stos
das
frstor
sub
in
gs
mov
jne
test
pop
and
xchg
push
mov
fidivl
shll
cmp
inc
enter
ret
adc
mov
insb
cs
out
dec
dec
xchg
in
and
push
jge
mov
popf
adc
cmc
lret
xchg
or
es
mov
clc
dec
xchg
xchg
sahf
xchg
repnz
fnsave
rorl
cmp
dec
push
xor
cmp
je
push
fisubs
jae
fiadds
hlt
add
xor
aas
insb
fldl
sub
mov
mov
cmp
adc
bound
fildll
xchg
arpl
xor
adc
mov
add
mov
dec
enter
jl
cmp
fstps
enter
push
bound
cmp
jg
mov
xlat
aad
jb
sub
pop
mov
pushf
nop
xor
fidivs
mov
repz
add
imull
pop
or
sbb
mov
out
cmp
mov
fsts
icebp
cli
shrl
push
inc
push
inc
icebp
mov
add
cmpsl
adc
dec
xor
or
stc
xchg
rcrl
mov
aad
out
jbe
cltd
sub
jl
sub
mov
xchg
pop
mov
push
dec
data16
mov
adc
jbe
adc
jbe
sbb
not
push
mov
imul
mov
jne
movsb
adc
and
and
adc
or
out
pop
mov
out
lock
popa
pop
in
rclw
neg
cmc
dec
push
sub
xchg
inc
shlb
fwait
rcrl
cmp
mov
pusha
or
cmpsb
pop
push
ss
add
push
sub
arpl
fstl
adc
or
std
ss
sub
push
pop
sub
imul
xchg
xchg
push
push
mov
out
mov
mov
loop
or
rcrb
cmpb
dec
jg
adc
dec
push
ret
popf
ret
fbld
rorl
pop
xor
icebp
add
jl
mov
sbb
jp
cmp
push
in
jae
pop
imul
mov
mov
jge
xorl
dec
out
mov
cmpsb
jmp
xchg
or
sbb
xor
dec
mov
jge
es
sbb
sub
inc
add
cmp
or
jno
and
mov
mov
xorps
sbb
and
das
xor
jnp
ljmp
cmp
push
sahf
mov
adcb
out
mov
push
cmp
pop
jne
ljmp
push
add
mov
sbb
dec
leave
push
mov
cmc
inc
mov
jne
or
inc
les
adcb
xchg
adc
and
gs
in
mov
xor
pop
in
lea
push
fiaddl
xlat
inc
jbe
scas
push
into
mov
leave
lahf
push
mov
and
repz
rol
xchg
jmp
fldl
outsl
fwait
xor
xor
push
leave
and
loope
orb
sbb
fs
movsl
das
sbb
cs
addr16
scas
push
ja
fstpl
pop
lds
loop
mov
inc
dec
fucom
mov
cmp
data16
addb
ret
push
cli
div
mull
mov
out
rolb
insl
icebp
dec
pop
adc
jo
lret
ljmp
xchg
sub
incl
lret
test
xlat
mov
inc
ss
mov
test
aam
loop
ja
cld
dec
leave
lcall
push
jo
orb
insb
pop
and
lea
jns
add
pop
sub
add
jg
cmc
pop
xchg
mov
mov
cmp
loop
rol
xchg
sbb
in
fistpl
aaa
mov
xor
hlt
aaa
sbbb
push
out
mov
or
add
dec
xchg
jp
stos
cmpsw
lahf
clc
add
inc
or
push
push
sahf
mov
ret
dec
es
mov
sbb
sub
arpl
repz
mov
xlat
adc
sub
xor
cmp
pop
lcall
xchg
nop
jne
lds
push
mov
lock
or
dec
int3
lds
push
or
xor
or
mov
int3
and
loopne
mov
dec
xchg
movsl
lret
sbb
and
push
pop
shl
nop
gs
out
adc
or
and
xchg
ja
clc
xor
dec
mov
inc
mov
loop
aad
inc
scas
insl
sbb
xchg
lret
enter
hlt
repz
fisubs
jae
add
xor
movsb
pop
repz
leave
data16
pop
mov
inc
mov
nop
out
push
scas
jp
xchg
push
add
and
rolb
arpl
adc
mov
stc
inc
xchg
shll
jbe
dec
dec
sub
lret
loope
popf
or
dec
pop
push
aaa
xor
aaa
cwtl
push
xchg
mov
fwait
das
dec
xchg
out
mov
hlt
sbb
jnp
cmpsb
ret
sub
cmp
jge
mov
mov
push
jecxz
fstl
int
push
push
jecxz
pop
jo
adc
sub
arpl
sub
mov
xor
or
les
xor
lods
bound
shll
jp
in
insb
pop
and
aas
sub
lret
xchg
lahf
or
stc
xchg
inc
mov
punpcklwd
mov
aaa
je
dec
dec
dec
loop
clc
das
dec
int
sbb
mov
lahf
shl
ja
stc
mov
sbb
insb
xchg
sbb
test
xor
stos
sub
push
mov
insb
shlb
cmp
and
push
mov
push
pop
xor
lock
pop
movsl
mov
decl
xlat
mov
adc
add
mov
jne
cwtl
mov
jge
clc
cmp
into
out
cmp
aaa
popf
or
lcall
inc
add
mov
adc
ds
lret
or
lods
sub
push
js
popa
imul
add
les
mov
in
push
push
fsubl
sti
push
mov
sti
insb
jnp
jge
sbb
dec
inc
push
pop
ret
xchg
cltd
adc
push
gs
adc
scas
mov
dec
pop
test
aas
cmpsb
subl
mov
xchg
or
cmp
xor
pop
test
es
push
mov
repz
inc
xor
loop
daa
xchg
movsb
and
dec
int3
je
cmp
jns
dec
cmp
pop
fdivl
pusha
sbb
fiaddl
inc
fbld
or
test
xchg
jle
out
fisubl
bound
xor
test
push
pop
fimuls
cs
xchg
mov
jb
cmp
add
aas
mov
mov
sbb
es
pop
fucomp
jo
mov
cmp
ret
mov
add
out
xchg
loop
test
dec
lahf
gs
outsl
insl
inc
pop
outsb
mov
shrl
insb
mov
mov
xchg
mov
cmpsb
lds
mov
mov
add
int3
lahf
stos
cmp
pop
jecxz
pushf
enter
dec
and
repnz
movsb
sub
mov
mov
push
jp
imul
pop
ljmp
pop
scas
cmp
lods
iret
std
mov
adc
adc
sarb
add
and
pushf
inc
incl
out
sub
out
xor
or
enter
inc
test
mov
xor
jnp
push
outsl
repnz
mov
adc
or
arpl
mov
jae
pop
pushf
add
gs
aaa
push
fists
inc
addb
mov
ret
sub
loopne
and
mov
movsb
jmp
pop
loop
mov
mov
xchg
loopne
cmpsb
int
jg
xor
xor
movsl
and
xchg
lds
das
jne
mov
mov
pop
and
xor
push
sti
xor
xor
rcrb
lods
fs
mov
xchg
lcall
xchg
xlat
pop
add
shr
push
cs
daa
adc
fldt
movb
mov
pop
sub
mov
adc
cmp
mov
repnz
cmp
pop
mov
popa
lea
mov
popf
movl
in
jno
and
shlb
dec
and
rcrb
pop
hlt
jg
push
ljmp
test
ds
pop
jne
icebp
lods
dec
icebp
push
jns
xchg
inc
insb
or
aaa
or
xor
adc
fwait
je
scas
sbb
cs
xor
push
lods
or
xchg
fcoms
cmp
or
adc
jecxz
mov
loop
ret
sub
add
fists
or
enter
imul
sub
inc
push
pusha
popa
sbb
mov
push
loopne
inc
mov
insl
stos
je
test
or
adc
cli
add
xchg
jb
pushl
outsl
jne
sub
fildll
mov
sbb
or
xorl
sbb
sbb
push
imul
fisubrs
xor
test
push
test
js
xor
sub
mov
mov
and
sbb
mulb
adc
xchg
cltd
mov
sbbl
push
pop
mov
pop
mov
dec
and
mov
cmp
xchg
and
fnstcw
push
out
cmp
mov
jae
mov
cmpsl
inc
repz
mov
add
push
jge
fldpi
dec
iret
push
test
outsl
iret
sarl
inc
loopne
lock
xlat
add
test
lods
js
lock
fs
pusha
pop
fidivl
push
cwtl
sub
and
arpl
rorl
loopne
cwtl
lods
dec
lahf
ds
lock
insb
mov
xchg
insb
mov
gs
xorb
dec
aad
mov
add
fcmovnbe
mov
orb
jmp
xor
and
cmp
pop
std
out
jae
das
sub
inc
je
or
mov
jmp
cmp
test
mov
aas
push
imul
mov
mov
mov
mov
lret
mov
cmp
shrb
fs
cld
pop
push
je
xchg
js
xchg
inc
subl
mov
xchg
sbb
push
lret
test
sub
jp
mov
test
cli
cmpsl
mov
xor
mov
cmp
mov
xor
outsl
fisubrs
push
pop
push
out
push
xlat
mov
dec
and
add
sarl
sbb
add
pop
jg
adc
push
mov
jns
testb
cmpsb
call
push
daa
xor
adc
adc
xor
pushl
mov
add
sarb
xor
and
xchg
lds
fsts
sbb
dec
lea
pop
scas
lss
xor
adc
call
dec
or
adc
into
jecxz
imul
imul
gs
mov
addb
adc
popa
outsl
and
fdiv
xchg
bound
adc
and
or
sahf
push
cltd
pusha
pushf
popf
sbb
or
cld
scas
pop
cmp
add
mov
push
xchg
ja
push
pop
push
out
stc
jecxz
cld
mov
pop
aam
lods
mov
and
and
jne
jg
pop
sahf
in
cmpsl
mov
or
inc
mov
loopne
mov
prefetch
push
pop
and
popaw
add
push
xor
mov
mov
and
mov
ja
mov
adc
add
pop
aam
mov
sahf
sub
pop
push
repnz
dec
dec
insb
data16
or
jo
movsb
loopne
popa
mov
inc
push
dec
aam
and
xor
add
dec
inc
ret
out
leave
mov
pop
hlt
inc
aas
xlat
mov
push
inc
push
pop
aas
lea
fstl
jecxz
mov
push
mov
and
pop
dec
and
int
loopne
mov
or
icebp
pop
jge
shll
jns
jnp
jns
mov
sub
xor
call
cltd
push
hlt
ss
iret
lret
aam
es
jmp
mov
shll
dec
sub
loop
push
popw
jnp
outsl
aas
test
negl
mov
cmc
sbb
pop
jb
movsl
ljmp
inc
and
cmp
mov
outsl
inc
mov
mov
mov
loope
es
xchg
jg
imul
pop
pop
adc
cltd
or
call
jns,pn
jnp
fstpl
add
push
jp
test
test
xor
fcomps
sti
clc
push
addr16
mov
add
movsb
sub
clc
adc
pusha
sti
pushf
add
xor
outsl
add
sub
dec
clc
fs
sbb
int
in
mov
pop
sub
repz
pop
jns
sbb
and
outsb
and
pop
in
ljmp
rol
add
xor
xor
add
pop
cwtl
cli
icebp
sbb
test
push
and
rcrl
faddl
sahf
cwtl
int
ret
and
es
popa
in
int
xchg
nop
mov
test
fsubs
jbe
jno
ficoml
sub
push
mov
mov
dec
pop
movsl
in
aaa
in
and
negb
sbb
jae
sub
inc
popf
sbb
mov
mov
jo
es
xor
pop
add
test
add
mov
sarb
loopne
xorb
out
jl
xchg
sub
shll
jg
in
mov
out
aaa
mov
andl
loope
sahf
mov
mov
iret
leave
loopne
dec
pop
pop
frstor
jae
sub
jmp
cmpb
inc
repnz
lcall
sub
mov
repz
es
fcomps
data16
cs
in
iret
stos
push
adc
fcos
push
aam
movsb
bound
fnstcw
test
shll
adc
inc
and
int
rorl
jne
mov
leave
stc
dec
xor
je
pop
mov
test
out
lcall
jne
dec
push
or
sbb
fwait
pop
pusha
sbb
sub
mov
cmp
mov
xlat
sub
jbe
sbb
iret
sbb
mov
ljmp
mov
jbe
in
push
adc
inc
add
jge
pop
sub
fwait
cmp
pop
xor
push
xor
mull
or
mov
or
mov
repz
dec
mov
mov
sbb
mulb
in
dec
out
mov
iret
dec
adc
es
xlat
addl
jmp
adc
dec
push
pop
cmp
outsl
test
dec
fmull
jp
cmc
sahf
pop
jg
dec
daa
adc
or
jmp
lds
jb
cmp
loope
add
out
ror
scas
ljmp
inc
lret
in
enter
mov
dec
push
call
call
ret
fs
test
sub
inc
addb
dec
xor
imul
loopw
sub
and
or
xchg
scas
movsb
jno
jnp
negl
rcrl
mov
jnp
ret
sbb
insb
stc
rcl
dec
push
push
pusha
fldl
jae
js
pusha
xor
xor
outsb
mov
out
stc
mov
in
jns
pop
and
out
inc
mull
lret
lods
mov
flds
xchg
inc
iret
xor
cs
ret
pop
loop
xchg
or
mov
scas
popa
inc
or
sub
sub
adcl
push
pop
mov
mov
xchg
scas
popf
sbb
sub
cmp
inc
popa
mov
inc
xchg
xor
outsb
adc
leave
arpl
mov
out
pusha
ss
or
dec
inc
mov
aaa
insb
dec
xchg
push
roll
in
jae
jg
dec
mov
jl
dec
outsb
nop
cli
jne
shl
imul
jmp
aad
mov
les
mov
enter
lock
dec
mov
inc
xor
fmull
xchg
xor
addr16
dec
sbb
sbb
movsl
movsb
jp
loope
std
outsl
dec
jle
jno
scas
jecxz
das
pop
xor
add
test
lock
ss
in
out
fs
cmp
inc
pop
push
xorl
or
push
movsl
out
jo
out
jecxz
xor
sbb
jecxz
mov
inc
aaa
xor
in
jecxz
jne
cmpsl
add
pop
test
int3
adc
leave
push
fistl
div
dec
xchg
testl
testl
push
ja
jno
es
xor
fcomi
mov
push
mov
adc
mov
xor
adc
sbb
ss
iret
and
mov
and
push
imul
ja
in
mov
mov
daa
sub
mov
sbb
xchg
fwait
or
mov
inc
add
adc
adc
jmp
icebp
xchg
in
push
xor
xor
lock
stos
cmp
push
cmp
imul
xor
xor
loope
mov
rcl
pop
cmp
xlat
aad
xchg
in
cmp
gs
sarb
inc
ljmp
lock
in
fists
stos
push
mov
mov
lahf
call
inc
fidivrl
jb
shrb
push
inc
mov
xchg
cmp
adc
int3
xchg
loop
push
loop
push
std
xor
mov
xor
xchg
jb
imul
popf
sbb
shl
sti
nop
mov
push
sub
and
sub
les
cmpb
ss
inc
arpl
cli
bound
inc
testl
pop
xor
sarb
bound
int3
xchg
cmp
xchg
mov
ljmp
leave
icebp
std
rcrb
mov
xchg
ficompl
mov
out
xchg
std
mov
sbb
and
loop
jg
lds
mov
stc
notl
mov
mov
or
imul
psrld
jb
aas
xchg
test
xchg
jae
pusha
inc
fadd
jl
out
mov
std
mov
rcr
loope
mov
ds
mov
xor
cmp
imul
add
hlt
mov
add
icebp
fnstsw
cmpl
or
rcrl
imul
adc
inc
pop
int
mov
shll
inc
int3
je
mov
mov
mov
inc
aaa
pop
ja
push
nop
out
fisubl
fwait
imul
push
xchg
ss
pusha
fnstenv
dec
dec
cltd
out
movsl
pushf
loope
movsl
shrl
jle
mov
cmp
or
pop
pop
jmp
push
and
mov
sbb
cltd
inc
rcll
int
sbb
add
sub
and
adc
imul
push
dec
ja
data16
arpl
inc
pop
sub
push
mov
dec
mov
or
orl
les
inc
roll
jnp
dec
cmpsl
call
daa
int3
xchg
hlt
jecxz
lock
xchg
je
nop
cltd
push
leave
push
cli
insb
test
cmp
cld
pusha
xor
cmc
iret
out
psllw
xorl
push
pop
arpl
mov
push
sbb
fisubs
cmc
inc
dec
mov
out
jl
xchg
jnp
imul
jmp
push
jl
or
lahf
mov
iret
xor
inc
push
int3
stos
or
ljmp
ds
pop
mov
ss
addb
lods
ds
mov
out
mov
popa
jns
inc
xor
icebp
sbbb
test
outsl
gs
insb
sti
xlat
adc
ret
mov
lods
stc
adc
test
pop
add
leave
in
jae
add
add
cmpb
jge
sbb
sbb
mov
and
mov
mov
cmpsl
stc
or
fistps
rdmsr
adc
mov
les
pop
cmp
in
addr16
std
adc
pop
loopne
int
add
testl
or
sarb
loope
int3
mov
scas
adc
nop
ljmp
cld
xchg
pop
out
push
push
fistl
or
lock
ret
inc
dec
shrl
sbb
mov
xor
add
push
jae
add
cmp
mov
mov
cltd
mov
test
jecxz
ljmp
arpl
mulb
pop
loope
sbb
out
mov
cmpsb
or
cmc
mov
scas
loope
and
sub
xchg
add
inc
scas
push
outsb
push
std
jb
sbb
loop
and
mov
addr16
imul
jns
adc
push
pop
jecxz
dec
inc
mov
aad
or
push
test
sbb
fs
clc
cmpsl
testl
das
lock
into
mov
shll
not
adc
movsl
dec
inc
ljmp
cmp
push
les
loop
cmp
sub
xor
mov
pop
mov
pop
pop
subl
stos
cmp
jmp
incb
or
mov
mov
mov
lahf
mov
js
test
xchg
ret
jp
add
cmp
push
inc
inc
lret
xor
push
push
jns
notb
jle
popf
test
mov
cmpsl
mov
out
sub
sbb
sbb
jg
aad
pop
inc
mov
mov
mov
int3
dec
jle
orb
and
add
cmp
shlb
cmpsl
sub
pshufw
test
inc
lock
push
sbb
mov
inc
xor
ret
cmc
fsubl
adc
push
push
test
popf
ja
xor
mov
mov
and
daa
add
gs
dec
cmpsb
cmp
add
and
xchg
inc
cmpsb
movsb
jp
addr16
dec
pop
shl
or
dec
ja,pn
test
div
push
insb
fimuls
mov
mov
stos
cmp
jp
lds
sqrtps
enter
push
jp
cmp
rcrl
shlb
mov
push
add
loope
fstl
out
and
dec
jns
in
add
cwtl
pusha
hlt
xchg
daa
inc
sbb
dec
stos
inc
mov
mov
ljmp
inc
push
sbb
and
mov
ljmp
jb
lock
stos
es
stos
decb
aaa
je
ffree
pop
fcmovnu
loop
push
iret
ror
shl
and
and
push
andl
addl
dec
cmc
cltd
xor
mov
es
addr16
aam
ficompl
cs
fdivl
add
cmp
or
ffreep
sahf
test
dec
jae
add
or
sahf
and
mov
cmp
pusha
jbe
sti
mov
dec
and
cmc
jle
scas
or
cmp
imul
loopne
or
test
test
insb
gs
arpl
sarw
in
pop
out
jle
pop
push
ret
inc
stos
push
stos
shl
sub
mov
stc
sub
pop
xor
fstl
idiv
and
jno
hlt
jmp
adc
add
sahf
jmp
jnp
xchg
xlat
add
add
dec
xchg
mov
sbb
shl
mov
pop
jo
cltd
push
pushf
inc
sbb
cmp
sbb
xchg
inc
adc
lea
fisubrl
sbb
test
loopne
sbb
inc
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
or
mov
push
push
mov
sbb
mov
and
mov
adc
mov
mov
and
andl
movl
sbb
movl
sbb
mov
mov
neg
sub
xor
add
mov
sub
add
mov
xor
xorl
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
push
call
jmp
sub
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
push
pushl
call
cmpl
jb
orl
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
subl
sub
sub
mov
or
orl
sbb
mov
and
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
xor
movl
lea
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
call
mov
dec
mov
jmp
lea
sub
mov
sbb
mov
mov
xor
mov
sbbl
xor
xorl
add
mov
mov
mov
mov
add
adc
push
mov
adc
mov
sbb
mov
mov
sub
mov
mov
xor
mov
addl
add
movl
cmp
movl
je
mov
jmp
movl
mov
cmp
movl
jne
push
movl
jmp
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
add
andl
mov
orl
mov
adc
mov
xor
orl
add
movl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
movl
add
cmp
notl
mov
movl
push
je
adc
mov
adcl
add
addl
mov
or
mov
xorl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbb
push
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
movl
push
inc
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
sub
jmp
xor
test
or
loope
lds
subb
int
jb
pop
jb
pop
xchg
push
and
shll
idiv
cmpsb
mov
ds
pop
in
mov
into
scas
lods
icebp
sbb
rep
pop
jmp
ljmp
or
mov
daa
adc
jge
mov
ficomps
sbb
in
cmp
jp
icebp
inc
or
out
mov
repz
dec
and
loopne
sbb
jnp
pop
pop
add
xchg
sub
sub
jecxz
cmp
xor
jbe
pop
mov
push
enter
popf
pusha
lods
shld
xchg
push
pop
sbb
loop
add
xchg
rorl
mov
pushl
jnp
dec
pop
push
xchg
cmc
jb
lds
mov
sbb
cld
pop
mov
repnz
shlb
adc
int
inc
stos
stos
and
fs
int
test
call
cmp
pop
es
popf
fadd
adc
insl
cli
sbb
add
repz
fwait
loopne
inc
jae
lahf
mov
and
xor
loopne
test
cmp
lea
filds
dec
shrb
outsl
adc
mov
push
aam
jge
inc
mov
inc
add
fldcw
push
push
adc
mov
in
mov
xor
pop
xor
xchg
out
push
inc
fstpl
sub
pushf
add
dec
bswap
ret
pushf
cmp
in
sub
xor
xchg
pminsw
sbb
rcrb
cltd
jo
fnstenv
popf
loope
mov
cmp
popf
add
leave
lods
or
sbb
rcrl
jp
test
or
lea
je
inc
lret
sbb
mov
xchg
mov
int
xchg
pushf
roll
add
adc
sub
int3
lock
popf
inc
jo
mov
sbb
rorl
fcom
icebp
repz
das
pop
negl
jae
push
mov
mov
hlt
add
sub
jb
ficoms
pop
in
mov
dec
es
aam
inc
sub
es
mov
or
iret
mov
lods
and
shl
sbb
repz
decl
jecxz
pop
xor
jp
lock
leave
cmp
mov
mov
jb
dec
fnstcw
js
test
xor
mov
add
cmp
test
pop
adc
jecxz
jns
fwait
scas
bound
repnz
sbb
out
mov
mov
add
push
inc
inc
xor
aas
jns
xchg
xor
sub
xor
shr
gs
mov
xchg
sbb
lea
scas
add
sub
cltd
cmp
adc
lahf
icebp
pop
dec
roll
out
xchg
xor
mov
out
cmp
xchg
jmp
test
insl
ss
xchg
leave
sarb
imul
sub
xchg
js
scas
ss
dec
push
cmpsb
test
leave
sub
gs
mov
sahf
scas
cmp
mov
or
ss
cmp
dec
inc
xor
das
jl
mov
add
aas
jns
test
lods
ja
sub
dec
lahf
or
mov
movsb
mov
lret
pop
in
sub
les
nop
mov
subb
jg
mov
scas
or
ja
fwait
cmp
insl
movsl
mov
mov
sub
dec
lods
mov
pushf
push
add
popf
adc
imul
mov
jbe
adc
lea
jno
shrl
xor
cmpsl
sbb
or
rcrl
shll
cltd
je
pop
je
pusha
ljmp
sar
cmp
das
nop
imul
and
xor
mov
adc
lods
xor
sub
jle
sub
loopne
das
jle
inc
jl
add
aad
and
jno
pop
inc
xlat
or
dec
and
ret
inc
mov
cltd
mov
clc
pop
cmc
test
fwait
sbb
cli
nop
mov
mov
adc
xor
imul
sti
inc
xor
fildl
add
test
lsl
adc
jl
and
andl
shl
pop
mov
sub
daa
cmp
clc
push
inc
fmull
aad
fidivs
mulps
popa
hlt
mov
lahf
fwait
stos
sarb
or
lret
mov
jle
les
popa
dec
cmpsl
mov
jb
pop
test
push
sbb
aas
test
pop
in
push
sbb
arpl
inc
mov
mov
out
adc
dec
adcb
mov
mov
push
pop
leave
gs
xlat
int3
push
rcrb
es
repnz
int
int
ret
jbe
pop
test
sub
pop
into
icebp
dec
push
gs
lret
dec
jno
cmpsl
jge
jae
in
sbb
xlat
inc
sbb
jmp
mov
fcmovne
dec
rcrl
xor
mov
jno
mov
cmp
cmpsl
adc
sti
mov
dec
push
mov
pop
loop
outsl
divl
std
and
mov
sbb
scas
lock
cmp
jge
pop
fwait
dec
lcall
inc
inc
popf
cmpsb
push
jno
push
xor
adc
mov
mov
add
push
scas
inc
cmc
das
outsl
shlb
jbe
repz
mov
cmp
add
call
or
aad
or
test
xchg
or
lea
mov
xor
ret
icebp
push
inc
and
loop
imul
cmp
add
outsb
mov
bound
aad
rclb
add
dec
xchg
mull
sub
sbb
out
and
jbe
fucomp
notb
mov
mov
insl
mov
lds
sub
or
inc
add
bound
rorb
je
xchg
cmp
in
scas
sbb
inc
idivb
add
das
lcall
lds
nop
inc
in
push
call
std
outsb
loope
test
rcrb
jg
xor
test
testl
gs
jmp
lds
test
mov
test
dec
lds
scas
inc
test
xor
add
sub
test
hlt
cli
mov
cmpsb
jmp
lahf
xchg
pop
xor
pop
xchg
inc
or
aaa
pop
repz
pop
pop
push
xor
sub
pop
test
dec
mov
jo
mov
daa
fldl
lret
data16
pop
roll
test
enter
adc
jge
jmp
mov
inc
insl
and
sbb
mov
pusha
fnstsw
clc
data16
dec
rcrl
adc
out
jb
xor
clc
in
stc
aad
gs
lcall
mov
jb
lds
lahf
aas
adc
xchg
cmpsb
out
dec
bound
fmuls
mov
mov
push
dec
sbb
jne
iret
sub
mov
or
sbb
sub
dec
push
in
push
mov
out
outsl
cmp
push
jg
cld
inc
inc
cmpsb
and
rcl
les
cld
repnz
xor
mov
jo
loop
repnz
cmpsl
or
cmpsb
outsb
aad
nop
inc
sub
jp
lcall
sbb
jbe
jae
aad
data16
divl
fwait
or
fucomip
test
sub
or
cmc
mov
cmpsb
aaa
call
lahf
xchg
sahf
xor
dec
jbe
popf
xor
lods
iret
or
jecxz
pop
or
jg
mov
aad
jl
sbb
pop
sbb
and
andb
adc
loope
mov
jecxz
loop
push
lret
xor
mul
cmp
cmpsb
insl
out
sub
rorl
add
arpl
repz
mov
inc
shll
add
das
daa
inc
inc
fstpt
js
push
es
shrb
out
cmp
or
adc
push
mov
in
push
test
pop
addl
pop
mov
xor
sbb
das
mov
xchg
cmp
pop
outsb
int
mov
mov
aaa
inc
or
push
lea
imul
lods
fcompl
sbb
loope
xchg
dec
repz
mov
aad
add
pop
push
outsl
lcall
outsb
hlt
pop
lea
imul
push
in
mov
mov
arpl
test
packssdw
cmp
push
jecxz
push
xor
add
cmp
jmp
or
inc
cwtl
cli
scas
outsb
mov
dec
in
ret
sbb
ja
lods
or
or
push
clc
outsb
aad
and
add
pop
dec
dec
add
push
mov
ja
sbb
int3
pop
hlt
adc
jb
dec
mov
enter
or
xorl
cmpsl
lret
xchg
decl
dec
in
dec
in
cmp
call
add
out
jg
inc
loopne
roll
lret
mov
out
dec
dec
push
bound
ja
jmp
adc
testb
popa
sbb
gs
sub
jbe
imul
sub
sbbb
cwtl
orb
xchg
xor
fs
adc
sub
cmp
pop
xor
call
jbe
adc
pop
mov
inc
mov
bound
aad
pop
or
movsb
xor
test
jo
xchg
outsl
hlt
filds
cltd
filds
iret
loopne
popf
mov
add
mov
cmp
les
cltd
out
inc
loop
pop
dec
cmc
jp
push
lods
cwtl
int
mov
sbb
sbb
or
loopne
popa
pop
mov
and
push
test
cmp
mov
mov
jo
sub
imul
mov
mov
addr16
mov
inc
inc
fists
xor
mov
scas
and
mov
and
shlb
adc
hlt
or
adc
dec
xchg
rolb
sbbl
les
xor
mov
adc
out
lret
mov
xor
sub
aaa
out
xchg
sub
dec
fwait
push
jb
lds
jnp
xorb
cld
in
daa
xor
adc
mov
sbb
ss
sbb
or
je
mov
sahf
push
pop
sub
push
es
xchg
js
ljmp
mov
cli
mov
jg
rep
aas
pop
cmp
push
shrb
std
adc
popf
in
lret
loope
ds
fists
pop
repz
sbbl
jmp
push
lods
adc
rolb
repnz
imul
mov
push
sarb
mov
and
dec
jmp
sarb
sub
jnp
test
jmp
insb
loop
aaa
test
jecxz
cmp
mov
shll
jae
aam
int3
outsl
dec
addr16
mov
outsb
enter
jecxz
movsb
dec
sahf
xor
shrl
iret
popf
pop
xchg
add
mov
insb
rorb
mov
scas
fisttps
test
and
orb
pminub
dec
sub
dec
xchg
xchg
ds
cmp
les
pop
imul
jle
xchg
stos
imul
xchg
lcall
int
pop
sub
jbe
pop
jl
sbb
in
cmp
mov
fisubrs
inc
scas
fs
icebp
adc
lcall
into
push
pop
in
inc
int3
push
push
xor
andb
xchg
gs
xchg
mov
mov
and
or
aad
jle
cmp
mov
adc
jnp
imul
xor
mov
out
xor
test
cmc
js
inc
xor
xchg
cmpsl
push
jg
jmp
sbb
cmpsb
push
shlw
inc
xchg
cmp
pop
push
dec
fistl
inc
add
outsb
mov
movsl
fwait
ss
lret
fstps
inc
testb
mov
adc
loop
pop
add
adc
lds
and
xor
add
xchg
test
call
push
es
xlat
inc
shll
cmp
xchg
dec
pop
xor
cld
mov
sbbb
mov
sbb
test
xor
js
inc
fildl
sbb
pop
xchg
inc
mov
add
xor
jo
pop
lcall
sub
pop
jae
insb
bound
push
out
push
and
scas
cwtl
lcall
mov
lahf
ljmp
movsb
xor
insl
xchg
rorb
or
xor
mov
fisubs
aam
rcr
inc
jmp
cmp
orb
or
dec
popf
or
call
test
aas
mov
data16
and
push
mov
push
inc
sysret
sub
jb
inc
mov
mov
jbe
sub
mov
pop
mov
cmp
pusha
lahf
aam
ret
outsl
push
add
subb
test
add
sbb
push
sarl
sub
mov
addr16
add
mov
add
loope
cmp
sbb
adcb
adc
frstor
divb
sub
cmc
mov
loop
int3
lods
in
inc
sahf
movsbl
hlt
int
test
mov
repz
test
sbbb
add
aam
mov
loope
daa
and
push
and
enter
cmp
out
lret
cmpsb
jo
and
fcoms
pop
inc
mov
or
sti
fdivrl
ret
insb
inc
jmp
mov
sbb
jg
jle
inc
dec
mov
xchg
sub
pop
inc
cwtl
test
stos
jnp
arpl
or
cmp
cmp
and
data16
test
or
or
dec
cmp
sar
xorl
inc
sbb
add
int3
inc
inc
xchg
out
lds
dec
xchg
std
cmp
rcll
addr16
nop
jae
aas
push
xor
xor
push
jnp
inc
push
addr16
insb
mov
lahf
cmp
sarb
repz
mov
hlt
fcomp
shl
sbb
pusha
ret
pop
flds
mov
xor
sbb
mov
dec
imul
xor
ss
dec
cmpsb
inc
enter
cmp
cmpl
dec
and
jo
xor
into
lcall
lds
out
sbb
or
pushf
out
ficoms
ds
and
aam
jg
loope
test
or
dec
dec
dec
adcb
stos
dec
je
pop
iret
xchg
fmulp
push
test
dec
xor
pop
fistl
mov
cmp
cmp
cmpsl
xchg
jecxz
incl
xor
lea
stc
xchg
sub
pop
mov
xlat
or
stos
mov
sub
adc
cmp
adc
pop
aaa
jbe
xorl
mov
inc
repz
mov
and
je
repz
pop
jg
cmp
int
dec
ds
or
mov
inc
dec
inc
and
setp
aaa
outsl
das
mov
notb
jae
test
xchg
call
roll
mov
dec
and
lea
pusha
shll
xlat
or
push
pop
xchg
push
cmp
jbe
mov
in
inc
mov
xchg
loope
leave
addr16
sub
xchg
inc
jae
mov
ret
in
xor
cmp
pop
dec
filds
pushf
mov
insl
jbe
mov
jne
mov
push
aad
mov
jbe
out
sarb
mov
cmp
push
add
std
pop
ret
or
mov
loop
ljmp
inc
std
sub
gs
cli
mov
bound
mov
popa
and
mov
test
jmp
int3
add
xor
xchg
pop
hlt
dec
mov
pop
dec
jp
push
outsl
push
mov
mov
jle
xor
mov
inc
inc
out
inc
mov
push
rcr
sub
in
and
inc
add
pop
adc
mul
repnz
pop
jge
push
xor
jg
pop
sub
pop
mov
pmaxub
out
daa
ret
mov
sbb
daa
adc
sub
outsl
sub
hlt
or
add
xchg
je
mov
movl
arpl
ficompl
out
aam
and
push
cmpsl
push
fisttpl
ret
mov
cmpsl
cmp
add
jbe
and
sub
daa
es
jns
or
in
sbb
adc
pop
stc
xchg
lods
ljmp
dec
pop
and
std
and
fldl
cmp
mov
push
inc
jl
xchg
pop
or
rcrb
sub
aaa
imul
mov
movsl
scas
push
arpl
dec
cmc
xchg
das
push
push
or
cmp
shll
ljmp
cmp
ja
pushf
sbb
push
jns
push
test
mov
or
and
push
fnstsw
notl
mov
adc
xchg
jae
mov
out
mov
pop
jbe
dec
cli
fs
ds
pop
sub
mov
lret
les
mov
adc
xlat
and
out
popf
sub
dec
and
loop
or
aaa
rcrb
push
adc
bound
add
mov
jne
xor
in
fcoml
fcmovnbe
adc
inc
or
jmp
pop
or
popf
aad
rol
jae
and
and
xchg
in
jmp
call
adc
into
sbb
and
sbbb
sub
sbb
push
adc
test
mov
bound
imul
call
push
lret
or
cmp
idiv
adc
aas
stc
pop
les
mov
add
cmpsl
sbb
or
xor
lods
xchg
test
scas
pop
mov
xchg
mov
loopne
jnp
xor
xor
xchg
inc
xor
icebp
adcb
adc
imul
sbb
sbb
mov
loop
sub
mov
je
pop
pop
sub
leave
xchg
rcl
lds
sbb
bnd
pop
pop
xor
rsqrtps
pop
pusha
aas
jo
js
ret
push
sbb
and
std
mov
jmp
test
jnp
fbstp
xor
xchg
imul
and
inc
repnz
mov
push
adc
xor
popf
dec
in
call
into
sbbb
cmp
cld
cmc
imul
int
mov
xor
adc
and
lcall
cmpsb
sbb
imul
adc
xor
dec
repnz
mov
ret
cltd
out
lcall
icebp
xchg
out
sub
stos
stos
mov
mov
in
and
cltd
xchg
out
inc
ljmp
jecxz
and
dec
sbb
add
jp
sbb
sbb
inc
lret
imul
adc
fwait
or
into
mov
ljmp
lahf
xor
sahf
ss
pop
lret
dec
andl
cld
lds
push
push
xor
push
les
out
jge
fisubrs
mov
adc
xorb
loope
cmp
std
sub
xor
mov
mov
cmp
inc
xchg
xor
aad
pop
mov
jge
mov
add
into
mov
dec
adc
test
push
add
dec
das
mov
inc
enter
call
jg
pushf
jne
loop
mov
dec
cmp
jbe
jns
cmp
cmp
lock
pop
ja
cld
pop
sub
loop
repnz
lods
arpl
mov
inc
and
push
neg
scas
sahf
fs
add
jp,pn
subb
stc
imul
mov
cmp
aas
shlb
mov
dec
lret
xchg
pop
lea
add
fcompl
repz
int
lret
cmp
mov
outsb
inc
dec
negb
pop
and
popf
shl
jmp
pushf
jmp
xchg
xlat
insb
cs
dec
sbb
je
pop
sub
sbb
dec
int3
mov
mov
mov
jne
mov
push
in
xchg
inc
push
or
ret
in
pop
mov
jle
out
fs
enter
mov
dec
xor
dec
push
xchg
jge
cli
insl
push
loope
pop
in
mov
arpl
daa
cmpsl
add
and
inc
inc
add
in
popa
jb
jnp
lahf
pushf
call
jae
push
pop
fdivp
pop
outsl
xchg
jbe
std
imul
out
pushf
cmc
add
das
shlb
add
xlat
pop
mov
xchg
inc
dec
inc
imul
jo
mov
sti
icebp
lods
dec
jae
dec
xlat
ret
add
fucomi
jmp
sub
xlat
push
or
mov
test
insl
mov
addr16
test
sbb
pop
adc
call
ret
add
out
ds
in
gs
mov
ficoml
nop
daa
xor
insl
jne
xchg
cmp
add
in
inc
xor
xchg
test
outsb
mov
add
lcall
xchg
jb
mov
jg
mov
aam
ss
or
cmpsl
add
imul
xor
push
in
aaa
add
add
xchg
xchg
jmp
and
int3
mov
mov
test
in
fdivrl
int
fdivl
jnp
and
mov
or
push
daa
add
xor
adc
cmp
add
repz
rolb
xor
out
aad
cmp
mov
aaa
mov
fisubl
xchg
sub
insl
pop
int3
cli
inc
loop
gs
iret
dec
push
sbb
jmp
out
inc
xchg
inc
adc
addl
push
cmp
mov
lds
lods
mov
dec
and
push
jecxz
int3
mov
fs
adc
sbb
in
aas
test
test
pop
dec
adc
stos
lds
lock
nop
ret
mov
and
mov
mov
inc
fs
rolb
jbe
jae
jns
inc
stc
gs
cmp
and
lahf
call
push
enter
xor
jnp
push
aad
pushf
leave
imul
test
jg
lea
xchg
sub
xor
or
sbb
andl
stos
arpl
inc
jmp
sar
call
je
inc
fucom
aam
mov
inc
push
lret
xor
test
jle
int3
pop
push
cmpsl
jno,pt
fsubrs
inc
fidivs
jbe
cmc
stos
or
std
pop
stc
and
or
outsl
shrb
fs
sti
cld
pop
nop
popa
mov
cmp
jecxz
push
xor
mov
cmc
imul
bound
mov
cmp
out
fwait
hlt
test
idiv
push
or
xchg
xchg
xchg
es
sti
test
in
inc
ja
push
out
jno
or
popf
mov
mov
xchg
mov
sub
sbb
out
jmp
sbb
mov
sbb
dec
dec
dec
loop
xor
add
jle
in
cli
pop
addb
sub
xor
aam
sbb
outsl
lods
lahf
or
repnz
fnstenv
push
into
fdivl
mov
fiaddl
leave
and
cmp
mov
repz
xchg
push
fs
pop
mov
sub
pop
addr16
int3
filds
add
cmp
ja
inc
pop
mov
popa
cmp
xchg
sub
insl
outsb
shr
fadds
scas
loopne
push
xchg
not
sbb
inc
adc
fcmovne
jmp
add
push
loopne
test
sub
pop
testl
imul
flds
ds
mov
or
sbbl
mov
jno
jp
test
std
call
int3
aam
mov
mov
into
pusha
jne
orb
je
pushf
cmp
xchg
shll
inc
jo
stos
aaa
push
rol
stos
add
lock
push
sbb
xor
int
sub
cmp
fcmovnu
sbb
cwtl
push
fstps
aad
jmp
fadds
sbb
adc
xlat
xchg
sub
add
mov
fwait
jbe
test
push
mov
fwait
into
in
mov
pop
sub
popf
sti
mov
dec
jnp
clc
imul
push
bound
stc
in
andb
push
shrl
out
test
mov
bound
sarb
dec
imul
adc
rcrb
lods
push
ja
push
fidivrs
fildll
jbe
jg
lcall
cmp
mov
cmp
es
imul
xchg
sub
adc
ss
xchg
mov
aad
mov
inc
test
mov
xchg
xchg
popa
inc
in
cmc
xchg
mov
fnstenv
pop
mov
and
mov
aad
imul
mov
stos
movsb
inc
cltd
aad
fwait
add
pop
mov
push
jnp
cwtl
xor
pop
dec
or
cmpb
out
mov
lret
pop
cs
cmpsb
imul
nop
ds
ss
adc
mov
lods
int3
movl
xchg
adc
hlt
dec
je
jmp
cli
data16
inc
cmpsb
xchg
outsb
adc
or
mov
xchg
cs
or
or
je
out
and
stos
pop
pop
mov
adc
or
ffree
xchg
cmpl
out
fistpl
push
sub
and
adc
push
xchg
addr16
jmp
push
mov
mov
or
sbb
pop
dec
ret
out
cmp
ds
cmp
jle
pushf
fbstp
xchg
cli
into
xchg
out
pop
cmp
test
in
in
xchg
mov
out
cmp
push
inc
movsl
dec
xchg
and
push
fiaddl
aaa
xchg
mov
jl
int
mul
in
pop
cmpsl
ret
jae
in
or
rcrl
stos
xchg
arpl
data16
add
add
pop
adc
inc
mov
and
jae
cmp
or
add
sbb
fstpt
imul
stc
cmp
rcrb
test
aad
scas
mov
adc
in
fiadds
aad
cmp
inc
sub
imul
out
repnz
add
enter
sub
aam
je
xchg
and
dec
test
imul
dec
cmpsl
hlt
mov
xchg
mov
xchg
fisttpll
ret
sti
repz
xchg
cld
adcl
adc
pop
xchg
divb
test
jecxz
inc
mov
push
mov
add
cltd
or
jno
and
pop
sbb
das
pop
ficomps
enter
out
mov
push
sub
popf
out
push
gs
aas
cmp
nop
test
gs
sub
dec
xchg
sbb
jg
rclb
pop
xchg
cmc
or
icebp
cltd
bound
xor
cmp
push
sub
sub
repz
jb
jbe
cmp
ret
sub
cld
jns
gs
xchg
adc
jl
repz
imul
lds
hlt
push
mov
xchg
mov
xchg
mov
and
and
and
mov
cwtl
lea
push
push
pop
xchg
frstor
sbb
aad
out
scas
add
cmp
and
in
shll
mov
sarl
test
jl
push
ja
mov
mov
add
sbb
shll
and
movb
sbb
adc
enter
or
jnp
fstpt
cmp
inc
in
xor
jmp
lods
pop
loop
xor
add
leave
pop
cmp
out
lods
xchg
enter
sbb
sub
pop
or
repz
sub
cli
pop
das
sarb
mov
fimull
repnz
outsb
leave
lahf
xor
pop
jp
push
hlt
das
xor
aas
pop
subb
push
xor
stc
dec
dec
dec
inc
or
xchg
lods
test
mov
or
pushf
insl
je
jg
add
push
flds
mov
je
pop
test
in
inc
or
pusha
mov
popa
xor
mov
les
push
cwtl
mov
or
dec
mov
rol
sbb
cmpl
adc
aam
dec
sbb
adc
aaa
mov
push
inc
push
movsl
dec
faddl
mov
in
shlb
sti
xor
jge
cmpsl
xchg
pop
lock
dec
gs
fcoml
fsubl
insl
cmp
lock
mov
and
mov
js
sbb
loopne
js
pop
jo
loope
jmp
cmp
psubd
lock
stc
loopne
dec
dec
rcrl
ficomps
ja
xor
mov
add
fmull
push
sahf
loopne
xchg
mov
mov
mov
mov
cwtl
xchg
mov
mov
cli
dec
arpl
ja
ljmp
iret
add
add
xor
push
je
jecxz
andl
add
arpl
pop
shll
mov
dec
xchg
ja,pn
aas
cmpsl
daa
ror
add
aad
mov
lds
cltd
inc
push
lahf
inc
clc
jl
test
hlt
arpl
push
hlt
push
jae
bound
pop
fcoml
add
adc
clc
inc
mov
shrl
mov
ss
cmp
aas
xchg
insb
leave
sub
enter
iret
cld
dec
mov
arpl
stos
adc
push
pop
xor
sti
push
sbbb
jge
ja
iret
dec
pushf
push
mov
frstor
ret
mov
cltd
cltd
notb
cmp
loopne
mov
lret
xor
jno
in
bnd
adc
in
push
sub
xor
or
mov
sbb
xchg
fs
stc
cld
mov
mov
scas
dec
xlat
jb
daa
and
dec
sbb
lcall
aad
sub
stos
xor
xor
or
sbb
sarl
std
sahf
js
leave
sbb
pop
imul
xchg
dec
call
adc
out
xchg
int3
cmp
jmp
xor
ss
dec
pushf
stos
push
aas
mov
push
and
loope
popa
sub
sahf
push
setbe
out
fidivrl
repnz
jns
mov
add
push
or
pusha
int3
pop
fnsave
push
stos
popa
add
dec
dec
iret
push
jno
mov
call
leave
aad
sub
sub
aad
xchg
xchg
lock
out
lcall
jae
mov
pusha
fabs
cld
add
fwait
mov
xor
in
int3
jge
stos
dec
fdivs
pop
dec
repz
jecxz
jmp
xor
repz
ljmp
sub
inc
jle
data16
aad
das
or
insl
out
dec
mov
xchg
sbb
sbb
jno
cmp
jo
jno
push
push
inc
inc
sbb
fst
sahf
and
push
pop
lods
popf
popf
jle
sbb
add
ss
mov
shll
subl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
subl
add
adcl
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
mov
adcl
xor
mov
add
inc
movzwl
mov
xor
movb
lea
or
mov
sbb
mov
mov
addl
xor
orl
sub
orl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
push
movl
xor
mov
movzwl
sbb
push
adcl
mov
adcl
xor
mov
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
mov
movl
xor
sbbl
jmp
and
mov
fwait
sbb
dec
movsb
jecxz
jb
rcrb
jb
lcall
int
popf
xchg
dec
mov
jle
inc
movsl
cmpsl
mov
mov
inc
adc
push
call
repnz
mov
pop
xlat
or
add
out
outsl
std
push
popf
rcl
mov
lock
in
test
inc
out
outsl
add
test
lock
loope
mov
fildll
cld
int3
mov
mov
xlat
mov
pop
mov
jp
add
mov
push
fnstcw
inc
mov
pop
push
or
mov
jecxz
divl
sub
aam
test
rol
push
ljmp
push
cmp
mov
or
dec
shll
jae
push
aaa
mov
pop
scas
addl
or
push
pop
xchg
ds
movsl
in
sbb
pop
js
popa
lea
je
pop
cwtl
jecxz
mov
scas
cmpsb
int
scas
jle
or
icebp
sahf
sub
sub
cmp
hlt
test
imul
jo
jl
inc
mulb
mov
push
repnz
call
sub
push
xchg
inc
loop
in
sti
and
mov
cwtl
mov
lods
cmp
stos
sahf
gs
jno
mov
mov
stc
push
cmpsb
mull
test
pop
jecxz
jnp
insl
stos
daa
push
dec
loop
jecxz
push
ds
ffree
in
xlat
push
gs
outsb
add
nop
stos
ja
sbb
mov
xor
orl
sbb
das
fldl
clc
negl
pusha
movsl
cmp
or
das
lock
push
hlt
lods
notb
in
mov
pushf
jg
nop
mov
mov
xor
sub
out
mov
mov
icebp
or
push
xor
push
repnz
push
xchg
int3
push
adc
add
xchg
enter
adc
mov
dec
jno
mov
push
shll
dec
shl
popf
lds
mov
jns
sti
pop
cmp
push
mov
dec
cltd
and
fnsave
out
mov
les
orl
jno
push
add
fisttpll
pop
cwtl
cwtl
inc
loop
and
stos
pop
es
lea
ret
ret
jns
sbb
sbb
mov
lret
insl
add
adc
lcall
mov
ret
add
push
pop
js
orb
out
or
div
outsb
test
mov
mov
inc
xchg
into
out
sbb
sbb
xchg
lret
sub
das
fiadds
mov
pop
xor
ret
or
sbb
in
jmp
into
add
lret
sub
imul
ljmp
ror
icebp
outsl
movsb
adc
jle
dec
lret
rorb
cmp
or
pop
adc
lods
int3
test
mov
clc
cmp
sbb
fs
sbb
or
lods
mov
in
dec
in
hlt
fildll
adc
out
inc
pop
mov
cltd
lds
iret
ret
sbb
lcall
das
pop
aad
jne
mov
jg
int
sbb
adc
xlat
repnz
mov
stos
inc
addr16
mov
pop
imul
and
nopl
je
xchg
ret
jg
jne
cmp
xor
sub
sub
mov
or
mov
push
jae
arpl
inc
std
pop
pop
cmp
sub
repz
lret
rcl
push
roll
adc
shll
lods
sub
push
cmpsl
pop
inc
arpl
adc
insl
adc
mov
jmp
pop
in
adc
jmp
fiaddl
and
mov
mov
sbb
push
jle
mov
sub
push
dec
fldt
xchg
cmp
call
dec
insl
push
xchg
xor
shrb
pop
jb
push
rcr
aaa
fmull
cmp
jge
sar
xchg
adc
adc
lea
inc
lret
xor
fcomi
and
cmp
inc
movsl
lret
sub
lret
mov
pushf
lea
sub
adc
pop
stos
insb
stos
shrl
jbe
inc
shl
filds
insl
mov
xchg
imul
je
filds
fcmovu
popf
or
jnp
lcall
xchg
mov
add
pop
test
out
std
out
fsts
jecxz
sbb
xchg
clc
inc
pop
pop
out
stc
mov
test
jbe
popf
and
adc
sbb
jo
or
jns
sbb
dec
inc
in
mov
sub
mov
adc
mov
mov
dec
ret
es
cli
insb
ljmp
push
adc
aaa
pop
mov
test
dec
rclb
jnp
scas
les
mov
ss
in
mov
inc
dec
mov
jl
into
imulb
es
movsl
inc
cmpl
dec
daa
cmpsb
push
loope
loope
mov
enter
test
mov
icebp
pop
gs
cltd
sub
pop
xor
cmc
adc
dec
call
insb
push
movsl
jecxz
push
rcr
pop
int
jns
sub
addr16
dec
mov
xlat
fidivrs
pop
mov
add
mov
stc
cltd
pop
imul
pop
in
cmpsb
inc
fwait
mov
or
fdivrs
in
pop
jo
and
jl
enter
insl
addb
sbb
cwtl
pop
xchg
adc
popa
subl
sbb
mov
dec
ljmp
sub
test
lock
xor
popf
xor
inc
popf
lods
es
lock
dec
stc
mov
xchg
or
les
sub
sub
dec
rcll
aaa
cmp
fwait
push
out
out
jne
xchg
test
roll
mov
shll
mov
xchg
add
mov
stos
fistl
sbb
adc
add
xchg
idivb
fcomps
inc
test
insl
and
pusha
daa
shrl
dec
pop
add
xchg
out
sub
mov
popa
mov
or
cmc
fldenv
rolb
mov
sub
cmpsl
or
stos
and
loopne
adcb
sbb
or
jno
dec
inc
test
rcll
dec
pop
xchg
loope
popf
and
sbb
jecxz
ret
ljmp
cld
cmp
pop
cmpsb
xor
or
lcall
scas
repnz
imul
push
call
or
fsubl
mov
sub
cmp
lcall
cmpsb
add
mov
xchg
outsb
inc
lret
outsb
xlat
repnz
mov
dec
cltd
cmpb
mov
fisubs
pop
movsl
push
pop
cli
test
xlat
or
test
into
pop
jl
xchg
sbbb
mov
out
push
pop
push
push
test
sbb
nop
orl
xor
mov
leave
cmpsb
mov
jnp
adc
jne
fcompl
jg
dec
insb
cmp
or
rol
and
sbb
jl
pop
inc
pushf
addb
aam
out
in
fxch
aad
add
add
cmc
mov
scas
inc
cs
rorl
out
insb
adc
xchg
out
pop
pop
push
popf
jmp
in
lea
jns
and
lods
push
mov
pop
repnz
mov
xor
int3
dec
pop
lea
adc
lret
jno
aad
jg
inc
outsb
addr16
imul
mov
jns
or
and
add
dec
test
into
sti
cmp
lock
sbb
inc
fs
fs
and
popf
pop
divb
mov
fwait
add
lcall
xchg
sbb
mov
xorb
lods
aam
or
dec
js
jae
sbb
out
pop
jle
sbb
push
sti
and
dec
js
pop
loope
push
js
ret
shll
pop
sarb
adc
mov
sub
jnp
test
sbb
scas
insl
push
dec
lret
or
std
ljmp
sbb
outsb
xor
fisubl
or
roll
outsb
cmp
aaa
mov
jmp
arpl
push
cli
pop
pop
leave
add
inc
scas
push
daa
push
xor
jne
add
out
out
and
ror
leave
mov
in
xchg
inc
repnz
jle
std
push
push
out
int
cmpsb
test
mov
push
clc
leave
xchg
bound
xlat
sub
shrb
push
out
push
jecxz
ss
jecxz
add
mov
cwtl
mov
mov
sahf
jbe
ljmp
movsb
sub
cmp
roll
or
sub
shl
and
sbb
movsb
mov
icebp
jb
int3
dec
outsb
int
pop
adc
pop
clc
inc
ljmp
sub
cmp
scas
int
lcall
mov
aaa
cld
xorl
add
ljmp
dec
addr16
cmpsl
xchg
and
fs
and
pop
mov
out
xlat
cmp
cmp
pop
stos
inc
pop
pop
lock
ja
outsl
adc
repnz
mov
xchg
out
adcb
nop
mov
vpsubusw
loop
call
rcrb
push
loopne
imul
adc
adc
js
fildl
sbb
loope
lds
sbb
or
sbb
push
shr
xor
jecxz
inc
sbb
sti
cwtl
lret
cwtl
rcll
bound
into
mov
mov
push
es
out
roll
xor
xchg
mov
dec
mov
cmp
jmp
xchg
mov
in
sub
or
lret
and
rolb
mov
lcall
gs
push
cmc
lret
lea
fmuls
jns
mov
xor
pop
fstps
clc
dec
in
imul
xchg
lahf
pop
mov
das
iret
repnz
mov
sbb
mov
mov
das
cmp
cld
std
sub
mov
icebp
xor
push
cltd
je
inc
mov
pop
adcl
mov
mov
jnp
cwtl
out
xchg
sub
xor
sbb
jbe
xchg
and
stos
adc
and
mov
adc
inc
mov
outsl
loopne
cwtl
adcb
cld
inc
inc
ret
addl
lods
xlat
cmp
pop
js
fwait
inc
addr16
sarl
fs
dec
fldl
jne
addr16
inc
add
mulb
aam
call
mul
pop
mov
adc
cmc
sbb
jb
mov
mov
shr
ja
pop
jae
bound
inc
xor
pop
mov
mov
negl
aad
bound
mov
fwait
lcall
pusha
dec
repz
and
mov
in
dec
inc
mov
repz
pop
mov
dec
stc
push
pop
insl
lea
cmp
dec
std
ret
cmpsb
cmpsl
ljmp
lods
leave
add
out
dec
popf
mov
pop
loope
stc
and
ret
lcall
mov
add
ljmp
mov
add
push
xchg
mov
lcall
xchg
lcall
repnz
and
insb
aaa
iret
sbb
gs
clc
adc
xchg
lods
loopne
xchg
xchg
sub
repnz
scas
push
dec
and
inc
outsb
rcrb
or
icebp
int3
xchg
mov
inc
jl
add
jge
jl
dec
in
ret
int
jb
xorl
insb
inc
test
test
mov
div
cmpsb
inc
rcl
fldenvs
cmpsl
pushf
or
mov
call
enter
fstpt
jnp
sbb
lods
inc
insb
or
and
pushf
fadd
movsb
mov
and
stc
lds
mov
mov
inc
imul
mov
ss
clc
dec
sti
int3
les
fcoms
outsb
adcl
ljmp
fldenv
sahf
mov
jl
jecxz
fcoms
outsb
dec
xchg
aaa
int
jne
ja
xchg
rol
adc
add
rcl
shrl
adc
and
int3
mov
testb
loope
aad
inc
test
mov
lds
adc
jnp
pop
fdivs
repnz
and
ret
aas
sbb
subb
sbb
adcl
push
loope
insl
inc
cmpsb
out
mov
xorl
sbb
imul
inc
lret
lea
fildl
xchg
imul
fcomp
fisubl
or
pop
adc
and
ror
stos
cmpsl
lret
mov
mov
movsl
repnz
xchg
arpl
and
insl
lahf
push
mov
mov
out
add
xor
lahf
addb
fdivs
jnp
jbe
enter
push
or
daa
or
jmp
xchg
cmp
mov
fs
mov
mov
adc
leave
int
xor
sub
out
pushf
popf
daa
stos
lret
mov
outsl
mov
fsts
jns
mov
jne
loope
icebp
out
sbb
mov
adc
pop
addr16
sahf
push
shlb
pop
add
imul
cwtl
dec
jge
cmp
out
iret
jbe
subl
push
mov
int3
pop
js
push
in
add
sub
inc
sub
adc
mov
push
stos
int3
cmp
in
aaa
in
dec
popf
outsb
dec
lret
mov
pop
cmp
jns
jns
cli
push
adc
lret
mov
mov
cmp
hlt
jle
mov
push
pop
pop
scas
sbb
adc
aaa
loopne
js
or
arpl
into
xchg
push
mov
frstor
jae
dec
leave
fnsave
sub
jbe
pop
dec
mov
addr16
leave
jne
mov
addr16
and
or
mov
cli
ljmp
pop
xchg
mov
mov
pop
mov
sub
dec
mov
fs
daa
addr16
jmp
stc
fsts
jb
push
cwtl
clc
test
xchg
fdivr
imul
adc
loopne
lret
inc
and
jae
rcrl
idivl
loope
enter
jmp
mov
push
xchg
rclb
xchg
adc
in
fdivl
xchg
add
xlat
mov
std
inc
add
jo
sub
cmpsl
pop
inc
scas
in
cwtl
xor
arpl
aaa
outsl
mov
aaa
cltd
loope
sub
dec
daa
in
adc
imulb
and
imul
pop
jb
pop
stos
sbb
dec
cmp
rcrb
stos
or
sahf
push
adc
fsubl
push
ds
mov
ss
aam
test
sti
fidivrl
pop
dec
rolb
shll
test
out
frstor
mov
lret
pop
fbld
es
sbb
adc
arpl
dec
int
jbe
dec
sub
fisttpl
jb
in
jnp
xchg
cmpsb
hlt
in
pop
negb
fiadds
cmp
test
ret
or
xchg
sbb
adc
scas
jg
mov
jle
pop
mov
adc
dec
ret
sbb
and
popa
imul
push
xor
mov
sti
mov
sbbb
std
xor
jb
xchg
mov
cmp
push
ret
hlt
dec
insl
pop
cld
sub
orl
pop
addr16
jmp
cmpb
adc
and
cld
les
in
fwait
les
repz
gs
jo
dec
xchg
out
aad
jle
loope
adc
out
jo
outsb
cld
sub
add
sbb
loop
je
insb
dec
push
xchg
lahf
xchg
into
popa
dec
icebp
das
sahf
imul
test
sar
sub
pop
inc
ret
mov
jg
pop
jg
xor
cwtl
mov
mov
cmpsb
mov
push
cwtl
mov
and
dec
mov
scas
mov
jge
aas
and
es
btsl
mov
imul
mov
stc
xorl
rolb
mov
in
push
inc
pop
mov
iret
pushf
enter
dec
xchg
testb
push
sub
lret
in
xchg
ss
or
xchg
xlat
int
mov
aaa
shrb
loope
dec
decb
dec
cmp
ja
je
pop
stos
data16
lret
pushf
pop
mov
shll
sbb
call
ds
xor
hlt
sahf
and
mov
cs
mov
repz
insb
sub
mov
jle
scas
dec
mov
push
shlb
xchg
xchg
and
and
mov
jmp
fld
jmp
adc
xchg
dec
push
cwtl
shll
dec
jno
pop
daa
clc
mov
pop
aam
cltd
ljmpw
insl
int
loope
lcall
and
push
mov
jnp
xor
push
shll
ljmp
pop
leave
pop
push
pop
push
outsb
out
push
mov
in
cmp
sets
mov
mov
sbb
push
es
mov
inc
cmp
shrl
mov
mov
not
mov
sub
ret
adc
mov
popf
pop
aam
hlt
pop
sbb
cmc
and
cmp
cmc
pcmpeqb
daa
cmp
popa
push
pop
or
cwtl
call
mov
pop
push
cmpsl
add
test
mov
inc
sub
mov
out
lret
stos
jae
hlt
int
push
push
or
mov
sub
mov
or
cmpsb
mov
fsubl
add
pop
xchg
sbb
fsubrl
shll
aam
xchg
pop
gs
aaa
and
stos
pop
repnz
loop
test
cmp
pop
mov
push
mov
lods
scas
ficoml
xchg
insb
sti
sbb
push
mov
mov
lods
mov
repnz
cltd
lock
fs
shrl
dec
xchg
and
fdiv
inc
pop
push
push
mov
cli
add
loopne
lods
out
in
sahf
cmp
mov
je
rcrb
jge
fdivrl
jmp
cmp
lcall
jbe
outsl
mov
iret
pmullw
xchg
fs
cmp
lods
adc
sub
mov
clc
adc
in
js
loopne
cld
sti
sub
andb
or
push
sbb
aam
jg
addl
out
pop
pushf
popl
xchg
and
dec
mov
fstpt
lret
jb
pop
pop
in
cld
xchg
jae
cld
fimull
iret
lahf
cmp
aaa
xchg
incb
adc
lea
lcall
aad
jg
adc
sqrtps
mov
sbb
imulb
push
sub
lds
or
xor
hlt
push
sbb
adc
outsl
clc
inc
mov
imul
fwait
cmp
pop
inc
enter
fsub
and
push
push
lret
xchg
cmpsb
iret
sub
pushf
loopne
test
and
stos
jae
pusha
mov
shrb
inc
pop
or
jo
mov
xchg
mov
aas
inc
ds
cld
sbb
adc
fsubrl
addr16
push
fstpt
repz
and
addr16
outsl
sti
ret
les
sbb
sub
inc
fcomps
xor
scas
inc
xchg
leave
test
sub
add
jae
xlat
cs
cs
jge
loope
inc
push
jb
dec
dec
arpl
xchg
adc
xchg
dec
dec
sub
add
xlat
insb
xlat
mov
in
mov
inc
or
dec
leave
xor
popa
lret
arpl
fsubl
dec
or
or
or
dec
inc
jl
sbb
das
in
nop
pop
sbb
testl
arpl
lds
iret
cmp
and
divb
xchg
ret
lods
sub
lds
lock
mov
xchg
cmpsb
je
jae
xchg
jg
daa
lret
xchg
cmpsb
idiv
push
cwtl
and
test
xor
xchg
add
xor
loop
xchg
dec
and
sbb
aas
push
cld
repz
jmp
pop
xchg
rcrb
int
shl
leave
or
mov
lods
movsb
push
clc
push
sahf
push
outsl
mov
mov
cli
add
and
sbb
lahf
cld
jno
jl
cmp
dec
fistpl
push
mov
aas
jae
mov
mov
sarl
adc
xchg
sarb
mov
cltd
pop
mov
xor
in
rorb
jg
jne
lret
out
adc
jnp
mov
dec
xor
out
inc
subb
or
jmp
ljmp
lds
movsl
in
add
addb
jl
xlat
js
xor
xchg
scas
mov
dec
or
mov
mov
leave
call
adc
pusha
pop
sub
das
fimull
mull
cmp
cmp
add
arpl
test
scas
cmp
cmp
enter
je
mov
imul
fstl
shl
rorl
pop
enter
sub
cmp
or
mulb
bound
add
cmp
pop
pop
sub
xchg
adc
and
pop
cld
test
dec
mov
popa
xchg
dec
ss
addb
cli
or
fsubp
arpl
ja
mov
xchg
pop
mov
movsl
orl
loopne
lds
xor
fildll
or
adc
jg
shl
add
or
inc
les
out
inc
std
dec
push
cmc
fistpll
sahf
lds
test
dec
dec
or
add
xchg
cmp
sub
stos
std
fmull
gs
push
xchg
and
pushf
andb
sbb
adc
fxch
retw
stos
jbe
cmp
fmul
ss
cmpsb
call
mov
cmc
jae
add
jge
ret
ficompl
filds
dec
pop
out
lahf
pop
imul
jl
aad
or
xchg
js
add
incl
icebp
sub
inc
inc
jge
fcoml
stos
in
push
mov
out
out
jb
add
xor
cmpsl
or
mov
into
lret
pop
or
cmp
les
xchg
jo
cld
push
add
int
adc
outsb
push
adc
std
jp
jns
mov
push
cmp
mov
addl
mov
inc
push
push
xor
je
xchg
push
in
adc
mov
or
mov
sqrtps
stos
mov
mov
lea
addb
inc
and
dec
push
hlt
or
enter
mov
xor
lock
notb
popf
xchg
fisubrl
jmp
cvtpi2ps
mov
add
shl
jp
test
shl
popf
dec
cmpsb
push
in
scas
inc
xchg
adc
ss
fs
or
outsl
rcl
es
jns
and
mov
add
pop
xchg
mov
xor
arpl
mov
fisubrl
cmpsb
popa
sbb
add
cmpsb
jge
adc
pop
push
cmp
clc
mov
test
cmp
push
popf
ljmp
int3
shr
scas
xchg
into
push
xlat
mov
mov
frstor
xor
lret
and
movsl
popa
imul
hlt
pop
cltd
mov
dec
and
sub
cmp
daa
cmp
jmp
mov
in
aam
push
in
shll
out
jmp
cmp
xchg
out
add
cli
push
push
lret
data16
dec
stc
push
jecxz
inc
mov
dec
std
add
outsb
ljmp
stos
mov
movl
mov
pop
scas
imul
shlb
stc
xchg
bound
loop
pusha
or
lock
pop
andl
scas
cld
out
adc
mov
xchg
out
xchg
jns
out
fcoms
xchg
pop
test
rolb
mov
cmpsb
mov
imul
repnz
addl
aaa
adc
fs
push
mov
mov
mov
fcoms
ljmp
rdpmc
or
mov
pop
lret
cs
xor
scas
pop
add
out
sub
cmpsb
mov
xchg
xor
push
push
sbb
cmc
fcmovnu
mov
push
pushf
cmp
aad
xchg
in
add
lahf
inc
popa
push
movsl
lahf
xor
jbe
dec
xor
push
out
push
outsl
and
cmpsb
or
xchg
fistl
or
rorb
mov
fcmovb
subl
js
push
cmc
jbe
mov
sub
inc
cmpsl
lcall
lock
mov
xor
scas
ficoms
pop
mov
add
pop
pop
arpl
push
ficoml
inc
push
cld
push
jnp
mov
dec
mov
xchg
inc
adc
and
inc
sti
sti
xor
movsb
es
stc
sub
add
mov
js
fstpl
fs
pop
mov
sub
push
div
pcmpgtd
rorb
rcrb
shlb
sub
movsb
jns
fimuls
push
aas
xor
xor
imul
data16
cmp
sbb
adc
xchg
add
mov
rcl
inc
fldcw
xlat
pop
movsb
out
push
inc
pop
cs
and
popa
movsl
mov
or
les
scas
cs
add
faddl
scas
xchg
push
sub
push
inc
pop
mov
call
leave
clc
in
es
data16
mov
push
scas
cmpsb
push
push
pushf
movsl
cmp
les
scas
push
mov
fidivrs
and
outsl
mov
mov
insl
pop
xor
inc
cmp
inc
inc
imul
int
or
cltd
inc
add
xor
add
les
ljmp
ficompl
mov
sub
mov
je
dec
jecxz
mov
adc
pusha
dec
mov
xchg
jno
mov
inc
outsb
arpl
negb
mov
mov
add
xchg
xor
mov
loopne
iret
loopne
lahf
jge
scas
fistpll
sbb
gs
cli
mov
push
lret
or
pop
inc
mov
test
adc
clc
mov
mov
dec
cld
inc
xchg
les
sub
imul
sbb
pop
aas
inc
add
repnz
xchg
mov
mov
faddp
out
add
cwtl
testl
fdivrl
push
icebp
jg
sub
inc
push
and
sti
aam
je
sarb
mov
imul
fsubp
cld
frstor
clc
imul
ja
icebp
pop
sbb
negl
rclb
fadds
pop
stos
cld
dec
sub
fisttps
push
ljmp
dec
dec
cmp
shrl
mov
test
mov
iret
dec
addl
icebp
stos
sbb
xor
repz
inc
icebp
sub
sub
test
cli
jl
cmp
inc
mov
and
xchg
ljmp
lods
mov
mov
repnz
and
dec
clc
fs
arpl
arpl
and
lea
mov
adc
inc
dec
cltd
xor
mov
xchg
in
xchg
jle
xchg
xchg
test
mov
bnd
pop
xchg
jo
adc
pop
cs
and
mov
addr16
call
aaa
popf
jp
push
sbb
ljmp
jbe
push
mov
ret
into
jbe
dec
jp
mov
inc
pop
js
mov
mov
pop
xor
fisttpll
inc
add
add
dec
es
call
aad
repz
xchg
lret
jnp
jg
lret
insl
lahf
adc
les
fadds
fucomip
hlt
in
es
and
inc
cmpsb
mov
pop
mov
nop
jb
lods
shll
insb
test
fsubrp
sub
pop
stos
push
sbb
sub
sub
adc
ret
or
adc
mov
loop
adc
andb
adc
rorb
inc
mov
cmp
inc
mov
in
jb
push
inc
mov
test
sbb
in
ljmp
ret
movsb
pop
xchg
or
add
repnz
dec
dec
xchg
push
bound
das
leave
loopne
jmp
or
hlt
loopne
mov
das
pop
sub
cmpsl
jbe
push
or
nop
rclb
stos
inc
sub
cmp
jl
dec
shrl
mov
in
adc
mov
pop
ja
sarl
and
adc
cmp
dec
sbb
sbb
xchg
xchg
jl
pop
push
int3
ret
push
dec
mov
xchg
xchg
test
addb
shrl
rcl
mov
and
and
repnz
loop
dec
fsubl
pusha
jne
or
fimuls
mov
fstps
adc
push
pop
movsb
xor
jnp
rorb
mov
jle
inc
jo
mov
sbb
repnz
xor
xor
push
mov
cmp
sbbb
out
pop
or
mov
mov
aad
or
jmp
cmp
or
popf
add
or
fisubrs
mov
add
insl
loope
mov
loop
lret
xor
fdivrl
mov
mov
imul
movl
fsubrp
rclb
or
add
loop
push
mov
repnz
pop
vandps
fdivrl
pop
in
call
jnp
jl
lods
xor
and
or
push
leave
sbbl
fcoms
test
outsb
mov
xor
iret
dec
push
lock
stc
loop
fdivp
ret
adc
xor
jno
movsb
shld
test
dec
add
adc
push
aam
jb
shrl
sbb
les
mov
push
jl
loopne
pop
push
sub
std
xor
adc
jbe
data16
fstl
cli
xchg
xor
push
ret
adc
cmpsb
repz
dec
loop
xor
movsb
push
pop
fidivs
insl
popf
and
ljmp
pop
xchg
dec
sbb
fcmove
into
aaa
xchg
dec
ficomps
inc
icebp
out
add
mov
push
andb
adc
dec
rorb
lret
push
cmp
pop
mov
mov
ret
aas
loopne
mov
mov
stos
cwtl
sbb
je
sub
icebp
pop
insb
mov
dec
popl
cld
shll
inc
inc
das
lea
fnstcw
dec
subb
das
cmp
cmpsl
fwait
in
sub
push
rcr
pop
push
shll
or
call
dec
inc
repz
inc
adc
dec
add
mov
sbb
mov
and
int
rep
lock
in
scas
cld
jp
cmpsb
outsb
jns
cmpsl
and
in
push
ds
cmp
fisttps
push
ja
mov
test
clc
aam
je
clc
arpl
sub
mov
push
jns
mov
pop
sbb
jl
popf
xor
jl
dec
std
shll
mov
je
jnp
addr16
push
push
icebp
xchg
sub
notb
xor
scas
mov
cmpsl
mov
sti
sbb
inc
es
jmp
pop
fidivs
mov
sahf
mov
sub
in
fld
jle
cmp
adc
and
sub
out
mov
scas
lahf
in
mov
int
pop
mov
push
cmpsl
dec
lea
add
xchg
imul
sub
inc
sbb
fwait
scas
and
movsb
fsts
xchg
cmpsb
mov
fisttpl
jle
in
pop
ret
out
mov
les
xlat
cwtl
xor
lock
jmp
rorl
popf
ja
xchg
mov
mov
push
movsl
fcmovnu
popa
loopne
mull
sub
adc
dec
cmp
mov
insb
int3
lea
mov
ffreep
mov
test
scas
stc
rcr
xor
arpl
add
xor
add
jno
sub
jbe
lahf
mov
into
lds
test
sbb
cs
push
repnz
mov
add
arpl
jmp
mov
or
mov
mov
xor
mov
subl
xor
movzwl
or
mov
mov
xorl
add
addl
movzwl
mov
mov
movzwl
sbbl
xor
sbbl
add
mov
mov
mov
inc
mov
cmp
movl
jne
mov
mov
orl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
dec
mov
mov
xor
xor
sub
add
mov
mov
add
movl
movl
movl
xor
mov
xor
mov
mov
adcl
xor
add
mov
movl
mov
je
andl
mov
adc
mov
xor
orl
xor
adcl
sub
sbbl
sub
adc
xor
mov
mov
mov
subl
add
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
add
or
dec
mov
mov
mov
add
notl
xor
mov
xor
add
xor
or
sub
imul
mov
mov
orl
add
and
adc
mov
mov
add
mov
addl
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
subl
sub
add
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
or
mov
xor
orl
add
movl
jne
movl
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movzbl
xor
sub
sbb
xor
neg
mov
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
adcl
xor
sub
xorl
sub
adcl
xor
movl
mov
not
mov
mov
movl
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
push
pushl
call
jmp
mov
xorl
jmp
fnstsw
mov
aam
aas
push
push
mov
rcrb
jb
je
add
sub
sbb
shll
popf
dec
cmp
out
xor
adc
adc
lods
and
adc
xchg
popa
shrl
add
nop
fidivrl
mov
je
lgs
test
divl
mov
cmp
adc
adc
dec
insb
mov
dec
dec
loopne
inc
sub
mov
xchg
pop
xchg
mov
xor
mov
sub
loop
outsl
push
add
and
outsl
and
repz
mov
cmpl
cmp
cwtl
fabs
cmc
dec
mov
inc
test
push
cmp
sbbb
out
mov
aad
fwait
js
jbe
mov
loop
pop
dec
mov
add
out
cmp
mov
sub
and
es
or
ret
jle
jge
mov
dec
scas
cmpsl
xchg
or
mov
repnz
in
loope
xchg
loop
outsl
inc
leave
sar
js
stc
mov
sbb
scas
movsl
inc
sub
fcomps
maxps
xchg
and
inc
fidivrl
mov
aaa
fnsave
ds
movl
inc
xor
fcmovb
mull
jl
cmpb
push
jle
sbb
xor
inc
dec
in
xor
ret
xlat
adc
jle
cmp
cmpb
xchg
fwait
scas
movsl
jae
cmpsb
mov
xor
sub
add
xchg
sub
lret
sbb
lret
sub
shll
sub
mov
xchg
adc
or
jecxz
stos
mov
push
or
lea
jg
ret
sub
in
cmp
sub
sar
stos
mov
add
dec
jbe
mov
fists
lret
xchg
mov
mov
fsubl
cli
loop
cmp
fbld
lods
or
outsb
stc
fcmovnbe
daa
jb
cmp
ljmp
cli
adc
js
push
xchg
xchg
mov
test
sahf
lcall
ja
adc
mov
dec
movb
imul
push
cmp
ror
inc
inc
repz
adcl
cmp
mov
test
jne
std
xor
mov
sahf
or
mov
xchg
rcl
sbb
cs
fdivl
pop
cli
xor
push
xor
sbb
enter
xchg
xlat
add
mov
lret
popa
mov
pop
out
cmp
or
movsl
mov
inc
dec
stos
fucomip
imull
push
mov
mov
fwait
mov
leave
fisttpl
sbb
sub
ret
pop
test
lock
insb
repz
loop
call
shrb
sub
push
xchg
xchg
lods
int
rcr
pusha
xlat
iret
dec
cmpsl
sub
mov
lret
dec
lds
inc
inc
leave
dec
cs
outsb
inc
gs
lret
jnp
rorl
negb
jae
mov
xor
mov
cld
mov
jmp
and
scas
or
ds
data16
sbb
dec
cld
xor
mov
leave
in
stos
jmp
mov
pop
xchg
pop
add
inc
add
test
andb
pop
mov
xchg
pop
mov
xor
out
pushf
pop
decl
cld
popa
jbe
rorb
xchg
xor
push
mov
sub
mov
sub
js
jp
pushaw
cmp
or
cli
jb
xsaves
call
push
mov
xchg
sti
aaa
adc
aam
in
xchg
push
pop
dec
shl
mov
jbe
sub
jbe
mov
fmull
sbb
sub
cmp
mov
sar
repz
sub
mov
xchg
inc
xor
dec
xchg
popa
push
icebp
das
mov
mov
inc
dec
ds
jge
adc
xchg
push
or
pop
fmuls
shrl
leave
imul
test
mov
std
jb
adc
test
xchg
mov
add
shl
cmp
jns
dec
cmp
cmpsb
insl
pop
out
loope
or
addr16
cmp
inc
xlat
rep
fbstp
mov
push
movsl
hlt
and
mov
push
repz
pop
mov
dec
out
lahf
fsubrp
push
and
insl
add
and
xor
cmp
jbe
lahf
push
jne
lahf
push
jp
lods
pusha
and
pop
pop
lahf
int3
hlt
xchg
test
hlt
cltd
lock
mov
mov
sbb
mov
rorb
sub
fstp
mov
mov
cmp
or
les
xchg
out
xor
movsb
imul
fnsave
sub
xchg
sub
push
sbb
loope
xchg
data16
je
nop
cmp
pop
mov
mov
inc
sahf
cs
in
aas
loope
ljmp
shrl
leave
inc
sub
lret
jge
xchg
pop
push
sub
or
mov
xor
mov
in
lods
add
push
push
insl
add
lret
xchg
push
cmp
js
faddl
jno
js
or
jae
cmp
and
aas
ficomps
lods
outsl
lahf
jmp
pop
mov
pusha
cmp
mov
pop
dec
mov
push
rol
adc
les
xchg
push
scas
sub
mov
aam
sar
push
sbb
xchg
add
dec
sub
insb
ret
leave
mov
sub
mov
scas
adc
mov
push
jmp
imul
js
inc
inc
jmp
sbb
xchg
inc
cltd
paddq
icebp
movsl
inc
dec
mov
jg
fstpl
nop
adc
shrl
or
mov
loop
ror
loope
push
and
mov
or
push
dec
movsb
imul
xchg
cmpsb
fwait
testb
dec
pop
push
popf
dec
xor
fcompl
out
sub
xor
dec
lock
fsubrl
lret
or
dec
push
testb
test
dec
pop
fistpl
push
mov
dec
xor
lea
fs
dec
or
gs
in
xor
test
shr
dec
sub
pop
cld
outsb
push
push
mov
mov
mov
divl
inc
push
fisttpll
loop
out
sub
jne
dec
inc
pop
test
xchg
inc
add
popf
xor
je
mov
and
js
mov
add
imul
ljmp
test
inc
cmpsb
sbbb
adc
mov
jle
push
push
dec
and
mov
clc
sub
fucomp
roll
lret
imul
pop
addl
xor
inc
ret
fimull
mov
mov
xchg
aam
mov
in
scas
pop
imul
not
adc
push
mov
rorb
jl
mov
lea
adc
test
dec
enter
cmp
lahf
xchg
add
ljmp
adc
and
xchg
lock
pop
dec
lds
pop
jne
int
xchg
iret
mov
mov
jns
aam
popf
jl
in
push
mov
movb
jb
pushl
mov
cmp
jmp
in
mov
add
rcrl
in
mov
sbb
mov
addr16
in
inc
jmp
data16
ret
and
popf
lods
push
dec
lods
mov
pop
clc
mov
add
in
pop
cmp
aaa
aaa
cmpsb
lods
ret
jle
repnz
rcll
and
dec
sbb
fnstenv
dec
fldenv
adc
clc
imul
shlb
mov
push
xchg
xlat
clc
cs
lea
js
stc
inc
xor
dec
insl
fstl
clc
xchg
les
out
gs
jecxz
stc
flds
xor
aaa
sub
xchg
dec
in
movsl
dec
aam
std
mov
inc
push
push
frstor
adc
mov
sub
mov
inc
ret
stc
fwait
pushf
adc
xchg
mov
cmpl
push
sbb
lods
scas
or
cmpb
int
mov
scas
popa
add
jae
xor
xchg
mov
outsb
sbb
inc
ficomps
clc
leave
imul
mov
mov
add
imul
cmpsb
jno
pop
inc
out
notb
popf
sbb
mov
xchg
push
cmpsl
inc
dec
ss
adc
or
sub
fs
sbb
loop
dec
bound
ss
movsl
jo
dec
lahf
dec
decl
pop
add
or
mov
cmp
das
mov
sbb
inc
push
add
ret
xchg
or
dec
div
bound
cs
pop
in
clc
sub
data16
lds
sarl
adc
pop
sti
loope
dec
bound
inc
lea
push
addr16
jns
and
push
jp
test
jp
jb
imul
inc
jl
gs
lea
cltd
and
add
dec
int
or
push
daa
jp
insb
repz
xchg
jmp
pop
sub
adc
jecxz
and
mov
das
xor
lret
notl
inc
adc
fcmovbe
jnp
push
mov
in
push
mov
jmp
cltd
xchg
jbe
fadds
xchg
test
divb
loopne
mov
aaa
xchg
adc
ja
movsb
dec
jnp
aaa
aad
sbb
insb
xchg
scas
in
sbb
stc
imul
shr
mov
nop
std
icebp
in
cmpsl
pop
jno
sub
dec
mov
xchg
xchg
test
add
loop
loope
repnz
jnp
cmp
sub
leave
int3
insb
test
repz
popf
mov
or
jmp
xor
adc
inc
mov
lret
xor
mov
adc
into
xchg
loopne
push
mov
xor
jae
mov
mov
outsb
mov
cmp
mov
movsb
data16
mov
cli
ljmp
and
addl
jbe
bound
sub
pop
int3
bound
outsb
out
and
push
push
std
rorb
iret
cmp
or
lret
push
sarl
cmp
scas
add
dec
mov
icebp
movsl
xchg
mov
inc
scas
xor
cli
and
xchg
cli
mov
jecxz
stos
in
pushf
mov
add
stos
xchg
mov
pop
add
ja
jge
fldenv
adc
mov
pop
ret
clc
or
test
mov
or
adc
adc
pop
outsl
inc
repnz
daa
xchg
mov
push
lcall
jp
dec
push
jge
faddl
outsb
popf
hlt
fistpll
leave
mov
inc
adc
jle
mov
mov
das
lcall
movl
or
sub
divb
sub
cmp
sub
in
outsb
jmp
jnp
dec
imul
test
mov
pop
inc
dec
mov
inc
cld
andb
xorb
je
mov
cmp
test
mov
out
mov
xor
mov
add
arpl
xor
jp
inc
sub
aaa
sbb
and
or
mov
stos
xchg
and
fnsave
mov
cpuid
jmp
adc
loop
pop
push
adc
push
lcall
xchg
aad
jnp
dec
jns
aad
adc
in
jo
out
icebp
mov
mov
or
mov
sahf
mov
movsb
and
mov
loop
xor
pop
iret
inc
adc
dec
sbb
add
cwtl
xchg
int
mulb
jno
or
pop
scas
mov
sub
hlt
out
mov
test
sbb
jo
and
stos
mov
jnp
jno
lcall
lret
pop
mov
fs
push
in
pusha
dec
mov
jge
adc
fst
lcall
fs
and
hlt
lret
mov
ret
sbb
sahf
call
sub
cli
inc
inc
stos
ret
scas
das
jmp
popf
sub
orb
sarl
cmp
xor
xlat
xor
mov
movsb
repz
dec
enter
pop
xchg
push
xchg
dec
rcrb
scas
mov
xor
mov
lret
mov
add
insl
cmp
pusha
adc
out
push
std
scas
int3
xchg
xor
push
jnp
dec
cmp
and
adc
xor
loop
imul
sbb
mov
lods
mov
cltd
jp
push
xor
cmc
mov
push
fcompl
std
cmpsl
xor
sbb
pop
in
aas
mov
mov
fdivrl
xchg
dec
cmc
mov
sub
sub
jo
fnstsw
mov
adc
sahf
sbb
mov
dec
or
xchg
sbbl
mov
mov
lock
dec
pop
mov
and
jl
pop
mov
sbb
add
aas
stc
rol
test
test
sub
les
fwait
push
pop
inc
fistl
sub
pop
sahf
arpl
xor
xor
jecxz
inc
push
aaa
pop
sbb
test
jae
sbb
and
gs
xor
dec
aas
add
nop
pushf
adcb
add
adc
mov
pop
cmp
int
mov
das
adc
dec
xor
cmp
mov
jl
push
popf
test
xchg
popf
mov
push
testl
mov
cld
pop
lea
rol
jbe
cmp
lds
popf
xchg
fimuls
les
addr16
push
mov
imul
jbe
pop
ret
in
addb
movsl
add
dec
push
add
imul
mov
stos
inc
cmc
jecxz
dec
pushf
xor
pop
iret
aaa
xchg
and
cmp
and
lret
xchg
dec
ljmp
loopne
stos
push
scas
sbb
int3
or
inc
push
jb
js
mov
and
add
xor
mov
je
lods
test
adc
push
dec
in
cmp
add
jg
mov
mov
clc
imul
sbb
lds
and
out
adc
xor
cmp
aas
lods
fsubrl
xor
movsl
and
mov
ds
daa
mov
and
daa
push
and
arpl
cmpsl
sbbl
insl
sub
ds
mov
daa
push
adc
lret
xchg
inc
lahf
or
lods
ret
add
xchg
and
cmp
cmp
shlb
mov
arpl
inc
jmp
test
out
jno
mov
inc
pop
mov
mov
xchg
aad
sub
add
test
aad
and
stc
cmp
cwtl
lods
lock
bound
add
sbb
add
movsb
jo
stos
mov
cwtl
in
push
pop
mov
lcall
cmp
movsl
push
test
icebp
add
nop
inc
inc
shrl
jns
pop
pop
xor
lahf
sub
push
fbld
inc
xor
dec
jne
adc
pop
or
sahf
and
andl
iret
push
out
insb
push
fbstp
addr16
cs
mov
lods
pop
jo
add
lock
xor
jecxz
jle
lcall
dec
sbb
ja
and
clc
pop
pop
ds
cld
jae
insl
mov
neg
outsb
repnz
pop
int
xor
sbb
das
mov
insl
cwtl
push
xchg
pop
cwtl
ret
xor
push
nop
test
add
mov
lds
pop
and
sub
and
testb
out
mov
cld
dec
stos
out
jmp
stos
inc
clc
popf
fldcw
rcll
dec
fsubrl
rcl
inc
or
mov
ss
dec
inc
decl
lcall
ljmp
hlt
xor
add
mov
sbb
gs
test
scas
mov
jp
aaa
fiaddl
mov
sti
jb
push
inc
inc
jle
lahf
repnz
cld
xchg
mov
movb
data16
fcmovnu
jmp
push
xor
into
insb
fwait
lret
inc
adc
and
arpl
or
ret
test
lahf
pop
and
xchg
fiaddl
scas
aam
decl
or
jae
dec
insb
mov
imul
cmp
loopne
sbb
addl
push
push
ficoms
xchg
gs
mov
xchg
test
mov
fwait
pop
cmpsl
mov
imul
fisubrl
mov
inc
dec
out
sbb
xor
cwtl
pop
arpl
fistpll
sub
mov
in
lock
out
enter
popf
mov
xchg
scas
mov
and
pop
outsl
sbb
and
mov
push
pop
shl
xor
test
out
imul
pop
icebp
dec
lea
mov
pop
mov
mov
in
scas
sub
xchg
pop
push
ja
dec
in
inc
inc
nop
lea
pusha
movsl
mov
aas
mov
enter
xor
test
cmp
mov
adc
imul
daa
out
mov
jge
jl
mov
and
mov
mov
jle
or
lea
mov
or
jecxz
adc
mov
jge
sbb
int
pop
call
pop
push
mov
sbb
das
adc
out
das
adc
cmp
cwtl
sbb
mov
cli
jno
add
push
aam
mov
in
inc
push
ret
sbb
in
dec
adc
pop
push
adc
mov
into
mull
and
test
and
movsl
xor
fisubrl
cmp
jno
and
xchg
push
pop
or
rclb
cmp
out
xchg
in
cmp
or
insl
sbbb
hlt
lock
pop
xchg
les
mov
sub
shrl
push
daa
lcall
fs
xor
jnp
mov
push
imul
je
pop
lcall
push
mov
or
mov
xor
not
sbb
inc
inc
jb
or
rorb
dec
cmp
daa
cmp
xchg
jg
inc
pop
adc
adc
adc
jae
dec
jae
fdiv
fldenv
inc
pusha
mov
xchg
dec
leave
cmpsl
jnp
shrl
outsb
sti
int
and
clc
popf
sbb
push
mov
gs
cmp
scas
mov
jp
stc
mov
or
jp
push
mov
mov
mov
cmp
cmp
fidivrs
pop
sahf
int3
imul
cmpsb
fistps
das
add
xor
adc
dec
es
je
inc
jp
mov
cmpsl
cmp
adc
cli
arpl
ret
sahf
lret
pop
jmp
adc
js
jo
aaa
idiv
push
inc
pop
std
add
int3
popa
pop
jle
ljmp
mov
fnstcw
shrb
movsb
scas
mov
xor
xchg
xchg
scas
divb
fcmovnb
push
mov
xor
mov
sbb
mov
cli
mov
stos
lret
push
enter
in
lock
push
and
les
and
mov
mov
cltd
mov
mov
mov
imul
cwtl
popf
stc
sub
les
lret
imul
mov
add
aas
push
repnz
mov
push
mov
xlat
ss
cmp
jle
leave
mov
jle
idivl
cmp
sbb
daa
xor
adc
cmp
mov
lods
in
mov
out
cmp
pop
stc
outsl
cmpsl
mov
dec
sbb
ss
push
xchg
aaa
or
dec
xor
jb
movsl
insb
fisubrl
insb
lds
cmp
int
repz
sbb
push
push
jae
gs
sub
pop
mov
sub
adc
ljmp
ja
sbbb
sbb
fnstcw
and
or
xor
push
xchg
add
xchg
sub
dec
in
mov
stos
mov
les
mov
xor
stc
xor
outsb
in
mov
dec
push
mov
push
xor
bnd
add
pop
int
in
and
xor
mov
call
jo
fisubs
inc
cmpsb
cmp
mov
add
push
pushf
sbb
les
ss
lods
mov
cwtl
pop
push
das
mov
mov
enter
inc
xor
sbb
dec
imul
or
cmc
fidivs
xchg
jbe
adc
das
int3
scas
scas
sub
lahf
or
pminub
inc
aas
and
in
xchg
dec
test
mov
lcall
iret
les
cmp
subb
into
into
mov
jns
shl
xchg
push
xor
jno
into
cli
bound
cld
mov
and
mov
popf
sub
cltd
stc
repnz
inc
aas
dec
clc
pop
pop
sbb
inc
jbe
jp
add
int
imul
jo
add
jno
sbb
or
inc
repz
test
ret
les
jne
push
stos
push
jmp
nop
ljmp
push
pop
mov
inc
loope
lds
imul
scas
xchg
xchg
fsubr
imul
dec
mull
cs
je
repnz
or
mov
sti
shll
aam
mov
inc
jp
data16
jae
lret
or
mov
dec
and
mov
mov
daa
pop
mov
out
dec
dec
and
jae
aas
mov
inc
mov
iret
aaa
outsl
cmpsl
inc
mov
cld
dec
ret
xchg
or
xchg
cmpb
xor
cmpsb
adc
int3
std
add
adc
popf
out
lods
cmp
imul
aaa
out
ds
movsb
jl
aas
add
pop
jmp
inc
cs
mov
andb
jbe
inc
lret
dec
jae
out
and
mov
mov
cs
gs
cltd
mov
sub
jmp
jo
add
addr16
fs
jl
rcl
das
and
pushf
xchg
add
std
push
mov
pop
stos
xchg
rclb
lods
cmpsl
add
or
arpl
sarl
push
push
mov
cmpsl
jle
xchg
iret
ds
das
xor
mov
dec
das
and
and
or
aas
push
adc
out
xchg
mov
inc
inc
pop
sbb
or
lcall
in
jp
or
cmp
mov
add
jg
xchg
mov
xchg
scas
add
leave
lahf
inc
call
xchg
repz
push
imul
sbb
invd
pop
xchg
adc
jb
dec
bound
gs
mov
xchg
xchg
negb
clc
dec
dec
cmpsb
cwtl
test
mov
xchg
das
xchg
xlat
jne
sub
sbb
mov
les
fsubrs
scas
inc
mov
ja,pt
aaa
mov
sub
hlt
jl
cmpsl
push
push
test
mov
cmc
test
movsb
leave
leave
and
jns
nop
dec
shlb
xor
add
testb
mov
cmp
icebp
mov
pop
xchg
sbb
jg
and
jo
incb
jnp
mov
ret
inc
fisttpl
lea
jne
or
insl
test
dec
out
nop
pop
vmovupd
xchg
pop
bound
push
pop
sub
push
push
mov
sbb
pop
inc
sub
outsl
add
pop
mov
dec
lcallw
adc
adc
addb
pop
rcrl
cmp
lock
sub
dec
fisubrs
add
sub
xor
xchg
dec
das
lods
insl
add
add
mov
xchg
std
out
out
test
push
jnp
aas
mov
push
sub
sub
popa
or
cmc
xchg
inc
xchg
add
cld
ljmp
hlt
sti
dec
mov
fs
xchg
mov
mov
and
xchg
cmpb
test
cld
sub
test
sbb
out
sbb
push
sub
push
in
mov
ret
and
pop
push
mov
mov
addb
push
and
movsb
cmpsb
in
pop
scas
test
cmp
pusha
cmp
xchg
add
addr16
aad
out
in
xchg
pcmpgtw
out
pusha
cmp
cs
in
sarl
mov
out
hlt
sub
mov
mov
xchg
neg
push
dec
mov
das
pop
fadd
ret
lret
outsl
mov
or
test
mov
push
icebp
rolb
or
mov
push
push
leave
scas
mov
mov
dec
shll
outsl
push
jl
popf
push
mov
addr16
test
pop
xchg
call
andb
and
das
into
bound
data16
xor
mov
pop
daa
js
jge
cmp
cmp
jae
and
rolb
add
mov
cmpsb
push
adc
jnp
clc
jno
cmp
inc
out
in
fsubr
in
fsubr
mov
test
sti
shrl
popf
inc
arpl
mov
dec
jmp
push
iret
sbb
shl
fcmovne
insl
mov
stos
dec
aam
jl
fwait
in
movsb
aam
push
jmp
add
jecxz
or
jl
mov
xchg
imulb
fmuls
mov
je
adc
push
mov
mov
pop
insl
lods
cmpsl
scas
stos
ficoml
pop
int
mov
std
lcall
cmp
adc
ja
cmpsb
in
xor
fwait
mov
repnz
push
xor
and
scas
rcrl
sbbl
leave
pusha
xlat
call
inc
push
or
inc
and
adc
mov
pop
add
fldenv
push
push
inc
inc
loope
add
out
mov
dec
ja
bound
mov
mov
cmp
bound
mov
xchg
sahf
add
aas
in
inc
mov
iret
jmp
mov
flds
xchg
mov
jg
jle
mov
mov
add
fiaddl
loope
clc
sub
das
xchg
shll
out
jle
push
stos
xor
leave
mov
outsl
fstpt
aam
mov
ja
aam
jg
cmp
inc
pop
mov
and
xchg
and
movsl
xor
in
pop
stos
out
mov
imul
lahf
fdivp
pop
add
popf
daa
hlt
pop
mov
lret
dec
inc
fwait
push
testb
int
stos
pop
or
xchg
dec
sbb
sti
pop
xor
push
ss
cmp
das
bnd
shrb
call
inc
push
loop
loope
mov
jp
inc
inc
into
sar
fcmove
shl
dec
lret
shlb
dec
sbb
outsl
jecxz
lods
inc
mov
das
sbb
mov
stos
add
sti
jno
aaa
arpl
popf
fcomps
ss
movsb
fldl
sbb
fwait
push
fbld
cmpsb
pushf
sub
jbe
shlb
sbb
mov
and
jle
ljmp
enter
popf
lock
js
scas
in
repz
xor
pushw
inc
cmp
lret
adc
inc
push
pop
sbb
cld
adc
add
adc
xchg
sbb
loope
lds
out
data16
xor
dec
repnz
icebp
mov
jnp
fdivrl
inc
repnz
imul
or
add
jae
pop
clc
cmc
in
or
xlat
push
sub
or
cmp
subb
stos
iret
aam
pop
rolb
xor
lock
lret
push
test
mov
push
or
push
push
movsl
xor
pop
aad
ljmp
enter
jmp
adc
pop
inc
and
shrb
xor
shr
jecxz
cmc
xchg
sub
out
mov
mov
out
and
xchg
sarl
mov
xchg
push
inc
fisttps
iret
iret
push
insl
mov
test
outsl
mov
mov
loop
jo
cmp
lods
pop
mov
ja
call
lcall
mov
popf
push
jns
push
gs
push
sahf
jg
lods
gs
into
pop
insl
cli
jbe
es
add
mov
testl
jb
mull
fidivl
or
gs
mov
cmp
imul
push
inc
ret
sub
cmp
je
hlt
fcmove
adcb
xchg
dec
push
push
adcb
mov
rcr
mov
and
movsb
dec
push
inc
sbb
mulb
xor
imul
jge
jecxz
mov
push
stos
jb
sbb
xor
xchg
loopne
loopne
mov
jecxz
div
sbbl
inc
mov
cmpsl
shrl
sub
cli
sub
movsl
push
pop
inc
repz
mov
pop
push
sbb
int
mov
xchg
loope
out
imul
cmp
aam
push
inc
out
in
sub
mov
test
gs
mov
mov
sahf
or
fwait
xchg
scas
arpl
cmpsb
sbb
lret
or
mov
dec
adc
das
sub
mov
push
ret
add
jge
cmp
roll
sub
mov
jo
lret
shrb
addr16
cmp
push
daa
hlt
xor
hlt
fmul
andb
gs
push
out
fbld
dec
popf
pusha
jo
rorl
stos
pusha
or
scas
mov
outsb
dec
push
lds
adc
mov
jno
push
mov
adc
jge
aaa
mov
aaa
insb
push
out
mov
clc
inc
push
inc
dec
in
fs
sbb
popf
sbb
jmp
inc
cmp
sub
pushf
pusha
mov
mov
loope
jne
xchg
ficoml
push
shll
lea
les
adc
mov
out
mov
ds
movsb
adc
mov
mov
out
fmulp
mov
lcall
pop
std
mov
push
test
dec
inc
repz
push
add
dec
jmp
jmp
mov
or
fstps
cmc
punpckldq
notb
aas
test
pop
lea
dec
dec
pop
data16
mov
mov
pushf
popf
sarl
push
dec
and
sub
iret
ja
scas
fisubrl
xchg
jnp
adc
shrb
ret
testl
mov
ds
sbb
out
push
daa
cmp
orl
mov
sbb
sarl
mov
ljmp
addr16
shr
test
adc
sbb
xlat
mov
sub
and
imul
int3
in
sub
push
stos
ja
pop
xchg
cmpsl
popf
cmp
push
push
pop
push
rcll
push
jl
inc
jb
scas
dec
es
mov
fadds
inc
add
out
mov
into
xchg
jge
ret
dec
push
mov
cwtl
xchg
popa
lahf
das
xor
loop
xchg
jnp
pop
inc
dec
or
rorl
push
sbb
adc
add
xchg
test
mov
scas
sub
xchg
pop
lcall
xor
push
out
xchg
sub
mov
or
sub
add
clc
jle
xlat
push
dec
jecxz
cwtl
cltd
fldz
mov
cmpsb
adc
dec
dec
js
lcall
frstor
out
gs
sti
cmc
movsb
jg
aad
mov
mull
mov
aad
imul
xor
je
out
push
jg
repz
inc
dec
les
and
leave
jmp
mov
push
adc
push
push
insb
lock
sub
add
xchg
push
push
rcrl
xchg
sbb
in
sub
xor
cmp
icebp
mov
xor
in
test
mov
add
mov
jae
inc
leave
adc
fsts
sub
sbb
lahf
cmpsb
fucom
mov
ja
inc
xchg
aam
fnop
adc
rolb
add
inc
add
fsubrs
rcrl
cmp
sub
xor
mov
mov
mov
add
subl
imul
add
mov
add
mov
mov
andl
add
addl
or
mov
adc
mov
sub
mov
incl
add
xor
adc
mov
mov
add
mov
subl
add
orl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
jmp
inc
xor
jae
mov
sbb
cmpsl
push
jge
rcrb
jb
mov
pop
mov
repz
sub
addr16
jp
cltd
sbb
js
gs
mov
in
movsl
inc
lds
mov
sbb
pop
insl
xor
and
in
stc
pop
adc
int
popf
popf
adc
data16
outsl
push
push
int
jmp
fs
mov
lahf
dec
adc
push
add
movl
rcll
add
in
cmp
pop
out
loope
jle
mov
fistl
xor
add
dec
loop
test
mov
rorb
in
sahf
iret
in
xor
push
andb
test
inc
nop
sub
push
adc
aaa
rcrb
jecxz
inc
push
add
push
mov
std
fmull
push
out
fcoml
dec
push
dec
enter
jbe
inc
lahf
mov
push
xlat
add
mov
imul
and
inc
xor
cs
imul
sahf
mov
aam
cmp
jp
xchg
lea
das
rorl
and
jge
adc
addr16
mov
sub
xchg
xchg
xchg
and
into
test
pushf
out
pop
fstps
lds
repz
cmpsb
popa
inc
test
mov
add
sti
inc
enter
loope
push
cltd
fiadds
pop
adc
int
pmulhrsw
jns
jp
and
pop
pushf
jns
lock
cmp
cld
sub
flds
int3
insb
mov
pushf
xlat
sti
xchg
mov
popa
lea
and
outsb
out
sub
sahf
stc
mov
jns
test
fs
lret
xchg
outsl
repz
push
lea
mov
and
fsubp
movsb
mov
push
add
or
hlt
fisubl
xchg
push
xchg
stos
inc
jp
test
shl
cmp
aas
xchg
jecxz
inc
sbb
xchg
cmp
sbb
xchg
loopne
mov
mov
nop
pop
je
dec
dec
in
call
fmuls
pop
inc
xor
add
insl
ja
push
popa
inc
jno
lock
lea
hlt
insl
jne
lods
ljmp
sti
sub
dec
xor
mov
icebp
push
and
dec
pop
or
or
js
jge
daa
and
fwait
insl
fwait
mov
aaa
inc
ljmp
movsl
or
dec
lret
xchg
sbb
jecxz
inc
or
adc
add
leave
and
xchg
xchg
fmul
mov
dec
rcl
inc
mov
sbb
or
in
les
scas
leave
mov
std
add
mov
xchg
js
xor
ljmp
inc
jg
or
idiv
cmp
push
jbe
push
dec
and
scas
iret
aaa
add
inc
scas
out
loope
pop
pop
dec
out
je
pusha
fcom
add
repz
push
mov
outsb
mov
add
mov
into
rcll
sub
pop
mov
jns
pop
int3
push
je
fdivl
lds
cmpsb
inc
enter
push
xor
push
test
jnp
xor
stos
push
push
push
inc
aaa
fisttpll
hlt
inc
cld
outsl
insb
xor
rolb
loopne
inc
push
pop
lea
nop
pusha
cmp
int
xor
add
clc
cmp
jp
push
inc
and
pop
mov
add
enter
fcoml
cmp
push
sbb
stos
dec
or
and
mov
insb
stos
cmp
and
push
hlt
sub
je
in
push
lahf
rcl
fwait
dec
leave
mov
sti
lret
aam
inc
and
scas
lret
out
psubw
cmpb
and
outsl
ja
loop,pn
clc
andb
dec
dec
jecxz
mov
jae
adc
xchg
jo,pn
cltd
call
outsb
or
adc
mov
shll
lds
lds
xor
sbb
mov
xchg
loop
sarb
or
mov
dec
std
jo
movsb
mov
aas
and
or
xchg
rcrb
fadds
loopne
dec
pop
cmc
aaa
int
jns
shrl
rol
pop
sti
adc
and
jecxz
sub
cld
ret
cmp
or
dec
push
adc
rolb
push
out
in
mov
cmpsb
add
daa
inc
mov
lds
cltd
gs
aad
jle
sarb
xor
mov
jle
test
add
sti
aas
jle
addl
and
xchg
mov
mov
push
imul
mov
divl
pop
neg
and
add
ret
inc
dec
mov
push
cmpsb
test
jmp
mov
out
lret
dec
dec
sub
mov
lock
je
mov
pop
mov
push
sbb
adcb
les
cwtl
imul
bound
mov
test
cmp
or
fsubr
dec
dec
dec
lret
or
and
lea
ja
add
mov
rclb
nop
xchg
shlb
dec
and
shl
mov
data16
push
sbbb
call
lock
insl
je
leave
xchg
xor
sbb
int
arpl
inc
scas
cmp
pusha
pop
sub
insb
std
add
push
gs
fwait
out
sbb
stos
mov
pusha
dec
je
xlat
in
push
inc
dec
or
fsubl
bound
adc
in
inc
ret
inc
addb
das
adc
sbb
cwtl
mov
je
inc
in
lret
push
sub
jle
adc
inc
jl
cmpsl
in
inc
cmpsl
aas
mov
lahf
add
je
and
and
inc
cwtl
inc
mull
mov
cmp
aad
mov
pop
imul
cmp
cmp
pushl
jl
popf
ret
sbb
ja
push
mov
push
sub
bound
xchg
mov
push
lret
and
and
lret
cmpsl
rcrl
lods
xor
push
cmp
dec
stos
mov
ja
xchg
push
gs
xorl
add
push
ja
ja
stc
fildl
lea
or
mov
mov
mov
or
cltd
mov
pop
adc
mov
adc
sti
mov
sbb
mov
into
or
push
inc
test
sub
add
xchg
fs
lahf
stos
jge
adc
nop
push
scas
cli
shrd
out
loop
mov
test
fistl
push
adc
outsb
iret
add
idivb
addr16
xlat
jge
fwait
shll
int
sbb
inc
dec
inc
cwtl
push
cmp
or
push
mov
andl
inc
fwait
pusha
xchg
idivl
nop
dec
sahf
pop
mov
int3
aaa
mov
stos
cmp
mov
in
jae
shlb
mov
xchg
arpl
and
iret
and
mov
sub
inc
mov
push
faddl
mov
inc
mov
outsb
dec
push
lahf
fs
loope
call
ret
push
pop
into
inc
mull
or
mov
xor
adc
adc
repnz
adc
fdivrs
in
xchg
sub
mov
fsincos
and
fwait
jbe
dec
mov
fidivrs
repz
inc
imul
sbb
sbb
xchg
gs
movsb
mov
mov
in
or
mov
pop
fs
dec
leave
and
sbb
adc
sbb
mov
xchg
push
out
sbb
data16
dec
rolb
in
sti
push
lea
addr16
cmp
insb
jp
dec
fcoml
mov
xchg
lods
inc
test
mov
ja
out
mov
into
xchg
jle
inc
stos
xlat
mov
pop
adc
loopne
sbb
sub
or
ds
into
cmc
dec
mov
daa
or
int3
mov
sbb
in
cwtl
xchg
pop
popa
int
mov
fs
push
rolb
pop
aaa
sbb
xchg
ret
scas
xor
xchg
mov
push
movsl
inc
icebp
loopne
push
fcomi
add
cmp
rcrb
push
scas
dec
xor
sar
test
add
and
mov
lds
mov
loopne
mov
jecxz
incb
xchg
mov
pop
aas
scas
dec
mov
repz
cwtl
mov
repnz
lahf
inc
pusha
cli
push
mov
push
popa
lds
test
in
inc
enter
roll
fisubl
aaa
mov
pop
out
xchg
push
fs
mov
mov
xchg
mov
adc
fsubl
jbe
sti
sbb
out
ljmp
stos
hlt
adc
pop
lahf
xor
mov
pop
outsl
test
addr16
scas
push
jmp
movsl
lret
pop
xchg
jb
test
shl
gs
mov
xor
dec
lret
fwait
jbe
pusha
int3
frstor
push
sbb
inc
and
bound
les
xor
and
std
cmp
in
pusha
sbb
inc
cs
aam
or
xor
mov
sbb
mov
inc
lods
adc
ljmp
fdivp
popa
mov
xchg
sbb
shll
dec
mov
jae
cld
inc
inc
sti
pop
ljmp
dec
mov
movsb
mov
icebp
shll
mov
inc
aas
arpl
push
notb
je
stc
push
ss
ljmp
sbb
xchg
repz
jnp
xor
and
add
push
push
shrl
mov
jae
mov
jp
xadd
mov
add
xor
gs
movsl
das
clc
into
or
dec
cmp
or
xchg
cli
pushf
mov
inc
mov
sub
sub
sbb
pop
cmp
cmp
sbbl
push
xor
cs
repz
incb
inc
div
rorl
and
repnz
cs
fcmovu
pop
ret
es
cmpsl
pusha
pushf
test
cmc
je
add
in
pop
bound
dec
in
lret
push
out
xchg
jae
mov
imull
pop
push
lods
pusha
loopne
pop
cmpsl
dec
push
sub
xor
dec
inc
mov
sahf
popa
dec
add
lds
aam
and
inc
jg
mov
aad
fbstp
test
cmpsb
das
sbb
pop
mov
addr16
scas
inc
lock
idiv
dec
cmp
fnstenv
es
out
cmp
mov
add
and
jb
pop
xchg
or
iret
enter
pusha
cmpsl
scas
cmp
sbb
mov
jbe
mov
adc
sbb
mov
dec
sbb
or
addr16
cmp
adc
push
jge
adc
mov
push
sub
aas
jg
repz
add
imul
mov
test
pushf
in
push
divb
push
dec
cmp
cmp
or
adc
or
scas
stos
call
inc
inc
stos
pushf
lret
repz
in
and
aam
sub
mov
sub
sub
push
sub
xrstors
sub
sbb
xchg
rclb
xchg
xchg
out
int
cmc
push
test
dec
jb
hlt
bound
lock
fsubrs
ss
scas
test
jmp
icebp
mov
fsts
push
push
xor
call
add
fldt
movsb
jge
adc
cmp
add
add
lcall
mov
lods
or
and
pushf
inc
adc
mov
sub
scas
movsb
test
push
out
dec
aam
ss
push
pop
jb
xor
or
or
rolb
jp
jbe
lods
cmp
nop
hlt
mov
xor
test
sub
xor
aam
dec
mov
movsb
ljmp
lret
mov
or
push
xadd
addl
popf
mov
rcr
cmp
xchg
push
je
mov
or
xor
enter
outsl
fsub
notl
push
pop
aaa
sub
cmp
idivl
arpl
gs
cmpsl
mov
xchg
jg
cs
or
xchg
pop
std
mov
sbb
out
repnz
mov
pop
je
adc
jl
mov
jle
ljmp
add
ror
lods
lods
jae
sbb
faddp
add
in
jbe
mov
pushf
xchg
fmull
das
mov
loope
jl
xor
adc
movsb
fs
outsb
movsb
es
push
push
adc
rcll
xchg
dec
jae
mov
ret
std
jp
push
pop
hlt
xchg
mov
xor
aaa
or
je
test
mov
xchg
test
dec
pop
ret
sbb
dec
pop
sahf
std
imul
decl
push
pushf
xor
jmp
xlat
xchg
dec
cmp
repz
iret
inc
xchg
pushf
sbb
mov
mov
jle
inc
xor
das
imul
dec
stos
cmp
xor
jnp
cltd
sbb
jp
and
bound
rclb
inc
or
ret
hlt
add
push
add
inc
jb
ud0
jmp
xor
bswap
sbb
ljmp
test
adcl
aas
into
scas
add
in
movsb
shrl
jmp
mov
and
xor
add
jno
push
pushf
hlt
mov
inc
iret
mov
lea
or
mov
pop
jmp
lods
sbb
mov
push
xchg
in
mov
aaa
fisubl
cmp
inc
xor
pop
pop
pop
shl
jge
nop
mov
rcr
lods
jecxz
insl
into
mov
and
shlb
add
adc
or
sti
sub
fs
xor
ret
jmp
aad
nop
adc
push
add
fwait
xchg
orl
out
adcb
dec
cld
xor
adc
repz
test
mov
mov
or
pop
call
sbb
xor
stc
rol
and
jne
or
pop
call
es
cmp
ret
jmp
je
fldcw
mov
sahf
idiv
fstl
mov
jbe
adc
or
insb
or
mov
lea
and
sbb
xchg
clc
lds
push
dec
insb
jl
dec
mov
xchg
dec
lret
cmp
cmc
jne
jecxz
adc
push
daa
cmp
fs
test
sahf
sbb
jno
data16
lcall
idivb
out
jecxz
loop
xor
xchg
js
push
push
or
cmc
push
mov
pop
test
jecxz
rolb
sub
data16
imul
dec
lret
add
xor
in
sbb
addr16
out
push
adc
mov
mov
sbb
sbb
jns
cmpsb
jae
mov
and
jne
hlt
fists
dec
stos
cld
cld
arpl
bound
pop
addr16
notl
jmp
out
cmp
aad
sub
sub
loopne
xchg
sub
jge
xor
mov
jl
adc
mov
jns
fdivr
cmp
fimull
cmpb
lods
pushf
out
adcl
xor
mov
call
out
movsl
jp
push
adc
mov
bound
xchg
jl
push
jns
push
dec
into
jmp
xor
jo
xchg
addr16
out
leave
and
xor
and
pushf
clc
cmp
dec
ss
sahf
mov
ss
adc
lahf
outsl
aas
sahf
mov
mov
xchg
test
dec
scas
inc
out
scas
pop
pop
int3
add
outsb
jo
xchg
jg
jno
adc
jecxz
aas
cmc
jge
mov
cld
out
loope
and
stos
fidivrs
adc
jp
into
icebp
lret
sahf
push
add
dec
mov
xor
jl
bound
add
mov
jmp
pushf
sub
shlb
mov
xchg
scas
mov
rcrb
pop
mov
pop
out
cmp
mov
push
lock
push
test
aaa
int3
sbb
cmp
les
dec
cmp
in
imul
adcl
jae
pop
xchg
pop
inc
rcrl
or
mov
sub
xchg
pop
scas
popa
push
fstpl
jne
mov
call
xchg
xchg
arpl
mov
inc
sahf
hlt
mov
sub
mov
push
inc
repz
dec
inc
add
fs
repnz
and
sub
sti
sbb
loop
cmp
inc
pop
mov
cmp
mov
arpl
pop
jecxz
pushf
mov
pop
inc
popf
jne
in
xchg
dec
test
rcrl
xor
or
pop
mov
popa
dec
cltd
cmp
mov
xor
enter
dec
leave
dec
xchg
arpl
call
lahf
pop
enter
push
fstpt
pop
stos
pop
outsl
iret
mov
in
and
pop
jae
sub
add
xor
push
xor
xchg
in
inc
add
push
xchg
dec
loop
sbb
into
stos
cwtl
xchg
dec
sbb
iret
lret
neg
push
out
pop
sarl
mov
mov
test
jne
pop
and
dec
add
call
scas
int3
fcoml
xor
xchg
add
xchg
or
das
test
fisttps
or
addl
daa
dec
sbb
pop
adc
inc
sbbb
push
pusha
add
or
je
jmp
pop
and
repz
and
cmpsl
pop
ret
mov
mov
inc
inc
xor
jmp
xor
xor
aad
xchg
push
xor
ret
ss
dec
pop
push
ja
adc
xor
ljmp
mov
push
lods
mov
dec
sbb
mov
add
dec
sbb
ss
adc
pop
scas
sahf
xchg
inc
jae
or
je
je
call
push
movsb
sbb
inc
mov
scas
adc
jp
and
mov
push
loope
jl
int3
insb
mov
sbb
cmp
or
and
dec
cmp
ljmp
adc
les
sub
mov
add
xchg
and
pushl
orb
mov
test
inc
or
fisttpl
dec
dec
test
xor
out
fisttpll
sub
xorb
or
imul
sbb
fwait
lods
or
jmp
repz
ret
in
xchg
sarb
pop
xchg
test
dec
ret
sbb
jae
ja
inc
adc
pop
sbb
jnp
in
and
test
sbb
fcompl
pop
in
inc
push
adc
or
adc
inc
gs
imul
sarl
gs
arpl
aas
movsl
ljmp
sub
out
push
cmp
lret
aaa
mov
pop
sti
jno
out
xor
xchg
stos
xchg
add
movsb
xchg
lahf
testl
cmpsb
dec
aad
xchg
inc
aaa
xchg
pop
lahf
cli
cmp
xchg
jns
in
pop
xchg
in
push
add
push
xchg
outsb
movsl
jmp
fists
js
repz
xor
into
fldcw
inc
mov
xchg
mov
in
and
sub
fsubrs
sub
xor
xor
mov
cld
mov
ljmp
sbb
nop
sbb
test
popf
xchg
sbb
add
cmp
js
addr16
cmpsl
or
pop
jg
lcall
sarl
push
push
inc
push
cmp
lcall
cs
cwtl
xchg
sbbl
jbe
add
xchg
push
or
bound
push
mov
out
sub
pop
stos
mov
mov
daa
cli
mov
lods
scas
xor
mov
test
mov
les
push
jl
sub
mov
mov
jne
mov
jecxz
xor
lcall
jecxz
mov
out
fisubrl
push
add
xchg
xchg
movsb
cmp
ds
jns
fnstsw
add
ja
jl
mov
adc
test
sub
pop
adc
push
or
cli
ja
nop
mov
pop
xchg
test
push
or
lds
add
pusha
mov
xchg
ja
movsb
scas
lods
test
adc
mov
sub
enter
xchg
xor
push
cmp
dec
dec
pop
mov
and
pop
popf
fsubrp
jns
add
mov
push
clc
sub
call
out
adc
xor
dec
dec
dec
add
inc
lods
pop
dec
sub
jp
cmpsl
mov
cld
or
movsl
leave
arpl
cmpsl
shll
adc
popa
das
inc
nop
jp
xchg
insl
insb
cmp
push
xchg
aaa
or
lea
push
xchg
pushf
or
mov
sbb
dec
andl
jo
push
pop
xchg
dec
stos
or
cmp
ret
leave
popf
sbb
in
sbb
imul
cmp
mov
dec
aam
imul
lahf
je
cli
pop
xchg
pop
mov
cmpsl
stos
adc
jp
add
hlt
gs
cwtl
cltd
pop
fdecstp
stc
movsl
cmp
fsubl
test
mov
pop
dec
lea
xor
int
inc
fmull
in
jno
stos
fsubl
out
mov
aad
rcrl
rcrl
pop
or
sbb
push
in
mov
mov
cltd
lahf
cwtl
rcrb
pop
inc
pop
or
cmp
push
mov
and
xchg
xor
mov
adc
cmc
sbb
inc
xchg
lods
test
sarb
pop
mov
nop
hlt
ret
sub
icebp
fldt
push
rol
lahf
lahf
sub
or
jp
cmp
mov
sub
in
insb
sti
inc
push
push
cmc
sub
ss
orl
dec
inc
xchg
push
adc
mov
lods
mov
out
clc
xchg
stos
pop
int
or
into
or
rclb
stos
mov
jno
xchg
dec
add
mov
xchg
test
push
or
lret
mov
stos
inc
out
mov
mov
rorb
mov
aaa
outsb
dec
mov
bound
xor
add
rorb
sar
fs
mov
xchg
mov
xor
icebp
aaa
mov
inc
stc
jmp
out
mov
repz
insl
js
adc
int
xchg
lock
les
out
aam
gs
sbb
imul
notb
iret
mov
stos
sbb
sbb
or
mov
pop
mov
popf
mov
mov
fisubrl
dec
mov
inc
xchg
dec
daa
jbe
movsb
adc
push
pop
out
push
cltd
jno
mov
call
ret
in
pop
std
icebp
push
jb
std
sahf
mov
sbb
xchg
xchg
xchg
sbb
sbb
arpl
jge
xchg
fwait
aas
cld
ret
and
cmp
sbb
popa
push
inc
mov
lcall
push
mov
movb
xchg
jecxz
xor
and
xchg
jb,pt
gs
xchg
mov
loop
cltd
inc
xor
mov
outsl
jl
push
sahf
movsl
hlt
add
dec
imul
iret
xchg
nop
sbb
andb
stos
and
ljmp
sbb
push
fiaddl
pop
das
iret
aaa
or
mov
mov
sub
xchg
movsb
or
inc
insl
loop
int
or
stos
xor
jp
sbb
ret
adc
daa
lods
ja
movsl
jne
pop
call
mov
mov
int
lods
cs
lods
cmpsb
xor
incb
push
cmp
xlat
dec
jae
and
imul
pop
sti
into
aam
scas
stos
mov
and
inc
outsb
cmp
or
jecxz
inc
je
imul
in
and
lea
lods
mov
pop
pop
xchg
jne
iret
std
adc
mov
out
mov
out
enter
fidivrl
xorl
and
fnsave
lods
sarb
rcrb
rcll
mov
std
jp
jp
pop
cmp
jb
daa
psubq
xlat
dec
cmp
push
in
fsts
dec
ret
mov
mov
loop
cmp
jle
mov
sbbl
cli
adc
inc
fcmovnbe
cmp
sti
dec
enter
mov
cltd
adc
mov
cmpsb
pop
xor
aas
fsts
bnd
out
cmc
mov
mov
mov
xchg
push
push
push
sub
cmp
adc
jl
or
ds
ficomps
mov
lock
sub
mov
inc
out
jns
mov
outsl
ret
push
out
push
or
cmp
movsb
dec
adc
sub
mov
push
stos
push
cmc
pushf
ds
fdivrs
jecxz
push
or
insb
movsb
adc
add
cmp
insl
data16
fstps
mov
addl
fsubrl
outsb
stos
in
sbb
movsl
cmpsl
iret
outsl
xor
enter
cmp
cwtl
sub
ja
dec
or
mov
inc
mov
jle
nop
mov
cmp
fistl
add
pop
cmp
notl
imul
fmul
mov
fs
call
mov
mov
mov
add
jp
into
jnp
push
mov
loope
mov
cmpsb
daa
ljmp
xchg
testb
jae
jge
cmp
lods
push
xchg
sahf
jecxz
faddl
shrb
sti
out
popf
inc
lret
cli
js
mov
push
mov
jmp
pushf
xor
into
or
xchg
push
push
filds
mov
test
rclb
push
cmpsl
cwtl
gs
mov
dec
inc
cmpsb
aas
mov
inc
movsb
jae
xor
or
fsubrs
mov
push
pop
in
call
xor
cld
add
aam
sub
push
test
push
addr16
es
enter
stc
dec
insl
hlt
xor
adc
test
jno
xor
push
les
sahf
mov
loope
xor
stc
mov
dec
scas
cmp
or
xor
sarb
adc
hlt
dec
or
jno
dec
mov
outsl
hlt
sbb
jno
call
or
sub
or
pop
xchg
push
sarl
stos
pop
cmp
mov
pop
jne
outsl
cmp
cmpsb
call
add
lcall
dec
fsubs
sub
stos
jle
clc
daa
lret
popf
add
out
pop
dec
xchg
les
mov
pop
add
cmpsb
fisubrl
cmp
adc
mov
xchg
sbb
mov
add
data16
adc
nop
pop
pop
dec
xor
mov
push
push
shrl
cmpsb
orb
inc
pushf
pop
repnz
push
xor
std
je
jg
push
cmc
outsl
outsb
decb
sar
cmp
shl
jo
jno
inc
jnp
push
dec
cli
xchg
out
movsl
addr16
lahf
outsl
inc
imul
dec
mov
out
xchg
fldl
or
mov
insl
pop
lcall
jne
loope
dec
adc
out
aam
cmp
fisubs
cmp
mov
je
xchg
adc
inc
push
test
inc
mov
arpl
jb
out
sub
or
jmp
out
leave
mov
cmpsb
int
pop
ja
cli
add
mov
mov
cmp
push
out
pop
push
jnp
stc
aam
int3
sbb
call
inc
fcomps
jae
pop
les
mov
enter
mov
lret
lahf
xchg
jg
xchg
xorb
sbb
cmp
mov
pop
inc
sbbb
pop
rorb
adc
pop
xor
and
mov
cmp
out
leave
jns
mov
xchg
loope
dec
jbe
mov
out
mov
hlt
out
mov
cmp
lret
or
icebp
roll
arpl
lods
loope
xchg
popf
shr
mov
mov
rol
test
push
lcall
add
lods
sub
imul
xorl
lcall
dec
outsl
frstor
or
andl
sbb
enter
push
push
adc
insl
fstpt
xlat
cltd
mov
fldl
lret
loope
xor
scas
mov
bound
pop
push
sbb
test
sub
xchg
xor
push
xorl
mov
aas
jns
stos
stc
dec
pushf
mov
xchg
je
outsl
inc
jne
popf
cltd
or
icebp
xchg
insl
incl
aad
cli
add
mov
fldl
pop
clc
lret
xor
mov
mov
sub
mov
sbb
inc
inc
call
or
jle
sub
add
and
mov
add
mov
and
test
lahf
cmp
jmp
mov
cmp
lods
mov
addr16
jle
or
fdivl
int3
pusha
mov
mov
mov
mov
xor
testl
idiv
mov
cli
xchg
addr16
shll
movsb
mov
or
jmp
cltd
cmp
inc
mov
mov
fsubs
xchg
jo
iret
rorl
and
shr
jo
and
test
xchg
mov
cmp
lock
sub
cmp
enter
mov
sbb
jg
push
sbb
repnz
imul
push
cmpsl
test
aas
cmpsl
fucom
add
adc
in
sub
and
iret
xor
mov
jae
lds
cmp
data16
cwtl
adc
xor
repnz
int
mov
cli
sub
dec
pop
dec
gs
rep
outsb
aam
pop
push
insl
fstp
imul
sbb
lcall
sarb
xchg
lret
clc
sbb
jmp
cmp
dec
sbb
inc
cmp
mov
fucomp
sub
push
cmp
shlb
mov
mulb
data16
out
or
inc
mov
cmpb
cmp
and
xchg
shl
popf
jbe
fldcw
pop
push
daa
mov
gs
mov
rclb
mov
mov
jecxz
xor
jb
pop
jo
or
and
xor
iret
mov
jle
xor
in
add
data16
dec
int
pop
cs
mov
in
std
pop
fwait
sbb
in
call
aaa
push
leave
push
sar
mov
out
mov
loopne
sub
mov
mov
and
mov
jmp
adc
test
adcb
xor
mov
ror
lock
pushf
orb
jae
adc
dec
sti
dec
daa
sti
jbe
aad
lods
push
mov
test
xlat
imul
push
xchg
hlt
push
xchg
or
add
mov
push
dec
test
or
mov
mov
xor
push
cs
fwait
movsl
sub
jmp
jp
sub
cmp
popa
loopne
cli
sub
icebp
outsl
movb
lods
xchg
lock
and
call
sub
call
and
mov
loop
stc
pop
testb
jle
sub
sarl
pushf
or
stos
leave
xor
inc
sbb
in
ret
add
pop
sbb
daa
pop
pop
ret
dec
shll
push
mov
pop
cwtl
call
aas
insb
daa
jl
mov
rcl
jl
xchg
jg
jle,pt
in
hlt
and
les
sahf
jae
cwtl
or
fdivr
sbb
ffreep
jb
repnz
cmp
test
pushf
sti
add
adc
test
mov
sub
jg
sar
outsl
and
xchg
xor
stos
pop
lahf
adc
pop
mov
xorl
mov
test
cmp
jp
inc
sbb
test
pop
out
leave
xor
sub
into
lea
dec
xchg
stc
daa
ja
xor
leave
ljmp
or
sti
mov
pop
push
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
jmp
or
aad
mov
sahf
fidivrl
testb
jb
test
jns
xor
add
mov
int3
cmp
xchg
mov
sbb
popa
or
popf
insl
cmp
adc
fbstp
mov
in
pushf
aas
inc
mov
jno
mov
rcll
movsl
dec
pusha
inc
xchg
or
out
xor
push
or
xchg
out
sbb
out
cmp
daa
ret
sub
pop
insl
ljmp
jmp
xchg
lcall
jo
mov
orl
mov
pop
std
aam
sbb
dec
ret
shlb
push
in
jp
mov
in
dec
movsb
sbb
into
dec
mov
jns
or
xchg
stos
fwait
inc
push
dec
pushf
dec
arpl
push
and
insb
test
mov
orl
xor
cmp
lds
pop
mov
xchg
nop
cmpsb
lds
hlt
clc
add
pop
mov
adc
pop
xchg
xor
adc
xchg
sbb
xchg
test
mov
movsl
jecxz
lea
fidivl
pusha
pop
loope
jo
and
sub
mov
js
lcall
mov
dec
fstpt
dec
xchg
inc
xchg
adc
rcll
dec
sbb
sbb
mov
nop
xor
pop
aas
out
sub
jmp
mov
xorps
es
inc
into
daa
mov
leave
xor
test
loopne
cld
je
lcall
into
mov
jne
push
bnd
adc
into
ds
mov
dec
dec
sub
clc
cmp
imul
leave
pop
pop
pop
pop
add
flds
mov
movsl
mov
je
push
test
cs
mov
loop
dec
lcall
xchg
xor
push
xchg
outsl
sub
shl
pop
jb
out
add
out
cltd
cmp
into
fmull
test
enter
push
inc
mov
adcb
sbb
fxch
jmp
cmpsl
test
repnz
loopne
xchg
sbb
mov
sub
or
fisubl
pop
sar
push
rcll
inc
push
inc
testl
inc
mov
test
mov
and
mov
cmp
loop
jp
sub
lods
setl
jecxz
mov
fsubr
and
fcoml
je
push
adc
dec
adc
les
xor
jne
std
xchg
rol
jbe
pusha
out
mov
pop
aaa
aas
lret
mov
sahf
test
sahf
aaa
icebp
nop
flds
or
pop
jecxz
push
cmpsb
fwait
adc
adc
ljmp
sub
mov
outsb
in
nop
or
sahf
and
cmp
or
stos
xchg
pushf
pop
mov
sti
mov
push
andb
out
enter
in
cmp
inc
sbb
lcall
outsl
and
jl
mov
aam
xchg
divl
out
inc
or
dec
inc
push
xlat
fldcw
sbb
xor
bound
xchg
jo
inc
movsl
fs
fwait
rorb
sbbl
dec
sbb
fprem
mov
jp
movsb
ror
push
cmpb
pop
mov
or
dec
adc
cmp
adc
push
dec
fsubp
sahf
xor
mov
pop
inc
sahf
mov
mov
loope
inc
pop
imulb
test
mov
dec
testb
mov
dec
push
jl
addr16
or
shll
popa
mov
push
out
sbb
pop
dec
push
mov
cmp
add
or
inc
out
or
rcll
lea
sub
fsts
fwait
push
imul
jp
xor
lea
sahf
jg
adc
and
fwait
sub
push
push
in
lea
frstor
xchg
nop
inc
or
mov
push
sub
pop
push
adc
xchg
xchg
jle
int
ds
mov
loopne
sar
mov
mov
add
jg
daa
or
stc
inc
cmp
mov
push
pop
adc
nop
scas
mov
out
js
add
add
and
mov
jae
jb
mov
mov
sbb
dec
sbb
xchg
cli
lahf
push
adc
mov
add
push
nop
push
in
mov
dec
imul
in
mov
cmp
mov
inc
jp
lea
mov
adc
mov
jae
test
out
inc
sbb
je
xchg
hlt
pop
das
test
cmp
jg
xor
sahf
xor
or
xchg
push
fmuls
jmp
fidivl
jo
sti
and
fstpt
pop
fsubrs
fs
push
dec
cmc
mov
std
mov
dec
push
pop
cld
push
inc
jecxz
sub
out
jne
jnp
lea
xchg
mov
aad
out
sbbl
lcall
inc
movl
lahf
stc
add
xchg
pop
mov
cmp
jae
add
adc
adc
add
push
xor
call
mov
sbb
arpl
out
das
fsubrs
out
sti
mov
add
mov
movsb
enter
aas
les
mov
push
mov
popa
scas
push
in
subl
pop
pop
jecxz,pn
cli
lds
jne
lret
scas
pushf
mov
pushf
popf
das
mov
arpl
cmpsl
jp
jecxz
sub
into
dec
rol
es
adc
mov
sbb
adc
fwait
pop
repz
out
clc
cwtl
repnz
jb
mov
or
jbe
cld
cmp
jecxz
cwtl
push
dec
add
cmp
and
xor
clc
adc
push
pop
push
mov
in
nop
or
mov
add
mov
push
push
dec
push
xchg
xchg
aas
insl
rclb
push
sti
call
inc
adc
xor
cmp
and
push
test
cwtl
adc
and
xchg
cmp
push
nop
cmpsl
mov
cld
jmp
and
add
sti
pop
push
push
fwait
sub
outsb
pop
push
leave
mov
add
add
jne
push
jne
notb
pop
adcb
sub
xlat
jecxz
push
lock
mov
mov
popa
jno
mov
enter
clc
ja
cmp
xchg
xor
jmp
dec
das
sub
xorb
jne
cs
in
mov
jecxz
inc
lock
push
cmp
mov
and
mov
rorb
jo
mov
xor
daa
int
loopne
and
jo
les
out
loope
jle
into
test
inc
popf
clc
leave
cmp
adc
mov
mov
pop
scas
or
inc
ja
cli
les
cmp
and
in
xchg
aaa
fdivp
pop
mov
jae
mov
clc
push
bswap
cmp
rol
adcb
adc
ss
lods
out
cmp
adc
dec
cmc
das
add
xchg
push
jnp
test
outsb
enter
mov
dec
out
jecxz
clc
sbb
rcl
adc
pop
addr16
xchg
ss
pusha
cmp
int3
fwait
pop
dec
outsl
jns
int
mov
pop
lods
dec
icebp
rcrb
or
leave
cmpsl
out
dec
jnp
ds
inc
mov
xchg
pop
mov
imul
jp
mov
fnstcw
and
rolb
fdivr
imul
gs
loope
fmulp
lahf
adc
loope
in
cs
std
insl
int3
andl
mov
inc
les
outsl
lret
xor
add
cwtl
pop
leave
adc
aaa
les
stos
mov
mov
hlt
lea
xor
clc
test
xchg
ds
outsl
int
cmp
data16
jo
cs
cmp
adc
mov
mov
ja
pop
xor
cld
sub
dec
pop
es
dec
adc
out
add
shll
les
stos
dec
adc
sbb
mov
add
mov
jl
cwtl
cli
mov
add
decb
or
cmp
lods
sbb
popa
andl
clc
push
sbb
in
xchg
enter
daa
popf
pop
jp
dec
pop
add
mov
sbb
fstp
mov
xorb
bound
dec
adc
lcall
ljmp
imul
jecxz
push
lock
arpl
mov
mov
xchg
enter
daa
jle
xchg
push
test
or
jo
inc
lods
jnp
popf
push
popf
add
imul
cmp
lret
mov
andl
mov
aas
mov
stos
cli
xlat
in
lods
xlat
daa
leave
pop
jno
xlat
out
add
cmc
cmpb
clc
mov
jne
push
pop
mov
fs
jae
push
lock
or
loope
push
out
aam
inc
pop
push
cmpsb
pop
dec
push
jecxz,pn
enter
loope
sbb
call
lret
mov
jp
scas
data16
mov
int3
xor
lcall
mov
push
in
and
pop
ss
sub
push
scas
jns
dec
jecxz
mov
cld
lods
das
dec
faddl
or
adc
test
fdivl
test
addr16
sub
shlb
loope
dec
in
mov
inc
mov
jmp
andl
add
and
dec
sub
dec
cs
and
push
dec
gs
fwait
dec
rol
mov
notb
xor
add
incl
or
and
pop
lods
ret
scas
pop
sti
xor
xchg
or
xor
aam
dec
pop
push
and
iret
pop
push
mov
das
xchg
pop
push
ja
sbb
les
jbe
ficompl
mov
insl
arpl
leave
fsubrs
fldl
sbb
xchg
es
push
cmp
dec
add
jge
and
dec
cmp
js
sbbb
out
imul
enter
and
sbb
shrb
push
int3
sub
pop
fistps
mov
fs
test
mov
sti
jp
in
decb
push
ss
stos
cmpsb
dec
xchg
mov
ds
mov
jl
lds
bound
lcall
mov
sub
push
call
jl
fldcw
adc
insb
xlat
lahf
push
push
int3
mov
jno
push
andnps
lret
pop
fmuls
push
push
es
popf
mov
out
push
rol
and
sbb
insl
mov
xchg
xor
adc
rcrl
bound
cld
dec
ror
cli
fwait
orb
inc
push
lret
jns
ror
outsl
pop
push
dec
xchg
adc
xchg
add
adc
rcr
mov
pop
sbb
mov
fwait
scas
daa
outsl
iret
jne
outsl
rcll
fyl2xp1
sbb
arpl
enter
loope
mov
sbb
fmulp
jb
in
hlt
mov
mov
jl
dec
insb
jns
das
lock
call
pop
push
inc
outsb
insb
sub
aam
ljmp
adc
and
int3
xlat
mov
pop
dec
jle
xor
popf
stos
xchg
aas
popa
jns
sti
and
jbe
pop
and
adc
xchg
sbb
push
rolb
jne
popf
cmpsl
ja
cmp
jbe
dec
jns
mov
add
xchg
xor
dec
xor
ljmp
xchg
popa
clc
in
pop
std
add
lret
insb
sti
cmpb
mov
aam
loope
or
jo
movsb
jecxz
push
mov
and
jg
add
loop
lds
decl
sbb
pushf
dec
jmp
mov
push
sub
faddl
scas
arpl
addl
mov
dec
and
shl
add
and
pmuludq
cld
dec
cmpsb
sub
movsl
cmp
fs
jp
daa
lret
add
mov
sbb
mov
push
mov
inc
sbb
dec
cmp
adc
sub
cmp
out
sbb
mov
sub
xchg
pop
dec
cwtl
lcall
lea
jns
push
shlb
add
sub
push
outsb
cmpsl
adcb
inc
aas
rcrl
jnp
jecxz
repnz
imul
ja
cli
xor
pop
test
pop
call
imul
fnstcw
nop
fldt
xlat
mov
pop
xor
les
out
test
lea
sar
cmpsb
repz
popf
repz
lahf
or
mov
and
adcb
mov
add
cmp
sbb
and
cmp
ss
fs
lock
xchg
daa
leave
mov
test
and
xchg
ret
dec
jl
mov
int
xor
aas
push
pop
inc
add
push
out
test
clc
adc
popa
dec
rclb
inc
jns
mov
push
mov
gs
imul
jp
popf
mov
rcrb
jp
jbe
dec
and
push
mov
adc
cmpsb
xor
fsubs
xchg
jg
fwait
in
ficoml
outsb
and
cwtl
mov
aam
fisttpl
mov
gs
shl
aam
insl
sbb
stos
and
jge
scas
push
stc
mov
outsb
and
out
mov
push
popf
cmp
jne
int
leave
jne
nop
sub
jae
mov
push
pop
iret
jbe
enter
dec
bound
rclb
xchg
sbb
dec
js
stos
and
xor
xor
pop
pop
loop
icebp
outsl
cmpl
andb
xchg
icebp
jp
and
mov
jl
cltd
mov
lret
mov
fmull
xor
push
js
add
mov
fistpl
lods
fstps
cmp
sbb
dec
cmp
pop
and
inc
imul
pop
push
inc
mov
xchg
repnz
mov
fisttpl
cwtl
sub
pop
ljmp
pop
add
lahf
in
jae
in
mov
dec
jnp
xchg
xor
sbb
add
iret
addl
inc
dec
xchg
bnd
ret
adc
out
in
lret
lahf
mov
inc
fisubrl
outsb
jb
imul
nop
incb
in
inc
push
ret
js
mov
jecxz
rorl
mov
dec
jl
inc
leave
mov
jecxz
cmpsb
in
xchg
dec
mov
and
inc
sbb
jae
jb
mov
cmp
mov
mov
push
mov
cwtl
rclb
cmc
cmc
sub
xchg
popf
and
xor
lcall
sbb
add
not
hlt
ja
fcoms
cmp
mov
loope
adc
adc
xor
push
or
sarl
or
aaa
sbb
cmc
xchg
addb
in
mov
sbb
xor
cs
sbb
pushf
in
scas
decl
adc
dec
popa
mov
inc
adc
jle
mov
jg
mov
je
lret
pop
addr16
push
jne
fnsave
inc
addr16
or
pop
add
roll
sbbb
jnp
mov
and
sub
and
pop
addl
add
mov
xlat
add
dec
clc
mov
push
or
jecxz
movsb
or
or
jmp
sahf
bound
cmpb
cs
lods
ret
jecxz
mov
jb
aas
mov
test
into
imul
xlat
in
cmp
fdiv
cmp
fs
js
loopne
add
lods
fdivrs
addr16
int
or
add
sbb
pop
call
iret
jg
mov
mov
rcl
sbb
outsb
out
cmp
cmpsb
jecxz
out
pop
mov
pop
in
outsb
mov
scas
cmp
lock
add
cmc
iret
add
xor
lcall
xchg
mov
fmuls
xor
add
push
shlb
mov
das
jg
cmp
outsl
rorb
mov
sub
loope
pop
leave
inc
jp
xor
sbb
mov
lret
jnp
out
lds
insb
es
loop
dec
daa
jl
or
add
adc
adc
stos
sahf
movl
flds
xchg
cmp
adc
mov
leave
add
stos
sbb
stc
inc
mov
ja
push
inc
stc
cmp
sbb
xchg
mov
cs
outsl
sub
addb
dec
sbb
pop
das
xlat
ret
hlt
jbe
roll
stos
aas
mov
jmp
leave
mov
in
shrw
lds
mov
imulb
pushf
pop
dec
in
les
jbe
pop
inc
xor
jae
and
std
push
pop
jno
movsb
cltd
test
mov
lret
or
aam
dec
mov
cltd
dec
sar
insl
or
jge
xlat
jo
rcll
cld
mov
popa
int3
sub
push
cwtl
loope
sub
js
jl
fdivrl
setbe
loopne
pushf
pop
sbb
dec
clc
in
cmc
add
lahf
insb
dec
roll
jb
leave
pop
and
and
movl
fistpl
popf
push
inc
mov
adcb
aas
or
xchg
jno
addr16
fnstcw
daa
fiaddl
mov
or
xor
cmp
cmc
lcall
ja
adc
jle
pop
outsl
nop
lods
cmp
nop
pop
or
push
push
into
push
xchg
push
sahf
movsl
arpl
imul
ficoml
aad
or
divb
scas
mov
cltd
xor
mov
sarl
ror
fildll
addl
push
fwait
movsl
ret
pop
push
push
sub
in
out
divl
pusha
stos
push
shr
stos
adc
movsb
imulb
add
loope
pusha
arpl
stos
sub
or
sahf
and
or
scas
xchg
push
movsl
es
idivb
leave
jecxz
and
cmp
dec
fsubs
and
mov
bound
jmp
push
mov
mov
stos
xchg
jmp
out
int
pusha
jge
and
mov
cwtl
mov
push
dec
imul
push
or
xchg
adc
mov
fs
test
adc
fs
sahf
aad
mov
es
xchg
inc
outsb
push
sub
sbb
xor
cmc
int3
dec
xchg
pop
or
shlb
insb
and
xchg
sbb
pop
jp
push
pop
cmp
arpl
lods
outsl
add
adcb
stos
lret
and
pop
push
mov
jns
daa
test
leave
sbb
sbb
movsl
push
and
mul
outsb
mov
roll
loope
fcomps
push
stos
xchg
add
or
sub
clc
jbe
in
ficoms
fdivrp
ljmp
sbb
arpl
out
push
aad
jge
ljmp
lea
test
sub
out
stos
mov
mov
das
mov
adc
mov
ss
inc
repz
fldcw
call
dec
leave
push
and
fstpl
add
push
rolb
popf
or
fwait
jp
test
lea
outsl
loopne
mov
adc
int3
in
fsts
pop
pop
sbb
scas
push
mov
inc
sub
mov
dec
sbb
inc
jb
jae
test
imul
adc
xchg
jo
cmc
cmp
je
imul
scas
rorl
mul
stc
mov
cmpb
jmp
gs
adc
cwtl
cmp
cmpl
pop
clc
xor
dec
or
push
cmp
mov
iret
mov
std
popl
mov
out
lahf
out
inc
iret
and
lret
push
cs
mov
shll
push
in
mov
adc
imul
ja
and
hlt
into
les
pop
test
mov
mov
push
inc
dec
add
ret
lods
adc
clc
lahf
test
pop
xchg
or
lret
dec
and
test
xor
ljmp
out
inc
cli
mov
inc
inc
cmp
jp
mov
add
jo
mov
adc
dec
lret
test
inc
cmp
sbb
test
jno
jb
ret
xchg
mov
push
xchg
dec
sub
sub
dec
mov
pop
mov
add
jg
fwait
xor
dec
sub
add
adc
mov
les
mov
adc
aas
xchg
mov
test
enter
imul
rcl
stc
pop
ror
push
mov
out
push
dec
int3
pop
shrl
mov
gs
pushf
cmpsb
stc
add
cmc
es
sbb
gs
loop
loopne
popf
or
inc
loope
jmp
sub
jmp
imul
stos
pop
outsb
scas
or
out
mov
jle
pop
mul
push
popa
xor
pop
ret
jne
lcall
rcrl
add
int3
sub
push
nop
inc
minps
xchg
lock
cmp
pop
inc
jg
jb
push
in
jnp
lods
andl
adcl
ret
push
lock
cmp
push
mov
push
mov
sub
ljmp
loop
leave
arpl
inc
dec
xchg
dec
lods
and
jnp
cmp
loope
test
arpl
lret
mov
lret
ret
int
lcall
mov
jge
push
jbe
or
cld
es
dec
mov
inc
cmpsl
cltd
dec
cwtl
xor
xor
loop
cmp
icebp
sti
mov
xor
push
jns
data16
pop
lds
cs
cli
push
pop
lahf
jae
fmull
add
pop
mov
mov
jb
cli
leave
sbb
testl
push
or
xchg
sbb
push
lods
mov
inc
in
sub
dec
push
mov
inc
sub
jae
jle
fs
cmpsb
push
fldcw
inc
pop
nop
call
insb
dec
or
xchg
sbb
repnz
mov
pop
lret
jl
and
in
xchg
call
push
test
xchg
mov
jp
pop
cmc
inc
bound
in
fdivp
lret
pop
xchg
test
aaa
sub
imul
test
je
mulb
fbstp
mov
adc
jb
addl
outsb
rcrl
inc
pop
pop
movsl
push
stc
movsl
int3
xchg
mov
iret
sbb
test
lea
in
xor
jnp
dec
inc
push
ja
pop
inc
pop
stos
test
stc
xor
jle
mov
xchg
mov
mov
fldl
fdivl
repz
out
push
mov
push
call
cmp
xor
fnstsw
jl
dec
mov
idivl
lods
fistl
cmp
dec
add
cmpsl
out
adc
out
or
adcb
out
daa
pop
xchg
inc
jae
push
mov
lcall
push
inc
pusha
mov
incl
xchg
cmc
xor
lock
pop
pop
push
jae
adc
fsub
add
sbb
push
inc
push
jne
stos
rcll
outsl
push
add
notb
or
int3
or
popa
mov
lods
push
xchg
fucomi
cld
mov
lret
sbb
pop
sub
pusha
inc
xchg
jle
ss
push
mov
in
lret
addl
int
and
jl
xlat
sarl
xchg
bound
mov
or
mov
fidivs
adc
fnsave
aaa
mov
hlt
cmpsb
cmp
nop
add
mov
and
cs
lea
or
arpl
jp
bound
lahf
pusha
ljmp
xchg
cmp
mov
mov
arpl
imul
sub
mov
movsl
adc
sub
roll
lods
testl
icebp
dec
outsl
cmp
test
iret
lods
and
clc
icebp
xor
cmp
faddl
cmpsb
mov
nop
mov
call
mov
outsb
sub
jmp
jno
aam
mov
add
popa
or
nop
cmpl
pushf
inc
jmp
push
in
sbb
out
pop
jle
cmp
adc
fwait
and
outsb
shrl
xlat
cld
and
mov
adc
outsb
push
xlat
mov
push
sub
cltd
insb
cli
in
jb
fisubs
icebp
jecxz
fimull
mov
add
sarl
sub
loopne
cmp
add
jo
daa
out
jno
and
pop
add
and
mov
dec
sbb
jns
popa
add
xchg
xor
push
cmp
mov
in
xorb
xlat
cmpsl
jae
mov
repnz
and
xchg
pushf
into
adc
or
popa
jle
lock
cwtl
std
sbb
push
lods
sbb
xchg
jo
xor
imul
inc
lcall
jne
inc
rol
hlt
jbe
addr16
rcr
das
push
pop
into
sti
sbb
ds
pop
das
in
push
inc
push
sti
int
or
sbb
inc
or
inc
cmp
repz
mov
ss
fiaddl
movsb
fsubrp
testl
pop
notl
mov
xchg
fwait
in
bound
cmp
in
or
insb
jbe
sub
lods
or
mov
call
sbb
inc
pop
dec
stos
xchg
shl
js
testl
fs
sbb
rcr
cli
mov
fistpl
js
aas
lahf
das
mov
into
lret
ret
adc
das
dec
arpl
out
leave
push
xchg
movsl
or
cmp
fwait
incb
lret
rcl
cmp
sbb
adc
mov
repz
ss
fldt
pusha
mov
insb
ret
sub
ret
pop
pop
ret
cmp
pushl
jbe
or
inc
xor
lds
cmp
push
addr16
testb
sub
xchg
xchg
outsb
xlat
leave
cmp
and
test
fildl
test
and
sub
testb
pop
pusha
push
mov
xlat
adc
mov
mov
call
add
je
jge
repz
jmp
add
aam
sbb
mov
nop
cwtl
mov
mov
nop
jb
mov
iret
call
adc
adc
add
out
out
dec
push
and
mov
and
icebp
jno
sub
enter
test
and
ret
and
or
jl
in
mov
xchg
push
lock
enter
out
ss
rcrb
cmp
aad
imul
jb
or
adc
push
cld
pop
ror
jmp
lahf
cmp
mov
int
add
mov
xor
lods
add
decb
popf
int
and
js
enter
out
jbe
lea
mov
push
mov
cmp
push
loope
add
into
inc
mov
sbbl
xlat
fiadds
dec
xchg
call
addr16
push
and
leave
adc
xchg
inc
mov
pushf
cld
cmp
pop
lsl
mov
inc
sub
into
mov
add
aas
into
push
cmpsb
int
ljmp
add
testb
int
push
sbb
sbb
mov
mov
mov
loopne
je
test
xor
test
imul
inc
fsubrl
pop
xor
pop
inc
add
pop
aas
jle
dec
rolb
pop
adc
int
test
xchg
push
mov
loope
jle
add
pop
jns
sub
pop
lea
jg
jp
inc
lcall
aam
mov
dec
add
mov
xchg
repnz
lea
pusha
add
sahf
inc
aas
ficoml
sysexit
xchg
xchg
cmp
push
xor
xchg
cmpsb
iret
jnp
cmp
imul
push
mov
jge
fs
mov
xor
xor
jle
inc
clc
in
mov
shrl
cwtl
xchg
ljmp
fistps
sub
movzwl
jle
bound
dec
repz
push
outsb
mov
pop
inc
out
mov
sub
rorb
lcall
xchg
fisttpl
sarl
sub
es
mov
xrelease
lahf
mov
xor
ret
sbb
xchg
pop
or
dec
add
pop
and
xor
fistpl
adc
cmp
sbb
clc
jp
std
and
jmp
lods
sub
jecxz
xor
mov
popf
mov
std
jbe
inc
pusha
or
xor
mov
outsb
stos
add
lea
loopne
popa
hlt
mov
cmp
xor
or
shlb
dec
mov
mov
es
jmp
in
fwait
push
inc
imul
stos
jecxz
jle
add
clc
fs
push
pushf
jae
push
jnp
cmp
iret
pop
clc
jg
fisubl
int3
mov
ljmp
dec
xchg
xchg
cmpsb
add
jnp
mov
ficomps
xor
test
dec
loopne
out
outsl
add
xchg
jo
scas
cmpsl
adc
in
xor
or
out
add
ret
inc
int3
dec
push
push
lahf
mov
push
loope
cmpsl
pop
push
lock
cmc
adc
sbb
jb
outsb
hlt
stc
repnz
repz
or
insb
lahf
cmp
xor
push
arpl
push
sbb
sbb
xchg
dec
xlat
in
sbb
dec
inc
ret
out
in
fldln2
mov
repnz
jl
daa
iret
clc
or
xor
or
aad
add
mov
outsb
std
add
lret
pop
loop
movsb
sarb
imul
rcrb
je
enter
sub
lock
mov
add
sub
push
cmp
cmp
adc
clc
push
xchg
mov
in
and
cli
nop
outsl
dec
mov
or
aam
push
xchg
dec
dec
inc
pop
xor
insb
or
arpl
rol
rcl
pop
push
jg
inc
jae,pt
popf
mov
fsub
mov
aas
jp
pop
scas
mov
mov
shll
or
lds
mov
xchg
and
sahf
jmp
adc
pop
cmp
jmp
cwtl
jmp
iret
int
jp
fstpl
jnp
dec
ret
test
outsl
mov
pop
add
jb
cli
test
sub
inc
jo
aas
leave
xchg
outsl
sub
arpl
out
sbb
push
sub
mov
xchg
cmp
das
shrl
jno
dec
cmp
scas
or
mov
add
cmc
test
outsl
xor
jmp
ss
and
adc
mov
xor
test
mov
cltd
cli
ds
cmp
xor
incb
repz
lods
push
adc
sbb
add
jb
add
push
sbb
scas
call
ljmp
fs
xchg
mov
es
pop
loopne
xchg
orl
fs
ror
loope
int
pop
aas
inc
mov
fidivrl
jne
lods
push
repnz
cmc
mov
ss
divb
pop
pop
enter
int3
setle
and
mov
xchg
aam
xor
and
add
dec
mov
sub
stc
fucom
outsl
stc
ss
ja
xor
lock
add
push
cltd
sar
pop
inc
ret
add
jnp
and
adc
mov
cwtl
imul
shlb
cmp
enter
pop
push
mov
loop
pop
aad
add
sub
rolb
sbbb
dec
sub
jmp
pop
outsb
push
cmp
stos
cld
std
lcall
pop
fiaddl
les
in
sub
mov
adc
test
pop
sub
cmp
fwait
and
popa
inc
sbbb
mov
shl
ljmp
cmp
xor
mov
and
or
movsb
js
cmpsl
ficomps
inc
mov
lret
mov
rolb
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sbb
xrelease
push
mov
aaa
icebp
imul
pop
jge
rcrb
jb
js
std
xor
shrb
stos
fdivl
mov
or
mov
ret
cltd
fnstsw
insl
push
cmp
xchg
xlat
cmpps
pop
fisubrs
pusha
ja
std
cmc
mov
out
adc
filds
cli
or
jne
div
xor
les
and
std
pop
lods
push
cltd
adc
jbe
jns
or
xchg
xlat
mov
hlt
fwait
stc
push
ljmp
outsb
jno
sti
sarl
or
dec
ljmp
movsl
cmp
jns
adcl
adcb
lcall
mov
cmp
popa
xchg
cmp
mov
jge
addr16
mov
jecxz
jae
scas
nop
leave
ficomps
cmc
sbb
stos
sub
sbb
icebp
icebp
pop
icebp
mov
cli
jl
testl
enter
xor
in
add
jle
pop
repz
clc
das
mov
bound
sbbl
das
xchg
xor
and
mov
rcpps
test
jae
jecxz
push
jle
pop
inc
pop
in
lock
test
xchg
fwait
ret
and
mov
xchg
push
mov
mov
movl
and
cmp
decb
sub
jp
mov
push
add
jae
out
push
sub
sahf
mov
in
outsl
adc
pop
fcmovnu
or
out
mov
inc
loope
rclb
xchg
loop
push
xor
add
pop
fs
jle
ja
mov
jb
dec
dec
je
mov
in
push
xchg
and
jne
xchg
or
mov
adc
dec
mov
mov
loope
in
call
movb
pop
pop
or
mov
nop
nop
push
lock
push
mov
mov
xchg
xorb
cli
push
cld
int
add
sub
inc
sarl
dec
jge
mov
jbe
sub
addl
inc
jb
add
add
mov
jl
fdivrs
add
and
dec
repz
sbb
jg
inc
movsl
cmp
sub
pop
fs
sub
xor
fldl
mov
adc
add
cmpsb
data16
mov
fnstenv
jle
lock
in
cmp
clc
and
loopne
test
sbb
adc
mov
in
cltd
adc
fmul
or
lods
dec
sub
dec
icebp
ljmp
leave
xchg
push
xor
add
ss
mov
test
hlt
fidivl
dec
pop
cwtl
mov
aad
ror
pop
mov
stos
cli
mov
insl
xor
leave
push
mov
sub
mov
adc
mov
js
mov
cli
loopne
push
nop
sbb
hlt
outsl
scas
test
testl
es
femms
mov
shlb
loope
sahf
pop
out
in
jno
sbb
les
pop
repnz
cmp
push
sbbb
add
xchg
in
out
lods
push
mov
rclb
jl
mov
imull
fisubl
out
xor
decb
xchg
loopne
or
pop
mov
cld
outsb
cmp
cmpsl
push
add
fbld
mov
in
pop
vpcmpeqb
push
mov
rolb
and
into
dec
loopne
xchg
int3
cs
out
push
sarb
push
int3
mov
jb
popa
loopne
sbb
jmp
cltd
clc
xchg
bound
je
je
fdiv
out
scas
ljmp
call
faddl
inc
fiadds
ret
stc
and
lahf
xchg
fisttpll
leave
fiadds
mov
rorl
cld
lods
or
sahf
add
cwtl
negb
mov
mov
leave
lahf
jo
mov
out
mov
scas
inc
push
jns
pop
bound
in
adc
stos
nop
jecxz
shll
cld
xor
ljmp
add
push
sbb
mov
mov
ljmp
and
push
jnp
gs
lods
inc
push
ret
add
mov
mov
loop
push
sbb
cwtl
adc
inc
in
in
into
sub
dec
mov
popa
jbe
sub
pop
call
mov
sub
stos
add
dec
outsl
cli
cmc
lret
leave
fxch
jg
and
push
or
leave
cmc
inc
adc
xchg
test
shl
loope
adc
test
fildl
xor
mov
mov
in
inc
outsb
imul
dec
int3
aaa
xchg
pusha
inc
xor
xor
dec
cmp
hlt
or
sub
stos
enter
xor
daa
push
mov
cld
rolb
cld
and
add
ret
or
repz
je
add
xchg
add
jl
mov
push
or
lods
hlt
jecxz
add
mov
mov
lock
mov
pushf
pop
js
mov
lds
sbb
dec
popa
mov
adc
in
fcom
insb
inc
push
adcb
dec
and
arpl
dec
push
adc
or
and
and
loopne,pt
pusha
inc
stos
test
cmovb
push
imul
adc
pop
mov
dec
inc
aam
push
mov
or
arpl
or
or
in
ja
push
dec
sbb
sbb
pop
in
jmp
and
lds
out
mov
repnz
and
mov
push
xchg
data16
imul
xor
push
mov
mov
adc
out
add
lock
cmp
mov
rcrb
sbb
roll
lret
xchg
stos
roll
js
inc
repnz
test
loop
cld
int3
mov
out
push
sub
jns
xor
cmpsl
xchg
aaa
outsb
push
gs
push
daa
pop
je
xor
dec
cs
pushf
cwtl
movsl
mov
inc
lds
mov
mov
in
xchg
mov
stos
cs
call
repz
cmp
out
scas
fisubl
jle
loop
imulb
jle
jno
inc
movsl
aas
ret
jns
mov
movsb
pop
adc
mov
jg
scas
mov
movsl
imul
adc
cs
arpl
aam
mov
mov
shrb
loope
fisttpll
jecxz
cmp
fdivl
sub
and
xlat
movb
test
aas
sbb
loopne
cmpsb
fdivr
push
in
rorl
cmpsb
adc
arpl
pusha
gs
cmp
mov
pop
clc
inc
test
push
adc
lahf
add
out
es
imul
add
jge
dec
jmp
push
cmp
add
and
movsl
stc
xor
dec
adc
xchg
shlb
loop
jo
sub
push
adcb
fs
mov
mov
incb
fwait
pop
in
pop
xchg
and
insl
adc
jno
pop
cmp
jge
lds
je
frstor
std
arpl
cmp
pop
pop
clc
jge
and
add
xchg
icebp
lock
popa
adc
mov
addr16
into
std
scas
and
cld
add
xchg
cmpsl
js
xchg
rclb
mov
divb
dec
and
insl
inc
pop
mov
push
bound
add
xor
aad
aam
inc
pop
or
out
adc
cli
or
out
cmpsb
push
ret
xchg
push
std
div
xchg
mov
xchg
in
fisttpl
sbb
and
pop
not
dec
in
arpl
add
stos
ret
test
std
bound
fdivr
dec
ret
push
or
sub
lods
sahf
dec
xor
adc
jle
xchg
cmp
adc
sahf
fcmovu
sub
mov
xchg
sti
notl
and
xorb
aaa
xor
jle
roll
call
cmpsb
ret
xchg
add
xchg
sbbl
inc
and
les
mov
into
pop
shll
mov
or
ja
ret
imulb
arpl
dec
adc
dec
movsb
pop
faddl
mov
ret
push
adc
dec
daa
hlt
jl,pn
cs
push
cmp
addr16
sub
mov
cwtl
xor
sahf
jnp
or
and
aam
fwait
mov
outsl
lcall
xor
hlt
ficoml
daa
inc
bound
sbb
ss
xor
cmpsb
lods
pop
fsubl
test
pushf
xchg
scas
repnz
sbb
ret
outsl
cmp
cmp
sub
lds
sub
ja
stos
jg
and
pusha
bound
push
testl
mov
scas
push
inc
or
adc
mov
sub
leave
xor
ds
std
inc
jg
xor
add
ret
jbe
sbb
sbb
sbb
jg
xchg
xor
pop
xchg
aas
or
or
or
mov
push
insl
sub
mov
xchg
mov
lea
arpl
add
mov
and
push
stos
inc
cli
jl
aad
lret
jne
in
add
pop
xor
cwtl
push
xor
aaa
xor
jmp
clc
inc
jp
xchg
ror
call
or
jecxz
dec
leave
adc
mov
pop
bound
hlt
cmp
sbb
icebp
pop
cli
shlb
push
cld
mov
sbb
faddl
mov
in
fcmovnbe
add
push
push
testb
mov
rorb
xor
call
pop
ja
mov
mov
mov
pushf
hlt
sub
ds
xchg
test
xor
jnp
in
lods
andl
mov
ljmp
in
lea
call
in
pop
cmp
repnz
pop
mov
repz
adc
lret
hlt
cmp
push
mov
jbe
adc
mov
mov
dec
aam
lods
jmp
jne
and
xchg
test
adc
pop
js
stos
jp
push
jnp
push
push
add
xchg
jmp
aas
sbb
or
enter
outsb
ror
push
sub
ljmp
fldt
sub
data16
pop
mov
sbb
test
repnz
ja
scas
dec
dec
pop
adc
pop
jl
mov
data16
inc
mov
mov
aad
and
in
ret
in
shl
cltd
rcrl
xchg
out
and
stc
and
stc
aam
loop
mov
pop
pop
sub
adc
jne
xor
and
push
cmpsl
push
jl
jle
iret
xorb
in
adc
cmp
push
adc
mov
xchg
jmp
pop
sub
and
xchg
xchg
add
add
sub
sti
lea
test
mov
ss
mov
lret
mov
mov
outsl
fimuls
mov
mov
pop
pop
jmp
sbb
pusha
sti
aaa
lock
outsb
mov
shrl
pushf
push
or
or
adc
pop
cld
add
mov
cmp
mov
sbb
xchg
inc
cwtl
outsl
and
or
add
mov
ljmp
popf
out
jecxz
jge
cltd
out
mov
sub
mov
dec
popa
lret
pop
sbb
iret
cmpsb
sar
sbb
pop
movsb
mov
dec
pushf
push
inc
mov
adc
popa
cmp
lock
rep
mov
addb
sub
mov
xor
cltd
call
lret
jle
clc
data16
mov
mov
cmp
inc
movsl
aad
daa
pushf
outsb
das
sti
mov
mov
sub
andl
push
inc
inc
cmpsb
dec
lret
dec
aaa
fiadds
mov
test
mov
dec
call
je
mov
nop
std
incb
sub
imul
stos
movsb
push
in
lret
int3
jne
in
lds
jle
jb
xchg
cmp
sbb
fcom
push
and
lods
cmp
and
sbb
lcall
add
adc
stc
bound
or
test
das
cld
test
subb
xor
jbe
std
icebp
ret
cs
call
mov
in
dec
jl
pop
and
sarb
popf
fcoml
push
or
and
cmp
xor
or
inc
push
std
xor
clc
or
int
pop
pop
mov
mov
hlt
stc
jae
in
in
repnz
add
xor
das
pushf
push
mov
pop
repnz
sub
lahf
lock
cmp
inc
xchg
mov
sbb
pop
pop
fst
sub
bound
pop
adc
lea
inc
mov
std
pop
or
jb
mov
mov
inc
addr16
lcall
shrl
ss
sti
jmp
pop
sbb
add
mov
pop
sub
aad
aas
movsb
imul
add
cmp
sti
cmp
cmp
dec
lods
scas
mov
movsl
and
rorb
das
pop
push
call
push
adc
dec
adc
hlt
repnz
lcall
movsb
inc
andl
ss
popa
jns
lods
dec
or
jle
xchg
xlat
lods
push
dec
hlt
xchg
leave
fstl
jp
cs
filds
xlat
add
cltd
jno
sub
enter
add
push
arpl
pop
dec
xor
mov
mov
insl
sbb
jae
pusha
sub
lmsw
sub
lods
sbb
add
sub
sbb
cs
xor
outsb
ljmp
xor
lock
xchg
pop
adc
aam
aad
jnp
sarb
lcall
adc
or
xchg
xor
inc
mov
mov
add
test
or
or
rcr
cltd
cmp
fldcw
adc
push
lret
cli
or
push
jl
loop
jge
dec
add
pop
jg
jb
int3
jl
and
sbb
fidivrl
daa
js
lret
outsl
das
add
jmp
push
lods
xor
pushf
fsubrl
inc
or
add
sub
mov
adc
jmp
inc
in
test
cmc
stos
jns
sbb
mov
jne
cmp
jno
pop
sub
fdivrp
push
stos
rolb
daa
dec
adc
loope
xchg
call
and
and
movsb
mov
xor
xor
xor
dec
daa
mov
aam
loopne
sub
mov
pop
stos
and
out
add
add
mov
xchg
nop
pop
mov
xchg
leave
loope
dec
sahf
mov
push
lret
int3
cmp
out
fiadds
mov
rclb
and
push
sti
cmpsb
or
mov
sub
mov
jecxz
hlt
ds
adc
adc
mov
cmp
push
ret
subb
test
inc
inc
imul
fs
push
add
sti
xchg
cmpsl
xor
loop
jg
add
jno
rcrb
xchg
pop
pushf
aam
fnstsw
push
add
outsl
jl
imul
sub
jge
std
cmp
bound
mov
jge
inc
filds
sar
fs
and
enter
icebp
repnz
push
jns
clc
xchg
inc
lds
sbb
std
push
push
mov
add
test
mov
out
fsubrs
jb
repz
hlt
pop
add
fldcw
sbb
inc
add
pop
sbb
ficoms
push
inc
jg
mov
pop
jle
loop
inc
mov
push
cld
lret
ss
cli
shlb
jecxz
jge
es
iret
xlat
ret
in
or
mov
std
cwtl
xor
repz
ror
popf
es
mov
mov
and
in
icebp
xchg
lock
adc
and
ja
and
gs
mov
mov
aad
ja
sbb
fisubrl
into
mov
and
adcb
jmp
cld
or
add
aad
mov
int3
sahf
negl
and
icebp
xchg
push
test
dec
clc
mov
movsb
int3
jmp
loope
imul
cli
jmp
out
fcomps
cmpsl
xchg
int
xlat
roll
fs
std
dec
jecxz
in
pushf
lahf
xchg
adc
int
xchg
push
sbb
or
push
jo
mov
xor
add
mov
aad
add
jmp
jmp
xor
mov
stos
hlt
in
pop
fidivs
inc
out
lods
mov
ljmp
or
mov
and
add
pop
mov
in
mov
pop
sarl
js
jecxz
fadd
js
je
pop
out
fcomp
inc
xor
mov
leave
movsl
sti
inc
cltd
and
aad
and
test
in
ret
add
shrb
mov
jbe
lods
inc
push
cltd
aaa
jmp
cmpsb
rcl
xchg
rcr
mov
fsubrs
fs
mov
movsb
and
ror
xchg
push
into
xchg
mov
mov
inc
lret
jecxz
mov
gs
out
dec
outsl
push
dec
outsb
scas
rol
dec
fisttpll
xor
push
jge
jl
aaa
addr16
inc
inc
inc
mov
push
inc
clc
mov
lret
push
jne
dec
daa
fnstenv
ja
aaa
push
pop
and
cmpb
mov
test
pop
jge
pop
out
jp
sti
aam
inc
push
adc
push
loop
mov
sbb
andb
into
pop
test
dec
and
ret
mov
jns
stc
cs
std
in
mov
push
mov
pop
int3
testb
test
jae
inc
stos
mov
mov
mov
jp
xchg
inc
sbb
dec
jp
in
cs
in
popl
add
pop
leave
mov
mov
test
mov
xor
dec
mov
outsb
and
push
mov
shll
xlat
jg
cmp
mov
inc
cwtl
stc
or
pop
pushf
xchg
add
xchg
in
punpckhwd
jnp
mov
or
adc
pop
ss
push
xor
jmp
push
test
movsl
push
mov
jne
es
imul
lock
mov
cmp
and
push
push
mov
dec
mov
notb
imul
rorb
fnsave
popf
ret
cmpsl
mov
or
loop
aas
sahf
add
adc
scas
pusha
pusha
mov
jmp
sbb
inc
aad
mov
sbb
pop
cs
xchg
sub
mov
popf
pop
xor
ret
jae
mov
adc
shl
sbbb
pop
inc
pop
rcrb
jno
mov
pushf
push
aaa
movsb
push
insb
test
add
mov
xlat
mov
fsts
leave
test
mov
pop
lock
mov
fs
faddl
lret
and
xchg
lret
mov
movsb
test
scas
fwait
sbb
mov
lds
pop
fsubl
sbb
rorb
sub
mov
mov
daa
xor
ljmp
nop
mov
cld
stos
add
xchg
gs
int
loop
inc
dec
xor
out
jne
mov
jp
or
shrl
inc
sub
adc
mov
sub
push
rorl
outsb
sti
adc
sub
add
mov
hlt
jmp
sbb
fsubp
ret
jmp
outsb
out
popa
mov
add
setne
cltd
hlt
dec
div
xor
push
mov
mov
mov
cltd
repz
or
xchg
xchg
and
sub
cmpsl
test
xchg
jo
sub
jno
enter
inc
test
jne
inc
jecxz
movl
cmp
sub
loope
push
and
pop
sub
rcl
in
add
cmp
mov
dec
adc
cli
outsb
mov
push
call
mov
xchg
adc
test
or
mov
bts
and
dec
jp
out
shrl
adc
dec
stos
es
jge
lret
sbb
cli
xor
addr16
and
data16
decl
decl
aaa
add
pop
int3
cmpl
inc
xchg
sbb
adc
mov
jnp
sahf
or
xchg
dec
out
sbb
inc
shl
jno
jbe
int3
mov
cs
push
add
iret
cwtl
sbb
sahf
scas
pop
arpl
push
sub
push
or
sub
pop
mov
lahf
adcl
enter
jmp
push
pop
out
hlt
sub
movsl
push
repnz
mov
xchg
out
lret
addr16
cmpsb
pusha
scas
or
lds
sbb
adcb
adc
mov
test
icebp
push
sar
imul
outsl
or
loopne
mov
mov
mov
lock
inc
pop
out
out
fcoml
das
jbe
lock
icebp
dec
cmp
dec
lods
mov
test
xor
insb
decl
xlat
fsubrp
es
cmp
xlat
xor
leave
adc
cmc
or
push
mov
pop
mov
and
or
mov
sub
mov
rcrb
cmp
popa
xchg
adc
mov
cmp
out
sub
out
cmp
sahf
lods
out
cmp
es
movsl
pop
je
sub
cmc
sbb
push
xlat
and
cmp
adc
xchg
nop
repz
sbb
push
les
bound
push
shrb
movsl
les
dec
es
xlat
dec
enter
rorl
mov
pop
lahf
idiv
ret
jne
leave
mov
jle
cmp
jecxz
loope
lret
mov
movsl
pop
adc
and
jno
inc
lods
jmp
call
dec
mov
js
es
test
loope
mov
cmp
adc
sbb
fwait
pop
and
ja
jb
aad
fsub
sahf
lods
imul
adc
add
sbbl
and
mov
ret
xlat
cmc
cld
out
mov
push
pop
xor
pop
jbe
cmpsb
sti
inc
loop
sub
xchg
mov
cltd
jl
mov
scas
mov
mov
dec
pop
pop
mov
lock
xor
cmpsb
scas
shr
test
popa
mov
int3
rcrb
adc
sbbl
in
push
cltd
or
addr16
push
in
jnp
xchg
repz
mov
add
pop
pop
popa
inc
mov
pop
sti
push
ds
popf
inc
cli
pop
push
into
scas
insl
sbb
loope
rcll
scas
ret
icebp
lea
add
add
or
push
in
dec
icebp
mov
outsl
or
fstps
mov
subb
inc
mov
sub
fcmove
lds
ficoms
ror
jmp
ja
test
arpl
add
inc
jbe
lret
pop
test
into
lock
ljmp
dec
xor
jns
bound
push
sti
push
push
inc
imul
adcb
imul
mov
lcall
dec
test
mov
jmp
adc
popa
fwait
loope
xchg
rorl
movsb
add
insl
scas
pop
or
and
loop
mov
test
test
push
adc
xchg
pop
lret
fcomps
pop
cmpsb
pop
cltd
nop
cmp
xor
ds
mov
xchg
mov
dec
sbb
js
shll
fdivrl
cmpl
insl
cmp
pop
in
icebp
cmp
inc
adc
mov
mov
bound
out
in
or
dec
stos
pop
fdivrl
push
xchg
lods
lods
push
test
out
fnstcw
push
lea
sub
ljmp
xchg
out
int
dec
pop
in
xor
and
sbb
aad
and
xchg
shl
dec
or
push
pop
dec
andb
push
sahf
call
sub
pusha
ja
and
push
mov
xor
cmpsb
and
mov
ret
mov
call
lds
xchg
das
push
int
jne
pop
or
fdivrl
adc
pop
mov
in
dec
jns
rolb
push
xchg
mov
jne
std
sbb
xlat
jge
popa
lret
out
jecxz
push
push
dec
sbb
pop
mov
lea
jecxz
push
pop
mov
subl
push
or
adcl
mov
sub
inc
and
lods
cmpsb
cmp
and
sbb
sqrtps
rcll
sbbb
and
xor
movsl
and
inc
test
outsl
sbb
test
fsubr
rorl
call
nop
std
jle
xchg
je
or
out
pop
in
and
mov
push
or
out
xor
pop
dec
mov
cld
leave
xchg
daa
lcall
mov
jbe
pop
rcll
jp
xor
inc
push
xor
mov
dec
loop
sub
rcl
lock
and
scas
sbb
and
cmpsb
jo
pop
ljmp
mov
lock
cmp
xor
dec
push
cmpsl
sub
enter
sub
sub
mov
pop
je
loope
dec
jg
mov
in
insb
data16
sub
push
mov
js
xchg
adc
sahf
je
jns
test
lods
inc
lret
cld
pushl
xchg
lahf
lret
movsl
sbb
jo
xor
sbb
adc
les
mov
out
dec
dec
pusha
adc
push
cmpsb
dec
stos
sbb
in
out
xchg
mov
dec
fildll
sub
fisttps
ficoml
ss
int3
sbb
mov
cmpsb
aad
nop
ja
orl
loope
imul
enter
jecxz
sub
jns
inc
mov
cmp
jnp
add
or
add
arpl
in
jnp
cmp
pushf
mov
mov
bound
testl
mov
inc
mov
sbb
add
cmp
fs
jmp
cs
mov
dec
sti
lret
aas
xor
pop
push
and
jno
test
mov
and
lcall
cmp
sub
rclb
jnp
jmp
das
jge
sbb
pusha
adcb
ja
xchg
add
sti
ss
or
andb
lock
mov
shl
gs
lds
divb
xchg
cmc
mov
and
inc
lods
adc
dec
jg
test
mov
or
repz
xchg
mov
mov
xor
push
sub
fmull
add
imul
jmp
pop
mov
es
ret
imul
negl
daa
push
out
pop
cmp
leave
pop
push
inc
and
ja
aas
dec
pop
and
and
adc
and
cmpsl
les
lahf
popa
jb
cwtl
icebp
jae
iret
in
cmp
fimuls
cs
jp
dec
sub
sbb
movsl
int3
sbb
rcl
push
lds
loop
jecxz
bound
hlt
sti
out
mov
enter
dec
xchg
xchg
push
sbb
xor
cmpb
test
cmp
sbb
add
lock
jbe
pop
adcl
int
xchg
mov
pop
fisubrs
rcr
mov
push
push
jecxz
in
in
push
pop
sbb
sbb
mov
sbb
xchg
mov
mov
adc
jne
mov
daa
xchg
enter
ja
and
int
dec
sbb
sbb
mov
imul
stos
mov
sbb
mov
sbb
daa
arpl
test
mov
sbb
in
mov
test
stos
loope
bound
sahf
xorl
xor
into
dec
jno
and
lahf
lock
das
xor
mov
push
jecxz
or
push
sbb
sub
lods
shrb
or
push
imul
dec
and
xor
addr16
push
fwait
xchg
add
ret
subl
popa
hlt
or
mov
lock
sbb
adc
lds
imul
or
mov
lcall
xchg
pop
mov
into
pop
adc
inc
int
or
jbe
shr
cld
fucom
adc
mov
loope
jbe
frstor
mov
inc
jle
lahf
jp
loop
sarl
jle
outsl
jne
test
fimuls
xor
pop
dec
xor
es
lods
adc
push
movsl
imull
lock
xchg
inc
xchg
sbb
aam
xchg
add
ljmp
sbb
sub
mov
mov
loop
cwtl
mov
shld
sub
adc
jecxz
xor
divb
cld
mov
xchg
or
pop
inc
scas
sub
fbld
or
pop
into
incl
pop
mov
lret
xor
sub
clc
scas
cwtl
daa
call
mov
bound
adc
xor
mov
mov
lods
fldl
aam
rcll
xchg
pop
jge
repnz
xor
sub
inc
jno
aad
lret
mov
imul
adc
jo
inc
and
int
push
mov
xchg
div
mov
mov
mov
shlb
xchg
mov
aam
mov
mov
inc
aam
sarl
fs
mov
outsb
and
in
push
pop
cmp
adc
jns
sub
in
sub
aas
repz
out
jo
push
les
test
subb
mov
rclb
mov
mov
jnp
shrb
outsl
push
or
fs
jae
mov
xor
dec
daa
cmpsb
mov
inc
mov
cwtl
mov
xchg
lret
push
push
fiadds
adc
mov
dec
pop
iret
adcb
in
sub
push
es
hlt
xor
adc
inc
jmp
xchg
test
sbb
or
popa
loopne
mov
sbb
lock
sbb
xchg
push
sub
pusha
movsl
imul
and
insl
pop
mov
shlb
xchg
sahf
fsubp
stc
in
rclb
lcall
fcoml
jo
sub
aam
enter
add
out
fiadds
pop
sbb
jne
push
in
cs
aaa
lret
in
pop
pop
jp
cmpsb
adc
stos
mov
xchg
mov
push
ret
nop
das
out
push
pop
push
cmp
push
mov
loope
lock
cmp
pop
out
call
cmp
fwait
cmp
adc
or
loopne
lods
mov
or
pushf
aad
aad
in
imul
imul
add
leave
adc
mov
and
int3
pushf
shlb
mov
insb
push
cld
sbb
ja
and
in
bound
xchg
pop
rorb
xchg
outsb
mov
add
add
add
aad
push
popa
or
lods
pop
mov
push
and
imul
ret
mov
shr
xor
addr16
aam
and
into
outsl
ljmp
shrl
add
and
push
decl
sahf
ret
out
or
sbb
mov
mov
das
add
shll
push
test
lock
dec
mov
jae
insl
loope
xor
inc
add
jecxz
jne
lds
pusha
out
fwait
xor
dec
jbe
jno
mov
jl
stos
mov
jl
sub
fs
and
movsb
pop
fdivl
roll
fcompl
hlt
loopne
lock
cld
movsb
push
add
shll
sbb
jb
inc
mov
js
out
push
pop
divl
movsl
xor
cmc
std
sub
mov
test
push
andb
push
inc
xor
sahf
push
sub
clc
and
subl
xchg
stos
incl
cs
push
mov
xor
sbb
cmpsl
lcall
or
adc
into
in
notl
adc
mov
or
in
jg
add
fcomps
cmp
cmp
or
mov
xchg
cmp
mov
mov
icebp
dec
dec
cmp
aas
shll
rol
push
add
scas
lret
test
dec
or
mov
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
add
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
add
add
add
add
add
add
add
roll
add
lds
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
add
add
inc
push
dec
xor
xchg
push
jne
inc
lcall
xchg
add
add
inc
cmp
outsw
inc
outsl
insb
fs
popa
je
pop
push
imul
outsb
je
jb
popa
insb
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
adc
ret
mov
dec
movsl
xchg
add
add
add
fcom
xchg
sbb
nop
rolb
xor
addr16
or
xchg
cmpsl
mov
mov
les
xchg
cltd
xlat
inc
addb
fs
jb
popf
adc
movsl
rcr
inc
or
adc
out
jae
imul
mov
in
stos
dec
bound
sub
lea
jns
insb
ljmp
repz
scas
rclb
stos
out
xor
adc
lcall
rorb
mov
rcrl
add
int
mov
test
test
xor
mov
test
push
push
cmpsb
push
lods
fisubl
push
push
out
cmp
add
or
push
popa
insl
mov
jge
stos
test
insb
adc
mov
daa
test
test
or
pusha
add
cs
aas
mov
adc
mov
add
pop
or
cmp
mov
loop
pop
mov
les
add
out
enter
xor
sub
arpl
imul
jl
sbb
mov
inc
adc
pushf
dec
cmp
jns
addr16
das
lret
es
pop
gs
loopne
push
xchg
outsb
je
loope
and
and
pop
insb
fcomps
aam
mov
sahf
or
cmpsl
mov
rcr
mov
or
jmp
out
and
adc
repz
mov
dec
stos
pop
sub
push
cmp
or
and
mov
jl
sbb
stos
fsubrl
out
jmp
rorb
adc
sub
pop
aam
pop
mov
fisttps
and
mov
xchg
mov
mov
xchg
mov
pop
scas
add
mov
jle
mov
mov
call
into
movsb
sbb
adc
xchg
inc
add
test
sbb
mov
sbb
test
jo
mov
mov
dec
push
rdmsr
sub
idivl
mov
xchg
movsb
popf
mov
js
ja
sub
lea
pop
dec
pop
push
shlb
cld
movl
mov
push
ss
dec
mov
pop
outsb
add
add
cmp
push
lods
mov
clc
or
jp
fidivrs
aam
out
inc
cltd
and
repz
xor
imul
xor
mov
popf
imul
push
push
mov
xchg
sti
hlt
cwtl
test
push
lret
movsb
xchg
nop
dec
out
test
movb
in
mov
add
cwtl
cwtl
pop
jb
push
push
aad
lock
fwait
push
arpl
call
push
mov
jle
cmp
arpl
add
cli
stc
imul
inc
adc
sbb
inc
pop
repz
and
mov
repnz
cmp
lcall
sbb
and
les
jmp
imull
enter
popa
test
icebp
dec
xor
xlat
aas
jge
jne
out
push
xchg
cmp
mov
adc
cmp
std
cltd
add
loope
sub
cmp
aad
and
fdivrl
cmp
adc
push
inc
push
xorb
sbb
adc
out
call
repz
mov
in
movsb
xlat
push
jmp
mov
in
test
jb
dec
lds
test
dec
jge
out
jecxz
cmpsl
out
shl
push
jl
mov
mov
jge
ja
aam
in
push
js
mov
jne
add
call
cmpsl
lds
jnp
test
mov
jmp
out
into
push
enter
jne
ja
mov
and
leave
and
test
adc
inc
sahf
stos
push
jns
xor
das
add
cli
xor
inc
or
call
xchg
mul
mov
inc
add
shrb
adc
out
sub
lret
jg
sub
adc
cli
jle
and
adc
pop
cli
nop
jecxz
shlb
dec
lcall
sarl
mov
mov
xchg
xor
mov
inc
inc
jp
jl
lods
clc
incl
adc
jecxz
mov
sub
sub
xchg
jge
adc
and
repz
rcrb
addr16
fdivrl
or
or
xchg
sbb
or
sahf
out
insl
les
xchg
or
mov
jae
add
outsl
jne
jl
nop
sub
pop
adc
shll
pushf
ja
les
cmpsb
fwait
dec
in
push
dec
sbb
push
pop
or
pop
lods
cltd
cmp
ret
xor
xchg
xchg
pusha
mov
lods
ja
jb
ss
xchg
mov
push
mov
xchg
xchg
mov
mov
or
cld
mov
and
adc
pop
ja
push
xor
ret
insl
push
xchg
xor
out
push
jmp
dec
scas
mov
xchg
sub
ret
dec
call
mov
jbe
pop
ljmp
sub
pusha
das
ja
xchg
jnp
movsb
movsl
rcll
sub
or
dec
hlt
rorl
test
mov
loope
in
jne
gs
adc
movsb
jo
pop
pop
ret
jnp
xchg
call
mov
pop
dec
rcr
clc
rolb
scas
icebp
jg
clc
gs
popf
jg
enter
jns
gs
pop
mov
add
add
add
sar
or
sub
imul
ja
inc
or
fscale
sub
movl
pop
popf
mov
lods
sti
mov
mov
sahf
lods
movsl
inc
add
in
les
add
pop
mov
and
mov
idivb
inc
sub
pop
lods
mov
pop
pusha
enter
out
inc
cmpsl
or
xchg
and
sbb
jmp
cmpsl
jecxz
mov
je
jne
std
push
inc
dec
das
js
or
shll
and
pop
lcall
jmp
lods
or
cmc
cli
add
addr16
sbb
aaa
fstl
push
stc
xor
lods
add
sbbl
xchg
rolb
add
mov
xor
out
sub
lret
negb
pop
lcall
dec
and
movb
scas
xor
cs
adc
ljmp
pop
fisttpll
pop
pop
aaa
adc
jb
les
mov
push
add
and
push
inc
cltd
movsl
dec
add
sar
bound
rclb
mov
fs
lea
mov
ret
insb
mov
or
push
jl
jl
mov
pop
push
push
ficoml
xchg
dec
push
xor
mov
fwait
sbb
icebp
out
outsb
out
lcall
stos
into
mov
out
jp
hlt
mov
insl
cmpsl
je
imul
sbb
push
cmp
xchg
mov
scas
adc
add
js
lcall
sti
mov
les
pusha
push
orb
out
js
pop
scas
cmovns
in
mov
mov
aas
sbbl
hlt
je
dec
bound
jmp
js
daa
dec
mov
jge
lahf
sbb
test
xchg
pop
sbbb
loope
ss
pushf
repnz
inc
mov
add
add
add
sub
push
jle
cltd
iret
or
or
pop
in
fisubrl
and
sub
or
pusha
cmc
xchg
jo
cmp
pop
pop
push
mov
and
xchg
sbb
adc
push
out
out
cli
jmp
inc
inc
loope
xchg
and
iret
jb
test
dec
xchg
lahf
andb
in
rcll
mov
dec
push
cmp
pop
pop
or
xor
movb
mov
mov
push
pop
fwait
mov
mov
ds
loope
gs
push
movsb
jo
xor
pop
mov
ret
jle
add
xor
xchg
or
sahf
and
pop
fucomp
dec
test
test
rcrb
stc
pop
mov
out
sbb
jbe
push
dec
dec
test
lea
jno
mov
fldt
mov
pop
push
sub
jnp
leave
test
fnstenv
cmp
push
lcall
add
jmp
xlat
test
insb
frstor
mov
and
cmp
or
add
push
dec
adc
push
mov
outsl
fstps
lds
xor
int3
inc
lret
loopne
and
dec
adc
cmpsb
lods
sarb
lahf
repz
and
pop
push
sti
stos
xchg
data16
push
std
sub
ss
xchg
js
pop
test
gs
jl
xchg
sub
into
mov
lock
ret
mov
cmp
push
loop
inc
xor
std
das
fcmove
push
out
xchg
ja
dec
or
pop
mov
mov
daa
out
xor
addl
and
loope
fldt
test
andb
push
lret
dec
jl
mov
pop
lds
jge
jmp
mov
scas
pop
int3
jecxz
nop
rcrb
and
or
nop
add
call
test
pop
stos
or
sarl
xor
test
decb
gs
xlat
sub
loopne
pop
mov
lret
push
add
shlb
pop
push
jo
insb
cmp
xchg
lret
insl
mov
inc
test
mov
adc
std
push
mov
and
xchg
mov
pop
movsl
pop
fdivrl
es
rcr
cmp
push
mov
stos
sbb
mov
cli
jbe
mov
fsubs
lret
push
jmp
sbb
mov
xor
sub
mov
repnz
dec
subb
jno
lcall
in
ss
mov
sbb
xchg
jne
das
test
adc
cmpb
push
stc
andb
jg
popa
ficomps
jecxz
lods
pop
xor
add
push
cld
rcll
mov
loop
fsubl
jg
stos
xor
mov
and
daa
das
xorl
dec
push
pop
test
jo
mov
shrb
push
gs
sub
das
or
dec
test
mov
push
mov
cmpsb
push
dec
and
mov
xor
mov
out
mov
aam
shr
sbb
inc
js
sub
mov
insb
lods
outsl
and
mov
inc
js
push
lock
jle
pop
pop
imulb
mov
mov
xchg
sub
out
fucomp
iret
je
popa
out
es
jbe
pop
hlt
ret
addr16
neg
and
data16
test
push
mov
lods
xor
cmp
ja
sbb
push
popa
sub
mov
aad
push
rorb
leave
test
in
dec
push
out
data16
lods
cld
mov
push
jge
out
xchg
adc
add
add
imul
gs
int
fucomi
or
das
loope
andl
mov
jns
aas
call
loop
pop
push
out
dec
jnp
adc
aas
sbb
pop
icebp
stos
repnz
daa
test
loop
push
incb
inc
jg
push
mov
push
stos
mov
pop
cld
inc
mov
hlt
pop
pop
push
test
sbb
lret
cmp
cmpsl
pop
sub
jg
fptan
pop
lcall
std
movsb
push
ss
mov
pop
dec
pop
xor
add
xor
jmp
mov
clc
xor
int3
dec
scas
jmp
jl
outsl
ja
xor
jo
mov
xchg
mov
outsb
jo
hlt
sti
push
and
popf
test
leave
push
jne
bound
ret
inc
mov
sub
and
or
arpl
cmp
mov
adc
xchg
fiadds
jg
test
or
push
mov
adc
cmp
pop
dec
inc
inc
jg
stos
inc
or
cmp
lret
jae
mov
and
pop
popa
pop
sbb
test
mov
ja
mov
jge
mov
setns
pop
pop
mov
into
loop
repnz
jg
sub
push
push
and
add
adc
lds
ljmp
das
pop
sbb
loopne
bound
pop
insb
pop
xorl
pushl
hlt
daa
cmp
dec
jp
ficoms
sbb
inc
in
aam
and
hlt
outsl
out
enter
jl
ficompl
popa
aaa
test
insl
mov
push
mov
push
call
ds
cmp
dec
dec
add
jmp
sbb
adc
inc
adc
lea
sbb
adc
ret
mov
neg
jmp
popa
test
hlt
std
xchg
add
call
jle
jne
or
les
xchg
imul
enter
in
jno
xlat
adc
nop
inc
lret
hlt
movsl
std
popa
mov
sub
inc
fsubrs
push
lds
push
add
sub
in
pop
jle
add
push
jnp
xor
fiaddl
xor
rcl
sti
stos
cmpsl
loop
mov
xor
je
or
cmpsb
jp
pop
imul
xor
jle
lcall
mov
movsb
lahf
and
adc
xchg
sbb
and
es
int3
scas
enter
scas
arpl
mov
mov
lcall
fldenv
adc
sbb
xchg
dec
jns
push
xchg
shl
jmp
and
popa
mov
mov
pop
in
sbb
pushf
mov
idivb
mov
xor
push
push
out
std
stos
inc
mov
addr16
cmpsl
jmp
pop
repnz
mov
repz
xor
cld
out
sub
cld
pop
pop
xchg
add
gs
xchg
sbb
dec
mov
or
inc
cs
mov
loopne
xor
std
test
mov
sti
sub
mov
or
and
xchg
jbe
xchg
sahf
pop
push
jbe
mov
inc
lods
mov
lret
bnd
lods
aam
cltd
push
sti
mov
leavew
mov
mov
cmc
inc
fidivl
inc
pop
push
loope
jecxz
adc
popf
pop
add
pop
add
sub
push
cmp
cmpsl
push
mov
push
mov
or
xchg
cmp
fs
add
in
cmp
push
and
movsb
cmc
dec
pop
pop
rol
xor
repz
xchg
fisubs
or
cld
mov
mov
repnz
outsb
jmp
out
in
add
call
jbe
mov
fisubl
aas
test
sbb
loop
mov
xchg
fs
cmpsl
insb
pop
cmp
pop
lods
scas
pushf
out
sub
mull
sbbb
or
pop
fildl
mov
mov
scas
or
sub
mov
mov
mov
in
mov
sbb
mov
pop
pop
test
mov
push
or
movsb
lods
neg
imul
dec
imul
inc
lea
mov
sub
pop
repz
sarb
out
push
sub
lret
es
dec
cmp
pusha
pop
fwait
pop
xor
pop
jmp
ljmp
inc
add
hlt
lods
pop
mov
stos
sbb
sub
jl
in
jp
push
lret
jl
adc
dec
push
movsb
jno
dec
jbe
stos
adc
and
loope
test
xchg
ljmp
push
dec
fisttpl
xchg
sub
ret
repnz
cmp
pop
adc
sbb
fsubrl
push
bound
jne
data16
push
dec
outsb
popa
push
cmp
mov
or
cmp
push
jecxz
or
push
or
pushw
pop
pushf
push
inc
not
lds
out
and
inc
lock
mov
out
mov
xor
out
loopne
jo
sbb
pop
incl
out
imul
fwait
test
insb
gs
add
ss
test
mov
add
iret
sbb
mov
dec
push
dec
dec
out
fstp
ficoms
test
movsl
test
mov
notl
mov
push
ret
dec
fnsave
pusha
pusha
add
test
aad
jg
je
adc
mov
adc
xor
test
sbb
push
jne
loop
in
mov
add
add
add
mov
insl
jl
mov
rclb
sbb
xor
andb
icebp
jns
fmull
in
mov
lea
pop
sar
cmpsb
jb
fwait
outsb
jp
push
xchg
pop
out
imul
mov
les
cmp
mov
xchg
and
xchg
xchg
mov
dec
mov
jg
add
pop
pop
sbb
dec
cmp
dec
int
push
inc
sub
imul
decl
sahf
into
rcll
fadds
push
imulb
sbbb
ja
into
jns
xchg
jae
sub
xrstors
cmc
pop
xchg
or
in
cmc
cmp
das
mov
ja
push
mov
nop
mov
fldenv
rol
push
push
imul
mov
out
aas
std
jecxz
fstpt
xorl
sub
mov
outsl
lsl
subl
mov
mov
aam
aad
push
clc
jl
or
mov
cmp
jmp
add
dec
pop
or
jbe
ret
in
jns
push
leave
bound
inc
movsl
or
inc
bound
pop
hlt
or
cmp
movb
movsl
mulb
adc
mov
cmp
jnp
dec
and
inc
enter
sub
aad
sahf
repnz
cmpsb
push
xchg
xor
imul
roll
pop
xchg
inc
pop
testl
arpl
ret
inc
dec
sbb
subb
popf
mov
add
lea
lock
aad
and
adc
enter
ss
fisttpl
gs
dec
sbb
call
out
and
into
cmp
push
pushf
mov
add
call
cli
fistps
inc
out
sbb
mov
push
int3
xor
popa
addr16
loopne
dec
fs
mov
jl
mov
dec
fbstp
inc
push
sbb
sbb
pushf
cmp
lds
mov
shrb
sub
imul
xlat
loopne
lcall
xchg
add
jne
andb
sub
movl
sti
inc
adc
push
mov
inc
pop
addb
adc
ljmp
out
jae
pusha
sub
jnp
sbb
in
test
mov
lret
push
fwait
jp,pt
dec
inc
xchg
and
fiaddl
lcall
dec
xchg
sahf
pop
in
lahf
push
aad
in
dec
mov
inc
mov
call
mov
push
inc
sub
cwtl
int3
cmovnp
or
shr
sbb
sbb
mov
jno
jno
xlat
or
xchg
add
imul
daa
pop
cmpsb
mov
fyl2x
insl
mov
cmp
ljmp
inc
sub
pop
or
pop
adc
dec
lahf
mov
test
mov
insl
dec
cld
adc
test
mov
xchg
test
sub
sub
test
pushf
pop
xor
inc
imul
inc
lock
or
cmp
lahf
add
xor
xchg
add
inc
mov
jp
sbb
stos
mov
je
in
int3
inc
lcall
inc
stos
das
jns
sub
sub
inc
aam
cwtl
xor
fmul
in
mov
or
push
mov
loopne
sbb
loopne
pop
sub
add
shll
mov
xor
xor
inc
cltd
popf
fwait
add
call
fs
fwait
sarl
cmp
push
add
push
hlt
xor
mov
mov
mov
loop
dec
lock
jb
jecxz
jl
leave
int
mov
out
push
mov
dec
push
pop
or
dec
dec
xchg
xchg
push
imul
jnp
push
cmp
cmp
fstpl
ss
rorl
mov
sub
enter
leave
leave
sarb
cmc
cs
imull
int
or
dec
fistps
and
loop
daa
in
cmp
in
push
push
and
popf
and
outsl
cmp
inc
pusha
jecxz
test
dec
loopne
xor
xchg
cld
lret
adc
cmp
mov
push
sub
or
cmp
push
loope
int
add
dec
xchg
xchg
fnstsw
adc
mov
ljmp
cmp
push
lds
mov
and
std
and
xor
push
shll
in
sub
cmp
adc
andb
xor
sbb
insl
xor
stc
out
xchg
pop
fcmovb
aas
jp
lock
mov
into
notb
inc
ljmp
shll
push
fstpt
inc
jns
mov
testl
mov
and
or
fldl2t
adc
imul
jg
mov
sbb
shr
jl
mov
insl
adc
lock
mov
jecxz
add
fstl
mov
sub
lret
and
ss
cmp
inc
cld
inc
pop
faddl
jg
mov
addl
aaa
xchg
pop
and
dec
cs
sub
push
aas
xchg
jne
xor
das
mov
mov
out
out
out
cltd
ja
daa
loop
mov
add
call
xor
out
es
and
inc
shlb
mov
loopne
xchg
sarl
lahf
daa
xchg
sahf
cmp
fdivr
mov
clc
xor
jle
xor
in
fwait
and
ss
xchg
and
mov
jl
clc
jb
mov
xchg
push
mov
sti
out
dec
mov
pop
push
repnz
sbb
xchg
loop
adc
jl
dec
add
imul
push
out
sub
jne
xlat
mov
mov
adc
and
in
outsb
mov
cltd
xor
aam
popf
aad
fs
stos
mov
jg
rorb
testb
push
sbb
out
fisttpll
or
mov
ret
dec
aaa
ja
mov
dec
loop
lods
pusha
cli
pop
aas
das
cs
xchg
out
lea
inc
aad
rolb
and
pop
dec
fdivrl
rolb
shl
popf
mov
leave
lods
stos
push
das
mov
xor
and
es
out
imul
or
lods
loope
lods
repnz
or
cmp
into
add
push
sub
adc
ficompl
xchg
mov
incl
sahf
xchg
sbb
cmp
add
lods
mov
add
fcmove
cmp
repz
in
or
adc
cmc
mov
pop
jg
incl
xor
jge
adc
mov
cld
pop
pop
push
in
xor
push
mov
fs
popf
pop
dec
pop
sbb
vpunpckhdq
pusha
leave
or
jns
out
xchg
push
mov
stos
sbb
cmp
jo
sub
cmp
xchg
inc
mov
or
insb
scas
subl
add
add
add
mov
push
push
lret
pushf
les
imul
add
pop
fiadds
adc
xor
or
pop
mov
aad
stos
nop
xor
push
test
mov
push
cmp
jl
nop
or
addb
mov
xor
jmp
or
outsl
jae
xchg
push
xor
mov
popf
cld
scas
jno
pushf
xor
xor
pusha
and
mov
pop
pusha
and
inc
imul
mov
rol
adc
cltd
jl
hlt
scas
dec
push
jae
mov
mov
insb
lods
rcrb
mov
jle
std
dec
fwait
lea
aad
in
std
out
jnp
adc
xchg
xor
and
push
popf
add
lea
xor
lds
dec
cmp
int
mov
icebp
outsl
and
popf
sbb
push
test
mov
push
and
mov
sti
sbb
test
lds
pop
jns
pushf
push
int
push
hlt
out
movsl
fstl
xor
pop
fiaddl
and
fsubs
mov
sub
xor
outsb
lahf
loope
and
popa
sub
xchg
fidivrs
mov
addb
aam
jle
loope
pop
and
lock
or
mov
dec
movsl
mov
clc
mov
cmp
mov
push
mov
loop
and
add
jno
push
in
inc
cmp
push
mov
inc
pop
cmpsb
jae
fsubr
pop
into
xchg
jp
cmp
jns
inc
jnp
neg
int
cmp
int3
mov
repz
xor
repnz
daa
cmp
enter
cmpsb
data16
dec
rclb
mov
jnp
adc
add
pusha
push
mov
pusha
out
mov
add
gs
jg
inc
outsl
loopne
mov
jl
mov
add
sub
or
mov
push
iret
dec
iret
ja
push
sbb
sbb
xor
jns
cmp
or
add
int
cmp
dec
jge
xor
stos
icebp
in
pusha
insb
insb
cld
mov
fidivrs
xchg
jne,pt
shlb
jnp,pt
ja
inc
mov
inc
push
pop
dec
mov
insb
dec
lahf
and
add
add
ret
stc
call
into
xor
dec
fwait
je
cwtl
or
mov
pop
rol
xchg
fisttpl
test
cmpsb
adc
pop
inc
push
dec
dec
mov
pop
rcll
jnp
jnp
shlb
fsubs
imul
inc
xchg
ret
fildll
lods
loop
mov
pop
push
dec
jl
inc
mov
std
popf
inc
or
push
mov
jnp
inc
inc
imul
icebp
test
mov
movsl
outsl
iret
loope
leave
mov
ficomps
mov
xor
jae
lahf
leave
pop
push
xchg
test
lcall
sub
test
jecxz
jnp
imul
pop
and
push
sbb
fwait
dec
or
add
adc
in
icebp
and
outsb
js
lock
jle
inc
or
xchg
push
cmpsb
lcall
mov
in
test
cmp
add
jg
test
sbb
xor
in
xchg
jae
sub
cmc
cmp
jmp
scas
mov
popa
ja
add
mov
cmp
fadds
imul
jle
push
xor
cmp
fcmovnbe
int3
pop
push
adc
ljmp
adc
scas
dec
adcl
push
adc
enter
dec
call
loop
les
out
sti
cmp
add
add
mov
jecxz
int
movsl
push
clc
aas
les
jb
cs
or
aaa
ja
sub
out
stos
rcrb
mov
cmc
add
clc
adc
in
mov
cmp
pop
stos
pop
or
lret
mov
mov
jle
ret
adc
xor
pusha
int3
nop
xor
or
rolb
jecxz
ret
mov
push
into
sub
xchg
loope
mov
mov
or
or
call
iret
sti
arpl
xchg
lahf
xchg
and
es
mov
out
inc
cmpsl
scas
in
sbb
bnd
int3
cmp
dec
loopne
loopne
add
jno
push
add
inc
test
aas
in
lds
lahf
add
loope
adc
jne
add
mov
cld
rclb
dec
sub
or
adcb
push
mov
mov
or
lcall
adc
pop
xchg
push
xchg
stos
dec
xor
pop
or
jns
fbld
dec
movl
push
mov
push
bswap
jmp
fwait
out
std
adc
mov
jb
pop
inc
pop
in
push
pusha
mov
cwtl
test
lcall
shll
mov
scas
popa
xor
mov
fistps
jnp
or
push
js
mov
jnp
incb
dec
iret
inc
cltd
into
into
inc
cld
outsb
int3
mov
outsl
mov
orb
insl
mov
iret
add
das
je
lahf
mov
or
std
xchg
dec
scas
pop
sarb
inc
imul
inc
negb
ds
mov
roll
push
inc
icebp
enter
fidivl
sub
inc
rcrb
decl
sti
sti
in
and
inc
out
jnp
mov
xlat
ldmxcsr
add
call
mov
adc
iret
xchg
call
int
jmp
mov
sbb
dec
cmp
mov
jb
pop
loop
les
adc
call
mov
sub
nop
push
or
xor
xchg
jo
jmp
add
mov
repz
mov
inc
pop
leave
data16
gs
cmpl
jne
into
stos
mov
sbb
test
ffreep
ljmp
sbb
test
push
push
pop
and
ret
or
ljmp
mov
lahf
sub
mov
sub
pop
jg
outsb
xor
add
push
idivb
sbb
push
mov
testl
xor
sarl
mov
aas
mov
or
fdivrs
dec
inc
dec
mov
mov
hlt
jmp
cmpsb
dec
mov
inc
leave
xor
std
andl
les
sbbl
mov
pushf
imulb
xchg
mov
mull
xchg
jp
scas
shlb
add
push
mov
pop
mov
aad
push
lret
mov
out
jg
ja
jg
popl
push
mov
mov
sbb
cmp
mov
cmc
cmp
cmc
test
mov
mov
sub
jp
ret
cmp
data16
lods
add
aam
inc
test
fsubs
sbb
lret
mov
cltd
repnz
lea
xor
push
mov
adc
sahf
xchg
xor
push
dec
adc
leave
mov
je
jmp
in
lret
xor
inc
scas
inc
xchg
dec
ret
dec
pop
and
add
sub
inc
sbb
jg
jns
dec
lea
or
add
call
fsubr
stos
adc
sbb
lret
ret
dec
dec
ficoml
sbb
xor
push
jns
lahf
add
xorb
test
into
mov
dec
imul
mov
mov
mov
fwait
loop
sbb
arpl
xor
inc
loop
xchg
pusha
lret
aam
outsb
jp
xchg
test
sbb
aad
int3
cmp
push
and
lret
shrb
icebp
sbb
push
mov
int
xorl
js
jns
mov
pop
add
xchg
xchg
test
mov
leave
push
mov
mov
jae
jg
mov
inc
mov
fsubrs
fcoml
cmp
push
mov
mov
add
and
push
test
sbb
cmp
or
cmp
sub
jle
std
dec
sbb
jb
xchg
and
loop
lods
jle
cld
mov
sbb
cmc
insl
clc
mov
jg
fiadds
cmp
xlat
sbb
and
rol
iret
insb
hlt
inc
xor
fstps
shrb
icebp
popa
into
fwait
mov
bswap
arpl
stc
clc
adc
movsb
cwtl
push
pushf
push
mov
xchg
mov
jg
lret
insb
out
fwait
imul
xor
mov
imul
pop
pusha
push
and
cmpsl
icebp
lret
mov
fs
xorl
stos
and
sahf
dec
add
mov
test
inc
divb
mov
push
das
rolb
cmp
out
in
xor
push
push
scas
fsubs
and
pop
or
jae
shll
mov
sbb
test
clc
mov
incl
inc
mov
adc
sub
xor
aad
movsl
call
dec
push
loopne
dec
push
outsb
idivl
testl
test
add
add
add
pop
imul
mov
pop
out
xor
and
lret
leave
and
insl
ret
or
and
push
mov
sbb
mov
xchg
add
xlat
fstpt
imul
fimull
xchg
xchg
inc
mov
leave
cmp
repz
shlb
out
rol
cmp
jae
xor
pop
dec
inc
pushf
dec
aam
nop
cli
pop
ret
xchg
push
cmp
jo
jae
inc
mov
xchg
sbb
andb
es
xlat
add
arpl
mov
sbb
adc
lcall
inc
jb
dec
cld
or
popf
aam
adc
ljmp
cmp
pop
cs
xchg
or
lds
and
sub
pop
dec
cmp
inc
adc
add
repnz
fsubl
ss
or
rcll
xlat
dec
and
push
jmp
xorl
sub
pop
movntdq
mov
adc
xor
je
push
jmp
fsubrl
add
out
fidivrl
aam
icebp
lahf
push
fisttpll
adc
push
cmpsl
mov
cmp
cmp
dec
inc
in
jb
cmp
cmp
add
aam
push
and
mulps
out
adc
xchg
cltd
insb
mov
jle
ret
mov
push
mov
mov
adc
lea
test
mov
out
sub
aad
divb
adc
loopne
orl
hlt
aam
mov
leave
mov
arpl
bound
dec
mov
fs
jg
mov
mov
sub
enter
or
jne
les
sti
lods
xchg
loop
xchg
pop
sti
ret
inc
add
push
pop
mov
jp
jge
lock
dec
mov
js
ret
repz
jno
xlat
cltd
jne
add
cmp
xchg
dec
mov
xor
push
jo
or
imul
inc
in
pop
mov
iret
sbb
lock
pop
test
dec
cmp
ds
in
inc
inc
jge
jmp
addb
insl
call
jno
inc
adc
or
aam
inc
cmp
cwtl
xchg
int3
jae
pop
out
adc
inc
xchg
mov
out
inc
cmc
jne
xchg
ljmp
aas
popaw
aad
lea
jmp
lsl
jo
pop
aas
xor
add
decl
fildl
fcompl
or
cld
shrl
lock
imul
test
mov
jns
fidivl
test
daa
lods
insl
mov
lcall
mov
aam
gs
loop
outsb
call
mov
lods
pushf
or
sarb
repnz
xor
fwait
and
filds
sti
xor
ret
fwait
push
add
mov
in
jno
mov
lcall
jns
pop
jo
icebp
outsb
mov
testl
aaa
mov
pop
test
xor
outsb
dec
sbb
mov
hlt
sub
push
bound
xchg
movb
fs
dec
sbb
mov
and
and
insl
in
push
pop
ss
pop
mov
sub
lahf
jbe
jecxz
in
xor
sub
cmp
jae
lret
scas
add
loop
or
sahf
mov
dec
fnsave
add
fwait
xor
mov
pop
jno
xchg
ret
xchg
lahf
imul
jl
cmp
subb
enter
ret
cld
cs
repnz
std
push
lret
add
add
add
outsb
rcrb
xchg
inc
sub
and
in
cmpsl
and
or
pop
mov
mov
sub
nop
js
mov
aad
ret
xor
nop
fsubs
dec
bound
sbb
idivb
push
mov
je
shrb
jge
sbb
adc
mull
and
xor
mov
xchg
jne
jo
xor
pop
adc
pop
xchg
mov
jmp
repnz
lret
jb
cmp
mov
popa
les
fwait
inc
imul
sub
inc
inc
shll
add
aad
and
mov
push
pop
lahf
xor
mov
jmp
data16
dec
movsl
popf
fidivl
js
aam
xchg
mov
mov
push
test
shrb
es
cmp
arpl
xchg
leave
lods
stos
push
pop
inc
add
sub
add
arpl
add
subb
push
add
rolb
pop
cmpsb
push
lock
pop
loop
popa
xchg
mov
pop
inc
fbld
inc
dec
stos
scas
in
std
out
lahf
mov
call
sarb
or
ljmp
and
js
add
xlat
inc
sbb
imul
loop
and
mov
and
mov
cmp
fsubr
mov
add
mov
leave
and
mov
add
push
frstor
jg
pop
sub
stos
or
xor
cli
cmpsl
adc
outsb
cmp
sub
ret
add
cmp
push
cwtl
idiv
inc
xchg
iret
xor
adc
pop
dec
cld
in
jno
pop
outsb
xor
adc
sbb
lea
or
shll
jo
mov
sbb
xchg
xor
lods
scas
add
call
jp
sub
fs
cltd
and
repnz
idivl
out
adc
out
les
out
js
aas
es
mov
pop
in
mov
add
cs
out
cmp
mov
aas
cs
xchg
mov
pop
stc
dec
loope
test
push
loopne
add
xchg
bound
xlat
popa
stos
cwtl
scas
imul
and
hlt
jmp
mov
scas
enter
cmp
cmpsb
xlat
jg
insb
mov
inc
push
pop
mov
test
loop
and
cmpsb
pusha
mov
mov
inc
push
incl
js
mov
mov
or
pop
fisttps
ss
int3
pop
dec
test
sahf
dec
fbstp
sbb
adc
test
add
push
jecxz
mov
subl
cmp
cmp
out
repz
iret
fsubl
in
mov
adc
dec
pop
push
push
repnz
push
int
xlat
xlat
int3
inc
xchg
push
mov
test
pop
xchg
and
push
stc
test
pop
ret
pop
rorl
ja
stos
fnstsw
scas
inc
inc
sub
mov
sub
sbb
cltd
add
pop
and
sbb
inc
popf
or
dec
or
inc
insl
fbstp
loope
jnp
mov
out
insb
jmp
xchg
mov
mov
inc
cmp
loop
lea
jg
sbb
call
or
sbb
fistps
inc
imul
inc
shrb
jb
mov
cli
pusha
pop
sub
add
and
jnp
adcb
sub
cmp
aaa
mov
push
mov
cmpsl
out
repz
aaa
push
add
sub
xchg
sti
imul
loop
jae
jnp
jmp
and
repz
fldt
icebp
cmp
inc
xchg
mov
add
add
add
dec
xor
imul
sbb
cmp
ret
mov
test
out
jns
lock
repnz
imul
fwait
xchg
outsl
in
add
fbstp
data16
add
xor
pop
setns
jo
mov
inc
pop
jmp
enter
jnp
dec
and
or
jge
inc
fucomi
mov
mov
xlat
pop
jg
ds
mov
pusha
jae
push
dec
cmp
test
test
add
pop
dec
enter
inc
sub
add
lcall
lea
and
bound
fildl
out
mov
jns
lods
add
and
mov
into
dec
test
daa
xchg
je
xlat
push
add
or
jge
mov
cmc
leave
jae
sub
xchg
push
addr16
movl
push
lcall
mov
cmc
arpl
fidivs
fnsave
es
idivb
mov
jbe
outsl
nop
out
ja
out
push
in
ret
repz
jp
fsubrs
arpl
push
je
adc
loope
mov
dec
ret
test
sbb
jge
cmp
addl
les
jbe
mov
bound
fisubrl
clc
out
fnstcw
pop
push
imul
or
jae
jmp
enter
test
adc
add
orl
fidivl
push
in
mov
lds
jae
jl
mov
adc
xchg
fsubrl
add
xor
pop
int
mov
jne
jno
in
aas
push
xor
jmp
sub
jle
adc
push
jb
andb
nop
daa
push
rcll
pop
inc
add
inc
daa
or
push
jo
imul
add
js
std
inc
addl
sub
ja
rorb
std
lcall
daa
cmp
icebp
lods
lahf
mov
call
jo
inc
setb
pushf
xchg
test
or
pop
aaa
pop
pop
adc
ror
rcll
lods
pop
loopne
and
popa
movsl
outsb
mov
jo
rorb
mov
ja
lcall
mov
lret
adc
mov
fnsave
ficompl
jge
sub
push
jecxz
pushf
rol
xchg
dec
mov
pusha
repnz
fcmovbe
jae
fisttpl
adc
push
movsb
cmp
mov
imul
stc
dec
inc
push
sbb
fdivp
add
xor
jb
xor
pop
adc
int
test
out
jbe
pop
fcoms
jne
cli
add
pop
fdivs
xchg
in
mov
out
aas
adc
add
xor
jl
cmp
call
adc
enter
push
aaa
pop
mov
sub
xor
and
jecxz
inc
adc
xlat
nop
stc
jo
das
clc
sub
push
iret
cmp
mov
leave
scas
jl
cmp
jl
ret
jecxz
push
lret
fsts
divl
lock
cmc
sub
inc
jl
fwait
sbb
mov
xchg
movsl
push
popa
inc
test
loopne
outsl
push
jg
in
pop
int
mov
pop
out
jg
mov
scas
out
outsb
xchg
push
sub
mov
daa
xor
sbb
mov
pop
enter
lods
lret
push
inc
add
fidivl
pop
subb
and
pop
jle
iret
imul
adc
fdivs
sbb
das
sbb
pushf
mov
aas
dec
lahf
mov
stc
gs
add
add
add
mov
shlb
xchg
adc
sbb
sub
sbb
mov
sti
inc
decb
or
lahf
repz
cmp
shlb
iret
js
fidivrl
out
xor
jl
pop
inc
mov
rolb
and
jp
add
iret
push
ja
mov
push
les
pop
popf
xchg
dec
mov
icebp
push
adc
mov
lods
jp
mov
aad
xor
adc
sbb
lods
fwait
decl
dec
addl
sbb
imul
sahf
call
xlat
movsb
xor
notb
sub
sbb
mov
pop
jmp
test
xchg
jnp
mov
es
std
int3
add
adc
jle
dec
movl
mov
les
add
loope
std
aad
adc
add
movsb
rorl
fwait
mov
scas
mov
insb
xor
dec
dec
inc
je
fwait
dec
inc
clc
pop
es
dec
shrb
lcall
xchg
lahf
or
imul
push
xchg
pop
je
mov
lret
push
inc
mov
mov
inc
mulb
add
stos
lea
pop
imul
jnp
and
sbb
push
out
loope
mov
ss
mov
adc
pop
inc
sub
test
push
rep
stos
mov
sar
mov
mov
lcall
and
repz
jp
les
push
ret
and
xor
cwtl
or
add
push
pop
loopne
fs
and
xchg
movsl
inc
dec
adc
stos
push
mov
jnp
popa
stos
test
not
lcall
cmc
lret
mov
mov
test
dec
xor
adc
lds
cmpsl
das
push
pop
jg
mov
push
ljmp
repz
jmp
adc
add
add
add
fsubrs
jmp
mov
push
scas
add
aad
push
jmp
stc
dec
sbb
daa
mov
ljmp
xchg
std
push
popf
fimuls
inc
cltd
movsl
hlt
repnz
ret
lock
jg
movsb
and
bound
ljmp
mov
outsb
shlb
and
or
test
insl
loop
ret
roll
ds
fcmovnu
xchg
jns
sub
cmp
movsb
xor
xchg
and
push
mov
sahf
push
push
xchg
ds
dec
jle
add
pop
xorl
dec
mov
stos
shll
iret
js
mov
adc
cmp
cli
je
pop
add
pushf
inc
push
inc
mov
mov
es
scas
sbb
pop
pushf
das
inc
int3
sub
mov
adc
inc
inc
out
outsl
xchg
xor
ficomps
xchg
dec
jnp
xor
xor
push
sub
stos
sbb
xor
push
rcrb
ret
and
jl
mov
dec
inc
shrb
push
scas
push
les
inc
imulb
mov
rolb
out
test
jns
inc
jae
aad
jp
or
jmp
add
mov
lret
popa
es
xchg
je
and
pusha
out
mov
jnp
cmp
ds
or
xchg
push
xlat
cld
lret
mov
cmp
or
daa
iret
scas
es
add
mov
lods
xor
rcrb
xor
or
xchg
jmp
sbb
pop
sbb
jbe
add
movsb
lods
out
cmp
and
scas
xor
and
dec
js
mov
dec
inc
or
or
lcall
mov
add
add
add
adc
xchg
imull
rclb
mov
push
lret
pop
add
mov
imul
flds
dec
out
pop
out
and
mov
push
out
mov
dec
cmp
adc
addr16
jl
aad
jmp
xlat
pop
jecxz
dec
mov
mov
pop
arpl
sahf
xor
mov
jb
fisubrs
out
cmp
cmp
xchg
pop
movsl
cld
lahf
jb
cmp
and
fs
add
or
inc
push
push
xchg
fwait
add
inc
cmp
fmuls
adc
into
sbb
stos
push
ljmp
rorb
sahf
cmp
mov
push
out
jbe
call
jo
aad
addb
mov
js
sbb
sub
pop
mov
add
pop
pop
pop
mov
nop
cmp
repz
xor
in
ljmp
and
xor
inc
int3
aam
cmpsb
sbb
inc
sub
test
out
push
stos
lds
or
sbbl
and
cmc
jbe
iret
mov
push
insb
xor
mov
or
lcall
jle
cmp
jbe
mov
insb
sub
fmulp
pop
pop
jg
imul
xchg
xchg
iret
jle,pn
xor
imul
out
push
cs
out
mov
and
ja
mov
add
mov
cmp
adc
adc
mov
push
cwtl
dec
or
or
adc
bound
test
je
ss
imul
or
pop
dec
fmuls
jp
arpl
ror
jle
nop
mov
fildll
adc
pushf
andl
mov
add
mov
leave
adc
push
lock
stos
pop
push
push
jp
jp
cmp
mov
mov
mov
arpl
in
repz
mov
in
mov
notl
popa
clc
mov
jg
dec
std
incb
out
lods
repnz
sbb
mov
push
sub
aad
daa
out
push
jae
mov
push
and
add
les
pop
lock
lahf
add
dec
lret
cld
popa
xchg
sbb
incl
pop
sbb
sbb
ficompl
adc
or
popf
negl
int3
push
push
lds
inc
outsl
or
lcall
inc
lods
outsl
or
jnp
add
cltd
ficomps
dec
fbld
shrl
xchg
inc
cmp
sub
mov
adc
sbbb
in
add
insb
stos
cmp
push
imulb
mov
loope
dec
imul
pop
or
nop
push
mov
icebp
fdivr
pushf
cwtl
sub
test
repz
cmp
lods
xor
pop
outsl
pop
jne
sbb
lahf
jb
mov
loop
addr16
loop
jbe,pt
jnp
jo
aad
pop
adc
repz
sbb
pop
adc
xlat
mov
in
sbb
ljmp
pop
call
scas
pop
in
aas
std
out
xchg
xor
mov
jge
adc
ds
dec
mov
in
sub
xlat
sti
jns
notl
cld
dec
mov
je
push
mov
das
stc
cmp
jo
les
ret
pop
or
jbe
ds
and
xchg
mov
inc
adc
or
iret
lcall
popf
clc
popf
in
std
xchg
lret
or
in
add
add
add
movl
dec
loope
cli
mov
mov
inc
fwait
popf
xlat
dec
and
push
movsb
call
inc
stos
adcl
jne
mov
imul
xor
fst
jnp
cmp
ret
lret
rcr
cmpsl
pop
cmp
or
cmp
jecxz
ret
outsb
sub
scas
fldenv
add
jl
loopne
push
inc
fdivs
mov
add
ja
repz
dec
out
js
push
and
push
movsl
and
pop
loope
xchg
daa
or
movsb
adc
push
aas
xchg
adc
or
enter
shlb
outsl
ror
mov
cmp
mov
jl
and
dec
fs
pop
mov
mov
lret
pushf
stos
adcl
popa
dec
and
cli
out
push
incl
lea
inc
jmp
in
insb
push
fidivrs
cmpsl
or
sub
inc
aam
clc
cmp
sub
sahf
xor
mov
lret
mov
jmp
aam
lret
jnp
mov
pop
cmp
cmpsl
dec
ss
outsl
cwtl
addr16
push
cmc
ficompl
sub
cmp
sub
mov
subb
xorb
hlt
lds
push
in
idivl
mov
int3
popf
movsb
adcl
enter
pop
jle
mov
loopne
mov
mov
adc
mov
xchg
popf
stos
fdivrp
daa
cmp
into
loop
ljmp
addr16
sub
icebp
xchg
or
push
std
jmp
sahf
lods
push
jnp
iret
ret
popa
mov
test
icebp
mov
shrl
sub
loopne
and
movsl
pushf
daa
add
scas
sbbb
cmp
pop
inc
hlt
inc
out
dec
es
cmpsb
mov
mov
add
call
stos
or
aam
cmpsl
jle
data16
or
and
outsl
adc
out
and
cmp
loopne
and
clc
pusha
xchg
loopne
insl
sbb
push
shll
in
cmp
jo
and
dec
sbb
push
jbe
call
insb
int3
jge
insb
jns
and
mov
inc
push
rdmsr
fidivrl
out
or
jmp
cs
xchg
mov
xchg
mov
pop
fwait
inc
pop
movsb
stc
subb
aam
mov
jnp
fwait
sahf
hlt
pop
mov
loop
out
in
push
or
lock
sbb
adc
mov
xor
je
sarb
jae
arpl
mov
imulb
movsb
cmp
inc
js
sub
xlat
scas
lret
cmp
shlb
mov
jg
pop
add
fldl
loop
leave
jns
sahf
rolb
sub
jnp
dec
movsb
mov
decb
aas
lds
cmp
fdivs
xchg
adc
sub
dec
adc
or
xor
jg
add
add
xchg
lea
adc
std
push
movl
adc
fnstcw
pop
imul
or
cmp
inc
rcrl
push
xor
pusha
test
test
sbb
fwait
lret
mov
sti
lahf
iret
dec
cmp
sub
mov
ret
mov
imul
sarl
fisubrs
xchg
fs
out
fsqrt
fisttpll
xchg
adc
jno
mov
out
xchg
repz
and
pusha
jb
inc
int3
aam
push
jmp
clc
xchg
mov
leave
add
add
mov
stos
cmc
mov
jae
pop
cmp
aad
jo
jl
cld
out
jbe
mov
and
call
lock
dec
cmpl
ds
pushl
je
adc
sahf
mov
enter
add
mov
add
mov
sbb
fs
dec
inc
lods
mov
mov
fwait
scas
imul
xor
pop
push
out
mov
stos
bound
mov
cmp
jne
lods
push
fs
pop
mov
mov
mov
jns
rorb
or
push
inc
jg
xor
sub
fcoms
and
xor
lods
inc
iret
jnp
popf
pop
sub
cmp
and
shlb
lea
test
push
or
mov
xchg
sub
adc
mov
jp
popa
add
sub
pop
out
movsl
or
xchg
sub
cmp
xchg
stc
mov
in
es
outsl
call
das
sarl
cmpsl
lds
scas
push
pop
andb
jp
xchg
pop
inc
and
xchg
pop
jecxz
loope
and
dec
xor
repnz
mov
pop
or
cltd
mov
xor
repnz
scas
and
add
jle
sbb
rorb
les
pop
pop
insl
pop
icebp
mov
and
pop
xchg
test
jno
add
pop
out
inc
xor
inc
aaa
arpl
cmpsl
nop
jle
adc
cli
xor
mov
cmpl
test
mov
sti
sub
dec
ror
dec
int3
and
int3
lret
data16
in
arpl
cmp
mov
sub
cmp
jmp
pop
clc
imul
ffree
mov
clc
imull
lret
cmp
cmp
xchg
clc
mov
jb
dec
aaa
xchg
movl
sbb
fldl
fldl
mov
cmp
out
mov
add
add
adc
push
push
xchg
sbb
insl
cmp
sbb
xor
aas
mov
addr16
cmpsl
cmp
pop
ds
fsubl
das
scas
pop
inc
mov
insb
arpl
xor
mov
test
aaa
mov
push
daa
xchg
test
cmpsb
fldl2t
cmc
adcb
int
pop
inc
push
mov
test
scas
adc
mov
js
lcall
cwtl
je
sbb
lret
dec
fcompl
cs
flds
mov
in
pop
pop
shll
cmp
in
fidivrs
and
cwtl
jmp
jmp
out
pop
addr16
jecxz
pusha
lret
repnz
add
xchg
mov
nop
pop
xchg
aas
xchg
sub
test
mov
jle
sbb
leave
push
push
sbb
mov
pop
xchg
mov
mov
xchg
push
loop
or
xor
or
or
mov
push
adc
mov
push
enter
and
xor
jo
dec
lea
inc
xor
jo
xchg
add
lcall
push
pop
sub
sbb
mov
stc
popa
push
rcrb
fldl
add
aaa
je
popf
test
sub
cwtl
dec
mov
mov
jns
jp
js
ja
ret
cmp
inc
fadds
sarb
int
and
pop
cmpl
dec
scas
jne
insb
mov
aas
pop
dec
jo
push
pop
sarb
sbb
push
mov
mov
popf
lods
or
cmp
fidivrs
cmpsl
xchg
ss
sub
pushf
outsb
aad
sbb
push
hlt
stc
outsb
shrl
ljmp
es
lret
and
push
xor
mov
shrb
adc
out
int
lock
jl
or
mov
and
xchg
or
mov
xchg
adc
sub
movsl
ret
add
call
and
je
and
mov
dec
dec
cmp
adcl
mov
xor
jbe
das
sub
imul
pushf
mov
mov
repz
lods
jnp
add
xchg
icebp
push
push
sub
inc
fdivl
push
imul
mov
in
and
fdivrl
mov
add
out
in
fs
mov
mov
push
cmp
jno
pop
jns
fsubp
fisttpll
daa
cmpsl
jb
outsb
rorl
dec
fwait
test
cmpsl
push
add
movsb
push
insb
in
lahf
aas
jo
push
cmp
fistpl
repnz
in
cltd
and
cmpb
mov
ss
mov
andb
jle
mov
pushl
xchg
in
push
out
cli
pop
jp
xchg
jbe
xor
xchg
insb
sahf
aam
movsb
test
outsb
xor
sbb
mov
ret
clc
mov
pop
xorl
sbb
cmpsl
enter
es
adc
jae
sahf
mov
sbb
arpl
cmp
scas
out
out
fcomip
lahf
jns
subb
lods
mov
xor
loopne
adcb
push
adc
mov
dec
pop
and
shlb
insb
xchg
xchg
into
jns
cld
sbb
imul
pop
movsb
jmp
and
mov
jns
in
popa
xchg
shll
lea
pop
sub
push
push
and
mov
and
push
insl
pop
cmpsb
loope
mov
xchg
roll
fwait
mov
fildl
cmpb
cli
call
sub
imul
adc
push
std
clc
adc
adc
pop
shrl
xchg
and
std
or
xlat
and
aaa
std
out
test
inc
insl
in
popf
das
pop
lds
add
add
add
movsl
xchg
add
movsb
push
add
mov
xor
or
or
xor
push
lcall
mov
pop
je
dec
and
sbb
add
adc
addl
mov
mov
cmpl
outsl
icebp
test
stos
xchg
sub
add
push
jae
jmp
inc
stc
loopne
xlat
int3
fcmovnb
fisttps
push
cmpsb
jmp
mull
in
fmul
sahf
sub
inc
pop
das
sub
push
and
mov
movsl
dec
leave
add
mov
rcrl
mov
xchg
ja
testl
sahf
inc
adc
clc
xchg
inc
aam
lahf
sbb
in
xchg
stos
idivl
imul
mov
and
pop
or
in
jg
pop
test
mov
jne
sahf
sub
dec
fwait
cmc
int3
rorb
sti
dec
cmpsl
jb
fcomps
sub
jae
les
cmpl
xchg
repz
or
cmp
cmp
test
add
jmp
xlat
rorb
repnz
scas
ja
stos
lahf
push
jae
and
sub
or
fnstenv
pop
cmp
jecxz
mov
push
in
jge
mov
subl
and
test
xchg
lock
and
mov
movsb
sbb
xor
add
dec
loope
fidivs
dec
or
orl
or
popa
test
push
push
ss
push
xchg
sbb
outsb
in
and
push
mov
and
and
push
pop
fldt
mov
cmpsl
pop
clc
mov
int3
cmc
mov
scas
or
rorb
adc
inc
les
inc
icebp
pop
movsb
or
outsb
push
pop
cs
test
dec
nop
int3
popf
fistps
aad
pop
jns
clc
xchg
or
add
call
sub
add
xor
repnz
bound
jmp
pop
sub
out
pusha
cli
mov
lcall
loop
xor
dec
shlb
jno
rcrb
push
cli
les
data16
pop
and
mov
inc
lock
or
daa
shlb
and
lock
mov
loop
push
jnp
or
and
jmp
pop
je
mov
shl
fadds
mov
fdivrl
and
imul
shrb
lds
jmp
pop
clc
inc
xchg
cltd
js
outsb
int3
pop
add
leave
bswap
sbb
cltd
movsl
mov
inc
push
mov
dec
sub
leave
jno
test
addr16
pusha
fnstcw
cltd
cli
cmp
in
dec
shrb
clc
out
pop
les
dec
push
sbb
sbbl
cltd
pushf
push
lods
pushf
int3
jo
pop
sti
xchg
mov
push
jmp
xchg
je
jae
mov
test
dec
jmp
and
mov
daa
mov
xchg
xor
lret
cwtl
push
mov
cld
iret
lret
fwait
mov
pop
xor
icebp
sub
sbb
movsb
fisubs
mov
enter
jge
cli
or
adc
lret
sti
push
loop
int
into
call
sti
cmp
mov
xor
mov
lahf
rcrb
push
mov
scas
mov
stos
bound
push
or
sahf
jecxz
and
pop
push
bound
xchg
movsl
pop
cmp
aam
xchg
inc
insl
and
je
sbb
xor
push
imul
test
or
mov
leave
add
mov
mull
inc
jp
mov
or
ja
scas
lods
inc
inc
aaa
data16
mov
insb
das
mov
je
leave
add
call
or
ficomps
mov
lea
mov
data16
pop
mov
dec
adc
cmc
mov
in
and
push
or
rclb
xchg
and
dec
jne
arpl
int3
dec
and
xchg
and
mov
and
jmp
adc
jae
pop
cltd
adc
pop
js
inc
out
ret
push
and
cli
jecxz
bsf
outsl
addr16
pop
daa
dec
lock
xchg
in
imul
sub
mov
jae
xlat
and
push
push
mov
push
jbe
adc
pop
pop
cmpsl
daa
rcrl
or
rclb
push
pusha
data16
xor
or
ret
mov
ret
adc
pop
sar
ret
add
adc
sub
jae
sbb
add
add
std
loop
adc
test
or
sti
je
sub
out
rorl
enter
or
jne
cmpsl
pop
mov
enter
out
xchg
dec
mov
scas
out
sahf
xor
cs
sbb
or
fists
sbb
out
and
int
decb
xlat
push
cmp
add
push
or
mov
mov
lahf
lahf
dec
sbb
mov
data16
cld
dec
leave
in
mov
pop
roll
out
addr16
pop
mov
sub
ret
loope
and
and
call
ret
scas
lahf
nop
repz
push
pminsw
lds
lods
in
scas
mov
push
or
cmp
addr16
test
pop
enter
mov
push
adc
mov
movsb
ljmp
and
adc
sbb
mov
into
out
outsl
out
push
xchg
lcall
inc
fdivrp
out
ja
xor
xor
aad
lret
add
call
or
sti
push
pop
daa
push
icebp
stos
jle
sub
dec
dec
sub
mov
sub
cmp
lods
adc
push
lods
cmpb
jb
fnsave
sbb
outsl
push
adc
pop
adc
pop
cmove
pop
les
into
mov
orb
jl
rolb
scas
stos
int3
lods
mov
push
mov
mov
rcl
push
mov
ret
pop
dec
mov
push
xor
xchg
add
into
jl
stos
dec
xchg
data16
or
cmp
add
fldl
rcr
sbbb
test
push
out
divl
xlat
inc
dec
dec
inc
xor
mov
arpl
push
jle
int3
sar
xchg
mov
pop
inc
jmp
jne
ljmp
inc
loopne
and
xor
or
das
or
lahf
popa
sub
repnz
pusha
nop
lods
adc
outsl
rorl
cmpsl
pop
adc
jbe
dec
mov
ret
xchg
or
sbb
sbb
aad
xor
in
pop
mov
fmulp
or
fildll
fwait
in
lock
ret
dec
lods
les
cltd
xchg
jle
adc
loopne
xor
pusha
sbb
mov
jg
lcall
push
pushf
repz
fs
jae
fistpll
popf
lock
lcall
pop
dec
fisubrl
into
pusha
or
pop
popa
sub
sbb
jae
mov
jmp
stc
sbb
and
xor
mov
dec
mov
and
push
stc
add
xchg
orl
mov
mov
inc
hlt
mov
stos
in
call
sub
or
je
mov
mov
int
add
add
add
mov
gs
sahf
jnp
lret
scas
xchg
pop
or
mov
hlt
nop
and
insl
fstl
insb
outsl
mov
mov
je
scas
pop
sahf
stos
outsb
out
or
bound
sub
rorl
mov
addr16
cmpsl
sub
movsb
int3
rcll
inc
mov
sbb
fs
and
dec
daa
jmp
jnp
mov
xor
nop
inc
out
icebp
mov
in
icebp
add
xor
and
pop
mov
stos
pop
sbb
mov
push
adc
arpl
sbb
mov
hlt
and
call
das
push
enter
rcrl
xlat
jge
fsub
pop
push
and
and
in
or
sbb
pop
mov
popl
and
aaa
add
mov
insb
in
jmp
dec
fimull
sub
xchg
dec
daa
dec
sarl
mov
cmpsb
test
bnd
and
push
orb
mov
sub
jo
loop
icebp
mov
inc
xor
mov
in
pop
cmpsb
stos
push
jne
jp
fs
cmp
xor
mov
sti
outsl
nop
iret
jnp
pop
int
ss
jno
sti
lds
push
jno
and
adc
xchg
xor
ret
mov
sub
nop
mov
or
adc
shlb
xchg
xchg
push
lret
bound
lret
xchg
pop
lret
inc
adc
enter
mov
sub
popa
cmp
jnp
cmp
and
ret
insb
dec
cmp
or
out
roll
mov
mov
sbb
pop
sbb
add
add
add
dec
lcall
add
and
sub
cmp
gs
sti
pop
ret
pusha
mov
es
psrad
cld
lret
jl
cmpsl
xor
cwtl
or
loop
mov
inc
std
jge
stc
jmp
mov
jnp
lahf
mov
imul
xor
mov
jns
sbb
sarb
jne
push
popa
aaa
loopne
out
aaa
outsl
sbb
mov
movsb
xlat
add
int3
repz
add
sar
mov
adc
inc
into
jg
inc
aam
sub
popf
inc
outsb
movsb
dec
push
data16
xor
mov
arpl
sbb
lret
insl
mov
mov
leave
and
lds
jecxz
fst
out
add
test
imul
sahf
dec
mov
loop
insb
pop
fs
and
sbb
pusha
sbb
push
sub
addl
adc
cmc
xorl
rcl
es
ljmp
sub
cmc
dec
mov
fiaddl
add
cld
pop
popf
push
jle
or
mov
call
lahf
xlat
loop
mov
les
and
daa
inc
sub
mov
les
outsb
and
mov
add
sub
mov
js
jle
mov
stos
in
xor
or
addr16
sbb
bound
sub
push
add
pop
or
xor
fisubs
cmp
add
cmp
sbb
cmpsb
cmp
and
out
jb
adc
mov
xchg
mov
lret
sub
cmc
std
pop
loop
cmpb
push
ret
mov
jge
shrb
test
std
rolb
add
add
add
bswap
cmpsb
cwtl
sub
xor
mov
push
and
daa
loopne
loopne
push
push
mov
outsl
out
pop
and
xor
insl
insl
leave
push
in
pop
outsl
push
add
stc
mov
jno
pop
mov
shrb
pop
lahf
ljmp
pop
xor
out
xchg
aas
mov
xchg
or
out
mov
jge
cli
xchg
xchg
hlt
inc
sbbl
or
test
sub
push
and
lret
push
mov
std
cmpsl
or
mov
pop
lea
imul
or
pop
jbe
push
sbb
clc
dec
and
inc
mov
leave
sbb
adc
sti
cmc
pop
sahf
mov
or
in
push
outsb
arpl
push
mov
ficoms
mov
loope
repnz
arpl
push
push
push
out
push
add
repnz
pop
inc
call
cmp
lret
int
fldl
adc
push
jecxz
jne
js
jecxz
xchg
push
pop
jecxz
or
stos
idiv
fiaddl
sbb
inc
fsts
cmpsl
sub
sub
aad
mov
mov
xchg
pop
stos
xchg
imul
in
jg
xor
mov
shrl
xchg
mov
int3
pop
xchg
adc
dec
je
gs
in
rcll
fcmovnu
aam
and
jmp
jle
jne
popa
xor
xchg
mov
loope
insl
shl
shl
dec
imul
pop
movl
mov
in
icebp
aaa
fidivl
les
push
xchg
pop
mov
add
jno
pop
xchg
jbe
cmp
pop
stos
cmp
mov
out
das
add
cli
insb
xor
push
sbb
add
in
jmp
lahf
jle
dec
sub
pop
popf
les
call
outsb
sbb
pop
aas
adc
addr16
or
xchg
or
out
xor
jo
inc
pusha
divb
cltd
fldcw
sahf
outsl
or
incb
ror
xchg
mov
pop
mov
push
mov
sub
adc
adcb
das
jo
negl
lods
mov
push
and
add
fincstp
sbb
push
add
inc
sbb
dec
xor
xor
inc
jo
jnp
pop
cs
jg
lea
daa
pop
mov
pop
push
sub
push
arpl
push
add
scas
or
cmp
jnp
fmuls
or
sbb
dec
jb
xchg
subl
insb
sub
subl
pop
mov
push
mov
clc
lods
xchg
push
pop
or
push
fcmovu
mov
push
outsl
push
xchg
leave
inc
pop
pop
cmc
or
sarl
pop
mov
lcall
sarl
test
shlb
lods
mov
jp
xchg
test
cwtl
pop
xchg
dec
ret
pop
push
jo
shl
mov
pop
sarl
and
mov
fldcw
mov
arpl
jg
or
mov
inc
or
jge
inc
outsb
popf
stos
xchg
pop
mov
test
adc
add
outsb
cld
data16
ret
cmp
xor
adc
popf
cwtl
loope
aas
mov
stos
lcall
push
cli
rorb
sbb
lret
cmpsl
sbb
pop
jge
call
and
lds
adcl
push
sub
sti
add
int3
xchg
push
fadd
lods
clc
push
pop
pop
mov
ja
xchg
out
mov
and
aas
rcrl
mov
pop
dec
cli
mov
incl
cs
int
add
call
shll
and
push
leave
stc
cmc
das
mov
aad
xchg
repnz
hlt
mov
mov
cwtl
push
rclb
mov
jo
cmpsb
leave
fwait
movsb
popf
xchg
xor
pop
sbb
sub
ss
xchg
xchg
ljmp
lcall
xor
mov
imul
jns
mov
mov
ss
pop
lahf
xor
xchg
sbbl
das
les
mov
in
jne
repz
inc
mov
xor
imul
test
lcall
sahf
inc
faddl
sbb
push
gs
cltd
dec
push
mov
aas
out
and
sub
adc
push
pop
push
lods
mov
add
or
stos
ret
jne
jno
test
icebp
pop
repnz
fs
cmpsl
push
fsts
dec
push
dec
in
mov
xchg
pop
sbb
imul
mov
movsl
popf
sub
dec
pop
push
aad
fnsave
in
insb
mov
sub
push
sbb
sub
mov
dec
mov
stc
pop
add
shlb
sahf
mov
jl
pop
mov
sub
rol
in
mov
mov
sbb
and
or
jl
mov
movsb
mov
xor
xchg
pop
mov
pop
nop
je
sbbb
js
or
and
gs
in
inc
dec
lods
adc
loop
xchg
adc
push
pop
sarb
push
push
xor
cmp
push
mov
idiv
sub
inc
cltd
int3
or
stc
popa
sbb
pop
xchg
hlt
jns
jle
out
js
xor
cltd
lock
mov
daa
mov
fldcw
cld
xor
xorb
icebp
lret
cld
adc
outsb
dec
je
mov
add
call
fs
mov
push
jle
je
mov
movsl
xor
in
lcall
test
mov
orb
add
sarl
jecxz
mov
outsb
jo
mov
pop
loopew
test
adc
and
insl
imul
push
adc
out
cmp
insb
stos
inc
dec
or
lods
mov
mov
sbb
sahf
mov
dec
fs
sbbl
call
shrb
jp
enter
inc
imul
sub
mov
daa
jp
dec
idivl
dec
xchg
lcall
pop
call
pop
pop
sub
bound
sbb
jne
repnz
aas
adc
adc
and
ja
xchg
jmp
push
mull
fdivrl
ret
out
adc
mov
in
mov
decb
jmp
sarl
sbb
nop
or
xor
imul
mov
leave
lcall
insl
jnp
sbb
into
lds
fdivl
mov
loope
inc
xchg
ret
jl
push
leave
fistl
rolb
inc
popa
or
lahf
and
mov
jne
dec
sbb
add
sti
jnp
cld
sub
dec
cmc
push
or
stc
push
mov
or
das
xchg
incl
jmp
outsb
mov
loopne
fbld
xchg
xor
adc
jo
push
push
inc
mov
repz
repz
into
jmp
pop
out
fs
into
push
mov
add
xchg
push
ja
dec
sbbb
mul
rorl
clc
jg
inc
loope
aaa
inc
dec
cld
pop
xor
fisttpll
xor
xchg
dec
add
outsb
in
loope
and
imul
mul
lahf
jp
jp
in
xor
xor
cwtl
inc
stc
mov
call
push
pop
push
push
into
jg
and
mov
adcb
mov
ljmp
dec
xchg
push
stos
ficompl
adc
pavgb
ret
push
xchg
add
data16
mov
addr16
repz
jp
push
movsb
xchg
sbb
sbb
int3
xor
pop
inc
lcall
push
mov
push
mov
lret
imull
iret
aas
pop
movsl
outsb
pusha
pop
into
xchg
mov
pop
add
adc
pop
add
dec
es
mov
stos
dec
bound
pop
mov
mov
and
push
jmp
push
call
and
push
in
pop
add
xchg
ret
jns
popf
iret
push
xor
leave
sub
mov
fistl
adc
andl
dec
add
pop
imul
scas
hlt
roll
imul
xor
xchg
mov
test
sarb
lahf
push
pop
cs
xor
arpl
test
mov
test
lcall
mov
fcmovnbe
dec
and
push
shll
xchg
xor
jge
push
xor
aaa
sub
bsr
mov
js
hlt
jl
test
inc
jecxz
mov
out
adc
cmpsl
out
adc
stos
push
jmp
pop
fwait
shl
pop
cmp
and
xchg
rcll
sub
xchg
rcrb
jl
bnd
pusha
cwtl
fstp
fiadds
sar
stc
xor
push
sbb
inc
mov
push
int
das
andb
jmp
adc
aad
pushl
mov
ret
mov
or
in
dec
mov
adc
jge
lahf
loope
adc
mov
fiaddl
add
add
add
mov
sub
fimull
jne
cld
fmul
jmp
orb
loop
clc
jnp
test
shrb
adc
add
das
jge
das
mov
rolb
dec
inc
aaa
bnd
scas
imul
jne
insb
jmp
pop
mov
push
addr16
repz
je
cwtl
inc
xorps
addr16
adc
shll
xlat
inc
aaa
adc
push
lret
mov
pop
push
cmpb
mov
sbb
mov
or
rcrl
pusha
add
cltd
and
cmp
or
rcrb
adc
push
inc
cmp
and
pop
push
cmp
jl
mov
adc
mov
sbb
inc
mov
push
jmp
les
sbbb
sub
inc
sarl
bound
mov
movsl
lahf
es
pop
and
jbe
xchg
pop
outsb
fcomps
stos
ds
lret
dec
dec
in
pusha
sub
pop
aaa
xchg
pushf
les
jg
rcrb
xchg
dec
sbb
sahf
imul
push
jge
xchg
rol
fmuls
sbb
or
xor
pusha
daa
xchg
repz
das
jb
pmaddwd
dec
or
mov
add
inc
sahf
push
fcoms
rol
mov
dec
xchg
sub
pushf
test
mov
or
mov
jb
sbb
push
add
stc
dec
jo
sbb
lret
test
mov
and
cmp
int3
mov
cmpsb
inc
or
scas
push
adc
popa
xchg
paddd
ret
test
ds
shl
push
roll
add
mov
jle
sub
in
push
push
mov
mov
idivl
std
cmpsb
outsl
aad
faddl
add
add
add
lret
mov
out
jb
imul
mov
das
hlt
dec
cmpsb
push
loop
stc
jle
or
inc
shlb
mov
sub
and
repnz
mov
mov
mov
movsb
sub
pop
add
xor
loopne
jb
sti
cwtl
insl
stos
insb
sub
mov
dec
into
pop
out
data16
fildl
cmp
jge
pop
jno
cmc
cmc
push
inc
scas
mov
scas
sahf
cmp
lret
or
sub
les
jle
add
test
jno
shll
xlat
or
lahf
sbbl
sub
scas
cmpsl
mov
pop
int
daa
cli
mov
popf
mov
movsl
test
rolb
pop
xor
mov
mov
sbb
enter
cltd
and
or
adc
mov
mov
repnz
mov
xchg
fnstsw
es
out
xchg
adc
xor
cltd
jne
arpl
cmp
test
adc
add
pop
out
aam
pop
sub
dec
lea
out
sub
cmp
add
jno
add
sub
adc
mov
adc
cmp
cmpb
cmp
sbb
enter
mov
pop
xlat
lret
mov
xchg
xor
shll
xchg
jne
adc
ds
ja
mov
jb
test
xchg
xchg
mov
cmp
or
jp
outsb
jmp
movsl
sbb
adc
aam
push
and
dec
push
adc
inc
lret
in
loop
dec
icebp
ds
and
lea
popa
fmull
sti
mov
adc
out
pop
push
fiadds
add
add
add
sbb
ljmp
pop
sub
test
sub
cld
ljmp
push
lret
sbb
loopne
cmp
clc
or
es
mov
je
mov
pop
addr16
dec
ds
pusha
jb
daa
mov
movaps
daa
imul
push
and
shrb
dec
adc
and
sbb
adc
loop
sub
fisttpl
sub
inc
mov
pusha
shrl
pop
push
rol
nop
scas
mov
mov
or
jne
pop
inc
inc
negl
cltd
cld
and
gs
sarb
test
cmpsb
nop
movsb
jnp
push
stos
pop
xor
fmul
xchg
stos
mov
inc
call
mov
jae
and
and
insl
pop
sbb
sub
das
pushf
jo
sub
popa
test
or
pop
icebp
add
sbb
push
lds
mov
pop
mov
sub
cld
out
scas
jae
repz
mov
jno
dec
jle
dec
mov
sbb
jg
mov
aaa
mov
xlat
dec
push
push
pop
dec
mov
bound
aam
inc
xchg
adc
test
addr16
sbb
or
xchg
mov
fsubl
lock
sti
inc
mov
mov
jg
cld
inc
inc
jl
lcall
in
sbb
or
push
cmpb
jns
inc
mov
xlat
xchg
cmc
cmc
nop
js
inc
repz
ret
or
fnstcw
lock
mov
cmpsl
stos
add
loop
and
int3
out
out
je
in
add
xchg
or
mov
mov
xchg
push
scas
or
mov
int
lock
adc
mov
insb
imul
scas
shlb
loopne
add
add
add
into
pop
out
push
ret
mov
or
adc
sbb
gs
add
cmp
mov
sti
xchg
cwtl
lret
fdivrp
iret
push
in
popf
ret
insl
mov
stos
inc
scas
xor
testb
pop
xchg
inc
jle
or
adc
sub
dec
xor
mov
mov
jbe
mov
lds
push
add
and
jle
inc
ljmp
sub
leave
into
pusha
jmp
sub
xchg
jp
fcomp
cmp
jg
mov
mov
cli
pop
push
push
push
repnz
mov
mov
out
add
movsb
sbb
sbb
pop
add
cmp
or
dec
jge
jecxz
imulb
filds
int
std
fwait
out
notb
push
insl
lret
mov
xchg
xor
aaa
xchg
pushf
mov
push
je
push
sub
int
cmp
movsb
jb
and
addl
rep
dec
and
gs
mov
add
movsl
mov
push
inc
xor
add
push
add
dec
jle
imul
sbb
or
roll
shlb
lock
and
mov
ret
repnz
or
in
sub
mov
enter
aas
add
ljmp
and
shrb
pop
or
notl
xchg
mov
mov
push
lock
or
pop
out
xchg
push
xor
je
inc
xor
orb
pop
std
or
test
scas
call
in
into
cltd
cltd
mov
xor
repnz
nop
loopne
cmpsb
xchg
js
dec
stos
mov
lds
pusha
imul
dec
lods
jle
dec
or
scas
jmp
arpl
cmp
add
add
subl
aaa
mul
push
test
popf
jb
pop
mov
push
cwtl
mov
push
push
xor
je
aam
sub
cmp
or
lret
mov
jge
movb
leave
cmpsb
in
movsl
push
shll
shll
and
icebp
pop
mov
scas
add
adc
jne
das
insb
lahf
xor
mov
out
cmp
inc
jmp
cltd
add
inc
pop
mov
shl
adcl
sbb
push
out
lcall
enter
inc
jns
pop
in
std
mov
rcl
punpckhwd
push
flds
pusha
jg
lfs
dec
push
xchg
mov
pushf
repnz
aas
mov
pop
aam
push
adc
cmp
jp
in
cmp
sar
std
scas
pop
sub
sub
inc
insb
icebp
mov
xor
and
cmp
ljmp
mov
out
pop
xchg
fldl
add
sbb
pop
movsb
adc
in
stc
push
adc
cmp
popa
les
and
cli
shl
inc
insb
or
mov
cmp
inc
cmp
fwait
dec
xchg
mov
sti
outsl
sub
fistpll
mov
dec
sub
or
mov
in
dec
ret
sbb
lahf
xchg
add
push
scas
pop
fmuls
push
sbb
sahf
pop
xor
mov
pop
inc
stc
stos
xchg
and
jl
jbe
ljmp
sbb
out
call
lea
push
out
addr16
fwait
cmpsl
and
jns
lret
dec
pop
enter
add
in
scas
sub
pusha
jbe
xor
dec
adc
cwtl
inc
arpl
adc
cld
nop
jle
icebp
in
test
push
imul
lahf
or
add
add
xchg
or
jno
gs
xchg
mov
in
push
std
shrl
cwtl
or
mov
xchg
push
mov
xchg
lcall
outsb
xchg
fsubl
arpl
mov
gs
and
cmpb
lahf
mov
sbb
rdtsc
lret
inc
lcall
push
out
lods
pushf
adc
addr16
adc
mov
mov
addb
lock
in
das
lret
mov
insb
push
mov
pop
xor
sar
add
and
adcb
ja
mov
jae
sti
shlb
bndstx
dec
adc
pop
sbb
icebp
and
adc
fisttps
sub
insl
jp
sbb
push
bound
adc
cmp
push
cmc
mov
cmpsb
xor
shlb
mov
sub
push
fcoms
test
fsubrl
dec
ss
jle
lcall
js
or
fsubl
rcr
push
pop
cmp
inc
call
cli
int
lea
xchg
test
inc
icebp
fnsave
roll
shl
add
pop
mov
into
cld
lds
insb
and
mov
loope
mov
xor
mov
mov
fcmove
hlt
sahf
fsubl
mov
mov
push
cmpsl
inc
mov
lret
in
rep
mov
out
fwait
push
sub
stc
nop
push
ret
stos
mov
outsl
lock
dec
mov
sbb
fiadds
sbb
jnp
das
repnz
popf
mov
sub
sbb
test
lods
js
bound
imul
add
aam
pop
sbb
out
inc
iret
jnp
rorb
insl
scas
rcrl
scas
mov
pop
push
leave
popf
lret
popf
pop
xlat
aaa
add
arpl
in
add
add
add
sub
mov
xchg
rol
xor
mov
push
mov
mov
out
out
or
out
or
inc
jns
push
test
test
dec
push
mov
pop
pushl
jae
test
popa
aam
adc
lret
sbb
lods
mov
jae
hlt
lcall
scas
nop
cwtl
mov
cmc
in
jo
or
xor
dec
sti
loope
mov
push
push
les
pop
mov
mov
leave
push
push
cmp
or
stos
xchg
push
mulb
mov
loopne
insb
loopne
les
pop
xchg
fbld
stos
sbb
or
and
push
loopne
cmp
mov
arpl
dec
fwait
pop
cmp
clc
outsl
fcmovu
out
daa
sub
cmc
jnp
sub
out
ljmp
lret
fmull
jo
pusha
push
call
aam
ljmp
enter
add
sub
jecxz
in
push
stos
pop
push
cmpsb
fs
mov
sbb
and
inc
lea
fistl
loope
add
lods
repnz
call
insl
jno
dec
push
lods
dec
scas
mov
jmp
xchg
or
push
out
and
outsl
jo
aaa
es
pop
pop
sbb
pop
push
mov
popa
cwtl
cmp
das
jge
jle
jecxz
jle
repz
ret
test
enter
mov
ljmp
test
ret
adc
xchg
push
xchg
jbe
sbb
pop
dec
sti
test
lret
sub
xchg
xlat
inc
lock
out
and
enter
aas
out
les
add
mov
popf
jecxz
div
inc
pop
dec
dec
popa
test
call
pop
out
and
aam
fucom
add
call
xor
notl
popf
or
lret
sbb
movsb
xor
aam
cmp
enter
and
xchg
stos
pop
mov
test
ret
cmp
and
xor
jmp
aas
xchg
cwtl
in
fiadds
sbb
mov
cmpsl
jmp
in
and
jb
daa
push
adc
nop
jg
cmp
add
jb
cmovne
sub
cmova
add
test
dec
xor
xchg
mov
xor
or
jl
mov
jno
add
mov
lock
dec
int
repnz
lods
arpl
push
jl
or
dec
dec
daa
lahf
mov
stc
fstps
xor
jp
xor
stos
or
clc
dec
cs
test
xor
xor
aas
frstor
in
loopne
orb
sbb
and
stos
mov
cmp
sbbb
js
mov
add
and
or
dec
xchg
xlat
dec
sahf
cmp
mov
dec
rcrl
fldcw
test
mov
sub
pop
sub
sbb
iret
seto
into
sub
push
or
jno
lahf
push
imul
pop
cwtl
jo
lea
dec
inc
mov
xchg
mov
and
dec
test
call
jbe
or
xchg
push
xor
out
repz
cmp
mov
pusha
sub
mov
inc
stos
nop
mov
test
mov
dec
add
outsl
lods
sbb
mov
lds
popf
lods
scas
jl
mov
in
lahf
inc
shl
insb
and
and
cmpsb
test
fninit
fisttps
sub
imul
imul
dec
jle
fsub
jnp
data16
dec
imul
add
add
add
into
hlt
mov
fs
xchg
in
cmpsb
or
push
cmp
pop
dec
pushf
or
lcall
sub
push
jg
iret
ret
sbb
jge
pushf
scas
push
or
stos
push
fstpl
stc
add
mov
jg
das
adc
test
test
sub
push
or
pusha
dec
mov
lods
sub
aam
scas
aad
pop
outsl
xor
push
xchg
pop
cltd
ja
pop
or
movsl
int
pop
mov
mov
sbb
leave
push
mov
adc
mov
fwait
sub
add
mov
bound
xchg
mov
mov
in
pop
bound
mov
xor
mov
fdivrl
jb
daa
push
jge
inc
loope
out
aas
dec
mov
push
movsl
jo
insb
mov
mov
int
in
add
add
and
mov
and
and
les
sub
dec
dec
cmp
mov
in
es
push
shlb
xor
inc
mov
sbb
jle
pushf
je
mov
cmc
push
mov
cmp
add
cmp
das
xor
adc
xchg
insl
sub
test
cmp
in
std
sub
enter
movsl
xchg
repnz
fmul
sub
cmpsb
jecxz
pop
fmulp
es
jmp
clc
xlat
ret
mov
and
lcall
inc
mov
repnz
mov
shl
push
cmp
add
fstpl
add
fld
inc
jl
push
out
orl
and
push
shl
add
push
dec
dec
nop
out
dec
and
cmp
cmp
into
psrld
rcr
fistps
mov
add
add
add
lcall
inc
add
loope
pop
icebp
adc
aas
or
add
cli
fmul
mov
insb
jns
in
cld
adc
mov
or
cmp
adcl
jge
mov
int3
outsb
jle
fiadds
out
pop
inc
leave
push
hlt
xchg
aas
mov
incb
sbb
push
mov
out
inc
sbb
jb
out
cmp
pop
imul
xchg
outsb
xor
dec
cmpsb
push
mov
hlt
push
call
outsl
shll
jecxz
lods
dec
mov
nop
gs
outsb
test
nop
hlt
movsb
xor
bound
je
test
jno
adc
dec
sub
jb
bound
insl
dec
mov
in
dec
xor
leave
ss
add
mov
jmp
call
out
lock
pop
sub
cltd
call
ret
scas
ficoml
cwtl
adc
xchg
pop
data16
xor
stos
inc
in
rolb
in
adc
sbb
inc
inc
mov
lea
outsb
and
clc
dec
in
shrl
or
decl
inc
jns
and
lods
pushf
xchg
xlat
xor
mov
in
sbb
inc
xchg
icebp
fdivrs
je
cmp
push
sbb
lods
adc
sti
mov
das
fs
sbb
outsb
xor
push
pop
fs
sub
dec
cmp
push
lret
test
aas
sub
dec
adc
addr16
daa
mov
pop
push
sarb
inc
lahf
add
mov
jp
stc
idivb
push
out
or
mov
and
repz
mov
push
call
outsb
dec
mov
adc
xor
stos
xor
lock
pushf
pusha
pushf
cld
cld
mov
aaa
or
push
and
xchg
in
add
call
mov
add
sub
mov
dec
iret
fimuls
divb
ja
mov
cwtl
cmp
cmp
inc
andl
fnsave
sub
xor
aaa
inc
jae
adc
cs
adc
lahf
negl
push
jb
lock
ja
gs
test
mov
cmp
or
xchg
or
out
jo
mov
das
sbb
test
cmpsb
out
mov
sahf
jg
imul
scas
adc
sub
pop
shrb
scas
inc
hlt
sub
test
or
leave
xor
cmp
enter
sub
fmuls
adc
mov
xor
sti
push
xchg
inc
pop
das
adc
dec
loope
inc
arpl
cwtl
negb
rolb
mov
push
cmp
std
xchg
not
mov
out
fdivrs
xor
sub
and
out
sbb
movsb
sti
lret
dec
sbb
es
xorb
loope
add
sub
daa
adc
cmc
xchg
mov
scas
pop
pop
jne
sub
or
mov
pop
add
in
aam
push
mov
shrb
sub
scas
and
ss
mov
loope
push
sub
or
pop
fcoms
xchg
xor
inc
inc
jecxz
xchg
add
movsb
imul
aam
add
add
inc
out
xor
adc
out
mov
push
mov
movsb
cmp
out
mov
clc
cmp
jae
mov
mov
mov
pop
inc
jne
cld
pop
lea
aaa
movsb
and
outsl
daa
lahf
daa
add
gs
jg
mov
sbb
xor
jge
add
call
push
mov
fldt
aas
xchg
and
sub
test
xchg
mov
mov
data16
scas
ret
enter
popa
sub
imul
ret
inc
inc
jecxz
jp
sub
test
xchg
hlt
test
test
in
pop
dec
sub
call
cmpsl
push
push
sub
in
std
repnz
jne
ja
ret
hlt
out
push
dec
push
mov
push
adc
xchg
fsubrp
in
loop
jmp
jbe
push
aas
adc
inc
xchg
cs
fisttpll
mov
fstl
out
jmp
incl
ret
aas
icebp
jecxz
rcrl
cs
mov
or
fcom
dec
inc
pop
vandps
daa
xorl
mov
jne
adcb
out
adc
test
scas
cmp
pop
jmp
jne
pop
mov
test
jnp
or
mov
cmpsl
movl
sub
add
out
addr16
dec
in
movsl
in
add
fnstenv
sbb
mov
pop
leave
or
in
out
shll
in
push
cli
sub
pop
or
push
cltd
adc
or
sbb
test
movsl
andl
cmpsl
stos
arpl
scas
lods
pop
hlt
and
xrelease
inc
cmc
and
and
or
xchg
dec
shl
mov
ss
into
jmp
scas
pushf
dec
mov
jge
push
sub
sub
push
add
or
mov
cmpsb
sbb
in
dec
lds
mov
xor
xchg
cmp
fcomps
sarl
shll
mov
js
jae
mov
sub
cwtl
lret
das
test
cmpsb
jle
cmp
mov
lcall
das
test
mov
sub
inc
xchg
dec
xchg
dec
into
adc
gs
add
call
jne
icebp
out
or
mov
pushf
cmp
xchg
sbb
jl
xchg
xorb
dec
mov
popf
sub
out
cmovae
pop
loop
rclb
lret
mov
sbb
dec
push
test
sub
mov
and
inc
sti
scas
pop
dec
es
leave
cmc
inc
jns
and
dec
mov
push
out
mov
and
pop
xorb
mov
enter
gs
push
inc
icebp
fisubrl
dec
fs
push
dec
sub
mov
imul
fisubrl
dec
fmuls
cmp
mov
add
dec
mul
fsubs
sub
repnz
push
push
cmpsb
in
xor
sahf
test
ds
popf
pop
loop
div
testb
iret
and
repz
xor
std
add
sbb
push
loope
lret
aas
lods
or
es
sbb
push
inc
add
or
mov
in
inc
sub
or
jne
aad
mov
xor
sub
mov
daa
stc
and
or
dec
divps
dec
loopne
or
arpl
je
xlat
push
sbb
mov
jl
outsl
adc
jmp
addr16
pop
dec
nop
mov
cli
xor
lods
mov
pop
mov
mov
mov
leave
sub
and
int
das
push
mov
cmp
int
dec
jns
push
call
jg
insb
sub
fldcw
xor
or
mov
repnz
fbld
or
jno
movsl
movsb
lods
leave
add
aas
in
out
mov
and
jp
cmp
xchg
aad
notb
fistps
sub
and
jg
push
mov
outsb
inc
xor
call
out
insl
or
std
jmp
sti
xchg
sub
mov
mov
xchg
outsb
cli
andb
and
pop
aad
jbe
mov
dec
or
pop
dec
lret
mov
push
cmp
mov
push
repz
mov
jae
add
push
add
dec
ret
lea
mov
pop
sbb
loop
mov
ds
and
subl
fimull
and
xor
rep
insb
adc
fwait
into
aas
insl
cmp
std
loope
outsl
adc
int3
out
lea
js
sbb
fidivrs
cli
gs
sbb
push
cmp
jo
out
mov
bound
sub
ds
hlt
les
fld
dec
adc
xlat
mov
dec
cs
cmp
mov
xchg
inc
repnz
mov
xor
testb
leave
sbb
test
and
or
pusha
sbb
push
xchg
xor
push
je
cli
flds
push
jne
push
pop
sub
inc
cwtl
inc
mov
sahf
gs
cmp
pop
into
pop
out
fnsetpm(287
leave
fiaddl
ja
out
cs
and
and
mov
cmp
cmp
fldl
fildll
insb
out
movsl
mov
loopne
enter
loope
subl
or
aad
sub
pushl
iret
outsl
in
push
push
and
rdmsr
dec
outsb
ja
aad
sub
incb
cltd
jns,pn
inc
das
fnsave
fbld
mov
test
arpl
shlb
dec
push
push
mov
popa
imulb
lock
or
xchg
xor
mov
sub
mov
ss
mov
loopne
cmp
mov
in
cmp
jae
xorl
add
or
movsb
fldt
push
add
add
mov
ss
dec
mov
sub
sub
or
dec
jnp
sub
inc
addr16
mov
pop
inc
xchg
fxtract
ja
adcb
insb
push
and
xchg
sbb
cwtl
dec
and
gs
mov
dec
divl
sub
pop
imul
xchg
dec
xchg
pop
or
xor
push
push
or
mov
pop
les
jo
jge
aam
mov
sub
pop
xchg
cmpsb
pushf
cmp
dec
mov
push
fld
imul
sbb
divl
push
and
fbstp
pop
jns
xor
notl
dec
mov
jmp
pop
jp
std
popl
mov
jns
mov
pushf
fisubs
dec
test
jp
pop
data16
mov
pushf
fldl
jp
fcompl
js
out
push
dec
aam
and
push
ret
jae
movsl
jo,pn
ret
dec
js
sub
pop
ds
inc
adc
lock
push
sahf
mov
lods
push
stos
mov
test
adc
or
hlt
dec
add
lods
inc
jns
adc
std
mov
ja
cli
mov
jl
inc
inc
mov
or
out
movsb
dec
fbld
xchg
stos
mov
add
popf
and
mov
pushf
mov
cmp
cmpsl
cmpsl
and
mov
sub
inc
lods
xorb
not
loope
push
push
cltd
test
hlt
push
pop
fistl
fildll
fcmovnb
push
stos
jnp
stos
mov
mov
insl
je
setae
mov
lahf
sub
inc
adc
cmp
repz
jmp
and
pop
idivb
inc
mov
fbstp
fs
lret
cltd
clc
sbb
add
add
jle
ds
mov
add
sbb
add
xchg
repz
in
pop
imul
iret
mov
ret
sub
mov
push
adc
clc
es
imul
ljmp
xor
xchg
adc
dec
fdivp
or
das
inc
testl
aam
mov
adc
sub
inc
mov
into
loopne
adc
fcmovb
test
or
mov
jecxz
sbb
stos
fwait
add
inc
fsts
add
cmc
xor
inc
add
or
aad
stc
mov
scas
fcomi
jne
xchg
cmpsl
and
daa
sbb
or
dec
pop
dec
sbb
pop
in
xor
stc
stos
push
dec
stc
fsqrt
adcl
xor
jge
mov
pop
shrl
xchg
xor
cmc
mov
sbb
xchg
fstpl
in
rolb
shl
push
mov
movsl
out
incl
outsb
mov
mov
rcrb
xor
dec
mov
cmp
into
sub
cwtl
stos
jle
inc
or
cmp
mov
je
dec
les
jg
dec
sti
xor
push
cmp
cmp
icebp
fisubrl
data16
fbstp
lods
inc
add
add
mov
jg
imul
stos
fwait
jp
xor
hlt
adc
push
jg
mov
call
pop
inc
jecxz
stos
shll
rcr
loope
pop
or
je
dec
ret
xchg
fidivrl
dec
cmpsl
mov
jecxz
or
xchg
lret
movsl
cmp
mov
bswap
mov
sbb
or
