push
mov
sub
xor
jmp
into
rcr
aad
mov
repz
js
js
jle
js
xlat
cmp
fld
pop
push
or
jae
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
mov
jnp
pop
fildll
fnstcw
push
lods
leave
inc
pop
xor
jl
xor
or
lret
movsb
daa
daa
inc
jle
lret
aad
adc
sub
dec
mov
jle
lods
ffreep
xor
cmp
scas
imul
cmp
adc
inc
add
add
pop
repz
xchg
nop
and
mov
std
popf
and
pop
jae
aaa
movsb
mov
push
or
clc
xor
enter
imul
outsl
aam
js
subl
push
sbb
push
pop
popa
arpl
addr16
cwtl
insb
or
inc
je
and
adc
rcrl
mov
jge
pop
mov
cld
cs
or
push
and
pop
push
add
jg
sbb
inc
cld
mov
xor
fwait
xchg
xchg
in
jmp
je
lea
inc
movsb
pop
enter
int3
push
push
popf
add
ss
pop
fcoms
nop
and
loope
pop
scas
cmp
neg
fucomip
xchg
mov
inc
sti
and
xchg
mov
mov
xchg
in
jg
call
inc
pop
sahf
sub
pop
sub
sbb
or
push
cmp
movsb
stos
ficoms
mov
adc
aaa
mov
fistpl
stc
idivl
cmp
mov
cmp
daa
push
or
push
lret
stos
iret
xchg
mov
jns,pn
add
mov
jb
hlt
push
cmpsb
add
dec
mov
sub
in
jne
jo
mov
add
jno
das
pop
test
inc
sub
in
cmp
in
lcall
outsb
ret
lahf
jbe
pop
sbb
inc
add
adc
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
sbb
lcall
js
inc
int3
jne
sbb
pushf
xchg
push
notb
jp
add
aaa
fisubs
inc
ss
adc
icebp
out
sub
push
push
pushf
popf
dec
xor
sub
inc
fdivl
sarl
mov
cmp
and
repnz
mov
popf
mov
xchg
aad
xchg
inc
loop,pt
xor
clc
enter
imul
repz
aas
mov
lret
rorl
xchg
dec
mov
fisttpll
adc
inc
cwtl
in
pop
repz
sub
xor
sub
das
aam
rcll
into
dec
xor
pop
mov
jg
sbb
ljmp
sbb
xlat
repz
push
fmuls
aam
js
pop
pfacc
call
mov
adc
sub
mov
in
jecxz
jae
push
push
jns
insl
inc
jge
fucomp
bound
push
xor
pop
xor
xrelease
mov
or
push
dec
sub
sub
insl
or
add
pop
lods
cmp
fwait
arpl
xor
sahf
mov
lret
dec
int3
stos
adc
sbbl
xor
jecxz
and
push
adc
addr16
sbb
add
nop
cmpsb
out
mov
ljmp
pop
lahf
fildll
aaa
or
jmp
inc
out
jg
lods
xchg
sbb
mov
push
or
cli
insl
or
cmp
lock
movsl
add
push
or
lret
dec
mov
push
sbb
mov
rcl
mov
sbb
xor
popa
lds
ljmp
sbbb
push
inc
mov
pop
xchg
push
xchg
data16
xchg
cmp
add
mov
fdivrs
sarl
pop
mov
lods
sbb
sub
add
js
cmp
in
adc
sbb
jl
fucomip
icebp
xor
outsb
rorb
or
out
cmp
inc
cli
iret
sbb
and
repz
dec
add
sbb
sti
imul
cltd
add
mov
jnp
xchg
pop
arpl
int
pop
mov
bound
or
pop
add
in
push
pop
imul
and
push
popa
nop
dec
test
adcl
dec
aaa
adc
add
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
movss
js
jle
js
push
sub
sti
cmp
jae
inc
xor
sub
sbb
push
and
jno
mov
movsb
loope
lods
inc
nop
jl
lds
xlat
cli
in
loop
pop
dec
push
andb
pusha
test
mov
pop
cmpsl
mov
nop
xor
cltd
ficompl
jmp
jo
fucomip
aas
mov
mov
and
adc
je
cmpsb
sub
popf
add
mov
std
sbb
xor
mov
pusha
jge
fs
lcall
cltd
std
stos
lahf
in
mov
or
pop
rorl
imul
dec
jnp
mov
jmp
in
int3
fidivrl
inc
cmp
daa
inc
aad
or
loope
sbb
mov
add
gs
pop
push
insl
ret
addr16
jp
gs
mov
xchg
sbb
jecxz
mov
sub
add
ja
enter
xchg
mov
mov
push
faddp
popa
inc
lods
jns
mov
hlt
out
dec
lahf
mov
cmp
or
or
sub
mov
adc
push
lock
xor
mov
lcall
fbstp
fildll
loopne
push
dec
cld
loop
mov
cs
insb
lret
ret
imul
cmp
pop
int
and
dec
sti
aaa
inc
aam
js
out
roll
cmp
xchg
pop
inc
lea
cltd
sbb
dec
into
lods
cmpsl
lcall
cmpb
adc
push
adc
mov
cli
mov
fisttpll
pusha
mov
lret
cmp
jge
push
test
fs
sbb
repnz
sbb
cs
xchg
ds
lcall
mov
sti
mov
mov
jge
movsl
les
mov
lock
outsb
out
mov
cmpsb
out
into
fisttpl
cmp
sbb
das
incl
jb
arpl
sarl
dec
ds
push
jo
mov
xchg
or
mov
dec
add
lahf
dec
mov
sub
rcl
cmp
out
sbb
dec
cmp
ss
andl
dec
dec
mov
push
scas
inc
sub
movsl
stc
div
repnz
repz
imul
dec
sub
push
mov
out
xchg
testb
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
pushf
ret
repz
addb
js
jle
js
loope
rcll
sub
cmpsl
push
fwait
add
adc
lret
xchg
mov
repz
mov
xor
pop
sub
ret
mov
pop
mov
or
out
stos
push
xchg
dec
cmp
cmp
cld
repz
dec
or
pop
add
xor
pushf
movsb
pop
dec
jbe
push
sub
lcall
repz
dec
imul
fmulp
xchg
and
sti
leave
sar
mov
es
pop
push
pop
jne
lods
lods
xor
inc
push
and
push
cmpsb
pop
addb
push
popa
sub
pop
push
and
mov
pop
lret
stos
sbb
push
in
mov
int3
cmp
push
nop
mov
enter
push
sub
dec
mov
cmpsb
mov
ja
outsl
mov
pop
pop
inc
cltd
push
js
lret
scas
xor
mov
das
jmp
pop
jns
mov
mov
mov
hlt
mov
jecxz
jg
and
outsb
mov
enter
fdiv
inc
push
sbb
xchg
add
out
bound
sub
push
inc
sub
out
dec
jno
jmp
dec
mov
mov
cmp
jge
rorl
cmpsb
xchg
loope
pop
dec
and
and
lcall
sbb
xchg
shl
xchg
sub
in
add
xchg
and
xor
push
adcb
inc
inc
enter
mov
pop
insb
gs
std
mov
movsl
cmp
cmpsl
daa
movsl
jo
scas
mov
push
mov
das
or
add
or
lret
jle
mov
mov
adcl
cld
dec
icebp
jp
jns
sti
arpl
push
jp
mov
jae
add
sbb
or
stos
test
sub
push
icebp
leave
push
sti
imul
loop
pop
pushf
scas
cli
outsb
mov
in
js
popl
icebp
mov
inc
enter
rolb
dec
add
pop
sub
outsb
add
repz
dec
fs
adc
push
pop
and
pop
push
call
lock
xchg
hlt
cmp
stos
ljmp
pop
popf
pusha
cmp
and
pop
test
js
add
add
shrb
out
mov
adc
dec
push
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
and
js
jle
js
cltd
test
jbe
scas
jmp
cmp
cmp
popf
or
mov
lods
mov
xor
mov
scas
in
xchg
xor
add
cmpsb
cmp
fwait
jge
lcall
push
cmp
mov
jmp
dec
leave
loop
jmp
shrl
cmp
lahf
arpl
lret
test
or
xor
ficoml
lds
dec
xchg
sub
push
and
cmc
std
cltd
dec
das
jecxz
dec
mov
sub
sbb
jg
pop
sbb
test
push
fsubl
lds
imulb
popa
xchg
test
push
test
fnstcw
sub
jg
lods
lahf
adc
push
mov
out
data16
or
test
xchg
add
leave
push
xor
cmp
adc
sbb
pusha
add
mov
stos
stc
mov
filds
jl
cmp
cmp
xchg
pop
mov
fisubrs
add
mov
je
std
popf
lds
rcll
stc
pop
lea
sbb
sbb
pushf
push
push
dec
inc
sbb
hlt
mov
pop
test
ret
jb
out
and
fdivrp
fildl
bound
aad
outsl
pop
jle
mov
dec
mov
sub
sbb
rcrl
in
cld
inc
insb
or
test
imul
stos
xor
arpl
insl
mov
push
push
int3
mul
test
and
rcrb
lcall
bound
push
lahf
or
les
dec
adc
ret
dec
mov
mov
pop
fptan
xor
xchg
pop
in
pusha
inc
push
scas
jl
subb
pop
lcall
mov
call
in
rcrb
in
mov
stos
xchg
std
call
xor
jecxz
stc
xchg
imul
mov
aad
mov
rep
imul
fsubrl
fadds
stc
pop
add
sahf
addr16
outsl
xor
neg
iret
pop
mov
aad
sub
repnz
mov
jecxz
mov
xchg
adc
arpl
cvtpi2ps
pop
shrl
jnp
dec
jg
pop
pop
pusha
add
or
rolb
cmp
mov
test
add
icebp
cmpsl
inc
add
inc
or
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
add
js
jle
js
adc
dec
out
and
and
xor
jmp
lcall
and
fwait
cmpsl
push
xchg
sub
inc
mov
mov
xor
aaa
mov
sti
pop
imul
xor
testl
cs
outsl
mov
push
divb
mov
call
adc
sti
push
dec
xchg
cmp
out
add
mov
xchg
mov
xchg
lret
fildll
aaa
fnstenv
or
negb
shl
mov
in
add
pop
scas
push
insb
xor
inc
push
int
sar
or
sbbl
cltd
gs
in
pop
popf
in
popf
jg
jg
jle
rcl
and
mov
pop
mov
cltd
push
jmp
inc
sbb
cmpsl
or
vpor
pop
loop
inc
pop
lea
mov
cmp
aaa
inc
aad
push
in
push
lcall
add
adc
mov
push
sbb
push
andb
jp
je
out
pop
in
xor
int3
ret
pop
or
ljmp
push
pop
or
mov
mov
or
pop
add
xor
add
lahf
arpl
cs
outsb
iret
dec
or
pusha
lcall
add
adc
subl
xchg
inc
cmp
mov
pop
popf
jp
lea
push
push
inc
fsubrs
shrl
cmpsl
gs
out
aad
dec
pop
pop
mov
dec
popa
addr16
and
inc
movsl
add
add
dec
cmp
lcall
xor
into
mov
jns
push
pop
pop
xor
adc
jb
sahf
pop
repz
aad
sbbl
lret
xchg
push
dec
call
push
and
sbb
divb
jns
add
cs
ret
inc
js
pop
pushf
js
sub
filds
jnp
lcall
fsubrs
repz
and
out
gs
dec
lahf
shl
dec
jmp
inc
mov
movsb
jp
cmp
and
dec
or
clc
or
insl
add
fsubs
out
xchg
adc
or
sub
or
mov
ret
xchg
imul
fcom
and
jno
inc
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
xor
add
js
jle
js
cmc
jmp
lret
mov
aas
xor
dec
jns
and
mov
test
jmp
sti
mov
fldt
add
sbb
mov
mov
ds
repz
jmp
fistps
push
addr16
jb,pt
aam
push
cwtl
idivb
xchg
mov
mov
xchg
xlat
mov
sub
or
xchg
cs
dec
sti
stc
dec
inc
jecxz
push
cmpsb
push
cmp
adc
lcall
mov
cmpsl
adc
cltd
dec
fsts
mov
pushf
add
loopne
pop
mov
mov
fndisi(8087
mov
jge
xchg
loop
pop
mov
sub
pop
shrb
xorb
fucomi
iret
adc
inc
mov
jle
aad
rol
ret
imul
imul
out
fiaddl
xchg
ss
pop
data16
push
jmp
jne
jg
jnp
imul
pop
xor
inc
pop
sub
push
fiaddl
adcb
pushl
pop
sbb
negb
out
in
das
add
push
jb
scas
sub
out
pop
les
or
les
nop
mov
push
movsl
mov
mov
testb
push
push
pop
pop
inc
pop
jne
mov
dec
mov
pop
shrb
inc
sub
imul
lock
mov
xor
in
pop
push
loope
jge
inc
pop
insl
popf
fwait
lret
int
loopne
push
aad
outsl
xor
mov
fldenv
xor
repnz
lret
enter
in
addb
xchg
mov
adc
jmp
xchg
inc
rorb
xchg
enter
and
stos
mov
arpl
or
pop
insb
xor
cli
push
dec
out
or
in
jp,pn
cmpsb
xor
mov
decl
cwtl
sahf
loop
scas
xchg
movsl
mov
ja
in
xor
pop
dec
jp
xor
mov
les
aad
jp
xor
jns
std
fimuls
sub
insb
sti
insb
sbb
gs
nop
leave
push
fsubrl
into
mov
add
jnp
shll
lea
mov
mov
pushf
or
add
mov
ret
fs
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
call
vmread
jle
js
cwtl
in
call
loop
sbb
pop
lock
dec
and
inc
push
in
cs
clc
ss
xor
inc
add
ret
ret
sub
out
lock
jge
stos
cwtl
insl
pushl
cmp
lret
xchg
lcall
jg
xchg
test
lds
bnd
cmpsl
hlt
pop
orb
mov
xchg
sbb
movq
cmp
sbb
mov
sub
xchg
inc
clc
shrb
cmpsb
inc
cltd
xchg
into
shrl
sub
cmp
mov
xor
sub
lcall
jl
jbe
mov
jo
out
mov
dec
lcall
xor
scas
rol
pop
adc
fucom
push
and
lods
push
cltd
cmp
sbb
cmp
fcomps
cmp
je
mov
push
cli
setae
xor
pusha
cwtl
lods
sub
lds
mov
iret
les
mov
mov
add
addr16
xor
int3
mov
ljmp
test
nop
out
add
inc
sub
cmp
xchg
pushf
mov
daa
cmp
cmp
mov
das
xchg
jno
xor
sarb
aad
aad
or
xor
inc
ret
and
loope
cmpl
sub
xor
lock
sub
mov
lret
push
and
inc
sar
adcl
jg
cmpsb
mov
clc
mov
mov
insb
xchg
into
out
inc
popf
mov
movsl
mov
sub
aas
dec
inc
cltd
cld
sbb
jnp
dec
push
adc
sbb
mov
int3
rorl
mov
lea
pusha
fimuls
xor
movsl
frstor
sub
fldcw
mov
sub
xchg
mov
xor
popf
loopne
ds
mov
loop
les
xchg
cwtl
jo
push
pop
insb
repz
leave
pushl
cli
mov
mov
push
int
dec
jmp
mov
int
xchg
push
shr
rolb
mov
mov
jns
data16
lret
inc
pop
cmpb
add
sub
aaa
cmp
sub
jge
lcall
int
pushf
jne
jecxz
xor
inc
jmp
xchg
sub
push
xor
out
inc
ljmp
xchg
aas
jle
xchg
aaa
xor
adc
sbb
shlb
adc
sub
pop
mov
dec
adc
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
lret
push
or
js
jle
js
inc
sbb
push
dec
inc
outsl
es
mov
xor
cmp
inc
fucom
push
fisubl
xchg
xchg
stos
aad
push
sbb
aad
test
int
lret
mov
stos
sub
shrl
cmc
cmp
xchg
sbb
popa
cmpsl
add
mov
and
add
arpl
jbe
and
sbb
sahf
enter
dec
cmp
add
stos
popl
jmp
sbb
push
loop
int
data16
or
pop
dec
or
dec
insb
sub
test
mulb
aas
xor
pusha
rorb
scas
sahf
mov
sub
mov
mov
mov
sbb
rorb
popa
adc
pop
inc
xchg
mov
cwtl
fildl
mov
or
jnp
push
inc
and
add
pop
mov
incb
jmp
pushl
adc
insl
in
fdivl
test
mov
xchg
cmp
cmc
pushf
inc
pop
decl
mov
fsubs
pop
das
into
ret
stos
xchg
in
lcall
xor
mov
or
sbb
jbe
sub
jmp
cmp
cmp
sub
insb
cmc
enter
mov
enter
data16
xor
ja
dec
ljmp
cmp
in
inc
mov
pop
lcall
ret
jmp
push
mov
add
jnp
lahf
insl
hlt
jmp
sbb
addl
mov
es
xor
push
add
imul
cmpsl
sbb
push
mov
lods
dec
mov
mov
xlat
xchg
adc
push
push
and
mov
add
inc
jnp
mov
mov
call
cwtl
ja
xor
daa
sub
in
sbb
dec
push
pop
or
pop
fwait
mov
out
daa
push
mov
mov
jnp
add
clc
xlat
dec
xor
xchg
push
cmc
mov
movsb
clc
ja
xor
mov
add
jae
mov
add
inc
stc
jbe
push
pop
jp
cltd
xor
into
out
adc
sbb
outsb
jp
jmp
inc
lahf
jl
lods
ret
push
mov
out
test
test
mov
xor
mov
mov
pop
test
repnz
pop
mov
clc
pop
fimuls
jne
ds
sub
fwait
test
mov
jmp
lcall
int
rcr
aad
bound
xor
imul
js
jle
js
mov
push
xor
fldl
adc
arpl
inc
fs
dec
push
xlat
push
punpckhwd
mov
push
pop
loop
fs
pop
and
pop
out
mov
fisubrs
testb
fnsave
xchg
sbb
or
mov
lods
loopne
fwait
xchg
dec
inc
xchg
add
outsb
cmpsl
ds
xor
cmp
pusha
es
sbb
mov
mov
add
stos
cli
push
js
pop
mov
out
sub
cmc
jnp
outsl
frstor
inc
jne
mov
push
rclb
push
fsubrp
push
test
and
je
mov
in
adc
cwtl
shrb
and
in
sub
jmp
and
orb
out
mov
fidivs
add
aam
jmp
jb
call
cmp
ja
pop
das
and
int3
cmc
shlb
xchg
loop
leave
stos
cmp
pop
js
addr16
repnz
daa
nop
out
pop
pop
mov
iret
cmp
add
dec
sub
or
ret
imul
inc
ja
ss
adc
add
movsb
xchg
loopne
sub
fbstp
lea
xchg
cwtl
dec
cmpsb
cmp
push
push
stos
outsl
mov
or
ret
into
mov
or
mov
inc
sbb
int
jge
push
cmpl
jo
adc
outsb
inc
mov
pop
add
fistps
and
or
and
cwtl
push
mov
mov
jns
push
std
dec
loope
lds
sub
icebp
enter
jno
rorb
xor
ror
mov
out
ds
add
dec
inc
test
daa
sahf
rcll
pop
mov
lret
mov
mov
or
repnz
adc
mov
lcall
icebp
inc
cmc
xchg
xor
stc
rol
sub
mov
pop
not
cltd
push
movsl
xor
xor
ss
fsubrs
lahf
sub
pop
scas
mov
icebp
cmpsb
pop
cmp
lea
sub
and
sbbb
rorb
sbb
test
adc
test
mov
jo
test
in
call
mov
lea
leave
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
stos
jae
push
or
js
jle
js
pop
ds
push
pop
stos
aas
movsl
pop
fistl
rolb
inc
out
sar
pushf
xor
aam
and
mov
mov
inc
fbld
sub
xchg
sub
pushf
jnp
cmp
pusha
push
mov
cmp
pop
inc
cmc
and
lods
dec
movd
sub
sti
push
scas
jecxz
cs
jb
xchg
jecxz
in
add
insl
adc
out
xchg
lock
xchg
jp
into
add
out
into
xor
mov
xlat
stos
pop
lea
les
push
cld
js
xor
ret
fadd
jns
adc
xor
adc
sbb
repnz
mov
pop
inc
push
adc
les
jo
mov
mov
jg
mov
push
int
ds
pop
imul
shrb
out
pop
pop
js
mov
pusha
mov
dec
lods
ljmp
push
xchg
jbe
mov
jmp
fimull
imul
add
sub
gs
pop
push
mull
cmp
sub
and
pop
repnz
flds
adc
pop
inc
add
stos
repnz
dec
jmp
rcrb
adc
repz
data16
xor
rcl
mov
lret
pop
in
push
fcoms
jae
dec
xor
mov
sub
push
sbb
mov
xor
inc
mov
ljmp
push
fdivl
stos
push
dec
les
mov
jae
sbb
lods
dec
fsubrs
aas
inc
mov
xor
shrl
inc
mov
add
xor
mov
add
cli
inc
daa
jmp
aad
hlt
xchg
xchg
and
inc
xchg
cmpsb
mov
enter
adc
sbb
or
sub
mov
out
popf
or
inc
pushf
arpl
xchg
movsl
dec
inc
sbb
inc
fs
hlt
into
push
inc
bound
lods
dec
lea
mov
aas
xor
xchg
test
mov
pop
jno
add
ds
push
or
popl
push
and
jo
dec
inc
push
add
fs
std
idivl
call
push
dec
dec
cld
push
mov
ror
xchg
xchg
test
repz
lods
inc
push
scas
xchg
mov
int
sub
cmp
mov
mov
jmp
ror
ror
ror
test
xchg
push
xor
xor
adc
js
xchg
adc
and
outsb
ds
jle
insl
push
outsb
in
in
sbb
mov
movsl
orb
inc
push
aam
jae
push
pop
jbe
adc
fistpll
jae
or
cmp
lods
imul
sub
mov
push
xlat
or
pop
pop
fmull
test
int3
and
xchg
mov
sbb
sub
mov
mov
jo
mov
push
out
push
fsub
scas
dec
mov
dec
jo
ss
sub
shlb
inc
je
jnp
icebp
out
ja
lahf
stos
xor
outsl
fwait
mov
adc
dec
mov
dec
mov
shl
jle
jo
mov
dec
ja
out
push
subb
xchg
popf
fstp
pop
or
jle
pushf
push
sub
mov
jecxz
pop
in
dec
testb
ret
cmp
test
lds
jg
frstor
int
rcl
xor
mov
xsave
stc
test
popf
stos
fistpl
or
inc
jle
push
insl
loop
jnp
fsubs
or
sub
rcl
inc
xchg
js
mov
mov
sub
mov
pop
fstps
fwait
orl
inc
xchg
test
push
xchg
push
ret
adc
scas
adc
mov
jl
gs
lahf
popf
cmc
xchg
sarb
dec
push
jae
dec
mov
xchg
inc
test
je
mov
loope
out
aad
ficomps
mov
cs
jg
imul
mov
lret
sub
jmp
add
jmp
push
mov
xor
sbb
dec
mov
jno
or
jle
incb
in
cmp
lods
std
sub
cmc
fwait
dec
loopne
cmpb
in
fsub
cmpsb
xor
sub
jge
not
push
shl
sub
fs
ret
xchg
pop
pop
test
aam
repz
rcrl
cli
push
push
pop
shlb
mov
sub
jecxz
adc
in
aaa
jb
mov
or
xor
add
jns
cmp
sub
jno
cwtl
adc
add
mov
mov
mov
mov
cwtl
jecxz
push
enter
mov
sub
les
leave
rcl
mov
int
dec
in
bound
mov
movb
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
cmpb
jle
js
xchg
xor
pusha
sbb
pop
mov
jno
ret
pop
mov
out
sub
data16
push
movsb
test
ficompl
cmpsb
sbb
shll
xor
push
testl
add
out
movsb
cs
jno
pop
mov
adc
fsubr
inc
ljmp
mov
xchg
cmc
mov
mov
cmp
jb
push
adc
sub
pop
ljmp
lcall
repnz
jle
loop
xchg
lock
mov
ret
and
add
mov
xchg
hlt
dec
dec
int
insl
leave
or
add
add
outsb
lds
sub
fld
push
mov
mov
sbb
std
loopne
jl
adc
shr
nop
stc
das
fisttpll
loop
imul
loope
mov
mov
dec
lds
loopne
ret
xor
mov
iret
cli
fwait
pop
add
pop
into
bound
repnz
ljmp
aas
mov
ds
cmpsl
loopne
sub
rol
mov
jbe
pop
mov
fimull
fs
inc
ss
xor
insb
sbbb
sti
mov
inc
out
shll
cmp
lea
imul
or
jae
into
stc
sarl
and
jns
popa
insl
lret
xchg
fistl
push
mov
sbb
faddp
negb
dec
pop
testb
pextrw
es
or
cmp
aas
or
push
pop
lods
cmp
mov
dec
and
mov
outsl
inc
xlat
mov
pop
xchg
and
fisttpl
sti
jae
dec
xor
xchg
and
orb
sti
dec
adc
stc
movsl
leave
sub
mov
sbb
pop
adc
pop
mov
xchg
mov
mov
jg
icebp
pop
subl
pop
stos
fistps
aam
or
loope
std
jmp
mov
setbe
adc
xchg
and
test
lcall
mov
testl
dec
sub
ds
data16
out
mov
in
pushf
icebp
inc
adc
ret
sub
ds
fcomps
and
fldl
xor
adc
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
jmp
push
xor
cmpsb
inc
bound
nop
mov
mov
mov
xlat
out
stos
mov
stos
push
aad
push
dec
movsl
and
lods
enter
loope
mov
mov
scas
adc
call
shrl
mov
inc
jno
lret
mov
cmp
pusha
pop
xchg
mov
andb
stc
scas
sbb
push
stos
push
idiv
fsubrs
enter
cmp
scas
scas
insb
inc
fistl
pop
stos
sbb
mov
pop
push
cmp
xorb
popf
shlb
arpl
dec
xchg
sahf
jo
mov
mov
test
push
jp
mov
jns
jns
cltd
sbb
sub
and
int
imull
sbb
movsb
lock
fwait
outsb
loope
sti
jmp
lahf
pop
js
pop
ljmp
sbbl
ret
add
clc
or
jns
sub
add
test
sub
cmp
push
mov
jo
les
dec
pop
inc
mov
repnz
jp
push
aad
jl
or
testl
scas
inc
pop
mov
int
shlb
fidivrs
ja
test
mov
mov
mov
inc
mov
les
hlt
push
std
adcb
adc
push
enter
data16
push
scas
mov
sti
sbb
jecxz
sbb
sub
xchg
push
pop
pop
push
sarl
xchg
or
ret
sub
dec
push
adcl
jbe
inc
push
and
push
mov
pop
out
adc
mov
imul
xchg
sbb
das
hlt
js
adc
pop
xor
test
adc
sub
stos
fisttpl
dec
ret
loopne
lds
sahf
mov
xor
jg
scas
jns
cmp
sub
loopne
sbb
dec
movsl
mov
inc
aas
xchg
outsb
mov
out
xor
loop
pop
fbstp
sbb
out
leave
and
cmc
sti
xor
jne
xor
push
test
gs
lahf
adc
sbb
cli
or
pop
or
pusha
fs
outsb
mov
iret
iret
pop
cs
cmp
add
add
rol
ror
mov
and
adc
js
jle
js
ja
popf
adc
inc
push
jb
lock
and
xchg
rclb
sub
mov
stos
cmp
in
jmp
cmpsb
lret
shll
mov
sub
xor
aam
rcl
pop
and
jp
mov
loop
bound
fsubl
cmp
mov
mov
sbb
loope
ja
es
cmpsb
or
enter
aaa
test
push
pop
btc
add
sub
out
outsb
aaa
mov
das
es
int3
lea
mov
cmp
inc
test
loopne
jle
fsubl
mov
pop
xchg
fstpl
lcall
test
imul
xlat
add
sub
jg
mov
and
xchg
dec
sub
test
mov
adc
test
pop
adcb
mov
add
cmc
inc
insl
fsubl
nop
push
adc
jecxz
pusha
and
or
pop
and
mov
lahf
fisttpl
lock
adc
push
stc
repnz
jb
mov
dec
or
inc
mov
movsb
pop
je
insb
sbb
push
cmp
lock
sahf
outsb
add
rcl
pop
inc
repz
push
or
pop
push
fucom
scas
pushf
xor
jns
push
dec
setno
roll
mov
clc
cs
lds
fisubrs
cmp
pop
lahf
mov
js
cmp
mov
mov
ss
xchg
cwtl
sbb
adc
mov
mov
cmp
cs
sub
mov
lods
in
xchg
adc
aaa
mov
lock
jp
xor
ja
fsubl
enter
pop
xchg
fcoms
rclb
pop
add
sub
mov
mov
shll
cltd
movsb
std
sub
pop
mulb
js
cmp
mul
adc
out
in
sub
call
pop
arpl
xchg
push
fadds
xchg
fsubrs
dec
and
cmp
repz
icebp
pop
ret
lret
cmp
popa
lock
mov
adc
rorl
js
pusha
les
dec
jns
add
push
cmp
cmp
outsb
arpl
scas
xor
incl
mov
add
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
xchg
js
jle
js
sti
aad
icebp
stos
nop
and
sbb
insb
loopne
add
mov
jae
and
sbbl
fcmove
cmpsb
fldt
out
arpl
xchg
scas
mov
inc
xchg
adc
or
pop
inc
es
daa
mov
mov
push
jle
xor
lods
dec
bound
adc
cmp
mov
imull
enter
jno
cltd
insb
sbb
std
xor
pop
mov
dec
push
dec
push
nop
popf
adc
fldt
aaa
push
dec
or
mov
arpl
dec
insl
lcall
dec
adc
cwtl
scas
addr16
clc
pop
push
or
xor
cmp
iret
out
mov
mov
insl
cmp
stc
cmpl
outsb
cwtl
jne
hlt
dec
outsl
and
add
adc
movsl
aam
shrl
sahf
mov
jns
cmp
out
daa
orb
fcomps
enter
insl
pop
xchg
xchg
and
mov
cmp
mov
sahf
in
xchg
std
mov
das
cmp
arpl
nop
dec
cs
stc
sbb
or
jb
cmp
or
mov
mov
mov
outsl
stc
sarb
sbb
stos
lcall
dec
and
xlat
les
sub
popa
xchg
lcall
add
and
mov
xor
int
sub
jecxz
mov
in
pop
ret
add
mov
cs
and
adc
repnz
je
ret
cwtl
adc
inc
in
xchg
daa
cmpb
iret
ss
and
lret
lock
mov
mov
ret
mov
xor
andb
push
ljmp
popa
xorps
mov
mov
xor
ljmp
pop
ja
fldln2
pop
push
cld
mov
inc
mov
lret
icebp
stos
mov
std
popf
arpl
push
jp
inc
repnz
loopne
int
inc
xor
jp
mov
lds
out
sub
lods
dec
movl
xchg
pop
pop
jmp
dec
inc
cmp
dec
dec
inc
push
out
dec
cwtl
stos
sbb
mov
pop
dec
add
push
in
movsl
orl
dec
icebp
rorb
inc
or
add
mov
jmp
jmp
ds
lret
fldenv
pop
rclb
jle
js
cmp
fwait
pop
mov
hlt
shrb
push
ljmp
gs
mov
ljmp
push
in
cs
cwtl
mov
and
daa
out
dec
or
sbb
jne
clc
test
fiaddl
popa
xor
xchg
loope
test
imul
xchg
pcmpgtd
sbb
pop
mov
sahf
pop
sbb
cmpsl
jno
repnz
pushf
movb
loope
jns
sub
push
clc
or
aam
pushl
inc
add
jecxz
xor
dec
mov
cltd
test
outsb
and
jno
or
mov
mov
test
jns
incb
sub
sbb
cmpsb
xchg
out
loopne
scas
dec
and
dec
jne
pop
sub
xchg
shll
aaa
or
out
scas
sbb
pop
leave
jb
cwtl
iret
in
cmp
sahf
mov
imul
cmp
das
or
out
imul
sar
xchg
addl
repnz
cmp
xchg
push
pop
mov
out
incl
stos
inc
popa
das
inc
fld
push
dec
push
xor
mov
repnz
cld
ret
int3
andb
jecxz
push
xchg
orb
jg
loop
or
cli
in
out
notl
push
xchg
lods
fadds
jmp
outsb
cli
and
popa
cmp
push
out
cltd
inc
scas
jb
or
test
pop
dec
fnstenv
fdivl
subb
cmp
jno
sub
pushf
cmpsl
cmp
repnz
inc
push
sti
test
popf
jb
sti
adc
adc
lcall
xchg
imul
je
inc
out
cmp
mov
add
popa
inc
sub
inc
xchg
push
mov
mov
inc
sub
nop
fnstenv
mov
fldt
out
adc
push
xor
enter
mov
mov
in
fistpll
pop
mov
push
add
pop
ret
bound
movsb
cmp
xor
and
sbb
inc
mov
mov
addl
adcl
inc
adc
mov
loope
repnz
xchg
adc
xchg
shrb
dec
push
xor
xorl
jmp
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
sub
js
jle
js
lret
inc
cmpsb
pop
enter
or
lret
add
sub
add
xor
push
dec
inc
mov
push
cli
push
outsl
mov
jo
rclb
cmp
push
ss
ret
fwait
push
adc
inc
stc
js
mov
xchg
push
insb
arpl
rcll
imul
sahf
add
pop
xchg
andb
in
jne
xor
popa
cvtps2pd
push
xchg
sbb
or
lock
jae
data16
cld
test
stos
pop
push
xchg
push
xchg
xor
out
xchg
cmp
mov
push
iret
add
loopne
mov
lds
dec
jno
sti
repz
lods
push
jae
push
shl
xor
movsl
aad
inc
aas
mov
xchg
jnp
jecxz
push
ss
decl
fmuls
rorl
jge
mov
fs
scas
out
fldt
or
mov
sbb
dec
je
stos
jle
cmc
add
roll
fidivrs
xchg
pushl
jno
push
jno
fsubr
xchg
adc
hlt
outsl
sbb
pusha
dec
sbb
rcl
test
inc
fstpl
js
leave
outsb
push
jns
push
mov
int
push
lretw
test
das
push
fnsave
outsl
ja
inc
add
pop
sub
outsb
hlt
dec
jb,pn
loop
out
jle
pop
add
pop
popa
fs
sub
jne
loop
or
cmpsl
xor
sbb
insl
out
dec
sbb
testl
loope
in
test
inc
mov
sbb
dec
push
gs
ljmp
pop
out
test
fwait
and
roll
pusha
mov
repnz
jmp
rol
ret
pushf
mov
ffreep
jb
push
roll
inc
cmp
push
testl
ja
cmp
jl
cmc
ficompl
test
cs
cmp
test
push
cmp
mov
xchg
or
xor
cmp
insb
inc
clc
cmp
movsl
jnp
pop
sub
jae
pop
movl
jle
sbb
mov
sub
mov
out
loope
cmc
stc
inc
negl
in
jge
adc
and
push
mov
mov
cmp
fwait
and
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
xor
popa
cmp
sub
dec
jle
js
cmp
repz
fdivs
les
xor
and
xor
mov
adcb
or
rcrb
ret
cmp
push
shlb
popa
cmp
xchg
outsl
popf
fdivl
lock
into
imul
jae
js
rclb
fnstenv
push
inc
mov
cmpsl
outsl
sub
bound
jp
add
or
push
pop
outsb
hlt
iret
push
scas
push
imul
insl
xchg
fldenv
push
jno
adc
sub
int
add
xchg
mov
ret
mov
and
repz
cmp
xchg
scas
push
fcoms
add
push
aas
movsl
lods
xor
test
or
xchg
fldl
sub
cmp
sahf
nop
cmp
ljmp
dec
add
add
dec
dec
sti
adc
mov
movsl
jno
xchg
adc
hlt
daa
cmp
add
add
dec
adc
daa
cmp
mov
cmpsb
jb
rcrb
xchg
mov
clc
xor
enter
sbb
shll
test
loop
pop
inc
mov
add
fdivr
filds
lcall
popa
mov
lea
fidivl
mov
fisttps
sbb
rcrb
and
ljmp
addr16
es
mov
call
stc
pop
call
test
pushf
ret
sub
inc
jns
cmp
xor
lds
aas
dec
decl
xor
push
mov
inc
adc
dec
adc
adc
and
shlb
inc
test
push
imul
cs
aad
outsl
xchg
scas
imul
jg
adc
lcall
repz
dec
mov
push
dec
aam
out
or
imul
push
sub
sub
xchg
insb
test
pop
mov
mov
push
jmp
jno
scas
or
add
loop
adc
jnp
mov
daa
add
call
push
negl
orl
arpl
insl
xor
shrb
je
push
icebp
popf
incb
pop
cmpsb
mov
sbb
mov
sar
cmpsb
add
push
popf
and
dec
xor
popl
add
lds
cmpb
xor
jge
test
inc
xlat
add
imull
cli
cmp
fidivrs
lret
movsl
sbb
adc
xchg
sub
clc
call
jg
push
sub
cmp
push
xor
fwait
push
and
fprem
push
fwait
daa
dec
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
xchg
jg
sub
dec
jle
js
pop
fisttpl
xor
inc
fisttpl
addr16
outsb
push
and
enter
movsl
out
xchg
outsb
js
add
popf
fsubrs
jo
and
xchg
sub
insl
mov
fwait
push
xchg
mov
jl
and
push
out
popf
cmc
adc
mov
add
cmp
pop
push
push
iret
out
mov
fucomi
lds
mov
pop
push
mov
jns
mov
push
lahf
addr16
loop
jbe
mov
push
mulw
xlat
pop
outsl
jle
sub
mov
sbb
fwait
into
ja
cmp
add
repnz
mov
sahf
cmp
gs
std
mov
lret
mov
mov
push
cmpsb
push
jbe
add
sub
xchg
imul
loope
jns
cwtl
jns
loope
clc
and
jae
jle
mov
out
stos
les
xlat
pop
lods
dec
hlt
cs
xchg
out
lods
xchg
popf
jp
in
fdivrl
sub
dec
sub
sub
insl
mov
pop
jns
mov
outsb
sub
mov
lds
sub
shlb
add
add
sub
fisubs
mov
mov
push
dec
das
sub
gs
mov
leave
out
std
das
mov
push
jmp
in
arpl
gs
dec
xlat
shll
jnp
add
scas
pop
pop
adc
xchg
inc
sbb
push
nop
into
scas
outsb
or
into
shl
les
in
popf
jmp
pop
lret
hlt
into
in
adc
sahf
test
inc
in
sbb
cli
jne
inc
icebp
pop
cli
mov
shll
sub
aad
test
psubw
jo
mov
push
jo
lods
dec
pop
and
jmp
mov
and
nop
fs
vpmaddwd
jmp
cmc
nop
lcall
jno
xor
cmp
xor
mov
inc
shlb
dec
in
mov
sub
xchg
data16
dec
test
pop
gs
cmpsb
or
inc
out
mov
xchg
xor
les
fsts
cmp
pop
jb
dec
in
addr16
xor
mov
push
jns
inc
jle
adc
pop
xchg
out
sahf
mov
xchg
jmp
cmp
sbb
and
roll
dec
adc
sbb
push
jne
adc
push
pop
pop
pop
lock
cmpsl
push
sbbl
adc
mov
arpl
pop
lods
mov
adc
adc
jne
xor
or
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
inc
jbe
test
js,pn
dec
jle
js
ljmp
aam
and
lods
aaa
divb
imul
cmp
mov
jle
pop
cs
push
mov
sti
dec
repz
sub
movsl
cli
sub
out
addb
mov
fistps
test
cmp
xor
pusha
adc
mov
sbb
add
aas
or
pusha
enter
xor
mov
mov
aad
lods
in
int
dec
roll
push
rcrb
mov
and
push
jmp
inc
daa
dec
mov
and
ficomps
xchg
push
sbb
add
leave
mov
rorb
mov
ficompl
lods
xchg
pop
mov
daa
fs
ja
jbe
mov
sub
mov
xor
popa
fs
xor
push
jmp
jp
popf
int3
mov
jle
cmpsb
mov
scas
popa
in
mov
das
aad
pop
xor
rorb
dec
ror
repz
xchg
mov
fcoml
sbb
dec
fwait
inc
stos
jno
push
jbe
int
dec
mov
push
inc
adc
cmp
inc
xchg
insl
xor
mov
std
cmpsl
jle
cmpb
lods
sbb
mov
in
mov
lcall
mov
dec
add
sub
outsl
adc
mov
test
cmp
mov
movsb
outsl
inc
mov
mov
addr16
jb
adc
pushf
out
sti
mov
fsts
mov
dec
imul
push
sub
pop
shll
repnz
jae
cmp
pop
sarl
adc
shrb
mov
fsubr
push
xlat
les
xchg
pop
xlat
mov
cmpsb
pushf
and
push
fsubr
or
ficomps
pop
mov
repz
mov
popa
dec
ds
or
out
adc
inc
testb
add
mov
aas
sub
push
fnstcw
mov
adc
aad
bound
cmp
std
push
cmp
and
xor
push
in
mov
gs
mov
or
jo
sahf
dec
sub
dec
jp
or
push
or
jecxz
mov
mov
push
fidivl
sub
pop
add
stos
sbb
mov
ret
pop
push
setle
push
dec
cmp
jl
ret
ret
add
out
jmp
cmp
jp
cmpsb
pop
call
ret
jle
mov
imul
cli
repnz
repz
push
jg
mov
imul
add
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
mov
mov
dec
jle
js
test
fs
push
pop
push
mov
push
roll
sub
mov
sbb
push
xchg
inc
mov
int3
mov
ret
mov
dec
inc
movsb
lock
add
add
mov
sbb
push
clc
test
fwait
adc
mov
dec
ss
xchg
iret
inc
outsb
or
cmp
call
dec
mov
cmp
add
mov
dec
enter
loope
push
stos
fldl2t
and
xor
sbb
scas
outsl
ljmp
jbe
adc
je
addr16
scas
adc
inc
mov
fcoms
mov
sbb
mov
adc
lea
out
mov
insl
or
pushf
lahf
pop
and
cld
imul
sub
cmp
or
dec
aam
sbb
ret
sbbl
push
int
mov
hlt
xor
mov
push
lock
and
pop
daa
add
pop
mov
out
and
rcrl
xchg
and
popf
dec
loop
leave
mov
lahf
cmp
cmp
xchg
pop
lahf
daa
into
xchg
inc
or
mov
push
je
shll
and
xor
and
lods
aas
pop
test
test
out
add
data16
aam
push
fnstenv
xor
mov
shl
std
or
popa
enter
push
adc
jo
insl
leave
mov
sbb
fwait
enter
adc
stos
jp
jbe
mov
scas
adc
mov
aaa
in
rclb
dec
or
out
and
fwait
mov
jle
pop
cs
xor
mov
outsl
jle
mov
inc
mov
cmp
mov
hlt
xchg
insl
and
cmp
cld
shrb
cltd
mov
lods
in
lret
fdivrs
jnp
xchg
xorb
jnp
pop
xchg
pop
int
cli
mov
std
movq
add
sub
jns
iret
out
pop
test
inc
popa
mov
push
hlt
pop
dec
dec
testb
mov
jle
repz
shll
in
bound
loopne
test
sbb
add
inc
cli
imul
imull
fnstcw
js
xacquire
fstl
repnz
push
jae
fwait
xchg
dec
xor
das
call
in
jne
dec
divb
add
adc
leave
fldpi
lret
sbb
dec
pop
xchg
out
mov
lods
sahf
mov
dec
push
xor
out
push
vpaddb
pop
mov
cli
add
push
clc
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
xchg
call
jle
js
xchg
pop
xchg
outsl
loopne
jb
push
lahf
shrb
push
push
add
lcall
xchg
fwait
sub
inc
or
and
add
in
fstp
xchg
push
pop
fistl
xor
mov
pop
fs
rorl
xchg
jo
jmp
int3
js
pop
mov
pop
mov
hlt
call
sub
or
pusha
aam
std
pop
sbb
test
mov
pop
mov
mov
xor
dec
push
pushf
jbe
nop
xlat
mov
inc
hlt
dec
add
mov
icebp
loope
lcall
adc
rep
enter
mov
sti
jnp
adc
add
jbe
mov
xchg
aad
push
and
cwtl
or
out
sbb
mov
xor
jae
xchg
outsl
sub
pop
fsubl
cmp
mov
xor
fdivs
sub
nop
adc
leave
lods
outsb
gs
stc
lods
mov
jns
imull
loope
ja
out
sti
test
cmpl
ss
push
inc
push
call
xor
push
in
inc
dec
ja
or
jle
cmp
dec
outsb
clc
shrl
les
adc
cmp
jl
out
xchg
pop
dec
fsubrs
mov
mov
adc
jmp
mov
inc
out
pushf
cmp
sbbb
insl
push
lock
push
mov
xchg
add
rclb
cmc
lods
dec
cmp
mov
sub
stos
lret
add
xor
ss
mov
cmp
xor
and
lds
xchg
jg
add
xorl
or
mov
cld
sub
out
cmp
dec
mov
sub
or
mull
mov
lahf
movsl
jecxz
mov
iret
or
pop
mov
aam
sub
gs
into
and
push
fisttpl
repnz
mov
mov
sti
das
add
and
sub
cmpsb
test
xor
cmp
push
mov
or
in
fidivrs
out
push
sbb
imul
pusha
mov
sahf
data16
xchg
inc
js
inc
adc
sbb
js
das
lea
mov
xchg
lds
mov
xchg
setno
das
xchg
int
sarb
mov
pop
cmp
popf
pop
or
shrb
ds
sub
jae
add
and
pushf
add
ret
fstpt
ss
pop
mov
fidivl
clc
inc
or
push
xchg
fcmove
or
mov
mov
movsb
and
jmp
int
rol
ror
aad
inc
jecxz
fsub
daa
mov
cmp
jle
js
dec
pop
mov
xchg
inc
xor
push
fwait
mov
dec
pop
jb
add
icebp
jb
fs
lret
ljmp
jne
push
or
arpl
nop
imul
dec
mov
shl
repnz
cmp
arpl
fwait
aad
jns
out
mov
call
outsb
aad
cmp
or
xor
test
pop
andb
push
push
xor
out
sbb
adc
xor
cltd
int3
andb
out
bound
icebp
xchg
in
test
ja
add
stc
out
pop
mov
inc
lock
inc
push
aad
dec
data16
out
lea
leave
push
sbb
decl
icebp
loopne
out
jo
cmp
adc
ret
test
or
lock
vmovupd
ds
neg
add
fst
leave
pop
pop
and
cmc
repnz
repnz
xchg
adc
shl
pop
lock
setne
decb
jbe
ss
xor
mov
adc
sahf
sbb
mov
cmpsb
pop
mov
or
mov
outsl
movsb
jle
sub
or
xchg
stos
cli
sti
mov
insb
sub
cs
adc
pop
cli
cmpsl
call
fidivs
sbbb
mov
aam
add
and
sbb
les
cmpsl
adc
xchg
cmp
mov
mov
testb
jbe
cwtl
pop
pop
iret
add
push
jp
in
dec
fs
out
js
and
shr
iret
jbe
jne
cld
mov
and
or
mov
mov
inc
in
in
adc
fcmovne
xchg
sarl
into
cmp
mov
dec
cmpsl
inc
fnsave
add
clc
or
adc
and
repz
xchg
push
in
dec
jmp
inc
or
ret
jg
rcll
adc
enter
jnp
fcoms
inc
add
daa
jbe
mov
jnp
test
adc
jne
icebp
daa
std
dec
divb
mov
scas
or
cwtl
fs
mov
mov
shrb
arpl
or
add
or
jb
inc
int3
push
or
mov
jmp
mov
push
adcl
scas
sub
jl
ficoms
cwtl
xchg
ds
int3
lds
ljmp
addb
lock
adcl
incl
push
cmp
or
mov
mov
es
mov
or
das
push
mov
xchg
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
push
mov
sbb
cmp
dec
jle
js
scas
int3
sti
xchg
std
fimuls
scas
outsl
pop
insl
cmc
test
out
cmp
cld
out
outsb
cmp
popa
dec
mov
cmpsb
js
sbb
or
cs
lret
shr
repnz
pop
sbb
loopne
mov
add
out
nop
xor
push
fcomip
mov
bnd
pop
xchg
pop
cli
call
out
ret
lcall
xchg
out
ja
inc
jne
jmp
popl
push
cmp
push
mov
roll
jne
sub
or
xorl
outsl
mov
xor
mov
into
outsl
jecxz
nop
js
mov
orl
mov
arpl
xchg
cli
sbb
scas
std
cmp
fsubrl
sbb
mov
out
daa
add
sbb
push
fisubs
lahf
push
mov
aaa
repnz
xor
inc
add
fisubl
and
pop
movsb
mov
lea
or
cmp
popf
mov
or
stos
mov
cli
stos
jno
sahf
add
mov
out
xchg
pop
add
inc
test
fadds
orl
pop
jmp
lock
insl
nop
loop
push
decb
or
lods
dec
stc
repnz
shrl
enter
lds
push
arpl
and
insb
int
cmp
cltd
lcall
mov
mov
mov
fidivl
push
pop
out
cmp
and
cmp
dec
or
call
add
mov
lcall
aam
xchg
cmp
sub
bnd
mov
mov
pop
lcall
xor
das
in
cmp
add
or
enter
fisubrl
sbb
sahf
scas
cli
jo
lock
cld
add
test
testb
les
arpl
mov
lret
rol
jmp
fnstsw
sbb
jb
mov
arpl
fimuls
js
daa
imul
imul
int
mov
inc
dec
fcomps
and
movsb
fsubrs
add
pop
adc
shlb
loop
in
adc
imul
lcall
mov
loop
inc
lods
scas
mov
repnz
pop
dec
loope
stos
adc
jg
mov
jno
daa
fsubrl
sbb
jmp
and
ret
mov
loope
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
or
jmp
js
dec
jle
js
jnp
fsts
push
fsts
sub
addr16
cmp
daa
push
jne
mov
pop
sub
call
pop
cmpsl
or
lret
rcll
xor
ljmp
lcall
lret
mov
push
push
or
jg
pop
cmpsb
pushf
pop
lret
bound
pop
es
mov
insb
add
sar
adc
out
or
inc
add
add
add
adc
aad
jle
or
pop
xchg
or
mov
push
adc
adc
dec
adc
filds
cltd
cld
cmp
popa
shlb
xchg
pop
js
mov
and
fmuls
hlt
andb
test
pop
outsb
xor
and
aam
fsubrl
dec
rcrb
jno
pop
lea
mov
cmpsl
dec
iret
mov
ljmp
fprem1
jmp
or
jecxz
das
cmp
and
xchg
clc
mov
roll
mov
jp
xor
rolb
insl
jmp
scas
push
jo
ds
cmc
and
outsb
inc
pop
xor
mov
rolb
std
mov
test
sbb
pop
das
fimull
push
xor
ret
dec
jmp
int3
xor
inc
mov
lds
aaa
repnz
hlt
test
cwtl
or
and
pusha
xchg
insl
jge
mov
arpl
cli
jp
mov
pop
add
imul
and
xor
ds
rorb
sub
mov
fsubrs
fs
out
cmpsl
scas
pop
fistpl
pop
xor
es
sub
fs
add
aam
es
imul
outsb
push
aas
roll
cmp
sub
pop
out
movsb
adcb
jae
inc
dec
popa
scas
test
lcall
and
adc
mov
cwtl
sub
push
pop
cmp
lcall
xchg
pop
test
push
loope
add
loop
lahf
add
sub
out
arpl
loop
dec
sbb
in
iret
cwtl
aad
andl
aam
les
push
loopne
inc
das
push
jae
add
push
call
in
cmp
lods
mov
push
stc
aad
add
testb
jae
jnp
out
lret
jg
inc
in
xchg
fiadds
orl
mov
testl
mov
inc
icebp
push
cmpb
jne
call
jne
aas
test
inc
out
mov
arpl
push
mov
push
dec
fmul
and
test
mov
fldcw
pusha
aam
shr
jmp
add
rol
ror
leave
rcr
aaa
mov
pushf
and
dec
jle
js
add
mov
test
dec
lret
xchg
sbbl
add
data16
hlt
movsl
scas
adc
insl
lret
xchg
cmp
test
lar
in
roll
sub
loop
insl
xchg
adc
inc
lods
sbbl
mov
push
std
jne
inc
mov
dec
mov
pop
sub
bts
or
adcb
pop
mov
push
jmp
xchg
add
movsb
test
add
and
cmc
stc
xlat
fmul
add
cmc
mov
push
or
xlat
movsb
sbb
jmp
mov
push
js
dec
xor
hlt
in
push
jge
mov
xor
cli
fs
ret
and
push
pop
addr16
or
shlb
push
jge
fs
pop
add
idiv
cmpsl
fcoms
leave
jge
mov
mov
dec
lret
mov
imul
test
adc
pushl
xchg
scas
jecxz
leave
ret
inc
ret
dec
and
xchg
mov
jge
fs
mov
lea
sbb
jno
pop
or
dec
cli
repnz
dec
add
out
adcb
jp
cmpsb
or
push
aas
mov
mov
mov
xor
sbb
orb
dec
lock
jns
nop
clc
inc
inc
add
roll
push
fwait
jg
add
iret
add
test
mov
xor
lods
int
mov
push
cmc
adc
pop
or
fnstenv
scas
mov
dec
imul
pop
fincstp
popf
mov
imul
pop
jmp
jmp
and
xor
mov
and
dec
das
mov
mov
loope
ret
add
and
jl
dec
loopne
inc
jle
pop
xchg
jmp
lea
fwait
bound
push
and
lods
push
lods
rorb
push
fcmovne
in
xor
mov
mull
dec
lea
daa
aas
fistps
leave
sub
inc
into
inc
push
fbstp
pop
or
pop
or
sbb
mov
and
xchg
xchg
jp
dec
iret
bound
xchg
stc
xchg
mov
push
adc
cmp
shll
xor
loope
mov
mov
add
fxch
mov
push
pushf
dec
nop
jno
xor
stos
pop
inc
inc
sub
cmc
imul
ss
dec
out
mov
into
cmpsb
iret
mov
scas
cltd
dec
shrb
dec
add
dec
xchg
pop
icebp
pop
push
sbb
ds
sbb
mov
stos
in
mov
addr16
mov
adc
rclb
fidivrs
and
lods
fnstcw
jmp
iret
rcl
lret
ror
xlat
lods
and
int
sub
jle
js
movsb
rcrl
sub
mov
xchg
out
mov
mov
jl
mov
sahf
fidivl
rolb
xor
xchg
or
enter
lock
dec
popf
mov
sub
xchg
dec
cmpsl
xor
rcll
or
or
cld
cmpl
inc
sbbl
pcmpgtw
jmp
inc
jb
or
inc
jne
sbb
inc
std
sbb
scas
cmp
enter
lods
mov
aaa
imul
pop
xor
dec
pop
xor
dec
mov
jbe
ja
or
mov
push
dec
popf
lods
sbb
mov
xor
pop
or
sub
xchg
jb
and
sub
cs
ja
aaa
leave
into
fs
addr16
and
aas
gs
call
lahf
adc
adc
or
cmpsl
aad
xor
ljmp
mov
xchg
imul
lods
add
mov
sub
pushw
leave
hlt
cmp
es
or
push
scas
mov
cli
lods
insl
mov
sbb
dec
int3
fs
nop
cmc
enter
mov
pop
in
xchg
pusha
daa
dec
lahf
fimull
adc
push
dec
mov
jbe
cmp
adc
lcall
jo
sti
ret
ljmp
sbb
mov
xchg
sub
xor
sub
mov
int3
jns
xlat
rorb
pop
adc
leave
loop
pop
push
std
sub
xchg
jmp
loopne
add
ret
cltd
sbb
mov
inc
iret
sub
into
sti
outsb
cltd
xchg
das
repnz
inc
xchg
sub
outsb
lcall
outsb
cs
out
dec
sbb
fidivrs
pop
sbb
or
out
cmc
xchg
mov
fwait
imul
add
sbb
stc
dec
push
lret
jbe
lock
gs
pop
loop
and
push
sub
or
mulb
fwait
or
xlat
lret
xchg
hlt
and
popa
pop
int
push
int3
in
in
popa
mov
sbb
jmp
pop
in
mov
cmp
jb
setb
mov
lock
fdivr
stc
rorb
push
jp
jns
cmc
sub
xor
adc
ja
mov
mov
arpl
push
pop
aad
mov
dec
mov
cwtl
in
and
or
repz
test
jbe
sbb
dec
div
mov
jmp
aas
ret
rol
sbbl
sbb
js
dec
jle
js
in
add
cmp
lret
push
dec
cmp
xor
subb
add
dec
push
repz
loopne
inc
inc
pop
es
aam
inc
add
xchg
cmp
stos
push
fdivrl
cmp
cmp
bound
xchg
sarl
fisubrl
adc
mov
xor
adc
iret
hlt
and
pop
test
xchg
out
add
xchg
sub
dec
rcll
xchg
aas
mov
adc
subl
or
notl
lods
inc
dec
mov
push
mov
push
or
mov
jne
outsl
jecxz
jo
test
aad
lsl
sbb
out
pushf
es
ljmp
jbe
push
jmp
enter
test
pop
add
push
sar
call
jno
ds
adc
dec
jmp
and
xorb
fwait
adc
sub
test
sbb
das
push
popa
jns
orb
adc
push
inc
lods
pop
mov
aad
sbb
lea
cld
xchg
leave
xor
push
push
test
sar
xor
inc
pop
cmp
ljmp
fdivrl
and
std
mov
sbb
push
arpl
out
push
std
ljmp
adc
xchg
mov
inc
fidivrl
xor
jb
inc
fsts
push
jae
xchg
sbb
mov
mov
inc
push
js
inc
cmpsb
in
mov
cmp
mov
push
aas
imul
lods
jmp
sub
and
insb
mov
cld
cmp
mov
adc
xchg
sbb
imul
mov
jle,pt
xchg
dec
push
mov
inc
stos
pop
fidivrs
scas
sbb
push
adc
jo
stc
ss
loopne
arpl
mov
movsb
enter
insb
nop
and
imul
imul
cmp
addl
xor
nop
ja
pop
cmp
popf
add
aad
pop
fldt
inc
ja
pushl
adc
sbb
in
jmp
cs
cmpsb
inc
andb
test
pop
icebp
test
into
scas
dec
push
sbb
repnz
test
mov
inc
rclb
inc
cmp
mov
mov
pop
sahf
rorb
push
mov
ret
outsl
jns
add
jae
bound
fdivrp
int
and
daa
jl
mov
sub
call
xor
nop
scas
sbb
mov
fdivrs
test
mov
jge
aam
aam
test
and
or
mov
jmp
ds
cmp
mov
add
push
xor
js
dec
jle
js
mov
xor
mov
xor
dec
cmp
jl
push
int
xchg
and
or
std
outsb
sbb
je
mov
mov
shll
mov
mov
adc
mov
stc
dec
repz
lcall
gs
das
jg
mov
pop
mov
lea
cmp
movsb
stos
pushf
pop
push
pusha
loop
scas
test
cmp
push
lret
inc
sbb
std
push
xchg
clc
ja
inc
mov
xor
negl
mov
pop
dec
mov
mov
sbb
shlb
clc
cmpsl
lds
ret
cwtl
aam
je
mov
cltd
out
daa
adc
stos
push
fwait
test
and
mov
aas
lret
shlb
pop
cmp
ret
jnp
notb
in
and
push
push
cmp
push
push
push
rcrl
mov
pop
or
mov
mov
add
or
out
frstor
jmp
rcll
ss
mov
adc
lcall
and
xlat
sbb
cmp
inc
ljmp
xchg
sub
sub
jne
jge
leave
jno
in
daa
sti
pop
lods
add
sbb
dec
lea
or
mov
cmp
sub
mov
add
dec
adc
cld
hlt
pusha
push
into
int3
fcmovnb
jae
add
sub
sbbb
cmp
or
cld
adc
adc
jnp
cld
push
shrb
sti
mov
cld
lcall
xchg
jle
sti
push
loopne
lods
jns
int
cmp
addb
test
mov
lods
pop
movsb
mov
pushf
int
mov
dec
mov
xchg
or
fcmovnb
mov
test
pop
jle
int
push
add
test
pusha
dec
fmull
sbb
repz
jmp
lds
aas
cmp
jb
xchg
js
lods
fwait
mov
push
xor
lret
jo
iret
dec
push
in
in
mov
bound
nop
mov
ret
push
xchg
loope
mov
test
test
pop
mov
mov
add
jmp
outsb
lahf
sarb
or
xchg
fdivl
pop
sub
enter
mov
jb
push
das
lahf
jecxz
pop
dec
sub
add
sbb
mov
sbb
out
cmp
xchg
cmpl
inc
scas
in
addr16
mov
ret
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
bound
js
jle
js
andl
ljmp
out
je
into
mov
mov
ret
stos
cmp
pop
movsb
cmp
scas
adc
int3
push
jno
cmp
shrb
cmp
xor
dec
mov
jmp
cmp
leave
dec
shlb
dec
ds
push
fstps
sub
cmpsl
or
je
daa
cmpsb
in
mov
aam
iret
mov
mov
jmp
dec
mov
lahf
icebp
call
mov
sub
cmp
mov
icebp
enter
dec
aas
pop
dec
shrb
repnz
jo
aad
pop
jecxz
pusha
mov
dec
mov
jle
movsl
xor
sub
or
adc
mov
xor
ja
inc
popa
or
es
push
repnz
iret
ljmp
mov
repz
adc
adc
pop
jbe
in
loopne
pop
inc
pusha
js
push
adc
int
sub
cwtl
jecxz
movsb
scas
int3
xchg
movsb
mov
xchg
mull
icebp
dec
jb
push
push
lea
jbe
es
pop
mov
aam
sbb
and
adc
sarb
lds
lret
cmc
mov
xchg
pop
push
jg
push
sbb
mov
mov
xorb
xor
mov
push
int3
ret
pop
arpl
add
fsts
pop
out
nop
es
or
cmpsb
cmpsl
inc
inc
mov
xor
testl
repnz
sub
je
or
int3
cld
mov
xor
or
push
push
ljmp
andl
imull
push
sahf
cmp
push
out
adc
mov
jb
or
insb
imul
mov
push
pop
aaa
cwtl
test
mov
clc
popa
mov
fcom
dec
dec
popa
push
push
cmp
icebp
in
ljmp
clc
mov
lahf
xorb
test
mov
movsb
aaa
loopne
mov
pop
repz
sbbl
xchg
and
add
jp
sbb
ret
data16
inc
mov
shr
cmc
push
pop
les
adc
popa
call
or
movsb
pop
sbb
lods
push
and
ss
rolb
outsl
inc
mov
stos
pushf
gs
or
arpl
lahf
mov
nopl
ss
mov
mov
mov
repz
arpl
pop
notl
xchg
xchg
sub
aaa
fsubrs
and
je
sub
ss
xchg
pusha
in
jmp
jbe
cmpl
push
jbe
test
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
dec
push
insb
insb
iret
js
fs
js
mov
sub
dec
dec
pusha
pushf
mov
sub
sub
pushf
stos
or
pop
add
mov
dec
xchg
mov
mov
jae
inc
lcall
xlat
push
cmp
ss
lods
jns
xchg
ja
sahf
sub
jecxz
aam
insb
xor
nop
jl
mov
xchg
sub
push
or
out
gs
in
pop
adc
hlt
aad
or
mov
test
or
cmp
les
pop
sub
jle
nop
in
sbb
rolb
push
sub
loope
fs
cmp
or
xor
adc
lea
mov
xchg
sbb
inc
mov
adc
lds
insb
fisttpll
lret
mov
test
add
push
iret
imul
call
xor
mov
call
icebp
or
xorb
mov
popf
add
lcall
jg
sbb
std
insl
pop
sbb
mov
test
ljmp
shl
sub
mov
ret
orl
sub
pop
pop
xor
sti
pop
pop
dec
mov
hlt
jl
pop
movsl
inc
adc
mov
pop
sti
jo
inc
stc
sbb
pop
inc
add
jmp
cmp
or
pop
mov
loop,pn
mov
popf
scas
ljmp
xchg
lret
clc
inc
popa
pop
inc
les
lds
loop
mov
and
and
push
add
movb
fs
jno
notl
ja
rcl
add
mov
shlb
popw
jns
les
in
mov
movsl
js
and
notl
adc
jns
push
and
mov
mov
cwtl
rorb
and
jb
xchg
mov
call
cmpsb
pop
mov
mov
and
les
imul
jnp
pop
mov
loope
push
mov
inc
loop
dec
jge
aaa
sarl
jecxz
popf
loop
rcr
and
cmc
rcrb
es
fnstenv
dec
jl
pop
out
pop
mov
push
add
and
xor
testb
fwait
pop
push
negl
pop
pop
rol
leave
ss
or
movsl
popa
and
in
dec
sbb
mov
inc
add
push
daa
ljmp
sbbb
imul
jmp
jb
and
sbb
dec
xor
mov
mov
loope
pop
daa
or
or
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
adc
pop
int3
js
fs
js
notb
xor
mov
push
push
mov
fidivl
dec
aas
mov
sbb
add
jge
cmp
mov
adc
shlb
push
and
cmp
sbb
enter
xchg
dec
inc
inc
push
sahf
pop
dec
outsb
mov
jbe
or
aad
mov
leave
lret
lods
inc
xchg
iret
jle
lods
mov
fwait
xchg
xchg
pop
push
mov
xchg
aad
cmpsl
and
roll
je
andb
sbbb
insl
mov
roll
adc
repnz
jne
push
sbb
xchg
int
sub
adc
ds
nop
and
mov
mov
iret
push
rcl
jne
std
subl
add
outsb
sbb
xchg
out
and
pop
inc
adc
adc
cltd
push
aaa
push
sub
cmp
inc
std
adc
repz
lcall
push
mull
ror
fidivl
xchg
mov
lea
mov
loop
mov
sub
icebp
pop
jge
jne
cmp
rol
insb
pop
mov
out
or
jge
inc
icebp
into
or
cmp
aas
jb
outsb
daa
jne
cli
shrl
lea
fbld
jge
push
testb
loop
ljmp
cmp
pop
xchg
mov
je
xchg
mov
jo
jo
ja
cmp
scas
int
pop
fs
jae
cwtl
outsl
pushf
shl
movsb
shlb
jmp
shll
std
push
and
in
push
test
outsl
inc
jbe
xchg
push
pop
out
inc
xchg
fs
int
in
enter
mov
aam
dec
cmp
lods
rcrl
mov
adc
sarb
mov
movsb
mov
in
adc
push
xchg
inc
fsubrs
mov
repz
fst
xchg
pop
lret
pop
dec
cmp
test
fld1
sub
sub
imul
mov
dec
sbb
in
adc
push
cmc
or
push
int3
pop
int3
pop
cld
es
pop
ret
add
sub
lahf
add
pop
xor
add
popa
sbb
stc
xchg
dec
jle
cmp
mov
pop
fs
nop
sbb
or
cltd
call
leave
add
gs
sbb
xor
inc
enter
or
outsl
mov
add
push
stc
jg
hlt
rcll
addr16
pop
daa
xchg
sub
add
cmp
stc
dec
insl
jge
add
push
cmpl
bt
shll
movsb
push
sbb
add
add
push
mov
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
sahf
mov
lock
sahf
mov
call
xchg
inc
mov
fistl
lret
imul
in
lret
cmp
xchg
jno
xchg
outsl
pop
sbb
divb
sbb
push
les
inc
xchg
enter
loopne
in
fimull
jae
push
sbb
lret
jmp
push
add
cs
mov
fwait
add
and
and
popf
sti
fsubrl
out
sbb
and
cli
xor
into
mov
bound
xorl
lock
mov
sub
inc
mov
push
fistpll
sbb
lret
inc
mov
leave
and
push
pop
mov
pop
lcall
or
jbe
sarl
and
shrb
roll
xchg
and
jp
push
movsb
mov
rolb
out
fisubs
mov
cmc
gs
push
mov
push
popf
ljmp
mov
sbb
mov
dec
adc
xchg
and
push
mov
orl
popf
mov
lret
xchg
and
and
ficompl
cmpsl
mov
sub
push
test
nop
lds
iret
jle
mov
in
or
and
mov
cwtl
imul
pop
or
shrl
mov
dec
cmp
mov
insl
or
adc
sub
jle
inc
subb
int
adc
test
push
mov
int3
jno
call
imul
sbb
xor
fisttpl
mov
stos
orl
lock
andl
sbb
xchg
adcb
int
lods
xchg
imul
fldenv
add
mov
and
add
inc
cmc
xor
inc
leave
fsubl
das
out
loope
push
enter
bound
xor
mov
inc
loop
test
inc
push
outsb
dec
xchg
lods
test
shlb
push
and
mov
cltd
inc
mov
mov
mov
or
or
add
scas
loope
push
push
push
dec
nop
shl
jle
in
adc
std
and
pusha
mov
inc
rcrl
aad
fiadds
sbb
out
popf
repnz
lret
add
sbb
pop
jmp
cmp
pop
jns
xchg
sbb
dec
out
shlb
jge
pushfw
jne
loopne
inc
xchg
leave
xor
loop
or
xlat
jnp
insl
jbe
aam
aas
pushf
bnd
mov
sub
jbe
inc
enter
fucomip
xchg
and
adc
inc
lock
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
fsubl
js
fs
js
add
cmp
xchg
ja
push
xorb
jno
dec
sub
pop
or
adc
sbb
jle
add
inc
jmp
test
loope
insb
push
insl
mov
loopne
xchg
mov
scas
xchg
test
pusha
popf
mov
pop
push
add
xor
ljmp
push
adc
fisubl
scas
loopne
test
cld
jb
mov
dec
mov
insl
and
ret
fld
xlat
mov
cmpl
aad
jb
mov
enter
jle
cmp
cld
xchg
mov
rclb
lret
scas
mov
sarl
add
test
jmp
call
lret
popfw
test
xchg
push
mov
push
mov
mov
ljmp
fcoms
and
lahf
cmp
mov
dec
xchg
push
aad
out
shl
incb
lock
into
add
jno
xor
loop
sbb
lds
jo
test
nop
or
lods
xchg
or
out
iret
pushf
jns
sahf
scas
lcall
inc
shrl
push
pop
fildl
mov
shrl
int3
fcomp
dec
pop
mov
jno
das
cmpsb
lea
insl
mov
mov
dec
xor
pop
orl
pop
shlb
popa
pushf
mov
jmp
jne
mov
xor
pusha
adc
mov
add
adc
xor
js
jg
mov
pop
shl
pop
push
out
ret
in
dec
jns
mov
push
cmp
cmp
rolb
push
and
cmp
repnz
cld
lret
jae
repz
sub
push
je
jecxz
jae
cmp
bound
push
jecxz
mov
loope
stos
push
sub
push
fnstenv
mov
int3
movsl
inc
dec
imul
lcall
dec
pop
adc
pushf
loope
int
pop
xor
notb
mov
lea
pop
subb
insl
push
cmpb
testb
ljmp
push
sub
call
jbe
mov
pop
daa
clc
cs
or
imul
push
aam
xlat
or
cltd
rol
into
push
add
loopne
add
xchg
pop
lret
push
jle
cltd
sub
push
in
adc
push
je
pop
pop
clc
arpl
push
mov
jle
into
xchg
xor
mov
fdivrs
adc
pop
and
inc
mov
xchg
addr16
int
hlt
imul
add
enter
jg
or
lahf
iret
mov
cmpsl
fsubrl
inc
xorl
rorb
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
push
fstpt
fs
js
sbb
sub
mov
push
mov
or
outsl
or
xor
daa
push
in
scas
mov
popf
data16
fdivl
xchg
stos
cltd
insb
pop
push
sub
decl
test
mov
xchg
pushf
ja
dec
xchg
daa
fdivrs
push
cmpsl
adc
ret
int3
push
inc
lds
enter
das
cmp
mov
stc
call
adc
mov
mov
cmpsl
or
add
cmp
cmp
aas
lret
fmul
add
out
dec
insl
xchg
js
repnz
sub
cmp
rcrl
sub
add
adc
mov
mov
adc
leave
jae
shrl
jmp
out
mov
ficoml
andb
sbb
jge
popf
aam
dec
imul
jmp
nop
dec
push
cmove
sub
test
mov
inc
mov
mov
in
pop
adc
sbb
dec
inc
xor
sbb
pusha
lahf
scas
adc
loopne
mov
jg
sbb
sbb
mov
add
sti
mov
push
cmc
into
xor
jmp
xchg
test
mov
addr16
jnp
mov
out
pop
and
mov
das
sti
lods
push
adc
shrb
cmpsl
rolb
imull
pop
xor
ficoms
das
cli
jmp
imul
xchg
dec
roll
cmp
int
mov
push
scas
inc
xor
cs
pop
ja
mov
mov
sub
mov
movsl
xchg
and
sbb
mull
sbb
stos
in
outsl
adc
insb
fdivrl
popa
pop
cmp
sbb
mov
scas
inc
fisubs
sbb
in
and
shll
and
cmpsl
inc
js
out
pusha
lret
mov
cmp
cmp
mov
jno
xor
jmp
cmp
das
or
add
inc
pop
pop
cmc
cltd
sets
rcll
cmpl
xor
scas
out
in
lds
xchg
add
xor
jb
adc
cli
leave
cld
iret
out
jae
lcall
sbb
adc
lahf
mov
cmc
jp
inc
jbe
and
js
in
out
pop
add
out
cmpsl
jle
mov
mov
stc
cmpsl
iret
jb
xlat
shlb
add
cltd
pop
cmp
dec
inc
inc
dec
mov
lods
movsb
jp
jno
cs
mov
ds
fidivrs
mov
enter
pop
fidivl
xor
sysexit
pmaddwd
sbb
test
mov
lcall
mov
mov
jmp
lret
ret
fld
add
fdivrs
fdivrs
fs
js
push
ljmp
push
pop
mov
xor
mov
jge
mov
in
mov
stos
mov
mov
cmp
dec
mov
adc
fisubl
sub
int
xchg
xchg
fs
sbb
mov
mov
int
test
sbb
mov
fs
adc
mov
xor
push
je,pt
stc
sub
pusha
aas
sahf
dec
ret
push
push
mov
push
dec
mov
xchg
cltd
cmpsl
gs
mov
xor
outsb
mov
leave
ds
mov
divb
sbb
inc
and
cwtl
aam
fmuls
inc
pop
inc
xor
hlt
popf
into
jb
sbb
add
cs
popa
movsb
jecxz
dec
and
mov
adc
inc
aad
repnz
in
fstpt
sub
sub
rorb
add
push
or
jecxz
pushf
xor
cs
loopne
bound
mov
pop
hlt
cmp
das
xlat
jae
xchg
mov
xchg
mov
push
cmp
sub
push
xchg
add
mov
outsb
push
push
xchg
fsubrs
xchg
mov
adc
in
je
inc
ficomps
fisttpll
jae
pop
popf
gs
push
sbb
pop
and
and
inc
pusha
incb
cli
mov
scas
stc
sub
and
into
inc
ss
cltd
rorl
cmp
xor
sbb
test
aad
pop
or
jnp
push
inc
loope
lods
mov
dec
cli
mov
cmpsl
dec
fimull
ds
and
inc
lahf
nop
pop
jnp
cwtl
clc
push
jmp
sub
xor
inc
into
movsb
rclb
test
mov
sub
inc
mov
pop
pop
int
daa
pop
leave
sbb
in
jbe
test
int
stos
out
pop
clc
sbb
sbb
and
sbb
cli
aad
or
nop
xor
mov
add
and
movsl
xchg
mov
mov
jg
mov
icebp
xor
in
sub
jne
in
xor
jecxz
loop
ds
imulb
rcl
enter
or
push
lcall
cli
inc
or
shll
adc
push
arpl
or
xchg
add
cmp
xor
iret
ret
pop
icebp
dec
stos
cmp
scas
mov
lret
push
cmp
mov
mov
ja
jne
das
jno
inc
sub
sahf
xchg
xorl
sahf
icebp
xchg
fcmovu
rorl
outsl
shll
dec
jnp
repz
mov
rorb
bound
call
sub
test
xor
xchg
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
int
fnstsw
fs
js
xchg
movsb
and
push
ljmp
xor
sub
inc
push
popa
or
jmp
push
mov
popf
dec
adc
cmp
mov
xlat
loopne
jl
pop
lret
stc
add
xchg
and
and
shl
cmpl
xorl
and
nop
lods
inc
mov
das
dec
int
push
push
jno
mov
cld
xor
push
cmp
inc
fs
xor
imul
add
roll
test
mov
loop
pop
pop
sub
mov
inc
mov
cmpsl
pusha
jle
scas
data16
or
jo
lret
pop
push
fptan
lahf
pop
jno
stos
pusha
push
lahf
jae
or
pop
popf
jg
pop
aas
dec
imul
cmpsl
cs
inc
call
jns
lods
je
mov
sub
sarb
insl
xor
xchg
loopne
lods
cs
sarb
or
je
pop
divb
xchg
mov
cld
mov
pop
xor
dec
mov
add
je
popa
mov
or
cmpsl
cmp
inc
leave
andb
aas
mov
aaa
mov
sbb
cmp
fwait
insb
mov
xchg
dec
sub
sub
xchg
and
mov
cmpsl
leave
bndstx
cmp
mov
jbe
cmp
sbb
daa
stos
cmp
or
and
neg
dec
fildl
out
pop
movsl
stc
mov
pop
cmp
jne,pt
mov
adc
and
stc
scas
or
sbb
ret
jo
sarb
mov
sub
int
scas
cmp
push
jl
mov
push
loop
fcompl
dec
inc
jp
pop
aas
mov
mov
es
xchg
add
or
idiv
pop
mov
imul
dec
and
mov
adc
push
test
push
movsl
hlt
cmpsb
xor
add
pop
adc
scas
cld
xor
jne
push
movsb
jb
imul
mov
push
adc
andb
scas
dec
adc
aaa
cmpsl
aaa
xchg
lods
push
push
call
mov
mov
stos
clc
mov
mov
js
daa
push
mov
pusha
idivl
mov
cmp
jp
sbb
repnz
mov
outsb
insl
pop
loope
cmp
inc
sub
repnz
pushf
int3
mov
jg
pop
jl
adc
loopne
inc
es
or
decb
push
jno
jp
pop
mov
imul
sub
cwtl
add
in
lods
push
pop
adc
xchg
adc
xlat
cmp
iret
repnz
mov
add
lret
test
loopne
into
dec
adc
lods
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
test
out
and
lock
les
pop
xchg
jbe
mov
adc
orl
incl
scas
push
add
rcrl
add
ja
cmpsb
testb
das
fldenv
test
gs
adc
xchg
cmp
inc
hlt
aad
ljmp
jg
subl
ss
cmp
ret
insl
rolb
adc
pushf
sbb
into
or
aad
pop
push
sub
int3
ds
int3
sbb
push
sub
mov
jne
jmp
lahf
repnz
pop
inc
and
mov
cli
insb
cvtps2pd
imul
push
idivb
xor
aam
push
cmpsl
push
das
jae
in
jne
cmpsb
mov
xchg
mov
bound
repz
sub
pop
pusha
roll
int3
or
lret
xchg
jmp
aas
mov
or
mov
mov
inc
cmc
dec
jns
out
mov
pop
cwtl
fnstcw
repz
pop
xchg
shlb
adc
push
lods
push
ret
in
push
xchg
push
aam
fistpll
jmp
push
hlt
scas
ss
add
add
fisubs
adc
bound
sbb
and
jns
stos
mov
jmp
jns
mov
test
cmpsl
jle
insb
jecxz
imul
sub
sbb
lret
pop
repnz
push
pushf
shl
stc
xchg
inc
adc
jl
add
jne
ret
outsb
pop
rcll
cltd
sbb
orl
stos
jbe
out
ss
imul
push
rol
aaa
cmp
gs
pop
and
mov
pop
jmp
xor
xchg
sbb
pushf
dec
fwait
dec
pop
lcall
mov
cmp
orl
sub
adc
jae
mov
pop
out
jne
lods
mov
pop
inc
inc
loopne
int
pop
fdivrl
jmp
jecxz
test
js
call
sbb
out
sbb
loop
les
sbbb
shrl
iret
jns
shrb
inc
inc
subb
lock
mov
or
jns
push
and
lock
stos
and
test
inc
cmp
into
dec
xchg
test
mov
mov
lods
xor
push
mull
push
xchg
loopne
cltd
inc
jnp
xchg
pusha
or
xorl
jle
mov
mov
js
fs
pop
add
imul
xchg
xchg
add
mov
hlt
push
xchg
dec
push
mov
rcl
jle
mov
cmp
xor
addb
nop
movsl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
push
cltd
cwtl
mov
fs
js
cwtl
cmp
imul
repz
into
xor
xchg
hlt
and
mov
aas
sbb
stc
nop
orb
xor
adc
inc
sbb
jle
cmp
push
mov
dec
iret
mov
sub
ds
mov
inc
xchg
adc
in
mov
push
sub
aam
pop
xchg
test
jnp
fs
jp
cmp
sub
loop
add
inc
jecxz
flds
adc
std
mov
and
ljmp
leave
mov
jne
sub
push
inc
fbld
adc
aam
mov
imul
dec
jae
jmp
pop
fidivs
aad
ljmp
hlt
dec
shl
mov
movb
jno
leave
call
xor
push
lds
jmp
popa
lahf
mov
mov
movsl
jo
dec
inc
cmp
jge
ficomps
or
invlpg
jo
and
lahf
loopne
popf
mov
adc
or
dec
sbb
add
sbb
push
mov
movsb
dec
rol
push
clc
push
lret
pushf
cmp
aas
add
xchg
adc
cmc
pop
cmp
push
out
mov
lret
cmpsl
dec
data16
inc
repnz
pop
loop
jp
stc
loope
cli
imull
pop
ficoml
sub
mov
int
das
lcall
dec
sbb
mov
adc
loope
ret
ss
mov
adc
aaa
repz
xchg
hlt
in
push
mov
xchg
lret
psrld
mov
adc
adcb
in
dec
pop
out
xor
mov
mov
add
sbb
imul
add
pop
and
dec
ds
inc
pop
adc
lcall
sub
lea
adcl
and
mov
fsub
bnd
enter
mov
scas
or
rcrl
push
push
jnp
leave
pop
sub
in
push
out
jg
inc
lcall
jg
loop
mov
icebp
ffree
adc
adcb
cmpsb
sub
cwtl
pop
xor
mov
fiadds
out
add
cmp
sbb
ds
and
std
lret
in
test
lods
adc
call
test
das
popf
loope
arpl
sub
and
gs
push
and
repnz
in
in
out
mov
mov
add
push
or
mov
jbe
pop
data16
inc
popa
mov
cmp
push
scas
mov
addr16
pop
fisttpl
in
loopne
xor
mov
scas
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
pop
insb
mov
cmpsl
jle
js
insl
jno
insl
je
mov
aad
xlat
movsl
jb
jno
mov
popf
jle
dec
lods
cltd
pop
sub
ja
dec
imul
pop
push
or
jbe
divps
rorb
sbb
jp
outsb
jl
dec
daa
mov
sahf
cmp
leave
jnp
jle
push
push
jl
fcomps
stos
push
arpl
dec
leave
sub
or
pop
cmp
je
jle
arpl
shlb
inc
sbb
jge
inc
nop
dec
jl
aaa
mov
add
mov
fidivl
popa
xchg
flds
aas
xchg
aad
cmp
jmp
or
imul
mov
jp
cmp
aad
pop
aam
add
fmuls
jno
inc
mov
cmp
repz
fwait
mov
xchg
fdivs
int
daa
cltd
push
aas
mov
mov
hlt
xor
sbb
test
xchg
ret
imul
cmpsl
and
movb
mov
xchg
or
mov
test
add
or
orl
mov
inc
mov
test
sub
pop
jecxz
stc
pop
and
dec
adc
push
and
mov
sub
pop
mov
jg
fcmovu
bndldx
out
and
in
call
insl
out
or
scas
xchg
lcall
mov
push
xchg
and
ror
insl
sub
pop
jae
lods
adc
mov
ja
ljmp
jecxz
mov
pop
cmpsl
ds
stos
outsb
jecxz
mov
or
push
andb
xor
adc
cli
fisubs
out
cmp
shlb
ds
add
rcll
insl
js
xlat
mov
push
mov
insb
jns
jb
xchg
add
loop
sub
jle
repnz
pushf
cld
sbb
stos
push
cltd
mov
mov
ret
xchg
loopne
adc
xchg
push
jmp
scas
imul
pop
lcall
add
leave
pop
xchg
sub
cld
mov
xchg
lods
andl
mov
pop
cmp
adc
xchg
loope
mov
out
pop
jnp
xor
add
pusha
jne
mov
sbb
sbb
das
jne
xchg
repnz
sub
insl
xchg
repz
lds
test
cmpsb
notb
push
adc
lods
inc
mov
adc
popa
shll
movsl
cmp
jbe
aad
stc
arpl
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
xlat
lret
ljmp
jno
xor
call
sbb
cmp
mov
cmp
popa
inc
mov
inc
adc
into
scas
push
mov
rcrl
aaa
insb
pop
dec
faddl
mov
in
aam
xor
xchg
movsb
icebp
out
fisubs
loope
mov
mov
mov
stos
ja,pt
sbb
inc
xor
in
in
outsb
xchg
jne
ja
jnp
insb
ja
scas
xchg
cmp
js
mov
dec
cmp
ret
int3
lds
out
arpl
pop
push
pop
mov
sarb
cltd
int
mov
arpl
arpl
nop
cwtl
sbb
inc
sub
shr
sub
jle
cwtl
pop
gs
mov
ja
imul
sbb
xor
jecxz
lcall
in
push
sub
dec
adc
leave
inc
pushf
scas
sub
iret
insb
pop
push
fnstsw
inc
cli
cmp
inc
and
cmpsb
leave
sbb
js
or
xor
cmc
das
mov
leave
shll
cmpsl
mov
mov
ljmp
push
outsb
sub
aaa
mov
push
sub
xchg
sahf
ret
mov
push
dec
sarl
lret
ret
xchg
int
push
sub
mulb
or
mov
pop
popa
out
jl
testl
mov
hlt
mov
adc
pop
xlat
mov
iret
cmp
cmp
shr
push
fs
movsl
push
test
cmp
cli
pop
or
adc
in
xor
push
test
cmpsb
sbb
push
cmp
and
adc
fstpt
dec
popa
and
mov
pop
pushf
loop
mov
sub
fimull
lret
call
sub
mov
jmp
cltd
adc
xor
sub
hlt
cli
inc
notb
scas
lahf
lds
pop
pop
mov
pop
inc
mov
push
jg,pt
xor
xchg
pop
sbb
cvttps2pi
cmc
sbb
mov
jbe
ja
jne
push
ljmp
or
bts
xor
mov
add
pop
mov
xor
or
mov
cmp
push
faddp
jno
fsubrl
mov
sbb
push
pcmpgtd
scas
mov
enter
cmpsl
mov
cmp
push
sub
pop
ret
mov
popf
add
pop
push
pop
hlt
outsl
jp
cld
testb
into
sub
pop
jno
cmp
movl
jne
jmp
lret
cmp
mov
mov
js
cmpsl
jle
js
es
mov
fisttps
dec
repz
adc
into
sbb
insl
pusha
mov
lds
push
inc
pop
xor
fimull
ret
test
jb
xchg
push
jno
mov
popl
hlt
call
lret
outsb
and
ficompl
je
ss
iret
xor
sub
sub
adc
mov
ret
aam
cmp
es
pushl
mov
pop
je
clc
and
or
into
xchg
xor
addb
mov
rcr
mov
cltd
sbb
push
jbe
into
ret
sub
xchg
out
lock
stos
mov
cmp
add
dec
pop
cmp
jae
mov
mov
call
sub
rorl
xor
mov
and
mov
cmpsb
xor
push
pop
aam
psllw
pop
push
enter
lret
sub
fsub
ret
imul
jne
sbb
mov
push
adc
cmp
cmp
mov
cs
stos
xchg
add
jge
lods
sbb
jbe
and
hlt
ds
ret
xchg
mov
jnp
xor
dec
jb
hlt
fiaddl
xchg
sub
lods
lods
xchg
repz
add
leave
sub
pop
and
imul
xchg
mov
or
or
in
out
xchg
ror
mov
fcmove
sti
out
sub
popa
pop
push
pop
push
aas
lret
into
and
ds
adc
jbe
movsb
sahf
fmull
mov
pop
or
ret
xor
gs
cs
add
and
and
int3
stc
lods
jno
leave
adc
iret
pop
or
jae
stos
jno
sbb
inc
pop
test
imul
xchg
mov
mov
pop
cmp
adc
mov
imul
popf
addl
jbe
ret
sub
dec
test
mul
jae
xchg
cmpsb
mov
inc
mov
bswap
jns
lret
cltd
sbb
roll
rclb
es
add
test
inc
leave
ja
lock
ficompl
jge
rorl
or
int
adc
mov
into
rclb
stc
add
push
pop
push
add
inc
inc
push
sbbb
sbb
sahf
jge
sbb
mov
lds
cmp
xchg
pop
push
push
daa
lock
enter
out
mov
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
cmpsl
pop
xor
jle
js
sub
sub
add
push
jne
cmp
xor
xor
mov
enter
cmp
aad
xor
adcl
scas
lds
stos
js
and
mov
jb
movsb
ret
inc
or
scas
lds
add
aad
lcall
bound
inc
leave
jo
bound
cmpsb
sub
adc
insl
dec
je
aaa
sbb
xchg
or
rclb
insl
ret
jne
jno
xchg
dec
shrl
imul
sub
push
outsl
mov
jbe
xlat
mov
leave
aad
pop
aas
and
sti
jns
mov
repnz
call
scas
adc
imul
lock
test
xchg
mov
xchg
jp
push
es
scas
pop
xor
cmpsb
sbb
xchg
ja
inc
xor
mov
mov
xchg
pop
or
xchg
popf
push
pop
sbb
sbb
lahf
mov
cmp
mov
lea
push
or
arpl
mov
adc
and
outsl
inc
addr16
push
movsl
cmp
subb
test
jno
rcrl
insl
xor
adc
negl
loope
jecxz
repz
jbe
aaa
pusha
addr16
mov
add
or
cmc
cs
enter
lahf
sub
mov
sub
ficompl
lret
or
adc
xor
add
das
roll
sub
and
cmp
mov
mov
push
mov
int3
push
jmp
sbb
enter
jne
adc
stc
dec
loope
les
push
leave
push
je
jbe
lods
test
and
stos
mov
mov
scas
xor
lret
dec
cwtl
into
dec
push
jg
push
mov
ds
push
jne
fldenv
mov
dec
aad
out
lds
cmp
add
pop
sub
lea
sub
add
mov
inc
insb
mov
shrl
jl
jecxz
icebp
lods
sub
mov
insl
dec
jb
jbe
push
sbb
std
enter
mov
lods
imul
push
ja
in
mov
in
or
mov
push
cli
sbb
add
jne
lret
and
rcrl
leave
ja
cmp
icebp
sub
decb
sbb
inc
je
cmp
add
jno
inc
cli
jg,pt
mov
xchg
add
insl
scas
imul
jns
push
mov
test
cld
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
out
ja
pop
bnd
push
jle
js
sbb
sbb
jnp
ja
or
jp
push
aam
mov
xchg
pop
xor
mov
pop
mov
daa
pushf
cwtl
ret
mov
cmp
adc
ret
xlat
jmp
sbb
adc
in
aad
aaa
cmp
rorl
lret
inc
fisubs
pop
mov
mov
push
lcall
out
or
mov
jae
shll
jp
mov
add
sbb
and
arpl
jge
jecxz
sbb
adc
jb
leave
cmp
into
jb
xor
mov
sbb
insl
push
pop
ret
cmc
rcrb
dec
fists
jae
std
jbe
inc
inc
push
mov
dec
xchg
pop
dec
rclb
pop
dec
stos
andb
add
dec
jno
fildll
gs
dec
lret
imul
adc
jl
jbe
sub
xchg
movsb
andl
testl
mov
fistl
sbb
mov
lods
inc
rorb
xor
jecxz
popf
lahf
ficoml
mov
mov
in
xor
pop
outsl
jno
test
scas
rsm
and
and
inc
mov
pusha
pop
mov
subb
test
movsb
adc
out
stos
cmp
sbb
add
adc
pop
xchg
inc
gs
ss
pusha
xchg
loop
and
jns
mov
cmp
xor
lret
outsb
dec
scas
out
scas
xchg
xlat
adc
loop
xchg
push
mov
xor
jp
cmpsb
addl
adc
pop
adc
nop
push
jns
stc
sbb
js
in
cmp
and
mov
cmpsb
sbb
sub
and
loopne
rcrb
and
pop
push
loopne
imul
cmp
mov
addl
outsl
pop
pop
fsts
push
out
xchg
out
mov
sti
sti
pop
or
jle
mov
pop
sahf
xor
xor
dec
sub
fucomi
outsl
ret
lahf
add
push
int
push
int3
and
inc
roll
stos
mov
cmp
cmp
sbb
mov
fdivr
cmp
xchg
add
iret
repz
jae
jecxz
mov
stos
mov
add
push
int
inc
push
lret
push
fisubs
cmpb
int3
lods
es
jne
and
push
test
jge
or
or
jae
xchg
cmp
loope
ret
scas
loop
rorl
push
mov
mov
cs
stos
inc
daa
mov
loop
and
flds
and
xchg
jae
push
push
sub
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
push
shll
js
rcr
mov
mov
push
add
js
xor
jecxz
xor
stos
cltd
sbb
movsb
add
sahf
push
loope
mov
enter
ret
imul
test
fcomip
lds
sbb
inc
stc
or
shll
test
add
rcrl
aam
mov
mov
cld
or
or
int
pushf
imul
jae
insl
push
rcl
xor
jb
sbb
sbb
and
fnstsw
push
test
outsb
rorl
mov
mov
insl
aas
jno
shlb
jp
or
in
stc
jb
lock
mov
daa
aad
sbb
jne,pt
add
aas
sbb
add
pop
ss
ljmp
dec
mov
aad
pushl
and
inc
sahf
mov
repnz
lcall
repnz
pop
mov
repnz
dec
shrb
bound
popa
and
imul
popf
dec
ucomiss
ja
dec
add
cmp
cmpsb
xchg
jp
mov
pop
push
shll
mov
out
jg
in
test
stos
movsb
adc
and
inc
loop
dec
out
sbb
sarb
lcall
gs
int
jecxz
gs
test
jae
scas
in
fstpl
jge
cli
jo
add
lahf
dec
push
mov
add
imul
arpl
adc
int
xchg
fwait
iret
cmc
mov
outsl
xor
cltd
ret
ficoms
sub
aad
or
cltd
and
ffree
imul
fildll
adc
adc
mov
testl
shlb
xchg
push
jl
push
jle
repnz
pop
jo
mov
push
int3
or
adc
xchg
xor
dec
add
pop
inc
xchg
out
lds
mov
adcl
cmpsb
jg
or
xor
pop
mov
and
xchg
sbb
fisttps
out
xchg
add
int3
jo
lods
cwtl
cli
sahf
lcall
add
movsl
shlb
sub
lret
adc
lahf
cltd
or
mov
lcall
cmp
cmc
push
test
adc
mov
adc
stc
out
or
in
neg
mov
and
pop
lret
pop
aaa
xor
cmpsl
int3
xchg
icebp
cwtl
lret
gs
call
adc
mov
fstpt
call
daa
jne
test
loope
or
dec
pop
mov
daa
insb
push
inc
clc
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
pop
mov
pushl
and
mov
adcl
mov
call
aas
adc
mov
mov
lock
cmpsl
or
adc
popf
out
insb
cmp
negl
stos
inc
jmp
mov
mov
ret
push
adc
loope,pt
add
xorb
aam
mov
pop
sub
cmp
enter
xchg
push
jbe
ror
add
fisubl
adc
mov
mov
sub
cmpsl
roll
push
add
popa
into
stos
sbb
mov
lods
push
mov
cli
xlat
roll
inc
cmpsb
xor
or
push
push
and
in
scas
mov
lods
add
cwtl
push
xor
in
hlt
push
push
pop
inc
or
les
push
sbb
inc
or
std
sbb
or
imul
xor
mov
stc
mov
jae
xor
mov
mov
jbe
stc
mov
adc
test
les
xor
mov
pop
push
jmp
and
xor
sub
imul
jg
nop
jae
cltd
sub
int
xor
sub
adc
add
inc
and
pop
adc
dec
in
insb
out
cmc
imul
dec
sbb
clc
stos
lods
popf
xor
js
mov
jns
pop
lret
lahf
rcl
and
mov
push
mov
jecxz
add
push
aaa
dec
dec
mov
push
inc
ljmp
xchg
sbb
stc
push
bound
in
stc
mov
add
jo
push
imul
dec
mov
stos
shll
repnz
or
inc
jg
leave
fistpll
pop
dec
dec
dec
out
xor
call
arpl
ss
and
xor
push
mov
inc
xchg
xor
pop
lret
inc
jl
aam
xchg
dec
lcall
mov
scas
movsl
inc
cwtl
dec
mov
pop
inc
out
test
add
mov
outsl
out
inc
lcall
das
and
addr16
nop
add
repnz
xor
xchg
js
lock
sbb
push
imul
jle
push
jnp
rcl
pop
add
insb
fmull
dec
stos
cltd
clc
lods
push
mov
xor
or
sbb
dec
int3
hlt
adc
xchg
add
dec
add
push
incl
sub
fcomps
jns
xor
lods
cmc
lods
rcll
and
in
or
dec
cmpsl
in
test
std
pop
sbb
fs
or
add
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
insl
stos
loop
js
je
js
data16
jno
arpl
mov
push
push
in
scas
dec
xor
cwtl
mov
xor
inc
loop,pt
loope
mov
scas
mov
dec
enter
fiadds
xchg
pop
lods
mov
xor
fisubs
or
push
int3
loope
pop
outsl
mov
mov
dec
sub
loop
push
adc
dec
aaa
ljmp
imul
movsl
ja
sbb
inc
jle
jge
xchg
mov
adc
out
inc
pop
ret
stos
mov
jl
imul
shlb
aas
dec
inc
pop
loop
ljmp
inc
xchg
add
fstpt
rcrl
je
inc
pop
mov
bswap
std
xchg
test
insb
cmp
int
sbb
repz
jp
fbstp
mov
and
popa
and
adc
push
xchg
jbe
mov
jge
jge
ret
pop
push
and
inc
inc
sbb
push
roll
in
mov
adc
or
movsl
pop
sbb
cmp
andl
mov
in
jp
cmp
mov
add
insl
shlb
and
cli
push
repz
fsubl
push
imul
xchg
or
xchg
repnz
inc
shll
or
in
pop
dec
adc
shrl
mov
xorb
loop
into
pop
xor
add
jne
hlt
push
loop
outsl
das
jne
in
xor
dec
lods
imul
out
aaa
outsb
and
in
jnp
sbb
clc
inc
xchg
dec
xor
cmp
mov
js
cmp
loopne
mov
scas
fcmovnbe
push
aaa
shlb
pop
and
mov
je
scas
dec
mov
ja
dec
es
shll
add
popf
push
xchg
fstl
sbb
push
add
cmpsb
test
and
xchg
sbb
dec
or
jb
enter
sub
imul
test
mov
push
movsb
sub
call
inc
adc
adc
mov
jbe
nop
and
mul
adc
jb
ja
inc
mov
jae
arpl
fistps
mov
flds
add
add
in
adc
inc
lock
rcrb
pmaxsw
lret
lock
imul
clc
sarb
in
mov
sub
stos
adc
sub
adc
repz
fimull
cmp
jb
pop
ja
scas
mov
jmp
adc
pushl
sahf
pop
loop
jno
inc
in
inc
xor
movsb
sub
faddp
xor
dec
jns
add
sbb
add
nop
ret
pusha
xor
lcall
faddl
add
cmpsl
inc
add
mov
add
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
xor
fdivrp
js
je
js
or
mov
in
sub
out
daa
mov
or
adc
lret
inc
jg
pop
xchg
pop
xchg
mov
xchg
ret
sahf
ljmp
incb
xchg
dec
movsb
loope
push
fsub
jmp
in
sbb
inc
xor
out
push
jae
je
sub
inc
sub
dec
ret
cmp
adc
pop
jg
mov
loop
lods
push
inc
and
pop
lods
mov
popf
push
adc
negb
jmp
pop
mov
sbb
std
sbb
jl
push
stos
lds
jno
cwtl
mov
cmp
jg
xchg
push
bound
dec
mov
test
adc
push
or
jne
adc
xchg
sbb
and
ret
lods
scas
cmc
loopne
xchg
daa
jle
out
das
mov
ja
fnstenv
add
jmp
mov
push
pop
xchg
pop
jl
add
shl
aad
inc
cmpsl
push
push
nop
repnz
sbb
xchg
mov
ljmp
cwtl
push
cmp
ret
mov
pop
idivl
mov
or
xchg
lret
inc
stos
mov
aas
or
js
mov
jo
push
dec
dec
std
xchg
fnstenv
xor
testl
and
mov
ss
mov
shll
daa
mov
test
fstps
scas
jg
ret
leave
sbb
hlt
xchg
sub
pop
jmp
and
shll
pusha
cltd
and
sub
les
addr16
xor
xchg
lret
inc
out
arpl
mov
push
ret
aaa
mov
jge
lods
adc
inc
xor
cmc
xor
test
jns
cmp
mov
add
xor
fnstenv
cld
mov
jl
out
mov
inc
mov
pop
jg
mov
xor
pop
mov
adc
or
iret
inc
jle
popa
sbbb
inc
cmp
pop
mov
add
int
mov
test
cmc
shll
push
out
dec
jo
add
in
aad
mov
jecxz
push
cltd
inc
fucom
daa
cmpsb
push
stc
popf
dec
cmp
adc
movl
hlt
movsl
and
or
or
fcoml
mov
int3
sub
dec
addr16
mov
and
cmpsl
sti
xor
sbb
add
pop
mov
or
std
fisubs
mov
sub
test
push
push
pop
add
xor
sbb
loope
xchg
outsb
adc
xor
cmc
imul
cmp
cmp
pop
nop
push
lret
subps
mov
popf
ret
sub
loope
push
rol
cmp
adc
shll
loope
push
sub
fwait
ret
jno
daa
inc
or
mov
in
pushf
dec
mov
ja
orb
pop
clc
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
mov
je
js
mov
mov
add
sub
and
jo
in
fwait
ja
fwait
iret
mov
xchg
popf
insl
movsl
imul
dec
pushl
fldl
je
cmp
mov
mov
or
mov
mov
sbbl
xlat
fdivp
xchg
sti
ljmp
outsb
jge
data16
sub
jecxz
scas
aam
jge
push
inc
mov
lcall
jns
mov
dec
dec
mov
add
leave
sub
xchg
add
sbb
imul
sbb
mov
ret
ret
pop
mov
jmp
push
cli
cmp
test
add
adc
mov
aad
and
cmp
orb
dec
or
adc
mov
call
xor
xchg
cwtl
jno
lods
mov
loop
out
push
or
push
xlat
and
xchg
sub
sahf
leave
imul
mov
and
dec
int
sub
jnp
push
fs
pushf
dec
lock
mov
add
mov
pushf
jb
lea
popf
xchg
adc
sbb
push
jnp
fwait
or
cmpsl
lcall
xchg
loop
or
bound
adc
movsb
xchg
mov
cmp
lods
mov
inc
cmp
mov
mov
xchg
inc
inc
mov
stc
dec
cltd
nop
rclb
test
and
cmpsb
pop
xor
movsl
ljmp
imul
out
fs
out
scas
add
xchg
pop
cs
cli
add
xor
fbstp
dec
idivb
bound
xchg
inc
out
and
movsb
in
push
iret
push
daa
pop
jne
pop
xchg
imul
leave
aad
mov
or
xchg
push
mov
in
movl
sbb
pop
push
pop
sti
and
push
insl
push
jmp
inc
fwait
sbbb
xchg
aaa
dec
loope
mov
jbe
out
mov
sbbb
xor
sub
pusha
iret
imul
adc
mov
xorl
sbbb
or
dec
movsb
push
mov
adc
add
push
stos
subb
cs
fiaddl
jl
popf
xchg
fisubrl
pop
mov
jp
mov
xor
pop
adc
mov
scas
or
xchg
xchg
aaa
arpl
das
fcomp
ja
pop
rcrl
aad
daa
xchg
iret
icebp
mov
mov
pop
cmp
out
xchg
ja
jbe
or
inc
ror
push
mov
ret
jnp
xor
mov
cld
scas
inc
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
psubd
mov
js
jle
js
test
jmp
cld
xchg
clc
fldlg2
pop
cwtl
lret
arpl
push
xchg
sbbl
add
cmp
or
out
testb
mov
jge
fwait
inc
jg
je
add
test
std
jns
into
bound
stos
out
sahf
les
mov
pop
inc
mov
ja
aas
hlt
cs
mov
add
mov
in
shl
adc
ret
cld
push
stos
outsl
mov
xor
inc
inc
in
in
pop
xchg
clc
loopw
mov
jbe
add
xor
stc
roll
repnz
test
jmp
loope
jae
pop
sbb
mov
ljmp
sarl
mov
lods
sbb
cld
xlat
aaa
push
daa
ret
ss
mov
icebp
adc
aam
sub
ss
in
add
movsl
aam
cmpsb
into
mov
sti
stc
dec
fldl
jge
aad
data16
jb
movsb
xor
jg
ret
jb
sub
mov
mov
and
jne
push
push
pop
and
andl
ss
stos
push
sbb
mov
jmp
inc
aas
stos
cmc
add
cmp
arpl
inc
sub
dec
jo
jb
pop
mov
shll
sub
xchg
fldl
xchg
nop
inc
push
xor
es
xchg
shrl
add
cmp
inc
mov
loope
or
les
cmp
dec
dec
js
es
inc
gs
inc
lret
cmp
pop
inc
xchg
mov
je
xchg
xor
push
jmp
xor
loope
shr
jns
movsl
adc
test
cmc
rcrb
cmp
jmp
and
jle
mov
mov
iret
cs
dec
jbe
ljmp
jmp
repnz
xor
and
dec
out
jns
cmpsl
repnz
mov
lret
ret
xchg
cmpsl
inc
sti
js
lret
add
jl
xlat
mov
cmp
adc
bswap
inc
dec
sub
jo
ds
test
xor
iret
insb
pop
xchg
rolb
scas
pop
ror
jb
mov
and
cli
pop
adc
or
fsubl
div
adcb
outsl
jg
pop
ds
fimuls
lcall
cmc
sbb
imul
or
out
xor
fidivrs
mov
push
jnp
cltd
incb
push
jge
js
lock
dec
test
cwtl
fstpt
repz
cmpxchg
ds
int
jns
adc
dec
push
aad
movsb
and
jmp
loope
fimuls
fwait
push
js
lret
mov
cld
lret
fdivs
sbb
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
shlb
rolb
js
mov
std
out
push
mov
imul
fmul
lret
dec
cmpsb
pop
and
out
cmpsl
jnp
lea
push
push
xchg
jecxz
in
dec
cs
mov
sub
jg
adc
sahf
ret
fsubl
test
or
pushf
jns
clc
je
push
mov
push
sub
mov
loopne
dec
in
das
push
adc
sbb
movsl
out
inc
fimull
shlb
hlt
cmp
sub
pop
mov
leave
sbb
jno
lret
dec
sbb
sbb
daa
inc
pop
jl
out
dec
call
and
mov
jbe
faddl
push
out
jmp
sub
into
rorl
in
adc
mov
xor
clc
loopne
aas
add
popf
mov
jo
icebp
fwait
mov
aad
dec
or
push
outsb
imul
pop
ror
inc
sahf
sbbl
pop
jo
inc
or
sarl
xor
ja
mov
add
flds
icebp
adc
stos
int
mov
fsub
repnz
adc
sub
mov
push
sub
cltd
daa
and
xor
push
imul
cmpsl
push
or
and
jge
mov
push
icebp
mov
mov
scas
cmpsb
xorb
imul
pop
lret
int
mov
mov
xchg
xchg
in
pop
decl
js
mov
xchg
lea
xorl
fildll
push
cmpsl
jecxz
testb
pop
inc
adcb
andl
aas
bound
int
in
dec
fwait
inc
cmpsl
sub
mov
push
jecxz
mov
icebp
ja
and
fs
lods
adc
orl
push
cmp
and
lock
data16
shll
jge
bnd
lock
sub
out
outsl
push
fidivl
jbe
iret
jl
jle
mov
xchg
xorl
mov
pcmpeqd
or
pop
dec
movsb
call
mov
xor
sbb
pop
cwtl
or
movsl
fcompl
xor
jo
sbb
mov
mov
daa
cmp
mov
jne
push
ficoms
repnz
add
or
ffree
mov
mov
or
fiaddl
pop
cmp
repz
inc
cmpsl
lds
popf
stc
add
adc
adc
push
scas
mov
or
pop
cmp
push
in
int3
cmp
imul
outsl
imulb
fbstp
fadds
in
sar
xchg
inc
adc
xor
mov
stos
lea
xchg
mov
arpl
outsb
stos
jbe
jne
pop
jne
sub
or
xchg
in
pop
es
loop
or
or
jbe
xchg
sub
add
add
rol
fcmove
rcl
pop
mov
out
into
mov
je
js
mov
lahf
xchg
and
outsb
mov
xchg
sub
sbb
in
fildl
jb
mov
lock
mov
sbb
loopne
imulb
mov
and
push
and
pop
adc
nop
cmpsb
mov
jns
faddl
jae
hlt
adc
adc
mov
es
push
pushf
or
sub
jp
hlt
xchg
add
jecxz
xor
mov
push
ja
int3
scas
clc
das
fldcw
aad
pop
pop
push
pop
jnp
rcrb
pop
jge
ds
std
cmp
int
sbb
sarl
dec
movsl
pop
mov
inc
and
es
mov
xor
xchg
cli
call
sub
jle
ret
cli
hlt
in
je
pushf
fisttps
mov
cli
push
es
ret
jns
lahf
leave
insb
test
add
in
das
or
cmp
or
add
mov
in
aam
test
or
int3
or
and
lret
xor
dec
mov
in
lret
outsl
repnz
out
in
sbb
or
jecxz
push
push
lret
xchg
sbb
clc
iret
lcall
xchg
xorl
mov
jns
mov
out
lgdtl
enter
mov
sub
xor
push
sbb
xor
out
loope
cmp
icebp
fistpl
fisubrl
cs
divl
aas
pushf
sub
out
xchg
loope
xchg
and
out
jle
ja
mov
xchg
out
xor
xorb
inc
cs
ljmp
cmc
cmpsb
out
shrb
push
xchg
mov
test
mov
and
mov
cmp
mov
pop
repnz
aas
sbb
lahf
sbb
dec
push
xchg
inc
push
push
push
push
repz
dec
clc
inc
push
sub
test
incb
test
loope
fsubrl
adc
outsb
arpl
mov
or
xlat
ja
dec
and
xor
std
xchg
sbb
push
ss
dec
aaa
cmp
filds
xchg
pop
lahf
in
fisubrs
sub
popf
mulb
addr16
in
ret
lret
out
push
aad
out
in
inc
int3
fwait
adc
cmp
call
push
shr
js
inc
lahf
fs
cmpsb
sub
shrl
xchg
test
leave
nop
cmp
jns
pop
lods
dec
aad
repz
cmp
push
jns
xchg
dec
or
lcall
cltd
sar
lea
adc
push
cld
xchg
jbe
xchg
add
ljmp
rolb
xchg
push
mov
lods
imul
out
cmp
dec
dec
movsl
sti
push
and
popa
mov
clc
xchg
xor
jl
daa
fwait
inc
loopne
xlat
pop
jge
push
or
test
add
add
popf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
insb
das
lret
js
jle
js
pop
or
fcomps
xor
insl
push
ljmp
push
sub
mov
xchg
adc
jb
xchg
push
jge
mov
mov
pop
inc
jae
push
jb
cmp
ljmp
jle
ret
cs
subl
jno
sbb
sub
or
mov
and
mov
scas
shrb
xchg
inc
sub
aam
dec
push
jbe
push
jo
int
and
outsl
shll
and
sahf
hlt
and
mov
in
jge
dec
jp
jp
fdivrl
bnd
fstp
xchg
xor
pop
mov
mov
dec
adc
outsb
aad
push
xor
or
jle
pop
xchg
xchg
dec
jmp
ss
mov
inc
stos
jo
mov
lcall
ret
jecxz
out
movsl
loop
pushf
add
mov
ja
mov
bound
call
mov
bound
mov
fimull
jle
cs
xlat
ss
test
clc
ss
stos
sbb
sub
xor
fsubr
jb
fldl
repnz
adc
test
mov
mov
popa
lret
add
scas
inc
cltd
sbb
les
dec
aam
jge
jno
lock
cmp
adc
divb
xchg
pop
out
cmp
sub
lret
push
and
mov
std
push
xchg
mov
repz
dec
dec
enter
sbb
lret
cs
dec
adc
mov
pop
dec
arpl
jl
clc
xchg
or
pop
sbb
mov
ret
fists
sbbl
cmp
ljmp
push
xor
popf
enter
into
xor
fildll
sbb
inc
mov
jnp
divb
pop
dec
sub
loope
push
std
pop
int3
sbb
icebp
xor
cmp
test
in
loop
jg
mov
dec
mov
xorb
inc
push
data16
adc
sub
jb
fstl
notl
and
dec
cmp
push
lea
shll
jge
pop
dec
pop
mov
push
or
icebp
xor
popf
jecxz
fisttpl
jbe
dec
test
sbb
dec
clc
pop
decb
aaa
xor
or
repnz
outsb
mov
rol
or
mov
ljmp
pop
jge
inc
loope,pt
jp
inc
loop
mov
xchg
push
repz
mov
add
xchg
pop
aaa
and
scas
pop
mov
decl
or
jnp
xor
mov
mov
mov
dec
push
cmc
inc
addr16
mov
cmp
dec
xchg
arpl
lock
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
rcrl
sahf
mov
je
js
movsb
fcoml
jne
jbe
mov
icebp
lea
xchg
lea
rol
jmp
repnz
cli
xor
scas
test
cvtps2pi
aas
pop
xchg
pop
jnp
bound
pop
cmp
adc
add
daa
out
in
loop
add
lock
sbb
push
imul
inc
xchg
lcall
sbbl
and
popf
mov
roll
scas
mov
ret
insl
xor
push
mov
sub
loope
mov
jns
scas
mov
stc
xchg
and
mov
loopne
mov
pop
mov
xchg
in
cmp
outsl
bound
int
nop
mull
push
mov
out
cmp
mov
mov
out
or
out
xchg
or
adc
mov
int
stos
stos
test
push
sub
and
add
push
pop
xchg
add
xchg
pop
pusha
imul
or
in
xlat
mov
sub
loope
outsb
mov
mov
std
stos
lods
cmp
push
lods
dec
aam
jecxz
jae
test
inc
dec
sub
cmp
sbb
je
out
mov
inc
xor
xchg
jl
lods
mov
cwtl
mov
push
sbb
int3
fildll
xor
or
cmovae
fmuls
xorl
fldcw
fcomps
hlt
mov
outsl
cmp
dec
cli
inc
lods
rorb
push
inc
xchg
sbb
cmpsl
push
mov
sahf
repnz
sub
mov
jg
xchg
into
stos
adc
mov
xor
decl
xor
outsl
shl
jecxz
mov
stos
in
ljmp
ss
leave
out
orl
xor
ljmp
test
pop
pop
or
push
gs
jmp
rcll
adc
je
insl
and
jno
jns
mov
cwtl
jle
xchg
mov
xor
loop
mov
jne
subl
mov
cld
or
mov
lea
mov
or
xchg
stc
iret
xor
push
pop
xchg
outsb
inc
mov
and
aaa
jb
cmp
mov
stos
mov
out
jg
mov
stos
fildll
incb
fdivs
lahf
lods
xchg
xor
push
sbb
inc
push
bound
cli
sti
test
movsl
into
dec
mov
in
mov
sbb
dec
ficoml
in
lea
imul
pop
loope
sub
ljmp
stos
popf
lods
aaa
push
in
cli
arpl
mov
xor
hlt
xchg
es
das
stos
adc
gs
lret
roll
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
xor
ret
js
jle
js
mov
enter
cmp
popf
icebp
out
mov
mov
push
dec
pushf
out
or
pop
xor
jns
mov
pusha
ja
add
inc
cli
inc
sub
bound
icebp
sub
lret
aad
aas
rcll
ja
fcmovbe
add
ja
shll
jmp
xor
sbb
mov
ds
out
pop
jmp
mov
push
mov
dec
aam
jge
rcll
insl
push
je
mov
fists
inc
mov
dec
rcll
mov
dec
popf
inc
fisubrl
xchg
mov
xchg
out
xchg
mov
push
sub
lret
pop
add
inc
rorl
xchg
push
pop
ljmp
adc
sbb
dec
les
pusha
sbb
inc
dec
push
push
cmp
lahf
jo
push
incb
mov
mov
ss
jns
lods
int3
sti
or
cmp
das
notl
cmp
frstpm(287
pop
dec
lds
jb
mov
les
mov
or
test
sti
lods
mov
xchg
sti
inc
bound
ret
fstpl
mov
inc
call
mov
out
sbb
ficoml
inc
adc
add
dec
dec
and
ret
loopne
pop
jns
cmp
test
testl
jns
movsl
cmpsb
add
xor
mov
cwtl
aad
pushf
xor
loop
jb
jo
dec
div
in
jg
mov
loopne
int
or
xchg
int
dec
mov
sbb
pop
dec
inc
or
push
fwait
mov
inc
adc
paddb
outsl
and
cli
int3
dec
repz
out
shll
ljmp
dec
in
sbbb
add
pop
imul
ss
pop
js
sbbb
dec
rolb
lods
pop
stos
cltd
push
pop
dec
jle
lea
dec
mov
xlat
adc
cmp
adc
in
shl
jne
or
push
arpl
mov
jle
mov
push
cmc
add
and
out
scas
sar
push
loopne
out
mov
aaa
mov
mov
push
jae
pushf
aad
shlb
mov
data16
dec
hlt
pop
fnstcw
repz
out
add
xor
pop
inc
mov
xor
test
cmp
das
inc
je
nop
or
push
int
sbb
sub
in
sbb
nop
mov
ss
aaa
dec
pop
inc
push
push
push
cld
sahf
add
ds
mov
push
push
pop
repnz
in
sbb
xchg
pop
mov
fprem1
mov
js
cltd
sub
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
mov
xchg
js
je
js
je
int
dec
js
cltd
lret
enter
lcall
push
or
inc
icebp
stos
fs
lret
pop
lahf
inc
add
mov
cltd
ja
mov
imul
dec
ljmp
and
xor
stc
adc
inc
repnz
pop
xchg
inc
xorl
push
je
rcrl
andl
push
lods
loop
cltd
cmp
mov
mov
push
andl
jmp
xchg
adc
js
jnp
stos
jo
lcall
pushf
inc
cmp
adc
push
cld
mov
xor
or
imul
mov
mov
mov
adcb
adc
daa
dec
mov
sahf
mov
pop
loopne
and
pop
xchg
jmp
fisubrs
sahf
push
cmc
sub
std
in
or
and
xor
mov
cltd
fs
xor
sti
test
ret
loopne
mov
add
mov
outsl
icebp
push
xchg
push
sub
xchg
aad
push
inc
adc
bnd
movsb
ljmp
xchg
jo
lds
dec
cli
add
in
aas
out
icebp
pop
inc
jle
xchg
jmp
mov
sub
lea
dec
sub
shrb
mov
cltd
scas
adc
cs
mov
xchg
xchg
cwtl
fimull
and
jle
fwait
sbb
mov
adc
xor
mov
in
enter
lret
push
mov
add
mul
jo
sbb
js
mov
dec
leave
out
push
mov
or
jno
mov
fnstcw
iret
scas
hlt
and
arpl
pop
stos
jge
ret
inc
sub
les
mov
pop
clc
icebp
push
or
stos
lahf
movsb
mov
mov
int3
cmp
push
or
inc
js
sti
aaa
addb
mov
incb
cmp
test
insb
mov
lcall
pop
jl
hlt
xchg
mov
sbb
jmp
push
xchg
js
add
dec
pusha
jns
jns
pop
js
and
lods
pop
int3
into
and
xlat
xchg
xchg
cmp
inc
loop
hlt
cwtl
cld
sahf
push
in
cli
jle
pusha
xchg
xchg
loop
ja
loope
jle
adc
xchg
pop
fistpl
mov
call
cmp
outsb
cmc
cmp
cmpl
mov
clc
jecxz
push
lds
sub
and
mov
push
push
insl
imull
pop
adc
and
push
clc
cs
in
test
or
fldl
sti
xchg
aas
push
popa
xchg
cld
outsb
std
mov
and
movsl
decb
insl
hlt
insl
adc
call
mov
dec
into
push
sbb
movsb
loopne
mov
ljmp
mov
das
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
out
ja
fwait
js
je
js
and
cs
popa
ljmp
add
or
pop
movsl
mov
inc
push
add
adc
adc
sbb
scas
js
outsl
add
mov
push
stos
inc
xor
jo
mov
cmp
push
or
xchg
xor
mov
icebp
cmp
jns
cmc
leave
mov
push
enter
push
dec
fldl
push
pop
pop
add
into
or
mov
movsb
mov
into
adc
mov
add
shlb
push
aad
sti
dec
mov
in
fsubrp
lods
inc
cmp
cld
inc
mov
or
xchg
sbb
push
add
jecxz
int3
dec
cmovns
xor
lods
and
jb
es
cltd
adc
push
fnsave
imul
fildll
mov
cmc
faddl
fwait
inc
loopne
xlat
enter
jbe
push
rcrb
arpl
das
fiaddl
ret
lds
mov
fldt
ss
sub
pop
or
das
mov
adc
push
mov
loop
lods
ljmp
call
push
jecxz
les
mov
loopne
adc
add
jne
sahf
sub
mov
push
test
mov
cmp
add
jle
mov
jae
pop
scas
jmp
enter
pop
arpl
mov
push
pop
into
mov
das
and
inc
pop
inc
lods
jle
dec
mov
lea
jnp
shll
dec
pushf
xor
adc
movb
xor
insb
jno
lds
movb
fbld
sbb
sbb
mov
or
and
push
cli
xlat
adc
test
in
addr16
xor
jmp
and
jne
pop
addl
iret
push
std
negl
dec
push
insl
lods
rolb
test
loopne
push
std
cmp
out
in
addr16
mov
pop
mov
negb
mov
ss
and
push
mov
shlb
inc
and
ds
pop
inc
je
xchg
pop
scas
fnstsw
mov
or
shll
popf
and
cmpl
or
or
sub
cmp
cmpsb
test
loop
nop
sub
cmpsl
jp
insb
sbb
mov
loope
pop
ljmp
add
xchg
and
sub
cmp
ret
sub
mov
jb
sbb
jp
dec
jae
mov
dec
push
cli
iret
push
out
mov
dec
xor
scas
hlt
daa
mov
movsl
push
push
pushf
pop
xchg
mov
test
add
in
cmp
inc
jne
pop
cmp
mov
mov
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
mov
js
je
js
aas
mov
or
ficoml
ss
lods
jns
iretw
shl
cmc
sar
mov
xor
xor
repz
mov
jne
iret
jno
xchg
sbb
aad
repnz
fadds
pop
loopne
imul
mov
push
ret
test
or
cltd
xchg
les
mov
fnstsw
aaa
cmc
outsl
subb
hlt
inc
adc
fimull
jnp
sbb
pop
shr
icebp
pop
add
ds
jbe
mov
out
or
and
adc
lock
mov
in
jg
mov
mov
mov
sbbb
sahf
mov
push
jno
jle
shll
jmp
sbb
fwait
mov
addb
das
pop
add
xchg
cmp
sub
jle
jne
inc
hlt
mov
pop
add
sbb
cli
scas
dec
jns
cmp
dec
xorl
adc
in
and
cmp
fdivrl
dec
addr16
out
sbb
in
enter
lahf
jns
fwait
mov
stos
imul
mov
sub
int3
xchg
mov
mov
xlat
inc
ljmp
sbb
sub
push
cwtl
xor
mov
mov
out
inc
rcr
stos
lods
aam
sub
cltd
mov
iret
sbb
pop
xchg
idivb
push
dec
pusha
push
jne
inc
xchg
cwtl
dec
arpl
mov
lcall
xchg
or
out
aaa
pop
fstps
jo
cmp
mov
or
cmp
lods
testb
xchg
popf
jg
sahf
popf
mov
mov
xchg
pop
cs
sbb
std
sub
insb
roll
xchg
lea
cmp
dec
loopne
inc
pop
movsl
call
or
sbb
mov
std
ljmp
push
aad
les
out
stos
inc
stos
mov
mov
addr16
jbe
push
and
xchg
adc
movsb
outsl
cmpsl
in
rclb
in
in
lret
sahf
lods
or
es
xor
lods
aam
imul
insb
cmp
comiss
push
aas
mov
pop
cld
mov
sbb
int
scas
mov
pushf
adc
sbb
pop
add
loop
dec
fadd
shl
popa
and
sbb
adc
ret
and
pop
sbb
mov
shlb
mul
aam
dec
flds
jns
sub
cmpsl
rorb
add
ret
lret
icebp
mov
xor
icebp
mov
es
int3
stc
or
or
pop
inc
mov
cmp
cltd
dec
mov
cmp
push
cs
orb
loopne
push
clc
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
mov
dec
xor
js
mov
jb
or
scas
dec
push
adc
lret
es
repnz
dec
jmp
outsb
ss
lds
test
or
icebp
push
aad
lea
add
dec
lahf
aas
stos
daa
das
int3
jne
xchg
repnz
pop
ret
sti
jmp
or
gs
inc
push
movsb
scas
sbb
lret
nop
mov
sahf
shll
fisttpl
jl
scas
push
inc
xchg
fbstp
lret
cltd
mov
ljmp
loopne
stos
test
pop
sbb
and
xor
test
decl
xorl
xchg
loop
int3
add
cmp
cltd
ja,pn
sbb
scas
scas
incb
mov
aas
mov
fbstp
test
lret
mov
xchg
cmp
add
shl
lahf
push
add
bound
xlat
popf
cltd
movsb
das
xor
xorb
mov
movsb
inc
xor
in
sbb
out
and
test
jle
cmpsl
rcll
mov
xchg
or
ret
add
dec
stos
mov
xor
idivb
lea
sar
js
fcomip
mov
cmp
and
mov
sbb
sub
adc
bound
inc
sbb
push
fsubrp
iret
es
outsl
add
or
scas
mov
push
insl
inc
push
inc
dec
cmp
and
lcall
dec
cltd
test
enter
mov
mov
push
or
or
sub
lock
mov
push
icebp
inc
xchg
cmp
out
xchg
rol
jbe
iret
jne
jbe
and
mov
popa
sub
lea
sbb
adc
cmpsb
call
push
xchg
scas
xlat
loope
lret
inc
pop
insb
sbbb
lea
in
inc
jle
add
testb
adcl
daa
mov
std
push
push
gs
pop
lea
push
ficoml
data16
sub
cs
jp
fwait
add
cmc
xor
outsb
sbb
mov
cli
rolb
mov
test
mov
sbb
add
adc
xor
or
jno
cld
aam
idivb
xchg
aad
add
inc
pop
ljmp
divl
decl
inc
leave
mov
push
in
add
cld
cmpsl
cmpsl
xchg
pushf
fldt
or
js
and
pushf
es
sbb
cwtl
addr16
push
mov
ljmp
xchg
cli
fidivl
sarb
outsl
pop
out
mov
mov
or
cmpsl
pop
inc
daa
stc
mov
cs
popa
aaa
das
lds
pop
inc
inc
movsb
insl
lahf
mov
out
pop
or
jb
xor
loope
xchg
cmp
cmp
adc
add
rol
ror
aad
xchg
mov
aad
cld
das
enter
js
jle
js
popf
test
or
mov
and
aas
and
push
xchg
xchg
outsb
dec
fsts
lahf
outsl
pop
inc
ret
xlat
add
jle
adc
mov
cmovne
pop
mov
xlat
xlat
fsubl
repz
imul
shl
mov
test
and
ss
loop
orb
test
adc
mov
mull
pushf
repnz
push
inc
cwtl
fldcw
aam
mov
mov
or
cld
call
movsb
fs
mov
pop
fstpt
jne
add
or
int3
jo
mov
xchg
xor
jae
das
ljmp
arpl
jp
popa
daa
xor
jmp
or
adc
scas
mov
js
bnd
addr16
inc
lret
dec
repnz
push
aas
test
inc
test
adc
cmc
mov
out
or
pop
popa
pushf
mov
addr16
mov
cmpsl
add
insl
fistl
fcompl
dec
add
sbb
sub
pop
imul
jmp
adc
sub
loop
sub
shrb
scas
and
mov
xor
jb
add
pop
cmp
push
data16
push
xchg
pusha
push
call
mov
ret
sub
aaa
ret
ret
xchg
aad
lock
jg
mov
fsubl
out
sbb
loop
xchg
js
push
mov
ljmp
mov
mov
fidivrs
push
cmp
stos
stc
popa
into
rolb
sbb
lds
pushf
adc
dec
or
stc
xor
adc
aam
pop
mov
mov
insb
push
push
lret
xchg
call
pusha
add
out
push
hlt
or
mov
pop
push
jno
mov
jmp
mov
sbb
bound
inc
inc
pop
scas
or
ja
sar
mov
cmp
dec
sub
scas
add
into
scas
sbb
add
xchg
or
xlat
dec
push
inc
in
push
cmp
popf
and
cld
xchg
fucomp
mov
call
mov
sub
or
leave
ret
xor
addl
leave
outsb
mov
dec
cmpsl
pop
xchg
cld
push
sub
mov
dec
scas
ds
pop
xchg
push
jmp
sbb
cmp
or
std
mov
and
pusha
lods
pop
dec
in
fs
std
add
pop
add
adc
inc
and
xchg
mov
gs
jmp
mov
aas
push
mov
xor
and
sbb
pop
jp
jp
popf
jnp
pushf
pop
mov
push
and
lahf
loopne
pop
gs
jge
mov
ja
addr16
jb
insb
pop
iret
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
dec
mov
js
xor
int
out
cmp
mov
xor
cld
cmp
lret
bound
data16
in
xor
sarb
jl
sti
mov
stc
jbe
inc
xor
pushf
dec
sub
in
dec
imul
dec
pop
dec
mov
das
les
push
out
mov
xlat
adcl
test
dec
cmp
dec
nop
cmp
clc
sub
scas
mov
fidivrs
xlat
fs
dec
push
leave
fcomps
cld
cmp
push
lods
pop
dec
mov
adc
repnz
mov
fs
inc
push
lock
fnstcw
push
add
lods
mov
outsl
movsl
and
add
mov
out
mov
inc
incl
add
lret
insl
movsl
ficompl
mov
add
popa
sub
idivb
sbb
das
cmp
dec
les
pop
adc
bound
daa
adc
mov
popa
fwait
daa
sar
pop
clc
loope
scas
sbb
outsb
fwait
dec
xchg
push
jl
lret
jg
les
fstpt
add
sub
movsb
or
in
xchg
icebp
mov
dec
xchg
mov
mov
push
out
ss
mov
je
in
pop
or
sbb
dec
imul
cbtw
xor
and
mov
ds
int3
pop
lds
add
inc
faddl
fs
gs
or
xchg
repz
cmp
pop
test
pop
push
repz
cltd
das
rcll
jo
jae
xor
cmpsl
inc
jne
mov
mov
pushf
sbb
push
xlat
enter
lods
push
xchg
sbb
enter
cmp
sbb
movsl
jbe
lcall
and
in
out
lods
pop
out
cmp
sub
mov
add
inc
push
mov
cmp
mov
mov
es
popf
xchg
mov
ror
movsl
jmp
pop
or
das
cmp
mov
jp
mov
aaa
out
xlat
push
enter
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
fcoms
hlt
out
js
xor
popf
fwait
adc
push
jno
adc
push
push
push
mov
popa
ds
mov
das
lock
popa
mov
mov
xor
push
ds
clc
push
xchg
and
stc
inc
mov
mov
rorb
and
sbb
pop
ds
xchg
mov
dec
cltd
mov
pop
pop
lea
test
mov
cld
and
in
fwait
xor
sub
adc
out
jmp
mov
cmpsb
xchg
add
sbb
jle
cmpsb
std
adc
insl
pop
rcrl
dec
push
out
lock
mov
mov
jb
shrb
orb
push
stos
adc
iret
cli
mov
aaa
imul
cmc
aad
mov
js
test
lret
jns
mov
addr16
cmpsb
add
push
push
sbb
fists
or
sbb
lods
jge
sbb
sahf
nop
test
mov
out
gs
movsb
stc
cwtl
xor
lea
fsts
cmp
push
das
hlt
cmpb
push
jecxz
cmpsb
test
jae
xor
cmpsl
fsts
lea
rep
xchg
mov
push
inc
inc
stc
sub
inc
push
stos
and
mov
fdivl
shlb
les
pushf
and
in
pusha
testb
sub
lods
notl
cmp
ret
or
lcall
cmp
and
add
mov
sbb
sbb
push
mov
dec
mov
cltd
stos
dec
mov
or
mov
push
into
xchg
pushl
sbb
mov
adc
mov
adc
lods
jge
mov
fstpl
ret
jns
jae
js
inc
out
in
das
fisttpll
test
jecxz
test
sub
fs
xchg
enter
mov
idivl
mov
adc
xor
js
insb
dec
inc
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
test
pushf
stos
js
xor
je
rclb
add
sub
xchg
jne
inc
les
rolb
or
xchg
loop
scas
in
mov
in
mov
push
aas
xor
push
add
jns
cmpsb
mov
xor
ret
rclb
mov
sahf
decb
lea
pushf
dec
sahf
xchg
out
xor
push
lock
rorl
mov
gs
js
mov
jae
xchg
jle
negb
xor
and
mov
ret
lret
xchg
fwait
add
fildll
in
mov
lods
mov
xchg
sbb
xor
push
xor
enter
sbb
bound
jl
shll
pop
cld
jmp
jmp
stos
push
bound
cmp
andl
mov
jl
in
in
adc
fdivrl
mov
jmp
ljmp
dec
dec
bound
or
mov
inc
call
dec
push
jnp
push
ljmp
mov
mov
sbb
pop
xchg
mov
mov
pop
or
into
decb
push
divl
ja
push
pop
cmp
flds
xchg
mov
test
ljmp
aam
sbbl
mov
insb
push
movl
xlat
jecxz
cmp
mov
cmpsl
xchg
pop
jge
push
lods
ds
xor
adc
ss
cmp
je
jb
mov
cld
jno
pop
ret
push
mov
add
int
dec
push
pushf
jmp
inc
in
jge
inc
aas
andb
xor
mov
inc
add
cld
shll
into
inc
dec
sub
xor
fidivrs
sbb
xchg
add
and
jb
shrl
into
jne
in
add
xor
cmp
out
adc
adc
out
out
add
xor
fucomip
clc
je
bswap
xchg
and
outsl
mov
test
test
add
cmp
movl
jne
and
jmp
int
into
aad
lea
gs
pop
test
js
add
pop
mov
pop
roll
lds
adc
adc
in
outsl
lods
jnp
rorb
popf
test
pop
mov
fs
inc
out
repnz
pusha
jge
dec
xor
inc
ljmp
sub
mov
or
push
and
push
or
pop
mov
jno
ror
ja
test
mov
cmp
or
cmpsl
sbb
sbb
popf
sub
sbb
dec
xor
xorb
std
xchg
pop
pop
mov
mov
fildl
xor
rolb
adc
pop
and
mov
les
pusha
clc
mov
sub
lds
sub
or
mov
jl
cmc
xorb
cwtl
sbb
mov
add
pop
dec
out
loopne
sbb
lret
cmc
jne
lods
lret
mov
mov
cwtl
cmc
cmp
push
popa
xchg
jo
inc
mov
add
xchg
jbe
jle
mov
mov
js
pusha
mov
cmc
mov
fs
ljmp
jae
push
and
dec
ficoml
faddl
and
fstps
sbb
repz
add
fdivr
fldt
test
dec
jle
or
adc
lds
lcall
call
fbld
inc
push
out
push
movsl
fildll
adc
push
xor
pop
push
or
lock
test
lcall
xchg
imul
mov
es
cmc
shrb
cmp
or
mov
mov
pop
xor
add
fdivl
jge
scas
sub
mov
xlat
pop
push
dec
aam
addr16
xor
loope
iret
mov
lds
loopne
dec
adc
adc
pop
xchg
mov
adc
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
imul
js
jle
js
push
fidivl
aaa
loop
jmp
adc
fwait
jl
jge
adc
mov
sbb
scas
insb
mov
in
pop
adc
push
add
icebp
cmpb
loop
or
jb
lea
xor
je
repnz
and
xchg
push
push
and
mov
imul
out
out
scas
enter
pop
in
repnz
xor
cmp
lods
pop
je
add
loop
imull
add
lcallw
xchg
mov
xor
inc
sub
fldenv
aad
cmp
sub
xchg
out
lahf
and
call
iret
or
jmp
inc
cmpsl
not
jmp
dec
or
sbb
jns
push
es
push
dec
leave
mov
push
xchg
xchg
sbbl
sbb
leave
push
icebp
fnstsw
pop
repnz
dec
xchg
xchg
mov
mov
inc
mov
icebp
mov
xor
sub
ret
jnp
pop
sahf
sub
lcall
jne
mov
std
or
pop
into
loope
or
xor
and
add
xor
inc
sahf
rorl
inc
rcr
shl
or
sar
xchg
in
jmp
test
mov
mov
and
loopne
jo
je
aas
or
mov
dec
jmp
adc
lea
mov
lret
insl
add
push
movsb
inc
and
loope
xorl
xor
inc
movsw
jl
sbb
jnp
fiadds
push
mov
icebp
mov
jnp
ret
mov
scas
sti
and
jmp
lahf
push
cltd
dec
push
mov
jp
scas
xchg
lret
jns
shlb
psubw
mov
cmp
or
xchg
push
rolb
or
aaa
in
jmp
insb
push
clc
bound
in
lock
inc
je
js
sti
cmp
arpl
add
sbb
out
xchg
cmc
pushl
mov
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
mov
lods
js
xor
pop
xchg
sbb
dec
jae
push
jecxz
mov
lods
into
imul
fidivl
imul
cltd
jae
xchg
jg
stc
cmp
pop
loop
xchg
hlt
xor
test
inc
push
jle
clc
mov
popf
test
insl
xchg
xchg
insl
stc
xor
pusha
mov
mov
adcl
nop
inc
push
cs
dec
mov
mov
sti
dec
pushf
jmp
stos
mov
in
fimull
js
das
aaa
cmp
cmpsl
sub
test
aad
jae
mov
pop
popf
scas
cld
mov
pop
lea
sub
and
jle
and
push
pop
out
add
pop
adc
adc
jl
xor
pop
xchg
jno
mov
xchg
push
or
ss
cs
dec
incl
ss
dec
aad
mov
cmp
shlb
mov
aas
shll
jo
pop
jns
xchg
aas
dec
and
lods
mov
js
jbe
jmp
stc
mov
pusha
pop
in
sbb
xchg
int3
push
inc
or
sub
cmpsb
nop
mov
ss
dec
jbe
mov
cmp
and
adc
stc
aas
test
hlt
mov
xlat
ret
mov
jl
pop
xchg
add
neg
fcoml
add
xchg
sub
dec
xlat
push
lds
paddusw
xor
and
mov
faddl
leave
lret
aaa
xchg
pop
add
cltd
cmp
jno
ficompl
es
mov
add
and
mov
in
aaa
sbb
fs
adc
pop
loopne
or
jns
pop
lret
lock
or
jno
xor
xchg
push
mov
pop
lea
out
int3
sub
sbb
and
pop
cmp
shrb
xchg
pop
pop
mov
sub
into
push
flds
inc
adcl
scas
and
jecxz
sar
testl
bound
lods
mov
call
mov
call
lods
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
xor
xchg
mov
js
mov
pop
cmp
mov
icebp
sbb
arpl
xor
cmp
movsl
in
sub
jp
adc
mov
sti
lahf
lds
scas
in
arpl
jnp
sub
and
sub
fistpll
repz
cmpsb
xor
push
out
adc
pop
pushf
and
shll
lds
or
inc
rol
lds
xchg
lret
and
popf
inc
mov
data16
mov
add
nop
mov
jmp
jge
sbb
xchg
dec
outsb
mov
sub
outsb
iret
jae
cmpsl
mov
outsl
and
xor
cwtl
xor
or
and
jmp
jnp
sbb
pop
push
test
les
xor
xlat
xor
out
scas
push
in
fidivs
mov
ja
test
push
imul
pop
jo
and
aad
shlb
into
and
dec
add
mov
add
mov
imul
xor
clc
xchg
jmp
jmp
test
lods
add
repnz
xchg
cwtl
inc
add
and
je
sbb
mov
clc
repz
mov
cmpsl
test
lcall
cmc
nop
sub
pop
nop
fisubrl
daa
xor
popa
inc
repnz
scas
fbstp
and
cs
aas
mov
mov
cs
nop
stos
je
dec
mov
ja
stos
movsl
push
je
inc
lahf
ljmp
push
jg
les
adc
add
cs
ret
out
cmp
xchg
sub
rol
lret
mov
stos
sbb
repz
or
lea
test
sahf
dec
enter
popa
mov
xchg
mov
sbb
lea
adc
dec
insb
mov
jle
mov
lret
xchg
jecxz
cmp
push
add
shll
sahf
out
cltd
pushf
and
stc
sbb
push
rcrb
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
lods
add
js
xor
xchg
imul
sbb
jge
xchg
repz
lds
push
add
pop
lea
mov
mov
mov
xchg
in
sti
in
sbb
or
jbe
movsb
lret
scas
jne
push
rcr
inc
neg
inc
or
mov
pcmpeqw
cmp
mov
pop
fwait
mov
mov
cmp
cli
fdivp
jl
push
popf
loopne
sti
jae
ror
outsl
cltd
push
out
or
xchg
movsl
pop
mov
xor
fs
xchg
adc
lret
nop
mov
std
adc
test
pop
shl
addr16
or
mov
enter
push
je
dec
test
inc
sbbl
imul
jge
inc
jecxz
cmp
cmp
mov
pop
sub
or
mov
andb
int3
shl
dec
jmp
inc
xor
nop
add
addr16
dec
iret
outsb
jl
xlat
cmp
mov
loopne
and
dec
inc
ds
lods
hlt
mov
mov
sbb
cltd
clc
ljmp
pop
sub
push
sbb
stc
xor
sub
xchg
push
adc
xchg
cmp
pop
movl
into
das
add
sub
mov
testl
xchg
jae
adc
adc
cli
jg
rcl
xchg
lret
mov
sub
js
fcomps
push
cmp
loop
sub
dec
add
faddp
fisttpl
int
pop
dec
and
jge
fimuls
add
scas
dec
sbb
jg
stos
outsb
insl
ss
push
mov
stos
ja
cmp
jne
scas
faddp
mov
mov
shll
cmpsb
add
push
icebp
pop
fwait
loope
inc
and
repnz
add
and
push
rcrl
arpl
add
dec
lea
out
orl
xchg
push
mov
mov
outsb
rcrl
push
ret
pop
imul
bnd
incl
cmp
jecxz
jbe
mov
incl
lret
inc
stc
push
lahf
imul
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
xor
cltd
popa
push
dec
std
xor
leave
adc
pop
adc
arpl
cmp
add
push
jno
pop
shll
imul
push
pop
rcll
xchg
xchg
imul
ja
leave
mov
jle
sub
mov
test
shl
mov
lret
dec
pop
sbbl
stc
pop
dec
pop
subb
scas
cmp
xchg
push
add
rcrb
fidivs
xchg
cmpsb
sub
pop
mov
ds
test
stos
sbb
lahf
cltd
jl
xchg
mov
repz
jp
mov
jmp
add
push
pop
and
nop
and
adc
pop
jg
mov
jmp
int
popf
jmp
filds
lods
sub
or
mov
xchg
adc
shrb
jecxz
add
and
xchg
addb
sbb
out
sub
push
daa
and
sbb
ja
and
push
sub
pop
jp
or
mov
sbb
inc
mov
mov
movsl
daa
jp
dec
cmp
add
mov
in
push
loopne
mov
cmp
lret
clc
loope
or
adc
in
fbstp
push
push
or
dec
mov
test
ss
mov
dec
shld
cld
jo
pushf
pop
leave
faddl
and
out
movsb
movsl
mov
mov
pop
pop
add
hlt
in
cwtl
push
test
push
mov
addr16
cltd
lods
dec
insl
cmpsl
sti
cmpl
lret
pushf
add
mov
or
ficomps
sbb
paddd
push
aaa
xor
xchg
dec
es
mov
jl
xchg
push
js
pop
mov
out
shll
cltd
shl
jecxz
std
xorb
mov
repz
cmpsl
lret
pop
mov
mov
push
xchg
and
lret
and
scas
ja
ret
stos
xchg
jb
sbb
rcl
loop
dec
jb
lret
dec
push
sub
adc
popa
pop
and
pop
adc
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
mov
js
xor
cmpsb
outsl
mov
fsts
lcall
xchg
jnp
icebp
lea
cmp
add
mov
mov
lods
pop
in
pop
add
xor
jnp
or
cli
mov
mov
pop
mov
pop
sbb
addl
jmp
js
cmp
repz
movsb
jnp
adc
pop
mov
push
and
wrmsr
xlat
push
or
rorl
mov
lahf
cmp
icebp
lea
rorb
and
cmp
pop
sub
mov
or
inc
inc
punpcklbw
xor
cmp
xorb
pop
push
data16
push
in
cltd
movsb
shll
and
and
insb
jnp
jmp
popf
push
adc
rorb
stos
xor
pop
and
mov
push
iret
mov
sbb
jmp
movsb
aad
pop
data16
inc
push
mov
mov
mov
lock
adc
mov
ljmp
std
or
repnz
das
mov
push
mov
scas
daa
repnz
gs
cmc
xchg
int
nop
stos
dec
dec
xor
inc
bnd
sub
popa
jecxz
inc
mov
pop
in
mov
popf
push
pop
or
mov
test
add
ret
dec
jle
sahf
add
fwait
or
mov
pop
imull
and
cmp
xchg
call
mov
fdiv
push
shlb
or
lock
dec
jmp
mov
push
cmp
xchg
icebp
inc
cwtl
dec
dec
mov
sbb
mov
movsl
cwtl
add
outsb
jmp
shrl
sub
out
loopne
jp
ret
adcl
clc
push
push
shlb
out
dec
push
mov
cmpsl
stos
push
jle
adc
sbb
pop
mov
mov
nop
push
sbb
sbb
push
push
incb
mov
adc
sub
mov
aas
clc
jg
cmp
daa
shl
cmp
fwait
arpl
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
dec
mov
js
in
js
pop
mov
cltd
and
test
adc
incl
scas
jns
daa
je
xchg
xchg
sub
xor
push
pusha
decl
xchg
orl
push
mov
push
cmp
lcall
dec
icebp
stos
cmp
xchg
cmp
fisubrl
scas
xor
popa
or
movb
fwait
cmc
sbb
sub
outsb
xor
jmp
movsb
pop
je
daa
lahf
fldl
daa
or
cmp
rolb
aam
dec
mov
out
sbb
ret
add
push
and
dec
and
fwait
gs
fldcw
cmpsb
in
mov
cmp
jle
push
pop
jl
ret
aas
test
jg
xchg
test
sub
lcall
pushl
popf
push
sti
or
insl
sbb
mov
test
scas
jns
jnp
cmp
mov
cmpsl
int3
push
sbb
or
xchg
loope
inc
push
fnstenv
cmp
ficoms
add
loop
test
cmp
jle
add
mov
loope
sti
add
jo
rorl
loope
dec
inc
jno
or
std
fbld
fwait
test
pop
test
dec
adc
test
or
daa
jb
and
cld
and
frstor
ds
mov
outsl
fiaddl
je
stos
pushf
sbb
mov
push
lock
cmp
and
cmp
sub
movsb
fisttps
inc
dec
aad
inc
mov
lods
sub
adc
movsl
inc
repnz
sub
outsl
sbb
fistpll
in
xor
ret
pop
daa
xchg
fisttpll
stos
mov
loop
pop
das
inc
lea
push
shrl
popf
sub
shrb
push
jno
cmc
fldt
mov
bound
jno
into
in
loop
fistpl
aam
xor
pop
das
xor
pop
and
fsts
aam
and
push
lret
and
adc
fstpl
add
sub
insl
mov
sub
rcl
xchg
out
push
roll
mov
dec
ds
clc
lret
mov
ss
jecxz
mov
daa
sub
adc
push
or
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
cmp
mov
js
sbb
xor
ss
xorb
mov
call
cmp
flds
push
jmp
push
cmp
loopne
mov
inc
mov
pusha
mov
or
cmc
test
sbb
push
jno
mov
fldenv
adc
push
loope
mov
arpl
sbb
xlat
repz
outsl
push
iret
es
xchg
dec
adc
add
and
adc
movl
mov
add
xchg
xor
add
loope
in
jnp
sub
xchg
aaa
movsb
dec
adc
xor
insl
jnp
cltd
ret
data16
add
int3
xchg
xchg
loope
rclb
mov
ret
mov
xor
mov
js
aad
repz
lret
or
xorl
arpl
jge
push
divl
icebp
fdiv
inc
nop
xchg
jmp
inc
xchg
popa
mov
dec
xor
das
push
mov
mov
pop
popa
jbe
arpl
jb
stos
or
out
add
xor
insb
repz
push
xor
imul
bound
xchg
mov
int
dec
push
mov
es
cmpsl
inc
daa
lods
pop
push
outsb
add
and
test
lcall
imull
xchg
xchg
ja
cmp
outsb
inc
cltd
or
std
xlat
adc
into
mov
icebp
stos
add
subl
xchg
xlat
mov
rorb
push
shrb
stc
imul
mov
xchg
lcall
out
shll
xor
mov
pop
out
stos
add
jge
cmp
inc
dec
cmp
push
pop
dec
pop
pop
sub
popf
pop
cld
inc
enter
outsb
test
clc
insl
pop
mov
sub
lret
sub
fistps
dec
repz
jecxz
in
mov
push
xchg
and
add
sub
sbb
sub
outsl
setl
testl
sahf
jp
movsb
mov
jmp
inc
mov
cltd
sbb
aaa
xchg
xchg
xchg
orb
dec
xor
scas
jp
or
insb
addr16
fstpt
shl
xchg
push
mov
mov
and
add
add
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
popf
into
mov
js
out
sub
sbb
cli
es
repz
lods
fsubs
popa
filds
std
sbb
fidivl
mov
add
pop
subl
push
std
jg
jp
lock
aaa
or
inc
repz
pop
mov
xchg
xlat
fadds
xor
lret
fcmovnb
repnz
inc
add
adc
mov
jg
cwtl
mov
mov
add
pop
xlat
mov
daa
dec
pop
ja
dec
add
and
push
add
in
xchg
insb
out
mov
test
aam
shll
inc
lret
push
fidivrl
js
test
mov
mov
iret
mov
xor
pop
cmpsb
scas
test
lods
test
cmpsl
jle
sbb
pop
push
leave
imull
pop
jge
mov
push
dec
fs
lret
cmp
popf
incb
inc
lods
mov
pop
aam
jle
mov
mov
in
adc
adc
into
insl
ljmp
and
fs
ret
xchg
mov
inc
add
cmp
mov
arpl
lods
sbb
incb
adc
xor
cs
push
and
and
xor
mov
fnstenv
push
stc
jle
stc
outsb
dec
push
cmp
pop
mov
pop
icebp
push
inc
mov
push
mov
cli
int
loope
xor
mov
sub
sbb
insb
lret
push
or
imull
repz
shrl
stc
mov
aad
inc
mov
xor
aas
xor
fs
push
mov
popl
dec
cmp
loop
or
sub
mov
fs
inc
xor
xor
sti
lods
in
push
shll
stc
inc
fldcw
jecxz
jns
sub
out
mov
sti
movl
lods
testl
pop
stos
into
ljmp
sub
sub
add
sub
xchg
mov
sub
popa
rolb
test
xchg
test
and
add
lret
adc
jg
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shll
mov
jle
js
lock
or
jecxz
mov
or
push
lock
leave
stos
or
outsl
fisubrs
adc
ja
sub
popw
popf
mov
push
movsb
lds
pop
push
iret
lret
fimull
xor
pushf
xchg
adc
pop
push
jno
mov
scas
sbb
xchg
sbb
cmpsb
mov
sahf
push
pushf
mov
sahf
cmp
loopne
pop
push
insl
insl
sahf
dec
inc
test
pop
cld
adcl
int
ja
fs
aaa
and
sub
sub
test
and
sarl
shll
and
add
inc
inc
addr16
mov
in
cmp
jb
in
test
jnp
jo
jnp
xlat
and
sbb
mov
shlb
andb
xchg
out
in
xor
ret
and
fcmove
inc
sub
pop
fimuls
scas
cmp
lcall
pop
iret
and
rol
push
xor
xor
cmpb
sbb
ds
jns
arpl
cmp
mov
and
push
ret
std
adc
inc
negb
fldl
mov
add
rcrl
shrl
insl
jg
cmp
loopne
imul
or
sub
dec
push
repz
icebp
scas
inc
xchg
jb
mov
out
sbb
and
int
push
out
or
or
jmp
xchg
mov
cmp
dec
xor
cmp
fildll
mov
sbb
pusha
cmp
xor
push
mov
lcall
shlb
mov
sub
adc
adcl
xchg
mov
loop
mov
cmp
subb
sbb
jecxz
ficomps
jge
cmp
adc
rcrl
lock
inc
or
jo
mov
loopne
cs
icebp
sbb
pushf
jle
mov
pop
lock
dec
repnz
leave
add
out
and
inc
leave
pop
adcl
pop
sti
xlat
ds
push
pop
popa
mov
mov
dec
imul
das
add
cmp
movl
jmp
ret
ret
lret
test
andb
js
in
js
xor
mov
mov
lds
repz
fdivrp
cmpsb
add
lods
mov
mov
push
mov
xor
push
cmpl
mov
xchg
shr
cli
or
cwtl
cmpsl
inc
repz
dec
mov
xchg
cli
test
jb
iret
and
and
mov
dec
insb
mov
jmp
jnp
hlt
psubusb
cltd
icebp
addr16
push
arpl
add
push
nop
test
adc
add
xor
hlt
nop
icebp
pop
cltd
jbe
mov
cmc
xor
inc
cmpsb
mov
pop
in
fistpl
xchg
das
or
iret
nop
jo
repnz
call
ret
stc
mov
mov
cltd
adc
loope
lds
icebp
lcall
dec
add
outsl
jnp
leave
mov
xor
xchg
cli
jmp
mov
shll
or
shlb
add
xor
and
add
cmc
sbb
pop
dec
popa
loope
andb
mov
or
inc
mov
daa
insb
xchg
aad
add
bound
fsubrs
mov
jg
and
and
push
xchg
movsb
inc
movsl
push
fimull
mov
mov
pop
aad
inc
lods
repnz
push
test
pop
test
stc
jg
inc
sti
shr
adc
es
std
xchg
inc
fs
ja
fildll
push
add
imul
subl
outsl
bound
cli
jecxz
ss
sbb
in
gs
or
lcall
lret
mov
jne
inc
mov
jmp
jo
jmp
pop
adc
push
pop
cmc
push
push
mov
mov
popf
test
and
out
popf
aam
mov
loopne
icebp
ficomps
adcb
inc
push
cmp
pop
iret
imul
add
arpl
clc
addr16
imul
out
ds
push
xor
imul
gs
sbb
xor
pop
pop
mov
jo
adc
aaa
arpl
jno
aaa
dec
aas
cmp
insl
sbbb
dec
jne
arpl
mov
in
lret
and
and
aam
or
sbb
cmpl
add
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
xchg
ficompl
in
js
mov
popl
cmc
cs
in
das
movb
insb
jne
mov
gs
ret
in
roll
fiadds
inc
imul
xor
jae
jmp
sub
jns
and
sub
pop
inc
jae
jo
mov
xchg
mov
push
push
lods
cmp
cs
cmp
add
jo
jg
inc
inc
inc
mov
rorl
sbb
outsb
cltd
sub
add
stos
mov
xchg
out
xchg
loop
pop
xchg
mov
push
cli
jae
xchg
jns
mov
addr16
imul
call
jb
mov
dec
popl
in
jge
gs
adc
inc
hlt
ret
cmc
subb
pop
or
dec
aas
jge
xor
pop
ret
out
push
and
cli
and
pop
mov
pop
xor
or
push
pop
xor
loopne
jbe
bnd
stos
push
fwait
pop
aam
stos
sub
sub
cld
mov
pop
ret
or
out
icebp
mov
scas
pop
sub
fcmovu
imul
jge
dec
int3
and
cli
lods
pop
repnz
shl
sub
jge
mov
mov
or
sbb
sbb
sub
xor
add
cmp
shll
sbb
mov
jge
roll
mov
cli
lahf
cwtl
xchg
sub
mov
mov
or
mov
pop
sub
cmp
out
sti
rorl
mov
lahf
pop
mov
js
and
mov
fmull
daa
ret
cmp
nop
push
scas
inc
dec
dec
ljmp
das
mov
dec
fsubrs
cmpsl
inc
popf
in
test
xlat
mov
mov
movsb
ret
sub
std
adc
fldenv
repz
mov
mov
adc
mov
enter
jmp
add
add
xchg
mov
aaa
jno
pop
adc
jae
xchg
leave
ret
adc
je
idiv
mov
lahf
sbb
aad
js
das
dec
xlat
ja
mov
mov
test
cli
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
or
js
in
js
sbb
test
dec
enter
pop
shrl
inc
mov
adc
xchg
pop
inc
and
enter
je
in
jae
cmc
fcomps
xor
push
or
cmp
shll
dec
orl
sbb
fidivrl
pop
aaa
inc
or
sbb
divb
insb
in
jns
and
cmovns
test
sub
fwait
and
fwait
xchg
in
inc
jo
orl
or
mov
sub
mov
mov
dec
jns
xor
test
ret
sub
out
popa
dec
inc
push
stos
pop
ljmp
pop
addr16
mov
mov
inc
ret
inc
sarl
xor
lcall
fidivl
mov
mov
pop
and
xchg
pop
xor
ret
xlat
insl
adc
loopne
mov
jnp
inc
pusha
ret
add
mov
push
nop
mov
loope
push
mov
inc
mov
mov
scas
mov
imul
addr16
shrl
dec
or
imul
mov
push
mov
add
outsb
mov
ficompl
fimull
lock
pusha
sbb
push
sbb
inc
data16
adc
int
out
lods
add
jg
je
mov
rolb
insb
add
cmp
test
jne
push
dec
fs
sub
popf
adcb
pop
mov
lcall
mov
test
and
test
sub
push
cmpsl
mov
cmp
add
or
ja
push
mov
adc
sbb
push
xor
jp
stos
rcrl
shlb
test
mov
rorb
jp
in
fcomps
sub
imulb
jl
mov
pop
mov
jns
cmp
mov
sub
movsl
adcb
fwait
cmp
mov
and
sub
insb
mov
adc
sarl
bound
imull
mov
je
sub
cld
xor
cmp
bnd
jo
xchg
cld
sbb
fs
cmpl
int3
fwait
iret
shlb
mov
inc
sbb
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
incl
js
in
js
fisubl
jmp
jle
cmp
mov
arpl
jne
scas
movsb
pop
sbb
mov
stos
aaa
jecxz
pop
sub
mov
jmp
or
mov
aad
mov
add
sub
into
and
sub
sub
fcmovnbe
xchg
cmp
in
or
cmp
cmp
xor
mov
incb
or
mov
dec
jp
or
or
bound
lret
cmp
cs
mov
jmp
sarb
arpl
and
ret
sub
and
out
mov
sub
and
shlb
xor
int
lret
test
sub
sbb
mov
mov
cmp
mov
xor
int
dec
sbb
adc
test
movl
inc
loope
mov
and
fisubrs
or
adc
push
scas
fwait
inc
or
call
pop
jle
dec
fwait
inc
sbb
add
loope
outsl
or
roll
out
push
inc
cmc
push
jne
mov
arpl
sbb
jmp
cmpsl
add
xor
mov
aad
push
pop
ss
sahf
mov
pop
xchg
or
sub
dec
jo
mov
jbe
lcall
ror
mov
les
push
cli
mov
int
je
js
mov
fs
push
add
dec
adc
pop
cmp
inc
sbb
mov
sub
movsl
pop
out
pop
xor
xchg
mov
sbbl
mov
subb
adc
xor
adc
push
lahf
sub
ljmp
inc
or
dec
pop
or
inc
sub
popa
into
mov
out
outsb
rclb
ja
lds
mov
fiadds
jmp
outsb
fnsave
test
cltd
test
xchg
sub
test
push
sub
dec
ds
xchg
add
cmp
outsl
int
arpl
test
mov
inc
mov
push
mov
jl
inc
push
push
ret
xchg
sub
sub
cli
pop
lds
into
push
nop
add
jmp
ret
int
into
xchg
jle
mov
insb
out
dec
dec
js
in
js
adc
jbe
imul
inc
xor
inc
mov
cli
pusha
ret
add
adc
inc
mov
mov
adc
loopne
dec
mov
mov
sti
mov
test
std
mov
cmp
push
adc
inc
inc
rol
pop
and
mov
or
sub
rcl
aad
into
mov
push
lahf
aam
jns
and
mov
xchg
repz
push
es
call
sbb
push
sbb
or
into
or
loop
adc
dec
mov
mov
ljmp
xchg
mov
test
sbb
xchg
test
inc
cmp
stos
std
in
adc
lret
push
pop
incb
or
push
clc
cli
jae
add
movsl
js
loopne
fmuls
push
cmp
mov
or
and
inc
rcll
adc
inc
stc
add
xchg
jmp
jae
adc
or
popf
xor
fimull
fdivrp
sbbb
mulb
or
rolb
inc
and
test
adc
adc
lahf
ja
inc
into
inc
bswap
and
dec
xor
icebp
daa
mov
repnz
inc
lret
sarb
or
js
pop
and
pop
pop
movb
push
jp
cmpsl
movsb
cmpsl
fisubl
fstpt
jo
fsubs
sub
hlt
popf
xor
ss
or
rcll
add
push
push
push
add
shrb
clc
or
adc
adc
jno
cmp
imul
rcrb
fwait
subb
mov
and
mov
push
test
jns
insl
sub
sti
mov
and
mov
jmp
aaa
and
cmp
insb
jecxz
mov
shlb
push
leave
fiadds
xchg
xchg
jnp
xlat
fwait
xor
adc
fdivrl
xchg
int3
sarb
sbbb
aad
data16
mov
mov
cmp
mov
test
fisttps
cmpsl
xor
mov
jo
lds
pushf
xor
push
les
xchg
mov
mov
lea
neg
jae
rorl
scas
xlat
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
pop
pop
sub
in
js
pusha
ds
mov
mov
jae
pop
int
popa
inc
mov
repnz
xor
jmp
in
bound
repnz
rorb
mov
fs
aad
mov
sarb
cli
scas
xchg
arpl
repz
dec
jno
scas
push
inc
adcb
movl
pop
pop
das
ficoms
je
pop
idiv
cltd
stos
cmp
or
loopne
daa
and
dec
dec
repnz
mov
lds
cs
pop
out
push
and
aaa
test
ss
fcompl
repnz
insb
mov
fildll
jl
mov
or
pop
pop
pusha
sbb
test
int
cmpsb
xchg
fsubrl
ss
out
fisttps
mov
scas
repnz
je
std
loopne
mov
xchg
lock
mov
adc
mov
xchg
jmp
push
leave
pusha
or
cmp
jmp
iret
ret
pop
push
icebp
adc
dec
arpl
ds
test
adc
inc
dec
sbb
aam
ficomps
mov
aaa
pop
dec
mov
test
mov
jge
movsb
pop
fucom
or
push
imul
sti
inc
cltd
sbb
popa
mov
xchg
mov
jae
or
pop
sbb
lahf
fnsave
pop
add
outsl
negb
test
adc
fs
jle
ja
sub
dec
push
scas
js
push
out
loopne
adc
sub
push
cmp
push
out
scas
inc
jne
push
inc
out
imul
pop
ret
push
das
add
in
loopne
jns
inc
ss
nop
or
dec
lcall
outsb
cli
out
popa
pop
fidivl
insl
addr16
rolb
cmp
push
mov
jge
pop
cmc
imul
push
jge
fmull
mov
aaa
sub
mov
cmp
and
lret
fildll
mov
cmp
popa
gs
sub
mov
mov
cmp
xchg
cmc
imul
fs
fs
mov
or
pop
or
push
cmp
pop
jne
pushf
jo
pop
adc
cli
mov
jmp
add
leave
cmpsb
stc
sbb
scas
bound
jmp
push
les
lret
jp
add
imul
cwtl
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
bnd
mov
in
js
sti
push
cmp
mov
popa
data16
cmp
out
jnp
pop
lock
jns
jns
xchg
cmpsb
xchg
cli
add
mov
in
out
mov
inc
dec
int3
or
inc
dec
rep
les
sub
jp
jmp
adc
frstor
lods
icebp
insl
cmp
pushf
adc
jl
test
push
rclb
fstpt
in
cmpsl
cmpsb
sub
mov
sti
jge
into
sbbb
xor
inc
shrl
sti
and
orl
add
cmpb
add
xlat
mov
dec
insl
pop
ja
std
xchg
sbb
fs
xor
jo
mov
testl
mov
push
sbb
push
into
xchg
push
sbb
ror
test
jbe
xor
popa
push
adc
fldenv
push
vandps
mov
sbb
dec
addr16
inc
inc
pop
push
push
daa
shll
mov
pop
mov
or
jnp
and
cmpsb
add
stos
lcall
mov
imul
sbb
or
aaa
data16
jle
xlat
sub
sub
test
add
fcomi
shlb
insb
jb
ret
xor
jmp
dec
inc
ds
sub
mov
daa
loope
inc
sbb
mov
clc
mov
jns
inc
jmp
ret
jbe
push
and
mov
xorl
pop
jecxz
mov
xchg
cmp
outsb
sub
ljmp
in
and
xchg
frstor
popa
sub
outsb
mov
jmp
mov
aam
mov
lock
sub
fs
mov
sbb
loope
dec
dec
jns
stc
sbb
push
mov
repz
aad
mov
inc
xchg
pop
dec
ss
icebp
jae
pop
shl
popa
xchg
popf
mov
xor
out
mov
daa
lds
cld
sarl
mov
and
cs
mov
or
xchg
pop
in
cli
shlb
int3
pushf
mov
mov
rolb
shrb
bound
xlat
mov
loope
in
mov
cmpsl
lods
loope
jp
xor
jae
mov
xor
jmp
fwait
xor
stos
sub
sub
mov
or
add
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
negl
push
js
in
js
jp
filds
cbtw
iret
stc
or
outsl
rol
mov
popf
sbb
popa
cltd
mov
je
lcall
mov
cld
xor
or
xchg
ja
scas
and
out
push
jne
test
mov
and
in
ds
les
addr16
fsubr
out
jbe
and
movsb
aas
int
push
xor
lret
stc
cld
xchg
and
orb
sbb
int
stos
out
lods
sub
push
dec
sbb
and
or
lahf
pop
xchg
add
cli
popf
cs
fildl
shl
lret
jmp
insl
adc
jmp
and
adc
rclb
fcmovu
xlat
push
ret
jb
pushf
or
jle
imul
sbb
enter
fmulp
pop
mov
inc
push
popf
inc
xchg
mov
lds
jno
pop
jge
imul
cmpsb
rcrb
xor
test
js
xor
jo
popf
dec
push
insb
pop
mov
mov
xor
cmpsl
cmp
test
int
or
ljmp
jp
pop
adc
sbb
mov
int
int
sub
or
jg
es
and
push
xor
cmpsb
fists
inc
or
pushf
mov
icebp
jno
sbb
add
mov
add
dec
daa
movsb
lods
push
lret
mov
imul
xchg
repz
out
inc
das
inc
cld
dec
repnz
in
mov
rorb
lods
iret
je
ret
and
scas
ficoms
jl
cmpsb
mov
add
jmp
fcomi
xchg
imulb
add
jbe
dec
sbb
mov
xchg
push
sub
xor
jbe
sub
push
mov
sbb
test
bound
stc
mov
outsl
pop
shlb
ljmp
adc
xor
stos
inc
roll
lcall
fsubrp
cmpl
fsubrp
mov
das
xor
ljmp
cmc
dec
hlt
sbb
or
jge
cli
nop
popf
mov
xchg
repz
ror
jge
push
loop
out
sub
rcll
add
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
jbe
xor
push
js
in
js
jl
pop
js
push
push
sbb
jo
ficoml
or
mov
mov
and
add
fisubrs
je
mov
dec
ret
xor
jle
bound
test
pop
mov
or
dec
movsb
outsb
out
xlat
pop
mov
popl
aad
pop
mov
in
test
sub
outsb
mov
test
in
ret
in
shrl
mov
nop
hlt
subb
fistl
addr16
push
and
jo
xchg
out
xchg
mov
outsl
cltd
stos
xchg
jmp
aas
call
adc
cmc
outsb
sub
pop
arpl
in
and
sbb
into
orb
daa
mov
jb
xlat
jecxz
into
test
pop
push
je
cs
cwtl
cmp
push
mov
mov
adc
mov
lahf
std
xlat
lock
bound
lods
lret
cld
mov
push
dec
sbb
test
leave
xchg
mov
cltd
xor
push
xor
inc
repnz
repnz
push
movsb
pop
mov
mov
push
es
mov
mov
test
rcr
fcmovbe
mov
jp
mov
stos
jp
inc
mov
fldcw
stc
stos
adc
cli
pop
mov
xor
inc
lods
stos
mov
jmp
inc
aas
outsb
jp
sbb
insl
lds
das
lds
insb
add
loope
mov
xchg
outsb
scas
add
aaa
ret
push
xor
les
xchg
and
cmp
out
mov
mov
xor
or
add
or
clc
push
out
enter
mov
stc
dec
adc
sub
and
pop
and
dec
xchg
push
inc
lcall
test
fs
xchg
push
shrb
daa
lds
aaa
fwait
mov
dec
mov
jmp
lods
aas
rcrb
out
orl
std
adc
rorb
mov
add
and
outsb
and
ljmp
stos
sub
jb
pop
fdivs
stos
or
sub
push
repz
jne
inc
sbb
and
lock
mov
add
jmp
int3
into
ror
rcl
into
jbe
inc
data16
jns
gs
js
in
js
test
push
ss
stc
icebp
and
out
mov
inc
std
notl
lods
test
or
das
and
lahf
jle
fistpl
xor
in
sub
xor
bound
or
fidivs
xor
mov
insb
or
xchg
adc
or
ljmp
xlat
pop
mov
xchg
jae
mov
notl
out
add
rolb
jle,pt
addr16
and
inc
leave
pop
repz
js
jg
out
add
dec
xchg
pop
inc
xchg
mov
cmp
add
int
insl
lcall
xchg
nop
jnp
fdiv
dec
push
mov
movsb
ret
push
push
add
jmp
dec
pushf
aad
cwtl
inc
mov
into
lods
or
xchg
jno
inc
sub
jnp
xchg
sub
icebp
pusha
or
push
iret
mov
add
imul
or
mov
inc
xchg
and
add
aam
pop
xchg
adc
push
pop
adc
mov
pop
push
or
xchg
push
push
mov
in
xor
lcall
repnz
jmp
test
lock
ds
xor
jmp
std
pusha
int
shl
pop
bound
in
jp
notl
xor
daa
gs
jbe
mov
sbb
sbb
shrb
xchg
fs
lods
arpl
xchg
in
adc
jns
and
jnp
jo
cs
push
lret
dec
push
int
push
jmp
cld
pop
push
push
pushf
mov
cltd
rdmsr
mov
cmc
shll
pushf
sbbl
xor
or
mov
and
bound
fsubr
js
repnz
gs
je
shlb
cmp
mov
mov
jnp,pn
xchg
dec
insl
jnp
imulb
ja
fsubrp
mov
aad
xchg
in
cs
into
pop
xchg
pop
fs
jae
out
lea
jmp
jnp
bound
mov
cmp
pop
mov
and
add
push
in
push
movsb
xor
test
cmp
bound
repnz
sbb
notl
cmp
pusha
repnz
adc
dec
xor
mov
dec
pop
ret
js
rorl
scas
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
cmpsl
and
pop
js
in
js
loopne
cmpsb
xchg
inc
imul
add
cmp
push
cmpsb
js
cli
and
lods
xchg
fisttpll
sbb
mov
mov
leave
out
jnp
and
jmp
mov
scas
mov
ljmp
std
repz
jo
jns
fnsave
mov
dec
out
add
inc
clc
xchg
stos
add
push
fcmovnbe
call
mov
push
xor
idivb
cmp
call
inc
xchg
nop
leave
sub
xchg
mov
stos
arpl
dec
and
jnp
loope
jmp
pop
adc
loop
and
rorl
sbb
repnz
ljmp
call
rorb
mov
pop
inc
lret
scas
jae
mov
pushf
push
in
out
int3
cmpsb
push
mov
add
fdivs
fisubrs
mov
jae
jo
add
push
sysret
add
aas
cmc
rorb
pop
xchg
loope
xor
xor
and
lods
or
xchg
cli
pop
cmp
sbb
or
stos
or
mov
repnz
push
xor
pop
xor
mov
lahf
sub
fs
addr16
pushf
dec
bound
pushf
outsl
inc
hlt
xor
add
dec
rorb
xor
insb
fs
fisubrl
or
loope
inc
std
and
fisubl
and
bound
int3
xor
out
lods
cmp
xor
repz
dec
enter
dec
sarb
pop
mov
in
push
mov
out
orb
fisubs
dec
roll
dec
sub
pop
jle
fstpl
jmp
jge
pop
sbb
mov
mov
scas
mov
adc
repz
outsb
jmp
xchg
dec
lret
jns
arpl
dec
movsl
jmp
inc
sub
mov
fimuls
xor
cli
dec
xchg
sub
test
out
mov
push
test
push
mov
xchg
mov
jae
or
cli
mov
xchg
push
ret
jmp
sub
jle
insl
and
add
or
mov
pop
sbb
bound
lods
and
sub
ljmp
push
mov
inc
iret
sbb
jge
mov
sub
cmp
ja
jmp
rol
xor
push
mov
js
in
js
testb
aad
push
ficompl
xor
mov
xchg
inc
cmp
cmp
fbld
adc
and
mov
xor
sbb
enter
jbe
and
fsubrl
push
jl
xor
leave
and
add
xlat
scas
push
js
fs
add
mov
cmpsb
add
subl
fistpl
jge
push
scas
pop
sub
mov
push
stos
xchg
movsl
mov
stos
push
push
dec
add
cmp
and
xor
lds
sbb
push
sbb
aad
shll
rolb
popf
stc
adc
add
mov
js
sbb
fstl
cwtl
push
cmp
pop
push
sub
loop
jo
inc
sub
mov
aam
neg
adc
dec
shl
jmp
stc
adc
push
ljmp
pop
shll
lods
insb
lea
das
cld
jp
mov
add
push
popa
sub
sub
ret
ficompl
loop
jae
test
push
paddq
out
ja
inc
push
repz
xlat
fdivs
sbbb
or
xor
dec
ds
sbb
or
cmp
iret
sub
mov
pop
cmc
les
dec
cmpsb
clc
sub
repz
cld
inc
sub
inc
cmpl
xor
in
fnstcw
and
push
pusha
lods
out
mov
xor
jnp,pn
lds
ljmp
or
test
call
pop
dec
or
xor
test
pusha
add
mov
imul
ljmp
fwait
push
fistpll
mov
dec
push
mov
addl
adc
das
fiadds
xchg
repz
mov
test
pop
jnp
mov
push
pop
and
xchg
or
and
jne
cltd
mov
cmp
rorl
mov
lock
fisttpl
mov
int
pop
cmpsb
jl
out
pusha
in
cmp
inc
pop
push
imul
repz
mov
mov
mov
nop
adc
push
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
jmp
bound
in
js
and
mov
adc
jle
and
sbb
sbb
jge
scas
add
cmp
sbb
gs
mov
subb
out
movsb
cli
dec
out
out
insb
mov
xchg
sub
ret
and
cmp
mov
push
sbbl
sbb
imul
mov
xor
std
in
dec
das
int3
in
rcl
xchg
mov
clc
lods
clc
cld
mov
cmp
daa
in
fsubr
shll
xlat
push
ljmp
add
lds
mov
pop
adcb
or
mov
iret
push
lds
jge
jno
push
mov
sub
scas
mov
jno
pusha
pop
test
sub
mov
in
pop
push
pop
push
pop
je
dec
and
adc
xlat
aaa
rol
call
les
test
aaa
cmp
mov
xor
test
mov
sub
outsl
out
push
push
ret
jnp
ret
add
add
xor
mov
pslld
dec
in
fadds
jno
repz
sub
cmc
xor
xchg
xor
push
push
and
push
and
or
sbb
sbb
les
and
xchg
dec
jl
fnsave
jno
vdivps
ja
insb
scas
dec
sti
aad
lods
sahf
mov
repnz
mov
mov
hlt
mov
sbb
xchg
in
fwait
mov
mov
or
sbb
sarb
leave
jl
lods
aaa
in
iret
popf
lret
sub
sub
daa
adc
sbb
jg
pop
push
or
inc
loopne
les
dec
hlt
mov
and
call
std
sub
mov
push
mov
or
inc
incl
push
fstpt
loop
icebp
or
xor
fstpt
sub
lods
fcoms
jle
fucomp
inc
dec
or
insb
or
jbe
jns
push
lret
dec
and
xor
outsl
inc
push
push
in
push
gs
arpl
out
jnp
shl
aam
push
leave
jl
mov
cmp
gs
and
xchg
popf
mov
inc
xchg
pop
xor
jo
mov
lahf
lahf
clc
in
sarb
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
sbb
mov
pusha
js
in
js
sbbb
test
hlt
cli
adc
rolb
mov
stos
adc
push
push
pushf
and
mov
mov
xchg
inc
jo
xchg
mov
jg
dec
pop
jbe
xchg
xchg
inc
pop
sbb
mov
pop
lcall
or
fstpl
mov
out
ss
pusha
sbb
hlt
push
fiadds
adc
pop
xor
stos
sbb
xchg
mov
add
mov
cmp
push
testb
shlb
or
jp
and
xlat
dec
mov
mov
lahf
sub
into
aas
int
insl
mov
push
pop
lods
mov
popa
daa
dec
test
test
xor
push
xchg
shll
mov
or
mov
ds
sbb
lahf
inc
lret
mov
fwait
pop
test
subb
out
inc
mov
loopne
xor
dec
pusha
xchg
mov
jno
cld
nop
out
mov
xchg
sbb
mov
shll
adc
pop
pop
idiv
adc
lods
out
lcall
lods
mov
dec
mov
iret
stos
aas
cmpsb
push
jne
out
adc
pop
mov
fidivrs
dec
popa
pop
stos
cmp
xchg
leave
rsm
shrb
sahf
mov
cmpl
dec
pop
clc
xchg
mov
adc
inc
xlat
aaa
adc
mov
dec
outsb
cld
fisttps
push
mov
and
add
mov
pop
push
xchg
dec
jne
xor
push
scas
sahf
test
adc
aam
xchg
mov
xor
inc
mov
call
pop
clc
mov
pop
ljmp
inc
dec
mull
cmc
fiadds
xor
ja
fildll
push
mov
mov
mov
push
call
cmp
stos
fxch
dec
andb
aad
sti
test
paddw
and
jg
mov
ds
inc
cmpsl
xlat
addr16
ficomps
jo
int3
sarl
shr
sbb
and
clc
ja
mov
fcmovbe
mov
push
pop
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
pusha
in
jle
js
in
js
lods
add
notb
js
or
out
lds
pop
ja
adcb
testb
adc
lods
dec
out
js
sub
sub
xchg
outsb
ret
dec
adc
xor
mov
in
in
sbb
bound
addb
lret
push
and
mov
leave
cmp
dec
xchg
int3
into
adc
test
adc
sub
jbe
adc
fidivrs
inc
mov
jecxz
cmpsl
xchg
fidivl
sub
das
sub
and
jae
sub
into
faddl
adc
xorl
mov
sbb
sub
jl
fistps
int3
adc
out
jl
push
or
out
jecxz
mov
fs
xorb
or
fwait
mov
pop
test
arpl
pop
ret
or
subb
cmp
popa
mov
lods
dec
testl
cmpsl
xor
lcall
sbb
lea
les
jns
and
sbb
ret
lods
testl
add
ret
fistl
push
test
pop
mov
daa
lcall
jbe
dec
gs
push
cmp
test
jno
mov
call
lcall
mov
adc
sbb
imul
test
mov
in
adc
daa
inc
sbb
and
jns
jmp
in
std
cmp
push
fsubp
xchg
adc
fwait
out
mov
dec
sahf
sbb
mov
cli
jl
mov
cmpsl
popa
stos
mov
leave
pop
lahf
add
sbb
xchg
fistl
or
mov
mov
mov
cwtl
adc
cs
shrw
decl
xlat
mov
mov
inc
sub
ret
jns
push
imul
dec
out
push
adc
adc
inc
sahf
lcall
inc
fwait
pop
lods
dec
push
subb
imul
mov
ja
dec
neg
xchg
jns
cwtl
popa
neg
mov
mov
xor
ret
sub
les
push
les
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
loopne
shr
imul
jle
js
shl
stos
in
jg
int
mov
out
aaa
push
lahf
pop
mov
cmpb
mov
dec
sarl
sbb
sub
xor
into
sbb
mov
mov
dec
in
shll
sub
inc
jnp
xchg
mov
test
jns
stos
pop
gs
test
repnz
jb
push
mov
mov
dec
or
jge
adc
gs
dec
inc
xchg
sbb
jp
cmp
push
sub
mov
orl
decl
shlb
gs
arpl
inc
iret
mov
xchg
dec
ja
add
dec
jge
mov
fnstcw
imul
xor
xchg
jns
inc
daa
mov
or
fistpll
test
adc
sbb
or
sub
sahf
mov
hlt
lea
fdivs
and
sub
adc
lret
xchg
out
jb
mov
lcall
and
mov
into
or
and
call
fisubrs
out
mov
push
lock
jno
inc
ja
mov
jl
int3
inc
fwait
adc
arpl
filds
repz
dec
fisubl
jp
mov
fisttps
adc
pop
sub
push
add
jne
icebp
jg
mov
stc
dec
shll
mov
sub
cmp
in
arpl
xor
jmp
gs
push
mov
outsl
leave
or
mov
int3
in
addl
jge
fisubs
cltd
mov
pusha
or
flds
jno
iret
xlat
mov
jp
cmc
push
in
xchg
sub
jae
fsubs
shl
cmp
sbb
cmp
push
outsl
lods
pop
test
and
push
cs
inc
rolb
cld
jp
add
or
inc
mov
inc
sti
fcomps
cmc
add
dec
call
cwtl
xor
and
scas
sub
out
jge,pn
mov
mov
lds
jno
repz
inc
out
daa
pop
xchg
daa
and
xchg
mov
int
mov
mov
nop
addb
subl
or
test
sbb
push
cld
test
xchg
pop
xor
insl
and
arpl
rorl
scas
xlat
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
xchg
test
js
jle
js
mov
enter
xchg
outsl
xchg
sub
jecxz
emms
outsb
cmpsl
loop
in
out
out
push
ja
daa
rolb
inc
shrl
shl
sbb
inc
iret
das
dec
pop
stc
in
mov
lret
dec
inc
or
mov
mov
in
adc
pop
add
adc
and
push
fsubrp
jge
movsl
push
imul
jns
mov
lahf
add
push
int
lea
cmp
pushf
jnp
and
sub
mov
push
adc
addl
mov
andb
fs
xor
push
sahf
shlb
mov
mov
rclb
fdecstp
pusha
test
mov
adc
mov
les
aad
push
jne
push
pop
push
dec
in
int
bound
into
cli
xchg
rolb
faddl
pusha
dec
and
and
insb
aad
xor
lds
fists
xchg
pop
imul
xor
or
pop
stos
dec
cbtw
jg
aad
stc
or
lods
mov
mov
cmpsl
scas
outsb
test
mov
test
jg
xor
sbb
test
cmp
mov
xchg
jb
test
push
loop
in
mov
rcrb
xchg
aam
aas
xor
in
inc
xchg
adc
inc
scas
jne
dec
sahf
xchg
stos
cmp
gs
xchg
dec
std
imul
jmp
mov
cld
inc
jmp
mov
repz
mov
mov
out
clc
imul
push
and
push
add
mov
popf
adc
insw
dec
push
lods
sub
int3
jnp
cmp
ja
stos
add
sbb
sbb
out
sbb
fdivrp
into
je
test
push
mov
stc
push
fyl2x
insb
smsw
gs
xor
sahf
aad
sbbb
and
test
push
jmp
sbb
pusha
movsb
aas
cmp
pop
faddl
and
sbb
pop
mov
push
or
cltd
jno
mov
dec
lcall
sub
fdivrs
mov
sub
test
lds
rcl
pusha
fcompl
jae
fiadds
dec
mov
ret
jb
jo
cmp
mov
add
addl
add
ret
rol
fcmovnu
mov
pushf
lret
mov
in
js
push
and
dec
dec
push
cld
inc
mov
cld
cmp
and
lret
loopne
and
nop
add
mov
push
dec
and
push
movsb
repnz
dec
add
fwait
cld
stos
and
leave
add
negl
jno
ds
fstpl
dec
pop
test
adc
mov
mov
lock
fsubrl
mov
jmp
sub
mov
out
lcall
jmp
cmp
jns
jmp
sub
rorl
leave
push
lds
aaa
idivl
ret
xchg
stc
icebp
enter
add
testb
mov
cwtl
pop
or
sar
insb
rolb
mov
inc
aam
xor
lock
popf
cs
popf
hlt
xchg
push
jge
push
add
rolb
fists
addr16
cmpsb
pop
mov
loop
je
lret
pop
cmpb
sbb
into
nop
xlat
nop
dec
pushf
push
ss
add
sbb
fisubrl
push
dec
pop
sub
enter
mov
into
test
loopne
mov
push
bound
or
test
aas
pop
push
imul
dec
sub
sbb
mov
out
aaa
pop
movsb
push
ja
leave
ret
flds
fwait
int
push
filds
iret
jno
stc
ss
mov
and
lret
jmp
adc
jecxz
sbb
out
fwait
sub
cmp
fildl
or
and
dec
inc
insl
cwtl
jge
xchg
fs
in
xor
pop
xor
or
clc
ret
in
mov
pop
loop
cltd
mov
pop
rep
add
in
xor
add
enter
gs
sub
inc
les
inc
push
stos
aas
push
sub
inc
sbb
pop
or
outsb
xchg
dec
pop
inc
xchg
lcall
cmp
sub
and
sahf
inc
xor
xor
arpl
xchg
add
push
inc
cmpsl
add
popf
xlat
mov
je
sub
push
push
inc
adc
imul
call
out
les
mov
imul
inc
hlt
cmp
mov
jmp
int
ror
fcmove
leave
sub
sbb
movaps
jle
js
fistl
xchg
pop
or
loope
fldenv
sbb
std
in
shlb
ret
inc
push
mov
aad
xchg
mov
xchg
sbbb
outsb
mov
add
sub
sbb
in
hlt
and
fdivs
cmpsb
push
and
insl
test
stos
fbld
lods
mov
jns
xor
gs
xchg
outsl
pop
pusha
or
xchg
daa
jge
jbe
xchg
jbe
aam
cmp
mov
js
and
pop
inc
mov
xchg
outsb
sub
pop
lods
dec
cltd
insb
inc
rol
jmp
or
js
inc
loopne
popa
lock
es
cmp
or
mov
shlb
lahf
or
mov
stc
je
hlt
inc
je
cwtl
sub
clc
pop
call
enter
aas
jne
sti
pop
jl
xchg
xchg
inc
pop
fisubrl
add
das
test
ljmp
add
fnstcw
jo
pop
mov
jge
cmpsb
add
call
mov
daa
and
and
inc
pop
in
lret
xchg
push
jnp
pop
mov
stos
pop
dec
popa
inc
aam
dec
mov
mov
xor
jmp
mov
xchg
int3
mov
dec
cltd
mov
jg
rcrl
hlt
scas
add
adc
jbe
add
sbb
das
pusha
aas
mov
jb
repnz
push
fmuls
cwtl
scas
stos
or
lock
stos
push
mov
inc
inc
shl
divl
cmp
jle
faddl
xchg
dec
aaa
xor
addr16
xor
xchg
mov
fmul
jecxz
jmp
xchg
addr16
cltd
scas
inc
pop
and
jge
adc
sahf
and
add
rcll
lret
mov
andl
dec
mov
mov
ret
push
scas
fldt
mov
sbb
std
or
or
out
scas
inc
test
stc
lock
xchg
andl
pop
cmp
aad
mov
sub
addl
push
pop
and
testl
repz
push
mov
jae
push
out
lds
negl
fwait
out
pushf
push
icebp
pop
xor
es
add
push
lret
dec
jle
outsb
push
outsl
dec
mov
lar
xor
loope
mov
xor
add
jmp
mov
xor
add
jmp
ret
xlat
data16
cwtl
stos
leave
pop
jno
js
jle
js
aas
inc
pop
mov
jp
daa
mov
cld
lret
add
sbb
mov
outsl
in
mov
ds
mov
arpl
pusha
cmpl
iret
xchg
scas
xlat
xchg
ret
cwtl
cltd
lret
cmpsb
adcb
out
pusha
dec
push
nop
dec
pushl
loope
push
imul
mov
xor
out
cmc
adcb
push
cmp
sub
aam
pop
xor
sbb
dec
cmpsb
shl
daa
push
adc
loopne
ljmp
add
shrb
int3
push
dec
cwtl
test
xchg
jae
add
negb
xchg
fwait
and
lahf
mov
int
sti
not
pop
in
enter
mov
int
push
jns
mov
or
std
les
jnp
sbb
cs
mov
xchg
push
arpl
pushf
sub
adc
roll
popa
jae
mov
test
andb
mov
add
mov
jae
sbb
int
cld
ret
movsl
push
jns
out
fwait
int3
mov
mov
xchg
and
loopne
pop
fmul
add
loope
outsl
fs
cld
mov
leave
out
bound
and
sbb
pushl
dec
cmp
jle
cltd
sbb
adc
mov
ja
inc
fcomp
imul
lret
mov
test
fistpll
ror
push
loopne
pop
pop
xchg
pop
rcl
ror
xchg
mov
fidivs
jne
or
adc
imul
lock
cmpsb
mov
mov
icebp
ds
aas
xor
pop
push
mov
cs
les
and
jg
sti
and
adc
outsb
push
lods
cmp
repz
scas
out
push
pop
adc
sbb
insb
in
dec
sub
ret
and
std
jne
pop
dec
mul
inc
jno
call
test
mov
mov
cmpsl
push
adc
pop
and
cmp
fidivrs
into
pop
cwtl
sbb
xor
fwait
add
rcll
pop
xor
cmpsb
fiadds
mov
or
je
shl
inc
inc
jnp
adc
xor
in
ljmp
in
xchg
cmp
addl
add
int3
xlat
enter
shll
std
xchg
sbb
cld
ja
js
jle
js
daa
or
xor
cmc
es
out
cwtl
in
fwait
ret
lods
jge
pop
dec
aad
dec
sub
and
lahf
movd
lahf
data16
ss
call
pushf
cmp
dec
jo
sub
and
imul
test
pop
xchg
xor
jne
sbb
sbbl
or
ret
aas
mov
mov
mov
daa
or
sarl
pop
popf
stos
cmp
jo
sarb
push
inc
lods
fsubrs
pop
mov
scas
mov
repnz
loop
jo
lods
out
jge
jmp
and
fsts
sbb
dec
out
out
mov
pop
shll
notl
xchg
inc
mov
jge
pop
pusha
push
mov
inc
js
arpl
adcb
imul
xlat
sub
and
rclb
mov
sub
enter
jle
cli
cld
je
cmp
sbb
into
and
aad
enter
es
or
insl
pop
ret
jp
push
lods
lahf
push
mov
xor
mov
adc
aad
mov
nop
lods
pop
dec
iret
xchg
cs
mov
dec
sub
shlb
scas
lods
vprotd
lret
sbb
icebp
lods
repz
mov
faddl
jno
lods
ficoms
lds
hlt
xchg
mov
push
dec
je
jle
lahf
jae
push
xchg
fbstp
fprem
sub
cmp
lock
pop
aaa
out
inc
mov
mov
scas
cmp
stos
and
pop
fcompl
movsl
clc
mov
sti
xchg
dec
inc
lock
adc
inc
mov
fcomi
mov
xor
orb
fs
addr16
push
stc
jmp
pop
cmc
repz
xchg
xchg
or
movl
imul
mov
or
bound
movsb
jmp
cmpsl
daa
jo
mov
jge
xor
les
cmp
stc
mov
adc
bts
mov
push
mov
jle
pushf
out
sbb
dec
jmp
xor
xchg
dec
cmpsl
mov
pop
pop
jbe
addr16
mov
ret
lret
lret
ja
inc
xchg
scas
pop
jns
lea
movsl
inc
and
fdivrs
lea
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
pop
cli
sbb
jne
js
jle
js
lret
rolb
adc
call
mov
adc
pop
mov
fildll
mov
push
test
dec
xchg
xor
cmpsl
into
inc
and
mov
arpl
call
push
xor
int3
inc
dec
pop
or
add
je
ret
bound
xchg
ss
xor
sbb
js
push
ret
jb
fwait
leave
dec
mov
pusha
enter
dec
mov
int3
and
add
negl
mov
daa
nop
bound
lods
jbe
inc
mov
js
mov
xchg
inc
mov
push
and
stc
sbb
sbb
out
mov
xor
scas
std
add
lcall
cmp
enter
ffreep
out
pop
push
out
sbb
outsb
lret
mov
ds
in
jmp
loop
fwait
popw
rorl
gs
orb
cli
dec
movsb
sub
icebp
mov
int
push
sbb
movsb
pop
stos
mov
imul
test
ja
push
xor
push
inc
inc
inc
inc
repnz
dec
adcb
lock
sbb
jnp
dec
sub
arpl
in
outsl
or
mov
jp
jecxz
push
sub
arpl
jle
inc
movsb
adcl
js
lret
neg
setb
push
mov
add
je
movsl
dec
ret
iret
adc
fwait
das
pop
xlat
sahf
movsb
jmp
adc
mov
jb
shll
stos
nop
rorb
mov
test
pusha
push
push
mov
test
mul
ret
out
bound
cmp
lea
mov
dec
jb
jle
movsl
test
div
scas
out
jge
jbe
std
push
jle
sbb
int
mov
int3
fisubrs
dec
jo
addl
loopne
outsb
sbb
stc
sub
xchg
pop
test
out
mov
mov
je
jbe
fidivrs
jl
adc
aas
pop
or
jno
icebp
insw
cmp
cmp
inc
iret
cli
inc
mov
xor
and
inc
xlat
jge
jae
mov
jl
mov
pop
push
insl
ret
hlt
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
jmp
mov
js
jle
js
cltd
aaa
inc
xchg
cmp
addl
mov
mov
aam
in
pop
and
sbb
faddp
imul
out
xchg
cmp
xor
subb
mov
ret
pop
cmp
insl
pushf
repnz
scas
push
pop
mov
mov
mov
stc
sbb
sub
nop
add
imul
pushf
inc
das
mov
mov
incb
fistpl
push
movsl
xchg
cmp
clc
adc
mov
push
in
js
stos
mov
or
xchg
orb
inc
sub
fwait
inc
sbb
iret
mov
jae
shrb
sbb
push
xchg
jo
sub
jecxz
je
adc
mov
or
test
das
loope
sub
rcl
pop
clc
inc
jge
xchg
pop
pop
sahf
jp
enter
inc
mov
lea
jno
pop
sarb
jg
movb
jb
mov
movsb
push
shrl
idivb
mov
xchg
pop
in
cmp
or
mov
loop
pop
into
add
xor
inc
xchg
stc
and
sub
fimull
stc
daa
repz
and
loop
movsl
jno
xchg
and
push
mov
gs
push
sbb
js
mov
loopnew
mov
or
test
or
mov
push
test
cmpsb
bound
mov
outsb
xor
jl
cmp
sbb
daa
cmp
pop
lret
dec
push
rcr
mov
cmpsl
sbb
dec
lcall
dec
stc
je
lahf
rorb
lret
mov
insl
pusha
aam
mov
in
and
aaa
inc
inc
mov
mov
loop
or
mov
xor
insl
xchg
cmp
add
pop
ret
imul
scas
loop
xchg
mov
jle
pop
push
int3
mov
in
sbb
xchg
adc
cli
jns
pop
mov
stos
xchg
dec
mov
test
pop
mov
aaa
dec
in
repz
fildl
mov
or
mov
xor
pop
imul
fwait
pushf
or
dec
repnz
jge
mov
mov
jmp
enter
cld
imul
insb
inc
js
js
jle
js
and
xlat
pop
sub
fisttpl
pop
xchg
insb
pop
jnp
xchg
mov
aam
ret
test
mov
mov
xor
sub
aaa
jmp
aaa
ljmp
sbb
add
pop
test
clc
int
mov
lret
mov
inc
pushf
pop
sbb
dec
loop
rcr
sub
or
xorl
out
aam
cmc
jle
xor
hlt
dec
dec
insl
jne
outsb
test
repz
sbb
mov
in
out
and
ficoms
test
ret
push
jle
push
mov
mov
lea
clc
xlat
jge
add
cld
jnp
pop
in
gs
sub
add
adc
jnp
pop
pop
jae
mov
bound
add
adc
icebp
stc
sub
add
pop
dec
mov
inc
push
out
adc
pop
stc
mov
scas
mov
push
mov
fs
jp
rolb
add
popa
mov
and
ja
loop
out
insl
sbb
adc
mov
xchg
pop
pop
fwait
cmp
inc
ror
add
cltd
cli
fbstp
pop
mov
int
mov
mov
inc
dec
scas
in
leave
sti
xor
clc
dec
shlw
xchg
fildll
jl
lret
test
jecxz
and
popa
jecxz
add
addl
sub
int
fstl
xor
xchg
mov
call
cmp
lcall
mov
sbb
sub
inc
test
negl
inc
lcall
mov
xchg
cmpsl
and
mov
sub
xchg
xchg
inc
int3
lret
mov
ljmp
jecxz
and
xchg
scas
mov
lods
je
mov
fwait
add
jmp
or
dec
fldl
mov
ss
fildl
orl
aam
sbb
insb
loope
dec
and
or
into
xor
or
loop
dec
loope
xchg
ret
add
cmpsb
mov
aad
ret
fwait
mov
fwait
test
imul
mov
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
mov
jge
js
jle
js
rcr
mov
pop
pop
push
cmc
fmull
cld
arpl
adc
push
xor
mov
insb
adc
push
ret
in
setge
xor
jae
sahf
fs
xor
aaa
jmp
jbe
cwtl
mov
imul
xchg
test
das
add
xchg
in
xchg
inc
and
clc
inc
int3
faddp
or
pop
test
inc
ret
fbstp
cmc
jno
idivb
cmp
jl
int3
lock
xor
dec
xor
hlt
fdivrp
and
mov
inc
fdivs
mov
add
repz
daa
push
and
inc
inc
outsb
int3
dec
test
loop
call
push
xchg
insl
dec
and
add
imul
cli
ss
push
jns
mov
fstl
outsl
adc
fdiv
addr16
inc
and
xor
dec
sahf
jge
sbb
xchg
fwait
dec
int
test
mov
push
out
aad
push
or
xorb
pop
mov
imul
sbb
jnp
mov
sbb
and
stc
or
xchg
jg
out
mov
cmp
das
fisttpll
mov
mov
or
repnz
jmp
out
jp
aad
inc
mov
add
push
jnp
loopne
inc
push
push
call
or
inc
mov
mov
dec
lds
in
fldenv
aam
xchg
jmp
adc
dec
jo
mov
arpl
movsl
jecxz
mov
cli
cld
je
nop
cmp
xor
sub
dec
scas
xchg
aad
jl
adc
outsl
sub
jge
gs
mov
cmp
cmp
adc
xchg
test
pushf
xchg
fldt
mov
cmp
pop
out
lahf
or
aaa
cmpsb
test
pop
cmpsb
mov
mov
jmp
dec
sbb
and
lea
inc
mov
add
mov
sbb
repz
jp
mov
adc
fucom
in
test
out
je
imul
aam
sub
cmp
cmpsl
mov
add
fsubrl
inc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
adc
xchg
add
in
js
add
add
sti
mov
mov
mov
sub
add
leavew
xlat
pop
testb
in
rcl
fistl
push
jp
sbb
adc
xchg
jl
cmp
cmp
jp
jecxz
or
aam
fildll
add
xor
push
jae
jp
xchg
imul
mov
jp
test
addr16
xor
sahf
mov
fsubrl
lret
mov
push
jl
dec
icebp
loope
movsb
lret
mov
leave
pop
stos
cmpl
ljmp
out
test
imul
inc
cmp
lret
jecxz
test
cmp
xchg
push
insb
pop
add
pop
dec
jns
int
pop
fucomip
jmp
lods
push
ljmp
movsl
imul
ja
divl
cmpsb
pop
lods
lea
adc
aas
faddl
das
rcrl
pop
sbb
stos
pop
sub
test
adc
push
push
adc
ljmp
pop
and
pusha
adc
test
popf
insl
push
pop
mov
js
daa
mov
in
call
sub
push
fcoms
xchg
dec
lods
insb
lcall
out
sarb
into
mov
jge
addr16
pop
fidivrl
scas
xor
xor
sub
pop
mov
cmp
fidivs
mov
fidivrl
push
sahf
lock
les
lahf
scas
dec
sbb
lea
out
push
mov
xor
pop
scas
sbb
lret
inc
pop
inc
cmp
addl
xor
pusha
stos
mov
mov
out
jbe
lret
jge
or
leave
insl
push
or
out
cmpsl
out
lcall
dec
jb
mov
push
inc
pop
cmp
movsl
mov
jmp
outsl
fidivl
lods
mov
shrb
mov
imul
inc
orl
mov
push
int3
mov
mov
stos
jle
lcall
add
lcall
and
mov
outsl
out
sub
mov
es
jecxz
pop
popa
hlt
sbb
lea
repnz
movsb
xor
fs
movsl
fisubrs
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
and
push
inc
add
jg
in
js
pcmpeqd
out
lahf
xchg
xor
inc
push
clc
or
iret
or
adc
enter
shrb
sub
push
outsb
movsl
add
and
aad
ljmp
ja
cld
repnz
push
roll
out
mov
sub
sub
sub
cmpsl
mov
data16
pop
lret
mov
arpl
fnstsw
dec
int
mov
sti
inc
sub
cld
inc
rol
push
sbb
ss
daa
jae
or
push
lahf
pop
in
icebp
or
into
xchg
sub
mov
lahf
in
mov
xlat
int3
addl
in
aam
movsl
pop
mov
into
pop
cmp
mov
cmovo
push
adcb
mov
xor
add
stc
mov
or
orps
push
enter
shll
test
movsl
cwtl
adc
or
jmp
mov
cmp
leave
xchg
mov
cmc
les
into
mov
pop
mov
adc
and
lret
scas
fcmovnu
int
jne
dec
cmp
stos
mov
loopne
ret
or
push
sub
jmp
daa
xchg
pop
jns
push
jns
test
xor
add
fmull
mov
push
and
or
and
outsl
jmp
push
inc
mov
leave
std
mov
int3
push
je
xchg
pop
dec
xchg
sbb
mov
jl
or
lods
addr16
jecxz
ljmp
cmpl
cld
and
mov
dec
xor
addr16
fdivs
cmp
jnp
in
in
out
cwtl
inc
aad
icebp
jp
imul
push
dec
sbb
push
out
pop
jmp
sar
ja
cmp
ljmp
ficoml
cmpsb
lret
call
inc
lock
ss
or
pop
jl
adc
jbe
and
fisttps
lds
aam
rorb
sub
flds
sarl
lods
inc
mov
mov
mov
ret
std
lods
jecxz
push
dec
scas
es
mov
jo
rcll
mov
cld
popa
aaa
xor
scas
sti
mov
jmp
rol
leave
rcr
rcr
enter
addl
js
jle
js
adc
orl
xchg
and
or
push
dec
out
mov
sahf
jno
or
cmc
imul
les
lahf
sbb
push
dec
and
shll
mov
repz
scas
xchg
loop
mov
movsb
divb
jmp
sub
push
cmpsb
ss
jp
xorb
faddp
fimull
leave
push
pop
inc
sub
clc
mov
out
dec
xor
inc
call
mov
xchg
jo
hlt
ret
mov
out
test
jbe
enter
adc
icebp
out
lea
or
mov
xor
bound
mov
push
xor
push
sti
je
shrb
xor
xchg
sar
je
mov
xchg
cltd
push
pop
movsl
insb
and
mov
in
push
repz
outsb
cltd
inc
push
ret
add
inc
sbb
jnp
test
mov
inc
cmpsb
add
xchg
pop
dec
stos
push
dec
mov
lds
mov
enter
movsb
loopne
popa
scas
cmp
shll
cmovno
push
mov
test
mov
sub
arpl
push
pop
sub
sarl
and
cli
mov
push
pusha
mov
cmp
pop
movsb
aam
lock
jnp
not
cltd
loopne
xchg
xor
and
pop
arpl
push
cmp
and
mov
dec
rclb
mov
cmp
push
lahf
mov
xor
xchg
mov
pop
test
dec
out
mov
mov
sub
add
or
mov
and
hlt
push
call
dec
add
jmp
cmpsb
xlat
mov
cmpl
sub
lds
daa
push
inc
ret
pop
fcoml
add
outsb
ret
inc
daa
cwtl
push
fldt
jge
mov
jge
sub
and
sbb
jb
bswap
pop
fstpt
std
pop
lahf
sti
fdivrl
js
ficomps
ljmp
xor
adc
out
rorb
fs
test
sub
iret
enter
fistpl
cli
scas
js
mov
jbe
sbb
into
sbb
pop
movsb
test
addl
add
aas
int
aam
mov
pop
daa
jecxz
add
js
jle
js
shlb
mov
fisubrl
push
or
imull
test
leave
or
das
cmpsl
ja
mov
lret
lret
jno
or
dec
test
fidivs
mov
push
adc
add
clc
inc
xchg
adcb
xchg
data16
jp
adc
scas
xchg
scas
mov
das
mov
add
mov
ds
mov
int
jae
pusha
pop
mov
repnz
xor
in
xchg
out
dec
sahf
lock
mov
insl
cmpsl
test
out
cmp
subb
fcmovnu
std
mov
sbb
scas
loope
jbe
pop
adc
rol
fcmovu
test
mov
testb
mov
jns
ud0
push
mov
movsl
inc
mov
jmp
sahf
xor
push
popf
mov
out
cmp
xchg
xchg
cli
insb
mov
orl
icebp
sarl
es
test
insl
nop
push
out
xor
shll
xchg
cmpsb
mov
fldl
jmp
jp
dec
jae
iret
or
inc
dec
cld
xchg
dec
cs
mov
imul
or
mov
sbb
mov
xchg
push
scas
nop
mov
test
mov
jp
jbe
pop
and
dec
sbb
pushf
ret
add
mov
imul
fdivl
jmp
nop
xchg
repz
outsl
fwait
xchg
xor
sub
inc
rcll
cmc
cld
lods
loop
cmp
xchg
xchg
int3
aad
cmp
aam
pop
out
fsub
test
mov
rol
jo
pop
clc
rep
or
mov
xchg
not
mov
xchg
cs
push
jns
mov
jg
and
cmp
fadds
cmp
xchg
stos
mov
jnp
sub
lret
pushf
or
js
out
int
in
or
add
mov
cltd
inc
nop
jae
mulb
imul
or
jo
out
push
lock
push
jae
mov
test
arpl
outsl
pop
mov
jbe
rorl
mov
das
push
stc
shrl
mov
gs
sahf
mov
mov
clc
lcall
and
or
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
rorl
js
jle
js
xchg
cmc
out
fcoml
add
out
mov
movsb
and
and
lock
sbb
hlt
sub
adc
fadds
push
enter
pop
sbb
push
mov
loopne
xchg
cmp
xor
js
dec
cmp
xor
jne
mull
xor
inc
stos
push
cltd
int3
fsubp
push
insl
jp
mov
inc
dec
fisubs
ljmp
out
pop
dec
cmp
push
dec
pop
mov
jmp
push
mov
out
ss
enter
or
mov
stos
xor
inc
iret
fnstsw
push
xchg
xor
out
jmp
lea
jle
data16
inc
lds
push
adc
test
adc
xor
test
adc
hlt
push
bound
jno
or
mov
popa
cmpsl
dec
pop
jle
loopne
fwait
add
dec
leave
lock
xor
imul
mov
xchg
inc
je
lods
and
loopne
mov
fdivrl
adc
leave
mov
outsl
mulb
pop
and
or
mov
fistl
inc
add
sbb
add
jo
adc
int3
jl
lds
call
lidtl
popa
pop
and
sub
adc
xor
push
pop
bound
mov
sub
lret
inc
rcr
mov
movsb
mov
lcall
mov
pop
mov
mov
cmc
pop
test
add
xor
inc
sbb
dec
mov
inc
xchg
mov
mov
xor
cld
in
xor
test
jl
mov
les
mov
push
in
into
inc
pop
mov
adc
cs
into
lods
xchg
lret
out
jmp
jmp
jne
adc
mov
cli
stos
mov
hlt
cwtl
insb
push
cmp
push
fdivrs
jnp
mov
loop
pop
test
push
sub
outsl
mul
sbb
jno
repnz
movsl
sbb
cwtl
xorb
cvtps2pi
frstor
notl
jecxz
movsl
out
inc
sub
xchg
push
cmp
jns
mov
xlat
mov
jmp
lret
ret
vpand
ret
adcb
jg
in
js
jno
xchg
das
push
add
inc
pusha
ds
cmp
call
xchg
push
dec
inc
les
dec
call
jl
xor
sbb
call
incl
subb
adc
stos
add
addr16
mov
xor
mov
addr16
popa
daa
cmp
sbb
inc
data16
dec
test
cmp
icebp
sti
pop
jne
fwait
cmp
stc
or
inc
std
lock
faddl
jno
mov
push
lods
outsb
pop
out
mov
inc
and
popa
pop
xchg
add
dec
mov
popf
pushf
fistpll
test
xchg
cld
push
xchg
movb
xor
mov
fimuls
adc
faddl
lods
push
xor
push
or
mov
cmp
or
loope
xchg
xchg
loope
add
addr16
pop
mov
cs
imul
cmp
cld
dec
fisubrl
sahf
jb
aaa
lcall
mov
ja
insl
pop
pop
mov
in
pop
movsb
jnp
sub
push
ret
rcl
push
push
cmp
jge
sbb
dec
arpl
pusha
mov
into
shl
or
cmp
cmpsl
scas
not
subl
inc
rorl
mov
cmpsl
dec
pop
and
clc
lock
inc
xchg
mov
inc
sahf
adc
jbe
lret
mov
mov
addl
mov
cli
pop
push
jg
pusha
mov
jmp
das
imul
scas
pop
xchg
cli
fisubrs
rcrb
xchg
loop
adc
out
outsl
pop
cltd
mov
add
push
adc
mov
xchg
stos
mov
je
add
mov
pop
loopne
gs
add
adc
popa
mov
dec
pop
xor
add
xor
shlb
aaa
jl
jge
mov
mov
xchg
fistl
lahf
sub
jecxz
lret
jnp
push
inc
add
pop
sub
mov
lds
jno
mov
or
fs
push
int3
xor
dec
xor
int3
jge
pop
jnp
rol
scas
jmp
out
xchg
outsb
aad
lods
push
mov
sbb
stos
push
lcall
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
arpl
sbb
js
jle
js
outsl
add
jle
and
xchg
xor
dec
xorl
dec
fidivrs
loope
jle
insb
lods
push
and
sar
dec
popf
ret
clc
fnsave
lcall
mov
popf
xchg
ss
pop
xor
fdivrp
pushl
sub
cmp
sahf
mov
faddp
mov
pushf
and
xchg
sbb
dec
jne
sbb
sbb
and
inc
xchg
cli
mov
mov
fwait
cmp
out
imul
orl
movsb
and
shrl
sahf
fwait
mov
jbe
or
mov
or
imul
daa
add
rol
cmc
mov
adc
fmull
stos
inc
test
into
mov
mov
in
jmp
loopne
test
mov
xor
jae
inc
xor
mov
test
test
stc
sub
adc
insb
cmp
add
lret
xor
in
jge
ja
nop
loopne
fwait
ds
mov
notb
outsb
adc
cmp
mov
and
adc
fdivrl
mov
sub
jge
loope
xchg
inc
pop
and
std
and
jmp
stos
lods
out
mov
ret
test
leave
xor
fs
iret
pop
xor
jne
sarl
sbb
jg
jle
xor
jbe
push
out
adc
pop
sarl
fcomps
aas
mov
mov
mov
adc
shll
lods
icebp
insb
jne
jnp
shlb
xlat
iret
rcrl
neg
fstpl
outsb
int3
das
lret
jmp
cwtl
push
cmp
icebp
enter
sbb
dec
fsts
cmp
dec
outsl
fisubs
jnp
subb
push
shrl
sbbb
inc
push
int3
xlat
pop
clc
icebp
scas
sbb
out
loop
stos
setge
dec
jle
push
mov
xchg
and
pop
add
xor
std
test
ret
adc
mov
aad
inc
movups
xor
cli
and
xchg
int
lret
sub
pop
mov
cmp
ret
push
xchg
inc
fcoml
lds
in
cwtl
jb
fnstenv
rolb
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
insl
stos
push
pop
adcb
js
jle
js
jno
xor
in
pop
mov
cmp
mov
pusha
xor
aas
inc
xor
mov
enter
mov
push
mov
and
fcomip
push
adc
clc
pop
cmp
aas
lea
cmp
cs
out
cs
pusha
dec
das
xlat
jb
rorl
sahf
xchg
in
sub
cmp
cmp
adc
add
cmp
add
adc
dec
insl
rol
jnp
es
scas
or
popl
cmp
mov
and
iret
jae
loope
jp
loopne
push
dec
mov
adc
test
mov
mov
push
pop
les
mov
in
adc
int3
add
cli
push
rcrl
mov
cltd
das
xlat
adc
and
mov
movsl
addl
pop
loopne
push
dec
lds
daa
mov
js
lods
inc
pop
cs
testb
xchg
mov
adcb
dec
sub
mov
sbb
cli
mov
sbb
push
rdtsc
lret
jge
sub
push
jp
sbb
or
call
mov
fistpl
xor
mov
push
sub
test
std
mov
jbe
inc
call
rclb
lods
xor
sbb
cmpsb
pushf
sub
scas
lods
adc
std
pop
movb
xor
cmpsl
cmpl
and
ljmp
in
stc
xor
imul
push
pop
ljmp
jb
inc
inc
xchg
fimull
cmp
sbb
pop
into
sub
je
mov
imul
jb
add
daa
fcom
jno
push
add
ljmp
push
stos
outsb
add
sub
bound
jecxz
mov
pop
iret
out
aaa
mov
movsb
in
jg
pusha
dec
adc
frstor
mulb
dec
inc
clc
cmpb
fdivp
cwtl
in
mov
sub
popf
xchg
adc
jl
xor
mov
mov
jp
ds
mov
sahf
inc
add
mov
sub
mov
test
xchg
xor
data16
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
sub
and
insl
adc
xchg
jle
js
mov
xchg
mov
dec
xor
sub
cmp
aaa
push
inc
clc
mov
mov
mov
aad
adc
cli
shrb
test
pop
arpl
mov
cmp
sbb
gs
jmp
cli
shll
loope
mov
and
insb
and
mov
loope
leave
imul
or
and
inc
xchg
push
jle
gs
cli
pop
fbld
jge
push
push
dec
cmp
sar
pop
out
in
jo
insb
xchg
int3
cmpsl
stos
mov
outsl
jle
repnz
xor
scas
aad
mov
sub
arpl
das
inc
fstps
les
arpl
jo
xchg
mov
punpcklwd
add
or
popf
push
test
ja
jno
inc
dec
lods
jb
popf
bound
sub
aad
cli
add
bound
repz
cmovo
ret
gs
jp
imul
push
or
loopne
clc
gs
fdivl
aam
mov
jae
icebp
shr
push
imul
idiv
cmp
mov
sub
push
fs
and
pusha
mov
and
inc
cli
mov
iret
or
jg
lahf
jnp
bnd
sub
addb
pusha
mov
icebp
pop
cmp
scas
lret
out
cwtl
push
imul
dec
ds
nop
add
addr16
test
xchg
rcr
jg
insl
insl
ret
xor
pop
aas
adc
dec
mov
frstor
aad
sbb
cmpsb
clc
stc
dec
sbb
pop
xor
mov
sbb
mov
cmp
push
mov
daa
test
jnp
push
mov
stos
push
inc
ficompl
push
or
mov
jg
and
in
negl
dec
sbb
mov
cmp
je
arpl
dec
pushf
mov
mov
pop
cmp
pop
jg
push
mov
cltd
push
sbb
xchg
or
and
xchg
pushl
push
jnp
pushf
push
pop
ljmp
cmpsl
loop
or
adc
mov
hlt
iret
pop
mov
mov
fmull
je
aad
in
adcb
enter
std
dec
inc
sti
hlt
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
es
jmp
mov
js
rorb
rcrl
cmpb
hlt
jmp
dec
bound
mov
sahf
jno
and
mov
mov
testb
stos
or
push
push
gs
popf
and
mov
pop
shlb
nop
mov
or
pop
inc
mov
mov
cwtl
push
push
sub
mov
cmp
inc
movsb
mov
or
imul
push
cmpl
stc
sahf
xchg
dec
ds
sub
pushf
cmp
test
out
pop
into
fsts
push
sub
sti
add
mov
mov
dec
fldl
daa
sbb
push
dec
cmp
xor
xor
sti
das
aas
mov
xor
bound
and
sahf
ss
notl
cmp
rcll
or
std
movsb
bound
je
dec
adc
xor
outsb
lcall
cmp
leave
leave
pop
push
inc
loop
fs
pop
outsl
adc
push
out
or
mov
movsl
dec
lret
rcr
fs
lock
movsl
xor
mov
stos
sub
test
icebp
pop
mov
pop
inc
repnz
sub
and
sbb
adc
cmp
add
inc
mov
into
movsb
jmp
xchg
test
daa
cli
push
icebp
lahf
push
jo
jg
test
popa
out
out
xor
xor
loopne
leave
sbb
test
mov
imul
addb
mov
sub
lea
cmp
cs
in
add
jge
sarl
pop
insb
loope
call
sbb
call
mov
mov
mov
pop
movsl
xor
adc
int3
in
or
xor
inc
adc
add
aam
lods
mov
pop
push
fdivr
jmp
sub
subb
or
mov
adc
cltd
mov
push
adc
test
xor
fnstsw
jp
icebp
mov
sbb
mov
iret
dec
lods
hlt
xor
mov
sbb
add
imul
movsl
push
mov
rorb
push
xchg
iret
add
jbe
std
mov
sub
add
int
xchg
add
add
xchg
sbb
dec
mov
push
mov
mov
inc
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
cmp
mov
daa
sbb
xchg
jle
js
ja
mov
add
xchg
stos
ss
lret
mov
movsl
ljmp
xchg
push
push
ljmp
das
inc
dec
ja
dec
fs
adc
out
imul
pop
cmc
xorl
mov
pop
and
add
das
int3
cli
fbstp
mov
enter
xorl
cltd
icebp
addb
lret
push
shlb
in
pusha
jae
mov
out
jnp
or
addr16
std
pushf
movsl
jns
jg
ljmp
jl
fbstp
loop
mov
loop
sub
out
xor
stos
jo
adc
mov
xchg
or
sub
mov
inc
jl
push
jg
sbb
rcr
push
test
ds
add
push
sub
push
movsb
aad
jns
push
ret
sub
jo
cmp
sub
cld
out
rcr
outsl
jl
fsubrp
add
pop
pop
test
mov
popa
jle
pop
push
adc
test
dec
sbb
in
ror
xor
xchg
sub
jp,pn
aam
hlt
mov
xchg
pop
ror
fildl
aaa
fwait
fs
jecxz
cmpl
fcmovnb
scas
shlb
sub
jmp
dec
lret
addr16
pavgb
sub
lahf
jne
dec
int
jbe
or
mov
push
xor
cmp
mov
fcoml
adc
xchg
sub
aaa
pusha
pop
lods
test
aas
cmc
addr16
sarl
xor
fists
xchg
int3
jmp
sub
stos
dec
xor
push
aam
test
ret
sbb
inc
enter
add
mov
cli
cmp
jge
mov
sbbl
stos
sbb
sbb
pop
hlt
scas
or
and
dec
xor
out
es
js
aas
push
insl
clc
xor
fstl
xor
push
rol
adc
stos
sbb
mov
cwtl
mov
cmp
or
mov
xor
xor
sub
fstpl
or
shrb
xchg
mov
out
pop
fdiv
lds
adc
xchg
test
aam
sub
rcrl
andb
pop
cmp
inc
out
dec
push
mov
xor
jns
lret
mov
jbe
xchg
pop
mov
xor
pop
adc
testb
test
add
add
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
aad
sbb
xchg
jle
js
mov
push
push
cmc
out
call
roll
mov
jns
icebp
push
sbb
jnp
xor
fucomip
dec
fstps
lahf
adc
mov
cmp
sbb
lods
xlat
push
loop
push
insl
lods
pusha
fwait
push
adc
add
xchg
inc
dec
sbb
gs
aas
push
sbb
or
jae
scas
idivb
clc
repz
aad
aam
hlt
mov
adc
adc
push
out
ja
imul
sbb
fcoms
xchg
nop
jle
cwtl
fstpt
jp
jl
sub
jmp
movb
jbe
hlt
mov
dec
cmp
mov
adc
in
jno
rorb
js
pusha
lds
mov
fsubs
scas
jg
cmp
or
bound
mov
dec
repnz
insl
lods
mov
and
sbb
leave
in
lcall
stc
pop
sbb
arpl
pop
mov
lock
cld
andl
adc
xchg
push
aam
out
inc
scas
mov
int
call
inc
and
inc
iret
pop
ret
test
mov
or
xchg
out
sbb
sbb
cmpsl
pusha
or
adc
lea
pop
cwtl
loopne
xchg
lods
cmp
imul
sub
pop
test
mov
imul
cmpsl
mov
mov
pop
lret
push
xorl
loope
out
adc
or
xchg
inc
test
jl
cmp
sahf
icebp
cmpsb
mov
pop
lds
inc
mov
xchg
push
inc
out
jle
push
sbbb
sub
dec
fisubrl
lret
js
sbb
loopne
aam
mov
dec
aaa
or
mov
push
adc
sti
sbb
mov
mov
xchg
inc
add
pop
mov
fistps
ljmp
jmp
xor
js
int3
dec
and
add
inc
jo
xlat
jno
and
int3
gs
std
imul
cmc
int3
lret
mov
int3
cmp
mov
adc
mov
mov
pop
mov
or
cld
mov
cli
push
inc
add
imul
inc
ss
add
mov
test
outsl
dec
mov
fdivs
or
hlt
jnp
jns
xor
mov
test
mov
xchg
aam
sbb
inc
adc
push
pop
jle
clc
subb
test
jae
mov
divl
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
popa
sub
fstps
js
adc
cltd
out
sbb
push
lea
xchg
repnz
jmp
movsb
out
pop
les
rclb
lahf
pushf
mov
inc
in
stos
sub
std
xor
fwait
test
push
adc
loop
ljmp
aaa
xchg
cmp
sahf
xor
xchg
js
js
sti
adc
jnp
lret
fstl
or
lret
loopne
sahf
test
push
mov
mov
xchg
jg
mov
or
cmp
imul
adc
into
adc
push
leave
in
movsl
sbb
test
dec
xorl
imul
push
xchg
test
fwait
or
lods
inc
fisttpll
pop
les
adc
push
or
mov
movsl
imul
dec
lcall
jecxz
mov
jle
pop
or
aaa
outsl
out
dec
aam
push
arpl
add
inc
push
mov
xor
inc
sub
mov
sarb
cmp
jae
inc
mov
shrl
sub
int3
aam
push
and
jae
mov
push
xchg
cwtl
daa
xor
mov
xor
dec
push
loope
lods
mov
dec
jmp
lods
sbb
adc
movsl
je
mov
test
jae
mov
sub
xorb
lret
enter
push
inc
mov
aam
sarb
dec
in
jge
xchg
push
ret
inc
cld
push
xchg
enter
cmp
lods
outsb
adc
cli
mov
jle
int3
mov
data16
fimull
icebp
into
jo
or
and
call
adc
and
ja
sub
loope
imul
cmp
fidivl
aad
inc
imul
mov
adc
xchg
rcl
arpl
icebp
shlb
jae
dec
mov
movsl
lret
push
mov
and
mov
insb
jecxz
pop
and
ds
and
dec
lret
jns
jno
dec
mov
sub
bound
ret
pop
mov
adc
xchg
stos
mov
je
repnz
add
divb
ja
pusha
mov
mov
icebp
bound
mov
shlb
shrb
jno
sbb
mov
mov
jae
pop
lea
and
cltd
mov
xchg
cmp
fidivs
dec
test
push
rcll
clc
jmp
jmp
ds
int3
lret
xchg
aam
add
scas
lcall
js
inc
sahf
arpl
or
cmp
mov
mov
jl
mov
sbb
les
and
addr16
loope
sub
pop
outsb
lods
adc
pop
lcall
outsl
add
loope
push
push
call
lcall
mov
push
push
cs
jge
scas
cmp
add
sahf
sbbb
cmc
cwtl
adc
mov
mov
adc
ljmp
xchg
dec
push
or
pop
cmp
jbe
jge
stc
mov
sbb
add
sub
jge
adc
daa
out
lcall
cwtl
add
out
inc
pop
sub
push
fidivrl
dec
outsl
fistpl
pop
cli
adc
loopne
pop
jo
pop
bound
push
add
push
sbb
jnp
lock
das
jns
ds
into
sbb
xchg
test
add
out
cmp
jb
test
movsl
push
cs
rclb
dec
pushf
daa
xor
int
adc
rcrb
jne
fistps
jb
rcr
ljmp
lret
movsb
fwait
shlb
push
pop
in
jns
loopne
in
mov
inc
mov
int
std
data16
sub
push
dec
xchg
sbb
push
xor
lds
jle
arpl
sbb
in
push
and
jl
mov
pop
test
jp
adc
andl
dec
inc
data16
jmp
lcall
xchg
mov
psubusw
and
sub
pushl
lret
push
mov
lods
pop
xor
push
loopne
cmp
cmp
cmc
adcl
notl
or
nop
pusha
mov
push
js
xorb
pop
push
push
jnp
js
fsubr
loopne
adc
or
loope
lcall
sub
rcl
xor
jb
movsb
int
sbb
mov
xchg
mov
scas
jae
push
roll
mov
dec
push
pop
inc
mov
dec
imul
pop
aad
xchg
mov
repnz
ret
stos
sbb
cli
rcrl
sub
and
push
pushf
mov
mov
fs
lock
jge
aaa
xchg
mov
addr16
cld
xchg
arpl
fstps
pop
mov
dec
xchg
repz
cld
jmp
rol
iret
fcmovbe
fcmovne
mov
pop
pop
adc
jle
js
addl
and
scas
mov
xchg
in
mov
mov
scas
jle
repnz
mov
xor
mov
mov
mov
add
xor
or
ficompl
fisttpl
jns
jge
xchg
repz
fcomip
inc
test
rorl
out
xchg
jno
hlt
jbe
and
or
mov
push
sahf
cmpsl
inc
mov
rolb
mov
xor
inc
fdivrs
inc
lcall
out
sub
or
stc
jl
outsl
icebp
sub
xorl
testb
mov
in
pop
pop
testb
aaa
fimull
ljmp
pop
fcompl
adc
insl
outsb
fisttpl
fs
jle
jmp
sub
push
dec
lods
sbb
add
xchg
dec
jle
sbb
mov
add
inc
dec
push
or
jb
mov
push
inc
sbb
xchg
xsha1
cmpsb
lret
fadds
dec
or
mov
fwait
test
nop
pop
ud2
lahf
and
inc
xor
ffree
in
xor
pop
mov
and
mov
gs
pop
mov
cmp
jno
xchg
xor
les
jl
scas
insl
jnp
shll
mov
xchg
icebp
jnp
ud1
mov
mov
pop
mov
xchg
lahf
cmp
adc
push
push
stc
hlt
dec
es
jns
icebp
sub
dec
cmpsb
sti
or
js
add
movsl
cmp
ja
dec
cltd
daa
imul
dec
in
out
rcrb
out
nop
pop
enter
xchg
std
mov
nop
add
cmp
pusha
andl
xor
dec
and
pop
insl
not
cmp
sub
cmp
ret
push
int
jbe
in
rorb
pop
cwtl
adc
jg
inc
nop
aaa
pop
mov
cmpsl
fadds
ret
mov
fwait
out
movl
xchg
cmpsb
mov
out
pop
ret
add
enter
mov
sub
mov
test
mov
jmp
test
fsts
cmpsb
adc
popf
inc
cvtps2pi
out
hlt
xorb
inc
dec
cs
xchg
ret
insl
pop
push
cmp
ds
es
dec
dec
mov
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
jno
iret
push
dec
jl
push
fcmovnb
sub
sub
mov
sbb
and
add
test
lock
sbb
inc
mov
sbb
jl
ljmp
mov
jno
ja
add
jmp
adc
idivb
dec
and
sub
push
out
cmpsb
mov
dec
cld
pop
shll
popa
loop
xlat
pusha
xchg
push
fidivl
call
int
xor
lret
or
lcall
movsb
popf
xlat
in
mov
ror
pcmpgtb
loopne
les
dec
mov
and
nop
sarb
cmp
adc
add
in
pop
shrl
mov
aad
cmp
xorl
cmp
sub
dec
add
nop
mov
xor
mov
or
xor
movl
insl
mov
fdivl
mov
mov
sbb
addr16
pop
jecxz
cltd
sbb
arpl
movsl
ds
dec
cmpb
fisubs
mov
mov
addr16
mov
push
adc
imul
push
or
jae
fisttpll
hlt
fisttps
sbb
xor
mov
sbb
xor
and
pop
xchg
add
out
push
inc
ror
out
lods
stos
add
push
and
pop
fisubs
dec
daa
inc
loop
lcall
jbe
pop
adc
sub
dec
sub
rclb
jne
sub
sub
sbb
shrb
outsl
lcall
cmp
test
fmulp
into
or
or
fists
movsl
add
les
out
mov
dec
in
dec
push
cmp
jl
xchg
mov
add
adc
sbb
sbb
adc
sub
jb
sbb
inc
sub
mov
iret
mov
inc
jg
pop
pop
mov
cs
adc
test
mov
scas
idivb
mov
jns
inc
leave
xor
cmp
cmp
xchg
sti
dec
mov
aam
popa
pop
outsl
push
fidivl
fdivrs
cmp
sbb
imul
pusha
cli
add
pusha
jp
mov
jbe
mov
out
aas
xor
cs
ds
insb
les
cmp
dec
mov
jmp
add
mov
add
ret
xlat
leave
rcr
rcr
xlat
cmp
pop
inc
sub
xchg
jle
js
sub
add
cs
pop
or
lcall
cmp
xor
std
sbb
cld
mov
arpl
and
sbb
sbb
inc
xor
cmpsl
push
inc
jl
xchg
pop
lcall
xchg
jno
insb
cli
insb
sbb
fdivrs
sbb
aas
push
mov
xlat
xchg
movsl
aam
pop
lods
fwait
pop
pop
mov
xchg
jns
clc
int3
mov
mov
in
mov
shlb
pop
xchg
hlt
jecxz
int3
repnz
inc
or
lock
mov
cmp
pop
push
adc
mov
push
add
jne
lock
jno
cwtl
mov
add
in
dec
out
mov
cmp
jg
mov
inc
fcompl
jmp
in
pop
mov
mov
sbbb
mov
push
jg
mov
in
mov
sub
pop
and
adc
sti
hlt
lods
jno
enter
add
aas
mov
in
xchg
das
or
iret
jo
stos
dec
mov
ljmp
popf
and
push
jo
into
adc
mov
arpl
mov
dec
dec
mov
xchg
mov
jp
or
fmulp
ficoms
ficompl
outsb
insb
aad
ret
fsubrs
scas
jmp
out
popf
sbb
xchg
repnz
popa
or
icebp
loopne
add
mov
xchg
int3
xchg
pusha
cmp
call
inc
shlb
arpl
nop
mov
adc
or
xor
outsl
movsl
enter
sub
pop
or
mov
dec
loop
mov
jbe
es
push
and
jbe
shlb
movsl
lods
lea
mov
mov
add
orl
push
stc
inc
pop
mov
mov
in
cmp
data16
pop
jne
test
cld
adc
sbb
mov
and
inc
mov
push
mov
popa
mov
dec
into
std
test
gs
push
xchg
dec
push
push
xchg
cmp
aad
das
push
mov
orl
loopne
sbb
popf
loopne
mov
mov
scas
inc
call
mov
xchg
sbb
xor
aas
out
fisttps
inc
cmpsb
lret
xchg
andb
nop
xorb
lret
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rcrb
es
xchg
jle
js
loopne
push
dec
cmc
push
jg
dec
adc
cmp
push
sbb
loop
mov
inc
repz
cld
enter
andb
pop
mov
mov
and
mov
cmp
sahf
or
sub
push
xchg
jecxz
xor
sbb
cmp
std
pusha
pop
sub
or
addl
inc
jl
or
push
jae
jns
cltd
inc
mov
mov
mov
mov
xor
jae
addb
movsb
lret
std
js
out
mov
xor
addr16
ja
je
jbe
loope
jne
out
dec
mov
jo
test
sub
jecxz
daa
notl
xchg
pop
shll
push
adc
outsl
adc
mov
or
xchg
sub
stc
sub
pop
add
push
and
pop
iret
push
adc
mov
mov
cmpsl
loopne
daa
fwait
out
incl
pop
outsb
ljmp
lods
stc
inc
pushf
in
jg
addb
mov
sub
inc
xor
inc
rorl
mov
push
push
push
inc
and
mov
adc
fstpl
push
xlat
ss
aad
add
mov
mov
into
push
pop
pop
gs
shl
data16
movsb
inc
and
mov
cmpsl
lahf
out
and
sbb
sub
jne
xchg
call
xchg
jne
fdivs
lds
sti
mov
popa
stos
addr16
add
sub
inc
mov
pop
cs
es
iret
jl
adc
iret
dec
mov
xor
lods
in
dec
scas
xor
mov
ret
addr16
xchg
xchg
pop
arpl
dec
add
sbb
xchg
imul
jne
xchg
stos
inc
mov
push
jno
jmp
daa
push
into
cmc
pop
jbe
test
aam
outsl
out
pop
mov
fdiv
ds
jae
dec
mov
fdivrl
lds
cmp
sbb
pushf
test
fcoml
xchg
mov
mov
push
mov
ret
add
data16
mov
movsl
shrl
dec
jnp
punpckhbw
mov
cmp
leave
xchg
pop
and
and
mov
push
mov
mov
mov
cld
sbb
lret
jp
popf
jp
push
fcomps
add
out
insl
dec
pushf
inc
sbb
sahf
pop
push
imull
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
enter
jg
jg
add
mov
adc
add
cmp
movsb
mov
mov
xor
pop
out
mov
mov
popf
push
dec
arpl
shll
push
int3
iret
xor
js
jae
xchg
lods
dec
js
out
stos
jmp
inc
test
push
pop
ljmp
push
sbb
jmp
ret
jp
sub
sbb
or
push
add
add
loope
f2xm1
sub
jl
rorl
lods
sub
mov
and
popa
rol
int3
inc
fstl
xchg
fdivp
shrb
xor
mov
dec
sub
dec
adc
cmp
movsb
xor
add
loop
mov
adc
icebp
out
jnp
fwait
adc
out
arpl
jne
push
bound
or
and
sti
pop
xor
xchg
push
sbbb
aad
cmpb
test
pop
mov
test
dec
mov
adc
cli
arpl
xchg
imul
xchg
xchg
out
xchg
out
mov
or
movsb
cmp
inc
mov
out
adcb
push
sub
jl
push
mov
cltd
popa
cmpsb
and
cmc
clc
aaa
cmc
pop
jae
xchg
xchg
inc
inc
xor
xor
sub
stos
scas
push
cmp
and
call
loop
mov
lods
aad
cwtl
movsl
push
jge
pushf
incb
cmc
ret
xchg
or
jl
and
cmp
xchg
orb
jecxz
pushf
mov
scas
hlt
imul
cmp
dec
mov
mov
sub
out
bound
cmp
test
push
cmpb
loope
call
cmc
push
fcomps
sbb
mov
inc
je
mov
daa
arpl
jl
mov
mov
or
pusha
daa
and
in
push
mov
das
adc
je
fwait
push
inc
fbld
jmp
cmp
aad
aad
popa
adc
das
mov
js
jle
js
pop
cld
xor
leave
dec
sub
jl
inc
in
or
mov
pop
imul
push
xor
out
cltd
imul
sub
in
cmp
sti
fcomps
leave
sbb
fsubrs
jl
loopne
jecxz
xor
pop
aaa
pop
mov
es
sbb
dec
out
dec
push
adc
ficompl
cs
add
push
stos
dec
inc
lds
cld
mov
scas
cmc
movsb
outsb
sbb
sar
leave
cmp
xlat
in
push
xorb
pop
inc
test
adc
lock
mov
pop
int3
sub
mov
ret
mov
mov
popa
jecxz
xchg
or
mov
das
in
out
lock
dec
in
add
fisttpl
cmp
es
xor
mov
push
mov
jno
and
es
jae
or
push
jge
push
mov
test
insl
mov
scas
cwtl
sub
out
cld
ja
sbb
inc
inc
push
mov
sbb
daa
xchg
std
mov
cli
pusha
jno
mov
jp
xchg
jb
xor
sahf
ljmp
xchg
dec
sbb
rol
lea
ror
dec
aaa
test
adcb
mov
inc
sbb
adc
repz
les
dec
push
sub
add
jecxz
inc
or
data16
in
inc
idiv
mov
adc
ljmp
pop
lock
mov
sub
mov
lret
xchg
cmp
mov
pop
cld
inc
mov
jmp
call
addb
jmp
xchg
in
negb
sbb
movsb
inc
lret
fwait
push
cmpsl
into
adc
push
loop
dec
in
xchg
inc
inc
bound
outsl
ss
mov
xchg
push
lock
ret
push
mov
out
mov
nop
ljmp
mov
push
pop
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
sub
xor
add
dec
xor
push
jb
cmc
xorl
pop
mov
pop
push
cli
pop
ljmp
ljmp
xor
mov
or
inc
sub
jecxz
jno
or
jmp
in
lea
add
cli
adc
mov
cmp
lea
scas
pop
data16
cwtl
jb
jmp
pushf
xchg
cmc
das
mov
jnp
data16
mov
bound
in
jnp
into
fstpt
arpl
negb
and
loop
push
shrl
inc
pusha
jb
aam
cmp
sahf
leave
xchg
cmp
pushf
loope
mov
add
mov
mov
fst
ret
test
cmpsb
test
dec
mov
sbbb
inc
and
cltd
dec
insb
sub
aas
out
add
dec
mov
pop
sbb
movsb
insl
jp
in
mov
filds
sarl
push
xlat
outsb
sbb
clc
xor
les
out
rcrl
cmp
aas
add
sbb
and
and
pop
mov
mov
js
mov
jne
pop
mov
xor
lods
mov
push
fcomps
and
in
pusha
stc
psrlw
jmp
jp
fcomps
scas
inc
fwait
push
pop
sar
xor
fistps
inc
xor
push
xchg
push
fsubrs
or
inc
ljmp
jb
mov
imulb
xor
roll
negb
pop
xor
popa
mov
fstl
int
jle
sbb
or
sbb
lods
and
mov
shl
adcb
jns
mov
test
mov
sub
dec
in
inc
out
pushf
xchg
cs
sub
jge
je
push
mov
hlt
shl
pop
out
sbb
xchg
mov
jbe
xlat
adc
fs
sub
lods
imul
pop
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
call
pop
cli
lret
jg
jnp
js
fnstenv
sub
aam
pop
mov
mov
xor
pop
ds
pop
cmpsb
inc
xor
pop
js
xchg
jecxz
aaa
adc
pop
inc
ja
and
aam
add
enter
jg
sar
mov
into
pop
stos
sub
cmp
jnp
push
pop
insb
sub
notb
adc
push
inc
lret
xchg
or
push
orb
add
clc
push
mov
std
fdivl
mov
mov
jecxz
cmc
and
adc
call
daa
sub
jae
dec
hlt
push
jo
xchg
movsl
mov
mov
jge
dec
or
inc
xchg
iret
mov
in
push
cmp
lds
inc
cmp
outsb
pusha
cmp
loopne
mov
aam
xchg
aad
or
daa
jle
aam
push
xlat
xchg
jge
adc
fdivrp
inc
int
popf
jmp
cwtl
xchg
lahf
adc
cs
pop
pop
nopl
popa
add
sbb
cmc
pushf
lds
dec
xor
mov
daa
xor
mov
mov
inc
xor
jmp
add
pop
cld
xchg
push
adc
mov
xlat
dec
pop
and
mov
push
jno
out
push
mov
and
xchg
lcall
andb
adc
dec
jl
jmp
out
repnz
je
js
push
add
rcr
jle
push
fldcw
inc
lock
xor
lcall
adc
pop
sti
loop
sub
push
sbb
stos
ss
xor
in
lods
ss
fdivp
pusha
sub
aad
fwait
imul
sbb
jmp
stos
cmp
lods
push
lahf
not
xor
daa
in
sbb
out
sub
fwait
loop
sub
ds
rcrl
and
inc
stos
and
jb
xor
rcrl
pop
jbe
sub
movsb
test
sbb
test
gs
out
scas
sahf
andb
adc
lock
jmp
jmp
xchg
mov
in
sub
xchg
xor
sub
movsb
cmp
cmpsl
mov
mov
inc
mov
or
mov
pushf
and
xchg
sbb
inc
pop
sbb
repz
mov
iret
jno
loope
lret
out
mov
mov
cld
jne
push
mov
xlat
mov
cmc
neg
aam
sbb
push
scas
jmp
or
cltd
jl
mov
xchg
xlat
and
push
mov
addr16
cmp
pusha
cwtl
add
fwait
scas
inc
fisttpl
sbb
adc
sub
mov
fisubl
sub
push
insb
in
xchg
dec
fwait
enter
push
nop
fst
out
xchg
or
dec
push
test
cmp
dec
fistl
lods
mov
dec
dec
mov
adcl
test
subb
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
insb
jecxz
and
xor
js
jle
js
or
outsb
and
aaa
leave
mov
mov
jge
mov
fs
loope
call
jo
nop
adc
scas
cmp
aas
popf
sub
gs
movl
roll
sbb
pushf
adc
push
enter
sarl
push
das
xchg
hlt
mov
fs
data16
imul
push
cmp
mov
dec
nop
ret
out
pusha
fs
sub
clc
push
data16
pop
outsb
aam
in
mov
add
cmp
add
add
out
lods
mov
cmp
es
cmpsb
mov
scas
mov
icebp
xor
fsubr
adc
or
sbb
cltd
out
jmp
push
dec
push
and
rolb
out
jae
mov
rol
test
xorl
push
nop
pop
xchg
fcom
push
stos
xor
dec
sub
ljmp
iret
sub
dec
dec
and
imul
jge
push
ss
xor
add
cli
sub
daa
ja
out
push
pop
push
int
xchg
xor
das
inc
dec
mov
std
sub
fbstp
fildll
data16
xlat
pop
or
cwtl
scas
je
mov
repz
fistl
dec
sub
adc
data16
shr
sbb
fwait
popa
icebp
movsb
dec
ret
sti
add
adc
add
mov
cmp
sahf
sub
loope
cmp
inc
cmp
mov
rcl
ja
push
test
adc
jmp
fwait
jne
in
adc
xchg
pop
enter
lods
pop
data16
xchg
adc
jae
cld
lret
js
inc
cmp
jbe
mov
test
pop
orb
leave
lock
std
mov
inc
sbb
jl
and
inc
out
sub
mov
jge
inc
js
das
pop
cmp
cmp
loope
pop
xor
jl
das
push
cmp
mov
call
push
fstl
xor
dec
sbb
ja
imul
out
leave
sbb
int
dec
mov
add
pusha
jb
xchg
rclb
in
pop
mov
add
add
test
xchg
push
es
outsl
fbstp
ja
fildl
jns
ljmp
dec
les
aad
pop
les
jmp
pusha
add
sub
xor
pop
dec
xor
push
call
fcoml
xor
or
fmuls
push
sbb
les
add
cmp
js
es
jo
lahf
jns
and
movl
pop
mov
outsl
adc
aad
out
stc
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
dec
pusha
mov
jg
jnp
js
in
pop
xchg
dec
decl
mov
mov
lret
dec
pop
std
sub
xlat
outsb
xchg
adc
aad
rcrb
fldenv
mov
cwtl
fistpll
dec
add
clc
loop
inc
data16
pop
dec
sbb
adc
mov
loopne
ficomps
scas
loopne
insl
in
push
inc
fs
push
adc
dec
add
lods
std
outsb
nop
mov
leave
inc
cwtl
aam
pop
xor
clc
in
scas
sbb
jo
lret
enter
pop
jmp
getsec
and
fwait
mov
arpl
sub
ljmp
adcl
push
icebp
scas
xchg
adc
dec
fistpl
push
je
fistps
addr16
lds
sti
add
inc
xorl
xchg
inc
mov
jl
fsubr
add
xor
dec
and
das
shll
ret
adc
imul
xchg
xchg
rcrl
mov
mov
nop
jno
push
out
mov
pop
cmp
push
int
push
mov
adc
xchg
cmc
sub
les
aad
mov
push
cmc
and
inc
push
hlt
daa
test
sub
push
cmp
insb
dec
xor
pop
pop
in
mov
or
pop
fs
imul
push
pop
push
adc
rcr
dec
xchg
lret
adc
pop
jno
sbb
sti
scas
shr
insl
cli
push
es
cmc
pusha
cmpsl
lea
jmp
xchg
out
mov
test
push
push
xchg
or
cmpsl
decb
push
push
je
sbb
push
rol
jle
shll
pop
int3
cmc
pushf
mov
jg
and
lods
xor
retw
or
sbb
aas
into
ljmp
push
adc
push
xlat
or
push
push
pop
sbb
mov
rcl
cmp
mov
or
es
decb
mov
xlat
dec
xorb
jno
enter
cltd
sbb
ret
xchg
test
lea
in
test
lods
insl
sahf
popf
stc
fdivrl
loopne
aad
stc
insb
push
add
sbb
inc
dec
pop
dec
iret
push
sub
xchg
daa
jo
jmp
xlat
pop
lea
std
cmp
popa
jle
enter
mov
icebp
mov
jl
leave
inc
pusha
xor
imul
push
pushf
sarl
mov
or
dec
in
jg
push
fs
into
loope
and
das
test
loopne
ds
adc
test
jecxz
or
xchg
push
mov
fnstsw
sub
mov
mov
xchg
roll
add
in
pushf
inc
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
fwait
in
jg,pt
jnp
js
stos
push
xor
outsl
and
jecxz
bnd
imul
ss
mov
and
fsubrs
inc
inc
mov
jge
in
mov
cmp
jmp
lds
and
es
cmpsb
mov
dec
xlat
pushf
scas
popf
push
mov
xor
cwtl
pop
mov
lahf
mov
dec
test
je
xchg
mov
inc
fcompl
mov
les
pop
incl
mov
xor
jo
arpl
cmp
gs
push
into
loope
add
add
out
or
mov
mov
xlat
xor
mov
loope
cs
ret
stc
pop
repz
dec
dec
in
inc
and
mov
and
out
ficomps
faddl
mov
ja
mov
in
jge
ja
jnp
adc
add
es
inc
xchg
enter
mov
mov
xchg
loopne
xchg
jmp
fwait
je
ds
ret
gs
or
inc
popa
sbb
imull
dec
aad
xor
pop
loopne
sbb
test
aaa
adc
or
sbb
xchg
imul
add
mov
stos
cmp
test
enter
push
jno
push
test
movsl
mov
sahf
mov
mov
mov
loope
sbb
or
push
in
xor
mov
mov
cmp
outsb
dec
popa
jne
sbb
outsb
xor
icebp
out
cld
hlt
out
mov
test
jecxz
mov
jle
jne
aaa
aaa
cmp
inc
inc
push
stos
xor
add
mov
sub
mov
mov
xchg
adc
cmc
sbb
lret
inc
cltd
gs
mov
clc
incb
fidivrl
sbb
cmp
push
mov
add
shll
jecxz
jmp
aad
mov
nop
mov
mov
addr16
fsubrl
test
mov
mov
inc
and
int3
pop
push
xchg
add
xchg
cmp
mov
movsl
rclb
fstps
add
cmp
pusha
mov
mov
inc
push
outsl
add
fcomi
daa
loopne
push
xchg
xchg
adc
rol
fidivrl
fsubl
cmp
jle
arpl
iret
je
ljmp
inc
cmp
mov
shll
stos
lret
scas
fldcw
arpl
jmp
cmpsb
loop
lahf
jbe
jge
add
sbb
fcompl
xor
shrb
shlb
mov
imul
or
sti
xchg
outsl
dec
inc
movsl
adc
fldt
mov
in
mov
push
and
xor
iret
ljmp
test
lret
push
inc
mul
xor
in
inc
hlt
das
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
filds
inc
adc
jg
jnp
js
pop
jne
sbb
sbb
dec
movsl
sub
inc
out
into
xchg
inc
bound
mov
cld
movsl
loope
das
mov
test
jno
sbb
das
mov
and
lcall
jmp
je
mov
jp
add
adc
fcoml
jne
add
inc
dec
mov
mov
mov
test
mov
hlt
cmp
sbb
xchg
arpl
push
orb
lods
lahf
cmp
fwait
fwait
xor
inc
adc
je
out
repz
or
dec
daa
outsl
into
push
ret
inc
sub
sub
mov
neg
icebp
mov
lcall
scas
repz
and
insl
sub
fisttpll
subl
mov
cmp
adc
dec
rcrb
pusha
mov
add
add
jmp
mov
in
xchg
out
add
sub
out
pop
ret
cmpsb
xlat
push
push
dec
add
aam
call
cli
inc
jae
mov
adc
mov
sbb
lcall
cld
add
push
dec
je
xor
pop
cmpb
ljmp
lret
xor
aaa
adc
mov
mov
push
mov
push
out
outsb
xchg
and
add
mov
push
gs
mov
adc
cmc
ds
mov
adc
mov
mov
mov
dec
fwait
adc
jo
adc
ss
test
lds
mov
and
mov
xlat
popa
sub
nop
inc
pop
adc
out
arpl
push
rcr
in
in
mov
push
pop
aaa
and
fmuls
push
or
jo
or
addr16
push
xchg
lahf
fstl
jbe
pop
push
cmp
sbb
push
and
push
add
lret
jle
or
mov
mov
add
or
lock
mov
dec
jecxz
add
add
cmpl
shll
or
popf
pushf
mov
leave
int3
lods
sub
imul
adc
adc
pop
sbb
dec
lret
sub
insb
mov
xlat
scas
mov
daa
ret
lret
outsl
int
cmp
push
mov
jg
insl
push
cmp
sahf
cltd
ljmp
and
sbb
mov
adc
ret
cmpsb
sbb
enter
and
daa
push
mov
out
lret
jno
fstpt
xchg
xchg
movsl
cmp
je
mov
movsb
and
xor
mov
ret
mov
es
ljmp
inc
adc
adc
rol
leave
shll
sar
into
hlt
or
jle
js
les
xor
cmc
xchg
and
test
in
sahf
and
pop
in
dec
rclb
enter
lods
mov
rcrb
sbb
insb
js
cmp
sbb
sbb
mov
ret
lods
int
xor
js
adc
jge
into
xchg
popa
and
push
fistpl
xchg
outsb
cmp
mov
pop
ljmp
inc
adc
lret
xor
sbb
mov
push
mov
cmp
mov
lret
loop
adc
push
in
ss
jge
push
cs
push
xor
mov
fldenv
test
sub
aas
arpl
cs
aad
cltd
jge
add
rcll
mov
xchg
adc
mov
imull
int3
jb
mov
ret
pusha
xchg
daa
fsts
lods
lret
jp
rclb
xchg
movb
andb
mov
mov
jl
xor
mov
fwait
fnstsw
sub
sbb
daa
adc
outsl
stos
mov
leave
cmp
mov
into
cmp
push
mov
pop
insb
daa
fisubs
andl
jno
sub
test
repnz
xchg
into
add
scas
inc
shll
jae
in
mov
fnstsw
bound
ljmp
jnp
cmpsb
shl
ljmp
or
in
outsl
test
lahf
in
mov
inc
sub
cmp
hlt
push
mov
lret
out
jge
scas
cld
test
ret
sbb
daa
cmp
sbb
lcall
inc
ljmp
push
inc
andb
dec
dec
mov
mov
fimull
loopne
je
sbb
adc
repnz
xchg
in
xchg
mov
xchg
or
clc
jl
scas
pusha
push
and
xor
imul
lret
pop
nop
popa
jmp
xor
jae
sbb
or
or
sub
mov
adc
cmp
jne
inc
add
sbb
enter
loopne
loope
jle
or
mov
mov
cmp
or
add
cli
dec
xor
inc
int3
repnz
cmpsb
les
xorl
jb
gs
hlt
mov
xchg
aaa
je
ret
and
repz
mov
dec
jl
sti
xchg
jle
push
fldenv
jne
jnp
pop
adc
aaa
mov
fcomps
out
push
repz
sub
sbb
pushf
sbb
enter
loope
mov
ja
dec
and
or
inc
lds
test
ss
cli
and
shr
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
insl
xchg
cmp
adc
js
pop
push
mov
xor
leave
fucom
fstp
loope
and
cmpsl
inc
xchg
rcll
mov
hlt
ljmp
lds
insl
mov
adc
push
outsl
mov
push
jle
out
mov
hlt
leave
cmp
xchg
das
lods
fidivs
das
mov
mov
mov
les
and
dec
sub
xchg
aam
xchg
adc
mov
push
fcmovnb
testb
xor
mov
pop
jp
fisubs
fldcw
loopne
fwait
lea
xchg
enter
add
mov
aam
cmp
xchg
testb
repnz
loope
dec
sub
jge
int
notl
icebp
push
mov
nop
xor
pop
out
insl
nop
nop
jae
in
in
stos
jecxz
int3
shll
daa
adc
xchg
sahf
adc
test
shl
add
mov
cmp
add
std
test
popf
pop
mov
cmp
daa
mov
pop
cwtl
mov
adc
in
imul
pop
or
push
cmc
pop
sbb
mov
or
test
das
inc
xor
subl
xchg
rorl
roll
sbb
push
cld
rcll
jl
fnstsw
das
stos
push
inc
outsl
lret
fidivl
dec
jno
push
mov
insb
popa
cmpsb
cs
loop
nop
push
pop
mov
fxch
lahf
cmpsl
sbb
push
xor
dec
fs
nop
gs
sub
jbe
sbb
loope
xor
fdivrl
cmpsb
mov
std
out
cld
pop
sbb
in
dec
lock
add
mov
stos
ret
inc
sbb
jae
repnz
cmp
out
push
xchg
les
mov
jnp
mov
jns
das
je
mov
aam
aam
jbe
mov
mov
adc
lock
rol
inc
cld
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
lcall
adc
js
pop
fadd
fwait
jmp
pop
gs
jne
mov
rcrl
push
test
add
stc
pop
or
rolb
outsl
mov
sbb
aas
sbb
xchg
sti
inc
dec
leave
shrb
ret
cltd
dec
pop
push
fsubrl
jae
cltd
and
adc
mov
or
cmp
jl
movsl
daa
push
sub
shrl
xlat
fs
stc
add
popa
sub
mov
shlb
loope
pop
xchg
sub
cmp
pop
cmp
mov
xchg
mov
jg
popf
aad
push
lods
xchg
sub
cmp
cmp
iret
out
jns
jb
addb
add
xchg
ja
cmp
call
popf
adc
pop
jmp
jge
mov
push
jbe
jmp
loop
decb
test
movsb
adc
mov
inc
xor
inc
stos
stos
ficomps
mov
das
mov
sbb
mov
fs
iret
cmp
subb
loop
jge
sbb
pop
shll
iret
mov
jae
clc
testb
aad
notb
cmpsl
sbb
stos
out
or
aas
adc
repnz
pop
icebp
dec
out
imull
enter
mov
xchg
pop
dec
or
imul
mov
sub
ja
lods
sti
fnsave
andb
mov
add
inc
add
ljmp
fsts
pop
mov
les
fiadds
jle
jecxz
cmpsb
adc
cmp
cmp
jecxz
out
cmpsb
pusha
mov
pop
mov
fmuls
or
enter
aad
jl
shlb
div
pop
subb
ja
lea
jp
push
push
push
leave
push
loope
mov
inc
sub
add
sub
adc
mov
sbb
sbb
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
lods
leave
cmp
jg
adc
js
adc
arpl
cmc
cmpb
iret
lret
pop
xor
out
imul
mov
mov
sub
pop
ss
cmpb
jmp
insb
stos
pop
xchg
cmc
mov
loopne
cmp
sarl
lea
push
xor
loopne
cwtl
sbb
push
shlb
push
jns
jmp
imul
scas
in
push
scas
stos
jmp
in
lret
bnd
adcb
rcrl
fsub
xchg
aam
addr16
in
movsl
adc
inc
out
xor
repnz
iret
xchg
frstor
out
ss
xchg
das
add
das
decl
push
iret
addr16
or
mov
push
add
mov
jb
mov
hlt
cmp
ret
sbb
sarb
leave
add
or
fwait
jg
jb
std
mov
xchg
mulb
push
daa
cmpsb
int3
out
test
fcom
popf
mov
dec
xchg
data16
out
out
cld
add
ja
xor
pushf
sti
inc
fldt
ret
mov
xchg
xchg
pop
cs
fs
add
add
ret
int
lcall
or
rcr
loope
int
popf
push
popa
jmp
xchg
dec
mov
imul
in
xchg
nop
sbb
pop
fs
mov
xchg
mov
jbe
lods
and
mov
imul
lahf
inc
out
lods
mov
lds
sbb
aaa
mov
adc
sbbl
int
push
mov
sub
test
insb
mov
mov
mov
stos
and
adc
xchg
out
or
inc
das
pop
jle
xor
movsl
lret
stc
push
push
lret
dec
adc
and
sbb
mov
xchg
mov
into
jb
daa
xchg
in
jecxz
jnp
idivb
arpl
and
mov
push
ss
sub
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
dec
add
iret
jg
adc
js
push
cmp
test
scas
movsb
hlt
insb
adc
lods
sub
jo
mov
addb
bound
stc
jnp
fcompl
aas
xchg
mul
mov
scas
push
in
jecxz
dec
ret
mov
into
sub
cltd
cmp
mov
mov
aas
imul
pop
sbb
push
add
leave
idivb
out
outsb
jecxz
je
jp
xor
lods
and
mov
repz
jb
mov
scas
insb
inc
xchg
or
fisubrs
push
ds
jnp
subb
and
in
pop
bound
out
mov
sbb
and
or
jbe
jns
xchg
xor
push
mov
mov
test
dec
sbb
mov
xchg
cmc
jmp
scas
lret
jle
jmp
call
in
mov
in
mov
ss
rol
dec
ror
ret
jo
mov
cwtl
xor
out
jbe
fnstenv
orl
sub
mov
aad
cmp
clc
fbstp
lods
jnp
jno
scas
mov
clc
xchg
mov
mov
lods
addr16
out
scas
std
dec
sarl
add
bound
jp
pop
mov
xchg
jg
xchg
icebp
ljmp
lret
pop
inc
sbb
pop
pcmpgtb
loope
inc
and
pop
scas
jge
iret
inc
or
xor
sti
push
pop
and
and
stos
sbb
repnz
xchg
dec
sbb
outsl
mull
dec
cld
adc
push
push
cs
adc
lds
andb
cmp
in
jl
sbb
sub
cwtl
stos
fistpll
ja
or
and
into
je
inc
push
pop
je,pt
shrb
sahf
push
push
cli
dec
inc
jns
dec
mov
mov
pushl
mov
cmovnp
mov
repz
notl
push
and
movsb
aad
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
lea
jg
adc
js
fucomip
int
daa
mov
inc
mov
cwtl
push
lds
lret
iret
and
pop
subb
xorb
xor
in
sub
lds
sub
xor
daa
push
pop
lods
pop
js
popa
sub
jecxz
or
inc
pop
hlt
add
or
lahf
xchg
sub
pop
mov
rclb
add
xchg
loopne
test
movsb
mov
mov
fdiv
xor
and
push
cmpsl
mov
insb
lret
ljmp
mov
xor
ss
xorl
mov
loope
ljmp
in
fdivrs
fsub
pop
pusha
movsl
sbb
mov
aam
xchg
loop
mov
mov
mov
adc
lds
mov
push
outsb
push
push
scas
sub
xchg
sub
xor
pop
fmull
mov
pop
cmp
pop
push
mov
mov
jo
mov
xor
inc
lea
cltd
mov
xchg
jne
outsl
pop
and
jl
aaa
pop
jne
insl
xor
test
jne
and
cltd
ss
cltd
repz
mov
das
divb
xor
enter
mov
or
push
xlat
cmpsl
cld
shlb
mov
movsl
mov
adc
js
and
into
dec
sub
sub
mov
out
scas
xchg
and
test
or
imul
sub
sub
lods
sub
inc
roll
test
mov
stos
push
jl
cli
push
sbb
jge
testl
stos
movsb
sbb
ja
nop
inc
cmp
add
lea
mov
xchg
cld
inc
dec
jns
repz
sbb
jl
dec
daa
xor
or
pushl
popf
pop
test
outsl
sbb
popf
lahf
movsl
adc
scas
ds
fidivrs
push
aaa
aad
in
sahf
mov
lds
push
loope
jmp
movsl
sbb
sbb
jo
test
add
popa
cmpsl
inc
add
jne
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
push
or
adc
js
cmpsb
jb
ss
xor
into
add
fnstenv
pop
xchg
dec
jp
in
movsb
jae
clc
hlt
arpl
sub
scas
ss
cmp
cmpsb
jbe
movsl
nop
icebp
mov
mov
adc
js
cmpsl
rcrl
xor
inc
test
aam
or
jnp
lahf
jmp
and
popf
mov
inc
movsb
dec
pop
repz
into
call
add
fbld
mov
repnz
jg
testb
in
fisttpll
out
popa
sub
fists
out
cmpb
push
ret
jo
push
leave
lods
ss
inc
mov
ljmp
fwait
out
sbb
push
dec
dec
cs
ljmp
xor
dec
das
addr16
sahf
dec
push
jp
ss
mov
cmp
pop
sbb
inc
jb
cmc
popf
fadds
adc
sarl
dec
jnp
mov
sahf
pusha
and
sub
xchg
add
push
je
add
jl
mov
repz
scas
movsb
xchg
cmpsl
sub
jle
push
ret
dec
jae
out
int
psrad
imul
xlat
hlt
push
orl
incl
aad
xchg
rcll
adc
popl
inc
fldcw
adc
jne
orb
and
shll
xor
sub
aaa
mov
scas
scas
push
inc
or
repz
push
pop
das
jg
jl
sbb
jo
and
outsl
push
and
xor
ds
leave
ja
mov
adcl
stos
push
nop
inc
sbb
sbb
in
or
test
jp
loop
pop
and
mov
enter
dec
or
and
cmp
jge
mov
jnp
je
inc
mov
scas
mov
aaa
adc
pop
push
mov
call
in
mov
into
mov
cmp
mov
pop
aam
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
inc
push
sbbb
js
rclb
mov
jno
jb
push
insl
mov
lods
jg
cmp
sub
out
ja
pop
cwtl
xor
push
jnp
data16
lret
in
das
cmp
add
jns
bound
les
stos
outsl
or
lds
push
and
push
xor
cmpsl
les
insl
cli
and
push
xor
pop
xchg
inc
popfw
xor
movsb
fistpl
js
in
lcall
pop
cmp
push
and
icebp
dec
xor
inc
outsl
movsb
dec
sbb
mov
jae
clc
iret
sahf
dec
dec
inc
mov
mov
or
pop
sti
jae
jo
jbe
into
mov
jbe
xor
fwait
fs
js
enter
push
scas
mov
mov
pop
pop
lods
cs
scas
out
xchg
or
push
jae
in
rcl
hlt
int
mov
subl
getsec
sahf
movsl
jge
push
ja
jns
jae
gs
outsl
bound
ljmp
add
jl
dec
aad
pop
sub
cmp
cmp
add
fwait
xchg
and
mov
les
push
stos
inc
loop
loopne
cmpsl
add
addr16
or
fnsave
xchg
dec
pushf
sbb
sbb
push
sbb
jnp
xchg
xchg
push
pop
inc
addb
cmp
mov
inc
xchg
inc
test
inc
inc
adc
jmp
loop
das
mov
lahf
sbb
mov
shl
lods
mov
enter
fisubs
test
into
jae
clc
test
mov
lods
sub
adc
pop
xor
cmp
xchg
jmp
push
jb
mov
pop
in
enter
jp
ljmp
sbb
jne
push
pop
arpl
jbe
adc
repz
in
dec
outsl
mov
and
rcrb
pusha
push
pop
cmp
movsb
push
ret
scas
scas
jae
ds
out
out
sbbb
push
sarb
ficomps
fldl
add
pop
cmpsl
inc
add
add
add
add
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
das
pop
pop
xorb
js
sub
scas
orl
push
sub
jae
fs
imul
and
xchg
out
orb
dec
enter
jnp
ja
lret
inc
lcall
xchg
lcall
push
push
ljmp
push
add
or
int
call
and
mov
jg
push
push
les
xor
or
sub
shrb
xchg
push
mov
jl
imul
fbstp
pminsw
xchg
imul
je
mov
repnz
es
push
shrl
fnstsw
jecxz
sbb
outsb
frstor
sbb
bound
xor
xchg
sbb
fsub
xchg
mov
mov
mov
movsb
fs
mov
sbb
cmpsb
daa
adc
jb
mov
mov
jecxz
mov
lea
pop
scas
xor
push
jle,pn
mov
shr
add
push
fidivrs
cmp
mov
arpl
mov
clc
mov
or
stos
arpl
notb
je
and
inc
fsubl
or
adc
cmp
push
push
sub
push
mov
gs
and
inc
sar
popf
rcrb
imul
inc
sti
or
addr16
inc
stc
loopne
sbb
mov
jbe
mov
sub
pop
pop
mov
sbb
pop
inc
dec
adc
aam
xchg
adc
and
fstps
loope
mov
mov
mov
mov
pop
jo
inc
test
sbb
mov
mov
hlt
lret
daa
mov
cmc
mov
bound
mov
push
mov
mov
ljmp
imul
sti
bound
cmp
cld
stos
pusha
lret
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
orl
ljmp
js
add
and
xchg
xchg
mov
call
cmpsl
ja
xchg
cmpsb
mov
inc
lret
mov
cmpsl
in
add
jg
mov
xchg
lock
xchg
aad
rcrl
mov
cmpsb
mov
cmp
mov
xor
scas
mov
test
leave
xor
sbb
push
jne
push
jns
sub
leave
outsb
jnp
sub
mov
pop
push
inc
mov
and
mov
jp
popf
sbbl
xchg
clc
out
push
cmp
mov
daa
adc
shll
popa
mov
mov
xor
lds
inc
lsl
popa
xchg
inc
outsl
test
pop
sbb
xor
stos
adc
or
in
loop
xchg
mov
fnstcw
sub
jae
in
cmp
pop
jmp
pop
incb
xchg
xchg
in
scas
dec
adc
daa
pop
addl
sub
out
std
inc
mov
xchg
xchg
mov
fsubl
jno
jae
jb
jnp
mov
mov
add
push
mov
aad
arpl
js
jnp
dec
enter
rorb
les
xlat
jecxz
mov
hlt
insl
cmp
hlt
aas
xchg
add
mov
jg
inc
xor
aad
sub
xchg
mov
sbb
outsb
xorb
mov
es
cwtl
pop
pop
out
jb
cmp
jmp
push
adc
add
imul
js
dec
lea
fsubrp
mov
dec
jae
rcrb
xchg
sub
and
repz
stc
xchg
lds
sbb
insl
lods
stos
inc
push
mov
jecxz
mov
mov
mov
testl
scas
das
dec
data16
cmp
je
nop
push
pop
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
xchg
pusha
fstpt
adc
js
arpl
jmp
fstpt
je
arpl
aaa
inc
je
and
test
mov
idivl
mov
lret
push
jns
push
add
mov
and
popl
inc
adc
les
insl
loopne
pushf
clc
leave
dec
loop
imul
fmull
jge
movsl
fmul
jg
fstl
jo
xor
aad
cli
sub
adc
mov
dec
imul
mov
das
das
repnz
and
cmp
sbb
cmp
and
cmp
pop
xchg
or
add
or
sub
inc
pop
mov
in
lret
das
sbb
roll
jne
je
and
mov
cli
lcall
ljmp
pop
cli
add
test
push
push
add
add
and
sahf
push
out
xor
xlat
test
aam
push
inc
roll
and
jmp
inc
jno
loopne
pushf
add
cmp
xor
xchg
mov
fisttpll
in
mov
pop
scas
adc
mov
into
xchg
mov
push
dec
loope
lods
mov
add
push
dec
cmpsb
inc
test
or
out
pop
or
sbb
stc
fsub
sub
or
or
mov
dec
cmpsl
and
mov
inc
mov
push
js
fdivs
int3
lds
sub
push
lods
imul
add
mov
dec
loop
daa
repz
pop
loop
andb
notl
or
cltd
div
mov
mov
sbb
xor
xchg
setl
mov
and
movsb
adcl
shl
popf
inc
xchg
jp
shrl
movb
fistl
add
popa
imul
fcomps
xor
loop
or
xchg
sub
daa
xchg
sub
jmp
ret
aas
fxch
rcr
mov
addr16
js
jg
adc
js
push
xchg
mov
lret
jmp
mov
aam
aad
mov
mov
jg
xorb
iret
and
rep
cltd
inc
rorl
mov
aam
enter
inc
in
sti
imul
outsb
sbb
loop
xchg
pop
dec
dec
shl
xchg
cmp
jle
cmpsl
xor
dec
mov
js
mov
sub
out
pop
mov
aaa
jbe
sahf
jl
cli
xor
mov
adc
xor
dec
jmp
int
aas
rcr
loope
out
inc
xor
add
pop
sbb
test
mov
mov
jno
addr16
jbe
xchg
jns
hlt
lret
sahf
movl
sub
pop
test
test
add
mov
lock
sbb
and
movl
xchg
andb
jns
pop
addr16
adc
push
jle
jge
insb
jno
push
fnstcw
jno
adc
aad
leave
sbb
sbb
xchg
push
sbb
push
sbb
sti
dec
mov
jmp
jmp
cmp
popf
dec
xor
fsubl
inc
and
push
gs
dec
test
mov
lock
pop
jb
dec
mov
cmp
and
xor
xchg
imulb
js
dec
ficoms
sub
mov
in
ja
lcall
push
jnp
jmp
loopne
clc
fidivrs
cmp
mov
push
jmp
lret
or
fs
jnp
mov
outsl
xor
push
out
cmpsl
clc
sub
mov
jno
enter
imul
push
stc
inc
test
sub
sti
in
imul
mov
jecxz
nop
mov
cltd
fwait
rcrl
sub
inc
mov
repz
dec
jae
adcb
pushf
out
movsl
sbb
add
add
sarl
mov
cmpsl
fcoms
fidivrs
adc
js
lret
push
clc
icebp
jl
flds
dec
mov
scas
movsl
jno
test
fcomps
xchg
ja
cmp
call
fucomp
nop
jmp
mov
mov
jnp
sub
adc
sub
mov
or
mov
or
mov
jecxz
mov
pop
mov
lcall
sub
xchg
fwait
cs
xor
sub
mov
push
shrb
scas
inc
enter
jbe
add
test
xlat
mov
cmp
test
xor
inc
gs
imulb
leave
lret
loop
jge
mov
jne
enter
gs
mov
xchg
pop
clc
addr16
scas
mulb
testb
push
ja
ljmp
js
cmpsl
sbb
sbb
xor
mov
fisubl
hlt
push
push
push
xor
sub
sub
dec
pop
sub
add
stos
popf
sub
addl
ret
aam
pop
sti
or
lret
cmp
jns
sbb
and
fcompl
scas
negb
es
outsl
arpl
call
inc
cltd
xchg
lds
aad
aas
unpckhps
jg
imul
outsl
fsubl
insl
pop
xchg
rcll
jg
out
mov
aaa
jnp
not
mov
push
xchg
add
jge
dec
testl
addr16
mov
stc
jecxz
mov
sub
loopne
ds
out
shr
mov
dec
xor
cmp
ret
cmp
in
adc
test
gs
fs
insb
cltd
dec
insb
dec
pop
cli
pop
sahf
mov
je
sub
mov
insl
mov
xchg
mov
sub
mov
xor
rol
jmp
pop
dec
mov
das
pop
sub
inc
dec
dec
mov
adc
jmp
iret
enter
fcmovnu
xlat
push
rclb
sub
jg
adc
js
ror
push
add
addb
pop
js
mov
sti
enter
or
inc
das
jae
in
dec
test
xchg
enter
push
jmp
cmpsb
stos
xor
mov
loope
mov
mov
gs
xchg
leave
mov
iret
int
testl
popf
add
subb
sub
adc
xor
sbb
adc
in
mov
rolb
shrb
xchg
or
push
or
xor
push
inc
mov
in
fstpt
sti
cmp
subl
sbb
mov
outsb
or
hlt
lret
movsl
cmpsl
les
jno
ss
push
xor
xchg
dec
adc
lret
pop
mov
sbb
scas
ljmp
data16
lods
fwait
into
ljmp
arpl
push
mov
mov
push
add
dec
mov
ret
int3
cmc
js
adc
mov
push
mov
stc
xchg
imul
sti
insl
jbe
es
mov
fcoml
xor
hlt
adc
addr16
dec
or
add
xlat
sbb
pop
sub
repnz
push
xchg
mov
aaa
inc
or
add
or
mov
aaa
mov
add
cmpsl
pop
dec
xchg
pop
int3
cmpsl
imul
rclb
jno
lods
ret
mov
in
push
mov
imul
fwait
insb
outsl
aad
mov
out
pop
out
pop
xor
sbb
inc
pop
mov
push
xor
fs
es
xchg
xchg
pop
inc
rol
mov
in
add
jl
mov
js
fwait
jne
jo
push
daa
inc
fidivs
add
cltd
inc
dec
sub
jl
lds
push
jl
cltd
mov
lds
adc
add
sbb
inc
xor
jg
mov
adc
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
fimull
jg
adc
js
movsb
pop
je
cli
cwtl
fisttps
imul
test
push
push
add
mov
jmp
add
mov
jnp
mov
xchg
xor
shll
xor
mov
push
sbb
out
outsb
push
sar
dec
adc
sub
roll
pop
cmc
repz
push
adc
sbb
data16
das
fcoms
icebp
cmpsb
fsubrs
inc
andl
scas
push
popa
sbb
mov
cli
xchg
ljmp
jb
push
adc
shr
mov
add
push
jle
dec
cwtl
mov
test
or
xor
ret
mov
iret
xchg
rcl
sbb
int
sahf
adc
nop
andl
imul
loopne
xchg
nop
mov
mov
mov
jae
js
fstp
stos
and
sub
cwtl
xchg
inc
jl
xchg
add
adc
in
add
xlat
std
push
add
out
mov
and
ds
sub
add
jle
mov
add
xchg
pop
push
cmp
out
mov
or
mov
pop
repnz
add
aaa
xchg
fsubrl
inc
adc
mov
pusha
jmp
jnp
pop
jle
mov
sbb
pushf
mov
adc
iret
sub
lahf
pushf
pop
inc
iret
push
clc
test
adc
push
adc
pop
pop
xor
enter
aas
push
inc
mov
ljmp
inc
sbb
cwtl
insl
inc
xor
stos
dec
sub
and
mov
cld
xchg
ljmp
ja
mov
outsb
mov
pop
addr16
jp
outsb
push
repnz
add
js
daa
mov
cmpsb
or
jl
xor
xchg
loop
shll
in
dec
cmp
faddl
push
lret
sbb
pop
dec
push
add
roll
jmp
int
int
rcl
int
cmp
or
fsub
jg
adc
js
jge
push
jns
and
ret
ret
mov
cmc
enter
push
push
icebp
in
add
into
xchg
mov
push
dec
jne
and
repnz
and
out
mov
ret
mov
mov
outsl
pop
daa
test
lea
fisttpll
sbb
cmp
xlat
movsb
rorb
std
movsb
test
pop
sub
lods
idivb
mov
sti
jb
lahf
sahf
and
or
fsubs
xchg
sar
mov
dec
jl
leave
lea
xor
mov
cmp
xchg
mov
inc
cmp
loopne
clc
pop
lods
ljmp
pop
jecxz
sub
mov
xor
test
ss
inc
mov
adc
sbb
xor
dec
dec
mov
neg
das
shl
sbb
mov
inc
add
pop
mov
lcall
mov
mov
test
movsb
xor
out
pop
cltd
lcall
push
ds
add
jecxz
mov
ja
lock
cmp
sub
or
push
es
xor
xchg
in
xchg
bound
in
scas
ss
in
aad
adc
stos
jae
inc
lcall
into
and
add
push
sub
adc
inc
sbb
xchg
xchg
adc
pop
push
shr
sub
ss
xor
fs
push
xchg
mov
dec
je
pop
mov
and
adc
std
mov
jno
xor
fisttpl
adc
cmp
cmpsl
inc
or
cmc
xchg
imul
or
jo
mov
sbb
mov
cwtl
mov
add
test
call
fs
int3
adc
sbb
cmpsl
sbbb
mov
shl
lret
add
pop
cli
mov
fldl
jp
popa
imul
lds
cs
fadds
stos
or
inc
in
sbb
test
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
mov
lock
js
jle
js
lods
or
sub
int3
mov
push
add
je
mov
ljmp
mov
xor
cmp
int3
fs
pushf
sbb
movsb
iret
cld
popa
jns
sbb
xor
aas
repz
out
jecxz
leave
add
jmp
push
cmp
clc
add
movsl
and
xor
jp
xchg
pop
fwait
mov
push
mov
sbb
inc
cmpsl
js
fcom
push
dec
mov
and
xchg
mov
xchg
cltd
shrb
clc
and
and
lcall
adc
add
js
dec
mov
jge
adc
adc
mov
jecxz
mov
out
test
lcall
adcl
movsb
jp
jno
jmp
mov
ljmp
mov
ljmp
movb
xlat
sbb
xchg
cmp
push
jp
mov
loope
lods
xchg
ret
mov
inc
xor
adc
leave
lods
ffree
xor
jp
cmp
dec
fs
popf
stc
xchg
shll
es
push
sbb
faddp
nop
aaa
lcall
movsl
lret
dec
stos
movlps
sbb
subl
mov
xor
inc
test
push
jg
xor
addl
mov
jno
inc
test
push
ret
sarb
mov
or
xchg
popf
clc
notl
out
add
cmp
and
inc
loope
push
daa
leave
movsb
leave
or
push
or
xchg
mul
push
rorb
adc
jnp
add
test
filds
pop
adc
inc
scas
shl
sbb
sub
xor
stos
jbe
das
push
sbb
push
mov
push
jge
cmpl
jp
pop
int
xchg
sti
pop
mov
lcall
pop
scas
sbb
jmp
enter
iret
rcl
mov
cmp
out
in
js
jle
js
pop
xchg
pop
ret
es
cltd
mov
out
les
xor
andb
repz
xchg
fwait
mov
add
loope
pop
push
push
in
jp
and
mov
xorl
hlt
dec
shlb
xchg
mov
testl
lock
or
mov
fwait
ret
and
repz
mov
fdivrp
out
xchg
mov
cmp
stc
and
data16
loop
cld
int3
clc
ret
xchg
fs
and
arpl
sbb
jns
popf
mov
outsb
or
orb
repnz
lahf
inc
es
imul
jg
fcompl
add
dec
mov
cli
repnz
jl
movsb
mov
lret
aaa
mov
decl
popa
mov
sbb
and
ficomps
bound
or
test
inc
xor
in
mov
sub
push
icebp
and
pushf
xor
in
arpl
int3
mov
lods
outsb
push
push
lock
hlt
mov
sub
lock
pushf
jb
mov
inc
test
test
ja
mov
lahf
test
iret
in
sbb
pop
xchg
int
popl
std
mov
mov
ficoms
data16
lahf
ret
jns
ss
dec
jbe
xchg
ss
stos
mov
iret
push
out
mov
ljmp
cs
rorl
push
jmp
mov
shl
daa
in
addb
or
dec
lds
in
inc
sbbl
out
mov
lcall
mov
les
and
out
jecxz
imul
testb
test
mov
popa
leave
into
test
mov
mov
mov
mov
sbb
popf
aad
or
movsb
dec
mov
lods
push
shlb
push
push
adc
add
jmp
into
leave
leave
rcr
fldcw
stc
push
jge
movsl
mov
jle
js
push
fcomp
cmp
std
push
jb
imul
decl
push
and
sti
loope
out
popf
add
fistpll
test
mov
aad
xor
shlb
mov
lods
xsha1
cmpsb
leave
sbb
inc
jo
int3
mov
or
stos
mov
cwtl
out
dec
mov
inc
cmc
daa
mov
sahf
pop
mov
mov
push
fwait
je
sbb
insb
mov
or
out
icebp
rdtsc
sbb
fcomp
lcall
mov
xchg
out
pop
popf
jno
xlat
dec
bswap
dec
mov
testl
and
mov
mov
rcl
mov
adc
stos
sti
mov
push
outsb
mov
dec
nop
stos
int3
cmp
jns
pop
xchg
xchg
and
pop
pop
and
push
es
mov
outsb
adc
out
inc
sbb
test
popa
es
in
xor
or
mov
lret
mov
lods
adc
dec
jl
cld
push
aaa
inc
mov
xor
outsb
cld
add
fwait
scas
adc
pusha
adc
daa
add
xor
cld
push
sahf
xchg
movsb
daa
xor
cwtl
pop
insl
jecxz
test
or
jecxz
adc
push
xchg
jnp
mov
xlat
cltd
in
push
ljmp
push
aad
cmp
popa
add
ja
out
xchg
sub
out
xorb
out
xor
jb
ret
dec
inc
movsl
mov
addr16
push
mov
add
and
stos
xor
jns
sub
jb
dec
mov
mov
cmp
in
mull
push
shll
data16
push
lcall
adc
dec
mov
in
mov
or
cmp
cs
sbb
sbb
nop
das
dec
les
cmp
xchg
pop
jb
sbbl
fcoml
out
jge
xor
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
dec
xor
jg
adc
js
lea
aam
mov
inc
mov
mov
dec
mov
daa
ret
dec
or
sub
movsl
adc
mov
sbb
pop
fisubl
add
out
xor
xchg
sbb
js
sbb
aaa
outsl
mov
les
sbb
mov
out
shlb
ja
cltd
inc
add
mov
mov
or
shlb
cmp
xchg
pop
js
lahf
and
jno
out
sbb
pushf
inc
aaa
clc
mov
out
jmp
xor
mov
or
inc
inc
clc
daa
xor
int3
mov
mull
ror
or
shlb
inc
jbe
pop
loop
sbb
stos
shll
ljmp
insl
mov
inc
imul
ret
jo
fistpll
dec
fucomip
imul
ror
fmull
inc
inc
je
fdivrs
mov
scas
dec
setge
mov
pop
js
mov
scas
push
or
mov
inc
mov
and
aaa
jmp
push
repz
cwtl
adc
popf
mov
adc
ja
xor
sbb
loop
push
mov
aad
in
stos
loop
xchg
cmp
adc
ret
test
loope
jo
jecxz
pusha
cmp
jmp
int
mov
aas
mov
idivb
mov
addr16
negl
xor
dec
out
aam
adcl
xchg
cli
fsubs
mov
dec
movsl
jo
scas
in
inc
adc
pop
adc
xorl
fdivrl
jp
jae
fistl
cmp
mov
inc
sbb
lds
out
mov
mov
jae
sub
mov
and
or
inc
sub
jne
fnsetpm(287
cmp
mov
sub
push
pop
mov
xlat
jge
incl
outsl
inc
xor
add
jmp
cmp
rol
jb
dec
pop
sub
adc
adc
js
std
lret
mov
es
repz
dec
adc
adc
scas
sub
imul
xor
push
or
dec
ja
jmp
and
arpl
sbb
sub
in
or
push
sub
mov
adc
movsl
daa
or
rol
loopne
popa
scas
das
pop
pop
insb
sbb
pop
pop
dec
rorb
sbb
lods
inc
cmp
inc
pop
stc
int3
cmp
pop
cmp
bnd
xor
inc
mov
imul
jecxz
insl
pop
mov
rorw
loope
imul
lret
push
and
jne
jg
out
arpl
sbb
pop
pop
aad
ds
xchg
xor
dec
sti
or
ds
xchg
hlt
jmp
fs
jb
test
dec
xor
test
and
testb
push
shrb
ja
push
dec
push
and
in
jb
mov
add
xchg
cmp
test
arpl
pop
imul
repnz
loope
in
sub
lret
or
add
dec
orb
stos
xlat
dec
jnp
into
iret
test
movsl
and
fbstp
mov
inc
daa
mov
adc
cmp
pop
es
fs
shlb
mov
movl
pusha
mov
mov
inc
pop
dec
mov
mov
jne
or
pop
xor
and
mov
bound
push
push
mov
imul
mov
std
je
dec
and
inc
test
xchg
push
repz
xor
pop
sub
aaa
cli
xchg
clc
sbb
ds
jo
ja
filds
cmp
xchg
icebp
adc
icebp
mov
add
cwtl
sub
pop
lods
ljmp
fwait
add
jg
lahf
mov
fld
ror
and
jl
sbb
aaa
adc
mov
jmp
rol
enter
lret
pop
jp
filds
push
jle
js
gs
inc
cmp
mov
and
mov
inc
popf
pop
cwtl
popa
and
aam
mov
in
jg
or
shll
jb
pop
push
insl
in
ret
loope
dec
leave
xor
xchg
jmp
mov
or
ret
pop
rol
ss
movsb
mov
mov
add
clc
cmp
and
lret
lock
sti
dec
sbb
mov
inc
mov
pop
data16
xchg
cmp
jp
outsb
cmp
adc
imul
mov
js
xchg
mov
mov
push
pop
test
mov
lds
test
pop
mov
movsb
stos
sub
xorb
add
lds
or
mov
inc
inc
ja
popa
jecxz
cs
or
xchg
sub
es
adc
enter
mov
fwait
xchg
dec
dec
sahf
or
dec
add
in
arpl
push
addl
fists
ds
ja
adc
cs
std
jp
int
xor
scas
pop
fcoml
xlat
push
pop
sub
sbb
sub
cwtl
sub
jae
fmuls
je
loopne
inc
cltd
cmpsb
cld
sub
hlt
jno
sarb
fnsave
imul
repz
and
daa
ret
dec
sub
out
mov
fwait
cmp
or
adc
lods
push
pop
bound
ds
sbb
std
ljmp
aam
mov
inc
andb
adc
mov
and
test
fs
nop
and
stc
mov
in
pop
pop
cwtl
xchg
adc
cmp
adc
jbe
cmp
sub
ljmp
adc
and
and
pavgw
loop
aaa
test
mov
cmpsl
xor
test
adc
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
pop
lcall
js
jnp
sub
push
ljmp
pop
imul
mov
mov
jnp
mov
icebp
mov
dec
dec
and
adc
sub
xchg
sbb
imul
loopne,pn
arpl
pop
testl
xchg
dec
lahf
insb
std
mov
out
ficompl
mov
loopne
mov
movsb
jmp
scas
call
xchg
jno
jne
in
lret
in
mov
or
mov
xchg
push
lcall
lahf
dec
adc
je
mov
dec
insl
in
rorl
jo
ja
jmp
jge
jb
push
std
push
or
rol
mov
jb
and
popa
adc
jnp
pop
jecxz
mov
ret
inc
in
sub
or
les
mov
or
xchg
xchg
jmp
shlb
cmp
jp
fcomp
imul
jge
mov
js
fidivrs
or
loop
imul
xchg
jmp
and
ja
jbe
or
ss
ret
dec
sbb
repnz
xchg
sbbl
outsl
js
pop
mov
and
xor
pop
pop
mov
roll
test
imul
mov
inc
inc
pop
shrl
sub
inc
add
mov
add
dec
hlt
mov
test
lahf
mov
jo
lahf
mov
iret
ljmp
movsb
jns
sub
daa
sbb
repnz
xchg
jns
push
add
xor
sub
jge
mov
xor
mov
les
scas
cs
and
aam
popa
pop
es
into
pop
cmp
mov
dec
fistpll
push
je
clc
ljmp
cmpsb
dec
push
clc
sbb
stos
daa
les
iret
cmp
pop
std
xchg
push
rorb
push
data16
js
arpl
test
dec
shll
sbb
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
cmp
jg
adc
js
adcl
adcl
std
pop
pop
daa
fcoms
sti
or
adc
idivb
ficomps
dec
fmul
clc
jbe
int3
lret
sub
ljmp
scas
pusha
or
decl
hlt
xchg
push
fsubr
pop
test
sub
xchg
mov
in
pop
mov
push
addr16
xor
xchg
lods
pop
push
test
mov
fadd
push
xor
sub
push
jnp
lcall
cmp
fmull
xchg
cld
mov
sub
add
enter
sub
cmp
jle
jecxz
sti
fsubs
scas
andb
mov
ja
dec
test
lret
adc
dec
std
cwtl
cs
xor
std
clc
mov
int
xchg
fidivrl
pop
pop
testb
imul
adc
pop
or
pop
and
rclb
or
cmp
xchg
sbb
xor
cwtl
jecxz
cs
xchg
sub
jb
push
inc
js
call
repz
sbb
les
sbb
jp
jbe
mov
mov
pop
out
mov
call
lret
leave
sbb
sub
push
jmp
adc
sarb
and
sub
add
and
xchg
nop
sub
in
in
jnp
inc
cmp
push
jo
inc
inc
int3
adc
lock
imul
int
mov
mov
frstor
enter
out
push
add
ret
fisttpl
inc
cmp
js
fs
or
add
outsb
pop
ret
mov
xchg
and
lret
xchg
push
cs
rcl
xchg
stos
ds
xor
adc
and
test
xchg
sbb
and
ret
cmpb
and
and
push
call
fstl
imulb
js
mov
movsl
xchg
nop
aas
add
add
add
into
iret
into
ror
aad
aad
mov
rcrb
xor
jg
adc
js
and
shll
sub
roll
add
insl
subb
loopne
push
dec
iret
in
sbb
cmp
int3
rorb
dec
loope
add
add
mov
mov
add
mov
push
out
repz
out
loop
sub
xor
adcb
jne
mov
call
cmp
arpl
gs
lds
mov
test
stos
xchg
je
adc
shrb
bound
inc
dec
push
push
inc
and
out
or
jecxz
lret
fcmove
cld
mov
lsl
dec
cmpsb
pushf
add
adc
leave
pop
sub
pop
xchg
mov
cwtl
data16
movsb
sbb
push
pop
cmp
cmpb
mov
mov
ret
sub
pushf
xchg
in
and
push
dec
mov
addb
jbe
or
fcoml
push
push
add
hlt
out
sbb
mov
jnp
addb
cltd
clc
jae
add
push
cmp
fnstenv
inc
inc
loop
sahf
pushf
sahf
repnz
fwait
rcll
or
je
lock
cwtl
fidivs
stc
sub
aaa
and
das
push
mov
jne
jae
and
cwtl
xchg
mov
push
aam
push
loope
sbb
or
xchg
dec
dec
lret
test
cwtl
addl
xchg
test
das
jns
cltd
imul
fwait
dec
shlb
mov
js
mov
jge
pop
shrl
and
adc
mov
mov
test
pop
mov
mov
mov
xor
jno
push
out
lret
rcrl
mov
add
lahf
repz
pop
scas
jno
mov
mov
daa
push
cli
icebp
pushf
cmp
jnp
in
punpckhbw
scas
repz
lea
mov
or
push
jmp
push
adc
mov
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
add
xchg
stos
dec
fildl
jle
shr
cld
and
mov
in
dec
call
sbb
mov
int
out
mov
push
cwtl
jno
sbb
add
dec
sub
dec
mov
mov
loope
cmpsb
lock
dec
call
mov
mov
sbb
cmp
push
mov
or
mov
xchg
lret
outsl
add
and
sub
shlb
mov
lods
sub
jae
mov
gs
pop
cmpsl
scas
sbb
dec
mov
push
je
mov
pop
pop
jbe
xor
inc
push
jp
cmpsb
xor
incb
mov
mov
sub
popa
popl
mov
jnp
sbb
pop
call
push
bound
adc
mov
mov
xchg
gs
stc
jae
insb
addl
cmp
lcall
jp
icebp
mov
es
dec
pusha
test
push
inc
imulb
inc
sub
addb
mov
mov
popf
out
xchg
mov
xchg
pop
push
push
pop
fldl
test
xchg
dec
and
lret
cmc
cltd
call
cwtl
lock
stc
push
push
or
fstl
mov
aaa
and
lahf
fldcw
fsts
jb
xchg
mov
outsl
mov
and
adc
out
insb
mov
enter
inc
in
loopne
imul
cld
sbb
push
pop
dec
cld
enter
icebp
idivl
movsb
jecxz
mov
dec
fucom
jno
lock
inc
out
ds
mov
stos
adc
cmp
fcomi
sarl
cli
xchg
fldcw
fwait
push
das
add
dec
ror
out
jbe
mov
ja
shlb
dec
xor
adc
dec
mov
mov
mov
shrl
pop
jle
xchg
lea
cmp
push
movsl
sub
push
out
fstps
cmp
roll
ljmp
pop
xor
ret
mov
rcl
xchg
aaa
aaa
and
cmp
pop
inc
repz
ret
push
adc
in
sub
sub
cmc
adc
sbb
filds
xchg
or
pop
lcall
lods
insl
pop
sub
push
addr16
insl
and
jl
mov
insl
je
add
sbb
push
push
loop
and
push
xor
inc
lock
je
test
aaa
mov
test
push
sub
jmp
and
add
add
push
stos
lea
xchg
sub
jmp
add
dec
sti
jle
test
mov
or
adc
fs
push
mov
dec
lcall
lods
les
push
repz
icebp
outsl
jo
stc
push
outsb
fprem
mov
enter
inc
insb
lock
clc
mov
aaa
and
add
pop
mov
out
xchg
push
rolb
loope
lret
imul
stos
push
and
iret
addr16
jecxz
cmpsb
test
jb
add
popl
dec
loopne
mov
inc
or
adc
rorl
xchg
xor
or
xor
mov
aam
popa
sti
outsb
in
in
imul
push
es
outsl
mov
mov
sbb
sbb
mov
stos
mov
or
mov
ficomps
mov
fcoms
gs
inc
in
daa
mov
mov
fimuls
sub
or
mov
dec
sbb
scas
rcrb
int3
dec
xor
loope
mov
popf
ja,pt
mov
xor
inc
jle
aaa
add
mov
nop
cmc
sub
and
push
cmpb
sub
das
adc
in
push
outsl
adc
cwtl
xor
cmp
stos
jg
mov
xchg
pop
adc
cmp
pop
leave
addr16
imull
jmp
inc
xor
xor
aaa
mov
out
xlat
adc
ret
adc
sar
mov
xchg
jp
mov
movsb
dec
inc
imul
push
stc
jo
call
adc
xor
nop
jnp
call
jns
mulb
in
push
sbb
jb
push
pop
xor
mov
xor
cs
lret
ret
movsb
add
movsb
imul
push
jmp
push
mov
push
jp
jo
push
and
mov
xor
inc
insb
shll
inc
enter
xchg
scas
js
xchg
or
jae
mov
xsave
fsubs
cmpsb
lcall
clc
ss
mov
imul
xchg
fcoms
jns
adc
or
sbb
jle
stc
dec
sub
mov
sbb
mov
je
or
mov
cmp
in
fiaddl
negl
add
xorb
xchg
std
movsl
mov
loope
mov
pop
mov
ds
aas
lea
iret
or
aam
jnp
add
fldcw
xorl
sub
mov
sahf
gs
into
push
xor
es
pop
or
mov
adc
dec
setge
mov
mov
adc
test
bound
mov
nop
or
adc
or
adc
mov
xchg
rorb
lea
xor
or
pop
clc
mov
sbb
mov
scas
push
inc
fsub
fwait
test
xchg
cmpsb
sub
inc
lods
inc
les
push
popf
adc
in
orl
cmpsl
lods
out
sbb
clc
sub
hlt
sbb
xchg
xlat
out
insl
int
pop
push
xor
or
flds
rcrl
and
sub
mov
and
imul
dec
pop
or
cltd
mull
int
pop
arpl
dec
les
pop
add
and
addr16
push
dec
and
pop
call
push
dec
dec
inc
pop
inc
pop
pop
shrb
or
addl
jl
add
outsl
test
dec
mov
or
movsl
mov
dec
movsb
push
outsl
jp
cld
sbb
mull
negb
push
fisubl
pop
inc
out
psubb
je
andl
xor
imul
jle
add
sti
add
out
cwtl
sub
addr16
jmp
out
xlat
sbb
cld
loop
fildll
mov
scas
sbb
and
out
xlat
cli
test
dec
jae
sbb
sbb
xchg
adc
mov
adc
gs
movl
push
xchg
mov
mov
sbb
int3
and
mov
lret
aaa
adc
xchg
and
rorl
adc
cmc
mov
mov
inc
daa
movsb
addr16
mov
push
or
jo
xor
jnp
sbb
lds
jmp
jecxz
dec
pushf
in
mov
cld
pop
jge
mov
inc
dec
in
pop
fldt
sub
and
aam
jp
rcrl
pop
movsl
xor
loopne
jge
rcl
dec
mov
mov
jo
push
into
xchg
cmp
and
jecxz
inc
enter
inc
std
jmp
call
mov
jbe
repnz
cmp
outsb
jle
mov
loop
mov
iret
and
das
dec
inc
hlt
lahf
jle
sbb
jp
add
adc
pop
and
mov
int3
sbb
sti
or
mov
fwait
jnp
push
fidivrl
or
cmpb
push
sahf
sub
ljmp
mov
cmpsl
mov
sbb
or
enter
sub
popa
lods
popf
jge
shll
xchg
adc
inc
mov
mov
inc
push
aas
sarb
cmp
jmp
sbb
xchg
push
mov
ljmp
out
iret
ja
ds
xchg
jl
mov
pop
das
push
and
subl
fstl
xchg
cmp
fdiv
push
inc
notb
movsb
stos
in
aaa
cs
ds
dec
loopne
jmp
ja
jmp
and
sahf
outsl
sub
xchg
lahf
sub
das
cmc
ret
cli
ret
push
stos
jg
jb
je
loopne
jle
loopne
xor
mov
push
rolb
xor
shrl
mov
jle
test
pop
lods
sar
mov
push
rcrl
adc
xor
lahf
fs
cmpsb
pop
sub
jl
imul
inc
mov
cmc
mov
test
aam
cwtl
pushl
mov
cmp
pusha
push
nop
cwtl
movsl
mov
lea
scas
fmuls
lods
mov
inc
mov
xchg
in
shlb
xchg
sarb
add
mov
dec
inc
and
fstl
mov
xor
xlat
and
subb
rolb
aas
in
pop
xor
jle
pushf
dec
ds
xlat
and
xor
popa
mov
testl
jmp
fwait
pop
divl
mov
ret
loopne
or
in
pop
pop
xlat
adc
mov
stos
cmpsl
jne
cmp
dec
mov
push
mov
xor
jle
push
inc
popf
sub
cmpsb
dec
scas
fildl
repz
test
adc
pop
jle
test
push
jnp
fsubs
push
xchg
mov
test
dec
or
mov
ss
add
adc
loop
cld
push
adc
fldln2
repz
popa
orl
xor
xchg
mov
pop
repnz
int3
js
push
dec
data16
xor
mov
scas
stos
sub
sbb
in
mov
rcl
mov
shlb
mov
mov
stos
sub
mov
xor
push
sarl
jno
rorb
mov
idiv
clc
inc
adc
jp
push
mov
in
sbb
ljmp
fwait
adc
jl
ret
sub
call
mov
push
xchg
jmp
jge
lea
fidivl
mov
inc
push
pushf
mov
lds
xchg
xchg
dec
push
into
stc
fcmovbe
loope
cs
inc
sbb
add
iret
mov
jo
or
movsb
aas
and
rclb
add
fdivl
and
cmp
cmpsl
mov
xchg
pop
pop
out
sub
pushl
dec
into
push
loop
popa
inc
ljmp
add
jmp
cmpsl
cltd
repnz
cmp
and
div
xor
sub
pop
sbbl
imul
cmpsl
cmp
fs
lock
push
pop
mov
mov
xor
int3
and
dec
lret
push
xchg
scas
divl
mov
xchg
pop
push
inc
lds
push
mov
aaa
xchg
ds
popa
mov
or
call
sahf
mov
or
sub
sbb
mov
fidivl
cmp
xchg
mov
mov
push
and
insb
lea
idiv
lods
cmc
sbb
aam
arpl
iret
push
mov
mov
dec
jl
cltd
dec
in
pop
pushf
mov
adc
outsb
mov
xor
lcall
pop
imul
mov
cmp
movsb
sbb
mov
and
jge
adc
lods
fisttpl
sahf
mov
xchg
push
loopne
rcrb
ja
dec
pop
movsl
pop
mov
mov
push
pop
adc
mov
roll
popa
call
or
jl
sub
dec
cmp
sbb
lea
rcrl
ljmp
or
aaa
fcmovbe
xchg
jbe
stc
xor
cmc
aas
push
jbe
aad
dec
test
incb
shlb
add
sbb
aas
push
insb
pusha
push
fbstp
cmp
popf
mov
adc
ret
add
scas
inc
jb
aam
cli
or
out
and
adc
mov
mov
add
add
pop
dec
dec
push
pop
push
pop
dec
mov
dec
push
xchg
jp
movsb
dec
mov
add
add
xchg
in
inc
or
out
pop
lret
jge
mov
sbb
sbb
cmp
xor
mov
enter
mov
sub
int3
shrl
lds
sbb
daa
iret
cmc
xchg
inc
add
or
das
sbb
cmp
popf
xchg
inc
shr
pop
inc
mov
int
inc
xchg
loop
enter
jge
mov
add
movl
sbb
adc
xor
and
add
ljmp
lods
enter
addr16
xchg
push
push
mov
in
xlat
or
xor
sahf
inc
dec
nop
and
bound
mov
insl
cmpl
mov
sub
or
pop
lods
or
inc
push
cli
push
push
das
das
mov
cld
mov
mov
jae
nop
mov
inc
fcoml
jae
inc
sub
pop
fbstp
mov
fld
xor
dec
xchg
xor
addr16
push
push
nop
test
cwtl
add
dec
scas
xor
push
mov
cs
shrb
into
or
test
dec
pushf
sahf
push
movsb
leave
in
pop
rsm
insb
mov
pop
mov
pop
cli
dec
cli
jne
pop
outsl
mov
xchg
xchg
dec
scas
stos
cmpsb
mov
and
out
lcall
outsb
rcrb
pop
xchg
sarl
mov
int
inc
insl
pop
lea
cli
ja
out
out
inc
test
scas
rolb
push
jecxz
push
andl
add
add
mov
test
vmovq
scas
pop
sbb
stc
sysexit
jnp
in
push
ds
test
push
ror
mov
dec
jbe
das
pop
dec
test
and
pop
push
sbb
mov
lret
fdivrp
dec
test
push
jmp
mov
popa
add
adc
sbb
pop
sub
mov
iret
pop
js
shlb
jne
sub
int
adc
mov
pop
add
push
xchg
shr
push
ror
mov
inc
lret
mov
insl
push
xchg
fcompl
mov
push
inc
and
repnz
shrb
adcb
adc
inc
pop
lea
dec
mov
mov
xlat
loope
das
jmp
lods
or
sbb
mov
jg
stos
aam
jns
mov
lods
dec
cmc
dec
out
repz
adc
lahf
rcrb
add
sbb
jb
jp
divb
push
pop
test
and
mov
popf
jp
push
popa
xchg
lahf
test
lcall
fdivr
dec
sub
dec
xlat
lret
adc
lds
std
shr
cmpb
add
fisubs
nop
or
adc
adc
mov
rclb
sbb
sub
movsl
es
add
xchg
leave
pop
push
imul
xorl
and
cmpsl
leave
inc
sub
ret
test
push
sbb
pop
mov
xor
cs
inc
lahf
xchg
loopne
mov
sbbb
lahf
clc
cmp
push
mov
mov
sub
xchg
xor
lcall
or
pusha
in
insb
sub
fisttpl
push
dec
adc
jle
out
jp
pop
rorl
mov
jecxz
cmp
imul
jmp
fistps
adc
outsl
mov
out
lods
inc
shll
mulb
xchg
in
cmp
dec
into
popf
out
jns
iret
inc
fdivs
test
outsl
repnz
test
pop
mov
jge
outsl
stos
int3
aad
or
shll
cmp
lahf
stos
push
imul
cmp
inc
cmpsb
lret
push
js
dec
rolb
lret
sar
loopne
pushf
popa
lds
out
pusha
push
lods
add
aam
dec
sbb
and
scas
push
mov
xor
cmp
mov
adc
push
sbb
push
clc
xchg
fildll
jmp
nop
sub
xor
push
xor
test
inc
leave
into
xchg
stos
scas
cli
pop
pop
jnp
popa
fldl
or
jge
and
leave
inc
sti
push
xor
jbe
inc
fistpll
test
mov
xor
fsubr
sub
loop
jno
mov
test
arpl
test
xchg
jae
scas
pop
adc
cltd
push
loopne
cmpb
cmp
push
fcoms
push
subb
ds
push
rcr
out
xchg
ja
ret
pop
push
es
scas
jmp
push
in
pop
adc
inc
fidivrs
pusha
insl
incb
movsb
and
lds
loope
testb
push
maskmovq
es
ror
and
mov
stos
sub
dec
leave
in
sbb
mov
inc
repz
push
adc
jecxz
mov
mov
mov
std
outsb
cltd
jg
loopne
sub
xor
or
out
mov
xchg
lcall
pop
imull
aad
in
xchg
lret
fsubl
mov
aam
movsl
push
sbb
xchg
pop
push
and
out
pop
fmuls
mov
sbb
clc
imulb
addr16
das
pop
sbb
jno
movsl
xchg
ds
dec
inc
mov
repz
jmp
imul
in
iret
sbb
sbb
clc
in
cli
mov
add
jmp
pusha
sub
ret
push
pop
jns
dec
cmp
pop
xchg
sti
sub
and
inc
inc
leave
sbb
in
mov
test
pop
sahf
adcl
or
push
mov
bound
cmp
in
xchg
sub
cmp
xor
pop
sahf
fxch
in
fdivrs
dec
sub
and
lods
mov
out
loopne
jecxz
sub
adc
adc
sbb
pushf
popf
gs
sub
add
sub
lret
xchg
push
scas
ret
in
mov
xlat
add
mov
mov
mov
ja
dec
aad
inc
mov
fildl
add
add
inc
dec
dec
pop
pop
push
sub
xchg
jns
ffreep
nop
add
jl
add
inc
jecxz
fisubl
mov
ljmp
popf
in
addb
lods
ficoml
push
cmpsl
dec
jno
cmp
mov
shrb
inc
test
mov
push
xchg
ret
mov
and
jb
popf
mov
jns
xor
jecxz
ljmp
fsubs
fdivl
aad
stos
popa
cs
ret
push
pop
aaa
xchg
mov
inc
mov
insb
cld
mov
add
adc
jnp
lret
add
mov
dec
jae
test
cmp
in
out
gs
aad
cld
decb
sub
cs
jbe
loope
or
shrl
arpl
pop
mov
push
jp
pop
jmp
mov
pop
mov
push
jle
xor
cmpsb
xor
mov
sub
daa
or
sub
bts
adc
out
lcall
push
js
call
fisubl
cltd
sti
push
sarb
and
mov
lcall
xor
pop
jp
inc
in
add
jns
or
out
or
dec
dec
outsb
jmp
inc
adcl
or
call
lcall
in
mov
rorl
mov
outsb
add
loopne
je
mov
cmp
in
into
inc
int3
mov
pop
scas
pop
fcoml
sub
jne
jle
insl
add
sahf
push
pop
daa
in
mov
nop
dec
jns
xor
nop
xorb
xchg
adc
pop
push
mov
lcall
jbe
mov
into
out
cmpsl
inc
sub
cmc
or
fucom
adcb
inc
cli
push
test
cmp
mov
popa
loop
ret
es
cmp
es
test
and
add
stc
ror
loop
dec
ret
cmp
stc
push
lret
push
test
push
cmpb
push
jns
sub
cltd
cli
fcmovne
push
mov
aas
mov
comiss
std
hlt
jge
inc
push
jno
outsb
insb
aaa
call
stos
pop
sbb
xchg
mov
mov
or
jle
mov
cmc
xchg
ret
pusha
or
sbb
int3
inc
imul
mov
test
mov
inc
sbb
fmulp
xchg
mov
test
aas
jge
es
lea
mov
hlt
int3
cmp
adc
aad
sub
mov
nop
and
sbb
dec
mov
sub
es
js
popf
xor
cmpb
mov
inc
stos
sahf
loopne
jge
mov
mov
pop
stc
ljmp
shll
fcmovu
loopne
ljmp
add
lahf
jg
or
jb
dec
out
dec
std
xlat
inc
ret
jno
cwtl
mov
mov
jp
sbb
lods
loop
mov
and
jp
aas
mov
mov
fwait
xchg
dec
inc
aam
or
mov
xchg
lret
scas
pop
imul
and
in
stos
add
pusha
outsb
aad
mov
out
std
mov
mov
test
or
decl
jae
jl
insb
cmp
xor
sahf
mov
popf
xlat
push
call
in
stos
mov
fildl
mov
dec
js
add
push
mov
pop
lret
pop
inc
stos
sub
pop
push
mov
loop
repz
cs
iret
das
leave
sbb
clc
loop
insl
cmp
in
add
dec
cmp
cmp
push
outsb
inc
js
in
loope
xchg
out
mov
adc
sarb
fimuls
xor
pop
ret
cmpsl
hlt
out
outsl
dec
or
sbb
ljmp
sub
sub
sbb
lret
outsl
mov
mov
lahf
lds
ret
bound
fcompl
inc
data16
sbb
inc
and
mov
outsb
imulb
inc
sub
insb
sub
mov
scas
cmp
and
ljmp
xor
pop
imul
mov
imul
in
hlt
xchg
pop
dec
sub
movsb
roll
mov
pop
adc
std
push
cmpsl
pop
out
sbb
xchg
mov
xor
xchg
jb
std
data16
jle
addr16
dec
fists
dec
fisubs
test
movb
or
or
and
ds
loope
movsl
jnp
int
clc
add
and
xchg
sti
mov
push
pop
adc
ret
cmc
jns
add
lock
pop
pop
mov
addb
test
or
add
loop
mov
and
cmc
insl
mov
or
fistpl
mov
mov
lret
icebp
insb
dec
inc
mov
pusha
ljmp
in
mov
and
pop
mov
mov
pushf
push
sub
xor
aaa
sbb
mov
mov
mov
mov
adc
dec
or
rcl
sbbl
xchg
mov
jge
jo
xchg
sbb
pop
xor
ss
movsl
in
cmpsb
mov
fimuls
mov
push
xor
es
ss
mov
ffree
inc
pop
or
pop
lahf
jmp
pop
mov
movsb
xor
mov
sbb
sbb
movsb
jne
jl
test
leave
sbb
mov
in
jns
and
sbb
das
loop
inc
lret
cwtl
fnstsw
pop
cld
addr16
xor
cmpsb
xor
lods
mov
and
mov
sub
bound
rcr
cli
xchg
aaa
hlt
out
inc
or
cmpsl
cmc
jg
sti
cmp
push
jmp
lods
inc
popf
enter
fdivp
imul
loopne
addr16
push
cld
add
push
int3
cs
cmp
xchg
adc
inc
pop
mov
loop
sub
push
mov
fs
add
dec
dec
dec
inc
dec
sub
decb
aas
inc
xchg
add
jl
add
jae
mov
mov
pop
adc
cmp
bound
add
add
jns
mov
jmp
xchg
pop
add
push
and
repz
lods
jecxz
bswap
enter
cmp
popl
mov
dec
pop
testl
imulb
xchg
pop
jo
ljmp
movsl
mov
and
push
jne
imul
jnp
xchg
sbb
lret
mov
mov
loope
jnp
sub
and
push
sbb
cld
in
hlt
scas
mov
ljmp
xchg
mov
mov
in
jns
xor
cld
jnp
pop
cmp
out
dec
ljmp
mov
dec
mov
test
xor
xor
andb
mov
nop
push
sbbb
xor
scas
test
mov
add
popf
scas
pop
inc
stos
rcll
inc
ljmp
je
mov
mov
xor
add
fsubl
mov
outsl
and
inc
ljmp
clc
dec
sahf
fdivs
xchg
or
sub
mov
jae
icebp
push
ja
out
mov
loope
mov
stos
mov
jp
jo
jecxz
adc
movsl
js
pop
or
mov
popl
shl
into
ficoml
out
mov
xor
pop
insl
ds
mov
scas
add
cmpsl
jp
mov
cmp
call
fidivl
dec
cmp
loopne
sbb
wrmsr
add
mov
mov
imul
cmpsl
out
push
inc
orl
mov
fstpt
sbb
lret
cmp
inc
xchg
mulb
add
or
scas
push
sbb
scas
hlt
fs
test
fldenv
xchg
xor
ja
out
cmp
push
bound
out
fisubs
sbb
lahf
inc
iret
sub
mov
pop
shll
xchg
pop
adc
sub
and
adc
fistl
or
xchg
nop
rol
repz
addr16
xlat
push
lea
xchg
mov
shlb
sbb
cld
test
pop
dec
push
push
mov
and
in
fldcw
xchg
mov
jb
jno
and
sbb
test
add
and
sbb
cltd
push
in
inc
push
in
jnp
pop
cmp
leave
dec
fcoml
sbb
mov
adc
inc
aaa
scas
cli
insl
stc
je
imul
pop
pushf
dec
jo
out
xchg
push
aas
cmp
mov
daa
sbb
incl
sbb
sub
push
sbb
faddl
adc
outsl
insb
xchg
or
popa
cmpsb
orb
inc
aaa
mov
jmp
adc
pop
mov
push
lahf
mov
aad
mov
add
lock
jmp
lret
arpl
mov
popf
outsb
sbb
imul
pop
insl
enter
sbb
add
daa
add
push
mov
mov
in
add
inc
in
fdivr
inc
and
mov
xlat
test
add
adc
mov
push
mov
xor
popa
mov
cmp
push
inc
sub
loop,pt
xchg
jbe
dec
flds
inc
fwait
sbb
pop
jge
adc
sub
test
sub
flds
sub
cltd
js
push
lock
push
lods
hlt
in
push
fildl
cli
mov
mov
xchg
sbb
lods
xlat
cmp
js
and
push
test
sub
mov
daa
jbe
movsb
or
fisttpl
cmp
cmpb
ret
negb
cli
clc
clc
dec
stos
xchg
or
rorb
xlat
shlb
data16
repz
lahf
mov
mov
sub
push
lods
dec
lock
jge
cltd
jmp
add
add
xchg
mov
adc
andb
movd
out
cli
aad
jb
xor
inc
mov
int
scas
push
movb
mov
mov
xchg
mov
add
push
loope
sti
movsl
xchg
into
in
pop
test
ss
jge
pop
fsub
cwtl
sub
mov
ja
cld
mov
lcall
shl
push
adc
push
mov
repz
adc
mov
in
add
sti
pusha
jno
cwtl
xchg
or
das
inc
mov
sbb
push
ss
scas
insb
mov
adc
loop
ss
xor
fisttpll
stos
shrl
cmpsb
push
cmpsb
xor
or
and
gs
ss
jno
mov
mov
das
dec
mov
sub
cld
xchg
pop
lret
nop
out
jbe
adc
aam
dec
push
es
dec
jl
sbb
push
jg
imul
jns
cmp
inc
inc
inc
xor
push
sub
push
fnstenv
inc
sti
pop
js
fcmovnb
pop
ficomps
and
lret
test
add
bound
adc
jg
or
daa
test
mov
fsubl
sbb
ss
and
sbb
rolb
imul
aad
insl
xchg
cmc
les
test
ljmp
mov
bnd
sbbl
xchg
test
pushf
lcall
dec
push
imul
mov
pop
adc
scas
sbb
loope
mov
xor
fimuls
xchg
mov
adc
mov
das
pop
dec
inc
mov
pushf
shl
sbb
pop
dec
movsl
insl
mov
in
jle
sbb
cmpsb
movsb
and
je
mov
nop
lea
cwtl
ret
iret
shrb
pop
ds
cmpb
mov
sub
cmp
push
dec
inc
push
pop
pop
push
dec
cmp
or
popf
add
jl
add
mov
push
mov
inc
jp
rcr
enter
adc
ds
jbe
jns
jns
popa
pop
repnz
jno
int
fsubl
sub
imul
std
loopne
xchg
rcrb
fstps
adc
cmc
xor
sbb
pop
mov
and
add
pop
mov
js
cmp
cs
sub
jne
jne
pop
jg
lret
aaa
pop
xchg
aas
xchg
fcmovnbe
rclb
icebp
xor
push
mov
dec
arpl
nop
les
lcall
pop
pop
xchg
lods
cmc
sti
pushf
cmpsb
mov
xchg
mov
push
adc
jecxz
std
mov
js
mov
repz
loopne
adc
cmp
push
cmp
pop
lcall
insl
sub
adc
mov
imul
aam
rcrl
loopne
loopne
gs
les
jno
cmp
xchg
push
mov
je
mov
cs
adc
int
xor
pop
dec
rclb
in
dec
or
sub
fldlg2
je
or
shr
mov
adc
adc
scas
scas
arpl
jecxz
test
filds
out
mov
rorb
insb
std
pop
and
mov
push
test
scas
sbb
ds
inc
into
and
pminsw
push
add
pop
pop
inc
mov
or
in
sub
js
subb
sbb
int
imul
jnp
in
sbb
add
push
cmp
adc
std
enter
jl
icebp
loopne
rclb
xlat
ljmp
or
jp
test
and
pop
inc
pop
repz
and
in
lcall
mov
fmull
mov
mov
inc
pusha
push
xchg
nop
imul
xchg
push
insb
mov
stc
inc
inc
cmc
xchg
xor
jns
adc
sub
push
pop
xchg
xor
sbb
sub
cli
pop
dec
xchg
inc
sbbb
mov
sbb
push
dec
jl
fidivrl
rorl
packssdw
fidivl
push
cmp
cmpsb
clc
incl
gs
clc
and
aaa
fmull
xor
push
push
fistl
sub
or
out
xchg
push
mov
es
adc
icebp
fs
inc
xchg
sub
and
test
and
aam
push
sbb
insl
sbb
popf
scas
cmp
xchg
push
aad
clc
fmulp
in
sbb
cmp
mov
cmp
mov
mov
push
mov
pop
call
push
out
dec
jno
jl
jge
mov
out
std
outsl
aaa
xchg
sbb
sub
xor
jg
mov
rorl
jno
push
rcrb
add
push
movsl
push
push
addl
jl
push
and
xlat
add
xchg
adc
jp
aad
adc
out
and
and
jge
sbb
or
push
shlb
add
push
ljmp
and
mov
mov
pop
mov
repnz
out
inc
push
aaa
cmc
pop
shrl
std
fidivrl
sub
orb
push
outsl
add
ror
pop
cmp
xor
push
dec
test
into
flds
pop
and
xchg
or
or
jbe
sub
jno
stos
loope
cli
xchg
mov
cmc
cmp
adc
out
mov
cs
popa
mov
or
pop
clc
aad
cmp
pop
nop
les
xchg
in
xchg
pop
sti
xchg
stos
pop
dec
int
and
and
movhps
ss
fsubs
test
mov
bound
add
mov
adc
js
mov
dec
sub
or
fistl
sti
cmp
divl
roll
inc
faddl
jmp
push
jg
scas
mov
repnz
mov
inc
and
push
pusha
xor
or
call
mov
or
jmp
xchg
sub
or
sbb
add
addr16
or
mov
cmp
or
scas
mov
or
inc
pop
and
jmp
xchg
je
push
mov
outsl
cmp
xchg
push
sub
pop
jecxz
inc
ret
dec
popa
jne
addb
cld
dec
sbb
push
push
sbb
add
mov
das
mov
pop
jns
cmp
cmp
cmp
movsl
adc
sub
insl
jl
rorl
ret
jmp
fisubrs
addl
or
dec
imul
push
imul
adc
in
fstl
jg
clc
adc
and
cmpsb
fistpl
es
sub
or
cld
adc
push
pop
dec
xchg
ja
inc
or
es
xchg
cmp
dec
inc
add
xchg
cltd
rorb
cld
mov
es
mov
pop
fistps
arpl
pushf
loop
out
repz
jp
jae
mov
push
out
mov
dec
in
aad
imul
filds
pop
sbb
or
iret
jl
push
dec
insb
lret
push
cli
mov
cld
cmp
dec
ss
out
neg
or
es
js
pop
cld
cmp
xor
mov
fstl
push
repnz
sub
mov
pop
mov
pop
insb
in
cmpsl
or
sbb
jmp
xor
inc
loope
in
decb
pop
mov
pop
cmp
loope
or
sbb
movsl
pop
sub
mov
sahf
push
shlb
mov
int3
cmp
aam
adcb
push
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
cltd
cmp
add
lret
outsl
movsb
add
pop
lret
pop
lahf
and
aad
call
jp
xor
sbb
inc
xchg
inc
loopne
fadd
jle
les
sbb
inc
lret
adc
xor
mov
aad
popa
push
mov
mov
jno
adc
cmpsb
cmp
dec
add
adc
loop
mov
mov
mov
stos
fsubs
mull
movsb
adc
add
fmul
mov
test
sub
xchg
sbb
push
js
int
mov
bound
dec
dec
jne
enter
sbb
jo
adc
push
mov
dec
xchg
xor
addr16
sub
push
bound
arpl
dec
and
cs
fwait
lret
daa
dec
fnstcw
lret
cs
aam
repz
mov
cmc
mov
inc
sub
pusha
add
mov
adc
add
dec
mov
enter
inc
out
xchg
inc
rcll
and
inc
cmpsl
pop
add
add
inc
ja
pop
aam
dec
push
lcall
xlat
stc
mov
adc
xchg
push
inc
push
jp
pop
shl
es
pop
cmp
scas
or
and
inc
jo
mov
daa
add
or
xchg
xorl
cltd
inc
stc
mov
rcll
jl
dec
jge
push
fdivrl
out
add
inc
push
dec
ss
fldcw
and
popa
and
pop
xchg
pop
xchg
sbb
pushf
sbb
push
jg
xchg
dec
pop
push
movsl
add
rol
or
mov
test
mov
add
clc
je
into
add
and
pop
jne
adc
aad
sbb
and
lods
stos
mov
aad
lret
outsb
rcrb
sub
xlat
mov
jg
out
adc
daa
mov
jecxz
and
mov
inc
push
mov
push
push
daa
push
pop
add
xor
sub
xor
inc
jle
or
and
test
inc
push
ret
movsb
mov
xchg
test
cwtl
xor
data16
jl
pop
push
repz
stos
movsl
aas
pop
mov
sbb
or
ficoms
negb
xchg
and
cmp
mov
mov
mov
sub
xchg
mov
subl
lret
lcall
jo
mov
pop
push
push
add
push
push
mov
sub
pop
sbb
mov
cmp
fadds
rep
adc
les
add
xor
outsb
testl
add
sbb
leave
movsl
pop
mov
dec
cmp
ljmp
pop
jge
lods
mov
and
stos
inc
push
mov
popa
dec
ds
lock
incb
xor
aad
test
inc
arpl
fcompl
in
xor
and
loopne
int
lods
xor
mov
jmp
addb
or
lret
add
sub
pusha
pop
sbb
mov
jo
push
and
fbld
xor
decb
push
xchg
and
jne
hlt
mov
dec
cmpsl
stc
ret
test
cmp
push
pop
cvtps2pd
ljmp
sub
adc
cmp
add
xor
retw
shlb
sbb
in
mov
fisttps
inc
bound
or
xchg
stos
cltd
call
and
xor
nop
jb
jecxz
xchg
xchg
adc
loope
int
jl
xchg
dec
inc
and
nop
mov
dec
cwtl
cmp
icebp
sub
mov
push
adc
cli
jb
ret
dec
iret
xor
pop
addl
ret
xlat
sahf
pushf
ljmp
sub
mov
adc
mov
popa
jp
jbe
shll
js
js
sbb
jae
dec
jne
jmp
cs
pop
jg
mov
mov
mov
dec
mov
pop
iret
popa
bnd
ljmp
das
and
xor
fstpl
mov
xlat
ljmp
cmp
jl
movsl
inc
repnz
xlat
inc
clc
rol
xchg
sbbl
jbe
dec
mov
stc
movsb
shrl
pop
fwait
xchg
or
pop
stos
and
je
mov
and
fxtract
sbb
test
into
into
repz
inc
or
int
jo
fisubl
shlb
fwait
and
mov
inc
ret
mov
roll
push
ret
int
fisubrs
data16
push
and
out
inc
and
lods
fsubp
cmp
cmp
inc
pop
pop
dec
clc
call
jp
inc
shll
xchg
cwtl
out
lods
aad
cli
inc
cmp
xchg
test
jno
push
jno
xor
repnz
pop
pop
lahf
xlat
inc
leave
xor
dec
sahf
jg
leave
xor
dec
aad
cmp
push
shr
adc
lock
or
sub
and
insl
loop
pop
mov
dec
ja
jmp
dec
inc
and
addl
clts
xchg
inc
mov
fidivl
xchg
cmp
arpl
xchg
jmp
push
add
sbb
cmp
stos
inc
insl
xor
sub
les
imul
and
dec
decl
mov
hlt
je
dec
cmp
and
iret
cmp
mov
xchg
lea
dec
fstl
jl
subb
xchg
imul
js
das
pop
inc
ret
clc
mov
pop
scas
les
insl
out
inc
adc
jge
mov
inc
mov
fadds
incl
fistps
push
jns
mov
sarl
push
call
and
adc
push
out
or
les
inc
ret
es
push
xor
mov
xor
pusha
aaa
jmp
dec
xchg
fwait
enter
xchg
dec
in
mov
inc
imul
test
enter
mov
ficoml
cwtl
arpl
pop
pop
cmc
jle
dec
push
pop
enter
arpl
jmp
inc
add
lret
jno
or
add
add
pop
pop
pop
pop
push
dec
mov
jle
mov
add
jl
add
clc
push
imul
cmpb
cld
pop
sub
pop
jnp
or
and
dec
aas
xchg
into
add
lret
and
ljmp
in
jb
out
or
add
xlat
jmp
sbb
fldl
xor
jb
and
stos
mov
inc
jbe
sub
adc
mov
shll
cmp
pop
adc
inc
std
push
xchg
addr16
cmp
insl
fbld
push
les
mov
addr16
cltd
inc
repnz
cmp
leave
cld
out
into
and
push
push
loopne
in
push
adc
jb
sub
std
lods
ds
dec
sub
xor
mov
push
outsl
sti
hlt
loop
mov
ficoms
and
pop
gs
mov
cmp
loopne
cld
mov
lahf
jmp
outsl
int
cmpsl
mov
adc
cli
nop
mov
xchg
repz
bnd
pop
jne
movb
aad
aad
mov
les
int3
fmuls
loop
popf
scas
pushf
push
cmp
test
mov
outsl
mov
fisubrl
sbb
shl
gs
pop
daa
pop
call
out
fimuls
jle
mov
cmp
push
lds
push
in
sbb
mov
lret
xor
out
jo
cmp
sub
arpl
orb
or
mov
lret
sti
jle
xor
inc
adc
sti
daa
fs
cmp
mov
lahf
fdivl
mov
adc
or
xchg
adc
jns
stc
xor
cmp
cwtl
dec
xor
mov
ret
mov
repz
test
lds
mov
push
xchg
push
jo
scas
mov
sub
cmpsb
fcomp
mov
adc
adc
inc
or
push
adc
into
mov
mul
cmp
bound
and
lret
xchg
xor
out
sub
into
xor
cmc
fisubl
inc
das
enter
aas
jg
leave
lock
rcrb
dec
loopne
adc
inc
mov
call
fistl
cs
or
cmc
mov
xor
push
push
icebp
sub
mov
nop
jecxz
xor
test
lret
test
push
pop
lock
rcl
push
inc
in
dec
inc
pop
notb
pop
xlat
push
bound
cmp
cmp
and
mov
adc
mov
fchs
push
fcompl
insl
push
jns
data16
orl
xlat
lock
push
sbb
and
insb
gs
loopne
jo
or
pop
bound
insl
pop
jle
xchg
pop
mov
enter
push
pop
inc
shrb
shrb
inc
or
ja
mov
notb
inc
mov
imul
or
pushf
sbb
mov
cmp
xchg
or
bound
cmp
jae
cmp
cmp
jns
ja
mov
stos
fmulp
jp
loop
dec
scas
sbb
hlt
push
out
adcb
aam
movsb
xor
aaa
or
imul
jle
dec
clc
inc
icebp
mov
fldl
adc
subl
int
shrl
cmp
ret
mov
insb
mov
fcompl
jbe
push
dec
pop
js
lret
xchg
lds
in
inc
imul
fs
dec
jae
xor
cmp
clc
xor
lods
outsl
push
and
lahf
push
lods
hlt
pusha
imul
mov
inc
pop
test
aaa
sti
xchg
sub
mov
mov
cmp
ror
repz
lock
xor
adc
cli
sub
add
or
and
or
cld
divb
iret
dec
inc
adc
or
nop
sbb
pop
mov
daa
leave
mov
pushf
pushf
fwait
stos
xlat
into
pusha
mov
push
jnp
inc
mov
mov
bound
test
out
pop
insb
pushl
cli
mov
fmulp
adc
lds
cmp
out
in
pop
mov
shll
jmp
dec
jb
inc
ds
scas
daa
dec
outsl
cmp
xchg
sbb
mov
call
or
loopne
sti
pop
out
repz
andl
ds
fwait
andb
xchg
ffree
subl
nop
and
xor
jl
cmc
cmc
adc
mov
popf
mov
arpl
in
daa
or
popa
mov
lods
fdivr
lock
xor
adc
mov
or
xchg
sbb
fcoml
loop
ror
leave
inc
lock
xchg
adc
dec
in
and
rorl
in
jge
adc
icebp
jno
jb
xor
aad
cmp
shrb
iret
leave
inc
inc
jno
std
lret
out
popf
loop
sub
jno
dec
push
jae
out
add
rcrl
and
push
mov
enter
lock
inc
negl
lcall
loop
or
ss
loope
sbb
stc
sbb
add
sub
lret
test
mov
test
in
popl
mov
cld
inc
daa
cmp
call
aaa
std
fisubrs
arpl
inc
sbb
ljmp
dec
fs
cmpsb
or
dec
xchg
repnz
mov
jae
das
ret
xorl
leave
testb
js
daa
jns
inc
fcompl
jmp
xlat
lret
mov
pop
sbb
cwtl
aad
adc
aas
fdivs
xchg
mov
pop
mov
xchg
dec
cli
adc
sub
daa
incb
fwait
rorl
clc
mov
inc
enter
sbb
xchg
loopne
mov
call
xchg
and
fiadds
ds
mov
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
lret
add
jl
add
inc
jbe
aad
mov
inc
iret
inc
mov
add
lret
mov
xor
js
mov
jecxz
in
loop
data16
cmp
arpl
call
int
and
inc
das
loop
sub
jne
aad
pop
stos
dec
test
stos
int
ss
mov
inc
push
cmp
mov
xor
jp
js
mov
cld
cltd
xor
mov
popf
movsb
js
cmpl
movsl
arpl
repnz
popa
divb
jbe
fstl
lret
push
pop
pop
in
lret
outsb
jns
lods
or
or
pop
adc
dec
push
adc
jno
popf
and
out
or
scas
fwait
and
sarl
push
insl
or
daa
pop
rorl
sub
popf
inc
test
adc
aas
pop
mov
faddl
mov
frstor
push
lcall
les
adc
adc
es
mul
xchg
mov
cltd
jns
cmc
lahf
flds
aas
popf
mov
shll
mov
inc
sbb
jle
aas
add
xor
adc
int
or
mov
mov
xor
push
cwtl
loope
pop
std
ja
and
sbb
aam
and
iret
inc
xchg
rcll
adc
adc
pop
rcrb
pop
push
jmp
xchg
ljmp
leave
stos
arpl
push
ljmp
aad
dec
outsb
popf
fnstsw
inc
mov
push
mov
jo
leave
xchg
pop
push
push
fsubl
enter
insb
loop
gs
pop
pop
adc
flds
outsb
push
mov
inc
jmp
dec
loop
imul
fdivrs
movsl
jl
pop
jae
mov
and
test
sbb
sarl
in
mov
stc
test
dec
cmp
std
lods
xor
lock
pop
aad
and
sarl
repz
mov
jle
shlb
jbe
call
dec
push
jne
pop
aad
add
mov
mov
xchg
mov
push
repnz
mov
and
orb
push
xor
hlt
pop
push
call
or
pop
idivl
mov
shlb
lret
jns
scas
jmp
push
dec
js
cmp
add
subl
clc
sbb
cmp
jle
bound
pushf
pop
rep
inc
movb
push
xor
cs
mov
adc
jbe
or
ret
scas
adc
lahf
addr16
jae
or
rorl
jp
xchg
xor
adc
xchg
fsubrl
test
insb
call
xchg
pushf
loopne
xor
xchg
popf
sbb
mov
pusha
sahf
dec
and
notl
jp
ret
roll
shl
fldcw
scas
inc
or
inc
push
ficoml
out
mov
xchg
sub
lahf
push
cmpl
outsb
push
in
stos
push
ja
and
dec
inc
mov
jmp
mov
lods
or
jbe
and
in
or
movsb
sbb
icebp
push
mov
dec
cmpsb
loope
push
daa
dec
insl
xchg
adc
jmp
popf
arpl
mov
jmp
cmpsb
lods
jge
xor
call
clc
mov
mov
push
pop
push
fmuls
jg
mov
loope
and
cmp
shr
cmpsb
xor
mov
rcrl
outsl
cmp
mov
cmp
adc
daa
roll
addr16
data16
jle
fwait
test
fnstenv
repz
pop
jne
movsb
jl
jbe
stos
jmp
push
fldt
xlat
and
adc
or
aas
fisubrs
sbb
stc
aam
cmpsl
fldenv
shll
mov
testl
aad
in
cmp
cmp
pop
fisubs
movsb
sbb
push
push
mov
inc
lahf
outsb
inc
xchg
popa
addr16
add
ljmp
sub
xchg
sbb
push
lods
cmp
and
gs
popf
jbe
mov
pop
sbb
sahf
popa
push
lahf
mov
push
pop
cmc
mov
mov
cmp
lcall
xchg
cli
xchg
mov
or
push
adc
jmp
int3
rcrb
mov
lods
insb
rcll
fidivrl
filds
pop
jbe
mov
xor
mov
lcall
dec
stc
xor
jge
lock
push
mov
pop
in
or
bound
xchg
jecxz
aam
insl
cmpsb
jns
in
gs
in
pop
sbb
add
bswap
shll
and
dec
cmp
movsb
std
icebp
es
movsb
dec
adc
cltd
jnp
mov
negl
mov
cmp
mov
inc
mov
cmc
mov
mov
sbb
je
mov
js
add
sub
lds
cld
fmull
xchg
push
in
mov
cwtl
adc
pop
add
push
and
cmp
movb
jge
pop
pusha
xchg
lods
xor
sbb
mov
dec
mov
out
mov
xchg
in
popf
aad
inc
xor
dec
dec
or
test
mov
jecxz
pop
sub
mov
mov
test
mov
sarb
cwtl
hlt
pushl
adc
es
les
scas
int3
mov
inc
xchg
xchg
out
fmul
daa
mov
insb
pop
incb
cld
sbb
sbb
mov
pop
lods
lods
ret
cmp
jbe
lea
mov
sub
sub
lcall
popa
test
hlt
ljmp
dec
iret
and
mov
lods
mov
pop
test
push
xlat
inc
mov
push
pop
cmpsb
cld
int3
jne
pop
call
std
int
jmp
push
cld
xor
fs
or
aas
and
fistps
jp
or
sub
mov
fs
rorb
or
pop
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
test
mov
add
add
push
xchg
and
or
aas
pop
push
pop
in
adcl
adc
jns
stc
and
iret
hlt
mov
adc
sbb
sub
jecxz
jno
test
pop
cmp
lods
fldl
or
mov
stos
inc
aaa
ret
test
lret
dec
adc
xor
movsl
pop
pop
cld
pop
test
fcomi
icebp
mov
mov
jns
test
cltd
push
inc
ljmp
lods
cli
adc
sbbl
hlt
or
les
mov
push
push
pop
loopne
sub
mov
frstpm(287
sbb
xlat
std
gs
and
or
jae
xor
leave
fs
sub
loopne
sub
fcompl
sbb
xor
mov
adc
pop
adc
xor
xor
sbb
xor
fs
adc
or
dec
pop
sub
push
leave
rcrb
ljmp
dec
stc
fwait
mov
xchg
bound
jp
push
mov
int3
push
mov
inc
cli
cmp
test
xchg
bound
shrl
and
loopne
pop
cmp
mov
push
sub
mov
outsb
push
popa
xchg
jmp
sbb
rol
pop
jecxz
gs
fnsave
popf
in
xchg
in
push
add
loopne
mov
mov
repz
pop
insl
pop
and
inc
icebp
or
outsb
push
adc
mov
xchg
cs
dec
jecxz,pt
enter
xchg
mov
dec
insb
fdivrl
dec
sbb
sahf
inc
movsl
xor
inc
ficompl
mov
dec
or
sub
test
shl
pop
shl
or
pop
iret
clc
repnz
cli
cli
test
inc
xor
jns
cmpsl
xlat
push
push
xor
xorl
fdivrp
rclb
scas
or
cmp
add
jne
jg
outsb
icebp
stos
push
imul
jns
sbb
icebp
stc
test
adc
pop
ret
lods
sbb
xor
cmpsb
inc
out
test
jnp
xorl
or
push
and
imul
insb
sahf
shlb
cmpsb
lcall
aad
cmp
rcll
mov
call
xor
insl
dec
ss
daa
sub
fnstcw
scas
dec
and
add
or
cmp
out
jmp
and
dec
ret
push
xor
push
fimull
loopne
lret
fildl
adc
and
lret
movsb
and
lods
sbb
fdivs
push
push
sbb
test
repz
pushf
push
mov
mov
lahf
insb
inc
aad
shlb
into
mov
fnstcw
jns
cmc
and
call
mov
xor
mov
scas
push
stos
xor
add
pop
or
dec
lcall
das
add
add
jo
jg
add
xchg
push
sub
mov
pop
mov
in
ja
outsl
or
in
pop
jno
mov
sbb
fsubl
inc
push
jmp
mov
sbb
jb
fucomip
mov
loopne
jne
outsl
ret
push
rcrb
pop
mov
jno
or
in
push
test
test
stc
xchg
mov
das
andl
jae
cmp
cmp
push
jl
inc
cmp
cmp
mov
cmp
sub
inc
add
cwtl
repz
shlb
xor
sub
adc
repnz
popf
lock
inc
mov
push
cmpsb
inc
push
enter
mov
stos
test
jp
and
icebp
jle
lds
jmp
jl
shlb
push
and
test
leave
jge
inc
arpl
call
push
cli
inc
mov
mov
ss
push
scas
pop
in
pop
sbb
sub
add
pop
lods
aaa
arpl
pop
and
pop
inc
lods
shlb
push
hlt
das
scas
adc
icebp
pop
mov
enter
adc
jecxz
xchg
sub
mov
mov
jns
dec
ss
xchg
ret
push
push
inc
imul
adc
dec
cmp
pusha
in
or
ficompl
ret
add
sub
nop
arpl
andps
bound
push
add
cltd
mov
cmpsb
mov
xchg
sbb
das
mov
into
jle
mov
push
sbb
inc
imul
sub
data16
mov
mov
dec
push
mov
cmp
push
lahf
xchg
adcb
xlat
add
ljmp
adc
xor
push
addr16
cmpsb
cmpsl
ss
dec
rcr
imul
jecxz
pusha
and
push
mov
rcll
push
jns
cmpsl
adc
test
outsb
enter
add
add
mov
sti
xchg
mov
or
or
dec
jns
inc
and
xchg
xor
out
fsts
mov
int
loopne
bound
fistps
pushf
cmpb
lds
push
jp
mov
adc
frstor
pop
das
sarl
std
cmc
mov
test
mov
push
cltd
test
push
mov
dec
inc
mov
and
lahf
insb
movsl
mov
inc
xchg
lds
rolb
and
daa
xchg
lret
int
into
es
mov
cmpl
ret
je
ret
sub
addr16
out
and
pop
xlat
xchg
mull
add
mov
pushf
push
push
or
pusha
xchg
mov
out
cmp
inc
ljmp
xchg
lea
mov
imul
sub
jl
fcmovbe
add
loop
mov
repz
pop
lods
nop
cmp
mull
clc
pop
mov
xorl
mov
add
add
add
dec
push
pop
push
pop
dec
idivb
jns
push
push
ja
mov
add
repz
pop
mov
lret
or
add
adc
enter
dec
mov
jns
test
cli
add
push
push
loope
adc
or
jnp
das
mov
sti
push
in
loope
jne
mov
sbb
adc
jl
inc
sub
add
push
lds
int3
mov
push
jo
mov
dec
pop
mov
movsl
pop
lret
stc
std
movsb
sub
push
mov
adc
inc
pop
cltd
pop
into
xor
scas
xchg
xchg
adc
or
in
repz
popa
xor
popa
negb
dec
jg
outsb
mov
aaa
ds
repnz
stc
cmp
sbb
mov
mov
mov
in
into
lods
add
mov
mov
out
push
dec
mov
out
add
ds
ret
in
in
repnz
lret
sbb
mov
cmpsb
sbb
add
aas
pop
mov
push
lds
out
push
pop
adc
jno
mov
fidivl
pop
sbb
stc
call
jge
xor
jo
pop
mov
pop
or
aas
pop
xor
and
int3
rcll
mov
jnp
xchg
and
dec
add
int
mov
xchg
pop
test
and
dec
push
jo
mov
lret
lcall
in
inc
stos
jno
pushf
inc
sbb
pushf
jecxz
fcomps
in
xor
push
xchg
dec
xchg
mov
pusha
xor
movsl
push
repnz
jge
scas
incb
int
dec
xchg
imul
pusha
sbb
outsl
dec
mov
sub
push
jp
and
xchg
add
jle
pop
divl
stos
cmp
mov
dec
icebp
shr
cmp
mov
cmp
shlb
and
mov
mov
pop
lods
out
mov
jno
imul
mov
pop
std
inc
pop
jge
mov
and
jne
mov
clc
or
cmpsl
mov
mov
ja
and
sbb
lret
sbb
mov
les
push
rol
cmpsl
lods
mov
or
ret
mov
mov
lds
out
add
push
lods
int3
aad
je
xor
in
jbe
outsl
mov
lcall
mov
add
scas
stos
xchg
xchg
adc
mov
or
and
cmp
dec
inc
mov
mov
enter
fsubrs
repnz
push
popf
fs
jmp
lret
sbb
fcomps
mov
int
and
test
and
arpl
cmp
and
or
ds
scas
imul
jge
inc
ss
sti
push
inc
rclb
jge
les
lods
pop
idiv
divb
sub
into
stos
cli
cli
cmp
dec
dec
pop
add
cmp
pusha
loopne
or
lock
or
sti
inc
fildll
mov
lods
aas
cmp
adc
out
sbb
arpl
aad
cmpsl
mov
jo
cs
negb
cmp
imul
call
sub
inc
or
aas
mov
hlt
xor
ljmp
dec
rcrl
in
push
int3
inc
or
push
inc
test
xchg
mov
ss
jns
xor
ds
mov
and
sbb
or
arpl
and
inc
xor
or
fistpl
rol
out
xchg
pop
cmp
mov
mov
mov
jne
inc
pop
mov
dec
push
jo,pn
jne
aam
jp
sub
cmp
sbb
jae
sub
adc
loope
dec
dec
ss
stos
scas
fimuls
in
and
out
push
insb
sbb
popa
aad
cmp
mov
test
stos
mov
mov
pushf
iret
lods
cmp
ret
dec
mov
leave
sbb
rorl
ja
fcmovnu
mov
aas
or
adc
arpl
xchg
add
lahf
outsb
xor
dec
adc
icebp
aam
loop
addr16
sbb
xlat
outsb
xchg
lea
insb
das
in
dec
dec
push
fstpl
lods
dec
cltd
aad
push
push
icebp
adc
fidivrl
orl
cli
ret
cmp
lods
lock
sub
pop
mov
lds
inc
sub
or
int3
cld
andb
pop
push
sub
cmc
push
lods
add
sub
shr
xor
loop
movsb
mov
push
or
dec
ss
sbb
adcb
add
or
push
lods
iret
mov
nopl
iret
int
mov
outsb
xor
push
shl
pop
dec
rcr
xchg
fistl
ss
ret
mov
aad
push
lds
adc
jns
ret
out
mov
aas
pop
sub
xor
out
mov
shl
cwtl
mov
mov
enter
add
sbb
outsb
inc
jne
rcll
mov
jl
jne
repnz
in
inc
push
bound
repnz
and
sbb
push
rorb
cmp
nop
cltd
orl
fwait
into
popa
push
and
mov
nop
lods
pop
clc
adc
mov
popf
mov
std
testl
sbb
enter
add
gs
aad
movsb
jbe
and
stc
std
lahf
sbb
jne,pt
push
jns
cmpsb
mov
pop
cmp
out
mov
inc
cwtl
pop
cld
pop
push
cltd
add
aaa
mov
adc
or
call
in
dec
test
mov
sbb
loope
stos
xor
adc
repz
fwait
call
je
loope
lahf
mov
fcompl
cmp
fbld
clc
dec
int3
in
mov
je
dec
mov
imul
pop
out
add
and
lea
cmpsb
jne
nop
adc
or
push
fisttpl
test
mov
in
shrb
mov
jecxz
add
add
dec
push
dec
push
pop
pop
mov
xorb
les
add
add
push
lock
xlat
adc
rorb
cs
push
cli
xchg
arpl
jae
and
addr16
jns
fnstsw
data16
and
xchg
in
inc
jno
nop
adc
fnstenv
xchg
and
clc
sbb
in
lods
mov
filds
mov
loop
xchg
dec
aas
xchg
pop
inc
cld
nop
or
xchg
push
mov
ret
lea
dec
dec
jns
mov
pop
add
cmp
inc
leave
sub
add
and
push
adc
push
add
jbe
fstp
pushf
xor
pop
jo
or
pop
gs
or
xor
loope
scas
fcmovnb
cmpsl
aam
inc
push
ja
pusha
xlat
in
mov
mov
pop
lds
mov
testb
xor
jl
push
cmp
xor
dec
xor
ja
sahf
call
dec
cli
aas
pop
or
test
lahf
jle
arpl
add
int
aam
push
xchg
fs
call
outsb
adc
adc
outsb
repz
fiadds
jg
inc
add
cmp
out
or
push
adc
popf
dec
lret
or
fadds
clc
xor
mov
ror
movsb
cmp
sarl
or
icebp
rclb
scas
loop
xchg
mov
std
and
mov
lock
jp
cmpl
jecxz
shlb
clc
add
repnz
pop
sbb
jecxz
cld
push
test
repnz
ret
repnz
lret
test
inc
jl
sub
fdivr
inc
dec
outsl
jg
fsubl
in
sbb
shr
mov
jb
ss
xor
out
push
push
adc
aas
xor
data16
mov
clc
push
and
aad
outsb
mov
js
mov
add
mov
out
fs
mov
cmp
or
stc
test
popf
mov
inc
shll
pop
inc
cmp
jmp
fbld
push
rclb
in
int
xor
adcl
inc
lods
scas
and
shlb
pop
test
and
mov
cmp
enter
mov
mov
mov
aaa
inc
sbb
xchg
mov
xchg
pop
pop
inc
in
int3
jns
lock
jo
rcrl
xor
add
xor
aas
mov
xchg
sbb
or
push
adc
inc
rep
lret
and
sub
sbb
add
shll
cmp
pop
mov
into
xchg
add
inc
arpl
xchg
push
pop
sub
mov
cwtl
mov
push
lcall
or
int3
insl
leave
sbb
xor
lods
mov
outsb
inc
lods
loope
inc
popa
mov
pop
cmpsl
cmp
lods
negl
inc
mov
daa
cltd
and
cmp
push
loopne
int
or
sub
sub
sbbb
adc
push
mov
sub
add
fs
aas
cmp
pushf
mov
dec
aas
insl
lret
dec
adcl
sbb
and
and
repnz
aas
imul
ror
add
add
test
movsb
sti
mov
xor
rcrl
sar
push
mov
data16
fdiv
sub
syscall
sbb
add
loop
mov
fcoml
or
out
insl
jge
aam
out
sub
shrl
push
sub
mov
adc
adc
jmp
xor
fcomip
popf
inc
jp
call
test
mov
xlat
jns
cmpsl
imul
pusha
out
inc
dec
fistpl
lcall
scas
pop
sub
and
pushf
adc
jnp
pop
rclb
mov
mov
lods
mov
jle
mov
lret
dec
ds
sub
mov
cmp
push
aad
jle
xchg
in
inc
leave
inc
insl
sahf
xchg
mov
mov
es
adc
jle
rcr
out
xor
inc
or
xchg
lods
into
lea
dec
ja
sub
mov
jb
cmp
xchg
cltd
cmp
aad
loope
rclb
ja
icebp
dec
jmp
sbb
push
popf
sti
pop
cs
mov
icebp
js
mov
lds
pop
mov
or
inc
lock
cli
mov
xor
push
shlb
or
jae
xchg
sbb
push
inc
inc
sub
out
arpl
jae
push
or
cmp
push
arpl
lret
mov
and
clc
popf
js
sub
mov
pop
fistl
jo
icebp
mov
sub
pop
mov
shr
jns
pop
pusha
sbb
mov
adc
pop
seta
mov
xlat
les
sbbl
imul
sahf
jmp
pop
xlat
mov
mov
mov
mov
jns
fidivrs
sub
push
push
in
mov
andl
pop
popa
jno
sbb
les
gs
pop
xchg
leave
movsl
cmp
mov
sub
sbb
jne
or
cmpsl
xlat
and
movsl
pusha
xor
xor
pop
daa
nop
mov
inc
dec
repnz
jp
shrl
rclb
mov
dec
jmp
das
push
inc
sub
mov
pop
adc
xchg
movsl
bound
pop
aam
pop
adc
ja
rcr
daa
push
jmp
fistl
neg
fst
or
imul
jb
pop
je
mov
inc
sub
movsl
cli
xor
and
fs
or
mov
inc
pop
pusha
into
cs
jp
das
jb
shlb
cmpsb
pop
nop
fisubrl
inc
push
push
push
push
push
inc
push
test
pop
mov
jl
add
gs
das
arpl
xor
jne
sub
out
ret
shll
in
jbe
jmp
std
adc
inc
in
jmp
pop
mov
aas
adcl
pop
pop
xchg
cmp
out
les
shr
pop
mov
push
or
sub
and
mov
pop
clc
xchg
mov
lcall
outsb
popf
dec
addr16
or
test
sub
imul
pop
sub
sbb
das
xchg
ja
dec
shr
dec
ljmp
js
mov
xor
xchg
jmp
adc
xchg
flds
test
in
xchg
mov
leave
or
es
xchg
fbld
fisttpl
or
sub
cmp
test
leave
push
lods
std
icebp
inc
push
xor
aas
sbb
jl
int
push
lods
push
out
push
lahf
cmp
pop
negl
aad
es
test
addr16
movsb
jp
shrl
fsubs
jg
sbb
das
aam
dec
stos
push
sub
xchg
bound
mov
dec
pop
insb
repz
shll
push
adc
xchg
adc
xor
test
jle
ja
xchg
pop
gs
xchg
jmp
push
bound
sbb
pusha
push
ljmp
stc
test
dec
inc
push
pop
shl
ss
into
xor
cmpsb
jle
cmp
shlb
icebp
sub
ja
or
je
cmpsl
xor
xchg
popa
mov
shlb
jbe
xor
jbe
lds
les
iret
stc
inc
sahf
cmp
stc
mov
popf
fsubs
fs
cmc
je
mov
mov
sub
xlat
in
jnp
cld
pop
cmp
mov
lds
push
int
xor
fnsave
xchg
mov
sub
pop
sbb
inc
push
mov
sar
cmpsl
jle
sub
or
fs
pop
movsb
les
fsts
inc
popf
xchg
mov
xchg
mov
pop
std
push
xchg
in
jg
outsl
loopne
lcall
inc
inc
movsl
pushl
jl
inc
push
fisttpl
sbb
int
push
or
fwait
inc
mov
loopne
cmp
cmp
jg
push
mov
das
subb
call
mov
dec
fwait
out
dec
jns
iret
pop
inc
imul
push
sub
sbb
and
jns
test
ret
lds
push
pop
mov
rorb
cltd
push
in
addr16
dec
push
mov
xchg
fdiv
sub
jnp
or
pop
inc
or
xchg
ret
lahf
sarl
xor
loop
sbb
and
push
dec
shlb
test
push
cwtl
scas
fldl
sbb
movsb
imull
pop
arpl
jne
sbb
ss
push
jge
xchg
mov
mov
xchg
enter
dec
xor
pop
push
adc
xchg
movsl
call
ljmp
int3
mov
xchg
or
pop
xor
xchg
mov
movb
xchg
mov
push
lds
arpl
sub
cmpsb
fs
push
lea
mov
inc
aaa
mov
repnz
sbb
xor
xchg
jnp
inc
test
mov
shrl
out
bnd
mov
add
inc
mov
inc
inc
inc
scas
cltd
pusha
cmpb
push
jo
push
daa
dec
push
sbb
xor
cs
les
js,pt
lods
mov
mov
mov
enter
fidivrl
sub
cmc
ret
add
xchg
mov
pop
inc
imull
loop
push
pusha
cmp
mov
ds
mov
dec
outsb
icebp
repnz
jg
jge
incb
mov
lret
movsl
add
pop
xlat
insl
sbb
jle
movsl
jns
mov
fbld
sbb
mov
and
cmp
daa
fmul
and
mov
fidivrl
sub
jae
mov
stos
pusha
and
fwait
adc
xchg
pop
xchg
pop
sbb
mov
pop
push
dec
pusha
inc
mov
data16
loopne
lds
int3
insb
pop
lds
push
and
hlt
out
lcall
sarl
movl
fdivrl
add
xchg
mov
lcall
adc
dec
jns
data16
sub
into
sbb
push
cmovg
adc
int3
xchg
push
or
or
cmp
shl
scas
push
jg
push
lods
out
in
fwait
dec
push
jae
jae
or
rcl
jb
mov
sbb
and
shll
pop
mov
bound
dec
fcoms
std
sub
rcrb
fisubrs
loope
into
loopne
adc
stc
mov
std
sub
xor
js
pop
sub
cli
aad
mov
bound
sub
ljmp
adc
movsl
mov
mov
mov
mov
in
jnp
mov
fisubs
nop
movb
stos
fdivrs
gs
testb
mov
add
adc
rcrl
mov
xchg
add
sbb
xor
movsb
cmp
push
xlat
jmp
sub
cmp
jmp
pop
shlb
push
push
cs
negl
mov
test
nop
dec
jbe
jmp
lods
mov
lods
xchg
mov
jbe
push
inc
iret
popa
repz
les
lds
mov
in
or
xchg
fcomp
adc
icebp
mov
or
mov
clc
jge
xor
popa
fistps
push
pop
xlat
xor
js
jle
sub
fdivr
jb
cmp
fwait
mov
sub
and
stos
mov
mov
pop
test
test
iret
and
imul
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
flds
clc
pushf
roll
add
add
lds
ljmp
mov
xchg
repz
cmpsl
jbe
lods
jo
js
dec
and
popf
leave
popa
cmp
cli
gs
cmp
cld
cmp
pop
pop
test
jno
mov
push
cmp
ret
int3
insb
or
fbld
xchg
adcb
jbe
jp
push
sub
and
xlat
pushf
shll
push
movsl
sub
mov
daa
sub
test
cmp
mov
lock
aam
push
push
cmpsl
adc
inc
or
mov
bound
repnz
mov
pop
in
mov
movsb
xchg
shrl
lock
loop
pop
jne
push
mov
xchg
and
lods
roll
cltd
sub
or
jns
pop
cmpsb
pop
movsb
sub
cmp
mov
push
adc
clc
dec
or
sub
sbb
lcall
ret
arpl
push
dec
cmpsb
dec
out
add
and
test
addb
mov
ss
sbb
mov
pushf
adcb
loopne
outsl
gs
dec
xor
xor
cltd
jp
pop
xor
movsl
stos
sbb
sti
jmp
dec
psubusw
bound
pop
insl
div
enter
sub
mov
popa
call
pop
ss
adc
xchg
mov
shr
sub
fs
and
in
imul
outsl
outsb
mov
cmp
ret
dec
in
dec
jg
repnz
lcall
sahf
lret
mov
data16
mov
ret
cltd
cmp
or
cmc
mov
jge
ds
mov
jno
cmpsl
mov
fwait
pop
or
imull
shll
sub
inc
aas
pop
push
jo
or
xlat
scas
std
out
push
mov
imul
push
sbb
adc
push
ss
pusha
fstps
inc
in
enter
std
sahf
cmp
jle
sub
cmc
sbb
push
fwait
clc
xchg
fwait
inc
aad
les
int3
fnstcw
outsl
repnz
push
ret
paddq
icebp
es
xchg
cmp
fmuls
cmc
and
ror
inc
xchg
enter
test
nop
fmull
adc
je
cmpsb
cltd
push
fdivl
inc
lret
cltd
pop
or
inc
mov
mov
loope
xor
jmp
cwtl
ljmp
pop
fstps
cmp
loop
mov
enter
aas
and
sub
dec
mov
icebp
fstpl
sbb
ljmp
adc
and
aam
cwtl
mov
ds
adc
sahf
add
xchg
dec
add
nop
shll
add
enter
lret
fadds
jp
aam
movsl
sbb
mov
inc
xor
dec
inc
inc
xchg
dec
pusha
inc
dec
fwait
mov
push
div
leave
clc
pop
dec
xor
movsl
jno
mov
push
out
push
dec
sbbl
cmp
xor
aam
mov
mov
lahf
mov
out
lahf
sbb
mov
pop
insb
xor
ds
xchg
xor
loop
inc
mov
std
cli
repnz
dec
jp
in
and
insb
jp
addr16
dec
insb
ja
in
mov
push
cli
mov
sub
cmpsl
mov
push
xlat
arpl
mov
pusha
xchg
stos
loope
leave
imul
push
adc
push
shl
je
lock
ret
std
and
mov
xor
inc
inc
cmp
ficoms
mov
xchg
in
jle
mov
fidivrs
pop
repnz
pop
cli
pop
testl
fdivrp
cltd
ds
jecxz
test
hlt
sub
sub
int
mov
inc
repz
icebp
shrl
loope
mov
sub
or
insl
mov
pop
adc
sub
sbb
imul
loop
sbb
jo
pushf
xor
arpl
push
pusha
jne
pop
or
fstpl
les
test
mov
lahf
lods
test
cmp
pop
pop
xor
xchg
cmc
mov
leave
int3
repnz
pop
jb
xor
cld
add
inc
push
mov
sti
cltd
fwait
cmpsl
push
stos
sahf
sub
push
stc
sub
jo
movsb
lods
cmp
sub
push
add
mov
mov
xchg
mov
or
fwait
sub
lods
adc
jle
test
int
lret
mov
xchg
pop
mov
rorl
outsl
pop
int3
push
mov
fcomps
pop
pushf
movsl
dec
and
mov
sub
push
cmpsb
mov
repz
ds
dec
jnp
push
int
sub
call
std
fwait
push
enter
and
jb
gs
and
cmpl
jne
mov
sbb
push
adc
inc
lods
ds
lock
aaa
aad
jg
outsb
sbb
and
cmpsb
cmpb
pop
data16
pop
add
in
shll
adc
stos
aam
int3
out
xchg
inc
testb
shl
push
dec
shr
out
addr16
sub
push
pop
xchg
mov
xchg
out
xor
data16
sub
movsb
jecxz
pop
popa
fs
sbb
leave
movsl
jecxz
out
fbld
mov
push
jl
jp
inc
aam
mov
xor
adc
cmp
cmpsl
inc
jecxz
or
sar
outsb
dec
push
ror
insl
push
or
lods
ss
inc
inc
hlt
add
push
pop
out
ds
rol
sub
sbb
sbb
orl
lods
cli
mov
sub
rolb
lret
pop
adc
xchg
mov
mov
xor
sub
jae
jp
test
sbb
mov
push
inc
push
push
push
push
push
inc
rorl
popf
mov
add
jl
add
xor
addl
stc
dec
out
push
mov
mov
bound
test
not
pop
bound
jmp
orl
cltd
add
and
insl
cmp
mov
adcb
jo
ret
push
and
and
in
xor
inc
adc
popa
hlt
cli
add
add
pop
push
and
dec
shrb
jmp
push
aaa
movsl
popa
ljmp
push
stos
ds
or
jl
cmp
sub
push
adc
xor
sub
ja
pop
test
and
adc
add
fwait
mov
mov
mov
jns
xchg
xor
js
lret
inc
sub
popf
loope
test
shll
or
inc
enter
or
rcrl
loop
and
in
dec
into
ret
push
repnz
cmp
mov
call
shl
das
shld
std
cli
pop
mov
or
dec
mov
dec
push
mov
movsl
popf
mov
mov
lock
loope
adc
out
aam
cli
or
jle
mov
cmc
aam
andl
mov
sti
aad
fimuls
repnz
popf
sbb
test
aad
or
push
shrl
add
xchg
sbb
push
aas
mov
inc
jl
sahf
sbb
mov
fidivrl
cmpsb
out
call
repz
cmp
or
dec
or
sbb
adc
pop
sub
testb
lcall
data16
mov
xor
mov
ss
in
add
or
in
loopne
outsb
xchg
fcmovnu
and
iret
je
lahf
fstp
int
mov
iret
mov
aad
pop
mov
or
lret
outsl
pusha
push
mov
outsb
jnp
aaa
hlt
dec
sub
jecxz
lahf
call
pop
sbb
push
dec
inc
jne
cwtl
mov
movsb
std
iret
hlt
dec
scas
loope
lcall
jnp
or
cmc
inc
jmp
sbb
bound
call
inc
xchg
and
mov
arpl
jae
movsl
pop
mov
leave
push
scas
popf
loopne
mov
in
lods
rolb
jb
and
dec
shll
in
loope
or
xchg
xchg
jecxz
repnz
cmp
jge
sbb
ficoms
push
push
out
mov
pushf
and
push
jno
test
ret
fdivrs
dec
sti
mov
fldenv
mov
movsl
mov
outsl
stc
and
fcoml
and
fsubrl
into
jbe
cld
sti
cmp
add
cmp
xorl
xor
gs
fldcw
jo
xchg
push
mov
cwtl
cmc
jb
clc
inc
jb
lret
test
lret
xchg
imul
or
pop
imul
outsl
and
aas
inc
xchg
fcomps
xchg
notl
movl
cmpsl
ret
jb
jno
popf
push
shr
pop
jns
xchg
mov
cli
dec
adc
sub
repz
rorl
mov
sub
pusha
cmp
iret
cmp
inc
std
test
idiv
sub
xchg
inc
int
adc
fisttpll
jno
aas
or
lods
push
xor
inc
xor
imul
popa
lds
inc
sub
mov
sarl
test
dec
out
int
cmp
cmp
sbb
jmp
cmc
or
or
enter
out
jecxz
adc
cli
je
out
loop
outsl
cmpsb
enter
inc
out
repnz
mov
and
mov
mov
popf
sbb
es
popa
insb
add
test
sti
out
sub
mov
mov
adc
into
in
adc
sbb
adc
sarl
mov
fistpll
dec
fadd
je
inc
cs
fistps
std
pop
roll
scas
mov
fidivs
jg
xchg
out
inc
fistl
inc
push
sub
pop
dec
adc
shll
add
fcompl
lods
es
xchg
cmp
loop
loope
mov
bound
pop
push
fistpl
sub
icebp
outsl
repnz
arpl
clc
jno
or
add
mov
lret
bound
repnz
mov
sbb
mov
fimull
and
mov
mov
xchg
mov
jno
or
sbb
inc
xchg
ret
mov
jo
pop
or
popf
dec
setne
loope
sub
lds
test
out
adc
mov
mov
jae
ss
cs
cmp
shll
sti
jmp
lds
cmpl
mov
and
or
mov
ljmp
ja
cs
or
imul
mov
and
mov
pop
xchg
jno
popf
xor
mov
hlt
mov
mov
pop
pop
mov
push
shl
stc
mov
inc
pop
call
jnp
test
add
jo
mov
pop
insl
sbb
jb
inc
inc
push
lret
nop
fidivs
fisubrl
inc
mov
lods
aad
subl
filds
inc
mov
xchg
add
test
mov
push
out
and
mov
mov
xchg
cs
sbb
push
arpl
scas
and
inc
out
add
jge
xchg
and
fsubrl
push
in
jne
dec
xchg
jmp
mov
shlb
pop
adc
dec
inc
test
xchg
push
pop
xor
ret
int3
aam
addr16
mov
das
add
add
pop
push
push
push
pop
push
pop
pop
xchg
stos
mov
push
xchg
fiadds
add
add
pop
sbb
je
call
ja
ja
mov
movsl
inc
rorb
cwtl
cltd
inc
add
push
xor
xchg
fs
stos
into
jns
jb
mov
andb
pop
jae
sbb
or
pop
push
clc
or
jecxz
xchg
lahf
jle
movsl
cltd
add
mull
xchg
aam
arpl
outsb
sbb
cli
push
mov
xchg
sub
pushf
sbb
sub
rorb
insl
test
xchg
fxch
fimull
fwait
arpl
xchg
aad
mov
stc
gs
mov
mov
in
mov
fimull
scas
pop
dec
aas
mov
je
mov
or
fldl
jg
and
push
arpl
lret
and
xchg
dec
push
xchg
lods
xor
push
mov
mov
jne
popf
nop
dec
push
mov
mov
sti
pop
pop
fcomps
push
xchg
add
loop
mov
mov
adc
mov
inc
push
jae
sbb
jmp
loop
in
xchg
inc
mov
popa
cmp
pop
out
ljmp
cltd
pop
movsb
clc
iret
enter
adc
imul
mov
mov
das
push
and
out
adc
shll
jle
xchg
pop
jno
int
dec
inc
mov
dec
icebp
push
cmpsb
mov
jp
aaa
idivl
push
testl
hlt
push
add
daa
into
cmp
adc
mov
mov
in
sbb
push
movsl
jl
into
mov
scas
fmuls
loopne
dec
cmc
stc
add
cmp
mov
call
and
jg
out
imul
cmp
xchg
mov
pop
mov
sub
daa
and
mov
mov
outsb
add
je
cmc
rolb
sahf
dec
cmp
insb
fistps
fidivrs
lcall
dec
loop
sbb
cmpsb
es
inc
imul
aam
pop
adc
fwait
aaa
push
neg
adc
loop
inc
inc
sub
xlat
dec
mov
sti
cwtl
jmp
nop
pop
jnp
and
fwait
dec
inc
add
pop
and
shr
testl
dec
shrl
scas
les
xchg
add
iret
inc
lods
loop
popf
fxch
out
insb
xchg
inc
fwait
sbb
fidivrs
cmp
dec
push
subl
push
imul
xchg
sub
add
out
or
jb
mov
jns
mov
jle
sub
sbb
aad
cmp
adcb
call
mov
scas
loopne
cld
push
pop
sbbb
mov
shlb
sbb
mov
mov
lret
lea
sub
addr16
dec
lahf
shlb
jge
mov
das
lods
or
cmp
fsub
sub
test
das
mov
loope
mov
roll
xor
dec
cmp
aad
mov
push
inc
sub
push
or
sub
add
xchg
clc
int
scas
inc
stos
dec
mov
leave
outsb
mov
jp
and
mov
and
fists
mov
ror
addr16
std
in
arpl
int
push
push
push
or
and
sbb
in
cmp
xor
sahf
movsl
cli
mov
push
cli
cmp
jecxz
and
pusha
je
and
xchg
mov
cmp
inc
cmp
xchg
mov
or
bnd
add
aad
loop
stos
adc
pop
mov
cmpl
test
je
call
stos
pop
daa
xchg
push
leave
pop
cli
pop
mov
adc
ja
xor
ret
test
movsl
sub
jae
sbb
repnz
pop
push
mov
jo
sahf
stos
out
repz
push
dec
sbb
movsb
adc
push
sti
jbe
aas
xchg
xchg
or
xchg
insl
pop
loope
ret
test
jl
ret
iret
daa
mov
lods
mov
imul
pop
inc
and
stos
cmp
push
add
movsb
adc
shl
xchg
js
mov
orb
xor
addb
stc
cs
xlat
aas
xor
mov
sub
mov
ret
ljmp
cs
jmp
mov
pop
adc
or
inc
bound
push
fiaddl
mov
fbld
ficoms
ror
xchg
cmp
loope
stc
mov
or
add
pop
lret
movsl
inc
pop
fiaddl
pop
fistl
out
or
jp
lock
add
adc
or
cmp
dec
cmpsb
outsl
out
jg
inc
adcb
cli
out
push
xor
and
push
test
xchg
xchg
pop
jl
xchg
popa
xor
cmpsl
lahf
stc
push
jae
lret
mov
int
push
inc
arpl
fists
fwait
lcall
test
jecxz
add
add
mov
mov
mov
mov
pop
jge
int
test
cmp
xor
dec
xchg
and
into
stc
movsb
sub
xchg
xor
xor
push
in
cwtl
daa
add
aad
mov
mov
dec
xchg
sub
fucomip
outsl
cmp
enter
mov
rclb
test
adc
push
mov
xor
and
jae
pop
adc
jno
inc
test
sbb
or
xchg
pop
loopne
imul
shll
fwait
jo
mov
outsl
rcrb
jo
fscale
test
xchg
ss
mov
inc
jmp
and
roll
jmp
stos
rcrl
xchg
xchg
adc
mov
dec
dec
orb
dec
push
fmull
repnz
inc
mov
iret
shll
lahf
jbe
lea
lret
xchg
inc
sti
sar
dec
loop
cmc
jb
add
add
push
push
pop
push
dec
pop
idiv
jl
adc
add
jl
add
xor
mov
mov
inc
or
add
push
cmp
jns
mov
jmp
out
mov
repnz
mov
or
push
sub
bsf
aad
xor
mov
movsl
testb
call
cmp
or
push
and
cmp
loope
sub
test
adc
jle
inc
int3
out
adc
mov
and
sub
cmp
popf
movsb
in
mov
jo
pop
lahf
inc
imul
shrb
loopne
arpl
and
push
fpatan
out
sarl
cld
jmp
xchg
fldcw
dec
or
push
icebp
pop
mov
push
pop
mov
std
js
pushl
lods
push
jne
xor
jmp
jnp
insl
testb
mov
sub
fiadds
pop
mov
jo
mov
stos
outsb
mov
inc
addb
or
in
jg
add
jae
ret
inc
push
sub
or
jmp
jo
pop
mov
xchg
jmp
dec
mov
pop
outsl
rolb
cwtl
adc
mov
lret
ret
stos
sbb
mov
jp
dec
mov
inc
jecxz
xchg
mov
xor
stos
rorl
xchg
dec
cmp
stc
sbb
xor
aam
push
mov
xchg
xor
popa
and
imul
xor
sub
daa
xchg
mov
testb
mov
repnz
test
imul
pop
inc
jno
mov
lret
mov
fistps
xor
js
in
popf
ja
sbb
sub
inc
lock
outsb
pop
insl
arpl
sbb
and
testb
popf
je
mov
int
out
xchg
inc
loope
ja
xchg
mov
adc
lret
cmp
pusha
repz
mov
push
je
not
and
imul
inc
inc
push
sbb
lock
cmc
mov
push
mov
and
or
dec
repnz
add
mov
dec
fnstenv
lods
iret
jecxz
jmp
minps
test
xchg
sarl
hlt
testb
xchg
xor
hlt
aam
fsubr
call
mov
dec
adc
popa
repnz
std
shl
xchg
pusha
cmpsl
icebp
notb
jae
inc
mov
push
dec
jae
pop
les
inc
inc
out
stc
and
or
jp
pop
cmpsl
cs
jns
daa
xchg
je
mov
dec
jmp
xchg
es
fs
inc
xor
arpl
lea
sub
mov
inc
mov
mov
xchg
push
gs
xchg
push
mov
push
sub
lcall
add
sub
sbb
push
lret
dec
push
je
fwait
js
sbb
out
enter
push
scas
and
into
std
test
mov
and
jmp
sub
ja
dec
hlt
push
ret
sbb
and
std
mov
dec
imul
out
lret
mov
incl
xor
cs
xchg
cmp
movsl
mov
call
cli
arpl
je
adc
jmp
call
stos
pop
xor
xchg
nop
jmp
ds
dec
pop
repnz
enter
inc
aam
cmc
add
lods
ss
sub
adc
fsubrp
pop
lcall
add
mov
xor
jnp
jecxz
sti
addr16
add
loop
aaa
popa
outsb
scas
cmp
jmp
sarl
or
pop
outsl
loop
sub
enter
push
out
lock
sub
cmp
pop
push
cmp
jbe
pop
pop
cmp
cli
aas
cmpsl
push
stos
sbb
mov
sbbl
dec
ficomps
outsl
mov
and
jne
rcrb
lods
test
mov
bound
mov
xchg
test
inc
stos
sub
rcrl
arpl
pop
js
mov
pusha
test
ja
movsl
push
xchg
jo
mov
xchg
xchg
and
lds
push
push
sbb
push
and
cltd
adc
aas
xchg
push
jne
and
daa
dec
or
outsb
leave
and
inc
jnp
dec
jo
jne
pop
divb
mov
pop
in
fnsave
fiadds
mov
cmp
adc
loopne
sub
fs
pop
mov
dec
sbb
xchg
fldl
ds
push
sahf
adc
xor
inc
lret
test
push
test
sub
cmp
pop
dec
ds
push
inc
push
push
sti
icebp
ret
mov
jbe
stc
push
jo
movsb
shll
push
jl
mov
test
scas
std
out
sbb
loop
andl
jbe
xchg
add
dec
adc
ficoml
inc
loop
xchg
cmc
jo
inc
pop
int
adc
mov
inc
shrb
fistpll
hlt
dec
mov
push
fwait
ror
sub
not
pop
adc
sub
dec
jns
mov
mov
dec
push
popa
movsl
lods
test
push
add
fisttpll
add
xor
pushf
xchg
jo
rclb
adc
lcall
hlt
fildl
aas
pop
leave
pop
and
pushf
cltd
stc
stos
xchg
jmp
push
add
push
cmpb
mov
lret
out
xadd
ret
mov
sbb
cmp
in
sbb
lds
hlt
cmp
arpl
cmp
pop
fisubs
pop
fisttpl
inc
cmp
fstpl
mov
or
push
fs
push
add
dec
insl
cmpsl
pop
cmc
sbb
adc
jno
xor
movhps
and
ljmp
or
dec
in
xor
imul
and
sub
les
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
xor
jmp
add
add
lods
into
bound
cmp
xchg
jnp
xchg
jmp
rcl
pusha
stos
test
mov
iret
pop
pushf
jmp
mov
jmp
pop
inc
xor
jecxz
mov
inc
sti
cmp
mov
mov
imul
xchg
gs
aaa
test
pop
mov
xlat
fs
lods
inc
or
and
sahf
test
cmpsl
mul
sbb
inc
pusha
pusha
mov
push
mov
mov
dec
icebp
ss
stos
jle
dec
repnz
dec
lret
scas
cmp
fiaddl
js
mov
adc
inc
dec
fcompl
idivl
lret
orl
sub
insb
outsb
push
ja
in
jo
out
xchg
and
jns
and
sbb
adc
insb
sub
pop
sarl
cmpsb
loop
pop
sbb
dec
movl
lret
fisubs
inc
or
mov
outsb
out
stos
push
push
mov
sub
es
adc
sub
jle
rcrb
cmp
ret
rcr
arpl
fs
ss
fcmove
mov
adc
xchg
inc
jg
popa
fistpl
rcr
les
mov
or
daa
dec
push
scas
push
mov
add
push
inc
jg
ja
pop
mov
jno
pushf
or
and
fwait
rclb
iret
xor
or
cmpsl
mov
fists
testb
add
loope
imul
outsb
cwtl
pop
sub
xchg
xor
push
jae
add
add
adc
hlt
test
mov
fs
add
in
test
cmpb
icebp
mov
xchg
xlat
fimull
cs
rcr
fistpl
into
lods
aas
adcl
and
jae
sbb
cmp
ret
xchg
and
push
push
mov
jns
fmul
push
jmp
mov
add
jle
cmp
push
pop
cmp
dec
je
sub
cmp
adc
test
leave
repnz
test
inc
imul
adc
shlb
dec
cmpsb
push
lret
cld
mov
cmp
and
int
jb
push
lock
clc
push
jo
add
push
or
dec
es
dec
mov
mov
push
adc
mov
and
add
outsb
adc
cwtl
dec
das
movsl
cmp
insb
dec
pminsw
push
push
mov
lds
popf
mov
cwtl
pop
xor
call
cmp
xchg
scas
mov
jle
push
bound
test
test
cwtl
push
cmp
pop
inc
pop
adc
test
insl
push
inc
into
push
cwtl
dec
in
rclb
jbe
ss
xor
in
fdecstp
popf
inc
fmull
popa
das
shll
fst
iret
cwtl
xorb
or
daa
xor
xchg
fnstcw
test
ja
push
push
imul
sarl
pusha
rcrb
shlb
shlb
fcompl
popa
pop
jecxz
lret
add
sub
cmp
lods
mov
std
nop
stc
movsb
mov
xchg
inc
sub
sbb
pusha
mov
pop
mov
adc
cld
push
push
cmp
or
push
jecxz
cmc
ret
es
iret
mov
out
mov
push
pusha
jae
cmp
lds
mov
rolb
stc
or
mov
jmp
in
or
or
push
popf
ja
add
add
mov
mov
add
insb
mov
fistl
push
daa
mov
sub
sub
in
outsb
push
int3
sbb
inc
popa
leave
shrb
movsl
or
xchg
nop
fildl
mov
int
push
inc
cmp
outsl
dec
aad
imull
mov
mov
aad
mov
inc
xor
pushf
leave
out
dec
or
icebp
cmp
or
popf
in
pop
arpl
je
mov
push
hlt
dec
jmp
mov
dec
dec
mov
xor
subb
aad
mov
mov
or
fmull
icebp
sub
inc
mov
icebp
dec
push
sbb
mov
fsub
push
add
les
cmpsl
mov
ret
call
xor
lret
nop
or
mov
add
shrl
loopne
xchg
pop
insb
insl
arpl
mov
clc
rcr
add
mov
cmpsl
xchg
into
xor
ret
inc
icebp
jle
popf
inc
nop
sub
test
hlt
or
or
xlat
fsubrl
lcall
adc
sti
in
or
inc
adc
jmp
rcl
jnp
xchg
push
cmpsl
dec
fwait
xor
adc
mov
ret
xchg
mov
andl
cmp
mov
je
clc
inc
mov
aas
out
es
jecxz
imul
gs
xor
pop
call
xlat
mov
daa
addb
aad
add
lods
jo
or
movsb
leave
into
jecxz
lcall
repz
out
sbbl
mov
dec
inc
sub
adc
xchg
jmp
cmp
add
push
push
cmpsl
xor
mov
adc
repz
popf
out
addl
inc
jl
cmp
clc
out
cmc
ficomps
out
pop
and
mov
ljmp
adc
xchg
cmpsl
cmp
inc
mov
loopne
arpl
inc
sbb
jae
cmp
cmc
mov
jecxz
call
push
jne
cwtl
je
jbe
pop
aas
aaa
mov
fwait
aas
test
pushl
imul
push
aas
lods
pushf
repz
cld
mov
aaa
rclb
or
je
nop
mov
and
mov
and
mov
cmp
imul
inc
enter
push
aas
sti
add
and
add
add
inc
push
pop
push
pop
pop
ss
imulb
fcompl
add
jl
add
sub
cmc
int
mov
sub
push
jb
add
dec
mov
sub
push
cld
fs
mov
insl
cwtl
jle
jb
or
xchg
shl
cmp
mov
mov
xchg
sti
jne
pop
adc
or
pusha
test
sbb
or
insl
shlb
test
push
in
adc
cs
jo
and
stc
arpl
lret
scas
mov
insl
sbb
cmp
cmpsl
add
mov
xor
mov
xor
sbb
pop
lods
adc
testb
clc
ja
push
dec
mov
push
arpl
xchg
int
mov
mov
sbb
cld
and
or
imul
jo
lcall
pop
inc
sub
push
ljmp
outsb
cs
imul
sub
jb
scas
sub
shlb
cmp
rcll
cmp
mov
les
adc
stos
cmp
cs
aas
push
fadds
ret
fdivs
loop
jg
adc
push
inc
pusha
push
pop
jmp
in
push
loop
enter
jo
les
jmp
xor
js
pop
jmp
lret
clc
xchg
xchg
add
push
ret
dec
xor
insl
mov
xchg
mov
xchg
mov
sbb
xor
es
int3
fsubs
jl
pop
cmp
test
mov
jge
xchg
fstl
gs
xchg
inc
mov
jp
lock
xchg
fstpt
test
hlt
sub
gs
xor
pop
mov
cmp
sbb
jmp
stos
sub
pop
pop
cwtl
xchg
xchg
mov
out
xor
mov
pushf
aam
cmp
jb
sub
in
call
repz
xchg
inc
add
fiadds
bound
iret
or
add
dec
push
sub
dec
cmp
incb
hlt
clc
outsl
faddl
xchg
sbb
push
xchg
mov
stos
fimuls
xor
divl
gs
mov
bound
mov
jle
leave
and
and
or
cltd
xchg
jp
rcr
fsubl
cltd
neg
gs
mov
add
jbe
imul
push
pop
iret
sub
mov
sbbl
xchg
flds
test
mov
or
int3
or
cltd
mov
outsl
dec
cmpsb
in
xchg
inc
push
push
push
cmp
ja
jmp
stos
loope
adc
xchg
lock
dec
in
fdivrs
jp
test
loope
adc
xchg
xchg
nop
mov
lret
adc
jecxz
add
test
add
das
repz
xor
ret
js
ljmp
ficoms
xchg
pop
mov
aaa
test
adc
pop
and
clc
or
call
sbb
into
adc
div
adc
ud2
gs
pop
jmp
or
rcl
jge
push
daa
test
ret
xor
call
xor
ror
sahf
shlb
adc
and
lret
shrl
les
xchg
lock
lock
jbe
jns
loop
into
lds
lret
orl
gs
xchg
cwtl
adc
aas
sub
js
adc
pop
loope
and
pushf
loope
dec
insb
fstpt
fildll
pop
xchg
insb
pop
jge
sub
sbb
jae
cmpsb
pop
ficompl
lret
add
inc
ret
imull
jne
add
cwtl
fwait
jno
nop
aam
aad
loop
or
add
enter
movsb
mov
xchg
les
fwait
xor
es
gs
rcr
fwait
lock
fdivr
je
movnti
sub
fisubrs
jno
and
jnp
cmp
dec
lahf
add
dec
mov
aad
filds
aad
cmpb
pop
and
mov
daa
cmp
call
inc
adc
mov
repnz
mov
enter
or
ds
push
out
loope
lret
pop
in
sub
pusha
mov
pushf
scas
int3
jecxz
sti
sub
out
pop
add
out
movsl
dec
cld
in
fldenv
xor
sbb
xor
push
inc
test
icebp
and
out
sbb
jo
sbb
add
sbb
es
adcl
xchg
dec
cmp
mov
jp
pop
les
es
dec
push
pop
add
daa
ljmp
ljmp
or
daa
rorb
test
jne
or
cmp
and
mov
mov
inc
mov
push
iret
adc
imul
repnz
mov
cmp
dec
push
mov
std
repnz
push
bound
sub
icebp
es
sub
xchg
test
sub
push
lret
xor
xlat
push
jmp
inc
fidivs
pop
hlt
loopne
insl
ret
jnp
xchg
data16
fisttpl
sub
neg
ss
fcmovne
lods
data16
adc
mov
cmp
mov
xchg
sahf
fwait
out
out
or
pop
imul
leave
cmp
imul
call
dec
test
jbe
add
sub
call
cmp
sbb
mov
roll
inc
int
xor
push
sbb
sbb
out
lret
adc
xor
or
loopne
pop
or
rclb
inc
inc
push
lret
and
inc
inc
or
cmp
das
ljmp
in
mov
adc
mov
pop
imul
lcall
pop
push
in
test
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
hlt
sbb
add
sub
popf
rclb
or
pushf
ss
jnp
lods
pop
js
xchg
xorb
out
lret
iret
loopne
leave
cmpsl
mov
pop
imul
cmp
ds
idivl
orl
mov
dec
rorl
outsl
push
mov
jp
clc
push
ret
test
dec
dec
or
mov
cmpsl
aaa
xor
inc
sub
icebp
mov
jae
in
das
mov
mov
movsb
push
pop
ret
enter
aad
push
jle
data16
mov
jb
fsubr
fimull
xchg
sub
icebp
into
jbe
sub
divl
add
jns
xchg
adc
cltd
jne
gs
repnz
addl
ds
sbb
lret
sar
or
out
push
cmpl
aam
mov
lret
scas
xor
aaa
and
jb
mov
inc
push
int3
mov
lahf
mov
lret
gs
test
loopne
mov
xor
popa
adc
mov
mov
not
jmp
lock
mov
notl
adcb
test
and
sub
imul
mov
mov
cmpsb
stos
loope
inc
and
out
fsubrl
xchg
ss
cltd
int
shr
popw
fistpl
int3
sub
test
lock
mov
pushf
pop
mov
mov
add
mov
xor
arpl
sbb
ret
addr16
sub
stos
add
jbe
lock
aaa
mov
test
xchg
iret
cmc
push
push
dec
ficoml
mov
adc
adc
mov
outsl
push
sahf
jl
mov
icebp
and
mov
imul
loopne
scas
mov
int3
cli
ja
adc
adc
hlt
adc
push
leave
inc
mov
movsb
aad
es
jno
dec
dec
xchg
sub
adc
add
je
jnp
and
xchg
inc
rorb
movsl
sub
test
push
xchg
push
push
xor
jp
add
inc
enter
test
lahf
sub
out
mov
xchg
pop
ret
sbb
data16
ja
mov
orl
cltd
cmp
adc
mov
out
outsl
fcoml
add
mov
jae
cmpsb
pop
cltd
cmp
fs
stc
leave
xor
ds
out
test
xchg
shlb
or
in
negl
int
cmpsb
mov
dec
sub
popa
imul
fdivl
cmpsl
incb
pop
pop
add
jno
mov
sub
orl
faddl
cmp
and
jno
add
das
xor
inc
leave
adc
add
imul
ja
dec
ror
popa
movsb
xor
lods
ja
pop
mov
xor
sbb
and
popa
rcr
mov
xor
xchg
ds
dec
push
adc
dec
dec
bound
aas
or
xchg
jge
std
test
sahf
push
dec
hlt
notl
add
fmuls
push
xor
ljmp
cmp
inc
data16
dec
std
fistpl
stc
lock
movsl
nop
or
movsl
dec
scas
dec
sbb
cmp
jo
push
in
mov
mov
fcoms
je
sub
push
jecxz
cmp
xchg
mov
or
mov
ljmp
sbb
push
cmp
das
mov
xor
jl
xor
shrb
clc
cmp
ljmp
and
int
daa
xchg
xchg
pop
mov
adcl
and
cmpsb
xchg
jne
xlat
adc
pop
into
clc
arpl
stos
inc
ljmp
sahf
push
pop
dec
call
shr
movd
ret
mov
sub
stc
fcompl
cltd
test
mov
fdivrs
pop
fwait
out
jg
xor
pop
push
or
cltd
jl
nop
adc
aas
mov
xchg
mov
rolb
inc
test
push
or
cwtl
pop
into
je
mov
jno
and
jb
and
in
jnp
push
adc
dec
fnstenv
pop
pusha
insb
ret
mov
js
sub
dec
loop
dec
iret
leave
rcrl
fldt
insl
mov
movsb
dec
pop
mov
adc
imul
shl
sub
jb
push
lret
mov
cmp
xchg
ja
outsl
mov
jmp
sub
cmp
mov
in
loop
dec
ret
push
out
outsl
movsb
xchg
jns
and
jecxz
ss
hlt
cwtl
pop
xchg
mov
xchg
cmovs
xor
rcrl
test
push
push
cwtl
or
push
push
mov
lods
push
scas
inc
xchg
push
push
rclb
pop
rolb
cmc
stc
cs
mov
insb
push
mov
jle
jle
push
mov
scas
mov
xchg
outsl
pop
jb
jmp
pop
pop
pop
mov
call
and
in
cmp
xchg
cmpsb
idivl
or
jg
xor
adc
jb
mov
sub
out
mov
cli
adc
icebp
add
pop
cmp
inc
inc
inc
cld
inc
popf
mov
or
jmp
hlt
add
aad
pop
mov
and
js
mov
mov
in
or
imul
pop
or
push
and
imul
cmp
popl
xor
scas
imulb
sbb
mov
push
outsl
or
fwait
sbb
int3
aas
or
sub
insl
and
popf
fisubrs
sbbb
aas
cwtl
mov
cli
pop
push
fdivr
inc
sub
cwtd
out
pop
lods
fldl
stos
in
push
cmp
mov
inc
mov
out
ror
push
in
roll
int
ja
mov
jl
xor
aas
jae
je
sub
dec
push
jns
inc
xor
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
jmp
dec
xchg
addr16
push
inc
test
xchg
mov
sbb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
