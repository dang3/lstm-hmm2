push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
fldl
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
xchg
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
add
imul
enter
repz
mull
mov
fsubrs
mov
repnz
adc
je
in
xchg
dec
jnp
adc
cmpsl
outsb
sbb
roll
mov
dec
pusha
inc
out
leave
nop
mov
into
stos
cmp
pop
int3
mov
add
mov
or
mov
adc
and
mov
pop
addb
cmp
push
adc
mov
aam
imul
sub
imul
cmpb
cltd
dec
xchg
xchg
sub
add
popa
mov
mov
or
scas
mov
dec
xor
push
xchg
les
push
mov
mov
inc
pop
xchg
push
imul
or
jg
cmp
pop
arpl
push
cmpsb
test
inc
mov
mov
jns
lcall
jl
mov
push
pushf
adc
jl
jmp
nop
cmp
push
xlat
in
jg
push
loope
jo
popf
mov
bound
xchg
jo
cs
or
daa
inc
push
add
xchg
cmp
sti
test
mov
inc
popf
icebp
jne
lretw
pop
fwait
pop
cli
jmp
jne
into
loop
insl
lcall
js
loopne
lea
cmpsl
mov
lahf
mov
jmp
clc
icebp
mov
icebp
ficompl
out
pushl
jo
jo
jo
jae
jo
pop
sub
pop
push
add
bound
and
fsubl
dec
les
mov
icebp
sbb
je
adc
test
outsl
pop
fyl2x
loope
inc
adcb
push
sub
and
fs
out
nop
mov
mov
mov
imul
into
dec
jno
dec
sbb
mov
pop
mov
leave
mov
test
dec
mov
sti
loopne
movsl
in
add
cmp
sbb
in
test
xchg
mov
fimull
imul
nop
jp
or
movsb
xorl
ss
popf
bnd
and
pop
cwtl
fstp
mov
pop
rcrl
dec
dec
sbb
dec
xchg
jle
cmc
mov
clc
pop
hlt
pop
ret
aam
or
cmp
jnp
dec
jb
loopne
mov
adc
scas
mov
or
cmp
jb
jne
inc
shlb
mov
inc
pop
movsb
jb
repnz
ja
sub
fnstenv
ficoms
mov
or
icebp
push
ficoms
xor
mov
pop
in
jnp
adc
cmp
xlat
cmp
jp
xchg
cmp
clc
fwait
adc
xchg
sarl
xchg
mov
push
insb
adc
imul
enter
iret
add
out
fnstenv
pop
in
ljmp
adc
les
rorb
mov
pop
pop
iret
pop
lods
shl
jl
push
addr16
or
and
add
pop
pop
dec
insb
jge
cmp
lods
adc
std
sbb
lods
pop
sub
xor
or
push
fsts
sbb
bnd
mov
clc
dec
pop
jb
mov
inc
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
daa
aad
mov
jo
jo
pop
daa
or
lods
jo
js
mov
push
int
fistps
das
xchg
ret
test
or
jge
in
dec
inc
xlat
sub
or
inc
in
inc
add
xor
leave
cmp
pop
mov
pop
inc
or
inc
ret
push
jge
test
push
cmp
sar
dec
repnz
push
add
cmpl
push
stos
fwait
cwtl
loop
mov
es
popa
mov
xor
jp
push
outsb
mov
in
adcl
stos
xor
cmpsl
jno
and
stc
scas
jno
les
and
xchg
gs
mov
add
lret
shrl
sub
add
aam
or
pop
fs
aaa
daa
jo
notb
add
daa
inc
mov
imul
fstpl
mov
dec
pop
or
movsb
xchg
adc
out
pop
mov
lock
subl
dec
iret
jb
scas
mov
pop
adc
aaa
mov
sub
adc
pop
outsl
jns
sub
xchg
loop
in
pop
ja
add
shll
xor
lret
addr16
pop
push
xor
in
popa
js
stc
ja
rorb
pop
aam
fidivrs
into
sbb
test
xlat
and
clc
clc
mov
gs
cmp
mov
xchg
fcompl
adc
inc
insb
mov
aad
fmuls
es
and
fwait
jo
je
andb
push
cli
shll
dec
lret
loope
xchg
leave
or
stos
add
pop
add
hlt
hlt
cmp
inc
adc
and
mov
sub
pop
icebp
sub
push
or
shlb
pop
or
popl
inc
sti
or
jge
addr16
jg
int
and
jecxz
shrl
adc
shlb
lahf
dec
or
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
sub
jo
jo
imul
lcall
mov
cmpsb
add
leave
fucomi
dec
clc
mov
sub
push
inc
rcll
inc
mov
scas
lea
mov
out
or
xchg
dec
xchg
js
lock
inc
ljmp
out
mov
mov
es
sbb
lret
mov
dec
scas
daa
aam
mov
and
sbb
or
jne
cmp
sub
add
ljmp
pop
xchg
and
insb
push
rcrl
int
ret
aad
ror
or
inc
sbb
pop
pop
mov
ja
nop
jmp
aas
ds
push
adc
pop
mov
popa
gs
shrl
popa
push
mov
ja
xchg
pop
dec
stc
js
xchg
dec
jecxz
xor
dec
lea
mov
add
imul
movsb
adc
stc
and
fidivrl
jb
in
sbb
sbb
cmp
mov
mov
and
stos
mov
pop
rcll
sbb
mov
mul
mov
mov
pop
in
sub
push
push
cmp
or
mov
mov
adc
in
subl
cmp
sahf
rcll
mov
pop
cmovne
or
and
and
mov
outsl
jecxz
dec
add
add
pusha
dec
nop
jge
push
jmp
arpl
pop
add
out
fsubs
cwtl
mov
es
mov
mov
dec
data16
mov
sbb
push
aam
imul
scas
cmc
fbld
or
add
in
and
into
cmpl
and
xchg
push
jno
jbe
push
stc
nop
jl
int
mov
push
jmp
ds
icebp
daa
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
add
stos
jo
jo
jo
jo
xchg
cwtl
and
and
dec
adc
in
xchg
cltd
xorl
es
dec
subl
lods
data16
arpl
fsubp
enter
outsl
push
cli
mov
sbb
adc
in
stos
outsl
imul
repz
inc
insl
int3
aam
mov
cld
nop
je
dec
pop
out
lods
push
mov
out
rcl
xchg
out
popl
ror
out
jae
push
jmp
mov
outsb
mov
shlb
in
adc
fimuls
rcl
inc
into
aad
js
inc
leave
mov
mov
jle
mov
push
arpl
inc
aam
pop
inc
dec
aas
mov
mov
fbld
stos
mov
subb
xchg
sub
orl
imul
pop
imul
daa
rcrl
loopne
mov
aas
push
push
sub
sub
pop
std
adc
std
ret
outsl
inc
push
filds
mov
orb
js
into
icebp
bnd
roll
repz
mov
cmp
adc
cmpsl
fcoms
outsb
bts
add
imul
in
jmp
pop
mov
xor
loop
sbb
enter
fwait
xchg
rorl
jl
lahf
data16
inc
pusha
xchg
mov
sub
outsb
jae
out
fstpt
pop
ja
icebp
inc
adc
push
jno
inc
push
shlb
mov
daa
adc
xor
das
jae
mov
sbb
hlt
xchg
jge
cmp
mov
movsl
test
cmp
gs
mov
push
mov
push
pop
fwait
dec
cltd
jno
stos
xchg
xor
and
test
mov
mov
mov
mov
push
adc
add
or
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
ds
jo
jo
jo
jo
cmp
stos
push
loop
sbb
fstps
ljmp
insl
sub
cwtl
in
repnz
inc
jl
mov
inc
cmp
ffree
push
pop
loopne
xchg
sub
push
aaa
jg
add
mov
push
hlt
xchg
sbb
push
es
pop
sub
out
add
mov
fimull
icebp
dec
lahf
int3
loope
sbb
and
lret
add
lock
mov
mov
test
mov
pop
test
lahf
jl
test
xlat
adc
mov
popf
adc
pop
mov
call
jge
jge
sbb
imul
popf
pop
cld
or
pop
std
push
pop
cli
sub
mov
sbb
movsl
je
les
not
in
xor
fidivs
and
cwtl
rcrl
int
inc
and
shr
push
icebp
xchg
scas
add
sbb
sub
sbb
mov
scas
je
push
lcall
lds
xchg
mov
pop
pushf
aas
add
jmp
into
stos
int3
dec
xchg
movsl
mov
movsb
mov
lcall
inc
mov
imul
je
lcall
jo
js
cmc
cmpsl
cwtl
xchg
dec
pushf
xor
js
xchg
mov
scas
xor
aas
fsubl
add
sub
mov
mov
lods
std
aas
in
gs
out
xor
push
adc
fadds
dec
mov
jle
inc
std
pop
adc
jge
mov
xchg
mov
mov
add
ret
cmp
lods
inc
je
dec
ret
rclb
adc
cmp
enter
inc
adc
push
movsb
nop
cmpsl
pop
out
out
rcll
call
sbb
push
adc
shl
std
movsb
add
insb
mov
xchg
pop
inc
cmpl
insb
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
xorb
pop
jo
jo
jo
jo
hlt
mov
mov
and
addr16
jb
inc
mov
daa
mov
jb
and
mov
pusha
and
jbe
adc
adc
lret
imul
test
divl
jae
cwtl
sti
data16
mov
addr16
test
clc
inc
cmp
sub
mov
and
ret
add
cltd
mov
dec
xor
sub
cmp
pcmpgtw
inc
inc
pop
in
js
or
sub
push
xchg
mov
ds
pop
push
out
xor
repz
sahf
loope
mov
jb
sub
dec
and
inc
das
mov
fimuls
mov
mov
add
sub
imul
insb
add
pop
adc
lods
push
sub
repnz
nop
jge
cmc
js
ljmp
jl
roll
popf
dec
adc
stos
push
daa
push
adc
mov
push
rorb
pop
mov
out
movsl
lock
bound
jb
jns
lock
jns
mov
mov
bound
lret
jl
xchg
xchg
out
pop
mov
fs
sahf
das
repnz
inc
jb
scas
jb
add
jo
ret
cwtl
div
testb
fdiv
das
jo
dec
out
or
out
push
xor
aam
xchg
jl
aad
cmpb
int
cwtl
mov
and
test
sbb
bnd
jl
test
sar
sbb
lea
xchg
push
gs
jo
insb
jbe
popa
jle
in
push
push
jo
call
int
cld
or
and
divb
movsl
mov
mov
sbb
adc
xor
sub
jmp
sbb
mov
call
inc
dec
jae
pusha
xchg
push
movsl
fs
jo
subb
popa
fildll
mov
les
pause
insl
sbb
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
stos
ss
jo
jo
jo
inc
in
loop,pt
lahf
sarb
rcll
mov
cltd
push
xor
shl
push
outsb
sarb
push
mov
xchg
push
add
es
ds
popa
mov
xchg
lock
in
mov
pop
sbb
adc
ljmp
push
pop
mov
sti
add
movsb
push
sahf
pxor
adc
sub
ret
adc
and
test
dec
xchg
icebp
icebp
out
sub
jae
push
and
aam
js
cmp
mov
mov
jecxz
data16
mov
adc
push
inc
adc
and
push
and
repnz
or
cld
daa
mov
shrb
or
jle
add
cmp
mov
adc
pop
dec
ss
add
scas
lods
xchg
and
nop
dec
adc
sub
fucom
sbb
sbb
test
int3
lea
sbb
fwait
dec
push
stos
cmp
mov
sahf
shll
insl
inc
cmp
adc
inc
cld
jbe
push
data16
mov
call
inc
add
xchg
adc
lock
popa
mov
dec
xchg
jecxz
sub
test
stc
mov
inc
and
insl
push
add
fldl
shrb
lretw
jg
inc
cmp
push
or
cmova
out
mov
cmp
in
dec
push
movsl
cmc
mov
lahf
add
out
sbb
repz
push
pushf
jge
ds
jl
jg
pop
pop
nop
in
add
sub
imul
cmp
popf
dec
popa
and
jmp
adc
movsb
fwait
loop
dec
dec
repz
push
dec
scas
repnz
add
or
mov
clc
enter
pop
jns
cmp
or
sbb
mov
enter
add
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
mov
add
jo
jo
jg
enter
push
and
movsb
xor
push
idivl
je
add
rolb
mov
mov
dec
ficomps
mov
in
jle
ja
push
loope
out
jle
add
push
inc
addr16
daa
xchg
mulb
sub
adc
fildll
xchg
xchg
movsb
add
in
cwtl
stos
xor
xor
ret
mov
push
ret
jmp
push
dec
insb
add
sub
or
je
mov
mov
popa
arpl
gs
xor
incl
insb
add
push
test
repnz
mov
sti
dec
and
and
test
lahf
push
in
mov
lcall
jg
push
rol
sub
shlb
jbe
je
cmp
push
aad
add
sbb
in
std
fimull
push
mov
sbb
sbbb
pop
aad
in
pop
xchg
dec
xor
cmc
lcall
mov
pop
sbb
ljmp
fmull
fstps
pop
test
mov
mov
adc
aad
push
and
lcall
sub
lahf
cmp
xchg
and
sbb
adc
std
out
das
loopne
dec
xlat
sub
cmpsl
divl
hlt
je
push
xchg
jge
subb
and
mov
out
add
or
push
cli
aaa
negb
scas
add
sbbb
xor
int
lods
xor
data16
lea
cmp
xchg
into
mov
jns
add
xchg
xchg
insl
adc
into
test
fcomip
enter
popf
insl
lods
shrb
imul
pop
mov
clc
add
pop
lods
mov
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
mov
mov
dec
inc
jne
call
sbb
addb
int3
loop
pusha
xor
lret
xor
dec
push
cmp
pop
fwait
in
xchg
ja
cmp
fsts
mov
cmpsb
bound
repnz
leave
jno
bound
jl
push
les
xchg
push
or
rorb
push
mov
push
inc
jecxz,pn
xor
stos
xchg
ljmp
es
mov
add
out
les
ss
jb
sub
ds
lods
mov
ljmp
mov
cmp
and
fnstsw
push
in
or
aam
and
cmpsb
inc
push
lahf
mov
loop
rclb
je
xchg
jno
shll
data16
les
adc
push
fsubr
rcll
inc
xlat
sbb
or
int3
or
sub
push
lds
sub
sbb
mov
mov
cmp
addr16
cli
shll
test
stos
sti
test
mov
test
push
mov
push
or
in
ljmp
add
sub
and
inc
sti
lods
out
punpckhwd
sbb
adc
cmp
cmp
lahf
mov
pushf
cwtl
je
push
out
xchg
call
cmp
sar
loope,pn
insl
test
ss
xor
cmp
cwtl
shll
loop
mov
mov
std
movsl
jg
lret
ss
bound
sahf
mov
cmp
pushf
xlat
inc
test
pop
adc
jbe
fldcw
jne
and
adc
xchg
push
ret
pop
cltd
add
jae
ljmp
cmp
cmpsl
outsl
fisttpll
pop
fdivr
addl
movsl
pushf
pop
jno
sbb
scas
cld
rclb
jmp
mov
add
in
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
dec
lret
inc
adc
or
lods
arpl
test
adc
xchg
shrl
gs
pop
cwtl
pop
lret
cwtl
jns
and
je
adc
ficompl
and
mov
les
jle
or
xchg
imul
xor
push
rcl
sub
stc
xor
out
jnp
pusha
rorl
leave
jb
aaa
push
loopne
mov
ljmp
loopne
ror
jmp
xor
jecxz
mov
dec
lea
xchg
sbb
mov
lea
dec
das
inc
jnp
adc
ret
ja
mov
or
movsb
cld
loop
push
xchg
in
cmpsl
lds
repz
pop
je
xor
xor
in
iret
pushf
jns
dec
mov
inc
push
inc
jl
add
add
mov
mov
scas
stos
mov
aam
cmp
inc
outsb
sti
ss
mov
fdivrs
xlat
out
imul
pop
mov
mov
lret
scas
xlat
out
mul
sbb
jecxz
cmp
cmp
into
lock
inc
das
xchg
xchg
mov
or
pushf
or
dec
lods
popf
jecxz
jnp
fstp
and
sbb
stc
dec
lcall
inc
xorl
mov
sbb
adc
push
push
loope
jnp
fsubs
push
je
jmp
sbb
xor
adc
aam
lret
dec
xlat
or
mov
sbbb
mov
mov
and
mov
out
inc
lock
sbb
dec
pop
or
call
dec
jnp
mov
push
mov
jmp
inc
or
rcr
push
push
cwtl
outsl
test
call
sarl
pop
xor
int3
or
sub
jl
loopne
bnd
push
dec
mov
add
and
sub
nop
fimuls
add
aam
faddp
fsubr
sub
arpl
jns
mov
cmp
push
ret
dec
inc
in
or
pop
and
jne
test
xlat
popa
sbb
sbb
gs
or
clc
cmpps
inc
push
lahf
push
rorb
push
adc
or
scas
int3
sub
and
lret
pop
sub
shll
insl
mov
fcoms
ja
xchg
jmp
or
mulb
aam
int
inc
fs
cmpsl
xor
sbb
sahf
loopne
adc
popf
xchg
sbb
in
add
mov
xchg
push
xor
cli
fld1
lock
cmpl
xchg
addr16
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
pop
sub
xlat
mov
jle
jo
in
xor
mov
jp
mov
shlb
hlt
sbb
fdivr
jnp
sub
adc
mov
lea
sbb
push
mov
add
rcl
popf
mulb
testl
shlb
jp
sub
fimull
cmp
dec
stos
add
cmp
test
cli
fdiv
aaa
ja
push
add
sbb
enter
jne
mov
xchg
dec
adc
dec
outsl
icebp
mov
not
leave
xchg
js
outsl
mov
cltd
mov
cmp
or
icebp
pusha
dec
int
sti
pop
roll
gs
pop
xchg
sti
fisttps
mov
mov
fs
data16
adc
and
ds
aad
pop
cmpb
popf
lahf
mov
outsb
pop
xchg
jno
sub
jp
mov
out
out
push
jae
cs
dec
mov
pop
and
cltd
cli
jbe
xor
pop
push
iret
mov
scas
test
ss
aaa
loop
sarb
inc
push
fmull
and
cvtdq2ps
mov
mov
out
repnz
lods
mov
fidivrs
sub
xchg
je
mov
and
xchg
inc
faddl
mov
adc
arpl
cwtl
fisubl
sbb
fisttps
pop
das
movsb
add
mov
adc
das
cwtl
cmp
cmp
pusha
jl
xchg
pop
mov
iret
lds
movsl
push
sbb
jb
shlb
in
mov
andl
cmp
cwtl
repz
mov
fs
in
push
xchg
push
lods
je
out
hlt
out
hlt
xorl
cmp
jae
mov
cmpsb
sbbl
mov
movsb
mov
xchg
cmpsb
xchg
ret
outsb
iret
jecxz
pushf
jae
cmp
scas
ss
and
out
repz
mov
jbe
add
sbb
in
fisubrs
popf
std
xchg
adc
or
cmpsb
insl
pushf
or
xor
in
scas
push
imul
dec
lcall
jp
push
adc
add
test
stos
lret
cmp
loop
cmp
mov
push
insb
mov
ds
jno
outsb
stos
lahf
fldenv
stos
push
icebp
jp
fdivrs
andl
mov
andl
cmp
mov
adc
pop
jecxz
in
push
push
imulb
xor
out
inc
int3
mov
add
dec
je
sarb
fisubrl
xlat
repnz
inc
test
xor
xor
rorl
pop
mov
push
ds
mov
mov
xor
add
jmp
fistl
loope
lds
add
xor
jo
mov
out
pop
arpl
fwait
enter
jmp
adc
mov
stos
jmp
std
push
push
inc
subb
jmp
aam
inc
aaa
ret
inc
mov
mov
jecxz
push
fwait
and
loopne
popf
add
pop
ss
movsb
push
pop
repnz
neg
into
jns
lahf
in
je
xor
cmpsl
cmp
mov
pop
inc
iret
cwtl
xlat
pop
aaa
daa
and
inc
mov
inc
dec
xchg
adc
mov
mov
nop
lret
and
xchg
mov
loope
dec
xor
adc
je
popf
fmulp
fistps
test
int3
int
inc
ss
and
insl
loop
dec
mov
pusha
pop
adc
add
mov
js
outsb
into
iret
mov
mov
rol
dec
out
add
fs
inc
lcall
and
mov
inc
icebp
int3
popf
cld
mov
mov
inc
aad
lret
cmp
movsb
loop
std
xchg
xor
dec
das
test
mov
ja
push
lret
icebp
cltd
and
push
xor
dec
and
call
inc
push
sbb
inc
push
out
insb
dec
dec
je
cld
adc
aas
inc
bound
hlt
outsl
rorb
dec
cmp
movsl
hlt
out
stos
jmp
stos
and
lods
sub
mov
lret
aad
pop
call
sub
mov
mov
stc
sub
cmp
insb
test
adc
outsb
aam
cmp
xor
dec
fsubl
cmp
sub
xchg
xchg
pop
insl
in
stos
sbb
ja
dec
mov
push
mov
jecxz
daa
inc
ljmp
or
mov
inc
xlat
adc
scas
mov
adc
iret
js
test
mov
int3
rcll
jp
sbb
lods
add
sbb
std
push
jle
ret
les
inc
lock
mov
push
cli
push
xchg
push
scas
repz
push
mov
inc
push
mov
cwtl
or
mov
jns
mov
cli
js
outsb
mov
push
icebp
mov
xchg
push
insb
outsb
mov
pop
idivl
sub
out
lods
mov
add
icebp
cmc
mov
jmp
add
mov
inc
iret
push
jo
mov
push
jecxz
pop
fisubrs
and
sub
into
arpl
cld
mov
ret
xchg
inc
mov
int
std
pop
shlb
dec
and
jg
outsb
push
pop
mov
imul
shlb
push
pop
aam
dec
pop
cltd
pop
mov
sahf
loop
xor
test
cmp
mov
jnp
jg
ja
push
mov
jo
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
mov
xor
cmp
jo
jle
jo
das
js
mov
cmp
push
jmp
das
sti
or
inc
mov
sbb
push
imul
or
add
inc
sbb
repz
sub
jae
cmp
fildll
mov
push
cmp
cwtl
mov
ja
adc
rep
sahf
adc
sub
adc
or
push
loop
scas
jge
icebp
adc
add
mov
xor
push
or
xorl
cmp
lock
fmulp
dec
xchg
sub
adc
cmp
ret
or
jno
adc
push
movsb
addl
lea
jae
adc
sahf
in
xor
int3
xchg
xchg
xchg
or
jle
inc
lahf
ja
fnstsw
cmp
fdivs
in
pop
xor
pop
lcall
or
fdivl
push
xlat
in
cmp
mov
sarb
iret
sti
push
jl
iret
jns
push
mov
or
push
adc
jb
push
pop
jl
inc
add
or
in
lea
rolb
cmp
test
jmp
scas
lods
xor
push
cmp
cmpsb
jbe
jns
std
xchg
in
lea
in
insb
popf
adc
mov
test
scas
cltd
test
lea
mov
inc
mov
inc
lds
ljmp
imul
add
rcrb
push
pop
pop
jle
push
in
int3
enter
push
ljmp
xor
push
ljmp
xor
mov
dec
add
or
xor
jo
call
mov
xchg
cwtl
adc
sub
pop
and
jno
lcall
in
movsb
sub
cmp
ljmp
pop
or
mov
dec
pop
mov
cltd
mov
dec
sahf
jge
dec
pop
sbb
loop
mov
add
mov
xchg
inc
lahf
shll
bound
jb
push
xchg
rcrl
jb
cs
enter
or
stos
jl
popf
mov
inc
out
and
jno
mov
fdiv
inc
jl
insl
sti
mov
or
and
xor
icebp
lret
insl
and
jne
adc
xchg
push
cmp
cs
clc
shlb
mov
nop
and
sbb
xor
dec
std
sub
pop
or
xchg
sbb
push
sub
mov
push
mov
or
mov
jnp
pop
in
or
mov
cld
bound
inc
loop
pop
jg
and
mov
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
add
jo
cmp
mov
adc
adc
mov
pop
mov
arpl
lods
inc
push
mov
inc
clc
add
add
stos
mov
jo
sub
push
dec
das
mov
cltd
inc
orb
pop
daa
shll
mov
dec
bound
lods
ret
adc
adc
rolb
jle
mov
xor
clc
or
xlat
jl
sub
insb
cmp
inc
push
xor
push
mov
nop
imul
fimull
lret
push
xchg
dec
pop
shrb
stc
scas
fisttpl
sti
pop
or
cmpsb
jns
in
cld
mov
or
outsl
add
dec
aas
out
loop
nop
mov
sti
or
sbb
sub
dec
xchg
add
jmp
popf
add
loop
scas
push
jecxz
push
mov
hlt
fistpl
dec
jne
cmp
jo
cmpsl
and
das
mov
sub
dec
subb
push
jl
dec
hlt
push
jp
les
insb
cld
nop
ljmp
cmp
lds
cmp
cs
jecxz
lcall
outsl
pop
inc
mov
test
iret
ds
pop
cmpl
clc
sbb
fsub
add
push
imul
sub
repz
loope
sarb
loop
mov
cli
xorl
ljmp
fs
add
sti
call
das
add
jl
ret
cmp
in
and
jbe
push
dec
cmpsb
or
test
pop
mov
mov
popa
fsubrl
call
rorb
dec
xchg
dec
jmp
xchg
adc
mov
sbb
std
in
lss
out
loop
sub
inc
fnsave
inc
inc
xchg
hlt
push
mov
test
js
mov
stc
clc
lea
je
lret
mov
push
or
mov
and
or
push
mov
leave
roll
sbb
lods
dec
cmp
mov
mov
out
sbb
dec
jg
add
push
xlat
negl
sbb
imul
pop
adcl
repz
imul
mov
mov
sahf
mov
or
out
mov
and
lock
out
xor
dec
fisubrl
loope
in
imull
scas
pop
mov
or
movsl
or
cwtl
jne
sbb
adc
inc
ret
in
std
mov
fneni(8087
lea
test
mov
arpl
loope
cltd
pop
gs
or
push
pop
aas
data16
loopne
and
sub
inc
aas
or
pop
xchg
inc
sub
hlt
pop
iret
xor
add
fwait
mov
rclb
lret
sub
aas
push
scas
cs
enter
inc
pop
sbbb
jle
es
sub
aad
in
dec
jnp
push
inc
lcall
out
xchg
daa
pusha
inc
sbb
enter
dec
push
insb
add
pop
jo
movsl
pop
in
cwtl
jae
lcall
lea
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
movsb
lds
jo
cmp
popf
adc
pushf
pop
sbb
and
sub
pushl
jae
inc
cmp
xchg
jno
cltd
in
stos
cmp
xchg
mov
test
jo
hlt
stc
lds
xchg
pop
insb
inc
or
outsb
xchg
xchg
dec
mov
test
and
std
push
leave
scas
xor
mov
lret
xor
jne
icebp
test
iret
imul
mov
adc
push
fiaddl
mov
push
rorb
mov
mov
xor
in
jg
xor
call
xchg
nop
xrelease
movsl
sti
movsl
push
dec
xchg
cmpsb
mov
roll
jl
mov
adc
sub
push
lock
jecxz
insb
add
xor
cli
and
push
fmul
das
push
or
pop
mov
mov
das
data16
loop
cmpsb
dec
cmp
cwtl
imul
fcom
clc
shrl
fs
pop
movsb
push
ja
leave
adc
rcl
cmp
cmp
cld
mov
jns
inc
imul
icebp
ret
notl
or
adc
pushf
mov
jmp
imul
inc
cmc
jo
mov
xor
les
pop
mov
and
xchg
push
pop
push
int
dec
or
shrb
scas
sbb
jl
dec
mov
xchg
imul
and
cmpsb
or
add
loopne
add
mov
push
loop
dec
cs
and
push
int3
add
sbb
mov
jno
jmp
pop
loopne
scas
pop
or
test
mov
jnp
das
insl
mov
mov
cmpsb
sbb
push
mov
adc
xorl
mov
int
dec
mov
cmp
push
mov
cmp
loope
xchg
xchg
dec
push
fwait
adc
and
lea
insb
mov
fldt
xchg
cli
test
cmpsl
enter
xchg
faddl
mov
mov
sub
and
sub
mov
adc
mov
setno
movsl
movsl
sbb
dec
pop
test
pop
pop
add
fisttpl
mov
jp
jns
pop
repz
xor
inc
xor
xchg
stos
pop
add
or
push
test
aaa
out
sbb
mov
cmp
sbb
lods
fidivrl
xchg
inc
sub
push
cltd
and
hlt
scas
sub
mov
add
outsb
lods
enter
adc
cli
mov
into
sbb
and
out
leave
adc
jns
inc
xor
cmp
cld
xor
inc
ljmp
jnp
mov
hlt
lods
in
mov
inc
push
pop
aaa
push
mov
xorb
aam
xchg
imul
or
rcll
add
jb
push
push
sahf
fstp
xor
sub
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
inc
icebp
sbbb
jo
jge
jo
push
adcb
add
or
mov
jmp
mov
push
inc
les
xchg
xor
jl
jp
shll
aam
fsubrs
mov
or
xchg
xchg
cld
xchg
loopne
or
out
cld
inc
shl
ud0
loope
sub
xchg
xchg
mov
pop
iret
scas
test
mov
dec
jb
sub
add
cmpsl
repz
push
push
test
xlat
xchg
lea
and
lods
inc
pop
addr16
lea
mov
test
inc
adc
pop
sbb
push
mov
mov
cwtl
gs
sbb
movsb
dec
mov
mov
xor
add
cmpsl
mov
jae
xor
xchg
test
in
clc
push
loopne
sti
in
pop
clc
leave
lahf
cmc
scas
rclb
popa
sbb
sbb
out
ss
jmp
mov
in
movb
add
adc
xchg
pop
mov
inc
enter
lret
je
sbb
and
fsubr
inc
in
fists
adc
outsb
repnz
loop
ja
int3
or
or
or
pushf
add
inc
ss
xchg
pop
int
or
int
ret
mov
push
fbstp
mov
test
adc
sbbl
scas
jle
dec
mov
xchg
jns
mov
aas
xchg
dec
out
sarl
aam
jle
ret
imul
mov
sub
lods
aam
ret
push
jb
xchg
inc
mov
cli
fs
jo
pop
pop
pop
or
dec
add
cmp
add
pop
insb
mov
xor
jmp
push
mov
mov
imul
fildll
ss
shl
sub
cmp
rolb
gs
jl
fadds
push
or
repnz
mov
cltd
xor
outsb
notb
pop
push
sub
rcll
popa
cmp
mov
cmp
scas
sub
xor
icebp
ret
loope
in
fwait
sub
pop
mov
stc
enter
cmp
sbb
inc
mov
mov
mov
lds
fwait
xor
cmpsl
jp
mov
lods
js
inc
mov
add
or
stos
and
or
or
mov
and
inc
add
les
jns
push
pop
push
les
cltd
stc
in
push
test
push
inc
loope
pop
repz
mov
leave
xor
xor
add
pop
fiaddl
or
and
jo
lods
push
push
mov
out
dec
in
and
cmp
fincstp
xor
sub
jo
mov
mov
push
loope
loopne
in
ss
pop
cmp
mov
cmp
adc
sub
mov
jo
or
outsl
and
dec
push
popf
inc
loope
xor
test
popa
mov
pop
dec
insl
shl
xchg
jae
cmp
xor
cli
je
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
movntq
jo
cmp
cli
fwait
mov
push
push
inc
cmpsb
cmp
xlat
mov
test
cmp
pop
mov
inc
push
mov
inc
mov
nop
jmp
aaa
in
mov
outsb
scas
jns
mov
lcall
psrlw
sbb
jno
lock
pop
loopne
and
in
add
dec
lods
fwait
or
test
and
movsb
ds
mov
stos
jno
arpl
xchg
add
test
imul
loop
adc
jp
das
fisubl
shlb
inc
aam
insb
lcall
xchg
pusha
xchg
jb
jbe
rcrl
sub
mov
arpl
adc
pushf
scas
add
push
mov
dec
test
mov
clc
xor
cmp
sar
leave
push
add
jecxz
jp
sbb
out
mov
mov
or
dec
insl
xchg
cmp
out
jp
jl
aas
push
pop
mov
iret
repnz
ret
orl
fnstcw
aaa
inc
xchg
and
stos
aam
into
fcoml
pushf
jge
cltd
add
cltd
lea
outsb
sub
adc
inc
push
inc
aaa
ret
or
movsb
push
popf
outsl
aam
and
sub
dec
cltd
mov
and
dec
and
sbb
ja
mov
jp,pn
sbb
push
lds
mov
movsl
rol
movsl
arpl
out
int
adc
cli
cli
jecxz
and
dec
mov
mov
mov
outsl
js
mov
sub
sti
mov
loopne
sub
in
push
je
mov
xlat
and
cmpsl
cmpsb
cmp
adc
and
lods
repnz
pop
fistpll
sbb
shlb
popa
ret
and
add
add
push
inc
and
sub
xor
popa
out
test
jb
loopne
or
adc
ret
xchg
sahf
push
mov
mov
sub
xor
pop
test
adcl
xor
inc
jb
aam
cmp
imul
cltd
mov
mov
std
cli
ss
hlt
xor
sub
dec
mov
sub
daa
xor
pop
mov
cmpsb
sbbl
xor
pop
cmp
movsl
lods
cltd
mov
mov
out
insl
dec
mov
and
push
lds
or
jmp
mov
mov
std
mov
cld
sub
mov
sbb
mov
cwtd
inc
jge
pop
xor
or
xor
insl
sub
clc
mov
xor
ss
stos
sub
aas
rep
push
filds
inc
daa
cmpl
outsb
leave
pop
push
mov
mov
rclb
mov
push
jmp
lea
movsb
mov
xchg
clc
shll
pop
sub
int
out
sahf
adc
add
cmp
lahf
xchg
push
push
cmpsb
aad
xchg
dec
cwtl
lods
ja
fucomip
int3
fcmovne
jbe
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
lcall
jo
jge
jo
pop
jmp
fdivr
xchg
aad
push
aad
outsb
addr16
jge
push
push
test
pop
push
dec
xchg
add
pop
icebp
mov
in
dec
and
clc
test
lcall
pusha
fs
movsb
test
and
popl
cltd
fcoml
and
cwtl
enter
sub
pusha
out
scas
aas
xchg
dec
shrl
push
arpl
stos
xchg
sbb
les
test
xchg
aaa
repz
inc
imul
loope
inc
test
les
test
mov
rolb
movsl
push
aam
add
mov
dec
and
shll
dec
mov
loopne
mov
push
test
movsb
mov
jle
iret
aaa
lret
icebp
inc
imul
sbb
sbb
and
mov
add
xlat
jg
dec
pop
add
outsb
ljmp
subb
jmp
xlat
mov
push
inc
loope
dec
xchg
push
lds
enter
int
mov
fldt
fs
cmpsb
popa
std
stc
inc
sbb
mov
mov
or
mov
shlb
and
adc
movl
xchg
stos
lcall
scas
sbb
dec
scas
in
out
or
mov
repnz
sub
pop
sbb
mov
adc
lods
scas
xchg
fsts
lret
gs
mov
pop
enter
lds
shrb
sub
fstl
or
inc
xor
iret
fnstsw
leave
mov
pop
mov
sub
and
sub
jnp
sbb
test
pop
leave
inc
or
lock
add
push
ds
jae
xchg
insb
sub
mov
sbb
filds
test
pop
cmp
lods
ja
jmp
test
call
adc
fnsave
in
repz
stos
lahf
or
maskmovq
notl
dec
sahf
pop
fbld
jbe
mov
cwtl
testb
in
push
aas
arpl
jle
fisttpl
adc
and
push
xchg
sti
sbb
adc
lret
add
ds
jp
sbb
sub
lods
mov
in
stos
pop
add
xchg
xchg
adc
sbb
jmp
or
dec
inc
push
nop
js
adc
sbb
insb
loope
fmuls
out
push
push
ljmp
shll
aas
enter
mov
cmpsb
scas
ja
mov
jb
into
icebp
mov
dec
dec
icebp
inc
mov
nop
addb
cs
xchg
leave
cmp
adc
int
out
in
ljmp
mov
repz
mov
add
push
sub
movsl
sub
add
stos
int
lea
stos
inc
sbb
gs
mov
xchg
lcall
mov
shll
and
cmp
cli
rorb
push
and
mov
cld
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
jmp
and
cmp
cmp
mov
push
test
ficompl
loope
sahf
int3
adc
mov
ja
mov
xlat
fsts
int
out
xchg
sbbl
xchg
aad
add
les
std
arpl
shlb
sub
xchg
sarb
push
xchg
xchg
mov
adcb
clc
adc
mov
or
shll
aad
incl
dec
fiadds
ret
call
mov
rorl
add
adc
jecxz
movsb
aas
inc
adcl
mov
and
out
xchg
xchg
pop
mov
dec
imul
dec
pop
mov
sbb
mov
std
loope
add
rolb
push
aaa
test
sub
mov
jecxz
lahf
pop
cmc
gs
push
lcall
mov
mov
std
push
dec
xchg
xchg
mov
cmpsb
test
fsubr
pop
or
and
and
inc
sub
mov
xchg
cmc
or
lock
cmp
in
shll
mov
mov
mov
cmp
iret
mov
xor
ret
addr16
sub
lret
push
push
lds
lcall
mov
and
cmc
repz
sbb
push
cwtl
sahf
aaa
xchg
ret
mov
jmp
and
loope
jno
push
sarl
push
cltd
sub
ljmp
jge
out
pop
sti
xor
pop
ret
test
mov
insl
mov
cs
push
imul
ror
push
divb
cmpsl
push
mov
inc
dec
divl
int
cmc
fwait
and
pusha
test
inc
test
jmp
cwtl
shl
mov
xor
cmp
pop
in
xlat
pop
xchg
int
or
xor
push
mov
in
dec
xchg
imul
cmp
stc
xlat
arpl
push
pop
out
negb
repnz
mov
add
adc
cwtl
sub
sub
inc
mov
mov
in
xor
cmp
mov
adc
aas
scas
mov
inc
jle
cmp
dec
mov
fwait
loope
push
push
cmpsl
lds
out
jbe
lods
ret
add
call
push
scas
inc
aas
fsubrl
icebp
xlat
and
mov
mov
xchg
loop
adc
cmp
push
jge,pt
push
mov
nop
nop
fiaddl
sahf
call
push
loope
mov
inc
adc
dec
cmpsl
mov
xchg
lcall
jo
mov
mov
mov
xor
push
or
pop
popa
loop
pop
cmp
loopne
xchg
sahf
cli
sub
pop
test
test
mov
out
pop
pop
lea
in
sub
sbb
xorb
and
jo
xbegin
jo
mov
pop
push
fmull
cmc
in
test
jns
icebp
push
push
out
mov
ja
dec
int3
mov
jmp
or
xchg
leave
sub
sub
mov
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
dec
mov
xchg
jo,pn
cmp
pop
cwtl
jbe
inc
incl
dec
mov
shll
jle
pop
sti
movsl
iret
jecxz
aad
repnz
out
loopne
addr16
fwait
sbb
push
mov
aas
mov
or
lods
sbb
mov
repnz
mov
inc
js
pop
adc
mov
ds
adc
inc
xchg
movups
jo
cld
push
xor
mov
pusha
push
fcmovnbe
insb
jmp
repz
aas
lret
or
adcl
pop
push
les
xor
clc
xchg
dec
jmp
sbb
aam
dec
shl
sar
xchg
in
inc
scas
sub
sub
cmp
mov
inc
push
xchg
lret
movsl
in
push
xchg
mov
dec
dec
mov
sbb
orb
out
into
iret
pop
imul
mov
mov
jmp
ss
xchg
and
mov
pop
mov
pop
inc
out
push
and
push
notl
lret
shlb
mov
js
inc
test
test
push
push
loope
push
mov
scas
test
aas
adc
mov
int3
enter
sub
sbb
pop
in
lods
xor
rcr
es
ss
sbb
mov
jnp
std
mov
sarb
stos
xchg
test
nopl
push
rclb
mov
mov
cmpl
je
sub
xlat
jne
and
cmp
xor
test
inc
imul
pusha
int
jmp
push
lock
insb
mov
loopne
or
adc
and
xchg
adc
sarl
xchg
or
add
sbb
mov
imul
push
push
popf
in
ss
imulb
sarb
test
cmpsl
fsubl
sub
adc
jne
in
and
pop
ja
pop
cmc
scas
iret
mov
or
fsubl
aaa
cwtl
xchg
adc
jle
enter
aam
mov
xlat
push
scas
movsb
pop
dec
jb
push
cmp
scas
subl
push
cmp
jno
inc
push
lods
fst
or
ds
mov
rcrb
sti
push
lds
cmp
add
fdivr
sti
add
sub
call
imul
push
push
movsl
add
inc
adc
adc
arpl
lds
ss
inc
sub
add
push
push
pop
xchg
test
mov
lods
mov
push
sub
mov
or
mov
xchg
inc
cli
int
sbb
je
lock
xchg
push
in
repz
pop
dec
scas
int3
dec
sbb
out
addb
add
decl
cld
test
xchg
mov
bound
or
sar
shrb
mov
or
es
imul
fcmovnb
loop
push
shr
and
sub
fbld
popf
imul
fdivp
sti
psrlw
mov
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shrl
scas
push
sub
cmp
sub
or
pushf
inc
inc
dec
lahf
xchg
nop
mov
inc
andl
xlat
push
jnp
test
adc
or
lret
inc
daa
xor
in
out
sub
dec
push
cs
xor
jp
lea
inc
cmp
dec
out
dec
or
inc
inc
or
int
imul
cmpb
mov
inc
push
push
adcb
sub
icebp
inc
in
add
cld
lret
add
fsubrl
int3
sbbl
push
adcl
mov
or
rclb
cmp
and
or
push
repz
into
sbb
cld
push
dec
fistps
jo
out
punpckhdq
test
adc
popf
push
cmp
xchg
pop
xor
and
dec
pusha
and
aam
mov
out
push
cmp
adc
inc
insb
nopl
popf
pop
fisttpll
incl
pusha
sbb
add
jmp
ret
movsl
subl
mov
mov
or
pop
inc
call
out
rcr
lcall
aas
dec
xchg
jno
jns
imul
jo
and
ficompl
mov
push
and
popa
jbe
cs
mov
mov
lea
pop
mov
xor
or
cmp
ljmp
mov
imul
sub
mov
pop
jns
mov
ljmp
pusha
add
mov
mov
ret
cs
ret
clc
pop
test
mov
fdivrl
mov
inc
popa
lods
jnp
addr16
sti
rolb
insb
sbb
into
js
xlat
nop
push
dec
cmp
pop
add
lcall
sub
mov
jae
stos
jmp
popf
jge
or
dec
repz
mov
jmp
inc
insl
movsl
out
inc
sti
mov
mov
cmp
outsl
inc
cltd
sbb
test
add
mov
in
dec
or
out
test
jae
mov
push
cmp
push
imul
mov
mov
outsb
mov
stos
ret
lds
pushf
mov
shrl
imul
dec
call
jnp
orl
in
imul
pop
sahf
outsl
aam
test
and
out
cmp
mov
lret
rcrl
scas
ds
lret
push
fstpl
or
int
lret
popa
dec
arpl
pop
aaa
inc
cmpsl
mov
jl
dec
jg
xor
lret
mov
mov
enter
xchg
pushl
adc
aaa
flds
call
cli
inc
inc
lret
mov
insl
inc
ljmp
ljmp
cmpsl
int
movl
fyl2x
mov
sbb
xchg
xor
adc
jle
test
outsl
movsl
js
loopne
pop
sbb
je
imul
xchg
pop
inc
push
popa
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
int3
sbb
popa
adc
jo
stos
jle
jo
into
out
mov
mov
cmp
inc
cmp
pop
stos
sahf
push
dec
hlt
xchg
dec
sbb
mov
gs
pop
or
das
cmp
add
mov
mov
mov
pushw
sbb
jmp
aad
bound
mov
popf
addr16
jecxz
int
js
loopne
stc
add
iret
cmp
loop
icebp
test
push
cmpsl
pcmpeqb
jmp
icebp
mov
sbbl
adc
popa
shrl
jns
sub
cmp
add
mov
xor
aad
jns
outsl
jmp
fwait
lcall
mov
cltd
jge
sbb
and
push
aam
lods
mov
imul
daa
shlb
cltd
or
stos
mov
cmp
mov
sti
add
stc
in
lock
sub
sbb
stos
xchg
daa
fisttpl
xchg
pushf
call
cmp
add
rorl
xor
lcall
add
imul
mov
not
hlt
mov
dec
fbstp
push
in
inc
add
dec
es
repz
xchg
out
mov
insl
sub
lcall
push
mov
fldcw
cld
xchg
into
addb
adc
xchg
cltd
pop
std
inc
xchg
aad
xor
fnsave
in
add
insl
popa
cmpsl
push
iret
adc
pusha
jle
pop
cld
pop
push
lods
rcrl
fiaddl
outsl
test
jp
xchg
imul
jg
data16
into
inc
pop
add
pop
idiv
or
dec
inc
push
stos
loopne
notb
imull
ja
cmpsb
into
test
cmpsb
cmpsb
mov
jl
nop
cmp
test
les
push
lods
inc
mov
ret
jge
lea
in
testl
jle
adc
push
pushf
and
mov
push
sub
bound
pop
inc
cwtl
incl
dec
stos
fldl
xor
mov
adc
idivb
outsb
inc
inc
es
sbb
test
or
in
sbb
sbb
sbb
cltd
mov
ljmp
push
in
cmp
fisubs
inc
rolb
inc
xchg
mov
cmp
inc
shr
gs
adc
fmul
filds
push
sub
mov
movsb
rorb
mov
mov
ja
fwait
lret
movsb
sub
mov
push
std
inc
add
add
mov
jmp
ja
and
dec
xchg
je
dec
xor
jo
sti
in
aad
jg
fucomp
insl
adc
xchg
adc
testl
repnz
jle
xchg
stos
scas
fs
mov
sbb
xor
xchg
push
push
stc
mull
lods
or
adc
insl
pop
push
jno
or
orb
cmp
sub
lods
test
and
mov
push
std
dec
add
mov
scas
push
adc
mov
pushf
stos
outsb
add
mov
cmp
and
sbb
cmp
push
lea
fsubl
jns
mov
adc
dec
test
sub
pop
cmp
shl
test
xor
lods
or
push
adc
sbb
pop
test
xor
xlat
test
cmpsl
mov
jecxz
fdivs
push
and
cltd
inc
fbstp
jb
jne
loope
push
or
movsl
pop
xchg
loope
adc
pop
shrl
cs
andb
sub
cwtl
stc
shrb
inc
aad
sbb
jecxz
add
mov
cli
pop
push
in
testl
es
and
sbb
sarb
sbb
mov
xor
je
add
in
jbe
inc
xchg
cmpsl
jle
adc
xchg
cmp
aam
cmpsl
ja
adc
xchg
add
scas
sbb
aad
arpl
sbb
test
stc
sbb
and
or
sub
lahf
xor
sub
idivl
xchg
dec
add
mov
leave
and
out
ds
jmp
gs
push
sub
sub
clc
icebp
push
push
gs
fistpl
push
ret
pusha
and
jno
inc
adc
xchg
in
movsb
sub
cmp
fs
or
sub
sahf
pop
jne
sbb
lret
and
orl
in
dec
insl
cli
mov
js
arpl
test
dec
push
cs
lods
push
scas
shlb
inc
fiadds
pop
lea
mov
aad
jge
mov
push
push
cmp
inc
inc
push
insb
and
fsubp
mov
sbb
adc
fimuls
ss
lods
leave
lods
cmp
pusha
sarl
ret
adc
mov
jo
lahf
cwtl
or
inc
test
xchg
inc
rolb
jae
fucomi
dec
mull
push
je
insb
movl
mov
inc
and
cs
or
cltd
lock
mov
mov
xorl
mov
outsl
mov
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
cmpsl
js
xor
stos
jle
jo
xchg
or
and
das
cmpsl
pop
pushf
adc
mov
dec
std
incl
jae
ret
lret
push
inc
aam
inc
inc
push
jl
lret
aas
ret
es
lock
jno
dec
popf
test
xchg
bound
cmp
push
shlb
adc
jnp
sub
adc
les
sub
or
pop
xor
popf
push
add
outsl
ds
sbb
add
cmp
mov
stos
mov
lea
int
call
out
pop
dec
ds
cmp
push
std
stc
sahf
pop
mov
fstl
lods
hlt
sub
fmull
ret
mov
or
lea
mov
hlt
cltd
dec
cmpsb
shlb
dec
insl
lret
sarl
in
fcoms
sub
cmp
lods
sub
in
xor
inc
push
jge
in
mov
or
push
ret
loop
imul
nop
cmpsl
test
lret
and
mov
addb
sbb
divb
add
out
sar
xor
lahf
or
mov
mov
inc
mov
push
out
ds
jb
test
ss
inc
sub
mov
aam
inc
fwait
sub
movsb
je
sbb
addl
push
add
daa
push
dec
mov
sub
sbb
cmp
enter
jp
leave
js
pop
test
inc
ror
dec
mov
pop
jecxz
sub
xor
mov
les
fistl
iret
push
lods
imull
sahf
aam
hlt
out
sbb
fistl
mov
push
movsl
and
leave
jg
dec
pop
lret
int3
ds
inc
mov
or
js
repnz
arpl
pop
bswap
aam
inc
cmp
jae
sti
dec
xor
xlat
jge
add
dec
in
xor
repnz
pop
cmp
sbb
mov
and
in
shl
pop
cmpsl
fisubrs
loop
outsb
subps
in
lcall
fldt
jp
mov
loope
mov
gs
pop
xor
std
jae
insl
cli
gs
sbb
sti
sti
clc
lret
adc
and
imul
xlat
mov
jae
out
mov
dec
fisubrs
cmp
and
imul
ja
mov
addr16
jecxz
leave
std
mov
sbb
popf
jecxz
adc
testl
jg
in
jns
inc
dec
lods
mov
cmc
ds
mov
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
inc
adc
aas
jo
cmpsl
jg
jo
aam
sbb
push
sbb
ja
xchg
pop
pop
imul
sub
mov
outsl
xchg
ljmp
pop
imul
lods
inc
xor
loop
mov
scas
out
rcll
mov
lea
loop
rolb
inc
push
xchg
and
xor
dec
and
xor
dec
daa
push
jne
and
clc
adc
es
arpl
cltd
daa
sbb
add
jmp
aad
push
mov
decl
mov
dec
hlt
lret
movsb
sar
lcall
jo
imul
inc
mov
je
int3
into
or
enter
sbb
bound
mov
sbb
ds
and
cmpsb
and
stos
pop
mov
dec
pop
addr16
nop
cmc
movsb
insl
cli
xchg
js
ret
mov
mov
sub
jb
push
gs
pmaxsw
dec
loop
outsb
jg
outsb
dec
add
add
xchg
dec
aas
push
cmp
or
movsb
mov
jle
add
mov
sub
and
out
ja
rcl
arpl
movsb
cmp
shl
sub
add
mov
cmp
xchg
outsb
ljmp
push
and
mov
sti
mov
adc
cmc
lcall
pop
mov
inc
movlhps
xchg
outsb
into
jbe
mov
or
inc
inc
xchg
enter
inc
mov
adcl
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
into
gs
cmpsl
jg
jo
enter
cltd
ret
add
icebp
lods
inc
push
imul
xchg
and
gs
aas
pop
stos
int3
mov
fwait
dec
sarl
pop
popa
cmp
xchg
lock
pop
xchg
add
std
stos
mov
mov
lcall
mov
lock
test
in
stc
ret
fdiv
or
pop
sbb
aad
mov
sub
inc
mov
lret
shrb
push
mov
pop
lods
int
mov
clc
xor
push
cmpsb
into
cmp
dec
push
sbb
fwait
leave
movsl
into
or
insb
mov
mov
jo
aam
std
xchg
loope
ljmp
es
repnz
jge
dec
sub
push
sbb
cs
jae
insl
mov
sarb
inc
dec
mov
cmp
stc
js
fidivrl
jecxz
dec
mov
push
aas
jp
xchg
push
sbb
test
popa
aas
sub
pop
pop
aad
mov
fcmovne
repz
xchg
sbb
inc
cld
adc
adc
ret
mov
inc
xor
xchg
dec
ja
xlat
test
and
inc
cwtl
and
add
adc
sahf
push
sbb
adc
lds
daa
fimuls
add
into
jg
dec
lods
mov
repz
out
jmp
imul
add
sub
push
aas
push
jge
rorl
int3
lods
xchg
mov
xchg
mov
sbb
mov
jle
add
xchg
cmp
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
leave
mov
cmp
jo
jg
jo
xchg
lret
test
push
out
add
ds
daa
push
or
aas
loopne
imul
pop
push
test
in
xchg
fmull
test
sarl
jle
fwait
dec
mov
decb
and
inc
decl
adc
stos
adc
or
adc
push
inc
movsb
es
mov
mov
lahf
arpl
ficoml
cmp
scas
fs
mov
loop
mov
inc
outsb
mov
xlat
nop
dec
xorb
add
cld
mov
mov
inc
lods
cltd
xchg
inc
push
cmp
iret
test
jg
loopne
add
jl
ja
in
xchg
dec
pop
cmpl
xchg
enter
xchg
inc
pop
jle
mov
pushf
mov
push
sub
jne
mulb
movsl
sti
pusha
mov
in
int3
jae
adc
mov
in
popa
mov
loope
mov
jle
xchg
push
outsb
push
fidivs
pushl
xchg
xlat
lret
shll
loope
or
jb
ret
loope
xchg
scas
popl
inc
jns
pop
mov
mov
xor
lret
dec
and
inc
in
bound
hlt
roll
push
xor
jecxz
push
sbb
xchg
mov
push
addr16
xchg
stos
pop
test
xlat
push
repz
addr16
js
popa
push
fwait
ret
pop
jecxz
cwtl
cmp
push
cmp
lock
push
fwait
cs
mov
inc
sub
aad
popa
rorb
aaa
sub
mov
jecxz
or
stos
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
sarb
dec
arpl
cmp
loop
jo
adc
clc
sbb
cmpsl
and
inc
or
mov
repnz
aas
lds
outsb
sbb
pop
xchg
jnp
xor
int
sub
mov
jo
aad
loope
call
pop
fsubrl
rcl
inc
cld
adc
mov
push
sub
dec
stc
add
cwtl
cmp
out
in
xor
cmp
mov
nop
pop
mov
dec
daa
addr16
mov
pop
xor
add
jnp
pop
pop
sarl
jns
dec
mov
jge
fmull
dec
jecxz
inc
xchg
stos
add
testl
jb
mul
loopne
out
sub
aam
ret
mov
add
shrw
stos
inc
push
push
sub
scas
xor
int3
xchg
pop
gs
insb
movsl
bound
fwait
mov
js
xchg
cmp
push
sub
adc
data16
sbb
outsb
pop
subl
fimuls
icebp
mov
pusha
sbb
cmc
push
sbb
test
push
int
negb
es
add
dec
fisubrs
scas
cmp
dec
imul
lahf
adc
fmuls
dec
js
pop
jecxz
xchg
xor
jl
adc
pop
out
sbb
add
mov
xor
je
dec
dec
or
lcall
popf
jnp
sbb
mov
imul
movb
int3
mov
sub
ljmp
cmp
negl
andb
stc
out
dec
inc
xor
or
push
xorb
fnstcw
or
movsb
ja
lea
in
mov
add
xor
mov
jo
inc
movsb
and
dec
mov
cltd
sub
loop
dec
mov
fisttpl
js
xchg
jmp
pusha
add
and
ljmp
popf
push
testb
mov
pop
mov
mov
sahf
sub
call
mov
cmp
loop
pop
and
lea
add
mov
jns
xchg
mov
mov
into
inc
xor
lock
stos
lret
jnp
jl
add
xchg
jle
fstpl
nop
mov
mov
daa
inc
icebp
fs
insl
inc
lods
pushf
cmc
ret
pushl
adc
sbb
adc
push
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
mov
ja
movsl
cmp
loop
jo
and
dec
add
inc
push
popa
insl
idiv
ss
mov
sti
jns
add
jae
adc
jns
es
or
xor
mov
fisubrl
xor
imul
mov
in
push
jecxz
test
out
xchg
fnstsw
cmp
stos
rcrb
xchg
adc
push
xor
loopne
in
lds
adc
cld
mov
sub
sub
enter
scas
popf
mov
jb
aam
addr16
fwait
nop
lahf
lret
fnstcw
inc
lds
sub
add
xchg
sar
mov
dec
cs
test
sti
subb
sbb
sub
fadd
sub
scas
adc
push
mov
add
sub
jnp
push
sbb
cmp
and
ss
sub
cli
in
push
cmc
add
xor
shl
das
or
cld
mov
and
lcall
cmp
push
jnp
push
cmpsl
ja
ret
stc
call
adc
jns
jmp
popf
mov
ret
test
lock
add
mov
cmp
cmp
mov
mov
xchg
in
ljmp
fsubs
sub
testl
and
push
scas
andl
mov
mov
xor
cmpsl
and
clc
and
lcall
test
inc
pop
loopne
inc
push
cwtl
fwait
insb
dec
or
dec
mov
inc
sub
push
bound
frstor
out
aas
pusha
and
sub
ljmp
mov
jns
in
popf
pushf
dec
or
out
icebp
pop
imul
or
and
mov
std
mov
jo
scas
inc
jmp
lea
js
xchg
inc
pop
sbb
xor
nop
js
hlt
adc
enter
mov
adc
sub
fstpl
jbe
or
adc
lahf
jge
push
sbb
movsb
inc
xchg
pop
popa
scas
movsb
inc
jae
xchg
xor
rcrb
mov
adc
sbb
pushf
sbb
mulb
stc
inc
scas
xchg
mov
test
ffree
sahf
call
pushf
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
sbb
icebp
pop
lds
and
jo
cld
fnclex
xchg
cs
jecxz
lret
test
test
in
inc
daa
icebp
mov
popa
or
arpl
ljmp
js
dec
xor
dec
negl
lock
insl
mov
dec
mov
inc
xchg
shlb
xchg
push
inc
dec
and
fcmovbe
push
in
mov
jg
out
fdiv
dec
jnp
sub
sub
cmp
mov
in
ljmp
rcr
xor
outsl
fisubs
je
push
ficoms
push
test
lret
dec
or
orl
adc
mov
add
add
test
mov
loop
inc
insb
pop
and
enter
mov
data16
ficomps
addr16
fldcw
push
jecxz
add
test
lds
push
or
cld
dec
movl
fidivs
cmc
shl
pushw
fcmove
sub
xchg
cld
aad
jg
ljmp
dec
aam
movsb
fidivrl
sbb
test
push
mov
cld
imul
ss
pop
cmpsl
in
iret
mov
xchg
es
mov
loop
xorb
orb
lcall
scas
es
dec
daa
ss
into
loop
xor
add
pushf
mov
xchg
adc
int3
pusha
out
xchg
xor
pop
xor
and
mov
jnp
dec
popa
adc
mov
ret
in
lcall
inc
jns
popa
andb
test
stos
popf
cmp
pop
movsl
cmp
popa
cmpsl
fdivs
sbb
inc
hlt
xchg
pop
push
jmp
fistpll
fwait
arpl
adc
fdiv
lret
fimuls
in
or
in
sub
movsb
inc
pushf
shl
dec
sbb
repnz
jb
idivb
pop
in
outsb
xor
sarl
adc
pop
pop
pop
jp
xor
js
dec
movsl
sbb
cmp
mov
dec
pop
rcrb
rcrl
dec
jno,pt
dec
lret
cld
sub
jg
mov
pop
pop
leave
pop
push
push
cmp
movsb
cli
aaa
nop
add
cmp
adc
jo
mov
in
jecxz
lea
out
cmp
sub
ljmp
xchg
insl
mov
mov
rcl
or
inc
xchg
push
mov
in
fildll
std
es
and
rclb
mov
sbb
in
leave
fdivrp
fdivs
popf
mov
insl
xchg
xchg
mov
mov
loop
push
inc
imul
adc
adc
ss
loop
in
popa
xor
and
testb
mov
sbb
push
inc
push
aaa
data16
sbb
xchg
xor
xchg
add
call
or
ror
arpl
and
lock
xchg
xchg
fwait
mov
pop
push
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
ret
and
jo
add
sti
mov
imul
push
test
mov
scas
push
cmc
dec
and
ret
dec
ljmp
movsl
fisubrl
jmp
pop
out
xchg
subb
out
pop
and
mull
lret
enter
or
cmc
fwait
jb
addl
mov
fidivrl
adc
adc
cld
jecxz
cmpb
mov
mov
mov
aaa
dec
mov
imul
sub
in
sub
outsb
aaa
ret
ja
into
mov
push
adc
push
adc
mov
xchg
xchg
loope
sub
cli
lea
in
mov
addl
cmpsb
sbb
sbb
dec
jns
mov
dec
test
push
les
adc
es
and
and
push
xchg
jmp
repz
data16
cmp
xorl
jns
ljmp
xor
fmulp
lcall
cmp
jno
xor
or
popf
cmp
sub
outsb
jae
adc
push
addr16
ret
mov
adc
sub
and
sarl
notb
xor
fbstp
in
inc
clc
and
ret
mov
pop
data16
push
xor
and
push
test
mov
repz
imul
dec
mov
mov
call
insl
mov
cwtl
shr
add
popa
cltd
jl
xor
adc
sbb
cmp
lock
xor
cmp
pop
inc
pop
imul
xchg
xor
cmp
xor
iret
xor
xchg
imul
xchg
jne
cmp
lods
ficomps
push
out
xchg
call
and
mov
jle
jbe
dec
dec
test
sti
and
add
outsl
jbe
addb
clc
nop
std
call
lss
repnz
and
sbb
rcl
cmp
fisttpl
out
dec
dec
mov
test
fcomp
daa
push
clc
scas
movsb
and
push
push
loopne
inc
out
inc
jae
mov
out
in
dec
rorb
pop
cltd
xchg
gs
loope
call
xchg
xchg
jno
stc
sub
jle
push
mov
push
jl
mov
js
rcl
js
adc
div
sbbb
stos
mov
jae
out
std
cltd
pop
xchg
cld
ljmp
nop
cmp
clc
mov
mov
andl
cli
pop
andl
inc
dec
xchg
mov
or
shlb
out
es
xchg
dec
cs
test
push
push
cmp
in
mov
fwait
inc
and
out
xor
ficomps
popf
dec
gs
movsl
mov
inc
jmp
push
cmp
stos
cmp
jge
or
and
clc
ret
popf
mov
mov
push
addr16
jle
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
int3
xchg
in
test
jo
mov
bound
pop
jl
inc
cmp
in
jno
jg
add
pushf
insb
test
andl
xchg
pop
pop
lock
pusha
dec
les
repz
arpl
pop
xor
jns
div
bound
aaa
inc
cmpsl
xor
ret
in
lret
lock
pop
dec
lret
out
shll
xchg
xchg
aas
mov
ret
and
add
sbb
mov
daa
addr16
rcrl
mov
or
out
in
sbb
mov
inc
mov
lds
pop
or
fmull
cmp
leave
mov
jp
orb
ret
cltd
push
sub
cmp
push
jo
les
es
daa
les
push
sub
push
aaa
cmp
in
js
divb
insb
jmp
enter
inc
sub
mov
adc
xchg
pop
popf
jl
cmp
mov
repnz
push
stos
add
shl
clc
in
and
sub
rclb
mov
pop
inc
test
cmpsl
idivl
das
orb
lea
mov
out
pop
xchg
jp
pop
mov
leave
pushf
cmpsb
mov
jo
add
hlt
sub
dec
movsl
push
xchg
mov
add
mov
mov
sub
push
jbe
adc
pop
push
cmp
scas
fistps
jp
inc
pop
repnz
add
in
sub
int3
int
jne
jno
fcomip
aad
mov
adc
jns
out
sbb
xor
mov
mov
shl
popl
daa
cli
movsl
add
inc
jno
in
jmp
inc
mov
les
lds
bound
test
cmp
rcrl
fisubrl
dec
add
xor
pop
pop
out
imul
push
sti
repz
jb
fwait
pop
mov
pop
mov
test
inc
das
cmpl
fnstcw
push
xchg
fdivs
dec
fwait
mov
mov
inc
cmpb
imul
adc
test
out
mov
xchg
sub
addr16
xor
dec
or
int3
mov
jge
cmp
pop
mov
insl
mov
stos
adc
sub
pusha
mov
outsb
push
jmp
sbb
loop
xchg
data16
sbb
pop
test
jne
sbb
gs
ret
sbb
scas
adc
jne
or
das
fmulp
cwtl
fwait
push
scas
rcrb
dec
or
lods
test
fcomps
ret
test
sub
lret
ret
lret
test
iret
repnz
inc
or
out
mov
jl
hlt
cmp
xchg
inc
into
test
pop
xor
sahf
adc
push
xchg
outsl
nop
aam
fcmovne
sti
push
decl
loop
jecxz
fs
gs
ljmp
xchg
dec
clc
aas
mov
stos
pop
fildl
cmp
inc
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
sub
int3
jo
and
jo
dec
adc
out
push
xlat
push
xor
jge
leave
inc
push
loope
adc
inc
or
push
xlat
sub
mov
cmp
or
scas
rcll
loopne
aam
sbb
or
mov
push
xchg
sbb
push
jnp
jnp
fnsave
jle
in
push
mov
xor
adc
leave
stos
ret
xchg
andl
pop
movsl
enter
dec
pusha
mov
insl
stc
call
sbb
sub
adc
fwait
adc
lcall
cmp
addl
add
enter
jae
cs
push
insb
adc
test
cmp
xor
stos
xor
xor
dec
pushf
push
sbbb
cli
rcrl
xchg
push
add
cmpsl
mov
pop
pop
mov
fstl
sbb
and
clc
xlat
or
in
imul
dec
adc
pop
ja
sbb
fisubl
inc
out
add
call
jmp
hlt
sarl
or
movsb
insb
lods
mov
push
cmp
push
pop
inc
lock
icebp
dec
lods
inc
lcall
lods
push
and
mov
xchg
mov
pushf
scas
cs
js
call
aaa
test
cli
sbb
lock
cmp
jbe
cwtl
inc
add
in
fcoml
jmp
inc
mov
push
hlt
fidivs
popa
cmp
pop
popf
out
decb
cltd
rcll
jo
xchg
adc
mov
mov
imul
jnp
sbb
add
std
cs
mov
ret
jg
enter
fistpl
xchg
push
pop
cmpsb
cli
cltd
jp
mov
dec
and
mov
out
fcomi
lret
cmp
cmpsl
dec
stos
data16
sbbl
mov
sub
sub
jge
repz
daa
inc
pop
sbb
add
mov
push
cmc
movsb
jb
mov
fwait
iret
fimull
inc
push
xor
dec
push
pop
push
or
rcrb
cmp
jle
mov
lock
out
inc
cmp
and
adc
jg
pop
pop
iret
mov
imul
repz
mov
sub
dec
std
jb
jl
xchg
cmp
loop
ret
inc
sbb
call
std
cwtl
xchg
enter
xchg
dec
xor
jmp
je
ja
mov
pop
out
pusha
gs
inc
in
pushf
les
sbb
push
or
mov
jae
aad
enter
xchg
test
xor
push
jno
mov
aas
fimull
jle
lock
cmp
adc
ja
push
jle
push
inc
jno
push
push
jle
and
pop
pop
mov
je
mov
and
mov
sbb
in
mov
rcrl
sbb
aad
lcall
cmp
xor
sbb
rclb
inc
xchg
jp
jge
stos
dec
cli
inc
mov
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
cld
mov
jo
and
jo
pop
aas
jno
or
nop
leave
mov
mov
out
arpl
fnsave
sbb
in
lods
or
leave
inc
stos
insl
je
inc
push
cwtl
sub
mov
cmpsl
inc
cmp
in
pop
xchg
in
movsb
int
ja
mov
xchg
cwtl
push
ret
sub
in
mov
add
aam
jg
push
js
sbb
push
mov
test
and
xor
mov
mov
jno
xchg
sbb
ds
leave
fisttps
pushf
push
movsl
push
jns
and
add
cwtl
mov
insl
push
fs
xor
aaa
ret
push
pop
repnz
out
xor
push
mov
lahf
inc
push
out
bound
fs
emms
jb
xor
mov
imul
test
add
ret
or
imul
mov
pop
jb
cli
stos
adc
flds
add
mov
dec
je
sti
test
cmp
arpl
push
out
stos
dec
stos
shll
cmp
mul
lods
mov
mov
mov
push
imul
test
js
int
cwtl
mov
pop
adc
xchg
jno
xchg
dec
in
pusha
ss
ret
mov
push
or
xchg
pop
pop
lret
daa
stc
dec
xor
popf
daa
movsl
fistl
rclb
sbb
jb
jle
mov
hlt
lds
mov
mov
mov
imul
cmp
or
mov
push
cmp
adcl
dec
mov
cli
in
outsb
icebp
jns
mov
inc
jp
push
loopne
and
inc
loope
and
mov
lods
push
mov
mov
fisubs
fdiv
leave
or
scas
cmc
push
insl
in
fwait
sub
inc
mov
loopne
jmp
or
pop
test
lret
cmpsb
sub
ret
cmp
enter
cmpsl
rorl
and
fildl
roll
ret
inc
jg
pusha
cmp
ss
mov
fdivl
insl
cmpl
push
adc
inc
inc
xchg
jmp
push
push
and
fwait
lods
add
or
sub
cmp
loopne
ja
int3
sub
xchg
xchg
rsm
div
pop
stc
or
out
mov
adc
sub
mov
sbb
andl
or
repz
adc
cmp
jbe
hlt
mov
adc
xchg
pop
cmpsb
out
std
jecxz
jnp
shll
out
inc
cmp
xchg
jg
loop
dec
scas
lret
movsb
sbb
stos
ljmp
int
mov
lahf
adc
jbe
ficoml
sbb
pop
in
jg
ds
stos
popf
fistl
aam
jb
int3
xor
cmp
sbbl
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
mov
sbbb
jge
jo
xchg
jo
icebp
je
sbb
aaa
cwtl
jmp
dec
adc
stc
out
inc
mov
popa
push
sbb
das
test
aad
sbb
addl
add
dec
push
xchg
cmpsb
adc
je
cmp
outsl
push
inc
stos
mov
sahf
and
lods
in
jno
bound
ffree
jl
imul
in
aaa
jae
jecxz
push
push
push
xchg
xlat
aas
movsl
push
adc
and
xchg
ja
sub
jnp
add
loopne
js
call
mov
fisubs
cmpsl
lcall
dec
sbb
inc
lahf
lret
in
add
jns
out
cwtl
rcr
scas
cmp
imul
push
pop
fimull
dec
stos
vphaddwd
xchg
mov
movsb
loopne
mov
inc
cmpsb
addl
add
push
cli
dec
inc
mov
mov
mov
pop
push
rclb
ret
lock
or
mov
jg
add
push
mov
pop
mov
xchg
imulb
sbb
ja
scas
mov
xchg
add
pop
cli
int3
xor
push
clc
push
fwait
inc
test
inc
add
xlat
sbb
std
ja
jns
mov
leave
scas
aad
inc
mov
xor
push
sbb
and
mov
mov
cmp
fdivrs
mov
xor
shlb
xchg
mov
shlb
xor
aam
mov
mov
sub
loop
xchg
or
adc
mov
aaa
pop
fisubrs
mov
js
in
scas
push
pop
es
jl
dec
pusha
stc
or
lcall
adc
gs
leave
js
fwait
mov
pop
shlb
mov
dec
cs
pop
pop
mov
mov
jne
ss
mov
shrb
mov
negl
add
test
loope
adc
xor
loope
divps
adc
or
test
and
cld
mov
bnd
das
addr16
daa
mov
aad
push
popa
test
fiaddl
adc
xchg
sub
test
addb
or
fstpl
roll
jecxz
aad
mov
jns
fs
xchg
aas
loope
jg
or
xlat
push
movsl
pop
das
test
ds
daa
or
outsl
in
lcall
sahf
push
jnp
fadds
hlt
rclb
call
daa
lock
testb
sub
jecxz
movsb
sbb
mov
ficoml
outsb
mov
add
xor
mov
mov
ret
mov
or
loope
mov
push
fs
mov
fucom
loop
sub
ret
fdivs
inc
incl
leave
jge
rorl
mov
mov
and
pop
mov
cs
mov
lock
adc
xchg
insb
aam
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
movsb
xchg
cli
nop
aaa
shlb
and
jo
xor
jl
sbb
pop
jb
push
int3
popf
adc
jo
mov
jb
xor
mov
dec
push
lret
mov
movsl
dec
mov
pop
or
xor
pop
je
stos
cltd
in
movsl
and
dec
lods
pop
pop
rorb
sbb
jno
sbb
inc
movsb
mov
xchg
imul
mov
mov
pop
inc
push
insl
push
ja
nop
test
imul
in
pop
xchg
mov
arpl
addr16
imul
push
repz
loop
sub
pop
orb
cmp
push
inc
lret
ret
ds
out
out
aas
inc
aaa
gs
adc
enter
ljmp
jecxz
movsl
aad
push
fsts
movsl
xor
fs
fisubrl
iret
test
pushf
push
pop
ja
sub
iret
jne
cli
xchg
loopne
rorb
mov
mov
cmp
aaa
mov
sbb
adc
insb
mov
stos
inc
push
icebp
adc
xchg
xor
outsb
inc
aam
movsb
jbe
mov
fwait
cmp
loop
add
adc
xor
xor
lret
int
adc
mov
mov
add
mov
gs
lret
adc
mov
cmp
pop
stos
xchg
or
pop
dec
cwtl
jge
mov
and
xchg
jns
push
aaa
mov
xchg
xorl
mov
push
movsl
xorl
inc
mov
jl
repz
shrb
in
jmp
pop
sbb
shl
xchg
push
roll
dec
repnz
sub
xchg
pushf
push
push
jns
and
lds
test
pushl
mov
sbb
call
leave
jg
and
mov
or
mov
mov
fidivrs
mov
jnp
in
mov
std
lods
shrl
mov
add
mov
inc
push
test
and
mov
aas
es
inc
jbe
and
inc
mov
jo
jp
dec
push
and
out
mov
js
cltd
rcrb
xor
adc
std
pusha
popa
lret
xchg
jp
inc
mov
or
dec
inc
xlat
sbb
sbb
movsl
repnz
stos
arpl
imul
mov
jnp
cs
or
push
push
cmpsl
leave
into
mov
adc
leave
fmull
inc
popa
jb
repz
sub
xchg
loope
imul
enter
daa
add
and
fldl
stc
ffree
jb
aad
push
shrb
lods
fstpl
sub
fcmovne
sub
imul
mov
fcmovbe
jns
inc
jnp
insl
leave
scas
sbb
cmp
lds
addb
outsb
and
dec
jmp
pusha
push
popa
out
sbb
mov
adc
clc
and
leave
mov
repnz
mov
and
cmp
call
imul
fistps
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
icebp
jge
ds
scas
push
ds
loop
fists
js
test
cmp
jno
imul
sbb
pop
push
adc
mov
xchg
jmp
stos
shrb
mov
mov
mov
fs
arpl
int
into
xchg
push
pop
pop
mov
decb
pop
pop
xchg
dec
inc
adc
fs
inc
dec
std
aas
adc
mov
bound
ss
mov
fmuls
mov
xor
or
ret
imull
je
or
bound
adc
js
negl
sarb
sbb
adc
stos
mov
add
jg
ja
jae
into
testl
fnsave
int3
shlb
cmp
sbb
shl
cmpsl
adc
sub
inc
test
out
and
cmp
jns
test
pusha
lea
jle
rcll
rolb
out
fwait
adc
pop
out
outsl
push
int
xchg
mov
ret
cs
jge
adc
and
int
pop
int
jg
lods
ficomps
aas
sub
aam
lods
into
repz
es
mov
mov
push
fs
sbb
aaa
push
push
cmpsb
lds
test
and
hlt
out
test
loop
push
orl
sbb
xchg
add
pusha
pop
pop
adc
mov
lret
loop
and
mov
xchg
xchg
int
mov
fldenv
sub
aad
dec
outsb
mov
lods
popf
shll
sbb
jge
ret
pop
test
sbb
aas
xchg
subl
jge
xchg
aaa
pop
add
dec
cltd
push
cmp
sub
inc
icebp
adc
enter
jbe
sbb
rclb
sub
inc
loop
sbb
gs
mov
sub
out
xor
inc
inc
shll
icebp
repnz
xchg
pop
cmpsl
mov
ficoms
pop
cmc
daa
pop
sti
sti
jecxz
lahf
xchg
jno
inc
imull
movsl
lret
or
bound
jo
xchg
testb
push
or
add
and
test
leave
mov
jo
insl
repnz
sbb
aad
dec
repnz
aaa
push
repnz
push
mov
inc
cmp
icebp
ss
sub
and
inc
jecxz
push
inc
sbb
nop
notl
pop
ret
cmp
scas
pop
and
jecxz
pop
sarl
imul
mov
ret
xorb
push
inc
adc
mov
xchg
daa
lods
or
fwait
mov
jns
or
inc
icebp
repz
mov
dec
sbb
dec
int
cmc
stc
sub
pop
setno
inc
add
repz
pop
lea
mov
insl
xor
pop
sub
mov
sbb
ret
cmp
jbe
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
je
stos
xchg
fdivl
and
jo
dec
or
pop
and
xchg
adcb
jle
jle
xchg
mov
js
dec
mov
clc
push
adc
mov
jmp
mov
add
test
jae
push
xor
mov
jne
push
notl
or
into
sbb
mov
jb
xchg
dec
and
les
dec
inc
andl
pop
pop
inc
lods
sbb
or
add
in
frstor
call
mov
push
sbb
pop
xor
inc
push
lret
xorl
movsb
out
imul
adc
mov
cmpsl
sbb
mov
xor
shr
jecxz
push
add
dec
xor
testl
addr16
mov
push
daa
daa
imul
dec
aam
push
fistps
nop
outsb
test
pop
pop
mov
dec
lea
xchg
and
mov
cwtl
lods
mov
fcomi
test
lcall
push
int3
shll
jns
dec
cwtl
ror
dec
popf
cld
idivb
int3
daa
dec
data16
fdivs
int3
js
pop
pop
jb
orb
mov
pop
out
bound
adc
sbb
shr
jnp
fildl
testb
in
jns
push
arpl
sub
or
dec
imul
mov
dec
lods
push
or
out
jbe
jbe
and
mov
sbb
cld
jl
xorb
xor
cmpsb
sbbl
gs
fsubl
cmpsl
sete
out
in
mov
jo
lcall
push
jmp
xor
test
adc
adc
xchg
adc
test
mov
inc
xchg
push
cld
lods
out
hlt
mov
inc
and
in
jnp
call
push
testl
cs
sbb
fldl
cmp
sbb
subl
fcompl
fs
push
pop
ss
mov
enter
dec
frstor
mov
cmp
popa
lea
loopne
jp
cmpsl
adc
cmpl
mov
shlb
inc
test
mov
shrb
insb
push
cmp
out
aad
aam
cmp
or
push
jno
pop
repz
std
sub
mov
sbb
cs
xor
mov
movsb
xchg
inc
push
lds
jns
mov
push
cld
sti
xor
adc
xor
out
ret
imul
add
jnp
rorb
fmul
lods
cmc
mov
pop
test
xlat
out
lea
into
lret
rorl
mov
stos
cmp
test
daa
cli
int3
jb
cmp
jno
xor
bound
pop
iret
mov
outsb
push
xor
movsl
adc
xor
cltd
mov
in
sub
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
sbb
fnstenv
and
jo
dec
jbe
bnd
xchg
sbb
cmp
outsl
xchg
fsubrp
fsubrl
xor
cmpsl
repnz
cmp
cli
scas
sbb
push
loopne
subb
pop
mov
xchg
or
lods
jmp
clc
sub
sbb
ljmp
in
and
push
cwtl
rcrl
std
out
jne
mov
rcrb
in
jo
pop
imul
cmp
arpl
js
inc
jp
mov
mov
mov
int
mov
out
imull
fs
std
ds
dec
mov
cmp
mov
pop
mov
mov
repnz
stos
adc
arpl
js
test
xchg
je
xor
jns
add
push
lahf
clc
aaa
jg
adc
fwait
lds
out
mov
hlt
push
add
add
adc
mov
cmpsb
daa
dec
leave
push
jl
xlat
ja
ret
inc
ret
lahf
push
inc
push
popa
sub
cmp
test
pop
cwtl
cmp
cmp
shlb
sub
xchg
out
stos
pop
jne
mov
mov
cmp
pop
nop
mov
neg
insl
xchg
push
aad
pushf
cli
xor
dec
dec
pop
loopne
mov
sahf
jo,pt
and
out
cmpb
mov
ret
lret
push
imul
clc
hlt
call
mov
add
push
addb
call
out
lods
popf
or
jnp
movsb
pushl
lods
out
jmp
enter
andb
test
repz
add
mov
jge
xchg
cmpsl
orl
adc
cmp
cmpsb
std
or
or
in
out
jne
je
push
xor
mov
ret
cltd
mov
sbb
push
mov
push
pop
xchg
out
dec
test
sub
xor
mov
iret
cs
jnp
shll
iret
cmpsb
repz
popf
and
nop
xchg
xchg
mov
sub
lcall
das
sbb
movsl
sub
inc
cmp
mov
cmp
xchg
stc
clc
push
in
or
and
adc
xchg
popa
cmpsl
jg
nop
mov
in
test
xor
inc
mov
add
loope
mov
jmp
dec
jle
add
jno
scas
mov
data16
jno
nop
sarl
add
mov
popa
sub
pop
sti
cmc
pop
fisttpll
pop
xor
push
divb
adc
push
mov
xchg
jmp
notb
inc
shlb
mov
fs
jo
add
xor
or
or
ljmp
add
push
lea
lret
test
pop
movsb
shlb
bound
inc
inc
dec
dec
movsl
and
fistps
and
mov
push
ja
shr
pushl
lea
jmp
add
out
out
xor
call
mov
push
ja
jo
and
jo
jno
sub
repnz
gs
or
dec
mov
imul
stos
test
nop
sbb
dec
add
dec
or
mov
sub
insb
loope
arpl
dec
fistps
inc
mov
or
clc
sbb
fsubl
cmp
sub
dec
daa
pop
lods
jl
add
xchg
or
mov
mov
jo
sub
push
mov
dec
das
jno
dec
fsubr
pop
cmp
es
hlt
ja
cmp
mov
sbb
lret
sub
jbe
dec
sub
xchg
and
cmp
or
jl
aad
cltd
decl
mov
or
mov
ss
out
jno
lods
cmp
pop
idiv
add
or
jle
xchg
mov
int
inc
push
xchg
and
mov
cmp
divb
push
insb
or
cmpsl
sbb
daa
sbb
lcall
test
mov
xchg
pop
cltd
mov
call
inc
xchg
pushf
mov
mov
push
sub
loop
ss
or
mov
cmpsl
xchg
adc
add
sub
xchg
arpl
push
pop
mov
lods
adc
icebp
cli
pop
dec
add
xor
mov
daa
xor
adc
sub
mov
clc
dec
jmp
repnz
in
mov
stos
jne
clc
enter
js
lret
push
mov
mov
push
push
je
roll
push
das
and
inc
or
stos
pop
test
icebp
les
jnp
in
out
and
test
jnp,pt
and
nop
inc
add
push
cs
sbb
mov
and
lea
repz
test
sysexit
dec
lds
pop
out
adc
jge
andb
push
jp
and
packsswb
xor
lea
divb
mov
inc
sti
dec
sub
jno
pop
outsl
cltd
xchg
in
and
loopne
cltd
cmp
mov
sub
jno
or
loope
add
fists
pop
ret
cwtl
mov
mov
inc
add
out
mov
jg
xchg
ljmp
xchg
lods
nop
rcrb
data16
jg
xchg
lea
mov
ss
rclb
adc
dec
sub
rorb
sbb
xchg
jge
mov
sbb
jae
sbb
hlt
cmp
scas
daa
sub
ror
jle
adc
test
loop
mov
pop
lcall
iret
mov
rorb
mov
xchg
inc
xchg
cmpsb
add
adc
xlat
fwait
push
inc
and
push
pop
mov
mov
shlb
mov
or
dec
ss
in
adc
das
lds
pop
push
or
out
jae
aas
lods
ret
mov
cli
and
adc
jg
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
push
xor
ss
loop
jo
jge
jo
jmp
cmp
xchg
mov
xor
inc
mov
mov
in
pop
sbb
mov
jne
inc
mov
push
cwtl
sbb
pop
pushw
xor
or
cli
pop
aaa
cmp
ljmp
pushf
das
and
lds
sarb
int
ret
lret
push
mov
std
cmpsl
lock
mov
xchg
int3
xchg
xchg
pop
fidivrs
aas
aaa
add
mov
outsb
jb
mov
mov
inc
pop
fisubl
mov
sub
mov
adc
push
push
cmp
jecxz
loopne
mov
sarb
mov
es
cmpsl
mov
dec
inc
aas
pop
mov
and
mov
or
fimull
int3
gs
push
fstps
testb
pop
add
jo
repnz
loopne
hlt
or
in
inc
jbe
inc
leave
xchg
test
into
sub
insb
cmp
sahf
dec
lods
adc
lea
mull
sahf
popa
rcrb
cmp
lea
lods
jno
iret
mov
and
mov
sbb
push
push
ret
shrl
push
cwtl
cltd
cli
scas
scas
movl
pop
outsl
add
pop
mov
aas
addr16
xor
out
inc
div
loop
rcl
inc
jae
scas
jle
aas
xchg
cmp
xor
aad
lret
int3
into
lods
loop
enter
fnstcw
cltd
jl
mov
adc
cltd
pop
sbb
pop
bound
jmp
xor
xor
xor
and
mov
movsb
cmp
sbb
test
xchg
int
aam
cmp
sbb
cmp
mov
mov
rcl
int
cmp
mov
xor
lds
ficoml
outsb
push
aad
jecxz
rolb
adc
dec
xchg
mov
outsl
ret
bound
xchg
pop
imul
test
int
stc
push
add
or
dec
call
out
jno
pop
xchg
aad
rorb
mov
xor
lods
ja
cld
aam
xchg
pushf
rorb
or
jne
clc
std
and
pop
stc
mov
push
mov
mov
mov
call
fimuls
xchg
pusha
hlt
and
nop
mov
pop
cmp
ja
dec
sub
shrl
push
and
mov
jge
ret
cwtl
and
movsl
sbb
cwtl
mov
xchg
fcmovb
les
out
cs
push
lahf
dec
popa
push
and
sub
add
sbbl
and
pop
sbbl
pop
sub
jae
popa
addr16
adc
sbb
ret
call
mov
mov
jmp
out
mov
ja
add
xchg
sub
jo
jge
jo
dec
xlat
pushf
in
sub
adc
mov
cs
out
ljmp
cld
pushf
adc
icebp
lcall
push
dec
dec
lea
or
or
xor
fiaddl
jmp
shlb
lahf
adcl
sub
mov
leave
pop
shlb
negl
and
pushf
jbe
mov
xor
gs
xchg
daa
shrb
sbb
aaa
movsb
shll
int3
enter
jb
loope
mov
xchg
jno
jmp
mov
repnz
xchg
flds
jo
mov
push
sbb
mov
es
jp
sahf
add
lcall
or
and
adc
pop
pop
fnstcw
jle
ss
fcmovnb
dec
stos
add
pop
fldl
push
clc
jae
iret
sub
sbb
leave
fldt
jae
mov
jp
idivb
out
inc
inc
arpl
stos
mov
andl
push
test
adc
push
iret
fbstp
into
jecxz
inc
decb
rol
xor
cmpsb
sbb
adc
fadds
dec
out
inc
inc
out
pusha
xor
movsl
push
sbb
or
xor
pop
jns
mov
loope
pop
mov
call
cwtl
popf
cmp
arpl
test
dec
int
and
sbb
pop
jmp
cltd
mov
jmp
or
jmp
jg
xor
push
call
das
mov
dec
out
subb
cwtl
and
jns
lods
dec
push
mov
mov
xchg
push
clts
xchg
int3
cwtl
imul
inc
jbe
cs
xchg
cmp
add
jb
mov
dec
int3
stos
jns
lock
dec
xchg
pushf
jmp
adc
or
cmc
dec
inc
movsb
mov
insl
xor
adc
mov
arpl
dec
dec
xchg
fdivr
push
enter
push
fsubrs
imul
enter
or
int
push
popa
les
mov
xlat
sarl
popf
stos
cmp
out
add
pop
jo
subl
shlb
aad
fiadds
bound
sbb
push
pop
movsl
inc
icebp
adc
xchg
xchg
push
aad
ret
jbe
popf
in
xchg
test
aaa
mov
mov
xchg
mov
and
mov
fdivrs
adcl
mov
or
cmp
stc
mov
icebp
or
subb
push
xchg
adc
dec
icebp
inc
stos
xchg
shll
jg
sti
push
mov
mov
fildl
mov
mov
xor
or
add
and
fnsave
inc
test
xchg
popa
out
push
int
lcall
mov
es
sub
fdivs
test
repz
jg
cli
push
xor
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
div
cs
cli
xchg
jo
lahf
jge
jo
pushf
mov
add
and
test
push
xchg
jl
pushf
cmp
mov
fsts
ret
sbb
jb
ljmp
inc
out
push
sbb
add
mov
out
out
sub
fisttps
mov
mov
xor
sub
jae
scas
pop
jae
in
xchg
lahf
in
inc
mov
pop
add
or
hlt
imulb
inc
inc
xchg
movq
add
dec
mov
sub
popf
fwait
and
mov
int
mov
xchg
dec
and
push
adc
pop
rcrb
outsl
xchg
mov
pop
mov
out
jae
mov
pop
mov
repnz
cld
jnp
mov
mov
sbb
pop
dec
ret
pop
xor
mov
pop
shr
ljmp
add
loope
mov
lcall
mov
insl
divps
push
into
push
mov
add
test
add
adc
daa
movsl
cli
idiv
js
int
leave
dec
add
push
shll
in
ret
cmpsb
insb
mov
xor
push
lahf
sub
push
lahf
adc
mov
insb
sub
ds
jmp
loop
mov
mov
add
xorl
insl
push
testb
iret
fs
subb
rcrb
dec
mov
mov
pop
cmc
mov
mov
andl
push
jp
jge
jnp
sbb
pop
icebp
inc
push
orb
fldt
roll
dec
push
push
xchg
jb
cmpsb
stos
lret
sbb
in
push
inc
push
ljmp
mov
sbb
and
aaa
lahf
jnp
and
sahf
pop
xchg
test
mov
jp
aaa
test
cmpsl
cmpl
sbb
repz
rorb
mov
xor
gs
sbb
clc
stos
sbb
xchg
cmp
arpl
mov
daa
or
mov
adc
arpl
push
dec
and
lock
jnp
fs
je
mov
adc
jnp
or
pop
mov
loopne
rorl
sbb
dec
ss
fs
xor
mov
or
pop
cmp
dec
sti
fs
add
jecxz
cmp
fildl
mov
jmp
push
insb
out
repnz
sbb
dec
dec
pop
movsl
adc
loope
js
iret
or
lcall
xor
push
push
in
xor
sbb
mov
add
pop
cmp
test
pop
jp
data16
sbb
xchg
xlat
mov
add
sub
testl
adc
or
xor
xchg
test
cmp
pop
int3
add
push
and
mov
pop
xor
lahf
ret
lret
clc
fwait
and
shl
xor
inc
inc
mov
add
jno
inc
xor
fwait
ljmp
orb
cmpl
shll
iret
je
ljmp
outsl
pop
scas
push
inc
mov
imul
xchg
out
int3
jno
xchg
dec
fisttpl
and
cmpsl
shrb
cs
scas
fstpt
jb
int
ds
pop
lea
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
cmp
sti
es
jo
mov
pop
cmpsb
cmp
sub
add
clc
xchg
sub
outsb
add
lahf
cmc
mov
fmul
jle
mov
mov
push
sub
push
sub
push
aaa
dec
ret
pop
and
adc
aad
mov
xchg
out
in
addr16
mov
pop
push
pop
xchg
call
mov
imul
lret
push
js
adc
dec
rorb
ss
inc
ja
cmp
sbb
fisubrs
xor
aam
mov
enter
lods
fcoms
js
sbb
and
and
cld
cmp
inc
sub
push
jge
sbb
data16
sub
inc
fucomp
cmp
sub
in
in
add
movb
cmp
cmp
lods
xor
std
xor
dec
mov
add
mov
sahf
pop
cmp
gs
aam
clc
gs
movsb
subl
push
push
pop
and
es
mov
or
inc
cld
fiaddl
in
jnp
int3
test
or
test
into
inc
push
xchg
and
adc
sub
outsb
cmp
cli
cmc
movsb
xchg
jne
in
pop
in
mov
mov
mov
lahf
pop
push
dec
push
jne
cmp
push
mov
movsb
xor
pop
lods
pop
out
sbb
pop
cmp
ja
idivl
inc
out
stc
ret
icebp
cltd
popf
xchg
mov
rcl
and
scas
enter
xor
incl
xor
lods
add
inc
shrb
lock
clc
jae
jecxz
jns
fst
shlb
cmp
aad
mov
and
xor
loop
ja
adc
out
sub
jae
push
xor
lret
adc
les
jns
fsubrs
fcoms
lcall
xchg
je
mov
mov
les
jne
cmp
dec
mov
mov
fwait
test
xor
mov
imul
xchg
ret
mov
cmpsl
mov
dec
out
daa
or
jle
rcll
stos
ret
pop
jle
xchg
sti
daa
xor
iret
ss
ret
inc
out
jp
in
xor
pop
stos
inc
add
push
test
inc
mov
pop
clc
shlb
je
sub
pop
jae
inc
movsl
mov
adc
in
xor
pop
push
xor
jno
adc
loopne
fstl
xor
xor
xor
fistpll
mov
lea
push
mov
gs
cli
mov
call
clc
shrl
cmpsb
jne
subl
in
xor
popf
fcomi
call
sbb
test
loop
in
movsl
xchg
test
addr16
dec
or
std
shlb
push
push
lahf
hlt
dec
loopne
adc
mov
push
shlb
lret
popf
sbb
lea
dec
mov
dec
sbb
test
mov
ss
imul
repz
mov
std
lods
shrb
in
xlat
shll
mov
test
adc
rcl
pop
mov
jp
push
fldl
stos
xor
xor
mov
mov
addr16
inc
je
xor
ljmp
orb
inc
les
cs
movsb
addr16
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
jbe
xor
jo
jge
jo
data16
dec
mov
pop
aaa
mov
cmp
mov
add
dec
mov
xor
cmp
ja
add
push
in
mov
jecxz
mov
fwait
ss
dec
addl
adc
jb
aad
inc
xchg
jbe
adc
sub
cltd
push
stc
or
jo
dec
adc
and
dec
repz
stc
inc
xor
and
push
xor
or
stos
inc
sub
pop
inc
test
cmp
push
lock
pusha
push
adc
sub
xchg
jl
mov
lret
loop
cld
inc
push
add
sbb
mov
test
nop
adc
sub
addr16
push
pop
fidivl
ds
and
lahf
shll
adc
jnp
adc
cli
or
loope
push
adcb
mov
insl
dec
xor
sub
mov
insb
adc
sahf
stc
adc
sbb
dec
pop
mov
add
jns
and
loopne
xor
push
ret
push
adc
mov
push
xor
jle
mov
movsl
enter
add
int3
mov
and
stc
fisttpll
sbb
inc
lea
loopne
cmp
andb
test
rolb
dec
xchg
mov
xor
mov
mov
sbb
fwait
xchg
xchg
adc
dec
pop
push
mov
cmp
sbb
sbb
and
mov
lods
and
push
faddl
inc
adc
jecxz
insb
movsb
in
mov
aaa
mov
lret
adc
mov
rcrb
iret
sbb
adc
mov
jbe
addr16
leave
mov
xchg
mov
dec
ret
neg
gs
sub
xorl
inc
std
inc
mov
add
pop
mov
push
bound
push
sub
into
mov
popf
jmp
scas
or
int3
pop
shlb
cltd
push
lea
and
cmpsb
jle
pop
mov
jecxz
or
scas
aad
mov
lds
mov
gs
push
or
adc
imul
dec
lcall
fdiv
mov
xor
movq
aas
sbb
xlat
testl
cs
mov
or
cwtl
test
mov
push
xchg
repz
jnp
rcrb
imul
pop
and
push
fwait
outsl
leave
sub
pop
imul
sbb
adc
ja
xchg
adc
nop
xchg
pop
mov
mov
aas
or
mov
gs
push
mov
mov
loope
test
repz
mov
push
adc
mov
in
inc
nop
sub
dec
push
add
imul
sbb
in
mov
xchg
mov
sti
pop
sub
adc
aad
sub
jns
sbb
jne
fwait
inc
rcrl
lret
jle
lret
mov
xor
jmp
push
lods
push
dec
dec
lock
ljmp
aad
push
fs
push
xchg
adc
clc
push
iret
adc
xchg
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
sbb
jne
in
jo
lahf
jge
jo
mov
test
ret
mov
outsl
lods
and
imull
in
cwtl
clc
fcomps
cmpsb
cmp
mov
ss
aam
shll
sbb
mov
add
adc
fwait
dec
outsb
xchg
pop
jo
fstl
ret
push
and
jl
sgdtl
mov
in
dec
jae
scas
mov
scas
fcoml
enter
scas
cmp
pop
dec
inc
lcall
sub
aad
ret
hlt
mov
push
push
rol
jnp
adc
and
add
mov
inc
out
jns
fcmove
ja
int3
imul
fdivrs
push
in
scas
pop
cmp
mov
sbb
xor
adc
cwtl
ja
xor
mov
pushf
xor
mov
mov
cmpsb
es
into
pop
add
pop
mov
pop
mov
sub
ss
dec
jl
fildll
rcrb
add
mov
imul
gs
or
sbb
lahf
cmp
mov
lcall
push
mov
pop
xchg
movsb
push
push
in
mov
jmp
sbb
pop
cmp
and
push
xor
xrelease
adc
mov
addl
insl
out
dec
pusha
lds
mov
jne
lahf
jmp
testl
pop
leave
adc
mov
cmpl
jmp
iret
ret
or
aaa
inc
xchg
pop
icebp
outsb
pop
fwait
xchg
mov
ss
rcrl
clc
cmp
sub
nop
test
add
jns
jl
lods
pop
cmp
test
mov
sti
and
lods
jb
mov
pop
adc
mov
loope
xlat
xor
popf
pop
and
out
lahf
lret
xchg
icebp
insl
in
stc
dec
ret
gs
pop
vpandn
or
pop
xchg
je
std
cmp
pop
add
mov
cbtw
lahf
hlt
psrlw
icebp
pop
add
in
sub
sbb
call
and
mov
mov
cmp
jo
mov
mov
pushw
imul
lock
or
icebp
dec
xlat
sub
push
xor
and
lods
sbb
inc
frstor
repnz
jnp
pushf
cld
dec
fldcw
data16
dec
vminps
adc
and
out
ret
xorl
sub
leave
cmp
jb
xchg
leave
pop
push
fwait
push
dec
pop
add
push
fstps
xor
dec
jne
xchg
hlt
test
test
pusha
popf
mov
les
out
aas
mov
and
inc
jge
add
sub
shr
xchg
shr
bnd
mov
add
jge
nop
jno
adc
jge
imul
pop
insb
push
or
mov
mov
addr16
mov
add
cmpsb
cmp
mov
adc
cmpsl
xchg
arpl
aaa
adc
mov
ja
sub
or
dec
and
mov
cmp
pushf
ret
lret
fstps
rcrl
cli
lea
push
mov
call
mov
mov
dec
pop
mov
xchg
popf
pop
in
xlat
test
mov
les
test
or
icebp
push
fnsave
rolb
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
cmc
in
jecxz
std
jo
lahf
jge
jo
inc
aaa
xchg
xchg
je
jmp
and
adc
aaa
mov
xor
dec
das
popf
cmp
fwait
cmc
gs
mov
mov
and
fst
push
int
fnstenv
pop
call
xor
add
out
dec
jae
imul
hlt
mov
sbb
iret
shlb
adc
dec
jge
dec
inc
outsl
mov
jae
out
fiaddl
repnz
es
outsb
and
push
rclb
into
mov
jmp
enter
pushf
aas
jno
adc
aas
test
loop
bound
cmp
jge
add
or
jl
pop
in
lret
movsl
cmp
push
sub
lods
mov
fsin
jnp
fidivrs
cs
addr16
or
xchg
pop
push
rorb
adc
mov
popl
stos
push
sub
sahf
xchg
push
inc
insb
jmp
pop
lahf
fstps
ljmp
pop
inc
jbe
pop
testl
lods
fld1
and
mov
adc
mov
mov
jp
into
jle
imul
sub
xor
add
sub
subl
dec
and
call
out
lcall
jbe
pop
test
pop
and
adc
dec
mov
mov
and
cltd
adc
xchg
fs
ds
sub
jle
in
or
mov
xchg
popf
popf
push
stos
in
pop
sbb
push
mov
movsl
hlt
dec
pop
test
sahf
testb
loopne
aad
inc
cmpsl
pop
cld
mov
es
xor
jne
andl
stos
stc
inc
subb
xchg
fistps
aaa
stos
jmp
and
xchg
cli
lods
push
in
or
outsl
movsb
add
cmpsl
sub
into
repz
or
stos
cli
jne
cmp
mov
shll
sti
aas
or
pop
fsubrs
out
iret
mov
cld
icebp
jnp
nop
mov
ret
out
sbb
test
outsb
insb
push
inc
sbb
into
pop
adc
mov
xchg
pop
inc
mov
mov
mov
std
bound
adc
inc
cmp
call
ds
test
add
push
movsb
sti
movsl
inc
fcomi
push
lret
scas
lahf
stos
ss
push
dec
jne
cwtl
jb
add
cmova
pop
push
xchg
cmp
aad
and
dec
and
add
push
jb
fbld
pusha
pop
push
repnz
push
lock
xchg
mov
dec
mov
in
xchg
dec
xlat
fisttpl
cmp
pusha
ljmp
mov
cmc
jae
mov
add
sub
adc
ret
mov
hlt
aad
xchg
sbb
cmc
ret
xchg
movsl
and
aad
dec
mov
add
and
iret
js
pop
jns
inc
ficoms
mov
inc
add
mov
fs
data16
cmp
dec
fildll
imul
push
enter
ljmp
es
in
les
fs
xor
or
xor
es
sbb
sub
xchg
push
inc
lcall
or
add
cltd
ds
repz
xchg
orl
nop
push
mov
jg
movsb
popf
lret
mov
sub
and
cmp
ds
shr
mov
jne
sub
lret
jns
repz
jge
jo
or
adc
jno
mov
insl
add
popf
add
enter
xlat
mov
push
aam
je
cmc
gs
enter
push
pop
cmp
imul
lods
fnstsw
mov
inc
pushl
icebp
fcoml
out
sahf
and
fsubrl
les
dec
jbe
xor
rorl
jnp
lahf
inc
cwtl
inc
add
out
dec
lods
inc
imul
add
popa
jb
jb
sbbl
leave
lock
pop
jmp
xchg
loop
mov
in
pusha
stos
jmp
mov
add
roll
mov
outsl
add
insl
xchg
lds
dec
outsb
jo
ret
dec
call
negl
retw
mov
lret
inc
lds
add
xchg
add
inc
ret
pop
mov
gs
fisubl
jbe
jmp
loopne
ds
shrd
rcl
imul
mov
loope
gs
daa
sar
out
push
cmp
out
ret
sbb
inc
jmp
out
les
inc
out
adc
mov
pop
aad
sub
je
adc
fwait
sbb
shrb
and
jns
mov
sahf
out
sbb
fidivl
mov
mov
fs
mov
pop
ds
stos
cmpsl
xor
xor
push
adcb
bound
fidivs
and
mov
xchg
rcr
shl
and
pop
aam
mov
jecxz
out
cltd
fdivrs
je
shr
outsb
xor
scas
cmp
out
cltd
repz
and
inc
adc
push
pcmpgtb
ret
sti
pop
lahf
and
or
dec
push
jge
in
sbb
ficoms
pop
leave
hlt
int3
jb
test
pop
bound
xor
cmpl
xchg
mov
mov
mov
pop
lea
pop
in
fcomps
cmp
sub
popf
add
idivb
and
cmp
divb
adc
mov
cmp
clc
xlat
insb
xchg
in
mov
sahf
mov
jne
mov
lcall
inc
mov
push
fdivp
fadd
dec
pop
pop
mov
lcall
mov
add
outsb
aas
hlt
cmpsb
aad
aas
adcb
mov
leave
fisubs
cmp
sub
and
sbb
cltd
imul
cltd
bound
orb
bound
cmp
and
repnz
push
xlat
daa
dec
mov
xlat
push
arpl
movsb
cli
test
xor
addr16
inc
dec
mov
ljmpw
shlb
inc
in
jecxz
jb
dec
data16
pop
lods
inc
xor
xchg
test
out
subl
cmp
fcoml
pop
cmpsl
and
adc
std
cmp
xchg
nop
test
in
mov
xchg
cmp
jmp
les
sbb
sbb
iret
shlb
add
lret
not
lods
rolb
xor
pop
jecxz
sub
inc
mov
dec
out
adc
insl
loopne
adc
pop
inc
mov
outsl
mov
mov
sbb
in
push
mov
lahf
dec
out
and
pop
xchg
mov
xchg
pop
in
imul
sub
test
pop
add
aad
popf
inc
fdivrs
lahf
push
insl
mov
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
mov
xchg
lahf
jge
jo
loop
mov
mov
in
and
nop
jecxz
out
ret
pushf
icebp
lcall
and
mov
hlt
fisttpll
ljmp
adc
pop
mov
lret
pop
js
xchg
xchg
mov
scas
dec
or
push
cmpsb
jae
mov
hlt
mov
cld
or
inc
movsl
iret
push
pop
les
fwait
cmp
aas
in
xchg
dec
lds
ljmp
aas
cmpl
dec
xor
inc
lret
dec
sub
push
call
fnstsw
mov
push
mov
cmp
lahf
fiadds
and
xor
and
setae
pushf
jne
push
ss
shrl
jp
dec
mov
or
pop
jecxz
sub
out
and
sarb
or
pop
or
test
sahf
push
adc
mov
dec
push
dec
mov
inc
ds
or
xchg
xchg
dec
mov
or
push
in
outsl
mov
lods
fidivl
out
pop
das
clc
jle
xchg
xor
and
mov
leave
fcoml
scas
testb
cmpsl
not
or
jle
inc
jmp
out
test
xor
dec
fbld
test
mov
xor
insl
outsl
mov
fnsave
sub
add
aam
cmp
ds
mov
imul
xlat
adc
andl
ljmp
ds
out
pop
and
sub
es
xchg
push
xchg
ret
adc
enter
sub
or
mov
jmp
inc
into
loopne
cmp
mov
xchg
add
adc
jae
jbe
bound
xchg
mulb
cld
repz
mov
mov
gs
mov
or
xor
sti
gs
xchg
test
sbb
std
shlb
sbb
pushf
mov
loope
add
jl
jmp
push
lea
loop
mov
shll
pop
adc
roll
xchg
cmp
mov
pop
or
xchg
sbb
fwait
pop
cmpsb
loopne
xchg
mov
je
mov
int
pusha
or
mov
loopne
ffree
xchg
adc
cmp
rorl
dec
jo
or
lea
adc
ljmp
lea
and
sbb
popa
jo
in
push
cmp
or
scas
ljmp
enter
into
pop
or
or
and
xor
scas
popa
ds
dec
movsb
das
in
lret
mov
cwtl
and
mov
push
movsl
adc
adc
xchg
std
ret
outsl
mov
sbb
cli
ret
lea
das
mov
fstps
movsl
mov
subl
cmp
jg
std
mov
out
in
stc
pop
mull
loop
mov
sbb
jge
or
inc
mov
out
jl
rorl
lahf
leave
sbb
jge
orb
push
or
mov
xchg
addr16
or
lods
xchg
imulb
or
stos
fs
aas
out
sbb
jge
ret
lds
mov
mov
sbbb
jae
in
mov
mov
icebp
ds
inc
or
jg
jmp
push
push
repnz
xor
xor
sbb
adc
jge
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
lods
inc
pusha
xorl
jge
jo
inc
pop
xor
or
loopne
icebp
test
mov
mov
call
xchg
nop
dec
mov
pop
mov
mov
enter
mov
je
daa
xlat
and
dec
nop
inc
pop
std
rcr
or
mov
lea
or
les
push
sub
aas
shll
xchg
add
inc
ret
out
add
arpl
fildll
sub
pusha
pop
sahf
stos
mov
adcl
les
bound
and
sbb
fldcw
mov
or
mov
inc
out
jmp
jne
add
mov
in
inc
leave
sbb
test
inc
mov
lock
dec
cmc
pop
aas
push
inc
iret
ljmp
pop
xor
or
push
adc
push
daa
jle
dec
int
mov
push
dec
mul
pop
and
cmpsl
test
imul
out
fbstp
jl
push
insl
in
cmp
or
add
data16
iret
jns
and
lea
xor
out
std
cs
ret
xchg
jno
stos
jbe
pop
sbb
lods
inc
mov
lret
inc
cmpsb
inc
adc
xchg
clc
insl
jmp
inc
and
lahf
xor
lahf
add
push
jbe
scas
push
xchg
inc
fs
sbb
push
dec
das
adc
imul
or
xchg
jo
push
push
mov
ss
mov
and
movsb
int3
xor
adc
push
adc
jmp
dec
lods
mov
adc
mov
aam
dec
mov
jp
lret
mov
sbb
jle
out
adcb
imul
pop
frstor
test
cmp
jl
push
stos
sub
add
mov
sbb
or
inc
dec
lcall
rolb
xor
outsb
jbe
cmp
fidivs
shrb
xchg
pusha
pop
push
arpl
ljmp
cmp
sbb
add
fwait
enter
jecxz
mov
aad
jbe
aad
sbb
jns
mov
push
rcll
into
imul
inc
or
ret
mov
add
imul
xchg
pop
jne
push
cmp
ss
insb
scas
iret
lret
push
xor
xor
ret
xor
cmp
test
fmull
xlat
pop
mov
xor
pop
xchg
mov
imul
xchg
inc
mov
loop
mov
push
mov
orl
push
xlat
or
pop
inc
cmp
add
or
flds
adc
sbb
and
outsb
cwtl
dec
mov
ja
jnp
das
mov
in
cld
inc
mov
cmc
inc
fidivs
adc
or
popf
test
mov
stos
adc
test
das
mov
sub
cmp
cmp
push
out
stos
lcall
mov
sub
mov
stc
and
out
xor
iret
shrl
push
pop
add
sbb
sub
mov
inc
mov
add
push
iret
in
and
cmpsb
xchg
mov
roll
jecxz
ret
test
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
and
jo
lahf
jge
jo
mov
fildll
iret
add
adc
inc
push
mov
int
jb
sarb
into
sub
sbb
push
aad
or
ss
aam
sub
out
sub
out
pusha
push
popl
and
dec
scas
xchg
jne
popf
add
fs
mov
fbld
mov
adc
popa
push
or
loop
inc
sbb
or
jns
xchg
scas
in
jmp
call
jp
sub
dec
xchg
js
shrb
std
jp
sbb
sar
subl
repz
mov
sbb
sbb
loopne
and
inc
mov
fisubrs
xchg
xor
cmp
mov
popf
lods
into
adc
out
push
in
shrb
or
mov
inc
aam
js
outsb
xor
mov
cmp
fcoms
lahf
test
mov
sub
and
fadds
adc
lock
cld
cmp
cs
push
dec
cmpsb
cmpsb
adc
sbb
adc
push
cmp
insb
xchg
in
or
aas
pop
or
cmp
sbb
jae
fwait
std
dec
arpl
frstor
pop
push
in
lods
sub
xchg
xor
leave
add
mov
out
jmp
pop
js
mov
inc
cmp
dec
and
and
fstpt
jg
jo
andb
pusha
popa
pushf
pop
mov
or
cmp
insl
movsl
das
pushf
xchg
cmp
mov
cli
adc
mov
xor
jbe
pushf
xor
bound
int3
les
fisttpll
push
cmpb
pop
push
ret
cmc
and
ret
push
inc
and
mov
mov
out
out
cwtl
clc
out
and
je
int3
mov
cmpsb
push
inc
ja
adc
std
xchg
jns
stc
test
sub
or
pop
sti
xor
fiaddl
push
fnstsw
xlat
mov
ret
xchg
cmp
xor
pop
sahf
sbb
ja
adc
shlb
dec
rcll
xor
lods
jl
push
pop
fmul
push
cli
in
xor
inc
mov
and
push
movsl
or
rorl
xor
or
into
jmp
loope
mov
xor
out
cmp
push
scas
jns
add
rol
sahf
aaa
sbb
fwait
clc
ljmp
js
in
push
mov
outsb
inc
inc
adc
leave
sbb
cmpsb
mov
insb
int3
xor
push
mov
je
loop
and
cld
cs
and
sbb
in
or
push
jg
mov
jbe
xchg
test
stos
cmp
mov
and
and
repz
inc
mov
xor
xchg
dec
mov
leave
outsl
movsb
loop
jae
dec
add
sbb
dec
sub
cmp
add
imulb
ss
stos
pop
mov
pop
out
test
mov
inc
inc
test
test
adc
out
bound
fidivl
jle
xor
push
sahf
shl
push
sub
mov
and
xchg
jle
out
cmp
insb
sub
cmp
fiadds
aaa
cld
lods
xchg
lods
lahf
cmc
sub
xor
addb
cmp
sarl
sbb
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
mov
test
inc
add
cmc
fdivs
mov
enter
mov
sub
icebp
popa
subb
adc
push
jl
xchg
sbb
hlt
bound
imul
pop
aam
std
push
dec
insb
stos
stc
or
jg
xchg
push
sbb
repnz
fs
lret
fstl
inc
stc
push
jo
push
notb
xchg
inc
sbb
aas
pop
cmp
ret
lock
or
sbb
dec
cmpl
js
aad
mov
dec
or
dec
bswap
fcomip
add
mov
cld
movsb
out
ret
pop
mov
xlat
ffreep
or
gs
ljmp
cmpsl
adc
lods
lret
mov
cmp
inc
outsb
shrb
or
mov
ss
bsr
jmp
jl
push
inc
sub
sub
into
es
outsb
or
movsb
push
push
mov
lret
iret
push
push
lods
imul
out
jl
je
adc
pop
push
ret
cmc
mov
adc
stos
stos
sbb
fcomp
jnp
dec
sti
xor
inc
cmp
ret
push
adcb
out
sub
pop
out
jbe
add
rcl
push
in
dec
pop
hlt
add
call
sahf
xor
sbb
push
jae
test
xor
push
cs
and
mov
rolb
repz
inc
push
rclb
inc
mov
and
adc
mov
fadds
jecxz
mov
xor
aam
add
cmp
out
int3
int
js
mov
into
dec
incl
or
mov
int3
push
fldenv
insb
mov
pop
fistpl
lods
and
daa
xchg
inc
cmp
jmp
add
pop
or
mov
fstpt
jg
pop
sbb
pop
mov
sbb
add
push
stos
xorl
pop
inc
cmp
dec
out
clc
cmpb
fs
or
xchg
and
and
pop
jecxz
ret
cmp
sahf
mov
sbb
daa
xchg
repz
dec
cmc
or
and
test
call
xchg
jecxz
into
jp
jmp
push
loop
lcall
push
loopne
jl
mov
mov
jle
loopne
dec
mov
dec
in
imul
cmpsb
loope
inc
jg
push
lock
xchg
leave
jp
push
or
jl
jno
insb
je
mov
cmpsl
sbb
pop
sbb
xor
lea
fbld
pop
bound
ljmp
mov
pop
in
inc
sarb
or
sbb
lret
data16
lcall
out
clc
xor
jns
pop
ret
and
sub
nop
inc
cmp
and
add
pushf
mov
jg
jg
sbb
cmpsb
xlat
out
ja
add
mov
lods
add
xchg
lods
and
jecxz
lds
xchg
daa
push
cmp
cmp
cmp
xchg
cli
insl
movsl
push
sbb
adc
sub
cmpsl
orb
hlt
mov
sti
add
mov
aaa
cwtl
pusha
mov
xchg
jle
jmp
test
insl
and
sub
test
sahf
bound
sbb
cmpsb
imul
imull
les
sbb
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
jl
xchg
mov
lahf
jge
jo
add
push
inc
lcall
loopne
lcall
ljmp
negb
les
inc
cmp
cld
pop
xor
push
add
cmc
fwait
rclb
out
push
out
mov
js
xorl
jl
dec
aaa
adc
inc
shll
sbbb
mov
cld
mov
add
add
jg
adc
dec
outsl
jno
aam
push
js
adc
mov
data16
pop
test
fsubrl
jmp
jb
cwtl
sbb
xor
pushf
mov
je
popf
iret
in
cltd
mov
inc
mov
jns
inc
jmp
int3
inc
xor
test
xchg
sub
sbb
jae
jne
ds
pop
adc
xchg
fadds
les
pop
lret
dec
xchg
mov
dec
out
cmp
sub
xchg
add
mov
in
test
add
jae
sub
sub
cltd
xchg
pop
rcl
jae
xchg
sbbb
dec
lock
testb
xchg
inc
dec
pop
enter
cmp
dec
push
inc
cmc
dec
xor
xor
add
cld
dec
inc
add
in
fsubs
push
pop
out
pop
cmp
popf
dec
dec
mov
cltd
or
pop
jbe
push
cmp
and
push
shr
sbb
mov
ret
push
mov
and
and
js
push
adc
stc
or
out
mov
mov
dec
sbb
clc
mov
notb
es
cmp
or
adc
mov
push
adc
and
pusha
inc
sub
aad
nop
pop
insb
rorl
add
mov
lds
xchg
lret
cmp
enter
pop
mov
repnz
lds
pop
xchg
outsb
mov
fbstp
xchg
adc
sbb
mov
inc
insb
subb
mov
out
sub
and
mov
adc
mov
pop
cmp
xchg
xchg
out
pop
repnz
xchg
int3
push
std
mov
add
test
inc
int3
add
jns
push
push
jae
jle
push
xlat
aad
xlat
loope
push
and
xchg
popl
pop
sub
stos
pop
xor
or
in
in
jmp
cmp
decl
sbb
xor
insl
mov
inc
inc
pop
jbe
pop
cmpsb
mov
lea
test
cmp
mov
push
inc
inc
jno
ret
jge
mov
mov
outsl
out
in
inc
mov
pop
jae
adc
adc
pop
aam
mov
shr
ss
loope
ret
aam
popa
lods
jmp
int
adc
mov
push
or
xor
cmp
adc
ljmp
mov
add
pop
sub
mov
fsubr
or
lcall
mov
movsl
xchg
das
mov
popf
push
xchg
loope
es
xchg
or
or
jle
inc
mov
inc
cld
push
lret
cmp
out
imul
cmp
imul
push
pop
mov
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
dec
mov
ret
jo
lahf
jge
jo
aad
lahf
outsl
daa
sarl
sbb
mov
in
cltd
add
cmpsl
dec
push
dec
in
outsl
popa
xchg
dec
fs
mov
je
xor
test
rcrb
dec
or
rolb
stc
rcrl
cmp
icebp
aam
imul
aad
jecxz
and
push
cmpsb
out
dec
push
jmp
add
cmp
pop
jb
cmp
lcall
ret
xor
mov
pusha
add
into
jno
ljmp
and
scas
movsl
inc
iret
xchg
xchg
pop
jle
js
les
mov
mov
sarl
ret
in
dec
xor
xor
mov
and
add
add
cld
aad
dec
idivb
push
insl
jmp
pop
cmp
ds
push
imul
filds
out
in
lret
cli
inc
mov
cwtl
adc
xchg
lahf
inc
cmp
cld
mov
mov
subb
sbb
mov
or
insb
movsl
pusha
fninit
inc
jno
repz
pop
mov
xor
jno
sub
sub
inc
test
gs
ljmp
test
and
pop
mov
lret
aad
adc
aam
fcmovb
mov
iret
lahf
or
mov
push
mov
mov
cmpsl
sbb
cmpsb
jle
hlt
xchg
and
and
ss
das
pop
jg
ror
mov
icebp
xchg
inc
and
aam
jg
pop
hlt
stos
mov
inc
out
cld
popa
daa
call
gs
pop
mov
dec
mov
adc
insb
mov
mov
lret
mov
fcomps
nop
cwtl
mov
xlat
dec
xor
add
mov
int
add
or
mov
pop
je
fucomi
arpl
cmpsb
pushf
scas
std
test
sbb
inc
push
mov
ljmp
xchg
and
movsb
push
dec
xor
push
adc
pop
sub
mov
lcall
pop
mov
xchg
mov
rcrl
iret
xchg
fnstsw
jno
test
movsb
pushf
jb,pt
test
aaa
sbb
xor
push
arpl
inc
je
out
jbe
sub
jb
inc
sub
or
lret
mull
push
daa
adc
xor
fsub
jmp
jge
cmp
popl
mov
mov
sahf
lds
hlt
adc
and
add
iret
jge
and
jle
sub
pop
inc
xchg
cmp
add
fistl
mov
and
and
xchg
cwtl
lret
stos
cmp
xchg
jns
inc
jnp
insb
push
sarl
pop
ficoml
scas
bnd
adc
ret
adc
fs
and
lock
adc
mov
in
dec
imul
les
mov
aad
fincstp
rcll
out
jno
fcmovnbe
xchg
mov
movb
and
sub
mov
add
int3
push
sub
test
sbb
ret
fdivl
mov
xlat
shrb
pop
and
cmp
pop
andl
les
mov
scas
andb
jnp
jge
xchg
xchg
xlat
or
jnp
fneni(8087
pop
lods
and
jb
rorb
push
cmpsl
shr
cmp
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
sbbl
fadds
jge
jo
test
ret
loope
pop
insl
scas
push
adc
cmc
cmp
test
imul
or
xchg
out
dec
pop
push
sbb
fcmovne
sub
ret
cld
adc
sub
jns,pt
aas
sbb
adc
jns
pop
sbb
in
cmc
dec
xchg
lret
loopne
mov
jns
fistl
imul
xor
out
ret
lods
jmp
pop
cli
dec
xor
or
mov
jmp
mov
movsl
cs
leavew
pop
mov
std
sub
cmc
aaa
push
fldenv
call
mov
and
jl
mov
mov
arpl
sti
imul
lahf
and
mov
adc
sahf
lcall
lods
ds
mov
mov
push
dec
and
or
sbb
pop
add
fildll
repnz
sbb
push
xchg
dec
out
mov
sbb
add
enter
inc
mov
in
xor
inc
jb
fwait
iret
rcr
idivl
incl
mov
adc
daa
out
cmp
bound
xchg
pusha
pop
mul
sub
mov
fisubrs
icebp
pop
dec
sti
stos
in
cld
insl
xchg
subb
ret
sub
xor
pushf
jmp
stos
jg
mov
aas
xchg
fisttpl
mov
mov
sub
jae
lock
sub
add
data16
xor
out
js
cmc
add
adc
inc
lret
enter
dec
imul
add
lds
cltd
aam
cs
call
mov
outsl
mov
xchg
mov
imul
outsl
push
cs
lcall
mov
xchg
cld
mov
inc
mov
mov
add
mov
mov
stos
pop
enter
test
xor
lahf
cs
sarl
lods
sbb
mov
stos
xor
inc
push
or
fcomp
fldl
jb
popf
stc
scas
xchg
mov
dec
mov
out
sbb
dec
pop
popa
push
int
inc
test
lret
sti
or
js
out
xor
stos
fstl
sbbb
out
jp
jo
or
nop
xlat
rcrl
mov
mov
fists
fadd
jp
in
movl
insl
fstpl
repz
inc
sbb
or
ret
mov
adc
jge
cmp
jne
fs
push
xchg
popa
cmp
outsb
sub
roll
test
mov
pop
cmpsb
or
sqrtps
shlb
rcll
xchg
mov
inc
pop
aaa
cltd
rep
pop
pop
outsl
jmp
pop
insb
aaa
cmp
pop
rclw
sub
jns
mov
lcall
jge
stos
cld
fsubrl
fisubl
dec
jecxz
or
iret
ret
mov
xchg
shll
pop
xchg
scas
imul
out
fldenv
mov
inc
ds
pusha
xchg
mov
mov
hlt
jmp
inc
mov
jp
lcall
cltd
cmp
test
or
mov
sar
test
jmp
jo
bswap
mov
sbb
das
fisttpl
jb
sbb
pusha
insl
push
fildll
shlb
mov
test
and
inc
insl
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
out
stos
popf
jo
lahf
jge
jo
mov
and
imul
mov
fsubr
or
sbb
sti
inc
lret
adc
cmc
bound
ds
into
scas
lock
outsl
dec
cmpsl
enter
inc
add
lea
xchg
pop
fdiv
mov
out
ljmp
mov
int3
inc
sbb
repz
push
lret
cmp
ss
pop
jne
and
sbb
dec
jae
iret
jae
mov
mov
jae
fnstcw
xchg
pop
push
ficomps
lock
xchg
pushf
inc
mov
jg
sar
icebp
cmp
rcl
or
jg
pop
xchg
sub
push
cmc
or
dec
das
mov
dec
lcall
nop
jb
push
and
mov
sbb
shl
cmpsl
pop
lods
std
adc
lds
lods
bound
jb
or
mov
push
jno
adc
leave
mov
fists
xlat
pop
pop
pop
jae
inc
mov
sbb
cmp
adc
loope
and
xor
add
and
loop
das
xlat
xchg
mov
leave
mov
and
sarb
or
insb
repz
cwtl
xchg
mov
nop
xor
loope
xor
jg
mov
movsb
insb
jl
xor
pusha
mov
in
mov
mov
inc
loop
in
mov
dec
or
cmpsl
and
and
inc
xor
lcall
enter
cwtl
stos
lods
sub
aas
idivl
mov
aam
int
inc
scas
mov
out
xchg
inc
dec
cltd
aam
insb
jbe
sub
mov
fsts
xchg
mov
mov
mov
cltd
fadd
popf
fiaddl
scas
cmc
in
jg
jo
sbb
loopne,pn
test
lea
popf
ljmp
sub
clc
repnz
jb
cmp
iret
mov
fstpt
sub
insb
sub
dec
jno
cli
xchg
icebp
daa
mov
and
hlt
cli
ss
fcomps
inc
loop
or
mull
loopne
loopne
inc
pop
lcall
jbe
jge
ret
or
xchg
xchg
ljmp
fisubl
nop
add
mov
dec
cmp
jge
les
in
cmp
mov
sarb
movsb
sub
icebp
xorl
jb
lock
mov
xchg
in
pop
push
jecxz
dec
out
in
jecxz
into
add
xchg
or
xor
xor
enter
das
push
pop
cmp
jmp
enter
int3
into
ja
jae
test
jmp
fisubs
jae
xchg
negl
rorl
adc
fs
es
mov
pop
cmp
xchg
dec
sub
mov
ss
mov
adc
stos
repz
sub
cld
js
insb
in
loop
in
int
shrb
ret
jns
sahf
and
mov
inc
pop
xchg
cmpsb
cmp
xchg
push
shlb
add
repnz
sbb
mov
jmp
sbb
jne
jmp
ja
dec
mov
jp
enter
movsl
sbb
adcb
outsb
add
mov
mov
and
mov
es
stos
add
pop
sbb
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
movsl
in
inc
leave
cltd
jo
lahf
jge
jo
mov
xchg
jae
imul
insb
and
xlat
mov
negl
test
mov
or
loope
cltd
sahf
out
and
arpl
icebp
mov
sti
orl
iret
pop
dec
stos
or
sub
mov
testb
ljmp
test
jecxz
sbbl
cmpsl
xchg
lods
int3
ret
adc
lret
insl
and
cwtl
mov
adc
iret
xor
in
xchg
clc
mov
cli
outsb
fists
ljmp
sub
or
mov
jns
push
push
cmp
mov
add
mov
or
ds
xchg
xchg
jecxz
jns
js
xchg
popf
pusha
sbb
out
sub
movsl
hlt
xor
mov
mul
lods
sbb
pop
mov
sbb
or
xor
dec
add
stos
pop
rcll
inc
loope
mov
sub
adc
jecxz
or
sub
test
mov
test
mov
push
mov
cld
pop
adc
mov
adc
cmp
jae
outsb
and
aas
mov
testl
loop
jb
test
cmp
sub
aad
int
xor
andl
lds
xchg
xchg
and
les
lods
hlt
out
lock
xchg
ds
and
imull
inc
jmp
packuswb
mov
in
lods
and
push
push
stos
ja
inc
ret
stc
mov
jns
or
sub
insb
jnp
cmp
sbb
shll
cmp
in
cmp
test
push
mov
sub
insb
push
cmc
fs
int3
add
popa
mov
jb
in
xor
pushf
out
insl
shll
cmc
stos
xor
add
dec
xchg
scas
leave
dec
xlat
imul
mov
jns
xchg
inc
loope
adcb
cmp
dec
dec
sbb
dec
out
hlt
popf
jl
pop
loopne
sbb
mov
jecxz
push
icebp
xor
sub
out
aas
and
out
insb
inc
loop
adc
mov
mov
push
jge
test
js
mov
push
push
out
int3
insb
or
xchg
rolb
shrl
cmp
sub
enter
mov
jbe
ss
std
or
mov
mov
mov
aam
in
xchg
aam
fldl
cmp
hlt
dec
dec
pop
dec
push
sub
or
push
mov
hlt
adc
scas
incl
mov
pop
scas
inc
lret
pop
push
dec
mov
sbb
aam
scas
mov
xor
out
mov
out
sqrtps
outsb
insl
mov
test
xchg
jbe
pop
sahf
movsb
in
jmp
xor
call
xchg
mov
pop
inc
jecxz
mov
inc
getsec
fsubr
stos
push
push
xlat
xor
mov
cmp
or
lea
push
inc
sti
lock
in
ss
or
adc
jge
add
and
jno
dec
int
nop
sub
cmp
stos
push
mov
xchg
daa
xor
add
adc
adc
loopne
dec
test
insl
cmpl
gs
and
dec
adc
push
loopne
pop
clc
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
ljmp
jg
jo
mov
sbb
add
adc
std
outsl
outsb
shll
loope
lahf
adc
fbld
dec
push
into
lods
adc
fldt
shr
decb
insl
das
push
sbb
inc
int3
cmp
pusha
ret
xchg
fsubrl
inc
push
pop
decl
pop
xlat
or
push
mov
les
test
call
adc
or
int3
sbb
lds
or
pop
insb
adc
pop
mov
rclb
push
ds
hlt
sbb
out
insl
rorl
xor
test
sub
jp
insl
nop
cs
sbb
xor
dec
into
shlb
adc
jne
cli
int
fistps
fisubl
xor
mov
sbb
andb
mov
fistps
or
subl
rolb
popa
jae
jle
push
jp
push
mov
inc
xchg
sbb
mov
inc
push
js
hlt
out
daa
add
dec
shr
rclb
icebp
adc
lea
jne
mov
aam
in
shl
xchg
fwait
dec
pop
xlat
sub
dec
call
mov
inc
cld
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
or
jo
ret
jg
jo
lds
mov
cmp
lcall
mov
sub
or
add
xchg
jnp
and
pop
and
mov
add
loopne
mov
adc
push
xor
pop
iret
ret
mov
cmp
xor
cmp
scas
insb
mov
jmp
iret
out
nop
outsl
cld
daa
movsl
rclb
stc
mov
aas
popa
inc
push
lds
xlat
xor
add
in
sbb
jnp
mov
xor
xchg
das
out
jb
xchg
sub
jmp
jo
jnp
lcall
int
fbstp
aas
clc
adc
adc
sarb
out
xchg
jae
push
add
xchg
repnz
push
add
xchg
lcall
sbb
imul
repnz
rcrl
jb
xchg
dec
shr
shrb
data16
cwtl
or
stc
rolb
push
std
mov
enter
test
pushf
jmp
sub
sbb
mov
add
stos
sbb
loope
movsl
repnz
andl
mov
xchg
data16
push
movsl
mov
call
and
lea
mov
jmp
rorl
sbb
cmc
push
mov
jo
push
out
sbb
mov
pop
cmp
sbb
xor
notb
jns
mov
xchg
add
mov
push
inc
push
rcll
rcrl
pop
sbbb
xor
xchg
into
inc
push
jns
rolb
mov
data16
lahf
mov
inc
nop
inc
test
pop
cwtl
fstpt
mov
sbb
sti
loop
sbb
fisttps
mov
mov
pop
shrb
push
test
fsubp
sbb
jno
mov
stos
in
orl
mov
or
iret
gs
aaa
cmpsb
xchg
push
cmp
pushf
and
inc
incb
xor
sub
outsb
cwtl
xor
add
adc
pop
std
and
mov
mov
mov
js
cmp
add
fs
int
jge
push
fcom
test
cwtl
sahf
movsb
push
push
dec
fwait
jg
cmp
or
iretw
mov
les
pop
sbb
test
cld
pop
fcoms
inc
clc
mov
pushf
sub
jne
cmpsb
fdiv
sbb
call
mov
mov
jnp
xchg
into
bound
mov
imul
inc
inc
xlat
and
fwait
test
lcall
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
push
sub
push
mov
jo
push
cmp
xchg
cmpsb
outsl
outsb
inc
pushf
test
mov
dec
mov
stc
pop
push
sbb
push
jns
adc
arpl
add
or
and
mov
clc
push
xor
lea
pushf
inc
lods
or
cwtl
ljmp
push
and
and
loope
xchg
inc
orb
fwait
test
lcall
pop
ficoml
pop
xchg
push
or
sbb
std
xchg
in
pop
ret
xorl
or
pop
inc
mov
sarl
es
addl
test
stos
or
xor
les
and
ja
mov
loop
add
xor
inc
gs
lods
loopne
insl
cmp
xor
xor
and
adc
js
push
xchg
inc
mov
xor
lret
lods
xor
inc
js
push
push
dec
cs
adc
setge
cwtl
out
test
xchg
roll
inc
repnz
or
lret
inc
xor
nop
sub
mov
dec
cmp
arpl
and
xchg
cmpsl
mov
jg
pop
inc
sbb
lea
out
adc
push
or
test
jnp
imul
push
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
or
mov
jo
outsb
stos
xor
rclb
cli
scas
adc
call
jno
mov
data16
pop
into
pop
sbb
ljmp
or
gs
xchg
gs
inc
rcl
ds
cmpsb
and
ljmp
cmp
fcompl
stos
push
scas
push
push
cmpsb
jl
push
test
jmp
int3
out
lock
bound
cld
push
and
pusha
xchg
stc
xchg
sub
jmp
lds
gs
mov
and
xchg
cmc
dec
sbb
std
mov
in
shll
mov
cmp
inc
add
imul
adc
shlb
dec
das
mov
add
jle
outsl
dec
inc
mov
cmpl
fnstsw
and
add
imul
pop
xchg
mov
dec
call
loope
stos
outsb
pop
xchg
sbb
xlat
and
and
pop
mov
adc
pop
xchg
lahf
push
stos
inc
test
test
enter
xor
rcl
sub
add
sti
pop
outsb
pop
add
faddp
pop
addl
ss
icebp
cltd
scas
cltd
jle
mov
cmpsb
add
add
lret
or
add
gs
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
test
test
scas
jo
ret
jg
jo
das
mov
fisttps
divb
popa
xchg
cmp
test
fistpll
into
mov
mov
jmp
cmp
dec
mov
push
ret
sarl
ret
cmpsl
js
shlb
sbb
dec
es
scas
aad
out
fdiv
stos
mov
and
push
sahf
and
push
adc
sbb
loope
or
or
mov
stc
in
hlt
mov
mull
push
pop
sti
pusha
scas
test
mov
mov
sbb
xor
popa
repnz
arpl
mov
les
cmpsl
sbb
and
sbbl
fs
ret
js
in
push
lods
jg
addr16
cmpsb
mov
popf
daa
es
push
push
scas
pop
mulb
test
dec
repz
sahf
push
mov
push
loopne
stos
adc
mov
out
jp
ss
fstps
dec
mov
mov
ljmp
sub
jo
outsl
add
or
xor
or
dec
mov
xchg
or
mov
sub
xor
lods
arpl
add
and
daa
lea
sub
popf
push
xor
repz
pop
pop
sbb
pop
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
roll
jo
jg
jo
es
adc
xor
lcall
out
in
push
cmp
inc
push
fistl
jecxz
insl
test
or
mov
jg
lret
mov
rcl
sub
jae
jae
pusha
into
imul
jge
jge
aaa
push
pop
popa
bound
adc
inc
jecxz
push
loop
push
ret
hlt
jmp
es
sub
push
loopne
aas
mov
ret
pop
or
xchg
adc
test
imul
je
mov
lds
xor
movsb
pop
lods
sub
nop
xchg
cmpsl
mov
ds
sbb
lcall
or
leave
mov
adc
insb
jb
jmp
cli
sub
sub
sub
pop
test
push
aad
icebp
jp
mov
inc
xchg
or
pop
subb
pop
or
loop
push
fstpl
xor
add
lcall
and
dec
shl
cmp
cmp
and
cmovb
xor
out
xor
fnstcw
xor
js
out
mov
sbb
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
cld
push
lcall
jo
mov
jo
adc
addr16
js
das
jno
movsl
stos
push
sub
fs
std
mov
mov
mov
mov
sbb
jae
iret
xchg
rcrb
dec
cmp
out
and
jg
xchg
popf
std
adc
push
cmp
leave
jnp
mov
sub
iret
xlat
sti
lret
out
mov
repz
test
inc
lea
out
push
out
ret
aas
fistl
fadd
mov
cmp
sub
jle
jb
lret
push
ds
add
out
jae
cmpsl
mov
pushf
push
jl
sub
pop
mov
fiaddl
movsl
movsb
rorb
lods
mov
push
in
or
xor
dec
mov
cmp
lea
loop
sub
call
or
xor
aam
xlat
movsl
and
xchg
fdivrs
scas
prefetch
mov
imul
std
pop
jp
andl
jns
jb,pt
mov
mov
iret
sbb
or
mov
addb
jg
inc
cmpsl
jnp
lret
mov
add
lock
test
pushf
jb
add
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
fucom
cmp
shrb
jo
loope
int
cmpsl
pusha
stc
push
push
movb
mov
inc
fildl
xcrypt-ofb
cmpsl
sub
pop
pop
test
dec
repz
cmp
clc
out
sub
jge
pop
test
and
push
enter
fnstsw
loope
outsb
lock
xchg
test
negl
insb
xchg
movsl
sub
cmp
mov
jbe
cmp
loop
xchg
loop
mov
or
int
push
arpl
hlt
out
fsts
dec
int3
cmpsb
hlt
loope
lret
push
xor
dec
mov
repz
notb
jle
mov
sar
out
rcrl
jns
imul
cmp
mov
mov
sbb
enter
push
call
xchg
popf
sub
jmp
jecxz
ja
dec
imull
mov
mov
std
es
pop
ret
nop
mov
push
dec
xchg
or
xor
sbb
icebp
outsl
adc
lcall
mov
jno
scas
rcll
test
aaa
andl
or
sbb
addl
sub
pop
std
jnp
inc
jp
fwait
and
cmp
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
sub
mov
jg
jo
mov
cmp
test
cmp
shlb
subl
and
dec
add
xor
rclb
bound
push
push
cmp
mov
mov
sub
loop
pop
xor
adc
test
mov
loop
movsb
xor
mov
jp
push
mov
andb
mov
inc
je
lret
cmpsb
stos
push
jb
cwtl
xchg
cmp
pop
jns
add
in
out
loope
mov
lds
mov
xorl
out
and
push
sub
pop
sbb
mov
negb
and
cs
jp
insb
adc
sub
bound
aaa
and
push
xchg
aas
mov
scas
sahf
les
hlt
xor
add
pushf
xchg
pop
mov
enter
dec
ret
mov
push
jbe
sbb
pop
sub
scas
xchg
sbbb
lock
out
in
xor
cmp
notl
rcr
adc
add
or
and
or
push
or
fcmovnu
xchg
cmpsb
shrl
dec
push
jle
test
aam
lahf
jp
cmp
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rolb
pusha
jbe
jo
ret
jg
jo
ljmp
fwait
jbe
test
out
inc
push
cmp
ja
dec
xchg
sub
adc
fisubrs
xor
loopne
lret
and
pop
pushf
loope
jmp
lcall
sbb
out
push
jmp
out
hlt
add
jp
inc
push
xchg
repz
cmpsl
dec
mov
imul
addb
lcall
jb
mov
sbb
test
mov
sub
sub
lods
xor
fs
in
shlb
clc
fistps
sub
xor
push
ljmp
imulb
jg
fdivr
or
incb
sub
daa
adc
stos
sbb
adc
popf
sub
or
pop
cli
cmpl
xchg
xchg
sbb
rcr
push
add
fiadds
stc
dec
out
xchg
repnz
ds
mov
int
pushl
cmp
mov
in
loop
or
aas
adc
mov
out
popa
cmpsl
sbb
pop
test
scas
inc
mov
jmp
bound
scas
std
xchg
ret
sbb
xchg
cmpsb
or
lret
mov
ss
int3
or
inc
clc
jmp
inc
gs
icebp
imul
jp
in
cmp
jo
mov
sub
cld
xlat
sbb
cmp
jle
adc
lods
iret
add
push
loop
test
imul
xchg
lods
jge
adc
inc
jno
sbb
mov
fstpl
movsl
jl
and
fwait
adc
icebp
inc
lahf
sub
push
call
lea
shlb
lahf
push
aas
ficomps
rolb
sub
mov
movsb
cmp
mov
pop
pop
cmp
mov
ja
and
mov
pop
fcmovb
xor
mov
or
xor
xor
pusha
sub
mov
mov
jl
jl
gs
jle
xor
add
ret
arpl
pop
inc
adc
push
xchg
scas
icebp
test
scas
xchg
repz
or
iret
adc
mov
adc
mov
cwtl
insl
sub
sbbb
pop
jno
insl
lock
pushl
sub
mov
xchg
aam
pop
mov
cmp
lods
scas
pushf
and
scas
push
fisttpl
push
jmp
inc
xchg
mov
mov
in
jge
dec
mov
push
ficoml
cmp
leave
xor
xor
mov
xchg
and
sar
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
push
aaa
sub
mov
jo
cmpsl
mov
sbb
dec
mov
mov
pop
pop
inc
inc
fnstcw
inc
and
lods
push
aam
or
fs
icebp
jo
xor
es
pop
pop
arpl
jbe
das
lock
adc
and
xchg
arpl
pop
es
jl
jmp
sbb
daa
je
test
mov
mov
cltd
xlat
jg
jl
rcrl
xor
mov
sbb
mov
mov
test
pop
sbb
imul
je
mov
push
mov
dec
dec
mov
and
xor
cli
in
xchg
push
ret
mov
add
xchg
jge
jg
incl
mov
imul
or
dec
test
jp
lret
push
prefetch
fs
or
lret
test
mov
fsubrl
or
dec
rorb
repz
and
int3
ret
outsb
mov
push
push
scas
gs
ret
cld
fucomi
imul
jp
aam
cltd
movsb
sbb
dec
out
stos
cld
jmp
ret
mov
movsl
arpl
bound
cld
sbb
xor
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
push
xchg
pop
mov
jo
jge
jo
ljmp
mov
lock
popl
and
push
mov
outsb
and
mov
push
cmp
outsl
ret
jne
dec
outsb
shlb
sahf
les
cmc
mov
inc
frstor
lret
adcb
lods
cmp
outsb
inc
ljmp
mov
sbb
jae
loop
popa
jne
or
in
inc
mov
pop
fs
mov
push
fst
or
or
movl
push
sbb
xorl
repz
scas
or
pop
xor
andps
adc
fsubp
mov
dec
mov
push
push
out
and
mov
and
ja
cmp
jns
mov
mov
cmpl
stos
es
fwait
fisubrs
inc
cwtl
sub
inc
add
and
rolb
dec
lods
inc
pop
jecxz
sbb
testb
inc
sahf
fmuls
cmp
rorb
shrb
hlt
and
xchg
sub
repnz
mov
cs
or
mull
push
pop
in
mov
popa
fldt
cs
add
xchg
push
fstps
cmc
mov
jp
insb
test
or
fistpl
mov
addr16
fwait
jne
jb
lea
push
xchg
fs
mov
or
jne
push
dec
push
jb
jge
adc
addb
pop
leave
add
lahf
in
sbb
fsubl
jmp
pushf
sti
mov
jo
adcb
sub
lods
mov
js
hlt
cwtl
in
xor
ljmp
and
scas
jl
dec
jb
pop
xchg
mov
lret
rorl
int
cwtl
aaa
shll
xchg
xchg
insl
mov
push
add
lods
fcompp
loop
pop
pop
sarb
aaa
xchg
cmpsl
ficomps
sbb
pop
ds
xchg
outsl
push
cmp
mov
enter
cmp
mov
lock
cld
je
mov
mov
stos
sbb
aas
outsl
jne
ljmp
cmp
pop
fsubl
cmp
loop
cmc
movsb
xor
and
ret
into
ret
lods
ds
fs
dec
shrb
repz
dec
andb
sub
outsl
idivb
sbb
ss
mov
jl
std
push
negl
fistl
cld
mov
popa
pop
mov
cmpsb
shrb
and
sarl
andl
lds
hlt
dec
and
adc
out
sahf
cltd
add
xchg
jmp
sbb
mov
test
jo
nop
push
movsl
outsb
scas
lret
mov
add
les
push
loop
ret
xor
orl
inc
ja
leave
inc
adc
or
stc
mov
repnz
xchg
mov
pop
push
sbb
shr
lods
inc
out
fldenv
pusha
push
adc
ljmp
ret
movsl
sbb
cld
bound
fiaddl
ljmp
popf
pusha
fsubrs
xor
int3
fcomps
and
sub
scas
imul
or
jle
xchg
sbb
frstor
mov
mov
xor
stos
inc
orl
cli
insl
sbb
fs
ss
inc
lods
mov
mov
jmp
aam
pop
jg
dec
cmp
and
sahf
mov
jg
mov
sbb
jmp
mov
cli
xor
testb
sub
adc
jge
jo
push
jns
adc
out
enter
mov
xor
sar
push
fucomi
sbb
xchg
add
add
xor
dec
sbb
lods
fidivs
mov
mov
insb
adc
aas
adc
mov
pop
mov
neg
mov
cli
dec
idivl
jg
mov
lret
mov
mov
sbb
gs
jno
lahf
adc
daa
stos
xor
rcll
enter
incl
jmp
dec
lds
push
repz
and
call
scas
sub
add
out
scas
and
int
mov
cmp
sub
cmp
add
test
mov
sahf
cmp
cltd
xchg
inc
and
repnz
mov
cmp
push
les
or
cmpsb
popf
dec
cli
cmp
jne
scas
xor
sbb
push
mov
scas
out
insb
cld
dec
add
imul
lods
dec
nop
in
daa
je
and
call
mov
inc
fstl
jmp
js
mov
movsb
ret
push
inc
push
mov
in
cmp
call
jo
das
dec
mull
push
dec
ffreep
inc
dec
mov
test
jg
iret
orl
lods
cmp
lea
ret
sub
xlat
or
sbb
repnz
sbb
dec
and
add
adc
cmp
lcall
ja
aam
dec
movsb
push
sahf
aas
aaa
test
mov
jns
jae
out
in
int3
fistps
das
mov
enter
xor
adc
and
imul
jae
cmp
inc
sbb
dec
dec
and
xchg
and
adc
or
testl
in
sub
add
mov
sub
loopne
scas
pushf
icebp
and
cmpsl
jl
mov
je
mov
addr16
inc
xchg
sbb
jnp
add
push
ja
mov
mov
adc
js
xchg
dec
fwait
push
jo
xchg
clc
cltd
add
insb
arpl
ja
jecxz
nop
nopl
or
mov
adc
std
pusha
enter
add
std
sbb
jmp
lods
add
ljmp
fisubl
ljmp
mov
fistl
int
sbb
cmp
cmp
dec
xor
loope
pop
xlat
cmpsb
les
mov
fldenv
mov
add
idivb
imul
xchg
orl
push
insb
aaa
mov
mov
in
sub
rcrl
push
jnp
and
pop
sbb
roll
lods
inc
insb
xchg
pop
mov
std
out
test
ljmp
stos
push
adc
fsts
sub
mov
dec
mov
and
out
loop
push
movsl
inc
dec
xchg
dec
mov
xchg
scas
ret
test
push
in
jl
leave
vmwrite
ljmp
mov
popf
sti
pop
push
sbb
fcomi
test
adc
mov
lcall
pop
nop
push
inc
jle
fcoms
dec
push
imul
notb
test
jp
out
inc
loope
mov
push
mov
imul
in
or
aaa
jecxz
fldl
sbbl
pop
dec
decl
sub
sbb
ljmp
test
add
add
cmp
add
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
xchg
ds
push
mov
adc
in
cmp
jae
mov
in
pusha
mov
cmp
scas
fnsave
add
and
fisubrl
js
ficomps
xor
xchg
jne
push
int3
adc
popf
sbb
mov
sbb
adc
out
sti
pop
movsl
dec
stos
add
jge
mov
mov
daa
subb
jge
or
ljmp
jno
jmp
mov
popf
sub
pop
add
cmpl
cmpsb
inc
xor
adc
mov
cmp
xchg
or
test
cmpsb
lret
insb
jbe
lods
adc
and
frstor
dec
cmpsl
in
xchg
lock
mov
push
bound
push
sbb
push
jg
mov
pop
dec
into
dec
jo
loope
out
cltd
or
arpl
psraw
cmpsb
cmp
pushf
mov
test
fisttpll
fsubrl
push
out
cmpsl
xor
mov
clc
je
insb
sub
jmp
mov
pusha
adc
inc
and
push
push
insl
mov
push
pop
sub
dec
push
mov
xor
sub
ljmp
push
daa
sub
sub
pop
pop
jae
imul
jns
dec
hlt
ljmp
movsl
sbb
mov
sahf
pop
mov
imul
pop
xor
daa
stos
lods
movsw
inc
pop
push
jl
jp
sahf
rcrb
add
into
or
xchg
fidivrs
add
lahf
xor
movsb
push
or
adc
mov
and
xor
dec
sub
mov
mov
shll
dec
xor
mov
mov
enter
dec
arpl
sbbl
jle
fs
das
pop
inc
jmp
pop
test
sbb
jge
cwtl
or
mov
test
das
lea
xchg
or
ficomps
push
loop
pop
cmpsl
push
mov
and
inc
and
pop
inc
cwtl
es
sbb
xchg
xchg
out
xchg
rcpps
sub
cmpsb
pop
das
aaa
xchg
push
or
push
hlt
stos
pop
loope
adc
loop
dec
jl
xor
cli
clc
mov
shlb
sub
add
out
outsl
fcmovnbe
jg
sahf
or
pusha
jbe
inc
or
xchg
roll
mulb
jbe
filds
in
dec
mov
and
sarl
in
cmp
dec
mov
div
std
fnstsw
pop
movsl
dec
mov
jmp
lcall
fcompl
adc
les
mov
leave
push
flds
div
fistpll
in
stc
or
mov
or
lcall
add
jl
aaa
es
and
or
xchg
icebp
cltd
or
xchg
sti
adc
adc
sahf
insb
sub
popf
insb
sahf
push
xor
addb
mov
shll
out
popa
jo
movsl
pop
mov
mov
out
movsb
sub
add
jmp
lret
cmc
push
sbb
ljmp
push
pop
mov
mov
popf
or
xor
int3
mov
jecxz
shrb
adc
xchg
mov
movsb
fwait
jg
and
pop
push
pop
loop
xor
ljmp
inc
iret
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
push
sub
rcl
xchg
test
stc
ret
cwtl
fs
jnp
cld
push
push
mov
add
add
lahf
scas
out
js
sahf
mov
sbb
cmpsb
dec
sbb
pop
sbb
xchg
std
mov
adc
pop
scas
hlt
cli
push
test
ljmp
pushf
imul
lcall
xor
mov
add
test
or
push
cld
jp
jge
dec
push
dec
pop
cli
add
mov
mov
lea
pop
dec
sbb
xor
in
das
clc
sbb
stc
mov
loope
stos
cmp
lds
push
push
push
inc
aaa
fwait
push
push
xor
pop
aad
movsl
dec
test
loop
scas
fisubs
mov
inc
sub
lods
sbb
cmp
adc
xor
and
or
cmpsb
ret
hlt
jl
pop
pop
into
in
frstpm(287
inc
pop
pop
std
dec
pop
pop
cltd
adc
jbe
les
arpl
xor
aas
dec
out
nop
js
packuswb
add
fdivrl
ja
fsubl
mov
int
arpl
andb
sahf
std
orb
call
ror
ror
fistpll
mov
repz
icebp
in
jecxz
sbb
mov
sahf
or
imul
popf
inc
mov
sub
aam
jl
sbb
mov
xchg
rcl
imul
sub
stos
mov
loope
adc
push
fs
and
jb
call
cmpb
shr
negb
hlt
scas
jae
insl
jp
xor
imul
gs
sbb
push
int3
mov
mov
add
das
lock
cmpsl
jge
iret
or
fwait
decb
repnz
cmp
ds
mov
ss
in
inc
fmulp
in
jp
enter
ljmp
mov
clc
jo
jmp
ret
pop
dec
popa
gs
fnstcw
adc
push
insb
aam
jge
fdivl
fisubl
repnz
int3
and
xlat
mov
mov
jno
dec
fiadds
mov
pop
sub
jle
mov
or
insl
sahf
fmull
sub
lret
lds
inc
push
or
int3
bnd
ljmp
into
test
mov
test
out
sahf
xor
inc
repz
je
leave
xorb
sub
sub
lock
divl
mov
xor
aas
push
adc
dec
mov
mov
inc
or
xor
std
and
icebp
inc
in
fsts
je
pop
arpl
mov
ja
and
mov
fdivl
sbb
stos
test
cmp
lret
xchg
pop
ficoms
add
jge
cli
xchg
jge
mov
lret
pop
push
ss
inc
ds
jg
loop
and
add
pop
push
js
into
jmp
loope
sarl
pusha
mov
push
xlat
repnz
push
movsb
cwtl
retw
and
ss
in
scas
xor
or
je
xchg
lret
imul
fwait
add
repz
sub
push
repnz
insl
movsb
in
out
mov
hlt
mov
std
jnp
outsl
xchg
add
insb
sti
xlat
lods
mov
xchg
xlat
call
int
mov
sbb
mov
add
jmp
outsl
mov
or
imul
movsb
jae
int3
mov
jo
jge
jo
pusha
imul
xchg
scas
outsb
fucomi
rclb
inc
insb
sbb
lds
xorb
in
push
int3
adc
or
cli
inc
test
rorb
mov
aas
jg
xchg
mov
iret
or
sbb
push
mov
test
test
lret
dec
and
rolb
sbb
adc
push
push
pop
lods
stc
or
fs
fsubr
adc
shrl
ljmp
lcall
jmp
mov
cmpsb
int
push
sub
xchg
out
outsl
test
sub
xor
push
ds
jge
mov
in
fwait
sub
push
repz
bound
int3
sub
dec
sub
jne
sar
popa
inc
test
jnp
and
cmp
mov
add
std
cmpb
test
xchg
sahf
fs
pop
je
xor
incl
daa
mov
shll
add
and
add
mov
and
nop
or
aaa
test
sub
inc
or
mov
inc
lahf
stc
fs
scas
xchg
shll
insb
push
hlt
jp
lods
jp
mov
cmp
pop
jle
or
loope
repnz
xor
or
mov
add
or
adc
flds
nop
xchg
fcoms
js
ficoml
ljmp
dec
gs
pop
les
daa
iret
divl
sbb
mov
in
repz
xor
ljmp
dec
mov
ja
loop
jae
inc
cmp
mov
inc
adc
xor
adc
adc
xchg
pop
out
out
orl
dec
cmp
mov
stos
dec
mov
scas
andl
orb
mov
icebp
xchg
repnz
in
je
push
sti
ljmp
and
jle
lahf
std
jmp
inc
mov
xor
xlat
mov
punpcklwd
pop
iret
pop
mov
js
test
into
repnz
out
aam
jbe
in
push
mov
xor
jbe
mov
mov
stos
sub
cmc
addr16
push
repnz
mov
and
inc
dec
push
and
cmp
cmpsl
sub
sub
sarl
and
cmpsb
aas
sahf
lret
dec
push
sbb
ss
jg
mov
mov
pop
in
jae
add
sbbb
and
inc
pop
loope
pop
lods
mov
js
movsb
aas
daa
jp
xchg
xchg
lcall
sbb
sbb
mov
or
inc
sub
jp
imull
dec
add
nop
inc
pop
add
cwtl
sub
jmp
fs
fstl
aaa
enter
movl
sbb
push
std
fdivs
mov
sahf
jle
rorb
icebp
push
sbb
sub
cmp
shlb
lods
test
ret
dec
or
xchg
inc
lahf
fisubrl
sbb
test
dec
aas
add
pop
xchg
imul
outsl
push
nop
push
loope
decl
mov
push
rcrl
ffree
jecxz
push
jae
push
js
out
mov
cmpsb
pop
shrb
popa
aaa
xor
mov
fcomi
xor
ret
or
testb
xchg
sbb
lahf
lock
in
pop
mov
lcall
pop
test
pop
xlat
pop
out
jp
lds
daa
jl
and
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
dec
bts
inc
jo
pop
jge
jo
push
adc
nop
enter
jb
adc
push
cld
filds
mov
push
ret
push
enter
dec
cwtl
xor
andl
in
aas
outsb
jmp
cwtl
push
hlt
pop
push
out
sub
ss
inc
dec
add
sbb
arpl
xchg
gs
mov
or
movsb
negb
fmul
add
ljmp
add
xchg
inc
add
push
pop
fs
add
push
xchg
sbb
xor
dec
cli
aas
cwtl
jg
mov
hlt
mov
jge
push
pop
inc
cltd
mov
push
mov
pop
xchg
jns
cmp
inc
aaa
inc
cmp
sub
iret
mov
fucomp
push
and
fimuls
inc
pop
pop
hlt
jp
pop
mov
mov
jno
scas
mov
out
fcmovne
dec
pop
addb
repz
push
cs
mov
test
sbb
jne
xor
xor
repnz
mov
std
pop
sub
mov
out
lods
jge
mov
lret
mov
dec
sti
cwtl
fdivrs
mov
add
out
xchg
mulb
addr16
stos
push
mov
enter
dec
and
ret
lret
dec
lret
mov
shr
jne
in
aad
or
pop
aaa
insl
pop
xchg
jecxz
aam
mul
mov
or
jo
les
out
and
fcoms
popf
fldcw
jno
cmp
mov
lock
data16
stos
jmp
fldl
lcall
jle
dec
repz
aas
dec
cwtl
and
add
mov
mov
clc
icebp
out
mov
xchg
xor
push
sub
jle
movsl
mov
daa
lcall
jp
out
add
test
cli
add
mov
jmp
iret
outsb
adc
movsb
rcl
mov
cmpsb
daa
xchg
loope
cmc
ret
cltd
ds
shrb
call
push
dec
ja
inc
clc
in
add
jae
out
les
and
cli
rclb
mov
sbb
xor
add
hlt
repz
orl
movsb
sbb
ja
xor
cs
fmuls
das
gs
out
push
addr16
subb
pop
jns
inc
add
in
and
cmp
pop
or
xchg
push
cmp
int
dec
stc
or
sti
sub
sub
loop
mov
test
addb
orb
leave
out
in
xor
and
sbb
push
mov
ss
stos
int3
mov
enter
outsl
aaa
cs
pop
adc
gs
inc
dec
repnz
pop
js
pushf
popa
je
daa
push
je
lret
into
ljmp
loope
xchg
push
mov
mov
jmp
cmp
jp
incb
sarb
data16
add
lahf
out
or
xor
jecxz
mov
inc
cmpsl
mov
and
push
mov
jb
xlat
test
das
faddl
stos
ljmp
add
scas
jge
lods
mov
jmp
and
aas
push
lock
jbe
dec
adc
sahf
fsubs
push
stos
outsb
daa
xor
lret
mov
sahf
push
in
lahf
lods
out
out
cmpsl
push
and
call
cwtl
movsl
and
aam
js
cli
cmc
mov
add
imul
xor
inc
ds
push
dec
aaa
cli
cmc
mov
mov
jbe
mov
test
ljmp
jae
mov
sub
inc
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
inc
jae
pop
pop
xchg
jmp
push
aam
xchg
test
mov
std
jecxz
into
push
lahf
cwtl
outsb
or
push
lcall
jo
pop
cltd
andl
dec
sti
aas
push
in
scas
enter
xrelease
and
iret
dec
cwtl
out
lea
repz
aam
inc
inc
aaa
lret
jle
data16
je
insb
or
cltd
mov
lods
mov
mov
lods
sbb
xchg
repnz
shrl
push
in
add
sti
xchg
int3
xor
cmp
jg
test
sbb
addr16
les
dec
sbb
daa
xchg
stos
aas
jp
mov
cltd
push
cmpsb
or
lea
ret
xchg
lods
inc
outsb
out
in
jo
pop
bound
sub
push
ljmp
jg
lea
into
je
aas
jmp
xchg
out
lcall
pusha
fwait
mov
fwait
jno
inc
filds
and
add
inc
stos
sbb
scas
shlb
in
add
add
cmp
xor
les
sbb
into
xchg
pop
cld
je
scas
sub
scas
outsl
add
xor
lcall
jns
add
popa
pop
call
cmpsl
in
movsb
imul
lret
push
xor
lcall
or
cli
cmpsw
cmpsl
subl
adc
loope
outsb
aaa
jne
inc
repnz
scas
jecxz
mulb
cmpsb
mov
pop
inc
mov
scas
loop
mov
out
and
lds
loopne
stc
mov
and
imul
adc
cld
push
cmp
xor
sbb
xchg
push
or
mulb
inc
add
repz
popf
out
aas
loopne
push
jnp
int3
pushf
pop
loop
xor
sbb
pusha
pushf
mov
and
sbb
jmp
jg
xchg
inc
fstl
xchg
mov
push
sbbl
and
fldt
aas
mov
repz
xor
push
stc
sbb
pop
sbb
fs
out
lds
movsb
push
sub
jg
mov
lock
cmp
sbb
mov
or
jmp
cvtps2pd
pusha
into
out
cmp
push
jle
dec
movsb
sahf
push
jo
mov
mov
out
mov
idiv
mov
dec
sbb
stos
ret
push
ss
loopne
test
mov
fsts
je
pop
data16
sub
inc
lods
rol
int
out
pop
or
iret
jne
sbb
outsb
adc
pop
and
push
sub
int
and
out
xchg
mov
mov
mov
jl
xchg
dec
fsubrp
jl
repnz
sbb
sbb
sahf
mov
sbb
mov
pusha
int
mov
scas
cmp
pop
inc
into
addr16
adc
out
imul
push
sbb
sbb
ljmp
sbb
test
pop
addr16
push
jne
mov
mov
jbe
outsl
dec
enter
push
cmp
insb
cmp
jge
enter
and
data16
cmpsb
add
ret
dec
sbb
insl
mov
movsl
cmp
or
lret
mov
push
lods
in
add
sub
inc
add
mov
xor
xor
mov
bound
test
test
push
imul
xchg
sbb
or
leave
enter
jmp
mov
jno
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
lea
or
pop
jge
jo
or
das
push
in
mov
adc
mov
ret
xchg
push
jmp
fiaddl
or
in
or
faddl
mov
cmp
cld
mov
les
push
mov
adc
sub
add
std
lea
cli
imul
pop
lods
imul
imul
out
add
xor
roll
adc
in
xchg
loop
fmuls
xor
aad
aam
mov
popf
outsl
bound
insl
xchg
popa
in
faddp
dec
pop
jne
stos
add
sti
sub
rolb
adc
pop
pop
scas
stos
or
pop
dec
xor
sbb
xor
imul
shlb
aaa
push
in
pushf
loop
cmc
cmp
cmp
jne
cmpsb
ja
mov
cltd
ud2
lret
pop
sub
mov
fisubrl
lds
mov
test
rorl
adc
jl
push
push
xchg
leave
mov
arpl
aaa
sti
jmp
je
cs
xchg
cmp
mov
push
cltd
shrl
xor
xchg
jg
sub
jae
out
xor
out
mov
jo
scas
sbb
mov
ljmp
add
fwait
adc
arpl
mov
adc
ja
les
cwtl
ljmp
mov
frstor
aad
push
xorl
shrb
std
fists
push
outsl
inc
rcll
imul
push
dec
sbb
pop
test
xor
fiadds
test
in
scas
sbb
daa
leave
mov
sti
aas
repz
push
outsb
das
jne
adc
xchg
or
mov
cmp
cmpsb
xchg
lds
out
push
mov
rorl
inc
push
push
jl
cltd
iret
jb
cltd
cld
cmp
loopne
jo
loopne
xchg
xor
outsl
mov
cmp
scas
pop
cmp
mov
enter
inc
jge
sub
aas
cmp
cli
pusha
movsb
or
mov
jbe
mov
lea
fstl
popf
pop
aas
push
mov
cs
push
stc
adc
inc
push
mov
xor
sahf
jecxz
sbb
pop
jl
lret
in
pop
sub
mov
mov
jbe
push
outsl
push
ja
xchg
ljmp
das
nop
repz
push
jne
inc
pop
or
into
dec
aam
sub
push
pop
jne
fmul
mov
inc
rclb
mov
xchg
test
stc
mov
mov
insl
lea
arpl
cld
sub
mov
loope
and
filds
mov
ljmp
push
dec
movsl
mov
popf
sub
xchg
jp
add
mov
loopne
push
aad
test
mov
leave
dec
mov
andps
adc
lock
or
cld
mov
and
and
xor
out
iret
je
hlt
push
int3
or
jecxz
push
xor
push
xchg
mov
hlt
jle
es
jbe
insb
or
jo
popf
or
xor
inc
ret
fcomps
lcall
jo
mov
mov
inc
mov
sbb
nop
pop
xlat
mov
addr16
sbb
inc
scas
setge
lahf
fimull
in
mov
scas
mov
and
out
jbe
imul
mov
fbstp
stc
push
sub
xchg
stos
mov
dec
inc
iret
pop
ja
loopne
xchg
loope
ja
outsb
cwtl
mov
pusha
or
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
shll
jo
jge
jo
xlat
aam
mov
or
clc
shlb
pop
test
xchg
shlb
dec
jmp
cmpsb
ror
imul
add
mov
enter
pop
std
xor
repnz
out
jnp
cmp
cli
xor
dec
jnp
in
add
pop
fists
stc
pop
stos
cmp
les
in
inc
dec
cmp
subb
sbb
call
scas
out
lret
xor
dec
adc
bound
loopne
sarb
cwtl
mov
sub
loope
ret
mov
push
jl
or
sub
xchg
bound
add
or
xchg
shrb
orb
fmul
push
out
mov
dec
lcall
mov
push
sahf
iret
aaa
push
mov
fnstcw
into
lods
jp
and
aaa
push
pop
cmp
movsb
inc
addr16
pop
mov
xchg
cmpsl
jge
xor
sub
sub
aad
add
leave
mov
cmp
jns
and
jbe
cltd
out
aam
test
cmp
mov
push
adc
into
xchg
and
xchg
mov
fadds
and
cmpsl
jge
cli
dec
cmp
mov
pop
xchg
cld
dec
cmp
xor
lea
ja
xchg
fnstcw
stos
push
aaa
and
sbb
dec
pop
cmp
sahf
idivb
jo
and
or
mov
sub
or
inc
std
jp
std
clc
maskmovq
testl
add
jns
prefetch
or
add
dec
xchg
pop
dec
mov
out
data16
xchg
outsb
xchg
cld
cmp
and
call
or
call
movsl
push
fwait
addr16
fstl
xlat
adc
xchg
mov
gs
mov
ja
sub
icebp
sbb
xor
stos
push
imul
fimull
loope
ja
push
push
out
leave
jbe
pop
call
xchg
cmp
rcll
orl
mov
out
insb
loop
scas
test
cmp
std
mull
addr16
jae
pop
sub
imul
add
cmp
xor
arpl
sbb
push
sbb
and
cli
shrb
add
jmp
sbb
pop
pop
and
stos
and
dec
add
ss
psubusb
rcrb
jno
mov
xor
adc
jo
lret
or
mov
into
cmp
ficoms
call
add
mov
push
clc
pushl
cmp
leave
sub
sub
pushf
lock
mov
push
jge
imulb
lea
inc
cmpb
test
pop
outsl
stos
push
pop
jnp
jg
jp
push
gs
push
out
insb
jae
iret
push
icebp
repz
cmp
mov
dec
jl
or
and
dec
lret
add
ret
xor
add
in
xor
leave
mov
push
in
sub
insb
mov
lret
fsubrl
iret
xor
sahf
stos
ja
test
inc
std
pop
aam
out
divl
rol
xchg
jl
in
xchg
nop
ror
sbbl
arpl
mov
leave
dec
jnp
mov
insb
rcrl
jns
rcr
or
fwait
movsl
xor
pushf
pop
lret
xchg
sub
dec
pop
addr16
fwait
sbb
fs
in
outsb
in
mov
xchg
xchg
ficoml
hlt
insl
lcall
lcall
push
cli
scas
sar
or
xor
sahf
and
cmp
les
jnp
mov
outsl
lcall
lret
mov
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
nop
pop
push
jo
pop
jge
jo
inc
xorb
mov
dec
js
push
jg
enter
dec
sbb
ss
sub
push
push
cmpsb
outsb
fs
mov
rolb
xor
pop
test
xlat
sub
jmp
ja
stos
fisttpl
add
fcmove
lret
mov
test
lds
in
pop
pavgb
push
push
xor
mov
scas
std
rol
cmp
out
popf
push
ret
ljmp
adc
inc
js
pop
xchg
pop
nop
and
in
loope
in
sbb
leave
dec
shrb
mov
fidivs
popf
repz
push
mov
rolb
leave
pop
push
outsw
decl
std
mov
shl
dec
lret
cmp
enter
xchg
pop
pop
push
lds
inc
pop
test
adc
mov
inc
and
cmpl
pop
aaa
mov
pop
int
aas
sbb
dec
imul
mov
int
mov
push
pop
or
mov
lret
loopne
jnp
loopne
mov
int3
andl
imul
mov
ret
mov
mov
imul
adc
xchg
sbb
sub
sub
fcmovne
dec
enter
xor
adc
sbb
ret
mov
sub
je
stos
dec
and
shrl
push
out
pop
mov
out
fcmovnb
sbb
test
mov
stos
xchg
icebp
push
pop
xor
push
movsl
mov
xchg
popa
ret
lret
repnz
out
enter
repz
aas
mov
xor
pop
dec
call
imul
clc
in
aam
adc
pop
inc
add
cli
lds
movsl
add
icebp
lret
cmpsb
sub
rcl
mov
mov
fistpll
push
mov
aad
inc
out
mov
ss
pop
or
fs
aad
in
lret
cli
pop
adc
shrb
push
sbb
repz
std
fildl
mov
shll
push
fwait
adc
mov
xchg
fcomp
push
adc
lcall
inc
sbb
jne
in
mov
add
pop
enter
sub
cmp
push
jb
sub
in
jmp
inc
jg
mov
pushf
fisttpll
pusha
jl
fcoms
and
lcall
add
subb
or
out
stc
in
in
in
inc
arpl
scas
pop
filds
cs
jb
sti
cli
sbb
jae
shll
or
stos
cmpsb
inc
xor
pop
cmp
mov
and
cmpl
push
sahf
lret
pop
testl
sub
pop
and
jg
mov
movsl
stos
or
rcl
or
jmp
xchg
cld
mov
dec
out
cmpb
popa
pop
adc
inc
and
mov
or
adc
lods
faddp
js
jl
mov
jo
jmp
xor
nop
lods
in
push
lods
push
out
out
xorb
outsl
adc
mov
pop
and
sbb
xrelease
cmp
add
iret
test
add
cmc
adc
push
adc
rcll
inc
mov
adc
pop
inc
mov
mov
xchg
dec
xchg
icebp
in
xlat
ss
outsl
popl
pop
ret
cwtl
cmovbe
inc
clc
cs
insb
mov
or
or
not
pop
popf
cmp
dec
mov
sbb
and
push
lods
mov
imul
out
cmp
jl
xor
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
call
pop
jo
mov
jle
add
in
scas
and
add
dec
lds
lahf
or
outsb
jg
push
mov
cmp
lcall
inc
adc
dec
mov
inc
bound
lock
push
or
xchg
add
insb
test
inc
dec
mov
or
pop
cmp
addl
lcall
xchg
pop
jg
repnz
cmp
inc
das
pusha
clc
mov
fisttpll
fsubp
dec
jmp
xchg
mov
cmp
or
ljmp
mov
mov
cmp
mov
aam
shrb
and
leave
hlt
and
outsl
push
mov
dec
lods
fsubs
ffree
pop
out
cmp
sbb
cwtl
push
sub
in
jb
daa
jle
std
loopne
dec
je
rorb
xor
xchg
aas
push
push
mov
or
lods
lcall
sub
sti
insb
pop
jle
xchg
fs
mov
sub
mov
shrb
xor
xchg
mov
lcall
push
jle
dec
dec
xor
mov
out
cmovno
lcall
mov
testl
shlb
sub
xchg
sub
shlb
scas
stos
loope,pn
sbb
fsub
sub
das
mov
mov
ljmp
mov
mov
lods
shlb
pushf
fistpll
aam
add
mov
or
in
repz
int
mov
out
outsl
jo
xlat
sbb
popf
xchg
adc
add
fdivs
ljmp
sub
aaa
cmp
pop
mov
jne
jnp
test
push
stos
les
movsb
arpl
inc
bnd
movsl
in
dec
sbb
push
and
or
ljmp
rcrb
int
inc
lds
xchg
scas
mov
xchg
cli
jge
adcl
xor
mov
lret
das
jae
fldl
roll
insl
lret
cli
outsb
mov
sbb
add
out
xchg
xor
sub
clc
fwait
sbb
test
cmc
xor
sub
adc
cmp
inc
jmp
test
shll
pop
mov
sahf
sbb
mov
mov
mov
inc
adc
lahf
ret
out
repz
xchg
jp
xchg
jl
push
hlt
and
fcmovne
into
iret
mov
int
in
jns
jecxz
loop
cmc
mov
sbb
rcrl
icebp
sahf
test
rolb
and
and
pop
pusha
leave
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
pop
call
jo
mov
xchg
fimuls
mov
sbb
jle
xorl
lds
cs
outsb
add
lods
movsl
sti
xchg
cmc
and
sbb
mov
push
adc
xchg
fiaddl
sbb
mov
push
jne
xlat
push
int3
ds
std
jg
sub
push
stos
repz
aaa
jno
lock
lahf
decb
fwait
iret
pop
loope
ss
faddp
or
jmp
cmp
leave
or
mov
xchg
jae
mov
inc
or
les
mov
addl
jecxz
cmpsl
and
push
dec
stos
fsubrl
cmpb
mov
test
mov
mov
xchg
bound
pop
or
push
fildl
or
xor
mov
cmp
jmp
fs
cmp
jl
inc
xchg
xchg
lods
loop
notb
test
rolb
gs
mov
sti
jns
aad
jle
cmp
loope
aam
pop
clc
push
mov
jp
push
icebp
cmpsb
xchg
pop
pop
inc
push
lret
inc
sbb
cld
mov
dec
dec
clc
int3
mov
mov
inc
or
out
inc
add
imul
mov
bound
jb
adc
cmp
push
mov
cmp
xor
jb
cltd
lock
lcall
add
stc
adc
out
ja
fsubr
mov
xchg
jns
mov
loopne
mov
mov
or
xlat
jae
loopne
es
roll
pop
cmpsb
mov
leave
fldcw
adc
inc
imul
cmpsl
and
or
dec
test
inc
lret
dec
push
sbb
loopne
pop
sbb
cmp
lock
test
push
mov
jecxz
adc
mov
jl
insb
jecxz
ret
imul
aad
pusha
xor
inc
movsb
dec
test
jg
aad
fsubr
inc
shll
adc
int
dec
fisubl
mov
add
ljmp
insb
outsb
add
leave
xchg
mov
push
sbb
pop
sub
sbb
out
jmp
cmpsl
out
pop
call
insb
daa
jl
call
jns
insb
mov
fistps
enter
pop
or
pop
mov
push
out
sbb
and
cmp
dec
mov
mov
cmp
jns
in
jle
sarb
sub
lea
push
pop
outsb
cmp
fld
mov
sub
mov
pushf
outsb
jbe
popa
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
fsts
pop
jo
mov
das
cld
imull
push
push
xchg
mov
push
jno
push
jae
in
es
mov
mov
xor
lock
int3
movsb
and
icebp
xchg
pop
jne
out
mov
mov
movsl
mov
inc
ret
and
sub
jns
inc
fildl
orl
pop
jle
xor
icebp
pop
push
jne
inc
sbb
inc
out
sbb
rcrb
cltd
mov
inc
movsl
insb
and
xor
aas
jbe
push
push
in
out
mov
notb
mov
push
inc
mov
dec
adc
cmp
cmp
xchg
adc
and
js
call
mov
shlb
sub
add
out
cmpsb
add
jnp
inc
pusha
fwait
xchg
pop
loop
ss
or
lret
and
aaa
xor
jbe
pop
pusha
push
stos
and
ja
mov
nop
mov
push
stos
dec
sbb
inc
scas
xchg
push
push
stc
lcall
inc
inc
push
and
add
push
adc
leave
lods
xchg
sub
mov
jns
jnp
ljmp
xchg
adc
jae
cmp
sbb
push
sub
or
loopne
cmp
sub
push
sbb
xorb
stos
lea
cs
das
mov
mov
xor
jmp
sbb
push
and
in
loope
adcb
js
jp
cmp
sbb
into
es
or
loope
sub
cld
xchg
dec
dec
pop
insl
inc
inc
jno
or
fnstenv
sub
push
push
fs
or
sbb
inc
inc
sbb
lret
sub
mov
jle
popf
data16
mov
push
xlat
cmpsl
clc
sbb
lahf
stos
pop
add
pop
push
aas
sar
out
in
pop
pusha
frstor
add
cmp
mov
sub
sub
aas
and
lcall
gs
sub
xlat
sbb
les
addr16
pop
jnp
inc
push
inc
cmp
cmc
xchg
push
int
fxch
mov
jecxz
sub
jmp
inc
push
icebp
jle
push
repnz
mov
popa
jecxz
jl
in
test
sti
jne
inc
lcall
dec
and
sub
xchg
jbe
lock
push
sbb
pop
sub
sbb
jle
addb
test
clc
jg
mov
bound
inc
dec
dec
mov
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
inc
loop
adc
jo
jle
jo
inc
rcrl
xchg
jecxz
pop
gs
xor
add
push
pop
push
dec
inc
orl
or
sbb
mov
shrl
lock
int
aad
outsl
add
arpl
fxch
rclb
push
jno
pop
add
test
cmp
data16
popa
shrb
stos
repnz
cli
dec
xchg
dec
les
or
movsb
divl
sbb
xchg
xchg
ficoml
adc
cmp
xchg
jle
sahf
push
mov
and
out
adc
jo
dec
dec
pop
js
in
mov
subl
inc
xor
sbb
jmp
fildll
mov
js
andb
adc
loopne
fisubrl
outsl
dec
out
data16
adcl
test
sub
cld
cld
mov
cmp
jbe
push
xchg
xor
adc
imul
mov
int3
xchg
push
ret
sub
out
mov
sub
inc
data16
mov
mov
sub
mov
pusha
mov
xchg
stos
sbb
or
inc
jp
pop
aam
mov
dec
add
pusha
popa
inc
jle
lcall
leave
call
call
dec
std
push
repnz
adc
push
cltd
cmpsl
lret
dec
jge
pop
cli
testb
aad
add
push
dec
jmp
sub
mov
xchg
fs
sbb
inc
pusha
scas
cmp
loop
movsl
fcoml
ficomps
dec
dec
sub
mov
je
repz
sub
out
sbb
sub
int3
or
and
incl
shll
stc
xchg
fsubl
scas
xchg
jno
cwtl
popa
insl
aaa
cmpsb
adc
mov
pop
mov
in
arpl
mov
sub
add
push
cmpsb
out
jle
pop
mov
xor
data16
add
lahf
outsl
adc
mov
xchg
loopne
pop
mov
ret
loope
adc
jp
mov
mov
jne
insb
lret
mov
loop
pushf
dec
xor
pushf
fsubrs
pop
out
push
push
sar
imul
pop
xchg
push
adc
in
mov
movsl
test
add
cmp
xchg
ror
push
inc
adcl
xor
repz
or
sub
sbb
mov
pop
out
sub
dec
xor
mov
mov
pop
mov
ficoml
icebp
mov
out
inc
test
inc
repnz
clc
cmp
aaa
mov
in
push
stc
loopne
sub
out
adc
test
push
add
sbb
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
inc
jne
sahf
and
daa
mov
mov
and
mov
xchg
shrb
fidivs
push
rcll
mov
loope
lret
test
jp
fs
jb
and
js
cmc
in
jo
mov
fsubrl
bound
in
movsb
adc
xor
loop
fldt
xor
and
das
pop
inc
jno
pop
das
adc
xorl
mov
out
jp
and
js
stos
loope
push
cmp
push
cmp
pop
iret
mov
inc
push
pop
cmp
push
jb
mul
pop
scas
mov
jecxz
pushl
test
loop
jg
xor
fsubl
and
fucomip
loope
into
mov
rorl
sub
imul
sub
dec
and
test
stc
cwtl
sbb
sbb
das
ficoml
in
sahf
std
xchg
push
test
jno
icebp
xor
in
nop
lea
ficompl
push
jne
pop
pop
dec
bound
dec
sub
lock
out
push
cmpsb
jle
xor
dec
cmp
mov
mov
fmuls
adc
push
xchg
push
pop
mov
mov
enter
push
cmpsb
inc
xor
test
in
ret
aam
dec
mov
xchg
xchg
out
add
jge
mov
pop
mov
xlat
jp
push
inc
dec
and
xor
pop
imul
dec
test
cmp
inc
cld
leave
inc
cmp
rorb
jge
out
dec
jnp
cs
adc
xor
mov
push
pushfw
cmp
popf
test
or
xor
jno
insl
adc
sub
sbb
inc
and
pop
xchg
xor
push
pop
dec
call
mov
mov
mov
or
stc
incl
sbb
mov
xlat
and
mov
cmpsb
outsb
std
and
push
pop
in
pop
movsb
and
xor
pop
jg
push
mov
mov
mov
repnz
in
sbb
mov
repz
mov
lock
stos
cmp
sbb
ror
jno
dec
xor
inc
pop
je
sub
lds
push
rorb
xchg
scas
stos
xor
shr
dec
pop
mov
cmpsl
cmp
xor
jne
jo
sahf
hlt
add
or
mov
jmp
orb
repz
or
mov
jp
adc
cmpsl
xchg
stos
xchg
addb
mov
ret
mov
dec
mov
jne
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
lahf
xlat
das
xor
jle
jo
test
fdivp
sub
not
sbb
dec
xchg
cmp
lods
jno
inc
xchg
sbbl
mov
cmp
push
adc
jnp
mov
xchg
pop
lds
loope
mov
repnz
dec
imull
push
sti
loopne
add
mov
mov
pop
dec
es
jmp
xchg
or
inc
mov
punpckhdq
test
loope
insb
xor
xor
mov
or
insl
lret
pop
ss
mull
in
loop
adc
aas
sub
das
insl
jne
cltd
sub
adc
xchg
pop
nop
dec
sbb
dec
pushf
scas
sub
lret
jmp
xchg
out
imul
pusha
and
and
cltd
jno
or
pop
or
js
fidivl
xor
stc
pop
shlb
mov
jp
inc
push
or
call
lods
sub
push
fwait
clc
out
cmp
mov
add
fdivl
sbb
arpl
sti
lock
push
jg
jno
jns
cwtl
lds
fisttps
dec
lods
sbb
inc
xchg
xchg
fidivs
sahf
xor
dec
cmp
in
ss
xchg
pop
mov
xchg
inc
scas
ljmp
scas
mov
scas
loop
xchg
fstpt
pushf
push
out
mov
mov
out
sub
jne
mov
or
pop
stc
mov
sbb
pop
in
mov
incb
sbb
popa
sahf
inc
mov
xorl
rcrl
cmp
xor
push
bound
test
mov
ficoml
xchg
lods
mov
fiaddl
jnp
mov
add
dec
add
sahf
andb
pop
fisubrs
push
outsl
or
mov
mov
aas
loope
test
xchg
inc
inc
out
fldenv
mov
shlb
repnz
or
lcall
push
dec
stos
jo
dec
mov
mov
or
push
pop
mov
lret
in
arpl
in
fists
cmpsl
push
in
mov
or
jge
cmp
sarl
loope
xor
jo
dec
test
and
pop
cmp
dec
fidivrs
orl
dec
jge
shrb
xchg
sbb
jmp
shrl
mov
das
stc
stos
push
cmpb
inc
pop
js
pop
lock
aas
adc
popa
or
cmp
inc
sbb
loope
mov
out
xchg
rorl
jne
in
inc
test
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
std
in
outsb
jo
mov
add
add
push
jmp
repz
outsl
xchg
or
pop
movsl
scas
pop
adc
cwtl
dec
fcmovne
popf
or
std
sub
sub
mov
adc
mov
jmp
inc
xchg
mov
sbb
ret
xor
mov
sbb
push
pop
lahf
pop
inc
scas
popl
pushf
inc
leave
mov
or
dec
add
cmpsb
cmp
lret
insb
imul
jbe
lods
cmp
fldl
mov
push
xor
mov
push
jle
lea
mov
cmp
jbe
ljmp
arpl
dec
xchg
cld
icebp
in
dec
in
jae
mov
pop
mov
mov
adc
push
int3
cwtl
or
aad
sub
icebp
test
imul
push
pop
jp
mov
ficoml
mov
dec
dec
data16
inc
scas
je
scas
lods
sar
js
popa
arpl
mov
sub
out
arpl
push
sub
or
dec
push
jp
adc
cli
push
jb
popf
mov
push
mov
cmpsl
shr
mov
sbb
and
xor
sbb
fwait
lea
bound
mov
mov
sub
xchg
test
fwait
popa
cld
xor
fwait
push
pushf
lds
test
imul
iret
add
push
inc
ljmp
jl
cwtl
dec
movsb
lds
int
inc
loop
lahf
in
or
add
divl
out
cmpb
add
andl
or
lds
push
jne
ds
lods
pop
jmp
jmp
cmp
cmp
cld
dec
addr16
mov
loop
mov
and
aas
aas
jnp
add
xlat
sub
test
cmc
jae
int3
pop
loope
imul
mov
xchg
test
ljmp
dec
stos
cmp
or
mov
push
mov
xchg
stos
cmp
sbb
xchg
pop
add
jle
adc
popa
rclb
xchg
ds
aaa
aas
je
pop
mov
cmp
xor
in
sahf
negl
push
lea
sbb
aad
pop
mov
mov
jg
aas
pop
jbe
sub
cmp
xchg
out
std
gs
loope
fbld
push
pusha
or
lret
or
jl
cmp
cwtl
pop
adc
mov
in
in
push
in
sbbl
js
lock
lret
or
scas
popf
push
in
cmp
jne
pushl
jmp
and
lods
shrb
in
mov
pop
lock
jle
jo
or
fucomi
mov
pop
loop
repz
hlt
ret
mov
sarb
out
js
jge
adc
rcll
adc
sbbb
push
shl
cmpsl
lahf
mov
jge
cltd
jo
inc
in
jbe
xor
scas
push
repnz
jmp
loopne
lock
shlb
xor
mov
cmp
sbb
fbstp
sbb
repnz
xchg
mov
cmpsl
loopne
cs
bound
push
adc
push
insb
mov
iret
fwait
int
mov
push
add
pushf
sahf
nop
cltd
fwait
push
aas
lock
and
mov
test
cmp
ljmp
sbb
xchg
mov
pop
mov
outsl
push
sbb
mov
aad
and
add
inc
loope
outsb
sbb
inc
rcrl
cs
js
nop
mov
mov
shrl
repz
lcall
inc
pop
leave
mov
lret
cltd
int
lds
jecxz
fimuls
xlat
push
jno
movsl
dec
addb
outsl
mov
shlb
fisttpl
gs
je
lds
adc
std
sti
call
sub
xchg
dec
les
adc
inc
fbld
xor
sbb
enter
scas
xor
daa
sbbb
cmc
lds
mov
fisubs
ret
mov
mulb
mov
call
fisubl
or
shrl
sbb
sub
nop
es
test
enter
out
lock
push
push
pop
xchg
inc
popa
dec
pop
sti
in
pop
aam
mov
add
faddl
cltd
sbb
or
je
cmp
nop
pop
pop
adc
dec
inc
cmpsb
es
sub
pop
cmp
pop
dec
push
aas
sbb
addr16
bound
xlat
andl
popa
push
pop
popa
xchg
inc
enter
push
adc
icebp
xchg
cltd
data16
mov
jmp
das
in
ljmp
test
mov
sarb
cltd
clc
fbstp
lds
outsl
dec
and
mov
mov
xor
push
imul
xchg
sub
cmp
inc
xchg
cld
xchg
popf
jl
stos
aad
adc
std
push
jo
shl
mov
jl
cmp
sar
outsl
sub
jae
dec
imul
mov
aam
cmpsb
jmp
call
aam
call
mov
and
jmp
mov
call
jmp
pop
insl
and
xor
insl
jp
or
pop
test
jo
jle
jo
or
xchg
insb
not
sbb
adc
xchg
fistpll
and
scas
sti
shrl
sub
je
sub
lret
nop
push
imul
hlt
aam
std
mov
daa
cs
and
int
loope
gs
mov
cld
ret
push
rorl
pop
fstps
int
or
sahf
fdivs
fisubrs
arpl
lret
inc
sti
sub
sbb
shll
icebp
leavew
or
testb
mov
test
adc
xchg
roll
out
cmpsb
ds
xchg
imul
jb
jmp
push
ljmp
dec
enter
xor
and
mov
je
out
push
cwtl
push
pop
in
repz
or
pop
roll
in
add
insl
stos
push
jae
cmp
xor
add
aam
testl
dec
shl
je
ja
mov
mov
pushf
sub
or
std
add
inc
aam
inc
adcl
int3
lods
imul
cmp
lcall
mov
jp
out
cmp
fnstenv
sub
lods
jle
pop
dec
nop
mov
mov
sti
lahf
inc
sub
dec
jno
loopne
movsl
cli
and
xchg
sarb
iret
mov
add
pop
test
sbb
jmp
add
adc
push
data16
add
mov
pop
lahf
lock
xchg
xor
hlt
mull
sub
sub
mov
cltd
xlat
push
push
cmp
aam
jecxz
repnz
hlt
jg
test
repz
fcomip
jp
mov
adc
out
hlt
xor
mov
and
xor
loope
pop
fmull
sub
outsl
push
cli
leave
dec
sub
mov
mov
fs
imul
dec
mov
push
int3
cltd
pop
ljmp
inc
mov
out
mov
outsl
dec
test
mov
psllq
cmpl
mov
dec
out
dec
sahf
sbb
pop
shrb
mov
xorl
xchg
cmovg
hlt
adc
or
and
in
xor
in
inc
clc
andl
push
xchg
ljmp
adc
pop
ljmp
lret
aad
ljmp
inc
ds
gs
inc
aaa
fstl
cmp
push
shrl
xchg
insb
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
out
sub
jo
jle
jo
int3
imul
out
adc
add
jp
adc
arpl
xor
lret
dec
lret
nop
jp
repnz
jo
stos
mov
push
data16
xlat
or
xchg
xor
push
mov
lock
scas
jle
or
ret
daa
push
push
pop
pop
pop
jg
mov
cmp
push
lods
push
data16
mov
or
shl
push
jb
cmpsb
dec
stos
aam
out
dec
inc
mov
in
inc
and
xchg
test
mov
adc
nop
or
mov
sub
cmp
push
cltd
lock
bound
dec
xor
or
subb
push
aaa
jnp
jnp
hlt
incb
rcrl
add
mov
xor
jl
xchg
enter
fadd
cmpsl
xchg
push
inc
fsubs
pop
or
or
or
cltd
sbbl
out
jae
popa
out
movsl
ret
inc
stos
mov
loop
inc
mov
test
push
pusha
add
sbb
sbb
scas
sub
pop
push
xlat
out
ret
mov
stc
xchg
lcall
jo
mov
loope
and
and
push
loop
xchg
mov
out
pop
in
sti
inc
push
mov
ror
sub
ljmp
xchg
inc
add
and
mov
mov
jmp
popf
push
into
mov
pop
xchg
call
adc
cli
xchg
pushf
stos
xor
mov
mov
daa
outsl
adc
cmp
mov
std
sbb
or
or
aas
jecxz
mulb
jge
sbb
sbb
pop
pop
cmp
rol
dec
imull
pop
aaa
fwait
jl
fnstsw
or
push
jae
js
loop
pusha
cmpsl
mov
fidivrl
lods
shr
push
pop
or
mov
ss
dec
call
adc
enter
test
add
cmc
inc
adc
push
sub
shll
and
out
xchg
enter
loopne
or
imul
sti
pmaxub
addr16
jg
mov
pop
or
insw
mov
test
outsb
fidivrs
pop
mov
scas
jbe
movsb
pushf
inc
xchg
fisubl
mov
aad
dec
mov
lcall
lcall
xchg
mov
pop
xor
fildl
jno
xchg
mov
mov
mov
aam
scas
dec
push
pop
cs
jb
out
rorb
repnz
and
lret
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
sti
in
cli
xorb
mov
addr16
xchg
ljmp
cmp
xchg
xchg
pop
mov
dec
cmpsl
and
into
in
popf
rcrb
mov
js
dec
bound
pop
mov
push
das
es
nop
sbb
jl
imul
sbb
push
cmp
adc
xchg
rorl
leave
sub
imull
jmp
mov
sbb
call
out
insl
lods
mov
test
insl
int
fwait
int
test
push
or
scas
jl
mov
jb
lds
in
pop
inc
xor
xchg
adc
pop
scas
sahf
cmpsb
dec
mov
mov
lods
outsl
push
push
push
test
inc
jno
pop
push
dec
imull
xchg
lret
cmp
mov
out
movsb
je
jae
jecxz
loope
mov
mov
dec
push
and
incb
repnz
and
fidivrs
mov
sarl
imul
push
xor
or
xor
stc
push
sbb
cld
add
mov
outsl
or
lods
fldenv
int
xchg
pop
iret
lret
frstor
sub
sbb
gs
mov
mov
aad
dec
push
jns
or
inc
fadd
pop
push
inc
mov
das
pop
cmp
dec
dec
xchg
testl
aas
inc
and
mov
xor
pushf
repz
or
push
lret
movsl
mov
mov
sub
sbb
mov
popf
add
ljmp
mov
dec
rcl
and
inc
push
sub
cmc
add
popf
sub
imul
jns
je
mov
repnz
test
sub
pop
jbe
pop
cmp
xchg
sbb
or
inc
mov
mov
insb
sub
or
lods
ja
arpl
cmpsb
clc
jns
jmp
roll
loopne
pop
push
outsb
int3
add
mov
pop
xor
cmp
imul
pop
int
jo
inc
cmpsb
das
add
fs
adc
dec
stos
xchg
leave
in
xchg
jns
mov
fcomi
mov
dec
stos
jge
ljmp
jecxz
push
ja
xlat
dec
into
add
fldenv
cmp
imul
mov
movsb
andb
mov
scas
iret
jb
inc
lods
ss
dec
js
or
or
lcall
lods
mov
sahf
jg
fildll
dec
pop
jbe
inc
pop
sub
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
xchg
jo
jo
jle
jo
mov
pop
lock
sahf
sbb
xchg
pusha
xchg
aam
mov
repnz
or
inc
xor
movsb
push
pop
das
fs
adc
aam
loopne
inc
ljmp
mov
mov
and
loopne
inc
subl
xorl
mov
add
arpl
subb
mov
fbld
sbb
mov
push
and
cld
sbb
cli
popa
punpcklwd
push
repnz
push
gs
xor
push
daa
dec
mov
add
insb
sbb
clc
cmp
das
adc
in
roll
add
divb
das
jne
pop
test
mov
dec
int3
mov
das
shlb
add
mov
shlb
test
push
addr16
cmp
pop
lahf
cmp
mov
iret
rcrb
sti
lahf
clc
mov
adc
add
adc
int
sbb
mov
mov
cmp
repnz
imul
push
test
mov
int
mov
loop
and
add
jnp
xchg
stc
insl
sbb
push
or
inc
mov
out
int
and
adc
jecxz
mov
ror
adc
or
jae
icebp
pop
sbb
shlb
ret
jmp
jne
cmpsb
dec
xchg
push
aas
sbb
out
fisubrl
xor
dec
adc
xorb
lods
or
sub
jo
and
cmp
in
push
cmp
cmp
sub
lahf
js
dec
dec
mov
and
cmp
jecxz
mov
push
mov
add
pop
stos
sti
arpl
lret
jns
adc
xor
pop
push
add
mov
nop
push
push
test
jmp
push
das
cmp
pushf
int3
testb
mov
jp
fiadds
lahf
lret
push
lods
jecxz
sub
cmp
sbb
jae
push
push
dec
test
filds
fcomps
js
sarb
ret
inc
sbb
dec
push
into
push
cmc
jmp
and
das
mov
lret
mov
pop
test
std
inc
inc
jge
outsb
popf
aad
pop
mov
pop
mov
sar
or
xchg
mov
loopne
mov
fwait
sbb
xchg
mov
and
adc
je
ja
stos
cmp
add
jge
push
ret
sub
lcall
sbb
hlt
mov
mov
xor
jmp
add
mov
jb
jge
jge
hlt
add
adc
jo
jle
jo
xor
mul
gs
and
and
or
lods
jmp
fwait
std
mov
mov
or
sub
sti
addr16
ja
mov
repnz
jo
or
mov
push
mov
mov
jge
andl
mov
gs
pop
movsb
pop
ja
aas
roll
icebp
sub
adc
stc
mov
loop
add
je
push
mov
adc
faddl
pop
lock
jno
testb
and
jb
jbe
add
xchg
cmp
xchg
sbb
in
or
data16
push
pop
push
icebp
in
inc
aas
test
xor
fwait
mov
int
leave
jae
bound
or
loopne
fs
xchg
sbb
xor
mov
inc
mov
and
fimuls
cltd
mov
add
adc
jecxz
adc
push
test
stos
fstps
xor
out
clc
push
pop
gs
scas
sbb
out
adc
std
push
or
push
mov
bound
mov
test
das
cli
adc
push
sbb
mov
push
and
leave
leave
lock
push
fmulp
adc
push
repnz
imul
cli
fimuls
add
xlat
adc
dec
test
js
xchg
test
stc
fwait
call
or
push
or
mov
sbb
cltd
out
cmp
stos
sbb
sbb
or
pop
xlat
mov
fstpt
push
cmc
ss
stos
sbb
aas
cmp
mov
cmp
fiadds
or
popf
hlt
dec
jmp
leave
cmp
mov
mov
mov
gs
xor
cmpsl
shrd
lcall
cs
std
mov
cmp
xchg
xor
das
sub
sti
sbb
call
xchg
pop
jb
test
jmp
lods
push
and
daa
jo
and
xor
dec
fisttpl
xor
pusha
cs
inc
jae
aaa
adc
or
cmp
cmp
jl
ret
adc
dec
insb
shld
pop
faddp
in
or
adc
mov
mov
jecxz
ds
sub
adcl
add
cld
mov
add
fisubl
loopne
add
pop
fs
movsl
movsb
ljmp
cwtl
je
adc
cmp
cmp
pop
and
jecxz
icebp
lahf
dec
lret
push
sbb
lret
fisubrs
loope
repnz
mov
dec
or
sbb
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
adc
out
pop
jnp
jo
jle
jo
mul
jae
xor
or
dec
inc
loopne
pusha
test
mov
mov
sti
or
cmp
std
adc
int
jge
jnp
incl
popa
mov
pop
mov
inc
mov
rcll
push
or
mov
jmp
dec
xor
xorb
imul
int
lahf
iret
loop
xchg
sub
lcall
or
xchg
xor
add
push
out
outsb
xlat
push
pop
xchg
in
fs
and
jno
mov
stc
repnz
sub
mov
nop
and
pop
dec
push
lock
fsubrl
mov
test
shll
clc
sahf
cmp
adc
shrl
cmp
popa
xor
jns
sahf
inc
stos
mov
iret
rorb
push
ss
clc
cmp
xchg
mov
xlat
cli
xchg
fst
lret
out
sub
les
nop
mov
lds
daa
fisttps
adc
pop
or
or
loope
xor
cmp
jo
or
cmp
cmp
cmp
call
xchg
mov
in
and
add
jecxz
xchg
push
outsl
ss
data16
xchg
jge
push
enter
js
jle
mov
or
ja
xchg
lods
mov
and
and
lock
push
cmp
cmp
mov
cmp
enter
hlt
mov
mov
lds
lods
jle
pop
lret
js
mov
adc
js
pop
xchg
xchg
scas
aaa
push
sbb
dec
xor
dec
or
push
push
sub
sub
cmp
cld
ret
xchg
sbb
xchg
pop
mov
cmp
out
fdivrs
mov
xor
push
xchg
xchg
mov
dec
cmp
jp
mov
jns
and
insl
xor
push
hlt
out
sbb
xor
scas
cmp
and
orb
out
dec
jp
out
test
inc
or
les
lods
ret
adc
jl
nop
push
mov
ljmp
mov
imul
andl
bound
ret
pop
outsl
mov
cmpsb
mov
add
leave
cmc
adc
lods
dec
popf
popf
stc
adc
in
dec
fisubl
mov
daa
ljmp
and
xor
push
mov
mov
ja
inc
out
outsb
addb
sysret
push
pop
jne
xchg
xchg
testl
push
std
lret
in
xchg
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
jp
sub
mov
push
pop
xchg
ret
adc
mov
int3
xor
inc
hlt
test
pop
shll
repz
inc
repz
mov
jp
shrb
xchg
mov
subl
jne
bound
and
mov
call
iret
je
push
xchg
mov
mov
pop
movsl
mov
lods
jecxz
mov
pop
in
xor
out
mov
sub
mov
fdivrl
fwait
jae
sub
dec
shlb
xchg
dec
or
pusha
adc
bound
daa
shll
outsb
dec
je
orl
mov
fisubrs
sub
pop
dec
bound
cmp
std
dec
pusha
in
cmp
inc
jae
and
jmp
mov
jle
pushf
mov
out
add
stc
sub
or
adc
mov
call
adc
push
inc
xchg
xor
xchg
and
ss
rol
into
rorb
lods
in
loop
xor
ljmp
orl
xorb
andl
daa
pop
nop
adc
sti
aas
jns
in
stos
sbb
out
push
inc
push
mov
sbb
adc
popw
sub
dec
sub
xchg
inc
fisubs
xor
mov
or
sub
stc
add
push
push
ljmp
push
leave
scas
fdivs
push
ss
cltd
xchg
rorb
shl
imull
daa
vptest
or
movsl
cmp
or
push
insb
pop
rcrl
push
xchg
and
data16
sti
xlat
outsb
ret
cltd
popa
cld
jns
pop
mov
imul
dec
xor
inc
jns
shrl
adc
int3
and
sbb
popa
xor
pop
rcrl
jecxz
mov
fbld
xchg
mov
mov
or
arpl
inc
loopne
out
in
mov
mov
incb
lods
aam
add
sub
aaa
lahf
rcll
dec
sti
cmp
xchg
sbb
lahf
dec
mov
or
cltd
es
jle
xor
sbb
xchg
or
sbb
pop
sbb
adc
in
adc
and
sti
cmp
jae
shll
add
add
dec
sub
mov
sub
mov
shrb
std
cmp
ljmp
std
filds
push
cmp
test
xlat
jge
pop
insl
mov
mov
sbb
adcl
jge
mov
jge
pop
shlb
adc
fwait
mov
fmull
or
xor
mov
jmp
mov
jne
pop
push
fdecstp
and
jo
jle
jo
mov
aam
adc
inc
loopne
dec
ja
and
adc
mov
add
mov
imul
nop
cmp
pop
cmp
add
imul
pop
cmp
jno
cli
push
xchg
mov
mov
mov
cmc
adc
mov
les
sbb
scas
jnp
insb
sub
cmpsb
add
push
xchg
cs
adc
icebp
cmp
pop
sahf
adcb
lock
xchg
popf
imul
outsl
sub
jbe
insb
cld
popa
lock
xorl
inc
jp
xor
test
popf
in
insb
repz
dec
lret
and
scas
sub
jmp
jmp
pop
in
inc
rol
lret
mov
and
cmp
repnz
aad
mov
enter
dec
lods
xchg
int
pop
in
iret
mov
mov
or
or
aaa
jo
test
pop
stos
stos
sbb
sbb
cmp
cwtl
inc
lds
out
mov
jle
cmp
add
in
cs
scas
cltd
adc
int
jne
out
xchg
dec
jecxz
pop
dec
xchg
push
movsb
nop
fisttpll
movsl
jo
data16
sub
popa
pop
rol
pop
js
loope
fdivr
cmc
or
pushf
test
sub
in
adc
arpl
imul
fbstp
or
inc
pusha
repnz
enter
lahf
mov
shrb
outsb
jl
aam
push
pop
cmpl
test
popa
scas
das
xchg
lods
clc
repz
mov
test
leave
outsl
aad
inc
pop
push
fisubrs
pop
cltd
sbbb
sub
mov
push
pop
mov
jae
pushf
mov
xchg
clc
lods
out
adc
and
mov
fs
jl
jno
loopne
insb
movsb
xchg
std
hlt
loopne
push
rorl
jge
jae
pop
push
mov
jge
daa
pop
push
dec
lea
inc
add
out
sub
xor
repnz
jl
inc
dec
lds
push
je
xchg
icebp
enter
psubsw
mov
cmp
xor
push
mov
and
sub
out
mov
lea
stos
stos
pusha
push
xchg
mov
repnz
xchg
lahf
mov
hlt
daa
repnz
out
or
mov
mov
fdivrs
mov
shrb
dec
inc
bound
push
jae
stos
xlat
aam
divl
sub
adc
xor
lea
push
pop
out
or
test
xchg
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
jo
jle
jo
scas
xchg
lods
cmp
adc
cli
frstor
cwtl
pop
mov
sbb
arpl
add
lock
stos
mov
jge
sbb
adc
rcrb
xor
out
jno
mov
das
mov
mov
ficoml
fistps
cmpsb
aad
pop
add
add
and
push
or
nop
test
scas
cmp
sub
stc
adc
inc
jecxz
ret
mov
rorl
and
je
stos
add
mov
sbb
sub
mov
sbb
std
and
out
xor
les
sbb
ret
xchg
pop
dec
dec
xorb
sti
add
test
push
lods
push
or
out
fld
flds
jo
sahf
stos
mov
mov
pop
sahf
jbe
push
jmp
fistl
aas
dec
mov
retw
mov
cmp
add
loop
outsl
xchg
popf
jl
or
lods
outsb
inc
cmpb
cmp
inc
mov
sub
clc
pop
loope
pop
imul
push
mov
test
mov
imul
int
or
lret
push
jb
sbb
jp
ja
dec
add
mov
pop
and
cltd
out
push
or
sub
lock
movsb
sbb
ret
lret
fstl
das
pop
sahf
scas
mov
into
lods
xchg
cmpsl
int3
in
jle
popf
or
and
bnd
call
movsl
mov
or
out
jge
test
sub
pop
int3
pusha
adc
pop
fiaddl
scas
mov
data16
jl
roll
pushf
sub
jae,pn
sbb
or
pop
jno
in
rcll
sbb
cs
cmp
idivl
sbb
sub
adc
push
sbbl
rclb
inc
bound
push
aaa
idivb
adc
loop
fcomi
add
das
xor
das
pushf
rcrl
xchg
or
fistps
xchg
and
cmp
xor
imul
lods
stos
andl
jns
mov
pop
adc
shrb
mov
lret
lcall
jl
arpl
sahf
data16
popf
in
sub
push
sahf
outsb
jp
test
andb
xchg
inc
adc
cmp
push
sbb
mov
jge
test
inc
mov
jne
loop
sub
repnz
mov
ds
inc
sub
push
in
sub
movsl
nop
jae
or
call
adc
fs
inc
mov
jecxz
cli
sbb
mov
cmp
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
leave
mov
mov
div
add
inc
or
cltd
cmp
xchg
into
push
sahf
add
lret
ss
jo
adc
add
pop
rorl
gs
jnp
mov
add
push
in
and
popf
push
mov
fidivrl
pop
lods
call
sub
pop
pop
lds
sahf
lea
int
adc
inc
test
xchg
jo
cmpl
cmp
xchg
xchg
and
cld
pop
rcl
inc
int
loop
inc
xchg
pop
sub
decl
fimull
mov
mul
sbb
mov
adc
lcall
mov
dec
fs
fnstsw
outsl
fwait
not
sub
outsb
por
out
jg
jne
stos
cmp
movsl
je
movsl
jae
xchg
fidivrl
sub
or
les
sub
stos
jbe
xchg
mov
mov
push
cld
loopne
jne
ja
int3
scas
shll
jmp
fiaddl
daa
xchg
arpl
mov
ret
into
sbb
jns
add
xor
and
aas
xorb
or
xor
mov
jg
inc
sbb
jecxz
dec
mov
in
xor
iret
xor
ret
xchg
hlt
mov
dec
int
mov
cmc
imull
into
das
aas
test
or
or
mov
sbb
mov
mov
inc
fs
popf
dec
or
test
mov
jp
inc
test
test
ret
icebp
inc
ficoml
or
shrl
and
pop
jae
icebp
sub
loope
loopne
stc
pop
pop
loopne
sub
lea
sub
pushf
push
dec
push
jne
std
aad
mov
fwait
adc
out
sub
jns
dec
pop
inc
int
adc
adc
js
pushf
fisttps
mov
stos
stos
pop
inc
inc
fwait
cmp
xchg
ror
fisubl
sub
imul
inc
repz
ja
jle
dec
int3
inc
cs
push
movsb
enter
adc
xchg
or
imulb
push
jns
jno
jno
push
mov
imul
xchg
bnd
inc
stos
hlt
jg
add
push
lahf
dec
jg
rcr
dec
ss
cmp
sub
jno
outsb
negb
stos
fucomi
js
imul
dec
insl
out
jl
mov
shrl
subl
cld
xchg
mov
cwtl
mov
push
inc
es
mov
cmc
pop
arpl
in
inc
sub
lods
cld
add
or
cltd
hlt
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
mov
or
jo
inc
ljmp
cld
stc
or
add
adc
pop
jae
and
jbe
jle
nop
insl
pop
add
sarw
addl
lods
or
adcl
fidivrs
fbld
insl
jmp
ret
orl
xchg
cmp
sub
mov
pop
jp
inc
daa
jae
fisubs
sbb
xchg
ss
cmc
inc
push
adc
add
inc
add
xchg
sahf
mov
cmpsl
add
mov
inc
sbb
stc
mov
dec
aad
lock
cmp
add
mov
adc
lods
inc
push
enter
ja
xchg
pop
xor
xchg
xor
in
rcll
inc
xchg
repnz
add
cmp
cmp
movb
dec
les
cmc
hlt
pop
stc
adc
add
push
ret
pop
or
push
mov
jmp
lods
ficoml
in
in
pushf
and
mov
in
jae
scas
xchg
imulb
or
std
ja
and
pop
daa
fimuls
call
pop
jecxz
cwtl
movsl
pop
pop
adc
pushf
in
movsb
fcoml
sbb
mov
imul
mov
int
push
dec
and
je
jecxz
mov
cmc
clc
sub
push
gs
out
ds
xor
pop
push
and
inc
dec
and
test
pop
lds
gs
addr16
cmp
push
mov
cltd
mov
pop
sub
mov
sub
xchg
inc
cmp
and
and
enter
xchg
jle
aas
fidivl
jecxz
jns
out
aad
in
pop
ja
ja
ss
cwtl
push
faddl
inc
movsl
xchg
mov
nop
jl
cltd
mov
les
xchg
or
shll
bound
shr
daa
push
xchg
mov
in
dec
push
jnp
iret
mov
jns
pop
and
mov
xor
nop
jecxz
popa
mov
rorl
xchg
and
fbstp
pop
cmp
sbb
xor
add
xor
cli
cld
nop
pushf
mov
adc
rcrl
mov
xor
add
in
subb
out
lret
stos
push
jnp
and
sti
call
push
rcl
adc
jge
imul
inc
dec
xchg
out
sbb
mov
ret
data16
add
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
lahf
cmp
jo
jle
jo
mov
sbb
push
mov
push
and
neg
insl
pop
pop
adc
cmp
jae
pop
ss
xchg
xchg
mov
mov
jle
aas
xchg
mov
fs
cmp
cmp
mov
jle
xchg
sbb
sbb
pop
jg
jmp
push
sbb
xchg
mov
loop
xchg
addr16
cs
inc
cmp
dec
dec
pop
push
std
push
jl
push
dec
lcall
jl
cld
std
sbb
jne
dec
sarb
jns
dec
div
xor
out
les
fsubl
sub
test
inc
fldcw
dec
ds
xchg
jecxz
mov
fwait
ja
adc
dec
sti
aas
jg
ja
push
mov
stc
adc
mov
stos
mov
jne
pop
cmpsl
scas
jbe
lahf
neg
push
fs
xchg
and
mov
dec
inc
push
cmp
mov
repz
and
cmp
iret
scas
xchg
jns
mov
xchg
fiadds
fists
mov
fisubs
mov
and
in
push
test
sbb
dec
xchg
jecxz
jle
or
fcmovu
or
fisttps
mov
pop
mov
mov
in
sbb
dec
shll
xchg
cmpb
adc
shlb
lods
fdivs
repz
test
sub
adc
sub
test
adc
pop
fisttpll
leave
incb
inc
cmc
add
sub
arpl
out
nop
dec
jbe
cs
lret
shlb
push
inc
cli
cmp
loopne
repnz
cmp
outsl
mov
sbb
mov
and
pusha
jge
icebp
enter
lret
mov
fimuls
push
mov
pop
pushf
push
das
int
loopne
dec
or
aam
sbb
mov
xchg
jle
adc
in
mov
test
hlt
insl
mov
push
mov
jg
cmc
jo
rcrl
or
mov
ret
mov
divl
push
sbb
jnp
jno
jo
mov
mov
loop
mov
and
adc
xor
mov
xor
and
and
cmp
cld
frstor
cmp
xchg
inc
pusha
js
lds
incb
cmp
jg
mov
stos
test
mov
addl
out
jb
adc
xchg
inc
and
push
in
ret
fcom
mov
mov
mov
in
out
test
adc
cwtl
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
add
lret
jo
jle
jo
mov
xchg
sbb
cmp
add
arpl
push
xor
daa
mov
mov
in
jmp
xor
xchg
dec
push
nop
inc
jg
and
fisttps
cmp
jecxz
jno
lret
mov
shlb
out
jae
movsb
or
insb
in
and
xlat
cmpsb
shl
loopne
xchg
dec
in
lret
pop
popf
call
and
clc
mov
mov
jbe
cmp
jae
cmpsb
clc
repz
sti
imul
cwtl
inc
mov
pop
in
push
jle
add
jbe
fldpi
mov
test
iret
jp
sub
sbb
daa
std
mov
cmp
mov
add
insb
inc
andb
lock
push
lahf
addb
cli
xlat
loope
test
shll
jge
mov
dec
fisttpll
or
adc
cwtl
incl
aaa
stos
inc
dec
sysexit
mov
mov
int3
adc
pushf
cmp
sub
jmp
insb
adc
xor
dec
in
jle
lds
les
ljmp
jb
mov
inc
loop
add
mov
cld
xchg
lea
mov
sbb
mov
lahf
adc
xchg
out
outsb
xchg
adc
lds
testb
cmp
jae
ss
sub
daa
pop
pop
mov
mov
mov
rcrb
fwait
lock
push
adc
adcb
sub
mov
outsb
jne
nop
fld
rcrb
rcrb
cwtl
push
fstp
cmp
mov
dec
dec
lods
mov
jmp
sub
jnp
mov
sbbb
sti
cmp
dec
rcr
sti
outsl
je
addr16
in
insb
test
pushf
xchg
jae
sbb
sub
mov
pop
jne
stos
xchg
jge
pop
cmp
lock
xor
nop
mov
ss
jmp
icebp
ja
sbb
sbb
pushf
jl
mov
rcr
stos
sbb
lods
or
mov
xchg
out
or
pop
popf
add
mov
add
stos
jge
jmp
xor
inc
xchg
sub
ja
push
add
push
dec
mov
shlb
cmpsl
fs
pusha
test
add
cmc
pop
pushf
testb
mov
xchg
stos
es
ror
mov
icebp
inc
rcll
and
add
andl
sahf
inc
fs
mov
mov
int3
dec
ret
sub
inc
ja
mov
inc
loop
mov
pushf
fs
mov
icebp
mov
icebp
nop
sub
pop
fabs
out
cmp
inc
mov
iret
add
sbb
sub
call
mov
dec
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
pop
inc
adc
jo
jle
jo
add
jmp
mov
call
and
lahf
ds
or
cwtl
cs
mov
and
inc
sar
or
cwtl
cmp
sub
addb
clc
fistpll
mov
stos
std
ds
mov
shlb
xor
pop
imul
push
xchg
loop
inc
pop
adc
and
add
mov
inc
lret
mov
es
push
cmpsl
dec
in
inc
sbb
pop
sub
pop
jb
inc
jl
stc
xor
ja
sbb
push
das
rcrl
cmpsl
jnp
mov
inc
xchg
movsb
mov
mov
and
nop
push
xor
inc
rcll
repnz
aas
xchg
insl
adc
sahf
pop
pushl
mov
in
mov
lret
push
aad
data16
or
or
inc
push
lcall
and
jmp
cmc
mov
mov
pop
les
pop
push
push
popa
fcoml
dec
stos
cli
icebp
dec
jp
imul
push
pop
cli
xchg
cmpsb
push
les
xchg
dec
dec
test
jmp
shrb
scas
dec
adcl
imul
fsubl
mov
mov
jae
fldt
daa
jo
mov
dec
fisttpll
mov
cmp
lock
fnstsw
sub
adcb
arpl
cwtl
or
arpl
inc
std
or
mov
xor
cmp
sbb
decb
adc
dec
cwtl
cmp
and
lea
mov
adc
pop
jge
pusha
jg
popf
jb
stos
jmp
jns
outsb
pop
insb
or
idivb
sbb
arpl
mov
fwait
mov
outsl
jmp
pop
inc
imul
packssdw
or
shrl
jbe
in
inc
mov
push
loope
cs
lcall
sub
ret
jmp
loope
mov
ficompl
cmp
shrl
xchg
pushf
ret
cmovbe
dec
push
cmp
dec
adc
movsl
sbb
fidivrs
or
xchg
push
pop
push
in
lea
sbb
arpl
or
hlt
into
testl
sbb
sub
ljmp
loopne
inc
inc
testb
stc
scas
jp
aad
push
inc
dec
cmpsl
and
mov
push
add
adc
and
leave
inc
push
rcrl
push
dec
into
nop
adc
fs
imul
lds
imul
sub
push
cmpsl
int3
lea
mov
data16
aaa
sbb
inc
leave
scas
cmp
pop
lahf
cmpsb
loope
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
mov
pop
pop
adc
mov
sub
jmp
xor
cmp
leave
adc
cmp
sub
stos
nop
loop
jae
sbb
push
test
repnz
pop
mov
repnz
rcr
add
sbb
push
mov
out
lods
or
and
pop
jg
and
cmpsl
dec
jbe
push
and
call
cmp
jp
inc
ljmp
mov
or
cmp
ret
sub
int
or
call
shlb
pop
fbstp
mov
pop
popf
rep
xor
movsl
stc
push
movsl
cmpsl
shlb
scas
lcall
dec
test
mov
test
hlt
in
imul
jg
cmc
mov
rol
popa
xor
mov
sti
or
ja
enter
xlat
xchg
fdivl
out
cs
jge
push
mov
adc
lret
imul
and
call
add
jmp
movsb
icebp
stos
in
pushf
in
or
mov
addr16
arpl
push
pop
inc
jb
cld
cmpsl
mov
mov
push
xchg
cmp
push
std
lahf
enter
sub
stos
adc
mov
test
jne
adc
scas
add
int
cmp
js
fdiv
pop
xchg
adc
inc
js
loop
fwait
icebp
xchg
shlb
in
push
leave
adc
enter
mov
sbb
push
jle
lock
dec
pop
outsb
inc
cmpb
popf
sahf
dec
into
cld
push
es
mov
sub
popf
pop
adc
xor
fsts
inc
gs
in
mov
mov
jbe
mov
cmc
dec
cmc
je
adc
adc
pop
sahf
shlb
out
pop
add
or
sbb
aam
jp
imul
dec
or
jnp
dec
or
fisubrl
xor
mov
and
stc
shr
hlt
mov
leave
mov
and
push
fwait
adc
shrl
js
pop
shll
into
pusha
pop
jp
addr16
shll
jle
loope
iret
cs
mov
jae
pop
ss
add
loope
mov
mov
mov
mov
cmpsb
push
sbbl
inc
scas
lods
int
mov
out
lds
repz
xor
cmp
add
cli
or
jo
dec
bound
pop
nop
lret
push
push
ljmp
xor
das
mov
jbe
inc
adc
sahf
adc
mov
jbe
popl
add
cmc
std
fs
jno
mov
fsts
out
movsl
pop
jg
mov
jmp
pop
sti
lds
sarb
sub
ja
push
arpl
add
or
loop
mov
call
mov
xchg
mov
pop
repnz
sbb
jge
lahf
adc
xchg
and
xchg
jg
fnstsw
std
fldl
adc
cld
ljmp
xchg
adc
sti
jae
cmp
sub
push
jbe
mov
sbb
xlat
rclb
jnp
jnp
push
mov
lds
cld
inc
loop
iret
xor
ja
mov
icebp
int
add
sbb
popl
inc
inc
xchg
xchg
into
sub
mov
adc
fistpll
pop
mov
xor
mov
dec
inc
mov
mov
movsl
out
push
sub
nop
es
xor
adc
and
in
bnd
jo
hlt
or
cmp
pop
sub
jns
shll
mov
daa
fists
fstl
pusha
mov
add
fimuls
or
mov
enter
push
xchg
jbe
rclb
push
insb
adc
xor
in
xchg
imul
dec
and
repnz
hlt
repnz
mov
xchg
pop
add
aaa
std
inc
cld
cld
sarl
mov
stos
xchg
lods
shrb
lcall
inc
bound
xchg
adc
stos
jae
jp
pop
cmpl
aas
test
mov
icebp
les
pop
mov
cltd
jno
out
ror
pop
sbb
push
stc
adc
das
push
ficomps
lds
outsl
cmp
sbb
pop
shl
rolb
sti
rclb
fwait
rorl
fldenv
cmpsl
fidivrs
outsb
insb
loope
sub
push
add
ficompl
mov
repz
stc
push
es
or
dec
cmp
pop
jp
cmp
dec
outsl
jae
leave
out
fidivrl
pop
and
test
sub
push
test
sub
out
movsb
pop
dec
xchg
xchg
sbb
mov
dec
mul
sub
or
sti
xchg
shl
sti
adc
adc
imul
mov
fsubrs
ret
xor
daa
fcmove
test
iret
inc
push
mov
fnstcw
adc
jl
add
outsb
mov
cld
sbb
aaa
aad
dec
push
fcoms
jmp
or
repnz
pop
xchg
imul
and
les
popf
cmp
call
xchg
outsl
push
cli
xchg
shl
test
fwait
lahf
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
cwtl
orl
jle
jo
jo
addb
pop
cmp
sbb
mov
push
sbb
sub
pop
lcall
in
xor
movsl
pop
je
call
pushf
mov
test
pop
jbe
fwait
insb
arpl
arpl
sbb
inc
jmp
out
pop
int3
add
fnsave
inc
xorb
roll
cmpb
sbbl
lods
mulb
addr16
cltd
pop
or
pop
push
ficompl
test
iret
sbb
xchg
lret
out
sbb
add
aaa
shll
inc
jae
stos
fisubrs
jmp
xchg
leave
mov
pusha
lahf
mov
lods
imul
addl
add
or
lcall
xchg
xor
fiaddl
imul
test
xchg
repz
and
adc
add
xor
test
rorb
call
mov
or
or
xchg
lea
push
xchg
mov
in
rclb
xchg
scas
mov
mov
and
mov
into
inc
nop
adc
ljmp
cld
cltd
or
ja
pop
rcrl
fwait
mov
pop
stos
cmp
imul
out
dec
out
cltd
out
cmp
cmp
daa
stc
sti
mov
pop
ret
repz
inc
notw
mov
repz
pop
pop
mov
scas
adc
adc
lock
repz
std
jns
cmp
pop
test
pop
push
repnz
fisttps
or
adc
test
adc
mov
pop
and
aam
cld
stos
lea
addb
fistps
mov
dec
sub
sub
xor
jo
repz
aas
arpl
push
pop
or
or
cmp
adc
iret
ds
adc
mov
hlt
cs
shrl
aas
mov
jae
cmp
add
mov
dec
pop
out
std
jge
fcoml
loopne
les
daa
in
pop
mov
mov
mov
faddl
pop
mov
fcompl
outsl
mov
pushf
sub
inc
jmp
push
mov
das
jl
fs
mov
mov
pop
ljmp
in
pop
pop
loop
ret
enter
lea
adc
in
inc
ljmp
popf
sahf
sti
push
mov
cli
inc
pop
pop
hlt
iret
inc
jle
int3
xchg
mov
xor
roll
in
lods
sub
orb
dec
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
inc
xor
jo
jle
jo
mov
xchg
cltd
mov
rcrb
aad
das
ret
dec
and
mov
setae
mov
push
xor
mov
jge
jno
outsl
dec
pop
pop
clc
pop
lcall
jne
imul
mov
and
or
sub
dec
test
xchg
jns,pt
cmpsl
hlt
jecxz
add
sahf
add
rclb
xrelease
xor
fs
sbb
sbb
hlt
out
mov
popf
in
add
jb
adc
out
jno
out
arpl
fndisi(8087
iret
mov
sbb
adc
mov
dec
idivb
ret
mov
mov
loope
inc
stos
test
add
fwait
leave
repz
fidivrl
int3
js
push
sti
fsub
push
mov
push
sub
dec
jno
nop
mov
mov
jne
ja
mov
les
lahf
sub
pushf
xorl
mov
jns
xchg
loope
mov
or
test
lret
test
pop
in
sbb
enter
dec
mov
addr16
xor
mov
inc
cmp
stos
push
jno
sahf
inc
cmpsl
stos
and
jbe
and
jmp
xlat
push
mov
outsb
xor
jbe
mov
xor
js
fldl
fisttps
sbb
jecxz
in
sub
incb
sbb
and
fbstp
dec
cltd
cmp
loopne
aad
xor
lret
out
or
les
shrb
sbb
ret
in
idivl
outsb
and
add
cmpsl
inc
inc
cmp
mov
out
stos
pop
daa
sbb
xchg
mov
pop
push
xchg
gs
pop
or
and
push
sub
jo
aas
xlat
pop
nop
outsb
int
xor
cs
xchg
rol
dec
adc
mov
lock
push
push
jmp
mov
and
jne
adc
insl
aaa
fiadds
daa
jmp
test
xor
jne
pop
mov
xor
jne
jne
cmp
repz
push
add
add
mov
mov
sbb
push
xchg
push
pop
lds
sbb
scas
das
sbb
jecxz
push
insl
or
lock
icebp
movsl
fldz
jb
dec
test
decb
push
mov
add
or
pop
outsl
lea
inc
sbb
dec
bound
shrb
mov
sbb
xor
iret
cmp
push
repnz
rorb
inc
sahf
inc
mov
jno
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
and
daa
sub
jg
mov
jge
lods
shll
lret
add
outsb
or
clc
and
dec
xchg
cmp
notb
mov
imul
imul
sbb
mov
in
dec
lcall
xor
push
lods
fbld
xlat
dec
pop
movsl
lds
call
pop
into
mov
cmp
loop
jg
adc
add
out
rolb
jns
mov
inc
jb
cwtl
mov
lcall
push
mov
jnp
iret
mov
das
data16
add
push
fnstcw
das
and
iret
mov
xchg
sbb
jp
or
call
lds
clc
xchg
cld
xchg
fldl
add
and
divps
xor
imul
icebp
sbb
or
dec
or
xchg
cli
out
push
cmpsb
sub
jbe
cmp
rcll
push
mov
mov
jmp
adc
fmuls
bound
xchg
ss
pop
and
nop
leave
je
sbbb
rorb
dec
push
ja
inc
add
repz
gs
stos
cmp
pusha
push
imul
ror
in
adc
push
nop
aas
cmpsl
cmp
jo
ret
mov
pop
xchg
pop
jg
pop
xor
dec
push
shl
fwait
out
fwait
add
xor
movsb
lret
shrb
scas
xchg
dec
lret
xor
add
mov
pushf
dec
push
or
repz
push
mov
movsl
ret
dec
imul
and
xor
push
push
xchg
pop
sbb
rcrl
stc
cwtl
cmp
mov
icebp
sti
jg
shlb
sbb
ss
sub
fwait
push
or
pop
test
sub
push
jl
ret
mov
addr16
jg
jnp
fnstsw
gs
xor
into
dec
or
sbb
popa
and
add
and
lcall
cs
fistpll
push
or
cmpb
cmp
sbb
call
lea
mov
pop
mov
adc
xor
popf
lahf
pop
sbb
xor
jb
jmp
or
push
or
xchg
filds
dec
adc
lahf
int3
int
cmp
push
pop
lods
decl
dec
sub
ss
and
inc
ljmp
push
inc
pop
push
push
inc
dec
lea
mov
test
mov
fdivs
stos
ljmp
mov
fmuls
movsl
and
inc
and
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
push
fdivrs
mov
jle
jo
jmp
notl
loop
bsf
jge
pop
mov
push
jp
jo
insl
divb
xchg
cld
jns
push
and
push
out
mov
push
xchg
xorb
jle
lret
xor
inc
xchg
int3
push
sub
hlt
sub
cld
and
mov
cmp
mov
mov
lds
cltd
cmp
adc
jmp
push
push
test
loope
or
mov
sbb
in
pop
jns
pop
add
addr16
ret
cmp
mov
inc
insb
loope
sahf
int3
in
push
dec
test
fnstcw
in
ja
out
cmp
imul
rcrb
push
rorb
jae
jb
add
cmp
xlat
ret
clc
cwtl
cmp
ljmp
js
sub
orb
dec
aaa
push
scas
jno
push
cwtl
push
cmp
xor
and
jno
adc
dec
xlat
xchg
popf
sub
push
mov
mov
pop
ljmp
or
cmpb
inc
stc
xchg
jb
mov
sub
or
cwtl
scas
paddw
pop
ss
aas
pusha
jmp
in
jp
or
lret
xlat
push
sub
push
adc
jb
les
decb
fwait
cmp
mov
scas
add
pop
xor
test
mov
popa
push
std
inc
mov
xchg
lea
aaa
xchg
jns
rcrl
iret
icebp
xor
xchg
jne
fisttpll
test
jle
sbb
adc
dec
sbb
es
out
or
in
xor
adc
out
lret
sbb
sbb
mov
dec
mov
pop
push
rcrb
mov
jmp
adc
negb
push
ret
xor
mov
mov
in
shll
dec
add
jl
push
jl
pop
pop
push
or
push
adc
jmp
pop
jmp
or
pop
mov
cli
pop
or
cmpsl
adc
insl
loop
push
arpl
aam
xchg
pusha
dec
inc
dec
scas
xor
lret
lock
push
adc
cmc
sub
sbb
mov
lock
or
push
add
shrl
mov
xchg
jnp
rorl
pop
cmc
ss
sub
insl
xorb
gs
or
mov
outsb
lock
fdivr
pop
out
or
mov
sbb
in
lret
daa
push
rcrb
xor
inc
mov
xor
adc
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
