push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
mov
jle
jle
jno
jle
xor
xor
ja
or
jns
bswap
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
add
jb
lock
adc
cmpsb
add
push
sarb
pop
pop
in
out
adc
jmp
ret
mov
in
push
repz
xchg
out
xchg
or
mov
aad
inc
clc
loopne
icebp
push
adc
shl
xchg
sbb
sub
push
dec
jnp
scas
jmp
arpl
mov
push
imul
jecxz
fstps
packuswb
jecxz
inc
xor
mov
sub
mov
jne
mov
mov
add
test
int
int
scas
cmp
mov
aam
nop
dec
notb
jno
mov
pusha
int
add
sub
sbb
pushf
cld
ret
cmp
shrb
pop
es
shrb
notl
and
imul
cmp
loopne
mov
dec
fistpll
aad
lds
sbb
test
aad
int3
lods
ret
xchg
xchg
pop
clc
vpcmpgtw
pop
icebp
and
jp
out
fsts
sbb
mov
testb
mov
pop
gs
mov
test
jno
jle
push
out
imul
xchg
xchg
push
jmp
push
pop
mov
xlat
out
push
inc
cmp
jl
test
dec
cli
pop
inc
je
dec
adc
xchg
jecxz
test
jo
jb
iret
sbb
ljmp
add
adc
pop
dec
cmpsb
fnstenv
fidivrl
test
push
aas
cwtl
sub
mov
xchg
scas
pop
cmp
movsl
daa
mov
ja
and
lock
xchg
repnz
xchg
jbe
outsb
mov
das
movsl
rorb
sbb
les
popa
mov
cld
cli
xor
cld
mov
shll
jmp
adc
ss
pop
and
pop
or
clc
sbb
xchg
ljmp
iret
xchg
ficompl
xchg
ret
xchg
loope
in
aam
ds
lods
in
xchg
loope
xchg
jle
in
or
push
nop
cld
mov
xor
inc
or
pop
cmp
das
scas
aam
roll
xchg
daa
lds
lcall
add
adc
lea
push
cmp
jecxz
cmp
push
enter
je
mov
push
addr16
hlt
sbb
int3
adc
pop
add
mov
ret
movhpd
dec
je
test
test
sub
cmp
or
pop
push
jb
jbe
jl
pop
hlt
cmc
call
clc
dec
cmp
push
sub
loopne
mov
loope
jle
sub
push
jge
sub
inc
cmp
int
mov
adc
cmp
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
push
scas
lea
jno
jle
adc
sub
pop
jl
cwtl
in
jecxz
pushl
adc
inc
jp
scas
nop
andb
sub
push
fimull
push
add
cmpsb
idivb
stc
mov
mov
xchg
daa
sbb
pop
jo
aam
and
scas
push
or
in
pop
xor
cwtl
mov
adc
clc
mov
jl
nop
mov
push
stos
xchg
xor
int3
aas
xchg
sbb
pop
push
faddp
inc
mov
test
mov
imul
xchg
out
mov
ja
push
dec
inc
jo
sti
imul
adc
repnz
pop
movsb
jne
dec
add
pop
test
fxch
or
jge
mov
outsb
cmpb
pop
lahf
add
mov
push
lods
mov
clc
push
and
pop
out
repz
mov
push
addr16
push
data16
xor
repnz
andl
cmp
pop
adc
repnz
pushf
mov
je
push
xchg
push
mov
outsl
fs
mov
or
adc
fldl2e
in
fcompl
mov
lock
xchg
pop
stc
loope
add
xchg
xor
sbb
mov
xor
stos
shl
sbb
and
out
jmp
cs
mov
cli
aad
cmp
and
cmp
lods
mov
xor
aas
test
int
mov
lds
outsb
xlat
sub
ljmp
mov
dec
inc
faddl
add
sbb
hlt
in
test
push
mov
rcrl
adc
shlb
das
in
mov
mov
push
ljmp
repnz
enter
cmpsb
mov
jg
cltd
andl
push
cld
scas
aas
les
pop
adc
cmc
pop
mov
sub
or
xchg
push
mov
cmp
xor
iret
sbb
popw
lret
fstpt
sub
add
cmpsl
mov
inc
idivb
mov
mov
xchg
xchg
push
dec
xor
lcall
pop
out
xchg
daa
cmp
int
pop
enter
lods
adc
lret
add
outsl
sahf
sub
pop
mov
sub
pop
fdiv
push
scas
test
popa
outsb
aad
dec
popa
xchg
jne
jne
xchg
mov
sub
ret
lock
pop
xchg
mov
or
addb
scas
aaa
sbb
xor
imul
out
mov
out
dec
sub
mov
stos
pop
in
jne
fiadds
mov
ja
inc
imul
sub
repnz
negb
or
or
mov
sub
fwait
inc
xlat
adc
adc
in
or
repnz
shrb
es
in
and
mov
dec
mov
int3
jl
in
dec
add
push
ds
adc
out
sub
rcl
pop
mov
mov
sbb
dec
sub
cli
push
or
adc
jmp
xchg
lds
pop
push
lret
mov
add
loopne
sti
push
add
mov
mov
lods
lret
mov
push
and
inc
sbb
stos
dec
imul
daa
jmp
ficomps
xor
mov
inc
shll
repz
out
test
cmpl
sbb
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
enter
push
jne
jle
jno
jle
stos
fucom
lods
enter
or
loope
test
jnp
or
outsl
xlat
outsb
push
in
push
mov
cmpsl
lahf
ds
popf
or
xchg
int
aad
and
inc
fists
push
aas
sub
cld
mov
call
xchg
xchg
or
mov
ds
sub
aas
mov
dec
rorb
jp
jo
pop
jne
cmp
pusha
aaa
lock
aad
out
cli
clc
sbb
in
mov
inc
mov
jnp
out
ss
mov
sub
mov
inc
jg
mov
mov
cld
cmpsb
dec
xchg
inc
push
aas
push
push
sub
add
mov
mov
in
jbe
pop
icebp
clc
dec
and
pop
and
mov
pop
jmp
cmp
cmp
mov
loope
popf
pop
mov
dec
cmp
bound
into
push
mov
shlb
push
shrl
stos
xchg
lcall
push
jle
sbb
jle
lret
pushw
hlt
orb
mov
or
hlt
inc
or
push
lret
nop
push
xchg
pop
mov
mov
sub
mov
cmc
int3
jo
push
and
jecxz
or
xor
ret
scas
pop
in
adc
icebp
not
mov
or
pop
fistl
add
pop
cmp
and
pop
lret
mov
shr
push
mov
nop
or
icebp
mov
mov
sahf
shr
aad
push
iret
mov
sub
and
rclb
and
pop
dec
shrb
xor
enter
or
cmpsl
mov
push
lods
jns
cmp
cld
imul
cmp
dec
hlt
push
inc
or
leave
arpl
sbb
divb
outsb
jle
jecxz
cmpsl
cmp
jecxz
data16
lea
xchg
ficompl
in
jecxz
aas
int3
fbld
cmp
out
aad
jmp
int
rorl
and
es
ret
test
into
mov
aas
push
sbb
lea
xchg
push
fdivrl
ret
and
pop
pop
jns
das
movsb
lcall
nop
xor
scas
data16
pop
adcb
int
mov
sub
mov
sub
fnstcw
xchg
sbb
push
icebp
mov
cmp
cmp
mov
stos
cwtl
sbb
mov
call
and
notb
inc
adcb
enter
ret
popf
jns
jle
movsl
and
cmpb
and
sahf
sub
cmpsb
lock
scas
jns
popa
xchg
es
fwait
std
pop
fucomi
push
shrd
fcmovne
add
pop
pop
and
je
fstps
sub
adc
in
add
or
and
movsb
inc
pop
aam
dec
mov
jb
fldcw
push
icebp
out
mulb
rorl
daa
mov
in
xchg
jp
popa
sbb
add
in
fildl
cli
jb
shll
dec
imul
dec
jp
inc
mov
leave
fimuls
shll
xchg
sub
ljmp
shll
fisttpll
bound
inc
jmp
aaa
sub
and
out
jecxz
and
cltd
ds
and
div
movl
jmp
pop
nop
jl
jge
and
jns
icebp
fwait
test
or
xorb
mov
ror
mov
hlt
test
mov
sarb
pop
sarb
ret
fisubrl
mov
btc
mov
fdivl
test
xorl
inc
fnsave
ds
or
inc
std
mov
adc
pop
das
push
dec
pusha
in
and
call
add
inc
mov
bnd
in
stos
xlat
mov
and
out
push
mov
sahf
js
pushf
imul
adc
ficompl
aaa
fldl
ficompl
inc
push
jb
orb
nop
jge
xchg
sub
movsl
xlat
fs
cmp
sub
push
gs
lods
or
cmpsl
or
rcl
aam
in
adc
fldl
shlb
mov
repnz
mov
pop
outsb
inc
gs
andb
sbbb
pop
outsb
scas
test
mov
mov
sbb
stc
insl
add
jg
test
mov
add
hlt
push
mov
mov
or
mov
fwait
sarl
sbb
popf
std
icebp
es
push
stos
lds
aas
pop
in
stos
nop
push
popa
out
adc
out
movsl
mov
repnz
aam
and
pop
or
insb
out
push
fisubs
xor
inc
mov
lret
or
enter
sbb
xor
popf
outsl
inc
cltd
pop
das
mulb
dec
test
mov
push
mov
add
repz
fs
dec
mov
out
repz
jns
mov
repz
ja
dec
stos
or
and
cmp
lret
sbb
add
push
cmpsb
jne
lret
mov
out
mov
adc
imul
sbb
dec
pushf
lea
mov
cld
mov
js
mov
cli
jno
pop
lods
xor
jb
dec
shlb
or
aad
imul
sarl
sub
xchg
cwtl
insb
inc
push
addr16
mov
cld
addr16
push
inc
mov
dec
js
lret
mov
jae
xchg
lea
xlat
adc
aas
jno
jne
xchg
lahf
ficoml
jl
and
ffreep
and
mov
aad
push
jb
mov
inc
jp
inc
mov
mov
dec
movsl
jb
int3
xchg
pop
push
loop
jmp
rolb
mov
lock
mov
mov
sbb
push
fdiv
loopne
mov
nop
into
sub
aaa
pop
lock
in
hlt
ret
rdtsc
xchg
rcll
pop
mov
jns
dec
out
cmp
mov
jbe
std
stos
dec
negb
mov
sbb
sbb
pushf
or
mov
jne
mulb
enter
test
mov
loop
test
enter
dec
jne
movsl
outsl
xor
xor
lods
loope
leave
cmp
push
mov
shll
stc
mov
data16
push
sub
in
lds
lds
pushf
aaa
inc
mov
mov
in
xchg
and
mov
out
jl
mov
insl
xor
outsb
setns
add
cmpsb
cmpl
mov
sbb
lcall
enter
or
xchg
popa
repz
push
loopne
inc
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
xchg
pusha
into
call
mov
scas
adc
cmc
dec
xchg
js
jp
and
lds
cmp
mov
aad
xorb
pop
dec
push
mov
ljmp
mov
loope
sub
aas
lret
pop
in
insb
cmovae
inc
push
inc
std
jmp
xor
test
push
loopne
pop
xlat
js
and
sub
jle
subl
fcomip
addb
pop
cmp
or
ret
dec
cmp
inc
fwait
jns
lock
sub
fnstenv
mov
scas
insl
inc
jne
insb
out
mov
dec
aam
jge
jl
int3
pushf
repz
in
pop
xchg
adc
testl
cmp
bound
leave
cmc
test
adc
mov
fbstp
lea
test
lcall
adc
inc
test
inc
out
push
test
ret
add
iret
dec
inc
lea
xchg
jb
mov
movsb
outsb
fistps
lds
adc
mov
outsb
jb
pop
mov
adcb
rorb
xlat
sub
pop
xor
fwait
push
mov
daa
and
mov
cli
mov
rcll
shrb
mov
push
dec
pusha
jno
mov
sub
mov
les
mov
cmpsl
mov
outsb
pushf
push
push
cmp
mov
jl
sub
push
iret
movsb
ds
mov
inc
cli
mov
addb
adc
lret
sub
sub
or
jle
pop
mov
loop
push
xor
dec
inc
mov
call
and
addr16
jmp
xor
adc
jl
cmp
arpl
cmp
sub
lods
jns
dec
push
push
or
xor
or
ret
jnp
pusha
push
ja
test
leave
insl
xchg
outsl
paddsw
mov
jp
mov
rep
movsl
adc
sarl
mov
pop
sti
lods
mov
cmp
in
adc
scas
es
cltd
rorb
jle
mov
mov
xchg
insl
or
inc
mov
or
sbb
sbb
mov
imul
xchg
jmp
adc
aaa
sub
mov
lods
ja
fwait
sbb
cs
lock
push
cmpl
insb
sbb
lds
pusha
or
mov
bound
push
test
mull
lock
mov
jbe
das
pop
add
mov
test
mov
xor
and
push
mov
cmpsb
clc
push
mov
add
sub
pop
dec
daa
add
lret
fidivrs
add
out
xchg
cmp
add
add
loopne
mov
pop
or
sahf
test
int3
jae
cmp
cmp
sbb
stc
dec
add
or
and
les
cli
mov
lret
push
lods
mov
add
fldcw
mov
jecxz
dec
dec
data16
xlat
jnp
cmpsl
push
ror
aas
int3
mov
les
test
push
lea
int
adc
fcmovu
push
push
and
jns
xor
add
hlt
push
lds
jle
xor
sbb
dec
mov
pop
mov
sti
call
movsb
test
sbb
mov
inc
jmp
lret
jl
sbb
shr
test
inc
push
inc
add
add
add
add
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
aad
mov
push
movd
jno
jle
out
cmp
xor
mov
fs
or
addr16
push
negb
stos
int3
xorb
xchg
push
jns
lcall
aam
imul
inc
out
lret
dec
mov
mov
stc
test
mov
and
pop
insl
xchg
mov
cli
push
pop
nop
pop
mov
outsl
aas
ss
inc
pop
and
cmc
out
nop
stos
es
push
mov
xchg
sbb
ret
push
and
pop
paddusw
les
mov
pop
loope
and
ret
cmpsb
outsl
insb
gs
les
xchg
jl
pop
mov
inc
jp
daa
push
outsb
bound
stos
push
call
xor
out
adc
cli
push
mov
adc
lea
sbb
scas
outsl
shll
repnz
je
mov
addb
clc
mov
pop
jle
jno
pop
mov
and
psubd
stos
mov
push
jo
mov
pmaxsw
test
push
xchg
popa
sbb
jae
daa
pop
in
lock
repnz
in
lcall
fisubrl
pop
mov
xor
test
test
movsl
add
pop
jmp
lret
push
mov
testb
pop
loope
cwtl
adc
xor
repnz
and
dec
mov
cli
push
les
mov
out
ljmp
ret
ret
mov
sbb
stos
xor
sahf
sbb
mov
lods
xor
jecxz
rcll
cmp
mov
or
out
mov
loop
js
cmpsl
gs
dec
pop
pop
jl
pop
pushf
push
loop
cmp
fdivs
sub
pop
sbb
sub
add
cli
cltd
data16
cmpsl
xchg
test
and
jp
or
cli
notl
scas
lods
xchg
int
out
sbb
jmp
call
push
add
cwtl
ja
and
add
insb
or
inc
mov
push
cmp
adc
ja
scas
or
or
out
inc
adc
pop
dec
mov
shlb
sub
ljmp
push
sub
cmpsb
sub
and
fimull
push
sarb
hlt
cltd
sbb
xlat
or
stc
aad
dec
sub
es
dec
cld
daa
add
cmc
sbb
pop
xchg
fimull
loope
push
cli
std
pop
loope
cmp
cmp
cmp
cld
mov
adc
loopne
fistpl
shlb
mov
inc
and
sbb
and
mov
outsl
outsl
adc
fdivr
shrl
shr
adc
vunpcklps
das
mov
jmp
jne
push
jmp
mov
sub
leave
dec
loop
loopne
push
adc
xchg
ja
fs
add
jno
mov
and
in
push
push
dec
sbb
cmpl
pop
imul
or
mov
xor
sbb
dec
push
cmp
sub
addr16
imul
mov
adc
add
mov
pop
jnp
fsubs
ffreep
jo
idiv
pop
add
fdivrl
and
or
add
inc
mov
sub
push
or
call
test
lods
mov
pop
inc
add
sahf
sbb
pusha
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
inc
cmp
add
xorb
insb
lcall
inc
mov
pop
ret
dec
je
sarb
popa
nop
dec
push
add
mov
divb
addr16
push
mov
jbe
testl
jns
cmp
xlat
in
lods
aas
rcrl
popf
inc
fs
mov
movsb
insl
ret
shll
xor
stos
xor
es
and
xchg
xchg
repz
dec
pop
movsl
inc
xor
outsb
repz
vmovss
dec
mov
xor
dec
xor
fisubs
lcall
mov
mov
mov
arpl
xor
out
hlt
mov
or
xchg
shll
call
xorb
test
mov
test
dec
fldl
inc
mov
cmp
inc
int3
mov
ss
add
dec
xchg
sub
cmp
mov
scas
sbb
dec
popf
pop
mov
data16
jle
pop
mov
hlt
test
ljmp
leave
sub
bound
test
push
mov
xchg
fidivrs
xor
inc
push
mov
add
mov
in
leave
cmpsl
sbb
or
and
fstps
into
fwait
cmc
mov
add
or
stc
xor
gs
xchg
sub
jbe
ret
sti
xchg
rorb
sbb
push
cltd
clc
in
inc
bound
insb
pop
dec
push
test
dec
out
insl
rcr
mov
xor
sbb
std
jle
loope
dec
aam
fst
xor
and
scas
pop
dec
mov
jo
addr16
int3
icebp
inc
mov
movsl
inc
fs
mov
dec
jg
xchg
dec
and
out
loopne
lret
mov
scas
fnsetpm(287
out
sub
push
je
ljmp
lcall
xchg
aad
adc
mov
call
xor
test
inc
std
lea
sbb
test
ret
hlt
add
cmpsb
loop
int3
mulb
pop
mov
iret
xor
and
jecxz
out
push
mov
shl
push
xchg
outsl
in
xchg
pop
in
das
mov
fsubrs
xchg
call
aad
rcl
adc
test
shll
sbb
adc
pop
out
jg
mov
xchg
pop
ja
inc
cmp
mov
xor
daa
jns
ficompl
sbb
adc
mov
pop
pop
lret
sbb
adcb
pop
sbb
sub
mov
push
sarb
add
loop
xlat
ljmp
add
in
icebp
mov
ja
pop
push
mov
das
or
mov
test
add
out
jg
subl
ljmp
fsts
popa
test
sahf
jmp
aas
fists
mov
mov
jnp
or
pusha
ret
xor
movsl
mov
and
mov
adc
mov
dec
fiaddl
ja
hlt
sahf
mov
shrl
cmp
xchg
push
cmp
aaa
addr16
xchg
or
lods
and
jmp
mov
and
lret
decl
call
sub
mov
inc
lock
jmp
jmp
adc
repnz
mov
test
inc
mov
mov
jle
jno
jle
mov
mov
dec
and
push
fistl
xchg
cmp
negl
aaa
mov
mov
mov
sti
jl
outsb
pop
adc
adc
cltd
fisubrl
in
movsb
sub
mov
addr16
mov
cs
adc
jp
mov
in
pop
stos
push
inc
push
xchg
mov
test
xor
push
sub
sbb
loopne
pop
out
orl
leave
jmp
mov
subb
mov
cmc
xchg
sti
jge
push
ljmp
das
mov
stos
aad
xor
mov
dec
push
add
sbb
xchg
pop
cmp
mov
or
sbb
jge
dec
push
and
not
sub
mov
cs
out
sub
fs
sti
aam
or
popf
and
xor
push
je
shr
test
fcmovne
aas
jl
fisttpl
mov
mov
adc
imul
shlb
add
and
pop
mov
and
cli
out
xor
aad
pop
adc
ss
aaa
stc
adc
aam
daa
rol
lahf
es
and
insb
cld
das
imul
js
jmp
xchg
lea
fdivrs
ljmp
push
and
cmp
out
sbb
jmp
and
mov
xchg
lock
and
sub
inc
adc
stos
push
dec
xchg
shll
sub
add
lret
das
and
loop
sbb
mulb
inc
mov
rclb
xchg
mov
jnp
arpl
cmp
mov
cli
cmp
cmp
leave
mov
fmull
mov
arpl
sti
cmp
fmuls
loope
out
shlb
inc
dec
arpl
adc
jne
and
les
mov
lds
lret
icebp
int
fisttps
setbe
roll
imul
test
adc
ja
cmc
inc
pusha
fdiv
icebp
adc
sub
int
sub
jbe
mov
jae
dec
gs
jecxz
inc
cwtl
xchg
push
pop
add
gs
and
push
jmp
mov
dec
jg
mov
das
jge
sub
insb
aas
jne
jmp
adc
fstp
pop
out
lea
pop
jge
pop
adc
pop
test
push
add
clc
cli
sub
mov
mov
inc
jo
jb
mov
mov
dec
inc
insb
adc
inc
pop
push
jp
lahf
pop
repz
das
lcall
push
bound
mov
mov
repnz
xlat
sub
dec
sub
mov
jo
jmp
bound
and
push
nop
mov
lods
les
xchg
push
push
daa
mov
pop
xchg
or
sbb
aad
into
cmp
lret
aaa
jle
or
dec
outsb
int
cltd
fwait
out
mov
push
push
pop
push
lods
jbe
je
mov
bound
push
xor
movsl
cli
test
and
mov
push
jo
and
outsb
pop
inc
push
test
rcll
adc
lret
test
rorl
repnz
jmp
jl
sub
jge
jge
inc
sbb
push
es
sahf
sbb
xorb
push
jnp
or
insl
or
enter
mov
pop
or
cltd
popf
pop
insl
jo
fnstenv
pop
fcoms
adc
mov
cmpsb
inc
sti
push
jno
mov
push
jno
stos
insl
rcrb
mov
dec
vmaxpd
pop
lahf
mov
std
dec
insl
mov
loop
mov
cvtps2pi
add
cmp
test
insl
mov
arpl
push
in
and
fs
cld
push
add
inc
pop
pop
popf
mov
push
sbb
mov
insb
jmp
popf
pusha
leave
into
mov
lret
fdivp
repz
mov
int
cs
lret
mov
aaa
das
cmp
test
test
xor
xor
pop
sbb
adcl
mov
cli
cs
adc
pop
xor
lods
dec
shrb
les
sub
dec
scas
push
fiadds
mov
or
loop
in
enter
adc
imul
shlb
stos
pop
leave
pop
shlb
incl
xor
and
icebp
inc
rolb
cs
aam
xchg
fwait
or
movsb
negl
pop
mov
test
rcl
shll
sbb
or
and
aam
push
mov
push
xchg
sbb
xor
insl
push
repnz
roll
push
test
mov
std
or
lods
or
or
push
movsl
cmp
xor
lret
fldenv
pop
outsb
xor
pop
cwtl
push
rcr
cmc
adc
adc
out
add
scas
inc
outsb
test
icebp
out
dec
sub
mov
popf
xchg
push
push
and
sbb
mov
outsb
inc
das
enter
jecxz
hlt
cmp
scas
mov
filds
ljmp
sbb
cmp
push
cmp
dec
lock
popa
lods
jo
lret
or
push
arpl
fidivrl
pushl
vfrczsd
lods
sub
leave
lret
push
jns
gs
sub
lods
cmpsb
cmpsl
mov
sub
nop
ljmp
cmc
xchg
and
adc
shl
mov
push
xor
lods
iret
filds
add
mov
div
lahf
in
in
sub
hlt
inc
pop
dec
in
or
pop
cmp
cmpsb
pop
gs
je
les
inc
push
out
add
push
fstl
and
inc
lods
sti
lret
in
pop
mov
fidivrl
ljmp
xor
mov
push
lea
test
sbb
jns
stos
push
fdivs
loopne
sub
ret
cmp
repz
or
cld
jbe
loop
int3
dec
sub
cmpsl
xor
push
or
cmp
inc
sahf
dec
xchg
pop
sti
rorl
sub
gs
xor
imul
jl
and
insb
nop
add
aas
jnp
icebp
inc
imul
repz
push
mov
adc
and
adc
dec
push
mov
in
cmpsb
push
jg
adc
ret
aaa
xor
cs
jae
and
cwtl
movsb
int3
adc
jmp
adcl
call
jmp
imul
pop
pushf
mov
mov
push
hlt
std
adc
or
xor
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
loope
mov
jle
jno
jle
mov
insl
inc
ds
dec
sbb
call
out
outsl
inc
or
mov
jb
cmc
es
hlt
push
unpcklps
mov
lock
jnp
jnp
jge
and
push
add
sub
filds
xor
in
or
dec
push
cmpsb
aaa
rolb
push
dec
jae
inc
stos
jno
push
je
jbe
aad
dec
push
das
adc
cmc
outsl
pop
and
popf
lods
jb
mov
jae
add
dec
mov
xor
xchg
enter
imul
andl
xor
inc
cmpsl
jns
pop
lock
cmp
inc
jns
mov
sub
stos
inc
scas
pop
mov
fdivrl
insb
push
call
mov
inc
pop
inc
pusha
xchg
cltd
adc
in
sti
pop
ja
jns
push
in
dec
jbe
push
cmp
stos
cmpsb
add
push
test
cmp
add
enter
popa
sub
andl
sub
xor
cmpl
dec
leave
dec
xchg
jo
shlb
or
sbb
out
pop
test
sub
clc
icebp
leave
mov
xor
idiv
movsl
xor
add
push
int3
movsb
outsl
fsubl
push
jno
push
leave
push
fistpl
jno
push
adc
fstpt
fidivrs
pop
loopne
mov
mov
xchg
std
mov
dec
test
add
adc
and
rorl
loop
xor
or
addr16
sub
xor
add
fsubrp
cmp
dec
push
xchg
out
lods
adc
std
mov
jno
sub
push
sbb
insl
cmp
arpl
inc
xchg
mov
lods
in
xchg
and
arpl
ret
ja
cld
xchg
lret
mov
mov
and
cltd
ficoml
int
addr16
jp
cmp
jnp
jbe
jge
xor
int
pusha
mov
dec
cmp
cmpsb
cmp
push
pop
repz
xchg
pop
cmp
aas
out
pop
xchg
int3
insl
in
jp
stos
loope
pop
sbb
popa
xchg
mov
outsl
mov
mov
je
lret
mov
adc
add
nop
divb
pop
sub
and
add
mov
mov
mov
aam
lret
jno
dec
cmp
push
jo
lret
scas
push
stc
fwait
popa
mov
movsb
cmp
dec
and
dec
pushf
adc
mov
int3
xchg
push
sbb
cmpsb
mov
mov
xor
in
lcall
lods
mov
sbb
pusha
lods
sbb
add
or
mov
push
test
mov
jbe
xor
test
in
test
mov
jge
aad
jo
fs
and
clc
xchg
lret
iret
cmp
mov
or
outsb
fildl
mov
or
cld
dec
jmp
sbb
pop
dec
cwtl
dec
or
rorb
add
jb
jg
popf
pusha
fistps
add
xor
inc
das
ja
jg
mov
sub
imul
pop
js
divb
movsb
orb
scas
xor
mov
push
cmp
add
ret
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
movzbl
jle
mov
jle
ffree
jmp
inc
fldpi
push
lret
mov
or
sbbl
into
adc
push
cld
pop
js
or
icebp
scas
jb
aaa
sub
sarb
mov
inc
push
xchg
jno
lds
popa
addr16
lock
jecxz
inc
fisttps
inc
aam
int3
mov
jbe
xor
mov
jae
loopne
in
dec
pop
dec
pop
arpl
stos
sub
mov
cmp
sbb
dec
shll
add
mov
stos
pop
dec
sahf
cmp
mov
in
cs
aam
lods
push
pop
adc
jo
cwtl
shll
lahf
inc
cmc
test
lods
and
jns
popa
pop
sbb
jle
jb
jbe
insl
int
adc
daa
aad
inc
inc
dec
dec
shrb
mov
pop
cld
inc
jo
dec
lcall
jnp
sahf
cltd
int
in
mov
std
cld
push
mov
sbb
test
mov
adcl
fidivl
leave
or
pop
test
jno
out
jbe
int3
xchg
in
data16
arpl
repnz
mov
mov
loope
arpl
loopne
jbe
jo
mov
in
mov
hlt
xor
stos
cltd
lods
or
cli
imul
jb
mov
inc
adcb
dec
jne
in
jno
out
les
xor
and
mov
ret
sub
add
dec
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
push
jb
ret
adc
mov
jle
pmullw
fisubrl
jecxz
mov
dec
sub
xchg
jp
sahf
sbb
mov
sahf
fnstsw
hlt
outsl
xchg
sub
es
test
out
mov
mov
jae
ret
loope
inc
dec
adc
int
lret
adc
dec
jnp
mov
dec
gs
outsl
lret
rcl
push
int
jb
pop
leave
fwait
xchg
shlb
mov
lock
add
stos
xor
push
test
aad
loop
test
jb
repz
sub
fmul
into
push
fadds
test
stos
cltd
xor
ss
fisubrs
sti
mov
es
rorb
cwtl
inc
pop
jne
js
push
scas
dec
jl
and
push
adc
sbbl
stc
mov
iret
adc
mov
push
je
jp
cwtl
js
push
mov
jle
call
cli
sub
arpl
mov
adc
leave
xchg
xchg
sahf
mov
inc
push
dec
and
xchg
pop
inc
inc
xor
jbe
push
test
mov
lods
dec
stc
stos
int
addr16
repnz
mov
jb
and
pop
mov
cwtl
xor
xor
xor
sbb
lods
mov
outsb
je
xchg
lea
ret
mov
dec
push
add
inc
pop
por
lods
in
sbb
shrl
dec
sub
roll
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
mov
rcll
cmp
sbb
out
imul
xor
fs
js
pop
cwtl
fadds
int
js
inc
ljmp
mov
fwait
inc
pop
cmp
movsl
movsl
ficomps
dec
aaa
test
icebp
cmc
dec
je
enter
push
dec
iret
sahf
jl
mov
jae
xor
icebp
add
inc
insl
sub
cmp
mov
jne
insl
xchg
cmp
mov
inc
rorb
into
je
mov
or
inc
push
pop
cmp
or
xchg
enter
scas
sub
sbb
jns
mov
sbb
sub
out
mov
dec
call
stos
mov
pop
ficomps
mov
mov
mov
dec
pop
out
lods
lret
or
daa
push
shl
imul
add
sub
and
rcll
test
sub
cmp
fistpl
sahf
jge
pop
inc
std
lock
ljmp
std
xor
xor
imul
xchg
pop
pusha
shrb
mov
test
mov
pop
dec
add
es
imul
in
inc
mov
dec
jmp
pop
inc
mov
sbb
or
xor
fcoml
dec
fisttps
aam
inc
aaa
push
lret
mov
mov
mov
pop
push
add
shlb
clc
jmp
xchg
push
int3
jns
imul
fsts
mov
mov
jle
or
ret
cmp
xchg
ljmp
dec
mov
mov
pushf
gs
shll
pop
fsubrp
dec
cmp
xchg
ret
lods
push
decl
ror
jmp
repnz
inc
mov
push
dec
into
popa
push
mov
xchg
pushf
cmp
jno
mov
mov
fidivl
into
dec
jno
into
ficoms
cltd
sti
fidivrl
jmp
stos
hlt
xchg
add
push
mov
jno
xlat
das
and
aaa
mov
shrl
negb
adcb
push
and
mov
je
inc
mov
mov
sti
int3
ja
xchg
or
pop
nop
pop
das
inc
in
sarb
outsl
inc
pop
imul
mov
push
pop
jns
lret
rcrl
test
mov
nop
ss
ret
xlat
call
lahf
mov
push
aas
jp
popa
repz
outsb
scas
push
in
mov
sub
into
dec
out
inc
iret
std
in
cmp
jae
aam
push
add
mov
sahf
mov
testb
push
push
dec
pusha
aad
popf
mov
loope
cwtl
cmp
pop
lret
scas
or
pop
stos
rcrl
xchg
jle
lahf
lret
xchg
scas
adc
sahf
dec
bound
nop
mov
inc
push
sub
add
movsl
in
inc
cltd
out
gs
ss
sbb
jecxz
lcall
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
xor
jle
mov
jle
or
add
mov
aad
lock
mov
pop
xor
clc
loop
cli
rclb
cmp
insl
dec
idivl
stos
adc
sbb
das
cmpsb
cmp
mov
jcxz
push
cmp
ss
push
jae
cmp
or
into
xchg
pushf
add
dec
push
fildll
das
or
sbb
xchg
sub
les
mov
push
dec
dec
in
fisubrs
outsl
cltd
outsb
dec
jmp
jecxz
dec
mov
pop
test
jecxz
fldl
arpl
movsb
es
mov
lcall
imul
xchg
mov
cmp
and
test
cwtl
jbe
int3
add
sbbb
jne
cmc
mov
cs
jl
and
xor
mov
fs
inc
imul
mov
sarl
leave
int3
inc
fcmovb
call
ret
pop
mov
pop
push
jne
into
pop
rolb
sub
pop
scas
sub
mov
mov
imul
sbb
into
push
js
fcmovu
inc
out
xor
inc
jo
and
pushl
data16
stos
push
dec
sub
push
test
push
mov
inc
ja
jnp
add
shl
outsb
andb
xchg
mov
out
jnp
dec
out
addr16
lods
cmp
and
xor
inc
cld
push
jnp
je
mov
sbb
loope
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
loope
imull
jle
mov
jle
sbb
inc
jg
xchg
sub
xchg
outsl
mov
push
cmp
out
pop
sbb
and
sbb
mov
lea
xlat
les
mov
lret
sahf
fdivrp
mov
jmp
outsl
nop
test
fldl
rcrl
fs
inc
pop
in
push
lods
sarb
sbb
dec
inc
popa
sub
sar
mov
xchg
mov
stos
div
mov
mov
jle,pn
inc
mov
cmp
jnp
es
js
aam
lods
pop
sti
add
jbe
aaa
mov
int
shll
push
adc
movsl
mov
push
into
mov
mov
jns
dec
jmp
mov
aad
or
cmpsb
jp
mov
push
adc
sub
cmp
xor
push
cmp
sub
sub
mov
lret
je
shrl
rcr
adc
pop
lcall
out
xchg
in
dec
jmp
shlb
sub
ja
je
lods
mov
and
nop
xchg
sbb
sub
flds
cmp
iret
addl
or
js
stos
adc
das
test
daa
insb
or
sub
aad
lcall
xchg
pop
mov
lock
sahf
jb
cli
mov
jg
inc
enter
add
mov
mov
mov
mov
jmp
andb
addw
sub
jle
mov
jle
in
pop
mov
push
push
lods
hlt
popf
mov
jae
mov
inc
outsl
mov
test
or
nop
repnz
sbb
cli
rcll
stc
or
adc
jle
lret
mov
rol
mov
lea
jnp
push
movsl
cs
pop
das
lea
jnp
sbb
sbb
cmp
test
into
lahf
mov
or
arpl
push
into
flds
rcr
ror
mov
xchg
in
push
mul
bound
popa
and
mov
mov
adc
cmc
push
mov
mov
push
push
xchg
jmp
dec
inc
out
incl
dec
mov
cmc
cltd
rclb
enter
popa
inc
notl
fsub
mov
jecxz
addr16
in
jno
push
mov
jno
pushf
arpl
mov
repnz
ja
pop
sbb
out
adc
into
mov
mov
ud1
leave
jp
inc
dec
push
pop
call
nop
mov
dec
rclb
pushf
push
ja
cmp
push
rorb
mov
out
jmp
jno
lahf
std
xor
pop
scas
sbb
mov
pop
int3
je
pushf
or
movsl
into
lahf
lds
adc
and
jbe
aaa
fwait
outsb
in
repz
adc
imul
dec
inc
clc
sbb
popa
xchg
adc
xchg
xchg
xor
add
jmp
test
xor
push
mov
xor
sub
jle
jg
jle
add
jnp
mov
push
mov
lret
test
push
cmpsb
daa
inc
mov
test
and
cmpsl
sub
push
or
push
sbb
outsl
dec
mov
push
sahf
data16
pop
xchg
pusha
sbb
or
ficompl
lret
pop
arpl
push
arpl
jg
jb
mov
frstor
sub
outsl
nop
dec
push
mov
sbb
ljmp
add
fmul
daa
int3
push
adc
imul
arpl
call
mov
jbe
mov
out
cld
jge
add
inc
outsl
scas
into
inc
sahf
in
cltd
fidivs
dec
fcompl
jmp
mov
es
stc
fwait
lret
decl
incl
test
pushf
in
repz
dec
js
fcmove
imulb
cmpsb
dec
mov
or
pop
sti
add
jge
pop
andb
xchg
dec
push
mov
mov
xchg
in
fists
lcall
loopne
and
jecxz
popa
inc
mov
mov
hlt
mov
dec
rcrl
aaa
sbb
das
lcall
sbb
jmp
dec
jnp
adc
fisubrl
out
sub
adc
jno
pushf
je
das
push
add
add
lods
jle
jns
call
insl
pusha
rcll
sub
pop
aam
leave
sbb
loope
int3
sbb
fsubrs
mov
mov
sbb
insl
and
dec
jb
xor
aas
cmpsl
adc
pop
aad
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
inc
xor
jle
jg
jle
pop
and
cwtl
dec
sub
mov
add
mov
sahf
sub
cmpsl
and
cmp
les
iret
jb
dec
mov
scas
xor
pop
out
push
and
pop
dec
out
dec
pop
pop
out
in
stos
mov
pop
inc
daa
int3
mov
rorl
mov
dec
nop
loop
adc
jecxz
mov
pop
movsb
mov
adc
or
dec
pop
ds
pop
push
inc
adc
pop
jl
imul
jbe
adc
mov
pop
jbe
in
pop
imul
xchg
pop
jno
fmuls
shl
imul
inc
fmul
into
mov
inc
jl
jp
cli
test
push
cmc
sub
shll
sub
cmp
pop
jp
lock
outsl
andl
fiaddl
lods
sub
adc
in
test
dec
cld
jne
and
sbb
xchg
imul
add
cwtl
xor
scas
loope
push
popa
popa
jnp
sti
sbbb
into
push
adc
addr16
xchg
or
cmpsb
dec
or
adc
sti
testl
loopne
adc
mov
xor
xchg
pop
loopne
pusha
cli
cld
stos
test
pushaw
adc
out
int3
jno
inc
push
xchg
cmpb
je
xor
ret
sub
call
jle
add
adc
or
xor
pop
in
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
imul
das
jle
mov
jle
mov
jge
or
xchg
sbb
sbb
xchg
jmp
and
cld
sub
repz
mov
xchg
mov
fistpl
xchg
and
rorl
leave
mov
mov
dec
pop
mov
dec
ret
ds
dec
or
shl
lods
xor
push
daa
mov
mov
mov
jo
mov
cmpsl
mov
repz
dec
inc
pop
fs
arpl
jecxz
imul
bound
push
inc
rcrb
shrl
mov
xor
lods
lcall
clc
jae
sub
mov
arpl
int3
and
sbb
test
sbb
nop
icebp
mov
je
cmp
mov
cmpsb
mov
push
fdivs
rcr
leave
jb
pop
and
pop
js
sbb
fisubl
sti
scas
push
mov
pop
aas
sub
scas
inc
cmpsl
xor
aam
test
pop
jb
mov
lods
test
pop
imul
in
dec
cmc
out
imul
fwait
pop
mov
xor
jp
push
jns
lock
mov
test
test
pop
jo
xchg
fwait
daa
mov
enter
jle
les
shlb
xchg
ljmp
add
fidivl
fldt
inc
fmull
std
std
fnstsw
dec
inc
test
jle
into
gs
xor
add
imul
jmp
mov
jns
dec
mov
in
je
enter
mov
jle
int3
rorb
repz
pop
cmp
pusha
and
fistps
or
push
mov
mov
xchg
mov
je
cmp
shrl
mov
aam
rorb
inc
fdivr
cmp
pop
in
stos
jge
push
sbb
sti
lods
sbb
lea
es
cld
cmp
loope
pop
fwait
mov
xor
and
sub
xor
out
sahf
xor
test
scas
and
sbb
and
js
std
mov
lret
dec
mov
outsl
cmp
push
nop
jge
mov
shll
test
mov
imul
adc
adc
nop
push
xchg
rolb
stos
cwtl
into
pop
lea
jae
inc
pop
int3
lret
jnp
xor
lahf
mov
or
pop
ret
lret
pop
jo
sti
and
and
mov
add
mov
adc
mov
fstps
data16
out
in
cmpsb
int
adc
outsl
mov
shll
fdivr
stos
and
adc
sub
rolb
sub
push
xchg
leave
icebp
movsb
adc
mov
push
mov
test
xlat
push
sbb
push
add
xchg
or
dec
push
inc
jmp
call
lods
xchg
mov
in
and
mov
xor
mov
movsl
fdivrl
jmp
in
out
enter
test
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
and
jle
mov
jle
mov
popf
push
imul
addl
lcall
sbb
xchg
inc
jnp
cwtl
lds
inc
es
fs
imul
js
insl
push
repnz
xchg
cmp
xorb
or
inc
fiadds
mov
insl
out
mov
mov
fisubrs
mov
shrb
mov
dec
sub
sahf
xor
or
push
push
inc
into
pop
mov
add
push
cmp
lods
sub
jne
inc
daa
mov
sub
bndldx
mov
cltd
movsl
repnz
mov
or
push
ds
or
fsubrs
int
aas
pop
aas
push
repnz
out
pop
cmpsl
neg
out
stos
fadds
sbb
adc
sbbl
repnz
mov
roll
push
ss
jg
mov
dec
jbe
mov
mov
pop
push
and
imul
or
hlt
pop
mov
and
ds
xchg
xchg
ret
mov
stos
cmpsl
lret
leave
mov
repnz
rorb
jae
or
loopne
movsb
out
jno
cmp
inc
sub
and
push
jg
arpl
shlb
in
in
add
xchg
xchg
xor
and
repnz
adc
xchg
inc
lcall
pop
mov
or
lret
js
push
movsb
lock
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
ret
jle
mov
jmp
jo
mov
fiadds
daa
inc
xchg
jo
loope
test
imul
xchg
sahf
lock
pop
mov
addr16
fimuls
gs
imul
sbb
in
push
push
test
out
add
add
mov
xorl
mov
push
pushf
aaa
pop
push
cltd
cmp
mov
pushf
cmpsb
das
movsl
push
repnz
aad
mov
dec
xor
mov
adc
push
movsb
mov
jbe
ds
sub
dec
jecxz
paddd
je
jbe
dec
inc
fbld
popf
push
test
push
dec
int3
inc
leave
bnd
and
addr16
fwait
ds
outsb
jae
adc
aam
aad
xchg
or
pop
es
mov
gs
pop
dec
or
pusha
loope
call
mov
adc
lea
popa
jge
stos
repz
push
ret
mov
sub
mov
sti
or
inc
cmp
xor
xor
jnp
and
bswap
xlat
bound
test
movsl
sbb
pushf
push
mov
movsb
or
mov
cld
or
add
pop
fisttps
and
mov
xor
push
mov
dec
fisubrs
jmp
jno
lret
inc
stc
rcr
stos
xor
adc
xchg
pop
cwtl
fadds
xor
in
test
fiaddl
add
outsb
das
mov
ret
mov
cmp
std
inc
jge
fistpll
push
push
cmp
flds
push
inc
push
pop
xor
adc
insl
or
test
jnp
cmpsl
xacquire
xor
mov
cmp
sub
mov
inc
xchg
int
andb
mov
aas
push
es
mov
jns
pushf
in
int
inc
call
jmp
pop
push
adc
mov
addb
or
rcrl
and
inc
jecxz
mov
cmpsb
jne
adc
and
les
adcl
pushf
xchg
jle
clc
or
mov
fs
call
add
xor
ret
cli
sbb
and
add
push
adc
mov
adc
lret
mov
test
xchg
in
jecxz
sub
and
add
cltd
pop
xchg
call
daa
stos
in
stos
or
xlat
adc
pop
lea
stc
ljmp
adc
mov
inc
stos
mov
push
mov
sub
out
push
fisubrs
pop
aad
cli
sub
pop
aaa
sbb
ljmp
leave
ljmp
sbb
jbe
add
and
inc
and
insl
adc
cwtl
push
jne
mov
mov
outsl
push
push
and
mov
shr
out
jne
and
adc
jae
sub
mov
hlt
mov
inc
mov
jle
loop
jle
ffree
jecxz
jo
out
jno
mov
rolb
xchg
cmp
std
in
idivl
lret
ljmp
xchg
add
pushf
xchg
outsl
dec
scas
inc
dec
aam
shlb
and
mov
push
cmp
xlat
sti
fsubrl
mov
pop
jne
testl
outsb
cmp
xor
insb
cmp
int
in
mov
imull
dec
push
je
pop
xor
nop
pop
iret
mov
add
lret
cli
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
ljmp
jle
movsl
arpl
bound
mov
mov
push
enter
mov
pop
or
into
adc
dec
imul
ja
and
loop
dec
cmp
out
and
mov
stos
fistpl
xchg
dec
jle
mov
negl
test
and
test
xchg
inc
sub
pop
psrlw
enter
les
push
aam
ja
or
push
pusha
jo
cld
push
jge
push
lcall
push
fbstp
inc
leave
fsubl
call
shll
iret
push
fcmovnu
aaa
cmpsl
andl
pop
mov
test
insl
nop
or
scas
das
inc
push
add
mov
movsl
lods
stc
inc
rcrl
push
aaa
xchg
add
clc
out
push
adc
insl
mov
push
lret
mov
jb
sub
jnp
jecxz
hlt
sbb
cltd
mov
sbb
inc
lahf
xchg
outsb
fwait
std
dec
xchg
jns
jnp
into
cmpsl
call
cmp
dec
std
xchg
mov
inc
xor
nop
mov
and
sbb
ja
mov
push
mov
addb
mov
icebp
shrl
xchg
addr16
sbb
pop
aad
add
fs
iret
xlat
movsl
xor
lahf
mov
add
push
cmpb
inc
xor
dec
and
inc
stos
sbb
push
adc
into
or
lret
pop
push
ffreep
mov
repnz
xor
cmpsb
pop
mov
mov
outsb
stos
imul
mov
xor
lcall
push
and
or
and
dec
pop
gs
clc
add
jno
test
in
mov
push
inc
xchg
jmp
push
jecxz
sbb
push
loop
cld
sbb
hlt
dec
test
jbe
jmp
jmp
sahf
add
and
scas
ja
or
xchg
xchg
jecxz
jge
faddl
fnsave
sti
repz
icebp
fldt
int3
cli
das
out
cmp
jns
int3
jae
test
sti
inc
cld
mov
outsb
xchg
andl
pop
mov
pop
xchg
push
bound
subb
leave
lods
inc
or
jp
leave
mov
mov
ljmp
pop
sbb
icebp
dec
mov
cmp
xor
outsl
cmc
in
pop
cld
rclb
outsl
dec
in
outsl
sub
bsf
sub
jg
lock
pop
fidivs
clc
inc
xor
cmp
xchg
gs
mov
pop
inc
nop
fldenv
fstps
scas
jge,pn
shlb
inc
jb
xchg
iret
push
imul
mov
inc
inc
add
and
jb
xchg
addr16
pop
adc
in
ficoml
sbb
aad
sbb
mov
scas
mov
std
loopne
xor
test
inc
or
test
test
xchg
adc
dec
and
add
outsl
cmc
stc
mov
je
pop
jae
out
add
add
jl
or
icebp
in
lret
loop
cltd
cmp
mov
ljmp
push
pop
adc
lcall
out
push
xor
xor
mov
ds
cs
fnstenv
lcall
pop
fisubrl
jmp
inc
icebp
ds
or
arpl
hlt
jmp
ja
loop
popf
sub
mulb
rcl
push
les
lret
scas
lret
pusha
pop
add
mov
jae
clc
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
sub
sti
push
cmp
mov
or
or
fdivrs
inc
int3
lds
es
cmp
jae
rclb
jo
out
mov
cmpsl
mov
jmp
add
es
shlb
and
push
add
loopne
into
lahf
cmc
data16
lods
push
ret
pop
outsb
sbbb
gs
cmpl
push
in
dec
jne
mov
daa
loopne
cmp
aas
imul
ja
fnstenv
std
jmp
inc
xor
jbe
stos
insb
cs
mov
sub
dec
and
nop
paddsb
pop
cmpsl
dec
sahf
out
lahf
jg
push
insb
push
xchg
push
inc
sbb
es
loope
fadds
fcom
lea
iret
lods
add
jb
dec
mov
and
arpl
inc
mov
loope
adc
dec
inc
xchg
dec
rcrl
xor
sarl
idivb
add
dec
adc
jecxz
push
lea
xchg
and
lods
jo
push
cli
ds
into
hlt
popf
addr16
jecxz
cli
ja
sbb
or
insl
jns
inc
jl
xor
push
in
push
mov
xchg
adc
daa
test
xchg
cmp
mov
mov
je
ljmp
aas
ret
and
or
mov
lcall
rcr
mov
lea
out
cmpsb
mov
in
mov
push
mov
outsb
push
scas
cmc
fisubrl
ret
imul
lret
push
test
xor
mov
loop
and
repnz
repz
push
mov
or
jecxz
in
mov
jecxz
ss
mov
leave
adc
jnp
jg
stc
xchg
pop
mov
mov
outsl
push
mov
daa
cmp
mov
sahf
dec
repz
inc
xchg
lods
pop
inc
rorl
adc
jae
jmp
jle
sub
mov
cli
call
push
and
lock
pop
mov
mov
mov
out
mov
es
test
dec
lcall
mov
dec
mov
into
arpl
and
cmp
shll
popl
shl
stc
sub
push
mov
fs
clc
push
or
loopne
pop
int
jge
flds
cmpsb
les
cs
xchg
jg
adc
add
pushf
add
pop
dec
lock
shlb
lock
add
out
inc
aad
loop
adc
inc
aaa
mov
das
pop
rcl
xor
sbb
pop
push
pop
mov
inc
ret
mov
mov
jb
add
ja
and
xor
sbb
mov
push
push
cmp
outsb
mov
mov
fstl
jle
push
mov
addl
mov
cld
imul
incl
cmpsb
stc
hlt
add
scas
dec
dec
mov
loop
jo
psrad
sar
aam
paddusb
and
lds
ficomps
jb
std
scas
psubd
cmc
push
in
jmp
addr16
xchg
lret
les
sbb
movsb
enter
mov
sbbl
and
test
jp
add
or
fs
jl
pusha
out
pop
push
cli
lock
sbb
jae
pop
mov
add
inc
or
mov
dec
jmp
add
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
xchg
fsubl
test
aas
jle
mov
ficompl
mov
mov
fisubs
fcompl
cs
xchg
mov
sbb
add
xchg
dec
imul
nop
outsl
call
popf
test
xchg
jae
xor
cwtl
and
cs
ss
mov
lods
js
fmull
outsb
mov
xchg
ds
cmp
push
ss
push
push
enter
out
cmp
bound
sti
pop
sahf
push
daa
stc
jns
sbb
cmpsl
add
pop
push
and
daa
dec
and
xchg
js
jbe
test
test
lret
addr16
fistpll
das
jge
scas
fnstenv
scas
xchg
cmp
inc
arpl
sub
push
pusha
mov
sbb
scas
cmp
fcomps
adc
sub
mov
push
inc
test
jo
enter
fildl
xorb
xlat
call
jno
cmpsb
adc
pop
in
inc
sbb
xorb
and
inc
or
mov
aam
fists
movsb
ror
inc
jbe
movsl
lods
aam
fiaddl
mov
cld
sbb
sbb
jmp
mov
push
ret
nop
sbb
or
pop
bound
pop
add
jecxz
xor
stc
lods
imul
popf
and
xchg
in
xor
rcrl
mov
repz
mov
call
xor
ljmp
pop
fnsave
add
lods
xor
call
xchg
xchg
fsub
sub
dec
mov
lods
pusha
rolb
inc
sahf
nop
cli
test
cltd
push
movsl
xchg
into
imul
das
into
jmp
xchg
nop
inc
adc
dec
add
cli
add
xchg
xchg
adc
test
daa
cwtl
lock
pop
scas
sbb
pop
es
and
andb
fists
rcrl
push
fimull
das
push
xchg
js
jne
pop
andl
test
enter
add
aaa
xor
cmpsl
ss
push
mov
mov
sub
mov
ja
xchg
loope
fnstsw
dec
dec
jns
inc
xorl
negb
and
es
jge
push
mov
xchg
scas
push
jecxz
push
xchg
int
das
mov
rol
pop
add
fs
mov
xchg
popf
add
push
aaa
rorl
outsb
sbb
fwait
repnz
ljmp
cld
arpl
pushf
adcl
dec
repnz
cli
xchg
jbe
sub
sahf
xor
mov
sbb
push
pop
inc
xor
into
cwtl
or
xchg
imul
jp
or
imul
jmp
cmp
mov
inc
xor
cld
cld
add
stos
stos
dec
in
fistps
xchg
or
and
xor
outsl
idivb
xchg
testb
test
inc
sti
test
lcall
xchg
test
mov
popf
rep
sbbl
aaa
and
nop
inc
lret
pop
pop
ret
mov
rorb
and
pushl
or
mov
loop
xor
jbe
sbb
andl
adc
std
fstl
and
loopne
or
sub
or
fsubl
outsb
adc
movl
pop
push
jle
push
mov
outsl
cmpsl
jp
imul
lcall
dec
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
dec
jg
stos
stos
fs
push
mov
lret
mov
dec
adc
scas
lcall
mov
movsb
xchg
xchg
mov
xor
pop
and
cmp
int3
lods
and
dec
mov
xor
insl
ret
pop
sbb
inc
dec
es
popa
aas
mov
xchg
int
push
div
ds
ss
inc
les
push
dec
jae
sbb
imul
dec
lea
mov
jecxz
int
call
clc
inc
pop
pushf
xchg
in
mov
jnp
mov
sbb
fcmovnu
jo
shrl
nop
lret
and
repz
push
cltd
scas
pushf
mov
pop
xchg
xor
jno
bound
mov
pop
rorl
mov
cs
outsl
adc
xchg
sbb
mov
jne
ja
ja
cmp
pop
mov
loop
add
pusha
sti
xor
lds
mov
stos
int3
or
icebp
sbb
xor
dec
shll
out
aad
aad
outsl
js
movsl
adc
pop
clc
xchg
and
repnz
pop
addb
cwtl
mov
in
aaa
test
xor
add
and
add
jno
or
nop
rorb
jle
ja
push
idivl
out
shlb
adc
lcall
pusha
imul
inc
ret
movsl
or
xchg
and
push
inc
int
xchg
jmp
xchg
rorl
cmc
or
clc
fistl
rclb
loope
and
push
std
sbb
jns
test
adc
dec
orb
hlt
adc
lods
add
mov
xchg
push
inc
inc
lahf
imulb
outsl
add
xor
add
or
xchg
dec
ds
loope
test
je
insb
dec
adc
imul
fsts
add
push
jmp
xchg
xchg
cli
mov
fwait
or
leave
mov
imul
aas
popa
sub
push
iret
mov
ret
daa
pop
lds
test
xor
xchg
sbb
rclb
pop
xor
sub
out
lret
add
pop
sti
jg
xchg
inc
movsl
fdivrl
jmp
sbb
ficoml
push
push
adc
scas
nop
arpl
push
xchg
push
testl
out
jle
and
jbe
je
addr16
lret
rorl
adc
arpl
in
dec
bound
jle
sub
insl
loop
rol
mov
fidivs
sbb
mov
sbb
insl
pop
adc
vcmpsd
push
gs
movsl
pop
jns
jecxz
out
xchg
adc
push
roll
add
call
jnp
ja
jecxz
bound
test
push
pop
cs
jge
mov
jno
popa
daa
dec
mov
adc
orb
rcrb
jg
mov
stos
xchg
fimuls
imul
mov
xchg
out
imul
inc
imul
cmp
mov
sbb
pop
pop
sahf
js
add
mov
iret
sti
xchg
scas
cmpsl
or
or
push
add
inc
mov
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
jae
xchg
dec
ss
jmp
jle
repnz
faddl
shrb
jae
mov
dec
mov
adc
outsl
loop
inc
icebp
repz
mov
sub
cmp
dec
pop
jge
xor
call
outsl
aaa
outsb
cwtl
sub
rcrl
idivl
loopne
fbstp
cmpsl
int
sub
mov
divl
imul
mov
scas
mov
cmp
lret
mov
push
adc
leave
test
xor
mov
push
stos
pop
dec
pusha
jae
bound
test
push
lock
aam
mov
sub
push
loop
das
mov
movsl
je
shl
sub
cltd
or
stc
stos
repz
push
inc
push
mov
xchg
xor
mov
xchg
xchg
aam
test
xlat
pop
in
aaa
cld
xor
cmp
push
mov
cmc
cs
imul
aam
cs
popf
in
mov
push
mov
outsb
or
lea
mov
jge
push
adc
dec
loop
stc
dec
shll
push
roll
outsl
movl
dec
ret
in
push
scas
add
ja
push
addr16
out
mov
inc
or
push
out
mov
xchg
clc
es
dec
ret
and
sti
fdivr
cmp
stos
jl
outsb
pop
aad
push
ret
cmp
adc
push
sti
push
mov
sbb
pop
jmp
cltd
xor
mov
mov
add
aam
sbbb
subl
nop
insl
mov
lret
hlt
and
jge
testb
sbb
insb
movsl
jnp
mov
cld
mov
push
push
outsl
je
les
fcmovnu
cmp
ljmp
pop
jbe
pushf
daa
mov
jo
mov
pop
pop
mov
adc
mov
lahf
arpl
ljmp
push
std
inc
push
fwait
mov
xchg
inc
pop
fsub
sub
int
add
mov
imul
mov
pop
fxch
cs
cmpsb
cs
cltd
je
add
mov
lock
mov
xlat
cmp
andl
sub
std
mov
add
mov
and
and
ljmp
sub
cmp
mov
popf
cltd
xchg
xchg
or
xor
aam
das
sti
mov
jae
loopne
inc
cmp
inc
dec
mov
bound
rolb
dec
push
mov
sti
pop
mov
cmp
cmp
xor
mov
std
inc
ret
and
push
cmpsb
fcoml
mov
out
sub
or
mov
into
clc
jmp
pop
push
aas
push
dec
push
dec
jno
sbb
jle
xchg
je
add
pop
sbb
out
popa
mov
mov
into
cmpb
push
filds
lret
shll
nop
bound
adc
mov
mov
enter
test
sbb
sbb
mov
jle
mov
sarl
loop
xchg
iret
imul
xlat
lock
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
add
outsb
cmp
jle
jmp
jle
push
popa
jns
iret
mov
icebp
lods
in
or
inc
jne
rcrb
stc
pop
aam
call
addr16
int3
sti
adc
cltd
inc
mov
adc
lret
jle
repnz
sub
mov
aas
in
stc
push
cmp
lods
out
push
rcrl
mov
xlat
pop
in
fcomip
sbb
lahf
jae
jmp
cltd
sbb
inc
cld
and
push
leave
out
fwait
dec
jle
into
pop
push
or
sti
xor
mov
mov
mov
test
lods
jne
inc
scas
mov
incb
dec
add
cwtl
mov
adc
iret
adc
out
mov
add
clc
mov
das
test
sub
jnp
ret
ret
sti
arpl
mov
adc
lret
cwtl
push
xchg
in
jl
push
ss
stc
gs
pop
cltd
lods
daa
out
or
movsl
push
mov
loop
push
jmp
mov
aaa
ret
popf
xchg
into
xchg
cmpsb
mov
xor
outsb
int3
or
sub
ljmp
jne
push
lcall
icebp
or
add
inc
push
adc
sbb
add
pop
hlt
mov
cs
aaa
dec
pop
push
cwtl
aad
decb
mov
out
cmp
fldt
mov
sbb
xchg
xlat
dec
cmp
cmp
pusha
or
ret
cmp
and
xchg
mov
lock
dec
repz
fsubrs
and
insb
dec
inc
inc
jnp
push
or
inc
rcrb
cmc
adc
lret
test
movsl
loopne
out
js
pop
test
inc
rorl
cmc
mov
sti
scas
pop
pop
xor
daa
push
mov
pop
dec
xor
in
cmp
xor
loope
or
jb
xchg
subb
xchg
sti
shlb
in
pop
mov
mov
repnz
lcall
push
vcmppd
mov
aaa
nop
mov
and
xor
lret
dec
mov
xchg
xchg
mov
repz
sti
outsb
ret
fnsave
adc
mov
or
mov
add
adc
xchg
cmp
testb
movups
sbb
inc
push
flds
and
les
loopne
xchg
mov
mov
in
xchg
push
or
mov
int3
xchg
push
cltd
outsb
dec
in
je
mov
test
cmpsb
xchg
sbbb
sahf
mov
inc
test
je
enter
mov
adc
pop
jmp
std
cmp
and
stos
out
mov
cmc
lcall
and
insb
mov
test
shlb
mov
int
mov
mov
pusha
dec
sahf
lds
jo
xchg
dec
and
sahf
popf
js
ljmp
loope
icebp
sub
sbb
dec
mov
in
fisttpl
daa
cmp
pop
and
icebp
xchg
pushf
cmp
ret
xchg
cwtl
test
mov
insb
subl
stos
xor
inc
dec
push
aaa
sub
xchg
pop
rol
lods
mov
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
dec
test
fwait
cmp
int3
jnp
orb
inc
insb
imul
inc
psrld
push
dec
cmc
sbb
xor
in
xor
cmp
into
aad
push
pusha
jae
adc
adc
fldenv
lods
dec
jmp
or
push
loope
jp
repz
sub
cmovg
add
movsl
adc
int
dec
sub
xor
jo
add
push
mov
push
pop
xchg
cltd
push
nop
ret
insl
or
fcoml
cmp
out
pushf
fsts
mov
pusha
adc
dec
jns
mov
pop
jmp
push
arpl
adc
out
sbb
mov
add
inc
pop
sub
xlat
jmp
inc
push
push
pop
push
outsl
mov
and
aas
mov
pop
adc
cwtl
ficoml
cltd
fidivrs
fs
daa
sub
cmp
dec
jecxz
dec
aam
enter
mov
inc
je
das
fistps
faddp
xchg
dec
ja
in
insb
add
pop
movsl
mov
inc
scas
rorl
hlt
xor
sub
loope
shll
cmp
sub
add
xchg
xor
inc
dec
loopne
nop
aas
hlt
dec
cwtl
pmaddwd
test
push
fwait
rcr
ds
out
mov
sbb
in
mov
adc
gs
in
push
test
fisttpll
out
add
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
pop
lea
sarb
jle
mov
pop
out
movsl
or
push
push
mov
cmp
push
cmp
sub
lahf
out
mov
jge
jg
adc
daa
test
dec
dec
mov
subl
out
loop
cmp
test
addb
mov
jp
adc
push
insb
repz
push
and
sbb
cmp
adc
into
pop
or
les
mov
das
into
sbb
subb
jmp
mov
inc
ja
xor
dec
cwtl
dec
inc
sbb
test
shll
xchg
outsb
pop
sbb
hlt
mov
xchg
scas
push
mov
pushf
cmp
lahf
test
cmpsb
fisttps
and
adc
adc
aas
push
inc
adc
in
iret
mov
repz
cmp
shl
pushf
xchg
js
out
mov
aaa
in
lret
xchg
shrl
std
dec
outsb
jl
rep
icebp
jno
xor
test
xor
push
jbe
imull
ljmp
sub
mov
jle
in
push
pop
call
test
ja
mov
xchg
or
cmp
and
push
outsb
fnstcw
loop
mov
test
cmp
cmp
stc
dec
jo
mov
pushf
xchg
and
push
iret
mov
adc
inc
mov
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
sbb
sub
sarb
jg
jle
imul
mov
addb
lret
jns
xor
xor
mov
je
fwait
add
sbb
inc
out
nop
pop
lods
xchg
lods
in
and
in
fidivs
bound
dec
mov
xor
insb
lret
int
inc
fildll
and
mov
xor
stc
jae
data16
loop
gs
sbb
dec
bound
lret
stos
cmpsl
in
jl
lret
xchg
movsl
call
ret
push
in
cmp
aad
and
mov
pop
pop
or
rorl
scas
call
push
mov
push
xor
jl
mov
inc
outsl
and
and
inc
orb
dec
xchg
pop
out
mov
push
cwtl
dec
lret
push
mov
mov
mov
cwtl
leave
dec
push
adc
jne
xor
dec
cli
pushf
mov
cmp
jbe
cmc
xor
popf
iret
jb
outsl
dec
cs
mov
fsubs
ljmp
addr16
mov
jmp
les
mov
xor
mov
mov
adc
lea
adc
loope
insl
cmp
pop
repz
int3
pop
shl
jns
xchg
mov
xchg
xchg
xor
adc
loopne
loopne
sbb
xor
stos
into
mov
jg
and
cmp
jmp
fwait
pop
and
add
add
cmp
cli
vpaddw
incl
push
xchg
cs
sarl
jg
jle
jl
stc
mov
flds
or
pop
xor
and
cmpl
lods
xchg
test
cmp
xchg
adc
mov
cmpsb
pop
clc
sbb
add
shlb
ficoml
mov
leave
push
mov
sub
xchg
xchg
cmp
and
lret
ss
mov
xchg
cmc
mov
mov
sbb
pop
mov
fiadds
fucom
cwtl
sub
stos
into
les
xorl
rcrl
ret
outsl
pop
lcall
mov
cltd
mov
mov
dec
testb
es
push
ret
cmp
cld
or
int
test
pop
inc
ss
scas
dec
in
test
add
dec
lock
pop
es
mov
movsb
lods
and
adc
lret
mov
repnz
out
cli
pop
and
ds
inc
mov
jne
roll
fsubr
cmp
pop
pop
push
mov
ret
jle
in
push
dec
dec
stos
or
cmc
mov
jne
cs
xlat
inc
fwait
aam
and
incb
adc
add
in
pushf
jp
xchg
aad
fs
clc
roll
sub
into
mov
xor
mov
add
jmp
push
fsubs
pop
xchg
push
or
ret
jle
sarb
jle
out
imul
jl
hlt
mov
pop
cld
dec
add
jle
aaa
jbe
movsl
mov
xchg
push
add
rcrl
inc
pop
cltd
fs
sahf
sbb
mov
mov
jb
push
and
sub
ret
das
add
dec
inc
xor
jmp
hlt
lret
stc
xchg
aad
bound
cld
and
and
xchg
mov
xor
mov
mov
or
pop
sub
xchg
and
push
sbb
cwtl
push
test
sbb
std
outsb
or
inc
out
ret
mov
cmp
push
lcall
es
mov
jnp
push
adc
mov
stos
daa
mov
cmp
xor
lcall
dec
push
call
lcall
push
neg
pop
dec
das
mov
fclex
jmp
pop
in
cmpsl
sbb
jno
sbb
cmp
lahf
and
xchg
sub
loope
aaa
mov
lret
or
orb
lds
out
test
popa
and
xor
mov
jno
negb
lds
mov
push
push
xlat
mov
sub
mov
sarb
mov
movzwl
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
arpl
pop
cltd
les
sarb
jle
lods
lcall
mov
xchg
pop
icebp
mov
jl
lret
mov
loopne
sub
mov
test
setp
out
call
xchg
mov
cmp
inc
push
in
sbb
and
mov
inc
xlat
leave
sub
adc
bound
outsl
lock
push
jno
fnsave
sbb
int3
mov
fsubr
xchg
adc
mov
repz
adc
testl
cmp
mov
aas
bound
dec
stc
adc
xchg
mov
sti
push
fisttpll
mov
repnz
adc
loopne
lds
mov
add
jo
sbbb
cmp
cmp
pop
orl
sbb
add
stc
scas
ret
add
push
int3
xlat
inc
data16
roll
loope
jns
stos
push
and
dec
ljmp
mov
repnz
loope
fcoms
mov
pop
xchg
enter
push
cltd
addr16
push
dec
adc
shlb
inc
xchg
ljmp
and
sbb
or
test
mov
push
cmp
std
mov
lods
fiaddl
xor
mov
or
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
lahf
icebp
xchg
lds
sarb
jle
jecxz
mov
cld
pop
push
mov
enter
jmp
push
rcrl
lods
ficoml
sbb
mov
idiv
iret
lret
repnz
pop
jno
dec
fistpll
mov
dec
dec
sub
fbstp
hlt
sahf
mov
in
sbb
push
lea
push
adc
cmp
inc
lcall
adc
pop
cmpsb
mov
mov
loopne
cmpsb
and
paddd
and
xchg
mov
scas
int3
popa
or
arpl
pop
inc
js
mov
test
lods
out
shlb
push
cltd
pop
in
orl
shr
push
push
scas
into
add
sbb
es
outsb
sub
mov
add
add
add
mov
cmc
psubusb
fnstcw
stc
lret
sbb
push
lcall
xor
adc
lods
cmp
xchg
pop
adc
movsl
dec
mov
xchg
inc
in
adc
scas
mov
jnp
and
sarb
test
xchg
std
outsl
out
je
sarl
or
mov
push
int3
sbb
pop
mov
mov
sub
lcall
push
and
and
sub
xchg
imul
mov
jnp
mov
sub
pop
or
aam
cmp
adc
adc
roll
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
cmc
cmp
jle
jg
jle
jbe
daa
mov
mov
dec
cmpl
mov
mov
aad
pusha
push
inc
jae
mov
dec
mov
fstl
xchg
mov
les
jbe
stos
mov
std
inc
mov
jl
clc
pop
mov
outsb
fwait
mov
scas
data16
cli
lods
xchg
fnstsw
ja
xchg
outsl
jb
aaa
lahf
stc
jle
gs
xor
scas
jo
faddp
mov
mov
push
in
sti
dec
mov
push
pop
adc
movsl
xor
je
daa
int
aad
pop
stos
mov
sbb
jo
mov
in
lods
and
inc
pop
aad
mov
push
je
and
in
aad
jmp
push
pop
negb
sbb
lret
nop
fsts
xchg
xchg
mov
mov
push
push
lcall
ds
pusha
mov
or
xor
add
jp
out
je
jp
cld
mov
sub
mov
xlat
nop
fs
xchg
fdivrs
clc
ljmp
gs
sbb
js
mov
scas
adc
fs
push
std
pop
mov
data16
push
or
sub
out
xor
sub
mov
xchg
ror
adc
lret
xchg
xor
fs
enter
or
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
btsl
fdivrs
sarb
jle
scas
andl
es
ret
lock
xchg
push
xor
in
and
aad
test
leave
dec
stos
jl
stc
dec
mov
push
in
sti
inc
orl
adcb
pusha
push
or
cmp
dec
pop
test
jecxz
stos
pushf
nop
in
push
push
adc
push
das
gs
mov
leave
cmpb
into
daa
out
fisubl
scas
inc
les
sbb
jne
sbb
jo
sub
mov
loope
cs
pop
repz
pop
in
shrl
lret
pushf
cmp
subb
repnz
in
shrb
stc
sbb
cmpsl
xor
inc
mov
outsb
xor
rclb
jmp
cmp
sub
out
mov
xchg
ret
or
mov
jmp
into
push
and
test
adc
jbe
mov
and
sbb
mov
mov
je
cmp
adc
les
xchg
test
pop
push
pop
xchg
cmp
divl
movsb
xlat
inc
push
mov
dec
push
shll
fsubr
xchg
mov
out
push
mov
jo
adc
push
insb
test
xchg
stc
fcmovne
dec
out
mov
lds
fiadds
mov
push
dec
sub
jns
lods
jnp
add
cmp
sbb
nop
filds
int3
pop
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
jnp
and
jle
shr
loope
mov
ja
in
mov
inc
mov
jmp
test
push
jp
sbb
push
cmp
sub
add
repz
shl
sub
scas
dec
mov
mov
jp
sub
push
cmp
mov
jl
sub
and
jbe
repnz
lods
cld
xor
sbb
in
shll
in
push
mov
jmp
loope
in
loope
cmc
push
push
xchg
lds
andl
push
arpl
xchg
lret
fwait
adc
push
iret
sbb
sbb
mov
cltd
lods
nop
mov
sbb
and
and
jp
push
push
in
xor
adc
jge
iret
cmp
mov
xchg
loope
xor
fldl2e
pushf
dec
fs
aam
cmp
in
arpl
bt
fucomi
or
xchg
in
add
loope
inc
pop
push
orb
jbe
pushf
push
aaa
aaa
notb
xchg
and
and
out
mov
lock
int3
pop
push
add
add
xchg
pop
pop
mov
jmp
dec
mov
jb
push
es
lcall
out
shr
adc
inc
shlb
dec
mov
mov
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
push
sarb
jle
and
adc
lds
out
ret
outsb
dec
movsb
mov
adc
add
mov
sub
jl
pusha
cld
repnz
cmpsb
shrl
cld
pop
mov
push
push
setne
pop
out
mov
xchg
cmp
add
jno
mov
aaa
jl
outsb
fstl
mov
stos
cltd
push
lret
sbb
mov
pop
sub
inc
inc
lods
pop
arpl
jle
ret
adc
lea
xor
pop
push
and
loope
sub
push
sbb
adc
or
call
notl
dec
aas
and
cmp
or
mov
sbb
sub
push
stos
pop
cmp
das
jle
roll
loopne
stc
roll
adc
adc
lds
mov
and
scas
movsl
cmpsb
pop
scas
xchg
mov
les
push
sbb
lret
dec
lock
mov
xchg
mov
sete
outsb
dec
mov
adc
popf
in
inc
sarb
mov
push
push
add
int
in
and
mov
int
or
push
pop
sub
loope
push
cmpb
jmp
dec
jge
lsl
mov
xchg
test
sti
shll
jl
dec
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
lret
adc
popa
fdivrl
push
jo
jle
ja
sbb
repnz
dec
dec
sub
jnp,pt
popa
jle
mov
jo
aad
lahf
gs
sti
sub
fcmovnbe
fbld
jae
hlt
and
clc
lcall
inc
add
xchg
sbb
mov
repz
cmp
xorb
ja
cmp
jne
cld
push
cmp
popa
adc
or
out
mov
inc
jle
push
pop
or
rcll
movsl
sti
mov
or
je
aad
out
ret
xchg
hlt
ja
sub
push
dec
sbb
popf
push
and
dec
mov
and
addr16
or
cmp
adc
in
out
mov
mov
add
sbb
test
jo
jb
aam
les
dec
pop
es
test
stc
or
dec
inc
call
in
push
pushf
daa
sub
add
adc
loopne
adc
in
add
repz
cmp
jmp
pop
pusha
subl
jmp
adc
dec
mov
or
add
mov
jno
ljmp
aad
lea
and
jns
fadds
fs
sbb
xchg
or
push
pop
fwait
mov
iret
xchg
mulb
aam
je
dec
lret
cmc
add
icebp
or
shl
push
data16
add
std
xlat
push
stos
mov
add
dec
int3
mov
dec
mov
pop
ror
mov
jne
lods
pop
dec
iret
lock
pop
adc
aas
or
adc
in
and
pop
out
jns
xor
push
es
and
ficoms
jne
or
mov
dec
rorb
lcall
shll
sub
and
mov
mov
inc
loope
lock
lods
jg
sub
cmc
sub
push
sub
add
mov
outsl
inc
sub
rol
sub
pop
inc
push
out
mov
jne
adc
and
call
leave
imul
push
jge
sub
mov
push
xchg
mov
jmp
arpl
iret
dec
popa
sbb
sti
jnp
iret
mov
pop
out
cli
sbb
push
lods
adc
adc
cmpsl
mov
cmc
or
sbb
xor
sti
jmp
cwtl
sahf
push
pop
jnp
inc
mov
dec
loopne
xchg
mov
test
ret
dec
test
mov
push
hlt
std
ljmp
cmp
leave
adc
inc
jp
test
push
repnz
inc
out
xchg
iret
xor
mov
div
mov
and
jmp
out
xchg
imul
bound
fistpll
push
jo
jle
xorl
mov
jl
pusha
pusha
jge
js
fdivp
fdivl
movzbl
loope
sti
mov
mov
or
jb
jmp
pop
jge
addr16
add
ljmp
cmpsl
ja
mov
adcb
rorb
sbb
mov
jae
data16
cld
das
xchg
ss
sbb
pop
cmp
pop
leave
dec
pop
pusha
fs
sahf
cmpb
popf
sub
stos
into
scas
mov
mov
dec
test
push
xor
add
and
subb
mov
and
cmp
in
mov
insl
push
xlat
cli
mov
int
stos
pop
divb
scas
out
xchg
movsb
sub
loop
and
test
idivb
fs
jns
push
adc
ror
push
mov
inc
fs
enter
mov
test
test
fisttps
sbbb
jl
adc
push
cmpsb
or
cmp
xor
fcoml
lahf
adc
push
ficoms
push
ficompl
xchg
sahf
xchg
fs
mov
loopne
das
mov
lret
add
das
adcb
ret
int3
mov
shl
lock
mov
push
xchg
adc
icebp
ficoms
inc
or
pop
jnp
mov
sbb
mov
jae
push
popa
mov
cmp
cmp
add
mov
jns
clc
sub
mov
fcmovbe
insb
loope
cmp
clc
add
out
shrb
int
les
loop
outsb
fsubl
js
or
or
imul
and
and
dec
pop
mov
repz
inc
sub
mov
adc
and
mov
lods
fdivrl
sub
xlat
fiaddl
iret
dec
fs
cld
lods
xorl
into
jb
sahf
ret
add
daa
cmp
inc
xor
cmp
call
ret
mov
cmp
les
jp
inc
rorl
rcrb
out
push
jmp
repnz
pop
mov
dec
leave
fildl
inc
mov
mov
insb
stc
lea
pop
xor
push
push
imul
push
lcall
shr
mov
adc
push
std
clc
shll
leave
loope
sti
gs
cmpsb
inc
int
repz
call
or
xchg
lret
pop
mov
pop
lret
jno
jp
stc
or
push
cltd
cmpsb
sbb
xor
mov
test
cs
pop
mov
pop
adc
jae
xchg
pop
mov
add
pop
add
xchg
dec
inc
cmp
cmp
shl
xchg
sub
orl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
push
mov
jle
inc
jg
jle
pop
dec
orb
out
adc
in
stos
sub
hlt
and
push
dec
xor
lods
add
mov
add
mov
mov
scas
pop
dec
jno
lock
cwtl
cmp
adc
mov
sub
std
test
fsubl
pushf
sahf
fdivrs
flds
pushl
imul
push
ret
test
aaa
adc
into
sbb
adc
out
out
shll
cmpsl
pop
push
xor
test
stos
lea
mov
sbb
mov
test
aam
jecxz
scas
stos
pop
addr16
enter
shl
push
jo
cs
lock
call
add
call
ficoms
add
fs
sub
imul
pop
out
std
aaa
in
daa
orb
fmulp
jo
std
cmp
push
fstpl
cwtl
lods
xor
mov
xor
fwait
es
jp
aaa
mov
cmp
out
test
out
clc
adc
push
inc
mov
orl
sub
adc
dec
pop
sahf
or
sub
push
lock
call
loope
cmp
mov
mov
pop
fs
or
jb
aaa
in
in
orl
loopne
pop
sarb
in
adc
dec
fiadds
mov
sub
dec
mov
iret
add
mov
fs
jno
mov
mov
dec
fstpt
inc
pop
ror
inc
cld
push
add
mov
popf
scas
push
xchg
add
data16
add
or
rclb
insb
jb
rorb
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
les
jle
inc
jg
jle
rclb
fcoms
imul
mov
push
add
cmpsb
push
imul
in
inc
test
mov
adc
ja
add
ljmp
push
add
sub
jle
movsb
sahf
mov
jnp
test
cli
dec
jo
cmpsb
or
popa
stos
sbb
xchg
in
mov
mov
scas
dec
repnz
outsl
jle
in
sbb
xchg
fmuls
cli
jge
mov
cld
movsb
aas
out
sahf
inc
jae
test
jns
daa
int
out
outsb
ljmp
popl
in
out
and
sbb
stc
push
jnp
lea
xor
sar
jp
ljmp
sahf
mov
add
in
cmp
cmp
sub
mov
xor
gs
dec
andl
jns
jle
cs
sbb
rcrl
sub
dec
xchg
shr
xchg
out
push
sbb
sub
mov
fstps
jno
rolb
enter
push
sbb
cltd
and
pop
call
cmp
adc
cmp
test
xor
lds
fcomps
jae
scas
mov
add
flds
push
mov
call
sbb
sahf
adc
mov
xor
pushf
stos
jl
arpl
rclb
imul
mov
dec
sub
or
movsb
fs
mov
xchg
push
push
push
movsb
daa
add
xor
cli
cltd
xorb
int
out
xlat
fwait
pushl
imul
repz
std
scas
mov
popf
dec
pop
sub
lock
lds
popf
jb
add
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
aas
or
push
test
aad
xor
ljmp
cmpsl
push
dec
in
push
xor
mov
cmp
call
mov
and
or
inc
leave
or
out
outsl
cmp
adc
pop
test
imul
dec
adc
ret
mov
daa
inc
popf
and
or
pop
adc
sti
cwtl
mov
out
sbb
aad
outsl
fsubrs
arpl
inc
cltd
pop
dec
lcall
sbb
xchg
scas
inc
test
jge
jbe
dec
sbb
test
cmp
jmp
enter
repz
mov
out
cmp
cli
lea
jl
xchg
sbb
jle
xor
sub
inc
rolb
mov
pop
mov
shl
pop
cmp
dec
daa
pop
imul
push
jb
or
fldl
out
data16
jnp
gs
imul
idiv
dec
lcall
insb
push
sub
jmp
push
pop
add
testl
es
shll
aad
rep
bound
lods
loopne
jge
push
addr16
or
imul
jo
out
push
in
pop
push
inc
out
lods
sub
outsl
rcrl
adcl
sbb
push
adc
add
subb
fucomip
out
in
xchg
bt
push
sti
sub
cmp
mov
push
test
mov
sbb
test
xchg
movsl
fnsave
icebp
sahf
sbb
jmp
mov
xor
hlt
mov
shl
jns
cmpsl
push
sahf
dec
daa
pop
adc
sar
xorb
pop
test
sub
aaa
test
sub
insb
addr16
push
loop
ret
and
sbb
fcom
mov
repz
int
stos
fists
inc
leave
jo
lcall
sar
cmp
int3
or
jge
loopne
mov
cltd
sarb
lea
ss
mov
arpl
xlat
and
and
lret
mov
mov
mov
setae
aas
jns
push
mov
and
enter
mov
jnp
dec
jb
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
xchg
mov
jle
fbstp
jle
test
jo
jns
lods
mov
mov
movsl
in
std
xchg
sbb
dec
jle
adc
mov
sbb
inc
fistps
fisubl
inc
push
in
cmp
fnstcw
popa
dec
adc
mov
les
mov
icebp
ss
jl
cwtl
and
fildl
mov
rol
scas
mov
sbb
jno
int
enter
std
rcll
popf
sbb
adc
jns
cmp
adc
xchg
pop
add
lock
inc
mov
scas
inc
mov
incb
cltd
xor
dec
pop
inc
mov
inc
sub
aaa
fisubl
jmp
jmp
and
insl
jmp
icebp
push
sbb
scas
hlt
xor
cwtl
out
add
cmpsb
pop
mov
fmull
mov
mov
dec
cmpsb
enter
pop
andb
ret
push
inc
sub
mov
imul
popa
cmp
xchg
aam
and
and
insb
mov
outsb
jl
les
fdivs
adc
inc
lret
cmpsb
pop
hlt
insl
out
dec
jle
xchg
mov
sarl
xchg
push
outsl
ds
icebp
je
push
push
subl
stos
and
push
test
sub
or
mov
in
aam
mov
sahf
pusha
aad
leave
icebp
std
sbb
das
inc
aad
push
ss
aaa
fidivl
rcr
jmp
push
lahf
xor
jne
andl
fadds
lock
aad
outsl
cmp
pushl
shll
push
divl
inc
mov
lret
stc
mov
jl
mov
or
jmp
and
xchg
and
push
mov
mov
stc
add
inc
push
add
jg
dec
lahf
mov
adc
xor
mov
jmp
pop
xor
xlat
pusha
push
nop
add
jnp
and
jle
sub
sbb
dec
jae
stos
shll
mov
xchg
mov
jp
insb
mov
fxch
mov
sub
arpl
and
xchg
arpl
push
cli
mov
shll
aaa
adc
hlt
dec
test
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
daa
pop
inc
adc
jg
jle
stos
aad
adc
hlt
into
sub
cli
cmpsl
mov
pop
sub
push
lahf
and
sub
xor
sub
sub
jns
mov
and
cmc
imul
inc
ret
int3
leave
add
arpl
aam
imul
fistps
mov
pop
mov
movsb
or
pop
lahf
jnp
shl
imul
icebp
mov
mov
mov
sti
xorl
dec
jb
stos
fsubrs
jne
cmpsl
jno
out
enter
or
sahf
sbbl
pop
lret
mov
xor
adcl
cmpsb
push
inc
sbb
scas
xor
sub
rolb
cmp
test
add
or
fsub
loopne
in
or
stos
add
dec
mov
mov
int
ds
lods
cmp
jl
add
arpl
imul
jbe
mov
mov
jle
jo
xchg
outsl
ret
fbstp
xlat
jns
xchg
add
mov
mov
cwtl
xor
and
lea
adc
add
adc
and
mov
popa
std
jecxz
scas
addr16
dec
sbb
xchg
push
push
dec
popa
or
imul
enter
js
push
fldl
mov
mov
push
cli
mov
insl
popf
insl
sub
adc
stos
sbbl
imul
out
mov
cs
inc
sbb
push
scas
arpl
cmp
mov
mov
cmp
enter
xchg
mov
inc
ds
mov
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
jg
cld
xor
jle
pop
jg
jle
frstor
roll
sbb
xchg
sti
dec
stos
and
movsl
sub
pop
sbb
sbb
dec
xor
orb
pushf
push
decl
xor
or
mov
incl
xchg
mov
and
imul
mov
jmp
and
mov
dec
out
push
push
push
pop
inc
pop
in
jmp
mov
test
lcall
xchg
insb
in
inc
cmc
insb
sub
dec
dec
jb
pop
mov
sub
addr16
pop
pop
ror
jl
dec
cmp
in
leave
lds
push
push
push
cmp
cmpsl
and
loopne
xchg
in
mov
movsb
xorl
sub
jl
xchg
iret
mov
or
cmp
adc
xor
or
inc
mov
xchg
test
pop
pop
cs
mov
mov
xchg
sub
int
xchg
dec
stos
nop
sub
mov
push
int3
fwait
xlat
and
push
lret
mov
into
xor
test
pusha
jg
jns
lcall
in
mov
dec
sarb
jne
hlt
ds
cmp
lahf
in
setle
repz
inc
fstpt
add
lret
mov
das
lds
out
notb
inc
sti
push
test
insb
sti
and
and
inc
aaa
cmp
mov
in
popl
dec
push
ljmp
xor
das
aad
jb
lret
mov
jno
sub
mov
fbld
xor
xor
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
inc
push
out
jle
pop
jg
jle
cs
mov
pop
cmpsl
mov
cld
pop
adc
clc
pop
and
out
addl
movsb
aam
xchg
inc
out
pop
mov
orl
and
lcall
inc
add
pop
cmpsl
push
push
dec
ret
negb
xlat
lods
xor
push
adc
dec
xor
and
xchg
in
mov
pop
insl
pop
adc
movsb
inc
push
fsubr
mov
push
fwait
xchg
mov
lret
ficoms
push
aam
xlat
or
xor
jmp
mov
push
aas
outsb
imul
push
push
out
fnstcw
das
mov
xor
icebp
test
cmc
adc
filds
cltd
dec
out
out
sbb
sub
lcall
bound
add
jecxz
repz
in
fidivl
push
movsl
push
xchg
xchg
and
loop
lock
sarl
push
daa
clc
outsl
cmp
or
pop
imul
aad
ljmp
ftst
lcall
ret
mov
clc
sub
jno
pop
lods
xlat
sub
mov
nop
and
mov
lret
cwtl
fstl
popa
iret
loopne
rolb
add
cs
add
mov
mov
cwtl
pop
push
repz
cmpsb
in
into
mov
call
push
add
lods
and
adc
jle
ds
shll
cwtl
fsub
popf
in
out
mov
ds
out
ss
xor
fbld
aad
lods
mov
add
xchg
sbb
xor
mov
push
ss
es
cmpsb
arpl
mov
aaa
mov
lock
xor
mov
xor
jne
sbb
dec
pop
add
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
js
mov
loopne
jle
jg
jle
mov
shll
test
cmp
jb
mov
les
sub
nop
adc
lods
out
std
mul
aas
mov
shl
xor
mov
es
cmc
out
xchg
dec
addr16
repz
jle
adc
push
dec
pop
fstpt
movsb
dec
lea
das
stos
in
mov
inc
push
jo
mov
adc
mov
rolb
xor
push
lods
adc
ret
and
mov
je
nop
mov
pop
movsb
aad
push
jg
and
outsl
repnz
cmc
push
rcrl
lds
fstl
shl
lea
pop
push
mov
dec
fsub
xor
mov
jp
sub
into
fiadds
pushf
hlt
inc
movsb
mov
or
scas
scas
test
mov
cmpsb
aaa
jp
loopne
sbb
movsb
jne
push
lcall
mov
insl
out
cmpsb
fcoml
add
xchg
sarl
cmpb
xlat
insb
pop
sbb
dec
inc
sub
xchg
mov
ljmp
mov
sahf
mov
les
sbb
lock
and
inc
mov
lea
xchg
xchg
stos
call
shrb
cmp
inc
sbb
xor
add
mov
xchg
pop
and
idivl
popf
mov
pop
push
push
mov
mov
out
outsb
mov
adc
sar
shr
pop
int3
inc
adc
dec
sub
fidivs
or
cmp
arpl
mov
and
push
pop
sar
or
rorb
push
and
sub
and
or
xor
mov
jp
add
loop
stc
inc
pop
shlb
repnz
aad
adc
dec
cmp
sbb
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
out
cli
popf
loop
jle
jg
jle
mov
push
jp
jp
fstpt
xchg
sahf
sbbl
daa
mov
xchg
xor
loopne
jg
cmpsl
mov
adc
ja
push
lret
mov
call
mov
mov
out
pop
sti
cmp
jmp
cmp
iret
jnp
pop
sub
pop
in
shlb
mov
push
mov
out
mull
jns
jmp
sti
or
mov
sub
push
pop
rorb
cmp
lret
inc
inc
gs
and
xchg
scas
inc
inc
cmpsl
jp
pop
mov
cmp
and
jbe
enter
data16
xchg
mov
or
sub
xchg
push
mov
cmp
sub
lcall
cmp
mov
mov
jbe
out
ljmp
or
out
adc
lahf
xor
rcl
js
and
ret
scas
cmp
sbb
push
xchg
inc
imul
sbb
xor
push
cmp
vpmovmskb
test
out
stos
ds
sti
fnstenv
mov
mov
rcll
add
add
mov
shll
js
fs
ds
into
and
inc
add
mov
push
into
push
ret
addl
ja
add
adc
adc
xchg
sti
pop
dec
cmp
mov
lea
jnp
cld
imul
cmp
in
cmp
jne,pn
int
xor
popl
jne
dec
inc
test
nop
or
adc
sub
mov
loop
push
leave
hlt
fcomps
xor
jecxz
inc
out
jne
mov
daa
cltd
dec
in
mov
out
daa
cmp
nop
imul
in
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
ret
sbb
aas
jg
jle
ja
add
addr16
les
xchg
in
push
fadds
push
or
and
es
cmp
repnz
jae
lods
inc
lock
adc
movsl
add
fs
mov
into
mov
out
dec
pop
mov
leave
insl
out
addl
add
inc
popf
fs
cld
sub
addr16
pop
jecxz
lock
add
hlt
sub
in
cwtl
je
aad
and
rcl
arpl
cmp
lds
movsb
dec
cmp
xorb
jae
pop
aad
bound
sbb
push
cmp
pop
adc
push
sarb
sub
movsb
js
aas
incb
scas
sbb
cld
dec
test
outsl
movsb
mov
or
xor
xchg
sub
pop
sti
fs
push
sub
xchg
add
mov
loop
mov
jmp
sub
insl
jge
lea
fcom
and
adc
and
adc
jo
lahf
mov
mov
and
xchg
sbb
mov
leave
js
jae
lret
addr16
aaa
roll
xchg
add
inc
cmp
push
insl
jb
cwtl
notb
fldcw
mov
cld
xor
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
test
jle
jg
jle
jnp
je
xchg
pop
xor
xchg
je
push
fistpl
out
out
xchg
js
mov
mov
nop
jmp
out
icebp
xchg
sub
in
adc
mov
xchg
cmp
xor
mov
outsl
xchg
inc
xchg
jp
shrb
movsl
inc
push
movsb
mov
xchg
fbstp
jecxz
adc
ljmp
jecxz
lahf
push
shll
xor
daa
lods
dec
mov
mov
add
ja
mov
dec
in
ljmp
ret
add
adc
sbbl
pusha
rcll
xor
dec
jo
push
push
and
pop
push
dec
sbb
imul
in
pop
pusha
bnd
cmp
lahf
mov
sbb
lock
adc
out
int3
sbb
cli
dec
lea
pusha
push
adc
xchg
pop
xchg
into
sub
icebp
int3
xchg
pop
nop
out
mov
pushf
fldcw
dec
xchg
in
sbb
leave
xor
adc
cmp
push
sub
or
jnp
xchg
loopne
call
mov
mov
and
push
popf
add
out
loope
mov
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
fdivrs
jle
aas
jg
jle
in
cmc
repnz
ret
add
jno
cmp
dec
cs
push
mov
in
roll
hlt
push
ss
pop
dec
mov
inc
in
lcall
test
push
lcall
xor
adc
push
cmp
adc
aaa
mov
std
scas
std
mov
push
push
and
xor
push
in
cmp
add
je
jmp
jmp
mov
les
cmpsb
cmp
in
sti
push
xchg
cmc
mov
or
ss
jbe
sub
ss
dec
sub
or
fistpll
pop
push
pop
aad
xchg
iret
xchg
and
lcall
and
adc
mov
xchg
cli
xchg
sub
sbb
cmp
mov
nop
cmp
pushf
cmp
inc
xchg
insl
mov
or
bound
fcmovnbe
test
popf
inc
xlat
imul
call
push
pop
int3
adc
ds
pusha
sub
aad
adc
jl
sbb
jns
fisttps
sti
dec
mov
lcall
imulb
ror
adc
mov
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
xorb
rcrl
aas
jg
jle
pop
xor
lock
add
cmp
cmpl
jle
out
and
ljmp
cmp
lcall
imul
test
dec
sbb
jae
cmpsb
dec
imul
loop
mov
xchg
rcll
xor
mov
pop
ds
pop
push
and
pop
aas
aaa
adc
pushf
movsl
xchg
clc
add
or
rorb
xor
and
daa
mov
ficomps
les
lods
mov
sbb
loopne
addr16
jle
std
das
mov
test
cmp
adc
lods
inc
push
aad
incl
add
push
push
das
mov
data16
addr16
aad
adc
push
filds
test
rorb
adc
adc
mov
test
sbb
inc
or
and
xchg
sar
ss
add
dec
mov
ljmp
xchg
jae
cs
sbb
cli
add
push
jne
movsl
pop
pop
mov
int3
jmp
popa
sub
rorb
lock
cmp
call
xor
or
and
lock
and
inc
add
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
cmp
outsl
stc
jle
aas
jg
jle
mov
ret
scas
cmp
fistps
jbe
jge
inc
push
cltd
jecxz
test
inc
push
fisubrl
repz
fstp
pop
inc
mov
test
mov
fiadds
and
dec
shrb
mov
sti
mov
mov
aas
cli
loope
xlat
fcmovnb
iret
push
enter
pop
mov
shll
pop
imul
mov
mov
mov
dec
pop
dec
popf
adc
mov
xlat
imul
xor
push
shll
or
nop
es
add
sbb
jg
outsb
fbld
fistpll
into
fcmovnu
mov
mov
sbb
inc
push
push
inc
mov
verr
xor
mov
cmp
cmp
sti
sbb
lret
popf
mov
cmc
pop
decb
jmp
adc
fstcw
push
loopne
lahf
fstenv
lahf
lds
inc
xor
jae
cld
mov
mov
and
push
dec
in
cmp
xor
sti
mov
mov
cmp
push
xor
hlt
push
dec
std
mov
jbe
add
out
sbb
xor
ret
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
push
pop
xor
jle
jg
jle
cmp
xor
jecxz
ret
sbb
mov
stc
loop
pop
lds
pop
mov
push
aam
js
push
shll
cwtl
bound
por
addr16
pop
je
icebp
lahf
rolb
mov
pushf
and
mov
mov
push
jne
jge
or
dec
or
iret
mov
or
lahf
adc
mov
outsl
mov
js
pop
ror
cmp
jne
fstps
inc
cli
fnstsw
xlat
movsw
sub
out
lea
and
movsl
or
pop
addr16
stos
dec
inc
xchg
lods
loopne
lcall
xlat
sub
adc
mov
and
mov
fsubrl
cld
bound
dec
jns
push
or
jae
mov
xlat
mov
pop
decb
sub
jae
xchg
cmpsl
cmp
dec
fisttpll
stc
jmp
in
or
cmp
in
push
loop
mov
es
js
sahf
adc
jbe
xchg
jg
rcrb
push
mov
out
pop
pop
inc
pushf
sub
xor
cmp
push
cmp
jmp
mov
mov
inc
in
mov
sbbl
jmp
fmull
cld
popf
mov
scas
cmp
jle
aas
jg
jle
dec
int
cmp
mov
mov
adc
stos
shrl
jbe
and
push
pop
push
fisubl
adc
adc
das
out
mov
cmp
int
mov
test
pop
push
push
data16
pop
cmp
test
or
pop
cmc
sub
iret
or
leave
nop
sbb
pop
mov
or
dec
add
jmp
xor
add
rolb
int
in
and
in
fs
mov
dec
das
call
or
inc
and
inc
aad
ret
push
int
stos
push
adc
mov
fidivs
add
je
inc
jae
loopne
scas
mov
push
xorl
pushl
jp
jns
jb
test
dec
jo
inc
fldcw
fisttps
sbb
stos
add
or
fs
dec
cmp
dec
stos
pop
ja
or
sbb
cmp
nop
dec
stc
dec
pop
inc
mov
mov
dec
mov
mov
and
cmp
dec
mov
ror
movsl
sbb
icebp
orb
sbb
rol
pusha
jl
dec
imulb
inc
push
inc
add
add
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
stos
jo
xchg
xor
jle
aas
jg
jle
cmp
mov
mov
push
and
call
xor
hlt
scas
jbe
mov
ficoml
scas
dec
pop
mov
or
sbb
mov
or
jb
adc
cmp
je
dec
loopne
or
mov
xchg
das
fsub
shlb
push
pop
push
mov
andps
loopne
pop
ss
jno
iret
or
loopne
mov
repz
dec
imul
aad
pushf
aad
iret
mov
and
sbb
cmp
scas
scas
mov
aas
sbb
sbb
sub
push
inc
cmp
in
cwtl
xor
cmc
enter
in
jb,pn
sub
inc
mov
repz
out
call
mov
lret
or
clc
adc
jp
or
aas
arpl
mov
push
add
jge
mov
int3
sarl
jo
pop
mov
dec
jl
xchg
cmp
jae
push
into
inc
or
sbb
push
xchg
adc
dec
inc
push
sub
dec
in
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
mov
ds
push
xorl
push
pop
in
js
inc
mov
adc
lcall
and
aas
add
cltd
out
ror
sub
mov
xchg
add
pop
aaa
xor
out
mov
sub
rcll
mov
imul
xchg
mov
mov
mov
add
repz
push
adc
jmp
aad
sbb
mov
and
push
dec
leave
scas
push
xchg
bound
rorb
test
ret
push
jmp
aam
inc
mov
and
test
fldcw
adc
in
xor
cmpsl
sub
cmp
arpl
rcrb
add
mov
test
mov
test
in
cmp
jns
inc
icebp
aaa
push
out
repnz
aam
sarl
xchg
or
push
mov
fimull
incb
pusha
push
out
pop
aad
cmpsl
test
ja
xchg
mov
add
daa
push
adc
cld
inc
xchg
fstpt
sub
sub
dec
or
pop
push
cmp
mov
add
lea
jmp
and
and
sti
cmpsb
mov
jne
jle
aas
jg
jle
cmc
out
cmp
inc
inc
fcmovb
mull
pop
call
mov
lret
loopne
dec
mov
out
fimull
jl
rol
data16
rorb
sub
jmp
ficomps
mov
adc
adc
cmpsb
fmuls
lods
jo
imulb
jmp
mov
test
or
mov
add
int
mov
sub
roll
ffreep
jne
loopne
je
rclb
lcall
push
rcll
pop
and
push
loop
shrl
jb
mov
cli
pop
xchg
mov
xchg
inc
pushl
dec
add
pop
push
jne
mov
jae
pop
movsb
xor
add
jmp
xchg
jp
add
push
pop
lods
pop
xchg
pop
jmp
mov
jp
ret
repnz
dec
lock
cwtl
movsb
mov
cmpb
mov
adc
pop
mov
and
cmp
xchg
divb
es
push
jmp
cmpsb
fwait
xchg
adc
dec
jnp
xor
mov
in
aaa
jl
inc
and
pop
daa
dec
test
pop
inc
pop
mov
and
cld
shrb
int
aad
iret
ds
stos
mov
mov
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
ljmp
and
popa
lods
mov
push
mov
cmp
mov
in
fsubrp
or
xor
les
popl
aaa
mov
mov
sub
test
lcall
push
xchg
inc
xchg
aam
loope
push
cltd
or
dec
aam
rorl
test
pop
cmp
mov
stos
push
mov
lock
jne
mov
loop
mov
inc
leave
xchg
testb
data16
fisubs
push
subl
push
addr16
cmp
ljmp
and
xchg
gs
fadds
jns
adc
mov
xchg
mov
fadd
lea
idivb
push
mov
mov
mov
or
sti
jae
sbb
mov
daa
outsl
scas
cs
lods
cmpsb
jo
jbe
loop
outsl
mov
shll
cmc
fcmove
inc
xchg
sbb
fmull
insl
aaa
out
pushf
xchg
or
shll
insl
fsts
jmp
cmp
ficoms
inc
divb
jns
xchg
test
inc
pop
inc
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
sbb
inc
ss
aas
jg
jle
imul
add
push
push
jg
fwait
in
fisttpl
add
aad
add
xchg
sbb
cmc
decb
aaa
and
push
out
sbb
dec
and
sub
lock
aas
out
sbb
rorl
mov
mov
setne
cld
ss
sbb
pop
bound
xlat
sub
sbb
mov
scas
imul
outsl
inc
cmpb
stos
outsb
or
and
dec
jmp
and
adc
push
push
mov
or
and
adc
stc
lds
dec
add
js
jb
dec
pushf
inc
mov
dec
dec
lret
outsb
or
in
out
aas
dec
mov
les
mov
out
mov
out
and
stos
adc
nop
or
push
aad
add
lret
fisubl
xor
jbe
dec
adc
cmp
lods
int
add
lret
add
cmp
fisubrs
sbb
jbe
dec
sbb
mov
push
pop
mov
mov
jnp
fsubl
jmp
es
subl
clc
out
in
loop
and
mov
dec
dec
mov
mov
add
mov
mov
test
je
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
fmul
popa
pop
mov
mov
lret
mov
cwtl
push
ljmp
enter
sub
mov
orb
cmp
inc
lds
adc
pop
xor
clc
xchg
jg
in
jno
xchg
add
mov
pop
jb
push
push
mov
jb
and
imul
popf
mov
faddl
stos
aad
sbb
dec
mov
repnz
inc
and
adc
fldenv
into
push
lret
add
minps
add
mov
fs
psrld
test
mov
in
cli
xlat
xchg
cmpsl
push
fstpl
cmp
mov
pop
shl
mov
fidivrl
icebp
push
cltd
arpl
inc
aas
lds
add
jp
pop
xchg
push
or
or
push
mov
xchg
imul
or
jns
mov
js
mov
sbb
ret
cwtl
adc
dec
cmp
cmp
lahf
shlb
testb
ficoms
in
inc
mov
xchg
mov
jae
xchg
sbb
dec
add
je
nop
mov
or
and
add
add
xchg
inc
sbb
lods
lret
movsl
sub
les
jle
aas
jg
jle
add
xchg
sbb
mov
lea
and
notb
mov
das
ljmp
xor
sbb
rclb
mov
mov
cli
dec
xchg
sub
insb
je
pop
fs
sbbb
or
roll
lods
jbe
js
lds
loopne
dec
add
jne
inc
stos
orb
popa
bound
repnz
lahf
mov
pop
xchg
mov
imul
push
xchg
jp
cmp
les
mov
ds
sbb
int3
shrb
mov
cmp
test
dec
pop
ret
into
sbb
push
clc
mov
data16
mov
fwait
iret
xor
mov
jmp
pop
mov
jge
rcrb
lods
xor
sbb
fstps
jmp
add
cmp
pop
mov
insb
pushf
addb
pusha
call
jg
xchg
roll
and
arpl
sub
dec
adc
lock
inc
inc
jge
dec
scas
jmp
je
in
lods
stos
xchg
orl
cmc
sub
loop
lahf
lret
mov
std
xchg
cmp
out
sub
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
jl
mov
aas
jg
jle
mov
push
mov
int
mov
mov
add
jecxz
mov
cmpsb
xor
push
jg
jle
push
sub
pop
in
push
pop
sahf
mov
jbe
ret
xor
mov
or
pop
push
jnp
aam
ret
mov
sbb
neg
mov
push
jbe
popf
loopne
test
addb
sbb
jle
sbb
jae
pop
inc
fdivr
fsubs
mov
jne
xchg
add
pop
push
ret
jge
inc
push
pop
adc
pop
sbb
ja
mov
lahf
pop
push
pop
enter
scas
push
jg
leave
loopne
aas
lock
das
clc
bound
and
push
jle
sub
dec
cmpsb
call
stos
clc
sbb
mov
imul
imul
jge
ljmp
lret
das
fsubl
push
sti
sub
lret
pop
mov
les
fisubrl
data16
outsl
lcall
cld
jbe
loop
dec
jecxz
insb
sbb
hlt
popf
fcomps
dec
gs
movsl
imul
inc
int3
test
dec
cs
sub
dec
sbb
push
cmpsl
hlt
dec
cltd
xor
orb
sub
ficoml
mov
mov
jmp
test
test
jge
cmp
in
xchg
lret
jle
jg
jle
popa
dec
adc
call
int3
push
out
in
cs
mov
dec
and
lret
hlt
mov
mov
inc
sub
dec
mov
loope
movsl
xchg
fwait
mov
or
inc
mov
mov
mov
xchg
das
jnp
push
inc
daa
adc
pop
clc
pushf
inc
movsl
les
es
adc
lcall
fwait
and
pop
jnp
xchg
scas
cmpsb
mov
sub
lds
or
jecxz
or
xor
incb
pop
push
xchg
add
in
lock
pop
sub
xor
jb
xchg
cmp
sub
pop
or
add
sbb
cmp
subl
jne
scas
add
or
incl
pop
jne
fstps
xor
aaa
mov
mov
push
aas
xchg
clc
sarb
es
ja
ror
mov
clc
rcl
add
push
in
mov
cld
push
daa
test
jmp
mov
rorb
jno
std
fcmovnu
aas
or
mov
addb
mov
ud0
mov
mov
add
jmp
mov
or
lods
jge
out
mov
addr16
mov
aas
jg
jle
pop
outsl
lods
mov
xor
or
stos
mov
jns
adc
arpl
cltd
js
cltd
push
xor
test
sub
dec
xchg
movsb
inc
clc
sahf
xor
or
adc
int3
mov
in
mov
jne
add
add
lret
addr16
les
and
rorl
mull
adc
cmpsl
adc
push
cli
ljmp
repz
mov
nop
jo
cmp
int3
cmc
inc
into
movl
mulb
outsl
in
jle
insb
xor
xor
pop
push
or
jno
or
sub
mov
inc
fcomip
lret
sahf
or
ljmp
lret
pop
or
xor
adc
lret
scas
pop
jg
out
ret
push
das
cltd
pop
inc
sbbb
and
outsb
adc
jbe
push
add
fsubrp
pop
clc
adc
sbb
jne
jmp
xlat
and
sub
mov
dec
leave
and
push
sub
mov
fsubl
inc
mov
hlt
lods
out
pop
sub
pop
xor
ljmp
mov
mov
or
add
mov
imul
mov
jmp
inc
sbb
gs
jae
push
mov
aas
jg
jle
xchg
xor
out
scas
sub
jns
mov
test
sbbl
sahf
shrl
push
jle
jmp
loope
mov
imul
lods
pop
popf
cmpsb
pop
add
sub
sbb
jnp
repnz
das
mov
mov
mov
push
hlt
mov
jns
inc
cmp
sbb
mov
push
into
inc
add
jno
and
cmp
das
mov
adcl
push
shrb
test
mov
jle
dec
shrl
incl
mov
sbb
or
pusha
test
sub
push
fidivrs
out
sbb
jmp
test
ret
test
ret
popf
scas
cwtl
mov
repz
mov
movsb
add
fwait
ss
dec
out
sbb
jae
and
test
xor
push
insl
sub
xor
mov
test
nop
fsubs
xchg
jno
sbb
add
or
push
addr16
xchg
stos
into
fs
pop
daa
sbb
call
xchg
outsl
xchg
cmp
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
cmpb
std
or
jg
jle
stc
int
rorb
lds
mov
mov
mov
pushf
lea
stos
cli
popa
pusha
repnz
cmpsl
jne
aas
adc
cwtl
ljmp
xchg
sub
inc
push
and
rcrl
xchg
enter
dec
dec
adc
jge
mov
sub
pop
sbb
lahf
cld
fcoml
jg
insl
and
mov
cs
xchg
insl
je
mov
test
testb
inc
mov
cmp
sahf
sub
sbb
les
stc
push
and
out
testb
add
pop
jno
add
sbb
jae
pop
fdivr
cli
pop
adc
mov
cld
repnz
lcall
pop
mov
lret
sahf
mov
add
dec
mov
mov
roll
ja
push
or
xor
outsb
xchg
addr16
add
popa
xlat
inc
mov
fsubrl
cmc
out
cltd
hlt
fsub
cmpsl
arpl
add
pop
push
sbb
and
call
dec
mov
pop
lock
inc
push
mov
dec
cmpsl
or
popf
jb
add
fmull
call
rorl
add
call
add
adc
jecxz
jnp
aad
lock
pop
and
jle
jg
jle
sbb
gs
repz
enter
retw
cmp
addr16
inc
in
cmpsl
mov
and
mov
inc
mov
sahf
testl
subb
jp
call
mov
idivl
pop
mov
out
dec
inc
mov
push
stos
adcb
jp
xchg
push
int3
inc
loopne
jge
push
fisttps
xor
cmpl
jns
aaa
adcb
movsl
xchg
fisttpll
fmull
aam
xchg
sub
std
movsb
aam
fdivl
push
inc
mov
insl
pop
cwtl
inc
aam
jno
cli
or
sbb
cmpsl
sbb
mov
xor
add
mov
xchg
jb
push
push
aam
adc
jg
adc
aaa
mov
jge
mov
inc
ud1
dec
rcl
push
or
out
pop
lds
out
jl
adc
cmp
pop
in
lret
daa
mov
pop
and
jne
lock
push
or
jns
hlt
mov
inc
dec
cmp
fsubrl
lock
iret
outsl
nop
lret
push
mov
popf
cmp
push
daa
popf
xor
mov
popf
mov
adc
roll
imul
jmp
into
jb
pop
inc
pop
fisttpll
dec
movsb
js
lea
aas
jg
jle
inc
clc
adc
stos
loop
mov
stc
setle
mov
scas
mov
mov
int
les
test
comiss
adc
cwtl
mov
imul
inc
test
cmp
les
jg
lods
shll
bound
mov
cmpb
push
add
sti
pushw
cwtl
jecxz
test
fstpt
xlat
cvtps2pi
fimuls
push
push
rolb
push
xchg
sbb
add
dec
jge
mov
call
mov
cmpl
mov
cltd
mov
test
daa
and
inc
xchg
int3
clc
pusha
fsubrl
and
and
cwtl
push
mov
inc
jecxz
push
hlt
xor
cmpsb
mov
imul
fadd
imul
js
pusha
mov
add
les
mov
mov
sub
dec
add
into
fldcw
sub
fsts
lret
out
mov
cmp
xchg
lods
cmp
pop
lods
aad
dec
scas
pop
mov
lds
xchg
fmuls
add
adc
es
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
mov
mov
aas
jg
jle
push
pop
sti
xlat
xor
mov
sub
xor
out
ret
dec
flds
shll
fsubl
insl
push
adc
mov
fcmovnb
fistl
cmp
fbld
sahf
mov
mov
cmpsl
xor
push
scas
mov
inc
lods
xor
in
insl
cmc
dec
rol
push
mov
xor
test
arpl
ret
xlat
pushf
int
mov
ficomps
inc
pop
push
or
rorl
out
sub
clc
stc
out
arpl
mov
push
push
xor
xchg
call
sub
cmp
pop
enter
rcrl
cltd
div
lahf
jae
jg
lea
pop
cmp
xchg
outsb
fildll
push
or
xchg
fisttps
jp
mov
sti
or
jmp
ret
out
fwait
mov
and
sub
push
loope
jge
fcompl
and
or
je
int3
cmp
and
jle
shl
xor
cwtl
cmp
test
jb
outsb
jecxz
cmp
lcall
inc
pusha
push
scas
dec
stos
shl
lea
mov
adc
ljmp
mov
popf
jb
add
enter
cli
decl
add
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
add
fistl
aas
jg
jle
jecxz
daa
mov
repnz
cmp
je
mov
scas
std
fs
cmp
add
aam
scas
or
lahf
adc
xchg
cltd
add
ja
lea
mov
es
std
xchg
popa
dec
mov
adc
adcl
pop
or
mov
out
mov
clc
adc
xchg
pop
sub
aas
dec
sbb
mov
or
or
shll
add
mov
test
mov
lea
and
push
xchg
dec
addr16
mov
adc
xlat
lahf
test
push
inc
push
mov
jnp
mov
repz
lret
imul
cmp
je
mov
cli
adc
mov
pop
add
push
lods
mov
fstpl
fstps
xchg
in
cli
lea
sbb
mov
push
out
jg
lods
push
dec
xchg
cmpsb
push
mov
cwtl
jp
cmpsl
pop
iret
add
inc
into
cmp
cs
sub
adc
xlat
mov
lret
sbb
sub
lcall
pmaxsw
shll
fucomi
pop
add
add
arpl
imul
mov
cmpl
or
enter
ja
push
jae
push
lcall
mov
xchg
addr16
or
nop
int3
sub
pop
dec
mov
insb
das
adc
cltd
xlat
fisubs
push
push
add
xor
insb
push
jp
pop
ja
fimull
push
imul
das
sub
sahf
roll
dec
add
cld
addr16
push
subb
xchg
mov
xchg
xchg
mov
push
pop
push
add
xchg
call
aad
jo
aam
inc
adc
xchg
jmp
sbb
scas
lret
imul
mov
push
sbb
dec
mov
mov
in
pop
sbb
enter
imul
mov
imul
cld
adc
call
pop
lods
hlt
pop
adc
fcomip
adc
cmp
lods
cmp
xchg
inc
mov
pop
jmp
pop
addl
or
xchg
and
and
xchg
imul
pop
pop
mov
xor
das
add
pop
ret
sub
inc
jmp
jae
aas
mov
cmp
adc
pusha
add
cmpb
jg
jle
ds
fdivrl
test
in
cmp
inc
addr16
ficomps
test
outsb
inc
pop
sub
mov
mov
out
pop
push
inc
roll
pop
ret
hlt
mov
inc
pop
sti
pop
pop
outsl
cmp
out
inc
jae
lock
add
movsb
mov
mov
out
mov
stc
cmp
nop
orb
test
pop
mov
cs
leave
xchg
icebp
in
aaa
push
jle
sub
pop
jbe
add
ljmp
pop
xchg
dec
push
and
cmp
mov
or
imul
add
dec
cmp
outsb
and
pop
lret
push
insl
or
jmp
adc
shl
adcl
sbb
icebp
mov
pop
jnp
ficomps
gs
mov
in
sbb
push
inc
dec
jmp
jecxz
imul
cwtl
sbb
shr
pop
gs
inc
inc
xor
dec
xchg
dec
and
shll
inc
jmp
frstor
and
mov
ret
mov
scas
sub
add
sarl
in
push
cmp
je
jmp
xchg
mov
mov
fdivl
jle
jg
jle
outsl
psubq
jl
ljmp
es
sub
insb
lods
pop
mov
xchg
insl
clc
daa
adc
test
sbb
ljmp
ss
add
in
ret
sub
push
push
dec
xchg
inc
aaa
jno
mov
cmp
jle
xchg
ret
insl
aas
insb
xchg
inc
push
fsubp
jae
push
out
into
bound
ds
das
adc
ret
mov
xchg
mov
xor
stos
std
test
ds
mov
clc
mov
cmp
inc
arpl
and
out
sahf
scas
or
cli
sub
push
xchg
mov
orb
push
shl
jns
sbbl
fnstenv
cmp
lret
mov
fstpt
push
adc
stos
mov
ret
jle
adcb
push
adcl
pop
arpl
push
ret
push
and
pushf
sbb
push
mov
aas
mov
sbb
jge
cmp
inc
xchg
cmpsl
push
xchg
pushf
xchg
lret
test
pop
sbb
pusha
in
and
mov
int
xor
rorl
and
fmull
sbbl
jmp
mov
rcll
add
sti
lret
jns
rclb
ss
test
aas
jg
jle
xchg
mov
cmp
dec
adc
mov
sbb
push
mov
cmp
xchg
in
js
in
push
mov
ret
pop
cmp
clc
aad
test
popa
inc
popa
fistl
test
lea
jp
xchg
or
imul
idivl
push
popf
insb
scas
jl
nop
dec
add
cmp
enter
mov
xchg
std
jo
add
les
cli
mov
add
lea
repz
loope
dec
adc
mov
xchg
fwait
daa
mov
add
inc
mov
cmpsl
bound
int
test
and
xrelease
enter
push
lcall
adc
dec
mov
lds
aam
scas
jne
ljmp
xchg
in
inc
jbe
fisttpll
fpatan
adc
data16
xchg
sbb
or
push
ss
xor
jns
insl
and
out
or
dec
mov
jp
mov
mov
dec
mov
xor
and
pop
sarb
js
shlb
xchg
ss
adc
push
aas
add
inc
out
jns
dec
mov
into
je
mov
cmp
lahf
push
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
xor
xchg
aas
jg
jle
sub
push
mov
dec
clc
repnz
sub
cmp
pushf
cltd
andb
gs
cmp
push
test
mov
xor
sbbb
mov
mov
cmpsl
in
lahf
sbb
cltd
mov
adc
hlt
push
add
sti
jle,pt
xor
cld
imul
mov
push
das
jno
orl
lods
fwait
in
mov
xchg
in
pop
gs
add
hlt
jo
cmpsb
mov
out
shl
js
inc
push
dec
push
pop
insb
xlat
fsts
je
test
xor
dec
aaa
push
xor
push
arpl
adc
pop
or
jmp
sbb
movsb
fisttpl
shr
adc
lds
shlb
outsl
jg
push
subb
cmp
and
sti
xor
cmp
addr16
xor
popw
dec
test
ds
cmp
cltd
aad
xchg
push
addr16
inc
pop
push
leave
inc
push
call
inc
adc
rorb
jp
dec
cmpsb
xchg
inc
xor
jl
push
push
lds
jb
ret
ret
inc
mov
sub
pop
aad
movsb
mov
mov
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
rcrl
sbb
jg
jle
jno
scas
dec
or
xchg
mov
cli
mov
pop
pusha
test
out
rcrl
mov
test
loopne
std
mov
dec
xchg
sub
mov
dec
mov
adc
lahf
jmp
bound
imull
ret
inc
je
lret
push
mov
mov
aam
and
filds
cmp
repz
mov
jg
xchg
jl
lea
popa
dec
mov
call
scas
jp
in
sbb
daa
pushf
int3
sub
loopne
fs
loopne
dec
xor
xchg
out
aad
loopne
sub
jo
dec
das
das
ret
sub
add
and
subb
pushf
mov
inc
lea
and
mov
ret
fsubs
xor
cmp
add
push
mov
movsb
xor
aaa
inc
fcomps
aad
push
jns
add
and
mov
dec
cmc
shlb
stos
rep
cmpsl
adc
cmp
inc
inc
jle
fcoml
outsb
lahf
jge
add
dec
and
fstl
hlt
test
and
push
aaa
jmp
adc
les
inc
hlt
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
