push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
pop
ret
bound
lret
bound
sub
pop
add
jne
inc
imul
jb
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
push
inc
dec
and
lahf
or
mov
js
sub
push
mov
inc
pusha
out
out
mov
adc
inc
adc
mov
push
jne
das
push
add
std
leave
inc
jnp
jno
mov
jnp
idiv
dec
fcoml
mov
cmpsl
and
lods
xchg
sub
sbb
sbb
gs
adc
test
adc
divb
insl
adc
imul
mov
data16
test
pop
push
test
adc
adc
sbb
hlt
mov
mov
mov
sahf
sbb
sbb
andl
pop
sub
into
sub
cmpsb
and
aas
sbb
ss
sub
mov
dec
shrb
inc
jo
dec
jns
mov
pushf
push
jge
imul
sbb
ret
mov
fcompl
ss
sbb
push
lea
in
mov
cmp
mov
enter
int
pop
in
les
mov
inc
inc
std
hlt
addr16
xor
out
inc
push
in
mov
pop
clc
push
jecxz
cwtl
cmp
in
jnp
test
pop
xchg
mov
int
jmp
mov
push
mov
int3
sarb
adc
sbb
add
xchg
leave
jl
loope
syscall
sub
mov
ss
into
push
sbb
cld
and
sti
sub
sarl
jno
cmp
dec
or
or
rcrb
mov
loope
mov
hlt
in
fcmovnbe
cmp
iret
push
pop
pop
jno
mov
mov
rolb
pop
es
clc
rclb
pop
cmpb
sti
jne
sub
ret
xor
mov
jge
or
sahf
jnp
mov
jbe
repz
mov
sahf
sub
mov
cmp
mull
sbb
sub
mov
adc
outsb
call
aad
hlt
sti
push
mov
cmp
lods
inc
push
dec
adc
xor
xor
jp
push
sti
dec
push
jns
inc
test
or
addr16
test
xchg
add
cs
jge
ret
or
out
rorb
rcrl
fucomi
or
add
pop
out
cmp
fildl
std
cmp
xor
imul
sarl
hlt
rcrl
out
sub
xchg
adc
movsl
fsubrs
cmp
and
nop
adc
jl
clc
pop
push
jno
ret
xchg
mov
sub
mov
jge
in
fidivs
ja
pop
xor
adc
push
and
add
jle
lret
mov
dec
inc
loope
imulb
sub
jb
pusha
push
mov
sti
xchg
cltd
loop
add
dec
rolb
sahf
push
out
fs
cwtl
jb
int
inc
inc
lods
rolb
bound
lret
lods
push
and
mov
mov
test
rorb
in
dec
dec
push
or
mov
xchg
adc
dec
dec
popa
jl
gs
jle
push
mov
push
dec
add
and
sbb
jb
sbb
pushf
call
or
add
mov
or
mov
aad
shll
jg
mov
je
shrl
jl
lods
mov
xor
jmp
xchg
int
mov
mov
inc
pushf
into
enter
cwtl
pop
cwtl
mov
inc
movsb
movsl
mov
mov
and
mov
incb
add
fwait
push
aaa
push
call
pop
cmp
pop
sub
add
mov
lret
repnz
icebp
out
mov
xor
pop
push
jge
inc
scas
das
cmc
iret
mov
stc
or
mov
inc
test
dec
cmp
cmpsb
fldl
adc
repnz
xchg
gs
aam
aam
loopne
or
fimull
mov
stos
stc
sbb
push
repnz
out
leave
mov
cmpl
jae
arpl
and
jge
pop
cmp
jb
mov
cmp
jns
sub
out
mov
mov
leave
ljmp
push
and
hlt
cmp
dec
rol
fcmovbe
sbb
insb
mov
mov
push
xchg
xor
add
icebp
sahf
push
mov
jp
loope
add
rorb
add
sahf
pop
xchg
ja
sti
aam
test
or
sub
xor
ficomps
jl
mov
jge
cmc
cs
mov
sbb
out
repnz
mov
or
mov
mov
mov
dec
xorb
rol
jno
or
sub
jg
push
xchg
insl
pop
in
mov
popa
push
je
cs
mov
loopne
hlt
repnz
mov
pop
in
inc
iret
and
das
add
or
and
cli
clc
fs
fcmovnb
cmp
loop
xchg
mov
pop
test
push
ljmp
fisttpl
stc
pop
push
jl
or
movsb
movsb
fdivrl
clc
push
jnp
sub
sbbb
pop
cwtl
jnp
ds
push
out
jmp
xor
sbb
stc
jle
stos
sub
sub
std
cmc
or
and
shrb
xchg
mov
shll
aaa
cmp
adc
popl
insb
pop
pushf
xor
mov
movsb
ficoml
cld
ret
dec
and
jnp
pop
inc
xor
icebp
add
aas
lods
mov
nop
dec
mov
pop
das
sub
je
inc
xchg
popf
xchg
push
mov
pop
aaa
lods
push
ss
aad
shrb
xor
mov
pop
std
fildl
pop
adc
cmpsb
fwait
negl
cmp
fcomip
fistpll
aas
shrl
stc
fucomip
test
je
out
sahf
adc
push
pop
loope
sahf
adc
fistps
add
pop
push
out
gs
dec
rorb
movzwl
xlat
fisubrs
jmp
mov
lods
imul
scas
ljmp
and
sbb
gs
push
push
std
inc
shl
repnz
push
mov
fcmovnu
sub
mov
pop
addr16
add
jno
xor
cmp
mov
xor
movl
pop
sub
in
std
jecxz
out
insb
dec
cmp
pop
stos
aam
and
jp
data16
pop
jmp
bound
out
jns
popa
sub
or
lods
xchg
aam
cmp
ja
xor
cmp
pop
xor
or
iret
mov
sub
imul
ret
adc
pop
and
clc
jmp
stos
jo
sub
sbb
xchg
mov
jmp
xor
or
sub
jl
iret
cmp
mov
testb
out
ret
movsb
xchg
push
in
xchg
inc
dec
mov
mov
in
sbb
push
ljmp
mull
loopne
push
clc
xchg
cwtl
dec
or
inc
pop
mov
out
ja
les
or
insl
ret
out
loop
daa
call
cmp
mov
je
into
nop
push
mov
pop
xchg
push
and
add
sbb
mov
mov
jecxz
push
mov
mov
fwait
mov
mov
les
cli
sbb
scas
cs
fs
sbb
and
pop
sti
sub
add
out
aas
mov
push
add
mov
repnz
sbb
or
push
xlat
mov
and
sbb
inc
jno
dec
jmp
sub
and
sub
cli
pop
sbb
cmc
or
pop
push
sbb
push
push
and
cmp
sbb
xorl
pop
dec
mov
repnz
int
push
or
push
les
shlb
lock
cmc
mov
ja
dec
xchg
add
push
ss
dec
icebp
mov
push
fisttps
xchg
add
cmp
adc
mov
push
or
xor
pop
dec
in
mov
inc
rcr
movsl
dec
mov
mov
lods
inc
ljmp
and
sub
clc
add
push
in
sub
testb
loopne
je
test
repz
jmp
lods
mov
xor
or
out
jecxz
aam
imul
loope
sbb
out
negl
or
icebp
repz
xor
mov
shlb
insb
cmp
pop
rcrl
xchg
cltd
mov
pop
pop
pop
xchg
dec
or
aas
aaa
pop
cmp
dec
cwtl
sub
adc
rclb
pop
in
dec
and
testl
or
jo
push
test
xor
dec
insb
xchg
jg
ret
out
jae
in
or
sub
js
lock
push
add
jle
ja
push
repnz
xchg
iret
imul
or
or
mov
outsl
xchg
inc
xchg
mov
cmpsb
dec
cld
iret
pushf
mov
xor
mov
rcrl
pushf
cmpsl
xchg
mov
xchg
xor
arpl
xor
sbbb
fs
popa
jl
in
cltd
adc
in
popa
xchg
sahf
push
jae
add
gs
sbb
push
mulw
xchg
cltd
sbb
sub
stc
mov
add
xorl
or
mov
or
out
pop
or
das
adc
insl
aaa
xchg
or
jne
les
cmp
mov
or
lds
in
fdivrs
xchg
aad
jmp
dec
test
pushf
inc
mov
int
das
inc
jno
and
mov
xchg
xchg
decl
xchg
mov
mov
cmpb
shufps
push
andb
mov
mov
jecxz
push
stc
aaa
movsb
stos
mov
or
jo
xchg
pop
sbb
mov
xor
xchg
jle
and
mov
daa
scas
fwait
mov
push
arpl
xorb
je
int3
sbb
lcall
cmp
sbb
push
stos
sbb
jnp
inc
divl
add
adc
dec
les
pop
loop
push
pop
std
pop
push
jmp
loope
and
or
mov
xchg
arpl
dec
xchg
xor
sub
push
xor
jae
xchg
pusha
mov
lock
cmp
in
nop
push
or
cli
mov
xchg
xlat
push
and
add
push
adc
and
adc
xchg
lret
xlat
test
arpl
int
adc
and
mov
and
call
out
lret
push
fsubs
mov
jl
scas
sbb
mov
in
or
out
xchg
adc
cmc
dec
loopne
out
cmp
dec
xchg
cmp
sbb
daa
xor
add
push
lahf
outsb
call
and
pop
je
insl
das
outsl
pop
lret
push
jo
sbb
adc
lahf
sub
jge
adc
jnp
clc
test
sub
jo
push
mov
sbb
ljmp
ret
cmp
push
jge
inc
mov
pop
aad
mov
test
fcoms
add
or
inc
fisubl
mov
orl
jg
in
or
xor
shll
mov
cmp
mov
xor
lods
cmc
mov
pop
in
lods
mov
sahf
mov
test
cmp
pop
push
idivl
mov
loope
mov
mov
fimuls
adc
scas
aad
push
popf
inc
call
add
cwtl
jmp
popa
ljmp
sahf
lock
int
into
dec
mov
stc
adc
adc
iret
pop
dec
pop
pusha
adc
inc
jae
das
imull
fmull
sahf
orl
adc
mov
cmpsb
push
clc
xchg
scas
int
push
pop
ja
or
mov
push
push
jae
hlt
pop
incl
jae
aad
sbb
movsb
sub
mov
iret
or
popf
push
insb
jmp
cmp
std
push
fistpl
cmp
cmpsb
adc
push
out
jno
notb
mov
sub
jmp
and
add
add
jb
sbb
arpl
sub
jns
cmc
icebp
xchg
aad
movsl
mov
iret
cmp
dec
pop
inc
je
out
das
das
into
mov
in
cwtl
lock
jbe
mov
rcrb
test
insl
ds
inc
lea
adc
and
and
pushf
ret
push
outsl
sbb
xchg
push
flds
inc
cltd
dec
mov
mov
insl
lcall
xor
dec
lret
dec
ret
mov
jecxz
movsb
lcall
das
pop
into
lret
jns
xor
fistps
das
or
aad
mov
xor
filds
fcompl
mov
dec
jnp
cmpsl
ret
xor
add
mov
cmp
mov
cli
inc
fnstenv
jg
das
sub
push
dec
adc
mov
and
test
fwait
shll
xchg
aad
inc
mov
cwtl
mov
arpl
imul
and
pcmpeqw
mov
out
xchg
xchg
fistl
je
lea
arpl
sti
lea
cld
pusha
adc
cld
mov
or
leave
cli
cmp
repz
idivl
sti
pop
call
addb
out
negb
outsl
or
test
xor
inc
pop
jl
jge
lcall
mov
or
lahf
sub
js
dec
jmp
inc
pushf
add
and
mov
outsb
pop
lret
shr
loopne
ss
fcomp
jge
pop
cmpsb
shrb
into
mull
and
push
mov
in
fmull
movsb
inc
push
sbb
jmp
imul
or
adc
or
sti
mov
cs
testl
mov
pop
movb
cmp
cmp
pop
roll
mov
pop
mov
dec
inc
push
fwait
leave
mov
sbb
sub
popf
icebp
mov
cmp
movb
popa
test
push
adc
out
call
jmp
movsl
mov
out
out
out
in
jae
dec
mov
scas
adc
mul
outsl
mov
jmp
or
sub
mov
push
daa
popa
insb
cs
mul
jno
inc
sti
fdivrl
mov
push
pop
mov
ret
jns
pop
mov
xor
out
xlat
data16
cmp
notb
bnd
jge
adc
inc
stos
rorl
mov
and
mov
pop
les
stos
push
xor
lcall
jl
das
mov
cmp
push
mov
adc
dec
out
test
cmp
or
iret
add
and
adc
lock
sti
cmpsl
sub
imul
das
pop
out
in
adc
aas
enter
or
sbb
dec
inc
scas
or
ret
scas
int3
inc
std
int3
in
pop
inc
lods
xor
adc
test
dec
xchg
hlt
xchg
mov
data16
in
test
lcall
jg
shll
shrd
cmpsb
nop
aam
scas
cmp
mov
xchg
pop
repnz
pushf
or
fsubrs
add
cs
mov
mov
repz
inc
xchg
ffree
popa
data16
cmp
pop
sbb
sub
cmpsl
into
or
adc
sbb
pop
lret
pop
out
inc
add
gs
or
sub
rorl
inc
pusha
lret
inc
scas
cmp
je
stc
fst
and
bt
xchg
icebp
lock
aaa
lea
sbb
int
decb
lods
std
mov
or
or
inc
fs
xchg
call
add
shl
arpl
mov
xchg
leave
fnstenv
lahf
jae
insl
movsl
pusha
mov
stc
sbb
andl
jge
xchg
inc
nopl
add
pusha
fidivs
mov
fwait
fs
dec
dec
and
clc
testl
cmp
pop
inc
pop
inc
inc
outsb
test
loop
or
fwait
inc
cmp
cmp
jge
adc
jb
push
data16
mov
std
pop
sub
pop
xor
push
mov
fcmovnbe
lock
pop
out
pop
sub
faddl
cmp
lcall
rolb
jnp
in
mov
call
fcomi
test
cmp
insb
mov
sub
cli
inc
xchg
cmp
clc
push
mov
push
cmc
loope
insb
std
shrl
jno
call
rolb
cli
sub
dec
xor
mov
fwait
div
push
xchg
test
hlt
fnstenv
ret
jecxz
loopne
mov
imul
jbe
add
mov
scas
dec
jnp
jmp
mov
mov
pop
enter
push
cmpsb
jnp
insb
sti
xor
mov
outsb
test
mov
xchg
int
jno
sub
out
xlat
xlat
xchg
pop
mov
pop
icebp
cld
gs
stos
cwtl
repnz
fidivs
pop
ja
std
push
pushf
cs
xchg
test
push
stc
adc
and
test
cmpsb
jge
or
test
xchg
mov
inc
push
cvtpi2ps
lock
adc
mov
inc
cmp
jnp
jo
mov
popf
xor
aad
add
xorl
mov
fstl
aam
lock
filds
imulb
cli
dec
andb
pop
cmp
add
mov
xchg
jno
scas
sbb
adc
jo
jle
push
hlt
lea
lret
add
mov
push
add
cmp
push
cli
cltd
add
push
mov
adc
mov
sahf
subl
sub
in
popf
or
or
and
insb
decl
push
enter
dec
dec
jno
jne
cmp
fdivrs
bound
scas
push
arpl
pop
testl
fmul
sbb
inc
jae
cmp
lret
lret
bound
jbe
leave
aad
in
stos
into
insl
lock
mov
popf
movsl
jne
jp
int3
cmp
sbb
je
mov
and
aaa
xchg
push
lds
sub
add
inc
sub
mov
pop
mov
mov
add
inc
inc
mov
mov
out
mov
jmp
roll
fcompl
push
dec
subl
sysexit
lret
in
inc
out
push
das
mov
jb
and
outsl
test
lods
adc
jge
insb
push
jp
and
xor
lret
cmp
mov
out
stc
or
shll
popl
test
dec
ss
push
or
pop
outsl
mov
jecxz
mov
cmp
cmp
and
cmp
ljmp
or
es
add
jp
int3
nop
sub
stos
or
mov
into
fcmovb
and
xchg
sbb
lock
cmp
sahf
xchg
lods
and
les
into
lods
lcall
hlt
jbe
sbb
add
ret
les
pop
fiadds
push
inc
pushf
mov
mov
mov
out
shlb
dec
insb
in
loope
scas
ficoml
push
aad
ss
es
mov
dec
jbe
iret
sar
scas
iret
ret
stc
sbb
loop
add
stos
mov
dec
loop
pop
pop
sub
jns
daa
xchg
inc
popa
fistpll
int3
mov
sahf
out
fsubs
mov
jno
lock
in
pop
jnp
mov
out
and
in
push
mov
rcr
mov
xchg
inc
enter
mov
pop
pop
fldt
add
jae
adc
fwait
pop
aas
xchg
insb
ljmp
sub
push
sarb
jecxz
adc
call
push
lock
cmpb
or
cmp
push
ret
sahf
in
and
popa
out
cmp
pop
int3
push
std
sar
js
add
xchg
cmp
insb
stos
iret
mov
sub
das
pop
lret
inc
shrb
sub
push
pop
adc
cmp
jne
leave
push
xor
push
insl
xlat
lahf
pop
arpl
push
fmuls
jae
lret
lods
int
in
cmp
push
and
mov
aaa
and
pop
mov
push
pop
mov
add
sbb
sub
fcomi
mov
enter
jmp
xchg
out
lock
clc
ficoml
dec
aaa
jmp
mov
js
mov
fidivrl
sub
pop
sbb
push
mov
in
add
cmp
dec
sahf
lock
mov
sbbl
jge
pop
and
jecxz
fadds
cmp
sahf
mov
dec
mov
adc
dec
lahf
ljmp
jl
daa
int3
inc
cld
xor
hlt
loope
lret
repnz
inc
mov
ret
popf
scas
jnp
mov
sbb
out
mull
icebp
ret
out
jecxz
leave
sbb
or
das
ss
pop
cltd
pop
jns
sti
cltd
dec
sub
dec
push
mov
lods
mov
shrl
cwtl
inc
in
ja
cli
jns
mov
ficomps
fs
stos
mov
dec
and
int3
jns
pop
test
jle
out
testl
xor
mov
mov
jno
push
xor
xchg
mov
dec
out
addb
cmpsl
std
dec
cwtl
inc
sub
popa
mov
or
adc
pushl
dec
push
test
hlt
xchg
fsubs
xor
outsb
lret
les
test
movups
adc
jmp
pop
sbb
and
hlt
cmp
jno
lods
sbb
hlt
cmp
mov
mov
insl
jne
cmp
mov
and
mov
sahf
dec
sub
mov
mov
shll
jmp
jecxz
cmp
iret
add
xorl
or
jbe
push
movsb
add
fcmovnbe
sbb
sbb
sahf
fbstp
cld
inc
adc
lea
inc
adc
jecxz
std
or
mov
dec
cli
out
pop
scas
adc
in
call
xor
and
aaa
outsb
push
add
inc
out
imul
sbb
xor
sub
sub
out
cmovbe
sti
jecxz
push
sbbl
in
sub
ss
dec
mov
in
push
rcrb
dec
mov
clc
inc
insl
adc
jge
sbb
adc
add
mov
xchg
xor
lahf
fcompl
pop
push
icebp
or
pop
pop
pop
cs
rcr
ret
cld
inc
adc
jle
mov
aad
fidivrs
adc
stc
lcall
idiv
jnp
jge
push
sub
les
sub
sbb
ds
repz
mov
in
dec
cmpsl
jg
insb
call
popa
mov
vmread
sub
xchg
or
mov
mul
out
xchg
jne
jbe
sti
lods
xlat
inc
fsts
hlt
les
pop
ljmp
adc
mov
mov
clc
imulb
inc
push
call
pop
cs
lret
pop
push
inc
fmull
xchg
cmpsb
cld
xchg
movsl
mov
aas
adc
addr16
or
shrb
lret
mov
pop
jecxz
xor
mov
jae
add
daa
and
enter
push
inc
xor
jne
sub
pop
mov
test
add
adc
int3
cmp
stos
xor
mov
popa
push
imul
lods
push
sbb
dec
push
dec
popf
xor
dec
cmpsb
icebp
cmc
sarl
mov
sarb
dec
pop
push
mov
cmp
push
lods
add
ds
sbb
call
jl
addr16
sbb
sbb
xchg
jae
aaa
out
xor
cmpsl
jnp
sbbb
inc
adc
nop
in
dec
stos
leave
cmpsl
mov
jbe
dec
loopne
fwait
add
cmpsb
dec
movsb
cltd
and
sbb
ja
adc
mov
hlt
cmp
cwtl
mov
outsl
dec
test
mov
loopne
push
xchg
mov
dec
mov
sti
pop
clc
adc
cmp
push
xor
leave
rcrl
cmp
popf
sub
rclb
das
bound
leave
jmp
insl
and
adcl
inc
leave
subb
or
clc
cs
inc
imul
jb
mov
pop
mov
dec
out
dec
xchg
inc
xlat
jl
dec
sbb
add
imul
lods
cmpb
incl
negb
rclb
lods
jb
dec
insb
imul
ljmp
icebp
inc
mov
dec
int3
lret
popa
mov
fucomi
cmp
clc
pop
cmp
inc
mov
pop
test
cmp
rorl
pop
lods
cmpl
pop
mov
mov
inc
pop
scas
fstps
xchg
push
imul
ficomps
push
fldl
lods
xor
xchg
or
subb
xor
bound
fstpl
pop
cwtl
push
sbb
loop
xor
ror
imul
in
cld
ror
rcrl
es
lods
rcl
mov
dec
lret
in
dec
jne
loope
dec
clc
daa
add
pop
jp
ljmp
adc
jb
ds
test
aam
adc
jno
movsb
dec
and
jmp
sbb
pop
ret
mov
push
filds
pop
repz
pop
cs
cli
xorl
or
pop
insb
jae
push
test
pop
outsb
loope
enter
aas
leave
cli
imulb
shl
outsb
push
mov
imul
jmp
movl
inc
jp
je
sbb
add
push
adc
int3
stos
cli
arpl
push
sbb
xchg
and
sarl
adc
pop
cmp
xor
icebp
push
adc
mov
push
adc
pop
add
cmp
dec
imul
jle
and
pop
push
lods
aaa
jnp
inc
jmp
sbb
adc
cmovs
popa
jg
mov
cs
insb
or
xlat
cmp
jecxz
rcrl
aas
adc
lss
push
popa
xor
repnz
sub
into
ss
inc
fcoml
mov
arpl
icebp
xchg
loop
jmp
aad
cwtl
pop
into
pushf
cld
cmpsb
mov
fisubs
movsb
mov
add
int
push
adc
jno
jno
orb
pop
rsqrtps
pop
dec
inc
test
cmp
enter
add
push
mov
outsb
pop
mov
rcr
cltd
sbb
outsl
mov
int3
sarb
sub
jle
aaa
sub
mov
sti
push
cmpsl
mov
addr16
pop
cmp
jl
test
fnstsw
add
adc
cmpl
lds
jno
out
pop
mul
adc
pop
pop
je
pop
jmp
mov
add
pop
loop
sbb
mov
shlb
shll
dec
in
jb
int3
mov
stc
xchg
adc
push
add
ljmp
push
test
ss
fdivl
inc
stc
repz
inc
sbb
jae
pusha
ljmp
xchg
ja
fimull
inc
aad
mulb
test
stc
mov
xlat
mov
and
or
fdivs
ljmp
cmpsb
insb
push
pop
xor
mov
mov
sbb
push
in
push
mov
mov
cmpsl
dec
icebp
call
and
sti
xor
push
or
cmp
movsl
jbe
arpl
bound
aad
mov
pop
mov
mov
into
sub
fistps
cltd
mov
sub
out
push
cs
dec
dec
int3
jnp
enter
out
andl
or
dec
mov
stos
mov
lret
xor
xorb
sub
jp
xlat
pop
mov
sbb
scas
cld
pop
cmpsl
xchg
add
xchg
andl
addr16
mov
fidivrs
std
xchg
enter
adc
out
pop
sbb
iret
lahf
gs
jmp
push
mov
lods
pop
adc
sbbb
push
jno
mov
std
push
movntps
xchg
xor
ror
inc
push
jb
movsb
and
pop
jecxz
mov
mov
add
cmp
ret
loopne
scas
pop
bnd
xor
mov
jbe
mov
cli
nop
hlt
addr16
jl
js
mov
and
xchg
mov
adc
setle
ds
leave
pop
and
mov
mov
jle
sub
inc
mov
aas
cld
jns
lea
sub
jl
mov
xor
mov
pop
nop
mov
cmp
push
sub
cltd
icebp
pop
dec
outsb
push
jmp
sub
pop
xchg
cwtl
fwait
stos
dec
aas
jmp
jp
cmpsl
frstor
stc
mov
pushf
push
test
rcll
jo
sub
test
push
pushf
call
xchg
adc
lds
cmpsb
pop
cmp
mov
shrl
mov
fstpt
or
rorb
pop
mov
gs
inc
test
fisttpl
xchg
mov
cmp
xchg
add
outsl
insl
aaa
inc
outsb
and
sbb
push
add
nop
out
jmp
movsl
xorb
ds
aas
out
mov
gs
movsl
popf
adc
cli
mov
sti
adc
cwtl
jnp
inc
aam
mov
xchg
addr16
jne
fmulp
xchg
inc
int3
sub
call
loop
xor
jecxz
sbb
mov
mov
frstor
mov
xchg
adc
lea
jo
push
cmp
add
pop
and
pextrw
jbe
xchg
mov
out
ret
movsl
pusha
fmull
lea
sti
jno
and
in
push
cmp
cld
mov
out
add
test
sub
addr16
jle
xorb
push
sarl
dec
xor
rorb
frstpm(287
stos
cltd
arpl
push
das
or
lahf
dec
ja
jge
and
shl
sub
xchg
imull
vsqrtss
mov
jp
dec
jnp
jp
mov
and
adc
out
test
pop
pop
out
in
dec
das
or
sub
add
fwait
inc
inc
push
adc
cmp
jo
adc
push
push
sub
mov
test
ret
out
mov
bound
iret
sub
and
inc
data16
mov
inc
sbb
adcl
fisttpl
add
hlt
sub
jl
ret
call
mov
and
jne
add
xchg
mov
insb
or
sub
sub
xchg
add
xor
mov
xchg
or
xlat
cld
mov
adc
jmp
ss
mov
int3
sub
negl
sub
into
dec
push
subb
scas
jae
mov
loopne
push
sub
cmpsl
arpl
in
mov
adc
push
outsl
add
mov
xchg
mov
sahf
iret
push
adc
pushf
fnsave
xor
push
outsl
movsl
add
jl
xchg
and
negb
insl
inc
and
movsl
mov
jmp
fmul
fcmovu
outsb
add
mov
ret
mov
dec
sub
inc
mov
jb
sub
call
and
filds
test
ds
mov
xchg
xchg
pop
mov
xchg
mov
in
cli
rcrb
std
push
ror
clc
ja
out
gs
scas
xorl
sti
xlat
inc
call
cmpsb
mov
and
movl
xlat
pushw
adc
hlt
wrmsr
js
and
bound
add
or
sbb
popa
arpl
xchg
xor
les
jb
pushf
sub
mov
jo
inc
xor
sbb
cwtl
push
mov
push
mov
ja
push
pop
lret
cmpsb
xchg
pop
pusha
pop
cmc
mov
imul
insb
jg
icebp
out
mov
sbb
add
inc
ficoml
adc
mov
incb
inc
hlt
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
movsl
mov
lret
bound
aam
sbb
mov
orl
adc
fisttpl
test
dec
jg
pushf
mov
pop
xchg
out
xchg
es
pop
dec
in
and
mov
mov
das
push
mov
cltd
insb
sbb
pop
xchg
and
push
jl
jo
cmp
cmp
push
lods
ljmp
pop
cmp
popf
push
outsb
scas
in
out
sub
cmp
jno
adc
pop
loop
xchg
dec
push
pop
xor
clc
mov
mov
xor
int
in
ret
call
sub
es
insb
jbe
jmp
notl
shr
xchg
sbb
push
mov
mov
pusha
xchg
outsb
mov
dec
lock
push
adc
adc
mov
cmpsl
cwtl
out
mov
mov
cli
gs
repz
add
mov
cs
hlt
repz
dec
mov
std
lods
adc
addl
dec
cmp
fisttps
sbb
in
mov
fidivl
push
mov
clc
cmp
xchg
xchg
popa
inc
lret
push
pop
cmp
inc
sahf
in
jbe
pusha
push
pop
cltd
mov
xchg
aas
push
imul
pop
xor
fcomps
scas
aas
shlb
xchg
cmp
jne
imul
xor
fcmovnbe
jo
mov
and
push
mov
fdivr
jo
scas
push
push
sbb
mov
test
mov
xor
loope
push
jl
lret
inc
mov
xchg
fwait
sub
adc
mov
inc
stos
mov
or
std
mov
outsb
inc
jl
push
popf
orl
mov
in
jbe
mov
mull
xchg
fbld
inc
mov
pop
jo
lcall
lea
push
fimull
jp
lods
mov
popf
outsl
xor
mov
je
or
sbb
testb
push
jae
push
mov
add
popa
loope
dec
mov
stos
sbb
js
add
add
dec
insb
push
in
aas
outsl
mov
jno
mov
pushf
lahf
movl
popf
insl
inc
imul
mov
xchg
mov
rcrb
pop
insb
lret
add
push
mov
mov
mov
xchg
mov
fisttps
sub
mov
sub
jg
out
xchg
xlat
inc
outsl
jnp
adc
inc
lret
repnz
aas
push
pop
push
test
and
mov
and
int
xchg
shr
sbb
sub
enter
lret
pop
ds
sti
mov
or
jmp
into
or
aaa
cmp
aam
lock
pop
jnp
cli
call
sub
rorl
xchg
mov
test
into
out
xchg
inc
es
jmp
test
mov
pop
push
push
jmp
mov
mov
mov
dec
divl
push
shrl
mov
xchg
sub
push
push
aas
fwait
int3
inc
mov
lahf
mov
inc
je
add
scas
sub
cld
inc
movsb
hlt
cmp
loopne
jne
sbb
bound
divl
xor
sub
xchg
inc
nop
fcmovnu
jge
mov
push
push
xchg
pop
ficoml
in
lock
mov
int3
mov
xchg
add
test
int
decl
div
mov
inc
repz
data16
pushf
inc
xchg
adc
ret
push
ja
add
xor
sub
mov
mov
sbb
cli
loop
sbb
into
dec
imul
imul
test
iret
adc
add
fsubp
xchg
adc
imul
adc
mov
sbb
jnp
scas
cmp
mov
dec
cli
pusha
push
dec
fmuls
inc
into
mov
test
sub
nop
push
add
pushf
enter
xchg
inc
inc
inc
setne
pop
cmp
test
sub
lahf
scas
mov
dec
clc
xchg
sbb
mov
sbbl
pop
xor
or
sub
push
clc
cmp
xchg
test
pop
lcall
hlt
pop
clc
xor
mov
mov
int
cmp
bnd
ja
mov
mov
sub
scas
daa
jle,pn
mov
xor
jp
stc
pop
mov
lods
xchg
xor
adc
or
sbb
mov
jno
dec
pop
mov
int
lret
dec
sbb
arpl
or
mov
cmp
lahf
push
fwait
inc
jo
out
dec
dec
aas
pop
pop
test
cltd
sub
mov
outsb
lods
mov
mov
inc
cmc
pop
fcoms
mov
scas
lea
fbstp
push
negl
jnp
mov
scas
add
sub
out
jg
and
add
mov
mull
into
adc
push
adc
sbb
fcmovu
roll
ss
push
xchg
not
jb
repnz
jns
jmp
repnz
adc
pop
cmp
int3
sub
xchg
mov
jne
jnp
and
inc
jg
inc
add
adc
lahf
jle
push
test
cwtl
dec
adc
std
repz
push
lret
jle
dec
and
testl
push
imul
repz
push
cli
popa
add
cmp
cmp
dec
inc
in
mov
dec
lret
outsb
mov
push
mov
imull
add
sahf
lret
or
scas
in
loope
fcompl
aad
pushf
rcll
ljmp
lods
daa
pop
shll
addr16
mov
jno
hlt
mov
in
lods
test
jecxz
ds
xlat
les
push
inc
add
cwtl
into
bound
pop
mov
into
out
ss
xchg
push
pop
repnz
fwait
sbb
jb
mov
add
dec
into
cmp
mov
jo
arpl
jb
shrb
jae
popf
inc
jo
cltd
xor
mov
fidivs
ret
jmp
cmp
or
aaa
push
ja
dec
into
shlb
xor
fldenv
cltd
sub
inc
cli
loope
xor
loopne
add
int
cmp
lock
divb
sbb
adc
pop
repnz
mov
cmp
xchg
and
jbe
aad
aas
cmp
and
xor
imul
sarl
daa
arpl
pop
into
pop
add
inc
cmp
shlb
dec
data16
xchg
jle
pop
sub
insb
aas
scas
xor
push
push
imul
mov
cmc
pop
insb
jecxz
mov
test
add
jbe
add
cs
push
jae
out
lds
inc
mov
jmp
shll
cs
loope
outsb
jo
loop
stos
imul
or
dec
jns
lret
out
fcompl
lret
repnz
pop
stc
inc
shrl
push
mov
jmp
test
aaa
test
pop
stc
sub
enter
mov
test
push
jecxz,pt
movsl
pop
notl
dec
xor
popf
push
stc
jbe
das
push
cmp
xor
add
cmc
sbb
xchg
aad
mov
loop,pn
pop
xchg
fisubrl
daa
mov
and
jns
pop
test
or
jo
icebp
add
mov
in
rorl
popa
mov
xchg
ret
ljmp
out
xchg
mov
ret
nop
testl
dec
stos
lret
andb
push
das
xor
mov
cld
jb
rcll
xor
dec
insb
out
fisubl
sbb
aaa
cmpsb
jp
push
rorl
bound
xchg
enter
xor
loopne
fcmovnbe
pop
fdivrs
and
bound
arpl
ja
and
mov
push
cmpsb
in
notb
jae
xchg
addr16
mov
daa
push
test
mov
lock
movsb
jo
sbbb
or
add
inc
jp
stos
jae
sahf
addr16
nop
dec
and
push
push
scas
inc
rolb
cmpsw
inc
ret
scas
cmp
in
enter
outsb
xchg
jb
push
mov
repnz
call
out
cmp
fcmovbe
add
sbb
pop
fistpl
mov
daa
jmp
seto
xor
lcall
je
sahf
xchg
daa
orb
rcll
pop
sbb
adc
icebp
cmpsb
mov
rorl
mov
call
fs
push
cs
dec
int
lcall
jns
dec
sar
jae
lds
pop
adc
fucom
mov
push
icebp
outsl
push
xchg
ret
push
data16
sub
into
repz
mov
pusha
fdivs
push
sbb
test
jl
andl
cmp
aam
enter
aas
stc
or
mov
jns
add
add
leave
push
bound
add
add
add
jp
xor
aas
sub
mov
pop
fsubrs
cmp
mov
sub
out
jp
xchg
xchg
outsl
stos
jl
loopne
sbb
lret
pop
mov
mov
push
sub
stos
inc
cmovbe
mov
mov
insb
and
pop
sbb
jno
test
cmc
lods
xchg
lret
jb
cmp
fisttpll
aad
stc
xchg
shl
dec
push
movhps
jle
cmp
xor
jne
ret
movsl
loop
pop
popf
ret
ljmp
std
xor
icebp
pop
leave
adc
mov
xor
inc
xor
aad
loope
push
ret
push
pop
xchg
jo
int
jbe
xlat
int3
push
in
cld
cli
lret
sub
aam
pop
cs
fisubrl
mov
fidivrl
mov
es
xchg
mov
jle
push
loop
xchg
push
lds
sbb
mov
daa
cld
xor
in
call
in
sti
lahf
sub
add
push
cs
adc
cmpsb
cmpl
add
cli
enter
lds
add
stos
push
or
je
daa
cmpsb
mov
imulb
popf
data16
xor
scas
scas
dec
xchg
jae
mov
je
shlb
addr16
xchg
ljmp
dec
inc
movq
fcomps
jecxz
jb
frstor
not
xchg
mov
inc
sub
cltd
pop
pop
mov
cmp
lds
popa
mov
movsl
pop
dec
pushf
pop
lahf
movsl
add
push
loop
enter
push
jae
mov
clc
cmp
xchg
pop
jbe
and
push
push
stc
js
mov
sbb
sub
mov
dec
dec
js
fcmovu
leave
leave
in
or
inc
pop
push
loopne
adc
xor
and
in
pop
mov
gs
pop
push
aaa
cli
jmp
jno
pop
add
xchg
push
cmp
jp
cmc
dec
dec
xchg
pop
fidivl
xchg
popa
lret
xchg
dec
push
test
sbb
sub
add
movsl
bnd
fiaddl
mov
nopl
inc
add
jo
cmp
sub
jecxz
add
add
sbb
xchg
push
movsl
jg
push
dec
adc
mov
pop
mov
jmp
mov
mov
in
cmp
in
jle
push
or
insl
loope
sub
mov
in
fisubl
jecxz
xchg
movsl
mov
inc
and
fbld
into
lods
mov
mov
out
imul
cmc
fnstcw
mov
mov
cmp
in
lods
or
fwait
add
rolb
pop
inc
cmpsb
mov
movsl
test
pop
jnp
ret
sub
clc
inc
popa
ret
sub
add
cmpsl
and
jecxz
mov
mov
xchg
cld
ds
gs
inc
je
and
sbb
pop
and
jmp
pop
mov
sub
mov
aaa
out
jge
pushf
repz
sub
or
jnp
or
bound
fldt
pop
push
cmp
xor
dec
pop
xchg
int3
inc
dec
addr16
add
or
shll
insb
sub
jg
fidivl
divb
ds
lahf
lret
dec
and
leave
cmp
movsl
or
add
pop
test
inc
clc
mov
xchg
in
es
cmp
mov
out
inc
mov
xor
xlat
mov
test
or
sbb
cmpsl
jmp
lock
inc
mov
imul
hlt
pop
mov
mov
mov
shl
pop
inc
cmc
xor
sub
lret
fbstp
int3
into
in
pusha
ja
les
pop
fimull
das
stos
dec
dec
sarl
adc
xor
xor
movsl
or
inc
dec
out
stc
jmp
out
fidivs
fmull
mov
add
add
mov
xchg
ljmp
je
push
dec
add
add
push
cli
insb
cmp
and
ficompl
mov
hlt
fwait
icebp
lret
cmpsb
rclb
out
push
push
cld
enter
je
pusha
xor
shll
in
pop
ffree
adc
rclb
jl
loop
jb
out
sub
adc
inc
rorl
pop
mov
push
adc
outsl
xor
ja
cmp
adc
inc
push
adc
cld
lret
loop
lret
call
daa
push
stos
xchg
push
dec
cs
repz
xor
fisubrs
lods
out
idiv
pop
mov
adc
aaa
aad
arpl
filds
imul
cmpsb
cmp
jne
inc
pop
cwtl
adc
xor
jp
daa
add
push
push
pop
adc
fsubrs
cltd
insb
dec
mov
mov
lret
mov
out
cld
push
test
sti
outsb
and
icebp
push
xor
out
fwait
js
out
repz
xor
cld
adc
js
adc
sbb
popa
mov
dec
jmp
or
sub
les
push
dec
fistpll
rcll
jbe
sarb
mov
gs
adc
mov
push
sti
sub
mov
iret
pop
cmp
mov
lahf
mov
cmp
xor
mov
lea
sub
mov
xchg
inc
mov
adc
pop
ss
push
jg
push
aam
sub
mov
daa
pop
out
xor
push
pop
rorb
jo
mov
out
fbstp
ret
pop
out
popf
cli
clc
loop
mov
dec
out
mov
add
mov
popf
adcl
xor
inc
push
adc
jmp
cmp
xor
dec
sbb
xchg
jecxz
fmull
daa
mov
mov
pop
out
into
shlb
inc
mov
dec
xchg
in
pop
push
jg
cmp
leave
in
mov
div
fdivrl
sub
mov
sbb
mov
mov
xchg
sub
lret
cmp
and
cmp
sub
cmp
aad
mov
stos
repz
xchg
fxch
or
lods
fisttpll
popa
xchg
sbb
lret
or
pop
or
mull
mov
aam
out
movsb
mov
push
dec
jae
cmpl
mov
in
adc
xor
bound
adc
xchg
insl
xor
mov
lods
pop
dec
hlt
fidivl
je
ret
fildll
sahf
or
mov
cmp
cwtl
movl
cwtl
outsb
test
add
inc
or
jmp
jecxz
fistps
pusha
mov
out
jne
adc
inc
mov
sub
mull
jle
fsubs
sbb
sub
sub
mov
test
mov
lahf
repnz
mov
pop
sarl
scas
push
rcll
push
pop
xor
add
fidivrs
xchg
test
popa
mov
mov
xor
jae
pop
test
xchg
push
jns
inc
fwait
clc
inc
jecxz
cwtl
in
rcrl
xchg
pop
js
into
mov
nop
mov
iret
xchg
or
sbb
mov
out
mov
xchg
jne
fs
fstpl
mov
sub
adc
in
stos
sbb
not
lret
mov
inc
dec
popf
xor
scas
shr
inc
dec
lds
das
ja
pop
jg
fisubrs
mov
fs
filds
bound
xchg
scas
push
mov
movsb
and
lret
out
pop
imul
aas
testl
pop
add
daa
add
jae
dec
push
adc
push
pop
cmp
pop
mov
imul
cmp
lret
das
loop
int3
cmp
clc
jbe
xor
jl
and
call
sbb
add
adc
sub
in
pop
or
jg
mov
into
push
cmp
or
jecxz
xchg
mov
leave
dec
sbb
mov
jle
adc
jns
pcmpgtd
adc
sbb
xchg
cmp
or
mov
push
cmpsb
enter
iret
std
call
mov
dec
inc
mov
fcompp
pop
jbe
mov
lods
pop
push
imul
mov
lcall
pop
pushl
shlb
jl
xchg
outsb
or
push
sahf
int
iret
inc
mov
adc
push
aaa
lret
nop
adc
loopne
pop
mov
dec
add
xchg
mov
ret
pushf
test
and
push
jecxz
inc
sub
sbb
jae
je
fs
into
xor
jp
mov
jo
and
fsubrs
mov
push
cwtl
xor
xchg
jns
arpl
and
dec
ret
and
call
repz
push
fidivrs
fidivrs
inc
mov
loop
cli
cs
adc
mov
dec
pop
jg
jmp
cmpsl
popf
mov
stos
push
inc
mov
adcb
push
add
scas
lods
movsb
push
insb
or
pop
push
pop
movsl
call
psadbw
lahf
dec
mov
add
mov
mov
dec
adc
daa
push
adc
inc
jge
cmp
sub
in
sbb
dec
push
enter
mov
lock
push
lods
inc
sbb
lock
jno
pop
cli
sahf
sub
es
adc
test
int
xchg
push
lcall
lock
sahf
xchg
jbe
cmc
into
sub
leave
cld
mov
stos
mov
lods
pop
test
loope
movsl
sarb
loope
cwtl
mov
je
loop
pop
fsubrp
pop
lcall
cltd
mov
jbe
icebp
push
jle
pop
xor
std
faddl
std
xlat
xchg
outsl
jmp
xchg
pop
fdivrs
xchg
adc
les
shlb
fldt
bound
adc
cli
movsl
mov
pop
mov
cmc
call
dec
lret
mov
leave
or
test
pop
xor
mov
jb
adc
cmp
pop
or
sub
aam
mull
cmpsl
pop
and
repnz
push
popf
scas
int3
mov
movsb
push
or
xor
and
mov
push
sub
jno
in
pop
and
dec
inc
jo
push
shlb
xchg
mov
cld
icebp
fwait
insl
add
popa
addr16
fbld
aaa
sar
lret
arpl
jmp
subl
cwtl
ret
mov
test
dec
mov
xorl
cmp
jl
rolb
sub
jg
and
and
js
pop
imul
mov
xchg
mov
lret
ret
push
mov
hlt
xor
dec
lea
fwait
dec
dec
xor
push
rclb
xor
sub
sub
push
std
notl
cli
mov
lds
test
adc
rcll
mov
inc
sbb
aaa
aaa
sbb
mov
das
mov
push
in
mov
dec
jg
scas
test
push
and
pop
stc
adc
push
rcrl
scas
cmpsl
jb
in
inc
jle
and
pop
idiv
sub
xlat
or
dec
mov
das
ds
aaa
or
mov
or
rorl
ret
mov
xor
dec
pop
pushf
jns
in
or
jg
jno
mov
xchg
orb
das
shlb
movsl
dec
xor
aas
push
and
aam
hlt
out
xchg
dec
and
mov
mov
mov
and
xor
fistl
out
cmp
aas
scas
out
enter
fidivl
scas
cmpsb
aas
js
cmp
sub
mov
xor
cmp
mov
xchg
mov
fstpt
push
loop
inc
sarl
jbe
mov
aaa
or
pop
out
and
inc
rorl
shll
jp
dec
sub
push
ljmp
xor
jno
add
fiadds
pop
jne
repnz
rol
sbb
into
mov
lock
cmpsl
out
and
das
xor
jae
into
mov
mov
adc
push
jge
pop
or
in
mov
int
or
dec
out
mov
xchg
into
sbb
out
cltd
loope
jns
dec
int
and
aaa
stc
jge
or
popa
test
jnp
stos
cli
outsb
mov
stos
cmp
lds
jbe
jne
pop
stos
add
lea
pop
jno
pop
insb
sub
aas
cmpsb
pop
aas
lcall
sbb
notl
push
aam
sbb
ds
push
es
sbbb
test
ret
imul
mov
ficomps
mov
test
inc
idivb
mov
ss
mov
dec
push
and
outsb
cmp
or
nop
aad
sbb
es
gs
jnp
dec
ds
and
jl
jl
lcall
mov
push
or
ds
or
out
js
cltd
jecxz
pop
push
inc
into
adc
inc
or
cmp
rcrl
sub
hlt
ss
inc
int
dec
into
or
and
fs
lret
cltd
sahf
bound
add
test
sbbb
ljmp
pop
inc
movsl
inc
push
lods
push
jnp
movsb
insb
adc
call
in
sbb
jns
lods
inc
xlat
andl
jbe
imulb
or
pop
xor
es
mov
and
and
ds
push
lds
adc
clc
vmovdqa
add
xor
xlat
mov
xchg
test
push
enter
sbb
popf
in
dec
xor
sarb
mov
into
fs
lods
std
push
pop
rclb
scas
test
fiadds
ja
loope
jmp
cmp
icebp
mov
mov
ret
adc
icebp
in
lock
movsb
xchg
and
clc
sbb
imul
or
sub
lret
leave
mov
jnp
or
push
lcall
filds
push
popf
sub
mov
adcl
ss
fdivs
cmc
dec
or
and
jl
loopne
int
scas
es
pop
addr16
or
push
inc
fwait
adc
inc
jecxz
lods
int3
icebp
shlb
iret
sub
pop
sub
ja
jne
out
adc
iret
xchg
pop
sbb
inc
mov
ljmp
jmp
test
rcrb
push
loop
mov
push
shrb
sub
cmp
cmp
fdivrl
inc
in
mov
hlt
mov
lods
repnz
and
xchg
mov
lds
sub
js
or
mov
or
jg
adc
mov
fcom
mov
push
mov
fwait
lcall
jae
cs
lret
or
movsb
jecxz
lock
dec
pop
inc
movsl
iret
jno
xchg
sub
inc
dec
sub
mov
add
xchg
xchg
or
mov
gs
divb
or
repz
rcll
test
push
mov
and
mov
lahf
dec
in
add
or
mov
adc
mov
dec
lcall
call
jno
xor
jne
aam
dec
dec
xor
mov
pusha
pop
cmp
jbe
pusha
fs
mov
sub
pop
mov
sub
arpl
push
jno
fstpt
sub
sbb
loope
jp
adc
mov
dec
aas
add
iret
add
push
subl
cmp
push
mov
sbb
in
stc
jno
mov
pop
outsb
push
out
cmpsl
inc
inc
cli
loopne
inc
rcrl
pushf
mov
jmp
xchg
and
cmpsb
je
jb
xor
jecxz
push
popa
rorb
outsb
in
stc
test
xchg
mov
sub
sbb
sub
mov
ss
mov
scas
aam
mov
testl
cmp
cld
sub
sbb
jbe
daa
sub
push
pop
or
jne
push
pop
sahf
push
pop
fdivrs
and
cmpsl
mov
scas
gs
mov
lds
cmp
les
out
out
and
dec
xchg
in
jg
push
cmpsb
inc
xor
sbb
imul
into
dec
into
pop
dec
add
rolb
aam
addr16
lret
repnz
and
mov
or
std
lods
dec
jns
mov
rorl
enter
mov
mov
jb
xchg
aaa
daa
adc
mov
and
cmp
push
adc
mov
xor
mov
popf
aas
inc
stc
push
push
add
jbe
mov
adcb
push
movsb
stos
xchg
push
inc
pushf
icebp
adc
clc
push
xchg
push
jne
jge
xchg
dec
into
int
push
xor
sarl
pop
jbe
loope
into
out
lods
add
xor
xchg
in
jmp
push
loop
cmp
jg
and
lahf
mov
mov
or
dec
std
jo
inc
mov
loope
imul
mulb
or
std
jg
inc
out
fsubrl
aas
es
gs
je
pop
out
cmp
mov
cmp
shlb
fisttpl
cmp
dec
imul
xor
fs
push
decb
sbbl
or
cmpsb
int3
adc
push
jne
pop
and
mov
insb
in
in
into
and
fstps
pop
pop
ljmp
clc
stc
inc
inc
mov
ficoml
movsb
stc
ret
test
test
rcrb
mov
les
orl
dec
push
push
jp
ds
mov
mov
pusha
lret
sub
mov
push
cmpsb
pusha
popa
mov
pushf
stos
in
es
int
inc
cmp
mov
mov
xchg
ss
out
cmp
call
jmp
stos
mov
repz
add
push
cmp
mov
fldlg2
inc
jb
xor
outsl
jne
or
filds
cmp
inc
sub
nop
pop
sub
sub
pop
pop
inc
cmp
aad
orb
xor
push
lods
aad
push
sub
jmp
push
add
je
sub
push
out
mov
jae
clc
cmp
ljmp
mov
xor
pop
inc
subl
repnz
or
lods
push
inc
xchg
fisubrl
daa
pop
pop
lret
mov
mov
pop
xchg
mov
sbb
fstps
push
cmp
push
jnp
jae
iret
dec
and
lret
xchg
mov
gs
pop
inc
pop
int3
fists
or
cmp
fdivp
mov
fistl
ss
gs
mov
loope
jo
mov
ja
fnstenv
jmp
jle
stc
fisttpll
std
xor
adcb
jg
scas
add
popa
out
mov
dec
xor
icebp
addr16
cmp
ds
paddw
mov
jle
cmp
call
scas
clc
in
mov
lcall
call
sahf
sbb
loope
inc
and
leave
push
outsb
fdivrl
movsl
jl
insl
int
sahf
dec
in
std
sub
inc
sub
and
in
outsl
xor
mov
rolb
cwtl
outsb
sub
add
mul
outsl
mov
push
xchg
nop
sbb
jg
lods
test
jmp
pop
mov
out
mov
shrl
lret
shll
imul
es
sub
push
lds
daa
outsl
pop
pusha
xchg
xchg
jb
and
jecxz
mov
mov
sbb
adc
xchg
out
pop
mov
enter
and
add
inc
and
lock
mov
notb
loopne
ficomps
aam
xor
add
inc
mov
or
or
mov
insl
adc
inc
cmp
mov
nop
ja
dec
in
sbb
adc
cmp
xor
pop
mov
lahf
int3
cmpsb
imul
inc
scas
xchg
dec
popf
insb
push
into
shll
mov
pop
nop
popa
sub
sub
mov
sub
sub
fcmovnb
mov
and
sub
push
dec
cmpsl
cmp
cmpsb
lcall
mov
inc
inc
rcr
addr16
pop
out
fmull
out
test
dec
push
jns
call
mov
sti
out
les
sub
ret
mov
or
test
sbb
js
xchg
mov
fdivs
data16
mov
push
add
es
inc
add
jge
ja
cmpsl
xlat
notl
xchg
mov
mov
xadd
or
decl
cmp
icebp
fcoml
sbb
mov
test
and
ja
jne
movsb
cld
lds
push
or
fidivs
mov
inc
sub
in
cwtl
orl
jge
lds
cmc
daa
mov
and
movsl
out
jnp
jo
cld
pop
sti
cltd
stc
jae
jo
test
std
dec
int
mov
ret
test
out
dec
or
mov
subb
jae
int
scas
or
bound
mov
cltd
sarl
nop
dec
scas
and
out
inc
and
bound
xchg
push
mov
xchg
jae
xchg
add
mov
sbbl
pop
pop
hlt
mov
sbb
notb
ficompl
scas
addr16
jge
repnz
mov
imul
decb
js
mov
mov
and
data16
add
inc
jg
adc
xlat
xchg
xor
adc
and
jne
ret
hlt
inc
les
jnp
hlt
mov
sub
cld
scas
or
fistps
lock
xchg
xor
test
pop
outsl
pop
arpl
fs
std
push
mov
movsl
stc
cld
test
mov
cli
cmp
sub
or
jnp
dec
loope
gs
ficoml
sbb
pushf
decb
repnz
bound
pop
inc
push
push
popa
or
cmp
mov
push
nop
push
cmpsb
xchg
pop
dec
jne
push
cmp
insl
out
mov
jns
fsts
xor
and
mov
sbbl
mov
test
popf
negl
cwtl
lock
out
out
shrb
loop
add
mov
pop
js
fsubrs
lcall
or
jg
push
lods
cmp
pop
out
imul
adc
adc
cmp
mov
js
dec
out
lock
pop
and
cmp
ror
xchg
fmull
sub
add
xchg
add
and
scas
add
ljmp
cmp
aam
or
or
pop
aam
cs
jnp
test
push
aaa
lock
mov
iret
enter
jge
rol
mov
or
icebp
and
cmpsb
jge
or
test
dec
sbb
in
test
push
jecxz
push
sub
push
sub
push
push
xor
lock
rcl
psubsw
ret
xchg
ss
pop
xor
mov
cs
es
or
sbb
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
insl
dec
fimull
adc
cmp
dec
mov
movsl
inc
mov
fchs
and
inc
push
in
cli
sbb
sbb
int3
dec
or
loop
pusha
lahf
adc
jp
lret
cmp
pop
daa
adc
insb
lret
clc
stc
jns
shr
xchg
cmpsb
xor
xchg
or
pop
jnp
sub
xor
lock
mov
loopne
in
fildl
stc
loope
inc
dec
mov
outsl
lahf
push
enter
and
in
cmp
out
and
mov
jge
imul
repnz
push
dec
add
das
iret
int
mov
inc
fisttps
xchg
xor
jecxz
lret
out
adc
mov
aam
sbb
jo
inc
pusha
xorl
pop
mov
stc
and
mov
pop
cmpsl
js
lret
ds
je
pop
or
adc
xor
loope
adc
inc
jae
arpl
xchg
lds
int
imul
stc
xchg
adc
add
js
push
out
mov
mov
rorl
stc
add
sbb
imul
push
mov
add
sti
jbe
lret
test
cmpsb
hlt
mov
sub
sub
mov
out
addr16
mov
repnz
xor
nop
cmp
in
out
jae
pop
adc
and
lret
sbb
clc
out
fadd
lret
lret
jle
lods
sbb
inc
pop
push
aas
push
adc
or
xchg
icebp
jne
jle
xchg
clc
mov
sbb
outsb
mov
outsb
ret
inc
xchg
xchg
sti
pextrw
nop
xor
insb
or
xlat
or
pushf
push
lahf
loop
arpl
xchg
dec
dec
aaa
push
adc
mov
in
nop
lods
and
jb
rcll
sub
mov
mov
mov
jp
les
and
stos
sub
dec
insl
or
mov
insb
jno
addr16
mov
lahf
xor
into
push
jle
aad
daa
jg
jge
push
scas
mov
addl
jl
pop
jbe
fwait
daa
outsl
xchg
sti
mov
outsl
inc
jg
jmp
add
push
cli
push
arpl
test
and
xchg
xchg
xor
add
in
jnp
pop
fcoml
jo
int
xor
pushf
divb
mov
push
cmc
inc
inc
std
mov
inc
push
lahf
lds
pushf
mov
pop
jae
cmpsl
pop
lret
push
sbb
rcrl
and
push
dec
pushl
lods
cmpsl
push
sub
lcall
inc
ss
fsubr
xlat
push
js
lea
fsubs
fldenv
dec
sbb
jbe
push
mov
pop
loopne
mov
jno
pop
iret
dec
mov
jb
mov
lods
push
push
gs
or
gs
jo
lahf
cltd
xchg
fistl
pop
call
movsl
outsb
xchg
cmpsl
ret
imul
mov
pop
cmp
adc
pop
ror
or
push
jns
lds
jne
fnsave
ss
jnp
loopne
shr
leave
pushf
xchg
rdtsc
inc
addb
clc
mov
mov
sbb
or
sti
dec
sub
sub
stos
test
sbb
cmp
or
xchg
leave
adc
mov
xor
inc
add
aas
fidivrl
cmp
and
mov
xchg
cmc
lcall
mov
loopne
jg
jo
add
aam
shll
fiadds
andb
sub
es
sub
les
sbb
adc
pop
repnz
mov
sbb
jnp
in
cmc
mov
push
cli
sbb
add
mov
push
sub
es
sar
mov
outsl
movsb
fwait
es
pop
jnp
mov
add
shlb
fstpt
fdivl
stos
or
in
idivb
jp
sahf
mov
adc
add
jno
scas
ret
jno
add
nop
mov
xor
fcompl
int
mov
add
xchg
clc
mov
or
dec
mov
pxor
dec
or
mov
adc
push
insl
imul
lret
fsubrs
lock
sub
jecxz
testl
dec
sub
mov
mov
aam
adc
adc
add
jge
arpl
cld
lcall
das
fdivrl
cmp
jl
push
cld
js
testb
out
inc
sbb
imul
pop
out
aad
bound
in
or
les
pop
sbb
cli
mov
ljmp
and
cmpl
xchg
fbld
gs
sub
scas
dec
arpl
xor
fsubrl
xchg
ja
or
xor
ss
lcall
cmp
sub
subl
lahf
cld
dec
in
or
mov
out
jno
js
mov
pushf
mov
repz
aaa
cmp
out
pop
sbb
insl
cmp
sbb
arpl
fs
stos
mov
inc
outsl
fidivl
popf
and
mov
inc
sbb
inc
fcmove
push
dec
aas
dec
inc
push
movsb
jae
sub
ss
xorps
pop
sbb
jns
idiv
ljmp
mov
test
cmpsl
call
xor
inc
push
add
in
adc
xchg
push
test
mov
sbb
scas
mov
push
lret
add
aaa
jbe
adc
mov
and
mov
scas
mov
in
stos
add
sub
sbb
lock
and
incl
or
push
icebp
int3
add
jecxz
or
cltd
push
sbb
lea
lock
out
loope
push
scas
add
test
sarl
in
inc
xor
out
subb
sub
cmpsl
jbe
push
lds
pop
fimull
mov
rolb
decl
stc
bswap
fs
mov
test
dec
xorb
mov
push
push
mov
sbb
or
in
xchg
lret
roll
in
mov
adc
test
iret
cld
cld
pop
clc
fs
xchg
and
loop
push
lahf
out
scas
nop
jne
ljmp
jmp
mov
std
or
sbb
xor
test
push
mov
add
outsl
mov
push
cs
mov
lahf
jle
xchg
popf
loop
push
pushf
sahf
repz
and
pop
jne
rcrl
adc
loop
icebp
add
rcl
cwtl
push
cwtl
leave
sub
and
ret
stos
call
insb
dec
out
and
cmpsl
xchg
or
mov
add
add
add
or
iret
out
insb
xor
sbb
movsw
pop
aaa
daa
or
into
or
stos
mov
mov
shll
mov
mov
or
jle
data16
aam
pop
lods
mov
decl
ja
psubsb
int3
and
pop
ret
mov
mov
leave
stos
mov
aaa
xchg
out
push
mov
imul
pop
dec
in
insb
mov
shll
xlat
leave
cmpsl
aad
cwtl
loop
sub
mov
dec
pop
iret
mov
or
jecxz
fwait
push
test
leave
cmpsl
push
loopne
orb
inc
or
mov
dec
inc
jle
mov
leave
aam
jo
sub
push
mov
repz
pop
vpbroadcastmb2q
cmc
es
sub
xchg
jg
add
test
mov
pop
cwtl
adc
sbbb
sbb
inc
sub
inc
pop
xchg
add
pop
and
in
fisttpll
mov
in
pop
stc
mov
in
imul
mov
out
or
cmp
mov
cmp
sbb
dec
sub
mov
stos
mov
xchg
out
out
outsb
roll
cmpsl
adc
jns
push
loope
pop
mov
mov
push
testb
aad
mov
nop
ret
jns
push
dec
shlb
add
adc
cs
pushf
in
outsl
out
adc
nop
cmc
repnz
cld
push
je
lock
mov
cltd
push
mov
sahf
je
decb
jmp
mov
push
out
int3
sbb
dec
mov
mov
imul
inc
cs
lahf
cmp
or
dec
xor
jl
scas
sub
fwait
xor
mov
ja
int
pop
pusha
inc
movsl
cs
cmovno
xor
cltd
addr16
imul
ret
mov
xchg
mov
ss
mov
dec
cld
ss
ret
movsl
cmp
add
mov
adc
inc
xchg
pusha
dec
sbb
mov
cmpsl
sti
dec
inc
push
data16
lods
sbb
sbb
inc
je
in
cmp
sbb
adc
xor
dec
mov
ret
imul
push
pop
lea
cmp
test
das
inc
inc
or
mov
scas
punpcklwd
test
sti
imul
dec
xchg
out
icebp
test
das
sub
nop
or
mov
les
jo
cmp
add
xor
stos
pop
sub
pop
jae
inc
pop
and
or
mov
sbb
xor
call
outsb
bound
fs
inc
mov
mov
bound
xchg
xchg
sub
dec
adc
pop
lods
inc
cmp
imulb
lret
xchg
popw
sbb
xchg
xchg
cli
or
shll
inc
push
xchg
leave
cmp
clc
xchg
fimuls
mov
xor
cmpsl
loopne
xchg
lock
xlat
imul
mov
sbbb
mov
xor
mov
nop
xchg
je
mov
and
lea
xor
mov
bound
and
mov
cli
push
sub
scas
add
jae
mov
cli
lds
cmp
movhps
scas
out
es
jl
jnp
adc
and
mov
push
fdivl
or
and
movsl
lret
cmp
ljmp
outsb
adc
std
insb
dec
xlat
cmpsl
mov
mov
and
ja
xor
stos
outsb
outsl
dec
jge
in
scas
cmp
mov
iret
lea
arpl
pushf
stc
std
mov
cmp
mov
jns
add
mov
idivl
xor
outsl
pop
std
inc
xchg
add
iret
sbb
inc
cmp
mov
push
pop
xor
out
dec
aam
adc
sub
fists
outsb
cmp
fcmove
mov
movsl
xchg
test
add
imul
mov
mov
mov
lcall
mov
clc
dec
cmpsb
lahf
vpmacssdd
ja
dec
adc
ret
and
das
and
lods
sub
js
scas
pushf
outsl
ret
adcb
jp
mov
ja
jne
mov
add
ja
push
sbb
pop
xchg
lea
aad
jp
inc
sub
or
push
mov
jmp
movsb
xchg
js
leave
loop
dec
mov
inc
sub
aam
popa
stos
lret
jecxz
mov
adcb
push
xchg
daa
mov
xor
movsb
xchg
sbb
out
cwtl
cmpsb
jns
aaa
sub
test
mov
adc
mov
pop
gs
and
shll
ja
in
push
jns
pop
dec
sahf
lds
movsl
inc
and
push
xchg
insl
faddl
and
mov
push
push
jmp
stc
or
push
xlat
add
inc
iret
lcall
xlat
lock
int
test
jns
adc
mov
jne
sub
cmpb
loopne
nop
or
movb
and
fstpt
cmpsl
fadds
mov
add
cmpsl
jge
test
lods
sahf
insl
xchg
aas
dec
das
aad
cmp
iret
enter
or
xlat
mov
add
lods
sbb
cs
cmc
fcomps
cmp
fdivs
jnp
lahf
pop
add
push
mov
in
cmp
jo
pop
pop
jmp
cli
lock
mov
jbe
push
movsl
mov
movsb
push
lcall
mov
outsb
arpl
sub
pop
mov
insb
movsl
sub
es
sbb
cltd
out
ljmp
sbb
cmpsl
setb
mov
cltd
mov
xchg
push
jge
push
mov
in
dec
ficoms
fcomps
mov
cmp
add
push
lret
out
or
jg
dec
push
enter
std
sub
xchg
lods
loop
mov
adc
mov
sub
and
push
jp
pop
lea
or
xor
mov
and
or
lods
and
xchg
push
and
xchg
jnp
out
out
andb
push
cmpsb
lds
sbb
push
mov
jno
js
movsl
adc
jl
xchg
mov
sub
xor
jno
call
xor
pop
mov
xlat
sub
mov
push
jae
bound
dec
mov
push
push
add
icebp
lock
cli
lret
clc
jge
pop
or
call
mov
popf
xor
xor
adc
add
bound
jle
sarl
fnstsw
push
and
lods
add
xor
and
add
push
xor
aad
sub
ret
aam
lods
mov
test
cmp
sub
test
add
or
jae
icebp
shll
mov
add
push
add
add
sub
subl
loop
leave
pop
scas
popa
sbb
roll
pop
clc
mov
js
rolb
cmp
mov
xchg
out
or
clc
inc
jno
jmp
dec
arpl
mov
inc
adcb
roll
idiv
je
add
jg
add
rcrl
jl
insl
xchg
sbb
sbb
and
xchg
incl
mov
cli
loop
xor
hlt
dec
xchg
mov
mov
add
jge
imulb
mov
sbb
jl
je
nop
ljmp
dec
push
xchg
and
ja
jb
adc
test
ds
jnp
push
cld
in
ret
stos
jl
into
aad
imul
pop
scas
dec
ljmp
push
in
jo
mov
adc
pop
pushf
ljmp
jnp
pop
or
pop
insb
ja
or
loope
pop
mov
flds
rol
cli
mov
call
sbb
xchg
cmp
fsubs
inc
xor
scas
sahf
imul
fbstp
mov
call
imul
xor
jae
cwtl
and
xor
int3
or
xorl
xchg
cli
pop
out
pop
scas
dec
dec
lock
dec
cmp
jb
dec
fsubs
and
dec
push
and
mov
imul
pop
lods
pushf
aaa
rolb
add
mov
mov
sub
cld
repz
or
mov
adc
fisttpl
xchg
xor
or
adc
jo
mov
aaa
loop
fcoml
js
dec
xlat
stos
ja
dec
jae
xor
out
jb
hlt
ljmp
clc
mov
add
sub
push
jno
rol
imul
adcb
add
mov
cltd
fldenv
dec
lock
arpl
mov
fs
aad
mov
idivl
daa
or
bound
jmp
scas
mov
cmc
divb
pop
lods
scas
pop
push
sub
cmc
test
fwait
mov
bnd
hlt
mov
fdivl
fnstsw
imul
cli
imul
test
pop
leave
out
xor
sbb
lock
scas
lret
jb
xchg
add
lock
daa
rcll
jmp
pusha
xchg
cltd
mov
sti
lds
mov
sti
dec
adc
ljmp
dec
push
mov
jmp
mov
and
mov
orl
and
sahf
xor
add
cmp
push
stos
push
das
mov
jmp
aas
les
test
or
out
jge
ljmp
loope
stos
shll
sbb
pop
mov
cmpsb
lahf
lea
xchg
xor
imul
lea
jb
xor
mov
fimuls
cwtl
outsb
int3
pop
bound
push
cmc
pop
sbb
xchg
loop,pt
insb
mov
aas
clc
mov
std
pop
and
push
xor
xchg
inc
push
into
jbe
lcall
cs
pop
cmc
add
and
ljmp
mov
jmp
add
daa
sub
fmul
pop
xor
icebp
int
dec
test
ja
imul
inc
push
pop
out
je
out
lahf
and
sbb
adc
std
xchg
mov
mov
ret
daa
cmpsl
mov
call
hlt
sub
popa
iret
imul
icebp
stos
add
and
fsubs
repnz
mov
out
aaa
test
loop
fimuls
icebp
enter
xchg
pop
in
cmp
sub
push
xchg
sbb
popf
hlt
jp
clc
ds
jne
arpl
ja
call
jne
lret
sub
xchg
push
lods
shll
es
outsb
cmp
imul
lods
push
into
shl
pop
sub
or
add
push
leave
mov
daa
ja
xor
inc
aas
lcall
cli
repnz
clc
or
mov
jecxz
mov
movsb
push
enter
mov
push
lret
test
mov
iret
sub
xchg
fiaddl
cmp
sub
lea
jo
sbb
stos
rorb
or
inc
cmp
loop
mull
add
mov
push
lahf
stc
jl
mov
jb
jl
rcll
dec
int3
lret
mov
xchg
leave
jb
lahf
inc
lcall
and
inc
adc
shlb
push
lods
mov
xchg
fcomps
mov
in
jmp
aaa
int3
sub
jmp
xchg
mov
mov
adc
fmul
jge
push
mov
mov
jl
dec
xchg
xchg
popf
ficompl
insl
push
je
push
xchg
test
add
xchg
inc
fmuls
ja
pop
icebp
fcoml
std
mov
cmc
in
push
imul
push
jle
lods
aam
test
jg
mov
inc
ficoml
mov
shl
add
and
cwtl
iret
mov
mov
adc
aas
xchg
mov
inc
adc
mov
push
inc
jle
push
fildl
lock
ss
loop
pop
ljmp
mov
push
and
dec
ds
xchg
sbb
mov
dec
mov
xchg
not
adc
mov
or
cmpsb
xor
push
cli
mov
repnz
lret
pop
sti
mov
and
xchg
testb
pusha
std
and
bound
add
aaa
lods
negl
jp
jmp
add
cmpsl
popf
lds
stos
sti
sbb
sti
ja
mov
jne
andb
xchg
mov
cwtl
inc
push
lret
lcall
cwtl
fnsave
push
mov
cmp
loope
pop
les
fs
push
jnp
push
test
add
lahf
xor
xchg
dec
out
scas
les
sub
jl
std
or
cld
lcall
ja
pop
or
lods
outsb
fstps
dec
mov
sub
test
shrl
push
dec
pop
jo
enter
call
and
push
jge
outsl
cmp
arpl
aas
test
push
out
or
popw
ss
jns
cwtl
sbb
mov
ret
shll
fsts
addr16
add
xchg
mov
mov
inc
sbbb
shll
inc
inc
lds
pushf
adc
mov
dec
scas
mov
movsb
jbe
call
adc
push
adc
icebp
imul
inc
sub
cmpsl
pop
popf
cmpl
mov
ret
call
dec
mov
inc
push
dec
mov
repz
cmc
imul
cmp
jge
xchg
push
dec
stos
dec
lret
xor
outsl
sbb
enter
cmc
fldenv
scas
dec
daa
xor
std
jb
pop
pop
int
enter
add
pop
jge
cwtl
pop
std
push
ret
loope
or
xor
jmp
pop
adc
sub
fs
inc
ljmp
sahf
pop
jne
pop
loope
adc
out
cli
sti
sbb
adc
popf
and
subb
inc
adcb
add
jns
jl
mov
xor
ja
fmull
scas
das
in
mov
stos
leave
cmp
lds
out
andl
sbb
sti
fildll
push
sub
mov
stos
fcmovnb
and
sbb
dec
fmul
pop
sarl
out
les
in
les
test
in
fdiv
cmp
sub
add
xchg
pop
dec
and
mov
loop
dec
xchg
les
in
jno
xchg
pop
sbb
pop
xchg
fstl
push
lea
data16
mov
pusha
into
jmp
pop
out
ficoms
add
mov
pop
das
jge
aad
mov
loop
fsubr
test
and
aam
popa
inc
fdivl
test
pop
dec
adc
aaa
cmp
inc
popa
loopne
cmp
aam
gs
jge
xchg
xchg
mov
sbb
jecxz
or
cli
adc
out
in
push
push
push
iret
jbe
sub
out
aad
fs
in
mov
dec
in
adc
lahf
and
and
lret
mov
adc
and
shrl
jmp
push
mov
flds
pop
jns
aas
in
inc
lods
es
jae
into
sbb
sahf
adc
mov
aaa
fldl
xchg
out
inc
pop
cmp
xor
sarb
imul
hlt
outsb
fisubl
push
mov
gs
js
int
mov
inc
out
push
or
sti
dec
xor
mov
dec
cltd
ljmp
lcall
push
aas
hlt
push
and
adc
ds
sbb
iret
in
sub
sbb
mov
je
das
loope
jo
cwtl
iret
clc
jbe
pop
in
mov
add
jae
push
test
pop
add
and
cmpsb
pop
out
lods
pop
inc
shl
repnz
xor
clc
cmp
fidivrl
je
mov
cmp
loopne
xchg
icebp
int
aam
pop
pop
push
out
scas
sti
in
cmpsl
loope
xchg
cltd
jmp
cmp
jnp
leave
shll
dec
push
cltd
jno
jae
out
orl
push
nop
movsb
cmp
stos
ljmp
and
out
push
mov
pop
popf
sbb
nop
sbb
nop
ja
cmp
int3
out
jg
dec
into
cmp
lahf
icebp
addr16
std
push
push
hlt
push
xchg
leave
hlt
sti
cs
add
sub
sbb
jne,pt
shll
sahf
push
or
sarl
xor
sar
and
jp
lret
scas
push
loope
fsub
mov
push
in
add
inc
dec
sub
xor
cmp
sbb
adc
clc
xor
lds
outsb
fwait
call
jge
xor
add
xorb
jle
ja
inc
icebp
jb
and
mov
mov
test
fistps
test
mov
xchg
fsubr
test
scas
and
sub
cs
xchg
mulb
stc
in
arpl
out
mov
pop
inc
cmp
movsb
stc
jbe
xor
cltd
or
data16
dec
call
and
mov
in
inc
nop
jl
xchg
cs
lods
pop
sbb
out
xchg
sahf
insb
scas
out
andl
jbe
cmp
jecxz
addr16
jmp
xorb
call
lods
aam
mov
icebp
add
fidivl
clc
das
ret
mov
dec
mov
inc
adc
movsb
xor
xchg
lcall
add
and
mov
jno
push
imul
in
mov
dec
out
jmp
xor
je
inc
push
inc
popa
mov
dec
mov
cltd
cmp
mov
jae
movswl
data16
mov
cmp
ret
scas
mov
push
pop
push
ss
in
add
sahf
jmp
mov
fmull
mov
enter
imul
mov
pop
push
scas
mov
lods
push
insl
fnstsw
xor
xlat
out
mov
pushl
mov
add
mov
dec
outsb
bound
out
sub
jo
in
dec
and
mov
int
stos
aas
sbbb
mov
inc
push
icebp
js
jecxz
jb
cmp
repz
fbld
and
ret
frstor
jge
mov
lahf
enter
fwait
aas
hlt
adc
test
sbb
lds
pop
and
test
inc
cmpsb
cmp
ds
idivb
jmp
pop
inc
nop
cld
push
xor
sti
jg
sbb
xor
pusha
mov
pusha
subb
call
add
xor
jp
mov
fcoml
es
jns
fdivs
mov
js
fsubl
je
setbe
in
dec
push
outsl
jge
rclb
rcl
adc
sbb
mov
xor
mov
push
std
repnz
sbb
pop
cmp
mov
inc
mov
repnz
out
lods
push
sub
and
int
jnp
jle
xchg
sahf
adc
shrb
iret
sub
jnp
out
sysenter
lods
fsts
arpl
nop
stos
inc
scas
cs
adc
dec
cmpsl
cs
fdivp
inc
sbb
clc
pop
call
inc
rclb
push
pop
aam
adc
pop
aas
lcall
lods
dec
xlat
icebp
jp
mov
cs
in
aas
flds
daa
cld
or
js
xlat
pop
sbb
enter
or
lcall
mov
inc
imul
mov
jne
add
lcall
fistl
shll
push
es
mov
js
into
in
xchg
xor
orl
lahf
cmp
sarl
clc
inc
aaa
jmp
sbb
loope
inc
adc
mov
int3
lahf
sub
out
orl
jmp
ficoms
xchg
shll
mov
jnp
nop
mov
sbb
dec
data16
cmc
imul
mov
fs
sbb
xchg
jp
call
pop
fildll
jecxz
add
sbbb
lcall
aaa
fmull
repz
subb
push
jmp
enter
iret
xchg
daa
lea
sub
imull
jmp
dec
roll
ja
shrb
dec
int3
movsl
jns
insl
insl
movl
nop
push
xchg
neg
int3
mov
pushf
stos
jne
xor
in
mov
imul
lahf
mov
aad
add
and
jg
movsb
cld
mov
stos
xlat
shlb
and
dec
pushl
pop
push
sarb
ljmp
inc
xor
and
dec
mov
cmp
pushl
ret
mov
popf
push
icebp
or
xchg
cmp
adc
lret
movsl
jp
je
fiadds
jns
push
cmp
mov
repz
sub
sarb
and
mov
jae
xchg
push
inc
adc
add
push
jb
sahf
mov
lods
cwtl
xchg
jb
insl
xchg
jp
jb
cmp
mov
and
lahf
scas
fistl
jmp
hlt
xor
aad
mov
jle
or
add
pusha
dec
iret
nop
inc
call
dec
pop
push
insl
pop
push
loopne
addr16
outsl
pop
xchg
push
mov
int
mov
mov
imul
int3
xchg
out
popf
and
mov
ret
mov
mov
jg
jl
iret
cs
or
sahf
adc
xchg
insl
movsl
cmp
mov
mov
bound
in
add
addb
mov
test
sbb
cmc
aaa
jl
dec
pop
push
addr16
add
pop
cmp
repnz
xchg
or
sarb
imul
das
xchg
add
push
outsb
add
rolb
xlat
xor
push
push
sbbl
loop
test
mov
and
push
lret
in
call
jg
and
into
mov
mov
lock
xchg
lods
data16
xchg
jo
jnp
repnz
rcr
cwtl
enter
jp
out
adc
xchg
nop
outsl
int
xchg
xchg
cmp
mov
dec
push
mov
fcmovnu
or
mov
cmp
lret
into
in
andb
jg
mov
dec
jmp
mov
push
loop
lcall
inc
jbe
aaa
inc
push
lcall
xor
test
cltd
adc
mov
test
repnz
pop
mov
fwait
xchg
push
pushf
in
ja
xchg
and
or
outsl
shll
cmp
cmp
push
adc
rol
sar
mov
pop
mov
xor
movsl
mov
cli
xchg
sarb
fidivrl
xchg
mov
and
mull
ljmp
xor
loopne
inc
lds
xchg
data16
idiv
cmpsl
mov
inc
inc
sbb
fs
xchg
sub
dec
ds
les
scas
popa
dec
pop
push
jbe
mov
outsl
adc
xor
es
push
add
inc
sub
shrb
sub
call
push
mov
lock
insl
xchg
or
lock
jne
outsl
adc
divb
jnp
pop
inc
jne
cwtl
je
lea
out
push
or
iret
push
fnstenv
xchg
aad
mov
aaa
out
mov
stc
mov
lds
lret
cld
scas
jp
lock
in
dec
pop
negl
lahf
jne
mov
repz
aam
mov
pop
xor
dec
aad
mov
rol
lret
ror
push
rolb
clc
cmp
arpl
push
mov
jne
inc
jp
inc
xchg
pop
add
enter
arpl
cwtl
mov
mov
adc
inc
test
push
ret
mov
iret
lea
in
cmp
mov
std
popa
add
imul
jmp
ds
push
mov
cmp
sti
test
mov
mov
mov
add
xchg
dec
jle
popf
pop
and
fcoml
std
push
inc
pop
stc
pushf
jl
scas
loopne
pop
sbb
dec
call
push
dec
movsl
cmp
cmp
bound
mov
xchg
xor
scas
push
mov
add
jns
sub
repz
xchg
outsb
fsubrl
cmp
arpl
xlat
and
push
popf
lds
adc
cmp
jge
movsl
xchg
xor
daa
jb
aad
rcr
jmp
sbb
xor
shlb
cmp
push
popf
sbb
xchg
jmp
fs
mov
push
inc
fdiv
in
and
pusha
sub
adc
repz
xlat
mov
sbb
sub
hlt
cltd
and
mov
xchg
push
sub
dec
mov
cld
mov
xchg
pop
clc
or
mov
or
sbb
inc
add
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
xor
or
aam
mov
inc
rclb
mov
and
pop
cmp
or
and
pop
pushf
push
cmp
fidivs
bound
lds
mov
insb
pusha
mov
push
dec
mov
dec
push
push
mov
jecxz
add
jmp
in
leave
inc
pop
in
dec
xor
fildll
push
rcl
fstps
xor
xlat
mov
mov
scas
mov
repz
jbe
jecxz
jp
or
divl
mov
jle
mov
inc
adc
jnp
es
jle
sub
shl
mov
push
mov
sbb
mov
push
xor
cmpsb
sub
sbb
inc
jmp
outsb
jno
imul
iret
or
pop
in
popa
scas
stos
das
or
adc
pushf
cmp
sbb
out
cltd
add
dec
jg
mov
fcom
in
cs
push
pop
fimull
push
popa
lcall
imul
fs
imul
pop
cmp
loopne
dec
pop
arpl
ret
addr16
inc
jecxz
cmovo
push
fwait
mov
jae
pop
sub
int3
in
addr16
int3
pop
pop
jmp
gs
aaa
or
jns
js
sub
mov
sbb
inc
cmp
imul
mov
mov
xchg
and
rol
xor
inc
mov
jge
adc
test
cmp
inc
imul
loopne
loop
shrl
das
into
push
jg
cld
fwait
sti
insb
pop
mov
sbb
sbb
addr16
mov
cmp
push
inc
icebp
xchg
iret
out
dec
ret
fstl
cmp
subb
mov
lods
enter
mov
arpl
and
repnz
hlt
not
xlat
notb
loop
xchg
cmpsl
push
ret
int
add
je
jns
outsl
les
movsl
pop
adc
xchg
push
sbb
mov
test
out
push
cmp
out
and
mov
mov
insb
subl
lock
and
sub
push
and
aas
gs
int3
scas
add
xor
and
xchg
push
mov
mov
or
ret
push
pushf
cmc
jo
sti
inc
or
fdivrs
mov
adc
xor
les
out
jecxz
sub
or
jns
inc
mov
aad
jbe
pop
rcrb
adc
call
lcall
fbld
movsl
jle
faddl
lret
jmp
out
cmp
pop
fistl
mov
xor
test
jbe
mov
mov
cmc
or
xchg
pop
dec
mov
or
pop
ja
mov
pop
cmc
arpl
adc
mov
pushf
or
mov
and
adc
lock
roll
jnp
sub
jo
pop
stos
outsl
add
test
fwait
rcrb
mov
mov
out
adc
pop
xchg
mov
add
scas
push
and
test
aam
test
sub
jp
addl
push
and
mov
lods
mov
sbb
lds
pop
imul
dec
mov
cmp
repnz
cmp
ja
push
jmp
cmpsl
imul
pop
jl
jbe
stos
cli
fwait
mov
enter
sub
sub
fst
mov
sbb
pop
xor
xchg
dec
nop
shl
jl
xor
or
xchg
cltd
or
lahf
test
mov
xor
andl
stos
scas
faddl
mov
andl
xchg
cmp
pop
pop
sub
inc
sarl
dec
and
bound
dec
and
addl
inc
int
push
cltd
pop
rclb
ds
dec
push
std
and
push
xchg
jg
jg
aas
int
je
push
clc
sub
cmp
jle
dec
mov
sub
pop
jge
push
pop
and
inc
lret
test
push
lahf
imul
rol
lea
testb
inc
into
add
ss
xchg
jge
addr16
cld
ficomps
andb
movsl
add
mov
aam
sub
mov
sbb
sarl
sbb
cwtl
pop
pop
imul
ljmp
mov
add
int
inc
add
std
or
mov
mov
sub
js
inc
pop
int
ret
addr16
xor
fdivrl
jnp
push
add
pushf
mov
lds
or
xor
sbb
decl
add
mov
repnz
xor
mov
mov
push
or
loopne
mov
pop
xchg
cmpsl
or
enter
std
je
push
js
xor
sarl
sbb
cmp
testl
mov
mov
mov
mov
push
cmc
fwait
jnp
cld
mov
outsl
rorb
jg
cmp
fldl
dec
xchg
imul
xchg
vpunpcklwd
outsb
in
mov
rcr
cmp
adc
pop
xchg
int
ss
popa
and
sti
dec
popa
sbb
pop
or
leave
mov
fnstcw
pop
call
jb
sub
iret
mov
push
aas
inc
xchg
jb
pop
mov
pop
out
fnstcw
jnp
cs
out
aam
loope
hlt
hlt
adc
add
xchg
lea
mov
pop
fcoml
test
dec
push
and
subl
cltd
loopne
xchg
xor
pop
popa
and
insl
outsb
xor
inc
jmp
inc
test
xchg
sbb
inc
andl
dec
in
ja
jmp
int
adc
xchg
test
or
data16
sahf
pop
call
jmp
cmpsw
in
cmpsl
iret
pop
xor
cwtl
das
cld
int3
xchg
cmp
xchg
inc
jbe
and
push
mov
add
dec
fildl
xor
ljmp
insl
mov
cltd
dec
mov
jb
jae
or
cltd
es
and
movsb
jno
xlat
mov
adc
dec
pushf
mov
fcoml
xor
xchg
push
or
jg
mov
loop
xchg
cld
into
fsubl
fnstcw
push
cmpsl
mov
js
push
inc
fbld
push
pop
scas
cmpsb
in
fcmove
pushf
ljmp
mov
xor
xchg
loop
or
es
jle
and
into
stc
pop
insb
xchg
and
lods
fcoms
popf
mov
loope
jne,pt
repz
xchg
cli
mov
frstor
loopne
fwait
xor
loop
push
outsl
adc
stos
mov
ja
ss
inc
xor
paddw
lods
inc
scas
sub
mov
pop
mov
aas
popa
imul
rclb
mov
xchg
add
pushf
cmpsl
inc
jns
push
push
loope
loopne
mov
outsb
jl
enter
mov
or
xor
sarl
pusha
int
pushf
movsb
negb
jnp
imul
sbb
sbb
scas
adc
das
xchg
sahf
imul
ret
nop
aaa
jne
xor
sub
cwtl
dec
icebp
adc
or
mov
lds
mov
adc
dec
mov
stc
retw
lods
adc
inc
in
data16
test
mov
push
jg
sar
xor
add
lcall
loope
jb
lcall
cld
add
fwait
insl
add
jo
lret
test
sub
cmpl
flds
cmpsb
bound
fs
movsl
clc
xor
adc
cs
push
cmc
repnz
add
jbe
xchg
das
enter
popf
ret
mov
pushf
cmp
shll
mov
xchg
pop
and
shl
push
jno
js
ret
sub
xchg
adc
pop
test
inc
add
roll
mov
mov
adc
mov
push
out
xchg
adc
and
outsl
mov
sbb
cld
ljmp
cli
xlat
not
call
cmc
push
pop
js
ret
xor
or
jb
add
mov
fldl
movsb
inc
neg
or
and
nop
inc
call
fisubs
cmpsl
inc
pop
sub
dec
loope
pusha
jp
mov
popa
jnp
pop
jecxz
mov
lea
imul
in
xor
lods
mov
popf
inc
arpl
call
sahf
pop
inc
movaps
mov
sti
cmc
or
ret
lds
adc
lods
inc
ret
mov
cmp
push
stos
mov
and
sub
cmpsb
loopne
mov
pop
scas
xchg
std
cwtl
rep
xlat
pop
into
and
incl
xor
mov
and
or
xor
sub
mov
push
test
jl
xor
popa
ds
pusha
and
sahf
lds
xor
push
sub
add
adc
dec
lret
outsb
add
xor
mov
push
push
mov
sbb
test
into
xchg
push
cwtl
or
mov
xchg
les
jmp
sub
sub
imul
stc
scas
fdivp
mov
ret
int3
dec
xor
push
into
xchg
out
inc
insl
xor
mov
mov
in
push
out
push
call
sbb
mov
push
sbb
out
ficomps
addr16
int
daa
enter
outsl
inc
xchg
adc
cmpsl
dec
add
sbb
outsb
xchg
jb
lds
orb
ficoms
mov
mov
jecxz
xchg
or
adc
in
mulb
or
movsl
mov
sti
cmp
push
sti
xor
mov
xor
sbb
es
mov
adc
push
jne
test
stos
cli
rorb
xor
sahf
xor
rorb
or
fldl
jno
cld
jne
and
lea
js
je
mov
fucom
sbb
xlat
jno
imul
push
xchg
fimuls
mov
sbb
xchg
stc
faddl
repnz
pop
mov
add
leave
les
mov
xchg
inc
das
push
xchg
notl
push
inc
cmp
sub
inc
pop
cmpsb
mov
jle
mov
lods
insb
rorb
mov
xor
test
inc
xor
imulb
xchg
dec
sbb
cmp
fldcw
sub
xor
mov
test
iret
mov
mov
jo
ljmp
outsb
inc
mov
faddl
or
jmp
xchg
xor
les
scas
sbb
dec
stos
jmp
mov
ss
pusha
inc
ss
add
out
jl
jp
popf
sbb
fdivr
fs
and
mov
xor
pop
mov
pop
push
mov
jne
dec
mov
or
scas
test
add
cmp
pop
jp
lods
xor
leave
xchg
push
mov
push
jne
or
cltd
mov
push
fwait
inc
cld
lock
iret
push
ds
lahf
dec
pop
aad
test
je
push
loope
les
mov
jo
icebp
push
adc
xchg
scas
or
jo
stos
jno
jo
test
push
fwait
ss
movsl
nop
mov
jmp
iret
repz
addb
sti
add
push
mov
mov
inc
out
dec
push
xchg
mov
adc
in
add
cmp
mov
sbb
lret
mov
stos
loopne
cmpsb
jecxz
mov
xchg
std
jg
jmp
pop
or
shll
cmpsb
rol
out
nop
or
jge
adcl
cltd
mov
mov
fdivs
test
jmp
popf
jne
mov
inc
lds
xchg
xor
cmp
add
sbb
jo
dec
aam
xchg
sbb
inc
dec
and
addr16
rcr
sarl
pop
xchg
out
mov
mov
lcall
push
inc
jbe
pop
fcomps
cmp
shrl
lds
dec
fdivr
cmp
ficoms
sub
cmpl
and
loop
push
rolb
imul
dec
iret
push
sub
xchg
jl
inc
xrelease
xor
mov
xor
pushf
jbe
in
push
bound
mov
mov
add
sbb
jge
or
mov
fimuls
jg
xlat
fnsave
push
lahf
cmp
lods
aaa
lea
mov
scas
lcall
mov
dec
jo
pop
stos
lret
push
pop
ffree
iret
cmp
arpl
popa
jnp
sub
mov
hlt
push
mov
fidivrl
mov
les
push
push
fcoms
push
mull
addb
jae
cmp
adc
js
mov
sbb
jbe
shl
lods
mov
jne
xchg
and
sbb
std
stos
insb
je
pop
xor
pop
ds
jae
xchg
sbb
imul
mov
std
xor
pop
sub
je
adc
pushf
dec
cmp
pop
loope
cli
jmp
addb
push
xchg
pop
mov
lods
sub
xlat
pop
jecxz
fstl
jo
mov
or
xor
sub
sub
cmpsl
pop
scas
call
adc
test
popf
test
jne
int3
imul
dec
add
repnz
xor
test
inc
and
sub
mov
aam
outsl
fdiv
push
pushf
cmp
jg
add
aaa
xchg
sti
lret
bound
dec
pop
push
notl
das
push
sbb
cmpsb
mov
loopne
mov
testl
cmp
imul
fistl
lahf
add
dec
iret
insl
inc
or
push
lea
fisubrl
insb
jecxz
mov
push
xchg
sub
push
pop
icebp
test
testl
and
movsl
aas
out
sbb
and
cmpl
add
test
cltd
pop
lret
inc
cltd
mov
and
out
inc
xchg
dec
mov
idivl
dec
push
daa
movsl
pop
addl
xor
loop
es
jbe
mov
mov
push
pop
jbe
cld
decl
xchg
int
ja
loope
push
out
inc
bound
lret
xchg
xor
inc
pmulhw
mov
adc
xchg
mov
sbb
mov
jbe
mov
xor
arpl
dec
mov
ja
bnd
jae
in
dec
push
pusha
inc
sbb
push
stc
in
in
repz
cmp
cmp
xchg
fs
sbb
and
cltd
dec
xor
sub
dec
out
jnp
mov
popf
mov
arpl
xor
pop
inc
dec
jns
arpl
push
ja
insl
cmc
xor
xchg
sub
cwtl
pop
arpl
inc
pop
cmp
aaa
hlt
mov
mov
mov
xor
jg
jp
in
lret
je
jge,pn
cmp
sbb
in
add
jns
jg
ds
push
arpl
mov
add
in
outsb
and
std
or
mov
push
jns
lods
and
add
enter
and
loope
dec
sbb
aaa
mov
repnz
fldl
add
lock
cmp
insl
stos
sub
sub
or
mov
lret
sub
movsl
push
pop
aad
fdiv
dec
dec
cmpsl
add
in
out
insl
dec
mov
aas
popa
jmp
jl
iret
pushf
fiaddl
rclb
or
or
movsl
push
jb
cld
mov
jge
imul
add
mov
lcall
addr16
aas
ss
dec
cmp
int
cmc
dec
dec
push
pop
testb
loopne
sbb
pop
xchg
lret
lret
in
out
fwait
sti
fwait
mov
xor
jb
inc
xchg
jmp
xor
jo
push
sbb
adc
pop
fcmovbe
mov
mov
outsb
sub
mov
out
ds
int3
or
cmp
xchg
sbb
repnz
mov
stos
push
xchg
mov
push
adc
mov
xchg
aas
enter
xchg
mov
sub
cmp
pop
sbb
std
stc
push
mov
arpl
xchg
pop
and
inc
jae
push
dec
lcall
pop
das
outsb
punpcklbw
cmpsl
scas
inc
xor
adc
add
inc
dec
in
and
fdiv
rorl
cmp
push
pop
cmpsl
add
mov
ret
and
and
es
xchg
lcall
int
gs
hlt
loop
std
mov
and
adc
inc
adc
addr16
or
push
jg
and
and
xor
rol
pusha
jns
loop
inc
test
inc
dec
inc
fcmovne
dec
add
adc
adc
or
push
adc
mov
xchg
pop
pop
call
push
and
jle
sub
fbstp
stos
mov
ret
repnz
stc
xchg
or
mov
je
dec
aad
or
movsl
xchg
cmp
fisubrs
jno
pop
decl
inc
or
jmp
dec
inc
aad
sub
out
out
and
xor
insl
mov
leave
pop
imul
cmp
or
sti
aad
xor
mov
das
pop
or
pushf
cmp
mov
push
or
jl
jecxz
fnsave
mov
push
mov
and
dec
jo
mov
mulb
and
mov
mov
dec
int
pop
fisttpll
cmp
in
adc
andb
add
mov
mov
fs
arpl
mov
fwait
dec
push
xor
ja
pop
mov
inc
inc
aas
or
and
mov
pop
push
adc
mov
inc
stos
repnz
ucomiss
int
xor
and
xchg
or
sbb
adc
clc
roll
sbb
sbb
mov
inc
xchg
insb
imul
adc
pop
inc
testb
or
bnd
mov
fistl
negb
fcmovb
negb
pop
xor
ljmp
lcall
repz
add
push
cmp
jg
pop
test
inc
repnz
fstps
aad
jge
sarb
cmp
xchg
xor
int
adc
out
out
pop
lahf
movsb
inc
mov
in
and
sbb
mov
pop
fcmovb
repnz
cmpsl
loop
and
cli
cmp
sub
adc
xchg
sub
mov
inc
jbe
inc
bound
adc
call
jns
test
dec
adc
jo
inc
incl
adc
ficoml
xchg
movsb
out
ljmp
mov
les
xchg
cmpsb
pop
popf
js
scas
jmp
addr16
pop
data16
dec
call
nop
xor
sub
cmp
ja
adc
sub
mov
iret
shrl
pop
clc
sub
test
fisubrl
sbb
xor
les
sbb
ss
lea
pusha
outsl
and
repz
stos
dec
push
cmp
ljmp
and
push
jmp
fstl
or
push
lcall
adc
pop
and
and
stos
hlt
stos
pop
xchg
aas
push
inc
stos
cwtl
and
fmuls
sbb
in
push
ds
add
lds
fnstcw
repnz
clc
or
addb
lret
xchg
pusha
adc
push
sub
popf
sub
pop
push
adc
nop
mov
fs
mov
outsb
sub
ret
jecxz
lds
cmp
xchg
and
hlt
repz
mov
lret
fbstp
aam
or
or
call
hlt
pop
fwait
pop
xor
adc
pushf
push
inc
push
jae
add
inc
movb
jge
bound
dec
rolb
cwtl
mov
sbb
ss
sbb
insl
mov
rol
shl
mov
xlat
test
and
jne
ja
mov
fmuls
sbb
xchg
ds
cld
sub
mov
jge
jo
jge
push
fimuls
jns
out
lock
cmp
jl
inc
fsubrl
mov
int3
cwtl
aas
and
dec
jo
or
xchg
imul
mov
add
fldcw
jl
leave
ret
shrl
mov
push
mov
jae
dec
sub
iret
push
jbe
sub
mov
fidivrl
lret
les
add
adc
and
mov
fbld
xchg
xor
aas
cmp
mov
mov
ret
pop
add
push
and
shrb
popa
outsb
mov
pop
aam
push
in
push
mov
sub
cld
xchg
lret
push
rolb
add
dec
or
fucomp
fwait
mov
into
test
aad
sbb
add
and
mov
int3
xchg
xor
jb
popa
mov
inc
mov
ds
pop
fistl
loopne
jnp
cmp
or
repnz
push
mov
mov
or
outsl
test
xchg
ja
insb
dec
mov
and
sub
lods
xor
add
xchg
push
and
iret
cmp
in
inc
movsl
arpl
aam
movsl
pushf
sub
imul
test
sub
lock
add
xor
xor
mov
cmpsb
leave
fucompp
fcoml
pop
add
mov
xchg
mov
push
cli
and
mov
pushf
or
mov
rolb
ret
aaa
inc
shrb
insb
and
pop
daa
xor
pop
pandn
mov
mov
inc
mov
mov
jp
xchg
fwait
xor
out
jmp
cmp
popa
test
pxor
jle
test
push
xor
outsl
cwtl
xor
int
jne
pop
xor
mov
into
or
xor
mov
sahf
jno
testb
cmp
dec
scas
mov
movsl
shlb
dec
sbb
jnp
bound
mov
lcall
es
pop
bound
dec
into
stos
shll
add
test
mov
sub
mov
xor
subb
out
mov
dec
add
popf
mov
sub
fwait
dec
fstpl
les
int3
dec
outsb
mov
pushf
insl
scas
call
or
test
cli
push
and
inc
test
rol
call
inc
bound
cli
inc
pop
std
dec
sahf
mov
test
lock
fmulp
je
inc
or
dec
and
sahf
pop
pop
or
mov
adcb
xor
addl
push
inc
dec
cmp
insl
test
or
pusha
rclb
pop
adc
push
into
xchg
mov
hlt
stos
sub
xorl
movhps
mov
and
sub
inc
aam
mov
xor
shlb
and
hlt
outsb
cli
movsl
pushf
sub
lret
pop
jl
mov
push
sbb
lea
jg
sbb
xchg
hlt
xchg
xchg
aad
in
add
jle
in
testl
mov
icebp
lea
leave
test
in
inc
lcall
addr16
and
add
pop
pop
mov
lret
jl
in
cmp
cmp
jge
mov
mov
fistpll
out
test
sbb
and
bound
xlat
and
lret
mov
push
xor
inc
cmc
les
dec
in
mov
test
movsb
fxtract
pop
adc
sbb
outsl
pop
adc
jecxz
js
je
mov
pop
mov
cmp
insl
xlat
push
fxch
imul
in
lahf
and
pcmpeqb
hlt
repz
push
adc
push
orb
mov
xchg
data16
push
test
gs
inc
and
mov
rorb
jae
ret
mov
int
xor
lret
std
pop
inc
push
inc
sbb
mov
bound
das
stos
enter
sbb
loope
pop
or
subb
ret
xchg
loope
add
in
shlb
mov
leave
sub
or
test
loope
jle
jmp
jp
roll
fmull
stc
lds
loop
mov
roll
mov
cmp
nop
popa
cmp
call
mov
and
mov
cmp
xchg
mov
adc
clc
jge
scas
push
or
xchg
ret
mov
mov
ss
or
mov
cmpsl
xchg
decl
iret
and
mov
iret
jnp
loopne
mov
mov
jge
cmp
test
mov
xchg
bound
subb
je
lds
xor
repnz
mov
sub
cld
mov
das
dec
add
ss
stos
sti
fistl
arpl
jge
pop
add
pushf
stc
bound
out
pusha
cmc
dec
movsl
shll
and
dec
xchg
cmp
cltd
daa
loopne
sub
fcompl
popf
xchg
push
dec
sbb
das
jg
lret
xor
stc
mov
jb
fcomps
xor
mov
test
test
cmc
rcr
cmpsl
int3
jo
push
lcall
push
inc
push
mov
mov
dec
movl
insl
mov
sub
hlt
clc
push
dec
mov
and
push
loopne
mov
xchg
mov
mov
stc
adc
mov
push
mov
inc
inc
mov
sti
cmp
fidivs
sti
int3
aad
mov
lret
in
andl
call
lods
cmp
lahf
mov
jecxz
out
pop
int
adc
imull
inc
fidivrl
aam
xchg
out
adc
stos
xchg
rolb
or
movsb
lcall
sub
repz
adc
aad
imul
les
ror
adc
cmp
and
loope
movsb
mov
mov
es
push
or
rclb
jp
frstor
cmp
cmp
shll
cld
add
push
faddp
sub
jae
sub
jge
push
dec
mov
push
shlb
inc
out
scas
lods
lahf
icebp
inc
xchg
loopne
nop
jmp
imul
arpl
in
add
test
repz
js
mov
xor
xchg
es
in
sub
cmpsb
lods
sti
adc
xchg
or
xor
loop
mov
outsb
sbb
lds
cmp
or
ret
mov
lods
mov
push
int3
mov
push
push
xchg
pop
jge
mov
pushf
xor
sub
mov
lret
push
or
push
mov
fs
mov
popf
ret
jae
imul
push
mov
ljmp
shlb
and
shlb
sbb
xchg
mov
ret
outsl
mov
mov
jo
lock
cwtl
and
jnp
push
dec
adc
add
dec
xchg
fmulp
popf
or
xor
pop
mov
xor
add
jnp
mov
fst
sbb
xor
das
test
in
xchg
clc
sbb
ss
scas
cmpb
stc
mov
dec
popa
xchg
jmp
addr16
lods
mov
sti
push
mov
fdivs
fldenv
das
inc
inc
loop
sarl
pop
imul
push
pop
push
inc
sbb
test
push
popf
adc
push
jns
cmpsl
imull
dec
cmp
andb
ds
ret
mov
jb
ss
popfw
push
inc
mov
lret
cmc
jp
push
loope
fadds
xchg
xchg
push
andl
dec
push
popf
cmp
jbe
push
jmp
sbb
or
aam
inc
xchg
adc
xor
sub
pop
shll
insl
mov
scas
pop
cs
iret
mov
mov
sahf
inc
je
cmpsb
sahf
aam
lcall
mov
dec
int
mov
in
je
arpl
xchg
es
lahf
sub
jmp
adc
sub
or
das
cli
mov
push
sbb
std
int
push
jge
loopne
push
push
into
inc
std
cmovbe
std
mov
sahf
rolb
test
dec
xchg
mov
nop
jl
sbb
dec
sahf
or
lods
aaa
push
fiaddl
mov
push
xchg
sub
and
xor
sub
aad
sbb
sarb
sbb
jp
fiaddl
inc
ja
sarb
into
dec
stos
xor
fsts
cmp
or
popf
push
outsb
mull
fdiv
daa
push
xor
popf
jmp
mov
icebp
pop
popf
shrl
pushf
jge
popl
lods
in
into
lret
mov
push
and
movsl
sti
mov
out
sbb
pop
shll
push
or
inc
push
push
jns
push
push
iret
addl
or
add
adc
inc
jne
stos
cmp
decl
inc
idivb
adc
rorl
dec
mov
cmc
sbb
inc
test
pop
sub
pop
stos
ret
test
mov
aad
mov
inc
imul
mov
jnp
cmp
outsb
pop
inc
jo
lods
out
roll
ret
mov
jno
fisubrs
jno
setbe
iret
and
xchg
mov
cs
insb
int3
add
cmpsl
mov
roll
fwait
xchg
jbe
pop
nop
lret
mov
sbb
jo
and
inc
cmp
or
andb
sub
pop
xor
cmpsb
data16
adc
push
jle
sbb
js
lock
fdivs
sub
test
lcall
out
or
call
mov
cmp
jo
lods
jle
adc
sub
mov
les
push
and
ret
shl
fsubrl
fisttpll
sub
stc
lret
jmp
pop
xchg
inc
mov
fdiv
clc
clc
cmp
fwait
int
lcall
daa
cwtl
sbb
mov
ja
pop
sub
lahf
and
pop
cld
mov
add
cs
icebp
jecxz
ret
cld
or
push
testb
fnstcw
nop
enter
inc
mov
pushf
mov
push
mov
in
xchg
adc
jne
das
mov
pop
divl
jne
lahf
lret
dec
push
leave
jge
mov
mov
daa
dec
and
pushf
push
xlat
adc
stos
mov
mov
stos
push
mull
cltd
add
lret
movsl
and
movsb
add
imul
and
mov
out
inc
adc
cmpsb
leave
inc
hlt
or
dec
lcall
cltd
mov
ret
aad
shlb
stc
xchg
inc
mov
sbb
pop
fwait
xor
enter
aam
xor
aad
pand
pop
or
loop
pop
jp
ret
ror
mov
mov
dec
repz
mov
and
adc
ret
xorl
aas
push
mov
jb
add
sub
iret
into
shrb
jnp
dec
add
xchg
or
push
inc
shll
fcomps
mov
push
or
insl
subl
push
inc
shl
xchg
stc
aas
jns
cmp
sbb
mov
int3
outsb
jbe
popa
pop
xchg
lcall
fistps
pop
in
pop
push
aam
sahf
dec
jns
fdivrs
and
xor
iret
fisttpl
push
dec
xorb
dec
iret
push
test
jnp
or
js
dec
jne
jmp
popa
mov
cmpsb
pop
xor
rolb
jnp
cmpsb
add
dec
gs
into
mov
and
inc
mov
jp
jl
pop
je
stc
push
loop
fs
incl
cwtl
mov
ret
fimull
fdivrl
jmp
push
fs
mov
inc
popf
loopne
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
add
or
std
adc
or
daa
jmp
scas
subb
add
in
fdiv
add
fsubl
lock
mov
pop
mov
movsb
xor
xchg
xor
fistpll
movsl
sub
inc
add
xchg
lcall
jb
adc
cmp
xchg
xor
sub
cmp
adc
cli
jno
sub
dec
arpl
xor
mov
out
ja
adc
pop
loope
jne
mov
dec
inc
imul
dec
add
dec
push
cld
push
cmpsl
movsl
scas
cmpsb
lock
std
and
pop
inc
xchg
mov
cmc
mov
lds
std
rorb
cmc
pop
pop
adc
clc
jnp
sub
fists
aas
or
ljmp
xchg
das
hlt
adc
pop
nop
jg
and
push
dec
mov
in
sar
xchg
push
or
sub
repnz
imul
sahf
jp
push
aaa
xlat
jo
mov
inc
xchg
jnp
inc
mul
lcall
add
xor
ficompl
popa
jno
add
mov
mov
iret
jmp
push
rcrb
stos
lock
cs
adc
mov
push
mov
push
dec
mov
lahf
xchg
rcll
or
repz
dec
pop
mov
add
or
push
iret
call
inc
push
inc
sbb
loop
ja
sub
and
jo
adc
out
lret
lret
cli
fwait
xchg
shrb
jo
add
enter
jbe
cli
pop
or
ffree
roll
lret
ret
movsb
jle
insb
fisubrs
ficoml
cmp
imul
loopne
xchg
sahf
aam
pop
dec
or
or
xchg
faddp
push
aaa
shlb
je
jmp
repz
inc
out
into
xor
test
xor
push
mov
push
pusha
mov
xor
fiaddl
jl
outsl
jge
iret
dec
pushf
pop
aam
pushf
adc
addr16
flds
sub
adc
mov
add
push
jmp
sbb
xchg
lcall
jle
das
scas
arpl
mov
jo
les
in
jno
div
roll
mov
pop
mov
lret
std
xchg
iret
scas
jg
push
mov
rcr
cmp
push
lret
jmp
cmpsb
sub
mov
push
adc
dec
sub
notb
adc
pop
xchg
or
icebp
cmp
cltd
and
mov
js
ljmp
sahf
js
mov
cmc
pushf
xchg
xchg
rorl
stos
out
fcmovne
lahf
and
adc
into
loop
xchg
mov
sahf
mov
cld
rclb
sub
push
ja
and
sarb
mov
sti
out
xchg
dec
inc
mov
sub
jp
pop
int3
shrb
aas
or
jbe
std
push
imulb
ja
cmp
lods
popf
decb
movsl
inc
and
popa
jle
mov
mov
pop
xor
sbb
addr16
xchg
push
in
arpl
aas
in
popf
das
daa
mov
add
pop
movsb
repz
jae
out
add
jecxz
sub
subb
rolb
mov
ret
add
push
das
test
rcll
cmp
mov
cmpl
inc
dec
sbb
and
aam
push
push
mov
jne
sbb
jo
jmp
inc
out
ljmp
and
jge
jp
dec
out
jmp
shrl
insl
call
adc
mov
iret
out
pop
sbb
mov
popf
xchg
jb
rcl
loope
dec
mov
xchg
ds
jl
aam
int
sbb
mov
inc
lret
ret
dec
test
daa
and
into
fidivl
test
xchg
ljmp
sbb
jne
rcl
mov
aam
fwait
je
jae
mov
out
fisttpll
mov
fstpl
push
mov
arpl
pop
jno
push
mov
and
je
push
push
xor
push
pop
lret
dec
push
pop
and
fsubl
adc
xchg
xor
adc
pop
xor
xor
mov
rcrl
add
adc
mov
xor
jns
stc
stc
pushf
mov
roll
inc
mov
mov
ss
cmp
jo
mov
mov
xchg
enter
inc
jnp
fbstp
popf
ret
fwait
imul
shll
dec
imulb
cmp
cltd
push
push
pop
xchg
outsl
lds
popf
out
add
je
dec
call
scas
jb
cmp
std
xchg
les
mov
mov
pop
addr16
jb
clc
sbb
or
xor
dec
repnz
jno
mov
cwtl
push
sub
xor
cmp
fstpl
lods
cltd
imul
dec
dec
cld
jb
inc
pop
test
in
and
call
gs
push
scas
bound
movsl
xchg
lods
stos
jle
adc
and
out
add
fs
scas
jbe
adc
mov
push
repz
mov
ss
xchg
std
push
sbb
sbb
jge
out
sbb
mov
push
cmp
in
push
fstpt
addr16
das
jge
mov
incl
stos
imul
cmpsb
xlat
in
sbb
mov
cli
inc
sbb
out
pop
mov
popa
pop
push
and
jl
arpl
in
in
cmpsl
test
add
and
jnp
out
nop
fwait
dec
shll
loop
dec
clc
pop
pop
out
xchg
adc
sahf
jae
pop
pop
roll
inc
xchg
inc
sub
xor
int3
inc
xor
xchg
adc
stc
lods
inc
fwait
sub
lea
mov
mov
ljmp
jbe
mov
shl
fwait
xor
pop
imul
ficoms
cmp
adc
jae
cmp
movsb
mov
mov
lock
dec
movsb
icebp
push
xchg
addr16
cmpsl
sbb
cmpsl
test
xor
shlb
adc
enter
add
lds
add
mov
jge
xor
popa
imul
push
xchg
xor
xchg
popa
mov
xchg
sub
jmp
clc
aaa
stc
push
jmp
cli
mov
jo
je
aas
pop
int3
sbb
mov
mov
repz
jge
dec
pop
adc
shrd
shlb
jl
adc
push
lahf
and
mov
imul
aas
out
es
rcrl
outsb
cltd
adc
cmc
ficoms
xchg
lock
jp
fmuls
jle
rcrb
cmp
into
sub
aaa
das
inc
add
cvtdq2ps
mov
lods
js
push
inc
hlt
adc
imulb
in
xchg
xchg
inc
push
sahf
and
push
icebp
sti
and
dec
lods
xchg
in
push
dec
pop
xchg
push
fbstp
and
sbb
ret
adc
call
or
daa
mov
jnp
sbb
add
mov
mov
outsb
insb
imul
ficoms
les
in
es
jb
iret
or
out
xor
push
sbb
mov
rclb
loope
subl
jl
cltd
leave
mov
xor
ret
add
cwtl
cmova
add
mov
xlat
inc
movsl
les
int3
adc
cmpsb
hlt
into
data16
mov
dec
pushl
cmpsl
jo
jbe
jp
aaa
daa
xchg
clc
iret
push
push
mov
cmp
push
jne
sbb
insb
or
sarl
dec
and
aad
stos
sbb
mov
pop
insb
ror
pop
fnsetpm(287
addr16
popa
and
inc
neg
dec
add
sbb
push
add
lahf
mov
jno
mov
mov
push
lds
pop
xchg
andb
aam
dec
stc
cmp
jle
sbb
add
ds
outsl
lock
test
push
cmp
push
into
sub
push
mov
jecxz
or
sbb
jmp
or
sarl
inc
loop
pop
push
xor
add
and
and
xlat
xor
int
jno
inc
sub
int
les
xorl
imul
or
xchg
jb
cmpsb
push
fldcw
fwait
mov
mov
xlat
or
outsb
mov
shlb
mov
pusha
mov
and
mov
pop
cmpsl
push
leave
rcrl
inc
cmc
sahf
movsl
xchg
sbb
outsl
inc
ret
add
cmp
mov
lods
xlat
sub
cli
sbb
movsl
mov
stos
jle
add
test
or
jne
cmp
xchg
xchg
test
mov
bound
add
mov
adc
push
mov
pop
scas
scas
subb
cmc
std
shlb
xor
mov
out
pextrw
jge
enter
loope
daa
add
xlat
inc
mov
outsb
cld
jb
fisubrs
mov
mov
adc
insl
xlat
sub
inc
sub
mov
and
js
sbb
sub
mov
and
sbbb
mov
jp
pop
andb
sub
mov
rclb
jl
les
jge
ljmp
or
loop
push
dec
xor
push
add
mov
xchg
imul
aad
fs
test
in
lods
jmp
cltd
xchg
xlat
push
lods
mov
xchg
mov
mov
xchg
loopne
cld
mov
adc
adc
dec
stos
lcall
rcl
adc
sbb
nop
and
mov
adc
mov
int
xchg
xorb
push
cld
dec
dec
push
dec
inc
mov
push
dec
out
cwtl
addb
fidivrs
mov
mov
xchg
arpl
adc
cmp
out
push
out
fwait
call
add
sub
cmpsl
push
ret
xchg
sub
mov
mov
mov
pop
xchg
ljmp
dec
mov
sarb
mov
aas
outsb
stos
xor
push
push
jnp
fsubr
push
je
mov
aam
icebp
cld
movsb
xchg
shlb
xchg
sub
scas
and
mov
and
xchg
cmp
sub
mov
add
dec
out
loopne
add
cli
les
enter
jmp
pop
push
pop
and
sbb
adcl
popf
aad
imul
push
sub
or
dec
mulb
mov
and
test
xor
sub
lret
push
jno
cmp
aas
push
popf
or
jno
xchg
push
sbb
sti
mov
sbb
shl
js
jo
fisubl
sbb
sub
cmp
jbe
nop
imul
cmp
jecxz
je
xchg
outsb
adc
inc
jp
inc
xor
dec
icebp
mov
cmp
adc
mov
sbb
xor
roll
mov
sub
jne
xor
xchg
jmp
leave
movsb
ja
push
cmovl
xchg
cld
daa
sub
test
mov
orl
lea
add
mov
cmp
insb
xchg
shll
push
mov
inc
cwtl
cltd
sbb
mov
xor
mov
add
xor
leave
lret
shll
mov
loope
scas
sahf
dec
cmp
mov
testb
ficoms
es
xor
aam
in
clc
adc
sub
test
lret
scas
dec
dec
fnstenv
dec
scas
jmp
mov
notb
cmp
xor
mov
sub
leave
aas
fwait
lea
cli
xchg
and
ds
xor
adc
inc
mov
pop
lods
lea
dec
pop
adc
lret
mov
vpmullw
push
aaa
repz
mull
jp
loope
add
sahf
xor
test
mov
test
mov
std
cmp
mov
lock
stos
aas
xlat
or
lcall
pop
add
popf
mov
pop
mov
ja
jl
icebp
jmp
test
xchg
jb
in
repnz
jno
faddl
add
xorb
lds
add
or
or
lds
push
mov
fs
aas
pop
aad
xchg
push
rcrl
and
pop
cmpsl
scas
lods
inc
mov
lock
movsl
int
xchg
rorl
sbb
adc
sub
jns
stc
int
sub
rcrl
jl
sbb
sti
loope
lret
mov
leave
aaa
jno
lods
pop
jne
xor
mov
mov
add
mov
dec
enter
cs
popl
out
test
movsb
mov
std
loop
js
andl
dec
jg
and
dec
cmp
loopne
out
xchg
popf
pop
aas
mov
mov
cltd
testl
jecxz
cmp
bnd
scas
dec
call
stos
lods
jmp
push
mov
mov
add
lret
ret
mov
or
cld
push
inc
aas
ljmp
in
cs
jbe
mov
jge
out
mov
jmp
xor
mov
push
jno
lahf
adc
mov
cltd
fcoms
imul
dec
outsb
jl
or
mov
xchg
cmp
rcrl
and
push
insl
mov
pop
inc
fisubl
mov
and
cmp
adc
sub
push
push
inc
jne
popa
lahf
pop
lret
test
call
ljmp
fisttpll
fbld
or
cmp
cld
and
xor
mov
lret
test
sub
pop
imul
int3
pop
scas
insl
insl
add
xor
xlat
adc
xchg
push
fcomi
push
pop
es
add
xor
jnp
mov
cmp
fs
and
call
andb
pop
push
rorl
mov
cmc
mov
dec
sbb
lcall
gs
add
fisttpl
icebp
clc
mov
push
xchg
ds
lea
xor
fldenv
add
and
push
or
push
pop
loopne
daa
push
pop
sub
jl
jp
mov
push
mov
adc
in
pop
add
mov
xor
and
loopne
jl
sbb
mov
cmpsb
jb
aam
iret
xchg
jecxz
je
jno
and
pop
sub
pop
cmpl
jp
jo
mov
ja
adc
add
insb
negb
andb
mov
popa
cmp
roll
sub
xor
mov
mov
into
jl
int3
negb
push
dec
push
xchg
pop
cmp
sahf
int
fists
mov
adc
mov
xlat
dec
pushf
xchg
sbb
pop
mov
hlt
xor
fdiv
jmp
sbb
lock
jne
leave
mov
or
fidivl
and
call
and
dec
movsl
dec
loope
add
cmpb
inc
push
push
xchg
divl
cmc
adc
jg
xor
cmp
out
iret
and
push
fs
hlt
pop
mov
repz
inc
mov
or
mov
adc
sbb
xchg
xchg
add
cld
push
cwtl
je
hlt
mov
je
fldl
add
dec
lods
std
adc
arpl
ja
outsl
faddl
fistps
enter
sti
fldl
mov
mov
outsb
ds
cwtl
insl
add
xchg
cmp
or
invd
test
push
insb
outsl
loopne
sub
mov
push
aas
inc
popf
dec
sub
mov
add
dec
jle
imul
push
gs
test
rcrb
in
pop
cld
mov
jbe
xchg
dec
jl
addr16
sti
fnstenv
insb
pop
dec
sub
pop
in
inc
cmp
call
imul
xor
mov
jno
adc
outsl
add
mov
xchg
sbb
jle
in
dec
sub
push
in
fwait
xchg
adc
les
and
jmp
pop
flds
fmulp
sub
lea
fbld
pop
add
cmc
aaa
cmp
ret
xor
xchg
sar
in
int3
mov
mov
imul
cmp
cmp
jecxz
mov
jmp
inc
pop
fcmovu
push
ret
add
mov
test
mov
pop
shlb
les
loope
arpl
xchg
mov
xlat
lods
loope
dec
mov
mov
lock
cmc
test
je
fbld
sbb
cmp
and
cmp
pop
test
mov
add
imul
loopne
out
inc
push
movb
stc
mov
jmp
pop
arpl
sbb
lods
pop
lods
or
addl
push
outsl
pop
mov
adc
int3
mov
cld
sbb
out
bound
clc
loope
push
and
stos
mov
mov
or
fisubrs
jg
jno
fildl
and
mov
mov
push
dec
or
popf
jmp
add
daa
adc
into
adc
or
inc
lcall
pop
repz
mov
or
xlat
add
dec
fidivl
mov
add
cltd
jmp
cmc
imul
mov
and
nop
aas
mov
ficoms
xor
xchg
das
push
inc
jg
lods
jns
lods
movsl
pop
xchg
xchg
pop
mov
mov
popl
popf
pop
add
daa
ret
and
les
dec
repnz
outsb
dec
mov
lea
test
push
outsl
mov
jg
jbe
int3
adc
adc
aas
xchg
mov
mov
or
pop
movsb
call
xchg
or
cmc
sbb
mov
inc
insb
outsb
inc
stc
neg
rol
jae
jb
jmp
xor
dec
mov
jp
xchg
shll
daa
mov
adc
jmp
xor
sbb
xchg
data16
dec
icebp
mov
sub
jp
jno
inc
int3
jle
mov
mov
xor
ficomps
mov
imul
add
lock
in
push
test
mov
sbb
cmp
pusha
int3
int3
xchg
sbb
testb
push
testb
cmp
out
sub
cwtl
jnp
mov
mov
mov
inc
jne
lock
sbb
push
repz
addr16
cmp
fcmovnbe
addr16
sub
popa
lods
mov
mov
ret
out
outsl
sarl
fwait
and
mov
das
insl
push
xor
mov
push
pop
sub
rcrl
jns
sub
movb
gs
insb
xor
ds
cmp
mov
inc
push
mov
rolb
xor
jo
mov
push
es
es
or
push
repnz
push
mov
shl
mov
fwait
addr16
cmp
enter
mov
mov
mov
push
mov
pushf
xchg
cld
fstpt
or
mov
jmp
xlat
push
dec
mov
shll
inc
dec
push
test
inc
xorl
daa
pop
addr16
test
stos
pop
xchg
and
xchg
les
jnp
ja
fisubrl
cmp
adc
sar
or
adc
fwait
mov
mov
add
mov
mov
icebp
add
jmp
out
inc
out
stos
dec
enter
subb
cmp
mov
mov
cmpsl
and
xchg
outsl
daa
std
aaa
inc
inc
xor
adc
std
and
scas
inc
ret
push
icebp
rcl
ja
fadd
mov
mov
inc
push
lea
mov
pop
and
out
push
push
cmpsb
cs
mov
xor
xchg
jp
out
mov
popf
shrl
sbb
mov
mov
ljmp
sbb
sub
sub
jecxz
in
gs
or
xchg
fisubs
xchg
or
fisubs
mov
fwait
push
stc
mov
clc
jbe
cli
sbb
in
mov
aaa
mov
cmp
je
or
enter
pop
rcl
sahf
nop
cmp
fimull
or
pop
and
jno
fbstp
in
jecxz
add
rcrl
add
jl
push
je
adc
or
sbb
into
and
add
popa
mov
and
imul
pop
pop
sbb
out
fidivrs
setne
inc
dec
pusha
mov
fcmovnu
cmp
pop
hlt
outsb
ja
scas
push
fistpl
mov
adc
movl
sbb
dec
cld
cmp
sbb
push
in
and
ror
stc
jno
cs
out
mov
aam
add
jl
call
icebp
push
sbb
dec
test
jbe
sbb
pop
dec
into
adc
xchg
in
test
in
lods
ja
mov
cmp
cmp
loope
push
lods
jnp
decl
jno
dec
and
push
lahf
cli
int3
ds
aam
bound
lock
adc
inc
rcll
ret
pop
xchg
sahf
cwtl
and
ljmpw
dec
stos
mov
and
pop
mov
clc
jmp
mov
jp
outsl
mov
repnz
mov
das
out
test
mov
mov
fsubrs
iret
xor
sbb
mov
mov
inc
add
mov
rcrb
xchg
add
cmc
dec
enter
sub
fldl
jnp
pop
sbb
rclb
xchg
loope
mov
es
jmp
or
lret
inc
aaa
mov
lds
std
inc
loope
adc
adc
jmp
adc
call
sub
sbbb
div
inc
xchg
add
and
cld
in
jb
outsb
sbb
push
cli
jno
es
fiadds
sbb
mov
test
daa
sbb
mov
movsb
jnp
loope
sahf
pop
push
into
adc
data16
add
pop
neg
xchg
cmp
rcrb
xor
movb
call
into
scas
push
adc
sub
pop
mov
cwtl
xor
xchg
push
cmp
jbe
add
adc
insl
dec
jbe
jle
mov
jnp
mov
repz
js
and
test
aas
inc
pushf
into
sbb
std
int3
and
out
add
movsl
ljmp
int3
pop
and
xor
sahf
xor
dec
bnd
ja
mov
add
sbb
repz
add
cmp
mov
push
outsb
jbe
sbb
dec
inc
and
cmp
mov
cmc
mov
nop
mov
sub
add
mov
push
cld
popa
jecxz
inc
jnp
dec
push
shr
ret
pushf
xor
and
add
mov
or
fs
mov
bound
ss
js
push
pop
sub
movsb
pop
imul
lret
fbstp
pushf
mov
inc
int3
fildll
mov
xor
iret
mov
jge
xchg
push
xchg
add
mov
das
push
adc
xor
and
add
mov
push
pop
jg
push
shrl
jl
mov
cmp
sti
adc
stc
test
ds
int3
jns
rcl
mov
in
cmp
or
aad
shll
push
icebp
hlt
or
stos
mov
sub
fisttps
xor
push
push
and
and
insb
jp
mov
push
out
jl
fstpt
icebp
stc
ds
mov
sahf
mov
pop
je
shl
or
outsl
mov
dec
lret
push
test
inc
inc
bound
inc
stc
fnstenv
mov
aam
sbb
sub
adc
movsb
lods
movsl
cmpsl
dec
ret
dec
repz
mov
andl
xchg
sbb
subb
jecxz
shll
shrl
jge
insl
pop
sbb
mov
sbbl
pop
scas
adc
andb
xor
mov
sub
xchg
sub
inc
jl
aam
adc
and
push
xor
idivb
xor
rclb
loop
dec
and
jns
sub
push
mov
push
mov
loopne
sti
nop
dec
jg
int3
fs
or
adc
fildll
lods
and
inc
aaa
bound
es
cmp
cli
push
lea
mov
sti
pusha
dec
inc
cmc
or
sub
hlt
push
loope
icebp
adc
orb
cwtl
insl
repz
pop
sbb
rolb
sbb
cmp
or
cld
ljmp
push
jecxz
in
js
add
loope
icebp
icebp
popf
in
mov
adc
aaa
nop
dec
lock
insb
push
jp
sbb
mov
aas
sahf
pop
dec
std
or
cmp
gs
mov
or
push
fldcw
gs
aam
cmc
loopne
inc
bound
loopne
aaa
stos
arpl
mov
xor
fistpl
or
addr16
hlt
pop
insl
ljmp
mov
gs
jns
lock
ret
or
adc
fnsave
inc
fists
jno
mov
xor
adc
and
scas
dec
pushl
and
mov
lcall
dec
popf
mov
push
and
outsb
aas
xor
inc
xchg
cmpsl
in
sbb
push
lock
push
icebp
lock
mov
mov
pop
dec
cs
xchg
jno
pop
mov
into
stos
sub
leave
loop
dec
iret
adc
icebp
push
dec
aam
mov
int3
push
cld
xor
xchg
cmp
lahf
sahf
out
jns
andl
push
repz
inc
sub
insb
leave
mov
fs
xchg
ss
cmp
cld
out
xor
dec
test
xchg
jl
leave
test
bts
pushf
inc
inc
push
stos
xor
pop
cmc
mov
mov
cmc
lret
add
orl
nop
mov
xor
shlb
sahf
shll
inc
cltd
cmp
bound
adc
xchg
cmc
imul
ss
push
sub
out
xchg
sahf
sub
das
movsl
fwait
bound
out
in
int
mov
mov
jecxz
or
es
xchg
iret
xchg
mov
dec
js
aam
xchg
repnz
dec
cmp
cmp
inc
es
mov
fldcw
int3
arpl
xor
jno
test
cwtd
pop
mov
icebp
hlt
lds
repnz
lock
ja
sub
lahf
add
jbe
call
shl
xchg
xchg
or
push
call
ss
test
pop
ss
xchg
sub
jae
xor
jb
loope
out
jle
lahf
sbb
sub
push
cmp
xlat
sbb
mov
and
cltd
xor
xorb
ret
fidivrl
das
xor
inc
cmpsl
mov
outsl
add
inc
stos
stos
out
push
std
cmp
push
sbb
bound
pop
push
add
test
jle
mov
mov
imull
dec
cmp
push
xchg
pop
test
sbb
mov
add
into
cltd
mov
mov
roll
mov
cwtl
dec
nop
mov
adc
xchg
dec
fbld
sbb
jmp
inc
in
mov
cmpsl
shlb
sub
pop
lock
and
js
andl
pop
outsb
lods
rcll
sbb
jno
mov
in
lods
dec
lods
jl
xlat
ret
in
xor
xor
dec
int
jmp
adcb
ds
sub
movsb
jae
sbb
fxch
in
jle
mov
imul
dec
inc
inc
adc
and
daa
repnz
xor
or
fucom
push
pop
hlt
subl
je
inc
pop
mov
sbbl
xlat
dec
xchg
push
jmp
mov
inc
mov
dec
lahf
es
sub
jle
rcrl
lret
aam
or
arpl
test
xor
pop
pop
cld
adc
fcmovnbe
call
mov
push
aaa
inc
cwtl
adc
and
jae
lret
xchg
pop
pop
lods
insl
sbb
flds
lock
sbb
xchg
push
in
lret
mov
dec
sub
loope
xchg
add
sahf
jl
clc
enter
adc
adc
mov
pop
sub
js
jns
and
out
adc
cwtl
cmp
mov
pop
jae
loop
cmp
pusha
std
xchg
test
clc
std
lds
adc
inc
sbb
push
cmpsb
and
arpl
shl
daa
out
dec
sub
add
push
dec
xor
sbb
in
test
push
loope
test
pop
xor
ss
sub
je
mov
out
fs
or
popa
pop
mov
adc
popf
ja
mov
and
mov
cmp
ljmp
inc
push
jg
ja
lret
and
and
bound
xor
or
sub
and
stos
shl
adc
mov
outsb
scas
jecxz
xchg
ret
mull
imul
adc
lock
mov
jle
cmc
rolb
into
dec
gs
outsl
aaa
les
iret
in
in
enter
or
jmp
dec
lcall
rorl
call
xor
xchg
dec
rclb
test
fmull
push
pop
int
push
sbb
push
add
mov
out
pop
mov
das
add
xchg
mov
test
mov
imul
xor
cli
testl
cltd
loope
test
cmp
test
test
xor
ret
jns
stos
dec
mov
lret
pop
push
sbb
scas
mov
stos
aaa
add
std
cs
es
sub
insb
jns
dec
das
sahf
in
in
mov
mov
clc
sbb
in
mov
subl
mov
xor
call
sti
jecxz
sbb
in
in
dec
enter
inc
movsb
mov
clc
subl
es
sub
xlat
inc
push
popf
mov
push
sub
mov
ss
ss
add
mov
lret
adc
push
ror
sub
sti
outsb
push
xor
orl
jo
shll
xlat
add
sbb
sub
inc
mov
mov
and
xchg
sbb
icebp
xor
nop
loop
loope
pop
push
xchg
dec
or
jb
push
arpl
ja
idivl
mov
aam
sub
mov
xor
in
outsb
mov
clc
pop
insl
inc
lcall
int3
dec
movsb
les
sub
or
sub
or
and
ret
test
push
loop
push
into
mov
cltd
xchg
mov
jmp
rcrb
inc
in
jnp
jge
sbb
inc
lcall
jnp
out
push
movb
push
xor
jg
or
test
pop
xchg
mov
mov
aaa
pop
inc
sbb
xchg
stos
aam
mov
cmp
fmull
pop
rorb
inc
rcll
add
lret
pop
inc
mov
mov
sbb
xor
mov
ficoms
aas
xchg
lea
insb
aam
xchg
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
std
mov
fsts
shll
or
bound
jnp
dec
mov
adc
fdivs
rcrl
popa
xchg
js
mov
lret
sub
pusha
and
std
xor
sahf
test
sub
jg
sti
gs
shrl
scas
xlat
mov
scas
push
xchg
jae
shll
sahf
xchg
maskmovq
imull
ja
dec
popa
fldcw
jno
cli
fsts
popa
das
iret
aas
repnz
pop
sub
dec
lret
cmp
ds
jmp
dec
inc
test
pop
mov
div
test
mov
mov
dec
add
cmp
nop
test
mov
jne,pt
das
dec
pop
outsb
loope
mov
mov
shrb
jbe
sti
sub
pop
cld
push
lock
fnstenv
pop
mov
mov
push
pop
test
xchg
mov
pop
push
dec
stos
dec
outsl
cmp
xor
imul
sahf
jle
scas
or
aad
in
dec
sub
and
lds
pusha
lods
stos
ficomps
and
fildll
aad
pusha
les
cld
out
dec
fcompl
lahf
sti
xchg
outsl
push
insb
or
leave
fwait
cltd
ret
mov
inc
push
lret
repnz
cvtps2pi
lds
xor
pop
mov
xchg
fldl
dec
sub
insl
in
ret
sbb
or
mov
pop
dec
push
subb
addb
arpl
jecxz
das
sub
and
xor
scas
in
movsb
mov
mov
jnp
arpl
xor
fiaddl
test
fldl
adcb
cmpsb
pop
mov
faddl
sub
and
pop
in
inc
cwtl
xlat
inc
rcrb
inc
test
lods
ja
jae
cmp
sbb
movb
xchg
mov
repnz
out
sub
pop
mov
adc
shll
cmp
in
bound
cs
add
movsb
sbb
fldl
add
cld
pop
mov
lcall
les
mov
add
out
lods
or
and
and
pop
push
sbb
jge
jp
shrl
mov
ret
lahf
and
faddl
sbb
repnz
mov
test
mov
js
jecxz
aaa
movsl
xchg
call
add
shll
ror
hlt
je
xor
inc
adc
test
arpl
sbb
scas
loope
mov
idivb
sub
cli
std
fiadds
es
lods
inc
aas
cwtl
subl
sbb
pop
out
push
xchg
mov
leave
jecxz
notb
xor
addr16
dec
cmp
mov
cmpsb
xchg
pop
addr16
imul
sar
nop
pop
push
imul
call
mov
pop
or
jmp
js
fisubrs
stc
bound
adc
mov
enter
test
or
cmp
xchg
lcall
sub
or
sub
add
sarb
jge
pop
fcompl
mov
jne
mov
xchg
ja
push
or
test
subb
scas
sbb
dec
mov
test
inc
shll
inc
adc
lods
js
dec
call
cmp
lcall
and
leave
jmp
mov
jle
mov
adc
push
cmp
bound
bound
push
test
and
pop
pop
leave
and
cmpsl
lret
repz
dec
daa
push
pop
and
pop
xchg
shl
mov
pop
stc
pop
inc
stos
scas
rorl
in
aad
xchg
cmp
mov
ss
pusha
mov
test
popf
cltd
cmpb
sbb
push
push
cs
ror
sarl
into
int
jl
pop
adc
ds
cmp
stos
mov
out
int
and
mov
push
pop
sub
and
ror
adc
push
inc
and
pop
loopne
leave
cmp
jl
cwtl
dec
mov
stos
pop
cwtl
push
add
pusha
push
nop
push
in
addr16
adc
adc
imul
outsl
jno
leave
jbe
mov
push
xchg
sub
scas
imul
and
sbb
sahf
xchg
aaa
pop
xchg
es
and
or
push
movsb
sbb
add
loopne
daa
inc
jmp
pop
xor
cli
cmp
xlat
mov
push
aam
cltd
les
mov
and
mov
je
hlt
sarb
adcb
mov
pop
cmp
pop
push
or
repz
cmc
outsl
ret
jae
lea
hlt
imul
push
insl
cmc
sub
push
loopne
dec
ret
ret
dec
js
pop
mov
xor
cmp
jge
rcll
mov
lds
sub
dec
in
and
out
mov
stos
cmp
fpatan
cmpsb
mov
popf
push
rclb
adc
xor
and
and
repnz
lock
shl
pushf
nop
and
sbb
aaa
notb
xor
xlat
add
icebp
test
out
mov
andl
push
add
mov
mov
cmpl
imul
outsl
roll
stc
dec
iret
filds
arpl
push
mov
dec
lahf
mov
sub
cmp
cwtl
fldcw
in
mov
cmpsb
mull
mov
xor
fmull
inc
pop
pop
xor
jb
jae
std
mov
rorl
push
and
test
xor
out
out
adc
in
or
lods
xchg
adc
sbb
inc
dec
nop
add
in
into
xchg
xchg
sbb
cwtl
sbb
pop
sahf
mov
or
mov
push
inc
sbb
in
imul
mov
jno
cmp
dec
ss
es
ret
mov
push
dec
lods
arpl
sahf
sub
mov
cli
pushl
cli
pop
mov
mov
lock
mov
add
out
xchg
bound
mov
or
out
dec
daa
mov
loope
cmpsl
cmp
push
dec
fwait
ret
test
mov
adc
aam
mov
or
or
roll
pop
lret
cmp
popf
pop
xor
inc
mov
sub
pop
sub
mov
repnz
jns
inc
jnp
test
push
loope
and
ss
jbe
imul
pushf
decl
aad
je
je
fistpll
adc
push
mov
je
loopne
ret
insb
in
mov
push
js
jle
cmpsl
rcr
mov
std
xchg
pop
mov
fmull
jge
les
jg
push
xor
into
into
fwait
fwait
test
jp
clc
mov
movsb
daa
pop
lea
mov
xor
cmp
jno
sbb
pushf
mov
outsl
xor
stos
xchg
xor
je
mov
dec
clc
push
sti
xor
out
cmovl
je
test
fs
outsl
adc
fisubrl
ss
pop
imul
ficoms
sbb
jb
add
repz
ret
cmp
test
jbe
ljmp
mov
add
aas
mov
jae
sbb
shr
fstpl
sub
dec
mov
aaa
mov
mov
sub
rolb
push
jne
xchg
mov
inc
stc
insl
jle
pop
repnz
insb
push
cwtl
outsb
mov
jb
push
push
mov
add
jp
pop
mov
lods
and
xchg
adc
push
jp
int3
pop
push
mov
inc
cmp
flds
push
jl
or
out
adc
sub
lods
ficomps
js
xchg
aam
push
cli
xchg
lcall
xor
mov
push
loope
fdivs
fsubrp
loopne
test
pop
sub
lods
xchg
dec
in
xchg
mov
mov
fldenv
std
pop
add
clc
sahf
sbb
lods
mov
fmul
cltd
inc
push
ja
or
aad
mov
or
add
pop
out
shll
pop
inc
dec
dec
pop
mov
jns
movsb
fldenv
and
movl
xlat
xchg
fists
pop
movsl
repnz
inc
fdivl
sub
imul
dec
add
leave
movsb
jns
jmp
or
mov
pop
sub
les
aad
push
lahf
add
jae
cmp
inc
sub
lret
jl
in
mov
or
mov
out
ficoms
mov
push
out
cmpsl
stc
mov
repnz
lea
je
test
shrb
popa
shl
jne
jbe
stos
inc
mov
xchg
or
mov
sbb
mov
loopne
idivl
dec
repz
scas
insl
outsb
leave
fwait
xchg
shl
push
and
ret
int
imul
scas
lea
loopne
xor
cli
loop
push
stc
jl
push
pop
xchg
adc
sarb
out
in
lea
adc
and
push
movsb
mov
lret
jae
mov
sarb
pushf
cmp
and
sub
into
pushf
mov
popa
pop
call
mov
sbb
fadds
sub
std
mov
icebp
mov
mov
xchg
pop
shrl
andb
dec
ss
leave
sub
pop
xchg
and
sub
xchg
push
pop
mov
and
cmp
pop
rcrb
push
or
xchg
sbb
cmpsl
cmpsb
ffree
ljmp
in
push
xor
xchg
xchg
jb
adc
xlat
cli
mov
sti
std
dec
inc
sbb
test
nop
add
or
shr
ror
aas
fdivrl
pushf
cmp
je
xchg
jle
and
sub
jne
inc
inc
cwtl
sub
push
push
adc
sbb
ljmp
mov
nop
mov
shll
gs
call
push
je
repnz
sub
repz
pusha
push
sbb
fildl
cli
andl
mov
cwtl
jno
adc
push
xchg
lret
jg
out
sub
push
int3
mov
sub
push
out
xor
stc
stc
gs
push
cs
test
jne
test
add
call
cwtl
xchg
adc
sub
pop
pushf
mov
mov
mov
pop
pop
cmp
inc
jb
adc
fsts
mov
mov
fs
inc
fisubl
ret
outsb
mov
lcall
xorl
mov
stc
jne
out
pusha
repnz
sub
push
shll
sti
add
stos
sbb
sbb
pop
mov
mov
roll
xor
cmc
outsb
vmovsd
mov
outsl
shlb
add
mov
jmp
test
arpl
pop
scas
lret
shl
cmpsl
mov
mov
push
or
push
jg
fbld
loopne
xchg
loope
orl
mov
mov
pop
scas
mov
imul
bnd
jmp
and
out
pushf
int
adc
nop
jnp
add
imull
inc
jg
xchg
iret
incl
dec
adc
daa
out
add
push
lcall
loop
roll
fnstsw
shlb
jl
xchg
jne
xor
mov
jno
repz
dec
mov
xorl
imul
add
rcll
test
or
nop
mov
adc
outsl
enter
push
pop
mov
in
negl
add
movsl
sub
jnp
push
jg
adc
das
push
or
sub
movsb
lds
mov
adc
xor
inc
es
pop
adc
push
sub
bound
mov
repz
shll
fwait
mov
and
gs
sahf
pop
cmp
scas
mov
arpl
jns
cmp
push
lahf
arpl
std
jns
insl
cmp
mov
iret
adc
and
jae
in
jmp
jae
fnstenv
xchg
fsubrl
ja
adc
daa
push
lret
in
cmc
aaa
adc
sti
adc
das
jns
push
arpl
ret
xor
push
rcr
add
jnp
imul
jecxz
inc
pop
idivb
sub
dec
sahf
dec
out
mov
cli
xor
push
xchg
sbb
mov
inc
xchg
jg
xchg
push
or
dec
das
or
add
addr16
xlat
jmp
xchg
mov
inc
jl
test
clc
add
sbb
shl
mov
inc
jl
mov
sbb
add
sbb
aaa
mov
xchg
in
pushf
dec
insl
xor
loop
aad
cmpsb
jl
jns
lods
add
arpl
jnp
loopne
sbb
mov
cmpb
lret
xchg
cmp
in
sub
inc
jg
sub
xchg
push
imul
cld
and
movsl
cmpsl
sbb
fsub
int
xchg
xor
jle
cmp
xlat
aaa
cmp
or
push
into
xchg
mov
seto
xlat
sub
push
into
sub
pop
andl
or
pushf
loopne
add
sub
lods
jl
lds
add
loop
mov
xchg
sub
and
mov
data16
in
loope
mov
bound
jl
lret
jge
xor
flds
xor
repz
addl
jno
pop
xor
mov
fcoms
sarb
or
add
icebp
insl
scas
pop
mov
push
ds
mov
push
inc
arpl
popf
sub
mov
sti
aas
dec
jb
sbb
das
fldl
insb
xor
jnp
mov
xchg
dec
mov
nop
xchg
loope
xchg
clc
cwtl
negl
pop
mov
movsl
and
mov
cltd
sub
cmc
add
xor
push
dec
push
jae
out
fcomps
lods
cli
sbb
xchg
add
shll
sarb
mov
sahf
imul
jecxz
mov
negb
mov
sbb
clc
js
sbb
int3
outsb
cmp
mov
mov
testb
xor
ss
cwtl
pop
jl
mov
inc
cltd
out
cmp
cmp
inc
sbb
jo
jge
lds
imul
lods
add
aad
mov
xchg
popa
xchg
loop
dec
hlt
popf
cmp
xor
push
lret
hlt
lret
and
cmpsb
sbb
adc
outsl
mov
jecxz
dec
inc
pop
sarl
ret
xor
adc
pop
push
dec
stos
xor
push
ljmp
push
cmp
inc
test
sbb
adc
subl
iret
sbb
adc
sti
xor
cs
jg
push
fldl
sub
sbb
xchg
pop
ret
dec
mov
adc
adc
ljmp
mov
ljmp
xchg
xchg
and
mov
push
push
loopne
cld
in
mov
dec
dec
xchg
mov
jae
and
xlat
push
sbb
subl
mov
or
cmp
jecxz
lea
and
sbb
dec
push
iret
pop
es
roll
mov
inc
inc
fdivr
fwait
data16
pop
out
inc
xor
mov
xchg
dec
fldl
mov
pop
xor
add
dec
test
jnp
lock
sarb
bound
fstpt
ds
rcrb
fcomps
orb
outsl
iret
or
jl
cmp
and
insb
cmp
pop
fsubrp
je
fmull
loopne
lahf
shr
and
lea
add
xor
pop
lahf
iret
fisttps
mov
pop
or
cmpsb
test
scas
es
rorb
movsl
jae
imul
xorb
or
jmp
mov
pushf
mov
or
or
movsl
out
xchg
in
aaa
sbbl
out
xchg
add
xor
pop
and
lcall
pop
and
daa
jno
sub
adc
in
adc
notl
and
jle
jns
jae
scas
popf
xor
out
mov
adc
xlat
call
jbe
mov
dec
xchg
jmp
jle
and
xor
scas
stos
test
xorl
sub
adc
jmp
push
loope
jns
inc
and
sti
ja
and
repz
add
into
sub
mov
int3
pop
outsl
or
jb
les
mov
mov
test
mov
cmp
xchg
ss
sub
lock
scas
sub
stos
xlat
mov
cmpsl
mov
sub
stos
sahf
mov
fisttpll
cmp
lret
test
sti
in
adc
aas
cmc
stc
xor
test
mov
mov
dec
fisubs
mov
inc
push
ret
bound
mull
lea
daa
in
dec
movb
dec
sub
mov
in
add
ss
jbe
bnd
pop
add
mov
xor
cmc
add
mov
stc
aas
inc
push
cmpsl
fmuls
and
cmp
dec
jle
sub
arpl
out
in
push
fildll
sahf
xor
pop
andb
movsl
xchg
test
lret
ds
mov
pop
loope
push
icebp
mov
xchg
imul
enter
adc
insb
dec
inc
mulb
add
mov
or
insb
xchg
lods
cs
pop
adc
shrl
pop
adc
insb
pushl
dec
and
stc
mov
or
mov
jle
and
repz
rcrb
mov
jne
mov
sub
shll
jns
addr16
icebp
mov
mov
mov
xor
mov
int3
or
ret
or
jecxz
mov
stc
or
cltd
xchg
movsl
dec
aaa
pop
inc
cltd
daa
push
and
das
gs
sbb
loopne
into
jge
cltd
mov
jmp
out
mov
jnp
andl
and
popf
pop
fsubs
jmp
and
jns
or
jmp
ret
push
dec
sarl
jno
jae
mov
push
out
enter
stc
xchg
jg
and
insb
andl
je
mov
hlt
bound
out
imul
mov
cmp
push
mov
rorl
inc
and
notl
out
jge
movsl
out
repnz
xlat
cmp
dec
add
cli
clc
inc
or
insb
xor
movsb
mov
mov
or
daa
aas
mov
push
outsl
pop
mov
bound
ljmp
imulb
push
pusha
jge
setge
cmp
push
sbb
pop
xor
xchg
jne
flds
repnz
adc
lret
mov
sahf
rcrb
inc
mov
insb
test
push
dec
sbb
ret
loopne
and
cmp
notb
es
call
test
daa
daa
in
loop
popa
in
dec
icebp
adc
push
loopne
andb
add
jp
xchg
jb
pop
pop
stc
sti
aad
aad
fsubl
mov
add
subb
pop
jnp
out
decb
ljmp
cmpb
filds
adc
and
sarl
sbb
xor
push
popf
push
mov
nop
jmp
dec
xor
aam
or
cld
xchg
pop
jle
insb
ficomps
mov
loop
add
mov
xlat
bound
jge
lods
orl
inc
xchg
daa
push
xchg
gs
daa
enter
jne
fsubrl
pop
xchg
inc
dec
stos
int3
fcoms
xorl
out
push
jge
jge
xorl
sub
nop
mov
push
push
dec
push
xchg
sub
jns
lea
popf
mov
xorl
jp
fisttpl
xchg
adc
rep
jl
dec
jge
iret
in
mov
mov
xor
push
dec
es
mov
inc
dec
dec
iret
or
sbb
dec
js
push
cmp
iret
adc
or
aam
aad
cmpsb
add
rclb
nop
cmpsl
scas
sub
out
mov
sbb
pop
fmuls
js
leave
dec
sbb
mov
loopne
int
add
adc
sbb
imul
and
mov
stos
lahf
jle
xor
adc
pop
mov
inc
sbb
cmc
call
sahf
pusha
and
aad
cmpsl
jne
inc
or
fs
cli
add
inc
sub
out
inc
xor
dec
xor
out
sbb
push
aam
fildl
dec
fisttps
push
scas
cmc
sbb
add
pop
push
xor
jne
stc
pop
test
jmp
pop
jmp
rclb
ret
cli
jo
mov
xchg
pushf
adc
cmc
pop
jae
cmc
insb
popf
negl
xchg
insl
dec
addr16
loope
mov
jecxz
jae
lods
push
test
das
mov
mov
les
flds
out
dec
inc
and
fdiv
pop
pop
adc
mov
out
sub
pop
xchg
mov
mov
leave
orb
aaa
add
pop
js
adc
outsl
mov
jle
pushf
repnz
and
mov
xlat
repz
jne
or
xlat
and
pop
inc
mov
jbe
mov
push
push
cmp
repnz
jbe
imull
mov
test
push
daa
addr16
shrl
mov
scas
sti
and
mov
popf
sub
xorl
sub
xchg
notl
out
cmpsb
cwtl
pop
adcb
sub
add
cmp
mov
in
das
stos
js
rdtsc
mov
in
stos
fmul
pop
je
aas
xlat
sbb
scas
insb
scas
fisttps
push
repz
jle
add
jae
leave
sbb
ror
adc
push
mov
pop
lods
xor
xlat
adcl
in
mov
xor
fdivp
aam
loop
je
arpl
xchg
loope
adc
mov
push
test
pop
aam
adc
xor
mov
sbb
cli
xchg
dec
xchg
sbb
jp
insl
xor
out
shlb
dec
shl
mov
sbb
js
push
jge
sbb
pop
mov
mov
mov
adc
and
push
imul
xchg
jb
fwait
popl
jg
dec
daa
testl
aad
imul
or
push
cwtl
inc
rorb
shufps
and
setne
jp
rcl
mov
sub
inc
fwait
cmovl
xor
out
aam
pop
in
std
lods
lods
je
sub
shlb
addl
addr16
in
cmp
inc
push
dec
push
push
cs
add
aam
iret
xchg
test
add
ret
out
shll
inc
mov
add
mov
fwait
lret
dec
mov
int3
dec
push
jne
pop
sub
sbb
lds
or
jg
ja
ret
and
mov
loope
orl
stos
out
mov
jbe
xor
sub
andl
mov
pop
out
fsubs
fidivrl
lcall
out
lcall
aam
mov
pop
inc
std
cmovb
pcmpeqd
sub
pop
add
scas
jbe
push
or
mov
clc
fstpt
shrb
into
outsl
xor
jnp
in
xor
nop
adc
cmpsl
sub
lods
push
or
mov
pushf
cmpsb
xchg
xchg
sub
aaa
adc
cmp
jne
cmp
out
xchg
in
inc
orl
test
xchg
jl
inc
out
push
pop
lahf
pop
cmp
jl
jne
inc
adc
jecxz
rcll
hlt
and
lods
mov
jl
ret
xor
imull
fildl
adc
sbb
int
push
enter
loop
push
mov
fisubs
loop
sub
mov
xchg
push
les
addr16
pop
rolb
dec
lds
mov
xor
mov
mov
mov
fwait
stc
outsl
aas
xchg
mov
xor
fisubrs
jo
imul
mov
or
adc
lods
push
test
jno
xor
xchg
adc
iret
roll
push
sub
xor
test
cwtl
push
insb
clc
inc
ss
clc
movsl
call
jns
sbb
mov
mov
sbb
jmp
shll
in
xor
stos
mov
fistpll
stos
and
fistpll
sahf
sbb
pop
mov
das
or
fadd
inc
cmp
andb
add
mov
or
mov
bound
adc
inc
mov
cmp
test
sahf
mov
sub
ret
cmp
cli
lock
xchg
leave
ficoms
mov
and
repnz
fstpt
subl
push
mov
cmc
push
pop
jecxz
icebp
lcall
hlt
jnp
nop
mov
push
insb
fsubrp
int3
mov
lret
cltd
out
push
lods
das
push
push
dec
decw
inc
jl
rolb
adc
mov
adc
inc
leave
lret
adc
xor
or
es
loop
push
cmovge
mov
test
sub
es
repz
push
xchg
out
aaa
lds
mov
leave
cltd
xor
cld
dec
mov
insb
dec
sti
and
dec
mov
andb
std
cmp
sbb
dec
pop
pop
sahf
in
or
inc
idivb
test
mov
daa
lds
fwait
imul
lods
cmp
xlat
inc
inc
push
notb
sub
insl
subl
sbb
iret
jbe
mov
jns
xor
in
or
push
insl
and
js
stc
ret
mov
mov
cld
sub
cmp
aas
dec
fcoms
loope
pop
mov
test
mov
js
stos
cmp
jle
fdivrp
outsb
sarl
cmp
mov
flds
inc
adc
psubd
sbb
xchg
adc
inc
imul
pop
int
jne
add
fucomp
in
xor
pop
or
in
mov
adc
jb
ds
movsl
jno
in
cltd
iret
pop
mov
lds
jae
xchg
cmp
mov
xor
inc
mov
pop
jno
out
aaa
dec
dec
imul
fs
ffreep
sahf
sub
add
adc
or
xchg
stos
jge
into
fsubrl
leave
add
or
sub
sub
lcall
sub
pop
scas
or
cmp
mov
cltd
js
leave
and
dec
cmp
int3
dec
lahf
lea
sbb
pusha
data16
mov
outsb
fisttpl
and
jle
cwtl
fiadds
rclb
adc
xchg
sub
push
out
pop
pop
jns
iret
in
aaa
cmc
mov
sbb
xor
clc
int
jo
jno
add
push
je
xchg
icebp
push
inc
or
push
push
pop
mov
fdivs
fmuls
aam
stos
xchg
vmovlpd
inc
jge
mov
roll
inc
pushf
mov
outsb
cmp
pop
mov
jnp
es
pop
inc
mov
mov
enter
loopne
sbbb
and
or
sub
mov
popf
xchg
and
mov
xchg
pminub
fwait
aas
sub
pop
pop
and
mov
lods
add
and
scas
jns
in
in
push
les
xor
xor
nop
aad
lds
mov
xchg
inc
lcall
mov
lods
dec
inc
pop
cld
es
pop
hlt
jnp
in
faddl
jmp
ss
dec
aas
dec
icebp
fdivrl
cmpsb
dec
movsl
shrb
imull
lret
xchg
sbb
fs
sbb
cli
dec
gs
arpl
ret
inc
xor
ret
sub
pop
pop
leave
imul
and
jne
data16
xchg
and
fidivrl
jle
sbb
scas
ja
cltd
mov
in
mov
iret
mov
lahf
push
sbb
jecxz
lahf
jp
int3
xchg
mov
adc
mov
cld
aaa
aaa
andb
sbb
int
and
aas
mov
into
jl
push
push
xchg
push
add
inc
ljmp
inc
mov
push
je
xchg
lret
mov
ret
test
pop
mov
bound
xor
push
lds
loopne
loopne
cmp
pop
jmp
insl
and
rcl
mov
fs
aaa
outsb
jp
push
sub
mov
aad
add
add
icebp
pop
aam
int
sbb
xchg
push
xorb
test
push
mov
fcmovbe
mov
outsl
sbb
jae
pop
jmp
sbb
fisubl
push
xchg
popf
adc
add
loop
scas
mov
pop
ds
xchg
mov
jae
in
mov
test
adc
dec
jg
cmp
in
adc
push
pop
daa
aam
xor
adc
lret
dec
sub
outsb
inc
xchg
xlat
add
lret
lret
aas
lods
ss
and
hlt
cmp
aad
jnp
pushf
jmp
mov
pop
sbb
aaa
inc
aas
imull
leave
into
mov
lds
pop
dec
repz
jne
fiadds
outsb
cmp
nop
shlb
jmp
jne
pop
imul
sbb
jns
data16
hlt
jmp
fidivrs
clc
add
mov
and
sub
mov
push
xchg
xor
push
out
add
inc
ficoml
or
and
aam
pop
push
jae
mov
aaa
lahf
fwait
lahf
cmp
mov
mov
ja
pop
das
in
movsb
out
mov
jno
cli
loopne
aaa
rolb
stos
pop
jg
lods
or
lds
pop
push
test
push
add
mov
mov
push
jne
xchg
in
add
lds
dec
clc
cs
flds
notb
jmp
cmc
adc
in
inc
sub
in
push
inc
dec
fsub
push
roll
mov
loopne
sub
call
in
ds
lcall
cmp
mov
xchg
push
leave
and
jns,pt
cli
xor
enter
jnp
std
fsubrs
mov
jmp
nop
mov
jne,pn
mov
add
mov
dec
xor
push
fmul
fcomps
adc
pop
in
les
pop
pop
cmpsl
mov
mov
jge
call
xor
ficompl
push
rorb
xchg
add
jo
jns
fstl
movsl
mov
inc
pop
adc
dec
in
sahf
adc
sbb
mov
int3
test
push
xchg
insb
cld
and
xchg
pop
sbb
jmp
xchg
push
or
inc
push
pop
and
mov
ljmp
popf
rcrb
fwait
inc
inc
movsb
jb
fldenv
jp
xor
sub
ss
push
imul
les
push
pop
das
xlat
cmpsl
ja
and
repnz
popf
outsb
cmc
dec
lcall
mov
sbb
arpl
popf
mov
mov
aas
std
cmp
jne
xchg
in
inc
out
out
rorl
or
movsl
mov
es
pushf
test
in
fs
imul
xchg
inc
sub
pop
aaa
test
ret
lret
test
adc
js
popf
xlat
fildll
push
jnp
xchg
mov
push
jnp
push
push
popf
emms
out
or
outsb
lret
in
mov
push
loopne
adc
push
adc
push
and
les
decl
push
mov
sub
sub
loope
fists
sti
jo
mov
add
imul
cmp
mov
mov
cmpsl
adc
dec
sub
add
inc
mov
mov
outsl
test
and
cmp
fbstp
pop
xlat
les
cmp
mov
ret
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
jns
cmpsl
mov
pop
bound
mov
push
out
stc
filds
fwait
stc
adc
mov
orb
xor
loope
dec
cmp
inc
lds
or
xchg
imull
les
sahf
push
hlt
and
inc
std
test
mov
sbb
imul
cld
repnz
or
jnp
in
addr16
pushf
mov
pop
xchg
popf
inc
aaa
fdivl
xor
mov
adc
mov
mov
lcall
dec
xchg
pushf
xor
dec
jb
ja
pop
negb
dec
das
cmp
das
loopne
adc
jnp
and
push
xor
dec
clc
and
pop
jp
mov
lea
aad
cld
adc
xor
xor
pop
adc
xlat
mov
push
xchg
mov
pop
or
xchg
add
cmp
mov
sub
xchg
rorl
adc
cld
add
mov
rcll
xor
gs
cmp
inc
shl
adc
icebp
ret
test
fisubs
lds
insl
cli
jl
mov
inc
mov
mov
cmpsl
rclb
or
jb
and
nop
mov
sub
ja
push
mov
jae
mov
cmpsb
popa
adc
cli
enter
lret
repz
aaa
test
popf
inc
and
scas
rcrl
aaa
sbb
sbb
pop
icebp
jl
push
test
push
pop
leave
sahf
add
push
or
mov
lea
icebp
dec
scas
cld
dec
cmpsb
sub
cmp
add
and
shl
xchg
ret
das
pop
push
cwtl
fisubrs
imul
mov
pusha
pop
push
cmpsl
lahf
cltd
or
cmp
outsb
inc
dec
dec
jae
and
cmpsl
enter
sbb
negl
roll
test
cmpb
or
sub
out
rorb
jge
adc
xor
mov
inc
or
jle
ljmp
sbb
xchg
xchg
sub
inc
mov
gs
hlt
sub
shlb
pushf
dec
jge
lahf
and
lret
adc
jo
pop
adc
jb
mov
in
mov
aad
cltd
lcall
mov
js
sahf
repnz
mov
push
rorl
add
jg
push
dec
fwait
and
jb
xchg
stos
dec
jne
push
cmp
jne
in
pop
xor
aam
add
out
cwtl
enter
inc
call
std
popf
jle
dec
xchg
repnz
and
pop
sbb
ret
dec
repnz
pushf
mov
outsb
cmpb
xor
push
sbb
sbb
fistpl
mov
xor
repz
mov
pop
faddp
xor
loope
xchg
or
or
cmp
xor
or
faddp
aad
lds
lret
pusha
les
stos
loopne
ret
imul
xchg
mov
cmp
mov
cli
stos
pop
mov
icebp
sub
lcall
add
push
in
and
stc
test
mov
inc
push
nop
inc
mov
scas
xchg
push
jge
fs
test
cld
test
mov
repnz
push
loope
cmp
lcall
mov
sbb
mov
lret
bound
pop
clc
mov
add
pop
and
std
mov
cmp
sub
sub
sbb
pop
mov
js
aam
ss
sahf
or
addl
adc
xchg
lea
fldl
cltd
lock
repz
fwait
stos
ret
mov
ds
adc
ljmp
pop
add
icebp
in
cltd
sahf
popf
sbbb
repnz
adc
sub
fildl
sub
or
xchg
fdivs
and
gs
not
inc
xor
sbb
fdivrl
pusha
daa
test
mov
mov
mulb
out
cmc
cmc
into
xchg
in
es
push
loop
mov
pop
add
sub
or
stos
dec
cmpsl
cmp
or
jo
cmp
xchg
adc
dec
das
pop
xor
jg
sub
dec
in
scas
lret
icebp
leave
call
dec
or
xchg
out
outsb
movsl
mov
in
xor
inc
es
rclb
ret
or
jle
mov
push
inc
rcll
movsl
push
dec
test
dec
out
jo
lods
mov
push
div
and
jmp
xchg
push
push
add
inc
orb
int3
scas
cmp
jmp
lock
xor
jns
xor
xchg
add
aas
jns
das
jae
jnp
add
mov
add
lcall
jg
inc
add
iret
xlat
lock
pop
test
and
mov
into
mov
arpl
pushf
xchg
sbb
xchg
inc
sub
cmp
push
xor
sbb
push
add
pop
loopne
int3
inc
fldcw
das
mov
xor
pop
or
mov
pop
or
mov
in
nop
movsb
into
call
sub
pop
cld
pusha
pop
xchg
insb
jnp
jg
jne
fs
or
inc
push
add
mov
pop
cld
cmpsl
dec
xchg
lret
and
xchg
xor
adc
je
dec
into
jo
mov
lods
leave
mov
pop
xor
incb
jno
fdivs
sub
aas
jmp
sbb
jmp
push
imul
sub
orb
push
pusha
rcrl
repnz
inc
sbb
sbb
cmp
dec
xor
mov
insl
lahf
cld
cmp
pop
movsb
ljmp
idivb
mov
add
jg
mov
imul
jnp
sub
setne
push
inc
ror
xchg
mov
xchg
or
sub
jo
adc
sub
and
jg
dec
js
jns
sub
jb
in
out
fistl
sti
mov
addr16
ss
cwtl
push
sahf
inc
popf
push
ds
lods
xchg
mov
adc
rclb
ljmp
jae
pop
push
loope
or
jno
xchg
in
ljmp
lea
imul
dec
sahf
cs
arpl
add
into
dec
mov
or
pop
jecxz
xchg
mov
sbb
push
pusha
cmp
mov
aam
lcall
pop
push
decl
lret
call
notl
sti
fstl
test
cld
ss
or
sbb
xor
iret
shll
scas
push
daa
call
inc
test
mov
xlat
arpl
xor
jo
ds
bswap
lret
pop
sbb
ds
sbb
jle,pn
aad
test
lods
push
push
xchg
rorl
adc
cmp
jge
pop
scas
pushf
xchg
inc
jb
clc
push
jbe
scas
jne
pop
jecxz
mov
and
push
push
lods
sub
ja
adc
imul
iret
cs
test
or
inc
jle
sub
mov
mov
dec
add
xchg
test
push
adc
iret
sbb
pop
shl
mov
xlat
inc
cli
imul
cld
dec
fistl
psubusb
or
idivl
cmc
scas
das
scas
ljmp
lsl
inc
mov
mov
sbb
ljmp
test
sbb
fbld
cmp
fsub
mov
lods
mov
popaw
stos
jne
or
jns
cmc
dec
jp
sub
mov
cwtl
or
sbb
aad
fbld
out
rol
dec
jge
data16
ljmp
and
jnp
into
cmpsb
xorb
xor
lods
fwait
daa
pop
mov
clc
movsl
aad
leave
jns
mov
pop
imul
add
out
inc
jp
sti
mov
add
enter
or
insl
icebp
mov
pop
mov
sub
pop
inc
xchg
fildl
scas
dec
rorb
out
cmpsb
out
pop
stos
or
movsb
stos
out
sub
xor
add
xor
iret
fadds
pusha
ficoml
pop
mov
lods
dec
jae
mov
ja
dec
mov
es
leave
out
xchg
in
dec
hlt
add
leave
sbb
lods
out
jl
add
jle
cmp
jle
and
mov
xor
pop
lds
fidivrs
sub
mov
xchg
push
inc
shr
pushf
jle
dec
pop
push
push
add
lahf
andl
push
mov
inc
ret
repz
adc
outsl
adc
insl
test
testl
cmp
pushf
scas
movsl
sbb
mov
or
cmp
sub
jmp
addr16
popf
mov
repz
xor
dec
data16
jbe
fisubs
mov
xor
add
je
push
and
mov
inc
add
or
addl
push
jb
or
xor
mov
int
lret
cmpsl
sbb
inc
fwait
nop
mov
push
xchg
aam
pop
int
pop
pop
mov
jp
andl
repnz
mov
inc
clc
insl
xor
fdivl
decl
inc
test
call
in
mov
xchg
nop
movsl
mov
sub
pop
xor
push
pushf
dec
aaa
sti
clc
jnp
cmp
adc
pushf
sti
mov
and
mov
inc
clc
xchg
inc
loop
push
lret
stc
mov
aad
bound
stos
fisubrl
clc
das
repz
xor
sub
inc
test
out
push
lods
stc
jno
lret
fcoms
sbb
leave
leave
cmp
push
lock
inc
xchg
sbb
mov
rcr
pop
jnp
out
pop
mov
and
mov
fisubrs
pusha
push
xchg
xchg
xchg
push
movsl
loopne
out
push
or
les
scas
mov
jno
nop
add
fsincos
daa
and
push
push
xlat
jl
loopne
or
jp
test
sahf
repnz
pop
inc
or
adc
push
pop
test
lock
sahf
push
pop
aaa
shll
ds
outsb
inc
stos
fldcw
clc
dec
gs
lds
mov
mov
xchg
mov
mov
adc
add
imul
xchg
mov
inc
stos
mov
cmp
sub
mov
out
inc
xchg
into
lea
push
mov
stos
sub
jb
sbbl
add
cmp
mov
dec
dec
inc
sbb
pop
iret
xchg
cmp
dec
aas
hlt
pop
jg
pop
lods
xor
xchg
call
dec
xor
out
cmp
xchg
popa
and
inc
lahf
loopne
inc
mov
fxch
adc
jns
pop
sbb
loop
pop
or
mov
xlat
and
inc
popf
fst
push
sbb
or
lret
sub
fistpl
push
cmpsb
sub
les
out
pop
fs
adc
ficomps
add
mov
xchg
mov
mov
bound
xor
inc
jae
mov
and
xor
sbb
in
or
lea
shr
stos
ss
out
stc
mov
fisttpll
sbb
sbb
push
xchg
jns
aas
mov
xchg
fwait
or
mov
jl
lahf
push
sub
test
push
aaa
mov
xor
sbb
mov
loope
mov
outsb
ljmp
test
stos
js
fidivs
push
aad
ss
outsl
aam
ja
jl
cmp
adc
cmp
lret
or
and
js
jnp
fdivrs
outsb
std
mov
mov
mov
dec
and
rolb
cmp
ret
push
stos
mov
and
pop
rolb
fistpll
mov
jne
mov
in
repz
dec
repnz
sbb
inc
iret
js
jecxz
or
lods
psubusw
mov
popa
pop
push
movsb
sbb
or
jne
es
xchg
bound
aas
daa
sbb
jg
and
pop
enter
sbb
out
bound
jmp
aam
popf
pop
mov
push
mov
push
std
loopne
int3
push
ja
xchg
xchg
mov
lret
loope
insl
xchg
cmovg
sub
insl
arpl
jbe
adc
and
add
shrl
pop
test
adc
scas
icebp
mov
insl
sub
mov
aas
add
jno
inc
mov
lret
bound
jl
dec
ss
pop
lret
jle
pop
idivl
lods
cmp
fisubrs
in
cmp
ficoms
out
clc
dec
add
inc
in
scas
setl
out
push
xor
pop
mov
ror
lret
push
pop
and
out
divb
repz
lds
lcall
ret
icebp
inc
imul
mov
clc
cmp
popf
sbb
movl
ror
add
enter
sub
mov
div
aaa
ds
mov
cmp
dec
clc
bound
loope
repz
pop
lahf
mov
xchg
stos
xlat
pop
xor
out
sub
push
mov
mov
jae
jg
repz
xchg
pusha
add
aad
in
mov
cmp
lret
sbb
lret
cmc
xchg
rcll
pop
faddp
fistpl
sub
pop
lea
add
daa
cld
shrl
jmp
mov
dec
xchg
outsl
jbe
int3
shrl
nop
ds
adc
add
sbb
mov
sahf
or
movsl
cmp
fiadds
roll
push
dec
mov
or
adc
sahf
rol
das
and
std
mov
ljmp
test
lods
cld
cwtl
aas
sbb
xchg
sub
cmpsb
dec
xchg
or
inc
push
cmpsl
enter
iret
mov
mov
xchg
jmp
adc
addb
in
or
sbb
andb
cmpsb
loope
pop
stos
jnp
mov
cmp
cwtl
int
jns
jnp
cmp
pop
popa
test
in
out
orl
mov
pop
xor
fmull
clc
dec
pop
mov
push
xchg
and
cld
fdiv
pushf
sbb
dec
sub
pushf
cmp
pop
sbb
stos
into
in
ljmp
and
mov
sbb
ror
xchg
or
push
insl
bound
dec
int
sub
bound
arpl
lock
jae
inc
mov
mov
mov
cmp
mov
or
mov
scas
cmp
imul
push
cli
std
mov
push
sub
mov
cmpsb
test
pop
mov
sti
out
sbbl
jle
and
sub
jle
add
jl
out
loop
mov
mov
shrb
or
jae
jmp
sub
pop
dec
stos
pop
pop
mov
ret
leave
ret
cmpsb
bound
xor
sub
dec
mov
or
adc
pop
sbb
hlt
cmpsl
xor
xor
popf
outsb
inc
fs
xor
push
cmp
xor
icebp
lock
lods
cld
lods
out
pop
pop
xchg
mov
and
push
dec
das
pop
scas
scas
sbb
lret
push
jns
mov
cmpsb
addr16
stc
mov
sbb
cmp
scas
ret
mov
scas
xor
add
sub
or
xor
sub
mov
xchg
cld
xorb
dec
inc
mov
inc
lock
mov
sub
jne
ss
push
sbb
mov
jmp
xor
loopne
lahf
mov
js
adc
adc
mov
bound
xchg
pop
pop
push
es
in
cwtl
lahf
mov
adc
mov
xchg
pop
cwtl
cmp
lock
popf
jl
xchg
test
or
mov
mov
push
das
in
jnp
andb
in
mov
mov
daa
and
push
lods
mov
ss
jecxz
jp
push
fildl
in
jl
pushf
nop
pop
pop
xchg
sbb
push
jmp
mov
mov
mov
push
sar
push
push
test
test
xlat
lods
mov
xlat
outsl
in
xor
iret
mov
or
mov
jp
pop
data16
inc
call
lret
mov
fmull
mov
repnz
std
mov
rcrl
adc
fimuls
idivb
les
int3
and
xchg
sarb
into
adc
adc
notb
and
aas
push
add
add
sbb
nop
push
push
pop
cltd
out
cld
outsb
outsb
je
mov
into
loope
mov
pop
cmp
shl
daa
cld
js
sbb
push
stos
std
jno
jl
mov
adc
pushf
mov
in
sti
lods
xor
jno
xchg
clc
mov
inc
adc
fwait
das
inc
test
jg
sbb
add
xchg
cs
push
cmpb
adc
mov
push
or
push
outsl
pop
iret
mov
push
call
xchg
cwtl
ljmp
out
xchg
or
loop
xor
mov
mov
popa
dec
stos
xchg
mov
in
mov
mov
filds
repz
nop
pop
adc
push
les
jle
inc
cmp
push
mov
adc
push
dec
test
or
jae
bound
mov
sbb
add
sbb
shlb
ficoml
mov
mov
mov
cmp
jl
and
test
mov
push
inc
rcrl
cwtl
orb
dec
test
mov
dec
inc
dec
ja
inc
mov
imul
in
in
or
push
testb
nop
pop
pmulhuw
lahf
mov
adc
jo
mov
or
in
add
mov
hlt
mov
lret
xchg
out
mov
push
outsb
movsl
inc
out
jnp
mov
mov
mov
xlat
mov
jecxz
push
mov
sbb
dec
fimull
xchg
and
cmp
or
push
or
mov
hlt
adc
jge
cwtl
scas
cli
repz
fstps
mov
adc
ffree
jge
sub
aad
jbe
or
xchg
pushf
push
adc
xor
and
rcrb
push
fnstenv
sbb
jns
cmp
mov
roll
jae
mov
mov
add
xor
jns
hlt
or
adc
test
push
jne
adc
and
jbe
sbb
rcrl
adc
push
mov
push
addr16
iret
mov
pop
inc
mov
out
mov
mov
push
cli
mov
in
stos
sub
aas
pop
jge
push
ljmp
xchg
jp
or
jno
insb
add
pop
cmc
inc
lcall
xchg
cmp
out
inc
sahf
mov
outsl
xor
loopne
push
jmp
repz
pusha
mov
sbbb
mov
ja
jle
mov
jge
jo
and
test
xchg
out
lret
sbb
cmc
lret
fcmovnu
xchg
enter
inc
sbb
adc
xor
push
push
loope
ficompl
xchg
jmp
mov
mov
lahf
aad
lret
jp
ljmp
lea
incl
cli
fisttpl
rcll
loop
xchg
pop
push
notb
jbe
push
or
push
cmpsl
sbb
mov
inc
mov
or
or
dec
dec
push
jmp
sub
sub
or
fisubrl
fildll
out
adcb
idiv
mov
and
arpl
push
inc
xchg
xchg
push
dec
xchg
gs
lods
jo
leave
mov
xchg
xchg
dec
mov
cmpsb
sbb
pop
jno
shl
in
push
clc
mov
jg
cmp
lods
ret
imul
lret
mov
mov
int3
fisubl
pop
sbb
mov
test
cmpsl
mov
ja
sahf
std
sbb
push
fcmove
xchg
aas
pop
push
jmp
mov
aas
push
dec
push
xor
xchg
jb
sti
jle
inc
mov
gs
add
mov
mov
and
div
push
pop
pop
fnstenv
push
mov
test
lea
leave
mov
and
xor
addr16
cmpl
shlb
xor
mov
sahf
add
and
lcall
sbb
fcomp
and
or
rcrb
jae
aam
lret
aam
xchg
jg
xor
or
sbb
push
pop
mov
adc
add
and
jg
xchg
stc
jnp
sub
xchg
adc
push
jg
pop
in
jmp
scas
sub
jp
mov
sbb
xlat
push
idivb
aad
mov
pop
pushf
inc
in
jb
xchg
and
cmp
aad
out
orl
xchg
imul
push
lahf
inc
xor
sbb
adcb
out
insl
or
mov
adc
inc
lods
sar
lret
aaa
jno
mov
inc
js
xchg
pop
jecxz
jnp
mov
cmp
adc
mov
dec
pop
sub
int
push
movsb
sbb
or
enter
add
xor
aad
mov
test
cmpsl
push
adc
pusha
xchg
in
xor
and
push
insb
icebp
aas
pop
outsl
sub
out
pushf
jne
sbb
jmp
mov
shll
cld
into
not
or
cmp
push
sarb
cltd
movsl
shll
xchg
insl
movb
sbb
push
cli
mov
dec
xlat
adc
cmp
pop
sub
pop
push
dec
cmpsb
nop
pushf
pusha
lods
roll
and
mov
adc
mov
mov
mov
xchg
cmp
into
cli
jecxz
lods
xor
mov
mov
fcoml
jg
jp
in
pop
iret
xchg
pop
aaa
cs
xor
outsl
jg
mov
rol
int
jg
je
sbb
sarb
stos
mov
int3
js
mov
xchg
dec
jnp
or
xor
add
aad
pop
jb
or
rolb
popf
rcrb
nop
push
dec
pop
inc
mov
inc
mov
or
rclb
lods
cmp
lock
fdivrs
and
adc
lret
push
sbb
inc
or
cld
sub
hlt
sub
stc
cmp
jmp
xchg
pop
mov
mov
xor
fs
jnp
inc
mov
cmp
mov
push
dec
or
test
mov
jl
dec
mov
jns
daa
sbb
sub
jbe
sub
sysenter
pop
sbb
cmp
cwtl
scas
sti
xchg
call
popf
cmp
jb
fucom
or
lcall
or
pop
sbb
mov
outsb
adc
mov
jo
popf
jmp
jne
arpl
repz
pop
fsubrl
cmp
inc
aaa
js
xchg
ja
mov
or
xchg
shlb
int3
ds
leave
lahf
dec
cmp
imul
ret
popa
jmp
orb
push
pop
jb
jge
dec
fistps
mov
out
cmpsb
js
xor
int
icebp
clc
outsl
dec
pop
ret
stos
xchg
repnz
xor
rcrb
jae
push
xor
pop
ss
sbb
xchg
ljmp
ss
or
jl
mov
int
sbb
out
fsubs
or
repz
and
inc
in
xchg
inc
pop
adc
stc
stc
adc
pop
mov
mov
pop
sarb
add
popa
add
leave
push
negb
outsl
sbb
popa
xchg
push
adc
pop
ret
cltd
dec
pop
pop
pop
lods
fmuls
dec
dec
sub
ficompl
inc
lret
jge
sub
mov
inc
movsb
xchg
insl
stos
add
cmp
pop
test
in
sbbb
adc
fdiv
mov
cmp
aad
in
in
std
mov
push
nop
sbb
xor
je
repnz
or
pushf
fwait
daa
push
pop
inc
hlt
hlt
hlt
sbb
mov
ret
cmp
in
inc
aaa
shlb
subl
jmp
adc
adc
or
mov
cmp
mov
in
mov
add
mov
lea
cmp
fst
mov
jge
test
push
pop
mov
nop
stos
mov
xchg
in
push
push
movsl
in
ror
out
loope
push
rcr
cmp
jecxz
fcomip
out
movsb
jp
ds
mov
and
dec
push
mov
push
out
mov
mov
xor
jne
inc
mov
inc
add
fadds
icebp
push
mov
out
and
mov
mov
pop
scas
add
mov
ss
ja
sahf
or
out
addb
adc
xor
mov
or
push
push
xor
push
cmp
mov
cld
out
cli
fcomps
mov
inc
mov
sub
mov
and
pop
jle
jecxz
test
inc
pop
aad
xor
lcall
mov
pop
lcall
xor
push
mov
clc
mov
sti
adc
lock
xchg
push
inc
and
xchg
jno
es
pop
dec
lea
repnz
repz
jne
lods
pusha
fbstp
mov
mov
icebp
jo
fisttps
repz
ja
vsqrtsd
sbb
add
mov
test
and
adc
fldcw
andb
icebp
push
mov
insl
lods
ffreep
sub
and
repz
sarl
js
lahf
sahf
pop
scas
lods
pmaxub
sub
in
enter
test
mov
rol
xor
movsb
inc
xlat
add
push
sub
cmp
cld
leave
cmp
iret
inc
pop
adc
or
nop
push
mov
mov
gs
adc
sbb
cmpsb
cmc
popf
push
dec
in
cmc
test
stos
dec
sub
in
mov
or
push
adc
xor
mov
lret
or
leave
mov
lret
xchg
mov
aad
push
cmp
aas
jb
mov
cmpsl
mov
shll
xchg
orb
sarb
daa
outsb
jb
xorl
cltd
inc
loope
pop
aaa
lods
js
xchg
fs
xchg
add
inc
shrl
enter
sub
mov
cmp
xor
in
cmp
pop
dec
and
push
and
xor
out
fcoml
adc
pop
sub
add
push
or
data16
shlb
sub
in
or
mov
sbb
pushf
cmpsl
add
fidivrs
lods
fs
adcb
pop
mov
mov
inc
popf
mov
sbb
stos
mov
jl
es
xchg
mov
mov
movsb
outsb
iret
cmp
in
ds
mov
push
mov
lods
in
fcmovbe
inc
push
jmp
loope
out
ja
dec
scas
bound
and
fcmovu
cmpsb
stc
jg
ja
inc
adc
lock
mov
push
sub
pop
xorb
clc
scas
rclb
and
mov
das
mov
cld
test
mull
xchg
shl
rol
aad
lea
fsts
std
arpl
rcl
and
outsl
adc
cmpsb
nop
dec
or
add
jp
jns
jae
scas
mov
or
cwtl
mov
add
in
mov
pop
test
mulb
mov
loopne
push
movsb
enter
jge
negb
xor
mov
mov
mov
in
xchg
mov
push
rcrb
pushl
push
cmp
dec
stos
or
cld
in
and
shlb
cld
adc
gs
das
mov
add
mov
es
fnstcw
in
xor
inc
inc
lds
sub
add
pop
mov
cmpsb
leave
in
mov
loop
xor
push
test
cmp
sub
sarl
loop
fadds
push
adc
jp
dec
inc
movsb
bound
ret
int3
lods
std
mov
dec
push
mov
aaa
jne
sbb
xor
std
pushf
and
aas
or
and
fimull
das
scas
mov
xlat
push
xchg
xlat
and
xor
fisubl
xchg
mov
mov
pop
cwtl
fsubl
mov
adc
dec
or
sub
jle
add
push
popa
cmpsb
xchg
aad
and
dec
testl
cmpsb
cwtl
or
std
cli
pop
test
fucomi
pop
pop
les
add
xor
jnp
pusha
mov
out
adc
push
fwait
daa
fwait
mov
sahf
rcl
aam
push
ss
jo
adc
sub
cmpsl
jns
jno
mov
imul
fwait
jns
pop
loop
mov
movsl
inc
push
push
jns
mov
xchg
test
in
dec
rcrb
mov
stos
out
mov
mov
dec
sub
lret
xor
push
cs
pop
mov
jae
sbb
mov
cmp
xchg
test
adc
pop
jmp
iret
dec
ret
pop
lea
movsb
rolb
sub
add
rolb
dec
adc
sub
xor
adc
sbbb
aaa
out
imul
sahf
cmc
hlt
lahf
jne
movsl
pop
dec
dec
lahf
pop
popf
cmp
not
jb
jmp
filds
adc
add
mov
and
pop
cmp
jge
or
push
push
jns
mov
dec
pop
adc
dec
inc
cwtl
add
push
sbb
shl
pop
insb
cmpsl
lea
sub
movsl
adc
cmp
xor
pop
mov
adc
sarb
adc
cld
das
adc
filds
fnsave
push
inc
loope
hlt
mov
or
dec
mov
jne
pop
cmc
push
push
xor
test
xor
gs
jmp
inc
jg
jno
stos
pushf
roll
add
jae
mov
pushf
add
dec
fadds
out
mov
inc
test
stos
cs
in
pushf
repz
in
ja
mov
aam
dec
icebp
loopne
in
nop
aaa
fwait
rcrb
adc
xchg
pop
push
pop
sahf
repz
xlat
out
sahf
into
aas
inc
sbb
push
pop
inc
adc
dec
xchg
mov
call
jb
out
aad
std
clc
popf
clc
inc
in
jb
loope
movsb
push
sub
push
cmp
scas
cltd
sub
rorb
fidivrl
mov
mov
push
xchg
mov
or
icebp
xchg
dec
mov
and
inc
dec
imul
mov
pushl
jno
jb
aas
jo
inc
stos
cltd
dec
push
and
dec
and
xor
inc
popa
test
test
xor
shl
and
scas
imul
in
aaa
inc
xor
test
xor
xor
or
xchg
xchg
push
mov
sbb
or
fisubrl
nop
pusha
xor
scas
sub
sbb
or
xor
jb
call
and
sbb
mov
push
gs
and
and
fisttpl
pop
or
xchg
add
outsl
das
mov
divl
dec
sbb
cltd
mov
jno
cmpsl
int3
or
sub
divl
xchg
adc
jecxz
xchg
dec
popl
push
jbe
push
xchg
sub
out
push
lret
adc
cli
mov
iret
mov
dec
add
ror
inc
sbb
xchg
pop
push
and
rclb
dec
outsl
push
int
dec
and
jne
push
ret
sti
sbb
shrb
and
pop
int
enter
nop
add
sub
pushf
sbb
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
xchg
lahf
ret
inc
push
bound
pop
bound
jg
mov
or
movsb
arpl
loopne
jne
es
rclb
dec
inc
gs
dec
pop
scas
fstl
hlt
mov
mov
mov
stos
ss
xchg
mov
mov
sahf
popa
jmp
xor
stos
mov
adc
xchg
push
leave
pop
jno
scas
sub
call
inc
test
test
mov
aaa
dec
fidivrs
pusha
push
jecxz
clc
std
stc
clc
mov
ret
push
push
adc
jp
ja
popf
sahf
aam
and
aaa
jle
lret
jne
sahf
fcomip
mov
jmp
push
push
icebp
call
jns
push
dec
push
sub
mov
pushf
inc
mov
push
mov
xchg
gs
add
push
add
jge
add
push
add
sbb
mov
int3
ljmp
in
xchg
sarl
and
repz
pop
push
jno
lock
jnp
test
addb
adc
add
clc
inc
mov
mov
dec
movsl
mov
mov
pop
lcall
pop
xor
scas
dec
aaa
sbb
xor
movsl
fbld
and
fmull
adc
add
dec
lahf
push
mov
pop
cmp
xor
inc
out
and
mov
push
pusha
clc
jne
cmpsl
hlt
pop
xchg
jp
xor
aas
popa
les
mov
push
adc
mov
stc
mov
fildl
data16
out
movsb
daa
std
jno
sbbb
xchg
or
and
scas
inc
mov
inc
mov
cmovb
jg
jge
push
sbb
sti
sbb
dec
dec
xchg
les
mov
jo
movsb
lret
aad
dec
pop
or
push
add
jo
or
mov
cmp
or
cld
iret
idivb
pop
sub
lods
mov
nop
orl
mov
pinsrw
lcall
mov
loop
test
mov
add
sbb
addl
jmp
lcall
mov
or
xchg
jmp
dec
sub
and
rclb
inc
pop
stos
movsl
sbb
mov
sarl
jbe
xchg
into
in
cmp
fnop
and
gs
outsb
enter
fcomp
in
jl
loopne
lods
jne
loope
jp
jb
cmp
aam
pop
out
xchg
cs
sti
int3
dec
sub
add
xor
jo
iret
mov
and
psubb
push
pop
inc
sbb
sbb
fidivrs
stos
insb
call
idivb
cmp
lret
pop
jns
imul
fsubrs
dec
cmp
nop
and
mov
shlb
lahf
movsb
xlat
jbe
cmpsl
jge
loopne
testl
in
mov
cltd
out
mov
sahf
sarb
jbe
call
mov
imul
in
cli
ret
lret
jnp
daa
es
xchg
call
sbbb
shr
mov
adcl
das
out
sub
es
nop
rcr
pushl
jp
dec
int3
lock
cmp
sti
call
decb
jecxz
je
hlt
test
cmp
cmp
imul
adc
ljmp
mov
and
cmpsl
test
pop
mov
jl
call
leave
repnz
and
push
sbb
inc
inc
mul
out
mov
push
jl
ret
dec
stc
add
pop
inc
and
mul
test
push
cmp
mov
dec
lret
lret
jbe
stos
inc
mov
jnp
and
cmp
loope
orb
mov
xor
or
pop
or
andb
cmp
add
cltd
incb
frstor
dec
outsl
and
stos
fsubl
xchg
mov
dec
popa
insb
lret
push
test
fstpl
and
cmp
xchg
clc
jnp
fstpt
repz
in
xchg
sbb
fnsave
in
xchg
sbb
test
sub
scas
add
push
cmpb
and
inc
insb
mov
loopne
scas
int3
pop
sbb
ret
fmul
pop
inc
xchg
ja
lods
movsb
xchg
add
cli
and
es
dec
mov
push
adc
shrb
mov
push
fisttpll
jmp
bound
or
aas
imul
pop
ljmp
pop
addr16
icebp
add
pushf
sub
sbb
mul
and
add
and
stos
xor
inc
popf
nop
mov
sub
or
dec
cli
xchg
xlat
sub
mov
xor
scas
sub
sbb
cmpsl
push
jl
inc
daa
rcl
inc
pop
add
cmpsl
aad
scas
aaa
and
xchg
ds
cmp
iret
int
xor
inc
and
fsubrs
aad
sbb
test
dec
jbe
pop
mov
jge
mov
lret
add
xor
sbb
insb
ret
jns
dec
sub
xor
push
sahf
sub
adc
adc
jge
adc
or
icebp
jb
dec
in
ss
jne
sahf
out
jo
cwtl
fs
jp
cmc
pushf
jg
stos
mov
enter
lahf
pop
or
jecxz
fidivrl
cmpsl
pop
lds
aam
mov
ljmp
insl
jo
push
pusha
in
or
orb
lock
and
enter
cli
jl
mov
xor
imul
mov
ljmp
jb
imull
xchg
jno
sub
shll
shlb
iret
js
mov
push
dec
push
mov
cmpsl
and
fsubr
in
lea
mov
inc
lds
iret
repz
jo
inc
nop
add
imul
test
shl
sahf
outsl
xor
aad
data16
jbe
rclb
inc
push
xlat
inc
stos
lods
data16
lds
inc
mov
jge
sbb
shlb
lock
test
call
repnz
cmp
sub
in
sti
xor
lock
loop
rcrb
lock
push
mov
popa
jge
push
and
leave
mov
add
mov
ffreep
add
adc
arpl
call
insl
inc
xchg
icebp
mov
nop
sbb
ja
arpl
and
les
repnz
xchg
addl
lea
roll
mov
cld
push
push
ret
cli
push
lret
jno
imul
mov
es
orl
mov
mov
cmpsb
dec
int3
lcall
scas
push
push
push
dec
push
int
mov
js
push
shll
add
cmovge
insb
cmp
out
xor
sahf
insl
pop
popa
xor
and
xor
pop
out
iret
push
in
inc
mov
nop
imul
loop
adc
out
xchg
out
fwait
mov
cmpsb
dec
fucomi
and
add
mov
mov
mov
aaa
in
sbb
notb
adc
nop
push
pusha
mov
jge
sbb
insb
js
loop
orb
jle
in
and
mov
push
and
fs
scas
cmp
stc
rcll
push
xchg
addr16
xchg
outsb
icebp
push
mov
imul
pop
or
imul
fldt
repz
mov
sub
jb
push
lods
mov
jle
aas
adc
bnd
jb
push
mov
pop
data16
hlt
jae
adc
orl
fildl
inc
add
sub
dec
push
in
sbb
pushf
and
data16
sahf
decl
cmp
mov
bound
or
sbb
and
cld
sub
jb
cs
in
pop
dec
dec
push
aaa
js
fisttps
ret
pop
pop
push
dec
xchg
inc
call
sahf
ret
push
ljmp
loop
sub
cmc
aaa
push
push
mov
bound
rcrl
dec
pop
add
dec
pop
push
xor
dec
ficoms
mov
jl
pop
cmp
mov
adc
jo
shr
jbe
test
and
sbb
xorl
inc
lods
aam
push
add
daa
inc
add
mov
into
pop
cld
or
sbb
lock
enter
sbb
mov
rclb
add
add
mov
push
out
and
bnd
mov
push
pop
lret
mov
xchg
fstp
pop
inc
sbb
adc
test
xor
insl
mov
cmp
fimuls
inc
mov
pop
and
xor
mov
imul
sbb
mov
cmpb
sub
dec
mov
xchg
mov
addr16
insb
fmull
popf
ret
pop
ss
mov
int
push
js
iret
in
hlt
mov
imul
daa
popl
mov
mov
sarb
jmp
call
in
fdivs
fwait
pop
call
lahf
gs
cmp
mov
and
cmp
repnz
jp
pop
out
out
out
test
mov
push
push
imull
mov
ret
push
xor
inc
pop
inc
in
outsb
lahf
adc
mov
dec
pop
test
inc
movsl
ja
mov
inc
mov
push
sbbb
jecxz
pop
mov
int
ljmp
std
mov
xchg
popf
dec
mov
data16
push
data16
imul
popa
negb
cmc
popf
jo
jnp
dec
shlb
mov
mov
dec
or
sahf
dec
and
aaa
hlt
lret
push
jp
sbb
inc
out
xchg
inc
dec
out
shlb
sub
xchg
out
push
sbb
xor
adc
cmc
ljmp
xor
push
jle
aam
ret
mov
fidivrl
push
adc
sub
cmc
imul
push
scas
cmp
ljmp
pop
jmp
in
loope
lret
insb
adc
xchg
push
sbb
mov
addr16
in
sarl
inc
mov
lods
sbb
int3
loop
dec
and
jecxz
hlt
pop
daa
in
ja
sbb
xchg
sbb
fmuls
add
or
pop
loope
jg
add
adc
mov
hlt
xor
push
cmp
adc
inc
enter
dec
dec
in
or
loop
push
lahf
clc
ss
or
push
aaa
scas
sub
jmp
or
cli
cmp
pop
fnstsw
jge
dec
cmp
scas
push
inc
add
test
mov
push
addr16
inc
add
or
ja
push
xchg
scas
jne
push
pop
or
je
mov
pop
js
pop
or
int3
add
xor
mov
and
jnp
lea
lret
mov
mov
bswap
fdivs
sbb
mov
xchg
push
fs
xor
leave
or
idiv
dec
shlb
mov
lods
and
mov
adc
js
jmp
sar
clc
mov
mov
sar
clc
popf
loop
dec
cmp
sub
test
call
inc
ret
pop
nop
or
or
sahf
xor
cmp
pushf
inc
enter
daa
andb
out
jecxz
mov
sarl
aas
stos
aas
mov
mov
aam
sti
mov
mov
test
jecxz
mov
dec
scas
mov
mov
cmpsl
jge
pop
mov
lods
add
cmp
sub
and
js
sub
mov
pop
iret
stos
jg
jnp
xchg
or
fwait
lds
rol
ss
inc
and
mov
aas
adc
rcrb
or
fldcw
adc
stos
push
cmpsb
sbb
cmp
xor
ss
xor
cmp
cmp
aas
adc
mov
pusha
push
sti
scas
ja
inc
dec
ja
push
pop
out
cld
cwtl
je
inc
pop
das
sahf
je
pop
adc
ja
push
div
popf
roll
sbb
cltd
hlt
dec
loope
mov
add
jge
pop
fwait
andb
sbb
mov
je
or
xorl
hlt
sub
mov
mulb
sbb
jno
xchg
jo
dec
mov
lret
leave
mov
sbb
pusha
jmp
call
int3
cmpsb
dec
xor
inc
mov
cmp
aaa
mov
jbe
sbbl
mov
jge
cmpb
mov
icebp
xchg
clc
push
imul
cmp
loop
adc
xor
lret
lock
and
mov
scas
cmp
push
sub
jns
mov
add
jg
arpl
inc
stos
ficompl
add
and
adc
dec
lds
je
push
jle
in
data16
out
out
pop
add
xchg
clc
movsb
fildll
sub
jnp
popa
xor
cltd
lods
xchg
mov
lret
orb
cmpsl
inc
push
mov
sbb
mov
jmp
lods
mov
call
aaa
cmp
mov
icebp
xchg
ret
loopne
pop
cmpsb
sub
mov
pushf
mov
gs
je
and
cmp
cmc
dec
add
outsb
inc
sbb
fists
cmp
mov
xchg
jmp
push
int3
adc
and
bnd
add
mov
jmp
mov
into
jp
in
rorl
xchg
xor
adc
adc
and
pop
aas
lcall
das
adcb
adc
cld
ja
int3
insb
prefetch
xor
and
jge
sarl
int
cld
adc
xchg
lahf
enter
push
pop
notb
pop
sub
jns
fwait
jne
into
lret
cltd
sub
jl
movsb
jmp
xor
and
add
int
inc
dec
pop
loop
sub
mov
jmp
dec
test
mov
jge
rcl
add
jnp
idiv
adc
loop
das
xorb
sbb
pusha
scas
mov
xorb
xchg
cld
jbe
jmp
mov
or
outsb
jnp
xchg
sbb
push
cmp
jl
ret
out
cs
aaa
inc
mov
out
cmovae
mov
sbb
ret
sbb
fisubl
popa
fisubl
sbb
push
jcxz
imul
jno
std
or
in
in
std
fstpl
nop
xchg
jns
stos
test
notb
sahf
daa
gs
or
inc
rcl
ret
stc
adc
pop
icebp
sbb
cwtl
rcll
dec
mov
int
lds
push
testl
lret
repz
mov
push
sbb
mov
add
mov
xchg
xchg
inc
arpl
xor
mov
or
repnz
mov
mov
sarl
sbb
sbb
movsb
mov
and
sbb
aad
pushf
fisubs
jae
loope
stos
xor
mov
xchg
dec
in
out
roll
fwait
pop
jmp
push
sbb
mov
frstor
jns
pop
fldcw
and
ljmp
test
lods
xor
dec
mul
ja
das
orl
das
jp
mov
jne
test
ret
push
xchg
movsb
call
push
inc
cld
orb
add
mov
popf
jg
sbb
mov
test
xor
and
pop
das
sub
sbbl
ss
xor
cmp
js
sub
in
inc
out
jg
jg
mov
inc
pop
stc
add
mov
push
in
pop
add
mov
mov
jae
cmp
adc
and
mov
das
pop
lds
pop
push
mov
mov
test
cld
adc
adc
insb
adc
mov
push
out
cmpb
lods
and
clc
adc
mov
and
and
bound
push
fidivl
push
add
pop
fwait
mov
movsl
and
sti
push
iret
icebp
cwtl
shl
aad
xchg
inc
mov
push
stc
out
rcrl
in
or
out
or
jno
cld
inc
xlat
pop
mov
movsb
push
cmp
outsl
hlt
gs
inc
scas
pop
pop
les
popf
xchg
in
hlt
int
add
fwait
xchg
jecxz
mov
inc
mov
adc
imul
dec
push
xlat
inc
rcrb
sub
nop
repnz
dec
push
sub
ds
dec
outsb
sbb
cli
dec
jp
pushf
mov
xor
pop
aad
and
aad
sbb
and
jecxz
xchg
mov
pop
mov
push
and
jne
sbb
mov
xchg
add
test
cltd
cmp
inc
xor
xor
add
mov
cmpsl
sbb
sub
pusha
xchg
repz
cwtl
shrl
testl
cmp
cmp
int
or
and
das
es
int
jle
cmp
add
sbb
mov
xchg
fwait
rolb
call
scas
push
pop
cmp
rol
leave
inc
jmp
dec
shll
xor
shr
push
and
mov
bound
cwtl
pop
pop
cli
push
fstps
mov
sub
loopne
xor
mov
ficoms
addb
je
cmp
cltd
fistpl
pop
lods
xchg
cltd
stc
cmp
inc
popa
xchg
and
insb
pushf
pop
outsl
and
xchg
mov
aam
in
cmpsl
stc
insb
cmpsb
fdivs
pop
inc
adcl
test
jne
lahf
ljmp
es
pop
inc
jmp
subb
fmuls
jno
add
pop
fstps
and
cwtl
test
mov
aad
decl
call
push
mov
xchg
pop
xchg
jbe
pop
mov
mov
notl
mov
loope
leave
stos
bound
subl
je
inc
sbb
int3
push
xchg
jp
adc
mov
nop
sub
pop
push
jb
and
scas
adc
and
push
inc
sbb
mov
mov
push
daa
lcall
lcall
sahf
je
daa
push
test
mov
inc
push
add
stc
inc
aad
mov
mov
jg
das
mov
xor
sub
pusha
xor
loopew
shr
push
lahf
mov
call
les
adc
and
aad
out
les
add
xor
push
inc
push
stos
jmp
add
aam
cmp
jmp
leave
sbb
dec
lcall
inc
mov
hlt
outsb
fdivrl
xor
adc
sbb
mov
les
ljmp
pop
arpl
cmpb
test
adc
out
fucom
scas
mov
inc
sbb
pop
add
adc
imul
test
lock
jbe
dec
fwait
mov
lcall
fnstenv
inc
pusha
loopne
jnp
je
sbb
sub
cli
push
xchg
and
dec
mov
je
cltd
imul
ss
ss
inc
repnz
mov
into
lock
enter
enter
sbb
sarl
mov
hlt
jg
and
push
pop
pop
push
cli
lcall
add
movsl
mov
sub
ret
out
clc
push
orl
cs
sbb
sbb
dec
mov
and
push
test
lcall
idivl
sbb
jp
daa
xor
loope
push
and
and
mov
cmc
daa
push
pop
add
in
insb
pop
addr16
cmpsb
add
adcl
add
mov
movsb
pop
je
shll
mov
stos
or
jl
les
stos
dec
mov
cmpsb
inc
pop
push
imul
lret
popf
enter
dec
pop
push
stos
dec
arpl
repz
mov
cmp
xchg
pop
ja
es
icebp
mov
pop
in
xor
jbe
ss
pop
leave
xor
inc
mov
lahf
pop
scas
js
and
sub
mov
and
inc
divb
xchg
cld
add
mov
lea
cmp
mov
mull
sti
gs
fcompl
aam
pop
mov
cwtl
mov
cmp
inc
mov
dec
sub
inc
ret
aad
push
std
cld
nop
pushf
scas
xor
mov
fcmove
jb
stos
in
out
test
mov
xor
add
push
cmpb
cmp
sbb
cmpsl
and
imulb
ret
inc
cmpsb
das
shrl
inc
adc
add
or
call
pop
in
test
adc
mov
xorl
pop
pop
aam
mov
fadd
mov
mov
inc
shll
mulb
jbe
mov
xchg
pop
inc
dec
fisttpll
push
cmp
jp
orl
les
xchg
fs
insl
hlt
push
mov
icebp
inc
bound
pop
fistl
daa
add
mov
popf
fst
sar
mov
pushf
mov
lods
push
ss
dec
jno
aaa
or
xchg
dec
flds
push
stos
mov
rcrb
xchg
mov
pop
ret
adc
stc
add
lret
iret
jne
daa
adc
jecxz
cmp
shl
pop
jns
mov
dec
jmp
insl
lretw
inc
popf
add
sub
js
pop
cli
ja
mov
push
jae
scas
sub
xchg
push
in
and
xor
sub
mov
mov
inc
add
insb
xchg
pop
push
repz
repz
in
pop
std
xor
sub
or
cmp
push
loop
and
add
fs
rcr
lahf
pop
jne
mov
xchg
pop
jb
test
add
les
cmp
in
pop
mov
pop
dec
sti
lock
sub
shll
lods
addr16
pop
push
rclb
xchg
mov
jne
insl
jmp
mov
jp
stos
sahf
popl
xchg
sbb
xchg
mov
dec
xchg
movl
sbb
enter
mov
out
xlat
mov
sub
stc
push
push
jge
addl
inc
and
dec
jg,pt
pop
shlb
shll
sbb
xor
stos
jne
gs
imul
std
sub
mov
adc
insl
adc
xchg
mov
loope
push
addl
fimull
mov
shl
cwtl
push
sbb
sbbb
cs
inc
out
push
adc
fstpt
push
pop
xchg
clc
sbb
xchg
and
imul
adc
adc
pop
sbb
ficomps
fsubp
mov
sub
sbb
lcall
inc
adc
clc
lret
dec
jmp
inc
or
sarl
out
popa
repnz
mov
scas
sub
lahf
icebp
add
inc
pop
mov
and
sub
lods
push
sahf
clc
xchg
sar
mov
jmp
jne
popf
es
mov
sbb
xor
clc
sbb
ret
into
pop
xor
mov
insb
sub
mov
add
dec
push
or
nop
push
push
iret
mov
scas
mov
rcrl
faddl
lea
adc
mov
mov
cwtl
inc
xorb
imul
pop
and
cli
jae
xor
cmp
pop
je
je
enter
add
fwait
or
push
push
jae
push
incl
xchg
lahf
icebp
and
lods
push
aaa
inc
xchg
daa
mov
xor
pinsrw
mov
cli
sub
ret
hlt
and
inc
add
cmpsb
mov
fdiv
mov
mov
sbb
ficoms
and
movsb
add
fisttps
rcrl
mov
jmp
rclb
int3
ret
fildl
mov
setns
xor
test
cltd
mov
cld
ss
push
test
loop
sarb
les
in
icebp
sbb
hlt
cmp
je
mov
sub
xor
dec
aad
pop
xor
xor
and
mov
mov
pop
ds
push
mov
mov
fwait
xchg
pop
imul
pusha
pop
mulb
pop
rcrb
mov
or
cmpsb
inc
mov
sbbb
aad
inc
out
dec
cwtl
push
mov
jae
popf
cmp
push
push
or
outsb
mov
jae
mov
adc
popf
sub
mov
sub
jg
iret
daa
fcmovnb
mov
or
repz
fisubrl
xlat
inc
test
jo
add
adc
sbb
data16
es
cmpl
sahf
mov
inc
testb
movsl
push
dec
call
mov
sbbb
gs
outsl
into
jo
pop
inc
into
xchg
and
bound
jbe
outsl
xor
jl
loope
aas
lds
ret
aam
in
stos
sti
mov
and
icebp
pop
mov
imul
in
imul
cmp
add
cli
mov
cmp
xchg
movsb
lods
xchg
cmovb
push
fiadds
or
mov
ljmp
in
push
jns
pop
cltd
push
sub
push
shr
in
cmp
pop
daa
lods
ss
cmp
cmpsb
das
aad
lods
mov
sbb
lds
sub
call
adc
out
js
jno
ret
mov
out
push
es
dec
jo
jmp
mull
fistl
pop
fistl
clc
dec
push
das
pushf
cmpsb
sub
cmpsb
push
xchg
outsl
jbe
sub
loope
stos
arpl
negb
inc
adc
push
movsl
aas
repnz
ffree
xor
outsb
add
xchg
pop
movsb
in
mov
mov
mov
faddl
inc
scas
or
pop
pushf
dec
jmp
push
xor
mov
leave
outsb
xchg
mov
call
into
psraw
push
aaa
ja
sub
mov
sub
cmp
rorb
inc
dec
rclb
scas
les
cmp
jbe
inc
cmp
adc
cs
imul
scas
fistps
jo
fists
lods
enter
push
sbb
shrl
cltd
or
jge
icebp
insb
pop
xchg
in
fcomps
loop
aas
pop
xchg
push
js
inc
fisttps
adc
xor
mov
sub
mov
insl
das
cs
push
nop
invd
or
and
mov
ja
arpl
movsl
add
lods
shrb
pop
xchg
outsb
mov
or
jbe
popf
sub
test
into
xor
bound
pop
sub
cmc
mov
cmp
pop
in
xchg
mov
jp
xchg
jb
adc
or
std
and
push
out
and
popa
stc
and
jb
xor
es
and
push
inc
adc
scas
dec
ja
movsb
subl
or
jnp
in
xchg
in
pop
push
push
dec
orb
inc
sti
test
into
lods
cld
dec
add
or
jge
push
daa
mov
mov
cli
pop
mov
pop
xchg
notb
lods
int
inc
mov
in
add
in
cmp
scas
jbe
cmp
ljmp
call
sub
jmp
gs
sub
and
mov
sub
mov
or
xchg
add
jl
stc
insb
int3
loop
shr
cmp
imul
insb
addr16
leave
in
ja
sahf
dec
lods
jecxz
sub
loop
test
or
and
in
fldenv
pop
push
xchg
dec
ljmp
loop
xchg
pushf
jp
push
dec
data16
mov
cld
xor
cmp
call
pop
xchg
cmp
out
push
bound
shl
jecxz
push
xor
add
jge
dec
sarl
cmp
mov
pusha
lcall
loopne
pop
sub
into
inc
mov
sub
xchg
dec
imul
icebp
pop
lods
lret
ljmp
or
shl
mov
shll
inc
xor
dec
idivl
add
and
jne
xchg
and
pop
ljmp
xchg
jecxz
push
mov
mov
aam
mov
and
mov
jl
sbb
inc
push
fnstenv
mov
into
pop
push
fst
dec
or
xchg
mov
push
mov
sbb
bound
iret
cltd
arpl
xor
jnp
cmp
xchg
adc
or
test
add
mov
test
ja
lock
cli
pop
mov
and
xor
xor
mov
push
mov
fs
mov
mov
push
sub
outsb
jo
sub
lahf
in
jno
adc
in
sub
and
lcall
fbld
add
mov
out
shrb
into
sub
jb
ret
mov
hlt
adc
sahf
push
add
stos
in
pop
out
jg
mov
and
ret
sbb
dec
push
ret
or
sbb
sbb
mov
push
mov
test
xor
jecxz
xlat
lds
cmc
mov
mov
mov
pop
cmp
movsb
test
push
ftst
push
mov
in
and
sub
loopne
dec
xor
pop
nopl
push
jmp
aaa
out
sub
xchg
sbb
adc
or
jp
pusha
push
vpminsw
sub
fcmovnu
hlt
jg
shr
xchg
int3
idivb
out
repz
fcoml
jnp
dec
fsub
xchg
es
lret
fcmovnb
data16
mov
xor
pop
pushf
outsl
test
jno
mov
or
adc
fwait
dec
popa
xchg
mov
xchg
cli
loop
mov
subb
sbb
pop
int3
push
in
lret
sub
xchg
cwtl
cmp
dec
xorb
mov
pop
and
fstl
adc
jle
nop
cltd
jne
xchg
xchg
es
mov
xchg
jnp
nop
stos
roll
cmp
xchg
dec
in
jecxz
xor
fisubs
pusha
mov
cmp
insb
shll
ret
stos
dec
dec
and
inc
and
bound
bswap
dec
fistps
scas
push
pop
xchg
mov
iret
ss
jecxz
outsl
cmc
adc
mov
inc
pop
repnz
dec
nop
pop
out
and
test
mov
stos
test
xor
xchg
das
xchg
leave
mov
push
jmp
xchg
mov
jg
aad
adc
mov
icebp
jne
aas
add
insl
int3
pop
sbb
adc
mov
jecxz
test
cmp
xlat
jge
incb
sub
ja
push
jne
dec
cmp
ss
shlb
int3
jp
leave
cmc
test
push
xor
push
into
xor
das
repz
mov
mov
sbb
cmp
jg
sti
sbb
int
pop
mov
dec
out
cmp
out
lock
xchg
pusha
pop
arpl
fucomi
clc
loop
imul
mov
sub
ljmp
pop
outsb
and
out
mov
out
test
outsl
aad
jo
push
adc
jg
push
jmp
cld
out
repnz
fists
cmc
imul
sub
inc
dec
cmc
xor
mov
fdivp
movsl
sub
je
je
das
pop
and
jb
xor
or
mov
clc
add
adc
fcompl
sbb
inc
xor
inc
dec
fidivrl
lods
test
sbb
jecxz
xor
loop
test
fisttps
loope
loop
mov
enter
jo
mov
xor
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
sbb
mov
out
inc
popa
bound
pop
bound
xchg
pop
xchg
leave
fsubr
mov
clc
jns
xchg
cmp
xchg
push
push
mov
ljmp
sarl
push
aad
popa
sbb
js
xchg
xor
sbb
cmp
sub
mov
bound
sub
sahf
cmpsl
push
and
adcl
sbb
add
and
shlb
dec
push
pop
jmp
cmp
push
push
dec
dec
fdivs
inc
sub
ja
addr16
pop
lea
mov
mov
fdivrl
mov
add
imul
out
hlt
mov
mov
and
out
iret
cmpsb
js
js
mov
pusha
jl
jae
hlt
popa
gs
jns
inc
mov
pop
inc
mov
mov
or
lcall
movsb
adcb
mov
mov
mov
testb
lods
cmpsl
movsl
lods
jge
add
ret
adc
mov
lret
sub
mov
int3
xor
jmp
sub
xchg
push
cwtl
dec
pop
jno
popf
add
push
push
shrl
je
xchg
je
push
or
or
cmpsb
outsb
sub
iret
rorb
insb
cmp
push
mov
add
jle
jl
aas
mov
jmp
nop
sbb
idivl
adc
popa
aaa
dec
cld
xorb
push
dec
xchg
jo
xchg
gs
and
adc
inc
out
cmpsb
orb
lock
ja
jg
mov
xchg
insb
leave
jl
aad
stc
lods
mov
dec
sahf
sub
lods
out
lret
orb
cmp
xor
fldt
sti
test
scas
stc
mov
mov
pop
lock
push
int3
mov
je
push
and
rcrl
add
pop
loope
lods
mov
mov
dec
jo,pn
dec
movsl
mov
dec
cltd
pusha
cmp
lods
dec
fs
push
jbe
adc
inc
jno
arpl
loopne
mov
es
popa
cmp
test
jno
jg
out
test
and
jns
xor
into
int
xchg
scas
fistps
cld
sub
fsubs
int3
sub
fstl
subb
or
mov
xlat
int3
pop
xchg
adc
pop
test
rorl
es
sbb
imul
sub
lahf
cmp
imul
lcall
imul
inc
mov
cld
xor
test
dec
je
fstp
popl
xchg
pop
xchg
or
stos
fsubp
xchg
xchg
pop
pop
cmpsb
mov
popf
cltd
and
or
pop
sub
cli
andl
out
xor
push
rclb
sub
out
aad
or
dec
xchg
xor
repz
dec
push
dec
je
shlb
or
jnp
enter
lret
repz
sbb
add
stc
ds
mov
repz
outsl
sbb
jno
fisubl
fstpl
cmc
clc
movsl
adc
fld1
mov
dec
adc
push
mov
push
punpcklwd
and
hlt
js
stc
adc
push
mov
mov
adc
stc
adc
in
inc
stos
lret
cmpsl
inc
das
test
je
sub
push
adc
out
dec
pop
fiaddl
mov
test
inc
sbb
lcall
sbb
enter
sbb
and
lods
mov
jne
jg
lock
subb
mov
arpl
scas
and
push
inc
dec
sti
jae
jne
add
inc
pop
in
xchg
repnz
cmpsb
xchg
push
int3
setne
mov
xchg
jb
inc
mov
mov
aas
je
dec
cmp
ljmp
mov
xchg
gs
mov
aad
mov
fwait
leave
jle
pop
aaa
jnp
push
jne
or
test
xchg
rcll
je
mov
insl
repz
mov
je
jno
int
ucomiss
mov
pop
jne
les
cmpsb
mov
roll
jmp
aas
sbb
pushl
rolb
lret
push
repz
dec
adc
lock
pop
mov
cmp
add
scas
pushf
pop
pop
out
ja
mov
adc
into
cmovb
jecxz
xchg
xchg
jg
imul
jg
pushf
outsl
jns
test
pop
mov
jmp
cwtl
cmpsl
cmp
and
in
pop
arpl
inc
push
jp
dec
lds
lods
shrl
sti
in
cmp
ficoml
sbb
test
sub
and
ret
lods
es
xor
xor
shrl
adc
push
sbb
cltd
or
lods
pushf
test
xchg
stc
bound
loope
scas
cltd
sub
jg
push
imul
push
popl
pop
jne
and
cmp
mov
mov
xchg
xchg
pushf
pop
es
jecxz
mov
pop
mov
les
movsb
out
sub
or
push
add
aas
inc
lea
dec
mov
sbb
lods
jmp
inc
out
mov
xchg
ret
mov
inc
inc
or
push
pop
insl
mov
pop
sbb
shl
and
sub
add
shl
pop
push
mov
dec
add
movsb
shl
popf
mov
out
adc
adc
loope
adc
gs
jb
insb
or
xchg
loope
pop
lods
in
push
into
adc
mov
aad
int
mov
daa
les
xchg
movsb
pushf
cmp
cmp
aas
cld
lret
push
ret
pop
cmpsb
mov
out
call
jae
sbb
sbb
cmc
aad
mov
fucom
ja
lcall
icebp
fimuls
in
movsb
mov
inc
inc
nop
jne
fdivrl
inc
mov
cmc
imul
push
fs
inc
lahf
xchg
pop
pushf
mov
sbb
cmovno
sub
mov
jne
fimull
sbbb
sub
sahf
mov
notl
add
sbb
int3
test
aaa
cmpb
pop
jbe
jbe
add
cmp
or
sahf
xchg
test
fdivrs
movb
sub
push
jle
add
movb
or
arpl
add
xor
sbb
jl
andb
push
dec
mov
mov
mov
ljmp
repnz
shll
fisttpl
call
sub
push
in
mov
and
pop
imul
adc
cs
repnz
push
sub
jmp
add
push
cmp
mov
cs
pusha
xchg
imul
ss
repz
add
push
cmp
dec
int3
or
mov
rorb
mov
jmp
jecxz
add
pop
stc
fldt
fiadds
data16
jnp
loopne
lcall
cld
ss
in
cmc
std
inc
sub
subb
push
fs
dec
dec
ret
mov
outsl
insl
jmp
inc
les
clc
mov
add
mov
pop
push
mov
sub
mov
jge
mov
cmpl
xchg
cmc
dec
jl
insl
or
jo
call
je
push
inc
push
mov
cmp
insl
inc
cld
sbb
imul
scas
and
aaa
in
fldt
test
test
stc
aad
pop
dec
mov
mov
or
jmp
jg
jnp
xchg
inc
mov
mov
mov
jle
int3
and
in
int
xchg
aas
sub
lret
mov
mov
xchg
push
scas
mov
mov
sbb
cmp
nop
std
add
call
lds
mov
call
xchg
mov
inc
pop
in
mov
inc
mov
mov
dec
push
data16
mov
mov
pop
xor
fimuls
push
adc
scas
sub
fldcw
outsb
jnp
or
lds
in
mov
outsb
xor
inc
push
icebp
and
fiaddl
push
insb
in
add
sub
mov
cli
jae
xchg
loop
mov
and
dec
int3
fs
inc
mov
out
in
mov
cld
lods
lret
jecxz
lret
mov
bound
ror
testl
aad
int
jns
inc
scas
xchg
mov
and
js
sbb
mov
and
lock
push
sbb
pop
push
xor
cli
aas
gs
fistl
xchg
xchg
dec
bound
add
aam
cmp
add
sahf
in
cmp
pushf
sub
in
mov
xchg
adc
dec
cmpb
movsb
mov
push
xchg
sahf
add
dec
sti
fisttps
pop
pop
ss
loopne
dec
jbe
and
ret
in
pop
test
cmp
mov
mov
lahf
jmp
sti
rorb
jecxz
cltd
push
jae
bound
fwait
adc
outsl
repz
pop
dec
add
fcmovu
popf
gs
sub
out
lods
xor
iret
daa
xor
popa
push
pop
add
adc
cmp
xor
out
imull
lret
pop
sub
jno
push
pop
inc
addl
fdiv
imul
inc
mov
xchg
sub
sbb
and
fcmovbe
sahf
adc
adc
shl
mov
sub
test
decb
pop
notl
mov
xchg
pushl
in
and
int3
gs
mov
out
pop
pop
fadds
ja
sub
or
sub
test
sbb
mov
stc
jnp
pusha
dec
mov
loop
or
adc
or
sbb
push
stos
cmp
rorl
xchg
in
divl
mov
inc
dec
loope
and
mov
in
movsl
mov
lahf
aam
jp
lods
cmp
popa
adc
into
or
xor
addr16
lock
lods
icebp
ss
cmpl
add
sub
xchg
xchg
shlb
mov
ret
or
or
push
mov
mov
stos
lds
pop
imul
sub
test
out
iret
sub
pop
xchg
int3
add
xor
pop
cmpl
push
and
dec
or
stos
jle
xchg
mov
xchg
loop
insl
mov
decb
pop
pop
xchg
or
out
mov
jge
push
mov
jnp
inc
sahf
inc
jo
insl
mov
adc
push
rclb
je
and
sbb
mov
cmp
xor
sbb
ja
mov
ja
popf
sbb
mov
imul
ljmp
into
enter
mov
pop
xor
das
mov
inc
cmpsl
shr
fmull
bswap
adc
fstps
mov
test
aas
in
dec
pop
hlt
fiadds
insb
into
idiv
xchg
into
push
in
js
xor
fisttps
mov
in
daa
push
cltd
orl
shrl
fldl
xchg
repz
pop
jp
cld
scas
in
ficoms
ja
movl
sub
mov
pusha
fsubs
imul
jecxz
cmp
enter
push
mov
mov
push
sbb
sub
aad
mov
pop
and
jnp
js
jl
lcall
ja
mov
and
pop
cmpsb
es
divb
mov
inc
sbb
mov
xchg
dec
js
icebp
daa
cmp
mov
and
das
fldl
push
mov
popa
cmp
hlt
sbb
mov
into
and
or
mov
mov
sbb
adc
addr16
sbb
inc
scas
mov
mov
pop
out
mov
cwtl
push
mov
inc
cmp
cmp
outsb
xchg
push
std
in
ds
and
stos
cmp
sub
sbb
loopne
cmp
into
push
jae
push
fidivrl
sarl
push
lds
cmp
out
rorl
adc
and
int3
and
pop
jg
sbb
adc
push
push
sti
push
dec
ss
dec
sub
push
sarl
pop
mov
or
int3
std
or
mov
jno
cwtl
imul
or
ljmp
push
push
imul
cmp
mov
inc
cmpsb
add
in
xlat
iret
mov
xchg
push
testb
sub
adc
sub
add
xchg
push
pop
pop
lcall
xor
ffreep
cli
cmp
shrb
jl
cld
push
loope
stos
aas
daa
mull
pop
jnp
mov
jecxz
lods
cs
lock
dec
fwait
testb
fwait
cwtl
mov
mov
add
mov
shrl
imul
loop
sarb
in
out
fstl
aaa
insb
sbb
xor
fs
call
sub
inc
stos
adc
out
decl
adc
sub
xchg
add
lret
lods
bound
scas
push
cmp
push
shrl
lret
dec
or
mov
xchg
adc
scas
sbb
mov
stc
repz
fmuls
ds
loopne
ljmp
clc
dec
test
leave
mov
imul
mov
xchg
subl
add
in
flds
jmp
jl
pop
cmc
insb
rdtsc
leave
sub
clc
mov
aad
pusha
xchg
push
cmp
adc
sub
icebp
loope
push
adc
mov
fidivl
cld
mov
dec
imul
push
pop
pop
js
aaa
sahf
mov
addr16
cmp
daa
loope
inc
daa
xor
xorl
push
leave
adc
loopne
cmp
jbe
fcmovbe
jbe
repnz
insb
jl
dec
sbb
in
subl
push
cmp
mov
or
fdiv
dec
call
pushl
ret
mov
pop
scas
out
push
imulb
nop
mov
or
adc
fisubrl
lcall
in
xchg
cmp
jmp
stc
shl
xchg
mov
mov
push
in
nop
fdivr
ficoml
and
pop
imulb
into
leave
je
jl
pop
mov
rorb
mov
cmp
xor
mov
iret
push
popa
int3
lret
insb
add
adc
mov
xor
and
scas
and
repz
test
ret
sbb
push
sbb
cmp
jbe
scas
push
mov
in
ret
popa
mov
cli
lea
push
adc
mov
xor
insb
out
vcomisd
cltd
xor
out
test
xchg
xchg
cmp
jmp
in
inc
aaa
fs
shrb
stos
in
les
test
xchg
mov
or
bound
jbe
add
mov
idivl
pop
loope
mov
subl
pushf
test
ss
mov
lods
gs
xor
in
cld
cltd
or
mov
inc
rcr
xor
jecxz
sub
incb
in
xchg
adc
sub
pop
cmp
xlat
lahf
xchg
into
ret
jbe
xchg
pop
pop
lcall
or
imul
xchg
lock
repnz
xchg
iret
xchg
jmp
xchg
jae
and
imul
inc
inc
stos
dec
popf
sbb
shrb
cli
mov
fldenv
inc
leave
mov
mov
inc
inc
adc
movsl
inc
orb
lea
fidivrs
mov
test
pop
mov
push
shll
adc
imul
mov
pop
mov
rcrb
or
insb
push
adc
je
enter
and
jne
dec
leave
push
mov
daa
test
rorl
inc
flds
push
test
xor
gs
jbe
cwtl
sti
jle
pop
pusha
inc
shll
cmpsb
push
pop
cmp
int3
inc
sub
aaa
addr16
fbstp
pop
xchg
pop
push
fidivl
mov
fwait
aas
bnd
adc
adc
in
out
leave
jl
mov
jo
lock
out
repnz
add
fbstp
pushf
bnd
int
jle
sub
push
cmc
movsb
sub
mov
lret
or
sbb
imul
test
push
or
jb
cmp
out
mov
clc
bound
inc
pop
pop
ja
mov
cmp
cltd
jnp
movsb
stos
mov
in
je
mov
les
and
aaa
xchg
and
push
scas
sub
mov
push
mov
daa
sbb
push
adc
sbb
pop
lods
add
xchg
push
xor
sub
loopne
cmp
cmp
sub
inc
fwait
outsb
jbe
imul
jg
add
les
shrl
sarb
adcb
es
pop
sub
sbb
bound
or
addl
shrl
mov
aam
mov
mov
lret
or
pop
cmp
movsl
sub
in
ds
xchg
jno
and
decl
fsubl
loopne
clc
insb
cmp
sbb
inc
pushf
mov
mov
lods
fnstsw
inc
shrb
push
xchg
add
loope
leave
popf
test
mov
std
mov
and
les
insl
sarb
add
cmp
push
push
push
pusha
adc
pop
js
call
je
xor
jbe
idivl
jb
add
pop
add
add
fiaddl
or
enter
mov
jg
cltd
stos
mov
inc
fs
data16
dec
aaa
cmp
iret
shl
dec
push
int3
test
add
push
jmp
nop
jp
cs
xchg
aas
repnz
adc
mov
mov
xchg
testb
dec
bound
stos
fistpll
add
out
aaa
mov
adc
push
dec
cld
pop
jnp
sub
clc
int3
push
jno
mov
push
mov
dec
jae
mov
cmp
pop
mov
js
inc
adc
xor
sbb
or
sbb
inc
jl
add
cli
rcl
popa
sbb
ja
lret
sbb
daa
test
xor
pushf
daa
sub
push
cmc
mov
std
adc
mov
lcall
sbb
pop
push
lret
dec
cltd
xchg
cwtl
pop
sub
mov
push
test
mov
inc
pop
jo
test
sbb
pop
dec
das
sbb
cmp
jae
mov
push
stos
fidivl
pop
call
dec
push
fwait
sbb
aad
cld
pushl
in
icebp
adcb
leave
inc
xchg
imul
xor
dec
aam
vmovlpd
mov
lfs
in
cs
out
divl
pop
in
adc
dec
jmp
shl
lods
add
inc
fsin
mov
movsb
wrmsr
jge
or
xor
pop
jae
pushf
rorl
dec
pop
fadd
cmpsl
mov
xor
lods
inc
push
inc
or
inc
aad
cmp
rorb
mov
iret
mov
popa
adc
sbb
pop
jo
mov
lea
ret
add
dec
iret
cwtl
xchg
popa
cmp
outsb
imull
sbb
add
pop
cmc
movsl
jle
mov
mov
jge
pop
mov
add
add
inc
or
xchg
sbb
je
jbe
push
xchg
out
stos
inc
push
mov
icebp
xchg
sti
xor
dec
xchg
pop
cmp
sbb
btc
mov
loopne
fs
repz
or
aam
loop
push
add
lds
dec
insb
imul
mov
dec
adc
jmp
inc
sysret
mov
ret
cmc
repnz
mov
rcr
mov
adc
in
pop
sbb
ja
or
sarl
sarb
outsl
pusha
adc
lds
test
ficoml
sbb
mov
aam
jno
bound
cld
les
and
andb
jp
push
xchg
and
test
cmp
scas
fnsave
sbb
mov
mov
lret
xchg
clc
sub
xchg
adc
cld
outsb
xor
inc
sahf
in
pop
lods
inc
add
fsubs
mov
cltd
xchg
or
mov
cmpsl
mov
xchg
popa
loope
stos
pop
sbb
sub
push
cmp
cwtl
mov
inc
jnp
cmpsl
loop
ret
mov
push
movsl
shl
inc
out
push
and
inc
in
dec
lock
scas
rcl
dec
and
mov
dec
jae
xor
lock
cmc
ds
adcb
sbb
jmp
insb
test
bound
lea
arpl
push
cli
out
cmp
xchg
mov
mov
rorl
xor
push
fnstsw
lret
lods
xlat
sub
mov
lret
push
in
pushf
hlt
xchg
lock
ss
outsb
mov
mov
nop
sub
jg
popf
divb
out
mov
shlb
in
pusha
lcall
xor
pusha
sbb
or
fsubr
lcall
cmpl
jne
loope
in
inc
shll
addr16
cmp
push
jmp
bnd
inc
repnz
pop
aam
and
or
int3
cs
xchg
ss
lret
cwtl
sbb
scas
loope
pop
popa
lahf
mov
jecxz
aaa
adc
and
leave
or
mov
jno
xor
jne
adc
insb
sub
adc
pop
into
pusha
aas
pop
leave
cltd
leave
ret
lret
mov
cmp
mov
imul
daa
mov
cmp
rcl
push
cmp
pop
js
divl
or
aad
xchg
movsb
push
sub
adc
jmp
imul
dec
inc
jo
cmp
push
test
push
cmp
mov
repz
fmul
and
notb
xlat
int
int
pop
cmp
test
sahf
scas
and
scas
mov
cmp
xor
cmpsl
orb
or
mov
enter
stc
lret
jbe
push
hlt
lret
sbb
icebp
inc
cli
or
mov
inc
jecxz
jmp
or
inc
add
aad
cli
ss
and
pop
add
dec
or
push
pushf
repz
jns
push
mov
jo
fidivl
cmp
lock
or
nop
rcrl
lret
int
xchg
repz
pop
rclb
dec
and
cmp
xor
dec
push
cmpsb
xchg
ret
and
push
into
pop
inc
mov
xlat
inc
pop
ljmp
dec
mov
loopne
jne
mov
add
cmp
adc
adcb
adc
push
push
mov
adc
adc
mov
loop
pop
and
shl
sbb
inc
std
xchg
adc
push
scas
xlat
cmp
lahf
push
mov
adc
pop
fcmovnb
mov
mov
xor
jge
xchg
jg
rcrb
test
jns
mov
jb
rcll
nop
data16
hlt
repnz
cmp
stos
test
aas
mov
mov
mov
jns
popa
test
mov
cli
out
jo
mov
rorb
lret
ljmp
add
cmp
out
nop
mov
mov
dec
adc
fs
add
jne
adc
push
xchg
dec
icebp
int3
sub
das
outsl
insl
or
inc
jo
fwait
aaa
enter
sbb
push
mov
xor
jle
mov
push
and
fistl
sbb
pop
cli
daa
iret
icebp
stos
nop
imul
xchg
lods
inc
pushf
jp
jno
xor
xor
cmp
jmp
push
adcl
inc
mov
sub
and
leave
pop
fwait
enter
jl
jo
outsb
mov
in
jmp
xchg
imull
dec
jl
push
fisttps
cmp
or
and
cld
and
out
divl
pop
xchg
std
outsb
push
sbb
fsubl
nop
dec
faddl
push
in
add
gs
pop
and
loop
pop
addb
sub
pop
inc
cwtl
mov
insl
icebp
cmc
cs
ret
cmpsl
xlat
scas
pusha
fldcw
fwait
adc
or
cmpsb
inc
cmp
pop
dec
aam
pusha
push
repz
clc
mov
pop
mov
push
ret
int3
jg
loopne
push
mov
mov
jmp
jge
call
jnp
adc
mov
and
fwait
inc
es
cmp
mov
sbb
aas
cmp
add
xchg
aam
push
in
sbb
xor
jo
mov
out
jnp
dec
mov
inc
inc
jl
testl
cmp
pop
cmp
ds
add
xchg
dec
pop
sub
les
mov
or
sub
scas
mov
mov
sti
xchg
mov
pushf
or
andl
cli
out
aam
ffreep
dec
adc
scas
cmp
in
sti
xor
mov
xchg
jns
lods
rcrb
test
and
mov
cmp
flds
repnz
xchg
lret
lds
mov
ds
cmp
xor
lock
jo
aaa
cltd
pop
sub
inc
mov
mov
dec
scas
scas
sbb
adc
icebp
loopne
sbb
loope
mov
nop
xlat
aam
rorl
xchg
mov
dec
xchg
mov
dec
and
dec
mov
sbb
mov
jno
inc
lock
scas
stos
xor
mov
fwait
ret
inc
dec
add
or
push
adc
test
test
ds
popf
mov
dec
icebp
dec
enter
inc
sub
mov
and
jle
cmp
call
fistpll
or
inc
xchg
js
mov
pop
mov
jne
jno
cli
dec
adc
test
push
adc
push
movsl
xchg
pop
hlt
pusha
fisubl
movsb
xchg
and
sub
shl
mov
fnstenv
ds
add
cwtl
mov
xor
rorb
ret
jge
loopne
push
in
pop
pop
sub
jmp
lds
sub
cmp
sbb
out
std
xor
insl
xor
fnstcw
test
out
or
fs
lret
scas
icebp
adc
outsb
sub
xchg
test
pop
in
in
mov
jmp
cmc
xchg
adc
in
jb
inc
mov
loope
inc
inc
adc
push
movsb
scas
cmp
lea
lock
and
into
mov
xchg
push
mov
mov
push
jg
sub
xor
vmwrite
mov
mov
cli
fidivrl
arpl
orb
mov
testb
jg
adc
mov
pop
shl
mov
popf
in
cmp
jno
jp
dec
fbld
in
or
sar
clc
jae
mov
lods
mov
cmp
push
push
loopne
mov
pop
add
cmc
cmpb
bound
xor
js
and
pop
mov
xchg
sbb
inc
xor
add
fsubrs
dec
pop
imul
sti
adc
movsb
mov
or
je
inc
xor
lret
and
fldcw
mov
cmp
and
sub
cltd
push
je
mov
xor
mov
lret
or
test
and
rolb
sbb
ljmp
xchg
mov
add
hlt
mov
dec
je
mov
pushf
xchg
mov
stos
jne
jo
cmp
hlt
into
in
dec
fildll
jmp
and
ret
push
ret
mov
pop
push
js
cmp
adc
add
and
shrl
fidivl
sti
push
sbb
cmc
xor
push
fwait
incl
sbb
pop
imul
lods
mov
int3
push
add
fstpt
lahf
cmp
jmp
lret
lcall
sub
cmp
je
sub
insl
mov
out
es
jbe
call
ss
scas
or
jno
jge
outsl
xchg
les
mov
cmp
cmp
js
in
popa
loope
or
iret
in
sarl
sub
cmp
inc
in
addr16
pop
gs
jmp
lahf
pop
adc
adc
xchg
sub
push
cs
movsl
cmpsb
scas
mov
add
lret
xor
jl
add
int3
jmp
shlb
dec
ss
sbb
std
mov
shll
inc
jp
mov
sub
mov
pop
fstl
mov
aaa
daa
xchg
fs
vpermps
rcll
fiaddl
aad
ret
pop
jno
popf
dec
adc
mov
mov
and
add
sub
ror
push
sarb
dec
insb
in
enter
or
jo
sbb
or
push
scas
popa
rcr
xlat
lahf
push
icebp
out
mov
and
lea
sub
insb
jo
jl
cmc
sbb
fisttps
outsl
pop
mov
or
cmp
push
lret
ljmp
subl
mov
in
inc
sbb
in
add
push
xor
jbe
test
in
call
cli
sarl
cmpsl
scas
dec
mov
jmp
rcll
xor
shll
sub
mov
mov
or
mov
in
inc
inc
decl
jnp
scas
sub
or
iret
sti
movsb
mov
fnstsw
mov
push
jns
daa
mov
sbb
cmp
test
inc
pop
cmpsl
inc
mov
fldenv
and
cwtl
cmp
jb
jb
fisttps
jg
sbb
inc
sti
push
sahf
mov
fimull
or
jp
popa
icebp
imul
in
jne
jp
or
add
loope
subb
lret
pop
mov
sbb
ftst
into
add
jecxz
das
rorb
aas
mov
test
cmpsl
xor
shlb
lods
mov
and
mov
and
arpl
xor
test
mov
xor
out
inc
fiaddl
addr16
pop
pop
mov
jae
in
jmp
das
inc
int
dec
sahf
pop
and
mov
or
testb
mov
add
fwait
xlat
call
xchg
popl
enter
or
and
and
jae
mov
mov
scas
iret
mov
ret
or
scas
sub
jmp
pop
or
aas
and
or
out
sbb
jl
test
hlt
outsl
pop
mov
aaa
ljmp
mov
cmp
inc
mov
add
fwait
je
aas
xchg
dec
addr16
push
mov
add
call
push
repz
inc
repz
cwtl
aad
clc
pop
mov
adc
cmp
xor
stc
filds
lock
in
or
push
shlb
or
insb
testb
call
inc
jp
push
in
cs
dec
adc
add
loopne
shld
pop
pop
and
jo
xchg
loop
add
scas
cwtl
mov
add
data16
dec
jo
push
and
cmp
les
insb
in
sbb
and
mov
mov
xor
dec
mov
mov
mov
rorb
aad
mov
xorl
jg
jge
je
jne
test
mov
cmp
mov
je
subb
push
sbb
push
bound
xor
adc
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
mov
popa
bound
pop
bound
pop
movsb
fstps
dec
fcomps
mov
and
xchg
mov
jmp
jg
xor
cli
cld
push
inc
lret
push
call
push
popa
imul
addr16
push
xor
pop
xor
cmc
mov
into
and
cwtl
sti
pop
jnp
loopne
jbe
mov
shrb
rcl
dec
xchg
jge
push
lret
cli
std
adc
loope
jno
cmp
dec
int3
xchg
movsb
ljmp
jmp
jno
fnclex
push
rsm
add
sub
in
inc
int3
and
aad
outsb
scas
jne
fbstp
pushf
repz
mov
xor
ficomps
sbb
xor
out
mov
loope
test
clc
test
sahf
jge
xchg
mov
stc
fs
aaa
leave
aaa
and
call
mov
jmp
fbstp
mov
aad
clc
sub
push
es
popf
push
mov
xchg
push
setbe
call
popf
movsl
data16
sub
imul
iret
xlat
pop
add
mov
xchg
push
ret
insl
mov
pop
jns
jnp
cmpsl
mov
shlb
sub
adc
pop
mov
jb
add
punpckhdq
out
cs
push
add
mov
push
sub
add
rcr
data16
adc
pop
adc
fcoml
jno
imul
int3
leave
cmp
lcall
adc
outsb
jo
loopne
fcoml
pop
push
cld
push
mov
fs
orl
mov
sub
push
and
adcl
lea
lcall
rorb
iret
in
adcl
cs
pop
lds
push
mov
push
adc
xor
sarb
int3
fucomi
pusha
jae
pop
hlt
xor
push
sub
xchg
arpl
aam
leave
in
lret
hlt
iret
or
scas
push
push
xchg
or
sub
frstor
jle
jo
pop
mov
xchg
and
out
cmc
frstor
jae
cmpsb
xor
and
cld
enter
xor
jno
mov
mov
add
leave
xor
pop
mov
or
adc
addb
into
lea
test
loope
shll
add
xchg
icebp
xor
int3
pop
pushf
aam
xor
test
xchg
hlt
lods
push
clc
inc
inc
xchg
test
shl
or
xchg
clc
add
mov
push
pop
mov
jle
jae
aad
insl
and
push
shl
aas
outsb
sub
faddl
shlb
pop
faddp
xchg
nop
push
and
in
sbb
stos
fsubr
hlt
mov
mov
mov
mov
xor
ljmp
sub
xchg
or
inc
push
out
arpl
fimull
mov
in
rcrl
je
js
jno
xor
cmpsb
call
add
push
mov
in
icebp
inc
sub
sbb
shrl
or
outsl
push
sub
adc
mov
inc
sahf
je
mov
mov
orl
test
adc
fdivl
inc
push
and
push
sti
ss
icebp
les
mov
gs
jo
data16
mov
shr
scas
popa
jne
bound
xor
cmp
fdivr
fs
ja
aaa
repnz
pop
mov
mov
popa
cmp
pop
dec
jae
out
mov
test
mov
out
fisubs
cs
call
mov
aaa
adc
jg
xchg
jo
xor
arpl
adc
xor
pushf
into
nop
mov
mov
jmp
xor
gs
push
cli
ss
ss
sub
in
mov
jp
jnp
bound
push
mov
mov
popf
jle
stos
xchg
jbe
pop
js
es
mov
inc
test
xlat
notb
lods
mov
push
call
repz
pushf
push
mull
sbb
mov
push
stos
jae
test
push
mov
movsb
clc
repnz
pop
adc
outsl
or
mov
iret
push
ror
stc
mov
imul
push
dec
loopne
mov
ficoms
stos
dec
sbb
in
repz
cwtl
stc
fucomi
xor
lods
jl
outsl
jle
icebp
cmpsb
jmp
pop
ss
jne
dec
test
push
adc
pop
lret
xchg
mov
inc
divl
sbb
pop
pop
divl
addr16
das
xlat
mov
je
mov
sbb
inc
pop
out
movsl
or
pop
je
sub
ds
ret
orl
inc
jb
sub
sbb
jo
xor
sub
clc
fidivs
mull
xchg
and
jg
cwtl
xchg
xchg
shl
xorb
jle
popa
pop
daa
jbe
stc
add
xchg
lret
jp
icebp
cmp
xchg
dec
jb
je
cmp
shrl
aam
cmp
and
jnp
cmp
pop
std
inc
xlat
xor
out
mov
jns
fwait
imul
ljmp
mov
loop
mov
cli
dec
cli
repnz
push
sbb
loop
inc
hlt
or
or
ffreep
push
mov
mov
lret
cs
sub
mov
inc
xchg
lret
adc
push
jl
cwtl
push
jne
inc
insb
dec
jp
mov
cmc
decl
fisttpl
fwait
xchg
sbb
xchg
add
int
popf
sbb
add
rcr
mov
inc
sbb
mov
push
adc
outsb
xchg
dec
shrb
cmp
test
mov
push
iret
fmuls
lods
fnstenv
mov
rol
xchg
push
mov
movsb
pop
enter
leave
test
mov
dec
pusha
push
dec
push
int3
ret
cmpsl
jbe
mov
jnp
push
jp
mov
fisubrs
cmp
test
sbb
jmp
sub
xor
leave
pop
out
mov
and
inc
jbe
sub
andb
inc
or
orb
inc
ret
mulb
ds
pusha
and
js,pn
je
pop
jnp
lcall
addl
notl
repz
out
mov
shl
stc
sbb
adc
icebp
pop
sub
push
cmp
and
aaa
mov
mov
push
mov
push
xlat
cmp
fisubrl
add
insb
in
pop
sbb
movb
sbb
stc
fstl
mov
adc
cwtl
lcall
jge
add
and
dec
xchg
push
fstps
mov
es
pusha
out
pop
dec
lahf
jp
xor
adc
xor
cmp
xchg
cmpsl
mov
jl
and
cmp
addr16
adc
sahf
mov
repz
fs
movsl
push
push
cmpsl
sbb
icebp
xchg
push
test
mov
incb
mov
jae
test
push
jle
mov
mov
sahf
test
shl
pushf
scas
mov
rcrb
jl
mov
sub
pushf
xchg
icebp
and
icebp
popf
and
mov
inc
and
lret
lods
ficompl
add
mov
ja
inc
adcl
loopne
pushf
das
push
out
mov
cmpsb
in
jmp
jo
fxch
stos
cmc
xchg
mov
mov
pop
repnz
sub
or
dec
pop
lret
sub
push
push
repz
movsb
les
aam
sahf
and
cld
idivl
test
sbb
sahf
fcmovu
leave
and
mov
rcr
xchg
shrb
aam
jb
out
ret
ffree
jg
gs
adc
cmpb
int
gs
mov
pop
xor
cmpsl
pop
push
cmp
xor
jns
lret
xlat
inc
aam
in
icebp
sbb
mov
inc
or
jne
inc
dec
mov
or
xchg
sbb
push
sbb
movsl
mov
adc
aaa
and
enter
xlat
pusha
fmull
add
adc
adc
loopne
loop
push
mov
aam
or
mov
mov
je
mov
push
jle
rcll
and
adc
fistl
mov
loopne
sbb
das
dec
ss
cli
out
push
lret
cmp
lret
xchg
mov
push
popa
pusha
notl
push
xorb
cmp
xor
sbb
sbb
insl
lcall
ja
popa
sti
mov
sub
xor
adc
les
or
pusha
dec
inc
mov
mov
or
jmp
sbb
mov
inc
cmc
or
mov
icebp
hlt
xor
inc
out
je
jno
jbe
and
cmpsb
and
and
test
outsb
add
cmp
addw
aaa
test
stos
xchg
sub
push
in
and
dec
insb
push
jmp
das
ja
js,pn
inc
outsl
add
ret
movsl
xor
gs
mov
out
and
mov
adc
adc
cmp
sub
in
mov
jg
mov
mov
xchg
in
loop
rcl
xor
ja
jb
sahf
lret
or
das
push
mov
xchg
dec
shlb
rorl
jg
cltd
push
movsl
dec
aad
mov
pop
sahf
filds
push
ficompl
das
mov
divl
into
xorb
mov
push
faddp
jb
pop
frstor
in
lea
sub
sbb
fisttpll
xchg
cmp
outsb
fidivl
cmp
mov
xchg
xchg
dec
loop
aas
addr16
lods
pop
imul
int
ror
and
or
xlat
jl
mov
inc
cmpsb
in
out
sbb
fwait
repz
lahf
pop
lock
or
jge
and
popf
aas
push
mov
sub
insb
or
loopne
pop
mov
mov
inc
leave
jne
xlat
movsb
xchg
movsb
inc
or
notb
or
or
cwtl
mov
pushf
repz
stos
out
push
sub
mov
lock
insb
cmc
dec
fstps
data16
push
and
scas
adc
test
mov
das
imul
leave
daa
inc
pop
adc
out
push
inc
pop
lock
dec
mov
ss
jecxz
jecxz
jle
sahf
dec
cs
pusha
push
in
add
fs
fwait
sbb
adc
jne
pop
je
test
jle
sub
nop
aas
mov
or
lcall
inc
mov
mov
inc
iret
bound
shll
cmpsb
xor
xchg
cmpsb
mov
or
sub
inc
insl
add
iret
xor
fs
ss
mov
sbb
push
shr
loop
loopne
movsb
adc
xor
call
hlt
mov
and
sbb
clc
inc
fbstp
fcmovnb
fimull
push
cmp
out
sbb
sbb
adc
cmpsb
test
ljmp
clc
xchg
dec
insl
leave
fists
xchg
cmp
xchg
or
dec
ret
sub
jle
adc
xor
int
or
dec
repnz
pop
and
sub
lock
ficomps
xor
sbb
cwtl
loop
mov
clc
cmp
sahf
addr16
cmp
mov
cmp
dec
je
leave
les
mov
pop
xchg
popf
test
dec
cmp
xor
cmp
adc
xchg
loop
cmp
stos
inc
sub
sbb
lahf
jns
rcrl
jb
das
and
pop
mov
pop
mov
inc
scas
popl
fildll
sub
pop
dec
mov
push
pushf
sti
rorl
inc
sub
pop
push
or
or
xor
insl
pop
outsb
jge
jbe
pop
dec
ss
jecxz
pusha
aaa
test
push
lods
adc
stos
cld
adc
std
jge
stos
jo
lods
push
push
ss
mov
push
xchg
mov
jno
in
mov
inc
add
xchg
inc
pop
enter
ja
push
loope
test
inc
sub
lods
cmp
jne
or
repnz
jl
lea
pop
xor
stos
pop
mov
test
fstpt
sahf
mov
sub
stos
mov
push
repz
mov
cmpsl
add
outsl
popa
add
mov
push
cwtl
addr16
fiadds
andb
mov
cmpsb
jmp
ret
add
aas
inc
popa
ret
out
inc
outsb
jecxz
and
jne
xchg
fsubs
sbb
push
inc
outsl
sti
cmpsb
pushf
hlt
add
xchg
xor
add
and
pop
mov
sti
lret
ja
subb
ret
adc
negb
push
add
pop
cwtl
popl
ss
push
cmpsl
xchg
rsm
mov
icebp
lods
dec
mov
lcall
push
adc
pop
cmpsl
fistpl
and
sbb
xchg
cld
pop
add
jl
mov
subb
mov
xor
xor
jnp
ja
xchg
sbb
add
pop
out
lahf
in
mov
add
mov
je
aad
jmp
inc
out
push
cld
jb
outsl
leave
dec
xchg
fcompl
rcr
cmp
orl
orb
push
jns
icebp
fstpt
iret
mov
push
mov
loop
dec
add
and
cltd
fwait
cmp
push
dec
adc
lock
pop
pop
xchg
xor
ret
fidivs
mov
dec
push
inc
jecxz
inc
and
dec
push
popf
cmp
aam
out
test
pop
in
jbe
xchg
add
gs
repz
mov
sub
mov
lcall
lret
pop
scas
scas
sub
xchg
ds
imul
fwait
mov
pop
sub
mov
xchg
stos
out
scas
dec
rcrb
xlat
js
cmc
insb
sub
dec
bound
movsl
inc
xor
leave
sahf
cmpsb
stc
and
loop
mov
jp
pushf
hlt
icebp
xor
jno
das
push
inc
daa
or
mov
lcall
sahf
lahf
std
int
lret
push
out
mov
fstpl
cld
insl
std
cmpsl
hlt
lds
add
cmpsb
inc
or
adc
push
inc
add
cmp
repnz
fsincos
mov
push
or
cmp
mov
movsl
mov
pop
popf
out
mov
mov
fstpt
in
adc
or
mov
out
xchg
outsb
leave
xlat
inc
sub
emms
add
cmp
outsb
cltd
mov
mov
fiadds
and
out
cwtl
and
adc
popf
jg
or
mov
cmp
sar
insl
fnstcw
lret
fs
in
ret
imul
adc
jmp
and
jmp
pop
sahf
mov
call
lcall
movl
in
fdiv
adc
xchg
mov
jns
and
scas
sbb
pop
xchg
lds
mov
insb
out
pop
add
imulb
jo
fists
jb
inc
out
inc
fs
sub
ficoml
lods
ja
inc
push
pop
push
ret
xor
jne
add
aad
xchg
push
sub
cmp
dec
mov
addr16
mov
jl
mov
stc
popa
ja
testb
js
mov
cmp
xchg
outsb
pushf
andb
add
xor
push
jge,pn
sbb
xchg
add
mov
mov
push
push
negl
mov
inc
add
adc
jno
jne
lret
xchg
lock
fsub
mov
xchg
pop
pop
iret
cld
add
dec
dec
lcall
test
jp
pop
inc
rcr
test
lahf
inc
adc
cli
push
mov
mov
or
sub
pop
scas
aam
mov
rclb
in
add
add
data16
mov
mov
out
jp
inc
loop
out
xchg
inc
aaa
mov
cmp
xchg
int3
sbb
sbb
js
xor
imul
adc
mov
imul
jle
xchg
fsin
sub
push
and
scas
push
mov
xchg
sub
test
stos
push
inc
sbb
push
pop
mov
pushf
insl
mov
arpl
call
mov
jg
mov
xchg
or
call
mov
xor
mov
out
and
leave
inc
dec
scas
adc
scas
das
imul
fildll
sbb
imulb
ret
pop
xor
adc
cs
and
addl
sarl
push
jecxz
cmp
adc
push
mov
push
push
ljmp
enter
les
jmp
stc
mov
out
fwait
jmp
js
jmp
pop
bound
mov
test
dec
push
imul
aas
fstpt
mov
push
xchg
mov
lahf
push
test
movsb
push
sub
movq
inc
jne
pushf
pop
or
jmp
dec
mov
arpl
push
ret
sbb
out
jnp
inc
fdivrs
out
mov
je
ljmp
lods
xor
sub
push
roll
add
or
mov
sahf
xor
in
dec
cmp
sub
in
addr16
push
in
xchg
dec
mov
es
sub
mov
xchg
mov
xor
dec
sub
inc
mov
test
out
or
sbb
std
enter
into
dec
mov
push
push
xchg
iret
stos
mov
push
or
or
sahf
lods
jg
ljmp
inc
xchg
adc
adc
pop
ja
sbb
out
lahf
scas
shl
or
std
in
repnz
outsl
jmp
das
push
icebp
sbb
xlat
add
fcomps
inc
xchg
jnp
imul
arpl
sbb
mov
icebp
mov
cmp
and
jns
pop
mov
mov
arpl
mov
aaa
and
adc
ret
and
mov
push
notl
stos
pop
sub
inc
sub
leave
gs
mov
sahf
inc
cmp
fldcw
jnp
daa
xchg
test
movl
flds
and
pop
mov
es
clc
xor
cs
lock
push
fwait
pop
addr16
lcall
imul
cwtl
and
push
cltd
jecxz
cmp
loopne
jl
pusha
outsb
mov
sahf
push
sbb
lret
sbb
mov
rcl
add
cli
mov
jae
xchg
mov
sti
xchg
imul
push
xchg
scas
fsts
and
dec
jbe
xor
test
inc
imul
movsb
lcall
sahf
jb
fsubs
push
iret
jmp
and
cld
mov
jp
daa
into
popa
mov
mov
nop
add
pushf
xor
push
addr16
jae
aas
fwait
xlat
sarl
ljmp
or
out
ret
test
xor
pop
inc
or
test
pop
sub
pop
pop
mov
movsb
fxam
dec
sub
es
xchg
push
push
dec
hlt
jmp
or
into
clc
mov
mov
and
push
out
pop
push
js
dec
pop
inc
mov
call
jns
mulb
loopne
mov
incb
push
and
mov
arpl
vunpcklps
fadds
or
inc
xor
jp
or
inc
push
sub
push
mov
aad
lcall
je
sub
push
jo
insb
stc
sub
out
push
cwtl
jnp
insb
xor
cli
popf
ret
mov
cmp
in
jle
push
fwait
xchg
xchg
pop
dec
imul
dec
mov
xor
inc
jns
fs
dec
testb
mov
loope
cld
add
pop
xor
jge
addr16
scas
mov
sahf
cmp
push
or
scas
fisubrs
or
mov
out
in
xor
cmpsb
mov
pushf
xor
mov
xlat
lea
imul
data16
stos
mov
inc
pop
push
mov
mov
pusha
fldcw
cmp
pop
sub
inc
sbb
into
push
sbb
gs
cs
hlt
push
je
fnstsw
data16
mov
gs
ffreep
mov
aas
mov
cmpb
push
or
popf
and
push
aaa
push
mov
inc
mov
in
stos
push
test
call
cmp
out
je
into
or
enter
jb
in
imul
pop
dec
inc
je
and
pop
nop
sbbb
lds
and
xchg
pop
inc
adc
dec
stos
dec
rolb
negl
add
xchg
out
iret
fisubs
and
std
arpl
nop
mov
cmpsl
mov
ljmp
add
and
add
mov
adc
jl
iret
das
dec
mov
sub
cmp
into
mov
or
sarl
lock
add
mov
ret
pop
jle
jmp
mov
jmp
push
xor
sub
fwait
fs
aam
pop
xchg
push
outsl
xor
js
cltd
test
or
loope
xchg
in
adc
cmp
sbb
faddl
les
xchg
cmp
and
hlt
push
push
ss
leave
pop
jne
push
mov
das
mov
mov
rcll
ret
les
sbb
ljmp
xor
insb
mov
and
lret
out
mov
dec
push
adc
leave
and
sbb
push
repnz
xchg
das
pop
popa
es
cmp
add
push
scas
add
mov
daa
cmpsb
push
sub
xlat
push
ja
inc
movsl
data16
push
cwtl
cmp
cmp
inc
lock
inc
loope
inc
jae
fwait
ja
inc
addb
std
lock
push
ret
cmp
jecxz
lds
or
jecxz
iret
jecxz
sub
std
imul
sahf
lods
jne
sbb
fsubp
jge
jae
incl
pushf
repnz
pop
outsb
xchg
xchg
popf
add
ret
mov
cmp
nop
lcall
sti
fbstp
mov
jg
jno
sti
jmp
add
jl
and
in
aam
lret
lcall
mov
dec
fstl
jg
rol
inc
and
lds
je
and
dec
fxch
xchg
ret
pusha
mov
je
push
cmpsb
mov
mov
or
rolb
mov
cmp
pop
add
xlat
int
pop
xor
sbb
lcall
js
mov
aad
mov
adc
inc
stos
sbbl
jl,pn
ds
push
ret
xchg
pop
out
adc
jb
andb
leave
mov
sbb
and
push
push
or
push
int
fsubl
xchg
or
iret
adc
cmp
mov
pop
cmp
mov
es
jo
sub
enter
fstl
rol
mov
inc
loopne
sbb
enter
arpl
pop
lea
enter
in
pop
mov
cmp
jle
and
cltd
idivb
jae
mov
inc
dec
dec
jno
push
inc
out
inc
jae
arpl
dec
jnp
push
das
fldt
int
loop
test
ja
jmp
mov
jne
pop
orb
shlb
hlt
mov
cmp
out
dec
sbb
cmpsl
push
sti
xchg
mov
mov
lahf
pop
jnp
adcl
push
pop
mov
ljmp
fsub
xor
loop
cltd
push
nop
cmp
andb
jp
inc
into
xor
jge
fbstp
pushf
sarl
dec
mov
or
jl
cmp
pop
jb
inc
push
or
push
mov
sub
pusha
xlat
ds
sub
sbb
jg
in
xor
js
cld
mov
lea
push
jmp
insl
pop
mov
ljmp
and
adc
mulb
in
out
push
loop,pt
inc
xchg
and
lock
lods
sbb
in
sti
xor
adc
and
xlat
ja
fsubr
divl
ret
pop
push
push
mov
jecxz
add
cmp
mov
hlt
rcrb
xchg
lcall
lds
int3
cmp
outsb
sbb
mov
mov
push
mov
mov
mov
xor
mov
pusha
int
inc
dec
clc
jl
and
xchg
and
loop
adc
jnp
lcall
lret
sub
out
mov
repnz
les
xchg
inc
xor
bound
pop
push
iret
mov
out
mov
pop
pop
or
ja
cmpl
jl
lods
xchg
out
out
or
pop
jmp
push
mov
mov
fwait
test
mov
mov
outsb
popf
push
ljmp
cmp
lahf
mov
lods
loopne
addr16
jb
pushl
or
adc
outsl
xor
sarb
mov
pop
addr16
jg
add
addr16
adc
xchg
push
int3
push
dec
or
ret
jbe
mov
movsl
cmp
fnstsw
jno
hlt
dec
js
xchg
pop
loop
xor
push
pop
scas
adc
cs
mov
sub
cmc
jnp
and
cmp
cltd
addr16
roll
insl
movsb
inc
push
popa
adc
sti
pop
roll
jle
inc
repz
jl
test
call
call
dec
jp
dec
ret
cli
jle
and
jg
add
inc
gs
push
je
popa
aam
mov
mov
xchg
mov
push
leave
dec
pusha
pusha
sub
pop
pop
inc
jo
dec
scas
pop
int3
cmpsl
les
and
and
sbb
test
xor
or
mov
movlps
add
jp
sbb
mov
imul
pusha
jg
out
sub
lds
mul
sbb
movsb
popf
mov
pop
jmp
ret
mov
and
roll
sbb
fwait
rorb
rcrl
stos
and
lods
sti
mov
sub
imul
and
pusha
and
mov
jmp
jecxz
cmc
in
cld
gs
sti
xchg
xchg
push
fdivrp
ficompl
movsb
cli
pop
or
in
fldcw
and
ret
outsl
repz
jns
or
incb
and
rcrl
xor
cmp
dec
sarb
repz
sbb
mov
dec
or
pop
jo
cmp
shlb
fs
sbb
push
aas
iret
lret
jg
mov
sub
and
ret
test
stc
shlb
pop
loope
out
jl
adc
or
mov
sti
inc
xor
inc
pushf
push
and
mov
cwtl
xchg
les
mov
popa
loope
loop
outsl
cmpsl
or
sub
jae
scas
imull
mov
sahf
cmp
adc
mov
test
repnz
out
dec
xor
add
pop
mov
in
push
mov
cmc
sarb
cmp
fildll
push
pusha
add
or
ss
mov
sbb
lea
mulb
leave
xchg
jo
pop
lret
std
les
idiv
rcrl
sti
cli
cwtl
imul
add
aam
inc
mov
mov
push
mov
je
xchg
sbb
sbb
jg
incb
or
std
cmpsb
andb
incb
incl
fidivrl
mov
movsb
jnp
cmp
or
mov
dec
and
cmp
aas
mov
push
ss
addr16
pop
jge
jge
pop
gs
aam
jne
sbb
jecxz
push
stos
ret
push
int
mov
mov
cld
mov
shrl
add
cwtl
sub
ret
addb
ret
mov
xchg
xor
adc
xchg
in
int
jl
or
or
imul
stos
mov
das
repnz
in
arpl
add
nop
sub
ret
fdiv
cmc
in
cmovl
sbb
jmp
sbb
ficoms
pop
cmpsb
jg
sti
push
popa
xor
sub
sub
out
fmul
or
dec
into
std
xchg
out
je
jb
dec
add
or
mov
push
push
jnp
cltd
xchg
andl
bound
ret
aaa
in
bndldx
sub
push
pop
jbe
xchg
xchg
jle
and
outsb
daa
pushf
fdecstp
or
pop
hlt
jmp
inc
sub
inc
sub
test
fadd
xchg
sbb
mov
adc
sbb
push
int3
sub
or
xchg
sub
inc
pop
clc
inc
or
cmp
mov
pop
repz
subb
int3
and
int3
pop
inc
xlat
jne
daa
sub
int3
sub
les
or
insb
leave
mov
mov
cli
mov
lds
testb
lods
gs
fdivl
and
cmpsb
fwait
adc
lock
mov
xchg
lahf
xor
lahf
pop
dec
push
push
xchg
jns
lds
sbb
es
jl
cmp
int
sti
test
ds
xor
mov
sbb
or
xor
les
test
dec
out
jmp
cltd
cmp
insl
fchs
mov
inc
sbb
int
mov
fld
xlat
leave
roll
fxtract
scas
mov
and
adc
mov
ja
in
icebp
and
cs
inc
lods
outsb
mov
loope
roll
stos
sbb
mov
jo
out
adc
mov
subl
dec
xchg
ljmp
and
xchg
mov
lahf
fstp
mov
fs
scas
cmp
ljmp
scas
push
testl
cmp
sbb
outsl
pop
cld
cmp
daa
fdivrl
sub
xor
jno
les
out
popa
sbb
daa
dec
ret
mov
movsl
xchg
cmc
jo
int
adc
sub
pop
xor
cmp
mov
nop
sub
aas
int3
or
ret
xchg
daa
cli
gs
aam
add
mov
jp
popf
or
int
sub
fidivl
pop
std
repz
outsb
sbb
into
push
sbb
into
mov
dec
aas
or
cmpsb
loope
pop
pop
pop
dec
push
or
mov
test
or
data16
inc
xchg
and
inc
push
cmpsl
sub
dec
cmp
rorb
testl
push
xor
dec
mov
stos
faddp
pop
push
addr16
push
mov
in
cmp
inc
jg
lret
inc
hlt
mov
or
jle
add
xcrypt-cfb
cmpsl
mov
pop
fldl
and
pop
insb
jns
xchg
movsl
inc
hlt
sub
mov
mov
mov
aaa
in
shl
add
push
push
push
dec
jnp
arpl
or
mov
and
cmp
clc
inc
lcall
push
pop
clc
imul
xlat
sarl
aad
inc
sbb
lret
jae
inc
or
sub
xchg
mov
fdivrl
into
fimull
mov
mov
xchg
jp
mov
outsb
push
add
mov
test
mov
add
cli
dec
scas
fs
aaa
mov
add
xchg
and
adc
push
icebp
sub
mov
jns
das
mov
lea
push
call
cmp
dec
cmp
es
aaa
mov
mov
adc
hlt
test
fistpl
out
hlt
jno
pop
xchg
mov
sub
icebp
ljmp
movsl
or
cmp
add
cmpsl
push
fidivs
lock
aaa
push
xchg
dec
in
fisubrs
rcrb
jl
push
js
cmp
or
adc
and
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
or
rcrb
popa
bound
bound
lods
arpl
loop
jecxz
lcall
pop
cltd
xlat
push
mov
inc
imulb
dec
dec
enter
inc
sbb
in
dec
mov
stos
out
lea
cmp
out
rolb
jae
mov
stos
sub
push
push
int
clc
mov
iret
loop
lcall
push
sbb
xchg
sbb
and
outsb
int3
stc
inc
xchg
addr16
loop
adc
xchg
daa
orl
pop
mov
imulb
lods
shr
stc
jae
ljmp
adcl
fsubs
sbb
cmp
pop
in
dec
sbb
pop
xchg
test
pop
bound
cmp
cmp
or
daa
inc
jnp
ja
mov
push
ja
and
addr16
cltd
mov
jecxz
cmp
aas
add
mov
adc
mov
pop
fs
add
jge
adc
jmp
out
shl
push
cmp
aaa
testb
cwtl
pop
imul
ret
pop
pop
mov
das
push
cwtl
fwait
mov
mov
sbb
aaa
out
popf
call
mov
sbb
xchg
push
mov
xchg
inc
rorl
adc
jno
aad
into
rcl
mov
andl
mov
in
jo
mov
cmpsl
adc
imul
mov
sbb
mov
add
addr16
push
cmp
shl
sub
inc
adc
ljmp
sbb
cmp
jl
imul
nop
ret
xchg
movsl
ror
push
push
out
sub
xor
adc
loop
inc
and
dec
inc
nop
loop
dec
pop
xor
and
mov
nop
pop
cmpsl
push
inc
pop
fcoml
int3
fdivrl
mov
insb
push
or
arpl
shl
out
pop
mov
aad
xchg
mov
ss
out
les
pop
and
imul
cmpsb
aam
pop
aaa
sti
sti
ja
jb
jno
jae
lcall
out
xchg
inc
lret
add
adc
or
popa
lds
cmp
jg
xchg
sbb
pop
and
fidivrs
outsl
in
xchg
dec
mov
xchg
cmp
mov
loope
je
lret
cmp
add
stos
clc
insb
mov
ss
inc
jno
lea
in
inc
imul
nop
aas
in
loop
int3
enter
sub
jns
push
mov
arpl
add
int
mov
jp
cmp
inc
cld
clc
je
leave
cmp
fdivr
repz
pop
mov
sti
xor
cwtl
dec
add
into
pop
mov
pop
xor
mov
fldcw
stos
fsubl
enter
ss
and
dec
dec
ficoml
jmp
mov
xor
call
cs
mov
fcomps
fildl
js
pop
ffree
in
mov
adc
inc
and
fdivp
sub
pusha
es
or
or
xchg
adc
loopne
aaa
mov
pop
and
xchg
pushf
mov
ret
jge
xor
mov
xchg
cltd
or
sub
vminps
pop
inc
fldcw
fcmovne
out
cmp
js
sub
test
jle
mov
xor
cmp
cmpsl
jns
in
sub
and
add
sub
xchg
dec
jnp
mov
pusha
repz
and
sub
cli
mov
jns
and
mov
push
ret
bound
mov
imul
jo
out
mov
xchg
ja
aaa
cmp
xor
adc
nop
mov
inc
mov
inc
std
sbb
push
pop
iret
dec
jb
loop
stos
inc
mov
xor
shlb
stos
stos
dec
imul
xchg
sbb
and
lret
popf
add
rclb
repnz
pusha
mov
push
or
mov
fwait
pop
push
nopl
xchg
int
dec
push
out
sbb
push
push
pop
movsb
popf
in
xchg
bound
inc
xor
sbb
inc
and
ja
fadd
push
shrl
lret
ja
imul
in
add
xchg
mov
pop
mov
jae
xchg
sahf
pop
fwait
mov
dec
repz
mov
das
cmp
add
push
imull
fld
test
mov
and
adc
test
or
xor
scas
adc
cmp
fs
mov
test
mov
out
int3
popf
pop
scas
call
shrb
or
sub
mov
ljmp
xchg
cmpsb
sbb
mov
dec
movsb
xorl
imul
sti
sub
pop
mov
adc
xchg
dec
push
xchg
xchg
jl
or
rorl
in
mov
adc
sub
push
gs
addr16
nop
jns
jl
add
icebp
or
lea
clc
aas
shrl
popa
push
int3
pop
sahf
adc
mov
mov
cs
xor
mov
adc
ja
sbb
addl
and
and
add
xchg
push
leave
fidivrs
xlat
xor
aad
lods
ret
mov
ficoms
cli
push
cmpsl
pop
add
jg
je
mov
cld
in
cld
movsb
std
nop
jmp
push
or
xchg
mov
mov
je
sbb
and
xchg
ret
sub
imul
inc
xchg
cmpsl
js
popf
inc
arpl
mov
bound
mov
push
popf
mov
push
mov
dec
xchg
mov
or
mov
jne
test
add
mov
xchg
lahf
hlt
incl
push
push
jne
in
pop
xor
sbb
push
mov
nop
xchg
xchg
dec
or
fs
idivl
adc
negb
inc
sbb
in
adc
push
mov
mov
je
mulb
xor
pop
in
and
je
jno
pop
lahf
je
mov
fwait
xchg
add
jb
push
pop
aad
mov
loope
scas
rcll
dec
mov
dec
xchg
mov
aad
or
or
rclb
lret
movsl
aad
pop
adc
jns
jb
scas
ds
movsl
lcall
or
sub
fcmovne
test
add
or
cmp
shll
pop
sub
push
inc
aaa
js
adc
mov
cli
sbb
pop
dec
adc
cltd
ficoml
jmp
loope
pop
jb
scas
xchg
xorl
outsb
lds
arpl
add
pop
lds
and
cmc
out
sub
inc
sbb
mov
push
jae
dec
mov
mov
mulb
sti
enter
fistps
rcr
fwait
sbb
test
adc
push
sub
mov
adc
gs
stos
inc
dec
xchg
sub
mov
lds
in
js
add
cmp
jns
ds
and
cmp
cltd
add
pop
inc
and
out
enter
sub
das
mov
jns
sbb
jb
xor
in
sarl
leave
and
sahf
in
cmpsb
or
outsl
arpl
out
out
loop
mov
repnz
mov
adc
inc
ja
icebp
adc
daa
mov
sbb
mov
pop
js
test
and
add
std
cs
bound
lods
sbb
cmp
xchg
aas
popa
xchg
lahf
xor
mov
iret
adc
icebp
lcall
in
insl
cltd
mov
fldt
pop
in
sub
push
mov
decb
inc
ret
mov
in
sub
scas
cmpsb
lods
sub
pop
cld
xchg
cmp
into
test
mov
int
lahf
in
mov
sti
lcall
andb
in
inc
xor
cmp
pop
sti
movsl
jno
jecxz
rcll
and
fwait
ret
mov
neg
icebp
arpl
pop
mov
xor
stos
sarl
or
lret
add
jae
fstp
movsb
aam
imul
cmp
decb
adc
out
adc
push
jg
xor
lahf
es
sub
xchg
xchg
xchg
cs
in
movsb
adc
xor
sbb
push
mov
aad
pop
jb
icebp
mov
jnp
or
fstps
push
fldl
subl
incb
dec
es
mov
jmp
push
sub
add
jmp
push
test
pop
push
loope
pop
pushf
int
dec
jmp
pop
insb
dec
mov
inc
aaa
je
adc
push
insb
pop
int3
push
sub
jbe
lea
lahf
cli
nop
cld
push
ljmp
rcrl
mov
sbb
shrb
push
dec
cld
arpl
mov
jmp
xchg
add
push
mov
pop
lret
jns
movsl
pop
jb
call
mov
pop
dec
insl
fisubrl
push
xchg
push
xor
mov
inc
mov
mov
cs
or
jl
pop
scas
mov
mov
fwait
add
out
in
sub
fwait
daa
insb
mov
cmp
pop
dec
jo
repz
and
movsl
mov
xor
mov
leave
fstpt
pop
pop
jg
dec
jnp
inc
das
sbb
push
pop
push
fisttps
mov
push
scas
add
in
adc
inc
stos
cli
arpl
lods
or
ret
or
jmp
pop
inc
aad
inc
dec
sar
push
jne
push
add
dec
mov
addr16
sar
sti
dec
xor
pop
xor
push
mov
lret
out
fbstp
push
ret
cmp
mov
in
inc
out
les
inc
cmpsl
xlat
stos
mov
mov
xor
adc
in
in
shll
imul
divb
mov
push
push
aad
xchg
push
pop
sbb
xchg
sub
add
and
xchg
sub
negb
lods
pop
cmp
dec
cmp
push
dec
push
mov
adc
xor
test
xchg
mov
sbb
test
insl
ret
jp
push
fimuls
xlat
sahf
lods
out
sbb
inc
dec
pop
push
lods
xchg
xchg
movsl
cmpsl
dec
dec
fistpl
pushf
mov
scas
loopne
jmp
pop
pop
gs
push
cmp
inc
inc
dec
inc
mov
sub
pop
in
mov
mov
xor
jae
mov
rorl
rclb
fidivs
cmp
lret
in
aas
sub
jne,pn
xchg
mov
dec
ficompl
les
jae
lods
fcomps
push
stc
and
mov
dec
or
fistl
push
imul
xor
push
cmp
adc
jne
imul
repz
into
push
lods
add
pop
movsb
mov
fwait
stc
and
insb
or
adc
cmovns
jmp
mov
rcrl
sbb
jl
add
jmp
out
sub
negl
jnp
lret
push
pop
fcmovb
out
and
lret
enter
jns
int
cltd
push
or
call
xchg
out
jle
mov
test
cmp
or
dec
jmp
sti
not
cmpsl
jns
push
lret
das
cmp
push
in
mov
pop
cli
cmp
cmc
shl
mov
lock
fldenv
xchg
aaa
lods
push
cltd
and
xor
adcb
mov
mov
jns
xchg
gs
rclb
adc
aas
popl
jb
in
fcomp
xlat
mov
fdivrl
test
shll
fcomps
aad
das
into
sub
cmp
or
out
xor
inc
sbb
xor
xchg
ljmp
mov
aad
out
mov
xor
stc
or
inc
mov
jnp
xchg
loope
lods
imul
push
mov
popf
loop
sbb
dec
std
mov
stos
adc
insb
or
daa
xchg
sbb
push
in
push
sub
xchg
pop
sub
fs
cmp
mov
add
arpl
mov
mov
xchg
aad
mov
jle
mov
mov
push
jnp
sbb
mov
pop
cltd
xor
movsb
stc
icebp
xorb
into
push
addr16
xor
jg
sub
pop
sbb
or
in
scas
mov
push
pop
pop
test
adc
incb
out
adc
mov
pop
clc
add
push
push
icebp
cld
loope
push
xchg
cmpsl
xor
and
mov
lods
push
xor
xchg
rep
pop
addb
adc
add
adc
fnsetpm(287
faddp
mov
je
and
dec
sub
daa
pop
ljmp
jae
xor
xlat
imul
jg
lahf
mov
into
popa
lock
rcrb
pop
popa
subps
ds
fildl
xchg
stos
mov
sbb
lahf
pop
subb
xchg
xchg
push
or
orb
adc
adc
mov
out
ja
pop
into
in
in
ss
adc
fnsave
out
js
je
inc
sbb
xchg
fisubs
push
add
fadd
ret
out
out
xchg
sarb
loopne
dec
and
inc
mov
test
mov
outsb
cmpb
dec
aad
les
cli
add
inc
xchg
ja
pop
rcrb
add
arpl
sbb
stos
fmuls
out
insb
adc
in
test
lahf
pop
pushf
popa
or
mov
lods
cmpsb
lods
dec
enter
das
aaa
out
js
and
adc
int3
in
adc
in
add
lods
cmpsl
push
push
xor
inc
dec
scas
mov
js
popa
cli
push
adc
loope
mov
xor
adc
fldl
jge
cmp
and
jmp
mov
add
sub
and
mov
les
mov
ficompl
xchg
and
jnp
jne
jecxz
mov
dec
divb
push
repz
dec
dec
ljmp
nop
into
movsl
cs
mov
inc
pop
aad
cmc
lea
xlat
and
cld
mov
int3
mov
std
cmp
sti
loop
ficompl
aas
sar
cmpsb
das
int
sbb
mov
or
lea
push
push
popf
out
add
jecxz
popa
dec
jmp
mov
std
sub
push
fists
stos
push
push
cld
jae
sti
pusha
sar
and
imul
pop
mov
xor
daa
lods
mov
popf
mov
xlat
aas
xchg
push
repz
lahf
outsl
cmp
pop
jo
mov
icebp
rorl
popa
xchg
jb
sub
fnsave
mov
sahf
test
shlb
mov
inc
jnp
cmp
sbb
sub
fimull
into
xlat
ss
es
ret
jno
das
mov
nop
pop
pushf
cwtl
test
movsb
pop
pushf
sub
not
lret
mov
sub
jg
jne
xor
jecxz
jae
lods
push
push
cmp
sbb
add
inc
pop
push
shl
icebp
bound
movsbl
std
std
cmp
aad
pop
out
addl
in
int
mov
xor
or
scas
and
xchg
scas
or
push
out
fwait
test
push
pop
out
sti
test
out
daa
fisubrs
es
xchg
push
xor
mov
jl
repnz
xor
pop
js
xor
xchg
inc
lock
pop
outsb
jae
inc
mov
pop
mov
int
addl
movsl
fnstenv
jp
lcall
adcl
xchg
imull
cli
ljmp
ror
rclb
cltd
fwait
jb
inc
jecxz
push
out
add
into
int3
push
in
and
lret
inc
pop
pop
test
sub
dec
fst
or
mov
mov
push
and
and
aaa
in
dec
dec
lock
out
cwtl
mov
and
push
push
rorb
push
xchg
sub
rolb
fs
dec
je
das
push
test
inc
ret
cmc
cmp
xchg
and
repz
imul
xchg
rorl
jge
test
ss
iret
iret
pop
pop
dec
sbb
mov
dec
or
add
mov
cs
aaa
scas
inc
insb
call
push
fbstp
lea
mov
pop
outsl
std
add
enter
add
xor
inc
cmp
sub
dec
insb
movsl
test
pop
dec
enter
cmc
pop
mov
loopne
movsl
mov
dec
xchg
leave
xor
pop
xchg
inc
imul
je
mov
xor
cli
xchg
pusha
adc
xchg
int3
add
sbb
gs
mov
pop
out
rolb
mov
out
pop
inc
or
shrl
and
cmp
dec
mov
aad
sbb
add
jp
mov
cmpl
rcl
testb
inc
xor
lret
stos
insb
imul
es
push
push
loope
daa
xchg
cmp
pop
roll
dec
xchg
jl
adc
mov
clc
jae
inc
test
xlat
push
xchg
cmp
jge
in
pop
push
roll
dec
std
fwait
adc
pop
mov
cmp
inc
jae
xchg
sub
xchg
pusha
inc
popf
mov
dec
jmp
cmpl
fcompl
sub
push
push
into
movsb
cld
lea
fbld
inc
aaa
nopl
mov
cvttps2pi
pusha
ficomps
xor
mov
add
icebp
fsubs
add
imul
insl
ficoml
std
pop
sub
jmp
mov
inc
sbb
pop
xlat
xchg
push
aas
std
lods
cs
cmp
xlat
sub
negl
inc
mov
shl
add
mov
stos
jbe
and
inc
inc
mov
test
loopne
aaa
or
inc
cmp
xor
aas
mov
imul
jnp
int3
xchg
mov
hlt
clc
adc
cli
shl
jl
push
fnstsw
adc
pop
jmp
and
ja
aaa
pushf
jae
daa
cltd
int3
div
dec
fwait
cmpsb
sbb
pushf
in
int3
les
push
jbe
loop
mov
adc
pop
inc
push
inc
popa
pop
loope
call
arpl
pop
sub
faddl
mov
imul
mov
test
sbb
xchg
sub
cld
mov
ror
mov
cmpsb
out
and
pop
pop
mov
pop
add
lcall
iret
dec
gs
out
push
mov
repnz
lock
dec
mov
mov
hlt
inc
adc
add
mov
mov
add
xor
ljmp
sbb
movsl
dec
mov
lock
xchg
lods
lds
add
out
xchg
xchg
sbb
sbb
ljmp
test
xor
bndstx
pop
sahf
out
ljmp
lret
pop
dec
ret
pop
mov
xor
lretw
cmp
sub
inc
int
adc
add
push
ret
mov
mov
in
enter
xchg
adc
in
out
sbb
fsubrl
pop
int
test
lods
xorb
jmp
shrl
mov
stos
popf
inc
add
mov
out
jne
xchg
mov
add
and
jg
push
rorl
jp
rorb
fimull
aad
push
test
sub
add
sub
xchg
jbe
rcll
repnz
mov
frstor
adc
es
leave
movsl
jbe
ret
les
pop
inc
test
jmp
call
stos
xchg
pop
cmp
xor
ss
int3
fisttpll
shll
cs
lret
frstor
fimull
enter
es
inc
fistl
cmp
movsl
in
out
loopne
push
imul
xchg
mov
jmp
xchg
inc
dec
mov
mul
in
and
in
loopne
sub
sub
rclb
orl
cmp
sbb
call
adc
pop
pushf
hlt
les
in
repnz
sub
or
xchg
sti
data16
sub
loop
cld
cmpsl
idiv
dec
sbbl
mov
push
dec
xor
cltd
je
sub
xchg
dec
xchg
and
push
mov
mov
call
repnz
aad
xor
or
xor
scas
pop
and
jge
aad
dec
ja
sbb
adcl
lods
dec
loope
imul
dec
cli
loope
xchg
cld
in
mov
xchg
aad
test
inc
mov
and
push
sub
push
nop
subl
mov
imul
pop
bound
mov
aad
xlat
dec
dec
ret
test
cltd
fdivl
add
icebp
pusha
scas
repz
mov
sub
mov
in
call
cmp
shrl
in
fsubl
out
pushf
pop
test
stc
pop
and
or
shll
imul
inc
movl
cmc
jbe
in
xor
loope
xchg
popf
sbb
or
sbb
stos
xchg
xor
pop
hlt
cmpl
push
sbb
mov
mov
pop
mov
sub
xor
iret
adc
push
aam
loop
les
mov
dec
pop
sbb
sbb
mov
inc
cli
pop
push
mov
mov
bound
lock
and
mov
jns
sti
mov
cmp
fsubp
push
mov
sub
mov
add
mov
push
insl
ljmp
hlt
into
lock
les
popa
mov
fsts
outsb
sbbb
mov
repnz
cmpsb
sub
cwtl
mov
std
out
mov
addl
add
xchg
fchs
xchg
cld
daa
rcl
push
iret
mov
push
add
jb
pop
sbb
mov
xlat
cmp
sub
inc
cmp
sahf
dec
fs
lock
or
ja
push
test
push
outsb
bound
inc
daa
daa
sub
xor
test
adc
sub
ss
loope
push
dec
push
bound
mov
or
inc
add
outsl
or
cld
ss
push
loop
or
pop
rorb
add
pop
dec
notl
int
pop
sub
jne
cwtl
jmp
mov
outsb
repz
mov
fnstsw
lret
in
stc
jno
fsts
sbb
push
roll
fldl
pop
xlat
sarb
pusha
cli
jne
inc
add
or
lds
pop
cmp
mov
jb
pop
fimuls
or
mov
cmp
cld
mov
aaa
out
jae
push
mov
xchg
cltd
sbb
push
js
mov
movsl
insl
pop
push
dec
pop
and
lret
ss
enter
in
push
xchg
mov
push
sub
loopne
lahf
movsw
les
pusha
or
mov
orb
jg
xor
cmp
lcall
xchg
outsl
and
xchg
icebp
and
das
test
cli
mov
in
mov
sbb
push
shll
scas
rep
js
adc
std
jge
pop
call
sbb
sub
xchg
sub
outsl
mov
ror
mov
mov
mov
lret
xchg
dec
lcall
jbe
xchg
mov
fs
or
les
xchg
movsl
cli
cli
fimuls
sbb
push
loopne
aam
sarl
gs
mov
js
nop
test
jae
or
pop
je
test
add
icebp
sbb
aad
adc
mov
ret
jns
cmp
int
pop
lods
pop
sti
jl
push
cltd
je
cmp
out
inc
sub
sbbb
xchg
pop
aam
sub
pop
das
add
movsl
repnz
mov
adc
or
cmpsb
push
fsubs
jns
sub
xor
out
mov
mov
int3
dec
dec
mov
nop
sub
int3
mov
ficomps
or
int
fstps
inc
mov
cmp
popf
addr16
jo
jmp
dec
popa
das
fstp
popf
imul
pop
dec
pop
and
out
and
and
nop
sbb
stos
fs
cwtl
rclb
inc
test
mov
out
test
jb
lock
fadds
dec
cmpsl
jno
pop
adc
out
pop
xchg
loopne
push
xlat
mov
cmp
dec
outsb
fcmovnbe
shll
ss
dec
cwtl
add
lret
dec
popf
push
dec
lea
mov
sahf
imul
sub
inc
push
scas
and
sub
cmp
inc
push
lock
push
test
gs
mov
ret
mov
add
test
das
jo
fwait
xchg
shr
fwait
movsl
ds
pop
push
repnz
lods
lahf
and
adc
xor
inc
push
stos
out
pusha
inc
cmpb
adc
xchg
and
fwait
push
pop
cmp
mov
xchg
fisubrs
mov
arpl
jne
mov
push
mov
nop
insb
mov
bound
push
xchg
jg
cs
mov
ret
lahf
jae
nop
out
jle
repnz
in
fisubs
aaa
fs
add
dec
mov
std
iret
popf
fbld
or
movsl
mov
test
cmp
mov
xchg
mull
sbb
mov
fs
inc
test
mov
add
adc
jb
add
cmpsb
mov
cmc
mov
push
aad
sahf
cmp
aas
loope
out
sbb
adc
mov
dec
out
push
mov
add
lret
stos
sti
pop
mov
je
js
xchg
sub
mov
inc
bnd
pop
outsl
xchg
decb
mov
or
cmp
loope
cmovl
fcoml
out
je
push
xlat
mov
out
inc
cs
mov
jbe
inc
into
cs
sarb
in
xchg
jo
mov
rcr
xchg
mov
sbb
in
and
jmp
pop
mov
sbb
cmc
pop
xchg
in
fs
aad
lret
push
add
or
push
mov
repz
mov
jmp
call
out
inc
pop
pop
sbb
or
cmp
adc
mov
mov
push
pop
roll
sbb
fiadds
ret
aas
fs
xchg
mov
loope
xchg
cwtl
xchg
dec
aas
enter
jb
mov
lret
pop
jnp
mov
jle
aas
jmp
mov
sbb
loop
pop
pop
or
xchg
shrl
das
jmp
clc
jns
insb
jl
or
nop
cmpsb
dec
mov
cmpsb
xchg
mov
fcoms
jge
dec
pop
js
enter
imul
daa
adc
pushf
rorl
stc
or
pusha
add
adc
imul
out
popf
pop
sbb
addr16
or
incl
mov
lock
mov
ret
xchg
popa
jge
inc
or
rcrb
push
insb
add
cmpsl
pop
imul
movsb
pop
inc
clc
mov
sbb
fldenv
js
add
popa
lods
adc
lahf
movl
ret
sbb
cmc
outsl
stc
test
mov
and
xor
bound
aad
and
loopne
jecxz
addr16
orl
cmc
aad
sbb
es
push
sub
stc
cmc
jecxz
and
sbb
cmpsb
sarb
xor
fmul
js
cld
shrb
loope
lods
sbb
sub
mov
add
fisttps
addr16
mov
stc
mov
bound
cmp
or
cwtl
add
push
aam
or
ja
mov
rorl
lret
xor
lahf
or
sub
int
pop
rol
mov
das
cmpsl
push
mov
cmp
pop
mov
repnz
lods
insb
xchg
sub
lahf
xchg
rolb
inc
jecxz
mov
pop
pop
mov
into
insb
jb
cld
push
lret
jp
ror
sbb
lods
add
cltd
mov
ficoms
inc
mov
icebp
mov
mov
in
cmc
xlat
cmc
jo
lds
iret
mov
cmp
inc
lcall
cmpsl
int3
subb
adc
adc
xchg
lret
push
add
inc
fadds
stos
xchg
div
or
cli
jl
out
rcll
rcll
int3
aas
fcompl
dec
jg
sbb
or
ret
mov
mov
xchg
jl
dec
and
push
outsb
mov
out
clc
in
shlb
add
jns
mov
xchg
out
xor
scas
push
int
test
mov
mov
stc
stc
arpl
arpl
cmp
out
push
add
mov
shl
push
hlt
inc
stos
mov
pop
xchg
or
and
lods
push
adcl
std
jecxz
lock
inc
dec
scas
loope
sbb
xor
push
adc
sarl
into
stos
dec
xchg
xor
add
push
jecxz
out
or
jno
movsl
adcb
popa
pop
push
ljmp
sbb
push
daa
mov
mov
cmp
add
mov
jl
xor
push
push
bound
mov
mov
xchg
repnz
cmpsb
loop
in
sbb
cwtl
stos
out
mov
fucom
xor
push
cmp
inc
loopne
jns
ja
rcl
scas
cmp
inc
jo
push
shll
dec
sti
xchg
sbb
loop
shrl
int
jae
mov
jb
lds
xor
xor
ds
or
call
inc
inc
jae
test
pop
lcall
jmp
sub
in
lea
xchg
xor
add
decb
pop
and
and
fs
pushf
cld
lods
pop
rorb
mull
ret
mov
js
out
xchg
orl
roll
fldcw
cmpsb
call
mul
fwait
insl
or
sbb
mov
cmp
mov
mov
xlat
or
sbb
xor
je
lea
jbe
stos
inc
negb
dec
gs
aad
xchg
stc
push
fidivrs
dec
cmp
adc
cld
lods
sub
mov
inc
popf
fmuls
adc
test
push
clc
pop
es
or
mov
and
jbe
adc
mov
jge
cmpb
gs
inc
ficoml
push
gs
mov
ds
adc
aam
pop
pop
es
shl
pop
addr16
repnz
mov
push
sahf
loop
jmp
sbbl
addl
movsb
xor
insb
test
mov
xchg
cmp
data16
push
jl
xor
mov
push
lock
sub
lds
test
dec
mov
test
push
imul
dec
clc
push
adc
push
cmpsb
mov
push
ds
add
in
cmpsb
lock
loope
push
add
shrb
sti
xor
cmp
pop
ret
ret
mov
sti
test
sub
xchg
xlat
aas
cs
rorb
hlt
jnp
cmpsl
subl
jmp
les
les
insl
enter
mov
lods
in
ret
clc
insb
mov
ret
mov
sbbl
xor
andl
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
cwtl
mov
loope
popa
bound
bound
pop
clc
and
and
and
mov
test
xor
dec
cmp
jecxz
lcall
push
jle
push
flds
add
fmull
les
or
sbb
lock
xchg
rorl
nop
and
ret
pop
cmp
xor
xchg
jecxz
bound
or
lret
or
or
xchg
outsb
stc
sub
xchg
adc
xor
roll
sub
inc
sub
hlt
push
xor
add
dec
pop
or
xchg
sub
cmpb
jns
int3
loop
mov
push
shl
push
mov
jl
mov
rcrl
or
arpl
loop
xor
xor
out
mov
pop
push
in
and
sbb
inc
pop
icebp
packuswb
ja
dec
clc
add
dec
push
cmp
jnp
and
sub
repnz
xchg
mov
cmpsb
mov
es
inc
add
idivb
xor
xchg
outsb
aaa
cld
int3
xchg
xchg
sub
push
pop
sub
fld
adc
dec
ret
pop
shr
aad
roll
xchg
xchg
sbb
pop
js
insl
mov
mov
sub
lret
or
loope
mov
es
rclb
ja
mov
shll
push
sub
xchg
mov
jmp
adcl
dec
loop
adc
push
or
in
jmp
xchg
sahf
jl
xor
into
dec
callw
loop
cmp
popf
mov
or
ret
jge
sub
int3
xchg
adc
xchg
and
push
mov
sbb
or
das
mov
mov
xchg
sbb
push
mov
jle
dec
adc
sub
xlat
out
lods
pmulhw
mov
mov
pusha
inc
add
nop
ret
jae
xor
dec
out
popf
out
add
jno
add
loop
cmp
sti
push
mov
jns
daa
loop
dec
inc
divl
cmp
push
pop
sbb
and
push
in
in
xchg
push
cmp
aad
cmp
cmp
jecxz
lds
dec
cmp
adc
ja
ljmp
xchg
add
iret
les
or
pop
push
mov
adc
cwtl
enter
test
lcall
cld
cli
xor
flds
out
mov
and
dec
xchg
loopne
mov
push
inc
int3
cmp
lea
add
arpl
jb
mov
jo
add
pop
xor
leave
add
xor
and
dec
pop
cltd
jo
or
cmpb
jnp
in
xor
mov
xor
dec
in
adc
lock
lea
sbb
cmp
stos
lods
addl
nop
sahf
subl
mov
push
sarl
pop
cld
pop
cmp
pushf
cs
leave
mov
mov
fs
push
imul
fwait
adc
gs
jl
mov
mov
inc
rol
xchg
test
addr16
mov
andb
inc
enter
xchg
cmp
or
push
pop
stc
addl
lock
mov
sbb
fbld
jno
pop
ja
push
pop
mov
lcall
dec
dec
cmp
cs
clc
and
sub
cld
push
out
out
cmpl
decl
jnp
and
sbb
jecxz
add
fildll
fcoms
jae
add
dec
mov
out
cwtl
mov
lds
ficomps
xor
enter
inc
clc
hlt
push
adc
scas
mov
xchg
xor
add
mov
jb
sarb
testl
dec
sbb
mov
push
add
mov
mov
lahf
pop
inc
mov
dec
mov
mov
cmp
imul
bound
aaa
pop
ret
aad
pop
test
shll
dec
hlt
mov
arpl
add
mov
inc
inc
mov
push
aad
sub
xor
and
lds
arpl
push
sub
lods
shrl
pushf
shlb
fcom
xchg
jno
sbb
xchg
fcmovnbe
rolb
imul
mov
inc
fimull
out
into
sbbl
mov
aam
sub
push
les
inc
xlat
inc
movsl
lock
mov
jmp
cmp
sbb
add
ja
push
mov
sahf
push
jmp
imul
or
iret
jb
fsubs
iret
dec
test
je
push
aaa
push
mov
mov
sub
ja
push
rcrb
call
dec
lret
mov
cmc
xlat
jo
sub
movsb
jb
mov
nop
stc
out
cli
pushf
imul
ror
dec
sbb
push
fsubs
mov
dec
inc
into
jno
js
jbe
add
jp
repnz
mov
add
pushl
jecxz
int
pop
lods
arpl
pop
mov
or
andb
push
in
jg
dec
iret
addr16
sbb
outsl
out
sub
mov
sbb
sahf
test
jne
jne
cwtl
call
rcrb
rclb
cld
lods
xor
adc
push
push
ret
jl
or
jbe
das
int3
pop
in
mov
sub
xchg
gs
cmpsb
out
add
repz
ss
arpl
loop
out
jg
mov
rolb
mov
repz
push
cmp
cld
xchg
xchg
jecxz
aam
rolb
mov
jae
mov
lahf
ja
cmp
jbe
les
fisttpl
adc
pop
lahf
push
sbb
cli
hlt
add
dec
add
pop
push
insl
dec
jae
sub
popf
ret
pop
repz
sbb
scas
push
shlb
xchg
stc
lret
mov
pop
shll
adc
fcomps
sbb
imul
loopne
scas
aas
movsb
out
mov
jp
jg
push
jae
nop
xor
or
jp
mov
dec
push
out
inc
lahf
into
push
jl
out
inc
and
ror
cltd
cmp
sarl
push
mov
and
push
xlat
cmc
scas
and
imul
xor
push
mov
test
or
xor
jp
fnstcw
lea
sub
sbb
xchg
dec
adc
loope
std
pop
out
loopne
jmp
es
jge
or
xchg
loopne
push
stos
pop
ret
shll
fsubs
js
jle
bnd
lea
ficoms
das
pushf
adc
mov
xchg
inc
adc
dec
xor
jmp
adcb
adc
out
mov
sbb
mov
adc
mov
pop
in
ljmp
movsb
sbbl
add
mov
mov
mov
sti
pop
popa
jnp
loopne
push
jo
in
jns
dec
into
mov
adc
mov
push
popf
fisttps
or
dec
rorl
xor
shl
popa
inc
mov
push
mov
add
dec
push
jbe,pn
data16
leave
xor
iret
negb
jno
jns
adc
mov
das
arpl
push
dec
dec
fidivrl
shlb
and
sub
shl
mov
xor
add
xor
outsl
insl
add
jmp
test
ljmp
pop
mov
es
dec
loopne
push
or
push
rolb
ljmp
or
les
std
xchg
in
outsb
aam
and
mov
and
outsl
subb
ds
push
dec
jl
inc
jbe
outsl
or
addr16
pusha
mov
hlt
pop
push
mov
fs
out
inc
sbb
xor
pop
cwtl
hlt
jg
sti
nop
lcall
mov
cmp
inc
dec
out
pop
je
rol
cmp
cmp
jp
insl
ret
sbb
lahf
lahf
fmull
iret
shrd
inc
test
lcall
jp
dec
inc
dec
push
jno
repnz
add
lds
adcb
repz
lds
stos
add
xor
dec
jbe
cli
popf
cli
cld
popf
mov
lcall
out
mov
sub
pop
flds
mov
inc
sarb
jb
push
sub
pop
in
xlat
int3
adc
mov
pop
add
repz
shll
mov
xchg
lods
jo
es
sbbl
pushf
icebp
sbb
int
fildl
pop
inc
mov
jge
fcomps
stc
test
je
pop
jnp
dec
mov
aam
xlat
test
je
or
sub
stos
xor
mov
cmp
mov
push
stos
or
inc
adc
nop
xor
cld
pop
in
mov
lods
jp
test
push
sbb
mov
add
dec
fnstenv
dec
mov
jns
push
rolb
mov
adc
pop
dec
cld
das
aas
add
pop
sbb
jns
xlat
mov
dec
imul
rcrl
adc
mov
cltd
scas
out
aam
das
jo
sbb
sbb
loope
mov
and
js
pop
loopne
sbb
ficompl
add
std
push
mov
add
in
movsb
ret
adc
and
scas
xchg
mov
pop
or
popf
xlat
mov
push
mov
mov
dec
pop
xchg
in
dec
inc
inc
imul
aad
mov
jne
lods
iret
stc
push
mov
mov
add
pop
rclb
outsb
nop
cmp
xor
sbb
fbld
mov
jae
loope
frstor
fisubrs
cmp
rolb
arpl
sbb
jmp
jl
adc
icebp
aad
inc
mov
mov
nop
addr16
add
in
inc
and
inc
mov
call
mov
aam
sub
push
ljmp
fs
add
xor
lock
dec
mov
fcompl
cwtl
mov
add
sub
das
popf
xchg
ja
mov
fs
push
cltd
imul
xor
sub
push
cmp
xchg
fcmovu
lahf
and
int
bound
mov
les
ret
mov
add
add
dec
sbb
enter
or
add
lea
aas
dec
out
mov
leave
in
add
mov
mov
in
pusha
test
xlat
add
je
call
in
aam
mov
cs
in
xchg
lret
addr16
sti
out
mov
and
insl
inc
cmp
scas
pop
sub
and
or
stc
jnp
add
shll
add
das
inc
dec
insb
es
andb
mov
in
jno
push
fbstp
fdivr
sub
adc
jb,pn
hlt
test
sti
mov
mov
jns
out
dec
sub
jmp
jbe
sbb
dec
shrl
stc
or
cmp
mov
fwait
xor
pop
pop
inc
xchg
and
rorb
xchg
call
pushf
in
xchg
sbb
arpl
adc
test
out
xchg
pop
fstpl
mov
sub
sub
into
xchg
mov
mov
arpl
push
out
stc
push
addb
dec
data16
js
gs
add
repz
shll
jmp
fcmovnu
insb
xchg
mov
movsl
mov
out
jecxz
inc
std
mov
push
sbb
or
xchg
pop
xor
dec
add
call
sbb
pop
inc
pop
mov
pop
imul
dec
arpl
mov
cmp
sbb
dec
push
mov
sbb
lahf
jo
cmp
push
mov
push
cmp
sbb
bound
test
mov
add
or
xchg
sbb
push
add
nop
pop
iret
in
adc
fcmove
mov
cmp
mov
xchg
jg
dec
ficompl
push
repnz
hlt
or
xor
push
or
lods
xor
mov
dec
mov
and
leave
pop
xchg
fildll
mov
add
cmpsb
xor
test
sub
test
sti
push
pushf
push
jge
mov
ss
xor
icebp
adc
out
inc
pop
rolb
mov
loop
stc
xor
icebp
push
jmp
addr16
mov
movsb
push
mov
cmp
xor
cmpsl
adc
es
repz
add
add
movsb
inc
xchg
sarl
bound
cmp
outsb
mov
mov
call
sbb
jp
mov
js
ret
mov
clc
imul
mov
add
stc
subb
add
lods
cmp
jno
pop
or
addr16
lock
into
sbb
fadd
outsb
sub
addr16
lods
imul
daa
sbb
and
icebp
sbb
push
out
fimuls
jns
cmp
mulb
fdivr
pop
int3
int
mov
inc
add
jg
jmp
and
jle
add
aam
mov
arpl
pop
or
or
jmp
and
push
inc
inc
inc
jp
movsl
or
orb
arpl
loopne
ljmp
mov
mov
xlat
mov
inc
push
fs
in
jb,pt
cmpsb
fiaddl
pop
mov
pop
jb
pop
scas
lahf
xchg
pop
and
int
cmp
add
js
push
pop
int
cmp
adc
pusha
les
xlat
jnp
mov
adc
imul
mov
push
negl
scas
cmp
aam
push
fstpl
imul
mov
mov
mov
xchg
loop
or
jle
mov
jmp
aad
or
arpl
into
adc
mov
out
in
cmp
movsl
pop
jae
pop
aaa
or
pop
stos
jle
fmuls
jmp
out
addr16
clc
inc
test
push
aad
faddp
lds
pop
cmpsl
jp
repnz
enter
push
sub
ja
sbb
jnp
insb
ror
mov
mov
ret
sbbl
push
xchg
lods
add
or
xchg
xchg
or
ja
and
jp
hlt
xor
aam
fwait
out
xchg
lret
stc
aas
imul
cwtl
sub
mov
pop
push
pop
enter
test
cmpsb
bound
jno
repz
jp
xchg
push
dec
sub
sarl
in
ss
ficomps
jge
dec
jbe
xchg
push
mov
add
push
jecxz
push
pop
pop
cmp
test
scas
imul
ss
lods
out
int
xchg
sbbl
add
pop
lcall
ret
imul
stc
outsl
insb
mov
loope
or
cmp
outsl
stc
into
fisubs
jge
jmp
loopne
divb
orl
int
aas
popf
mov
and
push
jae
pop
xchg
movsb
aaa
mov
mov
inc
lds
dec
mov
push
std
pop
xchg
inc
mov
out
fs
repnz
jne
dec
xchg
add
bound
xor
pop
pop
cmp
lret
jl
and
scas
mov
pop
nop
push
xchg
pop
pop
or
ret
add
in
mov
push
sbb
int3
and
call
dec
std
mov
mov
aad
dec
cmc
pop
ret
ljmp
cmpsb
mov
leave
dec
sub
mov
dec
ret
mov
lods
insl
mov
lcall
cmp
mov
jns
push
in
dec
pusha
jbe
add
mov
lret
out
in
or
inc
mov
sarb
or
mov
sub
mov
jl
inc
cmpsl
jp
xor
or
hlt
inc
ss
mov
jae
cwtl
xlat
jp
jle
mov
push
std
fwait
mull
sub
mov
push
add
sahf
pop
lods
pop
ficomps
pop
into
pop
jmp
cmp
xor
movq
pop
mov
pusha
adc
sbb
mov
idivl
mov
cmp
mov
cmpl
movsl
call
lea
loope
es
xchg
shll
aas
ja
jb
lods
or
push
jnp
movsb
sbb
push
dec
lods
adc
test
fldl
out
orb
clc
test
add
dec
ret
test
adc
insb
and
mov
lock
inc
cmc
push
adc
jb
pop
jmp
adc
and
inc
dec
ror
gs
test
inc
dec
inc
pmulhuw
std
rcrb
pop
or
repz
mov
sbb
cmp
or
dec
test
outsb
adc
imul
dec
pop
jns
dec
push
mov
mov
lret
cmc
adc
mov
mov
out
mov
out
add
repz
mov
daa
inc
shll
sub
aaa
jo
lea
add
mov
call
jmp
lea
or
sbb
pop
mov
test
pop
jbe
jp
xor
pop
and
mov
out
lcall
nop
pop
in
int3
jb
sbb
movsb
inc
inc
arpl
icebp
cmc
lea
mov
lods
icebp
jge
adc
mov
popa
mov
jmp
outsl
scas
adc
sti
adc
pop
imul
add
ss
sub
or
sbb
xchg
call
sbbl
xchg
mov
pop
cmp
jb
imul
into
stos
push
scas
jp
outsb
icebp
cmpsb
fnstcw
mov
outsb
mov
imul
test
mov
push
xor
xor
and
pop
push
or
adcb
shrl
add
mov
push
push
out
ret
or
scas
push
inc
cmc
mov
xchg
lds
jne
mov
inc
xchg
mov
cli
pop
roll
mov
popa
cld
mov
es
mov
lock
imul
sarb
popa
in
mov
negl
lret
movups
cmp
xchg
scas
sti
addr16
jb
movsb
mov
and
mov
jge
shr
pop
pop
addb
adc
mov
iret
sub
les
movsb
scas
testl
push
jle
inc
inc
clc
push
imul
mov
dec
cmp
inc
or
or
mov
add
int3
adc
loopne
inc
mov
les
jl
pop
cmpsl
insl
adc
mov
pop
pop
add
outsl
pop
js
mov
cmp
rorl
hlt
in
xor
pusha
mov
jl
dec
pop
mov
ss
insl
jmp
les
shll
mov
cmp
daa
cmpsl
rol
and
insl
mov
fdivrs
pop
inc
mov
mov
stc
aam
testb
sbb
enter
pop
cmp
jne
js
sbb
dec
cmpsl
jns
sub
jne
fildl
lahf
pop
xor
aas
fdivrs
sbb
divb
xor
jl
aam
cmpsb
and
xchg
pop
pop
lret
push
repnz
rcrb
test
jno
add
stc
bound
aas
pop
sbb
mov
repz
insb
ret
dec
mov
add
or
repz
es
movsl
sub
mov
fs
xorl
cmp
jns
xchg
in
or
push
and
fisubs
add
inc
cmp
add
adc
mov
and
clc
and
popa
arpl
call
test
ljmp
nop
dec
jno
icebp
mov
movsb
data16
mov
mov
mov
icebp
and
xor
pop
aaa
jge
adc
repz
xchg
fwait
xchg
push
pusha
cmp
add
jo
and
jp
sub
or
sti
stc
ljmp
jecxz
sub
pushf
pop
or
sub
insl
xor
loope
dec
rcll
sbb
insl
cmc
adc
jmp
push
or
xchg
lods
sarb
subl
xor
fbld
xchg
testb
push
push
loop
xchg
ja
or
ja
outsb
cwtl
cs
inc
xchg
arpl
dec
mov
cmp
fwait
or
xor
add
pop
loopne
fwait
mov
dec
clc
lds
and
xchg
sbb
out
xchg
flds
cmp
cld
adc
dec
xchg
cmp
jge
mov
into
xchg
mov
jmp
xor
mov
add
xor
push
add
sbb
leave
sub
fcmovu
test
add
arpl
cld
lods
arpl
sahf
xchg
xor
dec
mov
iret
mov
ja
sub
and
xchg
pop
lcall
int3
xlat
adc
shll
push
xchg
out
pushf
out
in
xor
enter
sbb
mov
and
cmp
dec
divb
in
pop
xchg
cmpsb
or
shrb
leave
js
or
cmc
add
in
sbb
mov
test
paddsb
sahf
mov
fs
jae
cmp
stos
pushf
iret
bnd
xor
loopne
sbb
rol
negb
fwait
jmp
add
cwtl
fwait
ja
cmpsb
or
jnp
in
jns
fsubrl
sahf
cmp
lcall
mov
or
and
cwtl
shrl
add
aad
in
test
xor
loop
test
add
call
jle
sub
xlat
xchg
cmpsl
vmwrite
pop
lret
sub
sbb
popf
cmp
leave
in
mov
jl
aad
jle
nop
sbb
shll
inc
or
insb
push
xchg
xchg
push
inc
sbb
cs
lock
jnp
mov
popf
loop
mov
sbb
and
int3
xlat
insb
fcoms
aam
xchg
push
imul
mov
push
sbb
pop
sbb
insb
dec
mov
fs
cs
and
push
in
mov
and
jmp
clc
mov
xchg
popa
and
fnsave
js
mov
cmc
fisubrl
in
mov
ja
stos
movsl
mov
sbb
testb
ret
xor
cmc
loop
in
add
mov
pop
jmp
cmpb
jle
fwait
dec
pop
pop
sar
lahf
sbb
or
fcoms
add
test
test
xlat
pop
scas
push
call
jae
push
pop
mov
sub
jle
aaa
repnz
mov
ljmp
xchg
xor
or
mov
xchg
push
dec
aas
mov
jp
add
jo
lret
xchg
xchg
sti
jb
ret
mov
outsb
add
adc
xchg
mov
test
and
shlb
aam
test
test
pushw
addl
mov
inc
je
mov
aas
pushf
nop
cmpsl
mov
rcrl
pop
xchg
jmp
sar
rolb
out
dec
repz
xchg
adc
cmp
sbb
loope
fistpll
sub
mov
fwait
in
ljmp
jne
jbe
mov
pop
inc
inc
repnz
xchg
bound
outsl
rcll
cmp
popf
imul
mov
sbb
and
push
out
xchg
jne
push
mov
cld
sbb
ret
inc
les
sub
jecxz,pn
inc
lahf
enter
sbbl
enter
jg
xchg
and
xor
popa
pop
inc
xorb
addr16
cmp
or
inc
mov
mov
lcall
lea
add
das
mov
sbb
sub
pop
mov
dec
ret
into
cmp
mov
fisttpl
insl
dec
cltd
jne
aas
cmp
mov
addb
pop
ret
fwait
popf
jge
sbb
lcall
adc
push
mov
pop
movups
dec
lahf
sarl
pop
xchg
scas
lret
sub
mov
push
ljmp
sub
adc
inc
fcmovbe
pop
movsl
std
jge
mov
out
mov
cmp
neg
adc
push
mov
inc
push
pop
mov
sarb
negb
adc
jno
lods
inc
pop
and
dec
sti
jle
mov
jo
pop
add
sbb
push
test
rolb
dec
test
mov
xor
pop
sbb
pop
push
add
sub
ret
adc
in
xor
dec
or
fmul
int3
lea
out
push
and
push
adc
jge
mov
xchg
xchg
jae
aam
and
imul
mov
ss
sbb
dec
int3
or
shl
in
mov
test
push
xchg
dec
hlt
cmp
mov
pop
pop
inc
fmull
sub
jle
test
dec
and
push
fbstp
mov
adc
sbb
pusha
gs
movsl
aam
pusha
lcall
idivl
cltd
adc
sub
outsl
mov
or
push
xchg
mov
sti
mov
pop
dec
into
inc
addl
push
jns
xchg
dec
popf
xor
loopne
or
insl
aaa
test
scas
pushf
js
into
scas
jge
cmp
divl
adc
pop
add
bound
jge,pn
aas
cld
repz
jbe
cltd
cmpsb
pop
insb
mov
pop
lcall
inc
popa
sub
imul
jae
cmpsl
mov
add
push
aam
mov
outsb
adc
or
sti
fs
sbb
mov
loopne
mov
xor
clc
gs
lret
cmp
arpl
inc
test
sbb
addr16
add
sub
lods
pop
pop
test
mov
jo
insl
pop
xor
daa
jo
xlat
xchg
inc
inc
jecxz
gs
pop
popf
cli
inc
adc
dec
arpl
jmp
push
mov
add
push
cld
push
push
jg
and
jg
mov
jno
mov
lcall
sbb
xchg
dec
rolb
mov
push
fs
cmp
xchg
inc
dec
and
inc
aaa
jmp
jb
dec
inc
dec
push
and
cs
add
aas
pop
cmpsl
or
sub
push
inc
mov
mov
aad
mov
sub
les
ficompl
mov
pop
jb
roll
addr16
xor
mov
push
or
push
and
mov
push
jmp
stos
call
adc
test
arpl
js
fcomps
loop
cld
push
test
scas
adcb
test
iret
or
stos
inc
dec
jno
hlt
inc
mov
push
mov
dec
in
xor
add
call
inc
divl
lret
adc
push
fwait
inc
pop
mov
push
stos
jge
jp
daa
lods
mov
dec
lock
xchg
jnp
pop
in
movsl
mov
push
testl
push
push
imul
loope
cmpsb
inc
pop
in
xchg
leave
cmp
cmc
add
stos
jp
adc
mov
push
push
dec
scas
xor
stos
in
call
pop
sbb
dec
ljmp
outsl
int
jns
lods
pop
or
sub
xor
cwtl
scas
lret
sbb
push
movsb
mov
xor
stos
pop
xor
imul
jle
push
jns
cmp
xor
sbb
xorb
pop
arpl
das
mov
popf
xlat
shlb
xchg
mov
dec
mov
loopne
xor
and
shlb
jnp
xchg
movsb
loopne
push
addl
xor
pop
es
outsb
mov
into
adc
adc
mov
outsl
mov
mov
mov
imul
movsb
inc
push
stc
iret
push
test
push
push
pushf
add
jp
dec
nop
and
out
aad
jle
inc
rorb
and
out
pop
fdivrl
icebp
adc
stos
mov
add
mov
pop
or
mov
inc
lea
insl
test
sub
ljmp
add
cwtl
jae
pop
pop
pop
adc
call
stos
lods
jnp
popa
pop
dec
in
les
rorl
enter
cmp
fs
mov
mov
rcrb
mov
loop
inc
addr16
lods
push
pushf
mov
mov
push
mov
inc
sbb
push
mov
clc
mov
mov
int
pop
pusha
cld
mov
mov
in
push
repz
je
xor
shl
pop
stos
mov
sub
sbb
rcrb
jge
xor
mov
sub
xchg
loop
rclb
sar
dec
je
ljmp
mov
and
inc
jp
push
ja
cmc
cld
repnz
jae
push
mov
fisubl
lods
stos
sahf
cmc
or
or
mov
cmp
sub
lods
jl
cmp
cmp
testl
loop
std
push
es
xchg
xchg
push
push
dec
stc
shl
xchg
sbb
fidivs
stos
leave
dec
jo
xchg
mov
ret
push
sub
inc
jno
and
out
push
jl
pop
sbb
aad
push
jb
mov
sbb
int
int3
dec
sbbl
mov
mov
xchg
clc
mov
js
xchg
push
inc
xor
test
sub
jg
lods
subl
mov
lahf
sub
andl
lock
adc
fadd
aad
adc
xor
notb
mov
adc
jle
push
push
push
clc
mov
lods
mov
mov
pop
or
add
jns
loop
arpl
dec
int
ret
push
iret
cmc
mov
add
ljmp
std
sbb
push
jl
rcl
pop
cmp
xchg
imul
xor
inc
mov
pop
xor
and
cmp
jae
not
sarb
dec
loopne
mov
mov
dec
mov
scas
icebp
xor
loop
and
mov
pop
pop
adc
mov
mov
hlt
xorb
imul
out
mov
in
daa
in
push
scas
inc
mov
jnp
jmp
inc
loop
jle
push
mov
mov
cmpsl
outsl
daa
cld
xchg
mov
sbb
pop
cmp
push
sbb
cmp
push
and
gs
jns,pn
js
xor
fbstp
flds
mov
jl
leave
out
rcrb
sahf
add
push
and
xor
outsl
mov
fmulp
sahf
sti
adc
ja
shll
in
aaa
loopne
pop
adcb
inc
hlt
loope
cmp
popa
xor
insb
mull
lds
rcll
jno
add
cwtl
movsl
xchg
pop
les
or
mov
dec
mov
pop
dec
rcr
sahf
gs
adc
xchg
cmpsl
or
fists
mov
push
xchg
test
mov
or
addb
jmp
adc
loope
add
out
jp
daa
push
sub
aad
pop
or
arpl
xor
rcrb
adc
sbb
xchg
imul
and
jle
addr16
xlat
scas
cs
or
xchg
gs
mov
sub
pop
ss
push
data16
sub
adc
fistpll
int
lods
out
lcall
loop
adc
in
inc
mov
stc
cmp
mov
dec
mov
scas
nop
fwait
jns
les
int
nop
icebp
cmpsb
enter
ret
dec
shr
outsb
pop
test
icebp
jle
repz
xchg
sub
jge
jecxz
or
fsubrl
out
imull
push
mov
outsl
lock
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
pushf
cmp
fisubl
add
bound
mov
cmpsl
xchg
xor
jl
inc
imul
jge
cmp
imul
push
hlt
mov
lock
dec
push
flds
cmp
loope
mov
pop
pop
mov
loope
orb
sub
lock
fwait
push
clc
cltd
pop
xchg
add
bound
outsb
test
and
test
jmp
jg
out
dec
inc
mov
mov
mov
dec
jmp
jb
pusha
stc
imul
jp
pop
fstp
in
cmpsl
lock
mov
clc
pusha
aas
jo
cli
sbb
scas
push
movl
sahf
movsl
ja
fwait
aaa
inc
scas
out
cltd
adc
in
roll
negl
cmp
sbb
cmc
mov
das
jns
add
scas
cmp
jle
ds
shlb
xor
fisttps
mov
xor
xor
mov
and
and
fmuls
mov
jo
inc
push
clc
sti
push
aad
ret
jg
fsubrl
or
jo
jno
pop
call
add
js
mov
add
xchg
dec
pop
or
stc
stc
pop
dec
aam
xchg
jge
fbstp
out
xlat
push
push
pop
lods
ss
int3
push
sub
fldlg2
cmpsb
lods
rcrl
in
adc
stc
insl
mov
inc
outsb
and
dec
adc
insb
rorb
mov
shr
xor
stos
jmp
in
repnz
insl
dec
nop
jne
mov
cmp
sbb
aas
mov
aaa
xchg
test
xchg
hlt
or
add
outsl
insl
cli
pop
orl
push
mov
mov
scas
push
push
daa
push
or
push
loopne
mov
daa
mov
rcl
xor
and
and
xlat
adc
push
pop
mov
mov
add
sar
xchg
iret
popa
mov
cmpsl
push
inc
popa
xor
out
xchg
xchg
push
std
inc
ljmp
cmpsl
jp
jecxz
jnp
and
imul
fucom
outsb
pop
jbe
int3
pushf
dec
add
aam
cmp
cltd
bound
ficoms
cmp
jmp
adc
xchg
push
cmc
mov
bound
arpl
xchg
or
lods
addr16
sbb
addr16
mov
or
add
hlt
aam
jo
stos
mov
loopne
sub
cmc
call
push
and
inc
pop
xor
out
mov
xchg
stos
mov
mov
mov
mov
es
hlt
mov
pusha
inc
add
xor
mov
sub
xchg
repz
mov
mov
dec
sti
xor
cmp
add
adc
adc
mov
das
decb
jg
cmpsl
adc
pop
cmc
into
jle
inc
xchg
xor
fistps
and
arpl
and
sub
sbb
test
xchg
cmpsb
jl
mov
repz
fwait
rcll
jp
xchg
lret
out
sbb
lahf
popf
stos
aaa
and
cmc
ja
xchg
es
push
add
inc
es
in
pop
push
xor
xor
outsb
dec
push
int
push
xor
add
test
push
notb
mov
sbb
movsb
das
lds
cs
inc
outsb
loop
xchg
and
lods
sub
divb
mov
mov
popf
adc
ja
xchg
adc
xlat
rolb
shl
les
push
cmp
int
push
jbe
sbb
pop
xchg
nopl
mov
leave
imul
fistpll
mov
clc
fildll
jbe
push
lock
cmp
push
test
pop
sbb
sbb
rcrb
or
fidivl
xchg
into
fsts
gs
jl
sbb
sbb
add
lretw
fisubrl
and
cld
std
mov
mov
mov
cs
in
xchg
in
add
call
jp
pop
stos
adc
popa
sarb
insl
ret
arpl
sbb
pop
test
xchg
rcrb
idiv
inc
xchg
cld
shrb
in
push
xchg
lret
loopne
cmp
pop
dec
mov
push
stc
xorl
loopne
sbb
push
pop
dec
in
shll
push
out
sub
cmp
fwait
push
pop
call
jne
jnp
pop
sub
enter
xor
test
lods
lds
sbb
repz
aas
fldcw
mov
mov
push
ss
outsl
ds
push
dec
jno
add
xor
sbb
andb
adc
xchg
add
ret
inc
insb
mov
dec
mov
icebp
je
push
in
pop
fcomps
cmp
mov
ljmp
outsb
sub
fwait
rolb
test
mov
fistl
mov
push
push
lret
sbb
lahf
dec
ja
mov
stc
stos
ds
clc
and
jmp
je
inc
lahf
outsb
stos
clc
jecxz
push
push
out
push
in
mov
jge
add
jns
mov
push
xor
jmp
orl
call
mov
xlat
lret
dec
jnp
push
or
xchg
adc
adc
sbb
or
in
sahf
jg
push
dec
xor
in
xchg
ret
enter
sbb
sbb
cmp
lcall
push
fbstp
loop
and
sar
test
jge
push
in
sub
inc
cmpsl
cmp
mov
jmp
lea
lods
sub
jecxz
repnz
nop
hlt
dec
mov
mov
adc
pop
pop
mov
cs
pop
lods
jnp
xchg
xchg
insl
aam
pushf
add
xor
aaa
mov
cmp
or
imul
xchg
gs
dec
shlb
ret
in
mov
sub
sub
xor
sarb
icebp
insb
push
fildl
lcall
bound
fdivl
dec
ss
bound
jne
push
out
int3
fs
cmp
pop
cltd
icebp
or
mov
aad
sbb
cmc
sub
push
imul
push
sub
lret
mov
fiaddl
push
push
aam
out
testl
les
pop
jecxz
hlt
lods
mov
lock
jle
push
push
mov
add
ret
test
mov
testb
pop
xchg
cmp
fbstp
leave
hlt
lods
jg
in
fwait
repz
add
jne
imul
insl
mov
lock
xchg
addr16
adc
popf
sbb
lahf
hlt
dec
scas
ret
imulb
ja
test
adc
fmull
cmp
push
scas
sysexit
inc
inc
xchg
xor
and
lret
call
scas
xchg
out
mov
mov
sub
lods
stc
add
cltd
out
jno
in
scas
ds
mov
and
add
lcall
mov
mov
jmp
mov
adc
cld
rcpps
jg
fiadds
or
mov
and
out
jno
mov
sub
pusha
stos
push
cmp
ja
cmp
repnz
jbe
dec
stos
scas
mov
xchg
rclb
push
inc
cmp
lds
fcmovnu
fsub
and
lds
imul
jne
cmc
xlat
std
addr16
or
add
mov
cmp
mov
jmp
scas
mov
mov
out
sbb
inc
test
pop
stos
loope
das
mov
mov
push
cmp
jp
xchg
xor
jno
cmc
jmp
pop
sbb
cmc
imul
xchg
lock
dec
bound
or
imul
add
add
cmp
mov
rcrb
jbe
inc
sar
ljmp
dec
jl
cs
insb
int3
mov
data16
xchg
mov
mov
push
mov
fwait
push
adc
mov
roll
aaa
rorl
lods
adc
push
out
xchg
push
or
mov
cmp
push
mov
aas
xor
in
es
cs
cmp
xor
push
aaa
adc
adc
in
mov
shlb
mov
insb
and
push
push
or
clc
mov
mov
mov
inc
cmp
std
ja
push
mov
jl
add
leave
inc
mov
fstl
adc
cmp
sti
movsb
lea
cld
push
sbb
jns
or
lea
push
js
ds
mov
pop
mov
imul
int3
sti
dec
mov
loopne
call
fcmovnu
mov
lods
lock
sbb
insb
sbb
add
andl
fisubl
mov
jp
add
loopne
fs
stc
inc
add
pop
js
push
negl
bound
rcr
data16
push
cmc
adc
or
cwtl
ss
sub
ret
cmpsb
mov
jnp
in
push
repz
test
adc
mov
mov
mov
sbb
stos
repnz
fldt
arpl
xchg
lods
add
lods
xor
outsl
sub
out
scas
dec
in
ljmp
roll
adc
orl
daa
mov
dec
adc
int3
jecxz
mov
add
arpl
jb
jne
mov
repz
dec
inc
dec
push
les
jl
inc
xor
andb
daa
push
mov
pop
mov
je
lcall
or
sbb
repnz
aad
scas
dec
in
pop
mov
stc
mov
nop
jns
add
mov
lret
mov
imul
push
sti
dec
sub
cld
cmpsl
push
inc
pop
inc
mov
xchg
xor
mov
out
fimuls
gs
shl
mov
mov
dec
sub
loope
jg
mov
jl
and
dec
outsb
movsl
dec
cmp
or
push
cmp
daa
in
lret
and
or
sbb
rclb
dec
or
and
or
cmpb
mov
pusha
jbe
in
xchg
xor
aam
and
mov
subb
mov
shlb
lahf
xchg
mov
je
mov
mov
pop
out
hlt
or
sbb
xchg
gs
mov
int3
mov
enter
in
mov
out
mov
push
mov
idivl
roll
inc
mov
mov
push
add
mov
outsl
js
outsb
nop
xchg
bound
xor
push
mov
pop
mov
push
pop
sahf
pop
xlat
lea
cmp
loop
sar
and
fistps
enter
jp
mov
dec
mov
scas
lea
adc
fcoml
xor
mov
push
aas
popa
mov
cmc
xorb
pusha
ja
and
adc
inc
mov
cmp
add
scas
fistl
out
shr
rcl
mov
pop
xchg
gs
das
add
xor
push
clc
lret
stos
fcmovu
inc
sbb
inc
sub
ret
xor
inc
aam
in
push
aad
jb
dec
dec
aam
mov
cld
sbb
cmp
out
subl
and
adc
hlt
cmpsb
sti
xchg
shlb
lahf
aaa
out
xchg
dec
mov
ljmp
ret
int
add
fs
scas
in
daa
pop
dec
sbb
xor
mov
cmpps
fnstenv
ret
jae
lahf
sti
movsb
mov
daa
lret
push
inc
and
rcll
lods
push
adc
leave
loopne
pop
mov
dec
imulb
imul
fistpl
daa
ss
lds
lret
mov
stos
pop
mov
xchg
adc
add
sbb
sahf
or
jg
pop
mov
xor
sub
or
jae
xor
mov
mov
inc
das
push
stc
cmp
mov
xor
adc
gs
pop
shlb
hlt
std
das
adcl
std
mov
scas
mov
cmp
aam
cmc
and
repz
sub
mov
mov
or
mov
fmul
fidivrs
sahf
fimuls
fildl
lock
out
mov
xor
les
or
imul
andb
in
scas
pusha
xor
pop
xor
std
jecxz
rolb
std
stos
fdiv
push
push
fneni(8087
adc
pmaddwd
inc
xor
fcom
jp
xor
dec
shl
xlat
cld
mov
mov
add
insb
or
xchg
stos
inc
ss
jb
int
add
mov
add
xchg
dec
adc
dec
or
leave
push
push
outsb
pop
ja
or
dec
stos
inc
cwtl
pop
les
mov
and
fincstp
pop
jg
fidivrs
loopne
mov
ljmp
pop
lods
jno
adc
inc
ja
push
xchg
leave
dec
scas
mov
aas
mov
push
fnsave
push
push
repnz
daa
xchg
sti
jbe
fisttpll
mov
and
inc
mov
pop
ss
lods
push
mov
dec
shrb
arpl
insb
sbb
dec
lods
into
out
idiv
and
ss
push
lret
pop
stos
bound
mov
cmp
jmp
loopne
dec
jecxz
shll
xchg
fistps
dec
and
insb
push
dec
and
nop
inc
lock
cmc
dec
cs
es
lods
xchg
rorb
mov
dec
push
imul
in
out
js
mov
loopne
or
mov
loopne
pop
movsl
pop
mov
or
shrb
pop
pop
arpl
call
sub
or
lods
mov
or
jnp
sbb
inc
loope
gs
xchg
push
fldt
push
and
pop
outsb
add
ret
movsb
sbb
sahf
cmp
into
mov
fbstp
jle
mov
test
mov
ljmp
adc
in
add
push
push
jae
xor
push
ljmp
js
xor
push
push
mov
in
jl
rcll
mov
aaa
lcall
arpl
sbb
dec
movsl
or
push
sub
mov
mov
scas
pop
pop
ret
jnp
xor
mov
adc
aaa
dec
jo
pop
push
lea
inc
iret
idiv
daa
xor
mov
cli
addr16
js
cld
cmpsb
sbb
scas
fsubs
mov
pop
dec
or
ja
mov
sti
jbe
mov
test
sub
std
push
cmpsl
mov
xor
popf
imul
ljmp
pop
and
scas
fdivl
dec
outsb
xchg
add
pop
add
scas
jge
movsb
mov
and
pop
inc
das
jne
add
mov
or
pop
test
into
mov
daa
aad
rolb
add
mov
sarl
jns
enter
cwtl
sub
imull
scas
stos
adc
loop
int
push
inc
jl
and
mov
cmpsl
outsl
imul
out
mov
mov
mov
mov
push
cmp
pop
mov
out
testb
xor
mov
xor
fstpl
push
or
mov
pop
loopne
xor
stos
mov
rorl
lds
push
jg
xor
dec
jmp
add
xor
pop
cmp
lods
ret
cmp
insb
adc
cwtl
hlt
in
xchg
lock
jmp
adc
xchg
cmp
enter
xchg
out
out
push
ljmp
mov
in
jmp
enter
xchg
jp
inc
scas
cmc
add
and
je
adc
je
push
and
data16
int3
fisubs
test
adc
jno
xor
sbbl
cmc
test
movsl
xor
add
test
rorl
lea
sub
pusha
out
lock
push
lea
out
mov
loope
mull
aas
mov
and
call
mov
ds
dec
cmp
pop
fwait
mov
leave
xchg
mov
lret
or
mov
adc
xchg
cmp
filds
fwait
add
cmpsb
test
xchg
pop
jo
ret
lock
xor
jecxz
adc
pop
push
mov
das
pop
das
adc
xorb
pop
push
imul
in
or
das
test
jle
cli
scas
or
add
inc
sbb
xchg
aad
shll
push
push
outsl
lds
jno
pop
popf
pop
pop
cmp
add
out
fwait
enter
sub
inc
in
mov
movsb
push
pop
push
dec
pushf
lods
hlt
out
cli
or
ret
pop
mov
push
enter
loopne
push
xchg
in
iret
stos
into
test
fstpl
xchg
jg
xor
mov
inc
mov
adc
inc
icebp
dec
or
je
jne
ja
add
pop
mov
and
lahf
mov
mov
or
sub
cmp
xor
add
adc
push
mov
inc
outsl
jo
lcall
push
push
or
pop
sbbl
je
lea
adc
sbb
mov
in
sbb
xorb
movsb
sub
sub
sbb
lds
pop
in
ficompl
xor
call
addb
push
out
movsl
std
fnstenv
push
scas
adcl
adcb
popf
mov
movsl
xchg
inc
shrl
jp
pushl
xor
cmp
scas
movsb
xchg
repz
ds
push
mov
xchg
ljmp
push
into
inc
lret
and
jne
popa
mov
les
das
pusha
push
add
sbb
mov
add
adc
std
adc
xchg
sub
iret
mov
inc
or
push
mov
sub
fsubp
sub
cmp
in
gs
jp
jmp
pusha
cld
aas
sbb
jg
push
popf
mov
ljmp
mov
and
mov
adc
ljmp
mov
ret
outsl
pop
fmuls
sub
and
and
or
test
leave
and
vpcomq
mov
inc
or
mov
pop
gs
cmp
inc
test
pop
jnp
push
scas
ljmp
mov
mov
xchg
in
loopne
jnp
daa
test
dec
rorb
repz
or
loop
pop
pop
imul
cltd
mov
push
add
pushf
repz
imul
outsl
push
cwtl
insl
ret
pusha
jge
xor
vpacksswb
jecxz
test
pop
cmp
es
and
add
xor
mov
pop
ja
jp
and
add
add
movsb
mov
xor
incb
sub
jmp
cwtl
mov
rclb
js
clc
ljmp
sub
cmc
into
xor
lret
push
stc
and
dec
pop
or
adcl
dec
das
inc
imul
in
pop
fisubrs
aaa
adc
fisttpll
lods
mov
xor
addr16
shld
loopne
out
aad
cmpl
insl
out
jg
xchg
cmpsl
cmpl
adc
iret
sbb
jl
dec
jp
test
add
popf
mov
outsl
dec
cmp
push
jbe
push
xchg
pop
mov
lret
mov
arpl
repz
push
lahf
arpl
add
sub
jne
fdivs
push
sub
pop
cltd
ficoml
xchg
mov
sub
push
mov
pshufw
jg
sub
sahf
hlt
cmp
sbb
div
and
enter
sbb
inc
pop
cmc
stos
pusha
cli
xor
int
jmp
push
iret
adc
cmp
or
stc
outsb
aaa
mov
sub
fs
out
es
pop
sbbb
jb
pop
mov
inc
mov
mov
popa
daa
aam
dec
repnz
push
mov
mov
xlat
nop
jmp
jnp
ljmp
and
lods
in
and
cwtl
xchg
pop
pop
sbb
shl
movsl
sbb
cmp
mov
imull
mov
xchg
insb
jb
dec
mov
push
add
xor
sub
inc
cmp
mov
loopne
or
ss
ss
cmpsb
pop
sbb
pop
fs
jl
add
or
test
and
cmp
and
cmp
sbb
add
adc
mov
into
adc
hlt
sub
xchg
and
add
lds
ret
out
push
mov
cwtl
push
inc
jg
push
jnp
repz
jae
xor
adc
arpl
test
sub
xchg
xor
mov
inc
out
pop
int3
inc
and
leave
or
fs
pop
mov
inc
sbb
xchg
cmp
mov
dec
inc
test
mov
pop
mov
mov
pusha
sub
and
mov
inc
push
rclb
dec
inc
sbb
clc
idivb
push
ja
std
jb
xor
pop
das
inc
add
dec
and
in
aad
insl
ja
sbb
dec
push
out
add
insl
xchg
in
mov
or
pop
loop
inc
mov
test
adcl
nop
loope
insb
sub
dec
pop
stos
adc
nop
cmp
clc
mov
mov
push
adc
mov
xlat
push
xchg
sub
push
push
flds
fistl
rolb
push
fwait
mov
add
imul
jmp
ret
and
fidivl
push
cmpsb
and
inc
dec
aas
scas
in
scas
pop
pusha
pop
popf
dec
mov
stc
and
cltd
dec
lret
fcomp
loop
aaa
cmp
cmpsl
out
add
das
aas
ret
adc
xchg
pop
sti
adc
daa
cmp
and
loop
and
popf
add
negl
test
out
loope
xchg
jb
inc
std
pop
xchg
pop
add
mov
or
and
inc
lret
rsm
fimuls
mov
dec
push
into
jp
or
sbb
decl
mov
xor
inc
sarb
xlat
aam
repz
and
test
mov
call
stos
out
jge
push
leave
cmp
test
outsl
xchg
xchg
sbb
xchg
inc
addl
outsl
inc
cli
enter
and
add
inc
pusha
cmp
pop
cld
cld
mov
add
insb
xchg
fdivs
movsl
shrb
in
xorb
add
inc
cwtl
scas
inc
and
daa
out
subb
fsubl
jmp
lds
popf
ds
push
mov
cmpsb
mov
mov
gs
push
adc
arpl
inc
in
pop
jp
out
aaa
mov
insb
ret
add
adc
or
xchg
aaa
repz
je
xor
jge
jp
jb
loopne
pop
mov
xor
push
push
mov
out
cmc
or
lea
sti
push
push
xchg
rcrb
pop
leave
mov
mul
mov
push
mov
cwtl
jbe
xor
addl
sbb
int
outsl
and
out
and
sbb
lret
jmp
dec
pop
mov
mov
sbb
dec
add
mov
mov
fst
orl
mov
lods
cwtl
push
mov
sbb
mov
lea
sub
mov
pop
out
faddp
sub
push
adc
xchg
je
sub
in
lds
dec
scas
jne
sti
cmp
push
insb
push
and
aam
lds
mov
ficompl
insl
inc
jmp
andl
lock
add
push
xchg
pop
pop
adc
mov
jge
cmpsb
mov
les
jae
and
mov
push
mov
icebp
pop
loop
ss
mov
loopne
js
iret
add
fcompl
and
ja
int
divb
xor
dec
and
mov
jo
and
gs
bound
dec
xchg
icebp
adc
fucomi
xchg
loop
sbb
rorb
sbb
xor
ficompl
inc
je
adc
aas
iret
push
andb
sub
cmc
leave
into
and
into
aas
mov
mov
jno
jge
xchg
fwait
mov
test
or
out
push
pushf
xor
aam
arpl
xchg
in
gs
adc
sub
mov
gs
ret
loop
repz
insb
clc
stc
mov
call
pop
mov
cmpsl
push
jle
or
notl
imul
cld
or
fisttpll
jl
in
scas
lods
mov
push
jnp
lret
dec
mov
ds
lds
lret
jg
mov
aaa
inc
cmpsb
clc
push
jbe
int3
movsb
mov
pop
push
fidivs
sahf
mov
mov
jo
or
mov
fwait
push
dec
je
adc
pop
sbb
out
popf
lods
adc
mov
xchg
es
push
lds
arpl
pop
aas
jg
lock
addr16
jmp
xchg
addr16
mov
call
pop
xchg
pop
fs
adc
push
cltd
call
cmpsb
mov
loopne
movsb
cli
push
lock
inc
popf
dec
and
add
inc
add
shrb
imulb
stos
nop
aad
pusha
lret
push
imulb
jb
mov
cmp
stc
dec
xor
jmp
sub
xor
pop
xchg
adc
jmp
jge
incb
push
mov
fdivl
add
add
dec
fstpt
cmp
inc
or
xchg
lods
shr
or
sbb
rolb
lock
shll
inc
das
in
sub
fs
repnz
js
andb
sbb
mov
or
jle
ja
fistl
jg
pop
inc
or
or
add
pop
or
inc
cmp
xlat
sti
pop
xor
and
fisubs
inc
in
pop
orb
xlat
and
mov
fisttpll
pop
add
add
xor
lock
sub
add
xor
inc
add
ss
sbb
out
cmc
or
xchg
data16
cmp
mov
xchg
jne
cmc
jns
dec
sub
push
inc
addr16
out
jae
mov
fidivrs
out
push
sbb
add
or
adc
fwait
dec
clc
fisubrl
push
pop
sub
mov
sub
xchg
sub
fmuls
add
sbb
jg
push
cltd
mov
aaa
shll
push
xchg
test
or
mov
xchg
loope
dec
add
xor
ficoms
mov
lods
cmp
cmp
pushf
jl
iret
jns
cmp
pmullw
sub
loopne
pop
pop
dec
or
cmp
mov
fistps
push
mov
cmp
pushf
test
cmp
int3
add
push
daa
dec
cmp
push
idiv
or
sbbl
pop
les
xorl
adc
popf
popf
arpl
mov
xchg
inc
xor
testb
std
jbe
bound
clc
jp
sbb
loope
or
xchg
and
into
sub
mov
ja
inc
pop
mov
mov
dec
mov
sub
adc
out
scas
insl
lds
adc
jnp
adc
pop
adcl
fs
pop
decb
xchg
lods
clc
shlb
lret
ret
divb
sti
push
in
cmp
push
push
aam
xchg
scas
or
sbb
sarb
cli
add
fdiv
jge
jmp
leave
jp
lods
jmp
loop
sarb
shl
paddusw
adc
lods
mov
add
test
lcallw
inc
fmul
repz
popf
mov
dec
lods
rcr
push
mull
rorl
adcb
movsl
ljmp
repnz
pop
inc
es
das
into
rol
sbb
pop
inc
xor
das
sub
push
adc
jo
jnp
jle
ds
test
push
aas
sbb
xchg
or
insb
stos
mov
inc
pop
cmp
dec
shl
push
add
loope
dec
mov
xchg
push
fildl
cmpsl
sbb
dec
push
sub
sbb
imul
xchg
mov
sbb
lds
sbb
mov
scas
lahf
movsb
call
mov
push
add
push
stos
js
ljmp
jp
js
enter
jno
jge
mov
js
jg
and
lret
dec
jo
popa
push
cld
mov
sahf
scas
jle
inc
imul
rorb
scas
stos
mov
ret
cli
xor
lret
mov
sbb
dec
xchg
ja
ss
out
cmpsb
pop
dec
xor
test
test
xchg
xchg
in
in
popf
in
shll
or
cmp
outsl
sub
cmp
loope
jge
sti
outsb
xchg
mov
out
mov
testb
sub
jno
cmp
add
ja
lea
sub
jmp
setbe
in
repz
leave
jo
cwtl
sub
xchg
sbb
and
push
scas
adc
mov
test
addr16
mov
or
scas
mov
sbb
aas
xchg
dec
cli
dec
es
push
or
inc
lret
jne
icebp
inc
sbb
inc
shl
sbb
jmp
sub
jg
sbb
aad
jmp
dec
mov
jge
pop
adc
aad
scas
xlat
mov
addr16
hlt
iret
clc
loop
add
popa
or
imul
sub
and
cmpsb
test
lods
mov
push
and
imul
adcb
in
or
inc
sub
incl
sti
clc
movsl
scas
push
in
mov
push
mov
out
fnsave
push
repz
icebp
and
jbe
pop
or
jle
sub
xchg
xchg
lods
push
jg
or
shlb
lahf
or
jae
adc
pop
xor
inc
pop
fwait
out
lods
jp
shll
test
cmp
out
push
fs
mov
pushf
orb
stos
adc
ret
mov
lock
xchg
outsb
push
mov
ficomps
ljmp
js
mov
mov
rcr
add
addr16
xchg
and
mov
xor
mov
mov
mov
adc
sbb
xor
push
xchg
movsb
nop
mov
jnp
push
cmp
xchg
test
mulb
or
cs
gs
fs
stos
sub
xor
insb
xor
xchg
xchg
std
pushl
xor
insb
sbb
xor
fcomip
cld
loope
sahf
mov
pop
bswap
test
data16
sbb
mov
adc
dec
pushl
out
adc
mov
decl
in
ljmp
lods
sahf
lea
addl
shlb
in
xchg
test
cmpsb
jge
adc
push
clc
push
pushf
in
pop
sbb
pop
xchg
imul
jb
and
je,pt
shrl
stos
mov
add
xchg
jo
outsl
inc
xlat
sub
mov
sbb
xor
enter
adc
or
sarb
ljmp
add
ljmp
rorb
jns
push
mov
ret
in
scas
dec
adc
dec
jl
jmp
sub
push
push
xorb
dec
inc
jecxz
stos
out
pop
clc
pop
enter
sub
pop
leave
or
in
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
push
or
add
add
push
adc
adc
scas
fcomps
jmp
popf
dec
sarl
pushf
out
inc
in
jae
push
push
add
and
daa
pop
fwait
pop
jo
scas
incl
cmp
adc
fwait
inc
jmp
xchg
je
and
pushf
sbb
leave
jbe
xor
lcall
sldt
add
add
sub
adc
cmp
out
pop
xchg
push
cwtl
int3
add
pop
add
add
xor
sti
addr16
iret
and
in
loop
jae
xorb
out
pop
aam
mov
mov
ds
fadd
sbb
cmp
pop
xchg
cmp
sbb
fcoms
lods
in
test
jg
lcall
dec
imull
add
xor
lods
xor
test
cmp
pop
sub
sub
addb
int3
add
pop
add
add
sub
iret
in
mov
inc
xor
cmp
mov
pop
out
jno
enter
push
jbe
out
lret
jns
adc
sbb
dec
sub
mov
lods
adc
inc
mov
bound
xor
je
or
push
or
add
das
and
aam
aam
ljmp
je
dec
cmp
mov
add
pop
add
add
addl
push
jno
push
rcll
insb
mov
mov
ljmp
adc
sub
inc
decb
and
out
ja
ja
shl
pop
jge
bnd
mov
and
jne
jo
xchg
dec
sarl
lods
div
pop
sbb
jne
add
mov
sti
cmpsl
mov
dec
mov
test
add
add
xchg
dec
xchg
test
out
xchg
cmpsl
push
or
push
roll
adc
mov
or
in
inc
outsb
xor
sub
arpl
sbb
jmp
in
push
sahf
inc
inc
dec
jecxz
jno
and
test
hlt
jp
icebp
xchg
mov
push
mov
clc
inc
das
mov
out
lods
cmp
stc
stc
clc
dec
xchg
pop
add
add
scas
testb
into
mov
hlt
loopne
push
fbstp
jge
shll
rcrl
pop
cmp
pmaddwd
mov
dec
jae
mov
fistpll
fistps
ss
add
pop
fcompl
push
xlat
lds
aam
pop
push
call
rcl
cmp
repz
cmc
or
push
add
inc
gs
aaa
push
push
and
pop
into
add
pop
add
add
into
pushf
ljmp
pusha
add
sub
dec
mov
out
or
mov
mov
mov
sub
mov
pushf
insb
or
cmp
lock
cltd
lods
pusha
imul
add
push
inc
stos
enter
daa
lcall
adc
push
adc
cwtl
out
pop
push
dec
lret
add
add
add
xchg
mov
sbb
dec
cs
jp
repnz
jo
ljmp
test
movsl
dec
cs
outsb
stos
jbe
xchg
mov
mov
and
mov
loope
cli
pop
lods
imul
sbb
push
fldcw
fnsave
adc
dec
inc
sub
das
jle
jg
imul
int
ss
and
add
add
mov
fisttpl
fwait
mov
arpl
adc
dec
daa
aad
xchg
cmpsl
stos
inc
imul
dec
mull
jne
push
push
pop
jecxz
js
ljmp
lret
inc
inc
or
pop
push
jle
xchg
sbb
pop
xchg
lds
test
add
sar
fsubl
jno
addr16
and
mov
mov
iret
mov
loopne
add
add
lcall
or
enter
ret
sarl
adc
aaa
add
out
stos
rsqrtps
sbb
cmpsb
sub
test
sbb
inc
rclb
add
pop
out
fsubs
movsl
popa
sub
cwtl
mov
add
lods
push
push
cmpsl
add
or
ret
lods
sub
mov
inc
fneni(8087
add
pop
add
add
mov
mov
cmc
es
je
aaa
fucom
sbb
fldenv
lods
addb
add
mov
enterw
scas
int3
and
mov
popf
aas
adcl
pop
ljmp
iret
loopne
jno
push
xor
fcmovbe
divps
fld
add
ror
outsl
clc
shlb
loope
add
add
out
mov
std
into
rolb
cmp
out
pop
in
push
pop
xchg
ret
mov
ds
pop
pop
lds
xor
dec
add
push
ret
test
mov
test
pop
andb
pop
out
mov
xchg
push
cs
hlt
xor
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
jp
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficoml
inc
add
sbb
sbb
jle
inc
add
sbb
outsb
sbb
mov
inc
add
sbb
push
sbb
or
mov
inc
add
sbb
ret
add
sbb
or
inc
add
pop
inc
add
sbb
sbb
inc
add
test
ficomps
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
pop
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
adc
jae
and
add
pop
add
add
mov
adc
sahf
imul
lds
pop
fimuls
push
inc
fistpl
xlat
push
push
xchg
jl
inc
xchg
out
cmp
push
andb
sub
add
repnz
sbb
sbb
xchg
and
enter
ss
jae
mov
lahf
aad
popf
add
mov
push
mov
xlat
push
and
inc
fdivrl
add
pop
add
add
sbb
add
push
mov
psrld
imul
js
and
push
addr16
repnz
push
or
in
push
bound
gs
jl
xor
imul
repz
stos
adc
std
outsb
jae
outsb
das
push
hlt
shll
fldl
mov
jg
ljmp
push
ljmp
add
and
or
repz
sbb
adc
test
and
out
jb
pop
pop
inc
mov
in
sbb
fwait
mov
into
mov
xor
movsl
divb
push
mov
lods
in
pop
jl
cmp
sub
adc
jg
push
jg
cmp
add
cmp
in
fimuls
out
aam
add
pop
add
add
mov
jne
push
lcall
adc
push
in
mov
bts
lods
shll
mov
sbb
iret
adc
ja
cmp
mov
cmp
mov
popa
mov
popf
push
jg
mov
jns
add
mov
sbb
std
negb
sub
shl
lods
xchg
mov
add
pop
add
add
insb
jg
sahf
push
push
inc
sub
xlat
cmp
pushf
sub
mov
stos
loope
mov
cmp
mov
mov
push
jmp
stos
dec
pop
xchg
insb
adc
inc
cli
arpl
pop
lahf
out
jne
pop
stos
xor
jg
aas
popa
dec
gs
xor
fnsave
add
fidivl
xchg
mov
scas
fbstp
inc
mov
stos
out
add
pop
add
add
jmp
shrl
in
das
sub
leave
out
shr
cmp
xchg
insl
sub
or
into
rorb
or
mov
lods
adc
mov
cmpsb
cld
jge,pn
push
mov
and
cmc
cmpsl
shl
add
cmp
dec
in
fwait
scas
fdiv
pop
sub
push
pop
add
add
or
lret
test
jl
jns
push
in
adc
call
jmp
lds
lret
lret
inc
push
jne
mov
add
or
push
xchg
add
adc
lods
repnz
fbld
cwtl
pop
sbb
loope
dec
lock
clc
add
mov
aam
xor
and
popf
xlat
add
pop
add
add
push
sbb
ret
inc
mov
xor
movsl
js
lods
fisubrs
sub
push
and
push
jae
fcomp
jle
fdivr
xchg
fdivrl
out
pop
pop
push
adc
xorl
or
out
pop
xchg
fs
lret
mov
dec
mov
mov
xor
add
cmp
add
mov
out
adc
insl
clc
xlat
add
pop
add
add
adc
cmc
dec
fcmovbe
dec
mov
sbb
sub
push
in
cmp
pop
jne
notl
cmp
es
movsl
and
cmp
popf
mov
add
mov
loop
fldenv
imul
xchg
popf
imul
dec
mov
mov
jns
into
mov
add
mov
jmp
fimull
out
cmpsb
call
pop
add
add
cld
fsubr
out
or
add
jae
les
cli
loopne
jbe
and
push
aad
das
pop
and
outsb
dec
shlb
lods
ja
mov
ljmp
jnp
jl
outsl
scas
pop
sahf
inc
aas
mov
aaa
mov
push
ja
stos
lret
or
adc
pop
inc
pop
iret
pop
aad
ss
dec
dec
fstpt
add
add
cltd
imul
mov
jmp
xor
mov
mov
mov
mov
dec
repz
xchg
cmc
lret
lock
jne
lock
clc
int3
dec
xor
add
pop
aam
call
repnz
test
fwait
test
jg
or
sbb
flds
add
add
mov
mov
inc
lret
mov
inc
cli
pop
shl
addr16
sbb
rcrb
push
inc
or
lahf
push
pop
mov
mov
jo
stos
pop
stc
mov
je
push
in
mov
rcrb
xor
mov
fwait
pop
xor
scas
jns
pop
push
cmp
aad
into
add
lock
jle
repz
jo
flds
add
add
jge
ret
mov
mov
jo
mov
sub
cld
cmc
cmp
pop
jge
out
int3
cmc
and
xchg
jecxz
sbb
jle
bound
and
popa
fnsave
push
into
insb
fidivrs
jae
mov
push
out
xor
loop
pop
pop
mov
jbe
imul
cmp
add
adc
adc
mov
lds
mov
add
add
xor
aad
push
das
adc
out
in
mov
add
mov
mov
xchg
mov
les
nop
jne
jge
sbb
add
ror
adc
and
sbb
dec
lock
push
jmp
pop
repz
push
and
inc
xor
xchg
add
add
cmp
mov
rclb
push
sbb
add
pop
add
add
ds
and
stc
sub
sub
cmc
sbb
dec
mov
scas
fsubr
outsb
xor
inc
neg
pop
aaa
je
je
mov
insl
ror
cmpb
out
inc
and
xchg
xor
cmpsl
push
pop
fs
sbb
insl
mov
lds
aam
push
lock
cmc
das
sbb
xchg
iret
push
sub
add
add
mov
pop
jmp
cmp
push
hlt
in
arpl
or
push
mov
or
cmpsb
lahf
adc
icebp
jnp
ja
jp
mov
divl
out
movsb
and
arpl
jbe
mov
push
xor
pop
dec
xchg
andl
cltd
lcall
add
sub
fildll
ja
lods
xor
pop
add
add
data16
mov
xor
fbld
pop
int
rcl
add
add
add
jmp
and
pop
test
or
push
mov
pop
jmp
fistpll
jbe
xorb
aaa
cmp
or
enter
lcall
xlat
adc
add
fs
testl
push
pusha
sub
add
pop
add
add
hlt
cli
leave
pop
push
gs
stos
stos
mov
divb
add
push
push
aam
inc
mov
add
sub
loop
clc
add
dec
mov
xchg
inc
movsb
insb
jg
jne
fisubrl
add
dec
mov
loop
mov
mov
add
add
jne
jg
clc
cs
push
mov
add
add
nop
or
sbb
dec
addl
xchg
xor
push
pushf
push
xor
sbb
xor
sahf
sub
jl
push
xor
pushf
mov
les
push
cwtl
loope
lock
pop
aaa
xor
cmp
imul
push
or
push
and
add
or
dec
mov
je
lcall
add
pop
add
add
sarb
lcall
jno
bound
push
inc
shlb
mov
jle
pop
out
and
cmp
stc
ds
cmp
arpl
cmp
inc
xchg
out
in
push
xor
lret
sub
mov
into
xchg
int3
add
push
mov
mov
xchg
adc
mov
add
add
or
cwtl
sti
ret
mov
aad
pop
pushf
les
dec
xlat
fs
jmp
hlt
push
cli
fcomi
test
xor
cmp
fwait
jb
adc
hlt
mov
jne
popa
cmpsl
mov
mov
cltd
rcl
in
loope
jnp
cmp
pop
push
and
in
push
in
add
fisttps
push
push
jg
jno
iret
add
pop
add
add
dec
sbb
mov
mov
out
ja
shlb
test
ss
aas
into
dec
dec
mov
test
push
inc
push
stos
shlb
and
adc
gs
mov
mov
dec
xchg
mov
mov
push
inc
shrl
data16
and
add
add
jle
out
sbb
mov
rolb
add
add
add
mov
in
push
adc
add
xor
pop
push
mov
sub
in
shll
pop
xchg
cld
mov
add
add
rcrl
outsl
dec
ja
int3
mov
ds
int3
sub
sbb
or
scas
aam
add
and
cmp
nop
lods
jge
rolb
add
add
jp
push
xchg
xchg
adc
push
incl
or
jp
jecxz
mov
mov
cmpsl
xchg
imul
push
push
mov
dec
inc
or
clc
pop
imul
push
dec
fildll
enter
mov
push
push
les
sbb
je
add
popf
aam
dec
addr16
rolb
add
add
pop
push
jge
out
loope
mov
testl
adc
pop
xchg
fstpl
jns
mov
stos
fistpll
aam
cmpsl
push
mov
pop
and
cmp
loop
cmc
or
mov
mov
add
icebp
imul
jae
dec
xchg
cmpsb
push
ja
inc
xor
add
mov
jbe
hlt
mov
and
cmpsb
sub
ja
roll
add
add
lea
je
xlat
sub
ja
call
xor
stos
jge
xlat
cmp
mov
cs
lods
stos
enter
push
mov
ret
jecxz
mov
cmp
sbb
into
jmp
aas
mov
push
daa
xor
outsb
lea
pop
insb
sbb
jle
cli
add
ror
mov
sub
out
aas
int
repz
roll
add
add
sbb
jae,pt
pop
xchg
shll
ret
inc
adc
aam
pop
aad
popa
lahf
pushf
lahf
iret
fnstcw
sub
mov
std
mov
std
cmp
enter
rolb
ja
xor
jo
mov
mov
cmpsb
or
mov
loop
sarl
das
add
in
outsb
and
pop
mov
in
roll
add
add
stos
xor
mov
je
sbb
outsl
pusha
ljmp
fstps
scas
jg
dec
iret
sub
out
mov
lret
cmp
push
pop
jno
int
sub
pop
cld
cwtl
in
mov
mov
mov
repnz
xchg
mov
and
add
mov
and
or
add
pop
add
add
dec
movb
push
inc
cli
jmp
movq
add
sbb
test
xor
decl
cmp
mov
mov
lds
push
fstpt
push
cld
shlb
inc
mov
jns
aas
jmp
pushf
test
add
sahf
add
in
stos
cmp
sti
add
stc
call
into
inc
mov
rol
xchg
dec
mov
add
add
aad
push
clc
sub
push
push
lret
xchg
push
popa
xorb
pop
pushf
and
cmp
adc
fsubrl
fucomp
out
hlt
and
cmc
sti
jne
mov
mov
lea
pop
lcall
aas
lcall
jno
add
inc
mov
or
sub
sar
add
sub
sub
ret
push
pop
add
add
jo,pn
mov
adc
cmp
test
fxch
in
inc
jbe
jbe
jecxz
adc
mov
das
mov
inc
xor
bnd
jbe
sbb
aas
mov
push
iret
js
into
out
mov
ret
loop
addr16
inc
sahf
add
int3
sbb
out
loopne
lods
outsl
dec
mov
pop
roll
add
add
stos
cmp
mov
sbb
and
pop
xchg
sbb
xchg
in
cmp
popa
xchg
mov
mov
mov
sub
scas
je
mov
jb
mulb
jp
push
inc
lea
jl
add
or
cmp
mov
jge
iret
mov
imul
or
cltd
lcall
les
add
push
test
fildll
cmp
nop
mov
add
pop
add
add
in
xchg
lret
mov
into
push
push
ret
scas
inc
ret
lret
xchg
push
jne
fistl
aaa
and
popf
outsb
xchg
dec
mov
rorl
jecxz
or
add
xor
int3
testb
inc
sub
inc
lock
shrl
lahf
pop
pop
out
mov
sbb
and
popf
or
sti
mov
add
add
lods
fcomi
sarb
add
mov
add
add
cmp
cld
sbb
sti
add
sti
adc
popa
jl
jg
scas
push
adc
sbb
xor
pop
loope
cpuid
pop
push
mov
xchg
sub
fwait
inc
push
dec
dec
push
cmp
xchg
mov
push
or
and
xor
ret
push
insb
mov
add
divl
dec
cmp
dec
fnsave
add
pop
add
add
pusha
jbe
dec
jmp
cltd
xchg
cwtl
int
jg
and
add
pushaw
sub
int
pop
out
nop
xor
jae
cltd
test
insl
dec
data16
stos
jnp
sub
sub
add
mov
xor
inc
into
or
arpl
adc
cld
xor
xchg
add
jl
arpl
jge
mov
daa
push
scas
aaa
lcall
add
pushf
mov
mov
in
out
adc
dec
xchg
shrl
inc
push
cmpsb
sbb
shll
into
movsl
cli
shlb
es
popa
subl
fyl2x
loope
push
xor
inc
adc
gs
mov
xchg
ljmp
test
adc
lds
cmp
pop
dec
add
push
imul
popa
add
add
add
push
inc
xchg
mov
movsl
mov
push
loop
popf
lret
jns
rolb
fidivl
out
mov
cmp
xor
ljmp
mov
mov
dec
add
cld
mov
inc
in
push
popf
and
jl
sbb
ror
in
add
ss
xor
and
les
add
add
jl
insl
inc
add
test
in
jns
test
push
shll
mov
jl
cmpsl
xchg
mov
adc
inc
push
in
sbb
dec
mov
jb
jne
movsb
loop
lock
cmp
inc
sahf
jb
fldenv
subb
sub
push
add
out
mul
aaa
cmc
xchg
lcall
cmp
add
pop
add
add
jl
cmp
icebp
es
shrb
xchg
pop
lea
ja
sbb
push
sub
es
mov
pop
pop
add
add
xchg
in
cmp
push
xchg
call
push
cmpb
or
pop
sbb
in
data16
jge
add
aad
out
fucomip
ss
cmp
add
faddl
add
add
pop
add
fsubl
jno
fnstcw
cs
repz
mov
adc
mov
or
sub
cmpsl
fwait
inc
pop
fcoms
std
and
jbe
pop
arpl
paddusw
inc
test
mov
mov
jecxz
movsb
xlat
sbb
and
and
or
test
mov
add
in
cld
fisubrl
sbb
mov
add
add
pop
subl
mov
push
je
cs
into
popa
inc
test
mov
lahf
repnz
cmpsl
pop
sti
sbb
pop
pop
push
shlb
push
xor
xor
jae
negl
adc
or
jae
sub
test
push
cli
lods
xchg
ss
cmp
paddsb
nop
sarl
dec
fldl
add
add
mov
pushf
js
ljmp
pop
mov
cmp
cld
mov
mov
sbb
idiv
or
outsb
stos
jp
push
icebp
mov
pop
sub
scas
js
js
mov
xchg
dec
imul
dec
repz
xor
cmpsl
add
mov
add
jle
call
cli
lcall
add
pop
add
add
in
arpl
test
sub
adc
sbb
mov
lret
and
and
jbe
and
mov
movsl
into
pushf
inc
push
inc
inc
insl
add
test
call
xchg
rcl
pop
sbb
dec
adc
in
jns
xchg
adc
aas
es
dec
repz
mov
add
fincstp
shl
frstor
pop
dec
jge
scas
mov
pop
add
add
and
lahf
mov
fs
sub
add
testb
in
xchg
lret
pop
in
xor
push
outsl
fistl
test
mov
push
aam
dec
jmp
pop
mov
jmp
fcomip
or
ror
pop
push
mov
decb
int3
jl
push
add
aam
fnstsw
out
fcmovu
in
loop
ret
add
pop
add
add
xor
dec
pop
test
mov
leave
xchg
jb
dec
sti
pop
jl
cwtl
popa
loop
push
sbb
push
mov
xchg
xlat
xor
mov
popa
add
push
push
add
aas
cmp
adc
pop
mov
or
jecxz
sahf
mov
mov
lret
cmpsl
add
sbb
inc
jecxz
mov
sarl
or
pop
add
add
enter
mov
ss
bound
mov
mov
fcomip
inc
stos
push
aad
sbbl
jg
lds
jae
shrl
sub
leave
ret
icebp
sbb
xchg
sub
adc
and
ss
mov
mov
push
sbb
add
mov
icebp
and
jb
adc
add
pop
add
add
punpcklwd
repz
xchg
and
jo
dec
inc
outsl
jbe
mov
mov
scas
stc
cmp
add
sbb
xchg
ret
popa
xlat
icebp
xchg
push
mov
sbb
cli
sub
and
adc
lock
loop
loop
adc
repz
das
cli
fists
dec
es
push
leave
pop
subl
add
add
jb
push
test
lods
jbe
sbb
mov
xor
lahf
and
lcall
xor
xchg
and
scas
ljmp
lahf
inc
andb
push
mov
lock
ljmp
ret
das
jp
mov
push
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
repnz
add
add
add
add
add
add
add
call
aaa
add
lock
add
daa
mov
add
aaa
add
add
push
outsl
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
