push
mov
sub
mov
mov
jmp
adcb
shrl
pop
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
adc
shlb
out
mov
sbb
inc
xor
mov
push
in
mov
icebp
std
out
adc
mov
jb
xchg
pop
xchg
push
addr16
stc
sub
inc
das
fsubrp
mov
cmp
mov
fabs
out
out
dec
and
test
pop
in
push
mov
int
pushl
and
pop
dec
scas
xchg
in
pop
jnp
in
cmp
test
or
daa
js
arpl
or
lea
mov
push
clc
push
lock
jecxz
sbb
ja
inc
rcll
or
mov
test
xor
mov
loopne
mov
sub
xor
data16
aam
pop
imul
sahf
js
cmp
mov
arpl
test
mov
jo
push
sbb
loop
pop
jge
inc
cmp
or
add
pop
and
shlb
fcom
mov
xchg
adc
dec
add
lock
jle
jbe
pop
insl
fcmovnb
adc
imul
testl
xchg
lock
jle
stos
push
clc
movsl
sbb
xor
ljmp
dec
mov
pop
clc
mov
fbstp
pop
xchg
icebp
inc
ja
cli
xchg
mov
xchg
in
cmpsl
int3
add
pushf
cmp
mov
shrb
out
lea
lar
adc
cmpps
and
rcrl
sti
mov
cmpsl
pop
cmp
or
mov
cmpsl
jne
jno
cmp
or
push
icebp
push
stos
adc
jecxz
dec
rclb
push
jle
push
arpl
mov
adc
push
bound
and
mov
jp
push
push
scas
push
or
ret
add
jbe
loopne
xlat
je
jnp
mov
rol
mov
es
dec
push
cwtl
mov
sbb
cmpsl
mov
mov
sub
std
sbb
xor
cmp
imul
add
sbb
bound
in
dec
jae
mov
fidivs
stc
test
test
insb
in
or
rclb
negl
mov
sub
enter
rcl
xchg
out
inc
or
sub
jp
inc
sub
popf
aas
or
stos
push
pop
mov
lret
popa
mov
dec
jl
and
test
outsb
sub
test
sub
bound
sti
add
and
stc
mov
jmp
jl
gs
aad
gs
adc
fldcw
jne
imul
sub
sbb
xchg
ss
push
xor
pop
mov
sbb
rorl
fcmovnbe
and
xchg
lea
push
sub
jmp
jge
and
and
sbb
add
das
push
pop
and
out
aas
adc
sbb
push
mov
stos
lret
ja
clc
bound
movsb
test
add
in
push
mov
cmp
sub
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
filds
jge
hlt
adc
mov
jp
add
inc
aad
xlat
rclb
mov
lock
mov
jb
lea
addr16
rcll
pop
mov
outsl
pop
push
adc
fstpl
xchg
mov
jmp
jmp
fisttps
xlat
out
pop
inc
fldl
push
fisubrs
call
push
jo
arpl
shr
xlat
les
ficomps
notb
jnp
sti
and
cmpsb
sub
cmp
mov
rclb
xchg
inc
daa
in
inc
inc
push
inc
inc
adc
and
push
xchg
mov
push
dec
movsb
jmp
leave
and
outsb
rcl
es
nop
mov
push
cmp
fisttps
add
push
fstp
stos
inc
jne
xor
dec
mov
or
dec
neg
iret
fisttpll
scas
imul
jg
push
fcompl
mov
or
pop
xor
mov
xchg
or
dec
sbb
push
lcall
arpl
cmp
sbb
push
dec
jmp
dec
orb
imul
adc
jge
push
fcmovnb
add
aam
movsl
stc
popf
cmp
and
ljmp
leave
aam
mov
loop
xchg
dec
and
push
xchg
cld
dec
jmp
cmp
adc
mov
cmpsb
push
jp
in
leave
mov
sbbb
nop
xor
loopne
jno
je
loopne
out
mov
daa
aaa
xor
fcoml
inc
dec
lock
roll
xorl
icebp
outsb
outsl
and
sub
push
loope
aad
cmp
xchg
mov
dec
daa
add
and
push
ljmp
cmpsl
or
sahf
aas
stc
addr16
lods
dec
incb
std
jle
jmp
mov
pop
rcrb
int
test
and
in
jno
lds
pushf
jle
sub
adc
loope
push
call
cli
or
imul
push
adc
mov
daa
insb
sub
push
add
outsl
jbe
hlt
cmp
sbb
adcb
data16
xchg
inc
xchg
frstor
lahf
in
inc
jns
sbb
or
sub
push
rcrb
icebp
dec
xchg
jb
icebp
cmp
pop
test
in
icebp
inc
cmp
cmp
mov
and
fdivrl
or
adc
fdivs
adc
loope
cltd
fldenv
mov
imull
inc
add
push
movsl
cld
test
dec
mov
lea
std
cltd
fcoms
rcll
call
push
cmp
pop
lcall
dec
into
mov
and
push
rorl
mov
add
sub
mov
add
dec
fnstenv
das
hlt
loope
aaa
lea
rdmsr
sti
pop
imull
pushf
dec
mov
outsb
into
adc
insl
pop
mov
pop
and
push
cmpsl
inc
sbb
jb
mov
push
fbstp
and
les
mov
mov
pop
pop
sub
cmp
dec
adc
add
pop
and
stc
add
inc
push
cmp
scas
xchg
es
mov
ret
mov
nop
adc
lahf
scas
lock
leave
cli
shrb
pop
cli
shll
mov
sub
xchg
outsb
ret
fisttpll
cmp
jbe
cmpsl
pop
sub
scas
mov
cmpsl
pusha
arpl
push
jo
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
shrb
pop
jns
jle
jge
jle
popa
testl
fistpl
or
pop
mov
insb
loopne
push
lea
sbb
pop
pop
push
push
mov
call
pop
mov
ja
mov
mov
inc
mov
jno
cli
lea
jp
add
or
loop
dec
out
ss
adc
jno
lret
jecxz
xor
cmp
sub
or
pop
xor
cmc
pop
xor
pop
cs
repnz
jecxz
mov
clc
and
add
aad
sbb
fstl
roll
cmp
mov
jecxz
sbb
dec
dec
sub
xchg
cmpsb
out
dec
cmp
xor
outsb
pop
fwait
jns
push
dec
add
mov
push
mov
and
lea
cmp
push
or
movsl
popf
mov
adc
dec
mov
loope
mov
adc
cmp
out
mov
pop
jne
scas
mov
ficompl
addl
xor
idivb
push
jmp
stos
jp
sub
xor
and
inc
xorb
mulb
jle
call
jle
cmpsb
push
cwtl
std
sub
mov
iret
ficoms
out
xor
xor
inc
mov
ds
push
add
repnz
lods
xor
inc
mov
outsl
cmp
adc
dec
fstps
xchg
xchg
aaa
push
add
fisubrl
add
mov
adc
jns
mov
stc
dec
xlat
dec
pop
add
pop
cs
lods
mov
mov
or
lcall
adc
add
mov
and
push
jp
xor
or
out
mov
jnp
in
arpl
imul
mov
inc
rcrb
inc
std
mov
inc
repz
ljmp
hlt
std
cmpb
push
outsb
jb
into
mov
mov
cmpsb
scas
pusha
push
jmp
test
adc
outsb
addl
cld
pop
iret
sarb
fldcw
fists
cwtl
xchg
jae
xchg
xchg
xchg
cld
xor
insb
jge
stos
imul
adc
stc
in
cltd
icebp
sub
dec
push
fs
fsub
mov
mov
jnp
inc
mov
addr16
in
adc
gs
inc
jmp
call
inc
popa
aas
stc
dec
and
xchg
fimuls
into
jmp
push
mov
pop
push
fidivrl
fs
or
hlt
cmc
decb
add
in
idivb
int3
mov
rclb
jle
and
dec
repz
jo
loope
out
imull
shrb
test
add
cld
cld
std
lds
adc
add
leave
and
pop
lea
and
adc
test
ja
push
push
mov
es
scas
push
xchg
jmp
push
loop
cmpl
inc
mov
int
jl
ficoms
add
push
addr16
scas
jno
inc
jge
xchg
cmp
bound
adc
pop
rolb
cmp
cltd
icebp
push
mov
and
mov
pusha
aam
jae
sub
bound
or
sub
dec
xor
xchg
mov
jge
aam
in
stc
pop
or
mov
xor
jecxz
cltd
test
iret
mov
fxam
cmc
in
pop
mov
mov
push
pop
insl
push
clc
popa
enter
leave
stos
pop
lea
aam
testl
adc
dec
int
add
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
xchg
cld
in
dec
add
jle
push
jo
dec
jbe,pt
js
cmpb
pop
mov
mov
dec
fsubs
and
pop
mov
jmp
xor
mov
add
aad
xchg
fwait
inc
or
inc
pop
cmp
xchg
mov
insb
or
push
push
shll
pop
inc
mov
cmp
enter
cmp
outsb
xchg
lock
arpl
mov
stc
push
lret
sahf
sub
data16
sbb
add
sbb
sbb
push
mov
sub
pop
sub
cmp
push
mov
push
daa
dec
xlat
pop
loope
negl
push
lds
push
inc
mov
int3
add
cmp
cmp
shll
xchg
mov
add
ret
add
jecxz
adc
dec
rorl
sti
mulb
ret
cmp
sbb
lds
int3
aas
pop
sub
popf
decb
pop
jno
cmp
sbb
std
testl
loop
xchg
jp
jbe
xlat
dec
mov
lcall
push
sbb
ds
inc
adc
xor
fsubrs
aam
or
or
sti
stos
sub
mov
testl
sbb
cli
fcompl
adc
sbbb
cmp
ret
or
or
inc
push
movsl
mov
mov
ret
imul
int
xchg
mov
cmpsb
or
ds
aas
test
xor
sbb
rcr
hlt
cld
rorb
dec
jbe
mov
sti
imul
lea
add
xchg
dec
aam
aas
stos
int3
mov
pop
sti
ds
dec
jge
mov
push
daa
popa
mov
cmp
sbb
outsl
ss
fiaddl
iret
push
xor
jne
cmpsb
sub
push
scas
mov
sub
pop
out
cmc
test
imul
mov
jne
push
into
imul
seto
lods
lcall
sbb
ljmp
cmpsl
stos
inc
stos
lret
ss
jno
dec
and
push
loope
out
fidivl
cmpsl
push
ss
ja
and
mov
js
mov
jp
xor
in
jle
popf
add
sbb
cmp
mov
pop
mov
push
xchg
push
nop
cmp
jne
fsub
cmpsl
jecxz
mov
xchg
test
cli
cmp
ja
inc
xchg
int
fcomps
inc
mov
xor
call
lea
xchg
cmpsb
arpl
push
iret
cmp
and
fnstenv
sub
shr
rcr
jg
stc
add
jle
dec
in
ja
fwait
call
sub
mov
ffreep
push
push
pop
dec
cs
fdivrl
push
arpl
inc
gs
mov
arpl
xchg
lock
pop
mov
in
pop
or
push
in
cmp
movsl
xchg
ret
or
jo
ret
push
and
push
stc
adc
popa
push
jo
call
fnstenv
int3
and
mov
push
outsb
bound
bound
add
cmpsb
stc
push
idivl
inc
mov
std
cmpl
lods
stos
aaa
not
or
sub
repnz
lds
mov
call
cltd
clc
mov
and
in
mov
jae
sub
sbb
shlb
fisubrl
push
imull
or
stos
mov
jmp
push
cs
pop
sbb
pop
sub
mov
add
bound
scas
xchg
in
or
and
das
stc
mov
mov
inc
add
je
stos
or
and
push
xchg
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
scas
add
add
outsl
jge
jle
lret
gs
xor
cli
insb
push
fidivrl
imull
lahf
out
gs
aam
addr16
mov
pop
ljmp
inc
aad
aad
sub
dec
je
loope
stos
lock
pop
popa
mov
jecxz
mov
icebp
sub
inc
add
arpl
sahf
or
inc
cmpsl
outsb
fimuls
mov
xchg
mov
sbb
lds
int3
sub
and
and
cwtl
pop
int3
and
push
fs
ret
mov
les
cwtl
mov
mov
fisubl
addr16
jb
sti
xor
push
test
ja
test
adc
les
sub
xor
cmp
xor
decl
xchg
fcmovnb
xchg
jns
insb
nop
dec
loopne
rcrb
test
inc
adc
mov
out
fists
push
lcall
pushf
ret
mov
sbb
pop
arpl
iret
mov
jmp
pop
adc
mov
addr16
cmp
stc
cltd
sti
stos
cmpsb
pop
loop
cld
movsb
enter
xor
dec
ds
les
es
hlt
sahf
jno
mov
or
mov
mov
inc
sbb
enter
dec
dec
dec
mov
pop
fnclex
sub
jl
pop
pop
addr16
push
in
in
enter
pop
out
sbb
inc
test
jl
inc
nop
scas
jno
add
sub
ljmp
jmp
add
cmp
jp
les
les
sarl
and
push
and
dec
dec
xlat
test
cmp
and
aaa
cwtl
dec
xor
lods
xchg
adc
xchg
int
dec
leave
stc
jmp
imul
xchg
xor
mov
dec
out
cmpsb
sub
filds
inc
pop
add
sbb
add
stos
sbb
push
adc
mov
and
fcomps
and
and
fwait
movsb
xchg
sub
daa
lahf
fisttpll
xchg
and
lret
lods
repnz
dec
lret
test
and
sbb
and
push
sbbb
adc
mov
in
and
sub
or
push
and
and
rolb
imul
pop
add
insb
clc
adc
push
nop
mov
mov
and
mov
lahf
or
aaa
push
pop
sbb
out
ficomps
push
imul
jmp
jb
and
jae
mov
sbb
and
cmpsb
mov
les
xor
popa
popa
adc
in
jo
lea
sub
xor
xor
popa
stos
push
lret
adc
loopne
sbb
sub
mov
pop
push
fcmovne
dec
fbld
sub
addr16
jns
je
imul
mov
jg
adc
lock
gs
jb
jmp
insb
pop
outsb
out
inc
mov
imul
push
inc
mov
orl
mov
inc
nop
je
enter
lea
mov
aam
adc
xor
cli
es
stos
cli
mov
pop
jne
pushf
sub
setle
xchg
ret
and
jg
js
push
sub
dec
aaa
das
and
and
push
jl
lds
or
mov
mov
bound
add
and
sti
jo
fiadds
mov
pushf
ljmp
cmc
sbb
mov
xor
call
cmp
sbb
sub
or
clc
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
push
test
jp
fdivrs
mov
int3
ror
jae
je
cmc
imul
insl
jns
cmp
out
xor
jecxz
fs
sti
lret
xlat
or
jne
lret
fnstcw
jno
xor
sahf
cmp
dec
aas
dec
pop
xchg
mov
clc
mov
inc
lret
fcomp
movsl
jecxz
test
or
arpl
mov
jl
pop
push
dec
sbb
sub
push
fwait
inc
add
xchg
pushf
popf
jb
fimuls
mov
mov
inc
pop
inc
lea
sub
pop
sar
ret
fildl
cmp
aam
sub
xor
mov
and
out
push
in
inc
or
sub
jge
aaa
insb
jp
iretw
mov
or
pop
ret
pop
aad
or
adc
inc
mov
mov
std
or
adc
movsl
add
mov
es
ljmp
stos
sbb
sbb
es
gs
dec
mov
fldt
jge
jne
out
mov
pop
cmp
mov
mov
out
and
jmp
dec
fsubs
push
push
inc
imul
lea
sub
sub
jg
leave
push
push
movsb
in
ret
cs
xchg
and
cmp
push
xor
sub
pop
mov
in
add
add
ret
lods
loop
ljmp
scas
arpl
js
jmp
and
cwtl
mov
jmp
out
xchg
iret
into
xchg
imul
insb
ja
fsts
out
sbb
jecxz
lea
or
jae
xlat
or
push
cmp
inc
rolb
cmpsb
cmp
push
int
out
pushf
les
sahf
or
push
inc
inc
mov
add
pop
dec
sub
xor
push
rorl
addb
xchg
inc
xchg
mov
push
mov
jnp
jnp
mov
sbb
aas
pushf
pushf
jbe
jae
daa
leave
cwtl
ret
cmpsl
inc
and
jb
and
xorb
push
jae
mov
movsl
add
stc
mov
les
mov
add
outsl
ja
push
mov
xchg
daa
sbb
lea
repz
adc
insl
movsl
scas
cltd
mov
gs
xchg
sbb
shl
cmp
cwtl
sub
and
pop
std
bound
lods
dec
jg
or
fidivrs
subl
shll
inc
sub
xchg
inc
jb
push
fdivp
mov
add
sub
clc
or
pop
lret
arpl
call
cld
popa
mov
cmp
cmp
add
andl
arpl
dec
je
aad
rorl
lret
jnp
pop
sti
mov
and
mov
pusha
test
out
les
mov
ficoml
gs
mov
mov
jmp
cmpsl
pop
xchg
cmpsb
jle
out
xor
mov
or
pop
dec
push
dec
pop
push
daa
pop
or
mov
mov
ja
lods
movsl
fwait
cmpsb
leave
adc
stc
xchg
jne
lahf
xchg
mov
popa
in
data16
mov
ret
ret
out
repz
xchg
fwait
mov
out
inc
xchg
out
push
test
xor
cmc
cld
pusha
mov
adc
dec
scas
or
hlt
stc
ljmp
ljmp
push
imull
jno
push
popf
jg
jb
cmp
mov
mov
out
stc
and
sbb
and
in
or
push
lods
jno
js
sbb
out
std
addr16
push
pusha
loopne
push
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
jns
or
outsl
jge
jle
int3
mov
cmc
sub
mov
divb
aas
rcll
mov
mov
push
insb
jns
pop
mov
movsl
add
jo
mov
nop
test
dec
mov
ljmp
out
or
mov
jle
pop
lret
jae
dec
mov
popf
push
sar
add
out
inc
adc
sbb
pop
pop
sti
adc
mov
das
push
sbb
xor
xorb
movsb
aad
sahf
pop
pop
mov
mov
out
loopne
ljmp
or
aas
push
lock
mov
mov
inc
or
in
incb
pop
dec
rcrb
mov
test
dec
xchg
adc
add
dec
dec
inc
mov
cmpsb
repnz
filds
push
in
pop
pop
inc
push
jmp
clc
jle
and
in
jns
mov
fstps
jecxz
mov
popa
js
loopne
scas
das
lret
addr16
fisttpl
add
or
inc
inc
mov
inc
pop
js
out
call
lret
and
or
jge
mov
xchg
lods
dec
cwtl
bound
sub
mov
and
or
jns
xlat
fcomi
xor
add
pushf
and
or
out
mov
inc
mov
dec
cld
dec
or
add
sub
mov
or
out
sahf
jns
int
xor
xchg
jb
add
movsl
cmpsb
mov
pop
aas
dec
mov
leave
or
hlt
imul
mov
fidivl
aam
inc
pop
sub
jno
roll
pop
fcoml
push
pop
movsl
adc
push
aas
stc
add
inc
test
push
movsl
dec
jecxz
or
push
popa
test
cmp
scas
jmp
mov
push
jecxz
in
push
fadds
jae
mov
and
xor
add
cmp
stos
push
cmp
fnstenv
ja
fistpl
fwait
ss
inc
std
or
adc
jno
pop
mov
xchg
mov
shr
pop
xor
mov
push
dec
not
out
addr16
fildl
inc
insl
lods
pop
insb
add
adc
ljmp
mov
lret
enter
adc
iret
arpl
or
xor
mov
int3
and
daa
jecxz
test
das
jmp
dec
in
sbb
pop
inc
imul
test
jns
sbb
push
jecxz
push
movsl
inc
stos
mov
mov
and
add
push
ljmp
lock
pop
mov
push
sti
bound
or
mov
jp
shl
test
mov
mov
adc
jl
mov
cli
icebp
or
mov
and
adc
jb
repz
push
ja
sbb
push
sbb
sarb
dec
jno
repnz
jns
mov
arpl
enter
scas
jmp
inc
and
mov
xlat
xchg
and
lret
xlat
iret
push
bound
std
inc
mov
sub
pop
pop
js
mov
cwtl
and
ret
push
out
hlt
cmp
or
fdivrs
int3
inc
add
xor
adc
add
mov
inc
cmp
mov
mov
dec
jg
ds
push
push
xchg
xor
push
inc
or
sti
xchg
les
jnp
mov
mov
pop
jp
push
inc
adc
dec
out
pop
jnp
scas
dec
mov
mov
jno
sub
ficoms
in
inc
add
add
xor
lahf
in
test
add
clc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
jne
xchg
mov
jle
sbb
xchg
jmp
jge
and
repnz
jmp
cmp
dec
and
in
fwait
hlt
setae
pusha
ljmp
and
jp
fcomi
sbb
lahf
hlt
inc
es
jle
add
inc
add
mov
adc
fmuls
pop
fcomip
imul
gs
xchg
mov
in
cmp
aam
xlat
shl
loop
sbb
xchg
xlat
repz
jne
jb
adc
and
lods
xor
sbb
ss
xchg
xor
mov
icebp
sbb
cmc
pop
push
mov
sub
cmp
xlat
lret
xchg
dec
mov
jo
inc
dec
push
mov
lods
cli
jle
mov
mov
xchg
push
or
inc
push
xchg
add
jmp
cmp
cmc
ror
notl
ds
sbb
imul
in
jbe
sub
xchg
ret
loop
mov
sub
in
pop
mov
mov
cltd
cmp
xor
mov
cmc
push
and
cli
adc
fisubrs
rcrb
imul
insb
es
jmp
arpl
imul
scas
or
adc
aaa
rorb
sub
xchg
fwait
dec
sub
inc
push
in
outsl
cmpsl
sbb
dec
cld
mov
mov
pop
imul
test
pop
mov
mov
pop
lret
popa
mov
jl
insb
xchg
stc
add
enter
pop
in
sarb
xor
cmp
adc
jo
pop
push
xchg
sbb
xlat
fmull
iret
gs
sub
in
pop
mov
add
cmp
fwait
dec
fdivl
push
movsl
or
in
inc
gs
mov
test
xchg
xor
dec
cmp
adc
xchg
inc
lcall
and
inc
fbstp
in
enter
sbb
pop
xchg
maxps
pop
rorb
stos
mov
push
pop
cmpsl
lcall
mov
cmp
push
xchg
adc
sbb
jecxz
xor
mov
adc
xor
insb
mov
aas
repnz
mov
jmp
cwtl
lret
scas
xor
xchg
jb
stos
fwait
dec
xchg
mov
iret
xchg
in
mov
mov
adc
imul
push
xor
cmp
jb
or
out
rcrb
mov
push
push
jne
in
jne
mov
dec
icebp
jne
xlat
mov
or
lret
negb
fs
pop
cmpsb
xchg
mov
xchg
rolb
mov
cld
cmp
imul
or
scas
rorb
push
xchg
movsb
jb
cmp
scas
push
push
and
enter
jae
dec
repz
out
cmp
lods
inc
sub
cmc
loopne
jg
sub
mov
jo
xor
xchg
pop
or
lret
dec
sub
sbb
pop
lret
adc
pop
fldenv
pusha
mov
inc
add
leave
or
mov
pop
push
mov
cmpsb
adc
lods
push
adc
imulb
mov
jno
fists
cmp
icebp
push
inc
aaa
pop
pop
lds
in
xlat
in
fs
inc
mov
repnz
jl
xchg
pop
jp
xor
cmp
push
ss
loopne
pop
ja
add
xor
pusha
call
and
dec
dec
rcrb
mov
mov
dec
outsl
adc
icebp
out
dec
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
pushf
fwait
mov
jle
jge
jle
or
xor
or
mov
mov
ret
jl
sbb
out
leave
xor
adc
add
orl
or
vsubpd
out
and
into
dec
adc
push
xor
jg
mov
and
cltd
dec
sbb
clc
shll
xchg
jo
xchg
icebp
add
jmp
cmpsb
nop
mov
mov
adc
sub
imul
faddl
inc
aam
fwait
stos
push
call
jge
out
lock
and
push
mov
jae
addr16
bound
xor
dec
jmp
das
cs
adc
je
pop
mov
xchg
fs
or
je
xor
mov
mov
push
jg
mov
push
cmc
int3
lret
xchg
fsubl
test
int3
adc
pop
mov
cwtl
test
popa
ljmp
out
scas
addb
sbb
jl
jmp
sub
dec
push
repz
xor
rclb
xchg
cmpl
outsb
mov
mov
mov
push
cs
pop
ffree
cmpsb
sbb
mov
popa
pop
push
cmp
stc
dec
xlat
adc
and
mov
sub
ftst
jle
aam
or
inc
push
dec
test
mov
jecxz
js
in
jae
dec
mov
fdivr
sub
insb
inc
leave
adc
sub
call
cmp
cmpsl
insb
imul
or
test
mov
leave
mov
in
je
dec
dec
jnp
dec
cmp
aas
dec
lea
jae
popf
mov
std
push
aad
sbb
pop
aaa
jmp
sahf
cmp
xchg
xchg
ret
mov
and
in
push
lock
mov
xchg
add
arpl
lahf
inc
test
adc
push
jge
adc
jge
shl
cld
sub
add
mov
lret
gs
xlat
std
pushf
adc
mov
add
ss
push
dec
sbb
mov
xchg
scas
dec
push
pusha
mov
mov
sub
popf
nop
mov
in
stos
insl
cli
mov
lret
mov
sahf
jb
mov
out
cwtl
xor
data16
mov
jbe
in
jmp
jg
daa
cld
sub
mov
xlat
push
mov
sti
inc
jl
mov
out
insl
ftst
test
shll
inc
sub
jge
fcomps
loopne
push
and
lods
jae
dec
popf
lcall
mov
jnp
cwtl
scas
and
xchg
cmp
jb
cmp
std
mov
xlat
fbld
or
sti
lahf
mov
adc
sti
out
adc
inc
fisttpl
icebp
and
cmp
aad
or
mov
shl
in
gs
cmpsl
mov
fimull
inc
xlat
xor
inc
adc
mov
iret
mov
mov
cld
orps
lret
rcr
mov
push
cmp
clc
cli
arpl
xor
aas
dec
test
dec
pop
adc
jb
dec
pusha
push
xor
push
lret
sub
arpl
ljmp
push
push
stos
idiv
pop
xor
push
adc
cmpsb
sub
sbb
mov
mov
or
mov
mov
xor
adc
add
scas
jb
cld
sbb
fs
mov
sahf
adc
lds
jb
int
xchg
repz
cmpsb
push
fstpt
mov
fdivs
inc
rorl
insb
repnz
movsb
xchg
dec
push
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
movsb
fisttps
jle
jge
jle
pop
xchg
cmp
addr16
cmp
xchg
mov
and
icebp
ja
sub
jl
rorl
sub
dec
test
pop
jp
rcrb
and
into
addb
pushf
mov
push
pop
rcrl
pop
int
pop
and
xchg
lcall
bound
xchg
jle
mov
testl
ds
repnz
fwait
pop
push
ret
mov
shrl
ljmp
dec
xchg
aas
jg
mov
aaa
dec
xlat
jg
addr16
mov
xchg
jne
dec
js
sub
sub
inc
sbb
xor
lock
lods
aaa
and
and
daa
adc
movb
jl
sub
outsb
xchg
ss
cmpsb
push
adc
xchg
cmp
out
cmp
gs
sbb
inc
sub
es
lock
iret
je
addb
push
or
sbb
daa
or
dec
jno
jp
pop
add
push
es
addr16
push
cmp
mov
sbb
into
nop
dec
xor
addr16
sub
aas
sub
xchg
fidivrl
and
les
sub
cmp
cmc
sbb
rcrl
xor
andl
push
and
jmp
pop
pop
or
rorb
pop
jp
mov
push
push
cmp
inc
xor
xchg
add
cmpsl
enter
or
inc
test
and
bound
and
pop
xor
xor
repnz
out
and
ret
in
lret
jecxz
test
int3
hlt
sub
lahf
dec
adc
std
push
je
lock
std
add
andl
loope
sar
pop
sub
test
hlt
out
fstl
mov
inc
out
sbb
xor
mov
mov
ljmp
xchg
cmp
iret
mov
and
jmp
xor
arpl
movsb
jp
dec
in
sbb
in
push
outsb
inc
and
inc
popa
andl
sbb
lods
mov
insl
xchg
xchg
pop
mov
in
ret
xchg
xor
out
bound
xchg
in
add
pop
fisttpl
scas
push
movsl
stos
ret
push
pop
ffree
out
mov
push
subl
mov
fisubrs
adc
jp
rcrl
pop
imul
push
cmp
cmp
jmp
dec
or
sbbb
jecxz
mov
cmp
dec
adc
mov
loope
jg
jb
jne
jne
cwtl
int
cmc
lods
jl
adc
sbbb
stc
mov
movsl
js
push
adcl
push
aaa
stos
xor
les
enter
sahf
mov
push
fnsave
mov
xor
jbe
dec
dec
xchg
cmpsl
fisubl
xor
cs
xchg
xchg
push
fsts
push
std
rcl
movsl
test
pop
popa
enter
leave
ljmp
and
lahf
add
nop
call
mov
lcall
imul
aas
shrb
or
popf
jge
cmp
stc
cld
lds
je
ficoms
push
sti
xor
mov
mov
and
inc
inc
xchg
xchg
or
in
dec
enter
cmp
mov
mov
jb
add
repnz
dec
ffree
movsb
push
push
or
xchg
mov
test
jl
dec
sbb
mov
pop
pop
mov
ljmp
fs
xor
xorb
and
mov
out
pop
fcmovnu
pop
mov
fnstenv
popf
push
lcall
addb
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
push
imul
jge
jle
sbb
and
mov
cmpsb
and
outsl
xchg
xlat
clc
dec
enter
out
mov
mov
pusha
sub
xor
sub
faddl
into
lahf
push
add
inc
jno
loop
mov
test
ficoms
fxam
xchg
decb
lock
inc
inc
test
mov
push
lock
jnp
xlat
mov
and
lret
pop
sbb
jno
arpl
mov
sub
pop
jle
pop
or
jmp
sub
aas
aaa
push
adc
enter
inc
push
sbb
sbb
data16
cltd
xchg
pop
adcb
mov
dec
dec
xor
in
add
shl
dec
jae
iret
loop
or
incb
xchg
dec
sbb
pusha
push
iret
xor
cli
call
push
cmp
xor
out
jns
dec
nop
cmpsl
jbe
and
sub
pop
sahf
xchg
fcmovnbe
je
xchg
mov
jle
dec
sub
cmpb
stos
in
xlat
jp
or
inc
scas
cmpsb
inc
stos
push
andb
cwtl
pushf
aaa
fs
pop
push
push
push
pop
inc
ret
cmp
rol
jecxz
mov
jno
repnz
sbb
or
mov
rcrb
gs
xor
jecxz
xchg
sar
add
xor
dec
es
pop
mov
push
xor
mov
es
add
mov
mov
test
mov
iret
subb
sbbl
push
mov
int
subb
decl
or
jbe
leave
adc
in
xchg
adc
je
lea
aaa
dec
int3
or
push
dec
mov
xor
inc
xchg
and
mov
sbb
jecxz
xor
lods
jge
mov
lods
sbb
in
rcr
inc
shlb
out
out
cwtl
rclb
mov
xor
or
mov
inc
out
xchg
push
fiaddl
and
add
scas
loopne
daa
pop
pushf
int3
dec
ljmp
aaa
icebp
dec
and
pushf
pusha
add
or
rclb
lahf
cmp
jnp
arpl
pushf
dec
sbb
jbe
or
xchg
cli
mov
lds
popf
xlat
icebp
lea
stos
ret
out
ds
push
in
inc
inc
xor
mov
sbb
jno
push
push
inc
data16
and
lea
jmp
loope
mov
popa
mov
imul
jl
repnz
out
adc
push
or
lds
jnp
in
and
ret
popf
call
adc
in
push
fbstp
inc
repz
push
lret
mov
mov
mov
lcall
mov
js
movsl
adc
mov
js
xor
cmp
popf
jecxz
and
incb
mov
aam
test
mov
push
std
pop
or
iret
adc
out
test
enter
mov
divb
aas
fst
jp
stos
cmp
lds
add
or
or
test
ss
xlat
movsb
stc
cmp
aad
shrb
xchg
jp
cltd
pushf
rorl
pop
daa
andb
jns
and
sub
sahf
ret
aad
pop
jae
and
into
out
mov
mov
mov
sub
loopne
leave
jg
vpmaxsw
mov
loop
clc
fstpl
add
out
roll
adc
and
sub
sbb
ds
clc
in
sub
fistpl
mov
loope
sti
enter
cmp
jg
jl
or
js
mov
in
mov
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
mov
aad
jle
outsl
jge
jle
neg
lahf
test
into
inc
gs
loop
sti
mov
fwait
or
fsubl
mov
jbe
jb
push
out
sbb
and
mov
ror
aam
pop
gs
mov
es
lock
scas
xor
pushf
dec
xchg
push
icebp
repz
push
loopne
aaa
arpl
mov
outsb
shrl
iret
dec
test
lret
stc
pop
insl
or
scas
lahf
outsb
mov
adc
cmpsb
push
test
jno
in
orl
cmpb
jae
adc
cmpsb
imul
push
cli
or
and
cwtl
cltd
test
jp
mov
sub
cltd
jae
popa
out
xlat
loop
dec
adc
push
and
jns
insb
aas
xor
iret
iret
cmp
je
jmp
mov
loopne
movsb
in
imul
bswap
cmp
nop
lods
lea
ljmp
cwtl
jl
lcall
add
gs
dec
cmp
xor
sbb
pop
imul
ret
repz
stc
mov
and
pop
inc
je
xchg
jmp
ret
ret
mov
test
mov
sub
test
ss
movups
out
pop
push
mov
mov
test
test
aam
sub
adc
andl
in
rclb
inc
pop
sub
mov
idivl
stc
add
pop
int3
loope
cwtl
movsb
pop
or
and
push
mov
pop
cs
adc
addr16
cmp
cmp
mov
push
bound
nop
mov
push
jne
pusha
push
dec
sub
xchg
push
xchg
xchg
icebp
cmp
mov
test
scas
imul
dec
jecxz
pop
push
mov
das
inc
nop
jecxz
pop
jge
adc
das
and
mov
jle
jbe
daa
ror
mov
outsb
inc
add
cmc
iret
rorl
push
sbbl
add
leave
pusha
push
lea
or
mulb
add
fisttpl
dec
push
js
push
movsl
rcrb
in
fnsave
test
sbb
add
hlt
jge
into
insb
jno
dec
or
jnp
out
sbb
aad
out
sahf
sub
enter
imul
mov
lea
rorl
test
xchg
jne
xor
sbbb
popf
xchg
faddp
ja
mov
push
cltd
jle
test
fs
out
inc
inc
inc
xor
shlb
out
push
xchg
xor
imul
lretw
addr16
sarl
cmp
sub
lods
xchg
push
mov
pop
stos
fisubl
cmp
add
ljmp
fmull
iret
jno
adc
in
out
pop
inc
ds
fidivrs
incl
repz
jne
outsl
loopne
xchg
xor
lcall
cs
pop
stos
jg
lea
or
daa
pop
loop
imul
inc
dec
cs
cmpsb
pop
cmp
push
jo
mov
xchg
and
fsubs
cwtl
enter
dec
pop
cs
push
loope
pop
outsl
addb
cwtl
lret
cmp
inc
scas
stos
stos
or
jo
sub
pusha
inc
inc
xchg
loop
sbb
je
push
es
js
in
push
mov
bound
adc
mov
push
mov
pop
movsb
mov
pop
mov
xor
out
push
mov
mov
aad
or
ja
sbb
push
loope
inc
xchg
gs
add
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
repz
jle
jge
jle
lcall
push
aam
les
and
faddp
push
daa
cmp
jbe
gs
fimull
negl
js
shr
in
cmp
sbb
mov
mov
es
fcompl
dec
mov
xor
test
loope
cmpsb
xor
test
sub
xor
rcl
jge
loop
xor
pop
fiaddl
push
in
and
leave
pop
je
dec
rol
daa
loope
bound
xchg
std
jb
lock
pop
sbbl
in
pop
pop
data16
loop
sbb
sahf
jno
pop
int
int3
xor
testb
fbstp
add
sbb
xchg
fdiv
insb
es
jo
cwtl
jp
popf
aam
adc
aas
pop
les
mov
fcmovu
cmp
push
movsl
mov
dec
movsl
mov
and
in
cltd
loopne
xor
loop
mov
push
lahf
or
movsb
shrl
aas
loopne
mov
fists
mov
jle
loope
push
jge
adc
cmpsb
into
lret
std
jbe
ljmp
cld
or
jae
cs
adc
in
push
or
jge
or
mov
push
fcoms
psrld
insl
fstpt
ljmp
jle
inc
mov
add
aam
xchg
js
mov
mov
scas
cmpsl
test
add
cmp
aas
movsb
outsb
js
jno
fadds
sub
stos
adc
mov
xchg
adc
out
mov
and
fistpll
jns
add
out
xchg
in
jne
add
mov
pushf
sti
pop
mov
inc
movsb
dec
ss
movsl
arpl
inc
popf
inc
shll
add
xor
and
mov
test
xchg
mov
lcall
jle
insb
xchg
cltd
lret
mov
aaa
ds
xchg
enter
shlb
lret
push
adc
mov
mov
ror
cmpsb
jno
add
adc
mov
mov
sub
push
xchg
push
or
pop
jg
subl
ret
push
aam
and
hlt
int3
in
mov
sbb
dec
mov
add
cmp
fnstsw
mov
add
xchg
icebp
scas
dec
bnd
hlt
popf
xchg
pop
hlt
mov
fs
ja
or
jns
arpl
or
push
pop
sbb
jnp
xchg
dec
jnp
mov
pop
or
push
movsb
in
pop
das
jb
roll
cmp
cmpl
test
mov
sbb
shll
les
gs
icebp
ror
int
ficoms
dec
call
adc
scas
test
mov
jae
jg
add
test
decl
insl
lods
out
dec
dec
inc
ss
pop
mov
mov
push
lds
push
xor
adc
out
push
push
ljmp
sti
pslld
or
int3
push
sarb
mov
and
aad
xchg
inc
sub
jo
jp
or
dec
mov
xchg
adc
xor
cmovb
fwait
mov
and
sub
out
in
cs
fwait
jp
jge
dec
and
repz
jb
jp
push
dec
pop
pushf
add
or
into
test
lret
in
xchg
mov
shl
inc
movsb
cwtl
pop
loop
test
test
hlt
pop
imul
rolb
xchg
sarb
sbb
mov
shrb
adc
mov
mov
add
jg
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
xor
scas
rcll
adc
imul
loop
call
punpckhdq
adc
or
sti
test
insl
jnp
les
aam
data16
jp
daa
jg
mov
cwtl
jno
and
movsl
push
rcrl
mov
cmp
jge
movl
pusha
cltd
or
stos
jmp
mov
mov
aad
jne
push
sub
popa
adcl
int
xchg
pop
in
mov
fidivs
push
adc
inc
add
xchg
dec
push
mov
xchg
stos
ret
xchg
dec
outsb
and
dec
leave
insl
xor
pop
sbb
jb
mov
jg
insb
mov
cmp
mov
add
repz
pop
mov
sbb
fdivp
or
into
inc
in
adc
jb
adc
push
shl
orb
jae
and
sub
xchg
mov
mov
pop
push
into
mov
lret
data16
int
xchg
push
sbb
or
mov
adc
out
adc
gs
aam
push
movsb
mov
jnp
insb
pop
jns
push
mov
scas
inc
insl
leave
mov
jnp
test
xchg
je
mov
lret
jp
out
adc
and
das
cmp
imul
cmp
je
xchg
jmp
inc
cltd
xor
push
push
or
andb
into
ljmp
cmp
pop
xorb
xor
lahf
dec
pop
cmpsb
add
mov
nop
xchg
rorb
je
fistpl
pop
dec
mov
lahf
decl
and
xchg
mov
jge
jb
pop
ds
inc
mov
addr16
adc
cli
xchg
into
mov
xor
mov
leave
mov
xchg
ds
cli
scas
cwtl
cmpsb
enter
fmuls
fiaddl
shr
and
sbb
dec
jp
pop
out
push
or
jg
mov
lcall
jns
sub
adc
pusha
insl
push
pop
aad
lods
sub
fistpll
xchg
movl
add
inc
inc
pop
jecxz
shll
xchg
jo
mov
fs
leave
out
jo
out
cld
mov
in
popa
dec
outsl
jne
xchg
aad
mov
in
dec
fistps
mov
aaa
mov
cmp
mov
and
adc
and
xchg
jbe
in
test
pop
filds
ja
add
in
jp
pop
fst
rorb
aaa
add
fsubrl
mov
sbb
mov
loop
popf
add
movsl
das
sbb
stos
jnp
imul
push
bound
pop
aam
sbb
mov
std
cmp
or
xchg
lods
xor
data16
lods
xchg
mov
fcom
test
shr
dec
inc
loope
ret
in
pop
outsb
push
pop
mov
ja
sahf
outsb
in
pop
daa
fmull
push
mov
movsl
das
ss
jge
ficoml
ljmp
jae
add
or
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
sub
sub
xor
jle
fists
loop
fnop
add
xchg
ds
int
add
add
cmp
dec
in
lods
push
or
pop
into
and
roll
mov
js
or
out
popa
loop
cltd
and
cmp
sbb
mov
cmpsl
repnz
jb,pn
or
ljmp
push
lcall
fcompl
mov
sub
push
dec
enter
sub
push
movsb
sbb
or
pop
fimuls
jne
sbb
jb
outsl
lods
bound
out
andb
repz
hlt
rorb
add
jmp
jle
push
jnp
les
leave
fwait
test
cltd
xor
jle
xchg
es
ljmp
pusha
jo
test
loop
mov
sub
mov
sub
in
jne
sbb
cmpb
out
mov
push
mov
inc
xchg
cwtl
sahf
push
dec
xor
subl
sbb
jb
gs
adc
cwtl
loopne
in
stc
pop
lds
pop
lret
mov
dec
add
aad
and
mov
jmp
pop
xorb
pop
rol
addr16
addr16
negl
test
xor
outsl
test
dec
push
mov
leave
mov
mov
pop
mov
aaa
sub
cmp
popf
rep
fcmovu
mov
and
or
subl
cli
inc
ret
mov
mov
mov
push
lods
lret
adc
lods
aaa
pop
popa
movsl
push
cmp
movsb
filds
cs
daa
xchg
fs
cltd
pushf
mov
lret
das
lret
fidivrs
stos
mov
or
xor
movsl
mov
push
mov
push
xlat
std
imul
jae
leave
jmp
js
outsb
jle
and
mov
inc
xchg
fisttps
idiv
in
nop
rorl
cmpsl
jle
mov
fs
imul
rorb
jle
outsl
rcl
push
clc
mov
or
bnd
fidivrs
lock
jae
std
sbb
jg
fsubl
xor
es
out
or
ss
push
scas
jg
and
ss
pop
test
xlat
mov
pushf
test
out
scas
js
mov
ds
xor
push
lcall
sub
mov
dec
in
mov
push
and
arpl
mov
lahf
push
insl
push
pop
fadds
cmpsl
call
adc
sbb
shll
lcall
cmp
int3
iret
test
mov
imul
in
fs
mov
lea
sub
pop
lods
or
arpl
mov
in
jl
mov
ret
sahf
lock
test
mov
js
lock
dec
sbb
mov
scas
add
or
add
mov
ds
push
pop
sub
jge
xor
mov
shr
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
das
xchg
gs
jnp
jp
push
in
cmc
mov
xor
cmc
jno
ret
mov
dec
push
outsl
lods
cs
jp
xchg
fiaddl
sub
sbb
mov
dec
enter
fwait
mov
sub
fisubrs
mov
jne
xchg
subl
in
dec
test
inc
sub
push
pop
out
shrw
sarb
cmp
in
popf
xchg
jp
rcl
jne
inc
mov
stos
jmp
inc
jns
mov
cmpsl
sub
add
sti
int
mov
nopl
inc
repnz
hlt
sahf
fstpl
xor
push
inc
and
arpl
ret
addl
xchg
arpl
pop
or
jmp
cmp
ds
sub
ss
jbe
xchg
arpl
sub
fwait
out
add
adc
xchg
cmp
pop
in
adc
outsl
mov
outsl
mov
pop
add
xchg
jl
scas
dec
pushl
ret
mov
xlat
push
mov
inc
mov
ds
loopne
aad
or
fildll
and
js
scas
es
sar
out
std
adc
mov
ljmp
data16
mov
lods
xchg
popf
cltd
mov
lea
pop
mov
mov
jmp
xchg
mov
jecxz
sub
inc
cmc
and
insb
call
jge
xor
pop
mov
add
xor
xchg
int
sub
sbb
imul
xor
push
adc
gs
sub
outsl
mov
add
cmp
mov
mov
cli
sub
daa
xor
sub
in
dec
adc
loope
clc
xchg
adc
scas
jno
daa
les
outsb
pusha
insl
adc
int3
aaa
lret
lds
pusha
pop
testb
mov
lock
add
dec
ret
scas
mov
and
out
pop
jae
xchg
ljmp
mov
std
les
ret
push
test
ja
jl
and
daa
push
adc
les
out
cld
pop
push
add
pop
xor
adc
insl
cmp
push
loopne
fs
mov
push
jecxz
xlat
outsb
or
scas
out
pop
lods
into
jno
dec
insb
mov
sti
dec
cltd
pop
cmpb
aad
inc
clc
push
inc
shrb
daa
fldt
pop
fdivl
loope
rcr
or
shlb
out
je
aam
repz
mov
clc
movsb
add
aas
add
hlt
arpl
mov
mov
pop
clc
jns
or
arpl
jne
dec
shlb
lock
movsb
xor
int3
xchg
ja
gs
testb
adc
pop
dec
mov
ret
mov
ljmp
cwtl
loopne
pop
out
jge
aaa
stos
stos
pop
push
xchg
push
dec
fdivrs
aas
cli
fildl
test
jp
filds
dec
lock
mov
fdivrs
movsl
add
leave
inc
dec
shrb
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
lret
fs
jle
xor
jle
push
fwait
xor
sbb
out
mov
or
push
cmp
push
pop
adc
inc
cmp
fldl
je
pusha
movntps
sub
data16
scas
dec
mov
dec
inc
xchg
add
add
cli
dec
out
stos
dec
movsbl
inc
inc
sbb
std
dec
jl
mov
test
push
imul
add
aam
fdivl
movb
mov
push
scas
xchg
and
aaa
jns
std
rcr
in
push
jecxz
bound
stos
adc
daa
rolb
and
aas
mov
jo
push
sti
add
addb
xchg
stc
sbb
loop
imul
ss
pop
mov
repz
dec
ret
add
or
cmpl
sbb
mov
mov
jo
push
incb
cmpb
jmp
and
add
inc
pop
dec
push
sbb
out
mov
subb
inc
pop
adc
push
js
in
adc
popf
push
xchg
xor
adc
mov
andl
or
repz
jae
cld
lea
rorl
daa
xor
das
jge
push
shrb
mov
loope
insl
xchg
sahf
std
mov
jecxz
xlat
shll
hlt
pop
outsb
ss
pushf
sub
test
enter
rorl
popa
cmp
vmovsd
test
sbb
xor
icebp
push
int3
shr
mov
pop
jge
cs
insb
test
pop
loopne
scas
out
movsl
ror
xchg
dec
or
or
and
push
xchg
cmpsb
adc
pop
xor
pop
ficompl
jae
mov
xchg
or
outsl
cmc
pushf
loop
dec
push
xor
into
int3
push
adc
mov
mov
mov
pushf
mov
orb
ret
dec
xorb
shrb
push
sbb
push
inc
inc
cwtl
es
movsl
jp
lods
jmp
adc
xchg
lcall
aad
insl
dec
mov
cmp
pop
popf
std
add
add
mov
cmp
pop
push
add
xor
adc
sahf
or
int3
aaa
aad
mov
sub
cld
pop
in
push
add
pop
or
sti
decl
stos
cmp
out
dec
leave
std
fadd
jl
xchg
push
xchg
std
inc
xlat
or
cltd
das
and
dec
jmp
mov
sub
sbbl
loop
stos
cmovle
jns
or
cmp
das
imul
shl
sbb
mov
test
xor
ja,pn
push
mov
or
push
ss
call
shll
xor
sub
mov
push
ljmp
subl
inc
repz
rcr
adcl
idivb
out
mov
adc
insl
stc
xchg
mov
ja
out
in
test
mov
sbb
loope
fdivs
mov
mov
fimull
push
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
inc
aaa
xchg
add
jle,pt
xor
jle
push
cmp
inc
cmp
dec
cs
sbbl
pop
adc
pop
and
jle
fisubs
sub
cli
mov
xchg
popf
das
mov
andb
int
lea
add
pushl
jnp
jbe
lock
ds
out
lea
fwait
dec
hlt
shr
inc
out
les
push
mov
int
out
xchg
pop
scas
push
imul
xor
hlt
jae
icebp
enter
hlt
lods
leave
decl
xor
push
dec
shrl
pop
dec
and
xchg
cli
pop
enter
divl
inc
jge
xlat
or
xchg
lock
imul
sti
jo
push
cmpsb
sub
cmpsl
adc
bound
leave
inc
push
sti
faddl
ss
dec
test
jnp
xchg
jg
lahf
in
data16
dec
in
mov
mov
lea
cmp
mov
aaa
call
test
mov
insl
inc
jge
sbb
add
sub
xchg
jg
pop
in
or
out
faddl
mov
inc
mov
mov
jmp
sub
jg
cs
roll
mov
sub
inc
cli
cmovne
scas
aas
rcrl
loope
fmull
mov
cmc
inc
adc
sub
xchg
dec
sbb
rcrb
mov
fwait
adc
xchg
js,pt
scas
add
sbb
daa
in
bound
xchg
mov
jno
xor
in
adc
sbb
icebp
adc
andb
popa
cwtl
scas
lods
add
lahf
sub
aaa
std
push
add
dec
jne
mov
sbb
int3
loopne
cmpsb
mov
sti
sub
rcrb
dec
xchg
shrl
sahf
test
mov
hlt
adc
and
xor
jnp
fnsave
insb
scas
cltd
je
cmp
or
or
out
mov
jg
sahf
leave
iret
add
mov
xor
jnp
cmp
in
test
add
lret
or
mov
mov
out
lret
sub
cmp
adcb
repz
test
pushf
or
push
xchg
pusha
aam
fidivl
icebp
or
or
or
data16
shrl
data16
sbb
inc
jp
scas
inc
in
jo
fsubrs
icebp
adc
popf
inc
ja
pusha
loope
adc
cmp
adc
cltd
sbb
movsl
xchg
lret
sub
or
push
ljmp
sti
xchg
fs
mov
push
xor
mov
mov
pop
jbe
cwtl
sbb
xor
nop
inc
inc
ja
sub
loop
lock
pusha
hlt
imul
aaa
addr16
cmp
loop
jg
sbb
add
sbb
pop
cmp
test
pushf
mov
scas
ficoms
cltd
test
xchg
mov
mov
cmp
mov
jmp
test
jno
ja
shrb
popa
dec
insb
loopne
jle
xor
jle
fdivs
mov
sub
movsb
inc
aaa
adc
test
andl
hlt
out
pop
jmp
inc
movsl
sbb
mov
ret
aas
fistl
add
or
imul
xor
add
lret
movq
xchg
cmp
cmp
push
rolb
lods
pop
adc
and
sbb
fcomip
sbb
movsl
sub
pop
stos
mov
insl
repnz
sbb
ret
or
and
xor
mov
mov
push
ret
cmp
xchg
cs
push
rcll
mov
ret
jle
loopne
jb
or
or
incl
sub
xchg
push
push
inc
xchg
mov
mov
ljmp
add
or
nop
minps
arpl
add
push
mov
jae
mov
adc
jp
or
inc
notl
and
add
mulb
sub
sbb
ljmp
or
mov
ror
cwtl
sar
lcall
dec
daa
sub
pcmpgtw
jns
out
in
cmp
addr16
lock
in
xchg
subl
or
sub
mov
cmp
test
popf
pop
cmp
dec
mov
or
ljmp
and
push
addr16
jb
addr16
cmpsl
pop
lahf
sbb
pop
addr16
insb
rcrb
adc
fwait
insl
sbb
pop
pop
mov
icebp
adc
out
mov
lcall
testl
jae
sbb
adc
fadds
stc
sub
int3
xor
mov
mov
lods
jmp
dec
or
xchg
in
add
inc
dec
xchg
xor
push
xchg
cmpsl
iret
jle
add
mov
add
sti
ror
mov
sbb
nop
shll
fcomps
pop
int3
sarb
ret
mov
or
mov
jo
pop
pop
fidivrl
mov
xor
and
mov
insl
outsb
dec
mov
cmp
adc
inc
sub
xchg
int
cmc
shr
pop
xor
je
icebp
imul
jge
in
loopne
outsb
and
loopne
loopne
inc
js
mov
xchg
int3
lods
pop
rcll
xchg
sbb
xchg
mov
out
sbb
shl
roll
repz
cmp
xchg
xor
inc
stos
ljmp
fdivs
inc
adc
imul
daa
fcompl
dec
cwtl
sbb
pcmpeqw
popa
pop
nop
enter
nop
and
sbb
shlb
outsl
xor
inc
mov
add
mov
daa
repz
lock
sbb
data16
mov
add
in
fsts
loop
mov
mov
inc
dec
add
icebp
clc
cmpsl
jbe
fstl
lods
adc
pop
movsb
movsl
adc
sub
push
adc
rcl
jge
pusha
fcomps
jae
pop
push
dec
push
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
xor
xchg
movsl
cmp
xor
jle
std
adc
test
stos
or
jae
mov
dec
inc
insl
pop
adc
xchg
cmpsl
insl
lea
loope
dec
xchg
es
sub
popf
std
xchg
inc
cltd
scas
sbb
mov
xchg
pop
movsb
outsl
jmp
xor
les
lods
stc
imul
pushf
in
dec
mov
call
sbb
mov
je
xchg
jb
aad
lret
push
jo
test
mov
lods
jne
aam
jo
out
xchg
pop
test
imul
xor
ljmp
rorl
fimull
mov
subl
adc
cmp
stos
cmpl
imul
inc
sub
jmp
mov
add
jae
popf
les
call
dec
inc
push
cmpsb
sahf
aas
movsb
insb
add
xor
or
adc
addr16
sbb
addl
pop
mov
out
mov
lcall
fcomi
jne
popf
call
jge
test
mov
xor
ret
out
stos
sbb
dec
or
fnstcw
mov
ljmp
enter
jns
or
fbstp
out
movsb
ret
push
xchg
or
outsb
jne
jmp
push
jae
cmp
push
mov
jmp
jl
dec
mov
repnz
rorl
lcall
das
jle
clc
mov
and
xchg
xor
pop
sti
and
or
shlb
mov
je
dec
inc
dec
jge
mov
mov
sti
xchg
push
imul
icebp
push
mov
xlat
pushf
xchg
lods
jns
jb
fidivrl
jne
jge
cmp
pop
push
sub
fdivl
idivl
mov
inc
jb
fst
mull
cmp
cli
fistl
or
imul
rorl
flds
lcall
xchg
mov
mov
fmull
dec
jae
stc
dec
outsb
ret
dec
ret
pop
fwait
pop
and
dec
pop
sbb
xor
rorb
ss
pusha
pusha
sub
jnp
sbb
jns
cmp
outsl
jnp
ss
push
dec
stos
xchg
xor
or
push
cs
cmpsb
jl
dec
pavgw
mov
es
pop
fidivrs
lret
jle
adc
add
jmp
lods
pop
and
mov
xchg
dec
mov
outsl
scas
out
pushf
jne
iret
push
leave
sahf
add
repz
aam
ss
xchg
pop
xchg
test
cmp
and
fbld
or
lahf
jp
imul
or
mov
adc
and
push
inc
dec
add
cmp
inc
xor
push
xchg
fadd
fadd
nop
nop
fcom
add
outsb
dec
outsb
dec
mov
cmp
cmc
rol
sahf
xchg
lds
or
sarl
jnp
mov
mov
sub
dec
les
mov
sahf
add
jmp
rol
in
clc
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
pushf
int
jle
fistpll
xor
xchg
xchg
lock
jmp
and
xor
fcmovu
sub
inc
sub
orl
push
pop
jb
lods
sbb
jo
jecxz
and
xchg
add
loopne
outsl
mov
add
inc
lret
xchg
inc
daa
mov
or
inc
and
clc
out
xchg
xchg
faddp
les
cmpsb
mov
inc
popf
ret
inc
xchg
inc
in
dec
faddl
lds
dec
sahf
dec
ds
pop
lock
mov
notl
les
cmp
into
bound
adc
fsubrs
sbb
jle
arpl
jmp
sbb
push
mov
jnp
aam
lods
jne
lds
sub
enter
push
xor
pop
ljmp
movsl
adc
iret
pusha
mov
loope
cmp
fimull
repz
decl
aaa
lea
xlat
out
xlat
adc
xor
jl
pushf
cwtl
sbb
jnp
push
insb
imull
cmp
mov
mov
jo
frstor
js
cli
sub
test
sbb
repnz
jnp
xchg
aas
addr16
shrb
insb
clc
out
mov
aaa
adc
mov
mov
mov
cli
cwtl
mov
push
adc
clc
stos
loop
xor
fcoml
pop
ljmp
jae
xor
fwait
int
aam
xchg
dec
push
mov
test
mov
decb
imul
mov
ljmp
dec
inc
sub
popl
sbb
adc
cltd
ror
fdivrp
cltd
test
xor
xor
cli
bound
call
or
inc
push
xchg
in
arpl
es
addr16
in
repz
jnp
adc
out
into
mov
test
imul
pop
jbe
lods
pop
lret
jle
mov
pusha
sub
dec
iret
sbb
ds
push
cwtl
sbb
cltd
xlat
out
add
mov
orl
cwtl
xlat
push
out
and
outsl
mov
xor
xchg
addl
jg
pop
mov
test
mov
inc
add
xor
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
inc
jb
ret
fistpll
pop
shl
xchg
rol
sbb
std
testb
cwtl
cmpsl
jne
inc
lods
sbb
stos
add
cld
iret
daa
rolb
js
inc
adc
scas
dec
lock
je
dec
mov
jl
cli
shl
pop
jmp
cmpl
bound
adc
pop
adc
add
cmp
les
add
pop
daa
ficomps
dec
dec
aad
in
jge
mov
jbe
aaa
xchg
fsubl
outsl
fildll
pop
bound
pop
shlb
lret
and
jle
xor
daa
mov
xchg
pop
jnp
add
aaa
aaa
jle
xchg
xchg
call
stos
enter
xchg
cs
pusha
and
adc
sub
adc
sub
in
or
es
jbe
sarb
jb
movsb
lret
enter
adc
jg
mov
int
jecxz
dec
lret
ljmp
test
out
inc
mov
stc
xchg
or
aaa
pop
hlt
xor
es
mov
and
push
dec
repnz
sbb
test
inc
inc
jo
and
sub
mov
div
test
add
in
inc
gs
call
mov
subl
mov
lods
jb
rorl
leave
pop
xor
pop
les
out
mov
cli
enter
xchg
cmpxchg
hlt
adc
jg
mov
jne
jns
mov
das
and
out
xchg
pop
call
jle
js
insb
imulb
cvtps2pi
mov
in
and
and
cmpsl
jne
mov
inc
movsl
fisubrl
jmp
push
dec
push
rcrb
mov
mov
pop
inc
and
mov
addr16
popa
adc
loope
popa
mov
fwait
and
rcrb
cmp
mov
out
jp
xchg
vsqrtsd
lds
adc
sbb
leave
cld
iret
jge
fistl
jp
adc
popf
hlt
xor
loope
mulb
jge
xor
test
xchg
ret
add
xchg
dec
ds
insb
aam
cli
bswap
xor
mov
dec
arpl
mov
jns
push
adc
or
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
push
ret
movsb
sarb
jge
jle
roll
dec
mov
push
pushf
mov
xlat
sub
xchg
sbb
xor
out
cmp
out
mov
inc
and
ja
adc
sbbl
add
or
mov
sub
and
adc
mov
iret
mov
pop
test
sub
lea
int3
mov
and
sub
jl
bound
sbb
aaa
sub
cmpsb
jl
sahf
mov
nop
andl
jo
aaa
sarl
inc
sbb
js
jne
in
jmp
pop
add
call
adc
sbb
scas
or
mov
lret
outsl
mov
arpl
xchg
push
and
sbb
sarb
xor
xchg
bnd
mov
loopne
fdivp
mov
loopne
fcomip
mov
xchg
dec
xchg
mov
aas
scas
sub
ss
rolb
xchg
adc
lcall
nop
sbb
out
mov
in
jmp
cmpsl
loopnew
jl
pop
dec
cmc
pop
adc
in
cmp
aam
xchg
std
ret
cmp
jns
pop
push
lods
les
lret
or
jl
xchg
mov
scas
sbb
mov
mov
dec
pop
out
sub
adc
es
cld
aaa
std
repz
div
sbb
mov
xchg
sub
inc
dec
jecxz
mov
jb
cmp
sti
out
dec
popf
into
add
add
add
loopne
dec
jne
sub
xlat
faddl
in
repz
xchg
and
subl
adc
push
movsl
clc
cltd
leave
test
out
adc
fdivs
xor
cmp
push
aad
test
mov
jl
xor
push
inc
and
dec
mov
ds
cmp
sti
mov
bound
pusha
les
fnstsw
sbb
ret
jno
cwtl
inc
jnp
and
insl
stos
into
xchg
call
adc
mov
cld
push
ja
mov
and
ja
inc
xchg
pushf
inc
popa
jns
lds
mov
pushl
pop
scas
push
dec
hlt
rolb
xchg
cmp
mov
mov
cmpsb
pop
jno
and
insb
push
test
push
addr16
mov
add
das
push
rcll
xor
or
pop
add
int
data16
fcmovu
adc
rcl
outsl
std
or
push
sub
das
xor
rclb
push
icebp
mov
leave
adc
pop
enter
insl
testl
mov
das
push
and
or
shl
jg
xchg
into
mov
push
adc
lock
pushf
sbbl
push
xchg
inc
sub
and
dec
pop
stc
aas
in
jl
ud2
add
push
lahf
dec
xor
sbb
jo
mov
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
sub
jle
and
jle
clc
pop
or
add
stc
xchg
into
lods
out
outsb
adc
lea
jge
cli
xor
cmp
adc
imull
push
pop
aam
sbbb
mov
xchg
int
add
and
outsl
enter
jne
mov
out
push
nop
hlt
xor
jne
pop
int
pop
leave
js
xor
std
mov
je
dec
das
xor
ficompl
jno
scas
loope
dec
repz
lahf
fimull
mov
das
std
cmp
cwtl
out
push
orl
sbb
mov
mov
test
cmp
popf
mov
xor
and
stos
cmp
test
cmpsb
mov
outsl
mov
cmp
addb
mov
cmp
lock
repz
push
sbb
inc
fnstenv
jbe
lods
in
push
pop
inc
mov
inc
push
sti
jmp
movsb
outsb
orl
jg
bnd
lcall
or
jmp
repnz
das
popa
outsl
lock
xchg
xor
scas
push
and
mov
push
jbe
mov
sub
dec
iret
mov
inc
sbb
inc
jnp
mov
or
fs
jge,pt
pop
mov
xchg
jl
cmpb
dec
negl
jno
xor
mov
xor
jle
push
lods
dec
mov
dec
hlt
dec
sysret
pop
push
gs
sub
inc
fistps
pop
jne
mov
in
loopne
rep
cmpb
push
loope
fdivl
das
push
sub
int
and
movsb
xchg
sub
add
mov
rorb
mov
pop
loop
mov
shlb
sub
andl
pop
jne
xchg
ret
and
push
and
adc
mov
xor
push
rorb
scas
mov
mov
bound
aaa
das
call
ds
mov
repnz
cmpsl
fmuls
or
cmp
inc
sti
dec
xchg
ja
lods
sbb
insb
push
bound
xchg
rcr
out
mov
add
cwtl
das
rorb
aas
fstpt
imul
pop
mov
jg
adc
cmp
inc
push
pop
push
xchg
push
sbb
cmp
pop
lods
les
adc
xor
sti
faddl
movsl
inc
lahf
mov
sti
enter
mov
cwtl
cmpsl
jno
fnstcw
lahf
mov
mov
jnp
mov
add
cmp
cmp
xrelease
adc
pusha
xor
mov
fidivrl
push
mov
loope
negl
add
cmp
add
out
dec
inc
xchg
lret
out
mov
icebp
pop
ret
ret
outsl
ret
push
push
in
pop
loop
shlb
int
hlt
repz
and
pop
xchg
sbb
in
aam
add
jno
out
cmc
lret
movb
sti
push
inc
pushf
xchg
mov
js,pt
or
pop
mov
pushf
dec
clc
jo
xchg
out
enter
add
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
cmpl
and
jle
in
lret
xchg
dec
imul
test
adc
inc
pop
jg
loope
or
cmpsl
mov
jb
xchg
mov
ss
out
sub
les
fsubl
repz
ds
ret
fldl
xchg
jge
hlt
in
adc
mov
add
mov
sbb
mov
sbb
sahf
push
pop
std
push
and
add
pop
mov
nop
scas
mov
dec
mov
mov
loope
js
xor
test
imull
mov
mov
xchg
or
in
icebp
or
cmc
xor
cli
sub
sbb
xchg
cs
push
rcrb
lret
lods
fdivrs
dec
mov
push
xchg
out
xor
insl
mov
out
out
xor
jne
pop
mov
push
xor
xor
insb
dec
push
sahf
sub
aaa
or
sbb
push
clc
js
addr16
test
movsb
into
inc
outsl
arpl
xor
mov
rol
jle
mov
mov
push
mov
adc
jne
mov
ds
jle
cmpsb
xor
in
jmp
fsub
jp
jbe
dec
pop
sub
pushf
mov
int
cld
imul
ss
fistps
xchg
mov
jl
cmp
mov
aam
inc
mov
mov
sbb
mov
cmp
jecxz
xchg
cmp
add
insl
or
les
sbb
push
clc
scas
out
ja
lcall
mov
xor
or
sub
adc
and
bound
loopne
in
mov
incb
fsubl
push
push
add
std
mov
int
dec
push
jg
lret
fstpl
test
enter
add
xchg
in
or
push
inc
lods
pop
push
ds
mov
fistpll
sbb
ret
inc
stc
push
pop
insb
jno
leave
xchg
pop
cmp
aam
add
into
xlat
jns
test
jp
movntps
mov
mov
lds
inc
xchg
push
sbb
push
outsl
jmp
jp
jo
inc
sbb
outsl
dec
push
test
sub
aaa
bound
jecxz
call
or
cltd
sub
mov
cmpsl
andl
xchg
ds
push
rorb
roll
je
dec
pop
add
inc
pushf
jmp
fs
or
push
push
push
cltd
push
adc
dec
lret
adc
popf
xor
sub
filds
push
dec
outsb
fbld
in
ret
scas
mov
flds
adc
push
mov
mov
test
mov
sbb
mov
scas
leave
mov
inc
or
xchg
hlt
and
or
add
gs
gs
mov
and
ss
jns
xor
pop
rdpmc
popa
rol
jno
sub
and
sbb
aas
arpl
dec
in
pop
mov
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
leave
mov
jle
in
jle
fwait
aam
xchg
xchg
cmp
cltd
in
push
and
lret
pop
dec
mov
out
fiaddl
pop
xor
jnp
jge
mov
mov
fldpi
jbe
sub
mov
pop
jnp
jb
mov
mov
cmc
out
popa
out
sub
dec
fmuls
aam
push
lods
sbb
je
out
das
dec
dec
out
roll
push
cltd
xor
pop
lea
or
mov
subb
mov
pop
cmp
sub
mov
cmp
cmp
cwtl
push
ljmp
stos
adc
movl
push
jnp
fwait
xchg
jno
pop
es
std
xchg
sub
and
jnp
orl
shrl
xor
stc
outsb
mov
aad
call
iret
testl
js
aaa
imul
mov
adc
repnz
lock
popf
adc
mov
sti
in
sbb
mov
rolb
into
call
test
cltd
pop
out
add
fsts
idivl
sub
in
jg
xor
jmp
and
test
insl
mov
jl
sub
insb
jmp
adc
xor
cmpsb
cmp
inc
clc
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
push
nop
xlat
jle
in
jle
ds
notl
lea
inc
push
cs
daa
lods
ss
sbb
xchg
xlat
jp
fnstcw
and
push
pushf
add
stos
cmp
push
enter
pop
mov
xchg
mov
push
movsl
mov
std
or
scas
fwait
shrl
inc
jns
pop
xor
outsl
xchg
std
jne
xchg
and
and
cli
mov
sub
rcr
jbe
xchg
aam
ret
repnz
push
adc
dec
cmp
test
and
les
shlb
pop
sarb
push
std
sbb
jp
mov
out
inc
push
add
roll
es
stos
or
stos
dec
int3
xchg
out
ja
pusha
xchg
test
lret
bound
lea
jbe
daa
ret
pusha
out
test
adc
in
test
inc
pop
pop
adc
andb
mov
lret
adc
cwtl
jns
mov
push
popa
push
cmpsb
loop
dec
jmp
mov
cmp
mov
mov
jno
sbb
inc
dec
and
cli
stos
mov
mov
lcall
mov
jno
and
lea
call
sbb
movsb
es
enter
int
mov
dec
loopne
mov
out
jge
test
roll
jo
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
jae
inc
popf
xchg
pop
mov
out
outsl
inc
lea
add
inc
lods
xor
push
and
or
loop
dec
cwtl
push
mov
jo
cmpsl
jno
subl
cmpsb
jecxz
pop
pop
imul
int3
mov
ja
icebp
add
test
int
testb
addr16
xchg
outsl
and
nop
out
icebp
or
mov
mov
dec
add
cmp
mov
stos
mov
negl
imul
gs
lea
and
fwait
sub
iret
jecxz
jg
std
xchg
and
aam
ljmp
fadds
xchg
lret
inc
lods
push
cwtl
cmp
inc
mov
mov
push
aad
pushf
push
push
inc
inc
and
cmp
fists
or
std
data16
lahf
cmp
adc
addr16
mov
loopne
inc
push
ja
lcall
inc
lods
stos
adc
xchg
ret
xchg
fidivs
xchg
dec
or
jg
loop
inc
and
push
sub
and
scas
cld
fcmove
push
hlt
cs
rcrl
loopne
cmp
repz
sub
and
xchg
js
test
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
mov
and
in
sarb
in
jle
fildll
push
sub
lahf
mov
shrb
stc
xchg
iret
andb
add
cmpsb
ss
mov
leave
push
iret
dec
and
xor
and
xor
clc
lods
movl
sub
jns
inc
mov
push
mov
cltd
and
data16
aaa
xchg
data16
inc
add
fdivl
adc
jae
add
shl
mov
or
cmpsl
mov
loope
ret
jae
mov
xlat
lds
sub
sub
mov
push
jle
add
insw
sub
sbb
in
stos
jl
loope
mov
or
fistps
inc
mov
shlb
inc
jno
pop
adc
or
xlat
movsl
movsb
xor
mov
es
shll
les
lds
aad
adc
jb
jo
sbb
in
fisubs
ret
mov
pop
add
mov
mov
mov
jne
xorl
adc
fyl2x
fs
fwait
lods
pop
lock
push
sarb
shrb
cmp
mov
ljmp
jae
push
dec
loopne
jb
and
or
cwtl
je
push
adc
icebp
stc
push
test
insl
pop
push
inc
xchg
mov
xor
add
jmp
adc
test
or
sarl
in
jle
stc
and
sub
xor
push
lcall
push
jno
aad
inc
add
pop
pop
xor
push
and
imull
cmovne
repnz
push
sub
call
es
outsb
aam
fsts
dec
jp
popf
je
inc
add
test
sbb
gs
mov
add
mov
and
call
adc
repz
mov
adc
pop
fnstcw
mov
mov
lcall
cmp
push
rcrb
xchg
in
jb
jae
adc
out
fld
ret
subb
iret
cli
out
mov
dec
test
mov
mov
addb
jns
shlb
shr
sub
mov
cs
into
arpl
enter
das
in
mov
cmp
xor
push
add
xchg
mov
inc
fwait
lcall
cmp
xchg
imul
cs
out
cs
daa
jb
xor
dec
fistpll
sbb
incl
gs
jg
addr16
and
stos
lret
dec
out
jmp
fistps
xor
fucomip
inc
mov
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
cmp
jle
in
jle
and
das
pop
mov
xor
fs
cmp
mov
or
addr16
cmp
dec
mov
pop
dec
fnsave
adc
adc
out
pusha
fcomp
mov
sub
gs
add
sbb
mov
mov
in
ja
mov
imul
push
leave
arpl
ss
mov
add
test
movsl
mov
lods
mov
push
shrb
mov
outsb
mov
cmpsl
cmp
jo
xlat
test
push
in
cs
xchg
inc
sbb
decb
cmp
sub
xchg
iret
push
clc
jle
imul
xchg
outsb
adc
xchg
mov
jge
jle
mov
shlb
or
xor
cs
outsl
sub
repnz
fisubs
popf
lods
mov
xchg
jbe
cs
add
movsb
jb
jle
clc
mov
scas
iret
scas
mov
shrl
mov
scas
jg
test
es
xor
arpl
mov
adc
dec
or
and
fwait
daa
xchg
adc
push
popa
adc
cmp
das
sub
or
es
add
mov
hlt
inc
mov
adc
adc
fucom
es
ljmp
mov
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
in
xlat
fcomps
scas
fidivrs
in
jle
mov
xor
pop
pop
jl
movsl
dec
aad
popa
jge
rcrb
pop
adc
jge
bnd
fsubr
dec
lds
pusha
leave
lds
add
xor
cmp
dec
push
lcall
cmp
data16
iret
jne
dec
adc
mov
repz
daa
push
xchg
jno
insl
pop
cmpsl
sbbb
cmp
dec
pop
test
shl
dec
adc
inc
sub
push
mov
pusha
insb
xchg
jno
lods
jne
xchg
lods
lods
cwtl
dec
jb
mov
mov
jbe
pop
out
mov
jmp
es
popf
andb
movsb
mov
addr16
cmc
add
jne
add
lahf
dec
cld
fdivrs
aaa
sub
push
pop
mov
cmp
inc
out
cmp
cmp
mov
and
shlb
and
add
xchg
enter
out
movsl
dec
or
xor
xor
mov
mov
mov
fldpi
push
cmc
xlat
iret
lock
aaa
jle
or
lods
outsl
mull
mov
rclb
cmp
cld
nop
popf
adc
cltd
or
mov
lods
jo
pop
jmp
in
in
add
clc
ja
adc
sbb
scas
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
or
icebp
int
fdivrl
in
jle
sub
cmc
scas
mov
adc
mov
jne
or
movsb
aas
lret
shrb
cld
and
xor
out
cltd
lahf
mov
or
push
dec
xchg
adc
outsl
daa
leave
test
push
outsl
jecxz
orb
xor
lock
xchg
sbb
ljmp
cltd
imul
sub
lods
mov
add
orl
mov
xchg
mov
fsts
jle
cmpsl
jmp
or
jg
jnp
insl
xchg
loopne
ljmp
addb
xchg
push
push
mov
les
push
out
iret
mov
dec
jl
popa
add
mov
inc
ret
mov
fwait
xchg
popa
arpl
xchg
or
leave
lods
adc
js
lret
imul
mov
inc
sub
dec
idiv
fst
dec
add
fiaddl
pop
adc
ss
testl
shlb
inc
mov
xor
jne
jo
aad
mov
sbbb
repnz
mov
xor
fsubrl
addr16
inc
fwait
mov
stc
jp
ja
sbb
out
adc
daa
in
call
jo
push
lret
cli
add
mov
pop
sub
lods
and
in
testb
aas
pop
iret
pop
movsl
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
sbb
xchg
xchg
addr16
jp
mov
jno
je
and
jns
jl
cli
in
mov
xchg
mov
push
cmpl
adc
sbb
xor
mov
pop
push
rorb
fisttpl
out
loope
push
xchg
stc
bound
mov
pop
cmp
sub
add
subl
sub
fwait
sub
fdiv
xchg
imul
idivb
movb
dec
jne
movb
popf
jmp
lcall
push
shlb
scas
push
sbb
lahf
ss
mov
adc
mov
test
addl
rorl
imul
push
sub
test
fidivrs
lcall
jns
inc
jae
cmp
enter
jp
fstl
fildll
inc
inc
pop
enter
cwtl
adc
push
adc
jno
aam
bound
push
sahf
flds
lret
push
daa
scas
lahf
cmpsl
mov
outsb
repz
std
sub
inc
sbb
adc
or
lret
push
enter
scas
movsb
add
sbb
adc
push
jne
sbb
or
adc
scas
test
dec
adc
cmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
orb
jle
jge
jle
sbbl
mov
xchg
and
mov
sti
and
pop
mov
cli
test
push
add
fldenv
cmp
ljmp
out
mov
xchg
shl
jmp
loope
out
pop
pop
push
pop
cmp
or
stc
std
pop
dec
add
xor
outsl
std
pop
nop
sub
dec
and
movsl
mov
cwtl
insl
add
fwait
add
cmp
or
aad
sahf
imul
jae
call
gs
int3
shll
jb
jp
stos
sahf
dec
and
cmpl
ja
push
or
mov
call
pusha
mov
pop
inc
cmp
push
mull
mov
or
imul
andb
popf
push
mov
orb
int
mov
test
test
std
stos
cli
outsb
jmp
mov
fnstenv
dec
shr
and
outsl
jle
jne
arpl
es
bound
clc
mov
outsb
xlat
pop
out
inc
jne
pop
pop
xor
sbb
popa
ss
inc
aaa
bound
jl
stos
lret
or
mov
lea
lds
lret
sbb
in
movsb
cwtl
jecxz
lret
jl
pop
adc
dec
stos
outsb
mov
mov
xor
imul
sbb
loope
mov
outsb
xor
icebp
stos
mov
inc
inc
mov
sti
cmc
adc
xchg
in
xchg
in
mov
pop
mov
or
adc
jmp
test
jp
jbe
pop
jl
in
inc
fsubs
arpl
or
xor
addb
mov
negb
mov
push
jnp
aas
iret
fxch
cmpl
into
addl
mov
pop
aam
push
push
pop
cmp
inc
sbb
cltd
imul
scas
out
and
or
jns
dec
pop
scas
pushf
jno,pt
adc
push
not
xor
mov
lahf
sub
shll
mov
xchg
jle
stos
inc
jecxz
ret
push
cmp
mov
dec
paddq
xchg
jnp
push
sbb
clc
jae
arpl
dec
and
rdmsr
jnp
jge
mov
cltd
cmpsb
mov
dec
adc
sbb
fnstenv
stc
dec
pushf
cmp
xchg
lods
das
xor
cmp
in
mov
clc
bnd
dec
inc
hlt
sub
xchg
cmp
loop
imul
call
frstor
jp
xor
and
dec
addl
stc
aas
aam
pop
es
fstp
add
pushl
nop
jne
mov
pop
stos
jae
aaa
and
xchg
ljmp
xchg
inc
mov
sbb
jp
in
jbe
test
push
movsb
sub
xchg
faddp
inc
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
and
jp
jle
adc
cmc
hlt
arpl
shlw
in
lods
leave
mov
push
sbbb
cmpsl
push
sub
push
or
test
add
fs
push
mov
add
ds
push
arpl
pop
mov
test
mov
mov
andnps
testl
and
jns
lock
icebp
or
stc
mov
outsl
inc
std
push
or
jl
dec
cld
xor
inc
rcll
sahf
jno
js
xchg
ficomps
or
je
jmp
inc
sub
loopne
dec
or
add
mov
cmp
add
rol
cltd
push
xchg
jne
mov
sbb
dec
and
inc
dec
addr16
dec
addr16
arpl
addr16
ljmp
fwait
mov
scas
push
adc
jbe
mov
adcb
and
bnd
loopne
popf
pop
pushf
pop
dec
in
ret
fucompp
pop
in
dec
fldl
jnp
nop
sub
into
jo
mov
scas
add
xchg
dec
int3
or
mov
push
pushf
cmp
push
insl
push
sub
dec
movsb
fists
leave
ret
pop
cmp
imul
aas
dec
jle
mov
ret
jg
mov
insb
je
mov
dec
xchg
cmp
shlb
or
or
mov
lcall
pop
enter
xchg
jns
adc
mov
adc
cmc
xchg
loopne
pop
icebp
inc
and
imul
mov
add
dec
mov
add
pop
push
les
sub
cmp
inc
lods
cmp
mov
xchg
mov
lds
cli
or
es
rorl
mov
or
es
outsb
xchg
subl
bound
mov
nop
xor
lods
lret
ror
aaa
and
mov
test
sub
mov
fdivr
insb
push
out
mov
pop
jae
call
or
inc
data16
add
sub
sbb
sti
sbb
outsl
push
jmp
add
hlt
outsl
js
insl
ja
push
dec
nop
mov
daa
add
bound
xchg
xor
loope,pt
mov
imul
test
cmpsb
stc
bound
jno
mov
mov
out
stos
sbb
push
outsb
sarl
add
and
mov
fisubl
call
lret
adc
cmpsl
push
and
inc
jl
ljmp
loopne
push
and
fldt
pop
cmp
cs
rorb
in
jae
in
push
jns
mov
cli
les
pop
ror
mov
jbe
std
ret
fucomi
outsl
dec
jb
adcb
repnz
jmp
outsb
cwtl
mov
sub
lret
cwtl
test
adc
movzwl
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fst
leave
add
jle
jp
jle
jge,pt
pop
je
xlat
jge
les
pop
das
xchg
inc
loop
push
es
push
loope
xchg
rorl
mov
ja
nop
js
jge
or
xchg
pop
sbb
xor
xor
inc
gs
rorb
and
test
and
inc
ss
aas
push
jle
nop
scas
or
push
push
xor
adc
popf
ret
push
ljmp
mov
pop
add
cmpsb
mov
sbb
xchg
mov
in
popa
fbld
mov
nop
out
cmp
xchg
dec
inc
lea
ds
das
cltd
pop
mov
pop
cmc
adc
fcoml
xchg
mov
mov
call
lret
xlat
fs
pop
push
cwtl
movsl
jge
sub
daa
test
test
xor
es
pop
cs
push
or
mov
mov
sahf
fwait
dec
jg
cmp
push
inc
mov
mov
push
icebp
sbbb
sbb
cmp
dec
inc
rclb
adc
xchg
fnstcw
iret
jno
mov
jne
jecxz
pop
push
push
faddl
imul
movsl
mov
mov
imul
data16
cmp
jge
adc
aas
xor
fisttpl
add
daa
test
push
repz
es
sbb
push
test
lret
and
sbb
mov
sbb
push
dec
mov
cmp
mov
adc
pushl
xchg
and
repz
inc
das
cs
movsb
dec
in
jl
adc
jae
shll
xchg
push
mov
adc
sbb
jno
cmp
and
jmp
movsl
inc
jnp
out
pop
insb
pop
pop
sti
mov
xor
xlat
push
cwtl
lods
cltd
popf
jbe
inc
xor
jbe
popa
sti
xor
jns
in
dec
fdivs
call
nop
lds
loopne
std
lods
scas
fsubp
dec
repnz
repnz
pop
xor
adc
loop
sbb
fs
sahf
fistps
dec
fs
jo
jbe
ret
pushf
sub
out
std
push
shl
sbb
cli
pavgw
push
cmp
fsubrl
arpl
pushf
imul
clc
adc
iret
shlb
outsb
cli
loope
bound
xor
or
jbe
and
dec
bound
cmp
pop
stos
negl
das
or
sub
xchg
dec
outsb
out
jbe
or
push
mov
andb
mov
dec
popa
dec
mov
daa
xchg
mov
pushf
mov
push
mov
sub
cs
and
loopne
and
sarl
jecxz
add
sbb
aas
notl
fists
popl
sbb
cmp
rorl
test
push
add
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
ja
and
je
jle
jp
jle
inc
filds
mov
int
mov
fcmovne
add
cmp
out
fcomps
addr16
popf
mov
das
inc
lds
rorb
push
ret
or
cmp
icebp
in
jb
jle
adc
dec
pop
or
jle
leave
inc
ffreep
push
je
enter
es
mov
jns
cli
adc
jns,pn
pop
mov
outsb
nop
hlt
pop
dec
sub
aad
sbb
sub
push
sub
cmp
adc
bound
jns
mov
cmovae
fwait
and
test
dec
cmp
sbb
xchg
dec
bound
add
stc
cli
dec
adc
shlb
pop
mov
mov
in
test
or
push
adc
jge
pop
inc
out
pop
sbb
cmp
int3
xor
insb
orb
and
aas
mov
hlt
fisubrl
jl
in
xor
mov
fidivl
xchg
jns
loopne
sub
jp
nop
pop
aaa
dec
xorl
sub
mov
add
jmp
das
jae
xchg
mov
pop
sahf
flds
jae
jmp
xchg
ret
jb
dec
sbb
adc
pop
inc
add
push
or
jle
mov
shlb
rep
or
xchg
mov
dec
inc
adc
xchg
xchg
cwtl
ljmp
and
daa
or
xchg
fbld
add
dec
idiv
out
or
ljmp
push
gs
jae
movsb
mov
ja
dec
movsb
shlb
add
das
push
xchg
lods
outsl
test
cltd
movsb
loop
mov
call
imul
das
and
xchg
cltd
arpl
push
adc
jo
imul
pushl
mov
jb
xor
aas
push
mov
jmp
in
push
sub
cmp
jl
and
add
mov
dec
orl
lods
sbb
push
push
stos
xchg
mov
icebp
fldenv
jle
cmp
lods
pop
jge
pop
mov
cwtl
cmp
rcr
xchg
sbb
jg
and
cmc
sarb
adc
jp
sahf
dec
jae
xchg
mov
leave
push
test
lds
pcmpgtb
cmp
mov
mov
push
notl
dec
xor
outsl
iret
pop
pusha
xchg
xor
or
jg
roll
jl
out
into
test
lock
ljmp
iret
pop
mov
mov
or
cs
pop
icebp
pop
adc
jnp
sub
add
std
xchg
iret
das
sub
sub
fistl
testl
push
sbb
aaa
xchg
ror
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
pushf
jb
jo
jle
jp
jle
xchg
or
or
test
sbb
dec
in
inc
fs
add
out
add
pop
adc
out
repz
sub
jg
cmp
loope
movsl
dec
mov
ficomps
mov
jo
add
mov
in
pop
call
addr16
mov
dec
mov
pop
sbb
ds
and
jne
cli
mov
test
arpl
mov
mov
mov
pop
rclb
test
fsub
fcoms
orl
push
lods
enter
mov
inc
lcall
cwtl
stc
mov
xchg
sub
mov
ljmp
add
jae
mov
loopne
push
sub
push
add
or
add
fcmovnb
sub
jl
and
aas
add
push
pushf
fstps
scas
sub
pop
fmull
push
mov
xor
pop
scas
lahf
orb
ss
fcoms
jno
mov
pop
adc
mov
scas
call
jmp
and
or
movb
and
mov
dec
cmpsl
std
mov
repz
cmp
xlat
dec
mov
popl
ja
cmp
push
or
sub
inc
popa
mov
popa
imul
aad
mov
fnstcw
in
fstp
add
fbstp
clc
dec
in
aas
jnp
add
adc
or
fisttps
dec
push
js
imul
add
inc
fbld
and
es
loope
rorb
sub
jae
xchg
adc
nop
mov
push
fistpl
sbb
cmpsl
hlt
sub
out
cld
sarl
into
inc
sbb
popf
cltd
lahf
sti
scas
lods
xor
ljmp
inc
xor
xchg
bound
xlat
or
add
xchg
sahf
fs
pop
rcll
xchg
inc
and
jns
or
mov
or
in
and
pop
xchg
xchg
rcll
jnp,pt
lods
sub
xchg
lahf
sahf
pushf
arpl
sbb
test
icebp
inc
stc
addl
fildl
andl
jg
add
add
cwtl
int
rcr
or
clc
pop
mov
push
adcl
sub
xor
ds
pop
cld
sbb
testl
sub
movsb
scas
adc
scas
loop
call
rcrl
or
repz
pop
icebp
sub
adc
xlat
adc
in
mov
in
xlat
pop
xor
mov
and
int
adc
loop
ja
inc
scas
mov
outsl
cmp
xor
dec
or
mov
mov
jno
ret
xchg
lods
cmp
lock
cltd
into
popl
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
sahf
lret
xchg
lahf
jl
jle
jp
jle
inc
iret
lea
sarb
or
sbb
dec
into
fcomps
jl
loop
lret
xlat
mov
pop
mov
lods
dec
shrb
imul
pop
bound
out
stos
xor
das
mov
arpl
jl
ja
enter
xchg
and
adc
push
push
dec
fldl
stc
jns
push
out
gs
movsl
ljmp
jecxz
lret
dec
push
out
pop
add
pop
in
jb
test
adc
arpl
leave
sub
pushf
mov
movsb
push
mov
add
rcl
lea
xchg
aas
pop
pop
mov
push
push
dec
push
sub
or
test
sub
insb
insl
mov
push
or
and
push
fcmove
imulb
or
imul
and
data16
mov
pop
xchg
fwait
push
add
push
pop
xchg
jmp
dec
cli
call
sbb
mov
scas
lods
aam
je
pop
shl
sub
push
mov
jno
into
insb
or
ds
pop
stc
jae
push
les
mov
cmpsb
outsl
xchg
mov
mov
in
cmp
addl
ds
fbstp
daa
scas
jnp
mov
mov
add
imul
lock
mov
jns
xchg
les
fucomi
stos
inc
adc
xor
sti
xor
mov
sarl
jne
imul
dec
js
or
adc
add
fildll
test
cmp
jmp
arpl
pop
push
bound
or
mov
xchg
push
mov
cmovge
rcll
mov
pop
stos
lds
loop
cmp
inc
adc
fnstenv
lods
mov
mov
jo
sub
pop
lcall
imul
mov
ret
inc
push
js
mov
push
push
dec
arpl
mov
sbb
je
sub
lret
in
cs
pop
out
test
and
fsub
mov
cmp
pushf
shl
mov
cmp
rolb
inc
addr16
and
push
mov
pop
stos
loope
hlt
or
out
lret
or
repnz
repnz
fs
cmc
das
data16
or
data16
sub
lret
fs
xor
mov
inc
add
and
stos
aad
test
aam
loop
sbb
jae
cmpsb
ret
mov
addr16
xchg
movb
js
test
and
xchg
xchg
add
into
nop
addl
pop
imul
test
pop
xchg
jmp
in
notb
sub
scas
out
xchg
js
jle
jp
jle
out
push
mov
fnstsw
and
mov
dec
push
push
lret
push
fwait
xor
sbb
shld
push
xor
loop
imul
push
pop
fs
inc
xor
out
jg
mov
dec
adc
cwtl
cs
int
cmp
pop
inc
lock
pushf
aad
push
in
rcrl
add
dec
imul
xchg
mov
pushf
pop
out
push
and
mov
or
push
leave
into
lds
push
es
cmp
test
mov
xchg
cwtl
pop
imul
push
mov
jnp
jl
pop
push
push
repnz
push
jle
adcb
pop
mov
imul
inc
xor
dec
aaa
and
jmp
inc
cmp
sub
or
sbbl
sarb
inc
cltd
pop
fs
call
push
cmp
push
mov
ret
pushf
jno
jmp
xor
push
jecxz
int
xchg
or
sub
hlt
pop
pop
push
cmp
push
repz
or
loop
adc
leave
jns
std
mov
push
shl
cmpsb
stc
lcall
mov
dec
test
jae
xor
inc
imulb
cli
je
pop
pop
mov
jbe
push
lods
test
jmp
mov
jecxz
push
std
cmpsb
movsb
inc
cmp
loop
mov
xor
pusha
and
test
xor
iret
jp
push
push
loopne
lds
addb
xchg
and
pop
push
and
adc
nop
test
mov
pop
fsubs
inc
pop
mov
scas
add
xlat
mov
jnp
int
test
das
fldl
enter
fldz
outsb
push
out
mov
shlb
mov
sub
mov
test
cmp
xor
mov
sbb
pushf
test
mov
sub
sbb
mov
sahf
shll
jnp
mov
jecxz
mov
dec
insb
pop
aas
rorl
dec
lret
push
add
addr16
fld
mov
or
movsb
and
cmc
fiadds
or
cltd
mov
bound
nop
movsl
sub
mov
cwtl
je
push
jge
inc
or
push
cld
cmp
pop
fisttpll
pushf
xchg
sub
mov
xchg
xor
es
nop
clc
lock
fcomip
fstl
arpl
into
push
rcrl
insl
ret
xchg
fiaddl
stos
inc
adc
cld
lcall
mov
adc
dec
outsl
mov
inc
iret
outsb
mov
jge
xchg
fidivl
mov
leave
push
jnp
pop
incb
in
movsb
repnz
in
shrb
mov
sbb
pop
out
xlat
pop
push
repz
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
adc
add
jle
jp
jle
pusha
out
adc
pop
push
xor
adc
in
mov
stos
jbe
test
daa
loope
lock
mov
mov
ficompl
icebp
insb
add
mov
jg
movl
cmpsl
pop
or
lea
inc
loop
cmp
movsb
cmp
sbb
and
sub
fimull
pop
push
xchg
addb
push
out
leave
pop
push
inc
fcmovb
repz
loope
and
in
sub
sub
sub
inc
mov
mov
insb
mov
test
mov
pop
fildl
dec
lods
xor
in
out
cmp
ret
lcall
into
mov
cmpsb
cli
insl
notb
pusha
jge
mov
sbbl
gs
andb
out
xchg
rclb
cmp
cmp
push
or
dec
repnz
outsb
mov
pushl
push
pop
das
int
fmuls
aas
mov
mov
inc
sahf
adc
cmp
orl
pop
mov
mov
test
cmp
lret
aad
pop
icebp
push
mov
or
push
cld
jb
push
adc
and
cli
jg
fstps
lock
jb
pop
gs
jns
pusha
ljmp
sbb
mov
add
jbe
insb
push
push
cli
hlt
imul
fpatan
call
mov
xor
movsb
sbb
inc
push
xor
fsubs
movsb
add
mov
imul
mov
rcrl
fs
inc
stc
shl
test
repnz
in
mov
lds
pop
aad
inc
shlb
cmp
mov
popf
test
mov
cmp
in
adc
lcall
add
dec
push
pop
mov
sbb
in
mov
daa
lods
sub
and
or
mov
imul
addl
ja
cmp
rclb
adc
pop
mov
jns
jno
ss
cwtl
idivb
mov
mov
notl
jecxz
mov
jecxz
clc
in
xchg
mulb
mov
out
xchg
xor
adc
dec
out
shll
mov
push
sub
out
imul
pop
push
sbb
add
js
mov
lock
fptan
pop
mov
jge
call
dec
xor
sub
and
xor
add
mov
mov
mov
fwait
adc
loope
mov
or
jo
pop
inc
jbe,pt
jb
sub
xchg
xchg
iret
push
popf
fiaddl
fsubrp
or
mov
mov
mov
pop
mov
pop
lods
pop
push
sub
jmp
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
incl
repz
jp
jle
scas
dec
orb
dec
sbbb
cmp
int
xchg
fsubl
dec
adc
icebp
fisubrl
inc
sti
adc
test
loopne
pop
sub
pop
movsl
sarl
inc
mov
jecxz
leave
rorb
add
cmp
dec
xchg
or
adc
push
mov
in
jo
shlb
sub
sbbb
push
mov
mov
mov
jns
mov
in
popf
pop
sub
sti
mov
pop
mov
xchg
adc
sbb
jbe
imul
mov
sbbb
ret
sbb
imul
gs
repnz
mov
fwait
ds
lea
xchg
jl
adc
or
clc
and
and
mov
adcb
cwtl
sbb
inc
ja
mov
ret
pusha
les
xlat
cmp
outsl
insb
mov
jnp
mov
dec
or
xlat
jno
fs
or
xchg
ret
faddl
jmp
scas
pop
mov
or
pop
mov
mov
arpl
adc
orb
mov
inc
fld
in
adc
xor
or
jg
scas
xor
stc
std
sarl
fs
fstpt
int
shlb
stos
aad
mov
mov
aaa
mov
add
testb
jl
int3
movsl
pop
mov
push
xor
lret
insb
mov
sub
push
jge
pop
mov
notb
fisubs
fisttpll
pop
imul
popf
pop
xchg
loop
imul
push
out
sub
clc
jp
call
mov
movsb
in
cld
das
xor
jecxz
enter
push
mov
lcall
jno
std
jge
or
ja
lds
jg
test
sahf
movl
inc
fistl
jp
sub
ja
cmpsl
fadds
insb
add
sub
js
cs
pop
repz
cltd
cwtl
inc
out
js
dec
or
adc
xchg
ret
add
mov
xchg
popa
or
or
xor
mov
inc
icebp
ss
pop
sti
xchg
aad
inc
sbb
aaa
or
add
lcall
outsl
imul
push
js
dec
xorl
int3
dec
js
fstps
imul
cli
jne
insb
xchg
or
cld
jb
pop
mov
dec
jnp
dec
fs
cmp
jmp
inc
das
divb
jnp
ret
mov
ss
std
shl
movsb
scas
mov
cltd
subl
mov
gs
call
out
fnsave
js
or
xchg
or
shl
jae
insl
ja
fnstcw
repnz
and
cmc
adc
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
jmp
inc
jbe
jle
jp
jle
mov
xor
loope
shlw
pop
loopne
imul
lret
inc
push
outsl
idivl
push
jns
pop
subl
sbb
out
mov
xor
pop
dec
jo
sbb
mov
xchg
push
add
sub
shlb
inc
lahf
pop
mov
pop
mov
aaa
out
insl
pop
pop
xchg
aad
cltd
arpl
in
sbb
pop
jae
stos
sub
xchg
mov
decl
xor
fdivrl
sub
ljmp
insl
jecxz
aad
fdivrs
ss
sti
push
mov
dec
inc
mov
mov
and
insb
test
inc
or
pop
scas
pop
mov
dec
add
jmp
push
or
stos
cld
outsl
arpl
dec
pop
pop
bound
repnz
adc
inc
test
sub
sub
or
push
inc
mov
mov
rcll
jb
dec
xchg
pop
aaa
mov
push
daa
jmp
pop
pop
lret
lock
adc
shl
inc
testb
out
xor
loope
call
and
add
leave
andb
rcrl
mov
ja
lea
add
pusha
jmp
sub
mov
pop
movsb
ror
inc
inc
jmp
sub
lahf
int3
mul
sbb
pop
xor
lret
xchg
movsl
xor
ljmp
jmp
cltd
roll
xchg
jmp
jns
test
arpl
mov
gs
ret
cmp
and
jg
mov
push
test
out
iret
ja
sub
bound
dec
ret
cmp
scas
push
lea
fsubr
mov
rcrb
jbe
xchg
inc
out
popf
out
int3
pop
fldenv
fwait
dec
adc
pop
cmp
sub
mov
cs
xor
roll
fs
arpl
aad
aas
addr16
dec
sbb
int3
mov
cld
aad
jno
je
mov
idivl
shr
ds
adc
push
cmc
addr16
jmp
pop
imul
lret
jmp
jne
mov
imul
push
jg
adc
xchg
lods
repnz
shl
inc
mov
cld
xor
outsl
call
jge
sub
xchg
pop
sub
xor
xchg
fdivrp
lods
fcompl
dec
sahf
xchg
fsts
mov
stos
xchg
push
pushf
imul
call
jne
mov
jl
dec
push
shll
jns
xchg
aas
in
push
mov
mov
jle
ss
adc
in
mov
orl
push
xor
nop
inc
ss
movsb
push
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
sub
sub
sub
mull
vunpckhpd
sbb
clc
mov
ret
push
jg
into
stc
hlt
mov
mov
stc
push
push
mov
or
cmc
xor
pusha
inc
pop
sub
cmp
into
pop
and
das
das
cmc
xchg
jg
cmp
dec
movsb
movsb
inc
push
fstpt
add
push
mov
fildll
xor
sbb
jg
add
jg
dec
int
cmpsb
fsubrl
stc
adc
xlat
pop
push
sbb
xor
btc
xlat
icebp
pop
in
outsb
mov
mov
stc
insb
jns
enter
adc
lea
fstl
ss
test
pop
and
mov
std
push
pop
dec
cmp
sarl
push
nop
and
js
out
fwait
cmp
dec
pop
push
xor
shrl
lds
cmpb
adc
pop
loopne
sbb
addr16
pushl
ret
sub
mov
mov
jl
dec
dec
inc
repnz
decl
lock
push
add
sbb
push
add
cmp
scas
jmp
xchg
fisubs
mov
mov
mov
aaa
and
inc
scas
pop
imul
xor
push
sarl
push
imul
or
aaa
dec
aad
sub
sti
cmp
sbb
dec
cmp
and
mov
testl
and
popa
inc
mov
adc
stos
jo
push
jle
imul
test
mov
jne
sub
lret
inc
filds
nop
xchg
cwtl
out
repz
lret
dec
sub
and
cld
push
pop
in
jnp
dec
popa
or
sub
adc
inc
rcll
cmp
scas
lret
lds
xchg
mov
jle
mov
push
cmp
lret
push
or
cmpsb
stos
cld
add
sbb
mov
in
jnp
rclb
jo
cmpb
add
icebp
lcall
arpl
push
popf
cmp
or
mov
mov
xor
nop
clc
jmp
fisubs
jb
out
cmp
or
jns
cmc
ffreep
ja
or
jnp
push
aas
push
ds
outsl
lods
out
mov
mov
subl
or
int3
enter
sbb
add
lcall
addb
mov
js
in
imul
fbstp
popa
sub
adc
and
std
popf
stc
mov
bound
repnz
shrb
shrb
pop
es
js
test
inc
daa
test
lcall
out
cwtl
cmpsl
rol
pop
mov
xchg
fldlg2
and
add
aad
stos
dec
dec
loopne
mov
add
xchg
add
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
clc
jle
jp
jle
dec
cs
jle
idivl
jb
and
sti
sub
cmp
loopne
adc
dec
add
divb
repnz
lods
jmp
jg
dec
jae
push
sbb
cmp
mov
sbb
jns
inc
insb
jge
jo
les
nop
in
dec
sub
inc
xchg
cltd
sbb
mov
pop
adc
fstl
es
lock
stos
sbb
mov
mov
sub
jne
pop
jae
mov
mov
js
adc
inc
mov
enter
push
rcll
lds
int
aad
xlat
dec
mov
jl
je
inc
mov
sti
mov
filds
push
pop
mov
sub
xor
popa
xchg
sbb
mov
xchg
lods
adc
popf
xchg
push
lret
shlb
push
iret
jle
mov
out
or
mov
aas
mov
cltd
push
mov
mov
jge
mov
mov
lock
xchg
cmc
inc
cmp
xchg
mov
rcll
pop
test
insl
test
xor
lea
jns
sbbb
cmp
jb
mov
xchg
fwait
stc
movsl
int3
imul
pop
sbb
stos
shrl
popa
roll
or
xchg
mov
lcall
fildl
out
and
inc
push
sti
xchg
adc
enter
ss
outsl
pushf
imull
insl
pop
lds
and
add
in
mov
xor
scas
test
aas
sti
mov
inc
jp
inc
mov
mov
clc
mov
js
fdivr
sub
inc
jmp
push
jge
and
cmp
and
mov
adcl
push
lock
addl
push
hlt
lds
lret
inc
inc
and
pusha
jmp
adc
xor
jmp
or
jmp
push
jns
mov
jns
outsb
sub
mov
mov
mov
bound
pop
cltd
jbe
xchg
test
loopne
out
filds
dec
movsl
or
sbb
lcall
lret
mulb
push
adc
lods
scas
and
in
and
shlb
xchg
enter
lock
lret
std
and
xor
out
aaa
jae
push
arpl
outsb
sbb
pusha
in
enter
mov
add
or
cmp
scas
cmp
movsb
mov
xchg
repz
adc
jbe
mov
xor
notl
jg
mov
cmp
icebp
jle
add
int3
xor
lods
test
cltd
jle
cwtl
jmp
push
es
xorl
fsubrs
or
das
mov
repnz
mov
mov
push
push
out
dec
cmp
data16
jge,pt
pusha
lret
leave
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
addl
jle
jge
mov
xor
popf
adc
mov
add
outsb
pop
xchg
mov
lret
xor
gs
mov
fsubrs
outsl
inc
movsb
adc
in
fistpll
inc
into
cmp
mov
fisttps
cmc
imul
pop
test
outsb
gs
mov
insl
inc
cmp
cmp
push
jnp
jp
mov
pop
push
cmp
jg
fisubrl
cwtl
xor
mov
xchg
orl
cs
test
js
mov
mov
adc
dec
ret
lcall
pop
inc
icebp
jnp
ret
lcall
or
xor
cwtl
fadd
push
out
decl
inc
xchg
or
sbb
ja
pusha
jp
mov
jmp
push
lahf
jle
rorl
out
pop
pop
push
in
aas
setbe
dec
cmp
outsl
mov
cmp
or
flds
inc
adc
test
dec
mov
xchg
fsubs
in
insl
scas
or
pop
add
ret
into
test
mov
ret
dec
sahf
pusha
mov
call
push
addr16
rcrl
sub
lock
cwtl
jno
out
mov
mov
mov
dec
mov
or
push
sbbb
icebp
hlt
pusha
sub
cmp
dec
hlt
lods
mov
test
loope
push
mov
jge
push
sub
movsb
js
or
lea
push
mov
into
adc
addr16
rcll
insb
jne
leave
daa
mov
cmp
inc
leave
and
xor
dec
repz
xor
xchg
push
nop
dec
sti
pop
push
add
adc
imul
sub
or
fldenv
cmc
idivl
les
outsl
shlb
aam
imul
sub
xor
inc
inc
imul
inc
sub
add
nop
popa
or
aaa
mov
test
lock
ja
lahf
cmp
inc
push
movsl
sbb
add
mov
pop
in
mov
imul
nop
cmp
sbb
sbb
daa
bound
jne
fimull
decb
push
jecxz
xchg
inc
test
sub
fiaddl
fnstcw
push
stos
push
pop
mov
dec
mov
cmp
sub
mov
imul
xor
sbb
in
inc
pop
and
jmp
inc
push
or
cmp
sub
movsl
mov
sbb
add
push
cmc
push
cmc
adc
xchg
pop
or
mov
mov
jmp
out
xor
mov
loop
into
xor
xchg
xchg
orl
jle
mov
lea
push
or
leave
mov
mov
add
clc
arpl
mov
loopne
jecxz
bnd
lcall
nop
pop
test
or
jne
mov
add
jge
arpl
ss
mov
imul
mov
sti
mov
test
push
std
test
int3
mov
mov
add
mov
sarl
inc
insl
cmp
xchg
cltd
pop
aaa
popf
mov
mov
aaa
sub
std
ja
mov
addb
xor
mov
loopne
jne
mov
xor
jns
rorl
jge
or
stos
or
add
daa
movb
or
sub
in
arpl
dec
or
jge
mov
loopne
fsubrs
fninit
js
aam
inc
fisttpll
fwait
in
pop
add
test
imul
roll
push
fwait
xor
stos
std
in
repz
xlat
dec
and
sub
ret
sbb
push
xchg
in
mov
xchg
mov
mov
sub
mov
mov
xchg
sbbb
orb
mov
push
cmc
push
adc
icebp
mov
imul
and
add
fisubl
jge
dec
jp
sub
add
lcall
jnp
pop
or
add
inc
xor
and
xchg
sti
fadd
inc
push
lea
xchg
dec
mov
int3
jns
bound
xor
jg
sbb
push
outsb
adc
mov
adc
jns
insl
xor
push
push
fs
movl
push
jb
adc
xchg
pusha
or
push
cmp
or
push
jg
push
hlt
pop
add
dec
iret
fsts
add
pop
mov
sub
scas
xor
ret
test
push
sti
iret
pop
fbstp
inc
mov
popa
push
call
xchg
mov
push
std
mov
cmp
xor
mov
into
cltd
fidivl
jne
or
adc
cmp
fisttpll
jg
dec
add
pop
adc
stc
in
and
ret
xchg
push
pop
cltd
pop
ds
inc
mov
filds
aas
enter
and
in
fimuls
dec
pop
addr16
test
lea
cli
js
loopne
pushf
arpl
addr16
es
shll
imul
inc
xchg
int3
sub
outsl
int3
daa
cli
testl
dec
fs
jmp
leave
lret
lahf
aaa
out
pop
rcr
out
cli
cmp
cmp
pop
and
lods
sbb
xlat
idivl
fiaddl
arpl
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
inc
push
jge
jle
push
out
xor
sbb
mov
mov
inc
arpl
xor
movsb
mov
stos
scas
leave
inc
out
inc
lock
jb
shlb
popa
insb
insb
int
xor
setnp
cmp
mov
sub
dec
xchg
stos
ret
mov
lret
in
mov
dec
shrl
enter
fbld
mov
mov
push
addr16
mov
mulb
sti
push
test
and
sbb
add
inc
cmp
adc
movb
ficoms
inc
outsl
dec
inc
add
nop
adc
mov
loope
addb
add
mov
inc
clc
jge
int3
lds
aas
or
in
mov
call
lods
mov
inc
aam
mov
mov
mov
lods
push
xchg
or
dec
mov
movsb
xlat
movsb
cltd
sbb
lret
jno
repnz
std
adc
insl
lcall
inc
mov
inc
test
xchg
mov
sub
mov
and
and
mov
movsl
xor
loope
xor
test
test
or
cld
negb
popf
and
fldcw
inc
pop
fwait
pop
pop
lock
jmp
popf
lret
mov
test
mov
pop
or
iret
dec
jl
xor
js
std
ss
jbe
movsb
sub
sbb
andl
pusha
es
jo
push
mov
xchg
add
imul
and
mov
jbe
cltd
test
sbb
insl
push
leave
mov
aas
call
adc
cld
push
fcmovb
dec
mov
fldenv
jp
fimuls
insb
fucomip
xchg
add
addl
jae
inc
jmp
mov
roll
jl
lea
xchg
test
push
repz
rcll
arpl
xchg
outsb
jae
xchg
xchg
push
pop
xchg
adc
fwait
xchg
addr16
pop
jb
in
inc
pusha
sub
out
push
xor
inc
jo
push
mov
inc
inc
jg
jb
mov
cld
xor
inc
adc
push
mov
dec
cmp
jne,pt
or
js
sub
xchg
fistpl
adc
es
shll
cmp
sub
dec
and
scas
xor
or
adc
fcmovnbe
loopne
test
lret
sti
sbb
dec
and
pop
adc
adc
pop
jae
cmpsl
es
push
push
mov
and
add
pop
push
std
outsl
mov
jle
or
pop
data16
push
call
jb
dec
inc
jnp
ljmp
xchg
sub
rclb
cmp
int
test
mov
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
push
hlt
sub
mov
jge
jle
test
jle
int
notl
daa
lahf
lods
imul
and
bndstx
xchg
and
ror
loopne
cli
sti
stos
icebp
and
imul
jle
xor
fwait
adc
jecxz
addr16
cwtl
lret
xchg
pop
mov
dec
sbb
and
adc
add
out
mov
mov
stos
jmp
mov
cltd
mov
outsl
jbe
repnz
inc
jb
mov
add
aaa
mov
popl
popa
pop
popf
or
and
add
stos
xlat
pop
cmpsl
mov
test
push
frstor
stos
jecxz
push
inc
fcomip
xchg
jmp
jecxz
vandnps
mov
mov
xlat
out
pop
jp
mov
lods
sub
imul
mov
lds
test
lods
in
jmp
push
add
cmp
mov
dec
lods
movsb
imul
adc
mov
ja
cwtl
adc
xchg
lahf
xor
jmp
pop
call
sbb
rorb
sbb
adc
cmp
sahf
pop
lcall
mov
out
or
mov
sbb
cs
aaa
sbb
xor
roll
mov
rcrl
lcall
aaa
rorl
ljmp
repnz
hlt
mov
adc
mov
mov
sub
fidivs
mov
das
xlat
sbb
repnz
fwait
mov
call
hlt
test
fistpll
sub
push
jg
imul
shlb
inc
les
decl
xor
nop
enter
aas
hlt
iret
popf
movsb
xchg
sarb
imul
push
mov
scas
push
dec
xor
arpl
test
add
mov
repz
ja
test
sbb
xchg
ja
sub
xchg
cmp
clc
jne,pn
cmp
popf
mov
mov
push
dec
clc
mov
sub
enter
adc
rcrl
cld
pop
and
aam
movsb
or
mov
pop
dec
mov
sti
outsl
insl
lds
orb
sahf
sbb
jl
or
pop
movsb
pop
cmp
xor
in
ljmp
mov
jg
and
daa
lcall
fisttpll
lock
add
pop
loop
xchg
push
popf
movsb
and
mov
rcr
les
std
test
negl
dec
out
lock
adc
loop
test
xchg
test
shrb
lcall
push
cwtl
mov
fisubl
push
sbb
stos
cmp
xor
fwait
push
outsl
scas
dec
repz
push
mov
sbb
inc
adc
ds
mov
stos
in
outsb
loope
cmc
call
or
mov
dec
mov
or
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
xor
test
dec
jl
mov
xchg
xchg
out
sbb
test
cmp
stos
add
jmp
testl
mov
in
adc
sbb
push
addl
mov
cs
aaa
imul
imul
jns
push
push
orb
popa
sbb
inc
sahf
jne
mov
sti
cmp
insl
or
or
jnp
mov
push
mov
mov
cmp
xchg
cmp
inc
xchg
pop
dec
mov
mov
repz
inc
add
cs
pop
sbb
cmc
pop
cmp
or
cmp
mov
push
push
int
data16
or
sbb
push
incl
push
aaa
add
loopne
fcmovnu
and
xlat
pop
sbb
cli
loope
sbb
xchg
jmp
imul
scas
test
aaa
lods
lcall
aam
ret
push
stc
sub
pop
xchg
cmp
test
xchg
mov
notl
or
pop
pop
cmp
push
sub
cmpsb
stc
dec
into
repz
lock
and
jge
mov
sub
test
fnstsw
lret
notb
or
das
cmp
nop
xor
test
sbb
push
jns
dec
sbb
mov
mov
sbb
inc
mov
stos
jbe
jae
mov
sahf
ficoms
popf
js
cs
sub
cs
in
loope
mov
fiaddl
test
out
leave
test
mov
sub
imul
and
sahf
pop
dec
push
mov
xchg
aam
enter
adc
cwtl
lret
xor
push
push
in
sahf
frstor
stos
and
pop
jno
xchg
test
lahf
mov
cs
in
and
add
mov
cltd
xor
sbb
fidivs
out
mov
popl
movl
outsl
popf
push
push
sbb
hlt
repnz
inc
pop
cltd
and
enter
int
clc
and
or
sbb
in
mov
es
rclb
movsl
xor
sbb
inc
sbb
and
xor
lret
dec
pop
test
xchg
sbb
aam
rclb
mov
das
fmul
or
cmpsb
int3
dec
xchg
inc
xchg
movb
push
out
inc
lods
aad
mov
add
xchg
nop
mov
popf
call
and
sbb
aas
jnp
mov
lods
nop
pop
inc
mov
or
push
lcall
jno
add
test
push
sbb
in
mov
ja
bound
pop
ja
and
xor
jmp
adc
cmpsl
mov
bound
add
pop
push
sub
mov
inc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
hlt
add
and
jle
test
or
cwtl
aaa
add
outsl
cmp
shll
iret
add
pop
sub
lods
andl
adc
sbb
jns
dec
jle
pop
push
jns
xor
mov
leave
xchg
cmp
pusha
les
xchg
int3
hlt
cltd
or
add
cmpsb
jg
xlat
arpl
or
scas
sbb
cmpsl
dec
sbb
xchg
imul
sbb
lea
lods
stos
outsb
cwtl
in
lds
jo
aam
adc
xchg
xchg
jle
int3
test
xor
mov
insb
jg
int3
or
popa
and
mov
and
sbb
xchg
xchg
insl
inc
inc
sbb
std
mov
xchg
sub
add
aam
js
icebp
jne
push
pop
test
push
dec
dec
or
sub
add
fstpt
sbb
js
arpl
inc
stos
adcl
pusha
pop
fs
inc
into
mov
das
testb
xor
push
xchg
pop
push
jno
jo
jge
dec
cli
dec
scas
xchg
mov
pusha
leave
sahf
push
or
fsts
loope
cli
mov
dec
or
popf
push
fdivrs
xor
adc
sbb
imul
adc
aaa
jbe
cli
xor
and
sbb
sub
sub
imul
xchg
jae
pop
loopne
mov
sub
cmp
inc
fimull
imul
cmpsb
dec
push
jb,pt
pop
mov
sub
pop
call
fadd
dec
inc
mov
out
inc
jno
adc
shlb
jge
les
and
cld
test
ret
mov
dec
ret
sbb
xchg
cmpsl
pusha
in
cwtl
mov
insb
pop
sub
pop
clc
sbb
inc
push
pop
push
or
pop
mov
pop
cmpsb
sub
je
and
loop
mov
popa
push
jge
lods
mov
cmpsb
mov
mov
outsb
mov
and
mov
sbb
imul
mov
enter
jns
mov
xchg
inc
aam
iret
mov
aas
push
sti
mov
dec
addr16
addb
jbe
stc
fildll
shlb
sub
xchg
sti
pop
rorb
pop
in
je
jmp
push
dec
lds
xor
fbld
dec
shll
add
std
push
xchg
test
daa
fsub
shll
dec
mov
jae
mov
mov
je
cmp
mov
mov
icebp
xchg
adc
sub
lret
in
fcmovnb
sub
xor
mov
ljmp
cmp
in
imul
movsb
lcall
pop
xorl
mov
add
icebp
mov
fwait
pop
rorb
leave
pop
call
movsb
int
inc
xchg
pop
insb
lret
mov
stos
imul
fidivl
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
aad
sbb
jle
jge
jle
aas
mov
and
test
imulb
icebp
test
or
pop
pop
dec
jnp
sub
dec
lahf
or
fwait
adc
push
mov
lret
ret
or
cmp
push
jo
mov
imul
jp
mov
clc
jae
test
int3
xor
add
cltd
jp
push
popf
loope
fs
lret
je
fnsave
mov
and
addr16
gs
test
mov
repnz
sbb
pop
mov
mov
scas
add
pmaddwd
mov
pop
dec
ss
ja
push
mov
and
ss
jp
insl
pop
testl
ja
test
add
xchg
repnz
push
or
dec
mov
jne
ss
xor
mov
push
adc
repnz
push
sbb
inc
sub
ss
adc
fiaddl
inc
scas
dec
loopne
pop
push
jp
mov
call
pop
aas
and
mov
or
dec
jb
adc
das
or
mov
push
push
push
das
inc
fdivrl
xor
ss
nop
fidivl
sti
mov
push
mov
push
push
ds
cmc
iret
lock
test
mov
xchg
sub
pop
cli
xchg
iret
fwait
test
sarb
mov
test
fnstsw
sarl
pop
lds
lods
add
movsl
push
xor
jns
fbld
xor
dec
cmc
push
jns
add
sarl
xor
mov
xor
dec
flds
pop
jno
cmpsb
dec
mov
jg
inc
inc
mov
addr16
cmpsl
push
push
xchg
push
data16
mov
add
flds
imul
push
inc
sbb
imul
int
iret
into
adc
pop
loopne
mov
std
pop
xchg
fisttps
stc
enter
ficomps
shlb
mov
inc
ja
add
jg
add
pop
outsl
sbb
mov
imul
nop
adc
sub
add
push
cs
jg
lea
jnp
jecxz
mov
mov
dec
push
jns
outsl
call
aaa
in
mov
dec
push
popf
call
scas
lods
push
sbb
imul
jo
push
ds
mov
pop
push
or
add
xchg
add
and
pop
nop
lahf
fst
dec
and
test
inc
lret
xlat
sub
fwait
pop
subb
cmp
icebp
insb
xchg
mov
outsb
out
scas
mov
cmpsb
xchg
aas
cmp
mov
das
stos
pop
sub
outsl
adc
popa
leave
fiaddl
push
and
push
pop
dec
sbb
mov
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
out
jp
nop
jle
jge
jle
or
push
lds
jbe
xchg
gs
into
lods
inc
pop
lret
les
pop
dec
int3
imul
or
mov
ror
xchg
pushl
clc
mov
jl
in
mov
scas
jo,pt
sbb
push
rcrb
sahf
and
xor
xor
std
mov
push
jae
pop
rcr
cli
cmp
jmp
push
sbb
ljmp
lahf
test
pusha
std
sbb
sbb
call
or
sub
sbbb
adc
test
add
mov
push
mov
lret
dec
xchg
mov
arpl
sub
pop
mov
fildl
jp
jnp
mov
sub
xor
jno
repnz
sahf
xchg
cmp
outsb
stc
insl
xchg
inc
dec
out
popa
xchg
xchg
jmp
xchg
xlat
std
mov
inc
add
addl
insl
jb
sti
ficoms
sbb
incl
sbb
push
inc
int
mov
jl
or
xchg
shlb
enter
cld
mov
icebp
pop
test
call
xor
mov
leave
stc
and
dec
cmp
lock
test
js
jnp
jae
xor
ret
adc
out
push
mov
mov
imul
pop
sti
fadd
ret
mov
pop
or
fwait
dec
imul
test
movsb
imul
xchg
fsubl
mov
xchg
jecxz
lcall
test
xor
xor
sbb
jecxz
xor
shll
jmp
das
adc
jbe
fcomps
dec
imul
cmp
ja
push
mov
sbb
dec
mov
sub
push
pusha
push
mov
out
mov
xchg
repnz
cmp
gs
icebp
xor
sub
cld
insb
or
stos
dec
ljmp
cmp
or
out
lahf
stc
jne
adc
sub
test
or
sbbb
push
aas
iret
shr
rcrb
xchg
adc
jecxz
inc
fs
dec
icebp
rorl
adc
gs
or
fwait
sub
adc
stos
andb
lret
ljmp
ss
jno
popl
lcall
int3
shrl
add
cli
mov
cld
aad
sub
inc
nop
movsl
loopne
mov
add
jno
xor
mov
xchg
pop
xchg
inc
sub
dec
sub
outsl
cltd
add
push
shl
rcll
sub
fistpl
push
stc
lods
push
xor
adc
test
jae
rol
jb
mov
push
outsl
movsb
xor
lea
jmp
das
subb
mov
xor
addr16
inc
shll
jle
jge
jle
mov
notb
stos
inc
arpl
in
xor
aaa
mov
lea
ret
int
adc
mov
aaa
add
pop
leave
movsb
aad
aas
gs
mov
aas
decb
imul
pop
push
mov
add
data16
pop
push
mov
js
iret
xor
iret
dec
jg
xor
ds
sub
ss
jnp
mov
pop
pop
jno
cmp
push
loope
push
aas
fcoms
jge
mov
repz
fimuls
mov
data16
and
outsb
js
in
mov
test
and
loope
les
or
aas
push
call
stos
mov
sbbb
out
mov
push
es
scas
and
xor
fwait
cmp
movsl
loop
inc
pop
or
dec
bound
pushf
dec
fwait
test
and
push
bound
push
xchg
je
shlb
pop
cmp
fnstcw
data16
cmp
adc
and
add
in
mov
push
jbe
mov
dec
inc
or
or
xchg
out
pop
fstpt
mov
xor
insl
lahf
mov
adc
add
mov
dec
cltd
dec
xchg
sub
jg
sti
es
or
rol
das
and
jl
outsl
jl
push
or
sub
dec
nop
in
push
mov
jbe
sbb
mov
icebp
add
jmp
rcll
xchg
leave
mov
nop
cltd
loop
jmp
cmc
icebp
mov
addl
sbb
lcall
xor
in
adc
enter
add
inc
or
push
dec
inc
inc
dec
adc
push
mov
dec
pop
shll
push
fmull
or
imul
dec
insb
inc
pop
mov
movsb
sub
add
xchg
rclb
iret
and
push
clc
dec
daa
dec
mov
mov
sub
push
cmp
push
push
lret
sub
sub
lahf
mov
push
sub
lahf
dec
sbb
jae
jmp
dec
add
scas
mov
fistl
ret
gs
jne
movsl
push
mov
negl
xchg
or
jp
jne
and
clc
cli
jbe
sub
jo
mov
lds
adc
push
mov
test
dec
inc
jp
mov
xor
jle
pop
dec
scas
inc
lahf
lods
sahf
lea
fsubrl
enter
cwtl
fadds
push
add
pop
out
aaa
ficoml
ja
push
push
daa
mov
mov
jmp
repnz
adc
aad
fcoms
bound
xor
jge
jle
add
add
and
call
test
mov
icebp
inc
rorl
push
xor
xor
push
mov
scas
fdivrl
and
ret
sub
out
lea
cli
add
mov
adc
push
xor
daa
testl
fcomip
stc
dec
pop
inc
lds
test
popl
add
out
dec
sbb
cmpsb
pmaxsw
shl
push
pop
jecxz
or
call
jnp
adc
xchg
fmuls
mov
xchg
sbb
xchg
icebp
pop
movsb
pusha
mov
xchg
xchg
inc
jle
movsl
sub
jbe
dec
xor
add
test
mov
sbbb
inc
push
mov
push
xchg
ss
icebp
jecxz
jne
xchg
mov
inc
popf
xchg
pop
ja
sub
cmp
call
jbe
lds
xchg
repz
mov
cmc
xchg
dec
sub
std
shrl
dec
and
mov
lods
adc
daa
jmp
sbb
gs
cwtl
xchg
jo
xchg
cmp
add
pop
cmp
xor
push
aam
mov
lds
clc
movb
pushf
adc
xchg
ffreep
push
popa
notb
add
sub
test
orb
scas
std
sub
push
sub
pushf
int
stc
and
sbb
mov
test
test
inc
or
inc
fwait
sub
in
shrl
dec
dec
and
sbb
popf
fildl
mov
sarb
sar
mov
into
dec
cmc
mov
inc
or
cmpsl
pop
lret
lcall
iret
mov
ljmp
nop
stos
xor
and
test
ja
movsl
or
repz
cmp
add
sahf
pop
repnz
dec
rcr
add
sbb
fcoml
aad
leave
lret
xchg
add
xor
push
cmp
push
mov
fsubrl
shl
fistps
dec
iret
push
xorl
mov
imul
aad
cmpsb
pusha
mov
cmove
inc
and
add
idivl
mov
pop
push
js
cmpsb
mov
sub
lret
or
push
xor
xchg
lret
jecxz
loope
in
jns
add
xchg
es
fimull
and
loope
shl
cmp
adc
pop
jmp
mov
mov
mov
sbb
aas
lds
fdivrl
add
mov
or
aad
divb
in
inc
pop
mov
mov
pop
pop
xchg
and
leave
test
pop
or
push
sbb
in
xchg
pop
shl
or
pop
arpl
adc
and
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
movd
pushl
cltd
jle
jge
jle
into
fld
jp
rol
or
pop
cltd
ss
sti
clc
and
ret
mov
popf
mov
fiadds
test
jmp
ds
dec
sub
int
mov
jnp
mov
cs
sub
cmp
movsb
pop
mov
and
or
cmp
roll
rorl
sbb
xchg
jg
clc
and
out
sub
mov
sbb
and
ljmp
push
call
pop
je
scas
jo
nop
push
or
push
xchg
ss
lods
mov
cmp
mov
and
cmpsl
stc
mov
inc
outsl
imul
rorb
stos
push
test
adcl
mov
push
mov
incl
inc
test
xor
sarl
cmp
mov
imul
mov
cltd
ss
xor
je
xor
ljmp
into
sub
rorl
into
cmp
icebp
or
mov
lea
addl
ret
or
and
cmp
mov
outsb
js
push
mov
or
loope
stos
push
ss
aad
pop
hlt
sbb
xor
shll
into
test
sub
scas
jmp
mov
loopne
shrl
mov
push
or
sti
inc
sbb
iret
dec
and
hlt
sbb
dec
add
test
adc
pop
or
cmpsb
fdivl
pop
insb
rorb
out
je
lods
pop
ljmp
mov
mov
shlb
psllw
ret
inc
in
xchg
and
aad
sti
out
mov
mov
and
data16
fildll
test
add
call
jecxz
mov
jno
pop
inc
inc
out
mov
shr
push
cmp
aas
mov
out
cltd
pushf
dec
loopne
xchg
push
int3
stc
outsb
test
xor
add
push
popf
ja
push
icebp
shl
dec
mov
push
mov
aas
pusha
sub
stos
cmp
xor
std
pop
test
mov
sbb
sbb
bound
xor
test
iret
loope
inc
cltd
lahf
les
data16
mov
movb
je
xlat
jns
pop
sahf
arpl
push
mov
in
mov
das
cmp
push
ret
stc
rorl
add
xor
test
hlt
daa
jp
sbb
incl
les
aas
sahf
out
dec
xchg
aaa
fdivrp
mov
das
das
lahf
cmp
xchg
fsubrl
inc
and
sbb
lock
data16
fldt
mov
xlat
repnz
sub
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
call
movsb
jle
push
jg
jle
mov
stos
sub
hlt
test
lret
je
lret
enter
xchg
roll
lahf
jp
inc
ret
cs
jge
lea
cli
xor
inc
mov
mov
test
scas
cmp
mov
pop
pop
mov
sbb
icebp
out
cmp
jecxz
pop
cmp
pop
jns
jno
xor
sub
decl
and
daa
jne
mov
mov
sbbl
cmp
push
push
fcomps
dec
jmp
inc
sbb
jb
pop
push
xor
js
mov
mov
sub
jmp
loope
xchg
add
lds
sbb
push
out
push
mul
pop
xchg
scas
inc
test
dec
pand
jle
dec
stc
mov
inc
lahf
adc
sbbb
imul
pop
jl
pop
das
int
dec
imul
dec
pop
js
xchg
aaa
pop
pop
data16
and
fisttpll
sub
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
lock
movsl
jle
push
jg
jle
dec
mov
movsb
jne
daa
lea
cmp
dec
xchg
mov
xchg
push
dec
push
aaa
adc
cmp
adc
leave
rcr
inc
stos
out
iret
mov
inc
or
jmp
shrl
lahf
cli
fstpt
add
icebp
push
or
and
lret
aam
xchg
lods
xchg
xor
cmp
gs
or
lcall
clc
add
jns
xchg
cmc
xchg
outsl
dec
pop
or
or
jae
xor
pop
jmp
mov
xor
and
xlat
mov
sahf
xor
xchg
leave
dec
mov
mov
cmpsb
sti
mov
sbb
in
jle
push
add
insl
outsl
cltd
and
jge
sbb
addr16
mov
ret
pop
pop
push
rorl
mov
ret
inc
jmp
cmp
shlb
ficompl
insl
scas
gs
xrelease
aad
imul
inc
pop
cld
cs
orb
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
jb
fbld
jle
and
out
stos
lahf
or
les
dec
lock
fidivrs
cmp
gs
mov
jg
insl
lods
cs
daa
in
jp
test
loop
sbb
notl
jno
mov
iret
or
xlat
cli
loope
es
test
cmpsl
lods
jmp
in
and
sti
cmp
movsl
inc
std
mov
fisubrs
add
imul
call
sub
frstor
rcl
mov
daa
cmp
push
xchg
cmp
adc
adc
dec
addr16
xchg
lcall
mov
cmpsb
int3
jp
push
lock
movsb
hlt
xor
mov
jae
lock
popa
jmp
mov
fsubrs
jb
pop
jbe
fisubrl
inc
mov
sub
sub
aaa
insb
inc
aas
imul
jmp
cmpsl
sahf
or
xor
pop
lds
jmp
add
dec
data16
jle
jle
clc
xchg
icebp
rcrb
cmp
inc
add
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
or
and
mov
jle
xchg
inc
push
and
scas
add
repnz
pop
pop
addr16
push
push
loopne
fldenv
faddl
push
popa
mov
sbb
push
decl
std
xor
xchg
arpl
and
mov
mov
movhps
xchg
test
enter
mov
imul
inc
pop
lods
pushf
or
mov
dec
mov
repz
pop
aas
xchg
les
dec
dec
lret
out
repz
imul
mov
push
movsl
iret
data16
cmp
imul
iret
add
cli
pop
cli
out
aaa
pop
dec
sub
out
movsb
sahf
pop
xchg
in
test
mov
mov
nop
and
gs
push
push
in
jne
add
and
mov
jp
pop
ja
scas
fnstcw
sub
cmp
or
adc
fwait
mov
inc
jmp
sbb
and
mov
mov
add
fwait
test
std
in
mov
js
sbb
repnz
pmaxub
in
fnstcw
mov
in
push
lock
mov
sub
stc
or
ret
sub
pop
pop
pop
outsl
daa
xchg
arpl
sbb
dec
mov
or
mov
nop
pusha
or
pop
mov
repnz
aam
xchg
jge
and
sbb
mov
mov
xor
add
mov
jne
in
pop
shrb
mov
mov
insl
aaa
jae
daa
mov
out
mov
pop
mov
aad
clc
xchg
push
leave
or
aaa
cwtl
aas
cmp
nop
xchg
add
dec
cld
jo
adc
jg
das
mov
xor
insl
sbb
cmp
fldcw
mov
jae
jne
stc
pop
insl
inc
add
out
cmp
mov
mov
and
ja
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
sbb
scas
or
mov
sbb
ret
sbb
pop
lcall
jmp
dec
aad
lods
rcrl
call
cwtl
adc
or
push
sbb
and
arpl
addr16
xor
sub
cmp
pop
js
sub
xlat
xor
xchg
std
mul
xchg
and
mov
imul
dec
or
dec
repnz
mov
lods
sub
popf
fidivrs
jp
jge
loopne
outsl
jl
xchg
mov
int
std
mov
cli
dec
xor
insb
mov
iret
jns
hlt
fstpl
repz
or
mull
mov
cmpps
jbe
push
mov
mov
repz
adc
scas
or
or
pop
add
add
pop
cs
jns
mov
mov
test
loop
in
xchg
ret
sub
inc
lret
xchg
jns
mov
les
pop
ret
jb
pop
push
or
pushf
ljmp
mov
les
js
push
icebp
xchg
arpl
jge
bound
insl
pop
scas
and
sbb
scas
mov
jne
mov
adc
stos
rcl
inc
fmull
push
insb
sbbb
mov
addr16
test
cld
out
dec
shll
dec
cmp
and
f2xm1
mov
push
push
cmp
nop
fcmovu
paddsb
dec
add
adc
xchg
and
jecxz
and
xchg
push
mov
adc
push
jl
push
push
pop
cltd
fcmovu
inc
fistps
xor
and
add
aad
and
add
xor
mov
outsl
push
mov
push
int
jnp
sub
xlat
mov
addr16
sbb
xor
and
push
cmp
lret
push
dec
sub
in
jne
adc
subl
call
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
pop
mov
stos
jg
cmp
mov
leave
outsl
scas
lds
pop
add
nop
pop
insl
xchg
sub
ljmp
cmp
add
dec
jnp
out
sbb
pusha
fwait
test
or
fmull
or
pop
or
addr16
unpckhps
mov
ja
roll
sub
mov
stos
push
test
shlb
fsubs
jb
les
mov
sbb
push
bound
mov
mov
int3
aam
int
mov
and
xor
outsl
and
inc
in
fmull
test
pop
stos
hlt
call
or
out
cld
testb
mov
add
adc
fstpt
sub
int
fstpl
pop
sbb
loop
je
or
mov
xchg
mov
xchg
sarb
push
pushf
add
fimuls
xchg
lret
std
fstps
cmpl
push
xchg
popf
pop
cmc
enter
out
int3
out
pusha
xor
cmpsb
rcrb
xlat
sub
jo
jecxz
inc
fldt
inc
movsb
jg
jg
jo
jns
cmp
inc
pop
push
aas
std
jp
pop
adc
and
xchg
in
mov
add
inc
jl
push
mov
stos
xchg
ficompl
rcl
inc
cli
cmp
es
mov
idiv
mov
jns
adc
hlt
stos
int
fstpt
je
test
ret
cltd
pop
push
sbb
loope
nop
call
aam
enter
test
test
adc
jns
sbb
or
mov
mov
pop
shrl
sub
les
inc
xor
loop
sbb
pop
push
movsb
and
adcb
jns
sub
sbb
sbb
iret
pop
repz
mov
sub
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
inc
add
dec
dec
add
sbb
shll
jge
inc
mov
cmp
loopne
inc
repz
pop
sub
or
dec
fsub
xchg
adc
jg
mov
arpl
repz
push
jnp
lock
leave
outsb
adc
fmull
into
jns
xchg
push
and
or
aad
cmp
mov
adc
sbb
jg
push
scas
shrb
movsb
adc
and
inc
pop
aad
lds
sbb
sub
jmp
lret
pop
adc
clc
sbb
cmp
shl
out
or
ss
test
hlt
shl
sub
dec
movsl
jbe
leave
js
mov
mov
neg
repnz
dec
inc
hlt
jae
dec
xchg
mov
pop
sub
adc
cmp
xchg
cmp
xchg
mov
add
fnsave
shlb
jg
roll
mov
cli
ss
pop
adc
add
xchg
daa
mov
mov
int
xchg
xlat
sbb
push
loop
xchg
lret
sbb
mov
call
xchg
dec
sub
jmp
lods
adc
leave
pop
imul
xchg
lods
mov
hlt
inc
jae
sub
adc
pop
cmp
int
pop
imul
stos
outsb
sub
mov
and
mov
shrd
jne
test
jmp
pop
bnd
push
jl
pop
xchg
andl
int3
mov
rorl
xor
subl
and
or
hlt
mov
jl
loop
cwtl
fistl
jbe
sbb
jle
lods
jbe
repnz
data16
stos
lea
fnstcw
xlat
pop
pop
outsb
out
std
mov
aas
lret
mov
sub
mov
pop
movl
push
loope
insb
int3
mov
loope
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
or
or
jl
jle
negb
pop
or
mov
ret
push
sbb
mov
sub
jnp
jecxz
subb
rcrl
pop
add
aam
sbb
outsl
jo
mov
imull
dec
jnp
sub
es
or
mov
cli
or
jbe
sbb
into
xor
popf
mov
es
mov
ror
sub
in
test
sbb
mov
push
pop
nop
push
pop
jp
popfw
mov
pop
lods
arpl
pop
jp
adc
mov
dec
pop
mov
inc
enter
mov
sti
inc
sarl
in
jo
push
cwtl
pop
xor
cmp
jecxz
out
test
pop
aaa
pop
push
mov
mov
cltd
out
pushf
cmp
xchg
jecxz
xchg
in
addb
and
bound
jae
mov
dec
add
mov
gs
mov
push
and
lods
push
ss
js
das
sbb
scas
push
aas
cltd
repz
jno
test
sbb
sarb
outsl
inc
pop
mov
ljmp
iret
scas
dec
mov
cmpsb
and
add
pop
jnp
fisubrs
clc
mov
sarl
mov
fnstcw
mov
fisttpll
fcomi
int
fcmovb
cmp
popa
mov
jg
pushf
inc
xor
xchg
std
cmpsl
cmp
pusha
in
cwtl
and
mov
sbb
sub
cwtl
pop
inc
add
lock
jo
sub
frstor
fs
pushf
movsl
popf
mov
pop
cmp
loopne
push
pop
lahf
iret
lret
fucom
adcl
out
push
dec
loope
jns
dec
jmp
lods
push
lahf
pop
mov
aas
sub
inc
mov
lcall
inc
and
bound
insb
xor
stc
ret
or
adc
in
in
cmpsb
sahf
mov
jne
dec
int
inc
jmp
and
xorb
mov
dec
and
addl
popa
and
outsl
sbb
hlt
leave
cmp
sub
imul
jp
pop
sti
add
std
mov
xchg
xchg
outsb
in
inc
lcall
cltd
fstpt
push
pop
add
xor
adcl
fwait
in
inc
in
sub
mov
mov
mov
cmc
outsl
add
sub
jl
inc
fwait
mov
push
enter
add
js
fucomi
add
jne
arpl
in
repnz
push
ja
or
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
in
and
jle
jl
jle
mov
in
int3
inc
or
pop
mov
and
insb
pusha
mov
mov
sub
int3
daa
push
repnz
dec
xchg
jmp
and
xor
rcrl
xor
lods
and
jo
sbb
sub
shrb
add
insb
mov
enter
jbe
pop
int
add
bnd
shll
xchg
notb
xchg
dec
adc
add
adc
inc
mov
mov
sbb
fisttps
sbbb
es
insb
sbb
inc
jbe
dec
cmp
inc
movb
dec
push
dec
out
sbb
es
jmp
mov
mov
sbb
mov
xchg
adc
xchg
pop
push
std
ror
xchg
popa
and
mov
mov
inc
add
mov
inc
stos
add
dec
lcall
lret
ret
jge
pop
scas
test
mov
push
jbe
cld
scas
dec
repnz
mov
pop
rcll
xor
mov
pop
inc
jo
std
addr16
stos
ljmp
shrb
inc
js
xchg
push
mov
sbb
lods
outsb
pop
fdivrs
or
pop
mov
cmp
adc
fbstp
insl
adc
jg
scas
dec
xor
mov
pop
sub
pop
lds
pop
ljmp
ja
xor
xchg
inc
jno
pushf
or
pop
insb
jae
cli
clc
fiaddl
xchg
mov
out
push
hlt
sti
fdivrl
aad
mov
test
rorl
jb
push
jo
inc
loopne
aaa
daa
and
dec
xchg
cmpsl
cmp
xchg
imul
mov
out
outsb
jae
loope
xor
mov
out
push
aaa
lcall
push
xchg
xchg
push
sarb
popl
out
inc
setp
ljmp
xchg
jno
mov
lods
sbb
mov
mov
out
jl
and
rorb
xor
out
sbb
mov
das
fidivl
es
aam
jmp
mov
ret
test
inc
inc
outsl
daa
xor
jb
jg
shlb
fs
dec
cmc
bound
or
push
xchg
push
dec
jmp
iret
imul
mov
xchg
je
cltd
jle
out
inc
and
iret
std
jge
and
mov
xor
sub
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
int3
sub
jle
lods
jl
jle
jmp
add
xchg
jb
xchg
mov
dec
sbb
int3
pushf
mov
mov
sub
stos
jle
clc
pushw
pop
xor
out
fs
adc
flds
stos
int3
jp
aad
push
mov
test
jl
add
repnz
pop
or
fisttpl
mov
and
bound
fmul
cwtl
movsl
popa
fs
cli
inc
mov
shrl
mov
test
or
xor
push
cmp
inc
fldt
fiadds
pop
jne
stos
movsl
inc
pushf
push
xchg
sub
push
add
pop
mov
ss
jbe
arpl
test
loopne
jp
mov
ss
aad
sbb
sti
sbb
adc
es
mov
add
cld
pop
inc
cltd
fsub
pop
sarb
adc
ret
xorb
sub
cmp
pop
sbb
lcall
pop
mov
out
dec
pop
mov
imul
inc
mov
int3
jl
inc
lret
dec
loope
mov
push
leave
sbb
cli
iret
decb
dec
sbb
mov
sbb
pushf
cmp
push
aaa
sub
jle
dec
aad
daa
inc
adc
adc
or
push
or
mov
sub
je
movntq
push
cmp
repz
mov
pusha
or
insl
mov
jb
and
cmpsl
popa
or
js
shl
gs
mov
dec
mov
cwtl
jecxz
rcll
aam
dec
or
xchg
insl
mov
pop
loopne
mov
jne
dec
mov
fwait
push
pop
int
push
dec
pop
ficoml
popa
inc
test
out
fimull
or
xchg
add
xchg
or
ret
scas
es
adc
out
stos
icebp
sub
or
and
hlt
add
cmc
push
je
jl
pop
ss
xchg
jg
fildl
and
mov
out
xchg
mov
ret
xchg
rol
insb
fsubrs
pop
out
dec
repnz
lretw
daa
push
push
and
mov
jmp
int
lods
sbb
push
data16
popa
push
xor
xchg
pop
cltd
push
adc
xchg
cld
popa
test
dec
mov
std
adc
ja
push
jb
shll
int
fiadds
push
stos
lea
xchg
scas
xchg
or
mov
sub
stos
add
lret
or
or
xchg
cltd
sbb
movswl
jecxz
arpl
mov
cmp
pop
enter
shr
add
add
sub
arpl
sub
scas
ret
sarl
jle
lods
jl
jle
jl
sub
mov
ret
aad
lret
lret
rcrb
xlat
nop
pop
jns
push
or
scas
das
mov
and
stc
loope
aaa
jmp
mov
fstpt
movsl
in
pop
adc
loop
and
mov
push
sbb
jb
dec
cltd
je
push
push
adc
and
sub
adcl
orb
bound
jle
add
btr
ret
jnp
dec
cmpl
int3
shll
pop
in
icebp
shll
jb
xchg
xchg
fildll
inc
jne
jmp
loope
ss
jb
fs
loopne
cmc
push
mov
je
and
push
lock
jb
jae
and
mov
and
repnz
addr16
pop
sbb
push
aaa
pop
push
push
sbb
insl
jge
cltd
test
or
xchg
add
out
outsb
xor
or
pusha
add
push
call
fisubs
insl
test
xor
shrl
cmp
jle
pop
test
mov
xor
repz
clc
aam
sub
int
scas
insb
arpl
fistl
push
inc
and
getsec
xchg
test
aam
cmpsb
imul
dec
inc
or
xlat
push
sbb
stos
rep
scas
stos
jecxz
scas
cmp
cmp
fsin
jbe
pop
ret
xchg
and
xor
jns
lcall
loop
arpl
insb
adc
cmovb
push
mov
and
ja
xchg
hlt
mov
sahf
das
leave
push
repz
dec
ret
fimull
or
loopne
jecxz
nop
aam
and
lahf
or
mov
mov
xor
popf
lahf
out
popa
stc
cld
roll
xchg
rolb
sti
loope
cmp
xchg
cmp
inc
inc
cltd
lock
jno
push
mov
imul
push
dec
add
mov
scas
jae
movsb
mov
or
int3
leave
and
mov
sbb
fildl
lods
sub
mov
mov
call
adc
call
outsl
cli
je
sahf
out
into
lret
ds
iret
xchg
lock
aad
icebp
lods
test
fs
jb
loope
arpl
pop
mov
es
push
adc
outsb
mov
xchg
pushl
test
outsb
test
loope
mov
aad
notl
mov
lea
or
sbb
or
push
stc
popa
fcom
popf
imul
testl
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
dec
and
mov
jle
jl
jge
movsb
mov
loope
aas
sub
push
test
lahf
mov
sub
and
add
dec
rcll
or
roll
or
mov
icebp
sahf
out
lock
pop
inc
pop
ret
cmp
push
clc
or
sbb
inc
sbb
dec
stos
cmpsl
shlb
inc
idiv
add
ret
mov
inc
popf
mov
rcll
or
pop
movsl
outsl
pop
shlb
pop
stos
insb
incb
das
mov
mov
cwtl
xchg
les
test
test
sti
add
std
push
test
adc
mov
cmp
std
dec
xchg
into
loop
sub
jbe
cmp
and
cld
icebp
push
mov
mov
pop
adc
repnz
xchg
sbb
or
stos
inc
aaa
test
aam
and
mov
outsl
lea
jg
jle
inc
sti
dec
jg
pusha
mov
mov
ret
orb
dec
out
data16
or
in
push
mov
out
sub
or
jb
std
push
cmp
or
add
imul
mov
rcrl
sub
js
aas
sub
in
mov
pop
pop
test
push
loopne
jbe
gs
mov
jmp
mov
and
popf
jecxz
push
mov
cmp
and
adc
xchg
cwtl
cmpsl
sbb
fs
cltd
xor
and
push
xchg
rorl
fmuls
idivb
loope
adc
mov
jl
inc
insb
sub
mov
test
push
rcrl
pusha
xchg
imul
mov
gs
clc
sub
rol
adc
lock
xchg
fs
mov
adc
jge
adc
pushf
loope
xor
mov
roll
in
mov
xor
out
rcr
jne
pop
scas
mov
mov
rcrl
hlt
jp
cmpsl
fdivrl
mov
jno
inc
movsb
scas
insb
inc
movsb
sbb
cli
or
insb
jmp
mov
and
mov
stc
cwtl
cld
aad
stos
xchg
pop
mov
loopne
xchg
mov
adc
dec
test
mov
fwait
cmp
mov
dec
xchg
bound
xlat
test
mov
adc
mov
dec
push
mov
rcl
sahf
fwait
orb
movsb
push
mov
aaa
arpl
outsl
jb
sub
cmpsl
movsb
gs
lret
sbb
imul
push
in
dec
rolb
or
pop
mov
xchg
pop
push
or
jbe
arpl
repz
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
rorl
dec
inc
lods
leave
mov
leave
cld
jb
roll
and
enter
dec
movsb
sub
aaa
xor
and
pop
push
mov
rorb
inc
push
fdivr
xchg
mov
ficoml
and
lods
push
fstps
std
test
jbe
lock
repnz
pop
icebp
lea
cmp
mov
push
ja
xchg
in
movsb
cmp
addr16
lcall
in
sbb
cli
in
scas
dec
fidivs
or
cld
add
pusha
mov
imul
inc
and
js
sbb
scas
out
dec
sbb
sbb
in
pushf
movsb
imul
sub
bts
mov
adc
jecxz
push
stos
or
pop
das
cli
xor
ret
or
in
xor
pop
cmp
arpl
outsb
in
lods
adc
jno
push
mov
insb
imul
inc
test
xchg
div
lods
push
shrl
push
pop
cli
fists
push
scas
cmp
inc
sbb
in
jno
movsb
movsl
outsb
push
sbb
push
cmp
mov
push
scas
sbb
mov
rclb
loop
loopne
jg
push
jle
inc
push
popa
pushw
scas
in
repnz
into
push
arpl
cmp
rorb
imul
xor
mov
or
clc
out
pop
rep
test
mov
mov
push
jne
icebp
cmp
jp
dec
inc
jle
jge
das
jo
add
addr16
cmp
imul
test
cmp
sahf
inc
lods
flds
and
inc
pop
movsb
cmp
cld
cmpsb
jg
int3
xor
mov
aam
pop
and
xchg
outsb
stc
in
xor
ja
ljmp
arpl
gs
leave
inc
dec
jo
adc
adc
pusha
push
outsl
adc
repnz
cld
repnz
dec
sub
push
sub
lahf
xchg
add
out
lods
je
mov
mov
dec
clc
jecxz
ds
adc
es
aam
notl
jp
test
push
iret
jnp
in
or
or
pop
dec
ljmp
jecxz
lret
ja
cwtl
mov
int
xchg
cmpsb
and
mov
cltd
add
daa
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
jbe
push
fists
jl
jle
mov
xlat
gs
dec
xchg
dec
inc
xlat
in
popf
mov
jbe
ficoml
xchg
sbb
fisttps
cli
add
insb
bound
cli
jns
inc
mov
push
dec
test
rorl
dec
cmp
mov
and
out
out
out
mov
sbb
pop
mov
fstpl
or
inc
adc
adc
jge
and
adc
mov
aas
in
pop
pop
lds
les
and
int
test
ljmp
xor
out
fs
or
leave
add
out
jmp
sbb
shl
fabs
sbb
lock
pop
and
jle
insb
int
or
iret
add
mov
std
lret
xor
sbb
test
notb
les
out
push
adc
xchg
popf
subb
pop
mov
hlt
sub
pop
ret
sub
jg
xrelease
lahf
xchg
mov
add
iret
fwait
std
or
xor
dec
mov
mov
test
sbb
sbb
mov
shlb
lods
in
int
mov
add
add
push
jb
push
push
das
add
push
fstpl
insl
ret
dec
inc
out
or
mov
out
fldenv
sub
int3
sahf
mov
cwtl
icebp
out
inc
or
test
out
cmpsb
in
jae
xchg
sbb
mov
xor
pop
ja
repnz
adc
jl
inc
jne
cmpsb
cli
xor
xchg
mov
scas
cwtl
jmp
add
xchg
lds
fldlg2
hlt
push
ss
mov
mov
xchg
pop
mov
bound
ds
rcl
shl
mov
mov
lahf
lret
jno
mov
out
dec
mov
call
data16
fldt
dec
repz
out
or
imul
push
mov
mov
xchg
nop
sbb
imul
aaa
push
sbb
cmp
out
mov
ljmp
movsb
je
outsb
dec
dec
nop
and
inc
ljmp
inc
lea
das
aaa
pushw
in
mov
add
jecxz
rol
xorb
call
and
test
or
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
stc
int
jne
inc
jle
icebp
jg
jle
jle
rcll
mov
dec
stos
into
ficoml
xor
inc
mov
test
arpl
daa
mov
inc
in
pusha
xchg
push
pop
jle
cwtl
outsb
mov
in
dec
push
dec
cmp
in
rcrb
mov
repnz
aaa
cmp
ret
out
lcall
jle
sbb
xchg
dec
repnz
and
add
lds
adc
dec
pusha
cmp
jno
clc
and
sbb
pushf
xor
mov
push
insb
iret
sahf
out
clc
or
repnz
sbb
xchg
scas
cltd
outsl
movsb
outsb
adc
movsb
hlt
xchg
mov
mov
or
int
popa
sbb
sbb
shll
mov
ret
inc
jo
rorl
xor
add
fdivl
into
and
loopne
xchg
cmp
arpl
mov
or
lahf
jmp
cmp
pop
outsb
mov
aam
mov
or
jmp
test
cmpsb
insb
lds
mov
and
jno
loope
cli
jo
gs
movsl
mov
je
mov
xchg
aaa
xor
insb
nop
repnz
testl
aaa
inc
out
lcall
in
sub
xchg
loope
test
pop
and
stc
pop
xchg
test
loop
outsb
xchg
sbb
int
cli
cmpsb
iret
cmp
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
int
outsb
mov
jle
jg
jle
leave
sub
lret
inc
aad
or
jl
iret
outsb
test
xor
add
jns
jecxz
out
jecxz
dec
adc
fcomps
mov
jne
es
or
push
mov
mov
push
mov
or
stos
test
lret
iret
aam
dec
orl
dec
cltd
int
loop
push
pop
pop
ret
jae
mov
sbb
adc
cltd
push
pop
cmp
stos
cmp
sahf
pop
pop
movsb
dec
dec
xor
jmp
push
mov
sub
sbb
nop
jne
jbe
add
adc
dec
inc
cmp
xlat
fdivl
adc
in
movsb
sarl
adc
dec
in
sbb
and
jno
or
test
push
mov
lea
cltd
xor
pop
and
andb
cli
mov
fadds
adc
push
insl
jns
sub
imul
adcl
test
sub
popw
int3
daa
inc
mov
mov
movsl
pusha
jo
enter
aas
dec
and
pop
pushf
jp
xor
in
in
mov
dec
or
or
loopne
aam
mov
add
imul
add
in
stos
test
adc
std
sub
push
rorl
jb
adc
sbb
fistps
jmp
pop
test
adc
or
jno
roll
test
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
andl
cmovne
icebp
jg
jle
sbb
pusha
jge
adc
mov
xchg
cmpsb
xlat
mov
fnstenv
sub
add
loopne
inc
sbb
xor
inc
jae
mov
outsb
and
xchg
nop
cmp
mov
std
aam
out
pop
inc
mov
dec
subb
xor
aas
jno
cmp
stos
ljmp
pop
lcall
leave
mov
sbb
test
cmpsl
push
push
negb
xor
jle
xlat
push
inc
sub
cmp
test
scas
iretw
mov
daa
xchg
dec
mov
arpl
orl
pop
data16
push
mov
ficoms
loop
mov
mov
jne
sbb
imul
or
inc
mov
sarb
cmp
mov
push
frstor
and
cmp
stos
inc
or
push
xlat
push
push
xchg
add
bound
pushf
test
test
sarb
inc
push
pop
mov
fstl
pop
test
jge
call
sbb
adc
lds
and
jne
dec
inc
imul
test
pop
in
lcall
and
jecxz
in
rcrl
add
nop
jp
cli
dec
out
push
into
fdivrl
xchg
jp
xorl
cmp
ja
or
dec
xorb
sub
lea
cmp
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
ja
jns
inc
jle
icebp
jg
jle
xor
inc
popa
in
movups
fcmovnu
mov
jge
sbb
push
push
andl
std
push
push
aad
pushf
mov
lea
movsl
or
movsl
cltd
sbb
std
hlt
sub
loop
call
inc
cmp
or
aaa
movsb
sbb
dec
pop
mov
mov
jb
mov
out
xchg
popa
sub
mov
xor
push
add
movsl
inc
or
cmp
and
imul
negl
ret
inc
test
jbe
sbb
pop
jo
popa
enter
mov
js
lret
xor
jne
and
popf
adc
pop
jb
add
daa
sbb
xor
inc
mov
fmuls
adc
cmpsb
inc
notl
sbb
sub
cmp
nop
aam
mov
mov
pusha
cmp
xor
cmp
bound
out
mov
bswap
mov
ret
insl
mov
sbb
mov
xor
cmp
and
lods
mov
mov
js
add
mov
icebp
outsl
mov
push
add
shlb
adc
add
loopne
cmpsl
cmp
orb
jl
jecxz
fmuls
fwait
out
inc
sahf
mov
rorb
test
xchg
cltd
sar
inc
add
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
test
icebp
jg
jle
cmpsb
mov
test
add
subl
push
pop
xchg
mov
cmp
int3
out
in
int
fcomip
push
hlt
pop
push
mov
movsb
pop
rorb
xchg
scas
cmc
divl
cmp
xchg
dec
push
loopne
push
shr
data16
pop
or
dec
or
adcb
mull
inc
loop
jecxz
jg
sub
insb
aas
ret
adc
arpl
ja
fisttpl
dec
add
xor
push
inc
and
shll
les
enter
xor
xor
mov
nop
cmc
adc
xchg
dec
dec
add
mov
test
push
mov
fsub
cli
rorl
leave
pop
inc
add
dec
or
popa
push
jecxz
mov
lret
sub
cmpsb
or
je
nop
or
inc
push
dec
lods
movsb
pop
aad
out
cmpl
test
push
ffreep
sbb
fisubrs
push
mov
aas
cld
into
xor
out
xchg
into
lret
and
hlt
pop
jno
imul
cmp
add
imull
fisubl
jmp
fsubs
ljmp
mov
dec
imul
adc
add
popa
mov
bound
outsl
into
mov
hlt
or
mov
jne
push
push
test
pop
xchg
inc
xchg
rolb
loope
or
or
pop
cld
decl
jmp
ljmp
jo
fidivs
xchg
iret
fmuls
icebp
jg
jle
adc
test
inc
mov
push
out
icebp
and
pushf
jo
frstor
jbe
jne
cmp
shll
xchg
sbb
or
dec
sbb
rcrl
cld
and
ret
and
pushf
scas
dec
das
pop
xlat
in
push
ds
in
and
sbb
gs
and
jnp
jmp
test
inc
repnz
push
mov
out
popa
aam
sub
push
xchg
popa
scas
sub
and
add
add
add
hlt
int3
push
call
loope
or
jne
decl
int3
mov
sbb
mov
dec
stos
cmp
inc
inc
add
testl
xor
jmp
dec
fnstsw
les
mov
push
xchg
scas
inc
and
repz
jns
sbb
ljmp
jmp
rcl
stos
addr16
js
push
insb
push
js
pusha
cmp
mov
in
push
movsb
testb
cmp
hlt
mov
pushf
xchg
mov
hlt
out
cmp
mov
movsl
pop
imul
pusha
int3
ror
push
jmp
push
outsl
ljmp
and
or
push
sub
jmp
add
lcall
test
aaa
jae
push
and
dec
mov
aas
xlat
lea
push
sbbb
mov
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
sub
popf
hlt
cwtl
pop
jmp
add
xor
aas
jb
aaa
mov
fs
or
adc
xchg
jmp
mov
into
jno
or
sbb
xchg
xchg
jmp
push
sti
aad
lret
pushf
cmp
sub
push
test
int3
mov
adc
rcll
rolb
sti
flds
sub
cmp
enter
aam
rorl
xor
cmp
aam
add
sarb
xchg
fistl
insb
mov
sub
inc
testl
cld
dec
outsb
leave
cmp
mov
xor
inc
jecxz,pt
aaa
push
add
lea
inc
cwtl
inc
pusha
adc
aaa
subl
in
data16
lcall
es
lahf
xor
loopne
movsl
sti
lods
xor
sub
sbb
inc
cmp
bound
mov
mov
ret
inc
and
mov
aas
and
add
jmp
fsubrl
cmp
insl
bndstx
pusha
sbb
ljmp
icebp
nop
ss
lcall
shll
je
mov
fistpll
stos
stos
mov
lods
lahf
int3
push
cmp
insb
dec
jns
jo
lret
pop
imul
cmp
sub
jno
cli
aad
decl
shlb
lods
lahf
cmp
push
or
aaa
outsb
fs
cwtl
fs
insb
aam
cmp
test
lods
ss
push
mov
cmp
loope
repnz
jno
jmp
aaa
aas
in
shlb
cmp
mov
lea
shll
sub
les
push
or
add
mov
shll
mov
fdivl
shr
not
add
lods
jnp
int3
divl
adcb
mov
jne,pn
je
mov
idivb
adcb
out
mov
push
pop
movsl
scas
pop
add
cmpb
cmp
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
pop
add
jl
jle
movsb
mov
pop
xchg
stc
ljmp
in
icebp
push
jp
push
xchg
pop
add
jmp
dec
movsb
sahf
xchg
jo
ljmp
add
int
fstpt
pause
insl
and
push
jp
test
jge
or
xchg
cmpl
adc
pushl
das
aam
insl
mov
js
insl
and
adc
repz
call
ret
repz
clc
jmp
add
and
mov
jbe
lcall
dec
dec
sub
cs
and
xchg
data16
test
cld
sub
pusha
and
mov
stos
aaa
and
sbb
bound
mov
clc
or
incb
mov
mov
or
vmaxsd
sub
push
cmp
add
sbb
lds
mov
inc
and
ror
aam
mov
out
pop
js
cmp
xchg
shlb
stos
loopne
mov
es
xchg
inc
ret
mov
jo
pop
ss
add
dec
mov
jmp
dec
ret
push
add
repnz
jge
cwtl
push
pop
ret
or
mov
addb
jns
repnz
mov
lret
dec
adc
icebp
xor
xchg
out
cli
leave
adc
jne
call
xchg
push
je
lret
adc
push
mov
jp
mov
into
or
fisttpl
testl
insb
cmp
iret
cmp
and
jae
xor
fldcw
mov
xchg
mov
leave
test
mov
pop
ja
imul
enter
adc
jmp
or
addr16
mov
cmp
add
stos
mov
mov
push
mov
pop
mov
and
ret
mov
push
js
sbb
push
repz
sub
mov
jmp
sbb
mov
popf
mull
ret
jne
mov
add
jmp
mov
imul
lcall
adc
scas
pop
fisubl
mov
rolb
jno
cwtl
das
mov
xor
and
stos
ss
mov
sbbl
mov
insl
cmpb
add
cmp
rcrb
pop
push
mov
sub
push
decl
jle
mov
pandn
inc
xor
into
or
mov
test
lret
sbb
sbb
jg
aas
les
jmp
aam
por
out
fidivrs
icebp
fcmovu
inc
sbb
adc
pop
clc
data16
idivb
and
lock
jo
xchg
mul
inc
out
inc
add
fisttpll
js
jbe
mov
cmp
shlb
and
orl
fstpt
xchg
cmp
jo
cmp
push
jb
imul
and
pop
adc
mov
push
jne
pop
adc
lock
lret
inc
sbb
adc
xor
xchg
mov
in
cltd
or
mov
jb
repz
push
into
outsb
divl
dec
mov
cmp
inc
and
xchg
test
in
aam
ljmp
jo
insb
xchg
out
jns
mov
scas
adc
sbb
cmc
fwait
mov
iret
incl
fldenv
inc
call
clc
push
mov
dec
shll
mov
jg
jle
aaa
fmull
hlt
xor
shl
roll
mov
xchg
mov
sub
or
push
xchg
pop
dec
lods
or
scas
out
xlat
aas
js
imull
repz
inc
add
int3
fcoml
cmp
sub
sbb
jecxz
or
insb
and
test
into
repz
cmp
and
mov
lahf
stos
outsl
inc
mov
aas
pop
sahf
dec
push
sub
lock
add
imul
imulb
sbb
push
pop
or
fldl
add
xor
imul
cli
stc
stos
sti
add
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
inc
les
add
add
add
xchg
sbb
lods
xor
insb
dec
sbb
sar
ret
aaa
iret
pop
cmp
pushl
sarw
push
bsf
les
jb
xlat
int3
ror
pusha
mov
mov
test
or
in
pushf
jl
push
cs
pop
cs
jmp
jmp
jae
pop
inc
sbb
add
jae
fmuls
lcall
shlb
lds
sti
push
call
and
mov
ljmp
pop
push
mov
or
mov
and
sub
push
xor
cwtl
popf
movsb
xchg
xor
stos
ficoml
aaa
push
rorl
xor
pop
jmp
push
outsb
out
add
and
into
adc
dec
lret
aam
xchg
mov
or
stos
mov
push
sahf
adc
and
lea
aas
aam
sub
fcmovnb
or
add
pop
ficoml
in
jle
lcall
sub
add
add
add
dec
insl
fisubl
pop
xor
imul
outsl
cmp
clc
sub
mov
mov
rcr
int3
inc
pop
push
jge
push
gs
sbb
mov
xor
cltd
call
push
insb
es
sahf
lret
mov
lds
mov
push
push
clc
sub
or
push
mov
fcmovu
das
and
shl
gs
repnz
pusha
lret
xchg
stos
test
hlt
adc
cmp
jmp
lcall
in
cli
xor
cwtl
insl
mov
xor
sbb
add
mov
leave
cli
jle
ljmp
cltd
push
inc
cmp
mov
pop
inc
leave
int
mov
dec
scas
lret
add
push
push
rorb
xor
inc
insb
mov
loope
mov
iret
or
inc
int
test
xor
mov
add
add
adc
mov
mov
push
mov
flds
add
add
add
int
adc
and
popf
ss
imul
orl
xor
sti
adc
xor
jno
rclb
sbb
lahf
xor
xor
inc
push
sahf
mov
fadd
movsl
push
push
cmc
fsubrs
sbb
or
jns
sub
fildl
stos
sub
frstor
aas
pushl
sbb
or
jl
inc
enter
push
add
cmp
mov
xchg
in
test
xchg
mov
dec
xchg
xor
jae
mov
xchg
ffree
inc
jbe
or
lret
jb
jo
dec
out
lret
pop
add
xchg
out
aas
mov
add
cmp
mov
fdivr
mov
push
cli
or
stc
sbb
imul
and
cmp
and
and
push
sbb
aas
pop
lea
cmpsb
repnz
add
add
mov
roll
addr16
mov
fiaddl
add
add
add
fnstsw
sbb
outsl
lds
out
inc
inc
insl
arpl
mov
loop
outsl
mov
imul
mov
scas
sub
xchg
leave
dec
lahf
pop
sub
or
imull
xor
pop
sbb
jno
std
mov
repz
aas
movsl
mov
xchg
sub
repz
enter
mov
and
jns
and
pop
jle
mov
dec
dec
cs
mov
fnstsw
subb
inc
jb
push
mov
push
cmp
test
push
xchg
and
cmc
push
pop
int3
ficoml
test
dec
repz
or
lret
add
push
pusha
divb
call
cld
jno
sbb
or
jnp
cli
cmc
add
push
adc
push
xor
lret
shll
mov
jbe
jg
jle
repnz
add
mov
sub
into
xchg
mov
cmp
mov
pop
jae
or
pop
dec
or
pop
sahf
fildl
add
add
add
movsb
mov
inc
inc
scas
call
sti
jne
sbb
cmp
adc
mov
pushf
shrb
pop
lret
dec
mov
inc
arpl
test
cmp
sub
cli
incl
cmp
xchg
dec
xchg
popa
sbb
mov
pop
inc
cmp
sub
repnz
in
stc
scas
mov
or
xchg
xchg
cltd
aaa
push
jb
jmp
fimuls
fisubrl
push
fdivp
stos
pop
sbb
shlb
outsb
shrb
fidivs
scas
and
cmc
ret
and
popf
jmp
addr16
jp
outsb
mov
addr16
xor
std
adc
add
iret
imull
lock
add
push
scas
ss
mov
nop
sub
jno
xchg
icebp
push
sub
test
test
jns
hlt
decl
xor
rcll
cltd
mov
adc
fmulp
shlb
jg
cmc
insl
cmc
out
lcall
enter
addr16
xchg
add
add
add
rclb
pop
push
xchg
xchg
push
and
or
mov
aam
into
or
imul
adc
and
out
mov
mov
imul
inc
ss
pusha
scas
fildl
dec
jnp
dec
push
cmp
cld
mov
cli
lods
cltd
mov
clc
push
xchg
lahf
imul
out
mov
nop
jo
mov
aad
sbb
int3
imul
pop
xor
divb
and
shl
aam
pop
cwtl
mov
sar
aaa
test
mov
pop
cwtl
out
lahf
or
pop
pop
fistpl
jecxz
dec
lret
scas
fsubp
and
jbe
and
enter
out
xchg
lret
push
addr16
out
lods
cwtl
ss
add
cltd
outsb
mov
add
iret
sub
movsl
pop
in
fs
adc
jo
ficompl
loope
pop
inc
pop
xor
push
ljmp
movl
sbb
std
jl
jle
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
mov
mov
mov
push
push
push
imul
xor
enter
xchg
cmpsl
xor
jns
push
sub
test
cmc
pop
mov
cmp
pop
xor
jnp
mov
fdivp
pop
sub
inc
jmp
mov
movsl
pop
mov
adc
sub
outsb
dec
std
mov
mov
clc
faddp
insl
push
add
mov
push
mov
aam
add
sub
imul
insl
ror
jo
aam
lods
mov
push
pop
stos
adc
insl
and
pop
sbb
je
scas
or
frstor
aam
clc
mov
sub
xor
jle
stc
idivl
jle
pop
ljmp
and
fstpl
cltd
fldt
mov
rclb
adcb
aas
shlb
fwait
jo
pusha
ficoml
mov
pop
sbb
jo
or
and
scas
sti
jle
pop
push
pop
add
push
dec
fiadds
add
add
add
testb
negb
fsub
or
shll
test
mov
mov
xchg
sub
mov
out
adc
in
mov
inc
mov
cmp
inc
push
lods
adc
xor
pop
jno
jmp
mov
inc
xchg
pop
mov
xor
fsubl
cmp
adc
add
pop
in
xchg
jge
push
stos
fistpl
jne
mov
cmp
fsts
xor
pop
out
pop
sub
je
mov
in
adcl
repz
in
cmp
out
test
and
sbb
dec
out
xchg
inc
out
adc
mov
repnz
fbld
mov
add
test
cmpl
xchg
aad
xchg
aad
sbb
fmuls
dec
cld
mov
mov
xchg
fdivrp
add
lahf
fnstcw
ss
lahf
stc
bound
test
add
add
pushf
notl
popa
jl
xchg
bound
inc
add
push
and
pop
inc
dec
in
aad
xchg
es
mov
dec
fcmovnu
pop
push
fsubs
mov
popa
jne
insl
jmp
fidivl
int3
jae
fisttpll
push
adc
inc
inc
rorl
out
outsl
mov
mov
push
xor
rcl
mov
xchg
call
jns
subb
inc
push
push
and
adc
cmp
filds
imul
mov
push
bound
fldcw
or
pop
sarl
aad
stos
inc
sub
sbb
movsb
imul
hlt
lods
decb
loope
mov
add
cmp
jecxz
adc
out
jle
jno
and
movsl
xchg
test
imulb
add
sub
std
cmp
add
cmp
cmpsl
leave
cmc
pop
rclb
push
lret
xor
add
add
push
jl
jle
insb
out
cs
mov
inc
loopnew
add
add
add
mov
repnz
inc
add
sub
cmp
in
rcr
xchg
sub
jg
dec
scas
loope
inc
stos
cmp
mov
clc
cld
sub
aas
xor
cld
mov
in
sbb
inc
sbb
pop
sahf
pop
in
sbb
push
mov
sub
mov
xchg
sbb
leave
les
das
daa
shlb
mov
dec
xchg
inc
outsb
cmp
sbb
push
into
pop
adc
lahf
sub
nop
dec
mov
xchg
ret
push
arpl
cli
xor
jmp
sbb
addl
fcompl
jp
push
scas
loope
add
idivl
xor
or
push
out
ja
mov
shll
push
fistpl
pop
iret
adcl
hlt
repnz
and
jbe
cmp
cmp
add
add
fwait
mov
in
xor
adc
loopew
add
add
add
xor
mov
mov
stc
lcall
ret
mov
jecxz
pop
add
jb
sub
sbbb
mov
ja
and
movsl
icebp
out
mov
outsl
cmp
jae
jnp
sub
dec
inc
aad
cmpsl
scas
pop
and
pop
sbb
pop
lret
out
sub
sub
rclb
push
push
rcrl
cmpsl
mov
insl
jp
aad
xchg
repz
aas
push
jbe
xchg
jo
add
cmp
xchg
add
jp
rcrb
out
and
icebp
mov
adc
mov
fstl
and
test
fisubrs
xchg
fwait
push
stos
insb
int
xchg
jp
clc
fimuls
add
data16
test
pop
jp
iret
popl
roll
xchg
push
aam
fsubp
xor
neg
sub
clc
cmp
int
xor
add
add
data16
jne
mov
lcall
add
add
add
es
fcmovne
add
test
mov
mov
or
sub
cmp
push
xor
jae
pop
test
cli
pop
testl
or
pop
and
roll
dec
dec
xor
lahf
mov
std
aaa
sbb
test
push
pop
mov
xchg
ds
adc
xor
call
sbb
mov
in
and
scas
push
aam
sub
ss
mov
mov
mov
inc
adc
aas
push
and
cmpsb
out
cmpsb
int
aaa
sbb
imulb
std
fdivrl
adc
inc
sbb
sbb
mov
dec
in
scas
mov
cmp
rcr
mov
jecxz
lock
fidivrs
pop
or
jb
inc
dec
or
dec
xchg
aam
inc
sahf
aaa
popa
mov
mov
pop
mov
push
call
jb
scas
xor
xor
mov
add
add
add
jnp
sti
xchg
lahf
mov
or
add
add
nop
jg
xor
fsubrp
rorl
adcl
mov
movsb
out
mov
pop
cltd
push
sti
push
xor
mov
mov
push
adc
and
or
loopne
ret
pminub
push
adc
adcb
mov
mov
push
hlt
add
push
jmp
lods
lcall
pop
mov
dec
repnz
pop
into
dec
addr16
stos
outsb
cmp
pop
cmp
fstpt
cmp
ret
push
push
paddsb
and
js
les
lcall
outsb
test
out
or
movsl
int
ret
xchg
frstor
dec
jnp
fsts
mov
testb
repnz
sarb
jbe
push
push
insl
hlt
mov
clc
sarb
push
add
fsubl
push
lds
dec
mov
inc
cli
rorb
and
add
sub
pop
sarl
mov
pop
addr16
add
add
add
test
push
dec
outsb
xchg
insl
jnp
mov
pop
adc
inc
cmpsb
sub
ja
jne
xor
fildl
scas
mov
xchg
adc
stc
sub
mov
test
cmp
es
jge
jle
std
add
loope
pop
dec
out
test
inc
push
mov
mov
mov
jae
inc
in
roll
insb
in
mov
dec
test
sbb
and
fstpt
loop
cltd
jl
arpl
push
std
mov
jmp
ljmp
adc
adc
sbb
inc
sbb
loopne
std
jge
sub
cmp
mov
test
pop
push
pop
lds
and
jne
fisubrl
ret
mov
push
arpl
out
pop
iret
adc
and
repnz
and
pop
cltd
nop
into
enter
in
mov
insl
lock
std
repz
pusha
or
addr16
add
add
add
ret
dec
jne
mov
or
int
or
jno
xlat
rorl
add
jmp
xor
mov
or
adc
sub
pop
fwait
test
add
mov
aaa
jb
arpl
in
ljmp
bndstx
stos
int
mov
stos
dec
pop
ljmp
mov
mov
push
imul
insl
mov
sub
push
aam
les
mov
xchg
dec
into
pop
arpl
testb
xchg
mov
decl
mov
push
sub
ja
dec
jg
inc
push
das
xor
inc
imul
sbb
rcll
cltd
addr16
jno
adc
add
adc
lds
popf
adc
mov
fldcw
or
out
loop
adc
jmp
js
in
xor
adc
add
add
lock
cmp
arpl
je
scas
stos
jge
out
add
add
add
nop
dec
mov
xchg
and
insb
bound
sbb
mov
fnstcw
adc
jle
cmp
repz
dec
lcall
nop
mov
jg
into
jle
lods
mov
push
or
adc
xchg
pop
loop
dec
clc
mov
xchg
cmp
jl
jae
and
and
dec
push
adc
std
or
lahf
out
add
in
ljmp
sbb
jg
pushf
fnstsw
jae
and
add
push
inc
popf
pop
cmp
mov
les
pop
loope
sbb
leave
cwtl
lods
push
xor
mov
xor
imul
jecxz
cmp
mov
cmpsl
fs
jg
and
fnstenv
or
pmulhuw
aas
xchg
clc
cmp
insb
mov
int3
sub
lods
pop
xor
inc
scas
sub
lret
pushl
jnp
pop
or
mov
add
insl
lcall
mov
inc
sub
sbb
out
addr16
add
add
add
fstps
push
int3
xchg
jmp
cltd
lods
and
test
mov
pushf
push
or
adc
ljmp
fucomp
mov
rol
inc
cs
daa
scas
sbb
jecxz
cmp
and
adc
fldt
aaa
cmpl
add
lds
adc
dec
fdivrs
cltd
sbb
cmp
push
std
mov
sbb
and
stos
jecxz
push
aam
gs
das
lahf
cmp
mov
and
cmp
std
flds
ljmp
sti
rcrb
dec
pop
mov
out
fidivrs
add
fldt
xchg
out
clc
mov
rclb
cmp
fstl
shrl
mov
mov
sbb
sub
mov
adc
add
add
xchg
in
mov
incl
rcll
int
addr16
add
sbb
imul
repz
fisttpll
or
jae
nop
js
sahf
mov
enter
test
and
data16
andb
into
mov
push
cwtl
and
aam
adc
pop
jecxz
lret
imul
shrl
mov
xor
push
cwtl
jb
cwtl
les
mov
enter
dec
into
hlt
js
aaa
mov
xlat
ja
js
lret
and
test
popa
jp
adc
or
iret
outsb
mov
push
idiv
xchg
hlt
lock
in
xchg
pop
jns
xor
rclb
bound
jae
mov
arpl
insl
xchg
jne
lcall
loopne
out
es
hlt
cmp
mov
inc
flds
xchg
pop
or
jb
lret
jg
std
loope
mov
inc
enter
adc
dec
xorl
stos
das
mov
jle
pop
inc
mov
in
negl
sub
movsb
icebp
je
imul
add
add
add
pop
in
xchg
adc
jg
cli
mov
mov
mov
sbb
push
cmp
xor
loop
push
ljmp
and
scas
and
push
dec
ret
out
adcl
sub
ret
sbb
add
and
mov
lret
xchg
mov
loopne
cmc
popaw
test
push
fs
push
inc
cmp
xchg
mov
push
movsb
xor
lea
ret
push
imul
mov
or
notb
fisubrl
pop
fimull
push
xchg
push
and
mov
mov
jmp
leave
fbstp
ss
lret
outsb
jle
popa
lea
dec
mov
int
inc
cmc
push
mov
jae
mov
or
test
sub
push
stos
test
dec
test
ja
mov
push
pop
loopne
cmp
fisttpl
adc
or
add
add
mov
stc
dec
push
pusha
dec
jnp
ljmp
lods
pop
jle
inc
jp
mov
sub
push
hlt
and
dec
test
push
sbb
jmp
sahf
in
mov
mov
push
xlat
test
jbe
inc
xor
in
adc
cmp
sbb
xchg
sbb
test
es
fisubrl
and
imul
mov
push
cmpb
xchg
loope
sbb
push
xchg
mov
sbb
jns
addb
cs
inc
fidivs
std
loopne
dec
outsb
push
sub
sahf
aas
mov
shr
mov
mov
test
sbbl
or
xchg
cltd
aad
in
xor
push
loope
xor
xor
xchg
insl
push
jmp
push
dec
shl
xchg
ds
sarb
jns
jge
sbb
loope
inc
jns
les
sub
mov
jns
inc
xor
dec
pop
adc
add
adc
push
push
push
mov
addr16
add
add
add
pop
xchg
js
mov
in
jb
nop
push
sbb
test
add
push
and
and
mov
pop
es
sub
jle
das
mov
mov
sub
das
fs
push
pop
xor
mov
push
sbbl
pop
loopne
fldl
inc
lock
ret
mov
adc
adc
xchg
xlat
cmc
out
aas
shrb
outsl
jmp
mov
lds
int
cmp
dec
ljmp
add
idivb
add
lcall
push
cmp
adc
aas
mov
xorb
js
stos
and
iret
jb
call
jp
outsl
mov
push
pop
mov
fstpt
cmp
inc
stos
es
lret
les
imul
dec
or
adc
push
insb
or
pop
fisubs
std
gs
leave
int
in
push
dec
mov
out
repnz
add
pop
lcall
les
mov
add
add
add
xchg
inc
bound
or
mov
dec
test
push
cld
fnstcw
fsts
repnz
sbb
mov
out
sub
fwait
test
jmp
mov
icebp
adc
aas
inc
pushf
push
xchg
xor
jae
inc
arpl
cmp
sbbl
shll
adc
and
sub
fwait
jae
jl
stos
adc
jb
pop
inc
pop
push
cmpsb
mov
rcll
lock
cwtl
adc
fcompl
mov
mov
dec
mov
inc
sarb
addr16
cmpl
inc
das
or
xor
mov
pop
add
xor
or
in
add
insb
mov
stc
in
sub
add
jbe
lds
jno
out
mov
mov
xchg
cwtl
sbb
xor
popa
lret
outsb
movsb
cmpsl
mov
and
roll
aad
mov
or
sub
sbb
add
add
mov
push
decl
xchg
mov
add
add
add
out
sbb
sbbl
clc
inc
outsl
xchg
xor
leave
ret
cmp
or
insb
imul
jns
jnp
shll
outsl
jo
jmp
ret
xchg
fisubl
into
mov
or
mov
andl
sub
fbld
in
push
sbb
dec
ret
ss
popf
inc
mov
rol
inc
in
lock
mov
call
push
jns
shrl
dec
fwait
popa
scas
ja
xchg
inc
cmp
mov
jns
push
mov
xorl
lret
or
jne
sbb
mov
mov
pop
jae
inc
aad
or
fwait
mov
dec
fadds
push
dec
cmp
outsb
and
jnp
daa
dec
das
dec
insl
jnp
fs
arpl
popf
cwtl
jmp
out
outsl
ss
inc
pop
add
cmc
add
imul
aaa
xor
cld
sahf
mov
sub
mov
add
add
jmp
in
push
sub
xchg
addr16
add
add
add
cmpsb
subb
arpl
or
pop
lahf
add
cmpsl
sub
orb
and
lret
cltd
test
sub
jmp
push
decb
mov
rcr
xchg
jae
fistpll
insb
push
push
push
sub
mov
adc
mov
xor
shll
movsb
cmp
bound
mov
ret
add
push
lret
dec
ja
or
mov
pop
ja
jmp
pop
sub
ja
xor
mov
adc
lods
call
sbb
push
add
cmp
in
adc
dec
pop
or
dec
lock
xchg
enter
sbb
mov
dec
inc
aam
sarb
jns
out
pop
pop
insl
out
add
mov
and
pop
rcr
dec
repnz
fwait
popf
mov
fsubs
xor
mov
and
and
mov
lcall
out
add
add
add
pop
adc
cmp
aaa
lds
mov
pop
cmpsl
mov
mov
js
mov
mov
add
ret
lods
xchg
mov
fwait
sti
push
js
jae
mov
sbbl
sub
in
mov
test
or
cld
dec
out
movsl
jb
es
sub
lods
push
pusha
int3
fimull
xchg
xchg
sarl
inc
mov
outsl
cmp
push
or
sbb
push
pop
les
sub
paddb
jb
rolb
sbb
sub
popa
test
aam
sbb
in
xchg
sbb
inc
pusha
push
jp
add
scas
test
mov
std
mov
loope
fcomp
and
cwtl
push
fs
jge
pop
dec
imul
xor
std
mov
xorl
ret
xchg
push
pop
in
leave
out
iret
push
jae
add
mov
clc
push
mov
sub
add
add
inc
ror
lock
jnp
xor
xchg
clc
in
jne
lock
add
add
data16
call
xchg
dec
cmpsb
sub
mov
mov
lock
pcmpgtb
sub
inc
dec
xchg
add
das
fidivl
xchg
mov
fsubr
fwait
nop
jecxz
sahf
hlt
shlb
sub
mov
ja
out
das
add
sbbl
adc
mov
mov
mov
aam
xor
std
std
pusha
sarl
jb
repnz
dec
out
icebp
ret
inc
sub
lcall
addl
es
test
data16
and
sbb
out
sti
mov
in
mov
pop
outsb
out
out
lods
and
mov
leave
fimuls
fcmovne
push
aas
fs
mov
stos
pop
scas
or
rcrl
imul
mov
jg
lahf
jnp
pop
dec
aam
adc
xchg
sbb
jno
cmp
cmpsl
mov
aaa
sub
std
out
sbb
and
repz
fisubs
xchg
movsb
inc
addr16
add
add
add
add
push
jl
pop
ret
push
pushf
sbb
xchg
dec
addr16
lea
fsubr
or
movsb
dec
repz
xchg
xor
add
cs
mov
call
int
mov
push
cwtl
out
push
inc
jge
arpl
mov
adc
enter
jo
pop
outsb
and
xor
inc
xchg
xchg
inc
lret
jae
fxch
lcall
es
out
xchg
int
sbb
and
out
notb
aad
cmp
ret
out
pushfw
daa
stos
mov
clc
or
int3
ss
sbb
or
fxch
incl
fwait
xchg
cmp
jbe
std
adc
rcll
ljmp
roll
das
mov
and
test
mov
jecxz
sbb
bound
insb
xor
fiaddl
add
add
out
sbb
ret
cld
repnz
add
add
lock
das
enter
add
fsubrs
in
out
aas
js
repnz
into
fisubrs
add
cmp
and
cmp
push
jb
lret
into
add
jmp
sub
lret
jo
lcall
mov
in
cmp
mov
out
loop
es
mov
je
daa
jmp
lea
fadds
cmp
or
push
bound
mov
push
or
cmp
jp
je
lret
and
cmp
push
mov
out
sub
mov
mov
ficomps
xor
test
aaa
in
lret
inc
mov
mov
dec
aad
addl
push
jae
xchg
icebp
fisttpll
mov
pop
mov
and
sbb
iret
aad
sbb
out
add
add
scas
push
repz
cmc
scas
sub
mov
repz
add
add
jmp
ficomps
xor
add
jecxz
xchg
jecxz
aas
test
xor
mov
dec
pop
pop
inc
mov
bound
cwtl
push
rorl
popa
imul
push
mov
jo
test
mov
imull
cmpsb
call
jl
adc
jmp
outsb
stc
push
cmpsb
fisttpl
pusha
dec
arpl
in
push
and
fcompl
aad
xor
jmp
dec
mov
pop
jg
pop
mov
adc
push
push
ficoml
lods
mov
xchg
pop
mov
mov
sbb
stc
cmp
adc
xchg
jmp
cmp
ret
adc
or
mov
dec
lds
xchg
jge
imull
das
mov
divl
and
dec
mov
sub
mov
imul
mov
jmp
adc
pusha
xchg
dec
jmp
add
lret
pusha
rorb
cmpsb
mov
mov
add
add
add
and
and
inc
ds
mov
mov
rorb
or
dec
and
in
pop
inc
adc
pop
imul
jno
dec
stos
lahf
mov
aaa
add
mov
mov
xchg
iret
movl
or
mov
in
dec
dec
inc
mov
xor
bound
xor
pop
mov
out
mov
dec
test
add
lods
adc
cmp
mov
pop
ds
fcoml
popf
push
fwait
jns
sub
cmp
pop
fwait
out
add
stc
or
jb
inc
dec
adc
in
dec
pop
push
add
inc
jbe
and
mov
mov
xor
movsl
stos
sub
jae
mov
inc
jnp
mov
xchg
xor
inc
push
xchg
pop
data16
xchg
xchg
je
and
lods
jp
sub
inc
jecxz
push
testl
xchg
add
add
mov
mov
sbb
add
sub
dec
sbb
pop
pop
repnz
adc
and
in
popa
mov
xchg
pushl
rcrb
dec
fwait
push
aam
mov
push
xchg
leave
andl
mov
push
fists
mov
xchg
repnz
sub
out
imul
push
shl
repz
clc
mov
inc
in
sti
cmp
push
inc
cmp
inc
push
mov
repz
dec
inc
cli
in
daa
mov
addr16
stos
mov
jl
arpl
add
mov
aas
fisttpll
and
out
inc
insb
iret
imul
int3
mov
test
cmp
pop
cwtl
pop
clc
cmp
testb
dec
push
pop
imul
adcb
adc
sbb
fchs
sbb
sbb
mov
jb
jmp
cmp
add
add
xchg
mov
mov
pop
das
insl
cmp
add
add
add
xor
adc
xchg
mov
cli
sbb
lret
leave
rolb
sbb
inc
add
test
add
sub
mov
pop
sub
pusha
into
and
pop
cmpsb
sbb
insb
ja
fbstp
hlt
mov
or
jge
iret
fwait
mov
jg
mov
inc
loopne
pop
mov
scas
and
loop
inc
inc
mov
je
test
je
sbbl
sbb
cmpsl
fnstsw
add
dec
mov
mov
pop
jecxz
aaa
dec
sbb
js
push
push
notl
insb
lods
pop
pop
inc
push
fwait
in
test
and
dec
sbbl
mov
cmpl
dec
jno
orl
and
cmc
add
or
xchg
xchg
or
adc
outsb
or
js
lret
test
add
fucomi
xor
pop
pop
testl
add
sbb
mov
push
aas
mov
test
ret
mov
rcrl
js
pop
pushf
xchg
idivb
mov
xchg
dec
jmp
loop
ss
sub
sbb
gs
clc
repnz
loope
push
addl
es
out
xchg
nop
das
test
add
cmp
xchg
jb
dec
push
and
test
icebp
add
ljmp
in
add
jns
cmc
ficompl
sbb
jno
call
lods
cli
jno
xchg
movsb
mov
xchg
push
popa
movsl
push
or
mov
shrb
or
popa
stc
mov
addr16
xchg
jg
fcomps
pushf
sbb
add
adc
sbb
pushf
out
or
xchg
adc
inc
repz
cwtl
lods
mov
ds
out
adc
in
cmp
fcomi
sub
loopne
repz
xchg
mov
hlt
jbe
push
inc
pop
jns
aas
loopne
sub
clc
add
add
add
into
cmp
xchg
sub
adc
test
xchg
pop
iret
lret
test
imul
jae
push
push
xchg
decl
les
mov
rcll
mov
dec
cmp
add
dec
nop
aam
xchg
or
test
sbb
dec
pop
mov
rcr
pushf
mov
in
mov
pop
popl
incl
loopne
inc
adc
das
ud1
addr16
mov
dec
add
xchg
loop
push
scas
pop
out
repz
dec
add
sbbb
in
out
lcall
cmp
or
fcmove
and
adc
xor
inc
lods
shrb
xor
cmp
in
mov
and
sub
cltd
in
mov
cmp
out
or
and
pop
test
add
pop
adc
add
add
cmpsb
sbb
jnp
mov
das
sbb
stc
add
add
add
push
push
ret
mov
mov
push
out
movsb
or
dec
push
inc
cli
mov
push
call
fdivrl
std
jg
insb
imulb
cmp
jb
mov
testb
test
or
es
jnp
cmp
push
loopne
das
xchg
hlt
cmp
cwtl
fisttpl
test
test
push
and
fsubp
xchg
imul
out
inc
or
test
loope
jp
popf
cmp
push
dec
jge
pop
inc
add
pop
out
xchg
lea
inc
push
popa
ret
pop
dec
add
aaa
cmp
data16
inc
xorl
push
adc
mov
push
aad
jmp
xchg
sbb
scas
loop
sbb
adc
or
lods
aaa
ret
jle
insl
xchg
outsb
jno
push
mov
inc
mov
adc
outsl
stos
mov
xchg
and
mov
std
mov
mov
mov
adc
add
add
xlat
pop
xlat
jg
mov
xchg
inc
aaa
frstor
add
add
add
add
subb
lock
imul
ret
call
add
loop
sub
in
xchg
fstl
rolb
ret
sbb
test
push
aam
lea
js
popf
iret
push
sub
mov
mov
sub
xorb
fsubs
add
sbb
adc
adc
outsb
movsl
cs
outsl
fs
clc
ljmp
cmc
out
add
mov
jmp
push
loopne
sub
incb
cmp
jle
jle
dec
xor
jp
scas
push
inc
ret
cmp
test
fldt
ljmp
int
and
and
out
mov
mov
or
mov
mov
xor
cmp
xchg
push
and
jbe
ja
xchg
ror
mov
lds
lret
es
push
movsb
pusha
cmp
aaa
mov
pop
js
rolb
mov
xchg
mov
idivl
sbb
cltd
addr16
add
add
add
jmp
jae
sub
push
jns
pusha
leave
pop
fnstenv
sub
xchg
shrl
sar
jno
add
cmp
sub
daa
push
or
int3
push
cs
xor
push
mov
insl
xchg
es
xor
jnp
inc
push
ds
xor
es
es
mov
sub
movsl
jo
enter
jbe
test
ret
sarb
jg
push
mov
jg
cs
es
add
or
dec
sub
fldcw
push
jae
push
pop
hlt
and
leave
jo
pop
lods
xor
inc
enter
jecxz
test
sahf
xchg
into
adc
mov
or
xor
inc
pop
inc
and
gs
pusha
jp
data16
mov
mov
ja
out
test
push
adc
shll
in
sarb
push
mov
jp
and
jp
push
add
add
test
mov
fiaddl
fcomps
add
add
repnz
cmc
test
jns
andb
or
icebp
stos
xor
gs
outsl
mov
popf
push
jbe
mov
mov
or
movsb
or
pushf
test
lea
stos
fnstsw
cmp
in
cmp
das
shll
out
mov
jge
sub
mov
cmp
dec
roll
loop
aad
rcr
add
mov
setge
mov
pop
xor
das
and
pop
and
aaa
xchg
js
pop
and
push
repz
pop
dec
cwtl
nop
fisubs
push
jg
mov
outsl
bswap
movsl
out
xorb
loope
and
popf
mov
and
ret
shrb
push
repnz
popl
inc
lcall
adc
mov
cs
sbb
jl
fisttpll
lret
sub
mov
cmp
out
inc
jmp
imul
lahf
repnz
js
dec
addr16
add
add
add
aaa
mov
roll
fwait
lret
mov
in
inc
jmp
or
test
test
push
add
out
mov
mov
xlat
loop
pop
push
jecxz
rorb
shl
or
pop
test
push
insb
jmp
fisubl
fcompl
nop
and
ja
iret
push
add
out
pop
mov
inc
test
daa
dec
mov
iret
fsubrs
aaa
adc
pop
scas
in
sbb
add
jle
push
or
mov
adc
adc
xorb
xor
loope
dec
mov
mov
push
jle
dec
mov
adc
inc
gs
mov
into
lret
sbb
or
jg
dec
stos
sahf
jg
jbe
inc
mov
inc
pop
jbe
out
cmp
pop
lahf
pop
xlat
jge
mov
sbb
push
push
sbb
sbb
clc
push
lret
inc
dec
mov
mov
roll
in
in
sbb
cmp
sti
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
pop
pop
dec
ljmp
add
mov
std
mov
das
vmovshdup
je
cli
das
dec
into
lock
mov
mulb
out
std
xor
loope
test
pop
add
fbstp
jbe
add
scas
insl
out
or
cmpsl
lret
scas
clc
inc
test
stc
movsb
daa
dec
mov
cwtl
gs
mov
sub
jns
cld
pop
mov
insb
cmp
adcl
sub
sub
xlat
lret
xor
sbb
repz
or
xchg
adc
cmp
mov
pop
int
cltd
inc
loopne
mov
lret
fsubs
lcall
orb
or
inc
insb
xchg
jg
push
in
or
and
arpl
das
xchg
adc
sub
in
adc
push
mov
cmp
dec
adc
ror
add
mov
dec
cwtl
std
inc
jne
cmp
mov
test
rcl
mov
mov
sub
mov
dec
inc
fbstp
add
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
ret
or
mov
sarb
push
inc
in
cmp
jp
cld
pop
xchg
into
mov
sub
xor
adc
lahf
int
js
jne
mov
dec
mov
dec
and
outsl
inc
sbbl
sti
sbb
shlb
and
adc
stc
jbe
cmp
push
pop
mov
stos
outsl
call
sbb
cld
lret
sub
adc
pop
adc
cs
mov
popf
or
aam
and
pop
fidivs
mov
xor
shlb
jecxz
adc
aas
rorl
daa
mov
adc
cli
lahf
xchg
xchg
aas
xor
test
inc
mov
mov
fildll
outsb
sub
xchg
mov
add
out
imul
xchg
addr16
fcmovb
push
stos
cltd
dec
or
lret
ss
push
xchg
sub
mov
or
ud0
imul
add
mov
nop
test
aam
int
aaa
das
aam
cmp
add
add
add
stos
cld
loop
pop
xchg
es
add
div
xchg
ss
movsb
insb
inc
cmp
das
movsl
sbb
adc
fsubrp
xor
push
pop
xchg
inc
addr16
lods
pop
xchg
std
pop
aam
jecxz
push
ds
fsubrl
cmc
push
out
nop
lods
xor
loopne
jle
inc
cmp
or
std
lret
jb
xchg
xlat
insb
or
clc
aad
test
out
sub
fmull
xchg
jo
shlb
fstl
ror
push
dec
mov
daa
das
subl
inc
push
insl
jnp
test
dec
dec
xor
pop
and
and
mov
jge
stc
paddw
mov
adc
xlat
jns
jg
lcall
sbb
mov
movsl
add
arpl
xor
pushf
or
jbe
mov
inc
jg
inc
cmpsb
and
test
pop
arpl
addr16
sub
daa
out
cmp
add
add
and
and
add
push
lods
pushf
aad
push
pop
nop
je
add
push
adc
and
pushf
sbb
sub
lds
or
out
call
and
and
dec
subb
xchg
or
sub
push
mov
push
lods
sbb
pop
enter
stc
sbb
in
out
sar
pushf
inc
jnp
idivb
xbegin
lods
ret
push
sti
mov
repnz
jnp
jnp,pt
sbb
leave
stos
adc
ret
mov
mov
xchg
lods
push
push
mov
jmp
adc
jmp
outsb
data16
outsb
dec
jb
movsb
lcall
inc
push
mov
cmpsb
ror
mov
insb
mov
cmp
ret
aas
lret
mov
or
enter
xchg
add
aaa
xchg
push
xchg
out
stos
mov
cmp
mov
imul
xchg
cld
xor
and
test
movsl
daa
pop
out
cmp
cmp
pushl
xchg
xor
aam
and
add
add
add
add
dec
xlat
addr16
mov
dec
mov
sub
rdmsr
int
imul
ret
imul
add
jbe
and
pop
jno
jp
mov
into
mov
xor
and
add
dec
out
pop
sbb
out
and
xchg
in
cmp
arpl
cwtl
mov
push
sbbl
dec
sbb
outsb
cs
sub
xchg
outsl
sbb
loope
mov
cwtl
push
pop
jmp
mov
in
push
push
and
bound
icebp
pushf
test
and
decb
sbb
dec
jbe
mov
scas
lock
pop
dec
pop
pop
setl
repnz
daa
xor
lahf
imul
out
mov
lock
mov
arpl
andl
fwait
sbb
pop
mov
mov
push
dec
popl
pop
test
push
scas
mov
insb
shr
add
add
add
add
adc
loope
test
aaa
pop
sbb
inc
ja
xor
popf
subb
xchg
scas
sarl
fldenv
jl
sbb
out
insl
xchg
int
shlb
push
gs
clc
cwtl
addr16
ja
mov
jnp
inc
sti
fs
into
adc
iret
mov
sbb
xchg
test
xor
addr16
pusha
insb
scas
dec
addb
dec
call
add
stos
mov
dec
inc
add
das
cmp
hlt
inc
cmpsb
adc
inc
pop
sub
mov
push
sub
sahf
cmpsl
cmpsb
pop
mov
repz
xchg
inc
fists
pop
cmp
xchg
xchg
daa
add
in
mov
outsb
cld
adc
inc
pop
lods
cmp
outsl
lahf
dec
in
es
jnp
cmc
movsl
fdivrl
testb
cwtl
sbb
mov
inc
dec
repnz
push
cwtl
add
xchg
stc
mov
jne
je
adc
enter
dec
repz
or
dec
shr
xchg
inc
out
jo
add
add
xchg
and
movsl
mov
mov
mov
ss
addr16
add
add
add
jb
es
movsl
bound
cmp
into
call
add
adc
movsl
push
lret
es
xchg
jmp
mov
fcomps
mov
loop
xchg
arpl
add
ret
jecxz
daa
xor
push
out
aaa
pop
dec
jl
inc
or
lock
jmp
cmp
js
adc
dec
push
mov
sbb
cmp
push
fnsave
mov
inc
sub
xor
addr16
stos
dec
inc
and
mov
mov
push
jmp
dec
outsb
mov
outsl
pop
scas
lret
mov
int3
jp
cmp
adc
comiss
pop
jmp
mov
add
dec
mov
adc
fcomps
lret
pusha
sbb
adc
pop
enter
pop
and
nop
add
popa
push
xor
decb
mov
add
negl
add
in
in
popa
neg
test
mov
adc
add
add
mov
push
jg
mov
popa
xlat
iret
movsb
addr16
add
jle
cmp
mov
pop
jecxz
jecxz
mov
shrb
pushf
fldt
dec
push
xor
fmul
adc
dec
outsl
jb
xor
add
xor
add
imul
and
mov
jecxz
stos
pushf
xchg
xchg
cmp
mov
push
jns
jg
mov
adc
fimuls
mov
in
pop
jns
pop
movsb
dec
sbb
jg
sarb
pop
orb
mov
das
pop
fmuls
nop
stos
outsb
cli
cli
xchg
out
push
daa
arpl
ja
iret
jg
shll
mov
sbb
popf
fbstp
dec
ds
and
mov
jecxz
pop
adc
pop
xchg
fs
test
cld
or
imul
mov
push
ljmp
jnp
ljmp
xchg
mov
sbb
push
pop
xlat
inc
stc
mov
mov
lods
imul
or
push
add
add
add
mov
xor
push
lds
lods
mov
fidivs
shrl
fcoml
pop
fdivr
stos
mov
dec
sbb
mov
xlat
scas
pop
sahf
out
cltd
outsl
mov
jge
xchg
push
dec
or
mov
aam
xor
push
mov
addr16
insl
sbb
inc
out
mov
mov
icebp
int3
lds
fstpl
mov
arpl
out
inc
into
out
sbb
sbb
mov
push
pop
mov
lods
test
pop
je
je
cmpsb
pusha
jo
xchg
pop
inc
aam
out
cmp
imul
movb
sub
loope
lahf
stos
add
xor
xor
fs
out
jp
push
leave
inc
dec
cmpsl
bnd
xlat
cmp
fisttpll
dec
inc
fs
jae
pop
jo
out
xor
cmp
add
add
mov
cmp
popf
push
mov
add
add
add
xorl
sub
mov
in
out
movsb
mov
mov
adc
xchg
xlat
aaa
aas
or
mov
hlt
and
ljmp
mov
add
jae
sti
pusha
sti
repnz
inc
in
outsl
push
pop
nop
fwait
sti
push
pop
aam
mov
mov
lock
sub
in
fs
add
fisubrs
jp
pop
mov
lods
out
in
mov
xchg
push
into
dec
mov
movsb
ljmp
std
xor
dec
icebp
sub
jae
mov
mov
and
repz
sub
daa
callw
sub
sarb
push
mov
enter
in
ss
xor
das
add
jecxz
sub
mov
pop
mov
inc
mov
lea
decl
fldenv
call
xchg
adc
xor
xor
ret
sub
leave
mov
cli
lcall
testl
add
xchg
enter
push
fbld
rcll
add
add
popf
cmp
aam
int
sbb
xchg
pop
loop
imul
into
daa
pop
rolb
xchg
push
xchg
pop
dec
mov
add
loop
call
jno
xor
pusha
pop
inc
sub
repnz
fwait
push
sarl
sub
daa
and
out
or
jnp
mov
fs
adc
aam
iret
or
out
mov
pop
fcmove
cli
fldcw
out
pop
es
mov
jl
dec
fdivrs
dec
out
fcoml
test
pop
pop
data16
pop
insl
and
loope
sbb
adc
or
inc
push
js
gs
movsb
sbb
xchg
test
mov
push
fs
adc
pop
int
addr16
jno
je
insb
jne
sbb
sar
pop
dec
xchg
inc
push
je
jp,pt
sarl
adc
out
inc
nop
sbb
mov
addr16
jmp
mov
into
fwait
add
mov
jl
or
add
add
add
and
jnp
jle
push
dec
hlt
push
es
or
fstps
push
orb
or
clc
pusha
daa
sbb
mov
mov
xchg
bnd
sbb
add
xor
cmpsb
daa
daa
xchg
addr16
inc
lcall
lods
aaa
lahf
inc
or
imul
insl
outsb
sub
ficoml
ss
mov
xchg
jne
aas
icebp
mov
lret
jnp
in
push
mov
pusha
fs
inc
loopne
add
inc
subb
pop
popa
nopl
insl
sbb
jae
inc
les
cli
pop
mov
movsb
xchg
adc
add
pop
outsb
outsl
repnz
rep
adc
jecxz
jne
inc
cmp
sub
mov
xor
mov
dec
push
and
loop
je
jl
daa
lahf
dec
pop
dec
jg
dec
enter
add
push
shl
aam
call
out
adc
adc
add
add
xor
mov
pop
sarb
in
sbb
add
add
add
insl
int
dec
cli
fucomip
adc
popf
jae
cmc
mov
and
mov
sbb
fbstp
push
jnp
nop
sub
test
data16
xchg
mov
or
loopne
mov
incb
dec
cltd
cmc
enter
mov
jo
jl
mov
lcall
and
push
sub
fldenv
cli
mov
es
xlat
lahf
push
mov
mov
jae
cmp
js
sub
mov
or
shl
mov
ljmp
xchg
rcl
lea
in
mov
adc
scas
mov
jecxz
in
lret
cmp
sahf
int3
in
rep
push
xlat
andb
cli
rorb
nop
pop
adc
xor
pop
clc
push
orb
aaa
iret
outsl
sbb
pushf
add
mov
cmp
cmc
pop
xlat
pop
mov
pop
jbe
pop
lea
xor
jnp
jno
sti
inc
out
aas
mov
rcrb
push
cmpsb
or
add
add
add
shlb
cmp
inc
ja
sbb
scas
cmp
push
adc
xchg
pop
inc
mov
push
inc
bound
rcrl
mov
pop
orl
add
jne
add
iret
flds
imulb
pop
or
jae
or
cmp
in
add
subl
enter
sahf
rorl
lret
iret
add
shll
jae
inc
push
out
inc
add
lcall
insb
xchg
mov
pop
push
sub
push
mov
bound
cmpsb
enter
daa
pop
in
pop
scas
mov
pop
push
shrb
inc
xor
pop
sbb
ficompl
inc
in
arpl
cmp
push
lret
sbb
and
cmpsl
rcl
cmp
push
add
rcrb
adc
jo
inc
daa
aaa
mov
push
adc
mov
add
bnd
dec
leave
and
nop
add
or
add
add
add
xor
into
jmp
sbbb
push
add
enter
scas
mov
add
jle
mov
movl
fidivs
adc
jl
xor
xor
fs
inc
fs
pusha
lcall
js
fstl
push
inc
lds
lcall
rclb
pop
lret
mov
addl
mov
testb
out
cmp
das
inc
icebp
clc
shl
inc
xorl
ret
cmc
int3
cmp
cmp
fdivr
pop
mov
mov
add
xchg
popa
subl
dec
fstps
lcall
cli
int
outsl
push
push
jmp
pop
into
push
fldt
pusha
mov
mov
repz
leave
jge
adc
leave
sub
xor
jns
mov
cs
sbb
in
out
ja
filds
fs
addr16
add
push
pop
pop
sarl
and
daa
ret
mov
mov
pop
sbb
pop
movsl
dec
sbb
fstpt
insb
loope
sub
add
pop
mov
sbb
jecxz
ljmp
inc
add
mov
fdivrs
pop
lods
mov
add
arpl
dec
jmp
lock
mov
dec
jecxz
and
adc
cmp
jmp
fimull
cmp
sbb
inc
gs
sbb
loop
fsubs
test
xchg
mov
ret
in
mov
ret
sub
ror
pop
call
add
loop
xchg
pop
inc
jp
addb
xlat
xor
les
out
cmp
sbb
les
mov
push
push
lds
mov
jbe
cmpb
lea
mov
inc
scas
test
in
inc
push
or
push
add
add
add
aas
repz
repnz
push
idivl
xor
jne
add
pop
fwait
arpl
adc
mov
movsb
mov
push
loopne
pop
sahf
mov
push
repnz
mov
mov
mov
movsl
inc
or
or
cld
lea
mov
or
push
xor
dec
push
jno
mov
int3
stos
cmp
cs
aam
iret
std
dec
test
inc
inc
lret
call
jae
test
jno
scas
adc
mov
call
cmpsl
call
addb
adc
int
dec
push
sahf
fwait
sub
jnp
fistps
daa
mov
dec
and
cmpsb
push
mov
xor
push
cmpsl
or
pop
movsl
push
inc
mov
out
xchg
inc
loope
bnd
inc
cmpsb
inc
or
jmp
xor
out
decl
cmp
jns
xchg
mov
jg
neg
pop
daa
inc
adcb
sgdtl
add
add
push
sub
pop
sub
lock
and
clc
sbb
mov
je
out
or
lret
lods
or
iret
mov
sub
sbb
add
loope
fstenv
or
xchg
ret
in
into
scas
sub
sub
pop
mov
jmp
cmpsl
push
mov
das
in
jae
mov
add
mov
xchg
adc
orb
je
lods
xlat
adc
repnz
and
inc
pop
jns
repz
loope
popf
dec
or
test
sub
xchg
add
ret
lret
popa
push
fwait
jle
in
into
imul
out
call
jmp
cltd
movsl
push
daa
mov
sbb
mov
into
insb
imul
lcall
xchg
ljmp
xchg
ficompl
push
pop
cmp
adc
ret
lock
stc
jg
stos
es
dec
mov
add
sti
jg
cmp
je
je
dec
xor
add
add
add
mov
sub
cmp
imul
movsl
ja
xor
lcall
ror
or
cmc
xor
push
adc
fisubrs
mov
jno
test
adc
sbb
fs
inc
jae
add
cld
in
fcomi
push
fdiv
test
mov
add
addr16
arpl
mov
xor
sub
fadd
adc
shl
and
arpl
xor
js
stos
add
loope
pop
stc
xchg
jecxz
cs
pop
in
lahf
sub
jno
inc
adc
mov
leave
mov
cmp
lret
sub
xor
stos
mov
xchg
les
sub
pop
subb
mov
push
sbb
dec
divl
cwtl
sub
mov
aas
dec
xor
push
add
push
out
out
cmp
add
scas
aam
jnp
fstp
fcompl
and
xor
add
add
add
sub
cwtl
stos
decl
rorl
dec
rolb
jne
jge
pop
jbe
test
cmp
cmpsl
aas
or
lods
fsubr
test
mov
mov
das
sub
loope
sub
int3
rcrb
push
mov
jmp
lods
sub
xchg
cmpsb
add
push
push
push
xchg
or
repnz
cmp
fmul
mov
xchg
mov
mov
repnz
jg
out
lds
and
pop
hlt
lds
pop
mov
sbb
jbe
mov
fldz
pop
fadds
cmp
inc
mov
in
dec
dec
push
stos
cltd
outsb
mov
lods
add
xchg
arpl
push
inc
aam
xchg
pop
lds
lret
int
pop
jbe
pushf
push
jecxz
cli
and
rolb
daa
je
mov
xor
lret
repnz
mov
adc
stc
fwait
clc
aam
push
and
hlt
dec
add
insl
sub
add
add
outsl
mov
add
insb
clc
stc
adc
add
add
add
and
cmp
test
popf
xor
rorb
jne
loope
imul
adc
inc
pop
cltd
fldenv
call
mov
mov
sub
add
pop
ds
imull
insl
cs
out
xchg
out
dec
dec
or
xchg
inc
ljmp
in
outsb
add
push
int
xchg
dec
scas
xor
cli
mov
sbb
test
xchg
insl
sub
roll
movsb
push
push
leave
sahf
outsb
xchg
xchg
push
pop
out
cwtl
push
cmc
push
ja
dec
mov
bound
outsb
jae
or
pop
jge
push
xor
shrb
and
or
lret
scas
stc
sbb
push
jnp
js
fstps
test
pop
mov
push
fldt
idivb
sub
mov
cmp
xchg
push
push
divl
mov
mov
jno
fmull
mov
cmp
addr16
cmpl
sbbb
loope
jmp
fisttpll
adc
add
add
add
in
mov
jnp
scas
pop
test
pop
adc
xchg
or
add
inc
rclb
jno
dec
lock
add
or
lds
and
pop
fdiv
inc
jg
pop
inc
cmp
ret
xor
xchg
jge
aas
int3
fldl
ret
fiadds
andb
scas
adc
add
daa
mov
mov
aaa
and
sbb
stos
jle
mov
in
enter
pop
cmp
jns
enter
and
sar
pop
in
push
mov
inc
fidivl
jae
xor
ljmp
aam
addr16
test
lret
sarl
mov
pop
pop
jno
inc
xor
xchg
stos
cmpsb
popa
xchg
xor
push
xor
jp
ret
lock
outsl
das
lahf
sbbl
ret
lahf
push
push
mov
dec
fdivrl
insl
loope
cmp
xchg
jb
cli
and
push
xor
xchg
lds
rcll
addr16
add
add
add
aam
sub
xlat
addr16
arpl
mov
das
jbe
cmpsb
xchg
sbb
in
mov
es
and
jp
mov
inc
adc
gs
pop
cmp
inc
aam
shll
cli
dec
arpl
cmc
push
xor
pop
outsb
out
pusha
lods
int
jo
int
sahf
xchg
sub
test
inc
cmp
cmp
in
jecxz
sub
pop
mov
out
adc
je
and
cld
mov
and
sti
mov
cwtl
cmp
shrb
insb
mov
or
pop
scas
imul
mov
inc
and
stos
add
imul
int
cs
test
les
sub
insb
pusha
push
sbb
inc
sbb
xchg
or
push
sahf
sub
xor
and
adc
lcall
ret
dec
mov
dec
cli
inc
jg
int
xchg
lods
or
imul
addr16
add
or
jg
or
jb
add
mov
ret
push
loopne
ja
mov
pop
sbb
test
movsb
jns
cmpb
cwtd
aam
adc
or
push
sbb
and
bound
push
and
mov
repnz
fwait
mov
sbb
pusha
rorb
inc
jg
xchg
mov
fdivrl
and
movsb
pop
cwtl
clc
pop
test
lea
stos
jb
and
fst
daa
imul
imul
int
mov
lods
ret
cs
int
inc
lods
pop
js
inc
xchg
mov
jmp
add
loope,pn
push
out
pop
jns
ret
imul
popf
lcall
adc
jns
ds
ret
and
imul
adc
fisubl
or
outsl
dec
or
aam
test
lock
std
cmp
jle
fistpll
fiaddl
cwtl
and
add
add
add
add
and
lock
mov
xor
ret
scas
inc
outsb
add
out
leave
xchg
sarl
pop
push
inc
popf
loope
mov
sti
sbb
mov
out
fst
lds
jnp
push
or
push
xchg
xor
add
jle
movsl
jnp
sub
xor
lcall
stos
aad
lret
in
inc
add
ret
imulb
jne
pushf
loopne
gs
sbb
or
adc
fisubl
loop
pushf
mov
push
push
mov
aaa
push
jne
pop
stos
and
xchg
mov
in
fs
scas
xchg
adc
and
and
loop
jmp
aad
cmp
shrb
repz
ss
fdivl
adc
aas
data16
mov
dec
scas
push
mov
stos
push
scas
xchg
cmp
fidivrl
push
das
das
mov
pop
lahf
sarl
sbb
ficoms
pop
xchg
pop
lds
xlat
ficompl
inc
sti
call
add
add
add
popl
in
xor
and
mov
pop
int
lods
jg
jecxz
sbb
adc
insb
xlat
sbb
in
into
je
iret
fwait
ret
pop
mov
out
or
mov
icebp
call
xchg
ljmp
sbb
adc
sbb
inc
or
xchg
repz
cmp
sub
adc
scas
std
mov
dec
ret
mov
or
movsb
icebp
and
idiv
stos
mov
cmp
pop
add
cmp
in
dec
mov
in
fimuls
sbb
pop
push
jge
cli
pop
inc
ffree
sbb
leave
sub
ficompl
xlat
or
aaa
jae
mov
addr16
repnz
les
xchg
insb
inc
repz
inc
imulb
nop
cltd
jmp
push
jb
push
adc
or
mov
loopne
ja
pop
cmpsb
dec
jmp
dec
scas
iret
outsb
jmp
push
test
cld
dec
arpl
add
add
add
std
test
in
jg
dec
sub
pop
mov
iret
pop
rorb
loopne
popf
or
inc
mov
lahf
cwtl
hlt
pop
and
out
or
cmp
xchg
or
push
mov
mov
dec
and
in
push
js
push
setns
out
mov
and
bound
nop
test
add
xchg
mov
jns
fidivl
pop
popa
hlt
xchg
cmp
shlb
test
inc
fwait
pop
mov
pop
or
sbb
push
imul
cmp
xchg
loopne
mov
sub
push
mov
mov
inc
cmp
inc
or
stos
push
jmp
ret
xchg
cli
into
fmuls
pop
popa
xchg
add
gs
mov
inc
les
negl
lahf
inc
mov
xor
adcl
stos
add
ss
mov
dec
lret
sbb
std
sbb
stc
cld
or
call
sbb
add
add
add
test
sahf
inc
xchg
insb
xor
cmpb
add
int
add
and
inc
js
repnz
es
lds
push
int
fs
sub
mov
jns
das
lcall
jae
gs
and
xor
fwait
jecxz
mov
test
adc
lret
push
mov
les
mov
cmp
fbstp
into
and
adc
dec
dec
add
in
ja
add
call
mov
inc
or
lret
xor
push
pop
repz
stc
xchg
je
or
or
mov
add
mov
lcall
mov
mov
mov
fldcw
xor
out
sub
loop
add
addr16
push
in
sbb
pop
inc
jae
fidivs
sbb
out
test
negl
adc
pop
xchg
cmpsb
fadds
pop
clc
sbb
add
add
add
enter
aaa
xor
and
enter
aam
bswap
mov
mov
push
and
cltd
inc
mov
or
push
enter
iret
jnp
jo
test
arpl
adc
xchg
cmp
mov
fwait
roll
imul
push
sub
dec
ljmp
int3
shrl
mov
ja
push
cmp
gs
xchg
imul
ret
add
mov
sub
xor
mov
jns
sbb
cld
fcmovnb
xchg
push
cmp
mov
inc
sub
scas
and
ja
xor
dec
sahf
movsb
xlat
sti
pop
int
pusha
inc
pushf
pop
in
les
sbb
fdivr
and
cmp
push
sub
adc
add
lret
cmc
repnz
subb
xor
popa
sub
add
mov
dec
pushl
je
mov
add
add
add
mov
ds
jle
push
test
cmpsb
xor
add
inc
cmp
lea
add
mov
std
xchg
mov
stos
insb
andb
mov
shll
jge
pop
add
imul
mov
push
fldl
into
stc
mov
test
repnz
shl
ficoml
pop
or
push
out
lds
push
enter
test
push
test
xchg
or
outsb
clc
push
pop
adc
adc
mov
xchg
push
out
dec
ret
mov
aas
sbb
mov
addr16
lcall
xor
xchg
imul
adc
dec
cli
clc
add
inc
xor
fadd
pop
inc
loopne
dec
repz
movsl
lock
call
sbb
xchg
pop
notl
je
jne
cmp
xchg
outsb
mov
enter
testb
mov
add
add
inc
ja
pop
aas
dec
push
sbb
add
add
add
xchg
or
cs
mov
lods
mov
in
pop
pop
push
cmc
jmp
mov
rep
sub
xchg
cmpsl
inc
add
lock
and
nop
pop
leave
ss
mov
dec
xchg
jmp
fwait
add
adc
insl
and
add
imul
js
mov
addr16
cmp
xchg
xchg
mov
mov
outsb
js
sti
test
sti
into
rorl
test
testb
pop
or
loop
das
cmpsb
jp
lods
jg
loopne
sub
or
hlt
or
jmp
xchg
push
aaa
pop
inc
push
cmpsl
inc
faddl
divl
or
jp
mov
movsb
mov
xor
stos
adc
adc
push
test
pop
add
inc
lcall
sub
pop
and
scas
cmp
add
adc
cmp
repz
jae
ja
div
mov
cld
sbb
add
mov
push
ljmp
pop
into
dec
cmp
pop
in
mov
xor
sub
insb
add
in
sub
lock
shlb
fwait
mov
sarl
das
lds
inc
mov
pop
hlt
push
inc
mov
jb
xchg
adc
das
bound
out
lret
mov
and
inc
cmp
ljmp
pushf
push
xorl
dec
sbb
sarl
sti
outsb
ss
out
movsl
orb
int3
gs
cmp
inc
addr16
inc
sbb
insb
jl
xor
loop
xchg
push
sub
icebp
mov
pop
jg
mov
das
test
inc
scas
or
cltd
mov
sub
fsubr
arpl
add
nop
mov
xor
gs
or
scas
or
add
sub
ja
stc
mov
inc
jmp
dec
outsb
and
sti
adc
xor
cli
std
jg
push
pushf
dec
bound
add
add
add
shlb
and
dec
and
cmp
cmpsl
cs
loopne
push
cmpsb
cmpsb
jae
ljmp
xchg
daa
sbb
mov
ja
ret
imul
shll
fnsave
fildll
jle
fstpt
cwtl
adc
inc
mov
jl
out
or
mov
push
sbb
scas
push
or
mov
aad
dec
cmp
dec
lret
in
das
adc
xor
cmpsl
imulb
clc
add
xchg
pop
push
cmpl
fs
jno
sub
scas
daa
cmpsb
fwait
pop
subb
mov
push
fucomi
ss
add
xor
rcr
xor
mov
cmp
ljmp
loop
fcmovu
xor
nop
in
in
mov
pop
test
xor
adc
pop
lea
shrl
pop
insb
loop
movsb
in
sbb
mov
testl
incl
sbb
mov
push
stos
addr16
add
add
add
cmp
jge
lcall
ret
pop
mov
xor
iret
or
cmpsb
rol
xor
or
jecxz
xchg
xchg
mov
lret
pop
cld
xor
dec
jns
add
adc
xchg
imul
cmp
sbb
jae
or
push
fsubrl
mov
fildl
jbe
stos
mov
and
mov
stos
or
dec
ror
scas
fcomps
cmc
push
sar
loop
pslld
push
xchg
push
xor
aad
push
xchg
inc
xchg
pop
fmuls
pusha
inc
adc
outsb
lock
sarb
sti
stos
push
shl
sbb
pop
in
scas
dec
out
or
jno
inc
mov
cmc
ret
xchg
jmp
jns
inc
cli
xor
ja
dec
or
mov
sbbl
insl
pop
mov
mov
inc
std
inc
sub
in
jno
dec
mov
push
imul
cmp
sub
sub
stc
push
in
mov
or
testb
add
push
es
jg
pop
or
xor
lods
cltd
and
add
add
add
cmp
lcall
mov
cmp
scas
mov
push
in
inc
fistps
pop
notl
xlat
mov
xchg
add
adc
cmp
and
xchg
cld
jns
mov
and
cltd
pop
pusha
mov
push
dec
inc
dec
push
in
cmp
jbe
test
or
call
sub
jmp
pop
movsl
lods
mov
scas
idiv
insl
movsb
lahf
imul
mov
mov
pop
pushf
jp
push
adc
fcmovne
push
push
shl
sarb
push
out
mov
inc
cmpsl
outsl
xor
lret
loope
inc
call
mov
xchg
mov
or
iret
negl
mov
sbb
mov
inc
push
sub
out
xor
pop
mov
add
pop
inc
es
fcomi
mov
fcmovb
xchg
xor
ret
loop
adc
mov
jg
out
data16
sub
add
push
clc
or
dec
push
cmp
and
add
add
add
pop
sbb
xor
leave
dec
pop
out
dec
mov
and
mov
pop
cmp
iret
sbb
add
or
mov
cmp
fwait
scas
push
jge
and
fidivl
mov
xchg
push
jge
mov
rcrl
bound
add
jl
inc
lds
cmpsl
sub
fwait
mov
jne,pt
inc
aaa
pop
sbb
pop
push
jbe
fidivrs
sbb
xchg
outsb
and
rcrb
sbb
mov
dec
shr
push
pop
mov
add
int3
xchg
pusha
fcmovnu
push
and
dec
jg
inc
cmpb
jl
cmpsl
dec
cmp
push
fs
push
orb
inc
les
data16
lods
add
push
popa
xchg
push
mov
cmp
pop
push
sahf
cld
add
lahf
mov
mov
pop
fdivl
dec
repz
cmpsb
pop
cmp
push
das
xlat
and
add
stc
lods
xor
mov
pop
mov
add
add
test
fidivrl
xor
sub
rolb
jbe
pop
pusha
xor
inc
sub
daa
push
sbb
paddq
jbe
je
or
mov
and
enter
lret
scas
mov
push
mov
jmpw
std
dec
ds
jmp
add
ror
fwait
pop
or
jbe
xor
cmp
cli
and
push
scas
cld
fs
pop
cs
sub
inc
cs
ss
aaa
xor
rcll
jp
pop
xchg
scas
movsb
shl
fidivl
mov
sbb
lods
and
movsb
jne
mov
idiv
dec
push
loope
xor
stos
push
sub
ret
adc
pop
jbe
arpl
dec
dec
or
push
lods
cli
mov
or
int3
push
incl
aaa
into
arpl
xor
or
pop
pcmpeqw
xor
add
adc
fsubl
inc
sub
fadds
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
mov
xchg
jp
sub
test
mov
mov
outsb
fidivrs
cmp
fwait
imul
arpl
sub
lock
add
mov
ret
push
or
mov
outsl
imul
mov
fwait
mov
rclb
push
mov
pop
test
mov
jno
add
mov
ret
inc
ficoml
out
cmp
and
inc
dec
inc
test
aas
or
push
lahf
mov
mov
inc
cmpsl
jecxz
and
jg
outsl
or
les
or
xchg
sub
es
cmpsb
or
cmc
jg
sub
cli
int3
sbb
insb
mov
adcb
and
mov
add
int
lea
pop
and
imul
push
lahf
subb
push
sub
mov
out
stos
jge
or
mov
repnz
add
add
add
mov
mov
lret
xor
int3
xor
sub
int3
in
divl
dec
or
fs
lahf
inc
push
xor
xor
push
jg
pop
or
dec
insl
xor
and
vzeroupper
ret
mov
mov
cltd
xchg
fnstcw
lcall
pop
ja
mov
mov
add
sbb
mov
faddl
or
inc
sbb
in
outsb
stos
sbb
and
push
adc
add
lea
sahf
mov
ljmp
pop
movsl
mov
adc
cmpsb
pop
rcll
sub
das
mov
cli
cmp
lahf
or
mov
mov
mov
popf
mov
sar
cli
fcmovne
into
cltd
ret
test
adc
aad
int
into
call
out
lret
lods
testl
ljmp
jbe
movsl
insl
inc
fstps
lcall
dec
or
out
xchg
iret
push
aas
mov
and
add
cli
sub
leave
ficoms
into
out
fstps
rcl
data16
mov
push
ss
pop
enter
fwait
rclb
or
mov
and
or
jmp
dec
dec
fdivrs
out
inc
repnz
push
ljmp
scas
loop
aad
mov
cmp
scas
dec
inc
rcrb
add
sbb
mov
test
inc
fidivs
loope
jnp
mov
mov
out
imul
cwtl
cmpsl
test
pop
dec
xchg
mov
jle
sahf
aam
fiaddl
test
scas
nop
out
push
fwait
sbb
daa
sub
in
in
inc
mov
mov
pop
mov
mov
adc
xor
xchg
mov
push
insl
xchg
mov
fbld
pop
imul
or
xchg
push
mov
adc
loope
addr16
stc
jp
outsl
es
xor
aam
add
cmp
out
loope
jns
inc
dec
ljmp
add
add
loop
mov
lahf
inc
cmp
adc
and
add
sahf
stos
xor
lods
push
and
ret
cmp
call
inc
jo
jmp
inc
cmp
arpl
nop
cmpb
push
sbbl
inc
fidivrl
add
push
punpckhbw
cmp
pushl
mov
imul
test
inc
hlt
stos
repz
cmp
test
stc
shl
inc
sbb
dec
dec
push
or
dec
test
lret
test
adc
xchg
in
out
push
sub
mov
ret
popf
push
inc
push
hlt
cmp
push
pop
mov
add
mov
lock
faddp
dec
adc
inc
lods
jmp
rorb
rcrl
pop
add
fsubl
mov
cmpsb
jne
cltd
inc
push
int3
mov
cltd
mov
cwtl
lock
mov
and
sbbb
jle
test
sbb
sti
push
mov
cmp
push
mov
add
add
test
pop
mov
push
adc
jmp
mov
call
and
popf
push
mov
or
mov
cmp
mov
xchg
bound
je
adc
push
jle
or
or
bound
call
cltd
cmpps
in
mov
enter
pop
sbb
inc
adc
test
das
push
sahf
cld
in
push
movsb
das
jle
mov
or
cmp
aam
sti
aas
fsubs
jmp
xchg
ret
je
mov
sub
xor
mull
test
shlb
and
inc
mov
mov
xor
in
out
xlat
bound
jbe
pop
cmc
push
mov
lcall
mov
dec
inc
or
cmpsl
xor
out
test
adc
xlat
outsb
lods
js
inc
test
ret
xchg
sub
add
add
add
jg
cld
ret
add
and
add
add
add
xor
inc
popf
mov
jecxz
inc
push
les
dec
je
xor
sub
mov
sub
inc
les
sbb
inc
and
xchg
sbb
addr16
cmp
mov
repz
les
test
movsb
mov
inc
jecxz
push
es
and
loope
rcll
mov
mov
add
in
cmp
inc
sti
aam
stos
shll
movsl
movsl
lcall
adc
outsl
fs
jmp
sbb
mov
adc
jl
mov
or
push
imul
icebp
std
ja
scas
nop
jo
pushf
cmc
xchg
xchg
or
xchg
test
das
mov
jge
push
adcb
fists
popa
inc
das
mov
sarl
pushf
aaa
outsl
andl
call
mov
dec
pushf
mov
in
add
mov
lds
add
add
mov
iret
mov
aam
imul
add
add
adc
pop
sub
mov
outsl
adc
xlat
add
test
test
ljmp
mov
cmp
sbb
mov
sub
pop
pop
or
js
addr16
lods
das
push
sub
fstps
sbb
pop
push
rolb
rcll
sbb
test
pushf
fwait
mov
mov
notb
shr
pop
dec
dec
incl
mov
push
int3
adcb
roll
fldl
cli
dec
sub
sahf
jno
leave
call
jecxz
pop
mov
add
mov
mov
dec
and
pop
stc
test
and
xchg
jno
add
adc
popa
lock
je
lods
sbb
mov
add
lods
xor
sar
push
fsts
outsl
mov
fldt
jmp
in
repnz
jge
add
add
mov
jg
arpl
sbb
jge
sub
add
add
add
dec
xor
stc
cs
xchg
mov
pop
dec
adc
adc
rcll
or
lcall
mov
ja
out
inc
dec
lret
test
push
cwtl
ja
xor
dec
stos
xorb
xchg
and
scas
jae
test
mov
imul
jg
xchg
jmp
inc
insb
dec
and
inc
popf
fld
test
jae
das
push
stos
mov
xchg
mov
fcom
push
das
jmp
lahf
lcall
cltd
jae
mov
lods
dec
jo
fisubrs
rorl
dec
sbb
add
add
mov
iret
outsb
ret
enter
iret
inc
add
add
cmp
repnz
jb
rclb
dec
pop
stc
xor
fwait
sahf
popf
jl
push
xlat
pop
pop
mov
lahf
ficomps
mov
popa
push
add
into
sahf
lea
jo
jns
jp
leave
daa
std
mov
adc
stos
ja
shlb
cli
clc
cli
clc
sarb
sti
mov
cmp
sub
add
add
add
sbb
pop
cli
inc
out
data16
fidivrl
es
pop
arpl
pop
std
mov
addb
inc
and
jo
dec
pop
add
inc
leave
mov
cmp
mov
lahf
sbbb
outsl
push
mov
cwtl
iret
jmp
sbb
lock
or
mov
in
popa
pop
xor
add
and
inc
mov
or
sub
jg
enter
sub
sti
lret
and
sbb
mov
sbb
inc
adc
add
js
or
into
push
push
subb
pusha
xlat
sbb
mov
adc
clc
add
sbb
test
hlt
xchg
fdivrs
jne
in
fwait
sbb
and
push
cmpsl
aas
xor
mov
push
sbb
int3
push
adc
es
mov
jle
push
cmpsl
scas
sbb
mov
mov
data16
pop
test
push
inc
mov
out
add
add
jnp
out
mov
and
addr16
add
add
add
les
cmp
adc
push
outsl
push
mov
ficoms
sub
ss
repnz
mov
mov
xor
jbe
aam
test
andl
sub
push
adc
sahf
mov
or
js
sub
hlt
leave
mov
cmpsl
insb
cmpb
lea
ljmp
xor
addb
jge
lods
mov
stos
scas
stc
lret
jb
sub
ljmp
pop
sahf
stc
mov
shrl
hlt
cmc
cmp
out
cmpsb
addr16
hlt
hlt
cwtl
orl
insb
xchg
nop
lret
loope
iret
outsl
mov
movsl
xor
jl
or
jle
xchg
sarb
sarl
mov
inc
stos
test
fdivr
mov
mov
outsb
inc
lahf
orb
out
js
add
inc
jb
add
add
es
data16
insb
daa
mov
testl
add
adcl
imul
fwait
sahf
xchg
aaa
les
nop
mov
mov
imulb
cmp
ja
ret
or
leave
aam
pop
xchg
sbb
ljmp
aam
cmp
inc
test
imul
daa
or
imul
stc
fldl
pop
and
xchg
leave
pop
mov
test
pop
cmc
xor
sub
dec
add
cmp
mov
jle
pop
xchg
push
add
xchg
and
inc
pop
pop
adc
in
dec
mov
mov
bound
pushf
inc
jl
dec
test
lahf
jg
pop
ret
push
out
pop
dec
test
test
shl
sub
or
mov
icebp
and
fadd
andb
xorb
clc
sbb
xchg
add
add
dec
mov
imul
push
ljmp
add
sub
out
sbb
jecxz
adc
out
cmp
jge
repz
mov
in
int
int3
dec
incb
xchg
in
daa
imul
push
je
inc
mov
pop
rorl
sti
jmp
mov
xchg
sbb
pop
lock
push
sub
repnz
mov
js
ljmp
push
stos
pusha
pop
int
scas
call
inc
mov
sahf
push
mov
jns
int3
cmc
gs
or
push
daa
mov
mov
fwait
mov
jo
push
ds
adc
jle
dec
inc
sub
jns
repnz
xchg
cmpsl
cmpl
cmp
sahf
scas
daa
push
jno
jge
dec
xor
mov
int3
ret
scas
push
adc
mov
push
shll
push
out
push
js
popa
scas
xchg
loope
test
pushf
cmp
div
inc
dec
shr
daa
repz
push
sti
cmpsl
enter
or
add
das
add
add
add
call
sub
sub
xchg
mov
dec
or
push
cmp
mov
out
push
adc
or
lcall
push
icebp
aaa
mov
das
jmp
lahf
push
bound
or
add
in
addr16
insl
subb
pop
pop
mov
stos
mov
push
jg
inc
aam
inc
push
iret
decb
adc
mov
dec
notb
xchg
into
ljmp
cmc
add
push
cmp
rorb
push
add
jge
test
sets
or
mov
pop
aad
xchg
mov
adc
mov
adc
subb
or
push
mov
adcb
adc
sarb
aam
out
dec
xchg
std
jge
dec
fcompl
stos
push
pop
adcb
cmp
and
test
jnp
frstor
cmp
dec
mov
push
and
std
mov
dec
push
dec
mov
or
add
add
add
xchg
sbb
cmpsl
pop
pop
ds
sbb
stos
faddl
inc
cwtl
and
enter
imul
xlat
lahf
jns
cmp
adc
pusha
mov
inc
push
dec
notb
sti
ljmp
jge
push
stos
lods
nop
hlt
jg
popa
aas
sbb
jo
imul
push
mov
ds
push
xor
mov
nop
aad
xchg
mov
pop
ljmp
pop
jg
daa
jp
push
jge
pop
cs
mov
cmp
push
outsb
adc
gs
or
jo
adc
cld
ja
insl
shlb
mov
sbb
fmull
dec
popa
aas
repz
aas
push
loopne
sbb
imul
ss
les
xchg
pop
push
stos
push
push
imul
jge
aaa
cmpsl
dec
cld
push
scas
adc
add
add
and
jecxz
and
lcall
add
add
add
lea
decb
adc
add
imul
mov
inc
pop
ljmp
xor
mov
jecxz
inc
xchg
repz
add
xlat
in
lret
scas
xor
in
test
dec
push
in
mov
add
pop
xor
push
or
rcrb
sub
push
mov
lret
js
push
xchg
push
movsl
jge
cmpsb
dec
inc
in
fwait
push
cmp
out
lahf
add
sub
mov
mov
sahf
decb
sti
mov
xor
push
mov
fwait
xor
nop
repnz
jnp
ret
add
lret
and
sbb
jl
fistpll
and
xchg
xor
nop
sub
push
cmpb
stc
sbb
shrb
xchg
add
or
insb
sahf
cs
pop
inc
pop
jns
repz
mov
add
add
xchg
ficomps
cmp
lahf
adc
in
add
add
add
add
stos
or
jnp
test
jp
push
xchg
repnz
mov
add
adc
inc
lret
push
out
insb
mov
dec
dec
or
jp
lcall
pop
push
xlat
icebp
xchg
shlb
cmp
mov
test
bound
jmp
shlb
inc
iret
sahf
dec
mov
push
xchg
and
push
ret
out
xchg
fldt
loop
loope
shlb
xor
xchg
mov
rorb
cmpl
mov
sbbl
or
cs
test
push
or
xor
es
loop
mov
call
xor
cmp
xchg
repz
push
insl
inc
xor
dec
out
sub
push
rcrb
lcall
adc
and
and
movsl
mov
addr16
shlb
sub
dec
insl
jmp
rorb
dec
cmp
add
lods
xor
mov
cmp
or
sbb
add
add
fnstsw
sarb
xlat
and
mov
push
jae
cmp
jnp
ret
xor
ret
imul
lods
insl
push
pop
jno
mov
pop
insl
loope
sbb
insb
out
dec
sbb
lret
jo
xchg
push
xlat
add
outsb
mov
mov
js
enter
enter
mov
push
push
xor
daa
mov
add
jmp
cld
inc
dec
test
sub
insl
gs
mov
repz
adc
out
xchg
push
ds
outsb
movsl
data16
xchg
rcr
adc
hlt
pop
cmp
xor
inc
ja
xor
fldenv
out
mov
rol
int
mov
stos
mov
jl
xchg
call
xor
test
push
movsb
leave
mov
adc
jp
jmp
xchg
fcmovnbe
andb
sbbl
imul
test
sahf
lea
add
add
lret
mov
or
test
sub
add
add
push
je,pt
mov
rcl
fmuls
movsb
pop
inc
andl
mov
test
sahf
pop
rclb
cmp
pop
out
dec
and
or
iret
jmp
add
jo
loopne
jle
in
push
adc
imul
mov
xchg
sahf
nop
movsl
clc
pop
inc
lcall
ja
cmpsl
ljmp
cli
push
inc
sub
aaa
enter
cld
or
mov
fwait
stos
xchg
movsl
lret
mov
in
push
shl
mov
cmpb
mov
xchg
arpl
mov
pop
inc
addr16
mov
out
shlb
repz
dec
lret
push
popf
jecxz
xchg
mov
sub
outsl
dec
sbb
jge
cwtl
pop
mov
dec
outsl
jecxz
add
jo
inc
gs
cmp
in
sub
push
xlat
xor
sbb
mov
or
mov
add
add
sti
pop
jge
neg
hlt
add
inc
addr16
add
lock
sub
mov
sbbb
jns
xchg
or
pop
std
sub
pop
and
jmp
out
add
daa
enter
mov
faddp
mov
dec
ret
inc
rol
mov
orb
mov
add
scas
pop
stos
xchg
in
rolb
orl
adc
mov
pop
jnp
int
rcll
jge
jo
and
inc
cld
imul
add
sbb
ja
subl
std
idivl
rcrb
lds
psubw
inc
cwtl
xor
mov
fmull
cmc
add
xchg
pop
xor
in
das
stc
xchg
mov
push
mov
icebp
mov
popa
mov
sbb
lret
in
push
xchg
cli
mov
in
mov
js
jae
dec
dec
mov
xor
sub
pusha
cltd
fsub
std
in
popf
in
stc
jmp
mov
add
add
add
imul
jmp
mov
and
push
ljmp
cmp
loopne
push
xor
divb
leave
pop
push
ficoms
xchg
leave
or
mov
test
mov
cmp
js
rolb
icebp
jbe
ret
or
cld
adc
setge
jno
mov
inc
pusha
mov
rcrb
pop
push
hlt
mov
popf
out
daa
call
in
movsb
dec
clc
adc
loopne
mov
adc
mov
push
out
or
or
nop
cli
sbb
lcall
sbb
adc
je
aas
fists
loope
pop
xor
push
mov
dec
addb
pop
fdivrp
hlt
sbb
ss
mov
shl
xchg
enter
ss
mov
cmp
stos
lcall
mulb
daa
sti
mov
shll
pop
in
in
cld
call
add
jp
jnp
sti
xchg
jle
jp
lods
jnp
cmc
aam
aaa
add
add
add
outsb
mov
xor
fnstsw
out
mov
lock
icebp
imul
inc
subl
inc
push
inc
loope
push
insl
mov
jno
lock
aas
pop
jle
xchg
mov
inc
dec
pop
adc
xchg
lcall
push
lahf
mov
xchg
push
in
or
add
ficompl
cmc
cmc
outsl
je
imul
test
jp
mov
mov
pusha
les
cld
jb
cmpsl
xchg
pop
lods
xchg
fstl
inc
mov
addr16
aam
cmp
jp
mov
sahf
push
pop
sub
test
pop
insb
dec
lcall
inc
jmp
push
lea
lcall
test
dec
enter
rorl
xchg
sub
mov
or
push
ret
stc
in
xlat
stos
push
call
repz
push
pop
scas
iret
or
jmp
mov
push
sti
decb
mov
cwtl
cmp
add
add
add
adc
cmpsb
ss
mov
push
scas
dec
xchg
xor
sbb
inc
cmp
in
lock
xchg
mov
cmpb
inc
leave
es
test
sbb
out
and
aas
lods
fldenv
push
icebp
lcall
int
jecxz
or
sahf
jne
mov
loop
jl
enter
neg
rorl
jo
movsl
ss
sub
push
push
adc
jmp
ror
xchg
outsl
mov
aaa
add
adc
xchg
or
mov
ljmp
adc
enter
rclb
inc
fwait
jle
popa
lahf
xchg
repz
iret
testl
push
xchg
cmp
in
xor
cltd
dec
sub
out
xor
mov
jge
adc
cmpsl
ljmp
int3
add
lds
mov
out
sub
lea
sub
sbb
sub
insl
jae
push
ret
cmp
xor
hlt
pop
fimuls
cmp
add
add
add
sbb
scas
dec
push
cltd
adc
ja
mov
outsl
sbb
in
dec
cmp
inc
mov
push
push
jb
xor
push
push
dec
in
cmp
out
dec
in
or
and
dec
sub
xor
cmp
data16
lods
pop
cld
or
mov
cli
or
push
iret
jns
mov
inc
push
add
xlat
jnp
pop
ret
imul
pop
push
jle
push
repz
cmp
shll
aaa
lds
int3
ficoml
jae
push
shrl
leave
add
cmp
sub
cmp
daa
cmpsl
icebp
and
cmp
in
cmp
cmp
add
add
pushf
icebp
sbb
icebp
aaa
outsl
das
int
je
jl
ret
sub
clc
pop
fisttps
sub
xchg
mov
mov
add
add
cmp
jge
stos
lea
shrb
mov
cmp
add
add
add
push
out
outsl
lock
loopne
sub
movsl
divl
and
repnz
idiv
mov
jle
cmpb
and
adc
inc
xor
cmp
xchg
pop
into
insb
or
notb
and
add
fsub
leave
jp
mov
mov
sbb
pop
popa
std
dec
mov
inc
mov
test
aaa
fadds
inc
ds
xchg
fwait
inc
xchg
aas
mov
int
inc
or
jns
xor
cli
sarb
add
push
mov
push
test
addb
fwait
jge
lods
jne
jno
xchg
xchg
adc
or
data16
xchg
ja
sub
add
xor
cmpsl
sbb
mov
mov
cs
jbe
mov
mov
jecxz
and
dec
in
cli
mov
jne
add
add
rclb
nop
lcall
cmp
add
add
add
mov
mov
orb
stos
fidivl
and
and
xchg
jle
xchg
xlat
ljmp
jge
outsl
add
js
popa
adc
xchg
and
cwtl
mov
mov
inc
mov
adc
adc
insb
xor
mov
sbb
pop
arpl
ffreep
ds
dec
sti
out
test
push
shlb
fld
cmc
pop
ja
cmc
imul
aad
shll
adc
stc
sti
cld
imul
aam
pop
add
adc
inc
icebp
jmp
pop
daa
js
repz
divl
add
pop
mov
push
aaa
sub
test
int3
rolb
cmp
nop
push
adc
mov
daa
push
mov
shl
push
or
les
jmp
xor
fimull
ljmp
aam
add
cmp
xchg
std
xor
loopne
inc
ret
adc
stos
xchg
mov
mov
add
add
jbe
idivl
or
outsb
sub
add
add
fcoml
outsl
pop
scas
jns
push
mov
lret
mov
call
cmp
fldl
or
lods
sahf
les
push
inc
cmp
cmp
frstor
lods
scas
jnp
in
pushf
pop
jae
jge
sbb
shl
psubusb
mov
jnp
xchg
inc
mov
aam
stos
mov
add
add
mov
popa
push
gs
push
adc
icebp
mov
pop
lds
xor
sti
imul
mov
sbb
add
inc
adcb
push
push
sti
dec
hlt
rcl
push
sbb
inc
mov
mov
mov
dec
das
rcr
jbe
fldl
push
jb
mov
int3
bound
or
cmc
test
shl
lock
in
cmp
shrl
into
cli
pop
add
popf
add
int
cwtl
pop
push
mov
lods
movsl
mov
outsb
or
and
outsb
sub
stos
fs
jmp
leave
aas
inc
fwait
inc
push
addr16
add
mov
leave
add
jo
xchg
mov
ds
cmp
inc
daa
mov
fbstp
jge,pn
pop
jno
jnp
pop
xchg
addb
stos
jbe
dec
inc
jmp
sbbb
imul
mov
pop
sub
mov
cmpsb
sbb
jmp
pop
pop
cmp
push
sbb
les
push
cmp
mov
and
push
nop
cld
push
insl
ljmp
imul
int
mov
mov
cmp
push
popf
sbb
repz
imul
xchg
inc
popf
ljmp
inc
inc
mov
hlt
jmp
cld
cmpl
fsubrs
mov
jecxz
pop
ss
jbe
out
and
or
inc
jge
cmp
push
sarl
or
mov
adc
pop
mov
lret
test
push
out
popf
mov
jne
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
add
add
add
les
mov
pop
sbbl
in
add
sbb
inc
imul
inc
cld
jae
sbb
ret
popf
push
stos
inc
push
insl
je
push
mov
mov
add
jnp
in
xor
inc
mov
or
dec
enter
xchg
or
aas
scas
aaa
jl
cmp
rcrb
dec
xchg
lahf
nop
inc
sbb
repz
pop
inc
xchg
lahf
push
daa
stc
lock
sti
push
int
cmpb
ret
pop
sub
sub
push
test
test
add
mov
pop
pushl
cmp
rol
pop
jne
vmulps
insb
hlt
aad
or
lret
mov
adc
add
adc
jmp
mov
push
fsubrs
pushf
outsl
push
or
cmp
sbb
sbb
mov
arpl
xchg
push
mov
mov
jge
xlat
imul
sbbb
pop
rorl
mov
stos
aad
icebp
cwtl
call
add
cmp
movsb
push
sbb
push
addr16
add
add
add
push
fsubr
aas
pop
jns
dec
daa
lea
jg
xor
cmc
stos
les
jg
pop
stc
aam
push
jne
cmp
sbb
stos
incl
out
xchg
mov
test
out
je
fisubl
lcall
adc
rcrl
in
xor
outsb
xchg
ja
and
dec
ljmp
push
pushf
pop
ss
outsl
or
xchg
int
popf
shr
inc
insb
ret
sbb
adc
push
add
xor
ja
cmp
imul
pop
pop
pop
sbb
lret
dec
cmp
out
aam
mov
notb
cmp
pusha
cltd
xchg
cmp
and
mov
dec
mov
cmp
xchg
test
mov
xchg
push
cmpsl
scas
push
cmpl
jns
dec
sbb
aaa
je
jge
inc
jae
or
popf
push
std
ds
mov
popf
pop
dec
in
outsl
lret
mov
out
jmp
popl
addr16
add
add
add
fst
loope
jno
fxch
dec
shlb
jp
movsb
push
cmp
addb
mov
or
shll
jmp
mov
xlat
jns
call
xchg
or
sbb
dec
inc
mov
xor
adc
andb
mov
cwtl
ljmp
xchg
je
jle
pop
lds
mov
mov
test
mov
popa
jo
cmp
pop
divb
pop
gs
sub
leave
ss
mov
dec
out
mov
in
xchg
mov
jl
insb
inc
js
mov
or
cli
pusha
sub
mulb
and
in
mov
push
xorb
mov
mov
push
js
arpl
insb
sbb
mov
add
ljmp
sub
pop
xor
add
stos
imul
jnp
and
adc
shl
mov
add
add
repz
cmp
lods
repz
mov
sub
jl
inc
add
add
add
mov
cmp
jmp
test
fdivrl
jno
xchg
ds
xor
jl
fisubrs
fstp
fsubrl
jp
cmpsl
mov
mov
pop
repnz
test
xchg
pop
dec
fidivrl
daa
ljmp
lods
cmp
pushf
aad
mov
and
jl
jbe
fisttpll
xchg
das
jae
movsb
daa
sbb
loopne
popa
aad
sbbl
lods
mov
mov
cmc
mov
push
jo
mov
dec
add
filds
scas
pop
xchg
rclb
sub
cltd
cmp
jp
mov
push
pop
jns
xchg
mov
inc
push
xchg
cmp
jle
test
jp
adc
push
cmp
push
mov
add
dec
call
shlb
aad
in
fadds
aad
mov
mov
jns
or
enter
push
leave
js
mov
mov
addr16
or
aas
daa
push
cld
push
std
jmp
dec
push
xor
addr16
add
add
add
fimuls
add
loope
mov
mov
jg
rclb
add
and
or
push
inc
aam
mov
dec
ja
and
repnz
xor
insb
divb
xchg
xchg
js
mov
adcb
dec
insl
int3
mov
es
loop
and
sbb
sub
out
jecxz
adc
pop
popa
add
dec
mov
std
push
das
jg
push
sar
dec
mov
ja
pop
cwtl
std
jo
or
test
mov
mov
pop
fdivrp
jno
or
and
xorl
outsl
gs
repz
fwait
sahf
mov
push
pop
cmp
push
sti
bound
inc
and
pop
testb
sub
insb
in
lock
mov
or
mov
jecxz
fsubl
loopne
loopne
roll
or
ljmp
add
dec
push
add
sbb
dec
push
out
aad
mov
and
add
add
shll
inc
stos
inc
test
in
mov
inc
sub
repz
xchg
notb
iret
popf
out
mov
lods
ret
fistps
lahf
mov
sbb
pop
scas
xorl
xchg
push
or
xor
cmp
cmpsl
xchg
fisttpl
or
mov
add
mov
imul
inc
mov
out
add
lret
add
and
call
xor
xor
sub
out
clc
push
pop
and
xchg
inc
rcr
and
scas
shrb
pop
xor
xor
icebp
push
call
dec
sub
add
fists
add
xor
xchg
cmpsl
jmp
rcll
fsubrs
loope
mov
ficomps
fs
pop
lods
adc
xchg
clc
scas
int3
xchg
sub
adc
lret
xchg
shr
jge
aaa
fbld
ja
popf
out
cld
stos
add
push
mov
or
xchg
mov
add
add
add
sbb
and
scas
or
pop
mov
push
sahf
xor
jmp
xor
xor
data16
neg
push
fdivp
xchg
sbb
repz
dec
cli
cwtl
and
and
pop
lods
test
in
push
inc
lock
int3
stos
push
lods
push
push
sub
js
mov
dec
mov
lds
scas
cmpsb
popa
subb
dec
add
fwait
aad
adc
adcb
xor
sbb
or
mov
imul
pushf
xor
fs
in
dec
lret
stos
mov
jns
rcr
dec
add
das
fdivrs
mov
push
mov
adc
adcb
repz
iret
sub
outsl
cs
dec
or
lcall
xor
jb
vmovupd
rolb
xchg
arpl
add
sub
sahf
mov
test
ds
inc
cmp
lahf
jnp
cmp
xchg
iret
dec
leave
sub
add
add
jg
xchg
orl
in
inc
add
add
add
push
ljmp
mov
cli
mov
scas
push
xor
or
xchg
notl
and
cmp
push
xor
xor
ja
cmp
inc
fsubl
adc
inc
xchg
fnstcw
dec
mov
sub
repnz
push
mov
xchg
ljmp
movsb
mov
mov
pop
dec
sub
sub
pop
mov
pop
cmpl
cmp
loope
lock
out
test
clc
pop
push
lds
fsubrp
ss
sub
test
sbb
fnstcw
add
sub
fsubs
sub
imul
stos
pop
ja
nop
mov
sbb
sub
in
ja
xchg
or
jae
mov
push
jmp
idiv
data16
sbb
xlat
loop
cmp
enter
mov
in
adc
jne
bswap
xor
xchg
and
dec
lret
jmp
imul
aaa
je
adc
add
add
add
fisubs
add
outsl
mov
in
repnz
fstpt
sub
test
jge
sub
popf
pop
adc
hlt
lds
mov
jno
mov
cmpsb
lods
imul
or
sbb
out
cmp
mov
je
xchg
fwait
pop
cmpsl
add
pop
and
add
sti
push
mov
xor
scas
jl
lock
cld
add
fwait
je
mov
pop
cmp
stos
dec
mov
add
mov
xchg
in
push
mov
inc
and
aaa
add
cmp
outsl
aas
imul
ret
jecxz
ret
outsb
xchg
rcr
repnz
inc
inc
daa
xor
sarl
outsl
push
les
aad
pop
arpl
pushf
xor
xchg
fxch
xorl
jl,pt
clc
inc
cmpsb
adc
repz
adc
loopne
mov
sub
jecxz
push
out
xchg
jno
nop
int3
cld
jb
enter
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
inc
add
add
add
imul
mov
test
in
leave
jae
scas
inc
test
cmp
mov
popf
sbb
dec
imul
jmp
dec
les
mov
push
fbld
lea
sub
adc
inc
sub
loope
enter
out
mov
stc
jmp
pushf
xor
sarb
test
neg
pop
roll
js
in
or
sbb
jp
adc
nop/reserved
adc
test
addr16
pop
stos
es
adc
rorb
lret
inc
data16
out
fdivrp
jmp
idivb
add
dec
and
cmpsb
mov
inc
popa
ss
jb
push
xlat
insb
lods
mov
cmp
xchg
lock
ret
push
subl
lret
icebp
clc
outsb
ficoml
jle
mov
jmp
add
sub
jns
xor
jg
shll
addr16
add
add
add
in
je
lods
int3
jo
jb
xor
pusha
xchg
pop
adc
orl
mov
ficomps
lods
sub
sbb
mov
imul
fbstp
pop
shlb
cmp
movsl
mov
dec
in
flds
addl
fidivrs
add
xlat
sub
add
sbb
imul
xchg
or
imul
nop
mov
test
pop
subl
xor
pop
scas
push
xor
dec
mov
pop
cld
je
jg
lret
push
xor
test
cld
fs
dec
sbb
adc
shlb
std
aaa
in
lods
enter
mov
cmp
movl
loopne
mov
inc
adc
sub
in
add
and
test
scas
outsl
sbb
in
outsb
push
out
sub
xor
pop
leave
js
ret
jg
decl
rol
push
ucomiss
addr16
add
add
add
call
cmp
lods
pop
xor
jns
add
dec
je
inc
sub
pusha
pop
xchg
push
xchg
cmpsb
movsb
add
push
loopne
xchg
jge
jnp
xlat
add
mov
out
movsb
mov
cld
repnz
lret
orl
testb
or
pop
in
dec
adc
or
mov
dec
stc
dec
push
and
dec
adc
mov
jge
xor
xchg
lcall
sub
jns
jg
aad
pop
lret
adc
jb
imul
movsl
xlat
push
xchg
adc
sti
leave
scas
shrb
mov
dec
inc
xor
nop
mov
lock
sbb
and
iret
or
or
jp
loope
inc
push
dec
pop
cwtl
js
push
sub
stos
imul
mov
icebp
or
inc
shlb
jbe
xlat
test
addr16
adc
sbb
cwtl
cmp
add
add
das
mov
out
aad
and
add
add
add
sub
leave
scas
int
shrl
xchg
daa
insl
mov
dec
mov
movsl
add
sbb
popl
inc
mov
mov
jno
pushf
std
fidivrl
and
mov
filds
mov
mov
mov
ljmp
cs
dec
movsb
popa
adc
sbb
fcmovnbe
adc
inc
lods
outsb
push
xchg
cmp
popf
aad
mov
mov
push
xchg
cmp
enter
int
data16
into
mov
mov
mov
inc
ret
mov
push
jb
nop
std
bound
addr16
cli
ja
pop
mov
loopne
xor
subl
scas
arpl
daa
add
jae
aam
push
mov
sub
cmp
mov
cmc
cmp
pop
lcall
call
shr
imul
lods
pop
es
add
hlt
gs
dec
adc
xor
add
add
sbb
jno
daa
lcall
ja
sub
out
aas
mov
inc
lret
repz
lods
add
cmp
into
xchg
push
test
jbe
adc
test
sub
rcrb
lret
data16
cmp
repnz
dec
xchg
sub
adc
adc
cmc
pop
fmuls
lock
dec
arpl
inc
and
or
cmp
mov
mov
in
dec
and
xchg
fcmovnb
xor
inc
mov
aas
pop
dec
inc
or
subb
add
insl
and
popa
rclb
pop
dec
adc
or
dec
gs
loop
xchg
or
mov
mov
xchg
add
pop
cld
jmp
rclb
out
dec
andb
pop
sub
pop
sub
movsb
icebp
in
mov
shll
jbe
in
jl
xchg
and
lods
in
xchg
enter
xor
sub
movsl
add
aas
gs
pop
repnz
dec
add
add
add
sub
mov
scas
arpl
dec
xchg
and
push
push
int3
pusha
movsb
and
arpl
add
xor
sbb
incb
mov
inc
adc
lret
faddp
outsb
into
aas
mov
inc
dec
xchg
mov
add
add
cmpl
xchg
enter
movsb
pushf
call
dec
dec
mov
jo
xor
int3
nop
mov
push
pop
iret
or
shll
push
mov
fimull
or
cli
ds
es
xchg
bound
dec
dec
in
push
sbb
and
out
sti
clc
and
dec
pop
pop
pop
outsb
or
fcmovnb
lret
mov
add
std
dec
test
call
xor
faddp
aam
pop
dec
fwait
mov
repz
mov
cmp
pop
daa
adc
cld
in
mov
shl
cmp
lods
fisttps
out
dec
data16
mov
out
fisttpll
lock
jg
addr16
add
add
add
mov
ret
loop
jnp
jmp
outsl
and
out
insb
sbb
dec
inc
mov
jp
dec
adcl
loope
pop
les
test
mov
push
and
scas
neg
movsl
push
mov
mov
out
pusha
add
xchg
or
mov
jne
movsl
mov
mov
bound
dec
xchg
adc
in
push
fs
call
jne
out
pop
xchg
inc
inc
jb
dec
es
cmp
std
lret
adc
hlt
scas
dec
cmpsl
xor
mov
mov
add
mov
mov
gs
subb
cmp
fisttpll
pop
push
add
mov
js
enter
imul
xlat
jg
into
cs
mov
lahf
aad
int3
into
nop
mov
ror
add
dec
ret
shlb
int3
jae
fildll
mov
ljmp
add
add
add
cwtl
push
in
cltd
sbb
cli
ljmp
or
cmp
push
add
mov
scas
sarl
hlt
ss
xchg
pop
repnz
jl
sub
push
popa
jle
ficompl
in
push
not
mov
js
add
fucomi
test
inc
sub
jg
sbb
push
psubq
bound
int3
dec
dec
adc
push
fisubrs
leave
clc
xchg
test
jle
lahf
xor
and
test
adc
movsl
cmp
lock
inc
sub
inc
ret
adc
sub
push
and
stc
xchg
sbb
pushf
add
negb
pop
mov
rcr
pop
sub
push
and
pop
sarb
ja
pop
mov
push
sbb
inc
ret
incl
aaa
sub
aas
xchg
cmp
pushf
out
cltd
insl
push
mov
std
and
push
sbb
jmpw
fnstcw
jo
sahf
jb
sbb
dec
add
add
add
push
sahf
popa
sbb
insb
in
cmp
in
js
xor
je
push
mov
push
sub
xor
arpl
gs
jge
fisttpl
xor
lret
lret
and
or
sub
pop
and
outsl
add
es
fisttpl
ja
int
loopne
out
adcl
mov
repnz
cmpsl
mov
mov
adc
inc
push
push
cmc
or
fs
loope
xchg
sti
pop
dec
inc
data16
dec
inc
ja
stc
mov
dec
push
stos
mov
inc
mov
or
fidivs
push
hlt
jl
xor
cmp
mov
cltd
mov
inc
fmull
cmc
inc
adc
jmp
sbb
fst
pop
inc
leave
fcmovbe
test
xlat
cld
enter
or
and
cwtl
lahf
in
pop
mov
cltd
mov
rcl
inc
xor
aad
add
popa
cmp
imul
out
mov
mov
test
push
addr16
add
add
add
xchg
xchg
enter
faddl
ljmp
call
xor
inc
pusha
std
fld
lret
mov
dec
jne
imul
ja
push
frstor
sbb
xor
jge
aaa
push
jae
fmul
push
add
cmpsl
in
sub
sub
cs
xchg
fs
ja
flds
mov
js
xchg
pop
out
jbe
mov
push
insb
ret
ret
pop
fwait
outsl
xchg
xor
mov
xchg
cs
outsl
test
das
cmp
push
ds
mov
jl
dec
adcb
leave
sub
add
les
iret
mov
lods
jmp
mov
jle
and
xor
xor
adc
popa
into
mov
pop
in
pop
mov
xor
jb
out
out
jb
jmp
pop
imul
cmp
mov
jns
add
data16
add
js
add
dec
stc
mov
ljmp
addr16
add
add
add
xchg
sbb
jns
divb
rol
adc
in
sub
out
pop
aas
cltd
dec
cwtl
out
push
inc
orl
test
pop
push
xor
mov
ds
int
ds
enter
cmp
inc
mov
add
mov
std
ja
jb
and
add
aaa
and
lock
repnz
push
into
roll
xchg
jge
clc
in
push
movl
dec
xor
mov
or
test
or
movsb
adc
cmp
jcxz
jmp
out
sbb
cld
repz
aam
fldcw
mov
xchg
mov
scas
js
jo
push
lds
lret
mov
addr16
sub
sbb
pop
aam
lea
xchg
adc
lcall
add
lcall
jecxz
sbb
xor
sbb
in
imul
icebp
xchg
cmp
jle
jg
cld
lcall
ljmp
add
nop
cltd
stos
test
scas
mov
lds
divb
adc
adc
pusha
cmc
sbb
xchg
or
scas
pop
adc
pop
mov
cmp
lock
pop
fimull
ds
pop
push
dec
sub
add
aam
test
lcall
and
sbb
push
pop
leave
mov
xchg
push
outsl
enter
lret
hlt
daa
out
imulb
push
lahf
push
cmp
fisttps
clc
fcomip
fdivrp
cmp
push
adc
popf
orl
pushf
cmp
adc
fldl
jb
push
mov
out
push
or
and
jne
flds
fwait
jmp
mov
cmp
push
inc
mov
pusha
aaa
outsl
mov
fisubrl
pop
cmp
sub
mov
fldt
outsl
lcall
je
lea
mov
xchg
mov
pop
mov
dec
addr16
add
add
add
cmp
fisubrl
xchg
sub
adc
in
xchg
push
adc
testl
add
movsl
xor
dec
dec
out
stos
jb
aas
mov
xor
jl
and
jmp
dec
mov
xchg
xchg
lret
pop
xchg
jns
mov
jmp
rorb
jmp
in
xor
sub
lret
into
popf
sbb
in
xorl
xchg
fcompp
das
jmp
and
leave
or
dec
xor
cmp
jo
jle
cmp
les
sbb
sub
loope
adc
loope
frstor
add
dec
pop
push
cmpsb
pushf
mov
fs
jecxz
jmp
dec
cmp
push
shll
sub
mov
es
xchg
lock
dec
in
or
cmp
mov
xor
jl
stc
fimuls
jg
fdivrs
out
cs
add
or
mov
and
adc
addr16
add
add
add
test
add
mov
push
testb
jmp
test
and
adc
push
adc
pop
add
push
int3
pushf
mov
into
mov
inc
adc
ds
je
sub
lods
mov
push
scas
pop
xchg
mov
jecxz
cmp
mov
out
pop
test
xchg
or
pop
inc
hlt
jbe
mov
loop
pop
push
adc
jecxz
lds
adc
jae
into
xlat
lret
lea
outsl
mov
xlat
mov
jo
cmp
jns
ret
sbb
add
push
xchg
cwtl
rolb
push
cld
jnp
inc
lret
xchg
out
ret
xchg
jae
test
repz
mov
lcall
jg
jl
out
ljmp
jne
pop
int3
hlt
andb
test
xchg
dec
push
scas
and
xchg
jbe
fsubrl
mov
out
cmp
ret
or
dec
push
sbb
add
add
add
xor
fistpll
pop
pop
out
repnz
xor
xor
adc
xchg
adc
mov
xchg
into
fucomip
xor
shlb
rorl
xchg
jle
fcoms
cmpl
lcall
jb
sub
lahf
test
mov
inc
andb
sbb
scas
loopne
inc
cmp
inc
push
cli
or
add
sub
sbb
mov
cmp
pop
adc
push
cwtl
insl
repz
test
mov
rorl
js
fistpl
pop
into
dec
ljmp
jg
inc
and
mov
rcrl
sbb
ret
ljmp
pushf
scas
int3
lods
lds
cli
cltd
xchg
movsb
movsl
push
fs
jae
add
jmp
xor
xchg
xchg
ficoml
filds
add
pushf
cwtl
xor
or
push
roll
cli
in
sub
lret
ljmp
add
or
push
shll
out
pop
pop
pushf
push
insl
imul
add
add
add
icebp
cli
imul
daa
mov
inc
mov
jns
add
cltd
xor
scas
std
add
xchg
pop
lcall
push
ss
lds
mov
and
xchg
mov
or
mov
mov
lret
inc
jl
and
mov
or
or
mov
aaa
shll
sbb
loop
pop
aas
cli
lock
and
rcll
sub
dec
adc
inc
bound
xlat
pop
repnz
pop
adc
fcmovne
xorb
jno
mov
movsb
aaa
into
jo
xchg
jg
push
push
jae
jl
nop
sub
call
inc
mov
push
push
test
lahf
or
sub
loope
push
mov
je
insl
pop
jle
sbb
out
pushf
ljmp
xor
sub
pop
adc
add
add
out
lcall
hlt
mov
les
push
add
add
add
pop
push
test
je
dec
pop
ret
add
in
pop
inc
jae
ds
pushf
or
sub
aam
sub
arpl
or
in
jle
inc
movsb
ds
cmp
lcall
loope
sahf
mov
mov
mov
add
dec
cwtl
orl
add
lcall
mov
jmp
push
lock
bnd
xchg
imul
inc
pop
jo
pop
into
fldcw
int3
jmp
add
push
push
mov
rolb
xor
xor
fisttpll
inc
mov
push
push
jns
push
aas
or
test
jmp
test
aas
pusha
mov
repz
push
lret
jb
pusha
popa
daa
pop
mov
add
dec
sbb
xlat
inc
adc
adc
xchg
add
enter
inc
fdivrl
cmpsl
inc
cmp
mov
jp
out
xchg
jmp
add
jbe
idiv
imul
add
mov
add
add
or
repnz
sbb
scas
xchg
mov
cmp
xor
jne
arpl
adc
arpl
dec
push
mov
shrl
inc
xchg
xchg
pop
pop
pusha
scas
mov
arpl
jg
cli
jo
sbb
call
push
mov
adc
push
xchg
dec
js
lahf
mov
cmp
sahf
addr16
push
push
jp
mov
lcall
je
sub
shlb
inc
mov
rorl
scas
add
ret
push
test
pop
ficompl
jb
xchg
repz
ja
pop
pop
jae
adc
cmp
loopne
sub
cmp
xchg
add
mov
aaa
inc
push
or
sub
aam
mov
dec
add
xor
in
add
stos
xor
cmc
test
ret
test
ficomps
pop
addr16
pushf
push
and
cmpsl
stos
jno
add
add
fwait
cmp
stos
sarb
addr16
add
add
add
in
inc
lret
out
jnp
sbb
or
je
mov
mov
dec
sbb
ljmp
ds
bound
push
push
mov
inc
cld
leave
mov
fcmovne
dec
adc
addr16
cli
xor
add
pop
cmpsl
movsb
dec
in
jbe
push
jecxz
mov
dec
hlt
pop
or
xchg
add
stos
testl
cs
fs
cmp
inc
int
lret
sub
cmp
mov
dec
adc
rorl
pop
stos
lods
clc
jmp
clc
mov
outsl
dec
mov
popf
xor
clc
imul
xor
jns
or
call
in
or
leave
test
jg
das
lret
clc
add
pop
lods
ljmp
fbld
and
fsubrs
int
xchg
push
cli
mov
xchg
pusha
mov
mov
inc
push
clc
mov
and
hlt
in
xor
add
add
add
add
fcomip
dec
cmp
repnz
rcr
mov
xor
pop
dec
pcmpeqb
pop
ret
gs
movsb
sub
fstps
out
dec
je
movl
pop
imul
jne
repz
shl
aaa
dec
lods
jno
insl
loopne
dec
jle
cmpsb
dec
mov
mov
movsb
stos
jge
mov
dec
lret
and
shr
push
and
and
lods
gs
enter
rcrb
and
mov
inc
xchg
cs
lret
pop
push
scas
repz
add
cmp
fisubrl
sbb
and
or
lea
lahf
pop
clc
pop
out
jmp
jne
sbb
or
movsb
test
sbb
push
jnp
inc
dec
ficompl
outsb
das
xchg
test
sti
negl
jg
push
jl
sbb
add
xchg
and
test
pop
sar
pusha
push
dec
sub
xchg
jae
scas
xchg
push
adc
out
mov
jl
or
addr16
add
add
add
sbb
inc
jge
adc
cmpsb
gs
popa
outsl
arpl
mov
orb
push
in
jge
popf
sub
shrl
push
lret
sahf
cmp
test
in
adc
in
ret
cli
xor
pop
in
std
xor
lcall
sub
faddl
mov
es
adc
xor
outsl
leave
adc
ja
ljmp
or
subb
pop
mov
xchg
mov
adc
jae
stc
aam
call
sub
ret
add
dec
insb
jnp
dec
cmpsl
push
push
xorl
mov
dec
add
add
out
xor
outsl
enter
fldt
pusha
add
add
add
addr16
std
push
lods
push
push
or
imul
add
mov
cmpsl
xchg
adc
cmpb
push
pop
outsl
shrb
add
mov
lds
aad
ret
mull
add
add
add
jo
stc
rcrl
sbb
jmp
add
mov
jecxz
mov
arpl
adc
mov
clc
dec
or
hlt
pop
and
leave
shlw
cmpsl
sub
fwait
pusha
push
lret
mov
pop
xor
pop
mov
xlat
clc
loop
mov
in
push
into
fiaddl
ret
lock
addr16
push
fs
int3
inc
jle
mov
adc
enter
nop
xor
xchg
or
push
daa
insl
sub
dec
gs
ds
in
push
lret
dec
lods
rcr
fldl
inc
mov
pop
cmp
or
test
fnstcw
xchg
xchg
sbb
sbb
push
mov
bound
fcoms
and
jb
repz
das
lods
xchg
mov
jo
or
sbb
pop
les
mov
xor
inc
out
dec
pop
push
loope
or
add
mov
pusha
xchg
mov
add
add
add
push
jle
pop
mov
cmp
leave
fdivl
jle
push
push
adc
xor
adc
mov
jb
sub
lahf
xor
add
jne
and
cmpsb
repnz
dec
lcall
push
inc
scas
dec
sahf
sti
inc
outsl
test
xor
out
sub
mov
inc
sbb
adc
xchg
int
mov
pop
mov
jmp
cwtl
add
andl
mov
les
cwtl
es
or
test
dec
ljmp
cmp
sub
fsubrs
cmp
loopne
and
jmp
fs
sub
adc
scas
popa
mov
xchg
je
jae
xor
in
and
xchg
xchg
jg
jp
addr16
mov
inc
xchg
sti
or
jnp
test
pop
inc
les
xchg
add
add
movsb
jae
jnp
mov
ja
mov
jbe
sbb
add
add
repz
iret
xor
fcomp
jle
fldcw
sub
data16
inc
adc
pop
xor
dec
dec
cmp
popf
push
outsb
jge
adc
push
in
sarb
adc
sti
aaa
inc
xor
outsl
test
aam
push
decl
xor
inc
jo
hlt
pop
out
add
fnsave
ss
pop
jp
cmc
sbbb
and
push
divl
hlt
incb
clc
mov
pusha
xchg
and
mov
daa
add
sbb
jmp
add
dec
jno
setno
testb
out
hlt
mov
lock
sti
in
pop
andb
xor
int
int
sub
cmp
lcall
mov
in
aas
mov
fisttpll
ja
pop
test
and
decb
inc
push
pop
dec
shll
outsb
cmp
jecxz
dec
sahf
sub
pushf
out
add
int
mov
fsubrl
add
add
xor
xlat
out
cld
and
push
pop
add
add
add
addr16
scas
mov
mov
xchg
mov
call
lods
cmp
pop
aad
jae
adc
js
cmp
clc
and
es
jp
push
nop
mov
adc
jg
aad
hlt
outsl
ret
stos
sub
movsb
daa
mov
mov
mov
pop
outsb
jl
or
push
test
js
lock
jbe
lret
mov
jb
scas
push
psrad
sub
and
enter
adc
std
dec
les
pop
arpl
or
or
loopne
pusha
cltd
sub
pop
xlat
xchg
je
out
fmul
cmp
out
add
dec
icebp
shr
and
iret
nop
popl
pop
cmpsb
gs
and
aas
sbb
add
sbb
add
addr16
xor
loop
iret
movsl
adc
mov
sahf
adc
nop
add
stos
jne
dec
mov
cmp
xchg
push
cmp
add
jecxz
in
outsl
sub
fcmovnu
loope
lcallw
add
add
mov
add
mov
pusha
add
add
add
xor
jmp
push
rorl
mov
cs
aas
pop
dec
mov
inc
add
add
movb
sbb
mov
jnp
dec
sub
ja
dec
jne
rolb
movsb
mov
sub
iret
sbb
mov
stc
push
lds
jge
adc
jno
bound
cmpsb
and
js
shrl
in
xchg
imul
pop
mov
jns
iret
cltd
cmc
aad
popa
sti
or
mov
scas
pop
addb
cmp
xlat
xchg
pop
popa
jge,pn
rcrl
in
arpl
add
icebp
and
addr16
mov
push
shr
test
xchg
pop
mov
test
pop
sub
pop
fucomi
add
leave
inc
xchg
std
in
adc
cwtl
cmpsb
lock
aas
repz
subl
fcom
cmc
fmull
subl
push
out
into
push
push
inc
lahf
mov
addr16
add
add
add
loopne
jl
adc
mov
stos
xor
icebp
and
rorl
bound
lods
mov
test
stos
lods
jmp
sub
inc
addl
js
icebp
mov
cmp
xchg
out
lret
xor
mov
pop
sub
push
clc
dec
cmpsb
mov
push
sar
push
rorl
push
fnstsw
scas
push
dec
test
loop
adc
fcomip
dec
outsb
mov
stos
lea
mov
repz
out
or
std
lahf
outsl
xchg
fidivs
pop
icebp
leave
pusha
sahf
dec
scas
movsb
push
jb
dec
rcl
or
pop
les
xchg
inc
stc
and
insl
push
pop
inc
and
push
test
or
lods
pop
xor
scas
push
daa
mov
js
xor
sbb
fisubs
lcall
jnp
ja
mov
mov
mov
and
mov
jg
or
bound
add
add
add
mov
int3
push
fwait
and
xchg
push
adc
fadds
rorl
nop
orl
sarb
push
movsl
push
mov
xchg
xchg
fucomi
and
dec
ret
test
sarl
sub
aad
mov
jp
mov
or
iret
mov
jle
test
push
jb
lods
sub
sbb
repnz
cld
xchg
roll
push
repz
std
dec
dec
popf
and
push
cwtl
or
scas
xor
jmp
jno
cli
and
push
ljmp
xor
xchg
mov
clc
shlb
lods
push
fiaddl
fists
and
xchg
jl
add
in
outsl
mov
addr16
lods
outsl
jno
das
xchg
xor
jno
mov
jns
leave
dec
dec
daa
pcmpgtd
cmc
pop
or
jns
sub
rorb
mov
jge
into
arpl
mov
jle
mov
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
arpl
add
add
add
inc
fistpll
and
push
lock
lods
sbb
in
movsl
leave
cli
popa
cmp
xchg
cmp
push
sub
or
popa
mov
sub
pop
push
or
mov
arpl
imul
xlat
jmp
icebp
daa
dec
xchg
lahf
mov
in
mov
xor
pop
and
jecxz
jno
adc
ds
stos
nop
icebp
loop
rcrl
outsb
rol
and
sarl
xchg
aas
insl
aad
mov
rcrl
dec
cmp
ja
dec
sarl
inc
lock
orb
pop
and
fbld
cli
orl
popa
push
adc
xchg
cmp
js
pop
jg
add
mov
pop
xchg
fs
stc
pop
or
fisubs
fldt
push
call
arpl
pop
or
jmp
jo
rcr
shl
push
cmp
lea
mov
cmp
int3
dec
pop
sahf
pop
testl
jp
ja
add
add
add
fwait
xchg
xlat
sbb
sub
std
add
rol
fistps
adc
aas
jle
jge
hlt
out
adc
adc
pop
lea
leave
lcall
cmp
ret
sub
push
dec
push
dec
mov
inc
dec
mov
fsubrl
xor
jae
pop
in
pop
jno
cli
ret
decb
inc
pusha
inc
cmp
ss
rorb
fldcw
xchg
sbb
push
ficomps
jge
mov
inc
or
ja
push
nop
icebp
dec
inc
pushf
cmp
xlat
mov
inc
shrl
xor
sub
sbb
sbb
mov
addb
mov
and
push
adc
divb
bound
jecxz
mov
xchg
push
shl
leave
xchg
adc
ss
js
inc
jge
sub
lods
stc
jp
pop
stos
xchg
mov
adc
sub
cld
jnp
jb
mov
adc
sbb
std
fwait
hlt
pop
out
flds
add
add
pop
mov
fstps
stos
shlb
add
add
add
daa
movsl
push
fnclex
adc
shrb
sub
aam
sub
mov
clc
pop
out
imul
dec
imul
outsb
dec
jnp
shlb
fstpt
inc
add
xchg
mov
adc
repnz
cmpsb
imul
frstor
les
mov
add
pop
stos
jns
int3
xchg
cs
sbb
mov
popa
mov
sbbb
jmp
out
mov
mov
sub
rcll
popa
popf
sub
int3
adc
pusha
cmpsb
lcall
push
shlb
popf
mov
lods
push
loop
shl
enter
mov
inc
in
loopne
jnp
push
cli
sbb
pop
lds
push
jnp
ss
fcmovu
mov
xchg
push
js
push
adc
cltd
sub
pop
and
add
add
repnz
movsb
jle
arpl
daa
xchg
add
add
add
jp
or
mull
mov
adc
jmp
cmpsl
lds
lds
stc
adc
mov
mov
inc
sbb
testl
dec
pusha
aaa
jno
pop
xor
mov
xchg
imulb
mov
das
fwait
lret
push
es
and
jecxz
call
inc
iret
push
das
or
lahf
cltd
lret
inc
cltd
roll
push
test
cmp
adc
rorb
fnstcw
lahf
cli
jp
pop
adc
adc
xchg
push
inc
fisubs
push
arpl
xor
mov
pop
sarb
dec
xor
cmpsl
and
mov
push
sbb
cmp
sub
mov
or
jge
or
sbb
mov
xor
fimuls
adc
sahf
sbb
mov
mov
add
stos
sub
stos
out
jmp
sub
mov
add
add
add
imul
cmpsb
mov
aam
imul
mov
inc
sbb
fildl
popf
sbb
outsb
sbb
pop
gs
arpl
jp
test
dec
sub
daa
xchg
mov
dec
fnsave
in
aad
pop
add
push
and
sub
repz
mov
int
insl
adc
out
mov
add
ficomps
rol
xchg
inc
fs
mov
mov
xlat
int
mov
les
adcl
in
push
inc
sbb
cltd
push
or
jb
jb
xlat
mov
sti
in
stc
sub
xchg
jmp
scas
lds
sar
in
daa
mov
jo
pop
in
add
testb
inc
movsl
test
lods
mov
in
pop
ret
lock
mov
mov
mov
repz
aam
jp
push
sbb
xor
lea
aam
dec
mov
push
pop
xchg
pop
repz
mov
pop
jbe
push
shll
fnstenv
adc
add
add
add
fnsave
push
ss
stos
repnz
mov
cmp
cld
pushf
clc
mov
aad
out
lea
cmp
and
sahf
pop
loop
xchg
cmp
push
inc
scas
ds
bound
nop
inc
cltd
inc
sbb
hlt
decl
sahf
andb
mov
inc
shrb
test
test
mov
mov
xchg
inc
push
sub
vmread
xor
mov
mov
fstpt
iret
mov
sub
inc
fdivl
adc
sbbl
push
loope
out
mov
dec
push
jmp
lock
sbb
pop
xchg
cltd
pop
xor
sahf
sub
mov
aas
push
aam
imul
scas
imul
fldl
sub
mov
inc
add
jns
insb
push
popf
mov
repz
dec
cmpsl
cld
je
jbe
jns
sbb
mov
imul
add
fisttpl
mov
idivb
es
or
add
xchg
mov
outsb
into
loopne
je
movsl
xchg
inc
adc
repnz
fldcw
rorl
adc
xchg
icebp
push
stc
or
sub
pop
fmuls
cmp
push
jo
imull
and
mov
jne
adc
out
ss
mov
jbe
mov
pop
ret
mov
xchg
pop
xchg
cmp
arpl
leave
out
inc
iret
or
dec
fiaddl
jo
iret
mov
pop
jecxz
imul
and
add
pop
sub
inc
das
daa
jl
int3
xchg
add
sub
fdivrl
and
call
nop
dec
mov
pop
lcall
cmpsl
push
scas
push
aad
aam
inc
enter
int
dec
push
ljmp
sbb
jne
repnz
cmp
add
cltd
jmp
fildl
or
mov
push
add
add
add
pop
xor
mov
inc
jmp
xchg
mov
cmpsb
sbb
add
inc
mov
sbb
sub
jo
sarb
jnp
insb
in
movsb
lret
rorl
jmp
or
cmp
add
aad
roll
xchg
lods
sbb
imul
imul
pop
xchg
arpl
and
xchg
aaa
lahf
pop
jl
daa
jbe
lods
mov
jae
push
lock
xchg
ror
mov
cmp
pop
scas
icebp
notl
aad
or
fisttpll
and
sub
cli
lock
mov
dec
lret
inc
jl
out
rcrl
add
xor
and
add
xchg
aad
sbb
orb
int3
gs
call
cmp
ret
pop
rcl
jg
xchg
in
inc
sub
popa
hlt
mov
mov
push
jg
dec
xchg
dec
cmp
xchg
dec
imul
add
add
and
lret
xchg
jp
loopne
out
xchg
arpl
fdivrs
hlt
pop
jmp
imulb
xchg
lcall
push
scas
cli
in
pop
inc
xchg
pop
fidivl
and
dec
and
jae
push
clc
pushf
fisttpl
mov
pop
insb
inc
aad
cltd
cld
sti
mov
adc
xor
xchg
cmp
mov
fidivrl
test
and
mov
sbb
mov
xor
push
and
fldt
bound
xchg
mov
ja
mov
push
adcl
mov
sbb
push
rcrb
stc
mov
std
jae
xor
xor
sbb
dec
xor
aam
pop
push
les
inc
iret
adc
cmp
lret
push
xor
loope
xor
xor
sub
aas
test
cmp
rorb
sti
mov
pop
and
test
iret
mov
fucomip
push
insb
xor
fstps
stc
insb
add
add
add
fs
mov
popa
imul
sbb
stos
pop
mov
dec
sub
add
add
inc
xchg
rcl
add
int
jge
mov
loop
bound
cmp
inc
mov
icebp
lret
nop
jg
mov
jns
mov
sarl
outsl
sbb
pop
dec
mov
lea
xor
std
cmp
mov
out
push
enter
sahf
sbb
pop
aaa
cli
pop
inc
call
in
movsb
pop
or
xchg
mov
lret
push
fcompl
pushl
fdivl
aas
in
xor
sbb
jge
cs
loope
add
je
je
insb
loope
notl
add
mov
data16
cmp
sub
repnz
jb
sbb
pop
enter
mov
push
sub
mov
lea
and
xchg
call
dec
insb
sahf
lea
dec
jb
imul
dec
out
iret
jmp
aas
in
push
data16
stc
mov
add
add
add
ss
stc
xorb
in
cmp
add
and
xchg
mov
pop
int
sbb
jno
inc
push
cmpsl
xor
insl
push
inc
push
push
mov
mov
adc
add
pop
aam
test
mov
xchg
lock
aas
push
mov
fcoml
cmpsl
in
inc
icebp
enter
inc
insb
incb
jnp
mov
or
jnp
outsb
clc
sbb
xchg
add
jo
and
addr16
sbb
jns
push
add
outsl
pop
mov
std
jle
insb
idivb
inc
aas
mov
sub
ret
popf
cmp
push
dec
in
push
scas
iret
aam
leave
icebp
pushf
pop
setp
ret
add
jmp
cmpsl
mov
add
mov
jmp
andb
adc
mov
dec
mov
nop
in
inc
insl
mov
lret
rolb
adc
or
out
add
add
std
cmpsb
pop
dec
sub
sub
repnz
add
add
add
mov
mov
jle
push
jl
cmp
push
scas
xchg
adc
sbb
add
outsl
dec
inc
mov
ret
js
lods
or
lea
pop
inc
xchg
hlt
mov
add
test
stos
ret
outsb
scas
push
push
mov
stc
pop
adc
add
mov
icebp
cmp
mov
leave
call
pop
cmp
loopne
mulb
repz
roll
test
int3
pushf
loope
xchg
neg
add
dec
adc
jae
addr16
lret
aam
iret
enter
push
mov
je
test
movsb
xorb
xchg
sub
rep
cmpsl
loopne
mov
outsl
cli
push
push
cmp
and
inc
stos
xchg
adc
pop
cmp
xor
push
std
dec
sub
add
cmp
push
xor
or
jl
inc
stos
bound
imul
add
add
neg
std
sub
dec
movsl
rcrl
outsl
add
add
add
ja
outsb
fsin
notl
clc
dec
pop
jle
add
scas
cld
popa
test
jns
adc
jo
push
jbe
inc
in
mov
pop
sbbb
lods
pop
adcb
dec
lock
jb
xchg
or
rsqrtps
into
jae
std
push
mov
adc
outsl
test
jp
jmp
adc
int
mov
mov
sti
sahf
hlt
aas
mov
call
pop
xor
xchg
es
sarb
push
shlb
popf
ljmp
outsl
xchg
sahf
loope
push
in
pop
aaa
mov
xchg
sbb
mov
in
aaa
test
xor
fistps
mov
pushf
xor
fwait
hlt
inc
inc
cli
daa
fsubs
push
lret
shl
push
insl
arpl
daa
inc
pop
outsl
mov
es
xchg
pop
dec
ja
dec
mov
pop
ja
and
in
and
add
add
cs
xor
cltd
xor
ret
cmp
add
add
add
leave
xor
and
fucomi
cmp
aas
jmp
pop
imul
stos
sti
das
shll
in
cmpsl
jo
inc
lods
and
dec
je
fdiv
fisubrs
xchg
mov
cmp
mov
cmp
add
dec
cli
pop
sahf
pop
jae
fsubrl
xchg
xor
loope
mov
sarl
cld
jns
pop
push
fsubl
insb
mov
pop
jle
cmpl
rcll
scas
test
add
mov
int
inc
test
rorb
js
jbe
repz
mov
sub
jp
cmpsb
fdivp
daa
mov
repz
sbb
add
push
dec
push
push
icebp
divps
fistps
repz
aam
push
imul
jbe
pop
test
cmp
lock
pop
and
aaa
test
inc
xchg
pop
or
jmp
les
mov
movsb
aam
or
outsl
jnp
lcall
out
sbb
cmpsb
mov
add
add
add
rorl
or
add
push
mov
insl
mov
push
arpl
mov
xchg
fadd
aaa
adc
add
or
adc
shrb
mov
lods
mov
and
in
rcr
push
out
rorb
cs
xchg
sbb
pop
decb
xor
jne
mov
ds
push
and
mov
stos
call
aaa
jle
pop
inc
stos
lahf
fsubrl
test
jbe
dec
jae
push
jb
inc
pop
stos
ss
lea
sub
cmpb
pcmpeqb
or
adc
fcomi
int
dec
or
jnp
push
or
nop
jnp
lods
xor
arpl
mov
mov
lcall
mov
outsb
adc
loopne
sbb
sbb
rcr
xor
addl
das
jp
mov
pusha
ret
sahf
push
fimull
int
dec
add
mov
add
add
sub
ja
mov
movsl
mov
add
add
lret
rcrl
orb
xor
std
pop
and
adc
mov
xor
cmp
out
cmpsb
cwtl
xor
orb
sbb
lcall
xor
mull
mov
test
enter
sbb
movsl
fisttpll
insb
imul
mov
fs
and
in
mov
imul
and
mov
and
xor
das
mov
xlat
mov
mov
push
scas
mov
or
and
inc
adc
push
test
popa
out
mov
sbb
lret
xor
das
jecxz
outsb
scas
push
subb
fistl
loop
and
cltd
dec
call
mov
out
mov
int3
jb
inc
jbe
inc
xor
loop
lods
cmp
pop
cmpsb
sbb
xchg
sarl
int
mov
jnp
outsl
cmpsb
loopne
inc
adc
add
add
add
and
popf
cmp
inc
movsb
cmp
mov
sub
sbb
in
loope
in
xor
lret
fsubl
adc
push
loope
sub
sub
in
and
sbb
mov
test
push
or
pop
push
add
mov
pop
mov
push
xchg
test
adc
mov
cwtl
mov
inc
jb
fists
inc
nop
push
inc
and
icebp
shr
pop
xchg
push
pop
into
stc
mov
mov
inc
xchg
xchg
nop
jae
cmp
and
inc
stos
sbb
push
pop
lods
arpl
dec
lea
cli
cmpsl
mov
inc
cli
dec
mov
pop
jg
and
mov
xor
adc
mov
sahf
mov
sub
dec
push
mov
test
cmp
dec
inc
cmp
jne
jb
ret
cltd
int
mov
push
fdivrl
push
cwtl
xor
xchg
dec
lea
add
add
cli
xchg
jle
push
je
aad
add
add
add
add
pop
and
movsb
jae
lods
sub
sub
push
mov
and
je
push
ficoms
fs
lds
cmc
das
xor
pop
lahf
xor
jb
xor
mov
push
ret
dec
sbb
ss
xchg
jae
inc
movsb
arpl
lret
xor
aam
loope
dec
jmp
in
loopne
repnz
jne
mov
data16
loop
sub
mov
divl
repnz
movsb
aas
mov
fidivrs
add
js
sub
mov
xor
cld
and
or
push
cmp
pop
push
in
stc
int3
jno
rcrl
nop
enter
cmp
add
js
push
dec
push
pusha
fwait
pushf
jg
xor
xchg
iret
push
sarb
mov
call
or
les
pop
dec
lods
sbb
xor
pushf
xor
xchg
cmp
or
inc
add
mov
xchg
inc
aaa
dec
fwait
jnp
aad
sbb
cmp
jne
add
add
add
sti
addr16
pop
das
xor
lods
push
push
shll
insl
pop
xor
mov
xchg
pushf
sar
inc
sarl
sbb
enter
out
int3
sbb
push
pop
push
ret
mov
outsb
pop
lock
shlb
pop
xchg
test
mov
xchg
xor
gs
fcomps
sbb
scas
adc
scas
inc
adc
out
andb
addr16
jl
xchg
lods
cmp
cmp
syscall
out
cli
call
mov
cmpsb
sbb
xor
push
lods
leave
stos
inc
ss
in
into
imul
cld
dec
and
sahf
mov
push
sbb
mov
sub
lret
and
sub
push
sub
push
mov
dec
mov
and
pop
stos
mov
imul
or
mov
andl
xchg
mov
mov
into
and
mov
add
add
std
mov
sub
test
addr16
add
add
add
jmp
or
adcb
push
mov
dec
pushf
mov
mov
push
sub
dec
and
iret
jne
sub
out
sub
dec
stos
xchg
sbb
fcomp
mov
pop
cmp
jbe
push
cmpsb
and
xchg
ss
pop
push
pop
mov
push
sarb
cmp
jo
fwait
leave
cmpsb
cmp
push
pop
jns
loopne
add
xchg
imul
les
xchg
pusha
test
or
xchg
inc
or
lret
cmp
rclb
insl
sbb
hlt
mov
aad
dec
sub
cmp
mov
sbb
jns
subb
ljmp
sub
pop
sbb
mov
imul
and
jmp
lds
orb
dec
aaa
jp
dec
and
sti
scas
mov
out
into
ret
pushl
adcl
jnp
mov
add
pop
mov
add
fstl
lret
lods
and
add
add
add
inc
andl
not
sub
jae
stos
enter
pop
or
lret
nop
mov
loopne
push
pop
xchg
cmp
push
jnp
mov
pop
scas
mov
cmp
lods
and
inc
push
mov
fcomp
pop
inc
lods
dec
xchg
int
mov
adc
sub
push
push
xlat
inc
add
movsb
stos
out
test
out
ljmp
mov
out
xor
pop
adc
jmp
ja
push
xchg
and
adc
loop
jge
and
adc
mov
jo
insl
hlt
sub
mov
add
cs
arpl
push
mov
icebp
or
stc
cmp
lret
call
jmp
loope
insb
sub
mov
js
pop
mov
push
mulb
sub
hlt
inc
rcrb
jno
mov
out
mov
ss
sub
mov
inc
jl
mov
add
add
bound
sub
sbb
js
add
add
add
sbb
lahf
loope
dec
imul
or
push
cwtl
mov
mov
lods
add
sahf
sahf
xor
xlat
jbe
xchg
idivl
pop
and
mov
push
cmp
pop
cli
pop
xchg
int3
and
push
inc
fwait
jmp
pop
sar
pop
out
stos
int
repnz
mov
andb
mov
nop
sti
jl
test
cwtl
push
mov
stos
fildll
gs
add
out
sbb
aad
cmpsl
inc
mov
sub
jno
jnp
or
lret
shll
les
adc
pop
inc
mov
addr16
xor
imul
sub
push
sub
lcall
gs
outsb
and
xchg
xchg
leave
es
fs
in
fmull
aaa
stos
test
inc
push
mov
out
lahf
pop
jg
or
jne
sti
add
pop
xor
rorl
lods
cltd
adc
out
jns
divl
in
sub
addr16
add
add
add
je
pop
add
das
inc
pop
push
xchg
out
mov
inc
pop
jge
pop
clc
push
mov
push
lods
lods
mov
lds
cmp
cmovb
lret
inc
loop
aam
add
insb
cmp
mov
jmp
ljmp
test
and
sbb
daa
aaa
aad
xchg
dec
inc
and
ja
sub
shl
testb
push
or
ret
enter
mov
jecxz,pn
call
in
cltd
pop
and
and
stos
stos
push
or
xor
xor
repz
mov
pop
test
repz
mov
jae
movsl
pop
adcl
or
out
lods
jns
mov
jnp
jbe
mov
dec
adc
mov
lods
ret
out
or
pop
pop
aas
movsl
sub
push
pop
xorl
jmp
out
jp
in
aad
insb
sbb
clc
xchg
cmp
fistpll
pusha
add
add
add
fisubs
mov
mov
add
jp
add
add
add
sahf
mov
adc
push
and
iret
cltd
pop
mov
pushf
lods
pop
nop
inc
adcb
repz
idivb
and
pop
cmpsb
into
ret
mov
bound
mov
nop
sbb
ret
fs
dec
fcoml
lods
ret
jecxz
pushf
pop
push
mov
sbb
cmp
insb
shlb
adc
mov
loop
jle
int
push
pop
and
flds
cmpsl
mov
add
jp
mov
dec
push
xchg
xlat
jnp
addr16
rcrb
mov
push
cmpb
pop
ss
lret
movsl
lods
sbbl
dec
pop
and
mov
cmp
jne
inc
or
mov
rorl
test
xlat
xor
or
mov
ljmp
or
in
push
jmp
pusha
cld
sub
shlb
mov
rclb
add
add
add
sub
push
enter
adc
stos
mov
adc
ja
mov
aad
push
inc
mov
pop
pushf
dec
xchg
stc
pop
ja
lods
in
xchg
in
inc
xor
and
jl
pop
mov
jae
shl
into
sbb
fwait
xchg
aas
mov
jp
adc
jns
push
jge
in
mov
pop
xchg
je
shll
sti
add
fninit
mov
pop
adc
add
stos
dec
jle
mov
movl
arpl
cmp
jns
jge
ljmp
pop
jbe
jb
ds
push
cmp
mov
out
sbbl
lock
test
fmull
repz
es
mov
push
aad
cld
faddl
mov
addl
inc
mov
xor
cmp
sub
inc
bound
adc
pop
push
ss
jmp
add
add
testl
mov
add
add
ficompl
xor
aad
jle
push
jno
repz
in
and
dec
fnstsw
cwtl
lea
pop
inc
push
shl
lcall
pop
test
push
loope
cmp
stc
pop
mov
inc
in
and
pop
mov
sub
std
sbbl
pop
ljmp
cs
push
pop
inc
aaa
cmp
or
mov
icebp
pop
cmpsl
or
cwtl
fisubl
xlat
in
popf
jmp
xlat
push
movsb
jb
test
mov
push
lods
aas
loope
jmp
and
xchg
push
mov
jne
xor
push
pushf
cmpsb
jns
sbb
iret
and
xrelease
scas
cmp
jbe
jle
aas
inc
mov
rcll
lret
push
adc
in
pop
ljmp
inc
out
adc
pop
and
xchg
cltd
mov
dec
xor
sub
rorl
scas
imul
cmp
push
cld
es
adc
xorb
add
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
testb
test
add
ret
pop
popf
rorl
cld
cmc
dec
lahf
ss
cltd
add
jecxz
sar
sbb
call
out
and
add
stos
and
lahf
sbb
mov
je
adc
ljmp
cmp
pop
sti
xor
sbb
xor
clc
add
fmull
cmp
lcall
movsl
cld
sbb
std
faddl
cli
test
aad
pop
outsl
xor
sub
add
pop
stos
mov
lret
sbb
cld
mov
cmp
jb
adc
and
cs
mov
int3
cmpsl
mov
fstpt
cmp
mov
jo
sub
xchg
pop
push
sbb
lods
xchg
and
ret
fstp
mov
xchg
fwait
pop
jl
add
sbb
fs
mov
mov
push
into
xchg
jns
pusha
iret
xchg
andl
test
add
mov
cmpsb
push
sbb
stc
packuswb
add
add
add
mov
lahf
bound
mov
dec
inc
add
mov
es
mov
insl
pop
addr16
ljmp
fidivrl
pop
and
mov
aas
xchg
jge
adc
sbb
cmp
stos
pop
xchg
jg
add
call
cmpsb
shll
in
push
pcmpgtd
push
pop
pop
pushf
push
pop
sub
int
mov
enter
add
movsl
or
inc
mov
xchg
mov
mov
fiadds
sti
ja
scas
stos
xchg
scas
std
sbb
addr16
rcr
pop
hlt
inc
lahf
push
lret
xchg
leave
inc
sub
inc
aas
jp
lods
pop
dec
stos
pop
sub
std
sub
fmulp
clc
xor
cmp
dec
jl
mov
jnp
dec
jmp
adc
pop
inc
mov
int3
sub
xchg
xchg
stc
mov
push
mov
add
add
cmp
cli
mov
sub
push
popf
addr16
add
add
add
xor
sub
mov
cld
out
stos
inc
jmp
mov
push
xchg
cmpsl
or
xchg
sub
push
jo
lahf
jne
sub
xchg
out
leave
push
cmp
push
inc
xor
and
outsb
into
icebp
push
out
repz
dec
mov
mov
inc
scas
test
arpl
xchg
mov
popa
test
repnz
lcall
mov
loope
sub
cwtl
jle
or
and
into
and
cmpsl
loopne
mov
add
leave
mov
pop
jge
inc
push
sti
push
adc
jp
jns
jg
dec
bnd
inc
xchg
leave
and
das
cmp
or
xor
in
push
sar
jp
lret
aam
or
call
push
add
mov
lret
fs
and
xlat
cmpsb
lds
fisttps
push
or
mov
pop
jo
mov
jp
mov
mov
add
add
test
lcall
pop
out
stc
addb
add
add
xchg
mov
stos
cmpsl
cmp
mov
add
pop
dec
add
stc
and
roll
xchg
negb
pop
or
jnp
push
mov
dec
push
test
mov
pop
mov
add
divl
lods
loop
int3
push
and
enter
mov
mov
lret
push
xor
pop
or
shrl
aad
inc
add
int3
jle
mov
and
cmp
test
lds
pushf
xlat
lods
sub
pusha
iret
or
hlt
pop
dec
and
cmp
xor
jp
xor
fists
cmpl
out
call
cmpsb
daa
aam
out
insl
adc
std
sti
cwtl
jl
incb
cmp
out
insb
sub
ss
pop
popa
sbb
icebp
ret
jo
mov
sub
cs
subl
push
scas
loopne
add
add
xchg
xchg
jns
jmp
mov
aad
addl
add
dec
imul
outsl
mov
xchg
ljmp
mov
stos
pop
jne
push
data16
cmpsb
mov
imul
mov
movsl
add
sub
repz
or
inc
inc
adc
pop
mov
sub
gs
stos
ds
adc
xchg
dec
lret
gs
movsb
addr16
sbb
or
test
mov
push
lods
mov
loop
iret
cli
xlat
push
adc
lds
sub
loopne
add
mov
push
push
aam
dec
xor
sub
mov
mov
mov
sub
out
dec
xchg
jecxz
push
mov
push
jae
pop
fdivr
jno
sbb
lret
mov
repnz
mov
dec
jecxz
mov
mov
pop
scas
fidivrl
mov
mov
xchg
aad
imul
and
mov
mov
leave
scas
lcall
adc
sbb
mov
pushf
dec
addb
add
add
pop
test
cmp
in
sbb
lods
fcomi
pop
inc
jb
call
and
call
mov
pop
inc
and
add
addr16
dec
pop
cwtl
inc
shrb
add
mov
mov
popf
xor
xchg
push
push
jl
push
loopne
mov
xchg
push
call
mov
in
outsl
pop
cmp
pop
add
or
nop
add
adc
je
inc
aas
mov
mov
mov
fdivrs
sahf
xchg
push
adc
adc
test
frstor
stc
loop
sub
inc
mov
and
inc
xor
jg
mov
loop,pn
pushf
push
sbb
lods
das
rol
mul
push
pop
push
push
cmpsb
cltd
int3
jne
mov
inc
xchg
lret
mov
cld
push
fwait
cmp
ljmp
test
mov
adc
into
adc
jge
sbb
shlb
jnp
add
add
mov
idiv
jne
iret
cltd
fyl2x
mov
addl
add
add
mov
mov
sahf
pushf
movsb
jmp
pop
sub
mov
mov
test
stc
iret
sub
mov
jnp
inc
lds
dec
in
inc
shrb
xor
imul
xor
jge
mov
pop
lcall
xor
cmpb
in
add
sub
jns
stos
jae
xor
in
dec
sub
repnz
push
mov
xchg
lcall
sbb
push
sub
fs
mov
or
adc
mov
loope
inc
push
adc
insb
nop
sti
sbb
stos
pop
pop
sbb
push
cmp
lock
sbb
in
sbb
fwait
out
jp
insb
jg
test
jne
imul
loopne
inc
pop
push
and
inc
iret
andl
movsl
imul
pusha
adc
push
movsl
mov
push
test
xchg
pushl
sub
pop
cmp
test
add
add
add
mov
arpl
aad
jmp
push
call
jnp
mov
jns
je
mov
cli
iret
sub
sbb
lret
push
mov
xchg
repz
mov
xchg
xor
push
dec
hlt
sub
ss
data16
adc
push
enter
mov
and
js
mov
or
mov
fs
test
lock
xrelease
insb
test
mov
cmp
jne
fisttpl
pop
pextrw
push
out
addr16
repz
dec
aas
stc
push
jno
adc
ret
pop
push
iret
fdivrs
repnz
sbb
in
rcrl
xor
enter
repz
add
outsl
js
mov
mov
adcb
jo
inc
mov
cmpsb
scas
jl
xor
cltd
shr
dec
fiaddl
dec
sub
aas
aas
ret
jne
xchg
mov
mov
imul
mov
out
add
sub
inc
jmp
add
add
sti
iret
ss
push
jno
test
and
test
add
add
add
imulb
mov
imul
xchg
sub
xchg
push
jo
lahf
sbb
aaa
sbb
jmp
xchg
aad
sahf
xchg
imul
shrl
rcrl
cmpsb
imul
popl
sub
jp
fsubl
sub
andb
inc
nopl
mov
cld
movsl
arpl
jb
sbb
sbb
push
dec
fwait
scas
movsb
xor
xor
jno
push
mov
push
mov
test
cmpsl
fstpl
jae
insb
cmc
jp
jg
cmp
pop
mov
fdivrl
insl
test
shl
xchg
and
test
pop
pop
dec
or
lock
aam
stc
in
out
cltd
loop
cmc
daa
pop
sbb
dec
pusha
fists
mov
push
rclb
sar
testb
jge
pop
repnz
pop
mov
jmp
jno
leave
push
ret
sbbb
cwtl
pop
fsubr
jle
int
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
fwait
mov
add
add
add
and
push
xor
repz
stos
pop
push
push
jl
pop
xorl
data16
jbe
dec
add
mov
popf
or
iret
jo
mov
jae
and
adc
dec
bound
mov
jge
bound
pop
fcomip
in
fsubrl
dec
cmp
cmpsl
hlt
in
shll
cmp
sub
adc
xchg
fwait
jns
pop
mov
insb
pop
xor
out
xor
push
mov
mov
mov
popa
add
jno
mov
pushf
jbe
push
and
mov
shr
pushf
iret
pop
mov
fs
fsubp
jle
or
pop
xchg
pop
and
push
test
add
cli
jp
out
mov
jp
pop
and
insb
mov
mov
push
icebp
lahf
push
std
cmpsl
jae
fcomip
jbe
xor
add
mov
mov
push
xlat
clc
xchg
add
add
add
out
arpl
and
movsbl
inc
int
xor
inc
lea
add
pop
movsb
addr16
mov
mov
xor
xor
mov
orb
sub
popf
add
hlt
dec
jp
fisttps
or
cmp
repnz
test
cmpsb
mov
dec
add
imul
mov
daa
rcr
int
inc
call
stos
jns
outsb
xchg
leave
clc
dec
cmp
fisttpl
mov
mov
sbb
jecxz
adc
jnp
mov
jno
into
cmp
cmpsb
sbb
insl
arpl
add
fsubl
sti
dec
jmp
daa
in
outsl
scas
int
int
xchg
imul
inc
jae
insb
fnstcw
jae
push
xchg
les
and
popa
jle
mov
pop
imul
inc
mov
sub
sbb
orl
cmp
inc
push
sbb
ret
add
shlb
inc
fadds
add
add
pop
test
ljmp
lock
xchg
fdiv
or
mov
add
add
add
jno
mov
xor
daa
xor
adc
inc
clc
das
inc
icebp
lods
jno
add
lcall
es
pop
movsl
dec
jg
xor
out
sti
adc
xchg
sahf
xor
rcl
push
mov
sahf
movsb
jns
test
jg
cs
out
and
popa
aad
stc
outsl
mov
adc
inc
fcmovnu
fs
pop
mov
in
inc
mov
sbb
mov
jecxz
jp
and
jecxz
xor
lds
psadbw
mov
mov
notb
sub
stos
insb
ror
mov
cmpsl
pop
fists
jmp
fxch
pop
orl
loope
test
js
ret
dec
das
mov
lds
sbb
jg
sub
push
fwait
les
jmp
sahf
into
stos
repz
out
or
jp
or
fndisi(8087
pop
movb
imul
push
jnp
sbb
push
xor
push
aam
mov
add
add
add
push
sbb
repnz
jg
es
sub
cmp
jo
das
xchg
clc
nop
xlat
jge
aaa
push
xlat
cltd
jne
les
pop
xor
pop
inc
daa
imul
add
push
ss
xchg
xchg
mov
sub
lods
jmp
sbb
jbe
outsl
icebp
sbb
lea
pop
push
jbe
lods
push
ds
mov
daa
movsb
adc
fiaddl
leave
dec
fs
dec
nop
lahf
mov
mov
fldt
xchg
out
push
mov
inc
jl
push
testl
mov
out
pushf
loop
daa
adc
adc
cld
push
insl
mov
sbb
and
and
popa
insl
ja
cmp
or
push
popf
loope
push
adc
cmpsl
arpl
mov
aam
jle
icebp
push
mov
cmp
in
mov
stos
test
push
test
imul
out
push
cli
sbb
add
push
aas
or
mov
dec
gs
cmp
add
add
add
xor
outsb
popf
aas
pop
add
adc
in
loope
mov
jg
mov
das
push
or
mov
mov
and
lret
pop
cmc
dec
enter
ret
les
jmp
add
fcom
dec
add
cwtl
inc
lea
sbb
pop
mov
ljmp
push
movsl
cmp
nop
mov
xchg
in
mov
xor
dec
add
inc
stos
pop
and
rol
pop
int
dec
pop
shlb
push
loope
jb
xchg
fiaddl
jne
add
mov
cwtl
adc
adc
loopne
xor
fimull
pop
push
mov
dec
cmp
dec
dec
aad
rcr
hlt
into
jns
imul
cmpsb
jp
int
or
movsb
fisttpl
jo
jge,pn
stos
dec
push
pusha
lea
andl
add
insb
fidivl
bound
pop
add
mov
add
add
add
leave
xor
repnz
xor
out
push
std
cs
adc
int3
adc
jbe
push
jb
adc
mov
or
push
sub
pop
cmpsb
sub
jecxz
int
jne
and
shlb
jb
ljmp
frstor
fists
and
cmp
or
std
inc
and
mov
adc
bound
inc
lret
or
dec
pop
mov
imul
fxch
mov
or
push
lock
orb
or
xorl
rolb
das
ds
sbb
jmp
negl
fstps
test
push
sub
pusha
movsl
jno
leave
jne
arpl
pop
ror
insl
adc
stc
cli
lahf
fwait
jns
jo
outsb
mov
mov
adc
mov
mov
adc
fistpll
inc
stos
and
inc
fstl
mov
push
roll
add
cmp
mov
jns
cmp
pop
mov
add
add
add
lock
jl
out
movsl
mov
aad
mov
outsl
cmpsb
xchg
sbb
int
incl
adc
fidivl
std
sub
ds
fidivs
rorl
test
lret
inc
xorl
jne
dec
mov
sub
popf
paddusw
mov
inc
dec
stc
jle
sub
mov
lret
xchg
lds
xor
insl
mov
add
jno
loopne
stos
jge
add
int3
jbe
rorl
outsl
pop
mov
scas
inc
xchg
sbb
inc
pop
mov
sub
cltd
scas
and
lock
and
insb
push
xorl
fcomps
in
sti
aam
inc
dec
mov
movb
mov
in
pop
dec
cs
xor
loope
jmp
sti
arpl
test
add
hlt
je
icebp
fst
xchg
call
call
cmp
pop
pop
mov
pop
xor
out
mov
and
add
int
fstp
iret
push
cmpsb
fadd
dec
daa
fwait
jecxz
lea
add
add
add
lret
addr16
inc
xchg
xchg
mov
dec
xor
inc
popf
dec
nop
xchg
mov
or
push
aad
ss
loopne
int3
pop
sub
pop
iret
sub
xor
and
rcrl
mov
mov
mov
lea
in
add
cmp
in
mov
cmpsb
adc
push
out
mov
fistps
repz
xchg
flds
fisttpl
xor
cmp
lea
loopne
in
lea
push
push
jp
jmp
jno
mov
ficompl
aas
inc
jl
or
adc
sbb
outsl
icebp
push
mov
jb
rolb
jmp
jge
inc
int3
addr16
scas
cwtl
sbb
loopne
jns
ret
je
mov
mov
arpl
icebp
mov
push
fldl
fs
jo
fistps
inc
jmp
and
mov
test
add
loop
add
add
adc
std
out
ljmp
mov
add
add
add
addr16
insb
ds
sbb
add
add
loope
pushl
and
and
stc
inc
ret
push
int
mov
mov
faddp
jne
loop
popa
mov
mov
cli
aam
xchg
loope
adc
int
mov
cs
aad
jge
inc
pop
and
cmc
test
xor
adc
adc
jne
inc
cmpsl
out
sti
rcll
pop
mov
loope
jbe
push
add
gs
sahf
negb
pop
lcall
pop
lea
insl
dec
and
popf
daa
popf
mov
scas
xchg
arpl
lods
js
rcll
nop
ret
lret
cmp
cld
xor
push
repnz
add
ret
jbe
shll
imul
stos
cmpsl
loopne
push
daa
jge
outsb
lods
movb
jl
lds
leave
xor
addr16
sbbb
jo
in
pop
fisttpll
and
pop
sti
lods
les
jnp
mov
icebp
addr16
pop
popl
add
add
add
in
or
loop
int3
and
scas
data16
in
pusha
in
mov
dec
push
xor
inc
js
es
and
sbb
pop
xchg
jmp
outsl
outsb
mov
aas
add
sbbl
xchg
xchg
call
xor
nop
pop
fimull
xor
in
in
out
cli
mov
mov
inc
nop
mov
cmpsl
mov
nop
je
inc
js
into
add
or
sub
pop
imul
mov
adc
inc
shr
cmpb
test
lea
insl
xchg
outsl
push
pop
inc
shrb
mov
and
mov
scas
lds
add
adc
sub
stos
test
dec
jnp
inc
jno
outsb
sub
mov
out
adc
cmp
lock
mov
sub
or
shrb
bound
jno
lahf
in
pop
data16
add
add
les
fcomps
add
cltd
mov
add
add
add
in
out
arpl
ja
xor
aaa
push
xchg
push
mov
inc
lods
sbb
orl
adc
mov
push
cmp
adc
into
dec
hlt
sub
cwtl
test
adc
push
push
loopne
aaa
and
repz
mov
xlat
aad
lock
sbb
and
or
jae
sub
adc
push
push
jmp
decb
inc
sbb
dec
dec
and
in
mov
push
xor
lahf
rcrl
aas
fcoms
insl
es
xchg
stos
pusha
leave
shlb
sar
mov
jg
jmp
cmp
dec
repnz
lea
popf
lods
cmpsl
mov
jl
insb
mov
push
xchg
or
inc
pop
and
roll
jmp
dec
jmp
mov
sub
pop
cmp
fwait
ret
in
mov
and
out
imulb
add
ljmp
dec
mov
adc
addr16
add
add
add
shr
lret
aad
scas
jne
sub
adcb
cmp
aad
mov
mov
in
sarb
or
lret
jbe
push
mov
loop
sbb
popl
out
or
push
aaa
mov
xchg
sub
mov
mov
lret
data16
cwtl
add
or
xor
push
aaa
mov
mov
dec
pop
dec
cmp
stos
xchg
into
fwait
push
std
mov
loopne
in
pop
imul
enter
mov
sbb
call
clc
pop
push
out
insl
sti
sbb
in
icebp
insl
sbb
hlt
pop
adc
mov
adcl
out
into
or
xchg
fisubrl
into
xor
leave
push
scas
adc
js
xor
xchg
je
cltd
pop
cltd
fxch
sub
cli
movsb
jl
js
push
push
jns
mov
imul
jmp
cmpsb
cmp
test
add
add
aaa
shlb
cmc
div
testl
addr16
add
add
add
inc
movb
mov
jb
insb
mov
faddl
pop
cmp
cltd
xor
fcmovu
mov
and
jge
icebp
jb
sub
xor
sub
std
mov
push
or
or
popf
aad
push
sbb
xor
lods
push
pop
das
mov
cmovs
add
mov
push
out
jo
adcl
pusha
fcomp
xor
pop
ret
leave
mov
imul
mov
cmpsl
inc
pop
mov
fcmovbe
test
aaa
repz
loop
push
roll
mov
inc
cmp
inc
inc
sub
mov
mov
cli
inc
stos
cwtl
in
lods
fldenv
arpl
popa
je
xlat
xor
loope
and
sub
loope
mov
ja
pop
imul
mov
pop
out
ret
push
mov
pop
clc
lods
lcall
mov
fimull
fstps
xchg
arpl
add
add
push
sahf
rcr
pop
adcb
rcll
add
add
add
popa
into
int
sbbl
and
xchg
jno
push
pop
aad
sub
pop
add
fildll
div
fsubs
sub
lods
xchg
les
pop
ret
xlat
cld
lea
mov
sub
or
inc
sub
and
arpl
xchg
inc
jae
cmp
addb
negl
inc
inc
xchg
push
inc
or
inc
dec
andl
icebp
sbb
fwait
test
cs
dec
lea
lret
test
sub
jns
in
dec
pop
cmc
addl
sbb
fwait
stc
nop
push
cmp
stos
pop
mov
and
push
dec
xor
les
mov
pop
or
xchg
and
xchg
cmp
mov
pop
sti
inc
inc
mov
sbb
fnsave
das
xorb
xchg
jecxz
fdivrs
dec
shll
mov
enter
mov
add
add
arpl
cmpsb
jcxz
fimull
addr16
add
add
add
movsl
mov
sbb
pop
shll
out
movsb
jnp
in
cmpsb
dec
andl
dec
push
or
cmpsb
cltd
stos
jns
jns
sub
xor
xchg
mov
sarb
inc
xchg
sub
roll
lock
sub
pop
jg
ret
int
data16
dec
cmc
into
jbe
pop
cs
fdivs
xor
sahf
xchg
mov
sub
out
mov
ret
fimuls
mov
es
icebp
adc
or
int3
ficompl
lods
addr16
rol
pop
cmc
pop
pushf
ffree
or
inc
int3
repz
call
jnp
jle
add
or
or
mov
popl
mov
lock
inc
cmp
add
inc
push
xchg
stos
stc
lret
pusha
lock
imul
mov
inc
push
jnp
and
and
xchg
jne
loope
mov
add
jb
std
into
int
test
inc
cli
das
cmpb
test
adc
push
repz
clc
jnp
jg
in
cli
enter
dec
pop
in
xchg
add
add
add
subb
stc
inc
test
mov
cs
dec
and
dec
data16
mov
cmc
jp
add
lods
pop
or
adcb
dec
inc
or
stos
hlt
dec
and
aas
sub
push
aad
xchg
mov
xchg
out
lret
out
and
ss
mov
adc
mov
dec
mov
cmpsb
push
aad
sbb
aaa
dec
adc
inc
imul
cwtl
add
mov
or
pop
arpl
mov
jbe
push
inc
aaa
loopne
xor
fisttps
aad
frstor
mov
mov
dec
dec
xchg
dec
sub
filds
dec
rorb
pushl
adc
clc
xor
mul
out
mov
jl
lahf
mov
mov
push
pop
and
pop
inc
cltd
adc
insb
jae
inc
pop
adc
repnz
ja
and
pop
pusha
inc
ljmp
cld
gs
mov
addr16
add
add
add
jge
arpl
sbb
pop
rorl
mov
mov
adc
in
mov
pop
push
movsl
dec
dec
adc
fcoms
test
push
cmp
or
out
jnp
xchg
test
add
outsb
add
fcoml
out
lock
aam
or
das
or
int3
lahf
testb
aas
ds
adc
add
test
pop
push
loop
xchg
imul
mov
call
cld
xchg
addr16
push
cltd
sub
fstpl
mov
or
xchg
rorl
xor
sub
fwait
int
jnp
lahf
inc
leave
call
push
shrb
inc
push
lods
out
xor
push
adc
add
jge
sbb
lahf
shl
jno,pn
push
ljmp
cld
or
xor
mov
mov
xchg
into
or
and
xchg
xor
add
add
jl
sar
std
jle
pop
popf
scas
pop
aam
xchg
addr16
add
add
add
ret
pop
push
test
icebp
inc
and
or
int3
mov
cmp
out
aad
clc
push
lahf
cli
mov
addr16
in
inc
ret
mov
adc
mov
mov
iret
xor
xor
fcoms
inc
cmc
mov
inc
adc
imulb
jmp
pop
xlat
mov
or
imul
jmp
aam
cmc
xchg
lcall
adc
mov
jnp
daa
add
mov
gs
add
pop
popa
jne
stc
dec
jo
xor
inc
shlb
lret
repnz
lcall
pop
cmp
mov
xor
testb
fcmovnu
push
enter
xor
sbb
hlt
mov
adc
pop
ficoml
stos
cmp
lds
test
fimuls
jle
add
add
cwtl
or
stos
xchg
cmp
in
mov
andl
cwtl
add
add
add
insl
insl
adc
std
mov
imul
lock
jo
lock
xchg
xor
cmp
mov
daa
xor
jmp
jbe
inc
jmp
pop
fcmovnbe
sbb
ja
repnz
cmpsb
pcmpgtb
loopne
maxps
lret
test
in
mov
jge
hlt
sub
or
jne
pop
add
cli
mov
in
dec
xlat
mov
push
and
pop
xchg
xor
lea
xchg
xchg
cmpsb
pusha
orl
push
cmpsb
into
mov
stos
movsb
ja
or
mov
mov
jg
in
in
pop
xchg
jmp
adc
nop
movsb
pop
or
pop
stos
mov
cmp
mov
outsl
lret
jecxz
or
pop
mov
daa
je
clc
jb
in
cmpsl
xor
push
xchg
icebp
push
mov
outsl
xlat
adc
fwait
and
popa
mov
xorl
addr16
add
add
add
mov
imul
sbb
fmull
repnz
mov
repnz
insb
int3
lea
pop
xor
add
push
jb
jae
or
mov
repz
jmp
lahf
adc
data16
hlt
pop
jae
pop
fdiv
test
pushf
fcompl
addr16
aam
mov
cmp
adc
xor
fadds
roll
and
dec
mov
inc
jnp
add
dec
fs
ja
int
pushf
invd
pop
shlb
nop
cmc
sbb
mov
popl
or
fidivrs
imulb
mov
sub
mov
adc
in
jno
push
loopne
mov
cltd
clc
add
push
sub
lret
cmpsb
cmc
and
mov
mov
sub
int
dec
inc
adc
gs
popl
bound
mov
jg
mov
sbb
xchg
call
add
dec
std
out
xlat
aas
dec
sbb
or
addr16
lods
out
and
fdivp
loopne
adc
outsl
push
in
lcall
or
inc
adc
shlb
mov
xchg
ret
ss
mov
cmp
sbb
nop
add
fdivl
inc
insb
push
sbb
inc
or
push
aam
mov
call
inc
or
pop
daa
int3
scas
pusha
pop
push
xchg
sar
dec
das
jg
movsb
aam
sub
jns
push
pop
pop
mov
fwait
cmpsl
sbb
subb
outsl
sarl
push
mov
sbb
pusha
lret
enter
bswap
int3
rep
or
sbb
jae
sbb
push
push
das
pop
lock
idivl
jecxz
inc
popa
inc
and
sbb
mov
jae
mov
jmp
xchg
xchg
xchg
xchg
ret
add
xchg
aaa
add
nop
jle
sub
and
movsb
sti
mov
pop
test
lods
imul
outsl
vmwrite
dec
addr16
add
add
add
mov
mov
hlt
pushf
mov
imul
sahf
cmpsb
repz
in
loopne
loope
push
cmp
daa
call
aam
mov
enter
ret
xor
xchg
nop
imul
jns
rorb
into
and
mov
cld
xchg
cmpsb
dec
xchg
ss
mov
out
out
mov
das
lds
sub
lahf
popa
inc
insl
inc
mov
mov
xlat
or
sbb
sbb
aaa
outsb
push
imul
push
dec
jmp
cwtl
mov
js
push
mov
sbb
ljmp
push
adc
jbe
dec
dec
xchg
pop
sahf
enter
cwtl
hlt
lock
and
inc
pop
sub
push
stc
movsb
loop
push
lods
cmp
test
insl
pop
dec
mov
pop
or
dec
xchg
jb
out
jecxz
and
add
popa
aas
pop
pop
pop
jne
and
lds
adc
sbbl
popl
loopne
addr16
add
add
add
push
cmp
push
push
mov
xchg
rol
or
cmp
cmp
sbb
sbb
and
mov
arpl
scas
cli
xor
lods
test
fdivr
xchg
pop
mov
xchg
inc
repz
shll
and
sub
orl
sbbl
cmp
dec
adc
xor
test
xor
adc
push
lds
xchg
rcrl
cli
out
xchg
sar
iret
pop
outsb
xor
insb
adcl
mov
lret
and
sub
dec
adc
adc
and
outsb
aam
ds
pop
mov
movsl
mov
sbb
outsl
sti
adc
call
sbb
mov
xchg
pop
ficoms
add
stc
mull
jl
loop
dec
jnp
and
sub
divl
add
mov
imul
movsb
and
call
popf
add
add
add
out
jno
shlb
and
int3
aas
jo
and
dec
aas
inc
xor
fcoml
and
cmc
mov
dec
push
lea
loopne
push
test
cld
push
js
lods
or
and
xchg
adc
sarl
pop
xchg
roll
enter
inc
lods
sbb
xor
cmpsl
push
into
in
add
push
xorb
out
xor
bnd
nop
push
addb
jb
les
lock
xor
notb
or
jge
nop
pop
cmp
lods
shrb
sbb
lret
xchg
jge
insl
shrb
dec
jp
fcmovu
push
dec
sbb
sub
dec
cmp
sub
ret
test
jl
cmpsb
push
jo
imul
loop
inc
push
pop
jno
xor
mov
push
cmp
xor
jle
sahf
and
xor
add
mov
sub
lahf
mov
sahf
add
add
add
lcall
sbb
xchg
fwait
mov
add
mov
fld
imulb
cmp
fildll
push
scas
xchg
pop
mov
sub
inc
testl
cs
nop
jecxz
mov
in
lods
test
gs
inc
ljmp
add
mov
sti
outsb
shlb
subb
les
jle
push
lret
int
pop
icebp
ja
push
adc
lcall
test
adc
jmp
pop
cld
or
mov
lret
iret
cmpl
pop
sub
dec
dec
hlt
vaddss
jbe
and
fdiv
jb
xor
xchg
stos
repz
mov
push
jge
repz
leave
je
leave
jne
mov
shrl
xchg
pop
pushf
mov
push
push
mov
or
dec
or
mov
dec
ja
clc
cs
mov
test
jno
and
int3
push
dec
or
add
add
ja
out
inc
sub
or
push
mov
addr16
add
add
add
adc
jnp
jns
pushf
xchg
ds
lret
gs
idivl
inc
jp
movsb
cmpsl
cmp
or
sub
xchg
pmullw
inc
icebp
xchg
inc
xchg
pop
lds
add
ret
or
add
faddl
iret
dec
aas
bndldx
inc
pop
loope
gs
and
adc
ret
fmul
add
jl
mov
mov
sti
xchg
xlat
mov
mov
test
sbb
clc
lds
jne
cli
mov
adc
jne
cltd
mov
and
or
std
cmp
mov
xchg
xor
xchg
sahf
cmpsb
push
push
in
icebp
and
ret
or
cmpsb
ljmp
loop
sbb
inc
test
dec
imul
pop
mov
arpl
divb
inc
sahf
movsl
mov
in
outsl
jge
sub
mov
mov
data16
add
loop
test
mov
cld
mov
addr16
add
add
pushf
mov
xor
pop
cmp
andl
fstps
push
push
sub
sub
add
lock
lods
inc
cltd
les
pop
xlat
push
test
mov
or
push
mov
clc
mov
out
int3
stos
dec
sub
jmp
pop
lods
iret
dec
psubw
xchg
and
mov
xor
stc
movsb
pop
int3
mov
cmp
std
insl
adc
out
icebp
mov
rcrb
xchg
rolb
outsb
push
fidivrs
cmp
dec
dec
mov
pop
jmp
ficomps
fldt
push
aad
mov
sub
and
int3
pushf
enter
mov
js
in
sub
inc
cmc
daa
popf
lea
fistpll
stos
addl
or
xchg
sbb
addr16
dec
sti
test
rdtsc
je
arpl
cwtl
pushf
rcl
or
lcall
mov
add
add
add
push
movsb
sub
jo
mov
lahf
movsl
xor
lds
aas
mov
ret
loope
dec
mov
jmp
jmp
mov
cmp
push
xor
inc
pushf
lods
ljmp
call
or
decb
push
sti
sub
clc
stos
fistl
shl
mov
push
inc
call
clc
xchg
lahf
push
loope
mov
jne
push
cmc
adc
push
ss
mov
sbb
loop
or
andl
sub
icebp
cwtl
cs
aas
cltd
inc
pop
dec
outsb
les
cmc
mov
dec
cmc
xchg
test
jp
mov
xchg
loope
add
stc
mov
or
iret
xchg
mov
nop
sub
loope
dec
inc
jl
js
or
inc
leave
cmp
sti
add
fisubrs
test
or
add
add
mov
inc
inc
add
mov
add
lret
inc
mov
pop
std
js,pn
mov
or
add
add
pusha
adc
xchg
and
xor
mov
or
or
aam
push
or
stc
in
add
jne
lret
push
movb
mov
mov
adc
jnp
and
lret
sbb
adc
jne
rcr
movsb
je
push
repnz
in
out
jge
dec
int3
leave
jge
movb
xchg
mov
cmp
test
pop
cmp
cltd
adcb
insb
push
push
lock
adc
sub
jp
movsl
mov
pcmpeqd
jns
mov
fildll
cmpsb
jae
dec
sub
test
and
movsl
fisubrs
int3
dec
iret
idivl
mov
jg
addr16
jg
fstpt
cld
in
popf
imul
jb
imul
sbb
or
dec
sub
hlt
int
xchg
mov
add
or
sbb
inc
mov
movsl
aam
mov
add
outsl
mov
push
inc
std
nop
in
mov
sub
fidivl
adc
outsl
inc
in
add
xor
push
sbb
adc
sbb
pusha
adc
push
cmp
jo
fwait
jno
push
cmp
mov
test
gs
outsb
iret
and
adc
outsb
lahf
adc
jmp
pop
mov
xor
pop
movsb
and
jecxz
test
or
sbb
and
sub
jbe
pop
mov
movsl
pusha
mov
nop
jge
std
inc
std
push
push
outsb
das
push
mov
cmp
sti
sbb
add
dec
or
add
sbb
push
mov
repnz
cld
cmp
and
in
fwait
pop
pusha
cld
scas
pop
or
test
pusha
adc
or
rorb
push
and
sub
mov
out
jns
jecxz
jmp
int
sti
out
mov
add
push
inc
fdivl
push
dec
mov
movsb
add
add
add
movsl
sbb
popa
jbe
out
call
xor
push
pop
nop
cmp
inc
sbb
fisttpl
sub
push
push
pop
out
bound
aad
push
addr16
in
dec
push
jb
push
imul
es
and
icebp
stos
mov
jae
pop
mov
cmp
or
iret
imulb
pop
jae
pop
adc
shrb
push
mov
test
adcl
pop
mull
xor
rcrl
test
mov
sbb
mov
cmp
fld
xchg
ja
in
int
sbb
xchg
movsb
pop
sub
xchg
rorb
repnz
in
push
cs
dec
dec
call
sub
loop
rorb
das
push
insb
mov
mov
test
mov
cmp
aam
jl
lret
adc
call
add
add
sbb
mov
sbb
dec
sbb
add
add
add
mov
ret
add
adc
gs
cwtl
es
lea
bound
test
fwait
repnz
test
cmc
scas
insb
fildl
mov
in
add
pusha
icebp
inc
inc
push
xchg
push
mov
pop
add
push
lods
xchg
jno
leave
dec
push
rolb
int3
sahf
in
orl
movsl
xor
mov
mov
dec
push
mov
int
scas
enter
out
mov
sti
and
mov
pop
push
ds
and
jnp
enter
jb
insb
mov
adc
lods
cmpsb
xchg
push
shrb
movsb
adc
lock
bound
xchg
pop
lds
insb
mov
leave
push
jp
mov
cmpl
jp
jbe
pop
scas
jle
pushf
scas
cli
xchg
js
dec
cmp
mov
and
mov
jle
pop
push
mov
lock
adc
adc
test
pop
test
stos
hlt
jmp
cmp
jbe
lods
das
int3
sbb
cmpsb
add
add
add
push
xchg
xchg
push
fldt
push
xchg
cs
mov
fmuls
jecxz,pt
add
pop
mov
xor
sti
pop
mov
jmp
int3
sbb
out
sub
lock
and
mov
mov
mov
cmp
add
insb
stos
fsubs
sub
mov
dec
dec
adc
data16
aas
andl
sti
xlat
movsb
test
jmp
ds
rcrb
add
mov
fisubl
jp
xchg
aam
dec
enter
cmp
cltd
fistps
lahf
xchg
cmc
aas
xchg
dec
and
out
dec
and
jg
movsl
mov
repnz
outsb
dec
js
shrl
inc
repz
xlat
jg
mov
test
outsb
les
push
jge
sub
push
fnstenv
pop
xchg
das
jae
jl
rep
xor
outsb
test
popa
hlt
push
xor
lea
shrb
add
push
nop
out
xlat
out
jg
in
xor
fsts
test
cmpsl
add
add
add
pop
cmp
xchg
loopne
and
sbb
cs
pusha
jne
nop
movsl
add
sub
jp
mov
cltd
mov
testb
aam
jb
jmp
push
dec
sahf
xor
iret
imul
movsl
inc
push
push
xor
insb
scas
and
sti
shrl
pushf
jbe
jbe
decl
xchg
xlat
in
adc
xchg
adc
jl
jno
xchg
jp
sub
imul
imul
inc
cld
jno
xchg
lods
test
insb
jb
inc
mov
insl
xchg
sbb
mov
fwait
inc
jge
lods
pop
or
mov
adc
mov
sti
pop
repnz
rclb
xor
jns
sub
lods
push
sti
aam
mul
push
inc
repz
xor
dec
xchg
gs
mov
or
adc
sub
leave
ja
in
add
add
mov
inc
fwait
lds
jo
fldl2e
in
enter
test
add
add
add
sahf
xchg
and
jne
cmp
jns
inc
repz
inc
inc
lds
dec
or
sbb
xor
lods
cwtl
lahf
jle
imul
imull
xlat
lret
mov
mov
fistpl
ds
mov
scas
fcoms
add
pop
fcmovnu
jl
mov
sub
xor
test
sahf
repz
pop
sub
mov
int3
loop
cmp
cli
cmp
pop
xor
bound
pushf
inc
sbb
xlat
mov
jmp
and
cltd
aaa
cmp
sub
aad
negl
push
dec
sahf
sub
scas
clc
add
out
sub
repnz
es
cmp
mov
inc
xchg
adc
clc
mov
ret
push
rcll
pop
add
lods
fiaddl
xchg
fstp
jl
int3
xor
lcall
std
inc
jne
subl
add
add
add
or
xor
add
outsl
xchg
call
dec
lock
icebp
sbb
and
repnz
adc
cli
test
ljmp
outsb
cmp
push
xchg
nop
stc
imul
dec
sub
pop
cltd
test
jno
in
lahf
out
mov
jb
sbb
adc
fisttpl
dec
pop
mov
mov
xor
jecxz
inc
neg
lcall
test
daa
pop
idivl
addr16
pusha
mov
mov
cltd
xor
xor
xchg
movsb
adc
ficompl
pusha
inc
enter
xorl
scas
push
mov
dec
xlat
scas
lock
jns
mov
idivl
jno
insb
aad
push
popa
mov
cmp
xchg
in
push
cmp
in
dec
rcrb
fidivl
mov
sbb
popf
jb
je
lds
xchg
push
xor
dec
outsl
lock
inc
rol
icebp
inc
sahf
add
test
push
sbbb
lret
jnp
sti
jmp
push
mov
testb
hlt
mov
add
add
cli
or
testl
cmpsl
pop
sbb
inc
fistpll
adc
push
insb
cli
dec
jp
push
and
cmp
bound
or
ds
adc
pop
das
lcall
pop
loopne
stos
mov
fwait
mov
push
jne
scas
dec
mov
es
sub
jle
add
pop
pop
and
cltd
cmp
and
rorl
movsl
jg
loopne
clc
fcomp
sub
dec
arpl
xor
int3
xchg
aas
in
je
jb
cltd
lods
add
fstpl
std
push
cmp
mov
stos
aas
adc
lret
xchg
ja
jo
mov
adc
outsb
pop
add
mov
jno
int3
jo
stos
rol
add
es
sbb
pushl
pop
aam
xor
adc
pop
pop
movsb
fucomip
nop
or
xor
pushf
inc
addl
cmc
xor
xor
in
out
mov
pop
js
jge
pop
xchg
pop
mov
jecxz
lock
mov
add
add
add
pop
cmpsl
jno
sbb
push
and
cmp
std
cmp
pop
dec
mov
xchg
inc
in
dec
fists
xchg
xor
add
mov
pop
push
dec
add
jecxz
and
das
push
sub
daa
jae
push
xor
fwait
mov
xchg
pop
or
adc
mov
in
sbb
jnp
pop
sub
lds
ja
dec
insl
outsb
adc
inc
scas
jl
int3
fsubl
ljmp
push
sahf
pop
inc
addr16
xor
je
jg
or
loopne
lret
loop
iret
ds
ret
jge
pusha
das
push
push
dec
xor
fildll
fidivs
sbb
cmpsb
out
sbb
arpl
pusha
sbb
push
sub
dec
out
add
xchg
popf
cmp
xor
mov
loope
mov
mov
adc
sbb
cmp
cmp
je
adc
cmc
add
inc
outsb
xchg
sbb
add
mov
cld
mov
leave
je
lods
add
add
add
popa
mov
cmp
insl
sbb
or
aad
das
and
push
jo
sbb
int
adc
adc
cmp
adc
test
aam
in
mov
add
jb
lock
inc
jnp
mov
cs
dec
cmp
mov
popa
mov
pop
jbe
mov
dec
push
jns
aad
test
xor
mov
sbb
hlt
sarl
inc
ljmp
xchg
je
rcll
or
pop
xchg
mov
and
js
mov
int3
mov
pop
adc
pop
das
dec
push
je
test
arpl
lock
aas
jle
adc
mov
push
lahf
jns
movsl
and
mov
popa
push
sti
ja
inc
arpl
cmp
aad
push
cmp
imul
sub
mov
xor
xor
push
xchg
fwait
jle
mov
mov
dec
das
pop
out
cmc
mov
adc
push
push
lods
add
add
add
fbld
movsb
push
in
mov
mov
jns
xor
cmp
dec
scas
mov
ds
sub
adc
mov
cmp
push
xor
icebp
or
popa
adc
lret
bound
pop
or
cmp
lock
lret
push
shll
orb
pop
push
sub
mov
and
cmp
repz
lahf
push
cmpsb
pop
pop
push
into
sbb
pop
mov
gs
test
leave
xor
jnp
sti
ror
lahf
and
add
rcr
add
adc
xor
sub
lcall
in
xor
clc
cmp
pop
cmp
das
repz
cltd
push
mov
xchg
xor
cmp
fs
push
mov
mov
jl
ds
sub
lret
lret
sar
and
loopne
sahf
dec
dec
ret
in
xchg
inc
inc
xor
out
sbb
jbe
inc
rol
pop
popa
mov
sbb
je
cmpsl
cmp
fucomip
std
dec
std
pop
lcall
xchg
pop
push
das
xor
lret
add
add
add
ja
jmp
ret
insl
mov
out
gs
rcrb
ret
xchg
dec
mov
rolb
gs
cmpsl
jbe,pt
rcrb
es
jae
mov
push
xchg
lea
push
shrl
sarb
or
pop
arpl
mov
andb
and
jne
jne
jge
xchg
js
je
sahf
add
stos
fbstp
pushf
jmp
mov
loop
and
int
sti
cwtl
les
or
mov
xchg
stc
pop
xor
sub
jb
lods
sub
jl
or
fwait
dec
test
repz
xor
pop
sub
and
fnstenv
pop
roll
fs
into
mov
pop
mov
pop
mov
fimuls
or
xchg
mov
add
pop
test
test
mov
mov
insl
sbb
movsl
test
iretw
out
push
sub
push
fidivs
loop
ljmp
xor
shlb
add
add
add
daa
mov
push
fisubs
cmp
mov
js
adc
pop
popf
mov
jae
lods
in
sbb
lret
mov
setno
aam
fildll
subl
clc
iret
mov
lods
fistps
mov
arpl
sub
in
mov
inc
mov
int3
jecxz
sub
test
mov
stc
and
repnz
sahf
enter
stc
daa
ret
and
or
test
push
jp
mov
out
movsl
and
sub
or
andl
mov
fwait
cmp
or
addr16
push
xor
add
movsl
jl,pt
pop
test
mov
cltd
cwtl
rol
sbbb
cmp
sbb
fisttpll
loope
call
add
fldpi
adc
les
cmc
xor
mov
dec
or
inc
inc
lock
and
add
push
xchg
jg
jmp
std
mov
in
movsb
pop
addr16
add
add
add
xchg
repz
jno
std
mov
mov
lret
enter
gs
test
test
incl
mov
jb
jge
lods
adc
enter
fs
mov
ljmp
jb
clc
iret
movsl
jbe
nop
add
out
cwtl
scas
cli
mov
xor
lahf
inc
pusha
xor
dec
pop
adc
mov
push
xorb
xchg
or
pushf
dec
hlt
jns
mov
popa
xlat
and
inc
jns
xchg
pop
popa
inc
inc
push
arpl
fadd
aam
inc
cld
cwtl
out
dec
or
add
daa
lret
jmp
jg
pop
push
mov
mov
fidivrl
jb
adc
add
dec
sbb
shl
xchg
je
testl
add
xchg
push
mov
scas
repz
test
jo
add
xchg
nop
jecxz
insl
mov
push
divb
inc
mov
sub
addr16
add
add
add
ja
cmp
test
popa
mov
test
in
cmp
push
mov
add
jbe
inc
pusha
sti
cmp
insb
out
int
or
inc
lods
ror
xor
pop
mov
repz
inc
inc
pop
and
add
cmpsl
outsb
add
pop
imul
cld
push
xchg
ficoms
sti
aas
adc
sub
stos
popa
jg
push
mov
sub
scas
repz
hlt
adc
ret
repnz
scas
xchg
push
push
jge
or
in
pop
mov
pop
add
icebp
cwtl
pusha
push
fs
adc
ljmp
pop
xchg
call
jnp
lds
or
in
ja
cmp
daa
or
outsb
and
lock
xchg
inc
adc
nop
cli
adc
lods
icebp
cmpsl
push
add
push
pop
mov
xor
sub
push
pop
xor
cmp
inc
call
movsb
addr16
add
add
add
hlt
jae
push
mov
mov
filds
xor
enter
ljmp
frstor
mov
jae
jmp
les
loope
and
fsubp
sub
push
js
jne
add
scas
or
add
lret
sub
push
push
int3
xchg
bound
pop
and
and
or
pushf
or
in
cld
jp
xchg
repnz
inc
in
outsl
in
adcb
pop
jbe
adc
popa
jnp
sarb
out
dec
xor
adc
sub
subl
in
add
mov
movsb
iret
xchg
cwtl
sub
negl
dec
out
inc
dec
cs
xchg
dec
xchg
nop
jmp
es
xor
push
cs
sti
mov
xchg
lret
rclb
or
mov
fisttpll
in
stos
mov
sarb
rolb
sbb
pop
inc
je
xchg
xchg
sbb
je
test
sub
add
es
les
mov
arpl
ret
mov
add
add
add
sbb
cs
jle
xor
ss
dec
lods
inc
sbb
jp
ja
cmpsb
pop
xor
jo
xor
aad
lea
cmc
daa
jl
cltd
sbb
xchg
fwait
mov
mov
sub
pop
test
sub
hlt
jecxz
jl
jmp
push
xor
add
mov
popa
iret
movsb
adc
xchg
mov
shlb
cmp
test
or
pusha
faddl
pop
je
sti
inc
and
jg
adc
es
jg
xor
adc
jbe
ret
imul
repz
pushf
stos
cmp
push
cmpsb
xlat
and
or
imul
sti
daa
sub
addr16
ljmp
out
imul
insl
xchg
pop
fcoml
lods
rcll
dec
inc
mov
sub
cli
std
ret
cmp
test
jbe
inc
dec
or
pop
stc
out
push
pop
bound
ja
mov
add
add
add
inc
dec
mov
jnp
outsl
repnz
repz
jo
daa
cmp
je
and
mov
dec
xor
mov
cwtl
or
jnp
jecxz
popf
es
das
dec
and
pop
pusha
mov
sub
pop
mov
push
or
lea
jns
mov
mov
pop
pop
dec
outsb
pop
pop
mov
and
nop
jmp
ret
lret
jge
xor
aam
inc
lods
mov
sub
nop
add
adc
jne
imulb
sub
and
jae
cmp
cmp
push
adc
xor
jbe
add
push
aas
inc
dec
lock
daa
ds
insl
out
sbb
movlps
inc
push
xor
mov
mov
jg
or
xchg
test
cli
bound
pop
sub
add
adc
inc
dec
imul
lds
cli
lcall
push
addr16
add
add
add
add
lods
aaa
add
out
mov
mov
adc
push
dec
sti
jp
test
mov
mov
sti
xchg
cmp
xchg
sub
clc
cmp
pop
int3
pop
push
rcll
jge
addr16
aaa
dec
testl
or
ret
movsb
sbb
or
inc
shrb
mov
test
movsb
sub
dec
xor
ret
aad
mov
aad
pop
rcrl
imul
outsb
aam
pop
les
mov
sub
es
mov
mov
sub
sub
lock
pop
sub
dec
xor
jge
adc
pop
sarl
adc
mov
pop
repnz
cmp
fucom
or
or
xchg
rcrl
xor
mov
mov
jl
leave
mov
addr16
test
xchg
test
iret
sub
xor
add
jne
mov
int3
insb
lret
push
cmp
add
add
add
mov
dec
movsb
hlt
pusha
js
test
leave
mov
decb
pop
mov
cmp
push
jmp
xchg
mov
rcrb
add
aas
adc
out
and
add
or
add
or
in
sti
or
fxch
dec
aas
xor
mov
popf
stos
mov
mov
ret
mov
bound
sbb
ljmp
pushl
rcrb
rorb
js
mov
ljmp
mov
pop
push
xchg
pop
mov
and
mov
or
enter
mov
sbb
fcmovnb
add
enter
xchg
xchg
call
out
jge
mov
rorl
fstp
push
adcl
fmuls
cmc
push
adc
ficomps
and
loop
push
bound
shll
mov
dec
lret
add
add
pop
sbbl
fstp
rorl
xor
addr16
add
add
add
xchg
lret
jnp
add
sbb
mov
mov
jnp
mov
mov
xchg
xor
mov
inc
sub
xor
fdivs
pop
dec
inc
fsubr
cltd
mov
stc
xor
roll
xchg
inc
test
nop
mov
cmpsl
hlt
dec
lds
ds
xchg
test
add
lods
test
mov
adc
jg
sub
cmp
jmp
movsb
or
pop
jp
outsl
insl
out
adc
xor
dec
mov
enter
fstps
inc
dec
push
das
repnz
out
ret
ss
push
xchg
ret
push
and
orl
dec
sti
fisubrl
mov
or
mov
sub
xchg
add
and
and
mov
add
cltd
dec
push
cmpsl
jecxz
test
outsb
xchg
arpl
push
fs
inc
mov
repz
mov
add
add
in
mov
jecxz
out
mov
and
addr16
add
mov
shl
pop
mov
push
xor
mov
sbb
mov
pushf
pop
roll
test
stos
xorb
fcoms
push
mov
orb
mov
inc
imulb
in
inc
js
scas
callw
das
adc
fiadds
dec
push
shl
xlat
out
xor
negl
and
mov
or
adc
sahf
inc
rolb
pop
lahf
dec
pop
xchg
stc
decb
incb
daa
movsb
xchg
jecxz
cmp
stc
pushf
mov
rorb
jmp
and
ljmp
push
mov
shll
sbb
pop
in
scas
and
adc
add
loop
push
out
cmp
xor
andb
into
pop
xor
in
int3
adc
sub
jl
push
cmp
jp
cmp
cmp
das
mov
in
add
popa
push
xchg
test
jg
into
lret
orl
add
add
notb
movsl
loop
and
cli
fnsave
mov
js
inc
hlt
xorb
lret
cmp
repnz
cmpsb
adc
pop
xor
ljmp
insb
mov
dec
add
aad
and
roll
and
inc
jmp
mov
hlt
pop
or
in
xchg
mov
shll
and
jae
int3
addr16
push
adc
mov
jnp
frstor
xchg
sbb
adc
sub
mov
nop
cmp
sub
xlat
cltd
or
dec
das
mov
out
lods
mov
mov
mov
icebp
andb
insl
sub
mov
lock
jmp
xor
adcb
or
in
sub
rcrb
cmpsb
lea
or
rcl
ss
nop
mov
stos
pop
ficoml
ss
call
lods
xchg
clc
cmp
repz
push
push
push
push
jle
lock
in
lcall
jae
dec
mov
push
inc
or
add
add
add
es
adc
adc
ret
and
testb
imul
xchg
inc
pop
lock
icebp
test
insl
in
and
dec
outsl
or
inc
mov
ret
mov
stos
fildl
pop
hlt
or
push
push
dec
push
or
aad
xchg
push
jmp
adc
mov
rolb
loop
push
std
push
sbb
and
inc
jmp
shl
push
ja
mov
cmp
cmp
mov
test
mov
stc
and
push
xlat
cmp
sbbb
xor
js
xchg
and
test
repnz
scas
rorb
push
lods
jno
cmc
addr16
xor
mov
dec
loope
mov
test
mov
sub
gs
push
xor
insl
pop
fmull
test
int
lret
mul
js
inc
mov
cmp
into
pop
and
mov
sbb
aaa
inc
test
ss
je
mov
add
add
sub
jg,pt
dec
arpl
call
add
add
lds
sub
jg
jne
mov
adc
pop
push
out
lret
in
push
sbb
jle
call
ret
lds
inc
movsb
inc
ss
loopne
cmc
pop
fildl
sbb
ja
jne
sbb
mov
rcll
mov
push
xchg
daa
push
and
es
sub
pop
fs
in
sbb
adc
adc
aaa
and
push
lods
out
mov
ds
inc
imul
jp
imul
jns
pop
push
pusha
out
push
pop
int
inc
sbb
ffreep
xchg
xor
and
js
inc
push
cld
dec
scas
in
adc
add
xor
addr16
mov
call
cld
test
or
rep
pop
xor
add
inc
cmp
das
outsb
popf
sbb
aam
sbb
lds
and
and
cmpsb
test
in
mov
int
and
loopne
adc
notb
insl
sbb
outsl
mov
fcmovb
clc
push
addr16
add
jl
shlb
in
mov
xor
outsl
cmp
xor
out
repz
arpl
push
or
sub
xlat
and
pop
add
dec
cltd
sub
adc
out
jno
xor
cmp
notb
shlb
push
or
jno
lahf
movsl
add
cmpsb
cmpsl
lea
lock
call
xor
int3
lret
in
pop
xor
inc
mov
add
out
ret
xor
adc
mov
push
cmp
jbe
imul
add
and
sar
adc
cmc
adc
jecxz
dec
jl
mov
adc
fldenv
or
mov
dec
fadds
push
outsb
and
adc
jb
xchg
mov
ds
adc
into
scas
pop
shr
fbld
or
mov
inc
ja
xor
mov
call
inc
pop
loope
jne
mov
call
or
xor
mov
pop
mov
and
addr16
add
pop
addr16
mov
push
add
xlat
testl
sbb
jo
xchg
mov
dec
mov
mov
insl
popf
sub
mov
movsl
inc
fwait
mov
fs
jge
dec
fwait
loop
shll
ret
mov
add
dec
sahf
ss
xchg
cmpsl
fldt
fcoml
roll
mov
xchg
lods
movsl
jle
incb
cmp
sbb
xlat
gs
clc
rcl
enter
sarb
insl
mov
faddl
js
std
mov
shll
jnp
mov
sbb
xor
fimull
lahf
cmp
aad
sarb
ja
cwtl
in
shrl
cmp
mov
cmp
outsl
popf
mov
mov
push
cwtl
adc
movsl
pop
jmp
xor
mov
inc
hlt
std
jg
fdivrl
pushf
insl
flds
mov
xchg
sbb
add
xor
stos
imul
add
fistpll
call
mov
loop
mov
add
cmp
mov
lahf
or
fdivrl
iret
pop
scas
adc
mov
notl
pusha
out
or
stos
and
add
outsl
add
sbb
mov
out
jns
sub
pop
sbb
push
xor
mov
sub
in
xchg
cltd
stos
dec
inc
xchg
xlat
mov
shl
xor
mov
loope
insl
lds
mov
cs
outsb
dec
pop
out
jle
mov
movsb
in
incl
jno
xchg
sub
sub
adc
repnz
sub
mov
lcall
and
mov
movsl
dec
lds
das
add
jmp
test
add
adc
inc
or
mov
xor
pop
daa
jge
push
jnp
mov
mov
and
out
adc
add
cmc
loopne
or
lret
inc
testl
add
into
std
sti
leave
sti
iret
jmp
mov
add
add
add
fsubr
jmp
rcrl
mov
pushf
jge
out
je
mov
add
add
cld
fdivr
fcompl
scas
ljmp
adc
mov
push
add
movsb
xchg
fldl
pop
mov
or
dec
pop
cmp
xchg
stos
mov
cmp
mov
add
xchg
push
pushf
je
out
mov
rcr
fisubl
and
pushf
or
hlt
jle
mov
loope
test
sbb
jne
test
cmc
cmp
insl
insl
shl
shlb
hlt
int3
int3
insb
push
test
outsb
mov
pop
outsl
jne
xorl
cltd
mov
data16
dec
jbe
add
push
and
les
das
arpl
sub
sub
xchg
iret
fistpll
inc
add
icebp
call
fisttpll
stc
stos
sbb
add
add
mov
xor
rolb
add
add
fdivrs
sbb
xchg
xor
fstpt
xchg
ja
outsl
imul
mov
jnp
add
int
mov
das
and
nop
add
repz
jno
sbb
cli
mov
popa
fidivrl
mov
out
dec
addl
inc
shll
mov
inc
mov
mov
or
lea
int
in
andl
pop
pop
jmp
inc
xor
inc
ret
inc
ljmp
cs
mov
adc
in
fsubrl
sbb
jns
or
daa
and
mov
cltd
cld
or
pop
ljmp
xchg
push
fs
jp
sahf
fwait
push
lcall
ds
aas
das
xchg
insb
jo
push
outsl
mov
xrelease
dec
push
mov
repnz
pop
movsl
int3
push
mov
pop
out
xor
outsb
cmp
cmc
xchg
popa
dec
mov
pop
inc
jge
sbb
add
jg
mov
sahf
loop
mov
roll
add
add
adc
orl
dec
notl
mov
enter
arpl
or
mov
lds
pop
lods
or
repnz
xchg
push
push
iret
sbb
int3
enter
sub
mov
out
mov
mov
cwtl
mov
shlb
fldt
cmp
shll
mov
sbb
movsl
jae
or
fwait
push
hlt
jmp
stc
dec
aad
fcmovnbe
pop
sbb
cmp
movb
push
repz
gs
imul
cvttps2pi
rcll
push
xor
mov
out
or
and
mov
mov
lock
dec
movsl
inc
int
sar
jnp
sbb
dec
xchg
pop
jbe
and
inc
xchg
das
add
lock
and
mov
mov
dec
call
xchg
imul
add
xor
push
cld
pushl
cld
sbb
addr16
add
add
sbb
nop
cmp
das
mov
lret
xor
dec
mov
pop
testl
inc
adc
push
sbb
and
test
mov
rclb
xchg
cwtl
test
das
iret
pop
icebp
mov
xor
cli
add
pop
jbe
mov
neg
jmp
or
jbe,pt
pop
cmp
insb
cmp
outsl
in
rclb
sbb
pop
push
fidivrl
xor
adcb
psrlw
in
adc
sbb
lret
test
inc
in
ss
dec
fildll
jbe
sub
pop
es
inc
icebp
je
xor
jge
lahf
cwtl
jno
jp
pushf
push
mov
repz
std
mov
push
imul
std
lods
popf
mov
loope
call
jg
sbb
sbb
jnp
push
pop
inc
mov
cmp
dec
cwtl
js
push
mov
outsl
cmp
sub
daa
xor
xlat
pushf
shrb
lcall
test
ret
add
add
add
arpl
inc
xor
faddl
es
lock
pushf
aas
pop
cwtl
mov
jle
push
mov
out
fldt
adc
subb
jnp
push
jmp
sbb
insb
xor
nop
cmp
sahf
arpl
cld
mov
inc
out
dec
enter
xchg
in
rcl
jecxz
inc
in
and
lret
mov
jo
push
mov
aas
movsl
popf
fstps
lcall
aas
inc
mov
and
dec
out
stc
jb
stos
neg
push
mov
mov
cmpsl
jp
jg
fmuls
inc
les
mov
lods
das
xor
insl
adc
seto
cmpsl
jb
daa
push
push
sbb
xchg
jbe
loopne
test
dec
mov
jmp
sub
xchg
push
xchg
cmp
push
out
xor
cmp
and
jns
sub
cmp
aas
mov
sbbl
test
add
sub
scas
mov
aas
scas
fld
clc
in
and
add
add
add
jl
dec
pop
pushf
fistps
adc
orps
jmp
pop
cmp
arpl
xchg
cmc
outsb
xchg
xor
mov
fsub
loopne
mov
cmc
rcl
and
clc
push
adc
aaa
int3
or
aas
insb
ja
stos
icebp
dec
adc
jnp
xchg
addr16
fisubrl
push
sahf
cmp
sbb
adc
mov
leave
sub
dec
cmpsl
jae
and
push
call
gs
adc
jns
xor
pop
sbb
push
and
int
addl
loop
dec
lahf
jmp
shll
jns
div
in
adc
push
xor
inc
cwtl
ds
fs
xor
xchg
lds
aam
das
test
jbe
jg
push
dec
and
add
mov
cmp
mov
sahf
push
iret
or
mov
clc
insl
outsb
jno
dec
gs
sbb
add
add
jne
jne
jg
loop
mov
mov
add
add
orl
lahf
xor
mulb
bound
jmp
out
in
insb
mov
es
insb
lock
sub
inc
xchg
xchg
dec
or
aaa
pop
sub
push
int3
push
add
aas
int
mov
test
cmpsl
das
xor
and
mov
popf
test
sbb
movsl
dec
inc
ljmp
mov
popa
call
aam
jae
and
jmp
push
cmpsl
sub
push
jne
pop
lods
test
and
sbb
add
pushf
jg
imul
out
inc
pop
pushf
mov
cmc
int3
dec
adc
and
movsb
or
sbb
pop
mov
push
mov
lret
sub
sbb
pop
stos
xor
pop
outsl
lret
fs
mull
aas
aas
jo
xchg
imul
clc
sbb
outsb
jl
inc
lea
xor
popf
pop
inc
mov
adc
int
xor
mov
jle
ja
add
add
dec
pop
mov
cmc
mov
shlb
add
add
add
mov
jge
pop
lret
push
pop
and
bound
int
xchg
fsubrs
xchg
push
movsb
adc
sub
iret
arpl
or
rorb
out
xchg
pop
rol
outsl
mov
mov
stos
adc
sbb
or
lods
jmp
test
pop
mov
lea
adc
fwait
adc
inc
in
stc
lods
xchg
mov
inc
push
movsb
inc
push
call
les
pop
pop
push
loop
xor
in
call
mov
push
mov
mov
sub
clc
cltd
inc
aaa
sub
lret
int3
sti
push
test
push
les
lret
rorl
scas
imulb
add
pop
and
inc
lods
pop
jne
jno
shl
mov
push
jg
scas
outsl
mov
jns
fs
and
adc
fcmovnb
mov
mov
dec
adc
and
outsb
jle
lods
testl
movl
add
in
and
stos
lret
outsb
add
int3
mov
ss
mov
test
mov
outsb
mov
adc
sbb
aas
mov
lret
outsb
mov
mov
push
cmp
push
imull
ret
sbb
scas
or
icebp
repz
addr16
pop
adc
pop
andl
in
sbb
pop
push
nop
stc
mov
mov
sub
insl
jl
fidivl
mov
shll
lahf
xchg
sub
cmc
inc
mov
rdpmc
or
test
pop
icebp
cmp
loop
and
lcall
mov
xor
repnz
dec
leave
test
aam
daa
mov
cmc
mov
push
popf
pushf
push
shlb
lcall
xor
mov
cmpsl
decl
push
fwait
dec
dec
js
divl
test
jle
lods
xchg
cmc
push
data16
mov
mov
add
loopne
addr16
add
add
seto
add
aas
enter
add
jecxz
pushw
cli
mov
out
movsb
inc
ja
push
add
out
sti
test
pop
sbb
mov
movsl
pop
repnz
icebp
pushf
mov
mov
mov
mov
js
dec
cs
sub
lahf
out
lock
sbb
pop
ffree
mov
push
xchg
dec
cmp
shlb
push
shrl
test
aaa
jle
sbb
arpl
pusha
jg
dec
add
fbld
cmp
jge
ds
mov
lahf
add
hlt
clc
aad
incb
inc
xchg
mov
sub
cmpsl
sub
lea
sbb
pop
inc
push
nop
fwait
and
clc
and
xchg
arpl
cwtl
rorb
inc
push
jmp
fisubrl
mov
adc
out
add
and
or
int
xchg
and
sub
call
mov
jmp
xchg
aaa
js
lcall
add
test
sbb
xlat
in
aad
pop
in
cmpsl
in
addr16
add
add
add
popa
mov
f2xm1
fs
jecxz
insl
push
cmp
inc
adc
pop
push
mov
mov
xchg
mov
movsb
xlat
push
fs
enter
cwtl
cltd
pop
add
repnz
jno
xchg
jmp
mov
jmp
ljmp
pop
or
ss
sti
xchg
dec
xor
lahf
push
movsl
repnz
lods
push
rorb
add
sub
cmp
ss
adc
jo
and
hlt
and
or
leave
js
adc
mov
int3
push
sub
decl
or
mov
out
push
cmp
adc
mov
pusha
or
out
incb
repz
mov
enter
mov
bound
pop
icebp
xor
xor
lods
or
xchg
shlb
repnz
dec
jl
or
adc
add
cmpsb
cmpb
xor
popa
inc
int
ds
sub
cmp
jg
and
mov
aas
out
jae
lret
add
add
clc
mov
lods
shll
mov
fcomp
sbb
push
inc
lahf
insl
fldenv
ss
dec
enter
shrb
jp
lods
lock
fiadds
fisubrs
sbb
pop
pusha
jmp
das
imul
or
call
jnp
cltd
sub
dec
jne
pop
test
mov
adc
filds
cmpsb
andl
mov
loopne
mov
ds
or
imul
faddl
mov
pop
or
adc
jg
rorb
clc
pop
pop
leave
cmp
sub
out
lds
push
hlt
scas
dec
xchg
aam
cmp
sbbb
mov
ficomps
mov
sbb
xorl
adc
adc
push
jg
out
jb
or
jb
imul
jbe
in
cmp
sbbb
pop
jne
push
xor
and
pop
jmp
ds
repz
fcoms
xchg
jmp
add
add
add
aam
cmp
rolb
jge
sub
jmp
xchg
cmpl
in
pop
out
loopne
popf
mov
push
mov
sahf
and
xor
fdivrs
add
add
mov
outsl
hlt
xor
cmp
or
test
shlb
std
push
inc
sub
pop
push
cs
lods
mov
and
and
xor
add
rolb
jbe
push
mov
sbb
dec
bound
push
dec
lods
add
movsb
xor
adc
sub
push
test
fs
pusha
rcr
popf
jge
iret
pushf
imul
cwtl
ja
mov
jns
movsb
adc
xor
out
adc
sbb
nop
scas
std
subl
jae
adc
test
dec
cmc
mov
push
test
cmc
rcrb
add
dec
imul
mov
mov
mov
test
out
int3
add
add
add
jg
dec
iret
lods
test
mov
cwtl
cwtl
aad
xchg
sub
adc
and
mov
fnstsw
out
pop
loope
mov
adc
sub
adc
sub
je
mov
jo
sub
popf
mov
jecxz
pop
sub
out
fisubrl
inc
xchg
push
adc
inc
adc
add
out
or
cwtl
xor
dec
aas
in
cmp
cmp
pop
inc
rcrb
cs
out
imul
push
mov
mov
add
sbb
cli
push
cld
push
mov
adc
imul
fcmovb
stos
xlat
xor
push
fnsave
inc
daa
lahf
popa
jp,pn
or
es
add
cltd
or
cmc
mov
jb
sbb
xchg
push
xor
and
jl
insl
push
test
sub
add
add
enter
in
sbb
push
inc
shlb
add
add
add
jl
pop
fstpt
enter
cwtl
adc
fsubs
mov
pop
dec
xor
inc
mov
mov
xchg
dec
idiv
mov
cmc
mov
ja
bound
sub
mov
jno
fisubrl
int
jb
test
lahf
mov
sbb
mov
jge
pop
test
popf
sti
sub
pop
xchg
fimuls
adc
fs
xor
inc
pop
js
xor
push
dec
dec
sbb
nop
dec
sbb
ljmp
outsl
jge
insl
fidivrs
lds
iret
gs
cmc
mov
jmp
ss
jp
cltd
dec
lcall
fsubrl
test
sub
leave
dec
xor
xchg
in
scas
dec
dec
fcomp
jge
adc
xorl
xchg
std
add
popaw
fwait
std
xchg
jne
imul
mov
imul
stos
mov
add
add
imul
cmc
call
inc
push
popa
jmp
cwtl
mov
add
add
es
push
in
out
rep
dec
das
add
call
push
mov
shl
cmp
stos
stc
testb
aas
inc
out
dec
into
push
lahf
sti
lock
loop
pop
imul
hlt
adc
aad
mov
adc
xchg
out
roll
daa
dec
pop
cltd
add
test
stc
xchg
cmpsb
add
ret
repz
icebp
lret
dec
les
dec
shr
loope
data16
outsl
leave
int
fiaddl
jmp
ss
pop
xchg
and
jl
sbb
pop
jbe
stos
and
stc
push
dec
js
icebp
outsb
cmp
xchg
mov
aas
repz
mov
and
arpl
adc
outsl
mov
mov
add
pop
repz
or
xor
xchg
ja
lahf
mov
jmp
shll
add
ja
iret
sub
jmp
out
iret
add
add
add
dec
movsl
jmp
sub
cltd
mov
in
mov
aaa
js
out
lock
das
and
push
repnz
call
xlat
addr16
adc
and
push
adc
push
ds
or
mov
cmp
jmp
cmp
cmc
es
add
inc
xor
aaa
divl
imul
rolb
addl
xor
add
hlt
sbb
ret
stos
fcoml
inc
ret
stos
jp
cs
add
in
or
ret
ja
mov
mov
dec
movsl
rorb
dec
adc
sbb
mov
clc
xchg
loope
lock
inc
es
and
adc
adcl
push
adc
int3
jl
dec
xchg
les
movsl
or
cmc
sub
into
call
shrb
sub
out
mov
aam
jb
mov
out
out
out
into
gs
cld
test
mov
xor
add
add
dec
sub
inc
ja
and
fdiv
test
inc
pop
push
ret
or
sub
or
inc
inc
sti
aam
test
inc
clc
mov
pop
push
mov
xchg
cmp
or
and
iret
ja
sub
ret
add
icebp
stos
insb
xor
mov
pop
adc
punpckhdq
test
fsubr
repnz
iret
pop
cmpsb
movsb
pusha
add
icebp
push
adcb
movsl
sub
std
jo
pop
pop
sub
xchg
push
pop
shrl
imul
mov
ret
out
int
inc
cmc
jno
inc
in
pop
sbb
cmp
cld
xor
dec
jb
ljmp
js
movsb
mov
and
mov
mov
clc
jnp
cs
outsl
cmp
mov
aas
ret
inc
orb
idiv
mov
fisttps
lods
repz
dec
xchg
lcall
add
loopne
and
je
out
mov
faddl
or
roll
add
add
add
jae
addr16
int
sub
pop
rorl
inc
push
sub
add
addr16
gs
cmp
rorb
mov
xchg
xor
or
sub
in
sbb
dec
xlat
cli
dec
cs
movhps
pusha
dec
je
inc
sarl
sub
or
dec
mov
adc
jmp
and
sbb
mov
xor
test
aas
jmp
cs
in
pop
pop
push
popf
leave
sbb
pop
aam
inc
mov
sahf
ja
lahf
rcrb
shlb
ss
mov
sti
cmp
mov
into
popa
mov
mov
cmp
std
fisttpll
adc
in
imul
push
idivl
call
int
add
mov
adc
lcall
dec
lock
xchg
lahf
aaa
jno
sub
les
inc
sub
cmp
notrack
gs
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
out
sbb
push
rolb
add
add
add
cmpsb
and
push
xor
sub
insl
add
test
icebp
sub
adc
jo
movsl
mov
or
hlt
and
rolb
loopne
add
inc
jbe
ljmp
subl
jne
mov
fidivl
xchg
cmpb
loopne
cmc
in
mov
jp
mov
je
es
mov
popf
xchg
pusha
dec
mov
imul
jge
gs
pop
pop
pop
mov
insb
loop
lret
xlat
loop
lret
leave
add
aas
sahf
mov
push
jnp
shll
int3
lea
xor
paddb
mov
inc
jge
jp
xchg
out
into
cld
repnz
mov
lcall
adc
mov
std
cwtl
insb
jae
and
movsb
stc
xchg
jmp
dec
mov
leave
inc
xor
imul
imul
inc
and
sub
jo
add
add
popf
mov
lahf
ret
or
aam
mov
add
add
or
jo
cli
or
push
call
mov
iret
cmp
loopne
addr16
dec
clc
ljmp
jmp
divb
movsb
mov
cli
jle
ss
je
push
xor
pop
add
daa
sbb
pop
rcrl
inc
jp
push
shl
mov
insb
mov
sub
aaa
movsb
inc
sub
push
es
add
xor
lds
adc
push
mov
out
ss
inc
inc
sub
mov
iret
mov
repnz
stos
popf
ret
sbb
aam
push
pop
scas
add
or
iret
insl
sbb
prefetcht0
lahf
test
inc
push
ror
adc
int
jne
out
orl
pop
push
mov
pusha
ja
rclb
push
hlt
negb
sti
xchg
subl
push
ja
aaa
inc
and
dec
out
cmp
inc
imul
add
add
neg
outsl
push
xchg
or
jecxz
addr16
add
add
add
jmp
shll
push
mov
imul
rcrl
fwait
test
mov
dec
mov
cltd
pop
test
lds
insl
cmp
orb
mov
das
nop
add
in
iret
mov
cmp
add
ror
ret
lods
xchg
roll
xchg
cmp
push
jae
js
xchg
or
cmc
imul
fs
xor
add
fsts
hlt
mov
lea
xchg
jge
jg
jg
shlb
mov
xchg
iret
icebp
pcmpeqb
aad
and
pop
adc
repnz
in
fstpt
jecxz
xchg
das
mov
push
xchg
setbe
adc
pop
mov
adc
push
xor
pop
test
or
jae
inc
dec
dec
fadds
jmp
lret
pushl
jbe
les
andb
enter
add
add
add
sbb
sub
dec
push
xlat
dec
stos
addr16
add
add
add
ficompl
outsl
int
or
loop
xchg
mov
add
push
mov
push
test
jb
jg
addr16
dec
mov
fistps
mov
lahf
jae
enter
mov
insl
xor
out
sysexit
push
test
call
jns
loope
cli
jo
jae
mov
pop
push
rorb
xchg
xchg
fcmovb
jbe
aad
mov
adc
or
add
xor
andl
or
lods
cmp
cli
popa
stos
pop
mov
cmp
jno
pop
xchg
push
cmp
pushf
dec
aad
cmpsl
es
nop
adc
jp
cmp
push
dec
xchg
sub
stos
hlt
cmp
hlt
out
xchg
jl
in
mov
enter
mov
push
jns
inc
mov
add
xlat
lods
mov
and
mov
inc
jns
cmc
lods
insb
add
sub
les
mov
and
daa
jae
les
add
add
ds
jae
js
adc
add
add
stos
push
push
and
push
inc
jmp
inc
sbb
repz
mov
fstpl
fisubl
sbb
xor
adc
xchg
mov
lods
mov
mov
fistpl
and
pop
mov
dec
lret
cmpsl
mov
bound
xor
xor
dec
pop
insb
inc
leave
xor
and
xchg
outsb
mov
pop
neg
or
jno
or
lds
pop
jbe
push
popa
mov
ljmpw
mov
mov
mov
push
fcoms
lods
mov
jae
stos
mov
sbb
pop
adc
icebp
or
cmp
enter
ret
mov
mov
push
aad
adc
xchg
cmpl
mov
add
sti
loopne
sub
loopne
lret
iret
imull
fisubrs
repz
mov
imul
fistpl
jle
mov
xlat
xchg
orl
int
iret
inc
test
add
add
lcall
jnp
into
frstor
add
add
add
pop
je
sbbl
cmc
push
fildl
dec
sub
mov
int
sbb
sbb
pusha
inc
xchg
shrl
popf
inc
imul
add
jnp
or
and
lahf
adc
divb
jnp
repz
lea
and
pop
push
inc
fs
scas
push
in
cmpsb
daa
iret
iret
in
test
adc
sub
iret
cmc
mov
mov
jnp
or
jl
inc
or
clc
sub
lahf
imul
push
dec
cli
push
pusha
jno
mov
cmp
add
add
mov
mov
or
iret
mov
push
divb
cwtl
lret
aas
jbe
add
std
sti
jb
adc
jne
dec
leave
xchg
add
rcl
mov
loope
mov
add
pushf
inc
int
push
sbb
cmp
cmp
jg
leave
or
mov
fadds
add
add
add
inc
sbb
negb
jmp
push
push
hlt
imul
cmp
mov
inc
into
andb
adc
pop
int3
add
adc
popf
imul
mov
arpl
hlt
pop
and
mov
mov
push
test
adc
ss
adc
push
jo
in
add
mov
sbb
out
add
mov
sub
leave
inc
arpl
and
outsb
jmp
adc
jnp
pop
cltd
mov
inc
xor
loop
xchg
data16
fisubrs
jge
inc
xor
and
xchg
outsb
fsubrl
jp
dec
or
dec
xor
inc
push
shll
std
inc
push
roll
stos
xorl
sahf
insl
repnz
xlat
cs
inc
mov
lahf
and
adc
ja
iret
out
adc
dec
fcompl
imul
xchg
movsb
insl
jmp
flds
add
add
add
cmp
pusha
jle
mov
inc
push
ficoms
inc
out
out
test
jg
dec
cld
push
clc
call
jne
mov
jp
jae
push
cmc
sub
subb
push
sti
pop
sbbl
inc
dec
push
dec
push
loop
loopne
mov
leave
ret
popa
xor
adc
ds
idivb
sti
cmp
cli
das
mov
aas
orb
bndstx
insl
sbb
fs
daa
xor
and
std
daa
cmp
loopne
and
dec
xchg
jp
mov
les
mov
int3
in
adc
xlat
xchg
or
jecxz
push
lret
loope
scas
fwait
dec
lcall
dec
out
jl
or
pop
gs
push
push
lea
js
push
pop
dec
mul
and
pop
push
in
test
popa
ja
pusha
push
adcl
pop
xorb
adc
add
out
fldcw
push
in
sub
sbb
add
add
add
out
pop
mov
fsts
mull
inc
mov
mov
add
pop
iret
mov
test
cmp
scas
pop
jae
outsb
add
push
push
mov
or
ret
xchg
test
insb
xchg
fmul
or
adc
aas
ficoms
les
dec
maxps
mov
xor
push
xchg
js
and
jne
mov
adc
outsb
int
pop
pop
pop
mov
jae
mov
mov
hlt
sub
call
lret
pop
cmc
fsubrl
push
inc
mov
cmp
pop
aam
addr16
mov
sbb
bound
je
sub
lret
into
xlat
clc
mov
mov
dec
outsb
mov
outsl
loop
imul
lcall
add
cld
xor
leave
loope
jbe
mov
outsl
or
repnz
test
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
lods
in
fildl
add
add
add
movsb
cwtl
sub
shrl
ja
gs
adc
dec
lcall
lret
or
test
rclb
pop
jle
loope
fwait
mov
std
xor
sbb
ds
stos
add
sbb
mov
popl
rcrb
mov
or
loop
cmp
cmp
sbb
rcrb
movsl
sub
aam
mov
push
stc
loopne
cmp
jge
cmp
sarb
js
cmp
push
call
cmp
stos
push
mov
adc
clc
or
cltd
push
mov
push
testl
rorb
add
sbb
or
fistpl
cltd
pop
aaa
cmp
sub
imul
icebp
jle
or
stos
aas
ja
sbb
test
dec
std
in
sahf
xchg
cltd
push
stos
xchg
add
pop
dec
jle
jg
std
fstpt
and
add
add
add
sub
push
inc
negl
int3
pop
pushf
and
mov
jne
adc
mov
sahf
sbb
subl
dec
xor
dec
pushf
mov
movsb
jmp
sub
insl
xchg
xor
fisubrl
lahf
add
cmc
inc
mov
cmp
jnp
push
push
xlat
inc
sub
cmpsl
pcmpeqw
jo
dec
mov
int
sub
adc
pop
adc
roll
outsl
loop
adc
popa
ljmp
inc
bound
out
mov
xorl
or
xchg
out
push
mov
js
mov
les
sbb
cmc
in
out
sub
mov
dec
inc
pop
dec
add
in
inc
enter
into
xchg
jne
fsubs
inc
lods
mov
dec
mov
leave
jmp
cld
push
pop
hlt
jns
gs
mov
inc
fidivs
jnp
and
inc
insb
cli
cld
nop
nop
cmpsb
sbb
movsb
cmp
ljmp
into
cld
ret
clc
fldl
add
add
add
dec
aaa
or
outsb
push
lds
int
in
xor
lahf
ret
xchg
fnstcw
daa
repz
aaa
sbb
in
js
xchg
xchg
sbb
dec
pop
out
sbb
shll
nop
movsb
and
jmp
and
pop
sub
and
jns
xchg
sbb
decl
jb
cmp
and
outsb
cmp
cs
outsl
fs
arpl
hlt
in
mov
mov
cmpsl
enter
pop
cmpl
xchg
clc
aas
add
pop
clc
std
mov
sub
or
push
or
sub
lock
pop
imull
mov
daa
int3
cli
xor
push
xchg
push
int
lret
fcompl
push
cmp
ljmp
mov
and
sub
inc
and
jp
mov
lcall
cltd
cmp
push
in
sarl
push
mov
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
jne
inc
jl
dec
jb
push
andb
add
lea
ffree
aas
in
dec
fsts
es
jmp
pop
scas
adc
add
and
repnz
jp
xchg
inc
dec
lock
mov
fistpl
jmp
cmpl
jl
rcll
push
add
mov
mov
sub
out
jns
fxch
ficomps
jmp
pop
aas
rorl
mov
lock
fldl
add
sbb
push
xchg
dec
xor
dec
adc
jmp
jb
leave
mov
jae
adc
adc
fwait
jne
sti
je
adc
and
test
rcr
or
filds
aas
jbe
xor
in
shlb
adc
mov
std
mov
jle
fistpl
and
sbb
jno
mov
in
fwait
cmpsl
fimull
faddl
add
add
add
push
repz
jge
push
fistpll
lret
xor
sbb
in
jle
lret
adc
syscall
vhaddpd
loop
jmp
je
mov
mov
xor
subl
cmp
repz
outsl
add
jle
stos
mov
inc
imul
and
push
data16
out
daa
add
push
ss
inc
pop
aas
adc
js
imul
rorl
mov
cmp
push
in
and
sub
xchg
cmp
xlat
js
fst
into
push
push
jne
jae
push
scas
pushf
jmp
xchg
lods
ret
fbstp
xchg
enter
ret
add
mov
jno
mov
scas
sbb
mov
cld
dec
scas
insb
push
push
or
sti
mov
in
gs
mov
jmp
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
or
dec
sbb
push
adc
lahf
jno
imul
int
clc
and
fsubrs
mov
fidivl
xor
aas
cmp
int
rcll
and
ja
add
rcrb
hlt
and
jno
lea
sub
xchg
inc
cmp
nop
jne
push
in
pop
mov
xlat
jl
js
push
nop
mov
add
ljmp
sti
addl
data16
xchg
xchg
mov
sub
and
mov
jb
mov
push
scas
add
into
je
sub
sbbl
mov
dec
or
and
sbb
xchg
pop
mov
mov
fidivl
lret
add
shll
std
mov
mov
push
fwait
lahf
sbb
xor
mov
insb
jns
add
add
add
mov
jns
xchg
xchg
mov
or
iret
loopew
add
add
add
mov
adc
pop
push
sti
xchg
aam
popf
js
scas
pminsw
cmpsl
jbe
sbb
cmp
aam
cmpsl
out
adc
push
mov
pushf
add
insb
lret
dec
scas
cmpsb
inc
std
in
push
pop
lcall
sub
and
xor
fs
dec
hlt
push
mov
pop
pop
xor
iret
push
cld
call
push
stos
aad
xchg
loop
inc
outsb
inc
jno
mov
push
pop
mov
scas
aad
jnp
fbstp
xchg
sti
xchg
inc
movl
mov
or
ljmp
sub
adc
movsb
fcomps
push
dec
lret
push
push
movsb
andb
lret
int
es
call
je
fwait
mov
sub
lret
arpl
sub
dec
xor
pop
mov
dec
add
mov
push
xchg
mov
push
xchg
fistpl
jne
sub
popa
sarb
add
jae
fadd
fsubp
jnp
or
cld
les
loop
add
add
add
xchg
mov
outsl
mov
mov
add
lea
sbb
dec
fwait
imul
sub
add
jbe
mov
je
aaa
popa
xor
xchg
iret
mov
adc
xchg
xlat
fidivrs
mov
and
lock
push
sbb
cmp
cmp
out
push
mov
sbb
adc
dec
adc
roll
cmp
and
xor
mov
sahf
cltd
mov
add
push
inc
jg
sbb
mov
mov
dec
fildll
adc
addr16
dec
or
iret
mov
outsb
divl
lahf
outsb
xchg
jl
stos
mov
loope
pushf
xor
mov
cmpsb
inc
inc
pop
adc
xchg
inc
lds
push
sub
xor
jmp
in
cmp
jg
push
cmp
sub
cld
cli
jle
dec
nop
xor
fnstsw
leave
jcxz
add
add
add
mov
in
push
repnz
and
xchg
not
test
add
mov
leave
push
jb
xor
aad
jmp
adc
sub
fs
jmp
add
sbbl
adc
cmp
sbb
insl
aam
or
stos
in
cs
adc
fwait
notb
rcrb
fs
pop
lods
test
inc
cmpsb
mov
in
jne
adc
ret
pusha
flds
xchg
jne
push
jmp
loop
gs
addb
add
scas
out
clc
adc
icebp
mov
gs
mov
hlt
mov
in
dec
je
out
mov
lcall
pop
rclb
inc
pop
inc
enter
xor
jge
mov
daa
push
aas
push
ja
push
fisttpll
jl
sub
mov
jnp
mov
sbb
add
add
ja
sti
aaa
out
ja
sbb
add
add
xor
sbb
jb
mov
adc
mov
lcall
mov
fstpt
mov
jbe
stos
pop
pop
xor
or
sub
out
sbb
out
adc
mov
sub
inc
and
or
inc
sbb
cmp
jmp
push
jg
pop
sbb
insb
mov
dec
sbb
aam
sbb
sti
cltd
xor
mov
mov
dec
loopne
int3
in
add
push
or
mov
xorl
sbb
push
clc
fisttpl
xor
popf
sub
je
test
aas
hlt
shlb
xor
enter
mov
mov
cmp
push
pop
sub
lcall
sub
lcall
into
jns
loopne
lret
dec
jg
inc
sbb
sbb
push
out
inc
cmpsb
imul
adc
ror
cltd
outsl
mov
aaa
pushf
test
add
add
add
cld
outsb
pop
xchg
dec
and
test
cs
sbb
test
pusha
out
inc
mov
xchg
and
gs
repnz
dec
jno
jb
jbe
push
xchg
xchg
mov
ja
stos
aas
cmp
mov
jp
xlat
mov
arpl
dec
xchg
int
inc
scas
and
xor
test
js
jl
fsubrl
adc
jno
mul
adc
movsb
pop
stos
push
stos
push
push
mov
add
push
dec
push
mov
inc
xor
xor
pop
lahf
inc
jnp
pop
into
and
in
scas
pop
mov
push
jle
daa
sti
sub
adc
cli
cmp
out
sbb
cmc
stos
pop
rcll
pop
inc
or
jge
jbe
xor
test
arpl
push
icebp
sbb
sub
test
sub
rol
push
stc
imul
scas
jmp
push
sbb
or
ljmp
fiadds
add
add
ja
lcall
mov
dec
addr16
add
add
add
repz
sbb
and
loop
add
add
pusha
jo
loop
cltd
and
std
adc
les
push
pop
pusha
cs
jnp
mov
lock
scas
mov
movb
and
loope
cld
dec
dec
scas
daa
inc
cli
loope
int
xor
pop
icebp
fisubl
cltd
xchg
in
scas
test
scas
dec
loope
lds
inc
fisubrl
push
data16
sbb
dec
call
rcl
arpl
add
mov
loope
dec
sub
fldt
xor
mov
jnp
repz
ja
fdiv
push
or
out
lods
cmc
out
cli
pop
pop
cmpsb
hlt
mov
cwtl
jo
int3
gs
push
jp
pop
iret
adc
mov
push
test
sub
add
imul
pop
iret
adc
sbb
nop
imul
adc
pop
sbbl
repz
lock
jg
in
and
cmc
mov
add
add
add
cmp
fldt
test
xchg
and
push
pop
and
sub
iret
stos
aam
sub
dec
add
mov
inc
xor
pushl
test
data16
inc
jo
hlt
pushf
pop
mov
sub
mov
inc
loope
cwtl
pop
add
fsts
scas
xlat
lsl
in
xor
repz
movsb
mov
adc
push
test
and
sahf
stos
xchg
cwtl
out
mov
les
popa
mov
xchg
fld
adc
adc
adc
or
adc
sbb
pop
fsubrp
jne
aaa
sbb
push
xchg
lcall
daa
jl
mov
out
or
popa
shrl
sbb
jno
jmp
mov
inc
fisubl
clts
mov
push
push
pop
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
fnstcw
addr16
add
push
lret
mov
xor
cmpsl
adc
shll
pop
outsb
ds
hlt
inc
loopne
movsb
xor
mov
xor
mov
or
mov
ljmp
xchg
test
jecxz
insb
jo
adcl
std
pop
xchg
mov
cmp
xchg
and
outsl
pop
in
movsb
in
icebp
push
mull
sbb
pop
xchg
dec
movsl
clc
cmp
mov
mov
mov
sbb
and
lret
inc
into
stc
arpl
loop
fmuls
std
sbb
push
mov
ficompl
xchg
pop
flds
ds
fldenv
loop
add
lea
aam
ret
fidivrl
xlat
jae
stc
mov
mov
movsb
scas
lret
xchg
mov
mov
scas
pusha
movsb
fmulp
movsb
ret
inc
cmpsb
fisubl
push
leave
dec
test
call
push
int3
pop
fmuls
dec
pushf
lret
add
add
mov
dec
js
stc
mov
dec
int
repnz
add
add
add
or
out
enter
push
cmp
je
and
mov
sub
xchg
add
shrl
or
cs
or
fninit
add
xor
xorb
xor
mov
or
and
and
lods
imul
pusha
andl
and
mov
cmp
std
sub
cmp
lret
cmp
jno
ljmp
shl
lahf
push
ss
dec
cmp
push
adc
sbb
aam
push
sahf
and
mov
sbb
out
sti
and
add
out
mov
call
movsb
cltd
inc
test
add
push
lret
cwtl
push
xor
push
out
mov
aad
imul
sbb
adc
ret
xchg
push
mov
flds
xchg
pop
pop
mov
pusha
ret
ss
addl
mov
stos
arpl
pop
mov
cmp
add
add
insl
repz
fwait
jns
jns
test
lret
add
add
add
inc
ret
aad
testb
adc
out
xor
addb
bound
arpl
sti
xchg
aas
stc
xchg
xchg
fsubrs
clc
dec
aam
add
dec
daa
mov
mov
cmpsb
ret
pop
mov
mov
fbld
sbb
push
ljmp
clc
test
mov
xchg
or
or
pop
imul
inc
lret
outsb
insl
sbb
jp
cmpsl
and
jnp
outsb
mov
cltd
mov
and
mov
and
pop
pop
mov
mov
adc
daa
push
subb
imul
sar
fstpt
repnz
daa
hlt
repz
stos
cmpsb
out
jbe
mov
neg
push
cmp
inc
xchg
not
sub
mov
imul
adc
adc
cmp
inc
mov
or
jns
scas
popa
xchg
pop
jl
loopne
mul
iret
pusha
out
stos
mov
mov
cmp
jnp
adc
jne
fwait
jo
mov
jmp
add
add
add
or
insb
inc
lods
jmp
lahf
xchg
sbb
popa
and
inc
xchg
pushf
and
loopne
sbb
leave
int3
xchg
data16
and
xlat
mov
mov
pop
and
fcomp
add
push
xor
popw
lahf
fwait
mov
insl
stos
and
jmp
fistl
mov
dec
jmp
imul
ljmp
cmp
push
sti
sbb
sbb
push
fnstsw
sub
int3
cmpsb
xchg
iret
in
jae
mov
stc
nop
out
sub
aaa
lock
sub
cmc
cmp
push
lahf
stc
inc
ds
outsb
test
mov
jecxz
in
mov
push
in
fldt
imul
adc
sub
aaa
scas
stc
xchg
xor
dec
outsb
orb
mov
xchg
lods
daa
scas
mov
lea
add
jmp
jb
add
add
subb
fistl
das
orps
ljmp
add
mov
dec
fmul
test
mov
insl
std
sar
or
repnz
adc
push
mov
sub
imul
out
add
or
gs
cltd
dec
movsl
mov
push
andb
xor
lods
adc
xchg
push
enter
or
mov
aaa
cmp
adc
mov
fdivr
or
sub
repnz
test
fldcw
cmp
dec
add
dec
adc
dec
push
sahf
cwtl
loope
clc
inc
cli
mov
jmp
xor
stos
rolb
test
add
lock
aaa
out
pop
push
les
test
inc
aas
dec
mov
push
xchg
out
decb
xchg
shlb
arpl
sbb
add
mov
jmp
scas
mov
jl
xchg
sar
jnp
lret
mov
stc
outsl
adc
outsb
cltd
add
jb
scas
decb
fisttps
xlat
pop
pop
addr16
add
add
add
inc
cmc
mov
add
push
addl
call
push
mov
push
xorb
jp
scas
scas
xor
aaa
bound
outsl
jo
jnp
pop
lret
jl
test
push
xchg
and
repz
cwtl
cs
psubusw
push
mov
inc
push
imul
mov
mov
test
jl
push
xor
test
mov
dec
orl
adc
xorb
lds
mov
lcall
lret
cmpb
cmp
pop
loop
das
mov
xor
mov
sub
pop
dec
mov
jno
dec
pop
push
lock
or
ret
loope
mov
adc
aaa
mov
dec
cmpsl
lock
dec
jae
mov
or
jge
xchg
xor
lock
stos
pop
out
push
inc
mov
xlat
mov
xchg
adc
stos
aam
out
add
add
add
outsl
clc
xchg
push
inc
mov
add
push
nop
js
dec
sub
js
inc
dec
jl
push
rorb
sbb
lahf
add
adc
mov
and
loope
cmpsb
xchg
push
mov
orl
dec
xchg
add
movsb
adc
insb
pop
inc
lcall
leave
idivl
jb
push
cmp
ds
and
gs
pop
sub
shlb
ds
nop
or
add
cld
icebp
lds
ja
fs
add
cmp
sahf
mov
adc
in
xchg
pop
roll
imul
sarl
pop
jl
push
stos
cmc
int
jl
jge
stc
dec
sbb
test
lret
or
filds
stos
inc
cld
loop
xor
push
jnp
jns
and
inc
movsb
fnstcw
cmpsb
pop
popl
add
add
mov
aas
mov
mov
out
addr16
add
add
add
xor
inc
jecxz
or
jp
mov
xor
clc
arpl
push
nop
ret
dec
xchg
xchg
dec
mov
inc
es
mov
movsl
repz
sub
ljmp
mov
lods
movntps
xchg
das
in
pop
mov
xor
das
or
out
mov
stos
push
and
sahf
std
xor
test
push
cmpl
mov
inc
clc
pop
and
add
das
dec
ficomps
jmp
mov
pop
dec
push
or
jbe
sub
clc
sub
leave
jno
loope
repz
dec
pop
daa
sub
mov
sbb
stos
cld
in
outsb
popf
pop
es
test
fs
lcall
in
mov
std
push
cmpsb
cmp
clc
push
jno
cmp
push
lock
imul
and
sti
mov
fldcw
stos
sub
insl
jae
add
add
mov
sti
mov
les
lock
add
add
cmp
addl
mov
loope
fiaddl
jns
dec
arpl
cmp
and
xchg
orb
and
and
cmp
aad
data16
sbb
dec
dec
hlt
les
ljmpw
outsl
sahf
xor
sbbb
push
xchg
notl
push
cli
cmp
mov
fsubrl
and
cmpl
pop
add
add
mov
das
mov
ja
flds
or
incb
jp
xchg
dec
or
test
pop
mov
mov
or
test
test
clc
iret
pop
cmpsb
jnp
lahf
add
popa
pop
lret
push
mov
cpuid
pop
inc
hlt
jnp
fildll
mov
push
fdivs
jge
add
push
fldl
data16
sbb
dec
insl
sub
push
and
add
xor
or
lods
and
out
icebp
insl
push
test
add
add
into
adc
neg
jge
xchg
jns
loopne
fs
addr16
add
add
add
mov
fisttpl
jecxz
icebp
push
ret
in
or
push
inc
sbb
xor
loope
dec
ret
clc
adc
and
mov
push
jl
test
cmp
sbbb
inc
dec
inc
sbb
jbe
pop
leave
adc
pushf
in
js
pop
pusha
daa
xchg
or
lahf
cmc
ret
xor
iret
push
lahf
xchg
sbb
test
popa
adc
frstor
fsubrl
sbb
cmp
pop
js,pn
mov
repz
cwtl
fwait
or
fs
outsb
cmpsb
push
push
add
pop
push
push
inc
jb
mov
mov
sbb
push
loope
test
aam
pushw
in
daa
lea
fwait
jl
sub
xchg
jbe
das
icebp
loope
push
stos
jmp
jbe
mov
sbb
movsl
fwait
icebp
ljmp
into
lahf
cwtl
stos
push
mov
lret
mov
pop
cmp
outsl
jg
jg
sub
adc
add
add
add
aad
in
jl
mov
mov
or
dec
stos
pushf
pop
cmp
push
mov
jo
sub
test
and
aad
mov
push
fs
or
insb
mov
aaa
fisttps
mov
xor
push
cmpsb
and
cli
fldl
adc
js
fs
xchg
mov
fsqrt
sub
lret
lcall
lcall
xchg
stos
jns
mov
mov
add
data16
cmp
setae
and
dec
cmp
xchg
add
adc
outsw
adc
cmpl
ljmp
mov
pop
push
or
xorl
add
jns
or
inc
iret
sbb
lret
lret
notl
add
enter
shll
xor
sahf
loop
xor
xchg
rcl
xor
gs
jo
push
xor
inc
or
jo
ret
ja
and
aaa
divl
jl
test
add
add
lcall
cwtl
push
jecxz
cmp
cli
ds
sub
pop
sub
dec
or
sub
sbb
sub
cs
push
xchg
mov
jo
xchg
es
add
lds
testb
int3
and
push
gs
mov
xor
inc
adc
test
sbb
loopne
loopne
sbb
ret
leave
fmul
mov
push
les
xor
mov
mov
inc
push
sarb
cmp
scas
aas
and
fsubs
test
sahf
sbb
out
shrl
hlt
lret
pop
pop
out
push
add
arpl
aaa
pop
add
loopne
incl
das
inc
sbb
adc
xchg
hlt
cld
shlb
inc
add
add
xchg
mov
add
xor
ds
into
mov
leave
adc
ds
pop
testl
add
add
mov
cmc
mov
pop
rcll
hlt
add
add
add
or
shlb
mov
cltd
nop
in
add
dec
mov
cli
xor
push
or
fisubs
mov
es
push
insl
mov
lods
loop
and
loopne
lcall
xor
jno
add
fs
pop
insl
xchg
repz
push
enter
adc
rorl
sbb
mov
into
pop
cmp
inc
mov
cli
filds
fs
jg
js
inc
push
or
outsb
movsl
push
sub
sbbl
imul
xor
or
mov
loope
stc
insl
outsb
das
imul
fwait
xchg
popa
jecxz
xor
inc
and
dec
inc
sbb
rep
data16
out
jno
mov
scas
std
jne
js
sbb
dec
cmpsl
cmp
test
cwtl
jle
mov
jns
dec
pop
aaa
or
mov
das
xchg
xor
lret
xor
add
jne
pusha
popf
pop
sub
cmc
add
add
add
dec
xor
jecxz
out
scas
add
add
jns
repz
push
xor
adc
mov
sti
rclb
pop
add
add
mov
add
cmp
xor
insb
loop
mov
pmaxsw
outsb
ja
in
lock
jg
stos
outsb
xor
cs
out
jno,pt
sbb
inc
repz
scas
sbb
and
lcall
mov
popa
mov
mov
out
std
cmc
pop
out
fs
push
and
and
cmp
fs
pop
dec
add
sub
xchg
out
dec
dec
mov
jb
cmp
aaa
aas
popf
cmp
mov
inc
dec
imul
into
sub
pop
mov
clc
pop
jg
mov
shrb
push
addl
push
push
xchg
loopne
ret
xor
iret
pop
sub
dec
fdiv
inc
in
in
decb
outsl
das
add
cmpsl
cmp
or
add
imulb
mul
xor
into
testb
add
add
push
pop
fwait
lods
roll
jnp
bnd
add
int
mov
sarl
dec
sub
fcoml
sahf
cmpsl
mov
cmp
shll
enter
gs
mov
ret
xlat
daa
adc
stos
outsl
imull
shrb
jmp
inc
and
sti
pop
push
in
insl
out
sbb
les
test
and
aam
sub
or
ficoms
cmpsl
popa
lahf
jge
cli
or
add
xchg
sbb
lret
sbb
test
in
dec
pop
cli
xchg
lea
fadds
adc
negl
fs
out
push
xor
scas
ja
loopne
mov
add
dec
sub
clc
fistps
xchg
sbb
and
adc
les
adc
add
xchg
inc
pop
push
jmp
inc
in
pushf
push
push
shlb
inc
in
xchg
loop
or
fsts
pop
int3
xor
inc
xchg
or
add
add
add
xor
jb
jae
imul
add
add
add
push
pop
mov
sub
add
nop
push
pop
push
jns
mov
movsb
push
pop
lds
aaa
in
jp
ret
ss
mov
sub
mov
add
pusha
add
cmpsb
js
push
dec
pop
inc
push
out
fsubs
mov
lret
xchg
sub
aad
insl
cs
xchg
sbb
test
mov
jge
call
out
data16
dec
mov
adc
popf
mov
cmp
push
dec
inc
fwait
daa
scas
cmp
sub
cmp
ds
pushf
xchg
imul
dec
outsb
stos
push
push
fiaddl
fbstp
or
push
ljmp
insb
loope
cmc
xchg
incb
push
pop
inc
jo
adc
jg
std
adc
and
pop
push
xchg
pusha
es
lret
xchg
or
jmp
or
out
insl
cltd
stc
dec
clc
gs
adc
add
dec
sti
mov
dec
lea
push
add
push
push
adc
int
in
idivl
js
mov
xchg
and
add
add
add
imul
lret
sub
cld
inc
sbb
imul
sbb
fmuls
das
cmp
adc
mov
inc
push
push
xchg
sarb
aad
insl
xchg
xor
mov
sub
fstps
jb
into
aam
clc
xor
test
dec
push
icebp
hlt
jg
add
pop
xchg
mov
cmp
lods
test
cmp
sub
and
ss
mov
lcall
das
jp
stc
push
or
std
sahf
setg
movsl
xor
stos
int
and
pminub
add
add
repz
pop
mov
xlat
sub
mov
aaa
xor
push
xlat
mov
dec
xchg
mov
inc
xchg
lods
lds
and
jp
mov
push
jnp
lods
inc
mov
cmc
jae
ret
das
pop
sahf
and
cmp
add
pop
es
inc
cli
aas
into
lret
mov
stc
add
add
add
stos
mov
or
cmp
je
or
repz
stc
int3
je
dec
scas
sub
int3
xchg
stos
mov
lods
pop
xchg
cltd
inc
xor
sysret
and
das
cmp
mov
fmuls
push
jbe
or
push
enter
sub
add
cld
mov
push
jmp
pusha
push
adc
inc
dec
push
out
add
jmp
testl
xor
jae
subb
pop
inc
and
lret
sahf
stos
mov
or
out
inc
test
call
js
mov
in
call
pop
negb
int
dec
add
loope
add
add
push
jge
dec
das
mov
arpl
fyl2xp1
ret
mov
loop
leave
dec
mov
outsl
xchg
popf
lds
xchg
mov
test
shrb
mov
xor
mov
xor
insl
rcr
adc
xor
fadds
add
add
lcall
sub
enter
add
add
add
push
js
and
int
shl
xchg
jp
push
jne
push
dec
in
xor
xchg
pop
jg
ret
jecxz
pop
adc
push
cmp
mov
cmc
or
cmp
insb
scas
pop
rol
push
scas
jl
lds
and
push
jecxz
xchg
mov
out
pop
aaa
adc
lret
lret
test
or
int3
push
mov
lahf
mov
and
dec
adc
dec
xor
icebp
mov
rcll
mov
lock
jle
rorl
push
sbb
mov
or
outsl
inc
mov
dec
lock
aad
out
push
pop
mov
mov
xor
loop
in
test
call
pop
mov
jb
roll
sbb
inc
imul
lret
and
add
loopne
push
int3
sarb
ljmp
into
push
jnp
sbb
cmp
das
push
into
pusha
les
pop
push
aaa
jae
cltd
dec
mov
jno
nop
mov
add
add
add
add
push
aad
push
mov
cs
mov
dec
mov
and
les
movsb
cmp
rcrb
cmp
inc
cmp
sbb
pop
addr16
rcrl
add
jo
pop
adc
sub
mov
mov
ja
pop
sub
lea
ss
mov
or
sbb
sbb
movsl
add
stc
icebp
aad
bound
inc
jmp
add
sti
scas
mov
dec
push
rcrb
jno
mov
push
daa
mov
or
sbb
mov
mov
xchg
cmpsb
insb
xor
jp
leave
leave
aas
lods
xchg
mov
jae
clc
xor
pushl
push
adc
sti
mull
mov
dec
fidivrl
flds
pop
mov
outsl
or
xchg
adc
inc
mov
pop
aaa
pop
mov
adcb
scas
xor
ds
into
nop
out
cwtl
jle
push
sub
dec
ja
jg
addr16
add
add
add
shrl
dec
xor
jl
mov
mov
fucomi
das
aam
mov
inc
xor
mov
rol
mov
xor
pop
pop
rcrl
and
pop
xorb
mov
xor
xchg
ds
xor
movsb
iret
pop
mov
inc
testb
jne
cmp
movsb
cli
sub
adc
fwait
or
mov
cmc
or
clc
lret
ficoml
outsl
xor
jle
pop
sbb
into
inc
mov
popa
in
mov
mov
cmpsb
fimull
adc
leave
imul
ficomps
sub
jmp
jecxz
iret
pop
js
inc
mov
mov
jae
cmp
inc
out
push
scas
shlb
ljmp
jmp
xchg
fisubrl
sub
std
pop
and
movsl
inc
adc
pop
enter
inc
jno
test
jg
push
pop
push
mov
addr16
add
add
add
pop
pop
cmp
mov
fcmovu
pop
add
pop
mov
lock
mov
test
insl
nop
std
cmp
mov
loopne
mov
std
shrb
inc
xchg
mov
xor
ror
popa
inc
fistpll
cmp
aas
mov
ds
inc
cltd
ret
daa
cmp
sahf
xchg
aad
sbb
and
or
adc
scas
scas
fisubs
pusha
loop
adc
mov
imul
push
fidivrl
mov
mov
subl
inc
or
inc
hlt
aam
aam
roll
mov
mov
lahf
outsb
adcl
jecxz
and
lods
arpl
lds
daa
mov
pop
stc
lret
xchg
dec
jl
imulb
push
aam
pop
arpl
fdivs
push
outsl
push
jo
lods
push
pop
pushf
mov
sub
sarl
jmp
add
add
movsb
push
in
cmc
jne
sbb
js
rclb
packuswb
add
add
add
ljmp
xchg
push
stos
pusha
add
fidivrl
mov
inc
or
lcall
movsl
push
pop
test
aam
ds
push
add
lock
push
add
xchg
aas
cmp
xor
in
mov
mov
dec
ret
mov
mov
lods
fstl
mov
and
pop
or
xchg
mov
mov
and
push
lock
pushf
sub
es
ja
je
inc
mov
add
cmp
sahf
ja
hlt
mov
js
imul
lcall
nop
pop
jle
push
bnd
sub
jnp
jecxz
pop
sub
xchg
shlb
pop
test
mov
lret
mov
test
mov
cmc
mov
mov
aaa
mov
mov
das
fwait
and
repz
cltd
sbb
shlb
aas
out
int3
mov
push
and
add
add
add
out
nop
lods
imull
andl
jecxz
gs
and
pop
xlat
jae
or
mov
loopne
pusha
dec
out
xchg
in
int
std
ljmp
pusha
push
sub
push
push
insb
jmp
mov
cmp
mov
add
pop
cmc
mov
add
xor
mov
mov
mov
pop
add
sahf
push
push
or
xor
idivb
xor
lods
loope
pop
pop
lcall
mov
and
mov
lods
out
pop
pop
pop
enter
mov
push
outsl
push
ret
mov
xchg
xchg
aam
jp
push
jns
je
jns
jg
add
repnz
stos
mov
in
sub
outsb
cwtl
push
push
mov
pop
jmp
and
ret
sbb
mov
pop
repnz
sub
test
in
in
int
mov
push
mov
push
cmpsl
out
mov
sbb
movsb
and
add
add
mov
lcall
adcl
pop
inc
push
jge
or
mov
mov
stos
cld
lcall
shrl
adc
insl
stc
shll
sub
test
mov
jno
sbb
into
jecxz
outsb
sbb
mov
lret
jmp
inc
mov
xchg
dec
dec
inc
mov
loopne
test
cmc
sub
fwait
mov
xor
fwait
jecxz
push
or
and
addl
imul
and
test
mov
in
mov
jno
inc
imull
pop
movsb
push
sbb
shrb
jl
stos
test
je
xchg
outsl
sub
stos
add
cmc
lea
mov
pop
out
or
push
or
pop
insl
xlat
sbb
or
ja
adc
jecxz
iret
lcall
and
xor
push
jmp
push
pop
add
dec
rol
lret
clc
cmc
inc
stos
repz
or
add
add
add
add
gs
pusha
orl
jle
xchg
mov
push
xchg
in
dec
inc
out
fndisi(8087
and
mov
std
cwtl
negb
dec
sub
xor
fidivrs
out
out
mov
mov
in
inc
add
arpl
lods
xor
loop
std
sub
push
jle
jbe
dec
dec
repnz
add
mov
call
std
add
mov
aaa
mov
push
scas
popf
test
pop
jle
pop
lahf
add
stc
adc
scas
in
nop
jp
iret
and
jg
xchg
outsb
in
int
mov
cmp
or
xlat
lahf
add
and
jb
jne
lea
push
leave
loop
lahf
pop
ja
jnp
popa
ja
sub
jg
mov
addb
leave
leave
call
nop
jmp
movsb
push
ret
push
pop
cmpsb
push
fndisi(8087
out
in
or
sub
inc
and
out
cmp
add
add
std
aaa
mov
shll
sub
add
add
add
pop
mov
jno
or
push
bound
sbb
mov
add
mov
xchg
cmp
daa
add
out
add
xor
shll
sbb
jg
push
cli
mov
pop
popf
arpl
xchg
xchg
aam
pop
jl
leave
pop
inc
jae
nop
ljmp
mov
jns
popf
nop
pop
adc
int3
adc
sub
fistpl
jno
push
sub
adc
dec
repz
stc
sahf
out
pop
xchg
pushf
jno
pop
mov
and
imul
enter
fdivrs
xor
add
movaps
bound
daa
or
push
xchg
mov
mov
inc
cmp
pop
pop
xchg
cmpsl
insb
inc
and
pop
dec
cli
mov
mov
jns
pop
and
mov
sbb
aam
pop
test
jne
sub
pop
add
call
pop
xor
mov
add
add
insl
aam
mov
scas
add
push
shll
add
add
add
add
out
out
or
cld
adc
adc
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
daa
test
xor
sbb
inc
rorb
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
