push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
shlb
bound
pop
bound
xor
cmp
jns
jbe
mov
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
lods
das
sub
inc
push
or
out
add
sub
xacquire
mov
shlb
jne
test
movsw
sti
je
cmc
add
out
or
leave
std
adc
mov
fisubrl
jo
insl
aad
mov
lret
xchg
xor
in
dec
xchg
fwait
inc
fisttps
lock
push
xchg
loopne
das
xor
and
repnz
pop
out
std
aaa
cmc
jg
jp
test
jg
ss
jb
add
push
stos
or
pop
out
or
imul
xchg
js
xchg
stos
pop
inc
ljmp
xor
mov
mov
test
sub
pop
sbb
lds
jge
mov
jge
push
repnz
mov
or
mov
shr
mov
mov
and
pop
in
mov
out
inc
aad
and
addr16
add
xlat
fdivp
push
loop
js
outsb
jne
std
xchg
icebp
mov
jmp
jecxz
sbb
cmc
sbb
les
pop
sub
xchg
stos
pop
fs
enter
cmpsl
inc
addb
clc
xchg
sbb
mov
dec
sub
shl
jb
in
add
lock
adc
push
aam
cmc
xlat
mov
cmpsl
mov
jmp
add
jns
adc
lahf
push
mov
mov
test
push
push
mov
push
imul
add
jmp
stos
jle
out
and
icebp
mov
testl
add
pop
roll
popf
inc
lret
in
insb
cmp
dec
mov
ret
nop
sti
dec
or
daa
les
scas
lret
fmuls
and
mov
fcoms
mov
and
jp
jmp
fdivl
cmp
gs
rclb
mov
jbe
add
ret
pop
and
sub
cmp
out
enter
lds
aad
pop
pop
and
jns
jl
mov
or
cmp
mov
and
sub
aaa
jge
lret
shlb
leave
push
adc
popf
out
popa
mov
loopne
mov
jp
cmc
xchg
pusha
sbb
xor
inc
inc
cli
fiaddl
movsb
add
in
out
sti
xchg
pop
pop
xor
inc
jecxz
xor
jmp
or
scas
and
je
push
movsl
mov
sub
ficoms
xor
push
inc
and
pop
pop
ds
ljmp
cmpsl
and
aam
orl
xor
mov
loop
mov
and
int
icebp
sbb
pop
inc
into
pop
sbb
mov
fadd
nop
add
or
in
into
adc
orl
rclb
arpl
fucomp
fcompl
mov
lahf
adc
into
adc
outsl
in
insb
je
orl
xchg
test
ss
cmp
inc
cmc
mov
fdivrs
sti
arpl
fidivs
in
es
roll
push
xchg
inc
mov
js
push
pop
lods
mov
pop
popa
jp
fisttpll
pusha
dec
mov
add
pop
cmp
test
mov
ljmp
out
aas
out
push
outsl
inc
push
sub
and
imul
inc
loop
jg
into
push
aam
xchg
cltd
jecxz
xchg
pop
aaa
push
cmpsl
js
inc
daa
and
jge
in
subl
mov
mov
arpl
or
push
push
sbb
mov
in
test
dec
dec
jmp
or
push
xlat
lahf
jmp
and
sbb
inc
push
mov
ds
ret
mov
and
icebp
call
adc
sbb
les
cmp
movsb
sti
xchg
pop
push
mov
aas
pop
stc
mov
pop
cmp
sahf
fdiv
mov
xchg
mov
add
xor
xor
into
dec
xor
cmc
rorb
aam
cmp
cld
dec
js
ret
orl
jmp
add
xorb
hlt
xor
sbb
dec
xchg
fistpl
cmp
sub
outsl
dec
jp
popf
mov
push
sahf
flds
call
arpl
mov
add
clc
movsl
jecxz
mov
adc
cmp
fisubrl
adc
jle
subb
insb
ret
outsl
cmpsb
lds
jecxz
ret
xor
cmpb
pop
cmp
daa
add
dec
push
mov
push
xor
jmp
ss
sub
out
lcall
pop
xchg
addr16
cli
lahf
mov
mov
mov
xor
pop
push
pop
push
mov
adc
push
call
popf
or
hlt
aaa
mov
sbb
dec
aam
pop
inc
xlat
mov
in
ret
ret
sahf
faddl
popf
out
adc
inc
lds
test
mov
and
inc
inc
fcompl
sbb
cmp
popf
xchg
xchg
in
std
sbb
aaa
mov
inc
jo
add
arpl
nop
cltd
jg
jno
cmp
and
push
data16
xchg
call
cmpsl
out
test
outsl
fcomps
aam
push
pop
add
push
jle
pop
or
cmovb
and
mov
cmp
push
rcrb
mov
fistps
arpl
pop
push
out
pop
inc
cmc
add
cmp
push
pop
mov
jge
dec
mov
jns
fisubrl
rorb
or
adc
push
sub
sti
fsubrl
mov
pop
mov
enter
xchg
mov
push
das
sub
sbb
int
mov
or
mov
add
mov
repz
addb
pop
cwtl
xor
adc
lret
nop
push
test
imul
xchg
sub
fwait
test
pusha
and
lods
mov
negb
cs
addl
bound
cmpsl
pop
and
cld
lods
pop
mov
jge
jo
aaa
in
out
sbb
sub
test
and
mov
cmp
mov
ficoms
lret
cmp
xchg
cld
sbb
aam
xor
addr16
ja
or
ret
mov
pop
add
xchg
loopne
out
pop
leave
cmp
push
xlat
xor
cmp
xor
shl
mov
xchg
mov
or
or
ror
call
arpl
jmp
loope
dec
xchg
or
mov
pop
add
cmp
or
fadd
fildl
and
pop
jg
in
insb
das
jno
xchg
lcall
cli
shll
inc
clc
xchg
mov
test
cmp
ljmp
out
addb
cmp
test
rolb
or
cmp
or
scas
sti
into
shlb
mov
dec
adc
cmpsb
and
sub
cld
aad
lahf
mov
das
fbstp
pop
inc
inc
mov
dec
mov
cmp
xchg
lahf
or
fidivl
fcom
call
pop
cmp
adc
push
scas
mov
flds
jbe
ficoml
adcb
push
clc
orb
xor
xor
lods
xchg
push
lods
negb
push
mov
push
jno
xchg
sbb
and
jo
and
ds
bound
subb
mov
les
cmp
pushf
ret
xchg
lret
mov
jle
mov
sahf
pop
lret
push
movsl
inc
out
lret
and
hlt
les
mov
xor
push
flds
popf
icebp
mov
movl
jno
fcoml
data16
inc
movsb
popf
push
sbb
inc
mov
fnstcw
lret
xor
inc
cmp
cmc
clc
mov
mov
bound
mov
add
fmuls
cmp
loopne
xor
xchg
fimuls
push
xor
push
and
adc
mov
cld
loop
xchg
out
add
std
and
cmc
sbb
sahf
xor
push
rorb
xchg
arpl
push
cmp
hlt
mov
movsl
das
ljmp
test
leave
pop
in
sahf
push
mov
test
lret
lret
jmp
push
repnz
jno
outsl
insb
cmpsl
outsb
cmpsl
loop
icebp
mov
or
xor
outsl
cmc
push
test
or
jb
push
sbb
imul
mov
stos
scas
lock
push
mov
and
adc
fnstcw
insl
in
pop
and
sbb
push
out
cmp
push
in
fdivrl
jp
les
into
pop
cmpsb
xor
jbe
enter
pop
pusha
rcll
int3
jecxz
ret
ret
outsl
imul
ret
mov
inc
mov
enter
inc
dec
pop
push
in
je
xor
sbbb
mov
sbb
push
aaa
out
loopne
push
movsl
or
pusha
push
push
sub
mov
jg
push
inc
inc
mov
mov
das
ret
enter
xor
lcall
test
lret
push
shlb
popf
rol
stc
outsb
ja
mov
sbb
shl
cmpsb
pop
cmc
insb
xlat
jnp
sub
test
cmp
inc
leave
sti
push
add
mov
les
in
adc
push
xchg
into
push
mov
dec
inc
and
cwtl
dec
aam
mov
add
aas
inc
repnz
cmp
rorl
and
and
insl
and
lret
out
jb
cmp
cmp
push
xor
fstps
cmpsb
jge
stc
pop
ret
cmpsl
mov
test
push
jg
inc
sub
cmp
pop
push
in
xchg
data16
dec
push
int
inc
in
adc
es
ret
add
fldl
mov
sbb
fstpl
jno
cmp
push
cmc
cmc
adc
add
testl
mov
scas
scas
mov
test
sbb
xchg
sub
add
and
call
out
hlt
sub
aas
jne
and
popf
mov
cmpl
sarl
mov
push
jecxz
mov
mov
cs
cwtl
out
aas
mov
sub
imul
pop
mov
inc
adc
jns
test
mov
sub
mov
adc
incl
pusha
and
pop
lahf
loop
pushf
vaddpd
xor
push
mov
call
call
test
sub
pop
adc
arpl
aad
adc
pop
gs
inc
pop
xchg
mov
scas
aam
int
pop
aad
cmpsl
pushf
pop
add
jnp
in
pop
sahf
outsl
adc
ljmp
das
hlt
pop
cmpsl
scas
repz
mov
div
mov
cmovae
jb
dec
push
mov
mov
pop
popa
stc
out
loope
rcrb
ds
iret
pop
test
inc
mov
jle
test
fldcw
shll
mov
add
cmp
lods
test
jo
or
cmp
xchg
clc
xchg
xor
pop
and
in
mov
inc
shlb
mov
add
xchg
pop
ret
inc
jo
aas
ljmp
in
or
mov
repz
je
mov
inc
mov
js
icebp
arpl
cmpsb
cmpl
aam
ds
xchg
inc
xchg
fistl
jmp
enter
jae
mov
int3
xlat
xor
jge
sbbl
add
in
mov
sbb
fnsave
out
pop
dec
dec
xchg
jnp
add
movsl
cmp
mov
mov
lods
jge
sub
inc
in
pop
test
mov
ja
movsl
pushf
cs
sub
and
rol
dec
cmp
xor
aas
mov
xchg
sub
adc
ds
push
in
in
das
mov
sub
inc
jmp
les
lea
sbb
cmc
xchg
inc
cmp
ss
xchg
movsb
and
shl
jl
sub
int
out
adc
clc
bound
aaa
test
mov
icebp
cmp
imul
sbb
dec
inc
arpl
mov
fistpl
pop
enter
data16
rcl
adc
or
push
mov
mov
js
jmp
dec
loop
sbb
aaa
out
and
sub
sbb
rorl
in
leave
xchg
jle
movsb
add
pop
in
or
out
xor
ljmp
push
scas
mov
pop
add
and
push
mov
fisubrl
push
stc
adc
std
popf
pop
dec
jne
or
inc
xchg
loop
or
aam
enter
ljmp
scas
insb
jns
mov
popf
outsb
cs
fwait
andb
lea
mov
test
shll
in
pop
or
sbb
lods
and
stc
push
xchg
flds
stc
inc
jecxz
fnsave
cmp
sbb
shl
out
inc
loop
xchg
dec
sbb
std
out
jmp
mov
inc
out
rcll
push
shlb
sub
mov
add
scas
in
addr16
mov
sar
je
xor
js
or
cmc
gs
xchg
or
testb
out
mov
daa
int3
inc
lret
pushf
mov
fsub
push
js
aad
das
dec
enter
push
lods
dec
inc
ss
push
and
enter
jo
imul
xchg
in
in
or
mov
cmpsl
add
lods
adcl
sti
insb
clc
xchg
je
fs
pop
loope
or
sub
mov
lret
rcll
xrelease
or
mov
es
mov
fwait
xchg
jmp
xchg
shrl
decb
add
lahf
mov
xchg
adc
mov
pop
repnz
mov
cmp
inc
cwtl
adc
ret
add
lock
cmp
jae
lods
xlat
pop
dec
clc
aam
jecxz
mov
mov
loopne
jp
cmpsb
jnp
inc
xchg
mov
mov
mov
out
jo
cmp
es
data16
lods
dec
daa
pushf
jle
dec
imul
xor
xor
mov
push
cs
push
mov
mov
or
test
aaa
jae
das
in
inc
adc
mov
xchg
rcll
loope
outsl
xorl
popa
dec
push
inc
test
mov
dec
pop
out
rcll
or
fldcw
lcall
pusha
pop
shr
sbb
mov
data16
push
mov
dec
je
sti
xor
pop
dec
addr16
mov
dec
call
ja
imul
movsl
fst
sti
dec
dec
aad
mov
adc
ja
and
push
lds
mov
movsl
leave
dec
mov
lods
imul
outsl
mov
sbb
jecxz
pop
push
leave
or
sbb
cmp
frstor
cwtl
jle
lea
and
fxam
inc
add
rorl
adc
mov
and
pop
out
xor
sbb
xlat
inc
dec
and
jg
lret
xchg
adc
mov
cwtl
arpl
pushf
aas
jecxz
jbe
mov
jge
lahf
fstps
fwait
std
mov
fcmovbe
sub
sbb
in
jb
mov
xchg
testb
in
jbe
ret
cmp
aas
jnp
xchg
xchg
push
test
movsb
mov
dec
push
dec
je
push
int
pop
inc
mov
in
nop
inc
stc
mov
sub
popf
gs
mov
jl
mov
inc
jnp
dec
in
das
mov
add
imul
out
mov
out
andl
xor
das
movsb
cs
and
push
cmp
aaa
xchg
loope
mov
leave
push
xchg
cmpsb
js
push
into
movb
fdivl
int
enter
add
mov
scas
mov
sahf
jmp
test
test
jo
jno
mov
adc
add
aad
cmpsb
cmp
cmpsb
fiadds
popa
std
pop
sub
push
dec
sahf
xchg
push
sarb
shll
mov
ret
addr16
jbe
xchg
gs
xchg
and
out
jbe
sti
addb
and
daa
bound
jmp
lods
in
fsub
and
ljmp
cmp
mov
mov
jmp
pop
inc
xchg
pop
mov
or
dec
xor
bound
xor
into
cmp
shr
add
push
loopne
cltd
push
inc
pop
fs
fs
pop
mov
dec
adcl
pop
dec
or
sbb
adc
sbb
push
or
inc
dec
and
inc
sbb
lahf
inc
popw
rorl
test
sbb
or
sub
shll
mov
add
lods
test
adc
cmp
adc
cmpsb
out
inc
mov
push
imul
push
sub
repz
sarl
add
jmp
fbld
add
dec
dec
or
mov
lods
sbb
or
mov
movl
adcl
adc
mov
ljmp
in
mov
mov
imul
xchg
or
arpl
jecxz
daa
and
lea
cwtl
jmp
push
imul
mov
xor
and
sbb
adc
scas
inc
cltd
lret
dec
out
sub
lea
inc
jl
test
out
ljmp
ror
test
cmp
jge
rcll
adc
lods
leave
xchg
sbb
cmc
cli
pop
ror
lds
sub
jge
adc
fwait
jp
or
jne
mov
or
fimuls
jmp
pop
dec
int3
js
negb
mov
pop
stc
mov
adc
push
ss
into
mov
xchg
insl
popf
aam
xchg
loopne
aaa
sub
xchg
adc
lahf
or
jge
pop
je
or
into
or
inc
fcomps
js
cmp
shlb
outsb
in
repz
lock
mov
and
pop
bound
sub
dec
xor
leave
test
inc
stos
mov
ja
sbb
fsts
inc
add
cwtl
aas
popa
je
test
cli
sbb
xchg
dec
enter
mov
pop
inc
cmp
mov
mov
pop
mov
pusha
in
cld
xchg
and
xor
mov
sub
test
cmp
outsb
popf
push
dec
je
pop
jbe
cltd
mov
cmpsb
orl
dec
pop
or
js
das
negl
jg
and
mov
pushf
dec
xor
fimull
mov
push
sub
aam
adc
push
dec
and
jmp
cmpsl
mov
sbb
push
insl
sub
leave
into
and
lods
cmpsb
adc
in
mov
push
xchg
dec
daa
xor
sbb
or
call
out
jge
push
cmpsb
outsl
push
sub
lods
movaps
in
pop
xchg
addr16
bnd
push
mov
faddl
add
sub
int
repnz
sbb
sar
jp
inc
and
push
ja
lods
lods
push
lds
iret
or
mov
jnp
push
cmp
fisttps
sbb
jl
mov
ret
in
mov
loope
cmp
and
adc
pop
scas
ds
aad
jge
out
add
std
jl
sti
and
add
xor
push
push
jo
mov
mov
data16
sbb
out
out
fsts
out
nop
or
jbe
aam
mov
movsb
iret
icebp
in
mov
lea
cli
xor
cmp
out
jg
mov
sti
test
jnp
dec
mov
push
cmp
outsl
addr16
fsub
das
push
movsl
je
jns
gs
pop
sbb
mov
and
rclb
inc
in
jbe
fldenv
popa
in
add
jb
inc
cmp
push
and
in
jmp
into
or
lock
and
dec
daa
xchg
cmp
xor
jne
mov
pop
xlat
in
jle
ficompl
icebp
mov
mov
sub
out
clc
jle
cmpsb
mov
sub
mov
push
lods
test
inc
push
nop
fs
xchg
icebp
into
test
mov
dec
mov
jge
mov
mov
lcall
adc
dec
addb
pop
test
repnz
sahf
xchg
mov
jbe
mov
xchg
outsl
xchg
test
cmp
xchg
fsubrl
jmp
scas
js
xor
xor
push
stc
scas
dec
xor
sti
iret
jg
add
fwait
push
sbb
jne
pop
loopne
xchg
xchg
pop
add
xchg
int
aaa
rorb
jne
jne,pt
add
incb
push
scas
jnp
pushf
cmc
or
mov
fsubr
xor
xlat
dec
fs
push
mov
hlt
shll
aas
mov
scas
xor
in
in
arpl
addr16
mov
aam
arpl
sbb
mov
jbe
imul
xchg
mov
aam
outsb
outsb
lds
ss
mov
inc
pop
inc
inc
mov
mov
out
insl
dec
stc
xchg
xchg
es
push
mov
daa
push
pop
movsl
and
or
mov
sbb
and
aad
mov
aas
pop
icebp
sti
and
outsl
push
fnstenv
xchg
xor
outsb
sub
lret
push
or
shlb
sahf
push
add
xchg
movsb
jmp
dec
adc
push
xchg
pushf
jb
iret
pop
push
xor
add
xchg
sub
or
xor
mov
cmp
adc
int3
xor
int
cmp
imul
jnp
fisubrs
mov
cs
ss
dec
dec
xchg
fwait
inc
inc
mov
cmp
adc
xor
add
pop
cld
pop
adc
sbb
or
xchg
loopne
shl
or
js
imul
xchg
sub
cmp
mov
dec
mov
popa
pushf
and
leave
shlb
imull
adc
xchg
imul
dec
xor
mov
incl
adc
lcall
pop
cmovge
dec
pop
push
push
hlt
data16
sub
test
jb
inc
dec
add
ret
adc
popf
pop
pop
jo
out
sub
cli
pop
stc
jnp
push
and
je
xor
enter
sbbb
and
adc
dec
int
rcrl
mov
xchg
jbe
pop
mov
add
int3
mov
push
dec
push
lret
scas
mov
xchg
fs
sub
dec
jmp
testb
mov
cs
or
or
add
mov
inc
and
mov
push
lcall
push
dec
inc
mov
enter
jb
loope
push
cmp
sbb
cwtl
insl
pop
pusha
loope
out
sti
sbb
sbb
xor
mov
pop
xchg
push
inc
movsb
cmpsl
xchg
addb
popa
fists
pop
scas
xlat
add
insb
stos
mov
sub
fwait
movsl
lahf
xchg
stos
add
rorl
xchg
jmp
add
xor
mov
dec
mov
jnp
inc
jl
imul
subb
mov
dec
clc
cmp
inc
aaa
pop
push
mov
out
fwait
stos
adc
or
mov
add
and
pop
icebp
std
or
scas
cmc
cmp
rolb
push
sub
popl
inc
and
insl
pusha
mov
and
fdivrl
mov
mov
jne
pop
fcmovne
cwtl
pop
out
jbe
mov
iret
bound
push
mov
test
sub
nop
jae
jo
xchg
mov
add
loopne
push
aaa
leave
mov
push
mov
es
pushf
push
and
jno
cmpsl
push
xlat
sbb
addr16
lock
pop
gs
loopne
outsl
pop
shlb
jmp
aaa
neg
out
xchg
out
repnz
add
jns
vaddps
out
shlb
sahf
mov
sbb
std
js
add
das
out
cmp
out
hlt
fisttpll
das
jo
dec
push
jecxz
aad
xchg
xchg
mov
fidivl
inc
xchg
ret
push
frstpm(287
sub
and
push
jl
mov
jnp
or
dec
insl
sub
xchg
shl
push
adc
push
aaa
pop
inc
fnsave
jbe
fsub
adc
lods
xor
out
push
outsl
mov
jo
push
jmp
or
dec
outsl
adc
and
pushf
pusha
int3
add
loop
jbe
xchg
popf
xor
nop
pop
mov
and
jo
jp
adc
mov
sbb
sarb
rclb
add
jbe
in
test
inc
cld
lcall
cltd
dec
repnz
inc
mov
stos
ds
out
negb
push
add
jp
jle
pop
in
ret
daa
mov
shlb
sbb
and
test
outsb
call
in
fmuls
jl
or
or
ret
or
jae
jle
jno
and
pop
das
test
lds
adc
gs
test
movsb
or
mov
dec
dec
mov
aad
jb
popa
arpl
shrb
dec
cli
repz
lahf
jle
repz
sub
sbb
imul
xchg
mov
sbb
in
mov
lods
and
mov
push
jg
sub
and
adcl
les
sbb
lea
inc
sub
mov
mov
dec
arpl
fwait
pop
push
fxch
lret
xchg
rcrb
sub
dec
sub
jae
lea
sub
insl
roll
lahf
xchg
lret
push
mov
jmp
ss
push
xchg
jbe
arpl
cmpsl
xor
cmp
aaa
sub
add
enter
sub
notl
jo
scas
lret
cmp
cs
push
jne
sub
shl
ret
addr16
pop
js
xchg
std
push
popa
arpl
and
sti
jmp
xor
jl
pushf
subb
rol
push
pop
mov
testl
js
xor
inc
rorl
clc
fcomps
adc
aam
add
fcomps
pushf
hlt
stc
inc
adc
or
dec
push
sbb
add
inc
mov
stos
rcr
mov
adcb
push
pop
mov
ja
movsb
imul
addr16
mov
pop
mov
cltd
out
das
aaa
pushf
or
jo
adc
icebp
inc
xlat
pusha
in
cmpsl
xor
xchg
das
js
jp
jne
mov
push
mov
adcl
xchg
xor
lahf
jle
xchg
adc
es
pop
into
out
adcb
bound
push
lods
aas
movsl
sub
imul
lret
xor
mov
testl
pop
dec
fistl
adc
aaa
ret
test
push
pop
flds
sbb
sub
sahf
mov
movsb
push
lods
fiaddl
mov
pop
leave
adc
push
icebp
fadds
iret
push
js
mov
or
clc
jnp
int
inc
daa
xlat
rcl
pop
jbe
aam
arpl
sbb
sbb
sbb
aad
xchg
lock
idivl
fisubrl
imul
into
sub
mov
xor
dec
jmp
add
inc
and
push
lds
pop
sbbb
and
push
adc
cwtl
xlat
or
and
mov
mov
or
dec
and
icebp
mov
push
mov
mov
loope
jmp
call
inc
cmpsl
xor
push
repnz
fdivl
aaa
hlt
addb
sub
inc
mov
daa
mov
ds
and
test
xchg
sti
aam
xchg
ret
xorb
outsb
movsb
lock
ficoml
or
and
fimuls
mov
cltd
inc
into
mov
xchg
and
mov
je
popa
inc
sub
jge
ret
lahf
enter
sbb
out
sahf
sub
mov
inc
cmp
mov
repz
rcll
out
std
pop
addr16
xchg
sub
pop
aam
pop
mov
adc
in
pop
lret
xchg
testl
adc
mov
xchg
or
and
sbb
and
dec
daa
push
xlat
and
in
inc
in
mov
mov
popa
push
jnp
or
testb
fwait
sub
jmp
xchg
add
add
lcall
daa
call
push
outsl
jbe
test
fucomip
add
lahf
mov
jg
imul
fcompl
mov
or
push
aam
mov
adc
out
insl
jmp
add
into
ret
xchg
out
daa
jg
inc
jns
cmpsb
sub
cmc
push
mov
daa
adc
add
jae
dec
movsb
pop
rcrl
mov
inc
push
imul
stos
pop
out
xchg
hlt
sahf
rclb
shll
pop
jns
push
dec
pop
arpl
orl
pop
mov
stos
mov
xor
mov
enter
adc
mov
mov
adc
popf
movsl
dec
ljmp
xchg
sub
adcl
out
out
push
jle
data16
adc
sbb
call
inc
stos
xchg
in
pop
or
mov
pop
xor
in
add
nop
xorl
cmp
aaa
test
cmpsl
and
pop
bswap
mov
jo
sub
sti
push
adc
adcb
jecxz
rolb
arpl
sbb
inc
sbb
pop
adc
dec
popf
call
int
jg
fsubrs
rorl
cs
adc
stos
mov
sbb
sub
add
in
mov
xor
leave
lods
pop
movsl
xor
add
shrl
out
xchg
mov
loope
ss
and
mov
push
dec
aad
inc
decb
addl
sbb
and
clc
mov
sarl
mov
mov
lods
sub
shl
repnz
or
mov
divl
fsubl
jae
xchg
xchg
repnz
push
idivl
lods
fwait
sub
lods
loop
cmp
mov
in
nop
xor
lods
lods
adc
ja
mov
shl
pop
test
rorb
jnp
stc
or
imul
mov
dec
and
push
aad
jg
mov
pop
xor
add
mov
popf
xchg
jecxz
xchg
icebp
test
add
xchg
leave
cmp
add
lahf
pusha
add
inc
add
dec
jo
pop
subb
add
mov
pop
xor
lods
dec
fimull
movsl
mov
push
pop
dec
rolb
mov
jne
sub
mov
mov
aam
inc
test
inc
insb
jo
loop
add
out
jg
cmp
or
stos
out
add
xchg
cld
in
int
xor
std
xor
mull
xchg
dec
rcr
adc
shll
popf
cld
sbb
sbb
push
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
mov
bound
pop
bound
mov
fcomp
jp
xorps
pop
icebp
cmp
aam
jge
out
pop
jle
daa
mov
jo
xchg
adc
pop
stc
ss
cmp
addb
push
jecxz
cmp
pop
loop
sub
xor
andl
in
mov
popf
mov
jne
add
push
js
xchg
push
inc
cwtl
sub
sahf
ret
ds
shlb
pusha
ja
jae
fsubrl
xor
jge
test
jmp
and
dec
fidivrl
add
js
rorb
add
aaa
adc
mov
movsb
mov
nop
and
js
or
adc
int
cmp
loop
loopne
stc
jne
inc
std
or
es
outsb
push
pop
std
scas
sub
jg
mov
insl
nop
cmpb
movb
dec
or
mov
enter
test
jp
lret
sub
out
orb
imul
dec
mov
cmpsl
adc
or
push
dec
shrb
xor
shlb
ret
jg
pop
mov
pop
xor
mov
addr16
xor
xor
add
fwait
lods
inc
je
stos
ret
in
xchg
jno
cmp
sbb
lret
fadds
popa
push
lcall
decb
scas
add
ss
sbb
or
mov
adc
leave
mov
fwait
enter
pop
adc
imull
loop
in
mov
out
cmp
mov
mov
push
in
rclb
hlt
or
mov
arpl
mov
es
push
adc
pusha
fimuls
fidivs
cmpb
xchg
popa
inc
cmp
adc
pop
or
addb
sub
adc
outsb
out
sbbb
insl
inc
pop
mov
aam
bound
and
mov
call
adc
sub
cwtl
push
std
jg
dec
ljmp
add
insb
jno
mov
mov
shll
add
mov
adc
cld
out
out
xchg
sti
fnstenv
cmpsl
jle
push
push
ss
jns
mov
sbb
inc
mov
les
pushf
call
add
xor
push
sahf
in
fs
mov
push
insb
mov
mov
adc
inc
in
mov
out
dec
pushf
lea
mov
cmpsl
test
xchg
or
xchg
xchg
data16
test
cli
push
xor
xchg
adc
pusha
nop
mov
fstl
les
fcoms
mov
cwtl
add
mov
je
scas
push
and
nop
mov
mov
cltd
adc
pusha
or
nop
cli
xchg
fwait
inc
fsubp
pop
mov
mov
inc
cltd
sub
lods
mov
jmp
call
in
sub
inc
fcos
js
xchg
stc
jmp
sub
mov
adc
repnz
cmp
adc
mov
lcall
xrelease
movsb
test
fimull
mov
shl
mov
and
xlat
mov
add
pop
in
push
mov
inc
sub
mov
lods
add
or
and
cmp
add
or
imul
test
push
push
sub
outsb
adc
adc
shrb
xor
mov
mov
or
jb
shlb
or
ljmp
mov
cmc
dec
adc
pusha
cwtl
outsb
jg
pop
ja
movsbl
pushf
jo
int
aad
jnp
pop
test
scas
mov
mov
lret
daa
shl
inc
aas
mov
insb
jecxz
aas
or
jnp
sub
jns
sahf
subb
fs
call
decb
jo
nop
call
sbb
imul
and
aas
push
inc
pop
pop
fisttps
stos
subb
rolb
ja
lods
jnp
adc
aas
mov
jo
in
adc
fs
clc
push
fidivrs
push
leave
xchg
mov
out
sarb
and
xchg
or
mov
and
push
adc
push
xchg
enter
adc
push
cmp
lahf
scas
sub
repz
dec
xchg
movb
int3
jp
cmp
outsb
push
lret
dec
aas
push
jmp
mov
cltd
jnp
mov
and
pop
jg
ja
popf
and
repnz
cmpsb
andl
sbb
popa
movsb
std
popf
jo
fcmovb
mov
mov
shl
lcall
icebp
flds
out
xor
push
enter
xchg
pushf
or
roll
fcomps
and
push
shlb
lock
xor
rcrl
lds
test
es
pop
xor
fldt
cld
adc
movsb
sub
stos
jae
shr
xor
popf
fimull
cmpb
scas
pop
imul
lret
xchg
adc
mov
cmc
dec
cltd
repz
mov
xchg
xchg
cltd
xchg
stc
and
pop
sahf
push
aam
xor
shr
mov
ljmp
in
adcl
xchg
cmp
jb
xchg
push
mov
jle
dec
gs
mov
xlat
mov
iret
dec
outsb
aad
out
xor
dec
loop
pop
cmp
movsl
mov
loopne
xor
dec
scas
xchg
fld
stc
xchg
leave
jl
sbb
jo
loop
inc
sarb
mov
lds
shll
pop
int
out
in
mov
and
out
push
inc
or
and
fsubrs
mov
pusha
rorl
fbstp
lock
pop
jle
push
leave
mov
mov
mov
xchg
pop
mov
dec
in
adc
mov
and
adc
pop
cmp
ds
add
cld
xor
inc
dec
sbb
out
call
xchg
inc
std
sbb
imull
adc
mov
outsl
in
rolb
push
adc
and
push
inc
sti
stc
mov
test
gs
xchg
push
push
jmp
inc
das
js
lahf
pop
sub
cltd
je
movsb
or
mov
shrb
les
adc
pop
inc
icebp
out
dec
les
pop
decl
adc
rorl
push
lahf
cli
xor
cmp
imul
and
mov
sbb
mov
push
enter
popf
and
lods
sub
mov
push
and
jne
pop
cltd
xchg
cmpsb
or
sub
sub
pop
push
pop
ja
and
xchg
inc
add
rcll
nop
das
std
jbe
sar
leave
sti
inc
cmpsl
push
mov
repz
les
mul
sub
xor
sbb
subb
cmp
ds
test
and
add
ss
adc
rcrb
fcoms
insb
xlat
dec
aaa
lea
adc
sbb
scas
rorl
test
iret
popf
mov
adc
xchg
add
iret
pop
add
mov
adc
notb
add
lret
xorl
outsb
ret
dec
rolb
inc
loop
test
pop
mov
xchg
cld
ja
or
jo
sbbb
arpl
into
cli
mov
jl
add
subl
sti
add
cmpsl
lret
jbe
lret
add
and
cmp
imul
ret
int3
mov
sbb
lds
lds
fmull
lahf
int
lds
cmpsl
inc
test
xor
rcrb
das
and
or
push
stc
inc
out
xor
lret
lret
cmp
xlat
rep
outsb
or
pcmpgtb
cmp
sarb
xor
pop
xor
pop
pop
jne
jo
pop
test
mov
jae
sarl
mov
pop
jno
loop
imul
iret
aad
xchg
pop
imul
sub
inc
das
adc
push
adc
es
outsl
pop
jbe
lds
dec
dec
or
dec
mov
shl
ljmp
jle
push
cltd
in
ds
push
cmp
sbb
call
mov
pop
inc
and
inc
push
in
rorl
cmc
ror
nop
mov
xor
sub
adc
inc
stos
stos
ss
cmp
gs
adc
mov
pop
outsb
lret
push
data16
dec
imul
daa
xor
inc
push
cs
jnp
mov
xchg
cmp
mov
aaa
mov
push
cli
dec
xchg
inc
movl
shl
cmc
scas
std
mov
inc
pop
test
adc
sbb
xchg
xor
push
in
jmp
mov
insl
sbb
push
rcrl
stos
sbb
cmp
leave
scas
mov
insb
mov
mov
adc
dec
popa
push
popf
js
mov
iret
hlt
testb
orl
add
sbb
out
pop
cli
pop
xchg
xor
xchg
in
loopne
mov
testl
orb
or
add
and
and
mov
fisubs
js
jb
enter
popf
nop
adc
jbe
outsb
jl
jnp
xchg
cwtl
mov
popf
shrb
push
jl
add
xchg
inc
pop
jo
adcl
pop
adc
sub
inc
lods
lods
cmp
repz
andb
adc
aas
sub
mov
sbb
lods
lea
sbb
sbb
out
call
jbe
divl
mov
sub
mov
ret
mov
inc
add
or
jo
testb
aam
and
in
jb
add
fnstcw
lock
mov
cmpsl
fcmovbe
push
jge
repz
cmp
clc
mov
rcrl
mov
leave
cmp
mov
mov
add
dec
test
loop
movsl
mov
imul
pop
or
jecxz
push
sub
cmp
inc
outsb
pop
packuswb
lods
adc
jne
adc
pushf
sbb
faddl
addr16
jb
add
ja
sub
popa
sub
cmpsl
pushf
lahf
mov
scas
jecxz
adc
jnp
and
add
fsubl
sub
ret
das
cmp
inc
adc
xchg
cmpsl
jne
jno
movsl
adc
inc
jl
push
sub
cmp
in
push
nop
mov
shrb
stos
mov
or
hlt
movl
mov
push
lock
icebp
add
outsb
rdpmc
cmp
cmp
inc
andb
dec
cwtl
pushf
aas
dec
in
cmp
sub
and
xlat
fadds
mov
jbe
xchg
mov
std
jbe
cmpsl
mov
or
lahf
or
scas
ss
loopne
jmp
addr16
add
jp
mov
mov
xchg
sub
mov
pop
aas
sahf
push
mov
int
testl
ss
mov
or
ja
clc
lret
iret
inc
mov
std
mov
or
and
mov
mov
out
jge
xchg
xchg
outsb
fucom
into
xor
das
cs
loope
jg
test
notl
enter
dec
je
xor
add
dec
inc
scas
bound
cmp
dec
jns
lret
pop
cmpsl
push
fdivrl
inc
mov
mov
shrb
jp
jno
into
cwtl
icebp
sbb
int
jl
mov
xor
loopne,pt
iret
fimuls
mov
ss
xor
add
mov
shll
jl
dec
pop
jge
mov
mov
mov
lcall
ljmp
outsb
mov
cli
mov
jecxz
cmp
jg
mov
sarb
lods
cli
pusha
loop
test
ret
movsb
mov
or
ja
push
stos
inc
mov
aad
fcomps
push
leave
out
pop
and
mov
mov
mov
aas
push
push
data16
inc
imul
sub
outsb
jnp
mov
inc
sti
xor
jmp
loopne
cmc
sbb
jne
shrd
cmp
sub
and
leave
xor
inc
stos
mov
loope
scas
xchg
and
and
js
mov
ret
xchg
pop
insl
adc
push
cld
cmp
mov
movsl
scas
push
xchg
adc
int
sarb
lret
into
mov
sti
fwait
mov
outsb
mov
movsb
sub
mov
cmp
pop
adc
push
jg
pop
add
cmp
mov
xchg
notl
mov
icebp
xchg
mov
stos
roll
pop
mov
je
xor
pop
jecxz
sub
pop
int
addr16
movl
subps
mov
xor
rcrl
insl
fwait
xchg
shlb
lret
mov
mov
jl
daa
or
inc
pop
xor
mov
repz
fadds
sub
xchg
mov
mov
fdivl
jno
or
das
sub
sub
cmp
into
mov
sub
cmp
xchg
push
bound
or
mov
push
push
ds
jns
xchg
subl
pop
mulb
out
cmpsl
xchg
sbb
inc
pushf
aam
enter
pop
mov
imull
fadds
adc
jo
int
cmp
push
inc
jbe
ds
test
push
imul
loopne
xchg
pop
jns
repnz
adc
icebp
out
dec
jecxz
aas
pop
jnp
jle
gs
xchg
es
push
pop
push
aas
add
int3
daa
mov
out
enter
push
inc
outsb
addr16
lea
lret
pop
sub
push
push
je
mov
jp
xchg
xor
decl
sti
xchg
mov
mov
lahf
fnstsw
fisubrs
cmpsb
adc
xchg
inc
dec
adc
test
mov
jb
xor
jbe
fmul
sar
or
outsb
sub
push
jnp
jl
lods
sub
inc
or
imul
mov
or
pop
add
icebp
jl
adc
jmp
sub
inc
pop
clc
xor
add
aas
add
inc
mov
fisttpl
or
outsl
outsb
mov
or
scas
xchg
fs
enter
pusha
fbld
mov
es
fbld
dec
push
or
mov
cmp
xchg
pusha
cld
shl
ret
in
ss
data16
sub
jl
fwait
xchg
fcomps
fdivs
aaa
addb
mov
push
movsl
cmp
shlb
iret
or
out
xor
rorb
adc
fldln2
repz
or
cs
inc
popf
push
dec
fs
dec
pop
test
fisubrl
dec
mov
daa
nop
sarb
and
jp
push
adc
popf
push
dec
xchg
mov
je
mov
fs
adc
pop
mov
xchg
xlat
sub
fsubrl
inc
lock
cmp
cmp
stc
jecxz
jle
dec
mov
mov
cmp
add
gs
out
stos
repnz
addr16
mov
push
push
lods
jmp
insl
pop
pop
xchg
sbb
pop
pop
adc
repz
sti
push
mov
mov
lock
ds
sbb
pop
mov
dec
inc
je
ret
mov
enter
push
cmp
imull
fdivs
xor
push
jns
loop
mov
ljmp
pop
in
inc
cmpsb
insb
cmp
stos
mov
ljmp
aad
add
jle
xor
into
push
pop
fcmovnu
xchg
dec
mov
sbb
jge
int
sub
das
xrelease
mov
add
ret
mov
or
nop
out
mov
pop
inc
ds
xchg
xor
jae
mov
cld
stc
ljmp
test
inc
mov
icebp
mov
cmpsb
cmpl
sub
mov
rorb
psubusb
inc
jg
and
mov
jmp
dec
and
xor
out
and
or
pop
in
xchg
adc
mov
je
xchg
cld
out
adc
rcr
fildl
sti
fld
xor
xchg
dec
inc
push
pop
popa
cmp
xchg
and
pop
js
cli
pop
or
ficoml
mov
jp
loopne,pt
adcl
cltd
push
sbb
cwtl
imul
mov
ds
cmp
bound
cmpb
adc
fcompl
sbb
arpl
mov
pop
iret
dec
fnstcw
mov
test
loop
mov
scas
pop
sub
jg
and
push
int3
adc
outsl
mov
push
jecxz
div
jge
pop
sbb
fbld
mov
xchg
fists
cmp
data16
loop
fnstenv
stos
shlb
mov
aam
mov
repz
cmpsl
push
xor
jp
add
cmp
pop
int3
xlat
and
xor
imul
inc
test
sub
add
xor
loope
fcompl
inc
testl
mov
pop
aas
shrb
cmpsl
out
aad
xor
mov
fcmovu
or
jmp
jnp
or
mov
rcrl
xor
jmp
outsb
push
and
dec
cwtl
clc
fsubrs
sub
ret
push
mov
and
pushf
ss
stos
popf
negl
adc
push
scas
test
aaa
ds
nop
out
scas
les
nop
pop
adc
or
adc
push
push
fsubs
jo
lods
mov
loope
push
out
rorl
sub
divl
test
adc
int
ret
jp
mov
xor
je
lods
xchg
dec
cmp
adc
mov
stc
inc
popa
imul
jo
jp
dec
shr
pushf
cld
dec
lods
daa
imul
cli
stos
pop
push
dec
rolb
lret
push
in
or
fadd
stos
out
sub
fstpl
dec
fldenv
push
adc
or
inc
cmp
shll
and
aas
ret
jecxz
pop
movsl
push
mov
ret
fildl
ds
repz
faddp
scas
rcll
mov
aam
inc
lea
pop
dec
cmp
fmull
sti
loope
xlat
xlat
mov
add
or
std
iret
add
outsl
or
cld
js
xor
and
cmc
call
stos
or
arpl
std
xchg
aam
jnp
data16
pop
xor
jb
outsb
arpl
enter
mov
in
jne
adc
jl
jno
inc
or
mov
dec
sub
mov
or
pop
and
sbb
inc
frstor
pusha
mov
pop
decl
jae
clc
out
es
lock
imul
xchg
jae
imul
es
dec
js
lret
lahf
xchg
cwtl
jnp
and
jg
scas
inc
cmp
adc
cmpl
loope
les
lret
jg
add
xchg
fdivrp
dec
sbb
pop
stos
jmp
sbb
negl
loop
lods
push
lods
sbb
sub
cli
ror
push
jno
dec
dec
hlt
lds
mov
sub
dec
mov
xor
lret
cmp
fisubrs
pop
cmpxchg
scas
into
mov
andb
or
mov
in
movsl
pop
cmp
fbstp
arpl
jg
out
mov
lret
dec
cmpsb
xchg
push
lret
jo
cmpsl
loop
cmc
pushf
push
mov
das
push
and
push
pop
mov
sahf
xor
sub
shrb
nop
cli
aad
stos
inc
add
pop
xor
mov
sbb
dec
movsb
sahf
dec
xorl
and
mov
push
and
outsb
movsl
jl
push
imul
pop
insl
xchg
lea
inc
xchg
push
popf
scas
mov
xor
and
push
and
sti
in
mov
stos
xor
pop
sbb
popa
cmp
cwtl
push
out
mov
js
mov
xchg
aaa
lret
jl
int3
lods
dec
lcall
and
mov
or
dec
icebp
rcrb
pusha
xlat
dec
test
dec
ljmp
imul
jb
test
sub
sbb
pop
cmp
lret
es
mov
jge
data16
inc
insb
pop
fmuls
call
cltd
idivl
iret
add
ret
mov
sti
scas
pushf
add
fwait
dec
mov
negb
xchg
ret
xlat
stos
mov
mov
cmp
outsb
jo
std
pop
mov
outsl
dec
sub
fcmovnbe
nop
fdivrl
xor
sbb
sbbb
jnp
popa
sub
rcll
inc
push
leave
mov
adc
dec
imul
je
test
sti
aas
mov
or
pop
adc
addr16
loope
int
sub
cmp
mov
mov
mov
arpl
mov
or
movsl
sub
nop
jne
pop
cmp
inc
sbbb
fsubs
pop
xchg
lods
adc
jmp
jns
jg
out
xchg
mov
sub
mov
add
cmp
mov
jbe
lcall
push
jno
jp
sub
mov
into
pop
mul
imul
rcr
inc
inc
cmp
jns
outsl
push
shll
mov
ja
pop
sbb
mov
fbstp
aam
sub
inc
in
pop
or
push
mov
xor
add
jne
xchg
arpl
mov
jmp
inc
shll
scas
leave
mov
out
mov
sbb
lea
mov
arpl
aam
xor
fs
cld
xor
sbb
mov
sbb
jp
mov
jns
movsl
out
or
xchg
xor
pop
add
roll
mov
mov
enter
mov
cli
shrb
jp
cli
scas
je
xchg
mov
stos
dec
inc
loop
pop
xchg
cwtl
hlt
inc
add
lea
xchg
xor
movsb
pop
daa
mov
sub
loopne
adc
call
or
push
cltd
or
jnp
stos
cmp
push
xor
mov
push
xor
push
push
jg
pop
mov
fs
scas
shrb
push
jg
fistpl
out
mov
test
jg
out
pop
call
cmp
inc
std
lahf
jle
sbb
lods
or
sarb
in
ss
pushf
cmp
rol
movsb
stos
mov
jg
xchg
aas
or
pushf
inc
aaa
jne
aas
lahf
push
add
imul
out
das
jp
cmp
push
mov
xor
push
rol
popfw
outsl
push
lods
push
fadd
mov
ret
out
fstpt
xor
enter
push
outsl
mov
int
inc
popf
mov
push
mov
loope
push
mov
adc
adc
int3
jo,pt
cltd
push
jne
insl
test
pop
lahf
loop
mov
popa
pop
sub
iret
and
dec
mov
out
adc
jo
add
push
imul
inc
cmp
rcl
cmpsb
cmp
inc
jne
push
jle
data16
enter
sbb
mov
sbb
xchg
pop
sub
sbb
lds
add
outsb
inc
cmp
mov
les
addr16
adc
push
loopne
and
inc
cmp
das
lcall
mov
mov
xchg
test
xchg
mov
out
iret
push
rcll
aam
stos
jge
gs
xchg
stos
push
inc
sub
inc
aad
pop
cltd
lea
lret
out
dec
mov
fadds
sub
es
das
data16
lcall
fcmovb
and
or
lds
orl
inc
test
push
add
insl
jg
test
jb
adc
xor
fcomps
stos
inc
add
stc
call
jl
inc
ret
and
pop
sub
mov
adc
das
or
imul
cmpsb
out
daa
fdivrs
ljmp
cmp
repnz
xchg
test
lods
jo
shll
jnp
aaa
jecxz
add
lods
jecxz
test
ja
add
push
dec
push
pushf
scas
aam
cmc
adc
push
int
sub
imul
aad
jnp
fimuls
xor
fsubl
jg
mov
lret
xor
mov
xorl
mov
and
insb
rclb
dec
or
stos
adc
mov
lock
or
push
cs
fstl
pop
dec
nop
jge
pop
xchg
sub
xor
hlt
outsb
and
xlat
in
mov
outsl
aaa
aam
call
test
and
jnp
orb
dec
sub
adc
ljmp
jg
pop
sbb
jne
cmc
push
jb
xchg
cmp
out
xchg
ljmp
cmp
mov
pop
dec
imul
mov
scas
sub
dec
add
out
cmp
aaa
jnp
push
scas
and
mov
push
enter
dec
gs
jmp
ror
adc
xchg
decb
xchg
sub
stc
int3
add
insb
inc
daa
movsb
cltd
mov
arpl
sbb
icebp
std
cwtl
mov
test
mov
sbb
stos
jl
fnsave
std
jmp
adc
loop
cmp
xor
jmp
loope
scas
into
imul
add
or
fcom
mov
pop
push
mov
xchg
fs
hlt
daa
gs
mov
push
cmc
lret
rclb
es
in
aas
push
imul
inc
adc
out
push
mov
xchg
pop
int3
icebp
ds
adc
pop
mov
inc
xchg
shlb
repz
xor
xchg
adcl
add
sbb
jo
pusha
add
sbb
dec
push
jl
xchg
popa
mov
into
into
sahf
mov
sbb
sarl
lds
jnp
xor
dec
es
dec
or
push
mov
sbb
shlb
push
or
inc
sub
addr16
jno
push
roll
arpl
cmp
jg
mov
sub
or
insl
mov
int
out
cmpsl
and
jmp
sbb
mov
mov
ret
cwtl
out
mov
call
fimuls
rcrl
nop
dec
xchg
fcos
loopne
mov
adc
pop
ljmp
ret
dec
incb
cli
lcall
dec
mov
bound
in
mov
fwait
int3
fdivrs
mov
aad
popa
stos
lds
call
bound
push
jnp
test
adc
mov
pop
scas
jp
push
add
or
sarl
aas
adc
loop
dec
aad
and
lret
pop
mov
loop
xchg
sub
mov
push
popf
jae
sub
rolb
push
xchg
mov
xor
pop
dec
lea
das
fwait
push
cmp
cmp
adc
ja
ja
ljmp
jecxz
sub
lods
rcrb
or
imul
movsl
or
rolb
dec
push
scas
js
insb
mov
mov
idivl
adc
push
and
and
lods
fnstenv
xlat
mov
lods
mov
mov
xor
and
mov
into
jecxz
or
pop
pop
aaa
or
cli
in
lds
inc
inc
aaa
xchg
fcmovb
adc
dec
sbb
cmp
cmc
mov
clc
jl
dec
jecxz
pop
jg
shrb
and
stc
adc
test
rcll
sub
je
clc
xor
xchg
mov
dec
sbb
cmpsl
int
fdivrs
mov
adc
movsl
pop
ret
pop
push
dec
icebp
aas
mov
push
xor
inc
xchg
cltd
das
js
sub
lock
fisttpl
clc
cmp
dec
sub
dec
in
mov
rcrb
xchg
sbb
loopne
stos
and
notb
xlat
or
add
pushf
push
cmp
sub
jmp
lahf
xchg
addr16
lcall
mov
rol
in
jl
movb
fiadds
fbld
adc
and
outsb
addr16
mov
and
stc
mov
sbb
xor
adc
int
sbb
rcll
pop
dec
sub
and
xchg
mov
inc
cli
dec
xor
pop
imul
jle
in
push
or
out
orl
jo
pop
mov
arpl
in
in
xchg
mov
add
pusha
aad
out
imulb
and
jle
xchg
js
test
js
xor
adc
cmp
or
cli
mov
pushf
scas
int
shl
jb
cmc
push
xchg
push
in
js
flds
cmp
inc
dec
cwtl
in
into
repnz
in
in
rcrl
sub
xchg
dec
mov
orb
mov
xchg
clc
dec
add
int3
or
xchg
fmul
test
idiv
cmp
adc
jno
dec
xor
dec
push
xor
mov
push
ficompl
xlat
shr
mulb
push
ja
mov
or
es
int3
jge
adc
ret
cmp
cmp
aaa
xchg
cld
faddl
lock
int3
mov
stos
lds
imul
aas
cs
rcrl
int3
fldcw
movsl
jae
inc
clc
pop
push
or
pusha
outsl
jmp
ret
outsb
sub
test
testl
scas
jecxz
mov
and
adc
aas
or
xor
pop
punpcklbw
call
popf
or
movsl
fbld
les
cmp
adc
and
jo
mov
hlt
in
adc
orl
hlt
in
jnp
inc
mov
push
bound
movsb
addr16
out
rorl
leave
sub
lods
lock
pop
add
call
out
aaa
adc
iret
pusha
add
push
jbe
xor
lea
xor
sbb
jp
cmp
mov
xchg
dec
jp
mov
inc
adc
test
sahf
call
adc
loopne
fsubr
lcall
sti
test
pop
dec
and
jmp
sahf
add
mov
pop
fmulp
jge
out
mov
or
pop
insb
pusha
pushf
out
sub
lret
dec
xor
pop
mov
sahf
inc
call
and
call
ja
sbb
mov
test
aam
out
incl
out
fdivrs
sti
or
push
cli
inc
mov
dec
push
sub
inc
flds
adc
lods
test
in
cmc
cs
pop
stc
scas
xchg
insb
ljmp
mov
adc
xchg
data16
push
jnp
pop
push
pop
lock
jl
mov
fists
push
and
fisubrs
xchg
aas
push
or
cwtl
cmp
jns
ja
cmp
sub
daa
or
add
insb
cmp
adcl
adc
or
xchg
sarb
adc
mov
subl
popa
cmp
jmp
fisubl
dec
inc
fs
jae
pop
inc
mov
inc
shll
lock
mov
pushf
mov
inc
xlat
mov
and
sbb
or
inc
add
lret
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
icebp
jnp
cmp
bound
pop
bound
cmpsb
jecxz
push
jle
dec
sub
dec
push
xchg
shll
mov
cmp
dec
push
cli
adc
or
popa
mov
scas
sub
xchg
adc
xchg
xchg
pop
gs
jg
xor
out
and
dec
rcrl
imul
xchg
and
sbb
add
scas
addr16
outsb
or
fsts
sub
jnp
das
adc
faddp
mov
cmp
nop
aas
popa
ja
cmp
xchg
sub
std
movsb
cltd
dec
fucom
into
xchg
dec
push
dec
bound
sub
imul
cmp
push
sub
or
lret
mov
dec
cmp
loope
cmpsl
cmp
add
fwait
mov
dec
or
gs
ror
rorb
mov
imulb
pop
push
add
xor
andl
adc
cmpsl
sbb
int
rclb
add
call
push
push
icebp
cs
inc
push
add
and
je
pop
pop
xor
jl
movsb
cmc
inc
adc
popf
fdivl
pop
mov
push
xor
mov
lods
scas
addr16
jg
jnp
cmp
xlat
cmp
popa
cmc
mov
fstpl
js
xchg
xorl
ret
pusha
mov
iret
pop
lock
push
cmp
xchg
fnstcw
loop
xor
inc
xor
mov
stc
mov
fmul
push
mov
out
leave
sbb
outsl
pop
cmpsl
xchg
je
fmuls
inc
adc
mov
jo
or
sub
jb
mov
xlat
insl
addr16
ret
rol
in
out
aam
andl
ja
dec
inc
mov
pop
push
inc
decl
inc
cmp
test
pushf
faddl
mov
mov
pop
mov
push
cmp
daa
mov
cltd
jnp
lods
adc
daa
int3
adc
xchg
stos
insl
repnz
rolb
outsb
mov
mov
cmp
cli
lahf
adc
lock
xor
leave
popa
mov
and
cmp
push
jns
xor
mov
dec
or
pop
pop
xchg
es
cmp
fstpt
adc
lcall
jge
pop
inc
pop
or
jmp
add
in
lret
daa
push
ss
sahf
pop
mov
stos
or
pop
sub
xchg
xchg
movsb
jecxz
add
mov
add
jae
jmp
lahf
fisttpl
add
scas
popa
mov
jecxz
push
sub
outsl
pop
push
inc
clc
addl
xchg
push
and
xor
jb
inc
mov
sub
dec
or
jb
cmpsb
pop
and
dec
jmp
push
insl
lret
in
cli
jae
scas
js
shll
movsb
jp
lret
mov
and
stos
outsb
sbbl
fmuls
sti
pop
nop
inc
in
jl
adcb
xchg
mov
xchg
cld
lods
xlat
xor
or
push
mov
mov
add
test
inc
xor
pop
scas
sbb
jae
or
push
push
imul
pop
test
addr16
test
dec
dec
data16
ljmp
aad
hlt
pop
jns
add
sub
pop
push
sub
shll
imul
xchg
jmp
outsl
push
andb
add
pop
push
adc
cmpsl
add
push
add
lea
cwtl
hlt
andb
push
jnp
cli
les
pop
adc
push
mov
test
ss
scas
rcrb
dec
shrb
mov
fxtract
mov
fcom
cmp
xor
xor
inc
or
adcl
pop
pop
dec
cmp
mov
adc
popa
pop
jo
push
ret
jbe
inc
out
mov
add
imul
dec
daa
xor
int3
inc
enter
imul
orb
iret
mov
clc
pop
iret
ljmp
movsb
je
std
std
mov
inc
mov
rcrb
negb
jne
cltd
adc
aas
push
xor
xchg
pop
jecxz
adc
js
pop
xchg
xor
loopne
mov
pop
adc
sub
in
aaa
xor
pop
idivb
inc
fwait
push
sahf
and
push
lods
cwtl
in
lret
lret
jno
imul
push
or
shrb
pop
nop
xlat
mov
sbb
xchg
cmp
and
insl
cltd
mov
int
jne
mov
lahf
and
sti
mov
js
push
jmp
xchg
xchg
stos
popa
pop
std
mov
mov
xchg
xchg
addr16
call
enter
or
out
sahf
or
add
ss
jg
cld
fists
mov
mov
rcll
test
lahf
pushf
andl
xchg
add
lods
pop
xor
add
or
sub
mov
pop
js,pn
sub
js
out
fstps
fs
mov
mov
leave
mov
xchg
sbb
stc
shll
xchg
testb
sbb
and
mov
sahf
aas
movsb
imul
les
push
repz
cmp
xchg
divb
cmp
and
mov
adc
ret
push
popf
push
add
inc
sbb
pop
ja
cmp
scas
push
jb
push
dec
aaa
int3
jae
cmpsl
test
test
adc
inc
mov
lods
loop
push
out
and
decb
rorb
pop
outsb
int
stos
pop
inc
popf
cltd
or
leave
loop
loope
dec
test
popf
cltd
mov
aam
inc
xchg
enter
insl
loope
sbb
faddl
dec
popf
inc
or
lods
sahf
test
cli
jb
inc
push
js
outsl
inc
in
in
arpl
xchg
pop
xor
jno
inc
sbb
insb
sti
cmp
out
push
loope
dec
data16
das
lret
push
lret
inc
sub
roll
aam
sbb
mov
lea
add
mov
mov
mov
cmp
loop
sub
or
and
imul
je
shll
cld
scas
ret
inc
repnz
inc
das
mov
xchg
sbb
jecxz
stos
dec
sub
xchg
out
and
and
loopne
fwait
test
or
xchg
loop
out
clc
lret
pusha
cmpsl
jmp
clc
fs
dec
jle
sbb
xchg
lds
outsb
movsb
stc
push
sahf
lret
jecxz
std
mov
push
pop
insl
ds
xor
ficoml
or
xchg
sub
test
add
jns
cmp
mov
jecxz
or
jo
in
jae
loope
mov
aad
or
leave
pop
jle
adc
rclb
sub
sub
mov
and
addr16
and
mov
xchg
mov
pop
leave
ds
mov
pusha
push
data16
movsl
outsb
inc
dec
aas
arpl
fwait
andl
cmp
mov
mov
cmpb
mov
ja
push
cmpsl
mov
lret
lds
or
adc
dec
dec
addb
jne
ljmp
bound
js
push
fnstenv
xlat
pop
enter
push
xor
sbbb
sbb
lcall
int3
sub
pop
fdivr
loopne
inc
jmp
clc
data16
mov
xor
enter
andb
imul
dec
xor
xor
into
icebp
push
inc
push
xchg
ja
sti
mov
aad
sahf
call
jns
cmp
dec
fisubs
clc
lret
adc
icebp
leave
xor
and
adc
adc
gs
mov
inc
mov
loopne
gs
sub
xor
repnz
sarl
rcl
inc
pop
jle
dec
jmp
cmpl
rolb
xor
pusha
and
mov
test
cmp
jae
mov
subl
imul
je
push
xor
push
andl
push
ror
filds
cmc
sbb
sar
div
push
rcrb
sbb
imul
push
add
sub
mov
adc
mov
lock
shlb
fs
loopne
inc
in
loopne
pop
add
inc
in
sbb
fisttpll
imul
and
push
sbb
mov
inc
push
int
cli
mov
xor
lahf
mov
test
fwait
push
cmp
test
xor
push
dec
rcr
cmp
subb
stc
mov
inc
sub
lea
adc
xlat
xlat
pop
dec
loopne
mov
xchg
pop
lods
sbb
jp
lea
into
xchg
jg
jno
xchg
mov
dec
mov
insb
dec
mov
je
ljmp
inc
push
add
jmp
xlat
ror
jle
mov
pushf
movsl
lcall
xchg
mov
fadd
es
test
not
mov
insb
int
test
mov
xchg
mov
imul
sub
xchg
in
jmp
cmp
popa
adc
fisttpll
lahf
fidivrl
insl
lret
in
push
test
scas
xor
mov
adc
ljmp
xchg
arpl
push
test
testb
cwtl
mov
fwait
push
clc
aaa
jnp
ret
dec
stos
nop
jns
out
mov
shl
aas
inc
mov
inc
mov
and
mov
adc
arpl
and
push
dec
popa
out
ljmp
or
or
shlb
daa
xor
in
xchg
xor
ret
test
dec
cmp
inc
rclb
aad
mov
pusha
mov
jbe
call
into
sub
out
sbbl
ljmp
adc
test
jecxz
rclb
push
mov
adc
inc
lods
addb
or
dec
add
divb
pop
pop
xchg
fwait
xchg
cs
dec
push
cmc
lods
push
xrelease
add
dec
mov
push
push
fiaddl
mov
jp
movsl
mov
adc
outsl
adc
inc
add
ljmp
sbb
sarb
leave
imul
sub
pop
psubq
enter
and
ret
fstps
jle
call
insl
and
adc
adc
or
movsl
jp
lret
sub
es
cmpsl
adc
insb
fdivs
inc
push
arpl
fwait
daa
into
cltd
notb
inc
sub
xor
in
mov
aad
xchg
fisubrs
cmp
lret
enter
gs
fnstcw
imul
test
imul
lret
dec
push
ds
jmp
fwait
popf
jae
mov
inc
push
lahf
xchg
jle
sbbb
lds
add
lahf
mov
xchg
repz
mov
fwait
push
lcall
shlb
out
lods
pop
jmp
push
arpl
jo
push
push
cmp
stos
sbb
mov
add
mov
sub
bound
cmp
fnstenv
lret
cmpsl
adc
push
or
and
stos
arpl
loope
xchg
pop
pushl
xor
movsb
cmp
add
add
cmp
push
adc
movsb
rcr
inc
cmp
pop
pop
cmc
adc
mov
xchg
jle
scas
outsl
shl
std
mov
xlat
aas
js
mov
jbe
or
adc
frstors
test
insb
mov
call
xor
fcompl
ljmp
scas
push
sbb
xlat
jecxz
xchg
mov
bound
mov
dec
xchg
arpl
into
loope
cmp
gs
mov
jecxz
xchg
cmp
inc
or
push
adcb
aad
xlat
inc
sarb
pop
jnp
dec
pusha
ret
xlat
in
sbb
dec
in
or
jnp
bound
cmp
mull
pop
xchg
int
test
call
pop
lret
bound
or
jl
xchg
xlat
popa
sahf
sbb
xor
or
push
push
addr16
jmp
add
add
divl
outsl
mov
jnp
or
in
je
jl
cs
rol
mov
cltd
fisttpll
jg
pop
fsubrl
push
xchg
push
lret
xchg
lret
adc
fucomp
jle
or
cld
int3
xchg
paddq
pop
ja
int3
ret
dec
xor
xchg
or
jns
mov
cli
add
lret
and
subb
xchg
ljmp
xorb
test
pushf
divl
inc
mov
aad
mov
gs
cli
stc
push
pop
push
adc
jbe
push
inc
sbb
das
xor
shrl
mov
dec
lods
nop
inc
mov
dec
sub
sbb
jg
insl
sbb
xchg
or
mov
and
lcall
fadds
in
pop
lods
inc
xor
dec
cmp
mov
or
rcrb
insb
jle
mov
pop
push
pop
dec
out
cmp
cmc
dec
sub
lock
inc
mov
push
lahf
stos
sbb
mov
stos
cmpsl
cltd
movsl
lret
stc
and
out
test
dec
xor
sahf
ret
popf
repnz
aaa
mul
shlb
andb
ds
testl
fsts
sbb
xchg
xchg
sbb
push
outsl
mov
push
out
mov
loopne
cmp
inc
xchg
mov
fisubrl
in
push
push
rol
mov
iret
push
xchg
js
mov
and
inc
outsl
push
xchg
aaa
xor
sbb
sub
loope
pop
jl
shlb
xchg
clc
sahf
inc
add
nop
lret
xlat
js
ret
in
sub
lcall
add
sub
shrl
movsl
sub
fcmovnb
pop
push
or
cmp
cs
fs
or
leave
lret
mov
push
xchg
and
pushf
aad
push
cmp
pop
dec
push
movsb
int
dec
andb
lea
int3
loop
jp
xchg
cmp
mov
icebp
jl
dec
repnz
insb
rcll
xlat
adc
or
je
xor
mov
cltd
mov
cmpsl
cli
cmpsb
or
je
hlt
pop
cmp
mov
xchg
cli
mov
mov
sub
lret
addr16
sbb
icebp
dec
scas
push
fs
fnstsw
dec
dec
test
imul
xor
mov
xchg
scas
push
or
jle
rolb
push
pop
test
inc
jmp
loope
pop
mov
mov
ret
gs
mov
stc
jbe
jge
in
mov
pop
sub
repnz
lock
ficomps
inc
nop
rcll
pop
mov
mov
fiaddl
fidivrl
outsl
in
fs
jae
ret
cmp
xlat
dec
mov
fcomps
in
xchg
lahf
leave
sbb
add
sbb
cmpsb
js
mov
sub
xorl
test
xor
cmpsl
lds
add
inc
jno
mov
push
jbe
dec
fisttps
sub
adc
sub
aad
dec
insb
out
or
pop
jns
xchg
mov
fidivs
mov
or
push
imul
xchg
ja
notb
jne
and
stos
mov
aam
das
sti
or
mov
fadds
push
push
inc
push
pop
sti
mov
es
dec
dec
jnp
lods
sbb
loope
mov
ljmp
sarl
popf
pushf
pusha
rolb
inc
mov
cltd
pop
in
xchg
sbb
jbe
jecxz
sub
cmc
mov
data16
mov
cmpb
push
pop
in
mov
shr
fidivrs
stc
xchg
sbb
gs
dec
jb
sub
dec
xchg
scas
xchg
in
loop
jns
arpl
nop
xchg
loop
adc
inc
gs
push
adcl
lahf
jb
scas
addr16
lret
lods
adc
pop
lcall
mov
andb
fstl
mov
xlat
aad
mov
jo
or
inc
push
out
sbb
push
roll
in
mov
into
cmp
mov
lret
mov
jg
jno
add
jo
bound
jo
sbb
ret
notl
inc
xor
cltd
inc
or
arpl
or
call
adc
negb
mov
jmp
xor
rcl
pop
rclb
sti
in
or
popa
repz
cltd
out
cmp
jnp
push
scas
insl
jl
inc
inc
pop
cmp
aad
test
pop
js
stos
jecxz
loop
loope
ja
pop
mov
or
pop
push
jg
out
xchg
enter
jbe
adc
inc
adc
lods
fs
out
test
push
adc
jno
fs
jecxz
mov
ror
mov
lods
adc
and
lret
mov
inc
inc
adc
push
std
mov
pop
add
sbb
cltd
push
sbb
outsb
shl
xlat
loopne
filds
test
cmpsb
lods
rcl
ficompl
cmp
lahf
mov
loope
mov
scas
mov
in
imul
cmp
je
xchg
arpl
ret
inc
js
cltd
arpl
jg
push
out
leave
sub
xchg
xor
push
xchg
or
cmpsb
push
and
ss
arpl
fiaddl
gs
xor
inc
lds
imul
sbb
mov
mov
out
ds
push
jl
rcrb
xlat
sub
sub
lea
sub
cmp
push
adc
daa
sub
mov
loop
sub
xchg
xchg
mov
outsl
add
jae
pop
stos
xor
std
sub
or
mov
inc
out
dec
loop,pt
insb
addr16
into
cmpsl
rcl
and
xchg
dec
jp
mov
jge
push
loop
dec
add
loopne
add
ljmp
test
mov
mov
xchg
rclb
outsb
or
xchg
or
xchg
jg
pop
loop
in
popf
decb
inc
imul
pop
push
lea
and
sbb
imul
cs
or
adc
push
xchg
mov
sbb
adc
mov
scas
int3
inc
rcrb
inc
push
mov
add
arpl
push
lea
mov
shlb
out
sub
testb
dec
js
cmpsb
addr16
scas
lock
cli
cmpsl
lods
jmp
mov
outsl
jae
leave
pop
pop
mov
jno
cwtl
or
rorl
adc
sub
add
xchg
and
jmp
js
sub
lods
or
daa
out
push
outsl
fisttpll
mov
pushf
addr16
xchg
and
mov
sub
pop
ds
scas
cmp
push
dec
lods
aad
mov
fdivl
adc
jne
mov
js
or
test
dec
and
in
mov
mov
out
cwtl
jb
xchg
adc
leave
xor
sbb
mov
ss
cs
or
scas
mov
inc
lods
xor
iret
or
sbb
inc
movsl
clc
push
push
and
cmc
sbb
adc
rorl
gs
aaa
xchg
fldcw
mov
mov
fs
xchg
adc
ljmp
cwtl
push
mov
inc
outsl
jecxz
lods
sahf
fistpll
sub
pusha
popf
mov
sbb
mov
adc
lahf
loop
lcall
cmp
pop
mov
sbb
mov
dec
ljmp
pop
mov
pop
movsb
std
movsl
jge
push
push
notl
clc
dec
das
xchg
push
and
hlt
stos
cmp
push
inc
test
jo
push
pop
and
incb
xor
push
into
sub
addb
add
aaa
aam
fidivs
sbb
xorb
int3
mov
mov
push
mov
xor
add
hlt
fxch
push
popa
mov
xchg
mov
push
movsl
lea
cli
cmp
ret
shl
lahf
rcrb
mov
jo
jg
cltd
testl
ja
sbb
cld
shll
out
pop
push
add
test
mov
push
rorb
sti
sub
lods
lret
cltd
jne
pop
mov
mov
sar
inc
mov
ljmp
mov
ret
jp
icebp
mov
inc
cmp
lret
jle
push
rol
in
adc
repnz
mov
mov
mov
adc
jecxz
mov
outsl
scas
xor
cli
loopne
pop
fistps
loop
xor
pusha
pop
andl
dec
or
outsl
pop
dec
lods
or
sahf
addl
and
xor
pop
adc
mov
mov
jecxz
dec
aaa
xor
pop
mov
outsl
pop
mov
sbb
rolb
mov
mov
fmull
imul
ss
lret
imul
dec
addr16
mov
and
inc
jle
and
mov
mov
shlb
fisubrs
data16
rorl
sub
push
out
iret
mov
mov
daa
std
lcall
mov
clc
mov
addr16
dec
fnstenv
pop
and
jbe
push
movsb
push
xorl
push
ja
jbe
int
lock
cmp
pop
pushf
inc
cmp
mov
lea
add
pushf
xchg
idivb
cmp
icebp
mov
xchg
roll
cmp
sbb
testb
and
test
ss
lds
xchg
vmwrite
add
sub
mov
or
popf
cmp
mov
into
repnz
dec
lret
pop
mov
insl
mov
cmp
lcall
push
mov
sti
cmpsb
cmp
cld
push
dec
mov
xchg
dec
mov
fdivrl
jnp
add
jmp
jae
jmp
mov
sbb
mov
add
sub
nop
mov
cmpsb
inc
mov
xchg
ficoml
and
push
jg
clc
in
bound
enter
sarl
sarb
push
jb
je
lret
in
dec
jmp
imul
ficoml
gs
je
mov
roll
xchg
imul
lret
xchg
cld
cmp
add
sti
cs
mov
repz
in
es
das
fdivl
push
mov
ret
ja
xchg
out
mov
inc
fidivrl
jp
inc
xor
iret
in
push
mov
dec
scas
int
fmuls
fs
in
push
sahf
xor
shlb
pop
faddp
sbb
inc
add
inc
sub
mov
inc
jno
aas
ja
inc
fbld
inc
push
pop
jg
ja
fldcw
sbb
loop
xchg
jns
aaa
insb
imul
sbb
jp
add
sbb
and
xlat
call
sahf
mov
int3
negb
xor
xor
pop
pop
ljmp
int3
jmp
jbe
shr
into
xchg
and
sbb
notb
add
adc
dec
imul
loop
out
xchg
lahf
arpl
pop
pop
out
insb
jle
push
push
dec
lds
xchg
pop
mov
sub
sub
mov
dec
mov
pop
mov
fnstsw
clc
aam
je
lea
in
popf
stos
push
mov
xchg
inc
loope
and
cmp
adc
pop
mov
mov
outsl
cmp
sub
adc
fldt
sbb
push
pusha
cmpb
xor
test
or
movsb
mov
test
dec
jmp
cwtl
mov
xchg
mov
js
movsb
movsl
aad
and
pop
inc
loope
inc
rclb
les
aas
dec
mov
push
arpl
mov
jo
je
sbb
lret
neg
mov
inc
arpl
lret
or
scas
movsl
cltd
xor
pop
in
mov
jne
mov
adc
mov
ret
push
test
push
idivl
pop
push
les
push
int
ja
sub
xor
loop
inc
lea
mov
repz
insb
jmp
xchg
sbb
sahf
or
testb
test
sub
mov
jo
push
mov
jmp
inc
dec
shl
imul
loope
sub
rcll
add
pop
and
adc
add
xchg
lock
pop
jo
pusha
stos
fcmovnbe
cmc
shlb
pop
dec
andl
mov
mov
jp
mov
pop
mov
jmp
int
sbb
cwtl
jp
popa
cmp
bound
mov
ja
sti
faddl
and
mov
mov
flds
pcmpgtb
lcall
jge
xchg
orw
shlb
mov
push
push
fwait
jo
and
mov
mov
and
loop
or
and
test
pusha
push
xchg
or
fisttpl
out
xchg
pop
insb
clc
mov
addr16
push
leave
and
int
scas
sahf
out
xor
mov
scas
mov
and
jno
gs
sub
adc
sub
roll
xor
enter
pop
mov
inc
cmp
push
fisttpl
lods
icebp
ss
roll
pop
insb
pop
sub
out
mov
std
sbb
dec
pop
cmp
dec
pop
lods
push
hlt
mov
daa
pushf
test
xchg
mov
cmp
add
xor
loop
inc
in
jge
ja
popf
frstor
leave
aaa
xchg
stos
mov
sbb
xor
pop
inc
daa
dec
mov
cmpsb
or
dec
int
mov
dec
cmpl
lock
inc
out
into
es
lea
cmpsl
jae
push
fld
inc
lahf
xorl
jmp
jae
pop
pop
mov
pop
xor
jnp
inc
cmc
fcmovb
and
sahf
in
aad
sub
in
nop
dec
mov
arpl
lock
mov
and
movsl
cld
xchg
imul
jno
xchg
push
or
fcoms
and
cmp
xor
pushf
jp
dec
sub
inc
sarl
sub
add
inc
push
popf
inc
dec
out
cmpsb
pop
adc
test
pop
outsl
xor
setns
adc
fildll
or
nop
jnp
cmpsb
out
movsb
stc
pushf
or
inc
or
pop
lea
mov
aaa
loopne
pop
nop
lock
jg
imul
popa
cmpsb
xorps
pop
out
cmp
lcall
push
cmp
inc
mov
icebp
pop
pop
mov
fldcw
lods
inc
jl
and
mov
lock
leave
xchg
mov
aad
call
jbe
jbe
adc
push
inc
rep
enter
cmpsl
ret
and
add
lret
xchg
xchg
cld
pusha
loope
fldenv
test
push
sub
test
mov
mov
cli
mov
mov
fs
mov
out
lods
push
cmp
jo
mov
ja
cmp
add
ljmp
inc
pop
adc
js
daa
out
rol
out
inc
idiv
xlat
scas
dec
lock
jl
and
lea
jmp
fidivrs
inc
movhps
adc
enter
pop
add
shrb
aaa
mov
gs
sbb
arpl
mov
das
out
adc
xor
or
jecxz
jle
mov
sbb
adc
bnd
cmp
mov
out
xlat
sub
jo
scas
stos
fsubrl
push
push
shl
test
or
xchg
add
cmp
cld
hlt
aad
imul
loop
bound
clc
sbb
xchg
stos
xor
cmp
jb
xor
and
mov
jne
dec
add
ja
mov
std
lret
jl
add
int
cli
pop
mov
cmc
js
xor
imull
outsl
movsb
pop
jns
lahf
sbb
xlat
inc
leave
and
test
or
ss
or
xor
mov
ret
push
inc
jl
mov
add
push
sub
shlb
in
jo
lods
insl
ja
or
jg
push
add
roll
cmp
stos
lods
adc
dec
mov
je
pop
aad
test
push
iret
test
inc
out
popf
ss
clc
or
cs
pop
mov
loop
fistpl
add
out
jmp
inc
jne
scas
jno
jp
cmp
jle
stc
and
outsl
xchg
push
fwait
or
adc
std
shll
xlat
fbld
ljmp
mov
dec
stos
xchg
neg
iret
inc
jmp
stos
lcall
int3
ja
jns
sub
push
and
jp
xchg
push
sbb
hlt
xchg
stos
leave
lcall
jl
dec
sbb
fdivl
inc
push
mov
daa
xor
mov
out
cmp
enter
iret
jge
and
popa
jg
push
jmp
js
pop
mov
pop
daa
push
inc
std
adc
xchg
mov
add
pop
and
and
mov
mov
pop
xor
arpl
xchg
lret
in
pop
lods
jnp
mov
sub
jle
mov
add
jnp
pop
xchg
movsl
cmp
rcrb
cmp
dec
jno
mov
out
out
mov
jb
inc
sbb
pushl
data16
daa
insl
fistpll
and
cmc
xchg
lods
into
cltd
or
xchg
fwait
cmpsb
or
push
mov
add
xchg
lds
sbb
mov
pop
cwtl
out
rcll
inc
sti
out
mov
sub
mov
sub
xchg
sbb
jecxz
dec
pop
dec
inc
and
mov
mov
inc
jns
sbb
lods
xchg
mov
in
outsl
push
jb
push
jmp
pop
aaa
jge
inc
mov
jl
rcrl
out
mov
pop
rcrb
mov
call
std
loopne
jmp
int3
jmp
add
pop
dec
roll
leave
mov
std
daa
rolb
je
xlat
add
mov
jnp
dec
adc
shll
or
test
dec
adc
inc
pop
or
sub
push
mov
xor
pop
pop
mov
push
pop
aas
xchg
sub
rcrl
add
lea
into
cmpsl
shlb
push
stos
add
xchg
pusha
lods
aad
inc
xor
daa
adc
test
dec
xchg
push
leave
push
outsb
cmp
addr16
fs
mov
adc
stos
clc
dec
inc
mov
xor
sarl
aam
outsb
mov
or
test
scas
add
or
sub
cwtl
jb
sub
enter
iret
shll
jmp
inc
pushf
in
lods
mov
mov
inc
jmp
pop
xor
jno
or
inc
xchg
jne
pop
mov
xor
xor
lods
push
fsubrs
mov
cmc
jbe
mov
xchg
mov
addr16
push
daa
inc
roll
scas
loope
mov
dec
jmp
data16
xchg
add
cmp
jmp
adc
pop
gs
xor
inc
addb
pusha
jp
insb
loop
add
in
lods
lcall
pop
imul
enter
and
pushf
mov
lds
out
cmp
mov
out
insb
ja
or
jmp
fsubrs
das
pop
add
and
into
gs
out
inc
adc
test
mov
jb
dec
nop
adc
push
xor
sbb
cmp
push
in
hlt
icebp
lock
jae
test
sub
pop
into
or
lret
xor
adc
jno
pop
fiaddl
int3
arpl
aam
pavgb
fdivl
push
aad
rorb
orl
ret
dec
pop
sub
aas
mov
popf
mov
mov
add
ljmp
scas
sub
xchg
cmc
push
out
daa
add
jp
dec
mov
mov
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
ds
push
mov
bound
pop
bound
xor
in
out
movsb
pop
jmp
dec
frstor
hlt
dec
int
pusha
dec
jg,pn
inc
clc
ljmp
test
clc
mov
fwait
pop
cmpsl
sbb
out
cltd
int
lods
gs
in
filds
in
xchg
popa
test
aaa
fisubrs
sub
ret
jecxz
sbb
jmp
xchg
sub
sub
mov
lret
enter
rcrb
add
mov
mov
in
lds
fmuls
dec
cmpsl
push
sbb
jbe
adc
mov
adc
es
mov
loope
ljmp
int
gs
and
out
imul
clc
sahf
or
sbb
cmpsl
outsb
jmp
imul
mov
xchg
push
shrl
sbb
int
jae
loop
repz
gs
adc
ljmp
mov
adc
rorl
jecxz
aaa
scas
mov
aam
cltd
rcl
dec
inc
xchg
pop
std
mov
xchg
loope
mov
mov
das
and
fdivp
mov
aam
hlt
cmc
adc
les
stos
jp
mov
stc
push
mov
scas
pop
sub
shr
sbb
inc
xchg
sbb
jne
sub
xor
xor
pusha
into
cmp
cs
add
gs
pop
fmuls
xor
hlt
repnz
dec
test
ret
dec
push
nop
inc
xor
mov
jmp
sub
adc
mov
xchg
sbb
rol
in
fwait
mov
mov
dec
add
and
outsl
nop
stos
ds
testl
jnp
jb
lea
ss
fldcw
jno
insl
insl
sub
jle
adc
scas
adc
mov
pop
and
sbb
mov
xor
jb
mulb
pop
bound
outsb
std
mov
inc
dec
lret
push
push
lds
stc
and
jmp
fs
or
mov
push
jmp
xor
ret
pop
or
mov
leave
dec
xor
pop
pushf
xor
cs
bound
jbe
ret
dec
xchg
bound
push
push
and
mov
dec
adc
or
hlt
xor
inc
mov
mov
inc
add
shlb
sbb
pushf
jne
jb
mov
fisttpll
stos
stos
es
rcrl
icebp
ficomps
push
xor
test
or
push
jno
inc
xchg
inc
lcall
and
cltd
cmpsb
sub
pushf
cli
sub
inc
outsl
cmp
push
xor
in
push
inc
xchg
xchg
dec
adc
out
pop
icebp
mov
in
popf
cmp
fidivl
xchg
leave
insl
mov
lret
adc
xor
or
pop
xor
fcoms
stos
lret
xchg
insb
stos
in
add
pop
js
mov
jecxz
leave
inc
hlt
sbb
in
pop
ss
or
mov
test
mov
test
mov
mov
pop
out
add
xchg
rorb
pop
mov
xchg
jo
jmp
cwtl
int
popf
mov
xchg
and
rcrl
cli
pop
clts
cmp
lock
addb
or
enter
mulb
icebp
repnz
xlat
push
and
mov
divl
mov
out
lock
mov
rorl
in
push
jmp
add
adc
mov
test
push
jbe
add
push
sbb
sbb
js
and
popf
ds
mov
sub
cs
inc
daa
arpl
fwait
data16
xor
cmpsb
mov
dec
and
fst
mov
into
and
pop
mov
sbb
or
and
mov
ljmp
sub
std
push
addr16
cmp
mov
es
daa
or
xor
repnz
jbe
xchg
sti
jb
fsubl
int
sbb
and
lds
insb
lds
movups
push
push
or
dec
mov
iret
mov
aam
lods
je
mov
and
cmpsb
mov
mov
fucomp
sbb
shlb
xchg
fsub
aas
movsl
in
mov
in
cmp
push
jae
mov
jl
clc
and
je
mov
and
cmp
stc
fwait
dec
sub
cmc
push
cli
lea
lock
adc
dec
out
pop
insb
bound
out
adc
lea
stos
dec
es
xlat
mov
les
or
dec
fsubr
scas
icebp
jp
test
cmpsb
mov
cmpl
cmp
ljmp
inc
jns
test
xchg
lahf
and
out
clc
fcoml
push
jmp
sub
adc
scas
stos
or
insb
lods
add
dec
pop
cmc
lahf
jne
lock
rcll
inc
outsl
lea
lock
pop
mov
rcr
iret
scas
push
pop
inc
dec
decb
mov
insl
cmpb
int
cwtl
fcoml
jmp
out
inc
mov
in
addr16
dec
add
js
sub
or
scas
mov
loop
push
pop
bound
xchg
mov
add
pop
adc
cmpsb
inc
test
inc
or
jmp
outsl
cmpsb
int
scas
test
aam
sbb
adc
nop
cmp
sub
mov
xor
lea
jo
add
iret
cmp
stc
subps
and
stos
adc
xchg
and
pop
out
add
sbbb
and
xor
jne
inc
jmp
addr16
mov
add
jge
outsb
sbb
cmpsb
mov
arpl
fcoms
or
in
fidivs
in
push
adc
sub
inc
mov
gs
aam
mov
das
jecxz
xor
das
andb
in
add
inc
and
popf
out
push
lods
sbb
shlb
inc
dec
jl
add
push
inc
xor
cmpsl
lods
fsubrs
out
daa
mov
sbb
inc
out
sub
call
add
in
push
repnz
insb
cmp
add
push
in
bound
jp
es
rcr
add
pop
clc
jg
js
je
mov
pop
inc
pusha
push
scas
pop
dec
fstpt
dec
xor
or
fs
dec
push
inc
int
pop
iret
inc
adc
mov
jb
inc
xor
scas
add
jo
mov
mov
inc
sahf
aad
mov
jmp
popa
shr
sbb
test
mov
adc
inc
scas
or
pushf
xchg
clc
imul
pop
cmp
fisttps
xor
xchg
pop
or
movsb
cs
ficoml
push
lret
aam
ds
mov
dec
cmp
and
mov
loop
insb
sbb
clc
repnz
pusha
jae
jg
xchg
loope
adcb
das
xor
test
sub
shrl
inc
int
pop
mov
mov
adc
rcr
outsb
stos
dec
mov
scas
xor
sahf
adc
pusha
and
xchg
cmc
cld
adcl
ss
les
mov
inc
fidivl
test
jecxz
jl
or
bt
fcompl
stos
addl
mov
pop
mov
sbbl
ret
fld1
lret
mov
mov
dec
cwtl
ljmp
shlb
fldenv
add
je
mov
mov
mov
xchg
add
sbb
aaa
daa
jmp
ret
loope
mov
das
push
mov
or
lods
cmp
mov
xchg
test
std
push
xlat
adc
jns
nop
and
push
xchg
movsl
dec
in
fcomps
ja
shlb
sbb
inc
or
clc
fiadds
ss
es
xchg
clc
mov
mov
inc
insl
in
dec
repz
or
into
mov
pop
test
sbb
add
jne
mov
shl
inc
cmp
push
dec
push
test
shl
gs
fsts
shl
inc
cmp
adc
sub
push
push
lods
rcl
or
lds
pop
leave
lret
les
shlb
mov
mov
pop
pop
pop
dec
jmp
xchg
jp
jge
shrb
push
imul
outsb
mov
rclb
mov
mov
mov
and
xchg
andl
cmpsl
gs
cwtl
push
test
mov
mov
and
lock
cmp
jle
push
dec
xorb
cmp
aam
cmpsl
cmp
pop
xor
jns
or
jle
jecxz
dec
cmp
out
xor
outsl
cwtl
cmp
sbb
cmpsb
outsl
sub
sub
add
cmovae
mov
and
adc
xchg
jae
mov
or
jp
fnstsw
aaa
jnp
ja
cmp
push
lock
gs
jo
and
je
in
sub
inc
jge
mov
enter
loope
aad
sub
icebp
adc
cmp
sbb
sarb
outsb
ss
mov
cld
adc
xchg
inc
in
jg
ss
fcompl
jae
outsb
insb
mov
icebp
mov
repz
mov
adc
fwait
push
or
test
or
movsb
dec
jmp
and
lea
add
stos
insl
or
jle
verr
push
cwtl
shrl
aam
out
ja
mov
adc
mov
scas
inc
fsubr
adc
pop
lods
js
xchg
mov
clc
jecxz
popa
hlt
cs
adc
subb
xchg
sahf
xor
jae
xchg
mov
nop
cmp
push
roll
mul
into
inc
mov
shll
neg
popa
adc
aaa
inc
shrl
mov
inc
jnp
roll
pushf
fstpt
fs
cltd
mov
xor
in
add
fucomi
xchg
int
fsubrs
cli
popa
lea
lock
mov
jg
xor
rclb
dec
dec
call
cmp
jns
int
rcll
xchg
mov
stos
je
pushf
xlat
jno,pt
mov
jb
in
ja
adc
in
out
cmp
sub
cld
subl
aas
ja
lea
xchg
int3
jae
pop
sarl
sbb
mov
push
add
xchg
scas
in
jo
nop
sbb
test
neg
stc
push
jnp
adc
fdivp
jmp
icebp
jb
loop
lahf
jp
xchg
repz
mov
push
and
and
or
mov
sarl
mov
push
clc
movsl
mov
sbb
ret
xchg
adc
fistpll
mov
aaa
inc
cmpsl
pop
xchg
sub
fs
fwait
mov
in
mov
fsubs
out
mov
stos
mov
pop
adc
lahf
mov
push
sub
imul
andb
jno
mov
insl
mov
scas
aad
test
xor
outsb
cmp
ljmp
out
mul
push
arpl
sbb
jle
mov
lahf
ficompl
inc
cltd
stos
mov
cs
andl
sub
mov
and
pop
xor
rorb
push
std
xorl
xlat
or
cld
roll
dec
sti
clc
repz
inc
xchg
mov
xchg
xor
jb
adc
xor
orl
insl
stos
cmc
movsl
dec
xor
dec
repnz
xor
rorl
mov
aaa
jg
js
fwait
int3
push
std
jbe
icebp
in
mov
jp
cli
cmp
mov
push
mov
xchg
xor
xor
xchg
push
icebp
adc
xchg
mov
sarl
movsl
push
imul
jno
aaa
add
sbb
je
mov
int3
mov
mov
js
add
inc
adc
pop
aad
leave
and
xor
mov
add
jmp
pop
add
push
mov
adc
push
pop
push
and
cmp
push
sbb
insl
add
in
ror
inc
xor
andb
mov
repnz
xchg
xchg
cli
inc
or
lret
jg
mov
fstps
cmp
loope
mov
sbb
mov
cs
jl
or
shrb
mov
std
rclb
mov
fwait
mov
mov
ret
or
js
xor
cmp
cmp
xlat
stos
scas
jmp
pop
leave
inc
out
jg
dec
out
popa
jnp
insl
fsubrl
in
mov
inc
out
dec
and
sahf
mov
js
xor
jno
xchg
sub
cli
xchg
das
mov
jae
fwait
sti
int
in
cmpsl
push
pop
inc
aas
pop
into
push
cmpsl
fnstcw
adc
or
test
inc
xchg
adc
icebp
jns
mov
mov
divb
add
jle
ljmp
xlat
lods
bound
add
cmpb
mov
push
and
push
ja
pop
insl
push
int3
into
lea
shll
cmp
mov
add
fwait
loopne
stos
lahf
xchg
inc
push
outsb
ljmp
enter
ja
arpl
int3
jge
outsl
repz
mov
jecxz
out
dec
push
arpl
adc
cs
push
pop
ss
add
lea
aas
or
jae
lock
sub
adc
push
mov
push
or
or
insb
insl
mov
sbb
sub
jo
clc
cmc
loope
std
sbb
push
mov
inc
and
rcrl
xor
in
inc
mov
mov
cmpsl
mov
xchg
and
xchg
addr16
inc
cbtw
mov
and
in
outsb
data16
hlt
mov
xchg
cmp
jecxz
daa
cld
xor
aam
je
nop
in
inc
cmc
repz
jl
stos
mov
jne
or
pop
and
es
out
cld
xchg
mov
nop
adc
sbb
dec
aad
in
insl
push
and
roll
pop
xlat
mov
push
or
xorb
add
bound
insb
and
insl
inc
in
ret
out
leave
and
jae
pop
xor
adc
jno
jmp
dec
mov
jne
push
popa
mov
sub
nop
sbb
and
xchg
push
aad
bound
mov
xchg
rol
aaa
inc
mov
or
mov
sbb
gs
lods
mov
pop
cmp
push
loop
mov
adcb
mov
lods
xor
pop
sbb
clc
test
push
cmp
or
xor
fbld
and
imul
xchg
divl
popa
stos
scas
xor
dec
sti
in
mov
stos
insb
lods
dec
mov
jbe
xor
xchg
jns
jne
inc
ss
sahf
xchg
cltd
xchg
jae
mov
sbb
inc
sub
xor
xorl
inc
lock
fstpt
imul
mov
lods
mov
mov
ja
rol
dec
jmp
rclb
imul
pop
in
push
fldl
cmp
je
pop
ss
add
mov
inc
add
sbb
jg
outsl
inc
fidivl
push
adc
mov
out
xor
clc
ret
ds
sbb
scas
pop
sti
jbe
pop
insb
int
clc
enter
inc
loopne
cmpsl
rcrl
pusha
cmp
in
cmpb
or
xchg
lret
mov
sbb
stos
das
dec
push
daa
or
cmp
mov
jns
inc
mov
jne
push
scas
fists
pop
enter
xchg
hlt
std
lock
push
or
pop
push
fiadds
fisubs
xchg
xchg
push
xor
sbb
or
in
cli
scas
inc
sar
xchg
push
ds
or
out
ss
out
push
filds
xor
loop
in
cmc
scas
push
pop
push
sbb
int3
mov
dec
popf
push
cmpsb
xor
cwtl
das
clc
jne
fimuls
and
lar
cwtl
loope
xchg
ds
mov
pop
xchg
movsl
or
int3
push
xor
fisttpl
fcmovu
icebp
inc
inc
ret
mov
push
mov
jnp
rep
adc
adc
pusha
out
hlt
mov
in
mov
mov
leave
lret
or
cli
ret
mov
jb
push
fcoms
aam
sahf
adc
movb
jle
add
push
mov
xor
add
pop
push
int
mov
pop
xor
sbb
dec
jmp
and
pop
mov
add
mov
bound
xchg
clc
imul
jg
xchg
pop
roll
lds
sarl
cwtl
sbb
sbb
adc
push
int
mov
push
lock
mov
push
sti
adc
sub
test
adc
jb
shr
dec
outsb
cmp
mov
mov
ficomps
cltd
pushf
sub
repz
popa
xor
cmpsb
pop
clc
hlt
test
jecxz
xchg
cli
bound
test
mov
fcom
jecxz
push
jb
je
stc
cmp
aam
mov
adc
push
inc
jne
mov
inc
or
and
hlt
gs
ja
mov
test
arpl
into
adc
push
jp
stc
popa
cmp
sti
mov
adc
inc
mov
or
dec
cmp
and
pushf
in
lock
xchg
cmp
mov
int3
out
xchg
and
pop
aaa
arpl
popf
lret
pop
push
and
jg
in
adc
std
push
mov
mov
mov
and
popf
jb
push
movsl
insb
imul
shlb
push
lods
ss
sub
mov
push
or
sbb
xlat
fnsave
or
lcall
dec
push
jne
mov
call
mov
mov
stos
adc
cmp
push
mov
jb
les
and
mov
jno
inc
adc
idivb
lods
in
fisubrl
sub
xchg
lods
insb
jo
int3
cmp
and
fldenv
pop
sbb
clc
jl
mov
into
mov
mov
loop
or
push
test
sbb
fs
sbb
dec
fninit
loope
lds
andl
into
fstpt
and
loopne
and
mov
adc
mov
int
inc
faddl
std
dec
xchg
sub
push
pop
lcall
mov
jbe
out
fxch
push
fs
sar
mov
pop
add
jne
sbb
sbb
test
sub
dec
cmpsb
adc
enter
dec
push
xor
mov
adc
fsubrl
lahf
inc
adc
iret
mov
test
inc
arpl
outsl
loope
loopne
mov
cmpsb
decb
hlt
lods
pusha
es
add
movsl
test
sbb
inc
test
jp
dec
mov
adc
pop
sbb
jmp
out
leave
ret
mov
xlat
aas
xchg
repz
movsb
inc
mov
fdivs
inc
sbb
jecxz
push
pop
add
jg
inc
sahf
sub
mov
mov
mov
loop
scas
inc
xchg
push
dec
and
jae
pop
push
mov
and
push
dec
mov
xor
loopne
test
ret
ret
aad
lcall
insl
sub
mov
rclb
add
imul
outsl
cld
mov
jg
hlt
insl
insl
mov
cwtl
cmp
push
fidivs
mov
pop
hlt
dec
rclb
xchg
dec
jge
out
sbbl
hlt
or
mov
xor
sbb
jnp
in
xchg
mov
mov
and
and
mov
mov
ret
fcoml
stos
fisttpl
cmp
outsl
jecxz
ja
inc
iret
pushf
stos
ss
or
inc
xchg
cmpsl
fmull
fstps
inc
adc
pop
and
mov
xor
je
scas
sub
test
adc
addr16
arpl
dec
in
push
pop
hlt
adc
subb
pushf
inc
mov
jmp
ds
mov
fists
cmp
cmp
lock
cvtpi2ps
jle,pn
ljmp
out
push
jns
fsts
icebp
dec
imul
dec
push
mov
adc
sbb
mov
addl
dec
dec
jmp
int3
jae
in
lcall
sti
addr16
jecxz
pop
dec
sub
popl
outsb
daa
das
dec
clc
mov
push
or
sub
or
and
rorb
in
add
movl
ss
int
insl
insb
sbb
inc
mov
nop
insl
xor
xor
stc
and
loop
leave
adc
aad
mov
cwtl
push
or
rcll
add
insb
adc
fs
lcall
xor
xchg
xor
and
mov
icebp
jle
inc
scas
and
lods
insb
or
hlt
add
cli
cmpsl
lret
out
xor
mov
std
jne
lret
cmp
clc
lahf
shll
mov
loope
arpl
js
pop
or
nop
sahf
sbbb
scas
mov
and
int3
add
pop
or
in
lcall
addr16
mov
roll
mov
push
mov
and
xchg
xor
frstor
sub
cmpsl
jnp
adc
dec
xor
dec
cmp
push
inc
imul
add
adc
pop
sub
mov
lret
xchg
mov
lret
push
out
jg
sbb
mov
outsl
cmpsl
add
cmp
pop
mov
mov
inc
xchg
xlat
jg
add
std
jbe
icebp
icebp
sub
jecxz
sub
pop
lods
stos
sub
jg
sbb
xor
jb
pop
lods
mov
mov
lods
lret
lock
xchg
js
sub
popa
sub
lock
mov
lods
inc
pusha
sub
mov
adcl
sub
call
jne
xlat
cmp
push
mov
dec
jle
adc
and
xorb
lret
cmp
add
sbb
std
fnstcw
ss
fcmovnbe
xor
xcrypt-ctr
cmpsl
fmull
adc
push
aas
dec
in
cmp
pop
ret
fimull
push
or
cmpsl
adc
inc
inc
rcrb
xor
inc
test
dec
ficompl
jecxz
mov
pop
cmc
add
test
xlat
mov
lods
jecxz
pop
es
jbe
shrl
stos
mov
and
movsb
das
test
inc
dec
xchg
stos
xor
sbb
lahf
fimuls
movsl
xor
jp
aas
mov
pop
insl
sbb
aaa
repnz
and
sbb
ss
mov
jecxz
insl
je
dec
jl
xor
mov
lock
jb
inc
mov
data16
push
add
int3
call
and
pop
inc
mov
inc
lret
jnp
outsl
arpl
je
ret
inc
dec
pop
in
sahf
outsb
mov
mov
mov
push
out
fildll
add
leave
jae
cmp
or
mov
push
xchg
sti
xchg
stos
sti
fstpl
pusha
loope
flds
push
sti
fstps
jae
fcmovb
pusha
push
adc
xchg
aam
rorl
leave
jge,pt
testb
push
shlb
dec
cmc
paddb
push
or
pop
sbb
aad
inc
lods
inc
inc
ffree
sub
insb
mov
fimuls
inc
jbe
pop
jns
das
std
aad
inc
icebp
stos
sbb
test
loop
jns
int
ficompl
adc
xchg
sbb
mov
rolb
nop
adc
inc
fisttps
test
loopne
mov
sbb
js
rol
lahf
je
mov
xor
push
and
push
ss
xor
test
fucomi
pop
out
sub
pop
mov
xchg
enter
add
insl
clc
js
clc
stos
lcall
dec
jo
loope
fwait
sub
jo
mov
sbb
jns
call
cld
jecxz
icebp
mov
inc
xor
fsubp
out
inc
inc
or
dec
ljmp
push
inc
adc
test
mov
stc
orb
ds
xchg
xchg
lcall
push
jo
dec
stos
sbb
insb
je
fiadds
mov
fdiv
in
jns
test
adc
xchg
popa
add
mov
mov
pop
inc
negl
xchg
std
fcoms
test
in
xchg
mov
mov
filds
xchg
stos
addb
in
pop
js
in
mov
xor
jne
pop
adc
xorl
cmc
and
mov
sbb
sti
pop
and
jo
cs
xchg
sub
mov
and
mov
xor
cmpsb
xchg
std
lds
push
int3
fcmovne
scas
jb
xchg
jae
iret
in
add
xor
dec
fimull
cld
in
push
xchg
dec
adc
ret
jbe
loope
mov
jo
cmp
push
jl
mov
mov
sbb
idiv
cmp
cmpsb
repnz
out
dec
loop
call
mov
push
pushf
das
adc
mov
lcall
cmpsb
dec
push
mov
leave
cmpsl
inc
fldl
stos
repz
dec
imul
mov
cli
cwtl
mov
cmp
add
fstpl
sbb
es
pusha
pop
mov
dec
aaa
andl
cli
bnd
popa
gs
cmp
test
jmp
stos
push
sbb
mov
subl
fnstsw
pop
jno
or
enter
leave
cmc
sahf
pop
mov
pop
int3
je
fcoml
imul
shl
xchg
mov
cmpsl
jne
out
push
add
push
and
aad
lahf
sahf
cmp
mov
fdivr
movsb
sbb
fwait
dec
jg
imul
xchg
xor
jae
xor
jno
push
add
mov
clc
icebp
and
and
adc
test
mov
out
xor
cltd
in
aas
clc
fstpt
stc
dec
loope
mov
pop
mov
push
push
imul
or
xor
jmp
pop
sbb
sub
mov
push
jmp
popa
xchg
cmp
in
or
stc
jae
xchg
inc
scas
jle
xchg
cs
inc
lcall
insl
jmp
movsl
call
int3
mov
wbinvd
inc
dec
push
inc
out
mov
jns
pushw
jge
test
cltd
out
jns
xlat
jp
jnp
xchg
jno
fsubrl
lods
inc
push
cmpsl
insb
ljmp
hlt
pop
data16
cmp
mov
inc
into
and
int
in
dec
in
and
test
inc
jle
subl
add
mov
add
cmp
mov
jmp
sarl
adc
cmp
push
jge
pop
inc
cmp
adc
scas
mov
ret
and
mov
xor
push
jg
fwait
outsb
mov
xchg
sbb
mov
xchg
aaa
inc
push
add
jae
mov
jmp
cmp
inc
popf
add
lock
popa
or
dec
inc
dec
mov
and
ja
je
movsl
pop
cmc
cmp
fwait
jl
lea
loopne
ror
xchg
adc
mov
push
jnp
addl
xor
inc
dec
loopne
pop
test
and
in
or
aad
add
ds
into
and
mov
mov
adc
hlt
adc
mov
ja
shlb
pusha
enter
xchg
stos
and
and
stc
subl
in
jg
les
sub
jge
sub
sub
shlb
sar
inc
mov
rcll
push
ret
and
sbb
xchg
repnz
fdivp
mov
cli
push
mov
or
aam
or
shll
pop
cmp
inc
ds
inc
pop
clc
in
les
punpckldq
gs
or
sub
jge
push
xor
cmpsb
lods
call
mov
movsb
xchg
ss
push
or
pop
scas
in
jp
inc
stos
dec
divb
fisubrs
push
int
decl
xor
push
jb
mov
dec
test
pushf
repz
mov
inc
xorb
outsl
fldenv
dec
lret
add
jg
add
jmp
imul
xchg
dec
inc
out
xchg
push
and
jge
pusha
add
mov
push
sub
dec
jae
xlat
sbb
jp
hlt
pop
inc
lds
or
pop
ficompl
mov
aam
in
test
jp
in
jne
lea
testl
mov
sub
cwtl
repnz
andb
ljmp
cmpsl
xor
loopne
sbb
mov
inc
dec
lea
add
jnp
inc
adc
sub
lods
inc
push
mov
or
jbe
pop
jecxz
jecxz
sbb
aas
or
pop
mov
addr16
aad
and
dec
js
ret
push
sbb
add
jbe
dec
daa
mov
test
add
pop
xor
inc
pop
das
movsb
pop
mov
mul
jg
and
mov
add
dec
fisubl
std
leave
je
je
std
outsb
sbb
das
mov
adc
or
lret
mov
rorl
rcrl
fimuls
out
icebp
dec
fs
push
xchg
data16
repnz
lods
fprem
mov
push
mov
loope
hlt
dec
imul
aam
test
inc
mov
mov
sbb
push
das
xchg
xlat
jle
ja
repz
cmp
or
adc
cmp
mov
popa
out
or
iret
shll
push
aad
push
sbb
jns
sbb
add
or
push
inc
fcomps
inc
outsl
lea
adc
mov
addr16
mov
leave
ja
in
push
or
bswap
xor
push
adc
fdivs
addr16
sub
mov
dec
addl
lret
mov
lcall
push
dec
lret
fsubrs
call
imul
call
inc
sti
jae
sbb
movsb
out
lret
loop
adc
push
push
filds
dec
repnz
es
add
cmpsb
and
rol
fnstcw
mov
fdivp
jno
xchg
arpl
add
mov
jae
aam
gs
movsb
sahf
mov
add
inc
insb
movsb
loope
roll
mov
sub
mov
pop
out
test
add
lea
jge
jecxz
out
cwtl
mov
into
je
mov
imul
pop
cmpsb
sti
xlat
in
sarl
pop
push
mov
gs
imul
rolb
adcl
inc
psubusw
cli
mov
in
cmp
mov
mov
cmp
xchg
mov
jmp
xor
pop
adc
adcl
jg
lods
adc
es
into
scas
inc
xchg
fidivrs
or
sahf
pop
jb
mov
je
mov
add
daa
jns
xchg
cmp
push
sbb
inc
bound
ret
aam
xchg
xchg
popf
jae
or
test
and
lretw
pop
and
mov
cmp
lea
inc
std
inc
shrb
push
imul
outsb
rcll
jae
cltd
daa
pop
outsb
insb
sub
cmp
je
jge
add
pop
cmp
fists
jge
xchg
dec
es
xchg
shl
mov
add
sbb
nop
push
jno
jl
mov
shll
shr
push
jmp
out
stc
sbb
ret
imul
fs
icebp
and
mov
popa
aad
push
aad
outsb
xchg
movsb
xchg
adc
jmp
sub
mov
dec
mov
loopne
mov
dec
sub
inc
xchg
pusha
loopne
cmpsb
daa
out
lea
push
repnz
mov
jne
or
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
or
call
add
or
sub
pusha
fwait
enter
jnp
sub
push
jl
xor
inc
jp
in
popa
daa
adc
movsb
test
lahf
adc
push
jb
mov
cli
push
cmp
lcall
cmp
inc
xor
mov
sub
lgs
insl
mov
cmpsl
cmp
clc
adc
pusha
lea
out
jb
mov
xor
movsb
gs
test
out
out
mov
or
ret
pop
xchg
dec
insb
jg
push
push
and
jno
xchg
pop
arpl
push
scas
pop
mov
mov
cwtl
dec
jmp
data16
xchg
cltd
and
mov
mov
outsl
std
dec
pop
imul
cwtl
jae
sti
dec
addr16
push
cltd
ss
shlb
xchg
dec
cmpsb
sbb
cmp
pop
xchg
inc
push
fcmovb
jbe
fidivrl
xchg
pop
aaa
call
cmp
in
mov
aaa
xchg
ss
xor
or
mov
dec
push
outsb
in
shll
shlb
add
jnp
inc
ret
repz
jge
aaa
sbb
mov
adc
xchg
fstps
push
add
cmp
xor
mov
mov
lcall
push
pop
fnstsw
sub
orb
mov
pop
push
push
imul
pop
ja
pop
mov
adc
mov
xchg
and
adcl
xchg
fwait
cmpb
stc
loopne
mov
inc
ret
std
cmp
lea
jmp
pop
or
sti
xchg
in
and
mov
shl
out
xchg
lock
add
into
jle
xchg
insb
lcall
sbb
adc
and
inc
test
pop
pop
out
or
les
inc
sbb
or
push
push
data16
sbb
dec
shrl
mov
sub
out
addb
popa
sti
push
xchg
mov
adc
ret
in
cmpsb
sti
aad
call
in
sub
jae
or
cmp
mov
inc
in
sub
aam
repnz
aam
iret
cmp
adc
bound
jno
mov
adc
inc
imul
mov
bound
lea
outsb
scas
repnz
in
and
adc
mov
jmp
and
fcoms
sbb
out
cli
add
mov
sbb
jp
jle
and
jnp
scas
jg
pop
pop
jne
jp
icebp
fildl
xorl
std
lret
lock
js
icebp
jle
adc
jmp
xchg
adc
leave
inc
xor
and
mov
adc
cmpsb
sbb
dec
inc
cli
cmp
sub
xchg
out
lods
outsb
jmp
in
pop
mov
rcrl
ds
mov
movsl
add
ret
sarb
pop
bnd
sbb
shrl
lea
sbb
cld
jae
je
mov
les
shll
cltd
mov
mov
inc
cs
ljmp
cmp
cmp
jl
dec
loope
subl
sbb
mov
je
rorb
xchg
push
pusha
xchg
sbb
cmp
cmpsb
insb
pushf
inc
mov
xchg
xchg
jp
jb
lcall
jnp
jg
cmpsl
mov
xchg
push
cs
push
sub
jg
lcall
leave
or
stos
leave
rcll
mov
cmp
jmp
or
jae
std
shlb
aam
aaa
xor
test
imulb
add
push
stos
push
mov
xchg
in
pop
mov
fsub
insb
add
aaa
push
xor
and
int
pop
inc
rcrb
sbb
pushf
stos
dec
mov
pusha
loop
xchg
dec
jno
mov
xchg
mov
aaa
xchg
out
jge
sub
inc
outsb
push
or
sub
in
cwtl
jns
js
mov
jge
rorl
into
fstps
mov
mov
jg
push
scas
hlt
fisubl
loopne
add
movsl
leave
add
mov
jne
sbb
xchg
xchg
int3
mov
std
in
test
dec
outsb
stos
mov
pop
jnp
pop
loope
fsub
dec
pop
aad
or
or
lods
cmpsl
in
dec
inc
out
fs
sub
call
mov
xor
test
icebp
push
cwtl
xor
pop
push
into
shrl
pop
orl
pop
repnz
inc
or
xchg
sbb
data16
out
imul
popl
fimuls
pop
out
mov
clc
das
cli
es
mull
mov
xchg
xor
les
dec
adc
dec
out
pop
insb
sbb
jp
or
add
fnstenv
cmpsb
jo
movsl
push
mov
adc
scas
mov
call
sub
push
lock
lods
into
and
adc
jmp
jecxz
jg
int
ret
fcompl
xor
stos
push
and
lcall
and
cmp
std
inc
stos
and
lahf
shll
sbbb
xor
test
cli
xchg
xchg
cmp
add
pop
mov
inc
cmp
jns
jnp
test
sbb
lret
inc
stc
nop
jns
push
adc
lcall
cwtl
scas
dec
xchg
push
nop
daa
mov
sti
arpl
xor
xorl
mov
jl
sahf
jle
sbb
mov
into
xor
call
mov
mov
cmp
mov
lret
test
ljmp
fwait
insl
fcmovu
or
call
sbb
scas
mull
rorl
or
adc
cltd
insl
jle
and
mov
cmp
pusha
daa
lahf
es
and
xchg
inc
shrl
add
test
adc
and
mov
jo
jo
xor
cmp
and
and
mov
ret
cltd
ds
int3
rcl
shl
fsubs
lcall
sub
adc
push
int
sbb
inc
sub
and
cli
xchg
clc
push
cmp
cli
jae
and
pop
movl
fstp
ret
xchg
in
jge
pushl
xor
xor
mov
movsl
mov
test
dec
push
push
xchg
out
and
outsl
insl
enter
in
sub
dec
mov
out
adc
push
out
mov
add
fcmovnb
push
lcall
ficomps
outsb
cmp
xor
dec
and
xchg
cmp
jns
mov
leave
pop
lods
push
hlt
adc
jle
pop
clc
cltd
fnstcw
ret
dec
or
popf
leave
stos
or
lds
inc
sbb
or
fwait
je,pn
xlat
popf
aad
mov
cltd
pop
xchg
loopne
cmpsb
cli
xchg
sub
push
cmpsl
mov
lods
push
lock
aad
jmp
lea
xor
push
and
pushf
sti
cmp
and
lds
cmp
lret
mov
inc
xor
pop
push
movsl
xor
stc
pushf
lea
rorb
push
or
xchg
mov
jecxz
or
push
push
pusha
ljmp
sbb
xor
mov
es
lret
sub
xor
and
adc
out
sti
inc
popa
xchg
popf
aaa
push
lds
mov
das
fisttps
cmp
fsubl
dec
jnp
bnd
out
pop
fimull
mov
xor
ljmp
or
leave
dec
ret
sahf
adc
ds
dec
mov
outsl
mov
jnp
adc
pop
and
repnz
and
stc
and
stc
and
inc
ror
add
add
mov
mov
loopne
sub
sub
lea
and
sbb
sub
fsubs
mov
test
xor
push
shll
pop
jo
mov
call
cltd
mov
jae
xor
lds
push
push
mov
out
in
sub
dec
repnz
push
mov
jg
cwtl
add
inc
mov
iret
rol
inc
lods
and
mov
push
cmc
bound
push
leave
stc
lcall
sti
hlt
enter
xlat
push
loopne
mov
cmp
dec
addr16
inc
xor
insl
ror
push
cs
add
sbb
iret
fcoml
push
mov
cmp
mov
fwait
xchg
cmp
sub
cmpsl
lds
cs
cwtl
int
sub
das
push
fdivp
bswap
push
push
pushf
xor
popa
lock
or
sub
sbbl
fbld
stc
inc
cmpsb
pop
pop
das
pop
or
pop
addl
pop
jo
cmpsl
stc
push
pop
and
repnz
lock
or
imul
cmpsl
nop
pushf
cmpsl
inc
outsl
insl
mov
es
popa
xchg
xchg
sub
jecxz
dec
push
push
popf
jb
and
mov
mov
outsl
loope
push
sti
sbb
fisubs
in
insb
shrl
mov
or
setl
pop
lods
sbb
dec
push
les
les
rorb
sti
sub
jbe
push
or
cmp
iret
shrb
sbb
mov
std
out
in
sbb
jno
jl
insl
sbbb
fwait
adc
aaa
inc
jae
cmpsb
pop
add
inc
sahf
popf
or
into
test
cld
mov
iret
out
cmpsb
mov
stos
stos
cld
jbe,pn
loop
cmpsl
cmc
repnz
jg
add
jmp
pushw
jo
ljmp
mov
pusha
aaa
cld
rcrl
mov
arpl
lods
add
pop
std
inc
add
sbb
int3
mov
adcl
push
and
xlat
mov
cmp
sbb
lods
inc
outsb
repnz
movsl
mov
jae
out
pop
ds
leave
mov
repz
inc
push
mov
rol
pop
xchg
cmp
std
push
das
mov
cs
add
push
arpl
cmp
sbb
lods
aaa
and
xor
adc
push
or
aam
mov
sti
leave
sub
je
jecxz
movsl
inc
adc
xchg
pop
ljmp
jle
mov
lock
cwtl
mov
dec
dec
test
fistpll
mov
lret
pop
cmpsb
or
add
bound
sub
daa
jo
popa
fists
push
insb
dec
div
out
lret
mov
push
mov
jae
or
popf
sub
push
sub
mov
cmp
mov
clc
xchg
add
mov
mov
push
movl
xchg
cli
je
fisttpll
xor
inc
and
sbb
mov
out
and
jbe
jb
dec
mov
lods
dec
inc
add
movsl
mov
pop
add
fidivrs
add
pop
test
sbb
stos
leave
mov
mov
pop
push
call
cmp
cwtl
pop
mov
sbb
push
js
sbb
cli
cwtl
imul
mov
movsl
imul
or
scas
sbb
inc
andb
aaa
jns
pop
outsb
into
lea
adc
push
dec
push
cmp
pop
out
xor
rorl
pop
jmp
sti
push
pop
adc
scas
mov
stos
mov
gs
mov
ja
shr
js
dec
xchg
jecxz
cmp
lret
cmpsb
out
jmp
movsb
imul
call
loopne
jp
shl
dec
mov
loop
and
fsubrs
mov
and
sub
cmc
xchg
out
mov
orb
mov
xchg
fdivrl
mov
xchg
sbb
xor
scas
lock
ror
ror
adc
xor
adc
mov
sub
lods
push
mov
pop
icebp
push
test
push
out
mov
in
jns
jo
aad
out
sub
cld
mov
pop
cmp
xor
shl
lret
xchg
sti
sub
jl
movsl
xchg
xchg
pop
cmp
je
fwait
icebp
or
mov
add
sbb
js
je
in
movsl
rclb
mov
cmp
fisubrs
icebp
pop
pop
sbb
movsb
mov
cmp
les
sub
mov
outsb
xor
int3
insl
xor
adc
sti
jg
jl
mov
add
lea
lea
in
push
sbbb
mov
sbb
cmp
jle
rclb
add
rcrl
sub
enter
and
daa
dec
ss
xchg
dec
pop
inc
inc
ret
and
sbb
out
cmp
or
jbe
or
loopne
movsl
das
push
jg
mov
incl
pop
pop
cwtl
fwait
test
sbb
aad
mov
or
pop
add
inc
into
inc
add
sbb
push
jge
adc
dec
addr16
insl
cld
test
mov
js
pop
jmp
jae
sub
inc
ja
lea
jecxz
cltd
repnz
add
add
xchg
lcall
imul
pop
ret
jecxz
xchg
mov
enter
sub
jmp
mov
in
jl
fidivrl
push
mov
sub
insl
inc
sbb
movsl
add
and
lds
dec
inc
ret
ljmp
sub
and
xchg
nop
push
loope
testl
mov
jo
call
pop
sbb
inc
test
inc
test
call
test
dec
jle
sub
xchg
push
cltd
shlb
cmp
mov
add
jno
shl
and
aaa
lret
shll
xor
xchg
sub
mov
mov
js
push
cmpsb
mov
js
fcoml
jmp
add
inc
clc
mov
push
into
pop
adcl
mov
fwait
mov
mov
pushf
mov
add
mov
jnp
jmp
lcall
mov
sahf
scas
cmp
insl
mov
pushf
jae
daa
dec
out
jns
daa
or
adc
rcll
lret
jae
push
ret
out
pop
xor
aaa
xchg
push
add
mov
clc
or
stos
and
mov
cmp
pop
rorb
xchg
or
xchg
mov
dec
popa
fwait
and
shr
fcmovb
jnp
je
leave
out
lea
add
add
je
pop
xchg
or
repnz
outsl
mov
xchg
pop
testb
or
mov
aad
push
pushf
js
in
cmpb
aas
mov
cmp
repnz
dec
outsl
out
jmp
enter
jle
insl
adc
or
pusha
je
push
test
and
dec
es
in
bound
lcall
push
icebp
int
lods
push
sub
incl
loop
data16
sbb
or
lock
mov
ret
outsl
pop
mov
cmp
mov
xchg
xchg
out
push
jg
enter
std
sub
mov
stos
addb
loop
xor
mov
adc
dec
daa
shlb
into
mov
pop
cmp
push
adc
cmp
sti
or
andb
imul
test
jbe
push
iret
arpl
mov
mov
mov
sbb
pop
shrl
out
outsb
xchg
nop
call
out
outsb
jns
add
enter
jbe
add
mov
jo
inc
test
push
or
pop
push
add
repnz
inc
test
fwait
pop
sbb
test
inc
in
cwtl
ret
inc
aas
mov
or
cmp
push
push
imul
sbb
lcall
push
ja
shrl
int3
mov
mov
data16
mov
add
rsm
inc
sahf
leave
fcomip
imul
adc
test
lret
xchg
xchg
dec
dec
aas
out
cmc
ljmp
cmp
movmskps
sub
cmp
arpl
mov
lret
pop
and
dec
cltd
cmp
bound
imul
inc
mov
xor
push
ljmp
dec
adcb
sub
cmp
mov
je
add
pop
in
cld
mov
mov
std
into
and
fiaddl
push
push
add
les
js
push
daa
xor
xchg
bound
and
fwait
xor
adc
pop
adc
inc
pusha
sbb
xor
cltd
xor
jl
add
call
orb
sbb
cmpsl
aam
pop
cld
cwtl
sbb
icebp
icebp
pushf
test
sbb
xchg
ja
loope
push
pop
leave
jge
jp
jmp
sub
mov
push
pop
daa
and
ja
adc
cmpsb
stc
adc
shr
cmc
inc
dec
rcll
pop
push
mov
dec
jle
out
cmp
in
addb
cld
mov
xor
dec
push
xlat
inc
lcall
xchg
adc
sbb
push
xchg
imul
fsubrl
ss
leave
and
es
sbb
scas
dec
mov
push
dec
xchg
rcll
push
cmpsl
testb
mov
movsl
xorl
into
mov
mov
jle
ret
xor
jae
mov
mov
jmp
adc
rcrb
out
adc
pushf
sti
jecxz
xchg
mov
cli
stos
fisubs
clc
mov
inc
test
add
lea
mov
sbb
sbb
ss
popf
mov
cmc
and
sub
sub
and
outsl
sub
cltd
out
pop
mov
xchg
push
jp
cmp
add
jo
and
outsb
dec
push
mov
adc
xchg
and
adc
in
add
lds
fucomip
and
push
jae
stos
or
mov
daa
sub
idivl
mov
shrb
and
out
inc
imul
ret
insb
sub
cmp
mov
pop
jle
es
out
ss
shrl
cmp
or
mov
and
or
jp
test
push
sbb
pushf
push
popa
pop
cmpsb
out
cs
enter
mov
loop
inc
shll
mov
in
shl
movsl
mov
pop
xchg
insb
insl
cmp
ja
or
add
xor
xlat
jmp
add
push
bound
loopne
shl
fdivrs
dec
and
add
add
neg
clc
inc
mov
aas
mov
dec
sbb
popf
fsubrs
sahf
fs
mov
dec
xchg
sti
lods
adc
adc
and
or
jbe
mov
lcall
fdivrs
xor
mov
rcl
in
enter
imul
jge
push
adc
scas
mov
add
fmuls
and
jge
sub
call
repnz
xchg
aas
imul
cli
jle
xor
mov
jae
daa
or
ja
fnsave
sub
push
icebp
mov
call
xchg
gs
repnz
sub
fwait
lahf
xor
and
or
add
cwtl
std
sbb
cs
lret
adc
sbb
xchg
out
lea
imulb
dec
sub
xor
test
jbe
or
test
push
pushf
lea
scas
xor
jle
ficoms
and
out
xchg
fstps
mov
cmpsl
test
subl
push
cmc
xchg
cmp
push
aas
sub
jg
inc
xor
lret
lods
outsb
popa
xchg
mov
jne
fs
push
ret
jge
adc
and
aas
push
sub
xlat
xchg
mov
mov
ds
fnstenv
int
idiv
nop
pusha
fidivrs
fiadds
and
inc
xchg
dec
sub
mov
cmp
jnp
mov
sbb
ja
jl
jns
cmp
insl
jae
jecxz
mov
icebp
dec
stos
divl
and
pop
mov
mov
adc
shl
test
jl
or
xor
add
and
or
or
cltd
fdivl
mov
mov
push
jl
iret
rcll
mov
ljmp
mov
int3
sbb
lods
add
and
in
inc
and
sbb
loope
xchg
fwait
push
int
addr16
dec
mov
out
mov
scas
in
inc
loopne
call
cmp
das
outsl
inc
repz
fmulp
stc
sub
mov
sti
mov
insl
sub
gs
lahf
and
push
mov
nop
xor
pop
mov
jecxz
add
mov
sub
aas
jp
adc
pop
add
pop
call
insl
bound
pop
mov
in
lret
enter
mulb
in
or
out
imulb
daa
nop
hlt
lock
aaa
mov
pop
repz
mov
dec
rcrl
ss
leave
loope
cld
ret
pop
int3
jb
popf
add
xor
jns
enter
pop
push
sbb
dec
inc
pop
jp
mov
cltd
cmp
dec
loopne
add
jecxz
push
lret
push
add
outsl
inc
jle
pop
stc
xchg
inc
jmp
ja
xchg
mov
dec
cmp
scas
add
adc
mov
shlb
aaa
int3
adc
ja
pop
cmp
mov
or
or
pop
incb
test
mov
and
and
nop
adc
xchg
into
repz
fcomi
mov
mull
sbb
push
lods
lea
cmp
bswap
mov
sub
in
aad
fcomip
push
lcall
cmpsb
cmp
jae
add
adc
lahf
out
xchg
dec
imul
filds
lahf
mov
cmc
adc
nop
fisttps
xor
aam
sub
push
cmp
xor
pushl
inc
les
mov
ja
sub
pop
adc
push
and
in
frstor
dec
loopne
fwait
out
shll
inc
push
push
dec
pop
xchg
mov
sub
adc
je
mov
inc
insl
or
cmp
decl
cmp
jle
inc
in
das
fdivs
pop
push
mov
scas
xlat
jl
mov
mov
inc
xor
mov
aam
jnp
cmpsl
sti
pop
pop
into
or
cmp
push
mov
roll
stos
push
repz
loopw
lods
xor
dec
xchg
int
mov
and
xor
xlat
sub
dec
adc
xchg
fcom
cmc
testl
xor
xchg
and
cli
inc
fcmovbe
pop
push
fwait
ljmp
js
and
mov
addr16
ffreep
add
mov
fs
xchg
pop
icebp
test
test
push
xorl
iret
lcall
outsl
push
mov
mov
rorb
xchg
inc
out
iret
sbb
test
dec
int3
not
stos
and
aaa
out
mov
sbb
dec
jge
data16
dec
out
clc
ds
jg
sti
and
das
sub
dec
pusha
ja
daa
imul
data16
dec
mov
xchg
add
xchg
jo
loopne
mov
and
test
xor
cmp
fdivrp
gs
shrb
leave
or
push
lcall
dec
outsl
jecxz
mov
aas
ljmp
mov
mov
sub
adc
or
mov
adc
jns
pop
xchg
mov
mov
cmp
mov
push
leave
pop
fcomip
das
push
roll
xchg
lea
aas
cmpsl
adcl
mov
cmp
mov
aad
sub
xor
clc
cmc
pop
aad
inc
xchg
ret
pop
outsb
adc
push
scas
mov
les
scas
dec
jno
xor
xchg
insl
sub
and
int3
push
addl
inc
jno
aad
mov
sub
lcall
jp
lret
xchg
adc
out
xchg
or
xchg
cmp
adc
sti
mov
xchg
fdivrl
repnz
add
hlt
dec
cmp
cli
das
mov
scas
pop
or
scas
jle
add
leave
stos
mov
dec
mov
stos
xor
sahf
mov
in
sbb
daa
add
xchg
shrl
mov
lods
adc
mov
mov
jecxz
add
add
cmp
xchg
into
mov
lret
mov
sub
xchg
pop
jecxz
mov
jp
ds
out
push
and
mov
outsl
daa
pop
push
push
cmpnleps
xchg
insl
dec
sbb
clc
std
inc
sub
mov
cmpsl
ret
in
test
cmp
test
and
push
pslld
nop
add
mov
shlb
int
inc
sub
ret
loopne
mov
adc
adc
daa
mov
leave
push
ret
inc
inc
movsl
and
gs
xor
leave
adcl
cmc
adc
call
xor
push
dec
fidivs
xor
xchg
nop
dec
ss
or
add
cmp
loopne
fwait
mov
mulb
lods
mov
mov
imul
xrstor
mov
mov
call
loopne
xor
adc
add
int3
add
in
dec
sub
lret
fwait
dec
ljmpw
pop
ret
mov
out
lahf
jge
jmp
jno
je
cltd
or
or
cld
jne
cmp
jge
cmp
rclb
lds
jp
mov
ss
dec
nop
mov
cmp
pop
push
xchg
dec
cltd
out
jb
sbb
inc
mov
jno
jb
jg
pushf
pop
dec
xorb
lods
push
push
cmp
jle
in
inc
fbstp
mov
and
ds
jp
jno
and
lods
icebp
rcrb
rcr
mov
in
rolb
leave
mov
mov
lret
or
jl
nop
and
inc
les
pop
mov
lods
das
adc
mov
cmp
test
insb
aam
mov
js
adc
mov
push
cmp
mov
flds
jmp
mov
or
inc
in
dec
adc
inc
nop
push
adc
fldl
jnp
ja
sarl
movhps
enter
xchg
loop
ds
pop
repnz
jmp
shr
mov
shrb
testb
or
mov
xchg
scas
adc
mov
push
sbb
ret
imul
xor
push
mov
pusha
adc
mov
insl
cmp
xchg
mov
std
lock
sti
dec
add
pusha
addl
addb
jge
push
sbb
add
ds
aad
in
push
fs
scas
mov
shll
shll
les
xor
sbbl
mov
push
mov
fisubl
outsl
add
es
cmp
leave
dec
das
push
mov
sbb
imul
lret
xchg
dec
fidivrl
clc
or
push
ficoms
adc
jns
adc
ss
mov
inc
or
fwait
adc
xchg
mov
enter
xor
std
daa
mov
mul
inc
das
sub
or
dec
pushf
or
negb
mov
mov
jnp
cs
fwait
pop
mov
and
dec
lahf
bound
insl
js
out
aaa
test
ret
xor
addb
or
test
mov
dec
daa
pop
mov
jmp
sarb
lods
pop
ljmp
and
xlat
fsubs
test
push
ret
inc
aad
xchg
add
sbb
sub
icebp
mov
pusha
push
pop
call
mov
pop
inc
xchg
xchg
push
inc
xchg
cmp
arpl
fsubrl
loop
insb
dec
inc
scas
lea
adc
jmp
xor
cmp
inc
adc
scas
stos
icebp
jl
sbb
mov
cwtl
loope
mov
aam
xor
sbb
hlt
lret
jmp
mov
shld
push
jg
sub
mov
ljmp
inc
bound
or
mov
mov
cli
mov
jmp
cmp
mov
and
dec
pushw
mov
mov
mov
imul
add
cmpsb
pop
sub
sbb
mov
xchg
test
dec
xchg
add
shlb
inc
outsl
jmp
shrb
inc
shr
jecxz
loopew
adc
out
push
jbe
int
inc
rcrl
push
repz
es
fnstsw
jmp
fnstcw
mov
jnp
cmpsb
or
cli
mov
dec
and
pop
or
cs
aam
cld
or
imul
inc
push
loop
mov
shr
outsb
in
inc
add
mov
lret
inc
daa
lods
pop
ret
popa
adc
mov
adc
fwait
outsb
jecxz
cmp
testb
cli
pop
imul
rorl
pop
cwtl
arpl
cmp
sub
xor
mov
cmc
sahf
lds
xor
inc
lods
push
cmp
aas
mov
mov
stos
imul
mov
fidivs
int
push
jg
movsl
and
push
dec
je
pop
push
sbb
adc
mov
and
jecxz
bound
in
pop
push
or
outsb
xchg
or
lea
in
add
adc
or
ret
jno
jb
xchg
or
cmpsb
in
sub
mov
je
daa
adc
jns
dec
stc
lcall
push
xor
push
orb
jbe
jp
inc
bound
jae
xor
add
sub
inc
sub
mov
cmp
adc
or
movsb
mov
jne
xchg
mov
mov
cmovns
ret
cmc
popa
fwait
push
lods
inc
loop
bound
pushf
mov
mov
pop
out
add
addb
or
sbb
repz
ret
dec
and
mov
xchg
mov
mov
int
mov
insl
rorl
push
roll
out
insl
lock
lds
and
in
ret
jp
jecxz
loope
cli
sbb
clc
jmp
pusha
and
ljmp
lret
cmp
stos
xchg
in
jns
push
lock
xchg
cwtl
test
sub
inc
mov
cld
push
jle
add
loop
mov
dec
roll
xchg
add
mov
cmp
mov
movsb
in
out
int
adc
fstpl
mov
ret
push
test
xor
sbb
lahf
jle
ror
in
pop
fiaddl
mov
fstpl
jbe
adc
js
sahf
pop
or
push
out
in
in
lcall
cmpb
pop
push
ret
sub
stos
ljmp
flds
dec
pop
js
jo
sbb
stos
mov
sets
sbb
or
adc
mov
and
test
or
outsb
clc
fstl
xor
or
sbb
pmulhw
lahf
lods
push
sbb
rorb
push
mov
pop
add
push
nop
xchg
loope
daa
jbe
push
mov
or
xor
push
pop
movsb
ror
sub
stos
ficomps
push
push
dec
aad
ret
lea
loope
and
pop
lds
filds
add
xor
adc
xor
inc
sub
mov
cmp
imul
pop
repz
jmp
or
ljmp
lret
out
ret
mov
adcb
gs
pushf
mov
add
mov
test
sub
fcompl
popf
sbb
dec
sti
dec
bound
mov
cs
enter
lds
inc
pop
xorl
sub
push
mov
mov
idiv
inc
mov
lock
out
add
cmpsb
pop
jmp
mov
cld
das
mov
or
lcall
pop
popa
push
orl
mov
adc
lods
mov
mov
cld
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
xlat
mov
hlt
pop
bound
push
push
xchg
fistpl
push
mov
and
mov
sbb
add
ds
test
lock
xor
adc
fldl
cwtl
rcrl
mov
decl
cmp
sub
pop
movsb
cmp
adcl
sbb
aad
fs
mov
add
inc
sub
mov
mov
aaa
movsl
cs
scas
push
call
dec
or
push
out
push
adc
jmp
jle
push
inc
xchg
sub
imul
mov
push
cli
loop
push
out
pop
push
pop
or
and
mov
adc
std
loope
adc
xchg
lcall
adc
push
fistps
test
add
push
lds
sub
lret
add
cltd
jle
push
xor
inc
out
ret
sub
pop
jb
sub
test
je
jnp
std
rcll
or
and
sahf
dec
sbb
enter
fpatan
pop
fs
fs
lret
ret
jp
test
out
ret
mov
test
notb
fwait
arpl
test
mov
cmc
addr16
dec
mov
dec
push
bound
leave
cld
cmp
and
mov
clc
adc
in
mov
dec
lret
rep
dec
shlb
pop
sbb
mov
xchg
adc
je
mov
xor
out
aam
jnp
ret
xchg
imul
xor
pop
push
lea
and
cmp
mov
lds
mov
jg
cltd
push
cmp
jns
lcall
or
stc
div
pop
jb
stos
mov
mov
test
adc
mov
mov
sub
repz
and
xchg
int
repz
or
dec
pop
mov
addl
lods
outsb
arpl
and
push
jge
subl
sahf
push
push
adc
int3
rcrb
bound
enter
add
es
lcall
pop
fnsave
repz
and
pop
mov
xchg
ret
dec
test
adc
cs
dec
mov
sub
xor
subl
push
push
fdivrs
mov
push
mov
xchg
iret
sub
std
dec
push
sbb
fsubs
fwait
mov
jecxz
cmp
xor
das
adc
cli
das
shll
iret
scas
std
subl
shl
jno
les
scas
push
mov
cmpsl
outsb
push
scas
ficomps
dec
das
mov
pop
xor
imul
pop
pop
lahf
fisubl
xchg
call
ljmp
cmp
rcrb
test
in
ljmp
data16
shlb
mov
paddd
ss
adc
les
btc
hlt
cmp
fadds
mov
jmp
in
pusha
das
mov
es
insb
cld
lret
jbe
lahf
push
sub
insl
push
mov
pusha
rclb
mov
and
sbb
loop
pop
ds
aaa
pop
xchg
ljmp
pop
imul
stos
mov
xchg
jmp
add
and
dec
xchg
and
dec
inc
data16
mov
xchg
pusha
pop
adc
adc
sub
shrl
pusha
je
mov
mov
std
mul
xor
outsb
jmp
pop
add
lahf
push
push
xchg
cmpsl
pop
dec
lea
xchg
add
inc
daa
jge
cmp
adc
cmpsb
lahf
fdiv
xchg
jno
push
inc
mov
outsb
pop
cmpsl
sbb
jno
or
jg
in
imull
fistpll
or
mull
dec
sbb
xchg
push
movsl
mov
in
cwtl
out
pop
or
ret
push
fwait
lret
inc
je
jno
aas
call
stc
test
jmp
in
test
inc
dec
mov
hlt
jae
or
pop
cmp
adc
mov
in
mov
scas
xor
or
sbb
xchg
cmpsl
pop
ja
lret
push
and
clc
loopne
cld
sarb
fisttps
repnz
rcrb
pusha
pop
mov
test
leave
cmp
jmp
jmp
add
test
out
xchg
sub
add
push
enter
ja
call
mov
imul
movhps
push
stc
push
imul
call
jl
jno
imul
inc
pop
jne
ret
pop
push
lds
jns
and
stos
pop
pop
xor
lret
cmp
loope
xchg
jecxz,pn
movsb
loop
movsl
add
shrl
jmp
mov
lods
add
test
sarl
pop
imul
repz
and
pushf
xor
lods
push
or
scas
movsb
add
leave
mov
addl
inc
shlb
mull
jno
mov
ja
cmc
dec
daa
lret
add
adc
in
lods
insl
jmp
inc
add
xor
sbb
mov
ficomps
sub
cld
mov
sbbb
popl
in
leave
sti
sbb
mov
push
jp
pop
cmp
sbbb
idivl
loope
test
jle
xchg
xchg
rolb
cmp
ret
inc
or
mov
and
shll
aam
pop
test
insl
arpl
idiv
imul
repnz
testb
push
loop,pt
out
sahf
ja
pop
stos
cwtl
push
ds
sti
jns
pop
aad
sbb
adc
pop
mov
ret
addr16
outsb
scas
adc
mul
daa
mov
pop
sub
mov
leave
mull
mov
xlat
push
stos
pop
mov
xchg
pusha
inc
xchg
jbe
fcoml
fsts
xchg
cmp
inc
pop
xor
and
pop
inc
mov
lahf
jnp
push
into
andl
inc
jnp
ss
pop
dec
or
fmull
push
push
jne
cld
or
sub
xchg
xor
ja
in
je
add
xchg
add
out
flds
pusha
lret
test
or
jecxz
add
mov
xchg
cmp
inc
jo
pop
bound
cmp
cwtl
dec
adc
dec
push
and
rorb
leave
bound
stos
je
sub
loop
adc
jae
jmp
fisubrs
push
adc
movsb
cmp
dec
jbe
testb
dec
rorb
mov
inc
jne
xchg
in
xlat
xchg
test
mov
aaa
lahf
int3
ficoms
xorb
dec
cmp
enter
and
inc
cmp
jo
into
fsubr
mov
loope
aad
lret
ss
lcall
push
jl
int
xor
cli
inc
add
add
add
cs
iret
xor
outsl
add
std
addr16
scas
sub
lods
and
leave
mov
mov
or
pop
lds
and
or
div
lea
dec
popa
pop
ja
movsl
push
sbb
mov
mov
sbb
cld
out
nop
cmp
xlat
mov
pop
xorl
mov
insb
push
cmp
jge
std
sahf
scas
lods
and
arpl
adc
mov
dec
adc
pop
mov
sti
aad
jmp
fidivl
mov
sub
pop
aaa
in
pop
xchg
cmp
push
movsl
inc
pop
sarl
xor
loope
pusha
loopne
xchg
pop
cmp
or
scas
enter
imul
aad
loope
mov
or
sbb
mov
push
add
xor
pop
adc
jl
repnz
push
shlb
fsts
xchg
scas
aaa
jle
sub
adc
test
xor
test
dec
ret
out
sarl
or
outsb
or
mov
mov
sbb
inc
jecxz
movaps
pop
mov
xlat
adc
pop
movaps
mov
xor
cmp
arpl
test
lods
fnsave
jb
pop
pop
adc
in
and
je
test
js
stos
out
dec
cmpb
cld
xor
inc
jno
jae
mov
xor
mov
decl
shlb
pushf
mov
adc
test
push
lret
or
loopne
xor
imul
int
push
lock
lods
jnp
and
push
sbb
add
jmp
call
mov
ret
mov
add
push
add
int3
pop
sbb
mov
mov
aaa
popa
daa
mov
cmp
jp
sbbl
sbb
dec
icebp
xchg
pop
repnz
pop
in
stc
push
imul
leave
adc
test
ja
outsl
push
xchg
ljmp
or
test
sti
movsb
mov
xchg
into
cwtl
lods
ss
jp
mov
imul
and
xchg
fadd
das
jnp
adc
mov
add
inc
je
dec
bound
idiv
adc
pop
sub
mov
out
aam
pop
test
fstpt
mov
push
fldz
mov
push
cmp
data16
out
adc
lea
mov
jge
and
rol
inc
insl
sbb
ret
sbb
push
test
jmp
mov
loope
jb
jo
push
aas
aam
push
data16
inc
loopne
mov
push
mov
or
fsub
jmp
cli
addr16
mov
and
sbb
mov
mov
sbb
lret
fidivs
cmp
pop
cmp
in
stc
and
out
and
lds
sbb
imul
xor
pop
inc
pop
jecxz
cs
jno
test
std
and
and
je
xchg
add
rorl
in
pop
outsb
cli
js
add
pop
mov
add
int3
mov
sahf
xchg
test
jecxz
dec
scas
roll
or
je
lods
iret
into
sub
in
je
jecxz
stos
pop
cmpsl
gs
insb
xchg
mov
test
push
es
jae
adc
int
test
fmull
xchg
cli
sbb
jno
cmp
push
scas
cwtl
sarl
sti
and
push
test
cmp
rorb
imulb
aam
mov
sbbl
mov
mov
mov
popf
je
ja
cmp
pop
sbb
pop
adc
test
dec
es
mov
ja
sub
mov
scas
loopne
mov
mov
fwait
add
push
sub
add
mov
inc
mov
fstpl
push
popa
pushf
stc
test
leave
inc
aaa
add
xor
pop
scas
xchg
pusha
dec
adc
xchg
cmc
mov
dec
add
or
lods
cmpsb
inc
add
mov
jecxz
dec
cmp
or
jecxz
popa
sbb
pushf
and
mov
mov
mov
xchg
adc
loop
push
pop
pop
inc
xchg
mov
cmp
adc
pop
stos
jae
xchg
test
lods
sub
sbb
mov
sahf
imul
and
mov
sti
mov
aam
dec
pop
cmp
cwtl
ljmp
push
fisttps
jmp
push
fsub
rcl
xchg
out
out
js
adc
cltd
jmp
mul
rclb
ljmp
jo
mov
jmp
mov
xchg
jns
xor
sbb
adc
lahf
scas
test
dec
cmc
sbb
fistpl
mov
lret
jns
add
enter
dec
mov
rorl
add
daa
sahf
icebp
mov
shl
xchg
std
repnz
loopne
ja
cli
mov
mov
push
dec
xchg
mov
cmp
jbe
inc
movsl
cmp
xorb
mov
repnz
movl
add
iret
rcrl
ss
hlt
fadd
mov
mov
sbb
xchg
cmpsl
add
pop
scas
sbb
lea
popf
xlat
mov
inc
or
pop
cmc
xchg
cmpsb
or
lea
nop
inc
std
out
test
dec
divl
mov
jbe
clc
or
lds
push
adc
and
xchg
xor
arpl
cmpsl
dec
cmp
push
add
mov
ficoml
xor
popa
sbb
or
mov
push
std
cmp
loop
mov
xchg
xchg
in
icebp
gs
lds
bnd
popf
adc
aam
xchg
cmp
loope
push
xchg
push
jmp
aaa
mov
ljmp
mov
imul
in
out
and
mov
outsb
mov
mov
enter
adc
popf
jne
sahf
sub
mov
je
push
fistpl
mov
jne
jg
cmpsb
pushf
insb
std
lcall
cmc
lahf
out
in
push
orb
clc
movsl
xchg
dec
sbb
fnstcw
xchg
fwait
adc
xchg
cmp
pop
sbb
xor
nop
outsl
arpl
sub
sbb
jno
xor
fisubs
sbb
adc
ret
insl
leave
popa
push
std
push
int
inc
sub
mov
imull
mov
inc
leave
in
lcall
enter
mull
or
and
or
les
mov
xorb
movsl
mov
inc
js
xor
xchg
in
jo
inc
pop
or
fdivrl
test
add
fs
mov
inc
push
xor
sbb
mov
add
sahf
call
jp
popf
cltd
xor
push
roll
fldcw
test
call
mov
dec
mov
xchg
xchg
repz
mov
and
pusha
imul
in
inc
jb
iret
mov
imul
cmpsl
in
mov
sub
cmpsb
dec
sbb
lock
loop
adc
mov
aas
inc
mov
incb
ss
push
sahf
adcl
push
fidivrs
dec
es
addb
jns
sbb
dec
push
loop
bsf
clc
shl
lcall
inc
shll
and
push
sbb
into
mov
sbb
outsl
xor
test
rclb
add
xor
pop
out
push
shlb
loopne
les
pop
outsl
mov
adc
add
dec
cmpsl
dec
out
outsl
sbb
scas
test
out
cltd
aas
int3
xor
popa
lret
push
jge
push
rorl
sub
fs
push
out
stos
inc
cld
push
sub
imul
stc
bound
idiv
mov
xchg
icebp
add
mov
xor
sti
pop
sti
rolb
inc
dec
jno
cmp
aaa
sbb
pop
and
adc
inc
pop
cmpsl
sub
pop
jno
adc
sbb
or
leave
fcoms
mov
inc
lret
jo
jno
mov
jo
add
int
loopne
dec
cmpsb
xchg
xchg
add
inc
leave
mov
std
mov
or
inc
dec
sarb
dec
sbb
xchg
scas
ljmp
in
js
push
mov
dec
push
aad
cmp
xor
xchg
enter
jge
xor
bound
lea
test
mov
das
or
mov
jnp
push
scas
data16
xor
fisttpll
mov
sub
mov
mov
and
repz
mov
inc
inc
xchg
jns
mov
sahf
push
inc
outsb
sbb
fadds
add
enter
test
jle
inc
int
xchg
xchg
int3
pop
test
mov
push
and
dec
idivl
lret
mov
popf
es
hlt
in
sti
roll
inc
mov
outsl
xchg
mov
scas
xchg
cltd
push
cmpsl
jge
mov
addb
fisubl
push
and
scas
pop
push
hlt
mov
into
mov
xor
fnstenv
fld
ffree
popf
fstpt
call
jmp
fbstp
pop
sarb
xchg
decl
or
stos
fmull
leave
pop
fidivs
iret
cmp
pop
push
xchg
loope
je
mov
cli
inc
mov
loopne
inc
imul
mov
sahf
push
stos
push
adc
cmp
cmp
jbe
mov
push
mov
add
jno
sbb
cmp
xlat
fcmove
cli
adc
stos
xchg
mov
daa
mov
ret
imul
dec
out
inc
fbstp
iret
enter
popa
repz
pop
ret
ret
cmpsl
sti
sar
pop
pop
cmp
lock
imul
mov
jne
xor
jne
jno
and
sbb
ds
cld
ret
or
mov
pop
scas
inc
into
sbb
pop
stos
xchg
or
jne
xlat
dec
outsl
sbb
clc
jnp
jo
nop
jbe
mov
test
stc
jb
lahf
ret
insl
stos
lods
mov
sahf
and
loope
sub
in
mov
rcl
jge
jp
xorb
jno
stos
je
dec
jmp
insb
cmp
fnstsw
into
wbinvd
push
shl
xor
pushf
and
or
xchg
outsb
popf
pop
mov
out
stos
mov
lret
test
mov
leave
mov
arpl
repz
ret
mov
shrb
and
mov
imul
mov
jnp
pop
add
pop
negl
jnp
mov
stos
bound
xchg
jmp
push
jno
mov
or
in
rolb
cs
or
jge
sub
cmpsl
mov
jno
dec
xchg
loop
lock
shr
push
test
xchg
nop
xchg
lcall
ror
lahf
add
stos
xor
mov
pushf
ror
es
fabs
faddl
lahf
jne
mov
push
sub
sbb
jae
mov
push
or
call
xor
mov
inc
outsb
aam
nop
xlat
mov
call
movsb
sub
add
mov
xchg
andb
in
pop
cmp
adc
fimuls
inc
jge
test
aaa
js
mov
sub
icebp
ljmp
loope
xlat
shr
mov
sahf
and
xorl
adc
fldenv
testl
push
push
jae
cwtl
test
xchg
lods
arpl
inc
and
mov
xchg
pop
cmp
dec
shl
jecxz
stc
pop
daa
mov
movsb
or
pop
loopne
fisttps
mov
or
jl
jmp
cmpsb
mov
repnz
ja
repnz
sbb
push
jno
inc
push
adc
clc
aas
scas
jecxz
sub
sub
inc
cmp
xor
lahf
sub
pop
out
or
push
mov
dec
jle
mov
pop
mov
mov
bound
sbb
je
sub
je
sbb
sbb
ss
hlt
jge
loope
aad
jo
push
imul
cltd
jo
fsts
jb
sti
je
cmp
shrl
mov
push
push
out
ror
repnz
pop
repz
js
repnz
out
xor
pop
rclb
sti
sbb
cli
outsl
int
inc
lret
dec
or
test
xor
xchg
mov
inc
repz
xchg
icebp
ror
loopne
ljmp
sti
dec
out
mov
insb
lahf
cmp
sbbl
insl
mov
lret
shr
adc
sbb
orb
cmp
xor
pop
push
jns
shr
sub
pop
lcall
enter
jnp
jae
xor
hlt
xor
sti
fstpt
pop
rol
push
ljmp
and
int3
cli
lods
sub
fisttpl
sarl
sub
inc
mov
inc
inc
es
xchg
xchg
aas
test
movsl
movsb
mov
insl
push
ret
ds
mov
pop
sub
sub
lcall
push
repz
gs
cld
cmp
cmc
and
mov
lods
xlat
or
cmp
ds
add
add
test
xchg
cwtl
rclb
pop
push
out
aas
aam
cmp
jno
sbb
mov
mov
loopne
jns
in
or
nop
cmp
jmp
mov
and
xor
mov
dec
roll
mov
mov
mov
jecxz
mov
or
adcb
js
adc
or
xchg
sbb
jl
loop
pop
stos
or
sbb
xor
sub
shlb
outsl
fnstsw
add
es
addl
jnp
into
rcl
aaa
addr16
dec
jecxz
loope
push
jne
stc
aas
mov
pop
sub
sbb
orb
addr16
pop
nop
mov
lahf
aam
adc
stos
fmull
lret
pop
js
sub
pop
push
and
ret
push
lcall
out
clc
inc
dec
shrl
adc
shrl
cs
cmp
jbe
sbb
dec
mov
xor
scas
test
add
pop
inc
xchg
iret
data16
xchg
mov
inc
jle
outsl
das
mov
loopne
fisubl
dec
adcb
enter
das
lahf
mov
sub
jmp
mov
je
push
jmp
push
or
inc
xor
mov
xchg
jne
popa
inc
je
cwtl
xor
scas
jmp
adc
mov
arpl
call
pop
and
test
addr16
sub
adc
and
and
dec
imul
mov
mov
sub
mov
mov
lods
cli
fiaddl
pop
in
inc
les
pop
or
imul
push
dec
out
outsb
mov
push
mov
jge
ja
jb
repnz
and
mov
sub
jg
cli
pop
dec
push
jecxz
fstps
mov
js
and
les
pop
mov
xchg
pushf
sbb
enter
pusha
repz
repnz
out
div
jle
push
arpl
mov
adcl
cltd
xchg
dec
pop
add
aas
add
add
jp
adc
jns
sbb
and
hlt
push
xchg
sti
popa
rorl
add
movsl
jnp
insl
mov
lret
sbb
xchg
mov
push
call
jno
push
sbb
xchg
add
jo
push
cwtl
mov
jne
mov
lods
adc
jmp
mov
daa
pushf
sub
cmp
mov
out
in
add
pushf
fcompl
pusha
std
out
xor
mov
ds
outsl
add
in
icebp
jnp
or
cmp
push
mov
loop
test
int3
cli
mov
xor
leave
mov
jmp
adc
xchg
mov
inc
jecxz
das
mov
cli
adc
in
jge
mov
sahf
xchg
out
add
mov
pop
mov
nop
cmp
je
push
mov
popf
dec
add
imul
push
insb
jne
mov
rcrb
adc
aad
in
mov
pushf
shr
push
imul
mov
mov
sbb
fimuls
mov
dec
popa
out
pop
movb
push
add
fnsave
add
lods
ret
push
sbb
int3
mov
mov
xchg
insb
mov
sahf
movb
test
adc
aas
pushf
test
aas
mov
sahf
mov
arpl
pop
cs
lock
jg
cmp
jmp
adc
cmp
dec
mov
loope
lds
pop
int
xchg
inc
jg
mov
mov
sahf
mov
roll
xchg
shrl
cmp
mov
mov
sbb
xchg
adc
or
daa
inc
enter
lds
add
lahf
lahf
mov
push
sbbl
icebp
lds
and
dec
lods
scas
into
scas
sarl
outsb
adc
outsl
into
pop
cmpsl
pop
sbb
cs
mov
add
and
xor
sbb
popa
push
scas
pop
dec
incl
jmp
subb
das
mov
cmp
loope
sbb
cmc
das
or
mov
mov
xchg
imul
xchg
cmp
sahf
js
xchg
fdivrs
sub
pop
push
or
in
jno
cmp
cmp
mov
xchg
mov
std
stc
popf
dec
and
pop
call
loopne
cmp
sbb
dec
mov
mov
dec
loop
cmpsb
xlat
cmp
jns
cwtl
ret
or
out
xor
mov
pop
rcrb
jne
jbe
rcrb
outsl
push
mov
fisubs
sbb
adc
dec
xchg
scas
stos
rcrl
in
jg
pop
rclb
cld
and
sub
neg
shlb
and
jl
sbb
inc
iret
inc
insl
fbstp
fldl
xor
dec
ljmp
push
dec
cmp
repnz
or
mov
jecxz
rorl
sbb
aam
ja
mov
sarl
in
stc
testb
inc
cmp
jl
mov
lds
sbb
lock
pop
jae
pop
cwtl
dec
popf
insb
inc
in
nop
mov
call
cmp
mov
add
mov
dec
loopne
int3
orb
test
jp
sar
jns
insl
stos
mov
push
arpl
stos
mov
xchg
mov
mov
mov
xor
xor
shlb
movsl
dec
or
and
aaa
cmpsb
mov
mov
addr16
ss
int3
sbb
push
pushf
cmp
addr16
stc
mov
xchg
imul
push
cmp
xor
cs
add
out
push
pop
test
push
or
lods
pop
or
sahf
adc
cmp
sub
scas
or
leave
push
out
push
int3
gs
and
adc
mov
aad
rcrb
cmp
cli
mov
cmp
out
push
stc
inc
test
addr16
mov
imul
and
fisttps
push
mov
insw
cmp
lcall
adc
sbb
leave
mov
xchg
or
leave
xchg
mov
repz
jb
mov
mov
push
mov
call
shlb
lret
push
or
or
mov
adc
mov
out
mov
inc
inc
lods
xchg
adc
add
mov
add
add
ja
sbb
bound
in
jmp
daa
scas
inc
test
loop
sbb
xchg
and
pop
adc
cmp
inc
lds
xchg
inc
shrb
mov
shlb
fcomps
and
in
incb
dec
in
jmp
repz
push
rcrl
repnz
jo
lahf
jecxz
loop
outsl
pop
mov
test
inc
jecxz
cld
push
stos
sub
andb
xor
sub
cld
mov
sahf
inc
cmc
popf
cs
btcl
or
into
call
mov
xor
popf
mov
xchg
xchg
or
xchg
test
daa
jge
sbb
add
push
aad
scas
and
jae,pn
xchg
fs
cwtl
jno
inc
xchg
pop
push
movsb
xchg
push
nop
inc
imul
mov
mov
dec
cmpsl
add
ljmp
pop
or
push
push
popf
add
mov
adc
subl
or
pop
aam
mov
movsb
loopne
cmpsl
dec
stos
roll
int3
jne
das
hlt
and
aad
jns
cmp
mov
inc
jmp
jge
add
das
cltd
pop
int
loopne
xchg
repnz
movsb
pop
or
pop
jbe
rolb
lahf
add
sbb
outsl
iret
add
aad
cmp
mov
pop
notb
sbb
call
out
xchg
loop
cmpsb
push
xchg
dec
stos
lods
mov
jp
adc
out
add
xchg
cmp
fdivrs
shll
test
add
cmp
pop
call
fnclex
subl
out
pushf
jp
sbb
mov
push
adc
stos
in
adcl
or
icebp
jnp
out
outsl
lahf
std
xchg
lods
ja
xchg
jbe
inc
fsubs
fwait
sbb
mov
shrl
jecxz
icebp
cmpb
push
push
xchg
adc
sub
jb
jns
xor
je
xor
out
fstl
pusha
xlat
cmp
mov
out
sti
lds
mov
xor
insl
push
iret
inc
loope
sbb
lcall
cmp
adc
cmc
loope
outsl
negl
adc
movsb
mov
fildll
movsl
pop
pushf
out
pop
aam
or
sub
xor
jns
xchg
loop
sub
das
orl
sub
inc
rcr
mov
outsb
mov
jge
negb
shrb
mov
pushaw
or
or
adc
lods
jnp
or
jns
xor
jnp
mov
shrl
xlat
repnz
push
inc
fidivs
sub
pop
mov
sbb
flds
cs
clc
lods
test
push
out
adc
cmp
inc
fmull
xor
jl
nop
sub
push
inc
enter
ret
fisttpl
mov
jmp
mov
lret
pusha
out
mov
fstpt
jae
cmpsl
lds
out
pop
and
sbb
sti
mov
outsl
cmp
movsl
sti
pop
loope
outsl
inc
sub
xlat
xor
test
negb
mov
mov
pop
mov
aaa
pop
jnp
imul
push
mov
mov
push
inc
fwait
loopne
fmulp
clc
mov
jb
insl
rolb
lea
pop
pop
jge
std
dec
sarb
fisttpll
mov
movsb
out
imul
sbb
dec
pop
test
dec
ja
sub
into
stc
mov
das
cltd
dec
jl
cmpb
pop
or
xchg
sbb
fwait
dec
pop
sbb
hlt
dec
aaa
scas
fnstenv
into
xor
mov
jmp
addr16
test
cmp
imul
dec
adc
push
out
sbb
dec
xchg
in
lcall
mov
shrb
fimuls
cvttps2pi
adc
cmp
in
movsb
shrl
mov
adc
sub
shll
push
mov
or
movsb
lods
mov
pop
popf
push
addl
add
stos
out
push
imul
test
mov
and
fistpll
repz
xor
pop
scas
push
idivb
xor
add
testl
lahf
adcl
inc
mov
xchg
mov
daa
lcall
jl
js
mov
cmp
sti
cmp
jg
insl
mov
or
lret
mov
cmp
cmpsl
jecxz
pop
xlat
inc
mov
sahf
xchg
in
push
je
or
inc
jnp
divl
out
xchg
push
out
mov
addr16
mov
lea
sub
pop
sub
shll
sub
stc
jecxz
mov
roll
sub
insb
dec
adc
xchg
dec
lea
sub
scas
popa
add
mov
inc
adcb
add
mov
outsl
inc
lods
jno
jl
pop
or
in
cmp
fcmovbe
adc
mov
mov
pop
psubusw
push
js
jp
aaa
xchg
gs
and
jl
iret
pop
ficoml
clc
cmpsb
mov
adc
ficoml
adc
inc
jno
push
ljmp
adc
dec
and
pop
subl
sub
clc
inc
cmc
or
ret
adc
mov
enter
ja
sub
aad
or
lcall
movntq
out
mov
mov
xchg
lea
aaa
xor
xor
popa
fadds
xor
icebp
or
pop
mov
jnp
jbe
cltd
imul
xchg
loope
jmp
iret
fwait
ja
inc
mov
pop
jno
xor
dec
clc
and
shrb
addr16
push
daa
stos
fstpl
jmp
mov
and
inc
arpl
ret
fists
mov
lret
cmp
pop
das
mul
int3
adc
jb
fstp
dec
mov
inc
pushf
fisttps
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
mov
bound
pop
bound
out
cmp
push
mov
inc
gs
push
mov
lret
inc
mov
pop
sbb
cmp
in
popf
sti
mov
push
push
or
jl
mov
fcmovbe
jl
pop
fsub
nop
bound
test
dec
lahf
mov
das
push
jnp
jnp
pop
push
test
gs
adc
xor
out
xchg
lea
aam
xor
pop
jge
imul
stc
sub
push
loope
js
pushf
inc
bound
sub
mov
mov
add
add
and
pushw
test
imul
xchg
xor
loopne
mov
popa
mov
and
popa
mov
aad
dec
les
cltd
leave
xchg
dec
jecxz
sub
jne
inc
sbb
or
iret
mov
js
mov
jl
push
mov
sub
xchg
or
enter
jae
loop
dec
cmp
lret
enter
sbb
add
add
rclb
mov
jmp
pop
push
icebp
lods
push
fists
push
push
fdivrl
sbb
stos
xlat
sahf
or
inc
push
lea
hlt
add
addr16
sbb
pop
fs
and
mov
mov
xchg
pop
adc
incb
addr16
decb
mov
leave
jg
jbe
addr16
sbb
mov
push
adc
in
es
hlt
iret
mov
repz
pop
les
pop
inc
or
mov
adc
pop
mov
inc
imul
and
cli
jge
imul
mov
push
sbb
daa
mov
dec
xorb
push
or
int
js
sub
sahf
jno
in
outsb
popf
dec
jb
lahf
mov
int
push
mov
add
push
aaa
pop
mov
icebp
std
sub
jmp
mov
aas
jne
jbe
jb
imul
push
sbb
popf
xor
bound
cmp
call
test
cmpsb
mov
cmp
es
cmp
shr
dec
jno
pop
sbb
stos
mov
cmpsl
dec
fidivs
shll
fsubl
gs
xor
cmp
subb
imulb
sub
add
cmp
mov
out
jl
js
pop
cmp
mov
in
add
inc
dec
lret
xor
shll
mov
pop
shlb
add
test
movsb
test
mov
sub
out
je
xor
dec
cmp
scas
cld
push
repz
xchg
lods
adc
push
push
test
popf
inc
xchg
xchg
stc
pusha
cmp
add
xor
rorb
mov
mov
sub
lahf
mov
or
push
push
pop
scas
xchg
or
loop
mov
push
aam
mov
insl
js
inc
cmp
sbb
pop
push
dec
add
imul
bound
and
imul
cmovbe
hlt
scas
cmp
add
pop
daa
loope
cmp
movsl
mov
jae
pushf
jmp
aas
cmpb
fldcw
fistps
pusha
pop
xor
jnp
sub
sahf
cmp
aam
imul
jmp
shll
adc
mov
ret
dec
mov
gs
jecxz
lret
sbb
iret
lock
int
test
mov
mov
mov
and
insb
subb
push
mov
into
and
xchg
push
mov
lcall
mov
repz
inc
adc
inc
mov
lods
pop
pusha
paddusb
std
add
pop
push
pushf
popa
clc
scas
sti
cmp
shll
lods
loop
aam
scas
ret
or
cmp
pop
and
sub
sub
jne
dec
pop
insb
dec
das
inc
push
or
test
cwtl
jecxz
jle
test
cmp
fstpl
jmp
cltd
test
xchg
lret
xor
and
adc
clc
mov
sahf
xchg
pmullw
mul
and
rclb
lcall
dec
call
mov
inc
test
nop
iret
mov
jg
or
push
cmp
icebp
adc
jnp
pop
lds
test
scas
cmp
aad
test
nop
adc
push
jb
push
imul
sub
pop
xchg
stos
mov
mov
inc
xchg
sbb
ret
je
xchg
jmp
ss
adc
in
push
jno
or
push
fistpll
mov
cmp
popf
sbb
iret
cltd
push
xor
and
nop
xor
dec
inc
cmp
or
nop
fcmovnbe
push
rolb
and
mov
rolb
jmp
je
stos
out
mov
add
push
mov
dec
xchg
or
insl
out
test
sahf
xor
andl
bnd
jge
push
addl
out
dec
mov
xor
jp
repz
or
lods
cmpsl
cld
xchg
mov
inc
imul
adc
xchg
cwtl
jg
push
rolb
sbb
scas
repz
fsubl
nop
lods
sub
mov
leave
loop
xchg
jecxz
and
or
push
orl
test
lock
adc
xorb
ljmp
sub
mov
push
pop
jecxz
test
dec
daa
popf
xlat
lcall
xlat
lahf
add
or
jno
jmp
sub
in
and
insl
mov
inc
cmp
adc
jnp
mov
ret
movsl
push
arpl
pop
jecxz
xchg
push
iret
insb
iret
inc
ret
nopl
inc
outsl
mov
xchg
imul
and
neg
jmp
jmp
xchg
ret
stc
and
cli
pusha
out
push
xchg
out
test
mov
adc
push
ljmp
mov
imul
or
cmpxchg
stos
or
int
std
xor
mov
inc
out
scas
mov
ficomps
movsb
ja
jmp
sub
mov
lret
and
aaa
mov
jl
aam
mov
dec
jne
xlat
push
xchg
sbb
into
jge
adc
inc
iret
ret
jmp
mov
push
pop
sti
jae
mov
add
xchg
inc
pop
sbb
adc
sub
daa
pop
ja
mov
jb
jb
ljmp
adc
cmpsb
add
stos
pop
dec
xor
imull
dec
xchg
inc
rolb
pop
sub
outsl
lahf
iret
pop
pop
add
aam
loop
rcll
or
cmp
xchg
mov
ljmp
inc
jnp
scas
cmpsb
pop
push
scas
add
mov
cli
div
lret
nop
sbb
xchg
adc
shl
leave
loop
jmp
std
mov
push
pop
adc
add
pop
fcmovnb
mov
and
inc
lahf
loope
cmp
mov
pop
call
or
jecxz
stc
out
lret
xchg
clc
lcall
jb
adc
cwtl
inc
or
jmp
sbb
xor
fistpll
jmp
fstps
jge
lahf
repnz
cmpsl
rcrl
fbld
cwtl
mov
fs
xor
push
adc
popf
in
push
xchg
fstpl
and
je
in
sbb
add
xchg
push
mov
or
inc
test
add
inc
lods
jbe
lods
push
mov
dec
mov
js
ss
mov
pop
sub
adc
lods
adc
fimull
imul
rcll
inc
mov
dec
dec
push
mov
push
into
jne
xchg
dec
jle
rcll
dec
shl
adc
jo
insl
bound
cmpsb
imul
add
or
pop
adc
mov
xlat
mov
jnp
stc
mov
fdivrp
mov
or
rclb
les
xchg
stos
xchg
ds
cmp
orb
jae
fistl
lea
int3
sbb
push
roll
das
push
jno
std
mov
lock
rorl
inc
into
push
mov
mov
dec
stos
sbb
pop
dec
mov
jb
adc
and
jl
mov
enter
testl
jg
sbb
fcom
stos
adc
cmp
mov
jne
outsb
mov
stc
lods
jle
sbb
jl
add
icebp
sti
jp
cmp
rcr
xor
inc
mov
lahf
in
jo
lahf
cmp
push
movsb
stos
adc
repnz
lds
outsb
mov
iret
and
repz
mov
loopne
test
adc
int3
lret
push
lahf
add
add
inc
mov
loopne
lahf
je
xchg
stos
push
cmp
adc
popa
mov
decl
pop
and
cmc
push
xor
or
mov
sbb
inc
mov
cmp
stc
mov
dec
xor
pop
cwtl
xchg
mov
int3
inc
mov
cltd
inc
cmp
jmp
enter
lahf
outsl
push
mov
and
mov
xor
jle
insb
pop
sub
lret
cwtl
in
adcb
push
sbb
dec
or
call
pop
aas
mov
and
test
fdivrs
inc
xchg
lea
sub
ss
lret
jae
pop
adc
sub
jecxz
jmp
mov
je
fistl
sub
jmp
out
stos
mov
aaa
movsb
jae
xchg
imul
xchg
inc
and
jmp
orb
sbb
icebp
sbb
arpl
sbb
push
pusha
lret
aad
inc
jmp
cli
out
divl
jns
sbbl
roll
mov
push
sub
outsb
jnp,pn
adc
fistpl
imul
push
mov
sbb
gs
nop
mov
aam
clc
mov
popa
sub
push
mov
outsl
leave
lods
or
cmc
gs
sub
mov
test
mov
push
mov
or
dec
xchg
cmpsl
or
or
jb
dec
cmp
cmp
fdivs
cmp
gs
lret
adc
loope
xor
movsb
repz
jnp
stc
sub
mov
pop
mov
inc
out
pop
scas
movsl
jmp
dec
fcoms
add
shll
push
fildll
mov
fadd
adc
mov
inc
push
mov
sub
mov
cli
pop
outsl
cmp
xor
lds
mov
adc
pop
pop
mov
xchg
rcrl
and
inc
fnstcw
and
fstpl
add
aas
ds
xlat
mov
rol
cmp
mov
fsubl
lds
mov
push
adc
sub
add
lahf
cmc
and
and
and
jl
addr16
xor
or
shl
lcall
jae
mov
mov
sub
pop
outsl
jae
or
arpl
and
xchg
ljmp
aaa
mul
popa
pop
rorb
outsb
dec
mov
lock
add
movsl
and
loope
push
jecxz
stos
pop
stos
mov
xlat
aad
or
sahf
sub
test
add
sti
nop
push
xor
mov
jge
pop
out
jb
sbb
std
lea
xchg
leave
in
dec
xor
adc
inc
mov
fs
pop
cltd
jecxz
fwait
mov
mov
mov
rorl
jb
inc
mov
mull
xlat
je
inc
xor
out
or
hlt
enter
pusha
push
and
das
inc
jno
sub
xchg
mov
pop
aad
dec
dec
mov
pop
fisubl
pop
mov
inc
test
sbb
mov
loop
lods
outsl
jecxz
stos
int3
mov
mov
cli
mov
les
testb
push
shlb
leave
push
jne
mov
in
xchg
mov
icebp
movsb
ret
mov
stos
adc
fiadds
jmp
mov
pop
repz
push
dec
aas
aaa
push
fisttpll
or
adc
sub
pusha
in
push
ja
jo
jg
xchg
xlat
adc
gs
inc
ljmp
lahf
popf
ja
xor
dec
jecxz
xor
pop
pop
jbe
jnp
add
rorl
mov
add
pop
or
leave
sub
enter
daa
fiaddl
sub
and
enter
icebp
sub
in
mov
gs
inc
mov
xor
jle
pop
mov
scas
outsl
xchg
out
push
outsb
enter
sub
sbb
sbb
or
je
mov
mov
or
js
add
sub
xor
ficoms
cmp
mov
mov
rorl
sbb
xchg
mov
jno
scas
pusha
cmp
or
outsb
mov
nop
mov
cwtl
push
jnp
popa
pop
mov
mov
or
ficompl
or
jae
add
jns
jecxz
xor
frstor
js
ror
pop
and
pop
scas
cmp
nop
xor
cmp
xchg
and
stos
or
or
xor
lock
iret
jge
mov
js
sub
lcall
test
mov
shl
push
outsl
aaa
fisttps
lds
stos
cmpsl
lahf
fistpll
js
or
test
push
push
aad
aad
dec
clc
mov
in
and
jno
outsb
jb
sbb
lcall
mov
ds
xchg
add
sbb
xchg
adc
and
call
gs
mov
outsb
push
jmp
daa
rol
adc
mov
pop
cmovb
mov
cmc
repnz
mov
hlt
jo
lret
sub
mov
lds
and
mov
fsts
fdivs
add
daa
xlat
test
test
cmpsb
inc
adc
push
mov
xor
imul
sbb
out
mov
out
jo
jle
int
mov
or
ret
lcall
clc
inc
cmc
mov
rol
xchg
jle
sbb
rcrl
mov
jmp
fwait
mov
ljmp
push
lcall
enter
push
mov
ljmp
pushf
bound
mov
aad
mov
mov
cs
push
jp
bound
test
sahf
mov
out
mov
pop
int
xchg
bound
push
adc
add
push
jne
jp
scas
andb
add
adc
enter
sub
les
cwtl
add
mov
mov
pop
hlt
sub
lods
fstpt
xor
xchg
fsts
fwait
loop
add
jp
jb
mov
inc
and
out
cmp
and
fnstcw
xchg
rorl
sti
xor
jno
test
cli
or
scas
cmp
jbe
fs
mov
pop
fstl
mov
push
sbb
loop
in
pop
pop
pop
xor
xchg
or
sbb
xor
rcr
or
sbb
push
xchg
jae
or
out
js
lods
lret
pusha
subb
mov
ds
and
pop
in
repnz
mov
inc
addr16
loopne
jns
pop
pop
fiaddl
ret
cmc
xchg
outsl
lahf
and
lret
add
les
jecxz
push
fadd
jns
out
xchg
mov
pop
xchg
mov
xor
cmp
push
pop
lahf
pop
mov
dec
mov
adc
push
stc
pop
cmp
call
sahf
dec
movsb
jmp
test
xchg
mov
aad
lahf
adc
cld
test
test
push
test
xchg
and
dec
mov
leave
add
inc
jp
jno
mov
pop
outsb
stos
int
push
push
rcrl
or
std
pop
mov
or
mov
dec
or
or
nop
adc
sbb
mov
lock
mov
jns
cltd
aas
xchg
adc
dec
es
fwait
lret
test
nop
loopne
cli
clc
ljmp
sub
mov
cmp
xchg
cli
jnp
and
lods
mov
push
pop
jl
sti
notb
and
inc
add
pop
fdivr
repz
shrb
ljmp
movsb
in
out
mov
testl
mov
les
sarl
rcrb
jno
pusha
adc
jle
jo
out
into
bndldx
sub
mov
mov
popf
add
sbb
cmp
mov
mov
mov
mov
cli
sbbb
pop
imul
ss
leave
fnstenv
add
rolb
inc
repnz
adcl
aam
pushf
add
mov
imul
inc
ror
out
lret
mov
inc
mov
testl
cmc
shrb
add
hlt
xor
insl
xchg
jg
pop
inc
and
mov
cmp
ds
mov
hlt
insb
adc
cwtl
repnz
mov
inc
adcb
cmpsb
stos
push
popf
das
jp
or
or
shll
fldenv
or
in
and
insb
inc
stc
aas
mull
test
or
xchg
pusha
add
repz
or
repz
clc
jne
lods
sahf
movsb
std
fists
les
fs
insb
lea
sbb
sbb
ljmp
lock
sub
loope
mov
jge
jnp
mov
mov
xorl
movsb
xor
dec
stc
and
sbb
mov
jecxz
lods
stos
adc
xlat
mov
rcrl
outsl
std
xchg
push
inc
icebp
cmp
aas
imul
xchg
cwtl
cltd
sub
loope
jmp
ja
js
or
push
inc
repnz
hlt
mov
js
sub
cmpsb
ss
sbb
add
inc
daa
jns
cmp
jb
cmp
push
dec
jae
pop
push
leave
mov
ret
aaa
lock
sahf
jle
dec
ret
pop
push
add
lret
or
hlt
lret
jns
xchg
push
inc
pop
mov
jmp
mov
inc
iret
jge
add
les
aad
dec
push
adc
cmp
and
clc
mov
push
movsl
out
jne
xlat
movsl
adc
adc
mov
pop
bswap
aad
outsb
lods
pop
jnp
pop
xchg
test
add
adc
pop
mov
imul
cmpsl
lret
lret
jmp
adc
out
nop
shlb
mov
adcl
fmuls
cmp
int3
push
mov
fnsave
or
cld
or
aad
jae
xchg
adc
das
rcrl
lret
add
and
inc
mov
mov
push
xchg
add
fwait
jns
pop
sub
int
dec
loopne
or
cmc
stos
ret
add
mov
xorb
fbld
jae
pop
ja
xor
jne
inc
inc
out
add
jp
test
cmc
pop
and
std
insb
add
inc
sub
aaa
cmc
jno
inc
imul
ljmp
push
and
cmp
xchg
out
add
icebp
xchg
push
jle
adc
xor
fbld
jno
push
pushf
mov
and
mov
arpl
or
fldcw
inc
mov
mov
pop
je
pop
mov
faddl
inc
mov
dec
aad
sub
mov
add
push
gs
jmp
jecxz
jnp
out
xchg
sti
mov
inc
push
push
push
std
repz
cmp
lret
lds
dec
cmp
rcl
cmp
jne
add
pushf
loopne
jne
xchg
leave
xchg
sbb
call
jge
test
popa
popa
mov
std
cld
cmp
mov
sbb
out
sbb
dec
lret
dec
jbe
sbb
hlt
mov
adc
sub
mov
mov
xchg
rcll
popa
pop
xor
inc
std
cld
cmpsl
cmp
pushf
add
lods
adc
inc
sbb
movl
sbb
imul
pop
ret
xchg
into
std
and
jns,pt
jbe
test
je
mov
pop
and
jecxz
adc
pushf
pusha
test
jns
sub
ret
dec
inc
and
rorl
and
mov
shrb
aas
dec
scas
or
jb
add
cltd
call
testl
dec
shrb
pop
repnz
out
xor
jne
cmp
je
lock
jl
sub
push
xlat
or
mov
pushf
mov
pop
sub
push
inc
popa
dec
inc
test
lods
and
mov
xchg
cmp
cmp
pushf
cwtl
out
rcll
mov
int
icebp
lea
das
les
int
and
jo
push
lea
push
jb
call
int
dec
xchg
clc
nop
or
mov
mov
jmp
push
sbb
pop
mov
shlb
ret
inc
testl
add
add
xor
popf
and
es
popf
sbb
xchg
xchg
jecxz
push
mov
into
dec
cmp
push
es
dec
test
sub
into
out
or
adc
or
fdivp
sbb
test
inc
push
jb
mov
notb
loope
lods
lea
mov
pop
push
and
out
mov
sbb
lds
xor
ds
jmp
jecxz
icebp
add
push
das
adc
loope
add
iret
sub
sbb
and
xor
ljmp
mov
push
pop
nop
lea
test
in
inc
cmpsb
das
xchg
xor
shl
and
mov
xor
repz
dec
ja
out
mov
pop
adc
cs
sub
scas
jmp
or
sbb
mov
sub
leave
jns
outsb
lods
mov
push
xlat
pop
cmc
pop
insl
repz
and
arpl
pop
or
lds
jle
xor
xor
adc
xchg
pop
movsb
stos
mov
add
mov
ja
bound
inc
je
jl
cli
adc
cmp
fistpll
pop
push
push
mov
mov
lea
clc
repz
lret
dec
ret
inc
cmp
sbb
jb
daa
cwtl
and
mov
popf
mov
aas
pop
cld
inc
jg
mov
mov
insl
pop
lods
lret
js
inc
lret
mov
fimuls
mov
xchg
push
push
popa
mov
les
jle
mov
inc
test
xchg
ret
sub
movsb
add
xchg
add
and
shll
pop
out
sbb
add
jl,pt
sub
push
outsb
mov
jno
jne
sarl
jb
jo
call
xchg
xchg
push
fwait
push
std
fsubs
es
push
sbb
imul
les
mov
into
pop
mov
leave
pop
fistpll
mov
xor
mov
jbe,pn
mov
mov
jae
repz
xlat
repnz
push
out
adc
in
lds
jns
js
pushl
pusha
pop
add
push
dec
fmul
lods
mov
jge
mov
lcall
fincstp
fcoms
mov
and
mov
in
adc
cmp
imul
cmpsb
fildll
jecxz
dec
repnz
and
insl
stos
sbb
pop
push
mov
in
pop
outsl
clc
daa
je
and
pop
add
sub
sbbb
imul
sbb
dec
ficomps
jnp
pop
pop
in
add
popa
es
adc
xchg
mov
arpl
outsl
into
lods
cmpsb
dec
push
mov
mov
push
xor
sbb
jno
les
cmp
inc
add
rcrb
idivb
mov
call
sbb
lods
pop
shrb
dec
push
sbb
sbb
jl
add
dec
movsl
mov
es
lods
or
push
fnsave
inc
scas
mov
dec
ficomps
or
jmp
cmpsl
pushf
out
mov
sub
icebp
mov
sti
or
adcb
ficoml
loopne
add
and
test
jecxz
int3
loopne
stos
iret
fnstsw
das
inc
jg
push
jno
sub
cmp
jecxz
rcrl
int3
cld
inc
insl
scas
pop
int3
xor
rcl
mov
aam
outsl
enter
roll
sbb
mov
int
in
sahf
arpl
js
notl
jne
inc
xchg
xchg
and
xor
push
push
push
test
xor
adc
ds
dec
sti
mov
dec
push
mov
and
fisttps
fstl
and
fwait
invd
cltd
mov
adc
jl
enter
xchg
lret
sahf
es
or
lcall
dec
jne
std
adc
out
pusha
stos
or
adc
mov
push
and
inc
add
cmp
dec
negl
pop
movsb
adcl
popf
jae
pop
stos
mov
cs
dec
xchg
mov
mov
jge
aaa
mov
mov
pop
xchg
incb
fnstcw
in
xor
repnz
adc
cmc
lret
lods
lea
push
ret
shl
cwtl
cmpsl
mov
lock
test
call
imul
lret
jl
sub
scas
push
mov
inc
mov
mov
push
icebp
pop
xchg
sahf
mov
ret
sbb
and
jne
lds
inc
xor
inc
leave
mov
je
cmp
ret
dec
mov
stos
push
jae
into
sub
lods
gs
imul
test
cltd
stos
movsl
cmp
scas
cwtl
mov
aaa
mov
pop
pop
xchg
jp
outsl
mov
jo
cmp
shrl
mov
fwait
sub
pop
outsl
test
or
xchg
mov
jl
and
sub
mov
xchg
cli
jge
stc
cmp
lret
dec
add
arpl
jecxz
push
sahf
mov
jno
cmpsb
sub
inc
ja
and
dec
mov
fisubs
mov
loop
clc
mov
jnp
cs
and
xor
inc
mov
push
ljmp
orb
push
sub
mov
adc
lret
inc
adc
ljmp
sbb
mov
divl
inc
or
mov
inc
ret
sbb
fwait
stos
jnp
imul
or
sub
and
pop
xor
sbb
xchg
mov
out
dec
stos
pop
sub
push
jmp
gs
inc
test
mov
jmp
sbb
outsl
or
mov
pushf
push
push
inc
icebp
js
rcrl
fidivrs
mov
mov
hlt
ljmp
xchg
sbbl
sbbb
xchg
lahf
pop
bound
hlt
inc
dec
jg
jb
gs
shrl
dec
call
jo
bound
dec
jo
or
fsubrs
in
cmp
cmp
xor
decb
mov
fptan
cmp
adc
std
jmp
mov
lods
pop
adc
and
ss
pop
sbb
jbe
inc
jg
pop
pop
push
fs
mov
xchg
pop
popf
mov
movsb
js
ret
loope
ss
shrl
pop
cld
mov
sbb
inc
and
out
aad
subb
dec
sbb
aaa
sbb
arpl
arpl
xorb
fstpl
shr
dec
mov
cs
jae
jbe
pop
and
push
jl
adc
ja
pop
dec
dec
adc
adc
fistl
rorl
decl
xchg
mov
mov
incb
xchg
iret
out
enter
movsl
stc
or
shll
enter
mov
mov
dec
mov
pop
push
pop
push
popa
adc
shr
jbe
mov
bound
xor
mov
scas
int3
cs
mov
mov
sub
inc
hlt
in
xchg
xchg
pop
in
pop
jecxz
mov
cmpsb
xor
movsl
data16
sub
mov
push
xorb
cmpsb
sub
stc
loop
jnp
sub
rcr
lea
inc
xlat
mov
and
jbe
fldenv
es
mov
mov
out
fistps
pop
in
js
testl
mov
push
xor
dec
out
jne
aad
repnz
outsl
pop
xorl
data16
in
rcr
jae
fcoms
and
sti
xchg
xchg
mul
sahf
mov
enter
lea
rcrb
xchg
lcall
data16
mov
mov
jge
shl
call
jecxz
inc
jge
dec
pop
push
enter
outsl
mov
es
or
adc
lods
test
shrl
push
mov
jmp
and
test
ret
push
mov
push
lods
clc
pop
popa
or
into
mov
sub
enter
std
dec
cwtl
stos
notl
rcrb
sub
cli
arpl
xchg
test
popa
fldt
mov
lret
cmp
cmpb
cmpsl
sbb
cmpsb
push
std
add
mov
add
mov
jecxz
mov
fstl
dec
mov
and
dec
dec
sbbb
push
sarb
shlb
cmp
test
ja
cmp
xchg
sub
fs
loop
sti
addr16
and
lahf
xor
in
ret
inc
daa
or
and
das
in
addr16
xor
test
rcrb
jmp
mov
inc
aam
stos
push
mov
jecxz
pusha
xlat
push
cmp
mov
in
in
movsb
add
and
mov
jbe
jnp
lea
cmpb
or
adc
int3
dec
add
sarb
jns
ljmp
std
mov
idiv
mov
xchg
inc
movsb
push
repz
mov
out
stos
inc
cltd
cmp
scas
outsl
or
adc
cmp
sbb
push
lods
cmp
mov
mov
adc
test
xor
fs
or
hlt
int3
insb
and
jno
orb
cmp
sahf
cmc
adc
dec
aad
pop
scas
mov
push
cld
mov
cltd
imul
rcr
inc
mov
addl
popa
mov
enter
stc
dec
lahf
xchg
xchg
or
adc
mov
shrl
loope
lods
xlat
call
cmc
and
sub
jne
inc
mov
imul
ds
push
inc
push
push
ret
popa
insl
or
dec
mov
dec
add
js
mov
icebp
je
das
mov
push
insl
sub
loope
jmp
js
inc
sbb
jne
or
push
pop
inc
loope
jl
and
cmp
out
nop
pop
fstp
mov
sub
push
mov
shl
lcall
cmp
adc
and
arpl
addr16
sarb
stc
adc
shrb
inc
shrd
js
mov
icebp
subl
das
fnstcw
popf
cmp
lods
adc
fdiv
pushf
sahf
xor
push
daa
mov
add
into
push
dec
pop
push
and
inc
daa
cmc
pop
lods
or
stos
jmp
dec
or
fldenv
dec
mov
xor
scas
lret
test
lahf
fisttpl
add
jp
xchg
adc
mov
dec
xor
cli
loope
je
cltd
in
cmp
ret
rcrb
push
je
xor
and
popf
testl
mov
push
mov
fcmovbe
xchg
mov
ja
xor
mov
adc
mov
in
adc
and
jl
mov
addl
shl
adc
insb
inc
pop
scas
sub
clc
mov
cmp
or
outsl
mov
push
rolb
sbb
add
pusha
insb
xorb
push
lret
aas
cli
enter
push
mov
mov
lret
ret
sub
adc
clc
xchg
add
imul
loopne
daa
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
rcrl
imul
pop
bound
out
dec
or
add
mov
jle
sbb
dec
jp
push
mov
lods
sub
dec
mov
or
and
xchg
pop
sbb
insl
push
push
cs
push
inc
dec
mov
shlb
push
orl
jb
stos
sbb
pop
jecxz
negl
insb
pop
outsb
iret
jecxz
dec
cmp
sub
test
aam
add
xchg
shrl
dec
addr16
sbb
sti
jb
and
test
aaa
xchg
scas
imul
fdivrl
pop
push
out
outsb
test
jns
inc
add
jge
xor
loop
repnz
filds
shrl
xchg
sbb
adc
mov
adc
sbb
decl
inc
icebp
mov
pop
repz
adc
sbb
hlt
stos
mov
push
sbbl
scas
out
out
fimull
dec
popl
or
mov
dec
pop
hlt
daa
jmp
add
dec
movsl
bnd
into
stc
test
mov
cmp
push
fldl
mov
scas
nop
jp
mov
aad
pop
int
mov
lret
jb
pop
lods
in
les
mov
push
repz
mov
std
bound
movsl
or
xchg
mov
mov
inc
test
lret
push
jmp
xchg
dec
andl
dec
add
adc
loop
test
adc
sbbl
pop
jl
rcrb
inc
pusha
xor
imul
jle
pop
mov
imul
iret
mov
lret
in
notl
push
mov
and
or
cld
mov
stc
ja
and
and
hlt
dec
push
lret
jo
pop
imull
mov
movsl
xchg
aaa
sub
stos
xchg
out
aad
cs
xlat
int3
pop
fs
add
leave
pop
push
sub
outsl
dec
push
fisubrs
lods
inc
fwait
arpl
mov
icebp
sub
xor
pushf
negb
lock
mov
cmpsl
lret
test
js
dec
clc
data16
xchg
stos
out
xor
popa
mov
fucom
sar
js
mov
lret
pop
int
shlb
and
shrl
dec
mov
xor
cs
pop
insb
mov
jmp
insl
xchg
add
push
mov
jno
ljmp
mov
dec
cmp
std
dec
ret
mov
lret
push
lret
adc
andl
loop
fdivl
rclb
js
test
xchg
ss
jno
adc
fbstp
jnp
filds
push
sbb
dec
and
xchg
and
cmp
and
jl
lods
insl
int3
mov
jbe
cld
mov
add
push
xchg
data16
flds
pop
xchg
mov
test
mov
mov
das
out
ljmp
xor
dec
in
scas
push
push
jecxz
mov
fs
sbb
inc
push
stos
mov
sbb
scas
mov
sub
mov
cmc
cs
xor
adc
sub
push
push
data16
jb
jno
mov
cmp
fnstsw
cmpsl
jo
inc
dec
or
imulb
xor
jae
iret
xchg
scas
movsb
sub
aad
out
mov
mov
adc
aaa
pop
xchg
loop
xlat
pop
xchg
fidivs
int3
jns
jbe
mov
lret
sbbb
enter
xchg
sarb
aaa
xor
push
arpl
fadds
out
or
ss
jg
cmp
pop
and
imul
sbb
and
and
clc
or
jmp
imul
jb
push
bound
pop
jnp
pop
or
xor
popa
mov
sub
cld
dec
inc
gs
xchg
xchg
jg
scas
fistpl
cmpsl
push
jge
pop
push
cmp
add
jo
xor
sahf
pop
pop
add
cmp
cs
sbb
and
icebp
popa
add
nop
jge
jb
cmp
lahf
sub
out
sub
adc
scas
jecxz
or
insb
fisttpl
ja
or
sbb
pop
js
sub
adcl
adc
stos
jl
mov
sti
mov
mov
push
cmpsl
and
pop
jo
out
out
add
data16
and
js
pop
add
jne
lret
push
daa
lahf
adc
push
call
dec
xor
test
insb
ja
leave
pop
mov
push
push
adc
jae
add
or
gs
cltd
cli
test
mov
xor
pushf
movsl
data16
push
imull
in
push
adc
xchg
mov
mov
arpl
in
cmpsl
xor
adc
sub
sub
jecxz
push
adc
pop
repnz
cmpsb
mov
mov
mov
jmp
dec
into
mov
cs
sbb
jbe
mov
ret
in
das
mov
inc
xchg
cmpsb
mov
fsubr
addb
into
scas
push
sbb
int3
aaa
fdivs
out
out
xor
and
enter
sub
call
jbe
push
test
fidivrs
mov
imul
xchg
adc
adc
sub
shl
sar
je
int
push
inc
js
mov
fs
idivl
or
imul
stc
jno
adc
pop
sbb
xchg
sub
jo
mov
push
ret
int
mov
dec
jnp
arpl
pop
iret
push
add
pushf
inc
xchg
lock
jbe
fs
mov
sub
jge
cld
loop
aas
dec
inc
xor
mov
orb
hlt
push
dec
mov
pop
sbb
test
arpl
jecxz
pusha
movsb
or
cwtl
inc
lahf
push
je
sbb
jle
dec
push
test
clc
ficoml
ret
dec
inc
push
cmpsl
pushf
data16
xor
out
jne
pop
inc
dec
rcrl
lea
mov
cmp
xchg
pushf
cmp
loope
dec
jmp
aaa
insl
inc
jno
or
xor
ret
jb
ja
xchg
inc
mov
nop
push
xchg
sub
cmc
jle
imul
mov
ret
pop
pop
and
mov
mov
data16
jb
jnp
lret
pop
inc
shrb
push
sub
inc
lret
lret
clc
in
push
adc
mov
mov
fiaddl
sbb
xor
mov
addr16
movsb
into
mov
jae
sbb
inc
cmp
or
cmp
cmp
cmp
andb
pop
addb
mov
popf
inc
jp
push
inc
push
mov
jbe
clc
dec
nop
es
idiv
xor
mov
push
sbb
pop
lods
xchg
scas
int3
frstor
mov
mov
xor
aad
adc
mov
clc
sub
add
sub
cmp
or
mov
adcl
lcall
add
pop
add
fsubr
das
sbb
xchg
cmp
jecxz
sub
mov
sahf
fisubs
push
and
rcrb
mov
sub
xchg
out
lods
out
push
mov
mov
outsl
mov
xchg
xchg
mov
add
icebp
cmp
jmp
ss
mov
fwait
rolb
pop
movsl
cld
jmp
jo
movsb
jns
stos
xchg
nop
lcall
add
mov
and
adc
mov
dec
xor
pop
pop
aaa
and
jmp
cltd
adc
lret
sub
aas
xlat
outsl
jb
xchg
pop
fstp
mov
cmp
ljmp
inc
popf
data16
jo
lds
je
add
and
jns
inc
lods
adc
or
mov
mov
ja
dec
cmp
mov
mov
sbbb
inc
div
sbb
mov
addr16
mov
pop
mov
add
mov
push
lock
loopne
cmpb
pop
movsl
addr16
mov
jle
mov
hlt
divb
pop
sub
imul
movsl
lcall
adc
push
sbb
ljmp
cmp
cli
addr16
xor
es
stos
mov
jle
inc
sbbb
fs
ss
mov
add
data16
mov
push
xchg
push
cmpsb
insl
out
je
inc
cmp
mov
lds
sbb
ja
dec
fnsetpm(287
adc
fwait
mov
addr16
inc
in
dec
in
sub
inc
lcall
or
nop
jp
aas
incl
pop
sbb
cmpsl
pop
jb
fsts
aam
mov
push
xor
fwait
dec
icebp
inc
mov
lods
xor
lods
lret
addl
mov
shlb
cmpsb
mov
shrb
add
bound
push
fstp
cld
or
sbb
adc
sbb
adc
add
out
and
adc
cmp
xor
call
inc
aaa
and
mov
jp
adcl
xchg
mov
push
repnz
mov
mov
mull
aad
scas
je
jl
push
adc
add
mov
xchg
hlt
insl
xchg
mov
bound
cld
sub
mov
lahf
icebp
loopne
mov
js
mov
push
xchg
std
mov
jge
pop
sub
gs
push
fcompl
mov
lods
lea
push
inc
fbld
lock
fnsave
ret
outsb
lods
jno
xor
cmp
fdivs
shlb
dec
rcll
repz
popa
cli
enter
dec
mov
movsl
cmp
dec
pop
pop
jne
cwtl
jns
lahf
pop
mov
pop
xchg
repnz
insl
mov
outsb
repz
pop
adc
hlt
mov
inc
push
xchg
sbb
cltd
or
daa
popf
cli
sub
iret
aad
sub
loopne
mov
mov
out
add
jg
pop
loop
pop
mov
add
addr16
xor
xchg
popf
pop
sbb
pop
adc
fisubrs
cwtl
sub
sbb
sti
or
pushf
mov
and
xchg
push
and
in
daa
sbb
jge
iret
jmp
sti
loop
xor
lcall
aad
or
rolb
mov
mov
das
push
push
sub
orl
lahf
jmp
shl
jnp
pop
rcll
jecxz
xor
mov
fcomps
xchg
inc
out
leave
mov
inc
dec
movsl
cmp
aad
jne
aad
rolb
add
nop
leave
in
mov
and
push
inc
mov
mov
xorl
addr16
cmpsl
ja
andl
inc
jb
xor
lahf
or
rcrl
or
jl
mov
cli
xchg
dec
inc
push
rcrl
in
xchg
mov
in
xor
and
push
adc
cld
sbb
pop
lods
repnz
scas
or
sub
call
jno
inc
movntps
and
jle
fsubrs
mov
inc
push
inc
nop
xchg
push
add
test
push
loopne
push
lcall
lcall
mov
repnz
sbb
loop
jmp
cli
mov
test
arpl
stc
or
nop
fucomi
adc
pop
push
outsl
push
sub
js
mov
sti
aam
push
ds
jns
sbb
inc
sahf
rorb
out
sbb
es
or
daa
jmp
cltd
pop
cmp
lea
adc
adc
lahf
add
into
mov
mov
add
gs
aam
aam
in
dec
and
dec
adc
cmpsl
xorb
dec
xor
lcall
add
lea
ja
sub
pop
push
shrb
cwtl
push
and
and
cld
ljmp
sbb
in
addr16
add
inc
sbb
ljmp
ja
jne
ja
fidivrs
lret
fldl
mov
lock
pop
and
loope
mov
icebp
dec
icebp
jmp
repnz
movsb
jp
and
cwtl
repnz
pop
and
test
cld
invd
loopne
push
fisttps
push
out
sub
xor
outsb
adc
mov
fstpt
repz
mov
fisubrl
xchg
pop
mov
incb
pop
mov
lods
jle
add
push
loop
lea
test
xchg
mov
inc
test
fstps
data16
xchg
mov
xchg
outsb
adc
ret
and
inc
icebp
test
fldt
int
push
xchg
out
cmp
and
imul
inc
push
mov
push
loop
cmc
dec
xor
xlat
mov
pop
xor
add
movaps
jno
out
jge
pop
rep
mov
out
mov
dec
adc
fadds
bound
push
adc
jge
mov
cmpsl
pushf
lret
int3
fmull
xchg
sub
sub
test
sahf
loop
mov
cli
rolb
popa
std
inc
aam
mov
out
jecxz
mov
iret
adc
adc
es
jo
pusha
add
clc
mov
adc
les
xchg
pop
addr16
stc
std
jno
scas
add
cmpsb
and
and
fwait
outsl
subb
lret
xchg
stc
push
mov
mov
push
cmp
add
mov
lea
loop
js,pt
rcrl
push
orb
mov
xchg
cs
mov
icebp
mov
lret
movsl
add
xor
addr16
xor
pop
sbbb
mov
and
es
je
adc
inc
outsb
mov
ret
fisttpl
push
outsl
data16
xor
mov
sbb
les
mov
xorl
int3
aas
push
push
mov
les
mov
jnp
xchg
cmpl
fstl
test
ret
inc
dec
jge
outsb
ret
jmp
sbb
callw
in
in
and
xlat
les
sub
xor
out
testb
mov
je
sub
push
xchg
dec
inc
test
lea
xchg
je
std
jl
pushf
adc
push
fldpi
xor
iret
mov
sub
test
gs
rorb
xchg
sub
mov
int
subb
cmp
mov
daa
jmp
ficoml
dec
ja
sbb
fstl
xor
fimuls
leave
mov
test
xor
cwtl
and
fwait
dec
cmc
popf
xchg
pop
dec
fnclex
or
mov
and
mov
jae
int
cmc
and
jae
xchg
sub
and
push
sub
xchg
push
cli
adc
scas
cli
pop
cmp
pop
lcall
push
dec
lcall
sbb
in
in
xchg
xchg
or
test
or
sbb
cltd
sti
lret
lds
jb
stc
insb
or
pop
mov
xchg
lea
bound
xchg
fcoms
inc
ss
push
scas
pop
dec
mov
mov
je
inc
pop
mov
in
leave
mov
in
mov
int
out
mov
jmp
mov
cwtl
popa
stc
orb
ret
mov
dec
fiadds
je
add
adc
in
and
jb
sub
ret
loop
mov
pop
rcr
cmp
popf
lret
dec
dec
dec
push
and
xor
lret
adcb
add
push
cmpsb
pop
mov
sbb
mov
jecxz
and
add
jo
loopne
test
pop
outsb
aas
aam
xorb
dec
or
dec
lahf
mov
xchg
insl
rclb
cmp
iret
dec
je
cmp
repnz
adc
imul
orl
dec
popf
pop
stc
add
ret
push
call
imul
clc
cmp
enter
jns
jo
cld
jle
or
mov
js
int
sbb
xchg
xor
cwtl
rcrb
pop
jg
dec
scas
int3
xchg
dec
loope
outsl
cmp
cmp
mov
dec
and
negb
cld
push
sub
push
es
in
mov
or
repz
shlb
movsl
je
ud2
mov
or
ss
jmp
adc
sub
cmp
jo
ret
or
xlat
fnstcw
into
sbb
push
jmp
jno
cmp
int
arpl
and
in
pop
jns
test
icebp
sub
shll
xchg
lods
push
sti
pop
imul
push
insb
mov
jbe
out
fisttpl
xor
fmull
out
call
daa
testb
scas
mov
dec
clc
cmp
pop
push
cld
push
inc
xchg
jmp
xchg
imul
repz
push
fwait
je
testb
repz
xlat
mov
aaa
adc
push
add
mov
ficomps
cmp
pushf
insb
fiadds
mov
jmp
mov
push
sub
and
arpl
cmp
xchg
fldl
inc
jne
fwait
movsb
fmull
and
pop
fwait
mov
mov
push
arpl
dec
mov
hlt
out
ljmp
mov
lret
in
xor
and
jl
insl
je
mov
es
pop
test
fs
jo
hlt
pop
add
dec
pop
jns
repz
out
loopne
mov
pop
push
fdivrs
mov
jo
inc
test
aam
add
mov
push
jge
xchg
or
push
subb
int3
xor
out
jge
fwait
sbb
add
dec
mov
test
fistl
sub
adc
xor
roll
adc
pop
les
test
jo
sbbl
push
jmp
cli
cwtl
out
sub
push
pop
xor
lret
cmc
in
xchg
popf
les
xchg
cmc
les
popf
arpl
in
lds
jns
sahf
cmpsl
ljmp
dec
aam
insl
aaa
dec
icebp
push
loop
jl
je
cmp
fs
or
xchg
cmp
pop
fisubrl
mov
pop
push
add
or
leave
xchg
mov
xchg
push
jecxz
mull
inc
addr16
xlat
imul
jbe
push
inc
aaa
inc
mov
mov
xchg
ret
lahf
out
lods
filds
adc
pop
std
xchg
bound
hlt
shll
dec
jo
movsb
cmp
scas
arpl
test
test
and
movsb
imul
mov
push
popa
fs
dec
in
orl
add
mov
inc
fdiv
insb
push
std
test
pop
and
dec
imul
insb
repnz
rolb
fdivrp
sub
inc
imul
mov
lret
push
mov
and
hlt
loope
xchg
adc
mov
fmull
push
dec
dec
ss
imul
pushf
xchg
xchg
jl
stc
out
mov
std
ret
cs
pop
push
rcll
or
pop
jno,pt
xchg
mov
inc
pop
push
je
ret
ret
sarl
fucomp
and
mov
xchg
sub
mov
inc
or
jbe
shll
orl
jo
popa
mov
xchg
pop
fwait
add
stc
stc
dec
faddl
lods
xchg
shrb
adc
femms
cmc
cs
jmp
iret
pop
mov
sub
nop
ds
icebp
int3
sub
stos
and
lds
inc
addl
dec
cmpsl
js
sti
mov
in
mov
imul
cld
popf
cmpsb
ljmp
ret
xor
aaa
or
add
mov
lds
icebp
dec
out
addr16
js
xor
inc
es
sub
push
xchg
mov
shrb
xchg
fistpll
dec
xor
ret
cmpsl
aaa
data16
loop
outsl
test
adc
jmp
pop
inc
xchg
in
pop
lcall
fisubl
je
cmc
mov
xor
inc
idivb
popa
enter
or
push
es
xor
jbe
push
fwait
es
aad
add
ror
addr16
xchg
xchg
daa
mov
scas
fdivrs
rcll
add
jb
xchg
and
adc
lods
leave
and
cli
sti
cmpsl
or
movsl
cs
jb
cmp
cmp
cmpsb
cmpsb
gs
dec
mov
nop
ljmp
mov
xchg
in
add
addr16
push
lods
aas
test
dec
rcrl
jmp
push
push
ficoms
cmp
outsl
push
mov
xor
ret
sub
scas
inc
push
mov
push
aas
call
loope
lds
sub
int
or
rorl
sub
mov
fwait
push
mov
in
sub
xor
push
or
and
loopne
xchg
popf
or
cli
pop
pusha
add
lock
aad
xor
mov
xor
xchg
sub
cmp
mov
aas
pop
mov
andb
dec
sub
clc
jbe
mov
push
or
mov
sahf
adc
insl
xchg
cmpsl
adc
dec
mov
adc
sahf
aas
roll
fst
push
pop
dec
cmc
and
jns
pusha
pop
mov
adc
mov
push
ficoms
mov
cmp
add
or
int3
aaa
nop
cmpsb
mov
lahf
pop
xchg
mov
adc
int
cmp
fidivl
test
aaa
dec
cmp
stos
mov
in
aas
lds
inc
adc
pop
repnz
xor
mov
pop
mov
xor
pop
in
adc
cmp
ljmp
fnstcw
sbb
mov
insl
test
push
xchg
inc
imulb
nop
mov
mov
fdivl
mov
cmc
xor
push
mov
mov
add
stos
sub
pop
mov
dec
call
push
scas
loope
mov
mov
push
std
imul
mov
push
xchg
mov
push
nop
and
xchg
ss
and
in
add
loope
push
nop
sbb
and
push
cs
sarl
into
das
cmp
sbbl
out
hlt
sub
mov
jo
test
xchg
sbb
mov
stos
out
ljmp
scas
bound
pop
dec
es
add
lcall
sahf
loopne
fidivl
xchg
and
js
add
dec
mov
cli
popa
xchg
push
sarb
mov
adc
out
loope
in
cmp
repnz
mov
inc
cld
into
jb
frstor
mov
jmp
out
mov
mov
lds
loopne
mov
hlt
daa
mov
sbb
jl
sbb
pop
pop
mov
pop
movsb
js
sbb
cmp
mov
xchg
imull
cmp
pop
inc
sub
adcb
clc
add
repz
sahf
jb
in
add
sub
cs
std
cmp
insl
xchg
jb
stos
sub
mov
das
or
push
xor
sbb
xor
mov
in
mov
repz
inc
sub
inc
push
or
jp
stos
or
pop
je
mov
push
insb
mov
cwtl
inc
repz
pop
jo
movsl
leave
add
xor
mov
mov
push
jl
nop
aaa
out
dec
mov
cmp
loopne
stc
and
out
xor
fmulp
in
adc
jb
jns
in
mov
xchg
xor
sti
inc
inc
add
sarl
dec
in
sbb
mov
orl
or
cmp
imul
jno
jne
scas
and
divb
insb
xchg
movsl
rclb
dec
rcrl
adc
mov
xor
mov
leave
imul
add
adc
add
jae
test
call
pop
mov
jmp
push
push
scas
and
lods
clc
inc
push
enter
jbe
js
ss
pop
insl
popf
inc
bnd
and
dec
sbb
movl
mov
xchg
jb
rcr
xor
andb
sub
pop
lret
jmp
mov
mov
pop
fwait
jecxz
loopne
xchg
sbb
adc
sub
sub
mov
into
and
cwtl
adc
ret
bound
pop
inc
stos
cmp
dec
aaa
fadd
xor
xor
jns
out
mov
or
add
shll
ret
xchg
lahf
mov
lods
popf
dec
xorb
dec
iret
cld
mov
out
sub
push
jbe
mov
and
inc
or
jge
xchg
adc
inc
ljmp
pushf
xlat
and
or
xor
jne
pop
push
faddp
lcall
lcall
rolb
shrb
pop
push
idivl
and
dec
sbb
xchg
cmp
ss
popf
and
ja
cmp
or
outsb
sub
lret
mov
in
cmpb
orl
push
mov
adc
clc
xchg
xchg
pop
aaa
pop
sbb
sbb
lcall
push
shll
fildll
push
jmp
shrb
cmp
dec
add
xor
imul
mov
xchg
das
add
sbb
pop
push
sahf
insb
pop
xor
mov
fldt
js
sub
test
arpl
mov
cmp
ss
aas
mov
loop
inc
mov
out
sub
mov
mov
mov
scas
xchg
data16
mov
push
sbb
stos
pop
cltd
pushf
jp
imul
sbb
cld
inc
lods
push
repz
inc
arpl
sbb
pushf
add
cmc
sbb
std
mov
test
loopne
enter
inc
orb
cltd
sbb
inc
inc
jg
into
jle
inc
or
shll
outsl
andb
adc
mov
hlt
lcall
sbb
rcrb
pop
or
cltd
xor
lcall
jns
in
push
in
insl
jl
mov
fsubl
and
ljmp
std
insb
inc
cmp
pop
ror
imul
hlt
dec
inc
in
imul
push
pusha
je
cmp
push
push
mov
test
mov
dec
popa
xchg
aaa
aas
imul
add
imul
lods
cmc
stos
ret
popa
jb
mov
and
aam
sub
push
std
xor
mov
mov
sbb
mov
lods
sbb
push
mov
sar
cmp
push
lret
jp
fwait
add
imul
add
pop
push
lret
push
aam
stos
mov
push
mov
loopne
outsb
inc
adc
je
popl
lods
and
xor
sbb
popf
loop
jae
jecxz
les
mov
or
shll
inc
and
int3
xchg
add
mov
xchg
and
cmp
imul
xchg
int3
cmp
and
or
xor
xchg
adc
cmp
xchg
fcoms
sbb
jno
aas
mov
mov
push
pop
add
inc
xor
dec
sub
pusha
mov
in
sbb
and
and
add
or
inc
mov
or
pop
aas
arpl
xchg
cltd
and
and
jno
sbb
icebp
pop
loop
mov
flds
fadds
arpl
sbb
loop
push
popl
sbb
mov
mov
adcl
stos
adc
push
jge
mov
pop
ja
xor
stc
clc
subl
arpl
sub
movsb
sbb
push
ljmp
lret
cmp
sti
lret
cmc
enter
pop
mov
cmp
lods
clc
outsb
iret
pop
fistps
jge
fimuls
xor
mov
scas
mov
lea
xchg
dec
mov
loope
sbb
in
jb
mov
pop
loop
mov
addr16
jmp
cmp
mov
or
in
jb
adc
js
cmp
xchg
in
outsl
fwait
lods
push
and
sbb
or
or
xor
ficomps
sti
dec
inc
mov
inc
xchg
inc
xor
xor
mov
loope
pop
jnp
add
mov
lea
inc
xor
pop
adcl
sbb
and
lret
ljmp
stc
mov
pop
jno
xor
mov
jge
xor
cmpsl
mov
push
fisubrs
dec
sbb
jno
and
cmc
test
mov
mov
les
push
stc
xor
xor
xor
out
stc
call
jmp
inc
sahf
pop
loopne
scas
fldenv
icebp
mov
mov
lret
inc
sub
push
mov
sbb
out
dec
inc
fdivs
mov
std
ret
lods
movsl
mov
add
insl
bound
scas
mov
lea
pop
sbb
gs
jno
popa
cmp
pop
fwait
sbbl
into
fstp
mov
xorl
sti
mov
je
push
push
dec
mov
adc
popa
ss
push
inc
mov
or
popf
push
std
or
fwait
popa
arpl
movsb
cmp
inc
clc
sub
ret
ret
jle
cwtl
lds
pop
sbb
pop
adc
scas
bound
ret
sti
mov
icebp
dec
mov
fcomip
inc
shll
inc
jo
in
stos
je
sub
jl
test
or
in
pop
cwtl
push
jo
add
das
sbb
jl
mov
sahf
int3
pop
inc
push
in
scas
mov
push
cwtl
dec
dec
mov
or
mov
fmull
sbb
je
add
icebp
pushf
add
fsubl
push
mov
push
xlat
mul
cmp
mov
dec
xor
out
lds
dec
xor
push
push
mov
push
jmp
roll
mov
jo
cwtl
cmp
sarb
push
pop
and
sbb
mov
imul
mov
psubusb
hlt
out
cmp
xchg
jp
sbb
cmc
cmc
and
mov
cmp
lcall
sbb
pop
incb
lds
adc
popf
stc
aaa
rcrl
stc
movsb
leave
popa
shlb
mov
ja
add
sti
and
dec
xor
push
test
stos
pushl
xor
mov
add
cltd
cmp
ret
dec
and
ret
add
inc
sbb
aas
adc
fwait
lds
inc
out
adc
sarb
loopne
out
cmpl
adc
andl
bnd
add
es
popf
push
xorl
push
popf
sbb
cmp
nopl
es
and
icebp
cmp
inc
pop
mov
fcmovnbe
xchg
data16
loopne
ret
push
xchg
fidivrs
mov
icebp
pop
ja
push
mov
shr
mov
cmp
mov
es
xchg
test
inc
imul
out
arpl
scas
or
xor
outsb
xchg
sub
xchg
cwtl
sti
ljmp
sbb
add
mov
and
mov
jle
fwait
push
lret
jo
sub
jge
sub
add
fldl
add
adc
xor
push
push
aad
arpl
iret
mov
pop
dec
lcall
or
pop
push
enter
lods
jne
push
push
lds
jl
sub
or
rol
inc
sbb
inc
sbb
ja
add
xor
loope
jp
push
mov
mov
es
mov
inc
push
xor
push
dec
push
push
aam
sti
test
xchg
jl
push
or
pop
adc
or
and
push
movsl
mov
pop
xchg
push
and
scas
inc
outsb
fildll
es
movsb
loope
repz
jb
mov
negb
insl
mov
xchg
fdivrs
inc
or
dec
popf
fsubrl
jo
dec
out
cltd
rol
xchg
scas
test
push
or
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
adc
popa
bound
bound
ficoms
ss
pusha
adc
xchg
cmp
mov
out
xchg
hlt
scas
xchg
or
aam
repz
add
mov
mov
scas
cltd
scas
in
repz
jmp
xchg
dec
fistpll
inc
ret
popf
movsb
cmp
cmc
cmp
andb
cmpsl
or
arpl
fidivl
js
pop
dec
and
jnp
int
sbb
incl
rcrl
push
outsl
mov
mull
notb
push
sub
movsl
xor
dec
out
cmpsl
jecxz
shl
lret
adc
or
add
fistps
cmp
ret
adc
push
push
stos
inc
cmp
push
hlt
roll
sub
xchg
sub
cli
cmpsl
push
push
mov
fdivl
mov
adc
or
outsl
push
stc
xor
stos
mov
fdivrl
sub
pop
push
push
add
sub
push
adc
clc
sub
daa
xor
cmp
push
insb
xor
dec
lahf
into
or
subl
sbb
inc
adc
jb
inc
or
mov
jne
addb
mov
sub
push
mov
shlb
inc
mov
mov
mov
les
cmp
addr16
mov
push
imul
xor
jecxz
mov
insb
push
sbb
test
jnp
mov
js
xor
test
subl
jae
cmp
ret
mov
push
mov
nop
loop
or
int3
mov
enter
add
hlt
mov
pop
adc
stos
adc
cmp
jae
xchg
jmp
out
fwait
jmp
pop
add
push
dec
xchg
mov
and
cmc
lret
push
aaa
adc
sbb
lahf
xor
bt
pushf
jge
mov
xor
inc
repz
dec
cmp
push
jae
lock
ljmp
adc
stc
int
les
imul
imul
sbb
xor
mov
fidivrl
or
pusha
mov
lods
jp
ss
std
test
sbb
arpl
out
pop
jmp
add
es
dec
sub
pop
insb
adc
addb
aam
outsl
jae
mov
mov
cmp
jge
ficoms
pusha
xchg
sub
daa
cmp
and
xchg
out
cs
jg
and
cwtl
callw
cmp
mov
push
gs
mov
insb
lock
fs
shr
sbb
xchg
fcoml
bnd
and
jecxz
mov
ret
inc
and
inc
lock
outsb
out
push
lods
test
maxps
jne
jge
xor
adc
dec
mov
je
cvttps2pi
orb
aam
and
adc
sub
jg
mov
iret
push
mov
data16
movsl
ficoms
mov
cmp
cli
popa
or
outsb
cli
cmp
jle
xchg
xor
out
into
push
inc
imul
sahf
adc
int
jne
pop
inc
enter
lea
and
rolb
lds
sahf
pop
push
push
mov
js
xchg
xchg
pusha
mov
add
jns
xchg
ljmp
push
ror
mov
aas
and
insl
dec
mov
push
sbb
mov
inc
movsb
add
ljmp
xor
int3
pusha
mov
fstps
jmp
nop
mov
and
mov
stc
cld
loope
call
xor
cmp
adc
sbb
in
push
jl
add
sbb
or
ja
je
push
sbb
push
adc
scas
mov
and
fsubr
icebp
div
movsl
sbb
pop
or
icebp
xchg
rol
dec
popf
add
inc
mov
inc
lcall
xor
sti
inc
mov
cmp
jle
or
cld
add
rcl
pusha
repz
lcall
jb
mov
mov
mov
mov
dec
arpl
xchg
xchg
lods
and
fnstcw
pop
fwait
lret
cmp
or
insb
lea
negb
popa
lea
dec
xchg
xor
aad
scas
xchg
add
push
mov
xchg
mov
push
idivb
aas
not
daa
in
xlat
loop
fwait
mov
xor
fldl
xchg
mov
stos
mov
push
mov
cmc
loope
lds
loopne,pn
mov
inc
in
mull
imul
ror
lods
or
testl
xor
icebp
fwait
jbe
cmpsb
stc
mov
sarb
out
mov
add
jl
push
jns
fdivs
fildll
loopne
sbb
arpl
fildl
xchg
mov
mov
jb
push
lds
pop
mov
push
mov
jp
loopne
mov
inc
jl
push
addr16
cmc
outsb
mov
and
scas
mov
pop
mov
iret
mov
shrb
inc
out
adc
fnstcw
filds
out
lret
pushl
lock
xor
pop
and
add
xor
clc
ss
mov
push
mov
xchg
mov
or
outsb
lret
aad
cmpsb
into
or
repnz
pop
lock
insl
dec
call
pop
sbb
repz
xchg
iret
shrl
sbbl
gs
jno
sbb
hlt
mov
mov
sub
jns
jle
jle
pusha
sarb
push
cld
sarb
out
inc
out
mov
sbb
loopne
push
test
leave
adc
ret
shr
inc
js
sub
stc
pusha
je
enter
mov
test
lea
shll
stc
cmp
sub
cmp
cmpsb
icebp
out
aad
push
xchg
inc
push
fwait
mov
push
out
stc
mov
out
lods
sbb
stc
and
in
aaa
mov
mov
add
push
dec
shrb
movsl
xor
outsb
inc
dec
lods
test
loope
push
test
je
das
imul
jmp
andl
pop
push
out
dec
enter
push
sub
mov
hlt
sbb
pop
les
push
cmp
jo
xchg
bound
cmp
cmp
add
mov
xor
mov
sahf
nop
push
adc
sub
sbb
lods
push
xchg
cwtl
insb
xor
test
shlb
popf
inc
lret
daa
arpl
or
xor
mov
mov
mov
dec
sbb
popf
jle
push
add
jg
mov
add
push
and
and
daa
repnz
daa
mov
jne
out
popa
repnz
push
mov
js
pop
aam
ss
mov
lea
push
cmp
mov
jecxz
popa
in
stos
test
mov
mov
jno
add
jb
xchg
pop
test
mov
nop
popf
punpckhdq
push
jnp
loopne
popf
dec
mov
push
rcrl
or
das
dec
xchg
ds
fnstenv
push
adcl
sbb
adc
xchg
daa
into
popf
push
fs
inc
mov
xor
sub
into
sbb
ret
sub
sbb
sti
push
xor
sbb
cmpsb
cld
sub
or
mov
daa
sahf
out
cltd
mov
cmp
and
xor
mov
in
add
pusha
mulb
dec
adc
subb
jae
xorl
mov
incb
jmp
or
sbb
loop
inc
inc
or
in
ffreep
testl
std
loop
aaa
dec
sarl
repz
outsl
push
inc
xor
pop
imul
ds
int
or
sub
and
or
or
jbe
repz
popa
outsl
in
iret
loopne
cmp
pushf
jle
push
in
sbb
adc
pop
jns
or
inc
popf
outsb
lock
decb
scas
sbb
stos
mov
add
xor
inc
dec
xor
mov
add
or
sub
xor
and
push
push
sbbb
and
inc
sbbl
fisttpll
xchg
ret
push
and
mov
repz
inc
movsl
fstpl
in
sub
add
jg
jns
lcall
push
pop
xlat
fsubr
cmp
adc
scas
xor
sbb
jge
xor
cwtl
rcll
icebp
imul
and
stc
test
mov
outsb
addr16
roll
mov
pop
test
pop
adc
mov
mov
sarl
xchg
and
inc
je
es
aam
stos
fiaddl
cmp
push
inc
push
adc
mov
adc
xchg
and
push
ds
stos
mov
aas
jno
xchg
inc
int3
or
dec
fldl
aaa
cmpsl
in
pop
adc
and
stos
xor
fdivrl
es
imul
push
adc
lahf
mov
or
mov
int
loope
mov
repnz
imul
in
push
jns
dec
insl
in
cltd
push
cld
mov
mov
jnp
add
mov
test
fcmovb
dec
ret
dec
jae
jmp
in
rorl
dec
inc
jmp
cmp
jecxz
fs
mov
jnp
mov
ret
imul
jg
mov
adc
lock
hlt
lret
stc
addl
stc
repnz
inc
sbb
mov
ds
cmp
add
stos
test
add
mov
ret
add
xor
inc
dec
cmp
push
lea
mov
sub
pop
outsl
ret
pop
scas
jae
dec
out
cs
stos
and
mov
push
scas
rcl
jge
scas
filds
mov
xor
int
scas
jae
mov
shrl
mov
xchg
xor
xchg
xchg
mov
pushf
cltd
ficoms
mov
test
fdivs
push
dec
enter
cld
and
jae
jbe
add
cmp
mov
add
and
cmp
inc
das
push
cmp
clc
jo
jo
ret
xor
ss
frstor
inc
xor
sub
pop
mov
pop
ss
xor
mov
out
iret
push
jp
mov
aad
movsb
add
aaa
mov
test
test
divb
enter
adc
pop
jno
movsb
mov
mov
inc
pusha
sahf
or
jl
push
scas
and
add
pop
ja
mov
divl
xor
push
fcmove
adc
clc
scas
adc
inc
jmp
mov
sub
aam
gs
adc
push
xchg
inc
fiadds
lock
add
leave
out
in
xchg
icebp
jne
aad
je
test
xchg
cmpsb
dec
push
jbe
scas
jae
add
dec
jae
jmp
and
cmp
cmp
xchg
stos
into
sbb
dec
sbb
arpl
imul
xchg
or
adc
btc
jbe
sbb
and
or
adc
mov
xchg
jle
mov
mov
ficompl
popf
jp
scas
shrl
insb
xor
fnstcw
jp
sub
jmp
dec
jo
add
gs
pop
cmp
cli
push
lock
in
push
cmp
nop
xorl
pop
repz
xchg
jno
xchg
fadds
pop
ljmp
ja
negb
push
sub
fldz
sub
call
adc
push
mov
mov
push
mov
or
xor
fimull
lea
fs
lahf
push
ljmp
fistpll
and
arpl
gs
mov
jno
pop
add
sahf
jo
test
mov
jg
xchg
lret
subb
lods
imul
jge,pn
into
dec
xor
repnz
shrb
pop
jnp
push
mov
pop
sub
adc
rcrb
fdivrp
mov
loope
shlb
inc
pop
shr
jge
mov
xchg
inc
adcl
mov
iret
mov
adc
add
mov
push
mov
sub
cld
ss
in
cmp
clc
pusha
xlat
sub
inc
or
jp
out
ds
subl
andb
adc
cmp
jecxz
das
push
sub
or
cmpsb
lds
sub
pop
ja
dec
les
sbb
xor
popa
daa
push
xor
into
cmp
mov
out
mov
and
nop
push
outsb
cmp
and
jge
sub
sbb
jmp
xor
push
fisubl
xchg
pushf
pop
andl
inc
adc
adc
push
aam
aam
xchg
leave
out
ja
out
push
int3
xchg
int3
ss
test
jg
jno
inc
test
cmp
dec
lods
pop
fnstsw
out
add
adc
adc
and
xchg
fdivs
mov
addr16
mov
pop
xchg
icebp
lock
or
aad
stos
fstpt
orl
mov
mov
dec
popl
dec
call
fdivrs
push
pop
xor
popf
pop
dec
push
sub
lods
repz
pop
out
adc
mov
mov
out
shrl
testl
add
imul
orl
cltd
aad
adc
stos
in
mull
test
push
pop
cmpsl
adc
sbb
pop
lods
aas
and
dec
fpatan
loope
xor
push
shrb
je
mov
cmp
dec
rcl
jmp
add
arpl
cmp
test
pop
jmp
fdivrl
push
push
xor
mov
push
and
gs
out
mov
stos
in
cmp
adc
gs
insl
lret
inc
cmp
jg
jae
xchg
outsl
aam
cmc
es
hlt
push
or
sbbb
popa
addr16
cwtl
inc
test
inc
movsl
aam
jmp
pop
mov
mov
pop
jns
dec
pop
push
mov
add
and
jo
test
mov
cmpsl
repnz
jmp
popa
subl
jle
mov
pop
jno
sub
or
testb
jb
addr16
dec
sti
shll
int3
xchg
mov
pop
dec
idiv
xchg
cmp
cmp
push
mov
imul
pop
cld
xor
xor
mov
jge
das
cmp
test
mov
mov
add
adc
xchg
jle
jbe
or
pop
push
cmp
xlat
mov
push
sahf
xor
mov
test
cmp
adc
fs
mov
sub
inc
xchg
push
movsl
jg
push
jge
push
xchg
andb
mov
pop
lock
push
mov
hlt
dec
and
rcrl
jo
testb
cli
sbb
iret
jecxz
adc
inc
mov
jg
hlt
add
aaa
inc
in
mov
and
pop
mov
inc
mov
cld
xchg
and
aad
aad
or
inc
add
xor
scas
enter
mov
pushf
adc
cmpsl
jb
cli
in
mov
adc
jmp
xor
mov
flds
mov
or
push
xchg
popf
or
cmp
popf
push
scas
mov
sub
jne
icebp
rorb
cmp
push
add
pushf
das
mov
xlat
adc
in
xchg
roll
loope
fidivrl
ja
ss
fnstcw
push
ret
adc
insb
mov
or
xor
rcrb
iret
call
mov
scas
adc
or
xchg
xchg
pop
repnz
add
inc
outsb
cmpsb
xorb
sub
inc
and
movsb
in
jbe
and
stos
mov
cmp
divb
imul
xor
adc
clc
popa
das
aam
lret
sbb
lods
icebp
fistps
inc
insl
cmp
push
xchg
cwtl
sbb
fistpl
inc
sbb
cs
inc
pop
fnsave
mov
repz
ds
sahf
sub
xor
cmpsb
and
mov
xorb
in
push
mov
adc
mov
aad
xor
mov
mov
sub
lret
cltd
pop
popl
je
bound
std
sbb
xchg
leave
and
test
movsb
pusha
popa
je
movsl
adc
lret
mov
inc
pop
dec
cltd
mov
mov
stos
adc
aad
jno
sub
jns
add
gs
in
mov
imul
add
and
pop
sub
test
push
xor
cwtl
ja
in
aas
movsb
fxch
or
ret
or
addr16
ret
fcmovne
nop
or
add
stos
xor
data16
inc
and
insb
inc
aaa
and
fisubrs
ficoml
jne
jns
xor
loope
xlat
rcr
dec
jnp
jne
shlb
push
push
dec
or
jno
mov
pusha
aam
pushf
loop
hlt
leave
decb
dec
and
sbb
xor
xchg
dec
cs
add
and
inc
xchg
je
shrl
js
push
test
sub
ret
and
pop
pop
jno
stos
lea
and
cmpsl
cmpsl
mov
jbe
cs
mov
int3
dec
cmc
dec
jb
test
jo
int3
mov
pushl
add
arpl
mov
mov
test
call
ljmp
ret
lods
cmpl
bound
xchg
in
je
mov
or
mov
es
pop
fidivrl
enter
jns
rorl
jle
fnstcw
push
xchg
xchg
sbb
or
aam
mov
jp
rcr
cmp
dec
fbld
pop
pop
int
in
xchg
pop
jne
js
push
nop
inc
dec
cmc
iret
or
and
ret
mov
jp
pop
subb
add
fcomip
push
or
cmp
pop
in
mov
mov
push
adc
pop
adc
leave
push
lcall
push
jnp
leave
push
cmp
test
xchg
mov
pop
idiv
mov
sub
pop
shlb
pop
jmp
fadd
jns
and
cs
xchg
push
leave
in
repnz
mov
ss
popa
in
fstpl
aaa
js,pn
out
cmpsl
test
aaa
xor
les
repz
mov
sub
mov
pop
in
jecxz
pop
push
aam
push
mov
mov
mov
movsl
roll
addl
sbb
cwtl
call
outsl
int3
sbb
int
fwait
xor
test
stos
mov
outsb
push
sbb
mov
pushf
cmp
sbb
or
rcll
or
and
es
dec
push
mov
fcoms
sub
sub
push
xor
mov
push
pop
aad
pop
sub
popf
add
mov
sbb
add
mov
pop
sbb
bound
repnz
add
push
pop
in
mov
push
jo
mov
outsb
pusha
imul
fistpl
cmpb
clc
test
dec
xchg
aam
xchg
mov
fbld
je
sbb
aam
mov
jecxz
jne
inc
xchg
mov
gs
insl
daa
inc
loop
add
sub
xor
jae
sahf
xchg
fmull
mov
sub
aas
pop
adc
sbb
cmp
push
mov
test
mov
pop
adc
pop
push
int3
cmp
and
out
mov
icebp
gs
int3
and
mov
les
arpl
dec
xor
mov
repz
out
mov
mov
adc
nop
push
lea
add
js
jge
push
insb
lcall
adc
or
sbb
clc
mov
add
or
mov
mov
mov
fwait
test
cld
pop
pop
test
lcall
cmpb
push
xchg
xchg
adc
jecxz
jne
sub
fiadds
dec
stc
fsubrs
mov
pushf
pop
sbb
mov
sti
pop
js
ljmp
xor
xchg
nop
aad
cltd
sbb
adc
cld
ja
dec
mov
shll
lahf
and
mov
addr16
fbstp
mov
mov
outsl
xchg
pop
int
daa
or
stos
mov
lods
push
lret
dec
cld
test
xchg
xchg
popf
in
pusha
movsb
fbstp
cli
lods
xor
clc
hlt
or
ror
in
imul
enter
mov
inc
and
or
insb
mov
mov
cs
sbb
shlb
add
stos
mov
insl
and
or
mov
add
ss
mov
test
popa
cmp
pop
mov
mov
call
cwtl
rorl
adc
sub
mov
xor
pop
test
or
ds
clc
lahf
jne
mov
inc
js
icebp
loopne
mov
les
andl
cmpsb
int
imul
lcall
aas
inc
mov
gs
jle
popa
test
and
cwtl
jae
loopne
mov
lods
ja
adc
push
pop
or
add
ret
push
jnp
aas
in
jle
fimull
fdivs
iret
or
xchg
pop
cmp
fwait
pop
mov
imul
dec
jnp
stc
fwait
dec
cs
fisttpll
xlat
andb
leave
pop
out
in
fs
xchg
call
roll
test
dec
scas
mov
andl
std
xor
pop
mov
lahf
push
idivb
jl
and
jo
adc
mov
ficoms
aas
js
pop
pop
xor
dec
rcrb
sbb
sub
insb
inc
pop
cwtl
mov
out
cmpsw
and
pop
xorb
aas
stc
fidivl
lahf
outsl
push
stos
push
push
mov
xchg
jo
mov
push
out
int
jbe
xchg
dec
lea
dec
inc
push
imul
orl
xlat
in
shll
xchg
sar
inc
imul
jmp
aaa
into
add
in
xchg
jmp
jge
pop
inc
fwait
push
xor
sub
decb
sti
xchg
dec
cltd
imulb
add
inc
jg
push
cmp
pushf
adcb
fisttpll
jno
jp
jno
sbb
pop
pushf
ret
add
xchg
cmp
dec
cwtl
adc
sbb
push
sarl
lock
testl
dec
std
adc
inc
cltd
in
loopne
sub
xchg
je
in
adc
xchg
cmp
insl
inc
mov
test
les
mov
movsb
pop
mov
jmp
add
std
mov
notl
bnd
mov
rol
mov
fimull
ror
add
ror
icebp
orb
mov
mov
movsb
mov
adc
ret
mov
insb
sahf
iret
inc
dec
outsl
out
fsts
dec
push
int
push
les
push
jb
dec
daa
pusha
cwtl
push
imul
sbb
jge
mov
out
and
and
loope
pop
bound
mov
test
cmp
loopne
fwait
data16
pop
fnsave
sbb
pop
in
push
icebp
sbb
lods
aaa
and
fnstenv
cmpsl
pop
jp,pn
push
stos
shl
call
shl
movsl
mov
das
arpl
mov
xor
add
push
mov
sub
sar
popl
sub
dec
xchg
mov
loop
fcmovne
push
xchg
mov
pop
add
imul
rcrb
outsl
jle
inc
fdivl
jns
cmpsb
xor
mov
imul
loope
push
gs
int
push
test
cli
mov
movsb
push
mov
xor
pusha
adc
cmpsl
pop
ljmp
sarl
jl
sbb
push
cmp
enter
test
jno
mov
sti
inc
add
xchg
mov
rorb
sbb
mov
loop
cmp
mov
and
sub
sub
and
insb
out
xor
movsb
mov
jmp
dec
xor
aad
dec
or
pop
add
push
out
or
das
sub
fcomip
mov
mov
out
popa
gs
cmpsb
cmp
adc
inc
jo
shll
or
je
add
popf
mov
ss
fimull
fldl
xor
cmpb
andl
bound
sub
das
push
mov
xchg
or
inc
sub
test
ljmp
push
rcr
out
fistpl
mov
xchg
jns
sub
mov
incb
jns
das
mov
outsl
mov
ficoml
subl
pop
cwtl
fdivrs
sub
cmp
push
dec
push
test
inc
fistl
test
jp
jle
imul
and
mov
jmp
lcall
sbb
std
adc
pop
test
bound
and
gs
jnp
inc
and
pop
and
push
pop
enter
push
idivb
dec
or
in
sbb
add
push
popa
int
jb
jb
out
daa
loope
and
pop
mov
mov
ds
sbb
in
mov
jae
js
loop
jecxz
out
int3
inc
fwait
cmp
lcall
gs
pop
fisttps
rcll
sbbb
pop
enter
pop
ret
or
mov
out
mov
dec
sbb
mov
ret
mov
xchg
and
cwtl
outsl
inc
sub
push
sbb
mov
imul
out
jbe
jns
bnd
sub
adc
cmp
aaa
lds
jb
mov
jmp
pop
sti
adc
test
dec
subb
xchg
inc
mov
scas
sbb
lods
scas
jb
or
lcall
idivb
nop
or
adc
and
inc
cld
test
addb
jae
or
and
jno
or
outsl
ficomps
imul
das
pop
les
jp
mov
out
fisttpll
movsb
push
test
sbb
out
jae
mov
or
push
scas
sub
xchg
push
inc
popa
fisttpl
inc
or
popa
mov
push
mov
bound
stos
pop
push
sub
aam
mov
imul
add
xor
jl
es
outsl
fwait
add
fiaddl
inc
adc
dec
stos
dec
inc
popa
stc
outsl
mov
push
cmp
pop
rolb
aam
or
jnp
dec
xor
testl
cltd
ds
jns
out
cmp
rcll
pushf
sub
lret
pop
xchg
and
scas
ret
lcall
mov
inc
pop
pushf
mov
cltd
scas
mov
dec
imul
jne
pop
aaa
test
lock
fistpll
adc
lds
ret
xor
xor
icebp
cwtl
inc
dec
mov
pop
fyl2xp1
scas
xchg
jg
adc
jl
jns
add
int
int
iret
cmp
and
pusha
inc
jl
and
xor
ret
mov
cmc
repnz
mov
jns
outsl
add
imul
lret
daa
int
insl
subb
cmp
out
xlat
std
aas
incl
imul
lock
aam
push
add
mov
xchg
jo
fldcw
mov
ss
or
ljmp
jo
or
nop
sbb
dec
jns
fisttpll
bound
aad
mov
xchg
lods
inc
addr16
leave
dec
ror
mov
jbe
sbbl
test
lock
shll
mov
scas
dec
cmpsl
aad
aad
rcll
cmp
mov
lret
sub
gs
rcrl
add
js
sarb
aaa
dec
mov
mov
idivl
cmp
fwait
call
dec
in
outsb
outsb
mov
cmp
dec
imul
pop
xchg
sbb
in
push
stos
adc
fnstenv
arpl
push
popf
ret
cmp
sbb
sub
lock
imulb
lret
lods
push
fisttps
and
add
lds
push
divb
xchg
dec
push
iret
and
xchg
rolb
mov
mov
xor
sub
mov
inc
bound
in
gs
testl
scas
js
xchg
test
mov
mov
notl
nop
mov
push
es
fadds
rcrb
pop
mov
lret
hlt
push
in
lret
xchg
adc
mov
pop
fwait
bound
in
rorl
adc
cmp
sarl
add
or
dec
cvtps2pd
pop
pop
cmp
mov
cmp
jbe
test
mov
lret
loop
mov
mov
rolb
cmpsl
stc
ffree
mov
xor
add
inc
mov
mov
mov
jge
out
mov
aas
jae
and
jbe
hlt
rolb
test
mov
jmp
lea
lret
inc
shll
popa
mov
stos
pop
mov
push
sub
dec
enter
push
mov
sub
ret
dec
pop
add
hlt
sub
inc
sub
push
dec
xchg
fimull
xor
in
shll
les
inc
sar
in
dec
es
adc
leave
popf
mov
je
ds
cmp
negb
pop
jmp
and
fidivrs
pushf
adc
hlt
decb
dec
fiadds
sbb
jbe
inc
daa
ljmp
pop
out
pop
or
mov
dec
cli
or
pop
dec
out
xchg
xor
push
ljmp
inc
xchg
adc
call
cmc
xchg
and
repnz
clc
inc
dec
or
mov
fidivrl
pop
push
scas
xor
jge
in
mov
adc
arpl
add
sbb
jl
add
jecxz
daa
push
jns
je
mov
fs
sbb
mov
popa
repnz
mov
out
loopnew
call
sub
rcrl
add
jle
pop
fisttpll
andl
sti
pushf
fstps
stos
test
roll
test
wrmsr
xchg
add
lods
jae
sub
cmpsl
mov
inc
mov
sbb
xor
sbb
inc
or
cmpsb
fiadds
jle
fmull
in
clc
fwait
sbb
testb
scas
jp,pn
and
xor
cli
call
fildll
popf
out
push
into
ss
or
jge
or
outsb
or
dec
out
mov
push
mov
xor
mov
ret
push
dec
enter
push
ret
xor
push
fucomip
cmp
sub
jne
lock
pop
xchg
nop
jecxz
stos
inc
pop
out
pop
insb
and
lods
lcall
xor
cmpsb
lcall
jno
insb
nop
imul
lret
jb
insb
dec
mov
xchg
or
mov
popa
pop
pop
ds
fstpl
aaa
rclb
push
lret
sbb
push
popf
ret
dec
xchg
les
xchg
ret
ljmp
xchg
cmp
lret
mov
sbb
push
jb
xor
jbe
or
push
enter
adc
xchg
movsl
shrl
cmp
push
int
cld
nop
sbb
data16
push
ss
scas
loope
xor
mov
addl
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
push
jle
pop
std
and
int
bound
sbb
iret
in
pop
pop
and
dec
sub
cs
cmpsl
fwait
add
sbb
sbb
add
inc
push
sub
sbbb
lahf
loopne
enter
inc
dec
ja
or
out
xchg
mov
jmp
lret
adc
and
sub
inc
adc
aad
cld
inc
mov
jb
adc
cwtl
pusha
or
mov
test
dec
mov
dec
pop
sbb
sub
in
cmp
test
enter
sub
sahf
lea
mov
cmp
inc
xchg
inc
stc
push
ss
data16
lret
ja
push
inc
push
in
stos
xchg
adc
jno
lret
pop
and
mov
shlb
mov
dec
insb
cmp
xor
insb
in
mov
cmp
out
mov
mov
aas
or
mov
sbb
adc
fnstcw
fistps
lahf
mov
sbb
mov
movsl
jno
cltd
dec
fdivr
dec
mov
in
pop
pop
dec
arpl
fcoml
bound
fiaddl
xor
push
mov
shl
rorl
push
fidivrl
add
movsl
jo
mov
stos
mov
mov
inc
dec
cmp
repz
inc
mov
mov
rcrl
mov
in
xor
push
sti
push
pop
adc
fs
xchg
js
inc
xchg
mov
and
jmp
add
add
push
test
xchg
les
rclb
jge
mov
xor
test
jns
loopne
mov
dec
push
mov
sub
loop
or
test
add
ja
jge
adc
iret
js
mov
repnz
cmp
xor
out
cmp
xlat
mov
push
xor
pop
leave
hlt
in
aad
shll
xor
movl
adc
push
sti
hlt
mov
bswap
pop
sarl
in
aad
lods
pushf
out
mov
pop
test
inc
dec
shl
mov
insl
or
mov
xor
frstor
sti
popf
ds
flds
or
push
movsl
sub
aad
xor
adc
ss
outsb
sub
dec
xlat
mov
cmp
xchg
xchg
xchg
je
stos
dec
mov
fucom
and
or
xor
pop
lea
sub
xor
cmp
mov
pop
fldenv
fwait
mov
add
mov
stc
mov
mov
sbb
sbb
mov
pop
out
or
movsb
enter
xchg
lcall
stc
cmp
push
or
loop
inc
and
add
jno
scas
scas
lahf
dec
mov
push
lahf
xchg
dec
mov
roll
cmc
test
mov
sti
dec
fadds
mov
outsb
mov
aaa
orl
xchg
jnp
mov
jmp
fs
rorl
push
pop
cmc
or
outsl
scas
sahf
jp
sub
mov
dec
and
push
jnp
add
aam
jmp
lret
imul
xchg
sbb
aas
outsb
clc
mov
adc
ror
call
sbb
adc
mov
rolb
out
movsl
xchg
mov
push
insb
sbb
fdivs
out
xchg
test
movsb
cmp
dec
jge
es
subb
stos
xchg
add
push
mov
loop
or
sbb
stos
mov
push
mov
or
inc
xchg
imul
mov
outsb
inc
sub
imul
cmp
and
mov
pusha
scas
dec
hlt
jmp
int3
jne
sbb
fisubrl
mov
stc
pop
sub
jge
les
aaa
in
pop
adc
ja
stos
int3
jmp
inc
enter
cmp
mov
daa
push
addb
scas
jle
inc
jge
mov
xchg
dec
in
movsb
or
pop
add
out
jg
adc
pop
mov
mov
jmp
mov
stc
or
das
test
or
arpl
sub
jl
adc
mov
dec
xchg
mov
jnp
or
fnsave
mov
sbb
xor
xor
outsb
xor
jle
out
in
sbb
pop
daa
fldenv
pop
push
sbb
adc
pop
lret
lods
out
add
jp
arpl
data16
inc
dec
adc
mov
sbb
mov
in
xor
and
cmp
sbb
cmpsl
out
shlb
sub
jl
fwait
xor
outsl
jbe
push
dec
lret
xchg
adc
push
fmul
ja
mov
xor
xlat
xchg
jns
clc
int
je
popa
sarl
ret
and
mov
mov
std
lret
pop
stc
jne
jp
add
xchg
jo
mov
outsl
cmp
xchg
xchg
sub
mov
roll
cmc
ds
loop
dec
arpl
and
loopne
scas
xchg
orb
dec
adc
mov
cwtl
pop
aad
fs
int
mov
push
mov
das
mov
ja
lods
dec
and
or
pop
shlb
cmpl
shrl
cmc
adcl
sub
mov
int3
test
movsl
pop
cmp
cwtl
stos
add
mov
fldcw
ss
and
push
fsubs
jg
push
jecxz
pushf
aad
popa
insl
xchg
loop
sbb
push
or
mov
adc
xorb
loope
inc
pavgw
test
inc
cmp
push
mov
push
pop
ss
and
mov
pushf
xchg
lock
aas
and
or
cltd
sub
and
cli
ja
cmp
das
mov
fwait
mov
mov
andb
sti
adc
in
lahf
pop
dec
addb
or
iret
roll
mov
out
sbb
imul
int
nop
cmpsl
adc
out
popa
or
outsl
addr16
inc
adc
jnp
js
shrl
scas
dec
add
ss
sahf
mov
pushf
test
fisttps
mov
push
jg
bound
sub
enter
add
sbb
mov
sbb
xchg
add
int
aad
mov
in
xor
sbb
or
aaa
jbe,pt
inc
mov
mov
xchg
jge
roll
pop
js
rcrb
lods
mov
loopne
imul
fcomp
mov
aad
popa
inc
ret
or
cmp
repz
jne
lcall
daa
jno
aad
mov
mov
xchg
fimuls
cld
ret
insl
add
cmp
add
push
jo
pop
push
les
add
sti
cwtl
cmpsb
lret
out
pop
pop
pop
xchg
in
mov
cmp
xchg
mov
cmp
add
leave
sub
cmp
sub
mov
movsb
jns
aas
pop
scas
lahf
movsl
push
mov
push
adc
push
push
ds
call
sahf
xor
movsl
loopne
jns
aad
cmpsb
aaa
mov
in
sbb
pop
and
cmp
cld
lret
push
std
pop
cwtl
mov
int3
sub
mov
mov
inc
and
add
inc
lea
fcmovbe
pop
lcall
mov
sarl
lret
stc
mov
mov
xchg
add
aad
into
mov
mov
xor
sbb
shlb
push
jg
jb
in
call
sahf
push
jns
jmp
mov
stos
es
mov
push
movsb
movsb
jbe
add
or
mov
fidivl
mov
loopne
dec
jg
mov
inc
jp
mov
pop
cmp
pop
xchg
shlb
ss
jg
fcomi
jge
int3
imul
lock
adc
dec
xchg
mov
mov
jo
inc
lock
inc
lahf
pusha
inc
cmp
imul
mov
movsl
imul
dec
lcall
repz
into
inc
inc
push
pop
pop
into
xor
xor
or
repz
in
cmp
pop
bnd
push
push
outsl
or
or
push
add
subb
ss
in
xor
push
addr16
pushf
adc
pop
imul
inc
pop
hlt
xchg
adc
bound
in
sub
dec
gs
xchg
fucomip
xor
jo
aaa
mov
sub
sbb
out
icebp
ja
popf
jb
es
push
addr16
jp
out
sbb
shrl
adc
insl
jle
pop
addb
rorb
nop
cld
dec
or
ret
test
mov
loope
sbb
shll
dec
outsb
adc
pop
sub
fdivrs
adc
pop
mov
fdivs
inc
push
out
adc
ss
mov
cmpsb
cmp
or
inc
add
xchg
pop
and
movsl
ret
ret
cli
rcr
xor
mov
fimuls
aad
aam
mov
mov
popa
push
cmpl
xchg
fwait
sbb
pushf
in
add
test
dec
push
push
pop
sub
xor
lret
and
push
adc
hlt
idivb
or
hlt
inc
lcall
test
add
add
pop
shll
xchg
fs
jge
or
mov
aas
stos
cmpsl
pop
xchg
xor
push
lods
push
movsl
mov
std
mov
nop
ret
jmp
roll
test
addr16
test
mov
addr16
push
or
stos
loop
mov
lahf
or
cmp
inc
inc
inc
pop
sbb
mov
punpcklbw
sbbb
xor
jmp
sbb
jg
imul
sub
es
mov
inc
rolb
push
or
jnp
jle
in
dec
push
xor
paddb
adc
fsubrs
testl
pusha
cltd
jae
jae
jae
xchg
popa
or
into
test
repnz
test
mulb
cld
or
lods
in
sub
mov
aaa
test
mov
xchg
fucomi
jmp
popa
das
add
adc
mov
pop
cmc
or
ja
add
gs
mov
les
in
and
popf
test
sbb
dec
jle
ret
ret
jno
insb
pushf
clc
fwait
stos
jae
or
push
loope
pop
sahf
cmpb
packuswb
jecxz
lods
sbb
mov
cmpsb
dec
mov
fcmovbe
mov
rol
jo
loope
lret
pop
scas
ficoms
aaa
mov
stos
shl
xchg
adc
clc
shlb
push
mov
push
fsubrs
repnz
outsb
jg
daa
cltd
or
incb
lock
addr16
and
and
mov
jl
mov
mov
daa
dec
jecxz
repz
push
xchg
and
sub
pop
lret
pop
js
push
hlt
std
cli
jno
adc
push
pop
and
imul
and
jno
dec
and
pop
sahf
je
outsl
jno
jbe
pop
lods
mov
adc
mov
add
movsb
mov
sarb
jmp
out
arpl
push
inc
sub
testl
xor
push
jno
jo
mov
les
add
push
stos
mov
out
cmp
push
add
je
leave
sbbl
add
test
mov
inc
call
mov
arpl
punpcklbw
imul
jmp
or
sub
lea
and
cli
and
pop
imul
mov
scas
mov
inc
cwtl
or
xchg
and
in
jno
loope
push
xlat
add
xor
or
push
mov
and
lods
fwait
sub
ret
je
int3
xchg
rcl
out
and
cmp
or
stc
jle
enter
iret
add
mov
stos
mov
repnz
jb
shlb
push
popf
cli
push
adc
or
add
jl
fstl
stos
test
push
aaa
add
push
add
xchg
mov
or
dec
in
fstp
ljmp
mov
push
xor
mov
sbb
ds
fisttpll
nop
test
sub
shlb
inc
pushf
cmp
or
push
clc
out
mov
dec
jo
les
and
lods
nop
and
popf
das
push
lods
dec
xchg
and
iret
push
cmp
scas
inc
push
cmc
cltd
jmp
lock
outsl
pop
mov
dec
sub
xlat
or
mov
mov
in
and
sub
lods
xchg
adc
add
dec
scas
inc
jmp
mov
std
mov
rclb
sub
add
test
mov
and
stc
push
adc
xor
cs
mov
mov
aam
xorb
mov
add
mov
fimull
push
sub
out
sub
js
aaa
xlat
insb
add
pop
add
aaa
jbe
aas
adc
xchg
loop
mov
out
cmp
dec
jne
push
call
and
subl
cmp
sbb
pop
jae
xor
inc
ret
movsb
dec
mov
xor
sub
push
pop
and
mov
je
sbb
mov
loopne
repz
call
cwtl
ja
cltd
into
adc
das
fldl
mov
sub
adc
rcrb
xor
inc
dec
cli
and
nop
aam
pop
sahf
sub
subb
test
cmp
push
es
jae
in
call
dec
adc
jp
xchg
es
mov
xor
inc
int3
xchg
stos
or
shl
js
inc
inc
lcall
xor
ret
fsubrs
dec
cmpsb
cmp
mov
bswap
jle
nop
xchg
dec
dec
div
jo
push
rcrl
push
inc
enter
sbb
mov
adc
icebp
xorb
mov
push
aaa
mov
or
cwtl
mov
sbb
xchg
rol
cs
mov
hlt
mov
sarb
js
adc
pop
sarl
dec
mov
ss
cltd
cltd
fidivrs
mov
lea
push
xchg
sbb
pusha
mov
stc
or
mov
pop
outsb
inc
inc
push
sub
cmpsb
scas
lea
jge
rclb
imul
es
mov
out
mov
daa
ds
mov
sub
in
mov
jg
adc
and
mov
mov
mov
xor
cmpl
aad
mov
push
lret
adc
sub
aas
int3
mov
sbb
add
sub
jb
mov
sbb
in
shll
or
aaa
push
lea
lahf
xchg
and
out
mov
and
mov
int
cmpsl
cmpb
lahf
das
pop
mov
inc
sbb
pushf
pop
call
mov
data16
lcall
test
test
or
out
clc
ss
mov
sbb
sarb
push
jns
jmp
cmc
mov
addr16
ret
mov
dec
mov
test
das
les
add
dec
sub
lods
mov
push
sub
into
push
jmp
in
inc
gs
mov
xor
bound
imul
dec
clc
xor
add
jns
pop
xchg
mov
sbb
mov
insl
mov
movsl
pop
fwait
shlb
imull
cmova
push
bound
push
xchg
test
pop
mov
addr16
roll
mov
out
sbb
hlt
lret
lahf
ljmp
or
js
xor
xchg
jecxz
fisubl
pop
mov
rcrl
add
push
add
ja
push
gs
jne
adc
mov
mov
mov
mov
sub
sub
and
xchg
rclb
scas
mov
xor
xor
pop
xor
inc
enter
mov
aam
pusha
jae
es
sarl
adc
mov
pop
inc
stos
ljmp
sti
mov
sub
push
pop
and
push
cltd
sahf
loopne
iret
jo
addr16
mov
inc
cmp
xor
or
push
popa
data16
roll
pusha
fwait
repz
daa
aam
add
jnp
adc
lods
jle
sub
in
icebp
mov
jnp
insl
js
imul
dec
movsb
xchg
bound
movb
mull
aaa
jns
sbb
imul
dec
mov
mov
scas
and
enter
stc
lahf
mov
sahf
movsb
ja
push
sub
dec
and
jb
push
or
xor
adc
xor
shl
or
into
adc
daa
xchg
push
push
pop
stos
int
and
aam
jnp
loope
dec
negl
xor
dec
rorb
mov
xlat
into
xchg
and
cltd
push
and
std
das
arpl
repz
mov
push
je
ja
in
pop
in
gs
lods
clc
xorb
fxam
xor
stos
lods
mov
push
cmp
jecxz
pop
or
and
xadd
test
fs
mov
add
pop
ds
mov
adc
push
nop
loopne
in
cmp
out
rorb
call
les
push
loope
ret
movsb
cmp
jo
pop
lahf
mov
in
cmp
dec
and
imul
mov
in
jb
pop
popf
jnp
je
inc
loop
jns
xchg
cmc
stc
inc
xlat
inc
enter
fstpl
adc
insb
lret
mov
mov
pop
dec
cmp
mov
jns
aad
sub
mov
push
prefetch
stc
push
mov
test
mov
mov
mov
enter
dec
lcall
adc
jb
insl
push
nop
jge
or
or
shll
rorb
popf
cmp
dec
imul
int
fmuls
mov
mov
inc
push
repnz
data16
add
ja
es
push
jae
out
inc
addr16
xor
outsb
xor
jecxz
xor
lea
pop
lea
adc
mov
roll
or
or
aad
fistps
mov
mov
test
push
xchg
mov
lods
add
test
cmp
loopne
pop
or
ret
popf
or
inc
and
adc
cmp
inc
test
push
jmp
dec
push
js
loopne
fsts
add
popa
aas
pop
data16
or
jne
and
pop
stos
pusha
push
xchg
cmpsl
pop
and
fucomip
sti
or
cmp
or
sbb
sub
jecxz
jle
mov
cmp
iret
lods
sub
push
mov
xor
adc
ds
add
gs
daa
push
sbb
or
push
and
jo
imul
mov
rorl
pop
and
daa
push
sub
mov
sub
test
jp
dec
lcall
jo
repnz
not
adc
movsl
clc
mov
movsb
sub
or
add
cmp
fxch
popa
mov
mov
mov
dec
loope
out
dec
enter
cltd
xchg
cwtl
sahf
add
cld
sahf
cld
pop
cmpl
aas
jge
jle
mov
push
ss
push
inc
sbb
test
jp
test
loop
cltd
fcomps
clc
jns
xchg
or
test
insl
or
inc
push
inc
push
in
icebp
push
sahf
and
repz
in
icebp
outsb
neg
adc
push
out
popf
dec
mov
pop
pushf
hlt
jmp
sub
in
ret
ljmp
add
pushf
mov
add
scas
lret
imul
movsl
ror
into
pavgb
pop
lcall
out
adc
imul
shlb
lods
leave
add
ds
push
or
sbb
pop
roll
test
sarl
jae
cmpsb
inc
mov
add
sbb
and
sub
fcmovb
test
pop
imul
cwtl
push
out
ret
aas
and
push
in
dec
jo
cmp
sbb
fistl
cmp
pop
push
push
lahf
jecxz
pop
aas
cmp
push
add
pop
icebp
and
imul
rclb
mov
xchg
add
mov
cmpsl
pop
push
mov
mov
sub
inc
mov
lret
adc
js
jb
outsl
ds
sahf
adc
cli
insb
and
insb
iret
sbb
and
addr16
cwtl
aas
pop
ds
pop
pop
cmp
movsl
mov
push
mov
cmovno
mov
sbb
test
add
sbb
addr16
scas
icebp
cmp
push
repz
jns
and
or
out
lea
cmp
in
rcl
inc
out
fistl
inc
bound
out
shl
arpl
test
adc
mov
adc
adc
repnz
push
sbb
dec
leave
faddl
cmp
push
and
dec
push
arpl
jns
hlt
repz
fstpt
ficoml
xchg
sbb
imull
or
and
sub
pop
ja
adc
xchg
gs
cld
xchg
mov
cmpsl
pop
pop
rcrl
dec
gs
fidivrs
inc
mov
jmp
mov
insl
jnp
cmc
jo
jecxz
gs
xchg
jo
push
clc
adc
loopne
fmull
jp
lahf
mov
xchg
adc
dec
mov
or
mov
push
scas
addr16
push
cwtl
lds
push
stc
xrelease
jne
push
gs
dec
dec
in
mov
aam
mov
sbb
add
jg
push
push
adc
sub
add
jge
mov
inc
movsl
push
push
push
inc
cmpsl
dec
mov
adc
mov
roll
jb
fdivrs
pop
xor
adc
test
sbb
adc
iret
mov
add
std
mov
xchg
imul
push
pop
cmpsl
xor
bound
dec
pop
cltd
sub
fldenv
arpl
lods
inc
je
negl
lods
movsl
add
sahf
out
insl
outsl
insb
xchg
jmp
enter
std
hlt
inc
pop
inc
sahf
cmp
test
dec
inc
mov
stos
dec
add
inc
pushf
inc
and
test
xchg
scas
xchg
dec
test
hlt
dec
lret
inc
rorb
cmp
push
outsb
imul
pushf
in
mov
or
pop
ret
add
dec
dec
sub
dec
push
xchg
bound
xchg
aam
lcall
xor
and
mov
movups
mov
xlat
xchg
arpl
jns
aad
pop
xchg
sbb
sbb
xor
sub
pop
mov
leave
popl
subl
cmp
test
fcmove
sbb
mov
fcmovnb
jle
sub
es
mov
adc
xor
movsb
cmp
xchg
dec
xchg
inc
lea
aas
pop
dec
mov
cmp
cmp
clc
and
cmp
jmp
sbb
out
add
int
fidivl
stos
scas
ljmp
out
cmpb
ret
dec
xchg
mov
mov
movsl
cli
pushf
push
or
imul
push
add
hlt
mov
push
xor
jecxz
cmpsb
jl
test
mov
test
popf
roll
sub
or
sub
es
out
adc
push
or
test
stos
and
shrb
lea
fs
jns
call
xchg
outsb
cmp
aaa
mov
jo
mov
jle
mov
xor
add
xchg
aaa
and
js
cmp
mov
push
outsl
popa
and
lods
jo
je
mov
out
adc
fsubs
or
mov
dec
and
xor
jns
xor
inc
loopne
mov
movsb
stc
lret
cmp
pop
popa
lahf
pop
jbe
out
cmp
push
fldcw
int
push
jns
mov
aam
in
adc
iret
fs
jae
sahf
es
mov
and
pusha
mov
xchg
pop
add
scas
push
mov
ja
aas
insb
pop
pop
aad
jno
outsl
ficoml
pusha
inc
pop
xor
fcmovnbe
mov
xor
sub
jmp
lcall
jge
test
fisubl
inc
aas
xor
leave
imul
push
sbb
shrl
out
mov
ficoms
inc
test
and
adc
jae
add
mov
call
call
mov
mov
push
cwtl
sbb
loop
aad
or
into
push
loopne
mov
adc
imul
mov
popa
dec
rclb
int
scas
jl
int3
mov
pop
scas
scas
dec
leave
addr16
jnp
inc
pop
das
lods
adc
popa
movsl
pop
test
gs
ss
push
and
xchg
xchg
jb
addr16
pop
adc
push
xchg
add
jecxz
mov
xchg
leave
in
stos
in
lods
movsl
ljmp
popf
cmp
xchg
rclb
mov
outsb
lret
cmpsb
js
pop
popf
mov
push
insl
dec
in
mov
fldcw
sti
adc
jl
ret
mov
in
pop
mov
aas
in
inc
xchg
mov
mov
sbb
data16
push
push
jmp
pop
lahf
push
jbe
insl
sbb
or
popl
inc
sti
mov
push
test
sub
sbb
cmpsb
or
mov
adc
xor
and
mov
xchg
ds
loopne
push
int3
lock
cmp
wbinvd
pop
push
and
adc
dec
mov
xchg
jmp
bound
icebp
test
icebp
or
xorl
jp
mov
lock
popf
addr16
pop
leave
adc
mov
xor
ret
push
mov
sbb
pop
push
js
push
sbb
fadd
jge
xor
out
int3
int
fdivp
mov
sbb
push
inc
cmp
fucomi
les
mov
sbb
jecxz
cmp
cltd
cmp
fs
pop
sbb
idivb
and
mov
dec
std
inc
xor
or
xchg
mov
push
pusha
movsb
test
das
jno
pop
jbe
mov
pusha
aaa
test
push
and
aas
ret
xchg
stos
int3
adc
pushf
shrb
sbb
lahf
and
and
jb
inc
pop
jbe
mov
roll
in
adc
js
xchg
cltd
test
jnp
cmpsl
inc
mov
push
push
insl
and
add
dec
stos
mov
cld
hlt
add
std
leave
xor
push
sbb
add
push
sbb
stos
cwtl
fdivrs
lds
jp
out
es
dec
mov
xor
jecxz
ds
imul
sub
ja
je
pusha
adc
xchg
jns
sbb
mov
arpl
adc
jo
xorl
push
lahf
sti
mov
dec
inc
movsl
xchg
adc
iretw
aam
fsubrl
push
call
xor
jne
add
and
add
outsb
clc
sub
xchg
xchg
dec
dec
mov
mov
mov
lcall
mov
pushf
sar
cmpsb
or
clc
std
movsl
push
push
adc
adc
addr16
and
pop
test
jb
sahf
jne
add
lcall
repz
outsl
adc
pop
xor
in
fs
fildll
imul
sub
inc
jmp
out
sti
mov
lea
inc
pushf
in
jae
mov
jne
or
notb
test
pop
sub
pop
mov
and
dec
rcrl
rcll
lcall
xchg
push
repnz
xlat
mov
or
xchg
push
xchg
mov
sub
int3
mov
push
jmp
lret
xor
and
xchg
lock
add
inc
mov
or
nop
test
cmp
dec
fildl
enter
in
jno
mov
cmp
into
fs
xchg
mov
add
sti
in
jnp
arpl
jne
mov
adc
jbe
dec
outsb
or
ret
ja
shll
fnstcw
and
je
xorl
mov
pushf
mov
js
mov
scas
cmp
stos
jmp
jno
pop
rolb
xchg
xor
insb
lret
sbb
loopne
imul
loop
std
dec
and
push
aas
cmpsl
jcxz
in
movsb
push
loope
jo
mov
sbb
es
loop
push
stc
fldl
mov
xor
loope
xor
test
cmp
cmpsb
add
cmpsb
and
addl
add
insl
pop
sub
insl
mov
stc
leave
fisubs
inc
sub
push
hlt
add
bswap
cmpsl
in
aas
push
inc
cmpb
add
js
sbb
repz
aas
xchg
jae
dec
jns
shrl
enter
lods
jb
cmp
push
adc
or
adc
add
fiadds
inc
or
bound
and
inc
enter
out
push
bound
in
ret
pop
sub
mov
pop
int
cmpb
movsl
mov
gs
popf
mov
aad
mov
outsl
das
sub
popf
pop
pop
sahf
adc
enter
jmp
pop
mov
and
jbe
or
dec
inc
fcom
data16
insl
in
sub
mov
mov
and
rol
inc
mov
xor
stos
and
inc
mov
in
ds
rclb
cmp
aaa
fdivs
mov
ljmp
arpl
jnp
sbb
insl
out
lods
aaa
lahf
dec
push
out
enter
repnz
lahf
movsb
mov
stc
daa
push
xor
sahf
pusha
add
out
ret
out
mov
int
cwtl
rcll
inc
test
or
in
punpckldq
repz
scas
mov
fs
and
leave
jb
xor
shll
jbe
call
or
inc
cmpsb
shrb
iret
mov
bound
clc
test
out
push
hlt
ds
sub
jno
and
dec
pusha
flds
mov
add
and
pusha
push
imul
and
cld
enter
inc
dec
and
movsb
inc
mov
loopne
or
lahf
xor
and
enter
out
mov
incb
cmp
std
xchg
mov
imul
shll
push
sahf
ret
rolb
aam
dec
cwtl
not
xchg
mov
fmull
iret
sbb
mov
jg
xchg
add
fs
add
jp
decl
and
loop
mov
roll
arpl
inc
pop
xchg
pusha
mov
mov
xor
popa
cli
or
and
inc
mov
gs
xorl
mov
outsl
lock
add
jge
fidivl
pop
or
push
cmp
push
jb
imul
pop
xlat
jmp
stos
add
jl
sbb
inc
mov
lods
dec
mov
pop
jl
add
loop
adc
dec
pop
or
addl
mov
dec
or
arpl
mov
cmc
test
ror
cmp
in
xchg
scas
jb
jge
xor
and
aam
jle
xchg
addr16
jb
jae
enter
das
pop
mov
ljmp
popa
fistps
test
cld
std
stc
sub
orl
jae
xor
lret
or
decb
outsl
or
inc
loop
pop
scas
ljmp
jg
mov
fldl
aad
mov
movsl
lahf
sbbl
pop
push
dec
nop
lret
andl
adc
cmp
mov
or
lret
add
psrlw
pop
mov
xchg
sbb
or
mov
adc
jp
aas
lret
push
adc
and
mov
pop
popa
push
fstps
call
sbb
fcmovnb
out
adc
in
cmp
popa
lret
dec
xchg
sub
in
mov
mov
jle
in
pop
push
mov
mov
or
cmp
movsl
xor
xchg
aas
leave
imull
mov
daa
popa
adc
pop
inc
scas
dec
jle
jbe
loopne
mov
aam
or
mov
xchg
ffree
push
call
bound
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
xchg
dec
add
int
bound
and
ljmp
sahf
mov
lret
adc
or
dec
jo
xlat
add
mov
ds
push
jno
mov
mov
in
xor
mov
popa
adc
popf
insl
cmp
pop
add
cmpsl
xchg
scas
outsl
cmc
out
cmp
xor
mov
scas
inc
mov
mov
sbb
jnp
sub
jnp
xchg
jl
xchg
adc
lods
cmp
jecxz
cld
add
stc
add
dec
xchg
repz
rol
push
jne
stos
lods
xor
and
fwait
mov
rcll
iret
test
imul
sbb
iret
jno
sub
xchg
lahf
add
inc
aam
popf
lcall
inc
xchg
mull
mov
in
pushf
sub
xchg
aam
mov
test
aad
jp
jl
xchg
rorl
ss
movsb
sbb
jne
scas
cmp
es
xchg
jmp
adc
pop
sub
mov
fdivr
std
mov
mov
test
fld
and
or
std
cmpb
cmpsl
fwait
adc
mov
lods
mov
mov
mov
mov
dec
lock
scas
inc
imulb
lods
pop
rorl
xorl
aaa
cmp
inc
mov
mov
or
sub
lods
adc
push
dec
test
xor
jne
cmc
pusha
inc
stc
mov
mov
pop
scas
stc
mov
or
pop
add
adc
jae
pop
call
gs
mov
jo
pop
add
or
sbb
inc
push
ds
inc
mov
imul
fcomps
arpl
push
cmp
mov
andb
push
jp
push
fwait
add
pop
xorl
sub
push
enter
adc
jb
in
pop
stos
psllq
sti
mov
inc
lea
mov
call
sarl
sbb
out
mov
jge
in
push
push
push
sub
mulb
addr16
push
pushf
cmp
iret
push
sub
roll
jp
push
outsb
xchg
pop
mov
cmp
fmull
insl
mov
inc
loop
mov
shlb
jbe
stc
jne
mov
lods
aam
out
std
sub
aad
ret
hlt
jb
subb
std
add
and
inc
cmc
filds
popf
sub
daa
cmpsl
push
and
push
xchg
pop
fs
xchg
add
insb
push
in
xor
mov
call
loop
inc
xchg
cmpb
mov
test
mov
cmp
xchg
xchg
popf
sahf
or
add
push
dec
sbb
ret
and
mov
ficompl
pusha
sub
and
cmc
addr16
adc
rcrl
jg
decl
test
pop
sbb
adc
xchg
das
shrl
es
push
pop
xor
and
mov
movsl
add
sbb
fwait
fwait
cmpsb
es
adc
movl
and
data16
xchg
inc
rorb
repnz
aam
and
daa
mov
imul
stos
pop
adc
sub
test
in
and
arpl
adc
jb
or
cmp
sbb
push
mov
adc
push
or
inc
push
mov
adc
out
mov
push
mov
aam
enter
jno
inc
insl
test
add
out
adc
ja
lahf
sbb
or
dec
jecxz
dec
call
notl
xchg
mov
pop
pop
xchg
aas
aad
xchg
lea
lcall
imul
jo
dec
inc
pop
movsb
arpl
lcall
xor
push
adc
repz
mov
cmp
sbb
lods
pop
or
or
xor
aad
mov
inc
ja
insl
scas
xchg
xor
rcrl
pop
cmp
push
mov
scas
push
xchg
pop
int
dec
sbb
mov
jp
popf
out
push
jle
loopne
push
sbb
or
lcall
gs
cvtps2pd
jg
lahf
pop
mov
add
shrb
mov
ret
jno
inc
and
xlat
aaa
out
pusha
cmpsb
negb
xchg
cwtl
push
push
push
jbe
xchg
lcall
sarl
or
lods
push
stos
mov
cmp
sbb
push
es
xchg
inc
jne
in
ljmp
and
and
mov
cmp
or
xchg
out
incb
shlb
daa
push
xchg
ds
mov
jl
add
jbe
pushf
mov
ficoms
rcr
sub
sub
mov
jge
dec
dec
fs
int3
push
fnsave
cmp
pop
push
or
cwtl
lahf
cli
push
mov
add
inc
mov
mov
fnstcw
ffreep
mov
cmpb
xor
and
adc
scas
ss
lock
call
int3
pop
insl
push
mov
mov
inc
pop
sbb
popf
mov
pop
sti
cmpb
push
das
jp
cmc
mov
jb
loopne
xor
imul
pop
negl
in
pop
fisttpl
mov
stos
push
push
mov
lahf
adc
sbb
pop
or
add
push
or
mov
xchg
mov
ja
push
add
mov
and
repz
arpl
test
imul
ret
insl
jae
jae
and
mov
cli
jb
sub
addr16
inc
mov
mov
inc
lea
insb
dec
push
mov
lret
lcall
lds
cmp
pop
pop
xchg
popa
cmpsb
divl
insl
jecxz
test
and
shrl
loope
insl
out
mov
sbb
and
cwtl
movsb
iret
repz
sub
mov
pushf
or
push
lds
clc
mov
out
dec
sub
sub
cmp
push
daa
clc
stos
lock
adc
cmp
inc
lcall
sbb
stc
cmp
movsl
push
stos
dec
out
enter
aad
jns
mov
adc
dec
mov
mov
xchg
pop
int3
push
int3
push
fisubrl
lgs
mov
lcall
enter
and
jbe
push
mov
fmul
fnop
mov
lcall
lods
out
push
cmpps
xor
and
cmp
mov
add
das
and
jae
cmp
pop
rcl
pop
test
push
mov
sub
xor
inc
fists
mov
leave
add
je
dec
cs
inc
cwtl
pusha
xchg
cs
sbb
pop
ds
dec
je
jecxz
jle
movsb
ret
adc
cmpsb
icebp
aad
xor
xor
inc
call
pop
in
mov
cltd
fsubrp
imul
mov
hlt
clc
ret
push
inc
jmp
xchg
mov
mov
std
icebp
loope
jbe
movsb
xor
inc
pop
pop
jo
jo
pop
xchg
out
mov
mov
dec
mov
cmp
in
xor
popa
xor
mov
pusha
lret
rcr
add
out
push
lods
push
dec
hlt
or
pop
lret
mov
xchg
pop
adc
orb
test
mov
mov
pop
sub
and
inc
push
out
adc
scas
push
jmp
addl
inc
add
and
aaa
pusha
pop
adc
jo
fsubrl
push
fcomi
or
popa
cmp
mov
jno
lret
test
jl
repnz
push
dec
sbb
adc
mov
call
rcrb
lret
mov
inc
adc
je
pusha
es
xchg
lret
jbe
pop
pop
dec
push
mov
pop
mov
add
in
dec
cmp
bound
mov
mov
loopne
dec
sbb
repnz
pop
int
adc
iret
js
pop
sahf
scas
aam
in
loop
outsb
xor
mov
fsts
mov
fsubs
fmuls
nop
sub
je
mov
lret
in
jns
arpl
lods
andb
rol
and
sbb
mov
shlb
push
loope
mov
cwtl
xchg
dec
pusha
sbb
mov
lret
add
es
arpl
in
dec
pop
sub
jo
insl
mov
adc
mov
mov
gs
add
loope
mov
push
movl
pop
addr16
imul
mov
mov
push
jl
roll
pusha
in
add
push
sbb
rcrb
es
sbb
movsb
mov
repnz
fimull
aaa
and
lds
in
jmp
adc
shll
pushf
cmp
sahf
or
in
scas
ljmp
inc
xchg
lods
sbb
fsubl
xchg
xorb
imul
iret
or
lret
inc
cmp
pop
gs
lea
xchg
pop
test
and
inc
xor
cmp
in
scas
pop
out
and
int
xor
pop
sbb
jnp
xor
mov
dec
fldl
mov
mov
scas
xlat
add
sbb
or
js
pop
sub
sub
sub
sub
cmp
jne
and
hlt
jnp
mov
sub
in
hlt
jns
pop
out
sti
inc
adc
ds
pop
hlt
xorb
sahf
xchg
and
inc
cmpsb
cwtl
cmp
dec
loopne
and
mov
scas
nop
std
jmp
sbb
movsl
mov
sbb
fs
xchg
jo
xchg
aas
sub
cltd
in
mov
jp
add
outsl
test
loop
lds
rcrb
jecxz
push
jecxz
movsl
xlat
lds
sbb
xchg
adc
adc
mov
cltd
dec
fsubrs
and
cmpl
jmp
call
cmc
sbb
lahf
mov
std
int3
xchg
andl
lea
mov
sbb
dec
lds
pop
cmp
cwtl
jp
cmc
je
imul
pop
ret
inc
cmpsl
lret
mov
ret
dec
in
gs
pop
xor
adc
push
jns
push
push
insl
adc
imul
and
hlt
mov
push
test
jle
and
popa
movsl
add
add
push
push
pop
scas
mov
push
add
hlt
inc
add
push
pop
aaa
pop
into
or
xor
hlt
or
xorb
int
mov
cmpb
xlat
fs
je
stos
xchg
pop
mov
push
xor
ds
mov
cmpsl
xchg
popa
lds
push
push
lret
fxch
ret
adc
sbb
mov
inc
test
jno
adc
js
mov
sarb
mov
push
jg
push
int
movsb
jle
jb
mov
call
mov
and
stos
icebp
xorb
dec
mov
mov
stos
sbb
dec
lret
mov
lret
fsubrs
and
adc
jb
cmp
xor
lods
xor
int
push
adc
xor
dec
mov
xor
fisubrs
nop
or
fs
cld
jmp
sub
lcall
in
sbb
sub
imul
pop
ljmp
dec
in
adc
test
test
pop
mov
pop
pop
outsl
xor
sbb
cmp
sarb
ja
call
int
jnp
mov
push
fcmovnb
insl
lds
roll
ret
mov
adc
lods
or
jg
sbbb
jne
jb
pop
xchg
mov
dec
aaa
cmp
push
xor
imul
dec
in
xchg
mov
addr16
add
mov
sub
dec
lret
insb
cltd
cltd
in
xchg
jge
push
inc
lds
stmxcsr
jno
or
inc
loop
pop
fbstp
jns
push
je
daa
jo
push
push
mov
imul
stos
pop
test
fldt
popa
rol
ljmp
pop
pusha
mov
sbb
xchg
fnop
jno
or
fwait
popa
xchg
pop
xchg
int3
sbb
push
test
fdivrs
stc
iret
pusha
icebp
and
imull
mov
xchg
fldt
mov
cmp
or
hlt
fmuls
dec
stos
sub
int3
inc
push
mov
mov
aaa
mov
cli
mov
lods
mov
mov
sbb
pushf
mov
nop
ret
sbb
dec
lret
xor
ja
inc
dec
push
sbb
add
lods
pop
clts
lea
vpavgw
mov
adc
subb
inc
xor
fwait
repz
push
xor
sarb
sbb
int3
dec
movsl
mov
popa
mov
into
gs
imul
rorb
push
xor
jle
jbe
jl
fcomip
enter
shl
jo
xchg
dec
jge
xor
mov
rorl
cmp
loop
inc
inc
mov
cmc
sub
xor
cmp
xor
or
icebp
cld
andb
sbb
sub
fs
popa
adc
test
xchg
or
jecxz
std
icebp
push
adc
push
jo
push
out
lds
pop
or
sub
sub
xlat
lods
fldl
fimuls
mov
sub
and
sbb
inc
cmp
repz
jne
jns
inc
or
lds
push
sbb
mov
dec
jp
fcmovbe
dec
shr
jmp
fbstp
sbb
sbb
mov
fsubrs
out
cltd
cltd
and
mov
push
cltd
mov
lods
aas
lret
xor
ds
scas
mov
xor
xchg
cs
jp
imul
or
pop
sub
lods
insb
cld
xor
push
sbb
fcomps
inc
roll
xor
dec
dec
add
enter
mov
in
shlb
and
xchg
in
andl
popa
fnstsw
mov
adc
loope
fcoms
pop
daa
call
fdivrp
movsb
hlt
mov
xor
fwait
push
in
jg
or
dec
popf
jb
stos
add
jg
stos
mov
sbb
dec
std
out
adc
adc
call
jno
test
je
cmpsl
int3
jmp
push
cmpsb
repz
std
dec
leave
lock
movsl
aaa
clc
data16
sahf
xchg
iret
sahf
bound
jo
add
sahf
movsb
ss
aam
jns
pop
bound
cmp
mov
ret
push
out
adc
xchg
cmp
fidivs
dec
aaa
dec
jbe
mov
cmpsl
sbb
rep
lods
pop
pop
mov
mov
xor
leave
pop
pusha
fiaddl
cs
push
mov
das
fistpll
loop
popf
inc
mov
dec
dec
mov
mov
cmp
inc
sbb
aad
adc
idiv
int
fdivl
xor
loop
xor
out
lahf
dec
call
cli
push
in
cmp
or
pop
jne
sub
inc
loopne
pop
add
add
xchg
insl
inc
sbb
aaa
and
adc
mov
adcl
loop
lahf
mov
repnz
bndldx
or
or
push
lret
adc
sub
hlt
shrb
sub
xor
aaa
and
mov
mov
enter
insb
push
jne
ret
cli
js
lcall
aad
sarl
movsb
sbb
out
mov
mov
dec
clc
ss
lds
jmp
shl
fdivl
or
stos
pop
or
test
or
imul
push
bound
mov
aaa
leave
push
sarb
push
pushf
jmp
lahf
xchg
cmpsb
or
rorl
cmp
or
xchg
or
cmp
aad
dec
add
xchg
repnz
mov
push
sub
pushf
fcoms
icebp
sub
lret
jb
sbb
or
les
outsb
add
jne
movsl
push
js
sbb
in
js
subb
jmp
notb
mov
push
dec
pop
cmp
mov
xorl
mull
div
or
jmp
or
jmp
and
rol
psubusb
les
cltd
outsb
push
pop
and
sbb
ret
jne
cmpsl
bound
dec
jmp
mov
lods
or
inc
push
faddl
xchg
lods
out
sahf
xchg
hlt
pushf
cmpsb
pop
stos
roll
adc
bound
lds
fdiv
aad
cmp
enter
data16
mov
fbstp
dec
stos
jmp
jecxz
dec
and
inc
mov
mov
addr16
int
pop
nop
pop
jp
cmp
das
sub
scas
repnz
adc
dec
js
cmp
mov
sub
addr16
xchg
lods
aad
jae
lods
fistpl
xor
cmpsb
cmpsl
jge
or
cmp
mov
sub
shll
mov
roll
add
xor
mov
jns
jno
pop
jge
cmp
fdivl
jg
cs
push
xchg
inc
sbb
mov
lahf
cld
xchg
adc
jmp
mov
fadd
mov
sti
lods
mov
inc
adc
push
test
jecxz
negl
or
xor
xchg
and
adc
xor
daa
mov
and
add
out
sub
sbb
arpl
add
sbb
xchg
insb
xorb
dec
popf
add
push
repnz
cwtl
in
dec
mov
mov
xchg
outsl
test
in
add
inc
lcall
pop
aas
gs
inc
ss
cli
or
mov
inc
in
scas
add
xor
arpl
out
xchg
mov
fwait
pop
xchg
cwtl
cld
sbb
push
adc
add
out
push
ret
jl
jmp
shlb
aam
shl
bound
into
mov
pop
xor
nop
or
jmp
push
daa
sbb
cmp
rolb
pop
stc
pop
sub
iret
je
jmp
int3
mov
adc
rcrb
shll
addb
xchg
mov
lcall
or
popf
mov
cld
insl
xor
jmp
and
stos
shl
jp
jp
outsb
movsb
pop
cld
shl
js
pop
adc
xchg
or
or
dec
iret
cwtl
std
add
aas
dec
subb
cmp
xchg
repz
push
cld
sub
lods
sub
cmpsl
xchg
leave
lock
fcmovb
call
mov
hlt
shrb
dec
out
pop
in
js
mov
mov
xchg
push
insl
cmp
cld
xchg
sarb
dec
shll
and
lahf
sub
sarl
je
scas
lahf
stc
pop
sub
in
aaa
test
lret
mov
pop
push
out
dec
fdivl
and
das
js
sub
shlb
inc
push
int3
xor
dec
mov
jb
loope
repz
in
add
scas
jnp
nop
stos
mov
dec
popw
ret
ljmp
xchg
mov
xchg
xchg
popf
cs
fnclex
pop
and
inc
lcall
repnz
pop
movsb
jbe
jb
xchg
jecxz
lock
sbbb
cmp
jno
in
sbb
orb
fidivrl
loopne
xchg
mov
xchg
cld
add
jbe
push
mov
fwait
sti
js
insl
fidivs
fdivl
ljmp
sar
mov
adc
and
clc
xchg
mov
divl
das
mov
sub
pop
movsb
push
cmpsl
pop
addr16
sbb
jb
cmc
scas
out
ret
loope
imul
lahf
jb
bound
test
mov
out
inc
inc
mov
xor
stos
loop
pop
cwtl
sub
adc
imul
push
ja
fstl
pop
fs
cmp
pushf
repnz
jmp
repz
out
in
add
cmp
xchg
cmpsl
push
aad
add
testb
xchg
pop
movsl
dec
js
mov
lds
xor
fisubs
rol
cmpsb
inc
jns
leave
inc
and
arpl
lahf
mov
inc
xchg
mov
adcb
cmp
or
and
mov
popf
cmpsb
sbb
out
push
mov
mov
aaa
icebp
das
inc
dec
mov
subb
daa
scas
and
mov
lock
pushf
stc
mov
mov
jl
pusha
jns
mov
sub
or
cmp
jae
jns
jb
js
stos
das
ljmp
cwtl
pop
fldl
inc
in
lret
jmp
cmp
icebp
mov
out
ljmp
int3
xchg
test
aam
adc
andb
cmc
pop
cmpsb
or
out
inc
test
pop
sbb
add
or
fisubl
leave
sbb
and
cmp
fcoms
shrb
mov
cld
jmp
pop
sbb
rol
mov
xchg
int
out
inc
jnp
popa
or
jbe
ja
xor
mov
sub
movsb
roll
mov
pop
or
aaa
pop
mov
mov
lds
pop
mov
dec
xchg
push
push
aam
mov
add
xchg
mov
gs
popa
testl
pop
dec
xlat
fstpl
push
stc
into
jnp
pop
or
nop
inc
insb
jg
data16
hlt
xor
out
jne
adc
cmp
jne
push
es
inc
scas
add
jbe
xor
in
push
daa
movsb
mov
adc
and
and
cltd
push
jno
jge
addl
lcall
fidivrl
fcmovnu
leave
mov
rcrb
adc
fnsave
lock
pushf
and
les
lcall
mov
test
icebp
pminsw
dec
pop
jl
shl
int
lods
aam
and
fisubrl
jge
imul
push
inc
or
shlb
in
push
dec
jmp
lods
popf
adcb
dec
cmp
mov
loopne
lahf
lock
je
bound
pop
cli
add
sarl
dec
lcall
lods
iret
mov
inc
inc
cmp
xchg
and
arpl
jp
push
rol
cmc
jle
push
jae
add
adc
inc
std
aam
mov
push
std
add
dec
cmp
ficoms
pusha
pop
or
push
repz
jae
insl
rorb
add
cmp
inc
pop
mov
mov
xor
scas
test
adc
insl
cmp
outsl
out
dec
inc
adc
jp
repz
popa
es
jmp
or
lahf
xchg
das
mov
jno
push
adc
mov
xor
movb
outsl
outsl
inc
ds
push
cmc
cwtl
or
mov
cmpsb
mov
xchg
xor
lea
cwtl
jl
mov
sub
pop
loope
pop
enter
cltd
lret
ds
mov
cmpsl
pop
xchg
lcall
les
mov
push
and
ffree
dec
lret
dec
int3
push
cmp
ljmp
rorl
and
adc
aam
xor
xchg
fcoml
add
sti
sbb
jmp
mov
cmpsb
cld
jmp
sbb
in
cmp
dec
pop
xchg
shlb
faddl
push
enter
rorb
pop
mov
inc
push
sub
lret
stos
imul
push
dec
mov
jns
int3
shrb
test
in
mov
mov
push
jg
mov
add
pop
push
push
mov
stos
jg
es
and
dec
cmp
iret
add
pop
mov
pop
push
jmp
xor
test
sbb
jnp
jbe
mov
fsubrp
jg
andl
sbb
xchg
aaa
push
push
jle
pop
add
out
out
repnz
shll
sahf
ret
push
mov
jge
xchg
add
lods
xor
pop
lock
adc
mov
hlt
xadd
xchg
sbbl
out
scas
fld
push
insb
mov
sarb
insb
and
aam
int
sahf
or
add
lods
sahf
test
pop
mov
jge
mov
shrb
bound
mov
jmp
ss
movsl
scas
pop
das
psubq
rcll
sub
out
lods
fnstcw
loope
aad
sub
negb
inc
mov
sbb
xor
and
mov
cmp
cmp
out
gs
rcrb
sti
dec
cmp
cmp
mov
sahf
ss
in
fidivrl
sahf
push
jae
fstpt
jmp
dec
lods
fldz
in
push
mov
shlb
daa
popf
pop
jle
mov
sbb
subb
push
push
push
scas
cli
std
jb
push
mov
lods
das
fcomip
dec
cmpsl
jb
push
ss
push
sbb
or
loope
pop
mov
imul
mov
push
add
sub
ficomps
cwtl
mov
jne
pop
rcrl
repnz
lret
or
mov
mov
out
scas
icebp
repz
aad
adc
dec
es
repnz
lret
js
fbld
mov
in
cld
mov
pop
mov
dec
ret
das
mov
sub
lret
push
outsb
and
add
xor
pop
in
jmp
dec
out
in
or
insb
mov
inc
mov
mov
xor
or
adc
cmp
sub
sbb
push
movsb
loope
mov
add
cmpsl
sub
scas
mov
es
sub
scas
and
mov
mov
lahf
pop
in
pop
cmp
cmpl
jo
mulb
je
mov
pop
mov
mov
or
fstpt
popf
ja
pop
pop
popf
push
inc
fadd
jns
push
jbe
test
gs
mov
leave
and
cld
into
in
jno
call
fstpt
dec
roll
movsb
test
xchg
shlb
adc
or
pop
push
pop
push
int
xor
jp
shr
test
fs
pushf
std
sub
iret
push
cld
pop
fs
shl
sbb
inc
loopne
pop
ljmp
lret
jb
lods
hlt
enter
popa
movsl
dec
shrl
and
pop
cmc
add
ret
pop
and
jl
jno
iret
add
fwait
sbb
xchg
sub
data16
rcrl
cwtl
testl
loopne
test
cmp
jb
dec
nop
sbb
xor
mov
pop
sub
jb
mov
lret
push
mov
jecxz
insb
cltd
loopne
add
clc
jbe
pop
insl
sbb
mov
les
cmp
loope
rolb
xchg
cltd
push
xor
fwait
xor
and
and
in
in
cwtl
xlat
sti
xlat
jp
sub
aas
adc
xor
pop
sahf
add
enter
mov
aaa
push
int3
adc
sub
lcall
adc
jp
incb
mov
xor
xchg
xchg
in
and
mov
push
int
outsb
in
dec
xor
push
inc
ds
pop
add
fisttpll
loope
jle
sahf
mov
imul
xchg
or
xor
or
scas
mov
insl
js
ja
inc
movsl
aaa
or
mov
pop
nop
daa
test
lods
mov
xor
inc
int3
outsb
fisubl
mov
ds
mov
lret
inc
cld
mov
sahf
outsl
inc
sbb
je
add
pop
aad
les
push
sahf
iret
jno
fistpll
mov
test
dec
arpl
xchg
clc
insb
push
sbb
jno
fldt
xorb
mov
jl
push
sub
ja
push
jno
ss
enter
cwtl
dec
sbb
lods
je
inc
add
andl
pop
jo
mov
cld
dec
repz
push
sbb
es
std
dec
mov
scas
pop
in
imul
mov
xchg
cld
dec
scas
jb
clc
adc
push
inc
xor
xchg
add
mov
call
jl
icebp
sarb
mov
mov
mov
add
cmp
xchg
jmp
testb
or
pushf
adcb
dec
pop
sbb
leave
mov
dec
mov
push
or
fsubrl
jmp
cmp
pop
jnp
icebp
cmpb
sub
fldenv
adc
adc
shll
in
arpl
outsl
mov
es
jne
mov
movsb
cmpsl
stos
ror
jo
test
loop
and
out
testb
mov
fwait
mov
bound
dec
xor
loop
stc
cmp
int
int3
into
ss
pop
inc
in
int3
inc
jle
stc
mov
dec
push
inc
adc
mov
andb
in
xchg
inc
adc
not
es
dec
sub
sbb
lret
rorb
int3
sub
aam
nop
cmpl
in
ret
mov
int3
sub
dec
pop
inc
int
cli
mov
mov
popf
popf
std
mov
movsb
and
iret
xchg
cmp
lret
subb
fnsave
data16
push
xor
divb
loop
sahf
sub
iret
and
push
ss
int3
rolb
cmp
adc
orl
cmp
dec
pushf
sub
jmp
push
out
xchg
push
rolb
sub
xchg
push
jns
bound
xchg
ljmp
pop
mov
and
and
sbb
push
ret
icebp
fbld
mov
sub
xor
xor
and
insb
popa
sti
aaa
add
jg
fs
enter
mov
cmpsb
sbb
xchg
adc
scas
push
inc
jl
jle
dec
jns
jmp
repnz
lock
mov
xor
pop
xor
fldl
clc
sub
enter
leave
aaa
dec
mov
push
inc
sub
add
or
mov
call
push
stc
dec
aaa
sbb
iret
jnp
imul
shll
aaa
pop
sub
outsl
mov
xchg
fucomp
add
xchg
inc
dec
sub
es
cmp
test
dec
sbb
jecxz
and
test
dec
push
dec
inc
jecxz
inc
sub
cmpsl
mov
sti
pop
mov
mov
mov
flds
xchg
cwtl
je
jb
lea
mov
push
pop
or
dec
fwait
pop
lock
mov
cmp
ficoms
jmp
sbb
addr16
dec
mov
repnz
mov
call
ljmp
cmp
jp
cmpsb
mov
lds
cmp
jecxz
shlb
inc
cld
pop
lcall
mov
lea
stos
mov
icebp
dec
fs
test
out
xor
adc
and
add
cwtl
or
fisttpll
nop
js
cmp
loopne
fadds
jne
cwtd
imul
rcl
wrmsr
jp
push
xor
pop
mov
jb
inc
push
push
popa
popf
jg
xchg
jo
jmp
pop
idiv
imulb
sti
jo
mov
dec
loop
aam
mov
daa
pop
cmp
mov
sti
lcall
cmp
xor
inc
jo
inc
and
adc
add
adc
hlt
mov
or
lods
cmp
pop
mov
pop
xor
daa
cmp
or
mov
or
inc
aam
vphadddq
xor
inc
dec
gs
mov
pop
jnp
jmp
movsl
test
xchg
shr
ja
outsl
mov
xor
push
ret
stc
std
or
cmpsb
into
pop
fst
cltd
pushf
mov
pusha
adc
pop
orb
mov
test
mov
iret
mov
add
xor
nop
jbe
fs
popa
mov
rorb
insl
imul
dec
shll
jo
push
jecxz
sub
mov
jge
jbe
test
adc
xchg
movsl
enter
mov
pop
dec
or
sti
adc
jl
loop
loope
xor
cmp
cmp
ret
xchg
cmpsl
mov
and
rorl
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
inc
pusha
scas
test
add
mov
mov
or
lea
mov
sarb
enter
outsb
lcall
outsl
sahf
mul
das
mov
hlt
stos
push
in
xlat
cmp
mov
jecxz
cld
push
outsb
pop
lock
fisubrs
and
dec
pop
push
pusha
sub
shll
cld
and
fildl
cmp
xchg
addb
pop
cmp
dec
out
mov
xchg
nop
push
and
and
repz
xchg
rorb
cmp
sbb
mov
add
mov
fsubs
lret
mov
shrl
adc
cmp
out
pop
xchg
push
pop
xchg
add
cld
sarb
dec
popa
outsb
jbe
xchg
cmp
pop
notb
and
jb
lds
es
sub
cmpsl
iret
cmpsl
bound
push
call
es
add
xor
shrb
fbstp
pop
out
mov
jns
dec
arpl
sbb
iret
lcall
shl
mov
push
and
cmc
shll
dec
enter
push
jmp
mov
xor
xchg
test
cltd
outsl
in
adc
lea
bound
pop
sub
sub
addb
xchg
add
inc
cmpsb
inc
xchg
mov
push
xchg
xchg
xor
adc
mov
or
aas
jmp
int3
data16
adc
cmpsb
adc
cld
pop
daa
mov
or
push
lret
pop
dec
leave
sub
xchg
mov
and
rol
popf
mov
pop
sbb
andb
fisubrl
mov
xchg
in
mov
repnz
popf
dec
mov
repnz
mov
out
je
or
ja
lods
or
adc
imull
hlt
and
or
inc
ds
aas
cli
clc
xor
hlt
adc
scas
scas
in
sbb
add
and
aam
aam
ljmp
je
aam
fiadds
stos
add
add
cmp
shll
into
fs
dec
dec
lahf
jnp
mov
cmp
lds
sub
dec
fwait
mov
inc
xchg
and
je
mov
xchg
pushf
mov
cmp
cmpsb
lods
negl
movsb
pop
popa
bound
hlt
sahf
shrb
insb
xchg
arpl
mov
cvtpi2ps
cli
push
ljmp
sbb
sub
cmp
dec
dec
jge
js
nop
xlat
sbb
mov
xor
add
mov
jnp
repnz
add
xchg
cmpb
ret
push
clc
cmp
cld
mov
loopne
lret
ljmp
inc
and
rcr
lret
dec
jle
sti
cmpsl
mov
dec
mov
pop
mov
add
jl
sub
push
cmovbe
sar
int3
sub
jno
jo
inc
mov
sti
push
jg
jno
and
cmp
or
and
jo
push
dec
adc
in
rcll
fwait
lret
fs
xchg
inc
adcl
sbb
sti
jg
xor
fnstcw
or
cmp
adc
fcomps
enter
ret
addr16
push
fsts
jns
std
adc
sbb
push
pop
rcrl
and
imull
mov
add
out
lods
cmp
stc
stc
int
or
mov
add
xor
out
test
pop
mov
testb
xor
mov
jb
mov
pushf
jb
sbb
sbb
in
xchg
fsubrl
dec
cs
inc
jno
mov
dec
and
sub
xor
test
cmpsl
imul
addr16
jmp
jle
outsb
test
clc
push
mov
out
push
mov
test
icebp
popf
mov
mov
mov
mov
dec
and
jmp
gs
push
jnp
loope
pop
xor
xor
jb
in
xor
xor
rcrb
add
add
inc
gs
aaa
push
xor
mov
add
stos
add
add
push
mov
sbb
mov
cmp
mov
or
xor
repz
cmp
dec
dec
mov
dec
or
mov
jne
dec
xchg
testb
popf
pop
xchg
lds
mov
test
xchg
ret
add
sti
push
mov
xor
mov
jb
and
fxtract
incb
pop
loopne
add
outsl
mov
xor
mov
lods
xchg
xchg
jle
sbb
push
imul
cli
mov
enter
jecxz
sub
xchg
imul
cmc
jbe
cli
call
dec
inc
sub
das
jle
jg
imul
jb
dec
xor
stos
add
stos
add
add
orb
icebp
inc
test
mov
daa
mov
adc
fnstsw
repz
dec
stos
int3
popf
pop
dec
lods
sub
pmaxub
xchg
or
mov
sbb
cli
mov
lret
gs
movsb
sbb
rcrl
push
insl
push
adc
mov
stc
sbb
cwtl
popa
or
pusha
sub
pushf
adcb
cmc
mov
adc
cwtl
movsb
stos
sbb
add
sbb
lock
add
pop
cmc
jmp
push
mov
loope
sbb
pop
push
mov
leave
push
mov
faddl
addr16
and
mov
mov
jne
ret
add
lret
push
jbe
insl
push
mov
ss
stos
idivl
xchg
pushf
inc
jbe
ret
push
fadds
add
sbb
jne
xor
jp
stos
imul
add
std
test
dec
mov
imulb
rcrl
into
arpl
ret
adc
ds
in
mov
ret
out
pusha
sub
ret
cld
and
adc
pop
jmp
pavgw
in
mov
fldenv
lret
out
scas
pop
ljmp
movsl
pop
sti
jge
shll
mov
add
xchg
or
and
mov
sub
add
or
ret
lods
sub
mov
sbb
stos
add
add
adc
nop
push
mov
add
dec
jecxz
inc
movsb
pop
xchg
dec
iret
test
jge
fwait
int3
inc
mov
push
mov
sbb
sbbl
lods
or
jne
mov
outsb
add
leave
orb
arpl
mov
adc
ss
push
adc
je
pop
adc
dec
aas
popa
inc
cld
lds
arpl
lret
cmpsb
adc
loope
cmp
stc
xor
push
scas
rorl
ja
push
or
popf
into
icebp
pop
out
pop
jle
cmp
fld
add
ror
outsl
clc
rol
cmpsl
and
stos
add
add
add
add
pop
out
adc
orl
jb
mov
or
es
adc
daa
mov
neg
mov
cltd
adc
cmp
xlat
or
je
lock
leave
add
outsl
aaa
imul
int
or
sub
jnp
dec
les
pmaddwd
add
dec
jbe
jecxz
or
movsl
repnz
or
push
repnz
lret
aaa
loopne
lret
sti
daa
out
jns
dec
cwtl
out
push
ljmp
add
lock
out
repz
mov
ret
in
xor
inc
ret
lods
add
adc
add
jbe
mov
loop
add
xchg
in
and
add
add
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
inc
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
rolb
pop
aam
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
aad
add
or
subl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
push
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
dec
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
out
bound
add
mov
pop
mov
sarl
mov
andb
into
cmpsb
jno
mov
push
add
sbb
ret
cmp
js
push
stc
lret
cwtl
jno
xchg
push
xlat
lahf
pop
inc
sti
xor
pop
mov
out
loope
jbe
testl
sbb
mov
popf
shl
sub
leave
dec
sbb
pop
jmp
imul
xor
lods
clc
mov
xchg
jnp
push
daa
push
jnp
cli
inc
xor
cmp
out
movsl
cltd
or
loope
movsb
iret
es
test
sbb
add
mov
push
mov
xlat
push
pusha
lcall
stos
add
add
xchg
fiadds
repnz
mov
daa
jno
loopne
in
inc
cmp
cmp
out
inc
inc
cltd
loop
pop
ljmp
and
add
inc
cwtl
inc
cmpsl
mov
mov
push
jmp
seto
sahf
mov
jne
imul
mov
push
xchg
ret
inc
enter
cmp
pop
decb
in
loope
add
mov
adc
ljmp
pop
nop
jl
xchg
iret
imul
nop
andl
lret
stc
out
dec
add
push
mov
je
je
pop
stos
add
stos
pushl
xchg
push
mov
add
add
outsb
and
adc
inc
adc
dec
out
leave
sub
rorb
fsubr
xchg
daa
bound
pop
std
jp
enter
sbb
pushf
lahf
xchg
scas
add
ds
sbb
push
stos
pop
mov
sbb
or
dec
mov
cmp
pop
and
hlt
or
mov
pop
shl
cmp
mov
sbb
mov
enter
add
inc
loopne
jecxz
xor
mov
ret
int
xorl
jns
dec
mov
mov
arpl
cmp
xchg
push
inc
jg
sbb
adc
loopne
out
add
add
add
cmp
in
fimuls
test
push
cwtl
add
stos
add
add
fwait
dec
test
mov
cld
jbe
cmp
push
inc
movsl
mov
add
mov
lcall
sub
inc
push
ret
nop
pop
mov
or
and
fdivr
idiv
ficoml
dec
xchg
jl
push
sub
push
imul
rcrl
and
sbb
pop
add
add
out
add
repz
enter
sub
and
dec
gs
push
add
out
dec
ss
cmpsl
jno
pop
scas
inc
shrl
in
mov
pop
add
xchg
std
cmp
call
mov
cmovp
sti
fidivl
mov
add
mov
sbb
std
negb
sub
negb
pop
push
cltd
add
stos
add
add
inc
cmp
bound
outsl
inc
loope
pop
pushf
sub
bound
lods
dec
adc
aas
lcall
fimuls
jnp
bound
jg
cli
push
addb
mov
and
orl
fistps
scas
mov
push
dec
clc
ret
jo
mov
enter
or
loopne
test
mov
movsb
ror
sahf
sub
inc
cs
sti
pop
shll
push
stos
pop
add
in
adc
iret
dec
adc
movsl
push
jae
xor
subl
mov
aad
sbb
ret
cmpsb
outsb
fistpl
xchg
xor
mov
add
add
xor
jb
inc
mov
js
cltd
add
stos
add
add
pop
dec
cmp
negb
adc
inc
jp
inc
mov
fisttpll
pop
aad
push
sub
mov
das
push
por
jmp
int3
sub
sub
pusha
cld
pop
nop
or
sub
and
in
sbb
ja
jbe
sub
mov
mov
jne
subb
sub
dec
stc
pop
lret
cs
xor
je
or
mov
adc
lock
div
mov
iret
test
rorb
cmp
dec
jl
mov
out
into
out
fdivr
dec
xchg
dec
in
fwait
scas
fdiv
pop
sub
loop
lcall
mov
pushf
clc
sub
cmc
push
notb
jmp
leave
rolb
imul
stc
mov
call
sbb
push
bound
loopne
cmp
xlat
cmpsl
dec
aas
pop
push
arpl
in
cmpsl
test
fists
mov
repnz
andb
leave
js
sbb
and
dec
mov
inc
out
sub
inc
out
rclb
xchg
jmp
mov
push
or
cmp
adcl
leave
testl
pop
flds
jo
add
mov
aam
xor
and
setnp
add
fsin
fucomi
cmc
sbb
xor
test
cmp
test
leave
sbb
jecxz
shl
ljmp
cmpl
inc
cld
test
in
mov
lds
inc
aam
adc
or
mov
adc
outsl
xor
daa
cli
mov
push
insl
out
sbb
out
mov
call
jmp
xchg
fcmovnb
mov
xchg
mov
icebp
dec
rcll
sbb
xlat
divl
mov
loop
pop
leave
cld
shl
inc
lods
aas
int3
push
or
les
in
push
bound
add
push
add
mov
out
xchg
inc
mov
add
add
jnp
xor
in
mov
cmpsl
fidivs
lcall
fucom
sahf
scas
and
test
xor
cmpsb
and
sti
stos
imul
fsubl
test
mov
mov
jns
push
or
push
inc
sub
jmp
add
inc
and
jo
divl
and
fwait
pushf
dec
push
jbe
mov
imul
cmp
xorb
pop
jbe
gs
loopne
icebp
call
adc
sbb
pop
jns
push
test
pop
mov
in
loop
add
mov
jmp
fimull
outsb
xor
add
stos
add
add
xchg
xchg
fcmovne
mov
fmulp
aam
sbb
pusha
mov
lahf
outsb
data16
mov
hlt
mov
jne
cmpsb
xor
mov
jp
mov
pop
cld
sub
push
jnp
leave
test
mov
and
add
inc
outsb
mov
test
nop
daa
mov
fwait
subl
test
lods
insl
cmc
cld
popf
xor
and
in
daa
mov
daa
in
fcomps
ret
mov
dec
lods
in
dec
clc
insb
pop
mov
xchg
es
leave
enter
cmp
pop
xor
add
pop
iret
pop
aad
ss
dec
loopne
or
add
add
sub
enter
sbb
fildll
xlat
jmp
mov
addl
ss
adc
xorb
mov
aas
jle
aad
movsb
dec
sub
aas
jle
fwait
or
cs
sbb
in
or
cli
out
ret
jp
out
add
hlt
sbb
sub
sub
int3
fsubrl
mov
cld
popf
sbb
idivb
xor
pop
cmpsl
adc
orb
mov
sbb
data16
lds
mov
mov
push
cmp
jnp
sbb
pop
es
lcall
add
fwait
test
jg
add
popf
add
stos
add
add
pop
push
pop
test
out
nop
lods
loope
and
out
cmpsb
inc
ds
jp
pop
mov
inc
sbb
pop
cmp
lods
fwait
push
mov
int
scas
jae
or
jmp
ret
int
ret
stos
lret
mov
iret
push
into
dec
out
lahf
aad
arpl
and
hlt
or
mov
ret
pop
cmpsb
and
inc
leave
or
xor
xchg
shr
jo
xchg
out
mov
jae
and
mov
xchg
push
mov
test
aaa
and
jns
inc
stos
pop
push
dec
mov
mov
ret
xchg
mov
lret
pusha
mov
mov
add
lock
jle
repz
movsb
enter
add
push
int
mov
and
mov
inc
je
pop
push
push
rclb
mov
push
ja
sti
add
sub
in
out
xor
add
mov
repnz
cmpsl
xor
testb
sub
inc
inc
das
daa
test
das
push
ds
mov
mov
arpl
pop
gs
mov
dec
jo
push
push
loope
das
ficoms
jl
inc
add
scas
push
lds
loopne
xchg
xor
xchg
inc
mov
out
cmp
or
jecxz
loope
js
xor
in
adc
cmc
adc
adc
mov
lds
adc
add
leave
pop
ret
sub
lods
addl
push
inc
je
mov
loope
and
push
jecxz
xchg
lds
cli
lods
add
iret
add
xchg
mov
add
cmpsl
mov
test
arpl
or
cmpsl
inc
fnstenv
mov
stos
shlb
pop
popf
shl
clc
xor
push
push
lea
jge
sahf
es
out
add
inc
pop
rol
cmpsb
popa
test
pop
repnz
in
mov
shlb
in
jnp
mov
and
pop
lods
imul
add
add
mov
lock
mov
rolb
imul
add
sub
cmpsb
xchg
pusha
movsl
sbb
cmpl
out
sub
xchg
pop
outsb
mov
xor
adc
push
sarb
negl
jmp
add
cmp
jmp
cwtl
cwtl
cld
lcall
adcb
cmp
stos
out
out
add
rorl
ljmp
jp
or
movsb
test
jmp
mov
rolb
in
fists
push
or
pop
in
and
ss
sub
jmp
ficoms
addr16
or
fwait
dec
jno
push
cmpl
aad
movsb
pop
cmpsl
ljmp
aam
sub
aam
push
lock
cmc
das
sbb
xchg
iret
ret
pop
addr16
stos
add
add
mov
cli
mov
dec
mov
mov
jne
push
fs
pop
xor
jge
sahf
sbb
lahf
out
cmp
dec
mov
jp
outsl
mov
mov
iret
loope
and
adc
popf
xor
pop
pop
repnz
inc
ficoml
sub
xor
mov
jb
lock
divl
dec
xor
jl
jecxz
pushf
jnp
mov
push
and
mov
pop
pop
lcall
lahf
push
sbb
xor
int3
pusha
mov
stos
mov
xor
fucom
leave
mov
imul
mov
xor
mov
add
sub
fildll
jp
mov
add
nop
int3
xor
out
jmp
je
je
insb
ja
je
cmpsl
mov
out
mov
pop
inc
add
aam
jbe
icebp
das
ljmp
iret
in
mov
or
pop
aad
sub
adc
add
xchg
ds
push
pop
aad
cmp
sub
jmp
les
pop
mov
pop
lahf
jb
mov
adc
and
ja
mov
mov
xor
push
mov
push
cld
pop
mov
in
shlb
shrd
lahf
dec
mov
out
hlt
js
push
fcoms
inc
data16
lret
imul
add
add
fs
testl
mov
add
jmp
mov
aam
dec
sub
loop
sub
andw
push
xor
mov
arpl
aam
fcoms
xorb
xchg
add
sub
jnp
inc
pop
int
scas
lret
and
pop
rcl
sarl
xchg
pop
mov
dec
sbbl
or
jl
jle
fs
loop
xchg
std
pop
cmpsb
ss
pop
vmaxpd
pop
aam
lock
lcall
cld
fcompl
pop
fisubl
and
icebp
fwait
ljmp
add
add
add
add
push
imul
inc
in
clc
push
add
add
rcrb
sub
ljmp
shr
shlb
dec
sbb
pushf
pop
xchg
lret
inc
fldt
jb
jl
stos
xchg
push
lcall
mov
jp
xlat
test
ficompl
pop
outsl
mov
add
andl
sbb
jne
out
imul
movsb
ss
cmp
mov
pop
pop
imulb
outsl
mov
jne
ja
fmuls
push
shrb
cmp
aas
scas
in
sti
dec
data16
sbb
dec
pushf
mov
fwait
xor
pop
faddp
jno
sub
and
out
insl
pop
add
add
jne
jg
clc
cs
push
pop
mov
add
sbb
addr16
mov
popa
sbb
mov
push
stos
pusha
jns
insl
out
cmpsl
lahf
or
nop
cmpsl
mov
repz
movsl
sub
int
mov
jae
repz
add
test
sub
insb
xchg
push
fs
xlat
fstl
dec
lret
out
lock
ss
xchg
xlat
cmp
out
das
sbb
mov
xor
mov
mov
adc
std
xor
cmpsb
ljmp
sbb
lods
leave
xchg
enter
gs
ret
xchg
jle
inc
pop
mov
out
addl
or
dec
mov
je
lcall
add
stos
add
add
mov
cwtl
mov
mov
and
test
mov
stc
pushf
out
add
movsl
fmull
aad
cmpsl
in
fildl
bound
das
les
insl
push
ss
xor
outsb
scas
in
jns
gs
jp
jmp
lret
push
ja
xlat
fisttpll
pop
sub
inc
xchg
roll
ljmp
ror
sti
ja
adc
mov
lods
inc
push
movsb
fdivp
aaa
mov
mov
dec
in
push
cmp
cmp
xchg
jns
sbbb
test
cmc
pop
in
push
ljmp
add
push
mov
mov
xchg
adc
in
adc
mov
add
or
subl
xor
das
adc
sub
faddl
les
call
cvtps2pd
jl
scas
push
pop
subb
icebp
in
leave
shlb
sbb
in
sahf
aam
dec
shlb
jnp
ret
or
push
mov
ds
adc
sahf
movsb
ss
imul
xchg
clc
fnstcw
sub
pusha
mov
push
aaa
lods
mov
jge
push
xor
mov
vmulpd
sub
add
stos
add
dec
xchg
cmpsb
arpl
add
push
into
add
fisttps
push
add
ljmp
add
add
and
cmp
push
lea
sbb
lret
mov
leave
pop
push
mov
mov
icebp
loope
push
scas
add
rorl
pop
mov
lret
xchg
pop
pop
cmp
sub
xchg
repnz
jge
sub
nop
or
loopne
jecxz
mov
rol
cmp
mov
xor
jle
sub
push
jb
sahf
or
fimull
fsubs
test
pop
sarb
aam
ret
addr16
add
fdivrl
or
cmp
mov
repnz
xor
das
adc
imul
dec
inc
xchg
add
jle
out
sbb
mov
lea
add
mov
sbb
les
sbb
cli
push
test
xor
outsl
mov
and
dec
or
add
mov
fsubs
cli
xchg
pop
sbbb
aam
test
and
hlt
fisubs
jns
loopne
into
lods
xchg
jno
ljmp
jecxz
or
nop
hlt
sbb
cltd
adc
mov
pop
fisubrl
mov
popf
vmovups
int
aaa
inc
popa
lcall
jge
mov
jmp
push
lock
xchg
mov
es
mov
iret
dec
or
mov
add
and
cmp
aas
cmp
mov
add
stos
add
add
dec
and
fidivl
shlb
pop
sub
mov
in
inc
stos
sbb
and
jno
jge
jne
xchg
dec
xchg
push
aad
inc
inc
lods
dec
dec
stos
negl
divl
add
mov
mov
xor
mov
jp
lods
sbb
mov
adc
pop
inc
leave
es
lahf
test
sbb
adc
push
xchg
cli
add
pop
cmc
jb
cmpsb
cli
pop
jg
push
fnstsw
lret
xor
mov
in
sub
popf
pop
fs
xor
cwtl
outsl
push
aam
je
test
xlat
pop
imul
xor
lcall
xchg
nop
ffree
popf
aam
push
lock
pop
mov
add
pushf
mov
xor
pop
in
movsb
pop
cmp
popf
lahf
pop
les
mov
push
in
mov
inc
cmp
mov
push
int3
sbb
jecxz
lods
aam
leave
test
cmp
cmp
mov
shl
adc
mov
cmp
imul
adc
inc
xor
test
push
or
mov
repnz
push
inc
cmpl
mov
jne
adc
mov
sub
iret
jnp
mov
daa
js
and
mov
jge
dec
lret
add
add
add
mov
jbe
hlt
mov
and
cmpsb
xor
add
stos
add
add
lock
inc
mov
mov
cmp
jae
add
pushf
sbb
imul
add
xchg
fdiv
xor
mov
insl
out
push
cltd
shll
mov
mov
push
xor
ret
mov
insb
out
iret
vrsqrtss
pop
lret
jo
insl
cmp
add
xchg
sub
dec
pop
dec
notl
adc
add
inc
incb
test
adc
sahf
jmp
addr16
dec
jmp
adc
and
dec
mov
aas
loopne
fwait
pop
arpl
adc
pop
inc
stos
add
ror
mov
sub
out
call
popl
add
jno
test
pop
mov
mov
xor
aad
adc
sbb
inc
mov
leave
ret
sub
insl
push
jo
ret
sbb
cmp
sbb
gs
fnstenv
jl
sbb
xchg
out
and
lret
pusha
mov
imul
outsl
std
cmc
enter
shll
pop
xchg
mov
jg
xor
sahf
repnz
adc
popa
movsl
xor
popf
add
decl
pop
cmpsb
call
push
mov
mov
lcall
add
in
outsb
and
pop
mov
pop
nop
add
stos
add
add
cmp
popa
lea
mov
mov
lret
rorl
insl
subb
sbb
sahf
push
fbld
jmp
int
sahf
and
outsl
mov
xor
push
pop
lods
shl
or
dec
arpl
imul
imul
fbld
repnz
in
ljmp
int3
push
lret
mov
ror
int
push
leave
add
xchg
jl
push
mov
cmp
popf
xchg
lret
dec
inc
inc
cmpb
sahf
enter
fs
cmpsb
push
unpckhps
add
mov
and
pop
or
add
shufps
pop
ljmp
bnd
jno
ljmp
lcall
or
loopne
lahf
mov
dec
xchg
or
pop
push
aam
mov
stos
dec
mov
add
and
lret
or
sbb
shlb
adc
inc
xor
ljmp
cmpsb
imul
xchg
shlb
ja
xchg
mov
inc
dec
mov
arpl
inc
jmp
in
jp
jge
mov
jle
fs
sub
push
stos
xor
test
mov
scas
push
subb
add
stc
call
into
inc
mov
or
jns
mov
add
stos
add
add
shrl
in
add
mov
jp
mov
call
mov
aas
xchg
and
adc
daa
lock
sarl
insb
dec
mov
sub
sbb
dec
cmpsb
out
std
mov
nop
test
ret
pushf
pusha
sti
mov
mov
movsb
lea
or
jne
sub
scas
mov
loope
push
xor
cmp
out
decb
iret
add
mov
adc
jmp
fldenv
mov
and
jmp
scas
sub
mov
sbb
mov
ss
xchg
into
mov
add
sub
sub
setb
pusha
xchg
add
stos
add
add
into
in
dec
inc
dec
les
test
jge
sub
dec
mov
xchg
icebp
and
push
imul
adc
or
adc
mov
sbbb
shr
lahf
movsl
jno
aas
mov
mov
lcall
popf
inc
ds
sub
sub
dec
jno
add
in
push
push
inc
mov
mov
pop
jne
in
cmp
rol
pop
pop
rcrb
je
dec
xchg
cs
mov
orps
mov
in
jo
ja
jle
or
mov
outsb
loopne
jne
add
int3
sbb
out
loopne
lods
mov
xchg
add
stos
add
add
cwtl
xchg
jb
das
sub
mov
xchg
fistpll
sub
jne
and
adc
arpl
adc
aas
lret
dec
sarb
dec
xor
adc
movsl
cmp
cli
push
add
sahf
pop
rcrl
and
in
xchg
push
or
ds
mov
notb
das
scas
addl
shrb
xor
and
jg
daa
insl
daa
jno
int3
mov
mov
pop
add
insl
gs
push
or
mov
sahf
add
push
in
lods
push
test
fildll
movl
add
out
cmp
sarb
bound
pushf
nop
iret
test
or
pop
jb
popa
push
dec
xor
cmc
xchg
or
and
daa
pusha
push
mov
leave
dec
insl
xor
fldt
sbb
dec
rcrb
mov
mov
sub
cmpsb
ficompl
pop
mov
fimull
mov
and
rcrl
sbb
push
leave
dec
fsubp
jae
scas
sbb
push
push
mov
dec
sti
sub
and
rcl
insl
xlat
sub
push
inc
je
insl
outsl
lock
ja
and
mov
in
mov
cmpsl
cs
stos
fwait
loope
sub
sarb
add
xchg
add
stos
add
add
pop
in
pop
mov
xchg
mov
mov
std
pushf
and
ja
jle
jmp
cmpsl
enter
and
mov
xor
dec
add
and
push
jno
loop
iret
outsb
inc
xor
out
sbb
xor
stos
addb
adc
sub
push
or
stc
loopne
int3
movsb
les
cmp
add
aaa
push
lret
and
or
dec
rclb
push
insb
inc
sub
xchg
mov
mov
outsl
cmpsb
cmp
or
out
jl
enter
add
add
divl
dec
cmp
dec
or
cmp
add
imul
leave
pushf
jl
aam
add
or
rorl
out
add
xchg
js
ficompl
fisttps
xlat
inc
mov
divl
push
fcoml
and
inc
xor
mov
out
adc
jae
mov
sbb
sub
mov
test
jne
int
shlb
mov
inc
roll
sbb
outsb
movsbl
xor
loop
cmp
aaa
lret
inc
rcrl
add
push
xchg
sub
ds
iret
mov
shl
aas
mov
dec
mov
sbb
xor
inc
add
arpl
jge
mov
daa
cmp
add
fimull
out
jle
lods
mov
xchg
mov
dec
cld
pushf
and
cmp
je
jb
lods
out
sub
and
outsl
pushf
push
arpl
imul
ret
ret
sub
ret
jnp
mov
sbb
sub
xchg
out
xor
mov
stos
ss
sub
loop
pop
daa
xor
pop
xor
ss
mov
push
enter
movsb
std
xchg
pop
push
jmp
add
mov
imul
sbb
push
xor
js
or
incb
adc
orb
daa
ss
xor
and
jb
adc
add
mov
movsl
adc
sub
das
test
xchg
jecxz
stos
fcomp
movl
cmp
push
and
out
sti
sub
mov
and
mov
jecxz
sbb
dec
xor
mov
mov
data16
sbb
mov
xor
adc
les
cmpsl
cli
pop
sub
shr
pop
out
aad
add
pop
shlb
jne
ljmp
jmp
cwtl
lds
cli
mov
mov
sbb
sub
pop
adc
push
add
das
movsb
iret
outsl
out
popf
pop
push
pop
jle
lds
shlb
inc
mov
add
add
out
mul
aaa
cmc
xchg
lcall
mov
add
add
mov
push
adc
xchg
jg
sar
cmovg
loopne
shrb
pop
cmpsb
outsl
aas
mov
repz
sbb
push
aam
mov
fistl
in
adc
cmp
pop
inc
out
cmc
lock
xor
push
inc
sub
xchg
test
sub
inc
xchg
inc
dec
xchg
sub
sbb
adc
pop
pop
sar
pop
add
rcrl
inc
xor
jbe
pop
imul
repz
push
mov
push
imul
loop
mov
inc
and
mov
andl
add
add
aad
out
fucomip
ss
cmp
pusha
jp
movsb
add
stos
add
add
pop
mov
adc
jmp
dec
jb
push
enter
out
pushf
lret
loope
inc
lods
mov
bound
jns
mov
or
jmp
test
addr16
inc
rol
cmpsb
xchg
mov
pop
ds
movb
shll
lcall
xchg
fcomps
xchg
lds
jp
cli
das
cld
fisubl
call
push
shr
and
lea
fstl
loopne
arpl
sahf
imul
xchg
xchg
bound
xor
push
pop
inc
xchg
push
mov
jle
ljmp
mov
add
in
cld
fisubrl
sbb
mov
add
xor
xor
xchg
leave
sub
loope
cwtl
mov
push
ret
xchg
shrl
mov
das
xchg
adc
push
jae
mov
mov
shlb
mov
test
mov
insl
adc
and
test
in
pop
push
lods
cmp
loopne
test
aam
xor
sbb
ficoms
add
xchg
in
fxch
in
inc
dec
cmpsb
inc
mov
fisttps
les
out
xchg
icebp
test
jmp
test
inc
out
decl
adc
push
jb
fwait
or
dec
or
inc
push
scas
add
push
les
in
lahf
sti
ja
rcll
pop
mov
add
add
les
xchg
sbb
xlat
rcll
aam
cmpsl
sub
push
out
pandn
das
int3
in
mov
lret
or
push
dec
mov
int
imul
ficompl
xchg
cmp
fs
outsb
sbb
adc
shll
cli
es
ficoml
cmp
push
lret
mov
mov
xorl
pop
xor
stos
xor
jge
setb
leave
imul
pop
cltd
inc
adc
push
sbb
add
push
adc
and
cmp
fnstcw
testb
and
inc
cmp
aas
enter
add
xchg
cmpl
push
loopne
lcall
add
stos
add
add
jne
xor
sub
fistl
adc
rcrl
cwtl
es
inc
sbbb
push
dec
mov
into
and
sbb
xchg
ja
out
cltd
repz
scas
cmp
sub
add
call
mov
decb
int3
in
xor
jg
test
adc
or
out
adc
xor
mov
jge
cmp
clc
and
dec
jmp
push
out
sbbl
pop
jb
dec
outsb
pushf
enter
sub
jecxz
idivb
and
mov
popa
loope
pop
mov
add
test
and
pop
dec
mov
cmpsl
add
stos
add
add
imul
test
mov
xchg
xchg
adc
ss
jle
dec
push
es
shrl
mov
xchg
cmp
jp
push
lds
stos
cmovle
xor
mov
into
mov
call
pop
adc
mov
lods
fistl
les
lods
subb
xchg
jno
inc
adc
std
ret
orl
sbb
loope
pusha
leave
je
clc
push
xor
mov
jl
pop
ss
and
xchg
fstl
xchg
xor
int
scas
jg
mov
daa
jle
inc
jns
and
and
xlat
fstp
scas
mov
movsl
or
pop
inc
fnstenv
add
aam
fnstsw
out
fcmovu
in
mov
cmpsb
shlb
add
jge
pop
lea
test
fidivrl
inc
int3
jl
test
popf
sub
xor
lcall
jne
jmp
mov
pushf
sbb
repz
or
push
or
xor
scas
andl
pop
das
xchg
xchg
call
xchg
inc
subb
addl
inc
pop
jmp
in
sbb
add
sbb
aaa
push
sub
cmp
jl
dec
sti
xchg
dec
lret
sbb
in
adc
jmp
push
add
out
pop
fldcw
mov
jb
icebp
add
sbb
inc
jecxz
mov
insb
push
stos
imul
add
mov
mov
mov
int
cmp
jns
cmpsb
push
mov
loopne
or
mov
inc
jl
mov
jne
push
sbb
cmp
push
cmp
je
jo
das
lret
sbb
mov
fwait
add
mov
cmc
lahf
les
lcall
punpckhwd
mov
dec
aas
ds
push
pop
mov
inc
dec
scas
push
mov
sbb
add
cltd
dec
in
fucomp
int
insb
lret
jnp
into
repnz
push
js
and
dec
into
inc
lock
mov
mov
icebp
and
test
add
lret
fisubl
mov
adc
mov
mov
cmp
repz
sbb
mov
shlb
mov
sub
dec
add
test
sbb
or
dec
subl
xchg
lea
sahf
or
aam
cli
xchg
lds
push
push
mov
imul
movsb
fsubr
sbb
jo
je
lods
out
mov
add
sbb
cmp
test
cmpsl
loopne
lret
xchg
pushw
imul
add
adc
repz
das
cli
fists
dec
es
pushf
leave
iret
shrl
add
push
jne
fxtract
adc
lea
and
pop
and
sbb
aam
pop
push
lret
mov
lcall
icebp
dec
fcompl
mov
repz
lcall
pop
adc
leave
ret
into
sub
adc
mov
iret
xchg
dec
sbbl
mov
faddl
ror
ds
and
pop
adc
fnstcw
and
adc
divl
out
stc
mov
test
js
repz
iret
or
cwtl
dec
jno
popf
mov
les
aad
pop
das
xchg
xor
outsb
add
mov
push
adc
cwtl
out
adc
pusha
insb
stos
add
stos
add
add
dec
push
pop
mov
clc
xchg
push
orb
pop
lahf
push
push
ret
dec
subb
fldl
jecxz
gs
sub
pop
fdivs
fwait
gs
jl
lock
mov
scas
incl
adc
aaa
inc
xchg
cmpl
fldl
lret
icebp
ja
and
fcoms
fsts
daa
outsl
mov
pop
rcrl
pop
sub
lcall
incl
pop
jne
jp
mov
sahf
sbb
lods
nop
out
call
mov
rep
insl
dec
lret
push
mov
mov
mov
lds
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
