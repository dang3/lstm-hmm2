push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
or
push
sbb
sbb
mov
lock
cmp
cs
jno
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
call
movsb
cmc
sbb
adc
int3
sub
mov
and
and
mov
cmp
inc
add
jbe
test
out
jmp
dec
or
xchg
adc
pop
mov
call
add
pop
loop
mov
inc
sub
frstor
ret
add
pcmpgtw
subb
sub
addr16
repz
lods
fmuls
adc
sub
icebp
lds
jnp
inc
cmpsb
pop
mov
out
leave
arpl
adc
roll
mov
sbb
call
stos
mov
call
test
fstl
in
dec
push
pop
rolb
mov
adc
inc
dec
inc
pop
fcompl
pop
sub
xchg
imul
xor
es
ffreep
pop
sarb
loopne
jno
add
addl
sbb
out
push
fdiv
mov
incb
mov
rcl
push
cmp
aad
push
and
mov
sbb
sahf
cmp
mov
sbbl
inc
jecxz
nop
sub
int3
inc
or
dec
rolb
pop
fstpt
sbb
cmp
jbe
insb
scas
movsb
inc
popa
nop
mov
dec
into
xor
jo
mov
js
ss
mov
push
movsl
push
and
sbb
test
jl
xchg
sub
loope
pop
pop
repz
ret
inc
sarl
repnz
adc
sub
outsl
sti
sahf
push
sbb
dec
and
aad
loop
pop
out
sahf
jp
push
jae
fwait
and
rcrb
mov
mov
cmp
stos
inc
fcomp
adc
fdivrs
adc
lret
lock
mov
mov
cld
xchg
xchg
int
loopne
sbb
inc
outsb
or
mov
lcall
jecxz
leave
mov
add
test
push
push
loopne
cmp
cmc
adc
xchg
mov
roll
pop
lock
sub
xor
out
mov
jge
pminub
imul
in
jns
lods
sbb
sti
negb
mov
loopne
or
mov
push
dec
xchg
enter
stos
movlps
insb
pop
sub
or
sar
jo
test
loop
mov
ret
lock
fadds
loope
mov
lock
clc
jns
lret
jl
cltd
adc
push
enter
xor
add
lret
int
idivl
cld
addr16
loope
cmpb
sub
hlt
push
mov
xchg
and
or
pop
or
inc
inc
push
jbe
inc
sti
mov
into
xlat
incl
or
push
cmp
adc
cmp
lret
mov
aad
and
ljmp
adc
adc
test
lds
mov
xlat
dec
lock
hlt
mov
nop
adc
mov
out
ret
sbb
and
cltd
cld
push
push
mov
call
int
add
dec
into
cmp
mov
sbb
popa
inc
and
mov
daa
shrl
push
jno
mov
jnp
pop
adcb
push
into
iret
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
push
adc
sbb
mov
push
sub
jbe
mov
mov
jae
inc
or
popf
adc
xlat
push
daa
loope
xlat
jbe
jl
mov
test
mov
adc
push
add
lcall
xadd
in
and
jmp
push
xchg
mov
gs
ja
jg
insl
push
or
imul
sti
push
enter
push
xchg
in
adc
in
pop
sub
dec
and
sbb
stos
push
jle
mov
mulb
jge
cmpsl
stos
decl
std
aas
push
cmpsb
push
faddp
fs
mov
mov
push
dec
insb
pop
sbb
fnstcw
fmull
outsl
xchg
call
ret
jo
xlat
and
add
sti
dec
lahf
add
xor
cmp
xor
lahf
xor
inc
jo
hlt
or
ss
repnz
sahf
xchg
dec
mov
xchg
mov
inc
inc
hlt
xor
lcall
push
mov
imul
sar
leave
sahf
adc
mov
clc
bnd
mov
pushf
fadds
hlt
ds
es
and
jno
push
cmpsb
push
shl
sub
mov
jge
or
pop
cmp
jg
les
es
ja
pop
lret
inc
sbb
xchg
push
and
mov
outsb
adc
or
cltd
mull
std
in
dec
inc
popf
sub
fs
push
jbe
fs
and
add
xor
cwtl
sahf
addb
mov
add
push
mov
and
ja
fpatan
inc
jg
mov
cwtl
push
pop
mov
or
cmp
push
dec
pop
cmpsl
lret
fwait
mov
pushf
inc
xchg
loop
mov
or
adc
test
dec
push
test
stc
lret
in
imul
pop
mov
es
sub
or
inc
in
and
jecxz
cwtl
push
jb
add
sti
inc
adc
mov
gs
mov
shl
enter
shl
push
mov
imul
push
and
pop
rcrl
aam
lock
mov
cmpsl
mov
jecxz
movsb
mov
gs
rorb
fisttpll
out
out
pop
mov
insb
pop
mov
sub
push
cmp
pop
or
or
cmpsl
addb
push
mov
mov
sbb
push
sahf
outsb
pop
mov
pusha
insl
push
xchg
repz
das
dec
cmp
jne
aas
daa
inc
adc
insl
jp
lahf
push
fwait
lret
pusha
mov
daa
out
pop
cmp
adc
xchg
add
in
and
sbb
enter
cmp
cmp
loop
in
or
push
jle
imul
sbb
cmpsl
sbb
leave
lret
xor
out
and
lock
fs
outsl
pop
pop
or
shl
xchg
xor
add
inc
mov
pop
add
add
movsb
add
xchg
bnd
dec
imul
xchg
xlat
add
dec
push
or
je
ffree
rcl
cs
sbb
fnstcw
inc
and
into
sbb
lods
inc
ss
fcmovnbe
negb
ret
cmp
add
xor
jns
out
fistpl
enter
sbb
and
jb
or
sub
sbb
sbb
pop
pop
cmp
scas
aam
out
pop
mov
xor
adc
test
imul
adc
inc
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
sbb
mov
or
sbb
dec
ja
int
dec
pop
push
jb
mov
movsb
pop
push
repz
test
mov
leave
sbb
fwait
jno
or
add
add
stc
mov
xlat
lock
sbb
xchg
mov
sbb
adc
inc
cmp
or
jmp
xor
dec
out
int3
adc
dec
mov
sub
mov
icebp
ja
pop
ljmp
hlt
in
xchg
sbb
adcb
sub
add
and
mov
xchg
jle
mov
rcll
enter
sub
xchg
xor
inc
sbb
cmp
rorl
leave
je
push
or
leave
cmp
mov
xor
add
xor
mov
mov
loop
sub
sbb
push
push
addb
dec
popf
xor
push
loop
dec
push
sbb
into
mov
push
xlat
pop
aaa
jp
inc
and
xor
adc
dec
inc
adc
out
or
rol
sub
mov
and
shlb
outsl
or
cld
xchg
loop
leave
int
xor
jnp
sbb
rsm
sbb
inc
fiadds
loopne
cmpsl
stos
xchg
dec
rcrl
push
cmp
xchg
inc
pusha
or
lret
xorb
int
vfrczsd
or
daa
scas
jge
sub
in
lret
jbe
ljmp
inc
inc
ja
ficoml
add
into
push
sbb
subl
rorb
cmpsb
stos
mov
filds
outsl
push
jecxz
test
xchg
inc
and
xchg
fs
popf
dec
add
xchg
fldl
sub
inc
movsb
and
lea
insl
mov
loopne
loope
add
es
pop
add
dec
cmp
lods
or
add
cmp
cld
pusha
pop
movsb
in
sub
ret
mov
cs
out
fidivs
push
das
push
cli
notb
cmp
push
icebp
test
mov
imul
push
push
inc
arpl
xchg
sub
ja
or
shrb
adc
iret
std
fcompl
lock
ret
jbe
int
or
jl
pop
ret
loope
insl
dec
xchg
sar
or
mov
xchg
ss
ja
std
push
ds
mov
gs
mov
stc
mov
insl
loop
cwtl
mov
push
add
mov
mov
lahf
loop
sbb
dec
jns
push
shll
mov
lods
sbb
mov
adc
pop
mov
fwait
adc
sti
popf
aaa
cwtl
dec
stos
lds
sti
in
sahf
mov
sbb
add
push
loopne
push
mov
insb
repnz
sbb
jmp
orl
add
and
aaa
adc
jb
xorb
popa
out
push
inc
rol
mov
jnp
call
xchg
jmp
out
insb
fwait
xchg
cmp
sub
xchg
inc
mov
mul
div
fs
xor
addr16
fs
rclb
imul
xor
pop
cmp
sub
pusha
ret
fsts
aas
iret
cmp
mov
fwait
data16
aaa
add
shll
mov
sbb
inc
test
fistpl
js
addr16
out
pop
jnp
insb
negl
sub
dec
push
mov
leave
dec
or
stos
rclb
mov
or
lds
pop
xlat
imul
mov
xchg
jb
pop
je
in
or
cmp
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
cwtl
aad
gs
int3
pop
test
outsb
add
inc
dec
xchg
mov
mov
jb
push
addl
inc
mov
in
rclb
xchg
jbe
idivl
icebp
mov
mov
mov
pusha
push
sbb
arpl
and
divps
ljmp
aam
je
lcall
mov
in
and
jbe
cmc
je
sub
mov
lods
repnz
aad
test
std
call
sahf
out
fs
jnp
sbb
in
lods
rcll
clc
adc
jl
icebp
shlb
inc
ret
movsb
sub
mov
push
xor
xorl
pop
cmp
add
jb
cmpsl
call
pop
in
mov
push
rorl
pushf
xor
out
out
mov
push
dec
clc
dec
pushf
add
scas
xchg
data16
and
aad
aam
dec
je
lds
inc
and
xchg
lret
xor
cmp
add
in
notl
por
ss
sti
pushf
dec
sbb
lret
outsb
out
out
jbe
cmp
popf
jp
jl
sahf
xchg
mov
push
xor
rolb
cltd
mov
push
std
lods
sub
push
shrb
decl
sub
and
jo
cltd
test
cmpsl
mov
add
roll
pop
or
stos
ret
dec
adc
addr16
aad
mov
ja
test
aam
movsb
ja
mov
or
daa
into
clc
stc
std
lcall
mov
movsb
push
cmpsl
lret
cmp
aas
stos
inc
push
push
jno
push
frstpm(287
xchg
mov
fisubrs
mov
or
nop
test
mov
adc
dec
pop
lahf
data16
lods
inc
cmp
outsl
test
xchg
lcall
mov
xor
sbb
jnp
add
xor
mov
ja
inc
test
adc
movsb
inc
stc
sbb
mov
in
andb
push
nop
cltd
int3
jg
mov
imul
gs
xchg
scas
stos
ret
jle
cmp
mov
nop
push
jp
fwait
int
jnp
out
testl
push
xor
imul
int3
mov
inc
mov
cmpsl
inc
mov
hlt
mov
outsb
cwtl
lds
pushf
sbbl
out
xchg
sti
or
sbb
es
jns
push
cmpsl
jg
xchg
dec
pop
pushf
int3
jno
push
xor
dec
out
orl
add
fnstcw
lcall
mov
cmpsl
jecxz
in
nop
xorb
repz
and
sti
inc
dec
movsb
lds
and
sarb
or
xchg
hlt
fdivs
push
inc
jbe
test
mov
cs
cs
push
jns
stos
xor
or
mov
push
xlat
push
dec
dec
enter
gs
xchg
lods
jle
jle
mov
test
jecxz
add
int
pusha
mov
add
inc
lcall
push
or
cltd
loopne
aam
jp
cli
jnp
inc
rorl
xorl
jp
mov
or
aad
pop
ret
and
icebp
ljmp
hlt
shrb
shll
or
addr16
push
or
xor
fbstp
jmp
arpl
scas
push
pop
ljmp
push
xor
test
dec
cld
std
mov
mov
nop
jb
add
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
push
adc
sbbb
and
fisubs
ja
adc
shlb
push
push
mov
cmp
fucomp
pop
cmp
push
inc
mov
shll
adcb
int3
cmp
cmp
inc
push
jp
adc
push
fidivrs
pop
or
adcl
sub
mov
mov
decl
jbe
mov
cmpb
jns
and
cmp
sbb
shll
jmp
lahf
iret
ljmp
cld
sbb
xchg
push
xchg
mov
sub
in
out
inc
jbe
jo
notb
cltd
cltd
jg
adc
mov
lahf
jae
inc
mov
mov
cmc
aad
scas
sbb
sbb
jl
stc
xor
push
out
notl
sbb
cmp
shll
outsb
int3
cltd
cs
sbb
mov
jp
xchg
push
fisttpl
cmpb
push
dec
les
imul
xchg
cmp
inc
pop
out
decb
dec
add
popa
cmp
loop
imull
lea
sub
xchg
bound
and
negl
popa
enter
jae
bound
fnstsw
xchg
lret
outsl
cld
scas
test
xchg
fldt
or
pop
sti
push
lret
cltd
mov
dec
inc
aad
mov
pop
mov
add
enter
or
mov
mov
push
jmp
into
dec
xchg
sbb
mov
ljmp
aam
outsl
je
push
dec
loop
outsb
mov
jne
outsl
inc
or
pop
push
fisttpll
lret
dec
xchg
dec
sahf
push
or
mov
and
fwait
mov
push
mov
in
out
xchg
iret
outsb
fstps
pushf
aam
xor
push
adc
nop
std
mov
movsb
or
mov
out
fadds
arpl
call
mov
enter
mov
clc
sbb
adc
push
imul
cld
inc
rcrl
into
and
pop
mov
ret
test
mov
in
mov
jbe
adc
imul
es
in
leave
or
push
mov
mov
pusha
ja
or
adc
popa
shl
xlat
mov
mov
and
inc
subl
test
iret
cmpsl
cwtl
sti
and
inc
shrl
cmp
lods
mov
mov
pop
jle
not
mov
imul
add
fcoms
jb
daa
fcoml
test
jo
sahf
and
mov
ret
pop
pop
and
out
movsb
and
xorb
loop
mov
or
sets
repz
sub
mov
xor
xor
or
das
fs
jp
sbb
or
mov
inc
push
setbe
push
cmp
cmp
movsb
test
add
out
adc
iret
test
sbb
fmuls
jnp
cmp
in
xor
cmp
mov
jg
mov
jo
roll
dec
incl
add
jae
std
loop
and
clc
sbb
add
icebp
mov
xchg
mov
mov
pop
jmp
jmp
or
movl
addr16
jnp
stos
lret
dec
xlat
aaa
xchg
inc
mov
dec
mov
sub
sar
in
cmp
xchg
and
push
jl
sub
fisttps
out
inc
add
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
push
hlt
sbb
sahf
adc
sbb
and
mov
test
pop
pop
mov
cmp
mov
sbb
push
xchg
gs
pop
arpl
push
or
aad
xchg
repz
add
popa
mov
jne
sahf
mov
ret
sbb
je
pop
fidivrl
jl
sahf
inc
mov
jns
sub
sbb
ds
scas
xchg
inc
sub
jmp
test
add
enter
inc
cli
stos
iret
rcll
sub
xchg
shll
pop
lods
jmp
clc
in
out
cmp
inc
popf
or
pop
outsl
pop
lods
notl
or
mov
hlt
xor
dec
xchg
aas
add
sub
sbb
or
pop
or
rcrl
sub
and
xor
in
bound
jbe
ljmp
out
and
data16
mov
mov
data16
jle
aam
push
dec
cmp
jb
filds
cmpsb
jp
or
popl
in
inc
add
sub
aas
mov
ret
scas
sahf
add
mov
push
fs
and
mov
mov
or
dec
rorl
pop
or
movsl
adc
jmp
into
xor
je
sbb
std
inc
imul
in
jle
pushf
push
ss
pop
repz
ljmp
ss
add
cli
cmp
dec
dec
out
outsl
push
loopne
in
mov
inc
xchg
stos
out
das
dec
mov
mov
or
xchg
and
cli
andb
cltd
push
cltd
dec
xor
arpl
and
inc
ljmp
mov
lret
popf
loop
andl
xor
movsl
xor
pop
xor
mov
cmp
pop
jg
lods
punpckhbw
mov
je
inc
mulb
or
mov
jb
jno
mov
sub
and
testl
or
fnstsw
jmp
inc
mov
pop
push
sub
mov
cmp
insb
in
xchg
inc
fdivl
nop
fwait
aas
adc
fisttpll
test
outsb
mov
pop
dec
pushf
aas
xchg
scas
ss
xchg
es
insb
testl
fstpl
ds
fnsave
cltd
sub
push
rclb
in
sub
cwtl
fwait
lock
xor
ss
sbb
loop
sarb
jecxz
mov
add
rolb
fldenv
sahf
inc
dec
out
jp
rcrl
adc
test
mov
jl
xor
ljmp
lods
add
jecxz
sub
xor
cld
mov
fadd
data16
out
push
pop
push
jmp
mov
jns
and
mov
jb
lods
sbb
sbb
cmp
arpl
jb
jno
pop
test
addl
sbb
sub
push
cmp
xchg
sub
add
and
cmpsl
xchg
cwtl
sbb
loope
sub
or
xor
shrb
movsl
pop
lods
mov
gs
test
mov
test
cmp
jns
adc
es
pushf
scas
mov
sbb
mov
pop
out
cmp
dec
or
mul
enter
inc
mov
mov
insb
fdecstp
xchg
movsb
cmp
incl
mov
lock
jg
jnp
cmp
pop
call
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
into
ret
jl
in
sbb
sahf
adc
sbb
or
loopne
push
xchg
jns
enter
xlat
mov
jle
and
jmp
frstpm(287
sbb
mov
jnp
sbb
pop
push
jecxz
jmp
test
mov
inc
cmpb
stos
sbb
pop
adc
das
inc
mov
mov
ljmp
pop
mov
icebp
pushf
mov
scas
adc
sarl
xchg
daa
or
sbb
xor
in
jl
sbb
test
shrl
inc
imul
dec
mov
xor
dec
pop
cmc
add
fsubs
cmpsb
add
mov
xor
and
add
and
push
mov
xchg
xchg
xor
movsb
lds
inc
add
mov
repz
pusha
sbb
xchg
xchg
adc
mov
add
jmp
dec
fdivr
outsl
jb
pop
subl
add
lcall
out
frstor
insb
lods
add
or
and
xor
ljmp
push
or
cmp
out
jbe
xchg
mov
or
hlt
mov
mov
in
push
lea
xlat
insb
lret
clc
cmp
xor
rcr
pop
cmp
outsl
xchg
cmc
adc
test
push
and
test
push
sbb
mov
bound
and
stos
push
mov
fdivs
pop
enter
cmpsb
mov
xor
rol
in
jb
mov
int
xchg
pusha
mov
sbb
mov
daa
ss
mov
decb
cmpsb
xor
sar
push
push
mov
out
push
inc
rorl
mov
inc
pop
repnz
cli
jne
mov
mov
iret
rcr
inc
icebp
mov
cltd
jl
es
dec
mov
sub
unpcklps
into
add
ds
or
pusha
fdivl
stos
adc
clc
andb
add
les
push
mov
into
ret
les
lds
add
xor
mov
xchg
sahf
mov
into
test
cmp
and
inc
fistl
out
xlat
cmp
dec
sub
imul
sub
and
and
shrb
imulb
fwait
cmp
in
and
xor
popf
je
dec
push
sbb
or
into
or
fwait
dec
push
enter
mov
mov
mov
sub
pushf
leave
les
nop
sub
pop
adc
decl
shr
in
ret
movsl
jno
mov
inc
pusha
jbe
sub
mov
adc
mov
addb
mov
push
stos
rcl
inc
hlt
mov
pop
test
out
mov
fisubs
fidivrs
mov
pop
jo
and
out
jge
jp
sbb
cmpsb
add
pop
mov
scas
mov
sbb
ljmp
xchg
jnp
xor
dec
lret
xchg
mov
dec
imul
jecxz
cmp
fcomps
ficoml
inc
push
cmc
mov
stos
pop
push
ss
lahf
lahf
sub
pop
outsb
push
sbb
dec
daa
adc
arpl
or
out
sub
or
cwtl
pop
es
int
xor
inc
pop
inc
cld
add
scas
scas
fs
popf
inc
aaa
out
adc
aaa
sbb
hlt
ret
fimull
movl
jne
jmp
sbb
fldt
sbb
or
jns
mov
sahf
adc
sbb
dec
fbld
movsl
outsb
sub
adc
fnstenv
lods
dec
adc
movsb
mov
xchg
pushf
in
inc
mov
in
pop
inc
adc
clc
insb
decl
addr16
sub
or
out
or
xor
in
xor
inc
or
mov
mov
mov
movsb
lcall
out
add
mov
std
or
pop
pop
inc
icebp
xor
pusha
aam
inc
inc
push
dec
or
imul
inc
ucomiss
jnp
imul
sbb
sub
ljmp
aad
testl
outsb
jmp
sub
sbb
sarb
and
push
imul
sub
sub
cmp
lea
out
sahf
loopne
add
dec
decl
sub
aad
shll
pop
adc
mov
mov
mov
pop
dec
loopne
pop
fsubrl
mov
bound
clc
andl
xor
inc
pushf
inc
jo
lret
arpl
pop
xor
rorl
mov
pusha
hlt
in
scas
add
xor
outsl
push
shrd
call
sub
lods
ds
pop
mov
jo
lods
push
cmp
add
aaa
pop
rorl
mov
aaa
inc
lock
out
in
icebp
shl
dec
cmpsl
int
dec
test
jbe
dec
loopne
mov
inc
cli
mov
repnz
xor
add
fs
push
enter
outsl
lret
mov
mov
das
lods
outsl
adc
popa
or
jbe
jo
sti
shll
test
xchg
jl
dec
sub
ds
cmp
jge
addl
pop
xchg
xor
imul
fs
sub
test
js
mov
jbe
pushf
rcrb
dec
dec
adc
cmc
push
mov
lret
mov
xchg
sbb
rcrb
les
inc
aas
push
mov
fsts
jo
push
sub
pop
jmp
jp
push
and
cmpsb
inc
inc
ds
mov
add
push
mov
cmp
add
cwtl
sahf
jb
sub
nop
mov
cmp
jmp
ds
imul
inc
mov
jno
in
mov
lods
dec
insl
or
outsl
dec
movsl
or
sti
mul
sub
int
aas
inc
jo
dec
stos
xor
jmp
cs
mov
xor
cmp
cmp
pop
je
in
cmp
scas
push
sbb
push
xchg
loop
jg
or
pushf
popf
into
jmp
jle
xor
std
push
loopne
pop
leave
gs
subb
testl
xchg
or
mov
jle
daa
mov
jbe
xchg
inc
shll
addr16
push
adc
aaa
pop
sbb
pop
jo
test
dec
loop
adc
rorb
adc
sbb
imul
andb
cmp
mov
fcomps
xchg
push
sub
insb
adc
decl
and
push
adc
sahf
leave
loop
loopne
xorl
loope
xor
add
scas
jno
mov
jmp
shrb
mov
icebp
fnsave
filds
negb
push
imul
jns
xchg
mov
jbe
mov
jl
lcall
jle
or
adc
hlt
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
pop
and
mov
jnp
cmp
loop
stc
mov
mov
mov
test
je
mov
xchg
scas
jle
data16
cmp
xorl
sbb
inc
xchg
mov
shll
mov
data16
mov
jmp
test
in
sub
insl
sbb
and
dec
push
lret
insb
arpl
clc
xor
or
mov
mov
xchg
popa
pop
mov
inc
icebp
repnz
stos
bound
lret
xchg
sub
sahf
mov
xchg
sub
popa
and
push
ss
jl
out
push
mov
adc
mov
jl
int
sahf
jl
call
jmp
je
xchg
pop
sub
pop
sahf
sbb
push
sub
sbb
rdtsc
mov
mov
ja
stos
sbb
ret
stos
enter
and
pop
ja
xchg
out
lods
dec
add
inc
lcall
icebp
adc
mov
push
push
add
cld
iret
xor
push
arpl
jmp
push
or
cmpsl
sahf
cmp
push
sbb
roll
push
cs
pop
insl
mov
clc
xor
cs
stc
jmp
dec
ja
inc
loop
les
loopne
fcmovbe
xchg
jb
sbbl
fildll
xchg
jb
test
or
fnstcw
frstor
fcoms
xor
imul
lret
xchg
fimull
stos
imul
or
les
xchg
cwtl
jne
jecxz
lahf
lret
call
loope
xchg
mov
mov
test
sbb
cmpl
imul
xchg
std
icebp
mov
cmpsl
inc
ficoms
add
aas
rorb
adc
arpl
stc
cli
mov
nop
xor
lahf
sub
jmp
sub
fcmovnu
cmp
cwtl
or
shlb
pop
xchg
sbb
sbb
jecxz
scas
mov
jl
xor
sub
sti
je
inc
mov
inc
xor
cmpsb
or
faddl
inc
sbb
inc
rcr
jle
pop
or
or
aaa
test
and
inc
lea
jne
mov
test
mov
rolb
xchg
pop
cmp
fs
pushf
mov
in
stos
or
in
xor
mov
cmc
mov
sub
jmp
push
dec
out
mov
test
imul
ret
push
popa
cmc
xchg
mov
add
outsb
addb
out
addr16
or
mov
fnstcw
arpl
jmp
imul
out
loope
dec
pop
adc
scas
cltd
je
push
jecxz
lcall
sbb
pusha
sbb
gs
mov
pop
int3
sub
pop
idivb
mov
push
or
pushf
ret
ss
bnd
push
stos
mov
stc
sbb
adc
icebp
pusha
mov
xor
xchg
inc
dec
out
sahf
and
lret
xchg
movsl
mov
addr16
fidivs
sub
call
lods
stos
jne
test
fcomps
mov
or
cmpsl
lods
std
jbe
outsb
dec
in
pcmpeqd
cmpsl
xchg
add
ret
xchg
ds
add
lahf
cmpsl
aam
dec
into
mov
jge
std
sub
ds
cltd
jno
mov
addr16
icebp
pop
and
cmp
dec
jno
or
push
cs
pushf
mov
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
jl
xlat
sbb
sahf
adc
sbb
inc
ret
out
movsl
arpl
adc
popa
aam
das
lods
popa
mov
and
fldl
lcall
jne
cs
adc
je
mov
in
push
push
mov
insb
jo
es
push
insl
xchg
dec
xor
mov
pop
jb
lret
orb
mov
loope
push
push
bound
shl
in
out
mull
pavgw
or
stos
sbb
rcrl
lods
inc
jb
sub
adc
mov
stos
sbb
test
lcall
add
mov
jns
repz
adc
popa
pop
pop
fstl
and
xor
pop
sub
jle
sti
in
fs
xor
inc
imul
xchg
cmc
or
cwtl
fcompl
iret
scas
jge
lods
ljmp
adc
movsl
adc
js
cmp
sbb
aaa
out
add
icebp
mov
hlt
sub
push
jmp
pop
aaa
lds
xchg
mov
es
rcl
imulb
arpl
inc
les
ret
sti
ja
jae
int3
and
int3
cwtl
pop
push
popa
push
aaa
push
pusha
dec
test
jb
jl
xor
movsb
inc
imul
sbb
and
inc
mov
fdivrs
pop
or
adc
add
bound
push
push
xlat
lods
nop
loop
add
arpl
cltd
daa
or
pusha
xchg
lods
add
mov
addr16
add
pusha
into
test
mov
add
inc
js
cmp
cmp
adc
test
dec
xor
popa
sbb
cmpsl
orb
loop
pop
jnp
xor
xorl
movlhps
sub
or
mov
jnp
arpl
shrl
mov
inc
loopne
ds
push
clc
jmp
inc
cli
inc
bnd
gs
jl
lds
push
rcl
push
add
or
jae
and
inc
insl
xchg
push
mov
mov
sub
lea
fsts
mov
test
lods
mov
adc
mov
arpl
inc
fisttpll
push
outsl
lds
faddp
sbb
popf
dec
jge
adc
add
loop
pushf
mov
sub
mov
xchg
push
clc
inc
mov
cmp
cmp
xchg
in
stos
mov
sti
push
xchg
imul
js
xchg
mov
sbb
mov
ficompl
int3
or
je
outsl
outsb
dec
mov
mov
xor
loope
inc
stos
mov
mov
add
inc
mov
mov
ret
push
sub
lds
and
popf
les
xchg
sbb
mov
test
lret
mov
das
xchg
jo
dec
jns
ret
sahf
xchg
scas
out
adc
dec
mov
imul
js
insb
xor
inc
in
add
dec
inc
ljmp
addr16
into
imul
insb
mov
sub
mov
out
sub
imul
mov
xchg
xchg
mov
sbb
sub
icebp
arpl
mov
xchg
adc
jo
fdivl
movsl
cltd
pop
icebp
sbb
jecxz
sub
in
jl
call
fisubrl
push
lods
wbinvd
mov
xchg
lret
sub
push
pop
out
add
fmul
jno
cmp
in
xchg
cli
cmpsb
xchg
leave
and
movsl
pop
lock
mov
sub
sbb
insb
stos
push
and
movsl
push
dec
add
stos
addb
iret
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
xor
loope
push
iret
sbb
sahf
adc
sbb
sub
xchg
pop
repz
cli
popa
int
mov
dec
mov
in
pusha
mov
mov
sub
icebp
inc
stos
scas
add
xlat
push
xor
pusha
add
push
iret
xchg
les
xor
inc
add
mov
insb
mov
and
jg
cmpb
imul
repnz
jl
pop
cmp
daa
jle
cmc
xor
mov
js
mov
jp
add
add
scas
xchg
aam
lret
mov
btr
push
pop
outsl
push
push
mov
jp
and
add
push
adc
loopne
inc
adcb
pop
fistpl
mov
push
in
sbb
inc
mov
jae
xlat
popa
inc
mov
inc
repz
jg
sbbb
fcomp
adc
mov
mov
xor
inc
aaa
fisubrl
fcompl
lret
das
push
push
adc
push
outsb
test
dec
adc
mov
mov
and
dec
rcr
xor
cmc
dec
mov
insl
or
dec
jl
mov
or
cmp
pop
sub
cmovle
out
mov
aaa
pushf
fimull
out
add
ds
lods
das
shrl
mov
sub
push
jp
sub
xor
inc
jbe
ror
outsl
daa
mov
jae
es
into
imul
mov
pusha
mov
jmp
sub
pop
lret
scas
lcall
clc
inc
test
int3
call
jle
cld
iret
gs
xlat
and
rcll
push
xor
jbe
mov
leave
nop
fisubrl
adc
xor
fiaddl
out
xchg
loop
ss
xor
xchg
dec
enter
lods
jmp
repnz
testl
out
jo
call
mov
jl
outsb
sarl
in
mov
roll
pusha
fdivrp
lahf
mov
cmc
into
vmread
sbb
jne
adc
test
jmp
les
shll
cmpsb
int
add
dec
fiaddl
pushf
mov
repnz
repnz
and
icebp
movsl
stc
xchg
sbb
jb
pop
xlat
movsb
xchg
jl
loopne
cld
cs
mov
xchg
cmp
cmp
jecxz
adc
add
sub
mov
fsts
sub
lcall
jns
cmp
fisttpll
arpl
dec
xor
loopne
jge
lcall
ficoml
stos
adc
xor
pop
jae
adc
mov
cld
pop
hlt
rorb
or
push
ds
inc
and
popf
and
pop
or
sbb
xchg
lds
pop
lahf
jns
push
jecxz
pop
cmpb
add
push
fidivrl
or
or
pop
data16
loopne
ret
shlb
rclb
lcall
sub
jbe
int3
jne
inc
cmp
inc
add
arpl
push
pop
dec
outsb
lds
mov
out
xchg
repnz
dec
lea
mov
xor
jne
dec
jns
mov
bound
cmpsb
aam
jmp
inc
divps
test
cs
movsb
js
push
out
dec
ror
mov
inc
sbb
repz
mov
cmp
sbb
cmpsb
loop
aam
inc
push
popf
fcomp
or
adc
fisubrs
dec
jmp
adc
mov
shrl
scas
pop
outsb
test
jge
push
sbb
adc
es
fimull
pop
in
jmp
shrd
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
test
xchg
mov
push
cmpl
cmp
adc
sbbb
sbb
sub
pop
mov
mov
sub
sub
pop
pop
pusha
inc
inc
movsl
hlt
pop
or
or
ret
cs
shl
adc
dec
gs
test
nop
in
sbb
stos
add
clc
sbb
mov
jmp
push
mov
cmpsl
je
mov
ljmp
repz
scas
xchg
hlt
jl
loope
dec
lret
cmp
or
pop
ljmp
adc
pop
cmp
push
and
push
cltd
arpl
mov
dec
inc
sbb
pop
mov
xchg
cmp
fs
ficompl
and
stos
popf
in
jno
push
jo
bound
dec
jle
mov
xchg
inc
mov
adc
stos
aad
cmc
sub
iret
mov
pushf
sub
movsb
xor
xchg
lods
leave
shlb
lods
sub
lods
xchg
dec
cmp
cli
or
pop
es
call
sbb
and
cli
push
out
mov
mov
clc
mov
hlt
xor
mov
imul
jo
shlb
mov
insb
jno
inc
sbb
lea
mov
and
push
test
test
push
into
push
stos
jae
and
xor
rorb
inc
movsl
jmp
scas
popa
cwtl
or
stos
mov
lss
adc
inc
pop
xchg
repz
sbb
push
cwtl
rcl
mov
xchg
and
add
mov
cmp
ja
add
jnp
rorl
imul
push
icebp
or
mov
nop
es
cmp
cmp
push
sub
dec
fldenv
push
das
lds
dec
mov
test
ss
imul
push
dec
lods
addr16
aaa
jecxz
bound
push
test
mov
cltd
sbb
sub
mov
mov
aam
push
mov
aad
mov
inc
mov
push
pushf
loop
mov
and
int3
cmp
xor
add
adc
inc
shrb
insl
mov
popa
lret
leave
cmpb
mov
push
mov
subl
xchg
pop
adc
push
jecxz
dec
mov
nop
dec
daa
scas
fcomps
mov
lret
divl
fwait
in
jb
inc
pop
and
cmpsb
outsb
mov
std
sub
dec
add
imul
inc
in
cmpsl
or
xchg
cld
dec
outsl
jo
jg
jecxz
das
sub
pop
fcompl
aam
hlt
addr16
mov
fs
sbb
mov
shlb
insl
jno
pop
pop
imul
mov
mov
js
dec
and
into
je
insb
jnp
xlat
inc
jb
xor
clc
push
dec
xlat
adc
lret
mov
push
pop
call
es
gs
xchg
inc
shl
int3
pop
jp
je
fstpt
subb
imul
mov
jmp
pop
lahf
sbb
sahf
dec
hlt
lret
mov
mov
js
sbb
adcl
std
cld
jae
fldt
jp
sbbb
xchg
fs
ret
imul
mov
cli
mov
std
pop
xchg
ret
int3
addb
dec
jns
call
jp
outsb
jnp
call
jecxz
mov
mov
sub
mov
push
xchg
jmp
jecxz
std
gs
call
fwait
push
jmp
or
mov
xor
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
adc
jo
rcrl
sahf
adc
sbb
pusha
fidivl
setl
or
inc
out
lods
ror
das
and
jmp
xor
jle
mov
sahf
or
mov
mov
mov
daa
icebp
fdivrs
cmpsb
imul
push
in
inc
xchg
jno
jb
fcompl
or
xchg
or
mov
dec
add
inc
dec
mov
push
popa
ds
ret
rclb
xor
mov
xchg
push
test
mov
out
adc
and
mov
out
mov
jmp
jb
leave
jp
out
xchg
sbb
andb
std
pop
scas
mov
push
push
push
leave
imul
push
mov
or
dec
xor
ds
stos
daa
int3
aad
int3
dec
sbb
fiadds
pop
daa
mov
sbbl
add
je
cs
in
pusha
scas
jbe
hlt
add
shlb
repnz
scas
fldcw
xor
stos
add
dec
cmp
in
and
daa
xor
mov
loopne
jno
inc
insl
int
xor
cld
imull
mov
push
push
dec
fisttpll
enter
std
xchg
pop
jecxz
shrb
imul
mov
in
cmpsb
xor
movsl
jnp
aad
inc
pop
aam
mov
sbb
lods
jmp
cs
bound
add
cmpsb
mov
mov
icebp
jle
scas
xchg
mov
lret
jae
es
or
push
divb
movsl
test
aaa
lock
or
xor
test
adc
sbb
mov
iret
popf
lret
add
pop
dec
jo
add
fcoml
add
andb
pop
or
xchg
and
jle
gs
rcrl
and
and
inc
pushf
ret
test
dec
adc
enter
test
push
xchg
inc
clc
mov
or
pop
nop
sub
sub
pop
popa
rolb
aaa
lds
subl
mov
jge
dec
push
adc
and
pop
mov
rcr
lods
out
pop
sbb
fcomp
pushf
mov
jp
imul
push
xor
test
jae
cld
loopne
mov
mov
cmp
xchg
hlt
push
loop
adc
shrb
push
xchg
inc
pop
cwtl
or
loop
inc
jge
daa
es
imul
out
add
imul
lods
push
push
push
loop
neg
and
dec
dec
loope
or
ret
or
ljmp
push
movsl
insb
in
cmp
cmpsl
sbb
cmp
push
cmp
mov
enter
xor
xor
sub
div
push
mov
shll
stos
not
mov
int
push
fs
das
repnz
jno
mov
sbb
icebp
pop
xor
fcmove
or
mov
mov
xor
shlb
cmpsb
insl
icebp
pop
in
pop
nop
ds
cmc
sti
cmp
fs
testl
test
rorb
xchg
rorb
fucomip
rcr
cmp
xor
sub
add
arpl
xor
lea
hlt
repnz
add
or
dec
in
xchg
push
add
xchg
push
in
insl
xor
xlat
xlat
or
setl
lods
movsb
push
lea
xchg
pusha
inc
test
das
outsl
and
std
or
or
icebp
hlt
jmp
add
in
and
mov
sbb
mov
push
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
inc
mov
sbb
sahf
adc
sbb
xor
mov
ja
sub
sub
mov
push
inc
fwait
subl
repnz
das
and
pop
or
or
orb
pop
mov
mov
mov
jns
jg
or
and
sub
cmpsb
clc
jo
inc
into
stc
jb
lahf
int3
or
out
inc
jmp
and
xor
cltd
ja
push
ja
jmp
dec
fcompl
repnz
daa
jne
andps
and
xchg
das
shrb
loopne
clc
js
loop
jne
mov
pop
movq
imul
sbb
aas
cli
pop
and
stos
mov
movsl
fidivrl
sub
sub
std
mov
adc
dec
and
dec
repnz
in
popa
cmp
loop
xchg
ja
or
adc
popf
or
sbb
test
or
and
add
push
push
aam
into
bound
pop
stos
data16
inc
sub
icebp
adc
jecxz
popa
dec
inc
xlat
pop
xor
pop
fsubrl
mov
xchg
add
push
lret
cli
or
das
xchg
popa
cs
mov
insl
adc
test
mov
imul
dec
push
jns
call
das
jo
cmp
dec
or
fnstsw
ret
stos
add
outsb
insb
dec
mov
iret
sub
je
pop
sub
jecxz
dec
push
inc
out
fstpt
jl
aas
scas
nop
loopne
sub
mov
sbb
scas
adc
mov
fcmovb
or
stos
fildl
into
mov
shl
ljmp
jl
fistpll
and
sti
jno
cmpsl
popa
inc
lahf
mov
adc
mov
inc
mov
mov
xchg
enter
outsl
xchg
aad
jns
push
mov
pop
leave
data16
rcr
push
sbb
sub
adc
dec
or
mov
or
xor
mov
popf
push
cmp
imul
mov
jae
xchg
xchg
lock
scas
cli
jle
push
cmp
arpl
cwtl
shrb
sbb
cmp
lods
lahf
lret
pop
imul
mov
push
and
daa
mov
sub
int
adc
jge
int
push
sub
push
pop
xchg
addr16
jb
testl
loope
ret
mov
insl
push
test
xchg
call
popf
mov
push
mov
pusha
mov
sub
add
enter
mov
addl
xchg
adc
and
pop
or
out
mov
push
pop
lahf
das
shrl
xchg
out
cmp
sbb
testl
push
cmp
lods
lcall
out
dec
push
add
out
shrb
inc
cltd
jo
xor
pop
movaps
inc
cmp
add
aaa
push
cwtl
mov
push
xchg
cmpsb
mov
mov
adc
inc
pop
js
cmpsl
data16
and
addr16
ljmp
or
repz
mov
lahf
xlat
adc
xchg
lcall
pop
jle
add
fcomi
sub
push
cwtl
in
push
outsb
inc
lahf
not
xchg
xchg
fiaddl
shl
pop
push
and
rclb
push
mov
jg
out
fs
push
push
cmpsb
daa
inc
push
shrb
xor
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
adc
stos
insl
mov
sbb
testl
fldt
int3
ret
cmp
push
jmp
sahf
ret
mov
je
mov
dec
or
das
fiadds
iret
cmp
das
inc
sbb
out
mov
and
mov
pop
outsl
rclb
push
insl
daa
loop
daa
in
push
pop
inc
or
jnp
lret
sub
insl
cmp
push
xor
cltd
dec
adc
jne
jmp
aaa
out
push
xchg
sbb
int3
ret
sti
or
lock
jmp
adc
xchg
enter
outsb
and
sub
test
jbe
mov
xor
hlt
popf
xchg
jae
xor
jle
mov
mov
inc
xchg
fcmovu
and
lret
out
test
add
icebp
div
andl
inc
shll
fnstenv
in
std
inc
stos
mov
pop
leave
or
shufps
leave
xorb
jle
das
fldl
std
mov
mov
mov
xchg
xchg
xor
sub
xchg
push
mov
shll
leave
cwtl
roll
jp
inc
jp
jle
jb
add
test
mov
and
jecxz
push
sbb
loopne
and
imul
or
jne
cmp
mov
pop
and
ss
adc
add
mov
jl
pusha
sub
mov
mov
mov
mov
xchg
fcoml
iret
add
fldenv
xor
mov
lret
lea
cltd
add
mov
gs
xchg
adc
cmp
in
mov
ret
int
ja
scas
mov
cmpsl
dec
sti
insl
lret
cmp
mov
test
or
and
or
dec
sbb
mov
xchg
arpl
xchg
arpl
lods
push
imul
jl
scas
popa
jecxz
lret
mov
pushf
addr16
stc
sub
insl
add
cli
cmp
sbb
incl
dec
xchg
inc
lret
push
push
mov
std
xchg
das
inc
adcl
mov
sahf
adc
test
push
xor
inc
lcall
aad
push
or
jmp
cmp
xchg
cmc
inc
fisttps
inc
push
xor
in
test
dec
jne
pop
mov
push
push
push
movsl
mulb
orb
inc
mov
js
das
inc
dec
add
push
lcall
dec
int
xchg
mov
lret
fists
ret
push
dec
in
mov
test
out
or
mov
arpl
jb
outsl
andl
jae
loope
ja
or
xorl
lret
push
inc
andl
xlat
xchg
test
dec
stc
lea
inc
mov
jb
or
bound
js
rcrl
adc
and
xor
or
sti
popa
mov
mov
lret
rcrb
inc
addr16
mov
stos
gs
sbb
sub
stos
adc
pop
sub
leave
sbb
insb
cwtl
gs
and
jno
push
dec
lds
xchg
sub
push
sub
mov
ret
shlb
outsb
push
sub
push
xor
mov
je
lods
mov
ljmp
ja
cmp
dec
xchg
jp
flds
mov
add
cmpsl
jle
push
rcrl
out
sbb
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
daa
hlt
push
test
sbb
into
and
jge
adc
movsb
test
lret
imul
add
jns
pop
xchg
test
outsb
push
mov
adc
sbb
hlt
sub
mov
nop
les
dec
jns
xor
mov
inc
xor
xchg
pop
inc
and
adc
cltd
daa
imul
add
xchg
inc
in
in
or
ficompl
clc
bound
rcrl
jbe
sbbl
cmp
mov
xchg
sbb
pusha
pop
popa
ret
mov
adc
fstpt
jns,pn
add
pop
pop
inc
scas
mov
dec
dec
int
add
sarl
shl
sbb
je
mov
out
testl
pop
pop
lea
push
sti
mov
test
aaa
cmpsl
mov
stc
inc
nop
sub
xlat
xor
jb
jo
xor
inc
xlat
js
lods
pop
adc
dec
cmpsb
mov
xlat
jbe
adc
push
xchg
pusha
cmpsl
cmpsl
mov
out
and
pop
js
dec
jbe
mov
mov
dec
sarl
xor
mov
cmp
xlat
xchg
mov
mov
cli
out
das
fists
mov
mov
xchg
mov
mov
insb
mov
loope
movsb
jne
pop
dec
pop
test
in
shlb
bound
pop
stos
repz
imul
mov
sbb
int3
arpl
add
int
lret
adc
hlt
xor
iret
mov
xor
or
cli
movsl
dec
dec
sub
mov
pop
cmp
stos
std
dec
jo
lret
inc
dec
shlb
lret
ss
and
xchg
ret
mov
mov
cmpsl
cmp
push
mov
or
mov
lods
inc
hlt
incl
sar
jae
into
shrb
xchg
mov
and
bound
push
idivl
jbe
ss
and
xchg
mov
push
add
jmp
xadd
and
push
in
jmp
cmp
repz
jle
jbe
pop
and
mov
cmp
fnsave
or
fdivrs
fsubl
cwtl
push
inc
dec
xor
pop
pop
or
out
xlat
out
stc
jne
or
movsb
stos
fdivrs
loopne
lods
ss
data16
fstp
leave
cmpsb
push
push
cmp
stos
pop
inc
call
test
daa
frstor
mov
sar
addr16
stc
out
lock
jle
adc
mov
lea
repz
add
push
dec
jmp
inc
es
mov
in
outsl
hlt
test
mov
repz
xor
jnp
scas
lods
mov
xor
cmpsb
mov
sti
add
mov
mov
int
test
xlat
divb
add
cmp
daa
fistl
adc
je
lret
lret
outsl
pop
jne
aam
xchg
imul
lahf
adc
clc
inc
jge
sbb
mov
loop
dec
lock
jecxz
daa
xchg
into
cld
dec
lahf
lahf
pop
xor
xchg
repz
ja
xchg
push
setl
sub
ss
mov
pop
xor
scas
or
cs
xchg
jl
clc
aas
pop
std
out
fldenv
cld
repz
mov
pop
outsl
cmp
inc
call
popa
and
sbb
sub
arpl
xchg
mov
cmc
cmp
cmpsb
push
cmpsl
xchg
sbb
in
jbe
cmp
cld
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
pop
inc
mov
sbb
mov
xor
xlat
imul
xor
add
and
lret
cmp
inc
pop
fistps
adc
sub
loopne
fmulp
xor
push
push
jge
mov
mov
jno
lea
add
push
insb
hlt
jno
dec
mov
shlb
xor
ljmp
or
arpl
adc
aad
xchg
sar
add
sub
lea
je
or
rcrb
mov
inc
add
inc
mov
mov
rcrl
repnz
in
int3
pop
mov
and
adc
rcll
push
xchg
shrb
loopne
jg,pt
lods
movsl
push
aad
or
lretw
cmp
int3
mov
stos
cld
gs
cmp
adc
fdivl
pop
addr16
or
shr
xor
insb
scas
or
sbb
push
and
push
cmp
pop
adcl
mov
adc
sub
xor
pop
push
add
scas
dec
inc
imul
rorb
xchg
addb
shl
or
push
lea
shll
dec
bound
jecxz
gs
jge
dec
add
std
scas
jnp
popf
movsl
lcall
mov
popf
mov
icebp
cmpsb
loope
mov
insl
mov
xchg
daa
fisubrl
repnz
aaa
lods
jns
mov
cltd
jecxz
or
mov
rclb
fcmovne
mov
mov
out
jmp
push
aam
dec
mov
push
mov
js
jmp
xor
inc
push
xchg
in
lods
jmp
add
or
sbb
sbb
sti
popa
xorb
ja
or
push
ljmp
je
push
pop
fnstenv
sub
inc
leave
out
rcll
push
imul
push
mov
and
iret
push
dec
shrb
mov
fbstp
mov
dec
cmp
dec
sub
add
shl
or
dec
pop
push
call
stc
cwtl
mov
pop
mov
gs
test
fstpt
outsb
incl
push
adcl
movsl
sbb
test
lds
xor
aaa
mov
mov
push
jne
or
xchg
cmp
jno
inc
mov
aaa
xchg
dec
push
nop
pop
sbbb
sub
pusha
mov
mov
jns
aas
mov
orl
xor
fstpl
xchg
xchg
pop
xlat
fwait
iret
sbb
pop
mov
push
cmp
lods
out
xchg
adc
xchg
inc
mov
lret
mov
mov
and
xchg
iret
ljmp
pop
sub
iret
gs
push
or
push
popa
sub
inc
push
lods
lahf
je,pt
push
das
pop
daa
in
mov
pop
aad
fsubrs
shrb
mov
inc
shrl
sti
repnz
dec
pushf
icebp
fmul
xor
mov
sub
mov
add
das
xchg
icebp
mov
push
pushf
mov
test
in
push
xor
add
js
adc
pop
cmp
dec
std
sbb
data16
sbb
and
jl
insb
pop
arpl
mov
cmp
inc
jecxz
idiv
xor
mov
push
outsb
stos
ss
and
cltd
sub
or
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
icebp
ss
fbstp
jecxz
call
decl
push
adc
mov
outsl
pop
ljmp
je
xorl
or
and
pop
sahf
push
xchg
jnp
cmp
fstps
insl
xchg
dec
sarl
fimull
or
push
push
scas
insb
sbb
stos
dec
pop
cmp
cmpb
inc
cmp
jns
out
stos
sub
cltd
jle
sub
add
cwtl
sub
shlb
aad
scas
pop
pusha
icebp
imul
xchg
in
xor
stc
fbstp
rorl
ja
jg
fs
mov
xor
std
add
daa
add
mov
mov
jmp
or
jle
jmp
aad
mov
call
dec
push
lods
jge
fsts
push
push
adc
inc
aaa
test
rcrb
and
add
aad
push
inc
insl
or
cmp
jb
loopne
add
jne
jno
insb
gs
sbb
inc
pop
repz
push
jbe
or
les
test
notl
dec
and
mov
mov
pop
push
cmp
mov
pop
jmp
scas
jb
push
loope
mov
jae
arpl
mov
movsl
jmp
mov
jne
pop
push
cmp
xor
shll
cli
cs
cmc
lock
jge
pop
mov
xor
and
mov
cmpsl
aas
popl
ja
scas
xor
int
loopne
or
jbe
dec
dec
inc
stos
push
dec
mov
pushf
mull
xor
jle
jge
clc
fmull
insl
push
mov
jbe
fcompl
add
movsl
mov
pop
dec
pop
ret
fs
jle
and
sbb
aad
shll
shlb
popa
pop
push
xlat
add
and
mov
push
xchg
daa
aaa
sbbl
xor
pop
inc
mov
jle
int3
sbb
shlb
pop
xlat
pop
xchg
sbb
xor
insb
cmc
fnstenv
stos
push
push
dec
dec
out
pop
dec
lret
or
mov
aas
inc
icebp
int3
xor
int3
mov
in
in
mov
xchg
testl
rclb
into
inc
xor
arpl
cwtl
cmc
push
mov
add
adc
pop
les
enter
out
xlat
jmp
or
cs
sbb
mov
adc
leave
mov
sahf
aam
shl
sbb
mov
pop
sub
lahf
cltd
mov
add
xchg
shr
add
and
and
jmp
pop
and
dec
aaa
mov
out
in
dec
mov
pop
sbb
lock
out
dec
dec
jns
pushf
inc
gs
or
orl
pop
ss
xor
lods
xchg
gs
add
sbb
iret
mov
hlt
and
xchg
xchg
cmp
call
and
and
lret
roll
std
xor
sub
lcall
cmpl
push
dec
and
aaa
insb
mov
adc
les
es
xlat
mov
out
fwait
notl
and
imul
movsb
sbb
and
adc
clc
into
movsl
ljmp
into
mov
imul
jno
dec
cmp
outsl
cmp
repz
sbb
into
cmp
inc
add
dec
xlat
notl
or
rolb
sbb
rcll
lret
out
add
ja
jbe
popa
mov
sbb
jg
cmp
adc
sbb
and
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
and
jns
sub
data16
popa
shlb
jg
jmp
dec
cs
dec
ss
jecxz
mul
xlat
in
mov
mov
js
cmp
cmpsb
stos
stos
pop
lea
sbb
and
adc
mov
or
cmc
mov
jbe
stc
sbb
push
mov
lods
rolb
popf
imul
cld
mov
test
ret
sub
leave
push
dec
xchg
jb
cmp
loope
pop
jne
and
movsl
je
mov
jmp
dec
shlb
jae
addr16
aaa
aad
notb
dec
aad
mov
and
addr16
xchg
xor
xchg
ret
mov
das
add
push
pusha
or
movb
dec
pop
out
in
mov
int
add
nop
jne
cmp
adcb
xchg
cmp
lret
mov
adc
leave
sub
inc
mov
decb
adcb
ficoms
or
mov
push
jae
and
jp
test
not
xchg
sub
jmp
daa
hlt
lock
stos
and
jbe
aas
add
std
movsb
sub
outsb
push
sub
sub
mov
into
cmp
scas
je
inc
test
jmp
out
shlb
lcall
inc
adc
xor
icebp
ds
mov
or
lahf
movsb
mov
mov
push
cld
leave
inc
loope
inc
push
xorl
cld
add
mov
lcall
lods
data16
cmp
mov
into
loopne
out
sahf
xchg
shll
dec
sub
pusha
ds
ljmp
pop
test
push
cmp
pushf
mov
repnz
and
rorb
and
ret
test
into
dec
xchg
mov
jecxz
cmp
inc
or
mov
sub
push
cmp
pop
mov
inc
dec
loopne
add
mov
cmc
dec
icebp
inc
cmpsb
add
lret
or
daa
sbb
out
outsb
or
les
cwtl
popf
ficoms
mov
rcrl
mov
mov
loope
sbb
cmp
mov
mov
pusha
and
dec
mov
daa
jae
inc
xchg
fwait
jae
adc
mov
cmc
inc
add
or
cli
xlat
inc
jbe
jl
jmp
mov
and
or
xchg
cltd
inc
or
lods
clc
inc
mov
jge
data16
das
and
es
or
push
clc
divb
outsb
push
jo
fnstcw
pop
mov
incl
adc
fstpt
andb
adc
insb
inc
mov
fnstenv
and
jmp
pop
int
lret
mov
arpl
cmpsl
or
dec
push
sub
xchg
add
shlb
sti
jg
fistpl
cli
mov
out
scas
dec
sub
xlat
dec
ret
jbe
in
push
fbld
jne
dec
je
stc
scas
sti
adc
aas
jno
subl
mov
test
jecxz
dec
ret
pop
nop
jl
dec
iret
addr16
or
rcl
push
jmp
divl
pushf
out
scas
xorl
roll
ljmp
mov
xchg
rcl
adc
in
xchg
into
jne
cmpsl
bound
xchg
cmpsl
loope
xor
leave
fmuls
pop
ja
jecxz
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
out
mov
sahf
adc
sbb
mov
or
and
mov
xorl
push
jg
out
cmp
and
add
sti
dec
dec
and
lods
sbb
pushf
lods
mov
lret
jno
fnsave
add
push
fldl
xchg
ljmp
cli
outsb
loope
cmp
dec
add
inc
pusha
push
loopne
outsl
sbb
pop
adc
dec
test
gs
pop
loope
out
jb
loop
sub
or
mov
dec
call
sub
push
ficomps
paddsb
decb
sarl
movsb
adc
repnz
sub
je
cli
sbb
cmp
or
lock
sub
data16
cmp
test
and
cmp
mov
push
arpl
aaa
mov
in
jnp
mov
test
adc
push
ret
or
mov
adc
mov
dec
repz
push
and
mov
movsb
sbb
das
cmpsl
cmp
mov
repz
xor
fidivs
pushf
xchg
call
or
adc
aaa
sub
cwtl
jne
cmp
nopl
add
je
loop
scas
xor
push
pop
cmpsl
lret
cmp
pop
icebp
mov
int3
outsb
fcmovb
fbstp
mov
call
jno
jg
shrl
inc
call
scas
in
mov
outsl
stos
movsb
and
dec
aam
sbb
cmp
into
lea
nop
or
fistpll
mov
mov
pop
xor
mov
and
cwtl
or
out
and
jns
inc
pop
outsl
mov
jns
push
ds
jae
xchg
push
add
xchg
pop
push
lods
jmp
insb
ja
sbb
push
imul
and
xchg
aam
adc
mov
sahf
ret
pop
dec
cwtl
ljmp
and
jbe
test
cmc
inc
sti
pushf
mov
je
out
test
scas
xchg
call
scas
orl
and
inc
insb
ret
and
ficoml
pop
repnz
jnp
pop
push
and
push
pusha
icebp
faddl
add
pop
pop
rorb
xor
sub
dec
in
addl
mov
sub
mov
cmp
jecxz
std
ret
clc
add
sbb
or
insl
outsl
lock
and
scas
shl
sub
repnz
lcall
jecxz
or
repz
popf
aam
icebp
ror
mov
and
inc
orl
inc
inc
loope
inc
jp
sbb
stc
fbstp
xchg
jo
push
cmp
mov
pop
ja
out
or
sub
push
dec
push
push
ficoms
sub
ja
les
data16
jbe
xchg
and
clc
lret
incb
sub
sub
inc
das
jb
mov
je
mov
iret
dec
loopne
je
mov
mov
je
push
jns
cmp
inc
stos
movsl
mov
add
push
and
dec
cs
aam
sbb
insb
cmp
dec
test
pop
sbb
lea
int3
or
sub
mov
iret
insb
into
xor
icebp
lods
leave
dec
adcl
add
enter
add
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
outsb
and
mov
sahf
adc
sbb
das
scas
idivb
dec
aaa
movsb
aas
adc
mov
stos
or
std
push
movb
cmp
or
xchg
cmp
lds
outsl
cmp
mov
ss
fstps
add
and
insl
into
mov
xchg
test
cmp
imul
stos
outsb
mov
push
ja
mov
push
jecxz
jnp
add
fdivrl
imul
test
dec
jge
mov
push
adc
cmp
dec
xor
xchg
cwtl
fnsave
mov
fisttps
sbb
outsb
decl
and
fmuls
sbb
jae
mov
shl
or
xchg
loop
lcall
mov
jmp
lret
dec
ljmp
and
add
jecxz
sbb
or
mov
push
dec
dec
fildll
dec
sub
aaa
cmp
dec
clc
mov
xchg
sub
mov
les
mov
mov
fcomip
fdivrs
and
fidivs
addr16
addr16
cmp
icebp
aam
push
mov
cli
add
adc
movsb
lret
mov
sub
lods
jmp
mov
and
lock
mov
sub
popa
fimull
imul
std
jmp
and
notl
sbb
outsb
push
scas
push
mov
inc
std
out
jns
popa
adc
iret
das
sub
jae
arpl
enter
enter
loope
sti
dec
test
xor
cmpsl
pop
clc
out
push
mov
mov
fstpl
in
scas
xchg
jg
popf
jb
test
test
push
cwtl
sti
sub
jp
lods
cmp
in
loop
push
dec
in
mov
mov
add
xchg
clc
mov
mov
iret
push
push
xchg
outsl
xchg
sbb
jle
idivb
repz
adc
test
jmp
jo
jb
subl
inc
fxch
test
iret
sbb
loop
sub
and
mov
cmpsb
in
shll
pop
ret
jno
andb
inc
fcmovnb
cmc
leave
fnstsw
loop
sbb
jp
sub
add
test
int
fs
das
mov
add
das
subl
outsb
mov
call
sarl
dec
es
cmpsb
jne
test
mov
les
add
test
push
jmp
sbb
jno
adc
in
pusha
jle
sub
mov
nop
stos
push
imul
xor
pop
jg
cmpsb
xchg
jl
or
jo
sub
xor
fcomps
lods
outsb
and
push
sbb
aaa
jecxz
dec
fwait
pop
dec
data16
mov
lods
inc
xchg
es
jb
pop
adc
lahf
test
cmpl
xchg
int3
lcall
sbb
in
add
sti
sub
in
stc
xchg
test
sbb
in
and
xchg
inc
and
into
mov
lahf
popa
cmpsb
mov
call
cltd
push
xchg
push
dec
imul
es
ja
in
xchg
inc
push
and
mov
ret
sub
xor
lret
stos
cld
outsl
or
fbld
popf
mov
popa
mov
jbe
cs
outsl
ret
in
cmp
fisttpll
push
dec
lods
inc
fstp
sub
xor
push
movsb
inc
push
dec
in
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
out
adc
sahf
adc
sbb
xchg
sub
cmp
cmp
jle
psrlw
aas
cmpsb
dec
test
jnp
push
mov
je
lock
test
int
imul
fsubrs
lahf
enter
test
sub
jne
cld
call
mov
jbe
movsl
sbb
jmp
push
out
icebp
xchg
mov
push
sbb
repz
sbb
sahf
cltd
pusha
rcr
jmp
clc
dec
and
xchg
inc
sbb
mov
idiv
loop
out
sbb
cmp
mov
push
mov
fs
xchg
jnp
scas
jge
or
fbstp
nop
aam
aaa
xchg
xor
xor
adc
in
popf
pop
push
clc
iret
sbb
data16
addb
push
or
call
loope
mov
xchg
push
fnstsw
push
push
call
xchg
rclb
movsb
test
inc
cmp
pop
roll
sbb
sbb
mov
or
dec
mov
js
call
dec
cmp
inc
insb
scas
test
or
dec
lock
or
pop
push
mov
out
lea
mov
sbb
loope
std
inc
jg
xor
lcall
jb
fs
loope
xor
out
mov
outsl
and
mov
cmp
enter
fwait
shlb
int
jg
test
movsl
sti
iret
or
and
cmp
add
or
lods
adc
pop
xchg
push
mov
aaa
mov
aaa
cmpsl
ds
sbb
adc
enter
xor
outsb
das
cli
mov
popa
fisubs
push
aad
data16
lcall
icebp
and
jb
push
aas
mov
push
leave
push
push
or
jb
inc
dec
pop
mov
dec
jno
pop
les
sub
test
jg
xor
push
sub
mov
and
or
push
imulb
jo
adc
ret
push
jno
stos
pop
push
jbe
lcall
jecxz
mov
pop
scas
sarl
outsl
imul
fidivl
cli
mov
xchg
movsl
or
cmc
pop
in
fnstcw
shll
lret
add
cltd
cmp
in
movsl
mov
push
cmpsb
sub
or
dec
loopne
fs
loopne
sub
fbstp
test
push
fists
xorb
in
mov
or
jno
add
xor
cmpsb
cld
test
out
fstpt
aad
imul
pop
insb
outsb
out
aas
xor
dec
mov
insl
ret
jmp
lock
cld
lahf
fucomp
clc
pop
fistps
sub
add
push
push
jl
fdivrs
sub
das
testb
adc
mov
pop
xor
mov
lcall
idivb
or
pop
xchg
test
dec
lret
rcrb
push
mov
jp
into
test
in
or
shrw
adcl
out
inc
push
pop
cwtl
mov
iret
cmpl
jg
dec
lods
mov
cmpsb
lcall
and
cmpsb
xchg
sbb
adc
adc
sub
arpl
ret
xor
sub
mov
mov
addr16
icebp
add
cld
lods
cmpsl
fptan
mov
insl
leave
aas
push
aas
push
sub
pop
mov
xor
and
inc
popa
adc
in
stos
jns
lds
pop
test
inc
int3
jmp
repnz
jmp
imul
pushf
pop
jle
fcoms
popf
jne
sbb
loope
daa
xor
fistpl
jg
push
inc
jns
rorb
bound
push
push
arpl
mov
idivb
cmp
ret
cltd
xor
aad
fldl2t
or
push
or
dec
mov
loop
add
cmpsl
rcr
popf
jbe
shll
push
aad
xor
mov
xchg
or
add
sub
xlat
int
sahf
cmp
fidivs
cmp
xor
lret
lret
or
fldenv
dec
arpl
sti
dec
movb
add
test
fidivl
push
leave
int3
lahf
cmpsl
lods
ficoml
jb
pusha
stos
jne
inc
pop
fstpl
push
fistl
jmp
mov
adc
out
adc
hlt
pusha
mov
push
xchg
fcmovnb
push
mov
dec
std
pop
ret
pop
fsubrs
push
xor
jns
popa
jnp
rclb
aaa
decl
in
cmp
lcall
fsubrs
jge
mov
mov
mov
rolb
out
dec
movsl
mov
stc
or
push
ret
mov
enter
out
sub
cmpsl
lahf
popw
dec
pop
inc
or
xor
adc
push
out
int
dec
xchg
sub
in
or
out
fstpt
lea
inc
mov
inc
hlt
fistpl
insb
xor
cwtl
xchg
and
mov
jp
sahf
xor
mov
add
jae
sti
or
mov
fwait
cmpsb
cli
daa
cmp
icebp
pop
push
ret
mov
inc
jae
xchg
pop
or
fisubl
mov
outsb
std
and
sbbb
cmp
mov
or
cs
popa
in
imul
jne
push
int3
xor
iret
jb
js
cmp
pop
pusha
gs
sbb
imul
xchg
mov
and
sub
or
loopne
cmpsl
push
sbb
pop
jp
into
imul
test
pop
outsb
stos
stc
jle
rcrl
in
repnz
arpl
cmp
lret
sbb
inc
push
fldt
dec
jns
out
jno
add
cltd
jl
pushf
das
orps
xchg
sbbl
add
andl
hlt
cmp
push
push
mov
xor
cmp
push
or
lods
dec
rol
sub
out
outsb
mov
cmpsl
inc
call
addl
dec
sbb
mov
xchg
rolb
popa
or
dec
mov
cmp
imul
sbb
jno
push
in
iret
fstps
loop
xchg
dec
dec
std
rorl
cmp
imul
repz
mov
push
pop
inc
dec
cwtl
insb
add
pop
mov
sub
les
xchg
mov
leave
sahf
cld
add
data16
sbb
mov
dec
mov
stc
pop
sub
pop
in
xor
shl
mov
push
adc
adc
push
mov
ret
sarl
add
push
aaa
ljmp
mov
ljmp
hlt
fcoml
lret
add
jbe
rcrl
cmpsl
inc
mov
int
fdivs
paddusw
gs
add
mov
xchg
inc
jnp
scas
mov
mov
cmpsb
arpl
pop
je
fcoms
cvtdq2ps
and
sahf
cwtl
fidivs
fdiv
ret
jmp
push
scas
pushf
push
xchg
ror
xchg
idivb
jecxz
cli
fidivs
cld
or
dec
int3
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
sahf
adc
sbb
dec
loope
push
int3
nop
mov
adc
adc
je
cli
ljmp
lret
add
stc
push
repnz
mov
fsubrp
scas
adc
lods
in
inc
adc
xchg
mov
add
jp
push
cmp
sbb
pusha
andl
mov
push
enter
fistpl
rolb
lods
out
xchg
insb
mov
enter
mov
lods
lret
push
inc
popa
call
vmwrite
mov
push
sub
push
mov
adc
xchg
loop
sti
or
cwtl
mov
add
sbb
mov
and
daa
mov
aas
ds
or
pop
in
lret
cmp
cli
mov
lods
cmp
ret
add
pop
or
rorl
rcrl
ljmp
lret
mov
imulb
xor
in
xchg
es
rorb
xchg
fmull
dec
bound
pop
mov
clc
sub
mov
loop
jp
sub
jae
cs
cs
push
sarb
movsl
or
shl
pop
popf
daa
dec
ljmp
movsb
daa
jbe
pop
sahf
jnp
push
inc
pop
xor
int3
cmp
testb
movsl
outsb
pop
mov
adc
cmp
sarb
push
sahf
cmp
mov
notb
add
ja
nop
dec
jne
cmp
pop
pop
add
mov
ss
ja
ret
ret
pop
imul
cmp
out
dec
jb
mov
sbb
adc
xlat
ljmp
inc
ret
xchg
imul
adc
into
inc
xlat
inc
xchg
push
popl
hlt
mov
mov
fcmovu
xor
pop
aam
xchg
int
xor
push
pop
add
lret
out
scas
adc
js
mov
or
lcall
int3
or
dec
stc
xor
pop
andb
in
popf
push
pop
adc
or
sbb
fldt
popf
xor
sub
lea
xchg
cmp
inc
adc
arpl
jbe
cmpsb
mov
mov
mov
inc
aas
xchg
ret
adc
jae
cmp
lret
insl
inc
ds
int3
xchg
adc
repz
ja
xchg
lret
dec
jb
jo
mov
jle
jne
enter
adc
add
mov
rclb
push
inc
sub
ret
jecxz
inc
mov
cmpb
and
pusha
stos
mov
cmc
sahf
stc
inc
mov
out
lock
add
das
and
es
bound
pop
notb
inc
mov
js
je
mov
arpl
cmp
jl
daa
orb
inc
stos
movsb
sub
fildl
in
test
ds
xor
mov
jecxz
dec
add
mov
mov
into
sbb
shrl
push
mov
xchg
and
add
or
push
xor
ficompl
ljmp
pop
mov
test
sbb
outsl
xchg
leave
ss
xchg
iret
mov
out
add
xchg
add
and
pop
in
mov
adc
sub
and
cwtl
test
aaa
fdiv
std
outsb
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
out
test
sbb
sahf
adc
sbb
fucomip
push
out
dec
inc
aaa
ljmp
nop
adc
rorb
push
push
fwait
test
add
push
or
jo
push
and
xor
into
sarl
or
sub
mov
jmp
mov
lcall
push
pop
hlt
scas
iret
mov
imul
test
push
lcall
iret
sub
popf
andl
add
add
dec
je
add
mov
cmpsl
adc
dec
sarl
dec
sbb
add
rcrl
dec
inc
aas
arpl
aaa
adc
sbb
cmp
xor
push
xchg
ficoms
jle
cwtl
out
ljmp
call
xchg
pop
std
and
mov
sbb
xor
test
pop
add
cmp
in
shl
mov
idivb
fcompl
jg
or
mov
and
outsl
insl
sub
mov
cmp
pop
popf
cmp
pop
lds
rolb
loop
outsb
push
jecxz
popa
inc
add
xchg
jp
imulb
push
fldl
add
insl
lahf
xchg
out
arpl
test
mov
loop
xchg
pop
add
xchg
xchg
mov
into
movsl
loop
mov
xchg
inc
je
jae
adc
mov
xchg
into
inc
ljmp
and
mov
lcall
cmp
adcb
inc
xchg
fbstp
inc
insb
xor
gs
and
loop
call
inc
mov
push
aad
pop
roll
mov
cmpsb
dec
lcall
xchg
fnstcw
pop
jmp
hlt
popf
mov
add
sbbl
je
mov
xchg
inc
sbb
inc
gs
xor
mov
or
sahf
imul
fst
aaa
hlt
std
adc
adc
pop
jns
movsb
mov
pop
mov
add
das
in
dec
divl
adc
test
sbb
test
movb
sub
je
fdivr
jp
cmp
xchg
rcrb
fcmovne
cmpsb
cli
sbbb
adc
or
shrl
mov
push
or
xchg
xchg
push
fsts
push
sub
nop
aam
xor
in
push
mov
xchg
and
and
je
inc
repnz
dec
outsb
sbb
sahf
jo
xchg
loope
test
call
jbe
push
push
lock
movsl
leave
jge
leave
pop
rcll
sub
lretw
cltd
adc
xchg
arpl
pushf
sub
sbb
inc
jae
inc
dec
jb
pop
into
sbb
std
push
mov
or
jmp
dec
and
cmp
push
xor
pop
sbb
mov
daa
aas
sbb
hlt
mov
jns
cmpsb
sub
inc
jo
jp
enter
js
popa
lea
cwtl
lahf
mov
in
fnstcw
and
sub
inc
push
sub
mov
out
pop
sahf
loopne
mov
sahf
popf
fwait
inc
mov
movb
push
mov
aam
push
sub
sbb
jnp
dec
stos
outsb
dec
mov
jle
lods
popaw
adc
daa
insb
outsl
out
push
testb
out
dec
pop
push
mov
add
call
xchg
and
mov
ljmp
stos
fisubrl
ss
cmc
imul
dec
je
push
test
dec
mov
out
lret
out
mov
dec
mov
push
cmp
lcall
les
xchg
xor
pushl
jmp
add
add
movsb
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
or
into
adc
pop
xchg
popa
fdivrp
aas
mulb
adc
cmp
daa
mov
dec
iret
out
cli
iret
frstpm(287
push
testb
jmp
mov
pop
popa
mov
cmp
arpl
inc
in
lret
movsl
adc
xchg
andb
repz
mov
mov
jae
dec
cmp
pop
in
cmp
xchg
xchg
push
push
lret
and
xchg
jnp
enter
insl
call
and
jge
xchg
in
fnstcw
js
inc
dec
hlt
xor
mov
or
popa
mov
jmp
or
rol
pop
cmp
xchg
sbb
push
leave
sbb
xorl
xor
paddw
call
inc
adc
lahf
lahf
mov
or
xor
xchg
in
xchg
and
jbe
or
les
jb
dec
jp
pop
es
scas
hlt
pop
jo
fisubrs
push
pushf
pop
mov
xchg
pop
movsl
repnz
jmp
push
insb
jmp
add
ja
loopne
jge
mov
popa
jp
mov
push
push
lret
push
dec
xchg
mov
int
push
fwait
das
lret
mov
jg
pop
push
or
fisubs
sub
sub
cmp
xorb
adc
fdivrs
sbb
sub
add
push
push
sub
shl
in
lcall
ds
push
jbe
fildl
sahf
insb
movups
mov
std
ljmp
sbb
out
popf
push
outsl
or
adc
std
add
fistl
imul
mov
aaa
xor
movsb
push
dec
push
jmp
test
into
pop
jb
sbb
fdivl
pop
fistpl
pop
dec
dec
push
mov
mov
negl
repnz
hlt
add
dec
jo
add
shr
mov
mov
or
fs
aad
popa
adc
js
and
pop
pop
jo
sub
aaa
jo
shll
cwtl
pop
xchg
insb
xchg
dec
das
loopne
mov
insl
push
push
fwait
xchg
hlt
out
adc
rolb
pop
push
in
mov
in
inc
shr
mov
sub
cmpb
imull
fldt
adc
stos
fwait
xlat
pop
or
test
fwait
lea
mov
mov
sub
inc
into
push
mov
hlt
adc
pushf
mov
jmp
pop
sar
repnz
fdivrl
in
xorl
mov
push
adc
push
or
mov
pop
das
mov
scas
mov
je
loop
pop
push
push
sub
int
sahf
or
or
xchg
jmp
mov
stc
imul
xor
sub
xchg
xchg
sarl
dec
cmp
xchg
add
cwtl
push
cltd
dec
or
stos
imul
jns
pop
es
sti
je
popa
in
xor
mov
mov
int
sbb
cli
dec
mov
mov
cmpsb
stos
add
mul
add
and
pop
insb
insl
shlb
dec
mov
out
test
lahf
out
cmp
outsb
loopne
ss
push
pop
xlat
sahf
sub
data16
or
jge
jl
out
fisttpll
adc
dec
cmp
out
data16
into
cltd
iret
adc
in
rcll
mov
push
insb
mov
mov
jmp
pop
jno
mov
xchg
dec
mov
sbb
lcall
push
jmp
ret
shl
mov
mov
stos
icebp
pop
jle
cmp
fs
pop
sarb
sahf
test
jmp
cmpsl
push
mov
mov
add
dec
in
in
and
push
adc
mov
jp
lock
jnp
xchg
int
fnstsw
out
bound
aad
ja
jge
shlb
mov
psubsb
incl
mov
adc
imul
ds
inc
mov
lods
mov
mov
aad
pop
mov
je
jg
xchg
and
mov
lahf
ss
push
adcb
adc
mov
inc
xchg
test
jb
mov
jno
jno
loope
xchg
ret
xlat
jecxz
sarb
cmp
xchg
jne
dec
data16
mov
test
and
mov
lret
mov
mov
sbb
pusha
xor
mov
cwtl
mov
cmp
mov
sub
int
jae
cmp
inc
mov
lcall
jo
mov
sahf
lock
mov
mov
cmp
push
inc
arpl
mov
in
add
jle
push
mov
dec
and
movsl
xchg
cmpsl
pop
sbb
out
mov
bound
out
out
xchg
jmp
and
inc
fmull
fldl
pop
pop
push
lret
testb
push
lods
rcrl
sub
jns
jb
and
xchg
push
inc
jns
xchg
sub
mov
jg
mov
fiadds
aad
dec
jno
fbld
dec
mov
lahf
in
push
jl
test
mov
add
js
repnz
or
inc
and
outsl
sbb
mov
mov
mov
mov
add
repnz
call
scas
push
int
sti
xor
fdivrs
jno
push
into
mov
fiaddl
sub
add
xor
fcoms
jo
xor
inc
and
add
or
jmp
imul
pop
call
mov
and
mov
push
push
adc
lods
or
sbb
dec
loope
imul
test
push
pop
or
jmp
pop
loope
into
push
les
lods
jmp
push
cld
sbb
test
jno
or
mov
cmp
aam
xchg
loopne
add
cld
inc
inc
enter
dec
aad
mov
sbb
cmp
mov
dec
mov
rcrb
push
jge
les
inc
xlat
pop
inc
xchg
cmp
pop
xor
rorl
fcmovnb
subl
and
jnp
addl
test
fimuls
movsb
adc
inc
les
dec
push
outsb
aam
dec
dec
fmuls
inc
add
ret
jecxz
dec
cmp
xchg
xor
fnstenv
outsb
das
jg
adc
mov
mov
rorb
pop
xchg
popf
je
cltd
xor
push
mov
mov
addr16
pop
lret
add
outsb
push
push
sbb
ret
cwtl
cmp
and
loop
repz
repz
decb
stos
repz
in
adc
out
es
and
jg
xchg
clc
mov
xchg
bound
xor
movsb
sbb
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
mov
jl
push
sbb
sahf
adc
sbb
fistl
inc
shlb
mov
clc
jl
fs
inc
cmp
out
and
dec
insb
sahf
sub
fs
callw
mov
xorb
lods
xchg
and
fwait
lahf
imul
jl
shl
add
mov
jp
stc
or
cmp
ret
xchg
sbb
jne
mov
rolb
xchg
loopne
popf
inc
aam
outsl
loope
push
jg
pop
add
xorb
jns
shll
jmp
mov
lods
cmpsb
and
rcrb
sbb
into
add
lds
cwtl
pop
outsb
and
and
xchg
add
pop
dec
jp
add
pusha
mov
cli
mov
test
add
mov
add
loope
cmp
mov
push
push
in
enter
pop
std
lock
sbbb
mov
and
test
pop
jbe
xchg
jmp
test
andb
add
xchg
inc
stos
or
dec
sub
cld
sar
lods
das
scas
cmp
pop
jnp
iret
sbb
or
daa
fstl
in
push
cmpsl
scas
mov
imul
das
fstpl
insb
inc
and
fsubrp
fsubrs
cli
add
mov
sbb
aam
hlt
popf
in
std
rcrb
add
xor
shll
stos
bound
push
stos
add
icebp
leave
pop
cmp
push
sbb
xchg
out
in
ja
test
icebp
mov
mov
call
dec
mov
clc
int
jle
dec
pop
lcall
jl
cmpl
mov
mov
push
adc
enter
xchg
lret
jle
xchg
into
pop
inc
lret
adcb
sbb
dec
icebp
test
xor
dec
arpl
movaps
cmc
mov
pop
jp
sub
xor
push
sub
push
lret
lea
ret
mov
or
orl
cmp
push
push
mov
adc
cmpsb
jp
test
lret
mov
push
movsb
mov
jno
jb
stos
test
and
jge
lods
adcb
mov
sub
mov
in
push
dec
movsl
sti
stos
push
das
enter
add
ret
pop
mov
es
pop
or
jb
sub
inc
jnp
sub
jns
push
xorb
inc
lods
mov
and
dec
mulb
add
sbb
xor
test
enter
scas
cld
daa
test
and
and
outsb
sbb
nop
mov
xor
sub
mov
out
or
jae
mov
cs
sti
popf
push
jmp
jae
dec
jbe
mov
sti
rcrb
jecxz
shll
dec
das
lret
cmp
scas
jne
cld
aad
cmp
mov
jecxz
sub
jae
lahf
pop
insb
mov
inc
or
pop
mov
mov
pusha
enter
pushf
xor
inc
decb
cmpxchg
add
jecxz
fisttpl
js
dec
push
js
nop
push
inc
xor
es
inc
mov
inc
inc
cltd
xchg
and
xlat
into
addr16
or
pusha
mov
dec
les
scas
outsl
iret
xor
dec
add
outsl
sbb
pop
idivl
rorb
movsb
ret
rorl
add
add
and
sbb
dec
xchg
jle
dec
sbb
sahf
adc
sbb
lock
fldt
mov
adc
xchg
mov
sub
pop
fisttpll
ret
pop
mov
pusha
enter
lds
add
stos
mov
mov
fists
push
gs
mov
repz
hlt
dec
fdivr
pop
jno
and
fstl
push
xchg
dec
jae
adc
inc
mov
xor
jns
out
mov
test
sahf
or
sbb
lret
call
cli
dec
out
mov
cmp
sbb
shll
jg
leave
push
xchg
xchg
lds
push
mov
xchg
outsb
ds
pop
pop
loop
aam
add
pop
inc
sbb
xchg
mov
jnp
arpl
sbb
in
jae
mov
enter
dec
test
pop
stos
xchg
add
sub
test
mov
adc
pop
scas
push
mov
sbb
xchg
add
iret
fiadds
ficoml
in
add
xchg
push
arpl
mov
mov
insb
loop
fadds
mov
aam
jmp
push
mov
loopne
pop
inc
xchg
mov
jl
cmpsl
loope
mov
addr16
and
xchg
cmp
xchg
and
sbb
mov
cld
daa
sub
aas
loopne
adc
mov
cltd
pusha
mov
sbb
xchg
lods
adc
sbb
or
call
fiadds
ja
stos
into
icebp
and
fsts
roll
mov
xor
mov
sbb
or
mov
cmp
and
lea
aam
inc
jmp
aas
outsl
xchg
icebp
or
out
int3
mov
pop
cmp
push
and
xor
std
mov
in
sbb
jg
xor
xchg
stos
cltd
ja
loope
imul
les
cmp
int3
and
jmp
test
lahf
fwait
sub
popl
xchg
stos
add
scas
cmp
gs
or
sbb
jg
xor
out
xchg
sbb
sub
imul
push
pop
popf
stc
inc
add
lret
int
jle
and
mov
out
or
hlt
jbe
test
cmc
loopne
xchg
and
fwait
pop
aam
outsb
cmpsb
lret
xchg
mov
xchg
xchg
cli
enter
jb
inc
inc
fisubs
notl
xchg
add
push
ljmp
cmp
jecxz
mov
mov
and
cmc
notb
push
test
push
add
imul
dec
aad
cltd
jnp
rep
cmp
pop
jge
repz
popa
or
pushf
fdecstp
push
outsb
cmp
add
data16
jno
dec
bound
push
lea
dec
test
std
popa
hlt
push
jno
call
shll
cmp
dec
lock
and
and
push
cs
mov
sbb
and
mov
adc
sub
dec
ret
mov
mov
testl
xor
pop
std
jo
test
inc
mov
das
outsl
inc
pop
adc
aam
or
or
mov
jnp
hlt
loop
inc
repnz
in
ret
das
xchg
cmp
inc
pop
push
pop
dec
mov
clc
fsubrs
and
dec
push
out
mov
push
leave
push
inc
inc
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
cwtl
jnp
inc
inc
sbb
sahf
adc
sbb
loopne
das
out
fiadds
ret
jbe
popf
push
into
pushf
adc
sarl
ret
daa
movsl
enter
sti
mov
std
push
lock
test
call
sbb
gs
sti
pop
xchg
addl
jo
cmp
hlt
hlt
test
aad
jne
sub
decl
bound
std
bound
ds
mov
adc
aam
mov
imul
sub
mov
int3
and
insb
pop
rcll
mov
lcall
inc
aaa
mov
aam
pop
push
push
pop
cmp
fistl
insl
insl
cmp
xor
dec
xchg
gs
mov
sub
sub
mov
leave
loope
mov
xchg
push
outsl
push
mov
js
andl
ret
cmp
call
mov
and
sub
adc
pop
aad
mov
jnp
xchg
cltd
iret
cmp
mov
sarl
in
and
pop
insb
push
ret
sub
fcoms
imul
adc
jl
scas
aam
in
sti
xchg
int3
enter
ds
pop
scas
jo
notb
psllw
mov
jae
dec
lods
pop
ror
add
inc
mov
in
jecxz
inc
push
mov
mov
jl
inc
or
inc
ljmp
pop
into
ret
sbb
test
jle
fsincos
arpl
gs
pop
jbe
test
mov
les
cmpb
xchg
push
inc
imul
cmc
xor
outsb
mov
add
xor
push
push
shll
mov
cltd
add
sub
dec
lahf
cld
mov
in
xchg
dec
dec
in
filds
jnp
daa
pop
xor
aaa
inc
sbbb
mov
daa
lcall
xor
repnz
jbe
testb
dec
imul
mov
mov
dec
outsb
pop
mov
or
inc
push
sarl
in
aaa
rcl
dec
repz
lahf
lods
xchg
imul
mov
insl
das
cmp
pop
call
inc
adc
push
and
int
ds
ds
push
icebp
push
adc
outsb
outsl
mov
mov
fwait
mov
das
xor
mov
leave
dec
stos
sti
cmp
inc
cmp
cmc
popa
sbb
mov
sti
fisubl
out
sbb
mov
pop
mov
int
xchg
fcos
ret
lods
mov
leave
pop
dec
hlt
add
sbb
ljmp
sbb
sbb
adc
pushf
ds
test
push
xchg
out
cmp
push
add
push
fildl
je
das
and
pushf
data16
push
mov
push
dec
mov
cmpsb
shrl
add
sub
xchg
es
les
sbb
xorb
insb
test
cmc
outsl
dec
xor
ss
mov
icebp
push
adc
aam
lea
lds
fisubrs
scas
add
jl
add
mov
shr
repnz
popf
jno
stos
ret
shlb
hlt
add
cmpsb
adc
test
sub
aas
mov
push
ds
repz
sub
aas
out
es
hlt
push
adc
cmp
and
push
mov
pop
sbb
call
add
js
dec
lcall
ja
mov
pop
scas
nop
push
xchg
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
push
cmp
sbb
aad
sub
shr
loopne
xchg
lret
idivl
loopne
in
enter
je
mov
cmp
into
sbb
lds
lock
shrb
lret
out
inc
or
aam
adc
push
jae
ss
hlt
push
dec
bound
mov
jle
dec
push
or
imul
icebp
jbe
mov
mov
lret
loopne
cmp
dec
int3
push
gs
dec
mov
ds
pusha
sbb
push
fsts
pushf
popf
and
sub
dec
cmpsl
je
sub
adc
sbb
pop
sub
sbb
stc
or
into
or
mov
push
in
hlt
into
mov
cli
call
sti
outsl
test
jb
push
inc
xor
les
or
mov
cld
or
push
test
dec
xchg
loop
jecxz
ret
divb
inc
cmc
popa
mov
adc
lods
adc
leave
cli
into
sbb
pop
mov
clc
push
mov
xchg
scas
push
scas
fldl
mov
aaa
ljmp
adc
ret
dec
adc
pop
int3
les
aas
inc
push
xor
cs
sub
cmp
pop
imul
mov
leave
inc
sub
jle
test
out
push
jge
les
out
pop
jne
movsb
mov
call
xchg
xchg
stos
mov
nop
and
mov
mov
leave
outsl
loopne
mov
jns
add
cmp
fsubl
lods
inc
mov
dec
sub
loope
inc
arpl
cmp
arpl
imul
sub
lahf
adc
push
andb
and
dec
xor
cmpsb
lret
pop
cmp
sbb
jb
cmpsl
xor
xchg
mov
addb
sti
mov
cmpsl
add
xchg
lret
or
pop
pop
ss
popf
arpl
push
mov
cmc
mov
lret
xor
rcl
out
add
xlat
mov
fwait
es
xchg
shlb
lock
fisubrl
je
jle
incb
inc
sub
mov
mov
fcomip
hlt
bswap
mov
adc
mov
mov
sbb
repnz
popf
mov
dec
or
mov
push
jmp
dec
push
xor
pushf
movsl
xchg
mov
pushf
jecxz
daa
psrld
mov
push
xor
pop
sub
sub
adc
pop
lret
dec
test
pop
jae
mov
mov
inc
fimull
es
aad
dec
or
repz
xor
insb
rcrl
add
inc
push
cmp
stos
in
mov
mov
cmc
pop
cld
adc
lods
lcall
test
push
sbb
loopne
mov
cs
ret
outsl
jne
sub
cmp
cli
loopne
push
pusha
lret
mov
sub
adc
mov
std
cmp
pop
test
mov
lods
fbld
pop
loope
jl
inc
jle
arpl
jmp
adc
inc
jae
fs
iret
mov
cmc
sarl
mov
ja
jecxz,pt
fs
mov
pop
push
or
cmpsl
pushf
pop
movsl
push
jecxz
cmpsb
lds
mov
or
jge
pop
cmp
adc
mov
xchg
push
int
or
bound
mov
popa
jae
orb
pop
pop
lcall
adc
rorb
push
nop
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
rcll
stos
push
xor
sbb
cli
adc
adc
lret
icebp
popa
lds
dec
xor
add
pop
imul
mov
sbb
cld
ret
jle
xchg
fisubrl
fists
jl
pop
sahf
out
jl
mov
pop
pop
jmp
inc
aam
ds
popa
or
repz
xchg
push
mov
pop
lock
call
dec
lea
push
popf
out
les
xchg
pop
call
test
xchg
xchg
sub
std
insl
test
mov
mov
xchg
in
sbb
shrl
push
and
inc
cmpsb
cli
and
int
icebp
jns
pop
cmc
push
popf
outsl
ret
adc
in
outsb
iret
jne
sbb
jne
popf
cwtl
sub
scas
sti
jns
lds
add
adc
ret
dec
mov
lcall
ja
outsl
pop
outsb
stos
sub
loopne
es
and
adc
andb
imul
push
ret
xor
mov
push
jnp
loop
cmp
mov
dec
mov
mov
mov
dec
leave
mov
addb
pop
mov
cmpsl
lds
mov
shl
pushf
in
pop
in
loope
dec
push
ret
sbb
repnz
rclb
jae
imul
mov
scas
xor
xchg
sarb
outsl
jmp
scas
or
in
cmpsb
shlb
popa
mov
out
push
fldenv
sbb
aaa
test
mov
and
jl
push
gs
push
jae
push
mov
adc
jle
out
mov
shlb
dec
les
pop
push
xchg
daa
pop
gs
sub
leave
cmp
mov
repnz
ds
mov
cmp
sarl
pushl
int
sti
out
push
addr16
mov
mov
sbb
mov
dec
mov
sbb
push
and
ljmp
icebp
jbe
cli
xchg
sub
outsl
pop
adc
test
pop
ss
jae
mov
lods
adc
cmp
add
js
rcrb
xor
cmp
jb
dec
add
mov
test
pusha
loopne
or
negl
inc
imul
mov
jns
jge
sbb
mov
push
sbb
mov
pop
adc
cli
or
pop
jbe
mov
sbb
aas
inc
rol
jnp
mov
pop
ss
adc
sub
and
dec
call
adc
or
jb
mov
lock
sub
popf
xchg
push
sbb
mov
imul
cmc
dec
dec
rclb
xchg
rorl
int3
or
loopne
cmp
push
jmp
add
out
lods
mov
inc
mov
js
cmp
lahf
mov
push
sub
push
adc
call
mov
and
xor
aad
sbb
imul
fildll
cmpsb
mov
sbb
mov
cltd
adcl
and
sbb
pop
clc
sbb
cmpsb
inc
insb
xchg
cli
xchg
rorl
jl
dec
stos
pop
test
lahf
les
xor
hlt
ljmp
pop
sbb
add
mov
cmpsl
mov
std
outsl
push
shr
in
int3
movsb
mov
movsl
sub
inc
cmp
adc
pop
jg,pn
aaa
test
iret
cmp
lret
and
add
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
jb
mov
sahf
adc
sbb
lahf
clc
icebp
add
js
jecxz
mov
fsin
cmp
mov
mov
add
cltd
and
sbb
negb
mov
or
push
les
inc
xchg
mov
pop
dec
jmp
cmp
subl
cli
jecxz
add
xor
or
test
lea
mov
rcrl
add
test
cmc
ret
sbb
xor
add
stos
ficompl
mov
adc
outsb
movsl
fs
mov
mull
mov
cwtl
inc
ret
mov
mov
sub
mov
lods
or
cltd
push
out
fistps
sahf
es
fs
xchg
aaa
sti
pop
mov
xchg
pop
loope
call
push
imul
bound
orb
xchg
jb
xor
ljmp
jle
lret
sub
push
mov
and
in
clc
sbb
mov
stc
mov
scas
mov
arpl
js
mov
mov
add
cmp
outsb
mov
fxch
mov
in
lods
fdivl
fmull
mov
mov
ss
or
leave
add
into
cmp
insl
fistl
aas
pop
or
int3
and
ds
jnp
test
stc
sub
in
mulb
push
fldt
adc
mov
and
aad
fwait
sbb
xchg
xor
loop
pop
push
mov
cmp
inc
testb
sub
dec
clc
int3
fwait
jmp
mov
pop
loopne
dec
cmp
pop
xchg
jae
xchg
add
outsb
push
xchg
fisttpll
cmpsl
mov
jl
xchg
and
fcompl
aas
out
cmp
push
mov
mov
imul
shrb
sub
cmpsb
jle
not
cs
enter
scas
dec
scas
jb
jmp
scas
test
daa
aas
mov
dec
cli
or
inc
fs
das
mov
push
cmc
adc
das
outsl
loope
sub
cmp
ja
cmc
gs
int3
sbb
push
mov
data16
inc
fildl
in
pusha
xchg
sbb
sbb
int
and
xchg
pop
cltd
xchg
push
cmp
or
das
inc
mov
jmp
pop
sub
iret
clc
push
cmp
ss
mov
push
cmp
loop
das
shrb
pop
test
sub
push
xchg
sbb
repnz
sub
sub
cmp
cs
scas
shlb
int
insb
mov
hlt
adc
pop
imul
or
mov
adc
mov
loopne
dec
jmp
jo
loop
xor
mov
cli
xor
popf
xchg
push
xorb
xlat
jbe
aad
roll
outsl
lea
lahf
cmp
fwait
add
jp
xchg
dec
mov
push
orb
add
repz
sub
dec
les
add
ds
insb
inc
clc
or
push
lea
daa
imul
mov
jbe
imulb
pop
dec
aas
dec
cld
jae
je
fdivrs
ljmp
jmp
iret
fsts
dec
rcll
jno
call
sbb
lea
xor
cs
add
push
test
pop
daa
lret
repnz
pop
lret
and
scas
sub
sbb
sbb
out
cli
dec
adc
movsb
xchg
xor
rdpmc
ret
cmc
loope
push
insb
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
clc
pop
stos
pop
and
sbb
sbb
inc
pusha
or
push
out
mov
mov
sub
dec
xchg
clc
sahf
and
xlat
hlt
jl
or
lea
stos
mov
loopne
cmp
das
lcall
and
movl
xlat
insl
add
xlat
mov
adc
leave
jnp
mov
ficomps
pop
fstpt
push
popa
int
pop
mov
iret
push
adc
jge
test
orb
fwait
test
add
pop
adc
push
jle
push
xchg
aam
mov
orl
movsl
cmpsb
and
xor
mov
jg
dec
xor
pop
and
mov
loopne
std
stos
and
push
ja
insl
sbb
cmp
push
movsb
aad
jns
sbb
stc
mov
stos
xor
or
aaa
aas
mov
sbb
jnp
mov
movl
outsl
push
pop
test
mov
push
pop
and
xchg
cmp
cli
inc
repnz
fimuls
scas
cwtl
icebp
push
or
adc
add
dec
enter
xchg
mov
mov
iret
mov
lahf
and
jmp
push
in
lret
pop
out
lahf
fnstcw
out
outsl
out
push
or
mov
adc
inc
ja
imul
push
or
pushf
adc
mov
cmp
xchg
jbe
int3
stos
popf
pop
rcrb
sti
es
int3
decb
test
iret
fdivr
dec
in
test
jmp
or
std
xlat
inc
mov
cld
push
xorb
sbb
test
jge
fldenv
insl
adc
cltd
jecxz
adc
mov
jge
sbb
popf
push
push
lret
fiaddl
clc
pop
ficoms
mov
js
loope
or
stc
mov
push
fisttpll
jbe
xor
leave
nop
ss
cmp
xchg
ja
js
aaa
lret
stos
fisubrl
adc
insl
push
jns
shlb
popf
xor
or
or
adc
add
sarl
test
push
shlb
jbe
jo,pn
xchg
pushf
ficoml
and
and
clc
mov
sbb
fs
inc
ja
sub
insl
adc
jb
inc
pop
mov
mov
cmp
push
sub
xchg
mov
fmull
lcall
arpl
sbb
jp
rcll
mov
push
sahf
lahf
xchg
jb
scas
mov
adc
insl
mov
xchg
stos
outsb
pop
sub
pop
aaa
divl
mov
jg
fidivl
mov
add
push
in
imul
push
or
dec
lds
fadd
int3
jecxz
mov
push
aaa
mov
in
bound
addr16
imul
stos
iret
unpcklps
int3
xchg
in
js
fwait
jmp
setl
add
push
xor
dec
outsb
inc
add
movsb
push
push
jl
clc
xor
jle
jne
stos
sbb
mov
cmp
pop
jns
and
adc
outsl
fstpt
jb
fbld
or
hlt
rcl
mov
aas
mov
leave
out
imul
sub
div
push
sub
pusha
jnp
and
pop
sub
dec
test
leave
xor
or
mov
test
pop
lea
aam
sub
aad
push
mov
xchg
sbb
xor
fidivl
push
daa
mov
movsb
icebp
and
or
xchg
jb
aam
ja
fdivr
jp
sub
scas
test
mov
movl
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
push
push
lds
sbb
outsb
adc
sbb
loop
loopne
push
adc
notl
jmp
aad
test
inc
popa
pop
out
movsb
orl
lods
sahf
repnz
outsl
ja
sub
push
das
mov
es
xchg
jbe
inc
dec
jle
test
sti
add
movsl
fcomp
sbb
dec
les
mov
mov
daa
adc
cmp
insl
sbb
add
push
mov
stos
add
xor
jno
cmp
dec
cmpsl
out
icebp
sahf
movsb
lcall
xor
add
insb
das
sub
add
inc
and
push
mul
mov
out
xor
and
test
sti
xor
movsl
imul
xor
push
jne
sub
sbb
add
cmpsb
sti
movsl
push
addr16
pop
int
mov
out
pop
dec
or
cmp
hlt
iret
inc
mov
lea
pop
loop
and
stos
or
sbb
ret
stos
and
push
mov
cltd
ljmp
lods
bound
iret
cmp
xchg
pop
dec
xlat
je
mov
out
insl
out
and
add
lcall
pop
fdivrl
aas
xchg
add
mov
adc
cmp
and
mov
pop
mov
push
xchg
fdivl
pop
adc
icebp
orl
xor
in
daa
cltd
push
jo
and
jmp
insb
ds
js
mov
add
jbe
mov
loop
push
push
call
cli
imul
ret
or
jp
test
daa
xor
jnp
xchg
xlat
pop
pop
jecxz
movsb
icebp
jb
lea
andb
out
orl
or
pop
fisttpll
fisubrl
into
in
sbb
jbe
or
adc
sbb
outsl
jo
pop
jno
sub
mov
mov
aaa
pop
aad
cmp
addb
aad
mov
movb
xlat
iret
cmp
mov
and
mov
jne
push
cmpsb
ret
out
clc
dec
shrl
xor
aaa
sub
jne
out
mul
push
in
and
pushf
fwait
xchg
xor
sub
sbb
rorl
push
inc
fcmovnb
daa
lret
insl
lods
push
mov
and
aas
pop
jno
and
pop
iret
call
dec
push
sarl
addl
xchg
mov
subl
add
lock
loopne
jae
and
cwtl
mov
bound
jle
aam
or
shr
add
adc
pop
cli
imul
mov
lds
and
pusha
cmp
xchg
loope
lea
sub
push
sahf
cwtl
cmp
xchg
cmpl
and
sbb
bound
cli
jbe
push
mov
mov
cmp
inc
sbb
inc
popa
jo
xchg
dec
dec
imul
push
daa
rclb
push
jmp
mov
dec
add
sbb
or
fs
xchg
push
setne
push
shrb
or
sbb
jno
pop
out
popa
in
xor
push
dec
push
and
cmp
add
jnp
mov
in
push
sbb
rolb
mov
mov
and
sahf
sbb
insl
sub
iret
fs
fs
add
fistps
call
bound
ds
mov
mov
sub
repz
dec
cwtl
push
and
push
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
rorl
push
adc
sbb
sbb
xchg
int
in
xchg
pusha
cmp
fldl
inc
xchg
lret
xchg
nop
test
sti
jl
jbe
fdivl
cwtl
mov
xchg
sbb
stos
sbbb
lock
inc
xor
test
ds
in
inc
or
aas
inc
shrb
shrb
xor
clc
mov
and
jle
aaa
mov
mov
jl
dec
movsl
xlat
add
jle
sub
inc
addb
inc
mov
jnp
out
cmp
lret
pop
icebp
mov
test
jnp
fldl2t
or
push
push
fsubrs
aam
test
push
add
test
and
fnstsw
jno
push
add
aad
lds
std
push
ficoml
lret
insl
xor
mov
sbb
and
je
lret
lret
dec
pusha
aam
sti
sub
sub
vphaddbd
jle
test
dec
inc
or
jns
add
icebp
mov
stc
lds
mov
fwait
test
test
je
fwait
jmp
xchg
pop
dec
fisttps
fisubs
xor
dec
movsb
stos
xor
aad
adc
fwait
mov
mov
or
insl
ja
xor
stos
gs
adc
sub
mov
or
cmp
loop
lds
pop
mov
inc
repz
jae
rcll
out
loopne
and
lret
fwait
add
dec
and
jne
pop
test
xor
popw
xor
hlt
adc
sub
cs
rolb
pop
pop
aas
xor
pop
cltd
sbb
lret
loope
and
pop
test
push
sbb
clc
or
cld
pop
xchg
sbbb
xchg
jmp
pop
push
mov
out
mov
or
test
loopne
cld
xor
dec
shrl
cmc
cs
xchg
cltd
mov
mov
inc
popf
pop
addr16
inc
and
scas
fdivs
sbb
fcomip
cltd
push
sti
mov
gs
inc
fdivl
test
psrad
repnz
mov
in
or
dec
fldl
popa
lock
inc
inc
dec
sbb
xabort
push
sarb
mov
cmp
into
mov
std
dec
lahf
add
scas
inc
int
add
hlt
ss
jge
sbbb
out
pop
inc
adc
into
mov
cmpsl
xor
sbb
mov
add
inc
aam
test
push
rolb
or
dec
or
pop
fidivrs
and
adc
int3
inc
jecxz
push
xchg
pop
jle
inc
xchg
movsl
jno
dec
sti
add
or
shl
fildll
ja,pt
sbb
dec
add
test
inc
push
addl
int
dec
push
cli
mov
pop
out
push
sbb
rolb
cmp
dec
xrelease
stos
inc
sbb
mov
xchg
dec
mov
lock
scas
fwait
mov
push
dec
aam
xlat
push
call
xor
mov
and
xchg
mov
sahf
es
loop
and
mov
push
iret
xchg
sub
daa
mov
js
daa
cs
andb
lea
xchg
dec
sbb
cmp
mov
adc
and
sub
repz
repnz
inc
push
adc
lods
jmp
lods
fisubrs
adc
fs
adc
xlat
and
pop
xor
sbb
add
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
jb
sub
outsb
adc
sbb
dec
daa
dec
xor
xor
add
std
or
or
and
leave
mov
mov
cmp
cmpsb
es
xor
movsb
ss
lcall
ljmp
adc
lret
lods
fiaddl
cmp
ret
push
jae
push
push
cmpsb
push
cmc
jae
xor
sub
icebp
lcall
std
cmpb
jne
sub
sbb
les
lret
mov
or
push
stos
int
jge
pop
sbb
sbb
mov
add
xchg
xchg
mov
sarb
xor
sbbb
repz
push
cs
xor
mov
xchg
mov
stos
repz
leave
xor
loope,pt
cwtl
loopne
ljmp
sub
cmpsl
jl
xor
aaa
test
mov
add
cli
jae
cld
scas
outsl
test
or
loopne
icebp
out
clc
loop
loop
dec
add
ret
cmp
cmp
push
scas
icebp
jecxz
fidivrl
sub
je
add
sbb
sub
adc
mov
jmp
and
ljmp
dec
cld
and
stos
mov
or
cs
push
cltd
outsl
pushf
pop
movsb
xor
xchg
adc
cmp
or
js
fs
add
sbb
sti
out
push
rcll
inc
lcall
idivl
lahf
fstpt
mov
nop
sbb
int3
cmpb
ss
sbb
imul
and
push
hlt
cmp
jns
pushf
icebp
hlt
pop
loop
jns
cmpb
xor
iret
xchg
xchg
xchg
push
cmp
cmp
cmpsl
iret
xchg
jbe
cmp
or
dec
adc
push
cmpsb
push
aaa
jle
popf
xchg
push
test
leave
test
rcrl
sarb
mov
insl
fstpt
cltd
add
stos
xchg
gs
les
int
add
dec
add
jb
into
mov
inc
pushf
cmp
test
and
gs
das
in
fcmovne
xchg
pop
mov
push
cmpsl
sbb
and
xor
testb
add
inc
cltd
outsl
movsb
jp
or
nop
push
xchg
js
mov
es
fsubr
ret
jne
stc
xchg
std
repnz
cmp
xchg
push
int
sbb
mov
test
cmp
clc
mov
mov
out
or
fldenv
fcomps
mov
enter
push
jp
xchg
ljmp
adc
pop
stos
lods
push
iret
mov
cmp
sub
adc
ljmp
cli
in
xchg
and
cmp
into
insl
and
add
inc
sbb
mov
xchg
and
xlat
lods
inc
icebp
add
ret
dec
pop
jo
push
inc
jnp
lea
fwait
inc
mov
xlat
enter
outsl
mov
in
and
into
inc
or
movsl
addl
aad
push
and
cmpsl
xor
and
out
or
out
sbb
lret
movsl
arpl
cld
lret
xchg
icebp
popa
pop
mov
adc
aaa
xchg
mov
stc
and
cmp
sbb
out
andl
sub
fistpl
daa
out
aaa
sti
pop
mov
clc
int3
dec
pusha
nop
aaa
insb
and
mov
out
mov
jle
movsl
adc
jno
imul
shl
xor
ror
push
sbb
pushf
jo
jae
int
mov
jne
mov
inc
loopne
dec
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
and
sbb
sbb
inc
cmp
jl
mov
pop
add
push
dec
ret
cmpsl
insl
fidivl
insb
pop
addr16
cwtl
popf
sub
call
cmp
xchg
je
inc
push
lret
bound
adc
fidivrs
test
nop
lods
or
cmp
inc
inc
mov
cwtl
xlat
test
xor
cmpsb
sbb
add
sub
add
sub
cmp
jbe
push
mov
ffree
add
xchg
xchg
testb
mov
out
cltd
lahf
out
in
gs
popf
adc
add
pop
mov
popa
and
out
inc
mov
scas
xchg
ret
mov
pop
rcll
or
lea
jb
pop
and
and
adc
lahf
xlat
aas
je
aas
jecxz
xchg
mov
cmp
add
mov
push
rep
lds
and
fcomp
out
out
xor
xchg
cmp
pop
push
pop
mov
in
pop
movsb
inc
sti
imul
jbe
aas
ds
jno
sbb
or
xorb
scas
cwtl
or
mov
sub
add
add
mov
fisubrl
into
xchg
mov
jnp
stos
add
js
shll
stos
cmp
std
jl
sbb
hlt
cltd
mov
stos
mov
cmc
lea
subb
test
inc
je
dec
test
shr
je
cmp
and
and
pop
movsb
push
sarb
inc
adc
add
mov
xchg
rcll
mov
mov
idivl
pop
mov
movsl
add
enter
sub
cmp
fs
xor
das
cmp
scas
mov
sbb
in
in
icebp
push
fsts
arpl
std
sub
stos
neg
daa
popf
int
push
ljmp
dec
fisttpl
cli
lret
mov
cmp
adc
cli
mov
dec
adc
fnstsw
jp
scas
jne
repz
adc
or
sub
lret
cmpsl
push
cli
inc
push
stos
out
fstl
icebp
scas
jl
sub
cmp
adc
adc
andb
xor
rcrb
pushf
add
inc
sbb
movnti
movsb
adc
pop
xor
ret
ss
mov
pop
inc
pop
add
jl
push
cmp
popf
int3
std
aaa
enter
in
add
lods
mov
jb
stc
outsb
in
cli
aad
insl
cmp
neg
dec
cmp
xchg
push
xchg
dec
rcr
jle
push
movsb
ljmp
cmp
mov
sbb
xor
daa
mov
adc
push
add
fmuls
lock
movsl
rcrl
rorl
or
pop
adc
iret
call
lret
and
mov
sub
xor
push
data16
aam
loope
cli
fwait
xchg
gs
and
pop
movsl
mov
subb
mov
dec
and
daa
aam
sub
aaa
dec
inc
cwtl
mov
sbb
add
xlat
ja
out
ss
scas
sub
cli
mov
arpl
std
pop
lret
dec
mov
push
mov
lcall
jmp
sarb
out
sbbl
loop
test
cmp
es
cmp
in
rcrb
in
add
jns
shlb
dec
loope
rorb
sub
mov
jp
mov
push
lods
cmp
iret
leave
adc
shll
loopne
les
sbb
jle
les
and
loope
add
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
and
sbb
sbb
sbb
xchg
sbb
test
sub
and
mov
dec
jle
or
add
xchg
pop
or
das
add
xchg
dec
cmpsl
inc
mov
mov
push
cli
test
insb
adc
cmp
xlat
jo
mov
xor
mov
in
pop
cld
leave
mov
loope
push
sbb
inc
jg
cmpl
and
enter
xor
lret
cld
xchg
daa
repz
dec
dec
sbb
adc
shlb
cmp
pop
fst
jb
xchg
xor
scas
int3
pop
movsb
mov
push
inc
data16
push
pop
test
movsl
jns
int
pop
pop
test
inc
nop
data16
mov
fs
sbb
fs
dec
xor
add
outsl
aad
movsb
sub
lea
sbb
mov
adc
xchg
icebp
cmc
scas
push
movsb
jb
out
icebp
sub
inc
insl
xchg
cmpsl
jg
jge
test
add
cmpl
in
out
sbb
lods
sbb
mov
dec
stos
mov
mov
ja
out
ret
cmp
pop
sahf
jmp
push
cwtl
pop
xchg
or
cmp
out
aas
push
jl
pushf
jae
mov
inc
into
popa
outsl
fsubs
cwtl
loopne
mov
fs
movsb
sbb
inc
in
lret
inc
add
xlat
push
js
xlat
mov
cwtl
lret
xor
lahf
adc
pop
movsl
fwait
or
push
lahf
mov
sarl
cmpsl
loop
ja
out
and
jo
sub
inc
push
adc
mov
imul
cmp
pop
push
fildl
aam
pop
xchg
mov
xchg
or
xchg
ret
ljmp
pop
cld
ss
jo
push
mov
fwait
jp
cmpsl
push
pop
mov
adc
adc
cmpsl
rolb
loopne
cmp
mov
xor
mov
xor
sub
ret
sahf
in
in
or
cmpsl
arpl
pop
push
jle
mov
sub
mov
roll
je
test
cmp
inc
notl
fwait
loop
sahf
inc
ret
insl
jno
in
bound
sbb
or
jno
gs
push
mov
insb
lods
imul
adc
popa
xchg
subb
les
insb
dec
loopne
ljmp
lods
in
stos
adc
in
cwtl
mov
pop
mov
pop
jb
and
dec
imull
sbb
xchg
stos
mov
loopne
pop
test
mov
lret
ds
stos
inc
test
adc
loope
push
mov
in
out
fiaddl
hlt
mov
sti
cmpsl
aad
cmp
jge
cmp
push
xchg
adc
outsl
mov
rcrl
scas
aam
test
mov
imul
xchg
aas
mov
push
add
inc
shlb
leave
outsb
dec
aaa
jle
ds
mov
jo
ss
add
hlt
inc
pop
pushf
js
add
sar
xchg
subl
xchg
sbb
pop
cmpsb
imul
out
aaa
rorb
and
push
imul
mov
or
pop
idivl
adc
movb
insb
jp
mov
insb
cltd
mov
loope
mov
jo
xchg
inc
adcl
and
iret
out
cmp
push
testb
jge
loop
jmp
jge
pop
adc
lock
or
popa
loop
test
pop
cmp
or
out
cmpsl
sbb
in
cmc
dec
dec
sub
inc
mov
aaa
add
inc
lock
lcall
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
stos
arpl
sbb
outsb
adc
sbb
or
sub
cld
or
and
lds
or
notb
add
cmc
push
sbb
test
std
rolb
test
sub
jnp
cwtl
scas
movb
push
adc
push
dec
insl
adc
push
cs
fdivp
pop
mov
aad
push
jnp
lea
lea
dec
push
jnp
je
shll
call
xchg
add
jge
sub
push
add
aas
repnz
sub
jns
and
pushf
lea
xor
mov
add
xor
xor
sbb
adc
test
fsubl
data16
cmp
std
scas
mov
xor
jle
xor
dec
repnz
mov
stos
daa
pop
adc
loopne
xor
sbb
or
into
push
clc
pushl
ror
lods
mov
sbb
cmp
push
movl
movsl
arpl
inc
into
sub
push
lds
scas
xor
xor
in
mov
jp
xchg
sbb
xor
or
mov
and
lcall
imul
das
aam
or
and
idiv
out
jno
outsb
cmpsl
add
sar
fldenv
or
xor
xchg
nop
in
sub
adc
mov
lahf
lods
dec
dec
cmp
addr16
xchg
dec
aad
xor
in
xor
scas
stos
mov
cli
adc
imul
push
loope
add
push
and
es
jo
lret
cmp
iret
inc
pop
repnz
mov
mov
jmp
vmwrite
add
cwtl
xor
xchg
dec
sbb
daa
xor
popa
divl
adc
xchg
push
mov
lret
pop
test
inc
pop
rol
jbe
cs
cmp
xchg
sti
leave
sub
out
cmc
in
adc
lods
es
add
fs
cmc
xchg
add
and
jmp
fxch
out
jmp
sub
pop
fidivrl
add
pushf
xorb
push
push
xlat
stos
adc
xchg
add
out
iret
aas
ds
cld
movsb
enter
xor
clc
stc
aad
outsl
adc
lock
pushl
adcb
push
jmp
outsb
mov
xor
mov
mov
cmp
fsubp
popf
mov
flds
bswap
cmp
sbb
aam
dec
mov
lock
aam
jno
aad
icebp
stos
jp
outsb
outsl
addr16
mov
hlt
or
and
jnp
lock
loope
adc
dec
sub
daa
test
stos
xor
push
jmp
jns
add
int
fwait
pop
pusha
andb
jb
lahf
test
adc
jbe
in
in
jp
out
addr16
jae
or
push
jb
and
jg
inc
fldenv
xlat
cmp
pop
mov
mov
jg
leave
and
sbb
subb
adc
dec
push
push
mov
jae
int
ja
or
fimuls
xor
cltd
inc
daa
cmpl
and
pop
leave
decl
push
dec
daa
clc
js
pop
insl
repnz
adc
aas
aas
jp
xchg
mov
aad
dec
pusha
push
lock
clc
fucomip
cmc
xorl
roll
pop
imul
adc
out
test
cmc
adc
push
fnstenv
push
loop
scas
inc
cmpsb
std
js
cmpsb
into
sub
mov
and
jge
stos
dec
pushf
push
lea
add
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
jae
clc
out
roll
incl
test
ljmp
push
scas
or
fst
or
cld
pusha
mov
push
cmc
push
cmpsl
cltd
pop
push
cld
pop
push
lods
aad
pop
sbb
sub
dec
stos
imul
jecxz
stos
popa
jecxz
pushl
dec
cltd
or
jnp
xor
int
push
lods
test
mov
int
daa
mov
hlt
xchg
dec
popa
mov
repnz
repz
fdivrl
hlt
mov
insb
decl
in
std
sub
stos
aaa
pop
xchg
lock
add
lds
sbb
movsb
scas
stos
adc
xchg
into
in
xchg
push
popl
js
inc
roll
outsb
loopne
mov
cs
sub
loope
cmpsl
sub
cmpsl
insb
fcoms
push
sub
lret
test
repnz
fwait
data16
cli
mov
paddq
loopne
mov
jp
xchg
adc
adc
push
mov
and
lret
or
cmpl
push
sbb
mov
sub
addr16
fwait
or
movsl
pop
stc
ds
xorl
cltd
sbb
push
mov
lods
mov
iret
or
mov
lds
enter
mov
inc
scas
xor
mov
jle
iretw
ret
mov
cld
sahf
rcll
addr16
je
mov
inc
dec
rcrl
ds
push
mov
out
mov
cmpsb
xchg
pop
cmpsl
or
mov
mov
inc
rcr
clc
ret
fiadds
mov
leave
mov
testl
or
inc
sub
ret
inc
jnp
push
call
inc
and
cli
push
fwait
and
inc
std
popl
pop
rorl
ret
pop
inc
mov
fsub
mov
shl
int
xchg
or
xchg
cs
ljmp
popa
ret
out
mov
inc
es
fsubrp
lods
sti
xor
xchg
cwtl
ror
xchg
into
outsb
inc
cmp
fld1
jp
orl
and
sbb
jmp
sti
ret
test
sbb
lea
mov
flds
sarb
insb
outsb
insl
inc
sahf
inc
out
pop
mov
lds
testb
stc
push
sbb
and
cmp
pop
fidivrl
add
jp
pop
sbb
push
pop
push
icebp
les
adc
loopne
xor
cmp
mov
xchg
sahf
jp
loope
jmp
ss
or
aam
cld
lret
or
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
dec
push
call
sbb
ds
into
es
inc
addr16
in
fimuls
mov
sbb
and
add
mov
lods
inc
mov
mov
rolb
pop
shlb
inc
fistl
sub
push
mov
pop
push
add
mov
aas
mov
repnz
pop
push
cwtl
insb
dec
stos
dec
jle
jg
test
sbb
fdivl
jo
pop
and
daa
int
jae
xchg
div
push
loopne
loopne
cmpsl
testl
enter
mov
push
cs
sarl
das
inc
fs
push
jp
cwtl
mov
jp
movsb
or
fucomp
imul
mov
pop
adc
int
mov
dec
pop
pop
xchg
pop
and
pop
add
jl
pop
arpl
pop
dec
das
add
fsubr
dec
cmp
inc
xchg
lcall
adc
std
inc
in
xchg
push
stos
and
push
push
mov
add
out
xchg
xchg
arpl
mov
jne
dec
dec
les
sbb
mov
xorl
out
jp
inc
fidivrs
pop
sbb
sbb
or
cwtl
cmp
add
ljmp
or
lods
enter
push
mov
add
dec
jg
push
xchg
xor
jnp
inc
dec
ljmp
xchg
mov
xor
adc
in
cwtl
in
add
testb
repnz
xlat
enter
in
pop
xchg
mov
orb
pop
mov
ds
scas
dec
lds
fbld
push
gs
mov
in
dec
hlt
sahf
js
scas
xchg
loope
pushw
xchg
and
mov
sar
mov
roll
mov
cmp
mov
cmp
jae
sub
cwtl
jno
push
jle
mov
stos
adc
add
lds
and
fdivr
pop
or
jne
mov
sbbb
xchg
fmull
test
add
in
aam
push
mov
add
sahf
jnp
adc
orb
push
je
push
dec
cli
pushf
out
jnp
pop
and
mov
jmp
cmp
mov
fisttpl
movsl
lcall
dec
push
fiadds
pop
loop
fwait
std
jb
repnz
pushl
pop
fs
sbb
ret
and
leave
mov
xchg
loopne
cld
cs
inc
fsubs
je
addr16
mov
add
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
stos
jo
loop
sbb
adc
sbb
dec
cmc
xor
arpl
fiadds
dec
aam
xlat
movsl
icebp
fcmove
daa
add
cmpsb
fs
cli
in
js
cmp
repnz
cmp
mov
adc
dec
ljmp
xor
and
mov
jne
lea
push
add
aam
dec
fcompl
std
or
nop
add
mov
iret
out
inc
push
inc
inc
and
es
aas
and
jae
adc
dec
in
es
ret
xlat
pop
ljmp
loope
stc
lahf
mov
dec
rcl
movsl
pop
push
js
or
dec
xchg
inc
hlt
das
pop
mov
mov
hlt
sub
pop
pop
jg
movsl
or
test
rorb
push
adc
adc
enter
lods
sub
and
sub
xor
cmp
xor
leave
push
add
fld
fdivrs
fcoml
pop
pop
jecxz
cmp
scas
scas
sahf
prefetcht2
imul
jo
pop
xchg
in
cmovns
mov
mov
inc
je
mov
ficompl
imul
mov
popf
daa
fidivs
mov
jg
adc
movsl
sti
adc
shlb
and
test
mov
loope
cmp
je
fprem1
xor
rolb
daa
movsl
and
cmp
push
out
shl
sbbl
movsl
mov
bound
jecxz
fidivrl
push
lods
xlat
pop
pop
lret
add
movsb
and
xchg
cmp
jge
andb
iret
aad
jmp
les
out
xchg
adc
js
dec
daa
leave
or
shll
into
cwtl
push
inc
fcomps
aas
rcl
jo
mov
add
sbb
in
dec
movsb
mov
popf
push
push
push
sahf
sbb
fadds
cmp
cmpsb
jle
jg
add
mov
and
add
loope
fcoml
add
testb
imul
sub
xor
jmp
repz
push
test
repz
adc
push
dec
or
in
push
lahf
movsl
mov
push
cs
xor
mov
shl
pop
scas
jecxz
cmc
mov
sbbl
test
repz
ror
hlt
pop
xchg
jg
ds
dec
mov
call
mov
push
jle
sbb
adc
shrl
mov
xchg
jecxz
subl
sbb
lahf
inc
ds
add
movsl
fisubrl
out
push
mov
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
jno
sbb
fcompl
sbb
adc
sbb
ret
and
outsb
flds
loop
jle
mov
addl
mov
dec
data16
xchg
scas
loope
adc
cmp
mov
and
sub
jne
jecxz
loopne
fildll
inc
cmp
fnstcw
pop
ljmpw
lea
sbb
cmp
push
jmp
adc
orb
cwtl
sub
xchg
in
pushf
fbstp
cmc
dec
inc
xchg
push
cmp
outsl
mov
fimull
enter
scas
cli
imul
pushf
push
mov
add
jp
xchg
movsb
lret
ret
and
inc
iret
clc
xor
adcl
mov
xchg
int3
xchg
pop
inc
ret
sub
std
in
shlb
adc
dec
sub
insl
scas
add
sub
jle
addr16
mov
int3
std
push
or
jle
js
fcom
imul
xor
push
pop
rorb
sub
jno
andl
ljmp
dec
ror
std
mov
data16
or
test
adc
int
and
or
call
pop
lea
aaa
jno
sub
pop
jg
dec
jae
xchg
mov
gs
mov
incb
sub
jo
js
xchg
jle
mov
mov
aas
sbb
mov
sahf
je
aam
ljmp
outsb
ret
xor
sub
adc
aas
div
jl
ss
fistpl
in
and
mov
and
pop
je
cmp
out
cltd
rorb
test
push
test
enter
cmp
gs
stos
push
pushf
pop
test
movsb
mov
int3
and
xchg
and
push
dec
add
xor
mov
dec
jno
sbb
arpl
push
adc
mov
push
lock
lock
push
sahf
sbb
xchg
mov
insb
jbe
jecxz
dec
inc
xchg
fimull
pop
and
mov
mov
movsb
add
and
das
xor
xor
dec
mov
popf
inc
arpl
cmp
ja
jno
add
and
paddq
rolb
jg
popa
lea
cltd
dec
test
daa
xchg
mov
inc
push
iret
jb
daa
jmp
cmp
fimull
mov
lret
cmpsb
jb
pusha
pop
mov
adc
adcl
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
jl
fcomps
sbb
adc
sbb
jle
inc
fistpll
inc
mov
insl
call
mov
or
lods
arpl
orb
jb
mov
cld
call
ret
xor
mov
adcl
cmp
adc
sub
ds
fnstenv
psubb
or
adc
int3
ret
or
aam
jge
sarl
les
mov
sbb
ret
add
add
pop
lret
or
sbb
lret
mov
lcall
adc
jno
fistpl
stc
mov
movsb
fcmovu
pop
notb
les
xor
sahf
xchg
and
xor
in
xchg
fcmovbe
mov
es
and
orl
pop
ret
push
mov
mov
add
imul
ficomps
cmp
dec
jns
scas
xchg
lock
enter
fdivp
add
mov
sub
xor
outsl
and
push
mov
cmpsl
leave
pop
xor
cmp
addl
addb
push
lcall
cmpsb
loop
jb
cmp
pop
iret
push
test
mov
adc
shrb
push
fistpll
mov
cmp
outsl
pop
sub
daa
test
adc
roll
sub
imul
shll
cmpsb
or
pop
mov
push
push
outsl
orb
dec
pop
push
and
in
jle
popa
call
fnsave
or
cmpb
mov
insl
mov
in
data16
movsb
push
adc
ljmp
sbb
push
fwait
xor
clc
mov
jmp
sub
xchg
add
icebp
xchg
sarl
mov
pop
out
or
lret
cs
jae
push
xchg
and
movsb
inc
inc
xor
adc
xlat
leave
jno
or
insb
in
mov
les
ss
mov
mov
mov
bound
pushf
xchg
in
adc
imull
mov
xchg
push
in
iret
pop
dec
jl
adc
jle
movsl
inc
ljmp
or
add
dec
xchg
add
pop
and
scas
repz
sbb
cmp
inc
adc
adc
lahf
push
adc
insl
and
into
xor
outsl
cmp
add
mov
inc
pop
mov
popa
lds
ror
jge
mov
jmp
dec
sti
inc
xchg
cli
ret
ficompl
testl
push
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
pusha
jne
pop
rcrb
sbb
adc
sbb
cwtl
add
insl
fstpt
cmp
inc
cltd
pop
cmc
cmp
jo
jg
pop
cmpsl
xchg
out
pop
jmp
clc
lods
add
iret
xchg
pop
xchg
dec
enter
popa
sahf
pop
jmp
ret
jb
lret
daa
cmp
dec
cmp
push
call
fcmovnbe
cld
popf
sti
insl
pop
push
push
loopne
loope
pop
fmuls
mov
in
sbb
mov
push
jns
jns
lret
mov
int3
repnz
mov
pop
mov
push
scas
mov
mov
lock
xchg
mov
adc
sub
jo
jl
mov
jno
in
push
push
imul
das
add
push
dec
mov
mul
test
mov
nop
aad
pop
mov
push
add
xchg
test
rcrl
pushl
cli
stos
lods
rcrl
lcall
jae
add
and
pop
cli
outsl
push
push
enter
hlt
pop
sbb
int3
je
dec
inc
mov
and
lods
mov
cmp
mov
stos
mov
sub
nop
imul
adc
xchg
pop
jae
adc
jp
pop
inc
inc
hlt
jp
mov
xchg
subl
and
scas
scas
js
fistl
jo
and
jg
daa
adcl
and
push
cmp
add
push
pop
frstor
imul
in
pop
sub
pop
shlb
xchg
test
xorl
dec
lods
daa
leave
inc
je
push
cmp
xchg
and
shll
orl
push
enter
push
and
movsb
fsubl
mov
mov
mov
rorl
push
cltd
xchg
lret
push
jne
mov
cltd
adc
in
sub
shl
mov
pop
jae
cmp
xor
insl
lea
ds
xchg
lds
pop
pop
mov
xor
mov
xor
out
jnp
jno
push
inc
cld
inc
cmp
es
push
ljmp
pop
xchg
lods
adc
xchg
je
push
dec
sbb
mov
sbb
cli
cltd
cltd
sub
inc
inc
jbe
popf
push
into
pop
mov
iret
pop
popa
dec
iret
les
stc
dec
fs
lds
cmp
jecxz
add
pushf
cmp
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
cltd
pop
stos
adc
sbb
rclb
sbb
or
jge
jl
loope
lea
icebp
loop
movsl
xor
jmp
hlt
cmp
mov
push
lea
pop
inc
js
dec
imul
pop
adc
fists
scas
and
addr16
sub
int3
or
outsl
pop
fnstenv
pop
cld
and
adcb
mov
dec
cmc
push
shll
pop
mov
call
xor
add
push
insb
std
push
dec
inc
out
pop
aaa
pushl
repnz
sbb
dec
scas
jmp
popf
mov
jecxz
filds
sbb
shlb
fidivs
fadd
mov
mov
jp
aaa
xorl
ds
and
lds
pusha
iret
loopne
and
inc
mov
cmc
pop
xchg
xor
in
clc
sti
in
test
and
mov
icebp
lret
lahf
repnz
lods
repnz
stc
into
aaa
xchg
pop
mov
aas
and
push
hlt
cmc
mov
and
scas
das
jp
adc
sar
sub
imul
sub
movsl
jnp
loopne
pop
cmpsl
enter
loopne
adc
lds
inc
dec
inc
fisubl
out
sub
testl
cmpsb
into
mov
sbb
testb
jbe
lcall
cmp
iret
fildl
iret
test
adc
cld
stc
adc
arpl
les
stos
cmp
jmp
and
fisttps
out
outsw
inc
mov
pop
mov
jp
arpl
inc
dec
cltd
mov
in
pop
or
inc
out
int3
mov
lods
pop
mov
lods
lret
jle
mov
xor
in
cmp
movsl
into
pop
mov
shrb
pop
push
les
shlb
xor
add
pushf
xor
adc
xorb
pop
mov
fldt
dec
das
mov
mov
test
nop
xchg
call
sub
adc
in
mov
and
mov
roll
rclb
dec
add
js
fld
inc
push
ljmp
arpl
pop
popa
adc
lods
jns
adc
inc
adc
pop
or
bnd
push
aam
ds
les
cld
into
test
sbb
lea
and
sub
xchg
push
add
xchg
push
inc
push
repnz
cltd
inc
adc
shl
into
lahf
cmp
enter
xchg
popa
pop
sbb
ret
xchg
jns
push
mov
mov
mov
rclb
sbb
adc
into
loope
incl
inc
hlt
jmp
sub
mov
inc
pop
and
leave
out
jle
aad
jle
enter
adc
sbb
gs
push
inc
mov
sub
test
je
movsb
dec
iret
and
xchg
pop
push
dec
adc
std
pop
adc
movsl
xchg
inc
jp
rcrl
jge
mov
iret
xchg
xchg
cmp
adc
and
jae
cli
movsl
decb
jmp
push
jo
push
fxch
mov
cmp
popa
jle
xor
loop
sbb
sti
fldcw
xlat
mov
jmp
xchg
sub
push
dec
pop
push
xchg
mov
call
mov
out
mov
or
pop
add
test
and
aam
mov
sbb
repnz
mov
push
roll
loopne
aad
pop
jo
pop
int
mov
scas
aas
in
or
jno
cmp
mov
mov
push
xor
gs
xor
and
shll
jns
pop
ja
mov
dec
in
cwtl
and
jp
not
rorl
cmpl
push
jl
dec
jne
xchg
mov
frstor
jmp
inc
pop
mov
sub
xor
sbb
repz
ljmp
test
adc
nop
shrl
jo
add
rorl
inc
mov
bound
outsb
mov
in
scas
mov
ret
push
mov
or
adc
lods
in
fwait
popf
mov
sub
dec
cmp
mov
pusha
push
and
jg
movsl
imul
inc
cmp
imul
icebp
or
aaa
mov
mov
sub
push
ljmp
js
add
add
mov
test
loope
add
out
dec
add
xor
cmp
mov
mov
push
mov
loop
push
aaa
insb
ret
cs
or
movsl
inc
pop
xor
in
les
sub
add
lods
sub
adc
insb
movsl
ret
ror
pop
enter
mov
push
je
bswap
mov
fcmove
fistl
mov
inc
das
stc
xchg
out
enter
jae
dec
mov
pop
push
jo
mov
jne
pop
pusha
jle
gs
aam
jne
movsb
or
call
je
mov
call
stc
das
ljmp
fiadds
xor
dec
push
cli
int
add
clc
rcrl
cmp
xor
add
decl
cld
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
int3
es
ljmp
push
sub
inc
jecxz
cmpsb
push
sahf
adc
mov
ja
mov
pushf
adc
fstl
stos
mov
enter
adc
pop
fildl
mov
inc
shlb
and
mov
push
movsb
orb
xor
mov
xlat
aam
and
out
rclb
pop
div
ret
inc
or
lods
add
test
jnp
add
cmp
negb
pop
mov
sub
fcompl
ja
sub
adc
dec
dec
int3
outsl
inc
jnp
add
loope
and
repz
out
dec
in
add
dec
cwtl
aaa
outsb
popf
dec
aaa
or
and
sbb
adc
mov
jnp
orb
adc
dec
sub
mov
xchg
into
sub
dec
and
pop
cs
dec
dec
or
faddl
jmp
or
lret
sub
movsb
or
xor
insb
test
ljmp
aaa
call
popa
sahf
cmpsl
stc
aad
mov
push
icebp
jne
fildl
bsr
xchg
mov
std
loop
bound
xor
cmp
icebp
mov
lret
movsb
cmp
mov
cmpsl
push
in
insl
pop
inc
inc
push
test
mov
fs
out
pop
dec
mov
mov
hlt
and
repnz
les
mov
push
mov
rcrb
dec
fldenv
sbb
mov
mov
pop
jg
test
jo
mov
inc
out
idivl
mov
fidivl
cli
mov
aam
mov
or
xchg
dec
xor
lock
pop
pop
std
add
shr
cmp
in
mov
cltd
adc
mov
ja
enter
pop
shr
sbb
je
dec
addr16
repnz
mov
pop
test
cmpsl
xor
push
jle
and
roll
jbe
popf
mov
fwait
pop
js
aaa
and
pusha
mov
sti
pop
mov
in
pop
dec
sbb
clc
mov
in
call
sub
push
or
push
mov
call
jmp
pusha
call
jb
test
sbb
xchg
xchg
scas
jge
push
stos
mov
dec
jno
xchg
jmp
pop
xor
popl
addr16
loop
test
js
xchg
rcll
or
or
add
inc
or
pop
loopne
inc
fmull
inc
fmul
popa
add
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
jno
inc
push
mov
sbb
push
lret
or
mov
and
imul
xchg
arpl
push
fdiv
pop
mov
push
call
sbb
test
xor
pop
bound
mulb
dec
jbe
jne
mov
sub
daa
mov
mov
jb
cmp
cmpb
add
loopne
fcomi
popf
hlt
adc
scas
cld
mov
jb
push
xor
mov
xchg
xchg
and
sbb
jo
fisubrl
shr
adc
pop
cmpsl
fwait
incl
add
xchg
mov
leave
cmpsb
cmp
insb
xchg
cmp
lahf
cmp
lret
hlt
and
mov
push
filds
jge
cmp
stos
jae
inc
or
jnp
incb
fildl
mov
lahf
push
or
xchg
fldt
out
je
ljmp
js
and
stos
loopne
push
dec
fisubrl
push
mov
push
mov
add
mov
sub
mov
push
cs
jge
add
mov
pop
sbb
cwtl
call
push
adc
lods
loop
inc
outsl
mov
in
adc
cwtl
lds
mov
int3
inc
pop
dec
and
in
push
es
xchg
mov
and
and
xor
lea
xor
push
add
lods
push
outsb
push
push
sub
idivl
jl
clc
push
mov
aad
in
inc
cmpsb
imul
cmc
xor
sbb
test
mov
lahf
mov
jno
popf
pop
int
ja
adc
addl
lea
pusha
and
mov
test
sub
pusha
xlat
incb
ficomps
mov
jnp
inc
das
andb
mov
data16
mov
sbb
mov
pop
xchg
bound
call
shrl
push
xor
push
and
jnp
loop
lock
mov
jae
insb
int3
xchg
adc
ss
test
dec
lret
lcall
loop
shr
fs
aas
sub
push
dec
sbb
test
push
int3
addb
xchg
ja
aaa
and
in
xor
jecxz
dec
sub
pop
outsl
cmpsl
sub
cli
call
roll
test
push
inc
es
mov
or
icebp
mov
jg
sub
inc
xchg
push
ljmp
mov
rorb
mov
xchg
repz
aam
push
in
das
or
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
sbb
mov
rclb
sbb
pop
mov
dec
jmp
xorb
ret
sub
bound
push
sti
jo
jbe
lods
pop
out
cmpsl
fimuls
dec
clc
and
xor
adc
jae
dec
xor
rorl
mov
pop
xlat
aam
mov
adc
or
fisubl
pop
sarb
inc
out
jno
mov
xor
aam
push
xor
push
mov
aas
jnp
and
out
lock
sti
fadd
cli
leave
dec
cli
push
ja
and
repz
xchg
sub
arpl
mov
call
fwait
test
testl
in
xlat
sub
jmp
cmp
inc
sbb
lods
js
and
jns
loop
daa
sub
dec
add
sub
mov
sti
lods
xorl
or
shll
push
cmp
cmp
cwtl
xor
add
iret
pop
pop
xor
in
ds
fwait
sbb
arpl
fistps
jl
pop
xor
mov
cli
daa
jb
nop
jns
cmp
jl
mov
test
xchg
pop
and
popf
sub
mov
mov
adc
mov
leave
cmp
add
and
fwait
sahf
popf
jno
shlb
or
pusha
mov
test
add
dec
int
cltd
pop
sub
xchg
shll
scas
insb
insl
mov
sub
mov
mov
dec
lea
cld
add
inc
xchg
ss
mov
or
stos
or
mov
mov
adc
jb
test
xor
sbb
daa
test
dec
inc
dec
loop
adc
addl
test
mov
adc
push
jl
ret
bound
inc
in
mov
aas
andl
std
mov
loopne
test
mov
in
xchg
leave
inc
loope
lret
div
shlb
mov
repz
ret
dec
xchg
je
test
std
int3
ljmp
mov
out
std
dec
sbbl
jnp
loop
cmp
aad
fdiv
inc
lock
push
fld
pushf
inc
xchg
subb
ljmp
sub
jno
call
mov
fidivrs
mov
ss
rorb
pop
sbb
pop
popf
mov
cmp
or
outsl
adc
jmp
mull
mov
cmp
movsb
mov
lea
xchg
mov
pop
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
push
sub
sbb
adc
sbb
add
rolb
jl
mov
xchg
push
mov
adc
push
stos
ss
lock
jmp
xorb
clc
xchg
jb
cmp
loopne
pop
pop
cld
inc
xchg
push
pop
jns
pop
pop
aaa
mov
add
outsb
arpl
push
rorb
dec
in
xor
adc
and
inc
fst
add
insl
out
stos
jns
or
push
lahf
shl
out
sub
sub
mov
scas
add
xorl
out
popf
or
jo
or
jmp
mov
loopne
add
ret
jle
pop
out
dec
outsb
pop
in
or
mov
in
fstpt
push
mov
and
js
lcall
inc
leave
test
call
jbe
pop
mov
pusha
popw
cltd
mov
jno
push
js
pop
ss
jb
add
jp
out
dec
pop
inc
mov
jno
or
das
clc
stos
cmp
dec
and
pop
xchg
out
fmuls
dec
mov
jl
mov
adc
ss
rorb
loopne
mov
push
popa
jno
cmpsb
in
dec
dec
mov
cltd
mov
leave
sbb
out
in
popa
push
aas
xchg
jnp
outsb
inc
pop
pop
mov
repnz
fwait
dec
cmp
adc
push
incl
sub
ja
pop
das
add
out
idivl
out
pusha
scas
clc
pop
stos
js
into
mov
imul
call
or
xchg
int
fsubr
ljmp
fnstenv
and
test
out
xor
xor
fs
dec
or
mov
pusha
pop
jle
inc
xchg
hlt
lods
or
dec
or
jb
cmp
leave
mov
add
add
lret
out
lock
sub
pop
cwtl
test
sbb
neg
mov
cs
cld
mov
sti
pop
aaa
jg
push
push
mov
sub
lds
push
xor
pop
add
cmp
add
enter
adc
in
dec
mov
push
shll
push
sbb
adcb
or
and
mov
outsb
shlb
daa
icebp
and
mov
pop
mov
pop
out
lcall
jae
fmuls
jbe
jnp
and
xlat
push
sub
daa
ljmp
lret
adc
push
jne
dec
adc
loopne
sahf
jp
add
jo
addr16
or
lcall
mov
mov
inc
lcall
aad
jo
sbb
rclb
sbb
pop
std
loope
jbe
mov
test
sub
out
sub
dec
or
push
jns
mov
out
cmc
mov
cmp
in
dec
dec
iret
movsl
inc
adc
out
orl
orb
pop
add
fisttpll
negb
cwtl
scas
cmp
pop
pusha
mov
lods
fmul
xor
mov
sub
mov
add
repnz
dec
adc
sub
push
in
gs
test
rcrl
push
xchg
fiadds
and
add
xchg
inc
dec
xchg
lcall
push
cwtl
pop
pop
ja
push
dec
call
cmp
cmp
fildl
in
xchg
sbb
mov
out
jno
mov
pop
scas
stos
dec
test
and
jns
int
xchg
pop
xchg
imul
fadds
jle
push
icebp
mov
cmp
cmpsb
call
pop
imulb
lret
lds
dec
or
xor
aad
int
iret
push
jae
xor
je
xchg
cmp
cwtl
mov
sbb
adc
out
mov
fs
add
and
fisttpl
dec
or
xor
inc
sub
adc
jae
lcall
je
dec
arpl
pop
and
shrb
and
adc
pop
cmp
mov
sbb
fisttps
outsb
xchg
xorl
xor
clc
jg
iret
cmp
in
repnz
jnp
jl
adc
test
mov
out
mov
pop
jo
mov
dec
adc
scas
out
fisubrs
xor
dec
xor
adc
add
enter
out
mov
dec
inc
aam
push
mov
or
adc
cli
xchg
xchg
dec
call
xchg
scas
inc
icebp
mov
or
movb
xor
and
scas
aad
push
xchg
inc
rcrl
roll
cmp
fistpll
push
fmul
xchg
test
adc
mov
dec
ljmp
mov
inc
jmp
push
aad
in
or
sbb
call
cmp
roll
je
push
dec
push
std
sbb
mov
dec
sub
sbb
in
jo
lods
mov
xor
and
sbb
push
mov
cwtl
cltd
out
out
shrl
lret
adc
sub
and
data16
jae
xchg
jle
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
shlb
jle
test
sbb
hlt
xor
ljmp
mov
test
shld
lea
ljmp
mov
xor
test
xchg
hlt
add
rcr
push
enter
mov
cmp
push
lds
pop
in
mov
jbe
cmpsl
hlt
push
sahf
mov
mov
adc
out
inc
pop
stos
popf
roll
jne
scas
lds
cwtl
sti
je
inc
ljmp
dec
pop
add
in
orb
mov
pop
andl
pop
add
popa
lcall
sub
jns
mov
fwait
sub
insl
mov
mov
popf
andw
cmpsb
mov
test
mov
cld
pop
xchg
fildll
xchg
mov
mov
push
imul
mov
dec
shr
jbe
in
jge
push
es
sahf
test
add
scas
negb
jns
add
adc
popa
lret
mov
es
sub
fisubl
cltd
stos
jl
int
xorb
xor
jg
push
push
cmp
add
sbb
dec
scas
push
je
adc
test
fistpll
push
and
ja
mov
mov
test
push
je
xchg
push
dec
gs
push
push
cmpsb
in
or
add
xchg
add
xchg
bound
add
dec
inc
ss
fimull
mov
mov
lret
insb
inc
mov
jns
mov
addr16
cmp
or
fcmovu
loopne
imul
bound
ss
xor
jl,pt
cmp
addr16
sarl
movsb
lods
pop
testb
adc
lock
or
outsb
ja
mov
add
icebp
dec
push
jnp
mov
imul
sub
lret
mov
cmp
lds
push
sbb
dec
dec
roll
fsubl
lea
xchg
and
xchg
jp
dec
mov
pop
sbb
dec
test
aas
lcall
xor
jo
les
push
cwtl
mov
mov
test
ljmp
fcoms
push
pushf
and
mov
addl
push
or
inc
dec
add
mov
jmp
pop
inc
xor
mov
subb
dec
ret
test
add
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
jns
pop
divb
inc
and
rcrl
push
jo
mov
pop
ljmp
dec
fisttps
sbb
aaa
aaa
scas
sti
ret
inc
nop
mov
xchg
or
jo
inc
sbb
mov
ja
dec
pusha
outsb
das
out
push
dec
pop
cmp
mov
fsubl
ja
inc
pop
mov
sub
fs
sbb
add
mov
ja
pop
sub
mov
jae
adc
mov
lods
stos
pop
pop
mov
jns
outsl
test
add
mov
loopne
es
jb
ja
stos
pop
stos
rcll
pop
mov
shll
add
std
xchg
fcomi
daa
lahf
gs
in
lea
std
xchg
jbe
sahf
into
or
pop
scas
add
mov
push
pop
cli
je
mov
into
jae
sysret
je
push
cmp
popf
popf
stos
stos
and
xchg
shrl
adc
sti
add
or
push
std
shll
add
cmp
and
cld
sbb
adc
sbb
mov
push
lods
je
sub
jb
push
sti
and
mov
xchg
fsubs
lods
scas
into
loopne
adc
je
inc
mov
adc
insl
es
rcll
inc
dec
jbe
mov
jle
scas
lea
jp
inc
cli
pop
movsb
mov
push
shll
xchg
das
pop
xchg
pop
jne
sbb
out
orl
push
or
js
jnp
arpl
lahf
leave
subb
jbe
outsb
cmpsl
rorb
add
jo
pop
jbe
loope
sbb
fildl
out
jno
push
xor
lods
inc
xor
mov
arpl
sbb
aaa
mov
pop
push
fucomp
add
mov
insb
ficoml
sub
loop
or
cwtl
xchg
shlb
pop
and
mov
imul
shlb
jae
aas
ret
scas
icebp
ss
mov
sbb
sbb
fwait
xor
mov
iret
aaa
and
lret
lcall
xchg
out
loope
jl
dec
and
jecxz
fstpt
mov
ret
lahf
jo
mov
mov
jae
jmp
mov
sub
lods
fstps
stos
in
adc
popf
mov
and
nop
sbb
adc
push
test
lods
int3
leave
add
adc
out
inc
scas
lds
jp
mov
mov
jmp
dec
icebp
test
inc
push
xor
stos
aad
shll
inc
test
inc
in
mov
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
jle
sahf
sbb
mov
insb
repz
lds
adc
pop
aas
sbb
maskmovq
bound
mov
leave
movsl
dec
xchg
insb
pop
shrb
push
repz
jecxz
jne
dec
mov
mov
imul
xchg
test
aas
cmpb
imul
cmpsb
adc
mov
mov
ljmp
aam
push
jg
sahf
scas
lret
lods
mov
push
fwait
pushf
scas
jno
or
pushf
mov
or
popf
push
aas
jae
enter
mov
testb
push
mov
lock
add
cld
push
mov
imul
ret
cmp
cmp
cmp
xlat
sub
xchg
outsl
and
push
mul
repz
sub
mov
mov
imul
push
data16
jno
ljmp
orb
jne
adcb
xchg
repnz
push
addr16
cmp
out
inc
or
mov
cmpsb
push
inc
mov
jle
xchg
push
cwtl
mov
fs
xchg
mov
cmpsl
jp
test
mov
call
ret
jp
mov
add
jl
add
push
and
fnstcw
or
jge
call
sbb
in
xor
push
sbb
ja
orb
fisubl
and
scas
fprem
sbb
jae
imul
lret
mov
mov
ja
andl
jge
xor
dec
rcl
ret
lret
jnp
incl
cmp
push
sub
cs
rorb
insb
add
jecxz
lcall
lods
mov
mov
jne
xchg
aad
jmp
aam
push
jmp
lock
cmpb
out
bsf
add
in
add
jb
fnstcw
clc
sub
stos
ficompl
push
stc
or
movsl
cli
testb
test
mov
ja
leave
mov
cmp
inc
outsb
ss
cmp
or
aaa
int3
daa
rcrb
jae
and
inc
pop
clc
andb
add
cmc
add
fs
adc
imul
test
loopne
sbb
mov
dec
fmull
mov
loop
mov
fld
outsl
rcrl
rcrb
lea
ja
sahf
push
je
loop
stos
mov
mov
xor
loopne
rcrb
int
sub
imul
hlt
test
lahf
cwtl
mov
sub
jmp
adc
fsub
sahf
lret
shrb
rcrb
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
repz
sbb
adc
sbb
je
sub
call
test
mov
adc
jnp
jae
ljmp
fnstsw
clc
test
jne
sub
mov
shlb
xchg
mov
cmpsl
mov
sub
shr
dec
sub
jmp
mov
pop
push
mov
ret
sub
push
das
outsl
jp
mov
adc
and
mov
add
mov
fwait
mov
add
xchg
mov
and
mov
cli
jecxz
adc
xchg
ret
rclb
or
cmpsl
cmp
cmpl
cs
inc
adc
or
addr16
test
or
out
mov
jo
jmp
inc
popl
rolb
jle
mov
mov
xchg
scas
movsbl
push
xor
psubusw
dec
inc
or
insb
jmp
gs
aad
xchg
pushf
loopne
lcall
xor
out
mov
pop
adc
cmp
loopne
xor
mov
insl
arpl
sbb
mov
mov
cmc
or
cmp
bound
mov
jae
insl
fildll
jl
jb
enter
lcall
aam
fsubs
xchg
mov
pop
pop
testl
nop
loopne
or
adc
pushf
push
push
lea
fldcw
cmp
outsl
shr
and
out
cmp
push
shrl
hlt
push
adc
jb
pop
xchg
mov
fcomi
in
xor
push
pusha
pop
mov
cld
adc
popf
sar
repnz
aam
mov
dec
ret
jg
call
rcll
iret
inc
clc
scas
or
ficoms
push
fsubrs
cmc
push
lcall
push
out
xorb
xchg
pop
notl
cmpsl
pop
repnz
push
sub
mov
mov
jecxz
fnsave
sti
xchg
ret
inc
pop
mov
fadds
pop
data16
in
jno
pop
push
faddl
mov
jno
jmp
lahf
notl
rcrl
je
sarb
les
test
out
shl
and
mov
mov
mov
pop
mov
push
in
ret
inc
popa
xor
push
xchg
inc
inc
cmp
cs
int3
or
or
out
mov
mov
or
push
pop
int
pop
add
xchg
jae
sub
icebp
data16
test
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
lahf
je
push
xchg
sbb
mov
insb
movsl
hlt
dec
push
shlb
push
pop
sub
mov
rcl
sub
dec
mov
outsl
or
subl
rcll
fnstenv
xor
lds
push
out
mov
jmp
or
es
mov
cmp
popa
jne
lea
xchg
imul
mov
jo
mov
jo
mov
mov
out
sbb
testb
push
sub
fnstcw
cs
pushf
mov
gs
or
test
outsl
movsb
sti
push
aaa
les
jns
imul
sbb
shrl
in
cmp
bound
out
push
orl
xor
enter
movsb
and
mov
or
inc
mov
sub
mov
cld
loope
mov
mov
je
add
rcrl
ja
arpl
mov
insb
push
fwait
testb
inc
cmp
add
push
nop
sub
and
std
in
stc
mov
jecxz
jecxz
sub
cmpsb
xchg
push
dec
popf
fwait
add
rorb
lods
faddl
shl
inc
into
mov
call
nop
and
pop
pusha
mov
iret
outsb
jnp
jae
pushf
add
sub
adc
jae
scas
mov
xor
sbb
outsl
inc
arpl
dec
aam
xor
dec
incb
adc
dec
lahf
lock
inc
nop
cwtl
jbe
sbb
sbb
push
lret
lahf
shrb
pop
bound
test
rclb
cmp
mov
insb
cmp
and
and
sbb
push
dec
sub
lahf
xchg
shlb
in
and
sbb
enter
mov
or
add
jmp
in
mov
mov
mov
ret
add
int3
adc
fs
shll
shll
pop
fcoms
nop
jbe
mov
pop
and
outsb
mov
cli
add
notb
lods
xchg
rorb
in
ret
push
or
test
int3
or
std
pop
and
ljmp
fmull
test
inc
iret
dec
rclb
jp
loop
test
test
jp
jae
loope
jns
xor
mov
or
xchg
xchg
push
jns
add
fnstenv
sub
cwtl
movsl
std
and
sahf
xchg
cmpsl
push
mov
pusha
xchg
push
aad
cmp
daa
inc
pop
and
inc
sbb
fs
decl
lock
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
xorb
push
adc
sbb
jbe
cs
fs
je
xchg
orb
loope
addr16
and
sbb
lods
in
mov
ss
faddl
jns
pop
outsl
sbb
fstl
rorl
stos
sub
jne
jg
xchg
dec
pop
sar
dec
imul
icebp
push
mov
jmp
mov
out
jg
popa
or
mov
sub
insb
push
out
in
imul
cmp
test
sub
xchg
xlat
lcall
movsl
pop
iret
add
push
inc
xchg
pop
pop
in
fbld
push
ljmp
or
jle
lods
inc
pop
mov
inc
shl
inc
lods
jno
ret
sbb
xchg
mov
ja
push
test
ret
test
movsl
sbb
mov
lds
sar
mov
push
inc
pop
lods
popf
jp
pop
or
sbb
mov
mov
lcall
cmp
mov
push
shlb
push
sub
jns
insb
push
in
add
sub
jb
pop
lahf
jle
add
mov
sbb
adc
and
cmp
adc
jbe
mov
inc
dec
cwtl
mov
or
cli
je
movsb
lahf
xchg
fisubl
add
iret
shrl
push
pop
clc
mov
xor
xchg
pusha
mov
in
mov
adc
in
ss
and
cwtl
push
xor
in
jp
lods
bound
aam
aad
mov
mov
push
sub
es
cmpsl
je
and
lods
pop
arpl
mov
cmp
lcall
mov
sub
lds
jle
dec
pop
cli
and
rcrl
push
fs
insb
mov
popa
insb
fwait
rcl
test
test
push
movsb
repz
dec
shrl
cmp
mov
xor
lahf
or
xor
insl
pop
sahf
push
out
and
mov
jb
fldt
jbe
xchg
xor
jne
push
jnp
aad
mulb
add
aad
ljmp
loop
int
pop
icebp
shl
in
add
dec
inc
add
and
or
pop
sub
mov
dec
cmpb
jg
imul
push
orl
cli
dec
and
fdivrs
add
xchg
push
jb
dec
push
adc
sub
loopne
aaa
sub
std
loopne
or
gs
xchg
gs
dec
push
ficomps
leave
imul
mov
shlb
les
or
les
add
add
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
insb
add
mov
cmp
xchg
pop
cld
pop
jns
out
cwtl
sbb
pop
cmp
jae
push
add
rol
loope
outsl
fimull
xchg
mov
stos
dec
into
push
xor
add
pop
int3
pushl
push
jp
fnstsw
inc
or
push
jecxz
lea
xchg
mov
lock
adc
mov
decl
stos
add
cmp
enter
sub
cmp
pop
sub
pop
add
mov
and
les
hlt
ja
cmpsl
pop
ret
es
leave
cmpsl
add
fs
dec
sbb
nop
pop
leave
stos
push
cmp
dec
mov
xchg
add
mov
sbb
fbld
pusha
lcall
clc
jo
cmpsl
dec
xor
arpl
mov
in
or
cmp
cmp
jnp
mov
add
cmpsl
cmp
xchg
ret
xchg
faddl
pop
add
sbb
jg
pop
and
mov
pop
push
cmpsl
xchg
sbb
jge
pop
lret
mov
loopne
outsb
xor
inc
sub
lret
mov
xor
xor
lret
xchg
or
xchg
push
ljmp
mov
shl
pop
inc
leave
mov
hlt
addr16
cli
push
jl
push
mov
rorl
adc
or
aam
out
clc
in
pushl
jae
daa
or
into
jp
push
scas
or
fwait
jnp
xchg
imull
jge
orl
pop
repnz
loopne
mov
cmpsb
mov
je
out
sbb
push
inc
fsubrl
mov
xchg
xchg
pop
add
lods
sbb
sbb
aaa
push
insl
adc
cmp
pop
xorb
adc
xchg
rolb
insb
roll
dec
cmp
xor
gs
xchg
xchg
lret
cmp
in
push
dec
xchg
dec
inc
cltd
stos
xchg
pop
sbb
sub
mov
insb
mov
lock
lcall
mov
mov
mov
jle
aaa
push
jns
adc
jl
push
fs
inc
sub
rolb
sub
push
adc
in
mov
jae
popf
sbb
gs
out
xchg
scas
xchg
outsl
dec
pop
js
arpl
mov
xchg
test
fidivrl
pop
or
add
push
xchg
icebp
ret
mov
or
jge
clc
dec
shl
dec
push
push
pop
mov
xchg
push
mov
leave
and
sti
popa
mov
movl
mov
mov
sub
jmp
test
mov
push
mov
jle
sbbb
lcall
idivl
xor
std
subl
ja
ficoms
sbb
jbe
call
ret
sbb
into
ljmp
out
cmp
adc
cs
addr16
push
test
cmp
fildl
orb
repz
cld
add
xor
xorb
inc
dec
pop
push
mov
add
out
fsubl
jns
ja
fbstp
cmp
std
push
xor
fwait
ja
in
pop
dec
fstl
lock
adc
sbbl
dec
add
dec
xor
aaa
push
push
pusha
add
or
or
sti
cmp
ja
sbb
push
fnstsw
push
outsl
xor
adc
insl
jae
je
mov
adc
dec
xlat
jnp
shlb
popf
sub
pop
pop
push
ds
pop
ss
cmp
adc
jl
loop
outsl
adcl
in
pop
jb
dec
in
imul
jb
in
push
nop
dec
xlat
xchg
adc
scas
mov
sbb
push
push
or
xchg
scas
or
inc
cmpsb
ja
pop
out
loope
mov
js
ret
fsubrl
or
lret
pop
mov
pop
xor
ljmp
pop
cld
hlt
cmp
cli
stos
cmp
jl
push
push
adc
movl
das
out
or
cmp
dec
lock
pop
aaa
inc
push
mov
repnz
mov
stos
movsl
inc
lods
test
mov
mov
mov
rclb
dec
mov
cmp
inc
adc
jne
cmp
jmp
pop
jb
subb
cli
sub
cmc
add
into
xchg
mov
dec
push
stos
nop
push
fimull
out
jb
notb
dec
mov
jl
sbb
imul
fsub
and
sbbl
adc
and
ret
nop
mov
jmp
loopne
sti
icebp
push
mov
add
adc
leave
cmp
jo
cwtl
dec
dec
lcall
mov
cmp
lcall
jge
mov
mov
sbb
adc
scas
mov
outsb
cmc
ror
dec
sbb
inc
gs
rcll
mov
repz
stos
insb
lret
inc
ret
sbb
xor
mov
push
pop
cmp
mov
jnp
mov
and
lcall
jmp
lods
lret
outsl
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
lods
or
out
jl
sbb
sbb
xlat
xchg
loope
pop
test
push
cmpsb
mov
in
push
mov
xchg
inc
fmuls
jne
insb
pop
loop
std
or
testb
mov
shl
mov
xchg
leave
inc
mov
pushf
jecxz
int3
arpl
mov
mov
dec
cmp
je
lret
adc
or
lret
lods
rolb
daa
jle
cltd
and
fsts
pop
leave
in
push
sub
mov
xor
hlt
stos
fstps
ljmp
mov
lds
je
dec
outsb
inc
dec
pop
hlt
adc
sbb
inc
push
jnp
and
cmp
fbstp
insb
fisttps
and
in
leave
jo
or
mov
scas
cmp
lahf
push
xlat
jg
adc
mov
lcall
push
cwtl
movsb
mov
ds
inc
jg
sbb
dec
inc
test
js
pop
inc
sbb
inc
repz
cmpsl
jo
andl
xor
bound
outsl
mov
pop
dec
cmp
enter
scas
mov
xchg
and
es
push
mov
cmpsl
sub
fistpl
push
mov
sub
jb
out
mov
xchg
js
inc
mov
inc
outsb
sbb
cmp
outsl
es
inc
dec
mov
jmp
mov
push
pop
xor
je
cmp
int3
push
pop
imul
and
repnz
fsubrl
and
icebp
or
stc
add
lods
stos
les
fcoms
insb
push
mov
push
dec
jge
sbb
lret
mov
xor
les
xchg
or
cli
stos
inc
sbbb
mov
pop
lahf
sub
sahf
add
or
popl
xor
jne
dec
xchg
jo
xor
jl
mov
xchg
push
xchg
or
ljmp
push
pop
iret
jg
mov
xor
inc
es
xor
cwtl
xlat
nop
adc
scas
mov
mov
push
ret
mov
mov
mov
jl
das
imul
mov
jge
ljmp
in
mov
jmp
add
test
dec
sbb
add
test
pushl
test
decl
test
push
adc
add
test
ljmp
data16
add
inc
clc
shrb
add
jle
add
jo
add
dec
sub
sub
add
sbb
jno
sbb
es
xchg
sub
mov
int
add
in
imul
xchg
scas
test
enter
mov
inc
aaa
inc
cli
xorl
sbb
test
jns
lds
mov
loop
aam
les
pop
mov
and
cmp
mov
clc
cmpsl
sbb
xchg
mov
daa
sbb
out
pop
add
cmp
push
push
mov
movsb
and
adc
jecxz
aad
mov
add
popa
adc
dec
jge
sarb
shrl
xorb
dec
sub
mov
jne
mov
sti
scas
sbb
xor
mov
repz
inc
lods
xchg
xchg
scas
in
scas
or
add
sub
sub
xor
jg
stos
jg,pn
push
inc
stos
mov
hlt
mov
scas
lock
rcll
cmp
int
jo
stos
mov
sbb
xchg
js
mov
dec
mov
jmp
dec
sbb
push
loopne
pop
or
cld
cld
movsl
pop
jmp
push
mov
adc
repz
xchg
push
mov
xlat
sbb
outsl
jle
or
dec
mov
arpl
cmp
cmp
xchg
sbb
das
faddl
fistps
jge
inc
call
pop
push
nop
mov
and
leave
shl
add
and
mov
enter
jns
outsb
dec
movsl
cmp
ja
and
mov
in
fcomp
sbb
movsb
mov
repz
jns
xchg
push
fistpll
inc
mov
mov
dec
cmp
enter
jns
das
pop
cs
pop
mov
sbb
cld
pop
bound
sub
jmp
push
add
sub
sub
repnz
cltd
fidivs
in
ret
mov
loopne
arpl
adc
mov
pop
push
push
inc
mov
in
or
push
jns
xchg
sub
in
ret
sbb
cmp
dec
scas
fists
adc
loopne
jmp
stos
mov
inc
stos
jg
add
add
adc
push
or
and
inc
jecxz
and
popa
aaa
or
jb
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
xchg
mov
jno
sbb
shl
fistps
cmp
loope
adc
test
sub
push
push
test
pop
lods
and
bts
inc
inc
jl
push
repz
movsb
imul
sbbb
pop
data16
pop
pop
scas
add
dec
andl
pop
sbb
cltd
cld
pop
gs
sbb
out
pop
aaa
mov
lahf
in
dec
xchg
shlb
or
into
fbld
inc
cld
in
xor
mov
popa
xchg
xchg
xchg
push
in
test
lcall
pop
sar
test
shrb
mov
leave
jg
xchg
sbb
cld
aaa
das
and
sbb
les
xor
xchg
leave
in
cmpsb
push
arpl
pusha
cld
scas
movsl
mov
inc
and
ljmp
add
sub
and
add
push
out
cwtl
jmp
in
sahf
mov
push
lea
cmp
mov
push
scas
dec
xchg
sub
push
push
test
fcoms
xchg
mov
inc
or
in
sbb
sbb
mov
sbb
add
pop
dec
in
push
xchg
cli
pop
adc
dec
and
nop
cs
and
cwtl
push
and
int3
scas
inc
sub
mov
inc
pop
mov
adc
fdivs
mov
std
lds
fisubrs
fiaddl
cmp
sbb
inc
int3
xchg
daa
mov
lret
rcrb
sbbb
aas
xor
mov
aas
mov
sub
pop
je
fsts
int
xor
fcmovu
xor
ljmp
outsb
ja
cmp
ret
loope
sbb
push
inc
lret
loope
mov
fidivs
scas
mov
pusha
sti
pusha
movsb
cmp
mov
ljmp
in
inc
loopne
mov
or
mov
shll
lds
pop
mov
or
je
mov
es
sbb
adc
xorb
mov
psrlw
call
sbb
jbe
pusha
mov
push
xchg
sarb
iret
jmp
cmc
mov
in
jne
outsb
ja
pop
imul
lock
sub
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
inc
push
mov
out
and
pop
push
mov
sub
testb
adc
jge
push
xchg
jl
inc
sub
out
bound
adc
test
adc
fildl
jbe
int
add
inc
xchg
fprem1
ds
jg
cltd
push
pop
pop
sub
nop
xor
sub
jae
cmp
jle
sub
push
fsubs
push
fs
loopne
add
popw
loopne
sar
lea
mov
mov
sahf
les
jl
push
adc
pop
scas
out
and
add
and
jne
lcall
nop
mov
push
mov
pusha
jp
sbb
sub
mov
inc
sub
push
mov
mov
sbb
sbb
sub
loope
sub
push
and
adc
addr16
sbb
cmp
push
xor
adc
ret
jae
lret
sub
daa
xchg
data16
test
adcl
cmc
ja
lods
jmp
or
loop
out
dec
test
out
xchg
leave
sbb
clc
push
or
sarb
push
shlb
or
cmp
pusha
lcall
fiadds
lds
fnstsw
lcall
in
mov
lock
pushf
xchg
xor
fwait
xchg
es
cmp
xor
mov
call
ss
test
sub
xor
dec
xlat
adc
popa
jmp
orb
fs
filds
inc
sub
js
cltd
xor
push
xchg
sub
cwtl
jne
dec
and
inc
and
daa
popf
addr16
enter
xchg
lcall
xor
dec
add
and
adc
dec
ret
xchg
dec
cmpsb
dec
jle
or
mov
imul
imul
fistpll
dec
xchg
pusha
inc
test
push
pop
cmp
jns
add
or
or
adc
add
rcrl
push
xlat
dec
add
out
test
inc
xor
cltd
outsb
pop
jno
popf
pop
lods
cmp
fstpl
jle
fimuls
out
out
cli
add
xchg
dec
sbb
addr16
dec
dec
mov
cld
imul
mov
mov
push
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
lock
jno
sbb
sub
fcomps
scas
mov
inc
pop
mov
mov
mov
push
push
daa
cltd
outsl
xchg
rorb
push
sbb
adc
repz
add
push
push
subl
push
les
ret
add
mov
xor
and
icebp
stos
lock
stos
std
stos
jmp
fnstenv
ret
mov
mov
dec
sbb
scas
pushf
inc
sub
push
sub
sbb
push
add
or
sbb
push
je
add
push
int3
stc
adcb
imul
sbb
sti
loop
fistpl
sahf
daa
cmpsl
or
mov
mov
dec
lock
push
fadds
xor
inc
ret
jnp
dec
mov
cmp
jge
adc
adc
mov
pop
inc
mov
xor
jo
xor
std
dec
add
and
into
mov
popa
mov
out
sbb
movsl
icebp
cs
dec
cwtl
xchg
mov
repz
ds
dec
dec
es
shrl
loope
cmpsb
push
inc
lret
mov
xor
stos
push
pop
icebp
cltd
mov
adc
js
pop
gs
push
pop
cli
lahf
jecxz
mov
xchg
imull
sar
mov
pop
xchg
insb
lret
and
aad
loope
adc
je
fstpt
pop
inc
adc
sbb
iret
pop
xchg
rorb
enter
mov
sbb
jae
std
pop
hlt
xlat
pop
loope
pop
push
cmp
ror
xor
pop
xor
push
jns
leave
sbb
mov
or
mov
xor
fucompp
insb
loopne
sahf
mov
cmpb
decb
push
add
cwtl
push
xor
es
fimuls
insl
adc
insl
in
ja
mov
mov
cmp
sbb
adc
psubusb
lods
xchg
or
out
mov
push
ret
cmp
mov
sub
adc
cmp
xchg
aaa
sti
popf
cmp
scas
cmp
mov
repz
inc
push
loopne
leave
std
fwait
dec
xor
xchg
scas
inc
mov
add
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
cli
shrl
jno
sbb
stc
mov
into
js
pop
pop
mov
pusha
adc
cmp
movsl
mov
ds
mov
repz
frstor
test
dec
pop
les
cmp
jae
mov
outsb
scas
sub
jmp
flds
xchg
sarl
mov
adc
loop
loop
xchg
xchg
sbb
pop
xor
xor
xchg
jecxz
mov
mov
lods
insl
sub
push
sub
xor
and
lds
push
jecxz
out
aaa
dec
cld
or
fwait
jns
stos
mov
jns
es
fldt
in
subb
mov
bound
push
inc
and
adc
xorl
call
adc
ljmp
mov
hlt
pop
sbb
dec
cmpsb
bound
or
scas
xor
aad
mov
dec
jecxz
sbb
les
mov
push
pop
sbb
sahf
outsb
jl
sbb
push
loope
stos
push
repnz
xlat
mov
ja
push
mov
jl
add
movsl
je
mov
dec
inc
sti
dec
pop
add
mov
push
add
cmp
dec
insl
outsl
or
inc
imul
or
lahf
ret
icebp
inc
jge
push
call
cltd
aam
add
das
jg
fsts
test
cwtl
stos
in
call
push
jns
add
pop
outsl
lock
adc
ja
inc
pop
test
mov
xor
sti
cwtl
jno
sub
sbb
cltd
xchg
xor
jo
or
cltd
shr
cmp
pop
push
out
push
xchg
fwait
and
pop
push
mov
inc
and
in
sub
xchg
shll
mov
push
mov
cltd
jo
push
mov
lea
lret
mov
and
mov
loope
sub
call
jns
xor
add
add
scas
call
lods
fisttps
ffree
enter
mov
add
or
xorl
add
sbb
mov
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
mov
stos
pusha
sbb
jno
sbb
mov
subb
jns
mov
out
pop
or
dec
mov
pop
dec
pop
mov
or
cmpsl
jp
inc
leave
cwtl
pusha
out
push
xchg
mov
in
mov
lcall
inc
aad
loope
nop
mov
pop
inc
lea
cld
mov
fwait
scas
add
repz
movsb
xor
dec
rcrb
insb
push
dec
shrl
add
pop
jg
add
sbb
ds
mov
es
dec
fistpll
xchg
les
inc
sub
jmp
aas
stos
into
pop
jmp
bound
fwait
sbbb
loope
insb
les
inc
fwait
push
fstl
mov
test
ja
movsb
in
xor
jl
fs
movsl
insl
adc
cmpsl
mov
xchg
lods
or
call
pop
mov
les
sbb
pushf
adcb
pop
pushf
cmp
jg
and
bound
cmovs
mov
mov
mov
pop
cmpsl
or
dec
mov
add
gs
jns
inc
in
fwait
lock
adc
pop
adcl
sbb
inc
movsb
jg
movsb
in
decl
mov
inc
lcall
loopne
dec
movsl
lahf
call
int
sti
xchg
dec
jp
pushf
pop
pop
test
ficoms
xchg
xor
push
pop
or
sbb
inc
das
sbb
mov
add
mov
xchg
xor
and
push
sbb
dec
adc
in
ss
or
jns
scas
jecxz
jns
mov
cmp
out
xor
mov
dec
push
pop
dec
dec
data16
sbb
daa
sub
in
mov
rdtsc
movsb
or
mov
pop
push
or
and
jecxz
xchg
test
push
xchg
call
mov
ret
add
inc
adc
pop
vfmsubaddps
sub
stos
and
jmp
pop
roll
cmp
ret
cmp
ljmp
in
pop
pop
jnp
stos
push
jae
jle
faddp
aad
fmul
icebp
movsb
or
imul
mov
jle
xchg
int
xor
outsb
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
push
sbb
jno
sbb
cs
jg
cmpsl
cwtl
out
add
ds
and
or
andb
dec
pop
ret
cmp
movsb
push
das
bound
mov
push
mov
adc
mov
aas
stos
dec
xchg
dec
xor
dec
sbb
inc
imul
cltd
and
adc
popf
sbb
into
das
xor
mov
xor
sub
ret
fsubl
mov
pusha
and
pop
addb
sbb
ret
fldenv
dec
iret
push
add
or
xchg
jecxz
xchg
sbb
cmp
pop
aam
pop
cwtl
add
fsub
sub
scas
xchg
inc
fsubrp
sub
push
sahf
rolb
mov
push
and
bound
lods
mov
add
xor
aam
sub
mov
outsl
sub
or
xor
mov
stos
mov
loopne
mov
jp
mov
inc
jb
in
add
ds
testb
add
and
adc
fistps
ret
fsubl
pop
xor
and
fsubs
inc
and
cs
call
jae
mov
push
cwtl
addl
cmpsl
mov
call
and
mov
sarb
test
out
dec
mov
lods
inc
in
pop
lcall
in
outsl
shr
sbb
int3
adc
jae
inc
lcall
xchg
bound
imul
jge
adc
push
cmpl
loopne
es
or
and
jl
mov
mov
xchg
rorl
push
jo
jbe
std
sbb
push
inc
inc
jmp
fwait
pushf
stos
adc
inc
sbb
cmp
sub
ss
jo
mov
xchg
push
push
movsl
cmp
jmp
call
add
fs
jbe
lock
insl
lcall
fisubl
test
jp
jg
ljmp
movsl
cs
xor
out
inc
add
jne
mov
out
aas
arpl
iret
mov
push
xor
insb
adc
cmpsl
idivb
int3
push
lods
popf
clc
lods
test
lret
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
data16
arpl
imul
ja
xchg
and
adc
loopne
out
fwait
mov
push
mov
cli
cmc
push
pop
and
lock
sbbl
xchg
cmp
cmovs
stos
mov
xchg
dec
pop
pusha
push
jnp
pop
ss
cmp
mov
nop
dec
rcll
repnz
daa
loopne
xor
outsb
mov
stos
cli
jecxz
xchg
je
sub
and
pop
mov
enter
frstor
mov
jp
dec
cmpsb
cmp
and
mov
sti
repz
fwait
and
mov
cmp
lods
and
popa
push
mov
sbb
push
sub
arpl
push
sub
sbb
add
mov
gs
push
cwtl
lcall
pop
repnz
pop
jbe
mov
aaa
into
mov
into
sti
lahf
lods
inc
push
push
repz
mov
xchg
sbb
mov
call
cs
leave
jns
fsts
sbb
cli
test
pop
mov
and
pop
jo
popa
stos
fisubrs
sbbb
dec
xchg
dec
cmp
cmpl
cld
adc
aam
and
cmp
mov
pop
xor
cli
cltd
daa
and
in
and
cmp
xchg
xchg
aaa
sbbl
je
mov
jbe
imul
jp
pop
push
add
scas
xchg
mov
aam
mov
cli
mov
cmp
xor
sbb
xor
es
out
pop
pop
mov
dec
sbb
jl
push
or
xor
dec
add
inc
out
pop
jg
mov
mov
inc
outsb
sub
bound
jo
sbb
and
jo
shrb
fs
adc
daa
and
jne
inc
inc
imul
test
stos
sbbl
loop
dec
test
sbb
push
jns
jno
mov
stos
push
decb
es
in
aaa
cld
pop
ret
test
jno
loopne
sbb
cmp
out
cli
mov
push
out
jno
add
and
sub
xor
mov
js
add
leave
mov
inc
dec
mov
addr16
fistpl
fstpt
dec
mov
cmp
aam
outsl
xchg
mov
in
xchg
dec
pushf
test
ficompl
mov
insl
call
jg
push
notb
xor
scas
scas
pop
pop
xchg
adc
out
inc
aas
scas
push
and
out
mov
int3
cmp
mov
ret
jb
xchg
mov
xlat
fwait
cmp
scas
insl
cmp
mov
jnp
or
dec
daa
jo
loopne
test
push
fcmovnu
mov
aas
fsub
repnz
xlat
push
dec
fdivrl
in
loop
adc
pop
outsb
jmp
fldcw
mov
out
iret
das
not
mov
or
xlat
mov
or
psadbw
es
outsb
mov
insb
and
repnz
dec
sti
add
mov
scas
adc
jmp
mov
cwtl
xchg
cltd
mov
push
cmc
dec
push
and
xadd
jnp
pop
scas
icebp
inc
jb
sub
xor
push
push
int3
sbb
test
or
lock
call
mov
sbb
jne
rorl
int3
adc
ret
jg
or
jne
sbb
lahf
mov
in
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
xchg
mov
lea
mov
inc
add
fisubrs
into
adc
dec
out
xor
push
xchg
fsts
push
outsb
jmp
mov
in
out
mov
adc
xor
test
pop
ftst
fsubrs
hlt
subb
jb
jge
mov
dec
jbe
xor
rolb
arpl
sbb
pop
and
xor
ret
adc
adc
aam
jb
pop
sub
enter
adc
popa
insb
in
inc
sarl
fmul
call
xchg
lods
pop
cmp
cmp
or
push
xor
xor
and
pop
inc
xorl
stos
push
insl
pop
cmpsb
inc
lock
fs
and
dec
jno
jp
pop
push
loope
cmpb
sub
or
scas
idivb
sbb
dec
push
sub
scas
imulb
dec
inc
mov
and
bound
or
nop
jb
cmp
mov
pusha
sbb
sub
xchg
add
ret
jbe
mov
das
lret
mov
popa
outsl
test
lret
mov
aam
pop
scas
aaa
jo
mov
iret
mov
push
inc
sub
push
or
cltd
add
sti
ljmp
pop
and
int
push
loopne
inc
div
mov
gs
pop
out
fwait
vpmullw
inc
fnsave
cmp
push
pop
mov
jo
cmp
nop
dec
clc
out
push
jp
jno
fcoml
mov
in
sarb
lds
mov
sub
or
xchg
int
sbb
jae
lods
popa
fisttpll
neg
adc
pop
leave
pop
pop
push
pop
aas
cmp
out
xor
inc
cmp
in
mov
aas
xchg
lods
ja
or
xchg
jne
loope
jno
cmp
mov
arpl
pop
mov
push
daa
mov
mov
push
nop
cli
inc
and
fs
jno
in
out
arpl
cmpsl
jo
push
pop
cs
push
add
in
cmc
jp
movsl
pop
lret
out
or
lods
add
adc
push
mov
push
jbe
es
fadds
mov
loop
cmp
sub
enter
xchg
lods
jne
dec
les
mov
fiaddl
push
roll
dec
adc
mov
lcall
mov
out
into
rorl
outsb
into
inc
loop
in
pop
and
jns
sub
sbb
and
fsubs
filds
xchg
adc
call
mov
pop
movsl
lods
sbb
test
mov
inc
jno
dec
adc
rorb
js
mov
das
jp
out
ljmp
iret
sub
jp
jae
or
js
popf
or
outsb
fisubl
test
adc
lret
sub
mov
mov
adc
dec
mov
ljmp
int
mov
jno
mov
aad
aad
lds
andl
mov
js
inc
cmp
mov
out
mov
scas
lcall
add
testb
dec
adc
sbb
jg
mov
in
jle
pop
and
pop
icebp
repnz
push
cmp
icebp
xchg
lock
je
add
sbb
jo
mov
push
xor
cmpl
mov
xlat
cmp
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
hlt
push
dec
sbb
stos
adc
sbb
subl
div
test
btl
push
push
insb
sub
lods
cmp
pop
lods
or
leave
adc
jle
sub
dec
fsubrs
mov
or
ljmp
xor
push
aaa
std
cmp
mov
jle
les
popa
test
cmc
aaa
dec
test
std
and
aas
in
mov
dec
out
in
xor
or
pushf
cmpsl
jbe
cld
and
ljmp
aad
cmp
and
push
jne
cmpsl
and
push
or
repz
test
scas
sub
js
gs
mov
orb
pop
dec
mov
pop
lods
xchg
cmp
mov
out
xor
rcll
sbb
lds
insl
rcl
push
ret
lret
pop
add
dec
loop
pop
imul
cld
and
dec
xchg
ljmp
push
mov
pop
or
hlt
call
cmp
push
ljmp
sbb
inc
lds
movsb
int3
into
popa
jo
add
int3
call
nop
lds
int3
and
push
fsubs
cmpsb
cltd
pop
push
sub
pop
cmp
sbb
scas
aad
jne
std
lret
insb
mov
cmp
jae
and
xor
out
push
adc
addb
andl
out
outsl
repz
adc
pop
mov
daa
ficoms
jns
dec
inc
leave
or
sbb
repnz
mov
jmp
icebp
jl
cmp
scas
inc
dec
or
ljmp
sub
cmc
add
outsb
lahf
mov
shrb
ss
dec
push
inc
lea
cmp
lret
fucomip
sbb
ljmp
or
mov
mov
jns
std
push
std
jmp
pop
fisubs
xchg
sbb
arpl
sub
in
inc
sub
in
ja
push
inc
xchg
xlat
mov
lds
insb
imul
push
bound
xchg
or
lcall
push
das
sti
add
inc
jmp
jp
sbb
shrb
stc
sbbb
jl
and
mov
mov
lods
dec
loope
cmp
stos
jmp
jmp
nop
aas
pop
popa
cld
add
imul
ja
test
daa
push
jmp
mov
jecxz
std
aaa
pop
popf
mov
jmp
push
jns
out
cmovge
pop
inc
jp
outsl
cmpsb
xchg
xlat
pop
scas
xor
lea
mov
mov
enter
pop
es
loope
xchg
xchg
into
vunpcklps
gs
jo
push
lret
and
xlat
jecxz
xor
sarl
insb
sub
mov
pop
std
fs
imul
cltd
nop
subl
repz
adc
data16
call
sub
push
fwait
sbb
rcll
sub
mov
loope
and
and
mov
out
loope
or
adc
inc
mov
jno
add
aam
faddl
mov
or
fldl
and
jno
jle
inc
je
sbb
loop
test
cmovl
cmp
jb
jbe
imul
jnp
sti
jp
inc
cld
dec
and
in
xor
inc
cmp
and
ret
aaa
lock
inc
adc
inc
sub
dec
sbb
dec
imul
je
mov
imul
and
push
mov
lock
test
shlb
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
ja
fs
sbb
stos
adc
sbb
xchg
fisubs
data16
cmpsl
push
ds
outsl
call
sub
xchg
xchg
dec
not
jge
pop
push
mov
dec
imul
clc
in
rcll
jb
outsb
push
jg
aas
cwtl
mov
in
jg
jae
les
ja
sarl
mov
adc
test
inc
cwtl
mov
loop
pop
dec
jg
pop
pop
and
pcmpeqd
add
int
movsl
gs
test
rcr
push
push
jmp
adc
or
int3
mov
inc
cmpsl
xchg
mov
inc
test
jge
out
add
jl
int3
into
add
jmp
xor
adc
jb
and
lods
xchg
xor
lock
mov
and
leave
rol
cmp
fsubl
and
mov
leave
and
repnz
ja
jl
add
test
lods
and
mov
outsl
in
push
ret
ret
jl
or
cmp
jg
and
pop
inc
inc
xchg
push
push
test
pop
daa
xor
insb
iret
adcl
test
ja
xor
clc
adc
xor
adc
testl
mov
sti
mov
shlb
sbbb
icebp
je
sbb
out
jne
cmc
mov
stc
arpl
imul
mov
adc
xchg
jge
mov
jno
pop
jp
cs
test
mov
inc
mov
dec
sub
cmp
clc
dec
in
xchg
jnp
ja
or
dec
and
cwtl
mov
ds
dec
aas
xor
cmp
in
or
aam
icebp
mov
jl
cmp
xor
stc
inc
jo
mov
jb
lods
sub
mov
loope
xchg
ja
sti
stc
mov
lock
xor
clc
push
mov
fisubs
mov
sbb
inc
xor
sbb
mov
fsubrl
jmp
leave
daa
push
lock
mov
sub
add
dec
adc
jg
xor
int
adc
xchg
mov
out
mov
sbb
inc
lods
pop
jg
xchg
push
ds
cmpsl
js
xorb
lock
scas
inc
or
inc
lcall
std
mov
idiv
ret
cmpsl
pop
push
sub
push
xchg
rcr
inc
jno
cmpsb
dec
test
into
jmp
ret
inc
dec
popa
and
repz
fisubs
xchg
mov
cmpsb
outsl
cmpsb
lret
mov
ds
lea
push
push
fildl
adc
push
mov
mov
and
sbb
adc
adc
or
pushf
mov
into
adc
call
inc
dec
scas
je
pop
or
xor
loopne
xor
adc
repnz
ret
xor
mov
and
adc
xchg
sbb
fs
idivb
insb
lock
lahf
stos
das
lods
mov
mov
cmp
ljmp
inc
pusha
sbb
movsb
mov
sbb
add
xchg
jo
xlat
mov
xor
jmp
mov
jae
cmpsb
mov
sub
es
int3
sbb
addr16
clc
cmpsl
mov
mov
pop
dec
lret
popf
pop
aam
sbb
in
add
jb
sbb
in
and
jge
mov
aam
xor
aaa
cld
fistpll
mov
mov
adcl
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
aad
jo
cmp
sbb
out
xor
sub
or
add
or
inc
sbb
xchg
iret
sbb
shlb
push
inc
test
loopne
in
xorb
push
sub
pop
ret
leave
sti
jg
or
cmp
in
nop
or
inc
fdivrs
icebp
fwait
or
adc
in
mov
push
jo
fcompl
xchg
adc
pop
inc
inc
lods
xor
rcrb
aam
push
stos
sbb
out
mov
gs
in
frstor
ss
mov
stos
mov
cltd
mov
inc
sarl
mov
aad
clc
mov
or
xor
lret
pop
rcll
ljmp
std
inc
jae
and
stos
and
and
lock
cmpsl
jno
sbb
loop
mov
stos
sbb
cld
add
rorl
icebp
or
and
cmpsl
jb
jg
inc
mov
mov
addr16
divl
lret
stos
mov
mov
into
mov
xchg
int3
cmp
notl
fs
mov
mov
mov
pop
loop
pop
adc
pusha
rcll
mov
mov
jle
xor
fsubr
cli
push
jg
pusha
lock
inc
push
sbb
psubusw
push
fadd
or
mov
pop
pop
fisubs
cwtl
and
scas
pushf
mov
add
or
cltd
lods
and
scas
cli
dec
les
xor
xor
mov
inc
add
outsb
add
fidivl
insl
or
fildl
add
jmp
stos
sub
clc
add
nop
pushf
inc
stc
rcl
jnp
add
xchg
sub
repz
jb
fwait
incl
pop
inc
in
jge
outsb
jb
jmp
add
and
ss
sub
repnz
int
push
xchg
cmpsb
jns
shlb
xorb
jnp
addr16
sbb
scas
or
dec
popa
dec
dec
xor
popa
jg
inc
jp
mov
or
scas
mov
pop
xor
loope
push
mov
lahf
mov
mov
lret
paddusb
cli
mov
or
inc
iret
jae
dec
lar
popa
cmpsb
xchg
stos
inc
cmp
inc
dec
cmpsl
push
pop
pop
push
sbb
shrb
scas
cmp
add
sbb
push
and
movsb
ss
out
xchg
mov
adc
xorb
jae
decb
test
call
shr
jne
push
xor
jns
fs
fdivrs
cmc
adc
jecxz
pop
sahf
imul
imul
cmp
xchg
in
stc
test
dec
dec
jns
jg
ds
popa
add
xchg
push
out
mov
adc
inc
repz
push
lahf
sub
xor
add
arpl
int
mov
mov
addr16
mov
mov
pop
out
leave
lods
ficoml
cs
push
dec
mov
hlt
es
dec
sbb
mov
and
daa
or
imul
flds
nop
and
adc
test
jae
inc
jecxz
divl
pop
pop
dec
repnz
fists
add
jae
inc
in
jp
addr16
jb
dec
mov
sti
pop
dec
dec
push
inc
push
popf
inc
jno
dec
push
rcr
decb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
add
dec
push
xor
sbb
or
sub
pop
jno
mov
rcll
ljmp
cmp
jle
fadd
lock
rcll
ror
xchg
adc
out
mov
scas
lret
push
pusha
in
push
sarb
jne
les
pop
rorl
jmp
dec
stos
push
mov
repz
push
push
dec
cmp
lds
std
cmpsl
cmp
into
push
imul
fadd
mov
ds
outsl
xchg
xchg
xchg
or
test
cmp
lock
adc
pushf
jp
stos
push
jnp
lods
or
jns
mov
ss
xchg
pushf
daa
stc
sbb
nop
inc
pop
cld
jp
push
addr16
push
jns
mov
cwtl
ss
fiadds
sub
scas
lret
icebp
mov
cmpsl
add
loope
in
imul
cmp
jge
push
push
sti
dec
push
aaa
cmp
push
insl
sub
mov
out
ja
pop
rcrb
xor
cmc
xchg
loopne
or
mov
out
ret
pop
cmp
and
jo
push
mov
sub
dec
dec
xor
loop
dec
int
and
js
shlb
xlat
pushf
push
xchg
lods
addl
mov
lcall
add
dec
inc
adc
fwait
xor
cmp
mov
out
or
ds
dec
sbb
mov
pusha
dec
inc
and
mov
in
js
adc
cmp
aam
sbb
loope
push
lods
ret
add
xchg
into
xor
repnz
jno
pop
or
test
push
out
add
jmp
xor
je
shr
xor
dec
aas
xchg
xchg
fisubl
mov
dec
xchg
pop
lods
std
out
mov
pop
outsl
sti
inc
mov
inc
adc
or
cmp
nop
pop
mov
lock
les
daa
or
fstpt
mov
call
fcompl
mov
or
mov
sub
adc
popa
mov
dec
test
xor
jmp
push
sbb
or
push
inc
lahf
push
inc
int3
popf
cli
movsb
or
xchg
loopne
sbb
lahf
and
cmpsb
mov
dec
xchg
stc
push
fists
adc
cwtl
sub
loope
fs
add
fildl
sbb
mov
jnp
dec
push
xor
loope
data16
leave
or
and
cmpsb
pushf
std
fidivl
icebp
mov
icebp
daa
cwtl
and
mov
fsubrp
jp
loopne
test
jg
lea
adc
lods
or
jge
movsl
mov
push
push
push
adc
adc
sbb
mov
mov
xchg
adc
stc
mov
pop
mov
dec
add
sub
imul
mov
sub
push
ret
repnz
dec
in
test
push
sub
mov
mov
addl
adc
jmp
loopne
mov
in
in
mov
js
add
lcall
sub
lcall
mov
ret
jle
testb
scas
pop
sub
cmpsb
clc
mov
inc
repnz
fistl
pop
adc
scas
pop
jae
xor
scas
jno
mov
mov
push
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
mov
sbb
adc
sbb
mov
subb
jno
push
inc
xchg
fidivrs
inc
jb
mov
addr16
push
dec
call
jp
imul
mov
mov
sahf
in
bsr
mov
xor
js
lea
pop
sbb
push
mov
xor
hlt
mov
xchg
popa
mov
popf
fcomi
cmc
pop
jmp
cmp
pop
push
mov
add
movsl
and
inc
mov
mov
aaa
into
jge
jns
dec
and
aaa
movd
ret
pop
mov
push
pop
jge
sarb
popa
cmp
sbb
cmpsb
lahf
mov
jo
out
add
sahf
xchg
dec
fdivrp
enter
mov
into
sti
ljmp
pop
jns
loop
repz
push
sbb
pop
cmpsl
xor
mov
sti
cmp
movsb
pop
dec
pusha
rcll
loope
icebp
stos
fwait
stos
add
and
mov
std
dec
push
test
sbb
inc
xchg
js
mov
aad
push
mov
and
fcmovnb
cmc
rol
int3
push
ret
enter
mov
out
inc
mov
stos
int3
cld
dec
push
js
loop
mov
mov
dec
xchg
push
arpl
enter
arpl
inc
in
out
iret
mov
push
pop
scas
sahf
adcb
xchg
dec
jp
lcall
mov
cmp
mov
xchg
movsb
stos
fbld
pusha
or
movsl
rcr
fistpl
loope
xor
shlb
daa
and
and
pop
xchg
push
pop
xchg
insb
inc
mov
sbb
or
les
sahf
nop
enter
add
shll
out
sbb
add
in
in
lret
or
insl
jno
or
outsl
dec
jge
dec
out
inc
shll
pop
fwait
mov
jnp
popf
out
out
push
pop
cmpsl
cmp
pop
sbb
mov
mov
dec
rol
movsl
push
aad
jg
fdivrs
test
sti
jl
inc
jbe
jle
out
orl
ss
adc
xchg
stos
outsb
decl
int3
inc
lods
lods
jbe
jg
sbb
fbstp
push
pop
xorb
cmpsl
pop
popf
leave
jns
fucomp
sbb
inc
fwait
outsl
jns
into
pop
xchg
insb
aaa
pop
scas
call
imul
ja
jge
inc
shrb
sub
mov
xchg
and
xor
push
mov
movsl
rcrb
xchg
pop
xor
imul
cmpsl
int3
xor
movsl
xor
mov
arpl
and
fs
out
lock
sub
pushf
roll
jecxz
ret
dec
push
fbld
xchg
lea
or
repz
cli
icebp
ret
pop
fldenv
add
gs
push
mov
je
xorl
enter
in
mov
cmp
sti
iret
ja
inc
cwtl
sub
xor
dec
mov
sbb
xchg
adc
outsb
ret
mov
lcall
ret
jmp
faddp
sub
fiadds
mov
les
fstpl
fdivl
xchg
hlt
mov
loopne
leave
enter
mov
scas
jmp
or
aas
les
dec
mov
add
movl
inc
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
pop
inc
push
and
sbb
adc
sbb
dec
mov
dec
rorl
or
adc
cld
outsb
mov
lea
arpl
test
mov
and
push
mov
mov
pushf
sub
lods
outsb
or
inc
xchg
js
jmp
mov
mov
dec
pop
sbb
fbld
mov
mov
out
ds
jnp
iret
fdivrp
or
sub
lea
movsl
and
push
out
je
fcmove
jb
xchg
pop
cwtl
rcl
mov
loopne
lret
mov
and
shr
dec
jns
outsb
popf
add
and
pop
sub
outsl
add
lahf
fs
outsl
sub
repnz
ret
mov
lock
mov
pop
imulb
aas
xchg
int
cmp
js
dec
jmp
mov
and
jns
sub
xor
lock
fnstenv
inc
xor
xchg
fsub
jns
mov
outsl
int
sub
add
push
add
push
cmp
fistpll
lret
cmp
or
int
leave
sub
in
jge
xchg
sbb
movsl
call
mov
jg
sbb
mov
jo
inc
xchg
pop
test
mov
cltd
jae
popl
cmp
insb
mov
pop
adcl
popa
out
pop
sub
push
mov
shlb
scas
xor
sub
add
push
mov
aaa
in
jne
xor
cmp
jg
iret
inc
jl
push
fisubs
jmp
xor
jo
jno
movsb
lock
rorl
pushf
nop
pop
pop
sbb
xchg
adc
xlat
dec
lahf
inc
stc
les
shr
loopne
out
sti
adc
outsl
pop
xchg
cld
jnp
mov
dec
test
push
hlt
repnz
mov
push
dec
pop
push
inc
shrb
cmp
fisubrl
shll
lret
cmp
in
mov
fisttps
int
pop
dec
mov
mov
lret
jns
push
cmp
sbb
inc
adc
add
jp
fnstenv
repz
cmpsl
js
dec
cmp
ficoms
xlat
mov
adc
xor
enter
push
imul
lock
lret
fmul
and
int3
pop
sub
cmp
sub
push
out
or
arpl
lock
hlt
cmp
dec
mov
jae
leave
ds
scas
sub
out
sub
sub
mov
int
mov
jae
mov
test
lret
repnz
lahf
mov
xor
stos
pushf
pop
xor
push
data16
dec
out
push
repz
sbb
cs
xchg
and
lret
jle
cwtl
mov
mov
inc
popa
outsb
inc
pop
lcall
sub
aaa
outsb
xor
add
mov
push
and
push
es
lret
add
xchg
sti
and
sub
clc
cs
sub
pop
mov
rorb
lret
xor
ss
push
add
cmpsb
mov
and
jne
fisubs
aad
pop
fsubl
sub
xchg
cmpsl
mov
dec
sub
xor
pop
push
cmp
pop
dec
jmp
loope
mov
leave
pop
jle
fwait
mov
inc
xchg
xor
arpl
pop
cmp
shl
stos
ret
and
cld
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
and
mov
sbb
adc
sbb
sub
and
out
sbb
cmp
stos
push
ret
loop
cmp
loope
out
jbe
aad
mov
xchg
jnp
das
sbb
aam
arpl
sbb
mov
jge
add
cmpsl
pushf
lahf
lcall
push
unpcklps
mov
dec
cmp
pushf
jns
leave
sbb
inc
js
sbb
icebp
jp
cmpsl
xor
xchg
jns
repz
jl
or
mov
cli
dec
arpl
mov
popl
out
and
push
or
sub
pop
nop
dec
notb
test
mov
pop
cmc
pusha
adcb
mov
repz
int3
xchg
lds
je
popa
dec
mov
test
lods
imul
and
xor
adc
dec
cmp
pushf
and
and
push
jle
dec
fisubl
jnp
cltd
adc
inc
push
or
xor
sub
aas
cmpsb
or
sbbl
arpl
sub
jns
add
clc
fcomps
mov
mov
in
mov
adc
xchg
pop
dec
dec
cld
lret
aaa
push
xlat
xor
cmpsb
or
inc
pop
dec
es
mov
jmp
out
gs
adc
push
push
sub
and
ja
jne
movsb
xchg
jae
mov
pop
pushf
pop
jmp
cli
adc
jnp
adc
mov
scas
lret
mov
pop
add
mov
out
jecxz
jmp
cmpsl
imul
cmp
in
sti
leave
inc
cmpsl
xchg
aad
xchg
and
and
push
add
ret
es
test
push
pusha
rorl
rorb
sub
loopne
inc
hlt
das
jbe
push
push
dec
outsl
lods
ljmp
adc
xor
mov
ffreep
movsl
mov
rorl
iret
jge
xchg
inc
inc
xchg
mov
and
push
pop
jae
jp
shll
sub
cmp
or
int3
fcoml
std
push
das
push
lock
xchg
adc
sbb
pop
inc
inc
sub
push
add
lcall
aam
arpl
mov
je
imul
std
mov
stos
mov
jge
pushf
add
mov
jle
sbb
xchg
push
shll
out
int
mov
icebp
mov
jo
pop
out
lahf
lds
sbb
xchg
notl
das
push
lds
ret
adc
and
aas
vpsubb
iret
lds
inc
sbb
iret
dec
mov
jo
mov
leave
cld
je
xlat
add
popf
xchg
popf
aaa
jle
push
cwtl
sbb
cwtl
mul
mov
mov
lret
fs
mov
and
pop
and
addl
inc
xchg
not
sbb
es
les
push
and
push
scas
sbb
push
or
sbb
arpl
popf
in
scas
xchg
je
sub
cmpsb
enter
cmp
and
lods
xchg
push
in
lret
xor
cmp
pop
xchg
call
pop
jnp
sti
sahf
cwtl
jmp
xlat
fstps
pop
in
mov
rcrb
lret
lcall
aaa
cmp
cmpsl
jb
insb
inc
addr16
xchg
mov
push
xlat
mov
inc
test
call
pushf
add
ds
aas
les
dec
lods
shll
or
rorl
dec
or
fsubs
rorl
dec
rorb
scas
rorl
dec
enter
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
add
inc
push
push
sbb
mov
idivl
inc
cmpsb
push
lock
leave
inc
pop
cmp
sbb
push
mov
pop
mov
notl
mov
add
aaa
shll
jge
jp
mov
or
push
push
sbb
iret
inc
das
cld
jnp
mov
sub
js
pop
shr
cmp
dec
dec
and
or
add
inc
outsb
push
and
dec
xor
jb
leave
xchg
ret
pop
xchg
pop
and
and
sbb
and
iret
lock
int3
out
push
xchg
cli
sub
lds
jg
bound
mov
mov
sbb
cmp
lahf
cmp
in
in
mov
cmpsb
imul
in
cmpsb
cltd
xchg
jno
popa
pop
aam
pop
push
xchg
cmp
shr
inc
cli
in
out
pop
jb
pop
xor
dec
aad
mov
adc
inc
mov
fdivrs
lock
pop
movsl
adc
mov
jo
mov
shrl
adc
push
xchg
in
cmp
jl
add
leave
les
iret
sbb
inc
fisubrs
pop
mov
mov
jmp
inc
xchg
mov
or
inc
jo
xor
mov
sbb
xchg
cmc
test
dec
inc
inc
dec
cmpsb
or
inc
xchg
xor
filds
pusha
hlt
sbbb
pop
mov
push
jae
sub
sbb
addl
call
jl
xchg
mov
fadds
mov
aaa
or
push
pop
js
and
jle
jecxz
aas
loopne
fisttps
mov
lods
sub
adc
xor
inc
add
jbe
cmpsl
add
xor
xor
enter
ret
test
and
stos
cltd
push
fwait
or
push
jle
popf
sub
xchg
mov
ret
sbb
dec
push
vminps
and
sub
std
mov
fwait
ret
dec
sbb
gs
scas
mov
pushf
ja
jnp
push
sbb
lock
mov
or
int3
ficompl
out
call
xlat
pop
inc
mov
xchg
inc
pop
aas
add
fdiv
sub
cltd
mov
das
push
sub
jmp
jp
repz
pusha
push
sarl
es
cltd
or
movsb
stos
add
add
adc
sub
stos
adc
sarl
sbb
pop
and
addl
sbb
sub
popf
add
ds
fsubr
pop
xor
pop
lret
clc
pop
dec
add
lds
lods
out
fsubp
jne
clc
data16
movl
fimull
mov
or
into
sub
jne
movsl
push
popl
clc
adc
mov
mov
aad
push
push
ss
fistl
and
int3
pop
pop
outsb
in
inc
adc
jg
dec
xchg
cs
push
sbb
fs
in
cmpsl
das
idiv
cs
stc
ss
cld
mov
movsb
fsubrs
push
aad
outsb
dec
cmp
out
add
call
fmul
in
lahf
subb
popf
xchg
scas
xchg
ljmp
xor
mov
sub
xchg
mov
sbb
mov
jbe
mov
mov
movsl
imul
mov
push
or
movsb
and
pop
xchg
mov
dec
pop
les
mov
ret
mov
push
lods
pop
xor
push
adc
fbstp
cld
std
add
jb
or
scas
mov
jnp
lods
clc
mov
aaa
stos
pusha
push
push
mov
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
arpl
mov
adc
sbb
xor
mulb
rclb
clc
je
int3
ljmp
ja
or
jmp
jle
rcr
push
aad
cmc
xor
xchg
push
jle
xlat
loope
mov
pop
je
icebp
in
icebp
pusha
jg
data16
pop
push
incb
lods
mov
outsl
out
xchg
stos
jae
jl
or
clc
mov
mov
adc
add
jge
lock
add
sbb
ret
push
inc
ds
lcall
idivl
adc
in
fucom
mov
outsb
loop
push
sub
adc
in
mov
cld
movsb
dec
and
and
sbb
loopne
ror
sbb
ljmp
jp
push
arpl
pop
mov
jno
data16
bnd
fndisi(8087
repz
and
mov
hlt
pushf
adc
orl
dec
sub
dec
ljmp
jg
hlt
xchg
cwtl
push
inc
mov
inc
push
ljmp
mov
xor
push
cmc
ficoms
out
inc
jne
cmpsb
in
mov
repz
xchg
cmp
es
pshufw
mov
jge
dec
aad
fnstsw
aam
pop
rolb
je
sub
dec
or
jle
add
hlt
or
sub
mov
cld
fstps
fnsave
imul
jbe
dec
jns
add
xchg
mov
enter
arpl
mov
or
mov
jle
mov
fsubr
cmp
dec
or
dec
xchg
pop
sti
mov
shlb
cmc
jae
xor
lretw
jns
cld
lods
cmp
push
ss
test
fmull
or
daa
fistpll
push
into
and
jb
lcall
mov
enter
rcrl
inc
cwtl
inc
fsts
popf
and
scas
sbb
stc
mov
pop
jl
jg
xchg
cmp
jae
inc
repnz
int
data16
cmp
fwait
cmp
out
incl
and
mov
jns
leave
mov
dec
sub
push
popf
dec
jecxz
sbb
out
xchg
dec
out
add
ds
iret
and
sbb
fwait
stos
fcomps
ja
mov
les
mov
cmp
sbb
addb
xchg
xor
mov
or
test
lret
inc
sbb
rcr
xchg
jbe
into
mov
scas
push
and
and
xchg
sub
cmpsb
xchg
mov
xchg
xchg
or
lods
sub
sub
xlat
push
stc
outsl
loop
dec
nop
mov
adc
xchg
stc
and
mov
pop
and
dec
pop
daa
sbb
jo
pop
lods
pop
adc
sbb
stos
pop
mov
int3
xchg
adc
jbe
fwait
jl
xor
sub
dec
bound
sbb
jnp
in
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
and
jl
or
sbb
sub
pop
inc
aam
jle,pn
push
jp
cwtl
cmpsl
or
dec
or
add
mov
dec
fsubrl
mov
repnz
sbb
mov
mov
sub
adc
jnp
mov
repnz
scas
je
xchg
gs
dec
xchg
xor
mov
fcmovnu
in
movsb
xor
xchg
pop
ja
jl
out
cmp
mov
xchg
fsubrl
pop
cmpsl
cmpsb
mov
mov
sbb
shrb
sbb
or
ficoms
stc
aaa
push
mov
mov
and
xchg
and
and
fsubr
mov
and
xchg
inc
clc
pop
push
xorb
sahf
or
push
mov
cli
lea
mov
inc
jb
fnstcw
pusha
test
leave
lods
cld
loope
imul
jnp
or
and
repz
lret
cld
lret
and
ds
mov
dec
dec
leave
adc
sbb
icebp
cs
xchg
jecxz
addr16
outsl
sahf
mov
xlat
and
lds
or
and
in
pmaxsw
daa
adc
leave
xor
ja
mov
and
mov
mov
out
add
lods
dec
dec
scas
add
push
andb
pushf
sbb
mov
pushf
add
jl
xchg
int3
in
or
xchg
xor
or
jno
push
repnz
out
xchg
and
cs
or
adc
into
arpl
xchg
aad
fimull
xor
fidivs
and
int
xchg
mov
jmp
adc
cmpsl
sbb
mov
xchg
sarl
cltd
or
cli
pop
push
fistps
enter
pop
push
out
add
lods
dec
clc
pop
test
inc
push
jbe
xchg
loopne
hlt
mov
in
icebp
lds
dec
xor
mov
cwtl
into
in
and
fdivrs
push
fdivp
adc
aad
sahf
and
mov
mov
fs
or
jnp
bound
xor
mov
xor
rorb
es
mov
push
fisubrl
insl
xchg
scas
mov
and
loope
in
in
test
imul
fs
imul
dec
adc
inc
push
xlat
pop
dec
cmp
rcl
cmp
sub
mov
in
ret
scas
jo
stos
out
rcrb
push
dec
out
add
ficomps
xor
pop
cmpsb
out
or
in
lock
gs
stos
stos
jb
cwtl
add
aaa
push
notl
mov
cs
sub
sahf
pushf
cmc
xor
fdivrs
mov
or
adc
dec
movsl
xor
xchg
stos
scas
fsts
in
mul
test
leave
mov
in
dec
mov
cmpsb
sarb
addb
int3
cwtl
ljmp
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
sbb
pop
stos
hlt
add
sbb
lahf
or
inc
out
or
mov
xlat
sbb
repnz
outsb
push
jbe
loop
mov
inc
pop
pusha
jp
cmp
mov
icebp
xchg
mov
mov
rcrb
cmpsb
xchg
sub
adc
jne
stos
jo
dec
cmp
in
lcall
push
fucomi
adc
fwait
push
inc
fsubr
nop
jns
dec
mov
sub
sbb
sbb
lods
cmp
mov
pop
loop
sti
dec
dec
dec
je
pushf
enter
jnp
jo
lock
mov
out
xor
pop
lret
lret
loope
scas
dec
push
pop
mov
pop
mov
jae
in
jo
test
test
cmp
add
pushf
shrb
mov
pop
movsb
pcmpgtd
lock
popa
gs
int3
and
clc
xor
adc
movsl
cwtl
sarb
mov
mov
andb
push
addr16
rclb
mov
adc
dec
lea
cld
jmp
imul
sub
mov
jns
das
mov
mov
or
jg
jne
xor
scas
mov
stos
xchg
inc
stos
add
pop
pop
and
pop
mov
push
and
dec
add
imul
jbe
addr16
jno
mov
sbb
adc
imul
mov
dec
mov
les
fdivrl
ret
pop
pusha
mov
mov
mov
sarb
xchg
call
push
leave
cmp
cmpsb
xor
lock
push
icebp
lods
cmc
es
jnp
pop
and
in
shlb
jmp
mov
xor
test
jle
sub
pop
lods
mov
and
add
push
mov
faddl
xchg
mov
adc
scas
shrl
out
popa
cmpsb
push
pop
call
fstl
inc
nop
pop
xlat
pop
sub
sub
decl
daa
mul
pop
lret
mov
movsb
loope
push
and
pop
or
out
mov
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
push
cld
push
sbb
push
xchg
es
imul
cld
xor
je
stos
test
jb
mov
pusha
leave
fldt
push
jl
addr16
mov
fmul
cmpb
jbe
inc
mov
lea
das
and
mov
test
sub
xor
test
test
or
mov
popf
dec
cmp
test
test
adc
dec
jb
pop
insl
fildl
stc
mov
cmp
xor
push
mov
xchg
and
into
cld
ljmp
bound
mov
rcl
lcall
ljmp
pop
add
in
pop
xchg
cmp
packuswb
das
xchg
or
pop
test
add
and
repnz
lods
mov
popa
loopne
mov
jnp
test
adc
inc
mov
loopne
adcl
lahf
inc
in
lea
inc
push
pop
add
cmp
js
xorb
xchg
inc
in
gs
jecxz
jns
jae
sti
mov
sub
popa
imul
sbb
jae
cmp
loope
sub
bound
cmp
fcoms
clc
iret
movsb
mov
and
cli
pusha
or
mov
test
sub
add
xor
pop
les
cmc
test
or
int
stos
int
dec
cmp
mov
add
xor
es
inc
cwtl
mov
fadd
push
outsb
cmc
jp
jo
push
fs
es
sbb
adc
inc
add
mov
mov
aam
outsb
mov
add
cmp
sbb
mov
mov
enter
pop
mov
and
and
adc
cmp
sbb
jp
pop
sbb
daa
nop
dec
adc
clc
insl
inc
lret
idivl
cli
out
inc
mov
and
cmp
lods
push
mov
nop
pop
pop
xchg
or
jbe
orb
xchg
clc
mov
sub
pop
ljmpw
push
mov
cvtdq2ps
inc
adc
enter
add
adc
jmp
mov
sbb
mov
stc
clc
push
sbb
out
es
dec
mov
push
loope
lcall
mov
pop
add
xchg
lcall
push
outsb
cmp
xchg
inc
and
fiadds
jle
imul
mov
lods
jp
lea
xor
mov
add
sub
mov
fs
push
jmp
int3
push
add
popa
icebp
sysenter
xchg
sbb
add
adc
push
int
data16
stos
aas
xchg
pop
inc
xadd
xor
shll
xor
movsb
pop
outsb
add
dec
je
shl
loop
addl
mov
inc
iret
ss
data16
jmp
test
movsl
mov
scas
cmc
mov
xchg
sub
ret
ret
add
fcmovnb
mov
mov
rcrb
fimull
aaa
adc
sbb
out
jle
push
inc
cmc
sbb
inc
jae
stos
clc
pushl
hlt
cmp
test
test
or
jne
pop
test
push
jecxz
sbb
jnp
icebp
imul
jnp
movsb
popf
pop
les
pop
dec
insl
or
push
sub
movsb
test
mov
jb
pop
enter
pop
sbb
push
and
push
int3
mov
insb
notb
xor
adc
cmpsl
jns
pop
test
shlb
out
xchg
test
dec
movsb
xor
cmpps
and
arpl
inc
lcall
fsubrs
push
fldl
cli
popf
in
gs
lods
pop
ds
mov
mov
mov
mov
mov
push
subl
xchg
shrl
inc
std
fcmovnb
lock
cwtl
inc
or
mov
pop
cs
add
jle
cmpsb
cli
loopne
or
push
adc
cwtl
jnp
xchg
mov
stos
and
xchg
pusha
loopne
mov
hlt
loopne
in
or
hlt
cmp
and
push
lea
jp
cltd
jmp
and
fstps
push
and
xlat
jae
shlb
and
stos
gs
push
fnstcw
call
pushf
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
cmp
push
sbb
adc
sbb
iret
cli
ffreep
adc
stos
and
pop
lahf
cmpsl
pop
adc
test
imul
call
scas
push
jmp
jp
pop
xchg
push
mov
cmpsl
inc
icebp
add
cs
rcll
adc
dec
add
orl
data16
stos
js
in
into
or
or
test
not
mov
add
inc
jecxz
cs
cld
popa
hlt
gs
jne
sbb
xorb
lcall
adc
inc
jg
mov
push
movsl
lret
jp
inc
sbb
push
cmp
std
icebp
jg
repz
dec
loopne
pushf
pop
fadds
and
fcmovu
jp
push
rclb
pop
cmp
addr16
jl
cltd
dec
mov
and
push
scas
adc
adc
adc
mov
loope
fistpll
and
mov
sub
sub
sbb
add
in
xchg
sub
cmp
xchg
aad
dec
sbb
fdivs
add
or
mov
dec
jne
push
mov
hlt
fcmovu
jns
fmull
flds
rcrl
sbb
repnz
out
pop
sahf
sbb
pop
inc
enter
daa
imul
and
test
sub
cmp
push
push
es
jnp
nop
insb
pop
insl
mov
jb
and
mov
lahf
popf
adc
cmpsb
pop
push
push
cs
xor
negl
movsb
fwait
int3
lods
fdivrs
xchg
addb
cwtl
and
or
cmp
add
adc
mov
lahf
repnz
lea
movsl
fsts
inc
lahf
push
add
ja
repz
and
adc
push
aad
inc
push
pop
sbb
push
dec
popa
xor
xor
cmp
jb
int
movsl
xchg
call
mov
ficoml
sub
hlt
cmc
pop
inc
insb
test
hlt
adc
mov
lock
out
and
xor
xor
sub
in
inc
xor
inc
pop
jnp
jnp
xchg
mov
xor
scas
repz
lret
push
jmp
jbe
pop
insl
sti
hlt
test
ret
add
xchg
mov
push
cmp
and
test
outsb
pushf
inc
fmul
das
das
ror
mov
jecxz
cmp
mov
jge
mov
mov
jno
addr16
push
test
or
cltd
sbb
ret
pop
shl
cmp
jne
jmp
fistpll
popf
fmul
int
push
fstps
or
mov
nop
dec
cld
sbb
lret
sti
mov
mov
fsub
mov
inc
push
out
xchg
inc
mov
cmp
jle
lret
adc
and
add
and
movsb
nop
cs
jmp
add
inc
das
outsl
lret
mov
push
test
notb
adc
cwtl
pop
lods
inc
loopne
hlt
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
outsl
je
repz
xor
mov
dec
xor
xorl
pop
jne
jl
les
out
pusha
mov
andb
and
aaa
pop
jp
or
mov
add
insl
pop
mov
mulb
mov
test
out
fucomp
movsb
out
or
mov
add
and
sub
mov
imul
pop
push
pushf
push
jmp
jbe
mov
jno
int
fisubrl
xor
mov
push
push
dec
mov
fisubrl
repz
mov
enter
adc
mov
push
mov
gs
jmp
lea
out
dec
lahf
movsl
cmp
mov
xor
shlb
loop
xor
std
dec
inc
imul
cmp
sub
insb
das
cmpsb
mov
enter
movsb
lds
lret
sub
push
repnz
pop
jb
stos
or
mov
fcomps
mov
outsl
xchg
dec
jae
or
and
sub
into
rclb
pop
adc
add
loope
cmp
fmull
popf
sub
lods
dec
push
inc
int3
push
pop
shll
pop
or
mov
in
shrl
sbb
lret
stc
lods
lods
test
sahf
mov
sub
fcomip
or
ja
sub
pop
rcr
pop
cwtl
pop
aad
cltd
enter
sub
lret
loop
aas
out
mov
mov
insl
xchg
gs
sbb
mov
mov
test
rorb
test
inc
daa
mov
add
inc
dec
cmp
arpl
cmp
je
xchg
rorl
aaa
mov
fpatan
aas
das
inc
imul
popl
ret
pop
xchg
in
popf
inc
fcomps
push
xor
into
xor
lods
mov
sbb
aam
mov
pop
dec
mov
mov
xchg
dec
push
mov
sub
xchg
stos
in
gs
pop
sbb
call
and
mov
xchg
jp
insb
ss
dec
mov
std
xor
cmp
shrb
into
ljmp
and
shlb
jns
es
cmpb
das
inc
pop
mov
jbe
pop
mov
or
sbb
sub
imul
call
ret
dec
insl
or
fldt
outsl
stos
test
andb
pop
cmp
inc
dec
cld
loop
pushf
sarb
or
gs
and
icebp
dec
pop
ja
jmp
mov
mov
shrb
movsl
push
dec
iret
mov
push
xlat
sbb
mov
sub
inc
mov
in
jno
mov
adc
mull
decb
ret
sti
mov
cmp
test
ret
stos
pop
lds
mov
les
or
xchg
ss
push
jp
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
lret
push
pop
sub
je
dec
popf
pop
mov
ret
dec
mov
lods
out
jg
push
negl
or
dec
pop
mov
in
mov
test
push
sahf
add
out
xlat
sbb
jp
das
mov
cmpsb
pop
dec
push
mov
stc
mov
push
stos
std
xchg
into
mov
lods
xchg
pushf
cltd
lock
loopne
int
stos
push
out
sub
adc
add
js
lret
ljmp
sub
add
dec
mov
jb
stos
movsl
mov
rcrb
xor
lock
insb
fstp
ds
push
and
test
pop
out
je
jecxz
xor
clc
push
insb
push
mov
repz
adc
adc
and
out
mov
jns
fdivs
mov
push
lahf
hlt
repz
aad
lds
outsl
shl
inc
fstl
iret
cmp
jne
jo
and
cmc
test
aaa
push
cltd
fs
push
dec
push
es
dec
sbb
subb
repnz
jnp
fildll
test
aas
lahf
mov
jno
lea
push
push
cmpsl
adc
xor
cld
cli
cmp
add
cmp
xchg
sti
pop
jne
icebp
jg
push
in
mov
lret
push
or
dec
nop
sbb
jbe
int3
add
and
sti
mov
je
inc
mov
fisttpl
pop
insb
rcrb
sub
or
negl
xor
sti
mov
xchg
jp
cltd
xor
aas
scas
rclb
insl
iret
je
iret
fists
mov
iret
pop
and
adc
aam
call
data16
and
lds
inc
test
fcomps
loopne
cmp
mov
or
mov
xchg
mov
mov
xchg
jae
dec
cmpsl
inc
push
sbb
test
push
cmp
shl
lcall
ljmp
cmp
fcoms
jg
xorb
xchg
xor
or
mov
inc
xor
xor
and
and
ljmp
xchg
sti
push
dec
pop
imul
testl
xor
mov
dec
mov
dec
dec
orb
sbb
dec
negl
pop
fdivl
xchg
loope
adc
mov
xor
lret
icebp
jb
fimull
leave
out
stc
nop
pop
bound
and
and
push
std
jb
pop
lock
fs
or
pushf
and
pop
add
fidivrl
cmp
sti
test
out
mov
dec
lcall
adc
icebp
mov
push
out
in
scas
fnstcw
mov
iret
mov
lahf
jne
testb
inc
mov
out
mov
in
mov
pushf
adc
or
inc
xor
adc
mov
push
hlt
xchg
ja
fistps
inc
out
shrl
in
popl
sarb
fisubrs
fadds
fucomi
testb
aam
cmp
push
inc
das
jecxz
mov
jle
add
mov
dec
test
cwtl
push
lock
pop
mov
cmp
sbb
ret
or
shr
mov
dec
dec
dec
dec
sahf
inc
rorb
sti
or
dec
fistpl
mov
or
jno
je
xchg
add
fwait
jno
mov
add
add
xor
add
add
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
mov
divb
lods
fcomps
shlb
test
inc
or
inc
inc
mulb
ret
pop
jo
out
pop
mov
inc
mov
testl
or
sub
push
adc
and
jecxz
push
mov
fnclex
icebp
icebp
sub
add
shlb
xchg
mov
scas
inc
out
shlb
pop
sub
add
mov
mov
jb
lds
adc
insl
push
add
xchg
xor
lods
lcall
jp
and
out
movsb
mov
sbb
lock
jmp
testl
cmp
or
dec
lahf
ljmp
add
stos
xchg
shlb
mov
mov
xchg
cwtl
stos
cmp
out
xor
xchg
jmp
dec
dec
test
and
notb
cmpb
jle
mov
shll
xchg
inc
lea
cmpsb
rolb
shl
lret
sahf
lea
add
push
xlat
adc
sbb
hlt
repnz
or
dec
jns
leave
adc
xchg
ja
out
inc
pop
imul
call
ljmp
pop
popa
ret
cmp
lahf
xchg
dec
dec
dec
adc
stos
js
fimull
xchg
roll
stc
jo
mov
push
pop
andl
cltd
or
jge
lds
sub
lock
mov
inc
mov
add
sub
and
ss
call
andl
nop
aam
cli
mov
mov
rolb
and
sub
sahf
sahf
sti
push
loop
test
mov
das
nop
shrb
xchg
and
pop
sub
test
mov
pop
lea
lods
adc
and
push
call
cmpsb
in
and
add
sbb
imull
imul
jge
adc
pusha
in
pop
loopne
cmp
inc
push
adc
adc
std
pop
lea
and
xchg
mov
mov
lock
pop
stc
ds
jge
or
add
and
cmpsb
rorl
pushf
inc
jl
mov
dec
cmp
jno
fstl
mov
dec
add
dec
push
mov
add
inc
mov
pop
bound
clc
fbstp
fisttps
jnp
pushf
xor
test
or
int3
cmpsl
dec
mov
or
xadd
out
hlt
cli
aad
mov
std
data16
leave
inc
xor
bound
dec
pop
mov
arpl
dec
sti
popf
jle
cli
mov
out
cld
cmp
std
inc
push
out
adc
inc
aad
mov
int
mov
repnz
lcall
jmp
inc
xorl
lods
push
jo
push
xor
iret
mov
fldcw
insl
ds
mov
bound
sbb
pop
nop
or
sbb
xchg
mov
inc
sbb
cmp
aaa
repnz
dec
mov
insl
and
mov
pop
jge
leave
mov
adc
dec
aam
cmp
xor
fucomp
adc
xchg
loopne
adc
mov
xchg
inc
rol
inc
jo
clc
xor
inc
ret
jecxz
jge
out
xchg
pop
mov
js
pop
ret
xor
xchg
sbb
stos
repz
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
sbb
mov
mov
push
pop
clc
fucomp
popa
insb
mov
fadds
loope
push
push
shll
fidivrs
cli
int3
movsl
out
ss
add
adc
mov
outsb
scas
jle
mov
jl
nop
sarl
xchg
mov
mov
hlt
shrb
outsl
jo
cmp
sbb
out
aam
ljmp
loopne
xor
push
pop
adc
test
inc
pop
icebp
pop
pop
push
or
jge
outsb
jge
nop
xchg
test
out
sbb
hlt
cmp
mov
push
sbb
jne
enter
cmp
cmpsl
mov
or
mov
les
mov
xchg
mov
mov
mov
imul
sub
aaa
cwtl
jo
push
imul
cmp
push
mov
in
mov
sbb
ss
shrl
sbb
pop
nop
cmp
cmp
lcall
mov
hlt
jae
xchg
cmp
adc
mov
sbb
dec
imul
sub
leave
ret
int3
xor
sbb
int3
jmp
es
mov
hlt
fidivs
loope
cmp
mov
push
roll
fisubl
lea
daa
push
xor
in
jle
cmp
cli
cmp
imulb
push
incl
dec
imul
xor
cmp
js
mov
fadd
cmpsb
mov
loope
fadd
mov
bound
pop
fs
movsl
and
mov
mov
mov
or
aas
ror
adc
lahf
pop
xchg
jno
in
jg
cwtl
mov
mov
test
fcompl
repz
jecxz
push
mov
inc
repnz
int3
jl
das
lds
dec
inc
jnp
mov
cmpsl
push
andb
in
add
pushf
bound
add
and
into
hlt
lods
jbe
push
aam
cli
mov
lret
jle
std
push
movswl
mov
xor
xor
pop
mov
je
jg
push
mov
loope
or
jne
ds
loope
mov
push
aad
xchg
dec
mov
loope
out
add
jbe
cli
sti
sarb
sti
into
outsb
push
jl
fdivrl
mov
data16
lock
mov
or
jb
insb
hlt
insb
xlat
popa
roll
loopne
arpl
and
dec
mov
mov
icebp
fbld
dec
imul
mov
pushf
inc
inc
xchg
pushf
hlt
sub
xchg
test
lock
push
ret
xor
fadds
sar
lds
cmpsb
mov
jns
jnp
cmpl
sbb
int3
adc
popa
dec
mov
push
test
stos
fs
lock
nop
mov
inc
pushl
mov
jmp
insl
fistpll
sti
pop
jno
mov
xchg
inc
inc
jmp
mov
mov
lret
sub
idivb
mov
add
jns
push
cmp
cmp
mov
pushf
inc
xlat
stc
push
dec
mov
movsl
stc
popl
cld
and
dec
cmc
mov
inc
mov
cmpsl
xchg
aaa
pop
nop
aam
movsb
popa
in
mov
arpl
xchg
daa
push
push
adc
adc
clc
loopne
mov
xor
cmp
add
add
movb
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
mov
cmp
mov
jp
imulb
pop
out
xor
jge
fcmovnb
sbb
pop
mov
mov
pusha
fildl
int
insb
daa
dec
xor
push
andl
mov
mov
fcmovu
xchg
popf
shlb
mov
pop
mov
int
mov
outsb
icebp
repz
sub
pushf
jge
out
lcall
mov
inc
dec
lock
fs
sbb
iret
mov
sub
xlat
mov
sub
xchg
in
cmpsb
jmp
fiaddl
mov
int3
adc
pusha
or
or
int3
outsl
and
adcb
movsb
shrl
sbb
sub
es
in
outsb
jne
add
movb
shl
lret
fwait
mov
push
xorl
inc
push
loope
pop
xchg
or
inc
repz
lods
sub
mov
in
call
cmp
outsb
jno
mov
pop
nop
xor
ret
inc
add
sbb
cmpsb
sub
add
push
push
push
push
mov
and
iret
outsl
gs
int3
les
mull
mov
hlt
pop
or
shrl
mov
push
xchg
cmp
fbld
test
popf
sub
or
pop
cmp
pop
push
bswap
mov
adc
adc
jns
cmp
mov
xlat
lret
xor
test
jp
bswap
or
and
inc
xchg
mov
test
cli
ret
add
cmp
pop
pushw
movsl
test
pop
or
mull
mov
aas
xchg
jge
pop
scas
ds
cmp
mov
pop
mov
push
jmp
ret
pop
rcrl
add
jmp
dec
mov
lahf
fdivl
inc
ja
dec
inc
in
loope
notb
jmp
xor
pop
negb
push
and
and
pop
aas
cmp
or
xchg
mov
jne
jl
aad
daa
xchg
jecxz
sbb
sbb
rolb
lret
sbb
sub
adc
sahf
jnp
ret
mov
sarb
dec
rorb
fnstsw
mov
leave
and
test
add
in
leave
xchg
or
out
cmp
aaa
out
push
rorb
pop
or
test
push
xchg
cmp
mov
lods
fisubrl
cmpsl
mov
outsl
test
aas
loope
movsl
add
mov
add
clc
lods
scas
scas
insb
xorl
pop
mov
inc
arpl
add
sub
cmpsb
sbb
fs
repz
inc
pop
arpl
push
and
stos
add
and
mov
jle
jg
int
add
jmp
sub
fcompl
adc
and
dec
fwait
xor
ja
mov
in
pop
xchg
inc
enter
mov
ficompl
stos
dec
cwtl
scas
into
pop
lret
inc
outsl
ret
lods
dec
fwait
push
jmp
adc
ss
ja
inc
sbb
push
push
jl
clc
roll
in
jb
cltd
mov
mov
inc
pop
and
xorb
lods
pusha
movsl
xchg
in
adc
xchg
pop
mov
xor
clc
cmp
mov
repnz
movsb
jmp
aas
mov
outsb
xor
pop
subl
and
or
cmp
insl
scas
pusha
pushl
insb
test
sub
decl
enter
imul
push
lahf
in
xchg
subb
cmp
loope
dec
and
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
rcrl
lret
push
sbb
sbb
push
add
add
mov
mov
dec
cmpsl
pushf
and
ja
push
test
shl
jmp
dec
xlat
push
jbe
int
adc
das
jb
mov
xchg
lock
add
ret
movsl
scas
clc
inc
or
ret
dec
jbe
adcl
movsb
sub
jne
sbb
lods
mov
or
cmpsb
les
dec
pushf
movsb
loope
and
imul
and
jae
cmp
adc
and
adc
lcall
rsm
mov
lds
aas
inc
push
jp
dec
sub
dec
and
pop
mov
inc
fs
imul
repnz
aam
and
sbbl
mov
mov
arpl
in
test
or
sub
movsl
leave
jo
mov
mov
aam
data16
cmp
add
cmp
mov
fbld
push
call
mov
call
push
and
mov
sub
or
dec
xchg
daa
and
add
cli
or
cmp
mov
insb
loope
push
js
xor
pop
sub
daa
sbb
in
faddl
into
add
mov
in
adc
stos
insl
ljmp
dec
stc
pop
add
std
insl
test
call
jle
or
loopne
xchg
out
in
loopne
enter
ss
or
lods
adc
jp
test
push
ret
fldl
outsb
mov
mul
dec
js
or
das
imul
test
jo
in
std
push
rcll
push
sub
ret
rorl
dec
cmpsl
mov
into
lds
push
xchg
and
inc
xchg
add
and
add
xadd
shll
xchg
or
mov
test
pop
pop
lahf
pop
clc
in
gs
fcomps
jne
dec
jne
test
mov
xchg
jb
inc
out
insl
mov
mov
sbb
mov
cmp
jp
xor
not
xor
iret
sub
push
push
cmp
mov
xor
out
dec
dec
arpl
into
xchg
loop
pop
vsubsd
das
mov
pop
aaa
and
mov
pop
pop
or
into
mov
xchg
fmull
and
cmp
ljmp
aad
test
clc
ja
mov
scas
xor
cmp
mov
mov
insl
scas
ret
mov
jle
dec
and
and
dec
rcrl
pop
imul
sbb
das
fs
test
test
dec
push
cwtl
int3
pop
hlt
in
dec
arpl
push
scas
add
cmp
mov
and
or
in
das
mov
inc
pop
clc
aas
dec
jbe
push
insl
loopne
inc
pop
inc
jae
push
cmp
and
push
lcall
push
add
mov
xchg
push
inc
shrl
testb
pcmpgtb
sub
cld
ret
fbstp
or
aad
sbb
dec
pusha
and
mov
xor
mov
push
jo
dec
dec
push
movsb
mov
jmp
and
mov
sti
mov
push
adc
loope
out
jmp
mov
in
lret
arpl
lds
mov
repz
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
ja
stos
aas
ret
push
sbb
push
daa
lods
mov
stos
pop
pop
fsubrs
push
lods
fwait
aaa
or
jl
add
or
jnp
jge,pn
jge
cld
cmp
dec
xchg
lods
sub
fadd
in
mov
stc
jno
mov
mov
adc
pop
lods
inc
adc
pop
pop
pop
pusha
xchg
les
cmp
xchg
cmp
jno
loop
mov
aam
dec
lret
or
mov
dec
push
daa
sub
in
xor
daa
lock
or
jl
std
pop
adc
xor
pop
fiaddl
lds
xor
aam
scas
cltd
ucomiss
mov
jle
mov
lods
mov
cmpl
test
dec
loope
jnp
pop
jo
subl
repnz
rcr
dec
in
sub
push
dec
xchg
lret
nop
test
arpl
push
mov
or
xor
pop
fsubrl
mov
iret
imul
and
mov
sar
lcall
test
imul
xor
mov
push
dec
imul
std
jnp
imul
inc
adc
in
popa
imul
push
push
mov
adc
out
cmp
jp
ljmp
dec
ret
addr16
xchg
add
bound
fimuls
push
jecxz
stc
dec
xchg
inc
lcall
leave
inc
mull
shlb
cmp
fiadds
repz
fnstenv
pop
xor
push
jmp
scas
xchg
xlat
pop
dec
subl
fdiv
add
pop
adc
les
mov
or
sbb
dec
cld
decl
inc
jno
mov
outsl
cwtl
in
inc
fwait
les
jp
or
lock
scas
sbb
mov
xchg
scas
push
mov
cmp
leave
and
sub
dec
insb
cltd
divb
aad
mov
or
mov
xchg
mov
mov
mov
clc
sub
add
push
cmc
mov
cmp
sub
jl
in
cmp
jecxz
sbb
mov
outsb
xchg
mov
and
outsb
sbb
add
out
jecxz,pn
js
cmp
daa
stc
adcb
ret
jno
das
push
stos
jne
xchg
fs
movsl
inc
scas
mov
imul
leave
jecxz
jmp
inc
fdiv
jp
mov
test
addl
pop
jo
add
cs
mov
and
out
pop
popa
sub
mov
push
mov
test
push
ljmp
dec
pop
cmp
push
enter
jge
in
mov
mov
scas
daa
sub
scas
inc
cmp
nop
sub
mov
rcl
sbb
ret
in
mov
push
dec
in
xor
lcall
push
jmp
push
jmp
leave
movsl
xorb
hlt
or
fcomp
lahf
mov
mov
shlb
aad
rol
ds
pop
cmp
lcall
mov
or
daa
dec
mov
sahf
pop
loope
add
or
ja
jle
push
mov
sbb
repnz
push
cmc
stos
lcall
push
ficomps
shlb
cs
idivl
mov
mov
and
repz
aas
sahf
push
fnstenv
and
imul
ret
inc
mov
add
lods
js
add
shl
adc
and
add
add
lods
enter
popl
sbb
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
mov
push
sbb
popa
das
clc
stos
xor
inc
xchg
pop
inc
out
test
dec
pop
ss
stc
pop
arpl
mov
scas
or
jo
ret
mov
out
fmul
or
xchg
push
das
adc
cld
hlt
dec
pop
push
mov
aam
pop
arpl
call
push
jnp
cmc
imul
mov
mov
xchg
mov
xor
mov
adc
push
cmc
sub
pushf
test
mov
jo
or
dec
sbb
fidivrs
in
push
sbb
mov
push
adc
and
pop
fisttpll
dec
faddl
cmp
add
lods
ja
push
mov
mov
or
outsb
push
ret
pop
sbbb
stos
cmc
add
and
push
sbb
pop
add
xor
nop
popf
xchg
test
icebp
cltd
dec
mov
jbe
daa
xchg
sahf
adc
ror
pusha
mov
aas
lret
sbb
in
enter
push
jle
mov
mov
xor
rorl
test
je
sarl
dec
inc
pushf
imul
pop
into
repnz
daa
sbb
push
leave
out
pop
pop
push
movsl
adc
xchg
stos
xchg
lcall
jb
pop
aaa
adc
push
in
cli
adc
pop
out
aaa
push
and
add
addr16
fs
popa
pop
inc
mov
pop
fwait
mov
sar
sbb
inc
dec
mov
mov
lret
call
push
or
pop
cmp
xlat
pop
movsb
mov
fdiv
mov
mov
pop
mov
imul
aad
add
mov
push
dec
andl
dec
xchg
movsb
cltd
push
int
mov
dec
bound
xchg
lret
mov
xchg
icebp
inc
xor
into
cs
lcall
je
fcmovnu
add
hlt
sarb
mov
outsl
stos
dec
out
rol
sbb
dec
insb
xchg
or
cli
stos
daa
aam
cld
pushf
sahf
repnz
xchg
cltd
fs
mov
push
adc
mov
cmp
test
xor
jae
pop
fmull
push
sbb
in
adc
pop
jae
lcall
jecxz
cmp
in
mov
int3
popf
movsb
sub
dec
daa
shll
pop
or
jbe
cmc
mov
shrb
jmp
outsl
arpl
cmp
mov
dec
push
xlat
movsl
push
stc
test
inc
push
pop
iret
adc
out
les
mov
sarl
cmpsb
jmp
sbb
cmpsl
push
insb
pusha
sahf
js
mov
cmp
lods
dec
and
adc
scas
aas
fcoml
or
mov
sti
mov
cmp
call
dec
xlat
add
fistpl
out
jb
push
imul
xor
cmp
mov
data16
jnp
imul
andb
mov
repnz
fisubs
pop
pop
add
sbb
xchg
inc
fmull
adc
mov
fsubs
cmp
inc
inc
mov
ffree
dec
xchg
add
ret
ja
mov
lods
mov
and
shrb
xchg
in
pushf
inc
push
cmp
lock
out
push
incl
mov
std
cmp
sub
push
es
fisubs
fs
insl
ret
aad
dec
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
jno
pop
xor
jb
sub
outsb
dec
lods
fsubr
inc
test
cmc
nop
lcall
sub
fstl
and
stc
pop
and
xchg
pop
lcall
dec
add
test
pop
fwait
sti
mov
sub
icebp
inc
jnp
dec
pusha
push
mov
lea
sbb
pop
addb
sub
dec
shlb
dec
mov
or
inc
sbb
mov
cltd
add
mov
cmp
mov
lret
and
cmpsl
std
inc
or
sbb
push
cmpsb
or
jnp
shr
push
sbb
jecxz
or
in
xchg
pop
pop
jo
cmp
and
xor
lahf
mov
jp
lods
push
je
pop
clc
xchg
push
adc
es
dec
pop
int
fcmovu
int3
or
jae
mov
movsl
sahf
dec
pop
mov
jno
lods
and
xlat
mov
addr16
pop
outsb
mov
push
sarb
popf
enter
mov
pop
movsb
xchg
adc
pop
push
xchg
test
fs
or
lods
ja
or
stos
cmpsl
sub
or
ljmp
mov
jo
fadds
cmp
mov
mov
pop
and
pop
jge
mov
jbe
xchg
and
arpl
jl
or
out
sbb
cmc
jmp
arpl
fs
sub
int
rcrb
sbb
pop
and
push
inc
adc
xor
negb
pop
daa
or
inc
sub
sub
imul
adc
pop
lret
add
cli
lret
jnp
mov
std
and
pop
std
push
imul
inc
mov
xchg
lods
iret
rcrl
xchg
dec
mov
sbb
adc
insl
fdivl
imul
imul
out
mov
push
dec
sub
mov
cmc
mov
adc
dec
cmp
pop
adc
jb
pusha
out
dec
xor
jno
mov
adc
sti
pushf
les
xor
gs
icebp
daa
and
lret
call
cmpsb
jbe
pop
pop
scas
sub
dec
dec
test
test
cmpsl
jne
add
lea
in
dec
xchg
adc
lret
push
sub
push
jmp
pop
movsb
fwait
repnz
add
xchg
xor
arpl
gs
scas
pushf
fidivs
shll
inc
int
andb
adc
add
dec
in
pop
cmc
shr
push
out
mov
mov
mov
xchg
sbb
call
outsl
cli
es
negl
aad
loop
jno
data16
xor
mov
iret
es
int3
push
pusha
mov
add
mov
xor
cmpsl
sbb
jp
sub
imul
imul
jle
cs
dec
mov
cwtl
adc
out
dec
dec
sti
shrb
xor
lods
das
mov
adc
pminsw
js
and
push
sub
jbe
lret
test
xchg
pop
adc
out
sub
mov
jecxz
in
rolb
lea
pop
fwait
sbbb
inc
outsl
sbb
mov
popl
sahf
adc
jge
mov
mov
imul
aaa
pop
xchg
mov
nop
add
xor
add
loope
xor
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
push
divb
sub
sbb
lahf
bound
ret
sbb
cmp
ret
sub
xor
lret
or
cmp
ja
std
clc
dec
hlt
roll
lods
pop
adc
pushf
jl
xchg
out
mov
ja
inc
and
xchg
stc
test
ret
lahf
cmp
popa
cltd
sarb
pop
sti
ret
fstpt
and
dec
or
std
and
lds
pusha
dec
dec
cmp
and
xor
inc
hlt
inc
lret
mov
bound
flds
into
or
add
subl
pusha
xor
xor
hlt
repnz
ret
iret
inc
rcr
into
jle
jl
mov
dec
lock
jle
xchg
repnz
pop
inc
push
and
popa
sub
std
repnz
fwait
push
sbb
xchg
push
xchg
cmp
push
xor
call
or
pop
jge
sti
mov
adc
addl
pop
mov
xor
aas
sbb
jne
push
aas
in
fs
aam
sbb
and
imul
pushf
dec
and
sbb
cmp
xor
xchg
and
insl
mov
aam
mov
xor
xor
mov
inc
rcrl
mov
jo
fbstp
mov
jns
cmp
lds
testl
int
mov
xor
testl
movl
popl
cli
adc
mov
sub
or
adcb
mov
cmp
rep
xor
dec
add
sub
cld
xchg
movsb
stos
sahf
adc
or
sbb
push
test
push
xor
pop
xor
push
lret
ljmp
test
sub
dec
xchg
jo
adc
mov
pop
xor
mov
loope
inc
iret
cmp
rcrl
f2xm1
das
leave
and
inc
into
sbb
inc
and
lcall
popf
xchg
pop
mov
xchg
pop
push
cmp
pop
inc
in
inc
popa
pop
xor
hlt
sti
mov
sbb
icebp
mov
iret
loopne
fadds
pop
mov
jge
sub
insb
mov
jg
inc
mov
sbb
fldenv
stos
arpl
imul
loop
lea
mov
mov
loop
test
fidivrs
xchg
sub
add
fistps
xchg
hlt
pop
mov
sbb
mov
add
fdivr
jge
cmpsl
lds
ss
jp
iret
out
mov
xor
sbb
imul
arpl
sub
insb
sbb
jo
lahf
adc
mov
js
outsb
add
ret
xchg
lcall
lcall
dec
fists
xchg
roll
stos
loopne
xchg
sub
xchg
jne
or
dec
cmp
adc
clc
xchg
test
ja
add
stos
sbb
pop
ljmp
bound
fwait
aas
stc
rcrl
not
sbb
shlb
or
into
xor
add
pushf
daa
pop
call
xchg
dec
mov
adc
mov
stos
sbb
js
cmp
int
data16
jbe
cmp
mov
push
lret
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
mov
xor
sbb
jp
sbb
pop
dec
lds
mov
push
lret
mov
pop
mov
out
add
stos
push
cwtl
nop
mov
hlt
daa
push
orl
popa
clc
aas
shr
mov
in
imul
jl
stc
fildl
or
ffreep
cmpsl
enter
aad
xor
aam
shrb
cmc
aad
addr16
inc
outsl
ret
pop
pop
xchg
aas
repnz
lock
pop
or
adc
inc
addb
ja
imul
aas
jle
adcl
fcmovne
inc
pop
pop
or
or
pusha
pushf
fdivrl
stos
int
arpl
push
xchg
add
jne
daa
enter
movsb
push
inc
pusha
mov
jmp
cmp
xor
cmpsl
imul
jno
dec
mov
push
scas
outsl
repz
mov
jb
dec
movsb
or
add
sahf
loop
mov
repnz
fstl
mov
xor
rcr
bound
inc
loope
loop
cmp
pop
negb
xchg
mov
or
jl
dec
add
sti
mov
fwait
add
mov
in
clc
push
loopne
jb
or
pop
adc
addr16
fwait
pushf
lcall
pop
ss
fldl
sub
push
lea
insl
test
dec
fadds
xchg
stos
mov
ss
sti
jmp
sbb
xlat
sbb
or
inc
pop
cmp
lret
mov
cmp
adc
fisubrl
cmc
out
sarb
push
or
mov
popa
clc
ss
xchg
mov
clc
adc
dec
stos
sub
mov
cli
hlt
inc
adc
push
repnz
ja
jle
dec
xor
pop
js
push
dec
pop
sbb
inc
iret
or
xor
ret
sar
cmp
push
mov
cmp
dec
adc
pop
xchg
outsb
int
mov
or
inc
in
xor
out
sti
xchg
fidivrs
mov
inc
aaa
xlat
stos
bound
pusha
addr16
xchg
xchg
shl
cli
insb
pop
in
and
push
push
xor
xchg
inc
fsub
cs
mov
lret
cmp
xor
xor
add
fldl
push
loop
sbb
lahf
lock
xor
shlb
sbb
outsb
sbb
push
cmp
shl
out
leave
mov
push
dec
loopne
filds
inc
add
inc
cmpsb
and
cmpsl
fisttps
cmpl
mov
icebp
add
fnstenv
mov
std
iret
mov
clc
mov
xchg
in
xor
insl
or
into
sbb
push
sahf
movlps
int
push
sti
sub
sub
xor
xchg
pop
bound
fistl
or
mov
and
leave
mov
cmc
cld
sbb
inc
push
add
loopne
mov
mov
adc
push
inc
stc
cld
lret
cwtl
lods
leave
mov
mov
mov
xchg
xchg
inc
ds
shlb
push
test
cwtl
sarb
pop
pop
ss
mov
or
mov
inc
sbb
insb
fst
dec
fistpl
fimuls
imul
aam
adc
add
lahf
sub
mov
dec
repnz
test
mov
in
in
ljmp
pop
test
iret
lret
cmp
sti
push
bound
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
inc
sub
ret
xor
repz
out
pop
cltd
jp
cmp
outsl
sub
push
lds
andnps
std
insb
xchg
lret
jl
mov
loope
mov
cmp
dec
movsl
ljmp
rcll
int
mov
mov
jmp
add
mov
repnz
cwtl
lret
prefetch
pop
int
in
cmp
mov
add
stos
rolb
pusha
cmp
jecxz
arpl
dec
pusha
bnd
lods
inc
pushf
fsubrs
icebp
mov
sbb
mov
or
mov
and
add
cmp
sbb
cmp
loopne
addb
sbb
popaw
ds
ret
fbld
inc
js
lods
aaa
dec
adcl
xchg
jmp
mov
adc
inc
loope
pop
hlt
orl
jb
test
jno
push
push
lods
fcoms
out
push
dec
add
dec
xchg
mov
icebp
or
rcl
add
repnz
xchg
dec
xor
out
jecxz
es
faddp
xlat
xchg
sbb
outsl
cld
pop
test
or
push
cmpsl
inc
shr
mov
mov
sbb
jb
popa
dec
add
out
ret
cli
xchg
fwait
jge
push
dec
pop
or
xlat
mov
fldt
push
aas
xlat
shll
iret
orb
outsb
sub
aas
data16
cmpsl
stos
xor
sbb
addr16
and
add
cmp
shll
sbb
push
pusha
sub
xchg
push
dec
push
or
lcall
xorb
jecxz
movsl
lea
rcr
orl
cmp
leave
pop
cltd
cmp
cmp
mov
fcmovnb
cmc
gs
popl
sub
rcl
jbe
cmp
rorl
into
cmp
xchg
push
add
jp
loope
cwtl
mov
mov
or
mov
ficompl
or
xchg
fcmovb
add
sub
and
cs
jo
jecxz
sub
divb
adc
aam
aas
out
dec
add
loopne
insl
cmc
pusha
cmp
shrb
cmpsl
sub
out
or
inc
pop
sub
xor
das
sbb
add
fdivs
subb
and
iret
mov
jnp
in
lea
or
or
mov
add
dec
in
jnp
hlt
xchg
cwtl
leave
out
mov
mov
cmc
cltd
std
pusha
ss
aaa
lcall
push
aad
push
jae
push
adc
jp
xchg
pop
int
ficoms
iret
cmpb
out
push
ljmp
shlb
adc
dec
test
imul
or
testb
add
scas
sbb
jne
pop
sbb
xchg
addr16
mov
in
xchg
cltd
fstl
int3
aaa
pop
sub
ljmp
fstpl
aad
mov
icebp
adc
mov
lock
xor
jno
shll
mov
jmp
pop
jmp
insl
into
pop
mov
xor
or
jb
xchg
jmp
dec
das
leave
cs
adc
mov
mov
cmp
mov
mov
mov
lock
aad
cld
icebp
jne
adc
mov
mov
sub
add
push
and
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
js
mov
mov
pop
pop
loope
mov
popa
ljmp
ret
push
popa
sarb
sbb
in
cmpl
push
mov
xchg
loope
aaa
pop
inc
imul
jg
movsl
fisubrl
lea
jb
call
stos
je
test
and
repz
inc
dec
rcll
push
ljmp
imul
popa
jp
dec
daa
lods
or
dec
xor
cmp
mov
das
in
lret
sbb
cmpsb
rcrl
cmpb
pop
add
mov
popf
and
fs
or
call
inc
xchg
pop
mov
and
data16
out
xchg
test
lahf
ds
mov
cmc
xor
sub
js
sub
inc
mul
stos
and
fbld
push
mov
in
mov
lea
xor
popf
shll
mov
adc
insb
data16
fiadds
je,pt
ss
insl
mov
ds
out
mov
dec
inc
mov
jns
pop
aaa
push
enter
sbb
cmc
mov
in
inc
fs
pop
cmp
mov
pop
push
fldcw
adc
fsubrs
jo
test
inc
xor
push
sbb
mov
push
pop
add
jns
sub
push
cmp
in
pop
lahf
and
mov
or
pop
or
xor
and
cmc
movsb
add
js
cmp
mov
pop
fs
shr
hlt
outsl
lock
insw
xchg
add
ror
daa
sub
in
stos
add
mov
jl
scas
fisttpll
jne
jg
adc
cmpsb
jg
xchg
inc
mov
neg
shl
pop
repz
sarb
ficoml
into
repz
pop
adc
cld
xor
enter
and
movsb
push
lret
jb
cmp
sub
fstpl
dec
mov
cmp
into
sahf
and
and
mov
leave
inc
testl
adc
fdivrs
lea
xor
popa
push
stos
cs
add
xor
pop
repz
or
dec
and
adc
add
fs
sarb
cmp
or
lock
cmpsb
lret
lahf
mov
clc
mov
test
sub
mov
addl
xor
add
mov
xor
mov
movsl
das
pop
xchg
aam
dec
or
and
data16
fdivrs
mov
jle
insb
pcmpeqb
outsb
lock
sarl
mov
adc
fs
mov
scas
in
gs
xor
xchg
xor
xchg
adc
add
outsl
mov
mov
mov
dec
dec
push
cld
out
push
lret
dec
pop
xor
xlat
dec
inc
popf
sub
inc
sti
dec
outsb
pop
adc
test
jg
xchg
push
call
push
dec
push
xchg
cltd
mov
imul
add
aad
lods
inc
jbe
mov
or
ds
in
sbb
push
fcmovne
pop
ljmp
push
mov
push
lock
push
inc
ficoms
or
push
mov
stc
test
mov
into
adc
lods
js
cmp
push
addl
lods
mov
xchg
xor
pop
sahf
push
xchg
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
add
in
mov
mov
fstps
sub
fmuls
fistpl
test
push
fisubs
xchg
in
fxam
fiaddl
jp
inc
inc
add
sarb
mov
inc
adc
movsb
and
mov
test
mov
int3
adc
pushf
xor
sub
xlat
loope
and
loope
movsl
fisubl
orl
lret
cmp
inc
jg
push
cmp
bound
lahf
ds
call
jecxz
int3
out
fstpt
mov
ret
sub
jbe
xchg
test
insl
imul
dec
hlt
cmp
sub
call
and
movl
ja
imul
sub
call
pop
xchg
push
in
dec
sbb
inc
shl
mov
fbld
push
test
imul
icebp
inc
adc
adc
iret
cltd
insl
add
jbe
add
xchg
fistl
lea
cmp
xor
mov
inc
push
insb
cltd
inc
mov
addr16
fisubl
and
add
outsl
sub
sub
ror
loope
pop
adcb
out
lods
inc
mov
mov
push
mov
lock
or
cmp
adcl
lret
lcall
jecxz
pushf
mov
push
jmp
push
ret
int3
repz
pop
mov
adc
js
xor
inc
pop
rclb
inc
out
lret
les
cmc
iret
jbe
in
sahf
imul
stc
or
ljmp
ja
filds
in
test
add
inc
fbld
sub
sbb
jecxz
mov
fisubrs
xchg
or
push
fs
sbb
fisubrl
adc
ret
movb
cmp
shrb
imul
xchg
leave
mov
or
in
out
std
sub
push
mov
popa
loope
arpl
add
push
idivl
pusha
jnp
xor
push
dec
icebp
lods
push
in
dec
popa
pop
loop
cmp
fdivrs
mov
stos
sbb
aam
push
jns
cld
mov
in
ljmp
pop
dec
jae
jnp
adc
sti
sbb
repz
cmp
pop
fcomp
mov
int3
hlt
cmp
out
push
ja
or
negl
xchg
jnp
push
xchg
mov
data16
ljmp
add
fstpt
jae
jb
cmp
mov
aas
shlb
mov
es
adc
add
add
insb
mov
js
pop
out
or
sbb
push
aad
int
in
mov
mov
test
out
push
inc
push
aas
and
notb
and
cwtl
cmp
mov
hlt
and
adc
jne
arpl
test
loope
pop
lock
les
add
or
add
xor
stc
loop
jmp
decb
scas
jns
ja
and
adc
xchg
rcrl
aas
lahf
stos
and
mov
sti
mov
push
in
mov
in
cwtl
addr16
insl
jmp
pop
ret
xor
and
mov
mov
cli
sbb
in
mov
add
pop
mov
jmp
nop
mov
push
addb
or
adc
and
xchg
gs
sbb
ljmp
popa
cmp
repnz
ss
outsb
inc
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
out
mov
mov
es
loope
jg
insl
iret
scas
out
jp
mov
aad
sub
or
mov
sbb
mov
mov
and
adc
cmp
out
add
iret
jne
xor
clc
cmpsb
scas
cmp
and
inc
push
inc
push
in
sbb
fisttps
mov
push
clc
lea
pop
jns
sbb
subl
out
sti
pop
mov
stos
nop
int3
dec
cltd
lcall
jb
out
xchg
aaa
xor
lods
mov
inc
fisubl
fs
imul
adc
scas
and
loope
ja
test
mov
inc
nop
lds
pop
jge
push
jno
je
or
loope
dec
pop
popa
and
cmp
incl
loop
loope
jle
mov
bound
pusha
iret
addr16
mov
dec
negb
bound
pop
insl
pop
ret
out
mov
pop
pop
arpl
out
ss
popf
push
and
in
in
jecxz
jo
push
add
shl
int
dec
mov
roll
nop
push
out
cltd
je
xorl
pushf
cld
je
fnstcw
sbb
test
into
ficoml
sbb
fsubrs
shr
adc
sub
xor
rclb
scas
mov
add
pop
mov
push
sbb
cmpsl
mov
int3
in
in
jl
cwtl
dec
push
rorl
lcall
imul
sub
jne
pop
mov
hlt
adc
ds
lods
bound
add
xor
int
bound
es
push
sub
dec
mov
xchg
repnz
xor
out
cmp
scas
stos
aam
repnz
adc
jnp
or
cmp
mov
je
mov
pop
aad
xor
jo
popa
dec
adc
dec
jbe
sub
imul
lret
cmpb
repnz
popa
mov
hlt
cmp
add
xchg
mov
xlat
adcl
test
or
adc
push
dec
in
fcmovnb
inc
dec
test
into
loop
xor
in
and
push
sbb
xchg
xorl
scas
ficoms
inc
cmp
test
cmpsb
push
add
dec
add
or
sub
inc
sub
inc
nop
jecxz
call
or
ljmp
xchg
push
imul
decl
push
popf
mov
pop
add
rcrl
adc
jb
mov
jl
xchg
mov
mov
mov
in
pop
mov
nop
mov
pop
inc
sti
jge
xor
jne
enter
pop
mov
shlb
adc
mov
push
nop
jecxz
mov
add
test
inc
ljmp
data16
push
mov
ss
cmpb
into
add
sarb
mov
xchg
ss
pop
sbb
mov
popf
out
lods
and
ja
enter
je
adc
xor
mov
rclb
mov
jo
out
adc
xor
push
adc
dec
cmpsb
mov
out
add
push
fnstenv
mov
shlb
ss
ret
sub
inc
push
sbb
das
inc
cmc
push
bound
jle
int3
mov
cltd
sub
mov
out
int3
nop
cmp
xchg
loopne
orl
pop
mov
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
int
dec
jle
adcl
sbb
push
mov
dec
and
aas
mov
xor
dec
daa
dec
dec
les
sub
dec
loop
jecxz
dec
sbb
stos
add
cli
xor
push
mov
lret
add
push
jne
and
inc
or
push
jge
mov
cmp
push
lds
int
icebp
repnz
imull
in
inc
popa
push
out
test
adc
push
pop
cmp
pusha
pusha
cmpsl
fmul
and
sbb
inc
lret
inc
shrl
push
push
add
ljmp
test
mov
mov
dec
flds
mov
mov
push
mov
out
jae
lods
cmp
in
jnp
call
shrb
and
in
hlt
loop
and
mov
dec
xchg
push
dec
pop
jns
out
shrl
push
insl
fstpl
popa
das
aam
fsubl
push
insl
enter
xor
adcb
cli
pop
subl
dec
mov
test
outsb
sub
insl
or
inc
js
data16
mov
call
lret
add
adc
pop
add
lea
pop
inc
call
jp
in
ja
fisubl
cmpsb
push
adc
imul
out
insl
cmpsb
ljmp
jle
jmp
stc
jo
jne
xor
arpl
sbb
mov
push
or
enter
xor
icebp
sbb
jns
mov
loope
sbb
and
pushf
xor
aas
dec
xchg
les
mov
popf
pop
dec
jb
jmp
in
iret
mov
add
mov
out
push
scas
test
cmp
xchg
push
lds
add
sub
pusha
sahf
push
and
push
mov
xchg
jp
pop
mov
dec
pop
jl
or
jge
loop
into
sbb
jns
out
cmp
cmpsl
push
in
popa
mov
pusha
xor
mov
pusha
dec
push
xor
mov
xlat
fdivl
int
and
int
xchg
arpl
mov
stos
pop
out
mov
mov
push
mov
jp
orl
lret
das
int
push
cli
inc
pop
xchg
pushf
imul
arpl
sahf
jge
ror
out
push
lock
cwtl
sbb
shl
loope
ret
cmp
popf
xor
dec
xor
fidivrs
rol
je
add
inc
lcall
or
dec
bound
shr
sub
shll
int
pop
pop
int3
shll
jns
sub
in
fbstp
push
push
imul
sarb
cld
sti
mov
addr16
xchg
in
jge
out
out
inc
push
hlt
jno
call
insl
inc
cs
shrl
pop
stos
adc
add
jnp
stos
test
xor
xchg
sub
or
movsb
testl
mov
xchg
lock
cltd
and
inc
jmp
cmp
arpl
sub
mov
mov
je
popf
decb
stos
cld
mov
sarl
cmc
and
pop
pop
call
mov
or
xor
loopne
popa
inc
jg
out
or
movsb
jle
daa
sti
mov
mov
lds
pop
icebp
xor
jmp
sbb
divb
cmp
mov
mov
arpl
push
shr
mov
mov
popf
mov
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
popa
pop
and
sbb
cmp
daa
repnz
and
dec
mov
xchg
pop
mov
jae
cs
fimuls
addr16
mov
xor
jmp
lods
dec
lods
push
xor
dec
sbb
movsb
imul
enter
lahf
fmuls
and
mov
shlb
test
loope
and
pop
lea
les
xor
mov
int3
mov
sub
push
adc
imul
stc
cmp
lea
mov
loop
and
icebp
adc
aaa
mov
dec
mov
lcall
fildl
jecxz
lea
fcmovb
std
and
icebp
sahf
pop
stos
jge
lock
hlt
dec
add
ss
push
sar
xlat
dec
rcr
pushf
lahf
mov
std
sub
mov
lods
xbegin
imul
repz
mov
xchg
mov
mov
out
in
push
xchg
clc
pop
scas
pop
push
dec
jae
fdivrl
cmp
push
cld
outsl
pop
sbb
lock
dec
adc
mov
jne
pusha
inc
pusha
and
xchg
xchg
mov
cmp
mov
sub
pop
scas
cmp
or
cld
jno
enter
xor
pop
mov
incl
enter
movl
jns
dec
jl
pop
sub
pusha
jae
call
sbb
ja
xor
jo
and
adcb
aaa
aas
lret
mov
inc
cmp
xor
mov
push
subl
hlt
push
jp
and
andb
push
dec
pop
ljmp
mov
idivl
xchg
mov
mov
jecxz,pn
sbb
push
in
jge
ljmp
out
inc
lods
jecxz
xchg
push
or
in
imul
popa
iret
and
and
xlat
dec
mov
pop
sbb
sub
nop
sub
daa
add
movsl
into
movsb
xor
cmp
pop
dec
cmp
pop
cmpsb
xchg
or
mov
mov
xchg
xchg
imul
sub
pop
and
sbbb
pusha
inc
out
xchg
xlat
add
out
pushf
sub
adc
imul
in
popf
pop
pusha
lret
test
sub
rcrl
push
or
mov
daa
ret
push
enter
shrb
lcall
pop
jb
andb
in
movsl
cmp
pop
fildl
stos
loopne
movsl
leave
and
and
int
or
pop
cmpsb
push
stos
rorb
dec
jl
rcll
test
repz
pop
and
xchg
call
aad
sub
or
jp
out
adc
ret
ret
fiaddl
popf
or
pop
test
jge
mov
and
xor
mov
xor
pop
pop
stos
jg
lods
jae
shr
adc
cmp
lcall
and
repnz
rcll
rorb
push
or
pop
add
pushf
iret
sub
into
or
add
or
push
rorl
cmpsb
shll
gs
lds
loope
je
ret
or
leave
xor
cld
push
mov
decb
insb
adc
test
jno
mov
outsl
and
mov
inc
inc
js
and
cltd
push
cmp
cmp
lods
call
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
jnp
jl
jae
sbb
rcr
sub
fstl
mov
lock
in
sbb
bound
push
fildll
sbb
jg
push
or
jge
add
addr16
jns
sar
jo
or
push
out
add
cs
sbb
ds
push
dec
stc
pop
jae
pop
pop
mov
lret
xchg
shl
popa
sbb
mov
xchg
jnp
ljmp
jle
stos
sub
jmp
xchg
pop
dec
fdivrl
enter
das
orl
int
inc
jecxz
in
xor
pop
fwait
add
pop
imul
adc
stos
mov
push
mov
call
fs
sbb
jl
mov
cmp
leave
xor
sub
aam
int3
test
push
inc
test
clc
cmp
shl
shrb
lret
sub
roll
xor
mov
pop
repz
inc
imul
sub
sub
leave
pop
lods
stos
mov
inc
std
push
ret
das
and
pop
cmc
movsl
xor
push
mov
pop
add
cmp
push
jo
pop
jmp
mov
xor
frstor
lea
sub
cld
fimull
push
dec
mov
inc
pop
addr16
cmpsl
sbb
jbe
xorl
cmpl
std
out
mov
sub
or
sbb
push
pop
aam
leave
xchg
xor
and
xchg
inc
insl
icebp
cmp
mov
sub
popw
mov
push
loop
sahf
or
xchg
jmp
sarb
add
cmp
adc
sbb
inc
inc
fadds
std
test
in
push
xor
or
dec
sbb
test
sbb
cmpsl
hlt
mov
sarb
loop
in
push
stc
lret
inc
jb
or
lret
sub
push
or
mov
in
mov
fmull
fstl
fcompl
sbb
pushf
rclb
dec
or
sbb
xchg
addr16
int3
jmp
test
and
or
icebp
mov
int3
leave
outsb
dec
andb
aas
or
sbb
fiadds
inc
int
icebp
inc
cs
or
sub
test
rcr
stc
cmp
movsb
inc
inc
mov
loope
ja
mov
ds
pusha
and
push
int3
std
mov
dec
bound
test
pop
shll
xchg
int3
push
pop
ja
sub
sar
jle
mov
pop
jmp
ja
enter
dec
inc
in
jle
xchg
popl
mov
pop
out
adc
xchg
iret
lds
jnp
in
fstpl
sbb
jb
mov
jp
sub
xchg
mov
jb
hlt
mov
andb
mov
lret
inc
ja
sarl
pop
repz
scas
mov
sub
inc
sbb
leave
int3
xchg
add
and
sarl
sbb
lret
dec
fdivl
push
push
loop
add
mov
xor
add
jae
push
pop
pop
or
addr16
es
push
sbb
dec
jne
and
cmp
push
xor
popf
or
in
cmp
xchg
xor
and
out
or
je
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
lcall
sbb
and
pop
push
lods
addr16
sub
in
xchg
bound
mov
fdivs
iret
iret
pushf
cli
pop
jo
ja
in
lods
cltd
mov
lods
addl
inc
mov
aaa
dec
sbb
xor
jg
dec
jge
adc
push
movsb
sahf
mov
jo
xchg
into
sti
mov
mov
sub
adc
arpl
push
scas
xlat
ja
cmpsb
push
jae
xor
cmp
std
mov
fiadds
inc
cmpsb
loop
or
xchg
ja
sub
or
push
xchg
test
inc
cmp
loopne
pshufw
sub
push
mov
cltd
hlt
fisubs
call
push
imul
stc
push
or
jecxz
adc
out
mov
lock
cltd
es
push
mov
dec
mov
adc
or
es
jmp
add
xlat
push
fisubl
in
pop
sbb
cmp
dec
and
pop
rorb
or
sub
aaa
jp
lcall
jne
xorb
cmp
sbb
imul
fcoms
or
jns
popf
inc
or
xchg
push
jne
jl
mov
mov
add
jcxz
mov
pusha
movsl
xlat
addb
jb
jbe
ret
mov
fwait
jb
adc
xchg
fsubr
or
shr
add
mov
ja
test
push
or
std
aaa
jl
lahf
pop
fmull
ds
icebp
jbe
cmp
out
and
int
pop
fnstsw
out
call
mov
pop
popl
lret
shlb
adc
jg
hlt
mov
mov
mov
fldl
xor
push
xchg
sub
xor
call
and
pop
int3
xchg
fidivl
add
inc
sahf
sbb
inc
inc
daa
cmp
sub
inc
loopne
push
test
dec
mov
and
data16
add
mov
mov
adc
insl
push
cmp
mov
xor
movsb
mov
imul
or
adc
mov
mov
sub
or
pushf
out
lods
sbb
inc
jns
pop
repz
mov
jp
mov
repnz
repnz
cmp
fistpll
shll
rolb
mov
sti
enter
aas
jae
dec
push
lods
shll
mov
add
push
call
jle
cmc
mov
das
test
and
inc
test
mov
lahf
add
xchg
lcall
fidivrs
jne
push
sbb
and
bound
aam
inc
push
call
jl
and
call
enter
jae
test
stos
inc
movsl
dec
or
push
xor
push
and
nop
das
xchg
ljmp
pop
repnz
jg
and
sar
mov
popa
jecxz
ret
scas
loopne
push
inc
lcall
test
jmp
dec
daa
sub
popa
flds
sbb
or
fidivl
or
sbb
pop
lds
popf
mov
lods
mov
cltd
or
fcom
jle
ds
mov
jl
loope
les
lock
xchg
push
mov
outsl
xor
fwait
outsb
xchg
cmp
adc
jb
dec
pop
bound
movsl
or
push
inc
jb
mov
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
addr16
jb
repz
add
add
add
test
bnd
dec
test
stos
pusha
mov
lock
push
sahf
add
daa
repz
and
stc
les
xchg
sbb
and
data16
sub
mov
cmpsb
fnstenv
pop
push
fisttps
xchg
nop
inc
mov
jmp
sarl
xchg
push
push
mov
mov
fsubl
stos
ret
into
daa
adc
sbb
xlat
dec
sbb
xchg
ja
or
push
stc
insl
sub
adc
stos
pop
arpl
out
lds
mov
mov
add
xchg
pop
sub
std
imul
sub
push
or
mov
or
pushf
dec
push
push
fstps
jge
dec
dec
test
mov
and
and
or
popf
mov
insb
cwtl
jo
repnz
in
and
inc
add
repz
out
fs
add
std
sbb
push
aad
in
jb
fwait
scas
jl
fmuls
lds
ljmp
jmp
fimuls
mov
cld
sub
stos
mov
sbb
loope
ffreep
icebp
insb
in
inc
push
loope
in
testb
sbb
pushf
push
mov
mov
mov
movsl
push
mov
pushf
fs
jnp
mov
pop
push
aas
outsl
and
pop
je
and
scas
adc
cmp
add
adc
mov
das
jo
enter
out
and
xor
sbb
jo
out
ror
sub
js
es
dec
pushl
popf
scas
dec
mov
out
sahf
inc
gs
dec
cmp
pop
mov
sbb
xchg
xor
adc
pop
mov
in
imul
xor
mov
dec
out
out
shll
pop
sub
hlt
xor
pop
xor
jo
jg
push
dec
das
into
sub
sahf
sub
popa
dec
loope
movsb
fsub
lahf
mov
mov
push
adc
add
sbb
dec
ds
ret
sahf
int3
add
les
jbe
push
sub
dec
insb
sti
lret
orl
sub
cwtl
jb
xor
negl
aaa
imul
xor
cwtd
insl
sbb
or
sti
sbb
sub
scas
adc
sbb
adc
les
cmp
xchg
imulb
dec
fdivrp
jge
ja
aad
cli
fldl
xchg
dec
push
mov
pop
outsl
stos
icebp
movsb
and
mov
push
push
jnp
les
cmp
test
sub
mov
ss
push
dec
pop
mov
mov
cli
std
adc
push
hlt
stos
jbe
into
jmp
cli
jecxz
popl
pop
dec
js
aam
lcall
fidivs
sbb
or
insl
dec
inc
add
inc
mov
cmpsl
test
js
jecxz
or
mov
mov
push
mov
call
sbb
pop
sahf
or
or
out
ss
pusha
and
xorl
cmc
jp
mov
sub
ds
lods
in
sub
cmp
js
movsl
sbb
jo
sbb
std
add
push
mov
lods
jb
cmp
cmp
pop
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
push
in
mov
mov
dec
pop
clc
insb
adc
inc
addr16
aas
push
xchg
adc
mov
in
xchg
daa
mov
mov
jecxz
insl
mov
cmp
lds
in
push
out
mov
jb
test
iret
fstpl
cmp
stos
int
sbb
inc
je
sub
xor
sbb
dec
jb
jb
lahf
mov
jmp
pop
jbe
cmc
jge
pop
and
mov
mov
jbe
outsb
xchg
mov
insb
adc
mov
inc
loope
add
pop
pop
xlat
xchg
sub
xor
push
fwait
jmp
inc
syscall
or
cmpsl
cmpl
inc
add
rorl
add
mov
jg
lret
mov
xchg
inc
lahf
dec
nop
pop
inc
enter
mov
sbb
movsb
and
sub
mov
xchg
inc
mov
mov
ret
jp
xor
repz
push
les
or
or
lcall
and
mull
pop
xchg
push
fimuls
mov
or
int3
clc
popf
add
je
jle
adc
xchg
xor
pop
into
add
inc
filds
mov
jecxz
sub
fisttpl
aaa
rcrb
int3
out
pop
jle
jne
xchg
xchg
lds
and
push
jmp
xor
int
fwait
cs
repnz
test
test
cld
ss
jmp
jge
or
or
lcall
rcrb
movsl
sub
shlb
inc
xor
test
sbbl
repnz
addl
mov
push
rcrl
sbb
push
push
add
and
pop
mov
mov
daa
in
mov
or
inc
jnp
orl
pop
das
mov
push
fidivl
insl
inc
ljmp
add
dec
les
sahf
adc
and
repnz
call
jbe
rcl
pmullw
sbb
mov
pop
and
outsl
cmp
enter
mov
mov
jns
inc
pop
loop
xchg
sub
dec
jne
mov
sub
lds
into
movsb
adc
xchg
mov
test
popa
pusha
mov
stos
imul
mov
shll
sarl
shl
in
addr16
fadd
outsl
lahf
lods
pop
je
cltd
es
pop
or
pop
push
push
shlb
lcall
in
and
jp
subb
mov
enter
bound
outsb
mov
pop
sbb
xchg
cmp
call
arpl
adc
scas
daa
insb
adc
pop
pop
cmp
cmpsb
mov
out
mov
test
adc
movsb
shll
mov
loope
jle
aaa
in
sbb
mov
jo
in
gs
sbb
fmull
and
cmp
in
push
pop
sarb
in
pop
adc
into
outsl
adc
mov
push
inc
xchg
xchg
jnp
mov
cmc
mov
xor
mov
dec
stos
loop
jge
inc
jg
addr16
bound
movsb
or
lods
jb
cmpsl
xchg
arpl
cmp
orb
jb
insb
push
mov
adc
or
jne
sub
out
orb
push
imul
dec
das
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
mov
push
sbb
lods
idiv
jo
popa
shlb
inc
mov
dec
xor
sbb
pushf
fs
jns
mov
cmp
roll
sbb
arpl
xor
push
outsl
mov
push
out
pop
in
cmovle
inc
daa
lahf
aad
sub
gs
mov
sub
ja
loop
out
adc
daa
sbb
clc
sbb
icebp
sbbb
jecxz
pop
mov
mov
int
mov
les
int3
mov
ret
mov
sub
mov
stos
shrb
or
addl
popf
in
or
mov
xor
pop
add
push
loope
les
mov
daa
mov
jmp
stos
dec
jb
js
lods
push
sbb
sbb
dec
cmp
push
sti
push
jle
jbe
mov
mov
ficoml
lahf
mov
fisttpl
xlat
fdiv
pop
out
jg
cltd
test
call
mov
sbb
add
repz
mov
sbb
cmpsb
pushf
sahf
dec
shrl
in
fisubrs
dec
aas
and
xchg
pop
int3
ds
cmpl
cld
push
in
push
mov
in
daa
or
ss
and
adc
cmp
cmp
push
pop
jno
sub
mov
idiv
mov
jo
and
fcompl
mov
inc
mov
jle
add
pop
inc
add
pop
inc
adc
push
xchg
cli
inc
das
fnstsw
or
sub
dec
out
cld
rolb
xchg
mulb
std
and
jo
pushl
inc
push
xchg
jno
pop
lock
xlat
push
mov
cmp
jecxz
clc
shrb
adc
shrl
dec
or
pushl
adc
testb
adc
adc
mov
pop
ss
lret
lret
stc
in
lods
cmpl
cmp
sti
out
jmp
cs
adcl
xchg
adc
mov
leave
push
popf
mov
addr16
mov
xchg
nop
test
pop
imul
lcall
icebp
aaa
insb
mov
and
leave
pusha
jae
cmp
popf
pushf
adc
push
outsb
jae
dec
das
dec
jnp
rcll
popf
cltd
rcl
pop
movups
mov
test
xchg
subl
mov
shrb
fisubrs
sahf
xorb
fisubl
enter
mov
jmp
mov
mov
hlt
ficompl
mov
dec
fdivr
or
mov
jne
dec
jns
push
outsb
cltd
fstps
aas
jbe
out
add
movsl
cli
das
jae
xor
and
or
mov
pop
push
jbe
xchg
stos
cmpsl
jae
aad
xchg
lds
out
and
dec
lods
addb
subl
and
pop
mov
ljmp
out
adc
sbb
outsl
add
scas
inc
aas
iret
xor
cmp
inc
jg
mov
mov
cmc
je
cmp
mov
sbb
std
xchg
ja
imul
xchg
lods
je
subl
lods
fs
mov
in
pop
adc
je
jne
mov
insb
or
insb
loopne
gs
lret
dec
leave
mov
js
hlt
scas
and
mov
stc
out
mov
and
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
mov
dec
push
sbb
arpl
push
and
xchg
int
xchg
aam
cmp
or
or
ds
cmc
or
jmp
mov
subl
cs
in
fidivrs
push
ja
sahf
rol
pop
das
push
inc
ljmp
in
rclb
cmp
cmpsl
dec
jae
rcrl
pop
lret
pop
jo
jnp
pop
xchg
push
adc
xchg
shlb
pop
and
cli
scas
orb
fwait
mov
push
mov
xor
push
xchg
ss
ljmp
in
adc
lock
xor
mov
sub
fdivrl
lcall
lahf
aas
adc
dec
jo
sti
lock
movsl
mov
mov
lret
aad
daa
mov
es
ljmp
sbb
inc
test
iret
in
inc
add
orl
int
pop
xchg
cld
sbbb
aaa
lock
sub
cwtl
mov
mov
loop
push
jbe
popf
sbb
dec
lret
ss
inc
test
xor
jnp
ret
lds
or
xor
push
xchg
and
fsubrl
jmp
bound
fdivl
clc
jmp
and
or
cwtl
in
inc
pushf
hlt
clc
xlat
jbe
xorb
push
adc
js
iret
pop
xchg
fyl2x
popf
jnp
lea
fsubrp
xchg
dec
cld
pop
fildll
dec
int
sub
movsb
repnz
jno
push
jg
loope
sti
push
mov
jmp
pop
dec
jae
xor
push
jo
cmp
sbb
in
pop
loope
into
movsl
idivb
pop
mov
lcall
int3
sbb
and
aaa
in
push
mov
iret
out
cmp
xor
out
scas
addr16
lock
nop
pop
and
xchg
pop
push
das
test
sbb
push
xchg
pop
sub
lcall
and
push
sbb
insb
pop
inc
jmp
xchg
ret
je
mov
scas
jmp
pop
mov
mov
testl
push
push
xor
cs
mov
or
push
mov
out
mov
push
push
outsl
test
into
pop
gs
pop
fwait
jl
fs
cmpsb
and
mov
pop
cld
addr16
std
and
mov
cld
or
xchg
pop
scas
push
mov
or
mov
xor
push
jo
or
jno
pop
adc
jno
ja
mov
mov
sbb
fidivl
dec
aad
or
jl
dec
repz
sub
or
jmp
enter
enter
not
movsl
lds
add
pop
ror
arpl
xor
and
sbb
cmp
cld
ret
popa
inc
mov
repnz
sahf
stos
mov
outsb
std
push
test
push
call
jo
add
cmp
push
sub
sbb
aam
lods
mov
test
test
mov
testl
mov
push
ja
mov
mov
cmp
sbbb
mov
adc
loop
fwait
adc
cmpsb
dec
push
add
mov
mov
or
jg
pop
or
push
push
push
mov
in
adc
mov
add
lea
mov
call
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
pop
xchg
jo
inc
push
sbb
jmp
and
stc
imul
lcall
mov
inc
dec
lods
mov
repnz
mov
ss
cmp
outsb
sbb
or
les
fildl
pop
jns
repnz
fs
and
cltd
fyl2xp1
out
adc
push
sti
in
jns
cmpsl
jmp
adc
popa
mov
or
into
sbb
add
mov
pop
mov
ss
stos
xchg
xor
lock
push
sbb
or
les
push
xchg
xchg
es
insl
xor
push
pop
rcrb
data16
jg
jge
loopne
les
pop
add
mov
jne
xchg
iret
data16
cmp
outsl
or
pop
loop
out
mov
lods
das
dec
dec
add
lret
and
xor
movsl
or
cmp
fdivrl
bound
pop
leave
and
jg
jle
aaa
pop
arpl
cmp
popf
lock
stos
pop
pop
xchg
inc
and
mov
lock
jp
sub
dec
daa
out
outsb
sbb
je
ss
scas
stc
sub
sar
les
xchg
pop
mov
arpl
test
lock
adc
fmul
jmp
int
inc
aad
sbb
dec
dec
sub
cwtl
xchg
mov
adc
repnz
xlat
int3
xchg
pop
insl
mov
mov
pop
jb
lea
mov
xchg
sahf
inc
sbb
mulb
fcmovnu
movsb
inc
divl
mov
mov
cmpsl
inc
push
aaa
xchg
das
pop
fs
inc
xchg
out
test
lds
dec
add
dec
fcmovnu
dec
scas
clc
ss
cmp
scas
sar
sahf
jmp
int3
inc
add
jle
imul
cmp
ret
leave
je
lods
shl
daa
push
push
push
out
pop
rclb
aas
sub
in
mov
pusha
lahf
mov
loopne
mov
xchg
jne
push
dec
aad
mov
hlt
insl
fcmovnbe
add
mov
pop
imul
int3
mov
pop
sahf
add
adc
pop
sbb
aad
mov
int3
ret
adc
pop
data16
sahf
jmp
jp
jg
aaa
pop
sbb
insb
and
cwtl
lahf
add
sbb
loopne
pushf
rcr
mov
mov
stc
push
pop
adc
enter
out
jecxz
mov
rcrl
or
stc
aaa
adc
jl
outsb
mov
repz
imul
imul
sbb
mov
popf
add
ss
sub
xchg
fwait
and
out
lret
mov
jecxz
adcl
in
jne
scas
adc
rcl
inc
pushf
fwait
add
mov
aam
in
xchg
aam
mov
or
dec
sbb
out
hlt
inc
jp
loopne
add
into
mov
or
and
cmp
ficoml
push
test
popf
or
jne
mov
ja
imul
mov
cs
dec
mov
xchg
inc
push
mov
xchg
add
cs
sub
lods
push
loop
inc
movsl
lock
mov
adcl
shlb
fstl
das
ljmp
mov
dec
mov
mov
and
bnd
fwait
cmp
stos
push
jmp
fcomip
dec
ficoml
insl
push
ficoml
push
sbb
sbbl
hlt
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
or
push
sbb
jne
or
jmp
dec
bound
movsb
or
push
jb
loop
cmp
dec
sbb
jnp
out
int
push
dec
rcr
cmp
out
inc
aad
and
mov
into
xor
adc
jns
mov
mov
mov
lock
dec
lret
push
adc
jmp
enter
hlt
and
lahf
lret
shl
adc
jl
mov
adc
vshufpd
add
pop
pmulhuw
je
ret
divb
not
mov
xchg
push
mov
stos
fdivrs
dec
push
sbb
lock
pop
inc
ss
mov
push
out
sarl
adc
sbb
add
or
inc
dec
mov
shrl
inc
insl
scas
push
xchg
je
imul
mov
mov
sub
sub
pop
daa
dec
out
jne
aaa
mov
insb
shll
mov
loope
xor
and
rorb
pop
dec
out
inc
add
push
push
jmp
je
repnz
cs
jo
out
mov
inc
cwtl
sub
clc
xchg
test
aas
repz
inc
mov
lods
pop
fwait
lret
xor
enter
xchg
and
sub
sarl
mov
stos
and
or
pusha
mov
add
clc
lret
nopl
in
movsl
mov
loope
jmp
ret
andb
dec
outsl
daa
sub
xchg
arpl
out
lcall
cmp
clc
push
ret
mov
pop
daa
loop
pop
dec
inc
movsb
or
arpl
out
pushf
daa
push
push
mov
call
ljmp
sbb
push
daa
scas
xchg
rep
cwtl
inc
out
dec
fimuls
cmpsb
add
push
xor
in
in
aam
dec
lods
mov
filds
sbb
jno
xor
int3
add
std
scas
jmp
aad
test
aas
cmpl
push
gs
insl
not
enter
xor
fs
mov
fdivrl
sti
std
and
mov
jecxz
imul
js
adc
shrb
js
mov
rorb
testl
scas
pop
xor
int3
mov
sub
mov
xchg
and
mov
dec
and
adc
pushf
jnp
cmp
out
daa
std
sub
xchg
xchg
or
mov
inc
push
or
lds
out
cld
and
jne
and
lahf
adc
and
push
and
mov
sahf
les
sbb
bound
mov
sbb
std
rolb
sbb
jecxz
dec
jb
dec
loope
rcrl
or
lret
insl
cmc
out
lods
repz
sar
fmuls
cmp
sub
push
lds
mov
inc
sbb
push
imull
adc
push
cmpsb
sahf
and
insl
stos
nop
frstor
shlb
sub
int
and
mov
or
out
cmpsb
jns
shll
inc
dec
call
push
xor
test
xchg
sbb
push
push
scas
mov
pop
adc
popf
mov
mov
pop
fmul
mov
fdivrs
mov
pop
xor
pop
aam
jmp
out
movsl
addr16
dec
cli
lock
xchg
imul
or
addr16
in
insl
ret
push
mov
push
shl
or
jmp
test
nop
lahf
jp
and
xor
jns
jl
aaa
push
sbb
and
outsl
pop
sahf
cs
call
jmp
mov
aam
dec
scas
je
leave
mov
pop
rclb
xchg
pop
mov
adc
stos
fistl
and
mov
movsb
inc
mov
dec
pop
and
aas
into
jmp
dec
push
out
pop
sub
icebp
jae
pop
lock
sub
leave
mov
sub
sbb
adc
add
lods
mov
jl
mov
lretw
sbb
call
mov
nop
cmc
jge
mov
and
push
jge
dec
out
xor
jp
adc
ret
push
stc
xchg
lds
cmpsb
sub
stos
scas
xadd
pop
xor
cld
jp
mov
mov
notl
sub
xchg
mov
gs
and
or
nop
sub
lahf
jmp
flds
leave
jbe
movsl
sbb
int3
hlt
loop
xchg
mov
inc
movsl
sahf
xchg
adc
dec
dec
les
pop
push
aad
addr16
pushf
imul
or
out
xor
repz
mov
loopne
setno
ret
lahf
loopne
cwtl
frstor
jnp
daa
and
and
mov
jmp
pop
insl
in
imul
inc
dec
cltd
in
mov
fsub
jecxz
lock
mov
imul
inc
pop
sahf
into
sbbb
leave
lahf
stos
stos
sbb
cli
inc
imul
jle
pushf
jl
add
mov
pushf
adc
dec
out
je
fst
jne
js
stc
filds
or
int
pop
cmp
or
sar
sub
int3
mov
ljmp
cmp
lock
ja
lret
adc
aaa
mov
movsb
icebp
mov
mov
stos
cmp
leave
or
movsb
cmpsb
sbb
mov
fdivl
xlat
cmp
cmp
in
daa
xor
mov
xchg
and
dec
addr16
or
stc
cld
lcall
pop
adc
xor
ss
lock
inc
mov
test
aaa
std
push
sbb
movsl
cwtl
sbb
sbb
xchg
xchg
xlat
data16
mov
ljmp
js
into
mov
loop
rolb
cs
ss
sbb
adc
addr16
and
jbe
daa
loopne
and
ret
out
repz
mov
add
mov
popf
xchg
ret
xor
mov
hlt
sub
lcall
jp
cltd
fidivrs
mov
xchg
clc
jb
dec
sarb
imul
push
std
inc
inc
jns
test
cmp
add
aaa
cmpsl
pop
jb
dec
sar
aas
or
pop
and
in
cmp
aad
test
xchg
push
xlat
xchg
repz
lock
mov
rorb
call
mov
lods
mov
fisttpll
enter
sub
movsb
andl
push
sarl
fildll
in
in
jg
aaa
rolb
pop
push
outsb
jmp
into
lret
xor
sbb
inc
jmp
stos
cmc
sti
cli
incb
fnstenv
shll
push
loope
imull
cmp
and
sbb
jae
sarb
mov
mov
jne
inc
cmp
pop
xchg
add
test
mov
sbb
rolb
imul
xlat
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
xor
push
sbb
imul
push
jl
popf
fdivr
jmp
jecxz
enter
test
cmp
insl
xchg
mov
mov
push
out
cmp
mov
hlt
cmpsb
aad
insl
add
and
cmp
inc
mov
call
repnz
dec
ja
cmp
test
add
adc
loopne
jno
push
push
sub
iret
pushf
jge
sbb
test
mov
mov
out
faddl
rclb
xchg
jnp
sbb
push
sub
push
cmc
adc
mov
jl
ljmp
jge
sahf
mov
push
lea
push
xor
cld
sbb
pop
popf
inc
mov
mov
lea
xor
outsl
jl
mov
les
jp
loop
pop
cmpsb
push
js
loopne
and
fwait
sub
push
fidivl
add
arpl
jge
outsb
cmp
cmpsl
mov
inc
lret
lret
mov
dec
int3
pushf
mov
int
mov
stos
push
inc
pusha
stc
xor
in
mov
jb
leave
jns
jg
rorb
lahf
pushf
mov
fimuls
sub
imul
jbe
add
fnstenv
lock
adc
icebp
aaa
mov
pop
scas
andl
add
push
gs
xor
xor
sti
ss
outsl
add
jge
push
loop
arpl
negb
into
ljmp
stos
inc
and
insl
gs
mov
dec
pop
mov
xchg
out
pushf
enter
and
xchg
mov
sub
sbb
sbb
mov
or
daa
and
cld
pop
fcoms
cmc
mov
push
xchg
mov
data16
mov
xorl
cmpsl
dec
dec
dec
and
in
jnp
std
push
xor
mov
add
xor
adc
mov
lods
lods
fstps
fs
cmc
fdivrs
scas
and
sbb
in
adc
jp
inc
mov
lea
sbbb
sbb
inc
test
sub
mov
sahf
push
mov
pop
jnp
sub
repnz
cmp
shlb
mov
insl
fs
sahf
bound
jg
loop
enter
imul
repz
jbe
mov
cmp
sbb
jo
xchg
xchg
bound
push
xlat
test
sub
xchg
aas
mov
add
dec
add
pop
mov
or
xchg
mov
mov
notl
mov
pop
xchg
push
ret
jmp
dec
push
js
mov
test
or
lret
fwait
bound
lea
lcall
out
xor
cmc
add
xchg
stos
mov
cld
xchg
popa
or
inc
xor
dec
pop
lahf
push
mov
ss
jmp
dec
cmp
xlat
cmpsl
and
mov
in
push
outsl
fnsave
add
movsb
jmp
idiv
nop
mov
pop
pop
repnz
push
les
push
dec
in
lods
sbb
xchg
cmp
mov
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
mov
mov
mov
icebp
aas
mov
cmpb
rcrl
mov
or
fldl
cld
jo
mov
xchg
sub
cmp
shll
cwtl
jmp
fidivrs
mov
inc
add
les
pop
in
sti
xorl
mov
idiv
sbb
cmpsl
xchg
frstor
add
aad
jg
xor
inc
ja
outsl
mov
mov
mov
and
imul
in
daa
sbb
mov
std
fwait
mov
filds
icebp
cwtl
jae
cmp
pop
and
pop
imul
scas
sbb
lahf
mov
rcl
gs
add
push
ret
sahf
aad
cltd
mov
xchg
ss
test
mov
outsb
dec
lods
mov
sarl
ja
sti
cmp
out
jge
adc
das
xor
push
test
cmpsl
iret
lret
push
mov
cmp
aas
outsl
ds
test
add
jp
out
dec
sub
fdivrs
test
add
push
pushf
push
out
sbb
add
jp
jp
xchg
mov
fidivl
adc
cmp
insb
outsl
out
inc
in
filds
xorb
pop
mov
ret
inc
in
mov
fidivs
inc
rcrb
xor
adc
jo
add
cmpsb
sub
mov
push
in
repz
out
int3
mov
cld
icebp
pusha
jl
mov
xor
mov
in
jecxz
xchg
in
mov
and
dec
lcall
mov
loope
mov
xor
adc
rorl
scas
push
pushf
fstpt
enter
mov
sbb
gs
xor
and
push
dec
cmp
out
out
mov
repz
xchg
add
in
or
lret
mov
mov
enter
sahf
movsb
push
imul
mov
pop
aad
jg
mov
or
jnp
push
sahf
jbe
push
adc
add
fidivs
xor
insl
mov
repnz
xchg
adc
sub
adc
jmp
adc
data16
mov
stos
data16
mov
das
push
mov
fistpll
pop
imul
jb
xchg
push
and
iret
dec
out
test
dec
cltd
test
or
mov
jae
fdivr
mov
push
mov
mov
fs
mov
mov
mov
xchg
cltd
jbe
jb
inc
jg
pushf
ret
jmp
nop
or
out
or
cli
pop
fstl
xchg
std
pop
jae
cld
scas
sub
stos
int
cwtl
jge
aaa
xchg
aas
pop
insb
rcrl
xchg
pop
cmp
iret
jl
mov
sahf
add
jge
push
jg
and
inc
mov
sub
jp
sub
imull
stos
mov
sti
pop
xchg
stos
outsb
ds
cmp
mov
sbb
cmpb
ffree
jb
sub
mov
subl
dec
push
jge
add
push
fs
lds
push
dec
and
shrl
movl
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
lods
jmp
sbb
lea
xor
stos
aas
push
pop
xorb
out
push
jmp
pop
sub
jge
dec
add
setle
xor
add
rcrl
xlat
add
popf
adc
cs
fwait
sub
jns
mov
mov
adc
test
inc
leave
movsl
mov
fwait
es
int3
mov
out
cmp
xchg
inc
dec
out
or
stos
test
push
mulb
or
or
ret
scas
iret
inc
cs
inc
sti
loope
jne
clc
mov
fldt
pushl
sub
sbb
mov
pop
daa
bound
call
xor
arpl
mov
ret
pop
shrb
idivl
xor
dec
ret
push
cmpsl
dec
dec
mov
push
popa
mov
mov
in
fs
test
test
ss
out
aad
or
lret
jae
in
addb
xchg
jb
mov
jg
xchg
call
shr
scas
repnz
popa
and
outsl
mov
jle
lret
cmp
mov
mov
mov
test
incl
fistpl
xchg
sub
pop
xchg
je
js
mov
out
mov
mov
sub
push
sub
js
dec
push
ds
pop
add
ficomps
push
add
popa
xlat
insb
mov
pop
add
mov
add
loop
mov
aas
xchg
add
xor
and
sub
adc
dec
sub
mov
std
push
lods
pop
mov
mov
scas
jp
sbb
inc
ljmp
jmp
enter
js
xchg
and
enter
rolb
dec
clc
lahf
mov
aad
jmp
adcb
jne
jne
mov
mov
sbb
jge
js
pusha
cli
cmp
push
push
push
cwtl
add
shr
test
ljmp
mov
jno
test
mov
or
mov
add
mov
les
xor
push
loopne
cli
cli
cmpsb
jo
outsb
jmp
cwtl
movsl
sub
jnp
jbe
sub
dec
loope
jp
mov
xor
test
sbb
das
popa
pop
repnz
sbb
pop
cmp
mov
fadds
adc
pop
imull
setl
sbb
push
and
push
fmuls
lock
je
inc
or
mov
mov
jl
shll
jo
xchg
arpl
ud1
arpl
je
daa
add
pop
hlt
adc
cmovs
test
iret
jno
sbb
xor
xor
lods
or
push
adc
push
mov
das
js
pop
js
aad
mov
adc
or
adc
mov
push
sarb
shlb
cli
xlat
cmp
mov
push
or
clc
jecxz
lea
in
incl
add
inc
add
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
mov
sbb
sbb
popa
lock
sub
out
cltd
adc
test
cmp
jmp
nop
fmulp
lods
imul
and
mov
sub
dec
push
mov
jmp
push
movsb
mov
dec
jae
nop
mov
push
jno
aas
adc
dec
mov
cmp
mov
jmp
fidivrs
dec
or
xor
xchg
das
fwait
test
xchg
test
push
push
mov
pop
andl
cmp
and
and
lret
cs
push
aaa
jge
inc
lret
imul
scas
push
sub
rol
cmp
cmpsb
in
les
and
sub
mov
js
je
movsb
aas
pusha
push
in
bound
mov
jmp
xchg
sub
sbb
iret
cld
jg
outsb
adc
fs
mov
icebp
mov
jl
ret
xor
scas
push
cmp
cmpsb
inc
cmp
xchg
jp
cs
dec
mov
jae
repnz
pop
sub
mov
push
xchg
pop
mov
cmpsl
jl
imul
and
les
pand
inc
mov
rclb
mov
movsb
xchg
or
sbb
fwait
mov
mov
and
inc
sub
lcall
cmp
cmpsl
mov
sub
jns
cs
pop
xchg
inc
adc
push
popa
cmpsb
sbb
stos
bound
mov
or
shlb
mov
pop
lcall
push
jnp
adc
adc
cs
in
loope
int
clc
mov
inc
outsb
pop
dec
das
push
xchg
dec
out
lahf
lea
lcall
stos
and
fstl
mov
sbb
jecxz
or
in
stos
out
sbb
outsl
sub
fcoml
shl
inc
aaa
inc
scas
aaa
out
addr16
dec
pop
insl
inc
pusha
push
or
test
imul
stos
ficoml
mov
sbb
sub
je
test
bound
or
and
movsl
adc
sbb
pop
jmp
outsl
dec
xchg
js
popa
dec
mov
jo
sub
loope
mov
push
je
cmp
inc
and
out
js
pop
sub
mov
inc
divl
nop
dec
fsubrl
pop
cltd
jmp
or
nop
test
lret
push
cmp
jmp
test
adc
lret
dec
test
int
adcl
xchg
jg
mov
scas
pop
sbb
daa
enter
mov
sbb
fisubrs
es
or
xchg
xlat
stos
ljmp
mov
iret
insb
pushf
out
jb
out
stos
or
gs
in
pop
cwtl
add
sti
or
mov
int
pop
ds
aad
or
enter
cli
xchg
push
les
arpl
or
das
test
or
cmp
adc
inc
in
fdivs
mov
sbb
inc
cmp
jnp
add
stos
fnsave
mov
sbb
test
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
jae
jle
pop
push
sbb
jb
testl
jp
imul
mov
jge
pop
lahf
push
inc
sbb
inc
icebp
add
cld
stos
fsubs
jl
inc
or
stos
dec
fcmovbe
xor
ds
mov
push
stos
sbb
jecxz
setnp
repnz
sbb
ss
mov
xor
add
push
decl
jno
aad
sahf
negb
repnz
aas
jl
cmpsl
mov
jl
cmpsb
inc
out
adc
cwtl
inc
pop
jmp
fisubrs
test
pop
sahf
jecxz
jb
mov
dec
jbe,pn
mov
lds
pop
and
xor
push
xchg
inc
lahf
or
insb
nop
jo
cmp
mov
dec
mov
addr16
clc
stc
call
lods
loope
xchg
dec
push
aas
push
cmpsb
fidivs
adc
dec
aad
cli
clc
cwtl
adc
dec
jle
pusha
push
into
dec
movsb
xchg
fmulp
sti
out
les
xor
pop
and
stos
mov
test
lret
xchg
xlat
adc
adc
add
fidivrl
inc
sbb
scas
loopne
or
stc
mov
and
ret
aam
icebp
xchg
xchg
dec
and
pop
add
arpl
xor
ja
pusha
push
out
xchg
cmpsb
mov
adc
mov
xchg
cs
ud1
les
inc
testl
inc
jle
mov
leave
cmpb
cmpsb
mov
cmc
fldt
mov
out
addr16
xor
fcmovnb
jae
lahf
pop
sbb
sub
and
std
mov
pusha
cmp
or
movsb
mov
dec
hlt
pop
es
or
cltd
xchg
cld
addr16
mov
ret
pop
xchg
mov
leave
add
lods
out
std
xchg
cmc
test
and
mull
dec
mov
clc
mov
or
jmp
int
fstps
jns
mov
fdivrl
pop
dec
stos
pop
mov
stos
test
inc
sub
and
or
push
pop
add
bound
test
add
sti
sbb
leave
xchg
enter
stos
pop
testl
add
dec
aaa
sbb
cmp
sbb
mov
ss
adc
jae
pop
xchg
mov
mov
xchg
mulb
mov
adc
sahf
adc
add
js
orb
xor
bswap
inc
sbb
arpl
pop
xor
xor
jmp
lock
ficompl
sbb
sbb
fiadds
adc
pop
ss
cmp
out
mulb
cmp
cmpsl
fucomi
cbtw
push
call
dec
add
add
cld
jge
mov
lahf
xchg
xor
add
push
lcall
xchg
pushf
enter
imul
xchg
bound
fdiv
cld
mov
and
sbb
aam
sub
push
mov
xor
dec
xchg
push
xchg
enter
mov
push
mov
in
in
mov
add
lock
je
shlb
mov
push
daa
cmpsl
or
pop
popf
and
sbb
addb
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
and
rorl
sbb
sbb
loopne
addr16
inc
pop
loopne
popa
fwait
in
sbb
sub
clc
movsb
mov
push
ljmp
pop
cltd
cltd
in
mov
sbb
add
push
cmpsl
mov
les
pushf
mull
lret
push
and
clc
jbe
ret
lods
pop
dec
lods
fidivrs
push
xchg
and
fsubrs
arpl
mov
mov
adc
mov
lret
inc
ss
xchg
shrb
testl
and
pushf
movsl
ret
sbb
call
xchg
inc
cmpsl
inc
push
cmpsl
mov
stos
xor
pop
xchg
and
sbb
pushf
pop
xchg
les
ljmp
rolb
shlb
cmp
adc
mov
iret
aaa
sbb
mov
and
cmp
fnstcw
shrb
pushf
lcall
cli
mov
xchg
xor
bound
data16
push
les
cmpb
fwait
popf
loop
jb
or
arpl
mov
mov
ss
xchg
or
add
mov
std
add
out
mov
outsb
or
dec
adcb
mov
dec
rcr
cmpsb
lds
jno
movsl
xor
stos
add
test
movsb
cmp
sub
add
stc
adc
out
pop
dec
ud1
std
outsl
imul
mov
fldenv
shll
jae
jns
cmp
inc
stos
cmp
adc
icebp
aaa
divb
and
or
pop
loope
aaa
pop
xor
dec
out
popa
add
sub
jb
imul
testb
pushf
push
jbe
add
imul
sti
adc
add
push
cld
cltd
out
cli
stos
pop
mov
pop
movsb
das
inc
mov
jmp
pop
sbb
clc
outsb
les
test
das
lret
xchg
bound
mov
into
mov
pop
in
int
test
fmull
mov
testl
imull
pop
int3
mov
ret
cmp
mov
add
ficompl
sbb
lret
lods
sbb
jae
xor
jno
rcrb
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
jl
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
add
inc
add
daa
inc
add
daa
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
xor
add
inc
add
add
daa
inc
add
and
add
inc
add
jg
add
daa
inc
add
inc
add
es
add
es
add
push
movsb
scas
or
movsb
inc
es
add
es
add
inc
add
daa
inc
add
daa
inc
add
inc
add
inc
add
es
add
daa
inc
add
inc
out
test
inc
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
pop
jg
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
and
inc
add
loop
js
lcall
and
add
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
sti
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
scas
addl
mov
inc
add
addl
movl
inc
add
addl
fildl
inc
add
addl
jmp
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
mov
add
add
add
add
add
add
add
nop
lea
add
add
add
xchg
add
add
add
js
add
nop
xchg
add
add
add
add
loopne
add
incb
add
sbb
add
cmp
add
dec
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
cmp
add
dec
mov
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
pop
mov
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
add
adc
add
and
add
mov
add
add
bound
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
add
dec
mov
add
add
add
jbe
add
orb
test
add
mov
mov
add
mov
add
mov
add
add
sub
add
inc
lea
add
add
arpl
cs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
add
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
xchg
add
add
add
js
add
nop
xchg
add
add
add
add
loopne
add
incb
add
sbb
add
cmp
add
dec
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
cmp
add
dec
mov
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
pop
mov
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
add
adc
add
and
add
mov
add
add
bound
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
add
dec
mov
add
add
add
jbe
add
orb
test
add
mov
mov
add
mov
add
mov
add
add
sub
add
inc
lea
add
add
add
