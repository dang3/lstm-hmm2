push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
inc
sbb
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
clc
cmpsb
cld
lahf
lret
lods
dec
dec
and
test
mov
add
dec
pop
je
sbb
dec
push
test
testl
lods
pop
xchg
loop
imul
push
ret
in
scas
leave
fs
xor
mov
imull
mov
pop
pop
sahf
sbb
stos
test
loop
xor
gs
movsb
call
mov
sbb
inc
jmp
xchg
inc
push
or
mov
sbbb
xor
pop
inc
mov
lahf
dec
pop
jg
and
cmp
cmp
jg
in
in
int
mov
lods
loop
push
ja
pop
or
pop
cli
lock
lods
xor
push
jle
mov
sbb
popf
push
mov
test
cmp
cmp
push
dec
adc
int3
out
xlat
sbb
inc
jb
mov
arpl
stos
out
aaa
rcll
aad
and
pushf
or
jp
pop
mov
sub
mov
xchg
scas
and
fwait
into
insl
mov
xchg
lock
or
sub
pop
and
push
xor
fs
in
dec
and
pop
xchg
insb
pop
jns
nop
inc
mov
jns
clc
popf
je
push
pop
and
inc
lods
dec
sahf
lret
jmp
mov
mov
jmp
insb
inc
pop
and
mov
mov
fidivrs
xchg
sahf
sbb
mov
je
mov
add
mov
sub
lea
in
xchg
call
cmp
jns
push
xchg
fsubrl
sarb
inc
insl
fidivl
loop
jnp
xor
rol
popf
iret
cmp
out
in
mov
hlt
mov
xor
adc
xor
sbb
imul
loope
mov
sahf
int
in
mov
cli
pop
subb
loopne
adc
mov
in
or
test
pop
rol
dec
sbbb
lods
jae
jmp
cmpsl
movsl
mov
loope
outsb
cmp
xor
sbb
pop
icebp
xchg
loop
scas
jl
add
mov
dec
into
testl
or
icebp
inc
sbb
pop
loop
out
in
jg
addr16
and
cmpsl
adc
aas
sahf
fistpll
mov
push
push
push
push
iret
pop
enter
mov
insb
adc
push
xor
gs
xor
cltd
and
int
ljmp
fildl
aam
stos
add
cmp
sub
adc
mov
ds
in
jnp
dec
mov
jl
test
leave
jl
mov
fwait
icebp
cmp
or
jo
sbb
pop
out
shl
cmp
pop
xor
cmp
sub
ret
sub
jge
push
mov
int3
add
nop
mov
mov
sub
sbb
push
jge
sbb
dec
xchg
lcall
sub
iret
xchg
and
or
ret
in
mov
in
aad
mov
mov
xchg
pop
mov
adc
and
jmp
popa
lods
mov
addr16
gs
sbb
cli
mov
jg
pushf
test
jb
mov
inc
cmp
loopne
dec
repnz
sbb
pop
push
jb
sub
jbe
out
jge
sub
sbb
fadds
pushf
xor
nop
inc
out
fpatan
fldt
jno
dec
lods
add
mov
xchg
pop
stos
xchg
mov
push
dec
dec
aaa
pop
jmp
lods
mov
hlt
cmp
lea
cmp
popa
sti
push
in
inc
roll
cltd
xchg
fiadds
pop
lcall
cwtl
in
sbb
subl
or
inc
add
xchg
loope
xor
sub
lret
add
cmpsl
add
int3
sub
sub
cmpsb
in
sbb
scas
sbb
mov
jbe
adc
jmp
mov
cmpb
xlat
mov
sahf
or
scas
and
in
scas
xlat
loop
fsubs
or
cld
mov
daa
mov
fidivs
or
je
pop
pop
insl
jle
daa
stos
aaa
testl
stos
int3
lea
adc
gs
nop
scas
adc
repnz
ss
mov
mov
mov
cmc
je
lahf
int3
pop
dec
push
cmp
push
ja
ljmp
push
add
and
sbb
pop
addr16
xor
lahf
mov
ja
in
rorl
faddl
icebp
enter
scas
out
or
push
lds
mov
pop
mov
dec
jnp
jne
fildl
cmp
adcb
cmp
hlt
test
out
jo
mov
fdivrl
jo
add
xchg
sbb
mov
inc
call
xchg
sub
int
enter
imul
push
int3
adc
xor
in
dec
ja
cpuid
gs
jae
fstl
mov
clc
shll
fdivrp
daa
out
adc
cld
imul
xchg
and
pushf
jl
ds
mov
mov
shlb
loope
jl
int3
adc
scas
push
add
fcmovnbe
scas
dec
fneni(8087
je
push
fwait
sti
icebp
test
xchg
push
dec
mov
lds
pop
xlat
mov
lods
in
scas
ds
sbb
jg
ror
aad
sbb
xor
cmp
adc
add
mov
cld
xor
sub
das
xchg
sub
lret
jl
ficompl
fildl
xchg
push
gs
fstpt
mov
mov
jo
pop
dec
gs
push
scas
mov
shrb
adc
jle
mov
jnp
fldl
pop
test
fstpt
insl
cmp
pop
xchg
in
sahf
pop
sub
shll
imul
dec
mov
push
out
jbe
test
pop
jae
into
cmp
pop
push
xor
iret
es
dec
fs
fwait
lcall
clc
into
xor
out
inc
sbb
addr16
rorl
jge
movsb
test
jo
mov
jmp
mov
dec
pop
std
cmp
xor
mov
cmpsb
or
or
add
jo
arpl
xor
sub
aam
dec
xlat
fs
pop
xor
sahf
or
pushf
push
adc
fistl
neg
leave
stc
push
arpl
std
shll
fs
les
jne
xchg
and
and
ja
setnp
scas
fdivl
sbb
std
adc
push
js
inc
insl
js
fisubs
std
pop
xchg
or
inc
fs
pop
dec
cmp
mov
inc
popf
adc
sarb
fs
cli
xchg
inc
add
mov
fs
pop
xor
test
fisttpll
inc
into
mov
or
sbb
pop
xor
in
cmpsl
imul
imul
or
arpl
push
inc
dec
xchg
js
dec
sahf
pop
or
nop
and
fiaddl
test
rcrb
xchg
sti
fisubrl
or
rcrb
int
adc
das
fcmovnu
aaa
sbb
int
and
outsl
mov
clc
xchg
xor
movsb
push
cltd
test
inc
jo
mov
and
xlat
ja
lods
call
jno
add
pop
cwtl
loop
or
stos
dec
call
adc
fstpl
xchg
inc
mov
ss
jp
xor
orl
lret
adc
enter
lock
jne
adc
dec
xor
xor
dec
imul
add
xchg
push
mov
and
lahf
sub
pop
pop
pop
sbb
mov
push
aaa
sahf
xor
divl
adcl
aaa
nop
jno
scas
inc
das
outsl
cmpsb
fisttps
jge
pop
xchg
neg
jecxz
imul
ret
cltd
int3
mov
add
mov
hlt
inc
fdiv
dec
and
cmc
mov
mov
xchg
or
pop
rcrb
dec
ljmp
mov
fimull
mov
insl
push
xchg
cmpsl
enter
mov
ss
adc
lea
push
dec
stos
adc
mov
test
aaa
sbb
mov
sbb
and
xchg
push
pop
int3
loopne
xchg
and
psllw
dec
arpl
xchg
aaa
cwtl
fcoml
or
ja
pushf
aaa
in
mov
fwait
inc
jno
sub
fnstcw
jne
mov
nop
mov
cwtl
push
push
xchg
mov
lods
fbld
je
push
xchg
cmp
enter
push
cmc
inc
jne
push
aas
orb
pop
jo
push
das
push
adc
test
fsubr
dec
ficoml
inc
jns
or
mov
mov
push
jg
mov
push
sbb
rol
xorl
enter
sti
mov
dec
shlb
pop
sub
push
cmp
inc
push
lahf
jg
adc
sub
fwait
jnp
xchg
cli
or
jnp
out
xchg
pop
imul
mov
lea
icebp
sbb
sbb
iret
enter
push
xlat
cmp
cmp
aaa
pop
mov
jae
sub
or
or
ret
mov
mov
addb
pop
xchg
mov
cmpsl
outsb
push
aaa
sub
jbe
sub
jno
cs
sub
pop
imul
mov
pop
mov
ja
add
lret
loope
xor
inc
scas
enter
push
mov
dec
into
les
ss
mov
repz
inc
push
and
clc
mov
ret
adc
dec
pop
jl
push
sbbl
sbb
pop
loope
push
sub
cwtl
shlb
push
subb
std
inc
mov
je
mov
ss
cmp
repnz
aaa
and
fnstenv
inc
mov
mov
fchs
sub
sub
pop
inc
jl
fdivrl
push
xchg
call
jne
dec
imul
mov
dec
push
in
jge
ret
pop
and
sbb
lea
rcr
arpl
aam
out
sub
xor
push
pop
cmp
mov
push
adc
sbb
cmpl
jne
sbb
dec
mov
test
sub
push
pop
cmp
mov
test
pop
loope
xor
xlat
xor
sbb
mov
call
pusha
gs
push
jno
push
cmp
add
sbb
jle
ret
push
outsb
orl
jb
xor
jg
push
cmp
scas
ds
pop
test
dec
jb
cmp
sub
cs
add
int
inc
lcall
ja
scas
orb
hlt
shrb
jnp
scas
add
imul
or
std
lods
leave
fidivs
popf
popa
movsb
sahf
cmpl
and
loopne
mov
filds
lods
roll
leave
ja
inc
mov
mov
cmpsb
ret
cmp
pusha
jae
or
sbb
cld
mov
mov
pop
ret
add
push
shl
stc
mov
push
addr16
mov
sub
cltd
leave
xor
or
push
mov
imull
dec
daa
shl
aaa
jmp
push
dec
addr16
jae
pop
sarl
lock
aad
mov
push
hlt
inc
dec
jp
decb
push
inc
and
pop
sbb
leave
cs
cmpsb
test
xchg
idiv
or
iret
enter
push
mov
je
lcall
mov
out
movsb
adc
out
mov
in
push
enter
mov
jmp
es
dec
stc
sarb
pushf
leave
mov
or
push
loope
icebp
je
add
adc
xchg
mov
jle
xor
mov
in
mov
aad
ficoms
xchg
fwait
mov
fs
jmp
xchg
mov
mov
divl
and
xor
xor
or
je
insl
cwtl
enter
out
xchg
lret
or
out
mov
jmp
call
stos
cs
jecxz
dec
push
movsl
aas
pop
mov
lret
push
sbbl
shlb
sarb
cwtl
repnz
insb
stos
jnp
std
sub
add
dec
out
js
and
fistpl
loopne
push
push
imul
inc
wbinvd
or
sub
loop
out
stos
in
mov
stos
cmpsb
lea
pop
push
loop
dec
pop
push
addb
pop
call
dec
ds
pop
xchg
scas
int
into
jg
mov
out
mov
sub
xchg
data16
jae
lods
lock
clc
sbb
fldlg2
mov
pop
mov
fs
std
aad
sbb
xchg
jmp
and
inc
add
subb
adc
xchg
and
mov
mov
out
repnz
mov
pop
jg
jb
xchg
pop
out
cmp
stos
hlt
jecxz
fisubrl
mov
in
xlat
jb
sbb
ret
add
ret
sub
cwtl
xor
clc
lock
push
jecxz
in
iret
or
dec
xchg
pop
and
jp
aaa
and
fisubl
adc
test
test
sbb
mov
popa
or
adc
sbb
pop
scas
enter
leave
inc
xorl
in
scas
mov
mov
fstpl
scas
pushf
mov
push
push
inc
test
and
mov
pop
add
push
xor
xor
push
das
jno
std
test
clc
rclb
mov
mov
or
ljmp
jp
addr16
xchg
pusha
addl
test
mov
stos
out
cwtl
adc
daa
out
jp
and
dec
sbb
cmp
loopne
popf
imul
jp
mov
ja
test
mov
lds
leave
loope
pop
sti
aad
pop
pop
lahf
or
insl
js
testl
push
mov
mov
sbb
and
cmp
lods
sti
or
cmpsl
fisubrs
test
adc
sub
fs
xchg
fsubrs
jae
adc
jg
mov
stos
jle
push
int3
je
in
mov
or
mov
je
data16
rcl
sbb
cmpsb
nop
repz
cmp
lea
pop
pinsrw
rorb
or
xor
pop
jge
test
mov
notb
iret
jnp
aaa
dec
push
test
sarb
fs
es
fnstcw
popf
stos
outsl
mov
or
inc
push
shrb
outsb
add
adc
in
or
cmp
ljmp
mov
lcall
lcall
int3
movsl
int
pop
push
testl
add
rorl
stc
push
cld
mov
jbe
aas
std
les
dec
cmp
aad
ss
fwait
in
insb
adc
ljmp
pusha
addr16
pop
dec
jo
aad
aas
mov
and
mov
cmc
adc
scas
lds
jns
in
cmp
xor
les
jnp
jg
mov
jno
mov
jg
ret
adc
loop
enter
mov
stos
mov
adc
or
mov
sbb
mov
stos
aam
sbb
test
push
faddl
jge
test
clc
xchg
lahf
push
push
bound
scas
jecxz
mov
loopne
mov
out
push
jb
cmp
xchg
xchg
pop
mov
adc
scas
adc
push
hlt
or
pop
mov
cmp
enter
mov
cmp
pop
sbb
sar
je
out
jmp
pop
pop
sbb
or
roll
cwtl
jg
fsubr
mov
adc
sub
ficoms
pop
xor
cmpb
setae
dec
and
mov
sbb
sub
or
jno
jmp
iret
imulb
out
xorb
pop
push
pop
out
imul
ror
xchg
cmp
inc
stos
xchg
push
xchg
js
in
sub
hlt
pop
test
sub
and
lds
fidivrs
xor
cltd
stos
xchg
mov
pop
push
cwtl
fildl
push
dec
in
xchg
mov
out
popf
dec
jae
sarl
in
mov
push
cmp
repnz
dec
testl
int3
dec
loope
jg
ljmp
loope
lods
jne
inc
mov
je
mov
les
outsl
jecxz
mov
jecxz
lods
in
out
mov
jmp
fstpt
repnz
push
and
jbe
pop
lahf
or
pushl
mov
jbe
arpl
push
fwait
mov
pop
xchg
lods
shrb
dec
sbb
adc
lock
pop
ret
stos
mov
ss
xor
ret
in
dec
pop
and
jnp
cli
add
aas
stc
sbb
dec
xor
or
xlat
addr16
mov
in
outsb
cs
and
jle
scas
mov
mov
es
mov
shl
lcall
sbb
cmp
shrb
push
push
xor
inc
sub
loop
mov
jmp
mov
out
aam
cmc
mov
arpl
gs
fmulp
push
xor
jecxz
xchg
fbld
adc
jecxz
mov
push
sbb
adc
lods
cltd
pop
lcall
cs
fnsave
pop
mov
dec
sbb
xchg
pop
test
in
xor
xor
pop
and
out
int
insl
jns
test
and
pop
xor
and
pop
cmp
adc
xchg
add
mov
out
lret
imul
or
rorb
andb
in
ja
adc
xchg
out
pop
and
push
insb
or
push
jns
inc
mov
cmp
mov
mov
outsb
pop
add
xor
lcall
test
push
cmpb
test
xchg
cmp
faddl
xchg
enter
sbb
inc
push
push
xorl
rolb
addr16
test
pop
dec
or
sarl
rcrb
jle
dec
std
mov
cld
add
or
sbb
imul
or
or
jle
sbb
out
mov
xor
hlt
dec
repnz
out
mov
aam
imul
clc
ret
add
fnstenv
idiv
into
shll
xor
xchg
push
mov
mov
fs
dec
fildl
pop
enter
dec
push
jmp
add
or
out
inc
dec
jp
sbb
cmp
stc
sbb
sub
stos
xlat
dec
and
xchg
adc
xchg
repz
sbb
jnp
andb
xchg
imul
xor
or
cli
xchg
mov
inc
gs
pushf
sbb
fwait
stos
rcll
jae
xlat
jne
iret
loop
call
aaa
mov
aas
pop
fstpl
sub
or
ljmp
iret
orb
loopne
insl
pop
jbe
test
pop
ret
fbld
xor
pop
mov
es
jp
mov
mov
adc
push
insl
in
add
and
adc
push
pop
xor
cmpsl
sbb
push
lret
lahf
rcrb
inc
daa
out
and
mov
or
cltd
or
push
dec
push
rorb
jge
mov
sbb
mov
addr16
mov
mov
mov
inc
mov
mov
iret
scas
ja
adc
mov
loop
sub
enter
xchg
pop
cwtl
mov
aaa
dec
mov
fwait
add
in
lds
pop
push
adc
sti
repz
adc
sbbb
cwtl
xlat
cli
dec
push
pop
cli
sub
leave
out
repnz
sub
decb
jo
sub
pop
lea
iret
pop
mov
push
mov
and
mov
dec
out
jne
loopne
adc
push
out
cs
repnz
dec
cmpsl
cmp
jb
sub
arpl
xchg
push
rep
dec
dec
rcrb
pop
jg
decl
lods
mov
scas
in
in
lds
sbb
inc
ror
lods
push
pop
lret
in
lahf
mov
sbb
mov
inc
and
fisubl
dec
dec
adc
mov
nop
fsubrl
dec
push
int
test
mov
dec
jb
arpl
or
pop
lcall
adc
cmpsl
mov
xor
stc
mov
imul
mov
mov
cld
push
ljmp
mov
add
iret
add
fwait
outsl
lods
and
das
cmp
or
roll
pusha
mov
fdivrp
lds
aam
mov
mov
imul
std
pop
dec
lds
and
adc
add
fisttpl
test
jecxz
lcall
push
sbb
push
loope
repnz
push
add
cmp
jo
jg
out
lret
cmpsl
and
lea
mov
das
sub
dec
lea
rorl
popa
lret
add
test
mov
ja
lods
pop
loopne
push
in
and
loop
jb
jecxz
cmp
cmp
sahf
sbb
rol
sti
icebp
pusha
sarl
out
jnp
lods
daa
js
fstl
clc
mull
sbb
fisubs
imul
ret
scas
sbb
ja
cmp
adc
cld
mov
push
das
lea
xor
shlb
and
or
inc
and
mov
adc
loop
in
cli
loop
out
push
ret
imul
xchg
outsl
dec
mov
pop
clc
ljmp
sbb
ret
andb
pop
pop
outsl
xchg
ljmp
add
test
je
push
leave
mov
addr16
aam
mov
mov
sahf
stos
cwtl
cmc
lret
shll
pop
jne
mov
hlt
test
fwait
cld
cmp
lods
dec
mov
pop
out
fisttpll
inc
inc
mov
push
sbb
nop
hlt
ja
cmp
mov
cmp
loope
cli
cmp
jo
in
test
test
jecxz
ja
cmp
cmp
sub
rcll
enter
adc
push
cmpsb
jp
sub
les
cmp
outsb
sub
push
imul
test
or
iret
repz
aad
push
and
mov
xchg
outsl
neg
repnz
mov
push
push
das
cwtl
movsb
xchg
in
add
or
arpl
out
cli
lds
or
sbb
scas
mov
or
xor
dec
int
test
es
mov
sbb
mov
push
xchg
lea
iret
std
popl
sub
mov
ljmp
shll
loop
cmp
in
mov
lcall
ficomps
mov
inc
ljmp
roll
cmpsb
clc
xlat
leave
push
loopne
xor
and
jbe
in
sti
cmpsl
and
ja
sbb
outsl
sti
sahf
fwait
add
pop
push
mov
test
into
and
jmp
mov
fsts
sub
imul
outsb
cld
rorb
or
aad
notb
iret
aaa
into
pop
mov
or
dec
je
push
ret
and
or
cmpsl
ljmp
test
cmc
fistl
adc
xchg
mov
mov
sbb
test
and
insb
sub
repz
xlat
mov
sub
data16
jnp
pxor
test
mov
pusha
pop
daa
sub
pop
into
cmp
cmp
jb
jne
adc
out
xor
sbb
mov
ss
xlat
ret
aam
pop
or
pop
insb
or
or
or
push
or
cmp
pop
xchg
icebp
mov
cltd
shld
xchg
push
fwait
adc
xlat
inc
push
mov
mov
data16
push
xchg
cmpsl
mov
adc
outsb
ret
push
repnz
cwtl
fwait
mov
pushf
mov
mov
sub
push
lcall
aad
mov
ja
add
xor
cmp
mov
and
mov
cmpsl
ja
pop
test
and
pop
or
jmp
mov
sbb
cmp
push
xchg
pop
test
and
pop
je
test
gs
push
cmpsb
int
or
lods
pop
jb
jns
outsl
rclb
stc
or
or
adc
lock
dec
sbbb
dec
into
icebp
cmpsl
ja
push
xor
in
or
mov
push
pop
int3
arpl
lock
push
dec
sbb
cs
add
jle
decl
sti
xor
mov
push
push
addr16
aam
adc
arpl
mov
aas
dec
and
xchg
cmp
pop
int3
lods
mov
ss
adc
sbb
insb
outsb
out
andb
into
adc
inc
roll
sarl
dec
shl
mov
push
gs
xchg
jne
rcrl
lods
pop
and
xor
shrb
leave
xlat
sti
mov
or
dec
test
movsl
mov
push
pop
inc
icebp
loope
cmc
and
loop
stos
add
mov
sbb
sti
sbb
fisttps
xor
and
pop
jl
shl
repnz
jp
jecxz
inc
popa
bound
sub
mov
mov
nop
fnstenv
push
inc
fldt
sub
or
mov
andb
mov
xchg
xor
lock
js
xchg
lret
push
cli
pop
mov
push
push
lods
subb
enter
pop
imul
cmp
or
mov
xchg
mov
cmpsb
enter
ds
pushf
std
rolb
insl
int
js
scas
mov
add
xlat
in
xchg
sub
cmc
dec
enter
outsb
mov
imul
dec
push
fisttpll
cwtl
test
mov
xchg
fsubrl
fwait
rcl
gs
push
aad
adc
repz
into
pop
or
pop
sbb
add
fld
incl
jns
cwtl
pop
rorb
outsb
js
jle
push
pop
pop
inc
icebp
test
hlt
fwait
xchg
xchg
mov
pop
psrld
pop
lods
pop
subb
adc
push
movsb
jmp
mov
cmp
nop
sub
test
test
mov
jge
pop
daa
les
mov
add
jg
dec
mov
jns
xor
jge
mov
test
push
mov
or
and
ljmp
jle
fdivp
mov
xlat
inc
fwait
pop
pop
ror
push
xchg
dec
or
fwait
sbb
popf
imul
ja
and
in
mov
bound
dec
pop
dec
iret
sbb
icebp
xchg
jnp
aam
pusha
push
mov
dec
outsl
inc
dec
jno
fadd
mov
add
push
call
jmp
mov
test
jbe
lahf
aam
jbe
aaa
int
out
cli
sarl
sbb
push
sbb
mov
dec
mov
in
lcall
adc
sub
inc
cmc
cmc
rcr
xchg
jno
sbb
cmc
icebp
or
icebp
or
mov
xor
loope
jbe
addr16
cmp
daa
icebp
jb
mov
add
lods
test
clc
out
xor
addr16
stos
in
lods
mov
pop
into
and
stos
pop
mov
ret
push
xchg
or
je
lock
jb
pop
mov
pop
sbb
inc
gs
pop
aaa
or
out
xchg
fs
push
or
sub
or
jno
sub
xchg
int
pop
outsb
cmc
sub
rolb
insb
cmpsb
sub
adcb
loop
mov
pop
mov
jmp
aas
jp
mov
stc
test
sub
in
loop
cmpb
and
push
push
das
nop
ss
sub
sub
inc
fwait
ret
mov
dec
loope
inc
sarl
in
mov
aaa
push
lcall
xor
stc
into
das
adc
popa
dec
flds
sbb
insl
inc
repnz
adc
sbb
movsl
ret
cmp
mov
mov
xor
add
cmp
stos
pop
xor
imul
fldt
pop
cmpsl
adc
int
inc
sub
mov
inc
fwait
xor
mov
aad
int3
push
cli
adc
cltd
and
imul
fs
ss
mov
push
movsl
outsb
loop
mov
lahf
std
ja
mov
ret
push
jl
mov
jae
mov
lods
test
push
mov
mov
and
dec
jb
jp
mov
cld
outsl
fildl
sbbl
pusha
popa
test
stos
arpl
lds
test
inc
cwtl
fistps
insl
mov
sahf
add
xor
jnp
jbe
xchg
mov
inc
mov
jae
push
xchg
fdivl
jbe
imul
adc
cmp
cmpb
into
cwtl
imul
in
lret
pop
movsl
cmp
ret
dec
test
xchg
test
and
pushf
ja
or
xchg
adc
nop
cmp
subb
in
dec
mov
push
negb
mov
mov
dec
sub
iret
inc
into
mov
aad
idivb
mov
scas
mov
std
lock
mov
dec
mov
push
jnp
mov
les
pop
sub
lock
jb
cmp
pop
jge
cmp
xchg
or
inc
sti
leave
shlb
inc
stos
fnstcw
mov
xor
and
add
frstor
push
jne
add
lds
shr
push
in
loopne
xor
rolb
stc
mov
or
je
lcall
idiv
loop
xchg
scas
decl
popf
les
inc
inc
cmp
add
pop
imul
lret
repz
jne
sbb
fisubrl
cmpb
shr
je
out
lret
sub
dec
scas
loope
xchg
rcrl
pusha
or
inc
ficomps
push
fsubs
ljmp
push
pop
cld
lds
lods
push
inc
lret
nop
outsl
pop
out
inc
aad
dec
xor
inc
int3
cld
lock
stos
fwait
data16
adc
cmpsb
pop
mov
outsl
repnz
xchg
jae
incb
push
out
les
clc
sbb
sar
jns
dec
push
jmp
pop
mov
rcll
inc
cmc
mov
ror
inc
in
lahf
jp
enter
dec
dec
ret
out
lret
pop
inc
ja
push
or
inc
shll
and
mov
or
dec
mov
std
pop
jne
mov
divl
mov
push
lock
mov
adc
out
sub
add
jle
cmpsl
in
mov
repz
in
add
imul
ja
insb
jno
loop
dec
xchg
or
les
mov
imull
mov
loope
jne
add
es
jp
adc
inc
in
mov
je
addr16
lcall
pushl
dec
pop
add
jecxz
sub
xchg
stos
cmp
hlt
fadd
in
lcall
jg
sti
stc
mov
scas
lahf
jbe
nop
ja
nop
mov
fmul
inc
mov
clc
add
gs
pop
push
dec
fstps
inc
addr16
rol
cmp
leave
jno
imul
xchg
aam
push
jae
pop
or
and
xchg
xchg
into
outsb
xchg
push
mov
sbb
jecxz
aad
or
xor
orl
add
mov
subl
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
in
shl
jnp
hlt
pushf
jnp
ficoms
sahf
arpl
idivb
std
jae
dec
out
leave
pusha
or
lret
adc
mov
pop
es
inc
add
xchg
addr16
inc
pop
mov
ljmp
fsub
incb
out
jecxz
nop
or
and
push
add
cmp
shlb
popf
jb
insb
adc
sub
push
gs
push
sub
js
fnstcw
ss
pop
sbb
adcb
or
jecxz
das
and
dec
lret
adc
adc
xor
stos
mov
or
lods
jecxz
push
mov
dec
xorl
lret
or
xchg
sti
xor
stos
jmp
stc
sbb
subb
iret
mov
pop
daa
or
popf
out
inc
mov
das
mov
lods
jmp
jo
int
or
inc
movb
es
out
mov
gs
push
gs
adc
sti
push
popa
sbb
bound
fucomi
sti
push
inc
dec
pop
popa
sub
jnp
and
pop
mov
shrb
stos
dec
sbb
dec
cmp
xor
jne
pop
push
inc
push
test
test
xchg
arpl
call
imul
fstpt
out
sub
inc
orb
ror
cmp
push
dec
sbb
mov
clc
jno
pop
inc
sbb
out
imul
imul
dec
call
scas
out
fldcw
aad
rorb
shrb
cmp
xor
pop
or
into
into
out
xchg
or
sbb
pop
pop
lret
mov
add
inc
arpl
sub
inc
leave
cmp
popa
incb
mov
adc
test
dec
insl
push
cmp
push
fdivp
ds
and
repz
mov
push
call
push
scas
js
mov
cltd
loope
int3
mov
bswap
lock
cmp
fdivr
mov
movsb
pop
lahf
call
enter
lret
mov
xchg
push
mov
scas
add
xchg
incb
dec
xor
sbb
dec
adc
je
or
data16
in
sti
jne
ficompl
push
adc
lds
aam
mov
mov
sbb
cli
sbb
sahf
xor
movsb
inc
dec
push
adc
lock
das
jns
neg
or
scas
loope
les
not
clc
sub
dec
xor
ljmp
scas
add
dec
sarb
push
lret
mov
call
pop
inc
cmpsb
mov
sub
sub
xorb
cwtl
out
data16
sbb
push
jp
xchg
mov
nop
enter
or
pop
test
fmuls
mov
hlt
mov
mov
shrb
add
inc
mov
mov
fcoml
push
cwtl
ret
inc
movlps
xor
movsl
jp
or
fs
xchg
inc
jg
mov
cmp
pop
push
push
push
outsb
mov
mov
movsb
jp
lret
push
ret
lock
bound
mov
add
imul
gs
mov
dec
aam
xchg
sub
and
ror
sbb
jb
test
or
dec
add
stos
js
iret
add
push
test
inc
xor
sbb
enter
adc
cmp
and
aad
mov
in
addb
lcall
icebp
push
ret
loope
inc
pop
rorl
addr16
sahf
adc
push
fstpt
xchg
xchg
shll
xor
add
push
sbb
dec
repnz
test
xor
stc
mov
adc
in
jmp
xor
dec
pushf
hlt
test
stos
mov
and
std
fninit
mov
push
test
fcmovnbe
data16
lahf
cmc
and
jae
sub
rcr
test
dec
mov
fildll
movsl
push
cli
faddl
jnp
and
out
inc
ljmp
and
cmp
xchg
pusha
and
int3
push
loope
scas
xor
js
mov
mov
pop
inc
jnp
jge
or
lods
xor
dec
and
jge
jg
imul
pop
in
mov
addr16
and
int3
mov
dec
mov
dec
outsb
roll
mov
xchg
jecxz
inc
sarb
lods
jbe
sbb
sub
mov
push
jb
icebp
jp
jmp
inc
sub
push
xorl
inc
outsb
add
or
fisttps
fcmovbe
stos
mov
inc
sub
rorb
inc
fisubrs
stc
sbb
cmp
pop
push
adc
adc
ja
lds
xchg
sarb
in
or
pushf
fnsave
push
insl
xor
cltd
push
adc
xor
out
or
int3
cmpsl
xor
or
cwtl
dec
movsb
popa
or
xchg
test
mov
push
js
cli
aas
lea
xchg
outsb
pop
into
inc
sub
ja
subb
dec
mov
hlt
outsl
mov
pop
mov
jl
xor
lea
jne
adc
add
inc
leave
outsl
pop
cmp
lret
mov
fidivl
repz
out
cltd
into
in
xlat
jecxz
mov
int
inc
out
jl
pop
mov
rclb
mov
or
pop
popf
pop
mov
aaa
gs
test
ret
mulb
les
pop
shrb
jne
in
sahf
cmp
mov
push
jo
es
leave
mov
mov
cmp
mov
mov
inc
mov
test
cmp
stos
out
mov
fldl
inc
popf
add
pop
test
sbb
cmc
aad
cmpl
cmp
lret
int
ret
dec
and
in
enter
pop
inc
sub
jae
in
mov
mov
loope
addr16
aaa
aam
icebp
xorb
and
dec
or
ljmp
and
insl
mov
pop
cmp
in
shll
notb
out
out
jge
jge
stos
scas
mov
outsl
insb
fmulp
lahf
cmp
lods
sub
xchg
mov
xor
cmp
out
lods
or
mov
bound
shrb
mov
fisubl
push
insl
jno
aaa
loopne
loopne
mov
sahf
jge
cltd
loopne
bound
push
jp
cmp
scas
or
add
imul
jp
fdiv
loopne
push
cmp
leave
add
cmp
lods
mov
jp
jecxz
mov
adc
add
movsb
nop
icebp
mov
data16
test
xchg
pop
mov
xchg
inc
int3
pop
dec
inc
sub
jge
pop
movsl
or
mov
pop
adc
or
push
testl
test
or
pushf
dec
pushf
mov
frstor
mov
sub
adc
stc
shrl
inc
lock
fsubrl
dec
in
push
jmp
dec
pop
or
mov
jbe
lds
fisubl
ja
dec
inc
loop
popa
cs
push
dec
add
inc
loope
or
jns
or
pop
lods
and
pop
dec
movsb
xor
cmpsb
les
mov
jne
mov
mov
sahf
dec
ret
test
fiaddl
cmpsb
and
xchg
imul
xor
shrb
dec
int
inc
mov
add
outsl
push
sbb
mov
into
pop
lds
sar
inc
sahf
scas
fistps
clc
mov
inc
xchg
in
and
jge
rorb
outsl
loop
jnp
cld
ljmp
or
addl
xchg
sub
mov
fcompl
mov
push
fucomip
scas
shrb
inc
sub
mov
pop
xchg
lret
sbb
dec
pushl
dec
cltd
xchg
jnp
mov
dec
inc
cmp
pop
jne
ret
push
xchg
add
and
sbb
xchg
dec
jl
and
arpl
xchg
outsl
add
out
mov
adc
mov
mov
cmp
and
cmp
scas
mov
jne
nop
adc
jnp
xor
xchg
ret
sarl
je
adc
loopne
xchg
roll
jl
dec
add
pop
in
stc
das
dec
and
xchg
and
pop
sub
sar
aam
cmc
add
jle
cld
movsl
ss
rcrl
popa
xor
xchg
aas
sbb
cmp
pop
cmpsl
fisubl
adc
and
pop
arpl
cmp
les
mov
stos
add
out
xor
sahf
repz
ljmp
jae
jle
int
ljmp
stc
lcall
cmp
sti
and
icebp
in
jge
loope
sbb
push
xchg
outsb
sbb
hlt
idiv
lret
lret
out
mov
mov
jno
push
push
jl
cmp
or
mov
aad
dec
mov
pop
and
insl
jl
sbb
ror
popa
je
adc
adc
and
iret
sar
js
push
mov
mov
movsb
sub
push
mov
cmpsl
mov
ja
push
ljmp
mov
mov
cltd
inc
fistpl
mov
daa
xor
mov
sub
jo
icebp
add
sbb
cmpsl
daa
test
inc
fistps
sub
popl
out
std
je
lds
fs
rcll
pop
pop
or
imul
ss
in
or
sahf
fbstp
mov
das
xchg
jge
out
mov
jno
dec
fisubl
xchg
xchg
inc
pop
das
or
imul
popf
test
cmpsb
test
imul
dec
das
fsubrs
push
btsl
mov
imul
pop
in
push
ficoml
jge
pop
mov
mov
int
mov
popa
aad
sbb
aam
and
fiadds
test
aam
inc
mov
or
mov
test
pushf
mov
push
pop
inc
dec
stos
xor
mov
jne
cs
sub
xchg
sbb
insl
sahf
pop
push
mov
imul
dec
inc
jg
cmp
cmp
jb
mov
sahf
repnz
decb
mov
mov
push
ret
ret
fmuls
mov
inc
stc
stc
shr
sub
js
xchg
jmp
mov
xor
ds
mov
movsl
push
pop
sub
mov
std
adc
lods
adcb
lahf
jne
nop
inc
jnp
mov
mov
pop
push
fiaddl
pop
inc
les
jmp
sbb
std
loopne
clc
mov
cmp
out
push
adc
lret
jne
es
test
add
fs
push
mov
fld
xlat
fisubrs
pop
bound
xchg
ljmp
adc
mov
fiaddl
xor
sti
arpl
and
hlt
bound
es
imul
imul
shld
fldl
lcall
pop
cmc
mov
add
inc
xor
push
sbb
jecxz
aad
fsubrl
mov
lahf
enter
add
mov
push
scas
jne
sub
xor
cli
cmp
mov
push
insb
push
jg
sbb
daa
jle
data16
pop
out
lea
add
dec
mov
fwait
loopne
pop
cmc
mov
and
andb
lcall
mov
pop
xor
ss
das
lcall
adc
xchg
call
push
data16
cmc
ss
and
jecxz
and
and
mov
out
insb
and
orl
pop
xchg
sbb
cmp
fidivrs
xchg
hlt
dec
xlat
es
out
mov
daa
sub
fidivrl
mov
cmp
arpl
cltd
sub
pop
addr16
or
jbe
xchg
les
sub
lea
outsl
or
and
sub
inc
push
sbb
push
lock
xor
mov
and
push
mov
sub
mov
clc
stos
dec
inc
sub
mov
and
xchg
xor
cmc
jo
adc
ljmp
pop
mov
mov
add
pushf
cld
sbb
or
and
jp
adc
stos
adc
mov
test
push
hlt
cltd
or
test
ljmp
call
std
mov
add
shl
or
cmp
fcmovnu
scas
outsl
dec
nop
add
and
push
ret
cmpsl
mov
sbb
aas
or
or
leave
mov
lock
fnstsw
sarb
insl
cli
in
fidivrl
mov
pop
and
push
sbb
popf
xchg
iret
push
inc
std
into
aad
out
sub
movsl
xchg
icebp
pop
adc
jnp
gs
or
jno
jl
pop
testl
cmp
es
movsb
pop
mov
or
ret
lds
or
lock
shlb
aaa
and
add
std
lods
lds
add
pushl
aaa
insl
pusha
sbb
xor
aam
or
out
xor
lret
nop
aad
ja
xor
arpl
jnp
add
leave
adc
push
leave
cs
cmc
xchg
inc
xor
in
inc
xchg
xchg
jnp
push
xchg
dec
push
lods
test
dec
or
mov
or
aam
and
in
mov
inc
or
arpl
fildll
arpl
lret
push
cld
add
popa
adcl
or
xor
pop
mov
push
inc
inc
roll
dec
jecxz
adc
imul
sbb
loope
jmp
mov
fdivrs
lret
shll
stc
cltd
js
popa
jns
mov
or
push
or
mov
push
sub
jl
dec
sub
arpl
add
mov
hlt
negb
or
mov
pop
mov
iret
fs
ds
cmp
cltd
xchg
sti
cmc
pop
pop
bound
ror
or
jo
fmulp
lahf
inc
cmp
or
dec
dec
mov
pop
pop
fcomi
sahf
enter
int
mov
in
mov
idivl
sub
jne
mov
mov
push
xchg
scas
push
xchg
mov
orb
sub
inc
jbe
inc
in
pusha
dec
cli
pushf
and
and
xor
hlt
xlat
fimull
add
into
dec
xor
push
push
cld
aas
mov
adc
xor
insl
mov
or
lods
xor
scas
push
mov
sahf
mov
jne
fwait
mov
test
sbbb
data16
incb
popf
loop
cmp
icebp
inc
lcall
cld
dec
jnp
scas
arpl
sub
inc
inc
enter
or
pop
rcrb
mov
jg
repz
xchg
divl
mov
and
mov
mov
inc
pop
sarl
dec
mulb
push
repnz
aaa
popf
stos
cmc
push
xchg
jge
push
xchg
or
adc
push
cmp
xor
fisttpl
jl
sub
or
clc
jno
xchg
sub
lods
out
into
push
push
xorb
popf
pop
sarl
shlb
mov
jo
sahf
call
rol
mov
lock
std
bound
test
push
inc
lds
jg
shlb
adc
adc
ljmp
pop
mov
adc
shll
ret
push
adcl
and
test
ljmp
test
shrl
sbb
cmp
jne
pop
imul
inc
roll
loopne
mov
lahf
adc
out
add
nop
xor
fisttpll
movsb
jb
ja
cmp
sti
inc
ret
sub
popf
cmp
jne
xchg
dec
int
cmc
sahf
loopne
mov
or
mov
ja
mov
mov
in
loop
mov
imul
mov
int3
jecxz
mov
add
push
repz
xor
inc
bound
leave
jp
mov
out
xchg
fdivrl
mov
xlat
fildl
fstpl
repnz
fcoml
and
pop
testb
mov
jbe
xchg
mov
icebp
ror
rorb
repz
psrlq
shll
sbb
pop
fisubrs
ficoms
and
jns
icebp
ja
and
xchg
pop
cs
inc
imull
jecxz
pop
imul
pop
mov
cs
and
dec
pop
jne
jge
jbe
jnp
shrb
fstpl
cmp
xlat
adc
iret
inc
test
into
cmp
cs
arpl
mov
or
pop
jge
int
hlt
xlat
lods
push
inc
sahf
shrl
dec
test
sbb
pop
push
and
jge
dec
jg
or
jae
or
push
and
jne
xor
cmp
mov
stos
jo
cmp
and
add
sub
leave
adc
mov
pop
push
int
mov
cmp
ret
sti
jns
xor
cltd
dec
mov
mov
xor
enter
push
jp
fs
fs
jg
rcrl
sarb
mov
pop
pop
aas
leave
push
and
out
add
push
les
in
jne
cmp
jae
pop
xchg
lahf
mov
nop
ja
icebp
inc
ret
mov
rcr
aas
das
mov
and
mov
jle
jb
pop
mov
into
clc
jo
sub
lds
fs
lods
cmp
cltd
pop
jns
cmp
pop
fidivl
loopne
dec
mov
xor
hlt
lahf
xor
and
fucomip
shlb
pop
push
idivl
push
xchg
imul
negb
lret
cmp
rcl
out
mov
comiss
or
and
jbe
xlat
xorb
xchg
lahf
je
call
inc
data16
mov
ret
gs
push
bound
dec
pop
lods
int
pop
enter
sub
outsl
mov
mov
inc
and
cmp
cmp
shrl
jbe
xchg
rcrb
push
stc
out
cmp
mov
jae
cmp
test
cmp
add
push
or
jge
imull
push
addr16
xor
scas
imul
dec
pop
std
aad
and
sbb
or
xchg
xor
jne
or
in
adc
mov
fcoml
aas
jbe
xor
inc
dec
adc
lcall
jmp
jp
int
repz
scas
xor
mov
cmp
pop
xchg
bnd
pop
mov
push
push
fimuls
inc
push
addb
insb
stc
lahf
cmp
sbbb
ret
sbb
mov
movl
movsb
add
dec
mov
clc
cmp
mov
push
add
movsl
cli
xor
pushl
rcrb
addr16
out
out
aad
sbb
sub
push
inc
xlat
mov
repz
jmp
push
add
cwtl
aaa
and
mov
mov
mov
test
das
into
fidivl
ret
cmp
xor
rorb
pop
daa
bound
xchg
xorl
arpl
rcl
ds
pop
daa
cmp
push
pop
jecxz
lods
aam
out
mov
les
bound
insb
stc
repz
pop
adc
das
in
mov
daa
dec
ja
test
fstps
dec
inc
jmp
sarb
mov
inc
cmp
jg
xchg
stos
aaa
pop
insl
xor
jbe
fs
in
cmp
lahf
push
cwtl
repnz
leave
ret
mov
pop
inc
push
pop
aaa
or
mov
into
inc
shrb
ficomps
fwait
clc
jae
push
aas
sbb
loopne
push
jl
fldenv
arpl
push
test
inc
sub
dec
and
insb
mov
call
int3
jmp
sub
or
pop
or
inc
fcomps
psubq
popf
jae
pop
int3
inc
push
inc
push
pop
fnsave
push
mov
mov
test
rolb
mov
out
and
and
add
loope
push
cld
popa
ret
cmp
lock
leave
je
inc
cwtl
push
jl
and
es
mov
sbb
hlt
sahf
push
cmpsl
movsb
mov
imul
fcmovbe
pop
xchg
inc
cmp
mov
add
inc
ljmp
adc
js
mov
imul
xchg
push
cli
xchg
xchg
inc
add
ds
daa
mov
ficomps
push
repnz
dec
pushf
xchg
enter
mov
add
sbb
mov
sub
and
dec
push
jno
cli
and
in
and
xchg
adc
xchg
out
mov
aaa
adc
sub
cmp
in
loopne
mov
cmp
jmp
and
fidivrl
adc
xor
sbb
es
push
jns
daa
out
dec
pop
sub
fwait
jae
dec
lret
mov
icebp
or
pop
inc
popa
ret
lds
xlat
sbb
ret
and
and
dec
in
mov
inc
push
addb
aaa
xor
mov
or
fwait
inc
xchg
and
iret
lds
inc
inc
add
mov
addr16
movsl
sbb
lea
push
das
insb
xor
jne
mov
or
xchg
or
int3
pusha
mov
jmp
push
pushf
mov
push
les
ljmp
pop
sarl
test
push
cwtl
packuswb
mov
xorb
rcrl
ljmp
lock
push
mov
mov
add
jge
fiadds
jp
mov
lret
adcl
mov
sbb
jmp
pop
jb
loope
xchg
cmp
dec
or
adc
daa
hlt
or
sbb
jge
xchg
or
dec
out
xor
std
jb
gs
inc
lds
stc
ljmp
adc
pop
sub
mov
jbe
or
inc
call
loopne
sub
enter
test
sub
fistl
jne
dec
sub
nop
mov
insb
clc
add
dec
gs
enter
jb
and
sbb
cmp
push
xchg
xor
cs
sbb
pop
cwtl
imulb
ds
xchg
or
decl
call
xor
data16
or
push
mov
xor
adc
lcall
cmp
cmpb
adc
mov
orl
and
shlb
aaa
pop
fldenv
and
or
and
js
mov
shll
mov
dec
incl
fs
aas
cmp
pop
insl
and
mov
repz
sbb
cltd
aad
imul
pushl
inc
and
inc
mov
xchg
xor
clc
jp
pop
inc
adc
sub
call
mov
sbb
enter
cmp
out
push
dec
pop
jno
scas
inc
mov
sub
pop
mov
or
dec
and
insb
jno
lret
out
jno
fnstsw
sbb
orb
pop
stc
jns
sbb
adc
movsb
xchg
int
and
mov
sti
sarb
cmp
in
into
das
inc
mov
or
pop
rcrl
pop
fldt
dec
clc
ret
fmull
je
cs
es
decl
out
bound
rol
push
add
out
icebp
inc
shrb
lods
shlb
jo
fwait
xor
aas
cmpsl
cli
mov
insl
andb
movsl
je
lcall
icebp
push
lock
test
inc
sbb
ficomps
mov
nop
sub
or
push
sti
pop
add
fistps
pop
mov
xor
mov
cli
out
addr16
sti
xor
jae
mov
mov
mov
adc
jb
jbe
enter
pop
mov
inc
das
rcrb
dec
addr16
cmp
ja
cld
adc
mov
jae
ret
or
call
mov
addr16
add
shrl
dec
push
add
pop
lea
dec
das
push
je
ds
stos
push
xchg
inc
push
cmp
cmp
xor
sbb
out
ss
mov
mov
hlt
mov
dec
dec
xor
adc
jbe
cmpsb
or
ret
jo
movsl
loop
pop
add
shlb
xchg
int3
movsl
push
jbe
mov
cmc
ret
lea
xor
xor
xchg
or
fildll
loope
xor
and
dec
addr16
xchg
lret
rcrb
movsl
inc
dec
orl
or
or
add
pop
or
das
push
test
data16
popa
inc
pop
bound
pop
mov
shrd
sahf
xor
jo
mov
stos
jno
mov
lahf
pushf
out
mov
or
push
mov
subb
xchg
sub
mov
mov
push
scas
in
iret
jmp
fcmovnbe
stos
fldl
ret
and
cmc
int3
cmpsb
jbe
mov
inc
scas
into
or
cmc
mov
adc
inc
outsb
test
mov
sbb
loopne
dec
xchg
imul
rcrb
push
divb
test
or
aam
xchg
xchg
pusha
sub
or
push
sbb
push
push
lret
or
cltd
rclb
or
cmp
and
add
fstl
jecxz
movsb
dec
test
rolb
mov
jno
in
sub
int
test
sbb
mov
jle
push
and
rolb
push
rorb
inc
sbb
outsl
sub
decl
fists
mov
pxor
sbb
sub
pop
out
mov
outsb
inc
xor
decb
mov
push
and
push
mov
lods
lods
loop
out
mov
pop
sar
loopne
mov
outsb
mov
cmp
nop
jae
in
in
sub
in
popa
aaa
push
clc
test
sti
dec
cmpsl
lds
adc
flds
scas
pop
xor
js
lods
cmp
test
mov
inc
cmp
and
lret
push
dec
push
mov
fs
popa
sahf
jns
dec
aas
jbe
fists
xor
mov
and
bound
or
jp
dec
sbbl
cmp
imulb
cwtl
sub
fldt
pop
inc
cs
cmp
mov
cli
or
daa
adcl
dec
ja
mov
jo
mov
sbb
inc
and
idivb
ss
xchg
sbb
rcrl
je
ljmp
xchg
jbe
xor
movsb
fs
or
popf
lods
pop
std
push
icebp
mov
xor
jge
mov
jne
jnp
jg
and
jns
mov
pop
aam
in
cs
xchg
aam
sbb
test
shlb
sub
push
in
adc
outsb
inc
insb
outsb
add
imul
sub
push
vpsubw
jmp
xchg
das
scas
shll
cltd
sub
pop
subb
inc
clc
shll
pop
fadd
bound
arpl
dec
stos
mov
nop
and
xchg
jbe
mov
movsb
ret
ds
and
sub
repz
xchg
insl
pop
pop
js
mov
fimull
mov
rclb
out
jle
mov
std
scas
aam
imul
insb
lret
and
sbb
cli
xchg
sub
sub
imul
cmp
in
xor
shlb
mov
out
in
pusha
jbe
faddl
fwait
scas
ja
jmp
fstpt
cltd
mov
xor
out
adc
scas
lahf
cmp
mov
popa
aas
rolb
imul
repz
xchg
sbbb
outsb
xchg
push
ds
jp
dec
enter
frstor
das
pop
int
jl
lret
and
popf
mov
cmp
lds
mov
rorb
adc
push
cmp
and
push
in
ss
pop
lods
popl
mov
push
mov
inc
push
in
pop
jecxz
push
inc
inc
cmpb
shrl
cld
scas
add
movsb
pop
inc
or
push
js
pusha
and
cmpsb
iret
jl
mov
jo
lret
int3
fcomps
inc
mov
push
xchg
fwait
mov
enter
in
jne
xchg
aaa
daa
notl
sbb
mov
ss
js
fimuls
imul
in
movsl
xchg
mov
xchg
pop
mov
and
ja
cld
sbb
ja
cltd
loope
lcall
dec
add
push
jmp
arpl
lods
jecxz
sahf
gs
push
lods
test
call
shll
loope
push
mov
nop
pop
push
imul
push
pushf
iret
in
ret
out
and
cmp
mov
add
test
ss
scas
adc
add
jnp
xchg
nop
xor
sti
xchg
ljmp
and
pop
jmp
mov
push
or
shl
dec
int3
jecxz
xlat
mov
pop
dec
xor
subl
lods
sub
dec
js
jl
xor
mov
fnsave
sbb
mov
or
sbb
insb
arpl
dec
cld
daa
mov
movsw
hlt
cmpsb
pop
mov
dec
mov
adc
dec
xchg
jl
dec
cltd
ja
cmp
sbb
dec
sbb
xchg
mov
mov
mov
xchg
mov
dec
sub
dec
sub
cmp
xchg
jl
in
popa
rolb
mov
xor
repz
sub
not
insl
add
fndisi(8087
dec
xchg
mov
test
add
adc
lods
add
lahf
popf
jl
pop
jp
mov
jg
dec
mov
pusha
mov
in
insl
add
push
mov
adc
loope
into
jle
lcall
leave
mov
sti
loop
out
and
mov
add
inc
fsubl
mov
clc
pop
icebp
int3
rcl
jl
cmovb
daa
lods
xchg
std
lret
pop
xchg
aaa
mov
mov
lcall
mov
dec
sub
iret
sbbb
jl
pop
mov
xor
test
or
lcall
mov
in
arpl
mov
bnd
mov
sub
or
sbbb
xor
sbb
pushl
in
repz
les
es
aas
lea
push
scas
scas
andl
iret
mov
aad
jb
nop
sbb
mov
dec
out
add
and
inc
repz
add
pushf
adc
cmp
xor
stos
insl
xchg
sub
push
ja
xor
jecxz
add
mov
in
inc
push
mov
jo
jno
ds
lahf
add
add
inc
dec
or
dec
pop
addb
scas
dec
mov
dec
xchg
nop
lods
stc
xor
dec
stos
testl
pop
sbb
popa
lods
inc
lret
ret
mov
inc
jmp
shlb
mov
fstp
icebp
jmp
jno
ss
adc
sub
pusha
test
sub
mov
fwait
ljmp
sub
icebp
scas
push
mov
mov
enter
xor
enter
lods
add
cmc
jns
addb
stos
hlt
mov
xchg
inc
mov
cmp
dec
push
ss
pop
test
jnp
push
fs
in
pop
clc
data16
outsl
mov
lea
pop
pop
push
cmp
push
push
fwait
adc
aaa
cli
pop
pop
mov
iret
mov
mov
dec
or
push
gs
test
int3
pusha
inc
push
cmpsl
lea
test
add
or
test
rorl
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
xchg
imul
jnp
pushf
jnp
in
sar
mov
pop
xchg
stc
adc
mov
ds
xor
stos
jno
and
out
insb
lods
mov
cmpsb
scas
add
pop
pushl
pop
pop
xchg
ret
repnz
pop
xchg
push
in
pop
out
orb
or
sbb
push
in
aad
sti
fmull
stos
das
outsl
jno
std
jg
cwtl
pop
ret
fidivs
lret
stos
dec
jo
jecxz
xor
pop
arpl
adcl
jno
icebp
add
jecxz
jl
mov
jecxz
adc
clc
jl
scas
cltd
push
std
jns
mov
leave
fsubrl
mov
loop
sbb
sbb
mov
stos
cmp
push
jo
or
inc
stos
test
push
jne
mov
movsl
lds
icebp
out
sbb
mov
push
sbb
mov
inc
pusha
mov
mov
sub
repnz
cmp
sub
push
inc
call
mov
movlps
add
push
test
push
add
adc
pop
out
pop
sub
lret
mov
sbb
scas
je
xor
shlb
call
call
and
cmp
pop
aam
fucomp
loopne
adc
cwtl
outsl
inc
popf
mov
mov
jae
outsb
and
ja
mov
mov
or
dec
sbb
dec
inc
lds
rol
or
sub
jae
insl
scas
dec
push
jnp
movsl
mov
fwait
and
dec
data16
xchg
mov
jnp
or
jo
rcll
sub
fwait
cmp
inc
repz
sbb
mov
sub
aas
xor
scas
shrl
out
xchg
std
inc
adc
arpl
mov
sbb
ja
test
into
adc
and
or
lock
shlb
cld
jl
aas
and
fisubl
cmp
hlt
fsubr
pop
out
pop
push
dec
cltd
shlb
fnstsw
mov
sahf
mov
hlt
int3
jns
cs
sub
push
push
xchg
icebp
add
push
jp
dec
lahf
lock
sbb
xor
ljmp
jo
stos
lret
aas
mov
aaa
pop
xor
sbb
outsb
push
cmp
dec
cmp
xlat
leave
add
sbb
es
cmc
cs
mov
leave
outsb
xchg
data16
jg
ljmp
fstpl
lds
xchg
mov
xchg
push
into
stos
pusha
fistps
pusha
out
jp
imul
inc
mov
lods
mov
ja
clc
data16
adc
push
call
ret
cmp
mov
and
push
pop
dec
negb
insb
dec
int3
lea
cs
scas
clc
pop
sbb
push
scas
xchg
xor
sub
mov
pop
cs
mov
gs
jnp
dec
dec
jae
push
pushf
adc
cmc
mov
out
lcall
std
nop
or
jb
jl
pop
mov
dec
cmpsl
in
push
pop
leave
jo
dec
test
adc
lock
push
fisttps
adc
push
outsl
outsl
scas
ja
lahf
cld
out
and
leave
repz
dec
stc
push
fdivr
jge
ret
xchg
rorb
adc
adc
xchg
cmp
xchg
and
icebp
dec
stc
add
sbb
mov
push
dec
dec
add
xchg
loopne
xchg
out
xchg
dec
push
sub
sbb
push
insl
and
ja
lahf
xchg
iret
orb
pop
pop
xor
push
jl
into
add
xlat
mov
dec
mov
cld
repnz
cli
ljmp
loopne
cmp
adc
pop
int
mov
clc
mov
push
cmp
fcmovnb
add
jbe,pn
add
lods
jg
insb
in
mov
adc
mov
loopne
insb
loopne
out
sbb
cmp
jg
push
sub
pop
cwtl
fcmovb
xchg
cmpsl
xchg
out
out
dec
dec
xchg
inc
pop
fdivs
or
out
loop
rcr
jecxz
jo
push
cltd
pop
mov
pop
in
xor
fdivrs
in
cmpsb
add
cltd
jno
add
sbb
mov
or
pop
shl
inc
inc
loope
lcall
mov
enter
das
add
add
bnd
clc
sub
fsubrp
inc
ljmp
dec
into
movsl
pop
test
dec
pop
mov
packsswb
and
add
imul
add
dec
sub
adc
mov
pop
aam
lock
push
fsubl
adc
inc
jnp
xor
out
xchg
out
mov
mov
mov
mov
movsb
out
andl
xor
imull
popa
ret
sbb
inc
loope
dec
sub
pushw
iret
les
bound
mov
push
pop
mov
sbb
or
push
push
pop
push
mov
cmp
or
repz
add
lock
std
inc
out
cmpsb
sub
sbb
fdivrs
stos
test
nop
pop
inc
dec
out
aas
jnp
arpl
imul
in
in
adc
inc
mov
out
loopne
pop
fbld
mov
popf
adc
daa
sub
adc
jo
jge
push
nop
or
push
mov
inc
ret
jle
test
std
sub
pushw
pop
mov
icebp
fsubrs
mov
mov
cld
mov
push
aaa
mov
gs
mov
jg
sti
jecxz
cmp
bound
aad
jns
arpl
sbb
mov
lcall
xor
pop
cmpsl
in
int
es
rolb
clc
xchg
push
outsb
int
je
push
inc
out
repz
mov
loop
cmp
outsl
cmp
xchg
mov
bound
pop
mov
mov
sbb
mov
imul
sub
hlt
cmp
jo
and
push
or
leave
pop
ja
mov
out
sbb
ror
les
pusha
push
xchg
sbbl
dec
lahf
pop
mov
add
adcl
loope
pop
in
faddl
dec
mov
addl
xor
jecxz
cli
fstps
sbbl
inc
fadds
add
ja
mov
cmp
xchg
in
fstps
clc
push
popf
daa
arpl
in
mov
add
dec
xor
pusha
inc
addb
jl
out
cmp
push
push
xorb
or
es
lea
bound
outsb
push
pop
inc
or
push
add
das
sarb
sbb
mov
mov
jge
sarb
das
xor
lcall
add
fisubl
mov
inc
and
ss
lret
cmpsl
sub
gs
pop
mov
lods
jecxz
loop
add
scas
mul
mov
jne
sub
push
push
lock
adc
gs
adc
adc
jge
test
or
or
out
and
jge
push
int3
out
inc
ss
pop
jnp
xchg
mov
mov
push
jle
fdivp
int3
fbld
xor
mov
cmp
xchg
and
inc
stos
jmp
xchg
xchg
mov
inc
mov
mov
jne
cmpsb
cmp
loope
cmp
dec
jb
pop
fdivr
aas
sbb
or
xor
insl
dec
push
mov
cmpsb
rolb
insb
xchg
sub
sti
jmp
cmp
add
loopne
mov
movd
inc
mov
loope
es
mov
aam
mov
sbb
cmpl
adc
test
xchg
sahf
xchg
mov
les
mov
sub
loopne
ja
mov
pushf
lea
dec
loop
lcall
and
jecxz
push
mov
xchg
fbstp
stc
jbe
aaa
pop
mulb
jge
adc
mul
aaa
addl
testb
adc
pop
sarb
les
xor
inc
ljmp
sub
adc
into
out
movl
shrl
jb
jb
in
cmp
push
aam
imul
imul
std
and
adc
adc
pop
inc
fsubr
repz
inc
add
jnp
movsl
lea
cli
push
xor
stc
bound
lahf
pop
ret
mov
out
psrlq
pop
xchg
or
in
test
imul
sub
dec
dec
cmpsl
gs
aad
dec
mov
mov
jne
pop
add
stos
mov
aam
mov
pop
test
ss
xor
mov
adc
xor
out
repnz
js
repnz
mov
dec
pop
mov
mov
std
adc
out
xor
sbb
mov
ds
mov
add
mov
sbb
xchg
pavgb
and
add
mov
ret
pop
add
mov
mov
lods
xchg
std
fstps
xchg
cs
pusha
mov
test
sub
jg
enter
into
arpl
xchg
ret
imul
jmp
movsb
pop
dec
fdivp
or
cmpsl
stos
or
loopne
xchg
loop
aas
inc
daa
stos
pop
imul
lods
push
out
aaa
inc
xor
cli
clc
shlb
js
outsb
push
mov
jns
hlt
rclb
or
pop
negb
push
sub
scas
es
xor
mov
inc
fwait
or
push
ret
mov
dec
dec
cltd
mov
data16
pop
mov
dec
or
sbb
cmp
cwtl
mov
and
sub
int
adc
or
fisubs
and
or
adc
movl
enter
mov
shl
or
xchg
lea
push
xchg
shll
push
xchg
es
pusha
inc
or
stos
inc
leave
adc
lahf
cmpl
rorb
testl
mov
leave
das
out
and
fwait
xchg
outsb
pop
aaa
stc
push
mov
hlt
jno
aad
in
iret
sarb
leave
mov
ffree
add
sub
push
sbb
sub
mov
out
sbb
mov
cli
rorl
fimuls
cld
pop
push
in
adc
and
jg
mov
andb
mov
insb
mov
adc
add
das
out
int
lock
jmp
or
in
test
push
adc
inc
lods
fidivl
sbb
cs
cmc
jmp
mov
std
xchg
pop
add
sti
je
mov
jae
sub
xchg
int
orl
push
ret
jne
mov
adc
sbbb
mov
pmullw
imul
testb
pusha
mov
and
mov
sub
xor
mov
xchg
sahf
push
mov
cld
adc
dec
in
adc
sahf
inc
push
aas
jle
test
pop
leave
sbb
xchg
sarl
add
shlb
cld
lods
add
adc
xchg
add
adcb
xchg
cmp
adc
fidivs
and
mov
lret
ljmp
jl
mov
sub
outsl
jnp
loope
push
lock
mov
xchg
mov
mov
jae
in
lahf
cld
xchg
push
addb
cwtl
cwtl
imul
or
fisubrs
lock
inc
sti
and
cmp
inc
pusha
pop
mov
jo
into
outsb
lahf
std
rcrl
daa
or
mov
hlt
nop
add
xchg
ret
insb
cwtl
or
push
rcr
fnstcw
repz
push
shrb
notb
ja
jns
rcr
dec
sbb
pop
mov
pushf
xor
fbstp
fcoms
adc
pop
icebp
add
shll
je
xchg
push
rclb
jmp
in
ror
xchg
sbb
sbb
out
lds
mov
es
pop
xor
inc
inc
add
and
lret
jnp
test
cmp
sub
stos
cli
xor
xor
add
addr16
or
fwait
mov
inc
shrb
addr16
dec
shll
dec
and
sub
gs
mov
add
pop
mov
dec
stos
outsb
dec
sbb
add
mov
mov
or
adcb
enter
shl
push
in
mov
outsl
or
pop
cmpsb
aaa
or
decb
arpl
mov
mov
dec
aad
in
and
jo
and
cmp
js
addr16
mov
imul
sahf
adc
lods
dec
push
inc
test
jmp
test
jne
mov
xchg
in
je
or
repz
ficomps
jnp
aad
add
pop
xor
imul
jno
or
push
loope
inc
movl
data16
xor
or
fmuls
out
sub
imul
sbb
mov
cmp
lret
jmp
add
push
popa
pop
stos
js
js
popa
push
mov
push
fcmovnbe
inc
cmp
out
lret
repz
hlt
push
and
lock
cwtl
xchg
push
xlat
inc
inc
xchg
push
lods
subb
mov
movsl
cmp
jl
cli
pop
mov
xchg
bound
test
jbe
jle
imul
push
movl
or
jbe
pop
leave
dec
loop
js
xchg
imul
outsl
je
out
outsb
orl
mov
mov
jecxz
test
cmp
sub
jnp
insb
lret
cmp
sar
mov
js
xor
mov
mov
fdivl
inc
pop
xchg
xchg
adc
xor
nop
inc
sti
sub
push
cmpsl
jnp
cld
inc
movsb
jmp
aad
fisubs
jae
aaa
lret
and
popa
xor
loopne
adc
or
adc
pop
cmp
fs
ret
lock
enter
into
jb
fistpll
rcrb
pop
aad
scas
je
es
cmp
fildl
sbbl
fisttps
out
in
inc
mov
outsb
shll
xchg
or
or
push
cmpsl
mov
icebp
xchg
in
fbld
push
mov
sub
jmp
or
jae
outsb
sti
pop
cmp
out
pop
pop
into
push
cltd
pop
mov
imul
xor
sub
jnp
outsl
imul
mov
inc
mov
and
jge
test
and
adc
add
lret
and
mov
gs
add
test
movsl
and
cmp
push
adc
add
pop
ret
jno
cmpsb
fcmove
and
int
pop
call
dec
mov
js
ja
pop
push
cltd
pop
jle
xchg
out
imul
testb
test
std
mov
clc
das
xchg
inc
pushf
incl
mov
mov
inc
test
inc
in
into
sub
test
cmp
js
nop
pop
shrl
sub
adc
ds
in
lea
jle
and
mov
ss
shr
rep
mov
mov
test
pop
lcall
adc
xor
int
mov
cmpsb
ret
cmp
sub
es
and
in
adc
mov
into
push
fistps
sbb
pop
jae
inc
out
ds
jp
lret
scas
mov
push
loop
pop
aam
icebp
jae
or
lea
repnz
test
lods
add
cmp
stos
or
adc
jne
cmp
rcrl
dec
insl
add
test
jge
xor
iret
pop
mov
aas
psllq
and
dec
xor
or
pop
push
cmp
or
js
test
sub
inc
adc
repnz
fadd
push
lahf
add
xor
add
mov
test
aam
cs
push
hlt
insl
jg
pop
aad
mov
jp
call
fiadds
filds
and
nop
pop
xor
or
js
call
ret
or
mov
xchg
mov
nop
xchg
mov
jo
outsb
int
je
push
sbb
in
dec
ja
push
in
std
cld
inc
rcll
add
in
or
nop
or
push
adc
cmp
aaa
cmp
js
test
or
sbb
and
jl
fdivrs
pop
push
cltd
sti
cmp
or
pop
sti
lret
sbb
mov
sti
iret
push
inc
sub
xor
leave
jmp
mov
mov
add
pop
pop
mov
subb
sbb
sub
sub
mov
icebp
push
and
pop
inc
jnp
pop
push
fs
mov
clc
add
lret
fsubr
dec
add
adc
mov
dec
enter
jle
sbb
or
pop
ret
outsb
add
push
outsb
lods
dec
inc
loopne
leave
sbb
outsl
in
fstp
push
das
call
jg
into
loope
xor
ja
inc
inc
mov
jg
dec
aad
push
push
pop
push
in
cltd
movsb
bnd
add
pop
push
cbtw
pushf
dec
jl
fstl
mov
jae
lahf
scas
add
addr16
xor
dec
data16
ret
std
out
inc
loope
inc
mov
pop
mov
sub
jns
popf
fcompl
add
mov
xor
jmp
inc
pop
or
leave
pop
sahf
mov
pusha
or
out
inc
dec
imul
mov
test
mov
and
loop
test
pop
add
dec
aad
ret
fs
inc
fcmovnbe
push
dec
push
loop
jnp
xchg
dec
jno
scas
daa
sahf
push
adc
imul
push
vpmacssww
popf
or
out
mov
das
push
cmp
out
imul
out
jo
arpl
mov
inc
sbb
mov
mov
sub
cmp
hlt
mov
xorl
adc
shlb
cmpsb
cmp
ret
es
or
out
or
sub
pop
sub
mov
movb
mov
lret
pop
mov
clc
xchg
lods
sub
rcrl
repnz
aas
pop
mov
lcall
cmp
mov
je
push
dec
xor
add
lcall
cmc
enter
jle
jle
add
pop
test
and
xor
jecxz
cmp
hlt
or
stos
mov
cmc
pinsrw
test
push
adc
aas
dec
lods
inc
cmpb
mov
xchg
out
mov
xlat
adc
cmp
push
xor
sbb
sub
xchg
cwtl
scas
inc
jecxz
hlt
movsb
fildl
repz
in
pop
xchg
out
dec
outsb
jns
xchg
inc
lret
add
sub
ljmp
mov
aaa
loope
lock
dec
int3
push
and
int3
adc
and
insl
add
add
dec
fstps
xchg
and
pop
adc
fnstenv
push
jno
jg
movsb
xor
push
or
push
sbb
pop
add
mov
js
ljmp
mov
fxch
adc
mov
sbb
jp
movsl
inc
or
cmpsl
call
movb
out
hlt
lahf
mov
mov
test
dec
test
shrl
cmovg
in
inc
repnz
iret
jo
push
xor
into
insl
inc
pop
sub
inc
out
cmpsb
push
int
pop
and
add
and
sti
hlt
xchg
mov
sub
pop
jge
lahf
addr16
fimuls
add
xor
push
mov
mov
inc
je
mov
and
push
push
or
pop
lock
in
and
mov
lret
and
pop
idivl
inc
dec
push
push
outsl
sbb
out
dec
nop
inc
jg
daa
dec
mov
gs
shlb
pop
insl
cmp
daa
fsubs
lea
mov
cld
stc
xchg
int3
mov
cwtl
dec
push
cmpsb
out
push
inc
mov
mov
pcmpgtb
and
js
in
xchg
ja
fcoml
repz
jp
adc
inc
imul
je
and
out
das
loop
nop
loopne
outsl
mov
mov
outsl
pop
add
dec
pop
sbb
frstor
pop
mov
sarb
pusha
add
mov
inc
aaa
arpl
ror
dec
mov
sbb
hlt
xchg
stos
movsl
or
pop
sti
push
loop
pushf
jo
inc
mov
lahf
push
decl
fsubs
inc
jp
mov
insl
leave
loopne
rcll
xchg
adc
cld
push
imul
inc
fdivs
dec
in
xchg
add
push
repz
outsb
shll
mov
ljmp
out
dec
cld
movb
sti
dec
shll
in
and
sarl
data16
mov
xchg
xchg
push
fwait
mov
add
shlb
movsb
fsts
fwait
jle
add
in
adc
fisubrl
dec
std
adc
rorb
in
nop
push
loop
call
xchg
and
rcr
mov
and
loopne
and
aaa
cmpsl
lcall
and
leave
in
lret
in
ljmp
stc
pop
inc
jo
insb
add
test
push
adc
addr16
inc
out
adc
xchg
add
cmp
int
loopne
addb
push
sahf
xchg
push
imul
mov
dec
mov
mov
and
inc
mov
dec
adc
shll
cmp
cmp
sbb
push
out
les
lea
cmp
xlat
flds
nop
push
mov
loope
add
sbb
stos
hlt
xor
xor
imul
xchg
xchg
cld
scas
mov
fwait
pushf
jecxz
mov
xchg
cld
rcll
fisttpll
rorl
lods
mov
ret
mov
xor
push
lcall
insb
push
inc
clc
adc
sub
sbb
clc
scas
jb
lock
mov
dec
xor
movsl
jp
xchg
pop
movsb
aas
push
sbb
mov
sbb
xor
mov
sbbl
mov
mov
in
xchg
addr16
pop
cmc
cmp
cmp
ret
stos
out
popl
shrb
inc
imul
bound
pop
xchg
int
mov
xchg
and
jae
fildl
out
xchg
scas
lods
xchg
jg
sub
push
and
sbb
emms
fwait
dec
call
std
sbb
push
add
hlt
lcall
and
sahf
daa
fldt
ret
rcll
cli
cmp
shrl
dec
dec
lods
sbbb
dec
mov
pop
bound
insb
fcompl
lcall
xchg
jnp
adc
jmp
inc
pushf
jecxz
sbb
dec
sub
into
add
data16
dec
inc
add
push
xor
and
inc
add
cs
or
shll
test
dec
push
mov
call
in
jbe
out
xchg
sub
call
mov
jecxz
and
out
or
lea
aad
mov
lock
cld
jmp
ret
pop
cmp
ss
das
xchg
das
imul
sbb
ja
cmp
mov
in
loop
test
js
jge
jmp
jecxz
pop
sbb
in
mov
inc
fnstsw
sarb
dec
add
fdivrs
call
mov
mov
pop
jns
bound
or
mov
icebp
in
adc
mov
ja
push
jb
das
push
push
mov
test
or
icebp
mov
or
push
fsts
shrl
lods
add
js
sbb
mov
fcompl
cmp
lret
shlb
cmpsb
mov
jb
dec
shl
pushf
loope
out
mov
mov
repz
push
insl
jbe
pinsrw
and
lock
xchg
daa
les
clc
pop
sarl
mov
push
mov
je
mov
gs
movsb
addr16
sbb
pusha
orl
pushf
shl
push
clc
loopne
mov
pop
adc
sti
sub
or
and
mov
push
xchg
cltd
lea
loop
adcl
sub
push
stc
jne
sub
mov
sbb
mov
and
imul
popa
xor
cmc
dec
mov
jmp
ja
imul
repz
pop
inc
lock
mov
movl
cmp
out
and
or
lock
xorl
xchg
sti
std
add
inc
jmp
lcall
and
adc
mov
rclb
bound
sub
xlat
pop
lods
mov
mov
xchg
mov
xchg
mov
popf
outsl
inc
inc
mov
adcb
push
mov
push
mov
xadd
shrb
xchg
imul
sbb
enter
imul
jle
mov
cmp
bound
inc
addr16
push
cltd
or
mov
iret
and
les
adc
sbb
inc
roll
sbb
fsubrp
loop
jnp
insb
loope
mov
scas
in
les
das
clc
inc
scas
xchg
cwtl
adcb
jne
and
mov
xchg
jg
mov
add
mov
cmp
mov
bswap
mov
nop
xchg
pop
sub
lcall
fldcw
addl
bound
inc
or
cmp
inc
or
test
or
push
xchg
push
scas
push
hlt
iret
test
fsub
jo
cli
enter
addr16
test
adc
sbb
push
fidivs
js
add
test
or
mov
imul
test
inc
divb
sbb
xchg
push
data16
js
movsb
dec
popf
push
jns
out
mov
movb
xor
xchg
jne
clc
testb
fcomps
aad
jno
and
push
outsb
mov
mov
or
push
sbb
les
add
mov
dec
mov
notrack
leave
and
mov
lock
sarb
hlt
mov
jns
push
mov
cltd
mov
js
addb
inc
xchg
or
cwtl
and
jbe
mov
cmp
stos
xor
cmpsb
sub
inc
and
mov
push
xor
rclb
cli
cli
icebp
add
int
and
ffree
mov
xor
inc
mov
or
stc
jmp
fsubl
pop
sub
shl
push
pop
push
test
int
adc
jecxz
push
jo
scas
sar
jo
cmp
lea
popa
mov
shll
aad
into
or
sbb
xor
push
repnz
push
adc
fsqrt
inc
ret
add
rcrl
mov
pop
mov
inc
jns
mov
jge
sub
ret
sub
mov
push
jge
enter
mov
rcl
dec
mov
test
cmp
add
pop
pop
mov
xlat
dec
mov
in
mov
ror
adc
sbb
repnz
jge
mov
adc
mov
mov
dec
repnz
fwait
jae
or
fnstenv
cmpsb
lds
jle
fdivrl
mov
rcrb
int
mov
mov
into
lock
add
call
lods
add
add
loope
pop
push
mov
loopne
inc
mov
test
and
stos
popa
rcrl
dec
imul
mov
icebp
ror
lea
aaa
jecxz
mov
push
sbb
sub
daa
lretw
aaa
lret
mov
fwait
push
add
jmp
pop
push
add
xchg
dec
sahf
cmp
ljmp
test
mov
shl
arpl
imul
test
nop
test
lock
xchg
and
xchg
xorb
or
add
idivl
jp
aaa
aaa
cmpsb
lods
subl
cmpsl
je
ss
cmp
jns
out
arpl
scas
hlt
jne
out
scas
mov
insb
cmp
jae
xor
stos
nop
mov
shrb
je
or
jl
int3
push
jnp
sahf
adc
mov
add
stos
mov
inc
sub
xchg
lods
mov
mov
dec
cli
bswap
scas
lea
dec
lcall
psrlw
and
outsb
inc
add
std
out
lcall
and
mov
xchg
add
movsl
push
xchg
xchg
xchg
fiaddl
out
outsb
xlat
test
rolb
add
xor
inc
xchg
pop
mov
push
jb
push
aas
test
loop
mov
lods
mov
sub
divb
lods
leave
jno
stos
sub
jo
xor
addr16
xor
movsl
cltd
rol
xor
sbb
sti
sahf
or
cmp
sbb
sub
repz
pop
and
les
jae
rorb
mov
dec
leave
pop
xchg
push
mov
shlb
insb
jno
and
add
dec
or
fidivrs
mov
outsb
xor
insl
shrl
cmc
mov
das
mov
mov
pop
cmp
fdiv
jp
std
mov
insb
lods
dec
xchg
out
mov
xchg
jmp
and
negl
sbb
mov
imul
lods
mov
mov
adc
loope
cmp
pop
fsub
test
stos
ds
cmp
ja
and
das
cmp
out
ret
and
xor
mov
jae
mov
aas
sti
jbe
repnz
inc
sbb
test
fwait
cli
and
jmp
aaa
xor
fbstp
push
mov
fisttps
push
add
or
mov
stos
mov
loop
repz
adc
adc
jnp
xor
lahf
movsb
and
enter
inc
lcall
aad
cld
jae
stos
int
ret
sahf
xchg
inc
pop
repnz
xchg
dec
jnp
mov
sub
cmp
cmp
fistpll
pusha
pop
outsb
pop
xchg
mov
jne
movsb
add
mov
mov
mov
addr16
lcall
adc
nop
and
test
xchg
xchg
mov
int3
stos
adc
sti
js
mov
rcll
test
cmp
sub
mov
inc
lods
add
cmc
pop
inc
jns
mov
mov
addb
pop
je
and
mov
testl
aaa
jle,pn
gs
cli
xor
mov
mov
daa
cmpsl
mov
dec
push
push
decb
fs
push
xor
push
shrl
xor
out
stos
divps
add
jge
inc
adc
or
xchg
jae
pop
and
xchg
inc
std
outsb
leave
popf
mov
movsl
rcll
jp
pop
or
out
cmp
andps
leave
sub
mov
lahf
xchg
sub
mov
mov
stc
push
sub
push
fbld
sub
or
cltd
inc
int
mov
daa
scas
lret
loope
adc
push
imul
push
add
xchg
jge
or
add
insb
int3
shlb
ja
adc
xchg
fs
push
jne
jecxz
rorl
arpl
add
xchg
std
mov
in
jns
popa
dec
xchg
pop
into
jo
xchg
scas
insb
push
xchg
pop
sub
jg
gs
outsb
stos
mov
stc
adcl
call
stc
loop
cmpsl
pop
adc
xchg
out
xchg
in
fs
pop
mov
out
in
test
adc
rorb
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
loopne
ljmp
jnp
pop
movsl
mov
aas
cltd
fcompl
pop
jle
push
stos
scas
cs
jl
xchg
stc
repz
lret
loop
lods
pop
lret
nop
rcr
push
sti
lcall
lods
mov
jmp
push
lods
lods
push
and
test
ja
lret
out
ds
mov
stos
mov
jge
and
push
cmp
xchg
enter
aas
and
push
cltd
inc
mov
xchg
outsl
mov
and
xor
adcb
or
imul
pushf
xchg
xchg
mov
adc
imul
pop
adc
jg
sarb
xor
sub
lret
repz
inc
dec
mov
push
xchg
pop
loopne
test
add
and
push
xchg
out
shrb
mov
xchg
xor
cmp
inc
imul
mov
push
stc
xchg
xor
mov
mov
add
cmp
and
fisubs
cwtl
xor
subb
out
sbb
jg
sbb
imul
sbbb
xchg
and
mov
dec
add
inc
in
push
stos
and
jae
or
add
xchg
in
adc
mov
cmc
clc
in
les
lock
add
mov
add
enter
add
stos
in
cmp
nop
push
inc
pop
js
test
inc
lds
push
fdivrp
mov
loopne
int3
mov
push
push
movsb
lods
xor
pop
sbb
xchg
adc
pop
cmp
sarl
fcmove
push
es
add
pop
fwait
inc
pop
mov
loopne
mov
ret
repnz
aam
inc
push
adcl
jno
cmc
cmpsb
leave
push
cmp
jne,pt
call
imul
mov
cmp
cld
cmpsl
stos
popa
fldenv
lret
xor
pop
sbb
imul
ljmpw
inc
pop
iret
hlt
aad
repz
and
jl
sbb
mov
or
mov
dec
cli
scas
movsb
les
shr
adc
leave
mov
sti
and
jnp
mov
push
out
nop
mov
mov
data16
sbb
fisttpl
scas
mov
jo
dec
jl
mov
imul
cs
jns
sahf
stc
flds
bound
insl
ds
adc
std
inc
repz
adc
add
mov
insl
pop
aad
mov
bswap
add
mov
test
mov
fdivl
mov
lods
outsb
mov
ss
mov
cmp
push
gs
and
or
push
xchg
cmc
lret
fwait
jl
shlb
mov
popa
jo
pop
cmp
imul
cld
mov
popf
in
out
cwtl
push
jae
ror
enter
hlt
jle
push
push
mov
cmp
xchg
adc
push
loopne
loopne
movsl
adc
cmp
xchg
push
push
cmc
jg
mov
mov
add
push
movsl
sahf
mov
jl
int
loopne
lcall
ret
and
stos
xor
or
addl
push
xchg
push
cld
jnp
cltd
gs
inc
adcb
outsl
popa
and
call
jno
push
movq
xor
in
mov
cmp
add
fisubrs
aad
sbb
or
pushf
mov
xchg
ljmp
stos
adc
jnp
mov
add
jle
fldcw
adcl
out
cltd
and
xor
hlt
fsubrl
mov
mov
pop
and
out
cmp
ljmp
adc
std
lds
xchg
sbb
sbb
test
stos
aaa
mov
xorl
adc
jmp
push
dec
mov
mov
fwait
push
adc
je
jbe
das
push
xor
mov
push
pop
jbe
adc
pop
ud1
push
stos
jl
icebp
or
popf
int
in
daa
xchg
mov
call
jmp
fmull
mov
dec
sbb
mov
les
pop
dec
scas
mov
xor
inc
sbb
daa
cmp
rolb
or
mov
mov
add
push
popa
int3
and
mov
inc
sbb
pop
inc
sbb
mov
add
sbb
in
aas
adc
jae
int3
jnp
fadds
push
xor
push
jge
lds
and
dec
ret
insl
cmp
and
or
jmp
test
mov
push
pop
out
sbb
pop
mov
xchg
adc
cli
sahf
lock
fdivrs
cmpsb
ljmp
adc
es
sbb
popa
fs
xchg
cltd
negl
push
test
adc
mov
adc
outsl
je
mov
jg
loopne
lahf
pop
imul
xchg
cs
push
scas
inc
dec
leave
jbe
sub
test
push
into
jnp
fstps
xor
adc
inc
xlat
cmp
cs
add
into
mov
ss
pop
push
xor
ds
pop
ret
cmp
mov
sbb
lods
test
call
sbb
push
cmc
push
jp
cmpl
fst
sub
das
popf
mov
js
cmp
test
sub
inc
dec
outsl
out
cmpsb
movsl
push
cmpsb
pop
push
cmp
and
popf
call
mov
in
pop
out
hlt
aas
enter
lods
mov
popa
xchg
mov
lea
sbb
sar
ficoms
cmp
movsl
outsb
sbb
and
shlb
jmp
dec
jecxz
rorl
push
mov
xchg
mov
arpl
jecxz
fmull
sub
mov
rcrl
ss
pop
or
push
xor
mov
cmp
ret
out
push
inc
xchg
gs
mov
mov
out
jno
sbb
mov
and
mov
into
neg
dec
stos
push
mov
mov
arpl
jge
pushf
sub
push
jno
dec
jae
adc
pop
out
ret
jno
ficoms
in
movsb
mov
sub
ljmp
jl
xor
jecxz
push
push
cmc
push
sub
mov
dec
ret
in
mov
mov
xchg
push
lock
mov
test
push
test
lret
lea
mov
cmp
xor
cmp
out
test
cmc
aas
daa
lahf
xor
xchg
test
push
scas
mov
rcrl
ljmp
push
cmp
and
mov
call
adcl
cmp
fs
jo
pop
dec
add
cmp
ret
mov
cmp
test
xor
subb
stos
subb
lods
push
mov
mov
adc
imull
fwait
mov
lea
popf
jg
insl
ljmp
push
adcl
pop
and
les
in
pop
cmp
mov
icebp
xchg
mov
popa
pusha
or
and
jbe
xor
aam
and
mov
cltd
sbb
cmp
adc
lods
or
push
sbb
imul
stc
cmp
out
sar
dec
insb
sahf
xor
popa
sub
rcr
repnz
popa
mov
mov
xor
cld
loop
fs
mov
fistl
mov
dec
sbb
fwait
cmp
adc
xlat
fnstenv
fucomip
xchg
cmp
lea
jecxz
pushf
loop
xorb
iret
test
ds
mov
jp
jge
pop
cli
pushf
mov
jno
insl
cld
sbb
std
sar
sub
or
push
mov
mov
outsb
mov
inc
lea
daa
dec
xchg
data16
lds
test
mov
ret
mov
xchg
inc
cmp
or
fsubl
fsubrs
or
pop
add
lret
insb
imul
pop
notl
out
mov
clc
outsl
push
xor
sub
arpl
je
lahf
push
and
jmp
push
mov
xor
inc
add
add
push
call
fbstp
les
mov
rorb
inc
mov
jnp
aas
bound
and
fwait
xlat
dec
or
gs
lcall
popa
pandn
jle
lret
pop
jb
popa
addr16
loop
jg
mov
mov
jo
add
mov
jns
movsb
inc
add
inc
adc
mov
ds
mov
cmc
loopne
iret
sbb
dec
pop
clc
fiaddl
sbb
inc
mov
lods
data16
lods
test
cltd
push
daa
dec
lret
or
inc
subl
mov
xchg
mov
mov
push
sbb
test
les
pusha
outsl
jg
jae
mov
dec
adc
adc
shlb
sbb
popa
adc
xchg
mov
rol
sub
pushf
mov
fdivs
push
pop
sub
scas
dec
sub
xor
inc
xchg
adc
inc
aad
pushf
testl
inc
push
iret
movsl
mov
inc
lds
bound
pop
stos
pop
jp
mov
scas
xchg
xchg
jns
fildll
lods
mov
into
stc
dec
pop
mov
and
mov
loop
cmp
shll
outsb
imul
mov
cli
jl
int3
jno
cmc
pop
sbb
stos
outsb
push
loop
mov
mov
in
jmp
bound
mov
cmpb
push
pop
xchg
or
fdivs
add
pop
or
lea
and
cli
enter
clc
jo
mov
loopne
add
lds
aad
cmp
fsts
lahf
jo
pop
loopne
mov
xor
inc
sbb
push
jne
inc
movsl
sbb
mov
cltd
and
int
into
xchg
inc
cmp
insl
je
jae
movl
stos
adc
push
pusha
xchg
push
adc
push
push
add
jnp
lock
adc
sarb
out
mov
mov
dec
mov
pop
sbb
cwtl
lock
fiaddl
daa
sub
or
imul
adc
dec
push
cwtl
or
cwtl
cltd
mov
inc
test
push
mov
movsb
pop
repnz
ljmp
and
pop
xor
enter
aas
pop
out
rcrb
inc
push
rcl
push
mov
out
fbld
jnp
xchg
mov
in
xor
subl
dec
andl
xor
leave
fistl
sti
jp
inc
pop
and
push
imul
mov
xchg
int
stos
mov
fbld
and
mov
jne
out
clc
push
cs
in
sbb
sbb
pop
and
jbe
ficomps
cmpsl
and
jae
sbb
inc
push
dec
inc
adc
jae
aad
jp
and
add
je
sub
ret
cli
or
fildl
aam
jg
jmp
les
jecxz
inc
pop
enter
add
and
push
test
je
sbb
popa
dec
cmp
mov
pop
xchg
xchg
inc
jg
jge
push
mov
jno
call
push
inc
push
ret
test
jno
adc
in
mov
or
repz
jmp
das
xchg
daa
xchg
mov
xor
loope
push
ret
icebp
cmp
iret
jb
push
cvtdq2ps
cld
outsl
jbe
ffreep
cmp
xor
jns
mov
loope
cwtl
aam
in
in
ja
jge
push
mov
repnz
test
sbb
hlt
sub
adc
or
push
mov
mov
pop
push
stos
lea
mov
movsb
push
xlat
es
xchg
stos
sahf
hlt
or
jno
mov
lds
add
rcr
push
stc
jnp
cwtl
push
mov
xchg
outsl
push
call
stc
and
mov
stos
sub
xchg
loope
test
jmp
lock
and
in
and
int3
mov
pop
add
icebp
lret
xchg
adc
or
mov
jge
insl
dec
mov
ret
shlb
push
adc
or
xchg
stos
mov
mov
sbbl
push
mov
push
hlt
mov
cmc
int3
xor
mov
sbb
cmp
aam
roll
xlat
xchg
xchg
out
fnsave
cmp
pushf
pop
gs
xor
adc
mov
negb
sbb
int
call
and
pop
inc
clc
pop
das
mov
divb
jmp
dec
pop
nop
out
sub
icebp
call
lds
enter
adc
mov
popa
xchg
out
push
xor
push
mov
adc
fs
sbb
inc
inc
inc
adc
addl
sbb
scas
and
pop
fisubrs
inc
add
lods
xchg
push
es
dec
mov
int3
jg
lock
mov
clc
pop
mov
fisubl
push
je
repz
sbb
jns
idivb
or
jp
test
push
dec
inc
jbe
fsubl
pop
dec
addr16
mov
test
xchg
ret
sbb
xchg
mov
xor
clc
inc
lret
pop
movsb
sbb
test
add
add
push
push
cmp
sub
mov
and
imul
fwait
add
sbb
call
xchg
sub
fstpl
or
repnz
mov
out
dec
cli
sbb
outsl
hlt
test
mov
or
idivb
shrb
cmp
jecxz
and
outsb
sub
push
bound
in
mov
stos
push
negb
or
in
pop
inc
jge
inc
aaa
jns
les
adc
mov
imul
iret
lahf
jp
repz
in
mov
loopne
or
adc
pop
ljmp
lods
add
mov
cmp
test
add
es
scas
or
adc
xor
pop
inc
fcomip
mov
movsb
pop
testb
iret
add
inc
leave
cmp
es
xor
sti
push
mov
test
mov
clc
jns
hlt
aam
rcll
dec
in
cmc
xlat
mov
daa
inc
cli
push
aam
inc
or
jne
pop
sahf
ss
dec
sub
lahf
lcall
adcb
mov
push
inc
scas
int3
pop
or
xor
pop
mov
ljmp
mov
lahf
aad
mov
mov
mov
mov
dec
inc
jne
or
mov
fwait
jmp
xlat
xchg
cs
add
and
aam
sahf
sahf
outsl
mov
adc
stc
ret
jae
in
and
cmp
mov
jns
mov
pop
add
daa
mov
js
pushf
test
adc
push
dec
addr16
adc
xor
outsb
ds
push
mov
push
jmp
jle
cli
xchg
push
repz
int
outsl
pop
addr16
cmpsb
xchg
and
pop
stc
adc
lods
jbe
fadd
cmp
mov
push
adc
adc
push
cmpl
push
sbb
push
out
popa
jns
dec
loopne
into
mov
in
push
cmp
sti
fldenv
or
xchg
adc
cwtl
pop
movsl
xor
jae
imul
inc
cmp
push
ret
stos
fbstp
inc
inc
popw
xor
mov
jno
lds
or
ret
stc
sbb
jmp
mov
mov
orb
cmpsl
je
andl
enter
dec
jle
lahf
daa
sub
dec
jno
scas
stc
jecxz
and
subb
imul
dec
inc
pop
push
pop
inc
jmp
comiss
icebp
lahf
lret
stos
mov
loope
cltd
sbb
hlt
sub
cld
aad
stc
push
push
adc
sahf
mov
int
lods
sub
jecxz
inc
leave
nop
lds
outsl
xor
xor
inc
fnstcw
mov
not
cwtl
inc
push
xor
push
inc
sbb
aad
cmc
jp
fbstp
aad
lods
inc
hlt
push
pop
fwait
mov
jmp
sbb
sbb
loop
mov
shlb
cmp
xor
mov
cmp
jb
ds
movsb
xchg
enter
popf
imul
call
lods
push
xor
arpl
dec
scas
sbbb
dec
in
dec
inc
cmp
mov
dec
out
int3
mov
test
jecxz
dec
xlat
mov
jecxz
xchg
cltd
lahf
dec
lock
inc
mov
popa
imul
mov
xor
xchg
out
pop
fstpt
xor
mov
data16
loop
inc
stc
lret
mov
cmp
dec
mov
dec
pop
aaa
and
test
idivb
pop
cs
gs
mov
shrl
aaa
sub
popa
sub
mov
xlat
xchg
loop
add
and
xchg
cmp
rcrl
std
std
stos
jle
mov
mov
mov
push
sbb
dec
xchg
jbe
pop
outsb
fidivrl
or
lock
popf
push
push
mov
pop
mov
pop
cwtl
jg
test
in
dec
ljmp
cmp
sbb
ljmp
add
js
add
imul
cld
pop
adc
mov
sarl
pop
adc
sbb
pop
adc
fldt
adc
dec
icebp
push
lock
push
adc
add
mov
push
ljmp
f2xm1
jle
popa
and
mov
jmp
adc
stos
inc
rcll
cmp
adcl
mov
xor
popf
addb
fwait
lret
imul
aad
test
testb
pop
je
cwtl
cmc
ret
gs
orb
ror
pop
jnp
or
adc
and
sbb
js
jle
push
out
rorb
and
out
repnz
lahf
imul
add
stc
adc
sub
sub
push
cmpsl
js
cld
hlt
cld
fbstp
insl
mov
mov
inc
push
scas
icebp
addr16
xor
inc
xchg
std
mov
sti
dec
inc
and
jg
scas
sub
dec
pop
hlt
cltd
enter
jb
mov
xchg
cs
sub
xor
je
jns
ja
dec
sbb
jmp
jb
lea
mov
push
jmp
mov
in
adc
xchg
rcr
or
sbb
popf
push
and
xchg
test
and
xor
adc
jg
mov
pop
mov
data16
ljmp
mov
bound
bound
inc
dec
cmp
adc
cmp
pop
pusha
fistps
mov
jo
jge
outsl
inc
cmc
loopne
cmp
dec
lds
xchg
mov
stos
push
ss
push
iret
adc
adc
andb
pop
and
xchg
jl
push
xchg
add
mov
sbb
in
sub
sbb
add
push
add
sbb
cwtl
fimuls
out
xchg
xchg
or
fwait
pushf
mov
and
adc
and
cmp
nop
push
or
jp
push
ljmp
jno
push
testl
ret
sub
jae
sub
cmpsb
inc
fdivrl
sub
pop
hlt
adc
cmc
cmp
push
add
dec
add
mov
push
sbb
adc
and
and
jo
scas
ds
jmp
jne
fistpll
test
sbbl
lret
inc
repz
sub
lods
sahf
stos
cld
int3
stc
lock
and
and
pop
xchg
jnp
aad
add
add
fimull
xchg
pop
mov
push
inc
je
cld
cmp
dec
pop
jno
push
pop
push
xor
add
test
inc
and
popf
jno
push
xchg
mov
adc
sbb
and
inc
xor
pop
mov
dec
aas
jnp
test
bound
xor
leave
cmp
rcr
mov
dec
xorb
jle
push
into
jecxz
ret
aas
mov
hlt
fisubs
cli
jns
mov
ret
xchg
popa
push
cwtl
insl
push
sbb
cmp
repz
mov
sbb
mov
pusha
fs
in
lods
xchg
fwait
xor
test
prefetcht0
clc
jbe
jno
imul
adc
mov
movsb
insb
adc
push
enter
cmp
pop
inc
in
shrb
jmp
loopne
loop
loope
inc
inc
inc
and
arpl
pop
pop
push
ja
lea
adc
es
fcmovne
sbb
push
sub
pop
cmpsl
inc
xchg
adc
adc
fsubrp
lds
testb
mov
in
sub
dec
mov
mov
push
jg
rcl
add
add
add
push
mov
out
push
les
or
ret
std
adc
push
dec
sbb
cld
push
xchg
mov
je
push
out
cltd
mov
sub
adc
sbb
in
fstpt
das
stc
inc
lea
push
sub
inc
sub
movsl
fildl
cmc
out
mov
clc
repnz
test
imul
dec
cmp
dec
jae
lds
inc
inc
cmp
fstl
inc
sbb
mov
fnsave
jne
call
sbbl
inc
xchg
sti
icebp
call
or
aas
insb
push
sub
jb
pop
mov
sbb
fnsave
pop
sahf
in
ret
pop
inc
inc
mov
xchg
arpl
xchg
test
movsl
frstor
push
dec
pop
pop
sahf
rclb
aas
or
mov
mov
mulb
xchg
inc
sub
jge
outsb
std
pop
mov
jge
adc
and
mov
jge
jae
bnd
mov
test
inc
adc
push
adc
mov
lods
jbe
push
jae
inc
shr
shrl
imul
lea
xchg
dec
pop
mov
mov
or
lea
subb
data16
popa
insl
movq
and
aad
dec
lret
fisubrs
insl
fisttpll
fs
mov
dec
jne
insb
jb
rcll
sub
jns
add
or
add
lret
add
inc
fstpl
aad
or
ficomps
or
insl
add
lods
clc
sub
es
cmp
cmp
pop
adc
imul
pop
out
js
test
mov
jne
jne
and
or
push
inc
adc
loope
push
pushf
push
out
and
mov
frstor
pop
call
pop
ljmp
dec
in
loope
and
in
lock
push
imul
adc
int3
pop
test
xchg
repz
push
je
pop
mov
mov
mov
or
mov
and
or
dec
insl
sahf
mov
insb
scas
push
mov
mov
jbe
mov
icebp
ds
jmp
insl
movsb
mov
negb
cmpsl
jp
aaa
and
jns
stc
shll
mov
stos
sahf
int3
lds
scas
scas
aaa
xchg
lahf
popa
ljmp
push
cwtl
in
push
mov
xchg
into
fldenv
andl
inc
xchg
jnp
rolb
push
xorl
inc
roll
jg
add
or
lahf
ljmp
adc
dec
out
pushl
cmp
inc
jns
loop
pop
sbb
add
lds
lds
scas
mov
icebp
aaa
jae
xor
sbb
or
mov
cmp
mov
adc
mov
push
mov
inc
inc
dec
mov
stc
lods
cmpsl
andl
push
push
lcall
hlt
out
adc
jbe
lret
mov
popf
shl
cmpb
rolb
inc
dec
sbb
push
fidivs
mov
jbe
dec
mov
cmp
cmpsl
pop
lods
das
inc
jb
or
loope
xor
jne
xchg
jg
cmc
sti
arpl
leave
adc
cmp
lods
pushf
xchg
fs
push
test
mov
fdivr
mov
add
push
adc
icebp
test
and
pop
mov
mov
lret
dec
sbb
ss
out
sbbb
fstpt
push
cmp
push
loop
add
add
sub
or
pop
stc
es
cmpsl
jp
int3
sub
std
test
stc
mov
push
sub
sti
aas
ljmp
jmp
jbe
sbb
pop
arpl
pop
aam
repz
into
xchg
add
nop
insb
fs
clc
pop
sbb
inc
in
push
ljmp
pop
inc
cmc
scas
fldcw
xchg
adc
push
in
lds
xlat
xchg
mov
in
or
and
sub
mov
jl
push
es
cwtl
jp
inc
adc
push
xor
sub
mov
sahf
mov
out
xor
adc
xor
or
in
mov
pusha
add
xchg
add
div
cli
push
jae
pop
inc
dec
pop
add
addr16
daa
ret
or
es
adc
push
cmp
fisttpll
test
outsl
pusha
adc
mov
mov
in
cli
adc
in
inc
mov
push
dec
mov
loop
lcall
jbe
test
dec
stos
jns
inc
sub
or
dec
insb
cmc
das
ficompl
stos
shll
neg
and
xchg
and
enter
insb
dec
push
cltd
push
mov
adc
mov
push
jns
loope
into
sti
orb
cmc
lcall
cmp
fldt
fisubrl
ret
stc
push
lret
push
movsl
and
pop
ret
in
bound
lods
push
jge
or
outsl
vmovsldup
scas
sti
testl
xchg
test
inc
xor
loop
int3
sbb
push
pusha
out
sbb
sbb
scas
scas
aam
fwait
das
sbb
cs
adcl
imul
shrb
mov
iret
aad
das
jmp
cmpsl
push
xor
mov
aam
inc
mov
dec
fistl
push
dec
dec
shld
subb
and
push
or
psubsb
and
add
mov
pop
lea
es
jge
insb
mov
mov
sub
std
pop
in
aam
fbstp
cmpsb
out
push
aas
pop
adc
mov
jl
mov
stc
and
decl
push
adc
inc
pop
and
rcl
pop
pop
pop
cmp
fldt
pop
ljmp
or
pop
lret
iret
adc
imul
xchg
shlb
xor
dec
and
mov
or
ja
cmp
or
dec
scas
cmp
repz
cmpsb
mov
jmp
adc
mov
push
pop
pop
ret
aaa
push
mov
in
lcall
inc
mov
sub
jge
jecxz
and
cli
or
sarb
pushf
test
aaa
mov
popf
dec
jmp
insb
jecxz
pop
arpl
leave
push
sub
pop
jle
das
div
or
jb
lahf
popa
neg
ja
dec
into
push
jo
cld
lret
pop
pushf
adcb
mov
out
inc
ret
out
push
cmp
lahf
arpl
xor
loope
aad
shrb
ss
push
ljmp
add
xchg
adc
mov
mov
push
mov
movsb
test
mov
aaa
outsb
mov
out
dec
sub
pop
adc
xchg
dec
jno
adc
inc
fucomp
je
bound
cwtl
jae
loop,pt
sbb
pop
imul
scas
enter
xchg
bound
mov
xchg
ret
cmp
cmpsw
push
mov
insl
xlat
push
mov
rcrb
sub
push
push
xor
fdivs
sbb
dec
sbb
mov
mov
cmpsb
jns
dec
or
rol
dec
sbb
nop
repz
sub
cmpsl
xchg
or
jl
in
out
push
sub
dec
xor
es
lahf
cmp
adc
cmpsb
sbb
call
xchg
jb
jne
mov
inc
and
sbb
imul
jbe
inc
jo
lock
cmp
lods
std
jmp
popf
pop
xchg
dec
push
cmpsl
sbb
add
push
jne
enter
pop
call
push
fs
stos
pusha
fs
shlb
xchg
jb,pt
jp
sbb
sbb
fstpl
sbb
xchg
fildl
mov
mov
xchg
and
lds
ljmp
mov
nop
cmp
xchg
lods
out
mov
pop
pop
jbe
cmp
addl
mov
outsb
cwtl
mov
jns
dec
les
push
sub
popf
and
arpl
mov
ret
addr16
or
inc
or
popf
ficoml
adc
fidivl
ret
subl
cmc
sarl
sbb
inc
in
arpl
shll
cmpsl
stos
fdivs
lahf
cld
mov
out
mov
and
mov
loope
jl
imul
outsl
sbb
movsl
outsl
fldcw
lahf
fimull
rorb
mov
adc
add
mov
imul
adc
jp
sti
ss
lds
and
out
push
stos
bound
leave
testb
mov
jmp
dec
std
ljmp
lcall
jns,pt
cmp
out
clc
cwtl
xchg
jmp
and
dec
loop
mov
xchg
pusha
xchg
or
rcll
ror
or
ljmp
sbb
movsb
mov
into
mov
inc
insl
mov
or
jne
aas
dec
sahf
pop
jg
lea
sub
jnp
jnp
icebp
push
repz
mov
xor
push
fcomps
inc
adc
xchg
mov
cld
dec
push
dec
rcrb
jecxz
add
rolb
mov
xchg
aad
mov
mov
mov
dec
xor
pop
adc
cmc
mov
out
mov
dec
add
and
cmp
in
ljmp
xchg
mov
popa
xchg
js
mov
aad
scas
push
pop
adc
inc
fisttpll
xor
pop
dec
xor
ljmp
popf
or
mov
mov
cmp
and
xchg
jmp
push
cmp
gs
push
mov
call
fiadds
adc
mov
in
aam
ret
sub
sbb
testl
cli
inc
divl
ret
mov
js
pop
mov
jne
adcb
adc
dec
cwtl
mov
cwtl
test
mov
sbb
sahf
sbb
sub
outsl
mov
mov
stos
or
xor
dec
mov
push
cmp
mov
or
aad
in
insb
dec
nop
lret
jb
repz
xchg
inc
test
sub
pop
xchg
subl
ljmp
jmp
movsb
mov
outsl
lret
rorl
notl
push
in
or
in
pop
sub
jmp
xor
mov
cmp
inc
dec
das
int3
mov
stc
loope
sub
mov
jl
mov
adc
adc
stos
fisubs
movb
out
pushf
pop
jns
xor
and
ljmp
insl
stos
sbbl
es
xor
and
cs
scas
cvtps2pd
pop
daa
cmp
xchg
xchg
pusha
negb
xor
adcl
fisttps
xchg
push
jge
cmc
mov
jp
push
adc
in
sbbl
in
inc
jge
cmp
mov
xchg
test
fidivrl
mulb
repnz
mov
adc
mov
add
fsubs
mov
std
mov
push
adc
mov
pop
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
cltd
fiadds
pushf
jnp
dec
push
cltd
ds
call
fldt
jmp
sbb
scas
stc
xor
dec
test
sub
fisttps
ss
jp
fidivl
xchg
jne
dec
ds
test
in
ret
fdiv
mov
mov
sub
jne
jnp
in
fisubs
outsb
xchg
mov
call
pop
jbe
push
adc
leave
ja
ret
ss
mov
xchg
jae
ja
lds
mov
fwait
movsl
movsb
mov
cmp
pop
or
inc
jb
movsb
outsb
xchg
nop
mov
pop
mov
je
repz
stos
aam
fst
push
pop
jmp
out
imul
fiaddl
out
mov
call
and
scas
dec
aam
addr16
mov
and
xchg
loope
into
mov
mov
in
dec
adcl
add
and
fiaddl
or
fcompl
iret
adc
cmp
inc
dec
outsb
popa
sbb
js
push
inc
push
faddl
outsl
rcrl
push
mov
sahf
or
dec
stos
xchg
lock
leave
daa
jno
daa
fdivs
sahf
xchg
in
dec
dec
dec
pop
out
test
lods
out
int
add
mov
xor
bound
mov
lods
imul
or
mov
xchg
test
cmp
enter
mov
arpl
stos
lahf
dec
sbb
jns
leave
mov
in
jns
xchg
add
clc
ss
jg
cmp
cmp
test
insl
push
lea
bnd
mov
bound
pushfw
cwtl
popa
cli
rolb
or
mov
hlt
std
stos
lea
out
adc
inc
mov
mov
bound
or
ret
lret
test
cltd
arpl
call
cmp
or
ret
mov
sub
mov
pushf
cmpsl
xorl
or
inc
push
inc
aam
xor
xchg
dec
xchg
js
or
call
shl
or
sbb
inc
mov
outsl
mov
mov
jne
pushf
jmp
add
add
sbb
nop
jb
movsl
xor
popa
imul
mov
loop
and
dec
loope
in
enter
out
push
dec
mov
insb
mov
xchg
jne
in
xor
adc
mov
add
jg
or
sub
xor
jne
inc
cmp
pop
and
push
push
iret
aas
test
xor
shll
rolb
sub
add
dec
xchg
xor
fmuls
push
or
je
pop
mov
push
or
mov
cmp
in
xchg
mov
pushf
sub
xor
cmpsl
adc
sarb
lods
movb
sbb
mov
adc
pop
shrl
cmpsl
and
dec
add
inc
ja
sarl
sub
mov
pop
pop
arpl
jnp
pushf
aad
add
notl
add
out
cmp
test
imul
jecxz
add
pop
jmp
out
jb
push
jo
sub
call
adc
mov
mov
or
sti
xor
pop
xorb
xchg
add
sub
loop
lds
adc
out
adc
pushf
rorb
jno
rcrl
cmc
aad
sbb
jp
pop
in
stos
nop
es
nop
adc
bound
mov
cmp
lods
sbb
pop
jmp
xor
pop
jge
inc
rcl
in
sub
add
jbe
add
scas
push
in
int
xchg
xor
jmp
adc
mov
inc
ficomps
xchg
test
out
push
mov
pusha
mov
inc
mov
test
fsubs
test
adc
mov
js
add
mov
mov
aaa
xor
fidivs
lahf
cmpl
fwait
loopne
fs
jp
mov
push
mov
pop
popa
xor
out
and
outsl
adc
js
divl
in
pop
pop
sbb
scas
jne
lcall
out
jb
mov
push
jb
and
push
arpl
lret
dec
dec
sbb
adc
pop
mov
dec
mov
cli
in
push
les
stos
out
lret
add
lea
push
aas
cmp
push
and
mov
dec
loopne
push
neg
mov
bound
das
outsb
add
repz
xor
sbbb
mov
pop
sub
cmp
or
mov
mov
in
jae
push
dec
sub
lcall
out
mov
adc
and
ret
sbb
ds
push
lods
es
les
jmp
or
test
push
or
dec
lahf
jo
in
jae
daa
in
pop
out
mov
stc
fdivrl
sahf
stc
out
aam
test
adc
pushf
mov
jnp
cmpsl
and
fs
out
and
xchg
push
cmp
mov
lods
mov
cmp
adc
je
pop
sti
and
aaa
rorl
dec
inc
cs
push
subb
fnstsw
mov
test
cld
mov
fdivrl
dec
stos
cmp
mov
imul
lret
cmp
push
jo
cmp
pop
push
imulb
push
adc
arpl
dec
ret
sbb
ja
jbe
or
add
gs
mov
movl
sub
dec
mov
lret
test
daa
cmp
leave
cli
adc
or
cltd
scas
sahf
lds
mov
sbb
push
or
out
leave
andl
mov
aaa
mov
and
xchg
xor
mov
sahf
cmp
pop
fstpl
inc
out
nop
add
dec
dec
pop
xchg
insb
sbb
jnp
es
aam
and
xchg
xchg
pop
jmp
mov
scas
and
out
push
jnp
out
xchg
push
pushf
aaa
jl
xor
push
popa
sahf
dec
in
or
push
mov
adc
int
pop
fcmovnb
shrb
or
mov
xor
xor
loope
cmpsl
mov
xchg
pusha
mov
xor
push
push
adc
xchg
dec
and
addr16
or
das
jae
outsl
fnstsw
lods
fdivrp
dec
xchg
cltd
add
ss
pop
and
lcall
jae
lcall
addr16
cmp
sbb
sbb
arpl
out
stc
sub
shlb
out
jne
shl
jnp
ss
stc
ss
cwtl
dec
mov
test
xchg
xchg
xor
push
pop
mov
mov
dec
leave
scas
adc
sbb
out
rol
jmp
cmp
and
push
enter
xchg
and
das
xor
ljmp
push
mov
mov
pop
fmuls
push
ljmp
int
stos
test
xor
loop
mov
push
pop
testl
dec
and
and
fiadds
and
mov
fisubrs
mov
mov
and
adc
test
inc
pop
mov
mov
pmullw
xchg
push
mov
or
cwtl
sbb
push
and
and
dec
cmp
or
xor
rcrb
sub
pop
hlt
cmp
movsb
xchg
push
inc
cmp
dec
xlat
js
stc
mov
xchg
sti
sub
jg
insl
push
cmpl
enter
xchg
jecxz
add
pop
pop
cmp
inc
and
das
ss
jns
jo
pop
mov
pop
out
leave
sub
mov
test
fbld
mov
std
fnstcw
cmp
mov
testl
pop
jb
stos
xchg
mov
sbb
je
cwtl
out
sub
lods
mov
test
insb
pop
gs
sub
push
pop
pop
mov
divl
lcall
into
jecxz
xchg
pxor
pop
adc
imul
gs
push
ret
sub
jo
arpl
sti
je
add
adc
jmp
adc
mov
jbe
sub
fimull
cld
sarb
mov
xchg
push
testb
jge
add
dec
xor
add
adc
sub
adc
fwait
mov
lea
inc
push
pushl
add
xchg
leave
mov
negb
call
or
stc
test
inc
fcompl
leave
jae
inc
icebp
xchg
mov
jecxz
fwait
jb
lods
idivl
pop
lea
mov
fadds
pusha
xor
lret
push
movsb
hlt
sbb
mov
imul
outsb
mov
xlat
and
jp
mov
and
push
and
push
push
pop
jg
int
sub
scas
sub
daa
es
sbb
jl
insb
nop
push
xor
jmp
movd
jnp
add
movsb
cltd
lock
pop
test
push
dec
add
push
and
js
inc
pop
jns
inc
lea
jg
jae
fs
sbbl
and
test
push
das
je
sub
roll
push
arpl
pop
jno
in
sbb
leave
hlt
test
je
push
adc
test
repnz
xchg
and
aaa
mov
subb
fstpl
mov
jl
test
push
sbbb
sbb
xorl
sbb
fwait
fimull
mov
test
xchg
or
or
outsb
lret
pop
mov
cmc
and
insl
or
icebp
mov
dec
add
loopne
jecxz
push
jb
ffreep
dec
js
bound
push
dec
inc
add
xchg
test
mov
mov
xchg
bound
push
mov
jno
fmulp
xchg
pop
and
mov
lahf
outsb
xor
xor
jb
imul
enter
popf
fcmovb
cmc
fdivrs
cmp
sub
arpl
addr16
data16
sbb
out
push
or
push
std
mov
inc
repz
adc
xchg
clc
xlat
ss
idivb
inc
rcrl
je
icebp
mov
lods
insl
pop
xor
and
lods
cmp
scas
test
cmc
dec
mov
mov
inc
inc
xchg
je
mov
push
sbb
lods
cmp
xor
xchg
jo
inc
outsb
frstpm(287
add
arpl
mov
add
add
in
outsb
jo
and
stos
fidivl
push
xor
adc
cmpb
pop
cwtl
and
clc
inc
fnsetpm(287
int
je
add
fs
ja
xchg
in
dec
iret
or
div
mov
inc
pop
movsl
mov
lods
mov
stos
jnp
popf
pop
add
or
push
nop
test
and
push
or
loop
lret
and
scas
fsincos
jl
mov
mov
lret
loop
inc
pop
addr16
xchg
and
call
loopne
stc
fucom
sub
cmp
inc
pusha
and
sbb
xchg
dec
lds
ss
jb
add
jecxz
test
fs
mov
pop
lock
and
push
test
cmp
cs
mov
fistpl
into
cmp
orl
or
inc
dec
push
adc
outsb
test
cwtl
test
adc
es
push
xchg
push
loope
inc
mov
pop
enter
loope
clc
xlat
pop
pop
and
mov
cmpsb
dec
rolb
lret
roll
sub
movl
bound
and
dec
mov
or
lods
lret
pop
jnp
outsl
aas
jecxz
and
out
loopne
test
out
gs
lods
shl
mov
lahf
pop
addl
add
add
add
fldenv
add
sbb
stos
test
sahf
cld
mov
stos
push
psubsb
sbb
sub
jbe,pt
loop
mov
icebp
pop
jnp
jg
ja
movsl
push
out
repnz
dec
and
push
sbb
outsl
sarl
adc
in
lods
xor
scas
outsl
or
sub
pusha
xor
push
mov
xchg
push
adc
jl
push
cmp
pusha
lods
xchg
push
inc
push
fchs
pop
mov
mov
imul
pop
pop
push
sub
test
sub
xor
push
fs
add
es
and
cmpsl
gs
dec
push
pop
sbb
in
icebp
sbb
in
pop
push
clc
dec
sbb
int3
pop
rcll
sti
push
and
sub
cltd
sub
das
pop
add
jbe
mov
add
repnz
adcb
jmp
gs
dec
push
mov
and
inc
test
mov
cwtl
orl
xchg
push
lret
mov
shlb
aas
push
inc
fsubrs
cmp
sbb
mov
mov
jnp
stos
outsb
data16
outsl
cmpb
push
xor
aam
mov
pop
out
cld
sub
inc
mov
mov
mov
push
lods
aam
ficoms
xor
repnz
int3
das
mov
bound
and
xchg
das
sub
repnz
or
es
mov
orb
or
push
pushf
or
adc
mov
mov
data16
idivb
sbb
cld
mov
mov
mov
cwtl
xchg
jne
repz
mov
jne
push
pushf
jns
jnp
dec
cmp
sbb
jmp
jae
ffree
int3
fidivs
jge
outsb
fidivl
mov
jns
test
shrl
sbb
arpl
sub
repnz
mov
call
mov
inc
xlat
shll
outsl
cmpsl
jb
or
out
dec
test
fldt
cltd
daa
inc
and
xor
push
jecxz
subl
sarl
mov
insl
in
jecxz
jmp
lcall
cltd
lock
ret
dec
enter
sti
outsl
cld
or
imul
pushf
shlb
mov
ja
js
cs
jmp
cmp
pop
jne
out
movsb
test
insl
out
ljmp
jnp
adc
cwtl
lcall
pushf
fdivs
jo
cmp
pop
dec
sbb
daa
cs
mov
jmp
out
push
push
fcomps
out
mov
dec
in
lock
mov
xor
jae
addb
fwait
fs
inc
arpl
lock
cs
clc
dec
stos
addr16
xor
push
add
or
lcall
inc
ljmp
leave
stos
sub
add
pop
mov
xor
clc
lea
sti
dec
xchg
int3
es
sub
cwtl
dec
or
pop
add
cmp
ja
pop
pop
mov
data16
xor
mov
mov
mov
aaa
fadds
cwtl
icebp
mov
pop
inc
daa
in
pop
dec
aaa
jecxz
inc
mov
sahf
inc
ljmp
outsb
mov
int3
call
mov
int
push
loop
loop
mov
inc
mov
sbb
lds
jl
mov
outsl
lds
mov
add
push
inc
cwtl
outsl
push
jmp
inc
iret
imul
js
or
repz
enter
push
mov
add
fdivrs
sub
mov
jae
add
inc
push
pop
lea
push
pusha
dec
out
jge
test
fstps
lods
flds
aas
pop
popf
leave
pop
push
inc
add
aad
cld
cmpsl
mov
shl
mov
add
out
dec
sub
icebp
ret
mov
insb
insl
pop
leave
aad
or
loop
out
add
idivl
shrb
adc
inc
mov
xor
lcall
add
add
mov
insb
pushf
gs
dec
mov
jno
mov
cs
and
movb
mov
cltd
add
shlb
test
jo
ret
shlb
and
pop
fcomps
xor
jnp
mov
mov
xlat
cmp
test
adc
mov
scas
sbb
js
les
mov
icebp
xor
mov
cmp
popf
je
mov
repz
stos
mov
sub
into
pop
push
xchg
inc
xor
stc
fcmovu
jne
dec
lret
adc
inc
push
sub
aam
fmull
xchg
or
cmp
call
mov
ret
fimuls
aas
mov
mov
sub
jnp
stos
in
orb
xchg
push
data16
pusha
mov
pop
cmc
popl
or
out
adc
mov
in
add
sub
xlat
movlps
dec
int
ja
xchg
loop
cmc
lahf
sub
lock
scas
and
arpl
lahf
aaa
imul
ljmp
pop
int3
ja
mov
cmp
lret
sbb
xchg
out
mov
mov
inc
push
xor
pop
test
push
pop
jno
lcall
xchg
out
out
imul
in
sbb
mov
cmpsb
lock
lcall
inc
inc
push
pop
cmp
ss
js
aad
mov
mov
xchg
sub
jbe
divl
inc
stos
inc
jl,pt
add
pop
pop
jno
les
sti
aaa
xchg
scas
xchg
dec
stos
inc
sarb
push
lock
decl
jg
jnp
sahf
inc
in
inc
pop
add
dec
push
fwait
pop
int
push
cmp
xor
fsubrp
cmp
fcomp
pop
push
inc
inc
dec
and
jge
jg
add
push
jp
fsubrl
mov
pop
pushf
js
mov
orb
push
sahf
xor
lcall
call
das
insl
adc
in
ljmp
int3
test
test
popl
add
push
cmc
rclb
std
inc
shr
xchg
insl
jp
fdivrs
pop
pusha
jae
pop
jle
out
lcall
out
aad
int3
mov
xchg
aad
es
imul
dec
in
test
fucomp
dec
ds
and
shr
cmpsl
imul
jb
jmp
jp
out
leave
stos
push
pop
cmp
les
hlt
pushf
inc
xchg
imul
push
aaa
lcall
push
mov
inc
ss
sub
mov
icebp
add
add
mov
orb
lret
mov
scas
xchg
shlb
gs
in
fbstp
cltd
insb
mov
xor
cmp
push
aas
dec
stos
repnz
mov
ja
jecxz
cli
mov
mov
sub
sub
gs
xchg
or
fadd
pop
insb
jns
or
fisttpll
xor
push
lock
leave
inc
cli
xchg
jge
xchg
dec
push
fcoml
popa
mov
pop
int
sbb
mov
lret
frstor
loope
jne
ds
xchg
icebp
jnp
lds
hlt
loopne
xchg
hlt
outsb
test
adc
push
xchg
test
das
das
adc
pop
repz
fnsave
pop
ret
pop
mov
repz
inc
cmp
xlat
test
outsb
inc
je
pop
adc
add
pusha
adc
push
jns
test
jb
add
fwait
das
les
jecxz
sbb
mov
jl
adc
inc
iret
imul
cmp
inc
inc
fs
add
ss
xchg
out
nop
sbb
sti
push
push
popa
xlat
jg
jnp
out
jge
xor
mov
popa
outsb
imul
fsubl
pop
add
or
push
inc
adc
imul
mov
pop
sti
es
int
add
inc
adc
dec
cmpsb
or
sti
xorl
mov
add
dec
jl
shlb
rcll
jne
test
sbb
and
mov
sub
mov
ret
repnz
mov
test
cltd
dec
out
mov
or
inc
cmpsl
inc
push
cltd
push
dec
jmp
mov
mov
xor
mov
insb
mov
mov
mov
and
push
or
mov
and
jp
mov
or
dec
pop
xor
addr16
jp
fwait
sbb
inc
mov
cltd
inc
mov
push
movsb
das
leave
dec
out
pop
popf
sbb
pop
jns
xchg
dec
sbb
imul
jg
negl
in
inc
loope
or
popa
std
mov
or
inc
ror
sbb
cmp
addr16
clc
icebp
lods
testl
loopne
dec
or
divl
xor
arpl
xchg
mov
cmp
jb
adc
sbb
sub
mov
test
mov
add
jmp
leave
adc
aam
je
out
or
cmpsl
outsl
pop
mov
xchg
mov
sbb
jo
dec
or
mov
mov
fs
shrb
and
mov
or
xor
mov
cwtl
pusha
ficomps
sarl
into
into
lods
andl
sar
rorl
test
cs
scas
pop
add
pop
dec
mov
filds
dec
inc
insb
repnz
ds
and
push
shlb
imull
sub
ss
add
bound
pop
nopl
mov
jae
out
sbb
sbb
xor
cwtl
sub
sub
lds
jmp
loope
push
push
scas
and
insb
mov
xor
pop
add
mov
test
nop
icebp
imul
mov
jne
jge
loop
and
movsl
jecxz
inc
cmpsb
push
adc
xchg
aas
pushf
outsb
sub
or
dec
push
push
add
fstpt
call
or
loope
into
jge
jns
movsl
icebp
imul
fsubs
sub
lret
addr16
subl
mov
xchg
sbb
xor
out
gs
imul
repnz
xor
xchg
dec
scas
aas
jge
inc
inc
repnz
bound
imul
adc
repnz
dec
fidivs
je
jno
adc
mov
mov
xchg
sbb
xor
popa
xchg
pop
pusha
mulb
push
ss
cmpsl
gs
mov
lods
pop
and
or
fcomi
mov
cld
loope,pt
jns
rcr
sub
out
fwait
cmp
or
sbb
mov
cmp
xor
in
out
push
mov
out
push
mov
push
aam
mov
into
int
rclb
leave
repz
imul
and
mov
ret
pop
test
push
pop
test
push
cmp
push
inc
adc
cmp
mov
xor
pop
std
leave
push
mov
xor
inc
inc
pop
int
stos
sub
test
call
icebp
and
adc
outsl
fistpl
pop
mov
xchg
lret
pop
push
repz
idivb
es
jo
fcomp
in
lods
ja
mov
movsl
push
shll
xchg
pop
push
stc
inc
adc
pop
and
lods
inc
push
mov
add
push
mov
stc
inc
repnz
addb
xchg
adc
loope
or
cmp
jno
xchg
jmp
push
pop
fwait
inc
xor
cld
bound
push
cmp
std
or
sbb
nop
cwtl
mov
fistpll
mov
mov
fs
adc
adc
pop
data16
lock
push
xchg
push
push
mov
enter
in
add
mov
aad
sub
ja
es
inc
sbb
xchg
cltd
jle
mov
lret
out
cmp
push
mov
inc
dec
jae
jge
gs
loopne
leave
ja
ficoml
jecxz
rolb
dec
pop
jl
ret
inc
and
inc
test
mov
push
mov
mov
fsubrs
ljmp
adc
movsl
cmp
loope
add
stos
lea
pop
mov
in
xchg
std
or
cmp
push
mov
repnz
adc
xchg
ds
xlat
or
jecxz
jecxz
hlt
push
dec
cmp
dec
aam
pop
xchg
push
xor
lea
jmp
leave
xchg
pop
out
jns
inc
rorb
lcall
xlat
js
in
cli
mov
gs
inc
sarb
stos
xor
cmpsl
repnz
push
pop
lahf
jge
fadds
inc
pop
loope
lret
jo
push
xor
xlat
xlat
mov
mov
insl
adc
mov
cmp
mov
add
inc
sbb
fwait
xchg
js
push
mulb
aaa
lods
stc
insl
clc
loopne
xchg
xor
test
inc
or
inc
test
fcomps
push
repnz
mov
mov
push
fsts
fcom
jle
lods
jg
in
mov
push
ret
and
cmpb
xor
or
sub
mov
insb
stos
or
lods
xchg
or
rep
pop
gs
push
xor
pop
mov
inc
mov
scas
movsl
mov
lcall
xchg
loop
addr16
ret
jp
sbb
fistpll
jb
and
das
in
dec
mov
adc
inc
mov
mov
stos
popa
pop
dec
cmp
scas
add
mov
imul
in
aaa
data16
add
push
shrl
pop
xor
pop
rorl
adc
jnp
sti
cmp
aas
mov
imul
adc
loop
cmp
add
mull
mov
int3
mov
jns
fdivp
ljmp
mov
lods
adc
fwait
imul
cmp
mov
mov
push
push
ss
sub
fldlg2
jecxz
pop
xor
mov
mov
in
cmp
pop
pandn
sub
ret
inc
inc
jnp
lcall
sbb
push
sbb
mov
or
fadds
xchg
xchg
repnz
push
cs
leave
mov
mov
mov
push
cwtl
outsb
outsl
jno
pop
nop
add
cmp
jns
inc
push
fbld
andb
icebp
sub
xor
fwait
ss
dec
lea
orb
sbb
pop
aaa
scas
cmp
ljmp
xchg
pusha
pushf
and
scas
or
pop
pop
cmp
mov
and
mov
inc
stos
push
in
sub
mov
cmpsl
cwtl
sahf
test
aas
fistl
adc
and
jb
jne
inc
daa
shll
fcmovne
xchg
std
test
ljmp
nop
cmp
push
aaa
dec
adc
out
cli
xlat
or
jl
ss
xor
dec
sti
push
dec
dec
sub
xchg
nop
fildll
pusha
mov
in
xchg
pop
jl
int3
adc
or
call
xchg
mov
mov
sbb
sub
imul
push
pop
mov
pop
jo
cmp
in
push
cmp
push
je
and
jmp
xor
sbb
in
aas
adc
leave
mov
mov
test
lods
xor
mov
fucomip
sub
shll
push
pusha
xchg
cmp
xor
and
mov
jns
fidivrl
xchg
mov
cmp
pusha
sarl
add
pop
pushf
ret
lds
mov
mov
call
pop
and
enter
adc
dec
mov
xor
jle
xchg
fs
push
fidivl
xor
andl
clc
xor
ja
jnp
xor
popa
lcall
jp
xor
cld
rolb
pop
xor
ficoms
stos
jle
pushf
rclb
aaa
cs
mov
mov
icebp
lret
in
mov
mov
fmul
movsl
add
ret
push
or
lds
ds
pusha
sbb
pusha
add
loopne
or
insb
sbbb
mov
mov
scas
pop
mov
sbb
or
testb
ljmp
lods
sahf
or
add
xlat
fstp
sbb
std
aam
test
scas
incb
mov
or
inc
push
push
ret
jb
mov
adc
pusha
xorb
iret
xchg
repnz
sub
pop
sub
int3
ret
into
push
lock
pop
fmuls
aas
or
add
fwait
sbb
xor
enter
xor
scas
pushf
ficoml
jae
push
in
repz
jb
cld
ficoml
outsb
mov
xchg
enter
inc
adc
out
jo
mov
test
scas
fs
pop
scas
data16
int3
xor
jb
clc
fmuls
movsl
sbb
pop
jbe
and
adc
fwait
into
imul
int3
xor
lods
xchg
imul
maxps
mov
adc
or
or
adc
cmp
jle
push
jnp
fst
mov
nop
mov
push
sbbl
in
mov
sub
arpl
cli
fldenv
adc
push
sbb
pop
sbb
xchg
test
gs
or
lds
jo
mov
jp
push
test
lods
inc
and
popf
sbb
add
addb
cltd
lods
pop
cmp
insb
lods
add
jge
xchg
pop
cmp
inc
out
push
jo
aas
jb
ja
pop
jmp
popa
sahf
cmp
jmp
nop
xor
sbb
mov
loop
lods
insb
pop
leave
jo
mov
xchg
fldenv
mov
into
xor
adc
movsl
or
das
jmp
adc
ja
jns
popf
aad
imul
stos
movsb
pop
jecxz
inc
scas
out
mov
ret
testl
arpl
out
adc
and
les
dec
xchg
push
add
xchg
pop
xchg
rorb
mov
jns
in
loope
ljmp
js
repz
in
pop
lahf
xchg
out
js
and
sbb
movsl
cli
pop
mov
xorb
xchg
lods
les
clc
repnz
xor
repz
in
xor
ror
ljmp
pop
adc
pop
movsb
test
popa
shrl
xorl
cmp
sahf
leave
push
repz
cmp
jae
popf
pop
test
add
ds
ss
leave
ljmp
clc
push
jo
jnp
stc
sub
nop
mov
mov
sahf
adc
call
into
popa
mov
aas
xor
sahf
push
xor
dec
hlt
loopne
imul
inc
mov
dec
rep
js
or
cmp
adc
int3
or
dec
sbb
lret
mov
rcll
test
push
lret
pop
jno
ret
mov
cwtl
rcl
call
sbb
ja
sub
xor
aad
dec
sbb
xlat
shll
scas
dec
aam
xor
pusha
cld
std
add
rolb
gs
add
shrb
rcrb
lret
mov
sahf
lcall
test
jmp
dec
popf
cmpsl
lock
js
pushl
mov
cmp
cli
adc
and
test
icebp
out
in
cmpsl
test
sbb
and
or
xor
jl
addl
jp
jle
jbe
in
xchg
xor
std
popf
loop
in
js
popa
cmc
adc
and
imul
jle
leave
aam
sbb
imul
xor
cmpsb
push
xor
dec
jmp
jne
xchg
mov
jns
out
fmull
int3
push
pop
pop
push
xchg
fucomp
stos
popa
sub
pusha
or
lcall
outsl
xchg
xor
dec
xlat
rcll
out
in
inc
and
call
xor
mov
negb
xor
jl
fnstcw
add
mov
fildl
es
hlt
nop
adc
jnp
xchg
popf
or
mov
scas
pushf
pop
cmpsb
jl
cli
jns
mov
or
jge
data16
mov
cmp
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
and
clc
sbb
jnp
clc
pushf
jnp
adc
cmc
lret
inc
mov
or
jmp
xlat
and
xor
add
ja
cmpsb
mov
inc
push
lock
mov
ss
dec
pop
mov
stc
mov
loop
xchg
aad
push
inc
sbb
push
cmp
out
fs
lods
dec
inc
push
xor
jle
rcr
inc
repnz
xor
data16
sub
fs
loop
xchg
jne
push
add
aas
rcrb
add
movsl
pusha
mov
jle
fistl
pop
xor
aam
xor
dec
int
cmp
sub
mov
lods
pop
push
lahf
add
leave
mov
cmp
sahf
lea
fdivrl
popa
push
push
sahf
lds
xchg
cmpsb
mov
mul
lcall
fiaddl
inc
cwtl
push
adc
in
sub
mov
ret
adc
xor
bound
lcall
mov
mov
inc
cmp
jl
mov
scas
test
cmpsb
icebp
push
push
sub
imul
outsb
and
mov
popf
inc
inc
or
dec
push
sbb
fcomp
cmp
push
cli
mov
sbb
inc
cmp
mov
out
jge
dec
xchg
jp
mov
sub
jae
jmp
sub
adc
out
je
daa
mov
pop
clc
add
adc
jge
xlat
int3
adc
dec
test
adc
repnz
fistl
out
mov
push
xlat
xchg
scas
sub
test
mov
cmp
cmp
je
aaa
and
pushf
aad
iret
dec
imul
inc
test
shrb
sbb
jmp
lret
push
and
mov
jo
cmpsl
outsb
fsubr
mov
xchg
stc
mov
nop
push
outsb
mov
icebp
fldenv
out
dec
and
adc
xor
xchg
roll
subl
mov
sti
nop
sbb
push
clc
fldl
mov
bound
loop,pn
xchg
push
imul
popf
mov
js
jbe
sub
adc
lret
fisubrs
daa
dec
sub
jb
and
test
push
add
out
adc
ja
lock
mov
in
pop
xchg
imul
clc
pop
xchg
cmpb
pop
or
lret
test
jns
insb
adc
fisubrl
iret
jbe,pn
cmp
mov
data16
insb
mov
dec
fldcw
cltd
cmc
dec
jecxz
fmuls
test
inc
pop
mov
dec
out
aad
lock
jl
sub
aaa
and
rcrl
popa
inc
jnp
popf
andl
jg
out
mov
stos
sbb
jmp
pop
jns
loope
push
xchg
fisubs
out
cmp
fsubs
pop
jb
jge
movsb
test
out
inc
mov
lods
inc
sub
sarl
inc
mov
stos
xchg
fmulp
pop
mov
xor
adc
push
push
jmp
or
fs
mov
stc
pop
mov
and
cmc
or
insl
idiv
jno
sub
inc
pop
cmp
imul
mov
pop
sarl
mov
stos
jno
adcl
jb
cmc
lea
mov
or
inc
pop
or
popa
lret
mov
ret
mov
ss
xchg
or
lods
insb
jg
out
dec
add
leave
pop
imul
jo
movsl
jmp
sarl
mov
gs
in
lds
scas
sbb
push
jp
scas
fidivrs
mov
lods
loop
cwtl
fcoml
out
push
scas
or
inc
std
and
adc
ss
mov
int3
mov
sbb
jne
les
imul
repz
int
test
fcoms
inc
mov
or
jmp
imul
adc
add
sub
icebp
mov
sub
mov
fisubl
movsl
movsb
xchg
pop
pusha
int3
push
jle
repz
js
pop
mov
jne
fwait
scas
jo
pop
out
aad
jbe
and
jno
push
movsb
cs
xchg
or
cmp
std
cmp
mov
insl
leave
push
sub
fs
adc
jge
mov
push
xor
mov
mov
outsb
repz
jecxz
icebp
inc
out
jnp
add
inc
ret
pushf
mov
sbb
pop
cmpsl
sub
int
lret
push
dec
ljmp
sbb
and
lock
shr
sub
push
fimull
fcmovne
cmp
dec
cmpsl
sbb
adc
inc
pop
pop
dec
test
xchg
mov
imul
mov
inc
loopne
das
jo
lods
insl
cmp
sbb
sahf
jns
pop
jnp
aaa
pop
je
andb
xchg
subl
out
mov
pop
cmpsb
out
test
scas
pop
loop
cs
sti
ret
or
xchg
sbb
xorl
mov
cld
scas
or
xchg
cmp
lret
pushl
add
mov
mov
xor
mov
mov
andb
jns
xor
ja
mov
cmpsb
fwait
paddusw
out
add
cmp
dec
or
insl
inc
insb
inc
mov
adc
mov
outsl
pop
gs
sar
xor
iret
inc
xor
call
hlt
mov
outsb
adc
jg
xor
and
stc
cmp
push
loopne
jns
out
fistps
insl
jl
xchg
or
pop
sub
or
fiaddl
xor
enter
push
inc
fs
test
mov
jo
pop
addr16
mov
pop
popf
jns
data16
out
pop
adc
ss
jp
push
jno
out
xchg
dec
mov
int
jge
or
dec
call
sub
in
test
bound
cmc
inc
adc
add
adc
das
stos
jb
scas
stos
or
sti
loop
fwait
sub
sbb
dec
in
inc
aas
ss
pushl
pop
cmpsb
dec
fwait
cltd
mov
ret
mov
sti
incb
test
sub
mov
loop
mov
inc
xchg
insl
lds
mov
pop
f2xm1
or
out
frndint
xlat
movl
imul
mov
pop
mov
js
push
jle
adc
xor
out
jno
aad
sub
xchg
cwtl
push
lea
mov
jge
add
in
divb
mov
xor
fists
jp
cmp
pop
mov
ljmp
gs
idivl
xchg
cld
les
sbb
sub
jle
pop
fwait
std
mov
push
pop
pop
out
xchg
inc
vprotb
dec
adc
test
movsb
sub
xor
push
fwait
dec
sbb
ja
mov
lods
jecxz
lret
testb
mov
pop
cli
xchg
popa
jl
adc
lret
cld
mov
xchg
data16
jnp
enter
push
jae
loopne
insl
mov
out
sbb
xchg
aad
mov
mov
int3
push
and
pushl
sti
fsts
rol
mov
addr16
sbb
mov
jbe
stos
rcrb
push
cmp
sub
jno
jo
fs
mov
xchg
pop
inc
test
jp
dec
imul
sub
shl
inc
outsl
packsswb
sahf
pushf
insb
imul
outsb
mov
mov
and
push
sub
shrl
adc
outsb
test
out
dec
lods
push
test
and
add
cmpsl
pop
jnp
addr16
cmp
insb
shrb
mov
arpl
mov
add
incl
lock
mov
test
test
mov
fyl2x
pop
add
fs
mov
imul
pop
cmp
dec
sub
notl
repnz
xor
sub
adc
out
aam
into
test
or
outsb
movsl
jnp
lods
int3
orb
pop
jnp,pt
lret
jns
in
mov
in
loope
in
jb
xchg
sbb
mov
shlb
sti
push
in
pop
jmp
in
nop
add
jne
ljmp
ficoml
xchg
xor
pushf
mov
ret
repz
mov
cmp
dec
shlb
fdivl
and
in
cmp
jle
push
jne
daa
aas
mov
pop
and
subb
xor
inc
movsb
sahf
cmp
add
mov
lcall
setns
insl
mov
rcrl
mov
mov
mov
sbb
out
xlat
popf
gs
mov
cmp
pop
gs
adc
inc
xlat
fcmovnu
sbb
push
insl
sti
imul
fimuls
mov
out
or
data16
in
push
test
repnz
push
adc
sbb
cmp
jmp
mov
rorl
scas
jp
ljmp
clc
pusha
mov
or
icebp
mov
pop
lock
rcrl
hlt
mov
daa
aas
adc
shll
out
aaa
stc
sub
scas
std
fcoms
push
scas
gs
jns
bound
inc
xor
imul
ljmp
xor
out
jno
mov
xchg
adc
stos
push
jo
rcll
scas
sbb
and
pop
sub
mov
adc
lcall
inc
lcall
xchg
jo
ss
dec
addl
cli
popf
je
cltd
adc
fdivl
call
ljmp
push
inc
add
scas
mov
loop
jne
daa
xlat
push
cmp
and
scas
cs
xchg
dec
mov
pop
push
or
sub
cmp
ja
pop
mov
pop
loope
and
movsl
arpl
mov
cli
jo
clc
cmc
jne
js
fisttpl
addr16
in
pop
repnz
mov
push
imul
push
fchs
insl
int3
out
js
shll
cld
mov
mov
int3
add
sbb
xchg
mov
xchg
mov
xlat
xchg
sub
and
ret
push
pop
jecxz
sti
sbb
test
cmc
mov
adc
fsub
ja
shl
xor
xor
and
xor
fs
sbbl
movntq
bound
pop
fsubr
cs
push
outsb
sbb
jno
sbb
adc
ds
push
test
xor
xor
pusha
orl
inc
mov
adc
clc
push
mov
or
pop
adc
call
mov
fwait
mov
fwait
pop
test
mov
insb
push
mov
pushf
cli
sahf
pushf
stos
xor
das
mov
lods
and
mov
clc
jae
shlb
jne
lds
mov
mov
lret
faddl
push
cli
cmp
fcompl
xlat
fwait
je
lret
pushf
sub
je
aaa
js
pop
stos
xchg
or
loopne
mov
pop
test
sbb
cmp
mov
adc
adcl
pusha
das
mov
cmp
dec
jnp
add
xchg
in
mov
mulb
mov
adc
sbbb
push
pop
mov
sbb
adc
xor
dec
loope
ret
adcl
cld
mov
rolb
inc
adc
dec
mov
jge
adc
adc
or
lods
test
ljmp
leave
cmc
loop
enter
pop
and
xor
in
out
sub
mov
lret
cmp
clc
inc
sarl
sti
sub
ret
mov
pop
jle
arpl
js
add
xchg
inc
pop
dec
call
inc
mov
or
mov
mov
dec
sbb
orb
ret
sbb
iret
fldcw
pop
ss
xor
out
roll
fimuls
mov
test
and
insl
bound
cmp
movsl
cltd
or
xchg
dec
lahf
lcall
imull
cmp
ja
push
out
adc
mov
xlat
mov
mov
cld
fbstp
ret
xchg
dec
pop
stc
fmull
in
pop
push
add
stos
push
add
xor
mov
pop
dec
mov
sarl
loope
push
ljmp
rcll
cmp
add
jbe
ret
mov
adc
cmp
scas
iret
cmp
push
mov
clc
inc
mov
sbb
dec
ds
js
jmp
enter
inc
test
dec
es
lods
cwtl
ret
jmp
mov
add
dec
imul
std
cmp
push
pop
inc
test
test
xchg
push
push
cmc
mov
add
jb
data16
push
rclb
push
xor
das
mov
xchg
adc
stos
mov
push
mov
mov
dec
insl
pop
sub
andl
addl
aaa
mov
or
mov
fldl
ret
add
dec
in
fsubl
xchg
lahf
push
adc
push
aaa
inc
cmpsb
enter
pushf
ret
push
or
jbe
sub
cmp
and
out
lea
lds
lea
sub
inc
and
xchg
sahf
scas
inc
sbb
out
jmp
std
stc
push
lahf
adc
lcall
sub
hlt
mov
add
loopne
mov
ja
sub
adc
sbb
xchg
pop
ds
imul
add
lods
or
mov
les
push
mov
push
int3
push
test
or
flds
jne
call
mov
xchg
or
add
pop
or
xor
cmp
in
inc
jle
testl
mov
mov
sub
xchg
xor
cmp
hlt
inc
movsl
mov
sub
add
je
sahf
jp
fcmovnb
and
jo
fsubrs
or
pop
mov
inc
in
jp
jo
jp
clc
cmp
adc
cmc
push
cs
loop
jne
hlt
push
out
mov
or
pop
xor
insl
sbb
fnstenv
rol
into
push
inc
cwtl
repnz
dec
lea
fsubrp
add
subb
add
add
mov
mov
in
and
push
aas
adc
sub
mov
push
ficoms
xlat
jns
mov
cmpb
repz
rol
xor
fildll
pop
orb
and
cwtl
xor
gs
cmpb
adc
aam
jbe
and
fnstcw
movsl
jbe
jns
test
aam
xor
lret
out
ss
lcall
shrl
jo
jae
movsl
jecxz
xchg
push
xchg
add
push
ja
fisttpl
lret
lret
je
mov
mov
pop
pop
sbb
addr16
ja
dec
in
dec
jno
test
sbb
push
cmp
xor
icebp
or
mov
test
push
mov
lea
xchg
iret
or
rcrb
je
loopne
or
pushf
into
jo
or
sbb
xlat
mov
add
push
sub
dec
repnz
lods
pushf
cmpsb
adc
add
lods
icebp
insb
fcmovb
in
adc
pop
sub
ret
pop
daa
out
test
fidivl
ss
xchg
push
xchg
out
out
stc
in
sbb
frstpm(287
je
leave
or
mov
aam
in
test
add
xchg
sbb
jle
jbe
loop
roll
add
and
add
int
fldl
xchg
and
les
add
test
jmp
mov
inc
and
orb
add
adc
fucomip
jb
xchg
sub
xchg
fs
adc
xchg
nop
sub
mov
jge
add
fcmovnu
imul
mov
fwait
int
and
xor
push
fwait
out
and
cmp
or
mov
daa
popa
lea
push
dec
pop
push
insb
int
push
or
movsb
mov
sub
mov
push
mov
movsb
push
and
cmp
and
cmp
aam
cmp
xchg
gs
push
sub
les
dec
inc
xorl
sahf
sub
push
jecxz
sbbb
stos
pop
cmpsb
out
dec
aad
add
xor
mov
gs
ret
mov
std
sbb
ret
std
xchg
cltd
push
mov
pop
sahf
xchg
and
test
xchg
repnz
les
int3
xchg
js
pop
loope
inc
dec
add
pop
out
mov
sar
repz
mov
and
rorb
pop
lret
test
pop
and
bound
xor
dec
pop
jnp
lcall
adc
pop
push
jp
pushf
push
clc
fyl2xp1
mov
sub
dec
mov
sti
adc
jbe
jmp
mov
out
add
mov
mov
cmc
icebp
out
fs
repz
pop
jg
pop
call
addr16
and
cmp
scas
adc
jno
mov
call
jl
out
mov
movsl
test
jp
cmp
jecxz
xchg
cmp
pop
cmp
sti
pop
rorb
mov
das
lds
filds
psrlq
adc
cwtl
rclb
or
xlat
pop
push
xchg
pop
and
or
pop
js,pn
inc
push
lahf
adcl
fnstenv
aad
pop
daa
sbb
sub
shlb
xchg
popf
mov
out
lods
adc
xor
shrb
adc
imul
testl
rol
nop
lret
in
aam
stc
adc
xchg
ja
push
in
loopne
sub
pushf
pop
movsb
inc
loop
rol
test
push
into
jbe
fcoml
mov
jl
sub
push
mov
dec
mov
ss
fsubs
scas
rcrl
test
test
or
add
jbe
mov
add
xor
push
jg
xor
sub
and
xchg
gs
arpl
sub
mov
fisubrl
pop
into
sbb
adc
push
sarl
lcall
dec
xor
mov
adc
pushf
dec
mov
dec
or
iret
adc
cmc
int3
and
xorb
pop
push
sub
daa
sub
gs
add
mov
adc
or
ljmp
lahf
mov
cmp
dec
jl
mov
clc
mov
sbb
mov
adc
sbb
push
movb
js
sbb
negl
add
pop
lahf
ja
ja
mov
push
jns
divl
cmovae
cmpsl
lods
cmc
iret
push
in
shrb
add
xor
data16
nop
pop
cwtl
roll
mov
ret
cwtl
enter
xor
icebp
xchg
sub
loopne
inc
cwtl
cmpsl
loopne
in
pop
stos
sbb
sbb
cmp
adc
gs
and
push
add
mov
or
fidivrs
sbb
arpl
stc
xor
mov
in
mov
fdivrp
xchg
je
sub
xor
lret
jo
xor
add
sub
push
testb
data16
mov
lret
icebp
clc
pop
movsb
out
fldl
iret
les
je
mov
sti
mov
lret
add
movsl
filds
std
jnp
adc
mov
imul
mov
repnz
inc
push
testl
lods
mov
sub
push
jp
mov
mov
push
push
lahf
aam
fistpll
js
iret
jmp
xchg
jle
push
outsl
in
cmp
aad
sahf
int3
mov
sti
jle
mov
adc
cmp
imul
sbb
shl
sub
mov
jl
jp
ret
gs
cmp
loope
dec
and
push
push
sbb
out
jecxz
daa
and
into
out
sub
data16
push
push
adc
jo
fs
or
fldcw
add
dec
pop
mov
sub
pop
dec
cld
adc
dec
repz
iret
xlat
push
adcb
and
loope
lahf
in
les
jae
add
jge
jmp
jmp
xchg
aam
out
push
xchg
pop
ret
inc
push
dec
addr16
sbb
stc
in
push
movsl
ret
and
xor
ret
ds
adc
fidivl
es
lea
or
xor
in
iret
es
aam
xor
inc
xor
pop
adc
jae
pop
je
adcl
cs
add
repnz
lods
push
imul
xchg
dec
cli
test
adc
loope
nop
push
xor
cmc
xchg
adc
xchg
push
pop
and
pop
xchg
pop
inc
jns
mov
into
cmp
push
jno
bound
inc
pushl
inc
dec
xchg
or
lods
icebp
ljmp
sbb
add
test
push
mov
mov
hlt
lret
dec
mov
jo
cmpsl
in
cltd
repnz
icebp
fisubrs
fbld
pop
mov
es
mov
add
jge
addr16
jns
outsl
jo
xor
fdivrs
ljmp
cmpsb
cmpb
inc
mov
pusha
jbe
lcall
mov
mov
lahf
ds
mov
jp
xchg
sub
movsb
sbb
pop
mov
outsb
add
les
pusha
pop
push
sbb
pop
insb
in
or
aas
cmpsl
jo
es
fldl
sub
bound
enter
and
adc
addr16
mov
xchg
dec
add
xchg
clc
aad
fdiv
mov
out
pop
ss
mov
les
jl
aam
mov
je
addr16
or
inc
arpl
add
jno
popa
jnp
adc
jo
add
dec
push
cli
mov
jns
jmp
out
cli
jp
pop
je
cltd
dec
mov
xchg
push
divb
mov
sbb
sbb
shl
or
mov
dec
or
gs
push
insl
mov
push
aad
mov
test
in
sbb
enter
es
sti
fbld
call
ss
sub
adc
daa
mov
push
push
es
xlat
xchg
out
repz
add
sub
sub
mov
jo
mov
out
dec
fs
stos
ror
nop
outsb
out
xor
inc
ds
scas
xchg
mov
mov
cmpsb
ss
subl
sbb
jle
jg
dec
das
jge
xchg
jp
gs
cmp
or
fcomip
mov
mov
push
test
stos
aam
jb
lret
sub
mov
in
loop
xor
fs
jb
inc
ret
mov
or
je
lods
or
imulb
mov
aad
jb
inc
mov
insb
sahf
add
outsl
pop
lock
fildll
jl
sbb
cli
dec
outsb
mov
out
xchg
lds
sbb
adc
xchg
adc
mov
test
xchg
lcall
adc
insb
inc
scas
pusha
jb
xor
jge
fidivrs
cmc
mov
xor
adc
or
in
pcmpgtw
jnp
test
outsl
pop
push
adc
frstor
and
jno
pusha
lea
stos
sub
adc
inc
sub
cltd
xchg
lods
xor
pop
mov
call
stos
mov
ljmp
shl
mov
nop
mov
shlb
pop
bound
nop
add
sbb
mov
mov
loopne
mov
aaa
push
sbb
inc
pop
sub
pop
mov
mov
dec
cmp
jge
gs
sbb
aaa
mov
pop
es
insl
push
rol
insb
push
out
add
jg
pop
xorl
mov
fimull
push
scas
mov
push
pop
adc
daa
jae
add
mov
pop
aam
add
test
adc
enter
mov
fmul
shlb
rcrb
call
xor
jg
xchg
mov
sti
xchg
cwtl
imul
insb
push
and
or
sub
adcl
mov
inc
jl
aad
outsb
dec
movsb
pop
rcll
pop
lods
sub
mov
cmp
movsl
xor
mov
xchg
cltd
cld
cmpl
or
push
cmp
push
push
xor
mov
cmp
lock
comiss
push
dec
idiv
sub
jne
inc
lea
fnsave
aam
mov
sbb
lahf
or
pop
insb
xlat
push
pop
nop
cld
sbb
xchg
shll
pop
add
push
mov
es
push
loopne
or
jecxz
stos
jl
fiaddl
inc
mov
add
ja
jae
out
push
nop
pop
xor
jge
sub
cmp
fldenv
or
ds
nop
dec
jns
sbb
sbb
into
push
aad
xchg
push
sbb
mov
daa
insb
pop
sbb
clc
popa
push
repz
mov
popf
pusha
xor
stc
sbb
rclb
aam
mov
and
ja
mov
and
mov
pop
daa
pop
add
mov
jae
clc
lds
movl
xchg
mov
mov
inc
data16
fmull
adc
ds
lods
sbb
ret
mov
or
lods
xlat
mov
ljmp
push
push
adcl
jb
test
cwtl
mov
fdivs
movsb
mov
sub
fwait
sub
sahf
test
dec
bound
jae
xlat
inc
into
mov
pop
sub
idivl
and
or
call
lahf
pop
dec
mov
call
xor
fs
cwtl
cwtl
sub
imul
popf
sahf
outsl
ret
cmc
fs
lret
sub
pop
fs
hlt
mov
cmc
inc
addl
mov
out
pop
ljmp
inc
and
scas
dec
pop
idivb
mov
xor
or
gs
sti
cmp
jg
push
push
or
cld
push
outsl
mov
les
cmpsl
mov
dec
lods
les
mov
mov
daa
inc
fcmovnbe
cmp
jbe
mov
add
jne
fistps
call
dec
adc
movsb
jae
dec
dec
adc
test
push
insb
add
adc
bound
inc
sub
adc
push
sbb
sub
pop
lds
mov
idiv
pop
pop
cmp
xchg
cld
and
loope
mov
bound
lcall
cmpsb
icebp
out
mov
fildll
imul
loopne
push
inc
adc
xchg
mov
roll
lret
xor
fwait
leave
sbb
or
push
and
jb
pop
and
pop
push
imul
jp
out
dec
add
xchg
mov
xor
jo
and
jge
es
or
addr16
lds
xor
in
lcall
lahf
push
nop
addr16
leave
push
cmc
dec
idivb
arpl
test
inc
lea
leave
inc
and
push
and
mov
js
fwait
inc
inc
push
jno
push
outsb
adc
jnp
repz
out
test
lahf
movsb
pop
bound
cmp
sub
dec
cld
hlt
xchg
xor
jno
clc
mov
sahf
aaa
fstpl
adc
fadd
sbb
inc
iret
jecxz
mov
scas
cwtl
out
fisubs
add
dec
mov
inc
push
jmp
and
push
adc
test
stc
pop
dec
outsb
xor
bound
fwait
mov
popf
mov
insl
sub
push
shr
fimuls
push
aas
or
cmc
out
pop
mov
sbb
pop
inc
mov
addr16
sbb
inc
push
imul
mov
xlat
popf
sbb
insl
sbb
and
push
inc
adc
das
adc
test
dec
pop
mov
jge
mov
lock
repnz
xchg
jg
xor
in
push
into
mov
mov
mov
aad
iret
hlt
xchg
outsl
test
call
iret
ja
stos
add
and
orb
pop
lea
fnsave
cmp
jge
faddl
cmp
jmp
and
jo
xchg
movsl
mov
pop
test
in
jg
and
dec
icebp
and
inc
lds
xchg
push
or
std
push
and
rep
xor
sti
mov
test
push
cmpsb
test
cld
xchg
outsb
add
mov
adc
pop
mov
jns
dec
es
mov
push
lret
fs
test
mov
mov
lahf
inc
movsb
pop
fisubs
int3
cmp
cmp
shl
fnsave
push
push
mov
push
imul
lret
lods
out
fisubl
mov
or
dec
test
or
jmp
cmpsl
mov
adc
jbe
je
int
pop
loope
xchg
xor
mov
fs
sub
pushf
test
ljmp
pop
push
mov
fldenv
scas
mov
aad
outsl
sbb
iret
fmul
ror
mov
stos
call
sub
test
arpl
fs
xchg
outsl
rcrl
cmpsb
jb
mov
lods
imul
outsb
sahf
rcll
xchg
pop
inc
xor
dec
inc
sbb
test
scas
rcrl
outsb
pop
ret
sub
sbb
adc
sti
frstor
shll
pop
iret
cmp
jne
jae
jmp
dec
mov
icebp
sub
shll
xlat
scas
rolb
ret
or
aam
enter
fidivrs
xor
sub
inc
adcl
and
mov
fucomip
or
inc
and
jae
and
pop
sti
cmp
cmp
push
xor
cmpb
nop
xchg
cmpsl
inc
mov
push
adcl
pop
sti
pop
xchg
pop
push
fisttpll
inc
lahf
hlt
mov
xchg
cmp
xchg
gs
rcrb
call
mov
out
jmp
mov
out
arpl
xchg
cwtl
adc
shrb
push
into
mov
cltd
repz
ja
add
pop
imul
jg
dec
xchg
or
jae
lret
icebp
dec
xchg
fstl
push
stos
dec
sub
in
mov
lods
imul
or
loopne
xchg
lods
lea
cmp
ja
inc
pop
inc
push
ss
fdivrp
or
xor
movsb
mov
or
inc
lock
rolb
or
cmp
in
push
loopne
dec
mov
imul
jnp
pop
lods
mov
dec
cwtl
test
mul
js
adcb
clc
daa
dec
in
arpl
aad
iret
mov
push
adc
cwtl
mov
xchg
or
push
jb
inc
ss
push
pop
xor
sbb
push
ret
insb
mov
xchg
xor
daa
mov
mov
jae
inc
cld
aam
cmp
mov
ljmp
fdivrl
pop
xchg
test
push
cmp
fcomps
cmp
gs
sbb
mov
mov
addr16
into
jae
aad
inc
fstps
movsl
xchg
fwait
lods
jge
pushf
dec
dec
in
sbb
sbb
mov
out
cmc
xor
shlb
insb
ljmp
or
xor
icebp
test
test
dec
std
sbb
sbb
dec
imul
std
popa
lods
mov
fmul
mov
mov
daa
xchg
scas
cmpsb
fstpt
cli
mov
mov
les
mov
test
cmp
daa
inc
inc
sub
loopne
pop
mov
into
push
mov
push
or
xor
pop
roll
cld
xor
mov
dec
cwtl
push
scas
loop
inc
sub
dec
rcll
or
and
inc
inc
imul
mov
movsl
iret
stos
sub
je
adc
std
ljmp
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
push
pop
out
xor
pop
out
idiv
insl
outsb
ss
mov
pop
icebp
mov
mov
mov
dec
adc
adc
add
pusha
outsb
cmpsb
and
in
pop
in
dec
insb
ja
daa
push
or
stos
mov
mov
dec
jmp
scas
les
loop
cld
lret
pop
pusha
jno
dec
arpl
jne
mov
es
and
xor
sbb
cwtl
mov
out
outsl
pop
xchg
adc
not
jbe
inc
cltd
adc
mov
testl
pushf
and
ficoml
inc
setne
mov
cmp
pusha
add
ja
test
mov
or
movsb
xchg
dec
ja
out
xchg
or
ss
pop
and
clc
mov
push
sbb
sub
lods
and
int
sbb
mov
loop
jne
das
dec
pop
mov
xchg
push
loop
pop
or
shlb
cmp
inc
add
sub
icebp
mov
mov
leave
pop
cmpsb
adc
push
xchg
call
mov
movsl
xor
stc
cmp
add
xor
aas
popl
insl
ja
mov
xchg
mov
dec
add
psubusb
cmc
imul
scas
into
or
in
and
xor
loop
lea
les
pop
adc
mov
loop
popf
xchg
insb
sbb
push
out
les
inc
and
mov
pop
in
xor
sahf
clc
repnz
push
stos
push
loope
addb
and
or
mov
xor
lret
jmp
aad
add
jge
dec
add
leave
inc
push
movsl
lcall
lret
mov
cmp
cmp
fs
outsl
jp
cmp
call
mov
xchg
xchg
mov
ss
mov
push
mov
das
outsl
std
jo
or
push
aaa
mov
addb
or
or
jo
lods
mov
incl
inc
out
cmpsb
orb
mov
aad
jge
mov
push
idiv
mov
fucomip
popa
pop
jecxz
daa
fdivrl
pop
icebp
test
in
push
cmc
filds
fwait
xchg
add
test
ss
and
pop
es
xchg
int3
cmp
add
loope
adc
outsb
leave
loopne
push
dec
out
jns
push
addr16
in
inc
and
pushf
cmpb
mov
push
add
stos
mov
lahf
mov
in
sub
movsb
adc
xor
mov
rcl
icebp
sub
shr
enter
sbb
insb
sub
and
xor
jnp
mov
jmp
jmp
mov
add
rolb
loope
pop
jl
icebp
inc
mov
lock
repz
aas
pusha
aas
bound
jnp
gs
dec
xorb
clc
jle
loopne
cld
into
lods
jg
inc
mov
mov
xor
cltd
aas
or
push
das
repnz
push
cmp
andl
pop
sbb
je
dec
pop
inc
inc
pop
push
shlb
fdivl
repnz
sub
inc
xlat
xchg
fldl
faddp
mov
add
xchg
jne
xor
aaa
add
mov
das
jo,pn
xlat
repnz
sahf
sbb
ret
negb
in
test
adcb
imul
or
js
xchg
sti
inc
dec
in
mov
adc
pop
push
xor
imul
xlat
clc
popa
pop
jl
jge
nop
adc
cld
adc
add
or
sbb
xor
das
mov
iret
jns
mov
arpl
jo
movsb
ss
ret
je
mov
cmpsl
xchg
xor
or
out
lods
outsb
cmp
adc
test
ss
aam
pop
cmp
ret
xor
pop
fcmovbe
insl
cld
mov
mov
inc
cmpsl
mov
mov
cltd
sbb
mov
mov
mov
ret
jnp
adc
out
stos
in
dec
sub
mov
adc
jmp
add
lahf
cli
jmp
mov
aam
shrl
test
addb
rorb
sub
cmpsl
insb
dec
dec
xor
push
jle
loop
das
pop
and
in
mov
and
repz
dec
mov
xor
inc
rorl
pop
push
xchg
popf
add
pop
adc
jbe
lock
andb
cmp
loop
daa
cli
jg
sub
sub
jae
dec
and
push
jmp
push
stos
and
ret
mov
lret
lods
sub
lcall
inc
fisubl
adc
insl
nop
and
stos
outsb
xorb
mov
push
lods
ljmp
inc
inc
mov
pop
popa
jb
dec
data16
aad
repz
outsl
aam
xchg
std
lret
icebp
les
adcl
jns
mov
or
rorl
mov
aam
xchg
lea
test
movsb
mov
pop
insl
adcl
or
loope
lret
fidivl
and
and
adc
and
mov
cmpsl
jbe
sbb
test
pop
sbb
push
dec
xchg
pop
pop
clc
jne
fwait
mov
inc
mov
dec
testl
rcrb
inc
sub
fwait
fs
pop
jo
push
enter
lea
notl
inc
xor
lret
or
cmpsb
jecxz
leave
mov
inc
or
fsubr
cvtps2pd
pop
or
aas
inc
mov
aaa
jmp
pushf
shlb
cmpsb
pop
inc
repnz
aam
stos
jmp
imul
xchg
pop
rcrb
jle
jle
jmp
xchg
mov
mov
push
mov
cmp
movb
popf
or
or
mov
leave
aaa
xchg
in
dec
aam
xchg
cmp
call
xchg
addl
daa
call
jns
movsb
jbe
mov
adc
sbb
mov
xchg
dec
push
clc
enter
add
cli
inc
pop
ds
aas
fsubl
stc
cmc
inc
xchg
xchg
mov
out
in
mov
dec
in
mov
imul
sub
imul
push
pop
filds
faddl
arpl
xchg
popf
or
cmpsb
pop
cmp
insl
addb
in
aam
add
mov
cltd
mov
xchg
push
mov
sbb
aad
dec
in
je
loop
sub
cmp
jae
dec
test
mov
aas
inc
adc
addb
sti
mov
fistpll
mov
les
rcrb
mov
rolb
mov
mov
cmp
loope
jcxz
rclb
jp,pn
loope
adc
nop
ja
call
mov
jbe
jb
daa
fcompl
movsl
dec
dec
sbb
ds
xchg
outsb
lret
add
lock
cmpsb
xchg
jae
or
into
xchg
popf
stos
sahf
out
outsl
pop
xor
add
int
es
imul
in
inc
nop
bound
movsb
xchg
sbb
jecxz
mov
test
xchg
scas
bnd
cwtl
es
enter
ret
addr16
sahf
adc
inc
pop
jle
mov
cmp
inc
sar
mov
out
loope
sti
and
mov
decb
aad
jmp
pop
stos
push
pop
xor
mov
push
jg
adc
call
insl
mov
adc
shll
cmp
dec
sbb
outsl
aas
sub
or
pop
xlat
insl
mov
and
jo
or
inc
lock
pop
std
mov
cmp
sti
sti
add
repnz
and
cs
mov
and
mov
dec
xchg
xor
imul
or
popf
lret
push
shll
sbb
xchg
popa
hlt
leave
icebp
cmp
cltd
dec
and
xchg
cwtl
jbe
add
rcrb
pop
pop
cs
adc
sbb
ss
jns
pushf
or
faddl
jae
stos
xor
shrl
cwtl
mov
xchg
loop
sahf
iret
fwait
or
gs
mov
inc
lret
push
or
and
pop
and
stc
imul
jmp
xor
add
shl
or
dec
pop
sbb
push
lods
std
incl
cmp
lock
and
js
nop
stos
cmpsl
mov
inc
or
repz
jmp
mov
mov
out
repnz
lret
lds
add
mov
test
mov
loop
imul
repnz
jb
cltd
test
shlb
or
mov
inc
ds
cmp
dec
fs
adc
ficoml
pop
cmp
pop
ret
pop
pop
lods
sub
sahf
adc
xchg
pushf
leave
insl
repnz
push
jle
xchg
stos
pusha
mov
fistl
mov
push
or
xor
push
xor
sbb
mov
xor
out
xor
cmpsb
jl
in
dec
adc
mov
mov
xor
pop
test
mov
in
test
push
aad
inc
mov
arpl
rcrl
mov
mov
mov
aam
and
jecxz
jae
fsubl
xor
lods
movsl
repnz
pop
inc
sub
clc
cmpsb
imul
add
aaa
pop
scas
sub
insb
dec
push
call
sbb
mov
or
push
stos
loope
jno
enter
lret
outsl
dec
shl
sbb
rcl
sub
movsb
idivl
lods
test
push
popa
xchg
call
insb
gs
and
in
sbb
push
mov
sub
cltd
pop
js
arpl
jmp
arpl
jnp
sub
jg
aaa
in
inc
mov
rcrl
xor
sahf
mov
int3
jle
xor
les
xchg
adc
adc
notb
ret
inc
daa
les
mov
mov
arpl
jno
pop
sub
arpl
mov
in
test
sub
jle
loop
ljmp
jg
sbb
dec
push
mov
mov
cld
outsl
push
outsb
jg
call
dec
mov
or
pop
or
mov
in
cmp
lods
and
fsubs
jae
sbb
ror
shrl
scas
outsb
scas
decb
iret
dec
adc
into
shl
out
mov
push
ss
push
add
xchg
outsl
adc
jnp
mov
cmc
inc
or
pop
mov
xchg
add
inc
mov
cmp
or
dec
rorl
adc
cmp
mov
mov
fidivs
or
adc
or
sbb
js
ja
lcall
jb
cmc
fisubrl
jg
mov
fldt
mov
stos
sti
pop
out
cmp
mov
add
repnz
xor
mov
push
sbb
mov
js
fisubrl
push
int3
xor
cltd
lods
jne
xchg
inc
or
cli
fdivs
out
xlat
inc
jl
xor
cmp
sbb
xacquire
or
mov
mov
pop
jnp
stos
pop
sub
push
mov
inc
shrb
fidivrs
add
pop
push
mov
inc
mov
into
mov
mov
bound
and
cmp
jmp
push
jno
sbb
jnp
cmpl
mov
int3
pop
cmp
test
sub
loope
fldt
mov
add
mov
push
sub
mov
sbb
xchg
push
cwtl
add
mov
and
bound
sti
jle
iret
xchg
mov
jg
shl
test
hlt
sbb
test
test
pop
enter
push
push
push
or
iret
sbb
jecxz
pusha
or
dec
fnstcw
and
and
push
inc
addr16
inc
mov
mov
aam
sbb
js
inc
fdivrs
aam
cmp
jl
cltd
std
push
mov
xor
sbb
hlt
dec
std
jo
cmpb
test
jp
push
call
push
sbb
adc
repz
pop
sub
inc
jns
std
mov
inc
and
xor
das
negb
sub
xchg
push
sub
or
repnz
rcrb
repz
mov
add
adc
popf
lcall
dec
in
jbe
test
xchg
daa
je
sbb
adcb
cmc
sbb
push
in
pop
pop
sbb
loop
inc
or
fists
sub
lds
iret
mov
mov
cmp
mov
imull
lahf
repnz
sbb
and
jo
add
dec
das
or
sub
pop
and
sub
xchg
or
dec
sbb
sbb
jmp
cmp
pop
mov
inc
cmp
ror
pop
inc
aaa
adc
cmc
or
into
aaa
mov
movb
adc
rclb
lret
cwtl
outsb
mov
iret
fisttps
in
xchg
shll
mov
inc
mov
xor
or
push
loop
mov
std
shlb
jo
jp
push
push
dec
mov
test
je
enter
hlt
cmp
add
push
mov
inc
add
mov
shl
sub
and
loopne
lcall
and
stc
inc
cs
xor
enter
enter
scas
sub
dec
enter
push
push
imul
inc
cmp
mov
sub
pop
add
lahf
iret
mov
int
pushf
andl
enter
pusha
xchg
sub
outsl
popa
mov
and
cmp
lds
cmp
ficoms
mov
pop
xchg
jl
lods
lret
rorb
jl
aas
aam
gs
rcrb
nop
clc
aaa
and
incl
mov
hlt
outsb
or
pop
insl
aas
sbb
out
lret
and
imul
mov
add
dec
inc
adc
call
push
out
rol
lods
adc
sub
push
stc
scas
inc
imul
mov
icebp
lahf
cmpsl
insb
cltd
mov
push
insl
enter
xor
pop
sub
fimull
pushf
lahf
incl
mov
dec
out
or
xchg
sub
fbld
in
rcrl
in
stos
xor
xchg
adc
dec
xchg
out
lods
add
ss
lods
cltd
push
aad
loope
icebp
dec
pop
cmpsl
insb
xchg
lret
js
sbb
addr16
sub
sbb
and
and
xchg
xchg
sarb
sub
in
mov
ja
test
ljmp
pop
ds
insl
push
push
test
cmp
jno
into
sbb
sub
rcll
out
pop
in
pop
adc
cltd
insb
mov
adc
bound
mov
mov
dec
scas
fisubs
lods
push
ss
xchg
ss
loope
es
fs
dec
dec
aad
inc
mov
ja
mov
adc
lea
nop
insl
pop
rolb
std
xor
dec
and
popa
sbb
imul
jg
add
dec
push
mov
scas
scas
ss
mov
in
sub
jle
pop
fists
vmovss
shll
repnz
mov
add
mov
popa
or
lock
mov
imul
cmpsl
xchg
and
xchg
jae
ljmp
jge
or
cmp
push
dec
sbb
xor
dec
sti
outsl
cltd
stos
sti
aas
mov
pop
mov
cmp
test
cwtl
push
lcall
jb
or
add
addr16
mov
test
decb
cmp
cmp
add
sbb
xor
mov
sub
test
int3
and
notb
shll
out
mov
mov
and
movsl
movsl
mov
pop
push
adc
into
xchg
push
int
cmpl
dec
fwait
add
mov
mov
lods
push
sbb
pop
shll
movsl
push
mov
in
sbb
inc
push
sarl
aaa
xchg
movsb
cmp
sti
add
popa
xorl
mov
shlb
aaa
dec
cmp
xchg
mov
in
xchg
xchg
mov
outsl
stc
jb
aad
jno
fbld
out
lods
sub
mov
fidivs
inc
out
out
or
pop
shll
jg
sbb
inc
or
mov
addr16
pop
inc
mov
mov
aad
iret
jp
jg
mov
sub
cmp
jecxz
jae
jle
scas
daa
in
xor
fisttpl
cld
push
inc
stc
stos
or
fwait
push
mov
into
push
out
jne
xchg
mov
outsb
cld
lcall
or
clc
out
mov
rorl
andl
xchg
leave
imul
fstps
xor
mov
push
movsl
lods
push
dec
test
push
and
popf
adc
out
mov
mov
xor
repz
roll
and
rcr
mov
add
fcoms
and
rclb
call
push
xchg
xchg
int
cld
push
jbe
repz
push
icebp
out
enter
sub
mov
jbe
lods
pop
dec
bound
xchg
lahf
imul
mov
inc
ja
push
aaa
and
push
jmp
mov
filds
jle
into
mov
test
insb
xchg
hlt
mov
or
mov
add
cld
stos
dec
cmp
lea
daa
in
and
push
stc
test
pop
or
or
inc
jl
lea
push
jp
leave
push
adc
icebp
das
jecxz
std
mov
or
pop
ficompl
cmp
dec
pusha
loop
fs
insb
leave
add
es
mov
mov
cmp
and
or
push
bound
fwait
dec
incb
or
in
add
adc
pop
cmovge
scas
push
inc
repnz
sahf
hlt
xor
jb
pop
mov
adc
stos
adc
jo
pop
cltd
push
cmpsb
inc
mov
or
or
mov
outsb
or
aas
imul
pop
mov
jge
cmpsb
fwait
fwait
jne
imul
lods
mov
js
and
test
add
mov
push
loop
fildl
shrb
subl
lods
fldenv
adc
mov
mov
xchg
add
imul
cmp
xlat
push
push
repnz
dec
lds
jle
inc
sti
pop
repz
inc
jge
mov
es
mov
inc
xor
xor
fcomps
cmpsb
cld
mov
dec
push
jo
dec
test
jg
cmp
icebp
mov
inc
cld
cmp
daa
bswap
sub
repnz
xchg
xchg
mov
andl
cltd
mov
mov
popa
test
das
pop
adc
jecxz
xor
hlt
aad
adc
xorl
mov
gs
sub
push
dec
out
cmp
std
mov
xchg
test
xor
gs
sbb
mov
je
pop
cltd
lret
jmp
mov
popf
scas
lahf
xor
dec
sbb
push
mov
movsb
push
push
xchg
shlb
mov
adc
mov
sbb
pop
jmp
cmp
data16
loop
mov
xor
aad
bound
xorl
jb
mov
xchg
mov
outsb
and
mov
mov
adc
mov
inc
inc
mov
push
shll
mov
stos
inc
mov
out
jno
shr
movl
pushf
in
dec
bound
es
leave
cld
test
outsl
leave
pop
in
mov
dec
mov
ss
sbb
xchg
or
lds
and
dec
enter
inc
xchg
in
mov
jmp
cltd
cwtl
insb
das
js
fnstcw
sub
push
dec
out
cmpsb
mov
or
push
les
bound
ss
sbb
imul
adc
jmp
pop
push
loope
adc
mov
sti
mov
stc
pop
adc
jnp
gs
jge
stc
push
ljmp
mov
xchg
imul
sub
pop
cld
push
cmc
inc
movsb
fstpt
jge
pop
inc
stc
mov
xor
push
xchg
jl
test
add
and
push
imul
sbb
and
or
out
cmp
pop
cltd
xor
fstpt
cld
push
out
mov
jge
lods
stc
xchg
or
into
pop
jl
fs
push
rorb
push
ds
mov
and
jmp
jle
sbb
repnz
jge
repnz
sarb
mov
dec
pop
dec
mov
cltd
pop
and
test
dec
movb
mov
fstps
sub
xor
mov
outsl
aas
mov
add
fwait
add
fbld
fwait
lods
es
jbe
scas
cli
nop
bswap
xchg
dec
jl
ret
lea
xchg
mov
pop
mov
or
push
dec
or
mov
jg
or
add
adc
repnz
nop
adc
and
or
aas
xor
ret
xchg
shll
xchg
lods
xlat
scas
mov
inc
sub
lret
or
sbb
jae
stos
ja
mov
sub
or
mov
xchg
testb
mov
jne
mov
je
pop
je
jns
fs
fdivp
cmpsl
push
fdivrl
push
cmc
loopne
repnz
mov
add
cmp
cmpsl
jbe
je
push
adc
mov
mov
mov
xchg
and
pop
cmp
inc
dec
movsb
jp
shlb
adc
imul
mov
dec
in
mov
or
or
hlt
fstps
mov
lret
pop
rolb
popf
lcall
psubw
jbe
stc
jecxz
lods
xchg
jg
pop
shll
fcoms
mov
mov
inc
dec
fsubs
cli
divb
jns
shlb
movsb
mov
jno
pop
jnp
push
loopne
mov
add
push
push
sub
pop
ds
sbb
popf
test
lret
or
mov
in
or
mov
lock
pop
adc
fldcw
lds
mov
push
xor
push
push
jg
xchg
data16
jp
ret
add
jns
push
mov
jnp
xchg
adc
mov
lret
cmp
mov
jge,pn
pusha
shll
cmp
push
push
js
ret
andl
loope
dec
inc
in
cmp
pop
xchg
mov
ret
cs
and
addb
xlat
movsb
subb
jecxz
clc
sti
jmp
sbb
imulb
inc
adc
xchg
cmp
cwtl
push
jne
ljmp
faddl
mov
arpl
pop
pop
xchg
mov
push
mov
movsb
xchg
stc
pushf
icebp
push
mov
mov
pop
lahf
ds
std
push
xor
adc
fists
inc
mov
cmp
add
push
repz
repz
outsl
fwait
adc
into
nop
pop
lcall
bound
popf
pop
inc
std
addb
cmpsb
call
mov
lahf
lahf
ret
xlat
les
push
dec
dec
jmp
add
dec
neg
sbb
jl
loop
adc
scas
cltd
mov
fiadds
or
push
xchg
jbe
push
test
dec
es
push
outsb
mov
mov
icebp
xchg
add
std
mov
mov
leave
fst
cwtl
fimuls
inc
sahf
nop
xchg
mov
mov
test
clc
and
leave
ret
popl
test
jmp
in
sbb
pop
into
dec
mov
push
test
push
push
xchg
jne
xor
aad
dec
bound
xchg
aam
pop
mov
inc
test
inc
ret
push
stc
lds
ret
push
popf
ror
dec
loopne
push
ret
fcoms
imul
imul
lea
fwait
es
mov
or
gs
call
and
dec
cwtl
xlat
popf
jo
jb
sbb
rolb
adc
xor
les
in
jp
xor
stos
xor
mov
rclb
out
test
mov
pop
lods
xchg
adc
adc
jne
jns
imulb
mov
addr16
xchg
stos
inc
cltd
xchg
out
cwtl
daa
out
dec
imul
push
mov
cmp
jo
or
fsubrl
xchg
dec
pop
cs
adc
lret
jge
push
sub
and
cld
movsl
mov
lret
int3
mov
push
aam
popf
or
inc
dec
add
scas
pop
mov
insb
dec
cli
imul
sarl
or
mov
add
jmp
loop
sub
xor
jp
or
cmp
stos
jno
out
lds
fs
mov
mov
pop
or
add
adc
cmp
sbb
mov
pop
loop
push
arpl
lahf
mov
add
insl
or
loope
andl
das
outsl
out
mov
pop
repnz
std
sbb
xchg
lcall
pop
mov
mov
es
mov
ret
mov
pop
and
xlat
mov
imul
mov
les
in
adcl
add
out
in
inc
pop
xchg
xchg
out
push
pop
out
adc
or
jae
pop
pop
bound
mov
fcomps
int3
aam
xor
or
xor
push
cmpsb
or
sbb
stos
mov
fsts
and
aaa
lret
add
ret
jp
or
cmpsl
popf
cmp
iret
xchg
push
xor
jle
pop
pop
xchg
jb
out
scas
pop
push
mov
loopne
loopne
aaa
xchg
stc
and
mov
push
jle
test
out
push
adc
xor
enter
int
leave
scas
mov
inc
inc
jge
fldenv
pop
inc
or
dec
add
pusha
mov
mov
es
and
sub
lret
xchg
test
out
aam
outsb
out
sub
or
mov
sub
jae
push
xor
mov
jl
rcll
mov
jecxz
push
fs
cmp
mov
adc
shrl
add
push
imul
jno
fldenv
fistl
or
and
jmp
fs
xor
pop
fisttpll
cwtl
repz
push
sub
js
leave
pop
push
cmp
mov
push
jae
jle
pushf
xor
or
sub
mov
dec
hlt
imul
xchg
je
lock
outsl
jg
mov
jnp
jge
stos
mov
test
jno
mov
mull
cmp
mov
fcoms
in
lahf
in
rcll
cmp
adc
scas
cli
pop
sub
pushf
rcl
add
jp
mov
lea
push
fldl
push
xchg
lods
insl
mov
ljmp
jg
test
jno
cmp
loope
pop
adc
sarb
sub
aad
mov
mov
mov
rol
mov
fistl
xor
or
call
mov
adc
push
data16
dec
lods
dec
sbb
xchg
mov
pop
call
push
mov
fs
mov
adc
xchg
or
test
sub
jae
and
scas
loopne
mov
enter
adc
pop
and
arpl
sbb
pop
test
xlat
or
adc
adc
in
fwait
jne
adc
mov
jmp
adc
cmpsb
in
mov
jns
mov
aad
ja
mov
jno
sub
inc
les
je
fisubrl
ficompl
xlat
loopne
push
daa
aad
call
rcr
mov
xor
xor
jle
out
push
mov
xor
add
mov
sub
fisubl
jb
in
dec
dec
stc
cld
jno
mov
stos
pop
loope
cmp
stc
ss
bound
add
std
cmp
adc
push
in
push
push
jno,pn
das
jle
pop
lahf
mov
cmp
in
stos
adc
jg
out
adc
stos
mov
add
xchg
shll
lods
jbe
sub
out
sti
outsb
repnz
mov
arpl
int
fs
in
xor
jno
std
push
fiadds
fistps
adc
js
int
pop
dec
cs
shll
jge
loopne
jge
into
cld
inc
shll
cmp
mov
mov
fldenv
jl
out
or
or
insl
int
push
adc
sbb
pop
mov
rcll
lods
pop
mov
xor
mov
push
sahf
mov
aad
xchg
test
add
jle
pop
std
repz
mov
pop
add
sahf
push
mov
fstps
jae
lahf
adc
mov
dec
sub
and
dec
jnp
clc
iret
or
add
jae
jns
cs
dec
xor
maskmovq
testl
and
xor
fxch
jecxz
push
jp
push
xor
adc
gs
sti
popa
push
mov
dec
das
or
pop
cs
out
outsb
loop
sub
push
add
sbb
loop
pushf
es
mov
fdivrs
es
subl
xor
pop
sbbb
sbb
ret
lahf
mov
fmulp
icebp
int
je
gs
and
imul
rcll
mov
mov
lea
dec
movsl
rorb
stc
ret
leave
shll
lret
cmp
mov
loopne
cli
mov
mov
xchg
mov
pop
mov
xor
clc
and
sub
into
ss
sti
pop
out
inc
int3
inc
sti
in
inc
pop
cmp
cmp
mov
adc
sub
pop
in
lea
js
rclw
ret
aam
out
fstl
scas
xor
fcoml
mov
fmuls
push
cs
dec
inc
pop
imull
dec
gs
addr16
repnz
fnstcw
inc
pop
jle
es
rolb
or
fimuls
das
aam
jp
enter
out
push
xor
pop
repz
fidivrs
xor
or
rclb
out
pusha
and
loopne
mov
jl
test
dec
xor
stos
mov
mov
sbb
and
mov
add
addr16
ljmp
shrl
cli
aaa
cmp
xor
jg
jo
mov
inc
mov
pop
or
mov
fists
shll
loopne
imul
fisttps
mov
xchg
push
pop
mov
pop
xchg
stos
xor
sub
add
aam
fwait
sbb
jbe
push
jb
popa
or
dec
ja
adc
icebp
in
out
icebp
mov
movsb
jmp
js
xor
in
cmp
sub
push
clc
scas
arpl
pop
fisttps
lods
popl
frstor
mov
xor
cmc
aam
and
mov
and
jle
jne
adc
call
js
fcoms
in
fcomps
jb
pop
scas
stos
std
add
mov
xor
pushf
xchg
or
icebp
jo
pusha
lods
cmp
xlat
pop
inc
lods
mov
or
fsubrl
push
dec
inc
das
mov
test
cmc
pop
fwait
and
lea
or
mov
adc
orl
scas
push
fsubl
fmull
sahf
mov
jns
sub
add
inc
fimuls
or
adc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
xchg
rcrl
jae
jnp
pushf
jnp
lock
icebp
push
outsl
cmp
inc
xchg
fwait
test
pusha
pop
cmp
mov
mov
pop
lret
cmp
ret
inc
xchg
cmc
push
lock
and
dec
push
xor
outsb
leave
mov
les
xchg
inc
mov
fimuls
int
icebp
in
push
call
or
icebp
pop
and
push
push
jg
stc
mov
cmp
data16
sub
lds
adcb
jb
push
stos
lds
ret
lret
and
loop
out
into
stos
jecxz
pop
sub
fcmove
add
fstps
aaa
repnz
xlat
sub
and
je
xor
enter
dec
cmc
js
pause
int3
pushl
jne
push
movzbl
inc
sbb
xor
jns
mov
pop
fwait
cmp
pop
dec
hlt
popa
lret
adc
shll
sbb
call
shlb
iret
push
bound
push
sbb
adc
das
push
jne
mov
loop
sub
jne
outsl
repnz
cmp
and
call
cltd
cltd
sbb
jbe
inc
lcall
pop
ret
sbb
or
cmp
mov
sub
add
sbb
sbb
test
push
das
lcall
sub
cli
jne
xchg
fidivrl
sub
or
sahf
mov
sbb
pop
push
arpl
lds
mov
arpl
fistl
inc
pop
cmp
inc
dec
lahf
push
iret
add
mov
in
hlt
or
daa
jmp
xor
shll
divb
xchg
mov
aaa
xchg
js
and
pop
or
adcl
pop
dec
ret
inc
pop
inc
fst
ja
addb
pop
sbb
mov
int
or
out
xor
mov
lods
std
pop
push
mov
loope
and
daa
imul
rcr
into
insl
arpl
adc
fimull
stos
cmp
int
jmp
mov
addr16
ja
mov
mov
aaa
pop
leave
ret
or
jns
push
ja
mov
aam
xchg
movsl
or
xchg
es
mov
xchg
aaa
fcompl
aaa
rorb
push
xchg
inc
xchg
jnp
aad
orl
mov
mov
xchg
push
xchg
jno
aad
pop
xor
jns
lods
jb
aaa
mov
scas
mov
push
repz
xor
mov
addr16
inc
fsubl
adc
mov
repnz
pop
add
mov
imul
outsl
adcb
lea
push
cmp
insb
sarl
and
stos
iret
push
cmpsb
jecxz
push
mov
mov
sub
jbe
scas
xorb
mov
stos
scas
mov
pop
ret
and
out
and
pushf
test
mov
clc
or
in
ja
mov
mov
repz
sub
mov
out
push
out
xchg
hlt
imul
sbb
lret
mov
dec
mov
cmp
add
add
mov
sub
dec
test
sub
jne
inc
inc
xchg
sub
or
mov
outsb
cmp
adc
xchg
cmc
test
push
imul
inc
cmp
sbb
subl
xchg
push
jge
sub
sbb
mov
fnstsw
jl
inc
push
addl
aas
iret
add
jmp
sub
and
popa
dec
dec
aad
add
sub
dec
pop
jnp
movsb
mov
push
test
inc
lods
and
cmpsb
xchg
and
ljmp
mov
adc
fldl2t
pop
xchg
testb
xchg
ljmp
push
sbb
adc
xchg
or
lret
xor
dec
mov
mov
mov
push
lds
out
push
pop
adc
outsl
pop
xchg
inc
scas
cwtl
sbb
inc
adc
inc
test
inc
sbb
mov
xchg
cmp
mov
push
inc
mov
loope
and
cli
xchg
scas
movsb
jmp
dec
rorb
imul
adc
xchg
dec
dec
and
ljmp
jne
popf
stc
into
mov
orl
inc
dec
jo
fs
and
lret
and
dec
ljmp
cmp
mov
mov
je
fnstcw
push
into
mov
jmp
out
jmp
repnz
pop
loopne
flds
cmpsl
nop
and
imul
push
cmp
and
dec
lahf
cmp
out
sub
push
unpcklps
add
pop
xchg
inc
test
push
mov
repnz
xchg
ds
bound
pusha
les
pop
push
fmuls
push
adc
jge
lret
and
sbb
push
je
add
pop
inc
lcall
pop
xor
cmp
dec
cmp
jecxz
dec
xor
hlt
jb
clc
sub
imul
cmp
sbb
mov
nop
mov
adc
pop
aaa
mov
adc
sbb
aad
push
cmp
out
adc
sbb
les
jp
cs
xlat
jp
pop
mov
mov
cmp
into
sbb
inc
or
xchg
lahf
es
int
dec
cmp
dec
out
sub
iret
lea
xchg
mov
add
in
or
outsb
jge
inc
mov
aam
push
stos
testl
in
jns
and
push
fimull
lret
call
pop
mov
dec
sahf
cltd
sti
les
ret
jne
lods
or
sub
cmpsl
icebp
pushf
mov
addl
sbb
sbb
mov
inc
and
mov
pop
xor
xchg
aas
jl
fcmovnbe
lret
jg
xor
mov
mov
xor
imul
filds
xor
int
mov
or
sbb
push
popf
fnstcw
jp
mov
sbb
inc
mov
push
sbb
ljmp
ret
das
jg
jbe
xor
arpl
jnp
jp
dec
inc
fisttps
add
out
ret
pavgb
out
les
lock
ret
ljmp
pop
fnstcw
adcl
pop
je
pop
dec
mov
adc
movsb
lret
mov
and
je
pop
scas
xchg
stc
xchg
inc
cmpsl
adc
addr16
bswap
mov
dec
subl
sbb
sub
in
testl
mov
cmp
mov
sbb
push
arpl
icebp
adc
aaa
sbb
and
repnz
int
mov
ret
push
mov
call
mov
cli
pop
push
loop
jb
fwait
popa
lods
xchg
test
stc
add
js
cmpsb
push
mov
sbb
call
push
enter
cmp
sbb
and
add
test
push
jno
jae
mov
jo
mov
push
mov
cmp
xor
xchg
rdtsc
lahf
mov
and
addl
adc
dec
cmp
or
mov
mov
fsubrl
jmp
cmpsl
and
pop
mov
sti
inc
inc
lea
shlb
sub
cmp
aad
int
pushf
ret
mov
cmpsl
adc
outsl
and
pop
dec
inc
mov
loop
mov
ljmp
dec
repz
jo
pop
inc
and
std
and
clc
adc
xor
in
xchg
les
cli
mov
mov
icebp
and
repnz
jg
mov
mov
mov
jnp
mov
mov
cwtl
cli
lds
int
cmc
movsb
inc
das
pop
and
movsb
pushf
cmpsb
xor
push
loop
leave
mov
dec
xchg
or
adc
int
sbb
lahf
insb
or
mov
repnz
fnstenv
xor
and
ljmp
mov
sub
mov
inc
gs
push
mov
daa
cltd
push
ret
pop
sti
jo
ljmp
hlt
mov
popf
shlb
inc
sbb
inc
jno
dec
lret
push
imul
nop
cmp
inc
add
ret
pushf
xchg
push
cld
cs
sub
cmp
mov
sbb
sbb
rorb
mul
lock
fsts
jo
in
mov
insb
repz
inc
ffree
and
xchg
fsub
and
adc
sbb
mov
push
jnp
in
enter
pushf
cmp
stc
sbb
dec
inc
lods
adc
add
and
dec
and
lret
sub
xchg
push
adc
jno
xor
push
mull
dec
add
xchg
jp
ja
or
out
mov
movsb
inc
mov
fmull
inc
and
ja
in
movsb
mov
stos
push
dec
mulb
test
xor
shl
ret
add
xor
cwtl
test
fcoml
dec
mov
inc
mov
aas
pop
adc
in
sbb
xchg
movzbl
out
loopne
mov
xchg
mov
dec
insb
int3
icebp
out
jle
pop
inc
cmpsb
mov
cmp
sub
push
cmp
jmp
push
mov
icebp
xchg
inc
inc
idivb
adc
es
in
cmp
xchg
inc
cs
shrb
xchg
mov
dec
imul
out
enter
aaa
scas
js
in
sti
push
in
mov
popa
xchg
xor
daa
add
or
adc
pop
imulb
out
scas
leave
xor
jb
aaa
add
jne
lahf
inc
jo
not
shrb
cmpsb
lds
push
xor
sub
addr16
stos
popf
inc
adc
dec
lods
fidivs
cmp
loope
sbb
arpl
or
jb
mov
loopne
mov
or
ret
or
test
mov
jge
cmp
mov
adc
or
sub
dec
inc
adc
fistps
movsl
and
fs
ret
pop
dec
cmp
push
jnp
xchg
jb
and
lock
mov
fcoms
cltd
xor
insb
fldl
cwtl
les
lods
dec
leave
test
sbb
inc
cmp
lahf
push
dec
jae
inc
ss
xorb
std
sub
imul
out
in
inc
xor
lret
push
pop
dec
add
lds
sub
sti
fcompp
sar
sbb
push
in
popf
cmpsl
dec
cmp
mov
mov
adc
ja
aad
cmc
fs
sub
push
and
cmpsb
jbe
mov
lahf
mov
lret
ds
mov
xor
inc
adc
stos
gs
incl
nop
andl
sub
mov
push
test
cmc
out
inc
push
ret
sbb
mov
fsts
imul
test
popf
push
stos
mov
adc
and
pop
sub
add
inc
xlat
in
or
loope
out
in
inc
test
push
and
inc
jno
mov
scas
jae
mov
xchg
inc
out
xor
shlb
aad
inc
clc
scas
sti
jge
jl
or
mov
xor
testl
xchg
ja
xor
std
in
cmovno
hlt
and
add
adc
pop
sahf
cmp
sbb
adc
pop
lahf
dec
movsb
aad
pusha
sub
lods
push
mov
inc
imul
int3
pop
mov
pop
mov
lods
xchg
stos
push
inc
xor
subl
in
scas
xchg
pop
add
push
push
sbb
cmc
sub
aas
sub
mov
lea
mov
fidivs
icebp
ja
insb
mov
stos
mov
lods
nop
cmp
jb
mov
out
out
lods
sub
addl
push
dec
ds
lret
jle
imulb
loope
insl
arpl
cld
or
daa
popa
scas
or
es
mov
jbe
popf
leave
aad
add
or
jns
pop
mov
and
cmpsb
sahf
test
xchg
call
push
fcoms
imul
in
xor
call
ret
enter
mov
test
shr
rorl
push
fwait
in
or
push
xchg
int3
jne
push
roll
sub
fbld
jg
lcall
stos
loop
inc
xor
pop
insb
icebp
dec
std
les
push
mov
fimuls
imul
pop
dec
xchg
adc
or
fs
push
xorb
push
push
loop
unpcklps
sbb
jno
std
inc
or
shl
out
inc
jmp
pop
fisubrl
xchg
and
ljmp
cmp
ret
pop
fucom
mov
jae
push
ret
jae
int3
sub
jns
or
shll
sbb
mov
xchg
out
cmp
push
xlat
leave
cmp
inc
fnsave
add
std
loopne
divb
idivl
imul
cmp
xorl
nop
mov
stos
sar
cmp
ja
xchg
jge
sub
aaa
xchg
orl
cwtl
jb
push
fwait
lahf
sbbl
add
push
popa
add
aas
and
push
xor
pop
sub
xchg
aaa
dec
xchg
dec
insl
hlt
jl
nop
mov
and
sbb
pushf
stos
adcb
adc
lods
movl
adcl
sbb
fldlg2
dec
cli
popa
int
into
add
call
jns
negl
rcrb
fadds
lock
push
stos
ja
sbbb
xchg
mov
lods
push
pop
rcll
inc
mov
or
cltd
sub
icebp
inc
fcomps
pop
add
xor
cmc
xor
ss
xchg
jmp
pop
or
out
fdivs
stos
popf
xor
dec
jge
lahf
and
and
mov
inc
dec
jmp
cmp
mov
insl
cmp
sbb
cs
mov
jmp
xchg
popa
stos
clc
sbb
sbb
dec
or
pop
ret
mov
gs
push
mov
and
xchg
or
cld
mov
jbe
sub
mov
scas
dec
xor
stos
push
adc
cmp
jmp
and
fs
pop
dec
and
mov
idivl
pop
sbb
xlat
mov
mov
out
insb
cli
mov
or
lea
mov
subb
lods
adc
ss
test
scas
in
pusha
pop
popf
sub
sarl
cmp
xor
fbstp
cmp
xor
rol
pop
imul
fisubrl
pop
and
data16
mov
lods
divb
stos
adc
shrl
pusha
inc
mov
shl
push
pop
and
int
inc
pushf
push
add
fmuls
jae
faddl
cmp
cld
push
rolb
pop
ss
or
pushf
popf
push
mov
xchg
adc
sub
mov
vmovss
inc
cmp
xchg
xchg
into
sub
ja
shlb
iret
and
pop
lret
sahf
cmp
pop
js
push
adc
lods
ja
pop
mov
pushf
daa
icebp
popf
xchg
inc
push
nop
xchg
and
sahf
out
add
rcll
xchg
sub
or
gs
ret
xchg
rcl
fldenv
outsb
mov
fcmovb
arpl
arpl
push
insb
fucomi
movsb
std
mov
mov
iret
dec
sbb
enter
les
and
dec
jno
dec
pop
std
test
inc
xchg
cmp
cmpsb
scas
popa
testb
int
adc
lods
mov
inc
mov
cld
je
and
jle
jmp
pop
cmp
sti
aad
jne
or
int3
popa
mov
pop
fwait
xor
outsl
adc
out
stos
arpl
and
stc
outsl
cmp
xor
mov
push
jbe
and
scas
jne
mov
cmp
adc
push
les
pusha
call
pop
inc
pop
fdivs
enter
into
push
rclb
fistpl
in
fwait
cmp
sbb
aas
push
fldt
xor
mov
mov
std
mov
ds
pushf
mov
js
inc
sub
out
sbb
cmpsb
sbb
rorl
cmp
aad
mov
insb
add
ret
jae
and
pop
inc
xchg
dec
mov
insb
pushl
jne
loop
jge
push
stos
mov
std
ss
dec
xor
ficoms
fiadds
pop
arpl
pop
jnp
ret
arpl
lret
mov
and
push
andb
rolb
lret
dec
pop
mov
repz
outsb
pop
jge
inc
sbb
sbb
xlat
jl
and
sub
out
inc
mov
xor
ret
sbb
lea
mov
je
bound
mov
mov
mov
dec
pop
push
push
pop
lock
clc
push
dec
mov
and
jl
aad
push
mov
mov
cmovl
mov
push
jb
jne
loope
shlb
mov
mov
into
xlat
push
cmp
jnp
pop
das
imul
jno
ja
mov
outsb
scas
mov
movsl
xchg
lret
and
in
inc
lret
lea
movsl
loopne
add
sti
or
popf
sti
sub
fxam
lds
jns
mov
sti
push
out
adc
sub
mov
cmc
loope
inc
leave
mov
lock
sarb
cs
adc
pop
popa
or
sbb
cmp
gs
jmp
sbb
adc
adc
test
out
xor
icebp
add
and
imul
addr16
daa
fisubrs
cmc
mov
mov
test
int
insb
or
mov
shrb
sub
push
inc
sub
ficoml
in
fsts
xchg
pop
test
pop
add
ret
aaa
ror
cmp
or
cmpl
fistps
scas
add
mov
jb,pn
adc
xor
insb
divb
popa
shll
in
cli
ds
lret
rcr
mov
pop
sbb
dec
xchg
nop
fsts
jo
jns
sti
inc
popf
lret
and
xor
mov
push
test
je
loope
mov
push
adc
leave
cwtl
out
sar
dec
aam
pop
out
pop
mov
ljmp
hlt
adc
test
and
dec
mov
shr
cmpsb
lock
movsl
mov
cs
push
cmp
push
ss
or
fst
out
cmp
fwait
mov
mov
sahf
push
mov
mov
bound
shll
ljmp
dec
addr16
cmp
das
adc
das
adc
rclb
roll
movsl
push
jl
sti
sbb
pushf
jae
pop
hlt
in
adc
imul
mov
lcall
dec
in
sub
and
mov
jae
nop
push
test
jmp
jp
gs
xor
cli
mov
xor
imull
pop
and
inc
iret
xchg
jge
mov
rorb
push
fs
sub
pop
lcall
scas
add
sti
mov
jo
aaa
jbe
and
cmp
add
lcall
jmp
jae
dec
mov
bound
pop
pop
rcrb
jmpw
lock
out
inc
dec
in
pushf
lahf
xchg
lcall
fnstenv
data16
jo
adc
push
inc
shrl
xor
movsb
ficoml
into
pop
and
dec
dec
call
addr16
jbe
clc
loopne
adc
movsb
inc
or
xchg
subb
out
xchg
outsl
xchg
adc
add
dec
les
adc
mov
cmp
mov
int
push
fnstsw
pop
xor
fdivrl
mov
dec
incl
fldt
sarb
cmp
enter
imul
mov
push
test
lods
push
mov
jg
cmpsb
xlat
nop
outsl
add
ljmp
jg
xor
loop
lods
xlat
jae
push
xchg
push
jmp
jo
mov
test
rep
mov
into
repz
faddp
ret
lds
add
jo
mov
mov
sti
movsb
sbb
mov
ljmp
jg
shll
adc
enter
loop
bound
imul
sbb
jno
or
sbb
int3
adc
sub
xchg
cmp
inc
add
clc
ret
add
bound
mov
and
scas
stc
es
sub
sahf
gs
aad
lret
ret
shll
testb
mov
push
mov
cmp
or
adc
insb
daa
xor
out
add
in
cmpsl
cmp
in
jo
sub
sub
cs
xchg
mov
mov
das
push
cltd
into
or
data16
in
cmp
cmp
xor
enter
cmp
adc
xchg
js
lahf
mov
mov
mov
mov
js
imul
jp
cli
dec
rclb
pop
or
neg
xchg
push
lods
lods
pop
sti
mull
jle
cltd
sub
cs
movsl
fs
xchg
xor
test
dec
test
mov
pop
pushl
jo
mov
loopne
jb
and
dec
add
mov
sar
adc
mov
or
call
cmpsl
jg
ret
xor
jp
sub
sti
mov
xchg
ror
mov
push
mov
inc
sbb
dec
sbb
or
out
xchg
jno
dec
fwait
loopne
testl
fwait
push
adc
cmpsb
mul
lahf
xor
sbb
inc
sarl
mov
adc
sbb
cmp
mov
push
arpl
into
mov
stos
inc
enter
lret
test
mov
sub
inc
aam
int
add
iret
push
pop
aas
js
mov
fs
cmp
into
cmp
addr16
xchg
push
pop
cs
leave
or
dec
je
cld
cld
inc
xor
jmp
jo
xor
popf
or
lock
fidivrl
mov
jl
pop
cmpsl
dec
jecxz
dec
dec
bound
mov
popf
imul
in
test
xor
jp
loope
inc
xchg
aas
xchg
ret
lds
std
repz
inc
pop
addr16
je
mov
mov
je
push
bound
add
xchg
cli
push
test
dec
daa
xchg
jo
inc
bound
fildll
push
xorl
xchg
push
int3
std
vmovaps
sub
mov
inc
or
in
pop
fwait
sbb
call
fistl
pop
mov
inc
lahf
adc
sub
inc
ja
dec
inc
hlt
sub
fistl
or
jo
hlt
pop
mov
sub
mov
mov
ret
dec
loop
out
mov
adc
imul
jnp
js
test
jge
jmp
inc
inc
aas
xor
je
sbbl
aas
mov
jecxz
mov
lret
sub
mov
mov
pushf
push
pop
aaa
pushf
ja
addb
xchg
mov
aam
jnp
hlt
and
inc
lret
mov
movsb
cmpb
xchg
jb
mov
sbb
out
cmp
hlt
mov
cmp
filds
mov
aas
xorps
ja
subb
xchg
push
mov
or
mov
and
insl
daa
aaa
mov
fs
push
xchg
leave
in
inc
jns
das
pop
pop
inc
jge
test
fiaddl
ja
inc
je
xor
mov
inc
in
pop
jo
popa
push
sub
mov
pop
jmp
push
out
pop
cmpsl
adc
inc
popl
insb
outsl
movsb
lods
mov
test
lret
insb
and
pop
mov
insl
inc
adcl
inc
pop
inc
jnp
es
and
stc
arpl
je
sahf
push
pop
arpl
stc
pushf
leave
push
les
int
xrelease
fcompl
js
cmpl
mov
lds
leave
pop
dec
nop
ss
xchg
inc
sub
cmp
lods
jns
scas
jo
aaa
lcall
cmp
mov
and
les
int
fsubrl
shll
dec
pop
ficoms
sub
out
mov
ljmp
lea
std
cmc
mov
sbb
pop
rcl
xchg
inc
sub
nop
and
aas
add
push
cli
pop
mov
int3
in
cmp
in
daa
repnz
and
adc
mov
ja
xlat
out
dec
xor
sbb
sub
xchg
cwtl
sahf
sub
loope
mov
cmpsl
adc
ret
inc
sub
ss
sahf
and
rorl
mov
mov
clc
jne
sub
ret
push
cs
inc
pop
cmpsl
inc
lds
in
adc
mov
mov
loop
mov
cmp
sbb
mov
mov
jbe
loopne
xlat
push
jp
mov
flds
imul
in
and
dec
dec
lea
xlat
out
inc
loop
sub
fmuls
cli
lret
xor
push
sub
push
scas
or
dec
cmp
stos
enter
jp
xor
pop
hlt
xor
ffree
into
mov
loope
jne
jo
sub
inc
pop
pop
in
outsb
into
mov
loopne
mov
adc
mov
sub
mov
cmp
ja
adc
lret
imul
sbb
sbb
push
xor
pusha
cltd
push
xchg
mov
mov
mov
mov
sbb
sbb
int3
lea
insl
pop
fistpl
push
cmp
xor
mov
fmuls
dec
xor
pop
push
dec
jl
add
mov
shrb
insl
and
or
test
in
adcb
nop
lds
or
shll
out
pop
or
aam
mov
je
jp
stc
ficomps
pop
pop
scas
stos
jp
lods
jbe
pop
dec
push
adc
xor
jno
lret
imul
push
iret
subl
call
cltd
dec
pop
in
jne
out
xor
iret
xchg
ds
iret
pop
call
inc
fildl
cmpsb
lds
lret
jae
scas
aas
push
ficoms
pop
cmp
sub
divl
je
je
mov
jmp
cs
imul
out
pop
rorb
xchg
jl
sahf
mov
fwait
and
or
fimuls
cmpsb
leave
iret
mov
sub
cwtl
cs
and
sbb
and
pop
pop
cmpsl
push
movsb
mov
shl
sbb
bound
test
test
lret
mov
add
push
sub
aas
mov
sbbl
sbb
cmp
rclb
addl
dec
lahf
scas
stos
xor
aaa
jns
mov
icebp
fstp
daa
inc
out
or
push
movsl
push
popf
mov
adc
call
inc
mov
pop
clc
and
mov
sub
jle
mov
movsb
addb
sbb
add
cmpb
mov
fsts
mov
mov
aas
movsl
mov
mov
pushf
cli
sub
jo
xchg
and
ret
and
es
jns
popf
xor
mov
addr16
and
gs
jnp
dec
xor
jbe
mov
sbb
insl
dec
inc
ffreep
in
test
cmpsb
dec
sahf
sti
das
sub
repz
xchg
jl
mov
sbb
xchg
mov
ss
ret
adc
fmull
pop
je
xchg
es
je
pop
pop
repz
adc
sti
scas
icebp
shlb
mov
mov
das
enter
in
adc
sbbb
dec
jnp
and
pop
in
xor
push
or
cmp
andb
or
es
das
and
stos
leave
cmp
xchg
out
xlat
ja
jge
fdivl
jae
and
add
cmp
lods
je
lods
pop
push
fisttps
add
ds
xlat
jmp
jo
push
ficoml
insb
loope
mov
subb
xor
sub
sarb
inc
push
loop
push
roll
lds
mov
pusha
push
mov
sar
cmp
in
jg
xor
add
mov
xchg
and
ds
and
adc
xchg
mov
cmp
cmp
scas
loopne
test
xor
scas
pop
dec
mov
movmskps
loopne
cmp
xchg
and
pop
and
inc
pop
push
pop
cmp
adc
or
loope
or
mov
push
sbb
pop
movsb
push
nop
or
lods
sub
andb
nop
leave
scas
in
js
nop
mov
sub
mov
push
adc
jne
inc
repz
repnz
testb
xor
movsb
in
into
dec
popa
lock
cmc
inc
shrl
scas
cmp
lret
das
popf
cmp
and
add
andb
notb
xor
fdiv
test
loopew
ss
mov
leave
add
mov
sahf
test
add
fisttpl
xchg
sub
popf
imul
mov
cmpsl
clc
scas
mov
imul
int
mull
mov
cmp
mov
cmp
into
sbb
push
jle
shl
mov
std
pop
das
insb
or
lahf
gs
enter
popa
in
mov
imul
nop
pop
cmp
outsl
xlat
call
adc
iret
mov
pop
sub
fidivl
cwtl
loop
cmc
inc
mov
fwait
jp
adc
lods
fists
adc
stos
aaa
jmp
cmpsb
or
mov
mulb
dec
sar
fwait
and
xchg
add
xor
outsb
dec
and
test
roll
cmp
xor
sub
mov
xor
call
xchg
push
addr16
push
call
das
shlb
push
fildll
dec
inc
cmp
test
stc
call
sub
dec
in
lock
je
mov
add
xchg
xor
popa
adc
je
stos
pop
cmp
jns
aam
adc
pop
sahf
ficoml
mov
int3
mov
stc
pushf
push
dec
inc
xor
negb
sub
jg
lock
outsl
fildll
lret
cmpsb
fs
add
pop
loope
test
mov
sub
mov
or
push
sahf
adc
in
xorb
jg
enter
test
xchg
push
and
and
jmp
ret
xor
stos
test
inc
mov
and
push
xor
mov
push
push
shlb
xor
leave
mov
decb
dec
leave
loope
inc
sarl
arpl
das
inc
or
in
xor
jge
or
pop
repnz
daa
es
or
push
imul
jmp
xor
mov
dec
lods
nop
and
mov
outsb
mov
jbe
cmc
or
imul
imul
push
test
dec
sub
lods
sbb
inc
pop
cs
pop
leave
repz
cmp
stos
mov
ret
bound
lret
jae
inc
leave
rcl
sahf
into
fxam
in
jp
lcall
xor
pop
sarb
pop
nop
mov
lock
lret
arpl
pop
mov
mov
adc
mov
movsb
repz
add
pop
into
fidivrs
fildl
lods
les
jne
lcall
incl
pop
pop
lret
add
xchg
in
add
roll
mov
sub
sub
nop
stos
pop
pusha
pop
inc
push
xchg
pop
int
sbbb
push
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
pop
add
xchg
jp
mov
jnp
daa
inc
roll
loopne
sbb
xchg
sbb
push
adc
repz
cmpsl
int3
mov
aam
mov
mov
jmp
out
sub
fcmove
fs
cltd
loop
nop
jno
fidivs
or
sub
xor
jo
test
dec
repz
xor
in
in
sbbb
imul
mov
xlat
pushf
push
hlt
adc
push
jae
stos
out
xor
push
jmp
mov
jle
mov
push
xor
hlt
cmp
mov
jno
mov
gs
rorl
out
mov
imul
mov
cmc
stos
gs
xor
and
xor
push
jg
jne
ficomps
sti
rcl
std
sarb
in
jo
into
push
xor
dec
iret
out
inc
cmp
test
dec
mov
stos
sbb
imul
or
test
xchg
outsb
xchg
cmp
add
popa
ffree
das
and
jb
xchg
fcmovnb
cmp
xchg
jnp
testl
ficoml
arpl
adc
test
jge
mov
or
inc
gs
rol
mov
idivb
jb
cli
xor
pop
hlt
add
idiv
test
lock
push
aaa
sbb
inc
and
stos
xchg
sbb
mov
push
insb
repnz
sub
repz
ficoms
leave
xor
test
adc
aas
sbb
cmp
insl
push
and
jp
out
iret
jae
adc
test
xchg
jae
dec
sbb
inc
jbe
insl
mov
add
jp
xor
test
sub
jmp
pop
nop
inc
je
clc
sbb
cli
inc
pop
inc
mov
shrb
fwait
and
int
sub
mov
push
xchg
push
mov
mov
adcb
push
cmc
adc
xchg
loopne
sbb
lds
insl
mov
stos
nop
std
cmpsb
mov
mov
mov
outsl
pop
mov
dec
out
pop
outsl
inc
leave
fsub
fldenv
ret
adc
lahf
test
mov
mov
xor
js
pop
mov
aad
jne
psubd
subl
lahf
dec
mov
push
or
jb
xchg
xlat
insl
xchg
out
mov
mov
rcll
aas
sbb
test
xor
mov
inc
in
cmpsb
arpl
divb
ds
jns
fistps
ss
adc
mov
test
add
push
fwait
cli
movl
mov
dec
sbb
mov
pop
xchg
out
jb
cmpsl
or
pop
in
fprem1
lods
sub
cli
gs
push
mov
cmove
adc
xchg
mov
jl
bound
mov
test
cmpsl
fwait
dec
sub
les
push
inc
xor
jno
addr16
pop
jp
mov
stc
int3
out
inc
push
rolb
ja
jbe
scas
push
fdivs
push
or
in
pop
sbb
dec
adc
or
push
sbb
lods
incl
mov
clc
rcrb
into
mov
mov
fiaddl
cs
in
mov
aas
mov
enter
arpl
sbb
xor
aad
movsb
stos
pop
pop
push
dec
sti
lahf
into
out
dec
mov
inc
mov
mov
cmp
insl
mov
repz
ljmp
inc
xadd
test
cld
sbb
test
dec
sbb
pop
add
jnp
add
xchg
mov
aad
rol
movsb
xchg
sub
mov
aam
popa
cmp
aaa
xchg
sbb
push
loop
rcr
rorl
xchg
shlb
cmpsl
mov
bound
repz
dec
lods
jbe
insl
in
sbbl
je
outsl
or
xchg
mov
jbe
ret
es
fwait
das
movsl
sub
cmp
push
jne
mov
fbld
inc
mov
and
insb
jecxz
inc
scas
ja
jb
ljmp
xchg
aas
hlt
sbbb
xchg
cs
pop
andb
mov
les
xchg
dec
jle
dec
xor
jae
jmp
jae
jb
out
cmpsl
adc
mov
dec
adc
pop
adc
in
jnp
shll
mov
in
or
xchg
jle
in
stos
mov
repz
push
cwtl
daa
mov
sti
cmpsb
xchg
and
pop
icebp
test
jns
jns
loopne
in
jae
push
xchg
pop
mov
pop
mov
lock
pop
shlb
sarl
xor
in
push
test
out
sbb
cmpsl
ret
scas
jnp
cmp
subb
jp
arpl
stos
xchg
xchg
ja
mov
in
pop
pop
lahf
xchg
rcl
rclb
jbe
lret
adc
addr16
mov
mov
movsl
sbb
cwtl
loopne
push
ja
xchg
scas
jae
gs
sub
stos
ds
mov
aam
aad
mov
lods
sub
inc
daa
out
int
pop
movsl
push
mov
aad
popa
lret
lcall
ja
mov
lea
jg
cmpsb
lods
cmp
ds
cmp
stos
test
lods
shlb
out
icebp
inc
mov
pop
jbe
xchg
rcrl
dec
outsb
or
dec
test
add
lods
int3
fwait
stc
xchg
mov
mov
icebp
in
cs
xchg
jns
enter
test
xchg
and
shl
loopne
add
fsubrl
std
add
stc
sub
pop
push
imul
int3
pop
inc
iret
icebp
xorb
loopne
jbe
call
push
adc
fistpll
pop
out
add
fbstp
hlt
inc
xchg
cltd
mov
outsb
pop
cld
lcall
dec
sub
into
xor
dec
adc
pop
out
sbb
jl
addr16
lcall
dec
jns
and
mov
add
xchg
xor
inc
sbb
loope
ja
and
xor
xlat
mov
les
jne
or
jb
jae
fsubrl
pop
hlt
sub
jge
aam
sub
out
sbb
test
imul
shlb
nopl
ja
dec
std
sub
stos
cmp
ljmp
and
pop
hlt
fists
or
js
mov
aas
jbe
or
ficomps
mov
out
out
or
and
mov
lock
dec
aam
fiadds
in
sbb
pop
test
and
jmp
hlt
xchg
movsb
jbe
mov
les
mov
cmpb
mov
xor
int
jmp
stos
faddl
ljmp
add
or
shll
pop
je
out
jecxz
jge
test
js
mov
jecxz,pn
xchg
xchg
lock
outsb
jb
inc
cmp
push
movsl
or
mov
loop
mov
and
shr
loope
ret
mov
lret
pop
xchg
jno
inc
or
mov
lcall
fwait
inc
inc
test
cmp
dec
mov
outsl
push
jge
repnz
aas
cmpsb
add
ds
mov
ret
xchg
pop
xor
cmpsb
mov
dec
inc
lcall
dec
nopl
sbb
mov
scas
dec
adc
sub
push
add
add
jle
add
nop
mov
fcmove
std
cld
stc
es
jb
sbb
in
and
and
adc
ss
mov
fptan
jno
xchg
shrl
je
fistl
lods
jne
pop
add
dec
add
xor
dec
subb
outsb
scas
testl
rsm
fs
dec
sbb
inc
fcmove
pop
cs
stos
jne
or
xchg
hlt
movsb
flds
out
sbb
test
jp
cli
pusha
cmp
inc
sub
pop
push
mov
stc
scas
mov
sub
lea
add
testb
loop
scas
sub
push
out
fcomp
adc
stos
jmp
ss
dec
popa
jae
or
sahf
jno
call
jno
clc
js
inc
sbb
imul
stos
add
mov
sbb
cltd
filds
sbb
push
pusha
dec
imul
xor
cmc
jle
in
cmpsl
shrb
push
jo
lret
push
sbb
int3
push
xor
xor
mov
in
add
lea
sbb
adc
ljmp
inc
push
xor
stos
inc
sbb
mov
dec
pushf
jo
pop
sbb
xchg
shlb
push
mov
fs
jg
mov
adc
jp
loop
sub
shlb
data16
ss
jle
xor
push
int
mov
cmpsl
inc
lds
lahf
mov
mov
sbb
cli
inc
sub
cli
cmp
sbb
pop
xor
push
aaa
sti
pop
std
jbe
add
mov
call
mov
lret
rol
test
fmull
adc
popf
daa
push
hlt
xor
push
fwait
and
enter
or
test
mov
xor
dec
and
shlb
xchg
cmc
xchg
loope
pusha
fdivs
cmp
push
sub
mov
aad
xor
mov
loop
dec
push
pusha
aaa
add
push
sbb
pop
pop
inc
not
imul
xlat
and
adc
add
lahf
xchg
push
mov
pop
pop
mov
dec
or
sub
xor
mov
std
mov
and
out
sti
jo
mov
mov
nop
pop
test
cmp
test
je
cltd
cli
sub
mov
mov
out
test
lcall
mov
pop
add
in
cvtpi2ps
iret
stc
dec
push
dec
lret
dec
adc
cmc
cmpl
je
or
fisttps
shr
out
mov
push
ja
popa
jne
cmp
dec
jbe
fcmove
in
test
into
test
sub
enter
lahf
nop
push
push
std
cmp
mov
cmpsb
mov
fistps
es
imul
shrl
and
jge
imull
pop
add
daa
jp
lock
aaa
aad
movl
and
dec
mov
cmc
xlat
cmc
cmp
dec
and
pop
mov
xor
inc
int3
pop
ret
or
jns
mov
mov
ja
jge
ret
repz
mov
jecxz
xor
mov
and
mov
mov
jp,pn
inc
adcb
mov
sbb
das
jnp
xorl
pop
pop
lods
cmp
fsubl
sbb
jmp
ss
lods
add
pusha
sub
shufpd
sbb
xor
or
xchg
push
shr
addb
push
inc
data16
out
and
in
inc
je
int
inc
push
lret
lcall
or
test
sbb
push
cmpsl
fs
in
sub
push
sti
data16
adc
enter
repz
sbb
add
push
xor
test
aaa
mov
cwtl
test
xor
fwait
andb
sbb
ja
cmp
adc
das
jge
and
sub
lods
call
bound
and
sar
jo
dec
xor
or
xchg
adc
sub
stos
mov
xchg
mov
out
sahf
pusha
shll
or
add
aad
in
pop
cld
lds
fsubp
or
jno
mov
sbb
andl
loopne
xchg
movsl
scas
and
scas
gs
ret
fildl
lods
lea
pop
sar
call
dec
ljmp
jns
shr
mov
cmp
or
push
dec
mov
dec
xor
xor
and
jno
mov
clc
mov
imul
jne
cltd
cli
xor
and
outsl
ret
push
cmp
push
push
outsl
push
jb
inc
jmp
mov
test
inc
push
push
sbb
stc
xchg
jl
mov
fwait
aaa
pusha
ret
test
pop
incl
adc
icebp
mov
sbb
cmp
jno
cmp
out
jmp
sub
ret
mov
lahf
add
lods
aad
add
cwtl
dec
and
or
mov
xchg
pop
shll
jns
shll
sub
sub
in
nop
sbb
mov
divb
jns
cmc
mov
test
adc
sti
cli
imul
push
out
xchg
ficoml
sub
mov
or
or
pushf
mov
push
dec
out
stc
xlat
pop
mov
clc
fisubs
or
and
pop
hlt
int3
sub
sbb
movsb
push
inc
xchg
lahf
push
fldl
lret
mov
sahf
js
insb
pop
mov
enter
out
insb
dec
shl
and
divb
jl
cmp
dec
or
addl
mov
fists
sbb
jnp
jmp
jns
dec
jp
dec
pop
gs
call
mov
adcl
jo,pt
jmp
add
xor
lea
jnp
xchg
repnz
out
shr
sarb
pop
jne
sub
aam
mov
mov
dec
pop
test
stos
movsb
addl
popf
mov
adc
dec
pop
aas
xchg
pop
jmp
sbb
cmp
out
add
aas
cmpb
push
mov
jnp
inc
pop
imul
in
pop
push
push
scas
jmp
dec
pop
sti
clc
ficomps
mov
jmp
jnp
sub
sub
str
inc
push
test
inc
iret
dec
ret
jmp
add
xchg
xlat
xchg
outsb
pop
iret
shl
test
ds
in
sbb
inc
mov
daa
stc
js
je
inc
lds
popa
mov
xor
dec
push
or
mov
xor
fiaddl
out
hlt
ret
les
adc
push
dec
mov
iret
out
add
push
sbb
lock
mov
ja
sub
cmp
out
stos
add
ja
popa
cmp
cmp
mov
lea
out
mov
addr16
notb
out
cli
dec
xchg
cltd
pop
loope
pop
repnz
pop
push
rcll
xor
ljmp
pop
dec
cld
mov
dec
lcall
sub
dec
pusha
fsubl
push
push
pop
sub
scas
sub
loop
inc
lods
xor
push
fldt
cwtl
or
call
push
inc
sbb
and
jg
out
push
jp
or
pop
push
and
dec
ljmp
jne
fidivl
xor
bound
scas
fs
js
adc
imulb
or
add
repz
fmuls
and
dec
out
inc
dec
ss
aam
dec
jne
int3
and
pop
dec
test
mov
xlat
and
repnz
adc
and
dec
roll
push
nop
xor
dec
in
cmpsl
ss
outsb
out
xor
dec
decl
inc
imul
sbb
dec
je
scas
jo
or
in
das
sahf
jae
xchg
xor
mov
test
lock
stc
sbb
jecxz
popa
pop
sub
pop
or
cmp
and
das
jns
mov
lods
int
push
add
xchg
sub
daa
adc
mov
mov
divb
mov
and
fwait
out
ss
lgs
out
push
movsb
inc
xlat
std
cmpsb
dec
or
jp
mov
sub
je
lods
in
stos
repnz
jl
filds
iret
jno
cwtl
xchg
dec
outsl
cld
adc
movl
stos
inc
pmullw
psllq
pop
jecxz
xchg
xor
sbb
fldt
mov
lret
and
loop
loope
dec
repz
sbb
push
pop
fiaddl
mov
andb
or
lock
out
test
outsb
inc
jns
aad
pop
and
call
and
jns
inc
dec
daa
xchg
repz
mov
sbb
inc
mov
popf
and
ds
mov
out
push
repnz
cmp
movsl
mov
mov
mov
mov
xchg
int3
data16
imul
mov
fbld
and
mov
cmp
cmpsl
jbe
lods
mov
add
pop
mov
in
xchg
pop
dec
imul
push
test
pop
fwait
js
mov
jne
mov
ss
imul
cwtl
cmpsb
pushf
mov
mov
orb
sub
shrb
nop
cld
and
fsub
in
out
push
xchg
cmc
sahf
jmp
pop
les
dec
xchg
push
out
push
into
sub
adc
mov
or
add
cmp
andl
test
lods
std
cltd
xor
push
loopne
sub
insb
sub
pop
cli
cltd
repz
negl
andl
bound
stc
es
scas
sub
mov
mov
sub
xor
jno
loope
pop
push
xchg
xchg
or
mov
sub
ficoml
and
cwtl
inc
loope
leave
lea
sub
cltd
inc
clc
stos
and
or
jne
jp
int
adc
push
inc
xor
insl
jp
test
scas
mov
lods
and
fstps
filds
inc
out
xchg
pop
in
jo
scas
xor
lea
clc
std
in
es
inc
shlb
icebp
sub
neg
imul
call
test
data16
in
or
push
in
lock
iret
jl
dec
add
sbb
dec
adc
jge
inc
icebp
ret
cmp
or
cli
fidivrs
and
sahf
jg
mov
pop
jp
mov
stos
rcrl
das
or
aas
sti
lret
add
adc
adc
aaa
mov
sbb
cmp
jnp
or
or
insl
lods
xchg
add
sbb
ficoml
fisttps
xor
stos
cli
aam
sbb
add
loop
mov
mov
pop
shl
pushf
push
adc
das
std
push
movsl
daa
and
mov
dec
je
fidivs
push
ljmp
cs
cmc
pop
xor
xor
mov
fdivrl
data16
call
ja
cs
add
push
sahf
in
cmpsb
std
xchg
push
in
pop
sbb
inc
cmp
in
out
inc
hlt
push
mov
incb
daa
and
xchg
push
jecxz
cmp
mov
mov
not
movsl
xor
je
inc
seto
iret
data16
mov
js
not
cli
aam
rorl
fisubl
sti
jbe
mov
add
movsl
adc
and
mov
arpl
and
arpl
sub
cmp
add
mov
mov
sbb
xchg
jle
daa
jns
sbb
jecxz
or
int
mov
and
mov
jge
in
jns,pt
push
xchg
mov
leave
xor
in
mov
push
sarb
mov
push
repz
or
xchg
iret
call
mov
les
loopne
mov
and
sub
xchg
in
push
push
mov
inc
pop
mov
stc
rorb
push
imul
add
sbb
gs
dec
data16
sub
cmc
and
xor
add
mov
push
mov
push
mov
jne
push
mov
xor
xor
fisubrs
test
sbb
inc
mov
inc
insl
lret
add
hlt
in
sbb
imul
call
add
lahf
xchg
pop
cmc
cmp
adc
inc
xchg
jg
stos
das
aam
in
das
cmpsl
add
mov
xor
fnstsw
testl
jnp
subb
jmp
sbb
xchg
popa
mov
lock
bound
shrl
push
pop
lcall
pop
fs
cmc
and
pop
aad
aam
mov
shr
or
add
xor
jmp
jo
pop
cmp
hlt
out
nop
imul
jle
mov
sbb
and
inc
push
mov
lds
inc
or
into
les
jle
out
leave
jle
fcomps
inc
iret
enter
lret
pop
dec
xchg
arpl
out
hlt
stc
data16
mov
inc
sub
invd
sbb
mov
enter
inc
or
in
stos
loop
test
in
dec
and
ja
aad
push
test
mov
sub
mov
inc
mov
sbb
sub
pop
lret
mov
xchg
aam
int
jmp
popf
adc
sti
xchg
pop
add
outsb
push
jbe
pop
ficoms
adcl
xor
cmp
or
push
add
fld
in
xchg
xor
fucomip
out
pop
mov
or
iret
bound
lret
sahf
dec
lea
pop
xor
add
mov
xor
daa
mov
cltd
mov
mov
in
dec
je
mov
cmpsl
push
cmp
movsl
adc
cli
mov
or
xchg
sbb
imul
lcall
sub
jb
xchg
sbb
ret
push
xor
cld
push
inc
xlat
cmp
mov
sbb
xchg
push
and
loope
or
std
sti
jae
jmp
sub
xchg
add
clc
imul
jns
adc
push
adc
push
pop
push
outsb
movsl
repnz
push
bound
mov
pop
int
push
lds
arpl
xchg
out
xchg
scas
add
mov
js
pop
imul
mulb
cmpsb
jo
cs
push
out
aam
punpckhdq
sub
jb
and
inc
push
mov
ljmp
stos
adc
xchg
mov
pop
inc
sbb
data16
roll
jge
ljmp
jg
fildll
mov
mov
sarb
int
dec
cmp
fisubs
aas
addr16
scas
xchg
rcrl
or
adc
xchg
mov
shr
xchg
rcll
lea
mov
rcl
aas
mov
sbb
jnp
add
add
rcrl
mov
adc
stos
pextrw
pusha
pop
insb
sub
or
int
mov
mov
push
dec
stos
inc
loope
ljmp
mov
popf
push
mov
std
xchg
lret
inc
lods
xchg
or
das
test
pop
cld
scas
add
lea
add
mov
in
test
sbb
psadbw
std
insl
mov
pop
cmp
repnz
dec
inc
pop
test
pusha
fmull
fistps
mov
push
out
cmp
jbe
add
mov
mov
inc
push
push
cmp
rcrb
into
out
imul
into
cmpb
mov
movsb
setnp
jne
lret
popf
fiadds
popf
mov
mov
or
push
loop
lea
jne
arpl
dec
cmp
sahf
xchg
mov
hlt
mov
sbb
xor
push
push
push
sbb
stos
clc
lock
frstor
scas
jmp
sbb
jmp
cmp
ret
movsb
in
push
ja
inc
addr16
add
or
outsb
shll
fists
mov
in
xlat
push
mov
cmc
aaa
in
pop
push
pop
pop
xor
xor
aad
rol
xchg
and
fadds
cld
das
incl
cmpsb
adc
adc
push
and
sub
mov
push
test
cmp
and
fnstsw
outsb
data16
jae
adc
mov
inc
inc
movsb
push
rcll
mov
mov
shlb
cli
or
cmp
push
push
sub
cli
add
inc
inc
scas
into
push
sbb
stc
mov
outsl
loop
inc
ret
fwait
or
das
std
std
jo
negb
rorw
or
jmp
stos
jl
arpl
xchg
hlt
push
fnsave
dec
dec
push
cmp
cmp
adc
jmp
dec
pop
sub
mov
pop
add
cmp
rcll
dec
arpl
fisubrs
aaa
jge
pop
mull
and
ret
psubsb
repz
out
sbb
cs
js
out
jmp
mov
int3
cmp
in
shl
cs
xchg
arpl
add
rcll
lret
movsl
inc
and
sahf
lds
push
or
sbb
mov
or
jae
outsl
idiv
and
test
dec
xor
sbb
rcll
inc
xchg
sar
inc
jp
push
sar
xchg
xchg
in
out
or
mov
sub
mov
imul
iret
movsb
xchg
dec
mov
mov
lods
sahf
mov
mov
xchg
jo,pt
outsb
in
mov
inc
outsl
leave
repz
sahf
mov
xlat
mov
inc
push
pushf
jbe
jae
sbb
bound
outsl
mov
pop
pop
sbbb
mov
leave
dec
ficomps
inc
or
insl
lret
mov
or
inc
xchg
in
and
jg
mov
xchg
push
dec
ficompl
inc
mov
push
cltd
repnz
fxch
test
dec
dec
test
ja
push
jmp
cmpsl
mov
add
std
xchg
fdivrl
imul
clc
leave
xor
jecxz
ja
flds
ss
outsb
jmp
mov
enter
sub
lahf
ss
pop
je
sahf
mov
mov
mov
mov
jae
lods
cmc
dec
push
repz
dec
in
int
test
out
add
ret
and
mov
xchg
xor
insb
lret
pusha
sahf
add
sub
jne
or
jg
xor
and
xor
mov
outsl
or
xor
pop
mov
fildl
pusha
cmp
in
mov
int
hlt
add
mulb
rcll
int
ljmp
outsb
fnsave
mov
in
insl
push
mov
dec
sub
mov
xor
mov
cmp
aam
mov
mov
fs
sbb
mov
inc
push
dec
mov
fdivl
je
fdivl
or
add
decl
sbb
and
stos
xchg
mov
lret
xor
lret
pop
add
mov
pop
insb
daa
push
sub
imul
imul
mov
outsl
inc
pop
jmp
dec
test
xchg
lods
dec
outsl
push
mov
mov
add
xor
sbb
mov
pop
stos
sub
or
dec
dec
mov
sbb
sub
orl
sub
or
loop
or
and
xchg
les
pop
lea
pushf
add
sbb
push
ja
sub
xchg
lods
fbstp
shll
dec
fistpl
cmp
pop
notl
jle
add
push
cmpsb
push
xchg
loope
cmp
push
pop
dec
or
xlat
pusha
xchg
jns
jmp
push
xchg
jnp
fsubrs
shrb
nop
aam
push
inc
call
enter
sbb
inc
mov
roll
jae
jge
dec
cmp
jl
shr
and
pop
add
test
jp
stos
dec
subb
mov
das
sub
in
cmpsl
movsb
adc
adc
cmp
mov
pushf
imul
mov
mov
jmp
pop
out
cs
adc
cmpsb
sbb
push
adc
int
sub
loop
adc
and
into
in
clc
and
sbb
mov
push
mov
push
fidivrl
lret
add
cmp
pop
lds
leave
mov
push
movsb
pushf
or
pushf
ret
ss
fimuls
adc
ss
fwait
mov
stc
jmp
cltd
mov
cmpsb
mov
and
xchg
sub
jmp
rolb
add
cs
rcrb
pop
cmc
dec
cmp
fbld
outsb
mov
int3
es
lcall
xor
jl
mov
hlt
nopl
mov
mov
movsb
sub
aaa
pop
cli
pop
inc
mov
xor
sbb
jecxz
add
push
and
dec
sbb
aam
aaa
or
xchg
lahf
cmpsl
push
cwtl
icebp
and
mov
mov
sahf
jg
shll
out
push
rcrb
add
add
lods
or
and
shlb
xchg
cmp
fisttpl
jg
imul
test
cmpsl
xor
mov
inc
test
jb
mov
mov
pop
in
push
xor
movsl
sub
and
imul
int3
stos
add
mov
jno
pop
jmp
fstl
fsubr
xchg
sti
sbb
aad
xor
js
aas
mov
xchg
fsubl
int
jns
pushf
hlt
shl
inc
sub
shlb
cmpsl
sub
pushf
fs
es
fs
adc
in
jno
xchg
inc
clc
pop
sbbb
pop
popa
adc
fistl
addr16
out
shll
cmpsl
sbb
or
aaa
inc
imul
and
mov
cmc
sub
sub
mov
pushf
mov
sub
into
fadds
notb
in
xchg
inc
movsb
stc
or
leave
mov
test
or
sbb
pushl
clc
and
mov
cmp
push
push
mov
xor
dec
push
leave
cmp
stos
jno
lcall
loopne
mov
arpl
jo
sti
adc
mov
jecxz
out
jnp
xchg
pushf
aad
adc
lahf
push
mov
stc
add
dec
sub
aam
orl
rcr
pusha
hlt
xlat
add
or
movsb
cmc
les
mov
and
xchg
cmp
nop
xchg
lret
cmp
addr16
pop
dec
mov
cmc
out
jmp
mov
dec
dec
sahf
scas
push
push
inc
pop
gs
enter
fisubs
and
jno,pn
lret
mov
loopne
movsb
add
mov
sar
js
shr
imull
xchg
jnp
or
add
in
out
rorl
sbb
mov
jp
cld
out
data16
out
cmp
mov
mov
adc
repz
sbb
call
aaa
aad
push
cld
add
movsb
imul
ret
xor
xchg
icebp
inc
es
negl
std
sbb
lds
lret
test
sbb
mov
mov
out
sub
or
adc
mov
loopne
sbb
stos
xchg
mov
dec
daa
ret
mov
mov
insl
pushf
pop
test
xlat
jno
je
outsb
ss
addl
aam
inc
pop
subl
outsb
das
into
ss
scas
popa
fiaddl
sbb
aad
inc
mov
mov
notl
xchg
cs
push
fstpl
call
cmp
shlb
test
xor
aaa
pop
int3
popa
cmc
inc
sub
out
sbb
aad
jl
shrb
inc
pop
inc
in
and
mov
sarb
bts
xlat
adc
repz
out
mov
and
mov
mov
dec
mov
es
push
or
stos
mov
rcr
dec
inc
mov
sub
jne
out
icebp
sub
sub
push
cld
inc
sarl
mov
pusha
mov
fidivrs
leave
cli
sub
push
sbb
shll
xor
sub
nop
xor
out
mov
jecxz
scas
cmp
pop
cs
adc
fimuls
sbb
mov
addr16
loope,pt
inc
xor
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
mov
jnp
negl
les
mov
das
mov
mov
popa
repnz
push
xor
pop
and
mov
fucompp
sub
adc
mov
mov
xchg
xlat
adc
shll
popa
rcrl
mov
cwtl
xor
rcrb
mov
loopne
lahf
repz
test
pop
fwait
aas
lods
sbb
ljmp
xchg
sarb
mov
xchg
pop
int
sub
or
push
sub
mov
xchg
leave
push
aas
xlat
push
mov
mov
outsb
inc
mov
xchg
test
outsb
inc
pop
cmp
test
xchg
or
add
inc
ror
add
sub
mov
sub
xorb
cmc
lret
xorb
xlat
and
mulb
sbb
in
in
cwtl
adcl
adc
sub
inc
xor
jae
adc
mov
mov
or
jg
xchg
or
negb
adc
into
test
scas
mov
outsb
adc
pop
mov
ljmp
jne
jae
lock
ret
pusha
dec
test
sbb
je
xchg
inc
fs
ret
mov
and
pop
and
pop
mov
lret
sbb
push
mov
and
hlt
push
dec
repz
and
xor
int
rcl
or
aaa
stos
or
inc
test
inc
and
sub
fisttpll
stos
and
pusha
jle
jb
xchg
dec
jb
rcll
ret
lret
pop
gs
popf
in
ret
mov
test
xchg
and
cwtl
in
jae
xor
cwtl
and
ja
sub
mov
dec
mov
mov
push
cmp
lea
test
lret
pop
cmp
sbbl
loopne
ss
cmpsl
add
sbb
and
jns
xchg
mov
xor
xchg
mov
mov
add
pusha
fiadds
ja
mov
sbb
repnz
sub
lock
aam
int3
out
lret
xchg
sbb
ret
xchg
mov
add
mov
cltd
nop
cmpsl
ficompl
lods
bts
iret
test
xchg
sbb
pop
ret
out
ja
inc
lret
jae
das
push
ficomps
das
fistl
push
out
pop
int
sti
pop
int
mov
ss
pop
dec
mov
call
adc
cmp
xchg
or
into
xor
mov
out
add
stos
inc
bound
lret
jo
cmpsb
xchg
xchg
cmp
aaa
push
xor
outsb
or
dec
andb
pop
int3
lret
in
adc
xchg
arpl
jbe
dec
cmc
into
push
bound
loopne
jne
cmp
sub
or
aas
bound
cli
xchg
pop
push
test
out
inc
inc
mov
pop
push
fldt
pop
mov
insl
and
popa
pop
or
fisubrl
mov
shll
cli
repnz
and
lods
imul
scas
mov
into
xchg
push
mov
pop
lods
inc
insl
xchg
out
lcall
repz
sahf
or
test
mov
jmp
test
lret
dec
dec
int
mov
aad
hlt
jne
inc
pminub
jo
or
ret
push
cli
dec
data16
xchg
xor
ficomps
int3
push
jns
add
mov
int
test
aas
sub
adc
in
adc
sub
std
daa
sbb
movsl
sbb
std
mov
sbb
popa
add
jl
sub
add
push
in
stc
mov
sbb
out
mov
cmp
pop
push
add
sbbb
mov
inc
push
pushl
call
leave
jne
rcl
outsb
jge
aad
aam
ffreep
add
mov
test
dec
mov
jge
push
xchg
fidivl
rclb
je
sbb
std
in
rep
jne
pusha
test
inc
test
cmp
mov
daa
inc
daa
leave
movsl
mov
aas
jns
add
xchg
mov
out
add
inc
lret
mov
popf
inc
cli
int
cld
cs
cmp
test
push
push
mov
sbb
les
pop
mov
imul
pop
xchg
addr16
mov
push
scas
cld
in
fstpl
pop
xchg
shr
mov
jl
mov
outsl
clc
orb
stc
or
aaa
icebp
pop
fbld
iret
js
pop
pop
pop
lock
jnp
scas
pushf
push
mov
shll
mov
inc
inc
test
popf
mov
dec
jae
subl
or
iret
jmp
sarb
adc
and
lahf
pushf
add
int
cmpsb
pop
cli
dec
push
orl
ret
nop
pop
mov
arpl
mov
push
loopne
cltd
fnsave
add
in
jp
popf
sbb
movsl
push
add
add
shll
dec
push
aaa
inc
mov
sub
mov
sub
imul
pushf
mov
pop
mov
outsl
and
ss
dec
add
pushf
dec
sub
jb
sbb
shll
sub
pop
adc
nop
scas
sub
cmp
stc
in
dec
mov
adc
rcrl
inc
cltd
movsb
add
icebp
jge
cltd
ja
xchg
xchg
fcomi
xchg
enter
sub
leave
cmp
das
dec
mov
imul
cmp
cmp
scas
mov
cmp
stc
hlt
sub
fbld
sub
aaa
imul
xlat
insb
jnp
aas
pop
idiv
test
push
adc
ret
out
push
lds
mov
jbe
sbb
jp
sahf
push
orb
fcoml
fisttpl
repnz
pop
xorl
cmp
xor
inc
adc
mov
push
rorb
mov
xor
out
push
and
insb
es
adcl
mov
imul
cmpl
pop
pop
cmp
jecxz
xchg
test
sbb
ja
inc
fwait
and
mov
lret
je
mov
adc
xor
fs
jb
incb
repz
ret
add
pushf
sbb
mov
pop
cmc
cltd
rol
repnz
and
loope
jmp
fsubr
scas
shlb
mov
cmp
packsswb
cmp
out
dec
and
popa
dec
dec
scas
mov
jne
fists
xchg
add
and
inc
cmp
cmp
aaa
movsl
sbb
pushf
lea
sarb
js
sarb
repnz
cmp
xor
mov
dec
pop
fs
cmp
push
lret
xlat
sbb
pop
pop
fcoms
xchg
adc
data16
test
movsl
cmp
inc
psllw
push
test
scas
adc
scas
ret
xlat
dec
jae
add
cwtl
loopne
das
add
pop
mov
sti
add
xchg
int3
arpl
mov
sti
pop
mov
dec
mov
adc
scas
rclb
mov
cld
popa
test
sbb
lcall
xchg
cmp
test
inc
lods
les
data16
pop
movl
push
lret
xchg
add
and
jo
les
add
push
hlt
lea
mov
aas
mov
inc
movsb
ret
idiv
sub
sbb
adc
lea
ret
dec
bound
hlt
mov
fidivrs
cmc
subb
icebp
mov
cs
pop
pusha
mov
pop
out
jecxz
mov
loopne
inc
and
dec
push
sbb
inc
cmpsb
adc
inc
xor
shll
xor
fldcw
xor
pop
in
stos
pop
lret
dec
adc
rorl
xchg
mov
mov
das
icebp
call
fwait
arpl
xor
xchg
jecxz
test
mov
leave
or
fsubr
adcl
movsl
sub
mov
xor
ret
mov
mov
cmp
pop
jnp
jp
xlat
arpl
in
jne
out
jmp
fsub
fdivrp
adc
push
mov
jl
mov
mov
and
sti
repz
push
mov
and
sahf
mov
mov
cs
hlt
sub
xor
ficompl
mov
int3
xchg
jns
jo
adc
jmp
and
into
stos
enter
mov
push
mov
sbbb
push
xchg
adc
movsb
cmp
mov
push
push
mov
mov
fisttpll
lods
xchg
adc
jne
iret
xchg
add
imul
mov
sub
insl
dec
mov
add
mov
sub
int3
pop
idiv
test
shll
pushf
cmp
xor
and
les
sahf
and
jne
xor
in
cwtl
push
cli
mov
mov
add
ffree
or
pop
xchg
fiadds
popa
clc
mov
sbb
add
push
das
addr16
dec
cmpsb
mov
cmp
das
fnstsw
mov
mov
jl
addb
in
divl
scas
pop
lods
es
sti
addb
and
cmpl
add
jo
mov
orl
in
jns
push
push
je
fs
adc
fbld
leave
cs
push
movsb
sbb
inc
ljmp
jmp
cmp
repz
sti
xchg
mov
jmp
inc
dec
aas
jl
arpl
xchg
mov
or
popa
fisubs
scas
adc
js
sub
imul
ja
or
lods
push
adc
cmp
pop
fdivp
orl
adc
xchg
cmp
mov
das
aam
dec
dec
xor
xor
dec
lods
fwait
xchg
test
lcall
leave
dec
pop
mov
aaa
mov
clc
ret
inc
inc
std
or
loopne
sbb
add
cmp
not
push
inc
adc
adc
inc
in
pop
mov
ss
out
roll
imul
fimull
mov
cltd
test
arpl
cld
adc
sar
or
loop
mov
imul
xchg
popf
out
mov
jmp
jmp
mov
mov
imul
ljmp
aas
cmc
rorb
push
push
xchg
add
mov
icebp
call
fisubrs
out
pop
sti
es
dec
pop
cmp
add
or
andb
jle
add
pop
cltd
lea
shlb
inc
xchg
mov
stc
pop
and
imul
add
dec
test
xchg
ret
pop
inc
dec
call
nop
or
pusha
and
insb
mov
into
clc
jl
outsb
and
pop
push
stos
lods
pop
jnp
mov
dec
xor
jmp
out
call
daa
xor
data16
fisttps
fstl
push
fs
jae
fimuls
push
sub
mov
push
nop
dec
jno
adc
enter
cli
out
add
mov
es
xchg
loop
fwait
push
cli
into
cli
out
mov
shrl
scas
int
mov
dec
add
insb
clc
xor
inc
fs
mov
loop
or
rcl
or
jge
incl
fstl
rcll
mov
in
and
mov
popl
aaa
add
mov
dec
lods
repz
xchg
pop
in
icebp
inc
sbb
imul
mov
mov
call
cmp
pop
adc
pop
insb
mov
sub
shlb
sahf
mov
jne
push
push
dec
scas
jge
clc
sub
ret
mov
das
mov
ds
mov
stc
dec
lock
sub
mov
sub
cwtl
in
mov
pusha
icebp
int
fldt
rolb
adc
inc
sbb
mov
aad
inc
pop
call
xor
test
pusha
jae
cmp
loop
loope
mov
orl
call
sub
out
sbb
in
ljmp
jne,pt
and
jecxz
mov
iret
stos
mov
pop
aad
xchg
sbb
pop
fildl
add
out
sub
loope
in
sbb
mov
xchg
pushf
inc
pop
cltd
xchg
push
sbb
mov
cmpsl
xchg
push
clc
jmp
jae
cltd
inc
and
js
aad
cli
push
rolb
cld
or
dec
xlat
in
lahf
push
xorl
stos
jne
sbb
and
dec
call
sub
dec
in
icebp
inc
jle
pop
outsl
push
movsb
lret
inc
cld
es
pop
push
clc
pop
mov
xchg
scas
lea
lea
inc
push
cli
scas
imul
ds
xor
sahf
lock
add
add
mov
repz
cmpsb
cwtl
xchg
sub
test
jnp
pop
inc
rcll
cmp
fwait
pop
outsl
rorb
xchg
dec
fisttpl
dec
das
jns
xchg
xchg
dec
jmp
verr
inc
cli
insl
inc
daa
sti
and
push
or
ss
dec
push
or
insb
cmp
xlat
mov
cmpsl
nopl
adc
lods
mov
mov
fisttpl
lds
jno
ljmp
fsubp
dec
sbb
arpl
jmp
adc
sbb
out
mov
in
in
jno
or
lret
mov
mov
mov
and
mov
ret
sub
pop
pop
xchg
and
pop
add
adc
std
or
jne
push
lahf
lods
add
and
mov
pop
dec
inc
cli
adc
add
int3
mov
movl
jns
stc
dec
xor
dec
xchg
jg
sbbl
fdivl
push
in
and
aad
pop
xor
jbe
dec
cwtl
jmp
punpckldq
rorl
jle
rorl
jmp
ficoms
jb
filds
in
sbb
pop
fneni(8087
xchg
int3
mov
sub
or
xor
ficomps
repnz
int3
xchg
xor
inc
repnz
pop
nop
mov
test
inc
mov
gs
cwtl
jle
sub
jge
fdivs
mov
cmp
xor
xor
test
push
lock
inc
popf
daa
in
mov
cmc
inc
xor
jg
aam
mov
xor
pop
jmp
clc
mov
mov
jp
negl
insb
out
ficoms
pop
lods
and
andw
mov
xlat
mov
ljmp
jo
adc
push
lods
pop
mov
dec
lcall
cld
leave
outsb
sti
or
push
jbe
sub
mov
inc
popf
adc
clc
ds
sbb
sbb
cmp
sub
mov
loop
andb
iret
cmp
inc
loope
xchg
inc
jno
dec
lods
and
push
inc
aas
mov
cli
dec
test
sbb
clc
push
sub
inc
ret
mov
push
push
fisttpll
fs
xchg
movsb
jae
mov
and
stos
andl
push
xchg
cmp
xchg
or
lea
lret
daa
pop
in
lods
faddp
rcll
jge
fsub
add
jo
jge
cli
cmc
pop
and
pop
loope
cld
ret
loope
lds
mov
mov
inc
mov
dec
add
clc
idivl
xlat
add
iret
xlat
fstpl
stos
gs
fdiv
dec
mov
decl
inc
mov
das
popa
mov
xchg
aas
inc
and
push
data16
daa
push
mov
push
mov
sarl
dec
dec
xor
cs
leave
xchg
jnp
jae
xchg
repnz
insl
daa
repnz
mov
ret
dec
jle
enter
movsb
mov
test
sti
push
add
aaa
inc
pop
sahf
cwtl
sarb
repz
inc
mov
mov
mov
inc
jmp
xchg
push
out
es
popf
xchg
addps
dec
sti
roll
mov
insl
mov
arpl
dec
inc
add
add
hlt
dec
push
mov
insl
push
mov
and
push
aas
and
in
leave
pop
loope
pop
aas
pop
fildll
movzwl
movsl
out
mov
inc
insb
mov
das
add
fisubl
dec
add
in
ret
xchg
lret
shll
push
add
jbe
dec
hlt
iret
add
mov
mov
pushf
mov
stos
fcoml
hlt
test
mov
push
lret
jbe
xor
rcll
mov
mov
ja
aam
mov
lds
inc
outsb
popa
or
imul
push
xor
sbb
insb
push
insl
xor
js
lahf
bound
and
mov
jnp
push
ror
mov
dec
in
in
icebp
dec
cld
loopne
testb
inc
movsb
jnp
aaa
mov
xor
out
fwait
ss
pop
mov
xorb
mov
adc
sub
add
pop
rorl
cmpsl
push
lds
push
push
xorl
sub
jo
xchg
sub
scas
and
into
mov
dec
ficoms
ds
stos
mov
les
mov
sbbl
jl
adc
xchg
push
stos
pop
outsb
add
inc
fstpl
inc
sarb
mov
or
xor
loope
das
arpl
fildl
cmp
jnp
mov
adc
addr16
pop
mov
xchg
lret
jmp
and
mov
adc
sbb
in
xchg
shl
lcall
data16
leave
icebp
pop
inc
push
insl
mulb
rolb
cs
push
jbe
jge
and
jnp,pt
lcall
rcrb
jb
pop
xchg
xor
add
inc
daa
pop
dec
dec
iret
mov
sub
xchg
subb
rolb
push
xchg
pop
test
jo
dec
in
gs
andl
pop
sub
mov
pop
mov
inc
shrl
lret
pop
lea
inc
js
or
movsb
ss
cltd
and
inc
js
iret
dec
push
jle
mov
test
hlt
insl
aad
cmp
out
je
jae
adcl
inc
adc
mov
mov
add
sbbl
testl
in
or
add
jb
xor
fcmovne
adc
jmp
rcll
in
movsb
andb
xor
mov
in
repz
mov
mov
cmp
jmp
push
and
cmpsl
ret
cltd
cmp
cmp
sahf
imul
sbb
xor
into
les
push
icebp
pushf
aaa
cmp
jnp
arpl
cmp
lds
aam
insl
mov
cld
popa
dec
push
add
loope
mov
into
xor
insl
pop
in
jns
out
push
jo
cs
pushf
pop
mov
adc
inc
idivb
pop
cmc
pop
ja
mov
mov
push
ds
cmpsb
xchg
cmpsb
or
lods
xchg
popf
sbb
adc
or
pop
mov
pop
lods
int3
inc
clc
inc
push
or
iret
jg
mov
in
mov
mov
jle
test
or
sbb
or
xchg
fidivrl
pop
sbb
inc
ljmp
mulb
repnz
dec
repnz
int
mov
test
push
mov
xor
dec
pop
cmp
mov
jecxz
lahf
imul
cltd
cmc
push
repz
xorl
pop
inc
mov
int
test
add
out
cltd
push
bound
push
adc
pop
cmp
movsl
out
repnz
out
jo
sahf
and
mov
sub
je
stc
fdiv
cwtl
stc
adc
jmp
sahf
add
icebp
add
dec
mov
in
cwtl
das
jbe
and
xor
sbb
popf
mov
cmp
or
dec
mov
pushf
sub
mov
sbb
cmpsl
inc
dec
mov
mov
sbb
sti
mov
mov
jae
loop
roll
in
xchg
shrl
leave
lea
mov
std
pop
insl
nop
shll
jmp
sbb
into
and
xchg
imul
add
mov
mov
mov
lcall
or
popa
sahf
inc
mov
lock
fldcw
mov
adc
inc
jns
mov
es
inc
jne
add
insb
adc
fiadds
rclb
lret
mov
push
js
cmp
pop
jmp
outsl
call
xor
xor
clc
lahf
aad
or
push
push
and
ss
and
dec
insb
sbb
andb
movsb
lret
xchg
jnp
in
js
mov
cmpsb
popf
ficoms
mov
repz
pop
call
mov
cltd
sbb
adc
or
xor
dec
pop
xchg
sub
inc
adc
call
adcl
mov
shll
test
les
stos
jge
xor
mov
pop
int3
jo
or
jae
mov
push
dec
pop
or
lahf
pop
pushf
mov
lock
mov
orl
lret
push
sub
loope
int
inc
mov
push
fildll
mov
xor
inc
rcll
repnz
mov
mov
out
or
mov
shr
movsl
xchg
ljmp
and
adc
shrd
jge
test
loope
cltd
adc
outsb
adc
test
cmp
and
adc
fsts
pop
test
adc
bound
lock
nop
aas
repnz
daa
nop
sahf
push
repnz
fsubrs
notb
jno
cmp
xchg
push
fmull
inc
fs
fisubrs
rcl
out
sbb
push
adc
loope
xor
jbe
or
sub
loop
addr16
sub
and
push
rolb
and
mov
std
data16
loopne
lcall
xchg
push
xchg
add
mov
rclb
pop
mov
lret
push
and
rcll
or
call
fs
push
sub
lock
mov
lahf
test
mov
cmp
enter
mov
scas
mov
cmp
ds
arpl
sbb
out
nop
call
push
stc
cli
das
push
cmpsb
ja
nop
popf
sub
mov
rolb
inc
ret
cmp
outsl
mov
repnz
push
pop
sarl
inc
xchg
in
pushf
rcrl
mov
xor
int3
mov
mov
rorb
cmp
mov
sbb
or
dec
inc
and
or
aad
mov
sbb
fbstp
pusha
aad
inc
lods
int3
mov
jae
adc
into
imul
cmpsb
cmp
mov
cmpl
jecxz
std
mov
lcall
ret
lods
scas
cs
stc
fwait
cmpsl
pop
sub
es
xor
out
call
sub
and
and
cld
add
xor
jns
and
in
test
into
test
jb
mov
out
xchg
or
jp
xor
sbb
stos
adc
fs
add
add
add
cwtl
cwtl
adc
lds
loop
xor
subb
pop
add
ret
int
aaa
negl
xor
jns
imull
int3
xor
mov
mov
push
add
ret
sbb
cmpl
adc
and
int
movsb
fmuls
mov
push
xchg
inc
in
lahf
cmp
stos
push
add
xor
imul
movb
in
sbb
push
add
lahf
loopne
in
dec
jb
mov
cmc
sub
test
and
mov
sbb
clc
rolb
sbb
mov
dec
pop
push
mov
cmpsl
jecxz
daa
and
push
sti
jbe
cmp
lcall
sbb
dec
ret
or
push
pop
sub
loope
imul
stos
data16
cmp
jmp
jmp
sbb
es
xchg
mov
and
stos
mov
mov
aaa
popa
loopne
cli
out
enter
popf
std
or
aas
mov
div
adc
or
repnz
dec
scas
jmp
in
fistpll
ret
xor
xchg
loop
or
aad
dec
jg
dec
xor
mov
cld
out
fimull
mov
and
dec
inc
cli
rorb
in
push
jnp
pop
in
xchg
push
sar
xchg
and
scas
fbstp
cltd
test
arpl
mov
into
dec
arpl
pop
fwait
and
lds
and
xchg
mov
pavgw
xchg
pop
push
subl
stos
inc
dec
in
cltd
cmpsl
sti
movb
push
mov
jbe
and
push
inc
arpl
outsl
out
mov
or
pop
gs
mov
aaa
pop
leave
mov
push
jle
mov
outsb
inc
sbbl
pop
gs
ss
or
xchg
adcb
popl
iret
in
sbbb
mov
repz
movsl
adc
xchg
dec
fistpl
rcl
jecxz
mov
cli
and
stos
std
mov
pop
sbb
pop
pop
xchg
cld
gs
lcall
ds
adc
and
arpl
ucomiss
fnstenv
in
cmpsb
dec
mov
fsub
jne
jmp
aam
ret
mov
test
ja
jnp
add
pop
lcall
call
push
dec
je
add
int3
ja
repz
jnp
subl
adc
jns
test
push
dec
sub
std
ds
lds
mov
pop
and
jns
sub
gs
jmp
jbe
stos
mov
xchg
xchg
shrl
sbbb
stos
push
call
repnz
lcall
shll
gs
pop
xorl
xchg
addr16
and
cmpsb
fbstp
xor
test
mov
in
sub
cmp
notl
inc
int3
mov
mov
push
sub
adc
popf
inc
push
mov
sub
xchg
cmpl
push
mov
les
push
ficoml
xor
fildl
add
rcl
sbb
sub
fs
push
idivb
lock
pop
outsb
mov
add
jne
scas
jo
jg
enter
leave
xchg
test
arpl
stos
cwtl
jl
xorl
dec
lods
xchg
es
call
cld
and
js
cld
sti
jecxz
rcrl
mov
movsb
ret
xchg
xchg
sbb
ja
or
aaa
divl
sub
and
pop
das
pop
les
pop
xor
insb
cmp
into
das
clc
or
insl
fsubrs
rcrb
stc
push
jbe
cmp
cmc
scas
aas
mov
jle
fdivp
fmul
mov
mov
xor
jp
mov
nop
cmp
mov
fcomps
mov
loopne
inc
sub
sbb
cwtl
insl
outsl
mov
shlb
add
fwait
ret
fidivrl
push
popf
pop
int
dec
cmpsb
dec
xor
dec
jno
mov
cmp
rcll
das
push
shr
out
daa
jne
nop
dec
cmc
sub
fdivrl
cmp
in
cmpb
loop
repnz
xor
push
ficoms
test
stos
cld
iret
cltd
test
jmp
repz
xorl
cmpsl
xchg
mov
and
out
push
xchg
inc
scas
inc
aam
dec
and
sub
mov
cmp
imul
pop
jp
push
sahf
rolb
out
insb
add
cmp
lret
adc
push
jge
mov
lcall
adc
or
sub
adc
lahf
and
jge
inc
xchg
je
sahf
scas
loopne
lret
push
sbb
cmp
mov
add
xchg
stos
add
push
sahf
sbb
or
pop
and
fistpll
insl
cmp
xchg
mov
push
mov
scas
inc
mov
aaa
cmp
push
add
jno
adc
dec
fnstsw
push
test
dec
out
mov
dec
insb
inc
fwait
pop
clc
adc
cmp
ds
addr16
lea
mov
pop
push
divb
pop
dec
or
add
test
sbb
or
fistps
bound
mov
inc
cmp
arpl
ja
cmp
push
lods
fstl
sub
mov
jne
cmp
gs
out
mov
mov
pop
bound
mov
pop
mov
push
lods
inc
iret
mov
in
dec
cs
push
lock
mov
dec
sbb
cmp
lods
lret
pop
jno
sub
mov
in
aam
stos
popa
inc
pop
mov
ficoms
or
pop
xchg
out
in
mov
cmpsl
push
fidivrl
jns
jmp
and
ljmp
cmp
lret
inc
jb
cmp
or
add
js
popf
out
stos
fs
inc
pop
sub
jo
and
pop
sbb
dec
mov
repz
std
pop
dec
mov
aaa
add
sbb
in
or
ljmp
jbe
pop
bound
inc
jg
xchg
out
fs
mov
xchg
push
pop
mov
cmp
stc
andl
or
imul
inc
cmp
jmp
adc
rorb
add
mov
cmpsl
test
ret
xor
xchg
enter
mov
leave
jle
cmp
int
fsub
nop
into
ret
cs
mov
jnp
add
xchg
fisttps
addr16
xchg
incb
mov
nop
dec
mov
arpl
inc
or
jl
mov
add
mov
xchg
es
cld
and
sbb
stos
scas
xchg
mov
jnp
push
cmpl
aaa
or
icebp
xchg
jo
popl
pop
xchg
pop
stos
daa
push
pop
fs
xor
jne
lea
xor
adc
cltd
mov
or
fnstenv
jae
sub
pop
sub
fs
pop
imul
ret
incb
adcl
pop
aas
or
mov
or
shl
fistl
sub
clc
in
jnp
fdivl
mov
mov
dec
dec
jb
sti
lahf
mov
jns
icebp
test
sub
je
aad
imul
imul
cltd
fists
jbe
aam
push
mov
sub
in
rcrl
and
jb
gs
ret
mov
jge
jb
scas
das
lods
dec
shll
or
jp
dec
dec
cld
cmp
rol
jnp
aad
pop
aam
xchg
gs
dec
cltd
nop
fisttpll
movl
xlat
mov
inc
or
popa
mov
mov
dec
test
sbb
out
push
ljmpw
and
jb
fmul
jle
dec
js
push
pop
sbb
jge
imul
mov
xor
jbe
mov
jle
std
cltd
xchg
vpmulhuw
scas
aam
sbb
cltd
inc
push
int
jo
mov
and
mov
ja
aad
sub
xchg
pop
push
mov
xor
xchg
insb
jnp
imul
jmp
fmull
xchg
imul
clc
fistps
out
aas
lret
rclb
adc
enter
iret
out
sahf
dec
cs
mov
mov
or
inc
push
shll
insb
xor
jnp
movb
hlt
icebp
push
mov
repnz
fsubp
push
xchg
mov
pop
fmuls
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
iret
or
or
fnstsw
call
dec
push
sub
jmp
sub
repz
arpl
pxor
inc
mov
test
cmp
xchg
stc
dec
ret
xchg
sbb
and
push
or
adc
stos
jb
mov
jb
ljmp
je
inc
push
lahf
xor
jae
stc
xchg
out
and
push
and
loope
scas
scas
cmpsl
mov
fisubs
ret
fnsave
cmp
xor
xor
cmp
mov
cld
or
xchg
add
rorl
cmpsb
push
pop
dec
out
outsl
push
dec
or
cli
ds
cmp
scas
jecxz
jne
faddp
iret
jbe
add
fidivrl
cltd
ljmp
aad
push
mov
aad
add
fistpll
xchg
cmp
es
sbb
fucomip
int3
gs
popa
ret
pop
stos
fistpll
xor
push
cmpsb
shlb
in
jno
sbb
ljmp
jns
mov
jno
xchg
hlt
push
fwait
pop
or
mov
xchg
mov
imul
fmul
in
lret
inc
xchg
pop
sub
or
pop
push
mov
insl
or
outsw
mov
jl
ffreep
in
push
fwait
in
insl
enter
scas
or
cmpl
add
xor
mov
or
mov
push
mov
leave
mov
mov
adc
mov
pop
or
pop
std
es
std
out
daa
jno
loop
ss
sahf
cmp
dec
es
jge
sub
arpl
mov
sub
ljmp
dec
push
xchg
cmpsb
mov
mov
clc
jae
sahf
adc
mov
sub
outsb
ffreep
sbb
ret
mov
data16
test
mov
pop
shr
fcmovbe
xchg
mov
repnz
insb
in
push
push
mov
fdivrl
daa
xchg
dec
push
aam
gs
mov
sbb
xchg
fdivs
out
push
add
out
mov
cmpsb
lds
dec
jb
pop
pusha
pushf
fstpl
push
ja
and
add
test
push
xchg
mov
jge
xchg
hlt
cmp
insl
je
adc
mov
jl
into
repnz
stc
cmp
mov
jns
push
push
imul
xchg
or
fdiv
ret
ss
test
lods
lcall
fnstsw
pop
loop
ret
cwtl
pop
inc
in
mov
add
xor
outsl
test
sub
scas
or
movsl
imul
adc
add
and
std
into
mov
stc
js
sti
mov
das
sub
jmp
jg
pop
adc
and
dec
pop
scas
data16
sar
cmp
xchg
and
movsb
or
addr16
sbb
xor
push
add
mov
push
mov
cmp
out
lcall
icebp
xor
popa
mov
das
mov
outsb
fnstcw
idivb
push
ljmp
lcall
nop
daa
cmpsb
movsb
xor
push
repz
push
addb
ret
lea
jnp
adc
ret
dec
test
outsl
cmc
mov
mov
ljmp
negb
push
sub
cmpsb
les
rclb
mov
cmp
insl
stos
and
and
imul
fsts
push
roll
and
ljmp
inc
std
mov
sarb
or
push
ffreep
mov
aam
fmuls
jg
pop
idivl
push
mov
gs
mov
xchg
hlt
aas
lds
push
xor
arpl
fldl
orb
add
in
or
sti
cs
arpl
loopne
dec
mov
inc
cmp
inc
pop
xor
daa
mov
leave
mov
lret
sub
sahf
or
mov
repnz
or
loop
xchg
pop
in
push
pop
popa
xchg
and
mov
xor
pop
daa
mov
mov
pop
out
mov
ja
mov
adc
pop
and
lea
cmpsl
pop
pop
les
enter
mov
push
nop
pop
sti
imul
add
fwait
arpl
roll
cmp
imull
mov
out
mov
cli
xchg
mov
push
pushf
shl
mov
dec
cltd
push
mov
fbstp
xchg
inc
ret
into
push
sub
shlb
rorl
or
or
jns
jecxz
popa
movsb
inc
test
cmp
outsb
out
add
test
ds
fucomi
rcrl
xchg
inc
in
cmp
inc
jbe,pn
or
add
dec
inc
sbb
faddl
mov
dec
inc
xchg
movsl
add
xor
lahf
push
push
mov
sbb
mov
sub
or
jg
pop
and
ret
out
xchg
cwtl
stc
cld
mov
mov
ljmp
mov
jno
cmp
adc
popf
jp
pop
lcall
inc
sbb
sub
xor
jb
push
idivl
outsl
cwtl
ret
adc
pop
mov
sub
push
cwtl
jnp
lret
lock
nop
std
enter
mov
dec
cmc
cmc
cmpsl
insb
rorb
cwtl
push
fldenv
pop
sub
aas
pop
sbb
mov
push
mov
mulps
lret
xlat
or
mov
cwtl
mov
jl
mov
dec
std
pop
mov
jecxz
in
iret
xchg
orl
popf
icebp
jb
test
loop
fs
pop
xchg
xchg
inc
stos
mov
sbb
cli
mov
add
mov
dec
xor
sub
aad
movsl
pop
xor
clc
pushf
pushf
push
push
push
and
clc
or
inc
aas
lahf
mov
sbb
lea
sub
adc
shrl
mov
lret
mov
rcrb
adc
sbb
push
jge
icebp
jno
pop
pop
sbb
sub
loopne
push
test
sahf
cmpsl
enter
pushf
sub
cmp
out
shr
sbb
lea
push
test
insl
dec
pop
adc
aad
push
in
push
or
lret
push
xor
jl
je
xchg
xchg
mov
fcompl
aad
pop
sarl
imul
ds
jns
shl
shr
jle
scas
lcall
push
push
cmp
jo
cmc
sbb
lock
or
icebp
pushf
mov
mov
fldlg2
into
or
mov
cmpsb
xchg
dec
jmp
test
pop
xchg
add
or
xor
lcall
sub
shll
insl
inc
gs
repnz
cli
imul
popa
fidivrl
pop
push
adc
mov
int3
cs
stc
jecxz
addb
push
jg
rcr
data16
xchg
xor
cltd
jle
jno
and
adc
enter
push
adc
movsl
or
sub
xor
inc
sub
push
fdivrl
dec
jge
or
mov
pushf
add
mov
fsts
mov
push
mov
push
loop
int3
or
rclb
test
pushf
pop
pop
out
mov
pop
stos
movsb
dec
mov
test
sbb
int
mov
imul
es
inc
push
add
or
loop
jb
imul
dec
cmp
mov
popf
ret
fistl
push
and
mov
ret
mov
movsb
popa
mov
ljmp
cmp
loope
test
hlt
mov
xchg
mov
repnz
or
push
xor
ret
mov
aad
scas
push
jle
add
loopne
jg
lds
jge
jge
iret
dec
xorl
cmpsb
push
out
mov
cmpsl
cmpsb
test
pusha
mov
or
lahf
cmp
add
jl
shrl
and
jge
mov
subl
and
push
mov
lahf
lret
push
sbb
mov
inc
cwtl
sub
jle
xchg
sbb
fwait
incb
lahf
push
lret
mov
jmp
sub
mov
adc
mov
mov
mov
arpl
das
std
sub
je
dec
mov
arpl
stc
pop
int3
add
add
lods
push
inc
jne
or
test
xchg
out
xor
loopne
jg
cmpsl
jae
sti
or
popa
scas
push
add
gs
sbb
ret
sub
addb
or
sbb
mov
stc
dec
pop
leave
shlb
stos
fdecstp
fs
gs
jnp
popa
pop
aaa
sub
sub
pushf
push
push
mov
inc
pop
test
dec
ficompl
mov
lock
xor
mov
cltd
out
lahf
leave
cmp
dec
jmp
push
sub
lods
adc
cmp
jp
cmp
pop
inc
lahf
lret
jge
daa
mov
mov
adc
mov
or
sub
add
dec
orb
mov
aas
pop
or
mov
push
das
fdivp
jnp
out
adc
pop
cmc
dec
jp
pop
rorl
out
mov
xorl
pop
aaa
jne
movsl
imul
xor
cmovae
daa
sub
mov
adc
xor
xor
add
mov
xchg
xlat
push
test
inc
test
popa
fsubl
arpl
ja
adc
push
cmp
aaa
test
es
adc
imul
xlat
jb
jp
jnp
addps
mov
ljmp
mov
add
push
scas
loope
mov
sub
aas
stos
pop
push
sahf
push
in
xor
popf
cmc
mov
cli
insb
lds
jmp
out
and
sub
hlt
sbb
cld
dec
mov
gs
movsb
int
mov
ja
scas
mov
fistpl
loopne
ror
out
cmc
ds
mov
sbb
adc
cmp
push
pop
cmc
pushl
popa
test
inc
js
xchg
dec
stc
fstpt
inc
fistpll
dec
clc
ja
roll
mov
mov
mov
outsl
jp
das
mov
das
popa
pop
test
std
scas
mov
push
push
jmp
mov
int
cmp
inc
or
push
pop
jb
push
enter
lcall
arpl
jb
lret
inc
push
lods
mov
xor
or
imul
jecxz
adc
lahf
call
ja
hlt
mov
rclb
push
xchg
dec
adc
mov
jno
mov
fmul
mov
push
in
lahf
sub
adc
rolb
push
fcmovnbe
mov
and
ds
out
clc
jne
scas
into
adc
and
sbb
test
mov
stos
cmp
cmp
mov
ret
fdivrl
aam
mov
lods
add
pop
push
add
jnp
dec
mov
lds
in
and
imul
push
mov
push
mov
dec
adc
push
push
mov
pop
push
rorl
push
rcrl
cmpb
xor
adc
and
jae
dec
ret
mov
data16
hlt
ret
push
add
shrl
movsl
ss
dec
push
orl
in
jg
mull
push
gs
sub
and
push
jo
pop
jle
jl
ljmp
out
xor
sub
adc
pop
inc
js
inc
mov
push
sti
mov
call
push
insb
sub
add
xor
ret
or
lret
fidivrs
ljmp
inc
outsb
inc
jp
mov
mov
test
cmp
mov
popa
push
or
cwtl
push
mov
pushf
push
sub
inc
jo
das
into
outsl
into
add
aas
push
xor
lods
mov
xchg
loopne
mov
sub
imul
fisttpll
dec
add
cmp
leave
push
movsb
adc
inc
lds
les
xchg
cmp
cmp
mov
push
inc
sbb
jmp
nop
push
sub
jge
sbb
inc
call
fadd
jne
loope
xchg
dec
or
xorl
lret
incb
out
jno
sbb
mov
aam
sub
mov
stos
add
int3
jns
inc
les
add
nop
add
pop
movb
jb
or
stos
pop
sub
mov
icebp
aaa
fdivrl
fmull
fstpt
cmpsl
in
cltd
es
adc
sahf
sbb
dec
ds
adc
push
adc
push
and
in
xor
das
pop
les
cli
jp
cli
mov
jbe
stos
int
and
clc
jnp
ljmp
aaa
sbb
bnd
lods
aam
jne
js
xchg
out
mov
adc
lahf
mov
sub
rolb
mov
mov
mov
rclb
fisubrl
cltd
in
jae
jne
outsb
sub
in
pop
jne
sahf
jle
rcrl
in
xor
dec
stos
jae
cld
xor
pop
push
push
cmpsl
hlt
icebp
xchg
loope
sahf
add
pop
movsl
lret
test
inc
xchg
pop
into
test
dec
clc
test
xor
fwait
jmp
xchg
cmp
rcll
sub
lods
fwait
in
push
cli
pop
lods
mov
mov
call
popf
test
jmp
hlt
xchg
dec
rcrw
lcall
push
pop
cmp
mov
addr16
repz
pop
lahf
push
out
pop
lret
jecxz
lds
add
inc
push
mov
in
add
pop
sbb
out
ret
dec
inc
in
popf
or
bound
pop
clc
loop
ljmp
out
stos
insl
or
outsl
cmc
xlat
adc
adc
ds
cld
pop
lret
in
push
lret
sub
icebp
scas
js
lcall
adc
aam
push
cli
lock
shlb
xchg
mov
mov
ss
add
add
mov
jb
jns
pop
xchg
into
loop
pop
mov
xchg
mov
and
or
adcl
sbb
int
push
pop
push
inc
and
aad
adcb
sbb
into
cmpsb
ret
push
push
arpl
add
loope
pop
mov
push
or
loop
call
insl
hlt
enter
pop
fcmovu
std
dec
sub
and
popa
stos
sti
ja
aas
inc
fwait
lock
xor
ret
and
xchg
inc
push
xor
loope
cmp
decb
test
nop
lcall
test
mov
gs
or
std
adc
jmp
jg
cs
and
pop
push
std
rcll
xor
mov
mov
stc
popf
imul
dec
or
fimull
cs
popa
cmp
popfw
imul
jns
cmp
popf
popa
inc
arpl
test
inc
fwait
popf
inc
fcmovnu
decl
adc
pop
cmp
xchg
mov
push
xchg
sbb
js
push
scas
sub
mov
test
lcall
push
cld
pop
cld
es
arpl
jge
xchg
cmp
cmp
or
sub
inc
test
inc
ljmp
js
fwait
hlt
je
jnp
jmp
cs
lods
js
out
bound
jno
jl
pop
add
push
and
push
jo
inc
xchg
cwtl
hlt
fwait
stos
mov
cmpb
mov
mov
test
fs
sbb
sub
inc
mov
clc
mov
mov
jne
js
xchg
dec
lea
jne
mov
add
and
and
cmp
cmp
mov
inc
add
dec
jle
nop
mov
cmc
and
outsl
mov
cwtl
add
jl
jbe
mov
fcmove
jae
mov
outsl
hlt
cli
addb
aad
mov
loop
dec
jb
pop
push
pop
dec
and
sub
dec
jbe
inc
push
and
ljmp
ss
and
sbb
loope
mov
pushf
aaa
imull
inc
mov
or
mov
dec
hlt
outsl
xchg
loopne
lods
mov
xchg
test
sbbl
xchg
xchg
cmp
mov
int3
mov
rcll
jne
nop
mov
inc
cmpb
mov
ret
mov
xor
push
inc
push
fistl
lea
mov
lret
imul
jbe
out
xor
adc
bound
bound
jecxz
push
ljmp
test
pop
sbb
or
sbb
leave
loop
out
pusha
and
ds
lea
jecxz
pop
andl
mov
mov
sub
scas
cmc
dec
leave
sub
xchg
enter
out
xchg
cmpsl
mull
xchg
mov
aad
aad
sti
std
movsb
aas
jmp
clc
pop
cli
and
iret
fists
push
leave
sti
sub
inc
mov
loop
popa
cmpl
cmp
pop
xlat
jbe
rolb
jnp
lret
jbe
icebp
inc
test
sub
mov
push
inc
ja
dec
insl
scas
add
or
rcll
sub
add
aaa
pop
jbe
mov
test
adc
outsl
call
imul
mov
mov
out
dec
fwait
xor
popa
jg
mov
lds
inc
jb
lods
mov
jecxz
clc
into
or
pusha
out
xor
ficompl
jnp
imul
sbb
sahf
lds
xor
ret
mov
test
jnp
in
addr16
sub
jle
pushaw
gs
test
test
ss
cli
fwait
cli
in
mov
int
fdivs
pushf
sub
fidivrl
adc
mov
les
test
fwait
cmp
add
dec
es
movsl
data16
out
lods
and
mov
aaa
push
xchg
xchg
inc
sub
scas
mov
sahf
daa
sub
push
mov
aad
jne
popf
test
push
sti
jmp
sbb
mov
f2xm1
cmc
jae
loopne
pushf
sbb
out
jae
xchg
jge
std
pop
xor
mov
lds
dec
mov
enter
in
pop
aad
or
ja
push
lret
xor
mov
ds
and
jbe
dec
mov
or
out
sti
les
jl
mov
xor
int
mov
jmp
insb
mov
enter
jns
xchg
ss
xchg
xchg
scas
xor
push
jo
mov
iret
insl
test
icebp
jg
jecxz
orl
fiadds
xchg
push
ret
mov
pop
jg
add
je
into
out
ret
push
xchg
ljmp
cld
addl
push
add
sbb
test
dec
imulb
cmp
or
xchg
or
adc
ret
mul
mov
push
push
mov
out
lods
mov
mov
dec
jge
fcmovnb
mov
jns
xchg
xchg
les
dec
imul
dec
fisttps
and
fidivrs
inc
jb
xchg
add
inc
pop
mov
dec
add
movsl
xor
sub
cld
inc
sbb
inc
ljmp
sub
cmpsb
loopne
mov
xor
icebp
enter
std
stos
and
clc
fisubrs
xor
nop
cli
pop
inc
sbb
mov
fiaddl
pop
ja
xchg
jl
out
daa
dec
cld
sahf
rolb
cmp
lret
and
xchg
mov
mov
divb
test
test
add
stos
push
cmpb
idivb
mov
in
into
int
lahf
cld
jno
nop
lret
push
sbb
sub
adc
jmp
mov
xor
sub
lock
lods
cmp
and
inc
xchg
mov
ja
mov
ret
xlat
sub
shl
dec
imul
cmp
decb
lods
inc
jae
mov
ret
sahf
mov
ss
out
inc
xchg
xor
add
fs
enter
xchg
outsb
push
cmc
sbb
ds
sbb
fucomip
mov
jns
loopne
adc
outsl
xchg
jg
repnz
mov
push
test
ss
xorl
inc
jae
inc
add
xor
xor
adc
push
sub
jb
jp
lcall
mov
ja
push
pop
inc
or
jo
cmp
sbb
or
dec
jmp
push
insb
inc
pop
mov
push
sub
xlat
les
or
pop
xchg
push
pusha
leave
loop
mov
cld
addr16
loopne
js
dec
insb
mov
xchg
mov
cmp
mov
into
xchg
repnz
adc
in
out
in
add
xchg
xchg
fstpt
inc
out
out
jbe
jg
and
hlt
cmc
sbb
jge
andb
adc
test
nop
pusha
movsl
fldcw
sub
mov
and
dec
jno
xor
mov
fidivrs
adc
sub
xchg
mov
xchg
stc
enter
cmpsb
push
or
or
lret
movb
push
fsubrl
inc
movsb
in
mov
cltd
ljmp
xor
lock
jns
mov
mov
je
dec
pop
mov
jbe
test
cs
lcall
rcrl
cs
inc
adc
int3
or
outsb
in
add
mov
outsl
cmp
je
mov
dec
popf
sub
dec
pcmpeqb
add
lods
stos
outsl
pop
lret
ficompl
cli
sub
sahf
push
int
push
imull
fidivs
and
add
es
adc
idivl
xor
adcb
jecxz
test
pop
sahf
iret
out
out
jle
gs
pop
sbb
push
add
jg
cltd
repz
cmp
pop
jecxz
sarb
jge
fadds
xor
es
add
pop
outsl
push
or
shll
popf
in
pop
push
loopne
arpl
inc
test
orl
adc
xchg
lahf
pop
and
inc
push
xchg
mov
ror
div
ret
fistpl
jbe
mov
mov
add
movsb
into
mov
dec
cs
repnz
sbb
xor
mov
push
lret
and
or
out
jae
in
sub
outsb
out
inc
mov
ror
js
add
jmp
cmpsl
dec
and
loopne
and
shll
mov
push
in
pop
pop
test
outsb
in
pop
inc
xchg
push
pop
shrl
or
jns
cld
clc
inc
jbe
sub
aas
xor
jae
mov
inc
aad
lods
aas
inc
or
hlt
popf
xlat
mov
mov
loopne
sub
ret
jmp
and
cmp
and
mull
mov
push
push
cmp
loope
xchg
dec
rcl
test
push
iret
fldl
inc
or
or
jno
cmp
pushf
sbb
cltd
jl
shrl
arpl
pop
jne
cmpsb
cmp
lds
rcrb
mov
sbb
cmpsl
hlt
aas
push
pop
cmp
sbb
xchg
push
out
pushf
xlat
hlt
flds
push
xchg
jb
and
pop
andl
test
clc
cli
sbb
jne
mov
fsubrl
inc
aad
in
sti
or
sti
adc
outsb
push
out
push
repnz
cmp
mov
bound
mov
sub
repnz
and
and
xor
dec
les
decl
xchg
es
stos
adc
aaa
loope
loop
lods
mov
psrlw
outsb
out
add
test
sbb
jo
out
call
sbb
mov
jp
test
mov
lds
jno
pop
inc
inc
lock
cld
dec
dec
mov
jg
mov
lds
enter
and
outsb
imul
sarl
cmc
or
dec
xor
repnz
and
xchg
mov
or
pop
fisubrs
jl
mov
cmpsl
jnp
sbb
mov
repz
cwtl
push
inc
div
add
inc
lock
movsl
sub
jo
sbb
mov
and
xor
sbb
mov
push
ljmp
dec
pop
mov
imul
sub
pcmpgtw
xor
or
inc
inc
fidivl
push
dec
repnz
push
xchg
repz
push
lea
dec
sbb
sti
jo
fmuls
aad
data16
jns
iret
pop
cs
sbbb
movsb
push
or
add
fadd
xlat
je
cld
mov
xor
leave
xor
lea
pop
mov
jp
fadd
push
mov
out
xchg
sbb
inc
adc
push
mov
push
jae
inc
xlat
into
arpl
cmc
jo
in
outsb
add
sub
push
sub
dec
push
xacquire
jne
inc
push
stc
in
cmp
call
dec
pop
jg
dec
lods
or
cmp
and
adc
aam
shll
add
sbb
rcrb
pusha
popf
jb
mov
fsub
mov
in
and
inc
enter
dec
jge
ret
xor
xor
sahf
mov
pop
fcomps
test
and
sahf
imul
mov
sub
dec
lds
jbe
into
xchg
mov
loope
pusha
int
pop
es
mov
adc
add
sti
lret
dec
push
lods
lahf
ficompl
scas
pop
ficoms
ror
lcall
mov
insl
test
or
dec
mov
inc
push
push
dec
dec
and
xor
jg
lahf
jp
dec
jmp
addr16
xchg
push
sbb
stos
in
lea
sub
push
cltd
pop
sub
dec
shll
xchg
xchg
push
aaa
mov
push
inc
mov
test
or
add
adc
xchg
jo
iret
adcb
sbb
add
dec
ss
jne
jp
les
andb
cli
mov
xor
insb
lcall
or
jmp
cs
xchg
clc
enter
movsl
ds
and
or
mov
imul
jle
mov
shlb
das
imull
in
xchg
inc
sub
push
jbe
xor
sbb
mov
push
ret
loop
mov
or
ja
pop
or
push
jo
cld
add
lret
jmp
aaa
into
jbe
mov
pop
mov
das
cli
popa
pop
sbbl
xchg
in
jmp
fistps
inc
andl
cltd
add
mov
jl
dec
loop
push
cmpsl
int3
cwtl
xor
push
inc
cmp
jnp
cmp
cltd
and
cmpsb
testl
es
jne
ja
jns
pop
xchg
iret
or
pop
cmp
fldl
xor
mov
lea
push
mov
sbb
movsl
xlat
data16
adc
cs
ret
ret
std
sbb
sbb
mov
push
pop
push
pop
arpl
and
lock
cltd
push
loopne
adcl
mov
xchg
pop
cltd
fldl
mov
xor
xchg
lock
fisttps
mov
mov
mov
jo
fs
sbb
rcll
adc
clc
int3
sahf
pop
mul
lret
stc
jns
sub
popl
stos
lcall
lcall
out
je
inc
xor
adc
cmp
jb
cltd
xlat
dec
scas
add
in
xor
out
popa
xchg
rcrl
int
negl
push
pop
icebp
rcl
mov
and
cmp
xor
loop
mov
shll
jmp
pop
clc
push
std
xor
and
test
xor
gs
jns
sub
cltd
mov
push
mov
pushf
sub
adc
fwait
sbb
sbb
cld
pop
lahf
movsl
push
cmp
mov
movsb
jp
ret
jb
jae
mov
lret
aaa
pop
pop
push
xor
enter
shl
xor
mov
mov
ljmp
or
mov
test
mov
sarl
and
icebp
push
push
adc
cmpsb
push
sub
insb
mov
and
push
or
hlt
mov
xchg
cmp
jmp
cmc
mov
inc
sub
call
outsb
mov
gs
xor
mov
loop
scas
test
andb
fistpll
xchg
cwtl
aam
mov
cmp
xor
int3
fcoml
outsb
sbb
or
mov
lcall
inc
and
rorl
cmp
jmp
pop
adc
shlb
push
int3
inc
int3
push
sub
jle
and
mov
push
pop
jg
idivb
pop
cmp
xorb
xchg
mov
mov
push
insl
je
into
out
push
adc
les
loop
cmc
dec
mov
aas
bound
pop
inc
cmp
mov
sub
cmp
mov
or
sub
inc
lods
mov
cwtl
push
mov
ds
js
mov
jle
lahf
jle
push
mov
jo
mov
fists
ja
data16
push
lahf
jecxz
or
insl
pushf
sbb
cwtl
and
jb
xlat
bound
mov
or
lahf
mov
cli
inc
subl
mov
mov
fiaddl
lock
in
fcmovne
pop
dec
ja
in
add
or
lret
pop
add
and
jne
jge
fildll
dec
xchg
cmp
xor
test
mov
out
add
mov
test
and
shrl
lcallw
cld
push
lods
sbb
lcall
sub
mov
dec
pop
cmp
ss
mov
cmpsb
test
ja
lods
push
push
and
sub
add
xor
adc
and
jb,pt
cmp
adc
mov
or
xlat
pop
mov
jb
ret
out
imul
mov
das
out
jb
repnz
add
mov
out
and
stos
sahf
push
or
cli
sub
aam
inc
and
mov
ljmp
shrl
aad
mov
mov
out
pop
xor
push
sbb
shlb
jne
push
nop
mov
mov
pop
ljmp
jg
aaa
mov
iret
dec
adc
mov
or
daa
stc
out
and
repnz
cs
jno
mov
inc
lret
faddp
imul
pop
mov
lods
push
xchg
mov
xchg
flds
mov
xor
mov
add
or
sbb
scas
pop
aam
jg
mov
xor
sbb
sti
adc
in
mov
mov
mov
nop
jl
push
sbb
outsl
mov
lahf
loope
xchg
inc
fdivrl
lods
add
sti
mov
sub
ficoms
xchg
push
and
out
inc
mov
xor
loopne
cwtl
ds
inc
cmc
xor
jg
add
int
mov
iret
mov
ljmp
mov
cmpsl
pop
cwtl
mov
fstl
and
mov
pop
mov
cltd
pop
jmp
addr16
inc
push
push
cmp
xchg
mov
add
shll
fimuls
cwtl
jg
or
fstp
adc
mov
test
xchg
mov
inc
and
into
movsl
dec
movsb
mov
jne
pop
sbb
inc
push
out
inc
adc
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
jb
shlb
jnp
pushf
jnp
test
jp
not
pop
jae
shll
xor
cmpsb
push
test
inc
push
inc
xor
clc
in
lods
fs
mov
xlat
mov
xchg
or
sub
out
jg
pop
imull
dec
add
loop
pop
movsl
push
imul
mov
mov
and
popf
xchg
outsb
pop
mov
insb
fldcw
sarl
cmp
stc
insb
stc
icebp
popa
dec
mov
ficomps
pop
inc
mov
ds
test
rorl
xchg
inc
push
xor
inc
cli
outsb
xchg
inc
jbe
mov
fdivp
xchg
sti
cwtl
mov
fsubrs
mov
adc
jne
addb
repnz
pop
push
jae
int
push
mov
loop
cmpsb
mov
lret
int3
mov
nop
sahf
mov
jl
les
jae
xchg
nop
ret
mov
jp
roll
dec
pop
xchg
add
jnp
mov
daa
pop
test
or
cmc
sbb
add
dec
inc
push
jg
je
cmp
in
lcall
test
push
sub
push
popa
xchg
lock
pop
jne
imull
mov
mov
mov
and
in
lahf
xchg
mov
cmp
mov
pusha
in
pushf
or
dec
sub
je
aas
pop
scas
sub
test
mov
cmp
push
movsl
lods
push
out
dec
inc
jl
icebp
mov
xchg
mov
jg
xor
outsb
pop
inc
sahf
filds
cli
imul
stos
shlb
cs
movsl
push
lahf
andb
mov
loopne
inc
sub
sub
mov
cmp
js
in
xlat
test
mov
popa
mov
pop
cmp
pusha
adc
push
push
pusha
stc
cwtl
push
shll
in
jbe
xlat
shrb
fnstenv
addr16
xchg
lods
xchg
orb
adc
push
ljmp
dec
jae
mov
and
push
outsb
stos
ds
std
push
lret
adc
push
pushf
ss
mov
mov
js
adc
and
xchg
push
into
jmp
sbb
in
lds
das
cmpsb
int3
and
jg
clc
testl
inc
inc
flds
sub
mulb
decl
push
scas
mov
mov
inc
xor
ljmp
dec
jo
enter
inc
lret
cmp
cwtl
sbb
inc
enter
and
jo
clc
das
add
xchg
mov
negb
inc
pop
insl
sub
sub
inc
out
add
mov
into
shlb
sub
inc
sub
or
push
sahf
shrl
push
sbb
ds
mov
add
bound
sbb
imul
ja
mov
and
cltd
fldcw
push
sbb
call
ficoms
mov
push
hlt
push
popf
insl
jne
cli
pop
sbb
repnz
adc
mov
cld
sbb
xchg
test
xor
mov
fcomi
and
pop
pop
mov
mov
jns
lds
add
jge
test
out
sub
ja
inc
inc
movsl
int
popa
mov
std
imul
int
arpl
adcl
ret
mov
mov
int3
jo
lock
pop
inc
out
movsl
push
scas
pop
fstl
xor
lcall
add
in
jg
aas
test
and
test
push
mov
ret
adc
jmp
or
mov
loope
ljmp
out
aas
jnp
add
dec
loopne
pop
negl
mov
scas
pop
and
sbb
aad
inc
or
imul
inc
cltd
mov
xchg
xor
lcall
dec
adc
push
mov
push
cmpsb
sahf
adc
lods
jge
mov
dec
pop
xor
rep
dec
out
pop
filds
std
int
filds
lret
dec
pop
cs
cmp
lahf
aam
cmp
popa
int3
inc
rorb
sbb
xchg
call
lahf
mov
inc
mov
and
in
jmp
mov
cs
push
mov
add
pop
inc
xor
test
mov
icebp
and
pop
cmpsl
cltd
jb
mov
jne
pop
mov
test
es
pop
jno
pop
lock
sub
mov
mov
dec
js
std
lret
ja
cmc
xchg
mov
fisttpl
test
arpl
imul
mov
enter
mov
jae
leave
push
imul
mov
out
mov
js
mov
cmp
mov
pop
inc
cmp
push
ds
inc
adc
sti
and
adc
in
movsl
mov
pop
inc
sub
jb
iret
mov
fisubs
jmp
push
push
sbbb
jmp
call
jnp
scas
cmp
cwtl
nop
test
pop
adc
cmp
mov
jnp
xor
jecxz
js
push
outsb
out
pop
jg
mov
sbb
lcall
lock
adc
popa
sub
es
ret
shl
add
jnp
jo
jo
cmpsl
mov
pusha
dec
mov
dec
mov
xlat
les
repnz
xor
dec
jmp
lret
xchg
xchg
dec
cltd
aam
data16
nop
scas
jne
stos
pop
adc
add
js
add
test
jnp
cltd
pop
cli
dec
pop
sub
addr16
xchg
fisttpl
das
fdivs
cmp
aad
test
mov
and
inc
xor
daa
mov
jmp
sarl
mov
fincstp
lahf
or
leave
jns
add
lods
cli
mov
adc
lret
and
xlat
std
pusha
fs
xlat
pusha
xchg
push
xor
leave
pusha
cld
xchg
cltd
and
push
cmp
pop
fsubs
dec
mov
pop
adcl
loop
popa
ja
xor
aad
fbstp
aaa
sub
jg
std
push
fmuls
sbb
lret
or
xchg
movsb
aad
out
cwtl
mov
inc
sub
push
adc
xchg
pusha
and
push
mov
rcrl
inc
jae
fsts
jnp
divl
dec
insl
xor
cld
gs
dec
add
pop
adc
pop
or
adc
push
sar
lcall
mov
dec
and
stc
adc
jp
test
out
lea
adc
and
cmp
cmp
test
loopne
adc
dec
and
shr
test
push
aad
dec
lret
sub
pop
xchg
cmp
cmp
std
fbld
sbb
mov
push
inc
lret
xor
xchg
cmp
loopne
or
jp
test
int
pop
loopne
xlat
fldl
inc
mov
add
hlt
mov
xor
mov
into
outsb
xchg
push
pop
scas
stos
fisubrl
inc
aas
mov
incb
add
je
in
jbe
sbb
push
fmull
jl
into
mov
inc
addl
xchg
lods
adc
mov
jae
cmpsl
mov
push
jo
enter
pop
push
cmp
add
in
jb
mov
xchg
popa
adc
jb
xchg
jns
xchg
add
adc
les
jbe
lret
cmpsl
push
inc
movsb
shll
arpl
add
adc
ss
ficompl
daa
cmp
test
mov
aam
shll
jg
and
pop
int
mov
sbb
push
or
add
or
mov
mov
sbb
cmp
sub
xor
test
sarl
out
sbb
adc
pop
notb
pusha
pop
xchg
out
out
mov
push
lods
pop
adc
sbb
pop
xchg
mov
push
push
pop
push
outsl
jmp
pop
mov
mov
rcr
loopnew
xchg
stos
clc
jp
sub
imulb
fldl
sbb
dec
icebp
cwtl
xor
imul
add
shrb
jmp
mov
or
das
jne
sbb
js
stc
inc
mov
xchg
cmpsl
sarl
jl
jno
adcb
jl
xchg
addb
mov
filds
xor
cltd
cli
rorl
arpl
add
cltd
lock
sbb
cli
adc
scas
adc
hlt
mov
add
dec
fwait
push
stc
and
icebp
sti
je
repnz
movsl
dec
mov
mov
pop
lock
jmp
stos
cmpsl
shll
out
sti
in
push
iret
or
jmp
xchg
cld
cmp
jl
daa
notl
inc
xchg
cltd
mov
mov
loope
inc
daa
cmpsl
bt
xchg
fucomip
loop
hlt
add
js
in
push
fistpll
aad
mov
inc
lea
push
mov
sbb
push
rolb
stos
xlat
pop
icebp
testb
loop
mov
orl
jno
lds
leave
or
jg
test
and
test
adc
cwtl
cld
pop
pop
mov
cmp
add
nop
das
dec
in
nop
mov
stc
sti
movsb
or
js
xchg
ds
sbb
or
mov
jbe
push
mov
adc
iret
data16
into
lret
pushf
pop
call
dec
pop
pop
push
cmp
aas
test
push
push
ss
cmpb
ret
sarl
push
lods
mov
mov
fisubrl
and
add
popf
shrb
xor
sub
dec
mov
jnp
gs
lahf
mov
xchg
mov
cs
or
sbb
mov
mov
out
dec
outsl
lret
call
jne
push
adc
xor
ja
add
jns
mov
pop
xor
add
jle
in
lcall
and
mov
mov
sahf
pop
sahf
jg
jecxz
clc
aad
cmp
mov
movsl
xchg
jne
stc
movsb
dec
mov
cmp
addr16
shrb
sbb
pusha
in
jnp
inc
clc
and
sbb
sti
xchg
push
ss
outsl
cld
dec
outsb
inc
xchg
cmp
loop
idivw
mov
and
shr
movsl
icebp
movsl
push
call
insl
dec
sub
mov
stc
idivb
scas
push
imul
enter
movsb
arpl
adc
es
cltd
xor
push
ret
nop
xchg
xchg
aad
dec
addb
mov
lds
aas
shr
arpl
into
inc
test
fdivrs
mov
inc
mov
pop
scas
imul
rcll
sbb
dec
dec
sahf
and
sbb
test
lods
cmpsl
or
mov
repz
xchg
in
cmp
mov
push
cwtl
jp
jl
imul
mov
mov
mov
xchg
adc
pop
mov
in
cli
push
dec
rcl
sahf
enter
push
add
push
fiaddl
cmpsl
jl
sub
in
mov
les
sbb
cmpsb
mov
sbb
mov
mov
repnz
aaa
test
push
mov
test
cwtl
mull
xchg
jno
popa
in
int3
or
mov
stos
dec
mov
ljmp
adc
adc
int
shll
inc
and
inc
xchg
add
mov
sbb
dec
inc
sub
push
jb
xchg
or
out
lcall
inc
add
push
mov
or
lret
jae
push
fwait
jecxz
int
sbb
arpl
fstp
sub
lods
and
jecxz
popf
or
cmpsb
out
fadd
mov
jne
add
ss
fwait
cld
in
sbb
lds
data16
into
insb
es
mov
pop
push
inc
call
pop
fiaddl
pop
je
inc
lahf
test
xchg
popf
pusha
aas
cmp
sbb
daa
push
in
pop
xchg
sbb
out
lods
add
jns
shrb
in
dec
mov
push
mov
and
add
inc
addr16
push
mov
add
std
daa
pop
int3
and
dec
aaa
shlb
cmpsb
cmp
lds
pop
out
inc
xchg
sbb
shlb
inc
fistpll
enter
fisubs
test
cmp
xchg
lods
call
into
mov
sbb
lcall
loope
ljmp
adc
mov
iret
sarb
cmc
cmpsb
in
sbb
fwait
in
int3
outsl
pop
pop
loop
lahf
xchg
orl
pop
test
xchg
rorb
push
daa
ficoml
push
out
dec
mov
loopne
adc
loopne
out
push
cmp
into
sub
or
push
dec
repz
mov
clc
xchg
into
dec
mov
es
daa
mov
jg
fsubr
push
das
or
sarl
adc
ficoml
pop
sub
fstpl
clc
sahf
xchg
stc
call
pop
add
push
mov
lret
sti
daa
cwtl
or
pop
movsb
xchg
pop
stos
pop
mov
fwait
dec
sbb
ds
idivb
lods
xor
outsl
adc
or
sbb
jmp
xor
stos
sbb
pop
loopne
sub
mov
add
lahf
or
filds
into
ret
sbb
cli
popa
popa
mov
sarb
jg
pusha
dec
push
xchg
mov
push
mov
int3
ja
ret
push
pop
stc
repz
mov
in
lret
mov
adc
xor
sbb
pushl
pop
fdivrs
addr16
sbb
sbb
or
into
fwait
rolb
jae
loope
filds
inc
fwait
out
pop
movsl
call
pop
mulb
int
data16
ret
pop
scas
pop
push
sbb
scas
int
push
sbb
fcmovu
inc
push
mov
pop
subl
movsb
in
stos
mov
sahf
dec
xor
mov
pop
and
lods
incb
fldenv
and
or
icebp
scas
dec
xlat
into
clc
xor
mov
out
push
ja
mov
leave
xlat
into
jne
cltd
addr16
pop
mov
xor
pop
fldenv
rcl
adc
pop
or
and
pop
sbb
add
test
push
js
dec
fsub
inc
out
repnz
dec
in
xor
subl
loop,pn
imul
fs
insl
jge
mov
pop
int3
scas
fwait
jne
add
aaa
cmp
lods
sbb
jg
lods
lret
xchg
sub
push
fidivrl
or
dec
fidivrl
push
and
sbb
jo
popa
int
xchg
jno
adc
adcl
pop
cltd
mov
jnp
xor
popf
xchg
mov
mov
mov
xchg
test
scas
xchg
aas
and
pop
xchg
pop
add
call
cmp
aam
ret
sbb
lods
mov
in
repz
orl
ret
xor
pushf
fsubs
push
ljmp
pop
mov
cmp
notb
scas
cld
sti
outsb
fsts
test
xchg
cmc
sub
mov
push
fisttps
aam
or
jg
sbb
or
or
ret
ret
cmc
aaa
subl
fistpl
dec
out
int3
shl
dec
imul
fiaddl
xor
cmp
mov
mov
cmp
mov
icebp
push
and
xchg
sbb
pop
je
cmp
das
sbb
les
icebp
clc
push
test
leave
jle
das
sbb
sahf
push
sarl
stos
inc
sahf
jge
xorl
rcll
dec
rorl
cs
in
loop
sarb
jl
push
mov
adc
icebp
jbe
sub
mov
adc
bound
cmp
or
in
sbb
dec
cwtl
lcall
or
xchg
pop
mov
cmp
cli
mov
and
push
sahf
push
xor
loopne
add
cld
jecxz
push
sbbb
dec
out
pop
xchg
je
test
stos
xor
xlat
daa
cmp
push
in
fisttps
mov
adc
dec
push
insb
jae
and
lea
add
xor
jmp
push
test
dec
mov
jo
add
mov
sbb
push
aad
push
js
dec
enter
cmpsb
stos
ljmp
xor
xor
fstl
mov
lods
cmp
repz
mov
out
out
jbe
or
dec
or
jno
mov
mov
popf
jb
xchg
lock
xor
sub
sub
in
mov
dec
push
cmp
and
lods
pop
ja
xor
test
aas
cmp
imul
push
xchg
push
repnz
cli
inc
ss
xchg
adc
mov
stos
aas
jno
and
dec
mov
adc
sbbb
int
inc
sbb
fs
cmpsl
sbb
mov
pop
maxps
pop
xor
pop
xor
jno
jno
loope
xor
pop
mov
push
into
jg
push
test
repz
jae
mov
sub
jg
movsl
imul
xlat
ret
jae
adc
push
inc
lret
and
jae
outsb
lret
fidivrs
decl
std
and
loop
fisubl
fidivrl
fldcw
imul
push
or
iret
xchg
jb
jae
stos
das
popf
cmpb
mov
xor
or
and
xchg
fwait
sub
xor
inc
insb
pop
xchg
enter
push
out
add
jb
aam
jle
insl
mov
int3
mov
mov
in
lahf
je
sbb
push
mov
push
les
mov
pushf
adc
enter
gs
movsl
adc
jne
xchg
inc
dec
mov
push
or
test
in
lret
and
dec
nop
test
fiadds
mov
and
repnz
mov
test
dec
mov
push
xor
xchg
cmpsb
jae
add
adc
and
insb
loope
add
popa
call
fsts
push
cmp
push
ret
cmpsl
es
pusha
add
notb
lret
jb
cmp
pusha
add
jp
stc
sub
fcompl
cmp
enter
into
mov
jle
push
outsl
out
fs
jno
dec
imul
dec
stos
clc
lcall
addr16
mov
lret
jnp
and
adc
js
add
xor
adc
add
xchg
pop
ss
dec
add
mov
outsl
leave
inc
inc
and
xor
dec
jmp
mov
mov
popa
push
xchg
mov
xchg
or
push
jbe
xor
sti
xchg
push
pop
mov
shll
fnstcw
xor
or
outsl
sbb
mov
add
dec
test
push
lret
mov
xchg
or
sbb
adc
add
sti
gs
adc
outsl
xchg
inc
sarb
std
outsb
cmp
sub
inc
out
cmpsb
dec
pop
nop
mov
popf
push
adc
or
repz
push
inc
out
push
add
or
jmp
mov
jae
inc
movsl
repnz
mov
fidivrl
xor
test
jb
iret
lock
test
sub
jg
in
jns
outsl
fdivrl
ret
lock
hlt
je
sbb
sub
int3
sub
std
out
pop
or
sub
push
ds
iret
xlat
inc
jp
adc
clc
pop
or
mov
sbb
in
pushf
mov
mov
or
xor
lods
js
leave
or
bound
fldl2e
jb
sbb
dec
jle
test
dec
int3
xchg
mov
leave
mov
sti
push
pop
pop
jnp
jl
mov
jg
xchg
stos
cwtl
in
pop
cmc
add
jl
fstps
das
test
int
sbb
ja
cld
cmp
data16
fmull
pop
cmp
insb
lahf
cmp
ret
mov
sbbb
hlt
incl
dec
and
sbb
fcoms
jle
jb
adc
adc
cmpsb
jae
fadds
push
sbb
cmp
in
cltd
xor
mov
movsl
arpl
lds
sarb
testl
jb
ret
or
jns
mov
or
xchg
dec
out
xchg
aad
fadds
out
mov
jge
call
fisttpl
cltd
dec
push
cmp
cmpsb
movsb
adc
loop
adc
and
and
ss
je
jecxz
or
dec
jp
jmp
dec
add
add
lret
pop
in
inc
fldenv
push
orl
aam
lcall
icebp
in
and
xchg
fs
mov
fistps
cmp
push
pop
cld
xchg
roll
pop
in
addl
pop
push
xchg
push
stos
jae
xchg
and
push
fwait
push
xchg
lret
sbb
xchg
aam
lea
jns
test
jne
jns
loope
popa
cmp
sbb
dec
and
popf
aad
jno
xchg
dec
mov
test
inc
mov
rclb
mov
ret
cmp
gs
cltd
jge
decb
sbb
dec
xchg
js
mov
loop
xor
cmpsl
cmp
mov
arpl
and
and
in
faddl
dec
popf
scas
jmp
adc
xchg
dec
mov
adc
in
aaa
imul
xor
cmp
mov
bound
inc
int3
jge
jge
lcall
aad
mov
mov
iret
jo
cmp
aam
jnp
jge
mov
leave
push
mov
sti
jle
mov
ret
out
push
cmp
cli
fmul
ljmp
push
lret
ss
inc
push
fsubl
mov
orb
je
lret
add
imul
jno
xor
sbb
push
jp
inc
scas
cmp
inc
mov
inc
cmp
sub
fsubrl
or
je
int3
mov
loopne
cvtps2pi
inc
pop
outsl
sbb
lret
les
imul
cmp
inc
sbb
adc
adc
jns
call
mov
and
mov
xor
mov
add
sub
pusha
inc
incb
pusha
ds
jno
fs
xor
cmp
loop
xor
cmc
insb
mov
mov
dec
mov
addr16
jge
and
xchg
imul
mov
cmp
arpl
sbb
loope
sbb
or
jno
cli
pop
sub
mov
xor
xchg
stos
cmpsb
mov
in
in
sub
fistpll
sbb
lds
lahf
mov
sarb
xchg
xor
pop
rcll
pop
push
pop
and
or
push
jmp
ds
daa
inc
stc
rclb
nop
xchg
mov
stos
mov
insb
jecxz
xchg
shrl
fwait
pop
test
push
popa
pop
insl
subl
lods
cmpb
inc
scas
outsb
cmpsb
repz
leave
repnz
jmp
mov
jne
xor
fs
pusha
aaa
insb
test
jne
xchg
aaa
xorl
imull
stos
adc
dec
and
scas
xchg
cmp
xor
jmp
add
mulb
scas
jg
out
in
in
xchg
leave
addr16
fadds
or
cmp
xorb
lret
fstl
aad
out
add
inc
cltd
je
outsb
movsl
adc
movsl
fwait
lret
mov
shrb
loop
daa
repnz
loope
test
icebp
mov
or
lret
test
add
rcrl
jge
pop
pop
and
xchg
push
cmp
out
lods
in
mov
lret
dec
cmpsl
pop
push
stc
rcll
clc
nop
mov
mov
pusha
sbb
xchg
jmp
hlt
lahf
xchg
and
out
pop
test
mov
mov
in
or
xlat
cmc
test
sbb
xor
ljmp
push
push
inc
inc
cmp
nop
xor
inc
inc
and
stos
bnd
push
leave
inc
push
and
arpl
icebp
cmp
movsb
sub
pop
mov
cwtl
sbb
popa
jno
and
jecxz
out
or
cmpsb
ljmp
or
xor
in
adc
ja
inc
adcl
mov
xchg
sbb
nop
sub
push
mov
jmp
inc
lods
fwait
xor
jb
cmp
or
jbe
cmp
mov
add
mov
jmp
decb
pusha
cli
fistpl
pop
inc
popf
push
inc
not
dec
or
inc
jne
jns
loope
mov
test
xor
mov
jb
sbb
das
cmc
insl
push
std
arpl
cmp
into
jecxz
aad
cltd
mov
ljmp
stos
fwait
in
inc
mov
inc
stos
stc
jle
or
in
adc
cmp
sub
aaa
mov
lret
cmp
enter
xchg
andb
into
jbe
insb
into
clc
jmp
rcll
push
mov
test
xchg
pop
cs
or
mov
pop
fnstcw
cld
pop
sbb
fwait
pushf
push
lret
test
in
xor
mov
cwtl
pop
xor
and
xchg
test
pop
cmp
jle
orl
sub
xchg
mov
shll
fmull
mov
imull
aas
jns
out
or
pop
ret
and
pushf
xorb
pop
mov
pop
jno
cmpsl
loop
in
mov
add
dec
leave
pop
add
inc
dec
paddusb
cli
push
sub
fmull
test
cltd
jbe
stc
je
dec
pop
scas
or
jbe
in
xlat
cmp
cmpsl
add
shr
pushf
pop
push
in
cmp
hlt
rcrl
mov
or
pop
lea
addr16
ds
dec
shrl
pinsrw
dec
out
inc
imul
pop
pop
dec
ret
pop
dec
aas
popf
loop
pop
jnp
inc
sbb
adc
xchg
dec
jg
xor
roll
xchg
jb
inc
fisttps
mov
scas
dec
shrl
mov
pop
testl
cmpsb
cmpsb
adc
lods
stc
in
jecxz
test
les
fnstcw
popf
xchg
pop
xor
out
push
aad
out
mov
fstps
dec
cld
inc
adc
and
gs
sbb
xchg
pop
mov
or
in
push
and
xor
stc
pop
ljmp
iret
inc
mov
push
int3
sub
lahf
cwtl
popf
sbb
aas
mov
or
mov
iret
je
sti
mov
add
sbb
js
pusha
inc
adc
cld
pushf
stos
and
push
int3
inc
rorb
pop
sarb
in
add
loop
cmp
cli
scas
xchg
dec
lret
cmp
fwait
addr16
inc
cltd
repnz
xor
shrl
mov
lret
fs
xor
mov
hlt
adc
jecxz
dec
mov
mov
xchg
outsb
stos
xchg
fisttpl
jno
iret
xchg
sbb
outsl
jno,pt
mov
lret
clc
into
adc
mov
cmp
or
mov
cld
dec
mul
int3
cli
and
in
xor
das
sub
push
add
outsl
ljmp
lret
xchg
outsl
popf
jmp
sahf
gs
jnp
xchg
fistps
jg
add
adc
hlt
es
inc
cwtl
testl
cmc
sub
cli
rclb
mov
rcrb
daa
cmp
push
or
loope
dec
or
jg
ret
cwtl
cmp
push
mov
push
push
repnz
cld
clc
xchg
popf
fs
cwtl
test
jmp
mov
subb
cmp
ret
ds
pop
xchg
outsl
imul
cmp
out
pop
dec
fwait
addb
jmp
stos
sub
fwait
pop
mov
pop
push
cmp
sbb
xor
outsb
mov
jne
fcoml
mov
hlt
scas
call
incl
shrl
daa
mov
adc
dec
pusha
insl
xchg
jl
cmc
mov
cmp
adc
out
inc
dec
mov
cltd
orl
cmp
imul
pmulhw
mov
fsubrl
push
and
or
das
sbb
jge
lret
dec
out
imul
cmpsb
push
rclb
scas
out
xchg
out
push
jae
aas
test
js
int
sub
sbbl
lcall
pop
adc
test
pop
fildll
lea
insb
enter
sbb
cmpsl
push
daa
push
mov
das
xchg
inc
mov
ljmp
push
pop
inc
jae
and
ljmp
nop
adcb
or
imul
testb
lret
jb
xor
push
adc
xor
xchg
repnz
push
and
jmp
mov
push
gs
out
push
dec
xchg
inc
mov
pop
xorb
fst
stos
jle
mov
mov
mov
add
mov
jmp
inc
push
dec
pop
in
lock
adc
cmp
imul
mov
popf
or
and
mov
mov
in
add
fimull
sub
adc
inc
ret
inc
sub
std
imull
xchg
pop
stc
lea
js
fs
mov
dec
jp
scas
aam
js
pop
cmp
sbb
stos
jp
lea
dec
mov
pop
dec
rolb
mov
loop
mov
cmp
and
js
mov
orl
mov
cmp
inc
ja
sbb
out
adc
dec
adc
adc
rcrl
add
jle
xchg
outsb
xor
dec
jns
jno
fcmove
repnz
add
fisubrs
push
pusha
jmp
add
in
popf
movb
xchg
mov
out
pop
xchg
pop
inc
sahf
addb
int3
sub
shrl
dec
sub
popf
dec
fwait
scas
sub
inc
es
pop
jl
enter
push
loop
xchg
cwtl
in
pop
dec
pop
mov
xchg
adc
adc
dec
pushf
divl
shlb
js
ret
add
sbb
repnz
mov
loopne
leave
xor
andb
mov
arpl
mov
lds
inc
ret
xchg
mov
jmp
adc
fiaddl
or
lret
adc
inc
movsl
xlat
sbb
lock
dec
push
cmc
jl
add
loope
addr16
aas
xchg
jbe
mov
cmp
sub
test
jmp
arpl
js
cltd
sbb
rorl
or
xchg
mov
lcall
cli
icebp
lret
popa
dec
cli
xchg
push
pop
push
push
adc
mov
imul
ficoml
mov
bound
push
inc
sbbl
popa
mov
mov
push
rcr
fs
and
popf
nop
cs
rclb
int
fisubl
hlt
cld
cli
push
nop
das
push
xor
push
scas
xchg
cmp
andl
jo
inc
pushf
sbb
pushf
insl
les
es
mov
call
push
mov
ja
out
insb
xchg
xchg
adc
xchg
dec
out
jbe
mov
inc
sub
xor
dec
popf
test
and
mov
pop
insb
or
cld
add
jecxz
stos
mov
lret
out
movsl
add
loope
pop
xchg
mov
xchg
outsb
out
push
loopne
cwtl
and
cmp
sbb
inc
pop
push
testl
sub
fcomps
rorl
xor
and
hlt
cmc
push
inc
test
sar
outsb
sahf
aam
pop
icebp
cmp
in
push
mov
sub
lcall
les
adc
cmpsb
repz
lahf
cmpsl
inc
mov
in
mov
sbb
cmp
daa
lret
int
adc
shrb
inc
inc
mov
xor
xor
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
gs
mov
xchg
imulb
mov
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
