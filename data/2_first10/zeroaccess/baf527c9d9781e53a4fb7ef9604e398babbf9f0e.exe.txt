push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
dec
xor
cltd
shlb
adc
ljmp
cmp
add
push
ror
int
adc
jo
stc
dec
aad
in
leave
jl
inc
xor
jmp
cmp
adc
mov
inc
pushf
gs
jle
pop
jo
mov
stc
les
add
adc
fs
sbb
xchg
or
pop
and
xchg
jg
cmpsb
xchg
pop
jle
xorl
repz
adc
pop
loopne
pop
popa
fsts
lods
or
test
mov
jne
lds
and
mov
ss
out
inc
jne
in
cmp
add
push
mov
outsl
fistpl
pop
inc
mov
enter
inc
sarb
flds
push
into
enter
add
nop
loope
es
and
sti
subb
adc
add
iret
and
pop
lock
cmp
push
mov
jae
pop
pushf
bound
xor
addb
jnp
adc
lds
in
addr16
mov
adc
cmp
test
in
popf
in
mov
xchg
mov
pusha
jp
pop
sub
repz
mov
shl
inc
aam
dec
dec
add
out
aaa
mov
and
ret
mov
sbb
sub
loope
sbb
mov
mov
inc
sbb
mov
cmp
leave
testb
nop
jmp
repnz
outsb
xchg
js
dec
daa
xorl
adc
sbbl
popa
and
sahf
lret
pop
movsl
cmc
sbb
dec
cmp
stos
frstor
adc
scas
push
lds
and
out
mov
shlb
push
mov
mov
pushaw
jb
sbb
std
adc
sti
out
cwtl
lds
dec
xlat
cmp
dec
stos
and
vpmullw
loop
lcall
or
mov
cwtl
cmc
add
and
dec
mov
in
lret
daa
add
sbb
loopne
mov
movsl
adc
je
lahf
aad
mov
pop
ficoml
rol
shlb
xor
and
stos
mov
into
shlb
rclb
jns
or
push
lahf
loope
pop
jo
jg
mov
sbb
fsubs
out
rol
cs
mov
inc
enter
jno
std
loope
or
hlt
inc
xor
ljmp
adcl
ds
or
scas
inc
add
cmpsl
ljmp
mov
jl
clc
or
add
gs
fwait
int
and
shll
mov
jl
jecxz
or
lret
add
add
into
inc
xchg
test
fwait
inc
cmp
add
les
sub
push
jle
outsb
and
lea
inc
scas
mov
cmp
test
sub
add
in
cltd
lock
xchg
lods
test
imull
pop
lods
or
pop
cmp
xchg
mov
push
inc
mov
out
movsl
jo
setge
stc
jl
pop
add
jo
je
fwait
into
cmc
sti
je
cwtl
mul
jnp
xor
fs
dec
inc
xor
dec
mov
fnstsw
aas
sub
push
or
inc
fs
xchg
in
add
and
push
and
mov
mov
jle
enter
in
pop
cmp
dec
jle
sbb
jle
pop
fs
and
fs
pusha
mov
and
xchg
movsl
add
popa
fcmovbe
dec
xchg
enter
and
inc
pop
mov
mov
inc
jo
stc
xor
and
ret
xor
rcrb
ds
inc
inc
mov
loopne
mov
push
mov
rol
nop
hlt
test
aas
mov
scas
inc
cld
sub
jl
add
loope
add
in
sbb
or
out
fists
push
outsl
inc
movsl
add
xlat
mov
popf
add
jne
dec
inc
loopne
mov
mov
in
int
loop
les
clc
xor
or
cmpsl
aam
add
pop
inc
shrb
sbb
xchg
adc
push
inc
js
arpl
hlt
cmpsb
jnp
das
popa
int
jle
insl
push
nop
cmpb
ret
into
pop
inc
dec
cld
and
mov
add
push
fildl
jl
rcr
mov
push
test
xor
or
sbb
and
pop
fldcw
popf
push
shl
add
mov
insl
lods
push
push
je
subb
test
in
lods
mov
push
fcmovbe
movsl
xchg
mov
repnz
loope
xor
cltd
out
and
jecxz
arpl
xchg
sbb
mov
in
iret
pop
ret
outsb
xor
ret
xor
scas
enter
and
mov
movsb
xchg
inc
data16
cmp
mov
add
or
push
inc
sub
xor
dec
sbb
js
lods
gs
lods
mov
andb
pop
popf
sbb
mov
fiaddl
cmp
jle
adc
movsl
mov
andb
fildll
xchg
inc
xor
and
iret
popfw
dec
pushf
out
movsb
xor
mov
imul
faddl
inc
pusha
addr16
mov
cmp
lds
dec
push
jo
pop
ja
add
insl
cmp
mov
mov
mov
xchg
loopne
loope
das
imul
adc
fiaddl
lods
and
sbb
sbb
out
mov
push
or
adc
roll
or
jge
and
out
mov
xor
push
xchg
enter
imul
roll
test
lods
ljmp
fnstcw
and
out
mov
insl
aas
aas
push
out
mov
stos
bound
sub
cmp
mov
sti
dec
scas
inc
test
push
aam
in
cmp
xchg
sub
dec
mul
push
fcomi
cwtl
mov
repz
loop
leave
and
mov
lea
push
aas
mov
cmp
mov
mov
orl
jnp
out
mov
push
sub
test
mov
xor
fdivp
push
xchg
sahf
inc
ret
jbe
jmp
pop
dec
movups
dec
xlat
adc
out
das
shrb
add
pop
es
shlb
ljmp
addr16
mov
push
fcmovne
jb
lahf
xor
push
stc
sbb
test
inc
push
pushf
pop
out
je
pop
in
icebp
stos
jno
sbb
pushf
mov
mov
dec
push
dec
rol
mov
and
sbb
in
stos
inc
add
dec
mov
add
or
jnp
pop
movsb
fists
imul
cmp
pop
cmp
call
mov
jg
fimuls
in
fldt
pop
shrb
sub
jns
mov
mov
addl
sar
jmp
loope
push
stc
push
incb
imul
cs
jp
loope
fsubrp
push
cmpsl
push
adc
sub
inc
dec
mov
inc
inc
lods
push
dec
inc
aaa
or
and
inc
mov
jno
xor
push
mov
ds
popf
jmp
inc
xchg
sbb
pop
adc
mov
call
lock
arpl
int3
sbb
adc
push
mov
dec
shr
outsb
loop
ret
pop
jne
mov
popa
pop
aaa
push
push
sti
adc
enter
cli
adc
movl
or
icebp
dec
dec
test
jmp
xor
lods
insl
popf
call
arpl
imul
les
pop
mov
out
jne
push
bound
cmp
sarb
jl
mov
call
into
out
imul
mov
sub
sub
int3
xchg
add
add
jbe
fmul
xchg
cmc
mov
es
mov
sub
outsl
out
cwtl
loop
int3
adc
jle
mov
adc
pop
dec
loope
pop
mov
bound
ljmpw
incb
fwait
jecxz
sti
inc
daa
pop
pop
mov
enter
jmp
mov
mov
mov
inc
jge
cmpsl
addr16
pop
clc
sbb
enter
shl
xor
mov
inc
cwtl
ljmp
pop
xchg
repz
push
enter
adcb
ret
mov
es
mov
stos
insb
and
inc
test
or
ret
bound
mov
pop
xlat
ret
iret
xlat
mov
rcr
addr16
pop
mov
out
dec
mov
and
jge
sub
iret
lret
stos
jo
sarb
repz
arpl
aaa
cs
and
insl
mov
out
std
dec
out
fildl
mov
mov
scas
in
faddl
cmp
inc
lret
cmp
push
adc
shl
cli
adc
inc
dec
push
notb
pusha
jge
adc
mov
pop
sbb
jle
fdivrs
jecxz
inc
mov
sub
lret
pop
aas
xor
lret
gs
jg
adc
jae
call
shr
aam
sbb
out
pop
dec
pop
cmc
stc
dec
lret
mov
jno
cwtl
pushf
pop
adc
adc
dec
inc
and
rcr
xor
adc
roll
or
je
push
rcrb
dec
push
mov
mov
aad
shr
pop
orb
jecxz
inc
sbb
lock
outsl
leave
sbb
cwtl
push
xchg
inc
pop
mov
int
adc
cs
sbb
jl
stos
mov
mov
mov
xor
sarb
scas
loope
movsb
imul
insl
mov
jns
or
subl
pushf
in
jbe
xchg
inc
adc
pop
jbe
adc
shr
xchg
lahf
pop
dec
sti
sbb
cmpsl
mov
inc
pop
out
jo
cld
add
jg
enter
dec
addr16
scas
cmp
ret
inc
addr16
jb
mov
xchg
and
push
outsl
insl
aam
lahf
jns
scas
mov
ret
xor
push
cmp
cmp
stos
test
mov
xchg
or
dec
xor
cmp
imul
inc
pop
dec
mov
xchg
sub
mov
enter
lods
or
jo
dec
add
mov
imul
ret
stos
nop
inc
push
dec
imul
jns
or
adc
movsl
incb
inc
lret
mov
and
xchg
pop
mov
mov
and
push
mov
xchg
mov
jmp
addr16
setb
fs
fdiv
sahf
inc
xor
add
push
mov
sbb
xchg
jae
add
imul
fnstsw
fisttpll
shlb
jns
push
lahf
jo
push
sbbl
inc
aam
loopne
sbb
sbb
je
add
out
push
mov
ja
add
dec
jl
xlat
sub
add
xor
fs
sahf
sub
rdpmc
jecxz
shl
or
xor
in
cmp
int3
cwtl
movb
popf
mov
xor
mov
push
in
push
and
js
lock
in
insb
xchg
fisubrs
std
and
sub
outsb
mov
movsb
loop
and
dec
test
cmp
or
lret
hlt
cmpsb
push
cmpsb
jae
mov
cmp
or
sub
incl
cmp
dec
shrb
daa
lock
dec
pushf
sbb
mov
lods
ljmp
lock
sub
mov
dec
inc
into
les
loopne
jge
cmpsb
mov
negb
sub
cmp
xor
fists
pop
dec
pop
pushf
adc
jb
orl
stos
insb
xchg
mov
icebp
dec
xchg
fwait
imul
adc
loop
cmp
cmp
sbb
movsb
movsb
stc
rorl
in
cmp
in
into
add
call
shlb
jno
jns
or
pop
int
into
movsl
dec
cs
mov
push
push
subl
xor
addr16
jno
xchg
adc
inc
pop
fcompl
push
xchg
stos
add
xor
mov
adc
xor
push
xchg
icebp
and
and
dec
inc
je
mov
call
in
jne
mov
xchg
pop
push
fnstsw
xchg
aas
or
movsb
cmp
das
imul
push
cmp
mov
sub
sahf
test
fmull
out
fmull
xorl
xor
jb
jne
sub
iret
roll
xor
mov
icebp
cmpsb
sbb
jno
cmpsb
and
push
push
mov
fwait
insb
fsubrl
jl
inc
ds
rclb
mov
inc
and
sti
sbb
mov
mov
and
dec
ss
xor
dec
test
movsl
sub
ja
aaa
xchg
push
jne
inc
pop
es
jecxz
lret
ss
out
stos
lds
adc
inc
pop
ljmp
pop
fcomi
lds
aad
adc
xchg
loopne
sbb
pop
dec
cmpl
popa
lret
jae
ja
or
icebp
add
dec
mov
push
pop
iret
les
ficoms
add
cmpsb
adc
movb
nop
and
xchg
jge
xorl
sbb
jae
adc
and
push
sbb
stos
mov
jg
mov
daa
cmp
cmp
int
es
sbb
insb
cmpsb
mov
movsl
lcall
iret
xor
inc
xor
dec
out
or
jnp
sub
mov
addr16
xchg
lcall
aaa
inc
jl
stos
aas
pop
ja
shr
sub
inc
and
inc
mov
mov
stc
popa
and
fcomip
mov
jmp
out
in
lahf
mov
incl
and
mov
mov
xchg
xchg
adc
stc
dec
push
gs
adc
lods
shrb
cmp
push
mov
repz
aaa
or
jmp
leave
inc
push
push
lret
sub
fnstsw
lods
jb
mov
mov
jo
mov
jge
leave
and
ljmp
cmpl
jbe
pop
jl
pop
fisubs
test
inc
adc
sbbl
mov
aam
daa
roll
ljmp
pop
xorb
in
cwtl
fmull
mov
insb
aad
outsb
or
xchg
ds
mov
add
cmp
pusha
fldcw
in
push
test
adc
jp
sub
and
jg
inc
fwait
cld
adc
mov
adc
cmp
jle
movsb
cmp
pushf
mov
test
das
or
pop
loope
mov
jmp
test
push
adc
mov
pop
and
in
mov
adc
cmpsb
fadd
mov
loope
stc
mov
lock
mov
sbb
dec
sbb
mov
dec
jo
inc
push
xchg
xchg
sub
xchg
mov
xchg
lock
mov
outsl
inc
push
and
cmp
rolb
in
je
imul
xor
test
xlat
ljmp
out
daa
and
loop
inc
repz
movsb
shl
sub
lcall
sub
bnd
cltd
ljmp
test
mov
ss
ss
mov
mov
rolb
inc
pushf
out
test
add
mov
cmpsb
std
mov
mov
sbb
dec
xor
dec
adc
and
mov
adc
insl
mov
mov
dec
jbe
int
aaa
cmp
xchg
xchg
ret
in
rcrl
fnop
inc
or
jmp
add
mov
arpl
xchg
shrb
or
dec
out
xlat
or
imul
and
stos
popa
inc
pop
inc
push
call
imul
es
hlt
outsl
mov
jno
cltd
xor
sbb
cmp
push
push
or
sar
xchg
jge
dec
push
adc
lret
outsl
sbb
popa
popa
hlt
xchg
or
or
add
or
add
pop
and
pusha
jno
and
pop
adc
mov
fistps
cs
dec
mov
mov
xor
add
and
sub
test
cmp
lret
daa
stos
inc
xchg
es
pop
adc
aam
mov
dec
mov
xor
into
shlb
cmp
testl
push
add
daa
xchg
sub
testb
mov
pop
xchg
push
movsb
ja
jnp
mov
sub
jl
lcall
pop
arpl
shrb
mov
adc
bndstx
dec
aad
mov
cwtl
xchg
js
jb
and
xchg
sarb
dec
cs
dec
pop
sbb
rcrl
jecxz
insl
xor
loope
push
push
into
or
xchg
adc
xlat
push
add
sub
sub
xchg
or
ljmp
pop
dec
add
mov
mov
jecxz
loopne
out
jp
out
fmull
xor
in
fsubl
fistps
arpl
scas
sar
mov
adc
rcll
push
xor
cmpb
adc
mov
adc
push
push
js
adc
movsb
mov
pop
es
sub
movsb
imul
xchg
ret
test
adc
cmp
push
dec
and
fmull
loopne
dec
sub
and
adcl
test
mov
shr
jmp
and
aad
data16
push
sahf
jbe
cmp
and
cmpsb
add
clc
out
xor
pop
xchg
lret
mov
jl
sbb
pop
lds
sub
int
dec
xchg
stos
sub
mov
test
jns
enter
xchg
and
sbb
sub
test
inc
test
ds
in
dec
int3
dec
sbb
lods
inc
out
cmpsb
fwait
scas
pop
outsb
jle
add
sbb
in
mov
mov
shrb
je,pt
jg
test
cld
mov
je
cmp
fistps
sub
aaa
xchg
push
and
jg
ret
add
xchg
mov
pushf
lret
cmpb
popa
dec
cmp
inc
mov
jge
and
sahf
fs
pop
lret
stos
xor
push
adc
and
les
pop
call
adc
cmp
mov
stos
pop
ljmp
xchg
test
mov
fwait
sbb
cmpsl
fs
and
lret
loopne
adc
out
neg
and
fcomps
jne
clc
int3
push
negl
pop
cmp
mov
in
fs
mov
xor
mov
dec
jnp
lods
divl
out
aas
dec
mov
adc
xlat
push
pop
mov
rcl
mov
jnp
hlt
loopne
outsb
cld
sbb
xor
cmp
pop
xchg
out
pop
rolb
je
pop
inc
jo
ss
arpl
iret
aad
in
xor
add
or
jnp
test
push
xchg
ds
call
pop
fdivrl
ret
inc
xchg
shlb
mov
fiaddl
inc
es
fistps
sbb
pushf
adc
sub
das
andb
ja
jge
adc
and
jecxz
mov
push
or
andl
adc
stos
inc
lret
dec
mov
shll
inc
nop
popf
je
loop
pusha
xor
inc
add
cs
cli
test
jne
icebp
daa
pop
cltd
test
je
arpl
pop
cltd
rorb
into
push
sub
inc
push
pop
int3
or
clc
mov
imul
mov
dec
lahf
xlat
cmc
aas
pop
mov
iret
push
enter
mov
pop
daa
adc
sti
jecxz
cmp
add
mov
movsb
cmp
xchg
jge
lahf
aam
jl
jle
inc
std
lret
fdivp
and
jg
fists
je
push
cmp
pop
sbb
rcrl
or
sub
push
adc
add
fcomps
sub
xor
int3
mov
mov
xor
xor
adc
aas
sub
mov
or
adc
push
push
scas
adc
xor
and
sub
rorl
pushf
subb
mov
mov
xchg
cli
cmp
or
sub
mov
mov
jns
in
cmp
push
xor
jb
dec
icebp
add
scas
and
dec
or
add
test
loop
sub
lcall
jecxz
sbb
xchg
out
jns
add
lea
into
movsl
xlat
popf
ficoms
sub
shl
outsb
shll
into
scas
sti
addr16
std
scas
pop
lahf
ret
push
xchg
sbb
mov
ja
mov
inc
add
ja
shrl
dec
xor
mov
jmp
sub
push
cmpsl
mov
call
push
add
testb
pop
jge
mov
xor
addb
xchg
lds
xchg
inc
popf
mov
inc
loop
xchg
add
int
push
and
cmpsb
jecxz
sub
scas
fwait
imul
lcall
cmp
cltd
push
sub
bound
xchg
inc
or
push
test
pop
dec
inc
jl
int3
outsl
or
lret
push
cmp
rclb
nop
insl
and
in
add
mov
add
fdivl
adc
out
sbb
les
xor
dec
mov
pop
inc
adc
ss
jecxz
push
sbbb
inc
cmpsl
rorb
dec
mull
mov
add
mov
mov
sbb
cmp
mov
add
sub
lcall
xchg
ja
sets
fbstp
dec
jmp
lcall
es
push
adc
or
and
test
pop
jnp
adc
aas
xchg
bound
jbe
mov
jecxz
in
movsl
dec
mov
call
lds
imulb
and
test
xor
xchg
mov
and
outsb
arpl
dec
mov
popf
mov
mov
cmp
sbb
out
sub
insb
cwtl
dec
mov
sub
sub
lret
or
adc
imul
addr16
dec
or
mov
lea
mov
dec
jo
imul
loopne
xor
jecxz
daa
dec
insl
cmc
sub
pop
inc
sub
mov
mov
dec
xchg
iret
jns
fwait
sub
mov
cmpsl
pop
clc
add
pop
xchg
jnp
adc
pop
or
mov
mov
or
lret
scas
add
xor
push
push
xchg
xor
ret
inc
inc
sbb
hlt
andb
xchg
xor
cmc
mov
ss
mov
int3
leave
pop
xor
cmp
ljmp
int3
adc
inc
adc
xor
inc
jae
rcr
xchg
shlb
cmc
and
mov
enter
enter
arpl
mov
rorb
ret
cmc
mov
jl
imul
stos
scas
sbbb
mov
fs
cmp
dec
fsubr
push
aas
aaa
sahf
jg
jmp
cmp
mov
lds
and
sub
rcl
test
fcmove
iret
push
dec
cli
pushf
test
rolb
stos
pop
mov
stos
fwait
cltd
ret
scas
jno
cmp
push
outsl
das
push
lahf
sar
insb
and
mov
xchg
je
add
xchg
cmpsl
sbb
outsb
mov
mov
xor
lock
clc
and
pslld
mov
insb
outsl
jbe
ret
fcom
push
imul
pop
add
push
movsl
pop
inc
hlt
push
and
cwtl
rcl
loopne
push
lahf
movsb
sti
fists
adc
dec
push
pop
cld
jmp
arpl
lret
xor
addr16
mov
sahf
inc
mov
mov
repz
xchg
sahf
add
pop
out
sub
adc
jle
mov
lods
dec
mov
insb
and
cmp
mov
add
inc
xor
or
outsb
out
jge
into
add
lds
sbbl
pusha
stos
add
xlat
mov
arpl
push
jge
hlt
mov
nop
fildll
add
lret
mov
int
repz
scas
xor
in
rcrb
mov
sbb
mov
jg
jbe
scas
cmpsl
or
aaa
cmp
mov
ret
mov
rcl
jmp
mov
xor
or
outsl
lock
xor
xchg
push
jnp
and
sub
dec
sbb
inc
rcrb
jb
pop
or
mov
and
int
rolb
outsb
lods
roll
mov
shrb
or
pop
xor
in
adc
add
sub
cs
shr
call
das
mov
stos
sub
jmp
pop
mov
jne
jae
mov
jne
jnp
jg
adc
mov
pop
loopne
jmp
jns
mov
fucomip
scas
in
imul
pusha
xchg
xor
fadds
jb
sti
aad
sub
fsubrl
loope
jb
out
test
shlb
and
and
jecxz
ret
sbb
sbb
jg
inc
xor
clc
mov
and
jne
lds
and
negl
rcl
das
je
ja
mov
test
rorl
mov
cmp
or
mov
aas
xor
lods
and
xchg
andb
test
movsl
jecxz
stos
mov
test
sbb
cmp
push
lcall
adc
daa
gs
mov
sbb
jmp
pop
pop
jp
xchg
pop
outsb
arpl
add
jg
mov
xchg
push
lret
aaa
jge
sub
mov
aas
out
loop
std
sbb
ret
adc
out
fiadds
and
add
sbb
test
notl
outsb
jae
arpl
pop
mov
mov
stos
xor
jge
cmp
stos
pop
push
pop
outsl
jecxz
fidivs
dec
cli
out
out
inc
cs
daa
js
in
std
mov
sbb
cmp
sbbl
fstl
out
mov
mov
jo
imul
pop
pop
addr16
stc
fwait
push
sbb
nop
inc
int
mov
dec
pop
fbstp
shr
push
mov
out
mov
adc
push
xor
adc
mov
scas
push
sarb
cld
jp
test
sub
push
adc
sahf
addl
cmpl
enter
push
xor
push
push
cmp
pop
inc
lahf
call
push
aad
rorb
push
dec
aam
cmc
cwtl
in
dec
imul
arpl
outsl
xor
sbb
scas
pop
popa
adc
int3
dec
push
cmp
add
and
jo
sbb
fstl
jnp
imul
and
mov
cmpb
es
in
mov
cltd
outsl
inc
es
xor
add
jg
ss
mov
movsl
push
mov
mov
fstpl
pop
shlb
dec
xchg
adc
adc
stc
into
repz
pop
pop
fisttpl
dec
lods
out
pop
and
pop
jne
orb
enter
jo
cli
es
xchg
fs
xlat
mov
sbb
mov
mov
jecxz
scas
push
movsl
pushf
rcrl
pop
jne
jno
sub
out
lods
loop
mov
push
ljmp
pop
add
bound
mov
iret
adc
enter
sub
cltd
das
scas
fadd
dec
xorb
cmp
pop
mov
xor
in
daa
sbb
roll
sbb
or
pandn
mov
lds
jle,pn
test
pop
mov
pop
xor
jns
rclb
mov
rcr
mov
sub
shlb
cmp
xchg
push
mov
addr16
mov
xor
jo
push
repnz
dec
jp
push
lret
std
pop
insl
mov
mov
add
mov
inc
rcrb
xor
mov
aad
mov
leave
mov
lret
or
and
test
mov
je
cld
sub
aam
clc
repnz
lahf
mov
sbb
mov
xchg
mov
js
out
cmp
xlat
jb
cmc
mov
pop
ljmp
mov
lret
imul
cwtl
hlt
dec
xchg
andl
insb
sbb
outsb
push
in
mov
pop
inc
hlt
mov
push
cmp
cli
push
outsl
sahf
add
add
inc
std
mov
pop
or
test
mov
in
cmpsl
cmp
popa
xor
fmull
sub
and
js
in
xlat
arpl
xor
push
idiv
xchg
mov
cmp
dec
lock
imul
pop
ret
dec
push
pop
jl
sub
mov
push
bound
aam
orl
jne
shlb
repz
push
mov
mov
int
mov
mov
xor
shr
fcompl
cmp
inc
push
mov
test
gs
into
add
aaa
jle
pop
lock
stc
nop
aas
pop
jo
sbb
jecxz
mov
or
js
std
sbb
adc
sbb
sub
aas
enter
inc
andl
add
cmp
jecxz
xor
iret
sbb
sub
sub
pop
mov
adc
xchg
in
mov
or
int
aad
scas
xchg
push
inc
mov
cltd
in
scas
sbb
iret
fbld
mov
movntps
lahf
push
mov
mov
or
aad
sahf
scas
jo
jl
pop
mov
mov
jno
inc
in
cmpsb
clc
pop
shlb
inc
xchg
arpl
mov
sarb
imul
outsb
jl
mov
pop
insb
aaa
add
in
jecxz
icebp
jp
jne
cmp
xor
fs
andb
mov
pop
xor
outsb
jl
add
adc
pop
nop
xor
push
sub
pop
push
roll
sub
ljmp
mov
out
mov
mov
inc
movsb
pop
les
pusha
inc
test
pop
js
sub
mov
popf
fwait
std
mov
inc
or
iret
inc
sub
loopne
push
mov
in
insb
or
lahf
sahf
pop
xchg
adc
adc
movsb
mov
lahf
stos
std
mov
stos
jns
js
cmpsb
add
imul
and
outsl
arpl
imul
aaa
mov
test
pop
lds
inc
add
rol
mov
or
roll
pop
sub
inc
xchg
hlt
dec
movsb
cmp
and
gs
push
push
mov
cmp
inc
add
movsl
mov
int
mov
inc
outsb
ljmp
sysret
ret
das
ljmp
ljmp
push
test
or
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
fsubrs
push
or
jp
pop
jp
pushf
or
pop
jb
cs
cmp
or
js
or
mov
loop
int3
mov
mov
aaa
stos
pop
xlat
cmp
jmp
pop
ret
xchg
jbe
pop
in
adc
xor
insl
push
jg
xchg
cwtl
push
sub
outsb
or
sbb
push
xchg
sarl
mov
sbb
jns
inc
and
pop
das
movsl
dec
lret
gs
out
int3
push
aas
scas
mov
dec
insb
cltd
xchg
fisubl
fdivp
fisttpl
push
out
into
sub
lret
adc
adc
push
lods
cmp
or
lods
pop
aad
ficompl
loope
sbb
cmc
cmc
call
daa
sahf
mov
jg
add
lods
sub
xchg
test
in
imul
movsl
mov
push
ds
test
std
imul
imul
dec
cmp
dec
sub
adc
outsb
popf
push
xor
jo
sbb
mov
lods
scas
pop
mov
mov
mov
inc
lods
lret
jno
and
loop
call
lret
xchg
sbb
fcomps
sub
inc
arpl
mov
or
cmpsl
jle
pop
testb
xchg
mov
loop
arpl
push
ss
shl
mov
gs
cwtl
inc
lods
outsl
aam
lret
add
mov
and
add
jge
add
iret
or
mov
outsb
sub
push
xchg
pop
inc
mov
adc
ret
nop
repz
rorb
push
push
pop
ss
sbb
stc
out
rcll
daa
cmp
cmp
cmp
in
pop
jo
or
sub
sub
push
push
mov
xor
mov
stos
adc
fwait
push
jo
sbb
mov
mov
and
fs
ja
adc
sub
add
dec
popf
add
repnz
fnstsw
xchg
cltd
cmc
insl
xchg
mov
int3
ds
jno
push
fadd
push
mov
sub
inc
popa
mov
fadds
ss
rorl
std
xchg
jns
cmpsb
inc
sbb
jmp
ds
mov
in
xor
lcall
cmc
hlt
or
sub
push
sub
jno
lcall
pop
mov
sarb
ret
mov
fidivrs
mov
in
xchg
dec
nop
fnsave
mov
arpl
dec
inc
dec
aad
mov
xlat
push
push
outsb
xor
pop
add
cli
andb
or
mov
stos
cmp
and
mov
pop
mov
xor
xlat
nop
std
dec
into
fwait
cmp
dec
das
pop
into
xchg
mov
sahf
lcall
mov
es
or
scas
mov
mov
xchg
imull
test
push
jbe
js
push
push
adc
add
lods
ljmp
adc
cmp
cmp
mov
imul
int3
dec
out
mov
dec
xchg
test
ljmp
push
je
pop
adc
inc
lret
ret
adc
cli
stos
loop
cmp
cmp
and
addr16
inc
aaa
mov
and
imul
dec
mov
inc
shll
dec
sbb
repnz
out
mov
adc
push
cld
mov
cmp
loope
cs
dec
icebp
stos
jns
mov
sub
test
mov
ja
int
loop
je
pop
sbb
rcll
push
push
popa
jl
lahf
call
sub
push
cmpb
mov
and
insl
lret
test
cmp
rcll
movsl
cmc
mov
data16
lods
sub
add
clc
enter
mov
clc
loop
or
lods
das
xchg
xor
xorb
mov
incb
pop
aam
mov
insl
sbb
cmp
jl
mov
iret
lods
arpl
sar
dec
jge
out
out
xor
pop
cltd
mov
xor
xor
xorl
inc
mov
jle
movsb
repnz
jmp
iret
subl
stos
push
fiaddl
add
mov
in
fdivr
ficoms
in
shl
inc
ja
lahf
mov
fbld
inc
pop
sahf
sub
mov
push
mov
shld
mov
je
mov
les
mov
mov
and
adc
add
addr16
pop
test
in
xchg
push
jp
fnstsw
pop
xor
push
dec
pop
ljmp
xlat
sbb
jp
stos
xchg
arpl
mov
add
xchg
test
pop
stc
inc
or
gs
jg
arpl
popf
int
imul
mov
cmp
xchg
ficompl
mov
arpl
shr
mov
fsubr
sub
sbb
mov
clc
jg
shl
insl
mov
arpl
mov
loop
lea
jle
dec
sti
ljmp
rcll
xor
popf
push
lret
adc
movsb
repnz
mov
wrmsr
pushaw
push
test
sbb
gs
jb
repz
sub
xor
mov
shrl
mov
sub
cmp
lret
ficomps
out
cwtl
lret
push
lahf
repz
or
sbb
add
ret
enter
arpl
mov
mov
mov
out
pop
mov
test
pop
mov
cmp
test
push
pop
mov
push
pop
movsb
inc
leave
test
or
push
xorl
jmp
cmpsb
addb
mov
and
cli
pop
and
lcall
adc
mov
cmp
mov
bound
add
push
pop
test
xchg
pop
in
xor
xchg
in
das
adc
pushf
adc
daa
jge
push
cltd
xchg
xchg
sbb
imul
aas
hlt
gs
jp
add
ret
mov
mov
imul
popl
jne
xchg
repnz
adc
daa
sbb
adc
mov
push
dec
xchg
insl
push
adc
sub
sbb
popf
jmp
push
rcrb
pop
loop
aas
pop
xchg
aam
xor
sarb
sub
incb
mov
daa
mov
mov
test
jle
mov
gs
jne
hlt
gs
loopne
jbe
icebp
and
aas
lcall
cld
mov
mov
push
mov
pop
sbb
dec
jg
adc
mov
mov
imulb
movsl
jno
lcall
push
inc
jnp
int3
cltd
xor
jae
es
and
push
icebp
sub
mov
push
dec
push
cli
lret
xor
and
xchg
cmc
pop
stos
adc
arpl
adc
mov
sahf
adc
pop
stos
pop
mov
stos
lods
sbb
jecxz
pop
or
fcmovbe
xor
les
mov
jg
dec
xchg
mov
gs
sub
xchg
and
add
lcall
test
push
inc
dec
jae
sub
insl
jmp
xor
push
push
je
push
sarl
inc
in
inc
test
jecxz
cwtl
xlat
xlat
xchg
jo
arpl
sbb
add
push
scas
sbb
jne
pop
push
jle
sbb
lds
loop
ljmp
sub
cmp
dec
dec
push
xchg
ret
cltd
call
sbb
cltd
leave
gs
cltd
das
and
push
dec
sub
call
and
xlat
outsl
pop
mov
xchg
sbb
inc
jp
movsb
aam
mov
popf
ficoml
push
pop
add
cwtl
mov
and
stc
adc
loope
sahf
divl
pop
adc
fisubrs
pop
jmp
ret
lea
or
loopne
loope
dec
cltd
mov
pop
icebp
jmp
pop
fildl
mov
dec
xor
cmpsl
imul
les
ss
mov
mov
scas
mov
mov
sub
das
sbb
push
cmp
data16
push
ret
jo
sbb
sahf
iret
ficoml
shrl
ljmp
pop
mov
hlt
or
push
shrl
add
gs
ja
xchg
lret
jle
push
fidivrs
movsb
in
sbb
pop
mov
std
aad
movsl
push
jns
imul
add
rol
fxch
pop
imul
jp
xchg
jae
xchg
bound
out
jg
scas
sarl
lods
nop
jae
mov
push
xchg
call
pusha
std
xor
in
mov
push
inc
int
stos
jg
fnstsw
jne
mov
inc
scas
out
sbb
xchg
mov
jmp
cmp
or
movsl
mov
xor
rorb
test
dec
ja
jecxz
mov
mov
hlt
cltd
jecxz
repz
dec
pusha
cltd
call
push
mov
jg
jmp
insl
dec
aad
fcmovu
pop
subb
lds
sti
pop
lock
mov
movsb
add
xchg
push
sbb
cmp
mov
cmp
sahf
cmp
jle
sub
pop
ja
addr16
std
lcall
stc
mov
dec
repz
aas
insl
push
jl
dec
nop
fsubp
push
cmp
cwtl
or
inc
mov
xchg
pop
test
cltd
xorl
mov
xor
dec
mov
push
stos
insl
cmp
std
aaa
pop
sub
cmc
inc
aad
fxch
push
xchg
sub
jbe
imul
sti
lods
inc
add
jno
cmpsl
push
jne
popf
dec
push
les
add
call
jmp
icebp
push
loop
jmp
pop
les
pop
xlat
lds
and
aad
lcall
fidivrl
and
data16
ret
add
dec
lock
jbe
fwait
adcb
pop
in
dec
jnp
xchg
xlat
ja
ss
cld
mov
repz
out
mov
cmpsb
jl
nop
jecxz
sub
pop
xorb
cwtl
adc
shrl
or
inc
into
mov
or
les
out
push
iret
cld
cltd
and
lret
insl
mov
cld
decb
das
int3
xchg
dec
jge
popf
cld
or
ljmp
add
adc
lds
or
or
push
pop
push
jne
mov
jl
jb
add
or
lret
in
std
jp
push
add
add
daa
or
mov
mov
in
orb
insl
push
shrl
mov
sub
movsl
sub
cmp
outsb
int3
cmc
out
jl
in
push
mov
push
ja
repz
inc
sbbl
out
mov
insl
out
jb
mov
call
je
call
andb
clc
add
or
jp
nop
sub
sbb
jbe
jg
mov
ss
adcl
fwait
nop
frstor
dec
cmp
xor
sbb
ds
jge
cmp
push
jb
pop
push
iret
sub
in
sub
data16
movsb
sub
std
scas
imul
mov
cmp
mov
push
iret
ss
lahf
push
fs
mov
fsubrs
add
in
fwait
xor
ficomps
cmpsl
push
push
jne
dec
pusha
sbb
mov
xchg
sarb
shrl
dec
cmp
cwtl
add
cmpl
add
adc
adc
mov
cmp
lahf
rolb
mov
gs
jo
mov
xchg
xchg
jbe
mov
outsl
adc
es
mov
mov
add
scas
add
dec
loope
push
mov
mov
inc
pop
out
xchg
pop
cmpsl
pop
std
popf
push
pop
pop
repnz
les
inc
dec
insb
adc
and
fwait
pop
push
inc
xchg
cmc
mov
icebp
push
imul
adc
cmp
imul
repz
roll
pusha
cmp
loop
rcrb
aaa
ja
rolb
fdivrl
dec
call
xchg
stos
int
or
mov
fwait
pop
mov
sbb
pop
pop
sbb
aas
mov
popa
dec
mov
std
daa
rolb
int
xchg
jp
out
sbb
mov
mov
pop
movd
xchg
mov
push
inc
stos
scas
cmp
dec
mov
repz
hlt
repnz
mov
fisubs
lods
stc
pop
push
xchg
xor
iret
mov
scas
mov
jp
lds
pop
and
jecxz
cld
aam
aas
and
dec
and
inc
inc
outsl
mov
and
jp
jno
loopne
nop
inc
scas
xchg
cltd
fistl
scas
test
add
and
mov
sub
mov
xor
cmp
int
ret
sbb
mov
inc
ffree
add
negl
filds
mov
cmp
ss
gs
in
dec
xor
add
push
mov
mov
imul
xchg
fisubl
testb
icebp
ljmp
arpl
scas
subl
test
push
pop
add
aaa
mov
int
inc
sahf
sub
mov
push
sbb
bswap
add
inc
xor
fcmovbe
jnp
mov
adc
xchg
out
dec
loope
fnstcw
lods
add
pop
dec
mov
adc
mov
pop
push
push
mov
data16
mov
mov
lock
dec
mov
clc
dec
push
mov
push
jnp
lcall
dec
scas
cmpsl
xchg
pop
pop
les
add
testb
add
cltd
jno
or
push
aam
mov
sub
ss
cld
push
cmp
out
imull
pop
imul
repnz
enter
jo
cltd
in
imul
cmpsl
mov
lods
push
cld
cwtl
sbb
cmp
mov
fmull
aas
and
jmp
add
sub
rol
inc
mov
test
jp
out
popa
dec
cmp
xor
lock
xchg
xor
adc
inc
pop
test
sbb
lods
sbb
movsl
adc
arpl
enter
test
dec
aam
cmp
add
mov
sub
adc
push
in
adcl
arpl
scas
xchg
imul
add
leave
outsb
sbb
jns
sbb
lret
jge
xchg
push
sahf
push
lods
xchg
ret
imul
pusha
in
out
enter
clc
imul
sub
add
sub
push
xchg
mov
rorb
fmuls
jle
ret
lret
cmpsb
cmp
and
sbb
jmp
jg
sub
dec
sahf
add
test
push
push
lahf
loop
xlat
ds
and
jns
arpl
push
mov
pop
mov
arpl
mov
stos
mov
or
mov
pop
or
pushf
cmp
bound
pop
adc
or
jns
add
xor
xor
jecxz
jbe
mov
pop
out
push
mov
mov
loopne
dec
out
jnp
pop
scas
loop
sbbb
mov
mov
iret
repnz
bound
mov
xchg
out
lret
adc
jmp
ja
xchg
jp
fldenv
mov
mov
sahf
add
js
push
xor
mov
xor
cmp
or
jnp
jle
push
mov
enter
into
pushf
stos
testb
lahf
je
cmp
aam
decl
jl
test
ss
inc
jnp
addb
xchg
inc
aam
popa
out
push
loope
or
add
jno
addr16
xor
xchg
xchg
lods
push
add
dec
ja
xchg
fisubrs
lods
sbb
mov
jb
into
adc
inc
ss
cmc
repnz
or
mov
rolb
mov
out
out
test
push
add
cmp
or
sub
jecxz
pop
mov
rcl
jecxz
pop
xchg
bound
cmp
subl
adc
pop
cmp
call
nop
leave
add
clc
inc
popa
add
xchg
and
mov
jp
inc
mov
pop
xchg
fcompl
pop
push
stos
dec
xchg
popa
pop
xchg
sub
jge
pop
andl
push
rcrb
xchg
pop
pushf
orl
imul
adc
add
adc
int
sahf
loope
int3
jl
xor
xchg
or
shll
sbb
jnp
xchg
aam
fnsave
jg
or
xor
inc
adc
lahf
jl
js
push
push
lret
or
or
test
and
sbb
test
call
mov
xchg
push
call
xchg
jmp
dec
add
out
cmp
out
push
push
xor
pop
jns
mov
dec
xor
sub
imul
jns
mov
imul
pmaxub
pop
arpl
popf
pop
cmp
and
loope
les
shl
mov
inc
pop
shll
fdivl
push
lods
not
jl
leave
sbb
mov
out
repnz
jns
pop
pop
aad
imul
in
mov
pop
aaa
add
sub
imul
or
fwait
cmp
fnstcw
fwait
xlat
jo
syscall
cmp
sahf
sbb
popf
sub
movsb
dec
enter
aaa
or
outsl
add
lahf
test
test
sbb
adc
jno
cmp
push
movsb
jge
arpl
cmp
pop
lea
push
lock
sbb
pop
add
sub
fwait
movsl
sub
cmp
add
sarl
sbb
adc
mov
dec
pop
sbb
xor
jne
daa
and
cmp
mov
add
mov
xchg
sub
fwait
imul
push
in
sbb
push
fadds
pop
into
movaps
pop
mov
negb
mov
int3
scas
call
ss
lcall
xor
fsubr
and
daa
mov
sahf
push
test
shlb
jmp
mov
and
sbb
xor
aas
in
nop
sub
adc
lods
push
jmp
jmp
xlat
pop
and
or
int3
mov
mov
cmp
imul
call
sub
insl
inc
outsb
adc
jge
add
mov
pop
mov
pop
adc
push
nop
xor
push
adc
fisubrl
or
push
inc
aad
data16
nop
ret
std
inc
sti
arpl
xor
jge
mov
shl
das
xorl
dec
adc
outsb
inc
mov
add
add
add
jmp
and
in
ret
jg
mov
fiaddl
cmc
gs
mov
fisttpl
jl
iret
roll
test
or
out
movsb
mov
notb
pop
sahf
jb
fstpl
sub
lods
rol
insb
pop
and
ret
push
or
in
nop
lret
fs
xchg
mov
mov
adc
nop
data16
inc
cmp
and
test
and
cwtl
adc
mov
les
pop
test
test
jge
mov
xor
lret
dec
lret
sbb
sub
push
xchg
inc
jmp
jg
imul
sub
xacquire
mov
pop
repz
sti
lock
dec
jb
dec
dec
push
rcll
xchg
jp
mov
insl
call
test
mov
pop
das
push
pop
dec
mov
inc
add
out
js
mov
sbb
dec
leave
leave
jne
out
or
cmp
in
inc
dec
mov
pop
push
jo
lock
xchg
sub
sub
lds
fsubrl
loope
and
out
fwait
out
lahf
vpsubsb
and
ss
loopne
push
xchg
or
rcr
cmpsb
push
sbb
dec
imul
mov
lea
mov
ds
and
out
subb
dec
mov
lods
mov
lea
jp
sub
out
cmpsb
dec
pop
mov
jnp
mov
and
push
cmp
rol
adc
cmp
mov
mov
push
xchg
arpl
dec
mov
xchg
mov
enter
out
and
or
lret
pop
mov
aas
mov
xchg
xor
loop
jb
sbb
aam
jno
xchg
cmp
mov
mov
vmwrite
sbb
outsl
mov
mov
loopne
js
xchg
addr16
or
data16
into
pop
popf
in
dec
mov
adc
sbb
xor
mov
sbb
or
jae
pusha
out
jae
fldcw
rclb
cmpsl
jns
push
xor
jmp
cld
js
sti
sub
xor
repz
cmp
aam
pop
dec
loopne
jp
movsb
nop
mov
mov
sbb
sti
fs
dec
jb
popa
lods
stos
ljmp
xlat
aaa
imul
sti
mov
dec
int3
fstpt
leave
adc
mov
outsb
lahf
ret
cmpsb
jno
fdiv
notl
dec
fsubrp
cmp
mov
push
xchg
xor
jbe
lret
jne
xor
mov
mov
xor
cmp
lret
jecxz
test
adc
in
mov
push
jno
xchg
jp
in
ficomps
add
push
out
push
pop
lahf
mov
fwait
and
mov
ljmp
inc
or
movsb
jno
xor
mov
mov
push
or
test
cld
cmpsl
mov
nop
pushl
negb
push
out
ret
inc
out
push
daa
push
movsl
xchg
or
adc
pop
andl
daa
sahf
inc
enter
stos
pop
mov
push
sub
xor
and
test
mov
adcl
xchg
lods
sbb
jno
push
sub
arpl
mov
out
sub
test
fcoms
orb
mov
inc
mov
jae
gs
mov
xor
cmp
lds
loopne
xor
mov
mov
cltd
test
stc
push
push
adc
mov
sub
popf
pop
repnz
dec
add
jp
pop
xchg
int3
xchg
xlat
cmpsl
inc
aas
adc
insb
xchg
pop
dec
adc
jle
add
lahf
shrb
jp
lcall
rcr
push
sub
mov
jno
addl
xlat
mov
mov
mov
adc
pop
mov
jmp
je
subb
jnp
pop
mov
xor
scas
jge
icebp
mov
pop
jmp
cwtl
scas
icebp
rcrb
mov
and
jp
mov
gs
faddl
inc
mov
roll
add
dec
mov
mov
faddl
ljmp
jb
sbb
cmp
add
insl
jle
cmc
in
mov
popa
into
dec
inc
push
into
rcll
out
inc
mov
pop
dec
icebp
out
lods
cmc
sbb
int
jns
pop
lock
lcall
bound
add
jp
lahf
mov
stos
fistl
push
xchg
cmp
cs
mov
clc
or
ret
in
cmpsl
cld
popa
jge
jo
incl
cmp
add
mov
mov
xchg
aaa
push
jae
cmpsl
jae
xor
dec
dec
add
cmp
repnz
adc
pop
push
cli
aad
push
pop
mov
nop
jo
mov
and
fwait
lcall
sbb
cld
mov
out
jp
inc
icebp
xorb
jg
adc
out
inc
scas
jns
xchg
add
out
cmp
xchg
mov
movb
js
leave
repnz
iret
fcomp
adc
and
inc
pop
dec
mov
les
dec
scas
cmp
cmp
xchg
cli
les
sbb
or
pop
insb
es
pop
jae
jg
in
icebp
or
arpl
dec
mov
ljmp
jl
or
mov
ret
mov
jae
jp
cs
dec
jb
jg
jp
clc
xor
mov
sbbl
add
mov
or
dec
add
cmpsb
dec
loopne
popf
mov
xlat
movsl
push
sub
adc
andb
pop
imul
mov
or
lret
mov
loope
pop
mov
lods
popa
mov
or
sahf
cmc
movb
mov
mov
dec
pop
cld
pop
cmp
orl
fstpt
mov
je
imul
and
packsswb
in
adc
jo
ds
jmp
cld
cs
pop
orl
mov
loope
dec
cmp
outsl
push
xchg
shl
lock
fcomp
mov
pop
dec
js
inc
bound
pushf
mov
aaa
or
or
pop
cmp
cld
jbe
mov
cmp
sub
sbb
xor
xchg
cld
mov
dec
into
adcl
daa
js
dec
mov
xor
push
in
xorl
shlb
fcmovbe
inc
in
add
adc
dec
cmp
in
fists
mov
xchg
push
sbb
int
add
sbb
mov
into
xchg
and
orl
xchg
jnp
mov
testl
in
pop
test
or
xchg
repnz
xchg
loopne
jbe
in
test
mov
push
loope
sbb
rclb
inc
mov
imul
fnstenv
out
sub
push
popf
or
push
sahf
orl
mov
pop
leave
out
pop
cltd
sbb
push
mov
jns
add
jns
stos
notl
fisubrl
sbb
inc
jno
les
mov
jno
adc
mov
xor
jno
xchg
mov
mov
loopne
pop
add
repz
fs
ljmp
cmp
mov
mov
sbb
cmp
ret
and
ljmp
xor
sahf
sahf
jge
popa
mov
insb
in
push
lret
ffree
mov
or
mov
in
int
filds
inc
inc
mov
int3
push
mov
sahf
pusha
mov
or
lret
adc
push
enter
mov
add
inc
loopne
mulb
mov
in
in
ja
xchg
inc
mov
arpl
jle
mov
sub
pop
fistps
inc
cmpsb
test
pop
lcall
jne
pushf
inc
loop
mov
jno
fistl
inc
jp
int3
add
cmpsb
add
pop
fcmovu
test
pop
push
add
cmpl
and
repnz
or
cmp
lods
sbb
mov
mov
stc
mov
sti
std
push
xchg
add
xor
mov
cmp
ss
cmp
and
nop
inc
xchg
bnd
xchg
pop
mov
adc
ret
lahf
xchg
mov
adc
pop
xchg
sti
ss
jae
xor
loope
arpl
scas
push
mov
adc
lods
ja
repnz
cmpb
arpl
inc
cmp
test
std
and
inc
orb
mov
or
mov
add
jbe
or
fisttpl
ret
sub
pusha
cmp
inc
mov
pop
push
mov
fs
push
dec
sub
lcall
mov
int
sub
xor
leave
adc
ljmp
shl
sti
add
call
pop
ja
in
fucompp
xchg
and
int3
jecxz
mov
xchg
decb
xor
aas
fdivp
leave
add
lsl
mov
mov
ja
ss
xorl
std
xor
loop
add
mov
dec
mov
scas
test
and
addr16
popa
adc
push
or
jne
test
insb
mov
icebp
dec
or
mov
xchg
dec
lret
daa
pop
clc
and
xor
jl
into
loopne
imul
dec
push
enter
stc
add
xor
lods
ljmp
pop
aaa
pop
lds
call
test
inc
flds
in
fstpl
pop
jno
dec
xor
je
push
xor
mov
adc
dec
pusha
dec
cmp
hlt
insb
jl
adc
mov
add
sub
pushf
dec
sub
pop
sahf
into
outsl
ljmp
xchg
xor
push
xchg
adc
rorl
stos
lea
xchg
inc
jmp
sub
add
add
jae
xchg
xchg
mov
add
mov
test
jl
out
das
push
and
pop
xor
lea
dec
ret
out
aad
imul
sahf
pusha
loope
sub
jb
stc
inc
mov
ret
aam
and
scas
cmpb
mov
jmp
dec
mov
fcmovne
add
test
sahf
in
xor
cmp
pop
adc
dec
cli
ss
adc
loopne
vcvttps2dq
mov
imul
test
or
inc
ret
adc
and
fnstsw
popf
mov
sahf
mov
sub
jnp
pop
dec
cmpsl
je
push
mov
out
push
push
mov
xchg
rcr
cmp
call
scas
add
xor
cmp
pop
mov
push
stos
inc
sbb
sub
addr16
sti
cmp
mov
mov
shll
dec
adc
push
sub
xor
adc
sbb
stc
aas
das
sub
sub
cmp
or
sbb
and
pop
ret
mov
clc
push
jl
aam
dec
out
mov
sub
rorb
mov
add
push
icebp
aad
xchg
or
stos
nop
or
mov
sub
xor
xrelease
lcall
clc
imul
xchg
dec
addb
lcall
mov
xchg
insl
xlat
cmpsl
xchg
mov
adc
jge
inc
mov
xchg
pop
inc
pop
loopne
mov
cmp
sub
aaa
repnz
loope
dec
pushf
xlat
movsb
out
inc
imul
jnp
lock
test
pop
inc
jb
jmp
daa
outsl
mov
outsb
cmp
ss
hlt
mov
adc
xor
jbe
aam
je
filds
cmc
inc
dec
mov
mov
or
xor
lea
xchg
xor
mov
adc
loopne
jno
mov
scas
dec
adc
or
cltd
mov
insl
imul
fsubrl
int
mov
loope
into
into
shlb
lret
inc
xchg
mov
test
sub
cmpsl
pop
std
sbb
or
pop
and
fidivs
in
pop
dec
add
aad
mov
xor
xor
movsl
fbstp
data16
jae
scas
int3
mov
rclb
mov
sar
xchg
shrl
adc
int
sbb
sub
sub
xchg
push
and
jmp
mov
incb
ret
int3
cwtl
shrb
cmp
pop
out
pop
int3
jae
mov
pusha
mov
pop
jecxz,pt
xor
sbb
inc
divl
xor
rcrb
ljmp
int3
outsl
in
push
cmpsl
pop
dec
ljmp
stc
sbb
inc
cmpsl
adc
stc
call
pusha
push
pushf
lret
and
in
pop
js
add
stc
adc
sub
cltd
stos
sub
jno
pop
shlb
lret
mov
mov
lret
dec
lahf
add
xorl
dec
lods
sahf
and
rorl
pop
lahf
dec
xor
stos
sub
pop
test
insl
test
insb
negb
outsl
out
mov
gs
mov
aas
pop
inc
fsubrs
out
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
hlt
cs
sahf
lcall
jp
les
lret
xor
ja
sub
loopne
mov
sub
adcb
fbld
sbb
mov
fistps
push
jl
clc
sbb
add
adc
xorl
addb
ja
out
neg
jg
mov
rcrb
add
mov
jae
aaa
pop
out
or
aad
push
cs
imul
or
xor
sub
sbb
mov
negb
or
xchg
lcall
mov
xor
repnz
lahf
push
sbb
cmp
movsl
icebp
jge
and
lds
push
dec
add
idivl
data16
mov
xchg
lock
cmpsb
push
int
fadds
jns
sbbb
cltd
ja
sbb
pop
sub
push
test
cmpsl
or
lahf
xor
dec
movsl
into
iret
sti
xchg
leave
or
sbb
shrl
stc
cmp
mov
std
in
sbb
lock
jae
dec
orl
nop
stos
jl
pushf
sbb
push
pop
sub
aaa
xchg
out
repnz
mov
pop
inc
or
adc
cmp
xchg
mov
dec
xorl
xor
jle
push
mov
fidivrs
push
and
adc
fwait
xor
test
jns
movl
adc
pop
ja
sbb
popa
jns
test
movsl
push
push
push
iret
sbbl
nop
inc
push
int
sbb
jo
ljmp
hlt
push
jo
mov
orb
fisttps
dec
adcl
jns
push
or
mov
xor
leave
leave
mov
mov
shr
adc
mov
pop
push
in
adc
dec
jns
jg
dec
mov
adc
jmp
push
mov
push
sarb
loopne
and
jne
cmp
jge
les
mov
int
jl
jno
jp
mov
cmp
push
xlat
out
jnp
lahf
mov
jbe
fsubrs
insb
adcb
and
mov
pop
and
xor
mov
insb
loop
lcall
sbb
cmp
aas
leave
dec
jg
mov
aam
shll
inc
push
lret
shlb
das
ret
and
scas
insl
movntps
test
dec
inc
adc
in
int3
or
scas
ljmp
mov
push
jmp
sbb
mov
mov
or
ss
sub
pop
repnz
dec
mov
ret
insb
notl
xchg
mov
sbbl
cld
jo
bound
cld
pop
xor
cltd
push
cmpsl
outsl
pop
xor
lcall
mov
sbb
xor
sub
jl
outsb
mov
adcb
ret
ret
and
stos
out
pop
roll
dec
test
pushf
ret
pop
jne
imul
pop
mov
jmp
sbb
out
xchg
loope,pn
lods
rolb
jp
mov
in
xor
mov
xlat
dec
out
fs
pop
xchg
pop
sbb
pop
add
fs
push
dec
inc
aam
stos
jp
mov
push
pop
sub
xor
push
out
xlat
fdivr
call
rorl
pop
sbb
jle
mov
mov
mov
jne
mov
or
push
cmpsl
into
shlb
push
daa
gs
loope
sbb
mov
sti
xor
lcall
push
jg
sub
mov
movsl
test
mov
push
jnp
ljmp
xchg
in
ja
push
pop
cmpl
lea
repz
fists
xor
and
pop
fs
mov
mov
popa
mov
notb
push
punpckhbw
outsl
cli
mov
fidivrs
xor
lods
xchg
push
push
jne
mov
ret
movsb
cli
cmpsb
hlt
cmc
sub
les
xchg
xlat
out
mov
cmp
mov
dec
test
jmp
xor
hlt
fidivs
and
clc
ljmp
cmp
xor
mov
sub
sub
call
adc
sbb
repz
mov
cmp
loop
mov
aaa
jecxz
xchg
mov
xchg
add
cltd
in
inc
push
xor
cmpsb
shll
je
pop
jl
mov
pop
adc
nop
mov
fs
mov
add
shrb
lcall
enter
push
sub
xchg
incb
dec
loope
xchg
shl
xchg
adc
xchg
dec
pop
cltd
mov
mov
adc
xchg
inc
hlt
push
out
cwtl
inc
sub
dec
in
fbld
lock
lahf
test
fisubl
pop
imul
push
cmpsb
das
pop
repz
xchg
adc
xor
sti
sub
mov
or
mov
mov
push
aam
and
lahf
addr16
pushf
outsl
pop
sub
mov
xchg
test
mov
mov
push
out
xor
inc
ss
push
jnp
pop
pushf
popf
std
mov
or
inc
lds
sahf
bound
rclb
dec
and
leave
mov
mov
and
insb
add
ss
jae
pop
mov
mov
cwtl
mov
dec
add
jae
sub
cs
xor
mov
inc
or
push
mov
sar
movsl
sub
add
pop
shl
or
pop
outsb
dec
sbb
testl
push
in
sbb
hlt
pushf
in
outsl
decb
inc
addr16
mov
cmp
ss
mov
pop
mov
mov
add
movsb
and
dec
iret
in
insb
out
fs
iret
jl
addr16
jg
stos
test
test
mov
cld
xor
les
roll
xchg
into
pop
add
addr16
sti
icebp
xchg
add
inc
fld
movsw
hlt
loop
shlb
enter
pushw
test
lret
add
mulb
fwait
push
int
ja
cmp
adc
jae
cld
jecxz
repnz
push
movsb
dec
push
sbb
jle
mov
mov
imul
enter
jle
pop
sbb
jns
iret
or
push
vpunpckhdq
pop
pop
dec
adc
enter
xchg
ret
pushf
mov
ljmp
sub
pop
fsubs
mov
push
xchg
pop
inc
sbb
les
je
cs
pop
dec
mov
xchg
mov
pop
fwait
sub
sbb
lret
sbb
icebp
scas
insb
and
aam
mov
into
lret
mov
and
stos
jl
into
gs
sti
imul
arpl
fidivrl
jge
test
mov
ja
push
inc
ret
jp
mov
push
ret
jno
insl
cmp
cmp
adc
mov
push
js
pop
sti
clc
fucomp
fstpt
sbb
in
das
jo
mov
xchg
sarl
aad
inc
or
push
dec
loope
or
pop
cmp
bound
imul
or
jle
cmpsl
test
js
mov
or
les
or
jo
add
dec
insl
aaa
cs
cs
repz
jae
pop
mov
sub
sarl
add
fcmove
adc
jo
xor
mov
adc
nop
rcrl
push
push
mov
pop
inc
add
mov
ret
push
mov
and
mov
imulb
or
popl
adc
sbb
jb
xor
jl
mov
je
jno
cmp
xchg
loopne
mov
adc
dec
cmp
xchg
dec
bound
repnz
out
mov
insl
out
xlat
nop
test
sub
addb
mov
push
imul
fnstsw
in
fsub
in
dec
es
icebp
inc
adc
sbb
dec
xchg
mov
jl
and
xor
mov
or
dec
xchg
jno
outsb
and
mov
xor
fimuls
add
mov
mov
cmp
lea
sub
adc
sbb
cmc
sbb
sbb
shll
xor
xor
jmp
test
and
sub
jb
int3
ret
ficomps
push
fstpl
addr16
or
mov
xchg
sub
iret
sbb
sbb
loopne
xchg
cmc
hlt
jle
sbb
xchg
data16
and
loop
mov
lods
fildl
iret
andl
pop
dec
dec
fisubl
cmp
lret
fidivl
push
pop
push
int
negl
loope
imul
pop
ror
insb
push
inc
leave
mov
enter
inc
jl
xchg
ljmp
sub
nop
xorb
gs
push
not
mov
jge
push
dec
xorl
push
or
mov
test
loopne
iret
sbb
lahf
mov
cld
out
gs
xchg
imul
test
lret
add
aam
lret
cmp
mov
aaa
sub
iret
mov
cmp
cmp
pop
mov
xorb
mov
mov
lret
sahf
mov
mov
hlt
pop
andb
arpl
jp
aad
jmp
jl
pop
inc
pushf
into
sbb
out
leave
adc
push
aaa
adc
add
inc
lods
jg
adc
xor
std
lret
xor
push
ret
mov
adc
mov
mov
lret
add
jle
hlt
xchg
into
lcall
pop
and
inc
adc
xor
pop
mov
sub
dec
out
cmp
das
ja
mov
rcll
arpl
push
jbe
popl
adc
les
cmp
ret
xchg
hlt
lods
xor
pop
cmp
sub
push
xorl
jmp
mov
shrd
xor
push
adc
in
inc
cmc
adc
lcall
and
mov
dec
int3
sbb
mov
pop
lds
mull
xorb
add
sbbl
rcrb
sub
dec
pop
xchg
lods
push
subb
xor
sbb
mov
ss
jo
add
add
jno
xor
loop
mov
jns
dec
inc
lcall
fldenv
movsb
ljmp
pop
fbld
cmpsl
push
pushf
sbb
mov
inc
sbb
movsb
cmp
pushf
cmp
aam
pop
cmpl
subl
sub
lea
mov
call
popf
dec
int
xor
test
in
mov
or
mov
mov
int
test
dec
xor
out
jno
aam
sbb
pop
cmpsb
or
xlat
adc
and
inc
mov
subl
sub
fs
xchg
cli
pop
add
mov
pop
jo
popf
push
xchg
xor
push
mov
adc
mov
cmp
int
aam
mov
lret
sub
stos
push
sbb
in
push
rolb
dec
sbb
xor
cmpsl
push
mov
repz
xchg
dec
in
push
int
adc
push
lea
adc
sub
mov
andb
sarl
sbb
jne
xchg
or
loopne
xorb
stc
aas
xor
cmp
mov
inc
outsb
stos
pop
xchg
scas
dec
push
bnd
sub
loop
mov
inc
pop
ret
fisttpl
sub
cltd
add
lahf
dec
test
xor
inc
sub
addl
mov
cmp
rcrl
lcall
xchg
jb
inc
inc
add
fnsave
pop
nop
aam
dec
dec
sbb
in
aam
or
jmp
int
ror
mov
xchg
stos
mov
pop
sti
and
mov
ljmp
std
cwtl
aam
push
mov
fldcw
xchg
xor
movsb
mov
mov
sbb
into
leave
shll
pop
fsubs
pop
lds
dec
in
std
push
scas
inc
add
popf
cmp
ljmp
or
daa
jge
or
std
jecxz
sbb
pop
cwtl
shl
sbb
or
jp
scas
cmp
pop
mov
outsb
stos
cld
ja
arpl
in
dec
rep
or
scas
jae
mov
mov
pop
sub
lret
xor
stc
dec
shll
inc
negb
aaa
movsl
repnz
mov
fldcw
ficoms
cmp
push
and
repz
adc
shll
jns
inc
jo
popa
cmc
cmc
mov
adc
push
xchg
repnz
cmp
push
push
cli
fmuls
pop
sbb
inc
loope
lods
fldl
lahf
vpmaddwd
in
jge
and
mov
lahf
xchg
xlat
sbb
pop
imul
aas
or
pop
insl
dec
mov
js
loope
lock
sbb
mov
pop
popa
or
decl
cmp
mov
jbe
inc
jg
mov
add
dec
sub
push
mov
adc
dec
test
test
outsb
or
cmp
stos
or
mov
and
cmp
pop
push
aaa
dec
test
fildll
sub
jg
stc
rcll
loop
sbb
jp
inc
cmp
nop
xorl
int3
mov
cmp
adc
xor
mov
xchg
in
adc
xor
loope
pop
loopne
lahf
addr16
push
xor
dec
out
pop
ret
mov
int3
mov
fs
leave
aaa
sbb
mov
inc
scas
xor
popl
out
mov
inc
pop
inc
int3
aas
ret
ss
repz
mov
xchg
scas
mov
imul
xor
add
pop
and
and
inc
das
dec
cmc
sbb
dec
pop
loop
add
sub
lods
sti
repnz
push
or
sbb
pop
push
or
pop
sub
dec
sahf
push
cmp
or
lcall
ljmp
mov
sub
or
adcb
out
add
loopne
jge
and
and
adc
sti
jmp
sub
push
and
add
or
addl
inc
movsl
and
mov
xchg
mov
test
mov
jnp
leave
mov
mov
inc
dec
nop
lret
out
shl
mov
mov
aad
pop
cmc
repz
notl
lret
ds
pop
and
lods
mov
dec
mov
fs
xchg
fstpl
ficompl
jge
mov
mov
jae
subb
mov
fstpl
shrb
dec
xor
fidivl
loope
push
pusha
rcrb
ret
inc
bound
lea
cmp
aaa
hlt
mov
mov
xlat
and
adc
xchg
cmpl
shll
sub
stc
push
outsb
imul
mov
push
mov
and
dec
pop
frstor
cmc
int3
mov
mov
jle
or
push
test
fldt
daa
arpl
arpl
es
in
mov
or
inc
add
sbb
mov
push
sub
and
sub
roll
mov
fwait
fistpl
stc
sub
into
xlat
cmp
pop
push
xchg
fistpll
cmp
cmpsb
cmovp
mov
mov
jp
push
pop
mov
adc
pop
cmp
shlb
xchg
fldt
push
push
iret
sub
cmp
sti
or
daa
add
subl
out
orb
out
mov
jl
xor
jl
xchg
sub
mov
dec
pop
jg
rdpmc
mov
lahf
inc
lret
inc
lcall
popa
in
ja
jns
xchg
das
mov
lods
jno
sub
or
or
scas
bsf
js
ficompl
sub
adc
cmp
std
stc
push
aas
pop
cld
mov
or
push
test
in
xchg
stos
jle
lds
xor
cltd
sub
daa
and
test
mov
aam
pop
stos
lds
add
push
cld
and
xor
mov
or
dec
inc
jo
adc
cmp
mov
pop
push
dec
adc
mov
jg
xchg
push
fnstcw
push
iret
mov
adc
scas
aad
stos
fistps
stos
fildl
test
cld
xor
pusha
shrl
jne
jo
pop
mov
and
cli
imull
stc
jp
sub
sbb
and
lock
sub
push
dec
sub
jge
mov
imul
leave
inc
pop
fwait
nop
or
sbb
add
add
arpl
xchg
inc
push
scas
icebp
lds
jns
mov
iret
cwtl
push
jge
outsb
jg
mov
jbe
lock
jbe
mov
orb
xor
cmpsb
nop
pushf
xor
sbb
push
and
add
cmpl
sbb
lret
or
es
inc
fstl
jbe
arpl
ljmp
sub
repz
loop
push
cmpsb
test
mov
adc
cmp
addr16
sub
mov
out
mov
adc
xchg
in
repz
fcmovu
pop
movsb
mov
sti
cmc
popf
scas
stos
jae
ljmp
add
clc
xchg
add
mov
icebp
pop
in
pop
or
pop
add
repz
sahf
setg
fdivrl
push
mov
jb
mov
jge
fadds
clc
jne
sub
lahf
mov
mov
jl
cwtl
negl
xchg
ss
adc
adc
cwtl
int3
lods
sarb
inc
jne
shll
add
xchg
andl
and
push
lods
popf
dec
xchg
mov
sub
adc
mov
mov
fiaddl
inc
in
adc
dec
or
fcmovbe
mov
pop
sbb
cli
lock
loop
xchg
call
fldenv
fcmovnu
das
jbe
insl
insb
fsubrl
xchg
sub
call
aad
add
push
or
mov
push
sbb
or
push
hlt
sahf
roll
mov
fnstenv
ja
loope
js
add
inc
test
sub
imul
movsl
inc
arpl
shl
cmp
inc
fcoms
dec
outsl
and
test
jp
jb
dec
stos
cmovnp
outsl
push
mov
aam
mov
cli
jmp
cmp
aas
push
jbe
test
inc
sbb
scas
dec
and
ja
mov
cmp
mov
sub
sahf
mov
cmc
pop
jmp
mov
adc
inc
pop
mov
jb
and
pop
loop
push
fistps
out
aas
lcall
imull
mov
cmp
jg
lcall
cmpsb
push
aaa
cld
clc
pop
push
ss
lahf
lock
mov
testb
adc
cltd
push
bts
mov
add
popf
call
popa
bound
and
jecxz
mov
scas
test
aas
loop
dec
dec
popf
out
addr16
or
xchg
iret
pop
fisttpl
icebp
pop
out
daa
filds
shl
rcrb
or
cmpsb
sbb
and
cmp
inc
les
ljmp
push
mov
stos
imul
jbe
dec
jae
push
mov
rcrb
mov
fcomi
out
jno
inc
cmp
inc
stos
pushf
ss
push
arpl
adc
cmp
arpl
mov
cmpsl
rcll
cmp
flds
popf
lahf
xor
mov
call
jmp
cs
cmpsb
mov
cmpsl
sub
vpshufd
xchg
fisubrl
stos
inc
movsb
daa
mov
xchg
fdivp
aas
cwtl
sbb
adc
imull
icebp
push
sahf
in
mov
push
mov
ljmp
push
push
push
js
sub
lock
adc
inc
sbb
inc
nop
mov
jg
adc
cmc
add
add
pop
mov
in
pop
sbb
js
inc
out
lret
pop
mov
repz
into
rorb
cmp
jbe
ds
mov
and
pushf
jp
jae
pop
out
ret
inc
inc
adc
adc
push
test
mov
mov
jno
and
mov
xchg
ss
mov
in
sbb
int3
inc
test
adc
cmp
pusha
xor
decl
adc
or
push
sbb
outsb
adc
jmp
xchg
lods
andb
sub
jge
sbb
fldt
pop
out
jb
stos
mov
lods
test
xchg
sbbb
jg
pop
adc
dec
push
mov
stos
outsl
push
inc
js
mov
mov
pop
imul
fimuls
add
add
jo
or
jbe
movsb
xchg
inc
test
lret
ds
rcll
xchg
shll
pop
xchg
ret
pop
mov
jbe
sbb
jle
cmp
cld
xlat
shll
movsb
or
adc
lods
and
xor
mov
cmc
fsubrp
jae
mov
mov
pusha
xchg
inc
int3
mov
sbbl
test
add
add
or
mov
inc
push
mov
nop
xchg
pop
movsl
cmp
loopne
fiaddl
inc
push
lock
std
push
cs
mov
lods
out
fimuls
pop
sbb
nop
or
lods
mov
add
in
push
aad
push
mov
xchg
push
test
lret
inc
cmp
xchg
jbe
ljmp
mov
dec
test
daa
mov
push
push
mov
jl
arpl
int
jns
lods
rcrb
test
arpl
fsts
cmp
ret
imul
std
xor
cli
ret
lds
and
movsb
dec
push
jmp
jecxz
xor
push
in
imul
inc
add
sub
sub
or
jns
ret
mov
andl
sub
fs
mov
adc
cmpsb
jge
in
insb
jns
lods
in
jmp
ret
xor
lods
mov
mov
sbb
pushf
xchg
dec
xchg
sub
adc
lahf
or
mov
leave
jns
push
dec
add
test
stc
popa
sbb
jle
movsb
orl
cwtl
and
and
push
and
ror
daa
roll
dec
or
popf
scas
inc
rcll
inc
sbb
cmc
cltd
loop
add
jbe
inc
add
shrb
xchg
xchg
aas
add
loop
xchg
arpl
add
inc
sbb
pop
lret
mov
xor
push
jle
hlt
jmp
stos
rep
stos
dec
push
gs
jle
pop
xchg
mov
pop
sbb
dec
outsl
and
addl
inc
cmpsb
inc
and
call
jno
mov
dec
inc
push
push
mov
sub
add
add
pop
adc
clc
filds
or
pop
adc
lret
nop
pop
sbb
add
sbb
pushf
add
dec
xchg
sbb
push
xorl
enter
lea
pusha
jne
cmpsb
cltd
mov
cmpsb
xor
xchg
cmp
clc
repnz
shlb
mov
sbb
pop
pop
jmp
outsl
cli
sarb
push
rolb
loop
in
dec
popa
xchg
jmp
ror
mov
insl
int3
mov
push
xchg
mulb
in
dec
aam
push
shll
outsl
jg
aas
cmpsl
jo
lahf
scas
popf
imul
jae
lea
rcrb
aad
cmc
pusha
jb
sub
push
test
ret
jp
je
push
and
incb
pop
jecxz
cwtl
je
jno
jno
and
xor
inc
imul
xchg
sbb
mov
jmp
bsf
aaa
ss
mov
sbbb
jl
jmp
mov
je
add
cmp
sub
das
cmp
rcll
push
xchg
push
mov
fwait
xorb
inc
inc
test
push
push
sbb
loop
outsl
fiadds
lahf
jns
dec
call
push
or
mov
inc
ljmp
cwtl
mov
clc
dec
xorl
jbe
scas
lretw
cmpb
sbb
push
mov
shl
xchg
mov
push
push
stc
aam
pushf
or
cli
push
inc
inc
out
cbtw
or
pop
into
ss
cmpsb
cmc
jnp
adc
xor
push
inc
mov
or
loopne
mov
ss
stc
je
ljmp
je
test
push
jl
pusha
decb
adc
das
stos
push
ja
xorb
cmp
sbb
in
movsl
mov
mov
and
mov
popa
test
ja
rol
ret
lea
push
adc
xor
repnz
cli
adc
mov
pop
aad
in
arpl
fcmove
pushf
mov
mov
xchg
sub
push
dec
dec
cltd
fisttpll
mov
jp
lds
inc
pusha
push
hlt
hlt
arpl
mov
lret
pop
cs
movsl
cmp
and
and
xor
mov
dec
mov
mov
adc
hlt
pop
jl
jp
dec
or
jb
stos
xchg
ljmp
pushl
sbb
movsl
add
mov
jecxz
dec
pusha
pop
and
out
jmp
push
jge
loope
loop
push
push
sub
leave
push
in
adc
push
adc
stos
ror
mov
add
js
mov
daa
xor
jecxz
insl
mov
xor
icebp
inc
jns
mov
aas
cmpsl
outsb
jno
in
outsb
sbb
fdivrl
cmp
xchg
jmp
pop
sarb
pop
ja
orb
or
out
mov
push
mov
jge
out
aaa
lods
test
ret
ret
or
cmp
and
and
and
aad
mov
loopne
mov
fisttps
das
js
sbb
testl
outsb
pop
mov
aaa
pop
insl
mov
jbe
ljmp
xchg
cmpsb
repz
rolb
les
xor
add
or
mov
faddl
sub
daa
into
repz
jl
jne
add
popa
test
cld
into
mov
sub
xor
adc
iret
sbb
mov
rcll
divl
subl
stos
push
adc
fdivrl
mov
in
add
push
sub
into
repz
gs
mov
inc
daa
cmp
ss
jge
leave
ss
pop
rclb
lds
dec
cld
xchg
cmp
scas
push
movsl
sbb
xor
xchg
mov
sub
xchg
insl
cmp
mov
adc
add
insl
mov
scas
mov
cltd
je
pop
adcb
lret
sub
jp
fisttpl
dec
and
mov
notl
sub
mov
mov
mov
or
into
mov
les
bound
std
jl
inc
adc
push
fnstcw
std
pop
xor
cli
and
or
out
fwait
jo
mov
rcrb
push
push
push
in
notl
in
xor
jo
add
jecxz
dec
inc
movsb
pop
shlb
movsb
hlt
push
dec
inc
sub
push
js
incl
fsubrs
adc
scas
inc
jmp
in
adc
fdivp
jg
out
or
lret
jne
and
adc
mov
ja
rcrb
out
scas
mov
jbe
out
xchg
iret
mov
ljmp
cs
push
adc
push
xchg
testl
rcrl
xchg
or
loopne
jb
and
ds
pop
or
sbb
xor
dec
lea
push
jecxz
fwait
jg
rclb
aas
add
mov
xchg
add
scas
jl
js
rorl
sub
cmp
xchg
mov
sti
outsb
negb
cs
push
add
xlat
mov
addps
cmp
sub
lds
lds
adc
loopne
inc
ficoms
inc
enter
or
or
jns
scas
dec
mov
je
sub
ret
dec
popa
icebp
jo
bound
inc
jne
sub
jp
cmp
leave
negl
outsl
sbb
sub
add
xchg
roll
dec
sub
inc
push
loopne
xchg
daa
testl
shlb
mov
hlt
and
mov
test
stc
jle
pop
cld
mov
adc
lods
adc
cmpsb
add
outsb
xchg
insl
adc
jp
data16
in
test
xchg
arpl
into
pop
fmul
je
inc
ret
cli
adc
movsb
mov
jl
xchg
xor
mov
and
xchg
aas
jnp
mov
xor
dec
inc
mov
das
add
dec
mov
aaa
cmp
insb
add
enter
testl
bswap
xchg
cmc
cld
push
lods
push
bound
loope
call
out
xlat
mov
cmpsl
nop
daa
popf
or
rcrl
dec
lea
add
lea
pop
jno
xchg
pushl
push
xchg
ss
sub
sub
lahf
nop
rcr
cmp
mov
pop
shrl
xchg
fwait
push
adc
add
lcall
push
fidivrs
dec
dec
and
les
cmp
clc
insb
out
xchg
in
imul
or
sahf
pop
or
ret
je
movsl
mov
idivl
std
into
mov
cltd
pop
into
loop
sbb
or
mov
rorb
xchg
sahf
rol
or
xchg
push
jl
leave
dec
loopne
cmovne
pop
test
pop
jmp
daa
adc
lods
jl
aam
orps
sahf
inc
test
inc
and
aam
mov
outsl
cs
test
cld
mov
aad
jle
push
xchg
neg
mov
clc
loopne
ja
dec
test
or
fldenv
pop
out
xor
jle
or
and
leave
inc
lods
in
clc
mov
xchg
dec
push
fs
lcall
outsb
jne
rcrb
or
or
popf
sbb
dec
sub
mov
mov
sbb
rcl
or
sbb
mov
cwtl
fidivrs
scas
push
cmp
mov
push
imul
mov
in
push
out
aad
sti
orl
jg
push
jg
outsb
xor
inc
aas
sub
push
sbb
sbb
mov
sbb
cmpsl
into
scas
data16
pop
lcall
ret
imul
sbb
sbb
rclb
push
pop
or
pop
mov
inc
test
pop
xchg
mov
fdivs
popa
fdivrl
out
push
mov
aaa
outsb
mov
inc
js
xor
xchg
fidivrs
sti
push
cmpsl
mov
lcall
fildl
lods
enterw
fmuls
test
push
xor
in
jb
sbbl
leave
test
ficoms
fldcw
in
and
lods
iret
add
and
in
mov
gs
push
sub
push
inc
andb
jno
stc
movsb
or
jp
dec
lret
adcb
pop
fiadds
sti
jp
add
nop
inc
cmp
stos
out
cwtl
out
push
and
mov
adc
pop
pusha
icebp
sbb
out
pop
mov
lods
sbb
rcrl
cmp
in
movsb
jl
std
jnp
cmp
or
inc
add
or
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
or
jp
sbb
jp
push
sub
iret
repnz
daa
cmp
scas
push
adc
jg
test
xor
pop
loope
and
int3
inc
subb
addr16
xchg
push
push
or
lret
movb
lds
add
xchg
inc
lods
adc
mov
add
test
cmp
xor
nop
jecxz
mov
enter
pop
xchg
inc
push
pop
cld
std
outsl
cmp
scas
sbb
mov
and
lds
aaa
dec
adc
dec
sub
mov
xlat
fidivrl
pop
sub
mov
ja
movsl
fwait
cld
sbb
in
pop
push
data16
shll
jnp
mov
iret
lds
add
pushf
mov
in
sub
xchg
adc
fiadds
add
pusha
sbb
push
mov
or
pop
pop
or
pop
stos
out
out
test
insl
inc
mov
aad
ljmp
or
cmp
aam
in
imul
lret
jne
imul
add
ss
pop
xchg
inc
fwait
pop
jle
xchg
sbb
jmp
xor
inc
lahf
imul
mov
insl
cmp
call
fists
ret
sbb
cli
sbb
stc
push
aam
push
les
mov
or
int
pop
push
sbb
in
cmp
popa
fs
sub
fnsave
in
dec
or
ja
inc
ja
jge,pn
pop
aad
hlt
sbb
lahf
in
and
dec
jge
aam
das
fcompl
test
loopne
jl
rcrl
scas
or
cli
jno
ret
jbe
shll
out
inc
push
sbbl
or
adc
cmp
push
push
dec
bound
lret
xchg
inc
fwait
das
nop
cmp
ja
push
push
sbb
xchg
sub
push
mov
push
add
pop
mov
xor
stos
imul
mov
mov
cmpsb
insl
daa
push
mov
mov
into
push
xorb
repz
inc
inc
jno
mov
insl
mov
inc
and
cmc
or
mov
mov
enter
into
aad
add
fistpll
xor
jbe
nop
mov
js
fstp
icebp
and
mov
push
add
ficomps
push
adc
pop
cmpsl
jbe
shl
and
cmp
push
add
cmp
iret
and
dec
es
fisubrl
mov
xchg
test
lods
jge
xchg
daa
out
pop
bound
mov
sub
mov
incl
jmp
mov
mov
mov
ja
fstpl
and
in
jmp
mov
aam
repnz
xchg
mov
sub
cmp
sub
js
pop
mov
lea
stc
xor
xchg
mov
or
aaa
decb
bnd
mov
inc
mov
ret
in
inc
mov
mov
repnz
jns
push
dec
stc
insb
loopne
das
sub
in
orps
shll
inc
add
movaps
out
cmpb
shlb
mov
adc
repz
fiadds
adc
push
sub
inc
mov
inc
ds
in
stos
sbb
mov
push
jae
popf
int3
inc
lret
xchg
loopne
fsubrs
pop
pop
mov
cld
inc
inc
mov
or
iret
add
outsb
mov
push
sbb
das
mov
leave
shufps
movsb
sub
pop
jns
push
fmull
lcall
jo
mov
mov
adc
stos
and
out
sbb
inc
push
push
mov
pop
cli
jb
nop
mov
loop,pt
mov
push
mov
mov
jmp
arpl
push
gs
ss
xor
jo
xor
jnp
nop
shr
jecxz
xor
in
and
mov
sub
mov
sub
mov
ljmp
mov
jmp
inc
mov
imul
and
sub
fiadds
les
lret
pop
daa
popa
lods
jns
pop
inc
rcll
xchg
xchg
mov
jp
pop
jl
mov
outsb
imul
adc
pop
inc
mov
stos
movsl
dec
pop
aam
inc
inc
scas
or
xchg
and
in
test
dec
rorl
and
pop
pop
inc
imul
loopne
pop
inc
into
ret
arpl
add
test
je
mov
fcomi
loop
push
pop
les
cmpsl
mov
cmpsl
ficoms
inc
adc
bound
lods
pushf
clc
lods
sub
and
mov
lret
fwait
cmp
mov
cmc
aaa
test
mov
fisubrl
iret
mov
roll
fimull
xchg
fadd
xchg
adc
orb
mov
cs
loopne
outsl
cmp
add
dec
popl
push
iret
mov
rcrb
inc
mov
mov
pop
sbb
sbb
pop
cwtl
jne
out
cmpsb
xchg
orb
mov
fldenv
or
loop
bnd
call
sub
push
add
fstl
dec
and
clc
fnsave
adc
subb
inc
ja
shrl
xchg
arpl
push
xor
xlat
mov
cwtl
jmp
mov
inc
shrb
arpl
scas
fdivrl
nop
mov
lods
mov
cmp
sub
cs
cmp
fwait
repz
shrl
push
xlat
sbb
into
add
aam
fidivrl
ret
and
jg
sbb
rorb
dec
gs
jne
inc
jg
xchg
dec
popa
xor
adc
test
mov
es
cwtl
mov
sub
or
repz
mov
cli
icebp
mov
dec
pop
push
xor
mov
mov
inc
push
jnp
sbb
push
test
xchg
or
xchg
lcall
jl
cmpsb
adc
mov
data16
cmp
fstl
adc
jns
lods
adc
inc
xchg
cmpsl
sahf
popf
adc
test
cli
aas
xchg
pop
cmpl
imul
pop
outsl
inc
ss
imul
fs
pop
sbb
mov
adc
lods
jno
pop
in
leave
sbb
ljmp
xchg
mov
testl
jl
int
add
push
push
int
repnz
mov
neg
mov
lcall
ja
or
rcl
jle
les
fldcw
push
call
mov
or
sbb
adc
xor
cmc
push
fwait
cmp
or
push
ret
push
pop
ror
out
mov
dec
push
jmp
add
outsb
add
in
pop
nop
int3
mov
xor
dec
mov
rcrl
ret
loope
negb
and
push
ja
push
dec
jb
icebp
mov
sbb
dec
cwtl
mov
adc
and
cs
pop
pop
iret
xchg
jl
inc
mov
cmp
mov
mov
inc
cli
scas
rcl
leave
mov
leave
mov
push
pop
in
out
and
mov
push
test
push
test
dec
mov
inc
xchg
repnz
movsl
pop
in
addl
ret
das
xchg
ds
sbbl
sti
and
lret
xorb
xchg
addr16
add
push
loop
sub
sbb
and
jbe
imul
in
sub
jp
int3
orl
addr16
fbld
dec
ror
ja
test
ja
add
fcmovb
cld
data16
fsts
mulb
mov
cmpsl
xlat
add
cmp
andb
cmp
mov
fidivrs
lcall
adc
out
cmp
jg
pop
repnz
xor
pop
xor
adc
aad
mov
jmp
add
add
mov
in
jge
fs
and
mov
outsl
add
mov
insl
rclb
cmc
vmaxsd
pop
mov
pop
mov
mov
push
mov
stos
adc
cmp
push
loope
fistl
lods
lretw
roll
push
mov
imul
shll
enter
cltd
inc
test
cmpsl
inc
dec
cwtl
or
and
adc
add
std
cmpsb
mov
int3
jmp
mov
out
mov
ss
sub
lods
imul
out
ja
repnz
shlb
into
pop
movsl
ljmp
fistl
lret
xchg
call
adc
gs
popf
and
xchg
lahf
dec
fst
ficomps
and
icebp
mov
fnstsw
sbb
sarl
adc
imul
push
adc
jmp
mov
jecxz
out
aam
inc
cmp
xchg
pop
flds
fistpll
dec
nop
mov
inc
repz
pop
sub
pop
sbb
ljmp
mov
inc
cld
addr16
lods
cwtl
push
js
lret
sbb
xlat
jecxz
xchg
xchg
outsl
xor
jl
data16
dec
rorb
lods
and
or
xchg
imul
push
and
add
imul
add
aaa
insb
sub
mov
sub
pop
cmp
xchg
fnstcw
push
mov
adc
fsts
xor
xchg
int
mov
les
mov
mov
jns
shrl
mov
add
or
push
dec
lods
adc
cltd
cwtl
gs
movsl
fnstsw
sub
add
repnz
notl
jmp
test
std
xor
push
repz
jmp
sbb
or
sub
movsl
inc
sbb
xor
jmp
or
clc
mov
inc
and
dec
add
jb
pop
cld
jmp
jle
mov
cltd
sbb
jle
push
jne
mov
dec
push
bound
lret
mov
lock
sub
stc
jmp
xor
ljmp
mov
hlt
adc
and
stc
sub
sti
mov
sub
cli
out
movsb
mov
les
imull
mov
jle
cmp
mov
out
xor
mulb
mov
cmp
mov
and
insb
fs
push
jl
or
mov
jb
jecxz
std
insb
and
mov
xchg
mov
xchg
cmpl
xor
mov
jp
leave
mov
mov
fwait
push
dec
push
push
pop
push
ljmp
xor
aad
leave
pop
in
jae
daa
aas
push
mov
xchg
add
mov
xlat
xchg
push
mov
cs
add
xor
pop
dec
mov
adc
test
stos
cmpb
xor
sub
sub
popl
and
inc
dec
or
push
rcrb
aas
movsb
xchg
or
xor
sub
cmp
ror
fsubr
pusha
lock
and
addr16
iret
push
out
repz
cmc
sbb
add
call
into
lock
lds
outsl
xlat
test
mov
repz
dec
cmp
lea
imul
rol
sbb
leave
dec
push
or
xor
pop
test
inc
cmp
push
sub
pop
pusha
dec
popa
xor
nop
dec
sti
mov
jae
pop
jecxz
in
xor
mov
cwtl
adc
mov
sub
push
leave
add
xor
leave
les
jb
shl
rolb
jmp
insb
push
push
cmp
inc
mov
mov
cmp
je
icebp
clc
lods
rcr
aas
pop
push
pop
jp
aad
pop
mov
adc
sbb
outsl
jle
loope
inc
cmp
and
or
sub
int3
inc
dec
aaa
mov
xor
lock
or
adc
lods
imul
inc
mov
sub
test
fcompl
popf
call
fisubs
or
xchg
pop
inc
push
adc
dec
xor
popa
scas
push
push
cld
pop
into
aam
shlb
jecxz
or
pop
lds
or
lock
sbb
xchg
sbb
fdivp
movsl
push
inc
cmp
mov
je
loope
ljmp
dec
out
clc
and
pop
insb
icebp
fs
mov
inc
pop
adc
dec
ss
push
sahf
out
insl
xor
pusha
outsl
mov
aas
pop
or
jle
cmp
ds
cli
mov
lds
xchg
ja
mov
inc
mov
dec
mov
sub
sbb
cmpsb
push
xchg
xchg
xchg
mov
mov
sbb
mov
push
fimull
adc
and
sahf
fisttpl
mov
gs
mov
pop
mov
andl
and
jb
bound
cmp
xchg
inc
push
xchg
pop
push
call
sahf
adc
and
and
cmp
data16
in
outsl
test
mov
les
mov
mov
xor
lcall
inc
cmp
mov
mov
inc
pop
jmp
cmp
mov
xchg
fbld
or
std
imul
outsl
es
js
stc
or
lds
jge
nop
mov
ret
adc
cmp
xchg
or
cmp
andl
rorb
mov
and
jns
xlat
cmp
fadd
insb
cmp
adc
and
adc
sbb
pushf
enter
xchg
leave
xor
insl
fst
adc
dec
xchg
xor
cli
jbe
jmp
pop
aaa
mov
test
lahf
sbb
xchg
inc
popf
shll
sub
adc
shll
sub
push
adc
mov
aad
stos
out
imul
xchg
jnp
rorl
stos
mov
ret
outsb
out
jmp
mov
sub
pop
js
inc
pop
push
pop
sub
jmp
mov
clc
adc
stos
iret
ret
push
pop
mov
push
out
and
jg
dec
arpl
out
inc
stos
vcvttpd2dqy
pop
rcrb
cmp
out
pop
pop
test
je
les
jg
inc
sbb
test
xor
aas
scas
sbb
push
inc
cmp
add
leave
das
push
or
cmp
push
or
in
pop
xchg
into
dec
outsb
cmc
shl
mov
ljmp
xor
fnsave
mov
and
cmc
jo
add
and
push
inc
in
leave
out
add
add
shl
icebp
adc
cmc
and
jp
dec
bound
in
xorb
mov
ret
push
jp
dec
andl
jg
ds
add
popa
mov
inc
fcoms
je
dec
and
scas
or
mov
and
and
fwait
push
repnz
insl
mov
outsl
or
int
bound
mov
or
pop
mov
addb
movsb
das
jb
popf
and
sahf
imul
fbstp
sub
stc
sbb
sbb
pusha
jo
lods
rcrl
cmp
das
or
push
xor
fstpt
jge
ss
mov
shrl
mov
adc
xchg
pushf
mov
mov
cmp
popa
jo
or
lods
dec
mov
in
xor
stos
jb
and
leave
inc
test
add
lods
sbb
and
ljmp
nop
sub
dec
jmp
and
xchg
icebp
jg
insl
fnstenv
sbb
call
gs
loop
jnp
test
push
int3
mov
mov
and
jmp
xchg
fdivrl
jns
loop
pop
sbb
cmp
xor
fsubrp
roll
mov
or
xor
adc
aam
add
adc
fs
popa
dec
out
inc
dec
stc
or
jns
mov
cltd
stc
jbe
sub
cltd
lret
dec
push
xor
test
cmpsb
jge
mov
inc
aas
cmp
mov
popf
dec
popa
adc
jb
adc
or
je
inc
imul
and
enter
int3
add
scas
icebp
sub
int
pop
add
add
adc
mov
pop
jle
rolb
dec
jmp
orl
mov
fcmovbe
lds
repz
dec
xor
daa
xor
and
pop
jb
aas
cltd
or
pushf
add
rorb
movsb
loop
sub
xor
stos
loope
movsl
inc
cmc
jne
in
out
sub
in
dec
aaa
or
stos
in
jp
push
xchg
cld
push
dec
adc
loopne
lds
mov
xor
mov
test
jo
ja
andl
icebp
cs
in
std
test
movsb
cmp
call
js
mov
enter
insl
xchg
jae
dec
pushf
outsl
int
nop
and
inc
jmp
js
neg
xor
jbe
push
cmp
pusha
cmp
or
cmpsl
mov
cmp
ficomps
ljmp
in
cmpsb
leave
add
and
add
mov
dec
mov
mov
leave
call
pop
stos
xor
sahf
hlt
fwait
cld
stos
int3
mov
mov
xchg
fs
clc
mov
or
loopne
inc
addr16
es
and
nop
inc
mov
test
test
aam
adc
jmp
cld
int
jge
pop
push
mov
sub
fwait
sbb
and
unpckhps
or
mov
hlt
stc
xchg
cmc
ja
or
and
cmpsb
dec
adc
popf
in
lock
fwait
inc
cwtl
leave
insb
push
lret
lcall
xor
jae
mov
pop
imul
pop
call
mov
scas
cs
lret
mov
cmpsb
out
xor
pushf
mov
rcrb
xor
xor
je
iret
pusha
popf
pushf
or
add
sbb
push
mov
push
push
lret
sbb
hlt
mov
mov
and
pop
in
aad
cltd
ret
cltd
test
pop
es
jecxz
fists
push
mov
shll
sub
cli
mov
nop
shlb
pop
lahf
hlt
xchg
dec
mov
test
frstor
sub
pop
icebp
mov
orb
in
lret
nop
cmp
rcrb
arpl
dec
cwtl
aas
mov
add
pop
inc
lahf
mov
push
mull
pushf
mov
jbe
out
xor
movsl
cltd
ja
pop
fmull
cmc
sub
in
xor
mov
sub
xchg
ret
pop
mov
sbb
cmp
insb
xchg
andb
push
lret
js
inc
in
sbb
fcoml
ret
mov
cmp
lcall
sub
push
add
jge
fwait
and
cld
mov
loopne
push
sub
sub
das
push
adc
add
into
ds
enter
pop
fdivl
inc
in
fmul
fidivrl
out
ja
inc
test
dec
out
xchg
push
andl
stos
inc
in
repz
mov
mov
lods
lcall
push
jmp
ret
mov
push
loope
sar
mov
loopne
dec
and
es
add
ljmp
movb
or
test
xor
xchg
popa
inc
test
xchg
shll
xchg
test
test
out
aad
push
insl
mov
adc
jnp
inc
pop
cwtl
ja
imul
sbb
jecxz
les
popf
negb
push
cmpsb
lock
dec
enter
into
add
arpl
clc
outsl
ljmp
jge
stos
and
mov
stos
xchg
adc
roll
stos
or
ret
jb
push
shl
ja
mov
pop
stos
adc
rclb
or
and
push
jo
cld
and
xor
inc
shlb
fwait
loope
lret
cmc
xor
sbb
in
ja
jecxz
repz
inc
xchg
in
mov
inc
out
insb
notl
insb
loope
popa
daa
movsb
push
cmp
xlat
ss
mov
cwtl
sbb
mov
insl
rolb
push
xchg
lods
std
dec
loope
inc
out
in
shl
or
jmp
sub
push
or
fs
or
int3
mov
jge
das
cmovo
lcall
sahf
sub
aam
hlt
stos
add
fwait
pop
mov
loope
scas
das
push
and
push
mull
or
cli
or
lret
mov
cmp
les
frstor
or
ljmp
xchg
icebp
cltd
vpxor
or
mov
nop
sbb
test
leave
pusha
mov
dec
fadd
xchg
dec
add
cmc
ds
inc
cmp
fisttpl
push
lcall
scas
xlat
lods
adc
mov
jge
test
jne
push
pop
sub
imul
or
dec
xchg
push
aad
sub
push
mov
les
lods
mov
or
mov
sub
mov
nop
rol
gs
lret
cmpsl
lret
dec
hlt
add
adc
pop
jmp
inc
mov
jp
pop
outsb
pushf
int3
cltd
gs
hlt
test
xchg
ss
adc
dec
inc
xor
sbb
push
outsl
movsl
mov
cmp
or
push
push
jp
ret
sti
sbb
into
mov
es
popf
das
lods
inc
int
jae
mov
and
push
cmp
xchg
jp
xchg
ret
pop
cld
jno
mov
ret
lret
xor
inc
cmc
inc
popa
in
add
cltd
int3
stos
mov
subl
jecxz
inc
ret
outsl
adc
pop
adc
out
inc
dec
out
jo
xchg
insb
fadd
mov
call
imul
adc
sbb
faddl
addr16
out
xor
shll
mov
lds
pop
jge
cmp
lods
shlb
and
xor
cs
sub
clc
stc
lret
sbb
jo
inc
fbstp
lcall
inc
jl
inc
shlb
jp
in
push
out
bnd
push
push
xor
out
out
arpl
cmp
cltd
push
js
fiaddl
movsl
add
into
xchg
xchg
cmp
sub
xor
push
adc
test
cmc
call
addl
shrb
jmp
insb
aam
addr16
stc
cmpsb
xchg
icebp
pop
movsl
mov
shrb
nop
imul
dec
bound
mov
imul
inc
dec
mov
shlb
or
movl
aaa
stos
add
xor
icebp
mov
xor
cmp
push
ret
dec
pop
test
and
push
jno
js
inc
fwait
cmp
mov
pushf
cli
ret
fimull
ja
cmp
enter
adc
push
pop
sbb
rcl
jo
adc
repnz
jo
insb
out
push
jbe
mov
xchg
outsb
ljmp
dec
sub
mov
outsl
sub
cmpsl
push
jge
rclb
xchg
mov
pop
test
lds
adc
pop
dec
enter
mov
push
lea
jge
dec
and
rcrb
cmp
sub
adc
cmpps
cmpsl
pop
push
out
shrl
sbb
dec
enter
aad
adc
sbb
scas
cmp
lret
mov
add
push
xchg
or
pop
add
enter
pop
cmpb
ds
andl
js
mov
scas
shll
mov
sbb
mov
push
pop
into
inc
rcrl
pop
bound
test
mov
adc
fimuls
es
verr
outsl
dec
push
add
adc
outsb
mov
aaa
jbe
xchg
xchg
ficompl
xorl
xchg
cmp
adcl
push
in
aas
jp
inc
or
mov
aas
lcall
dec
xor
push
xchg
xchg
adc
je
inc
outsb
gs
pop
in
mov
ret
scas
inc
sti
pop
loope
negb
cmp
add
jle
lods
or
repnz
into
arpl
nop
andl
test
je
push
mov
jecxz
mov
std
rorb
lock
jns
dec
hlt
shlb
negb
adc
in
sub
xlat
nop
dec
mov
mov
dec
insb
xchg
xorb
xor
div
adc
xchg
xchg
jb
ljmp
pop
mov
mov
insb
cmp
push
loop
sbb
insl
xor
stc
adc
and
call
shlb
es
addr16
imul
jno
xor
sti
dec
stc
mul
out
leave
call
cmpsl
xchg
mov
push
jge
iret
daa
or
mov
sub
mov
mov
cmc
insb
in
or
sbb
sbb
clc
xlat
stc
inc
jo
mov
jbe
int
stos
fldenv
mov
sahf
and
test
mov
enter
pusha
into
xchg
inc
sbb
xor
imul
jecxz
scas
xchg
int
cmp
cli
hlt
test
add
add
fmull
or
or
push
add
insl
or
jg
imul
ror
xchg
sbb
lret
fisttpll
add
aaa
sbb
jle
mov
or
idivl
sbb
mov
jb
xor
mov
mov
xchg
and
push
int
nop
mov
lock
cld
xlat
jnp
push
aas
scas
jl
and
pop
test
sti
dec
popl
xor
xor
sbb
sub
push
cmp
pop
xchg
std
or
gs
and
add
js
xor
xchg
jmp
rcrl
mov
inc
sbb
nop
mov
adc
jge
std
call
popa
lods
jbe
adc
sub
adc
xchg
insl
addl
mov
shlb
cmp
scas
das
loopne
push
out
mov
xchg
inc
push
push
mov
test
pop
leave
int
sbb
sub
ja
or
in
in
int3
in
or
adc
lock
insb
imul
in
sbb
ret
inc
nop
sbb
shrb
pushf
pop
push
imul
add
pushf
pop
lahf
push
mov
ret
pop
in
push
dec
inc
and
inc
cmp
adc
add
jp
pop
into
cli
push
push
push
rorb
push
pop
mov
in
push
aam
cmp
shll
or
ret
repz
pop
dec
add
imul
lds
test
aaa
push
fcompl
stc
js
lods
jbe
mov
pop
lahf
adc
pop
ret
sbbb
mov
ss
push
dec
test
and
mov
cmc
adc
mov
mov
adc
call
ret
dec
lods
adc
cs
and
adc
sbb
jbe
into
and
lds
subl
rcrl
pop
jo
add
gs
pop
fldcw
hlt
ret
sub
gs
push
movsl
xchg
in
inc
or
leave
xor
sub
jo
xor
mov
rorl
xchg
xor
loop
in
sbb
mov
dec
icebp
add
stos
xor
mov
aam
push
imul
xchg
out
stos
ljmp
lods
les
fistpl
std
mov
push
in
pop
lcall
cmp
xor
dec
loopne
iret
out
inc
mov
leave
rcll
inc
xor
outsb
addl
in
mov
fcmovu
fcompl
push
mov
vcvtsi2ss
inc
sub
addb
jmp
and
icebp
in
mov
add
push
inc
in
adc
roll
pop
cltd
mov
shll
dec
dec
dec
dec
mov
mov
cld
imul
mov
pop
sbb
stos
jge
sub
repnz
sbb
dec
ret
icebp
jecxz
lds
cwtl
dec
xlat
mov
rcrl
jno
push
xor
aas
mov
je
mov
dec
hlt
pushf
dec
aaa
fildl
lahf
fsubrs
ja
pop
lods
fcoml
xor
int3
cmp
pop
sub
fs
push
inc
pop
aas
cmp
sub
bnd
lock
lcall
push
dec
xor
sbb
sbb
ss
fadd
loopne
in
test
decl
data16
xchg
js
add
push
rcrb
bound
aaa
pop
push
mov
pop
sub
push
out
insb
insl
pop
dec
subb
pop
loop
pushf
cmpsl
or
cmpsb
stos
ss
ret
xor
stos
je
ljmp
lds
jae
outsl
sub
test
mov
ljmp
insb
mov
iret
mov
into
sbb
cmp
inc
cli
ljmp
popa
sbb
fnstcw
jo
pushf
pop
cmc
enter
push
jno
xchg
pop
insl
nopl
xor
enter
aam
stc
aas
xchg
add
push
ljmp
adc
add
stos
scas
mov
push
mov
push
lock
and
in
push
add
lret
fdivl
adc
addb
inc
and
or
pop
out
pop
or
adc
pop
xchg
push
push
push
xchg
int3
pop
xor
sbb
adc
mov
and
out
pop
inc
dec
cli
out
ret
jg
xchg
xor
cld
insb
adc
push
in
cmp
jl
push
mov
cwtl
ds
out
shl
add
mov
xor
clc
loop
outsb
rclb
mov
aam
lret
imul
in
inc
test
xchg
lock
lahf
cld
pop
inc
sub
dec
in
xor
jno
stos
cmpsb
jns
mov
cmp
jb
aas
fs
cmpsb
jne
std
dec
mov
pop
fsubrs
loop
jl
jae
out
stc
cld
imul
mov
rcl
or
scas
and
popf
mov
scas
inc
xor
dec
lods
call
and
sub
ds
push
sti
pop
fstpt
fidivrs
mov
movsb
cmp
mov
mov
xlat
rcrl
das
out
mov
les
jno
adc
ret
repnz
scas
shlb
fs
adc
sbb
pop
fwait
cmp
cmp
shrb
std
pop
xlat
xor
jno
sub
push
push
nop
or
xchg
aas
imul
fucomi
xchg
push
jbe
out
inc
fstpt
or
ja
fidivrl
out
mov
rcr
iret
movsl
sbb
xchg
fimull
jne
cmp
jge
pop
test
lcall
xchg
mov
jae
std
rep
xor
add
stos
fidivrl
or
shll
inc
cmc
sub
sub
push
xchg
sub
sahf
stc
iret
je
add
pop
popf
adc
clc
or
xchg
xor
repz
pop
adc
aad
and
fldt
out
not
adc
and
xchg
push
movsl
push
sub
push
sub
jl
cmp
sub
and
mov
fcomip
icebp
sbb
xor
dec
xor
cmpb
push
out
or
in
mov
mov
ja,pn
sub
out
adc
dec
mov
add
loop
test
cmp
push
mov
rorb
and
xor
xchg
repnz
mov
filds
dec
dec
xor
mov
add
xor
dec
outsl
jecxz
dec
push
push
add
imul
int3
push
gs
mov
xchg
pop
mov
leave
jbe
pop
pop
mov
inc
call
dec
gs
arpl
pop
xor
xchg
add
xor
call
notl
inc
ret
jmp
aam
fcom
js
sbb
jge
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
aas
cwtl
cmp
jmp
jp
sub
or
inc
add
mov
pop
add
lock
loop
cmp
fldl
jecxz
jns
or
aam
push
decl
fwait
imul
in
push
xchg
push
cmc
arpl
ret
push
rclb
pop
adc
jle
lds
xor
sbb
jmp
in
add
add
push
sbb
int
jecxz
in
jo
negl
mov
stos
mov
mov
ret
pop
mov
pop
dec
sbb
fisubrl
int3
in
cmpsl
lahf
push
loope
adc
nop
test
mov
jno
jb
sarb
mov
cmp
cmpsb
mov
cmp
xchg
sti
idivl
jno
pop
jp
int
jae
out
mov
clc
inc
mov
cmp
sahf
mov
and
mov
stc
shlb
rorl
pop
lods
and
rclb
mull
sbb
and
repnz
xchg
nop
mov
or
loopne
cmc
addr16
or
ja
cltd
out
mov
pop
push
jo
lea
cld
loopne
arpl
sbb
xor
jmp
lods
jl
jb
sarb
ljmp
and
sub
in
push
out
pop
gs
mov
and
test
aad
cmp
inc
aas
fwait
lcall
sub
mov
mov
cs
out
push
dec
lcall
cmp
inc
mov
fimull
cmpsl
in
sbb
pusha
jbe
push
int
xchg
push
adc
push
bound
aad
jo
insb
sbb
mov
cmc
mov
add
outsb
jb
cmc
mov
ret
scas
push
lds
je
sub
mov
dec
daa
jae
push
pop
mov
mov
in
mov
xchg
jmp
jno
mov
adc
jg
stc
adc
fisubrl
jl
xchg
adc
fwait
inc
addr16
int3
or
sub
jae
gs
xor
addl
jg
call
dec
inc
mov
xor
push
pop
mov
jecxz
cltd
clc
xlat
jb
mov
cmp
aad
inc
shlb
cld
or
icebp
mov
std
popf
ljmp
jne
cmc
adc
xchg
lods
sub
xchg
popf
sub
js
pushf
mov
adc
push
lret
outsb
rcl
inc
shll
fnstenv
dec
add
cs
and
and
icebp
movsb
adc
xchg
inc
imul
inc
mulb
pushf
movsb
push
es
rorl
imul
aas
mov
mov
mov
fcmovb
pop
xchg
adc
insl
orb
int3
mov
scas
sub
ljmp
lahf
fistps
int3
adcb
test
jne
push
inc
shll
push
jbe
xchg
and
sahf
in
xor
nop
pushf
mov
inc
cmp
aaa
ret
testl
xchg
pop
mov
and
insl
push
out
lret
adc
push
pop
mov
and
xchg
mov
inc
and
xlat
ficoml
jp
and
aad
out
dec
mov
fdivs
loop
outsl
in
sbb
ficoml
sub
and
lods
addr16
scas
loopne
das
cs
insb
outsb
xor
ja
pop
outsl
in
lret
sub
push
pop
imul
mov
dec
lcall
stc
call
mov
jb
imul
mov
out
cmp
sub
fiaddl
mov
insl
adc
icebp
or
bound
iret
mov
jb
mov
xor
jne
neg
xchg
adc
sub
enter
fsubs
push
lds
dec
pop
and
pop
push
movsb
xchg
pop
ret
cmpsb
ljmp
xchg
inc
psraw
pop
sbb
leave
popa
clc
pop
sbb
std
xor
xchg
cmp
movsb
incb
dec
mov
add
arpl
mov
and
mov
loopne
movsb
xchg
xchg
out
lock
sub
dec
rolb
iret
imul
fisttps
rcrl
inc
das
and
mov
scas
mov
push
push
sbb
xchg
push
cli
jle
shll
subb
dec
and
std
sahf
pop
aas
out
pop
cmpb
jo
imul
js
outsl
jae
mov
popa
xchg
mov
int
out
int3
cmp
and
add
and
xchg
nop
sti
push
aas
or
xor
mov
adc
xchg
stos
adc
iret
adc
or
xlat
fildl
add
das
jns
inc
imul
stos
pop
orl
lea
popf
ficompl
xchg
ljmp
cld
lods
and
and
push
inc
jns
call
dec
cmp
sub
ret
jle
cltd
xchg
mov
aas
push
imul
in
add
adc
in
cmp
jnp
mov
xor
inc
cmp
jl
les
aad
repnz
add
adc
cmp
sub
clc
jmp
rcrb
insl
dec
sub
add
cmp
mov
push
cmc
mov
scas
lock
pop
ss
inc
sbb
xchg
shll
lea
pop
or
mov
hlt
imull
dec
ljmp
xor
inc
inc
out
pusha
notrack
add
jecxz
mov
cmp
mov
mov
or
mov
mov
pop
shrb
ljmp
push
add
or
mov
sar
xchg
fnstcw
xchg
dec
mov
mov
sbb
mov
dec
dec
fisubrl
mov
jl
bound
pop
sub
test
jecxz
icebp
push
push
test
pusha
xchg
mov
cmp
or
leave
cmp
imul
int
in
xor
mov
sub
pop
lods
mov
push
jae
cmp
jb
outsb
fcoml
and
jmp
lods
jb
and
getsec
mov
push
sbb
imul
aam
nop
push
scas
insb
mov
movsl
fs
in
arpl
mov
lods
inc
mov
and
out
fwait
ret
fwait
shlb
out
stos
mov
leave
xchg
jnp
imul
cmp
mov
outsb
push
ja
pop
mov
jnp,pn
int3
lret
add
xchg
xor
sti
leave
jmp
jecxz
pop
sub
mov
mov
jmp
popf
repnz
mov
movq
add
js
insb
cmpsb
push
subb
arpl
jns
xchg
loopne
pop
rcl
pop
sub
lds
add
xchg
inc
fnstsw
push
dec
or
mov
sbb
int3
mov
pop
and
dec
adc
and
lahf
sbb
loopne
in
cmpl
insl
cmp
mov
mov
aad
data16
or
repz
sbbl
mov
ret
cmp
cmc
or
daa
in
add
loopw
push
stos
scas
cmp
push
into
fiadds
ljmp
xchg
adc
and
fwait
mov
sub
jle
xchg
mov
movsb
fstp
dec
mov
cmp
lea
aaa
sub
ret
ljmp
mov
adc
lcall
cmp
mov
cli
aas
in
cmp
aas
dec
int
fsubs
xor
ljmp
mov
stos
insl
imul
pop
pop
xor
push
pop
mov
ffree
jnp
jne
mov
lcall
push
outsl
and
mov
xchg
out
xor
dec
fildll
and
jecxz
mov
jae
and
mov
decb
fmul
clc
out
xchg
out
jns
lds
jb
in
mov
pop
and
jge
inc
fldt
cld
in
test
scas
leave
xchg
add
jge
sar
or
xlat
setg
jns
sub
push
cmc
std
push
mov
xchg
lods
movsl
and
hlt
fwait
cmp
pop
in
xor
jmp
push
xchg
adc
cmp
aam
and
pop
adc
pop
mov
inc
sub
push
aas
mov
ret
and
data16
cmp
mov
dec
in
shrb
mov
js
sbb
or
outsb
mov
inc
sub
cmc
outsl
mov
int
jg
sbb
pop
dec
stos
mov
mov
mov
pushf
je
jo
jno
les
sbb
and
in
stos
push
inc
jg
add
cltd
xor
inc
rorb
pushl
fcompl
sbb
cmpsb
lock
xor
lret
iret
in
repnz
dec
sbb
mov
pop
imul
dec
mov
test
mov
or
addr16
mov
sbb
pop
enter
lea
roll
xchg
push
ds
cmpsb
hlt
ja
xor
sub
movsl
jno
mov
inc
scas
jmp
sbb
pop
xor
cli
push
push
pop
pop
out
sar
cmp
mov
test
in
lods
xchg
mov
int3
aas
pop
dec
mov
int3
out
mov
shrl
dec
das
fisubs
or
and
fldcw
ret
add
fs
movsb
shl
and
ret
xor
iret
xor
pop
andb
pop
lods
popf
fcmovbe
pop
dec
adc
fimull
inc
outsb
push
ja
adc
sbb
mov
ss
adc
and
fsubl
xor
insl
mov
lds
pushf
cs
cmpsb
xor
fidivrs
xchg
hlt
mov
jl
mov
xor
xchg
les
das
cmp
dec
xchg
add
lods
sbb
mov
push
scas
out
dec
shrl
cmpsb
add
xchg
jbe
ljmp
shr
hlt
std
mov
push
dec
push
in
xor
out
aam
cmp
in
insb
sub
rorb
es
clc
lods
pop
movzbl
aam
popa
out
mov
dec
dec
adc
mov
inc
push
clc
xor
xchg
lea
pop
dec
rcl
xlat
leave
arpl
push
scas
dec
imul
xchg
add
xor
pusha
fadds
jae
bound
in
sub
mov
test
inc
xchg
mov
rclb
xor
es
not
decl
xor
out
cmp
jbe
in
in
lds
jnp
cmpsl
notw
sahf
outsl
jno
adc
sbb
cs
fists
cmp
inc
imul
mov
xchg
insl
scas
and
arpl
iret
or
pop
adc
movl
sub
cmp
dec
sub
mov
out
imul
push
inc
outsb
aad
inc
fwait
pusha
push
sub
inc
sahf
and
jne
cltd
cmp
loopne
movsl
testb
sbb
in
sbb
and
adc
and
add
pop
push
adc
sbb
cmp
dec
inc
adc
pop
lods
lods
ja
sbb
movsb
sub
add
mov
jp
adc
rorb
test
test
dec
aas
js
mov
ja
pop
sub
imul
aaa
xor
pushf
ss
sbb
jmp
mov
iret
xchg
mov
arpl
lea
add
out
mov
js
cs
out
test
mov
lods
das
ret
jno,pn
cltd
push
jns
cs
in
lcall
jo
and
mov
shlb
fs
push
outsb
cltd
mul
push
daa
mov
in
mov
add
fimuls
xorl
cld
jp
fnsave
stc
mov
fldenv
jno
pop
js
shlb
shlb
hlt
addl
jns
cmpsl
movsb
bnd
and
dec
insl
or
shll
mov
leave
and
sub
jl
test
cmp
iret
and
xor
into
bound
aas
xor
test
adc
into
add
clc
dec
in
and
aas
sub
or
js
or
dec
ljmp
lret
pop
or
mov
or
push
fs
add
hlt
xchg
les
ss
cli
cmc
mov
sbb
jmp
rorl
push
sarb
sub
mov
rorl
sub
cld
mov
cmp
push
cld
push
scas
hlt
dec
cmp
sarl
jl
inc
lods
sub
xor
jecxz
cmp
lret
jmp
cmpb
xchg
adc
push
or
push
and
popa
and
and
jne
inc
in
lret
push
or
notb
call
stos
imul
pop
test
loope
pop
cmp
mov
fcomip
pop
mov
add
mov
add
jmp
stos
jnp
movl
aas
jo
jno
pop
loopne
stc
and
or
mov
jbe
and
das
decb
bswap
out
sbb
jmp
or
leave
divps
jae
mov
cwtl
xor
fldt
sbb
addr16
jbe
jmp
ss
lcall
rolb
jne
sbb
push
dec
xchg
and
rep
and
mov
push
dec
fwait
jle
add
and
repz
xor
cmp
cmp
out
push
cmpsb
stos
sahf
call
cmp
loope
mov
lock
sbb
xchg
mov
mov
and
add
leave
xor
rcll
lahf
ja,pn
leave
aas
pop
sub
in
jmp
or
imul
pop
sbb
stos
outsl
jnp
mov
pop
daa
jmp
lret
clc
and
xor
loopne
les
push
divb
or
sbb
cmp
clc
sub
push
popa
mov
mov
in
in
dec
out
int3
mov
das
fwait
ljmp
cmc
lods
cld
inc
pop
cmp
mov
xor
movsl
lods
in
push
rorb
loope
push
xor
mov
pop
or
cmpl
add
mov
xor
xor
test
repz
jmp
sbb
push
fimull
mov
mov
xchg
xor
xchg
aad
xorb
dec
test
bound
js
jae
mov
notl
push
jle
pop
addr16
push
movsb
adc
pop
pop
xchg
insb
test
negl
or
xlat
inc
scas
jle
clc
xchg
push
xor
ljmp
roll
cmpsb
dec
dec
jb
stc
mov
sub
scas
sub
test
out
dec
adc
and
lods
cmc
pop
mov
lcall
sub
jmp
xor
jbe
outsb
or
cmp
sbb
aaa
enter
pop
or
mov
xchg
adc
out
sub
fldt
inc
jp
jae
int
mov
xor
cs
push
and
rcrl
mov
lahf
insb
push
jmp
shlb
flds
dec
cs
cmc
cmpsb
or
orb
mov
loop
jge
adc
and
incb
shrl
pusha
dec
cmp
icebp
or
fcomps
int3
hlt
out
pop
out
outsl
inc
pop
or
test
xchg
dec
or
pop
cwtl
and
inc
push
fdivrs
in
xor
sub
jecxz
in
xchg
cli
mov
mov
sbb
mov
inc
cmc
rcll
jmp
aad
inc
dec
out
xchg
out
ljmp
pop
out
mov
add
xor
jmp
jmp
jp
jmp
xchg
out
mov
jp
adc
test
scas
inc
jle
add
bound
test
mov
mov
jle
sbb
dec
or
clc
mov
or
scas
out
mov
cmp
lret
cmpsl
dec
ljmp
push
push
stos
jle
gs
shrb
and
ja
test
adc
inc
push
es
mov
inc
and
dec
in
mov
inc
lods
xor
fwait
sub
imulb
xlat
popa
adc
daa
stos
arpl
pop
jl
test
jmp
aam
subl
inc
xor
cmp
stc
add
or
fsts
into
dec
pop
cmp
int3
or
cltd
pop
push
sbb
cmp
jle
iret
bound
jno
sti
ja
call
push
mov
hlt
inc
shlb
push
xor
dec
mov
push
fs
mov
mov
sub
push
shrl
xchg
decl
mov
jle
out
icebp
and
je
nop
fwait
cli
insb
mov
cli
adc
in
gs
xor
sbb
jg
adc
push
loopne
stc
js
xchg
test
jb
daa
add
adc
or
xor
push
neg
and
lods
cld
icebp
enter
jb
mov
mov
fstpt
adc
inc
arpl
and
lock
daa
fisubs
lods
fucom
mov
fwait
mov
nop
fs
es
loopne
les
jae
lods
scas
sbb
cwtl
out
subl
inc
add
mov
je
cs
faddl
push
rclb
inc
ret
ret
mov
or
aam
add
sub
roll
imul
or
data16
fisttpll
sbb
adc
out
adc
in
pop
add
into
fdivp
pop
push
or
push
pop
pop
mov
jcxz
jb
push
mov
dec
pop
out
or
pop
push
jne
test
mov
push
fcoml
and
xor
push
dec
cmp
sub
dec
shrb
movl
imulb
pop
jge
into
test
std
je
inc
fistl
mov
js
mov
push
and
addr16
fxch
scas
movsb
ja
push
dec
xor
and
or
scas
cmc
jecxz
mov
add
cmp
push
and
stos
jns
outsb
clc
mov
test
cmpsb
jne
mov
roll
cmp
lret
mov
out
sub
sbb
je
push
sub
mov
jnp
xchg
pop
jae
test
or
adc
les
sbb
aam
pop
or
mov
xchg
out
shlw
cmp
lcall
lahf
pop
ja
div
xor
or
cmp
ret
xor
decl
sti
decb
std
pop
cmp
xchg
jns
push
push
stc
adc
and
cmp
jnp
movsb
adc
jbe
sub
test
cmp
cld
xchg
inc
xor
jmp
cmpsb
cld
scas
mov
lea
stos
or
rorb
jae
push
inc
adc
sahf
insb
lret
cli
sbb
push
xchg
test
jbe
sub
sbb
stos
ja
out
fstpl
mull
mov
scas
test
icebp
out
shrl
scas
adc
int3
add
or
daa
push
mov
or
mov
sbb
call
and
dec
clc
xchg
in
xor
loopne
push
xchg
movsb
jbe
add
pop
xchg
xor
in
call
mov
std
rclb
dec
pop
cs
adc
sahf
xor
iret
jo
pop
jmp
adc
fsts
xchg
xlat
dec
sbb
push
dec
test
ret
fwait
or
mov
cmp
sti
stc
imul
sbb
int
add
xchg
xchg
mov
adc
pop
gs
stos
ffree
dec
cld
iret
jae
daa
xorl
pop
imul
mov
mov
lahf
xchg
dec
repz
lock
mov
dec
stc
push
pop
add
pusha
nop
jnp
sahf
sub
sbb
aas
lock
pop
xchg
aaa
cli
orb
jge
push
mov
jno
add
ss
mov
mov
mov
adc
jne
clc
sbb
jns
adc
push
outsl
xor
push
push
adc
dec
test
stos
std
mov
mov
lcall
lret
and
insl
push
out
inc
fmuls
push
mov
imul
sahf
xor
push
je
sub
insl
inc
cmpsb
loop
pop
sub
aas
lcall
jl
add
or
xor
xchg
xor
xchg
insl
inc
xor
lods
dec
pop
ret
filds
add
sbb
lea
mov
push
out
and
cmp
lea
pop
das
sub
in
adc
hlt
jg
rcl
pop
sarl
in
cmp
arpl
cli
mov
sbb
data16
sbb
shl
ficompl
mov
pop
push
mov
or
cmp
negb
mov
in
sti
adc
outsb
xor
inc
das
nop
xchg
adc
xchg
loopne
lea
push
lds
mov
xlat
sub
sbb
add
or
in
inc
pop
stc
cmpl
movsl
bound
jno
call
pop
fcmovnbe
in
mov
mov
sbb
sub
push
sahf
mov
subb
mov
mov
bound
cmp
addl
xchg
jne
cs
daa
lcall
fisubs
popa
xor
cmpsl
mov
mov
xor
mov
dec
dec
out
jle
and
jmp
fs
mov
mov
mov
xor
clc
sub
mov
int
mov
push
pusha
loopne
sbb
sub
push
xchg
inc
pusha
cli
push
push
cmove
aad
jo
stc
inc
outsb
xor
out
pop
mov
ret
inc
cmp
add
gs
cwtl
pop
xor
adc
movsb
test
into
inc
out
hlt
xchg
mov
pop
pop
out
inc
iret
jge
add
jns
lock
cwtl
mov
daa
shl
jnp
in
and
pop
jnp
xor
dec
addl
mov
adc
rcl
sub
rolb
and
adc
insb
int3
pop
dec
leave
jbe
or
push
adc
cmc
inc
mov
insb
test
jns
cmp
adc
inc
cmp
inc
sub
js
xchg
rorl
jp
es
cld
mov
pushf
insb
orb
cs
sub
test
xchg
xchg
xor
out
inc
sub
out
fcomps
or
bound
mov
sub
lods
out
stc
jg
dec
out
inc
xchg
loope
stos
gs
movsb
mov
scas
ret
mov
sarl
pusha
aas
sbb
xchg
test
fst
pop
xchg
mov
inc
lcall
mov
dec
push
jo
les
xor
pop
mov
sub
inc
add
cmp
xchg
mov
jmp
mov
aad
addr16
adc
cmp
dec
outsl
in
aad
lods
push
popf
test
adc
shlb
mov
xchg
in
pop
push
mov
pusha
ljmp
push
in
out
pushf
imul
jg
fs
xor
jb
es
mov
inc
pop
xor
mov
sub
cltd
pop
xchg
int
lret
dec
push
jl
rorl
sub
mov
dec
and
pop
pop
movsl
sub
mov
sbbb
inc
pop
sbb
outsb
inc
mov
cmpsl
jg
shll
push
hlt
xchg
mov
sub
xchg
cltd
jg
xchg
push
test
incl
fs
inc
mov
xor
inc
jnp
or
push
xorl
icebp
in
imul
sub
iret
sub
and
xchg
mov
cld
jge
adc
aaa
adcb
mov
test
and
movsb
leave
ss
gs
scas
push
add
sti
sbb
and
xor
out
mov
cmpsl
ret
movsl
movsb
fcoml
sti
push
adc
jno
loope
pop
nop
xchg
loope
int3
cli
push
repz
es
sub
inc
xor
mov
cmpsb
leave
dec
adc
pop
outsb
clc
mov
push
pushf
lahf
out
ja
pop
adc
gs
sbb
or
pop
mov
mov
es
cld
inc
std
ds
mov
mov
gs
test
push
mov
lods
add
mov
jns
sub
outsl
addr16
decl
repz
cltd
cltd
xchg
or
loopne
mov
jecxz
aam
pop
pop
nop
pop
aaa
dec
sti
sarl
out
inc
mov
in
in
mov
sar
arpl
push
dec
movsb
sbb
jp
les
clc
mov
mov
jns
in
aad
cmpl
push
cmpsb
add
mov
pop
mov
pop
lret
jmp
pushf
fprem1
dec
scas
sbb
rclb
iret
out
mov
gs
js
leave
fcomps
sbb
test
jne
xor
ss
popf
shlb
call
ret
or
jbe
add
iret
bnd
in
mov
xchg
hlt
test
frstor
pop
inc
js
jmp
inc
rcll
or
mov
pusha
call
or
fwait
inc
cmp
sbb
sbb
push
xchg
out
mov
jbe
cmp
jge
mov
fnsave
lock
lea
inc
rcrb
mov
cmpsl
push
dec
aam
pop
jg
call
dec
loopne
inc
add
mov
xchg
pop
mov
in
fcoml
test
cmp
cltd
cli
cmp
mov
rorb
inc
inc
adc
sbb
xchg
cwtl
pushf
xchg
cli
mov
and
sub
cmpb
sbbb
mov
imul
imul
rcrl
ljmp
fwait
xor
ds
sub
add
mov
jge
push
inc
out
lahf
pop
mov
mov
pop
pop
insl
or
add
fwait
leave
test
scas
pop
inc
add
lcall
or
hlt
sti
xor
dec
test
imul
test
dec
adc
sub
inc
popa
jp
imul
test
push
movsb
mov
fstpt
dec
pop
test
test
xchg
add
inc
xor
stos
lods
test
in
xor
fisubrl
sahf
faddp
mov
jecxz
pop
leave
push
enter
cmp
push
xchg
adc
lcall
push
pop
jae
jne
xchg
nop
sub
xchg
or
pop
mov
imul
adc
mov
sbb
xor
outsl
mov
pop
clc
repnz
lods
or
cmp
mov
dec
mov
test
lahf
adc
mov
fsts
xchg
stos
ja
sbb
insb
push
mov
push
hlt
pop
mov
pop
jae
pop
mov
cmp
pop
lock
mov
push
sbb
mov
add
std
and
cmpsl
or
insb
push
dec
inc
mov
repnz
popa
mov
cmp
dec
xor
insl
shlb
cwtl
pop
lcall
pop
xor
cmc
inc
imul
or
jecxz
mov
cmp
dec
pushf
inc
mov
das
sahf
lret
xchg
int3
and
enter
repnz
shlb
xor
neg
add
fstpt
arpl
stc
lcall
mov
enter
or
rcrb
shlb
pop
inc
mov
fs
push
push
mov
insb
iret
sub
dec
push
roll
xchg
cli
in
pop
stc
ret
call
icebp
fmuls
adc
xchg
push
add
dec
in
pop
aam
push
stos
or
imul
mov
ret
push
mov
push
mov
push
adc
jge
fistpll
jae
mov
lds
pop
or
push
repz
js
imul
mov
pop
mov
pop
movsb
mov
sarl
mov
sub
dec
cmp
scas
arpl
sbb
mov
adc
sbb
lcall
rolb
addr16
mov
dec
push
dec
loopne
push
push
fwait
ja
sahf
fisttps
into
ljmp
scas
dec
mov
aas
mov
aad
pop
ret
jne
adc
sub
xor
cmp
pand
loopne
mov
pushf
mov
mov
jecxz
pop
sbb
and
leave
test
andb
iret
test
hlt
lcall
sbb
or
and
mov
dec
mov
jno
pushl
or
fwait
or
cltd
sub
jbe
addb
cwtl
jne
loopne
nop
fwait
mov
mov
daa
sub
and
aad
cmpsb
or
push
and
inc
jns
adc
ficompl
mov
sub
popa
mov
mov
jle
jns
adc
lods
int
addr16
cwtl
sahf
loop
shlb
sub
iret
andl
sub
test
lahf
xchg
and
clc
loope
adc
mov
imulb
fs
leave
xchg
jp
pop
hlt
fcmovu
cmp
les
xor
movsl
dec
leave
aad
repz
inc
jmp
sti
jle
mov
loopne
data16
daa
rcl
pop
in
into
xorb
sub
add
sbb
xor
inc
xor
movsl
mov
iret
jno
out
jle
cmp
pop
rorb
add
mov
mov
call
jg
or
jns
jmp
nop
jge
movsb
loope
rol
imul
dec
cmp
lods
pop
mov
sub
mov
or
pop
stos
dec
icebp
in
push
cmc
push
dec
jmp
xchg
fwait
cmp
cltd
dec
rol
out
push
xchg
jb
test
pop
dec
cmp
inc
mov
xchg
lock
imul
lea
test
scas
inc
and
and
rclb
lods
jno
cmp
xchg
mov
xor
xor
mov
dec
mov
scas
aaa
add
xlat
or
insb
dec
xchg
xchg
hlt
stc
lcall
or
push
stc
out
int3
sub
insl
and
ss
sbb
daa
lret
insl
sub
insb
fnstcw
add
xchg
mov
lock
jae
sbb
popa
popl
add
mov
cli
outsb
rcrl
adc
push
dec
dec
mov
inc
addr16
leave
in
xor
fsubs
push
das
mov
dec
rcll
jle
jb
aaa
or
jnp
push
fcoml
cmp
jo
in
test
jp
ja
pop
shlb
inc
sti
xor
bound
xor
sub
fiadds
xchg
mov
gs
sbb
jmp
mov
fwait
es
loope
popa
or
insl
cmp
mov
sub
test
mov
or
in
lret
shl
mov
jle
sub
jg
sbb
xorb
push
cld
mov
mov
xor
negb
pop
popa
call
das
pop
sbb
jns
jle
popf
sub
xor
and
into
cmp
inc
push
es
add
sbb
movsb
sti
ret
je
pop
push
std
push
aam
inc
jle
sbb
gs
ss
add
movsb
dec
sbb
lcall
stos
out
mov
add
and
jne
sub
gs
in
outsb
xor
xlat
push
dec
jb
sti
lcall
js
cmpsb
loope
and
fisttps
jp
cmc
and
int3
cmp
iret
out
data16
push
dec
sti
inc
sti
test
pop
clc
icebp
mov
jmp
sti
test
insl
add
mov
fnstenv
addr16
arpl
mov
ss
mov
sbb
or
mov
jns
testl
clc
xchg
sub
repz
cmp
scas
push
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
roll
sbb
jp
inc
mov
fsubrs
lds
dec
inc
dec
pop
test
in
xchg
push
adc
out
xchg
sbb
test
rol
mov
je
scas
movsb
clc
imul
add
loope
sbb
or
out
mov
icebp
rcl
and
fcomi
pop
cmp
pop
scas
push
dec
mov
sub
cmpsb
popa
cmc
shll
ret
test
in
mov
mov
hlt
test
repnz
adc
and
xchg
outsb
mov
xchg
dec
in
cmp
mov
sbb
shlb
jne
push
fmuls
fdivr
inc
mov
sbb
cmp
jnp
adc
movsl
sbb
sub
mov
mov
imul
test
dec
cli
and
mov
mov
aas
pushf
or
xchg
or
lcall
push
add
incl
sahf
add
and
fucomi
ljmp
adc
mov
popf
popa
and
loope
fsts
push
cld
sbb
sub
js
js
je
lods
call
aam
push
pop
mov
ficompl
ss
dec
mov
mov
and
push
xor
cwtl
cltd
imul
jmp
mov
lods
jmp
ljmp
ret
stos
add
cli
add
shrb
mov
fadds
add
fisubl
out
add
mov
jnp
xchg
lcall
call
fidivs
cmp
scas
sub
xor
jp
and
mov
or
mov
sbb
outsl
sub
dec
mov
imul
lea
ljmp
rcrl
mov
jbe
xor
dec
je
mov
leave
xchg
mov
and
hlt
lods
gs
lods
push
add
dec
add
or
cmp
pop
scas
loop
lods
push
iret
mov
push
fdivs
cmp
push
pop
into
xchg
xchg
out
push
rcrl
and
inc
or
repz
lds
xchg
testb
cmc
cmp
or
sbb
xorl
push
shlb
cmpsl
mov
shlb
les
in
out
jo
pop
adc
aaa
cltd
popf
loop
stc
imul
gs
cld
fnstsw
cmc
fs
ss
jmp
and
mov
and
jbe
fiaddl
into
cmp
mov
sbb
cmp
movsb
nop
cmp
pop
cmpsb
loopne
testb
cmp
test
mov
xchg
mov
imul
popf
sbb
leave
xor
add
loop
cmp
add
add
pop
adc
clc
jp
pop
adc
out
cmpsl
inc
shrb
jbe
mov
out
int3
ljmp
xlat
popf
addr16
jl
clc
push
popa
iret
addl
pop
push
roll
mov
lods
add
rclb
mov
ret
push
aam
loop
mov
cmp
add
mov
lds
dec
fstp
test
sbb
insl
movb
mov
mov
push
dec
insl
es
xchg
lret
aaa
add
pop
mov
pop
mov
loop
inc
cmpsb
inc
mov
or
pop
orb
std
xchg
pop
adcb
inc
sub
adc
jecxz
aad
adc
and
cmp
rorl
shrl
out
test
lods
aam
dec
xchg
pop
jbe
gs
test
js
call
inc
movsl
or
cmp
cmc
cmp
scas
mov
jns
pop
and
or
add
fsub
adc
fnstsw
add
mov
leave
imul
mov
int3
shlb
scas
mov
aam
xchg
push
sub
adc
jg
pop
icebp
ret
sarb
sbb
add
jae
pop
call
mov
xor
dec
ret
test
aaa
test
push
in
xor
add
dec
iret
and
repz
ret
mov
loope
push
enter
jo
inc
mov
jge
sub
xor
in
jp
add
jb
push
in
and
push
mov
inc
xor
mov
call
add
shlb
stos
jbe
mov
iret
int
jmp
movsb
adc
in
int3
nop
fildl
movsb
aas
lcall
lds
xlat
outsl
gs
test
mov
inc
popa
mov
add
dec
lods
lret
movsl
sub
pop
jmp
xchg
or
in
das
adc
xchg
jle
add
pushf
mov
fdivl
jp
jns
imul
xor
int3
mov
xchg
sti
call
movb
aam
xlat
in
fildll
pushf
das
jmp
push
das
cmp
lret
js
and
or
pushf
pop
imul
fdivrp
mov
jo
lods
hlt
mov
add
sub
frstor
fcmovu
pop
stos
adc
sahf
jle
cmp
mov
dec
jg
psrld
das
mov
add
add
xlat
xchg
andb
lock
pop
dec
mov
push
push
jmp
inc
mov
je,pn
div
mov
ljmp
in
out
xchg
sub
lock
test
xor
cwtl
add
je
fidivrl
or
and
xor
dec
pop
xchg
adc
movsl
stc
jno
mov
fadd
xchg
inc
jp
shr
pop
mov
ret
shll
aad
jb
in
cwtl
push
cld
pop
and
xorl
mov
stos
jp
stos
push
sub
ret
dec
movsl
insb
movsl
daa
in
sahf
hlt
xchg
inc
movsb
push
jno
int
sti
or
aam
push
push
hlt
test
jp
lret
mov
jbe
mov
in
iret
pop
xchg
sahf
pop
rorl
aam
jmp
dec
mov
push
mov
test
xchg
sbb
adc
mov
lret
inc
mov
fwait
int
fisubrl
mov
adc
sbb
mov
push
sbb
outsb
test
sub
sbbb
mov
sub
jb
mov
test
out
sbb
enter
out
inc
cld
enter
jg
sahf
daa
ja
lcall
je
xor
data16
nop
scas
add
sub
jp
xor
scas
cmp
test
jmp
sahf
jmp
inc
mov
ds
xor
lods
test
aam
lret
std
and
iret
mov
ss
mov
adc
icebp
inc
fildll
add
jle
cmp
lret
int
pushf
scas
add
mov
cli
sub
popa
cmp
xor
leave
cmc
in
lds
add
jmp
or
pop
or
lret
push
loopne
sbb
mov
xchg
orl
or
cmpb
add
dec
test
aad
pop
imul
rclb
inc
iret
push
mov
xchg
sub
jp
mov
pop
rorl
push
lret
dec
dec
imul
mov
pop
in
inc
push
inc
dec
jo
pop
roll
mov
fwait
test
jl
mov
or
inc
mov
and
push
shll
fisubrs
push
inc
sub
mov
dec
push
test
repnz
daa
mov
pusha
shlb
lahf
sbb
xor
nop
or
or
cmp
clc
in
out
pop
daa
sbb
pop
lcall
leave
push
add
lock
and
loope
sbb
mov
dec
addl
mov
jmp
pop
add
jmp
es
inc
outsl
es
rol
push
pushf
fsubrs
jge
dec
mov
add
fnstcw
cmpsl
rolb
shrb
pop
dec
inc
enter
mov
jo
ds
xor
clc
pop
push
dec
or
addl
xor
sub
jge
push
test
jle
mov
mov
cwtl
lods
cmp
je
jmp
and
bound
js
pop
js
xor
in
aam
pop
int3
shrl
cltd
add
lcall
adc
xor
lahf
ja
add
out
or
jo
sbb
and
das
pop
insb
lock
in
jp
hlt
mov
push
push
inc
loopne
in
cmpsl
gs
icebp
stos
fst
negl
sub
lret
filds
fisubl
jecxz
fistl
inc
aaa
loope
mov
test
jns
aas
sarl
dec
or
fimuls
lods
jle
fidivs
rol
repz
push
adc
or
dec
js
jmp
cmp
ret
scas
push
stos
aas
jo
add
push
jb
pop
pop
xchg
daa
sub
nop
fadds
jae
sbb
mov
lea
ret
jo
inc
cld
out
pop
and
dec
aas
inc
ret
bnd
and
cmpsb
add
add
sti
mov
xchg
call
decb
loope
mov
mov
movsb
rorb
and
repz
or
cmp
or
and
sbb
xor
lds
dec
insl
mov
out
out
xor
das
mov
test
xlat
dec
test
pop
nop
sbb
sub
fistpll
dec
mov
pop
add
movsl
lock
rorb
outsb
insl
add
dec
outsl
insl
mov
nop
ret
or
sbb
xchg
sar
call
mov
pop
adcb
mov
jle
jne
fimuls
mov
aam
loope
push
xor
mov
sub
bound
and
das
xor
popfw
cmpsl
xor
aaa
or
cmc
movsl
aaa
stc
insb
push
std
mov
orb
sahf
scas
jl
fbld
jge
test
int
dec
add
sarb
fnsetpm(287
inc
pushf
packuswb
and
jmp
out
push
daa
insb
xorb
jl
bound
xor
sub
repz
push
cmc
int
icebp
adc
ds
sbb
clc
arpl
mov
mov
pusha
inc
call
scas
leave
cmpsb
arpl
mov
dec
repnz
out
lods
or
push
mov
lcall
nop
lahf
stc
jb
scas
dec
loopne
pop
jg
jne
jl
mov
add
add
sub
add
cs
xor
lea
js
mov
pop
xchg
leave
xchg
leave
jbe
sub
movsl
pop
mov
sub
sbb
mov
or
fstpt
aaa
push
inc
push
iret
shl
lea
ljmp
push
xchg
cwtl
scas
loope
fs
lock
mov
mov
or
mov
pop
jo
dec
xlat
adc
pusha
push
inc
ja
negl
aaa
out
jb
add
aas
xchg
adc
adc
sub
dec
xchg
aas
xchg
testl
mov
ret
push
negl
ljmp
inc
or
pop
mov
lret
pop
shlb
cmp
pop
sbb
rolb
and
add
mov
pusha
sbb
xchg
mov
mov
aaa
cmp
or
jno
sarb
adc
pop
dec
jne
push
pop
into
xor
mov
loopne
cmp
test
add
or
addb
into
fld
je
jo
ja
mov
loopne
daa
dec
ss
aam
repz
aad
push
xor
sbb
inc
or
sub
mov
dec
notb
mov
dec
dec
mov
mov
test
mov
inc
daa
mov
imul
sahf
mov
fdivr
push
mov
push
shlb
out
mov
xchg
sub
gs
js
pop
mov
das
clc
add
xchg
rclb
xchg
outsb
dec
arpl
mov
dec
faddl
pop
dec
sub
adc
into
mov
push
dec
lret
addl
sub
fidivrl
insb
fstpt
jo
ja
pop
popf
pop
push
pop
adc
mov
push
movsl
sub
push
inc
lea
sbbb
sbb
lret
adc
std
lret
scas
xor
je
cmp
jne
in
fistpll
fidivrl
in
repnz
push
adc
ret
scas
pop
mov
lods
jg
jbe
into
or
lcall
rolb
jmp
pop
jge
push
aam
push
xchg
or
rcrb
sbb
xchg
sub
mov
mov
ljmp
and
loop
gs
bound
push
push
out
test
out
xor
xchg
xor
or
xchg
sub
int
cmp
popw
sub
rorl
sub
shl
cli
adc
clc
sti
orb
mov
dec
incb
sub
int
pop
icebp
call
loop
nop
jmp
mov
ljmp
mov
in
das
outsb
cmpsb
and
push
adc
es
xor
sub
xchg
cmp
iret
push
mov
sarb
stos
push
test
or
jnp
cs
lcall
movsl
repz
add
xchg
cmp
cmp
jne
outsb
incl
xor
lcall
or
ljmp
incb
push
add
into
cld
imul
sub
xor
jns
push
push
xor
pop
push
and
test
out
mov
bound
stos
sub
out
jne
cs
lds
dec
mov
rcr
adc
mov
popa
mov
push
pop
pop
les
lret
dec
gs
insl
ljmp
dec
pusha
outsl
cld
iret
movsb
mov
jae
adc
sub
pop
aam
sub
repz
loop
repnz
xchg
repnz
jbe
push
cmc
fcoml
jp
rorl
lret
aam
xchg
sysret
adc
xlat
les
fwait
outsb
cmp
pop
lea
adc
imul
in
or
jp
push
mov
stos
cmp
adcl
and
shlb
loop
add
fwait
and
xchg
and
stc
fsub
and
add
sbb
or
xchg
add
hlt
inc
lds
sbb
adc
jl
xor
sbb
imul
call
daa
pop
adc
dec
movsb
cmp
ljmp
sbb
test
xchg
fcomps
xchg
test
imul
into
outsb
mov
jo
mov
mov
sti
div
cmc
mov
lcall
add
aam
or
sbb
sbb
cwtl
xchg
mov
adc
sub
in
or
sbb
shr
test
jl
sahf
xchg
int3
sub
push
rcll
dec
iret
xor
das
ret
cmp
or
lret
xlat
cwtl
add
movsl
or
addr16
orl
push
push
xchg
jmp
lock
prefetch
mov
mov
add
sti
je
in
and
scas
cmp
pop
imul
adc
stos
js
test
or
pop
xchg
rorb
jno
or
sub
and
mov
adc
mov
and
mov
dec
adc
sub
pushfw
lds
scas
push
mov
dec
jge
jae
sub
aad
ss
xor
test
xchg
dec
hlt
outsl
stos
daa
xchg
lea
sti
pop
in
jge
pop
sbb
xor
mov
lea
lahf
sub
les
add
dec
mov
aam
push
shll
cli
pop
lock
inc
shl
xor
and
aad
hlt
out
in
and
and
pop
sbb
imul
outsl
lods
push
xchg
push
jne
pusha
sub
aad
push
dec
jge
test
vpaddw
out
pop
pop
and
pop
jae
xchg
rorl
icebp
mov
push
add
and
lods
mov
jg
add
ja
push
xor
popf
pop
popl
cwtl
dec
jb
mov
jmp
scas
popa
imul
mov
dec
iret
daa
mov
cmp
sbb
add
jecxz
lock
arpl
mov
test
ljmp
xchg
aad
pop
lea
repnz
jbe
xor
sub
mov
lds
decb
int3
add
push
or
shlb
dec
jle
mov
imul
push
stc
pop
jecxz
movsb
outsl
and
xchg
or
mov
lods
int
or
sub
adc
int3
jge
test
mov
fs
mov
jne
add
movsl
in
sbb
push
aaa
mov
out
lret
out
cmpsb
stc
inc
sbb
jmp
lret
and
cmp
sbb
shll
out
adc
popf
in
xor
stos
cltd
mov
lret
add
out
add
xchg
rol
fstps
pop
and
js
xlat
sbb
xchg
out
lret
sarb
clc
outsb
jbe
es
mov
mov
pushl
sub
jne
ret
es
xor
dec
cmp
das
cmp
cmp
scas
add
jl
add
hlt
dec
rol
sbb
nop
cmc
cs
lock
xchg
stos
xor
push
mov
sub
cli
dec
pop
lfs
xchg
push
es
stc
adc
cwtl
pop
cmp
add
cmp
jl
sub
push
fcoms
xchg
popl
out
pop
push
mov
jbe
nop
add
mov
jl
lea
push
les
jno
sub
inc
cmpsb
xchg
sbb
or
popf
dec
dec
inc
xchg
mov
xlat
fdivs
pop
pop
aas
out
sti
add
xchg
int3
lods
cwtl
mov
inc
xor
repnz
dec
jmp
cwtl
pop
or
mov
rcll
cmp
push
and
or
call
loope
sub
pop
mov
pop
hlt
push
add
cmp
jns
mov
mov
push
cmp
movsl
xor
dec
mov
scas
mov
xor
mov
push
ja
mov
pushf
cmp
mov
mov
data16
inc
sub
pop
jno
add
shrb
cmp
mov
or
sti
fwait
addr16
mov
pop
mov
hlt
pop
lahf
dec
xor
adc
xor
push
scas
stos
addl
push
jge
xor
and
sbb
fs
jae
inc
fisubrs
sbb
fnstcw
divb
sub
icebp
out
fstpl
mov
lods
push
add
shrb
xchg
ficoms
fcomps
cmp
adc
xor
int
mov
out
xor
jbe
mov
mov
inc
ret
pusha
aam
out
xchg
inc
xor
pop
idiv
ja
stc
stc
shrb
xchg
push
fsubrl
pushf
shll
lahf
pop
sahf
pusha
xchg
xor
add
dec
push
test
int3
sbb
nop
add
xchg
jno
jb
shll
pop
cli
dec
cmc
xor
xchg
fcomps
ror
push
jae
fstpt
mov
cs
xchg
sub
fdivr
cmp
or
mov
stos
sahf
pop
cmp
fcoms
out
lods
mov
ds
in
xlat
aaa
and
dec
ds
dec
fcmovb
and
imul
jmp
je
push
rcr
adc
pop
add
fstps
lds
lea
and
inc
mov
dec
scas
ret
dec
jg
jno
sahf
in
leave
jg
jl
test
das
mov
push
filds
cmc
pusha
jno
call
fcomps
es
repz
lret
idiv
or
test
sbb
inc
jge
in
enter
fsubs
add
sbb
lret
cmc
mov
mov
mov
xchg
xchg
mov
xchg
xorb
ja
and
in
add
xor
jg
push
stos
mov
fcmovbe
xor
int3
imul
sbb
fistpll
or
fwait
sub
movsb
ds
daa
jbe
inc
adc
adc
imul
pop
ss
rolb
jno
xchg
push
std
movsb
loopne
aaa
int
jp
int
div
pusha
inc
cs
push
in
pop
inc
imul
mov
notl
stos
inc
fs
cmpsl
jp
push
ja
in
push
pop
repz
in
nop
testl
psubsw
dec
aad
xor
loopne
clc
shr
pop
dec
leave
outsl
sub
lea
arpl
mov
xchg
pop
mov
adc
idivb
pop
leave
addb
pop
int
popf
push
leave
inc
pop
xchg
mov
and
jo
push
popa
add
pop
add
jle
pop
movsb
cmp
cs
and
mulb
dec
je
jbe
call
mov
leave
mov
cld
mov
cmp
xchg
mov
and
clc
and
out
pop
xchg
data16
mov
dec
add
scas
mov
test
movsb
movsb
jge
out
into
adc
loop
jge
mov
in
add
arpl
dec
xchg
sub
testl
jno
mov
aas
jge
sbb
push
jg
hlt
mov
jge
sub
mov
out
add
fnstsw
cmp
fmull
ds
xor
lds
fistpl
lods
insl
sub
inc
test
push
mov
adc
in
icebp
push
pop
cli
dec
cmp
inc
mov
lock
fucom
inc
insl
imul
or
cmp
mov
and
inc
and
loop
dec
jmp
aam
mov
push
fdivs
cwtl
cmp
out
rolb
dec
dec
cmpsb
int3
sbb
daa
lret
mov
cmp
pop
loop
dec
mov
movsl
pop
gs
fisttpl
popa
adc
icebp
repz
call
in
cmp
pusha
pop
push
std
push
enter
or
xor
test
jge
push
aaa
inc
xor
aad
lea
xor
jae
jnp
add
cmp
insb
icebp
xchg
mov
xchg
xor
clc
cmp
xor
orb
mov
mov
xor
dec
das
adc
popf
sbb
jle
jg
jne
push
sub
fsubl
xchg
mov
lods
xchg
or
test
cld
lock
sbb
cmp
xlat
or
cltd
xchg
cmpb
fcmovb
ja
pop
fsubr
mov
scas
loop
jmp
flds
lods
adc
fs
jle
movsb
cmpsb
or
rorl
leave
sbbl
mov
cmc
subb
sti
mov
decl
imull
mov
jae
push
cmpsb
mov
idivl
test
ret
add
jl
pop
imul
push
and
js
ret
pop
jne
xchg
jmp
or
jle
cmp
push
aaa
ds
or
addr16
lods
jecxz
or
push
mov
sbb
loopne
pop
cld
push
add
int3
bound
sbb
loop
push
stos
mov
lcall
mov
ds
adc
and
popa
push
pop
adc
testl
outsl
and
fucom
pop
mov
xchg
int
std
xor
outsl
xchg
mov
dec
cmpsb
mov
xor
sub
dec
js
out
jnp
mov
cwtl
inc
adc
test
mov
push
mov
andb
and
jne
mov
mov
add
mov
and
xchg
call
or
test
push
mov
xlat
leave
cmp
mov
lock
std
sahf
icebp
test
clc
and
add
pop
jl
inc
ss
push
mov
fiaddl
xlat
sub
inc
sbb
ja
xchg
jbe
mov
cltd
mov
in
mov
lcall
adc
mov
pop
push
push
xor
push
jecxz
js
pop
jne
xor
pop
or
inc
push
dec
xor
test
sub
out
repz
jb,pn
sbb
mov
leave
cmp
mov
sbb
mov
mov
ja
pop
fs
cld
xchg
loope
jns
push
pop
fwait
int
repz
sbb
repnz
mov
or
mov
inc
shr
xchg
cld
idivl
jno
mov
cwtl
dec
mov
sbb
add
iret
jmp
sbb
cmp
rorl
inc
sub
cmc
push
adc
in
mov
mov
js
stos
pop
mov
jno
fsubs
test
cltd
push
js
adc
ss
lds
inc
jo
pop
or
sbb
ljmp
data16
sbb
enter
stos
loopne
cs
push
jns
aam
push
leave
hlt
jp
mov
stos
xchg
lcall
cmp
jmp
adc
push
pop
sub
jne
pop
jp
pop
js
push
les
lods
movsb
dec
pop
and
lret
in
lret
je
inc
lea
xchg
cltd
and
in
scas
push
inc
mov
add
leave
sbb
cmp
push
movsl
or
sub
mov
mov
mov
dec
mov
roll
cmpsl
or
push
or
jl
mov
test
gs
fadds
and
cmp
push
xchg
sahf
je
ds
jb
stos
inc
adc
lods
or
test
fnsave
aas
pushf
cmp
cmp
pop
idiv
sbb
pop
push
push
jb
fmuls
jmp
or
pop
cs
mov
jl
in
and
xchg
mov
mov
sarb
and
gs
dec
mov
sbb
push
xorl
jl
sbb
jle
subb
jp
cwtl
nop
push
mov
pop
pop
ss
mov
test
push
leave
enter
push
cltd
sub
sbb
cmpsb
mov
jmp
push
jmp
and
sub
cmpsl
push
jmp
sbb
mov
std
mov
cltd
mov
orl
add
in
loopne
icebp
fwait
add
cmp
aad
cld
cwtl
sub
or
arpl
shlb
or
jmp
sub
lret
xlat
xor
jnp
and
jae
add
sub
cmpsl
jge
inc
xorb
add
cmp
inc
sbb
cmp
scas
inc
pop
rcll
pminsw
cmp
and
or
movsb
lods
das
in
xchg
sub
adc
imul
in
cltd
mov
andb
mov
pop
and
adc
sarl
add
lds
xchg
push
repnz
movb
outsb
nop
mov
mov
iret
push
xor
sub
mov
inc
fs
push
sbb
cmovbe
ja
pop
adc
movsb
add
js
addr16
sbb
lahf
mov
int
mov
jmp
push
into
popf
xor
jmp
movsb
out
mov
push
sub
xchg
lret
sub
sbb
and
mov
or
xchg
push
cmp
dec
mov
rcll
jecxz
loop
into
xchg
scas
and
scas
adc
in
loop
and
lcall
lret
jne
dec
das
mov
loope
cmp
cwtl
mov
movsb
push
mov
push
ljmp
mov
icebp
mov
js
rcll
cli
xchg
in
sarl
ffreep
pop
les
xchg
call
insl
sub
mov
ljmp
mov
add
inc
pop
in
and
int
push
hlt
dec
mov
add
mov
dec
flds
pop
cmp
gs
add
mov
sub
nop
ret
mov
pop
std
scas
mov
sbb
push
in
mov
adc
popa
sbbl
js
in
nop
clc
add
scas
adc
movsb
pop
out
cmc
sub
add
lret
adc
xor
mov
mov
test
dec
cmp
mov
stos
cmpsl
iret
adc
fs
lret
pop
gs
mov
mov
js
push
shlb
jno
jno
xchg
dec
xlat
lock
iret
std
jno
pop
pop
insl
add
inc
scas
daa
mov
mov
dec
mov
lea
lret
pop
stos
les
and
and
and
stos
outsb
fidivrl
subb
inc
mov
jno
sub
fxam
and
cmp
lret
in
jmp
sbb
shlb
adc
pop
jns
or
cmp
jle
pop
dec
rclb
loopne
das
inc
xor
fnstcw
push
cmp
aam
repnz
imull
fdivrl
mov
fimull
lret
cmp
bswap
inc
repz
xor
inc
add
mov
fwait
icebp
ja
scas
jno
fstpl
fmull
mov
pushf
shl
mov
scas
adc
jns
push
jns
push
jecxz
repz
cmp
mov
scas
in
mov
stc
lods
std
data16
jo
pop
loop
mov
inc
in
cli
lds
fnsave
dec
outsb
cmp
mov
and
mov
jp
subb
inc
mov
mov
clc
fmull
es
cmp
sbb
jne
mov
xor
sbb
xor
cli
adc
jmp
push
test
fildl
push
add
xor
add
inc
popa
adc
lock
xor
adc
out
imul
cmpsb
push
mov
ret
movsl
mov
sbb
cli
xchg
cmpsb
xor
push
int3
pop
out
mull
movsb
xlat
xlat
cltd
inc
lds
xchg
sub
add
repnz
ljmp
or
push
jg
push
push
cmp
push
sti
pusha
fidivl
into
pop
lods
cwtl
mov
jmp
lea
push
adc
xchg
std
mov
pop
sub
mov
xor
push
iret
shlb
pushf
vphadduwd
adc
icebp
std
in
fidivrl
xchg
pop
dec
fimuls
adc
cmp
leave
inc
mov
or
lock
out
pop
inc
std
cmc
scas
movsw
test
adc
ljmp
push
mov
mov
shr
dec
sarl
bound
xchg
xchg
in
popf
mov
push
dec
dec
in
mov
xchg
mov
sub
shrl
push
sub
push
push
in
fisubl
rorb
mov
push
dec
rcrl
or
pop
push
jecxz
fnstsw
call
or
push
xchg
je
xchg
sub
cmp
pop
int
shr
fcmovu
ss
dec
cmp
and
mov
roll
cltd
rcrl
mov
repz
jmp
sti
pop
pop
stos
mov
mov
mov
cmp
adc
in
jo
dec
mov
insl
pop
mov
or
sahf
mov
ds
sbb
mov
cmc
sbbl
xlat
push
into
movsb
or
dec
inc
push
xlat
xorb
stc
mov
fstpl
fldl
adc
cmp
mov
sbb
jl
xor
ret
jecxz
jmp
outsb
icebp
cmp
mov
push
mov
rclb
xchg
inc
jo
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
cmpsb
cs
jp
or
jp
fisubrs
jbe
or
dec
or
test
addr16
stos
jle
adc
call
push
test
mov
sti
xchg
dec
icebp
adc
pop
fisubl
cmp
cmpsb
or
mov
inc
movsb
pop
jno
jnp
inc
mov
mov
loopne
inc
adc
sub
lret
add
fnstcw
dec
out
lods
inc
mov
sti
aad
repnz
push
fcomi
jecxz
mov
ret
sub
pop
shll
adc
pushf
aas
jnp
nop
mov
mov
ss
loope
inc
lods
movsl
xor
inc
inc
js
push
dec
xor
mov
jo
mov
inc
jae
popa
cmp
jge
adc
push
dec
jne
or
cwtl
fdivrs
test
mov
inc
xor
lea
stos
mov
mov
xchg
cmp
sahf
or
out
push
std
pop
mov
daa
dec
je
pop
cmp
sub
test
sbb
xchg
adc
cmpl
call
addr16
inc
lcall
pushf
sub
in
lahf
add
loope
in
push
dec
dec
xor
push
lock
mov
xor
dec
scas
or
lahf
dec
push
inc
jno
sub
adc
dec
add
ret
or
jmp
cmp
add
xchg
cli
sbb
stc
xor
pop
xchg
or
pop
lock
sub
cmc
dec
jb
insb
push
inc
pop
add
mov
pop
leave
push
clc
sbb
pop
int3
das
les
insl
aaa
ret
xchg
stos
in
clc
je
in
rcll
cltd
rcr
fstl
cmp
fistl
mov
movsb
scas
repnz
enter
sub
jl
xor
jne
fstl
jae,pn
in
out
push
leave
lahf
xor
scas
insb
cmp
rorb
and
fs
pop
mov
dec
sub
out
cld
sbb
jb
jno
jge
sub
fdivrl
jge
movsl
push
and
cs
adc
mov
adc
mov
not
popa
adc
mov
mov
sub
hlt
sub
inc
loope
jae,pt
mov
gs
and
add
inc
clc
push
cld
addr16
adc
push
and
lret
xor
inc
add
push
xor
jg
lea
call
cmp
test
lcall
cmp
jp
sti
inc
aam
xor
enter
jbe
cmp
shrl
or
pusha
mov
ror
int3
cs
leave
in
adc
cmpsb
fadds
xor
sub
repz
or
mov
cmp
inc
push
lods
or
and
jecxz
jle
pop
fidivl
pop
rorb
push
add
adc
jo
and
in
loopne
fsubrl
bound
jnp
cmp
or
insl
gs
mov
mov
cltd
sbb
push
aad
call
movsb
bound
stc
movsb
addl
sub
add
push
sub
ljmp
adc
cmp
call
lea
negl
scas
lods
and
repz
cmp
dec
fsubp
adc
outsl
mov
xchg
repnz
mov
sbb
cmp
mov
decb
movsb
mov
movsl
stos
arpl
pop
mov
das
or
inc
dec
in
add
lcall
fisttps
and
es
rclb
lcall
or
mov
out
push
fcom
dec
and
mov
cmp
pop
push
pop
cmp
push
adc
out
jae
sbbb
stc
loope
std
mov
fisttpl
sub
enter
inc
movsb
jmp
mov
decl
mov
mov
test
por
ss
push
int3
sbb
push
out
in
push
stos
xor
and
mov
icebp
sbb
add
in
cs
jl
push
in
dec
fadd
icebp
test
aad
fisubs
cwtl
inc
dec
iret
push
mov
xor
gs
hlt
push
mov
lods
jecxz
scas
clc
neg
in
cltd
pop
aas
sub
movd
les
and
lods
cmp
xchg
pop
shlb
push
fidivrl
and
sub
repnz
sti
aad
mov
jle
inc
jnp
adc
adc
test
pop
pop
mov
shl
cmp
sarl
jns
or
push
ja
dec
or
or
xor
sbb
loop
push
jp
push
arpl
insl
adc
fwait
hlt
das
pop
int3
cmpb
cmpsl
or
leave
jle
pop
stos
sbb
mov
aad
gs
inc
mov
xor
mov
loope
test
cmp
fsubrs
pop
dec
add
pop
mov
push
dec
out
daa
aaa
jb
sub
jge
jne
push
mov
jo
jb,pt
daa
cmpsb
outsl
sbbb
jecxz
lock
jb
jge
xchg
xchg
addr16
pop
in
mov
sub
xchg
ds
cmp
mov
pusha
add
xor
lods
roll
sbb
bound
jnp
popa
sub
and
and
in
xchg
jle
pop
cmpl
ja
out
sti
mov
jno
jnp
xor
push
jg
int3
sub
mov
xchg
dec
aas
sti
xor
pop
push
xlat
mov
pusha
stos
sbb
mov
jnp
fcoml
repz
sub
test
push
pop
xor
mov
pusha
imul
pop
cmpl
mov
xor
pop
icebp
jecxz
xchg
pop
jae
daa
inc
cmp
fcoms
ficoml
int
xor
pop
mov
in
jne
cmpsb
mov
nop
movsb
pop
test
cwtl
jp
out
out
jmp
adc
mov
daa
inc
sub
xchg
hlt
mov
pop
pop
push
mov
jb
or
mov
pop
dec
sub
nop
jae
clc
adc
std
jp
cltd
sbb
sbb
cwtl
mov
lds
xchg
xchg
in
rcrl
jns
sahf
push
les
int3
and
xchg
mov
dec
push
xor
mov
mov
fisttpll
pop
outsb
aam
jo
inc
push
lock
cli
aad
sahf
sbb
mov
out
inc
sbb
dec
jmp
inc
gs
add
std
xor
je
mov
or
and
data16
cli
movsl
xchg
xlat
mov
arpl
ss
enter
insl
rcr
lock
movl
adc
fldcw
xor
jae
xchg
pusha
arpl
outsl
xor
fistps
push
cmpsl
mov
mov
jo
mov
xor
adc
cmpsb
dec
loop
add
fdivr
add
inc
or
out
call
adc
pop
inc
daa
dec
mov
into
hlt
lds
mov
shr
cmp
xlat
push
add
and
mov
mov
mov
pop
jae
sbb
or
sbb
mov
mov
stos
leave
mov
loope
inc
movsl
cmp
sbb
test
inc
hlt
stc
sbb
out
das
pushf
push
xchg
outsl
or
dec
lea
push
insb
dec
dec
cs
or
sub
mov
mov
mov
jae
fisubrs
xchg
adc
sbb
movsl
faddp
out
stos
iret
mov
div
mov
jnp
dec
je
jle
mov
repz
push
in
push
daa
xlat
and
xchg
mov
sbb
les
jnp
inc
out
lret
lcall
dec
pop
loop
cli
adc
dec
jle
clc
or
and
mov
loope
lock
xchg
jge
cmp
jle
xchg
jle
jp
dec
insb
xchg
cmp
fdivrs
cmp
mov
add
add
jo
sbb
mov
incb
jp
pop
ja
mov
orl
mov
add
cltd
push
and
xor
mov
shr
outsl
mov
les
out
cwtl
and
fyl2xp1
stos
mov
add
iret
lods
js
popa
in
rolb
cmpsl
and
jne
leave
mov
dec
push
xor
and
cmp
into
rorb
mov
jne
loop
xor
xor
lods
and
aad
adc
in
jbe
or
cs
dec
or
inc
insb
cmp
roll
mov
cmpsl
cmp
dec
mov
cmpsl
sub
push
scas
mov
mov
les
scas
inc
cmc
mov
push
mov
sahf
int3
jl
mov
ret
xor
repnz
jg
push
pop
and
push
test
int
int3
adc
cmpsl
enter
add
lea
das
mov
push
sahf
test
pop
fsubrs
insb
sbb
inc
mov
and
sbb
lcall
pop
mov
test
mov
mov
jnp
push
inc
mov
cmp
test
xchg
test
fstps
add
push
fcmovbe
cmp
mov
sub
cmc
stos
adc
push
std
arpl
and
pusha
xchg
adc
adc
push
xchg
pop
pop
cmp
and
lods
out
test
enter
cmp
sbb
sbb
dec
fwait
xor
repnz
mov
shr
pop
mov
mov
out
add
jae
mov
pop
fs
sti
movl
mov
dec
sub
mov
sub
adc
pop
cld
out
mov
cmp
fwait
sbb
mov
test
movsl
movsb
sbb
inc
or
and
lret
dec
cmp
and
jae
sub
les
sbb
mov
sub
aaa
test
xchg
cmpsl
test
cmp
mov
in
cmp
rcrb
fstpl
push
push
dec
sbb
sub
daa
das
sti
mov
subb
jb
mov
add
ret
mov
roll
mov
or
loopne
adc
mov
xchg
jle
and
ret
nop
dec
stc
gs
or
jo
add
test
jle
clc
sub
xor
pusha
or
aam
adc
mov
jge
and
test
pop
adc
or
decl
jne
aad
xchg
jmp
sub
addr16
xchg
adcl
int
ja
xchg
lea
xor
cmp
add
sbb
out
pop
sbb
xor
mov
pop
std
imul
pushl
lcall
fidivrs
push
xchg
and
pop
icebp
jmp
cmp
xchg
lods
test
adcb
fucomi
pop
out
mov
lret
inc
int
lods
or
es
clc
push
dec
out
mov
sub
popf
mov
mov
jne
or
and
ror
adcl
xchg
lods
adc
sub
clc
test
push
faddp
mov
scas
dec
ja
push
push
jmp
jo
mov
or
add
mov
mov
sub
mov
testl
stos
rcll
mov
aas
fldcw
xor
sbb
sar
test
adc
std
jge
cmp
movsb
das
add
cmp
scas
adc
mov
cli
fnstcw
andl
cld
xchg
loop
std
or
add
inc
lods
mov
ss
in
pop
jg
enter
ret
arpl
sbb
inc
lods
pop
test
and
pop
rcll
aas
inc
icebp
lea
pusha
aas
mov
push
jb
add
gs
cmpsl
fsubr
pmulhuw
popa
test
push
and
stos
mov
adc
dec
mov
sub
sahf
mov
iret
cld
repnz
push
loope
in
punpckhdq
fwait
adc
and
pusha
lcall
jnp
fs
rclb
outsl
aam
jb,pn
repz
imul
dec
shll
out
gs
mov
movb
xor
lods
and
fwait
and
fldt
xchg
hlt
aaa
jo
push
in
aad
mov
adc
sub
int3
loopne
pop
xor
adc
imul
scas
enter
push
mov
stc
mov
js
sub
andw
cmpsb
xchg
xchg
aad
aas
xchg
mov
or
push
lret
sub
jl
arpl
ret
mov
pop
icebp
dec
xchg
pop
scas
fisubrl
lods
pop
lods
loope
aad
lahf
pushf
inc
cwtl
outsl
sahf
add
shr
in
inc
scas
mov
cmp
cmp
xor
ds
pusha
loop
lds
sti
mov
pushf
ds
cwtl
cmpsl
cli
mov
lods
rorl
mov
push
cwtl
lds
xor
outsb
lds
call
arpl
out
and
stc
push
out
test
xchg
xor
loopne
das
fdivrl
roll
mov
or
inc
and
out
adc
add
and
pop
sbb
stc
fidivrl
or
sbb
xchg
sub
fs
clc
cs
mov
xchg
sahf
icebp
push
rcrb
ret
push
mov
mov
jns
lods
xor
fists
mov
aas
add
dec
jl
add
cli
push
sub
mov
loop
fsubrl
sbb
push
ret
subl
dec
repnz
pushf
lods
add
movsl
jge
hlt
dec
mov
xlat
test
and
ret
dec
cmp
dec
faddp
das
sub
cmp
cwtl
pop
in
mul
pusha
mov
std
fidivs
sahf
sar
imulb
xchg
mov
cs
cli
decl
jg
data16
sysret
das
or
pushf
lods
xchg
cmp
fsubl
js
lods
call
cmp
push
push
push
or
inc
mov
jbe
xor
mov
sar
negl
daa
inc
popf
sbb
jg
xlat
pop
bound
mov
jne
push
daa
jnp
inc
or
mov
mov
cmpsl
xchg
cmp
ss
adc
sub
cmpsl
pop
sbb
sub
cld
fsubrp
or
dec
int3
pop
xlat
test
rclb
pushf
stos
sub
xor
cmp
loopne
std
mov
in
jl
gs
cmpsb
mov
aaa
scas
push
xchg
jno
mov
mov
fisubrl
sahf
inc
mov
lcall
aam
divb
cmpb
xor
and
mov
or
call
je
rol
jno
sub
xor
and
and
jnp
push
add
xchg
sbb
and
push
cmp
mov
jo
mov
sub
or
mov
push
push
into
test
ljmp
sbbb
jbe
pop
in
mov
mull
fs
out
fsubl
cwtl
pop
cmp
sbb
mov
addl
inc
or
sbb
cmp
push
movsl
adc
sub
popa
push
outsb
out
cmpsb
push
std
imul
addr16
pop
sub
loopne
out
push
iret
jae
mov
loop
sbb
mov
sub
stos
mov
movsb
out
int
mov
dec
xlat
fs
out
xor
in
jns
and
or
sbbl
dec
das
fstps
ffree
mov
out
mov
mov
cli
popa
mov
jo
pop
das
push
icebp
pop
cmp
sub
aad
iret
push
inc
loope
mov
jno
push
std
and
mov
mov
push
leave
nop
pop
sbbb
ret
fldenv
dec
adc
jns
and
push
ljmp
cmp
and
clc
and
cmpsb
nop
jnp
dec
and
stc
mov
cmp
aad
enter
xor
or
out
add
pop
scas
xor
pop
xorl
sbb
jbe
ds
lcall
dec
in
push
pop
arpl
and
dec
inc
divl
cmc
ljmp
enter
mull
mov
or
xchg
cmp
pop
and
jecxz,pt
inc
js
xlat
push
popa
mov
pop
push
aad
dec
ret
mov
or
mov
push
xor
ror
in
in
scas
call
mov
mov
arpl
shl
aad
mov
movsb
lret
mov
shl
test
cmpsb
fimuls
loope
xor
pop
xor
cmc
cmp
subb
dec
dec
jne
push
frndint
test
mov
sti
push
aad
insl
jo
in
xchg
sub
mov
dec
push
cmpb
or
mov
mov
push
adc
ja
scas
jl
xchg
pop
cmp
ljmp
cltd
aaa
or
lods
imul
clc
sti
call
mov
aad
daa
dec
popf
sub
mov
add
inc
pop
ret
shll
pop
mov
fbld
fwait
xchg
xchg
das
mov
fnstcw
and
xor
xchg
xor
push
xchg
push
test
mov
jno
ret
inc
pop
cmc
push
pusha
mov
int
mov
rcrb
push
adc
xor
fcmove
push
push
int
mov
jno
inc
ret
adc
ds
jge
fistpll
mov
xlat
test
jns
pop
pop
aad
negl
mov
push
push
xor
add
fs
mov
lahf
lret
xor
mov
dec
mov
ljmp
shrl
inc
inc
xchg
add
jbe
adc
cwtl
inc
add
inc
fadds
and
jg
pop
ja
out
xlat
push
xchg
sbb
setns
ds
sub
roll
mov
push
jge
aad
inc
push
sbb
cltd
dec
into
xchg
aam
call
inc
shrb
push
cmpsb
sbb
repnz
jbe
sub
incl
or
ret
add
ret
arpl
jmp
movsl
rcr
mov
xor
stc
pop
add
popa
popf
std
pop
xorb
sub
outsb
or
aam
dec
push
mov
xchg
and
lcall
cwtl
test
mov
or
pop
xor
dec
jns
pop
cmp
rcrb
cmp
mov
mov
andb
pop
sbb
andl
nop
dec
test
mov
pusha
or
add
dec
aaa
push
dec
outsb
and
push
inc
cmp
and
sub
iret
cwtl
stos
or
bound
in
sbb
lods
push
fsubrl
in
or
inc
xor
jo
add
mov
stos
ret
stos
dec
scas
push
push
mov
js
push
pop
dec
cmpsb
into
dec
fdiv
lock
sti
and
mov
rolb
jmp
scas
xor
jg
pop
jmp
add
leave
pop
sub
mov
js
stos
and
in
xor
stc
test
cmp
xor
mov
xor
jne
cmp
mov
cmc
cmp
inc
and
test
jne
jne
sbb
and
pop
sub
in
dec
shlb
adc
into
popf
inc
jno
jmp
lds
das
testb
out
fisubrs
rorl
push
adc
scas
call
and
jle
jnp
xchg
mov
fisubl
cs
sbb
outsb
mov
inc
jb
cmp
inc
gs
push
cmp
jle
daa
inc
push
loop
shll
bnd
pushf
mov
cmc
or
sbb
dec
addr16
imul
movsl
dec
int
rcll
idiv
mov
inc
sbbb
push
stos
dec
mov
dec
fsin
inc
mov
repnz
aam
ljmp
out
cmc
dec
inc
and
jmp
dec
in
fwait
jl
ljmp
loope
mov
pop
das
add
inc
sub
aad
and
xchg
out
pushf
cmp
shrl
popa
adc
mov
pop
out
repnz
mov
ds
xor
dec
mov
mov
bnd
ret
pop
sub
iret
or
aam
shl
out
inc
mov
pop
jne
mov
jmp
sub
pop
fadds
stos
jecxz
adcb
ljmp
sub
cmp
lock
das
adc
xor
push
jnp
pop
fs
jl
jle
pop
fsubs
mov
shll
cmp
mov
mov
out
pop
mov
mov
xor
cmp
out
js
test
call
mov
xchg
fldt
mov
dec
in
stos
add
cli
lods
pop
pop
movsb
inc
jmp
incl
xchg
rcr
jno
push
loopne
aam
loop
add
ror
into
enter
imul
lcall
and
loopne
loope
call
inc
ljmp
ss
insb
xlat
jp
pop
shrl
push
fadd
adc
inc
sbb
test
inc
sti
mov
jl
jge
aam
or
inc
inc
data16
sbb
mov
jl
pop
sub
das
xor
pop
mov
sub
pop
outsl
push
push
mov
rcrb
jle
xor
cmp
push
out
fldz
divl
mov
mov
sub
push
xchg
addl
inc
cmp
adc
jmp
mov
dec
push
jg
les
cld
bound
and
sbbb
and
lea
dec
sub
lret
insb
fwait
mov
addr16
es
jmp
mov
ds
js
xchg
jge
cmp
lock
scas
sub
ljmp
mov
jo
add
mov
push
jmp
popf
mov
addr16
sub
dec
push
sbb
not
popf
cltd
ljmp
lret
fimuls
sbb
jns
repz
iret
xor
aam
les
or
jnp
add
add
mov
add
je
idivb
mov
daa
add
sbb
or
dec
not
cmpsb
pop
mov
lcall
int
mov
jae
aas
and
rorl
push
nop
aaa
insb
and
xchg
out
cld
cli
fbstp
pop
cmp
rclb
dec
and
and
sub
dec
inc
fwait
cmpsl
xor
test
inc
mov
test
imul
scas
pop
rcrb
nop
popa
je
jge
adc
test
sbb
push
cmp
jne
mov
cwtl
fdivrl
mov
push
int3
push
stos
ret
daa
adc
inc
pop
mov
lock
movsl
addl
xor
shll
out
insl
addr16
nop
movhps
xchg
jg
lods
mov
pop
ret
jns
push
jno
inc
out
pop
fisubrs
out
out
push
incl
iret
or
dec
cmp
and
jle
sbb
addl
fmull
addr16
xchg
mov
outsl
dec
orl
sysexit
jns
xlat
pop
sub
push
pop
lods
mov
xlat
in
pop
ds
inc
leave
mov
dec
add
sbb
lret
adc
mov
lret
lds
out
dec
inc
icebp
repz
mov
sti
jae
leave
jno
out
xor
mov
inc
push
jno
pop
adc
out
fwait
mov
push
inc
xchg
sbb
jp
addb
mov
sub
jp
add
or
test
xchg
rcll
add
dec
pop
inc
jge
dec
pusha
movsb
stc
xor
adcb
ror
cmpsb
ljmp
stos
inc
fmul
mov
pop
push
adcl
jecxz
test
cmp
fsubs
fisttpll
int
popa
jae
bound
sahf
int3
inc
sbb
and
add
or
xor
mov
gs
mov
jge
mov
dec
ja
stc
mov
sub
data16
sub
lods
jge
mov
jo
sub
pop
mov
dec
ret
insb
mov
inc
out
mov
or
or
aaa
pop
lods
test
bound
js
push
mov
mov
lret
outsl
cmpl
and
xchg
xor
cmp
xor
xchg
and
xchg
sbb
mov
inc
cmpsl
adc
jns
neg
test
mov
std
sbb
push
push
xchg
inc
imul
stos
cmp
fwait
pop
xor
mov
test
fidivl
add
jne
mov
fnstcw
pop
pop
dec
addr16
cmpsl
mov
cmp
sub
aas
jne
mov
js
movsb
std
inc
inc
dec
repz
ljmp
ret
movsb
cli
mov
adc
jmp
push
inc
adc
loope
push
mov
mov
inc
lcall
or
in
pop
push
imul
cwtl
fwait
icebp
mov
xor
pop
sbb
lods
out
fmuls
dec
xor
pushf
push
popf
movl
inc
jno
or
aas
dec
push
jne
arpl
mov
push
mov
push
out
cmp
jmp
push
inc
stos
leave
or
fwait
mov
mov
in
cmpsb
rclb
fwait
jae
jecxz
mov
add
aam
mov
jo
or
jb
push
orl
mov
cmp
xchg
jnp
lcall
pop
sbb
fsubp
push
jmp
repnz
cmpl
jecxz
lcall
pop
aaa
nop
jecxz
in
stc
movsl
out
shrb
frstor
jmp
pop
test
aaa
adc
std
out
mov
outsl
mov
cli
jo
jmp
movsl
and
pop
frstor
mov
data16
inc
cmc
ret
or
pop
fistpll
popa
sub
add
aas
pop
mov
xor
sbb
fcoml
out
icebp
and
jmp
loopne
push
inc
xchg
data16
push
pop
out
lods
out
sbb
and
sti
push
ret
fwait
addr16
js
mov
jge
push
ljmp
xlat
mov
inc
or
inc
mov
mov
xchg
pop
add
scas
lret
jae
cmp
arpl
dec
jmp
lea
outsb
iret
and
outsl
xor
outsl
push
lcall
jae
ds
test
push
push
sbb
popf
insl
or
xor
in
popf
mov
in
mov
jge
xchg
imul
rcll
into
jle
cmp
das
outsb
ds
push
pop
lret
orb
xlat
ja
push
xchg
test
cmp
and
mov
lea
xor
inc
or
cmp
scas
out
movsb
mov
xchg
and
push
inc
cmp
mov
sub
or
xor
bound
xlat
pop
cmp
or
scas
add
jl
stos
out
inc
loop
jns
shll
lds
sub
jns
outsb
adc
push
fs
mov
sbb
into
jns
xlat
adc
mov
adc
pop
push
mov
xor
out
iret
sub
lcall
adc
stos
or
es
mov
or
loop
test
test
outsl
jge
iret
inc
jae
call
xlat
add
incl
pop
imulb
lret
cwtl
sbb
adc
lea
rclb
in
sub
add
sbb
sub
sbb
in
mov
rcrl
cwtl
pushf
aas
pop
movsb
xor
iret
jno
cmp
sub
les
popa
inc
add
icebp
add
pop
ss
or
dec
xchg
xlat
cmc
ret
and
imul
in
mov
insb
ja
sub
mov
ret
movsb
cmp
ljmp
icebp
cmpsl
ret
dec
outsl
xor
add
fwait
jle
shlb
mov
ss
dec
ljmp
test
arpl
adc
bound
pusha
stc
jne
fs
cmpb
sbb
push
mov
inc
adc
mov
push
mov
and
and
inc
pop
movsl
aad
jbe
jae
pop
push
xlat
rolb
push
jle
daa
sti
aaa
push
loope
mov
pop
jge
xchg
or
lret
inc
xor
sahf
mov
cli
lret
cmpsb
dec
lds
sbb
in
fs
push
cmpsl
and
dec
cmp
xchg
pop
popf
dec
push
mov
dec
jo
data16
fsubl
lods
xchg
movsl
xchg
sbb
sub
scas
ljmp
xchg
imul
jo
test
cmpsl
negb
leave
mov
aad
push
fidivl
cld
mov
mov
into
jge
and
jmp
push
xchg
mov
or
into
sub
sub
mov
cmp
sbb
fwait
fwait
ds
and
cmp
xchg
jle
push
sbb
subl
pop
jno
mov
cmp
in
push
into
rorb
cmp
je
lahf
dec
xor
mov
subb
lods
in
jbe
mov
in
mov
loopne
imul
movsb
xchg
or
add
sbb
stc
sahf
pop
jecxz
mov
cld
rcrl
xor
loop
jp
sbb
lods
or
and
pushf
dec
xchg
xchg
add
add
std
fstpt
xor
sbb
js
jne
dec
jae
inc
sub
lds
inc
inc
sbb
cmp
cmp
aad
or
iret
test
and
add
push
and
rorb
loopne
or
mov
pop
cmp
xchg
shlb
push
lods
adc
idivl
lret
or
xchg
iret
mov
fimuls
mov
aam
lahf
and
push
js
fiadds
push
in
std
xchg
das
lods
lock
sarb
jecxz
pushf
dec
jle
subl
xor
test
jl
cmp
dec
cs
pusha
rolb
aaa
insb
add
xchg
inc
pop
aam
mov
cmp
jnp
punpckldq
cmpsl
dec
mov
nop
adc
jno
fists
leave
mov
leave
cmp
mov
add
sbb
dec
mov
jmp
loop
cmp
inc
push
adc
movsb
int3
jb
add
cmpsb
sub
pushf
fildl
sbb
lretw
sub
adc
scas
jl
inc
lock
xchg
popa
push
negl
push
mov
inc
jecxz
xor
jecxz
or
stos
aam
or
imul
aam
pop
ljmp
dec
jmp
push
insl
pusha
or
scas
push
and
aas
das
xchg
sbb
inc
out
cmpsb
loopne
sbb
insl
movsl
xchg
push
or
pusha
jb
dec
dec
xor
adc
pop
sbb
fnsave
movsb
les
lds
cli
ja
adc
jae
pusha
jns
xchg
jmp
xor
jmp
add
adc
mov
inc
push
pop
xlat
xchg
ret
lock
dec
adc
dec
hlt
adc
cmc
mov
fndisi(8087
popa
dec
jo
aam
es
in
call
popf
outsl
in
pop
cltd
mov
dec
test
test
jle
aaa
mov
dec
lds
cli
sbb
xor
pop
jne
lods
adc
test
cmp
jp
mov
lcall
sbb
xchg
ret
jne
sbb
bound
sarl
mov
cltd
pushf
mov
fiadds
add
in
lds
mov
xchg
int
mov
jnp
clc
enter
mov
stos
jle
mov
mov
xchg
jnp
mov
test
test
xchg
js
pop
data16
push
mov
mov
dec
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
xor
mov
pop
jp
shrl
sub
xchg
test
dec
inc
loope
cmp
mov
pop
andl
sub
mov
jl
inc
pop
sarl
lods
ja
divb
dec
xor
push
fistpl
push
aam
in
mov
mov
xchg
and
adc
das
das
mov
stos
hlt
mov
or
outsl
out
push
xor
js
inc
clc
and
ds
js
mov
sbb
out
fisubl
arpl
in
test
out
xorl
test
je
mov
ljmp
lea
xchg
xor
popa
lods
movsl
out
iret
iret
xchg
cmpb
movsl
mov
inc
lahf
sbb
pop
sti
out
movsl
pop
syscall
into
loopne
dec
lea
mov
aam
push
lock
and
imul
rolb
or
xor
add
pop
xor
divb
jbe
xchg
mov
add
loop
sub
cmp
scas
dec
jne
pop
sub
daa
arpl
stc
cmc
lcall
inc
leave
cmp
arpl
gs
add
mov
dec
dec
mov
call
imul
xlat
in
test
mov
mov
pusha
sarl
jmp
lcall
mov
push
pop
lods
cli
adc
mov
sahf
shr
inc
sahf
popf
mov
sub
mov
push
or
adc
inc
mov
out
add
lds
mov
or
lahf
fisttps
dec
mov
jb
in
cwtl
push
lahf
ret
mov
lret
jg
movsb
enter
dec
pop
nop
in
fidivrl
js
push
bound
orb
mov
shrb
lods
ds
adc
cs
test
in
sbb
cmp
test
daa
push
and
jnp
mov
and
ds
dec
pop
clc
lods
imul
ja
out
xor
or
gs
xchg
icebp
lds
sub
fistps
in
adc
ret
pop
fwait
cltd
scas
and
stc
lahf
mov
xor
adc
orb
es
and
mov
jge
shrl
negb
js
sti
dec
sahf
xor
test
faddl
in
stc
inc
and
mov
pusha
add
icebp
push
and
pop
jle
push
jbe
ds
jl
mov
sub
mov
stos
sti
iret
in
outsl
add
add
out
push
and
in
or
push
mov
inc
insb
inc
sarb
xchg
and
mul
jmp
ljmp
inc
inc
imul
dec
pusha
cmp
cwtl
mov
jb
push
out
mov
sbb
test
inc
pop
push
out
mov
mov
mov
mov
mov
jp
push
mov
sub
push
hlt
aas
xchg
push
or
or
and
mov
mov
out
xlat
ret
mov
mov
mov
test
add
lea
mov
fsubl
pop
cltd
mov
lea
xchg
dec
xchg
adc
sbb
outsb
mov
ljmp
aaa
insb
push
lcall
je
sub
movsl
mov
inc
or
fistpl
mull
sub
mov
mov
push
fnstenv
xor
jle
ja
add
inc
addb
enter
ss
and
inc
dec
xchg
cmp
jnp
sub
std
movsb
out
clc
mov
jae
fstp
mov
and
adc
dec
xor
mov
shll
add
cltd
pop
cmp
jb
xchg
loope
stos
or
lcall
xor
insl
fs
mov
in
mov
enter
dec
mov
jo
xchg
sbb
pop
lahf
sub
jecxz
fs
pop
push
xchg
sub
mov
inc
mov
repz
andb
movsb
ljmp
mov
shll
out
lods
aas
mov
pop
hlt
mov
mov
jecxz
pushf
movsb
lret
call
lock
aam
fistps
out
sarl
xchg
jne
popa
sbb
inc
mov
out
or
lahf
xor
inc
into
icebp
sub
js
fldl
pop
cld
inc
cli
sbb
faddp
push
ja
jle
lahf
fsubs
popa
jl
sbb
cmc
and
lret
leave
jg
repnz
shll
jle
jg
hlt
fwait
mov
ret
test
cmp
cmp
rcr
fiadds
adc
lods
pop
out
mov
shrb
jnp
dec
push
xor
mov
cs
mov
aas
xor
jecxz
inc
cmc
mov
movsl
pop
mov
dec
xchg
lcall
lea
sub
roll
nop
jle
sbb
imul
fidivrl
or
adc
in
pop
mov
enter
sbb
xlat
and
pop
int3
jbe
mov
mov
push
lea
inc
sub
ss
xchg
jns
push
dec
jl
mov
cmp
push
mov
lock
adc
sbb
iret
add
ds
ret
mov
jbe
rorl
jp
fcompl
xor
inc
fs
pop
lock
lods
imul
sbb
mov
leave
adc
mov
dec
xchg
in
jg
cld
mov
into
leave
fwait
push
dec
pop
cld
fimuls
rorb
mov
mov
outsl
mov
int
adc
push
inc
pop
mov
mov
sbb
push
inc
ret
orl
push
xor
jno,pn
mov
cmp
imul
cmpsb
gs
lods
push
inc
jbe
xlat
aam
push
dec
dec
arpl
push
cli
inc
roll
push
cmpsb
push
mov
dec
mov
iret
aad
in
sbb
jle
xchg
je
mov
ss
jbe
or
rcll
dec
add
mov
xor
call
popf
ds
push
fwait
mov
pop
push
mov
outsl
xchg
cli
sub
dec
ret
je
adc
mov
dec
fdivrl
sub
inc
or
std
movsb
lods
mov
icebp
push
jae
inc
jae
imul
dec
jne
js
hlt
or
out
dec
cmp
popf
push
push
xchg
icebp
in
mov
pop
push
mov
jg
jge
mov
into
imul
jp
daa
jp
adc
and
mov
addr16
decl
add
in
inc
jmp
push
insb
sub
shrl
push
sub
out
imul
loope
adc
clc
sbb
les
ds
xor
inc
stos
imul
das
aad
xchg
mov
mov
or
imul
lods
and
test
fisubl
cmp
pop
mov
mov
fs
popa
add
pop
jecxz
out
and
cmp
lret
mov
mov
int
lcall
xor
cmp
jae
pop
and
mov
cmpsb
inc
jb
faddl
into
leave
or
loop
inc
dec
stos
sub
outsl
in
xchg
jle
mov
add
mov
out
add
fsubr
sbb
ja
or
push
xchg
push
nop
mov
fdivp
jno
xchg
stc
sbb
aad
cmpsl
mov
inc
cmc
and
mov
mov
push
dec
lcall
sub
sbb
call
xchg
mov
dec
push
and
jns
aad
es
fsubrs
call
mov
mov
cltd
jnp
and
rclb
icebp
xor
popf
repz
shl
arpl
jl
scas
mov
mov
outsl
js
dec
push
inc
sbb
or
frstor
xor
or
ja
mov
mov
push
dec
dec
rcrl
or
jp
cmp
fdivrl
scas
pushf
xor
aas
scas
ficoml
cmp
jmp
test
aaa
testb
jmp
dec
lahf
and
into
push
flds
in
ljmp
lds
mov
into
lea
sub
mov
jnp
pop
aas
daa
xor
mov
ljmp
sbb
stc
xor
mov
push
mov
filds
cmp
dec
push
test
lcall
pop
jge
xor
mov
enter
orb
jecxz
ljmp
push
fistps
pop
cmp
out
adc
sbb
call
hlt
jg
dec
mov
mov
lcall
xor
test
repz
jae
cli
ja
inc
movsb
jecxz
xchg
movsb
xor
int3
xchg
mov
inc
xchg
addr16
gs
lods
add
sub
pop
fs
aam
sbb
sbbb
in
jne
lret
jmp
adc
add
inc
and
xchg
rclb
xor
xor
test
add
sar
ret
push
sub
mov
stos
aad
dec
fwait
shll
das
hlt
mov
adc
fsubrs
ds
or
loope
gs
inc
inc
xor
inc
xlat
lret
aaa
cli
cmovne
cmp
outsb
leave
pop
inc
or
xor
aam
cltd
pop
fildl
test
aam
hlt
in
push
aas
adc
clc
stos
jle
mov
inc
cmp
fwait
es
inc
jecxz
adc
into
cwtl
cmp
sub
dec
push
pop
push
and
fs
sbb
mov
in
in
sbb
sub
xchg
mov
xor
sub
data16
fadds
cmc
sbb
sbb
or
adc
cltd
hlt
push
mov
dec
and
xchg
imul
orl
push
xchg
xchg
ja
leave
les
xchg
mov
jp
int
sbb
mov
cmpsl
sub
inc
pop
loop
xor
pop
push
ret
add
inc
jl
pop
sub
fldt
mov
cmp
and
sahf
jnp
ja
add
or
das
stos
mov
or
add
or
jns
rcl
or
scas
jge
xchg
mov
mov
hlt
sbb
gs
lods
cmp
inc
mov
aad
js
pop
pusha
or
movsb
xchg
sub
xlat
mov
sahf
insl
or
pusha
or
pop
cmp
jg
ljmp
popa
cmpb
xchg
cmp
push
adc
xchg
mov
pusha
xchg
ds
push
jg
daa
gs
or
and
jns
inc
shrb
call
push
push
arpl
lahf
fisubs
lock
cli
ret
mov
cltd
cmp
stos
orb
xor
aas
je
int
xor
dec
mov
loop
ja
and
mov
mov
jmp
icebp
mov
insl
pushf
sub
xlat
decl
call
xchg
dec
dec
lret
je
dec
sub
adc
imul
push
mov
sub
sbb
in
iret
xor
mov
add
fistpl
or
jecxz
push
mov
subb
dec
movsl
cmp
xor
lock
lret
es
mov
and
repz
cmc
push
ret
jecxz
out
adc
dec
lock
dec
dec
cmpsb
aad
mov
ret
lods
xor
ret
sbb
jbe
ljmp
cmp
add
cli
fcomps
push
sbb
push
divl
xor
mov
pop
push
loop
fisubrs
pop
add
popf
movsl
fsubp
fcmovne
leave
adc
pushf
sahf
inc
pop
stos
jno
cwtl
cmpsb
sub
dec
cmpsb
test
or
lea
lods
cli
mov
or
pop
xchg
adc
push
hlt
sub
or
cltd
pop
mov
fwait
mov
xchg
adc
mov
ret
push
pop
xor
sub
lock
mov
and
test
hlt
inc
jbe
popf
xchg
out
pop
mov
hlt
sub
fsubl
mov
dec
mov
mov
ret
xchg
dec
stos
cmp
xor
or
inc
and
cmp
lds
ret
outsb
xchg
inc
jp
cmc
mov
fwait
into
pop
fucom
jp
repz
mulb
repnz
add
adc
mov
pushf
push
fisubrs
pop
fldenv
xchg
icebp
pop
pop
shrl
adc
imul
xchg
jnp
pop
add
lahf
test
xor
fiadds
insl
mov
mov
sub
movsl
inc
out
push
pop
mov
roll
push
mov
dec
pop
sbb
lcall
enter
test
shll
mov
shll
jns
int
sub
ljmp
sbb
jae
int3
aad
jb
pop
sub
sbb
lcall
add
cmpsl
in
adc
xor
mov
out
mov
pop
imul
addb
cmp
xchg
sbb
ficompl
pusha
jo
std
cmp
push
xchg
clc
jge
stc
pop
pop
int3
mov
ds
mov
cmp
cltd
movsl
push
mov
pusha
add
iret
popa
or
imul
sbb
lods
and
adc
insl
loop
xchg
inc
out
shrb
sbb
pushf
dec
pop
and
test
loopne
mov
lahf
mov
pushf
jne
add
jb
and
scas
outsl
fidivrl
hlt
test
imul
je
in
jp
adc
fcmovnbe
jg
sbb
aaa
lea
jns
mov
or
mov
cwtl
dec
les
lcall
mov
sbb
rcll
loop
inc
jmp
das
xchg
cmp
adc
shlb
in
push
sbb
mov
sbb
rolb
fcom
mov
pop
inc
int
adc
xor
xchg
orb
sbb
sbb
adc
xor
jne
and
lods
mov
pop
jl
and
test
cmp
xchg
or
pop
pop
or
ret
sbb
fdivl
pushf
test
dec
mov
adc
dec
shl
call
std
test
sbb
mov
xchg
insl
out
xchg
xchg
sbb
pop
lods
mov
lock
std
cltd
out
fimull
or
pop
data16
and
outsl
add
adc
int
dec
mov
xor
cmpsb
sahf
outsb
stos
int3
int3
jp
pop
or
xor
sbb
cltd
sbb
dec
or
push
jnp
das
pop
jb
jo
lret
in
ret
xchg
movsb
cmp
add
mov
mov
pop
xchg
imul
xchg
and
lret
cmp
dec
mov
stos
icebp
push
popa
jecxz
ret
shll
jae
push
stos
and
ds
sbb
mov
ja
ja
cmp
xchg
mov
adc
inc
mov
mov
jp
fstps
or
sub
mov
jmp
ret
outsb
addr16
daa
push
aam
jb
push
inc
dec
std
aad
lods
popa
adc
test
or
mov
pop
aaa
push
cli
xchg
xor
sub
pop
frstor
bound
jbe
addr16
jbe
xchg
rcrl
sahf
ljmp
push
add
orb
xchg
push
push
jp
test
test
xor
inc
sbb
test
inc
sbb
lret
std
aas
adc
int3
push
ror
jp
in
rcrb
sub
fisttps
jnp
stos
add
sub
lcall
fdivrl
lret
lret
pop
push
imul
ret
inc
out
out
cmp
int3
in
iret
into
scas
mov
lcall
pslld
dec
pop
lcall
mov
xor
scas
mov
es
inc
xor
fildll
pop
aas
fnstsw
lret
sub
test
mov
mov
das
rorb
popf
push
pop
mov
fcoml
or
xor
jnp
cli
ret
fisubrl
xor
push
adc
pushf
or
aaa
cmp
ja
inc
popa
insb
xchg
mov
lret
enter
and
repz
fcmovnu
xor
mov
lock
xlat
sub
test
cmp
or
xchg
aam
xor
cmp
ret
and
inc
mov
mov
aaa
aaa
je
test
mov
inc
mov
insb
fadds
leave
pop
xor
inc
shl
sahf
push
inc
add
daa
xlat
inc
mov
push
addr16
repz
shll
xchg
push
add
ficompl
insb
jb
movsb
pop
pusha
negl
fstpt
test
pop
mov
push
push
dec
rcll
pop
xchg
out
cmp
xor
mov
sub
sub
and
pop
mov
pop
cwtl
cmp
mov
faddl
popf
mov
imul
mov
cmpsl
pop
sbb
inc
jg
in
hlt
ret
xchg
fstp
aad
fs
lea
sub
popa
out
lock
cld
iret
outsl
xlat
push
sahf
dec
nop
push
adc
pop
ret
fwait
je
xchg
inc
xor
add
int
out
fistpl
cmpsl
ja
inc
add
fdivl
idivl
cmpsb
dec
popa
inc
and
jge
sbb
mov
imul
push
pop
xor
test
inc
adc
or
jmp
ljmp
cld
lret
jge
mov
lcall
jle
ljmp
mov
inc
cmp
repz
fimuls
jmp
mov
nop
cmp
in
push
fistpl
inc
xor
cmc
jle
shlb
aaa
inc
xor
fldt
adc
mov
arpl
test
mov
enter
inc
pop
std
mov
cld
int
ret
insb
ds
mov
push
ficomps
cs
test
dec
pop
push
adc
cmp
ret
ljmp
push
or
xchg
push
push
cmc
enter
push
dec
mov
out
xlat
in
enter
sbb
jbe
mov
lock
imul
stos
push
lahf
mov
inc
dec
outsl
fisubl
ja
mov
sbb
out
jg
mov
arpl
sub
mov
jb
ret
scas
out
jae
sti
adc
inc
xor
cmpsl
push
sbb
cmp
mov
push
subb
daa
adc
in
hlt
push
in
js
insb
lock
jg
push
jo
ja
out
push
call
sbb
push
mov
and
add
xchg
mov
loope
push
imull
dec
mov
dec
fimull
insb
imul
lcall
inc
pop
inc
mov
mov
fs
test
mov
vmread
push
stos
enter
xor
push
push
mov
aaa
xor
push
lea
inc
data16
fldcw
push
ja
cmpsl
pop
inc
pushf
inc
scas
scas
jge
mov
js
push
dec
fdivrs
aam
dec
jp
push
cmc
test
fisubrs
xchg
lea
insl
push
cmp
sub
lahf
gs
adc
cmp
inc
xchg
pop
popf
cmp
mov
int3
mov
out
arpl
fwait
push
cmp
adc
xor
rcll
dec
fcomps
test
fcompl
pop
dec
int3
cmp
push
xor
hlt
sbb
std
cmp
nop
push
and
and
mov
das
dec
lock
jno
or
out
push
stos
loopne
fcom
out
aas
pop
scas
jo
mov
add
inc
fmull
bound
mov
inc
fwait
in
mov
jae
ret
mov
cmc
lock
mov
lret
insl
sbb
adc
imul
jno
pop
pop
xor
ljmp
mov
xchg
dec
movups
jge
stos
mov
movsb
cli
daa
data16
inc
lock
add
lds
lods
push
jmp
sbb
aaa
xor
mov
xor
mov
and
arpl
rcrb
je,pn
xchg
ror
stos
lahf
xor
adc
mov
repnz
test
cmp
mov
pop
adc
int3
mov
sbb
enter
outsb
adc
dec
cmc
inc
stc
int3
mov
fiadds
lahf
adc
stos
out
jo
lret
sub
mov
mov
inc
fwait
mov
fwait
pop
sub
mov
pop
adc
xor
and
cmpsb
nop
jb
add
push
mov
push
and
ljmp
mov
jecxz
fmul
and
jl
outsb
xor
cltd
loope
xor
mov
jmp
pslld
rolb
test
fdivs
cmp
je
fstpt
int
adc
adc
movsl
jecxz
sub
push
into
inc
cmp
pop
cwtl
outsl
daa
xor
aam
ret
pop
dec
sbb
stos
mov
mov
xchg
sbb
dec
ss
hlt
jno
mov
jae
adc
dec
sub
fdiv
mov
int
mov
stos
adc
cwtl
xor
inc
lret
sbbb
sub
jnp
scas
mov
iret
push
sbbb
push
shrb
out
insl
mov
mov
add
in
iret
cs
lea
jle
push
and
and
or
add
test
pop
pop
push
fwait
ljmp
inc
xchg
icebp
push
or
inc
xchg
pushf
leave
xchg
loope
cwtl
mov
cmpsl
jl
dec
pushf
jmp
ret
or
sbb
jle
stos
arpl
or
shrb
fstpl
mov
ja
aad
adc
loop
outsl
in
es
scas
xchg
push
rcrb
lods
pusha
movsl
test
sar
hlt
aam
cs
fldt
jp
mov
out
test
pop
test
fwait
pop
ret
pop
jae
repz
cmp
adc
test
inc
jmp
sbbb
out
xchg
in
push
dec
xlat
loop
test
xchg
sbb
ret
insb
inc
cmpsb
sbb
test
lods
mov
mov
sbb
jns
pop
mov
and
inc
jne
test
cwtl
push
pop
leave
hlt
add
imulb
int
mov
outsl
in
add
dec
xlat
xor
xchg
scas
dec
jns,pn
ficomps
imul
lods
aas
xchg
fistpl
xchg
lcall
sbb
bound
iret
aaa
cmpb
hlt
je
mov
bound
call
in
cmp
popa
call
sub
decb
jmp
sub
mov
or
sub
xchg
push
jecxz
sarl
xchg
xchg
into
lcall
inc
les
and
mov
imul
or
gs
insl
lds
jle
inc
jne
push
cmp
data16
cmc
scas
add
in
and
movsb
test
mov
adc
in
or
mov
sarl
cs
pop
mov
cmpsb
ljmp
andb
das
inc
outsb
and
test
xor
popa
ficompl
int3
jns
arpl
ss
out
push
ret
fdivl
call
and
jo
nop
aas
jp
dec
test
stc
std
sbb
dec
test
into
insb
pop
xor
pop
rcll
xor
pop
xchg
addr16
adc
aaa
rolb
mov
popf
xchg
sub
or
lahf
cmpsb
xorps
cmp
fisttps
inc
xorb
pop
ljmp
pop
and
jne
shr
stos
jne
pop
xor
enter
into
mov
dec
das
or
pop
jge
daa
push
cs
pop
mov
inc
fchs
jae
dec
cmovae
sbbw
jo
pop
adc
jns
jmp
aas
and
jnp
dec
fmul
cmp
notl
bound
and
pop
fisttpl
adc
scas
pushf
lds
loope
and
xchg
aas
lea
add
pop
push
ljmp
pop
sub
popf
das
test
dec
xor
fwait
add
xchg
cld
faddl
inc
lods
mov
scas
adc
cmp
fmull
data16
jl
fs
add
sbb
cmp
and
jbe
push
inc
sbb
and
jns
sbb
popf
cmc
push
loope
fstpt
lock
sbb
add
xchg
jge
in
data16
faddl
imul
push
mov
jo
push
sbb
dec
sbb
jmp
not
jge
xchg
fists
cld
xor
repnz
fidivl
dec
mov
fcmovu
shll
push
lods
mov
fcomp
lret
push
int
aad
inc
dec
popf
push
ds
cltd
sbb
xchg
xlat
ror
adc
inc
inc
xlat
xor
jbe
adc
or
out
fldl
adc
dec
mov
aad
pop
or
out
jge
ret
push
pop
repnz
add
out
mov
push
jg
daa
push
adc
fsubs
out
bnd
cmp
aam
dec
xchg
leavew
xchg
popf
scas
flds
dec
or
aad
jne
fdivp
xor
and
push
add
xor
imul
adc
mov
pop
jecxz
sbb
and
or
adc
nop
inc
and
or
mov
mov
xchg
adc
sbb
into
jp
pop
es
jne
and
or
iret
stc
test
lods
pop
cmp
xor
push
pop
mov
mov
call
xchg
scas
fmull
in
and
or
inc
push
imul
je
hlt
sahf
lds
arpl
in
ljmp
pop
sbb
mov
ret
mov
adcb
pop
adc
push
pop
or
jmp
mov
jl
popf
mov
pop
xor
adc
ds
ss
pusha
jg
jl
dec
jecxz
inc
scas
adc
data16
mov
repz
xchg
mov
pop
clc
add
adc
fdivl
ret
ds
dec
fmull
pushf
mov
pop
jo
iret
je
bound
cli
ret
cmc
leave
imul
lock
fldl
imul
outsl
out
xor
jns
arpl
push
xchg
les
lret
test
cmp
add
mov
mov
xchg
jle
lret
add
add
pop
movsb
aam
adc
pop
stc
adc
dec
dec
mov
xchg
shlb
insl
fists
daa
cmp
mov
dec
clc
and
fstpt
lret
mov
pop
push
mov
inc
fsubrs
pop
add
std
add
xorps
insb
dec
dec
movsl
mov
jle
dec
aaa
lahf
jg
in
jmp
xor
aaa
hlt
inc
popa
pusha
pop
jp
pop
jb
sub
fs
imul
pop
xchg
pop
cwtl
call
or
fdiv
mov
xchg
inc
pop
xchg
je
popa
dec
inc
mov
cmp
std
dec
int3
aad
pop
daa
cld
iret
mov
xchg
mov
mov
pop
scas
and
xor
cli
adc
aaa
mov
filds
lret
out
fildll
jns
pop
lcall
push
fs
pop
pop
repz
mov
hlt
out
mov
and
add
pop
mov
jle
xchg
pop
pusha
enter
call
sbb
ja
or
addr16
jecxz
je
imul
lods
aam
or
xchg
loopne
out
aaa
push
push
dec
jg
in
jno
test
aas
pop
cmp
js
and
pop
arpl
notb
inc
aad
xchg
repz
jno
xchg
lods
jmp
mov
mov
sub
mov
testb
das
popf
push
and
mov
test
test
mov
add
aad
mov
cmpsl
lcall
sub
push
push
test
add
aas
and
mov
cmp
cmpsl
aas
add
add
outsl
bound
xor
pop
jnp
sub
leave
cli
mov
inc
das
or
int
push
sub
jae
insl
adcb
jmp
push
repz
lret
xchg
jb
inc
push
inc
repnz
push
test
xor
cmc
inc
or
add
jle
add
lret
test
movsl
enterw
cmp
shl
icebp
pop
xchg
orps
stc
rorb
dec
cmpsl
repz
mov
mov
and
lret
mov
inc
xlat
shrb
bound
outsb
inc
inc
or
pop
outsb
mov
fstl
mov
cmpsl
push
fnsave
pop
push
ljmp
imul
cmp
cmp
mov
testb
inc
jbe
inc
pop
sub
pop
push
gs
js
cmc
movsb
xlat
mov
iret
jne
mov
push
outsb
push
lock
mov
cmp
cltd
scas
shrb
rcrb
ucomiss
mov
mov
sub
aas
pusha
xchg
dec
push
xchg
lods
sub
adc
movsb
mov
in
fistpl
jbe
jg
xlat
mov
jne
mov
adc
push
lret
or
mov
pop
in
sub
inc
andl
add
mov
sbb
mov
pop
jb
sub
cltd
sub
jne
jns
cmp
lahf
mov
xchg
inc
add
sub
sbb
xorb
test
out
jae
enter
sbb
js
pusha
int3
mov
je
icebp
mov
or
inc
loope
sub
mov
inc
sti
out
jne
jns
test
xor
imul
jmp
push
push
imul
in
cwtl
lea
out
out
jbe
pop
repnz
xchg
sti
outsb
xor
sti
movsl
lret
iret
xchg
popf
xchg
jbe
repnz
push
jae
dec
int
lds
jb
loope
sub
shlb
and
push
inc
and
jmp
or
sub
push
enter
insl
mov
insl
fiaddl
or
inc
jp
fisttpll
push
jg
repnz
insb
sub
or
add
cmp
sub
cli
ret
mov
or
imul
xchg
sub
mov
dec
dec
and
movsl
jmp
or
pop
ret
or
push
cwtl
cmp
push
clc
lods
and
stos
in
ss
popf
adc
fisttps
and
aad
or
and
jle
fnstsw
jg
jmp
or
into
sbb
loope
sahf
daa
hlt
pop
cmp
or
mov
sub
jae
jl
push
andb
push
sub
cmpsb
mov
adc
push
sub
fdivrs
inc
movsb
xchg
pop
mov
icebp
fldcw
mov
inc
shl
sbb
js
repz
rol
push
scas
jl
imul
lea
jl
sub
cmc
lea
mov
testl
sbb
pusha
iret
inc
push
addr16
gs
outsb
cmpsl
add
inc
dec
adc
adc
ja
push
fldl
movsb
lds
mov
int3
cmp
arpl
pop
push
and
sar
rcll
pop
pop
negb
sub
push
lods
xlat
push
xchg
pop
neg
ds
mov
sbb
mov
mov
or
jmp
sub
mov
lahf
insb
jno
das
lret
pop
mov
je,pn
push
fdivrs
xor
and
bound
mov
mov
aad
sbb
mov
sub
pushf
mov
repnz
in
rolb
int3
pop
ss
rclb
push
mov
mov
xchg
pop
inc
out
call
inc
cmp
loop
call
psrad
fwait
in
add
call
cmp
lock
sub
mov
arpl
cmp
loope
cmp
and
scas
inc
nop
cmp
pop
jmp
pop
mov
mov
nop
loope
adc
or
scas
jne
arpl
je
mov
jne
shr
sbb
lret
mov
ret
mov
dec
popf
sbb
lds
repnz
jb
and
insb
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
lock
jp
pop
jp
or
aaa
pop
fcoms
cmp
hlt
mov
cli
je
and
out
js
lahf
leave
fnstcw
mov
cmp
mov
enter
and
xchg
xor
or
jb
push
clc
sbb
repnz
hlt
and
adc
or
adc
cs
in
pop
push
sub
mov
cmp
sahf
push
and
popf
or
cmpsb
push
inc
leave
and
jae
nop
das
push
inc
inc
popf
subl
sbb
push
aaa
out
add
jbe
adc
inc
mov
js
or
add
pop
popl
inc
icebp
mov
pop
bnd
sarb
jge
test
push
mov
mov
scas
mov
jb
xchg
les
add
mov
cmp
lcall
push
les
dec
add
mov
sarb
jb
scas
sbb
xchg
add
call
push
or
pop
add
popf
mov
les
jle
movsb
stos
insl
fsubl
adc
jecxz
sub
inc
dec
push
sti
fdivs
mov
std
mov
lret
push
xchg
cli
insl
inc
and
push
fiadds
mov
in
mov
lret
xlat
cmp
adc
je
adc
movsl
jae
pop
mov
push
pop
lds
mov
stos
cmp
bnd
xor
lods
or
mov
les
mov
cmpsb
ss
lock
sbbb
push
ret
sub
jno
adc
inc
repz
out
sbb
push
inc
sbb
cmp
ljmp
xchg
js,pn
dec
call
or
es
xchg
mov
sarl
loopne
push
ljmp
mov
outsb
ss
imull
sar
adc
dec
psrlq
mov
sbb
pop
in
cmc
lcall
js
sub
xor
pop
data16
cmpsb
xchg
icebp
inc
sub
or
pop
fwait
in
mov
pop
xor
clc
push
add
or
or
pop
fs
mov
sbb
adc
push
daa
outsb
mov
mov
xor
cltd
xor
jmp
dec
inc
inc
sarb
lods
adc
popf
xchg
das
mov
ret
das
adc
and
add
xchg
xor
rorl
notb
lcallw
jae
mov
arpl
and
int
adc
roll
lock
mov
movsl
daa
cli
cmp
es
cwtl
outsl
jl
js
call
adc
shrb
fs
or
call
cmp
or
push
je
scas
sub
jae
xor
icebp
add
pop
arpl
je
rcrl
push
cli
xlat
pop
jns
addl
sub
test
mov
xor
push
inc
mov
cmpsb
adc
mov
out
push
icebp
push
fstpl
xor
add
fisubs
mov
or
jae
insl
leave
adc
jl
jne
test
cmp
inc
inc
pop
add
jecxz
outsb
es
mov
lea
lods
scas
aas
enter
insb
icebp
or
lods
jg
cwtl
mov
adc
add
les
rcll
movsl
mov
loop
stos
xchg
cli
add
pop
xchg
inc
loope
xor
xchg
lret
mov
hlt
mov
lock
xchg
sarb
fcmovbe
dec
sbb
ljmp
cmpsl
xor
mov
jns
cwtl
mov
call
and
dec
inc
and
lea
or
inc
xchg
jl
imul
rcrl
push
sbbb
gs
mov
iret
jmp
cmc
fs
cmpsb
stos
out
cltd
mov
pop
xor
adc
cmpsb
sbb
xor
cmpsl
cmp
clc
pop
inc
arpl
scas
adc
cmpsl
jo
addr16
sbb
fnstcw
ficompl
fistpl
arpl
pop
mov
xor
xor
dec
adc
xorb
dec
cmp
hlt
xor
jo
sbb
std
mov
loope
lock
cmc
movsl
lea
sbb
mov
mov
in
mov
sbb
and
xchg
rcrl
stos
lahf
test
mov
orb
andb
cltd
rolb
mov
and
mov
push
loop
pop
rcll
jg
rcl
fs
mov
add
inc
mov
das
push
or
ss
push
lea
lahf
aad
push
mov
sti
cmc
add
out
pop
mov
shlb
add
pop
xchg
jle
jp
sub
mov
imul
jo
bound
sbb
push
mov
and
lds
inc
dec
fcom
inc
xchg
rcr
cmp
movb
xor
cmpsb
push
cmp
adc
mov
jp
addr16
scas
mov
adc
dec
cwtl
and
lock
push
inc
out
mov
stc
lret
inc
in
fists
inc
or
sbb
push
and
clc
mov
bnd
cmc
adc
xchg
loopne
pop
popf
pushf
scas
lods
fnstsw
sub
push
push
xlat
mov
dec
push
inc
pop
stos
xor
loop
out
insl
fsubl
cmp
sub
push
call
dec
xor
dec
mov
mov
pop
inc
rcll
test
push
rcrb
push
jp
dec
lods
imul
mov
mov
jnp
sub
test
inc
subb
stos
cli
pop
push
push
movsl
mov
jl
insl
daa
scas
jnp
es
jmp
loopne
xchg
in
mov
pop
and
cmp
jmp
adc
dec
and
into
gs
mov
out
imul
out
sub
scas
push
js
pop
jg
adc
imul
and
xchg
push
cs
adc
jb
mov
xchg
pop
dec
outsl
bound
fistps
test
sti
pop
aaa
loopne
mov
xchg
jg
fdivp
pop
rorl
dec
push
mov
pop
pop
add
dec
idivb
inc
mov
mov
push
dec
mov
cmpsl
jno
insl
subb
call
imul
xchg
cmc
ja
popf
sbb
jmp
or
xchg
imul
dec
add
inc
pop
repz
push
std
xchg
sbb
or
rclb
pop
push
ds
into
repnz
int
arpl
daa
test
jns
pop
enter
add
insl
insl
jecxz
imul
jle
andl
lret
push
push
frstor
lret
pop
jge
xlat
in
movsl
push
pop
scas
ljmp
xchg
dec
mov
push
or
enter
js
jmp
adc
sub
adc
sub
mov
fistpll
mov
xchg
sahf
add
push
or
inc
or
lods
jnp
push
push
mov
add
mov
lret
js
mov
test
cmpsb
mov
std
cmc
ja
and
es
in
gs
lcall
sbb
xchg
in
mov
mov
int3
test
shrl
and
in
sbb
jl
sub
jbe
lcall
nop
sbb
cltd
add
je
xor
stos
push
mov
cmc
imul
insl
mov
push
les
xor
add
push
mov
ds
cmp
out
loopne
bound
xchg
imul
mov
adc
addr16
mov
cltd
inc
sub
xchg
test
ss
jae
pop
fsubr
in
adc
loope
push
mov
popf
xor
cmp
fdivl
and
stc
jo
pushf
jbe
xchg
xchg
dec
add
xlat
addr16
int3
cs
fwait
insb
test
pop
jne
pop
cwtl
insb
and
xor
pushaw
in
testb
inc
test
ss
fdivrs
and
xor
pop
fisubrs
pop
xchg
push
into
xchg
mov
out
fwait
lahf
mov
imul
in
scas
iret
test
fsub
out
roll
mov
insl
mov
dec
xor
jbe
popf
hlt
pop
pushf
sbb
and
mov
es
lret
mov
xchg
xchg
pop
and
rorb
lret
aaa
nop
cltd
cs
inc
mov
movsb
jmp
test
add
gs
pop
mov
mov
adc
stos
andb
and
mov
out
je
stos
hlt
loope
mov
outsb
repnz
push
xchg
mov
or
aas
push
iret
add
sub
ja
mov
xchg
push
mov
push
test
adc
not
sub
addr16
push
notl
js
inc
inc
movsl
mov
pop
and
or
add
or
inc
jecxz
addl
lds
or
push
sti
in
mov
mov
shl
or
pop
clc
push
cwtl
jl
sub
mov
enter
aad
out
fmul
lcall
or
inc
jbe
cmp
call
push
and
arpl
test
inc
cli
js
leave
push
mov
lea
pushf
js,pt
push
out
adcb
fimull
movsb
mov
or
pop
sub
cmovno
sbb
popf
push
jno
push
in
sbb
jne
mov
rolb
loopne
and
ret
inc
imul
shlb
test
testb
mov
nop
out
out
push
jmp
sbb
jo
fs
fcmove
adc
cwtl
pushf
adc
fstps
pop
and
xor
lods
push
xor
mov
mov
gs
outsl
xchg
mov
push
movsl
xor
add
jns
mov
dec
push
mov
ret
mov
std
adc
xor
add
lcall
movsl
xor
sub
or
jg
int3
fbld
jg
pop
sub
popf
add
mov
push
frstpm(287
ljmp
jns
aas
push
int3
add
cmp
repnz
aam
jno
iret
push
jge
add
push
sbb
mov
rcrl
fisubrl
mov
dec
mov
mov
pop
mov
inc
fsubl
inc
outsl
sbb
mov
fsubrs
call
fdivs
add
mov
pop
xlat
arpl
test
adc
dec
sahf
bound
xchg
mov
xchg
cs
add
ljmp
xchg
push
mov
out
sbb
sub
adc
fwait
movsl
push
pop
in
and
pop
mov
cwtl
cmp
js
jnp
inc
scas
sbb
pop
jns
leave
push
and
pop
mov
in
dec
in
adc
sbb
iret
jg
xor
mov
test
aaa
outsl
add
fdivp
pop
in
in
enter
or
jle
loop
stc
shr
or
adc
js
or
mov
aaa
pusha
repz
sub
xchg
xlat
add
pop
or
sbb
jmp
mov
pop
lcall
add
imul
cmpsl
push
mov
frstor
pusha
push
insl
int3
xor
sub
jns
mov
neg
add
stc
adc
bound
push
xor
fidivrl
mov
adc
or
stos
adc
in
aad
mov
ret
adc
add
test
cmpsb
cmpl
cmp
bound
enter
andb
and
fnsave
icebp
les
into
ds
and
int
lret
add
popl
add
ss
and
outsb
xchg
fnstcw
arpl
inc
in
clc
inc
mov
cltd
ret
lods
enter
lahf
pop
push
lret
or
imulb
aad
fildll
xchg
inc
imul
cmp
lock
sub
and
mov
jno
lds
and
dec
add
push
push
scas
lahf
ret
stos
xor
mov
push
cld
lock
dec
and
sub
push
ljmp
jno
jmp
lods
js
push
push
mov
lcall
or
push
pop
push
in
cld
mov
jo
push
es
push
dec
and
jge
dec
jle
ret
cmp
push
in
icebp
lahf
sbb
lea
ds
mov
mov
imul
or
mov
push
cmp
and
fcomps
pop
dec
shlb
loope
mov
sar
sbb
pushf
mov
cmpsb
xchg
push
cmpsb
xchg
lcall
add
xchg
imul
adc
inc
loope
test
scas
negb
pop
cli
lods
test
xchg
mov
xchg
imul
cmp
sbb
pop
sub
xchg
fwait
shlb
mov
in
jbe
xor
jae
push
inc
rcll
and
xor
leave
mov
xor
sub
incl
mov
xor
mov
and
pop
int
xor
lods
xchg
loop
in
mov
in
xchg
add
std
xorl
mov
dec
push
inc
mov
je
in
fs
mov
aaa
hlt
xchg
pop
loop
sub
shlb
out
fwait
aaa
lods
out
into
xor
cwtl
xlat
frstor
sbb
xchg
js
insb
mov
and
mov
cltd
mov
popf
or
mov
dec
pop
stc
add
rclb
cmpsl
aas
xchg
into
cmp
sub
loope
mov
pop
adcb
iret
dec
ja
sbb
pushf
jne
out
xor
test
mov
add
xor
out
sar
cmc
add
xchg
lahf
jg
jne
sti
in
xor
or
cmpsl
mov
insb
vsqrtpd
cmp
loope
xor
mov
push
sbb
lds
jmp
pop
pop
mov
xchg
xchg
cmp
loope
leave
dec
std
pop
or
mov
int3
and
sub
push
dec
testb
fistps
clc
add
push
pop
mov
dec
jmp
jg
leave
popf
xor
jmp
add
fnstcw
ja
jns
dec
scas
mov
outsb
inc
rcll
ss
clc
ret
outsl
jmp
stos
adc
lods
aam
rcl
jmp
inc
sbb
jns
arpl
jae
repz
add
out
mov
mov
push
push
repz
add
ja,pt
enter
adc
loopne
arpl
add
je
stos
std
icebp
iret
push
mov
out
icebp
loope
and
sub
pop
mov
int
maskmovq
idivl
cmp
xchg
je
sbb
outsl
mov
sahf
imul
jbe
shll
leave
push
xchg
jnp
xchg
pop
iret
fistpl
mov
les
cmp
loopne
push
ljmp
subl
std
es
jg
adc
cmp
sub
or
pop
mov
and
mov
int
arpl
lcall
mov
adc
test
cmc
cmp
mov
or
leave
sbb
inc
pushf
push
push
ds
cltd
push
mov
imul
addr16
push
fs
lret
hlt
mov
push
jp
shlb
push
and
std
shrb
int3
cmpb
jg
es
repz
xor
push
andl
push
mov
pop
sbb
adc
xor
cld
jge
cwtl
ret
inc
pusha
shl
in
sbb
push
jge
push
idivb
shlb
push
stc
scas
mov
mov
mov
add
or
pop
scas
mov
mov
in
stos
and
sbb
bound
jl
and
pop
popl
jnp
xchg
les
mov
out
mov
pop
roll
pop
lods
addr16
sahf
pop
decb
jmp
push
mov
repz
mov
jns
popf
ja
mov
les
dec
or
sarl
fdivl
xor
lods
movsl
idivb
stos
or
mov
add
adc
repnz
inc
shlb
inc
fs
out
push
or
cmp
pusha
lock
mov
or
imul
inc
imulb
inc
adc
repnz
cmp
sbb
mov
cmp
sbbl
push
xor
push
cmp
mov
cli
jae
dec
inc
dec
ficomps
fnstcw
jnp
xor
leave
hlt
pop
mov
and
jb
subb
dec
aad
jecxz
mov
cmpsl
push
cmp
xor
cmpsl
xor
movsb
xchg
push
adc
cmc
sub
push
aaa
pop
push
lds
std
pop
mov
xchg
aas
aam
jae
insb
jg
popa
fidivs
out
aad
jo
loop
jno
cmp
push
pop
adc
push
inc
ljmp
push
sbb
subb
mov
add
push
bound
in
and
mov
sbb
nop
enter
cmp
mov
jge
pop
adc
push
jae
and
cmc
inc
mov
sbb
mov
push
adc
or
jb
in
jmp
inc
push
pop
push
xchg
out
dec
jnp
pop
sub
divl
aad
mov
mov
adc
les
stos
gs
fists
add
aaa
inc
xor
jge
aaa
in
cmp
sti
mov
les
ljmp
add
pop
mov
jb
fwait
mov
sub
das
int
out
sub
aaa
mov
sub
mov
mov
push
sahf
int
mov
xor
sub
mov
lret
pop
push
push
xchg
aas
ss
ds
leave
dec
test
jno
jmp
mov
mov
aaa
xorb
push
mov
imul
inc
lcall
jle
adc
std
xor
leave
out
and
lods
data16
jg
mov
xor
xchg
mov
push
jp
pushf
xchg
in
cmp
xchg
mov
adc
cmp
or
mov
outsb
adc
js
dec
pop
xor
in
push
jle
fisttpll
out
jg
out
inc
mov
loopne
sub
jb
es
sub
dec
dec
jle
fldl
push
dec
xchg
out
push
push
fs
leave
sbb
jg
pop
dec
lods
es
das
mov
xchg
xor
dec
js
lahf
int3
lods
rcrb
xchg
mov
test
js
jnp
xlat
dec
cs
pusha
xchg
test
pop
push
sbb
adc
sub
xchg
iret
pop
iret
pop
or
loopne
add
out
xor
mov
repnz
jns
les
and
jg
loope
jmp
gs
mov
xlat
xlat
xor
shll
outsl
lcall
add
into
mov
add
out
adc
data16
and
daa
xchg
dec
aad
sub
push
pop
xor
cwtl
xchg
repnz
mov
jmp
jb
pop
insb
pop
xchg
mov
adc
inc
xor
addr16
aam
add
cmc
or
out
jl
mov
mov
mov
dec
add
in
lock
or
inc
pop
add
jne
and
lret
icebp
lods
jb
in
pop
mov
mov
xor
xchg
mov
jge
mov
cmpsb
ret
popf
jg
add
cmp
adcl
sbb
sbb
jbe
mov
pop
pop
mov
xor
fstps
sbb
js
je
loope
sti
ds
cmp
mov
jg
mov
pop
cmc
arpl
mov
aad
shll
pop
in
sarb
xor
mov
sbb
fdivr
mov
push
sub
xlat
push
orb
nop
hlt
sarl
enter
stos
xor
adc
mov
mov
mov
bound
pop
lods
xchg
and
push
jge
and
movsl
jecxz
sub
jnp
lods
xchg
out
cmp
rcrb
pop
jg
jge
test
insl
jns
movsl
cmp
mov
mov
mov
push
cltd
cmp
hlt
stc
ja
fwait
add
add
je
xchg
jle
stos
cli
pop
sbb
popf
mov
inc
xchg
cmp
xor
icebp
push
push
lods
sbbl
and
push
mov
fistpll
rorl
cmp
inc
call
mov
outsb
add
and
sbb
lcall
daa
leave
in
xor
out
faddl
push
pushf
popa
pushf
into
aaa
and
mov
mov
and
mov
std
jg
cld
cmp
push
aam
mov
cs
push
inc
mov
push
aaa
xor
sti
clc
imul
cltd
sub
pushl
mov
fstl
or
lcall
push
addr16
or
fwait
pop
push
push
and
lret
adc
sub
in
call
cmpl
adc
jge
fld
popl
stos
nop
add
std
insb
les
sub
sbb
aam
jae
mov
mov
xor
sub
js
test
ss
lea
inc
push
mov
in
mov
lods
fs
dec
pop
rolb
mov
and
aas
dec
sub
hlt
jmp
mov
xchg
pop
inc
or
mov
jmp
cmpl
pop
gs
mov
mov
fwait
int3
stos
int
lret
test
jp
add
daa
imul
outsb
mov
jge
pop
dec
xor
fmull
lret
jbe
mov
rorb
pop
adc
sti
sbb
imul
ret
lret
pop
or
cmp
mov
xor
movsl
cmpsl
cld
es
loopne
pop
cmp
mov
shll
pop
in
push
jle
sbb
mov
add
sbb
mov
and
jp
lods
push
xchg
jp
ss
cmp
inc
pop
mov
lods
decl
in
xlat
and
aam
inc
shlb
xor
pop
inc
mov
or
push
leave
nop
dec
ljmp
jns
dec
mov
into
pop
addb
inc
pusha
in
nop
add
mov
lods
jno
add
add
inc
pop
xor
dec
sti
aas
cltd
cmp
mulb
fwait
pop
push
nop
jmp
lcall
adc
sub
mov
xchg
insl
push
daa
mov
icebp
xchg
in
adc
sub
adc
repz
lock
or
or
sub
sbb
jb
pop
adc
cld
and
push
sub
cmpsb
cmpl
rcll
sbb
sub
cmpsl
add
fidivrl
test
sbb
das
adc
movsl
jle
clc
aam
int3
out
and
jno
pusha
xlat
inc
fldcw
sbb
mov
xchg
testl
sbb
repz
das
shlb
xchg
add
fsubp
adc
dec
aam
adc
int
xor
jae
lahf
or
inc
jge
add
nop
jle
push
adc
repz
inc
call
cmc
ja
icebp
out
mov
in
xchg
mov
sub
jle
fildll
xor
mov
pop
add
sbb
push
or
scas
je
in
mov
mov
pop
iret
dec
es
sub
xchg
aam
out
mov
jp
loopne
gs
sbbl
test
jnp
pop
xlat
mov
rcll
lods
faddl
mov
imul
daa
clc
js
sbb
ja
gs
mov
cmc
aad
pushf
add
and
dec
push
and
adc
iret
test
fcmovne
cmp
lods
xchg
xor
sbb
std
aad
cmp
jb
xchg
or
ss
push
adc
mov
xor
mov
jp
xor
xchg
mov
shrl
cmpsl
mov
clc
stos
cmc
xchg
int3
push
mov
adc
fcmove
mov
lea
adc
movsb
pop
les
and
mov
in
inc
or
xchg
cltd
mov
inc
cmpsl
jb
mov
in
dec
cmc
or
shrb
mov
div
test
stos
dec
jns
jae
mov
jmp
test
add
out
clc
stos
test
push
adc
mov
inc
test
repnz
jge
push
mov
or
je
mov
mov
in
cmp
mov
pop
leave
add
pushf
negb
cmp
inc
mov
lret
lahf
in
and
xchg
jg
cmpsl
je
in
sbb
cmc
arpl
decl
sub
fsubl
lea
jbe
pop
cltd
das
mov
sti
icebp
mov
ljmp
push
sbb
in
cmp
test
sti
xchg
movsl
fdivl
imul
lock
or
scas
jb
imul
pushf
je
dec
divb
fistpl
or
sbb
rcrl
outsb
cmpsl
xchg
and
or
pusha
fsubs
sbb
sbb
mov
adc
mov
mov
test
jno
mov
aaa
out
jge
mov
jp
fstp
icebp
fmull
sbb
sbb
jbe
loopne
cmpsl
andl
adc
push
or
cmpl
jg
mov
add
jns
stos
popa
stos
mov
sahf
jge
jp
mov
daa
cmpsl
sbb
lea
dec
rolb
stos
mov
ljmp
adc
int3
js
lcall
mov
jo
js
dec
pop
lods
sub
aam
les
mov
negl
pop
in
cwtl
jo
gs
gs
mov
sub
nop
int3
lods
add
rcrl
mov
into
fnsave
sbb
insl
xchg
std
jb
mov
outsl
aas
sub
in
data16
scas
dec
lret
cmp
xchg
jmp
xchg
ljmp
movsb
and
mov
aad
insb
xchg
cmp
lcall
push
cmp
insb
sbb
fdivrs
or
out
ds
jl
xor
repnz
mov
movsb
fwait
in
nop
add
xchg
fstps
or
shrb
pop
imul
mov
int3
add
nop
addr16
inc
and
fdivrs
lret
push
iret
jns
pop
push
cs
outsl
mov
mov
mov
inc
loop
in
daa
aad
mov
stos
pop
pop
and
pop
sub
xor
xchg
stos
test
leave
aaa
jbe
sbb
mov
mov
pop
mov
cmp
data16
xor
loopne
std
jle
adc
sbb
pop
lods
jno
subb
stos
cmpsl
cli
cmpsb
scas
mov
ret
roll
cmp
cmp
sbb
icebp
fcompl
pop
push
cmpsb
cmc
arpl
cmp
shlb
adc
aad
or
sbb
push
sbb
pop
lahf
mov
and
mov
or
xchg
xor
notl
dec
lea
lea
xlat
lcall
push
rorl
ja
ljmp
sub
mov
jg
pop
sub
out
xor
add
mov
std
cmc
cli
xchg
jmp
mov
sub
mov
sbb
push
das
fdivs
jmp
lea
sbb
cmpsl
jne
clc
cmp
and
aaa
jmp
sub
jecxz
xor
loope
lea
push
or
add
int3
daa
out
add
adc
push
jb
fsubl
loop
sbb
vcvttps2dq
test
cmp
push
iret
pop
rcrb
call
inc
cmp
int
cli
lea
sbb
add
cld
xchg
out
push
sar
int
pop
add
out
jb
adc
mov
xchg
fcoml
std
inc
sub
bound
and
ficoml
jbe
mov
clc
dec
stos
push
fstpt
xchg
push
in
fucomp
cmpsl
pop
mov
fsubrl
pop
inc
mov
mov
fmuls
and
stos
sbb
cmp
push
pop
cmp
mov
mov
mov
shll
or
loope
xorb
jl
ret
roll
jmp
jae
sbb
rcrl
mov
or
lods
ret
add
outsb
and
dec
push
mov
loop
mov
int3
bound
inc
lret
xlat
leave
mov
iret
cmpsl
outsl
dec
into
fidivs
add
ds
mov
call
in
sbb
push
mov
js
cwtl
mov
lds
ljmp
mov
negl
lock
add
sbb
cmp
cli
cmp
jle
mov
pusha
ret
mov
xor
or
push
clc
cld
fnstsw
mov
stos
jno
out
ds
test
repnz
jecxz
inc
scas
sbb
cmp
fldcw
popl
xchg
lock
dec
sbb
stc
push
pop
aad
push
push
cmp
xchg
or
xchg
stos
scas
sbb
add
sub
notb
xchg
sbb
pop
xchg
sbb
ret
cmp
daa
xlat
xor
pop
xchg
ss
push
int
mov
jbe
hlt
dec
xchg
sarl
arpl
iret
ret
xchg
loope
popf
push
int
push
xchg
dec
xchg
subb
xchg
leave
xchg
sarb
push
frstor
xor
stos
and
dec
call
fdivrs
movl
outsl
xlat
out
add
xchg
arpl
sbb
fiaddl
adc
push
mov
jbe
lea
adc
xchg
insb
xor
mov
inc
jo
sbb
cmp
dec
cmc
adc
shlb
inc
mov
jmp
lea
pop
and
pusha
dec
test
std
add
push
jno
push
sahf
add
test
push
mov
mov
jno
push
hlt
push
mov
ljmp
std
aaa
dec
aaa
adc
add
int
shrl
pop
lods
or
ss
pusha
and
lret
jae
orl
and
pop
sbb
fwait
pop
mov
in
repz
rolb
call
sbb
enter
jne
dec
shlb
loop
xor
mov
lret
mov
stos
cmp
cld
inc
pop
dec
xchg
imul
rolb
cmpsl
sub
xchg
out
cld
fnsetpm(287
ret
sbb
jmp
sub
fidivs
pop
ja
sub
jp
lods
dec
pop
test
mov
sub
out
aas
jo
rcl
out
lock
mov
icebp
adc
adc
shlb
and
mov
jmp
movl
xchg
scas
je
out
pop
inc
inc
add
cmp
es
dec
push
adc
ljmp
test
dec
popa
or
shl
inc
xchg
cmp
cmp
test
mov
sub
fcomip
push
mov
inc
iret
xchg
pop
jb
nop
bound
mov
push
imul
shlb
pushf
mov
mov
add
dec
pusha
cmp
add
pop
add
jmp
std
lcall
sbb
xchg
inc
cmp
data16
rcr
pop
mov
pop
push
pop
adc
mov
cmp
xor
jecxz
cwtl
jg
cwtl
sub
push
jmp
pop
jb
ffreep
add
dec
popf
add
cmp
pop
inc
rol
fsubr
mov
dec
les
mov
xchg
push
xchg
std
loope
mov
cmc
xor
dec
int3
adc
sub
pop
into
lahf
insl
mov
je
adc
dec
notb
fidivl
std
ss
xchg
push
mov
xor
js
cmp
pop
adc
stos
ds
into
xchg
nop
lret
adc
adc
jle
dec
sbb
lcall
cmpsb
mov
xchg
aaa
cmp
cmp
or
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fchs
mov
jge
or
jp
xor
dec
push
mov
push
and
push
nop
cld
sub
hlt
and
into
repnz
jno
mov
sub
les
ds
mov
gs
rcrb
out
dec
mov
adc
xlat
mov
sbb
pushf
push
aad
xor
mov
lds
cli
das
gs
cmp
mov
mov
jg
pop
cmpsb
push
adc
cwtl
clc
fadds
das
loop
ds
mov
inc
mov
mov
repnz
rcll
cld
push
or
pushf
movsl
mov
mov
jp
leave
scas
add
sbbb
pop
sbb
pop
mov
mov
lret
in
xchg
dec
pop
push
cwtl
pop
sbb
jecxz
lods
mov
mov
stos
nop
lea
out
xlat
ret
mov
mov
loop
enter
sbb
imul
lods
psubsb
pushf
int
add
out
mov
pop
sbb
pop
scas
xor
jmp
ljmp
jge
std
imull
loope
test
adc
pop
rcl
push
outsb
lock
call
negl
mov
and
xchg
mov
push
and
push
jl
fiadds
orl
les
movl
sub
fsubrs
das
outsl
add
jg
inc
mov
and
mov
shr
sarb
loope
cmpsb
xchg
dec
lcall
lods
cmp
adc
inc
bound
inc
jle
popf
popa
shlb
notb
cmp
ss
enter
arpl
addr16
and
cmp
popf
xchg
movsb
mov
imull
gs
mov
cmpsb
rcll
cmp
cwtl
ja
add
push
int3
cmpsl
lahf
inc
push
test
ds
jae
cmpb
ds
cltd
ds
pop
dec
outsl
bswap
lcall
scas
mov
enter
pop
inc
jle
mov
lods
fstl
pop
mov
call
pusha
jb
es
cmp
fsubr
jg
stc
add
inc
out
or
jg,pn
loopne
inc
jecxz
stc
mov
cmp
xor
xorb
lods
out
jle
aaa
test
push
ret
mov
out
xlat
mov
sarb
push
call
sbb
int
and
out
repnz
lods
into
hlt
push
stos
test
xchg
or
imul
shrb
adc
cmc
and
xchg
mov
inc
jmp
lahf
movsl
repz
out
pop
clc
mov
fldenv
ss
fcoml
stos
inc
mov
repz
pop
jge
scas
int
mov
out
push
jae
jmp
jbe
popa
and
inc
jmp
out
int
jge
shl
xor
cwtl
shrl
lds
mov
mov
ds
xchg
cmp
imul
xchg
bound
cs
pop
sbb
das
xorl
inc
fnstenv
mov
lret
sub
sub
aam
fnstenv
test
cmp
xchg
ds
dec
lods
push
sbb
fwait
xchg
aam
adc
addr16
int
incl
insl
sbb
xchg
sbb
push
loop
cli
pop
sub
mov
cmc
test
imul
cmp
mov
adc
jg
push
in
pop
sbb
mov
jl
jecxz
lcall
pop
loopne
lret
setle
jno
mov
je
stc
pusha
outsb
pop
pop
xchg
jmp
inc
sbb
push
and
bound
inc
mov
sub
inc
pop
dec
pop
cmp
out
in
xchg
loop
inc
xchg
roll
push
mov
test
repnz
cmp
shl
sti
cmpsb
leave
mov
push
dec
fnstcw
scas
shll
rorl
push
cltd
inc
jmp
adc
fprem
inc
sti
bnd
xchg
repnz
std
dec
fmull
jge
mov
repnz
pop
inc
sahf
daa
ss
xchg
and
fstps
pop
test
movsl
ss
xchg
pop
notl
call
in
pop
daa
push
mov
inc
xor
sbb
out
mov
and
mov
pop
loop
or
scas
xchg
xor
loop
ss
lcall
pcmpeqd
cli
lea
xor
sbb
cmp
and
mov
popa
movsl
and
idivl
adc
loope
inc
mov
sbb
xor
test
jb
clc
scas
mov
lods
mov
aam
sbb
push
sbb
xchg
ret
adc
mov
movsl
cld
jg
lahf
mov
decb
add
adc
call
in
cld
movsb
iret
loopne
pop
fistpll
ds
mov
fisttps
lock
jge
push
es
jns
pop
pop
xor
and
cmp
mov
pop
iret
mov
sbb
mov
jne
out
push
fs
arpl
sbb
pusha
stos
iret
add
mov
insb
or
out
in
daa
xchg
push
mov
xchg
mov
jecxz
xchg
fs
jge
adc
cmc
pusha
in
arpl
aam
add
dec
subps
mov
jae
jmp
das
ljmp
inc
sbb
fstl
sti
add
loop
xchg
ret
mov
pop
mov
cli
xchg
fs
cwtl
test
dec
pop
fnstsw
and
dec
adc
jmp
pusha
xchg
sbb
movsb
pusha
je
push
scas
jle
jbe
mov
push
inc
cmp
shll
loope
ljmp
lods
adc
stc
fsts
mov
push
inc
fstpl
ret
jp
sub
cmpl
in
daa
out
sahf
sbb
add
out
xor
jg
sahf
arpl
cmp
scas
shl
pop
daa
sub
inc
and
sti
fists
mov
mov
xor
xorb
sub
rolb
add
or
mov
out
iret
sub
mov
in
inc
jno
test
push
adcb
mov
sub
bnd
in
shrl
mov
cmp
cwtl
fstl
and
scas
cmpsb
adc
sahf
sub
scas
insl
xor
aad
xchg
aam
lods
push
mov
pusha
cmpsl
mov
divl
push
and
in
cmpb
jo
add
sbb
sub
cli
iret
mov
jmp
mov
roll
pop
sbb
add
stos
aam
inc
in
stos
fmul
sar
push
push
inc
jae
adc
push
mov
and
dec
sub
jg
cmp
fwait
repz
jmp
aad
sub
idivl
hlt
stos
out
mov
ljmp
outsl
mov
and
sahf
pushf
scas
cli
mov
adcl
and
popa
and
mov
cmp
dec
rcr
dec
mov
arpl
mov
lock
pop
adc
fnstcw
in
pusha
roll
pop
into
push
lods
jle
jecxz
icebp
mov
das
mov
outsb
rorb
mov
rclb
pop
xchg
pop
ljmp
in
pop
jg
jmp
and
jb
fmull
cwtl
pop
push
xchg
dec
jns
sbbb
arpl
mov
loopne
inc
mov
xchg
or
xor
adc
aam
jle
push
sti
test
hlt
movl
push
das
ss
mov
add
std
cli
jmp
inc
cmpsb
adc
sub
dec
jecxz
add
push
sub
xor
frstor
cmp
scas
fcmovu
sub
in
mov
insb
mov
scas
push
jp
fadd
cmp
les
pop
add
cmc
add
lods
jbe
jne
push
push
add
pushf
dec
mov
mov
sub
and
and
mov
cmp
pop
cmp
lock
insb
pop
rclb
jg
xchg
cmp
mov
into
mov
sarl
test
inc
roll
sbbl
movsb
mov
jg
es
dec
cmc
in
or
dec
out
adc
fistps
movsl
xlat
push
mov
js
and
or
je
inc
ss
nop
nop
jg
pop
mov
cmp
fsubrs
mov
push
push
push
mov
ret
jp
push
jle
icebp
xchg
sbb
roll
int3
xchg
pusha
cs
ljmp
dec
idivl
mov
loopne
mov
ret
sub
ds
fwait
xor
push
xchg
out
jmp
in
jbe
loope
pusha
icebp
in
andl
push
scas
or
pop
push
notb
out
xor
mov
dec
mov
or
gs
or
popf
pop
cmpsl
xchg
js
mov
pusha
jbe
movsb
xchg
jecxz
divb
jb
lea
and
in
int
xchg
aad
outsl
adc
xchg
xor
dec
xchg
sub
dec
inc
scas
mov
pop
jnp
xchg
sub
cmpsl
push
push
cmp
xchg
ret
test
xor
pop
notl
out
pushf
loop
fistps
orl
mov
ds
cwtl
into
mov
mov
pop
stos
sbb
push
add
jnp
jmp
push
inc
and
dec
shrb
cmp
mov
pop
or
pop
sbb
push
xchg
fwait
jmp
mov
ss
mov
fidivs
dec
xor
out
xor
mov
scas
fisttpl
pop
out
sbb
cli
pop
mov
cmp
test
lret
dec
mov
aad
das
lret
add
je
dec
cmc
xor
or
fsubrs
sub
add
popf
in
enter
ja
xchg
jle
jge
aad
js
sub
or
adc
stos
cmc
jne
imul
push
adc
mov
xchg
cld
bound
mov
out
inc
adc
flds
fidivl
mov
add
cwtl
leave
nop
mov
roll
insb
scas
mov
mov
push
lods
mov
mov
movsl
mov
jb
ljmp
in
xchg
cmp
xor
shl
and
test
mov
cmp
hlt
pusha
popf
int
loope
mov
sbb
shll
filds
ds
or
in
out
dec
jb
mov
shlb
jnp
add
cmp
inc
xchg
mov
dec
ret
mov
mov
sbb
dec
out
xor
in
pop
icebp
loope
test
jg
loopne
imul
insb
jge
and
sahf
imul
sbb
fwait
pop
imul
notl
ljmp
mov
add
push
in
clc
xor
sub
aam
sbb
xlat
push
in
inc
add
or
cmp
dec
jp
ficomps
rcrb
push
dec
shr
inc
push
cmp
sub
cmpsb
call
lahf
lds
mov
sub
leave
sahf
xchg
jp
fadd
test
cwtl
repz
pop
inc
push
mov
push
jno
xchg
fisttpl
pusha
js
fildll
in
adc
xor
test
pop
movsl
cli
cmp
dec
jnp
notb
dec
gs
pop
sub
je
xchg
push
ret
jg
shll
cs
js
test
jns
and
mov
xlat
mov
add
sarb
icebp
clc
sbb
push
xor
sbb
jmp
popf
mov
leave
mov
scas
repnz
test
cmpsl
aad
popf
adc
inc
sbb
jb
push
test
add
rcr
and
fdivrl
sbb
cmp
jge
enter
pusha
sub
mov
jmp
or
in
cmpsb
pop
xlat
pop
ds
inc
mov
sbb
jg
sbb
adc
xchg
jae
adc
pop
lahf
enter
sub
push
cmp
mov
sbb
xchg
es
clc
fidivs
push
xor
andb
outsl
dec
mov
js
push
mov
xor
add
mov
pop
sub
or
stos
mov
sarl
scas
mov
cwtl
sarb
dec
leave
xchg
mov
lods
push
xor
mov
stc
sbb
int
repz
dec
push
sahf
sub
mov
pop
lods
add
mov
mov
and
or
adc
imul
popf
cmp
dec
add
dec
mov
xchg
fisubrl
enter
icebp
icebp
mov
outsl
jmp
cmp
mov
dec
rorl
cltd
rcrl
fimuls
and
mov
and
ljmp
sbb
pushf
sbb
movsl
sub
dec
sub
movsl
and
dec
and
fisubrs
cwtl
jns,pn
addr16
push
pop
push
mov
out
pop
cmpsb
gs
rcll
clc
out
add
mov
push
sbb
pushf
mov
cmp
pop
adc
data16
inc
fisttpll
int
mov
arpl
push
sbb
dec
aam
fnstcw
jecxz
xlat
mov
out
incb
stc
adc
sbb
sub
cmp
clc
rdpmc
test
stc
pusha
leave
notb
divl
mov
lret
popa
mov
xchg
dec
and
sbb
pop
rorl
in
divl
mov
xor
jmp
int
xchg
xor
mov
sub
xchg
jle
jl
mov
gs
lahf
or
rcrl
adc
enter
sbb
gs
pushf
push
sub
push
dec
in
daa
sahf
fsubrp
mov
mov
pop
sub
jl
lcallw
mov
cmpl
push
add
mov
fdivrl
mov
mov
cmp
int3
push
jge
mov
sti
mov
insl
pop
mov
jns
fisubl
mov
not
mov
rol
adc
fiadds
rcll
add
scas
test
pop
jns
push
or
cltd
repz
mov
loopne
inc
jmp
mov
fstps
cltd
push
jp
je
ret
rcpss
dec
mov
mov
dec
icebp
mov
mov
or
call
push
inc
inc
call
scas
add
stos
punpckhbw
push
repnz
pushf
fisubrl
rorl
pop
dec
jmp
adc
cld
push
nop
mov
xor
nop
or
inc
jl
movsl
sub
fcomi
xchg
inc
inc
pop
xchg
ljmp
stos
mov
jle
ja
js
sar
pop
leave
adc
jl
lds
pop
jl
nop
cs
pushf
xchg
jmp
xchg
scas
insb
push
clc
das
lds
repnz
roll
xor
or
adc
sbb
in
mov
inc
pop
mov
out
mov
mov
push
sti
je
sub
clc
cltd
adc
xchg
xor
sbb
jmp
sub
xlat
leave
bound
xchg
loope
add
jle
fs
jmp
imul
lcall
cmp
rol
dec
add
xor
std
add
ljmp
shrl
test
mov
mov
lds
xchg
mov
cmp
subb
mov
adc
rcll
jbe
and
lock
out
daa
fcomps
pop
inc
rcrl
cmpb
and
dec
add
and
cmpsl
and
ljmp
add
mulb
xorl
jno
cli
orl
xor
lcall
mov
push
xor
jbe
mov
push
mov
adc
add
rcrb
xchg
push
sub
sbb
jl
fiaddl
push
jns
testl
ret
je
jb
js
inc
das
mov
aad
icebp
stos
lock
jmp
loop
and
aam
divl
lods
and
xchg
testl
stos
mov
iret
mov
adc
stos
sub
and
lock
inc
outsb
and
shrb
out
test
jnp
clc
daa
pop
jg
sbb
xchg
pop
jg
les
dec
pop
lcall
stc
cmpsb
xorl
jbe
bound
xor
pop
pop
push
and
push
add
mov
stos
lea
cmp
aas
adc
sub
xchg
mov
inc
pop
sarb
in
sub
xchg
pop
aaa
pop
enter
mov
enter
jg
hlt
arpl
mov
xlat
xchg
and
sub
add
mov
push
mov
andb
dec
hlt
sbb
mov
inc
adc
xor
mov
lds
lea
jg
rcll
dec
sub
daa
cmpsb
and
ja
fistl
cmp
push
jecxz
cmpsb
adcb
repz
sti
mov
popa
sub
dec
ret
add
dec
dec
leave
insb
mov
xchg
clc
leave
push
sbb
xchg
jne
sbb
sub
inc
leave
pop
adc
mov
push
sub
sbb
das
xor
pmulhuw
add
movsl
jbe
outsl
ja
cmp
addr16
out
add
ficoms
dec
ja
mov
adc
add
test
bound
push
dec
sbb
jg
jl
imul
cmc
and
mov
or
enter
and
xor
mov
pop
inc
lods
lahf
sbb
fsub
xor
lret
lock
xchg
sub
test
movsb
sbb
xor
inc
jl
mov
push
ficoml
push
cld
sub
loop
sbb
stos
dec
mov
jns
movb
mov
lcall
enter
xor
or
popa
mov
loopne
or
jl
fisubs
fldcw
out
into
je
mov
aaa
mov
lods
inc
lret
sti
movsl
adc
jmp
pop
jmp
inc
iret
mov
lahf
movsl
daa
pusha
jo
mov
mov
in
xlat
and
or
and
xor
gs
jne
aaa
repz
push
jp
mov
div
cwtl
ds
and
fcomi
pop
adc
push
mov
lock
pop
lods
or
mov
push
mov
mov
jle
movl
add
enter
loopne
test
mov
ljmp
sti
mov
and
mov
mov
sti
into
faddl
int3
test
sub
or
inc
inc
lods
insl
sbb
dec
test
lret
mov
xchg
ljmp
daa
loope
loop
xor
sbb
fisubrs
mov
movsb
pop
data16
insb
scas
gs
push
daa
dec
popa
sub
clc
xchg
xor
popf
mov
ja
push
and
imul
adc
subl
mov
jo
push
pop
dec
sub
add
sahf
push
pop
loopne
mov
pop
cmc
jge
test
rcl
clc
or
lea
jecxz
sbb
or
push
jb
mov
mov
sbb
out
inc
stos
cmpsl
or
add
push
enter
mov
adc
cs
jb
lret
repz
in
mov
push
aaa
test
mov
enter
out
mov
call
xor
inc
cmp
es
stc
loop
xchg
data16
shlb
lcall
push
inc
insl
fwait
int3
push
cmp
mov
in
dec
int
std
das
int3
cmp
add
ja
dec
push
mov
mov
popf
out
or
mov
mov
jns
inc
js
add
mov
mov
test
sub
adc
xchg
or
adc
je
pop
imul
aad
mov
rclb
js
mov
shl
inc
outsb
push
dec
xor
dec
lcall
jl
add
call
insb
out
int
lcall
loope
cld
popf
dec
fcmove
adc
and
dec
imul
push
cmp
lret
outsl
xlat
loop
add
hlt
or
jb
xchg
or
jmp
test
into
and
push
add
aaa
test
xchg
push
outsb
mov
fimuls
mov
test
lea
cmc
shr
dec
mov
stos
xchg
je
pop
sub
xchg
inc
sub
mov
das
sub
test
in
subb
pop
test
cwtl
or
mov
fcoms
test
sub
dec
faddl
push
add
in
push
fsubs
inc
int3
les
mov
inc
pop
fwait
into
ds
data16
mov
jo
rclb
std
movsb
or
lret
sub
pop
pop
aam
mov
xor
aad
or
mov
gs
xchg
adc
xor
out
pop
icebp
add
push
loop
stos
inc
ret
push
filds
inc
shll
jo
mov
fs
test
inc
mov
push
je
jp
fisttpll
mov
repz
mov
cwtl
push
btr
pop
mov
fisubl
repnz
fnstsw
arpl
mov
mov
xor
lds
sarl
test
iret
add
jle
fiaddl
mov
or
sub
mov
jl
cmc
data16
les
gs
idivb
es
int3
lock
mov
lds
cmp
sbb
movnti
shr
mov
xchg
xchg
pop
int3
icebp
or
leave
mov
stos
ss
neg
sub
mov
inc
sahf
cmp
mov
es
ret
and
or
mov
cmp
mov
test
xchg
out
das
push
les
pop
popa
std
xor
imul
shll
cmpsl
inc
sahf
fsubs
mov
pop
fsub
add
les
out
outsl
bound
fwait
push
ds
mov
lods
sahf
and
bound
hlt
addb
cs
mov
lds
popa
insb
psllw
sub
insb
cmc
int
or
repz
iret
test
arpl
sarb
call
icebp
je
pop
mov
sub
mov
mov
mov
sti
test
or
adc
lds
in
add
and
mov
mov
loopne,pn
or
add
lret
push
adc
or
hlt
std
adc
adc
mov
dec
leave
mov
jo
xor
xchg
mul
add
xlat
lahf
std
fmuls
push
adc
gs
shl
les
adc
jmp
or
mov
xchg
dec
adc
insl
jno
xchg
push
ficoms
xchg
push
xor
vxorps
mov
scas
fimuls
rcrl
sbb
or
pop
iret
sbb
nop
lahf
imul
loopne
mov
inc
adcl
shll
mov
es
movsb
mov
adc
adc
pop
mov
subl
ret
or
xor
dec
je
sbb
test
lret
aam
lods
jb
cs
jbe
fwait
js
in
inc
cmp
sarb
mov
adc
dec
mov
pushf
into
or
push
add
xchg
xchg
fmull
pop
shlb
dec
fs
mov
test
mov
pop
xchg
test
push
div
stos
jns
lcall
jl
inc
inc
inc
mov
sbbl
imulb
cmpsl
jnp
sbb
sub
data16
dec
inc
out
in
xchg
cmc
xor
xchg
jnp
sbb
push
std
imul
out
lods
fldl
mov
sub
pusha
in
cmp
jb
cmp
cmpl
push
dec
filds
pushf
inc
xor
out
dec
sub
arpl
jecxz
push
lahf
imul
cld
stos
imul
mov
leave
inc
pop
data16
jl
dec
leave
frstor
fbstp
inc
mov
stos
jg
adc
cmp
and
imulb
lahf
subb
dec
dec
xchg
repnz
loop
xor
or
adc
fdivl
inc
push
push
in
sti
jp
mov
repz
lret
sub
std
fnstcw
push
dec
fimuls
lock
ret
lcall
xchg
fs
or
mov
jg
pop
sahf
mov
mov
add
imul
or
push
sub
imul
sbb
add
in
test
aad
mov
push
mov
add
sub
adc
movsl
mov
mov
add
icebp
mov
and
daa
mov
add
dec
pop
sub
mov
xchg
xlat
mov
xchg
in
xlat
xchg
lret
divl
out
and
mov
and
sbb
sbb
outsb
in
mov
lods
mov
or
add
repz
mov
jbe
xor
xor
add
test
xchg
lret
cmp
movsb
push
jge
ret
das
sti
cmp
and
movsl
push
sbb
sub
call
insl
mov
push
add
inc
push
add
mov
xor
pushf
push
cmp
lahf
mov
mov
ljmp
mov
lret
jbe
xor
pop
aam
mov
cmp
and
jecxz
js
js
sahf
lcall
lret
mov
jnp
pusha
cmpsl
pop
sbb
daa
dec
dec
sbb
mov
ret
addr16
and
push
mov
stc
mov
pop
addr16
cvtps2pi
jl
jne
bound
mov
mov
outsb
clc
push
xchg
adc
push
inc
ljmp
popf
nop
xchg
rolb
cmp
adc
stc
stos
fstpl
dec
fst
xchg
jl
lret
cmp
push
imul
lock
sub
jp
sub
pushf
int
cmp
mov
and
sbb
dec
mov
cs
fidivrl
lret
mov
sub
xchg
arpl
lret
shl
in
lsl
sbbb
shl
lock
mov
sbb
xchg
add
iret
xchg
adc
pop
push
or
lcall
hlt
jnp
mov
lahf
mov
jmp
insb
mov
int
jns
mov
push
cmp
inc
lods
std
rol
adc
shl
cmpsb
sbb
pop
inc
push
xor
js
sub
inc
es
ja
mov
mov
mov
fmuls
and
mov
jae
sbb
mov
incb
out
mov
ss
sbb
jmp
fsubl
cli
inc
add
and
pop
mov
xor
ret
andb
stos
fdivs
and
cmpsb
popf
fadd
adc
pop
jbe
xchg
add
js
shrl
adc
dec
and
jnp
call
pop
pop
and
orl
out
inc
adc
or
push
cmp
gs
loopne
fs
cli
cld
inc
adc
out
fdiv
shll
xor
push
mov
inc
je
out
or
lcall
js
sarb
or
aam
out
outsb
sub
nop
push
subl
outsl
ss
or
shlb
dec
test
cmp
mov
outsl
mov
dec
loope
pop
repnz
fiadds
cmpsl
or
inc
add
dec
sub
repnz
fdivs
jmp
int3
orps
lock
cltd
cmpsl
imul
das
add
adc
aas
pop
mov
int3
xor
loop
xor
cmp
enter
mov
cmpsl
lea
add
test
mov
jmp
fwait
pop
outsl
rclb
inc
mov
arpl
adc
nop
imul
dec
push
pop
inc
mov
clc
pop
pop
cmp
and
ja
inc
test
sub
gs
rorl
mov
andl
mov
into
mov
outsb
lret
sub
outsb
inc
jecxz
adc
push
mov
and
mov
push
cltd
xchg
cmpsb
fbld
cld
lret
scas
outsl
jmp
adc
xchg
add
out
and
pop
lods
cmp
xor
push
jg
sub
out
xchg
sub
mov
test
daa
imul
push
popf
fwait
push
cli
push
cmp
fisubl
xor
xlat
shrb
pop
xor
pop
rorl
aam
aad
popf
xor
mov
jmp
dec
jns,pn
adc
stos
inc
pavgb
or
std
pusha
dec
shlb
and
fidivrl
stos
cmpsl
xor
leave
filds
xor
dec
leave
xchg
or
mov
lock
test
stc
bound
dec
ret
inc
lcall
lock
into
push
lds
xchg
mov
sub
movsb
jmp
ret
xor
sbb
repnz
mov
dec
push
xchg
loopne
in
and
jo
push
lret
loopne
cs
stos
mov
shll
hlt
jbe
fs
sbb
repz
push
hlt
inc
imul
xor
rorb
sub
fnsave
leave
mov
negl
push
inc
push
jae
push
es
stc
repz
mov
mov
dec
cmp
jg
fcmovnbe
aad
mov
xchg
and
dec
mov
xor
fs
into
xchg
mov
gs
cmpsl
popa
jg
out
cmc
repnz
imul
xchg
xchg
ret
dec
xchg
mov
xchg
fs
fldl
call
stc
ljmp
add
add
jo
jge
sub
cmp
lcall
jno
xor
pusha
fsubrl
addl
and
in
scas
and
lret
jge
inc
clc
mov
sub
mov
cld
lret
sbb
test
rorb
adc
xchg
cwtl
outsb
pushf
push
cmp
mov
dec
xchg
xchg
fstpl
mov
and
xlat
mov
lahf
pop
daa
lea
or
inc
push
fsubl
cli
mov
icebp
xor
ret
jmp
xor
mov
fcmovne
shl
or
clc
bound
fsubl
mov
sub
inc
cmp
imul
pop
lds
jge
pop
cmpsl
add
lcall
lock
scas
mov
xor
and
sbb
ljmp
jbe
inc
lret
jae,pn
jno
aaa
data16
sub
xchg
mov
xor
pushf
push
icebp
xor
popf
adc
int
mov
sub
int3
enter
imul
pop
iret
sub
mov
xorb
mov
test
mov
jmp
lret
movsl
and
lahf
aaa
adc
dec
imul
cli
or
aam
mov
pop
xor
push
inc
adc
lret
loope
repnz
mov
pop
call
jmp
pusha
stos
mov
push
inc
add
cltd
lahf
sbb
dec
cmp
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
mov
sbb
jp
pop
jp
xchg
and
not
jno
xchg
mov
shrl
push
xchg
int
test
jne
dec
adc
jae
add
add
push
lds
jb
imul
cmc
mov
mov
cmc
and
orl
bound
in
mov
push
mov
insl
adc
pop
das
push
test
das
sub
decb
int3
mov
jno
pusha
inc
adc
push
jno
xchg
push
push
rcrb
scas
jp
xor
mov
fnstenv
mov
ja
jmp
mov
pop
cmp
icebp
je
sbb
iret
daa
cli
cmpsb
pop
scas
popa
sub
sbb
repnz
cmp
jg
or
test
loop
cld
adc
dec
loopne
mov
mov
or
inc
stos
push
dec
incl
cmp
jecxz
dec
jmp
or
adc
fistl
or
out
cmp
jge
nop
push
imul
adc
aas
insl
push
stos
repz
adc
or
inc
das
jecxz
dec
lods
pop
mov
lods
inc
sbb
mov
mov
in
add
insb
inc
add
fimull
pop
js
aas
cmp
popa
fidivl
rcrb
andl
lret
fstpt
push
sub
jne
pop
and
sahf
lods
lods
test
dec
add
stc
or
jae
inc
rclb
xchg
jns
mov
push
add
push
lods
cmc
cmc
jae
mov
adc
sub
movsb
orl
loopne
icebp
or
sbb
adc
outsb
ficompl
clc
stos
push
sbb
out
adc
sub
sti
lea
add
adc
sub
lds
aaa
sbb
enter
repnz
xchg
rorl
movsb
aad
outsb
mov
addb
pop
or
push
or
cmc
dec
rcl
fistl
xor
pop
xchg
mov
and
dec
sbb
roll
xchg
loope
sbb
cwtl
into
push
or
jno
xchg
scas
xor
sbb
cs
dec
xor
mov
test
cmp
adc
adc
adc
std
movsb
and
les
das
fisttpl
dec
jno
lret
xchg
jo
add
lahf
jo
cmp
sub
sub
dec
fs
inc
mov
mov
ja
push
mov
sub
cld
outsb
mov
lods
sub
int3
xchg
fs
mov
adc
lods
sti
rolb
out
adc
add
lods
sbb
jge
or
push
mov
sti
adc
or
adc
cmpsb
pop
fidivs
fldcw
xor
repz
pop
mov
mov
xor
push
inc
lods
push
push
xor
mov
lcall
mov
pushf
mov
call
adc
add
movsb
inc
lds
call
lea
addr16
jb
mov
and
mov
divb
push
xchg
cwtl
nop
ret
sbb
pop
dec
xlat
cs
adcl
gs
jmp
in
test
ja
mov
scas
mov
pop
mov
cmp
lahf
test
mov
pop
shl
int
add
outsl
lcall
lcall
aam
and
ss
stos
fwait
pop
sti
or
cld
ja
lret
xor
in
lret
aaa
sbb
fisubl
sahf
push
add
out
andl
stc
cmp
jne
dec
inc
movsl
orb
aaa
icebp
test
mov
mov
jo
test
and
lea
inc
dec
xor
sbb
testl
push
idivb
test
imul
inc
or
and
repz
and
pushf
test
loopne
leave
stos
inc
push
adc
clc
xchg
call
test
adc
mov
jbe
and
mov
and
lods
insl
or
cmp
in
pop
sub
and
imul
jno
sub
xchg
imul
in
shrl
and
lods
cltd
adc
mov
lret
add
jb
dec
xchg
insb
jno
mov
pushf
aam
es
adc
xchg
in
int3
pop
jge
xor
xor
jmp
cld
cmpsb
push
sahf
in
shlb
push
sbb
xor
sbb
sbb
ljmp
inc
push
popa
hlt
mov
xor
jo
cmp
sbb
pop
pop
sbb
pop
insl
lea
mov
outsb
push
cli
inc
rcrb
jmp
mov
int
sub
jns
mov
xor
out
imul
dec
mov
mov
dec
push
inc
mov
cmp
cld
lods
mov
mov
cmp
mov
pop
leave
cmc
mov
dec
sub
mov
aam
sarb
and
sbb
sbb
repnz
mov
or
xor
aas
rcrl
out
dec
es
hlt
pop
mov
fwait
iret
pushf
popf
data16
incb
or
cwtl
stos
ss
mov
jmp
ja
notl
pop
mov
movsb
push
in
mov
mov
sbb
ret
dec
ljmp
sahf
fs
mov
sbb
push
xchg
aam
mov
xor
lods
mov
in
fcoml
aaa
scas
mov
je
outsb
fnstenv
in
and
mov
fiaddl
shll
mov
push
adc
daa
shl
leave
or
lret
mov
xchg
lea
push
lret
test
js
mov
jecxz
lods
jp
pop
adc
aad
lods
or
into
aaa
add
lret
cltd
inc
xchg
dec
dec
pop
shrb
mov
test
mov
inc
jg
stos
cmc
js
in
sbb
jo
scas
fs
fldln2
aas
mov
sahf
cwtl
inc
scas
cmpsl
jle
mov
enter
jno
mov
dec
xor
cmpl
jl
mov
insl
out
sub
cwtl
push
mov
jno
sub
cmp
add
jbe
ljmp
cmp
roll
or
rorb
stos
mov
dec
lock
mov
and
cmp
sbbb
bound
jl
hlt
test
mov
popf
dec
and
sub
pop
cmp
sbb
ffreep
add
lock
xchg
ror
sub
sub
iret
int
lcall
mov
sub
call
jnp
push
inc
and
xchg
aaa
rcr
or
pushf
push
cs
pop
xor
bound
xchg
and
icebp
test
inc
movsl
dec
pop
outsl
adc
dec
lahf
clc
and
sahf
ficoml
fsubr
lds
push
aam
xlat
add
mov
and
lret
mov
mov
incl
mov
add
xor
push
pop
xor
fidivrs
sbb
test
jmp
cmp
inc
pusha
inc
les
jae
push
mov
xor
ja
nop
mov
fadd
inc
pop
dec
lcall
rcll
daa
adcl
adc
rolb
rep
sbb
and
push
xchg
add
mov
lahf
jo
sub
inc
loope
fwait
stos
mov
and
daa
sub
sbb
icebp
xor
clc
push
addr16
push
test
loope
jnp
int
push
xchg
xchg
orb
iret
aam
pushf
xchg
arpl
jecxz
nop
cmp
out
fs
pop
pop
pop
pop
dec
or
mov
or
fsubr
mov
push
stc
jl
mov
mov
jns
mov
jb
dec
add
dec
sbb
in
mov
sub
jge
in
push
adc
mov
ljmp
dec
push
addr16
jbe
movsb
aaa
inc
push
or
int3
xor
jecxz
or
mov
and
clc
push
daa
sbb
enter
iret
cmp
out
dec
addr16
lea
enter
jp
push
mov
sahf
sub
and
shlb
dec
std
push
popa
jle
fisubl
cwtl
cmpsl
push
jp
fbstp
cld
and
sub
fstpl
mov
stos
cltd
mov
enter
clc
cmp
xchg
and
mov
jg
cli
aaa
sub
ds
xchg
mov
fs
jg
adc
add
lret
jns
dec
xchg
push
mov
push
scas
push
out
bound
ficompl
jnp
dec
inc
in
lods
sbb
jo
fistpll
mov
movsb
enter
cmp
ret
mov
jmp
mov
jnp
sbb
push
xchg
iret
les
xchg
dec
mov
cmc
mov
shrb
mov
cltd
rcrl
mov
jns
sarb
adc
xor
lods
not
or
xchg
or
outsl
ljmp
dec
cmp
test
add
call
mov
jg
ljmp
jl
in
les
divl
jl
sub
jl
lds
dec
or
or
mov
inc
and
cltd
adc
jne
mov
add
sti
in
mov
sub
sub
xor
jecxz
fnstcw
sti
cs
push
cld
add
or
ljmp
push
mov
loope
add
jns
mov
mov
cmp
aaa
pop
sub
aad
jbe
push
rcl
lret
icebp
dec
mov
fs
int
inc
or
dec
pop
mov
fcoms
scas
cltd
dec
push
subl
ss
pop
loopne
inc
lds
mov
mov
shr
ljmp
cmp
dec
or
jl
loope
add
pop
lds
jmp
cmp
sbb
add
mov
jl
inc
out
sarb
push
dec
pop
jecxz
test
mov
test
fildll
in
insb
add
loope
dec
inc
or
inc
movb
adc
fists
jp
mov
iret
repz
leave
andb
add
inc
fwait
pop
jae
jmp
sti
rclb
inc
sub
dec
popf
rol
jp
xchg
test
iret
mov
dec
lods
push
test
lds
xchg
xor
mov
mov
add
push
push
jl
rolb
and
jecxz
mov
cmp
pop
inc
subb
bound
insl
or
xchg
in
dec
ficoms
gs
mov
lret
ja
out
je
mov
inc
mov
cmp
jnp
jl
fs
loopne
add
or
call
adc
int3
cmp
enter
sbb
outsb
push
movsl
xchg
ljmp
cli
fs
adc
fnstenv
and
out
ret
pop
iret
cmp
js
xchg
jae
xchg
lods
pushf
in
dec
jg
and
in
in
cmp
test
stc
mov
pop
jecxz
adc
dec
loop
or
cmc
fwait
mov
iret
sahf
mov
push
push
test
add
loopne
push
cmp
stos
bound
pop
into
add
inc
scas
in
mov
decl
inc
cmpsb
mov
mov
mov
jo
ret
jp
dec
lods
fdivrl
lds
inc
insl
xor
mov
rcr
ss
mov
cld
push
cwtl
dec
testl
pop
iret
xchg
xchg
cli
mov
jmp
mov
mov
movsl
ficoms
int
les
aaa
sub
mov
loop,pt
ljmp
and
mov
mov
dec
dec
jnp
jl
dec
dec
cmpsb
and
jge
bnd
cmpsl
add
mov
daa
xor
ret
aam
push
push
test
arpl
in
xchg
das
shlb
ds
lock
inc
or
jo
mov
sub
ljmp
arpl
fwait
pop
aad
orb
popa
mov
sti
and
inc
push
push
inc
and
or
into
push
aam
cmp
cltd
or
shrl
insb
cmp
jb
fcoml
mov
dec
fnsave
lods
mov
inc
aad
outsb
jmp
or
fildl
jp
or
and
inc
mov
and
arpl
pop
stos
cmpsb
movsl
dec
stos
das
pusha
push
xchg
inc
pop
inc
int3
in
aaa
or
sbb
xchg
std
jle
mov
inc
ljmp
pop
mov
xchg
outsl
sbbb
cltd
rcl
xor
mov
loope
in
jo
stos
jmp
adc
sub
movnti
jnp
jle
jns
gs
push
popf
and
ljmp
pop
bound
ror
daa
loope
les
mov
lods
xchg
xor
fucomp
or
jne
mov
mov
sub
pop
leave
clc
outsl
jne
je
enter
stc
ds
cmp
push
outsl
insb
add
xor
adc
and
sbb
pop
xor
iret
xchg
sahf
push
repnz
sub
pop
xor
pop
and
dec
add
jmp
test
mov
sub
mov
scas
out
pop
sbb
int
mov
popa
lret
scas
dec
jp
cwtl
sub
out
insb
mov
jne
movsb
lds
sbb
shrl
xchg
mov
pop
sub
jle
int3
or
jno
jns
xor
les
push
mov
xor
addb
push
mov
sbb
std
push
inc
ds
stos
sbb
es
test
xor
mov
aad
jle
ret
mov
leave
lods
pop
and
inc
out
adc
je
mov
mov
add
sub
inc
sub
jb
data16
mov
push
loope
dec
lods
addb
sub
fwait
mov
dec
pop
pusha
lods
push
hlt
mov
cmpsl
imul
mov
jne
loope
jo
cltd
ss
or
jno
cmp
ja
or
pop
xchg
lock
push
xor
dec
out
test
test
jg
pop
aam
insb
fistps
push
cmp
ss
gs
push
int3
xchg
mov
add
clc
stc
inc
pushf
in
cmp
mov
cmpb
mov
xchg
dec
adc
add
add
inc
cltd
xchg
ss
mov
clc
mulb
and
sbb
mov
sub
mov
cltd
das
jne
fs
pop
xchg
pushf
pop
push
sub
rclb
aad
arpl
xchg
inc
or
dec
or
xchg
sbb
out
xorb
jnp
sbb
mov
mov
sahf
sub
xchg
shl
xchg
dec
mov
movsl
adc
mov
mov
or
mov
pop
push
xabort
clc
adc
lahf
mov
icebp
das
sti
xorw
cld
daa
jl
fwait
xchg
fists
xchg
pop
js
outsl
scas
in
cmp
push
inc
lret
xor
or
inc
aam
test
cmpsl
inc
and
les
add
xchg
and
dec
sbb
pop
pop
popa
mov
stos
mov
xchg
dec
jne
xlat
or
int3
test
cmpxchg
cli
mov
js
sub
loopew
or
mov
or
pop
outsl
mov
xor
xchg
loop
inc
dec
mov
popf
inc
jp
xor
cmp
and
stos
pop
lahf
cmpsl
sbb
in
lock
rcr
out
pushf
arpl
pusha
cmc
popf
sbb
mov
xorl
and
fdivl
aaa
adc
lods
aad
bound
pop
inc
mov
cmc
mov
mov
lods
in
lcall
aaa
sti
rolb
call
arpl
roll
out
mov
hlt
inc
or
pushf
sub
inc
jmp
pop
mov
enter
and
int
and
or
daa
clc
sbb
mov
test
inc
sbb
adc
loop
in
popl
jnp
mov
lock
sarl
popa
sub
popa
je
sub
or
xchg
and
sub
xchg
mov
jle
lcall
or
mov
mov
nop
push
and
shrl
lahf
or
jl
cs
and
cmc
lock
or
mov
xchg
mov
jmp
jl
xchg
lret
inc
and
dec
cmpsb
pop
stc
cmp
ror
mov
iret
mov
nop
jb
out
cmp
shrb
int3
cs
lahf
mov
xor
clc
aad
cltd
push
sbb
inc
pop
dec
and
leave
hlt
add
and
or
mov
adc
andl
aaa
mov
jge
mov
inc
inc
popf
test
ret
pop
je
out
and
xchg
std
push
sub
mov
test
xchg
orb
mov
cmp
popf
mov
pop
cli
add
or
add
lret
mov
jnp
test
push
cmpsl
and
cld
cmpsb
jge
jg
mov
ja
pop
call
or
out
adc
mov
push
jno
and
mov
sahf
enter
ret
data16
and
int
xchg
stc
pop
mov
out
jns
jmp
jmp
clc
imul
xchg
lcall
and
out
jae
xchg
sbb
sbb
jecxz
imul
test
vmaxpd
add
test
pusha
xor
rcll
sub
adc
pop
lea
test
dec
mov
ja
rol
jnp
dec
fmull
jl
idivb
scas
xchg
jno
jl
mov
imul
or
xor
out
jecxz
dec
xchg
aad
mov
mov
mov
jmp
ljmp
xor
sbb
out
xchg
les
jle
add
mov
leave
mov
mov
sbb
int
cmp
cltd
xor
ret
or
jp
test
out
mov
mov
icebp
fists
inc
add
in
subb
out
sbb
cmp
in
cmpsb
push
popf
adc
xchg
js
add
mov
mov
jl
test
or
rcrl
inc
insl
inc
or
mov
jae
jns
lods
dec
leave
or
addr16
pop
lcall
pop
mov
cmp
js
push
sub
sbb
xlat
mov
test
jecxz
push
cmpb
cwtl
repnz
mov
xchg
inc
mov
sub
pop
movsl
ret
adc
pusha
jl
mov
adcb
jo
adc
xor
xor
mov
mov
lret
inc
cmp
test
ror
hlt
cmp
je
lret
mov
in
clc
aam
aam
mov
fbld
add
sbb
push
lcall
in
sub
cmp
push
es
leave
int
in
push
sbb
and
mov
jg
and
push
adc
je
dec
ret
bound
leave
mov
pop
test
in
mov
sahf
mov
jmp
repz
insl
addb
mov
mov
in
adc
or
daa
jge
cmp
fistpll
das
lcall
fsubr
insl
and
mov
push
or
das
inc
hlt
lcall
in
sarl
popf
pop
inc
dec
dec
xchg
mov
sbb
mov
dec
mov
ret
or
popa
scas
sub
pushf
aas
lock
iret
inc
dec
jp
add
mov
push
xchg
push
das
inc
iret
int3
xchg
cltd
dec
push
cmc
adc
mov
out
and
push
in
imul
jb
aad
pop
popf
clc
dec
lret
in
in
loop
xor
and
xchg
xchg
xchg
dec
popf
inc
int3
pop
or
out
inc
mov
mov
ret
int3
push
xlat
bswap
or
test
pop
mov
scas
push
xchg
fwait
xchg
add
scas
pop
ds
ja
mov
sub
sbb
push
pop
mov
cmc
xor
into
scas
je
jo
push
outsb
test
xchg
stos
mov
and
insb
add
jg
ss
ret
adc
jge
jl
fisttpl
mov
mov
dec
push
and
jo
aad
in
xchg
xchg
gs
cmp
and
jle
insl
shlb
rcrl
cmp
jno
xchg
outsb
fldcw
mov
sti
adc
data16
xchg
leave
fbstp
shrb
fwait
pop
add
pop
lret
or
js
adcb
push
push
rcr
xor
push
add
xchg
mov
mov
jne
leave
jmp
xchg
mov
inc
xor
mov
pop
scas
mov
cmpb
orl
out
mov
les
or
jae
pop
movsb
dec
movsl
shrb
dec
or
lret
in
sbb
in
popa
sbb
enter
add
fists
xor
cltd
sbb
sbb
sbb
fbstp
inc
in
push
and
push
or
andb
mov
dec
fisttpll
jne
mov
xor
loopne
loopne
pop
out
dec
call
jecxz
pop
adc
cmp
push
mov
pop
out
fcomps
mov
in
pop
enter
pushf
cmpsb
mov
xor
ffreep
pusha
mov
xchg
pop
stos
jne
scas
aad
in
mov
testl
imul
pop
arpl
adc
xchg
push
jecxz
xchg
ret
in
push
or
dec
sbb
ljmp
mov
jne
gs
stos
add
mov
mul
push
cmp
stos
inc
jnp
popf
icebp
or
mov
mov
dec
nop
sahf
sub
xcrypt-ctr
cmpsl
fmull
into
enter
xor
push
loope
loop
push
pop
mov
lods
pop
les
jb
scas
repnz
sbb
adc
stos
and
cwtl
push
xor
pusha
mov
pop
ljmp
out
or
ret
aaa
stos
in
bound
ret
push
mov
or
icebp
dec
pop
mov
int
mov
out
inc
nop
outsb
test
push
rcr
sbb
cmpb
das
sub
sahf
pusha
mov
and
dec
arpl
idivl
and
loop
or
pushf
pop
dec
notl
pop
shlb
sub
push
leave
add
jnp
insb
stos
lret
sub
clc
mov
mov
cmc
insb
cld
fildll
pop
daa
loope
outsl
dec
gs
or
cmp
or
xchg
push
arpl
mov
das
mov
cmpsb
pop
aad
sbb
popa
push
cmp
ss
xor
inc
insb
or
cli
inc
push
sub
or
clc
inc
ljmp
adc
xchg
sub
push
addr16
adc
add
bound
fnsave
jg
and
aad
xor
je
imul
adc
jb
ret
in
mov
aad
lods
fisttpl
in
sub
aam
call
cmp
xchg
adc
ss
xchg
and
mov
lret
push
ja
jmp
ds
inc
sub
daa
ljmp
pop
dec
jge
xchg
cmp
xchg
push
aaa
fwait
pop
repnz
dec
push
sub
cltd
jo
cmp
notl
inc
loope
mov
stc
mov
insb
mov
sub
push
pop
xchg
dec
in
xor
sarl
test
jl
cltd
sbbl
sahf
inc
popf
jge
push
rorl
in
mov
cwtl
mov
mov
insl
mov
cmp
sbb
call
push
pop
fmul
fs
mov
mov
scas
in
iret
mov
pop
ret
std
mov
xlat
and
or
dec
out
outsl
in
inc
jns
push
mov
cmp
dec
mov
in
xchg
lea
inc
cmp
int
pop
xlat
push
lahf
cltd
loope
cmp
orb
mov
dec
adc
lret
bound
cmp
in
mov
add
aaa
out
mov
pop
push
mov
cld
stos
sub
pop
push
sub
movsl
cmpsl
sarb
fisubrs
push
test
push
pop
xchg
pop
call
cmp
adc
mov
or
ss
add
in
push
inc
ret
push
sub
cmp
cmp
push
arpl
and
inc
mov
and
jle
daa
lretw
je
dec
mov
xor
jne
fs
repz
adc
les
lods
mov
inc
shl
in
mov
pop
mov
test
lea
fisttps
loope
enter
fildll
mov
addr16
notl
lcall
jae
insb
pop
arpl
dec
stos
jne
xchg
xor
dec
sub
or
movsl
outsb
popf
not
mov
cmpsb
stos
imul
lret
jecxz
out
dec
push
jge
scas
mov
add
in
or
inc
dec
test
loopne
push
mov
sub
imul
lods
jo
insb
jmp
or
inc
fdiv
cmp
mul
sbb
jns
movsb
push
jecxz
int3
mov
push
sbb
or
out
addb
ds
insb
dec
jle
out
or
aaa
divl
sbb
sub
and
or
push
int3
fwait
pop
xchg
sbb
loopne
push
orb
ret
mov
rcl
loop
jnp
movsb
mov
xchg
or
add
call
inc
jle
mov
cmp
and
out
lret
lcall
sahf
out
mov
jecxz
inc
jno
sti
and
push
mov
in
lods
movsb
dec
loopne
mov
or
and
sub
and
push
jno
gs
roll
mov
mov
adc
xorb
add
fs
push
pop
enter
stc
pop
and
sbb
add
cwtl
sub
cmc
shlb
cmp
xchg
clc
clc
jbe
push
cli
inc
leave
fisttps
mov
and
add
iret
add
outsl
test
in
sub
cmp
sar
push
and
test
mov
or
cmpsb
add
push
ljmp
mov
adc
pinsrw
mov
daa
cld
lahf
xor
jmp
xchg
mov
test
aas
lds
ss
negl
cmpsb
and
xchg
popf
push
cli
jo
push
aad
push
mov
adc
mov
xchg
push
imul
add
jl
aaa
out
je
and
mov
or
pop
call
xchg
inc
ja
jnp
pop
adc
lods
sti
adc
scas
pop
xchg
pop
out
fldcw
lahf
ds
pop
or
arpl
ja
lea
xchg
ds
push
pop
inc
mov
pop
mov
int
shr
and
out
scas
xchg
add
rcl
xor
ss
addr16
cltd
ljmp
xor
addl
lea
sbb
dec
sbb
xchg
lock
push
jle
jl
scas
insl
sbb
push
fs
cs
shrb
roll
or
out
pop
out
adc
lret
add
push
std
cmp
sub
mov
push
call
adc
repnz
lahf
out
inc
jnp
mov
sarb
imul
cli
fldt
in
dec
aas
iret
in
mov
push
cli
test
nop
jns
clc
mov
add
jl
mov
out
xor
addr16
add
leave
xor
mov
and
fmull
add
repz
test
cmpsl
or
and
loope
push
mov
push
scas
add
out
or
inc
lods
pop
sahf
add
movb
and
sbb
dec
loop
xchg
imul
in
jns
scas
cld
dec
push
jle
inc
fxch
mov
das
jno
jl
dec
and
imul
into
andl
mov
outsl
jge
or
arpl
scas
mov
loop
cmp
scas
arpl
add
pop
sbb
add
and
inc
das
fisubrl
push
xor
cwtl
mov
lods
jno
sbb
jl
mov
out
xor
addr16
cmpl
fs
fstpt
and
inc
xchg
insl
cmp
das
cmp
mov
addr16
adc
cld
iret
cld
cmp
and
pop
mov
scas
mov
jl
pushf
sbb
xor
loopne
daa
xor
out
pop
add
pop
add
outsl
test
addr16
mov
loop
test
pop
jg
push
ds
mov
das
mov
sub
rorl
mov
imul
jns
clc
data16
mov
addr16
xchg
int3
push
pushf
sarb
push
out
ljmp
mov
mov
shlb
inc
fwait
mov
pop
lcall
mov
xchg
fisubl
adc
adc
adc
pop
imul
out
mov
mov
dec
call
adc
mov
daa
shlb
adc
mov
sarl
into
rolb
xor
adc
daa
sub
fwait
mov
or
push
push
mov
xor
test
sbb
push
pop
adc
lock
mov
push
jb
cld
inc
xor
aas
lods
add
add
ds
push
data16
push
jmp
mov
cmp
cmpsb
inc
or
enter
add
lcall
lret
stos
push
inc
orl
fidivl
mov
fcmovne
sub
addb
mov
movsl
adc
sub
ljmp
fwait
mov
aad
mov
push
cmp
pop
sbb
adc
mov
pop
insb
lods
push
cmpsb
cltd
test
xchg
lahf
daa
mov
sbb
mov
and
jp
negl
sub
add
pop
js
or
push
iret
pop
shr
mov
sub
test
in
repnz
int3
ret
in
enter
jle
xor
mov
xchg
xor
shlb
fcompl
das
or
pmaddwd
adcb
idivb
mov
xlat
push
jns
pop
adcl
repnz
xchg
loope
fistpll
xchg
jo
jl
sar
out
jnp
int
into
mov
push
shlb
inc
and
fisttps
jge
cmp
mov
insb
test
mov
lahf
jp
xor
aam
fdivrs
std
std
or
xor
push
jecxz
dec
xor
push
mov
int3
imul
cmp
sub
in
sbb
jmp
imulb
fisubl
mov
pushf
and
imul
clc
mov
outsl
fisubl
and
lahf
jl
adc
xchg
inc
push
test
enter
fwait
roll
lret
lods
out
dec
movb
int
ret
pop
add
dec
cmp
mov
xchg
fsubrp
gs
push
xchg
insb
icebp
imul
xor
adc
aas
xor
pusha
jbe
test
inc
into
push
call
sti
sbb
popa
pusha
jno
jbe
in
add
mov
movsl
loop
xor
pop
mov
sahf
pop
xchg
jge
cli
jmp
ret
add
inc
xchg
mov
scas
jb
dec
sbb
rolb
or
jns
push
push
xchg
ja
and
dec
and
stos
and
andl
ja
out
jp
adc
jae
or
dec
mov
mov
dec
outsb
and
fs
push
mov
add
movsl
and
jp
in
push
mov
xor
jb
push
xor
push
dec
fistps
stos
inc
cmp
pusha
popa
pop
pushf
xor
cmp
dec
fmuls
mov
or
cmp
add
push
and
adc
repnz
aas
dec
xor
mov
xor
leave
or
and
sahf
sub
xchg
push
xlat
and
insb
add
jae
sub
shrb
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
fs
xor
loope
jp
pop
jp
jge
jge
sub
fsubrp
gs
add
scas
negl
testb
xchg
cmp
lcall
out
cltd
mov
mov
std
imul
mov
repz
mov
cmp
lret
lods
ljmp
mov
ret
xor
orb
sbb
cmp
or
add
stos
push
int
adc
frstor
out
aam
or
sbb
push
gs
or
mov
test
mov
in
aas
or
jbe
loope
sub
lcall
test
into
ret
ret
mov
mov
push
or
mov
cmp
dec
add
decl
ljmp
xchg
ljmp
xor
xchg
js
add
sub
jl
nop
in
jno
jne
popf
add
mov
cmp
cmp
jge
add
mov
in
jp
xor
loopne
sbb
test
cmpsb
pusha
aam
jno
lods
nop
sbb
mov
out
insl
xor
jo
xchg
repz
push
mov
add
cld
add
pop
add
cwtl
inc
cmpsb
and
cmpsb
aas
leave
xchg
ss
mov
sbb
into
dec
jno
out
movsb
fsub
mov
imul
sub
icebp
iret
in
movsl
push
pusha
fcoml
lods
add
fildll
jo
loope
jbe
mov
and
xchg
sub
push
mov
mov
sbbb
dec
fwait
jl
lods
rorb
cmp
xchg
pushf
cmp
scas
xchg
fisttps
push
out
push
into
fcompl
je
nopl
imul
movsl
lret
dec
dec
sti
sbb
cld
or
sahf
mov
adc
inc
popf
adc
fs
out
sarb
arpl
add
enter
cmp
loope
aad
pop
movsb
das
int3
mov
icebp
jae
pusha
jbe
pop
ret
mov
enter
test
cld
stos
dec
push
jle
pop
mov
fcom
push
adc
add
fs
shrl
add
sbb
stc
xchg
dec
adc
ds
mov
mov
lret
cld
ja
mov
andb
mov
or
pop
and
pushf
mov
fimull
and
out
fldt
and
pop
push
dec
xchg
iret
mov
pop
mov
inc
add
pop
dec
mov
sub
sub
mov
add
xor
hlt
jne
in
add
pop
out
lea
mov
xchg
cld
mov
push
add
and
add
jle
rclb
repz
cmp
xchg
test
inc
sarl
and
shlb
pop
addr16
mov
fbld
cmp
adc
decb
scas
dec
mov
pop
fcom
ljmp
add
adc
jmp
and
std
jp
mov
test
pusha
jmp
gs
jae
sub
lock
lcall
ret
add
dec
jno
xchg
fcmovnu
inc
shll
loope
enter
out
sub
aam
mov
sub
mov
out
cmp
lret
mov
mov
mov
jbe
ja
aas
lods
and
adc
mov
lock
push
hlt
sti
sbb
push
or
adc
dec
jge
sub
dec
pop
int3
pusha
xchg
into
rep
fisttps
dec
jne
fiadds
inc
pop
pop
dec
rcll
mov
add
adc
jnp
jnp
roll
pusha
outsl
cmp
xchg
das
inc
jae
es
mov
xchg
xor
test
inc
mov
sbb
into
jne
mov
dec
and
lods
jo
push
es
mov
add
mov
pusha
ljmp
scas
das
push
rolb
fdivs
xor
in
mov
or
test
sbb
pop
jae
movsl
push
imul
jecxz
dec
mov
pusha
ret
mov
pop
inc
or
xor
xor
int
jg
sti
hlt
inc
jns
insb
movsl
or
or
xchg
pop
cmpsb
sbb
fidivs
mov
out
inc
and
decl
test
or
lret
adc
out
cs
int3
pop
fbstp
repnz
insl
arpl
cld
and
leave
test
pop
sbb
cmp
cmpsb
or
stc
add
add
scas
or
pop
mov
xchg
mov
inc
loopne
cmp
repz
mov
add
xor
mov
in
fisttpl
add
ja
jbe
cmp
and
lret
jbe
xor
fbstp
sbb
push
ret
xor
in
fldt
imulb
xor
push
imul
ror
mov
fadds
jecxz
and
jle
stos
or
movb
xchg
sbb
loope
ljmp
add
adc
or
out
mov
int
int
aaa
xchg
fstps
jl
in
push
leave
cwtl
mov
mov
nop
mov
xor
stos
xlat
sbb
testb
pop
gs
loope
cmc
xchg
popf
dec
dec
xchg
pop
ljmp
adc
jno
mov
andl
lock
mov
lock
fidivrs
xchg
pop
cli
mov
xor
je
mov
jg
shlb
cmp
mov
push
pop
mov
or
jbe
ret
xchg
cli
xchg
daa
mov
fs
fs
push
mov
or
test
pop
imul
xor
ja
sbb
jne
dec
mov
sbb
or
ja
ret
mov
sbb
imul
dec
adc
lahf
inc
in
loop
xlat
int
mov
mov
cmpsl
jnp
mov
mov
pop
push
jle
clc
mov
push
inc
cmc
sahf
ja
jb
jb
and
jb,pt
or
stos
jbe
sub
xchg
and
fwait
out
jmp
pop
cs
test
xchg
cmp
and
in
and
aaa
imul
cmp
subl
bound
sbb
ja
adcb
xchg
cwtl
push
scas
push
orb
imul
inc
dec
dec
lret
aas
jge
cmpsl
mov
sub
mov
push
mov
add
imul
test
mov
inc
sub
xchg
add
mov
aaa
mov
addr16
insb
xorl
leave
rcll
in
loopne
aam
hlt
out
lahf
sub
push
sbb
mov
cli
xor
sbb
push
add
adc
jbe
pop
inc
stc
cli
mov
xchg
out
pop
nop
push
add
mov
sti
dec
shlb
ljmp
scas
jb
push
loope
sbb
inc
adc
adc
mov
mov
inc
push
stos
insb
cmpb
xor
and
out
rclb
cs
jmp
add
imulb
inc
adc
inc
mov
call
xchg
cli
movsb
gs
mov
pop
adc
fildl
inc
dec
addr16
fsubs
xor
adcl
frstor
sbb
dec
sub
xchg
notl
data16
rcl
xor
and
arpl
adc
add
pop
jb
aad
cli
push
mov
je
icebp
mov
and
adcb
ret
mov
cmp
leave
dec
xchg
push
movsl
stos
popf
jecxz
in
cmp
out
jne
pushl
cmp
mov
jae
push
adc
pushf
or
int
sub
inc
xor
add
pushf
imul
mov
xor
sahf
dec
jbe
dec
jne
or
and
adc
stos
xchg
fdivrl
out
lret
push
inc
push
mov
imul
stos
jecxz,pt
mov
xor
add
adc
push
mov
test
cltd
add
fs
cmp
mov
ds
xchg
daa
hlt
or
sub
shll
mov
aas
shrb
cmp
cltd
test
into
hlt
es
xchg
mov
aad
mov
gs
add
leave
or
mov
push
nop
loopne
jo
xchg
dec
sbb
push
jae
adc
es
in
nop
mov
or
mov
fbld
mov
addr16
pop
pop
xchg
icebp
or
xor
xlat
mov
sub
mov
and
xor
ds
lds
jle
mov
mov
test
lcall
add
xchg
imul
repnz
inc
inc
daa
jne
in
outsb
das
cmpsl
inc
sbb
push
adc
mov
repz
mov
xchg
stos
mov
mov
sub
and
jnp
addb
cmp
push
mov
push
or
popf
or
xor
insl
mov
xchg
cmp
mov
pop
test
in
movsl
clc
dec
cmp
push
sbb
into
inc
addr16
inc
test
sbbl
ss
fdivr
ja
xor
xorl
jl
sbb
popf
sbb
test
mov
sub
test
xor
cmpsb
and
leave
cmpsb
mov
dec
test
lahf
stos
add
jl
sbb
adc
fldcw
loopne
xchg
push
addr16
pop
pop
fistpll
out
int3
mov
sub
fldl2t
xchg
jmp
jl
pop
jo
les
cmp
test
push
cmp
cmpsl
and
mov
sub
adc
bound
in
scas
cltd
pop
mov
jae
pop
roll
in
sbb
push
aas
int3
fnstcw
lahf
mov
int3
arpl
jp
add
ss
sar
mov
pop
clc
ficoml
cmp
cmp
ljmp
andb
push
jae
jle
pop
popf
mov
xchg
repnz
rcll
push
scas
jle
xor
test
movl
out
pop
push
push
loop
gs
cltd
leave
out
cmp
and
dec
xchg
mov
ret
or
add
mov
frstor
in
xchg
mov
lahf
xor
fwait
out
push
dec
inc
pop
mov
ja
mov
sub
mov
dec
pusha
loop
xor
test
fstl
push
mov
and
xlat
addr16
fwait
sub
sub
adc
jbe
push
ret
rclb
insb
into
mov
dec
sub
push
xchg
cmc
sbb
cmp
leave
adc
mov
jnp
pop
sbb
or
mov
cld
pop
clc
push
out
negl
mov
ljmp
mov
push
dec
sti
cld
adc
insl
andl
iret
iret
add
lret
mov
dec
lds
pusha
dec
sahf
dec
sub
test
in
in
mov
xlat
cmc
scas
mov
test
loop
xor
lock
cmp
sarl
mov
cwtl
mov
lahf
add
leave
inc
jb
jg
sub
scas
scas
nop
out
pop
push
cmp
lret
hlt
icebp
jge
add
xchg
pop
sahf
roll
test
mov
xor
es
outsb
and
xchg
jns
or
mov
adc
ja
loope
lahf
or
adc
inc
cltd
jne
add
mov
lret
pop
bound
rorl
lret
lcall
cmp
loope
mov
dec
push
fisttpll
or
imul
fimull
push
cmpsb
pusha
fwait
pop
clc
pushw
push
cmp
mov
lcall
aam
jb
pop
mov
pushf
aas
inc
pusha
pop
fwait
icebp
pop
mov
mov
mov
mov
mov
cmpsb
fistl
pop
add
sarb
xor
jne
sarb
push
arpl
jle
pop
adc
sub
mov
in
or
movsb
pop
in
int
dec
mov
loope
insl
and
cmp
jo
adc
sub
shlb
test
push
or
out
int3
pop
xchg
movsl
sub
pop
or
cmpsl
and
mov
mov
mov
int3
mov
ljmp
sbb
ja
ret
jl
push
aam
ljmp
popf
xor
cmp
inc
xchg
cltd
or
jg
inc
mov
lods
jmp
jl
leave
fiaddl
sbb
dec
aas
mov
mov
pop
mov
adc
cltd
pushf
fsubrs
or
lret
push
pop
out
les
out
dec
xor
shr
mov
shr
cmp
add
divb
sbb
std
pop
cli
jno
cmpsb
push
lret
popf
push
cmp
xchg
and
es
lret
mov
inc
adc
mov
aas
add
es
mov
push
ret
pushw
daa
adc
cmp
mov
flds
add
stos
sbb
jmp
cltd
shrb
or
xchg
ja
imul
leave
mov
add
loope
push
inc
fwait
add
pop
pop
cmp
lods
in
aas
sbb
xchg
cmp
inc
cmc
jo
push
imul
push
repz
cmp
push
ds
ror
dec
sub
mov
movsl
pushf
xor
sub
lock
pop
jg
leave
out
add
paddq
imul
sbb
and
jnp
jne
shll
xor
pop
sub
mov
data16
and
sahf
jb
cmp
push
push
sub
adc
inc
in
cli
mov
ss
lcall
test
stos
test
aaa
cli
push
ficoms
fldt
jmp
daa
mov
adc
mov
cs
jp
outsb
subb
mov
ss
cmp
fistpll
mov
stc
xchg
addr16
outsl
cmpb
inc
mov
cmpb
hlt
out
pop
inc
les
mov
add
ljmp
cwtl
xchg
sbb
mov
and
push
test
push
sbb
jns
outsb
cwtl
loop
lahf
call
xlat
mov
lods
in
push
or
jbe
ret
mov
ffreep
mov
push
sarb
xor
xchg
scas
cmp
mov
sbb
in
jae
jl
xchg
orl
mov
fbld
movsl
push
insl
jmp
add
inc
ror
idivb
sahf
xlat
cmc
sbb
lods
mov
push
and
cmp
pusha
jl
pop
mov
in
daa
stc
dec
xchg
movsb
pop
lds
add
xor
leave
sub
add
js
sub
mov
xchg
push
scas
xor
lock
mov
test
out
leave
scas
push
mov
mov
repnz
pop
clc
inc
test
aad
in
pop
push
out
and
xor
out
or
rcl
aaa
pop
cld
and
adcb
flds
cmp
xchg
cmp
adc
push
add
icebp
aad
mov
sbb
add
pop
insb
inc
mov
push
jle
mov
dec
in
sub
mov
rclb
lret
pop
aas
into
dec
jle
in
repnz
push
repnz
jae
imul
jp
rol
dec
xlat
jbe
jae,pt
pop
mov
scas
fisttpl
add
scas
stc
shrl
test
push
lds
adc
inc
sti
std
and
pusha
jge
mov
mov
push
inc
or
sbb
inc
xor
push
jg
outsl
jb
repz
mov
cs
add
popw
cmp
push
idivb
repnz
or
mov
mov
jo
test
in
xlat
push
xor
loop
test
inc
mov
rorb
int
lock
lret
sbb
icebp
psrlq
inc
adc
call
xchg
fnstcw
lcall
fildl
sbb
add
aad
mov
inc
mov
aad
lock
lcall
inc
test
mov
mov
push
ss
mov
and
test
jne
and
bound
mov
xor
add
jns
sub
xchg
mov
and
push
cmp
sbbl
inc
xchg
cltd
mov
mov
xor
pop
xchg
pop
popa
adc
mov
mov
inc
rcl
gs
aam
inc
sub
lea
test
movsb
rolb
mov
into
mov
sahf
lods
mov
xchg
mov
das
pusha
sbb
jo
and
jecxz
add
pusha
sub
fildll
sbb
adc
jno
test
or
nop
negl
inc
and
pushf
cmp
icebp
jo
daa
xchg
ret
inc
push
and
loop
push
xchg
cmp
inc
mov
aam
xor
mov
jecxz
idivb
xor
xchg
ret
cmp
push
movsl
push
mov
push
mov
push
dec
jle
push
lea
bswap
mov
test
std
in
pop
adc
fidivl
sbb
pop
cwtl
and
sub
iret
ja
adcb
mov
out
ds
jecxz
mov
loop
mov
imul
cmp
pop
pop
in
daa
xchg
outsl
mul
str
lcall
lahf
cli
mov
out
popf
push
das
mov
sbb
cltd
xchg
hlt
xchg
leave
lcall
and
fwait
leave
inc
arpl
rcrb
cltd
jae
daa
iret
mov
xchg
push
push
pop
std
mov
fidivrl
xor
lea
sub
jo
orb
out
aad
cmp
xor
sarl
sar
xlat
jns
out
xor
push
xor
lahf
ret
cmp
mov
adc
jae
pop
pop
dec
jbe
popf
sbb
adc
dec
jl
lock
loopne
mov
and
push
dec
pop
out
aas
pop
push
dec
xor
rcrl
jmp
jno
popa
lds
cmpsb
in
fcoms
aaa
dec
mov
out
cli
movsl
adc
out
push
and
cmp
sbb
leave
jp
std
mov
dec
add
movsl
mov
out
sbb
xchg
mov
out
cmpsl
push
inc
dec
adc
mov
nop
jg
dec
aad
aas
sbb
pop
jmp
jl
xchg
fcom
adc
int3
inc
loope
cmp
negl
push
xor
mov
sbb
int3
sub
inc
mov
les
imul
into
mov
dec
adcb
cmpsl
out
mov
ret
pop
inc
lds
outsl
shlb
jg
std
cmp
push
imul
aam
or
stc
gs
mov
rcl
aas
jnp
lea
fstpt
insb
xchg
pop
cs
jb
add
rcl
add
mov
cmpl
mov
xchg
hlt
into
mov
inc
cmp
push
fdivs
jbe
and
mov
lock
mov
dec
xlat
jne
mov
sahf
loop
mov
popl
cmp
leave
pusha
int3
mov
pushf
mov
lcall
xor
push
loope
dec
or
insl
aas
pop
fldenv
imulb
cmp
pop
cltd
and
repz
inc
or
cmp
shl
push
rcll
cltd
inc
sub
pop
mov
movlhps
out
adc
sub
lahf
aaa
push
pop
test
or
or
add
mov
and
push
or
loop
xchg
and
mov
test
nop
sbb
pop
xor
xchg
lret
mov
push
ds
jns
xor
into
mov
fs
cmp
sbb
push
mov
adc
xlat
and
pop
push
jbe
pop
mov
mov
fwait
popf
inc
cmp
push
push
inc
arpl
inc
out
inc
pusha
mov
pop
and
add
adc
fs
pop
pop
add
adc
clc
roll
or
daa
cmp
xchg
mov
dec
pop
pushf
in
mov
jmp
stos
ss
cmp
xor
lock
xorl
jo
scas
push
hlt
testb
roll
es
sarl
int
stos
insl
scas
addr16
add
and
push
cmpsb
inc
mov
adcl
lods
jl
movsb
addr16
fstps
mov
xchg
aas
shlb
mov
xchg
icebp
pop
in
jne
stc
push
daa
xor
push
adc
stos
and
sub
xor
int3
dec
fstl
sti
outsb
jo
adc
sub
clc
cmp
mov
repnz
sbb
pop
xchg
ds
xchg
imul
add
push
xchg
lret
sbbb
sar
lds
and
mov
adc
add
adc
sub
mov
adc
xlat
cmp
loope
push
mov
adc
inc
sbb
dec
enter
mov
fimuls
dec
jbe
cmpsb
cmp
jb
cld
mov
call
scas
js
and
jmp
daa
xchg
sub
jno
arpl
jne
loop
xor
dec
jb
jnp
sub
mov
jp
fldt
pop
stos
pop
or
mov
je
repnz
stos
pop
jb
ss
push
out
cmp
daa
or
inc
pop
jnp
xchg
mov
fsubrl
call
jg
add
push
test
adc
adc
push
and
or
sbb
lcall
into
fcoml
ret
cs
ret
into
cmp
scas
sbb
and
mov
sub
call
pop
out
xchg
rorl
ja
je
sub
iret
aas
jbe
out
cmp
pop
pop
mov
inc
mov
inc
aas
lods
test
leave
jbe
int
sbb
aaa
or
and
ss
sub
andb
xchg
insb
push
inc
jmp
sbb
cmpsl
iret
clc
fsubl
cli
fidivl
into
mov
adc
inc
adc
loopne
inc
sbb
jg
cld
ja
movq
sub
and
insl
cmp
cmpsb
mov
push
jb
mov
cmovo
dec
das
jmp
int
stos
sbb
cwtl
packsswb
icebp
rol
mov
inc
and
dec
stos
push
adcb
mov
jnp
pop
je
push
lock
daa
lcall
fs
insl
mov
push
icebp
mov
fs
mov
insb
adc
shl
es
addr16
push
out
xor
xor
jg
out
pop
dec
notl
pop
outsb
out
mov
or
jne
xchg
popf
mov
dec
xchg
rorb
call
or
jno
mov
rorb
inc
mov
mov
test
push
jns
pop
mov
jo
xor
jne
sub
dec
test
jb
js
xchg
shll
out
aad
scas
cmp
out
movb
popa
sub
dec
jg
xchg
repz
cmp
out
xor
mov
dec
push
mov
aas
into
fwait
xor
dec
push
arpl
sbb
dec
and
rcrl
das
cmp
push
out
pusha
rclb
dec
and
mov
repz
jmp
ds
push
sub
es
adc
pop
sub
lcall
add
stos
add
ret
call
loop
je
enter
mov
cmpsb
les
dec
call
inc
adc
ljmp
sbb
pop
lcall
and
or
std
in
pop
push
scas
icebp
xor
mov
int
imul
stos
in
mov
int
fidivrl
clc
jb
loop
outsb
xor
push
fldl
outsb
fs
ds
cmc
adc
sbbl
jmp
ficomps
lds
jmp
push
mov
outsl
iret
sbb
and
cmp
int3
xchg
aas
xor
call
mov
in
push
jmp
xchg
call
gs
cmp
enter
fistl
xchg
jge
sarb
hlt
push
mov
inc
xchg
add
out
fisubl
sarl
push
daa
sub
stos
inc
clc
pop
push
push
repnz
outsl
mov
or
inc
mov
imul
xlat
xchg
ficompl
add
orl
outsl
jae,pt
enter
xor
xacquire
out
lock
cmp
out
pop
mov
push
mov
adc
or
rcll
push
inc
sub
push
add
inc
pop
cmp
test
js
fildll
mov
add
mov
push
xor
xchg
enter
lahf
push
sbb
push
and
lods
push
ficoml
ds
pop
mov
mov
add
insl
inc
cwtl
push
leave
jnp
mov
lods
or
movsl
outsl
jnp
adc
roll
or
fbstp
in
jl
loop
out
mov
xchg
cmpsl
jb
enter
inc
daa
adc
mov
andl
dec
push
imul
insb
cli
mov
fiaddl
hlt
mov
fsubrl
and
fldt
xchg
xchg
jnp
insb
add
fwait
test
add
mov
test
mov
icebp
jge
xchg
push
and
pop
pushf
cmpsb
push
loope
fnsave
and
sbb
mov
out
fldl
hlt
movsl
repnz
dec
lcall
jmp
mulb
sbb
xor
add
in
jecxz
daa
subl
popa
cmc
clc
ja
or
pop
pop
subl
nop
int3
adc
cli
sarl
push
out
es
in
in
sub
int3
loopne
adc
or
ficompl
iret
xor
pop
in
dec
out
and
je
or
xor
push
xlat
inc
outsl
xor
dec
aad
mov
in
mov
negl
mov
add
js
add
xchg
arpl
repz
jmp
addr16
push
cmp
pop
loop
lret
jecxz
add
pop
adc
popf
loopne
addr16
xlat
jmp
les
repnz
lea
call
pop
int
outsl
idiv
cmp
mov
mov
shrl
pop
pop
mov
add
jmp
arpl
repz
stos
dec
push
xlat
push
jg
into
loopne
fimull
push
movsl
add
les
bnd
mov
jbe
xchg
pop
ret
dec
lock
out
mov
xor
daa
sbb
xchg
xor
mov
push
in
dec
jns
jg
adcb
xor
lret
repnz
dec
movsb
pop
mov
dec
repz
mov
pop
cli
lea
mov
mov
imul
pop
and
push
shl
mov
test
icebp
push
je
cmp
adc
out
push
sbb
jno
xchg
decb
stc
cmc
push
sbb
aad
sbb
or
sub
ret
andb
mov
loop
mov
and
push
movsb
mov
mov
ret
es
xchg
and
les
mov
outsl
and
insl
inc
jne
ret
cmpsl
orl
sub
cld
cmp
add
xlat
repnz
popa
das
adc
mov
push
dec
aam
gs
mov
dec
sub
mov
ret
and
dec
pusha
xchg
lock
inc
push
in
inc
sbb
jno
fs
imul
out
aad
lds
adc
inc
pop
mov
mov
jg
sub
mov
scas
shrl
insb
pop
fnsave
shlb
outsb
in
rclb
dec
aam
in
cmpsb
inc
fstpl
xor
dec
jl
and
push
scas
pusha
mov
cmc
jl
popa
xor
cmp
aaa
jo
mov
cmpsb
mov
or
insl
cmp
loope
push
adc
arpl
sub
push
lods
mov
pop
pause
mov
cmc
je,pn
fists
mov
ds
push
icebp
inc
xchg
jbe
add
dec
xor
push
jle
fdivr
pop
aas
in
adc
jno
push
push
push
lods
stc
imull
mov
lea
xor
fldcw
mov
nop
cmp
pop
fwait
sub
jg
and
lcall
mov
sub
push
xlat
mov
shlb
mov
dec
mov
or
fwait
loope
das
xor
loop
sub
xor
outsl
and
or
xchg
std
push
cmpsl
dec
mov
jb
cmp
mov
push
push
ljmp
es
cmc
sub
push
mov
test
push
push
cmp
aam
add
mov
dec
ljmp
lds
pop
jmp
enter
adc
mov
mov
cmp
lock
aad
mov
xor
inc
pushf
movsb
mov
xchg
std
aad
xor
out
xor
xchg
daa
movsb
and
add
insb
lret
test
ja
jne
mov
std
outsb
faddl
xchg
pop
cmpsb
and
loop
call
jecxz
sub
xchg
inc
inc
out
sarl
lret
lds
arpl
div
add
lods
fwait
inc
dec
pushf
jns
bound
xorb
cmp
sbb
and
fisttps
stc
lds
jo
pop
pop
push
and
mov
movl
or
mov
shll
adc
aam
pusha
cld
inc
sub
out
loopne
cmp
xchg
or
jno
frstor
mov
aad
mov
xlat
popl
push
dec
popa
ffreep
mov
aam
test
insl
or
bound
jbe
xor
xor
daa
xchg
ret
sub
mov
and
jle
dec
sbb
adc
lcall
into
sub
mov
lea
scas
dec
jo
lock
popf
jnp
cmp
mov
dec
jb
fmul
sbb
ret
lret
xchg
and
shlb
lods
repnz
jle
notl
mov
xchg
aad
lahf
lock
in
jb
or
mov
and
push
mov
xchg
cmp
adc
ja
scas
in
inc
push
lock
repnz
push
jecxz
nop
adc
aam
aam
cs
push
jns
or
outsb
inc
lahf
lahf
add
ret
mov
dec
cmp
mov
dec
in
push
jl
mov
mov
loopne
and
inc
inc
repz
ret
outsl
sub
pop
leave
pop
dec
push
mov
push
aad
sti
sbb
jns
cmp
pushf
je
cmp
outsl
xchg
push
add
inc
loop
in
cmc
pop
ds
mov
inc
cmpsl
sbb
sar
in
js
cli
and
adc
leave
out
stc
cmp
and
jns
jo
mov
push
sbb
jmp
in
xchg
roll
jb
push
push
mov
in
in
ffreep
jmp
out
and
dec
test
fdivl
in
sti
negb
jno
repnz
jecxz
jne
sar
cld
dec
int
xchg
push
push
fst
jns
pop
pop
test
xchg
adc
jmp
xchg
icebp
rcrb
inc
cmp
leave
sub
mov
inc
xchg
cwtl
cmp
pusha
mov
mov
cmp
dec
insl
lret
mov
jbe
rorl
jp
mov
pop
jg
imul
js
xchg
mov
dec
mov
mov
call
push
adc
cld
in
mov
or
jmp
imul
push
popa
jbe
gs
sahf
mov
lret
inc
gs
cltd
sub
fldcw
ljmp
out
aam
lock
mov
mov
or
shll
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
mov
test
pop
jp
lcall
mov
shrl
jo
fiadds
scas
add
repnz
in
aaa
mov
mov
sub
scas
fadds
fstl
movsb
add
mov
push
jne
jns
je
sub
jo,pn
sbb
insl
into
mov
xor
pop
ror
out
lods
testb
lods
mov
aaa
sub
mov
adc
fildll
adc
sbb
dec
lcall
push
cmp
je
testl
mov
xor
fstps
inc
or
lahf
xchg
or
push
insb
push
testl
mov
insb
aam
inc
jno
test
push
dec
mov
cmp
hlt
movsb
arpl
mov
outsb
mov
gs
push
xor
push
sub
scas
out
ljmp
mov
jno
outsl
mov
mov
out
dec
roll
add
iret
xchg
adc
pop
xchg
push
lcall
les
aad
sbb
ja
mov
xchg
sahf
jge
jecxz
cmp
outsb
lcall
movsl
mov
aas
das
adc
jle
adc
outsb
dec
add
test
outsb
cli
cmp
inc
cmp
push
cwtl
daa
xchg
in
ljmp
inc
xchg
js
or
lret
add
outsl
shll
call
mov
mov
mov
adc
pop
insb
lret
pushf
out
cmpsl
jl
or
fimuls
cld
cmp
and
xchg
mov
mov
cmp
imul
out
cmp
jb
ret
std
andb
xchg
lods
mov
jo
out
idiv
xchg
loope
adc
std
insl
fwait
mov
mov
mov
jae
cmp
mov
cmp
push
jge
rcl
sbb
cmpsb
cmpsl
sti
push
je
jbe
movsb
aas
push
and
fsubrs
ret
into
pusha
rol
sbb
and
in
pop
insb
cltd
xor
sub
clc
aad
adc
out
mov
aam
popf
andb
mov
movsb
jp,pn
xorb
inc
mov
cld
iret
xor
jmp
jl
pushf
aaa
es
fisubs
pop
je
jmp
add
fdivr
sub
or
adc
mov
mov
jns
out
test
cli
push
fcom
in
out
push
popa
jae
xchg
sub
push
scas
sbb
sbb
and
xlat
dec
mov
sub
cmp
push
inc
push
mov
add
mov
leave
iret
sbb
pop
sbb
and
pushf
mov
cmp
mov
cmp
push
sbb
repz
adc
pushf
xchg
cmpsb
les
mov
movsb
inc
test
mov
mov
or
adc
call
cmp
sbb
ja
testb
xchg
inc
cmp
xor
ret
push
lret
xchg
jne
insb
dec
aam
dec
push
aaa
sub
outsb
ja
jl
stos
adcb
cltd
inc
gs
mov
xchg
inc
test
cwtl
pop
xchg
loopne
xor
cmp
fidivrl
cmp
mov
pop
insb
out
jp
aad
pop
std
mov
push
add
mov
hlt
popa
jge
shrl
adc
insl
rclb
mov
mov
sarl
xchg
outsl
ja
xor
pop
mov
fistps
ret
add
xchg
daa
aam
movsl
push
xor
add
les
xor
xor
push
inc
jge
sbb
std
dec
cmc
xchg
pop
shlb
out
mov
imulb
test
push
dec
cwtl
xchg
and
push
sub
mov
jl
inc
pusha
mov
jle
cli
sbb
dec
pusha
sbb
add
stos
call
out
push
dec
fsts
inc
jmp
jmp
cmpsl
sub
mov
mov
frstor
lods
andb
dec
mov
jns
stos
adc
pushf
dec
or
fwait
sub
sbb
dec
push
fsubrs
fists
xchg
mov
sbb
mov
mov
lock
movsl
nop
xor
push
add
fdivrs
stos
out
lods
add
mov
ror
jno
into
jno
insb
aas
popa
aaa
lods
cmp
inc
adc
mov
cmp
pop
mov
faddp
shll
inc
shrb
mov
adc
scas
in
mov
mov
xchg
push
sub
scas
aad
aaa
mov
push
lods
mov
dec
ret
pop
pop
mov
lock
mov
out
xor
pop
sbb
xor
mov
flds
mov
cld
out
and
xlat
dec
mov
int
xor
cmpsl
and
pop
cmp
mov
push
rolb
add
sarb
aad
cmp
cwtl
sbb
mov
mov
fisubl
and
pop
dec
int3
cmp
jmp
es
scas
jge
sti
adc
rcll
insl
xor
in
cmp
in
popa
fsubl
xor
lret
addl
sub
push
pop
sti
xor
mov
and
mov
maskmovq
adc
data16
xchg
mov
pop
cmpsb
sub
in
xor
push
icebp
sub
adc
cltd
je
dec
inc
xor
mov
push
mov
cs
add
jmp
add
das
jno
stos
xchg
mov
xchg
or
xor
nop
int
add
rcrb
iret
clc
jae
cwtl
push
sbb
repnz
sub
pop
xchg
and
mov
ja
cmc
mov
lds
or
mov
sub
sbb
sbb
mov
test
rcrl
bound
inc
out
mov
in
test
js
inc
inc
add
leave
xchg
pop
sub
jmp
sub
pop
dec
xchg
mov
or
jp
movlps
loop
in
ffree
aaa
jecxz
aas
sarb
ss
mov
les
shr
sbb
xchg
clc
out
pusha
and
or
call
mov
xorb
ficoms
movsl
stos
in
test
sub
shl
arpl
cltd
sbb
fisttpll
lret
andb
sahf
aad
and
mov
mov
aad
leave
xchg
aas
mov
xor
fsub
enter
ret
push
pop
push
sbb
ret
nop
mov
adc
or
push
les
pop
cld
mov
fldcw
xor
dec
jp
ds
pop
ret
jle
cli
dec
pop
dec
mov
fs
cli
loop
push
and
cmp
xchg
push
outsl
addb
add
lcall
cmp
fucom
xchg
adc
mov
cmpb
push
aas
movsb
sbb
inc
clc
mov
xchg
mov
push
loop
aas
arpl
lahf
sub
sub
push
pop
xlat
imul
sbb
pop
out
enter
pop
call
fdivl
cmp
div
push
mov
test
jg
aam
inc
cmc
popa
inc
mov
stc
mov
or
mov
movsb
jne
or
ret
pop
pushf
aam
mov
adc
jp
cmpsl
push
and
cwtl
mov
leave
stos
imul
je
push
sub
data16
popa
shlb
inc
lret
adc
jmp
call
mov
pop
sub
and
and
gs
frstor
testb
test
add
lds
mov
int3
jns
lods
aas
jmp
xor
rclb
adc
push
outsb
jge
fstps
stc
leave
jp
je
jg
push
fucomp
rcll
in
repnz
in
mov
leave
rcrl
js
xor
sahf
clc
and
xchg
xchg
sbb
pop
sub
xchg
andb
sub
mov
leave
jle
xor
shll
lret
cmc
jge
ficomps
push
rcr
out
cltd
xchg
imul
and
mov
ret
jno
int
dec
jl
sub
bound
in
cmpsb
dec
sbbl
pushf
push
shrl
arpl
pop
notb
rcrl
adc
mov
xor
test
popf
or
sub
mov
pop
or
pusha
mov
pop
push
rorl
jmp
inc
leave
xor
add
xor
push
sub
xchg
je
fbld
imul
mov
jp
xor
mov
xor
bsf
mov
push
xlat
cs
test
cld
negb
cmp
inc
fsubrp
pop
adc
iret
mov
or
lods
mov
xor
adc
in
fcomi
sub
sub
rcrb
fsubr
jo
xlat
mov
icebp
mov
scas
sbb
out
out
adcl
sub
mov
mov
adc
cmp
in
in
loopne
xchg
fnstenv
adc
stc
push
jmp
mov
int3
in
pop
fwait
push
cwtl
and
lahf
clc
and
rcr
fldenv
xchg
cmp
push
lret
cwtl
push
xor
lret
pop
ja
mov
aas
dec
addr16
addb
adc
mov
stos
sbb
mov
ljmp
fdivr
and
jno
xor
fistps
repz
sbb
dec
push
jb
scas
inc
or
fs
fdivrl
cmp
and
xchg
out
push
cli
stc
inc
mov
jnp
inc
and
fwait
gs
in
adc
or
movsb
sti
js
ficoml
les
aaa
hlt
out
pop
addr16
pop
jmp
inc
adc
inc
add
mov
popa
add
fisttps
movsl
cmpsl
jnp
xor
fsubrp
cmp
les
das
daa
add
dec
shrl
dec
cmpsb
popf
mov
mov
push
loop
rorb
dec
mov
mov
cmpsb
movsl
xorb
jp
dec
cmp
mov
cwtl
xchg
adc
sub
cmp
loopne
mov
and
out
cwtl
outsl
cmp
push
pop
fnstcw
repnz
xchg
std
out
imull
mov
push
push
rorl
ja
mov
mov
mov
fwait
pop
int
sahf
movsl
loop
sub
test
xor
fldl
sbb
jg
arpl
and
pop
mov
push
dec
and
outsl
into
movsl
frstor
sysenter
pop
stos
das
pusha
push
mov
and
lcall
imul
inc
lahf
xor
mov
ljmp
mov
mov
mov
dec
push
mov
mov
fcomp
fwait
imul
into
popa
add
mov
shl
ds
jae
cmc
aad
mov
into
sti
add
adc
push
add
push
int
icebp
mov
adc
mov
sbb
dec
pop
fmul
repz
jl
xor
out
mov
sub
and
cwtl
test
dec
xor
mov
adc
jae
dec
mov
adc
mov
test
and
mov
or
or
dec
std
adc
or
insl
or
fstps
jp
cmp
jb
push
js
and
insl
fcoml
faddl
jae
cmp
push
ljmp
test
cmpsl
movsb
push
aam
or
ss
xchg
adc
enter
xchg
xlat
mov
imul
push
mov
sbb
jae
pop
sbb
imul
not
xor
mov
mov
jge
ret
repnz
mov
sub
cmpsb
push
push
mov
daa
add
pop
pusha
lods
inc
ret
sub
je
fwait
shlb
test
test
sahf
scas
out
push
mov
lock
xchg
mov
mov
out
jg
inc
push
ret
push
scas
and
cli
jecxz
dec
fistpll
pusha
js
cli
decb
cmp
bnd
cld
mov
mov
cld
push
sub
ror
scas
and
xor
loope
add
jo
xchg
and
mov
sbb
fwait
push
fld
data16
notl
stc
mov
clc
pop
rcrl
jno
jb
js
outsl
repnz
std
mov
mov
mov
pop
in
scas
mov
push
popa
sub
xor
add
ffree
leave
dec
movsb
fldpi
pushf
test
test
or
add
test
fistps
add
les
sub
ss
in
adcl
pop
sbb
mov
cs
daa
leave
adc
pop
sbb
dec
and
mov
sub
stc
or
shrb
add
inc
xor
movsb
decl
repz
sti
test
add
xor
add
push
jne
cmp
pop
push
push
pop
int
sahf
enter
dec
inc
lods
dec
and
lahf
push
pop
xchg
cmp
push
and
or
hlt
xchg
fldln2
cmp
xchg
icebp
jmp
ret
fistpll
test
pop
aas
cwtl
insb
mov
jp
sub
xor
ss
ss
and
mov
pop
jg
out
repnz
jecxz
dec
loopne
mov
or
pop
jmp
mov
arpl
out
push
call
ljmp
pop
pop
mov
or
pop
lret
cli
xchg
sarl
ja
scas
add
inc
sbb
xchg
icebp
insb
xor
xor
xor
pusha
jae
dec
add
cwtl
adc
cmp
fcoml
xchg
iret
sahf
ret
outsl
out
sbb
mov
push
push
mov
daa
movsb
insb
std
out
jecxz
pop
and
imul
dec
cmp
popf
cmp
dec
iret
add
pop
fwait
loopne
xor
add
rorb
mov
ljmp
cwtl
fdiv
mov
add
hlt
inc
xchg
loope
xchg
pusha
and
sbbl
stc
nop
cwtl
arpl
mov
test
jae
cmc
out
mov
nop
mov
mov
pusha
lret
push
into
leave
insb
arpl
push
addr16
gs
or
aaa
push
testl
arpl
pop
bswap
jne
fdivl
push
push
sub
push
mov
enter
mov
dec
jge
add
ret
arpl
stc
mov
pop
out
cwtl
andl
outsl
aad
lods
pop
repz
insl
fs
dec
clc
out
scas
mov
sbb
pop
jge
cli
clc
sahf
aaa
ret
adc
je
xor
xchg
or
and
sbb
add
ja
cmpsl
xor
sbb
cmp
movl
test
pop
mov
call
inc
push
jnp
mov
jnp
addr16
mov
cmp
icebp
mov
cmc
in
or
push
test
loop
jnp
pop
cwtl
or
xchg
mov
inc
imul
add
mov
js
push
push
adc
ja
lds
mov
xchg
leave
clc
icebp
cmc
int3
xor
test
xchg
fwait
dec
sti
pop
pop
loope
cmc
push
sbb
cwtl
leave
outsb
scas
rol
mov
shl
cmp
sub
dec
stc
popa
mov
pop
cmp
mov
add
fisubrs
jg
cltd
arpl
pop
call
add
clc
ror
jnp
push
mov
dec
movsl
or
test
aas
inc
std
mov
ds
cmpsl
sbb
ss
or
clc
inc
adcb
push
in
mov
add
out
jp
cltd
jl
out
fwait
icebp
data16
add
mov
sub
jecxz
jbe
dec
clc
cmp
adc
loope
inc
loop
inc
leave
and
and
lcall
lret
mov
mov
push
inc
les
xor
sbb
push
add
shll
jno
sub
jo
push
icebp
sti
and
jnp
leave
ret
cli
lods
cwtl
cmp
stc
dec
add
scas
push
std
mov
xchg
scas
fwait
mov
je
jecxz
sbb
into
xor
outsb
popa
sub
mov
adc
push
xchg
jo
or
pusha
lock
jb
out
adc
adc
roll
xchg
stc
xchg
and
push
add
inc
movsl
cli
xor
push
jg
sub
mov
mov
dec
xlat
jle
push
xchg
test
mov
hlt
sarb
push
jge
adc
xchg
add
ret
lds
cmpsl
jae
lea
dec
dec
hlt
test
fcoml
jnp
aad
sti
or
xchg
frstor
add
xchg
mov
jb
inc
sbb
cld
daa
aam
decb
test
pop
dec
cwtl
sbb
mov
ret
ret
test
sbb
js
cli
lret
bound
jecxz
xchg
xchg
push
push
lods
subb
mov
fdivs
fbstp
mov
xlat
movsb
loopne
es
xor
cmpsl
clc
dec
sub
arpl
xchg
jno
loop
pop
lret
dec
ss
cmp
in
inc
mov
fstps
out
add
jns
mov
push
adc
lret
jmp
sahf
push
loop
xchg
scas
mov
ds
lea
push
fcoml
daa
xor
test
or
xchg
out
xchg
jmp
or
stos
pop
les
jae
or
sub
cmp
out
aam
adc
sub
push
stos
mov
mov
push
or
fs
dec
push
fsubrl
mov
test
in
cmpsb
pop
js
pop
mov
pop
test
jnp
rep
fnstenv
test
add
adc
imulb
scas
add
pop
lods
loop
imul
repnz
inc
sub
mov
jae
insl
sbb
ja
mov
sbb
add
lea
and
fldcw
mov
xor
scas
lods
cmpsb
imul
and
inc
push
xchg
and
mov
lods
sti
xchg
adc
arpl
movsb
cmpsb
dec
lods
leave
stos
orl
in
and
loopne
sub
test
xchg
jecxz
je
push
cmpsb
jb
test
push
xor
scas
push
popa
lock
idivb
sbb
add
or
dec
xor
mov
stos
sahf
adc
mov
lods
dec
push
or
mov
jg
pop
inc
inc
mov
movsb
out
fwait
pop
mov
loope
into
xchg
mov
xchg
and
jno
nop
xchg
mov
repnz
rolb
andl
fadds
push
fisttpl
mov
in
out
neg
pop
mov
adc
notb
mov
dec
idiv
xchg
bound
lahf
or
in
loope
out
mov
sub
stc
not
loop
stc
pop
xchg
pop
sbb
rcr
outsb
ror
push
movsl
inc
lods
mov
jns
cmp
xchg
push
shrl
outsl
and
in
mov
jmp
mov
mov
adcb
cwtl
pusha
scas
push
mov
jmp
push
jae
jl
mov
inc
jg
sub
mov
mov
ret
lods
push
insl
sbb
imul
mov
repz
cmp
pop
mov
mov
mov
int3
sub
bound
jmp
fs
adc
out
mov
lods
ljmp
jmp
mov
adc
gs
pop
aam
or
push
leave
pop
mov
add
adc
dec
jl
rorb
mov
int3
mov
mov
mov
cmp
sbb
mov
sub
add
mov
pop
dec
cwtl
cltd
mov
roll
inc
mov
fsubs
add
mov
fs
jle
xor
js
repz
add
movsb
leave
jmp
push
pop
dec
jb
jge
cmc
mov
icebp
ja
clc
cmpsl
adc
jae
rcll
hlt
rolb
xchg
imul
enter
ret
cwtl
push
inc
pop
out
sahf
or
in
dec
dec
jle
mov
lods
pop
mul
push
rorb
lds
cwtl
out
pop
mov
adc
enter
outsl
mov
adc
hlt
jns
dec
lret
jmp
movsb
imull
mov
mov
push
stos
or
lret
cld
lods
push
inc
adc
or
pop
ljmp
adc
sbb
loop
xlat
cld
jge
shr
mov
clc
sub
les
imul
ss
std
lret
pusha
sarl
mov
dec
mov
in
fbld
dec
push
mov
jl
aaa
in
inc
or
insl
lds
mov
negb
imul
scas
pop
inc
rol
xchg
loopne
loop
les
push
jg
lock
dec
push
push
rcrl
daa
cmp
pop
hlt
stos
dec
inc
jle
xor
int3
mov
xchg
lds
sub
pop
push
mov
cmc
outsl
lahf
icebp
aam
dec
or
fiaddl
sbb
inc
clc
inc
call
mov
sbb
enter
fabs
data16
add
lods
inc
addr16
sub
mov
lcall
mov
repnz
cli
dec
pop
out
adc
stc
ds
js
sub
dec
cmp
in
xor
cmpb
push
fisttps
sub
adc
add
cli
sbb
fcoml
jl
inc
and
xchg
cmp
fdivs
mulb
faddl
lods
ss
inc
pop
popa
inc
jbe
mov
sub
fmulp
xchg
test
sbb
fldenv
ret
pusha
dec
pushf
ds
xorl
jne
xor
cltd
dec
sub
and
cmpsl
test
mov
xchg
push
cmp
mov
test
ret
cmp
outsl
js
sbb
pusha
vpsllq
xorl
std
enter
out
jno
aaa
test
lret
inc
adc
sbb
pop
scas
outsb
mov
add
push
pop
and
les
std
sub
mov
cmp
pop
mov
test
lea
outsb
xor
scas
lret
in
in
daa
fldt
cmpsl
push
gs
mov
cmpsb
addr16
mov
push
loopne
xchg
sub
mov
fimuls
aam
call
int
sbb
and
outsb
and
test
fnsave
inc
aas
repnz
test
rcrl
pop
adc
dec
insb
add
sbb
sbb
mov
cmpsl
das
daa
add
mov
inc
inc
icebp
div
inc
or
xchg
xor
pop
lods
xchg
lods
push
push
lock
testb
pusha
popf
mov
push
iret
push
in
mov
mov
jbe
inc
popf
mov
rcll
push
add
aad
sahf
push
int3
aas
cmp
aaa
mov
lds
rcll
inc
or
fsts
ja
inc
mov
sahf
lahf
pop
mov
fisttpll
sbb
mov
cmp
dec
es
mov
imul
add
inc
movsb
std
dec
es
pop
mov
inc
ret
hlt
inc
and
loopne
push
jo
daa
in
xchg
flds
pop
or
aas
sub
jbe
push
repnz
leave
sub
push
and
lcall
popl
pop
xchg
adc
push
out
adc
xor
cltd
je
sub
mov
mov
test
cmp
or
leave
cwtl
pop
pushf
inc
mov
mov
mov
pusha
pop
and
cmp
jp
push
and
lea
dec
sub
dec
ror
jbe
lods
outsb
pop
mov
xor
jnp
scas
out
xor
pop
jl
testb
int
popa
test
fptan
decb
out
inc
add
pop
int
cmp
pop
cmp
lock
int
inc
sub
das
sbb
pop
mov
dec
and
ss
lcall
adc
push
ds
sbb
out
mov
inc
testl
xchg
mov
cmc
pop
adc
mov
pop
cmp
push
das
out
mov
xor
xchg
cmpsb
sub
cli
lss
mov
dec
dec
xchg
jne
mov
mov
or
lcall
aam
call
sbb
fiaddl
loop
cwtl
es
ljmp
cld
in
popa
jne
xchg
clc
dec
in
add
xchg
shlb
adc
sarl
sbb
inc
jp
lret
xor
or
inc
leave
outsb
les
adc
pop
cld
dec
pop
or
cmp
ret
mov
add
jnp
into
dec
sbb
loop
and
cmp
in
js
sub
cmp
inc
fldenv
fsubrs
cmpsl
in
test
rclb
arpl
inc
push
or
test
jmp
push
jp
jno
dec
or
xor
adc
std
sarb
mov
fbstp
sbb
mov
adc
rclb
jne
mov
sbb
jnp
cmp
test
push
xchg
dec
divb
dec
stc
pop
fstl
or
xchg
divb
inc
lret
aas
int3
aas
out
jno
inc
jbe
push
rcl
std
test
add
fistps
and
mov
sbb
mov
in
mov
mov
mov
std
adc
or
dec
add
or
xor
push
or
or
inc
add
in
daa
insl
es
cmpsl
push
jne
fwait
test
loop
out
mov
test
in
pop
mov
lea
pop
loope
pushf
mov
mov
dec
mov
cltd
fcomp
jnp
in
andb
push
loop
cmp
fucomip
inc
lock
mov
mov
mov
mov
into
inc
icebp
mov
pop
fs
jp
popf
iret
jb
loope
pop
inc
popa
lea
mov
inc
sub
adc
add
sub
push
pusha
sbb
and
inc
int
sub
data16
jle
add
sub
mov
push
lds
std
dec
movsl
lds
inc
mov
xchg
dec
pop
push
xor
data16
cmp
pushf
push
push
cmp
hlt
les
sbb
sub
enter
ret
mov
mov
mov
or
xor
inc
cltd
xchg
stos
xchg
bound
sbb
inc
and
xor
shl
ret
and
cmp
out
movsb
dec
xchg
dec
pop
xchg
stc
cmp
xchg
jg
lods
int
addr16
sub
push
cmp
adcl
xchg
enter
xor
add
scas
xchg
stos
adc
cltd
nop
addr16
dec
cld
js
mov
pop
fdivs
and
jg
sub
mov
outsl
jb
icebp
aas
push
mov
pusha
jge
push
imul
daa
pop
ret
faddl
xor
cmp
ja
ror
mov
addl
inc
sbb
adc
lods
mov
dec
sub
push
xor
pop
cs
pop
adc
pusha
mov
xchg
das
das
xchg
test
lcall
xchg
xchg
fimull
pop
inc
fdivrl
adc
ror
testl
jmp
xchg
aad
push
loope
sub
xlat
sub
push
jnp
lds
dec
jb
add
enter
push
mov
cmpsb
sub
push
dec
bound
cltd
pushf
loop
sub
mov
mov
sub
push
cmp
add
mov
or
inc
mov
dec
sub
lcall
notb
cmova
mov
mov
dec
push
stos
std
cltd
insb
int3
adc
stos
pop
add
clc
xchg
js
enter
pop
lcall
aaa
shlb
cmpsb
mov
stc
adc
arpl
lahf
out
push
fxch
outsb
sub
fiaddl
and
add
xor
mov
mov
jne
insb
adc
inc
mov
pop
test
xorl
jp
pop
mov
mov
inc
jne
rolb
imul
lods
add
jns
fcmovnbe
dec
arpl
inc
cmp
mov
push
or
out
add
jmp
mov
and
xchg
loope
nop
mov
je
pop
jmp
push
or
jle
or
daa
mov
in
dec
sub
pop
xchg
push
mov
fsubs
or
xor
jae
push
int3
mov
call
push
movsl
imul
sub
cli
cmp
lret
pop
pop
mov
or
or
aaa
mov
insl
mov
sbb
cli
add
inc
mov
add
push
iret
mov
bound
xchg
push
dec
sbb
fistps
aad
push
mov
mov
mov
lret
mov
cmpsb
lahf
add
iret
jnp
sti
lods
cmp
pushf
mov
xor
push
icebp
fisttpll
add
cmp
jbe
push
insl
cmp
pop
jl
sbb
mov
mov
ficoms
imul
cld
jbe
xchg
pop
out
aas
cmpsb
popf
or
pop
cwtl
into
push
fdivrp
bnd
movsb
push
stos
fidivs
ret
dec
aaa
dec
cmp
cmpsb
pop
xchg
jle
xchg
lahf
notl
fdivrl
jg
pusha
mov
push
out
rcr
inc
hlt
mov
nop
out
mov
roll
pop
js
mov
sbb
cwtl
mov
fidivrs
or
mov
inc
testb
daa
inc
scas
cmp
aam
out
jmp
pop
mov
mov
sti
inc
cltd
outsl
pushl
or
rep
daa
mov
ret
loop
xchg
or
fldt
push
adc
mov
ss
adc
jo
test
mov
inc
addr16
subb
mov
sbb
pop
mov
jns
loopne
dec
repz
cltd
xor
xchg
loope
push
scas
dec
sub
mov
mov
adc
or
scas
pop
lahf
scas
xchg
test
insb
aam
das
xchg
fs
out
shufps
push
sub
adc
dec
mov
rclb
js
orl
sub
or
pop
rcrl
shll
loope
inc
jne
jae
push
pop
xlat
outsb
mov
loopne
outsl
ret
repnz
call
cltd
scas
cltd
stc
mov
adc
mov
ja
and
cwtl
lock
cmp
push
or
les
sti
imul
inc
mov
inc
dec
sub
mov
dec
fidivs
xchg
inc
mov
lods
es
bnd
lods
add
ret
xchg
repz
dec
jb
jns
add
imul
in
mov
dec
and
sub
cmpsb
cmp
iret
pop
fwait
aad
popa
and
mov
mov
pushf
into
mov
xchg
gs
daa
stos
lods
or
xor
mov
or
mov
movb
fcomps
je
mov
rcll
mov
or
jo
xor
lahf
leave
add
dec
mov
out
push
out
pushf
fldt
clc
idivl
in
popa
cmp
pop
shrl
mov
mov
orb
test
rorl
push
sti
inc
in
lret
or
lahf
shl
mov
test
popf
sub
mull
cmp
out
data16
fwait
push
push
lahf
pushl
sub
fs
test
repnz
ror
jns
or
jnp
adc
adc
divb
mov
inc
push
push
pop
or
jno
sti
or
sub
add
lock
cs
imul
aaa
scas
fsts
stos
push
arpl
inc
movsb
jp
mov
out
xchg
pop
adc
pushf
fldt
ss
mov
mov
xchg
mov
test
imul
inc
inc
mov
inc
and
sti
dec
imul
jmp
imul
jle
push
push
push
aad
fisubrl
xchg
insl
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
icebp
lds
sbb
mov
repz
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
