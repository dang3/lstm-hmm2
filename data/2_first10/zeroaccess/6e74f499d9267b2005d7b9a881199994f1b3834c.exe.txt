push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
push
sbb
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
mov
inc
adc
fsubrl
imul
sub
addr16
sahf
in
jl
push
cltd
jecxz
sbb
pusha
inc
gs
xor
leave
and
mov
stos
dec
imul
push
cmp
mov
mov
out
jecxz
popf
js
adc
push
shr
push
jne
imul
xor
aam
cli
cmp
call
push
rcrb
cmp
lock
mov
test
in
xchg
mov
inc
pop
hlt
cmp
add
ss
shl
cltd
adc
and
rcrb
mov
mov
lea
xchg
cmc
add
aam
movsl
cltd
sub
movsl
sbb
mov
mov
outsb
xchg
ss
in
ffree
leave
cmpsl
rcrb
mov
jns
mov
xchg
jb
and
jp
push
imul
repz
data16
xchg
cmp
repnz
inc
ret
push
jb
dec
adc
push
xchg
push
mov
dec
hlt
push
push
mov
nop
xor
jno
mov
ljmp
pop
mov
cld
inc
jae
add
icebp
push
cmpsb
push
mov
ret
adc
daa
jne
jae
movsb
lahf
enter
inc
sahf
stos
dec
dec
or
mov
rorl
and
or
test
push
sarb
out
sti
int3
into
lcall
mov
fsubrl
push
push
sub
loope
sub
xchg
ljmp
dec
testb
and
add
sbb
or
out
xlat
popa
pop
repz
mov
repz
xchg
adc
mov
divl
lods
fldl
gs
fistpll
jl
push
call
or
imul
push
cmp
xor
xchg
lret
fs
and
fsubs
aaa
cmp
xor
scas
cltd
sarl
adc
imul
orl
jl
call
movsb
stos
fcmovu
jns
int
stos
xor
filds
mov
inc
das
call
icebp
jmp
lock
sbb
js
mov
inc
inc
cli
ret
and
pop
push
push
loop
adc
sub
loop
fidivrs
verw
mov
xchg
dec
cmc
jo
sahf
sbb
or
mov
mov
loopne
inc
or
scas
push
addr16
dec
xor
in
push
test
addr16
stc
loop
lret
cmp
mov
pop
fnstsw
scas
ret
loope
xor
cmp
mov
insb
loope
push
push
sub
push
mov
sbb
loope
jbe
sbb
sti
call
sar
lcall
lahf
sbb
int3
mov
ret
mov
mov
loope
sub
lds
and
push
sub
mov
mov
pop
xchg
push
add
test
popf
push
pop
pop
sbb
imul
repnz
xchg
mov
pop
vpunpcklbw
mov
sub
push
mov
dec
out
add
dec
out
cmp
js
neg
clc
adc
rol
lds
mov
sarb
mov
out
jecxz
les
leave
inc
push
les
mov
popa
or
fs
jg
push
cmp
outsl
scas
xor
loope,pn
xorb
mov
push
aas
or
shl
jns
mov
sbb
mov
ret
jl
in
sbb
call
dec
mov
rclb
dec
pop
fiadds
insb
rcr
je
gs
xlat
pop
mov
push
das
sbb
pop
fwait
aad
sub
cmp
movsb
subl
cltd
mov
xchg
test
roll
add
push
push
or
pop
repnz
sbb
mov
andl
or
out
rcr
mov
inc
clc
and
aas
popa
ljmp
add
arpl
aaa
out
adc
xchg
fs
ret
jmp
cs
xor
fbld
mov
shl
pop
pop
jge
subb
shrl
xor
xor
lahf
aad
and
popf
mov
outsl
jae
or
addr16
out
fs
call
stc
mov
sti
sbb
test
xchg
outsl
mov
and
and
mov
aad
icebp
jne
jb
sbb
roll
adc
mov
cld
adc
roll
add
dec
shlb
lahf
inc
in
sbb
imull
in
test
fmuls
pop
sbb
out
inc
iret
les
mov
popa
je
scas
mov
out
clc
cmp
js
cmp
add
mov
arpl
mov
stc
dec
mov
outsl
xorb
and
popf
cmp
dec
mov
mov
ds
mov
outsb
insb
sahf
adc
push
jnp
dec
stos
or
sti
jb
rcrl
out
cmpb
les
sub
das
push
mov
repz
adc
cmp
int3
ficoml
jns
push
add
jae
dec
jmp
push
adc
xchg
jns
jae
das
rclb
lds
cld
fistps
push
inc
loopne
test
sti
pop
lahf
mov
cs
ffreep
loopne
jl
jbe
outsb
rcrl
dec
addr16
je
mov
sar
test
test
into
pop
enter
cli
daa
daa
aas
insl
mov
andl
int
xlat
outsl
mov
xchg
fisubl
scas
fadds
push
sti
adcl
xchg
scas
mov
or
and
or
mov
mov
jmp
les
inc
clc
or
in
jno
jb
xor
pusha
mov
xor
jmp
xchg
push
les
xchg
ljmp
cmp
in
xor
jg
andl
dec
faddl
cmpsl
lock
push
pop
xor
dec
pop
jno
lods
in
jg
shrl
xlat
fcmovbe
jecxz
fdivp
jp
xchg
fmull
mov
cmpxchg
xor
push
sub
mov
cs
dec
cmp
sbb
sub
mov
in
out
mov
jne
and
push
inc
xor
out
loopne
xchg
stc
dec
in
or
dec
jne
mov
mov
int
int
push
dec
cmpsb
lret
rcll
mov
lods
mov
mov
stos
lock
cwtl
je
xchg
loop
add
loopne
add
mov
scas
cli
ret
in
clc
inc
mov
xor
push
pop
push
mov
push
sub
cmp
and
pop
cmpsl
pop
mov
push
fidivs
ret
lahf
popf
test
mov
stc
sti
shrb
pop
imull
add
out
out
xchg
imul
jecxz
add
xorb
mov
jecxz
out
jle
cmpsb
sarl
jmp
daa
adc
cltd
sbb
cmpsb
jo
pop
inc
mov
xchg
mov
lret
lock
push
or
mov
scas
lret
jl
cmp
pusha
call
sbb
mov
add
icebp
pop
inc
dec
out
leave
cs
cmpsb
loope
fcomi
adc
inc
shrl
scas
sub
mov
xor
jge
add
mov
out
pop
push
jns
arpl
jbe
jmp
dec
mov
mov
xor
mov
mov
pop
and
lcall
xchg
clc
mov
dec
cmp
inc
mov
sbb
int3
add
popa
xchg
push
xor
push
fmulp
cmp
popf
mov
imul
mov
mov
push
std
fistl
test
shr
cmp
cmpsb
mov
lods
jb
jne
mov
xor
call
sbb
iret
mov
and
pusha
loop
cmp
push
iret
jne
enter
std
out
inc
push
jns
stc
rorl
aas
bound
aam
in
mov
jecxz
loope
mov
mov
cmpsb
sbb
xchg
cli
jns
pushf
mov
xchg
jns
mov
out
in
rclb
lods
mov
and
dec
xchg
fmul
addr16
inc
sti
sti
je
out
pop
push
gs
lea
mov
lods
aaa
jb
sti
jge
pop
inc
and
enter
movsl
pop
mov
cmpsl
stos
inc
rcr
pop
inc
out
and
ret
push
mov
imul
bound
out
adc
inc
imul
add
push
mov
ljmp
mov
popf
cmp
mov
fiaddl
pusha
cmovg
lcall
inc
fistl
jl
xor
sbb
dec
lcall
jne
dec
push
jns
jns
cmpsb
jmp
ss
mov
xchg
shrl
xor
pop
mov
jne
jl
cmp
idivb
push
int
pop
mov
jecxz
pop
mov
mov
add
shrb
into
data16
xchg
jo
popf
push
ret
sub
jne
mov
jl
daa
ds
add
jo
fnstenv
data16
ljmp
idiv
popf
jno
adc
popf
jle
add
ret
mov
push
inc
and
fstpt
lret
jo
and
xchg
sub
jge
push
into
data16
je
aas
xchg
mov
lcall
fisubrl
adc
jp
arpl
gs
shlb
icebp
inc
push
xorl
mov
xchg
mov
adc
daa
out
jbe
push
lcall
jo
xor
push
fsub
or
xchg
fstpl
inc
call
cld
repz
push
test
cld
ljmp
jl
jl
mov
faddl
mov
inc
std
andl
adc
test
call
mov
inc
jo
push
pop
arpl
shll
inc
sub
idiv
out
mov
sbb
les
xchg
jg
dec
push
fidivl
pushf
or
fistpl
sub
decb
or
or
insb
add
sub
fimull
jp
aad
mov
and
xorl
sbb
xchg
cmpsl
lock
mov
pop
mov
popa
xchg
sub
cli
xor
mov
add
jns
cmpsl
xchg
in
mov
sub
dec
jns
add
push
xchg
xchg
mov
test
in
imul
mov
cmp
loop
sub
lea
jmp
stc
sti
vmread
or
mov
mov
and
mov
cld
sbb
add
adcb
pop
clc
cli
inc
loopne
inc
inc
aas
mov
mov
or
xchg
sbb
fwait
xchg
out
dec
mov
sbb
fsubrs
sti
in
lea
ljmp
add
mov
ds
outsb
push
jmp
in
jp
stos
gs
dec
popa
pmulhrsw
or
and
div
sbb
in
stos
das
pop
dec
jbe
out
and
movsb
sub
xchg
cmp
and
and
push
sub
lret
in
repnz
rcl
add
pop
ja
jmp
les
lods
pop
push
in
shlb
out
xchg
pop
or
jns
stos
loop
sub
sahf
or
into
scas
mov
das
inc
sti
adc
lret
dec
pusha
pop
add
mov
lea
fiadds
ret
imul
mov
in
aaa
add
adc
jae
cmp
mov
popa
lods
je
sub
sarb
or
mov
iret
or
daa
fdivr
xlat
ds
lret
xchg
pop
mov
mov
push
pop
inc
movsl
aaa
push
xchg
mov
add
jp
sbb
sbb
in
adc
and
pop
sbb
bound
inc
cld
aaa
loope
addb
inc
adc
cmp
int
inc
mov
mov
pop
daa
jmp
out
cli
fnstenv
sub
loope
xchg
call
es
push
xchg
js
push
lods
test
dec
adc
xchg
ret
and
stos
lret
es
push
arpl
fcompl
outsb
push
lock
scas
stos
dec
xor
dec
fisubrl
jmp
aam
dec
xchg
mov
fstpl
mov
insb
sahf
addr16
inc
jmp
ja
icebp
and
not
jnp
data16
icebp
xchg
or
mov
js
cmp
mov
cs
jnp
popa
nop
jne
xchg
jp
pop
icebp
pop
mov
sahf
mov
int3
sub
outsl
repz
mull
push
mov
and
ja
das
mov
addr16
fs
jbe
push
jmp
add
sub
mov
mov
sbb
std
jecxz
inc
and
xchg
mov
aam
push
adc
inc
mov
cmpb
push
mov
scas
or
cli
push
xor
mov
jg
push
xor
stos
mov
orl
xor
outsl
adc
mov
cmp
xlat
pushf
xchg
cmp
mov
fldt
sub
sub
inc
fmulp
inc
cs
push
and
jecxz
push
in
fadds
add
cmp
out
enter
jl
in
push
mov
push
ljmp
mov
stc
imul
ljmp
or
incl
outsb
adc
jge
ds
cmp
jmp
mov
pop
xor
aaa
sub
ss
push
fisttpl
xchg
sub
mov
rolb
insb
add
arpl
sub
and
jle
insl
test
mov
sub
xchg
dec
das
mov
xchg
add
out
sbb
mov
and
sub
fildl
fs
stc
enter
psubb
xor
push
loope
adc
mov
sarl
aam
mov
or
repz
je
jne
imul
sbb
dec
push
movsb
fistpl
xchg
or
mov
xchg
ds
cmpsl
in
or
andl
pop
adc
mov
mov
mov
fistpll
xor
repnz
cltd
sbb
sbb
addr16
mov
sub
adc
mov
or
leave
aas
arpl
xor
mov
pop
xor
jg
cwtl
adc
mov
cltd
adc
adc
in
jg
or
push
enter
aad
repnz
lods
bt
cmc
xchg
and
subl
fisubrs
mov
xor
popf
xor
inc
or
and
cli
rclb
mov
xor
ret
or
or
and
dec
mov
fisubl
pop
loopne
sarb
aam
cmpsl
push
cmc
js
fs
imul
xor
pop
les
inc
imul
dec
mov
mov
xor
shlb
xchg
xor
ret
or
rorl
in
mov
jg
mov
xor
adc
sbb
and
cmpsb
pop
mov
test
xlat
mov
dec
xchg
push
mov
dec
and
and
pop
jo
or
sub
mov
mov
sub
cltd
jb
xor
pop
mov
dec
xchg
push
cmc
shr
sub
cmpsl
add
cpuid
flds
dec
loop
imul
xchg
popa
push
push
jecxz
inc
pop
sub
bound
lds
mov
test
xchg
pop
add
dec
push
aas
sbb
xchg
filds
mov
test
xor
mov
adc
shrb
insl
xchg
sbb
sub
or
jl
hlt
pop
adc
mov
pop
imul
dec
dec
movsb
cmpsl
stc
les
mov
ds
in
add
xchg
scas
xchg
shll
sbb
insl
cli
popa
mov
jge
in
hlt
movsl
test
adc
adc
inc
sub
aam
adc
lret
and
dec
out
add
push
stos
test
push
loopne
xchg
outsb
mov
mov
mov
add
outsb
iret
pop
push
pop
aam
add
outsb
ret
pop
mov
pushl
mov
shlb
lods
jmp
push
mov
jnp
xchg
pop
sub
mov
mov
loop
in
jp
sub
pushf
mov
cltd
mov
sbb
sbb
inc
push
imul
shlb
or
dec
mov
stos
jg
add
or
dec
push
mov
sbb
sub
int
repnz
aas
or
inc
loope
sbb
shll
pop
lret
fstpt
and
cmp
arpl
or
push
out
mov
sub
sub
hlt
inc
adc
insl
stc
les
inc
arpl
or
lods
sbb
fisubrl
xor
dec
sub
das
mov
js
inc
jbe
subb
test
xor
addl
push
cld
inc
and
jnp
mov
adc
push
jne
jecxz
ret
or
int
jns
jge
xchg
push
inc
clc
lea
jle
add
enter
or
add
lcall
add
jl
addr16
aaa
fbld
adc
pinsrw
js
xchg
cmp
xchg
xchg
popf
fmul
dec
sub
fcomip
pop
mov
loope
mov
xorb
sti
stos
cmp
lock
jecxz
out
test
scas
aaa
arpl
sub
xchg
mov
push
fcmovnb
and
fucomi
push
push
mov
stos
insl
or
dec
cmp
imul
test
cld
data16
loop
jle
dec
xchg
jae
inc
jno
push
incb
stos
pushf
fstpl
out
in
icebp
sbb
adc
dec
lahf
and
sub
pop
inc
jae
cwtl
jl
mov
stos
pop
sbb
int3
xchg
lcall
or
add
sub
xchg
aad
daa
dec
xchg
dec
mov
iret
or
leave
push
lahf
lahf
xchg
sub
shlb
loop
test
pushf
xchg
loope
aas
stos
xchg
loopne
sbb
adc
test
iret
cmp
sub
inc
push
mov
jbe
jbe
jnp
fmul
mov
cmp
daa
sbb
xor
xor
fcompl
xor
mov
pop
dec
lock
loop
push
mov
scas
xor
loope
xor
mov
mov
sub
daa
add
jae
sbb
aas
inc
inc
pushf
cmp
and
add
xchg
cld
pop
aad
dec
push
test
lcall
or
jb
int3
loopne
jg
inc
rolb
jl
into
mov
dec
fcmove
adc
push
in
mov
dec
dec
lea
ds
push
sbb
xchg
jge
adcl
out
bound
std
xchg
sub
out
push
or
loope
test
or
out
and
add
mov
cmpsb
fmulp
fcmovnb
pop
in
jo
jp
xchg
adc
and
ret
test
bound
fld
je
pop
mov
cli
jae
jle
notl
insl
test
in
or
xchg
or
push
insl
cmp
rcrb
into
fwait
and
mov
jg
je
gs
out
cmpb
xchg
or
pushf
xor
inc
jg
into
out
cltd
out
xchg
inc
pushf
jge
adc
inc
loopne
dec
dec
push
scas
xor
or
or
jo
mov
sbb
mov
sarl
ja
fdivrp
xor
push
mov
stc
adc
push
movsb
ljmp
cmp
outsb
sbb
sbb
dec
jge
mov
into
inc
jae
mov
and
out
das
inc
faddl
subb
pop
shll
mov
test
data16
pop
cmp
cmp
jae
pop
or
push
xchg
loop
mov
mov
popf
push
jmp
lods
pop
ljmp
jecxz
push
push
xchg
mov
mov
pop
jge
or
test
jecxz
ja
sub
push
dec
nop
addr16
lahf
or
or
xchg
jl
iret
out
inc
sbbb
test
inc
pop
cmova
movb
rorb
push
je
test
aad
jnp
pushf
and
inc
mov
pop
test
inc
or
mov
out
adc
inc
std
subl
ret
shl
cli
jno
pop
lahf
aad
inc
xchg
shlb
cmpsl
clc
cmp
movsl
adc
dec
ffree
inc
or
sub
jg
dec
fwait
scas
push
sub
xchg
cmp
test
xlat
test
push
mov
js
aas
mov
test
ds
pop
cli
fstp
pop
mov
inc
icebp
popa
adcb
xor
test
cmp
push
icebp
mov
mov
int
into
lcall
adc
mov
or
sarl
lods
xor
aam
adc
and
add
pusha
in
addr16
xchg
xor
inc
loope
hlt
mov
jo,pt
lahf
out
push
push
pushf
flds
je
pop
mov
movsl
jp
and
sbb
pop
jno
push
mov
rol
jp
push
movsl
lret
icebp
mov
testl
cmp
js
inc
lds
arpl
cltd
gs
cmp
push
out
enter
sub
sub
imul
or
std
out
push
inc
lods
dec
aaa
mov
sahf
jns
mov
scas
sub
add
xchg
sub
pop
mov
jecxz
lds
shlb
xchg
xor
xor
test
xchg
mov
jnp
das
cmp
sahf
fsubrl
aas
movb
test
jle
arpl
testl
sbb
sub
icebp
shl
psubsw
mov
daa
xor
lret
andl
jle
mov
sbb
adc
insb
pop
sbb
orb
adc
daa
bound
mov
int3
or
xchg
js
idivl
xchg
lcall
push
aad
aam
xor
repz
push
imul
jl
dec
nop
dec
fs
lods
ret
lcall
ret
aas
mov
call
scas
jl
pop
push
ljmp
fidivrs
arpl
cmpsl
xchg
repz
or
and
dec
cmpsl
xchg
xchg
mov
xchg
pop
lret
ret
cmp
jb
add
sub
sbb
dec
pushf
push
popa
cmp
sti
fidivrl
lds
and
cmp
adc
cmc
rolb
pop
inc
inc
cltd
mov
notl
dec
inc
xchg
mov
fstps
rcrl
lock
pop
add
xchg
cmp
jmp
cmp
pop
pop
inc
or
mov
cmp
nop
sub
sub
cld
mov
and
mov
xchg
fsubr
and
jb
bound
push
xchg
idivl
cmp
js
loope
push
sub
xor
xchg
call
mov
sub
les
sbb
jecxz
lds
sbb
pop
adc
sbb
and
loope
and
pop
sub
outsb
push
xlat
sbb
inc
adc
shl
fimuls
movsl
sub
mov
test
les
rorl
gs
sbb
or
movsl
lcall
and
adc
es
imul
cld
and
clc
aaa
setnp
jg
and
into
sbb
cld
sbb
call
mov
jbe
mov
iret
loopne
mov
inc
mov
mov
bound
insl
mov
in
xchg
out
inc
inc
sbb
pop
sbb
mov
int3
pop
push
lret
repnz
in
js
pop
jl
cld
mov
scas
pop
push
sub
sbbl
sbbl
pop
xor
cmpsl
pop
loopne
rclb
leave
mov
xorl
push
push
or
adc
jp
out
imul
enter
scas
loope
lret
cmp
dec
mov
adc
add
push
sti
loop
xchg
and
cmp
inc
mov
enter
mov
mov
xor
dec
cmpsl
hlt
xor
test
bnd
add
test
mov
push
mov
add
jmp
inc
push
sahf
fdivr
or
pcmpeqb
sub
lcall
xchg
repz
and
shl
lock
inc
mov
adc
inc
pop
ljmp
xchg
popa
into
aas
mov
dec
dec
scas
sub
negl
out
add
int
inc
pop
out
lods
mov
es
jnp
inc
pop
push
loope
xchg
push
mov
push
jne
or
fstps
dec
pop
iret
push
std
pusha
gs
rcr
cmp
push
sbb
in
movsl
mov
fbld
aad
fiadds
sarb
and
mov
dec
xchg
scas
pop
sub
lahf
lods
dec
xchg
mov
repnz
push
test
or
test
lahf
icebp
xor
cmpsb
lock
jl
les
out
pop
inc
rorl
aam
and
fcmovb
shr
outsb
sbb
push
dec
pop
fwait
lahf
rcrl
fs
movsl
adc
int
jl
iret
mov
adc
test
pop
scas
or
add
dec
adc
bound
inc
mov
push
dec
or
out
add
cmc
inc
jmp
dec
push
sub
out
inc
jno
std
mov
mov
bound
dec
outsb
sub
pushf
cli
adc
add
iret
push
inc
rolb
fwait
neg
and
add
clc
bound
inc
mov
insb
pop
sti
decb
movsb
dec
ljmp
cmp
pop
imul
cmp
cltd
xchg
shll
cltd
mov
cmpsb
sahf
repnz
imull
pop
jle
aas
push
mov
or
iret
lret
imul
sub
scas
das
pop
xor
sub
rcrb
dec
sti
adc
fcomip
in
insb
xor
jno
pop
fldenv
out
loope
mov
xlat
dec
sbbb
stos
jmp
pop
cli
hlt
push
mov
inc
sub
jns
into
sbb
push
imul
xor
mov
test
ret
lea
xchg
rorl
ret
and
stos
out
shlb
adc
sub
sbb
shr
cwtl
add
popl
orb
test
jbe
stos
movlps
push
out
dec
adc
das
lods
out
repnz
in
movsl
rcll
and
pop
mov
mov
lret
lock
sub
lods
sub
loop
mov
xor
xchg
inc
dec
pop
push
out
and
mov
sub
xchg
and
decb
aaa
sbb
xchg
mov
pushf
dec
pusha
mov
mov
repz
dec
fwait
lret
pop
and
sbb
adc
test
in
gs
jno
ficompl
jmp
or
in
sub
or
fbstp
mov
adc
add
dec
xchg
es
ja
flds
scas
xor
shll
mov
jle
xlat
add
shlb
xchg
xlat
jmp
mov
aas
push
test
dec
cld
inc
subb
mov
or
cli
jne
hlt
mov
int
add
lds
add
lahf
das
scas
fwait
lods
ja
cmp
mov
lcall
punpckhwd
push
inc
xor
repz
sbb
adc
sub
rcl
sbb
nop
xchg
cltd
inc
movsl
cmpsl
adcb
xor
stc
movl
push
in
xor
xor
xchg
or
ficomps
clc
iret
jnp
fidivrl
insb
mov
xlat
dec
push
sbb
xchg
cmpsb
lods
cmpsb
outsb
xchg
jo
mov
pop
or
push
add
xchg
in
in
scas
dec
mov
adc
lds
mov
mov
out
lret
mov
pop
shrb
lcall
fidivrs
shll
xchg
sti
mov
sub
or
loope
and
dec
fstpl
in
xlat
mov
jno
and
cmp
pop
scas
roll
mov
mov
or
ret
jns
jno
stos
into
shl
jne
iret
jnp
mov
int3
ret
dec
lea
cli
scas
or
xor
inc
xchg
cld
jmp
jns
inc
push
popf
add
pushf
mov
insl
cli
dec
mov
in
and
sbb
js
ss
jae
inc
imul
xchg
pop
mov
movl
fsub
loope
fisubs
pop
in
shll
jne
arpl
xchg
dec
movsl
bound
aas
jne
inc
pop
clc
mov
lods
push
jle
dec
shll
hlt
push
jl
addr16
pop
fcom
pop
in
mov
iret
xor
cmc
and
xchg
fidivs
jecxz
mov
inc
xchg
mov
xchg
mov
jae
pop
in
xor
out
and
xchg
mov
cmpb
mov
xchg
pop
mov
dec
sbb
stos
jmp
push
mov
push
orl
mov
dec
add
lret
inc
push
aad
das
sarl
xchg
in
mov
jg
fimull
int3
call
out
xlat
sub
loopne
in
xchg
out
sub
dec
or
imul
cmc
call
aas
sahf
enter
cmc
push
sub
into
cwtl
andb
clc
aaa
aaa
sub
xorb
daa
das
nop
sub
int3
inc
out
fisttpll
dec
cld
fwait
leave
dec
jbe
arpl
add
out
mov
xchg
fld
lds
mull
cmpsl
cwtl
xor
inc
shl
int
addl
idivb
sub
xchg
int3
dec
popf
pop
cmp
aam
sahf
xor
xlat
into
add
mov
outsb
lret
mov
in
cmpsb
in
clc
imul
fcom
clc
mov
xor
jbe
movsl
add
ror
cmp
push
pop
cli
sub
push
pop
xor
lds
push
out
into
mov
adc
fisubrs
test
addr16
je
and
push
bound
ds
popf
nop
cmc
add
pusha
scas
dec
lds
es
or
mov
outsl
sbb
int
mov
sub
fstpt
int
mov
pusha
scas
mov
lret
in
sahf
mov
sbb
inc
scas
mov
push
mov
insl
out
rcl
pop
fcoms
jp
sbb
push
push
adc
test
insl
js
adc
push
xchg
push
imul
int
fwait
mov
add
add
push
push
mov
add
icebp
push
into
mov
and
push
scas
adc
push
iret
pop
mov
adc
jb
push
adc
mov
lret
push
mov
fs
movsb
xchg
shrb
dec
insb
mov
cmpl
adc
xchg
xor
mov
xchg
mov
subl
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
mov
jnp
hlt
pushf
jnp
and
inc
jns
dec
dec
mov
mov
push
mov
sub
jg
cwtl
out
add
jmp
sub
daa
pop
decl
and
repz
push
stos
jns
xor
mov
inc
clc
inc
or
aad
dec
inc
out
push
cmp
pop
mov
mov
jecxz
popa
dec
lret
ds
inc
arpl
in
out
pop
xchg
jmp
pop
push
push
pop
jns
add
mov
test
lea
dec
stos
js
jge
mov
mov
push
int
lret
int
mov
sub
fmull
xor
and
test
sti
push
addr16
dec
sbb
fistpll
push
clc
cld
test
or
ss
xor
add
pushf
fwait
push
mov
adc
jno
getsec
cld
pop
mov
and
lahf
xchg
nop
fs
insl
into
jecxz
dec
cmp
dec
movl
pusha
sti
cwtl
lahf
push
js
stos
sub
xchg
cltd
xor
ds
out
push
cmpsl
insb
xchg
fldt
mov
mov
stos
mov
and
push
in
sbb
lds
lahf
imulb
push
scas
jae
outsb
es
cs
shlb
cmp
loop
leave
in
js
cltd
cmp
sbb
ljmp
adcl
mov
add
out
inc
cld
dec
and
aas
dec
scas
gs
addb
es
inc
ss
shr
mov
inc
xor
rcrb
or
mov
mov
loop
mov
mov
cwtl
pop
jmp
xchg
test
inc
mov
sbb
pop
dec
loopne
xorl
lods
shll
xor
mov
jo
cs
xchg
jno
add
mov
test
push
pop
xchg
mov
and
fcomp
mov
out
xchg
scas
xor
shl
pop
jb
adc
cmp
btc
daa
movsb
push
pop
xchg
sub
stc
fiadds
mov
pop
xchg
dec
imul
loopne
sub
jle
pop
std
xchg
or
mov
xor
dec
dec
cmpsb
aad
int
out
jo
dec
cmp
mov
stos
mov
arpl
cmp
dec
in
es
xchg
loopne
mov
jp
pop
enter
xor
in
mov
push
out
fldl
shl
aad
inc
das
and
cmp
int3
repnz
rcl
and
and
arpl
pop
fs
repnz
pushf
add
adc
imul
in
fisubrs
fsts
fld1
inc
adc
fbstp
add
dec
mov
xchg
and
xchg
push
and
clc
push
push
sub
inc
push
daa
roll
movl
sbb
pusha
sbb
add
pop
sti
dec
movsl
jecxz
sbb
adc
mov
das
pusha
repnz
or
inc
mov
fwait
pop
adc
mov
pandn
dec
je
js
fwait
lret
pop
out
mulb
lret
sahf
arpl
xor
mov
call
shll
into
arpl
push
mov
xchg
xchg
insb
in
sbb
jae
cld
test
mov
and
dec
hlt
cmp
mov
jp
xchg
push
mov
mov
ja
aas
lods
sti
test
mov
pop
out
add
mov
scas
dec
hlt
lcall
das
cmp
sahf
inc
adc
and
mov
xor
or
test
and
add
cmp
jne
adc
mov
pop
shl
dec
push
mov
fsub
pop
cwtl
popa
dec
and
cmpsl
enter
sbb
popf
jg
lea
stc
daa
mov
dec
add
lret
xchg
aas
sti
arpl
shr
inc
cli
cmp
rcl
aas
cltd
mov
out
mov
mov
adc
sbb
or
push
sub
or
lret
push
cs
cmp
sbb
mov
or
loopne
popa
xlat
mov
jo
mov
in
push
xchg
gs
mov
mov
shlb
sbbb
mov
sti
mov
je
add
loopne
mov
gs
lahf
push
daa
mov
insl
adc
jl
mov
das
lret
and
pop
jg
repnz
dec
or
aas
ja
out
fldl
stc
push
adc
mov
scas
aam
dec
fcom
xchg
leave
dec
stos
iret
xor
pushf
adc
cmp
or
pop
dec
leave
enter
es
sub
iret
adc
push
test
xor
mov
sub
inc
lods
fcomps
and
add
mov
mov
enter
adc
dec
inc
mov
jg
jno
jae
add
cmpl
mov
mov
xlat
bound
jmp
push
mov
shll
ss
popa
dec
popf
push
stos
xor
push
cmp
ljmp
shrl
je
hlt
addr16
mov
clc
mov
dec
xor
push
incl
xchg
pop
in
lock
mov
jnp
mov
lods
mov
sub
movsl
add
jecxz
je
add
cwtl
cmp
fs
pop
xchg
js
xchg
or
es
jmp
jg
daa
cwtl
cs
jge
inc
dec
ja
xchg
dec
xchg
insl
dec
sub
aaa
shll
subl
mov
out
aam
mov
stc
push
adc
ja
xor
fiadds
cmc
psadbw
ss
jmp
enter
jns
push
jne
in
test
sbb
iret
stos
xchg
mov
add
pop
xor
add
loop
dec
in
or
sbb
fcomi
popf
addr16
inc
data16
adc
mov
les
push
cmp
xlat
nop
movsb
sbb
sub
push
hlt
xchg
pop
loope
notl
in
mov
rcrb
pop
into
inc
stc
or
cwtl
aas
and
and
dec
test
iret
jo
hlt
add
popf
jbe
add
inc
jmp
int3
outsl
sbb
push
cwtl
add
and
adc
je
jg
je
push
add
and
repz
lods
shll
mov
imul
and
xchg
inc
xor
inc
sbb
mov
jbe
fs
insl
imul
xor
roll
stos
lods
imul
cmp
cmc
jp
adc
mov
or
lods
fisubrs
mov
js
mov
aam
fisttpll
arpl
outsl
add
mov
inc
cld
clc
mov
mov
hlt
clc
in
mov
shlb
insl
or
pop
cmp
cmp
je
les
mov
xor
inc
out
mov
jnp
sahf
cmpsb
push
shl
sbb
vmulsd
jb
adc
sub
shll
sbb
scas
repz
andl
dec
test
mov
or
mov
orl
jnp
stos
cwtl
data16
cli
in
scas
movsb
ret
push
jb
xchg
data16
bound
into
jl
leave
pop
repnz
jns
jae
dec
dec
fwait
mov
testb
aas
mov
ss
int3
movsb
cld
and
rcll
xchg
lret
or
jge
movsb
push
push
loopne
stc
mov
and
mov
dec
lret
cmp
into
push
mov
ficoms
int
mov
sub
xlat
popf
inc
lahf
dec
in
cmp
loope
jge
push
leave
ja
mov
inc
mov
movsb
xchg
shrl
incl
mov
adc
add
js
call
divb
inc
inc
mov
lea
into
and
ljmp
nop
mov
pop
shl
mov
data16
hlt
in
adc
jne
js
jp
nop
movl
scas
lret
sarl
or
fisubrl
push
add
push
pop
testb
push
fisubs
pop
jle
push
cmp
lret
pop
stos
loop
dec
dec
add
imul
jle
cmovb
push
and
add
push
je
dec
mov
pop
ja
mov
sbb
stos
repnz
imul
nop
pop
fdivrs
xchg
outsl
jno
test
nop
xlat
cmp
bound
or
inc
test
push
fidivs
dec
mov
pop
inc
in
int3
lahf
cwtl
jno
push
popa
jns
mov
dec
fxam
xchg
mov
xor
popf
jne
sahf
scas
mov
dec
add
adc
jb
scas
push
stos
adc
loopne
inc
je
xchg
adc
in
push
adc
jb
test
jbe
sbb
sub
jg
or
ss
leave
jp
dec
les
mov
mov
popl
lret
add
xchg
popf
jg
iretw
lods
or
push
jns
int3
clc
popa
in
and
fbstp
pop
sub
mov
mov
in
mov
les
in
push
dec
lods
test
add
stos
out
insb
sbb
shrb
mov
cmp
adc
push
lret
cmpb
and
lea
pop
sarl
rolb
adcl
movsl
xor
in
repz
dec
into
ret
shrb
jb
adc
push
pop
rol
nop
lret
or
repnz
cmpsl
inc
xor
fnsave
and
inc
fst
pusha
nop
inc
xchg
dec
xchg
and
repz
mov
sub
adc
mov
add
pop
sbb
andb
int3
dec
mov
pop
jecxz
jl
add
sub
adc
movsl
xchg
jno
or
xchg
jle
lods
das
jmp
jns
in
sbb
testl
ret
outsb
rcll
dec
mov
mov
movsl
cmc
iret
adc
addr16
push
or
cmp
dec
andb
xchg
add
popl
aas
mov
mov
pop
outsb
int
aaa
nop
rorb
incb
lret
out
icebp
test
cmp
fldcw
jl
mov
out
fcoms
rcrb
gs
push
test
add
dec
rcr
test
or
ljmp
inc
es
aas
sub
add
mov
dec
dec
sbb
xor
push
add
into
mov
push
mov
jge
xor
or
or
cmpsl
test
fstpl
stc
sbb
xor
sbb
stos
sbb
cld
mov
sub
and
xchg
shll
in
cmc
adc
mov
jg
xchg
mov
dec
sahf
roll
mov
popa
xchg
jo
daa
mov
sbbb
mov
inc
cmpsl
pop
idiv
mov
ss
and
inc
not
jbe
arpl
mov
sti
mov
flds
inc
adc
aaa
xlat
sbb
jne
movsb
ja
sar
aas
adc
test
std
push
add
int3
test
out
sbb
pop
mov
mov
sahf
jge
xchg
xor
xchg
sub
mov
imul
stos
and
ret
enter
push
adc
mov
jns
out
test
pop
xchg
subl
aaa
dec
out
cmc
cmp
cmp
adc
cmp
fimuls
mov
jne
ror
popa
lods
insl
pusha
push
inc
popa
inc
mov
dec
xlat
sbb
push
lret
loope
lret
fsubr
or
cmp
xchg
mov
iret
in
push
leave
add
jns
pop
mov
push
add
xchg
dec
mov
and
add
js
clc
xor
es
adc
mov
in
push
ss
scas
ljmp
pop
repz
xorl
sbb
fnstenv
sbb
inc
fcomi
pushf
out
xchg
faddl
jl
and
movsb
lock
push
sub
test
imul
enter
in
pop
fdivr
cmpsb
fcom
ja
imul
pop
arpl
jmp
movsb
rcr
pop
and
incl
pop
fucom
sbb
std
push
mov
push
sub
call
es
sbb
xor
add
pusha
jg
dec
repnz
dec
mov
dec
popa
popl
xlat
rorb
sbb
adc
mov
add
push
stos
adc
sub
lret
ljmp
pop
jae
das
dec
xor
mov
xchg
cmp
mov
mov
loopne
cmpl
xor
jmp
loope
or
mov
sub
ret
xchg
cmc
jne
and
test
jecxz
divb
pop
loop
adc
leave
std
mov
ds
push
andl
je
fmuls
mov
xor
xor
stos
insb
mov
jg
xor
push
or
mov
or
popa
mov
stos
enter
pop
dec
fwait
pushf
jb
jb
cs
xor
lods
mov
rclb
pop
pop
addl
aad
pop
mov
insl
adc
jmp
and
out
bound
enter
packuswb
fadds
xchg
cmp
lret
jg
and
inc
sbb
xchg
lret
cmpl
mov
pop
cmpsb
inc
add
mov
xor
add
cmp
xchg
cmp
sbb
mov
mov
call
sub
sbb
decb
arpl
jl
xchg
mov
scas
cmp
outsl
dec
mov
adc
sahf
outsl
lcall
push
fildl
xor
pop
test
xchg
cwtl
leave
dec
fadds
fstpl
movsb
aam
mov
sbb
cmp
sbb
les
cmpsl
rclb
orl
cmpsb
adc
int3
sbb
xchg
leave
and
push
mov
mov
pop
cmpsl
leave
push
mov
mov
mov
imul
lahf
sub
adc
bound
push
cmp
pop
stos
or
insb
cld
test
roll
fisubrs
in
jl
fidivl
lods
mov
insb
aaa
and
lcall
cwtl
pop
std
jle
xchg
int
decb
or
sub
cmc
call
jno
dec
pop
xchg
lcall
jge
xchg
clc
popa
xchg
xor
xchg
lcall
scas
add
sbbl
into
xchg
cmpsb
or
add
stc
imul
dec
sbb
xchg
xchg
mov
fistpl
mov
adc
aam
jmp
out
jb
out
inc
into
sub
test
stos
xchg
add
mov
push
cmp
mov
fmuls
divl
pop
mov
outsb
mov
or
inc
dec
lea
loopne
lret
cmpsl
or
mov
lahf
test
int3
dec
arpl
pop
in
inc
mov
mov
popf
imul
lret
icebp
fwait
xor
int
jno
inc
jl
sti
addps
je
or
sub
decb
cli
adc
les
and
inc
sub
adc
movsb
mov
xchg
dec
mov
mov
loopne
test
and
fwait
imul
mov
cmpsb
outsb
push
push
adc
gs
fst
jp
mov
mov
fs
sbb
cmp
or
pop
push
and
or
cld
insl
add
movsl
push
pop
cmp
imul
jnp
js
mov
dec
popf
int
outsb
xchg
cmp
push
repnz
pop
iret
jge
lds
dec
mov
fwait
adcb
cld
negl
mov
xlat
push
jmp
mov
and
testl
cmpsl
es
es
xchg
dec
aas
hlt
lret
stc
sbb
mov
lret
inc
add
aad
adc
mov
cmpb
mov
push
mov
sub
or
sbb
dec
jnp
ret
movsl
xchg
adc
ds
jnp
ja
loope
jnp
mov
xchg
in
jge
psrad
ja
cwtl
imull
mov
add
jge
fldl
adc
mov
and
mov
push
and
aad
sbb
rcll
enter
dec
mov
add
mov
dec
loope
pusha
iret
dec
sti
xchg
sub
ret
stos
inc
les
test
arpl
jno
in
mov
cmp
mov
scas
mov
daa
testl
imul
cmp
pop
or
sarl
mov
in
mov
jnp
mov
call
into
in
mov
dec
mov
out
aaa
imul
ljmp
add
dec
xchg
lcall
sahf
icebp
mov
jno
sub
push
mov
popf
ficoms
pusha
pop
imul
sub
sbb
push
lock
and
add
sbb
aas
sub
adc
add
jne
rolb
leave
mov
sub
dec
inc
bound
push
nop
or
cmp
ja
cmp
pop
leave
add
xchg
lds
cmpsb
cmp
pop
push
sub
mov
jmp
or
adcb
push
mov
rcrl
pop
xchg
inc
cmc
pushf
sub
shll
dec
ja
sbb
mov
jle
pop
mov
leave
aaa
jo
xor
push
sarb
in
lods
les
mov
frstor
add
mov
imul
stos
or
xor
jno
outsb
aas
sbb
pop
rolb
lret
lea
aam
sahf
lods
push
xor
add
mov
dec
imul
xchg
sahf
insl
xchg
sub
or
push
fstpl
cmp
or
adc
mov
jbe
sbb
nop
je
xchg
dec
popa
xchg
xchg
test
push
fmuls
or
sahf
popf
cmc
ret
pop
dec
mov
and
ja
inc
stos
xor
and
std
cwtl
sahf
popa
sbb
mov
pop
push
xor
shlb
iret
lcall
subl
sti
cmp
mov
xor
insb
mov
xchg
iret
mov
insl
jo
push
xor
xchg
mov
lods
jo
lea
repz
clc
push
shlb
enter
and
jne
subl
xor
scas
xor
pop
xchg
pop
adc
addr16
cmp
push
jnp
insb
std
cmp
xor
xchg
shl
fs
pop
stos
push
test
or
cmpsl
cmc
fildl
pop
jne
xchg
decl
imul
cmpb
mov
adc
pop
leave
inc
js
jg
js
call
out
in
cmpsl
leave
cmp
js
int
fistpll
out
mov
sub
scas
pusha
add
sub
xchg
inc
xchg
aam
out
xor
xor
xchg
mov
repz
nop
sti
incl
cs
insl
and
pushf
imul
push
inc
add
mov
sub
rclb
popa
xlat
sbb
aam
fisubrs
xor
sub
ja
in
mov
outsb
sbb
jne
or
xchg
pushf
psraw
or
xor
fcoms
mov
in
mov
sub
jecxz
das
dec
push
mov
push
cmc
ljmp
inc
or
jo
xor
out
mov
lret
shll
jb
pop
sub
and
and
dec
imul
push
fnclex
pop
data16
cld
mov
add
mov
jae
das
cmpsl
aam
mov
test
inc
dec
and
push
and
cwtl
test
inc
xor
cmpl
push
lcall
xchg
incl
mov
adc
mov
aad
push
ljmp
es
cld
push
ja
sub
or
jl
arpl
insl
into
jle
shlb
pop
test
inc
cpuid
push
push
mov
pop
cs
dec
js
jae,pn
lds
mov
xchg
js
scas
lret
or
leave
push
lahf
push
scas
cmp
hlt
lock
pop
das
push
mov
jle
mov
stos
data16
or
call
std
rclb
jbe
mov
inc
lods
sbb
push
int3
aad
test
adc
xchg
test
lret
dec
jmp
pop
pusha
mov
adc
out
arpl
push
fstps
jno
pop
lret
clc
mov
iret
lock
mov
ret
sub
add
imulb
xchg
js
cmc
mov
xor
scas
pop
stos
out
mov
mov
jo
xchg
cltd
js
push
adc
push
cmp
sbb
push
addr16
or
mov
imul
ja
nop
decl
push
mov
dec
insb
addr16
xor
insb
popa
vpmaxsw
faddl
jns
xor
jo
mov
cmp
data16
sub
mov
pop
addr16
and
dec
mov
cltd
pop
dec
lahf
fistl
mov
xchg
mov
sbbl
je
and
fistps
mov
cli
in
pop
dec
cwtl
jns
cmp
adcl
sub
in
or
mov
lahf
nop
cmpsl
cld
dec
out
pop
out
cld
fisttps
es
pushf
mov
cmp
std
outsb
cli
mov
dec
add
mov
add
pop
xchg
mov
mov
mov
mov
dec
or
shl
push
mov
idivb
push
push
aaa
cmp
mov
or
push
scas
shl
inc
clc
sarb
pop
dec
jbe
sarb
sub
mov
cwtl
test
sub
sbb
insl
pop
push
stc
xor
or
push
inc
lock
mov
fcoml
xor
pop
lret
mov
mov
dec
mov
das
mov
cwtl
and
fildll
adc
push
xor
test
and
imul
repnz
and
cmp
into
and
jecxz
jge
fucom
mov
test
scas
mov
sbb
ret
std
popa
in
jp
and
lods
push
fisttpll
add
mov
xchg
inc
mov
lods
movsb
cmp
inc
mov
adc
adc
test
loop
mov
idivl
push
loop
sti
inc
adc
incl
cltd
cmpsl
jge
sbb
push
inc
mov
cmp
mov
push
lds
and
clc
cmpsb
std
faddp
cwtl
inc
push
mov
mov
dec
jge
sub
out
inc
popa
jmp
scas
lock
inc
lret
bnd
jno
or
test
and
shlb
mov
pop
sbb
stc
fst
xorb
or
add
bound
inc
jge
ret
sub
cwtl
pop
adc
jno
sub
dec
and
pop
mov
lods
pop
xchg
out
push
test
cmp
lcall
mov
rclb
test
pop
out
fcom
mov
pop
in
adc
pop
adc
jmp
mov
sub
sbb
ret
lahf
inc
int3
pop
clc
insl
push
arpl
xor
or
out
mov
pop
orl
aad
sub
daa
xor
repz
sarb
fstpt
jle
dec
data16
pop
jne
popa
mov
mov
cmp
cmpsl
xor
and
mov
sbb
scas
pop
and
mov
or
pop
inc
mov
rcr
js
add
adc
inc
jbe
cltd
ja
xchg
and
vrsqrtps
xchg
subb
mov
daa
in
push
or
nop
xchg
incl
mov
pop
xchg
mov
in
testb
cmp
stc
in
je
dec
flds
ret
je
mov
xchg
pop
addb
pusha
push
dec
ss
mov
inc
jne
sti
cmc
mov
cli
push
fildll
js
xor
lcall
lret
pop
cmc
jo
pop
adc
aam
xor
je
xchg
jecxz
or
mov
rolb
jnp
inc
xchg
mov
popf
ficompl
sahf
inc
push
call
shrd
ret
das
xchg
sbb
mov
xor
cmpsb
sub
shl
lock
sub
fwait
mov
push
je
add
loopne
lods
clc
adc
mov
and
clc
lods
mov
rclb
xchg
js
and
pop
mov
jns
pushf
stos
sub
mov
push
sub
outsl
clc
arpl
push
pop
iret
xchg
daa
xchg
push
jnp
mov
push
lods
sahf
sbb
push
in
mov
adc
clc
shlb
ja
leave
fisubl
pop
mov
hlt
push
incb
inc
inc
clc
aam
xlat
shl
mov
stc
inc
js
testb
pop
push
movsl
add
test
imul
sbbl
jle
xchg
cmpsl
pop
add
in
ss
not
or
repnz
pop
or
fldl
xchg
sahf
push
push
push
sub
sbb
sti
push
pusha
fnstenv
cmp
sbb
insb
mov
and
nop
xchg
icebp
push
lods
dec
in
sub
mov
push
sbb
enter
inc
fnstsw
icebp
cmpsl
dec
adc
cmp
inc
mov
and
jne
aad
movsl
rcll
dec
into
in
mov
in
loope
xor
xlat
cmp
test
and
lret
insl
outsb
xor
jmp
xchg
mov
cs
inc
push
sbb
cmpsl
push
sahf
mov
cmp
lcall
xchg
inc
imul
in
cmp
rolb
insb
dec
out
aaa
insl
cmp
mov
sti
lahf
in
push
push
data16
pop
movsl
sbb
xor
xchg
movsl
loop
negb
bnd
mov
fwait
cmpsb
xor
jle
stc
or
inc
movsb
lods
js
xor
divb
outsl
or
add
lahf
mov
mov
fsubrs
jnp
fwait
enter
aam
ja
xor
jmp
xor
mov
je
lock
push
mov
push
mov
out
mov
pusha
and
shrb
lock
adc
js
fsubr
inc
jo
adc
hlt
mov
push
std
iret
xchg
scas
sbb
and
leave
pop
push
lahf
xchg
add
mov
das
cwtl
and
xchg
and
clc
divb
mov
insb
jns
mov
push
jge
or
xchg
pop
push
cltd
mov
cmp
mov
dec
dec
in
pop
mov
jl
jae
std
and
mov
mov
inc
sbb
mov
aas
lock
clc
movsb
dec
sub
or
addr16
add
dec
adc
stos
push
out
das
pop
mov
fstp
xorl
xchg
push
jge
jb
daa
movsb
fcomps
inc
xor
cmp
cli
pop
sbb
aaa
stc
jnp
cmpsb
sub
movsl
icebp
sbb
push
int3
outsl
loope
push
fcmovne
inc
sub
inc
test
sub
clc
adc
mov
repz
xchg
test
into
bound
flds
sub
cmp
clc
pop
fimuls
popa
scas
push
cltd
cmpsl
aas
out
pop
adc
faddp
xchg
sahf
sub
out
pop
out
sub
or
cwtl
pop
test
sti
jle
and
cmp
sbb
fldt
push
cs
jb
mov
pop
sti
pop
cli
adc
insl
push
out
sbb
xchg
les
stos
mov
xchg
mov
sub
mov
pop
cmp
push
and
pop
rorl
insl
stos
push
movsl
out
pop
cmpsb
xor
or
in
add
or
mov
push
stc
aas
out
cmp
push
add
loope
jmp
mov
nop
outsl
mov
xor
dec
push
xchg
dec
sub
out
xchg
push
cmp
xchg
pop
inc
mov
movb
sub
add
fdivrs
xor
mov
rcrl
inc
jo
inc
mov
dec
popf
cmp
add
or
out
icebp
adc
enter
dec
jmp
push
cs
lahf
clc
sub
lods
ljmp
sbb
add
cmpsb
dec
stos
imul
adc
ja
sbb
pop
push
mov
sbb
xor
jge
call
add
ss
jne
movsb
xchg
jp
lods
cmp
shlb
aad
lahf
insb
shl
push
stos
cmpsl
and
mov
push
dec
out
nop
jmp
sbb
adc
jo
push
adc
imul
dec
push
jae
pop
ljmp
insb
scas
add
xchg
push
roll
in
xchg
mov
scas
inc
jp
pop
inc
inc
mov
int3
aaa
jns
push
mov
shrl
pop
cmp
fildl
xchg
add
adc
xchg
xor
xchg
loop
test
xchg
aaa
mov
or
fsubrs
sarb
jno
gs
mov
mov
mov
std
inc
adc
or
push
sub
ds
add
push
repz
fwait
inc
inc
andb
notl
xchg
gs
sub
pop
test
xchg
call
je
jns
fistl
push
icebp
push
mov
sarl
mov
test
ljmp
testw
jmp
iretw
lea
out
cmp
pop
mov
das
adc
pop
inc
dec
insl
lret
mov
out
mov
cmc
iret
out
std
in
cmp
bound
adc
aam
xchg
xor
imul
or
mov
jne
ja
loop
mov
sbb
in
inc
inc
push
loope
xchg
dec
lea
movsl
adc
or
out
repz
add
cmpsl
repz
test
inc
orb
bound
dec
fsubrs
dec
mov
roll
push
dec
inc
mov
add
setno
and
je
imul
sub
jae
mov
xchg
fwait
xor
push
aad
popf
sub
inc
jne
dec
enter
ret
push
xorl
in
stos
sbb
mov
sbb
int3
mov
call
mov
jmp
jns
and
and
xchg
repz
fs
dec
jmp
popa
rolb
xor
sub
jnp
pop
notl
mov
mov
cmp
loopne
aas
fimull
stos
sub
pop
mov
xor
pop
mov
in
push
mov
push
push
repnz
pop
ret
and
ljmp
cwtl
jb
pop
clc
cs
es
add
lods
mov
adc
pop
sarl
cmp
jmp
sbb
rorl
xor
push
mov
cmp
mov
mov
stos
sarb
dec
mov
jbe
sub
scas
out
movsb
push
popf
jmp
push
push
test
add
fstpl
lret
pop
cmp
cli
mov
xchg
movl
subb
sar
sbb
xor
jp
mov
pushw
andl
inc
jae
jb
ficoml
ja
pop
pop
cli
jb
fmul
jbe
in
popf
mov
push
aaa
mov
mov
cld
cs
fucomip
leave
or
mov
mov
outsb
add
les
pushf
xchg
xchg
push
xchg
fdivp
das
adc
out
popf
fisubrs
mov
inc
fists
loop
mov
aas
xor
outsb
jno
mov
idivl
shll
mov
jle
xor
push
inc
mov
or
push
jmp
popa
mov
adc
mov
cmp
hlt
mov
mov
cmpsb
js
pop
cltd
fists
insl
mov
mov
cmp
inc
in
es
movsb
mov
mov
add
add
cmp
shlb
lret
push
jns
push
inc
dec
or
ficoms
sub
jecxz
arpl
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
aas
hlt
sbb
jno
jnp
hlt
pushf
jnp
mov
repnz
in
xor
mov
add
in
push
xchg
push
lret
jl
ja
cmp
leave
add
jno
mov
push
aas
movsb
pop
cmpsb
xchg
mov
push
jle
lahf
imul
das
cli
jle
clc
jp
pop
dec
jo
jge
sarl
aas
inc
mov
shr
fisttpl
aam
test
and
push
jae
sub
lock
inc
inc
loope
mov
fwait
out
add
cli
lret
leave
adc
fucomip
jp
push
inc
mov
pusha
scas
test
jecxz
movsb
dec
push
mov
pop
flds
enter
and
push
rol
pushf
xor
aas
and
xchg
cltd
lds
mov
fldl
fnsave
pop
cmpsb
stos
loopne
xchg
lds
test
lea
lods
ja
arpl
sub
or
pushf
xor
outsl
ret
fmuls
cmp
enter
push
jno
xor
sub
push
cmc
jne
pushf
dec
pop
fcmovnu
sbb
xchg
stos
push
sbb
repnz
int
sbb
movb
popa
adc
shr
cltd
and
xor
cmpl
xchg
shll
call
cltd
ds
mov
xchg
push
or
fnstsw
fnstenv
mov
cmp
sub
cwtl
leave
aaa
mov
xor
jne
cmp
out
mull
jnp
xchg
ljmp
notb
insb
dec
out
divb
pop
cmpsl
bound
popa
vpmaddwd
std
stos
in
or
test
cmp
dec
stos
ret
es
pop
int3
in
xor
push
lds
clc
pop
sbb
adc
cs
or
stos
lcall
mov
jno
sbb
cmp
out
push
aas
mov
mov
mov
jecxz
incl
xchg
pop
cmp
and
push
or
mov
mov
lock
adc
daa
add
lret
stos
cmp
add
inc
sbb
std
add
lcall
adc
xor
or
inc
jno
sbb
shlb
inc
add
popf
lea
jno
push
mov
jnp
cmp
dec
shll
xchg
push
xchg
jns
jmp
js
loope
push
lret
cmp
sub
pop
lds
rcrb
leave
or
cmp
push
popf
movl
lcall
loope
sbb
xorb
pop
aas
cmp
fdivrl
and
or
and
xor
xlat
push
pop
xchg
push
sarb
cmp
mov
and
cs
jmp
pushf
cmpxchg
push
leave
and
shl
pop
fstps
cmp
push
xchg
mov
adc
cmpsl
inc
pop
mov
es
sbb
cmp
sahf
dec
enter
lds
daa
ss
mov
fcmovne
je
and
inc
sub
sub
inc
push
loop
dec
xchg
xor
in
or
das
jge
add
das
adc
mov
push
sub
jge
cld
outsb
push
cmp
mov
mov
mov
push
je
scas
bound
js
or
inc
and
push
out
or
add
adc
add
aad
flds
jno,pt
rclb
std
es
popa
cld
inc
jp
clc
sbb
les
sbb
sub
rorl
je
adc
arpl
inc
rcr
lret
int3
mov
cmp
mov
aaa
enter
popa
pop
lcall
cmpsl
add
cmp
push
das
xchg
icebp
bound
aad
ja
xor
jbe
adc
xchg
std
fcomip
sbb
ljmp
jecxz
sub
movsl
adc
loope
shrl
ret
loope
lret
xchg
into
gs
push
pop
inc
insl
imul
add
push
push
jb
arpl
xlat
lret
aaa
mov
popf
fldenv
fwait
push
jae
adc
adc
out
shll
jg
mov
push
in
sub
sbb
cli
std
test
lods
stos
leave
sub
inc
fisubrl
xchg
inc
repnz
sub
jne
inc
cli
xchg
pop
add
out
mov
xchg
push
pushl
fcomps
out
gs
mov
mov
jnp
ljmp
cmp
fwait
push
iret
xor
clc
and
adc
mov
ss
mov
lea
addr16
mov
fdivrl
adc
inc
jno
push
ret
out
mov
mov
mov
sub
adc
mov
push
push
jb
sub
cmp
lahf
fidivl
pop
mov
fldenv
push
pop
dec
insl
arpl
lret
mov
out
jecxz
jno
loop
cltd
add
movsl
inc
add
negl
jne
xchg
iret
xor
xchg
push
scas
addl
outsl
add
mov
aam
push
adc
in
mov
loopne
dec
cwtl
bound
pop
jne
mov
inc
repnz
jecxz
gs
addr16
bound
pop
popa
icebp
sbb
lahf
pop
inc
xchg
or
lock
push
inc
xchg
xchg
insb
test
test
or
pushf
subb
pusha
insl
cmp
gs
sub
and
emms
movsl
add
pop
push
outsb
push
add
test
push
out
dec
push
adc
outsl
outsl
mov
and
mov
stos
sbb
dec
dec
inc
jg
std
add
xlat
sahf
in
adc
push
ret
jl
test
dec
fcomp
mov
scas
imul
sub
adc
sub
in
pop
inc
in
addw
xchg
push
std
xor
pop
push
mov
fndisi(8087
loop
sbb
and
mov
xor
and
push
mov
mov
fbstp
dec
xorl
sbb
ss
jo
push
aam
sti
pop
xchg
jb
cmpl
leave
mov
xor
fnsave
lods
sbb
xor
xchg
cmpsl
sbb
mov
xchg
inc
idivl
int
loope
xchg
and
add
xor
push
cld
rcl
and
adc
fists
xor
jb
or
sbb
xchg
lods
lds
push
sti
jae
fwait
jg
and
dec
and
adc
and
pop
inc
loop
jae
push
cmp
dec
xchg
adc
push
les
xchg
icebp
shll
mov
mov
jo
pop
xchg
fisttpll
or
xorl
adc
push
loop
mov
and
lret
loopne
outsb
test
outsl
jae,pt
repz
push
xchg
pop
je
out
adc
test
push
je
adc
mov
and
pop
fs
add
mov
add
ljmp
mov
js
jmp
or
aaa
rolb
das
test
rcr
scas
pop
addr16
sub
mov
sub
test
gs
mov
pop
sti
sub
dec
cltd
scas
dec
fsubr
dec
fisubrl
adc
mov
mov
add
pop
fucomp
shl
cld
pop
hlt
sarl
pop
jge
inc
add
arpl
or
inc
or
lock
cmpsb
aam
nop
jle
push
xor
jnp
enter
test
mov
fidivrs
nop
sahf
jno
xchg
movsl
dec
or
in
mov
push
dec
stc
ljmp
inc
imul
and
mov
jl
fsub
lret
pop
test
sub
cmp
insb
lret
lret
mov
cmpsl
sbb
pop
add
xchg
jp
aad
xor
cmp
mov
nop
aaa
fsts
adc
mov
in
mov
dec
jecxz
cwtl
pusha
sbb
mov
dec
arpl
mov
lcall
pop
jae
pushf
icebp
xchg
push
lret
cmp
insl
lret
lret
test
and
inc
ffree
lahf
jb
dec
inc
ss
fdivs
sub
das
sbb
movsb
mov
inc
xchg
and
pop
out
jmp
xchg
jne
push
xchg
adcl
push
jns
mov
paddd
pop
xchg
lret
mov
nop
push
mov
lret
out
roll
and
jle
and
cmp
push
inc
in
dec
and
enter
testl
shll
pop
mov
and
push
sahf
test
mov
jmp
and
mov
pop
or
add
dec
lcall
inc
out
and
sbb
push
hlt
lods
dec
pushf
sahf
adc
jno
xor
fnstcw
mov
test
mov
popa
push
aas
pop
jge
lahf
pop
test
nop
aad
push
mov
mov
shl
sub
mov
jns
stos
pushl
arpl
lret
dec
or
fsubs
lcall
jns
inc
push
xchg
iret
mov
rorb
cs
and
cmp
fistps
mov
mov
nop
movsb
daa
in
popf
fwait
mov
jl
jl
js
sbb
xchg
jecxz
out
rcrb
divb
sub
cmp
sub
insb
mov
pop
out
into
adc
insb
push
jae
dec
sub
arpl
push
addr16
mov
frstor
cs
movsl
je
push
fadd
sub
cmc
mov
cs
jge
or
xchg
push
ja
adc
loop
fmul
sbb
or
dec
or
push
xchg
loopne
dec
jmp
or
mov
pop
fcomps
int
adc
leave
inc
sbb
negb
repz
push
jmp
aad
xor
push
lcall
jg
outsb
iret
xchg
pop
mov
cmpsb
fists
ret
dec
std
aam
in
sbb
jmp
xor
jae
lock
xchg
cmp
mov
xor
ljmp
pop
hlt
dec
xchg
loopne
xor
push
and
sub
shll
pusha
dec
adc
in
or
add
sarb
fldenv
in
enter
daa
cwtl
and
lock
std
adc
xchg
movsl
dec
xor
jns
in
pop
ret
imul
sbb
mov
push
insl
shrb
sub
sub
or
push
enter
rcll
inc
mov
sub
sub
inc
adc
add
data16
mov
hlt
call
push
shrl
xor
pop
and
xchg
aad
pop
xchg
xor
stc
mul
shl
cmpsb
adc
mov
scas
std
lcall
push
dec
adc
repz
xor
sub
lcall
sub
inc
push
xor
pop
ljmp
xlat
sti
add
add
lret
push
in
jne
dec
mov
cmpsb
pop
js
fwait
push
push
jle
fnstcw
adc
xchg
lock
in
cld
adc
add
into
nop
pop
movsb
lahf
cmp
xchg
icebp
push
xor
pop
insb
imul
ja
shlb
test
nop
dec
cli
dec
adc
dec
xchg
mov
imul
mov
es
mov
stos
sub
or
jbe
sbb
iret
out
negl
mov
pop
mov
add
loop
mov
and
sahf
lods
outsl
movsb
push
sub
jl
or
shlb
int3
popf
sub
mov
mov
inc
push
push
pop
addb
sub
pop
adc
or
lret
xor
mov
mov
notl
testb
lds
call
aad
mov
cmp
addb
lret
lret
in
xchg
in
jge
xchg
test
mov
jl
jne
out
xor
jl
in
xchg
popf
add
sbb
stos
stos
cmpsl
iret
and
dec
mov
addb
lret
jae
andl
sbbb
sub
mov
pop
adc
jecxz
in
mov
test
lahf
addb
sbb
test
movhps
leave
in
mov
repnz
fidivl
inc
popa
aam
pop
mov
loope
push
int
xchg
xor
outsb
mov
dec
decl
adc
leave
lahf
push
mov
cs
in
insl
mov
fidivrl
inc
xchg
movsb
add
or
fcmovnb
out
in
test
repz
adc
xchg
mov
dec
dec
std
jge
push
lret
mov
int3
loop
por
outsl
inc
in
gs
mov
int
icebp
xchg
data16
lds
fsubr
adc
ret
sub
fs
sub
addps
add
sbb
xchg
js
xchg
dec
test
cmpsb
loopne
test
flds
adc
dec
mov
mov
and
xchg
or
jle
push
es
xor
xchg
jg
xor
or
sbb
imul
test
inc
repnz
inc
and
xchg
sahf
cmp
push
sbb
into
test
jecxz
sbbl
mov
xchg
addr16
inc
test
cmpsb
push
or
or
pop
leave
in
stos
jecxz
les
sti
cmp
pushf
fildl
jns
mov
mov
add
mov
xor
inc
cmp
lcall
sbb
cltd
neg
mov
fcmovne
scas
jge
fsubp
sub
xor
jg
mov
cmc
or
test
jno
mov
adc
ljmp
push
outsb
jle
jae
stc
jb
fmuls
cmp
mov
aas
lock
sbb
dec
ljmp
xor
and
daa
pop
xlat
inc
mov
leave
or
mov
push
dec
inc
xlat
cmpsl
clc
outsb
scas
ret
xor
addl
sub
les
pop
xchg
cmpsb
gs
shll
dec
sbb
xchg
xchg
imul
dec
sbb
push
cmc
xchg
stos
lea
inc
icebp
ror
cmc
mov
cmc
loopne
xchg
add
orb
cli
or
mov
pop
mov
cwtl
add
ljmp
stc
mov
aam
popf
xor
scas
push
pop
cwtl
xchg
addb
test
add
and
mov
sbb
cli
pop
lcall
mov
dec
rcl
jne
mov
scas
outsl
xor
sbb
and
cli
je
adc
cmpsb
cs
mov
ljmp
sarb
icebp
stc
adc
popa
pushf
pop
ret
stc
adc
and
sbb
icebp
jns
mov
test
sub
dec
ja
push
test
rcl
push
lods
fdivl
scas
aaa
inc
jb
lds
jge
push
mov
inc
popa
out
add
adc
mov
and
pushf
sub
mov
jb
cltd
inc
push
mov
xor
xchg
sbb
add
lret
add
sahf
js
imulb
xor
ret
loope
call
mov
fprem
dec
fwait
jmp
pop
imul
xchg
insb
lret
or
idivl
push
mov
xor
test
sub
and
enter
and
xorl
add
ja
mov
cltd
arpl
xchg
sub
ret
and
mov
scas
loop
mov
push
cmp
xor
ss
mov
and
notl
sbb
iret
in
test
inc
ret
cs
mov
lcall
sub
shrl
or
mov
icebp
xchg
std
shr
jg
xchg
popf
int3
popa
sub
pop
push
pop
xchg
pop
lea
jp
cmp
mov
das
std
xchg
clc
mov
pop
ret
dec
add
and
fbld
scas
xchg
pop
mov
fstpl
insb
mov
xchg
andl
mov
stc
xchg
loope
jg
jmp
sub
les
popf
xor
mov
ficomps
inc
ss
loope
ret
fsts
xor
sti
sub
movsl
ds
xor
and
cld
cmp
inc
call
push
fcmovnbe
test
bound
fadds
ret
popf
fnstenv
push
lret
inc
aas
and
in
adc
icebp
vpshab
mov
scas
sub
mov
lret
mov
adc
repz
lret
jl
daa
aad
cltd
lahf
out
cmp
rcl
push
lods
cmpl
mov
bound
xchg
jecxz
out
test
into
rorb
mov
jecxz
js
test
xorl
repnz
lret
std
loop
sub
pusha
stos
jg
inc
sar
push
mov
mov
mov
and
xor
jge
or
xchg
aaa
loop
xchg
xchg
int
inc
xor
jns
shrl
pop
outsl
pop
cmpsl
xorl
xor
stos
mov
aas
sbb
cmp
and
jne
jecxz
lcall
push
das
xchg
jecxz
jmp
outsb
push
loopne
dec
lds
jle
jle
scas
xor
add
fmull
aas
je
pop
xlat
in
xchg
xor
cmp
ljmp
xchg
push
and
and
jecxz
jecxz
push
insb
dec
cmp
imul
sti
push
dec
add
mov
outsl
js
dec
jl
dec
mov
mov
lret
mov
push
adc
add
mov
sub
jg
adc
arpl
mov
call
xor
mov
shr
inc
stos
adc
or
in
ret
imul
jp
enter
push
daa
inc
mov
push
leave
add
loopew
in
aas
fwait
pushf
fwait
lcall
fisubl
sub
fcmovnu
and
xchg
lahf
push
repz
mov
and
lods
add
std
pop
jbe
inc
xchg
cmp
imul
inc
xor
in
in
lret
xlat
add
test
xor
xchg
push
jo
daa
mov
mov
adc
push
test
js
add
dec
or
fidivrl
jne
aaa
fsubrs
arpl
xor
fistpl
das
popf
and
addb
mov
imul
and
jle
push
cmp
icebp
out
xchg
dec
cmovp
fildll
xchg
aam
xor
fsubl
shl
inc
inc
sbb
pop
mov
mov
cmc
push
fwait
mov
xor
test
dec
scas
lcall
scas
xchg
cmp
pop
fldl2e
xchg
mov
repnz
jo
bound
xchg
xchg
lds
pop
or
les
in
mov
inc
sbb
scas
cmpsl
in
xchg
movsl
sti
into
mov
rcrb
push
mov
out
and
rorl
mov
xor
dec
push
in
jae
addb
int
data16
std
inc
push
loop
jo
lret
sub
adc
xor
push
sub
jl
mov
out
test
loope
scas
cmp
push
push
popf
add
push
je
xorb
popa
adc
dec
arpl
int3
dec
add
cmp
push
push
xchg
sbb
mov
sbbb
out
enter
or
fsubrp
stc
test
jae
push
jl
nop
push
sbb
and
xchg
mov
outsb
rcrl
pusha
shr
xlat
mov
jo
lock
pop
inc
push
gs
push
cmc
jl
jo
push
jnp
inc
insl
sti
inc
mov
lea
daa
dec
hlt
sbb
sub
imul
pop
loope
add
jbe
mov
testb
lods
outsl
cmp
test
outsl
push
xor
add
jae
jmp
outsl
xor
mov
sub
pop
mov
sub
fistl
add
insl
out
or
ss
fnstcw
xchg
in
movsb
mov
push
cli
xcrypt-ecb
cmpsl
iret
jnp
fimuls
test
mov
fisttpll
addr16
loopne
xchg
repz
xchg
mov
pop
mov
movlhps
dec
mov
clc
test
xor
sbb
cmpsb
dec
mov
sbb
add
jle
ljmp
adc
out
inc
arpl
call
mov
xor
add
jns
ss
jno
stc
lock
in
inc
stos
xchg
mov
insl
sti
xorb
mov
iret
rcrb
dec
cwtl
xchg
dec
outsb
jmp
xchg
enter
adc
cmp
mov
sub
xor
pop
fmuls
pop
lods
roll
lret
ror
jmp
lods
outsl
push
icebp
cmp
mov
mov
out
ret
jno
cmp
mov
mov
add
jae
negb
cmp
inc
xor
test
jo
out
or
push
cmp
scas
jecxz
sarb
ja
ja
je
dec
sbb
call
mov
cmpl
add
mov
scas
adc
int
mov
repz
js
arpl
shl
jbe
data16
out
sub
inc
in
int3
cli
inc
das
stc
insb
mov
push
sahf
adc
push
outsb
je
xchg
lea
or
mov
push
adc
inc
add
lret
inc
arpl
jmp
push
incl
push
push
or
add
inc
cmp
jbe
mov
add
repnz
roll
roll
data16
mov
sbb
scas
fmul
imull
jmp
mov
sbb
mov
pushf
out
mov
fistl
lods
fists
or
sbbb
in
test
cmpsl
cli
inc
push
daa
call
out
pop
stos
call
std
mov
sbb
and
fwait
push
lds
daa
jmp
dec
jp
lea
cmp
repz
or
test
xor
pop
popf
in
jae
cmp
adc
adc
jp
xchg
cmpsb
jp
jbe
and
mov
sbb
aad
sbbb
out
mov
jno
inc
int
shl
gs
cmp
loopne
or
loop
mov
inc
jb
jmp
xor
inc
mov
shll
mov
lahf
or
push
jl
mov
popl
push
dec
insl
leave
adc
pop
mov
loope
lret
aas
cmp
lock
popa
hlt
notb
cmp
add
insb
adc
mov
in
jnp
andl
xchg
loopne
mov
cmp
pop
in
insl
cltd
in
cmp
imul
popf
adc
leave
inc
mov
xor
in
test
shl
mov
jmp
test
cmpsb
ds
inc
or
push
fildll
pop
out
mov
bnd
or
test
notl
push
in
ret
les
inc
imull
add
shrb
mov
out
inc
dec
or
jne
cmpl
xchg
outsb
ljmp
out
fsubl
insb
add
cmp
test
or
push
lods
ret
jbe
push
push
fsubrp
ds
mov
push
add
xor
cmc
and
ja
fistps
dec
mov
in
mov
push
xor
cs
mov
fprem1
mov
push
stos
pop
ljmp
or
add
inc
and
je
add
jno
sbb
test
mov
not
ret
or
and
add
push
data16
enter
lret
in
lock
jl
pop
and
lods
dec
mov
out
inc
inc
xchg
mov
daa
cwtl
jne
imul
aas
lret
mov
lods
jo
sub
adcl
lahf
push
cmp
aam
cwtl
mov
pop
add
loopne
xchg
sub
lret
sbb
mov
popf
jns
add
and
gs
push
out
cmp
outsb
pop
dec
mov
jle
imul
and
sbb
pop
lds
cli
mov
enter
loope
inc
cmp
sar
push
push
clc
fisttpll
mov
cmpsb
adc
jp
mov
popa
outsl
mov
sub
xor
ljmp
xchg
pop
xchg
lods
or
dec
jbe
fldcw
cmpsb
rolb
sub
scas
dec
stc
outsl
sti
fidivs
or
nop
sub
push
sub
jle
push
or
scas
pushl
stos
andb
lods
xor
mov
clc
test
pop
cmp
xchg
rolb
mov
pop
xchg
dec
cmpsl
pop
mov
ds
add
mov
and
pop
scas
kortestw
inc
xchg
dec
loop
les
mov
cs
mov
decl
jge
pop
es
mov
rorl
xchg
out
push
jle
mov
lock
idivb
loop
ret
in
aaa
imulb
xchg
ja
jmp
xchg
xchg
outsb
or
xchg
fmull
lret
lret
pushl
push
push
adc
sbb
insb
cmp
mov
push
pushf
sbb
shll
out
lds
cmp
mov
lea
xchg
cltd
stos
scas
gs
sbb
aad
add
mov
enter
jg
pop
gs
xchg
sar
sbb
gs
scas
inc
ja
mov
jne
call
mov
mov
test
ja
jge
mov
nop
mov
daa
pop
bound
or
mov
call
into
pop
mov
cltd
hlt
fcomp
inc
ja
push
xlat
cmp
cmp
into
cli
mov
cmp
clc
stos
insb
fcomip
jmp
jecxz
cli
add
aad
dec
adc
dec
cmp
and
jg
mov
inc
dec
ret
adc
cmp
jne
popf
je
push
adcl
stos
shll
jle
dec
bsr
xchg
faddl
repnz
inc
mov
int
jmp
in
xchg
sahf
sub
les
push
clc
bnd
mov
jmp
in
push
shll
jne
out
movsb
mov
mov
out
fs
cmp
mov
sbb
mov
ljmp
cs
popa
push
outsb
mov
cmpsl
outsb
or
jb
adc
sub
imul
adc
stc
add
das
inc
imul
stc
mov
adc
hlt
xor
aam
lods
js
or
sbbb
aad
jle
fsubrs
push
or
fs
xchg
pop
cli
out
pop
inc
cmc
cmp
and
gs
lds
scas
cld
not
and
ss
enter
xor
scas
jnp
mov
add
pop
push
inc
cmp
addr16
pop
dec
dec
jne
sbb
sub
xchg
cmc
int
movsl
xor
clc
arpl
fstl
iret
jno
inc
cmc
push
jg
jae
mov
push
scas
stos
xchg
nop
leave
lods
divb
stos
pop
loope
call
xlat
leave
xchg
lret
xchg
stos
jp
notl
lods
dec
mov
dec
push
adc
inc
push
and
adc
mov
popa
ret
jecxz
mov
testl
enter
add
or
jnp
jne
push
outsb
add
push
mov
rclb
sub
lcall
mov
add
ret
std
je
dec
mov
ffreep
cmpsb
xor
imul
roll
inc
cmp
ljmp
cmp
push
fucomi
dec
lahf
lds
movsl
cmp
xor
sbbb
mov
pop
lcall
outsl
mov
sub
xchg
push
sbb
test
jge
cli
psubusb
dec
cwtl
mov
lds
pop
mov
xchg
fcoms
fcomps
inc
mov
hlt
scas
inc
shlb
aas
xor
ret
gs
cli
aam
gs
enter
push
or
mov
fidivrs
jle
addr16
inc
xor
xchg
sub
lds
fwait
fwait
les
cs
xchg
out
pop
mov
adc
test
imul
jl
jmp
xor
ljmp
sub
out
bound
addl
test
xor
lds
sub
aaa
ret
dec
int3
data16
insl
dec
and
pop
fidivs
inc
les
icebp
cltd
mov
shrl
sbb
lods
mov
pop
mov
mov
es
int
fs
jns
fists
dec
xchg
jle
pop
sub
mov
or
xchg
mov
dec
loop
sub
or
cli
jno
fisubrs
imul
sub
jp
ret
inc
iret
test
add
rorl
inc
jnp
mov
dec
popa
stos
mov
adc
mov
cs
and
mov
sub
sub
ss
icebp
stos
inc
mov
test
jl
in
or
aaa
adc
inc
push
jae
fstps
pop
cmp
adc
fadds
jge
xor
mov
mov
fisubl
cld
addr16
or
mov
cmc
subb
in
push
std
cmp
adc
jno
insb
adc
adc
adc
adc
sub
cmpsb
icebp
adc
sub
cmp
rolb
imul
pop
jg
and
or
add
arpl
mov
dec
shl
in
or
mov
sub
mov
mov
lock
jbe
enter
mov
mov
jp
ss
shlb
aas
inc
xsha256
cmpsb
push
xlat
addr16
inc
out
nop
pop
out
add
cli
sbb
sbb
inc
popf
fidivrl
cmp
jo
xor
dec
push
pop
icebp
mov
movsb
xor
or
stc
sbb
mov
rcr
aaa
inc
daa
movzbl
xchg
ror
jmp
dec
gs
pop
mov
lret
add
es
push
imul
ljmp
insb
mov
push
into
mov
push
pop
mov
mov
repnz
les
xchg
jae
add
jg
popf
les
adc
jnp
cmp
mov
aas
mov
sbb
cld
scas
mov
xor
jno
sub
and
and
loope
mov
add
push
hlt
imul
aad
mov
mov
xor
in
sbb
enter
in
pop
lea
les
lods
lock
imul
stos
mov
js
xor
cmp
add
mov
and
jnp
xchg
jmp
icebp
ret
loope
mov
dec
xchg
movsb
sbbl
loopne
xor
repnz
jne
add
das
movsl
test
sbb
rorb
push
outsl
push
es
mov
jae
out
jne
outsl
les
jecxz
mov
enter
mov
or
hlt
and
xchg
pop
enter
jg
and
jge
insb
popf
xor
sahf
xorl
clc
mov
jno
outsb
xchg
push
mov
fadds
mov
or
cli
jle
loop
adc
jnp
icebp
cltd
push
add
ljmp
lds
sub
pop
in
in
out
inc
jae
das
jb
sub
adc
adc
or
inc
sbb
mov
jl
loop
cmp
data16
popa
pop
sarl
cmp
jge
xor
add
fildl
xor
add
fwait
cmc
mov
jae
adc
mov
jns
jecxz
pop
adc
and
mov
dec
clc
inc
fdivrl
xchg
adc
sbb
jae
mulb
push
add
popa
fmul
mov
jbe
mov
stos
scas
or
shr
testl
call
repz
cwtl
dec
lds
inc
pop
xor
adc
imul
imul
mov
jbe
sar
fistl
xchg
inc
adc
leave
int3
xchg
adc
js
andl
repnz
xorl
pop
xor
cwtl
test
mov
sbb
rcll
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
lret
pusha
ljmp
jnp
push
lods
or
out
sbb
std
nop
out
aam
inc
js
inc
push
ffree
lods
fwait
addr16
jb
mov
fisubs
mov
push
in
fstpt
mov
enter
sti
ret
test
icebp
repnz
lea
pop
mov
fcomip
in
xchg
mov
pop
lahf
in
xchg
stc
iret
bswap
movsb
add
xor
xor
mov
sub
adc
cmp
dec
sbb
add
rcll
pop
jne
push
in
scas
aaa
pushf
insb
in
and
xor
loopne
mov
inc
pusha
loop
xchg
lock
stos
jnp
push
xchg
push
xchg
adc
repz
test
movsb
bound
xchg
int3
or
leave
leave
jne
movsl
jnp
idivl
icebp
or
or
jge
sub
sub
pop
pop
movsb
push
daa
lods
or
push
test
jg
into
fs
mov
mov
xor
pusha
push
fmulp
jno
jge
nop
xchg
dec
inc
insb
lods
mov
or
cmp
fs
push
sti
sbb
bound
add
mov
arpl
aam
cwtl
addr16
and
push
push
mov
movsb
fs
sahf
les
jo
mov
cli
mov
inc
in
fwait
js
outsb
shr
push
testl
cs
lahf
hlt
rcr
mov
call
daa
pop
les
test
jle
cli
loopne
cmp
cmpsl
inc
scas
loopne
lods
int
xchg
cmpsl
jns
mov
lock
jb
clc
rsm
jmp
dec
pop
mov
lds
scas
arpl
xor
cli
cmp
scas
sar
fcmovbe
mov
pop
jp
lea
add
jmp
pop
lret
xchg
inc
xchg
add
in
jp
shrb
cld
push
cs
lahf
mov
repnz
sbb
movsb
in
jge
mov
fcmove
jbe
sbb
lods
jge
stc
out
insl
stc
iret
pop
xlat
xchg
notl
loopne
inc
inc
add
int
push
pop
outsl
into
xchg
jg
cmp
out
xor
xchg
inc
or
outsb
or
stos
or
loop
mov
push
xor
arpl
hlt
pop
dec
into
xor
std
mov
lret
leave
and
aas
stos
in
test
mov
pop
fsubl
inc
cmp
pop
dec
sub
std
mov
subl
setl
cs
loop
push
dec
ljmp
je
outsl
cmpsl
mov
outsb
lds
xor
js
and
sub
jnp
bnd
push
filds
cli
popa
push
adc
sub
sbb
xor
cmp
test
lret
lock
lcall
or
ljmp
ljmp
add
sbb
shr
popf
stc
mov
lret
sbb
mov
fdivr
xchg
bound
fisttpl
roll
ficomps
or
xor
jno
add
int
sbbl
pop
xchg
into
adc
callw
call
mov
pop
or
outsb
push
push
inc
add
and
in
in
mov
in
sbb
and
pop
cmp
vpcmpgtw
popf
xchg
sbb
mov
dec
lcall
mov
enter
push
push
ja
xchg
out
scas
lds
adc
fcomi
adc
jg
push
mov
and
xchg
add
mov
mov
jg
xchg
daa
xor
ret
bound
pop
inc
lcall
dec
mov
push
cmp
shrb
mov
vpunpckhbw
jne
out
lret
mov
shlb
int3
shlb
adc
xor
push
sbb
sbb
inc
shl
rolb
pop
push
or
jbe
xor
leave
jbe
mov
mov
call
sub
insb
pop
arpl
cmp
sbb
out
xchg
xchg
push
js
stos
js
add
hlt
stos
fdivr
inc
cmp
inc
ljmp
mov
mov
icebp
cmp
jge
loope
nop
dec
jb
ljmp
pop
mov
cmp
in
dec
and
inc
sarl
pusha
loope
shl
sbb
lea
xchg
jne
mov
jae
xorb
dec
imull
adcl
scas
sbbb
cmp
nop
xor
dec
jle
test
jmp
xchg
sbb
loopne
mov
inc
pushf
push
mov
adc
xchg
cld
fs
test
sbb
bound
cmpsl
cli
jb
call
es
jp
out
sbb
xchg
dec
jl
rcrb
or
scas
xchg
mov
or
daa
cmc
xchg
pop
pop
sub
pop
jae,pt
cs
inc
adc
jne
ficomps
pop
jno
mov
std
mov
repnz
jle
cmp
pushf
xor
mov
cmpsl
loope
cmp
push
cld
adc
sti
repnz
xchg
imul
mov
insb
adc
cmp
or
push
fwait
xchg
bound
xor
out
sti
cmp
cmp
outsb
aam
sti
test
cmp
and
or
xchg
or
pop
xor
sub
xchg
or
incw
fidivrs
push
in
add
adc
sub
push
sbb
in
aas
xchg
mov
outsb
adc
mov
fld
adc
dec
mov
inc
sbb
cmp
jg
mov
xchg
xor
mov
jbe
or
inc
ds
jae
insl
insb
or
sbb
inc
adc
loope
in
fldenv
test
push
insl
mov
inc
movsb
scas
addr16
add
mov
and
cltd
test
lds
scas
daa
sahf
cs
lea
dec
ljmp
push
add
xor
mov
test
dec
ja
sbb
imul
loopne
inc
or
fcompl
movsl
or
xor
shl
scas
clc
xchg
jmp
fcomip
mov
jecxz
popf
push
pop
call
jecxz
mov
or
cmp
ret
or
ljmp
cmp
repnz
cmp
lret
and
lds
mov
sub
out
addr16
pop
sti
cmp
mov
ljmp
insl
enter
shrl
dec
adc
ret
pop
cmp
inc
xchg
sbb
mov
test
addr16
lds
mov
nop
repnz
cmp
lock
cli
stos
fmuls
xchg
and
and
rolb
dec
sbb
xchg
test
push
rcl
sbbb
cmc
das
xchg
enter
dec
inc
ds
jns
and
or
lret
rol
cmp
arpl
and
in
fs
js
jmp
jo
mov
xor
adc
dec
dec
clc
mov
out
xorl
into
lock
xchg
mov
ret
cmp
jl
jmp
shr
pop
hlt
adc
imul
lahf
jl
pusha
mov
mov
cmpsb
negb
sbb
adc
jp
movsb
cmc
adc
xchg
subl
mov
push
inc
aas
mov
data16
stos
jl
push
mov
inc
push
push
xor
push
outsb
jp
andb
gs
sbb
jbe
jnp
sbb
ja
ret
std
xor
andb
adc
mov
jg
xor
and
lahf
ds
imul
lcall
movsb
in
pop
into
dec
xchg
leave
ds
dec
mov
test
imul
pop
cmpsb
repz
sbbb
xor
mov
rcr
mov
pop
inc
hlt
inc
add
jge
in
xor
push
fisttpl
enter
gs
cmp
bound
dec
inc
jnp
loop
xchg
outsl
lret
inc
and
jle
sub
stc
add
jno
lahf
lock
pop
mov
dec
orl
mov
fistpll
mov
push
mov
popf
jne
jb
aam
repnz
mov
push
push
mov
test
inc
out
imul
pusha
scas
inc
pusha
mov
push
push
iret
cmp
pop
addb
inc
std
and
sbb
out
dec
addr16
fsubl
out
fildl
fimuls
jp
xor
add
sbb
jp
dec
add
fstpl
add
clc
jo
mov
sahf
fwait
roll
inc
in
push
sbb
pop
or
jae
xor
push
mov
mov
sahf
mov
sub
push
inc
push
sbb
mov
sbb
inc
mov
xorl
and
mov
sbb
mov
clc
xchg
in
arpl
out
iret
test
pop
pop
nop
cmp
imul
xchg
xchg
cwtl
imul
aam
pusha
pop
cmp
add
cmp
sar
mov
shll
xor
js
maxps
mov
mov
pop
ja
add
aam
mov
mov
sub
lret
in
movsb
cmp
lock
dec
add
sbb
add
inc
fists
add
ja
xor
push
dec
jno
mov
pop
sub
out
mov
lock
add
push
xor
jp
adc
subl
cmp
mov
mov
lret
and
call
mov
pop
pop
out
stos
repz
popa
and
mov
outsb
add
sub
mov
popa
mov
cs
pop
jecxz
subb
fcmovnb
mov
mov
int
mov
push
push
out
in
add
shl
mov
jge
xor
sub
xor
addb
mov
add
in
sub
fldt
mov
repnz
jno
sub
sub
push
push
cmp
sbb
sahf
movsl
adc
lods
mov
push
or
out
outsb
nop
cmpsb
mov
inc
mov
push
repnz
adc
push
and
sbb
push
rorl
stos
outsl
pop
fistl
out
int3
push
pmaddwd
xchg
push
cmpsb
jbe
subb
push
cmpl
lods
aas
fwait
mov
dec
fstps
clc
dec
fsubrp
add
mov
xlat
push
lds
imul
xchg
icebp
xor
jb
out
adc
cmp
xlat
xchg
sub
add
test
mov
jecxz
push
mov
xor
xor
jl
adc
adc
add
inc
sbb
sbb
fsubs
mov
movsb
and
jae
out
cmc
stos
fs
adc
push
cltd
sub
xlat
mov
cmp
jl
and
push
scas
out
mov
out
adc
cmp
or
fstpl
hlt
sub
lret
scas
fmulp
jg
fistpl
lods
out
ss
fcomps
or
cmp
xchg
inc
add
xchg
adc
push
xorb
inc
pusha
cmp
notl
cmp
pop
jae
in
es
insl
fsubs
push
xchg
jmp
xchg
or
jecxz
and
in
sub
push
jae
ficompl
aas
push
call
pop
fmul
jle
and
push
scas
adc
or
loopne
jb
xchg
inc
loopne
call
sahf
lcall
jle
inc
rorl
xchg
mov
add
test
xchg
and
fwait
out
sbb
xor
dec
inc
pop
jbe,pt
outsb
inc
fwait
and
push
pop
shll
push
in
jge
or
fwait
pop
sbb
jle
mov
popf
add
sarl
jbe
inc
movsb
inc
fucomip
hlt
pop
sahf
pop
aam
add
push
rorb
aaa
outsl
jb
pop
adc
lahf
sub
jecxz,pt
hlt
mov
jns
dec
gs
lods
jbe
adc
lret
cmp
xor
cmpsb
jb
out
js
sbb
push
push
les
pop
lret
push
aam
fwait
mov
jbe
lcall
mov
jns
or
lret
adc
xchg
gs
fidivrl
out
fildl
adc
test
ss
xchg
xor
out
pusha
xchg
cli
and
in
rcrl
jns
idivl
clc
mov
xchg
into
push
outsb
daa
cmp
call
add
pop
nop
fstpl
mov
out
pop
sbb
es
clc
cmp
mov
push
bound
mov
jnp
enter
bound
dec
mov
or
addr16
pop
adcb
jle
sti
pop
call
or
push
repz
iret
mov
fisubs
int3
negb
out
ror
aad
movsb
mov
mov
sbb
gs
in
lock
add
mov
aaa
push
data16
mov
mov
mov
mov
sbb
xchg
push
dec
jne
jo
scas
xchg
and
or
mov
out
arpl
mul
and
rolb
cs
sub
push
mov
jno
cmpsl
daa
cmc
fmuls
and
and
rolb
pop
mov
repz
ds
subl
pop
sbb
inc
sub
or
xchg
pop
cmp
push
dec
dec
fcom
inc
pop
jge
pop
xor
dec
add
lds
pushaw
out
popa
mov
pop
sbb
adc
mov
repnz
inc
push
inc
inc
mov
push
pop
or
lock
mov
movsb
add
inc
xorl
pusha
aad
shrl
stc
and
rclb
inc
sbb
push
push
jge
xlat
push
mov
in
pop
inc
cmp
push
into
je
cmp
pop
sbb
repnz
or
pop
or
cld
mov
inc
xchg
push
push
xchg
stos
push
jmp
add
or
ss
scas
mov
fwait
mov
ret
mov
fmuls
cmp
lods
lea
mov
jb
adc
pmulhuw
xchg
xlat
out
faddp
mov
fstpl
mov
pop
xchg
out
repz
adc
push
inc
test
insb
in
aas
push
subb
pop
shrb
pop
jp
jle
xchg
fs
and
xchg
pop
push
cld
movsl
in
pusha
adc
aam
jge
lods
in
test
out
popa
xor
arpl
in
outsb
lods
stos
stos
or
jg
mov
push
test
test
push
pop
and
xchg
cmp
dec
jmp
pop
imul
repz
cmp
cmp
cld
inc
loope
cltd
cld
or
ja
xor
xchg
stc
push
mov
cmp
insb
mov
push
jno
pop
cmp
sbb
push
push
mov
and
push
and
dec
push
test
jl
jb
rcr
dec
dec
xor
inc
sar
cs
dec
cwtl
int
ja
push
icebp
xchg
adc
cld
push
ret
lahf
mov
scas
ret
repz
stc
pop
mov
mov
dec
test
sub
into
sbb
jno
insb
jge
push
pop
mov
sbb
dec
stos
mov
icebp
jle
xor
add
imul
pop
xor
add
mulb
xchg
jmp
mov
mov
add
dec
dec
aam
inc
pushf
mov
jecxz
aam
flds
mov
push
test
mov
push
push
add
dec
shrl
lcall
mov
ljmp
jo
sub
test
pop
dec
xchg
xor
mov
lret
out
inc
dec
push
xchg
out
xchg
les
add
xor
scas
or
shrl
mov
xor
jns
push
sub
icebp
xor
jo
add
int3
dec
sub
clc
mov
sub
popf
cld
mov
in
add
lock
les
addr16
test
adc
mov
pop
push
cmpsl
into
jg
sarb
test
icebp
enter
xlat
fsubrs
je
mov
jmp
push
xchg
or
mov
loope
ja
out
enter
jmp
adc
in
dec
jecxz
xchg
xor
xlat
add
negb
mov
out
jle
push
push
ljmp
aad
jbe
sub
mov
inc
inc
jecxz
repz
xchg
addr16
cmp
pop
dec
xor
rorl
and
push
cltd
xor
lods
aam
shrl
cmp
cmp
cld
cmp
jb
shrl
fwait
push
xchg
cmp
push
xor
xor
add
bound
int
or
dec
clc
dec
std
push
dec
scas
cmp
test
jnp
push
mov
stos
push
sbb
daa
ret
jbe
cmp
mov
hlt
jb
push
ljmp
mov
jbe
loope
mov
setb
fs
cmp
cwtl
inc
out
jo
dec
dec
in
cmp
sub
and
nop
mov
ss
jg
push
lods
dec
scas
sub
jb
sbb
scas
fxam
jg
cmp
call
push
inc
aam
test
ret
mov
loope
fs
sbb
xchg
cmp
jns
adc
cmp
xor
cs
add
inc
jno
cmp
push
fidivl
aaa
mov
add
push
push
adc
subl
or
mov
mov
ljmp
xor
pop
out
int3
mov
fadds
mov
or
repz
mov
xchg
arpl
xor
lret
xchg
push
aaa
test
cld
dec
mov
xor
or
std
mov
xor
jp
push
adc
cmc
cmp
ret
dec
pusha
out
jp
pop
add
cmc
pop
jns
mov
push
scas
mov
push
xor
lods
sbb
adc
push
mov
add
cwtl
repz
mov
add
rorb
mov
mov
int3
xchg
xlat
psrlq
lock
cmove
mov
adc
out
repnz
and
inc
jb
and
mov
std
push
or
lods
test
adc
dec
movsb
movsb
lret
imulb
iret
idivb
mov
cmp
pop
jnp
sbb
sub
outsl
add
sbb
mov
push
jnp
pop
sahf
inc
scas
shrb
cmp
inc
xchg
pop
mov
fldl
aam
dec
hlt
lods
sub
add
cmp
loope
push
adc
out
testl
out
clc
insl
out
jecxz
mov
sub
mov
ss
xor
loop
add
cs
mov
movsbl
add
xor
bound
push
subl
push
ret
loop
pop
dec
data16
pop
add
mov
push
sarb
leave
inc
popa
insl
mov
lods
sbb
int
jge
insl
in
mov
mov
mov
inc
arpl
negb
mov
jle
lret
je
or
or
scas
imul
jae
cld
mov
jno
mov
in
and
ss
fsubrl
jmp
or
dec
cwtl
les
loop
bound
ljmp
adc
dec
or
jns
mov
das
insb
push
cmp
xor
push
subl
dec
outsb
loope
cmp
daa
and
jl
das
jo
xchg
cwtl
hlt
or
mov
sti
call
int
dec
popa
fucomi
clc
or
stc
push
push
cld
in
ret
sub
push
sbb
mov
mov
fisttpll
loop
stos
push
dec
and
dec
fstl
rol
clc
lahf
sbb
mov
sti
repnz
sahf
jnp
sbb
and
jle
inc
push
in
push
dec
movsl
cmp
out
sub
leave
rcrl
lcall
sbb
mov
into
out
jnp
mov
clc
filds
xor
in
pop
push
sbb
dec
xor
mov
add
push
daa
addr16
jle
je
jge
ret
fmull
jo
icebp
lahf
xchg
mov
jmp
es
js
subl
bound
mov
subl
push
push
pop
mov
gs
lods
push
fnsave
dec
sub
ljmp
inc
test
les
sbb
cmp
lods
add
and
out
fistps
inc
mov
cmp
sete
in
pop
mov
dec
scas
push
les
mov
orl
jno
addr16
and
inc
loop
jo
fildll
addb
push
xchg
pop
cmp
mov
sti
jne
testb
int3
aad
fs
sarb
out
cmpsl
cmp
frstor
addr16
stos
clc
insb
clc
pop
test
nop
jnp
aad
fwait
mov
or
lds
push
sar
pop
adc
pop
jecxz
iret
and
repz
sub
fildl
movb
jae
xor
and
bound
into
repz
sbbb
lds
sbb
iret
or
cltd
pop
add
pop
stos
cmpb
push
mov
js
and
mov
stc
jl
pop
xchg
pop
jecxz
out
mov
inc
lret
mov
sarb
xor
and
mov
sub
lock
sub
pop
mov
cli
cmp
dec
xchg
sbb
test
or
shr
ds
enter
jno
in
outsb
inc
in
jp
mov
iret
jno
dec
jmp
xlat
sbb
xlat
lds
push
arpl
xchg
aam
js
pop
jl
pop
xor
rorb
or
jns
mov
xor
sub
les
adc
std
sub
js
dec
dec
shll
movsb
mov
push
pop
or
bound
lret
cmp
outsl
aam
mov
mov
cld
dec
lret
jmp
adc
pop
imul
cmp
outsl
lds
or
adc
xchg
call
xchg
or
mov
jno
mov
push
hlt
aam
push
aaa
cs
mov
add
sbb
rcll
sub
or
popa
sbb
inc
decb
xor
movsl
and
dec
mov
mov
rolb
and
jecxz
notb
add
push
push
gs
repnz
pop
push
sub
jae
xor
movsl
or
movl
cmp
std
jge
push
lret
leave
rorl
mov
ja
pop
xor
mov
add
movsb
xor
cld
xchg
cmp
pop
jb
or
pop
xchg
hlt
mov
and
scas
push
out
xchg
loop
ja
push
jnp
dec
push
and
cmp
lret
inc
cld
add
jecxz
nop
add
and
sub
ljmp
mov
add
ljmp
xchg
and
into
test
jl
push
push
adc
sbb
mov
popa
in
adc
jg
jae
fisubs
mov
fs
aas
ret
lock
or
cs
repnz
adc
cld
cli
clc
test
pop
popa
repnz
cmpl
ret
and
movb
mov
daa
loope
and
and
add
in
jecxz
xchg
loope
mov
adc
mov
pusha
inc
push
jns
jbe
hlt
int
pop
and
xchg
push
scas
add
test
or
bound
xchg
pop
cmpsb
repz
dec
mov
cmp
clc
shrl
inc
xchg
lock
cmp
add
jbe
mov
pop
dec
sub
mov
fadd
icebp
inc
and
jb
cmpsb
shlb
nop
aas
sub
dec
pop
cmp
sub
lea
pushf
popa
lcall
sarl
mov
out
inc
inc
mov
jmp
pmaddwd
out
lea
sbb
dec
xchg
pusha
enter
clc
sbb
push
cmc
call
fs
lock
loope
js
in
pop
mov
into
push
xchg
cld
or
ja
adc
jbe
mov
mov
test
lods
or
mov
in
cmp
mov
ja
add
scas
movsb
mov
mov
int
add
mov
adc
xchg
movsl
jo
loop
sbb
add
and
mov
jbe
scas
mov
inc
xlat
push
mov
xchg
mov
lds
sub
lock
mov
loope
test
addr16
and
mov
addl
xor
in
inc
cs
jecxz,pt
mov
js
mov
out
repnz
cmp
hlt
leave
lds
pop
adc
xchg
cltd
jnp
jle
ret
das
mov
outsl
jne
pushf
test
iret
pop
dec
jb
dec
cmp
sbb
hlt
pop
xor
mov
pop
mov
mov
lcall
add
dec
adc
ja,pn
fsubl
jg
in
out
dec
hlt
adc
pop
lcall
testl
clc
and
mov
and
adcl
into
mov
lods
data16
sbb
in
lods
adc
xor
cmp
sbb
cmp
add
mov
mov
jmp
inc
adc
loopne
mov
out
jns
mov
mov
sub
iret
mov
push
inc
adc
push
cmp
sub
dec
loop
rcrb
mov
jb
fcoml
and
js
xor
dec
xor
insl
aaa
std
inc
dec
and
repnz
stc
jae
mov
scas
scas
sbb
jns
or
scas
add
dec
leave
mov
loopne
cltd
enter
movsl
arpl
mov
insb
lds
iret
and
push
sbb
insl
sub
or
cmp
cltd
rcr
movsl
scas
inc
cmpsb
inc
mov
dec
aaa
test
push
jge
jne
in
ret
jnp
in
lcall
dec
and
lcall
stos
insw
push
jnp
mov
sub
push
adc
mov
pop
pop
mov
lea
sub
push
mov
sbb
cmpsb
dec
nop
gs
xchg
mov
dec
popf
jb
mov
insl
stc
jle
fwait
mov
dec
fsts
xchg
shrb
call
or
lret
mov
mov
popf
popa
jge
mov
test
scas
addb
and
sbb
adc
outsl
fbstp
mov
sbb
xor
nop
pop
mov
jnp
mov
jnp
data16
and
and
test
push
lods
jp
nop
jl
fisubs
inc
iret
pop
xchg
cmpsb
insl
jnp
mov
add
enter
sbb
test
das
inc
adc
test
add
cmc
xlat
sub
jbe
inc
sub
aam
gs
xor
dec
imul
fildl
js
jle
call
or
mov
jp
stc
nop
fldz
mov
lcall
cmp
mov
xor
jbe
mov
mov
mov
cmp
lahf
andl
fisttps
stos
pop
mov
movsl
loopne
rcrl
jecxz
sbb
lret
and
fstl
jl
bound
push
inc
mov
lcall
into
shlb
dec
ret
aad
xor
cmp
adc
cmpb
dec
hlt
sbb
lahf
and
adc
cwtl
pop
xchg
jnp
push
and
in
in
addr16
sbb
mov
adc
sbb
dec
loope
cmpsl
and
sub
mov
imul
cmpl
jmp
fwait
jns
mov
mov
aaa
dec
xor
cmpsl
or
shlb
into
into
xchg
std
or
pop
mov
push
dec
push
popa
push
ret
js
enter
pushf
movsl
cli
xchg
stos
aam
movsl
nop
stos
lahf
cmp
sbb
add
sub
xor
pop
mov
lret
xor
out
movsb
test
jge
pusha
xor
pop
test
jecxz
sbb
in
or
lods
pop
jg
jae
cli
xchg
insl
mov
dec
or
notb
in
je
push
jbe
loopne
pop
jp
test
lea
aaa
fsts
es
cmp
dec
dec
in
mov
xorb
mov
xlat
movb
aam
add
or
ss
out
cmp
ret
push
and
sub
movsb
and
sbb
mov
cmp
lahf
inc
imul
and
out
notb
mov
imul
jl
xchg
xor
mov
addb
loop
aad
in
out
dec
push
cmc
sar
lea
fcmovne
mov
sti
fwait
lods
mov
add
ret
push
imul
push
ds
jno
subl
push
jp
push
push
stos
rcl
das
pop
jb
stos
xchg
lods
and
cmp
lcall
rcr
shll
ret
inc
pop
and
add
sub
dec
push
push
dec
jecxz
pop
call
rorl
and
mov
int3
test
mov
hlt
push
dec
dec
arpl
repz
mov
xchg
enter
sub
shlb
push
popf
mov
mov
pusha
jl
jo
loopne
mov
xor
inc
jns
gs
or
sti
in
cmp
pushf
test
popf
or
push
in
repnz
fwait
push
scas
in
rcrb
insb
mov
scas
lds
inc
rclb
mov
call
fucomi
adc
mov
std
adc
mov
or
hlt
or
mov
mov
jmp
cltd
jmp
dec
xor
xor
jmp
and
xchg
testl
imul
int
sbb
cmp
int
lods
lock
add
movsb
push
addr16
add
push
dec
push
pop
mov
inc
sub
mov
dec
lret
or
adc
mov
std
adc
sub
xchg
fsubs
stos
pop
fdivrs
stos
mov
popf
xchg
sahf
outsb
xchg
cltd
inc
jb
arpl
shll
scas
dec
sbb
mov
imulb
mov
pop
sub
adc
xchg
or
psllw
loope
mov
cs
or
cmpsb
popf
sub
fistpl
pop
icebp
invd
xchg
xchg
push
pop
shll
push
in
cli
in
mov
aam
fs
rclb
dec
or
add
inc
cli
std
adc
mov
aaa
xor
pushf
out
js,pn
push
loop
adc
mov
cmp
and
mov
push
inc
loopne
lock
iret
add
jmp
repz
icebp
out
push
mov
inc
cmp
outsl
inc
je
push
cmp
leave
push
addr16
pop
or
mov
jbe
jl
addr16
lcall
fs
pop
jg
call
add
cli
sbb
push
add
sbb
add
rcrl
mov
cmp
fisttpl
in
mov
mov
idivl
inc
xor
mov
and
addr16
fsubs
imul
and
fiadds
add
sbb
in
xchg
sub
les
sbb
fadds
ja
xor
lods
mov
cwtl
inc
jbe
pop
outsl
jne
aas
fstl
shrl
add
sbb
adcl
push
test
push
add
sbbb
hlt
mov
loopne
xor
in
stos
and
pop
mov
mov
ss
push
loop
sti
pusha
lret
jno
lret
aaa
imul
inc
push
leave
and
mov
leave
cmp
stc
mov
jbe
out
jmp
dec
cmp
movsl
dec
jmp
loopne
mov
sbb
sub
inc
or
out
or
icebp
ret
mov
add
lock
je
adc
rcrl
jbe
xor
push
scas
xor
xchg
decb
sbb
shlb
adc
xor
cmp
cld
rcl
movsl
jmp
leave
cs
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
jl
orb
jnp
pushf
jnp
das
add
sbb
sub
push
xor
add
pop
ds
xchg
cmp
mov
push
adc
pop
pop
mov
bound
faddl
leave
rcll
stc
andb
add
stc
shll
into
enter
outsl
or
js
sarb
and
cmp
out
sub
sub
clc
jae
cmp
sbb
push
push
cs
mov
emms
rcrb
sub
xchg
ds
jo
movsb
pop
dec
dec
cmp
sub
or
movsl
lcall
inc
mov
aaa
push
cmpb
dec
sub
or
adc
or
repnz
xor
sbb
cmp
les
lahf
pop
and
aad
cli
orl
dec
mov
leave
pop
and
lea
ret
ja
pcmpgtb
popf
insb
cs
or
and
call
add
rolb
push
inc
es
and
push
stos
cmp
xchg
push
mov
cwtl
mov
jl
lods
add
test
outsl
lods
xchg
or
movsl
das
fbld
mov
add
dec
jae
imul
orl
fsubs
shlb
sbb
shlb
out
push
push
jbe
sub
push
popa
cmpsb
mov
lods
ficoms
pop
fcmovnbe
ljmp
mov
add
nop
push
idivl
sub
add
shl
sbb
and
push
mov
push
fwait
movsl
ds
or
xor
cld
test
mov
div
test
mov
popf
mov
loop
mov
inc
sub
popa
pop
mov
xor
cmp
pop
paddb
inc
js
mov
notl
mov
cld
leave
aas
dec
scas
and
insl
cmp
pop
jl
jp
mov
jle
xorb
arpl
cmp
orl
dec
jne
insb
push
and
xlat
test
add
inc
push
je
jnp
imull
call
lret
push
mov
xlat
repnz
orb
xchg
jno
xchg
movsb
cmp
sub
mov
movb
pop
adc
push
insl
mov
pop
jns
sbb
dec
cmpsl
pop
xchg
out
orl
inc
mov
adc
xor
jge
ljmp
xchg
dec
pop
inc
pusha
in
cmp
sub
mov
icebp
and
xchg
adc
push
stc
dec
fcomps
ret
cs
divb
inc
dec
arpl
xchg
loope
xchg
push
sbb
outsl
loopne
mov
or
push
mov
pop
adc
push
ljmp
ss
xchg
push
out
pop
mov
inc
popf
xchg
shl
jl
sbb
pop
shl
scas
cmp
jp
test
cltd
fdivrl
xchg
movsb
jae
push
jecxz
add
jecxz
sbb
add
or
lcall
xlat
mov
out
movsl
pop
lds
sti
scas
fsubrs
cwtl
and
sbb
popf
and
push
and
popf
test
scas
adc
cs
movsl
mov
xchg
lret
pop
sar
sbb
mov
push
in
jg
je
outsl
xorb
mov
loope
sbb
inc
inc
int
pop
cmp
out
jg
cmp
mov
bound
mov
dec
xchg
push
xchg
mov
mov
push
leave
xor
xchg
sbb
mov
out
and
int3
out
stos
outsb
xchg
mov
sub
ret
pop
xlat
or
loop
push
cmpsl
jle
jne
mov
fs
push
push
jmp
cmp
jae
out
cmp
sbb
jae
daa
mov
mov
cwtl
mov
icebp
inc
mov
xchg
mov
sahf
dec
jo
sahf
lock
mov
mov
out
cmp
das
js
push
stc
sbb
xchg
push
xchg
pop
mov
jle
push
push
clc
push
jle
cmc
xor
mov
pop
test
lret
scas
jo
or
cmpsb
xchg
xorl
pop
lods
gs
jmp
popf
push
loopne
rclb
es
imull
sub
outsb
dec
rcll
dec
xchg
scas
jl
pop
jmp
inc
jne
pop
loop
jecxz
sub
push
mov
cltd
insb
lods
js
mov
and
adc
lods
je
nop
subb
jne
lods
push
insl
xor
orb
lds
inc
out
lcall
fidivrl
add
stos
xchg
or
aas
std
xor
jb
xor
xchg
add
jle
adc
in
push
fs
stos
inc
add
loope
mov
cmp
aas
movsb
push
pop
fwait
dec
mov
push
mov
je
add
adc
sub
sbbb
push
stos
loopne
lret
add
std
dec
and
das
loopne
and
mov
xchg
mov
fs
movsw
adc
mov
faddl
inc
das
roll
imul
xor
inc
cmpsb
cmp
push
inc
adc
mov
mov
gs
push
cli
adc
sbb
ljmp
addr16
xchg
imul
ror
data16
xor
jecxz
je
mov
sahf
repnz
mov
lret
movsl
aaa
lods
fsubrl
mov
push
stc
fdivrl
cmc
push
xchg
movsb
movsl
std
push
shlb
cmpsl
out
add
wbinvd
cltd
popa
mov
out
pop
jns
or
out
adc
mov
jb
ja
jp
sub
in
int3
push
mov
xor
test
sbb
js
jl
jo
add
xor
mov
mov
inc
fbld
mov
insb
loopne
clc
call
inc
and
xor
out
jl
pop
iret
js
pushf
push
cmpl
add
popf
push
rorb
sti
jle
lock
pop
or
pop
ss
shll
mov
ret
pop
pop
push
mov
mov
nop
push
arpl
scas
fsubrl
xchg
add
and
cmp
xor
jg
add
and
add
mov
inc
insl
dec
stc
leave
xchg
cmpsb
mov
addb
cs
push
roll
add
dec
aas
aam
cltd
mov
push
test
adc
mov
jb
push
les
mov
repnz
jbe
mov
lret
out
add
loop
test
mov
sub
sahf
sbb
sub
pop
xchg
mov
in
push
xor
test
jo
cmp
add
jl
mov
and
and
mov
mov
leave
stc
lea
push
outsb
fidivrl
mov
imul
loop
mov
mov
pop
fdivl
jno
lahf
cmp
add
ja
inc
es
das
and
fdivl
arpl
in
shl
xchg
xchg
clc
or
js
xor
add
inc
dec
mov
jmp
or
mov
sub
fwait
adcl
es
mov
fcoms
sbb
addr16
sbb
cld
fs
iret
sahf
cmp
pop
or
xor
cs
and
push
clc
movsb
daa
add
test
push
lahf
call
cld
push
and
cli
into
push
push
xor
test
push
iret
icebp
in
or
lret
jae
in
and
outsb
inc
jl
inc
sbb
repz
sub
subb
ret
pop
jb
dec
cmp
push
aas
or
push
mov
inc
push
js
sub
inc
loope
mov
sbb
out
popa
jl
jg
and
or
add
and
lods
push
dec
loopne
and
pop
imul
xlat
aam
lods
sbb
dec
mov
xor
xchg
mov
ret
inc
jnp
hlt
pusha
loop
inc
cmp
jle
lods
cwtl
cwtl
mov
popa
xlat
mov
inc
push
loope
xor
popa
outsl
adc
lods
dec
jbe
xor
hlt
jle
jbe
mov
mov
pop
fbld
mov
mov
pop
mov
push
pop
lock
lret
adcl
jg
xchg
xor
xchg
repnz
insl
icebp
push
push
sub
pop
cwtl
fdivs
sub
cmpsb
push
cmp
icebp
lret
push
lret
fcomps
sub
push
push
imul
jg
mov
into
fs
stos
inc
mov
adc
pop
ss
jp
cmp
inc
jge
sbb
sti
arpl
sub
mov
mov
adcb
jecxz
loop
cltd
push
outsb
mov
jg
or
mov
aaa
movsl
shll
dec
stos
cmpsb
pop
xchg
loope
sub
dec
or
cltd
call
sbb
and
popa
sub
lea
xchg
inc
or
dec
xchg
add
mov
sub
push
push
dec
xchg
aad
push
or
xchg
pop
mov
jno
add
mov
mov
scas
outsb
mov
or
ja
hlt
push
add
jecxz
jne
nop
jl
mov
sbb
and
movsb
je
std
ret
pop
fs
push
andl
xor
push
out
icebp
mov
and
push
push
lret
das
mov
movsb
sub
pop
les
aaa
sbb
lods
mov
pusha
xchg
pop
imulb
jp
leave
into
call
mov
ja
icebp
xor
testl
lods
lcall
sub
sbb
pushf
pop
or
push
inc
add
sub
cld
in
negb
pop
fwait
imul
mov
cmpsb
pop
stos
nop
cmp
in
pop
sub
mov
mov
xor
hlt
dec
xor
dec
roll
xor
mov
sbb
loop
aad
pop
push
in
imul
push
sub
loope
test
je
sbbl
js
aad
test
or
xor
mov
popf
pushf
xchg
arpl
test
jb
adc
fs
jl
cmp
gs
jp
out
inc
movsb
in
enter
aad
sbb
xchg
je
or
lea
xor
jne
aas
push
xacquire
inc
inc
fwait
es
aas
jns
ds
add
loop
and
adc
adc
xor
add
filds
xchg
add
test
xor
mov
jne
pop
iret
xor
mov
cltd
subb
xchg
jbe
shll
in
cs
js
sub
and
inc
jno
mov
addr16
call
sahf
push
push
iret
pop
adc
cld
std
movsb
jle
and
sbb
les
jo
cmp
imul
mov
into
cli
push
mov
clc
xor
adc
add
push
add
push
loopne
nop
ficoms
xchg
cmp
fsubr
pop
sub
pop
sbb
nop
adc
xor
es
out
add
daa
fsubp
adc
fcompl
imul
in
jnp
mov
imul
xor
pop
jns
pop
adc
ss
sub
ljmp
jg
repz
pop
sahf
pushf
cltd
lods
andb
hlt
mov
ja
push
lods
sbbb
sti
pop
repnz
xchg
pushf
inc
in
jecxz
ljmp
cwtl
and
mov
iret
pop
out
adcb
nop
in
xor
test
fadd
mov
cmp
aaa
out
dec
outsb
adc
dec
xchg
pop
and
int3
mov
pop
push
mov
std
imul
or
jmp
ja
sarb
xchg
das
cmp
ss
xchg
jb
push
dec
cmp
xchg
add
dec
loop
mov
push
nop
cmc
inc
into
ret
xchg
pop
pop
mov
aas
outsb
adc
pop
imul
dec
das
out
mov
xchg
lret
adc
xor
popa
fisubl
dec
sbb
jge
adc
enter
test
cmp
js
jle
dec
ret
pop
xchg
mov
add
dec
mov
or
mov
sar
xor
in
dec
in
push
xchg
fcmovnu
and
xor
fidivs
xor
inc
scas
pop
add
xlat
pop
outsb
sub
inc
rorl
xchg
jecxz
cmp
aaa
xchg
mov
add
stos
mov
or
push
push
dec
mov
mov
push
add
fsubs
sar
shlb
and
add
bound
ljmp
test
pop
aam
fs
in
imulb
or
inc
mov
sub
adc
lock
sbb
daa
mov
xchg
dec
outsb
sbb
popa
lcall
jg
fcmovnb
bound
sub
xchg
mov
pop
daa
push
ds
inc
pushf
push
sub
les
mov
pop
pusha
in
or
mov
test
ret
add
add
bound
lret
xchg
xchg
mov
mov
shrb
loopne
cltd
pop
dec
lods
add
push
addr16
inc
and
cwtl
movb
aad
je
add
insb
sub
inc
cmp
shl
xchg
inc
inc
sub
cmp
loope
jmp
insb
inc
add
pop
jbe
iret
sub
or
test
aam
negl
addr16
imul
fstl
mov
mov
or
push
cmpsl
dec
or
and
add
clc
out
inc
cwtl
mov
aad
mov
xchg
push
add
pop
mov
lret
daa
and
push
sub
xor
xor
or
or
stc
imul
sub
outsb
sub
fisubrs
fdivs
or
popa
jp
xor
sbb
out
add
sub
movsl
fstpt
mov
jb
push
dec
pop
jb
les
stc
xorb
mov
aas
mov
outsl
divb
xor
aas
mov
xchg
pop
jbe
shlb
xor
adc
mov
pop
aaa
and
adc
clc
jmp
cmp
mov
inc
sub
and
js
je
sub
mov
movsl
leave
rcrb
repnz
int
call
sbb
test
or
repz
insb
and
pop
push
stc
dec
adc
nop
sub
dec
push
push
cmp
clc
repz
leave
xchg
push
cli
xor
push
in
outsl
sub
imul
jp
push
loope
mov
insl
cli
lods
xchg
xor
jp
and
xor
mov
push
loop
mov
jmp
xchg
shll
dec
or
add
adc
pop
sahf
adc
push
and
lods
mov
mov
dec
mov
iret
push
push
clc
clc
pop
sub
dec
or
mov
push
or
push
sub
adc
cld
dec
shr
push
jns
ds
jle
mov
pop
fs
dec
testl
mov
pop
mov
mov
pushf
add
sub
sti
loope
inc
lret
lahf
ds
mov
divb
lea
push
outsb
aad
inc
cwtl
add
in
jb
mov
mov
jmp
and
pop
mov
sbb
dec
rclb
xorl
adc
jecxz
nop
pushf
xor
dec
mov
mov
xor
rorb
pop
mov
sbb
gs
test
test
mov
aad
xchg
out
or
repnz
sbb
mov
push
jae
add
mov
push
ror
fisubrs
call
cmpsl
cmc
es
adc
push
outsl
push
mov
push
fsubl
aas
psraw
mov
cld
push
incl
bnd
add
cld
sub
ret
push
fadd
or
mov
pop
pusha
lcall
inc
mov
dec
sbb
mov
lret
out
add
adc
loopne
cmp
dec
mov
in
mov
xchg
clc
adc
rol
cld
xor
or
push
loope
pop
push
xchg
xlat
sbb
mov
mov
xor
js
enter
mov
inc
dec
xlat
mov
nop
xchg
jl
and
mov
jno
fsubrs
jmp
dec
pop
test
mov
adc
mov
mov
jno
adcl
addb
dec
es
or
add
stc
ret
insb
cmp
pop
aam
addr16
cmc
adc
lods
or
dec
cmpsl
cmp
mov
addr16
add
push
xchg
jne
andb
in
or
add
loope
into
xchg
shl
inc
out
mov
adc
ds
gs
sub
leave
fistl
sti
inc
out
ss
in
inc
jecxz
jb
movsl
lahf
lahf
mov
cmp
jle
movsl
sbb
cwtl
add
jle
negl
dec
daa
add
pushf
das
inc
fwait
std
stos
stos
je
aad
test
pop
insb
scas
push
sbb
or
fstl
popa
scas
aad
fidivs
push
push
sahf
push
loop
xlat
inc
out
mov
cmpsl
mov
xchg
loope
jb
sbb
cld
add
mov
lods
sub
xor
jns
mov
cmp
pushf
ret
xor
fiaddl
mov
sub
jnp
add
bound
jmp
imul
jl
mov
inc
lcall
daa
shrl
push
pop
aad
pop
inc
mov
jge
scas
jns
bound
mov
sti
div
les
xlat
faddl
push
clc
jne
add
mov
fiadds
mov
movsl
rcr
addl
ror
mov
mov
stos
imul
xchg
push
sbb
outsb
cmp
adc
ficomps
push
decl
stc
push
add
jg
fwait
jecxz
fmulp
scas
aam
cmp
cmpsl
xor
sahf
xchg
ljmp
aas
sbb
insl
fcomp
jl
adc
ljmp
addr16
add
inc
inc
sub
les
mov
test
pop
loop
xchg
repnz
in
push
sbb
filds
fcompl
repz
gs
and
adc
mov
into
xchg
scas
ds
cmpsl
mov
fbld
ljmp
fwait
xor
and
cltd
jmp
mov
mov
pop
sbb
lcall
lcall
add
ss
push
sub
popa
xor
add
cmp
stc
js
mov
cmp
pop
loope
mov
adc
lret
loope
pop
push
pop
rcrb
adc
cwtl
cli
pop
bnd
sub
fcmovnb
fisubrl
loopne
sti
pop
mov
mov
lds
adc
incb
rcrb
push
push
mov
lahf
cwtl
xor
sbb
idivb
cmp
sbb
jne
cmpsb
data16
adc
and
mov
std
dec
pop
in
adc
cwtl
xchg
sbb
jp
das
jmp
lock
movsl
test
sbb
adc
faddl
popa
jns
in
cmp
cmpsl
lret
test
call
inc
jae
sub
scas
jae
subl
add
and
fsubrl
ljmp
stos
ds
fidivrs
sbbb
daa
add
inc
and
clc
test
sbb
sub
cltd
aad
in
xchg
mov
sub
pop
repz
outsb
mov
jl
fsubl
stos
pop
mov
jno
int
inc
lea
es
dec
arpl
jno
out
test
in
mov
mov
xor
pop
push
sub
dec
ljmp
inc
mul
sti
mov
xor
mov
daa
lret
cwtl
loopne
dec
aaa
push
ficompl
jae
xor
lock
mov
fldcw
mov
jbe
dec
adc
sbb
loope
out
neg
out
mov
cltd
les
add
mov
push
repz
add
insb
dec
mov
xchg
shrl
pop
dec
in
test
shll
pop
insb
scas
nop
nop
or
stos
inc
xor
mov
lret
aad
xchg
lods
daa
pop
rorl
cwtl
inc
xor
push
test
and
popf
jmp
xchg
jbe
lret
sub
mov
cld
mov
xor
in
loope
lods
add
aas
pop
or
and
adc
pop
arpl
inc
cmp
mov
jno
xchg
aam
jg
lret
add
cs
add
sbbl
jge
mov
mov
mov
rorl
clc
inc
data16
inc
outsl
stos
mov
xor
mov
lods
sub
mov
fisttpl
pop
loop
inc
aas
cmpxchg
jb
lods
dec
mov
push
sbb
jb
frstor
enter
mov
cmp
xlat
pusha
stc
dec
fstp
gs
sti
jno
imul
xchg
and
pushf
js,pn
stos
stos
aas
sbb
mov
adc
fs
add
and
jae
mov
push
aaa
iret
jle
mov
ret
adc
jo
cwtl
xor
je
push
rcrb
ljmp
mov
iret
sbb
test
sarb
mov
dec
icebp
inc
lods
loopne
or
mov
jns
inc
xor
imul
jns
sub
sbb
in
xchg
mov
xchg
jae
pop
inc
mov
loop
sub
icebp
bound
ficomps
je
jg
int
into
outsl
lea
lock
jg
lock
push
add
jp
in
xor
pushf
mov
xlat
jae
gs
xchg
pushf
stos
and
scas
jne
mov
pusha
xchg
xor
insl
push
adc
inc
mov
js
shlb
xchg
pop
mov
push
in
out
aas
sbb
and
es
mov
lods
xchg
mov
and
cmp
add
ss
xor
push
into
test
popl
mov
fstpt
arpl
dec
adc
jl
inc
pop
mov
adc
add
iret
loopne
leave
sbb
lods
mov
std
xchg
jns
cld
stos
push
mov
xchg
popa
push
inc
lahf
imul
and
gs
add
xor
push
aad
and
mov
pop
out
insl
push
jae
sub
pop
ret
mov
lods
mov
jp
mov
dec
inc
mov
adc
sub
cld
rep
cmpsl
cmp
or
dec
test
and
cmp
sub
sbb
pop
popf
adc
cmp
adc
ja
xchg
sahf
out
ljmp
mov
lods
inc
jg
rcrb
adc
repz
xor
ss
aas
stos
fdivrp
imul
lock
mov
ljmp
mov
add
adc
add
inc
into
and
in
sbb
push
adc
pop
push
pop
inc
mov
sbb
pop
mov
test
les
adc
icebp
mov
cli
das
arpl
pop
hlt
in
xor
leave
out
mov
pop
or
push
sub
push
adc
xor
cmp
add
sub
clc
mov
popa
aam
jmp
push
and
jnp
decb
inc
movsb
mov
or
fnstenv
aam
sub
push
pop
outsl
out
jno
div
out
sbb
lea
lods
xchg
nop
sub
aam
rcll
fcmovnb
out
outsb
in
aam
mov
pop
add
adc
imul
jle
push
ret
pusha
pop
repnz
xchg
stos
rcrb
sub
or
test
jle
adc
test
push
xor
dec
cmpsl
into
pop
mov
int3
cmp
or
or
jo
repz
jl
dec
mov
cmp
mov
bound
imul
mov
mov
xchg
in
mov
loopne
cmc
fs
add
cltd
lret
mov
xor
stc
arpl
out
fidivs
in
inc
dec
stos
lock
pop
mov
clc
adc
out
arpl
sahf
icebp
das
or
in
lret
iret
ss
loopne
fwait
jle
push
lcall
lds
cmpsb
pop
xchg
test
pusha
bound
mov
push
aas
mov
mov
pop
idiv
cmp
xor
mov
ss
inc
test
pop
jp
out
sbb
mov
inc
jo
leave
or
adc
pop
outsb
mov
arpl
mov
xchg
aaa
xor
movsl
mov
add
popf
or
pop
mov
out
dec
xchg
sarl
mov
fidivs
pop
add
stc
repnz
iret
mov
filds
movsl
call
mov
jg
add
pop
out
jo
mov
mov
ljmp
ret
cmp
rcrb
icebp
lret
and
mov
in
sub
pop
ds
arpl
and
frstor
cmp
push
cwtl
xchg
jae
dec
xor
adc
popa
test
dec
outsb
push
lods
sti
lcall
addr16
sbb
cli
jae
dec
mov
cwtl
cli
xchg
and
xor
sub
ret
sub
mov
add
rcr
gs
xor
mov
or
aad
icebp
push
mov
adc
jl
rcrl
rclb
pushf
pop
test
inc
xor
and
add
dec
xchg
push
or
push
mov
loope
hlt
out
fldenv
gs
mov
sub
fbstp
sti
push
test
inc
sbb
mov
adcb
dec
adc
dec
and
jbe
dec
push
push
add
adc
xchg
cld
pop
jl
clc
nop
outsb
bound
jmp
mov
sar
notb
aam
aam
ljmp
dec
ljmp
or
icebp
pop
jge
xor
xchg
cwtl
movsl
pop
bound
cmpsl
arpl
ret
pop
js
andb
and
iret
xchg
pop
push
test
mov
daa
pop
pusha
jecxz
repz
xchg
add
mov
lcall
rorb
mov
adc
pop
add
or
loop
clc
push
jmp
rcll
push
dec
jbe
outsb
loop
fdivrs
add
sti
out
insb
xchg
cli
enter
sub
out
call
ret
xchg
mov
push
cmpsl
rolb
stc
mov
push
sub
mov
flds
ret
enter
and
jns
pop
cmp
lds
inc
fsubl
fwait
mov
fwait
cmp
idiv
sbb
xor
jno
xchg
xchg
fs
mov
mov
jmp
pop
dec
mov
data16
lds
scas
push
arpl
sub
sub
xchg
lea
pop
imul
jge
dec
sub
outsb
scas
les
sbbl
adc
pop
or
jp
movsb
testl
push
cmp
sub
loope
cld
pop
inc
sbb
cmpsl
lret
ss
xchg
xchg
mov
test
dec
pop
fiadds
test
scas
cmp
xchg
scas
fwait
cmp
push
pop
pop
pop
out
jecxz
mov
sub
mov
jo
out
mov
xchg
mov
sub
jmp
ja
sub
negb
fsubrl
lret
cmp
lods
cmp
mov
scas
scas
cli
fcmovbe
jle
or
ljmp
jo
inc
imul
pop
or
bound
mov
hlt
sbbl
leave
pop
dec
push
fs
push
mov
xchg
stos
lret
data16
adc
adc
test
fcoml
and
lods
add
sti
push
cmp
cs
push
out
jb
mov
lds
test
popf
sub
add
inc
in
pop
xor
out
push
sbb
push
out
push
mov
add
sbb
mov
nop
stos
mov
inc
sub
je
popa
repnz
sub
mov
push
mov
das
lock
dec
mov
mov
daa
out
stos
push
mov
shlb
pop
or
and
pop
xchg
pop
das
and
ret
je
sub
out
and
mov
adc
push
pop
test
mov
jmp
orl
jae
pop
sbb
mov
xor
nop
and
xor
aaa
mov
mov
fdivl
ss
out
pop
cltd
rorb
sbb
dec
push
shl
mov
xor
dec
rorl
in
xchg
jbe
das
sub
daa
cltd
frstpm(287
out
fcomps
andb
jp
imul
mov
popf
dec
push
or
shrb
cmp
lods
fs
rcl
inc
mov
fisubrl
or
and
inc
sub
aad
enter
jecxz
add
sbb
push
call
sbb
sub
add
cmp
test
fcoms
pushf
xchg
jnp
adc
testb
mov
push
mov
sub
jns
jne
sbb
inc
pop
cmp
cmp
mov
es
aas
adc
out
dec
mov
inc
stos
mov
gs
adc
xlat
in
pop
inc
fwait
movsl
inc
ret
cltd
xor
les
jmp
out
push
sbb
push
mov
jae
pop
cmp
xchg
stos
repz
mov
and
aaa
mov
mov
out
cmp
test
push
std
ret
sarl
push
lret
cmpsl
imul
loope
lods
test
ljmp
mov
sbb
out
das
xor
xchg
cmpsl
loop
sbb
push
mov
pop
das
sbb
dec
pop
ret
fdivs
roll
divb
lcall
cs
push
push
pop
fcmove
sahf
cmc
lods
in
sbb
addr16
loop
inc
xlat
daa
push
sbb
aaa
mov
pop
adc
test
sub
and
add
popf
dec
adc
mov
sbb
fisttpll
andb
mov
bound
xchg
inc
xor
sbb
mov
das
or
je
mov
mov
sbb
cmp
cld
adc
fdivrp
and
xor
fadd
loop
iret
enter
loop
pop
fldz
enter
shll
mov
xor
jne
movsl
mov
xchg
xchg
leave
lods
xor
lods
mov
into
in
aad
cmp
cltd
in
out
sbb
inc
icebp
insl
int
mov
aam
mov
outsb
lock
je
fisttps
out
jle
scas
test
lret
adc
add
ljmp
repnz
mov
jp
outsb
cmp
mov
push
subb
mov
ljmp
repz
rcrl
int
xchg
push
addl
xchg
xlat
iret
cwtl
scas
negb
push
cs
xchg
mov
add
dec
int3
push
and
mov
in
mov
lahf
mov
lret
into
dec
jmp
sub
stos
jno
lods
or
sahf
dec
hlt
adc
outsl
popa
mov
lods
xor
fwait
cld
hlt
cmp
enter
mov
cmp
sbbb
das
mov
jmp
test
mov
mov
push
pop
aad
jbe
jns
loopne
jb
outsb
das
jmp
xchg
aad
pop
mov
push
pop
aaa
test
cmc
pop
xchg
mov
aam
mov
ss
loope
cmp
sbb
aad
in
montmul
cmpsb
inc
scas
jle
xlat
fisttps
int3
and
add
and
mov
push
mov
mov
cli
jno
add
outsl
and
repz
test
lods
and
adc
mov
fisubrs
lcall
inc
shll
adc
into
and
mov
sti
clc
aam
mov
sub
xchg
xlat
jg
repz
dec
in
jg
popf
loope
int
mov
add
adc
pusha
aam
push
push
popf
cmc
mov
xor
mov
mov
sbb
lock
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
push
lcall
pushf
jnp
insb
mov
ja
repz
push
jae
cmp
roll
dec
enter
ja
and
push
mov
xor
push
sub
adc
cmpb
ret
dec
xchg
mov
scas
shll
and
mov
adc
scas
dec
push
fistpll
repz
test
sbb
leave
inc
cmpsl
xor
js
or
push
xor
cmp
inc
jp
stos
xor
ds
sbb
inc
fiaddl
push
or
xchg
xlat
out
or
sub
pop
test
and
lods
push
popa
pop
jnp
pop
jno
cld
icebp
shlb
push
and
lahf
mov
mov
jb
fdivp
cmp
stc
jns
outsl
pusha
push
out
xchg
inc
test
fnstsw
cmp
sbb
mov
dec
and
testb
cmp
imul
es
stos
inc
mov
out
push
imulb
loop
pop
dec
push
test
mov
ljmp
orl
cmp
mov
mov
mov
lea
push
nop
ljmp
add
faddl
lret
mov
push
pop
test
aaa
add
push
xchg
gs
jo
mul
sahf
aaa
pop
mov
pop
push
mov
repz
jge
xor
ss
dec
notl
sbb
adc
pushf
sub
das
xor
cli
sub
inc
adc
insb
pusha
pop
push
into
cmp
mov
push
and
adc
bound
test
out
addr16
lods
sbb
mov
in
pop
mov
cs
out
inc
dec
in
sbb
daa
stos
pop
mov
or
push
ret
stos
fidivl
js
mov
xchg
sub
and
mov
jge
inc
xchg
fisubl
sub
sahf
fists
mov
clc
or
add
ret
add
mov
cmp
enter
jae
or
aam
pop
loopne
xor
out
or
xchg
out
pop
inc
fwait
test
arpl
bound
mov
sahf
rcll
add
inc
or
decb
pop
inc
leave
push
fbstp
xchg
mov
jbe
sub
outsl
cli
sbb
and
cmpsb
mov
out
sbb
call
cmp
add
pop
push
stos
push
or
cld
mov
xchg
js
push
xor
pop
out
push
popa
sbb
fs
cmp
fcmove
push
pusha
fcompl
repz
lds
je
mov
fwait
dec
fldcw
cli
shlb
in
push
push
mov
inc
mov
sbb
outsb
inc
insb
mov
mov
jp
inc
loop
js
jo
xchg
setbe
dec
sub
adc
or
jne
in
jmp
sbb
loop
stos
call
add
push
xchg
adcb
mov
lret
xchg
outsb
push
loop
pop
mov
cwtl
ret
cmc
loop
cmpsl
js
xlat
test
movsl
xchg
es
movsb
mov
js
lds
lahf
xchg
emms
mov
mov
test
mov
fstl
inc
ret
out
mov
in
enter
cwtl
fs
rcll
pop
inc
sub
fsubl
in
ds
jne
leave
leave
xchg
ret
dec
cmpsb
nop
pop
dec
rcll
lea
arpl
lret
adc
mov
cmp
int3
mov
hlt
adc
or
pop
jnp
push
xchg
jle
or
mov
mov
cmpsb
cmp
call
xor
repnz
dec
js
loopne
test
ret
push
adc
popf
cltd
int
fadd
inc
sub
or
xchg
adc
icebp
mov
sub
loop
jmp
jo
xchg
adc
jo
int3
cmp
inc
fcomp
loope
xor
jb
push
ficoml
add
mov
dec
lret
loopne
iret
inc
adc
insl
rcrl
mov
int
es
cmp
test
popf
push
push
sbb
adc
xchg
out
fsubs
sti
and
js
stos
popa
push
pop
sbb
sbb
cs
cmpsl
inc
ret
xor
clc
add
adc
xor
lods
fisubrl
add
addl
adcl
es
jmp
jp
stc
cmp
mov
lahf
ds
mov
adc
cli
sub
inc
push
int
es
das
push
push
inc
cmp
imul
sbb
mov
lock
and
test
xchg
leave
movsl
fpatan
cmp
sub
shlb
inc
fdivr
sbb
dec
lods
pop
das
arpl
frstor
test
pop
ja
ret
loop
jp
cmp
daa
sbb
push
aaa
or
lds
fcmovb
and
repz
bound
inc
fdivrl
pop
movsb
xor
mov
push
adc
bound
xor
stos
jnp
push
mov
xchg
in
push
sbb
test
push
mov
push
mov
dec
sub
sub
inc
aam
sbb
xor
sbb
jp
cltd
cmp
sbb
mov
lock
insl
ss
loopne
test
add
cmpsb
and
std
mov
cmp
mov
ljmp
push
cmp
jmp
add
pop
push
cmp
or
imul
pop
lahf
cli
clc
cld
pop
pop
rcr
shlb
add
testb
inc
faddp
push
notb
add
movswl
out
sahf
mov
int3
add
rcl
scas
xor
data16
cmp
add
jne
pop
mov
sbb
push
leave
lods
loope
cli
ds
xlat
inc
fdivl
and
jae
lock
clc
cld
nop
cmp
xchg
loope
cltd
jge
mov
cwtl
imul
xor
pop
pop
insb
or
arpl
out
push
pushf
cmpsl
and
pop
leave
xchg
scas
pusha
lcall
bnd
xor
sbb
and
pop
and
loopne
push
jae
xor
sub
push
das
mov
fstl
aas
or
mov
cs
and
ljmp
mov
dec
cmp
xor
push
add
js
cmpsb
add
adc
xchg
pop
test
popa
fldenv
rol
jne
outsl
scas
dec
sti
pop
inc
xchg
mov
pop
pop
mov
mov
iret
inc
insb
mov
dec
lock
lret
aas
inc
mov
or
inc
jae
push
movsl
xchg
test
push
cmc
sbb
dec
xchg
adc
sbb
test
daa
mov
sti
cmp
lret
push
inc
cwtl
sahf
aaa
jbe
shll
jne
shrb
pop
push
pop
and
xor
and
dec
hlt
xchg
mov
or
loopne
shlb
and
ret
mov
ljmp
and
dec
add
jb
push
ret
test
arpl
jge
xor
test
jmp
xorb
stos
pushl
mov
dec
in
outsb
xchg
in
cld
push
out
cs
cwtl
xor
stos
scas
sbb
jge
sbbl
pop
push
add
orb
xor
jl
aas
inc
inc
mov
sti
mov
mov
cmp
lahf
xchg
pop
or
mov
test
cmpsb
pop
int3
enter
push
pushf
clc
addr16
xchg
jp
xchg
lcall
mov
xchg
dec
in
push
loope
mov
test
pop
jle
scas
cltd
inc
add
or
jb
mov
xor
sbb
mov
sub
sbb
cmp
leave
mov
cld
adc
jbe
xchg
out
push
insl
aad
sbb
inc
fs
push
cmp
add
out
mov
jo
std
call
cmp
inc
dec
push
mov
cwtl
cmpb
ficomps
ds
sbb
in
hlt
stos
daa
neg
test
lods
test
int
mov
lret
addb
stos
loope
inc
jmp
mov
dec
sbb
xchg
xor
aaa
ss
jecxz
and
fistl
push
data16
addr16
adc
imul
loop
es
xchg
cwtl
push
mov
mov
cmp
push
sbb
out
mov
inc
or
mov
jg
pop
shlb
das
inc
stc
sub
bound
xor
xchg
incl
mov
test
popl
je
dec
jmp
push
insb
fdivp
cmc
pop
sarl
xor
fwait
lret
bnd
ret
popa
mov
femms
add
mov
cmp
loop
aas
adc
and
mov
pop
lea
push
adc
mov
into
fs
ljmp
dec
mov
adc
cmp
sbb
xlat
out
cmp
addr16
ret
or
mov
fisubrl
and
in
dec
xorl
push
movsb
or
fdiv
dec
pusha
std
mov
lret
loope
imul
sbb
cmp
mov
mov
push
movsl
adc
cmc
pop
inc
lret
lret
in
push
cmpsl
repnz
icebp
and
xchg
jp
je
cmp
orb
push
add
push
sub
mov
and
and
scas
dec
push
mov
xchg
push
push
inc
cmp
xor
cmp
call
mov
not
lds
sub
imul
mov
and
pop
jle
cmp
mov
adc
idiv
xor
push
rorb
inc
outsb
inc
test
pop
push
jmp
loope
out
adc
cmp
int3
pushl
sub
scas
push
sahf
movsl
dec
into
sub
mov
ret
inc
adc
push
divl
mov
xor
out
inc
push
or
cmc
call
lock
or
callw
jmp
imul
sub
mov
add
cmp
orl
inc
sub
mov
adc
clc
and
into
jns
push
jmp
jg
psllw
insb
mov
lods
jge
inc
mov
jge
mov
out
loope
cmpsl
ljmp
mov
dec
and
pop
daa
inc
bnd
inc
xchg
test
int3
data16
or
push
imul
aas
sub
jae
push
out
outsl
daa
jbe
repz
sahf
mov
mov
or
shrb
or
mov
adc
scas
mov
arpl
ret
inc
sub
xchg
js
mov
test
repz
clc
adc
daa
jle
jno
and
and
popf
pusha
mov
sbb
out
rorb
cmp
int
out
adc
icebp
enter
sub
or
out
xchg
mov
sub
add
xor
sbb
pop
and
sub
sbb
or
add
sbb
movsl
repnz
fwait
dec
insb
add
pop
xchg
mov
repz
mov
sub
mov
sti
gs
mov
data16
mov
pop
inc
jns
add
ss
repnz
leave
xchg
ror
pop
jp
pop
scas
pop
lods
test
pusha
outsl
mov
jl
or
and
out
cmpsl
lock
into
mov
fmulp
push
sub
pop
push
sub
aam
stc
lret
nop
dec
inc
and
aaa
gs
std
add
arpl
imul
popa
aas
mov
lcall
cmpsl
mov
fwait
jle
mov
das
xchg
cs
inc
andb
outsl
adcl
hlt
jnp
jae
lods
pop
lret
shrb
int
shll
dec
daa
call
mov
fsts
and
lock
push
add
jo
and
mov
imul
push
popa
dec
jne
adc
dec
lahf
mov
imul
xchg
xor
mov
scas
mov
int
pusha
std
push
inc
dec
cmp
mov
aas
fwait
inc
jbe
add
and
mov
jbe
sti
mov
imul
xchg
fmull
loope
or
shrl
movsl
adc
das
lods
cmp
xchg
aam
in
xchg
int3
shl
test
xor
pop
or
push
insl
sbb
add
or
mov
sbb
adc
cmp
push
fisubs
mov
jo
dec
fadd
iret
lods
pop
fbstp
or
xor
std
es
int
xchg
mov
pop
mov
mov
mov
push
xor
repnz
add
ss
adc
ss
subl
xor
and
call
mov
leave
xchg
mov
sub
in
mov
ret
push
dec
jle
lds
inc
mov
jl
inc
add
jne
aam
fisubrl
movsb
mov
das
and
xor
rol
mov
mov
jne
gs
movsl
icebp
out
jp
mov
dec
lods
pop
movsb
push
outsl
enter
loopne
sub
fscale
sbb
mov
mov
cmc
aam
cmp
jne
mov
dec
aam
paddb
pop
out
mov
push
lahf
fcompl
insl
pop
adc
enter
push
sbb
xchg
xor
jae
mov
and
sub
imul
adc
sbb
adc
push
jp
sub
sub
push
dec
aam
arpl
loop
cmp
xchg
lods
xchg
into
aaa
addr16
insl
out
lds
sahf
xor
inc
mov
repnz
inc
movsl
fimuls
fcoms
cmpsl
out
and
shrb
ror
lods
adcl
insl
mov
dec
sar
mov
lret
ja
sti
mov
loope
insl
ret
cmp
in
lret
test
and
mov
push
into
ret
add
gs
jmp
scas
add
or
adc
aaa
lds
and
nop
jo
xchg
mov
int
mov
int3
aad
test
sbb
pop
cmp
xor
orb
push
jl
dec
cmp
insl
insl
push
cmp
pop
inc
aam
cld
push
scas
lcall
cmp
push
add
ja
in
dec
mov
xor
xchg
sbb
mov
jo
mov
or
loop
outsb
pop
cmc
ss
dec
lahf
sbb
push
add
mov
fst
sarl
sub
jge
adc
push
ds
fs
stos
sti
jno
sar
adc
imull
test
sbb
les
jp
fcomps
pushf
push
xchg
arpl
mov
nop
cld
imul
pop
adc
out
push
andb
hlt
xchg
incb
and
insl
sub
mov
mov
jne
mov
inc
xchg
fstps
or
into
cs
mov
sar
cmp
ljmp
cmp
lcall
icebp
int
insl
push
daa
mov
xchg
adc
dec
and
mov
inc
mov
into
mov
cmpsb
pushf
lds
mov
aad
leave
das
add
mov
outsb
rolb
insl
jmp
notl
inc
pop
outsl
out
mov
pop
data16
pop
in
negb
cmp
jae
cmp
shl
and
std
jo
mov
shrb
shl
push
adc
mov
mov
fsubrs
insb
sbb
nop
mov
mov
push
pop
inc
in
sti
int3
lahf
in
xchg
pushf
sbb
dec
popa
mov
pop
xor
nop
sbb
ljmp
mov
and
jo
jg
rol
sahf
sub
jno
pop
jnp
in
adc
sbb
jle
jl
sub
fwait
scas
mov
jle
adc
adc
sbb
mov
xor
and
mov
push
aad
fwait
jmp
mov
and
inc
stc
pop
inc
jae
jge
fs
out
jp
arpl
lahf
in
out
mov
add
fiaddl
sti
loope
lret
mov
mov
jb
ret
scas
test
or
fldenv
cmp
jecxz
mov
jne
enter
sbbb
push
xchg
xchg
sbb
and
bnd
inc
xchg
decl
and
add
xorl
hlt
fs
stc
out
cmp
dec
stos
mov
mov
mov
cld
les
mov
loopne
movsb
push
inc
inc
into
pushl
pop
loopne
out
loop
stos
or
xchg
dec
jl
jmp
xor
or
pop
addl
push
pop
out
add
fstp
dec
out
add
pop
stc
movsl
cld
mov
sub
add
lods
sbb
shll
sbb
push
mov
ja
xchg
mov
xor
pop
out
pop
and
in
cmpsl
and
std
ja
push
jo
pop
filds
xor
jp
xchg
xlat
addl
loope
xlat
cmpsb
jae
shrb
or
cmp
mov
jno
loopne
ret
jp
addr16
dec
or
repnz
mov
in
mov
xor
sbb
js
mov
and
jae
inc
and
std
test
dec
add
mov
out
pop
push
iret
xor
mov
mov
popf
data16
xchg
es
ljmp
lahf
sub
int
mov
mov
mov
cltd
popa
jle
push
xchg
ret
jmp
aas
pushf
add
xor
fbstp
sbb
add
mov
jle
jns
sbb
mov
xor
sarl
xor
lcall
pop
pusha
sub
lods
jp
jge
das
jns
fbld
test
mov
add
in
push
cld
mov
xchg
cmp
sahf
or
mov
cwtl
iret
stc
scas
loope,pn
jmp
pop
push
and
and
mov
int
cmp
xor
in
jo
xchg
push
lcall
subl
xor
push
lock
icebp
adc
push
jmp
call
cmc
test
inc
mov
inc
xchg
daa
sub
jge
xchg
mov
jbe
ja
pop
inc
xor
xlat
xor
pop
jecxz
sub
mov
call
fisubrs
xchg
test
push
sub
sbb
dec
jb
sbb
adc
cmc
cld
jbe
cmp
push
xor
mov
loopne
or
mov
repz
or
adc
ret
insb
repz
xor
push
adc
nop
insb
in
outsb
dec
inc
fstpt
pop
divl
loopne
mov
icebp
mov
jo
add
scas
lret
ret
pop
cmpsb
or
in
push
xchg
imul
int3
jmp
lcall
jl
les
push
jg
push
aad
popf
je
mov
sbb
stc
dec
mov
dec
scas
adc
fldenv
jb
push
pop
mov
ds
ss
sub
xchg
je
xchg
jle
mov
movsb
or
ja
stos
push
test
cld
fwait
sti
subb
pop
stc
test
je
mov
rcrb
shr
mov
inc
xor
mov
add
int
or
leave
push
xor
subb
test
jnp
sbb
out
or
clc
and
iret
addr16
hlt
xor
fcoms
push
inc
push
movsb
fdivl
xor
jp
sub
divb
inc
adc
inc
or
je
cli
fnstcw
push
nop
pop
xor
insl
dec
cmp
sub
arpl
out
enter
sub
lods
pop
sbb
cmp
test
push
repnz
clc
jbe
pushf
push
movsl
push
jle
lahf
sbb
daa
push
repnz
stos
stc
fcomp
leave
enter
test
inc
sarb
xchg
jmp
faddl
in
inc
es
xchg
out
xorb
inc
scas
icebp
push
sub
es
push
and
push
sub
xor
fdivs
cmp
cmp
aam
lods
inc
aam
in
xchg
inc
repnz
lret
pusha
clc
adc
sub
and
imul
add
mov
cltd
xchg
mov
es
loope
lods
shlb
incb
test
gs
inc
popf
dec
test
sti
mov
sub
sub
leave
and
mov
jo
jo
out
ret
xchg
adcl
in
cmpsl
shl
enter
mov
xchg
cmpsl
jbe
mov
dec
jmp
xorb
xchg
shrl
pop
dec
add
adc
stos
or
jle
adc
push
push
adc
insb
inc
inc
push
dec
shlb
xchg
leave
dec
jns
or
add
daa
cmp
pushf
lahf
jmp
adc
jecxz
and
xchg
out
sbb
aam
cmp
mov
xchg
popa
jno
stos
iret
sbb
add
in
ds
mov
dec
sbb
ss
jno
ds
into
adc
mov
sub
push
sbbl
sbb
jge
popf
scas
dec
cs
ja
mov
pop
shrb
in
mov
dec
insb
xlat
clc
xor
pop
js
cmovnp
insl
jnp
mov
dec
lahf
xchg
ret
inc
in
or
and
jae
pop
sub
test
adc
in
aaa
jle,pn
or
lahf
imul
mov
in
div
jl
or
fidivl
sub
push
xor
lods
outsb
mov
ja
ret
ret
es
fwait
xchg
data16
addb
ret
jl
jmp
test
adc
dec
lcall
adcb
jl
fsub
jnp
mov
or
jbe
mov
call
dec
mov
icebp
sbb
stos
scas
cltd
stos
adc
mov
lds
cmp
push
lods
and
test
fnstsw
and
jle
inc
inc
xor
pop
hlt
pop
dec
gs
ficompl
push
cmp
jae
dec
dec
test
mov
bound
jnp
stc
ret
pop
mov
jno
je
repnz
stc
or
add
jnp
push
clc
rorl
mov
mov
mov
mov
aaa
and
sub
insl
xchg
addl
sbb
cwtl
dec
add
xchg
jecxz,pn
sub
popa
xchg
adc
ljmp
enter
jg
mov
int
or
mov
pushf
jne
or
mov
sarl
jmp
movsl
pop
mov
mov
cld
mov
adcl
ja
lods
xor
adc
test
gs
pusha
ret
cmp
ljmp
cli
cs
outsl
adc
push
jle
adcb
pop
inc
ret
rcrb
mov
movsl
xchg
jl
ret
in
ret
adc
int3
xchg
in
pusha
ljmp
scas
ret
mov
add
adc
xlat
adc
push
cmpsb
int
mov
jmp
cmp
xchg
cld
or
adc
push
inc
adc
xchg
or
outsb
mov
mov
cmp
inc
xlat
jae
jae
aas
push
adc
and
xor
sbb
scas
insb
sbb
inc
jb
sub
repz
out
cmp
jmp
jno
inc
loopnew
arpl
pop
or
aaa
ljmp
lret
xchg
cmp
sub
add
jae
push
pop
scas
cmp
pop
popa
mov
inc
lds
hlt
out
push
inc
loop
add
ficompl
popa
call
push
jno
push
xchg
mov
pop
jno
ficompl
lcall
push
add
sahf
jns
insl
and
mov
pushl
lock
inc
out
mov
sahf
and
mov
fnstenv
cmp
mov
and
aas
jb
loop
inc
cli
testl
dec
mov
adc
adc
js
cld
in
jbe
inc
push
stos
pop
xchg
pusha
add
cwtl
imull
pusha
mov
jnp
fcmovu
jmp
movsb
jl
cld
fldl
cli
ljmp
push
test
inc
pop
call
repz
pop
add
and
fwait
out
add
out
and
xlat
filds
push
stc
outsb
mov
xchg
lock
aas
push
cltd
das
mov
mov
mov
dec
orl
or
jo
daa
dec
cmp
lds
xchg
lods
test
pop
repnz
outsl
mov
mov
jp
idivl
insl
sbb
decb
xchg
lahf
mov
mov
icebp
cmp
push
push
movsl
mov
sub
adc
and
test
inc
cmpsl
fwait
dec
sbb
gs
xchg
fstl
in
jecxz
sub
loop
jbe
adc
pop
mov
mov
dec
stc
out
add
xchg
dec
dec
stc
aaa
testl
sbb
enter
rcr
or
cwtl
mov
imul
pop
push
jle
fwait
ret
xchg
sahf
ja
adcl
lds
jge
dec
negb
or
cli
inc
sub
aaa
add
sbb
int3
popa
ss
rcrb
ljmp
iret
sub
xchg
jns
stos
or
and
or
cmp
in
arpl
test
adc
lret
outsl
lret
or
lods
mov
add
jg
adc
jb
add
aam
mov
sub
test
jmp
incl
repz
ret
das
adc
xchg
sub
or
ds
imul
loopne
and
lock
popf
xor
sbb
in
mov
jo
jns
stc
inc
imul
fmuls
inc
pop
xor
fimull
lcall
mov
add
push
add
add
sub
ljmp
negl
inc
fildll
lret
inc
sbb
cmc
jl
lahf
sbb
mov
adc
jne
jbe
sbb
fisubrl
mov
sub
sub
fiaddl
lods
adc
lods
js
cpuid
jns
sbb
addr16
rcll
in
and
repnz
insl
insl
add
lods
pop
mov
in
call
jb
push
hlt
mov
mov
mov
push
sbb
sti
dec
mull
lods
push
and
aam
sar
pop
dec
pop
out
mov
push
sub
stos
fimull
jle
in
popa
stos
lock
sbbb
mov
add
mov
imul
bnd
in
ss
xchg
in
jne
ret
adc
addr16
mov
jp
dec
jno
rcl
loope
jl
test
dec
dec
repnz
and
add
mov
mov
xor
mov
int
cld
inc
dec
aad
loop
sti
stos
push
pop
test
ljmp
mov
mov
inc
iret
pop
stos
lret
inc
mov
scas
pop
pop
insl
lcall
roll
insb
int
inc
push
sarb
movsl
mov
fldt
pop
inc
je
cmc
cmp
fidivrs
and
popf
roll
dec
fisubs
hlt
mov
loop
out
adc
pop
push
pop
dec
lock
mov
jmp
cmp
xchg
pop
dec
push
and
orb
xchg
adc
and
jo
addr16
jo
mov
mov
loopne
cmpsl
adc
daa
sbb
stos
push
mov
sbb
int
aam
add
mov
test
ret
shl
loopne
rcrb
clc
shll
pop
inc
rcll
fldt
loope
in
pop
dec
xlat
ficoms
add
test
cmp
aas
gs
idiv
loop
mov
scas
fwait
outsb
mov
mov
movsl
mov
mov
adc
imul
lret
xor
call
add
ljmp
xchg
jp
dec
pusha
mov
loopne
mov
ret
sub
sub
sbb
int
sti
inc
shl
xchg
mov
or
push
jecxz
in
fcomp
cwtl
or
cmp
pop
cli
xor
movsl
pop
pop
jecxz
xchg
mov
out
mov
ret
sub
push
xor
add
stos
mov
mov
xchg
mov
fs
xor
lods
mov
push
pop
loope
jb
mov
cmp
daa
add
jge
test
sti
fwait
movsb
bnd
out
mov
call
pop
add
insl
dec
mov
cltd
sub
xchg
cmpsl
and
push
adc
mov
enter
dec
ds
xor
dec
fisubs
ja
inc
loop
fcoml
ret
or
jbe
loope
icebp
xchg
popf
and
jmp
and
hlt
ret
mov
aaa
mov
adc
ret
xor
insb
bound
fs
push
hlt
and
jbe
jne
gs
data16
xor
mov
mov
nop
cmp
push
mov
add
push
pop
sbb
loop
loope
push
in
push
nop
ret
shlb
stc
stos
xchg
push
mov
push
or
push
adc
inc
adc
dec
out
cmpsl
repnz
into
jnp
pushfw
std
jbe
lock
aas
out
inc
cld
aas
sbb
inc
dec
dec
movsl
jp
popf
push
rcrl
mov
push
xor
mov
adc
mov
push
pop
dec
sbb
inc
int
pop
roll
lods
repnz
push
mov
cltd
xor
dec
pushf
sets
lock
push
and
pop
sub
call
add
pop
jecxz
push
push
dec
notb
adcb
mov
dec
and
ret
mov
jnp
sbb
ljmp
mul
inc
push
mov
cmp
mov
or
xchg
sbb
add
ss
test
adc
repz
jo
mov
cmovo
pop
adc
adc
push
push
arpl
mov
nop
xor
inc
int3
dec
shl
imul
sub
notb
jle
adc
imul
xor
cmp
mov
add
sub
xchg
xchg
out
mov
mov
loop
sub
test
lds
fbstp
dec
sbb
push
js
push
lods
dec
mov
lcall
mov
mov
xorl
pushf
mov
inc
aad
movsb
enter
fldcw
push
or
lahf
mov
stos
mov
pop
ret
xor
call
sub
push
cmpsb
pushf
mov
pop
out
pop
imul
or
xchg
lcall
jae
loop
mov
pminsw
stos
fsubr
js
add
xchg
shll
das
bound
int
sbb
je
aam
jno
pop
not
adc
sub
pop
mov
mov
das
loop
rcl
imul
repz
fwait
test
push
rclb
cmp
sti
mov
cmc
push
pop
leave
insl
mov
sbb
mov
leave
cmp
or
jle
dec
jmp
or
std
or
gs
or
cmp
xchg
fs
xor
pusha
addr16
les
sbb
insl
negb
xor
loop
dec
lods
xchg
stos
out
jge
popa
das
fdivs
xlat
cmp
roll
into
mov
out
out
mov
arpl
test
mov
and
add
and
fisubs
imul
enter
sub
ret
repz
in
cmpsb
pop
aaa
fisubl
and
cmc
cmp
jne
aaa
mov
fistl
inc
mov
xchg
inc
xor
cmpsl
pushf
lock
imul
add
fdivrs
stc
mov
imulb
pop
push
fs
xor
cmp
popa
mov
xchg
sbb
imul
fcomip
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
jne
push
adc
jge
and
mov
aaa
pushf
in
in
sbb
cmp
sbb
insb
or
xchg
imul
imul
and
xor
sti
or
imul
xor
mov
jge
dec
scas
loop
call
dec
pop
xchg
aaa
cmpsb
dec
negb
push
insl
ds
pop
xchg
out
shl
sbb
call
ret
ds
push
loope
cmp
data16
insl
dec
push
sub
pop
or
sub
dec
fs
in
in
push
stos
sub
pop
out
add
xchg
ret
xchg
mov
xchg
insb
stos
mov
iret
into
jecxz
je
dec
inc
push
mov
mov
add
test
add
jg
push
jne
inc
loop
or
fistps
xor
inc
clc
fmul
inc
popa
int3
aaa
das
push
add
mov
mov
push
pop
loope
stos
sbb
pusha
repz
or
mov
inc
filds
add
sbb
xor
xchg
sbb
mov
inc
popf
xor
imul
pop
add
xchg
insl
mov
adcl
fdivp
or
pop
or
jmp
test
xchg
mov
ret
int
mov
jne
test
sbb
xchg
or
dec
inc
icebp
iret
push
inc
sub
xor
jl
mov
sarb
mov
pop
sbb
or
push
mov
xchg
inc
aaa
dec
push
adc
insb
jl
bound
fists
adc
xor
dec
and
pminsw
jp
movsb
inc
push
loop
push
sub
andl
lret
je
push
lods
xor
leave
sarl
cmp
xchg
mov
jnp
and
push
and
xor
ljmp
sub
lds
dec
insl
adc
cmp
popf
mov
add
xor
clc
and
out
mov
mov
jmp
and
test
cwtl
stos
popf
mov
xchg
sub
fimull
push
mov
cli
popf
cli
std
lcall
test
mov
in
dec
pmuludq
or
sub
mov
shl
popa
jle
jmp
adc
lret
push
push
aaa
int
mov
clc
in
jg
push
dec
outsl
cmp
lea
mov
adcb
jnp
fidivl
dec
add
nop
mov
add
mov
and
or
loope
popf
adc
stc
cs
out
xor
push
pop
lret
and
inc
mov
inc
in
sub
add
xor
push
and
test
or
xor
lret
cmpb
div
test
jno
sub
out
in
push
into
and
fst
jmp
mov
push
bnd
pop
and
sbb
cmpsb
jl
fdivrl
jmp
mov
mov
xchg
xchg
mull
sarb
mov
mov
popa
subl
ss
pop
inc
jmp
test
xchg
hlt
sub
cmp
cmpsb
mov
xchg
cmc
fcompl
inc
data16
xchg
scas
push
and
lds
popa
mov
iret
cltd
pop
push
cmpb
mov
pop
outsb
mov
cmc
scas
pop
mov
loopne
jl
sbb
insl
mov
aad
fistpll
in
ja
mov
push
outsl
mov
cmpxchg
jp
outsb
push
fimull
popa
push
jns
ret
adc
test
pusha
inc
xchg
inc
je
in
sub
cld
enter
jns
pop
xor
shlb
push
jnp
stc
mov
cli
insb
jp
sbb
div
sti
test
add
adc
daa
insl
adc
ja
sbb
imul
sub
or
and
adc
movsb
outsb
add
pop
jb
mov
out
push
es
out
and
ud0
pop
push
or
jge
test
fiadds
inc
pop
add
mov
fdivp
cmc
shlb
out
scas
test
roll
xor
gs
out
mov
loop
scas
pop
cli
inc
mov
push
out
pushaw
inc
lock
enter
push
xor
jmp
scas
jl
lret
push
movsb
popf
dec
xor
xor
add
sub
popa
in
jmp
xchg
push
movsb
insl
fldl
imul
andl
dec
adc
into
xor
ret
dec
adc
out
cmp
add
lahf
add
or
jae
fdivrp
jns,pt
int3
mov
jle
pop
aam
outsl
out
cmp
sbb
repnz
inc
inc
push
pop
test
inc
test
roll
sbb
ss
dec
pushf
sub
inc
inc
push
jae
inc
loop
add
mov
xacquire
push
jnp
or
xor
add
jmp
fsubrp
in
stc
lcall
jle
stc
xchg
popf
and
mov
pop
sub
out
inc
adc
jbe
push
pop
lods
test
dec
fwait
xchg
mov
sbb
ret
js
popa
je
loop
jp
xlat
push
cwtl
les
push
out
inc
stc
sub
xchg
dec
popa
aas
loop
cmp
sub
inc
mov
outsb
je
push
xlat
push
or
cld
pop
stos
pop
shrb
adc
jmp
mov
movsb
mov
cmp
xor
loop
enter
add
jmp
and
rcl
dec
or
jb
arpl
in
je
xchg
ss
mov
sub
cmp
inc
cmp
jg
jl
gs
fwait
in
mov
jl
hlt
xchg
cmpsl
clc
adc
and
push
clc
xchg
sub
out
sbb
add
mov
out
ljmp
mov
pop
ret
loop
jg
aam
arpl
adc
lods
add
rorl
push
loop
push
mov
add
orb
sub
aaa
repz
xor
mov
fsts
int3
mov
pop
sub
sub
fisttpll
mov
xchg
pop
jg
repnz
sahf
pop
mov
dec
mov
cs
fwait
inc
pusha
imul
mov
push
cmpsb
xchg
add
inc
in
cmp
xchg
mov
into
lods
aam
add
fisubl
xor
dec
aam
inc
bound
fcompl
mov
ficomps
dec
sub
xlat
add
push
mov
es
mov
push
out
lret
shl
cmp
jl
js
shrl
mov
pop
int
and
add
test
imul
xchg
adc
aas
adcl
sbb
cli
das
pop
insl
add
pop
rcll
push
fisttps
imul
hlt
xchg
stc
push
and
into
xlat
and
aad
je
out
add
jmp
out
es
mov
je
cmp
cwtl
push
mov
aam
and
in
push
jns
pop
js
outsl
fsts
loopne
in
clc
sarl
ret
in
pop
aas
repnz
add
pop
out
push
fsub
and
mov
mov
mov
xor
pop
fwait
jmp
fdivp
dec
int
mov
sub
loope
cs
gs
xchg
sub
arpl
or
lret
add
idivl
xchg
sbb
icebp
inc
add
outsl
mov
test
imul
adc
xchg
mov
adc
iret
lock
shrl
int3
insl
shlb
mov
inc
outsl
mov
inc
lds
pop
inc
rclb
and
shrb
push
dec
sbb
leave
dec
rclb
pop
test
jmp
pmulhw
push
fcoml
cmp
adc
aam
dec
cmp
cmpsl
push
lods
push
inc
fdivr
mov
jg
or
loopne
jle
add
cmp
mov
stos
pop
pop
mov
scas
cmpsl
xchg
add
data16
les
fstpt
fwait
adc
test
jno
inc
lcall
int
sbb
pop
or
daa
push
imul
adc
iret
xchg
idivl
das
in
out
add
inc
scas
push
push
imul
and
std
call
mov
xchg
enter
add
add
mov
mov
push
mov
test
mov
and
pop
sub
and
mov
inc
aam
fmul
fdivrp
cs
call
jg
jnp
and
cwtl
push
pop
pusha
jae
mov
movsl
cmp
in
cmp
push
xchg
in
or
push
mov
movsb
lret
push
inc
mov
popa
js
mov
xchg
std
subb
jmp
mov
adcb
jmp
and
and
lret
sbb
out
push
adc
sub
dec
sarb
xor
js
inc
inc
es
cmp
cmp
lcall
mov
xchg
hlt
mov
adc
inc
std
mov
fadds
fcompl
push
sbb
iret
mov
adc
int3
add
cli
in
fists
mov
insl
lods
add
mov
in
addr16
stc
jns
and
imul
cld
adc
enter
insl
xor
sti
out
movsl
in
std
lret
mov
cmpb
in
pop
mov
xchg
ljmp
aam
loopne
ljmp
inc
lods
or
leave
sbb
js
les
enter
hlt
jecxz
xor
and
mov
dec
xchg
sbb
arpl
lea
int
or
fwait
out
fs
cmp
xor
sbb
xchg
add
and
xchg
hlt
scas
fs
clc
xor
jp
xchg
outsb
mov
xchg
sub
xchg
mov
imul
mov
inc
mov
pop
sbb
inc
push
mov
xchg
mov
xchg
dec
int
pop
insb
dec
pop
push
shlb
cmc
mov
xchg
rolb
outsl
mull
arpl
rcrb
pushf
insb
push
lock
cmpsb
lret
popa
inc
stos
sarb
shll
dec
and
and
push
testl
std
mov
push
mov
out
fsubs
and
pushl
add
loop
mov
fisubrl
push
jl
cmp
in
pop
sub
adc
dec
jg
aaa
sbb
enter
pop
scas
and
insl
add
or
jo
mov
sub
lds
cmpb
jbe
mov
test
fisubrs
sbbl
hlt
xchg
jns
pop
jnp,pn
pop
aaa
sub
fnstenv
les
testb
cld
or
dec
lods
xor
sbb
scas
popf
in
pop
and
scas
xchg
sbb
or
jmp
jno
mov
xchg
testb
sub
popa
xchg
pop
cli
stos
fiadds
push
mov
je
fisubrl
arpl
js
int
jle
stos
lea
adc
loopne
dec
test
xchg
clc
push
int3
imul
out
push
and
sbb
adc
clc
scas
xchg
fcom
cmc
xchg
cmp
mov
in
ljmp
dec
pushl
das
cwtl
or
stos
das
jne
std
in
fimull
mov
cli
fistpll
test
movsl
out
inc
mov
pop
outsl
fstp
das
mov
sbb
add
or
xchg
in
and
or
test
hlt
xor
push
xlat
int
popf
mov
loope
rcrb
out
dec
dec
adc
pop
or
mov
mov
push
jg
jae
inc
popl
jge
push
scas
test
out
and
stos
imul
jbe
push
add
fldt
je
push
out
aam
adc
shl
out
leave
jp
inc
xchg
cli
gs
xor
pop
aas
add
and
xchg
shlb
add
cltd
cmp
push
fcmovnu
pop
ret
cmp
icebp
outsl
jne
xor
inc
cltd
aaa
out
or
outsb
cmp
pop
sbb
xchg
ja
in
cmp
dec
test
mov
pop
sub
and
cmovbe
sahf
fldlg2
lret
addr16
cmp
int
sbb
outsb
ret
movzwl
mov
ret
push
adc
mov
clc
jb
and
inc
jmp
mov
cmp
rcrl
mov
xchg
add
enter
pop
out
sub
repnz
imul
fmull
stos
frstor
cmc
or
scas
jns
inc
out
ja
popl
inc
push
inc
in
jne
cmpsb
into
sub
imul
cmc
daa
inc
jno
stc
pop
jmp
jns
mov
pop
xor
incb
dec
adc
addr16
lods
push
pop
add
pop
fldcw
fnstenv
push
jae
or
mov
pushf
icebp
lods
aaa
out
cmp
jno
out
mov
adc
jp
iret
cmp
xchg
dec
or
nop
movsl
xchg
mov
add
iret
ss
xor
rcl
fcoml
test
xor
insb
es
into
cmpsl
cmpsb
mov
nopl
lods
fbstp
bswap
and
xlat
sub
mov
fisubs
aad
stos
and
sub
icebp
inc
lret
out
jb
lock
cli
idivl
adc
mov
pop
sub
adc
mov
jg
in
adc
outsl
xchg
jecxz
xor
out
add
mov
lahf
aam
xor
addr16
pop
sub
lcall
movsb
leave
fidivs
inc
movsl
cmp
or
or
je
clc
push
add
fsubs
pop
xor
rcl
inc
popa
cltd
inc
sub
mov
in
and
scas
cmp
out
mov
fwait
movsl
in
movsl
ljmp
hlt
gs
fldl
or
adc
sub
and
xor
ja
lds
xlat
sub
insl
icebp
xor
push
mull
lock
dec
ror
lcall
rcl
xor
dec
mov
mov
in
repz
sub
inc
cmpsl
xor
test
jne
jl
push
ret
fdiv
int
call
jg
lret
mov
mov
jg
lea
pop
jnp
lret
ljmp
sub
dec
jnp
dec
mov
js
out
std
test
xchg
and
push
mov
cmp
dec
es
lret
xor
roll
and
xchg
outsl
push
sbb
flds
test
pushf
lcall
lea
loopne
test
mov
mov
in
aaa
pop
mov
test
fwait
gs
test
js
push
fisttpll
xchg
or
sub
addr16
sbb
leave
mov
jl
dec
push
xor
pandn
mov
scas
mov
or
cs
jae
sbb
add
inc
stc
jbe
inc
pop
repz
dec
jb
jp
mov
imul
xchg
fdivrp
sbb
mov
xchg
in
mov
divb
pushf
bound
lock
inc
mov
mov
or
test
sahf
aaa
imul
mov
dec
adc
test
jle
fsubl
imul
in
mov
insb
iret
cmp
arpl
xchg
divb
mov
pop
push
xor
and
xchg
and
rclb
adc
sbb
sti
mov
adc
or
add
push
inc
push
sbb
daa
xchg
repnz
std
push
add
fldl
sbb
shl
or
ds
and
stos
sub
xchg
mov
dec
jo
pop
outsb
pop
shr
mov
cmp
int3
cmpl
push
pop
rcrl
daa
daa
cmc
lods
idivl
jae
pop
call
fwait
push
add
jl
das
inc
lds
and
test
stos
inc
cltd
or
cltd
rorl
or
xchg
es
incl
xlat
inc
jnp
sti
insl
push
adc
scas
test
data16
popf
or
sbb
dec
icebp
cmp
shr
iret
jbe
jae
addr16
imul
es
outsb
mov
pop
mov
pop
fs
jge
add
push
leave
inc
pop
inc
fstl
ret
push
stos
inc
stos
or
pop
mov
sbb
mov
mov
or
aad
outsl
movsl
mov
test
lcall
xchg
cmp
sub
movsl
dec
ss
adc
jbe
and
push
pushf
and
pop
ret
ficompl
loop
adc
inc
or
add
loop
push
dec
dec
or
sbb
inc
xchg
fidivrs
loopne
jl
aad
sbb
xchg
addr16
scas
das
je
sub
xor
adc
cmp
iret
das
out
and
mov
jmp
cwtl
rorb
push
mov
inc
inc
xor
clc
push
jnp
jecxz
adc
or
mov
push
mov
rep
jne
fdivr
xchg
lock
lea
sti
adc
inc
loopne
jo
xchg
cmp
mov
test
mov
cmp
cli
jae
dec
or
stc
sub
jecxz
lds
sti
xchg
jp
jns
in
jb
aaa
pop
ljmp
call
sarb
xchg
pop
insb
fs
mov
mov
adc
std
cmp
inc
pop
in
jecxz
and
xchg
imull
loop
cmp
adc
clc
sbb
mov
repz
inc
and
ljmp
inc
push
fdivl
filds
js
imul
in
jmp
lcall
sbb
and
cmp
loopne
lds
out
lock
jae
xchg
cli
mov
mov
xchg
cmp
adc
pop
adc
ficomps
jns
xor
in
push
imul
push
lahf
test
and
cmp
sub
mov
addl
out
mov
je
lea
add
bound
test
repnz
mov
aam
repz
pop
mov
imul
daa
outsl
and
sti
cs
push
jb
adc
ss
adc
cltd
jno
and
enter
xor
aaa
cld
or
jnp,pt
adc
fcos
cmp
sub
call
gs
jno
xor
cmp
ljmp
and
loope
pop
xchg
sub
jp
jecxz
inc
cli
movd
aas
repnz
fs
ror
pop
xchg
in
test
dec
nop
lahf
in
or
insb
les
or
rcrl
add
gs
addr16
shrb
in
inc
outsl
js
mov
push
faddp
jge
in
sbb
pop
push
sarb
push
dec
or
ss
call
scas
pushf
cmpsl
fwait
jg
fdivl
roll
xchg
ja
dec
js
stos
xor
cmp
dec
push
cmp
inc
popa
mov
mov
mov
adc
mov
and
arpl
xchg
add
mov
sub
jb
push
js
js
pop
jmp
xor
pop
mov
into
add
ljmp
int3
pop
pop
xchg
nop
das
jnp
jmp
out
xchg
fcompl
cmp
push
pushf
jle
out
fxch
sbb
shlb
rcl
or
in
ret
out
mov
jno
icebp
cmpsb
inc
jbe
dec
pop
mov
xor
cmpsb
cmp
sbb
sub
mov
sti
xchg
push
push
cli
mov
data16
cmp
adc
dec
dec
cmp
popf
add
push
add
lcall
add
in
or
jbe
sbb
push
push
or
sbb
cltd
addr16
in
stc
out
push
pop
andl
aas
inc
push
fwait
out
mov
leave
and
push
push
jmp
pop
and
xor
adc
out
jmp
iret
mov
fdiv
pop
inc
sub
sub
mov
dec
mov
dec
test
fwait
pusha
cmp
add
jmp
insl
nop
sbb
in
mov
inc
js
mov
stos
mov
jp
lret
inc
jb
mov
jl
outsl
cmp
lods
popa
and
popf
and
sti
icebp
cmp
insl
xor
icebp
cmp
movsb
out
inc
dec
ja
out
cmp
push
outsl
push
xchg
add
xchg
pop
and
push
sahf
adc
outsl
mov
clc
test
daa
lock
int
dec
xchg
call
out
les
dec
jne
roll
nop
scas
movsb
mov
daa
jo
pop
and
push
inc
pop
test
lock
jmp
or
xor
shl
sarb
add
popa
pop
or
test
push
xchg
add
sbb
cli
pop
inc
xchg
ret
push
inc
je
test
push
sub
movsl
lcall
lahf
mov
xor
inc
test
gs
loopne
movsb
ud1
movb
xchg
fbstp
std
and
jg
dec
dec
xchg
push
es
xor
mov
jo
cltd
mov
das
sarl
dec
push
pop
xor
pop
jo
insb
xchg
adc
mov
dec
pop
shlb
sub
pushf
xchg
testb
dec
sub
jbe
rorl
iret
pop
int
jo
es
out
idiv
jmp
cmpb
xor
inc
dec
jb
inc
dec
push
sub
or
outsl
pop
jmp
enter
sahf
jbe
call
shll
sbb
or
and
lods
mov
cmp
pop
pop
jae
imul
mov
inc
mov
movsb
mov
adc
dec
stc
sahf
loope
or
stc
imul
repnz
jg
lds
ja
outsb
insb
outsb
clc
jmp
mov
lcall
mov
xchg
ljmp
mov
fcomps
fisttps
call
or
mov
jge
imulb
out
sub
pop
inc
addr16
or
mov
pop
jno
add
jno
inc
movsl
dec
hlt
shl
xchg
addr16
mov
rcrb
mov
out
add
lahf
push
or
adc
fldl
and
mov
out
scas
out
adc
mov
dec
push
jg
lds
in
inc
ljmp
inc
add
sbb
push
out
jecxz
sbb
add
out
stos
ficoms
fstpt
inc
sub
out
out
rorl
popa
shrl
ds
dec
lret
aad
test
xor
inc
mov
push
out
stos
mov
subl
fbstp
das
pusha
mov
ds
mov
leave
lea
ret
mov
or
fbld
enter
das
push
xor
xor
xchg
in
jbe
ja
or
or
sbb
int3
mov
lds
insl
mov
jg
ljmp
int
lahf
js
cmp
dec
sub
das
in
mov
cmp
hlt
xchg
sbb
add
mov
movsl
jmp
rorb
lods
ljmp
insl
xchg
sahf
scas
shr
cmc
xchg
dec
movsl
mov
lcall
xchg
icebp
lcall
push
jo
mov
les
mov
nop
dec
dec
ss
pop
xchg
push
js
ret
stos
xor
in
xchg
xor
arpl
xchg
cmp
shrl
in
cmp
sahf
aam
pop
inc
sub
add
xchg
into
sbb
jnp
test
hlt
push
rclb
dec
enter
cs
daa
in
daa
dec
adc
sbb
pushf
sbb
mov
push
jo
inc
stos
or
mov
sahf
fldt
xchg
gs
mov
out
jno
addb
fisttpll
jl
aam
inc
mov
stc
fdivrs
cli
pop
jbe
leave
ss
inc
test
inc
in
xchg
and
and
inc
xor
fld
rcrb
xchg
mov
mov
scas
es
xor
dec
mov
mov
push
insb
push
loope
adc
rcr
pop
or
dec
mov
stos
cmpsb
pop
popf
cltd
inc
mov
adc
cli
lret
out
inc
loop
and
enter
cs
lods
sbb
les
cmp
inc
and
adc
mov
pop
mov
sbb
popa
out
testb
push
add
mov
or
fwait
push
int3
cli
stc
das
and
mov
pop
sbb
dec
int3
sub
jl
out
dec
sahf
scas
leave
sub
jne
int
jbe
sti
fidivs
cmp
js
mov
fs
out
xchg
pusha
mov
sub
jge
fisttpl
or
ret
jg
loopne
stos
data16
out
jmp
dec
xor
imul
and
add
push
push
mul
out
loop
cltd
dec
ljmp
pop
dec
xor
jae
inc
gs
daa
mov
scas
cwtl
or
add
icebp
cmc
add
sub
push
mov
mov
mov
xor
dec
jge
into
sbb
dec
push
xchg
inc
cmp
and
sbb
or
and
mov
pop
inc
pop
xor
jl
mov
scas
loope
push
xor
push
mov
push
ss
xchg
ret
pop
mov
scas
rclb
stc
insb
cmp
xor
addr16
add
push
in
push
mov
dec
push
stc
push
test
sub
into
push
xor
movsb
push
stos
xchg
inc
adc
int
stc
mov
gs
xor
push
xchg
mov
mov
movsb
addr16
xor
outsl
fidivs
jo
jg
cmp
into
dec
sti
dec
mov
inc
ret
cmp
adc
orl
dec
iret
cwtl
jge
mov
mov
pop
jne
movl
pop
popf
scas
out
flds
push
cmp
js
pop
and
mov
fidivl
mov
loop
dec
mov
dec
add
or
cld
aas
lods
imul
xor
pusha
mov
lock
mov
ror
pop
loope
insb
xchg
shll
mov
dec
loope
insl
push
xchg
pop
notl
cmpsb
into
or
jne
mov
mov
jb
dec
gs
rcll
jbe
ret
out
sub
xor
js
idiv
arpl
fcompl
movsb
mov
pop
repnz
inc
xlat
xchg
xchg
fsubr
int
xor
in
and
cli
xor
popf
lcall
cld
addr16
sbb
xor
ss
and
lcall
stos
adc
jmp
loope
push
mov
pop
sahf
repnz
lahf
jns
arpl
dec
aad
loopne
push
in
xor
cmpl
cltd
popf
jne
inc
divl
scas
jecxz
and
pusha
lds
jecxz
xchg
ljmp
loope
pop
or
in
in
mov
jl
mov
pop
sbb
incl
and
inc
sarl
xchg
in
jp
dec
jns
call
cmc
enter
fnsave
punpckhwd
roll
cli
inc
adc
out
push
xorb
fsub
inc
lock
test
sbb
inc
xlat
cmp
xor
scas
shl
push
mov
lcall
or
add
stc
rcr
stos
sbb
mov
mov
fidivrl
add
loop
nop
cltd
jnp
add
sbb
add
mov
xchg
out
or
and
les
js
sub
call
mov
adc
jbe
hlt
and
sub
push
jp
mov
movsb
in
mov
shr
sub
mov
bound
data16
jae
in
cmpsb
int3
xchg
divb
xor
inc
xchg
enter
pop
filds
jle
dec
insb
pop
push
dec
ja
mov
cld
pusha
inc
jge
pop
and
insl
sub
mov
lcall
fstpt
call
push
sahf
stos
xchg
push
add
shlb
jno
inc
mov
inc
imul
ret
dec
rcr
push
loop
test
xchg
dec
shlb
add
leave
lret
lahf
jne
outsl
loope
fidivs
ja
mov
xchg
int
arpl
fldt
mov
xor
stos
push
dec
jg
stc
jnp
mov
cwtl
rolb
and
cli
xchg
inc
adc
das
add
jle
cltd
pusha
push
enter
pusha
adc
in
clc
cmpsb
fistl
imul
imulb
sub
sub
lret
in
out
lods
pop
or
cld
lcall
imul
mov
jecxz
cmp
inc
pop
cmp
repz
repz
test
int
sub
add
xor
sbb
adc
push
ja
add
clc
sub
xlat
mov
mov
popa
sbb
adc
xor
cmp
out
jmp
sub
jns
and
aaa
jne
hlt
mov
cmp
movsl
jo
sbb
jmp
popa
repnz
bound
hlt
sub
add
pop
xchg
mov
xlat
dec
mov
js
pop
sbb
call
and
push
in
or
cld
int3
ljmp
mov
repz
or
push
inc
daa
inc
lcall
xlat
sub
testb
adc
js
subb
pop
add
push
push
int
fcompl
sub
inc
sbb
lods
cli
clc
mov
mov
ret
dec
xchg
aad
cmp
push
push
sbb
xchg
sub
aas
inc
mov
into
mov
inc
mov
and
inc
imul
lods
aam
mov
push
xchg
inc
pop
xchg
jecxz
lcall
push
and
fstl
cmpsb
xor
jnp
mul
mov
mov
jb
xchg
insb
test
sbb
dec
mov
inc
mov
xchg
xor
pop
and
aas
in
call
xchg
sbb
mov
push
test
xlat
idivl
daa
sbb
scas
out
mov
stos
push
xchg
mov
dec
ljmp
loop
mov
mov
ljmp
xchg
pop
outsb
rcrl
enter
pop
mov
mov
jmp
cwtl
cmp
lret
push
jge
xchg
mov
loope
into
jle
pop
dec
jae
shr
pop
stc
das
sub
jno
xor
inc
jnp
js
sub
dec
call
pop
lret
lock
cmc
mov
ret
jae
add
in
into
adc
filds
lock
sub
xchg
jle
ret
mov
les
lock
inc
aas
mov
push
scas
cmpsb
jmp
test
les
pop
xchg
int
jbe
cwtl
data16
into
jecxz
lods
insl
hlt
cmp
enter
sbb
test
mov
mov
or
jns
outsl
daa
push
roll
pop
xchg
xor
out
mov
popf
stc
repnz
fnstcw
bound
mov
fwait
outsl
cwtl
pop
pmulhw
stc
cltd
scas
or
add
roll
sbb
mov
mov
xchg
cwtl
pop
push
out
loop
imul
push
sahf
lcall
mov
lea
cmp
jp
cli
not
inc
xchg
cltd
rolb
pop
mov
jmp
pop
mov
stos
mov
mov
xor
and
adc
mov
xor
jmp
mov
lret
fldl
mov
movsl
call
repz
and
xor
shrl
pushf
push
stos
test
mov
pop
call
popa
inc
jcxz
cmp
imull
jns
mov
inc
pusha
int3
xchg
push
xchg
jg
nop
sbb
mov
add
loopne
xorl
in
sub
xchg
ret
ret
adc
fidivrl
out
leave
out
mov
shll
jl
aam
scas
or
shlb
pop
in
sbb
inc
cli
testl
add
jge
repnz
in
mov
jle
loop
jo
dec
mov
out
dec
cmp
cltd
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
xor
mov
jnp
pusha
lret
sbb
and
push
pop
add
scas
dec
jle
movsl
mov
mov
inc
fstpt
sbb
push
stc
dec
jae
adc
popf
pop
loope
pop
add
jne
mov
push
xlat
push
enter
mov
jle
jecxz
xchg
sbb
sti
pusha
insb
mov
xchg
inc
or
mov
negl
inc
orl
iret
fmul
lods
inc
mov
test
lock
or
adc
into
movsb
ret
pop
imul
cwtl
mov
push
fcom
lds
push
xchg
leave
cwtl
lods
lods
std
or
cmp
and
jmp
push
aam
aad
xchg
mov
sti
jbe
inc
das
mov
push
shrl
inc
shll
mov
mov
lcall
xor
dec
rorl
in
mov
mov
or
sub
cmp
int3
call
inc
les
mov
fwait
mov
dec
iret
cltd
pop
pop
or
outsw
sbb
popf
xor
getsec
mov
loope
inc
and
or
and
cmp
jle
arpl
scas
aad
push
sbb
sub
icebp
pop
lret
cmp
lds
jp
bound
sub
dec
ret
movsl
test
lods
or
mov
fsubr
xchg
xchg
fwait
dec
arpl
cmc
stos
cmpsl
jo
insb
fnsave
hlt
xor
in
inc
push
xchg
dec
jmp
int3
push
enter
xchg
fs
add
jbe
jle
xchg
pushf
inc
loopne
dec
and
cmp
sbb
mov
mov
mov
sbb
pop
push
daa
xor
into
je
push
fcoms
push
cmp
mov
sahf
lea
adc
inc
sarb
push
lahf
clc
lcall
mov
out
jne
xor
std
or
mov
in
dec
push
mov
dec
and
mov
adcb
jo
push
and
rorl
mov
incb
shll
cmp
pop
jp
lret
lret
mov
or
inc
jp
stc
push
or
jg
adc
dec
mov
nop
inc
push
xchg
repnz
gs
lret
jno,pn
push
xchg
mov
int3
jmp
sahf
sbb
gs
mov
jbe
cmp
es
fxch
add
fdivl
push
cwtl
push
pop
mov
nop
in
sbb
inc
and
push
push
in
or
pop
cmpsb
loop
add
inc
mov
lret
fisubrl
mov
adc
imul
and
insb
in
loope
cmp
ss
std
das
inc
out
outsb
int
mov
daa
inc
or
jnp
std
outsl
cwtl
repnz
push
pushf
mov
sarl
jb
dec
ss
nop
xchg
add
and
push
dec
stos
mov
push
xchg
fisubs
cwtl
sbb
inc
fnstsw
ljmp
repz
clc
push
test
dec
push
faddl
dec
ja
xor
je
in
arpl
cs
lret
ret
shrl
cmp
pop
je
icebp
sahf
mov
mov
cwtl
and
inc
movsl
mov
fwait
xor
or
xor
pop
movsl
cmovle
and
mov
sbb
fisubs
lds
inc
fimuls
mov
nop
cmp
leave
mull
cmpsb
or
arpl
mov
and
cmp
mov
fbld
pop
mov
clc
push
push
cmpsb
xchg
mov
pop
or
fisttps
outsb
adc
dec
mov
bound
jg
pop
notl
popf
cmp
jb
xor
jp
out
bnd
cmp
cmovnp
out
xchg
push
xchg
scas
ss
sbb
jbe
notl
xor
or
or
jo
test
mov
js,pt
adc
enter
lock
ud2
or
jge
push
pop
jl
ds
cmpsl
and
inc
dec
xchg
xor
jg
push
in
mov
cld
cltd
icebp
rclb
and
mov
lock
clc
adc
xor
movsl
mov
sti
xchg
out
or
arpl
sbbb
pop
xor
mov
sub
js
dec
xchg
hlt
outsb
adc
adc
dec
mov
mov
stos
sub
fnstsw
shrl
inc
jno
sbb
or
xchg
mov
std
pop
pop
or
clc
movsl
mov
jp
sbbl
daa
jno
pusha
and
mov
outsb
inc
loope
arpl
stos
mov
test
outsb
icebp
pop
test
fcom
mov
push
or
pop
iret
fdiv
xchg
push
in
add
sub
fnstsw
add
mov
or
push
inc
xor
dec
fdivrl
add
loopne
add
or
shl
mov
mov
in
aam
lds
enter
add
dec
mov
jl
xchg
in
into
cltd
int
jbe
dec
int3
stc
outsb
lods
push
nop
out
adc
sahf
lock
fs
ret
jecxz,pt
pop
and
dec
ficompl
push
dec
nop
xchg
adc
jle
js
fwait
or
shll
pop
push
enter
push
mov
rolb
insb
jle
outsl
mov
cmc
pop
jecxz
sub
pop
or
xchg
jo
xor
ss
pop
sahf
mov
imul
inc
xchg
notb
popf
jecxz
aad
mov
jns
cmp
in
jg
lock
ret
lods
outsb
fiadds
stos
loop
xchg
in
adc
imul
jnp
inc
jecxz
cmp
andl
test
push
mov
mov
adc
mov
fldcw
jbe
jno
adc
insl
loopne
outsl
add
jno
mov
shl
mov
nop
loopne
repz
dec
je
xor
mov
cmp
mov
ja
pop
loop
mov
sub
roll
push
je
ror
repnz
and
mov
subl
jb
xchg
pop
jo
loope
into
repz
aaa
js
arpl
or
and
sub
je,pn
mov
out
push
inc
into
enter
push
jns
iret
int
stc
mov
lods
sub
in
lea
mov
inc
mov
mov
xor
jo
flds
sbb
cmpsl
xor
mov
jp
mov
or
pop
cmpsl
jecxz
mov
sub
gs
xor
and
inc
cmpsl
jo
icebp
sub
push
xor
pop
sbb
cwtl
and
mov
pushf
sub
cli
call
jb
inc
ret
ret
jge
or
xchg
call
xchg
in
push
push
xchg
jno
outsb
jae
push
icebp
push
push
xor
and
int3
cmp
je
stos
inc
cmp
cld
int
pop
inc
or
mov
or
dec
and
jnp
shlb
mov
enter
iret
dec
mov
lds
xchg
das
sbb
aas
dec
mov
and
and
sub
enter
arpl
and
push
xor
sahf
mov
lds
and
test
push
and
pop
mov
xlat
into
cld
cmpsl
inc
adc
cmc
mov
mov
jnp
sarb
xchg
out
cmc
lods
mov
ja
faddl
test
sbb
nop
aam
adc
inc
inc
and
xchg
xor
repz
test
xor
cmc
pop
and
xor
push
fs
out
hlt
insb
jnp
les
dec
jno
xchg
cmp
scas
or
enter
daa
inc
jo
cs
shll
ret
mov
dec
shlb
loop
daa
ret
ja
ja,pt
cmp
dec
jmp
add
hlt
mov
dec
mov
add
sbb
andl
xchg
inc
arpl
test
and
lods
fldt
sub
test
arpl
mov
lods
clc
add
and
js
notb
cmpb
xchg
add
mov
gs
pushf
jmp
add
push
cmp
fwait
in
jne
popf
loop
or
push
mov
inc
bound
je
aas
sbb
add
filds
bnd
push
cli
mov
repnz
outsl
push
mov
aas
ret
stc
imul
ljmp
xor
jmp
push
fstps
xor
push
jbe
push
push
mov
js
and
call
push
sbb
add
repz
mov
or
jmp
leave
xchg
adc
xchg
and
test
nop
ret
pop
int
mov
dec
mov
adc
iret
popa
clc
repnz
push
scas
das
jo
push
outsl
dec
gs
sbb
int3
enter
sub
sub
mov
add
ss
dec
mov
push
sbb
dec
xor
push
shrl
dec
adc
stos
aaa
sbb
xlat
mov
out
push
mov
sub
pop
bound
inc
xchg
pop
outsb
scas
addr16
movsl
outsl
cmp
daa
xor
xor
aas
dec
push
out
das
xchg
ds
inc
jbe
add
stos
dec
fisttpll
adc
inc
hlt
fdiv
push
pop
sub
or
clc
dec
add
mov
mov
mov
and
xchg
lcall
pushf
dec
test
xor
loope
or
iret
test
sub
in
pop
fcmovnbe
cmp
call
mov
pushf
inc
dec
lea
mov
ror
sub
xor
add
jns
rcrb
add
cli
adc
lock
mov
or
mov
inc
adc
pushl
fnstcw
inc
jle
test
mov
xchg
out
push
adc
std
push
pop
jl
imul
mov
and
sbb
icebp
add
shll
movsl
sub
aad
enter
clc
add
dec
xchg
pop
adc
lods
les
sbb
stos
sti
sti
sub
adc
mov
clc
add
fnstcw
mov
lret
fldt
mov
out
push
pop
mov
ljmp
ss
cltd
negl
stos
subb
and
data16
add
mov
inc
or
push
cwtl
pop
cld
int3
sub
roll
mov
lods
outsb
shrb
inc
ficomps
ja
mov
xor
fldl
xor
mov
jle
push
ret
mov
repz
jns
pop
les
rclb
pop
mov
test
pop
setle
xchg
push
movsb
mov
jne
std
push
push
xchg
xchg
mov
movsl
inc
roll
rcll
cli
pop
xchg
or
adc
push
push
stos
cmp
subb
mov
jbe
inc
pop
ret
xchg
or
pop
jno
mov
dec
js
sahf
inc
mov
sbb
ret
jno
ss
lcall
outsl
jle
pop
in
push
push
imul
int
adc
or
cmp
xchg
push
push
mov
ljmp
loop
mov
int
jae
mov
xor
sub
mov
loopne
std
pop
sbb
mov
int
inc
gs
mov
cmp
push
sub
jge
js
inc
add
ljmp
and
or
xchg
jno
test
push
jne
les
insb
ja
inc
xchg
insb
xor
cli
fistl
adc
insl
in
jg
sbb
adc
pop
jmp
pop
pop
fnsave
mov
add
cmp
jge
xchg
daa
push
clc
or
cmp
into
cltd
fsubl
sbb
cmc
loope
xchg
scas
ss
stc
int
sbbl
adc
mov
mov
mull
xchg
jo
sbb
cmpsb
jb
hlt
sti
testl
inc
push
aam
push
aad
leave
mov
pop
out
mov
mov
or
xor
cltd
push
clc
and
mov
frstor
rorl
dec
jmp
les
cli
inc
push
ret
fildll
mov
repz
aad
push
lea
push
jg
adc
mov
mov
xchg
fisubrl
aas
call
lds
or
lock
cmp
add
mov
sbb
in
mov
xchg
cmc
cli
push
xchg
mov
mov
mov
stos
inc
sub
mov
push
ficoml
shrl
cmc
test
xchg
stc
push
out
xchg
scas
jp
or
push
xchg
cli
hlt
and
mov
inc
in
icebp
mov
push
dec
sbb
inc
mov
dec
inc
stc
pop
fisubl
leave
sbb
dec
icebp
pop
mov
stos
in
outsb
movsl
decl
sti
jg
push
icebp
sub
insl
or
pop
push
xchg
out
add
pop
sbb
cmpsl
leave
jb
test
mov
loope
mov
mov
into
movsl
fbld
add
push
out
insl
xor
mov
mov
pop
cmp
loop
loope
subb
mov
shl
call
sbb
sbb
rcrl
pop
fs
in
ss
movsb
pop
lret
pop
mov
stc
jecxz
and
lret
jno
cmp
pop
and
cwtl
stos
addb
jbe
sub
roll
inc
enter
fnstcw
xchg
push
sahf
cs
xor
push
es
sbb
inc
loop
jge
xor
push
inc
push
push
push
js
xor
add
leave
jle
or
adc
push
sub
cmpsl
sub
scas
push
xchg
sbb
mov
mov
pop
rcr
or
dec
adc
push
and
pop
cmpsb
push
and
fwait
mov
pop
int3
pop
mov
pop
jp
adc
idivb
and
add
pop
jae
mov
mov
jno
call
lds
push
call
mov
stos
insl
or
cltd
jne
xor
cmc
add
mov
test
out
mov
das
inc
dec
jns
or
mov
jp
or
lds
xlat
push
push
ret
aaa
imul
xor
push
rorb
mov
imul
pop
push
jle
test
ss
nop
push
add
mov
movsb
mov
movb
jecxz
mov
test
insl
loop
add
adc
aas
inc
adc
in
add
or
xor
jg
insb
sbb
sbb
adc
and
cmp
add
or
xchg
fmuls
inc
and
mov
fsubr
mov
inc
out
int3
jnp
sbb
stc
jno
mov
xor
xor
std
lret
dec
xchg
fs
loopne
aad
mov
in
mov
and
incl
jle
push
pop
adc
jp
andl
shlb
fldenv
push
outsl
lahf
xor
dec
out
gs
push
mov
adc
sbb
xchg
jp
and
inc
les
or
into
xor
inc
dec
jns
flds
dec
sub
fs
test
push
push
xchg
inc
repnz
or
jg
push
mov
add
stos
sub
adc
mov
jae
cwtl
push
mov
test
jg
lods
inc
jbe
xor
mov
hlt
add
and
orb
cmp
lods
push
in
es
enter
and
push
mov
push
imul
fcoml
sub
fs
aas
add
mov
mov
data16
out
sbb
lcall
flds
mov
dec
mov
mov
out
into
inc
jge
mov
loope
cmp
loop
mov
cmpsl
movsb
sub
ds
mov
fimuls
sarb
and
mulb
xor
mov
jp
divb
out
mov
jb
js
data16
lock
jbe
sbb
rclb
fldenv
int3
int
mov
std
push
xor
cs
mov
inc
pushf
fdivs
insl
xchg
rolb
push
jmp
jl,pt
xor
jle
push
jmp
daa
scas
or
xor
add
push
xchg
xchg
stos
mov
insb
mov
add
mov
adc
inc
imul
xor
cmpsl
xor
das
shlb
inc
jnp
xchg
xchg
les
xchg
jbe
inc
push
movsb
fs
inc
in
pop
sub
nop
popf
in
pushf
sbb
mov
rcl
lea
push
movsl
insb
mov
pop
push
push
pop
or
push
rcrl
xor
or
call
inc
sbb
notl
xor
inc
scas
jnp
mov
sbb
add
in
jp
cs
mov
pop
jmp
jne
xlat
addr16
and
jmp
mov
mov
call
scas
xchg
pop
xchg
sbb
xchg
xlat
int
jnp
and
jmp
mov
pop
cmp
jg
push
xor
in
nop
push
dec
loopne
insl
xchg
add
jnp
es
lods
mov
xchg
xchg
insb
push
fs
xor
popf
jp
hlt
xchg
into
cli
movsb
ss
cmp
stos
or
lds
dec
shlb
add
add
or
arpl
pop
mov
repz
mov
lods
ffreep
jae
mov
xchg
push
or
shrl
and
mov
cmp
call
shrl
sub
loope
mov
sahf
in
fstl
aas
sbb
lret
loop
push
or
jmp
and
add
ss
fdivl
sub
xchg
pop
xor
pop
xlat
add
dec
cwtl
testb
cwtl
ds
cmp
ljmp
mov
mov
sbb
xor
stos
add
mov
cmpsb
popf
mov
inc
gs
int3
rcl
fstps
mov
scas
sbb
test
sub
int3
sarb
push
cmpsl
xor
add
or
push
dec
adc
lret
leave
lods
sub
int
push
add
je
sub
fldl
int3
ja
pop
ficoml
add
mov
or
fisttpll
addl
repnz
mov
pop
sbb
or
push
inc
xor
stos
loop
cwtl
jne
fwait
mov
lcall
lahf
xchg
xorb
outsb
mov
repz
push
stos
pop
xchg
mov
in
rclb
insl
cmpsb
add
sub
dec
decb
fwait
test
lahf
mov
or
pop
push
lds
cmp
das
lods
cwtl
push
stos
jae
xchg
movsl
sub
negb
movsb
inc
push
and
pop
fdivrs
inc
sbb
xor
out
mov
or
les
inc
mov
dec
pop
xchg
dec
dec
pop
pop
pushf
jnp
sbb
mov
ret
pop
lods
add
sub
xlat
pop
out
pop
and
mov
loop
dec
jae
xchg
sbb
push
mov
sub
ja
addl
sbbb
test
jle
inc
cmc
inc
imul
pushf
call
shrl
mov
xor
mov
cli
lret
out
xor
jae
je
mov
imul
ret
push
insb
jno
xchg
add
sub
leave
push
or
out
lock
dec
sub
sbb
xchg
inc
cltd
or
lcall
mov
adc
lock
sub
scas
shlb
inc
in
sub
mov
scas
and
lcall
ds
sbb
push
fdiv
mov
xor
outsb
lods
je
mov
add
cmp
pop
pop
orl
mov
fnsave
push
mov
clc
popa
test
test
outsl
jecxz
cmp
pop
and
mov
cmp
push
test
fdiv
outsb
jl
add
dec
enter
or
insl
mov
xchg
mov
cs
lods
adc
les
adc
insb
enter
jb
imul
divl
iret
imul
cmp
test
pop
jle
xor
test
mov
fucom
imul
adcl
test
aaa
push
push
push
jb
in
nop
rcl
pop
lock
popf
push
movsb
pop
mov
popa
sub
aad
cmpsl
pop
mov
test
and
idiv
sbb
or
dec
sub
jns
push
inc
dec
in
in
int3
dec
imul
mov
jmp
dec
xor
xor
and
lret
or
mov
ja
pop
mov
insb
cmpsb
std
cs
je
and
pusha
ljmp
adc
sti
mov
sub
out
es
inc
mov
inc
sub
jae
imull
ffree
dec
cli
inc
jge
sub
inc
pushf
inc
test
clc
lods
jge
add
dec
repz
gs
jo
sbb
mulb
repz
outsl
cmp
jb
sub
cmp
dec
or
adc
sub
cli
or
mov
aad
and
or
and
ds
lcall
jae
and
pop
mov
xchg
pop
mov
cs
dec
push
inc
fstps
mov
rcll
mov
std
lcall
ljmp
in
sub
cmp
pop
aam
loopne
add
test
cmpsb
pushf
into
in
add
push
movsl
sbb
pop
sbb
mov
sbb
inc
sbb
lods
int
pop
xchg
inc
jns
sub
cvtps2pi
ja
xchg
enter
gs
test
and
js
and
push
neg
cs
fsubrl
add
lret
out
mov
movsl
call
lret
scas
xchg
lahf
mov
mov
movsl
add
jno
cltd
inc
pop
cmpsb
push
mov
es
lcall
aad
jb
jle
fdivrp
mov
xor
ret
out
jp
je
jae
mov
and
in
add
pop
cmpsb
aaa
shll
insl
dec
cwtl
repz
loop
cmp
sub
repz
les
add
xchg
jge
dec
xor
cld
repnz
rol
push
inc
sahf
sub
jns
xchg
call
inc
mov
lret
push
cmpsl
and
inc
subl
fs
sarb
sahf
ret
aas
shlb
pop
cvttps2pi
nop
sbbb
push
insb
pop
adc
lret
in
insb
or
and
mov
jae
mov
filds
jae
aam
pop
insb
test
xlat
pop
ficompl
outsb
push
jno
andb
push
mov
lods
or
test
aad
pop
or
popf
mov
out
or
mov
test
xchg
pusha
jb
pushf
jecxz
cltd
push
dec
push
scas
out
xchg
fbld
aaa
out
sub
pusha
cmp
fsubs
sub
popa
imul
sbb
roll
pushf
xor
inc
lds
xor
loope
cmp
dec
jl
adc
mov
and
lock
jmp
dec
dec
nop
incl
dec
loope
xchg
repz
pop
push
jge
fmuls
mov
leave
adc
push
cmp
cs
cmp
cmc
ss
add
pop
dec
sahf
and
cs
xchg
insl
or
fsubrs
movsl
push
adc
sub
pop
cmp
fmul
sbb
push
mov
testl
es
mov
sbb
xor
push
dec
ret
xlat
cmc
jb
aas
loop
and
inc
sbb
fsts
xor
shlb
push
out
pop
mov
sub
int
clc
or
rorb
fnsave
pop
lret
test
xchg
push
push
into
or
sub
mov
dec
pop
jne
hlt
sub
jnp,pn
adc
cmp
cld
inc
add
xchg
std
aam
xchg
jl
xchg
or
sar
mov
mov
add
cltd
repnz
jae
jle
or
orb
sub
jle
scas
jno
pop
xlat
adc
lret
mov
inc
push
xor
xor
nop
mov
mov
jo
ds
or
cmp
jecxz
mov
push
jbe
add
or
in
cmpb
lcall
and
call
dec
loope
push
dec
push
mov
mov
mov
aas
adc
mov
int3
roll
jbe,pt
and
sub
int
mov
std
push
sbb
scas
xor
test
aad
push
ds
xchg
rcrl
adc
xor
jl
mov
dec
iret
lcall
stc
dec
ss
sbb
cmp
mov
es
out
arpl
pop
and
decb
data16
jge
in
scas
daa
cli
fbld
lock
push
aas
and
hlt
mov
xchg
lock
movsb
xor
mov
test
mov
jmp
cld
ficomps
jg
xlat
ljmp
leave
sbb
xchg
iret
lcall
decb
add
push
icebp
js
ds
mov
hlt
repnz
xchg
daa
sub
jp
mov
iret
shll
sub
lods
daa
mov
mov
push
aad
dec
sub
mov
xchg
sub
ja
fs
in
jne
sbb
out
fstl
fbstp
iret
stc
pop
push
in
sbb
mov
mov
iret
jle
inc
or
cli
inc
idivb
scas
sub
pop
loope
and
shrb
in
pushf
cmp
mov
xchg
int
hlt
push
outsb
in
clc
mov
xchg
and
jge
jb
out
mov
sub
cmpsl
sub
insb
jg
cltd
mov
movsl
int
jmp
lahf
ds
mov
dec
add
scas
jnp
ja
repz
jno
data16
inc
adc
loop
mov
push
adc
push
mov
insb
mov
mov
cmp
aaa
ss
mov
push
push
in
cmc
ljmp
cltd
out
mov
inc
shl
fisttpll
aam
inc
cmp
xlat
cmc
lock
daa
jnp
cmp
xchg
and
cmpsl
adc
fldl
pop
push
or
mov
jbe
mov
fnstsw
dec
into
rcrb
or
sub
xchg
pusha
mov
addr16
shlb
aaa
in
cmp
fwait
or
in
outsb
push
dec
in
movsb
test
cmpsl
fsubrs
mov
out
movsb
sahf
cmpsl
pop
bound
push
jmp
fldcw
movsl
jl
divl
push
and
popa
lock
ja
lahf
lret
add
das
fcompl
mov
arpl
cwtl
sti
dec
pop
dec
pop
add
out
or
pop
push
lahf
or
jp
enter
daa
idivl
icebp
jle
xor
cmp
fwait
ds
jnp
lret
jg
pusha
sbb
popf
jno
xchg
sbb
or
fstl
adc
push
push
cmp
mov
pop
repnz
daa
cmc
insb
sub
cmp
sub
mov
fs
es
hlt
xchg
js
fdivl
fwait
outsl
mov
or
fisubrl
add
subl
shll
cmpsl
dec
sahf
adc
mov
dec
and
fs
std
gs
xchg
loope
jnp
and
cmp
sbb
icebp
mov
adc
dec
inc
insl
adc
pop
in
sub
outsl
test
mov
dec
scas
inc
jae,pn
nop
and
xchg
nop
jg
shrl
mov
mov
xchg
stc
loop
xchg
arpl
xchg
cmpsb
adc
and
sub
adc
ret
bound
add
lret
mov
sbb
stc
sub
loop
test
sbb
xor
dec
leave
test
push
aas
xchg
and
fiadds
and
enter
sub
push
mov
cmpsb
mov
xchg
cmc
sub
jl
jne
mov
cmp
jg
push
sbb
cmp
or
pusha
mov
fisttpl
cli
outsl
aas
dec
pop
movsb
test
daa
pop
sar
pop
and
inc
rolb
mov
sub
add
es
in
cli
jo
or
xor
xchg
jle
mov
xor
test
stos
in
sub
in
sub
mov
testl
sarl
lds
jno
jbe
cmpsb
int3
outsb
push
insb
shrb
test
sbb
or
xchg
test
pop
jb
enter
and
cmpsl
adc
dec
dec
fildl
xchg
mov
leave
lcall
add
movsb
in
test
rorl
pop
xchg
cwtl
jmp
cmp
mov
sub
call
imul
stos
xor
sbb
std
pop
inc
flds
lahf
les
push
jmp
or
imul
ret
cmpsb
jle
lret
xchg
inc
add
shll
sub
adc
int3
insl
xchg
push
in
iret
xlat
push
scas
jl
mov
test
mov
dec
and
mov
mov
mov
in
not
dec
lcall
out
pop
popa
xchg
jmp
lcall
sub
push
lds
ljmp
test
push
dec
mov
mov
cmpsb
cmc
mov
lahf
sti
adc
pop
push
sarb
pop
mov
pop
in
lret
add
inc
xor
fsubr
stos
mov
iret
test
xor
rcll
es
dec
adc
adc
loopw
nop
or
in
pusha
sti
je
pop
pop
push
lret
jmp
xor
cli
add
inc
push
add
and
sbb
cltd
movsb
mov
daa
pop
ret
test
mov
mov
sbb
sti
aaa
add
out
jae
push
out
and
xchg
test
inc
cli
aas
dec
pop
sbb
fisubrs
adc
inc
das
fstps
adc
jmp
mov
xor
pop
cmpsl
xor
adc
out
cmc
vmovaps
pop
inc
xchg
mov
inc
out
cld
sub
nop
out
sub
or
mov
xchg
mov
stc
neg
pusha
rcll
leave
data16
cmp
lret
sub
icebp
cmp
aas
or
lret
push
adc
rcrb
sub
repz
ljmp
out
xor
fisttpll
mov
xor
das
jb
es
xchg
sub
lods
cmp
dec
adc
jp
orb
jbe
insb
fucomi
jmp
mov
jge
inc
aad
mov
sbb
sub
movsb
cli
push
mov
dec
push
hlt
repnz
imul
pop
pop
in
jecxz
mov
sahf
js
sbbb
push
lods
in
mov
adc
lcall
scas
fistpl
test
lret
inc
sbb
pop
xor
out
xchg
mov
jmp
mov
int3
clc
aas
cmc
aad
das
out
and
int
fldenv
cmpsl
int3
lods
hlt
pop
adc
xlat
leave
pop
test
cltd
adc
inc
or
popf
jecxz
leave
jns
jecxz
jb
outsb
adc
ret
outsl
and
hlt
push
cmp
dec
sarl
jno
stos
in
loopne
loope
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
mov
ljmp
jnp
sbb
rorb
sbb
ja
into
pop
and
inc
loope
mov
popf
dec
leave
shlb
push
inc
aam
inc
setbe
out
mov
repz
xchg
int3
sahf
push
in
insb
xchg
sahf
jge
mov
xchg
data16
jns
mov
sub
pop
cs
mov
mov
lock
xor
sub
adc
pop
je
cmp
mov
push
mov
loop
xor
nop
insb
mov
ss
lods
mov
dec
adc
shlb
or
dec
int3
sarl
gs
jns
scas
cs
jns
add
xchg
fisubs
shrl
xchg
lret
in
xchg
shlb
jmp
adc
jmp
in
or
dec
inc
sbb
scas
xchg
imul
mov
mov
shll
daa
add
mov
pmaxub
cwtl
pushf
push
xchg
punpcklwd
inc
or
int3
xor
xor
push
xor
int
ret
inc
jnp
adc
sub
adc
in
dec
jmp
mov
mov
jae
test
testl
aam
jae
arpl
into
inc
in
scas
xchg
add
movsl
mov
mov
dec
ret
sti
sbb
cmp
jns
dec
cmp
idivb
pop
arpl
ret
add
stos
xorl
add
leave
mov
mov
pop
or
and
add
cmp
mov
adc
mov
repnz
rcr
pop
loope
xor
dec
pop
cltd
xor
xlat
icebp
sbb
out
aad
ljmp
adc
shrb
adc
inc
inc
out
movl
lods
lahf
loopne
dec
arpl
and
push
mov
xor
mov
test
dec
ret
jg
lock
js
push
xor
adc
sub
xchg
xor
imul
nop
arpl
mov
fdivrs
popf
stos
mov
cmp
mov
sbbl
xchg
loop
mov
addl
xlat
push
pop
in
add
scas
lahf
nop
xchg
cmp
sub
pushf
mov
insl
push
adc
lods
fimull
and
sub
and
cwtl
or
mov
loope
cmp
stos
mov
cwtl
jge
sahf
int3
xor
daa
xor
movsl
mov
push
out
xchg
cli
aaa
mov
fcoml
test
pop
into
ss
adc
rolb
pop
scas
sti
adc
mov
test
in
das
add
popf
lcall
mov
mov
shll
int
lods
in
jecxz
and
cmp
aaa
addr16
sbb
and
ja
inc
mov
mov
dec
push
jne
and
fnstsw
mov
xor
cmp
in
shll
mov
xchg
push
movsb
adc
sub
push
pushf
inc
sbb
gs
jg
pop
adc
cmp
jecxz
jl
in
pop
aad
and
xchg
cwtl
dec
or
mov
loopne
inc
mov
arpl
jnp
ss
sbb
filds
xchg
add
in
bound
push
push
pop
mov
inc
pop
mov
sub
idivl
adc
sub
xchg
sbb
add
frstor
push
xchg
dec
lods
addb
xchg
mov
scas
mov
leave
pop
sbb
xor
or
mov
push
movsl
or
add
andb
xor
mov
or
mov
push
dec
daa
imul
mov
mov
ret
imul
imul
sub
call
outsl
add
out
cmp
mov
cli
push
arpl
push
call
mov
or
ret
into
ss
xlat
cwtl
mov
je
leave
out
ljmp
jb
fldcw
aas
mov
std
cwtl
cmp
enter
pop
icebp
and
inc
pop
mov
push
hlt
sub
ljmp
ljmp
xchg
dec
jo
mov
sub
inc
xor
outsb
dec
xchg
pop
sahf
fsubrs
pop
mov
xor
jbe
shl
mov
xor
adc
and
push
sbb
dec
mov
roll
testl
xorl
mov
sbb
adc
jne
arpl
cmp
arpl
stc
mov
out
scas
out
out
lds
mov
push
stos
adcb
xchg
ret
mov
add
add
mov
sub
cmp
mov
aaa
add
shrl
or
out
mov
mov
mov
lcall
sub
sub
pushf
mov
inc
push
das
fldl
mov
jo
andb
xchg
mov
loope
push
imul
call
ljmp
ret
stc
mov
inc
cmp
lahf
ficompl
js
test
clc
jecxz
mov
iret
mov
mov
jg
xchg
jge
pop
push
js
or
nop
enter
dec
pop
cli
aaa
mov
nop
lods
inc
imul
push
mov
ds
fidivrs
dec
mov
or
loop
insb
mov
out
sahf
cmp
adc
inc
sub
jecxz
scas
icebp
jl
mov
and
adc
sbb
push
stos
add
popf
aaa
xor
shrl
adc
add
stos
inc
or
jnp
lahf
int
mov
xchg
in
cmc
rcrb
gs
cmp
mov
fisubrs
lcall
jns
sub
cmpsl
adc
lcall
movsb
loope
jne
mov
imul
adc
sbb
fs
push
jle
mov
in
cmpsl
jne
jae
out
jo
cmp
mov
ret
in
mov
mov
in
sub
mov
mov
push
jne
and
and
jecxz
fld
mov
sbb
jecxz
adc
push
adc
movsl
sbb
adcb
add
pushf
sbb
js
pushf
sub
into
cmp
repz
bsr
lea
push
insb
push
or
cs
or
movsb
mov
inc
aad
mov
sub
mov
pop
std
das
sbb
notb
ret
mov
stos
out
jg
insb
sbb
bswap
cmpb
lcall
adc
fldcw
dec
repz
mov
lret
repnz
test
sbb
mov
sbb
pop
mov
cs
scas
rclb
add
in
mov
or
test
test
push
push
jp
rcrb
mov
lahf
mov
jg
adc
ljmp
push
jne
and
scas
add
cmp
addr16
shll
aad
cmp
jecxz
ret
mov
xchg
xor
mov
loopne
les
test
cmc
imul
cmp
jb
nop
dec
mov
or
cld
or
sub
mov
ds
cli
push
mov
js
jne
mov
lret
shlb
or
mov
add
nop
outsb
lock
les
je
inc
mov
xchg
sub
xlat
popa
lds
fstpl
pop
aas
fcmovu
inc
je
jns
ljmp
xorb
sub
test
and
xchg
and
shrb
mov
xorb
pop
aas
pop
adc
sbb
jns
and
sub
mov
int
pop
insb
fimuls
test
aaa
or
fs
mov
xchg
pop
adc
repz
in
xchg
or
pop
cmp
outsl
stos
out
mov
adc
inc
leave
or
pop
enter
xor
jo
popa
pop
and
lcall
ud2
test
xchg
repnz
cmp
out
adc
mov
and
mov
jp
pop
sbb
repnz
sub
stos
xchg
ds
pop
lret
xchg
inc
mov
movsb
xor
sahf
fwait
xchg
push
cltd
movsb
out
fisubrs
jbe
mov
mov
dec
push
js
incb
outsl
pop
aad
fiadds
inc
lcall
inc
push
bound
data16
xchg
sbb
inc
inc
cmp
adc
out
pushf
jg
nop
cmp
push
xchg
jns
push
fstl
in
xor
jle
mov
roll
xor
vorps
mov
cltd
jae
filds
ja
cmpsl
cmp
adc
cld
aas
and
sahf
popf
pop
dec
sub
fisttpl
aam
cs
and
and
cmpsl
mov
push
pop
xchg
cmp
mov
or
jbe
and
or
or
jo
pop
xchg
lods
leave
jae
adc
add
sbb
iret
lods
mov
fwait
mov
mov
jne
or
mov
adc
xchg
push
ret
int3
adc
stc
jnp
xlat
aas
push
lret
mov
ljmp
push
and
stos
inc
dec
pop
mov
inc
scas
not
adcb
inc
fldcw
xor
cwtl
jmp
fildl
jo
xchg
or
xchg
jb
dec
push
popa
adc
stos
mov
in
or
das
aam
movsb
stos
arpl
in
sub
insl
fisubl
js
rorb
mov
test
push
int3
xchg
push
and
mov
outsb
inc
lcall
mov
in
cmpsb
or
stc
adc
pop
sub
sub
movsl
xchg
mov
cmp
mov
adc
push
mov
mov
add
out
negb
and
jmp
cmpsb
and
pop
mov
mov
sub
pushf
jns
popa
mov
jmp
jae
and
jmp
add
nop
inc
xchg
test
jg
mulb
and
dec
jl
daa
roll
or
ret
test
pop
mov
or
rcr
mov
jle
ss
out
dec
imul
mov
icebp
insl
mov
xchg
jge
inc
mov
popf
push
mov
xchg
jg
icebp
cmp
ret
aad
setp
adc
fsubp
bound
sbbl
scas
push
mov
sarb
es
push
push
in
popa
jno
data16
flds
and
pop
sub
adc
push
jp
in
sbb
cmp
cmc
mov
scas
or
adc
pushf
fsubl
fdivrs
cmp
xchg
es
jmp
mov
mov
and
popa
push
sub
test
mov
sarb
arpl
fdivrs
xor
pop
sbb
int
mov
pop
sti
pop
mov
or
jmp
pop
in
loope
daa
loop
xor
xchg
push
es
xchg
in
das
and
push
dec
outsb
int3
shrb
add
cmc
push
mov
cmp
es
lea
scas
fwait
xor
add
xchg
mov
pop
aam
push
inc
into
adc
scas
repnz
mov
ja
mov
imul
data16
xchg
push
std
iret
paddsw
cld
outsl
insb
fidivl
lret
js
cmpsb
cmp
popf
mov
jge
aam
mov
push
jmp
dec
cmpsb
xchg
push
mov
ret
in
mov
fimull
jo
int3
and
dec
mov
repnz
test
cltd
shlb
push
movsb
stos
lret
mov
pop
pop
aaa
dec
sub
ja
xchg
iret
mov
push
xchg
push
sub
subl
add
xor
sub
sbb
inc
xor
idivb
sbb
fdivrl
out
mov
mov
jae
jp
push
xchg
nop
xor
xor
adc
ret
xor
cli
jmp
adc
or
test
ja
sbb
int
je
mov
imul
jb
mov
outsb
or
test
cmp
cli
in
xchg
sbb
pop
rorb
jns
push
jnp
outsb
loop
mov
nop
jb
js
and
or
icebp
mov
or
test
cmc
jns
leave
pop
adc
sbb
and
inc
aaa
addr16
xchg
movsl
aaa
mov
cmp
xor
pop
adc
jno
cmpsb
mov
sti
aas
sub
fdivl
xchg
inc
bound
cmp
pop
pop
loop
cmp
push
frstor
jmp
mov
out
or
xchg
std
or
fistpl
imul
les
in
xchg
xor
and
das
imul
inc
cmp
mov
mov
xor
stos
inc
sbb
std
test
pop
push
adc
out
add
stos
xchg
xchg
and
and
mov
nop
es
test
pop
xor
dec
adcl
leave
mov
mov
mov
call
jp
pushf
sahf
js
mov
imul
lods
adc
fwait
call
adc
nop
lds
lds
daa
cs
adc
ja
add
xchg
xchg
sbb
jmp
jmp
mov
imul
xchg
dec
sub
and
mov
fdivs
arpl
adc
outsb
mov
push
lret
pop
repz
add
sti
xor
cmp
repz
mov
xchg
pop
push
lcall
sbb
push
add
mov
lgs
jno
inc
dec
inc
push
adc
jno
jmp
xor
sub
movsl
sub
sub
mov
and
push
orl
fists
popa
sarl
and
adcl
inc
dec
dec
fwait
test
mov
jge
lret
shrb
loope
cmpsl
adc
pop
pop
in
aaa
scas
jne
dec
mov
shrb
lods
lret
into
inc
insb
gs
es
enter
jne
negl
test
adc
jno
and
es
stc
xchg
lea
mov
jb
lcall
push
sub
clc
ss
movsb
jbe
push
cmc
fldcw
test
pushf
add
mov
sbb
jo
cmp
lea
jnp
add
ret
add
gs
cmc
inc
mov
sub
mov
push
shr
add
cmpsb
pop
rolb
test
cwtl
fdiv
add
jae
inc
test
fwait
inc
mov
jmp
mov
jecxz
inc
add
pop
and
std
shll
cmpsl
cmp
subb
mov
daa
mov
jge
dec
mov
fs
mov
insl
push
pop
lea
pop
shr
movsb
and
xchg
sbb
pusha
pop
adc
in
xlat
scas
and
cmp
imul
push
cmp
mov
dec
imul
pushf
roll
adc
inc
cmp
mov
lds
or
addr16
mov
pusha
movsl
cwtl
jbe
sub
loopne
stos
push
pop
lret
jecxz
mov
lods
mov
shl
adc
cmpsb
inc
roll
inc
cmp
xchg
or
popa
out
cmp
mov
lods
repz
int
cmc
fdivrs
jno
in
jb
inc
jecxz
inc
jecxz
mov
lea
ja
test
pop
lret
pop
popf
mov
out
xchg
sub
andl
call
inc
push
jnp
arpl
test
out
push
lret
push
out
pop
fsubrs
gs
into
sub
or
pop
fcomps
mov
jns
iret
and
in
and
push
insl
das
popa
mov
jl
aad
jecxz
fmull
lahf
push
loopne
lret
pop
es
sub
mov
bound
ret
jg
and
push
jl
cmpl
call
negb
cmpsb
add
mov
jp
add
addb
jbe
xor
roll
clc
out
cmp
inc
mov
or
loope
jo
mov
in
out
push
inc
stos
adc
ja
sub
push
mov
jns
sbb
mov
jle
xchg
ss
mov
sub
out
dec
filds
lahf
xor
add
cmc
xchg
push
xchg
ds
repnz
dec
push
fsub
mov
test
or
fcomps
notb
add
push
loope
mov
xchg
aaa
je
jle
or
sbb
jno
and
jno
and
mov
push
pop
xor
loope
mov
dec
sub
push
jl
cmp
int
enter
jmp
inc
add
lods
pop
stos
add
and
and
mov
lret
mov
adc
and
repz
rorb
or
aas
or
lcall
repz
bound
out
subb
sub
outsl
sbb
movsl
cld
jnp
adc
jle
inc
pop
pop
popa
mov
test
pop
es
mov
push
mov
dec
pop
xchg
ret
dec
mov
mov
aaa
fwait
pop
sarl
push
loopne
xchg
mov
dec
loope
or
test
adc
scas
loop
cli
shrb
mov
push
xchg
mov
in
mov
imul
movsl
bound
lods
sub
jns
icebp
adcb
es
xor
pop
in
cmp
repnz
pop
cld
push
sbb
jb
push
cmpsl
pop
ljmp
sub
lahf
push
mov
pop
xchg
inc
mov
jecxz
aaa
lock
and
xor
loopne
xchg
stos
fdivrs
stos
mov
jg
lea
clc
popa
repnz
aam
mov
js
xchg
cmpsl
nop
inc
fisubl
push
inc
int
pop
je
jbe
inc
xchg
jne
adc
mov
mov
scas
les
dec
inc
push
pop
lods
ljmp
or
notb
movsl
sbb
out
push
inc
addb
rcrb
jecxz
daa
test
dec
or
mov
inc
mov
push
imul
push
addr16
cmp
test
daa
outsl
sbb
fists
filds
out
adc
or
sahf
hlt
add
aas
inc
lea
int
aas
cmpsb
ret
fiadds
pop
fimuls
sbb
gs
adc
test
enter
clc
push
jmp
mov
lret
xor
call
adc
and
sub
call
bound
aaa
add
sahf
or
mov
ds
push
mov
repz
mov
cmp
dec
xor
mov
push
cmpsb
or
push
mov
mov
cmpsl
es
xor
mov
push
sub
lret
or
xchg
out
jp
xor
cmp
inc
dec
into
dec
loopne
test
mov
sbb
mov
adc
test
or
shrl
lock
es
add
and
sbb
xchg
dec
mov
dec
rorb
insb
lcall
xchg
xchg
jecxz
inc
fcomps
xor
roll
add
stos
mov
scas
scas
ds
test
in
shr
adc
jle
jo
push
loope
sbb
pop
lods
sbb
sarl
or
test
mov
jb
stc
inc
in
mov
js
mov
leave
mov
cli
mov
popf
into
cs
cmpsl
mov
aad
xor
mov
sbbb
xchg
jmp
jne
out
jmp
bound
sub
push
subb
mov
sbb
pop
in
addb
jp
insb
out
dec
jmp
jnp
mov
sub
mov
fxch
ss
rol
and
xor
cmp
mov
add
cmpsl
insb
push
push
push
xchg
gs
mov
das
or
push
lea
push
mov
sub
aad
pop
or
dec
int
adc
xchg
or
cwtl
loope
clc
dec
inc
into
fmuls
outsl
js
cmovae
leave
fcmovnb
data16
push
addr16
mov
outsb
movsb
outsl
in
xor
pop
je
mov
jno
jno
mov
inc
mov
add
mov
push
sbb
insl
mov
jecxz
hlt
mov
sub
sub
push
push
add
sbb
mov
loope
adc
nop
sbb
js
test
mov
or
mov
cmp
inc
push
sub
test
mov
sti
sarb
sbb
inc
sub
sahf
aad
or
rcrb
xor
dec
xlat
or
enter
and
movsb
jae
cs
pop
xor
pusha
xchg
cmp
pop
mov
movsb
inc
daa
add
xor
negl
sub
mov
fisubrl
cmpsb
jle
push
test
imul
fcmovbe
xchg
mov
dec
dec
add
cltd
mov
mov
adcl
andb
push
mov
cmp
pop
cmc
call
cmp
call
imul
and
pop
cmp
inc
xor
xchg
or
inc
cli
push
inc
jo
cmp
es
subb
or
imull
aaa
sub
lret
sbb
mov
mov
fildl
add
add
pop
fisttpll
jbe
mov
jl
idivb
inc
js
cmp
jmp
sahf
out
dec
cs
jbe
nop
inc
das
push
bnd
ret
or
xchg
mov
clc
pop
push
xchg
adc
mov
cmpsl
dec
lds
cs
scas
fmull
ss
insb
in
out
adc
test
mov
das
insl
xor
ret
add
out
pop
jp
mov
jp
xchg
test
hlt
dec
je
call
push
pusha
mov
mov
and
loopne
daa
xorb
mov
stos
add
filds
mov
mov
insl
fwait
jns
xor
mov
adc
mov
cmp
fucomi
aas
inc
sbb
enter
ljmp
cwtl
imul
pop
pop
sub
mov
or
mov
shlb
insl
and
mov
lds
scas
mov
repz
scas
das
and
xor
or
test
mov
sbb
mov
adc
std
jno
cwtl
push
cmpsl
sbb
xor
push
dec
push
mov
cmp
jb
mov
das
adc
dec
aad
pop
jp
push
mov
fmull
jmp
sub
loop
adc
mov
pop
dec
pop
push
xchg
push
pop
mov
ret
and
sbb
xchg
and
jo
or
sahf
inc
out
mov
adc
mov
clc
cmp
sbb
mov
push
outsl
xor
repz
jo
and
cmpsb
cmp
repnz
xchg
jmp
sbb
fimuls
iret
pop
and
stos
dec
fwait
pop
push
scas
xchg
shll
mov
dec
std
push
mov
adc
cmp
mov
cmp
inc
mov
lds
data16
sbb
mov
mov
mov
out
in
fwait
jne
fisttpl
mov
fstpt
andl
sub
imul
sub
pop
sub
nop
shll
inc
scas
jnp
pop
iret
fs
fwait
jbe
cmc
or
test
xchg
inc
and
cmp
gs
bound
inc
push
mov
xor
inc
xchg
push
loope
push
mov
add
inc
dec
loopne
shlb
inc
pusha
rcrl
fcoml
push
sub
inc
adc
je
and
jecxz
xchg
mov
scas
cmpsl
test
movsb
xchg
or
add
outsl
xchg
imul
iret
and
jmp
aam
adcb
xor
pop
jmp
lret
and
jle
mov
andl
pop
push
scas
lahf
mov
hlt
mov
push
loop
cmp
jo
push
int
nop
dec
lock
or
adc
xchg
sub
ljmp
popa
in
dec
xor
adc
adc
or
push
jg
add
sub
ret
sbb
adc
mov
shrb
mov
lea
paddq
arpl
xchg
cs
xchg
xor
adc
fnstcw
mov
insl
insb
jno
or
inc
into
ds
ljmp
ror
hlt
sub
roll
loopne
arpl
movl
loope
jbe
adc
and
mov
out
and
sub
lds
aas
inc
stos
aam
xchg
pop
stc
outsl
ljmp
pushf
dec
mov
pop
xlat
push
mov
inc
cmpsl
adc
jno
or
jg
sbb
cld
sbb
mov
pushf
jbe
int3
rcrl
sub
orl
mov
scas
popf
insb
hlt
mov
xchg
mov
js
js
gs
pop
orl
dec
bound
or
and
enter
cld
lret
out
add
std
fucomip
xor
int3
ret
jnp
clc
xchg
dec
jge
das
ret
xchg
gs
adc
mov
fimull
adc
pop
mov
shrb
mov
leave
mov
sub
loope
push
fdivrl
jge
sbb
loop
nop
data16
mov
popf
adc
fmull
lahf
cmp
cld
push
pop
hlt
dec
insl
mov
sahf
pushaw
push
lea
popa
push
inc
mov
les
into
and
ljmp
pop
repnz
pop
lea
fistpl
mov
test
test
push
scas
push
pop
lock
ds
out
jmp
push
sbb
test
movsl
outsb
inc
cltd
cld
in
xchg
je
dec
sbb
popf
loop
fidivrs
inc
sub
pop
jbe
es
inc
mov
and
shlb
add
aaa
hlt
fldcw
cld
mov
mov
cmp
mov
cld
inc
std
sbb
mov
dec
sub
cmc
pop
popa
cli
lret
and
sbb
sbb
mov
je
pop
iret
sub
shlb
test
and
notl
aad
mov
rcrb
xor
cmp
mov
clc
cmp
mov
xchg
loopne
std
in
dec
ss
sbbb
rclb
push
push
inc
popa
fdivrp
enter
test
pop
cmp
gs
jge
or
cmp
pop
scas
adc
cli
ja
pop
pop
push
adc
mov
scas
cmp
bound
aad
push
inc
inc
shrl
loop
ficomps
rcrl
push
sub
sbb
pop
sub
js
stc
push
push
loop
mov
adc
or
sahf
add
and
pop
pop
leave
lea
cmpb
ljmp
add
xchg
faddl
sbb
mov
jns
daa
hlt
in
leave
dec
or
mov
pop
test
scas
fcomps
xor
addr16
sti
pop
mov
lahf
in
lds
adc
fisubs
push
mov
les
cwtl
xor
xchg
xchg
sbb
push
adc
sbb
repz
mov
ljmp
inc
mov
das
push
push
loope
repz
mov
incb
in
popf
ds
cmpl
adc
inc
cmpsb
adc
pop
cld
inc
call
pop
mov
lcall
push
rolb
mov
mov
lods
sbb
push
addr16
and
fsubr
je
vmread
xor
into
out
ret
pop
jmp
das
sub
push
mov
mov
xor
or
loopne
xchg
and
adc
loope
cmp
inc
cmpsb
andps
ret
rcl
mov
mov
clc
scas
mov
gs
or
aas
jo
aam
jns
fnsave
mov
and
cltd
cmp
cs
cld
lcall
push
xorl
and
enter
lods
dec
hlt
cmc
cmp
xlat
add
out
stos
aam
jns
push
les
push
cltd
aad
xor
jnp
or
js
out
rcrb
icebp
sahf
jl
fisttpll
mov
idivl
inc
and
push
inc
or
xlat
fisubs
or
in
fnstenv
das
and
inc
ret
clc
xlat
addr16
mov
les
test
fiaddl
jmp
add
pop
jae
sti
dec
fucomi
cmp
rol
lcall
sarl
test
add
cmpl
lock
in
enter
sbb
insb
pop
or
andl
or
ljmp
push
mov
adc
outsb
mov
add
add
into
sbbb
lds
mov
xchg
dec
test
in
xchg
les
and
aaa
in
scas
mov
sbb
mov
sbbb
stos
push
or
nopl
adc
xor
adc
inc
cld
flds
mov
or
in
lock
xchg
std
inc
pop
push
jp
mov
adc
cmp
inc
jno
test
mov
leave
jl
inc
clc
pop
pop
sbb
add
xor
inc
mov
inc
jns
stos
ds
jno
stos
cmp
or
ja
leave
test
push
dec
and
movsl
push
mov
loopne
adc
test
lahf
dec
out
mov
jb
pop
jno
lea
test
adc
push
inc
push
pop
ljmp
fmuls
les
xchg
les
fimull
fdiv
sub
xlat
push
adc
shrb
dec
andl
sub
add
push
push
mov
aaa
mov
cmova
xchg
jbe
mov
mov
push
mov
xor
and
pop
in
sbb
adc
in
aas
fmull
addb
nop
clc
inc
or
add
flds
cld
adcl
inc
mov
push
cmpsb
int3
mov
cmpsl
mov
nop
dec
lods
mov
xchg
fistpl
sbb
push
jae
push
sub
enter
push
call
bound
jbe
loop
testl
sub
or
pop
mov
jnp
faddp
cmp
or
testl
mov
mov
mov
push
inc
fisubl
sbb
or
out
sub
xchg
jo
ja
inc
pop
fdivrs
lret
inc
dec
sub
jle
fistpl
or
inc
inc
cmpsb
sub
int3
ret
mov
add
pop
stc
mov
pusha
ds
frstor
nop
pop
sarb
inc
rcl
mov
sub
jbe
je
push
push
fs
jge
push
sbb
cmp
or
clc
mov
jle
cmp
mov
dec
pop
mov
je
mov
pop
or
popf
jno
pop
sub
or
movl
cwtl
push
cwtl
push
mov
js
cltd
push
fucomi
fbld
dec
in
push
mov
adc
or
or
hlt
cld
aad
xlat
dec
mov
out
lock
test
xchg
dec
push
jl
add
pop
addr16
into
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
mov
jnp
sub
ret
sub
add
or
sub
xchg
add
das
xor
loopne
bound
jle
adc
call
loop
mov
and
pusha
cmp
add
xchg
inc
mov
jae
adc
and
das
pop
pop
fmull
xlat
fdivrl
sarb
leave
dec
fisttps
jno
push
jae
ret
push
popf
xchg
jl
push
and
popf
adc
je
or
sarl
jp
call
fwait
or
add
inc
add
imul
and
flds
cmc
in
mov
out
cmp
shlb
or
movb
xchg
jmp
stos
std
or
lods
fsubl
aaa
test
loop
jl
or
mov
cmovnp
push
mov
fcomp
or
inc
xchg
pushf
loopne
ss
add
inc
lcall
lods
xor
jne
loopne
ljmp
shrb
mov
test
fdivl
sub
mov
jne
mov
adc
push
adc
xchg
imul
inc
and
jp
hlt
mov
or
insl
shll
cmp
xor
pop
fidivl
fcmovne
out
cmpsl
jb
sub
orl
jae
lods
dec
in
mov
pop
push
popf
int3
sti
das
das
daa
or
adc
aad
cmp
push
andb
pop
icebp
outsb
inc
push
mov
cltd
insb
sarb
int
lock
dec
int
stc
mov
cld
iret
jge
outsl
mov
push
jge
orps
sahf
das
push
mov
xor
xor
xor
sbb
cmp
call
adcl
incb
jne
xor
lcall
adc
in
movsl
cmp
fxtract
dec
and
frstor
sub
out
or
data16
jmp
xor
push
jmp
jle
or
pop
dec
lcall
outsb
inc
movsl
adc
dec
div
add
sub
jle
sbb
add
hlt
push
pop
in
lahf
test
inc
ss
or
pop
push
adc
negl
sti
pop
loopne
fsts
dec
cmc
push
inc
fldl2t
sbb
xchg
xor
roll
test
int
lret
in
xor
xorl
inc
xlat
mov
pop
negl
out
jno
lea
inc
or
outsl
xchg
add
aam
xor
insb
fmull
sbb
scas
add
in
les
movsl
jge
jmp
jne
sbb
ss
hlt
mov
pop
int
mov
and
jne
xlat
or
push
mov
adc
out
sub
loope
and
test
stos
mov
jae
xchg
dec
pop
js
and
jnp
leave
cmc
loopne
sbb
adc
ret
scas
xchg
pop
in
cmp
ja
mov
daa
data16
fbstp
cli
out
pushf
xor
pusha
shl
dec
xor
loop
adc
pop
test
mov
cmp
push
int3
jno
adc
mov
mov
neg
fdecstp
repz
loop
lret
frstor
fnstcw
dec
pop
dec
movsb
clc
pop
out
xchg
xchg
jnp
pop
aaa
ja
shrb
lret
notl
mov
add
cltd
mov
outsb
lds
jg
mov
icebp
popa
imul
test
loopne
mulb
das
addr16
sbb
mov
sbb
mov
push
daa
jb
jmp
adc
xor
adc
pusha
lcall
pop
pop
stos
mov
xchg
cmpsb
push
outsb
adc
nop
pop
xchg
xchg
movsl
xchg
xor
push
or
adc
cmc
in
stos
fists
fcomp
sbbb
lds
test
add
pop
mov
lds
mov
sarb
cmp
enter
push
out
mov
test
popa
inc
hlt
into
out
xchg
repz
lods
mov
dec
cmpsb
int
inc
repnz
rcll
rorl
lahf
mov
mov
ljmp
jge
mov
ljmp
mov
insl
pop
xor
cwtl
subb
imul
mov
lret
inc
jle
lods
inc
insb
into
lret
fwait
mov
mov
test
test
push
jae
clc
push
outsl
cmp
xlat
lcall
xor
xchg
xchg
mov
adc
insb
adc
fs
mov
cmp
push
aaa
in
cmp
jns
imul
outsb
cmp
inc
mov
lret
mov
push
add
dec
fdivr
push
mov
out
inc
repz
popa
lea
bound
scas
into
das
xor
push
lahf
je
mov
xlat
das
mov
cmpsl
inc
lea
test
in
add
lret
pop
mov
and
cli
push
adc
and
cmpsb
mov
ss
jg
pop
mov
adc
lods
adc
xchg
push
dec
test
and
pop
inc
xor
sti
mov
xor
inc
pusha
inc
insb
add
xchg
shlb
popa
pop
cmp
mov
iret
int3
adc
dec
push
dec
jb
das
fisubrs
mov
mov
adc
and
jecxz
sysenter
shlb
sub
addl
insb
in
ret
push
mov
dec
jbe
je
xor
scas
adc
sbb
mov
inc
cmc
int
pop
xchg
scas
out
mov
mov
or
xor
dec
pop
xor
lret
movsl
ss
adc
pop
scas
sub
sbb
mov
dec
fcoml
sbb
lock
adc
imul
testl
lds
pop
into
std
adc
sbb
arpl
inc
movsb
int
pop
mov
lret
cltd
shlb
lahf
ja
jle
cmpsb
mov
dec
jb
or
inc
lcall
add
lods
xchg
sti
cli
mov
shl
pushl
aaa
jmp
mov
je
lods
pop
pushf
jne
pop
mov
sub
inc
pushf
test
and
int
cmp
jg
in
js
jnp
xchg
pop
aas
lret
std
inc
pop
imull
dec
and
shll
movsb
push
insb
cmovge
xchg
out
out
mov
dec
and
popf
shrl
sub
mov
les
mov
faddp
or
inc
lods
mov
lock
pop
int3
adc
inc
lret
push
adc
sbb
inc
pusha
lret
fbld
and
scas
fsubs
scas
dec
ds
divl
add
inc
add
push
stos
fwait
push
or
xchg
rcr
cli
dec
mov
outsb
fcompl
jae
ss
jae
adc
ja
test
enter
pushf
dec
fnstsw
push
mov
and
jmp
adc
in
mov
cmp
xchg
cli
ret
sub
and
inc
sbb
dec
stos
ret
outsl
adc
sbb
pop
stos
cmp
outsb
loop
outsb
jae
sub
fistl
mov
mov
jg
cwtl
test
xorb
dec
out
jo
sti
mov
inc
adc
stos
lea
mov
lods
aad
xchg
imul
xor
gs
add
lds
xchg
mov
cltd
rol
jmp
lret
mov
push
pop
mov
jle
push
pop
push
push
data16
in
out
cltd
ret
push
sahf
test
push
adc
lods
dec
out
lods
loop
add
or
adc
push
pop
push
and
push
cmp
in
sarb
mov
cltd
adc
add
xchg
dec
jp
cmpsb
std
xor
in
cmp
arpl
rcl
orl
sub
dec
fnstenv
in
push
add
rclb
xchg
mov
inc
pusha
adc
icebp
or
imull
dec
pusha
ds
xchg
xchg
mov
mov
mov
out
fwait
jne
lahf
clc
jmp
int
test
movsb
add
cmp
movl
adc
lock
mov
jb
pop
popf
shll
ds
data16
imul
jo
cmp
ljmp
fstp
xor
cmpsb
and
movsb
or
test
sub
adc
dec
mov
fimull
roll
or
inc
in
xor
dec
rcr
adc
jno
sbb
adc
mov
push
mov
inc
imull
push
and
xchg
testl
cld
mov
mov
sti
loopne
ss
jmp
inc
jb
fwait
cli
add
imul
mov
hlt
push
cmpsb
test
insl
dec
cmp
imul
push
popa
xchg
add
jge
xchg
adc
adcb
dec
mov
lahf
push
sub
sbb
add
inc
fwait
out
mov
sub
loope
add
mov
lahf
or
mov
pop
rol
and
inc
jecxz
cmpsb
mov
pop
jbe
pusha
or
pushf
fbstp
inc
xorb
pop
andl
inc
in
repz
push
jo
andb
fidivrl
push
jnp
adc
cmp
adc
dec
dec
shrb
sbb
jecxz
mov
bound
in
out
or
jno
loopne
jmp
repnz
add
dec
and
shrl
cmpsb
stos
push
mov
lret
roll
and
fcmovnbe
repz
jo
stos
xchg
decb
mov
dec
push
push
sbb
lahf
nop
pop
mov
nop
iret
xchg
mov
iret
or
out
or
ret
data16
inc
imul
ds
xor
and
mov
push
jb
imul
push
mov
pop
les
or
jno
mov
ret
stos
movsl
and
fwait
xor
int
jge
pop
mov
mov
movsb
enter
test
call
or
add
cmp
pop
arpl
mov
aaa
inc
and
outsb
scas
add
fwait
loope
adc
mov
call
pop
jae
fld
clc
lea
shrd
inc
pusha
aam
xchg
dec
ffree
xchg
movntps
mov
pop
in
jl
xor
jg
scas
inc
mov
iret
add
cmp
in
inc
inc
inc
jae
mov
add
mov
fnstenv
test
jge
jno
stos
test
mov
dec
insb
es
bound
xor
adc
mov
cs
sbb
loope
add
mov
addl
lods
imul
or
ja
push
imul
loope
xchg
inc
cmpsl
call
add
aas
push
scas
mov
test
popa
sub
jbe
push
and
jmp
add
mov
jl
imul
arpl
dec
sub
mov
cli
mov
sahf
adc
and
out
in
pop
dec
push
push
mov
fcomps
test
xchg
pop
jg
xor
xchg
pop
out
mov
test
mov
sbbl
dec
lods
add
adc
pop
jle
sti
out
dec
push
cmpl
fmul
mov
push
aam
cmp
sti
fistpl
int3
sub
scas
movsb
and
jne
insb
xchg
leave
popf
scas
adc
stos
test
rolb
xor
add
sub
adc
in
popf
aaa
shlb
gs
adc
or
or
int
loopne
movsb
mov
pushf
push
push
cmp
xchg
out
mov
lds
and
popa
imul
ja,pt
out
jb
xchg
ret
jb
and
mov
lahf
lods
rcr
fwait
repz
inc
xchg
push
repz
cld
push
arpl
aam
movsl
dec
lock
outsb
pop
mov
test
jg
or
rorl
inc
push
mov
dec
inc
jnp
sbbb
test
adc
loope
adc
inc
and
pop
mov
imul
and
cli
in
push
je
shll
jne
sbb
lods
mov
roll
and
popl
lret
xor
in
inc
adc
enter
xchg
ja
push
out
fisttpl
push
aam
mov
xlat
pop
aam
cltd
add
scas
dec
scas
sarb
pop
vphaddbd
int3
lcall
aas
pop
adc
ds
inc
fistl
outsl
xchg
or
inc
jnp
mov
cld
stc
insb
sub
lock
dec
test
cmp
xlat
xor
rcl
pop
notl
test
pop
fistps
mov
divl
cmp
mov
dec
cmp
xorl
and
push
sbb
scas
lret
push
lret
shrl
ffree
jno
scas
cwtl
cmp
mov
inc
into
cmp
in
hlt
sbb
cwtl
dec
pop
push
out
push
insb
jecxz
xchg
mov
lea
repz
lods
subl
lock
mov
outsb
cs
sub
out
out
subb
pop
cmp
fwait
cld
lea
mov
push
cmp
negb
shl
or
push
inc
xchg
cmp
mov
inc
xchg
jmp
ds
cs
add
jge
pop
das
clc
data16
jns
jns
inc
pop
cltd
jb
cmc
bound
pop
mov
push
sahf
lcall
pop
subl
jmp
test
addr16
shrb
lock
test
shll
dec
jl
clc
insb
xchg
in
pop
je
add
xor
xchg
aam
leave
scas
mov
std
cli
bound
jne
test
mov
imul
mov
fcoms
dec
clc
mov
jno
sbbb
ret
push
scas
and
stos
sub
mov
mov
dec
rcrb
into
enter
sbb
push
lret
pusha
add
add
dec
add
outsb
int
xor
fs
movsl
xor
mov
xor
adc
mov
jl
jb
xor
sbb
lea
cmp
insb
shlb
shlb
in
popf
sbb
mov
or
pop
fwait
outsb
sbb
sbb
cmpsb
mov
push
les
mov
jg
xchg
inc
push
outsl
decb
add
loope
pop
bound
adc
push
mov
in
inc
pop
add
aaa
or
jmp
push
dec
or
out
jae
xlat
lcall
je
sbb
enter
push
fiaddl
inc
cmpsl
in
xor
pushf
inc
cwtl
cmp
mov
sbb
loopne
mov
pop
ds
std
push
sub
pop
jmp
jnp
push
cmp
or
pop
call
jp
add
stos
and
and
mov
pop
repz
dec
add
jmp
cmp
push
lds
xchg
stos
aam
xchg
pop
test
and
test
in
aad
cld
adc
cwtl
orb
or
add
and
mov
pop
sub
ljmp
movsb
imul
dec
out
push
shl
add
or
jge
dec
dec
out
popf
lret
jne
ljmp
xor
dec
add
mov
mov
mov
jb
inc
fistpll
sbb
and
push
dec
aaa
jle
fcmovbe
push
dec
jbe
xor
aas
push
sbb
push
idivb
xchg
lock
push
addr16
add
push
int
push
ss
stos
in
lea
sub
testl
or
lods
js
fsubl
add
add
dec
cmpsl
and
jg
mov
jb
or
in
cwtl
orb
fistpl
sahf
leave
mov
push
shrb
pop
es
sahf
scas
addr16
sbb
cltd
sub
out
dec
pop
or
sub
sub
out
jae
or
mov
popa
popa
dec
lea
xlat
add
and
mov
test
addl
xchg
xor
lods
jno
mov
insl
sub
lahf
lods
mov
dec
cmp
outsb
dec
mov
add
xchg
mov
bound
outsl
inc
inc
rcll
into
das
pop
subl
rcrl
or
dec
sar
fcoms
test
negb
lods
rclb
inc
xor
js
imul
xlat
divl
mov
dec
test
and
shlb
das
nop
and
pop
enter
shr
incb
dec
dec
arpl
aad
mov
lock
aad
jl
pop
dec
cmc
fsubs
sbb
cmp
stos
in
mov
xchg
into
sahf
int
in
or
pop
add
iret
nop
and
data16
mov
xor
addb
mov
lods
jnp
inc
pop
arpl
dec
data16
mov
or
dec
cwtl
or
test
gs
sbbb
out
int
add
push
mov
push
cmpsb
mov
pop
rolb
in
or
inc
add
movd
cltd
loop
cld
iret
and
das
jne
cmp
fcomp
or
aad
cmpsb
ret
cmpsl
hlt
stos
notl
pop
orb
aad
lea
or
testb
push
insl
jl
jno
loope
fistl
rcr
inc
jg
cmp
xchg
mov
jns
jnp
add
add
stc
loope
ljmp
push
mov
and
dec
fnstcw
iret
mov
mov
sbbb
movsb
and
push
cmp
test
daa
mov
jge
cmpsl
gs
jae
xor
jmp
mov
insl
int3
pop
loopne
push
pushf
fnstsw
mov
fisubrl
xchg
movsb
sub
cmovg
orl
hlt
je
pusha
or
int3
pusha
imul
cmp
push
push
inc
mov
jge
mov
adc
inc
cmp
hlt
iret
lcall
roll
adc
jecxz
push
push
cmp
sti
testb
sbbb
jl
xor
aaa
aas
cmpl
or
jp
sbb
in
fwait
roll
add
push
add
iret
xor
or
jns
sbb
xchg
pop
adc
aaa
mov
movsb
pop
popa
add
fnop
xor
pop
xchg
in
test
mov
clc
ljmp
aaa
cli
adc
arpl
pushf
mov
aad
aas
mov
push
push
push
adc
pushf
pop
je
sub
push
hlt
je
in
je
movsl
mov
pop
jno
std
push
pop
ret
pop
mov
aas
pop
mov
fldt
lret
popa
push
test
mov
jo
pop
add
xchg
xchg
aad
inc
xchg
cmp
sbb
inc
or
add
inc
mov
add
adc
mov
sub
insb
mov
pop
iret
call
stc
lahf
jl
push
pop
pushf
mov
xor
adc
mov
lret
in
popf
test
rol
fildll
ds
and
cmpb
pop
adc
sub
rorb
or
cmp
add
outsl
shl
je
mov
imul
test
shll
dec
ss
push
mov
push
loopne
retw
mov
sub
xchg
jl
cld
inc
mov
movsl
scas
or
cmp
sbb
fs
and
push
mov
andl
mov
sbb
sbb
aam
or
clc
addl
dec
add
pop
xor
xor
xchg
cmp
push
mov
xor
jle
bound
mov
fwait
add
jg
sub
jne
dec
sbb
mov
rorb
lcall
jle
pop
add
and
ret
jne
fsub
ds
mov
pop
inc
fs
push
jns
xlat
je
adcl
xchg
mov
rorl
call
push
in
pop
mov
repnz
pop
cmpsl
cs
clc
and
fwait
dec
cltd
out
outsb
push
jnp
xor
outsb
rcrb
inc
pushw
fimull
leave
xchg
push
out
pop
inc
push
enter
lds
push
pop
lahf
mov
cmp
mov
sub
pushf
dec
adc
push
or
outsl
mov
in
call
dec
movsb
inc
lods
shlb
jbe
add
pop
fcmovu
ss
imul
or
cmp
pop
aaa
ficoms
add
xchg
xor
into
fistpl
popa
lcall
and
sti
add
pop
mov
ds
adc
mov
std
sbb
ljmp
jo
xchg
dec
inc
xor
sahf
cmp
repz
jmp
fists
fnstsw
int
jg
adc
insb
sbb
adc
push
inc
flds
adc
adc
decl
pop
sub
movsb
das
sbb
imul
and
out
mov
imul
int3
pop
or
fistps
mov
and
iret
jp
in
mov
xchg
sub
jge
addl
inc
mov
shrb
andb
pop
add
loopne
xlat
pop
pop
push
and
sbb
lcall
in
add
jno
aam
lods
fsubl
aas
adc
imul
int3
push
adc
add
jmp
xor
cs
add
sbb
jns
xor
jle
push
inc
ror
cmp
aas
repnz
repnz
xchg
cli
xor
arpl
pop
dec
adc
cmp
jae
dec
rorl
ss
movsl
pushf
mov
dec
jle
ret
fsubl
jp
sbb
mov
das
aam
clc
ror
sbb
mov
fisubl
popf
push
ss
xchg
int
xchg
mov
lret
mov
mov
dec
insb
jns
jmp
jbe
das
sti
loope
adc
call
sbb
ja
push
jbe
sbb
popa
vxorps
mull
add
pop
js
dec
outsb
sarb
sti
sbb
daa
sub
call
fs
xor
and
add
fnstcw
shl
and
pop
jb
sbb
add
push
lret
repz
jbe
jp
sbb
int3
fstps
jb
aad
test
mov
sbb
adc
aad
add
mov
inc
fldl
xchg
inc
adc
movsb
jg
das
icebp
xchg
xor
call
add
or
xchg
aad
adc
fwait
mov
cs
stc
movsl
lret
insl
push
call
dec
outsb
inc
fs
test
and
mov
lret
push
jb
jno
mov
ljmp
aaa
imul
orl
push
or
xchg
dec
or
fs
daa
sbb
push
bound
or
fiaddl
add
inc
or
mov
jb
sbb
mov
ret
dec
out
mov
cmpb
pop
lods
cmpsl
or
gs
je
arpl
xor
fs
aad
pusha
insb
dec
fsts
xor
out
mov
and
stos
jne,pn
mov
gs
dec
jmp
outsl
push
mov
inc
push
lds
aad
push
sti
adcb
mov
push
lret
mov
push
int3
stc
stos
push
ja
lds
loope
jnp
add
sbb
xchg
mov
lea
or
mov
xchg
jg
xor
pop
push
in
mov
sahf
mov
mov
dec
fsubs
mov
xor
cmp
jge
mov
mov
pause
pop
adc
into
insl
rcll
fstl
sarb
loopne
fdivl
sbb
jmp
sbb
aas
fwait
jo
mov
push
sbb
iret
je
push
icebp
inc
add
xor
mov
xchg
sub
mov
push
fwait
jle
or
dec
cwtl
pushf
and
jne
repnz
inc
int3
pop
test
cld
sti
inc
lods
out
xor
std
jae
lock
andl
jae
mov
cmp
or
rclb
loopne
jmp
mov
mov
mov
hlt
xchg
cmp
ret
push
lods
or
loopne
xchg
dec
xchg
cmpsl
add
les
fwait
sbb
xor
pop
add
dec
rcl
mov
mov
sbb
ljmp
repz
xor
shl
mov
add
ds
sbb
stos
decb
dec
outsl
inc
lods
gs
pusha
mov
jmp
push
inc
or
xchg
or
and
jae
jnp
pop
xchg
out
dec
sub
push
aaa
add
sub
ja
inc
mov
mov
pushf
jns
add
cmc
push
push
nop
dec
pop
mov
mov
or
lahf
and
lahf
push
cmpsl
mov
jae
cwtl
dec
pop
mov
sub
loope
stc
scas
mov
jne
movsl
lretw
out
fimull
xchg
mov
inc
jo
jg
and
jne
xor
cmpsb
dec
stos
cmp
ss
push
xor
cltd
in
out
outsb
xchg
jbe
and
dec
xor
pushf
stos
mov
std
ret
mov
mov
mov
inc
sbb
adc
fistl
rcr
popa
cs
test
push
xchg
xchg
add
test
xor
popa
outsb
out
mov
fsubrs
cmp
in
loope
jno
add
lea
cmp
push
clc
add
loope
pushf
push
popa
movsl
ss
jae
xchg
mov
mov
jo
and
js
icebp
adc
enter
je
rclb
cmp
mov
movsl
rolb
mov
insl
inc
mov
sub
adc
pop
and
loope
jecxz
fsubrs
ucomiss
jmp
mov
and
fwait
sbb
and
mov
sarl
sbb
sbb
dec
sar
dec
in
lahf
outsl
cmp
xchg
mov
aad
push
mov
xchg
in
xor
lcall
pop
or
call
ret
push
cs
in
add
insl
mov
pop
jle
lock
mov
sbb
icebp
ret
xchg
into
mov
cmp
popa
into
cmc
adc
rorb
into
cmp
xlat
jmp
xlat
jns
adc
cmp
cmp
lcall
xor
pop
xor
or
arpl
aad
icebp
xchg
test
loop
sbbb
jnp
testb
jns
cmpl
sbb
dec
lahf
fisttpll
loope
es
pusha
push
popa
addl
jecxz
pop
fisubrl
in
pop
addr16
inc
xor
adc
cmp
call
xchg
cmp
repz
mov
popf
inc
cwtl
sbb
fbld
mov
lds
or
inc
fdivl
jle
pusha
faddl
mov
adc
adc
out
movb
dec
dec
dec
push
imul
mov
mov
or
testl
or
dec
xor
pop
lods
mov
sahf
xor
jle
push
lret
dec
jnp
lret
sbb
leave
lret
push
push
xor
clc
aaa
call
mov
sbbb
out
dec
repz
das
cwtl
in
lahf
push
loope
xchg
cld
mov
fsubr
xchg
adc
jg
adc
pop
lods
adc
sub
add
push
cmp
dec
shrl
cmp
xchg
push
jno
in
ret
xchg
adc
fildl
jbe
testl
movsl
repz
mov
sbb
ret
xchg
frstor
push
rcrb
lret
mov
lods
pop
stc
and
or
addr16
jae
or
aas
mov
mov
sub
insl
xchg
push
dec
lds
sahf
lods
push
sub
push
ds
add
push
jmp
xchg
cmpsb
cmp
popf
push
xor
loope
je,pn
xor
into
jl
xorl
fisttps
push
popf
jbe
vcvttss2si
push
aam
insl
add
mov
xor
add
scas
repz
cwtl
imul
nop
inc
jecxz
in
call
cmp
xor
cmc
cmp
sbb
lret
and
dec
sbb
push
xor
mov
je
cmpsb
cmp
pusha
dec
pushf
pop
pop
shll
pop
cmp
mov
add
adc
popa
xchg
pop
mov
mov
dec
xlat
jb
pop
shrb
aam
daa
lods
je
flds
fsubrl
inc
sbb
loop
test
test
and
inc
dec
mov
std
ficoms
pop
sbb
icebp
into
adc
std
jecxz
push
pop
push
sti
roll
xchg
jl
rolb
jle
fcompl
je
dec
sbb
push
mov
pop
add
mov
das
pop
push
iret
in
jmp
and
jb,pt
fadd
mov
sbb
scas
popa
adc
or
fbld
sbb
mov
hlt
mov
in
push
je
repz
lds
pop
and
and
xchg
adc
sub
shll
fld
jmp
xor
jg
out
push
daa
sub
xor
lcall
movsb
sub
add
push
lea
pop
scas
and
add
and
stos
sub
mov
repz
pop
inc
aam
cmpsl
inc
sbb
fidivrl
sbb
cltd
das
push
sub
lods
sub
jl
mov
lock
js
jae
sti
mov
jl
dec
loopne
sub
push
add
mov
out
test
adc
adc
jg
add
sbb
into
lock
sbb
ja
mov
mov
sbb
inc
ret
repz
jl
inc
mov
mov
add
cmp
into
es
push
jp
js
sbb
je
inc
sbb
call
loope
js
in
lret
jno
out
lcall
mov
scas
sbb
mov
mov
jmp
add
pop
sub
and
add
push
mov
sbb
sbb
inc
aam
test
aas
test
dec
cli
add
inc
pop
cmp
jb
mov
and
adc
jg
xor
xchg
pop
dec
mov
adc
jbe
aad
rorb
add
mov
loope
das
sbbb
sbb
shl
push
jns
inc
test
push
xchg
ret
cmp
ja
add
jl
aas
sahf
mov
inc
out
inc
and
lret
or
sbb
scas
lret
xor
stc
push
sub
jge
fwait
inc
jns
inc
neg
je
pop
in
xchg
call
jle
jle
jp
test
cmp
fsubl
add
or
cs
jnp
inc
inc
xchg
ret
xchg
push
add
lds
dec
movsb
mov
jl
mov
ret
and
ficoml
sbb
mov
gs
mov
pop
xlat
aad
push
aaa
loopne
cmp
mov
push
dec
aas
and
cmp
push
jle
inc
or
dec
loopne
sbb
sub
mov
in
sarl
clc
sbb
int3
jecxz
in
and
flds
sbb
dec
pop
aam
push
cmp
mov
push
je
xor
xlat
imul
fxch
test
xchg
mov
push
jnp
mov
inc
push
jns
adc
pop
jmp
and
adc
rcrb
push
mov
pop
pop
sub
dec
ret
loopne
and
push
gs
bound
push
or
outsb
pusha
push
test
adc
addr16
jnp
in
rcrl
jne
out
inc
in
adc
pop
cmp
push
mov
out
loop
cmp
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
je
in
sahf
cmc
fnstsw
call
adc
xchg
pop
xchg
dec
aam
cwtl
rcr
je
mov
lea
movsb
fsubrs
loop
jb
pop
fwait
jo
pusha
repnz
icebp
cmp
mov
imul
outsl
or
pop
fwait
pusha
jp
and
dec
jo
in
dec
dec
and
dec
repz
jecxz
push
sub
fldt
jbe
mov
les
xchg
jnp
lods
jmp
mov
xchg
clc
dec
int3
xor
fs
xchg
jge
xchg
xchg
sub
lds
and
mov
cmp
jae
nop
dec
aad
out
or
jae
cmp
mov
icebp
mov
rcl
pop
test
loopne
mov
push
cmp
inc
icebp
pusha
mov
negb
daa
push
jg
mov
cmp
lods
cltd
mov
fnstsw
out
jmp
sahf
lods
and
fsts
dec
mov
add
jnp
pop
sbb
inc
aaa
jnp
movsl
jge
xor
xor
fdivrl
sbb
dec
cltd
in
and
jnp
call
lret
xor
call
push
lahf
cwtl
mov
push
jbe
cmp
inc
jge
popa
andb
test
push
and
mov
and
in
jne
adc
dec
arpl
mov
movsl
mov
sbb
xchg
add
sub
and
xchg
and
and
das
faddl
xor
sub
in
push
loop
pop
xchg
pop
fs
add
ja
fcoml
out
rcrl
repz
lods
mov
push
cmp
ds
xchg
and
nop
inc
pop
clc
movsb
sahf
pop
std
call
pop
lcall
push
sti
das
aaa
cltd
les
or
in
int
pop
cmp
ret
or
icebp
jmp
movmskps
sbb
orl
mov
mov
addr16
xor
cmp
cld
and
mov
mov
call
insb
lea
iret
aaa
in
sarb
mov
cmp
sbb
mov
xor
mov
add
gs
xchg
and
imul
popa
repnz
rcr
or
shrb
movsl
mov
in
mov
jmp
cmp
addr16
mov
push
cmpsl
adc
setl
clc
lret
mov
in
gs
adc
or
scas
insl
aam
add
xor
add
cs
icebp
dec
add
cmpsb
fcompl
jnp
fs
jle
fstpl
sbb
jge
je
mov
cmp
jbe
mov
and
fs
add
jmp
mov
sbb
mov
sti
aam
xchg
dec
and
push
sub
ss
popa
pop
int
jo
pop
xchg
mov
aam
ret
mov
pop
out
sub
movsl
add
pop
sbb
scas
or
xor
mov
push
cwtl
cld
out
xchg
inc
test
mov
loopne
nop
out
push
cmp
aas
test
xlat
sbb
int
inc
arpl
jns
sub
inc
test
mov
cmp
xlat
mov
mov
js
xchg
mov
jg
sar
popf
inc
lock
insb
xchg
cmpsb
xchg
dec
jge
push
fstps
out
fucom
sub
xorl
inc
leave
lock
mov
movsb
sbb
sbb
je
pop
sub
xchg
adc
mov
mov
xchg
frstor
or
inc
xor
and
cmp
iret
gs
xchg
fcomps
push
pushf
out
pop
sbbl
ffree
shlb
cmovns
fstpt
sub
fdivrp
xchg
xor
xor
push
repz
lock
enter
cwtl
cmp
rorl
negb
dec
icebp
jne
cmp
gs
sarl
rcll
cltd
rclb
repz
sahf
pop
hlt
xchg
sbb
cmp
adc
mov
sbb
cmp
jb
loope
cmpsb
cmp
dec
dec
movsl
add
fwait
clc
scas
xchg
sub
lahf
iret
call
popa
ret
jnp
add
repnz
inc
sahf
in
or
or
push
repz
sbb
inc
xchg
xchg
jno
test
stc
in
xchg
repz
pop
mov
mov
enter
dec
push
dec
push
arpl
dec
push
enter
insb
insb
ss
xchg
ss
out
ja
jecxz
add
int3
push
push
sbb
inc
pop
push
lea
movsb
test
test
lcall
jle
fidivrs
pushf
lea
stc
inc
add
lods
adc
pop
pop
push
loop
mov
jns
pushf
jne
divb
cli
imul
out
sar
mov
je
movb
inc
jecxz
std
mov
lret
push
cli
dec
mov
jns
sub
lahf
push
das
jne
xchg
push
sbb
sbb
js
inc
lds
mov
cmp
jb
push
scas
dec
inc
push
mov
int3
movsl
scas
stos
std
mov
repnz
xchg
cli
loop
add
mov
cmp
scas
enter
sub
mov
rol
ret
out
out
movsb
mov
mov
addr16
scas
jl
enter
jae
ja
bound
dec
sub
sbb
sahf
std
loopne
push
pop
mov
mov
sbb
push
jae
fsts
inc
mov
jae
cmp
jmp
cmp
jns
xchg
lcall
sub
in
mov
into
imul
aad
jmp
lea
push
out
les
imul
sahf
negl
mov
fxch
push
cmp
xchg
push
cltd
cmp
xor
and
jae
imul
fisttpl
lret
dec
adc
pop
adc
pusha
les
stos
insb
lods
les
sbb
add
mov
popa
std
daa
shl
icebp
idivl
ret
daa
iret
lea
push
fcmovnu
sbb
aam
test
notl
cmpsl
repz
mov
pop
jle
mov
movsl
outsb
mov
xchg
xor
fimuls
xor
test
arpl
jle
int3
push
lods
gs
push
or
and
inc
inc
push
cltd
sub
int
fistpl
call
dec
dec
dec
clc
push
add
and
sub
aam
je
inc
int
cmp
sbb
es
ret
arpl
les
in
int
and
inc
jo
dec
out
sarl
or
add
mov
xor
shll
je
stos
push
push
lods
sub
jp
add
loope
mov
jl
pop
pop
sbb
dec
scas
pop
pop
jle
fstpt
lahf
lea
ret
jo
jecxz
mov
xchg
jl
mov
cmpsl
or
dec
rclb
pop
add
in
cltd
push
lock
xlat
sbb
mov
add
cwtl
push
pushf
insb
fidivl
push
xchg
jge
enter
lock
push
push
xchg
cmp
jno
xchg
jl
mov
cmp
incl
dec
push
stc
aaa
add
lods
popf
pop
mov
cli
in
mov
fidivrs
pusha
in
mov
bound
push
xlat
or
sbb
lcall
push
mov
jne
sbb
adc
jae
fs
jns
popf
mov
xchg
mov
jg,pt
xor
jnp
fucomi
push
sbb
mov
and
into
nop
out
push
out
ljmp
test
jnp
and
sub
jge
outsl
aam
push
pop
outsl
xlat
mov
lock
pop
and
jo
je
adc
movsb
rclb
lret
mov
outsb
repz
or
push
addr16
mov
jno
jae
ja
xor
mov
or
dec
aaa
pushf
sub
jmp
mov
xor
fwait
mov
inc
movsb
cmp
sub
inc
rorl
inc
mov
mov
out
lahf
xchg
mov
fstpl
sbb
xor
cmpsb
jl
xor
rcl
aad
fwait
mov
sbbl
ds
lcall
jae
cs
repnz
mov
fisttpll
out
rcrb
xchg
fistps
and
pop
add
aam
xor
scas
mov
dec
pop
add
cmp
inc
inc
or
js
inc
and
movsl
jecxz
mov
push
mov
add
pop
out
push
mov
pop
mov
daa
mov
pop
cmp
mov
xor
pop
xor
testb
or
push
cwtl
add
push
add
pop
pop
push
mov
push
cmpl
sub
cmpsb
xor
cwtl
xor
mov
or
pushf
jle
pop
mov
clc
fwait
lock
inc
jb
jl
sub
outsb
aas
fisttps
inc
add
dec
mov
xchg
andl
and
push
pop
jg
js
pop
rcrl
loope
out
mov
je
lahf
icebp
cmp
mov
jne
pop
pusha
adc
sarl
xor
nop
mov
movsl
into
popa
jp
or
push
mov
pushf
cmp
dec
and
push
fmul
cwtl
dec
jp
xchg
inc
aaa
cmpsl
in
jns
mov
adc
mov
out
movsl
rep
mov
xchg
data16
mov
and
fucom
xor
cmpsl
inc
adc
frstor
sbb
in
pminub
or
mov
mov
fnstenv
jl
mov
mov
pusha
sub
sti
dec
fprem
cli
cmc
xor
addl
repz
mov
sbb
add
push
test
jp
scas
addr16
mov
in
mov
or
or
ret
push
outsb
fnstenv
repz
jnp
push
or
repnz
fldt
mov
mov
test
push
or
ror
js
lret
mov
sbb
mov
loopne
xchg
jb
scas
out
mov
scas
inc
mov
stos
sbb
or
mov
pop
add
lods
in
mov
mov
sarb
out
pop
int
cmp
loop
and
cmp
nop
sub
inc
ficompl
cmpb
in
xchg
adc
adc
xchg
dec
pop
mov
das
lods
adc
mov
dec
inc
repnz
jae
jne
js
mov
push
xchg
test
jae
cwtl
inc
addl
push
mov
mov
leave
jns
movsb
and
out
jg
popf
xchg
inc
icebp
insb
push
or
in
and
jnp
lahf
jmp
push
xor
ficompl
and
inc
sbb
push
pop
cmp
aad
test
dec
pop
lcall
jae
inc
pop
pop
test
mov
adc
hlt
jb,pt
sahf
mov
out
sub
dec
rcll
pop
mov
or
lret
jns
or
add
push
ja
rcll
lret
cld
inc
scas
bswap
ds
rorl
jnp
or
cmp
std
loop
sbb
mov
dec
in
and
in
sub
filds
jg
mov
cmp
cmc
mov
lods
ljmp
inc
out
xor
test
sbb
cltd
push
xor
out
subb
sub
mov
fs
call
iret
xor
xor
xor
push
sbb
loopne
lret
pop
push
or
xchg
and
cmp
fcomp
lret
sbb
add
fdivrl
mov
cmpsl
xchg
adc
or
mov
mov
pop
shlb
jl
push
cmp
fwait
dec
xchg
sarb
lock
ret
in
mov
add
loope
out
jecxz
dec
pop
out
cltd
cmpsb
aas
ret
fcoms
xor
out
mov
fs
push
pop
mov
lock
mov
or
dec
lods
inc
cmc
scas
into
popf
cmp
lods
or
sbb
fucomi
jg
xchg
adc
push
fistpl
add
inc
insb
push
sub
mov
pusha
inc
stc
insb
dec
repnz
pusha
lds
fcompl
sub
je
mov
pop
scas
sahf
js
mov
and
xchg
mov
call
jecxz
xchg
cmp
dec
and
lock
pop
cmpsl
sub
mov
inc
lret
mov
cmp
push
cmp
jl
add
fwait
push
rol
pop
pop
and
jae
shrl
ds
movsl
aam
sahf
jns
bound
dec
xchg
loopne
popf
enter
add
test
out
fisubrl
sub
sarl
cmp
mov
adc
outsl
popf
mov
inc
adc
inc
clc
pop
or
ja
shll
push
addr16
rclb
adcb
sub
or
mov
mov
push
fisubrs
popa
stc
jns
test
cmpsb
lds
repnz
sub
pop
popf
xchg
mov
daa
jae
jno
mov
dec
push
movsl
pushl
push
call
mov
and
jb
gs
push
or
loop
hlt
adc
hlt
sub
pop
stos
and
jge
and
shll
and
cld
stc
fst
cmpsb
jo
test
jae
xor
fistpl
xchg
bound
shrb
aaa
repnz
jg
push
cmpb
or
pusha
cmpsl
stc
fisubrs
out
adc
shl
inc
push
loope
push
pop
mov
daa
jle
pop
cli
jb
mov
mov
into
xchg
mov
pop
mov
leave
xchg
push
jl
xchg
mov
push
add
and
js
fiaddl
add
scas
fisttpll
imul
cmpsb
dec
ja
xchg
jno
rorb
jo
imul
mov
les
repz
sbb
jb
mov
push
inc
add
and
push
fisubrl
mov
ss
push
mov
sub
fdiv
rcrb
mov
out
enter
and
adc
out
ss
sub
inc
fst
pop
pop
rol
push
std
lods
mov
inc
xlat
pop
xor
sub
cmp
inc
adc
inc
daa
mov
push
mov
pushf
int
mov
stos
and
xor
push
in
inc
ret
aam
jecxz
push
mov
xchg
mov
jae
push
scas
cmp
mov
sarb
sbb
adc
cld
fwait
sbb
cmp
xlat
loopne
loope
cli
int3
int
mov
xchg
pop
inc
xor
int
push
dec
inc
sbb
adc
or
push
push
pop
int
pop
and
jecxz
in
arpl
push
push
mov
mov
xlat
test
rorl
push
jg
cmp
leave
in
cmp
pop
popf
xchg
mov
xchg
mov
movsb
cmpsb
test
sub
in
ret
leave
and
icebp
es
dec
lcall
insl
jp
cmp
js
and
fs
sbb
imul
xlat
mov
push
arpl
cmpsb
adc
xor
jae
enter
mov
sbbb
mov
ljmp
clc
scas
repnz
popa
arpl
popf
shll
pop
jmp
in
jp
push
sub
jg
or
mov
enter
add
adc
out
das
mov
iret
jbe
sub
test
add
pop
cmp
data16
xor
fnsave
scas
rcll
jp
mov
cmp
xchg
or
xor
daa
mov
sahf
sti
xor
mov
jge
sub
mov
inc
inc
mov
cmp
add
xchg
mov
push
nop
sbb
lret
or
mov
mov
call
and
mov
or
fucomp
sbb
adcb
mov
enter
inc
mov
inc
pop
movsl
mov
sarb
ss
adc
pushf
push
repz
or
bound
mov
sahf
cmp
push
out
idivl
jg
rorl
adc
aad
xchg
js
scas
shll
lods
xchg
loope
sbb
dec
sbb
std
cmp
jecxz
adc
mov
pushf
pop
lahf
jnp
mov
shlb
mov
xchg
ja
inc
fisttpll
mov
loop
lds
aad
xor
pop
push
mov
rorl
loopne
mov
add
data16
loop
btr
lock
xor
scas
add
bound
mov
and
jne
das
mov
outsl
testb
lea
mov
in
dec
mov
mov
dec
pop
cmc
and
lock
lcall
fwait
adc
pusha
cmpsl
push
mov
pop
scas
xchg
inc
push
mov
popf
mov
lahf
add
inc
mov
cmpsb
loope
adc
popa
xor
out
xchg
ds
inc
dec
dec
push
mov
fdivs
cmp
and
sti
insb
rclb
pop
dec
mov
pop
sub
cs
jg
imul
jo
cmp
adc
ret
scas
sti
dec
sbb
sahf
sahf
test
sbb
push
and
cmp
mov
mov
out
inc
pop
in
or
cmp
mov
out
or
popa
xchg
push
sbb
hlt
fisttpll
adc
push
imul
mov
test
cmpsl
sub
js
xchg
adcl
hlt
mov
jle
rcl
pop
out
adc
mov
test
int3
addr16
aaa
push
cmp
xchg
pop
mov
mov
imul
iret
movl
and
daa
and
ret
jecxz
ror
dec
sub
aad
mov
orl
ret
mov
mov
fcomi
add
dec
inc
stc
in
add
les
push
cmp
mov
jmp
imul
and
cmp
fwait
lcall
and
add
xchg
dec
add
repz
adc
push
inc
mov
andb
mov
push
in
out
and
daa
and
jecxz
repnz
push
xor
mov
adc
orb
mov
insb
xchg
in
push
and
ret
mov
or
mov
ljmp
sbb
call
in
daa
mov
mov
mov
push
push
loopne
test
jno
repz
adc
pop
mov
and
push
ljmp
fldenv
mov
mov
fxch
and
mov
mov
mov
in
ss
hlt
jbe
add
sysenter
fxch
mov
xor
inc
mov
sarl
fucomip
mov
push
push
or
adc
mov
repz
movsl
data16
bound
mov
dec
iret
cmp
push
cld
sub
inc
cmpsb
insb
addr16
ljmp
pop
int3
pop
pop
mov
mov
mov
es
mov
or
and
dec
push
add
xor
cmp
jns
jl
ds
ja
jno
sbb
into
int
ret
int3
hlt
mov
fnstenv
and
mov
ljmp
inc
dec
cmp
fidivrs
test
xor
int
xor
mov
add
adc
imul
dec
pushf
das
push
sbb
in
fiadds
xor
or
mov
stos
inc
sbb
aad
jbe
ss
and
ficoms
cmp
ret
mov
add
loopne
lea
imul
cwtl
test
lods
xchg
popa
js
pop
inc
out
fdivs
sub
lods
les
inc
pop
loope
mov
inc
push
dec
jmp
cltd
divb
push
mov
mov
subb
sbb
fimuls
imulb
cmp
aas
and
dec
daa
inc
or
inc
int
adc
mov
into
xchg
sub
mov
mov
jmp
mov
in
incb
call
addr16
xchg
fsubrp
mov
push
mov
mov
imul
inc
add
stc
cmp
pop
jl
test
inc
arpl
out
or
jns
cld
mov
xor
scas
movsb
in
lret
bound
roll
rcr
lahf
popf
sbbl
aad
push
jg
cmp
xchg
rcr
test
inc
xchg
stos
jge
or
test
mov
stos
cmpb
andb
xor
sub
and
mov
sub
mov
loopne
scas
adc
insl
aam
push
push
jl
movsl
jle
enter
sbb
push
fs
in
loop
jns
inc
xchg
mov
and
mov
repnz
mov
repnz
mov
in
cmpb
mov
rcrb
sar
dec
xlat
inc
and
sub
jbe
adc
ret
push
xor
daa
pusha
pop
lods
inc
fdivp
jns
mov
inc
jl
mov
mov
mov
dec
dec
mov
adc
stos
jmp
pop
jno
push
mov
jg
dec
jge
das
push
sbb
pop
mov
add
das
sub
push
stos
jo
repnz
pop
cmpsl
push
mov
inc
mov
adc
sbb
rclb
sub
jp
cs
dec
xchg
push
popf
mov
jns
inc
inc
or
xor
roll
das
insb
xlat
add
dec
cli
repnz
xchg
shll
cmp
mov
jb
add
or
xchg
aas
lcall
xor
mov
dec
imul
ss
inc
push
xor
loope
cli
ja
aaa
jp
pop
jmp
push
sub
insl
dec
das
rcrl
popf
lcall
pop
mov
and
push
and
repnz
clc
ret
icebp
das
insl
hlt
add
movsb
dec
leave
out
in
add
jmp
repnz
xchg
adc
xchg
pop
fbld
dec
iret
sub
add
xor
insl
xchg
sbb
add
xor
xchg
inc
lock
mov
mov
repnz
insl
or
daa
pop
sub
adc
mov
lret
loop
loope
push
ret
repnz
divl
and
shlb
mov
andl
cmpsl
pop
push
fdivl
mov
xlat
outsl
fwait
push
lods
inc
xor
sub
in
mov
pop
mov
mov
std
jne
lods
mov
sbb
xchg
inc
cmpsb
sub
cmc
into
sahf
cmp
mov
lock
jno
cmpl
std
int3
fidivrl
loope
jo
dec
outsb
fidivrl
sub
pop
cmp
repnz
ja
std
lahf
sbb
jmp
push
push
mov
and
or
mov
lods
shlb
testl
cwtl
and
mov
jg
pop
imul
in
sub
faddp
scas
adc
mov
mov
loop
add
mov
in
push
loopne
ret
sarl
adc
push
pusha
and
add
rcll
adc
xchg
std
out
jmp
pushf
xchg
orl
mov
data16
sub
les
mov
or
lods
mov
mov
cmp
sub
xchg
push
inc
or
and
scas
mov
push
test
lret
push
mov
adc
xchg
rorl
push
push
shrb
stos
scas
flds
test
push
jg
cltd
pushf
cmp
popf
mov
in
pop
push
scas
jl
jo
xlat
jae
add
mov
lock
jg
rcl
addl
xor
js
push
inc
cmc
lods
dec
xchg
notb
push
sub
xchg
push
or
cmp
sub
dec
dec
lahf
sub
mov
lods
push
mov
jmp
jp
adc
jp
inc
in
mov
adc
shlb
lods
lods
mov
hlt
jp
dec
test
or
leave
push
ret
adc
ss
dec
pop
sbb
popa
jno
fcomps
lea
or
fcomps
jecxz
cmc
lcall
sub
or
and
dec
inc
adc
mov
add
sbb
push
mov
jle
dec
mov
add
jmp
cmp
dec
sub
pop
sarl
mov
jmp
dec
jp
iret
arpl
arpl
mov
push
push
psllq
push
mov
jle
cltd
jp
dec
xchg
pop
pop
push
push
mov
cmp
subl
das
jmp
or
jbe
es
jb
xor
cwtl
mov
mov
dec
ret
sub
ja
lahf
test
mov
hlt
imul
jmp
dec
int
lods
shlb
xchg
movsb
hlt
pop
test
insb
popa
cmp
jg
ljmp
push
cwtl
mov
push
test
mov
icebp
ror
int3
lahf
bound
mov
test
repnz
xor
or
add
cpuid
in
xchg
repnz
inc
mov
insb
jns
dec
pop
inc
mov
gs
push
and
mov
and
inc
jle
dec
add
out
daa
repz
inc
jae
jl
loope
push
adc
mov
mov
cmc
cltd
ljmp
mov
into
mov
jnp
shll
mov
or
mov
std
movsb
pop
icebp
std
sbb
and
push
sbb
testl
ret
in
xchg
mov
imul
or
lret
mov
addl
movsl
push
pop
dec
sbb
movsb
mov
pop
sbb
ss
push
push
les
cli
stc
sub
enter
shlb
mov
nop
sub
js
pushl
bound
insl
mov
lcall
data16
call
fscale
cmp
inc
push
jns
adc
in
mov
xchg
scas
daa
insl
aaa
pop
repz
faddl
push
lods
mov
div
pop
cmpl
aad
repnz
cmc
sub
and
test
jg
xor
sti
and
fidivl
cld
mov
xchg
xor
aaa
fcmove
popf
ss
aaa
adc
into
push
iret
xchg
lds
inc
add
in
lods
inc
dec
mov
cmpsb
jbe
cltd
pop
cmp
xlat
mov
out
mov
test
test
jo
rclb
and
sti
das
and
and
daa
adc
gs
xchg
gs
loope
lcall
cmpsb
sbb
push
test
push
ss
imul
fs
pop
and
inc
std
fs
mov
sub
jle
inc
inc
popa
add
dec
mov
cltd
ja
adc
sbb
stc
es
dec
test
cmp
mov
fistpll
mov
xchg
outsw
adc
orl
inc
fdivrs
movsl
test
and
or
mov
stos
mov
fucomip
scas
clc
mov
mov
test
les
clc
jns
sysenter
aaa
sti
jno
push
fld
add
fidivl
fwait
add
mov
test
pop
mov
and
jp
jb
jo
shr
add
test
fs
cmp
cwtl
and
iret
out
pop
out
xchg
sub
movsb
loop
loop
imull
push
icebp
dec
push
mov
leave
sub
pushf
sub
pop
lahf
sahf
push
mov
jo
inc
xchg
pop
lahf
xchg
xor
btr
mov
jns
add
aaa
sbb
lret
adcb
fildl
and
xlat
pop
adc
inc
and
mov
fnstsw
inc
nop
ss
daa
sarb
adc
push
pop
and
lds
jbe
sub
lock
sub
andb
negb
jo
jp
and
push
negl
fistps
push
cmp
pop
or
add
xor
popa
or
push
jmp
sub
sbb
mov
roll
mov
shl
inc
movb
sub
fbstp
lret
dec
adc
fwait
pushf
adc
inc
jecxz
pop
adc
pop
push
mov
ljmp
test
mov
mov
sbb
mov
jle
adc
mov
lds
mov
jle
push
pop
movsl
adc
and
jecxz
rorb
push
and
in
movsl
mov
mov
sbb
cli
imul
mov
fiaddl
daa
adc
mov
push
jle
adc
les
or
mov
dec
int3
repnz
arpl
int
mov
sub
mov
adc
add
popf
cli
xchg
mov
inc
sbb
sub
popf
ret
out
pop
int
mov
cs
rolb
mov
fiadds
jecxz
arpl
push
push
fxch
pusha
roll
or
or
jl
scas
pop
imul
jbe
aad
xor
and
push
fimull
inc
ja
xchg
jle
push
mov
jnp
lret
cltd
adc
xchg
xchg
add
popa
pop
f2xm1
or
mov
sub
xchg
shll
scas
mov
add
xor
leave
insl
cmovbe
xor
push
lods
adc
jg
and
lods
fwait
in
xor
mov
mov
and
push
xchg
out
nop
aad
push
adc
pusha
or
adc
movsb
ja
leave
mov
push
mov
loope
xor
mov
aad
pop
sbb
cmc
pop
aad
in
inc
dec
xchg
jae
ficompl
cmpsb
dec
decl
fisubrs
scas
add
adc
push
xchg
mov
pop
and
mov
inc
push
adc
add
sub
mov
aam
jle
movsb
sbb
xor
out
aam
cmp
inc
out
pushf
inc
inc
rolb
push
mov
lock
cli
es
test
or
sbb
pushf
jbe
add
clc
subb
cwtl
test
sub
hlt
add
ret
adc
mov
and
and
xor
test
mov
rorl
je
movsl
ljmp
imul
cs
ja
fcmovnb
nop
xor
adc
mov
test
and
fsubrs
in
mov
rcll
repz
push
jl
xor
fnstcw
std
idivl
adc
bound
push
stc
cmpsl
roll
adc
dec
int3
imul
scas
pop
cmpsb
div
mov
out
popf
sub
in
mov
cli
stc
add
xchg
fildl
xchg
lcall
daa
or
outsl
mov
bound
pop
mov
nop
das
pop
adc
rcll
adc
ljmp
push
pop
mov
pop
mov
jne
jg
sti
ret
jo
int3
call
call
sub
pop
divb
or
jmp
stos
cli
cmc
addl
push
loopne
loop
addr16
inc
jae
jl
cmc
jmp
push
mov
test
push
mov
xchg
and
mov
cmp
clc
jmp
lahf
imul
outsb
call
adc
cmc
lods
test
sahf
jo
xor
addl
jg
insl
loop
pop
mov
xchg
fwait
lea
stc
sub
cmc
xor
jge
roll
ficoml
mov
adc
shlb
xchg
push
dec
xchg
in
mov
sti
lock
dec
negl
addl
add
arpl
mov
repz
xor
lods
movsb
sbb
rdpmc
iret
or
pop
repz
fcmovnu
jle
adcb
cmpb
fdiv
cwtl
movsb
sbb
add
mov
test
int3
xchg
movsl
pushf
stos
jne
add
test
sub
mov
sub
fwait
pop
push
inc
lods
sub
cmp
add
push
aam
inc
jnp
fucomi
lods
pop
fdiv
xor
push
out
dec
sub
add
int3
jne
ret
push
in
out
movsb
xor
popf
stc
lret
inc
insb
mov
sub
push
adc
mov
sahf
cmp
lret
mov
push
pop
int3
scas
add
call
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
lds
jnp
pushf
jnp
jg
lahf
inc
jno
popf
pop
loopne
or
fwait
jmp
cltd
adc
mov
pop
mov
rcll
out
shlb
push
rol
dec
lahf
adcl
mov
or
mov
xchg
popa
cmp
insb
inc
or
pop
rcl
cltd
sub
sbb
out
movsl
jecxz
int3
stc
cmp
sahf
sbb
fists
inc
adc
js
test
push
pop
jle
enter
int
inc
pop
cs
push
daa
out
jno
jl
orl
out
mov
or
jne
mov
inc
mov
jp
cmpsb
movsb
int3
lock
repz
pop
pop
and
mov
cs
movsl
push
mov
mov
pop
pop
lods
mov
push
call
inc
popf
and
mov
js
stc
inc
and
cmp
mov
or
mov
lods
jnp
xchg
shlb
adc
sub
lcall
hlt
pop
js
movsl
pop
jb
cli
inc
sbbb
fsubr
rcll
aas
dec
mov
jns
and
andb
push
scas
lret
aaa
mov
jge
jmp
sub
push
xchg
fdivs
mov
jmp
lods
jnp
dec
rcrl
je
pop
jb
xchg
mov
js
rclb
xor
enter
outsb
dec
les
mov
fcmovu
ficomps
mov
dec
xchg
sbbl
das
imul
inc
sbb
pop
lock
mov
sub
mov
xchg
lods
inc
int
scas
xchg
sbb
in
sbb
fbld
bound
jae
fistl
jp
jno
das
push
dec
dec
push
adc
and
cli
test
lret
mov
lock
sub
jecxz
or
bound
iret
xchg
pop
scas
outsl
mov
add
jg
ficoms
movsl
lahf
cs
cmpl
jns
subl
add
cmp
pusha
push
andl
jnp
stc
cmp
cli
in
sub
xor
jnp
inc
jbe
insl
and
aaa
jb
mov
pop
lods
or
int3
cmp
imul
fstps
faddl
xor
cmc
outsb
repz
out
adc
lds
test
out
das
xor
jnp
jg
xchg
jae
loop
sbb
dec
out
stos
push
fildll
mov
mov
jno
aad
imul
cmp
mov
ss
push
mov
sbb
out
dec
dec
xchg
pop
dec
or
dec
je
mov
fsubrs
and
mov
or
mov
jecxz
jge
add
ffreep
xor
cmp
lods
sub
fcoms
and
jp
push
dec
test
sub
dec
loop
fiadds
dec
mov
xor
js
dec
dec
jle
in
jecxz
mov
repnz
sahf
xchg
xor
mov
popf
ja
repz
add
pop
mov
inc
and
pushf
inc
stos
pop
ss
stos
stc
in
out
sahf
in
sub
loopne
lods
insb
loop
mov
neg
adc
or
xor
orl
dec
lret
outsl
adcb
ror
pop
sub
fucomip
ja
data16
notl
sti
sbbl
mov
icebp
hlt
xchg
pop
xchg
adc
ret
sbb
xchg
lods
ljmp
cmc
lret
push
ja
cs
scas
outsl
mov
cmp
mov
xchg
jg
pop
jp
test
jo
cmp
add
pop
xor
push
adc
dec
jnp
fstps
loope
aad
inc
outsb
dec
int3
icebp
sbb
or
test
into
adcb
insb
sbb
stos
sarb
jbe
mov
cwtl
jge
mov
setg
adc
mov
notb
addr16
pop
shl
or
loop
adc
out
adc
mov
jne
arpl
sub
in
inc
mov
push
jne
adcl
fldz
filds
fwait
movsl
paddsb
ret
push
or
dec
scas
fistpll
add
ja
adc
adc
cmc
int3
push
das
sub
jecxz
sbb
or
jbe
pop
test
repz
jns
sbb
outsb
sub
in
xor
xchg
sbb
mov
call
push
pop
int3
push
fwait
jmp
inc
pop
data16
vpmulhw
jb
lea
mov
push
enter
repnz
out
icebp
add
mov
fs
xchg
out
dec
pop
pop
ret
jmp
add
aam
push
inc
test
or
les
jmp
gs
fsts
aad
inc
rcrl
inc
pop
mov
pop
adc
pop
sub
loopne
inc
and
push
push
cmpsb
mov
mov
mov
mov
je
test
repz
stos
pushf
mov
xor
nop
pushf
and
mov
inc
jae
shll
cmp
jge
cmpb
call
xchg
loop
xlat
pusha
jmp
mov
scas
mov
sbb
cmc
pop
or
pop
sub
les
imul
pushw
subl
loope
cmp
dec
fisubl
sub
cmp
ss
dec
jecxz
popf
frstor
lret
fsubs
dec
addr16
rolb
and
xchg
fs
arpl
jp
loopne
xchg
leave
subb
jno
rol
mov
das
push
mov
rcrb
cmpsb
xchg
je
adc
dec
into
in
out
pop
stos
xor
push
cmpb
and
lods
fisttpll
mov
mov
repnz
sub
std
pop
in
addb
push
jbe
sub
mov
add
lds
mov
push
imul
int
or
sub
pop
jge
mov
jl
adc
idiv
dec
pop
pusha
xchg
add
mov
sub
test
cmp
jb
out
ds
in
and
scas
mov
sar
or
out
add
inc
in
aaa
cltd
leave
push
cli
imul
mov
inc
lods
fwait
lcall
xor
ret
mov
dec
clc
mov
dec
cltd
callw
stos
mov
les
fdivrs
or
fldcw
lds
lock
and
cs
dec
push
mov
out
pop
enter
push
add
xchg
ljmp
pop
sub
jns
call
inc
loope
inc
jo
fidivrl
pop
dec
adc
dec
test
pop
outsl
cld
sub
lahf
add
mov
daa
faddl
jmp
inc
in
add
mov
stos
les
add
sbb
mov
xchg
or
les
cltd
aad
pop
dec
movsb
in
or
aas
and
test
jle
jle
or
pop
loop
pop
sbb
mov
nop
leave
cmp
lret
sbb
jne
mov
sub
imulb
and
sub
insb
push
stos
sbb
jp
xchg
gs
fcoml
xchg
into
popf
arpl
mov
mov
add
cwtl
in
repz
cmpsb
xor
outsl
shrl
inc
inc
inc
push
mov
aam
and
and
int
adc
ret
dec
add
adc
push
and
sbb
push
pop
cmpsl
sub
xchg
lods
cmc
loopne
push
jecxz
mov
mov
sbb
xor
bound
aaa
xor
mov
mov
outsl
bound
push
in
sub
stos
mov
push
pop
movsb
shrl
fisubrl
cli
insl
repnz
clc
mov
repz
repz
mov
xchg
addr16
cld
les
imulb
shlb
inc
adc
mov
cmc
rolb
mov
sbb
scas
in
rorl
mov
cmp
cli
enter
cmp
cmp
fmull
scas
fcoms
pop
mov
cmp
sarl
jmp
insl
xchg
inc
popf
fmull
cmp
xor
mov
mov
push
mov
lea
xor
movb
out
fnsave
xor
pushf
ret
xor
jle
lods
inc
sub
sbb
out
fbstp
add
mov
inc
adc
adc
mov
mov
fisubrs
frstor
negb
nop
push
and
mov
jno
dec
or
cwtl
cmp
mov
lods
stos
loope
addr16
es
ja
sub
mov
xor
xchg
or
cwtl
hlt
jle
or
test
mov
insl
aam
leave
test
aad
xor
push
add
cmp
arpl
rcrb
shrb
jge
js
sbb
adc
jl
loopne
pop
xchg
sub
push
lcall
push
add
mov
xchg
push
xor
mov
fisttps
lret
cmp
mov
xor
sbb
adc
mov
into
mov
sarb
scas
mov
in
fs
mov
orb
mov
cmpsb
mov
sbb
xchg
lahf
adc
cmp
or
or
sbb
enter
jecxz
sub
or
lret
std
lods
xchg
cmc
ja
out
inc
inc
dec
fisttpl
bound
data16
xchg
fsts
jnp
add
pop
jnp
mov
fwait
das
fucomi
pusha
jg
xchg
adc
idiv
and
sahf
test
sahf
add
and
sbb
test
add
fistps
aaa
stos
imul
arpl
mov
push
ja
ret
push
mov
push
stos
test
or
fnsave
xchg
outsl
add
cmp
testb
jle
mov
lret
cmp
dec
cli
in
cmpsl
push
mov
test
icebp
push
sbb
push
add
insl
jg
enter
dec
popf
xchg
test
sub
pushf
addr16
out
fnstenv
pop
stc
ja
aaa
das
stos
enter
inc
ret
mov
pop
add
data16
push
aas
dec
mov
test
push
lods
lock
lret
fs
sbb
test
xlat
mov
lahf
js
addr16
mov
mov
les
das
or
or
jmp
and
push
imul
sub
xchg
dec
mov
mov
aad
rolb
cmp
mov
pop
and
adc
popl
mov
mov
pop
std
call
push
add
lahf
fistps
inc
xchg
jbe
test
mov
mov
xor
mov
aaa
ficomps
add
xchg
mov
call
jecxz
lods
sti
ret
pop
mov
mov
bound
rclb
mov
fwait
pushf
adc
dec
mull
sbb
roll
les
dec
icebp
dec
pop
or
sub
in
rcll
sub
nop
pusha
jbe
lahf
fists
jne
push
pop
stos
es
cmc
add
icebp
ret
roll
je
cmp
add
xorb
push
out
add
das
ret
lcall
lods
mov
pop
insb
pop
jns
xor
inc
scas
es
push
test
cwtl
ljmp
imul
andb
inc
push
push
mov
xchg
mov
jae
pop
sub
pushf
jmp
push
ds
add
fdivl
jnp
jge
out
mov
call
mov
cltd
out
lods
xchg
xchg
ficomps
sub
jns
mov
repnz
cmc
out
mov
xchg
cmpb
in
loopne
jns
dec
pop
xor
xchg
inc
xor
rorl
cmpl
rcl
in
xchg
outsb
cmpsb
int3
adc
sub
lret
pop
cmp
fcompl
testb
sub
push
mov
ja
test
inc
mov
gs
and
sahf
test
std
fcmovnbe
aam
out
or
in
mov
loopne
std
xchg
fadds
push
mov
sbb
stc
pop
jno
ret
arpl
add
mov
xchg
add
insl
in
pop
xor
mov
sarb
push
mov
jle
inc
sbb
dec
dec
out
pop
int
push
enter
enter
cmp
inc
pop
pop
xor
jle
fs
adc
cmpsb
pop
imul
inc
add
mov
mov
out
test
cmp
jb
adc
jp
repnz
jb
mov
imul
add
fidivl
rcll
and
stos
jl
jns
lods
movsb
ljmp
stc
inc
add
adc
mov
xchg
cmpsb
inc
inc
leave
nop
ret
les
dec
sbbb
jmp
dec
shl
dec
iret
dec
imulb
or
flds
push
cs
stos
lcall
xchg
arpl
fcomi
sub
dec
aad
std
mov
adc
mov
add
jne
stos
fsubrl
inc
arpl
test
xor
scas
jg
test
cmp
push
in
mov
icebp
mov
je
push
jge
out
fs
call
dec
out
sahf
dec
jno
pop
mov
pop
cmpl
das
mov
test
imull
xchg
lret
pop
icebp
xchg
push
in
push
and
movsb
out
xchg
scas
sbb
adcl
or
enter
or
ret
ss
push
jne
xor
sbb
ret
add
lahf
push
out
sbb
aaa
test
push
push
or
and
imul
imul
pop
scas
dec
daa
mov
xchg
orb
adc
adc
push
movsb
sbb
xchg
mov
insb
aaa
sub
or
insl
xchg
push
mov
mov
divl
pushf
loop
jbe
es
in
js
mov
dec
orl
pop
lods
daa
xchg
adc
mov
jae
cli
loopne
int
ja
arpl
adc
cmp
ror
inc
fidivrl
xchg
clc
adc
push
pop
or
xor
push
pushf
mov
xchg
and
jo
mov
mov
int
inc
daa
sub
lret
lea
and
gs
xchg
mov
xor
inc
sub
cmpsb
fisubrs
cmp
jne
sbb
gs
les
jl
xchg
jnp
pop
ja
xchg
pop
or
test
and
pop
push
imul
push
xchg
mov
jbe
movsl
jb
cmp
inc
mov
imul
pop
inc
iret
scas
fwait
jle
cmp
jmp
cmpsb
fistps
xchg
xor
insb
gs
stos
nopl
iret
jg
dec
sub
stos
icebp
mov
xlat
cmc
and
in
mov
inc
jno
and
jo
sti
mov
push
scas
shrb
sahf
pop
popa
dec
lds
test
jle
in
jle
out
xor
mov
fistl
es
cmp
dec
mov
dec
mov
nop
sbb
jecxz
mov
dec
gs
ret
push
std
imul
sbb
insl
fcmovnb
and
push
stos
lret
pop
and
addr16
mov
pop
cltd
or
mov
lock
dec
mov
cmp
mov
js
enter
fsubl
jns
sarb
mov
dec
out
out
adc
sub
mov
int3
sbb
cld
mov
out
adc
out
js
inc
loopne
and
jne
and
cmc
insb
mov
andl
push
add
test
mov
je
or
fbld
or
jmp
shlb
loopne
movsl
pop
lea
mov
cmp
arpl
mov
push
out
popa
pop
dec
ret
jno
pop
cltd
sti
jno
lods
adc
test
xchg
fmuls
mov
aas
jno
mov
add
fnstcw
push
bound
or
sub
fisubrl
test
cltd
mov
inc
cmpsl
test
adc
mov
mov
add
fstl
fnstenv
loop
repnz
negb
imul
cltd
xor
sbb
jnp
pusha
xchg
mov
test
insb
and
loopne
mov
mov
cmpb
repnz
mov
lods
jbe
fsubrl
cmpl
scas
pop
sbb
repnz
dec
arpl
test
loope
or
push
int3
out
jbe
dec
cmp
shl
test
fadds
pop
add
cli
movsb
xchg
inc
sub
lahf
cmpsl
pop
adc
pop
pushf
inc
jle
or
xchg
dec
out
es
inc
arpl
cmp
je
imul
out
ret
fcmovnbe
stc
mov
stc
dec
clc
mov
bound
sbb
cmpsb
jbe
push
outsl
sub
ds
test
sahf
push
jbe
pop
out
jo
addb
add
lds
lods
jo
aad
or
add
jge
fidivl
xor
or
stc
sbb
adc
mov
into
enter
out
pop
icebp
xchg
add
dec
mov
insb
dec
push
jae
push
scas
add
sbb
cs
xchg
or
ja
adc
adc
jmp
or
jo
mov
addr16
and
add
xor
adc
stc
ljmp
mov
testb
xchg
in
mov
sbb
cmc
imul
mov
out
xchg
outsl
push
movsb
xor
dec
inc
jno
nop
aas
jle
hlt
jno
and
cwtl
dec
jbe
mov
or
fistl
adc
inc
jl
push
loope
cmp
or
sub
into
sub
scas
aam
cmp
cwtl
subb
movsl
movsl
jp
imul
in
ja
push
and
sbb
xlat
insl
shll
mov
cmc
pop
fistl
mov
push
es
and
sahf
bound
cmpsl
jmp
mov
or
and
xor
adc
push
test
lret
sub
push
mull
shrl
ss
sub
lcall
mov
mov
imul
xlat
rol
dec
mov
mov
xor
jno
movsl
lcall
dec
clc
xchg
test
dec
adc
dec
pusha
jnp
pop
outsb
push
pop
sub
xchg
xchg
std
jecxz
fidivl
push
ljmp
fs
mov
push
sbb
xlat
xor
jbe
fsubs
scas
push
sub
jmp
call
mov
cmpsl
push
or
jo
jg
jae
add
lahf
dec
push
ret
nop
shll
mov
leave
hlt
shll
jns
ds
shlb
arpl
std
pop
fisubrl
les
in
mov
fwait
scas
push
js
jle
jecxz
cmc
cmp
ljmp
cld
in
js
into
or
lret
dec
js
jo
pusha
mov
call
mov
les
and
add
jne
jne
mov
lods
lcall
lods
lods
and
aaa
inc
mov
test
xor
hlt
movsl
push
pushf
pop
aad
in
inc
mov
cmp
lahf
sahf
pop
mov
out
test
rcr
arpl
push
and
mov
xor
in
mov
lcall
dec
add
sub
lahf
mov
jno
stos
and
lcall
mov
lods
pop
movsb
fistpl
insl
push
xor
jbe
orl
js
rcl
pop
and
xchg
jae
loope
das
adc
mov
push
add
mov
jo
mov
shll
cmp
cmp
xor
outsb
xorb
pop
cmp
dec
xchg
dec
mov
and
or
add
cmpsb
jb
push
jns
nop
and
pop
push
scas
sbb
insb
lahf
iret
mov
int3
sub
sti
movsl
cmp
and
mov
xchg
push
jge
adc
movsl
cwtl
push
outsb
push
jmp
pop
push
push
outsb
mov
mov
mov
out
testl
xchg
mov
mov
pop
neg
mov
lcall
xor
jne
into
jmp
rclb
dec
push
lods
in
sbb
mov
hlt
popa
push
insl
jae
divl
jno
dec
lcall
jg
in
pop
nop
or
ret
or
rorb
dec
imul
outsl
xor
int3
inc
lret
in
rol
addb
mov
push
xor
inc
popf
dec
adc
enter
inc
dec
sub
iret
adc
pop
push
sub
andb
hlt
dec
xor
or
hlt
jb
adc
or
aaa
dec
outsl
adcb
inc
movsb
mov
and
lahf
cmp
jge
mov
in
mov
js
hlt
loope
out
imul
mov
sahf
das
in
lods
in
adc
fisttpll
std
aad
fbld
aaa
rcll
inc
add
sub
out
js
jne
imul
add
dec
cmpsb
pop
and
push
mov
sbb
lods
movsb
mov
or
ljmp
repnz
decb
mov
pop
lret
xlat
mov
outsl
orb
mov
sbb
shlb
cmp
fstl
aam
push
pop
sahf
and
nop
cwtl
or
arpl
sub
pop
fistps
stos
nop
movsb
inc
movsl
dec
sub
push
out
call
lock
addr16
hlt
popa
mov
cmp
mov
enter
loope
push
dec
push
lock
iret
dec
pop
pushf
push
aaa
aas
leave
test
test
mov
cmpsl
mov
xchg
xchg
sbb
adc
outsb
xor
inc
mov
pop
sbb
js
fisttps
sub
sub
arpl
cmp
xchg
jmp
xor
imul
sub
inc
adc
out
sub
lds
fisttpll
xchg
cmp
jp
loope
xchg
jmp
lahf
mov
xchg
ds
xchg
std
lahf
js
in
cld
hlt
sbb
fildl
test
push
clc
fisubl
and
popa
ret
xor
pop
pop
xchg
rcrb
sbb
push
mov
and
inc
lret
jns
lcall
sahf
loop
inc
pop
popa
ss
pop
int
mov
insl
out
sbb
icebp
lods
loopne
jo
loope
and
xchg
xchg
stos
push
xchg
jns
in
push
rcrb
lret
cmp
shll
out
xchg
cli
inc
inc
inc
mov
movsb
out
and
popf
enter
jne
bound
jnp
jle
inc
push
dec
shl
add
repnz
pop
lret
xchg
stos
inc
cltd
out
sub
mov
adc
inc
sbb
fwait
dec
inc
movsb
rcrl
dec
jbe
and
pop
stc
cmpsl
cmpsb
bound
das
stos
xor
dec
gs
les
mov
jp
loop
lods
add
sbb
or
shl
push
and
std
and
xchg
test
add
adc
push
xor
sub
push
cltd
lahf
subl
pop
pop
mov
xchg
les
sti
mov
cltd
mov
pop
and
jno
or
cmp
and
mov
adc
pop
add
lret
dec
jno
rcl
sbbl
xchg
mov
jbe
testl
stc
sahf
jmp
out
loop
inc
imul
jl
ja
in
aas
fisttps
and
arpl
dec
inc
push
test
lods
jecxz
faddl
mov
in
mov
xor
or
inc
out
imul
mov
dec
pop
push
sbb
pop
cs
ret
push
add
loope
fs
add
or
lahf
popl
es
adc
jb
adc
mov
sub
daa
mov
neg
lods
mov
push
test
mov
xchg
stos
int3
je
xlat
ret
insb
call
push
push
cs
lcall
sbb
shrl
jg
sub
aaa
test
filds
push
jge
xchg
pop
pop
pop
repz
test
stos
sbb
lods
int3
xchg
sub
pop
adc
sbb
xor
loope
out
jo
adc
mov
shl
mov
dec
jae
or
sub
cmpsb
stc
add
mov
mov
mov
cmpsl
jae
and
adc
push
push
scas
mov
inc
pushf
or
cmp
mov
iret
xchg
sub
sahf
adc
jl
adc
stc
jg
out
stos
test
jb
call
mov
inc
shl
out
jno
cmp
test
cmp
pop
pop
imul
mov
scas
movb
mov
inc
mov
fadd
mov
je
loope
fistl
xor
xchg
cs
pop
js
mov
in
aaa
sbb
jl
test
lods
pop
shlb
cmc
lea
or
js
and
sbbb
ds
pop
add
je
fimull
ja
shrl
andl
out
in
mulb
push
or
sahf
pop
je
arpl
jge
ljmp
out
xor
lahf
popa
push
shrl
es
mov
cmp
frstor
dec
data16
xchg
push
or
sti
subb
fwait
and
mov
xchg
or
repz
sbb
sbb
jmp
dec
pop
xchg
xchg
jmp
lret
notb
insl
push
js
dec
fists
mov
jg
mov
mov
inc
loopne
aaa
mov
push
psubsb
xor
orb
into
test
xlat
xor
out
loopne
sti
add
daa
xor
xor
add
aam
scas
xlat
pop
cld
iret
add
mov
jecxz
aad
into
std
sbb
cmpsb
xchg
pop
adc
or
mov
adc
lret
xchg
mov
mov
rcll
add
mov
mov
sub
lret
inc
ffree
dec
mov
negb
jns
pusha
shll
repnz
pop
pop
jge
rcr
mov
push
xchg
out
dec
pop
push
push
mov
mov
push
inc
ficoml
xchg
xchg
orb
mov
hlt
dec
mov
fidivrs
mov
popa
fistps
sbb
fwait
fs
push
addb
iret
movsb
adc
dec
test
mov
or
xchg
out
push
and
popf
jge
stos
mov
xor
cmp
es
int
in
jmp
outsl
or
jae
ret
xlat
cmp
or
inc
jge
dec
jnp
add
mov
xor
loopne
sbb
jmp
movsb
fisubrl
dec
rcr
scas
and
cmc
cmpsl
icebp
ja
adc
jl
daa
adc
orl
jp
pop
cltd
inc
fsubr
push
and
jp
aad
mov
mov
les
sub
insb
jg
xchg
xchg
sub
add
adc
fcmovnu
add
dec
add
add
mov
in
and
push
mov
in
dec
lods
mov
mov
jp
add
cmp
add
cld
xchg
in
leave
out
mov
nop
mov
and
jmp
idivl
in
cmpsl
loopne
mov
add
int
pop
inc
arpl
push
lods
pop
popf
add
sbbl
mov
lea
inc
pop
les
shrb
sbb
lods
dec
add
in
daa
stc
cmp
add
pop
cmp
xchg
in
pop
or
mov
inc
movsb
xchg
add
data16
xchg
mov
jle
sub
das
cli
and
testl
jp
add
pop
sub
push
xchg
fwait
sti
and
xor
pop
fwait
ja
rolb
aad
sub
scas
push
out
stos
idiv
fs
dec
push
xchg
das
mov
lods
mov
inc
data16
in
adc
loop
pop
popl
scas
into
leave
mov
nop
mov
lock
pop
fisttpl
dec
or
bnd
push
mov
dec
jno
adc
lods
sbb
insb
xchg
nop
je
out
sbb
sub
ror
bound
outsb
mov
das
inc
pop
lret
adc
mov
jmp
xor
jnp
mov
int
mov
stos
xchg
dec
sbbb
sti
mov
scas
movb
int
popf
adc
sbb
scas
xchg
aas
sti
sbb
aas
mov
mov
push
xchg
mov
std
jae
scas
sbb
jp
cld
sbb
dec
push
call
xchg
test
xchg
popa
push
fwait
outsl
lods
cmp
stos
push
pop
mov
xor
push
jge
sub
inc
lea
dec
and
pop
insb
mov
divl
outsb
ds
cmp
mov
mov
ljmp
fucomp
mov
or
add
loop
adc
jne
inc
shl
or
lret
or
mov
popa
jp
scas
nop
jp
stc
int
jb
or
jle
loope
mov
ret
cltd
imul
xor
das
addr16
aaa
test
jmp
cmpsb
cli
in
push
gs
scas
fnsave
mov
mov
pop
or
leave
pop
daa
repnz
jbe
sub
xor
sbb
cmp
in
subl
cmp
jp
or
ja
out
mov
add
or
cwtl
hlt
mov
pop
scas
xchg
dec
lret
test
or
jb
push
and
push
iret
add
mov
cmpsl
cmc
cmpl
dec
push
adc
xlat
cmpsl
cltd
std
fstl
hlt
mov
popa
mov
sbb
ror
pop
fldcw
mov
ss
inc
mov
cltd
mov
sub
add
lret
loop
out
idivl
sbb
cld
popa
scas
repz
clc
leave
jg
sbb
xor
xchg
cmp
data16
dec
push
pop
or
fsubl
repnz
xor
pusha
jg
and
mov
jne
jmp
jne
aad
mov
filds
inc
lahf
cmpsb
push
xchg
mov
popf
push
stc
test
adc
xor
cmp
add
dec
sub
push
mov
or
pop
lds
cld
repz
icebp
fdivrp
mov
stos
mov
out
in
test
scas
aaa
js
add
pop
in
dec
or
pop
out
dec
mov
test
xchg
mov
inc
arpl
pop
xchg
or
cmpsl
xchg
repz
lret
scas
loopne
shr
xchg
adc
out
fldt
xchg
leave
inc
dec
aad
jae
adc
rcrl
xchg
mov
sub
push
push
js
enter
mov
pop
jg
dec
fscale
add
cmpl
or
cmpsb
mov
inc
cmp
test
out
ljmp
push
outsl
push
cmp
jg
sub
lock
add
out
rcl
lcall
ljmp
popf
test
rclb
sbb
frstor
lcall
or
int
cs
pop
push
mov
pop
pusha
push
movsb
scas
lret
xor
and
in
lods
hlt
jge
and
jecxz
mov
jns
cli
mov
loopne
push
xor
outsl
mov
xor
jns
xchg
inc
jo
in
std
mov
aad
test
call
dec
dec
jne
cmpb
enter
pop
xchg
divl
fstpt
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
clc
push
sahf
dec
xor
dec
mov
mov
out
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
