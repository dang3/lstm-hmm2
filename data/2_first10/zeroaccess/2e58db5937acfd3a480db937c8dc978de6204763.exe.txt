push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
dec
or
and
jl
pop
jl
adc
and
popa
pusha
jae
insb
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
xor
xchg
fmuls
mov
sbb
ret
imul
pop
in
roll
mov
jmp
and
xor
cs
out
cmp
sbb
fs
lods
xor
mov
pop
jnp
enter
add
push
or
int
aad
adc
loop
and
sub
je
pushf
bound
in
loope
jmp
std
xchg
int3
stc
je
pop
iret
push
cmp
enter
dec
dec
out
imul
inc
mov
dec
subb
aaa
cmpsl
push
andl
mov
sub
dec
std
lret
push
jnp
dec
lea
pop
pop
aas
scas
cmpl
ljmp
arpl
cmp
rorb
xlat
daa
and
aam
out
pop
xor
cwtl
repz
lods
pop
xchg
popa
int3
mov
pushf
dec
jne
push
pop
gs
shlb
xchg
and
sar
lcall
data16
sub
pop
flds
sub
xor
and
mov
lds
fs
pop
pop
into
jns
mov
call
popf
outsl
mov
pop
jmp
mov
ja
data16
and
repnz
sub
mov
sbb
pushf
jbe
test
leave
mov
dec
jb
lods
test
into
insb
sbb
movsl
inc
test
adc
sahf
je
mov
lret
mov
leave
ja
mov
lock
or
jb
mov
sub
cmc
jg
cmp
sarl
notl
movsl
jb
sub
xor
mov
bound
dec
or
jp
jg
dec
sbb
mov
sbb
paddusw
xsaves
ja
popa
popf
ss
sbb
and
and
mov
subl
inc
inc
movsl
xchg
jl
jns
mov
cmp
jns
in
clc
sbb
mov
mov
std
data16
cmc
fwait
mov
sub
lock
inc
sbb
sbb
cvtdq2ps
icebp
sub
and
mov
dec
mov
gs
or
sub
cmp
adc
outsl
or
dec
decl
mov
add
aas
fdivrs
xchg
mov
sub
adc
mov
fstpt
notb
and
mov
or
cmp
daa
scas
adcl
jne
sbb
jg
das
xchg
fnsave
movsb
arpl
cmc
jae
push
mov
jp
jg
xchg
or
pavgw
or
xor
or
mov
jnp
pusha
push
lods
clc
adc
and
inc
or
negl
je
insb
inc
cmpsl
adc
mov
and
sub
dec
jne
jmp
loope
xor
lahf
and
mov
sar
clc
dec
sbb
int3
inc
xchg
sbb
mov
inc
loopne
loop
cltd
mov
sarb
in
push
shlb
mov
jno
and
pop
xor
mov
pop
insl
pop
lods
and
mov
pop
sbb
es
inc
aaa
pop
es
sub
sub
bnd
outsl
arpl
sub
adc
or
call
push
aas
lods
push
push
bound
ret
jge
xchg
bound
test
inc
mov
cli
rcl
mov
outsb
push
das
scas
fdivrl
or
mov
les
mov
rcrb
xchg
adc
icebp
or
in
dec
ljmp
rorl
add
es
mov
cltd
adc
imul
inc
or
add
mov
call
rcl
fmuls
pop
imul
lods
popf
xor
jg
xor
fbld
sub
cmpsb
test
cmp
cmp
add
fwait
mov
mov
inc
jmp
aas
xchg
pop
push
cld
mov
pop
out
mov
sub
data16
les
inc
out
xor
lods
out
dec
inc
or
ret
lea
mov
sbb
imulb
xchg
gs
std
xchg
dec
repnz
mov
xlat
or
lcall
daa
or
push
dec
fidivs
inc
movsl
ljmp
sub
push
mov
mov
lea
mov
inc
mov
fldz
shl
data16
push
sub
push
push
ss
jp
cmpl
enter
in
inc
xchg
jb
add
std
xlat
aas
sbb
aam
adc
pop
popa
fldcw
std
pop
sbb
mov
mov
adc
ret
std
sub
cmpsl
mov
mov
cmpl
adc
aad
dec
cli
pushl
les
inc
cwtl
fistpl
or
jl
roll
adc
inc
xor
xor
add
xchg
mov
stos
out
inc
adc
adc
pushf
outsl
and
mov
inc
and
sub
push
dec
sti
dec
xchg
cmpsb
xchg
inc
lock
call
xor
dec
pop
outsl
pop
rorl
pop
pop
inc
cltd
aam
and
stos
outsl
xor
pusha
lds
popf
jo
or
inc
insb
mov
ja
add
sub
ljmp
cmp
dec
sbb
mov
mov
mov
icebp
fbstp
push
rorl
inc
xor
push
and
or
push
dec
jmp
stc
out
add
mov
inc
sub
or
add
cmpsb
movsl
jp
cmc
stos
dec
mov
mov
pop
or
mov
mov
addr16
movsl
iret
pop
add
rclw
sahf
enter
and
add
xor
outsb
cmp
movsl
pop
popa
je
and
dec
dec
mov
shll
data16
or
clc
cmpsb
lret
cmp
sti
iret
dec
ffree
sbb
inc
and
popa
dec
ds
xor
xchg
xchg
ret
and
scas
cmp
mov
inc
out
adc
lret
add
fs
jne
bound
inc
and
repnz
inc
and
roll
sbb
out
mov
mov
pop
mov
jns
xor
lcall
lret
cmp
cld
mov
lcall
lret
hlt
sahf
lcall
icebp
inc
repz
cli
ret
and
inc
dec
stos
mov
jbe
pop
aas
repz
cld
iret
xor
adc
pop
mov
dec
ljmp
xchg
notb
pop
adc
je
xchg
js
popa
mov
adc
test
add
cld
in
mov
lret
mov
mov
or
cwtl
and
pop
shlb
fisubrl
arpl
fnstcw
sbb
sub
cli
or
pop
and
frstor
loopne
add
cs
cmp
outsb
xor
addr16
out
xchg
hlt
push
outsb
mov
sub
jns
daa
cmp
rcll
insl
adc
imul
cmpsl
xor
adc
aad
mov
sub
lcall
mov
jbe
fsts
jb
jb
mov
insb
xchg
adc
cmp
stos
xchg
push
sahf
jg
xor
stos
and
push
push
dec
pushf
aad
jl
not
sarl
inc
sbb
sub
fs
pop
fdiv
outsb
test
lret
xor
mov
mov
inc
push
lahf
scas
sub
mov
sti
xor
fadds
sti
je
movsl
movsl
stos
mov
push
jae
or
aad
repnz
int3
lret
and
push
push
jb
mov
pop
cmp
popf
fisubrs
lahf
adc
inc
or
jmp
call
jbe
mov
insb
out
jle
hlt
dec
lcall
arpl
sbb
cltd
inc
mov
jl
and
mov
xchg
lret
xchg
int3
je
adc
sbb
add
xchg
xchg
into
sbb
xor
test
xchg
xor
fldt
out
mov
add
push
cld
mov
xor
mov
jg
dec
iret
mov
daa
sbb
aas
jl
push
js
ds
lahf
mov
xorb
dec
int
inc
call
cs
lret
outsb
je
fdivl
jmp
dec
lds
cmp
adc
mull
scas
ja
mov
push
push
pop
mov
mov
sub
adc
or
cltd
subb
adc
or
pop
cmp
xchg
out
push
das
or
jmp
xchg
movsb
test
js
mov
adc
sbb
cmc
cwtl
xchg
bnd
sbb
or
ljmp
scas
loop
xor
data16
pop
bound
mov
jg
push
std
movsb
mov
pop
imul
idivb
adc
shll
iret
pop
mov
fisttpl
stos
gs
sbb
xor
pop
jne
mov
xchg
jb
int
insb
and
in
jl
mov
xorl
fwait
outsl
add
shlb
add
inc
cmpsl
ljmp
push
xchg
decl
inc
xchg
je
dec
ss
or
inc
adc
mov
push
sub
cmp
lret
sub
imul
mov
push
pop
push
sub
mov
inc
jbe
xchg
jl
add
xor
push
aad
cmpl
pusha
jmp
insb
inc
dec
xor
testb
in
mov
mov
mov
mov
movsl
inc
cmp
repnz
pop
aad
je
add
xchg
jne
lret
aad
aad
xor
or
out
mov
pushf
xchg
jnp
sahf
lea
dec
push
xor
add
mov
jle
ljmp
jecxz
jle
test
or
fdiv
std
scas
cmpb
pop
jbe
es
arpl
jl
cmp
loopne
mov
jp
cwtl
dec
addr16
daa
and
out
repz
jbe
mov
mov
push
sub
std
add
jne
stos
pusha
sub
cmp
cmp
int3
stc
lds
lahf
push
clc
adc
add
out
movsb
int3
hlt
loope
fadd
loop
jle
cmpl
lahf
push
xor
pop
js
iret
nop
lcall
lcall
push
dec
ret
and
ds
xlat
stc
shrb
xchg
pushaw
loopne
mov
in
or
ret
dec
xor
test
push
ds
xchg
and
jns
leave
leave
fstps
mov
jp
jo
bnd
or
inc
jmp
fmul
mov
dec
jo
hlt
pop
xchg
jo
nop
mov
sbb
movb
pop
imul
leave
orb
mov
les
rcl
lret
das
shll
pop
shll
mov
sbb
in
das
push
sbb
fs
bound
inc
jmp
inc
ja
dec
gs
and
sahf
inc
aam
sub
nop
sbbl
rolb
test
xorl
cmp
mov
mov
ret
ja
mov
cmpsl
in
nop
lods
push
add
xor
sbb
test
clc
jne
push
xchg
incl
mov
cmp
test
aam
pop
mov
pop
ljmp
insl
mov
inc
loope
stc
sub
adc
push
mov
aad
lods
das
push
vandps
push
sub
testl
std
mov
pop
xor
out
sarb
push
jnp
push
xchg
mov
std
popa
xor
pop
mov
pop
push
test
out
sbb
mov
pop
sarl
add
insb
adc
dec
arpl
imul
and
outsb
mov
jnp
cmp
shrb
sbb
sbb
lods
adc
fstpl
lods
sbb
jl
hlt
xchg
cmpsb
sbb
dec
jne
dec
arpl
pop
dec
fisubl
cmp
pop
mov
and
xor
test
iret
or
jge
push
cmp
pavgb
sub
jb
adc
mov
jno
sti
jne
call
sti
xor
sub
shlb
mov
lcall
sub
jp
push
int
lcall
dec
test
or
cltd
push
je
push
sub
adc
and
pop
push
movl
fdivrl
repz
mov
mov
mov
sbb
mov
xchg
xchg
cwtl
dec
incb
push
std
inc
inc
xor
mov
jno
aam
inc
adc
xchg
cld
pop
sbb
clc
adc
inc
scas
push
xor
pop
xor
push
jge
fldt
nop
cmpsl
outsb
insb
lret
aaa
pop
jns
addr16
pop
mov
push
cmp
sbb
adc
lods
movsb
sub
jge
leave
xor
jle
in
jecxz
into
dec
into
cmp
mov
inc
addr16
cpuid
popa
ds
inc
dec
or
dec
mov
mov
movsb
into
mov
into
xor
push
and
sbb
dec
int3
les
sub
idivb
push
sahf
call
addr16
xchg
sbb
adc
push
jae
shrl
aaa
popa
pop
mov
pop
xor
mov
sbb
mov
scas
aam
pop
lea
mov
repnz
jp
lods
push
std
int
sub
pop
and
les
mov
sub
add
sub
rcll
push
ds
enter
sbbl
outsl
xor
enter
aam
mov
adc
mov
and
inc
test
sub
jo
insb
iret
mov
push
cmpsl
dec
mov
addl
push
in
cli
jnp
loope
out
daa
sbb
lcall
lret
stos
repz
mov
push
xor
mov
cmpsb
stc
orl
and
sbb
or
filds
xchg
sti
push
je
fs
add
leave
insl
push
add
iret
ja
pop
lds
mov
gs
nop
test
cmc
xor
push
xchg
bound
ret
and
aaa
jae
mov
mov
add
cmp
mov
cmc
fstl
xchg
mov
inc
or
or
push
xor
mov
jbe
aas
xchg
cltd
or
sub
push
test
mov
ss
mov
sbb
jno
jecxz
std
inc
fiadds
xchg
jbe
leave
data16
cltd
push
outsb
mov
sbb
or
xchg
sub
inc
dec
push
out
dec
in
les
cmp
stos
dec
rcll
mov
inc
cmp
xor
enter
cmp
pushf
fcmovnu
in
add
in
or
loopne
xchg
adc
sub
dec
jne
adc
xchg
mov
mov
adc
inc
jns
ret
les
lret
pushf
add
push
inc
ja
cmc
xor
psllq
push
inc
nop
arpl
and
outsb
push
xchg
fcoms
mov
js
rcrb
jb
les
out
fisttpll
loope
push
jnp
pop
fsts
fdiv
cmpsl
scas
sbb
jecxz
xor
out
inc
mov
sti
lret
adc
sti
mov
adc
leave
enter
cli
push
pop
mov
scas
adc
movsb
int
adc
movsb
cmp
shrl
cmp
iret
sub
and
scas
lss
imul
pop
imul
lods
pop
out
mov
scas
mov
test
std
push
mov
inc
lcall
movsb
fildll
repnz
pop
push
xchg
sbb
inc
sbb
je
mov
dec
mov
ja
into
pop
cwtl
in
notb
and
xor
xchg
outsb
or
mov
dec
lods
repnz
jae
lds
movsl
adc
ret
aad
xchg
mov
xchg
push
fmulp
cmp
jg
int
jmp
mov
insb
xchg
and
cwtl
icebp
test
std
mulb
jno
jne,pt
mov
mov
and
daa
out
insl
mov
enter
dec
retw
or
shll
jae
cwtl
stc
sbb
es
xor
cld
sbb
in
mov
stc
popf
cmp
jns
dec
cs
mov
test
aad
dec
or
into
aad
int3
pop
jae
jno
test
or
in
inc
ljmp
xor
int3
mov
mov
adc
xchg
and
movb
in
or
in
fmull
inc
aam
sahf
gs
mov
pop
lock
and
lea
pop
xchg
xor
inc
pop
xchg
xchg
aam
sti
lods
jl
mov
pop
jp
adc
test
rcrb
fsubr
je
sbb
push
hlt
in
movl
xlat
mov
int
hlt
les
pop
xor
xor
clc
mov
es
out
dec
xlat
test
mov
loope
dec
iret
push
cmp
hlt
or
cmp
jbe
and
mov
or
mov
sbb
xorl
add
add
dec
inc
mov
icebp
inc
je
adc
rorl
jnp
inc
stc
dec
pop
xchg
mov
insb
mov
cmp
movsb
pop
mov
push
add
sar
shlb
mov
lcall
add
xor
mov
pushf
sbb
cmc
xchg
mov
les
ljmp
jnp
ds
push
notb
adc
xor
movsb
out
fucomip
sbb
pushf
jmp
out
and
cmp
xor
sbb
jbe
test
or
push
test
mov
sbbb
loopne
mov
fstl
sub
dec
jg
mov
or
lret
push
imul
cltd
ror
mov
in
shrl
and
cwtl
cmp
imul
dec
repnz
fs
xor
in
mov
cld
mov
mov
mov
cltd
xchg
mov
xchg
inc
in
jns
lods
outsl
mov
jl
add
ds
xchg
daa
mov
pop
xlat
in
xor
adc
dec
mov
fimuls
adc
stos
add
loope
les
test
hlt
jb
add
push
fs
movsb
daa
loopne,pn
add
sub
movsl
mov
fnstsw
pop
test
push
pop
xor
fisubrl
fcomps
push
push
push
mov
xor
lcall
data16
dec
xchg
lret
outsb
cmp
test
pop
push
push
movsl
sbb
out
pusha
sub
dec
aas
daa
and
mov
jno
push
aaa
addr16
pop
fcompl
xchg
je
or
insl
inc
and
sahf
das
inc
fisttpll
jno
or
dec
adc
ficompl
adc
aas
movsb
jl
jns
mov
dec
rclb
mov
xor
ss
mov
repnz
loope
cmp
push
xchg
aaa
mov
sub
arpl
roll
or
pop
test
gs
xor
pushf
lods
push
and
xchg
imul
adc
fcompl
nop
xor
xor
dec
imul
mov
movsl
mulb
cwtl
mov
lahf
dec
adc
sbbl
in
mov
sub
in
pop
ja
jle
pop
sarb
pop
in
xor
and
mov
cmp
ja
ret
sbb
test
cld
mov
and
fsubrs
lds
iret
add
mov
and
adc
jmp
adc
mov
fldl
pushfw
mov
or
daa
out
jno
jns
mov
out
xchg
sahf
movsl
fs
insl
jne
icebp
push
imul
mov
sbb
sub
xor
out
pop
mul
dec
jg
gs
and
addr16
orl
pushf
mov
roll
cld
lret
mov
stos
dec
fwait
pop
jp
push
sub
cmp
test
imull
ret
sbb
mov
mov
fdivrs
aad
cmpsl
ss
call
sbb
adc
cltd
cli
shll
outsl
test
addr16
mov
das
sbb
sbb
cmpsb
cli
leave
xorl
and
push
push
inc
mov
jmp
repz
jmp
xchg
inc
aaa
jmp
ds
scas
dec
ret
sbb
push
in
pop
lret
pop
cmc
adcb
mov
jl
dec
and
movsb
sub
fs
jns
xor
das
scas
xor
mov
mov
or
xor
xchg
dec
ja
dec
xor
arpl
and
pop
cmp
test
lods
mov
push
or
jecxz
add
add
adc
jecxz
lcall
inc
pop
push
outsb
inc
int3
test
mov
jae
sbbb
leave
fsubr
aad
repnz
xor
popa
sbb
and
jecxz
push
mov
jge
pop
xchg
mov
jbe
or
scas
enter
jmp
mov
xor
int3
movsb
pop
push
fcoml
jno
flds
rcrl
or
out
mov
rol
mov
lcall
int
icebp
xchg
jecxz
stos
call
mov
push
jnp
and
out
pop
arpl
xor
in
cwtl
fisubs
les
imul
adc
adc
mov
push
into
push
mov
mov
pop
dec
xchg
inc
outsl
mov
ljmp
pop
and
adc
sub
rcrb
call
mov
xchg
rol
cmp
vfmaddsub231ps
scas
xor
add
jle
cmp
push
mov
addl
repz
mov
jo
cwtl
dec
sbbl
xchg
push
fisubrl
xchg
adc
mov
fsubl
cli
cmc
push
xor
xchg
in
faddl
inc
loop
idivl
lds
push
cmpsl
xchg
and
inc
std
aas
jne
pop
jno
xchg
cli
fs
add
sbb
push
push
dec
add
lds
mov
das
sbb
pop
scas
add
adc
mov
dec
mov
mov
sub
pushf
xchg
sbb
gs
int
push
or
std
dec
mov
and
cmp
aaa
add
mov
cwtl
and
cli
inc
shll
or
mov
fistps
mov
cmp
cmp
subb
mov
xorl
dec
aam
in
test
and
and
jmp
pop
pop
add
ds
cs
cs
loop,pn
cli
ss
aas
push
xor
aad
cwtl
gs
insl
and
inc
dec
das
gs
fists
bound
push
cmpsl
test
mov
mov
bound
mov
jo
inc
loop
jg
or
inc
loope
cmp
and
jns
jb
jne
testl
lret
cli
xor
mov
std
sarb
jp
int3
aaa
dec
repnz
daa
sub
stc
loope
inc
pop
clc
jnp
jbe
add
xchg
or
dec
inc
cmp
enter
bound
jb
push
pop
test
rcl
outsl
out
mov
inc
inc
jge
push
and
jne
mov
add
mov
dec
dec
xchg
cmpsb
xchg
out
mov
cwtl
xchg
jmp
xchg
or
mov
lahf
or
loope
leave
mov
std
mov
cli
mov
mov
mov
ffree
mov
dec
mov
inc
fistl
mov
jne
push
push
lock
dec
push
ret
mov
mov
insb
mov
popf
jne
mov
xor
add
sti
in
mov
cmpsl
scas
jnp
daa
ljmp
inc
jbe
adc
gs
or
test
push
and
pop
xchg
rcl
xchg
ret
xchg
and
xchg
or
push
fsubrl
out
cwtl
xor
daa
ret
les
sub
mov
pop
dec
subb
int3
xchg
pop
hlt
shlb
lds
incb
mov
xchg
cld
add
push
push
pusha
scas
jo
add
xchg
push
outsl
sarl
xor
bound
mov
inc
imul
jmp
iret
jns
mov
xlat
xchg
and
jge
aam
aam
or
pushf
out
xor
cli
daa
arpl
sbb
cmp
loop
pop
fimuls
mov
and
cmp
icebp
mov
or
push
mov
and
jb
jo
add
leave
mov
add
in
dec
adc
std
enter
push
test
fwait
stos
jle
loopne
xor
mov
inc
push
jae
sahf
divb
cltd
mov
push
xchg
dec
ficompl
out
test
int
es
or
jl
pop
mov
icebp
mov
xchg
and
jecxz
lcall
sub
out
enter
int3
pop
std
add
or
sbb
xchg
jecxz
adc
jl
cmp
sub
xor
sahf
fdivs
mov
mov
push
testb
arpl
jns
clc
sahf
call
outsl
pop
lcall
xor
sahf
inc
shll
ficoms
push
dec
pop
or
xlat
push
sub
leave
add
and
das
push
loop
jg
lahf
popa
ret
dec
bound
push
loopne
sahf
ret
ficoml
push
jns
adcb
push
pop
sti
daa
cmp
cmc
mov
push
add
push
jg
inc
push
jns
ficompl
xor
push
pop
shrl
pusha
jge
cmp
iret
mov
adc
mov
cli
push
rorb
inc
lret
mov
pop
xor
fimuls
aam
sub
les
mov
int3
mov
fcompl
bound
les
fsts
sub
push
cmp
xor
jnp
and
shrl
mov
adc
dec
cmp
sbb
dec
mov
icebp
js
xchg
andb
bound
loope
ja
bnd
and
nop
xchg
adc
xchg
int
adc
dec
test
pop
jg
xlat
fwait
inc
xor
ss
cmp
mov
loope
and
push
xor
jae
es
mov
jl
and
daa
shll
mov
lret
mov
gs
and
mov
rclb
jbe
xchg
push
and
sbbl
inc
jno
jns
std
jg
movsl
pop
xchg
ds
pop
xchg
ret
sub
mov
mov
xchg
out
and
out
fidivrs
lea
cli
test
xchg
mov
and
push
mov
add
imull
test
lret
sub
int
out
pusha
inc
aad
pop
sub
xor
mov
or
push
xchg
rorb
fcmovnb
xor
push
sbb
push
aaa
inc
insb
sbb
leave
pushf
mov
test
mov
sbbb
push
stos
and
mov
add
inc
sar
les
jl
push
test
arpl
jl
cmp
iret
mov
push
lock
or
xor
cmpsb
xchg
int3
xchg
pop
sub
popa
add
mov
mov
or
sbb
es
jno
push
mov
jg
sub
mov
mov
mov
adc
xor
push
pop
cmp
adc
xchg
hlt
pop
or
outsb
add
and
mov
sub
loope
dec
xchg
or
lret
lea
dec
mov
pop
pop
push
inc
sbb
xor
sub
jecxz
fwait
cmc
xchg
cmc
ficoml
dec
jmp
and
imul
pusha
bound
jb
enter
inc
lods
mov
pop
js
mulb
jg
ss
pop
push
mov
lods
repz
or
enter
ret
test
repz
adc
mov
ja
lret
push
pop
ret
dec
sbb
mov
test
test
inc
or
mov
jp
and
sbbb
xor
cmc
es
addr16
or
roll
push
mov
sbb
repz
jl
stc
and
adc
and
jg
cld
loop
inc
jae
aam
jg
mov
push
lret
loop
xor
into
es
pushf
and
mov
and
inc
cs
inc
cmp
out
or
mov
dec
popf
adc
jnp
lret
lret
mov
xchg
out
in
subl
or
push
ror
stc
testb
in
add
xchg
inc
enter
xchg
mov
lcall
mov
xchg
pop
arpl
iret
mov
jne
mov
mov
rclb
pushf
cmp
scas
shll
scas
push
test
imul
cmpsb
imul
imul
push
push
enter
repz
ret
xchg
jb
fdivs
psubd
and
cmpb
cmp
inc
outsl
scas
and
sbb
mov
mov
and
sbb
add
and
test
or
cld
lods
push
clc
and
xchg
lret
bound
and
and
mov
cmc
or
xor
add
mov
mov
cmp
movsb
loopne
mov
scas
cmp
pop
adc
outsb
xchg
aad
call
dec
sub
sbb
xchg
pop
jge
arpl
sbb
cmpsl
cld
rcll
sub
inc
mov
xchg
stos
push
jo
out
test
adc
sti
jmp
popf
addr16
xor
dec
sbbl
loope
mov
push
fistps
adc
mov
xchg
cmp
dec
cli
xchg
scas
cs
ds
mov
adc
outsb
out
notl
fnsave
popf
add
mov
adc
inc
mov
cmp
dec
ja
mov
add
push
push
mov
lcall
sbb
xchg
push
xchg
addl
pop
add
call
inc
sub
mov
addr16
lock
push
test
jp
dec
int
xor
ss
jge
jle
test
jmp
repnz
jecxz
pop
shrl
cli
inc
xchg
fnstenv
stos
adc
addr16
ljmp
insb
insb
mov
mov
cs
cltd
mov
notb
xor
push
xchg
push
pop
or
push
int3
test
outsl
jmp
sti
push
sarl
mov
jne
hlt
sub
sub
mov
xor
ret
repnz
pushf
push
inc
pop
and
push
mov
jne
fldcw
dec
daa
or
in
jb
sbb
loopne
adc
enter
xor
push
sbb
popa
fucomp
les
mov
subl
jae
test
fwait
push
adcb
lahf
rolb
xor
ret
xchg
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
jl
dec
pop
jl
mull
mov
mov
lcall
push
cmpsb
outsl
std
test
adc
scas
cli
jno
enter
stc
jns
fimull
and
fmulp
jne
dec
add
or
data16
sbb
imul
mov
fdivs
in
inc
mov
dec
aam
jmp
and
pushf
push
lahf
adc
aam
test
add
and
aaa
inc
stos
push
or
pop
mov
sti
sbb
subl
dec
jae
std
sub
lcall
push
cmpsl
mov
add
adc
sbb
push
sub
mov
out
pop
pop
inc
aad
or
insl
add
js
jp
dec
pusha
pmulhuw
insb
fisubrs
or
test
xor
jno
dec
mov
fildl
mov
daa
jne
sarb
mov
xchg
jle
push
lods
jmp
out
or
repz
daa
jmp
sub
adc
rol
xchg
pusha
out
xlat
jbe
mov
cmp
inc
mov
ds
push
cmp
sti
loope
xchg
insl
and
mov
adcl
ficoms
sarl
jno
clc
repnz
push
xchg
xorb
xor
push
cltd
or
and
add
push
dec
clc
push
add
pop
add
ret
mov
stc
jecxz
test
fadds
xlat
sti
add
rorl
xor
out
int3
sbb
xor
xchg
ss
fildll
std
dec
repz
or
mov
cld
or
xor
ret
aad
inc
mov
adc
fstpt
mov
clc
aas
lret
inc
pop
aad
dec
lock
dec
rolb
shlb
out
dec
sbb
sti
and
mov
cmpsl
sub
pop
into
stos
in
in
xorb
and
xchg
push
mov
pop
lcall
inc
sti
add
and
sahf
mov
push
jbe
jecxz
and
cmp
mov
cmp
xor
xchg
adc
xchg
lret
ja
push
loop
imul
clc
gs
push
ret
push
out
xor
decb
inc
stc
insl
nop
cmp
neg
xchg
shl
daa
cs
mov
dec
mov
addb
test
mov
and
pop
arpl
mov
or
xchg
or
adc
ljmp
sub
cmp
enter
mov
or
int
fcoml
dec
test
cltd
xor
arpl
push
add
jbe
in
imul
cli
mov
pop
stos
cmpsl
es
dec
jb
sahf
mov
pop
outsl
xchg
sbb
mov
jo
call
insl
insb
leave
in
stc
mov
dec
mov
pop
pop
lock
mull
dec
ds
dec
sub
jno
or
bound
in
imul
sbb
push
test
movsb
lods
and
das
in
jl
cmp
cwtl
jecxz
pusha
bound
mov
sub
mov
xchg
adc
lods
lret
sarl
sbb
imul
movd
idivb
js
add
loopne
cs
cmp
sbb
jmp
inc
je
xor
fs
jp
cmp
shlb
into
dec
aas
push
std
inc
mov
jge
xchg
adc
xchg
xchg
lock
in
sar
aas
adc
push
mov
bound
leave
adc
pop
cltd
test
mov
sahf
mov
stc
in
pop
xchg
icebp
sbbl
gs
ljmp
pop
jae
and
imul
pop
dec
fnstsw
sub
or
cwtl
lret
adc
inc
pusha
mov
test
pop
testl
fistl
push
pop
or
test
mov
adc
push
push
lcall
cmp
cwtl
xchg
dec
cmp
shl
mov
jecxz
jne
sub
imul
push
test
mov
mov
sbb
jbe
in
push
std
ret
stos
push
xchg
loop
mov
cltd
pop
mov
sub
mull
adc
aas
mov
xor
push
sbb
daa
push
leave
jmp
add
pop
adc
movsl
jecxz
xor
and
jge
aad
aas
pusha
dec
shll
push
sbb
inc
xor
push
data16
adc
or
pop
and
adc
rolb
andb
lods
neg
shl
flds
push
stos
les
adc
loop
std
dec
syscall
mov
loopne
jmp
push
add
cmpsb
adc
ljmp
push
cmpsb
int3
cmc
pop
and
int3
insl
hlt
inc
inc
daa
insb
movl
mov
and
iret
xchg
mov
push
test
push
pop
mov
lods
pop
push
rcr
jg
push
ficoms
imul
lods
aaa
scas
adc
add
or
mov
pop
popf
xchg
mov
mov
sbb
add
imul
int3
or
les
dec
push
loopne
inc
repnz
cwtl
jp
mov
lret
call
sub
es
adc
iret
sti
xor
enter
movsl
lret
pop
test
shlb
shrl
popf
lret
in
call
mov
inc
imul
pop
mulb
xor
js
sub
sbb
loop
add
jmp
in
addr16
les
jmp
clc
jg
negl
loopne
addl
xchg
frstor
ljmp
cli
dec
sbb
int
aad
pop
js
push
sbb
cmp
add
xchg
dec
data16
mov
cmp
pusha
lret
xor
jb
push
xor
and
mov
out
lcall
or
popa
scas
adc
jnp
dec
sarb
or
inc
push
pop
xor
scas
popa
js
adc
push
pop
xor
mov
popa
test
cld
jp
ljmp
push
dec
pusha
push
lock
jmp
mov
cmp
imul
and
pop
inc
pop
fnstsw
inc
clc
jb
lcall
cli
dec
mov
cmpsl
dec
mov
push
and
sub
fisttps
xor
hlt
add
or
les
xor
fildll
call
xor
adc
paddsb
sub
call
push
dec
stos
xor
lret
add
addr16
int
cmp
xchg
pop
jp
and
rcr
hlt
fcompl
push
mov
jne
mov
push
lock
jecxz
clc
mov
push
xor
inc
push
mov
dec
push
push
xor
repnz
mov
fsubrl
xor
popf
data16
decl
adc
loopne
rcrl
insl
bound
adc
ljmp
sbb
mov
fiaddl
hlt
jl
scas
nop
lods
cmc
test
jnp
dec
or
sti
cmp
fsubrl
and
ret
adc
jb
jb
popa
std
cmp
mov
lea
leave
xlat
dec
inc
call
std
pop
sahf
rcrl
mov
pop
pop
pop
into
ljmp
mov
mov
inc
insl
xchg
pop
xor
in
orb
aaa
movsb
inc
jp
inc
push
jb
pop
or
pop
xchg
mov
test
push
mov
mov
xor
flds
rolb
out
push
outsl
pusha
or
xchg
ds
stc
sub
push
or
rcrl
inc
dec
mov
hlt
and
lods
stc
in
je
push
ret
or
xor
cmovp
inc
cmpsb
add
loope
hlt
xchg
push
and
push
test
inc
adc
and
in
xor
aaa
adc
aas
jne
pushw
cmpsb
cmpsl
ror
out
pop
jmp
inc
lea
stos
pop
push
sub
fstpl
xor
fisttpll
pop
xchg
jnp
mov
jae
xor
lret
outsb
dec
cmp
testl
pop
xchg
add
sub
mov
pop
push
mov
pop
aas
jbe
mov
or
cmp
push
inc
push
stc
xchg
sub
cmc
out
jl
ljmp
fldl
pusha
popf
sub
sbb
xchg
out
pop
dec
pushf
push
xchg
inc
lret
inc
inc
clc
into
pop
jnp
vpcmpgtb
gs
sti
mov
in
lea
lahf
data16
testl
pop
fdivrs
addr16
xchg
lea
push
daa
out
xchg
and
xor
cmc
fimull
into
mov
imul
mov
xchg
stc
xchg
test
sbb
scas
jne
out
xchg
ds
xchg
adc
push
mov
mov
xor
xor
rcrl
das
inc
in
mov
into
adcb
push
xor
clc
and
lcall
mov
jle
inc
lods
inc
mov
add
iret
cmpsl
mov
aad
sub
js
test
sub
mov
xor
jb
lds
ja
pop
test
lods
fs
sbb
lahf
fidivrs
cmp
rol
cli
into
lea
bnd
xchg
pusha
mov
adc
js
sbb
mov
and
andps
popa
lods
and
sub
xchg
roll
mov
dec
xor
sbb
loop
loopne
mov
dec
fldenv
test
loop
inc
dec
dec
jmp
sbb
scas
jmp
lds
nop
out
cltd
rcrl
mov
mov
sub
mov
lock
sar
roll
js
inc
push
dec
and
hlt
xchg
xchg
mov
lcall
push
int3
lret
xor
jg
lret
outsl
xor
bswap
push
pop
cmc
mov
cmpl
push
cld
insb
sub
enter
out
out
nop
test
clc
add
test
mov
and
popf
out
into
in
movsb
push
mov
mov
push
jmp
test
push
push
xchg
jne
adc
jno
shrb
xchg
stos
gs
fbstp
sub
or
ficompl
push
cmp
mov
aad
mov
ret
sar
cmpb
bound
movsl
push
inc
scas
mov
movsl
dec
scas
inc
xor
adc
fnstenv
in
mov
inc
mov
clc
loopne
sub
iret
xchg
dec
repz
call
leave
add
mov
lds
fsubr
mov
xor
inc
arpl
add
cmp
in
push
cmpb
or
dec
repz
jmp
jge
pusha
mov
pop
aad
mov
scas
cmpsb
repnz
clc
sub
imul
mov
inc
and
dec
ss
sub
pop
xor
popa
lret
fsubl
or
dec
imul
jne
les
lea
shrb
or
mov
outsb
add
mov
xchg
xchg
movsb
sub
sbb
push
mov
sti
cmp
or
inc
dec
xchg
std
fucomip
mov
sahf
and
mov
sbb
cmpsb
inc
leave
mov
faddl
shlb
into
xchg
jmp
daa
jge
fbstp
xchg
push
cltd
pop
andb
ljmp
loope
pop
dec
pop
sub
sbb
pusha
pop
xor
adc
and
sub
mov
mov
push
aam
stc
jg
pushf
push
das
or
cmp
sub
insb
fadd
inc
hlt
cmp
mov
fdivl
cld
push
out
test
xchg
cmp
enter
fisubs
mov
mov
push
sti
xor
mov
mov
jnp
stos
push
stc
dec
add
adc
ficoml
fisttps
adc
out
sti
arpl
out
into
push
data16
dec
loop
fsub
test
dec
repz
cmp
fidivrl
imull
movsb
not
sbb
stos
cmp
push
add
pop
bound
aam
mov
pop
stc
outsb
dec
aaa
aad
daa
add
or
jecxz
sbb
pop
jnp
scas
in
push
popa
xchg
test
fcmovbe
out
rol
and
mov
xorb
fdivl
mov
cltd
orl
xchg
stos
pop
jge
cmpsl
inc
pop
scas
push
repnz
pop
aam
ret
xor
subb
push
arpl
and
fs
push
in
test
mov
stos
rclb
xchg
aas
mov
adc
into
imul
pushw
sahf
xor
add
add
jmp
ja
leave
add
and
push
jecxz
cmpsl
adc
fcmovb
xor
and
mov
mov
jmp
imull
add
sub
mov
jo
loope
mov
outsl
lds
lahf
je
sarl
sub
xchg
ja
jo
cmpsl
adcb
adc
ljmp
dec
mov
cmpsb
add
pop
xlat
adc
push
dec
fimuls
pop
fs
out
mov
xor
push
icebp
icebp
or
xor
rcrl
fxch
inc
mov
push
test
insb
cmp
repnz
pop
sub
sub
in
mov
call
hlt
push
nop
pop
xchg
leave
xchg
add
fdivs
xor
xor
adc
mov
push
notl
lds
cld
and
fwait
xor
scas
or
add
and
mov
nop
mov
add
jmp
adc
pop
mov
sub
push
ficompl
pop
sar
lds
push
or
outsb
and
xchg
lods
dec
fsubrp
clc
mov
icebp
inc
ja
imul
ljmp
fsubrl
add
das
scas
xchg
nop
push
insb
outsl
dec
movsl
xchg
add
clc
cmpsl
popf
mov
ret
and
filds
mov
jbe
cs
xor
mov
mov
scas
fnstsw
cli
and
adc
insl
in
scas
jmp
push
popl
mov
pop
out
mov
test
test
fiaddl
fsubr
aam
stos
xchg
idivl
insl
ljmp
hlt
jnp,pn
jle
or
ss
inc
sti
data16
enter
fldl
cmp
push
add
and
aas
fcompl
outsb
pop
and
in
cs
aad
push
xor
ja
insl
xor
jns
shr
cs
mov
stos
fsubl
pusha
xor
xor
and
cmpsl
mov
imul
call
fldl
shl
fists
cli
iret
push
sub
or
je
sbb
rcll
cwtl
xchg
cmp
ss
pop
fwait
movsb
rol
pop
cmc
lret
and
and
sub
sub
xor
shl
pop
pop
add
mov
sbb
fcomps
cmp
nop
mov
aad
ja
repnz
cmp
pop
icebp
mov
repnz
call
inc
and
and
and
jg
xchg
scas
dec
fs
dec
xlat
add
cmp
push
push
mov
mov
iret
jmp
and
mov
jmp
out
push
push
sbb
adc
mov
jo
std
out
push
out
inc
xchg
fcmovu
dec
mov
loope
fwait
jecxz
jmp
or
xchg
jmp
add
jns
mov
push
dec
stos
adc
aas
push
mov
ret
gs
sbbl
xor
std
test
mov
or
loop
push
sahf
cmpsl
inc
mov
pusha
xchg
aad
mov
or
add
push
lret
fdivl
pushf
fildll
loope
fistpll
mov
pop
mov
test
and
scas
pop
inc
pushf
mov
xchg
jge
dec
adc
and
shlb
jecxz
fstpl
cwtl
inc
jp
call
test
jp
mov
or
imul
dec
cmp
xchg
fistps
ret
xor
xchg
test
push
das
mov
loopne
lea
addps
or
or
xchg
mov
popf
loopne
outsb
int3
loop
adcb
ret
jbe
mov
mov
pop
and
jmp
sarb
in
shld
lret
leave
pop
xchg
xor
loope
stos
xchg
push
fdivrs
and
cli
adc
out
pop
and
out
mov
iret
fbld
adc
jnp
sbb
call
adc
push
in
outsl
cmp
mov
repnz
lcall
clts
mov
lock
mov
pop
adc
add
and
fst
ja
cltd
scas
out
jb
xorl
and
pushf
sub
sub
call
mov
inc
aam
not
mov
int3
xchg
test
fwait
loope
ficoms
sbb
sbb
cmp
push
addr16
jg
xchg
sub
jle
shlb
outsl
sub
xchg
pop
fucom
clc
test
mov
mov
inc
fs
popaw
in
mov
jbe
add
push
mov
jl
ds
xlat
and
outsb
mov
xchg
pop
adc
pop
lods
pop
inc
or
mov
pop
adc
mov
push
xchg
popf
push
sbb
sbb
arpl
cmpsb
pop
adc
and
fucom
jecxz
lahf
sub
int3
call
sbb
lods
mov
adc
adc
xchg
xor
cld
popa
je
xchg
fdivrs
pop
in
cs
or
sbb
stos
add
push
push
fidivrl
cltd
sub
xor
push
enter
call
cltd
inc
push
and
push
pop
pop
mov
sub
decb
repnz
and
mov
add
movsl
add
mov
hlt
dec
adc
stos
adc
add
outsl
shrb
sbbb
inc
popf
ja
dec
adc
xor
addr16
movsb
imulb
jnp
sahf
pop
rol
and
stos
dec
rol
pushf
and
jmp
xorl
pop
sbb
jb
ret
loopne
lret
fnsave
scas
adc
clc
aaa
pop
lock
loopne
lea
fs
imul
add
jo
jmp
adc
add
xor
sub
enter
lea
xlat
lods
push
xchg
les
sub
movsb
shll
fldcw
pop
stos
and
jo
inc
std
in
mov
fdivrl
mov
or
enter
add
mov
testb
pop
pop
in
pop
test
ret
stos
adc
and
dec
dec
mov
repnz
int
inc
push
cmpsb
cmp
in
pop
arpl
add
insb
std
test
cmp
orl
mov
push
mov
inc
inc
lds
sub
or
ret
pop
sub
pusha
lock
pop
adc
mov
push
mull
in
loop
pushf
add
pop
leave
mov
push
jno
fsubrl
sub
fcmovu
adc
mov
dec
jnp,pn
jae
push
pop
lret
pop
stc
and
xor
ljmp
push
xor
xchg
leave
mov
jmp
push
inc
adc
push
mov
in
pop
push
loope
xor
push
inc
int
inc
stos
push
mov
aaa
nop
fcmovbe
mov
out
cltd
mov
ret
mov
adc
mov
push
outsl
movsb
add
inc
pop
mov
data16
ds
jg
mov
lret
mov
xor
pop
insb
mov
pop
shrb
leavew
clc
xor
cli
mov
add
lds
cmp
iret
stos
jb
cmpl
call
push
sub
and
popa
xchg
lods
hlt
pusha
xchg
mov
mov
rorb
cmp
out
int
repz
sub
call
mov
jg
outsl
popa
mov
cmpb
out
repnz
movsb
mov
dec
scas
sub
dec
xchg
push
pop
add
lods
add
xchg
addr16
ljmp
dec
adc
xor
call
out
jnp
ret
inc
lret
or
adc
out
push
pop
sub
mov
jge
testb
aam
out
mov
add
mov
lock
inc
sti
out
mov
push
pushf
fcomip
popf
sub
jns
jle
fld
ret
jp
and
cmp
jmp
mov
clc
dec
dec
xchg
in
loopne
push
mov
pushf
sarb
insl
sti
data16
rorb
sbb
xor
js
cmp
out
and
scas
add
gs
add
xor
adc
mov
and
movsb
sbb
out
jecxz
cmp
fwait
jecxz
cld
stc
ljmp
or
fldcw
lods
test
imul
or
cmp
jbe
push
pop
stos
lods
jp
jmp
dec
or
test
cmp
pop
add
fildl
rcrb
cs
clc
adc
sbb
inc
xchg
idivl
inc
xchg
ds
cmp
xlat
popf
aas
pop
add
cmp
in
jo
adc
out
sub
mov
mov
push
sti
or
je
mov
push
cli
lods
push
jg
pop
fistps
sbb
sbb
fcmovnbe
add
jns
ljmp
pop
icebp
pop
mov
sub
cmp
mov
les
movsb
iret
sbb
sbb
shrl
orl
mov
cwtl
cmpsl
cmp
lods
fmul
movsl
or
xchg
adc
iret
mov
dec
lods
fisubrs
mov
xchg
ficoms
test
orl
out
ljmp
cltd
jecxz
nop
mov
cmpsl
cld
pop
ljmp
cmp
push
inc
cs
xchg
cmpsb
roll
cmpsl
pop
xor
out
mov
push
xor
scas
mov
jp
scas
insb
jno
popf
inc
inc
jno
in
pushf
mov
andb
xchg
jno
fwait
xchg
shrl
pmulhuw
push
pop
xchg
add
ljmp
arpl
and
nop
adc
cmp
pop
pop
xchg
pop
push
fs
push
mov
cmpsl
movsl
sti
and
hlt
aam
or
inc
dec
in
xor
nop
addr16
cmc
inc
imul
aaa
ret
test
mov
orl
pop
rcr
xchg
mulb
cmp
sbb
cltd
jns
xchg
push
pushf
cmp
mov
fdivrs
clc
pop
xor
adc
and
cmp
xchg
cmp
into
int
out
xchg
leave
cwtl
sbb
sahf
dec
or
outsb
loope
mov
icebp
and
inc
scas
pop
fiaddl
push
pusha
jmp
mov
sbb
rcl
mov
xor
fwait
add
ret
inc
sub
adc
mov
adc
push
lock
mov
std
js
mov
inc
jp
lcall
cmc
loop
out
insb
mov
int
insl
push
jl
xchg
stos
mov
es
adc
fisttpll
push
les
cmp
insl
pop
dec
mull
mov
jno
pop
fidivrs
scas
in
or
ret
mov
std
adc
jnp
sahf
das
cmp
adc
xorb
jne
inc
movsb
xchg
sub
ljmp
xchg
leave
mov
xchg
xchg
fistpl
cs
jne
je
fidivs
mov
xor
mov
pop
add
sub
insb
pop
nop
sub
enter
lods
add
cmpsb
cmp
cmpsl
dec
jnp
pop
repz
lods
pop
xor
dec
ja
ficoml
popa
orb
cmp
mov
xchg
xor
nop
mov
call
sub
les
and
push
idivl
inc
fcompl
lea
push
out
shrl
scas
inc
test
xor
add
cmc
jl
stc
fnstenv
mov
arpl
ret
push
sahf
sbb
loop
dec
push
fs
movsl
add
push
push
mov
fldcw
and
pop
push
out
daa
clc
or
mov
xor
loopne
sbb
into
lret
xchg
out
mov
sbb
mov
and
inc
out
inc
fwait
pop
or
mov
cmp
dec
cmpsl
pop
dec
mov
movsl
or
gs
mov
sub
add
mov
xchg
pop
int3
jge
imull
enter
rorl
xor
pop
push
jg
mov
lods
daa
sahf
js,pt
fisttps
adc
dec
mov
daa
in
cmp
mov
fldenv
aam
pop
push
je
int3
cli
leave
enter
cmpsl
jl
cmp
out
cwtl
sub
jecxz
test
sub
jl
and
pusha
jmp
pop
nop
ja
pop
je
or
cwtl
jge
xchg
scas
adc
lcall
jmp
mov
sbb
es
jl
out
repnz
cld
jmp
add
aad
movsb
int3
out
imul
enter
scas
cmpsl
mov
push
leave
int3
dec
repnz
filds
mov
push
clc
in
push
daa
daa
sub
and
xor
dec
leave
cmp
sub
mov
and
cltd
sub
mov
aam
je
nopl
scas
pop
mov
sub
cmp
inc
dec
shr
mov
adc
xchg
pop
dec
pop
sahf
negb
push
mov
call
sbb
xchg
addb
test
jge
data16
inc
in
pop
push
arpl
xchg
ja
rcll
cmc
push
push
jg
jl
popf
mov
mov
ljmp
jmp
bound
jl
dec
and
xchg
jge
addr16
jmp
stos
mov
xchg
jp
mov
fcmovu
adc
out
popa
scas
push
mov
or
inc
cmp
rcll
mov
cs
sbb
andb
dec
movsl
pop
jno
mov
cld
mov
xchg
mov
daa
add
pop
dec
dec
test
test
fistps
jecxz
and
jmp
test
scas
lea
cwtl
push
push
cmp
leave
push
mov
sbb
int
loopne
arpl
jge
adc
mov
or
lahf
jmp
xor
test
ret
loope
jne
fstpt
mov
in
xchg
mov
call
mov
push
xchg
jmp
pushf
cmp
mov
xchg
dec
jmp
mov
enter
rcrl
aas
pop
push
mov
xchg
mov
jle
das
test
cmp
in
mov
outsb
push
mov
and
std
clc
push
sub
xor
adc
mov
mov
xlat
cmp
mov
mul
mov
inc
adc
jle
push
mov
mov
rcl
push
js
fbstp
cld
cmp
idivb
dec
dec
mov
inc
out
sti
adc
ss
stc
or
je
jle
clc
xor
xchg
xchg
fmull
lods
into
jnp
aas
push
fisttpl
mov
push
sbb
push
dec
movsb
mov
mov
fisubrl
pushf
xlat
inc
pop
sbb
add
cmp
mov
inc
jb
sub
mov
fstpl
repz
jle
cmp
push
inc
inc
std
mov
icebp
shlb
movsb
xchg
mov
sub
leave
fadd
div
pop
repnz
daa
loop
in
and
adc
pop
dec
cmc
mov
and
or
enter
pop
mov
inc
pop
inc
sti
sub
es
or
outsb
or
ror
sbb
jnp
sbb
jns
les
sbb
ljmp
inc
xlat
ljmp
mov
ljmp
aaa
fwait
cmp
jle
in
aas
fmulp
push
outsb
push
mov
mov
inc
pushf
cmp
pushf
lret
xchg
fimuls
adc
cmp
flds
xor
mov
mov
jle
pop
jae
int
ret
xor
aad
inc
test
push
xor
jecxz
sub
inc
and
scas
imulb
dec
shll
popa
add
sarb
add
cli
pusha
rcll
sub
loope
sbb
or
mov
dec
inc
jo
sub
mov
mov
lahf
nop
mov
xlat
add
dec
in
es
add
sbb
mov
sbb
jmp
jp
fcmovne
lret
adc
mov
mov
imul
mov
jge
leave
inc
and
pop
xor
rcrl
jb
lcall
in
dec
xchg
or
mov
push
pop
jl
ficoms
pusha
dec
cld
sbb
push
sub
out
popa
aam
xchg
fs
test
mov
push
and
jmp
add
xor
loop
mov
aaa
sbb
pop
mov
lcall
cmp
inc
neg
cltd
in
cmp
dec
push
lea
cmp
gs
aad
inc
pusha
mov
out
xchg
and
or
mov
lahf
cs
pop
mov
fidivrl
jecxz
push
enter
push
xchg
cmp
cmpsl
xchg
push
lea
push
lods
rcll
xor
mov
xchg
dec
xchg
xor
fistpll
js
dec
xchg
lods
adc
and
pusha
add
sub
repz
nop
cli
rorb
jg
pop
mov
not
cmc
cmp
inc
test
call
test
loop
mov
and
out
mov
inc
loopne
lret
enter
pop
lcall
lea
cmp
push
imul
jl
push
fimuls
cmpb
dec
in
mov
fwait
cmp
xor
gs
or
fsubrl
mov
lcall
dec
xchg
inc
cwtl
xchg
sbbb
shrl
ret
ds
add
leave
xchg
jecxz
lock
loop
leave
xor
aas
xor
andb
aad
ljmp
enter
cmp
popf
lcall
and
std
push
or
aas
aas
sub
sub
push
pusha
shll
jp
ljmp
adc
mov
roll
sbb
pop
lret
lcall
stc
cmpsb
mov
lock
lret
test
movsb
sbb
stos
add
lret
pushf
addr16
test
xorl
imul
add
and
push
or
sarb
inc
lea
lods
add
int3
leave
adc
ret
lcall
or
cmc
out
cli
clc
adc
lea
ds
sub
repz
cmp
nop
adc
dec
sub
sbb
pop
adc
lmsw
mov
xor
dec
sbb
je
fwait
andb
hlt
clc
fldcw
inc
jbe
ret
sbb
jb
adc
sahf
daa
xlat
nop
cld
cmp
dec
std
aas
pop
fcoml
bound
mov
sbb
push
jns
xchg
push
adc
test
imul
insl
xor
add
or
out
js
xor
dec
cmp
lcall
or
call
xor
push
add
repz
xor
call
mov
or
movsb
daa
inc
lds
movsb
movsb
cmpsl
rcrb
mov
sub
add
mov
push
lea
sub
mov
inc
add
dec
and
add
mov
sbb
out
push
cmp
pop
jl
mov
and
adc
icebp
inc
int3
mov
shrl
ret
sub
xor
inc
push
nop
or
pusha
pop
cmp
loopne
mov
cltd
movsl
stos
iret
int
mov
jl
cmp
dec
dec
inc
lcall
lret
xor
stos
or
jb
cmc
stos
lds
fildl
push
mov
and
je
sub
push
dec
inc
mov
movsl
and
lods
test
sbb
out
mov
inc
inc
movsb
pop
test
ss
xor
and
lods
jecxz
jp
mov
xor
cmp
push
pop
gs
ja
aaa
mov
xchg
mov
add
insl
test
inc
inc
sub
jb
dec
insb
jb
pop
jmp
in
mov
adc
loope
ret
cmp
add
shlb
les
adc
sbb
jnp
loope
jg
sahf
popf
icebp
xchg
inc
insb
xor
or
mov
sub
mov
mov
inc
and
sti
mov
cwtl
outsb
negb
inc
xor
inc
ret
jno
cmp
stos
pause
xor
inc
ret
or
dec
sbb
or
jl
xchg
push
loop
roll
pop
mov
rcr
sub
outsb
mov
add
inc
jne
les
dec
fcoml
stc
js
xchg
sbb
popa
xchg
push
mov
push
or
cltd
xor
add
jne
or
movsb
add
stc
sti
in
test
mov
aas
rep
inc
xchg
jl
dec
push
pusha
inc
lret
mov
movsb
sti
and
sbb
mov
jge
jb
cld
jle
mov
fbstp
lret
mov
sbb
xor
ja
xor
mov
xchg
xorl
les
in
jbe
jbe
movl
jge
xchg
in
leave
push
push
xlat
hlt
push
inc
and
mov
pushw
sub
xchg
out
iret
sarb
aad
lcall
aaa
inc
lods
imul
lea
pusha
sbb
dec
sarl
roll
outsl
mov
imul
lea
xor
or
mull
pusha
xchg
fsubp
cmp
sub
fistl
mov
jns
fistpll
pop
lds
ret
test
push
mov
or
mov
jp
adc
push
xlat
pop
decb
sub
loope
or
lea
decl
jp
neg
fisttpl
pop
cmp
mov
rcrb
repnz
sub
movsb
mov
jl
fucomi
bound
mov
dec
mov
stc
adc
clc
jge
aaa
xor
addl
repnz
pop
dec
inc
inc
jae
int
lds
xchg
pop
xor
pop
stos
leave
cmp
gs
ret
or
popf
je
push
dec
fldcw
stc
push
js
dec
mov
push
dec
jg
pop
xchg
lret
xchg
mov
pop
std
xlat
add
sti
out
popa
fisubrl
clc
adc
mov
xchg
sahf
mov
add
and
adc
jno
adc
sub
fsubrl
cmp
lret
es
into
or
add
inc
iret
aaa
mov
push
lcall
adc
shr
in
pmaxub
mov
mov
pop
aas
sub
ds
add
in
pop
mov
add
xchg
sbb
xor
cmp
inc
hlt
das
push
ja
test
or
ljmp
rorl
iret
mov
dec
push
mov
add
movsl
pop
out
mov
movsl
inc
fbld
inc
clc
cltd
mov
inc
jns
pop
mov
shl
or
xchg
adc
xchg
rorl
mov
xchg
sarl
idivb
es
and
jl
xchg
inc
cmc
jb
mov
orl
xor
into
or
popa
cli
fadd
fstp
push
adc
push
call
jnp
and
stos
mov
jbe
rcl
mov
jp
and
mov
jbe
pushf
mov
push
mov
mov
sarb
stc
fst
inc
data16
sub
je
inc
jnp
iret
mov
movsb
repz
mov
inc
jl
pop
sub
mov
and
sbb
dec
mov
ficomps
fsubs
pop
pop
xchg
stos
scas
call
movsl
or
inc
cld
leave
adc
mov
lods
call
dec
inc
mov
lahf
and
repnz
repnz
push
adc
sbb
lcall
pop
cmpsl
cwtl
fstps
ljmp
out
nop
pop
sbb
sub
sti
hlt
inc
jns
movsb
add
sbb
jbe
ret
cmp
test
and
pop
sub
sbb
mov
sub
and
fnstsw
cmp
scas
or
aaa
daa
xor
loopew
cmp
pop
fwait
out
sti
aas
xor
test
movsb
sbb
scas
cmp
das
push
xor
bound
cmp
sub
stos
cmp
dec
adc
mov
dec
inc
xchg
mov
fistpll
dec
iret
pop
lret
fldl
enter
cli
push
push
jg
dec
fwait
ret
xor
jl
adc
lods
sbb
cli
mov
test
pop
sbb
mov
test
pop
and
adcl
out
or
xor
mov
jmp
pop
inc
enter
and
scas
lds
cltd
ja
inc
push
shlb
xlat
cmpsb
mov
jae
add
cli
and
sbb
xchg
push
cs
inc
dec
sub
and
jne
push
hlt
clc
xchg
add
add
lds
inc
ss
jl
mov
ret
push
shll
inc
lods
xor
dec
jns
mov
leave
sub
jbe
jno
popa
hlt
pop
test
pop
pushf
outsb
leave
xor
and
stc
xchg
mov
dec
into
clc
lret
mov
push
adc
jo
mov
sahf
adc
sbb
push
dec
ja
and
pop
xor
scas
jl
jnp
sarb
xor
int3
mov
mov
lock
pop
cwtl
push
outsb
xchg
mov
std
aas
rcll
decl
cmp
int
mov
cmc
cmp
sbb
push
xlat
and
shrb
pop
testb
in
and
push
mov
out
mov
addr16
enterw
add
ss
sub
sbb
sti
adc
int3
cmp
xchg
pop
clc
subb
out
or
in
popf
pushf
fstpl
data16
inc
lds
movsl
sbb
std
mov
sub
test
push
sbb
and
nop
imul
sbb
aaa
push
addb
das
not
ljmp
jge
dec
lahf
xchg
mov
xor
sti
insl
fwait
xor
mov
mov
lods
call
push
jbe
repz
cmpsb
xor
xor
xchg
cmp
scas
clc
shll
push
cmp
xchg
jmp
mov
mov
pop
ja
sbb
xchg
sub
xchg
stos
jecxz
dec
cltd
ror
fldl
cwtl
and
mov
addl
adc
pop
add
sbb
sbb
pop
aas
bound
in
aad
lret
sarb
addr16
xchg
mov
jo
ds
mov
addr16
shrl
and
mov
mov
aam
dec
inc
fcomp
xchg
fsubs
insl
mov
push
and
mov
sti
ficoms
jg
xor
jbe
gs
clc
xor
out
popa
jns
mov
pop
lahf
pushf
sbb
mov
repnz
hlt
adc
mov
push
jns
add
mov
sub
cmp
sbb
cmp
movsb
push
iret
cmp
dec
in
inc
and
jbe
mov
mov
aam
outsl
push
mov
repz
scas
or
xor
int3
sarl
push
stc
pushf
lea
ret
mov
push
outsl
pop
sub
push
lock
mov
std
mov
out
out
push
call
sub
test
in
cmp
add
insb
ret
cmp
das
arpl
sti
dec
dec
mov
shl
hlt
cmc
rolb
repnz
jns
fdiv
les
popa
push
leave
lcall
xchg
andb
fiadds
cmp
sti
adc
jp
xlat
int
jle
pop
shll
fcmovnu
jg
xchg
lcall
rorl
popa
int3
adc
or
dec
inc
or
mov
hlt
sub
outsb
ret
add
or
popa
pop
pop
xchg
mov
test
jmp
lret
into
in
pop
insl
arpl
push
jp
sbb
scas
xchg
push
int
jecxz
pop
lods
inc
js
dec
mov
or
fldt
and
xchg
mov
inc
xor
lds
jg
or
xchg
fnstsw
mov
aas
jle
sarl
pop
enter
inc
jns
sub
pop
push
lods
clc
jbe
daa
rcrb
call
aas
mov
icebp
movsl
adc
test
jno
jl
pop
mov
push
int
loop
mov
xchg
push
xorb
cld
mov
ljmp
loope
mov
sbbb
sbb
nop
or
stc
insl
dec
stc
filds
shr
les
jmp
ja
insl
mov
rcrl
pop
mov
in
cmp
pushl
mov
lock
imul
in
call
cltd
sub
inc
lcall
imul
add
scas
and
in
arpl
xor
sub
mov
inc
jbe,pn
bound
ds
aaa
sub
mov
sti
fsubs
stos
sbb
push
inc
add
cmpsl
jg
mov
negl
aam
lcall
cltd
add
add
mov
rorb
add
inc
test
sub
mov
mov
add
mov
daa
filds
jo
cmp
sbb
mov
ja
adc
mov
mov
dec
cld
mov
cld
cld
jno
or
lret
mov
ljmp
stc
aas
andb
arpl
aaa
mov
daa
enter
mov
adc
stc
dec
mov
jmp
or
scas
sti
ss
lds
jnp
in
cmp
sbb
dec
shll
lock
lcall
mov
dec
shr
push
push
inc
cltd
and
push
insl
mov
pop
cmp
hlt
push
insb
scas
mov
dec
ds
and
xchg
cltd
lods
ss
pop
out
cltd
mov
aam
push
or
xor
mov
enter
shlb
add
jecxz
fidivrs
lods
test
out
dec
mov
mov
add
sub
pop
pop
test
push
gs
xor
imul
and
fidivrl
mov
rorl
xchg
jl
cs
xchg
mov
and
subl
sub
adc
dec
cmpsb
rorl
fucomip
jnp
in
pop
xchg
mov
cltd
jle
shlb
incl
dec
xor
mov
or
xchg
pusha
or
arpl
cmpb
jbe
sub
adc
push
or
xor
or
mov
rorl
add
sti
or
cld
push
and
pushf
dec
jo
out
jg
adc
pop
jo
xchg
repz
int
outsb
in
shll
add
ffree
xchg
dec
mov
xor
push
xchg
cmp
mov
lods
mov
sbbb
dec
sarb
les
cld
jns
pusha
outsl
mov
scas
pushw
and
clc
and
sbb
ficomps
int3
sbbl
mov
xor
fwait
insb
sub
mov
lret
mov
xor
arpl
xlat
loope
popa
xchg
adc
cs
js
nop
enter
pop
stos
pop
push
or
mov
xchg
sub
lods
mov
mov
and
adc
inc
lret
pop
mov
out
addl
test
jecxz
es
lock
rcrb
add
push
das
das
sub
test
stc
icebp
mov
int
add
daa
outsl
push
or
xchg
sti
lock
jne
jg
leave
inc
xchg
call
cmpsb
xchg
mov
addr16
push
cmc
jmp
jmp
jecxz
pop
test
xchg
xor
movsb
test
lock
jmp
jge
es
mov
adc
out
call
gs
and
adc
or
outsb
outsb
mulb
mov
jmp
add
xor
lds
outsb
in
push
popf
fiadds
arpl
repz
fwait
roll
dec
divl
decb
sbb
iret
iret
adc
lahf
pusha
es
xor
shrl
pushf
mov
push
xchg
or
pop
sbb
arpl
std
popa
mov
pop
and
in
lcall
ja
mov
sbb
bound
push
adc
popl
xchg
push
shl
jge
add
mov
jo
xor
mov
cmp
xor
mov
sub
and
outsb
outsl
adc
cwtl
mov
xchg
enter
mov
arpl
out
cmc
jg
sub
lods
xor
loopne
pop
test
and
push
leave
dec
ficoml
mov
iret
add
fwait
movsl
sti
and
das
sbb
mov
inc
sub
rorl
stos
test
out
mov
inc
scas
pop
push
push
pushf
cld
fbstp
xchg
cmp
and
xor
push
add
aam
xor
xchg
adcb
mov
lods
dec
adc
outsl
lods
push
scas
cmp
mov
xchg
ror
pop
dec
sbb
push
pop
popa
mov
clc
mov
ja
loop
sar
jae
mov
cmpsl
sub
mov
inc
xchg
adc
sub
push
and
or
push
push
cld
cmp
push
aaa
subl
imul
sbb
popa
nop
sub
push
pop
sbb
int3
xchg
js
cmp
adc
int3
fisttpl
and
push
pop
inc
adc
jmp
or
mov
jo
imul
xor
shrb
mov
jle
or
xchg
test
out
out
in
mov
jb
pop
jno
adc
jb
enter
outsb
lods
nop
data16
fdivl
xchg
clc
cltd
pop
sbb
pop
rcll
out
push
sub
sub
lods
aas
push
mov
mov
adc
and
pop
loope
dec
mov
mov
leave
dec
xchg
rcl
xchg
push
test
xchg
mov
outsb
mov
xchg
mov
cmc
movsb
and
push
adc
jmp
and
outsb
hlt
rorb
pop
test
pop
std
or
and
std
pop
hlt
cmp
adc
outsl
sbb
hlt
int
add
xchg
dec
inc
xchg
mov
addr16
push
inc
jo
sub
inc
jmp
lahf
cwtl
sub
into
fwait
std
test
pop
dec
aaa
inc
aam
or
clc
shrl
dec
jmp
push
mov
jne
jge
jo
cmpsl
movsb
insb
subb
ja
cmp
lods
test
ss
push
mov
std
dec
cwtl
fcom
rcrb
fs
mov
cmp
dec
fcomip
lds
pop
jp
and
pop
das
into
lock
jmp
ficoml
jge
into
lock
add
dec
int
movsb
adc
jle
leave
sysret
jbe
xlat
icebp
xchg
xor
sub
push
inc
in
call
jns
dec
pop
push
add
test
cli
inc
mov
imul
in
outsl
out
xorl
mov
jge
lods
pop
and
sbb
push
pop
push
pop
push
add
mov
pop
loope
xchg
fsts
xchg
sbb
add
dec
mov
adc
mov
inc
ret
push
daa
add
sarl
test
mov
add
sbb
shrl
and
paddb
imul
or
rcll
scas
xor
sbb
in
push
shll
mov
bound
adc
and
add
repnz
arpl
cmpsl
jns
xchg
scas
std
xchg
mov
popf
cmp
shll
aaa
pop
cltd
inc
mov
leave
jno
xchg
gs
xchg
xchg
dec
jp
cmp
pop
imul
inc
mov
stc
sbb
pop
sarl
aad
mov
stc
insb
mov
cmpsb
rcll
xchg
xor
lods
ret
push
fidivrl
jns
insl
sub
fs
pop
inc
mov
clc
jo
mov
aaa
popf
flds
pusha
push
cmp
fldt
sbb
shlb
data16
cld
and
daa
pop
test
adc
adc
inc
jo
pop
cmp
ret
push
ds
sbb
adcl
sbb
adc
negb
bound
push
cmc
idiv
mov
cltd
jno
xchg
cltd
lea
aam
ds
xor
cmp
andb
fsubs
mov
sbb
pop
ja
cmp
loopne
add
mov
mov
adc
sbb
call
stc
push
outsb
push
jle
stos
in
out
stos
push
cwtl
push
call
jmp
lods
mov
or
test
or
hlt
mov
push
inc
cmp
push
push
xchg
addr16
mov
cmc
mov
and
and
xchg
lock
mov
dec
stos
xchg
fprem
sbb
adc
mov
cmp
mov
hlt
shl
es
push
push
rcrl
aaa
aad
mov
and
add
mov
pop
jge
jmp
pop
imul
stos
and
adc
or
es
cmp
dec
or
mov
xor
lahf
push
cmc
jge
test
jbe
jecxz
mov
and
fidivl
mov
sub
sbb
jbe
es
inc
popf
movsl
lcall
mov
mov
test
jbe
or
jp
lods
enter
pushf
imul
popa
dec
aam
fcomps
jae
and
lahf
xchg
aam
nop
jge
mov
push
loop
call
stos
inc
mov
shll
lea
test
dec
jmp
pop
jo
leave
icebp
add
into
outsb
mov
pop
lds
stos
cmpsl
pop
xchg
test
je
mov
aam
aas
mov
push
ret
push
jb
cmp
jae
sbb
bound
rcrw
mov
das
xorb
imul
pop
inc
std
pop
dec
je
jns
dec
mov
into
in
mov
negl
inc
lods
sub
mov
in
mov
jae
loopne
mov
jo
adc
xor
adc
jmp
fimuls
jns
fdiv
inc
adc
in
test
sbb
fimull
std
jg
cmp
pushf
es
push
jns
pop
cmc
outsl
ret
cld
adc
sbb
sbb
loopne
dec
adc
imul
lret
cld
jnp
mov
in
jae
xor
mull
xor
sub
adc
cmp
jae
jecxz
mov
dec
mov
test
xor
test
dec
jne
pop
lock
adc
dec
inc
xor
inc
cmp
pop
fsubrp
pusha
or
push
nop
pop
cli
fisttpll
sbb
rcll
nop
decb
sbb
test
cld
cmp
lret
mov
jmp
xlat
mov
nop
adc
mov
or
sub
out
mov
imul
inc
xchg
das
mov
decb
dec
and
push
shl
lock
sbb
mov
daa
imul
inc
adc
pop
decb
fcoml
push
ja
and
or
shrb
lods
xchg
fnstenv
loop
jl
dec
push
inc
mov
pop
out
leavew
shrb
inc
fists
pusha
loope
aas
in
bound
out
sbb
loope
cmp
cmp
xchg
mov
enter
std
sbb
jecxz
fists
dec
sub
in
addr16
sub
icebp
repnz
pop
cmp
jb
in
cmp
gs
push
or
stc
test
mov
sub
fstpt
sbb
xchg
jb
outsb
inc
icebp
dec
pop
cmp
pushf
jmp
fs
mov
inc
stos
adc
or
fwait
and
pop
test
add
adc
xor
addl
je
out
wbinvd
pusha
jmp
fisttpll
cmc
into
sbb
int3
pusha
push
fsubrl
lds
adc
cmp
lcall
jae
nop
shlb
imul
test
push
pop
aaa
outsl
xchg
push
js
dec
mulb
inc
or
jbe
xchg
lods
das
inc
cmp
pop
sahf
mov
aam
cmp
testl
push
push
iret
test
adc
sub
inc
lds
mov
into
push
jne
adc
mov
into
call
in
hlt
cmp
rclb
dec
adc
sti
pop
mov
lods
lods
xchg
pop
das
inc
mov
jge
gs
push
mov
and
add
mov
mov
add
or
add
pop
xchg
sub
cmp
mov
jo
adcb
clc
mov
push
sbb
inc
or
subb
loop
push
push
fisubl
inc
pop
dec
push
cmp
or
ss
jbe
inc
and
rorb
mov
aam
and
add
in
outsb
inc
decb
jmp
or
cmp
push
aad
cmpsl
leave
adc
sti
stos
in
aam
and
pop
xor
scas
sbbb
sub
pop
mov
jne
push
push
pop
sbb
lods
sbbl
pop
dec
insl
std
pop
insb
fsub
mov
cmpsb
cld
fs
aas
inc
sub
ljmp
dec
jo
lock
icebp
mov
jecxz
push
fs
insb
sbb
frstor
hlt
inc
sbbb
jp
and
or
fdivr
pop
mov
addl
xchg
pushf
or
adc
cltd
or
mov
push
xchg
adc
jmp
xchg
bnd
fcmovbe
adc
sub
into
fxam
mov
ljmp
loope
cmp
dec
or
shlb
xor
xor
aam
sub
aam
mov
out
sarl
and
add
scas
mov
popa
popa
aam
fdivrs
dec
mov
pushf
push
loop
inc
out
aaa
enter
xchg
push
dec
jmp
fldenv
mov
sti
xlat
or
mov
iret
pop
mov
fcomip
xchg
out
mov
mov
xor
lods
pop
fcompl
hlt
jecxz
inc
rcrl
and
rorb
cli
arpl
cwtl
push
out
adc
sub
ret
cmpsb
testb
jne
jmp
jg
xor
inc
clc
jo
idivl
push
and
sbb
xlat
and
jp
ret
adc
pop
xlat
loope
push
push
aaa
xchg
lret
xchg
mov
icebp
int
adc
pop
add
lock
leave
push
or
mov
in
sbb
jae
jo
mov
loope
jg
mov
mov
call
jg
inc
cmpsb
in
fisubrl
mov
add
push
xchg
and
or
xor
xchg
adc
xchg
add
jne
jg
outsl
jo
inc
out
ficoml
insb
adc
pusha
inc
nop
subl
inc
inc
lods
outsb
jne
stos
stos
jp
adc
or
rorl
pop
add
ds
xor
or
dec
int
inc
push
adc
sahf
addr16
xor
push
mov
and
mov
jb
bound
imul
orl
test
je
mov
loop
je
nop
les
fisubrl
xor
outsb
pop
stos
pop
or
add
push
test
jmp
push
and
push
popa
addr16
jmp
mov
and
jb
xchg
adc
lods
mov
stc
data16
cltd
fcmove
dec
mov
data16
and
std
mov
jb
outsb
cwtl
pop
rorl
sarb
hlt
pushf
outsl
aas
out
inc
push
cmp
mov
and
inc
sub
lods
xchg
dec
int
fadd
xchg
ds
inc
dec
adc
ret
add
mov
in
mov
mov
hlt
push
mov
insb
sti
imul
fbstp
lret
imul
jge
sti
and
pop
test
adc
in
adc
inc
mov
out
adc
jno
adc
pop
xor
dec
pop
mov
push
lea
aam
jmp
mov
push
cmpsb
mov
adc
ror
xchg
mov
rolb
or
outsl
scas
dec
jle
pop
lock
cmpsb
sub
jmp
jne
fxch
neg
stos
mov
push
cld
movsl
aaa
or
inc
aam
sbb
mov
fldl
pop
std
cmc
shll
xchg
adc
int
lds
lock
sub
inc
in
mov
sbb
pop
inc
xchg
pop
sbb
cmpsb
bound
test
aad
push
pushf
add
das
mov
ret
jle
inc
push
in
negl
aad
ret
xchg
in
sub
clc
dec
inc
cwtl
out
add
cltd
outsb
mov
mov
xchg
sti
lods
lods
sub
mov
cmpsb
ficomps
es
push
loope
pop
rcr
out
mov
xor
push
add
decb
pop
in
add
dec
fistpll
cs
cmpsb
xor
movsl
xchg
cld
and
push
roll
insl
inc
cli
jg
ret
rolb
ss
test
and
es
cmp
mov
repz
xchg
jbe
and
cmpl
mov
and
inc
imulb
outsb
andb
icebp
pop
mov
xchg
lds
xor
fmuls
pop
imul
jno
mov
add
push
inc
outsb
mov
loop,pn
aad
pushf
popa
out
sbb
je
ret
and
xchg
inc
adc
xorb
push
jne
leave
mov
pop
jbe
push
out
add
js
pop
cmp
mov
andb
rclb
ret
mov
pusha
vmread
cmpsb
cmp
les
jnp
pusha
mov
out
xor
sahf
and
mov
cmp
std
mov
ds
inc
jecxz
or
sbb
mov
mulb
pop
iret
icebp
pop
adc
cmpsb
pop
jne
nop
lahf
jecxz
fldenv
push
out
dec
sub
and
pop
inc
pusha
jo
popf
push
mov
adc
mov
int3
cmp
negl
jnp
push
je
out
mov
cmp
scas
stc
sub
mov
inc
fldenv
roll
cmp
sbb
repz
cld
insl
xchg
in
cmp
push
add
or
xchg
add
lcall
jl
push
movsl
cmc
xchg
sub
stos
inc
and
and
push
lcall
jnp
add
mov
sub
iret
icebp
je
dec
jge
sub
sahf
fwait
ret
mov
jo
rcl
fcmovnb
lods
repnz
scas
pop
xchg
out
imul
push
xchg
jle
jb
jb
sub
inc
movsl
out
push
hlt
cmp
popa
cmp
pusha
xchg
mov
or
insl
test
rol
dec
jmp
xor
adc
gs
xor
adcb
pop
andnps
push
aas
xor
into
or
outsl
rcll
shl
inc
pop
inc
xor
shr
cmp
pop
xchg
inc
scas
jp
sahf
testl
testb
idiv
imul
adc
or
mov
pop
add
jae
xor
push
dec
addr16
int3
xor
addb
lret
jg
pop
sti
mov
jmp
int3
jmp
push
dec
cwtl
xor
fdivr
jb
adc
and
cld
fldt
adc
jnp
in
inc
loopne
into
jo
jmp
jnp
jl
adc
enter
dec
fistps
in
pop
and
push
sbbl
das
mov
or
fisttps
xchg
pop
lds
pop
sbb
pop
fsubl
cmp
fisubl
imul
fstl
push
ror
into
lret
inc
pop
cmpsb
sbb
ret
xor
scas
push
mov
push
ret
push
mov
mov
es
subl
fadd
popf
add
dec
jp
mov
aam
test
outsb
add
fiadds
into
mov
dec
and
jg
mov
dec
mov
movsl
loop
inc
mov
andb
lds
jo
inc
sbb
aad
push
sub
jo
cmpsb
adc
je
stos
addr16
and
sbb
adc
repnz
nop
cmp
fcomps
icebp
mov
cmp
fabs
ret
add
lods
stos
popa
adc
in
xchg
lret
cmpsl
cs
imulb
lods
fs
imul
rcrl
adcb
mov
test
das
daa
leave
fdivs
jne
outsb
pop
push
xor
xchg
jp
inc
mov
stos
clc
inc
sahf
sub
out
ja
daa
cltd
sbb
or
imul
rcrl
fcmovu
dec
adc
sub
xchg
arpl
push
lahf
testl
dec
mov
and
mov
xchg
pop
adc
xor
add
notl
cmp
andb
sbb
inc
rcrl
xchg
dec
push
lret
dec
xor
bound
push
loope
mov
cmc
outsb
xchg
xor
mov
sbb
fildl
enter
jbe
push
cmp
dec
dec
std
cli
dec
aas
and
leave
scas
stos
sbb
dec
dec
add
dec
pop
jge
xor
sbb
loope
mov
gs
cs
mov
lcall
das
das
sbb
je
shufps
enter
dec
pop
sbb
iret
pop
xor
repnz
adc
mov
add
stos
dec
stos
or
out
jo
sbb
fs
sub
xor
out
out
ret
les
inc
shll
mov
jne
jo
push
sahf
rep
cmp
sbb
sbb
out
pop
or
and
lret
cmp
mov
pop
adc
jns
push
jecxz
mov
adc
movsb
mov
jle
cmp
xchg
mov
ss
push
cmp
fisubrl
cmp
movsb
mov
insb
lret
fistpl
faddp
push
clc
mov
daa
call
mov
je
jo
negb
sarb
inc
pop
add
push
jns,pt
in
ficoms
out
inc
out
jmp
cmp
xor
jp
pusha
loope
sub
fwait
xchg
cs
jo
cs
mov
and
dec
scas
pop
mov
or
dec
mov
sarl
mov
push
push
mov
into
nop
xor
adc
ret
dec
out
fwait
mov
lods
sar
cld
sbb
js
mov
in
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
mov
jl
pop
jl
push
mov
xchg
dec
orl
mull
rolb
mov
jle
xchg
bndstx
jge
movsl
lods
mov
pop
pop
int
lret
pop
data16
data16
std
mov
mov
push
or
push
dec
imul
or
add
ds
in
jno
fs
mov
xchg
add
mov
dec
fistpll
mov
add
xchg
in
test
rclb
pop
add
inc
cld
and
mov
cmp
dec
xor
cmpsl
and
int
lock
adc
jecxz
sub
pop
mov
ret
push
inc
aad
and
xchg
xchg
push
inc
adc
sub
or
push
push
dec
sbb
sbb
movsl
shl
movsb
xchg
xchg
filds
mov
sub
sub
sbb
fsubs
aam
pop
mov
adc
mulb
ss
mov
ja
push
mov
sub
pop
cld
jp
inc
pop
mov
pop
int
add
lret
and
dec
jge
loopne
add
filds
inc
imul
push
scas
fs
push
rcll
mov
mov
lds
push
nop
ret
sbb
dec
and
rolb
es
cmpsl
dec
or
mov
push
jae
pop
jecxz
xchg
bound
mov
adc
imul
jge
int3
jecxz
sbb
xor
jns
add
ret
ja
add
mov
push
cmc
sub
cwtl
enter
sbb
fwait
in
add
jo
test
xor
es
cwtl
std
cwtl
pop
xchg
ret
imul
xor
add
inc
iret
pop
loope
aad
push
test
psraw
jle
push
data16
loopne
adcb
push
aas
hlt
pop
xchg
gs
ret
mov
shrb
pop
test
int
bound
movsl
es
dec
sahf
push
jg
shr
test
push
scas
sub
stos
push
repnz
xor
popf
mov
jno
jne
or
jle,pn
scas
cltd
fwait
pop
fld
mov
std
stos
mov
mov
popa
push
mov
cmp
in
ljmp
pop
addr16
lahf
cmc
daa
movsb
ret
sub
cmp
pop
scas
jmp
and
and
cmp
in
outsl
mov
popa
fdivr
xchg
mov
and
sub
mov
xchg
imul
xor
and
fwait
push
cmpsl
mov
pop
sbb
push
ljmp
mov
xor
sbbb
or
loopne
sub
adc
dec
jp
clc
or
das
ret
cltd
or
fwait
and
pop
cmp
or
fildll
test
xchg
ljmp
out
pop
jle
xlat
mov
mov
cwtl
mov
cmp
mov
std
enter
movsl
cwtl
mov
into
stos
loop
testb
dec
sub
popa
lock
push
in
inc
scas
sbb
loop
xchg
fwait
and
lret
push
push
popf
xchg
jl
clc
inc
call
pushf
gs
push
in
mov
jb
add
push
into
insb
iret
les
pop
sub
sti
insl
push
in
xchg
adc
xor
imul
dec
adcl
mov
mov
pop
sbb
loopne
sub
fstpl
xchg
stos
pop
arpl
inc
repnz
stos
jle
sbb
ror
mov
push
push
mov
add
cmpsl
outsl
repz
bound
cmc
adc
dec
les
adc
inc
xor
xlat
je
sub
ss
mov
addps
out
dec
mov
push
sub
fs
loope
push
push
shlb
mov
push
out
mov
and
mov
hlt
popf
adc
ljmp
dec
scas
daa
movsl
xor
push
aas
pop
push
call
pop
leave
iret
movsl
inc
pop
jb
lods
sbb
inc
nop
push
in
xor
push
mov
sub
iret
testb
ss
pop
in
aam
push
mov
push
xchg
pop
jmp
push
dec
repnz
jno
push
mul
or
mov
and
push
sbb
xchg
push
mov
dec
dec
lret
jl
pop
out
insl
ja
cli
cwtl
inc
fdivs
in
jnp
fidivrl
pop
inc
or
add
and
xchg
jns
push
and
xlat
bound
pop
jno
or
lods
sub
hlt
stos
jno
dec
lds
insb
stos
xor
shll
fcompl
push
shrb
mov
jmp
jo
xor
cli
les
je
push
sbb
cmc
jp
mov
pop
ds
cltd
pop
in
lret
inc
fs
aas
dec
jnp
or
mov
icebp
pop
add
fcompl
lahf
paddsw
add
pop
adc
xor
jle
xchg
imul
push
pop
push
xchg
nop
es
adc
mov
sbb
ficompl
mov
ds
test
jbe
mov
insb
pop
and
fs
mov
pop
push
xchg
icebp
lods
sub
jb
dec
fidivrl
jl
and
jp
adc
sbb
lret
jns
xorb
jmp
lods
jmp
push
pop
bound
imul
jle
outsl
sub
lock
enter
test
insl
xor
adc
dec
mov
lock
inc
mov
inc
outsb
loope
pcmpeqd
fstl
and
xor
push
sbb
into
mov
mov
or
cli
in
test
lods
inc
outsl
dec
dec
inc
aaa
repz
js
pop
mov
nop
cmpsb
adc
push
mov
cmpsb
ret
jae
xor
fisubrl
out
jne
incb
cmp
dec
leave
fstpt
sub
or
aam
ficompl
inc
and
and
mov
fisubl
test
and
arpl
ret
mov
jecxz
dec
lret
sub
mov
or
xchg
mov
mov
xor
mov
inc
sub
mov
movsl
ret
leave
cwtl
out
lahf
test
outsl
fstps
xchg
fildl
add
add
mov
mov
notb
jle
sub
jmp
mov
fisubl
or
inc
sbb
pop
sbb
mov
jecxz
mov
sub
pop
and
call
and
ds
mov
or
movsl
sub
ret
mov
push
sub
test
notl
inc
push
pop
rclb
mov
mov
out
mov
fsubl
lahf
repnz
xchg
push
cmp
push
fmul
sbb
cltd
dec
pop
sub
lcall
mov
push
scas
je
cmp
mov
pop
stos
mov
dec
jmp
lahf
or
mov
in
ss
in
mov
cmp
outsb
addr16
dec
rorl
xlat
test
and
xchg
xchg
out
mov
push
or
jle
inc
mov
jle
add
test
mov
pop
dec
aam
adc
xor
cmpsb
or
ljmp
mov
shlb
test
ljmp
sbb
add
or
xor
clc
inc
loop
sub
inc
daa
cltd
dec
fimuls
xlat
jle
mov
jl
xchg
pop
cmp
jno
xor
cmp
into
push
and
sahf
dec
jbe
aaa
iret
mov
push
clc
mov
sbb
call
cmp
jns
xchg
data16
clc
push
dec
andl
push
and
pop
sbb
xchg
xor
popa
into
popa
push
sub
movl
ficoms
push
cmp
rorb
sbb
ljmp
mov
add
mov
cs
shll
add
cmp
pusha
pop
insl
add
sbb
ljmp
out
mov
and
push
jo
fs
or
cld
jae
rol
add
icebp
daa
clc
xor
aam
sahf
cmp
repz
les
dec
cmp
and
jne
or
cmpb
push
pop
mov
or
xchg
jecxz
mov
mov
sub
add
push
mov
or
add
inc
dec
pop
int
xchg
ficompl
imull
cmp
push
out
cmp
test
mov
mov
es
cmc
cwtl
pop
jmp
sub
repz
jmp
mov
dec
shrb
sti
loope
and
mov
aaa
cmp
or
add
dec
mov
jle
rcrb
jl
icebp
mov
loope
mov
push
mov
fs
xlat
sub
out
nop
xchg
mov
orb
clc
aam
and
inc
pusha
sti
xchg
hlt
stos
xor
mov
push
cs
test
aad
shll
aas
pusha
aas
loopne
adc
push
push
inc
das
jmp
mov
mov
nop
and
and
in
loope
or
mov
dec
adc
adc
rcr
out
pop
sahf
or
xor
xchg
push
fucomp
jbe
mov
mov
test
push
adc
lea
into
push
testb
and
xchg
notl
test
lods
clc
or
lcall
xor
pop
push
jg
imul
jmp
jns
sbb
pusha
xor
sahf
in
mov
test
mov
ds
cs
repz
jnp
rol
xor
mov
and
icebp
bnd
and
outsl
add
and
es
xchg
mov
xchg
jns
xchg
imul
sub
cmp
mov
loope
push
sbb
fisttpll
iret
std
leave
ss
pop
mov
shll
repnz
stos
xor
call
in
mov
adc
mov
push
in
cmp
jne
xor
pop
mov
and
adc
push
fdivrl
aam
leave
test
mov
test
inc
adc
xchg
cmc
dec
or
movsb
xchg
sbb
pop
mov
cwtl
pop
pushf
aas
mov
sub
rorl
sub
push
iret
xor
sub
jecxz
push
addr16
cmp
xchg
push
mov
or
ds
rorb
lret
mov
pushf
in
pop
cmp
inc
mov
mov
inc
std
inc
fstpt
icebp
push
push
jmp
jp
movb
pop
adc
js
cmp
lds
inc
dec
xlat
test
mov
lock
adc
mov
cli
insl
test
nop
jmp
ret
push
pop
pop
mov
inc
stc
sub
xchg
xchg
xlat
inc
mov
int
inc
sub
mov
jmp
or
loope
scas
push
movsb
cwtl
mov
sbb
cmpsb
add
push
mov
pop
add
stos
push
mov
or
dec
cs
add
inc
xor
scas
aas
pop
cmp
push
fsubrp
push
xor
and
ss
aad
cmc
in
jno
aas
jg
sbb
lret
lret
loop
repz
movsb
pop
pushf
or
fistpl
sub
xor
movsb
adc
xchg
push
mov
mov
mov
cmp
int
xorb
and
adc
pop
xor
push
imul
add
adc
rol
adc
fildll
movsl
or
xor
add
xlat
psrld
jb
pop
pop
jle
movsl
loop
mov
pop
cmpsb
fcom
rclb
adc
imul
out
movsb
inc
out
movsl
or
and
fldcw
fsin
hlt
stos
rorb
adc
jnp
cmc
in
jle
xchg
nop
imul
roll
fimull
mov
lock
push
push
mov
lods
repz
mov
bound
inc
jbe
scas
insl
or
testb
inc
xchg
dec
fdivrs
movsl
pop
aad
leave
mov
pusha
icebp
ljmp
dec
movsb
mov
or
cmp
xor
add
push
jmp
or
jl
daa
cmp
es
xor
movsl
gs
xchg
shlb
cmp
sub
mov
pop
push
jle
and
add
lods
arpl
out
xchg
add
pusha
pusha
mov
int
push
mov
das
push
mov
mov
mov
ret
mov
and
insl
mul
xor
lds
loopne
jmp
pop
dec
mov
bound
fsubs
icebp
test
jns
add
jmp
cmp
xlat
and
sub
add
adc
mov
push
push
pop
pop
test
mov
sbb
jne
jp
popa
loop
mov
dec
stc
lods
mov
or
enter
push
aad
rolb
sbb
cmp
jne
push
pop
js
jne
fs
pop
inc
sbb
insb
xor
hlt
nop
sbb
and
xchg
fimuls
popf
je
sub
imul
or
shrl
out
jnp
fs
mov
xchg
fdivrs
movsb
push
or
les
lahf
in
mov
jge
push
hlt
inc
les
xlat
jecxz
repz
mov
call
gs
inc
and
arpl
sub
mov
cmp
add
inc
aaa
mov
or
je
mov
out
arpl
addr16
ja
and
mov
outsb
or
insb
in
lods
adc
loop
inc
mov
mov
pop
sub
test
lret
je
jb
out
sbb
clc
sti
fisubrl
hlt
jp
or
adc
incb
iret
lret
dec
pop
xchg
cltd
int3
xchg
popf
push
sbb
xor
mov
call
jmp
or
jne
test
jnp
fistps
jg
sbb
movsl
xor
add
jnp
cmc
mov
fidivl
xchg
cltd
cmpl
bound
dec
mov
mov
cs
or
jne
lods
clc
xor
cmp
ja
fdivs
sub
sub
xlat
test
push
fdivl
cmp
xchg
mov
and
aaa
push
inc
cli
sbb
lods
mov
jp
cld
add
mov
mov
and
repnz
outsl
cli
and
icebp
stc
arpl
and
xor
and
nop
dec
subl
stos
jae
push
cmp
cmp
les
mov
loopw
cs
push
in
pop
sub
jmp
push
sahf
mov
fdivrs
jns
repnz
inc
jne
xchg
punpckhdq
mov
dec
sub
orl
cs
mov
xor
sarb
xlat
dec
jecxz
jno
fstpt
sub
xor
mov
mov
dec
ljmp
push
fdivrl
jae
ljmp
into
sbb
addr16
adc
xchg
mov
outsb
push
dec
mov
adc
sarl
fadds
cltd
lea
lret
cmp
into
push
xchg
dec
mov
divl
movsl
mov
dec
jge
movsl
jns
mov
mov
push
jno
outsb
outsb
inc
or
testb
ja
inc
mov
mov
out
cld
sti
cltd
xchg
dec
loope
or
decb
repnz
in
out
imul
rorl
movb
inc
mov
pop
lcall
adc
and
pushf
movsl
cs
inc
dec
hlt
mov
dec
gs
adc
xchg
and
fdivr
xor
popa
push
lods
in
xor
mov
jmp
push
fidivl
imul
std
mov
mov
fildl
in
sbb
or
sub
sub
or
mov
mov
jns
int3
ljmp
adc
insl
fidivrl
sbb
xor
lret
sarb
xorw
aas
out
test
dec
aaa
push
xchg
inc
pop
adc
adc
test
pop
lret
mov
rclb
mov
popf
out
and
pop
sub
mov
add
and
ret
mov
mov
mov
or
into
and
movsb
sbb
mov
jnp
adc
inc
and
adc
xchg
nop
sbb
fldenv
int
mov
imul
xor
and
sbb
sahf
ds
cmp
insb
mov
pushf
lods
lods
cmc
loop
mov
jno
dec
pop
mov
adc
fistl
xchg
jle
jne
sub
push
sahf
test
mov
addr16
faddl
jmp
sarl
add
mov
test
pop
rorb
movsb
addl
shlb
ficomps
in
movsb
xchg
sub
shrb
or
loopne
mov
or
cmp
out
loopne
lds
pusha
pop
add
mov
test
gs
cmpsl
sub
xlat
shlb
xlat
movsb
push
cmpsb
scas
sub
jo
xchg
pusha
scas
mov
fs
push
clc
scas
xor
jp
in
flds
clc
inc
fwait
dec
sub
pop
pushf
orb
loope
adc
mov
jp
lret
loope
inc
outsb
lds
cwtl
pop
sbb
data16
push
add
add
sub
adc
icebp
insb
sbb
outsl
push
pop
insb
or
in
jbe
divb
aas
jge
cmp
out
adc
jo
push
cs
mov
mov
cli
lods
xchg
dec
rcrl
cmp
popf
icebp
aas
ljmp
sub
add
mov
shrb
xchg
jno
sbb
fwait
dec
adc
imul
cltd
lds
daa
arpl
mov
and
icebp
test
jbe
std
mov
cs
dec
pop
aad
js
or
mov
or
push
jp
jns
or
sti
push
mov
push
aas
push
hlt
lea
and
movsl
insl
xor
insb
and
sbb
mov
add
and
out
push
test
imull
adc
aaa
dec
xchg
dec
jmp
mov
push
inc
in
cmp
stc
cli
pop
and
xor
addb
adc
mov
mov
call
xor
or
and
jo
mov
push
sbb
ljmp
mov
mov
orl
insl
aad
or
pop
adc
or
popf
add
jb
mov
push
jle
jp
jp
test
add
pop
sahf
popa
add
dec
sub
sub
sub
push
test
lahf
mov
ret
xor
pop
inc
xor
movsb
fsubrs
sbb
das
mov
fistl
jecxz
xchg
mov
fs
jle
int
mov
aaa
mov
jmp
add
cld
lcall
cmp
ret
mov
jb
jo
rolb
inc
out
push
inc
xlat
and
dec
xchg
ret
ret
adc
inc
inc
movsb
stos
lahf
push
xchg
xor
icebp
xchg
aaa
sbb
xor
sbb
js
outsb
cmc
lahf
fidivrs
xchg
jmp
in
stos
pop
mov
mov
outsb
popf
aad
cs
ret
rorb
cmp
loope
repnz
pop
jo
inc
jnp
clc
dec
mov
fdivrs
cmp
imul
push
or
mov
mov
aad
add
clc
fidivs
sbb
dec
xchg
call
lods
jmp
mov
imul
mov
loopne
push
insb
in
clc
add
ss
scas
sbbb
cmp
jmp
mov
jb
pop
data16
cld
cmpsb
sbb
pusha
push
add
mov
insb
mov
std
jge
jecxz
cmp
adcl
mov
lahf
test
cwtl
mov
stos
and
add
dec
mov
fmuls
aaa
push
cmp
cwtl
insb
pushf
jp
mov
and
jmp
lods
stos
lret
scas
test
cmp
adc
scas
mov
je
movsl
iret
push
aaa
jb
shrl
mov
test
stc
lahf
or
and
dec
cmp
loop
rol
stos
fs
sti
outsb
fildll
in
mov
test
mov
push
dec
cwtl
rorl
pop
sub
cmpsb
out
or
inc
daa
mov
das
pop
sti
xor
filds
adc
prefetch
fadds
enter
loope
sub
scas
pop
insb
jp
cmc
clc
push
adc
nop
out
xchg
rcr
or
sbb
cli
imul
and
mov
fwait
jne
outsl
mov
les
inc
mov
push
ljmp
xchg
lods
in
sub
test
jne
in
push
stc
xlat
dec
jge
mov
lock
mov
pop
pop
mov
frstor
std
inc
jle
mov
push
fwait
cmp
scas
jno
sub
out
cmp
mov
sarl
mov
movsl
cmp
inc
push
iret
notb
notl
add
enter
and
push
push
fcompl
inc
loope
inc
subb
xchg
into
loop
fisubrl
sub
sbb
jno
in
enter
cmp
xchg
fstp
clc
jbe
ret
out
roll
and
fdiv
test
fs
mov
int3
aas
fstpl
popw
into
std
xchg
gs
imul
scas
sub
cmpsb
adc
xchg
test
xor
sub
cli
pop
punpcklwd
adc
popf
lahf
mov
sub
mull
les
inc
and
or
cmpsl
jne
mov
and
out
pop
lret
loop
cmpsl
adc
cmpsb
popa
loope
js
shlb
mov
or
xor
pop
fmull
xchg
loope
xor
mov
and
sbb
lods
dec
jmp
cmpsb
add
sahf
jg
or
ret
mov
mov
daa
dec
cmp
outsb
sub
pop
adc
inc
iret
push
push
fabs
cmp
rolb
test
or
hlt
cmpl
push
mov
ljmp
mov
scas
push
int
xor
enter
movsl
dec
push
ss
in
push
in
dec
lods
sub
or
es
mov
movsl
loopne
call
pop
fdivrs
xor
inc
add
lret
or
xor
insb
fwait
mov
sbb
dec
mov
bound
mov
insb
test
push
jae
sbb
dec
iret
xchg
dec
adcb
xchg
adc
pop
mov
setno
push
push
scas
mov
push
lea
adc
ss
ljmp
cmpsl
cli
and
sub
push
test
mov
xchg
mov
daa
inc
into
adc
js
shl
int
cmp
mov
adc
cmc
jns
test
xlat
in
pop
cmp
add
mov
cmpsb
push
fcmovnb
popf
jb
int
and
lret
sbb
outsb
pop
dec
repz
jnp
adc
jmp
mov
pop
mov
adc
int3
fldl
cmp
and
dec
cmp
setne
add
and
movsl
lock
sarl
or
and
loopne
push
xchg
cmp
aad
stos
mov
cmpsl
jmp
addr16
push
addb
mov
loop
cld
adc
pop
sahf
jle
jne
mov
aas
jge
in
inc
inc
push
lock
and
mov
jae
jns
jmp
mov
cwtl
cmp
popa
mov
loop
push
mov
les
in
mov
push
jbe
jne
pop
movsb
fisttpl
pop
push
mov
pop
push
imul
cld
add
jle
or
loope
cmp
push
test
push
in
shrl
rol
fwait
mov
and
repz
aad
fldt
push
jl
in
jae
scas
movsl
outsl
insl
test
push
iret
int
pop
pop
push
push
cli
sbb
das
lfs
xor
sti
and
sbb
int3
jne
lret
sbb
lods
das
dec
or
outsb
testb
clc
aad
pop
test
mov
add
mov
mov
mov
scas
mov
stos
cli
lretw
jmp
dec
xchg
mov
aaa
pop
iret
imul
les
testb
mov
scas
repz
rclb
cmp
orb
icebp
pop
out
test
dec
or
leave
adc
xor
repnz
insl
lods
push
pusha
adc
daa
into
daa
loop
rcll
clc
pop
int3
sti
add
mov
inc
test
data16
add
aas
cs
mov
ret
loopne
into
add
add
data16
ret
push
xchg
dec
mov
lret
arpl
mov
scas
andl
jne
dec
mov
fcmovbe
test
sub
jp
call
sahf
sub
dec
ss
popa
ss
sub
ffreep
jle
cmpsl
ja
push
clc
or
push
mov
fldcw
inc
and
loope
bound
adc
hlt
dec
mov
or
sub
push
pop
andb
adc
add
aaa
xchg
test
sub
xchg
fsubl
xor
loop
mov
cmovge
pop
cmpsl
ret
adcb
push
pop
sub
dec
std
adc
or
cmp
sahf
fiaddl
icebp
nop
pop
or
mov
daa
es
mov
mov
je
cwtl
lea
push
idiv
xor
cmpl
sub
popa
xchg
add
sub
mov
insb
jge
jbe
pushf
mov
rol
iret
clc
mov
xchg
movl
sub
push
pusha
imul
fwait
movsb
sbb
scas
pop
push
or
cmpsl
sub
out
sub
jno
sbb
push
sub
cmp
sbb
sbb
push
and
lcall
pusha
dec
addr16
push
xor
xor
sbb
push
repnz
lret
jecxz
in
rcll
push
lock
xchg
js
pop
lds
adc
cmc
mov
mov
push
or
icebp
sbb
cltd
stc
ficoml
fistpl
xchg
lahf
mov
pop
popf
and
mov
out
xlat
or
test
das
aad
fincstp
ds
jbe
pop
scas
xchg
stos
xchg
push
ja
lea
int3
gs
jns
push
in
popf
or
mov
dec
push
nop
scas
dec
sub
push
mov
pop
ss
cmpsb
and
xchg
or
add
xchg
in
adc
in
cmpsl
pop
dec
push
or
mov
sub
dec
mov
adc
test
loop
daa
jnp
mov
pop
xor
dec
cld
push
clc
jge
sub
and
rcl
pop
decl
xchg
xlat
push
mov
cld
dec
sub
sbbl
push
daa
test
pop
sti
test
fwait
inc
in
sbb
cli
js
mov
jns
pop
dec
in
addb
and
cs
stos
sahf
jns
arpl
outsl
sbb
es
cmpsb
cmp
inc
push
xor
add
xor
jns
fcmovnu
test
xor
sub
xchg
clc
into
mov
add
jg
test
rclb
insb
cwtl
pop
sub
add
jno
movsl
arpl
frstor
add
outsl
nop
add
inc
icebp
lods
popf
movsb
dec
pop
mov
xchg
cli
dec
push
mov
mov
cmp
or
pop
out
lret
cmp
pop
repz
push
cs
sub
sub
ret
xor
rclb
and
sbb
imul
inc
fidivs
inc
lods
in
adc
sarb
test
xor
xor
cwtl
pop
xchg
jge
pop
sbb
sub
xor
pop
mov
and
je
test
adc
pop
dec
sbb
fmuls
xor
push
mov
pop
xorl
jecxz
repnz
stos
es
cmp
cmpb
lahf
mov
mov
add
fwait
mov
and
rorl
mov
xor
test
xor
jns
xor
scas
or
lds
jbe
in
xchg
sbb
and
sbb
push
icebp
pusha
lea
cmc
xchg
in
lret
push
das
adc
lret
aas
ss
call
mov
test
out
fldcw
ljmp
outsb
sbb
inc
add
in
xor
pop
mov
std
mov
imulb
subl
dec
push
pop
outsb
call
cmpsb
and
mov
jns
push
test
mov
leave
fisttpl
arpl
and
out
mov
jbe
mov
xchg
cmp
inc
lret
arpl
in
add
xor
and
enter
ret
inc
mov
arpl
mov
cmp
pop
cmpsb
out
nop
shrb
divb
mov
jp
aad
imul
fwait
in
add
bound
cwtl
push
add
mov
mov
push
jo
mov
fsubs
cld
js,pn
pusha
adc
mov
ja
jb
mov
clc
fadds
iret
pop
push
leave
mov
or
sbb
jle
clc
daa
sub
out
adc
movsl
insb
dec
inc
xor
mov
mov
stos
xchg
xor
aaa
lods
ret
push
pop
mov
out
mov
adc
js
fldcw
xchg
jno
cmp
lds
test
mov
sti
jecxz
jp
pushf
ja
into
mov
dec
sub
sbb
call
es
dec
cli
mov
cli
dec
add
cmp
out
push
data16
ficoml
xchg
mov
ret
fxch
loope
aam
outsl
xchg
stos
sbb
jnp
fs
cld
scas
xor
dec
and
mov
enter
dec
lahf
fistl
xor
divb
xchg
mov
xor
lahf
add
aad
and
mov
loope
pop
arpl
js
xchg
pop
add
sbb
and
jle
lods
int
in
cltd
jne
adc
js,pn
xchg
pop
jno
fcoms
and
dec
icebp
mov
cmp
ljmp
rol
xchg
sti
jge
cmp
push
add
adc
test
leave
pop
and
lret
sbb
or
push
sub
daa
in
dec
je
mov
cmp
xchg
fcmove
cmpsl
dec
into
lea
in
sti
nop
cmp
push
cli
xor
fs
mov
pop
loop
cs
mul
and
mov
cmp
push
rcr
ds
mov
ret
shll
add
aam
xor
mov
mov
sbb
xchg
movsl
mov
pop
push
jns
lods
lret
popa
popa
and
jge
stc
int
sub
bound
adc
loope
in
adc
adc
push
add
dec
sbb
jns
cmpb
leave
mov
add
je
lods
xor
mov
adc
cwtl
popf
in
xor
mov
fcmovnb
xchg
and
popa
mov
cwtl
jns
mov
mov
pop
inc
push
iret
xor
inc
lods
sub
sbb
pop
mov
ret
xchg
out
fsubrp
mov
int
push
call
sub
jbe
adc
dec
movsl
loopne
jg
popa
hlt
xchg
adc
xorl
jmp
out
cwtl
loop
mov
test
pop
push
popf
jbe
mov
sub
jle
xchg
inc
cltd
lret
pop
sbb
int
pop
adc
and
dec
pop
jg
icebp
loop
cs
adc
das
addl
dec
sbb
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
mov
jl
pop
jl
inc
mov
lcall
xor
push
mov
push
mov
and
mov
cmp
mov
bound
jmp
adc
cmp
dec
cmp
imulb
xor
jb
jb
pushl
add
ss
jp
arpl
jg
gs
fcompl
lea
loopne
out
int
add
imul
out
test
das
fsincos
mov
or
les
hlt
rorl
int
xchg
icebp
push
stos
adcb
mov
and
pop
pop
sub
bound
mov
imul
and
stos
ror
jle
std
fsub
andl
add
push
fdivl
adc
mov
test
arpl
dec
movsl
fadds
mov
aaa
jle
xchg
stos
inc
push
sbb
xchg
jbe
mov
and
cltd
push
aas
ja
or
jmp
and
xchg
mov
sub
push
lods
arpl
fcmovu
mull
dec
pop
mov
test
inc
out
push
push
jnp
imul
ret
scas
rcl
mov
jp
imul
je
sbb
sub
cmp
pushl
sub
shll
cmp
addr16
inc
and
push
div
and
mov
lods
ret
pop
stos
push
and
cmpsb
pop
sub
adc
or
add
shll
sar
xor
lcall
jecxz
lods
sbb
dec
mov
sbb
mov
lahf
sahf
or
pop
pop
and
dec
insl
mov
and
lods
dec
mov
cmp
cmp
sbb
movsl
dec
push
xchg
xor
jle
mov
adc
jb
jmp
push
jb
push
ja
push
cs
lods
scas
mov
out
daa
add
lods
xchg
jns
or
imul
stc
data16
pop
mov
lds
xor
mov
push
dec
imull
fldt
clc
mov
cli
out
sbb
test
jnp
jg
test
mov
sub
jno
dec
jmp
dec
fidivl
xchg
out
mov
dec
mov
xchg
mov
adc
in
mov
fs
in
imul
pop
mov
lcall
data16
cmp
sbbl
in
mov
jp
mov
mov
mov
sbb
xchg
adc
sub
dec
popf
adc
fistl
mov
popa
inc
into
mov
inc
sbb
push
ret
jns
scas
mov
pop
fisttps
push
jo
sbb
imul
xchg
xor
int3
imul
lret
ljmp
push
cltd
push
ret
out
les
sub
lods
aam
pop
dec
and
mov
loope
cmp
xchg
out
xchg
scas
inc
cwtl
pop
dec
aas
mov
aad
sti
jg
sbb
xor
cmp
jl
test
mov
insb
inc
sbbl
mov
imul
pop
xor
jecxz
sbb
adc
dec
pusha
mov
sbb
adc
or
push
jge
push
adc
lods
or
inc
and
leave
lock
int3
adc
movl
inc
lahf
xchg
es
mov
cwtl
xchg
pop
loopne
lahf
dec
fwait
movsl
pop
jl
mov
faddl
dec
sub
cli
mov
or
push
mov
imul
and
xor
add
cmp
mov
aaa
sbb
add
add
jno,pt
pop
push
test
xchg
sti
add
nop
andl
or
push
adc
lret
mov
cld
repnz
rolb
ljmp
stos
rorb
sbb
sub
stos
lahf
jecxz
xchg
js
call
loopne
fdivs
dec
sti
fdivl
cmp
out
pop
or
pop
mov
mov
pushf
icebp
pop
loope
push
jp
mov
iret
adc
add
inc
bound
shlb
pushf
scas
sti
test
aas
test
aaa
add
mov
add
sub
clc
inc
push
sbb
inc
rorb
ret
sub
pop
outsb
jne
int
mov
test
jbe
dec
sti
xlat
push
addr16
mov
testl
ds
xlat
fistpll
adc
lahf
xorb
aas
aaa
cmp
iret
in
adc
imul
ljmp
push
and
or
xor
mov
and
push
aas
mov
dec
sbb
jbe
mov
shll
add
pop
pop
out
dec
std
mov
addr16
adc
jmp
xchg
inc
sub
mov
cmp
push
leave
imul
je
fadds
pop
or
mov
in
mov
lds
adc
jp
or
xorl
or
mov
popa
sti
cmp
shlb
aad
inc
rcrb
sub
mov
sbb
xchg
xlat
lods
stc
loopne
fs
mov
xchg
sbb
adc
lret
xchg
test
fstl
push
xchg
sub
rorb
loopne
cltd
in
sbb
dec
pop
test
stc
cmc
lea
or
add
jg
mov
sbb
lret
cmc
sbb
int3
ret
insb
fs
aaa
out
fsts
js
xchg
sbb
shlb
ja
les
sbb
cmp
mov
add
xlat
loope
cli
mov
clc
jmp
js
add
ficompl
daa
push
lret
add
dec
lods
sti
adcb
dec
add
mov
cmpsl
mov
dec
jnp
ds
sub
jae
xlat
fdivrl
mov
les
dec
rorl
in
push
in
shlb
test
imul
mov
xor
add
addr16
xchg
mov
mov
idivl
sbb
inc
into
jno
lahf
jno,pn
out
cmp
sub
mov
call
mov
push
cmp
lods
lret
cmp
cld
push
insb
pusha
fmull
hlt
pop
jbe
les
mov
jbe
gs
push
fwait
out
nop
pushf
or
ret
xor
fisttpl
test
push
xor
pop
mov
lahf
add
inc
jns
add
or
in
mov
icebp
fidivrl
movsb
fisttpll
imul
addr16
push
pop
loope
sbb
xchg
sahf
hlt
lds
aad
push
xor
sbb
ficoms
lods
mov
rolb
push
inc
fbld
pop
lret
mov
into
jo
rcll
add
add
pusha
cmp
fidivrs
imul
bnd
popf
push
pop
orl
enter
mov
cmc
xchg
mov
or
ss
cmp
mov
aaa
out
or
pop
clc
pop
or
cmc
lds
adc
jp
mov
enter
hlt
lds
adc
lea
aas
xchg
mov
cs
ljmp
pop
out
adc
out
xchg
sarl
lds
jecxz
sub
addr16
leave
dec
cmp
xchg
push
push
scas
inc
mov
mov
dec
inc
and
xorb
xchg
test
add
stos
aad
test
ret
es
mov
mov
sub
cmpsb
fiaddl
xor
fs
mov
fldl
mov
popf
shlb
aam
xchg
xchg
out
popa
dec
jecxz
xchg
and
inc
sbb
dec
adc
fsubrs
leave
iret
fldcw
sub
or
cmpsl
iret
push
xor
out
lahf
mov
test
fnsave
adc
jle
cltd
inc
cmpsb
cmp
stos
push
in
cmp
rorb
lds
jnp
mov
scas
and
sbb
xchg
mov
xchg
cmp
lret
lock
jle
cmp
cmp
mov
cmp
scas
jb
sbb
or
mov
into
xchg
insb
cmpsb
mov
fstpt
jmp
jmp
outsb
mov
cmp
enter
pop
daa
les
adc
push
jl
mov
movsb
std
into
test
or
cltd
pop
or
jecxz
addr16
fsubrl
test
test
daa
insb
hlt
inc
sbb
scas
outsl
fs
adc
sub
mov
add
scas
xor
cmpsl
out
xchg
andps
es
lcall
pop
mov
test
mov
js
ret
mov
sbbl
insb
cmp
fs
insl
ret
data16
cli
outsb
mov
mov
xor
jo
arpl
dec
sahf
dec
ficompl
daa
dec
cmp
hlt
jae
icebp
and
adc
insl
dec
fnstsw
scas
dec
ror
aad
inc
lcall
jle
das
cwtl
sti
iret
sub
ss
sti
push
adc
and
fcoms
pop
sub
cmc
insb
iret
and
mov
mov
mov
and
sub
adc
xchg
jecxz
int3
loopne
lcall
dec
push
adc
xor
cmpsl
insl
jg
pop
fcomip
bt
pusha
jo
cmp
pop
add
movsb
adc
stos
mov
jbe
inc
mov
sbb
sub
lret
mulb
dec
cmp
mov
jmp
or
adcl
clc
push
mov
stos
jge
inc
pop
scas
test
jg
in
push
popa
stos
rcr
sti
xchg
ret
xchg
aas
xchg
and
out
inc
inc
sub
mov
lahf
xor
xor
xchg
push
or
push
cmpsb
insb
movsb
xchg
mov
xchg
adcb
lea
sub
lea
pop
cmpsb
xchg
xlat
pop
pop
cmp
outsl
cmpsb
shl
cmp
cld
andl
in
push
mov
adc
mov
addr16
lods
mov
dec
inc
jmp
add
dec
clc
sbb
jno
outsb
ja
sarb
jno
mov
or
or
test
xchg
fisubrs
test
ja
and
mov
mov
mov
psubb
inc
fcomi
aas
push
loop
daa
aas
shrl
adc
pop
mov
pop
out
les
and
and
mulb
pop
inc
sbb
std
and
pop
jecxz
arpl
repz
mov
les
mov
das
mov
sub
cmpsb
mov
nop
sub
std
andl
push
addr16
movsb
sub
hlt
rcll
adc
cld
in
mov
mov
loop
and
push
and
mov
mov
push
sti
out
mov
sti
arpl
test
inc
incl
cmp
inc
dec
bound
cmp
sbbl
jg
push
sbb
push
inc
cmp
mov
xchg
fsubl
jge
push
insb
jo
dec
insl
filds
nop
cs
test
jg
jo
cmp
cwtl
cmp
daa
fndisi(8087
cld
jp
lods
fsubrl
or
pop
ret
cmp
das
testl
lahf
push
mov
outsl
fdiv
and
jb
inc
push
sub
stc
in
mov
xor
inc
fsubrl
jns
pop
push
xor
aam
sub
pusha
jle
imul
add
jle
aam
jle
cmp
pop
ljmp
dec
enter
mov
xlat
mov
pop
jl
cmp
push
jae
sub
test
xchg
xchg
add
in
icebp
push
mov
cld
adc
push
inc
cmp
lcall
aad
movsl
mov
imul
ret
mov
ljmp
dec
rcl
loopne
dec
dec
les
iret
cmp
jmp
ljmp
adc
mov
dec
jmp
in
cld
fisubrl
cld
and
ds
test
mov
mov
pop
scas
and
popa
insb
cmp
and
lea
ds
mov
or
lret
stc
sti
movsb
xchg
or
decb
imul
adc
into
scas
pop
test
push
nop
add
mov
and
ret
inc
mov
sbb
jo
imul
xchg
out
sarl
jns
xor
pop
int3
mov
imul
sbb
sub
test
stos
imul
out
hlt
fstp
cmp
sub
pop
push
mov
popa
popa
jp
subl
jbe
ficoms
aam
orb
xchg
mov
out
dec
adc
inc
test
cli
add
ret
pop
add
sbb
push
sub
mov
mov
addr16
in
int3
dec
add
sbb
cmpsb
jne
shr
and
jp
and
xchg
cmpsb
jns
dec
dec
jno
int
lock
test
test
dec
incb
or
dec
adc
dec
push
outsb
add
das
adc
loop
dec
dec
dec
push
call
and
or
dec
add
and
push
add
test
push
xchg
or
cli
test
dec
addl
in
or
jge
jl
inc
sti
fwait
repz
lea
inc
mov
pop
les
mov
xchg
or
dec
lods
or
cmp
jp
sbb
xchg
mov
sub
cld
push
pop
mov
hlt
and
test
jnp
fimuls
shll
cmpsl
or
inc
leave
and
and
ds
outsl
adc
cltd
inc
or
or
clc
cmpsb
cmp
jb
jns
adc
pushf
add
lods
inc
push
int3
repz
add
je
mov
xchg
loope
pop
xor
sbb
jp
inc
scas
xor
adc
sbb
insl
xor
out
testl
mov
mov
dec
pmaddwd
ret
sbb
test
and
rol
gs
lea
insl
xor
mov
bound
push
mov
and
mov
idivb
in
es
repz
movb
or
sti
bound
sbbl
call
jge
mov
repz
xchg
cmpsl
icebp
fwait
mov
into
push
sub
add
mov
mov
in
pop
inc
push
add
push
mov
stos
ret
jg
pusha
jno
lret
repz
push
pop
sarb
xchg
out
add
add
sbb
mov
cmc
pop
lret
cmp
xchg
pop
sbb
fdivr
mov
dec
xor
or
add
ret
dec
or
sub
sbb
insl
hlt
je
push
cs
pusha
out
inc
out
mov
pop
add
dec
lret
xor
loope
imul
inc
pusha
pop
jne
hlt
sub
pop
movsb
ss
icebp
inc
pop
dec
sti
cld
mov
mov
push
and
fisttpll
icebp
imul
mov
ret
and
pop
jmp
mov
xor
jae
inc
insb
adc
xor
sbb
bound
shl
mov
fs
add
fs
jnp
testb
dec
scas
outsl
xchg
mov
imul
dec
scas
sbb
in
jge
mov
jno
subl
pop
lcall
xorb
mov
jmp
popa
pop
sbb
pushf
or
stos
mov
insl
xchg
imul
push
outsb
bound
into
lods
mov
dec
or
push
subl
pop
insb
repz
mov
xor
aaa
push
push
add
out
subl
add
es
lods
leave
pushf
and
and
mov
cld
push
test
in
inc
mov
subl
repnz
dec
aas
cmpsl
pop
adc
dec
cmp
insb
dec
fwait
call
sbb
ret
dec
in
add
repnz
lea
jmp
xchg
int
dec
add
add
and
scas
bound
inc
ret
cmp
push
rclb
fistpl
ja
mov
push
rcl
mov
xor
std
lret
mov
xor
ds
dec
push
les
adc
pop
and
bound
movsl
mull
sub
xchg
in
pop
push
mov
mov
add
xchg
addr16
sbb
stos
xorl
lret
insb
jno
push
add
gs
pop
movsb
mov
shr
fsts
js
cmp
inc
ss
or
loopne
pop
jne
out
or
jbe
cmp
stos
scas
push
and
mov
mov
mov
adc
imul
or
xlat
roll
loope
sar
stos
mov
lea
push
fcmovb
sub
push
xorl
dec
add
roll
fwait
cmp
insl
hlt
jecxz
push
add
jle
stc
jmp
leave
xor
aad
hlt
mov
jns
fwait
fwait
stos
in
add
xor
or
cmp
lret
sbb
mov
jmp
push
cmp
add
mov
insb
and
das
lock
sbb
mov
hlt
shll
jge
push
xorl
add
dec
mov
add
xchg
pop
fidivl
and
out
pusha
inc
add
or
xchg
cmp
jae
shll
mov
add
inc
jo
cmp
fcoml
cmp
jo
sub
dec
and
test
fadds
or
xorl
push
in
push
cs
sub
movl
imul
inc
mov
ds
add
sub
notl
shll
xchg
idivl
shlb
fisttpll
lahf
stos
fildll
es
add
jl
sub
enter
popf
mov
cmpsl
mov
stos
jmp
mov
pop
sbb
mov
shrb
test
inc
mov
jmp
scas
push
sbb
sub
enter
pop
or
dec
bound
add
inc
pop
mov
cmpsb
inc
in
negl
stos
lret
and
sbb
ret
mov
cld
leave
or
push
and
push
inc
mov
xchg
jb
add
mov
cmp
and
or
std
lods
adc
or
and
xor
xchg
inc
mov
ljmp
mov
jo
or
les
push
mov
pop
data16
or
stos
insb
xor
lds
scas
cmp
inc
inc
push
in
push
sahf
push
sub
fiadds
pop
inc
push
or
aas
iret
cli
inc
sahf
ss
mov
sub
popf
mov
cmc
ljmp
ja
lods
adc
mov
subb
lret
inc
add
pusha
push
xor
xor
xor
sti
adc
jb
cmp
jnp
mov
and
xchg
push
jnp
into
clc
clc
ret
mov
mov
push
jg
and
jo
pop
pop
nop
adc
pusha
icebp
cs
and
sub
call
jns
inc
cmc
fdivrl
xchg
loope
cmp
ljmp
xor
fnsave
cltd
scas
daa
sti
leave
jg
push
or
mov
xchg
dec
push
cmp
imull
adc
adc
popa
push
int
loop
cltd
push
pop
or
cld
or
ljmp
outsb
jge
cmp
mov
aas
push
mov
inc
int
repnz
sub
movsl
ret
or
cmp
or
inc
mov
jl
pop
clc
cwtl
ffreep
adc
xor
push
mov
andl
xor
sbb
scas
push
imul
out
xchg
repz
inc
mov
popl
sbb
sahf
orl
cmovnp
mov
push
loopne
and
lcall
xor
lcall
or
and
mov
movsb
mov
das
sbb
xchg
push
sbb
jge
cmpsb
pop
nop
push
jb
jo
aad
lret
inc
jge
cmp
jns
cmpsb
mov
cltd
je
and
dec
scas
sub
out
mov
pop
cmc
stos
sbb
xchg
es
or
lahf
mov
dec
pop
xchg
inc
popa
bound
test
pushf
fs
lods
cmc
in
xchg
fwait
lret
fadds
add
mov
popf
idivb
hlt
jle
push
popf
xchg
loopne
add
jecxz
cs
dec
pop
or
sbb
cld
loopne
push
add
adc
je
js
fstpl
jg
and
repnz
pushf
adc
int
mov
or
jg
dec
adc
push
stc
in
push
add
xor
scas
xor
sahf
mov
jle
insl
push
lods
xlat
insb
xor
in
dec
mov
in
out
push
sbb
and
xchg
xchg
cmp
scas
jle
cltd
jnp
pop
add
jne
dec
ret
mov
in
fstl
cmp
dec
inc
inc
movsl
jg
notb
mov
sub
mov
fucomp
push
cwtl
and
jbe
sarb
std
mov
jnp
jg
push
adc
xlat
lret
push
aam
jne
dec
mov
and
or
pushf
in
cmp
hlt
jo
jecxz
into
icebp
andb
fisubrs
mov
dec
sub
mov
push
mov
loopne
stos
loope
loope
sbb
ds
and
fildl
or
movsl
inc
lock
push
iret
or
sti
int3
pop
out
and
pop
pop
orl
xchg
in
dec
ds
cmc
dec
movsl
shll
mov
fcom
mov
ds
cmp
sti
inc
adc
popf
or
out
ret
jnp
int3
das
inc
scas
push
push
pop
fldenv
dec
loopne
loopne
xlat
push
jmp
aas
aas
ja
sti
stos
push
inc
jl
push
das
arpl
xchg
ret
dec
xor
jno
popf
sti
push
cmp
mov
dec
xchg
faddl
inc
stc
sub
and
sbb
cmp
ss
mov
lret
shrb
hlt
in
cmpsl
sbb
push
inc
ja
sahf
jmp
push
xchg
push
inc
sbb
subl
mov
xchg
cmpsl
dec
test
and
mov
xchg
mov
ss
jb
stc
fisttpl
sbbl
int
sbb
sahf
idiv
dec
imul
dec
sbb
rolb
imul
lds
std
mov
pop
fmul
call
push
push
or
push
je
add
xor
enter
mov
out
stos
cwtl
xor
mov
xchg
lods
test
es
push
cmp
int
mov
stc
je
inc
bound
cmp
push
ja
lea
loope
sub
xchg
jo
mov
es
jns
dec
sbb
sub
cld
jp
mov
shll
mov
pop
ja
cmpsl
nop
pop
cld
addr16
xor
sbb
int
sbb
xchg
incb
cli
pop
or
cmp
gs
out
aaa
addr16
sub
mov
add
jbe
or
or
scas
cld
popf
xor
xor
xchg
jp
add
jno
insl
iret
icebp
pop
xchg
jns
das
inc
push
int
ja
rclb
sbb
xchg
cs
mov
sub
and
fstps
xor
dec
imulb
ds
rcll
xchg
adc
movsb
xchg
sbb
lahf
fs
sub
mov
adc
int
aas
shrl
fisttps
sbb
or
dec
jo
data16
loope
inc
out
push
in
in
jecxz
shl
or
pop
sti
jle
stc
mov
and
xchg
lcall
push
dec
test
push
pop
mov
lret
jbe
fstl
mov
and
jp
pop
mov
or
iret
or
loopne
inc
mov
out
mov
push
test
test
push
arpl
pop
nop
jbe
add
sti
and
ret
stc
out
jns
sbb
nop
fs
adc
push
mov
lcall
cmpsl
sbb
mov
fldenv
push
cwtl
in
mov
jne
fwait
dec
daa
mov
int3
mov
movb
fsin
addr16
pop
push
jg
int
out
lret
enter
out
sub
mov
mov
or
cmp
lods
enter
or
pop
lods
sbb
imul
mov
xchg
je
lea
inc
sahf
mov
xor
pop
sub
sbb
es
or
sti
mov
xlat
cmp
cmc
repnz
cwtl
out
dec
mulb
dec
lods
lds
es
loopne
test
add
adc
or
js
jbe
inc
xor
and
arpl
mov
aam
test
aaa
inc
mov
es
lds
rcll
popf
sub
sub
inc
bound
sbb
in
xor
lds
cmpsl
cmpb
enter
into
xchg
push
pop
mov
or
enter
in
jmp
popf
lock
sub
popa
cmp
pop
cwtl
lcall
fs
mov
sub
aas
fisttps
adc
sub
stos
insl
ficoms
test
xor
cmpsb
mov
xor
or
cld
xchg
outsb
jnp
mov
out
adc
into
jge
fnstsw
data16
lds
rcrl
fmul
mov
cmp
cmpsl
fcoml
aad
leave
inc
cwtl
in
fwait
clc
mov
fsubl
in
lods
testl
cmpsb
dec
dec
rcll
dec
push
stos
or
int3
stos
out
xchg
inc
jb
loopne
push
dec
popf
adc
pop
jb
add
inc
xor
push
pop
mov
inc
jecxz
fstpt
shl
mov
imull
pop
movups
mov
lret
lret
and
xor
popf
xchg
cmp
sbb
lods
push
jge
shl
in
adc
add
stos
out
imul
mov
inc
pop
test
repnz
add
push
test
xor
into
leave
dec
ret
rorb
pop
and
je
xor
pop
or
lret
mov
sbb
xor
cmp
and
in
cmp
in
fstpl
sub
cwtl
pop
dec
fidivl
test
mov
mov
enter
stc
cmp
aaa
call
xchg
outsb
or
into
sti
lret
add
fsubrs
jb
pop
mov
lret
mov
gs
pusha
and
and
in
das
and
mov
movsb
sub
dec
push
test
out
adc
gs
jb
nop
mov
inc
dec
mov
push
dec
xor
insb
and
pop
push
aaa
pop
mov
add
sub
int3
push
xlat
mov
inc
in
xchg
sbb
jmp
lea
cli
push
xor
add
inc
and
insl
push
push
mov
pop
scas
stos
cltd
outsl
sub
fmul
dec
cmp
cmp
cmp
push
xor
sub
dec
sub
and
pop
add
adc
sbb
inc
lock
shr
std
xor
outsl
test
mov
ds
aad
mov
out
jne
xchg
add
std
int3
fistpll
xchg
dec
pop
and
clc
pusha
jns
insb
jbe
mov
mov
int
mov
mov
mov
pop
mov
dec
sub
cltd
push
adc
sbb
or
mov
xor
xor
mov
repnz
aas
and
jl
dec
jge
out
sbb
adc
shlb
out
bnd
cmp
roll
ror
push
jmp
adc
loope
xchg
sbb
call
sahf
std
idivl
mov
cltd
int
pop
jne
rcrl
xorl
and
dec
ja
fwait
lahf
or
sub
popa
mov
push
mov
loopne
cwtl
pop
mov
pop
dec
inc
stos
inc
push
cmc
sub
cld
sahf
and
jne
out
or
mov
andl
lret
mov
in
cmp
ljmp
repnz
inc
and
add
js
inc
leave
cmp
mov
push
incb
jns
fcomp
sbb
sub
inc
loopne
testl
enter
call
out
push
mov
xor
add
int3
adc
sbb
sbb
int
and
sahf
mov
and
sbb
aad
jl
cmp
in
add
ret
lcall
sbb
dec
leave
cli
jb
xchg
cmp
xor
jmp
in
inc
or
sbb
dec
rcrb
lods
mov
out
push
test
leave
out
and
arpl
adcb
imul
and
shlb
mov
js
ds
dec
mov
pop
mov
mul
mov
test
mov
sbb
dec
sbb
xchg
cwtl
push
ret
dec
and
cltd
xchg
cli
adc
insb
aaa
and
jb
lahf
mov
pop
aaa
mov
addl
je
and
out
test
ja
in
movsl
fcmovne
xlat
mov
lock
sahf
fiaddl
cmp
aad
iret
pop
push
scas
jae
cltd
inc
rclb
or
jno
sub
sub
xchg
arpl
jno
clc
jae
popa
fsubr
dec
arpl
movsl
into
ljmp
xchg
pop
inc
xor
and
add
sbb
or
cmp
or
add
shlb
adc
movsb
mov
mov
push
adc
adc
ds
sub
cmp
addr16
sub
and
push
mov
popf
es
push
xlat
in
in
andb
cmovo
leave
scas
int
fsubr
mov
arpl
cmp
mov
xor
nop
imul
mov
loop
dec
and
sub
dec
outsl
into
jne
pop
call
movsl
cmp
mov
insb
cmc
out
pop
jb
inc
cltd
out
out
aas
ljmp
lds
xchg
out
test
xchg
jae
adc
inc
mov
jb
data16
aas
test
out
std
dec
cmp
js
int
mov
or
cmp
jmp
fldenv
adc
out
jae
sbb
lods
add
mov
popf
das
adc
movb
lea
stos
mov
out
inc
sbb
jl
ljmp
repz
cli
mov
sbb
pop
int3
and
and
inc
dec
pop
pop
jo
jl
lahf
sbb
and
rolb
add
xor
push
filds
mov
movsb
imul
pop
sub
jp
push
pop
jne
sbb
sbb
test
popf
ficompl
je
leave
push
lds
cmp
jnp
mov
push
jo
xchg
add
mov
inc
call
inc
insb
popf
std
rorl
lret
sbb
ret
push
cmp
or
sbb
movl
outsb
cmp
lods
aad
and
jae
pushf
and
ss
mov
and
loop
push
mov
cmp
sti
outsb
xchg
xchg
enter
or
les
js
es
sbb
nop
shll
loopne
mov
lahf
lds
xchg
enter
adc
inc
jle
cmc
fsubrs
cmpsl
dec
cmp
ret
dec
xor
popa
push
loope
cs
out
imul
xor
outsb
rcrb
and
xor
in
jg
or
push
cmp
je
js
xor
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
xor
fdivrl
jl
pop
jl
cmc
inc
orl
fadd
lods
out
adc
in
out
jae
div
sbbb
xor
fcomip
enter
xchg
dec
test
cltd
jb
leave
adc
xor
daa
leave
rcll
in
iret
orb
rorl
fs
mov
sbb
insb
iret
dec
testl
div
sbb
jb
xor
lret
jge
xor
ds
pop
in
sub
in
faddp
add
insb
push
or
xchg
outsb
rolb
dec
leave
cmp
dec
and
xchg
cmp
mov
cwtl
pop
fs
cmp
lods
mov
mov
mov
dec
inc
jg
cmp
and
xchg
outsl
pop
push
cmpb
daa
roll
mov
push
call
mov
aad
mov
jnp
into
dec
jnp
mov
dec
push
movhlps
movsb
imul
into
push
mov
xchg
xchg
and
xchg
hlt
sub
inc
lcall
lock
scas
pop
push
mov
sub
icebp
push
pop
iret
and
in
sub
and
bound
dec
nop
mov
sub
flds
xor
aam
xor
or
push
adc
jg
inc
and
shll
lea
sahf
inc
xchg
and
mov
popf
pop
adc
negl
jns
ret
aaa
xor
mov
dec
mov
sarl
cmp
cwtl
mov
cmp
aam
sarb
jno
cmc
ja
xchg
mov
negb
and
pushf
mov
repnz
lcall
test
cltd
int3
out
mov
and
mov
cmp
pop
inc
pop
adc
mov
push
mov
mov
cmp
push
out
jmp
nop
out
nop
std
in
fisubrl
sub
add
mov
rolb
xchg
pop
lcall
call
pop
lods
shr
jnp
lods
add
flds
mov
sti
jb
pop
loop
pop
cwtl
ficoml
add
or
nop
ficoml
jb
sub
mull
ljmp
add
and
lret
out
in
std
js
cmpsl
icebp
jns
jg
push
popf
aam
pop
into
inc
xlat
adc
sbb
cmp
test
xchg
adc
inc
daa
xchg
cmp
int3
mov
dec
les
and
test
insb
pop
sbb
xor
stos
mov
sbb
adc
jbe
push
rcll
insb
push
aam
das
fsubrl
lods
add
xor
pop
mov
push
fidivrl
jno
loopne
add
fidivs
sbb
xchg
mov
add
sbb
xchg
mov
sbb
inc
pop
stc
push
cmp
cmp
es
adc
add
xchg
mov
xor
or
clc
and
fildll
out
inc
pop
insb
loop
mov
jns
inc
leave
add
jne
jns
lock
and
arpl
xor
push
push
ds
jo
jno
lahf
and
dec
xchg
mov
out
lret
ja
stos
mov
fmull
inc
ja
xchg
jmp
scas
mov
lock
repnz
add
les
xchg
lcall
ds
loope,pt
push
push
xchg
adc
or
adc
mov
mov
jge
pop
add
sbb
sub
jge
dec
aam
xor
out
xchg
nop
scas
adc
stos
lods
push
scas
lds
adc
setno
inc
mov
sub
push
mov
inc
insl
mov
je
scas
mov
jg
inc
dec
pop
push
int
insl
test
xorb
or
jge
push
cli
ja
sub
inc
dec
vmovntps
or
pop
andl
push
inc
shlb
outsb
insb
lahf
fistps
mov
push
fwait
es
negb
test
adc
hlt
jl
mov
cmp
or
cmpsb
cs
les
dec
jns
ljmp
loope
add
jecxz
fisubs
pop
push
pop
mov
adc
or
cmp
xlat
movsb
cmp
clc
movsb
xchg
inc
rcrb
add
inc
lock
aad
shrb
adc
mov
lahf
push
addl
faddl
jge
popa
xchg
and
pop
je
mov
decl
ret
or
mov
adc
push
adc
cmp
clc
outsb
jle
shlb
mov
jge
sbb
ret
movsb
test
inc
inc
fsts
lods
xor
push
lock
bnd
movsb
xchg
ret
add
fmul
int
cmc
adc
jnp
push
sti
jne
dec
inc
xor
stc
push
jno
sbb
jmp
addb
xor
imul
jne
cs
ss
push
insb
cs
faddl
insb
push
or
sbb
ss
nop
or
push
mov
mov
jne
or
loop
addr16
cmp
sub
lret
mov
cmpsl
pushf
and
loop
stos
mov
adc
jo
lcall
clc
loope
xchg
jmp
and
lock
mov
jno
popf
push
fs
push
cmp
push
xchg
mov
gs
ret
xchg
leave
insl
jne
ds
push
fisttpll
arpl
xor
in
cmp
fstl
popa
sbbb
fildl
pop
or
call
xor
mov
ja
in
insl
add
popf
mov
sti
jo
mov
dec
jle
sbb
cmp
lea
ja
mov
nop
adc
fnsave
push
and
or
pop
out
out
add
in
or
add
sti
mov
imul
mov
in
mov
rorb
cwtl
nop
mov
jno
sar
std
out
arpl
jb
movsb
call
gs
dec
aad
pop
pop
int3
mov
pusha
vpand
sbb
dec
dec
add
cs
das
lock
xchg
scas
sub
lahf
lea
mov
icebp
dec
push
push
inc
or
cmp
cltd
sub
add
stos
neg
cmp
jecxz
ds
xor
jns
rcrl
pushl
outsl
jns
xchg
add
sub
xchg
mov
sub
jl
iret
dec
imul
out
xchg
shlb
sbb
xor
mov
or
hlt
imul
mov
js
jnp
inc
out
cmp
cwtl
pusha
test
bsr
jno
mov
inc
out
jo
xor
push
imul
cmc
push
test
clc
enter
inc
jl
adc
fscale
neg
push
pop
xchg
outsb
and
popa
fcoms
sahf
add
outsl
or
popf
shrl
inc
push
mov
pop
pop
pop
mov
mov
leave
jns
stos
fistl
inc
adc
int
adc
pop
xor
push
shlw
les
insb
cwtl
dec
rep
enter
les
mov
scas
pop
adc
insb
stc
test
and
sbb
mov
scas
and
dec
pop
loop
stc
loopne
bound
sarb
or
dec
xchg
push
arpl
mov
push
xchg
jmp
movups
mov
push
rorl
scas
inc
xor
push
daa
orb
jnp
pop
dec
mov
jp
sti
cmp
mov
adc
in
jb
pop
jb
int3
sbb
lret
ja
add
addr16
cltd
fsubrl
sbb
mov
mov
cld
xor
and
pop
lea
jmp
mov
pushf
push
inc
mov
dec
mov
ucomiss
cmp
xchg
mov
and
out
adc
sbb
mov
arpl
stos
cmp
pop
icebp
adc
ds
sbb
pop
loop
imul
ja
push
push
pop
lret
or
inc
mov
jb
push
jmp
sarl
in
insb
cli
jns
icebp
jns
and
or
inc
rolb
mov
movsl
dec
icebp
or
xor
xor
xchg
lahf
jo
mov
pop
dec
sbb
lret
xchg
mov
aaa
mov
mov
push
in
testl
or
out
push
mov
addb
xor
iret
jns
cmp
pop
xor
push
mov
nop
aas
mov
pusha
aam
loopne
or
jo
push
shlb
jnp
nop
hlt
pusha
call
scas
es
sbb
bound
push
adc
je
jge
xchg
mov
jae
jle
sbb
fstps
ret
arpl
inc
ret
sti
mov
inc
loopne
mov
cmpsb
dec
stos
addr16
mov
hlt
dec
sub
js
mov
jmp
aaa
fsubl
iret
aad
int3
adc
mov
mov
push
mov
shrl
test
call
xlat
push
add
shrl
imul
into
push
shlb
sahf
inc
xchg
xchg
pop
mov
js
in
xchg
and
mov
mov
lahf
ret
dec
shl
and
imul
sbb
fcoms
mov
mov
les
sub
sub
jnp
leave
adc
jmp
add
sbb
mov
ret
jo
fcomip
xor
fistpl
aad
in
pusha
int
in
mov
xchg
cltd
repz
rcll
enter
mov
mov
push
hlt
sbb
or
mov
mov
sbb
mov
mov
jns
loopne
aas
inc
inc
mov
fadds
xchg
ds
pop
ds
jne
mov
movsb
mov
ds
xchg
mov
cmp
in
and
scas
sub
out
mov
xchg
ret
sbb
jg
cmpsb
test
ss
mov
fsubs
and
lahf
imul
inc
xor
in
mov
shll
adc
sub
jmp
adc
imul
sbb
pop
pop
in
insb
sar
aad
fcompl
call
jecxz
aad
xchg
xlat
cmp
dec
ds
lea
loope
fidivl
inc
and
shlb
mov
mov
in
daa
inc
call
aas
pop
arpl
ds
add
cmp
std
cmpsb
pop
test
mov
jnp
div
shll
pop
stos
xor
inc
cmp
pop
lds
pusha
push
mov
jno
call
inc
push
inc
ret
sub
sub
loope
pop
mov
xchg
xor
sbb
cmpsb
test
stos
jg
jg
clc
out
imul
push
shl
rorb
int
jae
js
inc
pop
jecxz
adc
push
mov
mov
xchg
popa
lahf
sub
shll
xchg
aaa
inc
stos
daa
pop
mov
mov
ja
mov
das
fildl
pop
jae,pn
stc
dec
lret
or
push
ds
push
or
lret
sub
int
jnp,pn
cmc
test
fwait
lods
and
sahf
and
daa
loope
pop
and
and
mov
pop
inc
addb
lea
pushf
add
push
and
mov
mov
or
add
sbb
xchg
imul
cwtl
lds
loop
mov
leave
push
clc
sub
pop
lret
mov
pop
dec
sbb
adc
xchg
out
and
mulb
je
in
test
fwait
and
pop
lea
js
jo
pop
and
inc
mov
xor
jnp
sbb
inc
test
mov
pop
sti
in
xchg
fnstcw
xor
xchg
mov
cltd
daa
dec
stos
adc
imul
test
xchg
stc
dec
shr
pusha
xchg
or
stos
and
in
mov
in
insl
sub
mov
je
mov
mov
xor
and
sbb
enter
ficompl
mov
mov
add
inc
ret
dec
dec
pop
mov
adc
fsubrs
hlt
mov
ja
fmull
adc
fistl
mov
adc
into
js
nop
leave
mov
int3
push
push
repz
pushw
xor
cli
push
lret
das
xor
lds
sbb
int
daa
call
cs
jmp
cmp
mov
ljmp
push
sub
lods
data16
adc
ljmp
cltd
inc
fwait
inc
mov
add
lds
movsl
adc
stc
lods
popf
clc
jb
les
pop
js
lods
xchg
enter
push
enter
mov
lcall
cld
xchg
icebp
jae
imul
xchg
jae
pop
mov
mov
mov
ss
sub
in
je
push
push
ret
add
sub
in
lret
and
icebp
sbb
mov
aaa
fildl
pop
fcomi
std
mov
xchg
ret
out
scas
push
push
jp
inc
mov
scas
add
add
daa
adc
sbb
stos
daa
mov
pushf
pop
xchg
sbb
add
jl
dec
das
mov
mov
divb
xchg
aam
dec
sahf
mov
jp
iret
stos
in
aam
das
jo
lock
sbb
mov
cmc
loope
cmp
pop
ds
lock
and
bound
in
xchg
fnop
rcrl
pop
call
clc
fs
test
rcll
push
push
xchg
ret
lahf
incl
pop
ja
xchg
imul
icebp
jle
mov
push
push
push
fwait
push
push
push
pusha
cmp
xchg
rorl
dec
jo
xor
pop
les
int3
lock
shll
js
gs
mov
fcmovb
stos
inc
jno
fs
ret
sub
test
mov
ds
add
daa
call
push
xor
outsl
inc
das
adc
ror
icebp
insl
aas
sti
mov
inc
pop
aam
lahf
mov
inc
call
sbb
ret
xor
movsb
and
les
pop
lea
lock
inc
pop
cmp
in
stc
jle
xchg
cld
sbb
imul
adc
jns
or
add
bound
sub
add
adc
sub
subl
lfs
jecxz
ds
cs
mov
pop
insb
mov
ror
int
jno
cld
adc
mov
into
or
push
dec
mov
aad
or
cwtl
cwtl
test
sbb
push
push
insl
leave
in
lock
fs
sub
jp
addr16
out
outsl
add
sbb
add
push
rcrl
movsl
mov
daa
jae
bound
and
jo
subb
lock
int3
in
ds
jecxz
lods
je
mov
ret
mov
xor
inc
jmp
jo
mov
leave
sbbl
add
out
in
push
cmpsl
insl
mov
jl
sti
xor
shlb
fadd
in
mov
into
cmpl
jnp
sub
aas
mov
mov
int3
jno
cmpsb
and
insb
sbb
roll
jb
scas
cmp
mov
mov
int
pop
scas
xor
sbb
mov
sub
lret
dec
imul
add
aaa
test
xadd
popa
sbb
xor
jno
jmp
xor
push
iret
popa
mov
add
in
inc
mov
sbb
xor
js
mov
addl
fisubrl
mov
sbb
and
pop
mov
or
sbb
aam
inc
ds
inc
adc
inc
out
push
dec
lcall
mov
push
fadd
push
xchg
cmp
ljmp
fistpll
in
mov
mov
mov
adc
jge
or
movsl
inc
xorb
pop
sar
test
repz
cli
xchg
aad
xor
mov
jb
aad
mulb
pop
rcl
ss
jbe
sahf
xor
inc
jno
xor
push
sbb
stos
fmul
pop
rcrb
and
dec
dec
inc
iret
aas
or
pop
call
inc
cmpsb
je
push
sub
mov
push
cmp
xor
sub
scas
jecxz
popa
push
and
movsb
sbb
lock
and
sub
pusha
push
aam
push
jb
outsl
out
in
xchg
add
test
add
addr16
inc
mov
adc
cmp
jnp
cmpsb
adc
jno
ds
fsubr
push
mov
pop
sub
rcll
jl
xchg
xlat
pop
sbbb
incb
jbe
scas
adc
or
sahf
mov
sbb
sbb
imul
and
stc
sbb
push
or
push
pslld
push
jmp
jb
push
sti
mov
insb
pop
adcl
sbb
adc
in
popa
bound
inc
sbb
jle
mov
loopne
adc
inc
adc
pop
push
lahf
bound
dec
inc
out
adc
mov
mov
ret
sub
in
inc
mov
mov
push
dec
gs
movsl
or
es
aas
mov
jp
xchg
fdivrs
imul
outsl
or
dec
or
imull
jge
mov
pmulhw
out
fisubrs
out
push
xorl
or
xchg
mov
jl
ds
lret
xchg
xor
and
add
dec
cltd
insb
lods
shrl
add
mov
movsl
push
stc
fs
pusha
mov
xor
xchg
push
notl
imul
pusha
inc
mov
mov
xchg
dec
popf
push
loope
push
or
pop
and
mov
or
shll
pop
push
mov
out
test
adc
shll
shlb
push
outsb
inc
int
cwtl
push
pop
push
call
call
mov
out
enter
aam
icebp
mov
in
xlat
push
clc
jmp
and
call
shl
inc
dec
rcl
jecxz
jno
imul
jle
or
stc
out
pop
rolb
sub
mov
inc
aad
stc
mov
xchg
loop
cs
cmpl
gs
mov
ret
out
mov
repz
lods
fisubrs
cmp
mov
jnp
push
addr16
add
shrl
fdivp
jle
sbb
movsb
lods
movsb
aam
ljmp
test
add
stos
and
lcall
in
sub
test
dec
sub
lcall
mov
mov
jecxz
inc
jb
cmp
pop
aam
cwtl
and
shlb
inc
lcall
arpl
cwtl
mov
mov
rcll
jnp
jecxz
jno
sbb
shll
jb
pop
mov
js
cltd
xchg
xchg
mov
ret
hlt
xor
iret
imulb
andb
aaa
mov
push
sbb
push
lret
xor
sbb
insb
cld
jg
adc
and
mov
inc
loope
roll
popf
add
leave
cmp
hlt
mov
adc
mov
lock
std
ds
sub
jb
mov
cmpsl
push
xor
mov
jmp
pop
push
sahf
xchg
mov
or
pop
sbb
fsubrl
es
push
andb
inc
inc
jns
jae
push
xor
mov
hlt
push
cmp
xchg
cmpl
inc
pop
into
xchg
out
shll
inc
cmpsb
add
or
mov
xor
cmp
mov
xor
inc
mov
cwtl
fsubrs
dec
jne
inc
movsb
push
dec
in
pop
dec
inc
push
ret
lret
test
in
jae
xlat
sbb
test
dec
ret
lcall
in
cmp
aam
inc
jmp
ret
popa
mov
xchg
imul
ror
ljmp
jb
aam
dec
cltd
into
cltd
push
mov
mov
inc
mov
mov
pop
xchg
push
push
js
dec
movsb
sub
mov
and
xchg
les
sub
sti
push
sub
ss
aad
negl
xchg
or
cld
nop
jae
pop
fadd
rcll
xor
mov
loop
inc
xchg
gs
dec
imulb
or
xchg
movsb
sub
das
hlt
add
xchg
ficoml
jns
cmp
cmp
insb
inc
cs
sub
xor
in
data16
xlat
mov
loop
insb
xor
add
mov
sbb
push
fisubl
mov
scas
mov
fs
mov
imul
cmpsl
jo
fdivrs
andl
ja
mov
xchg
stos
in
xor
mov
pop
xlat
pushf
movb
push
add
add
dec
data16
xor
test
add
xchg
xchg
jecxz
rorl
fldcw
jmp
cld
jg
xlat
rorb
cld
in
aam
sbb
xchg
pop
lret
jmp
adc
lods
xor
sub
cmc
mov
inc
add
sbb
scas
ret
pop
pop
scas
stos
adc
test
jecxz
sub
xchg
sbb
dec
out
shl
push
loope
outsb
dec
rolb
repz
pmaxub
insl
push
adc
jns
gs
dec
pop
jg
lcall
xchg
jle
fs
sbb
xchg
cmpsl
sbb
push
jecxz
jb
and
addr16
jbe
cwtl
mov
dec
sub
out
shl
mov
pop
loop
daa
test
ss
push
mov
jo
pop
mov
test
pusha
movsl
xchg
stc
sub
addl
sahf
test
jecxz
sub
xchg
mov
mov
imul
cmpsl
cmp
fisubrl
aad
mov
sbb
les
mov
cmpsb
fstps
push
movsb
mov
mov
pusha
stos
cltd
push
or
xchg
push
mov
gs
inc
ja
int
push
pushf
lahf
imul
hlt
iret
mov
jns
repnz
mov
cltd
or
cmp
cmp
stos
jne
aas
mov
ret
ret
nop
push
fdivrp
decb
dec
out
bound
popa
or
inc
fadds
push
or
push
or
xchg
ret
and
outsl
mov
cmpsb
insl
cmpsb
pop
das
pop
stc
xlat
push
int
out
mov
lahf
sbb
lds
scas
lods
or
lret
test
pop
test
out
cmp
cmp
jg
cmp
inc
mov
and
cmpsb
test
out
jnp
mov
cwtl
adc
xchg
mov
jns
fwait
xorl
inc
sarl
jmp
dec
outsl
popf
sbb
jne
pop
dec
mov
enter
das
inc
aaa
xor
mov
fmul
sbb
dec
icebp
ljmp
push
xchg
mov
xchg
mov
fidivl
mov
push
les
rolb
loope
mov
aaa
into
or
je
lds
and
mov
mov
daa
pop
or
shr
imul
xchg
scas
sbb
push
mov
jno
arpl
push
inc
jl
adc
popa
lock
popa
lret
iret
jge
cmp
mov
outsb
pop
iret
sbb
xchg
cmpsl
ds
cmpl
lods
mov
movl
aas
call
inc
mov
xor
pop
jecxz
pop
push
clc
mov
loopne
xchg
xor
dec
xchg
xchg
lcall
or
xor
adcl
shll
shll
pop
xchg
lods
mov
dec
cs
sub
cmp
movsl
xchg
sbb
lahf
ja
fisttpll
roll
jmp
inc
test
xchg
mov
jle
out
xor
and
inc
mov
sbb
pop
out
sub
stos
movsb
dec
hlt
or
dec
ss
iret
mov
xchg
daa
stc
cmc
jns
lcall
addr16
leave
push
or
mov
inc
sarb
jecxz
into
ret
les
insl
push
sub
xchg
mov
addl
out
sub
and
popf
cmpsb
in
xlat
push
jmp
shrl
imul
sbb
ss
adc
insb
mov
mul
sbb
add
xor
int
gs
cmp
mov
cmp
mov
and
addr16
dec
xchg
pop
sti
xchg
xchg
negl
fsubrl
divl
ret
stos
push
sbb
push
andl
leave
jb
je
jge
add
push
popl
pop
mov
xor
push
dec
jg
fnstsw
aad
popf
mov
or
notb
ret
jmp
adc
jl
sbb
xor
mov
xor
or
push
mov
in
int
xchg
fcomip
outsb
add
aad
xchg
adc
loop
jmp
rol
mov
dec
fnstsw
push
or
jae
xchg
cli
pop
movsl
or
mov
xor
imul
cltd
in
ret
cmc
sub
cmp
fwait
ljmp
pusha
mov
cs
ret
fcmovbe
inc
scas
test
or
inc
mov
jne
ds
imul
clc
sub
sbb
bound
frstor
jmp
jae
add
pop
dec
pop
jecxz
repz
jns
xchg
cmpsl
adc
mov
jmp
and
gs
and
lock
cmp
pop
jne
fsubl
fsubp
ljmp
loope
loope
shrl
mov
or
jo
mov
and
cmpsb
lods
mov
bound
sbb
jb
stos
call
mov
push
mov
js
xor
push
xor
imul
sbb
adc
ret
or
sbb
mov
sarb
jnp
js
sub
and
aaa
movsl
loopne
dec
sub
mov
in
add
test
push
cwtl
or
push
shlw
daa
sbb
mov
jnp
xor
xlat
xor
push
push
and
push
dec
stos
push
adc
mov
je
jns
sbbl
mov
sub
scas
fwait
gs
in
add
inc
jnp
inc
jecxz
rol
enter
and
cmpsb
daa
fdivs
rcll
pop
fmul
dec
xchg
mov
jecxz
fs
pop
mov
stc
lock
push
pushf
in
push
xchg
stc
push
sti
je
mov
push
fwait
nop
insb
and
popa
dec
add
jmp
mov
fisubs
push
loopne
je
icebp
jp
insl
hlt
fidivl
jecxz
fstpt
jmp
andl
inc
pop
sbb
dec
cwtl
inc
xchg
insl
dec
mov
arpl
xor
ss
orb
cmp
test
mov
icebp
das
subl
jno
aas
and
pusha
mov
or
xchg
call
pop
rcl
dec
cmp
xchg
mov
cmp
xor
lock
in
imul
mov
sub
push
fdiv
cmp
xchg
or
xorb
mov
inc
imul
daa
ja
jae
or
adc
aam
fdivp
sbb
lea
stos
sbb
and
sahf
mov
push
jle
xchg
and
test
insl
mov
addl
cmp
idivb
add
test
sbb
in
loop
outsl
dec
add
mov
inc
mov
mov
pop
fbstp
or
push
gs
xor
mov
aas
inc
and
imul
stos
imul
or
mov
mov
aaa
fwait
ja
les
jmp
ror
mov
in
xchg
mov
repz
mov
addb
iret
push
or
ljmp
test
jbe
sarl
mov
inc
iret
lea
loopne
fimuls
cmpsb
mov
xor
xchg
sbb
daa
jecxz
in
outsl
pop
jmp
cmpl
and
js
cltd
inc
fisubs
aaa
mov
cli
sbb
out
imul
mov
adc
and
lea
or
inc
pop
push
loop
stos
ljmp
lods
inc
fisttps
orl
xchg
sub
pusha
stos
jl
push
adc
imul
sbb
dec
cmp
sbb
mov
xchg
mov
cmp
and
sti
xor
test
jnp
jl
jno
lret
aaa
add
dec
scas
sub
dec
insl
push
fs
dec
sub
add
inc
cmp
lock
xor
movsb
in
mov
push
sbb
mov
cmpsl
scas
add
or
lods
mov
mov
adc
rcrl
cmc
add
cli
rorb
leave
pop
xchg
sub
inc
lods
and
sbb
out
jbe
jnp
ljmp
je
cltd
call
shlb
or
imul
loope
fs
ret
dec
mov
outsb
sbb
popf
mov
pop
popf
adc
push
mov
push
mov
push
mov
push
addl
xchg
pop
add
cmp
fistl
or
cmp
cs
pop
sub
or
mov
rcl
cs
push
movsl
sbb
fwait
dec
inc
out
push
pop
les
pop
hlt
shrb
ficomps
imul
pop
mov
cmp
mov
lock
pop
mov
adc
movsb
rclb
mov
fdiv
jb
test
adc
scas
inc
out
xor
jle
cmpb
dec
enter
shll
cs
jns
xchg
mov
and
std
les
sub
fs
pop
jecxz
dec
sbb
xor
cmp
lods
leave
xchg
pop
add
popl
ljmp
cli
push
xchg
movsl
push
movsl
lcall
fistl
push
sub
es
sub
add
sahf
mov
jge
sub
aam
aad
push
icebp
and
sarb
mov
jg
pop
sbbl
xor
inc
scas
jbe
sbb
fwait
aas
outsl
loope
outsb
sbb
jb
dec
inc
jle
aaa
cmp
adc
mov
jg
sahf
pop
push
mov
out
loop
out
out
aam
shrl
adc
dec
sbb
push
movsb
sbb
mov
loop
stos
sbb
ret
or
in
arpl
add
mov
sub
mov
cli
imul
cmp
rcrb
mov
inc
pop
int3
sahf
outsb
fdivr
xor
cwtl
loop
movsl
sbbb
ficomps
sub
js
cmp
jle
sbb
aam
int
dec
icebp
std
rcrb
or
inc
jb
pop
stc
stos
jge
shlb
adcb
push
scas
int
and
fmull
sbbl
pop
lods
jg
xor
and
sahf
js
inc
xlat
stc
pushf
push
mov
je
out
daa
xchg
mov
divl
bound
outsl
mov
ss
cmpsb
mov
sub
gs
fstpl
push
pop
repz
inc
stos
mov
sahf
mov
xlat
out
dec
aad
push
cmp
out
mov
popa
gs
cmp
test
jge
outsb
loopne
push
jge
bndstx
push
jns
dec
sbb
cld
out
push
repz
sub
fstps
inc
scas
and
addl
xchg
xchg
ret
pop
cmp
leave
sbb
cmpsl
lcall
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
jnp
stc
xor
scas
jl
inc
pop
jl
test
orl
mov
or
mov
push
call
fs
imul
push
inc
in
pop
jmp
pop
mov
jp
adc
cld
mov
sbb
test
mov
lods
and
addb
cs
pop
orb
lret
adc
mov
cld
or
mov
mov
pushf
xor
out
lret
aad
xor
clc
mov
inc
imul
ftst
hlt
xorl
sub
fstpt
sbb
out
adc
test
jl
add
sti
inc
or
mov
or
xchg
lds
dec
mov
out
inc
clc
loope
enter
gs
jge
cmp
lret
fs
sbb
pop
mov
xchg
xor
cmp
cmc
loopne
inc
inc
popa
outsb
jecxz
push
loope
add
mov
mov
call
push
pop
jecxz
loop
sbb
outsb
push
xor
inc
daa
jmp
fdivl
pop
xor
mov
jl
push
cmp
add
cmp
dec
ret
and
arpl
mov
fisttpll
cli
inc
mov
ficoms
cmpsb
ret
fistl
dec
test
icebp
loopne
and
sub
mov
fmuls
push
jmp
inc
stos
push
shl
loop
scas
cmp
dec
inc
aad
cmp
push
nop
dec
push
mov
cmpb
sti
scas
lcall
mov
or
js
out
push
mov
inc
in
lds
xchg
jle
sub
xchg
xchg
mov
jno
fs
jl
cmp
add
cmpsl
out
xchg
repz
dec
jbe
je
push
jb
mov
mov
jns
jmp
adc
dec
dec
outsb
inc
sbb
int3
push
cmpsl
repnz
fistpll
inc
mov
shrb
popl
sti
dec
orl
lahf
iret
iret
inc
mov
mov
imul
jns
push
push
fwait
push
shlb
inc
jbe
outsb
inc
cmp
insb
xlat
lret
inc
xchg
xchg
push
push
xchg
mov
in
test
lods
out
dec
cmc
pop
clc
push
dec
cmp
in
rolb
push
mov
daa
inc
ljmp
cld
fs
loopne
dec
cltd
sar
mov
je
in
pop
adc
cli
lcall
xchg
push
out
jle
sti
divb
scas
sarb
pop
iret
xchg
or
dec
out
ret
inc
sbb
divb
mov
stos
jl
out
repz
mov
mov
push
cmpsb
cmpsl
xchg
loop
out
xor
push
sti
sahf
cmp
aam
sbb
clc
add
dec
cs
mov
movsb
sbb
pushf
inc
insb
and
pop
mov
fstp
or
dec
add
pop
loope
bsf
cmp
test
ljmp
lea
inc
and
enter
shlb
repz
jle
pop
sub
sbb
pop
scas
pop
gs
scas
mov
outsl
mov
mov
xchg
push
xor
lds
cmp
mov
loope
mov
stos
cld
sbb
mov
push
and
into
and
cmp
and
aam
lcall
jno
add
adc
arpl
pop
add
les
imul
cli
pusha
out
scas
cmp
mull
push
xchg
sub
clc
xor
jmp
add
scas
imul
cmp
mov
aad
push
dec
fisubl
scas
and
xchg
into
popa
inc
aad
and
lahf
imul
test
loop
test
push
mov
or
and
mov
and
aad
or
pop
sub
popf
xor
stc
das
add
lret
cltd
sbb
push
dec
int3
push
jae
lcall
pop
mov
loop
mov
sub
fcmovne
cwtl
push
jbe
sub
imul
push
repnz
jle
or
add
jne
sbb
arpl
push
push
in
add
test
bound
mov
mov
mov
mov
sbb
repnz
scas
fisttpl
dec
cmp
mov
pop
lds
hlt
loop
ljmp
pusha
cmp
pusha
inc
mov
lea
pop
adc
popf
ret
cmp
mov
push
outsl
bound
fs
dec
pop
push
dec
adc
dec
into
das
ljmp
loop
xor
outsl
xlat
xchg
dec
cmp
add
fdivrs
cli
or
mov
pop
ret
dec
dec
add
insb
shlb
mov
mov
and
addr16
pop
xor
jbe
incb
cmp
mov
push
shr
out
mov
lret
and
inc
je
mov
clc
cltd
xchg
lcall
jl
movmskps
lret
pop
pop
rolb
jmp
ljmp
and
lahf
jmp
es
setl
adc
imul
in
lret
sub
mov
adc
stos
adc
dec
les
out
sahf
pop
mov
dec
dec
xchg
sub
icebp
or
xchg
fidivs
mov
mov
into
js
dec
aad
dec
out
mov
aas
dec
ja
test
dec
scas
push
movsl
nop
mov
dec
and
xchg
adc
out
push
ret
fwait
movsb
lcall
ja
pop
inc
and
stc
pusha
mov
inc
jns
clc
lret
lret
xchg
mov
dec
mov
mov
jge
lret
notl
push
xor
inc
or
dec
cld
cmc
fxtract
mov
or
pop
fbld
mov
cld
shlb
xor
xor
push
jge
aad
lcall
sti
jmp
call
ret
inc
or
loope
data16
xchg
data16
push
or
jmp
pop
nop
sbb
xchg
sub
mov
jmp
xor
sbbl
xchg
xor
subl
or
mov
loopne
testl
imul
repnz
dec
repnz
jge
arpl
test
cmpsl
shrb
mov
shrl
fadds
or
fcomps
outsl
cmp
xchg
dec
and
or
xchg
clc
push
adc
mov
popf
int
les
sbb
jmp
sub
rcll
cld
lcall
jle
movsb
push
orb
mov
or
inc
inc
jnp
incl
out
cmp
xlat
xchg
sahf
aad
push
push
add
jp
and
cmpsl
and
bound
and
lods
out
cs
add
dec
sub
mov
loopne
ds
bound
pop
add
pop
insl
cmpsb
jb
add
stos
xchg
mov
loopne
xchg
stos
push
int
jmp
jno
stc
nop
fidivrs
xor
gs
xchg
hlt
sbb
adc
sbb
rcrb
xchg
jno
sub
add
push
jg
popf
rorb
adc
es
xchg
dec
ljmp
lret
addb
mov
lock
aam
mov
inc
inc
adc
das
js
inc
out
jecxz
and
insb
lds
dec
mov
pusha
and
dec
pop
xchg
sub
cmp
movsl
jnp
outsb
test
and
sbb
fidivrs
adc
push
fcmovnb
iret
sbb
add
in
inc
adc
mov
mov
jmp
sbbb
push
outsb
fsubp
enter
cli
cmpsb
int3
or
inc
xor
or
xchg
sar
sub
push
sbb
add
push
call
mov
add
jecxz
cmpb
push
das
psrld
pop
lds
xchg
inc
ds
in
int
rcrb
push
lret
mov
shl
xchg
pop
jl
insl
sbb
mov
les
orb
mov
and
mov
mov
sub
rolb
cwtl
xor
repz
test
mov
outsl
sahf
xor
jnp
ljmp
insl
xor
xchg
repz
int
roll
push
inc
mov
adcw
adc
sbbb
fistps
pushf
dec
dec
push
sbb
inc
xlat
hlt
call
inc
cltd
jo
jb
dec
lcall
into
cwtl
test
push
mov
imul
leave
adc
mov
push
add
xor
movsb
xor
aas
and
fsin
push
out
js
add
push
rorl
nop
inc
fdiv
out
jno
xchg
imul
lock
jg
jg
xchg
and
testw
push
stos
or
insb
cmp
push
popa
pop
aaa
aad
mov
xchg
lock
and
sub
std
jle
fisttps
dec
pop
sub
hlt
xor
fcomps
mov
xchg
cmp
mov
jge
pop
xlat
mov
das
add
fimull
call
int
or
push
cwtl
cmp
and
mov
and
pop
aas
cs
filds
out
stc
mov
sub
outsl
inc
je
sub
xor
jo
push
lcall
cmp
out
movsb
enter
lret
sbb
push
mov
cmp
sub
ret
sub
aaa
pushf
test
or
cld
mov
fldcw
add
ror
mov
dec
sub
mov
stc
push
jp
and
or
mov
mov
and
fadd
aas
jnp
xchg
xchg
ss
add
pop
pop
xor
inc
mov
add
push
xor
popa
and
adcb
lds
jl
cmp
shl
or
pop
lahf
les
jg
or
mov
fwait
std
in
pop
daa
sahf
or
mov
out
pop
mov
mov
out
pop
mov
adc
adc
jmp
add
out
mov
add
ljmp
sbbb
mov
add
stos
sti
bound
fs
insb
jbe
jmp
inc
mov
jg
or
push
lret
popa
jmp
add
add
sbb
pop
xchg
in
jecxz
sub
push
mov
gs
cld
and
retw
into
cwtl
mov
and
push
lds
cmp
sub
enter
clc
lret
push
int
out
mov
push
ss
imul
inc
call
jnp
mov
fcomps
xchg
jg
nop
scas
jno
test
or
cwtl
xor
push
mov
insb
xor
pop
pusha
mov
cmp
jae
addl
jns
iret
scas
push
adc
jb
arpl
fisttpll
cmpsl
jmp
sbb
mov
dec
push
push
cmp
xchg
push
imul
fisubrl
pop
test
mov
xchg
frstor
shll
mov
lahf
add
cmpsl
push
in
movsb
mov
push
frstor
ljmp
dec
sbb
mov
push
or
popf
push
push
lods
jne
push
dec
stos
cli
popa
pushf
aad
pushf
ja
and
lods
int
inc
dec
push
hlt
sub
jge
xchg
dec
gs
insb
jmp
sbb
pop
sti
iret
add
sarl
sub
inc
sbbl
mov
jno
pop
sub
pop
sti
mov
jmp
idivl
out
fiadds
out
cmp
adcl
addr16
bound
fisubrs
add
push
aad
addr16
xor
sbb
jmp
jns
ret
adcl
mov
into
idivb
ret
xor
mov
stos
xsha256
cmpsb
push
and
aaa
cmp
mov
lahf
push
fs
fmuls
or
popf
mov
xchg
pushf
enter
push
push
xor
loope
flds
dec
dec
and
add
pop
andb
fmull
cmpl
sub
scas
int3
jb
nop
outsl
or
shrl
sbb
insl
mov
or
jge
lds
lea
dec
hlt
sbb
les
adc
and
ljmp
lret
xchg
sub
shrl
mov
and
subb
mov
pop
mov
imul
imul
pushf
add
push
adc
out
cmpsb
outsl
enter
jns
das
push
aad
sub
cs
add
mov
icebp
mov
xchg
les
push
cmc
lret
cld
out
inc
aas
xchg
ret
pusha
jno
aad
cmp
xchg
das
in
adc
jmp
lods
dec
push
lock
lret
push
int3
loopne
repz
test
fwait
jb
mov
jp
and
fcoms
iret
xchg
jp
inc
bound
push
xorb
gs
pop
rclb
xchg
ss
lods
repz
mov
or
mov
dec
data16
test
mov
jg
mov
out
mov
clc
into
es
addr16
cli
filds
jle
push
subb
mov
pushf
pop
mov
stc
mov
rolb
xchg
arpl
mov
xchg
mov
jno
inc
jecxz
cltd
inc
iret
ljmp
and
int3
cmp
lcall
rolb
pop
sti
pop
jb
mov
adc
outsl
sub
adc
stos
mov
sub
sub
or
paddd
movsl
push
outsl
push
push
fisubrs
and
jo,pn
shr
test
sbb
scas
ss
aas
loop
lea
dec
xchg
push
xor
sbb
sub
lods
ret
sbb
sbb
and
push
mov
pop
sbb
xchg
popw
dec
xor
insl
and
mov
lods
sbb
shr
iret
sub
lret
cmp
fsts
and
ret
cmp
sub
int3
sub
lret
cmp
arpl
fisubs
adc
dec
test
jo
mov
dec
test
outsb
imul
out
andb
pop
lods
jecxz
out
dec
cmp
cmp
and
dec
mov
inc
inc
cmpb
leave
ret
pop
push
test
hlt
loope
outsb
adc
cld
ret
jecxz
mov
pushf
fiadds
jne
mov
mov
pushf
pop
mov
push
xor
sti
mov
or
inc
popa
push
mov
ljmp
cmpsl
adc
inc
pushf
in
cmp
addr16
pop
stos
cli
xchg
mov
je
xor
jne
aad
pop
lock
or
mov
pop
repz
lds
push
rclb
scas
ror
imul
push
xchg
dec
gs
mov
mov
divl
into
cmpsl
jle
stos
inc
fucomip
jmp
add
jg
fs
mov
push
std
cmp
xchg
and
outsl
inc
cmp
lods
cmpsl
in
aam
add
jmp
jo
sahf
stos
aad
xor
pop
dec
jno
scas
lock
inc
dec
pop
jbe
jge
hlt
mov
movsb
xchg
mov
ds
loope
fidivrs
mov
push
or
scas
mov
ja
pushl
mov
mov
fbstp
stos
testl
scas
xor
rolb
add
loop
lcall
lods
xchg
ret
divb
push
fldenv
repz
or
mov
or
mov
stos
xor
mov
fucomp
jbe
loop
sub
xchg
or
xlat
add
pusha
push
cmp
cmp
int
push
mov
cmp
cmpsb
push
and
pop
jnp
testl
dec
aad
ss
ljmp
test
add
stos
dec
xchg
sbb
pop
fisubl
loope
jp
push
adc
bound
adc
xchg
ss
and
xchg
jmp
fsubrl
and
adc
jge
mulb
jl
cmc
not
mov
hlt
xchg
xchg
into
fiaddl
test
jle
lock
add
mov
stos
jne
mov
cmovg
and
xchg
mov
jb
add
adc
sti
psllq
shl
imul
dec
lahf
sub
mov
fsub
ljmp
sub
dec
push
dec
daa
loope
insb
test
mov
mov
jg
push
xlat
ror
test
xlat
outsl
inc
aaa
inc
mov
lods
push
xchg
imul
jecxz
shll
mov
mov
mov
xor
xchg
cs
enter
sub
decb
xchg
mov
fsubs
outsl
cltd
adc
pop
fldcw
popf
xor
loop
dec
shrl
jns
cmp
fcmovnu
jbe
adc
lcall
dec
ja
rol
dec
sahf
sarl
adc
xchg
jne
mov
pop
sbb
in
ret
push
add
fidivrs
sub
jo
jl
test
jl
pop
cwtl
sub
popa
dec
fistps
dec
xchg
mov
sbb
sub
pushl
popf
fs
push
inc
loopne
aas
rolb
dec
mov
xchg
mov
mov
ljmp
inc
repnz
and
xor
and
or
sahf
out
xchg
jge
push
inc
in
leave
mov
lods
std
les
cltd
stc
add
pop
lahf
das
lods
bound
insb
pop
fbstp
add
push
mov
or
in
mov
push
and
mov
or
lahf
dec
sbb
and
loope
and
jmp
xor
repz
cmc
cmp
push
add
jecxz
push
out
lahf
test
xchg
pop
mov
cli
out
mov
adc
mov
call
add
imul
push
pushf
ret
int3
adc
jbe
sub
test
adc
pop
mov
jo
push
nop
mov
shll
mov
dec
imul
adc
js
mov
ljmp
ret
cmc
xchg
push
fidivl
add
push
data16
sbb
pusha
push
mov
decb
ret
js
and
mov
xchg
add
jmp
das
dec
xchg
pop
add
sbb
test
xchg
fs
pop
jo
inc
mov
xlat
mov
xchg
and
lods
adc
adc
jbe
add
xor
fimuls
mov
adc
mov
adc
in
or
sbb
sbb
ret
js
or
fnsaves
adc
and
in
jo
mov
push
or
pop
clc
sub
cli
pop
jo
flds
dec
sbb
inc
stos
mov
mov
or
fs
mov
jnp
addl
lret
andnps
bound
xor
xor
mov
cmp
mov
cmp
jge
jle
jecxz
mov
inc
lret
cmc
in
jg
push
bound
push
mov
insb
jno
jno
mov
pusha
lea
lods
cltd
sbb
jecxz
data16
or
mov
lods
mov
mov
sahf
cmp
jb
ljmp
daa
or
mov
pop
fprem1
mov
sub
or
ss
test
xchg
mov
mov
mov
scas
jns
and
pop
in
movb
jns
stc
test
ror
mov
push
mov
movsb
lods
or
push
mov
in
out
xchg
ja
js
pop
in
xlat
popf
xchg
xchg
and
xor
cs
arpl
daa
bts
ljmp
mov
cmp
xor
xor
mov
negl
mov
leave
xlat
fisubs
es
loopne
sbb
push
int
xor
jo
mov
xchg
dec
and
imul
cli
sbb
cltd
shll
push
sub
adc
mov
mov
push
push
ret
jge
cmp
inc
roll
dec
iret
xchg
pop
add
push
jmp
mov
movsb
daa
into
flds
mov
jo
push
jb
mov
lret
mov
popf
add
push
mov
mov
and
popa
sbb
hlt
add
add
shl
shl
mov
mov
adc
sub
out
or
rcl
xor
imul
in
ja
dec
cld
ret
nop
xchg
in
pop
mov
jg
jp
jnp
inc
mov
fisttps
mov
es
cmp
sub
xchg
cmpsb
mov
push
shlb
lods
fwait
pusha
loop
xchg
adc
adc
mov
stos
cltd
adc
fs
and
sub
gs
sbb
adc
mov
and
sbb
in
jnp,pt
idiv
xchg
push
inc
stc
rclb
xorb
jne
jbe
shl
xor
adc
xchg
xchg
inc
add
shlb
lods
add
mov
dec
add
xor
cmpsb
xor
clc
in
sub
mov
dec
mov
cmpsl
data16
js
mov
insl
and
jl
cli
mov
pop
sub
loopne
push
mov
out
decl
lret
je
pop
out
xor
imul
rcrl
iret
xor
jp
jnp
stos
jp
add
push
push
inc
or
jb
aam
sub
pop
and
fld
push
roll
pop
sbb
mov
sbb
jp
inc
jmp
mov
test
pop
jne
cli
mov
mov
sub
jge
inc
lret
cli
push
je
incl
adc
mov
mov
push
sub
add
push
mov
dec
cwtl
addr16
adc
enter
std
jmp
iret
add
int
adc
dec
sahf
sti
xchg
rcpps
sub
jo
aas
and
rcll
mov
sub
jbe
adc
lock
lock
std
leave
dec
nop
mov
inc
js
add
jge
in
ret
xchg
sbb
insb
frstor
sub
das
sbb
xchg
sbb
push
fs
fmuls
xchg
jne
add
inc
add
adc
pop
rol
imul
mov
out
jl
andb
lods
xor
push
leave
mov
lds
xchg
dec
jle
mov
mov
adc
movsb
test
cltd
push
xor
stos
inc
cwtl
loope
lahf
lcall
popf
sbb
icebp
movsb
loopne
xchg
pop
rclb
mov
je
jbe
and
jge
cmp
pop
mov
inc
jle
cmc
scas
push
loopne
inc
out
out
roll
adc
sahf
lret
cmp
das
mov
jl
iret
mov
aas
and
sti
aad
xchg
mov
sbb
mov
fidivrl
xor
cmp
cmp
lea
iret
daa
ret
add
jp
je
pop
pop
lock
and
cmpl
lret
dec
pop
insb
jp
clc
iret
dec
sbb
and
jmp
xor
mov
and
pop
iret
cmp
pushf
ja
arpl
fdivp
lahf
stos
popa
dec
lods
call
mov
jns
lds
adc
es
push
ret
pop
sbb
push
mov
test
mov
cmp
cli
bound
scas
lcall
inc
sti
add
or
mov
mov
cltd
push
int
mov
push
sbb
xchg
mov
adc
mov
and
dec
mov
sub
xchg
dec
out
testl
adc
leave
mov
jl
add
and
sub
stc
mov
mull
movsb
popl
data16
test
fdivs
pop
and
imul
sahf
mov
mov
outsl
scas
lods
fs
cmp
mov
les
xchg
jp
pop
loop
fcompl
adc
push
mov
mov
dec
popf
jmp
movsl
push
cmc
jno
fs
aad
gs
cmpsb
dec
pop
sti
xchg
sub
in
jb
les
cli
sbb
test
pop
push
pop
xor
sub
movsl
cltd
mov
ljmp
out
ret
sub
push
xchg
ret
pop
pop
sub
daa
pop
and
fldt
mov
pop
mov
repnz
add
outsl
dec
sub
faddl
inc
jg
ret
fwait
aad
or
jnp
add
test
push
xchg
out
filds
scas
cwtl
aam
je
mov
mov
ds
lret
or
mov
scas
aas
push
pop
in
mov
outsl
inc
jecxz
adc
out
and
sbb
lds
dec
fs
imul
inc
iret
int
stc
and
push
gs
psrlq
ljmp
jo
sbb
adc
fildl
sbb
mov
add
daa
mov
adc
mov
inc
popf
cmp
xor
repnz
iret
sbb
loope
enter
std
scas
push
mov
and
aas
aas
and
lahf
ss
inc
addr16
jne
lock
mov
mov
int3
fs
xor
and
ret
orl
and
cs
rcrb
cli
add
pop
push
push
daa
nop
mov
push
outsb
je
inc
add
pop
sub
inc
clc
sub
inc
mov
je
imul
or
hlt
xchg
push
inc
mov
lahf
mov
or
test
push
into
movsl
sbb
fnstenv
lret
pop
push
inc
loope
ret
mov
mov
lcall
jns
imul
imul
mov
addr16
cmp
mov
cmp
popf
lahf
mov
lcall
test
or
out
jo
or
stc
adc
mov
pop
cli
aam
dec
into
into
cmp
sbb
divl
sub
pop
fcoms
test
pop
or
push
xor
mov
jbe
mov
cmp
aas
xor
jg
iret
jg
sub
pop
pop
imul
inc
fs
inc
ret
les
xchg
mov
fcompl
xchg
sub
inc
outsb
rcll
fsubrp
and
mov
push
jo
jbe
xchg
fwait
ja
sti
ret
xchg
cmpsl
push
aad
int3
xor
xchg
movsb
jbe
inc
push
mov
xchg
sahf
das
push
lods
push
push
ret
mov
mov
pop
and
ret
jmp
jne
cmc
sahf
fdivrs
scas
addr16
jae
stos
xor
pop
cmp
push
add
out
sahf
aaa
push
fsubl
mov
adc
push
mov
sub
test
mov
mov
pusha
push
push
repnz
lret
outsl
addr16
je
sbb
mov
sarl
push
pop
repz
mov
leave
and
push
push
addl
test
push
popf
cwtl
out
js
pop
dec
jno
stos
xor
out
pop
adc
dec
sarb
or
jo
adc
mov
inc
or
insl
xchg
pop
inc
mov
out
inc
or
jge
fcoms
test
jecxz
fldl
xchg
fwait
shrl
xor
cltd
or
jle
inc
ja
gs
inc
call
jno
inc
rol
scas
mov
jp
adc
movsb
mov
aam
xchg
or
xor
jns
in
adc
popa
jecxz
sub
cmpsb
sar
pop
cmp
movsl
pop
mov
cmpl
jns
and
mov
mov
add
pushf
insl
arpl
dec
cmp
into
lds
cmpsl
jae
push
in
lods
dec
push
dec
idivl
ss
pop
lret
mov
dec
pop
arpl
fldt
cmp
fwait
clc
ret
dec
lods
push
gs
mov
stos
std
cmpsb
in
pushf
call
lret
mov
add
imul
pusha
loope
xor
jle
sti
fwait
je
cs
sbb
inc
shlb
dec
jmp
popf
and
pop
xchg
popf
push
push
roll
xchg
test
aas
imul
int3
xchg
pusha
or
and
dec
das
pushl
mov
bound
push
push
pop
leave
test
cwtl
pop
outsl
lea
or
jae
repnz
test
cmpsl
sbbl
sub
dec
subb
xchg
xchg
fcomip
dec
shlb
sbb
push
les
mov
ja
lcall
js
sub
jns
cld
bound
mov
sub
xchg
sbb
sbb
xlat
pop
mov
imul
and
mov
mov
inc
cmp
dec
push
jno
adc
sub
in
pusha
stos
and
mov
mov
push
pop
cltd
bound
das
fbstp
out
cmp
cmpsb
xchg
or
dec
mov
in
push
push
enter
jge
cmp
sar
and
adc
mov
or
push
ss
orl
shlb
pop
sub
xchg
pop
jnp
ja
ja
add
mov
out
pop
pushf
rcrb
jle
mulb
fldl
aad
jmp
xor
or
push
ror
jae
cli
es
std
test
adcb
mov
out
adc
fs
int3
pop
cmp
loopne
pop
rorl
push
int3
hlt
nop
xor
pop
out
and
dec
cmp
jne
push
xchg
pop
cld
ficompl
addl
mov
sahf
add
lea
mov
add
fwait
imul
pop
aad
rcr
dec
xor
dec
aad
xchg
dec
pop
std
cmp
adc
sarb
inc
cmpb
cmp
fiaddl
fisttps
jecxz
add
jmp
cmp
push
inc
cwtl
xchg
pop
inc
mov
enter
mov
popl
sub
dec
mov
fnop
popa
mov
lret
or
jne
mov
sub
daa
nop
cmp
xchg
test
cmp
mov
add
dec
add
int
fwait
dec
xlat
add
cli
mov
mov
or
je
mov
scas
sbb
xchg
in
outsb
jp
jge
xor
aad
jg
in
decl
mov
xchg
movsb
add
js
aaa
and
inc
push
ror
push
roll
test
imul
daa
cmp
enter
les
in
mov
movsb
mov
inc
and
adc
dec
mov
int
js
or
push
jmp
add
mov
leave
leave
sub
arpl
iret
sub
sub
iret
pop
and
mov
clc
cmpsl
xchg
inc
xor
in
push
iret
in
sub
int
sbb
gs
cmp
popa
adc
sbb
stc
dec
mov
sahf
outsb
movsl
cmp
mov
shl
movsl
daa
adc
loope
cmp
push
jl
pop
jb
adc
leave
sub
sti
in
mov
jecxz
aad
fwait
movsl
fistpll
mov
repz
xchg
or
repz
xor
shrl
rcll
push
fdivl
cmp
repnz
mov
cltd
xlat
clc
movsb
outsb
adcl
ret
push
sbb
popf
push
xchg
les
cmp
in
push
mov
stc
push
and
js
mov
xor
push
adc
loope
out
shll
or
aas
adcb
jbe
lcall
inc
pop
jne
add
fwait
mov
xchg
pop
add
inc
adc
push
xchg
sahf
dec
pop
ss
psubd
or
fadds
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
int
mov
mov
pop
jl
and
jae
cmp
mov
lret
aas
es
adc
push
mov
adc
xor
push
xor
and
pop
sahf
nop
in
adcl
sub
cmp
and
jle
sub
movsb
test
repnz
popa
ja
test
mulb
inc
mov
fidivs
push
push
mov
xchg
and
adc
add
xchg
add
hlt
leave
mov
cltd
ret
and
into
dec
inc
xchg
sbbb
leave
int
popa
rcrb
mov
jecxz
out
das
in
push
sbb
mov
stos
mov
andl
push
mov
mov
jno
ret
outsl
and
xor
add
jecxz
mov
cmp
rcrb
jl
mov
pcmpeqb
mov
mov
lret
lods
mov
mov
cld
ss
inc
pop
mov
enter
in
pop
sbb
and
push
in
addr16
adc
pop
popa
popa
in
pop
movsl
cld
sbb
call
pop
clc
pushf
xor
fs
fbstp
cmpsb
lcall
fucom
mov
gs
in
int3
jnp
jmp
stos
add
rcrl
cld
cmpl
ffreep
mov
push
cld
loopne
outsl
sbb
icebp
jbe
inc
mov
cmp
fldcw
enter
or
and
xor
pop
mov
roll
out
call
popf
add
sti
lret
fiadds
sub
fs
sub
push
xchg
cmpsb
pop
pop
cmp
xchg
lds
mov
jl
ljmp
cmp
in
dec
repnz
mov
pusha
xchg
mov
movsl
and
pop
das
sbb
sti
scas
adc
ficompl
mov
jmp
xchg
nop
test
jl
xchg
adc
hlt
faddl
pop
xor
sub
std
ljmp
add
cmp
jns
ja
push
leave
out
jge
aam
or
sbb
push
insb
jnp
add
pop
jg
add
inc
push
cmp
inc
je
push
xor
xchg
jo
daa
inc
mov
jnp
divb
inc
lods
push
or
test
lret
popa
lds
pop
add
adc
stc
or
pop
shl
sbb
xor
push
xlat
mov
arpl
and
loope
and
cli
mov
es
sub
sub
lock
scas
push
out
test
out
pop
mov
adc
cmp
xchg
add
inc
int
stc
sahf
repz
or
shll
out
in
xor
xor
insb
inc
lea
or
int3
push
idivb
adc
mov
jge
mov
lods
mov
lock
icebp
push
pop
pop
clc
mov
cwtl
sub
xor
insl
push
mul
stos
pusha
cmp
and
push
imul
call
push
and
or
stc
sbbb
mov
arpl
xchg
aam
pop
fistpl
nop
dec
scas
cmp
pop
call
and
push
enter
mov
add
lcall
inc
dec
cmp
xor
pop
mov
fstpl
ss
mov
fldcw
ljmp
add
xchg
bound
mov
push
xchg
sahf
call
push
xor
aaa
mov
test
xor
loopne
icebp
cltd
lds
aaa
dec
arpl
gs
xor
popa
daa
jnp
pop
pop
adc
cmc
adc
jbe
xchg
cld
mov
daa
aam
sahf
int3
and
roll
loopne
and
and
int
inc
call
add
cmc
popf
mov
loop
pop
decl
cmpsb
mov
int3
cli
dec
rcl
in
jno
inc
cmp
sub
in
xchg
aaa
xchg
out
jmp
dec
fldenv
cld
mov
pushf
lcall
inc
dec
ljmp
dec
int3
sub
and
push
push
xchg
fwait
rorb
xchg
cmpl
neg
xor
xchg
mov
mov
loopne
nop
daa
jle
dec
xchg
pop
push
pop
pop
mov
mov
lea
jbe
jnp
dec
add
mov
mov
dec
xor
push
jnp
aam
inc
and
in
or
mov
mov
mov
lahf
jo
xchg
inc
dec
jmp
icebp
mov
mov
xchg
imul
call
push
and
jl
test
xrelease
inc
sarl
sub
xchg
xor
adc
lea
sub
inc
mov
inc
cmp
jl
cltd
sbb
mov
mov
movsl
std
jo
mov
dec
in
adc
fsubl
cmp
shlb
add
ds
ret
or
jmp
sbb
add
inc
xchg
push
dec
pop
push
shll
ret
jp
imul
lret
es
loop
dec
xlat
fmulp
push
mov
hlt
sub
cltd
push
stos
push
shrb
jl
leave
imul
mov
xor
fdivrl
xchg
push
and
cmpsb
repnz
aas
push
or
mov
sub
in
inc
push
push
mov
xor
lcall
mov
cmp
mov
dec
in
or
jb
outsl
jae
push
fiaddl
xor
sub
jae
and
sarl
jg
inc
fbstp
push
ljmp
sub
test
pop
pop
cmp
dec
jbe
cmp
inc
loop
inc
enter
inc
test
cwtl
out
arpl
std
gs
mov
daa
jb
paddusw
ret
daa
push
add
add
addr16
in
xchg
aaa
out
and
lea
imul
mov
shlb
jmp
cld
outsl
lock
fcmove
push
pushf
fwait
push
xchg
cmc
lret
addr16
rcrl
andnps
pop
gs
lcall
mov
jle
aam
dec
push
cmp
movl
jae
mov
add
dec
cmp
and
sahf
es
push
sub
xchg
lcall
sub
loopne
pop
lods
inc
sbb
mov
add
sub
repz
adc
imul
lds
pusha
test
or
jnp
and
fcomp
adc
mov
les
loope
shrl
push
sti
icebp
inc
add
mov
rorb
xor
or
push
rcrb
dec
test
and
inc
sub
mov
mov
mov
pop
aad
lock
xor
cmp
or
rclb
or
sub
les
cmpsl
sub
out
es
push
and
daa
jns
add
aas
fsubr
pop
in
sub
cmp
mov
mov
jnp
sar
inc
pop
and
sbb
cmpsl
mov
out
aaa
and
stos
sarb
xchg
insl
mov
dec
adcb
in
rorl
or
repnz
cltd
hlt
test
outsb
dec
imul
pop
add
xchg
aaa
adc
mov
idivl
mov
inc
shrl
cli
inc
jge
push
xor
int3
jns
add
sti
mov
test
test
xchg
out
enter
cmpsl
fsubl
jl
nop
ret
inc
inc
jb
jbe
filds
add
scas
je
inc
mov
sbb
ljmp
xor
xlat
in
push
xor
and
xchg
sub
out
dec
jl
outsl
arpl
fistpl
xor
add
bnd
push
ret
dec
out
sarb
sub
or
clc
cwtl
jns
aam
aad
xchg
into
inc
aad
pop
pop
inc
mov
jle
or
mov
cmc
out
mov
dec
dec
push
js
sbb
lret
inc
cmp
fisubs
push
jo
das
rolb
push
imul
leave
pop
pop
jle
popf
mov
jb
call
sub
jb
xlat
fildll
xor
ret
add
and
jnp
daa
cmp
mov
sbb
sbb
mov
jne
xchg
jno
xchg
mov
stos
sahf
cmp
push
pop
int3
loop
out
jle
gs
cmpb
pusha
mov
mov
add
rcl
sbb
stos
les
xchg
mov
pop
xor
push
loop
fdivs
mov
mov
jle
mov
aas
mov
inc
popa
jmp
push
fucomp
jo
push
inc
mov
mov
repz
push
jmp
adc
push
or
jle
insb
dec
in
clc
je
fxch
cmpb
adc
mov
cmp
lock
xorl
out
nop
loop
inc
push
cmp
dec
js
in
loopne
cmp
lahf
out
adc
insl
mov
or
jno
xor
sti
into
pusha
mov
xchg
arpl
push
lods
dec
scas
loope
push
outsl
push
dec
pop
sbb
jmp
lock
push
adc
pop
mov
mov
or
mov
pop
lcall
inc
pop
lods
xor
adc
cld
jnp
adc
cmp
mov
push
testb
cmc
cmp
xor
dec
fisubs
mov
or
mull
mov
sarl
push
sbb
add
pop
and
sbb
push
lea
clc
mov
js
mov
aas
inc
mov
pop
sti
mov
dec
mov
jb
inc
jne
fstps
popf
jns
push
sarb
dec
cmpsb
push
sub
stos
mov
adc
lcall
jle
cltd
dec
pop
aad
push
fiaddl
gs
icebp
inc
sbb
dec
adc
in
ljmp
in
and
adc
xor
out
adc
or
sub
sub
in
es
dec
pop
sub
rolb
in
mov
cmc
jae
push
cmp
repz
jg
sbb
lods
in
mov
mov
dec
and
scas
cmpsb
cltd
or
jne
ret
dec
icebp
cld
cmp
dec
jl
mov
adc
in
adc
sub
sub
mov
arpl
dec
imul
jp
mov
lea
adc
or
imul
push
jge
mov
xchg
xchg
or
aas
cmp
xchg
cmp
or
mov
jle
ss
mov
xchg
or
jb
les
and
out
mov
add
fisttpll
pop
mov
scas
mov
fiadds
adc
fcompl
mov
add
add
sub
xchg
pop
cld
push
mov
pop
sbb
xor
sub
pop
add
cli
inc
pusha
js
jae
ds
lock
pop
and
outsl
in
and
scas
lea
push
imul
mov
scas
xchg
sahf
testl
push
sbbl
fwait
cmp
mov
cmp
sub
scas
xchg
pop
mov
cld
or
ss
ret
mov
jecxz
inc
or
loopne
inc
out
pop
vmwrite
jge
dec
loopne
int3
push
fnstcw
cmc
cmp
imul
xor
pop
adc
es
cmp
jne
mov
inc
push
xchg
stos
pop
mov
andl
std
int
imul
cli
call
shlb
js
inc
rcrb
dec
lcall
jae
pushf
lods
push
pop
sbb
push
inc
cmp
add
sbb
cmpsl
mov
mov
adc
fsubrs
jnp
test
push
jg
ret
out
jns
xorb
in
test
fwait
sbb
pop
cwtl
xchg
jmp
mov
xor
adc
push
in
mov
jl
loop
jl
stos
test
pop
sbb
or
decl
pop
jne
mov
push
loop
jl
cmpsl
pusha
jae
test
cmp
rcll
cmpsb
stos
mov
inc
jmp
xchg
cld
mov
js
imul
mov
mov
pusha
leave
outsl
scas
mov
scas
bound
fdivp
mov
ja
cmc
and
adc
and
inc
mov
and
cmp
daa
sahf
gs
pop
jecxz
jne
mov
push
mov
sub
dec
or
cld
push
xor
adc
in
popa
mov
jae
fildll
inc
cmpsb
lahf
cwtl
cmpsb
adc
and
sbb
xchg
int3
daa
add
or
hlt
jge
loopne
push
or
cltd
sub
add
xchg
stos
notb
ret
mov
adc
fadds
das
jmp
mov
in
idiv
or
les
les
add
jmp
pop
div
jmp
push
mov
add
jge
jle
mov
xchg
dec
xor
mov
pusha
pop
jno
lock
int3
or
ds
add
mov
ret
dec
xor
xchg
jae
push
inc
hlt
xlat
bound
push
fcompl
popf
pop
mov
in
adc
xchg
and
ret
js
js
pop
jg
mov
imul
das
aaa
push
jge
fsub
xchg
or
test
stos
nop
jns
dec
outsb
push
push
lret
insl
fistl
add
ja
mov
push
xchg
xchg
mov
sti
fld
and
aam
into
stos
outsl
movsb
cmp
inc
mov
inc
xlat
inc
mov
cmp
cmpsb
imul
dec
adc
or
dec
inc
and
pushf
sbb
mov
fmuls
push
pushfw
xchg
adc
push
clc
push
lcall
in
daa
add
outsb
mov
rcll
negl
push
fsubrl
dec
gs
inc
dec
jnp
adc
fnstenv
call
loope
and
adc
fstp
cmp
lcall
fldcw
into
or
pop
push
cli
imul
into
dec
xchg
insb
inc
jbe
pop
push
pop
pop
popf
adc
outsl
stos
pushf
movsl
or
mov
mov
imul
imul
mov
pop
js
xchg
mov
repnz
or
sarb
arpl
mov
loopne
enter
inc
in
repnz
sbbb
fmuls
push
fs
adc
nop
data16
pop
pop
ret
out
and
sub
xchg
scas
mov
outsb
in
int3
iret
cmpsl
sub
fsubrs
xor
lret
mov
add
push
dec
mov
pusha
push
sahf
fcompl
daa
insb
xchg
sahf
mov
sub
push
cli
movsb
popf
xchg
jbe
ret
jg
adc
fnstsw
divb
mov
es
call
arpl
outsb
push
dec
jl
sbb
sbb
sbb
push
daa
aas
scas
push
xor
adc
sub
mov
pop
stos
mov
mov
ss
push
xchg
dec
enter
dec
loope
push
cli
or
aam
mov
mov
xchg
outsb
roll
mov
mov
js
adc
xlat
in
add
mov
ja
lea
pop
mov
dec
fcom
and
lods
sbbb
dec
push
mov
test
push
add
lret
add
push
popa
lret
cmpsl
push
inc
das
pop
add
add
leave
mov
lods
mov
and
pop
xchg
das
cmp
cmp
xchg
aam
test
rolb
test
sub
outsb
mov
dec
shll
jge
lock
shlb
les
or
and
movsl
mov
jp
push
das
test
fidivrl
lea
dec
push
xor
ljmp
push
xor
inc
lahf
sbb
cmp
add
fidivs
add
jle
insl
into
cs
mov
fsts
cmp
push
idivl
jno
mov
mov
test
lret
or
jbe
int3
aad
add
mov
inc
mov
inc
xchg
inc
mov
sub
dec
movsb
in
in
loope
in
xchg
or
sbb
stc
ffreep
fisubrs
sub
std
mov
pop
insb
cmp
in
stos
mov
in
sbb
adc
jmp
in
and
lahf
xchg
pop
movsl
les
in
int3
dec
enter
in
gs
mov
or
cmpsl
jg
ss
sbb
pop
popf
xchg
out
mov
cld
fdivrs
sbb
mov
addl
loopne
lret
outsl
aam
popa
inc
mov
mov
out
inc
xchg
adcb
cld
mov
cli
les
in
xlat
push
sbb
ret
rcpps
cmp
and
js
xchg
and
mov
mov
movsb
xchg
std
or
push
cltd
in
sbb
rclb
inc
mov
jle
mov
adc
dec
inc
cmpsl
adc
int
popf
xchg
or
pop
into
xor
jno
ja
sbb
pop
xor
pop
in
movsb
sbb
inc
or
outsb
fcmovu
jae
aam
jae
adc
cmp
mov
insb
pop
mov
fsubp
lock
xchg
cli
gs
jbe
dec
push
lods
cmp
jne
dec
push
jns
outsb
dec
rcrl
aaa
or
enter
xchg
jns
mov
adc
shrl
cmpsb
test
loopne
pxor
and
mov
movsb
jg
mov
mov
jno
mov
fstl
cmp
jb
jno
pop
cmpsl
xchg
fsubl
push
inc
scas
insl
les
imul
push
arpl
mov
and
xor
movsb
sub
mov
ljmp
adc
cmpl
lock
es
out
hlt
sbb
push
adc
sub
jcxz
xchg
mov
fidivl
mov
xor
mov
pop
test
dec
and
push
sub
stos
rcr
mov
or
out
push
push
sbb
and
test
mov
outsb
dec
data16
push
mov
push
add
out
xchg
sbb
mov
daa
hlt
ja
sbb
adc
mov
sbb
xlat
push
pop
test
xor
xor
pop
in
mov
shl
fwait
pop
lea
test
mov
adc
sub
jno
aad
flds
fdivl
call
pop
in
pop
mov
pusha
mov
fmul
xchg
cmc
cmp
std
sbb
les
fisttpll
push
movsl
pop
fisttpl
imul
inc
push
cli
ja
lahf
mov
push
mov
xchg
dec
xor
mov
cmc
outsb
add
ljmp
cs
lea
leave
xor
mov
jecxz
sbb
jp
hlt
mov
stos
js
jno
xor
jp
xor
outsl
pop
testl
enter
mov
mov
ret
mov
test
lahf
or
jp
cs
enter
adc
out
mov
popf
jno
adc
ret
test
jnp
push
enter
stc
dec
into
add
xor
jo
or
cmp
dec
pop
neg
xor
mov
icebp
imul
cmp
and
pusha
adc
pop
bound
push
and
xchg
mov
cld
add
int3
lret
xor
out
and
es
stos
push
xor
dec
xor
xchg
mov
or
push
jns
aas
dec
out
inc
rcrb
popl
popl
cmp
outsb
xchg
cwtl
jge
into
pusha
rorl
sbb
loope
rol
adc
inc
xchg
repnz
sbb
addr16
xchg
mov
xchg
add
dec
mov
and
out
jno
je
jl
ljmp
push
ljmp
and
stc
rorb
push
and
test
mov
es
sbb
lcall
sbb
sbb
repnz
xchg
pushl
push
jo
push
sub
dec
ficompl
push
mov
pop
pop
inc
jbe
bswap
dec
idiv
test
and
dec
xchg
mov
push
or
ss
loope
jmp
xchg
das
test
in
insl
hlt
insb
sub
jne
xchg
mov
in
pop
mov
push
push
in
jl
and
lds
pop
xor
push
mov
stos
pop
subl
jb
xchg
cmpsl
mov
jbe
sbb
scas
jnp
mov
pop
divl
mov
frstor
dec
out
xchg
jo
push
cli
jp
push
outsb
out
notl
cld
mov
stos
in
dec
lea
jl
ror
mov
arpl
mov
call
add
jle
mov
loope
mov
and
jge
mov
adc
leave
push
arpl
mov
addr16
pushf
mov
xchg
out
xchg
into
dec
or
int3
sub
outsl
dec
dec
cmp
pop
mov
mov
pop
dec
mov
cmpb
and
jl
out
jmp
jb
push
jl
das
and
pop
ffree
add
jnp
insb
or
adc
popa
add
lret
lock
es
add
test
sub
out
sub
pop
xor
out
xchg
jge
sarb
sub
mov
dec
ljmp
dec
les
lock
stc
int
div
int3
js
cmp
jmp
clc
jbe
inc
mov
and
and
push
js
cmpsl
les
add
add
stc
mov
or
mov
aam
xchg
sub
rclb
inc
push
fwait
add
sbb
pop
cmpsl
xchg
leave
cmp
sti
cmp
mov
fsub
jge
imul
fbld
mov
movsb
sub
mov
mov
sar
sub
pop
inc
fmulp
push
gs
loope
jbe
cmp
data16
cmp
imul
cmp
sub
sub
mov
inc
mov
imul
or
sbb
mov
or
addr16
subb
mov
jmp
sub
xlat
sub
int
jle
xor
cwtl
mov
cmp
lods
add
push
testl
aaa
sub
jne
adc
jno
adc
or
xchg
in
dec
adc
fstl
in
mov
jns
lds
xchg
inc
dec
mov
subl
cld
test
mov
pop
and
insb
mov
in
daa
ret
cmpsl
stc
push
in
or
or
inc
stos
in
popa
or
add
repz
mov
pop
mov
adc
sti
dec
adc
lds
mov
mov
aaa
adc
sti
clc
sub
push
xor
insl
es
adc
xor
push
sbb
xor
sbb
loop
loop
sbb
gs
dec
repz
pusha
in
add
jle
int
test
movsb
pop
pop
popf
sbb
mov
arpl
movsb
adc
pop
mov
outsb
xchg
int
mov
and
and
jecxz
insb
lods
inc
mov
lcall
sub
push
pop
adc
xchg
fildll
test
mov
test
push
ss
mov
rcll
aaa
daa
ljmp
popa
loop
mov
pop
sbb
lock
or
jae
pop
or
lods
jns
and
xchg
sub
out
stos
mov
into
xchg
cmp
int3
xchg
out
test
aas
sbb
jo
or
sbb
adc
jp
nop
xor
inc
pop
xor
cwtl
adc
mov
push
push
ss
cmp
inc
cmpsl
mov
jnp
mov
cmp
enter
mov
mov
stc
xchg
or
test
jl
or
push
shrb
jle
jno
xor
hlt
dec
icebp
fnsave
mov
mov
push
adc
xor
arpl
mov
stos
leave
mov
pop
and
test
mov
arpl
jno
xchg
and
sub
push
pop
add
shll
xor
jno
cmpl
call
adc
stos
inc
mov
xchg
out
jnp
xchg
xorl
fnsave
sbb
or
call
fimull
inc
and
jbe
xor
lret
sub
addb
shlb
cmp
lods
into
cmp
popa
xor
add
inc
adc
and
mov
shlb
ds
jecxz
imul
dec
fstpt
mov
xchg
lret
clc
and
jp
dec
stc
pushf
dec
fidivrl
jo
mov
imul
clc
mov
das
mov
lret
lods
push
into
xchg
sti
mov
inc
pop
je
inc
xor
add
dec
push
aad
aam
lea
sbb
repz
or
bound
add
inc
dec
movb
cmp
shr
leave
mov
arpl
xor
mov
dec
or
jp
sbb
mov
sbb
pop
fisttpl
xchg
mov
xor
xchg
and
shlb
test
aad
dec
jnp
into
push
insl
in
adcl
not
mov
sbb
add
out
or
lea
ss
mov
or
mov
sahf
je
insl
pop
inc
cld
fisubl
das
pop
jne
insb
push
repnz
adc
mov
test
inc
dec
push
repz
icebp
pop
xchg
pop
aaa
xor
inc
sub
jb
aas
jnp
sti
fmulp
jl
sbb
mov
xor
lcall
sbb
push
xor
cmp
mov
out
test
mov
sbb
out
lret
pop
ljmp
add
imul
mov
shrl
testb
addr16
add
aad
or
ljmp
sbb
pop
adc
lcall
pop
or
dec
xor
add
inc
inc
addr16
cltd
adc
mov
pushf
insb
ljmp
push
sbb
mov
mov
das
or
push
xchg
inc
out
cwtl
stos
mov
dec
pusha
lret
ret
or
rclb
lahf
mov
and
xor
mov
js
inc
in
sbb
push
lods
out
jbe
fwait
sbb
cmp
aam
push
mov
fadd
arpl
aas
aas
jp
outsl
sbb
rclb
into
lret
sub
or
scas
adc
subl
inc
mov
pop
xchg
cmp
pop
xchg
sti
stc
push
leave
mov
lock
dec
loop
movsl
insl
mov
inc
xlat
insl
sub
and
cmc
shll
or
pop
xchg
push
and
xchg
mov
cmp
js
loope
fistps
or
mov
xchg
shr
mov
int
stc
arpl
or
out
fs
scas
push
outsl
push
mov
dec
fadd
test
mov
repz
jns
xor
push
outsl
movsl
jg
sbb
mov
dec
add
xstore-rng
cmpsl
inc
xor
add
sub
mov
enter
inc
add
fstps
adc
pop
ja
or
cmc
fimull
add
dec
mov
aad
push
inc
jbe
rcrl
sbbb
and
dec
shlb
and
orb
enter
into
loop
mov
mov
jge
mov
mov
or
cld
push
je
std
movsl
xor
fcompl
mov
idivb
sarb
push
jae
test
adc
push
xchg
jecxz
aad
dec
jecxz
test
cmp
cmp
sub
bound
fptan
test
out
call
insb
ret
sub
icebp
sub
mov
out
scas
and
lcall
xor
rcl
lods
lea
mov
mov
sub
das
jmp
inc
insl
add
cmc
iret
xor
adc
loopne
negl
push
add
into
xlat
nop
fistl
pop
sub
sarb
aad
mov
inc
fnsave
popf
loope
fwait
leave
xor
fs
sub
insb
mov
xchg
enter
std
loopne
jnp
jmp
jne
sbb
clc
pushf
clc
cmp
and
icebp
mov
adc
fwait
add
mov
mov
push
scas
dec
das
cwtl
sub
push
orb
mov
fucom
arpl
cltd
sbb
mov
sbb
dec
lock
mov
add
sbb
fwait
mov
lock
insb
pop
pop
fucom
push
mov
enter
mov
imul
mov
in
adc
jbe
xchg
cmpsl
mov
out
push
xor
cli
into
loope
enter
cmpsb
pop
call
mov
decl
jo
jbe
in
test
out
jo,pt
lds
mov
pop
lcall
sbb
or
aaa
mov
xchg
inc
in
mov
xchg
cmpsb
push
aam
pop
cmpb
cmp
dec
hlt
sbb
sbb
inc
lcall
mov
pop
in
fisttpll
ret
adc
out
inc
lret
push
xor
stos
out
mov
mov
pop
lahf
out
nop
ret
int3
in
mov
andl
jae
mov
pop
pop
xor
mov
mov
xor
lahf
pop
jne
mov
fs
les
test
outsl
xchg
ljmp
add
mov
pop
es
adc
xchg
out
bound
cld
xorb
cld
mov
in
cld
mov
push
mov
aaa
idiv
xorl
je
dec
ss
int
xor
inc
in
xlat
ja
inc
rep
push
push
sbb
jbe
loope
or
cld
pop
add
mov
mov
cmpsl
fisubl
add
adc
jae
fwait
add
andb
mov
mov
inc
cwtl
in
pop
int
push
les
das
cmp
jle
lar
cmp
lret
mov
and
dec
sbb
inc
add
dec
pusha
ljmp
add
sbb
push
push
stc
jnp
lahf
imul
and
insb
mov
dec
sub
cli
test
repnz
das
pop
loopne
and
push
dec
nop
push
out
cs
mov
mov
mov
mov
in
mov
test
shl
addr16
jp
testl
lods
mov
push
bound
outsb
lcall
lock
hlt
fs
mov
mov
fiadds
test
cmp
mov
sti
das
pop
pop
loope
jae
test
mov
pop
add
mov
cmp
cli
out
dec
mov
ljmp
jbe
dec
ds
std
stos
inc
xchg
rorb
loope
out
lcall
jno
mov
mov
cwtl
cmpb
insl
int
fcmovne
int
leave
and
or
insl
add
addr16
fwait
pop
insb
incl
pop
xor
sbb
xchg
adc
dec
cmpb
test
push
lcall
jl
jno
jle
lock
cld
fbld
repnz
xor
push
adc
or
dec
imul
and
jle
lret
and
and
sahf
cld
mov
mov
ficoml
subb
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
mov
cmp
add
lcall
add
repz
add
mov
add
loop
mov
sbb
fs
lahf
movsbl
mov
loop
das
and
and
jmp
jae
shlb
mov
insl
lahf
mov
sub
cs
loop
out
mov
xchg
sub
in
mov
adc
ret
mov
jno
out
aad
mov
jae
ss
lds
fimuls
jns
mov
les
pop
das
and
test
cmc
rclb
cs
aas
fcoml
xor
pop
cmpsl
mov
bound
es
test
loop
cmc
mov
scas
call
or
loop
jle
pop
xor
xchg
or
arpl
ljmp
adc
loopne
rclb
sbb
cltd
xchg
bound
mov
push
add
sti
mov
xchg
gs
xorl
insl
ret
inc
in
cmp
sub
sub
out
or
test
inc
loop
je
pushf
outsb
push
mov
mov
jo
loope
xchg
scas
cmp
mov
inc
jmp
outsl
aas
dec
repz
jle
loopne
dec
inc
mov
test
jge
lock
bound
in
push
popa
lea
and
and
cmp
or
cmpsb
mov
cmp
test
or
cmp
addr16
adc
sbb
shlb
call
xchg
stos
jnp
shr
in
es
dec
adc
lods
mov
push
cmp
loop
mov
sub
adc
ja
or
cmovb
xor
adc
push
mov
adc
roll
adc
jb
pop
shrb
pop
sbb
sar
cmc
lcall
mov
cmp
orb
mov
push
mov
and
sub
sbb
in
ss
outsl
or
loope,pn
xor
adc
mov
filds
push
pop
in
dec
add
xor
dec
cmpsl
inc
insl
mov
into
push
or
pop
jmp
mov
cmp
dec
stos
popa
and
lcall
cltd
mov
sub
js
fwait
ja
scas
in
lods
dec
test
mov
lea
xor
test
in
inc
incl
push
addr16
xchg
into
je
adc
inc
sbb
and
in
mov
in
dec
test
in
addr16
and
rcl
outsl
sti
jl
out
adc
clc
lret
fmuls
xor
push
jnp
fimull
ljmp
jo
pop
dec
push
fcompl
push
jo
mov
xor
or
pop
push
sub
xchg
in
loop
fstl
data16
popl
mull
mov
lret
loope
push
mov
ja
out
xchg
jecxz
je
adc
lds
sub
sbb
adc
cmp
shlb
icebp
stos
mov
add
je,pn
imul
idivb
dec
or
push
xchg
cmp
push
out
fucomip
lods
loope
ljmp
mov
aas
icebp
pop
outsl
js
lock
imul
pop
loope
mov
sarl
inc
jp
call
add
loopne
int
fwait
nop
fs
jno
xchg
int
push
sub
mov
pop
adc
stos
call
add
sbb
push
mov
add
fsubl
mov
repnz
and
je
pop
fs
mov
adc
cmpsb
addb
mov
pop
xchg
and
sbb
inc
xchg
xlat
bound
or
lret
mov
mov
ret
scas
mov
test
cmc
loop
pushf
push
push
jo
ljmp
sub
pop
jge
add
stos
std
hlt
js
adc
shll
mov
repz
int3
jecxz
or
sub
stos
pusha
loope
mov
xchg
add
xchg
adc
cmpsl
jbe
cmp
lods
dec
or
jmp
adc
fdivr
sbb
lea
rcrb
rorl
jno
subb
int3
ja
imul
xchg
loop
dec
adc
mov
fisttpl
cmp
jl
cli
in
jno
lcall
lahf
push
leave
xor
lret
push
and
cmp
pop
ds
lods
sarl
jb
stos
iret
cmpsl
pop
rolb
sbb
into
outsb
in
test
lods
imul
sahf
iret
mov
xchg
fisttps
ret
js
nop
mov
lret
push
cmp
rcll
push
cltd
push
ljmp
into
shlb
push
jns
loope
jns
or
jne
repz
loope
push
fdivl
xchg
insl
lea
arpl
aam
in
js
sub
pusha
roll
in
jae
push
mov
not
insb
adc
xchg
mov
xchg
fisubrs
lock
repnz
cltd
mov
mov
push
bound
leave
and
lret
jl
shll
cmp
clc
sti
aad
cmc
dec
jle
xor
imul
jmp
repz
out
dec
xchg
adc
js
inc
movsb
lods
int3
mov
dec
sbb
imul
adcb
cmp
ret
mov
cmp
mov
adc
outsl
add
jge
ljmp
imul
push
inc
or
pop
mov
sti
sbb
int3
fidivs
mov
movb
inc
add
pop
or
sbb
inc
call
mov
inc
sbb
aaa
mov
mov
lea
js
mov
xchg
mov
cmp
stos
clc
in
repnz
inc
lret
mov
sub
xchg
test
xor
mov
and
cld
lods
add
outsl
idivl
clc
sbb
xchg
test
adc
scas
adc
es
jg
aad
inc
repnz
test
cmp
or
addl
mov
push
decl
cmpsb
sar
or
fmul
addr16
bound
sub
mov
sarb
fstps
lret
movsl
sub
mov
out
or
sahf
inc
loopne
ja
rcl
or
notb
and
and
mov
xor
repnz
xchg
add
sub
ja
and
mov
out
add
sub
aas
add
mov
xor
mov
sarb
cmpb
push
push
out
pushw
cmp
loopne
pop
in
cltd
scas
add
jo
bnd
xchg
cmp
cmp
testl
cmpsb
cmp
mov
jno
inc
cmp
mov
mov
xchg
mov
mov
push
imul
pop
es
nop
jl
jmp
rclb
shlb
sbb
and
and
test
mov
cmpsl
adc
out
aad
mov
ret
mov
inc
adc
loop
pop
fadds
std
adc
cwtl
inc
sub
sti
das
push
add
pop
add
sbb
add
pop
je
lea
aam
cmp
sbb
dec
add
xchg
in
xchg
sbb
inc
daa
test
rorb
sarl
jge
les
roll
pop
add
out
imul
shll
sti
add
adc
dec
adc
pop
mov
pop
and
adc
dec
adc
pop
adc
lret
shrl
stos
stc
fsub
fwait
and
dec
popa
mov
iret
mov
and
cmp
xchg
out
loop
and
sbb
sbb
or
add
mov
sahf
je
hlt
pop
pop
popa
mov
inc
inc
xor
cmp
ja
cmc
push
push
xor
adc
push
mov
jno
ret
mov
dec
add
jg
dec
pusha
mov
je
jge
cli
add
or
sbb
cmp
int3
and
jg
rcr
lods
xor
dec
insl
dec
dec
mov
imul
cmp
leave
fsubp
add
scas
sti
mov
sbb
pop
adc
push
jnp
in
pop
xchg
dec
clc
sbb
das
aad
in
aaa
je
insb
sub
notb
cmc
mov
dec
aad
pop
es
adc
mov
int
icebp
jnp
and
idivl
push
fildll
fwait
ljmp
stos
pop
sbb
mov
cmp
fisttpll
mov
adc
mov
rcl
mov
sub
cmp
jg
aaa
je
popf
pushf
out
out
mov
ret
mov
jmp
fistps
mov
fwait
mov
adc
ret
lods
test
cmp
decl
jp
ds
out
jne
pushf
dec
incl
sbb
pop
push
pop
mov
divb
jp
jne
add
inc
aad
jmp
or
andb
jl
test
scas
or
or
aas
xchg
push
lods
add
repz
outsb
idivl
rcr
sbb
mov
dec
add
test
int3
add
sub
cmp
pop
lds
mov
mov
xor
shlb
scas
mov
mov
lock
jl
xchg
xchg
ljmp
fstps
push
xorb
popa
in
enter
xchg
xchg
iret
sub
dec
cli
clc
xorl
pop
lock
or
push
js,pn
cmp
mov
int3
in
cwtl
addb
sahf
dec
add
xchg
insb
xor
shl
add
pop
mov
push
ret
iret
and
movsb
mov
push
inc
sbb
das
pop
cwtl
push
jnp
pushf
lea
test
icebp
adc
leave
rcrl
loopne
repz
dec
ss
rcrb
pop
pop
mov
pop
lcall
pop
mov
fs
movsb
add
xor
or
sbb
dec
stos
xchg
mov
fstp
cmp
mov
or
or
xchg
mov
mov
xor
ror
mov
or
mov
jecxz
ds
xchg
dec
cld
jge
repnz
stos
lret
testl
jno
cltd
xor
jmp
div
fwait
imul
out
cmp
add
and
mov
mov
cld
push
cs
and
clc
lea
jnp
mov
repz
and
push
jno
repnz
mov
repz
out
loope
xor
and
and
xlat
aas
add
mov
push
ret
cmp
xchg
xor
loope
stos
ja
mov
jecxz
outsb
cmc
dec
mov
jne
and
stos
lahf
pusha
iret
lar
adc
imull
push
cmpsb
andb
int
call
sarb
xchg
mov
ss
in
cmc
dec
add
or
ror
shrb
leave
test
adc
hlt
adc
or
insl
aas
mov
shrb
mov
add
sub
sbb
or
xor
inc
hlt
lds
lcall
jle
sbb
sub
mov
lock
call
cmpsb
arpl
push
jl
sbb
movsb
mov
bound
dec
mov
inc
testl
call
cmpsb
out
sbb
mov
aad
daa
int
bnd
push
jno
push
cltd
push
clc
push
push
xchg
mov
fadds
jl
and
or
scas
sub
sbb
pop
lods
pushf
xlat
pop
je
push
imul
xchg
arpl
inc
test
push
or
ja
mov
mov
add
dec
lar
shll
gs
fs
sbb
ret
std
enter
out
mov
mov
or
out
add
shrb
repz
aad
xchg
push
pop
and
mov
jp
in
les
cmp
addb
sub
pcmpgtd
sub
add
les
push
int3
xchg
mov
jb
push
int3
mov
cmc
scas
repnz
movsb
jne
mov
push
push
adc
and
ds
adc
loope
inc
xchg
and
in
jbe
in
fcmovbe
push
out
insb
add
adc
mov
pop
adc
xor
mov
jecxz
cli
shrb
setb
test
mov
out
pop
and
movl
out
test
das
pusha
cmpsb
jl
aas
push
xchg
in
pop
jnp
in
popf
xchg
ret
cmp
mov
fsub
xor
xchg
pop
mov
mov
sbb
xchg
or
xor
mov
mov
and
inc
cmc
jne
pop
pop
sub
bswap
out
or
or
addb
mov
push
dec
jle
fwait
sub
icebp
stos
mov
xorl
icebp
push
xlat
mov
adc
in
pop
lds
sti
push
call
rclb
mov
cltd
in
adcl
pop
je
xchg
or
inc
test
mov
ficoms
push
inc
jns
push
mov
fnclex
arpl
daa
js
pop
push
test
into
adc
mov
jno
ret
mov
cmp
pop
mov
daa
xor
scas
bound
mov
fbstp
mov
sti
ds
rorb
xchg
idivl
mov
sub
inc
mov
cmp
jecxz
movsb
psllq
inc
mov
clc
adc
ss
lds
imulb
xchg
cmp
sub
insl
pushf
dec
movsb
cltd
push
test
fnstcw
inc
xchg
pmulhuw
xorb
data16
fstl
mov
test
or
lea
notl
mov
xor
mov
repz
leave
shlb
push
pop
or
imul
sbb
sub
push
pop
jge
xor
stos
adc
mov
js
cmp
and
xor
fucomp
push
loopne
ljmp
adc
xchg
add
sub
pop
mov
int3
rol
mov
movsb
and
jno
or
sub
pushf
xor
subb
mov
add
xchg
mov
pop
jo
jno
jge
mov
outsb
inc
inc
sub
mov
outsl
push
cmp
mov
mov
outsb
cld
or
dec
bound
scas
mov
mov
xchg
icebp
inc
cmp
xor
push
cmp
xor
mov
and
notb
cmp
jae
jge
adc
cli
dec
dec
mov
or
loope
xchg
push
fistpl
push
xchg
les
sbb
and
shll
imul
in
or
cwtl
sbb
xchg
gs
arpl
mov
test
xor
test
jne
nop
or
jge
scas
push
sbb
loopne
cmp
and
mov
jecxz
pop
cwtl
xchg
fstps
jge
pop
mov
push
aad
lahf
sahf
cltd
dec
pop
sbb
ss
push
cmpsl
xor
xor
mov
dec
mov
cmp
add
ret
popa
into
cmp
jp
std
jecxz
pop
ret
push
or
outsl
rorb
dec
or
push
outsl
sub
push
fadd
fincstp
inc
int
adc
sub
fcomp
mov
scas
mov
out
pop
and
dec
jbe
ja
dec
or
sarb
lock
and
sbb
int3
sbb
aas
popf
fnsave
xchg
movsl
cmpsl
pop
nop
push
idiv
std
aam
gs
shr
or
mov
shr
jno
leave
push
in
cmp
int
fs
rorb
sbb
aaa
or
stos
cmpsl
pop
adc
pushf
mov
popf
cmp
ss
inc
jg
push
scas
mov
xchg
lret
xchg
pop
mov
test
jmp
out
add
jne
daa
inc
cmpl
ja
ret
and
sub
ror
mov
in
dec
dec
lea
xor
sub
push
ds
iret
pop
adc
mov
mov
int
lds
sub
jp
sub
mov
jl
mov
je
pop
and
and
push
loopne
dec
jmp
inc
les
shr
sub
sbb
add
lahf
sub
pop
or
ret
pop
clc
pop
mov
adc
inc
and
lret
lret
push
inc
cld
pushw
ja
push
push
mov
sub
xchg
sbb
aad
adc
int
mov
nop
push
jg
jbe
dec
js
pushf
cmp
imul
int
jp
sar
inc
dec
sub
fs
mov
xor
ljmp
push
dec
pusha
fisttpl
add
scas
testl
and
cld
jl
addr16
sub
clc
sahf
xor
mov
shl
dec
dec
and
and
out
fdivrl
leave
xor
jmp
sbb
in
lea
aad
ljmp
sub
ja
fidivs
enter
pop
push
inc
or
mov
pop
hlt
add
imul
adc
clc
cli
xor
push
mov
outsb
cmpsl
cmpsl
pop
shrb
jae
xchg
std
add
mov
test
aas
shlb
mov
daa
in
into
lcall
loope
lock
mov
int3
and
fwait
in
ret
es
pop
and
lcall
icebp
repnz
xchg
lahf
and
std
lods
dec
jne
leave
dec
adc
or
cli
sar
test
fwait
mov
jo
ret
pusha
cmp
cwtl
mov
into
jbe,pn
cmp
icebp
and
movsb
sti
xchg
sub
lret
push
out
lds
xor
dec
hlt
mov
mov
and
daa
rcll
js
push
pop
xchg
mov
scas
mov
popa
adc
inc
shrl
mov
pop
mov
xchg
inc
out
xchg
lret
or
addl
sub
sub
fdivs
test
aaa
aaa
push
inc
fs
cld
lods
inc
adc
shrl
cmpl
sbb
dec
sub
dec
frstor
inc
ret
xorl
fs
repnz
mov
mov
inc
mov
pop
lret
push
je
lcall
and
sbb
or
outsb
sbb
sbb
out
push
rol
adc
fcmovnb
xchg
repnz
xchg
les
sarl
jl
imul
adc
mov
mov
mov
sbb
sbb
outsb
mov
dec
xchg
aas
pop
mov
mov
ja
in
and
inc
cmp
push
rorb
inc
lods
cld
stos
enter
loope
sbb
test
fs
mov
adc
push
mov
pop
mov
inc
clc
xor
std
adc
mov
xor
mov
adc
repnz
popf
mov
dec
test
aad
or
inc
xor
leave
out
shlb
loope
push
shl
cs
filds
iret
movsl
out
test
xor
adc
jecxz
pop
inc
cltd
add
dec
jne
pusha
xchg
sub
mov
leave
inc
push
int3
fs
xor
xor
push
cli
cmpsl
push
push
xor
xor
dec
mov
in
in
sbb
movsb
push
jge
jbe
sub
test
xor
in
adc
outsb
stos
add
jmp
in
lahf
hlt
or
out
push
ljmp
inc
shlb
insb
mov
test
out
out
daa
and
pop
sbb
jno
daa
jl
imul
xchg
lar
cmp
std
inc
outsl
pop
movsl
sub
sub
xchg
cs
imul
mov
sub
inc
bound
jne
je
add
sbb
adc
and
inc
scas
add
xchg
sub
inc
jg
pop
or
insl
sub
divl
nopl
setns
in
and
and
idivb
lds
and
dec
add
and
inc
enter
xchg
rcrb
paddw
add
or
and
cmp
inc
into
or
pusha
rsqrtps
sahf
jle
ss
xchg
test
push
sub
stc
ss
xchg
leave
or
leave
sahf
fwait
adc
pop
xor
mov
xlat
dec
lahf
and
pop
int
cmp
fwait
sbb
repz
cli
lret
cmc
in
scas
add
dec
add
cld
mov
ja
and
adc
push
lods
xlat
jb
inc
jns
cvtps2pi
ror
mov
cmpsb
xor
arpl
lret
mulb
mov
fmull
std
add
mov
mul
mov
xchg
xchg
into
jl
adc
mov
add
lods
push
xchg
xchg
cmc
xor
push
jno
xchg
sbb
movlhps
and
shlb
push
pop
loope
dec
cmpsl
xchg
inc
fbstp
pop
dec
jns
iret
in
stos
incb
sbb
xchg
mov
pop
lret
cmp
fstpl
cmp
cmpsl
cld
test
or
nop
sbb
jb
aas
xchg
in
stos
hlt
mov
add
ss
dec
mov
xor
in
add
inc
jp
sarl
in
imul
pop
mov
fistps
ja
jmp
lret
call
rcrl
sbb
pop
jmp
js
daa
sbb
popa
testl
jno
pop
lret
cmpsb
popa
mov
cmc
test
mov
dec
movsb
xor
je
inc
ss
inc
scas
mov
push
mov
xor
ss
mov
shlb
push
push
lock
sahf
xchg
subb
cmp
loopne
push
and
outsl
add
pop
or
enter
or
and
test
mov
les
js
stos
gs
out
into
aaa
in
daa
pop
push
mov
jno
add
cmc
stos
je
mov
loope
xchg
sbb
cmovno
inc
mov
popa
fmulp
mov
sbb
fdivrl
inc
pop
sbb
inc
sahf
jecxz
xor
movsb
loopne
pop
jno
push
lea
into
jo
addr16
sbb
mov
cmp
sarl
gs
xchg
mov
jecxz
lahf
mov
add
fistpl
cmpsb
outsb
pop
nop
mov
mov
push
fs
sub
mov
mov
mov
mov
jg
hlt
add
cmc
push
push
orl
adc
and
stos
daa
pop
xrelease
fldl
pushf
sub
ficomps
pop
adc
sub
dec
outsl
xor
mov
push
das
ret
mov
out
add
std
xchg
inc
in
gs
cwtl
cli
sahf
sahf
insl
pop
pop
cmp
lea
pop
test
outsl
push
lods
outsl
sahf
pop
insb
pop
movsb
dec
hlt
pop
mov
cmp
shrb
fcoms
push
inc
hlt
push
jmp
in
out
pop
cmc
das
pop
into
push
lcall
push
adc
xor
stc
icebp
testl
lret
pop
jb
testb
cltd
popf
xor
and
push
cmp
mov
dec
xlat
push
fisubl
andl
adc
push
xor
les
hlt
pop
adc
icebp
pop
test
cmpl
mov
cld
in
pop
push
push
mov
inc
das
pusha
or
jnp
data16
shrl
icebp
cmc
dec
lock
jns
mov
adc
and
adc
call
ss
cmpsb
xchg
dec
test
mov
cmp
mov
mov
mov
jb
mov
iret
sti
dec
call
push
pushf
mov
repnz
mov
ljmp
movsb
ds
jecxz
out
sub
std
mov
xchg
mov
inc
aas
jne
movsb
test
fbld
mov
or
lods
xchg
out
iret
fstpl
out
xchg
cli
dec
cmp
call
sub
xor
divl
sbb
mov
lahf
or
and
mov
adc
clc
sbb
mov
xchg
dec
cmpsl
out
dec
sbb
int
in
cmp
cld
xor
addl
outsb
lods
fidivs
pop
jbe
or
and
gs
mov
pusha
mov
movsb
insl
sub
aaa
lret
adc
and
roll
mov
test
es
xor
insl
cmpsb
push
cmpl
push
add
das
sub
inc
scas
cmp
ret
insb
jl
mov
loope
mov
clc
test
inc
ljmp
loop
cld
lock
lcall
std
pushw
je
loope
or
push
push
mov
mov
push
adc
adc
mov
dec
add
adc
mov
xchg
outsb
repnz
scas
add
sbb
sbb
aad
stos
push
or
lcall
lret
scas
in
btr
or
ret
push
es
loopne
repz
orl
loopne
mov
sub
xchg
pop
shrd
leave
xchg
xor
mov
jge
mov
lahf
idivl
pop
leave
add
push
test
mov
jmp
pusha
imul
jmp
mov
rol
add
mov
push
scas
or
cmp
cmpsl
imul
or
xor
add
xchg
mov
mov
mov
mov
mov
xchg
xor
pop
lods
enter
pop
loopne
mov
out
add
cmp
and
nop
xor
sbb
jp
fs
hlt
cmpb
pop
push
in
or
loop
call
fimull
das
dec
inc
pop
push
out
test
pop
jo
or
xchg
or
into
jns
stos
sahf
pop
pop
mov
fisubs
iret
ja
lret
jl
or
push
cmc
mov
movsl
fldcw
sahf
add
or
jecxz
popa
subb
in
dec
mov
repz
fwait
pop
xlat
jge
pushf
mov
lods
pop
out
and
add
ljmp
daa
xor
inc
orb
cli
daa
movsb
mov
jae
in
mov
cmp
sbb
ds
dec
movsl
sbb
mov
leave
sti
lods
mov
and
jge
adc
cmp
fstpl
es
push
test
aas
into
outsl
lods
in
test
out
in
mov
lahf
push
fmuls
push
fldenv
loopne
in
inc
movsl
mov
xchg
outsl
lret
mov
mov
int3
jns
mov
jne
iret
inc
pop
cmp
inc
pushf
js
icebp
dec
jl
leave
fadds
sub
mov
or
push
daa
sub
mov
out
mov
add
dec
lahf
orb
in
adc
mov
dec
test
repnz
inc
jp
mov
adc
jmp
leave
mov
cmp
xor
mov
out
dec
out
clc
pop
sbb
leave
lock
add
mov
lods
loop
mov
int
repz
cmp
pop
cmp
int
xchg
add
cwtl
out
and
mov
xchg
mov
sbb
inc
shll
in
dec
in
nop
jg
int3
sbb
or
xor
adc
pop
ljmp
into
ret
or
xor
aad
in
pop
lods
dec
xor
cs
inc
imul
inc
cmpsb
xor
adc
test
mov
push
jne
sbb
lahf
mov
adc
pushf
cmp
xchg
mov
push
mov
in
jmp
push
mov
sub
sbb
aam
fbstp
pop
xor
aas
sub
xor
push
insb
xor
das
pop
push
inc
sub
xchg
push
mov
rclb
ret
mov
xchg
xchg
jo
dec
mov
int
dec
jae
push
lds
int
mov
push
outsl
dec
divps
ljmp
jbe
sbb
mov
xchg
sahf
test
aaa
dec
lock
inc
add
les
inc
outsb
int
das
pop
fldl
cli
adc
movsl
imul
mov
dec
shll
adc
mov
mov
stos
or
test
outsb
or
stos
ss
pop
push
jg
movsl
pushf
push
push
pop
loop
icebp
pop
les
pop
jno
inc
rclb
jmp
jb
xchg
jnp
cli
loop
mov
add
js
pusha
sbb
pop
jl
nop
push
lahf
xlat
cmp
lods
mov
mov
pop
test
popl
fidivrl
mov
into
outsl
adc
dec
jbe
sbb
dec
test
clc
pop
pop
push
nop
sahf
jecxz
inc
rcrb
jb
daa
sbb
adc
lods
ret
and
movsb
adc
cmp
push
sbb
xchg
adc
pop
pop
lea
push
cmp
in
and
sub
xor
push
add
add
xor
jl
inc
adc
cmc
and
mov
inc
mov
add
jne
or
jp
xchg
xchg
test
adc
push
testb
out
sub
xchg
jne
xor
hlt
add
mov
add
in
xor
scas
push
push
pop
jno
lcall
aas
push
daa
xchg
push
stos
cmp
cmp
imul
insb
sub
dec
data16
or
lret
push
imul
out
sbb
sti
lds
out
push
das
outsb
push
xor
in
std
push
shl
imul
inc
stos
mov
adc
out
cmp
ds
push
arpl
add
mov
mov
jp
sbb
int
and
pop
stos
je
jecxz
sar
jp
nop
jno
mov
loope
imul
mov
cmp
xor
mov
icebp
insl
dec
mov
lock
pusha
pop
test
xchg
or
fimull
push
out
and
pop
arpl
int
ret
test
fadds
lret
pop
fwait
clc
or
lods
popf
loope
hlt
pop
jo
push
mov
fimuls
mov
inc
add
push
mov
xorl
sbb
sub
dec
sbb
notl
sbb
ret
aam
inc
mov
xchg
pushf
shll
inc
mov
insl
ljmp
sub
pop
test
dec
sbb
cmp
adc
orl
js
and
cs
and
adc
pop
mov
leave
push
shlb
inc
jns
ja
add
iret
icebp
jae
cmc
cmpsl
das
mov
inc
test
mov
add
push
repnz
sahf
push
int3
pop
inc
mov
es
lods
imul
sub
out
pop
sub
add
mov
pop
shrb
xor
lret
push
loope
push
ret
hlt
add
push
xchg
or
cltd
mov
add
stc
xor
push
xor
and
fdivr
lcall
sbb
cmpb
ret
out
jmp
cmpsb
mov
aad
imul
cmp
jne
push
dec
mov
or
sub
daa
ret
inc
jmp
inc
xchg
pop
js
sbb
call
and
ret
lahf
in
mov
or
push
call
sbb
pop
ss
sahf
push
repz
xor
in
fstl
xchg
mov
js
jecxz
in
adc
xor
xchg
icebp
loop
outsb
fucomp
inc
pop
ret
inc
fimull
fistl
je
in
fbld
inc
ljmp
push
and
xor
or
inc
ds
jae
sbb
fcomps
mov
pop
arpl
ret
adc
sbb
cmpsb
mov
and
fld
aam
xchg
lea
testl
out
xor
fimull
test
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
mov
xor
inc
pop
jl
cmpl
xor
adc
sbb
lahf
sbb
hlt
in
arpl
sub
ja
xchg
adc
mov
jl
clc
lds
in
adc
xchg
add
dec
mov
jns
push
add
add
out
jle
mov
packuswb
data16
mov
out
pop
dec
lds
aad
cld
inc
cmp
cmp
sbb
jmp
lea
xchg
shrl
push
dec
sar
std
aas
mov
xor
out
adc
data16
test
mov
repz
cld
ja
out
jo
lods
xchg
jns
mov
insb
addb
fdivs
push
inc
and
pop
addr16
adc
paddq
jge
push
pop
xchg
pop
div
pop
ds
xchg
dec
fdivrs
sbb
mov
clc
adc
inc
jp
add
inc
sub
add
mov
call
aas
inc
sub
and
add
add
ss
xchg
inc
xchg
in
xor
xor
adc
shll
imul
push
dec
mov
lea
out
les
fucom
out
fdivs
adc
imul
scas
jo
repnz
cli
jecxz
add
ret
or
lods
fwait
lods
inc
or
fidivrl
jl
dec
pop
sbb
add
mov
div
in
jge
mov
mov
jl
mov
loope
sahf
xor
push
subl
push
mull
clc
jb
lods
mov
lcall
xchg
dec
mov
in
loopne
shll
and
pusha
jno
insl
xor
add
adc
clc
xlat
les
jp
in
into
push
aas
pusha
movsb
and
add
lahf
rcrb
loop
aam
ljmp
les
add
imulb
jnp
mov
popa
aas
add
cld
shl
shll
pop
rcl
mov
jp
notb
pop
dec
sahf
testb
ss
ljmp
mov
test
pop
mull
xchg
popa
setns
outsl
mov
clc
or
pop
or
test
aad
dec
mov
aad
stos
push
arpl
mov
popf
mov
xor
lds
in
gs
xor
lea
ret
adc
pop
mov
cli
sub
dec
aaa
cmp
push
cld
clc
jnp
or
cmp
sub
in
mov
iret
sahf
fcoml
fdivp
out
outsb
rclb
lahf
mov
rolb
add
dec
mov
rorl
ja
cmc
out
pop
push
mov
or
cmc
and
inc
sbbl
push
jmp
mov
fstl
cmp
adc
aam
lahf
jb
stos
cmp
sub
aam
insb
enter
fwait
pop
sarb
adc
popf
repz
aad
mov
xor
cmp
clc
scas
mov
jle
push
cmp
jbe
stc
imul
sub
or
roll
and
mov
push
xchg
fistl
mov
cmpsl
fdivrl
sbb
cmpsb
mov
push
lahf
add
sti
pop
bnd
xchg
jg,pn
notl
sbb
cmp
dec
or
mov
lea
pop
push
addb
in
mov
mov
stos
and
cmpsb
aam
sbb
ss
xchg
stos
scas
orl
pop
pop
xor
in
pop
in
push
aaa
sub
test
fsubs
frstpm(287
jno
movsl
test
orb
notb
into
mov
mov
int3
aam
mov
iret
mov
jae
std
orl
in
mov
scas
movsl
mov
dec
cmp
mov
cmc
add
test
fcoml
inc
lds
dec
cmpl
or
jae
pop
add
js
fstpt
mov
adcl
ret
jg
push
cs
icebp
inc
sbb
dec
mov
push
fisubrs
mov
pop
and
movsb
xchg
xchg
iret
sub
xchg
adc
inc
push
push
call
xor
popf
enter
push
daa
mov
lods
xor
sti
jns
js
or
xor
sbb
shr
enter
or
xchg
sahf
xor
jge
leave
pop
add
sbb
leave
push
jo
mov
xchg
jl
outsb
adc
sti
movsl
xchg
cmp
jo
fistpl
cmc
shl
push
sub
gs
sahf
jge
scas
lods
int3
dec
mov
mov
lret
sub
pushl
test
mov
cmp
xchg
push
mul
sti
adc
leave
int3
inc
call
xchg
mov
pop
jle
jo
add
jns
stos
xor
or
mov
sbb
dec
imul
sub
and
fwait
push
clc
daa
push
leave
cmp
aam
push
or
mov
in
cmp
sbb
mov
or
pop
lods
popf
je
add
push
leave
mov
ret
dec
ror
push
sbb
xchg
xlat
cwtl
xchg
inc
into
xor
lcall
xor
enter
stc
adc
jae
in
mov
sbb
push
sub
sbbl
inc
movsb
adc
rcrb
divb
jl
dec
out
je
js
cmp
pusha
cmpsb
dec
loope
ret
ds
rclb
bound
inc
mov
dec
out
sub
xchg
mov
nop
or
mov
or
data16
push
xorl
sub
bound
adc
push
push
fucomi
jno
je
push
popf
adc
sbb
cmpsb
inc
xor
stos
push
sarb
jae
add
push
push
push
fcomip
bound
xor
pushf
jne
je
add
cmp
sub
cmp
inc
add
cmp
push
mov
dec
jmp
add
xchg
and
fcmovbe
outsb
inc
enter
movsl
sub
mov
adc
fisttpl
pop
xor
push
pop
jg
add
push
pusha
aad
dec
inc
shlb
fcomip
hlt
jo
into
xchg
int3
mov
xor
mov
inc
fs
lods
clc
aam
andb
fsub
es
push
pop
test
adc
sub
stc
repz
lahf
adc
xchg
lret
xchg
jecxz
push
mov
mov
push
fnstcw
or
push
or
add
mov
loope
jo
ret
mov
cmp
adc
inc
ret
or
mov
ss
in
or
fistps
sub
push
adc
xor
stos
out
inc
add
sti
icebp
jnp
mov
dec
add
lods
xchg
adc
loope
leave
mov
sbb
mov
xor
and
sar
js
xor
ja
popa
mov
inc
dec
mov
repz
mov
js
inc
sbb
lock
out
loop
stc
orl
push
aam
movsl
mov
mov
pop
sti
pop
movsb
push
scas
mov
cmp
jne
mov
sub
jbe
mov
push
cmp
mov
sub
mov
xchg
mov
and
xor
mov
pop
lea
adc
sahf
cmpsl
dec
loopne
js
mov
push
sahf
cmp
and
leave
jno
fstpl
dec
ret
aas
cld
mov
jp
or
push
jbe
dec
mov
dec
xorb
xchg
cmpsl
jnp
das
ret
pushf
lret
movsl
lock
jbe
xchg
loope
ret
add
sub
xor
fcmovnb
cltd
xor
mov
push
repz
mov
jne
out
pop
rol
mov
ret
cld
popf
inc
hlt
shl
jg
push
and
sbb
add
roll
mov
jae
push
repnz
hlt
movsl
dec
push
shrb
cmp
adc
dec
xchg
shlb
not
and
pop
int
call
not
hlt
insl
push
xchg
int
rol
incl
cmp
outsb
mov
fmuls
push
out
in
jne
sub
cli
fsts
sahf
xchg
out
xchg
push
idiv
lret
sbb
xor
mov
nop
mov
mov
ljmp
lods
jb
mov
lcall
popf
divl
inc
xchg
push
out
aaa
bound
stos
jg
shl
iret
aad
adc
jno
xor
add
scas
dec
enter
mov
leave
mov
repnz
insb
xor
jne
fstpt
pop
cli
xchg
cmp
xchg
sub
push
push
jmp
inc
push
int
push
lock
adc
xchg
or
repnz
sbb
cld
jge
jmp
jb
scas
push
mov
lods
sub
sbb
int3
pop
jne
jnp
lret
out
or
or
dec
cltd
sbb
ret
jmp
and
test
xor
adc
mov
popa
cld
les
mov
out
adc
jb
jg
lds
bound
test
jae
add
pop
bnd
sub
mov
xlat
addr16
cs
push
adc
in
mov
call
cs
xor
xor
and
mov
fsubrs
ljmp
add
jle
das
pusha
testb
and
outsb
jb
lcall
cmp
shlb
fisubl
in
or
inc
das
cmpb
icebp
flds
js
pop
mov
cwtl
inc
sbb
aad
imul
scas
mov
adc
mov
pop
clc
push
sarb
shlb
ret
xor
dec
scas
cmp
adc
pop
xchg
xor
sbb
push
jne
sbb
mov
loop
mov
xrelease
cmpsb
insb
xchg
and
xor
sub
sbb
push
xchg
push
and
ret
jne
jecxz
sahf
pmulhuw
and
pusha
jbe
and
addr16
pusha
aam
sbb
mov
jbe
fdivl
xor
and
popf
xchg
bound
addr16
fdivs
xor
dec
adc
repz
push
mov
jecxz
loopne
pause
mov
sbb
ds
pusha
mov
fisubs
and
sub
jge
jbe
ss
fcompl
adc
test
sbb
mov
sarb
jbe
adc
push
out
sbbb
out
fldenv
mov
mov
and
push
add
sub
movsb
dec
inc
sub
dec
sahf
xchg
arpl
inc
sbb
negb
ja
pop
aam
cmp
mov
push
insb
out
mov
imul
mov
call
loopne
stc
pusha
sti
pmaddwd
leave
push
and
xchg
rorb
rcrl
dec
xor
out
xchg
adc
insb
mov
loop
jb
mov
nop
jo
stos
jg
or
inc
cltd
aad
imul
push
xor
sub
cmp
bound
add
in
xor
cwtl
fidivs
nop
test
call
mov
cmp
push
mov
jge
inc
jle
mov
inc
out
ss
jnp
sbb
xchg
push
lock
mov
je
and
imul
push
add
sub
scas
enter
int
lods
add
xchg
daa
ret
jp
lret
test
fucom
stos
jg
xchg
sbbl
push
stos
or
pop
xchg
push
adc
icebp
ret
or
enter
mov
movsb
arpl
mov
mov
inc
xor
sub
cltd
inc
mov
cwtl
mov
shl
mov
cmp
push
lock
push
mov
lock
sbb
jo
mov
and
pop
sbbl
or
mov
in
outsl
scas
orb
loop
xor
sub
jo
adc
cmc
push
scas
push
mov
jg
hlt
pop
into
sub
xchg
std
mov
and
ljmp
mov
pop
fildll
mov
iret
xchg
iret
pusha
sahf
outsb
sti
fstl
jnp
ljmp
aaa
stc
inc
lahf
inc
pop
pop
sbb
fildl
cltd
pop
and
loope
aad
in
fwait
mov
and
push
cld
xchg
clc
ds
arpl
push
mov
sti
inc
pusha
xchg
xor
mulb
sbb
mov
popa
ret
or
addb
fcoms
jmp
fisubs
jp
or
test
repz
testb
add
sub
fildl
pop
popf
scas
xchg
cmp
push
mov
mov
cmpsl
push
cmc
dec
push
mov
adc
cmpsl
or
cmp
mov
cmpsl
add
jp
dec
pusha
out
movsb
sbb
lods
loop
and
fistpll
pop
movsl
test
cmp
in
adc
fildll
je
pop
dec
xorl
or
mov
out
sub
or
dec
mov
mov
jl
imul
scas
jp
pusha
push
cltd
and
mov
push
cmp
call
dec
stc
sbb
lods
mov
jns,pn
negb
sub
adc
std
dec
jae
repz
cwtl
pushf
out
cmp
subl
pop
or
ret
jmp
pop
int
movsl
mov
cmc
xor
jle
mov
dec
dec
stos
aam
dec
and
mov
mov
mov
pop
sbb
inc
out
push
push
in
and
fs
or
imul
jmp
inc
cmp
push
cltd
push
or
xchg
push
xchg
xchg
xor
orb
cmp
xor
scas
out
adc
mov
xchg
dec
cltd
adc
mov
popf
adc
inc
mov
push
je
cltd
movsl
mov
std
es
int
ret
gs
cmp
imul
sar
cwtl
testb
dec
cmc
subb
in
pop
cmc
push
mov
dec
cli
sbb
aam
cmpb
cmc
bound
xor
subb
int
arpl
pop
es
shrb
inc
mov
pusha
in
repz
fstps
pop
in
lea
xchg
mov
fisubrs
or
mov
enter
arpl
nop
pop
push
or
in
sahf
jmp
mov
mov
nop
jno
xchg
mov
xor
or
xchg
push
mov
out
daa
mov
jae
cmp
test
arpl
lret
inc
sub
iret
sbbb
lahf
and
xchg
loope
push
jnp
repnz
daa
or
and
push
je
adcb
adc
mov
and
ja
and
test
or
sub
mov
and
push
inc
faddl
push
add
or
rcr
data16
fwait
out
cwtl
push
aam
bswap
rol
in
fwait
jno
mov
imul
popa
dec
add
rorb
mov
aaa
mov
lock
sti
aad
adc
cs
repnz
and
pop
xchg
or
mov
jp
mov
shlb
iret
mov
xor
push
xchg
mov
leave
cmp
xor
out
ljmp
flds
push
mov
repz
xchg
ljmp
push
and
adc
push
cwtl
aam
and
and
aas
addr16
xor
and
sub
enter
xor
jge
aam
incb
cli
adc
and
dec
fwait
push
ja
lds
push
jle
xor
imul
mov
sar
cmp
inc
arpl
test
dec
mov
xor
xor
aas
cmp
test
jmp
add
cs
and
or
paddsb
adc
push
mov
mov
pusha
push
dec
pop
xchg
mov
cmp
lds
int3
or
mov
pop
lods
dec
sbb
fwait
pop
aaa
pop
inc
daa
push
jp
lret
or
fs
daa
inc
je
dec
mull
mov
mov
mov
jns
fidivrs
jne
inc
jno
dec
xor
pusha
jl
xchg
or
cmp
pusha
add
xor
dec
push
jb
mov
xchg
nop
cmp
adc
aad
jecxz
leave
add
ss
cmp
fidivrl
jmp
mov
cmpsl
sahf
loop
and
jecxz
or
out
pop
gs
jns
xchg
jo
ja
mov
popf
xchg
stc
testl
inc
movsl
pushf
push
sub
push
loopne
xchg
push
pusha
sbbb
outsb
fsub
inc
lret
popf
jecxz
pop
iret
and
dec
cltd
clc
pop
jno
lods
jl
out
pop
adc
push
pop
ret
andb
insb
mov
dec
sbb
scas
iret
aas
fildl
mov
ret
es
out
mov
aam
mov
push
ja
es
xlat
ljmp
icebp
sbb
xor
inc
lahf
jge
sub
fidivl
daa
cmp
icebp
movsl
insl
insb
mov
xchg
xchg
add
mov
mov
cmp
pop
push
mov
mov
adc
sbb
outsb
pop
andb
aaa
fimull
cmp
dec
push
cmp
es
push
repz
das
xor
out
dec
jp
jmp
stos
lods
xor
pop
in
jecxz
outsb
dec
stos
mov
ss
and
pop
stos
push
mov
inc
lahf
jmp
test
aas
push
loop
dec
add
xor
push
mov
cmp
push
lcall
dec
test
lods
dec
movsl
cld
fsubrl
push
push
arpl
adc
sahf
xchg
rcrb
mov
out
sbb
arpl
repz
push
lret
lcall
frstor
mov
xchg
mov
dec
pop
or
fcoms
aas
mov
inc
or
add
shlb
inc
and
hlt
cmp
xor
call
dec
mov
xor
pop
sub
push
aad
rcll
and
outsl
gs
sbb
adc
std
sbb
mov
popa
test
stos
mov
pop
ljmp
mov
pop
jne
pop
cmp
faddl
jle
notl
mov
not
inc
es
xchg
sbb
push
in
dec
and
adc
insb
adc
addr16
aad
jno
mov
mov
dec
pop
loope
sub
je
insl
jns
mov
lret
mov
xor
sub
inc
pop
scas
lret
stos
out
mov
fidivs
jae
push
xlat
rorb
or
movsb
daa
inc
int
and
cmp
mov
sub
pop
lods
jmp
mov
mov
push
mov
push
jb
and
or
xchg
ja
mov
cmp
pop
scas
mov
mov
int
mov
pop
xlat
inc
mov
and
and
cmc
adc
mov
and
sbb
mov
jmp
arpl
fistl
ja
imul
and
lods
xorb
lfs
popa
mov
adc
cmp
dec
xor
cld
push
dec
arpl
into
mov
mov
jmp
sbb
dec
sbb
repz
aam
adc
loopne
std
lret
dec
cmp
out
stos
in
les
or
xor
test
xor
mov
pop
push
pop
push
ljmp
nop
adc
sbb
inc
dec
pop
mov
hlt
leave
mov
loopne
hlt
in
pop
cmp
pop
push
mov
push
inc
dec
out
insl
mov
cmp
loop
cs
cltd
ficoms
jbe
fisttps
fnsave
out
mov
inc
xchg
sub
and
shrl
std
sbb
mov
lahf
and
clc
mov
inc
imul
xor
sub
mov
push
sbb
aad
jg
sub
in
jg
mov
add
mov
mov
and
lcall
jne
xchg
ret
xor
mov
test
adc
add
rcll
notl
aad
push
push
add
icebp
stos
adc
jmp
repz
outsl
sub
mov
mov
repnz
sbb
mov
cli
inc
lret
std
xchg
mov
cmpsb
mov
xchg
mov
mov
js
push
shll
and
inc
out
cld
rcrl
call
cmp
loop
sbb
popf
aad
or
lds
test
xchg
jb
mov
adc
mov
mov
jmp
mov
push
adc
xchg
stos
mov
popa
and
mov
cmp
jno
add
sub
xchg
arpl
lahf
nop
sub
mov
iret
push
mov
in
adc
or
xchg
xchg
dec
pop
out
or
cmpsl
out
mov
testl
cmp
mov
xchg
mov
inc
jp
mov
adc
paddw
shrb
sahf
jb
lahf
add
mov
fcmovnb
lret
xor
int3
cld
xor
xchg
fistpll
outsb
jle
and
jno
ss
loope
lds
add
jae
xor
or
jg
jg
ljmp
hlt
dec
outsb
fisubrs
and
das
mov
pop
sarb
repz
sub
cli
jne
or
pushf
dec
sbb
dec
out
imul
add
nop
and
int3
cmp
fs
daa
loop
add
je
shlb
scas
les
inc
xchg
rcll
aaa
adc
shrb
std
xchg
iret
stc
mov
mov
jp
outsb
inc
xor
push
jecxz
xchg
cmp
dec
testl
xchg
pushf
mov
pop
fucom
lahf
adc
outsb
mov
in
lds
cmp
cmp
inc
jecxz
test
xchg
mov
sbb
dec
mov
inc
in
add
pop
test
jns
gs
outsl
pop
in
sub
mov
fldt
fsts
push
out
ficoms
xchg
cmpsb
pop
mov
sbb
sub
jle
inc
jbe
add
pop
or
mov
ljmp
bnd
dec
scas
jae
mov
cltd
mov
or
in
pop
roll
in
test
mov
jnp
imul
shrb
rcll
jmp
sub
adc
add
imul
push
push
out
cmpsb
repnz
inc
cld
mov
push
into
js
cmp
jo
cmc
mov
scas
xor
and
stc
sahf
xchg
sbb
xor
and
mov
mov
pushf
add
not
fisubrs
call
jmp
mov
lods
lahf
mov
sub
dec
lret
add
mov
cmpsb
enter
repz
xchg
inc
inc
lods
jmp
test
mov
mov
mov
scas
mov
add
xchg
jns
leave
or
xchg
push
sbb
or
and
cmp
jno
sub
xlat
insl
sub
roll
out
lret
and
xchg
insb
loop
fcomp
jno
inc
nop
mov
cmp
sbb
xchg
and
adc
js
add
adc
lret
gs
push
pop
iret
in
or
js
push
popf
das
orps
scas
dec
fldpi
push
xor
push
add
mov
cmpl
xchg
jno
ret
mov
lock
jle
call
lock
roll
sahf
jg
bound
adc
popf
clc
mov
pop
inc
jl
in
test
les
pop
rorl
pop
in
jbe
je
in
xor
aas
sub
sbb
push
out
adc
inc
ja
mov
fcompl
pop
scas
push
pop
leave
inc
insb
jnp
dec
and
jg
jmp
aaa
pop
sbb
pop
dec
je
sub
jne
dec
cmp
sub
xor
pop
scas
jl
ds
jno
lods
cmpsb
push
push
out
sbb
in
xchg
sub
jge
push
jae
adc
or
insl
add
jge
jae
jmp
dec
inc
data16
sbb
xor
sbb
cmp
in
xorb
pop
push
rcrl
int
xor
lock
mov
xor
mov
stos
inc
pop
jnp
pushf
jmp
iret
pop
ret
and
je
fstpt
fisttpll
adc
xor
rorl
dec
imulb
popa
jl
mov
imull
jns
cmc
rorb
loope
sbb
ja
roll
stos
dec
sahf
add
add
mov
sbb
das
in
xor
nop
rcrb
add
adc
xor
ret
jg
mul
je
adc
insb
pop
push
pusha
add
mov
mov
sahf
xchg
xor
xchg
add
inc
push
sub
jp
fldl
pop
sub
dec
pop
in
mov
inc
mov
and
lea
pop
test
adc
dec
std
aad
adc
cmp
outsl
inc
jecxz
bound
xlat
sub
outsb
out
push
ljmp
cmpsb
rorb
sbb
mov
lahf
pop
out
push
cmp
add
clc
ret
outsl
xor
xor
in
jno
call
arpl
push
dec
gs
push
xchg
jecxz
or
jecxz
aaa
mov
icebp
cltd
xor
sub
and
dec
fsubs
jns
push
loop
repnz
push
call
dec
sub
call
sbb
push
sub
dec
xchg
cmp
test
subl
repz
fisubrs
push
in
std
jbe
sti
dec
cmpsl
inc
fdivrl
push
fidivs
xchg
repz
mov
imul
mov
sub
mov
daa
inc
or
insb
aas
xor
ljmp
out
push
push
inc
jle
test
std
mov
sti
push
ds
rcr
adc
cmpsb
or
sbb
jle
mov
insl
ret
frstor
xchg
pop
imul
inc
cltd
dec
push
mov
add
mov
out
out
out
popf
sub
je
pop
in
xchg
sbb
mov
mov
fldt
and
pop
add
clc
and
lcall
adc
jmp
iret
and
pop
lret
dec
xchg
add
pusha
dec
push
jmp
xchg
push
jge
mov
push
scas
in
push
inc
adc
dec
push
enter
leave
movsl
insb
in
add
pop
cmc
test
mov
ds
cmpsl
mulb
xchg
cwtl
lcall
imul
mov
sub
cmpsb
mov
popa
mov
xchg
mov
test
add
cmp
jbe
fs
push
outsl
insl
pop
lods
xchg
sub
ret
xchg
xor
adcl
dec
jle
and
iret
sub
mov
lods
or
adc
or
sub
mov
fildl
lret
push
xchg
ljmp
or
notl
add
pop
nop
imul
pop
xor
xchg
push
aam
cwtl
mov
cmpsl
lahf
xor
dec
sbb
pop
shrb
jmp
mov
jge
xchg
mov
das
test
ljmp
xchg
ss
sub
test
stos
adc
in
in
insb
in
mov
push
xor
xor
mov
sbb
adc
jbe
push
cli
insl
int3
inc
push
push
popf
insl
mov
jle
xchg
dec
outsb
add
sahf
loopne
mov
push
add
cmp
fisttps
and
or
xchg
mov
into
mov
mov
test
cwtl
andb
sub
pop
les
lock
subl
daa
pusha
dec
fwait
mov
sti
jbe
lods
stos
xchg
scas
or
popf
adc
sahf
jo
addr16
clc
jl
adc
xchg
shll
push
mov
icebp
cmp
mov
jmp
shr
jno
movsl
dec
push
inc
cmp
mov
cmp
and
jecxz
repz
pop
lods
mov
dec
ds
shll
test
pop
mov
stos
aam
fistpl
repz
sub
xchg
push
or
inc
add
test
and
div
lds
mov
insb
xor
cmc
and
sbb
lret
movb
sub
jle
popa
hlt
and
mov
imul
push
add
ds
jo
hlt
inc
xlat
cld
sbb
push
test
xchg
add
test
jecxz
outsl
int3
stos
int
sub
dec
lds
add
insb
xchg
nop
mov
mov
push
test
jb
aad
hlt
sbb
adc
aas
inc
push
cmp
and
pushf
fsubr
sub
test
orb
xor
lods
jns
dec
jo
add
xchg
jne
aad
icebp
mov
adc
xor
jmp
xchg
ds
stos
je
xchg
jbe
push
aad
pop
mov
pop
popf
frstor
jecxz
leave
fbstp
ja
mov
fidivrl
sub
push
or
sub
cmpsl
push
je
inc
and
mov
sbb
sbb
xchg
mov
xor
push
aas
lahf
lret
sbb
adc
cpuid
pop
movsl
xlat
lds
jl
mov
sbb
or
inc
out
mov
sbb
lahf
push
cmpsb
dec
mov
mov
and
outsl
and
out
enter
cmp
aad
xchg
xchg
mov
pop
mov
shlb
rcrl
movsb
push
adc
lock
jl
jns
inc
leave
std
cmp
divb
fnsave
pop
mov
mov
test
dec
ds
jns
cmp
sahf
cmc
inc
shll
out
add
bound
repz
ljmp
lods
sti
dec
jp
fisttpll
add
popf
jecxz
sub
add
and
sub
repnz
xchg
cmp
push
dec
dec
inc
sub
xor
clc
dec
adc
jns
ja
sbb
xchg
mov
xchg
mov
sub
push
out
or
hlt
repz
lret
add
mov
jle
mov
dec
or
sbb
lods
push
outsb
sbb
xchg
mov
ljmp
scas
pop
add
and
test
jns
les
sbb
scas
divb
inc
jecxz
notl
pop
addr16
cmpsb
add
jae
lret
cli
pop
rol
xchg
rcrl
mov
jns
cltd
and
xor
xor
loope
stc
mov
leave
adc
mov
nop
nop
loope
testl
cld
fwait
or
jge
or
clc
mov
sbb
addr16
sub
rclb
scas
push
loop
int
cmp
mov
jmp
mov
xchg
rorl
cmp
jg
xor
add
leave
adcl
pop
adc
adc
add
shrb
pop
sbbb
int
add
in
push
xchg
xchg
lea
and
subb
push
shlb
das
inc
jbe
int3
cmp
inc
fwait
push
mov
dec
fmull
jae
test
jle
pop
iret
sbb
jne
pop
xchg
mov
dec
sub
test
add
pop
sarl
lea
das
fcmovbe
cwtl
push
xchg
ljmp
push
mov
mov
shll
mov
cmp
mov
add
addr16
andl
mov
xor
inc
pushf
mov
cltd
jbe
sub
loopne
aaa
cli
out
shrl
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
mov
pop
jl
cmpsb
leave
ljmp
js
mov
cs
sub
adc
bound
fs
dec
out
test
adc
xor
dec
out
xorb
fildll
inc
mov
es
cmc
xor
dec
frstor
mov
adc
jmp
mov
std
mov
out
mov
inc
pop
xor
sbb
mov
sbb
sub
jbe
dec
outsl
scas
xchg
daa
addr16
out
mov
das
xchg
pop
pop
int
jno
js
jmp
arpl
sti
int3
sti
popf
mov
popa
or
ret
push
xor
pop
pop
dec
sbb
and
outsb
mov
xchg
testl
xor
cs
sarl
decl
pusha
js
xchg
ret
stc
jae
je,pn
cltd
repnz
add
roll
push
into
repnz
cmp
mov
lret
push
push
sub
xor
cmpsb
and
mov
js
arpl
pop
mov
ret
jecxz
lahf
popf
jp
mov
fisubs
scas
fmul
lcall
and
popa
xor
and
jp
rolb
arpl
gs
push
testb
in
xor
pop
enter
insb
in
and
and
jl
mull
js
sbb
lods
dec
adc
mov
mov
push
lock
aad
out
push
es
xchg
cmp
inc
mov
imul
scas
xor
popf
push
pushf
inc
jecxz
add
add
push
stc
cltd
cmp
xchg
mov
sbb
jb
insb
pop
lods
ficoml
adc
push
cmpsb
faddl
mov
jmp
dec
jp
imul
mov
push
aaa
xor
inc
ja
stc
dec
xor
push
push
mov
mov
fcoml
dec
push
ss
stos
jbe
mov
cld
mov
jo
mov
sub
js
jle
es
xchg
mov
je,pt
push
enter
xchg
movsb
cwtl
hlt
into
lret
add
and
adc
in
pushf
mov
nop
ret
pop
aad
jb
xor
push
xor
inc
out
mov
lret
mov
imul
fadd
xchg
dec
loop
or
jecxz
icebp
and
jno
sbb
mov
mov
sbb
push
aad
insl
movsb
stos
xorb
pop
movb
mov
mov
cmp
in
out
xor
and
adc
or
repz
enter
shlb
jge
jp
or
mov
xchg
out
add
push
ja
insb
insl
aas
fidivl
cmp
rorb
inc
ljmp
mov
add
fimuls
mov
pop
and
out
orl
adc
xor
xor
or
cltd
push
xlat
repnz
dec
adc
jp
and
pusha
in
cmp
add
in
inc
test
out
push
cmp
dec
clc
fmulp
imul
out
aaa
xchg
xor
mov
mov
fsubs
stos
int3
push
mov
sbb
mov
nop
xchg
fwait
adc
cmp
popa
cmp
cmp
or
sbb
push
fistps
aaa
pop
mov
xor
jo
out
mov
adc
mov
adc
push
mov
cltd
stos
and
jbe
bound
ret
dec
lods
outsb
mov
ficoms
sbb
les
inc
inc
xchg
sahf
xor
or
jbe
mov
mov
inc
dec
stc
pop
ja
jb
call
jns
or
in
mov
adc
bound
mov
sub
mov
xchg
in
xchg
fsubrs
out
aaa
repnz
push
pop
sub
test
call
pop
in
mov
sahf
cmc
sbb
out
add
xor
jnp
pop
mov
lods
pop
mov
cmp
sub
add
push
pop
xor
jl
dec
pop
adc
adc
cmp
mov
mov
shrl
in
aad
adc
jno
cli
mov
sub
sahf
xchg
out
cli
popf
jns
xor
mov
push
ja
jno
xchg
mov
pop
rcrb
sbb
shrl
dec
mov
shr
pop
sbb
fiaddl
mov
push
out
sarb
lret
shll
addr16
mov
in
xor
cltd
cmp
sub
pushf
sahf
das
cmp
pop
cmpsl
sti
mov
dec
adc
fsubl
shlb
loop
icebp
jae
cwtl
je
pop
pop
inc
pop
sub
cltd
test
cmp
and
mov
fildll
test
pop
jle
mov
inc
enter
pop
xchg
push
xlat
and
popf
sar
push
mov
inc
lods
cli
pop
pop
out
rcrb
pop
rolb
xorl
repz
xchg
cli
outsb
aad
icebp
shlb
cmp
inc
xor
inc
jecxz
std
jae
cltd
cmp
insl
fcmovbe
test
inc
adc
adc
mov
xlat
and
push
or
sbb
stc
mov
jbe
stos
xchg
lret
icebp
in
fdivrs
popf
dec
jo
js
std
fisubl
inc
mov
scas
rcl
adc
shlb
mov
mov
xchg
sub
pop
xchg
aas
pop
addr16
imul
lock
inc
xchg
push
test
fldcw
jb
and
cmpsb
enter
data16
das
mov
lds
stc
sbb
mov
lret
push
insl
push
jl
and
jg
push
loopne
sbb
jge
ljmp
loope
push
mov
mov
fucomip
lods
aas
cmp
in
cltd
and
sbb
cmp
rol
dec
add
jecxz
xchg
stos
adc
sbb
push
push
xor
lods
sub
fiadds
mov
les
lock
mov
insb
ljmp
aas
outsl
repnz
fistpll
sub
jbe
fmuls
jo
ficompl
ss
and
cltd
and
inc
or
xchg
aam
aam
mov
inc
out
jns
fs
out
in
sub
mov
and
std
cmpsb
loope
and
mov
sub
outsl
data16
sub
or
xchg
and
pop
loopne
cmp
in
mov
inc
imul
ret
xchg
sbb
or
and
leave
inc
stc
or
push
inc
scas
lods
cmc
mov
push
fs
jge
insl
aad
je
stos
push
out
add
repz
in
ja
cld
push
mov
div
js
dec
sti
sbb
cmp
shrl
xchg
int
js
mov
push
fisttpll
push
out
mov
mov
stc
add
daa
mov
sbb
ret
push
aad
stos
add
fstl
fcompl
scas
xchg
aad
jne
out
dec
test
inc
dec
xchg
adc
pop
aam
push
xlat
cwtl
fcmovnu
mov
mov
mov
and
out
sti
mov
ljmp
pop
inc
jb
sub
iret
rcll
or
clc
movsl
leave
and
cs
in
fsubr
ret
js
outsb
jb
xchg
sbb
mov
xlat
mov
shrl
inc
sbb
hlt
rorl
jge
je
xor
fnstsw
sbb
iret
adc
push
aam
into
mov
xlat
xor
jge
shll
inc
imul
jo
and
and
or
daa
inc
and
jge
notl
arpl
sub
ficompl
lods
fcom
call
test
mov
adc
pushf
mov
mov
testb
int3
ljmp
add
cmpsl
push
inc
sti
je
mov
cs
mov
movsb
pop
int3
mov
adc
insb
pop
xchg
into
stos
loop
incl
cmp
push
fists
xchg
or
mov
mov
in
into
pop
in
push
cs
cmp
dec
add
jo
pop
inc
adc
and
mov
inc
xor
mov
adc
xorl
push
rorb
lds
jb
mov
or
mov
dec
sti
in
loopne
lret
and
and
mov
jle
or
rorb
jnp
je
add
mov
cltd
mov
sbb
fcoms
gs
clc
lea
or
xchg
cmc
and
ja
xchg
add
orl
xor
cmp
push
shrb
fs
pop
ds
xchg
shlb
pop
dec
icebp
mov
scas
mov
cltd
adc
fmuls
jne
insb
adc
cmp
xchg
mov
jns
inc
adc
ds
dec
fwait
repz
arpl
jne
mov
daa
bound
std
enter
mov
imul
int
outsb
rcll
adc
cmp
repnz
inc
mov
or
test
inc
enterw
nop
jo
jge
push
xor
loopne
inc
inc
adc
dec
arpl
sarl
punpckhbw
xchg
add
movsl
cmp
adc
dec
lret
cltd
sub
data16
sar
pop
cmp
mov
fwait
inc
cld
inc
xchg
jecxz
pop
sub
sub
mov
jns
dec
arpl
shrb
adc
stos
jl
fdivl
not
push
dec
shlb
pop
xchg
aam
js
push
cmp
and
scas
inc
insl
and
xor
je
jg
cmp
and
mov
gs
shl
and
cmp
in
mov
fimull
in
cmp
cmpsb
out
jmp
popa
sub
stos
xlat
jg
or
push
sub
in
cwtl
imull
scas
mov
pop
inc
sub
jle
sub
pop
pop
lahf
sub
cmp
outsb
pop
jo
arpl
cmp
jne
inc
push
pop
lds
mov
and
jnp
and
dec
hlt
loop
xchg
pop
mov
add
in
xor
mov
loopne
cmpsl
cmp
cwtl
cli
out
iret
jns
push
sbb
dec
popf
add
pop
iret
insb
mov
decb
sbb
lods
mov
leave
sbb
dec
push
addr16
mov
sbb
sub
sbb
test
push
or
add
out
movsl
nop
push
icebp
shrb
inc
out
fmul
pushf
out
push
je
shrl
aas
or
mov
hlt
addr16
or
inc
xchg
cmp
lret
xchg
cli
nop
jl
mov
insl
into
stos
inc
mov
inc
dec
add
hlt
inc
mov
imul
mov
xor
jbe
and
test
cmp
mov
cmp
sub
mov
xchg
fsts
inc
in
adc
add
cmp
push
icebp
leave
xchg
mov
hlt
and
loopne
idiv
rorl
sub
lcall
int
es
hlt
mov
stos
sub
es
xor
push
shll
bound
cmp
add
js
cmp
outsl
pop
mov
or
push
in
aas
icebp
mov
mov
mov
adc
sub
inc
jmp
nop
cmp
insl
or
or
push
iret
cltd
bound
pop
xorb
jg
fisttpll
push
into
push
jge
stos
mov
mov
push
push
pushf
aaa
and
bound
mov
in
sub
pop
cmpsb
leave
pushl
lret
add
stos
in
outsl
inc
push
cmp
inc
lock
mov
mov
pop
sub
xchg
cli
popa
push
lds
shll
ja
mov
add
xor
or
push
test
push
or
xor
nop
out
stc
push
mov
cmp
ret
mul
lock
out
jge
and
mov
fstl
mov
and
jmp
fdivrs
dec
ljmp
lods
or
sti
idiv
and
jne
rcll
mov
xor
addr16
add
dec
mov
xchg
jg
clc
sub
sub
dec
loopne
cld
adc
cmpsb
jbe
daa
xchg
and
test
pop
aas
lods
or
stc
mov
inc
dec
sub
cmp
popa
jo
lret
inc
push
cmpsl
mov
mov
xchg
push
push
dec
fwait
test
aaa
repz
addb
or
bound
lock
push
ss
add
inc
and
fdivl
pop
push
lods
imul
insb
mov
dec
imul
dec
cmp
mov
add
fistps
push
push
popa
icebp
and
adc
or
mov
hlt
movb
sbb
push
mov
mov
add
or
icebp
sub
icebp
sub
xchg
ljmp
test
loope
cmp
dec
push
idivb
inc
or
jecxz
leave
xchg
mov
mov
push
filds
push
and
mov
lret
pop
stos
jb
sub
jl
mov
xor
stos
and
shlb
xor
cmp
or
xchg
mov
shll
aad
inc
push
in
push
aas
sub
fdivrl
push
xchg
xchg
sub
sbb
les
cmpsb
push
cwtl
lock
inc
in
rclb
aaa
cmp
adc
clc
dec
inc
lret
jl
nop
xchg
push
test
stc
pop
jb
mov
push
jbe
cli
lods
xchg
xor
lret
mov
pop
icebp
aaa
shr
xchg
jnp
cmp
or
shll
xor
test
and
mov
mov
xor
mov
sbbl
fistl
sahf
xor
aad
shlb
idivb
popa
jb
sbb
sbb
fmull
lret
jae
aam
push
sti
out
mul
call
inc
mov
loop
xchg
push
mov
mov
add
jp
jnp
shrl
sbb
dec
and
or
inc
pop
mov
inc
cmp
cld
lea
dec
mov
mov
rorl
inc
outsl
lret
mov
test
mov
xor
int
mov
jle
push
repz
mov
jp
add
cltd
lods
push
popf
je
lcall
push
jge
lret
mov
inc
jmp
loop
ljmp
fimuls
jnp
stos
inc
cwtl
sti
jns
ret
sbb
push
add
cs
lret
popa
xchg
dec
stc
push
insl
add
adcl
outsb
repnz
or
sbb
cs
push
push
arpl
ret
test
inc
cmpb
pop
pop
movsb
mov
jg
cmp
push
outsl
mov
xchg
mov
out
pop
cmp
pop
shlb
mov
xor
sbb
sub
dec
jecxz,pn
xchg
xchg
mov
adc
mov
scas
lea
mov
lcall
cmp
cmpsb
in
push
lahf
jns
shll
cmp
loope
adc
jle
cmc
push
test
xchg
shll
fisttpll
inc
cmpsl
out
mov
pop
sub
push
dec
fs
jo
insl
cld
sahf
or
adc
inc
pop
xor
mov
aaa
and
loop
test
inc
push
inc
mov
roll
dec
stos
sbb
push
das
cvtps2pi
jo
mov
int
popa
pop
popf
in
xchg
mov
testb
sbb
lret
cmp
sub
mov
cmp
fdivrp
call
cmp
stc
shlb
push
adcl
push
pop
inc
lods
and
movsb
fmulp
and
push
ja
dec
push
ret
push
addr16
scas
fadds
xchg
repnz
sub
lock
sub
xchg
add
adc
ja
mov
icebp
jae
cmpsb
xor
sti
ja
std
scas
sub
sub
test
lods
lods
scas
fldl
jecxz
sub
in
fdivl
outsb
idivb
aaa
sub
ss
popa
push
sub
cmpsl
jo
add
mov
test
dec
sbb
add
inc
xchg
test
nop
ja
jmp
scas
jb
jb
or
scas
push
cmp
push
jnp
rcrl
sarl
ljmp
scas
loopne
cmpsb
push
jbe
andb
jp
mov
sub
or
mov
in
fldcw
sub
push
sbb
mov
je
pop
jl
mov
fsubrs
subb
and
out
lret
icebp
outsl
in
shlb
shrl
aaa
xor
jo
mov
hlt
xor
dec
cli
adcb
mov
mov
cs
jbe
or
lds
dec
dec
or
sub
mov
jne
xchg
push
adc
dec
add
push
negb
lahf
sbb
cmp
enter
sbb
rorl
pushf
mov
push
mov
jle
lock
add
filds
push
in
mov
das
fwait
jp
not
imul
ror
outsl
aaa
test
mov
sbb
or
push
xchg
mov
add
pop
inc
xor
mov
push
and
add
cs
outsb
push
push
sidtl
pop
mov
hlt
cmpb
gs
inc
cmp
rorb
add
iret
ss
or
lock
movsl
std
rorb
icebp
jle
loopne
repz
jne
loop
enter
sub
into
xor
jl
adc
fsubr
iret
sbb
popa
nop
xor
xchg
and
jae
out
or
jl
and
ret
aas
fisttps
push
or
sbb
adc
push
test
repz
stos
sub
ret
dec
and
push
out
pop
mov
push
rorl
push
xchg
iret
imul
jnp
sub
mov
mov
cmp
rorl
add
push
push
pop
in
sbb
nop
xlat
jl
inc
push
sub
xorb
lea
fisubrl
dec
mov
fisttpll
mov
ret
insl
cmp
das
mov
andb
lea
mov
cli
mov
push
inc
int3
mov
sbb
cld
imul
push
out
addl
js
mov
pop
lods
mov
negb
sahf
psubsb
inc
lahf
jp
or
mov
and
rcrb
or
fs
cmc
push
scas
inc
pop
xchg
adc
pop
pusha
loope
sub
leave
push
sahf
sbb
neg
mov
outsl
fsubrl
cmp
dec
daa
cmpl
roll
call
pop
into
arpl
sbbb
pop
orb
mov
bswap
jno
dec
fstpt
mov
sub
shll
mov
cwtl
pop
sub
js
dec
nop
je
pop
pushf
aaa
and
ret
je
dec
outsl
fdivl
pop
inc
jns
inc
rclb
push
imul
and
mov
enter
add
push
inc
push
or
hlt
aad
push
lods
test
rorb
lods
add
loopne
shr
sahf
pop
ret
pop
repnz
pusha
dec
stos
sbb
push
notb
or
push
mov
add
add
mov
les
int3
addr16
aaa
fdivrs
jne
loopne
hlt
ds
inc
jo
sbb
dec
outsl
dec
clc
adc
test
data16
pop
in
insb
clc
cmp
out
fcmovu
jmp
cmp
pop
outsb
push
les
rcrb
subb
adc
icebp
int3
add
fidivl
jns
in
popa
les
scas
daa
in
or
jne
sahf
xor
adc
dec
add
sub
add
mov
lahf
ds
inc
xor
push
outsb
cwtl
fimuls
pop
dec
hlt
sbb
or
imul
sub
jns
jg
sbb
cmc
in
stos
dec
or
mov
lcall
add
lret
int
fwait
jno
lret
outsb
dec
nop
pop
faddl
ret
pusha
inc
jmp
test
repnz
sub
mov
mov
mov
iret
adc
movsl
mov
add
icebp
mov
pop
add
aam
adc
lret
add
out
testl
sub
loope
iret
push
jecxz
orl
xorl
mov
push
adc
xor
enter
add
scas
adc
ljmp
sub
mov
jne
jo
leave
add
notl
scas
inc
aaa
fadds
test
mov
in
adc
or
pcmpgtd
shlb
stos
rcrl
dec
xchg
inc
mov
je
faddl
xchg
xchg
sub
mov
mov
adc
xor
push
in
call
out
adc
and
xor
pop
mov
cmc
or
push
lret
fcmovu
icebp
out
cs
ret
pop
sub
xor
cld
inc
out
or
out
push
lock
xlat
loop
lock
cmp
sti
js
push
inc
int3
mov
push
cmp
push
jae
hlt
aad
arpl
lea
fdivl
hlt
mov
mov
mov
xlat
mov
cmp
test
add
or
int
mov
cmp
lods
cmc
test
or
xchg
std
lret
sbb
jne
push
lahf
imul
jg
jl
sub
fsubr
sbbl
xchg
lds
es
cmp
mov
shl
ds
mov
imul
mov
adc
call
push
or
adc
push
jl
outsb
mov
mov
mov
add
fmul
mulb
xacquire
imul
movsl
push
dec
jle
scas
jnp
mov
fdivrs
ret
mov
xor
and
cltd
daa
lods
cmc
mov
adc
xchg
push
mov
nop
shll
sbb
and
pop
and
sub
es
dec
cmp
mov
sbbl
mov
xchg
mov
inc
or
rol
rcr
lcall
shll
and
jns
fs
mov
cwtl
pop
and
xchg
inc
lea
in
lahf
ret
leave
scas
fdivrp
enter
dec
pusha
sahf
xor
jl
bound
fcoms
sti
cmp
inc
push
int
int
and
mov
jb
or
add
sbb
mov
add
shrl
out
and
out
xchg
pop
scas
test
rcrb
add
lea
inc
mov
dec
sti
fcoml
lods
push
call
cmp
nop
and
jmp
mov
pop
iret
test
outsb
and
or
and
dec
lock
cmp
push
adc
pushf
test
lahf
sbb
rcl
std
das
xorb
mov
rorl
cmp
add
rorb
ja
inc
movsl
lds
mov
lret
jle
fs
mov
pop
inc
sbb
xor
int3
push
dec
sbb
add
int3
aad
cmpsb
out
and
and
in
sub
out
sub
mov
mov
add
cwtl
stos
int
push
cmp
inc
dec
mov
xor
hlt
int
popf
sbb
je
sbb
test
iret
fcompl
ror
cld
cmp
nop
or
jl
cmc
cltd
pop
out
cli
aad
aaa
xchg
cmp
loop
lea
dec
mov
test
xchg
mov
xor
arpl
cmpsl
mov
mov
inc
adc
mov
or
mov
test
mov
rclb
dec
adcb
ljmp
mov
into
lahf
int
mov
fmull
fdivl
fcomps
pop
sahf
out
int3
xchg
lock
xchg
and
mov
push
lea
stos
xchg
ret
jg
ret
fcomp
sub
mov
jb
dec
insb
jnp
jmp
out
int
mov
testl
pop
aas
and
cld
movsl
cmc
cmp
xlat
sti
inc
jecxz
cmp
outsl
push
jo
fwait
ds
and
sbb
mov
dec
sub
fcompl
das
mov
shrl
movsl
leave
cmpsb
fstl
leave
xchg
push
sahf
push
cmp
pop
cmp
lods
adc
push
fistpl
cs
jnp
xchg
push
test
leave
lea
sub
inc
mov
aad
pop
adc
mov
xor
mov
cmp
sub
cmp
cmp
fidivrs
push
push
call
cmp
mov
push
and
lcall
je
xor
in
fs
dec
jl
jb
adc
xor
mov
mov
adc
and
es
andl
cltd
shlb
aaa
and
mov
sbb
jae
mov
fsub
js
stos
test
imul
mov
icebp
push
pop
push
and
shll
call
rolb
movsl
insl
sahf
pop
jl
hlt
icebp
xchg
adc
cld
mov
xchg
sub
mov
cld
int
sbb
jecxz
lcall
mov
mov
cmc
jne
inc
xchg
scas
jge
es
xchg
imul
sbb
cmpsl
movsb
in
loopne
ss
test
iret
sahf
cmp
xor
mov
or
enter
cmpsl
sbb
ljmp
or
roll
mov
cmp
sub
cmp
push
fnstsw
inc
or
mov
enter
xchg
mov
cmpsb
stc
in
fidivs
sub
outsl
adc
and
cli
add
adc
pushl
loope
ret
xor
lahf
xor
mov
pop
rolb
add
lret
sub
test
ret
imull
sub
dec
add
pop
pop
mov
mov
gs
lcall
not
xchg
jp
xorl
jp
das
inc
inc
test
sbb
insl
iret
jae
or
xchg
adc
sbbl
pop
ljmp
dec
mov
es
add
movsl
bound
add
dec
jmp
mov
aas
das
sbb
add
call
jae
and
and
lret
insb
lea
pop
bound
pop
insb
mov
repz
cmp
cmp
mov
stos
mov
jl
fbld
mov
rol
xor
push
mov
xor
aas
sti
jmp
divb
add
cmc
jl
sarb
aas
enter
stc
mov
enter
movl
mov
adc
dec
pop
outsl
mov
shr
insb
xor
inc
cltd
push
cld
xor
clc
jne
xchg
push
mov
push
xchg
pop
jecxz
mov
std
dec
jne
pminsw
pop
call
push
icebp
popf
mov
jae
jne
data16
adc
popa
pop
push
clc
mov
lock
mov
xorb
sub
ret
cli
pand
test
jmp
jecxz
repnz
and
mov
adc
jae
aas
nop
fisttpl
sti
push
addl
mov
mov
and
lods
jge
loop
or
cwtl
xchg
add
arpl
mov
lahf
rclb
lds
int3
addr16
cmpsb
out
cmpsb
es
or
in
scas
addr16
inc
cs
mov
xchg
jg
and
js
mov
jo
mov
push
lods
daa
mov
test
fstpl
and
inc
xchg
xchg
repz
sbb
arpl
cld
imul
jmp
mov
mov
xchg
mov
icebp
hlt
aad
cmp
xor
rcr
jl
jae
adc
mov
mov
and
repz
pop
cmp
insl
call
pop
fstpt
sub
xchg
jg
sbb
adc
loop
mov
xchg
movsb
pop
push
jne
add
and
inc
enter
ljmp
xor
bound
ja
adc
sbb
xchg
arpl
in
cmp
inc
xchg
repz
mov
cmp
dec
xchg
jns
imul
out
pop
inc
xlat
call
cli
vpsubsw
or
cltd
cmp
jnp
mov
lock
add
cmpsb
mov
stc
mov
cs
sahf
rclb
ret
xchg
jne
fstpl
and
daa
into
stos
ret
mov
daa
jnp
dec
rorl
mov
dec
pop
cmp
pop
mov
lcall
out
jbe
rolb
and
inc
pop
mov
jl
fcompl
cwtl
or
mov
roll
jbe
enter
adc
push
dec
ret
lcall
shr
jo
es
inc
out
mov
jp
push
fsubr
clc
dec
jle
jg
mov
aaa
test
adc
rcrb
xlat
and
xchg
bound
pop
pop
lcall
xchg
sbb
addr16
inc
std
lret
add
ja
cmp
cmp
inc
aas
out
xchg
and
jmp
jle
js
nop
push
mov
hlt
popa
cmc
rorl
or
add
push
xchg
hlt
xor
push
mov
sub
subb
add
cs
dec
cli
ss
add
sbb
mov
mov
loope
pop
fidivl
jae
inc
mov
jecxz
scas
push
test
inc
in
sub
fnsave
pop
lods
js
and
jp
jecxz
mov
and
test
push
sub
stos
lods
in
js
push
mov
imul
jnp
cmp
sub
sti
out
add
xchg
push
or
push
cmp
inc
and
mov
mov
mov
sbb
inc
fnstenvs
push
fs
mov
test
push
add
jmp
mov
gs
stc
sbb
adc
push
pop
xor
cwtl
fstl
rorb
adc
pop
ret
push
add
movsl
ret
into
test
scas
inc
pop
jb
insb
loop
xchg
inc
pop
xlat
xchg
jp
in
inc
adc
enter
jnp
dec
mov
ret
jmp
pusha
inc
mov
sbb
dec
andb
pop
push
imul
add
push
je
push
dec
dec
clc
adc
roll
movsl
fildll
test
cwtl
icebp
mov
or
repnz
loope
inc
xor
dec
sbb
daa
xor
adc
or
push
sbb
xor
dec
nop
setne
mov
lea
jnp
and
xchg
xor
pop
dec
imul
add
mov
scas
leave
insl
mov
fidivs
dec
dec
ja
mov
fadd
mov
dec
lock
in
int
lods
mov
movsb
sub
popa
jno
mov
ret
into
sub
xchg
popa
xchg
rorl
pop
insb
aas
fwait
cmp
int
cmp
push
mov
push
xor
shlb
pop
repz
ljmp
inc
mov
sub
cmp
int3
sub
pop
or
mov
and
and
loope
pop
xchg
xor
es
inc
sub
scas
dec
xchg
test
test
lret
mov
nop
out
in
rcrl
sub
push
xor
insb
adc
ror
fisttpl
pop
cmp
mov
cmp
cmp
in
and
pop
in
mov
push
insb
shlb
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
jno
sbb
imul
dec
mov
mov
inc
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
lretw
and
addl
cld
add
add
cmp
lock
enter
es
mov
fcoml
scas
outsl
hlt
loope
cmp
jecxz
cmp
and
cmp
mov
xor
sbb
leave
push
lock
pop
fistpll
pop
jmp
cmp
pop
adc
hlt
mov
jns
mov
lcall
dec
jnp
idiv
out
xor
jecxz
mov
js
and
mov
xor
lock
inc
sbb
pop
ljmp
imul
push
std
cwtl
xchg
inc
in
xchg
ret
push
jle
lret
daa
push
pop
mov
into
shr
adc
jge
imul
inc
pop
in
mov
popf
add
je
mov
pop
incb
rorb
mov
inc
scas
inc
mov
inc
jecxz
gs
xor
sti
xor
or
lock
jge
out
dec
xchg
loope
and
add
mov
jl
dec
ret
push
push
dec
imul
ret
cmp
sub
les
test
push
mov
add
fidivrl
jl
xchg
clc
shrb
jmp
stos
js
jl
aam
leave
xor
sbb
xchg
rcrl
insb
or
pushl
repz
aas
or
faddp
jne
jmp
aam
daa
jl
rclb
xor
scas
movsb
xlat
mov
sahf
jl
xchg
inc
sub
add
imul
push
gs
scas
inc
sbb
ljmp
push
push
lea
ds
jo
scas
je
push
pop
jb
sub
in
stos
sar
std
fwait
pop
cmpsl
dec
cwtl
mov
mov
mov
lock
fcompl
setle
pushf
ret
dec
aad
popf
mov
push
xor
sti
xor
add
add
idiv
jg
mulb
xor
add
add
cld
add
add
mulb
sub
xchg
sahf
sbb
xlat
repz
lds
xchg
flds
mov
mov
lods
or
lahf
enter
je
int
insl
inc
dec
mov
push
dec
mov
out
es
insb
clc
cmp
adc
shl
shr
repnz
mov
lods
xchg
repnz
pushf
call
mov
pop
jmp
cmovns
stos
aas
std
enter
rcll
xchg
xor
mov
pop
in
xor
lahf
loop
ret
mov
add
inc
cmpsb
mov
aad
in
test
gs
inc
test
mov
call
or
fbstp
add
and
adc
and
or
lahf
pusha
imul
dec
cs
mov
add
loop
push
testl
or
scas
mov
mov
adc
add
movsl
push
or
and
lock
movsb
movsl
push
mov
aad
sub
ljmp
arpl
jmp
cwtl
paddusw
fcomps
sub
mov
cltd
pop
inc
push
por
push
cmpsl
imul
cmp
insl
sbb
dec
sbb
xor
inc
aam
mov
daa
rol
adc
mov
pop
mov
cltd
inc
push
imul
aas
jmp
push
dec
xchg
cmpsl
sub
repnz
mov
loopne
imul
push
int3
sti
add
nop
cmc
adc
movsb
enter
add
fildl
fwait
mov
fldln2
inc
push
rcll
mov
jae
jae
fstps
mov
adc
and
lea
mov
jnp
int
hlt
push
mov
mov
fbld
popa
push
sub
dec
pop
sbb
pop
std
jg
negb
add
add
add
mov
push
xchg
rolb
addr16
lcall
repnz
mov
lds
shll
clc
movsl
mov
dec
cli
xchg
pop
imul
pop
mov
xchg
pushf
push
cltd
and
sub
sbb
lea
nop
scas
add
mov
leave
jo
sysenter
xchg
jns
std
out
jb
dec
outsl
aaa
test
jle
dec
mov
and
mov
mov
adc
hlt
inc
mov
sbb
aad
inc
outsb
mov
cltd
mov
icebp
jne
sbb
das
lret
cli
xor
mov
add
lock
jne
sbb
aas
repnz
xchg
mov
mov
mov
sub
out
xchg
xor
pop
in
das
fwait
pop
sbb
mov
cmp
lret
inc
je
insb
cmp
push
repz
cmp
inc
dec
jecxz
insl
sub
lods
dec
cmp
scas
mov
sahf
cmp
sub
jle
rclb
mov
mov
mov
jns
pop
xchg
outsb
call
stos
lea
lods
mov
cmc
sub
xchg
aad
pop
and
scas
mov
movsl
popf
pop
inc
sub
or
fistps
push
push
or
repnz
adcl
cmc
int
clc
btc
lock
add
mov
scas
mov
jbe,pt
hlt
icebp
mov
das
push
pop
leave
dec
iret
sub
fimull
in
mov
jmp
sub
leave
mov
dec
aam
out
cmp
in
and
lret
sti
xchg
inc
mull
dec
lcall
xchg
sbb
cmpsb
xchg
inc
fstpt
sbb
xor
mov
push
or
jne
mov
jge
pop
rorl
fstps
cmp
inc
push
add
mov
int
mov
hlt
leave
cld
mov
add
add
add
les
jo
mov
push
lret
cmp
sub
cmp
pop
inc
call
xchg
dec
fstp
in
cs
xor
xor
rorb
lds
lcall
fdivr
xor
jns
xchg
jbe
adc
push
cmp
daa
xor
mov
add
insb
mov
arpl
test
xor
imul
inc
pop
pop
mov
inc
xchg
pop
andl
out
jp
push
jle
fdivrl
cs
ret
inc
push
rol
data16
sub
pop
inc
jae
xchg
leave
in
insb
arpl
sahf
cmp
dec
cli
fsts
mov
aaa
mov
pop
cs
fdivs
jbe
adc
xchg
mov
pop
aam
and
rclb
mov
mov
in
cmp
jo
cmc
ljmp
rcrl
and
testl
jmp
fadds
repnz
push
imul
xor
rorl
pop
orb
pop
repz
insl
nop
or
aaa
cli
nop
inc
xor
mov
call
leave
jns
iret
movsb
loopne
orb
pop
pop
mov
mov
sub
and
ljmp
int
xor
jl
add
sbb
lret
and
xchg
lahf
aaa
mov
mov
jno
adc
mov
cs
push
add
xchg
or
inc
xchg
fs
or
mov
scas
mov
insl
in
lods
mov
adc
clc
xorl
imull
sbb
rclb
sub
sbb
fiadds
mov
dec
jmp
mulb
adc
add
mov
add
js
hlt
mov
std
jl
xor
jg
ljmp
cld
add
add
cs
insl
icebp
ja
mov
dec
int3
cmp
popl
push
and
cmpsb
mov
sub
cltd
fldl
or
push
rolb
mov
sub
mov
nop
add
push
xchg
push
xchg
or
in
nop
inc
sub
mov
pop
xchg
dec
lahf
pop
jns
cwtl
or
loop
mov
repz
push
and
repz
adc
jg
aaa
gs
popf
iret
ffreep
lret
inc
xchg
sbb
mov
sbb
fisubl
fimull
push
nop
mov
adc
jnp
mov
mov
leave
jno
hlt
cmp
push
cmpsb
sub
pop
in
mov
pop
mov
mov
aas
cltd
bound
pop
call
xchg
fwait
mov
jmp
je
dec
fwait
mov
out
ljmp
aam
xor
push
sbb
pop
cmpsb
jle
push
fistps
cltd
test
mov
divps
push
cmp
loope
pop
popa
out
lods
hlt
rolb
arpl
fidivrs
inc
inc
and
mov
jne
ljmp
imul
not
sub
sbb
fs
sbb
aad
out
stos
jmp
in
inc
cmp
xor
es
test
mov
movl
or
movsl
or
mov
mov
sbb
sub
xor
mov
inc
nop
or
sub
or
fstpt
add
in
xchg
std
dec
int
lret
ja
and
ret
jg
mov
sub
push
lcall
ja
mov
lock
ds
add
dec
dec
dec
scas
gs
or
test
jl
mov
lahf
inc
movsl
pop
push
pop
test
sbb
sub
xchg
popa
sti
sbb
pop
mov
mov
and
add
cld
add
add
int3
andl
iret
pop
fs
dec
and
xchg
or
jns
cmc
outsl
mov
mov
aad
add
push
stos
insl
lea
rol
sub
pop
mov
daa
sbbl
cmpb
dec
and
lret
xchg
sub
jns
inc
pop
push
lock
sub
gs
fidivrs
pop
vmaxpd
cmp
aad
mov
bswap
adc
xchg
jp
pop
fdivp
mov
mov
inc
stos
cli
test
xchg
ja
enter
fcmovnu
lods
lret
shlb
or
mov
add
stos
mov
pop
push
sbb
lcall
fcmovnbe
je
out
jnp
sub
adc
pop
xchg
or
stos
insl
xor
pop
adc
or
aam
mov
inc
hlt
sub
mov
rcrl
lea
test
mov
aad
sbb
rcll
out
mov
or
jo
mov
push
cwtl
call
adc
cmp
mov
mov
subl
jl
lret
pushf
pushf
jge
fidivrl
mov
loope
or
mov
pop
dec
fsts
mov
cwtl
lahf
pop
inc
in
jne
lret
movb
mov
pop
outsl
inc
xlat
or
sub
aas
xchg
sbb
dec
mov
cld
mov
out
mov
push
sub
sub
lret
xor
orl
shrl
repz
dec
sbb
clc
lahf
out
imul
add
loop
cmpsl
cmp
sub
jns
rorb
mov
stos
cwtl
test
scas
mov
andl
stos
mov
cmp
stos
mov
idivb
cmpsl
sbb
jg
pop
fstps
lock
add
add
add
add
cmp
rorl
imull
pusha
bnd
jns
lea
push
repz
xchg
inc
xchg
hlt
sub
ret
adc
les
mov
and
fisttps
cwtl
cmp
jnp
lcall
mov
gs
inc
fdivr
aam
pop
pushf
jecxz
lcall
jle
add
popa
cmp
push
dec
dec
ds
rol
sbb
int
adcb
scas
jmp
insb
sahf
and
mov
subl
push
xlat
jo
pop
pushf
mov
dec
pop
adc
fistpll
jge
fwait
div
hlt
cld
push
sbb
out
sbb
shrl
push
or
es
fwait
sbb
mov
sub
stos
insb
dec
sub
ret
add
xchg
bound
gs
lods
out
test
and
jmp
push
repnz
mov
ss
int
in
add
mov
in
faddp
filds
xchg
push
and
cwtl
and
shl
cmp
into
out
frstpm(287
mov
in
xor
movsb
jecxz
mov
addb
cltd
dec
aas
scas
lea
repz
xlat
movsb
sbb
sbb
jne
jecxz
in
stos
sub
push
mov
xchg
lods
adcb
outsl
aas
jp
lea
lods
xor
add
call
push
leave
out
pop
into
sub
mov
imul
loope
pop
andb
push
mov
sbb
and
or
das
mov
and
add
imul
jae
jl
es
xchg
cmp
mov
pop
jp
out
dec
sub
fistpll
dec
pop
movb
in
adc
rcrb
mov
xchg
or
xor
add
fmuls
lock
adc
add
add
add
cmc
fistpll
movsb
fidivl
imulb
movsl
loop
nop
add
cld
add
add
cmp
sahf
lods
stos
sub
repnz
and
imul
push
movsb
push
jp
pushf
cmp
jno
adc
ret
xchg
in
dec
jg
lahf
dec
mov
test
rcrb
jno
cltd
xchg
test
int3
fidivs
mov
es
jl
test
int
push
lea
mov
cmp
test
mov
mov
pop
dec
push
iret
flds
cmp
in
push
xchg
call
or
imul
inc
aaa
jecxz
daa
dec
mov
cmp
icebp
mov
std
mov
ja
jne
adc
subb
int3
jl
xor
xor
idivb
or
flds
adc
lahf
lret
mov
cmp
rcl
aam
rcrb
pop
sahf
xlat
js
and
or
sbb
cltd
inc
xor
in
sbb
imul
mov
add
xlat
xor
sbb
jecxz
pop
and
mov
xor
int
mov
inc
and
xchg
or
inc
jecxz
dec
inc
add
mov
pushf
mov
ss
sbb
add
int3
jb
mov
push
add
push
xchg
sub
in
cmpsl
push
sbb
aam
mov
pusha
jge
hlt
scas
pop
and
xchg
sarb
movsl
outsl
les
pop
lods
js
je
add
xchg
push
test
pop
adc
aaa
and
inc
jo
inc
movsl
push
out
ret
add
pop
pushf
pop
adc
aam
jp
fdivs
outsb
add
cwtl
xchg
mov
divb
pushf
clc
lods
add
mov
imul
jne
lret
cmc
call
ret
inc
mov
out
popa
lods
or
lret
xchg
ljmp
jmp
push
mov
pop
out
shrb
and
movsb
lea
sub
notb
xchg
add
cld
add
add
jne
clc
ljmp
cld
jo
int
pop
push
fwait
stc
rcr
inc
sbb
and
pop
mulb
stc
adc
adc
mov
push
test
inc
loope
jae
jg
testb
mov
add
sbb
xor
mov
cmp
mov
adc
cmp
jno
call
sbb
mov
and
sti
sbb
or
stc
scas
xor
hlt
cmp
ds
mov
jle
push
fcomp
nop
mov
pop
sahf
mov
mov
int
push
ljmp
icebp
mov
jp
iret
dec
mov
call
xchg
jl
icebp
call
jns
push
out
xchg
jae
pop
fwait
andb
insb
mov
xor
je
pop
inc
loopne
js
pop
sbb
pop
jnp
dec
fcoms
mov
aam
negl
popa
fnstcw
pop
mov
dec
fidivrs
into
fucomi
mov
adc
je
inc
cmpsb
mov
cmp
lea
imul
sbb
arpl
jecxz
pushf
fsubr
std
jmp
lds
mov
scas
xor
add
sbb
lock
sti
std
imul
xchg
imull
cli
jbe
rcrl
jnp
dec
sbb
mov
or
cltd
xchg
ja
sti
das
dec
sbb
aam
fcompl
push
xchg
mov
jp
mov
dec
stos
push
xchg
fs
icebp
add
sbb
inc
sub
xor
push
subb
and
int
push
xor
js
mov
add
inc
jne
nop
loope
arpl
ret
rorb
into
push
mov
pop
rorl
jnp
and
outsb
fldt
cltd
push
pushl
mov
cmp
xchg
dec
inc
mov
cwtl
dec
sbb
add
mov
cmp
popl
mov
add
cld
add
add
xchg
jbe
dec
nop
xchg
int3
xchg
cmp
aas
lret
adc
cld
or
jmp
add
jecxz
adc
nop
mov
dec
arpl
ja
fbld
out
and
es
rcl
pushf
shrb
stc
leave
inc
mov
lock
or
xor
outsb
fsubl
jle
mov
adc
rorb
sub
movsl
aas
cmp
rorb
loopw
adc
sub
call
scas
cld
fcompl
inc
xor
test
pop
ja
cmp
xchg
dec
mov
mov
pop
mov
hlt
sahf
daa
pop
sbb
mov
std
mov
mov
shll
pop
sub
cmp
pop
pushf
pop
inc
daa
pop
sarb
sub
lea
inc
adc
sub
jge
pop
cmp
push
aas
dec
xchg
mov
aam
inc
fwait
outsl
mov
lret
lea
dec
loope
cmc
push
ja
xor
lret
sbb
hlt
in
bound
sbbl
adc
cmpsl
mov
sub
mov
repz
or
or
aam
pop
fcompl
enter
leave
ret
ficoml
nop
scas
mov
dec
shlb
fistl
iret
stc
dec
pop
les
js
imul
es
xchg
xchg
test
pusha
ficoml
stos
push
shl
xchg
scas
push
mov
lret
sub
les
xchg
push
xchg
push
aam
repnz
iret
mov
in
loopne
jge
scas
pop
jl
inc
inc
push
cmpb
cmc
out
cmpsb
pop
ret
mov
inc
mov
pop
sub
in
rolb
loope
repnz
popf
cmp
outsb
or
mov
mov
push
enter
iret
mov
pop
add
std
ljmp
mov
add
test
xchg
std
jg
mov
cltd
mul
xchg
add
cld
add
add
sub
xor
mov
sub
iret
das
shll
dec
orl
add
push
repz
push
enter
add
cmc
fnstsw
push
xor
push
in
icebp
into
shll
sbb
pop
push
aam
inc
pop
pop
sub
mov
int
mov
xor
inc
sub
cli
sbb
xchg
dec
jge
data16
sahf
jbe
or
or
inc
ljmp
pop
dec
sub
arpl
mov
cmpsl
xor
imul
into
push
movsl
in
loope
xlat
jg
adc
icebp
push
cmpb
fadds
inc
loop
cmp
push
insb
dec
mov
shll
stc
mov
out
sar
adc
cmpb
xor
xor
insw
loope
add
jle
push
mov
loop
rcrb
push
stc
cmpsl
pop
and
and
stc
mov
sbb
cmp
negb
mov
addr16
sti
pop
icebp
shl
enter
ss
push
int3
cld
dec
fwait
lret
sub
call
cmp
mov
jg
xchg
shlb
loop
jns
jle
ret
fdivrl
sti
lret
call
fisubs
shrb
sbb
addr16
xor
sbb
outsb
iret
leave
xchg
adc
loope
andl
or
dec
jae
enter
mov
incb
stos
mov
mov
lcall
xor
xchg
or
push
aam
or
inc
adc
jne
cmp
and
mov
and
dec
jmp
fnsetpm(287
add
sub
enter
jae
cwtl
mov
xchg
lock
inc
adc
cmp
in
iret
inc
inc
test
andl
jns
jl
aaa
mov
xchg
mov
idiv
iret
rorl
jg
and
add
add
add
frstor
adc
lret
dec
test
pop
adc
mov
fisubrs
imul
dec
xor
adc
xchg
xor
sahf
addr16
sub
adc
lds
movsw
outsb
pop
cmp
xchg
pushl
mov
fs
mov
popf
adc
fwait
sbb
mov
jp
pop
mov
daa
bound
xor
sub
out
je
pusha
sbb
sub
inc
push
loope
loop
subb
in
aaa
daa
sub
nop
jmp
repnz
pop
push
pop
cmp
rcrb
repz
push
lahf
cmp
mov
movsl
pop
xor
jecxz
call
dec
mov
adc
mov
mov
sub
fiaddl
jge
rcl
out
pop
mov
lods
ss
lods
imul
push
adc
push
pusha
in
testb
push
inc
push
dec
insb
nopl
movsl
mov
aaa
cs
lods
inc
push
incl
fstl
gs
fldenv
add
in
and
jmp
jnp
ja
pusha
mov
das
out
inc
adc
jmp
jp
inc
dec
cwtl
aad
ljmp
adc
int3
aaa
lea
push
push
sbb
fisubrs
cmp
ja
mov
pop
mov
lds
xchg
ss
fs
mov
in
lock
rcl
call
and
movd
out
push
out
test
sbb
aam
enter
dec
outsb
fdivrs
inc
or
icebp
sbb
inc
adc
jg
add
dec
test
insl
stos
mov
insl
xlat
cld
adc
push
popf
cmc
leave
mov
aad
pop
add
addb
fwait
sbb
lcall
cmpsb
dec
sub
repnz
imul
and
cmp
scas
out
ret
mov
ja
or
lcall
inc
mov
push
or
lea
frstor
outsl
ja
push
pop
mov
adc
pop
mov
ficompl
mov
mov
out
push
mov
jo
mov
out
mov
js
mov
xchg
sub
xor
xlat
pop
mov
add
out
cmpsb
loop
pushf
xor
add
out
xchg
dec
and
lods
mov
sbb
mov
inc
jg
jae
or
push
jle
cmp
fimull
ss
adc
mov
popf
stos
les
scas
fdiv
insl
and
and
imul
int3
jge
pop
inc
push
cmp
and
jns
cmp
call
cli
cld
data16
test
ljmp
push
cmpsb
xlat
cwtl
cmpsl
cltd
pusha
popf
dec
or
in
dec
sub
shll
xchg
imul
ljmp
lea
popf
out
push
and
add
bnd
cmp
addl
cmc
pop
and
aam
sub
lods
xlat
mov
pop
imul
cli
loopne
mov
ret
negb
rol
cld
ret
push
cmp
nop
iret
add
dec
pop
sub
mov
jle
test
sub
inc
test
out
sbb
xchg
xor
movsb
inc
inc
mov
ret
outsl
inc
jb
fsubl
sub
pop
out
fcom
sar
inc
dec
jp
mov
fstpt
shll
les
mov
in
push
bound
out
pop
lods
push
sub
mov
in
or
xchg
jecxz
adc
cmp
xchg
cli
jne
add
jnp
pop
mov
cmp
mov
mov
jmp
in
imull
cmp
push
lock
jns
in
lahf
push
sub
data16
mov
testb
lret
push
inc
sbb
insb
sub
dec
inc
xchg
in
push
push
jle
xlat
lret
push
testl
pushf
add
cld
add
add
cmp
jne
neg
add
add
aaa
imul
cmpsb
test
add
mov
adc
pop
jno
test
xchg
cmpsb
xlat
push
fwait
in
popf
mov
mov
sub
scas
int3
sarl
popf
out
sub
or
fistpl
dec
push
lea
jbe
mov
ficoml
hlt
lock
sbb
mov
jb
and
bnd
push
iret
fisttpl
or
mov
outsl
mov
frstpm(287
cmp
fstpt
jmp
shlb
nop
cltd
stc
cmpsb
dec
rcl
xchg
shll
loopne
cmc
test
std
mov
xor
test
insl
lds
add
xor
sbb
dec
sbb
ss
mov
les
push
sub
data16
sti
in
mov
insb
test
or
adc
scas
cmpsb
popa
add
adc
cmp
inc
std
je
xor
loope
xor
push
loopne
add
dec
out
pop
adc
inc
mov
js
sbb
xchg
sbb
jecxz
push
in
xor
in
aad
add
int
cld
mov
pusha
cmc
stos
sti
cmc
push
cmp
mov
xchg
mov
pop
clc
sub
outsl
mov
rolb
inc
mov
pop
ret
mov
pop
mov
add
fnsetpm(287
mov
pop
add
add
mov
jmp
lcall
inc
xor
outsl
lds
inc
and
xchg
or
ret
je
out
popf
pop
pop
inc
je
mov
nop
fimull
mov
out
xor
fdivl
lea
ds
push
jae
cmpsb
lret
lock
mov
cmp
adc
dec
sbb
mov
loope
shll
sbb
into
xchg
jnp
inc
dec
or
mov
iret
js
pop
fsts
stos
imul
adc
or
pop
out
repz
fucomp
stc
push
into
scas
rcrb
add
xor
leave
mov
pop
jo
pop
je
loope
adcl
or
lea
and
dec
cmp
cltd
mov
movsb
clc
mov
dec
pop
lret
mov
aam
inc
inc
mov
popf
jecxz
ret
pop
inc
adc
fidivs
lea
popa
and
xor
xchg
add
lock
ds
add
out
in
inc
fisttpll
enter
stos
push
sub
pusha
adc
movsb
aam
pop
rorl
dec
mov
loopne
fstp
js
pop
jmp
jecxz
nop
push
orb
je
sub
mov
mov
inc
mov
arpl
mov
pop
dec
fisubrl
int
clc
pop
dec
push
outsl
or
xor
lret
push
and
stos
jbe
js
dec
icebp
sarl
mov
or
movsb
imul
daa
pop
mov
test
cltd
pop
loopne
stos
mov
loopne
in
js
jns
out
subb
ret
adcl
fldl
cmp
inc
jo
mov
outsb
mov
popf
or
imul
xchg
xlat
faddl
cmp
pop
sbbl
pop
mov
hlt
and
xor
push
cmp
dec
mov
addr16
test
xor
add
adc
add
xchg
pop
mov
addl
cmpsb
imul
lahf
les
inc
cs
rcrb
popf
mov
mov
jecxz
xor
sti
jecxz
mov
xor
stos
loopne
inc
mov
jecxz
and
dec
loop
loope
jmp
push
mov
test
shlb
clc
fadd
popf
insb
pushf
aaa
mov
ss
jo
jae
ret
push
lea
cli
xlat
adc
or
icebp
repnz
movsl
cli
adc
add
add
xchg
insl
mov
out
nop
sbb
mov
add
xchg
xchg
mov
xor
xor
mov
jmp
xchg
or
mov
sbbl
pop
xchg
xchg
dec
aaa
decl
xor
and
idivl
add
cmpsl
inc
movsl
movsb
shl
push
xchg
adc
xchg
add
cwtl
add
orl
push
jb
adc
inc
cmp
fidivrs
call
or
pop
jbe
cmpsb
mov
xor
sarb
lods
icebp
cwtl
adc
shll
cwtl
jns
je
cmp
mov
and
loop
jge
sub
rorb
push
loopne
out
xchg
addb
xor
sub
dec
leave
scas
fcomi
mov
dec
mov
in
or
sahf
mov
push
push
jne
mov
adc
pushf
cmp
push
or
mov
jo
sti
jl
dec
jmp
int3
pop
in
xor
inc
std
jecxz
nop
inc
inc
adc
aad
out
push
sub
jbe
int
mov
jnp
dec
dec
fiadds
xor
fnstenv
push
jae
push
lret
mov
lret
and
in
xchg
out
mov
ljmp
test
adc
fnsave
cltd
add
lock
inc
outsb
aam
xchg
push
xchg
adc
sbb
inc
and
mov
and
push
push
ret
shrl
shl
sbb
into
lock
out
pop
pop
mov
cmpsl
jb
test
pop
insl
fbld
sbbb
inc
push
lods
lret
add
xchg
std
xchg
pop
inc
stos
jmp
pop
out
inc
pop
ja
ss
mov
and
lea
adc
ret
jbe
aad
fs
jp
stos
icebp
popa
dec
out
xchg
and
int
adc
mov
insb
xchg
jbe
mov
sti
push
out
push
ljmp
and
xchg
dec
out
ja
idiv
pop
out
cmp
push
bswap
mov
add
jge
pop
int3
aas
pop
xchg
jns
icebp
mov
popa
fdivl
adc
mov
mov
jge
iret
les
test
jl
sub
fsubrp
stc
loope
hlt
push
push
jl
ret
pop
mov
insb
mov
clc
pusha
movsb
or
mov
xchg
loope
or
cmpsb
dec
stos
daa
notb
fsubr
shl
and
orl
sub
xchg
ljmp
pop
hlt
adc
lods
or
stc
addl
cmpsl
mov
mov
ret
push
and
mov
fs
int3
hlt
xchg
dec
mov
push
jbe
mov
inc
popa
aas
push
addr16
pop
fs
or
enter
into
mov
mov
std
fstl
xchg
mov
testb
jmp
adc
or
insb
or
in
inc
sub
jp
xchg
jno
repnz
inc
test
pop
test
jbe
dec
mov
fucompp
or
jno
clc
sub
lea
clc
std
nop
sub
aas
xor
pop
jle
ljmp
gs
sbb
scas
cmp
das
inc
adc
lret
scas
jb
add
jo
negl
sbb
push
dec
cwtl
lret
imul
pop
pop
jnp
pop
ret
adc
fisttpl
adc
push
nop
ss
jg
pop
xchg
xchg
aam
mov
mov
adc
or
mov
popa
out
mov
jnp
adc
push
xor
aas
lahf
out
jns
cmp
xor
sbb
imul
xor
in
push
pop
shrl
push
mov
or
lret
sub
sub
mov
sub
push
adc
imul
out
nop
and
into
jge
addb
or
cmc
cmpsl
push
enter
xor
inc
shld
ss
jae
aaa
test
add
add
sti
mov
inc
sub
xor
les
add
lahf
mov
adc
jecxz
stc
pusha
xchg
sub
mov
lods
jecxz
stc
push
dec
nopl
jg
adc
popa
scas
adc
sahf
xchg
insb
add
js
dec
repnz
imul
inc
movsb
cmp
dec
pop
xchg
or
fildll
pop
mov
mov
cmp
sub
lcall
pop
lahf
dec
push
shlb
sahf
xchg
cmpsl
mov
mov
lds
dec
lret
sti
adc
les
jb
pop
in
push
cmp
cli
push
inc
gs
lea
mov
mov
gs
aad
in
pop
cwtl
adc
loope
xor
cltd
inc
mov
leave
scas
cmp
sti
pop
push
jne
xchg
add
in
cwtl
and
cmpsb
outsl
and
cmp
insl
pop
mov
pop
in
mov
push
out
add
mov
jns
sbb
repz
jmp
nop/reserved
push
or
sbb
das
hlt
arpl
leave
cmp
mov
ret
je
imul
adc
rcr
imul
dec
mov
push
xor
xchg
add
repnz
fists
jge
jl
sbb
inc
shrb
daa
movsb
jns
mov
pop
cmpl
mov
jl
sub
xor
divb
aas
push
enter
mov
ret
ds
repz
dec
movsl
ret
xchg
xor
pop
in
cmpsb
pop
in
imul
inc
pusha
loop
insl
jp
or
mov
jmp
xor
imul
push
sub
and
stos
push
add
repz
push
fbld
pushf
pop
insb
push
das
cmp
pop
bnd
inc
pop
push
ja
imul
imul
mov
xor
sahf
xor
sub
ja
shlb
add
stos
and
jp
push
cmp
lock
pop
adc
arpl
incb
pusha
test
push
pop
cmp
jne
or
sahf
in
mov
push
gs
test
iret
cwtl
xor
dec
dec
mov
sub
mov
popa
test
loopne
rorb
sub
cmp
imul
shlb
push
xchg
cltd
dec
gs
rol
gs
xor
pusha
push
mov
and
or
mov
cwtl
xor
push
xor
push
add
fldt
or
loope
mov
fistl
movzwl
pop
jle
fcoml
nop
out
mov
add
fisubl
ret
aad
push
js
and
sahf
inc
cmp
pushf
fs
mov
ljmp
jns
adc
pop
or
xlat
out
mov
sub
dec
data16
stos
jl
pop
outsl
rep
jecxz
sti
les
sub
lahf
rcr
pop
adc
cli
mov
mov
jmp
jle
addr16
lods
add
fldt
in
jle
test
daa
cmp
push
nop
jo
cmp
movl
mov
ret
xchg
das
pop
ret
fdiv
pop
movl
pop
mov
js
add
shr
inc
mov
shl
mull
jno
cwtl
inc
dec
dec
pop
xlat
icebp
nop
cltd
rcr
cmp
cmp
lcall
out
roll
and
xchg
inc
sbb
mov
mov
sarb
sub
fwait
sub
andl
xor
lahf
mov
idivb
int
cwtl
cmp
mov
loop
notb
fstpt
enter
divb
notb
mov
adc
and
xchg
jmp
rcrl
mov
add
stc
std
in
mov
mov
std
cmp
sbbb
add
add
jnp
js
ret
pop
mov
sbb
cmpsl
adc
xor
mov
push
imul
ss
inc
lahf
lds
cli
xchg
or
pop
outsb
xchg
popf
xor
loope
pop
jg
add
and
push
mov
nop
push
add
sbb
scas
sub
out
sbb
inc
push
add
add
add
loop
mov
pop
in
pop
lea
stc
sub
ljmp
cmc
and
mov
les
fcoml
cmp
inc
push
pop
fs
push
mov
lods
lods
pop
in
popf
or
or
push
daa
mov
enter
pusha
and
and
shlb
cmp
arpl
int
fistpl
lods
jae
jbe
cmc
xor
push
aaa
les
cwtl
stos
or
mov
pop
add
mov
jge
pop
mov
test
stc
cld
nop
in
fmulp
aad
pop
lcall
dec
mov
fs
stc
int3
mov
mov
fcoml
sub
mov
jecxz
in
push
mov
sbb
sub
and
and
dec
popf
dec
cmpsb
jg
push
cmp
in
lods
lahf
sub
loopne
or
rorl
loopne
std
fnstcw
daa
lcall
arpl
mov
test
cmp
in
inc
or
xchg
or
or
xor
arpl
push
jmp
out
dec
mov
push
pop
insb
and
cmp
mov
movsb
out
aas
dec
in
jp
mov
jmp
adc
iret
stos
jne
pushl
adc
in
mov
dec
into
cmp
ds
pop
mov
push
xor
jle
fildl
add
add
rolb
testb
inc
and
ficompl
cld
add
add
call
ss
loope
sbb
repz
mov
or
iret
mov
mov
les
push
sti
bound
cs
xor
gs
sub
aaa
and
adc
ret
cwtl
pop
push
dec
stos
ja
xor
cmpsl
push
sub
in
jb
cmpsb
outsl
pop
dec
pop
mov
in
cmp
hlt
pushf
lea
dec
into
sbb
xchg
push
cmp
data16
dec
daa
outsl
xchg
into
outsb
stos
lcall
daa
cs
add
sub
outsl
mov
pop
out
aas
clc
jo
pushf
aam
jo
mov
in
cmpsb
mov
leave
xor
mov
adc
lods
nop
popf
push
aas
ret
jg
pop
or
outsb
and
jg
ljmp
jns
and
jle
sbbl
out
inc
fmuls
fldcw
nop
pusha
push
mov
iret
icebp
dec
movsb
sbb
sbb
inc
or
lcall
inc
dec
lods
lock
or
lods
add
push
jmp
sbb
push
mov
clc
out
out
shll
fstps
jne
mov
or
mov
pop
loope
mov
call
push
mov
imul
mov
xchg
aam
cwtl
shrl
cli
inc
adc
xchg
mov
pushf
lahf
sti
sbb
test
popa
cltd
inc
mov
inc
ret
and
daa
call
dec
fildll
inc
out
sbb
push
jmp
push
push
mov
lahf
movsb
mov
sbb
out
aam
inc
mov
fs
outsl
lods
stos
pop
mov
jge
sub
in
or
rorl
dec
xlat
sti
sarb
and
adc
fimull
out
push
inc
loopne
les
xor
bound
add
add
popa
data16
gs
mov
sbb
dec
mov
add
cld
add
add
add
and
and
jmp
xchg
pusha
mov
adc
or
mov
dec
cmp
mov
outsl
call
cmp
inc
enter
cmc
pusha
mov
shl
dec
popa
aam
sbb
sub
mov
icebp
sbb
fst
add
sbb
pushf
jno
lods
cs
mov
das
subl
fldcw
hlt
sti
sarl
jmp
shll
push
vcmpsd
sti
push
fdivl
dec
sbb
push
outsb
push
jne,pn
mov
imul
ret
cmp
xlat
inc
lahf
ja
xor
sbb
out
xchg
push
mov
cmp
jo
out
cmp
testb
test
xor
scas
xchg
xchg
inc
push
scas
rorb
test
cmp
mov
xor
js
sbb
add
aam
mov
lret
pop
or
mov
lods
xchg
icebp
clc
jbe
add
jo
loope
add
cmp
adc
mov
or
cs
mov
test
sub
inc
leave
xor
cmp
pop
sbb
inc
inc
movsl
leave
mov
outsl
push
cmpsl
leave
jp
out
mov
sub
int3
out
pop
or
sub
jae
dec
push
sti
cmp
int3
mov
add
popl
mov
pop
cmc
xor
pop
push
shll
mov
push
xor
leave
cmp
push
out
or
mov
insl
xchg
sti
or
cmp
or
outsb
xchg
popf
jge
bound
dec
sbb
in
fsubrl
idivl
in
insl
xor
or
cmpl
push
and
push
inc
frstor
dec
clc
test
les
add
add
cmp
cli
cmp
adc
popa
mov
add
cld
add
add
pop
mov
sti
ljmp
pop
sbb
es
ja
and
pushl
cmpsl
mov
adc
jmp
push
loop
dec
neg
lret
in
mov
mov
cltd
push
mov
int3
or
pop
mov
add
dec
aaa
inc
adc
repz
xchg
dec
mov
mov
dec
enter
fsubs
out
stos
mov
bound
lcall
xlat
jp
sub
fisttpll
jmp
mov
movsl
dec
or
and
xchg
std
sub
push
dec
inc
stos
push
push
push
in
jnp
cs
pop
into
outsl
mov
xor
or
lods
xor
sub
mov
push
int
bound
jns
subb
test
in
in
adc
pop
fwait
inc
or
mov
jl
jmp
les
imul
lds
jecxz
test
xchg
push
jne
xor
js
or
and
je
push
dec
loopnew
xor
je
xor
mov
dec
mov
jae
incb
push
ljmp
leave
jne
mov
loopne
cmp
xchg
mov
aad
dec
pushf
mov
push
mov
loop
cmc
jl
cmp
cmpb
sub
popa
scas
xor
iret
insb
xor
call
mov
icebp
push
add
popa
sbb
outsb
das
cmp
call
into
in
push
jns
aam
dec
or
push
cld
adc
pop
xchg
sbb
movsl
xchg
jb
jecxz
dec
test
jo
imull
or
loopne
jmp
mov
sub
cmp
xchg
push
sbb
enter
cmp
mov
cmpsl
std
dec
mov
mov
outsb
adc
popa
add
inc
int
mov
dec
clc
int
add
add
and
push
push
cmp
es
sahf
lods
mov
add
add
add
rcll
adc
adc
jp
lret
rcll
out
xor
cmp
mov
mov
lahf
mov
add
inc
out
lcall
or
addr16
mov
inc
pop
add
cmp
jne
mov
cmpsl
movsl
adc
outsl
xor
xchg
inc
mull
mov
adc
mov
sahf
mov
mov
mov
addr16
fnstsw
or
lahf
and
jge
aaa
sarl
scas
push
out
cmc
cmc
ret
mov
sbb
add
and
dec
adc
adc
icebp
ret
shrl
pop
jl
fwait
sbb
movsb
pop
rorb
ret
in
aam
push
xchg
jl
jp
jnp
pop
mov
push
stos
pop
jno
int
dec
mov
pop
add
adc
lret
or
mov
fs
or
out
pop
and
stc
push
jns
out
add
pop
mov
mov
inc
shrb
push
inc
adc
testl
in
scas
cmc
ror
data16
push
and
jle
push
push
testl
daa
push
push
ret
rcrb
repz
xor
lcall
mov
inc
xor
out
mov
jl
mov
adc
fstps
int3
mov
fimuls
scas
imul
sbb
adcl
popa
lds
and
movsl
or
mov
iret
jmp
scas
inc
xlat
cmp
pushl
iret
jbe
addr16
daa
push
xor
addr16
sbb
ficoms
in
pushf
stos
fisubl
push
pop
fcomp
dec
cmp
mov
xor
icebp
or
mov
jo
int3
or
int
or
jb
xor
filds
push
lret
fnstsw
mov
in
outsb
fs
mov
mov
add
add
add
lret
fwait
sbb
mov
pop
call
fwait
adc
add
sti
mov
lods
jo
paddsb
scas
jo
cmpl
je
add
cmpl
repnz
fisubrl
cwtl
pushf
lret
jmp
scas
push
inc
add
and
mov
lahf
push
cmpsl
arpl
ljmp
push
jne
add
test
xchg
or
xor
ljmp
loop
sbb
inc
shll
adc
imul
sub
enter
jecxz
rorb
xchg
pop
xlat
dec
pop
inc
cli
hlt
adcb
ss
fdivs
and
xlat
mov
mov
or
cwtl
ret
push
cltd
and
repnz
sub
lods
xor
incb
mov
test
jb
imul
mov
xor
mov
rcl
test
stos
xor
movsl
cmpsb
repz
repz
cmpsb
sbb
sub
add
xchg
pop
loopne
lahf
adc
and
movsl
adc
mov
stc
mov
fists
jae
cmpl
cmp
push
pop
dec
ficoml
jae
daa
fwait
dec
mov
inc
in
sahf
out
movsb
adc
int
dec
nop
cli
sti
mov
outsl
insb
stos
shr
sbb
lods
mov
rorl
rorb
ljmp
in
mov
pop
xorb
daa
in
aas
call
stos
adc
jo
or
fsubrl
push
imul
fidivrs
pushf
mov
aam
arpl
leave
and
cli
inc
xchg
rcl
mov
inc
mov
xchg
pop
jne
sub
roll
cltd
jno
pop
cwtl
xlat
cmp
outsl
mov
pusha
and
mov
mov
pop
aad
and
and
in
pop
and
add
add
inc
mov
jb
xor
add
add
xor
or
xor
add
lret
xchg
and
sti
test
pop
push
fidivl
or
lcall
mov
cmc
sti
sub
lods
sub
xchg
and
cltd
sahf
sbb
xor
outsb
lahf
xor
int
lods
int
rolb
movsb
orl
push
xor
fwait
data16
mov
inc
push
ljmp
outsl
add
jno
mov
stc
int3
int3
call
cld
dec
cmc
lods
add
push
ljmp
subl
js
enter
or
scas
ljmp
ds
mov
movsb
shrb
andb
sbb
or
jl
pop
in
sub
sti
mov
jne
or
add
xor
mov
in
cmc
jo
lods
add
adc
adc
fistpll
xchg
mov
scas
out
or
ja
xchg
es
rclb
mov
imul
cmp
fisubs
popf
ret
mov
xchg
icebp
jbe
popf
ds
lret
aad
xchg
xlat
xchg
bound
mov
rcll
jne
rcrb
js
push
pop
in
mov
cmp
cwtl
int
fst
dec
or
mov
loope
add
and
mov
mov
sti
rcrl
dec
mov
add
jb
jp
mov
sahf
add
nop
mov
lret
out
cmp
push
inc
add
test
adc
jmp
sub
out
dec
and
imul
cltd
aas
icebp
outsb
mov
daa
or
add
mov
popw
and
call
popf
call
push
ja
adc
stos
dec
cmp
mov
mov
testl
clc
nop
cmc
lods
sti
insb
xchg
mov
aas
enter
sub
add
add
mov
cmp
mov
movsl
pop
jp
mov
add
add
add
into
data16
push
gs
stos
out
subb
in
in
iret
dec
rclb
adc
push
cmp
clc
fcom
pop
mov
imul
sub
xor
and
inc
xor
mov
incl
push
mov
les
pusha
xor
cmc
jle
cmp
sub
xor
fists
add
cld
push
les
cmp
sub
xchg
cs
in
cmp
je
mov
mov
sbb
test
imul
lods
int3
mov
into
mov
in
ret
iret
ficompl
push
cmp
xor
push
or
cmp
in
cltd
xchg
fimull
jg
add
push
iret
inc
loop
pop
fildll
nop
mov
mov
and
cli
mov
push
js
push
and
out
mov
jg
fisttpll
cmc
je
stos
dec
jg
push
dec
push
fistl
xchg
pusha
sub
ss
fsub
cmp
pop
pop
es
push
clc
sbbl
das
popa
or
in
dec
or
jnp
mov
stos
hlt
and
addb
dec
xchg
cmp
adc
je
cwtl
out
sub
sbb
fisubrs
sbb
or
cltd
mov
xor
cmp
xchg
dec
loop
xor
nop
push
addr16
scas
xchg
xchg
sbb
xor
jecxz
mov
jns
mov
insl
bound
ja
ss
repz
sub
add
ss
sbb
xor
jno
test
fwait
rcrb
incl
cmp
je
loope
addr16
insb
and
test
sub
into
dec
loop
and
enter
push
data16
pop
dec
adc
jg
mov
cmp
out
idivl
test
pop
les
cld
add
add
or
popf
push
fs
cs
mov
iret
cmp
repz
test
incl
sahf
cmp
cmp
cltd
leave
pop
sbb
xor
inc
pop
xchg
mov
xor
jns
call
outsb
cmpsb
mov
push
inc
mov
test
adc
icebp
pop
xor
push
mov
ffree
arpl
ja
and
jnp
push
flds
sub
jnp
pop
jmp
dec
addr16
mov
mulb
add
out
xor
outsb
sbb
stos
imul
fwait
mov
cmp
push
jb
cmp
xor
mov
add
ljmp
xor
pop
dec
xlat
inc
js
push
lods
sub
cmp
jns
lahf
pop
sbb
loope
inc
addr16
testl
inc
adc
leave
les
mov
add
and
sbb
cmp
outsl
imul
out
scas
in
movb
iret
test
cmp
sub
add
sub
sub
addb
adc
cld
orb
lret
cmc
adc
push
insb
dec
loopne
pop
mov
add
adc
loop
aam
lods
fcom
pop
mov
push
jo
mov
jae
xor
por
and
fcmovnbe
rcll
test
sbb
mov
popf
ds
frstor
xor
movsl
or
mov
cltd
test
pop
xchg
pop
stos
lcall
shl
leave
pop
mov
mov
loop
fidivl
xor
cmpb
jecxz
sahf
loope
and
sub
and
mov
sub
pusha
rcll
gs
cmp
ja
fstps
gs
fcompp
out
fs
popf
outsb
push
cli
mov
cwtl
mov
add
adc
lcall
scas
lcall
icebp
sahf
jbe
mov
inc
in
xchg
mov
xchg
ret
in
pusha
xchg
stos
inc
popa
out
cs
xor
in
cmpsb
mov
and
sub
lahf
push
mov
cmp
test
out
leave
or
js
jne
mov
jns
push
pop
test
fmuls
adc
sahf
imul
mov
add
popa
ja
aad
sub
mov
js
cld
popf
jle
repnz
lcall
test
clc
test
aaa
outsb
dec
ljmp
icebp
neg
ss
popa
imul
push
cmpsl
es
test
jb
es
sub
stc
inc
xchg
pop
into
xor
push
icebp
jnp
mov
stos
adc
push
cli
add
xor
xchg
adc
dec
in
mov
cmc
mov
and
cmp
inc
fwait
loopne
pop
push
test
daa
fwait
repz
ret
mov
jae
in
cltd
mov
cmp
dec
sti
sbb
daa
icebp
pop
dec
sub
inc
mov
ds
repz
cmp
sbb
mov
lret
push
shl
out
jl
icebp
shlb
mov
cld
repz
insb
negl
cmc
push
mov
shll
js
mov
fisttps
mov
inc
mov
add
pop
push
fisubrl
ljmp
mov
mov
xchg
je
and
movsb
popa
insb
les
sbb
rcrb
mov
aas
mov
pop
ret
gs
mov
in
rorl
ret
fistps
dec
cs
popa
or
dec
sbbl
popa
mov
pusha
mov
fwait
sbb
int3
or
cmp
ss
rorl
mov
adc
arpl
sti
adc
jl
dec
dec
adc
pop
ret
add
cld
add
add
mov
cld
jb
cli
xor
adc
or
add
jb
int3
mov
ss
repz
push
cli
jg
mov
clc
lret
nop
data16
add
inc
shll
mov
nop
je
in
jmp
and
stc
fdivrs
xorl
cmp
push
leave
stc
mov
push
scas
sbb
sbb
pop
imul
mov
sbb
mov
jmp
cmp
xchg
loope
jmp
pop
add
lcall
faddl
repnz
stos
loop
pushf
setb
or
fldt
insb
push
das
lds
addps
mov
mov
add
xlat
in
adc
sbb
fs
addl
fmull
aaa
dec
ja
push
nop
lods
xchg
fldl
rclb
mov
cmp
lea
fucomi
aad
xor
mov
xlat
push
andb
push
jl
mov
add
shrb
pop
pop
sarl
adc
xchg
nop
push
adc
imul
xchg
mov
sti
xchg
pusha
push
aam
and
and
inc
cwtl
in
les
dec
cmp
aaa
movsl
push
mov
mov
push
and
pop
sti
add
push
adcb
faddl
xor
xor
iret
out
gs
mov
mov
or
mov
fbstp
add
sub
bound
jmp
icebp
cmc
dec
sub
in
hlt
imul
fstl
inc
push
shrl
ficomps
inc
jp
push
mov
testl
outsl
int
out
pop
int3
add
and
pushf
and
in
mov
and
outsb
movsl
ss
push
std
dec
xor
mov
jne
sbb
adc
test
nop
adc
add
add
and
xor
sub
xlat
nop
mov
add
test
andb
dec
insl
jnp
add
pop
xchg
scas
or
sti
adc
pop
int
mov
and
and
hlt
loop
push
mov
dec
scas
and
ja
aam
pop
push
xchg
push
mov
ja
sti
add
incb
sub
shrb
pop
scas
push
scas
mov
sbb
pushf
stos
adc
jb
mov
jmp
mov
out
push
in
jmp
or
jle
cmpsl
mov
push
and
cmp
sbb
lcall
outsb
xchg
mov
inc
movsb
dec
or
cmpl
mov
arpl
adc
push
movsb
sbb
mov
xor
sbb
sub
arpl
cmp
lret
into
jbe
and
data16
mov
and
loopne
pop
data16
and
cmc
mov
cmpsb
jbe
dec
mov
mov
jae
sbb
loope
inc
dec
daa
inc
jne
push
push
pop
sti
or
or
jo
mov
jle
ljmp
lcall
xchg
jecxz
xchg
test
pop
xor
xchg
stc
dec
or
inc
dec
in
test
xor
imul
jp
cmp
daa
adc
mov
cli
inc
pop
and
ss
mov
push
outsl
lods
aaa
mov
adcb
xchg
dec
shll
clc
enter
jle
inc
pop
das
hlt
mov
mov
int
sub
push
test
fwait
push
mov
rcrb
scas
inc
aad
jl
sbb
pop
xor
lds
add
add
pop
mov
jg
data16
sbb
cmp
cld
add
add
sub
andl
mov
jg
push
push
pop
and
mov
mov
adc
outsl
stos
or
lods
es
dec
cmpsb
gs
and
out
cmp
ret
jno
out
push
jbe
and
std
and
and
xchg
mov
mov
in
fistps
lds
mov
or
jge
mov
xchg
test
sub
cld
xchg
mov
in
in
stos
push
pusha
and
lods
mov
jo
jnp
push
fucom
das
sbb
outsl
int3
cmc
test
pop
xchg
stc
decb
mov
mov
sbb
mov
pop
xchg
pusha
adc
mov
dec
jp
jnp
cmp
lret
repnz
pop
jbe
int
and
repnz
arpl
out
or
mov
nop
xchg
lahf
inc
push
dec
pushf
stc
imul
cmp
pop
outsb
sbb
lods
insb
shll
cwtl
enter
pop
lods
xchg
mov
mov
cmpsl
test
fists
lcall
sbb
fwait
mov
sbb
pop
dec
aas
cmp
mov
or
dec
add
aaa
push
add
push
adc
adc
and
sub
movb
popa
stos
idivl
leave
aaa
iret
pop
pop
xchg
mov
sbb
mov
dec
in
daa
pop
cli
dec
pop
mov
mov
mov
das
jl
or
jg
push
aas
nop
push
addr16
nop
mov
repz
fisubs
js
adc
jmp
xor
out
dec
cmp
push
mov
push
mov
or
loopne
fwait
insl
jo
jae
mov
xor
cmp
sub
add
pusha
jbe
out
test
stos
les
rorb
add
and
lock
movsb
jnp
mov
test
scas
xchg
int3
test
aas
pop
sub
cmp
sbb
and
ljmp
cmpsl
mov
or
ljmp
inc
loopne
or
in
aas
dec
bound
ds
in
xchg
adc
mov
fs
cmp
cld
sbb
mov
cld
and
jecxz
and
ljmp
mov
int3
clc
clc
jg
repnz
and
add
dec
push
icebp
sbb
fadds
xchg
insb
ret
insl
mov
scas
pop
test
xchg
mov
mov
push
xor
cli
inc
or
icebp
mov
lret
pop
push
cltd
dec
push
push
shrb
jle
pop
cmp
sbb
push
xchg
pop
pusha
adc
aas
xrelease
addb
inc
or
adc
xchg
outsl
icebp
push
ss
cmc
mov
and
addr16
das
add
jbe
daa
decb
xor
ret
mov
or
imul
out
cmp
inc
out
sub
push
sub
mov
dec
inc
xchg
aam
mov
xor
mov
in
dec
pop
roll
sbb
xchg
adc
enter
dec
mov
jno
lret
ret
add
mov
mov
notb
push
or
sub
sub
insb
push
xor
adc
and
mov
sub
inc
pop
inc
test
loopne
jge
sarb
dec
mov
arpl
pop
mov
sub
add
test
leave
adc
mov
fdivp
outsl
dec
adc
jl
or
dec
loope
int
pusha
stc
cltd
xor
mov
pop
cmpsb
sbbl
loop
aad
scas
jp
adc
loope
loopne
loope
loopne
outsl
int3
pop
lret
scas
push
mov
push
sub
fucomip
addr16
ss
test
add
cld
add
add
or
cltd
push
push
movl
or
jecxz
xchg
fs
and
xor
xchg
loope
scas
jno
repnz
cltd
outsb
mov
push
test
ret
jp
xchg
or
test
push
mov
xrelease
pop
test
jle
xchg
fidivs
dec
mov
das
jle
or
sbb
mov
push
aad
sbb
repz
mov
mov
daa
jl
mov
sti
dec
lahf
push
push
shlb
sub
popf
add
cmp
ss
fbstp
xchg
gs
mov
sbb
jg
stos
mov
xor
and
pusha
or
xchg
jno
icebp
lret
aas
jno
mov
xchg
mov
jb
xchg
mov
jae
shlb
jns
jge
test
int3
movsb
pop
sbb
daa
aaa
add
jg
adc
xchg
in
fwait
xchg
in
gs
push
movsl
push
repnz
aas
mov
insl
mov
daa
sahf
jmp
cmc
stos
and
sti
and
inc
or
lahf
leave
cmp
push
popf
sub
in
cli
add
addr16
dec
aad
nop
shr
push
les
mov
pusha
mov
push
leave
jge
jns
iret
inc
sub
fbld
jecxz
mov
in
mov
cltd
imul
mov
cmp
or
ja
xor
sbb
cmpsb
and
dec
xor
push
push
std
jbe
jmp
xchg
stos
dec
fildll
mov
pop
xor
cmpsl
and
jecxz
sbb
testl
mov
and
adc
mov
fcos
outsl
xchg
inc
mov
add
add
add
outsl
daa
insl
push
addb
test
movb
cld
add
add
mov
enter
aam
dec
pop
idivl
pop
sbb
fmull
push
sub
movsb
scas
aaa
ljmp
pushf
test
stc
or
sarb
mov
or
xchg
stc
sbb
xchg
and
data16
imul
xchg
gs
shlb
push
aam
fwait
popa
pop
mov
scas
dec
xor
xchg
bound
push
stos
pop
xchg
popl
mov
iret
adc
xchg
mov
and
jmp
popf
sub
mov
movsl
cs
pop
dec
lods
loop
adc
cmpsl
loopne
push
fwait
adc
sbb
jmp
jae
fildl
and
cmp
and
adc
js,pt
popa
jb
xor
roll
dec
rclb
jae
mov
jle
push
roll
popa
inc
jo
cli
adc
add
mov
or
repz
xrelease
sub
xchg
sub
add
mov
sbb
jmp
test
rcrb
lods
leave
cmp
insl
jb
xchg
inc
fwait
xchg
repnz
lock
sbb
movsb
fxch
xor
pop
cltd
sbbb
outsb
xlat
gs
scas
pop
pop
jmp
mov
xor
mov
pop
mov
lcall
loopne
push
mov
leave
mov
lods
clc
les
aas
ja
mov
repz
cmp
iret
sub
cmp
mov
jecxz
cmp
jo
xchg
lock
dec
shlb
testl
outsl
xchg
cmpsl
cltd
inc
jp
addr16
outsl
cwtl
es
push
inc
pop
mov
xchg
pop
cli
xchg
or
lret
sbb
and
fwait
adc
pusha
test
add
inc
lea
and
mov
out
leave
enter
sbb
jge
enter
add
add
in
cmp
mov
jmp
js
xchg
pop
iret
push
jle
jo
hlt
mov
outsb
stos
pop
test
ds
xchg
inc
sbb
add
int3
sub
aaa
aad
jns
cld
sbb
mov
mov
jb
mov
jg
mov
dec
out
jae
jbe
and
xchg
movsb
ret
jle
and
and
cmp
mov
push
sbb
ja
je
fldcw
or
imul
js
movsb
pop
xor
sbb
int3
lcall
cmovbe
adc
add
or
mov
pop
push
inc
cwtl
inc
addr16
cmp
and
lds
mov
pop
mov
aas
jmp
push
pop
mov
cmp
jge
pop
daa
mov
ja
incl
scas
int
sbbl
push
jl
sti
adc
cmp
rcrl
cmc
sub
aas
cmp
and
push
add
mov
imul
push
jne
ljmp
lret
int
jp
push
mov
mov
gs
cmp
inc
cmpsl
mov
out
dec
ret
scas
cmp
cmp
mov
imull
push
mov
cs
out
pop
pop
insl
xor
dec
mov
sti
mov
sahf
cwtl
gs
enter
and
cmc
and
mov
cmp
icebp
arpl
pop
outsl
scas
rclb
jae
or
insl
aad
xchg
and
cmp
icebp
push
icebp
push
fidivs
test
mov
sarb
into
xor
and
call
dec
cltd
lds
or
jle
sbb
push
inc
leave
push
mov
fidivs
lret
cs
mov
int
pop
add
adc
outsl
sbb
scas
push
std
dec
jl
lret
add
add
cmp
mov
and
add
cld
add
add
fldt
test
sub
push
xchg
outsb
mov
jo
decb
ja
xor
mov
mov
jmp
sub
xor
jnp
jmp
or
pop
cmpsl
and
push
cmp
outsl
xchg
and
jns
push
mov
lahf
inc
xor
and
cwtl
lods
cmp
xor
mov
fstp
jns
fnsave
sbb
sbb
dec
lock
inc
xchg
fildl
inc
cmpsl
in
jnp
shlb
mov
rep
movsl
fcomip
pusha
mov
inc
or
into
out
repz
cmpsb
pop
jne
mov
sub
mov
ljmp
mov
and
or
jnp
scas
mov
inc
cmp
sbb
shrb
aas
lret
and
mov
push
cmpsl
jns,pn
fimull
dec
in
mov
inc
je
or
pop
jae
pop
cmp
aas
stc
daa
hlt
cmp
popa
test
clc
xchg
fstpl
in
mov
and
mov
aas
cmp
pop
js
sbb
mov
cltd
add
sub
pop
jne
fldcw
mov
mov
mov
dec
loop
lods
out
pop
stc
inc
in
mov
loop
and
jns
and
int3
sbb
jp
push
xchg
jns
mov
notl
push
fistps
out
push
xor
ljmp
loopne
and
and
mov
sub
jbe
das
sub
jmp
mov
fxch
pop
inc
lcall
cmp
test
xchg
adc
adc
cmpsb
pop
sbb
or
sahf
pop
js
jge
inc
mov
sarb
jne
xchg
or
and
push
adc
fists
mov
xchg
ss
mov
dec
inc
shll
add
add
sbb
jge
aam
dec
sbb
pop
and
cld
add
add
xchg
jnp
test
in
push
call
in
jg
insb
pop
push
enter
fldenv
ret
ljmp
test
in
and
and
imul
addr16
flds
mov
cli
jb
and
mov
arpl
mov
js
dec
mov
jbe
cli
shrl
adc
cmpsb
ficomps
inc
mov
ja
add
push
iret
cli
loope
sbb
jnp
xor
sahf
leave
push
inc
add
repnz
ja
or
rorb
inc
xchg
das
mov
repz
aam
xchg
cmp
leave
push
fadds
imul
into
mov
jle
ror
fs
mov
and
fstps
xchg
lock
or
lods
mov
in
push
ret
cmp
xlat
call
mov
inc
dec
fisttpl
pop
cmp
jb
adc
jae
xlat
mov
adc
test
clc
mov
mov
xchg
xchg
or
std
inc
inc
mov
leave
xchg
mov
dec
jle
in
inc
sbb
pop
xchg
mov
jge
jo
lods
dec
xchg
add
test
sub
sbb
xchg
jbe
xor
mov
rcrb
mov
insb
cmp
lds
std
mov
mov
pop
loop
dec
mov
pop
dec
pushf
sub
jnp
hlt
fcomip
inc
jno
lea
fcoms
adc
mov
les
push
lds
cmpsl
and
cwtl
or
hlt
xor
mov
inc
or
dec
imul
inc
insl
push
dec
xchg
push
push
mov
rcrb
and
inc
inc
in
mov
pop
je
xor
lds
add
push
aaa
repz
fstpt
arpl
jae
mov
mov
mov
nop
in
cld
mov
cld
add
add
xlat
stos
xor
push
xchg
fwait
pop
dec
cmpsl
sub
icebp
and
js
repz
push
outsl
and
rcll
in
sub
adc
loope
xor
dec
adc
pusha
and
xchg
push
stos
pop
lcall
int3
dec
xor
sub
stc
stc
xchg
insl
test
test
ror
mov
dec
mov
inc
pop
sub
mov
addr16
fs
push
test
cld
testb
lcall
sub
outsb
fstl
sahf
fsts
aaa
iret
dec
add
in
loopne
jno
insb
arpl
mov
insb
jmp
sahf
pop
in
and
jl
aad
xchg
adc
xchg
subl
sub
and
vmovq
out
jp
sbb
jae
or
mov
iret
push
sub
std
push
fmul
rcll
insl
or
test
xor
push
fisubrs
test
rolb
jae
push
pop
push
or
adc
push
or
jmp
leave
xor
cmp
jnp
sub
hlt
pop
popa
inc
dec
push
push
bound
push
push
mov
or
fcoms
shll
push
xchg
xor
mov
in
xchg
fcmovb
addr16
adc
sbb
lods
xchg
mov
pop
in
cmp
mov
jmp
jo
mov
out
cmp
in
add
add
push
mov
daa
lds
push
aas
sub
pop
xor
adc
sub
add
clc
scas
cld
cwtl
stc
shll
add
fwait
ljmp
in
filds
shr
pop
xchg
inc
imul
cmp
shll
dec
insl
lds
jnp
mov
test
mov
dec
ss
and
les
arpl
push
dec
inc
mov
in
dec
cmp
jmp
popa
or
add
add
add
mov
xorl
or
fcomip
jns
ror
cltd
ja
jmp
jns
je
in
mov
pop
pushw
lcall
cmp
sbb
rcll
push
xchg
pop
mov
push
add
pop
rcll
lods
out
xchg
sbb
sbb
rcll
inc
popa
dec
fwait
emms
loope
movsl
adc
mov
loope
xchg
notb
int3
scas
add
aas
adc
lcall
inc
into
jae
mov
lds
sbb
jo
in
cwtl
fstps
xchg
jmp
dec
push
jb
fstpl
xor
arpl
add
inc
pusha
adc
addb
pop
or
cmp
ret
jge
jecxz
subb
cmp
push
inc
jecxz
movsl
adc
jl
in
push
pop
pop
sbb
imul
push
sbb
xchg
out
mov
pop
cmp
push
add
cs
mov
and
push
jmp
and
jae
pop
je
imul
inc
sub
call
cmp
push
inc
push
cmp
test
dec
cmp
sub
sub
imul
scas
jge
or
lahf
sbb
xorl
icebp
inc
enter
gs
loope
stos
adc
scas
sub
out
mov
pop
push
je
inc
inc
mov
pop
gs
cmp
jle
xchg
andl
es
cmp
cmpsb
fistl
imul
mov
ficoms
xor
or
sbb
mov
xor
push
jmp
pop
sub
sbb
jp
inc
mov
mov
in
sbb
stos
stos
jo
dec
cli
fldcw
dec
repnz
push
add
add
push
jmp
sbb
ljmp
xchg
jg
dec
xor
negb
jo
ret
mov
sbb
jmp
add
es
dec
jae
ret
aam
movsb
sbb
xchg
mov
or
add
mov
rcrb
cmp
add
mov
xchg
ficompl
mov
xchg
inc
aas
jnp
xor
jl
adc
mov
pop
cwtl
sbb
push
dec
fcmove
mov
data16
orb
mov
push
cmc
and
mov
loope
data16
stos
ljmp
mov
bound
add
fidivl
pop
xor
fwait
mov
xor
hlt
fdivl
aaa
sbb
outsb
xchg
xor
mov
mov
push
push
push
rolb
movb
imul
jne
cmp
cmp
adc
repnz
cwtl
test
dec
and
inc
int
jg
mov
adc
enter
in
adc
dec
mov
lcall
dec
push
repnz
xorl
push
jb
iret
push
fs
lods
notb
outsb
push
mov
or
jecxz
xor
mov
sub
push
or
ja
dec
mov
push
dec
pop
out
es
inc
xor
mov
xor
mov
out
pop
lods
lods
push
inc
add
dec
cwtl
add
xor
dec
mov
add
push
pop
mov
sub
push
xor
jg
lret
and
or
mov
fisubrs
xlat
xor
lock
insb
fstl
les
adc
movsl
test
in
ret
es
mov
push
into
xchg
push
daa
in
or
shrl
or
jmp
dec
xchg
pop
xchg
aad
inc
fs
add
add
add
int
pop
inc
sbb
xor
orl
push
cmp
sub
sub
fnstenv
mov
in
lds
dec
sti
cmp
mov
aam
xchg
mov
inc
iret
dec
mov
add
pop
sub
mov
jnp
add
jb
outsl
xchg
fsubl
adc
std
inc
popa
adc
into
imul
sbb
mov
cmp
lds
mov
std
lds
add
xchg
fwait
sbbb
insb
push
in
das
inc
nop
jae
xor
test
jno
mov
xor
ret
fisttpl
mov
clc
dec
inc
lea
xor
repz
jae
sti
cmovs
lret
sub
or
pop
in
jb
or
imul
inc
test
jmp
sub
xchg
das
sar
bound
pop
arpl
or
pusha
test
sqrtss
imul
repnz
femms
or
lahf
jb
int
pop
jae
adc
jnp
insl
mov
repnz
sbb
xor
jb
pop
test
pop
popf
xor
loopne
add
clc
dec
addr16
stc
std
sahf
sti
xchg
das
xchg
dec
mov
gs
insb
cli
ds
inc
pop
jae
loope
or
pop
add
repnz
cli
pop
add
cmp
sub
cmp
mov
pop
adc
xor
stos
aad
mov
lock
add
push
and
in
stc
mov
daa
in
gs
addr16
and
jo
mov
push
test
into
cld
aad
cld
jl
jge
cmp
bound
jmp
loop
jnp
fcmovnb
mov
test
inc
insb
dec
je
rolb
mov
leave
cmp
fstl
sti
xor
rcrb
leave
xchg
sub
inc
cmp
jge
arpl
nop
push
mov
add
xchg
jl
cld
decl
or
sub
nop
mov
add
cld
add
add
and
call
lea
mov
fs
push
mov
popf
fisubrs
inc
mov
pop
std
ret
xor
inc
je
cmp
enter
add
xchg
xchg
pop
jl
imul
mov
inc
scas
out
mov
xor
pop
aam
push
pop
ja
pop
push
in
arpl
fsts
add
inc
fisubrl
repnz
int
pusha
mov
jno
adc
sbbl
fwait
in
repnz
std
or
data16
int
test
jns
xor
lods
inc
lods
mov
std
repnz
inc
loope
and
sub
fs
dec
fwait
push
mov
ss
shll
pop
fstpl
sub
pusha
dec
scas
push
gs
and
jb
or
cmp
in
icebp
jmp
mov
sbb
hlt
sahf
lods
jbe
inc
or
dec
cmpsl
outsl
iret
xorl
popa
jle
xchg
push
push
out
out
lds
das
jbe
and
and
mov
rclb
mov
sahf
fildl
pusha
sbb
sbb
gs
mov
out
and
adc
or
dec
loopne
rorb
pop
push
les
and
mov
pushf
sub
dec
in
xor
aad
pop
and
pushf
cwtl
push
jne
lret
ja
push
popa
jmp
push
jg
and
into
fisttpl
xlat
lods
pushf
out
outsl
push
iret
loope
fdivrl
or
xchg
insl
in
aad
xlat
xor
cmpsl
adc
rcrb
int
mov
lds
mov
jns
pusha
pop
push
ljmp
shlb
nop
dec
ret
and
dec
repz
fldt
int3
ljmp
cld
add
add
enter
sub
leave
mov
testb
std
stos
lods
xor
rcll
sbb
rcrl
sarb
call
jo
mov
fcomps
mov
aaa
cmp
mov
ret
mov
push
cmpb
lock
pop
jge
pop
into
dec
xabort
add
mov
les
ds
mov
cmp
dec
push
icebp
mov
mov
cs
xor
or
js
pop
mov
out
in
inc
mov
mov
sub
lret
xchg
push
inc
orb
fwait
in
mov
popf
test
enter
sbb
dec
fsubs
or
aas
hlt
in
je
mov
sbb
dec
nop
popa
sub
sub
jno
mov
cmp
cmp
push
mov
in
stos
cmp
sahf
push
sbb
mov
bound
test
fisubl
cmp
jle
repnz
mov
test
call
shll
mov
inc
rcrl
jns
push
mov
data16
pushf
sbb
aas
push
push
xchg
rcrl
scas
push
xchg
xor
test
es
mov
jp
xchg
fidivrs
inc
dec
or
push
jne
test
stc
pop
mov
testl
mov
dec
shlb
push
mov
or
or
dec
jg
pop
cmp
xor
mov
xchg
pop
cmc
rol
std
xor
and
pop
fsubrl
mov
push
negl
leave
pop
mov
aaa
push
sbb
mov
cmp
nop
arpl
or
outsl
imul
adc
dec
jo
ficompl
icebp
adc
out
mov
pop
dec
add
iret
push
mov
sbbb
push
pop
xor
loope
add
add
lcall
rol
ror
pop
pop
fiaddl
add
add
add
xchg
mov
scas
loope
pushf
pop
pop
mov
dec
push
loop
mov
sub
mov
scas
aas
xor
push
ficompl
inc
mov
imul
out
sub
xor
xchg
repnz
xor
test
mov
repz
or
test
test
adcb
cmc
lods
mov
imulb
and
cmp
shl
mov
lods
imul
movsl
dec
xor
int
stos
shrl
jnp
stos
scas
mov
jo
xlat
mov
and
aad
jae
or
insl
stos
out
xor
pop
mov
cs
dec
push
das
shrl
pop
shlb
pusha
cli
push
mov
jns
out
xor
dec
bound
sti
sub
aam
xchg
jl
scas
sub
jae
dec
lods
jnp
jecxz
mov
stc
mov
cli
cs
pop
mov
repz
sub
fcoml
add
ja
adc
add
or
jmp
ror
mov
daa
loope
mov
popf
mov
adc
mov
xlat
int3
call
out
xchg
adc
jne
into
cmp
jno
subl
scas
pop
cltd
cmc
das
xor
inc
in
push
adc
popf
ret
and
jbe
mov
xchg
cltd
pop
sub
dec
in
call
xchg
pop
push
and
movsb
cmp
jmp
push
push
aas
ss
movb
ds
rorb
xchg
jnp
and
xor
movsb
xor
mov
xor
cmc
jns
sbb
inc
xor
inc
iret
and
lods
pop
or
inc
out
add
addb
fwait
sub
test
movsb
mov
jb
inc
push
rolb
dec
idivl
jg
cmp
add
add
add
mov
cld
loopne
shl
pop
pop
jg
addb
fst
mov
mov
test
out
pop
dec
nop
setle
outsb
mov
stos
jnp
dec
push
jb
fisubrl
cmp
sub
lds
jbe
cltd
sub
mov
insb
push
xchg
adc
xchg
xor
jns
cmp
popa
std
dec
ret
xchg
jmp
cs
lahf
xchg
xor
loope
or
mov
aaa
loope
adc
fwait
icebp
enter
dec
cmp
lods
pusha
shlb
shrb
popf
insb
std
sub
xor
push
or
sbb
adc
mov
hlt
mov
sbb
mov
adc
imul
popf
test
repz
sbb
dec
adc
dec
sbb
push
imul
fcoml
jg
inc
clc
mov
push
imul
add
lahf
insb
cmpsb
mov
rorb
add
mov
pop
mov
in
cmp
xchg
xchg
xchg
mov
test
je
mov
insl
jnp
mov
sbb
ss
addb
sbb
push
jg
inc
shl
aad
sub
ret
dec
ds
inc
push
test
loopne
xchg
movsl
rsm
cmc
adc
ret
movsl
mov
repz
or
cmp
push
pop
jg
test
dec
ret
data16
sub
scas
fs
mov
fsubl
insb
push
jno
ljmp
cmp
xor
btcl
cmc
push
icebp
loop
leave
add
dec
jbe
lods
and
adc
and
push
cmp
cmp
mov
imul
jb
in
pop
int
lods
and
fnstenv
mov
ss
mov
mov
sti
adc
inc
leave
pop
lods
push
inc
mov
loopne
xchg
xlat
into
pop
push
or
mov
call
mov
repz
cld
add
add
mov
inc
das
out
cmp
rol
std
addr16
data16
std
sahf
inc
push
and
iret
adc
adc
sub
lock
sbbb
pop
lock
and
ret
nop
xor
push
out
movsb
div
dec
aas
shl
mov
lea
push
jmp
in
test
jp
and
dec
adc
out
test
cmp
inc
test
sub
xor
shr
xchg
push
mov
adc
pushf
mov
lods
mov
xchg
xor
imul
sbb
xchg
xor
lds
jnp
nop
pop
daa
push
xchg
and
sti
push
out
jl
xchg
decb
or
lret
sub
dec
sub
lea
sbb
mov
popa
pop
xor
outsb
pushf
or
jo
sub
sti
ja
dec
mov
mov
mov
or
xchg
fs
mov
sub
es
hlt
cmp
fimull
xlat
mov
mov
lods
fs
fldenv
push
ret
dec
mov
push
fldt
outsl
popf
ret
test
scas
dec
stos
cmc
cmpsb
fsts
and
mov
das
leave
cltd
dec
fwait
pop
xorl
push
sti
sub
inc
out
push
mov
pusha
and
fdivrl
sub
pop
iret
and
imul
dec
xchg
fwait
cmpsl
lret
pop
mov
das
pusha
xor
push
stos
jo
rcrb
dec
insb
jge
aam
push
push
icebp
cmpl
adc
cmc
lea
sbb
xor
xchg
adc
dec
xor
adc
xor
push
mov
add
lahf
incb
dec
scas
pop
ljmp
popa
mov
stc
mov
nopl
add
mov
fcompl
or
out
lds
dec
loopne
add
add
add
out
cli
inc
divl
pop
mov
lds
repz
stos
pop
test
cmp
sub
in
sub
xchg
ja
aas
ja
cmpsb
xchg
nopl
aam
out
dec
cmp
push
and
mov
mov
adc
arpl
mov
cmpsb
cmpsb
cmpsl
sub
mov
mov
fistpll
or
jne
shlb
push
in
xlat
mov
cwtl
cmp
or
andb
mov
pop
rclb
cmp
xchg
xorl
lahf
dec
cmp
xchg
cwtl
dec
sbbl
mov
scas
pop
xor
push
in
shll
mov
push
push
xchg
mov
cmp
pop
xor
mov
and
mull
sub
dec
mov
divl
nop
jo
jnp
insb
dec
call
lret
adc
push
cld
fisubrs
in
lods
jp
push
hlt
xor
mov
ret
jg
inc
mov
fstl
lret
jo
loop
xor
jmp
subb
lods
test
icebp
sahf
push
mov
xor
shlw
push
inc
or
lahf
and
jmp
ficomps
popa
mov
movsl
fadds
out
jge
mov
adc
hlt
into
loope
pop
push
into
cmp
or
push
and
pop
sub
out
adc
sbb
sahf
insb
mov
adc
rcl
inc
rep
cmp
mov
dec
lods
jmp
out
aaa
inc
lock
cld
mov
and
cli
repnz
inc
dec
in
hlt
ss
ss
push
inc
pop
pop
fnstsw
das
adc
data16
mov
arpl
test
push
inc
jmp
test
cli
xchg
sbb
shrl
nop
adc
push
ljmp
inc
stos
pop
sbb
cli
inc
cli
mov
mov
jg
loop
add
add
add
pop
xor
push
fdivs
fsubrs
repnz
mov
pop
or
push
insb
mov
enter
ret
shll
cld
jecxz
sub
cwtl
cmp
jbe
scas
and
lds
les
lods
pop
roll
and
in
push
in
lahf
ja
dec
adc
scas
clc
loopne
lods
push
jl
dec
jno
dec
insl
lock
mov
or
lret
jne
mov
int
mov
mov
test
xor
xor
and
int
push
mov
sub
addr16
jae
mov
pop
pop
in
push
or
movsb
fwait
out
push
addr16
stos
mov
mov
sub
mov
lret
fcomip
mov
leave
add
pushf
adc
dec
mov
xor
cmpb
aam
fpatan
ficoml
push
or
sbb
mov
cld
sti
push
int
sahf
xchg
and
ret
cli
or
pop
ret
inc
mov
pop
or
adc
mov
inc
and
mov
xlat
sbbl
xchg
insl
stc
inc
push
test
out
cmp
insl
push
inc
or
push
add
leave
in
push
mov
add
sbb
push
insl
mov
pusha
nop
jno
and
adcl
fidivs
sbb
xor
sbb
jmp
int3
dec
repnz
iret
dec
mov
pop
test
or
push
sub
xchg
sbb
popf
push
push
aam
jp
mov
push
pushf
xchg
popf
jns
aaa
pop
push
test
adc
add
ss
or
pop
daa
jge
xchg
add
inc
mov
js
mov
xlat
push
xlat
ja
out
push
lahf
imul
add
add
add
mov
cmpsb
ljmp
aaa
dec
pop
pop
dec
movsb
lret
enter
add
stos
int3
dec
not
imul
pop
cs
mov
pop
dec
cld
call
or
clc
arpl
jnp
scas
in
outsb
inc
push
jle
and
ret
jo
pop
fwait
out
xor
nop
jnp
int
popf
push
imul
xchg
add
repz
and
int3
dec
jmp
enter
mov
std
mov
jmp
mov
ficompl
jne
jge
adc
rcl
dec
shrb
fwait
jg
shll
test
stos
dec
mov
jp
add
push
iret
lcall
mov
pop
lock
fwait
jg
or
and
cli
pop
movsb
and
or
addl
cmp
dec
xlat
adc
cmp
mov
push
pop
cmpsl
push
mov
push
jbe
lods
movsb
cmp
stos
std
dec
cmp
aam
bound
loope
aam
adc
push
xchg
or
lds
fsubrs
mov
stos
pop
in
je
aad
sub
fstl
shl
cmp
fists
mov
mov
sbb
jmp
daa
loopne
pusha
sub
push
dec
xchg
lahf
push
add
fdivrl
outsl
daa
insl
xchg
add
lret
out
andb
jmp
imul
subb
add
dec
jno
mov
js
mov
shlb
mov
lret
cmp
loop
subl
lahf
and
push
dec
addl
pusha
inc
sbb
mov
xor
loope
movsl
adc
insl
fcom
test
sbb
inc
add
fdivrl
xor
inc
xchg
push
pop
xlat
orb
push
mov
push
loope
pop
xchg
sbb
cli
rcll
jmp
repz
inc
out
add
add
add
sub
loopne
arpl
iret
mov
mov
cwtl
xorl
insb
mov
fildl
push
pushf
lods
in
adc
iret
or
stos
movsb
in
enter
add
jno
mov
test
dec
sub
imul
mov
fistps
leave
inc
xorb
rcrl
add
push
jno
cltd
in
and
add
jb
icebp
aad
push
add
addr16
mov
push
pop
push
jb
stc
mov
xchg
push
mov
cltd
aaa
jmp
jle
jo
push
mov
divb
hlt
mov
inc
lods
or
test
jmp
fldl
aaa
add
mov
out
test
xchg
push
inc
mov
ss
jl
ds
ret
sub
incb
leave
iret
xor
xchg
jge
dec
add
sahf
pop
add
mov
lock
popa
or
lcall
insb
lahf
xor
decl
mov
ret
jns
inc
testl
fildl
shr
into
xchg
out
sub
mov
push
dec
lret
pop
mov
test
push
dec
sbb
mov
fimull
in
sar
push
les
cmc
pop
movsb
xchg
clc
scas
mov
pop
sub
cmpsb
xchg
fcomip
cmp
xchg
mov
pushf
cmp
xor
in
mul
js
xchg
mov
adc
cmp
mov
xlat
jge
sbbl
cmp
ret
pusha
cmpsl
or
sub
or
cld
pushf
outsl
in
stc
dec
repz
dec
pop
cld
insl
clc
ds
push
adc
pop
stc
arpl
ror
cmp
push
xlat
or
sti
mov
mov
mov
mov
in
adc
int3
pop
cmp
dec
inc
pop
mov
iret
negb
mov
daa
dec
xchg
cmp
add
cld
add
add
xlat
stos
testb
cmp
fs
fstpl
pop
int3
aad
pop
scas
dec
imul
jo
es
sbb
mov
jns
fwait
out
loop
sub
xor
sarl
dec
aam
mulb
mov
lret
cli
mov
or
add
jg
aaa
iret
test
or
mov
jp
xchg
iret
sbb
jo
test
sahf
pop
push
es
aad
lahf
xchg
scas
adc
movsb
lods
es
imul
push
add
xor
nop
aam
jle
mov
mov
sbb
loopne
icebp
inc
xor
dec
xchg
fidivrl
xlat
cmp
pop
imul
mov
inc
dec
in
jg
mov
jnp
insl
jge
cmpl
cltd
cmp
lahf
cmp
out
in
out
inc
test
stos
es
sub
out
xor
inc
cwtl
or
leave
jmp
roll
jb
mov
jne
rcll
push
push
stos
cld
cmp
pop
mov
sbb
scas
cmp
out
fcmovne
test
sbb
xor
pop
jl
mov
decb
mov
stc
mov
icebp
pop
stc
jmp
or
jb
ret
pop
mov
push
lcall
rcrb
inc
int3
pop
sub
push
out
pop
xchg
xchg
xchg
push
les
mov
push
fsubl
cmp
cld
enter
roll
inc
cmp
push
sbb
in
adc
xchg
out
pop
sub
push
push
jmp
add
pop
aad
sub
nop
pop
stos
aaa
jecxz
mov
ljmp
dec
loope
mov
or
mov
aad
sbb
dec
cmc
lds
dec
das
inc
push
push
jnp
outsl
jno
dec
pop
int3
mov
cmp
add
cld
add
add
scas
std
lcall
inc
jb
jmp
and
das
test
cmpsb
enter
xor
mov
cmp
push
addr16
icebp
imul
ret
and
or
ret
mov
popa
cli
mov
mov
insl
cmp
movsb
inc
push
xor
push
mov
sbb
mov
iret
cld
fists
sbb
add
sub
in
cmp
movsb
aaa
adc
push
neg
ljmp
arpl
pop
pop
pusha
and
sbb
shrl
movsl
outsl
inc
xchg
xor
mov
es
xor
bound
out
mov
pusha
call
neg
pushf
mov
lods
ds
jns
je
and
xchg
lahf
cmp
imul
sti
fwait
mov
int3
bound
inc
pop
push
in
cmp
cltd
dec
sti
cmp
pop
push
pop
sbb
add
leave
loope
xor
xchg
cmp
fisubs
stc
inc
imul
scas
sbb
cmp
std
xchg
cmpsb
push
pushf
cwtl
jle
dec
and
pusha
mov
pop
xor
dec
lahf
orl
dec
xchg
dec
xor
xlat
cmc
sbb
adc
cs
adc
mov
lret
inc
test
and
jae
cmp
mov
rcrb
xor
add
insb
js
scas
roll
xorl
mov
xchg
and
dec
shl
insl
jle
js
mov
into
xchg
cmpsl
pusha
xor
jno
jmp
or
testb
cmpsl
cmc
mov
dec
xor
cmp
movsl
movsl
jb
inc
mov
and
ret
push
sub
std
call
out
jno
pushf
nop
adc
mov
add
add
mov
stc
popf
scas
adc
sbb
add
cld
add
add
sbb
in
testl
inc
ret
xchg
rcrl
jnp
jno
lret
jne
rcl
pop
sub
lcall
cltd
fidivrs
adc
push
adc
test
pop
jno
mov
filds
je
xor
notl
or
jb
or
roll
popw
int
xchg
and
xchg
rcrb
jb
pop
mov
int3
xchg
movsl
icebp
aad
popa
negb
lods
in
inc
pop
lret
or
je
fnstcw
test
xchg
cmp
xor
out
ss
sub
jl
adc
xor
adc
xor
fisubs
lret
push
dec
lcall
fcomip
dec
mov
sbb
jno
int
push
lret
xor
dec
mov
fisubl
popa
inc
in
ja
nop
nop
add
dec
ja
jg
mov
out
push
sbb
cwtl
test
repz
sti
add
jmp
test
jecxz
and
jle
sarl
movsb
pop
and
adc
adc
ljmp
popa
jge
mov
fiadds
lcall
fildl
jo
ljmp
push
jmp
je
addr16
mov
movb
ficoml
and
xlat
xchg
pop
sarl
test
pusha
sub
or
xor
test
pop
popa
enter
cmp
mov
jae
pop
sbb
fcoml
iret
into
repnz
sub
addr16
add
in
xor
enter
dec
mov
sbbl
leave
adcb
int
push
mov
add
test
adc
aas
popf
insl
sahf
out
add
mov
movsb
cmpsb
jno
sbb
into
into
push
ja
mov
cmc
mov
scas
lea
sub
in
lcall
fmuls
xor
jns
sbb
jge
and
dec
leave
gs
xor
add
cld
add
add
mov
data16
out
mov
fists
sbb
icebp
xor
in
test
aam
jb
popf
hlt
sbb
xchg
cmp
push
test
add
xor
icebp
inc
pop
clc
xor
es
mov
or
in
xor
fadd
dec
stos
mov
pop
push
sub
sub
movsb
in
pushl
cltd
adc
cmp
jmp
push
xchg
xor
mov
ret
imul
lock
insl
inc
xor
clc
sbb
or
repnz
pop
push
cmp
dec
repz
mov
add
fisttpl
xor
sahf
in
cmp
pop
in
cmc
aas
imul
lods
cmp
loop
jl
ljmp
aaa
cmp
or
ret
insb
les
aas
fbstp
fiaddl
popf
call
fistl
dec
icebp
ret
nop
xor
add
test
jecxz
inc
or
insb
fisubl
popa
dec
push
mov
enter
test
xor
lods
pop
mov
pop
imul
arpl
xor
pop
lcall
mov
inc
sahf
fsubl
sub
jo
sahf
lods
and
jnp
daa
movsl
adc
sub
imul
mov
push
xchg
stos
adc
adc
inc
push
cltd
fwait
notb
and
addr16
xchg
mov
das
cmp
mov
scas
movsl
dec
insl
or
cmp
dec
insb
sar
xor
mov
and
jns
mov
dec
jo
mov
xchg
mov
xchg
xrelease
ret
sti
loopne
xchg
das
sbb
into
cmpb
jle
mov
mov
pop
push
icebp
xor
push
sbb
imul
pop
adc
mov
sti
mov
add
add
roll
pop
arpl
rorl
sub
add
cld
add
add
and
add
out
jp
mov
mov
xchg
jp
pop
pop
orl
fidivrs
cmp
insb
inc
and
mov
andl
push
dec
and
xchg
repz
xchg
ds
xchg
push
into
fistl
subl
mov
dec
not
sub
xchg
fstl
dec
sarb
mov
repnz
dec
lret
xchg
mov
mov
pop
sub
orb
mov
xchg
ror
jae
mov
adc
xor
jb
jo
sbbb
test
push
aaa
sbb
insb
mov
cmpsb
jge
pushf
dec
cmpsl
sub
lahf
sub
xor
or
in
mov
xchg
push
push
inc
in
mov
rorb
fsts
sub
mov
jge
mov
push
pop
loope
jecxz
ljmp
push
mov
adc
addl
mov
mov
mov
jns
dec
pusha
push
or
mov
pop
test
stos
imull
outsb
jl
rorl
inc
ret
xor
adcl
sarb
stos
xchg
imul
out
mov
push
jge
and
popf
lret
dec
and
mov
xchg
js
sub
mov
fdivrs
mov
add
cltd
stos
mov
xchg
loopne
jb
or
sbb
aaa
adc
ja
inc
cmp
sbb
js
xchg
cmp
jle
repnz
incl
lret
xchg
inc
jle
push
popf
mov
notb
lds
sbb
popa
sarl
inc
les
vmwrite
repnz
mov
outsl
js
sarl
call
insl
inc
fisubs
xor
sbb
pushf
cli
mov
xchg
out
cltd
sub
mov
add
add
add
adc
mov
imul
and
data16
push
dec
cmp
and
cwtl
sbb
adc
xchg
movsb
xor
inc
aas
adc
jg
lret
lods
push
push
push
push
push
mov
mov
sbb
sbb
jo
sbb
sub
es
cmpsb
mov
dec
stos
popa
loopne
in
nop
mov
push
push
nop
mov
and
and
lahf
push
out
negl
pop
fnstcw
stos
xor
mov
repz
xor
lea
mov
shrb
jne
out
dec
mov
daa
mov
or
aad
fidivrl
mov
out
lcall
add
sbb
ja
mov
pop
stc
xor
ret
push
cmpsl
push
repz
dec
sbb
outsb
fnstcw
aad
mov
in
movsb
mov
mov
xchg
xchg
jo
mov
loop
xor
adc
jmp
mov
xor
stos
ljmp
fidivrl
mov
ret
aaa
notb
xchg
push
ja
in
fstpt
mov
push
jne
sbb
mov
mov
insl
sbb
popa
aad
sub
cmp
adc
cwtl
or
push
jo
test
jle
mov
mov
pushf
xchg
call
adcb
fstl
test
adc
test
sub
xor
or
mov
das
xor
add
mov
das
push
xchg
inc
test
nop
mov
push
fildll
mov
gs
cld
xor
jne
insb
loope
test
lea
test
testb
rorl
inc
pop
mov
pop
loopne
jnp
sbb
mov
push
pusha
int
jp
imul
xlat
addl
lcall
leavew
and
xlat
fwait
test
add
cld
add
add
and
roll
mov
sbb
inc
push
xlat
gs
jnp
repnz
insb
shl
loop
dec
bnd
ja
shll
pop
xor
push
xor
inc
or
push
mov
fwait
mov
xbegin
cltd
mov
xlat
inc
lahf
pop
jge
mov
iret
cmpsl
push
insb
jo
pop
mov
ja
lds
push
push
jbe
shl
fwait
push
and
aas
jl
fistpll
and
mov
push
and
add
sub
into
mov
stos
push
xor
aad
movsb
shlb
out
jge
imul
push
sbb
outsb
inc
jl
cmp
cmp
pop
lcall
mulb
fstpl
ret
out
jmp
repnz
cmp
lahf
lods
fdivrp
imull
mov
xor
lock
out
fisttps
in
dec
pop
icebp
and
mov
or
les
cmp
sti
popf
mov
pop
or
imul
or
mov
xchg
add
sub
cltd
stc
mov
fisubs
in
adc
xchg
adc
inc
dec
leave
not
and
adc
mov
bound
insl
inc
xor
dec
loopne
add
jl
ja
inc
shlb
loopne
or
sbb
pop
popa
shl
int
sti
inc
repz
sub
mov
jae
and
pop
add
sbb
int
lcall
xchg
sbb
adc
push
gs
ffree
sub
cmp
jo
or
fdivp
cs
push
enter
sub
xchg
mov
into
shll
cltd
add
cmp
imul
les
cmp
je
xchg
jo
mov
sahf
and
lret
xlat
add
iret
xchg
loopne
icebp
xchg
movsl
jp
aam
shlb
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
pusha
jl
adc
testb
cld
add
add
cltd
push
loopne
repz
gs
push
push
popf
les
sbb
and
push
mov
dec
pop
jmp
addr16
jb
mov
jnp
pop
int3
out
jmp
ljmp
jne
or
imul
jmp
lds
fdivs
enter
and
mov
pop
in
ljmp
outsl
cmp
xor
mov
popf
clc
cltd
cmp
ret
push
std
push
ds
sbb
mov
add
xor
mov
call
out
addb
push
inc
test
push
mov
loop
js
stos
imul
or
mov
inc
rorl
outsb
loop
dec
adc
dec
popf
into
xchg
or
stos
add
fldenv
or
mov
enter
xor
jecxz
inc
pop
data16
decl
sub
push
pop
ret
sti
cltd
popa
dec
jl
mov
sub
out
daa
xchg
cli
dec
jns
xchg
cmpsl
mov
inc
xchg
mov
lret
lret
pop
or
loop
mov
shll
addr16
iret
xchg
or
lods
nop
outsb
push
shlb
fisubs
sahf
or
or
push
hlt
cmp
push
and
lahf
push
test
lret
mov
jle
or
imul
cmp
mov
scas
leave
push
loope
cbtw
dec
outsb
je
or
ficomps
jge
insb
cmp
ss
jp
jne
push
push
movsl
jle
outsb
cmp
stc
popa
icebp
and
cmc
cmp
or
adc
dec
sbb
dec
ror
push
in
push
call
je
push
sbb
sub
mov
mov
pop
and
out
ret
jg
dec
sub
daa
and
shl
inc
lahf
jno
std
cmp
stc
jl
stc
jne
add
mov
clc
add
out
add
repnz
xorb
in
push
bound
aam
inc
or
xchg
shl
xchg
lds
jne
push
neg
push
es
ficoml
push
xor
or
roll
jo
popa
and
lds
sbb
fldl
loopne
push
loop
or
mov
mov
push
sbb
ret
movsb
lcall
sub
mov
shrl
adc
add
cmpsl
dec
scas
fistpl
dec
mov
jnp
push
jle
mov
cmp
mov
push
mov
xor
stos
inc
mov
cmp
adc
gs
sbb
int
shl
inc
inc
mov
and
push
push
clc
sub
data16
or
sub
xor
mov
mov
paddb
fwait
lret
cmp
arpl
sarb
sub
sahf
fstl
in
in
pop
mov
dec
pop
test
add
arpl
and
adc
mov
daa
sub
sub
mov
jno
inc
adc
or
cli
rcl
push
or
mov
adc
xchg
push
loope
repnz
dec
push
pop
sbb
leave
dec
fldt
jge
clc
dec
into
push
icebp
jmp
mov
test
int
push
lea
mov
adc
ss
sti
sbb
fcomp
mov
movsl
sbb
loopne
or
xor
out
mov
clc
mov
dec
inc
xchg
imul
mov
adc
inc
shrl
xchg
add
dec
fidivs
call
popf
out
and
daa
fisubrs
sbb
cmpsl
mov
notb
in
pusha
dec
push
mov
mov
