push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
xor
or
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
fdivrs
xor
sar
fdiv
loope
test
cmc
sti
repz
fsubp
sti
fcmove
xchg
mov
enter
shr
cmp
cld
and
xlat
fldl2t
mov
out
ljmp
in
call
stc
xlat
loop
div
loopne
std
mov
sub
orl
rcl
repnz
lock
int
hlt
xlat
out
inc
cld
xor
xchg
into
loop
adcb
shrb
cmp
iret
stc
cmp
iret
addb
xlat
div
out
lret
xor
xor
clc
lret
cmp
faddp
movb
jmp
icebp
mov
loop
rol
xor
out
clc
xlat
in
test
in
aad
mov
ljmp
jmp
fnstenv
fsub
xor
repz
test
cmp
fiadds
int
and
loop
int
lret
jecxz
out
into
cmp
ljmp
ror
enter
mov
sub
enter
leave
neg
ljmp
out
rolb
sub
test
repnz
xor
ror
xor
ljmp
leave
loope
lret
sub
stc
jecxz
out
test
xchg
vcmppd
out
cmp
shl
filds
test
adc
shl
in
loope
divl
ss
xor
add
aas
fiadds
in
lret
mov
icebp
call
lret
cmp
in
out
rolb
repz
in
aad
test
jecxz
in
xor
in
ljmp
std
ds
xlat
repnz
mov
loopne
int3
mov
in
mov
call
ret
cld
div
iret
leave
incb
xchg
ljmp
fcmovnbe
fucom
in
lret
aad
lret
call
cmp
fcmovnb
in
ljmp
and
xchg
xor
jmp
repnz
into
idivl
fcomi
call
cli
mov
xchg
mov
into
out
jecxz
stc
std
das
ss
cmp
ret
xlat
cmp
test
mov
flds
cld
loop
mov
enter
fldl2t
int
fildl
in
fcmovnu
sub
xchg
ljmp
ljmp
int3
clc
icebp
fsubr
test
repz
call
clc
ret
mov
xchg
xor
stc
enter
adc
fdivrs
testb
loope
loop
nop
faddl
enter
das
cmp
test
hlt
sbb
xchg
jecxz
aad
lret
fldln2
repz
jmp
loop
xor
xor
lret
cmp
sti
rolb
xchg
in
mov
in
addb
xor
cmp
cs
aaa
hlt
loop
icebp
rcl
xchg
xchg
int3
or
lea
shl
lret
int3
in
call
shr
lds
jmp
or
out
mov
rol
ret
jmp
leave
repz
test
ret
cmc
in
not
aam
xlat
jmp
ret
rcr
in
enter
out
cmp
in
fildl
ds
mov
in
enter
ret
int3
shl
std
jmp
jmp
lds
repz
ljmp
repnz
sti
sti
jmp
test
ljmp
aaa
cmp
clc
fsubrp
hlt
repz
out
cmc
jecxz
loope
sbb
mov
xchg
xchg
iret
in
vpmaddwd
jmp
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
jle
movsl
add
sar
cmp
and
loope
clc
test
cli
adc
aam
clc
leave
fdivrs
hlt
out
cmp
enter
stc
out
lret
out
into
mov
jmp
loope
repz
iret
enter
aas
fnstsw
loop
rol
add
out
test
xor
xor
imull
shr
clc
int
fsubr
les
test
jecxz
rclb
lret
xor
test
stc
rcr
fdivr
icebp
cli
cmc
addb
std
nop
call
xor
cli
idiv
leave
cli
ret
fadd
jecxz
mov
ffreep
call
fsubr
jmp
rol
aam
in
hlt
ret
xchg
mov
in
enter
out
not
in
rcl
loop
lock
fildl
rorl
ljmp
int
in
cmp
into
cmp
cmp
ds
out
out
sub
or
xchg
fucomi
mov
xor
call
cli
cmp
mov
fcmovnu
mov
shl
sub
les
fsin
shlb
lock
cli
and
test
ret
jmp
jmp
jecxz
aaa
out
jecxz
fnstenv
int3
cmp
cmp
in
out
in
in
out
incl
sarb
ret
lock
out
jmp
cld
cmp
aad
icebp
xlat
jecxz
in
lret
clc
loope
nop
or
in
ljmp
dec
cmp
lret
aam
fcmovbe
mov
mov
jecxz
lea
repnz
loopne
fld1
jecxz
cld
aad
repz
cmp
repz
out
fst
int3
loop
cli
addl
ljmp
incl
hlt
fsubp
mov
flds
out
ljmp
jmp
rcr
cmp
icebp
div
in
hlt
jmp
loope
aam
repz
cli
mov
in
jmp
and
icebp
fldcw
in
icebp
xlat
fcmove
in
out
shl
loop
out
ret
shl
aas
int3
lret
jmp
roll
out
aaa
jmp
out
fnop
std
icebp
ljmp
mov
test
test
lock
into
repz
fsubr
cmp
aaa
shr
loop
rcr
fdivp
aad
jmp
leave
incl
out
divb
ret
in
lret
fdiv
int3
loope
sub
clc
icebp
out
fldl
mov
not
out
aad
sar
aaa
iret
aam
rcr
rol
rol
fmull
mov
mov
mov
jecxz
imul
xlat
cmc
repz
repnz
mov
sti
cli
fmulp
fcmove
in
hlt
rcl
xor
repnz
aam
idiv
loop,pt
aad
filds
jecxz
flds
xchg
leave
ret
cmp
aad
push
shr
not
out
repnz
rcr
aas
sub
mov
jmp
mul
int3
cmp
cmp
sti
stc
xor
sar
fdiv
xchg
lret
out
loop
out
cmp
cli
jmp
loope
fsubr
rcr
in
loop
fildl
std
cmp
rcl
repz
icebp
xlat
xor
rcr
shl
fadd
enter
testl
lock
call
xor
rcr
cmp
sub
iret
ret
stc
or
ffree
mov
aam
xor
int
sar
cmp
cli
in
out
fincstp
lret
loope
jmp
aam
shr
xor
cmp
cmp
loopne
clc
loopne
rol
test
shl
loopne
mov
mov
das
loop
cmp
fdivrl
jmp
fstpt
ds
mov
clc
out
in
mov
icebp
enter
lds
in
xorl
ret
aam
fnstsw
aas
stc
ljmp
shll
fxam
out
aad
xor
in
xlat
fistpll
std
cld
test
mov
int3
mov
mov
mov
jmp
hlt
ss
sti
ds
loopne
test
aad
out
mov
in
jecxz
out
in
lret
lret
rol
cmp
loope
rol
fld
loop
out
mov
xchg
loopne
mov
shl
int3
loope
aam
leave
call
cmp
cmp
repz
int3
fildl
mov
xor
out
and
add
mov
fadd
leave
int
bound
inc
aad
cmp
jle
add
fdivr
std
fdivr
stc
lret
fmul
xchg
nop
out
lock
jecxz
in
ret
fmul
out
frndint
addl
in
testb
icebp
in
das
ret
cmc
fcmovne
fcmovbe
xlat
icebp
in
cmp
add
ret
and
test
test
neg
fcmovnbe
xlat
cmp
cmp
adc
loop
ljmp
repnz
in
out
xor
fldpi
repnz
clc
in
out
frstpm(287
lock
mov
mov
in
cmc
into
les
lret
sar
fscale
aas
rcr
fcmovb
mov
xchg
xor
icebp
lock
clc
mov
xor
cmp
cmp
cmp
cmc
lret
clc
ret
orl
aam
repnz
lret
repz
aas
int3
sti
lds
in
loope
xchg
mov
xchg
ljmp
out
cmp
aaa
aad
loope
jecxz
dec
in
testl
loope
cmp
leave
repnz
jmp
enter
lret
rcll
icebp
shr
enter
in
fcmovb
icebp
cmpb
sar
lret
sar
out
out
decl
cmc
cmp
out
cmp
icebp
cmp
cmp
cmp
fiadds
shl
enter
iret
call
loope
idiv
iret
cld
test
rcl
call
out
jecxz
xchg
xor
hlt
lret
cmp
fnstcw
div
fcmovnb
roll
out
xchg
in
in
std
mov
mov
das
cmp
ss
cli
cli
xor
test
hlt
test
leave
lret
roll
clc
jmp
out
fcmovnbe
rol
stc
mov
in
mov
jmp
sub
fimuls
rcl
int
idivl
icebp
sti
aaa
cmp
cmp
loope
ror
fadd
loope
int3
in
lret
jmp
xchg
testb
sti
ljmp
idiv
aas
iret
loope
hlt
in
call
std
mov
repnz
cli
sti
shl
cmp
cli
ret
test
sti
mov
mov
sar
fdivrp
leave
out
aad
into
aad
loopne
out
out
repnz
fcmovnbe
mov
out
jmp
mov
mov
xchg
inc
int
shr
aam
lret
shr
ds
ds
loope
jmp
int3
xchg
lret
rcl
ror
repnz
shll
icebp
repz
out
addb
in
jmp
out
icebp
das
xor
ljmp
jecxz
clc
test
cld
fmulp
fcmovne
fcmovne
repz
out
out
into
sar
jmp
cmc
cmp
aad
cli
iret
repz
decl
jmp
and
iret
icebp
ror
cld
fxch
out
lret
repz
loop
roll
loop
filds
int3
lret
cmp
iret
ljmp
aad
cld
fst
jmp
lret
cli
fmulp
nop
std
call
icebp
in
out
repz
repz
hlt
loopne
xlat
cmc
shl
rolb
orb
aam
lret
stc
xlat
cld
cld
rol
shl
icebp
loope
loop
mov
jecxz
fcmove
loop
iret
call
in
jmp
shl
out
cmp
loop
icebp
std
test
fisttpll
fucom
sarl
xlat
ror
ss
jmp
sti
sbb
xor
idiv
mov
xchg
and
jmp
shl
clc
rcr
repnz
idivl
cmc
xchg
fistl
out
repz
repnz
cmp
cmp
mul
les
roll
adc
in
divb
aaa
loope
clc
call
in
in
fistpll
cli
stc
test
cld
movb
nop
mov
xor
out
ljmp
add
xchg
fucomip
in
into
xor
xor
not
cli
out
rcl
iret
loope
enter
lret
fmuls
out
fsqrt
cmp
xor
into
jmp
rcl
cmp
cld
clc
not
lret
in
xchg
mov
loope
repnz
stc
ror
jmp
ret
rcl
fadds
aam
in
test
mov
loop
xchg
test
fucomp
rcl
ret
rolb
inc
cld
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
sbb
jle
movsl
add
in
out
loope
iret
ror
hlt
jmp
aad
jmp
int
test
test
out
loop
cli
testl
aad
cmp
repz
in
aas
lock
repnz
adc
jmp
loop
xor
in
out
fidivrl
fst
stc
idiv
cmc
ror
clc
xchg
loop
ret
in
mul
and
jmp
jmp
and
sar
clc
fmuls
sti
leave
int
ror
lret
lret
shr
leave
hlt
xor
loope
lock
fsub
mov
enter
in
stc
call
hlt
loop
ror
ss
fdiv
fadd
shl
ret
enter
leave
clc
fucomi
jmp
out
ss
fcmovnbe
aam
leave
sarb
rcl
ret
repz
test
enter
ljmp
ret
ljmp
xlat
cmc
loopne
icebp
push
fdivr
sbb
call
cld
in
xchg
in
mul
cmp
cmp
loope
rcl
xor
mov
fsub
jecxz
test
iret
int
imul
lret
fdiv
lret
sti
icebp
cmp
cmc
xlat
shr
loop
loopne
cld
rclb
into
aaa
xor
in
shl
std
shl
ds
out
call
leave
xchg
into
in
mov
loope
aad
into
jmp
aaa
aas
dec
cmc
test
fcmovnb
out
cmc
out
jmp
loop
fcomp
xor
in
repnz
cli
ror
cmp
in
add
jmp
les
hlt
fldl
out
cmp
cmp
loope
cmpb
ret
fmull
repz
sub
into
xor
in
repnz
aam
rcr
clc
loope
vpinsrw
aad
stc
int3
cli
in
xor
icebp
cmp
aam
xlat
loop
shl
mov
out
nop
mov
test
lret
sti
das
roll
aad
out
cmp
cmc
clc
iret
call
hlt
ror
sub
fldlg2
fucomip
fabs
fsubp
xlat
aad
in
loope
mov
lock
xchg
leave
repnz
aaa
f2xm1
int3
int
jecxz
iret
fsubr
hlt
fsubr
fadd
fsubrp
lret
xchg
hlt
shl
ror
div
int3
cmp
cmp
fisttps
jecxz
cld
sub
cmc
repnz
call
idiv
lret
cmp
xchg
loopne
xchg
aam
jmp
call
cmc
xlat
test
idiv
rcr
cmp
loop
sub
out
xlat
in
fadds
xchg
xchg
into
repnz
out
cmpb
aas
fmul
test
mov
fucomip
int3
leave
into
std
cld
jmp
ret
in
into
cmc
enter
jmp
fcmovbe
sti
div
neg
loopne
sub
rclb
xor
out
cli
repnz
xlat
sti
lock
sti
ret
dec
into
stc
lret
mov
test
sarl
cld
repz
rcr
fiadds
adc
enter
iret
mov
jmp
ret
into
jmp
cmp
lret
fcmovnu
lock
adc
addl
lret
sti
ljmp
idivb
aad
fabs
sti
std
loopne
shl
cli
fimull
in
fildl
loop
cmc
sar
out
iret
fyl2xp1
ret
repnz
std
out
loop
xchg
and
xchg
repnz
in
cmp
lret
cmc
int
repnz
and
idiv
enter
in
adcb
xor
flds
in
fdivr
loop
out
in
in
mov
lret
into
enter
aam
ljmp
call
fstp
mov
call
repnz
rcl
lret
not
cld
rcl
hlt
fcmovnu
loopne
xlat
loopne
fimull
out
das
ret
hlt
xor
repnz
fcomp
mov
add
fisttps
fdivr
mov
xor
ljmp
add
jecxz
mov
into
dec
icebp
roll
lock
fst
jmp
out
in
ret
in
mov
out
xchg
out
cld
not
enter
repnz
fadds
jmp
cld
int3
ror
jmp
jmp
int3
rcl
aad
int3
call
or
jle
add
mov
xor
lds
aaa
out
rcl
out
mul
roll
jmp
xchg
addl
out
out
aas
fcmovnbe
hlt
int
and
hlt
mov
fdivr
lret
push
fsubrp
in
in
xor
into
fcomip
in
cli
into
fiadds
stc
fimull
enter
xchg
out
out
lret
std
stc
aam
ds
repz
cld
fcmovb
filds
or
shl
repz
lock
call
in
cmc
hlt
call
fxch
xor
fcoml
out
xor
int3
sar
cld
not
jmp
loopne
test
aas
fst
add
in
int
imul
cmc
cmp
cmp
sarl
in
idivl
xor
clc
jecxz
aam
fld
mov
cli
neg
iret
push
mov
int
sub
cmc
sti
fsubr
repz
rol
cli
jmp
in
xchg
test
jmp
fsubr
mov
out
das
int
stc
hlt
cmp
shl
out
test
in
iret
fdivr
xchg
int3
ljmp
cld
vpsubsw
clc
xor
aas
sar
test
aad
repz
sti
out
jmp
fcoml
aas
xlat
iret
ret
iret
cmp
idivl
flds
out
cmp
ret
cmp
cli
mov
icebp
xchg
shl
xor
aas
cmp
sti
loop
test
addb
icebp
test
divb
sarb
ds
cmp
leave
out
in
loope
leave
mov
stc
jmp
cmp
shr
addl
hlt
addl
lock
into
iret
fsubrs
jmp
in
fcmove
jecxz
addl
xlat
jecxz
sti
in
shl
xchg
repz
out
ljmp
out
rcr
ret
leave
rcl
jecxz
idiv
shl
cli
test
xchg
icebp
test
rcl
out
aas
out
lock
iret
cli
ret
lret
fsub
out
int
jecxz
icebp
aaa
xor
sti
repnz
inc
cmp
cmp
aad
stc
cli
loope
out
jmp
loopne
loope
jmp
das
out
cs
xor
iret
leave
shl
ret
ljmp
repnz
std
mov
ret
lret
cmp
aam
ret
cmc
fcmovnb
loopne
leave
xchg
nop
in
out
xor
aam
cmp
fidivrs
out
out
mov
xor
enter
out
out
in
xor
fmul
cmp
int3
in
lock
ret
mov
jmp
xlat
test
xchg
int3
jmp
out
leave
stc
xor
cmc
fdivp
jecxz
shl
fildl
ficoms
ret
out
std
in
icebp
cmp
cld
fnstsw
repz
std
fcmovu
loop
mov
orl
xor
cmp
lret
cld
xor
icebp
sar
ret
repnz
rcl
aad
aad
out
and
clc
aad
lret
lret
iret
out
loope
ds
mul
flds
or
out
xor
out
shr
adc
cmp
repnz
aam
jmp
cld
call
test
loop
int
in
sar
xlat
fadd
repnz
out
and
loopne
leave
out
lret
int
fldz
hlt
lret
sbb
icebp
cmc
xlat
xor
sti
xlat
into
repz
xchg
xchg
int
xor
sti
cmp
fcmove
rcr
cmc
sti
loope
test
mov
xchg
mov
mov
in
not
xlat
sti
fcomi
incl
in
ret
xchg
loop
cli
fucomp
shl
roll
repnz
lret
out
int3
cli
cmp
iret
cld
rol
mov
mov
test
loopne
jmp
in
iret
fucomp
cmp
idiv
std
cli
ds
fsub
mov
xchg
std
out
lret
neg
in
test
dec
repz
test
clc
sar
stc
decl
ror
aad
stc
std
iret
shl
cmp
into
loop
loopne
mov
out
shr
jmp
in
in
xor
sar
icebp
ss
loopne
ds
aas
clc
jecxz
ret
leave
out
loopne
mov
nop
xchg
icebp
clc
ret
in
aam
cmc
out
clc
cmc
loopne
fucom
ret
cld
repz
mov
xchg
xchg
mov
icebp
movl
jmp
int3
rcl
fstp
fldt
repnz
jb
adc
jle
into
ss
cmp
and
loope
cmc
lock
int
repnz
out
in
xor
enter
leave
repnz
out
out
xchg
in
cli
notb
jecxz
xchg
lret
icebp
aaa
into
rcr
out
shl
cmp
cmc
rcl
hlt
jecxz
adc
call
mov
cmp
int
cld
lret
fdivp
aad
fdivp
clc
fucomi
sarb
jmp
fildl
into
xor
repz
cmp
cmp
cli
repnz
fcmovu
aad
test
lret
in
std
lret
in
iret
xor
sub
sti
aad
int3
jmp
test
fxtract
ret
call
fimuls
aam
enter
cmp
ds
cld
clc
lret
cmp
rol
cmp
mov
fildl
icebp
aad
in
aas
cmp
ret
shl
in
lret
mov
std
decl
jecxz
clc
stc
jecxz
sar
ror
rcr
loop
std
sti
std
aad
in
loopne
fmull
loope
xor
aam
jmp
xlat
clc
xchg
mov
fiadds
in
call
icebp
xor
lock
enter
cmp
mul
aad
mov
sti
add
cli
leave
loop
out
in
shr
lret
cmc
cmp
dec
lret
fiadds
fst
aad
xchg
xchg
adc
mov
das
xor
cmp
leave
shl
hlt
stc
cmp
ret
lds
jecxz
enter
lret
xchg
into
shl
clc
in
rcl
fyl2x
std
jmp
cmp
loop
jmp
int3
xchg
iret
in
repz
in
hlt
ss
jecxz
cmp
hlt
test
ret
aas
shl
test
fst
dec
int
in
xchg
jmp
xlat
cmc
rcr
leave
out
aaa
repnz
int
movb
or
loope
ljmp
lret
cmp
aaa
loop
in
shl
out
mov
div
fucomp
lock
xchg
lret
cmp
out
shr
neg
aad
in
add
in
xchg
jmp
fucomi
in
xchg
in
test
out
xor
jmp
aad
xlat
loopne
sub
jecxz
shl
in
loop
out
clc
xchg
das
shl
sar
aad
fdivr
rolb
f2xm1
out
orl
fldl
test
cmp
fprem
loop
out
cmp
in
rol
in
lock
mov
repnz
xlat
clc
fcomi
in
std
cmp
ds
aam
lret
in
test
ljmp
ss
icebp
lret
call
cld
ret
rolb
ret
mov
jecxz
fadd
addl
lret
fdiv
xlat
int
std
hlt
jmp
sub
mov
les
repz
cmp
sar
lret
loop
test
ffree
xor
call
fcmove
cmp
in
cmpb
cli
fadd
in
fildl
out
cld
fmull
in
stc
das
xor
ret
into
test
fprem1
cld
incb
mov
mov
fdivrs
aam
lock
fadd
cmp
sti
clc
jecxz
sbb
in
out
mov
repz
or
ss
lock
call
stc
sti
ds
out
loope
neg
loopne
leave
mov
enter
xchg
repz
cmp
cmp
sar
cmp
hlt
fidivrs
test
ret
xchg
mov
repz
shl
ljmp
loop
cmp
cmc
and
out
lock
loope
loopne
call
sti
in
jmp
cmp
cmp
rcl
repz
les
into
int3
shl
repnz
into
in
ljmp
fdivrs
cmp
in
xchg
cld
sub
fdivs
das
in
aam
aaa
out
repnz
fst
rol
xchg
stc
sti
fimull
cmc
ljmp
dec
fdivr
shr
icebp
fdiv
fcmovu
fdivr
fimuls
mov
shr
leave
shr
call
mul
call
fsubr
dec
loop
fst
loop
or
jmp
out
ror
out
jmp
lret
rcl
aad
jecxz
ret
lds
mov
int3
in
enter
ret
fdivrl
sarl
inc
loopne
inc
in
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
cltd
ljmp
fsubrs
jle
movsl
add
adc
in
loope
les
mov
decl
stc
in
xor
aas
jmp
in
in
push
fucomip
cli
fdivr
cli
lock
in
ss
cmp
out
cmp
rcr
loop
shl
sar
in
loopne
jmp
fadds
lea
fst
sar
in
fcomip
ret
test
fisttpl
sti
in
in
into
into
jecxz
sub
ror
iret
fucomip
xlat
roll
aam
out
stc
test
div
lret
les
lret
fadd
shlb
cmp
int
aas
lds
mov
cld
mov
out
mov
fldl
aam
shl
lret
xor
in
sti
test
fmuls
mov
std
in
out
mov
test
in
fdivrl
int
into
xor
xchg
mov
test
test
repnz
cmp
aas
sbb
in
rcr
cmc
in
lds
rorl
shl
enter
jecxz
out
cmc
loope
rcr
out
ror
adc
std
xlat
ret
shr
stc
out
rcr
std
aam
xor
sar
lret
in
enter
cmp
enter
lret
aas
iret
cmc
into
fsubp
cli
cmc
sar
sti
aad
mov
xchg
call
cmp
cli
int3
in
ljmp
ret
leave
test
lret
ljmp
out
shr
fidivl
test
fdivrl
aas
cmp
jmp
mul
or
xchg
ss
jmp
xor
aam
ds
clc
sarb
fimull
int3
xchg
loope
test
jecxz
vpsllw
int3
rcr
out
loope
test
stc
cli
addb
icebp
jecxz
ljmp
imul
int
in
fst
fdiv
sar
in
faddl
mov
in
mov
aaa
aad
aas
in
rcl
icebp
and
fcmovb
sti
cmc
jmp
xchg
lock
leave
shll
cmc
rol
int
test
aas
jecxz
test
mov
jecxz
dec
into
ljmp
into
aad
cli
icebp
cmp
sbb
not
in
xchg
jmp
in
repz
in
clc
xor
ljmp
adc
sti
cld
aad
repz
repnz
mov
in
in
repnz
in
leave
sarl
xor
aaa
xor
iret
into
sar
jmp
rorl
mov
jmp
rcr
jmp
cmp
in
in
test
rorb
mov
out
mov
int3
xor
in
cmp
aaa
rcl
aad
xlat
call
in
stc
lret
iret
fldl
out
cmp
rcl
clc
fld
hlt
ret
aad
call
into
loop
xchg
out
out
cmp
leave
in
cmc
test
add
not
sti
sub
clc
iret
lock
out
fsubp
sub
repz
cmp
cli
aam
clc
out
hlt
in
aad
mov
leave
int3
mov
stc
aaa
in
lret
out
loope
fdivrs
aad
fcmovne
std
out
int
roll
jmp
in
ds
int3
fstp
mov
mov
sti
fsubr
fcmove
jmp
cmc
cli
lret
cmp
repz
stc
ret
aad
xchg
ljmp
int3
in
shlb
aam
xor
rcr
into
out
call
xlat
mov
jmp
call
xchg
lock
in
cmp
aad
enter
iret
lock
sti
aam
sti
mov
out
lret
fldpi
cmp
shr
out
fadd
repz
lret
cld
lea
int
repz
xor
shl
loope
int3
into
xchg
cli
adc
call
cmp
lock
das
cmp
out
test
fucomp
sar
movb
loopne
mov
out
rclb
cmp
loopne
shl
rolb
in
xchg
in
fcmovnb
and
icebp
fnstcw
cmp
lock
rcl
ror
aaa
sti
movl
fcoml
cmp
fcomi
neg
neg
hlt
adc
mov
aas
ret
aad
aad
mov
jbe
push
jle
movsl
add
mov
aad
div
out
loope
mov
clc
xor
fptan
aad
icebp
lret
fiadds
hlt
in
mov
fsubrp
in
out
xor
call
shr
aad
lock
ror
xor
cmp
aad
jmp
lret
mov
loop
ret
shr
repz
neg
xor
int
repnz
icebp
cmc
xchg
xchg
out
cmc
loope
xor
cmp
ss
loope
int3
int
cld
cmp
jecxz
loope
enter
int3
repnz
loop
xchg
xor
sub
repnz
cmp
aaa
hlt
jmp
mul
into
rcr
shl
orb
repz
sub
out
fcmovu
icebp
clc
cld
std
test
fcmovnbe
shl
test
rorb
xor
cmp
out
xor
fdivrp
repz
aam
testl
and
lret
cmc
sarl
fcmovne
ds
cmp
repz
testl
in
fcmovne
lret
out
fucomip
rcr
cmp
in
shr
aad
shl
loope
idiv
xlat
cmp
xchg
jmp
jecxz
cmc
in
fadd
out
cmp
jmp
enter
cmp
call
fucomi
mov
call
cmp
cld
cmp
repz
cmp
xor
rol
jmp
fxch
iret
cld
roll
iret
rol
call
stc
addl
in
clc
mov
int3
in
xchg
shlb
cli
in
leave
cmp
out
aam
in
idiv
std
jmp
ret
xchg
ret
aam
xor
sub
shl
add
div
int
xchg
int3
out
jecxz
repnz
out
fsubr
sar
cli
ds
aad
ret
inc
aad
mov
lret
hlt
cmc
int
jmp
out
out
out
iret
dec
std
rcr
fucom
loop
testb
mov
int
cld
xor
cld
out
hlt
lret
fstp
cli
jmp
incb
xor
xor
fadd
idivb
fcmovbe
cmp
lds
ds
mov
nop
icebp
lret
fsubr
rcl
sar
clc
div
hlt
cmp
fdiv
rcr
roll
ljmp
sarl
in
call
fsubr
fcomi
std
sbb
mov
xchg
in
mul
lret
lret
hlt
jmp
neg
xor
aam
sbb
iret
shl
aad
fisttpll
xchg
aaa
in
out
jmp
lret
shr
out
iret
addb
xchg
test
xchg
xor
out
out
xor
lock
rcr
rcl
hlt
in
in
loop
fildl
enter
stc
xor
stc
aas
aam
les
xchg
lret
addb
shl
in
aad
in
hlt
not
leave
leave
shl
shl
lock
sti
out
aam
out
mov
rcl
icebp
out
jmp
test
leave
lret
cmp
repz
icebp
cli
cld
aad
mov
in
xchg
mov
call
fcmovbe
fxam
out
clc
into
fadd
cmp
clc
cmp
cld
loopne
mov
lock
mov
call
fdiv
loopne,pt
aam
in
xchg
fsubrp
rcr
or
addl
in
cmp
not
xor
shr
fiaddl
xchg
in
add
fmulp
hlt
addb
jmp
iret
sti
fsubr
fidivrs
loope
iret
stc
clc
std
shl
loop
loopne
fsubr
repnz
out
xor
into
ss
repz
neg
adc
stc
jmp
out
loop
xchg
fsubrp
mov
xlat
rol
out
fucom
out
cmp
lock
adc
jecxz
icebp
call
out
call
int
ss
sub
cmp
aaa
ss
stc
loop
rcr
cli
fdivrp
out
xchg
cmp
shr
lock
iret
cmp
sub
aas
hlt
loope
fiaddl
iret
jecxz
test
mov
jmp
vpaddq
div
cmp
sbb
ret
in
xabort
enter
in
filds
call
leave
call
mul
fdivr
test
idiv
mov
mov
out
lock
leave
fcmovne
iret
call
mul
rcl
ret
lret
les
add
add
rcr
fcmovnu
mov
jbe
and
movsl
add
loop
jmp
repnz
lock
cld
fucomip
cmp
into
and
clc
fmull
orl
icebp
icebp
hlt
xor
test
cmp
icebp
ret
in
sti
xchg
aad
clc
fstl
jmp
out
clc
xor
lret
in
std
in
loopne
fiaddl
cmc
jmp
test
movl
sarl
in
jmp
cmc
leave
cmpb
out
sbb
clc
fcmovnu
adcl
lret
not
rcl
fcmovnu
cmp
loope
aaa
loopne
shl
cmp
cld
out
lea
lret
aam
cmp
ljmp
stc
aas
roll
mov
mov
mov
ret
call
aaa
cmp
loope
jecxz
loope
cli
icebp
or
xlat
leave
test
mov
call
out
std
cmp
cmp
push
fmul
loope
out
fcoms
out
shlb
lret
enter
sti
out
cmp
fiadds
addb
leave
les
fsub
in
fdivr
leave
out
hlt
sti
iret
ds
aam
rcl
xchg
fcmove
loopne
in
jecxz
fucom
iret
iret
xchg
not
out
aad
cmp
icebp
loopne
cmp
jecxz
out
icebp
lock
shl
loope
ljmp
mov
shlb
loopne
in
cmp
loop
std
lret
int3
adcb
shr
out
sarl
into
icebp
fcmovne
cli
sub
fcmovu
leave
loop
and
test
mov
icebp
leave
lret
stc
sar
jmp
cmc
sti
jmp
fcmove
hlt
aas
imul
jecxz
fxam
lret
iret
nop
xchg
jmp
fdivrs
aam
in
cmp
int
out
lock
sarl
repz
in
mov
shl
xor
enter
std
fucom
cld
test
incb
jmp
call
lock
in
iret
in
repz
cmp
addl
mov
fucomip
out
sar
mov
shr
clc
xor
stc
sti
int3
in
sarb
fcmovb
cli
lret
sti
loopne
filds
xor
shr
aam
fcomi
cmp
aad
jecxz
faddl
sti
in
call
xor
cli
shl
cmp
hlt
cmp
out
lds
in
jecxz
addl
cmp
ss
cld
out
cmp
ds
fmulp
mov
ljmp
ljmp
fidivrs
cmp
fadds
cli
repz
in
out
call
leave
xor
fistpll
repz
les
hlt
mov
nop
in
xor
in
fnstcw
loope
repz
icebp
sub
xlat
cmc
mov
sti
mov
out
icebp
cmp
out
xor
shr
int
int3
ss
mul
mov
sub
loopne
loope
mov
int
in
not
shr
std
imul
xor
add
xor
cld
ljmp
sti
out
xchg
call
jmp
xlat
icebp
fucomip
fnop
out
xlat
aam
roll
nop
xchg
in
repz
in
xlat
ljmp
aam
cmp
fadd
call
adc
loop
test
xor
xlat
cli
out
stc
enter
aam
icebp
and
flds
into
fisttpll
in
jecxz
cmp
aaa
cmp
cld
fnstcw
in
cli
sti
jmp
dec
fistl
loope
imul
cmp
cmc
cmp
xor
rcr
stc
add
ljmp
rorb
das
imul
aaa
int3
cmp
not
fcom
iret
lock
test
loope
decl
iret
fcomi
imul
out
sti
jmp
jecxz
int
hlt
shl
in
mov
jmp
stc
mov
mov
leave
call
fneni(8087
in
inc
xchg
hlt
cmp
in
call
loopne
int3
mov
hlt
in
cld
idiv
cmp
adc
in
rcr
jmp
testb
jmp
das
leave
ret
int3
cmp
jmp
ret
hlt
shl
cmp
xchg
loopne
iret
out
xchg
mov
std
out
ret
lret
div
ljmp
fsubr
in
repz
enter
loope
int
in
fimuls
or
mov
aad
leave
aad
fcmovnu
sub
cmp
pop
daa
jle
movsl
add
xchg
not
sub
cmp
in
shr
idivb
mul
jecxz
test
loope
enter
iret
xchg
shll
out
out
iret
hlt
shl
hlt
neg
sbb
lds
in
xchg
shr
call
cmp
fcmovnbe
fdiv
enter
addl
xchg
xlat
in
aam
call
cmp
adc
faddl
sbb
xchg
loop
lret
cmp
neg
cmp
fmul
out
repz
fucomi
xchg
clc
stc
and
xchg
loope
fdivs
ret
iret
cmp
test
neg
incb
cld
jmp
xchg
lea
repnz
ljmp
in
aam
shl
stc
aas
ret
idivb
out
in
mov
lds
jmp
jmp
in
fcmovbe
aad
fcmovnu
aas
icebp
std
in
out
aad
sti
call
ljmp
enter
cmc
ds
lret
jecxz
call
in
ret
loop
in
in
fmull
cs
ljmp
fcomp
out
stc
iret
fadds
lret
fcmovne
in
out
addb
out
repz
jmp
repz
enter
mul
enter
sub
shr
stc
aad
jmp
ds
out
aam
aas
ret
stc
in
mov
jmp
clc
into
enter
aam
cmp
loope
repnz
and
sbb
clc
out
cld
lret
xchg
std
jmp
ljmp
icebp
cmp
out
mov
xchg
stc
stc
std
int3
loope
xchg
shl
jmp
jmp
aam
fstpt
clc
rcr
aad
sti
sti
fdivp
sub
testb
call
sarl
cmc
cli
out
fdiv
cli
out
addl
jecxz
hlt
ret
fdivr
cmp
in
fsub
enter
int3
mov
icebp
shr
out
in
xor
in
cmp
jmp
jecxz
loope
sti
repz
testb
mov
les
jmp
repnz
aaa
icebp
hlt
rolb
sar
addb
leave
xor
das
fmulp
div
repnz
cmp
leave
aam
div
lea
sub
out
ljmp
aas
fsubr
fcmovnu
rolb
sti
in
in
in
fucom
xchg
lret
shl
sar
ror
fnstcw
fptan
sar
loope
rol
cmp
test
nop
and
out
xor
cmp
aaa
cmp
xlat
faddp
loopne
icebp
ret
cmp
cli
mov
leave
call
ret
in
out
fildl
in
lea
jmp
cmp
ret
clc
cld
cmp
loop
clc
cmp
ffreep
repnz
cmpl
fcmovne
ljmp
out
ljmp
jecxz
aam
call
cmp
fcmovu
fnstsw
sti
std
loop
jmp
in
xlat
xor
lret
cmc
shl
idiv
aas
in
aas
cli
cmp
jmp
xchg
out
out
xchg
cmc
lret
in
fucomi
cmc
shr
cmp
shr
cmc
call
sti
sub
std
leave
int
jmp
sar
xor
call
out
aas
in
aas
loope
cmc
ret
clc
jmp
icebp
test
repz
aaa
loop
lret
loop
test
loopne
cld
out
int3
leave
xchg
in
test
shl
rol
rcl
jmp
and
loop
loope
into
repz
iret
fbstp
shl
xor
cmp
leave
sarl
out
cmp
xchg
testl
shl
out
divb
lret
repz
sbb
out
cld
cld
add
aad
leave
in
shr
xchg
ror
sti
repnz
lock
lret
icebp
jecxz
xlat
stc
hlt
test
into
std
into
call
in
out
cmc
std
out
icebp
hlt
in
lret
not
out
enter
sti
mov
mov
xchg
rorb
lret
stc
cmp
iret
ret
into
out
std
cmp
out
test
xchg
hlt
enter
out
cld
cmpb
out
shl
loopne
test
sub
iret
xor
cmc
fsubr
in
sti
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fisttpl
fiaddl
jle
xor
aad
jmp
sarb
xlat
xchg
jecxz
xchg
int3
lret
jmp
out
fldz
cmp
fmul
cmp
enter
enter
fldlg2
out
into
xor
into
shl
jecxz
hlt
ljmp
loopne
rol
ror
ret
out
sub
icebp
mov
xor
cmc
xlat
into
xor
std
inc
in
std
repz
enter
fildl
shlb
std
cmp
shl
rol
and
xchg
std
ljmp
shl
xor
int3
ljmp
shl
out
ret
fldl2t
in
in
stc
xchg
sti
adcl
cmc
out
cli
loopne
cmp
sti
cmp
mov
stc
cld
call
jmp
fdivrs
aam
cmp
xor
testb
ret
out
test
jecxz
fucomip
xchg
out
mov
ljmp
iret
aam
clc
loope,pt
into
loopne
stc
addb
out
ljmp
aad
hlt
rcl
jmp
out
int3
cmp
xchg
cmp
idiv
jmp
xchg
out
shr
cmp
cmp
in
and
ret
ret
fimull
ljmp
cmp
out
fisubrl
cmp
aad
in
aad
xlat
in
ffree
mov
fiadds
int3
ror
cmc
sub
rcr
ror
xlat
ds
ret
in
mov
in
fiadds
jmp
out
xor
int3
cmc
fcmovbe
lock
rcr
icebp
in
loopne
loope
std
int3
cli
loopne
xchg
out
int
shr
leave
call
shll
out
cmp
incl
hlt
xchg
lret
rclb
jmp
xor
cmp
or
add
stc
xchg
call
mov
mov
in
mov
das
in
fldlg2
ffree
xor
cmp
fldl
call
enter
cld
xchg
xchg
xchg
int3
mul
xor
cmp
test
cmc
add
jmp
out
nop
test
lret
xor
cmp
call
jmp
rol
aad
out
mov
repnz
mov
xor
cli
jmp
jmp
fmulp
sti
fcmovb
ss
clc
out
jecxz
loope
leave
cli
iret
in
or
jecxz
shr
xlat
shlb
neg
sar
in
call
mov
fdivrp
dec
in
mov
mov
and
test
xor
into
in
aam
sti
mul
rcr
loop
sti
mov
mov
out
cld
in
out
mov
fcom
int3
in
xor
in
clc
stc
aad
icebp
sub
rol
mov
lret
testl
loop
icebp
stc
cmp
rolb
enter
decb
fcmovnbe
fsubrp
shll
in
aaa
fdivr
fcmove
rol
int
hlt
std
rolb
clc
in
shr
shl
out
ss
sub
not
in
addl
ds
int
xchg
test
out
call
std
cmp
aam
fst
out
cmp
aas
mov
xchg
nop
aaa
aaa
in
in
fcmovnbe
cld
clc
out
cld
cli
filds
fdivrp
call
sti
loopne
in
cmc
iret
in
call
in
xlat
sar
aam
add
mov
in
lret
les
testb
cmp
fcmovne
call
addb
fisttpll
in
loope
fcom
ss
xlat
div
cmp
add
repnz
fld1
xchg
call
icebp
xchg
in
jecxz
jmp
aam
shl
int3
repz
test
sti
call
mov
mov
xchg
rorl
sar
fcmovu
out
out
lret
or
clc
incb
std
dec
fildl
rcl
out
cmp
fdivl
ss
icebp
fucom
out
cmc
shl
xchg
ret
loop
lret
mov
ljmp
fsubr
rcr
out
icebp
cmp
xor
fdivrl
dec
in
orl
fdivrl
fmulp
aam
push
shr
ror
cmp
xchg
cmp
jmp
loopne
sub
out
fyl2xp1
ljmp
loopne
ret
mov
sti
test
mov
lock
jmp
repz
aad
shr
enter
out
clc
into
into
xor
add
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
push
adc
inc
sub
jle
movsl
add
ret
loop
ljmp
jmp
ret
div
int3
int3
jmp
lock
out
fistpll
icebp
rcr
loop
lret
jmp
nop
test
fsub
shll
lret
ljmp
ret
mov
mov
addb
in
xor
sti
in
ss
cmc
sar
cmp
ret
fucom
ret
in
int
out
clc
fxch
call
xor
sarb
rol
cld
shl
sarl
rcl
in
fdivr
int3
cld
loop
sti
or
xchg
hlt
shll
das
jmp
idivb
loopne
in
in
jecxz
call
push
jmp
int
iret
mov
shl
shr
aas
std
out
std
jecxz
iret
out
fiaddl
test
addb
cs
jecxz
cli
ljmp
add
into
mov
idiv
decb
out
call
rol
in
in
enter
not
not
sarl
cmc
call
std
mov
jmp
iret
ret
sti
lret
enter
loope
int
ret
ror
fmuls
ljmp
imul
out
cmp
xlat
stc
lock
jecxz
xchg
fld
loope
inc
int
mov
sbb
aam
out
idivl
cli
cmp
shl
cli
icebp
cmc
ret
loope
cld
add
call
in
fidivrl
into
int3
aad
loop
repz
mov
repnz
test
into
fdivrs
shl
cld
ljmp
inc
in
xchg
int3
in
sbb
mov
nop
loope
xor
lock
xor
clc
cld
cld
icebp
fcmovne
lock
clc
leave
enter
leave
lret
fisttps
in
xlat
shl
cmp
clc
or
repnz
out
ror
std
fmuls
out
xchg
lock
xor
jmp
mul
fucom
sbb
fucom
jmp
in
in
test
int
test
xor
int
repnz
xlat
cmc
mov
out
fsubrp
repz
mov
repnz
repnz
filds
clc
std
fdivr
stc
mov
addb
fld
in
test
mul
cmp
icebp
ret
mov
fsubrp
sti
in
repnz
in
xor
ret
iret
hlt
aaa
aaa
into
push
fmulp
ds
repnz
rorl
in
jmp
mov
out
sti
stc
hlt
xor
jecxz
jecxz
idivb
in
loopne
movl
das
sarl
sti
lock
cmp
in
hlt
cmc
cli
loop
ljmp
out
in
jmp
out
xor
cmp
leave
int3
imul
test
cmp
cld
fldl
loope
adc
sub
in
cmp
fsub
lret
loopne
icebp
into
in
in
cld
out
jecxz
loopne
std
ljmp
in
xor
fmul
lock
rcl
adc
adc
stc
std
in
dec
in
test
int3
jmp
stc
cmp
cmp
xor
sar
iret
fiaddl
out
in
hlt
mov
shr
aam
divb
adc
xchg
cmp
jecxz
jmp
ljmp
shl
aad
lock
cmc
rcr
fsubrp
clc
fscale
out
clc
and
add
lret
out
enter
ljmp
ret
div
aam
sar
rcl
ret
cmp
in
xchg
lret
lret
fsubrp
roll
lds
in
in
clc
xor
add
repnz
stc
ljmp
jecxz
icebp
fidivs
clc
lret
icebp
aad
fmul
ret
loope
rcr
inc
jmp
jecxz
lock
enter
cs
fcmovbe
cli
fcomi
in
or
cli
int3
out
fists
clc
fcom
into
int3
lret
fsub
aad
loope
add
out
in
std
repnz
aaa
loop
cmp
icebp
loopne
int
test
cmp
fdivr
repz
in
mov
int3
lea
lock
jecxz
les
cmp
not
cmp
ds
iret
fsubrp
icebp
test
aad
xor
not
out
in
cmp
cmc
repnz
test
cmp
ljmp
in
roll
int
aam
out
xor
int3
clc
aaa
aad
sbb
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
and
stc
push
xor
jle
xlat
test
mov
enter
hlt
out
jmp
ljmp
sti
in
call
adc
repnz
out
xor
das
repnz
rol
fsubrp
cli
hlt
shl
std
fmuls
ret
mov
in
cld
fists
out
sar
std
repz
lock
cmp
into
fsubrp
ficoms
sarl
clc
divl
int
rcl
fdiv
xchg
sti
out
std
sub
int3
lret
in
fcmovne
repz
jecxz
in
loope
loopne
cli
and
cli
in
out
and
shl
lret
sti
int
idiv
std
aas
std
ret
test
jmp
or
fstl
fcmovnbe
aam
leave
hlt
cmp
idiv
cmp
aad
xlat
test
test
lret
out
lret
icebp
in
aad
lret
xor
shr
xor
shl
fdiv
lock
and
out
out
mov
call
mov
aam
clc
sti
enter
aas
lock
repnz
xchg
loope
cld
int
xchg
xor
aad
fcmovbe
testl
call
fsubr
mov
lret
call
idivl
out
loope
fcmovnb
sti
idiv
loop
mov
mov
cmp
in
xor
not
sar
sti
mov
call
in
filds
shl
div
cmp
repz
and
jecxz
out
hlt
mov
xchg
in
in
loop
aam
fdivr
jmp
push
repnz
fprem
addl
out
in
loop
in
xchg
xlat
aam
sti
repz
in
repz
sar
hlt
and
cld
jmp
xchg
mov
fcom
idiv
call
ss
cmc
aam
fndisi(8087
mov
ret
dec
fsubrp
nop
jecxz
cmc
out
xchg
aaa
xor
out
cmp
lret
sarb
cmp
jmp
ret
inc
stc
stc
in
loope
test
sarb
xor
int
xlat
cmp
cld
cmp
clc
call
clc
mov
into
rcl
icebp
shll
aam
out
fdivrs
std
cmp
cmc
mov
test
call
test
leave
loope
ljmp
in
hlt
and
cli
in
test
lock
out
cmc
fsub
lret
out
fdivrs
rcr
fsubp
ror
aad
lret
xchg
nop
rorb
xor
shr
hlt
lock
jmp
iret
test
fcom
enter
lret
lret
xchg
xchg
fmul
in
in
into
jmp
sti
cmp
jmp
rol
ljmp
dec
std
int3
call
lret
into
cmp
aaa
fildl
test
xlat
in
fmul
fcmovb
in
adcb
leave
stc
aaa
std
fsubp
fidivrs
repnz
rolb
fildl
call
in
out
not
int
neg
add
aas
repnz
std
jecxz
ljmp
int3
cmc
sub
aad
cli
icebp
lock
call
cmp
xor
jecxz
loop
fucom
mul
cmp
clc
int3
jmp
out
repnz
std
icebp
in
sarl
fcom
fucomip
clc
jmp
mov
fistpll
rol
xor
aad
repnz
jmp
cli
in
adc
fst
mov
xchg
call
fcomp
jmp
repz
repz
cmc
fdiv
ds
mov
mov
cld
fdivrp
iret
cmc
in
shrb
in
fcmovnbe
cmp
lret
into
filds
jmp
fildl
fstp
icebp
out
out
ror
xor
repnz
cmp
cmc
xchg
repnz
lret
fmulp
icebp
xchg
into
jmp
in
aaa
repz
ss
cmp
loope
out
fcmovb
lret
cld
cld
nop
out
cld
fdiv
in
aam
ss
icebp
cld
fdivr
testl
mov
cld
rcl
repz
xchg
in
in
stc
xor
lds
std
xlat
shl
loop
out
shl
ffree
sti
out
jmp
lret
notb
ss
fcom
aam
clc
xor
rorb
out
into
aad
call
out
out
repz
cmp
cmc
clc
shl
std
mul
call
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
cmp
jle
add
nop
in
in
rol
cmp
clc
std
sarb
clc
lock
out
loop
sti
xchg
loop
xchg
and
in
das
in
loop
sti
into
leave
ds
sar
out
ret
and
mov
popl
in
shl
ror
lret
aam
repz
loop
fmul
sbb
in
nop
repnz
xlat
idivb
repz
in
shl
fiaddl
stc
out
int
cld
test
xchg
in
xlat
int
repz
xor
jmp
ffreep
cmp
xor
fadd
std
nop
lea
mul
cmp
xlat
in
repz
cmc
imul
xchg
lret
inc
addb
lock
xor
repnz
repz
loopne
jecxz
jmp
loope
repnz
test
jmp
cmc
out
out
cli
sti
xor
fst
out
loopne
sti
mov
mov
xchg
aam
fsub
shl
out
in
leave
jmp
cmp
hlt
fcos
in
ret
sub
jecxz
ljmp
ret
into
hlt
rcr
cli
std
sub
sti
fdivp
ds
fsubr
loopne
fcmovnb
iret
iret
lock
icebp
das
das
xor
out
xor
xlat
out
out
in
out
call
out
rol
xor
out
repz
lock
addb
icebp
in
test
loopne
sar
out
mov
jmp
sar
lret
out
iret
roll
fadd
jmp
sub
xchg
fbstp
out
xor
cmp
in
cmp
in
fiadds
fisttps
xchg
in
out
sub
out
xor
int3
not
xlat
xlat
stc
stc
add
out
cmc
in
lret
out
lret
lret
clc
flds
roll
leave
out
cmp
ljmp
int
rcr
clc
ds
xlat
shl
hlt
fcomp
lret
fninit
lret
into
fistl
rcr
fsubr
aad
fdivrs
std
jmp
jmp
div
flds
in
into
mov
ljmp
rcl
cmp
lret
cmp
repnz
fiadds
repz
int3
fsubp
lock
mov
xchg
addb
iret
stc
cmp
icebp
std
int3
aad
fst
cmc
std
jecxz
mov
out
xor
xor
cmp
repz
cmp
lock
cld
mov
std
shl
ljmp
jmp
int3
cmp
cmp
loop
out
loope
jmp
jmp
fmul
repz
repz
ret
out
into
out
rolb
sar
shr
vpand
lret
loopne
call
in
neg
cmp
out
xlat
rcl
ror
stc
aam
fcmovb
loopne
xchg
in
loopne
jmp
xor
std
hlt
or
cli
fptan
hlt
leave
jmp
mov
lret
jmp
xchg
xchg
xlat
repz
in
cmp
lock
aas
fcom
int3
int
ret
icebp
enter
in
ret
ffreep
repz
stc
shr
cs
cmp
idivb
loopne
hlt
std
lret
aad
adcl
shl
fmul
rcr
in
repnz
test
out
vcmpps
movl
fdivs
ss
out
stc
fucomp
rcr
cmp
incb
leave
addb
shl
ss
cmp
lret
mul
fptan
fcomi
rcr
xchg
movb
cld
xor
out
ss
xor
cmp
ffree
repz
cmp
sti
in
out
xor
jmp
jmp
rolb
out
int3
cld
mov
loope
loopne
repz
fcmove
aad
rcr
test
loop
enter
sti
in
stc
filds
jmp
in
rcl
cmp
xor
fcomi
repnz
test
mov
xchg
jmp
ljmp
cli
loopne
int3
cmp
out
jecxz
ret
int3
stc
test
lock
int
jmp
stc
xor
lock
adc
neg
out
leave
rcr
mov
rcl
int
leave
cmp
fucom
cmp
test
ret
jmp
in
and
cmc
jecxz
add
jmp
fstp
je
xchg
or
and
jle
movsl
add
fdivr
in
cmp
fdivrl
icebp
ret
sti
cld
inc
loop
fadds
leave
xchg
mov
cmp
cmp
cmp
loope
rcl
ret
in
test
les
lock
xor
fnstsw
lret
in
lds
shl
stc
flds
int
loopne
jmp
xlat
shr
ljmp
sbb
mov
xchg
int
in
mov
xor
out
aam
in
out
aas
out
repz
addl
stc
les
in
shl
enter
ror
sbb
in
ret
loopne,pt
fdiv
test
and
repz
lret
clc
ljmp
std
ds
out
into
out
test
das
int3
xor
in
cmp
aas
repnz
repnz
repz
fucom
lock
test
adcb
into
ljmp
loopne
faddp
cld
mov
sbb
mov
test
xchg
ljmp
cmp
repz
out
clc
fcom
rol
sti
mov
or
cmp
leave
xchg
out
jmp
aam
cmp
leave
ljmp
ret
testb
fcomip
cli
nop
out
aad
enter
out
lock
cmp
into
cmp
cli
sbb
mov
incb
jecxz
leave
lret
int3
shll
repz
shl
fchs
in
fiadds
jmp
in
test
into
adc
call
out
ljmp
out
shl
loop
fucomp
iret
ljmp
div
ljmp
fdivr
loopne
sarl
aas
rorb
leave
addl
jmp
ds
fildl
loope
ret
neg
icebp
xchg
out
mov
xor
cld
aad
fidivrs
cmpl
cli
cmc
sti
cld
addl
into
jecxz
jmp
lock
cmp
rcl
out
sbb
cld
out
xchg
xchg
roll
lock
out
rcl
ror
loop
sar
fcomip
testb
ljmp
rcl
lret
jmp
xor
rcr
shl
repz
in
xlat
ljmp
out
ss
xor
aaa
cmp
hlt
fcmovb
fiaddl
in
leave
iret
enter
aam
out
lret
cli
xor
aad
jmp
cmp
int
rcl
leave
in
stc
fdivr
lret
incb
out
repnz
jmp
iret
aam
fdivrs
rcl
stc
loopne
ret
mov
loop
rcll
loop
test
cmp
shl
stc
fstpt
cmp
add
fsubr
jmp
repnz
out
push
icebp
ret
roll
out
xlat
jmp
loop
int
loopne
cs
int
cld
xlat
rcr
xlat
rol
icebp
aas
out
out
lret
enter
mov
clc
lock
aam
loop
ret
out
cld
enter
fadd
lret
mov
nop
rorl
xor
cmp
ret
not
ret
jmp
fucomp
rcl
test
lret
vshufps
aad
fcom
fsubp
stc
filds
ret
stc
ljmp
addb
in
iret
out
cmp
hlt
aad
add
xchg
rcr
lds
xchg
xchg
xchg
repz
int3
cmc
cmp
cld
fnstcw
fnstcw
ljmp
hlt
xchg
call
aad
ljmp
std
fucom
out
cli
in
rol
cmp
loope
leave
jmp
test
rol
shl
cmc
cmp
aam
ds
sbb
shl
hlt
fsub
ffree
stc
lret
filds
call
in
lret
call
iret
fdivrp
cmp
clc
loopne
xchg
ret
cli
mov
iret
orl
shl
mul
xor
ror
aad
iret
cmp
stc
aad
xchg
faddl
into
ljmp
cmp
ss
incl
incb
ret
mov
loop
std
xchg
xor
cmp
testl
shl
in
enter
shl
mov
loope
leave
repz
out
in
shll
into
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
dec
inc
ret
jle
movsl
add
hlt
shr
inc
out
cld
repnz
test
in
out
leave
ljmp
jmp
fcomip
repnz
in
in
fmuls
in
fmulp
mov
xor
rol
call
addl
in
in
fmul
ljmp
loopne
in
xor
aam
into
lret
jmp
icebp
cli
out
ror
call
cmp
into
in
sub
in
divl
fscale
int3
ds
cmp
fucomip
les
aad
hlt
mov
lret
in
sti
out
in
rcll
aam
neg
cmp
aam
shl
cmp
in
xchg
addl
xchg
sti
test
test
lret
shl
jmp
and
inc
test
mov
xchg
loopne
cmp
xor
repnz
lock
adc
mov
xchg
out
repz
xor
fucomip
aas
loope
clc
test
in
call
filds
sub
in
enter
ret
icebp
aam
ret
lret
cli
neg
in
iret
rorb
int
int
fcmovbe
adc
idiv
aas
ror
clc
out
xlat
leave
out
out
xchg
int
loope
mov
repz
div
cmp
lret
incl
mov
test
lret
mov
repz
out
call
into
hlt
ljmp
lock
mov
testb
xchg
mov
int
fcmovbe
out
aad
iret
loope
rcl
aad
out
std
sti
std
sti
clc
icebp
les
ljmp
ss
out
out
test
test
loop
ljmp
ror
xor
sar
out
ss
loopne
loope
xor
add
loop
test
xchg
hlt
aaa
fdivs
call
cmc
loopne
divl
aaa
and
fmul
std
fistl
std
loop
int
int3
ss
aaa
xlat
faddl
stc
rolb
test
in
ficoms
int3
call
cld
aad
push
repnz
jmp
faddl
faddl
ss
jmp
cmp
fnstsw
add
cld
icebp
shl
enter
loopne
mov
out
jmp
vpaddsb
cmp
leave
cmpl
out
ljmp
jmp
hlt
aad
call
neg
lret
lock
cmp
loopne
aam
leave
mov
lock
test
in
fcmove
jmp
jmp
out
into
roll
mov
in
cli
fsubp
test
mov
fcmovu
shll
out
cmp
or
mov
loopne
std
lret
mov
xchg
mov
sar
mov
cmp
fsubrp
cmp
ret
fcmovnu
cmp
sti
jmp
mov
sti
int3
xor
sub
sar
aam
fnstcw
sti
ds
call
int
cld
out
out
xor
jecxz
lret
cmp
loopne
repnz
enter
aas
loope
out
jecxz
iret
nop
xchg
shr
cmp
iret
fdiv
adc
aad
clc
neg
out
mov
mov
in
shl
rcl
jmp
rcl
cli
repz
aas
in
aad
test
in
leave
jmp
iret
jmp
loopne
lock
shr
xor
fcmovu
idiv
aaa
test
ret
mov
xchg
xorl
out
repnz
aad
stc
in
ror
fisttpll
test
loopne
ret
ss
jmp
xlat
fmul
jecxz
repz
shl
flds
mov
enter
xchg
aad
divl
clc
sti
frndint
into
aam
int3
repz
shl
iret
xchg
sti
cmc
mov
loop
leave
enter
loope
out
into
jecxz
cld
int
aas
ffreep
repnz
xabort
loop
out
loopne
jmp
test
roll
jecxz
xlat
hlt
ror
aad
in
out
fsqrt
fsub
faddl
addl
in
ss
in
lock
sarl
lock
loope
test
call
rorb
shl
hlt
fidivl
cmp
stc
fmul
sti
and
cmp
sti
mov
ljmp
repnz
test
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
pop
jge
out
enter
add
inc
fndisi(8087
in
jecxz
mov
rorb
hlt
fdivs
jmp
loope
ret
cmpb
loope
sbb
int3
out
test
cmp
cmp
xchg
out
stc
rorb
std
loopne
fisttps
shll
in
in
cmc
jmp
lret
cmp
iret
clc
clc
out
stc
ret
call
repz
shl
ljmp
hlt
int
ds
ret
idiv
out
fisttps
xchg
loope
xor
repnz
out
fxch
in
stc
cmp
cld
out
mov
clc
neg
in
int3
jecxz
out
out
adc
ret
xor
out
repnz
ret
call
icebp
repnz
enter
mov
jecxz
clc
aad
icebp
sub
cli
shl
sti
in
icebp
stc
hlt
rol
cmc
neg
in
out
mov
iret
loop
stc
lret
int3
rcl
dec
shl
call
fsubr
cld
mov
cli
xchg
std
shl
aad
lret
ret
stc
int3
xor
call
aas
std
jmp
in
clc
xchg
loop
jmp
rcl
aam
fsubrp
clc
rolb
aam
out
mov
in
iret
xchg
xchg
rcl
repz
lret
rcl
cld
icebp
shlb
cmp
repnz
iret
rol
loope
ljmp
out
mov
xlat
stc
out
fyl2xp1
fcmovbe
lret
out
sar
fmul
fdiv
jecxz
leave
sbb
test
iret
sti
jmp
mov
lret
xor
jmp
fldl
addb
lock
std
jmp
cli
out
fsubrp
icebp
hlt
stc
int3
loop
cmp
adc
into
fsubrp
or
xor
xor
std
call
loop
fnstsw
addl
sti
xchg
int
out
xchg
out
loop
xor
cmp
cmp
int3
cmp
repz
repnz
out
test
loope
aam
shr
jmp
cmc
fstpt
cld
int
hlt
stc
fdivr
fsub
out
ljmp
mov
repnz
lret
repnz
rcr
cmc
push
in
loope
mov
xchg
call
aam
xor
sti
test
in
cmp
fnstenv
in
test
repz
test
addl
iret
hlt
iret
ret
fld
roll
sbb
lds
leave
out
loope
repz
out
shlb
out
sub
int3
fidivrs
cmp
loope
cli
xor
aad
rcl
loopne
int3
ljmp
xchg
clc
xlat
fld
fdivrl
bnd
aad
xchg
mov
xlat
xchg
fstl
xor
ljmp
icebp
icebp
xor
jmp
nop
int3
loopne
rolb
ljmp
iret
out
fidivrl
icebp
call
xchg
clc
lret
sti
into
out
mov
icebp
in
fcom
cmp
sti
cmpl
addl
repz
hlt
out
xor
int
imul
ror
ds
loopne
cld
sbb
mov
icebp
out
and
xlat
clc
cli
ss
std
fsubrp
frndint
out
hlt
aam
cli
jmp
int3
mov
repz
test
out
imul
int3
lock
sarb
ds
and
enter
in
fcmove
ljmp
aam
xor
repz
iret
jmp
repz
out
faddp
aad
test
xchg
out
lock
ljmp
int
ror
jmp
in
cld
mov
out
xlat
into
cld
rclb
fcmove
in
cmp
std
jmp
shl
les
fnstsw
leave
clc
cld
shl
mov
loop
cmp
call
cmp
hlt
aam
aad
loop
not
mov
test
sbb
into
rcl
xor
lock
test
clc
lock
call
rorb
divl
into
leave
sti
sar
in
out
stc
jmp
idiv
out
add
cld
call
xchg
jecxz
movb
lock
fcmovnu
hlt
fucomp
iret
fdivr
repnz
filds
int
in
ljmp
cmp
cmp
out
lock
xlat
std
fdiv
in
leave
fisttps
sbb
out
xchg
xlat
clc
in
repz
lret
out
call
adc
fmul
call
xor
jmp
aam
mov
lods
movlps
add
clc
mov
lret
shl
into
aaa
out
cli
sarb
cmp
fcom
sti
xlat
fcmovb
shl
ror
xlat
mov
fcomi
mov
int3
rol
aad
in
jmp
loope
rolb
enter
fcoml
jecxz
shl
ljmp
fdiv
cmc
icebp
in
out
loop
icebp
into
fsubrp
mov
int3
in
iret
int
cmp
fdivrs
clc
ffreep
cmp
shl
sti
mov
nop
mul
test
xlat
enter
iret
in
jecxz
clc
test
test
xchg
ret
stc
into
jmp
out
test
mov
stc
incb
xor
cmp
fyl2x
out
aas
fadds
fadd
shl
vcvtdq2pd
fiadds
in
rcr
hlt
cmp
rcr
out
cmp
loop
xor
test
fmuls
ljmp
iret
stc
rcl
stc
cmp
sar
out
call
out
and
loop
enter
in
out
cmp
shl
in
div
sbb
sbb
mov
cli
xchg
in
out
cmp
out
xor
std
repnz
ljmp
mov
test
into
fsubr
repnz
cli
into
idivb
div
f2xm1
mov
mov
xchg
mov
neg
cmp
cmp
cmp
cmp
loop
fdivp
jmp
test
loop
lret
cmp
cld
call
test
cld
rcl
ffreep
sar
xchg
cld
repnz
jecxz
out
out
jmp
leave
lock
shl
mov
sti
stc
imul
mov
lret
ftst
out
in
out
mov
repnz
sti
std
iret
sti
jmp
jmp
cld
in
cli
repnz
aad
sbb
out
leave
xchg
xchg
jmp
clc
fucomp
icebp
std
incl
lret
in
lret
in
fcomip
xor
jecxz
fcmovbe
cmc
lret
xor
fidivrl
lret
flds
mov
lock
sarl
fsubr
in
cmp
in
test
fcmovb
jmp
sbb
leave
std
leave
into
fldl
leave
icebp
lret
out
int3
lock
fcomp
stc
lock
into
into
ljmp
std
int
call
fsin
cmp
out
std
fsubr
fstp
orl
icebp
out
in
repz
in
xor
aam
repz
test
cmp
in
and
lret
into
orb
shr
fucomi
leave
clc
fcom
imul
iret
aam
fcmovnu
cld
cld
cmp
fsub
decb
lock
lock
fincstp
cmp
rcr
ror
mov
loopne
adc
ljmp
int
in
in
cmp
cmp
sar
addb
sarl
xchg
std
in
aad
in
xor
std
repz
cmp
ret
aad
in
test
icebp
fcomip
out
hlt
div
leave
loop
stc
int
test
repz
out
enter
in
in
xor
shl
in
out
cmp
xor
clc
jecxz
std
in
xlat
xlat
mov
mov
in
imul
leave
aaa
enter
iret
ds
rcl
fdiv
sti
out
add
lret
fisttpl
int3
div
xor
cmc
in
in
fstp
ss
fsubp
addb
out
enter
cld
rcr
repnz
xor
fidivrl
dec
int
cmp
sub
loop
mov
fmull
ret
fcmovb
in
icebp
ss
aas
shlb
icebp
inc
jecxz
neg
clc
into
jecxz
in
sti
xchg
in
shlb
xor
xor
into
das
xlat
iret
aas
loope
rcr
in
cmp
aam
repnz
neg
fadds
out
fucomip
xor
aam
repz
xor
rcl
testl
in
lret
rclb
xor
fdivrs
cmc
into
loopne
shl
in
aas
aad
out
jecxz
stc
icebp
nop
icebp
in
jecxz
hlt
lock
jmp
shl
std
repz
aas
fdivrp
enter
in
loope
loope
xor
sub
fdivr
loopne
sti
adc
cld
enter
mov
loope
orl
add
inc
cld
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
mov
jno
mov
add
fucom
in
xor
cmp
cmc
repz
icebp
out
xor
out
out
fcmovbe
rolb
loop
into
sub
icebp
lock
xor
aaa
in
hlt
aam
repz
cld
cli
cld
push
lret
stc
loop
in
dec
ljmp
shll
in
fdivr
cmp
iret
not
sbb
fcmovne
lret
loopne
rclb
sub
cmp
ds
ss
std
loop
mov
clc
icebp
in
into
shl
aaa
xor
leave
cmp
ss
hlt
ror
shr
xchg
out
out
xchg
in
xchg
ror
das
jmp
aad
fdivs
ffreep
std
mov
filds
xchg
mov
out
xabort
ror
icebp
shr
loop
imul
ret
jecxz
fadd
xlat
leave
jmp
lock
clc
cmc
fmul
repnz
or
icebp
loope
inc
test
xchg
jmp
lret
xlat
fsubr
lret
fsubrp
in
ds
clc
sti
cmc
sti
out
in
cli
fdivr
lea
xor
les
int
shl
test
jecxz
ret
lret
faddl
in
mov
ljmp
aam
ffreep
sti
iret
test
mov
lock
in
aam
aaa
int
jmp
ljmp
xlat
sti
loope
xchg
test
jmp
lret
leave
shl
cmp
xor
ds
clc
jecxz
adc
cli
iret
jmp
ret
shl
clc
aaa
loop
loop
xor
or
mov
fstp
int3
fimuls
aad
in
ljmp
or
vpsrad
mov
addl
call
icebp
test
stc
test
std
mov
enter
std
xchg
fsubr
cmp
jmp
aaa
neg
cli
loop
test
out
xor
in
cmp
ljmp
in
cmp
stc
enter
repz
sti
filds
fxam
jmp
repnz
loopne
xor
jecxz
xor
aaa
iret
leave
repz
out
and
stc
in
fisttpl
cli
loopne
repnz
in
call
lret
into
aaa
or
cmp
jmp
cld
mov
idiv
jmp
jmp
xor
xor
out
pushl
cmp
filds
fildl
decl
xor
jmp
fnsave
leave
rcl
xor
ljmp
fucomip
fsub
icebp
out
cmp
into
ljmp
aas
cmpb
call
mul
std
out
loop
sub
ljmp
rcl
lret
cmp
cmp
int
ffree
vpsraw
int3
fsubr
loopne
xor
das
cmp
icebp
cmp
jecxz
repz
fucomip
xchg
test
fildl
jmp
fnsave
aad
cmp
ds
loope
std
loop,pt
mov
test
out
loope
xor
xor
fsubr
fcomi
aas
cmp
fucom
ds
cli
shl
fadd
xchg
loop
call
stc
cld
iret
not
lret
ds
div
in
testl
xchg
repnz
leave
xor
in
lds
cmp
cli
std
loop
aam
hlt
cmc
lret
xchg
out
orl
cmp
leave
ljmp
mov
xchg
in
or
cld
mov
icebp
out
into
icebp
cmp
jecxz
into
ljmp
ret
add
loop
test
or
xchg
xor
shrl
aad
ljmp
sar
cli
fadd
enter
out
fldl
xchg
shr
lret
ror
fucomip
in
aad
ret
std
enter
out
test
xor
icebp
xlat
out
enter
test
fdivrp
movb
test
int3
iret
leave
rcl
iret
cli
clc
cmp
xchg
fdivr
neg
out
mov
test
xchg
xor
cmp
clc
stc
lock
shr
fildl
test
test
sbb
out
loop
nop
out
enter
jmp
shr
cli
sbb
rol
test
and
fsts
out
hlt
lds
fmuls
add
add
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
int
xbegin
cmp
leave
call
xlat
cld
mov
fists
hlt
into
xor
xlat
cmp
sar
fdivrl
fadd
clc
in
enter
or
aam
ljmp
lret
int3
cmp
int
aas
out
cld
jmp
int3
sti
loope
in
roll
cmp
out
icebp
out
int3
ror
loope
cmp
loope
in
cmp
jmp
loope
into
hlt
leave
out
hlt
leave
stc
aam
fstp
idiv
xor
mov
loopne
jmp
ljmp
cli
not
in
sub
test
testb
in
shl
ljmp
lock
xlat
cmp
f2xm1
jmp
out
std
cmp
loopne
call
in
jmp
xor
xor
into
jmp
cmp
cmp
shl
rcl
cli
cmp
mov
mov
sti
orb
fld
xlat
xor
xor
loopne
rcl
out
out
jmp
testl
xor
ljmp
call
and
xrelease
shr
std
adc
ffreep
xor
in
xor
jmp
std
jecxz
out
ret
icebp
xchg
mov
cmp
lret
hlt
xor
in
xor
ss
imul
stc
ffreep
shl
loopne
clc
imul
addb
stc
mov
repnz
into
ror
fmul
icebp
fstpt
cli
rcl
cmp
mov
icebp
fists
jmp
out
int
sti
cmpb
fcomp
clc
ret
cmp
cmc
in
mov
cmc
call
int3
sti
lds
lock
fildl
roll
test
mov
xchg
out
sub
icebp
fcomi
cmp
lret
rcl
in
loope
ret
fadds
sar
out
loope
enter
sti
add
in
loopne
hlt
les
mov
test
xor
fmul
ss
cmp
fucomp
lock
not
rcr
aam
leave
leave
mov
ljmp
cmp
ds
lock
in
repnz
cld
in
mov
repnz
fmulp
xlat
ljmp
faddp
shl
idiv
fdivrp
mov
lea
sti
clc
jmp
stc
xlat
cmp
iret
hlt
fiaddl
hlt
repz
in
fsts
cmc
in
call
jmp
leave
cmc
fsubrp
lock
test
mov
mov
orl
into
hlt
cmp
out
aad
cmp
addb
stc
loopne
mov
ljmp
repnz
int3
xor
xor
ljmp
aad
shl
sbb
clc
std
mov
int
xchg
in
ss
jmp
cli
lock
aad
out
aad
aad
cmp
in
xchg
jmp
jmp
rcl
ljmp
faddp
adc
cmc
shr
loop
fcomi
loope
lds
les
xor
fdiv
int
jmp
lock
roll
jmp
loope
xchg
aas
repnz
lock
jmp
cmp
xchg
std
aad
test
fcomip
lret
shl
loop
hlt
cmp
ss
cld
aad
lock
loop
repnz
int
fiaddl
int
fdivr
int3
hlt
in
enter
in
aad
jecxz
rol
std
fsub
ljmp
repz
xchg
out
das
clc
repnz
lock
cmp
cli
rolb
out
cmp
cmp
iret
imul
sti
hlt
icebp
icebp
loope
xchg
fmuls
rorb
ss
shl
in
sti
in
aam
xchg
loope
enter
loop
xchg
xchg
fcmove
lock
loope
cld
ret
fneni(8087
xlat
xlat
xor
test
mov
fists
mov
aad
fcmovne
xlat
aas
out
out
lock
sar
aad
std
xlat
leave
std
in
ror
xchg
jecxz
xchg
xor
cmp
pushl
enter
ss
ret
call
mov
and
std
mov
test
sti
aad
jmp
fnsave
std
loop
cmp
lds
out
shl
xor
xor
shl
aaa
stc
cmc
int
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
rcrb
or
jle
movsl
add
xor
xlat
jecxz
add
in
std
movl
ljmp
cmp
in
cmp
rcl
ret
clc
fucom
test
test
fcom
shll
in
into
rcr
inc
std
loop
sti
fst
cli
fldl2t
enter
lret
test
aam
lock
cmp
std
idiv
loope
cmp
leave
jmp
call
roll
xor
lock
xor
repz
rcl
xlat
std
stc
loope
std
test
jmp
out
aam
lret
jmp
idiv
test
dec
aad
int3
out
fcoml
test
jecxz
ret
xor
out
lret
cli
idivl
repz
mov
cli
xchg
lret
out
lret
int
icebp
repnz
ljmp
std
movl
loope
loope
lret
not
ror
into
fxch
dec
xbegin
fcmovb
mul
decl
enter
test
mov
ret
rol
call
ljmp
out
sti
faddp
call
in
or
rolb
xor
aaa
aam
hlt
rcr
ret
shr
cmp
ljmp
enter
jmp
cmp
ljmp
cmp
xchg
in
cli
test
and
mov
aam
lret
stc
cmp
fcmovnu
iret
adc
addl
fdiv
icebp
shr
repz
in
repnz
clc
aam
stc
jecxz
test
loop
out
shl
cmc
aam
fcmovnbe
in
out
sarb
into
jmp
cmp
repnz
mul
std
dec
out
fstp
xchg
out
lret
repz
xor
cmp
in
int
sti
incb
sub
repnz
jecxz
call
out
repz
std
xlat
cmp
fadds
out
xchg
in
out
test
lret
in
xchg
lret
rcl
rol
ftst
repz
jmp
out
aam
ss
loopne
xor
mov
fcmove
sti
cld
into
leave
and
loope
das
repz
int
cmp
shl
fcmovnb
cmc
mov
in
call
iret
enter
repnz
cmp
cli
xchg
movl
into
sti
in
cld
cmp
loop,pt
rol
leave
idiv
lds
adc
xchg
repnz
into
cmp
out
shr
cmp
stc
cmp
test
fisttpl
dec
mov
xor
les
clc
sti
aam
xor
repnz
aad
jmp
enter
loopne
xor
das
int3
int
cmp
fdiv
in
cmp
fcomp
loopne
cli
incl
test
in
in
cs
jecxz
cs
cmp
fcomip
hlt
ret
stc
loope
fcomp
cmp
out
test
xchg
loop
iret
xor
enter
std
in
out
std
xlat
int
sti
mov
in
cmp
les
repz
xor
neg
out
fadd
fidivrs
std
fcomp
std
int3
int3
enter
xchg
in
in
repz
in
fdivs
int
fnstcw
cmp
icebp
cmp
out
into
and
in
iret
neg
cmc
repz
leave
not
leave
jecxz
aam
sar
call
fdivr
mov
call
lret
in
cld
out
imul
loopne
cli
sti
xor
flds
decl
in
in
xlat
cmp
aaa
rcr
enter
fsubp
add
in
dec
aam
mov
out
aad
xor
repz
cmp
cmp
shl
into
aam
lds
iret
fisttpll
lret
lret
hlt
jmp
fcmovnbe
std
repnz
icebp
div
sti
lret
test
lret
test
jmp
cs
cli
cmp
sarl
cld
sar
shll
rcl
in
mov
cli
out
fnsetpm(287
addb
stc
in
sar
xor
in
lret
sar
lock
roll
jecxz
in
mov
enter
aad
lock
lret
int3
cli
mul
fdivrs
jmp
sub
lret
rol
neg
lock
jmp
int
cmp
sub
call
orb
fcmovbe
enter
cmpb
cmp
out
lock
clc
fimull
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
addr16
mov
jle
movsl
add
aad
cmp
clc
enter
decb
jmp
rcr
into
repz
std
jmp
xchg
xchg
ror
test
into
lret
std
cmc
ljmp
jecxz
mov
mov
in
incl
icebp
repnz
out
cmp
ss
out
shl
shl
jecxz
cmc
sbb
into
leave
mov
aad
cmp
out
repnz
icebp
incl
loope
cli
sbb
nop
iret
sbb
out
xlat
ss
icebp
fnstsw
cmp
hlt
neg
stc
fildl
loop
lret
mov
jmp
in
jecxz
cmp
xor
cmc
dec
aam
test
cmp
in
mov
xor
call
into
fdecstp
shl
roll
adc
lret
fadd
flds
ss
sub
aam
aad
flds
sar
cmc
xchg
call
loopne
xchg
fcmovbe
lock
into
cmp
sar
fldl
into
test
and
cmc
cs
cld
out
idivb
loope
fiaddl
enter
enter
in
test
rol
stc
into
repnz
rcr
cld
movl
adcl
fcmovbe
fcomp
testb
idiv
jmp
adcl
int
out
rcr
lock
cli
fcomi
filds
cmp
sti
xchg
sti
shr
jecxz
ljmp
rcl
flds
stc
out
int3
mov
int
ror
enter
ss
call
int
stc
loopne
lock
out
or
xchg
repnz
adc
loopne
jmp
sarl
iret
loopne
sub
fimuls
out
xor
in
and
jmp
cld
lock
stc
incl
leave
sti
xlat
call
lret
ljmp
cmp
in
aaa
cmp
out
sti
ret
jmp
out
cmc
cli
mov
ret
sti
jecxz
xor
aad
in
rcl
cmp
in
push
sti
test
sar
adc
sti
in
in
xchg
mov
ror
xor
icebp
std
xor
jecxz
cmp
test
enter
in
out
iret
shr
rcr
leave
ror
sarl
in
repnz
aam
mov
mov
test
fcmovbe
or
aam
call
xor
clc
loop
aad
xlat
ret
shl
aam
loope
into
test
jmp
xchg
mov
out
repz
fcmove
iret
ds
shl
ret
loopne
inc
xor
cmc
mov
xlat
fcmovnu
orb
enter
shr
cmp
icebp
in
rcr
repz
std
xchg
in
int
shl
loope
in
shl
repz
icebp
sarb
hlt
int
sti
sar
repz
jecxz
in
loopne
in
xor
xor
cmp
iret
fnstsw
testl
lea
fmulp
mov
rol
loope
loop
in
iret
into
fld
loopne
in
ret
shl
fdivr
rol
faddl
roll
shlb
out
xor
in
cli
ror
out
fcmove
fsqrt
lock
jecxz
mov
das
out
repz
sti
xlat
ljmp
xlat
mov
repnz
bnd
jmp
iret
lret
cmc
sti
repnz
loop
out
enter
leave
jmp
out
jmp
ret
xor
out
int
cmp
lret
icebp
sarb
in
out
loope
mov
out
and
call
fidivrl
hlt
call
iret
cmp
enter
fcmovnu
fsubp
into
jmp
int
mov
rol
ror
xor
lock
ret
repz
mov
lret
mov
cld
mov
xor
test
shl
cmp
rcl
stc
cmp
adc
fdiv
int3
mov
iret
loop
fdivs
xor
lock
sti
aaa
fnstsw
jecxz
add
xchg
ret
mul
orb
std
lret
hlt
cmc
das
loop
jmp
call
hlt
roll
cmc
in
test
mov
faddl
ffreep
lret
out
leave
shl
fdivrs
xorb
shl
ret
movb
std
xchg
out
test
dec
in
mov
jmp
int3
enter
lret
int
stos
test
lock
pop
fsub
jle
movsl
add
test
jmp
test
shl
in
lret
hlt
enter
in
sar
fld1
std
xlat
out
test
lret
fucomi
test
repnz
enter
loopne
idivb
aas
in
jmp
xchg
sti
jmp
xchg
jmp
jecxz
aaa
int
in
fstp
fstp
movb
fsubrp
loop
test
bnd
jecxz
cmp
out
fxch
cmp
in
jecxz
rolb
loopne
sti
jmp
in
ljmp
repz
fildl
shl
loope
clc
mov
repz
call
cmp
clc
fcmovnu
jecxz
clc
leave
mov
std
testb
xchg
loop
xor
aam
das
cmp
test
vpxor
int
icebp
cs
xor
clc
fld
aad
xlat
std
addb
in
int3
addb
xor
imul
rcl
or
jecxz
sti
cli
hlt
xchg
mov
xchg
sub
lds
iret
in
sti
adc
out
fcmovne
mov
into
shl
jmp
rcl
in
shl
lret
lock
out
and
in
shr
fmuls
in
xchg
cmc
jmp
call
cmp
ret
and
in
sbb
in
xchg
ret
aad
into
int
cmp
jecxz
ds
neg
mov
cmp
jmp
aam
mov
fadd
sti
fdiv
int
loopne
cli
in
aad
add
in
addl
decl
iret
loope
cmp
xor
leave
icebp
ret
and
iret
out
fmuls
iret
mov
nop
xchg
test
in
les
fstp
xor
neg
rol
fcmovbe
aam
ds
jmp
fcoml
jecxz
cld
cmp
icebp
fmulp
loopne
shl
clc
fiaddl
mov
in
nop
ss
cmc
not
jmp
stc
rolb
fcmove
cld
mov
repnz
rorl
fnop
div
jmp
in
lret
roll
sti
test
addl
orl
xor
incl
sar
sarb
faddl
stc
xchg
call
hlt
ret
iret
loop
iret
hlt
jmp
fadd
aad
movl
nop
repz
aam
int3
cli
in
in
xor
into
neg
fadds
in
sti
lea
in
rol
jmp
ds
ror
incb
std
mov
into
out
in
mov
fincstp
int3
shl
aas
cmp
aaa
cld
cld
rorb
jmp
lret
lock
icebp
out
lret
into
iret
fcmovb
rcl
mov
fcmovu
std
neg
loop
in
fiadds
xor
cmp
enter
fadds
lds
xlat
sti
fildl
int3
notb
ret
sar
cmp
aas
sar
cmc
roll
mov
out
repz
shl
cli
div
jmp
les
loopne
rolb
cld
decl
int
into
shr
cmp
into
lret
int3
fxch
xor
std
not
hlt
jmp
sti
enter
and
xor
icebp
fdivrs
out
fucom
jmp
lock
rcl
stc
fdiv
flds
int3
cmc
xchg
loop
int3
ret
out
ss
fcmovnbe
test
clc
rcr
les
xor
loop
cld
out
repnz
in
stc
cld
repz
jmp
test
repz
xlat
jmp
sti
nop
loop
nop
fisttps
clc
imul
rol
xor
cmp
sar
ds
loop
mov
call
iret
push
div
call
in
repnz
call
sti
xchg
shr
loope
lret
in
sarl
cmp
out
frstpm(287
out
std
shl
mov
int3
out
ljmp
xchg
cmp
out
lret
ss
out
sar
filds
enter
iret
xchg
out
xchg
in
shrb
xor
leave
lock
aaa
cmp
repnz
aad
hlt
hlt
mov
loope
decb
mov
nop
rol
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
hlt
lock
lret
test
addl
out
popl
mov
aad
idiv
aad
ror
fdiv
out
jecxz
xchg
bnd
lret
cld
in
nop
sub
into
aam
in
ss
aaa
xor
jecxz
loop
out
stc
enter
incl
lock
in
call
hlt
int
aam
lock
out
jmp
lret
in
lock
iret
hlt
hlt
ljmp
xor
in
ds
loopne
aam
xchg
mov
fcmovu
jmp
test
enter
xlat
ss
in
fcmovu
shl
cmc
stc
roll
or
lock
repnz
in
hlt
in
das
stc
in
in
std
fnsave
faddp
jecxz
rcr
faddl
sbb
xchg
hlt
int
loopne
loop
lret
cli
cmp
cmc
rcr
lock
call
into
xchg
loop
xchg
lret
repnz
aad
fnstenv
fcom
xlat
int3
in
rolb
int
popl
ljmp
jmp
lret
aaa
std
ljmp
icebp
clc
mov
xchg
lret
loopne
loop
icebp
icebp
leave
fsubr
fcomi
repz
mul
xchg
fld
aad
jmp
cld
lret
xchg
loop
clc
jmp
lock
aaa
out
ret
loopne
shr
cmc
fucomi
mov
cli
jecxz
shr
mov
adc
enter
out
cmp
in
jmp
loop
ds
int3
test
flds
in
cs
fdivs
xor
aam
rcl
loop
std
fcmovnu
sar
hlt
ds
in
in
xchg
jmp
not
in
cmp
std
fprem
aas
sar
jmp
cmc
clc
fsubp
ret
fadds
xchg
xchg
iret
icebp
xor
xor
in
in
das
ss
into
lock
fdivp
fadds
enter
ror
sti
mov
aam
stc
call
cmp
cmp
in
ret
test
mov
jecxz
sbb
out
mov
xor
add
ljmp
fnstsw
shr
ljmp
mov
lock
sarb
aam
aaa
in
ljmp
xchg
cmp
repz
mov
call
fstp
rcr
ret
fcmovnb
lret
stc
lret
jecxz
xchg
lock
aam
hlt
out
hlt
ss
rol
xor
sbb
call
fsub
jmp
loopne
in
loope
out
sti
cmp
xlat
lock
into
xor
stc
sbb
not
in
lret
out
into
loopne
out
in
iret
cmp
cmp
cmp
fsubrp
cmc
std
int
cmc
and
loope
lret
div
out
cli
ss
enter
shl
loope
shr
mov
sub
fisttpll
mov
into
sti
fcomp
hlt
cmp
int
or
repnz
ljmp
mov
loopne
ljmp
cmp
shl
jmp
in
ret
loopne
xchg
xlat
int3
loopne
xchg
in
mov
icebp
out
aaa
xor
or
jecxz
orl
xchg
into
rcl
xor
in
in
fsub
shl
into
idivl
aas
loopne
loop
ljmp
shl
rol
out
shl
clc
fcomi
fptan
adc
xlat
add
jmp
mov
faddl
hlt
cmc
std
cmp
cmp
clc
aad
test
call
add
mov
in
add
in
jmp
xlat
cmc
sbb
vpsrlw
mov
in
mov
xchg
lret
repz
aad
cmp
rolb
mov
enter
stc
mov
repz
aaa
out
call
lret
int
loope
add
lock
call
mov
out
aad
cmp
in
cmp
sti
in
into
loopne
flds
lret
in
loope
rol
shlb
cld
cmp
lret
incl
in
ret
test
push
cld
sti
mov
xchg
rorl
out
ds
cmp
shl
call
fstp
xchg
iret
cld
xchg
lock
shll
ffreep
rol
cmp
loop
aad
hlt
rcr
xlat
in
sti
leave
shl
lret
nop
loope
int3
loop
aad
enter
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
inc
in
jle
movsl
add
rcl
icebp
shl
xlat
cld
in
out
loope
fmuls
into
loop
jmp
call
loopne
aas
cmp
xlat
fmulp
fst
mov
mov
cmp
lock
cs
int3
xor
hlt
loop
rcl
cmp
xchg
mov
cli
mov
xchg
xchg
shr
sti
out
aad
jmp
test
aas
iret
cmc
inc
fiadds
loop
fildl
ss
cli
in
jmp
cmp
cli
incl
xchg
xlat
lret
nop
decl
fnstenv
fucomi
adc
fcmovu
call
jmp
rclb
leave
lock
aad
cmp
faddp
fdiv
in
aam
faddl
in
xchg
test
out
clc
icebp
lret
iret
icebp
sarl
loop
hlt
xor
stc
fdivrp
ljmp
out
out
repnz
out
xor
test
cmp
ror
fdiv
testb
incb
in
icebp
call
cmp
cmp
stc
roll
loopne
shl
jecxz
aad
jmp
fiadds
ror
call
leave
int3
cld
shl
aas
std
test
sti
jmp
vpmulhw
fcmovbe
idiv
rcr
cmpl
mov
cmpb
imul
mov
mov
lret
cmc
cmp
cmc
jmp
into
sub
ret
les
testb
into
jecxz
lret
hlt
sti
shr
shr
lret
iret
lock
loop
out
leave
addb
call
cmp
call
sarl
loope
cld
icebp
out
loopne
fxch
test
mov
out
call
cli
icebp
sti
jmp
cmp
cli
cmp
fadds
stc
or
nop
decb
xor
ljmp
into
fnstsw
aad
les
out
mov
ljmp
ret
xor
int
int
or
out
repz
fiadds
call
int
lock
cld
call
ljmp
stc
cmp
xchg
rorb
loopne
fsubr
fxch
fcmovbe
in
lret
int
fldl
in
orb
loope
hlt
fsub
xor
cmp
int3
loopne
repz
loope
in
rcr
test
sar
lds
xor
in
enter
repz
in
clc
in
aad
call
mov
ljmp
loopne
sarb
lret
out
shlb
jmp
idivl
out
test
in
loope
xchg
lret
aam
cmp
fnstsw
ffreep
aas
in
fcomip
aad
in
testl
shl
jmp
aad
fdivr
cld
loop
cmp
aad
sar
clc
sti
call
adcb
out
shr
int
fsubr
cmp
aam
out
add
leave
out
out
fiadds
mul
shr
cmp
fdiv
repz
test
cmp
testb
nop
out
ror
sarl
aaa
aas
aam
adc
neg
out
cmc
jecxz
flds
hlt
lock
cmp
out
in
out
out
out
lret
cmc
std
shl
into
mov
int
clc
mov
fldlg2
cmp
aas
xlat
cmp
imul
repnz
mov
leave
fdivrl
int
loopne
loope
test
xor
jmp
into
clc
fdiv
stc
repnz
incb
ss
out
jmp
hlt
hlt
stc
and
aas
clc
xlat
out
cli
out
call
div
int
fucomip
lock
clc
stc
icebp
cmp
lock
out
ret
ljmp
repz
shlb
repnz
in
fpatan
loop,pt
repz
jmp
std
mov
iret
xchg
call
jmp
neg
lret
loopne
shl
out
shl
jecxz
enter
nop
mov
out
sub
cli
xor
cli
into
ror
in
cmc
sbb
rcr
rol
sbb
orl
cmp
lret
ss
cli
cmp
into
clc
icebp
loopne
aam
aad
int
sar
rcl
mov
nop
hlt
xor
rol
fcmove
jmp
fdivrp
xlat
xlat
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
jb
bnd
movsl
add
mul
jecxz
or
fsubp
lock
xor
fmul
enter
ljmp
shl
in
lock
not
lock
cli
cmp
mov
jecxz
in
vpaddw
mov
das
aad
shl
cs
clc
cmp
sti
test
mov
lret
ljmp
fcom
fcmovne
cmp
shr
xlat
aad
fcmovnb
div
cmp
icebp
test
call
xchg
leave
lock
loope
repz
clc
rcr
fxch
cmp
int
jecxz
aad
testb
mov
ljmp
xor
repnz
idivl
aam
cmc
sar
ret
ret
fldl
ljmp
xor
lret
icebp
sti
addb
fdivp
sti
jmp
orl
fdivr
cmp
std
fcomip
in
jecxz
out
jecxz
cld
ds
lock
enter
repz
in
ss
out
sarb
cld
aad
mov
fdivrp
test
test
aam
int3
fadd
iret
ss
iret
jecxz
rol
cld
mov
lret
stc
aad
out
mov
cld
mov
xlat
xor
cmp
icebp
aaa
and
test
mov
in
sub
cs
std
cmp
cmp
cli
cmp
mov
xor
in
aam
shrb
aaa
hlt
sarb
fsqrt
lret
rcl
cmp
cmc
les
lock
lock
sar
in
shr
ljmp
cmp
in
jecxz
inc
in
jmp
ficoml
mov
fidivrl
fnstenv
shl
xlat
stc
ret
mov
out
call
out
jecxz
xor
enter
out
cmp
icebp
jmp
ds
sti
cmc
xchg
int3
xchg
fucomp
xchg
in
jecxz
cmp
cld
cli
xor
repnz
shr
hlt
fstp
cli
enter
sti
out
xchg
lock
adc
xlat
bnd
xor
incl
fdiv
stc
mov
lret
lea
icebp
lock
cmp
sti
into
sti
loop
test
xchg
out
int3
loop
fisttpll
ret
shl
jmp
repnz
out
clc
fsubr
leave
sti
enter
lret
in
repz
int3
out
cli
cmp
sar
out
lret
cld
test
ds
jmp
ret
cmp
shl
in
aaa
sti
repnz
cld
loope,pt
ret
repz
rcr
in
lret
add
in
out
xchg
test
hlt
shl
rcl
fidivl
cmp
fcmovnb
fadd
enter
fninit
fsub
iret
loop
into
jecxz
enter
test
fcomi
cmc
ds
repnz
movl
xor
fdiv
rcr
aad
cmp
fdiv
cmc
mov
in
in
roll
xlat
lret
out
repnz
shr
sbb
loope
out
fdivr
sti
in
jmp
stc
loop
in
icebp
out
int
int
aad
ss
lret
rcl
xor
inc
xchg
hlt
in
lret
out
nop
out
into
xchg
adc
int
fcmovu
cmp
loop
aad
test
cld
addl
nop
aam
aam
in
cld
fcmovu
cli
in
roll
xlat
aas
icebp
cld
loop
lret
out
mov
xchg
in
cmc
lock
iret
out
int3
fsubrp
cld
adc
cli
ret
aam
mov
in
ficoms
lret
cmp
xlat
aam
sbb
ss
aam
xchg
fucomip
fisttps
int3
test
xor
fstp
aaa
cld
cmp
icebp
test
into
fnop
xchg
out
mov
in
enter
sarl
fdivr
lret
hlt
movl
fxch
test
shlb
in
std
loopne
div
loop
fmull
fsubp
loope
ljmp
out
cs
icebp
aam
lret
aas
fst
xchg
loopne
call
loope
lret
loope
rolb
call
shr
repz
fstp
call
jmp
cli
in
fmulp
jmp
rol
xchg
mov
in
hlt
xor
cmp
lock
cld
aas
inc
cmp
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
int
fadds
xchg
cmc
leave
xor
sar
shl
cmp
into
div
loope
sar
lret
xchg
cld
sti
mov
ret
out
int
in
aas
sar
clc
cmp
cmp
leave
xchg
repz
rcl
repnz
clc
sar
cmp
aad
std
fcmovnb
and
out
hlt
test
nop
mov
icebp
cmp
xor
into
fucom
addl
mov
stc
out
repz
icebp
loope
cli
jecxz
xor
aam
xor
xlat
cmp
out
hlt
fmuls
and
clc
jmp
out
fstpt
cmc
xlat
lret
aad
rcr
fstp
in
out
fdiv
xchg
rorl
ljmp
fld1
fdivrs
lret
adc
sti
jmp
or
mov
aam
in
shl
out
jmp
int3
frndint
in
xlat
fld
repz
shr
loop
shr
leave
in
out
aam
icebp
iret
enter
fnstsw
into
leave
sub
stc
ret
std
fldl
cli
sti
ljmp
aaa
leave
out
repz
std
ds
loop
aam
test
std
icebp
repz
lret
in
mov
fucomip
fsubr
enter
cmp
int3
ror
repz
adc
mov
cld
lock
sub
call
sbb
stc
loop
test
ret
in
loop
std
nop
iret
decl
leave
in
out
cli
call
sar
loop
testb
ljmp
mov
int3
iret
fsub
out
cld
jmp
cmp
or
jmp
out
orl
ror
xor
lock
filds
aam
int
fdiv
repnz
in
icebp
out
fcom
cmp
ror
lret
cmp
fsub
in
xchg
loope
loope
in
sti
rorb
jmp
not
clc
clc
loop
repnz
leave
jmp
sti
lret
cmp
loop
xor
cmp
in
jmp
jmp
loop
ds
cld
aam
f2xm1
lock
jecxz
nop
repnz
stc
sub
ds
sar
cmc
sbb
enter
shr
mov
idivl
idivb
not
dec
shl
jecxz
sbb
jmp
fsubr
mov
mov
leave
out
ror
cld
testl
vpmullw
and
sti
test
mov
incb
stc
int
cmp
add
iret
fadds
in
iret
test
int3
rorl
xlat
sar
out
repz
xor
ret
add
mov
out
xchg
out
test
xor
imul
cmp
int
repz
out
out
std
loope
not
in
in
cli
lds
sar
out
out
leave
lret
sarb
loop
shl
test
sti
icebp
cmc
stc
mov
out
loope
loopne
mov
jmp
repz
aaa
neg
icebp
out
cli
aad
std
ds
cmp
decb
mov
int3
jmp
out
jmp
call
fcomp
iret
icebp
fmull
leave
jmp
xchg
xor
cmp
aad
enter
int
roll
lds
iret
cmc
addl
cmp
int3
icebp
cmc
rol
cmp
cmp
inc
into
test
jmp
lret
test
icebp
in
aaa
lds
xor
aad
sti
rcl
rcl
shl
shl
mov
xlat
lret
sub
icebp
xchg
fst
iret
xor
clc
into
leave
cld
sti
iret
in
aaa
fcom
sar
and
fsub
leave
fsubr
xchg
iret
repz
enter
hlt
enter
adc
loop
out
enter
out
cli
stc
xchg
faddl
out
ret
cmp
aaa
aaa
inc
loop
fcom
aad
mov
lret
incl
ljmp
loop
lret
fld
cmp
fiadds
popl
shr
loopne
icebp
in
shr
in
call
repz
cmp
faddp
idivl
mov
int3
movb
ret
cmc
rcl
idiv
xlat
jmp
repz
in
rol
ffreep
loop
xchg
out
int
xchg
xor
jmp
cmp
leave
cmp
cmpl
test
ret
xchg
mov
add
jmp
aam
iret
int3
fst
outsl
fmull
testb
sti
jle
movsl
add
jmp
out
loop
cmp
int3
cmp
shl
loope
repnz
fsubrp
orb
nop
repz
int
call
repnz
fcmove
stc
ret
neg
call
filds
xchg
xor
call
xlat
cmc
rcr
repz
test
and
int3
test
lret
loope
hlt
aam
sub
stc
cmp
icebp
enter
in
stc
loop
out
out
cli
mov
leave
out
xchg
fdiv
xchg
loope
icebp
in
leave
xor
hlt
enter
iret
test
cld
shl
fucom
xchg
enter
fcomi
mov
jecxz
jmp
call
icebp
cld
aas
cmp
add
mov
fndisi(8087
push
cmp
nop
nop
loop
iret
leave
loope
not
sti
in
fcmovu
cmp
fucomp
ds
test
fimull
loope
int3
cmp
rcl
cmc
lret
in
xor
hlt
idivb
cli
hlt
int
int3
fcmovbe
fsubr
call
ret
enter
fucomip
xor
testl
loope
loop
rorl
loop
cli
lock
fbstp
jecxz
repz
jecxz
iret
out
lret
int
xchg
imul
xor
cmp
neg
out
int
fsub
test
lock
sbb
xchg
fxch
xchg
xchg
xchg
iret
into
xor
jmp
cmp
lret
loopne
lock
std
loope
aad
leave
mov
lret
lret
nop
xchg
aas
cmp
fldl2e
int3
int3
cmp
fdivr
rcr
out
stc
mov
movl
rol
xor
cld
shr
cmp
in
addb
iret
call
lret
adc
clc
xor
rol
adc
rcl
fdivrp
sar
jmp
fldl
lret
enter
sarl
rcr
fsubr
rcl
cmpl
add
mov
cmp
mov
cs
div
stc
clc
jmp
xlat
cmp
add
out
add
loop
iret
mov
ret
ret
xor
fcomp
in
repnz
shl
loop
fdiv
cmp
xchg
fisttpl
notb
cmp
fidivrl
into
stc
out
lock
int
aas
fmull
cmp
shl
xor
lock
repnz
rcr
clc
int
ds
repz
mov
ror
adc
test
loope
aad
fcmove
sar
idiv
fiaddl
decl
ss
into
out
aad
int3
rolb
repnz
enter
out
or
in
shl
test
icebp
out
fnstsw
ror
vpand
xchg
leave
mov
cmc
cmc
stc
rcl
iret
dec
cmp
jmp
fiaddl
fdivr
sbb
test
fmulp
addb
test
int3
aad
xlat
out
cld
fstp
cld
ret
stc
in
stc
sti
leave
rcr
out
cmc
xchg
ror
out
xor
into
iret
loopne
adc
cld
ret
lock
sti
in
loope
fyl2xp1
rorl
enter
ffree
cmp
cmc
sti
cmp
repnz
mov
fldlg2
fcmovbe
orl
cmp
fidivl
sti
aaa
aas
shl
int
sar
in
fdivr
cli
stc
xor
shl
in
lret
rolb
fucom
enter
out
loopne
in
mov
iret
xor
enter
std
fistpll
lret
dec
rolb
sbb
std
cli
in
xchg
in
xchg
xchg
in
enter
sti
lock
ljmp
fucomp
enter
lds
rorb
divb
ret
sar
aam
fdivrp
hlt
cmp
aad
rcl
cld
xlat
ret
xchg
iret
int
out
in
xchg
icebp
enter
cmp
int
call
filds
jmp
icebp
ret
in
jecxz
in
xor
int3
icebp
das
aaa
mul
jecxz
inc
and
sar
test
icebp
loopne
in
in
in
leave
fcmovbe
into
hlt
aam
lret
cld
fnstsw
adc
flds
addb
lret
shr
cmc
fstp
lret
ljmp
and
orb
cld
in
iret
in
rcr
lret
in
fcmove
in
ss
in
cmc
aad
jecxz
or
in
lret
test
repnz
loop
inc
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
call
movsl
add
in
fyl2x
repz
cmp
loope
aad
xor
xlat
and
in
ror
xor
sarb
fidivs
aad
iret
xchg
cmp
out
out
into
cld
test
fldlg2
repnz
fcmove
or
int
icebp
hlt
ret
add
xlat
lret
ficoml
cmc
call
fxch
aaa
sar
aas
shr
in
cmp
stc
sti
lock
icebp
test
in
xchg
lret
enter
cmp
cmc
cmc
shl
loop
sbb
mov
nop
loope
shr
xor
sarb
jmp
ljmp
test
cmp
in
fnclex
mov
repz
cli
cmp
aam
jmp
idiv
loope,pt
repz
ljmp
out
jmp
not
cmp
cmc
call
rcl
shl
cli
cmp
aam
cli
enter
lds
aam
fcmovnbe
aaa
fucomp
icebp
in
xor
fadd
fld
ds
mov
jmp
iret
xor
ror
clc
cmp
repnz
in
cmp
icebp
shl
mov
mov
shl
cs
xor
aam
fcmovnb
into
aam
sar
leave
adc
int
loope
xchg
out
cli
ror
xor
in
fadds
aam
test
testl
icebp
cmp
cmc
cmp
cli
test
fadd
sar
aam
mov
icebp
lea
fcmove
ljmp
flds
in
ljmp
mov
xor
in
repz
loopne
addl
ror
loopne
jmp
hlt
xor
repnz
cld
icebp
clc
fistpll
ret
rcl
repz
dec
out
stc
mov
in
into
loop
aad
lds
out
aaa
into
xor
xor
std
in
enter
stc
xchg
mov
loope
jecxz
cmp
out
cld
int3
fidivrs
int3
ds
sar
cli
ror
clc
mov
jmp
xchg
neg
leave
not
into
ljmp
cmp
rol
hlt
xchg
std
lret
neg
in
sti
mov
leave
sarl
cli
cmc
cli
sti
fucomp
lret
fucomi
std
out
fdiv
leave
std
ret
into
test
lea
test
hlt
fadd
sti
out
xor
loop
icebp
fsubp
fdivr
into
lock
in
test
out
cli
aaa
hlt
std
leave
ljmp
loop
loop
sbb
int3
jmp
xchg
lock
in
cmp
lock
fmulp
int
loope
adc
rcr
ret
cli
cld
leave
in
repnz
cmc
ror
aam
xor
clc
shl
ffreep
les
sti
mov
jmp
cmp
hlt
in
aad
shl
stc
cmp
test
fsubp
loopne
in
int3
mov
out
xchg
ljmp
leave
push
in
shl
cld
repz
cmc
fldl2t
fldln2
in
in
in
xchg
repnz
out
das
lret
lock
fcmovb
std
xlat
cli
leave
in
mov
faddp
fsubr
lret
int
jmp
xor
call
lret
cmp
aam
rcl
clc
enter
jmp
loop
in
aad
cmp
cmp
call
out
in
loope
jmp
lret
dec
ror
jecxz
jmp
fidivrs
ror
cmp
ret
lret
mov
mov
sbb
aam
aam
aam
stc
sarb
fnstcw
aad
lock
filds
testb
adcl
fsubp
int
in
xlat
std
out
fcmovb
testb
loop
in
in
int
ret
aad
cli
sti
aad
ljmp
repnz
loopne
xlat
hlt
ret
and
cmp
in
ror
out
aad
hlt
lock
ror
xlat
fmulp
cmp
test
hlt
cli
aas
in
mov
jmp
div
xlat
cli
shrb
stc
cli
out
ss
xor
int3
icebp
sbb
fsubr
fsubrp
jmp
out
clc
xor
call
into
cmp
lock
cmc
orl
xchg
icebp
in
xchg
cli
xlat
cmp
into
in
ret
fdivrl
mov
stc
in
lea
clc
cmp
ljmp
add
add
clc
xor
add
jmp
rol
xlat
int
arpl
mov
mov
cmpsl
pop
imul
fnsetpm(287
std
out
sub
call
shr
jmp
in
sub
cmp
icebp
cmp
testb
out
mov
jmp
icebp
rol
sti
aad
fdivs
xor
std
cmp
test
call
idiv
movl
imul
ljmp
jecxz
div
hlt
clc
out
jmp
fdivrp
fdivp
in
mov
lea
xor
jmp
hlt
lock
out
cmp
enter
mov
xchg
out
iret
aam
shl
mul
ret
in
repnz
fcomp
rcr
fiadds
fcomp
leave
popl
repz
ss
cmp
jmp
sar
vcmpsd
jmp
lock
rcr
in
xchg
fdivrs
std
repz
int
aad
mov
fcmovnu
lret
cmp
shl
loope
xor
aam
icebp
iret
clc
ljmp
fdiv
cld
shl
sbb
icebp
std
mov
out
shl
into
out
ss
cli
shl
fcom
aad
out
loopne
out
aad
jmp
and
rcll
lock
int
repz
out
sti
cmp
jmp
jecxz
lret
cmp
fimull
xor
loope
in
in
fidivrs
lret
xor
iret
rcl
in
inc
in
loope
sbb
rcll
icebp
int3
std
repnz
fnsave
jmp
cmpl
roll
int
out
in
xchg
in
xor
in
shr
into
idivl
idiv
std
ret
cld
aas
mul
in
mov
test
xchg
dec
ret
rcl
clc
fstpt
in
fld
testb
mov
shl
ror
iret
sub
repnz
lret
fidivrl
hlt
cmp
rolb
std
cmp
int3
loop
loop
xchg
lret
in
shr
shl
cli
fcos
incl
xchg
cmp
fcmovu
addb
xor
xor
aam
shr
div
fcomp
in
out
movl
lea
aas
xor
in
fcmove
cmc
in
sti
test
into
std
xor
dec
ret
out
out
cmp
out
xchg
call
out
aaa
test
rcr
neg
in
not
jmp
jmp
orl
in
fdivs
cld
rcr
iret
cli
fcom
mov
fisttpll
sar
in
hlt
cmc
rcl
ss
fldpi
xor
in
rolb
aad
orl
out
icebp
lret
repz
aam
aam
shr
cmp
loop
fcmovu
std
hlt
sti
out
out
neg
fucomip
shl
incb
idivb
xor
fcom
rcl
into
testl
test
ror
icebp
roll
aaa
call
aad
lret
cmp
rolb
in
int
test
icebp
test
les
hlt
cmp
out
cmp
fdivr
sarb
aas
xchg
xchg
out
xchg
leave
into
int3
xlat
lret
in
cmp
shll
hlt
cld
loopne
fmul
loope
aad
clc
out
xchg
mov
fsubp
loope
xor
xor
out
shr
shr
out
fsub
clc
fdiv
cmc
call
jmp
jmp
in
iret
xlat
shl
jmp
test
in
ljmp
shl
iret
in
cmp
xor
loopne
shl
hlt
xchg
xchg
ret
lret
test
repz
xor
rol
shrb
ljmp
clc
cmc
repz
loopne
mov
xchg
ror
rol
ljmp
fsubr
cmc
test
cld
out
test
into
out
fucomi
test
ss
xor
int
loopne
adc
clc
aas
aam
in
out
in
iret
out
in
nop
xchg
call
aad
in
repnz
neg
addb
mov
xabort
xlat
fists
iret
out
fidivl
rolb
fcomip
cld
int3
in
jmp
loop
hlt
aam
xor
test
not
out
fcmovnu
std
fcmovnu
shl
jmp
mov
not
loop
out
out
repnz
aaa
xor
cmp
fmulp
sar
rol
jecxz
loop
mov
std
sub
into
in
icebp
in
std
loopne
out
testl
or
add
add
add
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
fistps
jle
movsl
add
out
fldl
filds
xlat
in
cmp
fidivs
fiaddl
hlt
filds
iret
nop
out
in
into
loope
out
repnz
aaa
cmp
ljmp
hlt
cld
cmc
std
jmp
cld
inc
iret
ficoml
in
ret
lock
lock
cmp
test
mov
rcl
xchg
enter
cld
lock
out
aad
stc
repz
lret
rol
jecxz
stc
aad
fcomip
into
mov
ror
out
ret
fsubrs
mul
lret
iret
divb
addb
clc
clc
jecxz
adc
loop
test
fsubrp
aad
enter
div
fcmovu
cmp
repz
call
call
mov
aaa
lret
stc
cmp
int3
faddp
cmp
loope
mov
enter
orb
ljmp
int3
int
add
in
enter
fmul
fdivrp
adcl
in
std
xor
lock
aad
sar
fdecstp
stc
in
jmp
call
aaa
test
cld
cmp
repnz
cmp
cmc
ljmp
iret
in
icebp
repz
jmp
ljmp
call
jecxz
out
iret
notb
jecxz
shll
ds
cmp
in
cmpl
addb
into
jmp
out
sub
sub
in
out
fstp
cmp
clc
cmp
stc
cmpb
loop
shl
aas
loope
lock
xchg
mov
aad
int3
int3
ss
imul
lret
hlt
sbb
loope
xchg
shl
mov
call
cs
std
cmp
std
loope
out
mov
loope
jmp
movb
mov
les
int3
aad
out
fprem1
cmp
test
faddl
stc
jecxz
sbb
rolb
aad
jmp
in
cmc
enter
fdivrp
fcmovnbe
loopne
rol
loop
mov
fdivr
lret
out
cmp
int
aaa
in
out
lret
neg
out
lret
fsub
sti
xchg
xlat
loopne
stc
mov
xor
ss
out
sti
lret
int
repnz
loope
cld
jmp
std
call
out
loop
cs
xor
in
out
in
rcl
int
cli
fidivrs
aas
icebp
call
stc
fdivrp
mov
in
loope
sti
stc
ljmp
shl
fdivrs
out
fimuls
xchg
test
in
shlb
icebp
aas
aaa
adc
ret
shr
lret
mul
orl
ljmp
hlt
jecxz
loopne
cmp
call
stc
repnz
icebp
mov
iret
repz
stc
repnz
fsubp
shl
ret
lock
loop
mov
out
in
rol
cli
hlt
jmp
cmp
aam
repnz
aas
in
rcr
test
lret
enter
out
loopne
icebp
xor
hlt
lret
fmulp
cld
incb
orl
out
loope
fdiv
into
cmp
fnstcw
cmp
std
in
sub
rolb
fdivr
decb
testb
shl
lret
shl
cmp
fcmovnbe
fdivrl
loope
in
iret
hlt
rclb
ret
neg
xor
loope
ljmp
xlat
testl
fdiv
xchg
jmp
aam
iret
loope
iret
cmc
cli
stc
loope
rcl
shl
out
stc
into
in
jecxz
out
loope
lock
cmp
fdiv
ds
in
ret
rcr
fsub
lock
adcb
aad
cmp
sti
out
out
rcr
rolb
ds
mov
cli
call
aam
not
cmp
cmp
cmp
in
ds
in
fcompp
ret
test
and
nop
lret
shl
stc
jecxz
int3
jmp
fcmovbe
sbb
stc
fisttpll
xchg
adcb
out
iret
ds
repnz
test
xlat
ret
lret
ffreep
shl
icebp
orb
int3
call
fidivrs
into
clc
loope
repnz
aad
xlat
jmp
shr
mov
test
enter
fdivl
cmp
cli
jecxz
sti
fld
lret
in
jmp
pushl
jmp
int
into
fst
das
inc
aam
ljmp
jle
add
iret
xchg
orl
jmp
out
int3
fidivrs
sarb
in
xchg
hlt
fdivrp
mov
or
int3
mov
aam
repz
lock
fdivp
rol
cli
hlt
test
fiadds
sbb
rorb
iret
aam
repnz
cmp
aad
div
xlat
mul
test
neg
test
repnz
shlb
clc
in
out
hlt
cmp
neg
repz
xlat
in
cmp
in
stc
xor
out
cli
nop
incl
leave
loope
jmp
loope
into
cmp
call
sbb
stc
int3
jmp
xor
out
cmp
cmc
ds
cmc
test
xlat
loop
and
decl
aad
aas
jecxz
xor
cli
lret
xlat
std
sbb
mul
sub
testb
in
jmp
xor
out
jmp
cli
call
aam
test
sarl
inc
cmp
test
clc
lret
loopne
int
repnz
rcl
xor
out
ror
clc
jmp
sbb
clc
xlat
cmp
sbb
jmp
and
xor
shlb
call
iret
cmp
xlat
out
ds
loop
call
loopne
out
icebp
xchg
enter
cli
into
les
in
sti
fninit
shl
hlt
loopne
xor
xchg
mov
lret
test
repnz
icebp
in
xor
out
jmp
int3
into
fdivp
neg
addb
stc
enter
in
out
ss
fxch
xor
ffree
ljmp
cli
icebp
cld
in
in
out
into
jmp
aaa
aaa
cmp
imul
cld
repnz
sar
lret
clc
mov
lock
repnz
fcmovu
jmp
cmp
shlb
cld
aad
ret
incl
in
jmp
xor
aam
jmp
out
fcmovu
repz
rcl
shl
testl
xor
cmp
faddl
out
hlt
cmp
jmp
lea
into
roll
ret
fstpt
stc
aas
cmc
iret
sti
cmp
test
mov
mov
ljmp
ljmp
fcmovbe
lret
clc
aam
roll
addb
nop
icebp
icebp
lock
sub
icebp
jmp
mul
int
test
ljmp
icebp
call
xchg
in
ret
icebp
ds
loopne
cld
loope
rolb
in
ljmp
aaa
iret
clc
out
jmp
jmp
incb
fldl2t
jmp
cli
cli
ljmp
loope
xlat
in
hlt
cs
rolb
aad
orl
out
out
cmp
xor
std
repnz
lret
in
call
ljmp
out
out
in
lock
sti
cmp
rcl
aaa
aad
xor
ljmp
in
icebp
test
lock
lret
repnz
in
int3
ds
in
iret
cmp
fucomi
fsubp
in
ret
lret
xchg
in
hlt
mov
fldlg2
iret
xlat
in
not
std
cmpl
out
fisttpll
sub
cli
jmp
repnz
aam
ffree
neg
cmp
mov
in
xchg
ljmp
aam
clc
fdivs
cmc
fdivr
hlt
xchg
aad
jmp
mov
cmp
aad
clc
out
shl
jmp
cmp
repz
icebp
fmull
call
loop
jmp
ret
lret
aam
xlat
loopne
ret
loope
cmp
jmp
fisttps
rcl
sub
fdiv
out
xbegin
mul
fsub
and
out
xchg
out
ret
int3
std
fidivrs
aas
stc
sar
loope
and
neg
out
out
test
lret
clc
out
push
std
fidivrs
rcl
xchg
inc
nop
fists
test
lock
enter
cld
loopne
ret
fcmovbe
fcmovnu
in
xlat
in
ret
stc
out
faddl
sar
int3
ret
ljmp
incb
orb
test
loop
xchg
jmp
fcomip
lret
std
std
in
lret
clc
iret
iret
icebp
in
stc
hlt
fsub
test
cli
fisttpll
shr
data16
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
jmp
cmp
vpextrw
enter
jmp
loop
std
loopne
stc
jmp
lret
rcr
call
loopne
int3
clc
cmp
jmp
mov
idiv
lret
lret
sarl
shl
iret
idiv
shr
sti
ret
orl
std
xchg
xchg
out
out
out
jecxz
cmp
aad
iret
clc
aam
sarl
ds
jmp
clc
leave
jecxz
and
int3
xlat
xor
ret
enter
push
aam
shl
cmp
leave
ret
mov
mov
in
test
in
cmp
jmp
lock
sbb
fisttps
lret
fildl
jmp
ss
aad
std
shl
fistpll
xlat
rolb
mov
call
in
cli
cmc
shr
sbb
xlat
mov
aad
fsubr
mov
dec
shl
ret
hlt
bnd
sub
jmp
hlt
fsubp
clc
aad
stc
in
iret
in
std
fucomp
out
in
int3
int
jmp
into
lock
test
cld
loop
jecxz
ds
mov
ljmp
repz
ror
hlt
and
sti
out
and
mov
lret
mov
shrb
lret
repz
loopne
lock
in
fdivr
fadds
in
rorb
xchg
add
neg
fdivrl
xor
rcl
cli
call
in
cmp
rcl
loope
clc
enter
int3
into
aam
loopne
repnz
in
iret
lret
clc
std
test
fdiv
mov
jecxz
rorb
xor
clc
div
cmp
repnz
sar
std
mul
jmp
in
fcmovne
incb
cli
out
iret
xor
loopne
in
jecxz
leave
test
mov
decl
ror
cli
out
sti
aas
iret
add
ds
xchg
roll
lret
in
mov
ret
into
xor
aaa
aaa
xor
fyl2xp1
loop
faddl
ljmp
aad
out
cmc
shl
aaa
aad
stc
cmp
in
in
lret
lret
rolb
out
aaa
divb
clc
aam
xchg
out
enter
int3
repz
enter
xor
adc
ret
cmp
into
test
mov
int
out
ljmp
xorl
in
dec
mov
hlt
nop
test
ret
jmp
int3
int3
ljmp
sti
lret
out
orb
mov
into
in
in
in
fcmovu
cmp
cmc
out
fucomip
test
mov
incl
lock
rcr
lock
lock
cld
aad
ljmp
test
jmp
out
int3
orb
xor
leave
ljmp
ds
rolb
leave
std
jmp
faddl
in
lret
ss
roll
fsubp
shl
aad
loope
lret
cmp
nop
xchg
in
out
icebp
enter
idivl
std
roll
mov
vpminub
cli
jecxz
int3
or
in
shr
xor
aad
call
shl
in
fnstsw
in
jmp
mov
loope
loopne
int3
fxch
repz
rcr
cmp
out
faddl
jmp
xchg
loopne
xor
iret
repnz
out
fnsave
cld
cld
sar
sub
fmuls
xchg
shr
div
xlat
fcmovnbe
jmp
cli
fucomp
fxtract
sub
icebp
fisttpll
ljmp
into
jmp
clc
stc
icebp
in
in
cmp
ljmp
roll
stc
imul
fst
leave
mov
xor
xor
stc
shl
fdivrp
fnstsw
flds
lret
and
std
rcl
test
in
cmp
xor
into
aam
out
rolb
mov
mov
xlat
sti
mov
shl
orl
cld
rcl
ss
aam
lock
rol
clc
repnz
mov
xchg
fiadds
loop
out
repnz
call
enter
dec
and
loopne
fdivr
lret
mov
fsub
out
out
out
jmp
ror
into
cmp
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
mov
call
jle
add
out
xlat
cmp
fsub
mov
mov
xchg
int3
out
xor
lret
cs
fucomi
aaa
f2xm1
cmp
test
loopne
fcomp
test
cld
ljmp
out
shrb
cli
out
xor
aad
cli
aam
fdivr
ss
mov
mov
ljmp
not
stc
int
ss
fdecstp
loopne
fiadds
jecxz
ljmp
in
xlat
aad
lret
cmc
call
loopne
rcl
ret
loop
mov
addl
repnz
aad
ss
lret
lock
test
ret
loope
nop
jmp
repz
lret
in
fdivr
loop
addl
enter
out
xchg
mov
repnz
ss
call
cli
fucom
hlt
mov
loope
push
mov
leave
ss
ret
aaa
call
fsub
ret
in
std
in
fisttps
test
aam
cmp
cs
int
ss
xchg
cmp
aad
sub
int3
fxch
std
in
mov
out
xor
int
cli
shl
aas
ret
lock
jecxz
leave
fcmove
mov
hlt
fisttpll
repnz
xlat
icebp
aad
into
into
in
mul
fstpt
mov
mov
test
cmc
xor
enter
fdivrp
aas
fdivr
cmp
mov
jmp
ljmp
std
xor
int3
in
stc
out
xor
jmp
fdivrl
div
idivb
roll
test
not
out
cmc
out
int3
xor
cmp
repz
neg
cmc
fdivrs
call
out
in
orb
cmp
into
xor
call
cmp
repz
mov
out
fmulp
jmp
mov
ljmp
cld
xlat
std
ret
out
neg
loopne
fmul
xlat
out
icebp
mov
xor
xor
lret
aaa
out
rcr
repz
repz
test
clc
fcomip
lret
jecxz
xchg
rcl
out
in
in
mov
idiv
out
ret
clc
clc
cld
call
fsubp
loop
shrb
rcl
repz
jmp
ror
hlt
sti
test
hlt
aas
fsub
aad
leave
loopne
lret
xchg
enter
aam
ss
fcmovnu
cli
loop
sti
cmpb
fdivr
in
in
jecxz
lds
out
int3
mul
hlt
lret
xlat
test
sti
out
loop
stc
std
in
jmp
aad
sar
out
fst
jmp
sar
ret
std
out
jmp
xlat
nop
enter
xchg
lock
hlt
ret
hlt
aam
ljmp
aam
aad
cld
repz
fmull
loope
mov
rcr
cmp
rcl
fstp
sti
sar
fmul
in
fsub
mov
fnsetpm(287
lret
mov
std
xchg
nop
xchg
ljmp
out
loope
cli
loope
hlt
out
fcmovnu
sti
std
jmp
xchg
fmulp
div
ret
ljmp
ret
test
jmp
test
adc
aad
loope
leave
shr
sti
aas
icebp
ds
rcl
xchg
stc
std
out
clc
int
out
mov
aad
xor
repnz
hlt
out
rcr
ffree
ds
call
flds
mov
loop
lret
in
das
sarb
ds
icebp
into
cmp
call
out
xchg
out
lret
xlat
cmc
fdivr
xor
std
aam
cli
xor
fdivp
ljmp
xor
cmp
into
testl
mov
ret
mov
std
xrelease
xor
divl
call
shl
ret
fadds
call
loope
in
loopne
cmp
aaa
repz
leave
loopne
adc
sarb
out
div
rolb
popl
aam
aad
jmp
push
cld
xor
faddl
mov
mov
ljmp
in
fmul
test
jmp
test
or
out
xchg
xchg
jecxz
xor
std
int3
out
hlt
jmp
aam
test
jecxz
mov
xchg
ljmp
mov
adc
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
cmp
sbb
add
hlt
lock
ret
sti
xor
cmp
in
aas
xor
jmp
stc
lret
addb
xor
aaa
out
aam
cld
cmp
int3
cmp
repnz
fdiv
sar
sti
hlt
fldl
mov
jmp
out
test
ss
in
repz
int3
les
flds
iret
into
mov
icebp
stc
int3
cs
lret
lock
fcomip
loopne
xchg
out
call
mov
ret
xchg
orb
in
repnz
into
rcr
xchg
enter
imul
icebp
repnz
addl
iret
in
fucom
ljmp
sbb
movb
lock
loop
xor
cld
xlat
in
cmp
leave
cld
xlat
aas
out
loop
fcmovbe
std
add
fucomip
in
jmp
out
fidivrs
in
ds
fadds
jecxz
in
loopne
into
repnz
das
int3
jmp
xlat
out
or
into
loope
ret
cmp
xchg
out
xchg
xchg
aaa
enter
xor
repnz
adc
aam
fildl
jmp
lret
mov
mov
loop
out
repz
out
sar
out
out
cld
repnz
sarl
call
in
jmp
sbb
rorb
ss
cli
xor
cmp
idivb
int
filds
sti
call
std
test
aam
leave
ljmp
cmc
fbstp
fstp
xchg
in
fdivp
adc
lock
iret
into
in
repz
cmp
out
mov
cli
lret
sti
in
int3
into
xchg
int3
xchg
loopne
shrl
cmp
in
std
hlt
sti
lock
in
xlat
aam
in
lret
in
icebp
loope
aam
shll
int
fxch
into
lret
clc
cmp
jmp
loop
test
xchg
rorb
rorb
fcmove
sti
fcomi
push
cmp
cmp
std
stc
fcmovu
fstp
jmp
fucomi
nop
dec
cmc
das
in
shr
repnz
neg
loopne
clc
mov
mov
in
test
mov
out
fyl2x
lock
fpatan
cmp
cmp
inc
in
aad
xchg
aaa
test
out
jmp
cmp
loope
aad
sbb
enter
mov
xchg
out
into
in
out
clc
jmp
sti
sti
rcr
iret
fcmovnb
loop
cli
xchg
stc
orb
nop
repz
rol
in
jmp
cmp
idivb
ret
fucom
rolb
loope
sub
div
lds
cli
out
lret
fucomip
lock
out
loop
std
jmp
xchg
into
xchg
lret
xor
xor
loopne
icebp
ret
jecxz
mov
fmulp
mov
leave
fldz
call
out
xlat
int3
rcl
xor
ffree
call
faddp
mov
int3
call
shl
shl
fldpi
sar
cmp
fcomi
cmp
cmp
ret
test
and
xchg
out
mov
ret
in
rcl
repnz
cli
fnstcw
ljmp
cli
decb
int
out
out
fucomp
cmp
fsubr
into
in
fcmovnbe
loopne
fucom
testl
xor
in
fcomp
cmp
cmp
aas
faddp
ds
add
cld
addl
ret
icebp
xor
cli
leave
cmp
lret
rcr
ds
xchg
loopne
imul
mov
pop
repnz
test
shl
aam
aad
fsubr
sbb
ds
rol
ljmp
jmp
test
sti
sub
fcomp
cmp
jmp
leave
int
and
hlt
leave
into
jmp
cmp
ljmp
ret
fiadds
in
lock
mov
leave
fmul
aaa
fnstsw
in
idiv
shr
cmc
aam
in
jecxz
xchg
and
neg
ljmp
enter
fdiv
sti
inc
in
inc
fninit
loopne
in
xchg
repz
aad
out
out
div
icebp
ror
int
in
int3
fistpll
cli
in
xlat
repz
out
xlat
std
cmp
idiv
repz
cmp
in
out
int
clc
lret
aas
testl
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
mov
int
into
movb
into
int
ror
cmpl
sti
mov
int3
xchg
pop
loope
xlat
aam
cmc
jmp
leave
repnz
ror
fldl
add
mov
out
ljmp
in
lret
std
clc
ds
ds
aam
aam
mov
fstp
nop
call
mov
out
into
xor
cmp
rcr
int3
cmp
aad
iret
fsub
sti
rol
imul
into
lret
sbb
fdivp
lret
cs
stc
hlt
out
cmp
cmp
hlt
mov
orl
cmp
xor
lret
rcr
test
cld
sbb
leave
stc
ljmp
clc
in
ret
fdiv
out
ljmp
cmc
cmp
aam
xchg
fsubr
in
xchg
icebp
call
fcom
ror
cli
aam
cmc
cld
std
sar
enter
loope
out
enter
loopne
leave
ss
sub
cmp
cmp
int3
repnz
loop
mov
fsubp
jecxz
mov
out
in
mov
clc
sti
out
cli
aam
fcmovne
stc
ljmp
shr
fmul
xchg
lret
ljmp
jmp
ljmp
in
fdivr
aad
aam
fsubp
loopne
jecxz
mov
and
icebp
cmp
int
into
aam
ljmp
in
stc
mov
lret
loopne
enter
xchg
xorl
hlt
rcr
lock
frndint
lds
fdivrp
addb
out
rcr
imul
cmp
fcmovbe
flds
ret
shl
in
in
cmp
jecxz
ss
cmp
fucom
jmp
cli
mov
leave
out
cld
aam
xor
ret
lret
fucomip
lret
fstpt
or
shl
idiv
cld
in
iret
xchg
loopne
out
in
jmp
stc
out
int3
in
aas
div
loopne
rcr
loope
loopne
mov
repnz
mov
lock
cs
int
out
stc
repnz
fadd
std
ljmp
int3
and
int3
xor
jmp
leave
xlat
fstp
hlt
cmc
lock
aam
test
fisttpl
and
repz
out
xor
std
xor
cmp
std
icebp
cld
xchg
hlt
fadd
repz
loope
sbb
sti
cld
std
jmp
out
sub
sti
cmp
sar
out
into
call
in
loope
cmp
fmulp
ljmp
xor
fcmovnbe
sti
in
cmp
out
lret
cld
out
enter
lret
out
lea
cs
ss
iret
sti
ds
cmp
stc
sar
sti
hlt
loopne
mov
into
jmp
xor
in
int
das
cli
fucompp
cmp
ret
test
cmp
neg
sti
jmp
xor
clc
xlat
lret
xor
cmp
cmp
aad
sti
cmp
idivb
addb
out
in
icebp
hlt
jmp
divb
clc
fdivr
cmp
jmp
stc
xchg
mov
orb
xor
ljmp
loopne
sar
enter
fstp
sti
lret
out
decl
sub
out
repnz
jecxz
ds
mov
cli
lret
nop
xchg
xchg
loopne
ret
lret
cmc
lret
mul
fdiv
out
std
loopne
aas
loope
fldl
loope
roll
ljmp
sti
hlt
sti
shl
test
mov
in
leave
mov
lret
cld
mov
lock
out
xlat
leave
out
in
out
hlt
rcl
cmp
out
rcr
call
icebp
fstp
loopne
test
xchg
xchg
jecxz
out
lock
ljmp
call
repnz
lea
sti
mov
into
iret
out
sarb
lret
into
rcr
fidivrs
out
rcr
jmp
fiadds
std
xchg
test
call
int
in
cmp
stc
repnz
repz
sti
lret
out
mov
into
adc
repnz
jmp
rcr
ds
ds
repnz
ret
in
out
enter
clc
ret
jmp
out
xor
loop
test
mov
loopne
mov
xchg
lret
stc
aad
enter
cmc
rol
cmc
jecxz
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
or
jle
xchg
add
ret
lock
loopne
fsubrp
xchg
mov
subb
out
into
fdivrs
fdivp
aam
fdivrp
std
xchg
cld
jmp
mov
into
lret
lock
aam
out
lock
fcmovu
cld
loop
shl
leave
add
mov
xlat
mov
fnstsw
loop
fnstcw
icebp
ret
in
clc
jecxz
out
nop
enter
out
call
in
xor
out
shl
fdivrl
in
stc
ret
testb
std
fmul
int
xchg
xchg
xlat
div
lret
cmp
int
aad
out
stc
call
out
nop
sbb
sti
mov
repnz
fcmove
cmp
cli
cmp
cli
cmp
jmp
ror
mov
int
xchg
out
and
lock
aad
cmp
cmp
xor
idivb
ret
fisttpl
xchg
fsubp
hlt
xor
shl
repnz
int
sar
loope
neg
cmp
call
dec
out
out
lret
out
clc
lret
out
in
imul
sti
aas
fcmovnb
mov
cli
loope
call
repz
aad
xor
int
hlt
int
ljmp
test
in
call
icebp
loop
iret
aad
in
rol
out
fstp
ljmp
test
fdivr
fdivr
mov
lret
lock
add
loop
clc
jmp
icebp
leave
stc
clc
sarb
rcr
orl
enter
jecxz
aam
jmp
hlt
fidivrl
sar
add
int3
fiadds
movb
int
icebp
cmp
aam
cmpl
ret
cmp
lock
ret
sti
xchg
jmp
mov
in
fdivs
stc
out
in
ror
jmp
loop
loopne
mov
mov
orl
das
out
rol
lret
aaa
cmpb
cmp
aad
lds
shl
rcr
leave
out
rorl
aad
xor
sti
out
hlt
aam
cli
and
cmp
lock
mov
ror
lret
std
in
cmp
int
rcr
in
cld
cmp
jecxz
cmp
iret
jecxz
rol
and
leave
mov
loop
test
iret
ljmp
ret
fimull
std
out
or
mov
aam
clc
enter
enter
jecxz
repz
sar
clc
test
out
mov
loope
out
repz
ss
fdivl
iret
rolb
out
jecxz
mov
std
int3
ljmp
jmp
rol
cmp
lret
std
rcl
cmp
ret
test
sub
fimuls
mov
out
enter
out
idiv
stc
fcmovu
shl
cld
xlat
xlat
call
ljmp
xchg
loope
rol
fdivs
cmp
into
cmp
sti
jecxz
aad
rolb
out
lret
mov
mov
fcomp
in
int
jmp
in
out
idiv
fcomi
cmp
in
sub
mov
lock
lret
jmp
ss
hlt
fdivrs
in
fadd
test
ret
out
call
hlt
in
rcl
fyl2x
shr
neg
ljmp
clc
xlat
loopne
sbb
stc
movb
sub
xor
in
lock
fcmovnu
ftst
cmp
aam
lret
out
clc
jmp
icebp
out
xor
enter
out
aas
fucomp
loopne
clc
in
fmulp
jmp
mov
int3
repz
xlat
call
repnz
testb
fdivr
out
les
xchg
out
repnz
das
aam
xor
iret
enter
iret
ljmp
roll
fstp
mov
enter
aaa
clc
hlt
ret
fdiv
cli
adc
enter
mov
mov
jmp
aad
lret
xor
std
icebp
fcmovb
cld
aam
leave
in
imul
in
ljmp
out
int
xor
in
cmc
cmp
ret
out
sti
out
std
mov
hlt
aas
xbegin
out
cmp
rcr
out
repnz
vpmulhw
jmp
call
xchg
int
jecxz
fcomi
xor
ss
cld
cmp
in
test
loope
fsubr
mov
out
lret
xchg
xor
fbstp
cmp
add
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
outsb
pop
gs
jle
lock
jmp
loope
not
loope
call
addl
loope
jecxz
jecxz
ror
cmp
fdiv
in
fdivr
fdivr
call
aam
fdiv
mov
out
loop
out
xor
cmp
xor
lds
fmull
loope
mov
cs
in
xor
cld
int3
clc
repnz
adc
loop
xchg
in
in
jmp
fcmovne
xchg
out
icebp
jmp
clc
call
xlat
cmp
std
out
xchg
test
stc
xchg
cli
fisttpl
in
xchg
std
hlt
fdivp
fdivp
repz
repz
cmc
and
fmulp
in
jecxz
adc
not
clc
test
sbb
in
sti
ljmp
out
rcl
xchg
in
in
shr
stc
hlt
fabs
jecxz
cmp
std
xlat
shl
stc
lret
int3
ljmp
jmp
jmp
aad
cmp
ret
cmc
std
test
in
int
sarl
out
xor
cmp
cmc
clc
rolb
movb
fsub
mov
loop
xor
out
call
aas
xlat
xlat
lock
icebp
aam
leave
loopne
mov
ljmp
cmc
in
out
cmp
loop
fcmovb
iret
neg
call
loopne
fmuls
xchg
shrl
idivl
aaa
out
idivl
in
fincstp
cmp
cmc
aam
cmp
xlat
out
mov
sti
in
jmp
lret
leave
rcl
fldl2t
leave
std
cmp
fiadds
fadds
loop
in
out
xlat
cmp
icebp
aaa
fnstcw
cmp
rolb
mov
mov
call
incb
aad
ret
cmp
fildl
sub
ffree
in
enter
loope
mov
popl
cmp
icebp
jmp
out
leave
rcr
roll
in
and
call
ret
enter
cld
xor
loopne
test
aad
idiv
mov
clc
in
leave
in
decl
leave
sar
iret
aaa
fdivrl
fxtract
lret
cld
cmp
fsincos
cli
out
into
leave
mov
xchg
out
repnz
vpsubsb
int
shl
shl
cld
shl
cmp
rolb
lret
in
in
xchg
fstl
lret
in
fucomp
cli
fld
loopne
repnz
mul
loopne
mov
ljmp
xlat
aad
cmp
sbb
cli
lret
jmp
cmp
ljmp
shll
cmp
rcl
xchg
loopne
out
cli
rcll
jmp
repnz
repz
shl
stc
cmp
in
rol
mul
jecxz
enter
addl
shl
ljmp
std
clc
rcl
xor
out
out
out
mov
jmp
lret
in
fdivrs
rcr
lock
idiv
call
mov
out
test
lock
idiv
xor
ror
repz
loop
cmp
aad
and
adcb
jmp
das
fcmovbe
icebp
xlat
cmp
loop
sti
jmp
orb
mov
xchg
lock
aad
clc
hlt
xor
shl
fcmovnu
jmp
rorl
in
aaa
xor
stc
std
sar
fcomi
sub
cld
std
cmp
in
fcmovu
in
ret
sti
xor
in
repnz
in
hlt
lret
call
out
sti
filds
into
orl
shl
ss
ss
out
shr
in
hlt
rorl
jmp
xchg
in
xchg
cmc
fcom
in
fcom
fnstsw
fcom
out
cmp
rorb
ror
decb
imul
rcr
iret
aam
int3
xlat
cmp
iret
rol
incb
clc
loope
xchg
aad
ret
in
cmp
icebp
int3
in
leave
into
cli
or
lock
sti
cli
enter
xchg
shll
ss
cld
in
cli
cmp
cmpl
adc
aam
mov
out
fst
fsub
xchg
sub
cs
cmp
rcr
ss
out
test
jecxz
in
std
roll
adc
enter
add
leave
rol
ret
int
cwtl
stos
cltd
fs
popf
std
scas
jle
xchg
add
repnz
hlt
clc
rol
xlat
xlat
repz
shl
repz
stc
mov
int3
in
out
call
int3
in
loope
iret
icebp
aam
shlb
cmpb
in
iret
std
sbb
out
nop
mov
sar
loop
clc
icebp
fnstenv
cmp
enter
aas
aam
ret
add
loope
clc
enter
lret
int
jecxz
shl
ret
cmp
icebp
aaa
stc
sbb
ret
xlat
in
mov
jmp
loope
shr
fcmovbe
out
ljmp
xlat
xchg
incl
testb
int
xbegin
in
cld
stc
fmul
int3
into
test
iret
shl
sti
fst
fsubrp
cmp
into
test
cmp
roll
mov
jmp
ror
in
jmp
out
xlat
icebp
out
out
sar
cld
fstp
loope
filds
imul
test
cmc
test
stc
cmp
clc
into
ljmp
aam
add
rol
loop
mov
in
xchg
int3
mov
repz
fcmove
out
aad
cmp
test
and
mov
adc
mov
xchg
out
popl
xor
cmp
faddl
sti
xchg
call
in
fmuls
icebp
xor
into
into
icebp
mul
cmp
clc
xor
cld
aam
ret
idivl
adc
rolb
xchg
aam
xor
cli
enter
loope
adc
clc
cmp
cld
cli
jmp
ret
sbb
loop
int
xchg
xchg
xor
loop
cld
hlt
repz
in
cli
loop,pt
test
roll
jmp
iret
hlt
vpinsrw
int3
in
cmp
into
cli
fcmovnbe
incb
jmp
loop
xchg
imul
shr
xor
not
cmp
xor
test
out
fcom
stc
cmc
loop
call
orl
cmp
cmp
loope
repz
incl
and
and
ljmp
xor
in
cmp
out
aas
rcr
ret
test
std
jmp
std
out
test
mov
loop
out
fcmovbe
in
fst
into
loope
fucom
fcmovnb
ret
testb
lock
loope
fmul
int
cli
leave
repz
xorl
fiadds
mov
loopne
test
aam
ror
cmp
stc
icebp
jmp
repnz
cmpl
nop
mov
fsubrp
shll
out
iret
xor
lock
cmp
cmc
shl
ret
in
fscale
enter
lock
loopne
out
xchg
sub
xor
fdivl
stc
loopne
int3
out
loope
decb
fisttpll
xchg
loopne
into
cmp
cli
stc
cmp
std
xor
shl
enter
decb
xor
fdiv
cli
neg
sti
shr
aam
out
cmp
int3
orl
test
in
out
into
int
clc
loop
cmc
lock
in
sbb
out
fucomi
int3
xchg
ret
call
cmp
cmp
jecxz
fcmovnb
shl
sbb
mov
shl
loope
loop
in
in
cmp
fsubr
cmp
loopne
fcomi
into
sbb
test
in
enter
test
out
popl
xor
aam
ljmp
loope
les
addl
repz
xlat
xor
aam
jmp
in
sar
les
icebp
sti
sti
fucom
testb
lret
cmp
xlat
fcmovb
test
orl
loop
fsubp
hlt
cmc
loopne
iret
sti
cli
cld
out
in
enter
rcl
roll
call
jecxz
xchg
iret
nop
xor
out
cli
sar
shl
cmp
shr
loope
cli
xchg
in
fucomi
test
lea
xor
icebp
int
jmp
loope
xor
cli
les
test
mov
leave
iret
into
xor
cmc
xor
ljmp
fmul
rcr
rcr
cmc
jecxz
in
fcmovnu
int3
out
mov
out
jecxz
fucomp
lret
push
cld
xchg
out
rcr
call
ret
fcmovne
call
jmp
test
out
iret
cmp
fldl
orl
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
cld
std
out
adc
add
mov
xchg
aaa
xor
fcmovbe
out
in
fxch
jmp
ret
test
xchg
faddl
das
aaa
icebp
in
aam
iret
aam
cmc
incl
in
mov
lret
test
cli
in
out
cmp
shl
neg
aas
mul
addb
orb
xor
iret
iret
repz
clc
aam
sar
in
cmp
leave
loopne
mov
mov
loopne
repnz
int3
in
fptan
lock
out
sar
fdiv
cli
les
mov
mov
int
rol
call
xor
shl
aas
ret
in
in
lds
in
xchg
aad
shl
hlt
aad
out
xor
or
cld
fdivr
xlat
leave
call
fcmovnbe
lret
int3
out
iret
jecxz
cmp
jmp
hlt
iret
cmp
adc
clc
mov
sti
jmp
xor
out
shr
jecxz
cmp
stc
std
ds
fiadds
xor
orl
fdivs
xlat
xor
out
jmp
stc
cli
repnz
loop
in
call
test
xorl
in
shr
out
xlat
lock
rcr
mov
in
shl
xchg
iret
icebp
xor
shl
ret
cmc
sti
mov
fnstsw
adc
mov
in
int
lret
fidivrs
les
lds
into
int3
test
divl
icebp
cmp
out
cli
cmp
fcmovb
out
in
ds
int
repz
cmc
clc
xor
cmp
xlat
in
rcl
cmc
stc
aas
cmp
call
rorl
cmc
cmc
cmp
xor
out
fcomp
cmp
testl
in
loop
aad
fxam
cmp
fidivrl
jmp
iret
out
xor
addb
std
fsubp
mov
cmp
xor
repz
fnstsw
cld
fucom
fsubrp
hlt
loope
out
ljmp
dec
repz
les
xor
xor
aad
cmp
repz
call
loop
cmp
call
sarl
out
xlat
aam
repnz
vpmulhuw
xchg
mov
xor
out
in
stc
cmc
out
cmp
shr
repz
lret
mov
sti
into
adcl
icebp
int
hlt
cmp
not
repnz
cmp
mov
out
xor
cmc
fmul
fcompp
cmp
in
icebp
aas
cmp
loopne
leave
mov
std
int
in
shl
mul
xlat
lock
icebp
hlt
cmp
adc
aas
xlat
aad
lret
loopne
xlat
leave
mov
cld
addl
in
int3
cmp
idiv
lret
cmp
fdivrs
repz
loop
mov
out
lea
xor
fdiv
hlt
aam
cmp
lock
shl
fcmovb
lock
aam
loope
sar
sar
cmp
sbb
lock
sbb
out
notl
aad
in
out
xor
into
icebp
icebp
push
lret
rolb
ret
xchg
call
in
in
repz
cld
fcmovnu
idivl
ror
shl
ffree
xor
out
nop
int3
out
int3
in
aad
xor
cld
rcl
leave
out
shl
jecxz
into
cld
rorl
test
out
jmp
mov
or
shl
into
cmp
stc
repnz
mul
loopne
aaa
fdivr
call
aas
fmuls
jecxz
lock
jmp
repz
cmc
add
cmp
std
call
in
out
out
repz
fmul
jecxz
aad
repnz
in
sbb
mul
shr
lock
repz
sbb
cmp
jecxz
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
outsb
mov
jle
add
loop
mov
dec
xchg
test
lret
stc
xor
shl
lret
cli
test
not
out
in
mov
rolb
xlat
jmp
xor
into
xlat
cmp
aas
int
shl
rol
sub
jecxz
stc
sub
lret
out
xchg
in
lret
xor
lret
out
hlt
fcom
addl
std
mov
out
iret
lock
hlt
aad
loope
stc
cmp
iret
sar
cli
jmp
icebp
in
sti
lret
mov
jmp
repz
repz
das
das
in
ret
jmp
cmp
loop
iret
clc
repz
add
mov
cs
xor
std
std
shr
sarl
rolb
test
test
ret
int
repz
in
hlt
hlt
cmp
cmp
lock
test
std
fldl
fcoml
repnz
fadd
cmp
in
cmp
ror
std
iret
call
in
mov
loopne
repz
nop
enter
hlt
std
jecxz
cmc
loop
call
cli
jecxz
incl
out
out
out
xor
in
repz
cmp
ds
repnz
repnz
mov
fxam
xlat
jmp
in
adcl
hlt
shr
fcomi
stc
sarb
fst
adc
adc
fcmove
nop
int3
xchg
adcb
in
fcmovnbe
out
shl
test
mov
test
loope
fnstsw
shrl
mov
sarb
cmp
loop
test
in
cli
leave
lret
jmp
xor
in
in
cmc
int3
enter
cmp
in
stc
jmp
aad
clc
out
fucomp
add
rclb
xchg
out
xor
shl
shl
int3
loope
repnz
leave
mov
ljmp
xchg
rcl
lock
enter
in
jecxz
sar
add
fcomip
loopne
mov
nop
sub
das
repz
in
jmp
div
xor
repz
fstpt
mov
jecxz
loopne
jmp
out
loopne
out
out
fnstcw
cmc
int3
aaa
loopne
jecxz
clc
out
icebp
shl
ret
sti
mov
std
loope
repz
iret
xor
stc
mul
repz
ljmp
shl
aas
std
clc
cli
test
popl
test
ss
into
icebp
in
cmp
repnz
sbb
mov
test
in
out
xchg
in
jmp
xor
xlat
in
cld
cmp
repz
out
xlat
fdivrp
call
adcb
sti
in
int3
out
ss
adc
in
xor
and
ljmp
out
repz
out
lret
cmp
lret
cmp
bnd
into
fdiv
loopne,pt
aam
orl
shl
loope
lret
int
int3
lock
roll
aas
cmc
sbb
ror
int
xor
ljmp
out
cmp
cld
neg
adc
cmp
ret
mov
jmp
out
int3
xlat
iret
cmp
out
sbb
rcr
stc
fcmovnb
enter
fcomp
flds
xchg
aad
shl
cmp
cld
cmp
inc
shl
cmp
repz
fsubrp
call
mov
xchg
fmul
lock
aas
sarl
jecxz
fmul
xchg
into
into
out
xchg
in
fadd
out
out
stc
fdivrs
aad
jecxz
std
fnstsw
cld
clc
sub
lret
testl
aam
fcom
cmp
cli
idivb
and
lock
out
nop
ret
rcl
fsubr
shr
jmp
leave
xor
roll
lret
xchg
ret
lea
xor
xor
out
ljmp
fldl
xchg
adcb
sub
out
loope
shl
cmp
iret
fcomip
ffreep
leave
fucomp
stc
loope
loop
hlt
out
jecxz
int
fisubrl
incl
xlat
test
lock
call
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
mov
jle
std
out
rorb
call
shlb
fidivrs
out
out
mov
leave
leave
fld1
nop
in
repnz
in
ror
fdiv
repz
neg
push
adc
fucomip
mov
adc
fstl
ljmp
sti
hlt
int
shl
aad
orb
test
loopne
jmp
fidivrl
fcomip
loopne
sar
push
std
xlat
sti
cmc
enter
orl
loop
sti
imul
lock
int3
aas
jmp
rcl
cmc
movb
iret
sti
lock
cmc
aad
out
fsubr
jmp
fiadds
roll
out
mov
test
shl
shl
cli
call
cmp
xor
aas
xlat
loop
test
lock
fdivp
xchg
aam
xor
xor
stc
into
filds
mov
mov
jmp
adc
aam
xor
out
sti
aad
shl
iret
add
out
testl
rol
stc
shl
fiaddl
rcl
inc
mov
lret
in
mov
mov
out
decb
xor
leave
enter
cmp
cmp
in
aaa
xchg
loopne
mov
movl
xchg
in
call
enter
aad
cld
rol
fildl
out
in
rcll
jmp
repnz
jmp
sti
in
xchg
lock
hlt
mov
xchg
jmp
aaa
rcl
aad
in
dec
out
rcr
shl
out
faddl
vpmulhw
int
bnd
jmp
iret
out
int3
int3
in
fsubr
iret
addb
ror
xchg
int3
int3
iret
fcomip
xor
jmp
out
aam
iret
repnz
rcl
faddl
rorb
clc
lret
out
std
jmp
cli
icebp
clc
lret
repz
cmp
fsub
call
std
repnz
loope
xor
cmp
cld
repnz
fnstcw
cli
loope
test
lret
loop
mov
test
shl
xchg
call
repz
fcomi
cmp
repz
in
repz
jecxz
jmp
rolb
fucomi
repz
cmc
iret
out
hlt
test
neg
rorb
fsub
mov
shr
icebp
ror
repnz
std
in
ljmp
cmp
fdivrp
imul
in
out
call
shll
sti
into
into
iret
out
cmp
out
lock
cmc
test
jmp
out
in
lock
aam
cmp
fmul
sti
loope
jecxz
in
addl
lret
fucomip
mov
lea
leave
out
aad
std
cmp
or
ret
shl
fidivrs
decl
mov
test
int
stc
frstpm(287
cmp
fadd
in
roll
rolb
out
mov
int3
addb
fmul
fcmovne
cmc
incb
repnz
cmc
xchg
lret
lea
ljmp
into
int
hlt
shl
vpsubq
mov
out
repz
xor
ret
std
cmp
repz
cmpl
std
shl
cmc
jmp
std
mov
loop
mov
cmp
mul
lret
fdivrs
icebp
in
addb
sti
call
std
in
lock
jmp
das
ror
ss
shl
jmp
xchg
rclb
iret
jecxz
cmp
in
ljmp
cli
cmp
fdivrp
test
test
iret
jmp
leave
iret
imul
cmp
iret
lock
fiaddl
out
in
int
cli
out
test
repnz
xor
in
fcomp
div
cmp
aam
aad
sti
fsubr
loope
mov
call
xor
ljmp
cmp
not
rcr
jmp
jmp
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
movsb
xchg
in
pop
mov
jle
test
xor
fmul
aam
fsin
cmp
cmpb
mov
test
test
leave
loopne
cld
leave
xchg
in
xchg
cs
out
out
dec
rcr
add
neg
aam
mov
cmp
out
repz
aaa
in
xor
jmp
sti
fcmovu
repz
testb
mov
fldl
aaa
lret
cmc
cli
out
cmc
in
cmpl
mov
into
lret
out
repnz
cmp
in
cli
aam
cli
hlt
out
incb
mov
sti
nop
std
int
jmp
aaa
out
cmp
lock
out
loopne
cld
cmp
rol
fcmovnb
ljmp
mov
ss
enter
cmp
into
fcmovnu
fucom
jecxz
out
mov
out
xchg
mov
xchg
in
test
fdiv
rcl
cmp
aad
cli
sub
loop
jmp
leave
loopne
addb
fmul
aaa
int3
call
jmp
sti
ds
cmp
fcmovb
incb
repnz
jmp
loope
int
xor
cmc
icebp
enter
cmp
cli
idiv
xchg
aam
popl
rolb
jmp
int3
in
out
cmp
loop
faddp
fsubr
cld
lea
lock
in
ds
fadd
and
mov
clc
jmp
sub
lret
mov
out
xor
hlt
lret
fcomi
neg
cmp
rolb
out
ret
int3
cmc
shl
sub
cmp
sub
cli
cmp
sbb
in
incb
test
mov
xor
int
int3
loop
not
xor
add
mov
leave
std
xchg
jmp
rol
cld
stc
sarb
hlt
rorl
test
into
call
xor
in
aaa
cmp
idiv
aad
stc
rcl
les
jmp
filds
nop
shr
mov
in
sarl
lds
shlb
ds
fiadds
jmp
mov
fmulp
out
ret
cli
int3
out
xlat
xlat
std
cli
rcr
std
loopne
ret
xchg
sbb
decb
into
sub
enter
ljmp
clc
and
aad
cmpb
in
ljmp
fld
repz
lock
fstpt
out
out
loope
addl
cld
call
aaa
shll
cli
out
jmp
fsub
sti
stc
in
jmp
repnz
out
jmp
sti
test
fadd
in
sti
mov
std
out
loop
test
xor
out
rcl
repz
ss
jmp
lock
call
icebp
aam
fisttpll
fadd
xchg
loop
xchg
loopne
ret
in
fucom
cmc
out
cmp
sarl
mov
leave
sbb
into
leave
call
adc
xor
hlt
std
enter
cmp
xchg
call
out
xchg
adc
out
out
cmp
shll
fiadds
and
fucom
in
jmp
sti
fmull
ror
lret
neg
aaa
call
out
xchg
rolb
incl
out
in
call
std
lock
loopne
addl
sti
xchg
lret
in
mov
repnz
repz
xor
lret
or
loopne
cmp
repnz
call
les
mov
imul
sar
cmp
into
ds
repz
ret
out
sbb
mov
in
incb
fstpt
idivb
in
fmul
fsub
out
shl
std
loope
neg
enter
fldl
vcvtdq2pd
std
out
fidivrl
in
les
mov
fdivp
out
jmp
xlat
sub
cld
int3
cmp
std
jmp
jecxz
cmc
cmp
enter
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
nop
xlat
test
sbb
aas
add
fcmovne
in
mov
rcl
sub
rcl
xlat
stc
clc
idivb
std
ret
cli
mov
jecxz
mov
test
xchg
out
xor
cli
xor
imul
cld
rcl
cmc
clc
out
aad
xchg
xchg
in
int3
mov
lret
call
stc
fcmovne
in
aaa
fcmovbe
ret
aam
test
repz
hlt
fsub
mov
fucomip
xor
lds
iret
in
imul
in
icebp
cmp
and
jecxz
call
orl
xlat
cld
lret
cmc
fcomip
fstpt
cld
std
sti
fsubp
fucomi
movb
iret
int
int3
test
fcomi
repz
fcmovnu
cmp
adc
jmp
in
int
enter
into
into
aas
ljmp
hlt
idiv
ret
in
cli
shl
ror
leave
clc
fcmovb
cli
cli
xchg
std
mov
jmp
repz
fdivrp
cmp
cmp
sarl
out
fucomip
loop
iret
iret
int3
xor
out
cmp
ror
jecxz
ret
fld
aam
cld
fadds
cmc
out
xor
shr
stc
repnz
iret
cli
iret
fcmovu
inc
rcl
aas
mov
jmp
jmp
shl
xor
lret
cmp
sarb
adc
div
vmovq
mov
inc
ret
lock
cmc
cmp
loop
loopne
rol
repnz
fadd
out
loope
ljmp
lock
lret
cmp
aas
aam
mov
cli
mov
fsub
or
lock
cmp
std
cmp
divb
loop
not
rolb
ffree
loop
iret
into
ret
out
cli
in
lret
cld
xlat
fdiv
test
sar
repz
lea
ror
mov
cs
xor
std
int
xor
sarl
lret
jmp
loope
repnz
xchg
xchg
jmp
not
cmp
clc
leave
clc
loop
ret
out
loopne
call
incl
loopne
out
jecxz
lret
aas
cmp
cli
xchg
leave
mov
int
mov
adcl
cld
sti
fcmove
jmp
cmp
idivl
cmp
sbb
cmp
loop
test
in
not
cld
idivl
stc
cld
lret
shl
sti
cmp
fiaddl
lret
fistl
in
ror
shl
hlt
cld
int
aam
stc
cmc
ret
rorl
in
int
in
jecxz
lret
jmp
icebp
xor
loop,pt
jecxz
hlt
ret
nop
loopne
xchg
repnz
ret
jecxz
sub
out
cmp
fsubp
hlt
iret
cmp
ret
xabort
xchg
call
test
imul
fstp
leave
stc
inc
test
cld
fdivrs
xor
out
iret
fistl
xor
aad
in
sar
aaa
fcomi
int
lock
fld
fcmovu
lret
lret
jmp
out
das
loope
cmp
xlat
ljmp
fucom
fnstcw
sar
leave
movl
ffreep
loopne
fadd
xor
lret
aad
fcomp
and
mov
in
sti
loop
loope
out
repnz
xlat
enter
aad
sub
fadds
loope
int
nop
int3
mov
in
lret
hlt
xor
rolb
fcomp
cmc
loopne
mov
xchg
in
lret
cmc
mov
xlat
into
xor
std
xor
test
aas
rol
imul
lock
into
xor
lock
lret
imul
sar
lret
sar
fcmovnu
fadd
xlat
xchg
out
mov
rol
stc
std
fstpt
xor
jecxz
loopne
test
jmp
test
jecxz
jecxz
sti
in
xchg
in
jmp
lock
in
div
ss
lret
repz
std
cld
mul
rol
jecxz
lret
int
in
ljmp
repz
cli
out
stc
ds
stc
sti
out
sti
loopne
out
mov
rcr
jecxz
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
test
adcb
lret
cmp
repnz
sbb
mov
ror
cmp
lret
leave
bnd
lret
fprem
fdivr
xor
in
leave
rcl
int3
cli
enter
fildl
xchg
int3
test
aad
stc
ret
std
hlt
loopne
rcr
lret
xchg
ret
int
rcl
cmp
cmp
and
cmp
xlat
shr
test
call
sti
test
stc
aas
fcmovu
movl
loop
hlt
out
fsqrt
fcmovnbe
fidivrl
cmp
cld
shll
shl
aad
in
in
iret
leave
decb
ljmp
std
fadd
clc
in
cmc
in
loope
xchg
sub
in
xchg
out
ljmp
ljmp
loope
ret
fadd
test
clc
stc
lret
in
shr
xchg
ret
loop
out
lret
clc
loop
rcl
idivl
sar
jmp
test
xchg
out
leave
sub
cli
ror
aam
div
xlat
cld
aaa
out
roll
sti
fcmovnu
in
xchg
loop
xor
stc
lock
clc
fcomp
ss
out
in
dec
rolb
enter
roll
clc
jmp
leave
aam
incl
fndisi(8087
xchg
into
int3
out
shl
int3
ret
aad
fst
fcmovne
cmp
int3
out
addb
hlt
out
xor
xchg
fisttps
xor
fmulp
imul
jmp
cmp
cmc
adc
out
stc
movb
ret
in
hlt
stc
ss
sub
out
xlat
lds
ljmp
lret
xchg
jecxz
hlt
sti
xlat
int3
fdivrp
lret
loope
shl
in
fcmovu
les
sti
xchg
roll
into
lret
fdivs
out
out
or
out
loop
cld
rol
add
jecxz
jmp
mov
lock
iret
xor
lret
incl
adc
aad
jecxz
neg
mov
int3
rcll
cmp
aad
aam
jmp
fxch
fscale
fcmovbe
fucomp
incb
out
lret
fmul
das
test
stc
fsub
and
and
jmp
mov
out
lea
xlat
xor
stc
icebp
imul
cmp
call
aam
mul
jecxz
test
out
sti
ret
cmp
xor
fdiv
xlat
fdivr
ffreep
rcl
test
out
ljmp
iret
clc
rcr
aam
in
xchg
mov
in
orl
cmc
cmp
into
cmc
div
rolb
loopne
lret
addb
test
iret
out
rol
jmp
rcr
into
fldl
mov
mov
shl
mov
lret
call
iret
cmp
fcomp
xchg
int3
add
iret
xchg
and
loopne
jmp
test
sub
fbstp
loopne
out
sti
test
fdivr
jmp
cmc
mov
ss
in
jecxz
lret
fdivrs
shl
aad
stc
aad
in
fldz
mov
ljmp
int3
aad
aaa
sti
ds
and
in
xlat
and
mov
out
out
icebp
div
in
lret
rcl
rcr
rol
xchg
rcl
lret
lock
xchg
aad
in
xor
fcomi
leave
sar
mul
cld
in
test
clc
xlat
xchg
mov
xor
xor
sti
fsubr
lret
faddp
fcmovbe
cmp
sbb
in
jecxz
xchg
mov
repz
sub
into
cmp
ds
xor
in
mov
mov
xchg
les
xor
xor
in
int3
jmp
sar
test
rol
div
sbb
stc
test
in
fdivp
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
data16
fwait
dec
jle
aas
add
int
xchg
icebp
ret
les
cld
cmp
icebp
cld
cmp
xlat
cmc
fdivr
inc
call
int
int
nop
clc
sarl
jecxz
fcomp
lock
repnz
in
incl
xchg
fucomi
out
mov
add
aad
ljmp
rcl
fadd
enter
out
in
fucomi
in
out
out
in
sub
rcl
cmc
not
int3
fmulp
ds
and
shr
sti
fucom
sti
enter
mov
ret
cli
icebp
aad
stc
int3
aam
sarl
shl
mov
enter
in
ljmp
xor
leave
shl
fidivrs
into
out
icebp
lds
cli
xchg
into
test
jmp
xor
xor
out
cld
lret
sti
cld
sar
aas
lock
shl
mov
stc
jmp
neg
jecxz
loop
out
xchg
repnz
xor
stc
aam
call
loopne
out
out
leave
decl
xchg
sbb
in
ss
cmp
fst
cmp
call
out
fcompp
xchg
cmp
xchg
out
mov
out
cmp
shl
cmp
rolb
in
lret
xchg
fcmovne
nop
in
xor
in
xlat
int
shr
cmp
loope
cli
loop
test
xchg
xor
xchg
shl
repz
call
pushl
sar
in
iret
loop
aad
in
cli
int
loope
rclb
in
rcl
in
call
sti
cmp
xlat
loop
loopne
stc
clc
int
test
repz
ret
fcmove
out
dec
in
ljmp
clc
roll
xchg
lret
in
shl
out
in
cli
das
lock
call
clc
lock
loopne
leave
clc
xchg
aam
imul
hlt
enter
iret
repnz
ds
in
cmp
lret
ljmp
xchg
clc
aad
repnz
hlt
cmp
cld
clc
cmp
sti
fcomi
ret
nop
jmp
test
jecxz
out
out
repz
aam
loop
iret
fistpll
jmp
lock
rcr
mov
subl
lret
into
in
aad
out
in
cmc
fcmovnbe
stc
sti
stc
aam
cli
loop
orb
aaa
in
jmp
in
cld
sar
cmp
or
shl
sub
ljmp
repnz
shr
out
rcr
icebp
ror
jmp
into
fcmovnbe
icebp
xchg
cmpb
cld
call
icebp
fiadds
aas
int
enter
cmc
enter
shl
loopne
xlat
test
orl
fdiv
out
icebp
repnz
cmp
fcmove
incl
fcmovu
fcoms
addl
iret
ljmp
repz
std
lret
out
jmp
shl
in
xor
stc
rcl
fnstenv
in
fldz
loop
rcl
ds
fdiv
repnz
loopne
stc
std
xchg
loop
mov
shlb
out
in
cmp
fsub
aam
aaa
into
lret
repnz
xlat
lock
out
lret
inc
rolb
jmp
vpslld
lret
cmp
ret
out
add
int3
in
loopne
nop
mov
int3
into
jmp
loope
rol
fsubr
in
fistpll
cmp
ds
fcmovb
sti
ljmp
lret
in
lret
jmp
iret
in
out
in
out
cmp
iret
or
sar
test
cmc
in
xchg
ret
aaa
xor
lret
jmp
ffreep
fdiv
addl
leave
int3
in
cld
cmp
xor
fsubr
mul
test
mov
jmp
xchg
loope
xor
sti
lock
out
sarb
cli
cmp
add
ret
fmull
std
jecxz
fst
rcl
shl
aaa
fsincos
sarb
loope
cmp
and
hlt
test
ljmp
int
shl
enter
shl
cmc
lds
jecxz
sbb
sti
mov
fimuls
adcb
add
add
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
loopne
fbstp
push
jle
aas
add
shl
in
ss
enter
xlat
ds
out
rcl
aas
stc
test
rol
cli
inc
loop
repnz
mov
in
fsubr
out
iret
dec
xor
xlat
ret
loope
fdivr
testl
call
leave
aas
in
aas
icebp
std
aad
ds
cli
call
loop
jmp
rcr
repz
cld
cmp
cmp
jmp
lock
ret
loope
loopne
fadd
nop
xchg
lret
xchg
and
ror
shl
fldln2
fdivr
dec
shr
sub
rol
xlat
mov
out
std
lea
int3
out
hlt
cli
sti
jmp
out
lock
ds
xchg
aas
lds
loope
lret
in
sti
xchg
enter
jmp
aam
dec
shr
shr
fld
ljmp
movl
clc
repz
repz
aad
fnstsw
faddp
cli
xlat
sar
in
out
std
dec
enter
shl
cmp
in
sarb
xor
vpminub
jecxz
ds
cmp
shl
adc
out
lret
into
xor
ljmp
rol
or
std
mov
fucomp
mov
in
lock
into
cli
cmp
cmp
shl
hlt
in
out
cmc
test
shr
loope
out
call
cmp
sar
cmp
repz
not
and
fisttpll
loope
ljmp
out
repz
neg
cmp
xlat
jmp
leave
mov
fucomi
in
addb
shll
int3
aas
cmp
or
loopne
in
in
in
addl
in
xor
cli
fucomip
in
repz
faddp
out
mov
div
mov
loope
cmpb
rcl
fdivs
clc
in
cmp
loope
xlat
aad
out
aam
in
mov
aaa
aam
rcl
shll
std
push
xlat
test
icebp
cmp
std
orb
rorb
call
std
out
jecxz
fcmovnb
flds
lret
lret
loopne
ljmp
xor
idivb
xlat
hlt
icebp
cmp
xlat
lock
xchg
out
cld
nop
out
cmc
repnz
fxch
fdivrl
in
fdivr
div
sbb
cmc
and
lret
cli
in
aam
repnz
test
hlt
lret
aad
aad
int3
shl
fcomp
ret
aam
in
out
rolb
shl
cmc
in
enter
out
faddl
ret
xchg
mov
mov
adcl
hlt
jecxz
in
call
loope
icebp
aam
in
imul
lret
fcmovnb
in
call
jmp
das
cmp
rcr
fcmovnb
out
repz
test
cmc
mov
iret
sti
xchg
in
xor
sar
cs
aas
flds
notrack
testl
fmull
xor
mov
in
iret
not
repz
into
aam
div
aam
fmuls
out
cmp
not
xor
repz
xor
ljmp
fdiv
fldl
nop
mov
out
out
out
xor
cli
out
shl
iret
shl
fdivr
roll
fdivr
mov
ss
shl
out
enter
mul
mul
cmp
lret
lret
call
aaa
stc
fdivl
repnz
fst
clc
xchg
fcmovu
neg
out
in
or
test
xchg
shl
ret
fdivs
idiv
jmp
stc
sar
ret
repz
or
xchg
xchg
out
iret
lock
jmp
out
lret
in
loope
loope
mul
loop
cmc
fisttps
sub
xor
stc
fdivs
fdivrl
lret
out
ret
jecxz
cli
repnz
cld
sar
sub
jmp
into
in
xor
lock
xor
jmp
fdiv
cld
int
aad
loope
mov
cli
out
in
cmp
orl
jmp
ret
ror
ret
rcl
je
repz
sbb
add
imulb
ljmp
loopne
test
ret
fmull
fiadds
mov
cmp
call
aad
fdivr
ret
fimuls
xchg
int3
out
cmc
ljmp
fcmovnb
loop
cli
rol
test
call
jecxz
loope
ljmp
sub
cmp
xlat
cmp
cmp
into
fsubp
out
addb
std
loope
fimuls
sub
sti
stc
roll
clc
clc
ret
clc
out
in
enter
sbb
std
nop
out
call
xor
repnz
aad
stc
repnz
fadds
cli
sub
xchg
lock
into
xor
sarl
std
out
lock
fstpt
clc
jmp
and
in
mov
icebp
neg
lret
cld
cmp
cld
hlt
in
shl
les
mov
cmc
repz
ljmp
stc
shl
aad
clc
aad
iret
cmp
loope
ljmp
leave
shr
out
xor
clc
cs
cli
repz
icebp
div
aad
in
in
fisttps
nop
fstp
loope
clc
rcl
fprem1
repz
cli
rcr
int3
aad
fcomp
mov
sti
loope
out
out
out
xchg
out
out
xor
fcomp
xabort
call
lret
cmp
aam
sar
fld
testb
in
in
bnd
fsincos
stc
leave
jecxz
loop
div
out
out
xchg
lea
jmp
shl
in
cmp
std
in
std
lret
std
out
sti
jecxz
in
in
incl
shr
fsub
int
ljmp
cmp
ret
mov
stc
int3
lock
out
in
cmp
ss
rcl
flds
xlat
aad
in
leave
out
loopne
fdivr
xchg
into
loop
ror
in
idiv
loopne
jecxz
aam
aas
shl
imul
ror
mov
addl
hlt
sarl
leave
lock
out
std
shl
loopne
aad
jmp
in
in
lret
loop
divb
int3
xlat
cmp
fcmovu
dec
int3
std
sar
test
aad
in
in
mov
mov
enter
cmp
cmp
cld
jmp
shl
loop
cli
out
ret
call
loop
call
notb
aaa
cmp
ss
aas
ftst
std
div
testl
mov
xor
aam
xor
ret
cli
lret
sar
std
ds
xchg
sti
cld
fucomp
cmc
ret
loope
out
addb
in
out
fmul
shl
int3
fcom
fadds
cli
leave
out
test
call
out
mov
shl
das
lock
cli
cld
test
and
jmp
loope
xchg
loop
adcl
xor
rcl
cmp
ret
add
flds
xchg
clc
jmp
fsubrp
out
push
cmp
and
inc
aad
loop
xchg
repnz
mov
xor
lock
repz
lock
out
hlt
loop
out
mov
xchg
fmul
hlt
test
ret
cmp
aaa
lret
loopne
leave
stc
in
repz
fadds
mul
lret
ficoms
enter
into
clc
fcomi
rol
loope
loopne
filds
in
mov
xchg
out
xchg
jmp
xor
xlat
rcr
cmp
ds
divb
sti
fildl
fsincos
out
repz
shr
leave
jmp
aam
cmp
fdivrs
xor
div
faddp
std
xchg
mov
xchg
mov
shr
xor
in
std
shl
cmp
in
in
roll
stc
lock
nop
out
int3
lret
int3
jmp
repnz
clc
cld
lret
rcr
cld
cmp
std
ljmp
mov
ret
ror
fsubr
lret
jmp
sar
sar
clc
jmp
loopne
loopne
adcl
add
int
vpaddusw
fstp
pop
mov
outsl
xchg
sbb
jle
aas
add
ret
cmp
out
fmulp
mul
lock
aas
not
rorb
fildl
lret
aas
out
fsubr
jmp
int
cli
sar
loop
test
xlat
fldl
iret
iret
orb
shl
rcr
cld
sti
fldl
loopne
mov
cld
incb
sub
mul
xor
sti
fcmovnu
cmp
loope
call
incb
loopne
ffreep
in
xor
cmp
loopne
ljmp
loope
cmp
ljmp
lret
int3
repz
leave
into
int3
in
cmp
cmp
in
cmp
fsubp
in
into
lock
xchg
aad
loopne
sti
jecxz
loope
aam
lret
out
rcr
xlat
in
cld
icebp
cmp
cmpb
aas
fsubrp
lret
int
into
in
in
ret
loopne
xor
lret
xor
clc
ljmp
aam
repz
cmp
sub
icebp
mov
loopne
repz
xor
out
std
ljmp
rolb
test
xchg
mov
ffreep
aaa
in
in
out
in
loopne
clc
sti
ret
lds
lret
out
xchg
int
hlt
clc
shl
aaa
fldl
loopne
in
dec
enter
sti
xchg
cld
xchg
fnstsw
loop
ret
fnsave
ljmp
jecxz
push
out
ret
stc
fcmovnu
in
dec
test
ret
enter
std
repz
loopne
aam
loopne
neg
test
jmp
lret
icebp
jecxz
sar
rcr
sti
icebp
test
mul
ljmp
std
xchg
ljmp
repz
in
aam
std
int
incb
std
decb
repnz
loopne
mov
shl
repnz
fiaddl
lds
fdiv
ljmp
xlat
xor
clc
iret
ds
icebp
sarl
ret
mov
xor
mov
xchg
out
ss
in
shr
cmp
rol
loopne
enter
aad
xabort
int
aam
xchg
hlt
leave
jmp
int
testb
fadd
faddp
mov
loopne
ljmp
shl
cs
cmp
hlt
cld
aad
in
in
cli
leave
in
in
std
xchg
icebp
out
loope
ss
out
cmp
cmc
int
loopne
aad
aas
lock
sbb
in
loopne
test
xor
int3
int
cmp
int3
jmp
cli
aad
test
shl
out
and
movl
repnz
and
cmc
cmp
std
not
xchg
in
loop
xchg
and
xor
xor
clc
cmc
icebp
iret
std
fdivrs
test
cmc
lret
out
jmp
loope
in
lret
xchg
ljmp
rcr
jmp
xor
mov
xlat
xchg
cld
xchg
incb
into
rcl
cmp
fmul
fcmovnu
shl
lock
aad
out
out
fdivr
xchg
loope
loope
loop
xor
cmp
idivb
loopne
incb
sti
lret
out
std
lea
out
int
in
in
cld
or
test
in
cli
in
fimull
ret
xor
fmul
hlt
hlt
or
std
aam
call
sti
cli
cld
int3
mov
repz
iret
not
out
cli
cmp
idivb
jmp
shl
xlat
repnz
mul
mov
in
shlb
cmc
loope
int
out
repz
ret
aam
cmp
into
lret
cli
shr
out
in
into
xlat
aad
out
aas
fdivrl
fnstcw
fadds
fsubr
lock
out
loop
xlat
cmp
stc
cmc
aad
jmp
in
xor
idiv
xchg
mov
loopne
orb
icebp
in
shl
int3
std
ror
icebp
aas
out
hlt
std
decl
out
jmp
jmp
fcom
xlat
push
xlat
outsb
shlb
xor
jle
aas
add
shrb
xor
aam
iret
into
into
loope
rcl
test
fmull
xor
rol
jmp
shl
lret
hlt
xor
stc
faddl
in
std
or
xchg
call
aad
sar
clc
cmp
cmp
int
call
lret
fstl
std
int3
fcomip
mul
int3
repnz
das
flds
std
lock
out
std
jecxz
mov
std
fsts
out
icebp
xor
push
hlt
icebp
out
aas
std
call
fcmovnu
into
lret
lea
out
fldlg2
iret
int3
repz
ss
cmp
aas
out
call
loope
enter
hlt
xchg
xor
in
divb
cmp
icebp
icebp
in
in
test
rcr
in
enter
repz
ss
out
sti
aam
cmp
sbb
ret
sarb
lret
xchg
xchg
cmp
jecxz
fcom
cmp
out
call
aad
out
ret
adc
mov
nop
xor
into
cmp
enter
cmp
jecxz
clc
out
cld
xchg
nop
shll
xor
loop
cmp
in
fmul
loope
out
neg
out
inc
xchg
ljmp
sar
cld
int3
out
fcomip
jmp
clc
repnz
sti
sbb
mov
repnz
ss
in
int3
cmp
test
into
repnz
aad
cmc
aam
clc
movl
shlb
aam
clc
addb
fadd
test
loope
out
leave
sub
in
repnz
cmp
out
fiadds
mov
mov
mul
lret
sub
out
jmp
lret
std
repnz
shl
xchg
out
fisttpll
out
out
cmp
fdivrs
fst
rol
loope
loope
in
jmp
jmp
call
aam
cmp
sub
cmp
iret
test
call
neg
mov
cld
out
icebp
icebp
in
in
ss
cmp
call
sar
hlt
fdiv
fimuls
xchg
sub
dec
jmp
loop
fcmove
movl
out
leave
mov
in
ljmp
jmp
in
int
cmp
repz
xor
shr
out
out
in
mov
nop
imul
call
call
ljmp
in
fdivp
in
in
mov
out
loopne
in
das
xlat
stc
icebp
cli
aam
cmp
shl
rcr
loop
sti
cld
frstpm(287
mov
sub
loope
iret
ror
icebp
in
cmp
fld
cli
std
ret
stc
loope
fsubp
ljmp
leave
leave
faddl
xlat
aam
out
cmp
shr
fcom
div
ret
fsubp
test
xor
int
aaa
cmp
in
fcomip
sar
cmp
hlt
enter
orb
repz
leave
cli
lret
int3
lret
out
into
sti
shr
lock
rcr
jecxz
iret
fucom
lock
sub
xor
enter
cli
repz
ds
repnz
add
in
iret
stc
in
loop
lock
cmp
fmul
into
out
idivl
in
loope
cld
idiv
cmc
sti
lret
ljmp
xlat
xor
int
xor
into
cld
into
fucomi
into
cmp
loope
in
test
int3
cmp
xchg
vpmovmskb
leave
repnz
or
loopne
aad
rolb
leave
fldz
in
ror
xchg
in
enter
leave
ror
lret
fnstsw
clc
xlat
fsub
aam
stc
test
xchg
leave
mov
lret
cmp
enter
aad
iret
shl
std
lret
stc
nop
into
mov
xchg
int3
repz
xor
fmul
cld
testl
ror
xchg
fimuls
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
rcr
je
popa
jle
aas
add
in
sub
fmul
iret
ret
out
sti
xlat
mov
enter
nop
in
into
lret
icebp
repz
fcmovnbe
out
cld
loope
jmp
mul
xchg
and
out
in
out
orl
int
ljmp
cmp
shr
aam
aas
jecxz
fxtract
fdiv
mov
fsubrp
iret
lock
cmp
hlt
out
cmp
test
out
loopne
test
xchg
rorl
loop
int
shr
xor
aas
stc
out
jecxz
fsub
repz
into
xchg
xchg
mov
ret
neg
in
jmp
lret
cli
fdivp
sti
cmp
xbegin
ror
jmp
ret
rcl
ss
lret
into
fidivrl
sar
cmc
jecxz
enter
repnz
clc
lret
in
leave
cmp
repnz
loope
stc
xchg
iret
rcl
xrelease
cmp
leave
jmp
fcmovnu
in
fistpll
loopne
sti
fisttps
loopne
out
jmp
in
sti
iret
ljmp
iret
icebp
std
mov
ret
enter
xchg
xchg
rol
call
shr
icebp
fucomp
test
hlt
rcl
jmp
faddp
std
jmp
std
mov
xlat
xor
cmp
cld
in
out
shl
xlat
std
loope
fmulp
aad
lret
loopne
nop
icebp
xchg
mov
stc
icebp
jmp
out
out
lock
in
fadd
cmp
and
enter
nop
out
xchg
sarb
enter
cmp
aas
loope
std
test
in
loope
decl
loopne
xor
hlt
xlat
repnz
fnstcw
icebp
iret
icebp
in
cld
addb
fiaddl
mov
ret
out
enter
jmp
jmp
into
cmc
loop
in
lret
mov
orl
out
xor
das
cmp
shl
hlt
ds
cmp
out
xlat
sti
ds
ds
cld
fisttpll
in
aam
vpaddusw
out
xor
cmc
aam
xchg
test
enter
loope
sub
test
in
lret
int
call
stc
jecxz
ror
xchg
mov
ljmp
mov
aam
cmp
cmp
out
aam
aas
addb
test
shl
mov
das
lret
lret
stc
clc
shl
jecxz
rol
out
orl
fabs
rolb
ret
enter
ljmp
shl
loopne
clc
ljmp
mov
stc
shl
out
std
enter
std
repz
xlat
rcr
xlat
jmp
mov
loopne
loop
out
mov
das
repz
ds
xlat
cmp
cmp
adc
lret
out
jecxz
fsubp
shr
xchg
not
call
cmp
sbb
call
mov
xchg
mov
sti
cmp
int3
enter
cli
lock
aad
addb
test
div
aad
loop
sti
sarl
sti
adc
lret
ds
test
test
loopne
fcomi
in
out
stc
xlat
sbb
fstp
out
aas
out
loopne
mul
xlat
mov
enter
shr
icebp
aam
iret
lret
test
cli
ds
mov
fdivrp
cmc
fiaddl
mov
xchg
xchg
out
cmc
rcr
xor
xor
icebp
out
repz
ret
xchg
cmp
jecxz
mov
int
stc
in
test
fdivrl
fcmovb
cmp
jecxz
enter
sti
into
mov
fnstcw
iret
xor
into
sbb
not
into
ret
jecxz
aad
and
fsubr
nop
and
test
hlt
cmp
fcmovnu
fcmovu
cmp
icebp
ds
fcmovb
mov
out
lret
iret
jmp
mov
int3
fidivs
in
loope
aaa
sarl
xor
in
xlat
cld
icebp
enter
fcmovne
mov
fsubrp
xor
hlt
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
mov
data16
aas
add
loop
in
repz
aaa
cmp
int
addl
fxch
ret
xchg
int
xchg
ljmp
fxch
fidivrs
shl
neg
rcl
jecxz
cmc
fiaddl
fiadds
cmp
cmp
ljmp
rol
cld
cld
aas
xlat
in
loope,pt
decb
in
lds
out
idiv
enter
jmp
adc
clc
xchg
in
fcmovnbe
xchg
mov
ss
jecxz
fdivl
cmc
addl
addb
test
hlt
adc
into
in
iret
stc
iret
cmp
shl
lret
sar
ret
cld
out
xlat
lret
out
in
in
ss
out
loop
hlt
sti
xlat
aaa
cmp
in
cld
out
xchg
shl
in
leave
int
in
sbb
repnz
jmp
hlt
out
inc
cli
repnz
stc
out
jecxz
orb
loop
xor
sti
cld
cs
rcr
int
loop
out
xchg
mov
decb
sar
xor
sti
sub
aas
lock
fcmovnu
cmp
out
iret
loop
les
into
cli
cmp
fdivrp
aas
in
rol
repz
fcmovb
ret
loope
shl
lret
enter
ljmp
out
inc
mov
lock
stc
int3
ljmp
jmp
fcomp
xor
rcr
lret
in
in
mov
out
std
shr
xor
iret
lret
in
cmp
icebp
fldl
test
faddp
ret
jmp
decb
repz
std
int
fst
cmc
sti
test
fscale
ljmp
loopne
jecxz
lea
xor
cmp
fidivrs
in
aas
cmp
aas
sti
testb
int3
loopne
filds
lret
icebp
xor
fidivrs
cli
sti
iret
fdivrp
xor
ret
ret
in
frndint
out
in
in
sub
ror
xor
ljmp
hlt
fst
mov
xchg
out
fdivr
out
aam
xchg
ret
cmc
fucomp
shl
out
sar
into
div
ret
roll
jecxz
lret
test
xor
jmp
div
in
int
shl
ffree
ljmp
in
loope
in
jmp
cs
sti
int
fstp
call
sti
cmp
hlt
aad
fsqrt
xor
loop
icebp
test
vcvttss2si
cmp
xor
cmp
shr
cld
aad
enter
fldln2
int
sbb
loopne
call
xor
call
jmp
ret
rcr
hlt
test
sub
call
in
fdivl
fnstcw
ljmp
iret
and
fneni(8087
fcmovbe
int3
in
ljmp
cli
in
icebp
call
repnz
loope
sub
std
add
call
call
fld1
cmp
aaa
aas
fldln2
repnz
test
fucom
mov
xchg
in
rorl
into
clc
ss
in
in
cld
orb
mov
fdivp
loope
ljmp
enter
clc
sti
sti
cmp
in
roll
jmp
fcomp
fists
cmc
xor
cmc
div
cmp
int3
sti
rolb
test
xlat
mov
jmp
hlt
icebp
ret
clc
fnstenv
cmp
sarb
cld
iret
fadd
out
cmc
test
sti
out
iret
out
incb
stc
repz
in
aam
fsubr
xorb
rorb
leave
xchg
lock
fld
jmp
cld
in
add
std
in
stc
leave
orl
test
idivl
cmp
ds
ret
stc
iret
in
enter
xchg
test
movb
lret
movl
rcl
mov
fstp
mov
xor
repnz
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
ret
mov
push
jle
add
out
into
std
call
lock
ds
cmp
shl
mov
stc
into
sarb
ljmp
xlat
aad
rcl
rcr
test
into
popl
lock
fsub
fnop
icebp
testl
cmc
in
mov
mov
ret
int
xor
cmp
lret
cmc
mul
add
sbb
in
out
in
xchg
bnd
sub
shrl
jmp
cmp
std
fucompp
fucomp
or
xchg
mov
vpaddw
loopne
int
and
fstpt
aam
mov
mov
in
and
test
rclb
ret
int3
out
xlat
cmp
out
int3
cmp
cmp
incl
in
leave
xchg
xchg
out
xchg
shll
cmc
aam
lret
sar
fadds
lea
mov
lock
cli
out
lret
aad
in
ds
mov
xchg
cld
repnz
in
mov
cs
in
cs
repnz
out
cmp
sti
out
in
jecxz
mul
call
xchg
xor
shl
in
aam
jmp
cmc
xlat
test
stc
jmp
rorb
int3
repnz
int3
xlat
xlat
out
cmp
hlt
cmc
ret
cmp
hlt
fildl
xchg
ror
fcmovnu
lock
cmp
aad
sar
cld
xchg
fisttpll
nop
fdiv
ljmp
enter
repz
stc
sbb
test
loop
cmp
ror
in
aaa
cmp
enter
div
into
stc
and
out
std
nop
in
jecxz
out
in
out
xor
cli
cld
cmp
call
repz
sub
ss
in
aam
dec
repz
rolb
clc
jmp
xchg
call
shlb
aam
aam
cmc
fadd
cmp
ljmp
mov
xchg
shl
call
cmp
ror
loopne
into
cmpb
fcmovnbe
loop
jmp
mov
stc
lock
lret
cmp
iret
rol
adc
clc
neg
rcr
stc
mov
stc
in
jmp
sub
fsubrs
clc
loope
jecxz
int
ret
incb
fsubr
mov
out
aad
enter
cmp
loop
rcl
rcr
hlt
repnz
ret
mov
fsubr
loop
in
fst
in
loop
iret
cli
cmp
idiv
lock
lock
jmp
int3
nop
test
icebp
int
repnz
fcmovb
fsub
fsub
mov
out
xchg
lret
xchg
mov
lret
cmp
leave
aad
cld
xlat
cmp
shl
test
jmp
shl
aad
in
in
mul
out
cli
fmul
xor
test
sti
test
cmc
lret
orl
xor
das
iret
in
int
incb
mov
enter
fisttps
neg
clc
int3
in
cmp
ret
fdiv
fprem
call
xlat
jmp
out
int3
mov
out
cld
in
repz
fcomip
cmp
cmc
loopne
stc
lock
in
in
faddl
rcl
jecxz
into
jmp
ss
icebp
test
lds
shl
ror
ss
out
shll
xor
fsubrp
enter
test
jecxz
clc
clc
mov
out
mov
fucom
fcomip
out
leave
repnz
rcl
fdivp
rcl
into
cmc
cli
clc
neg
aam
xchg
out
fsubr
in
mov
call
int
icebp
ljmp
mul
fisttpl
enter
xchg
call
sti
cmp
loope
fmul
cli
test
loop
jmp
int
sti
mov
jmp
out
cmp
inc
clc
jmp
aam
fadd
fstp
pusha
shl
mov
and
aas
add
int
into
aam
incl
shl
decb
xchg
loopne
ljmp
shl
repnz
out
clc
in
jecxz
in
cli
aad
ret
jmp
jmp
cs
hlt
repz
lret
cmp
faddp
loopne
jecxz
xchg
orl
cli
aam
lock
fldlg2
in
testb
enter
xchg
std
lock
loope
loop
stc
stc
xor
aam
shr
repnz
repz
aas
fcom
std
cmp
cmp
mov
nop
std
or
out
into
fcmovb
test
ss
cld
cmp
jmp
loop
out
rcr
or
xor
xor
rcr
repz
test
icebp
jecxz
cld
cmp
into
icebp
mov
fdivr
xchg
aad
out
aam
cld
aam
cli
in
call
cld
out
out
xchg
jmp
and
cld
in
xchg
lea
sub
fcmovnbe
cs
ss
repnz
cmp
hlt
xchg
rorl
test
in
cld
shl
ret
repnz
in
int
into
cmp
repz
fcomp
leave
call
rorl
in
aad
ljmp
rcl
fcomi
ret
mov
fmulp
in
lock
enter
sar
int3
fsincos
stc
out
ds
hlt
sbb
enter
fsubp
lea
rcl
out
lret
lret
in
in
fcmovnb
ret
out
in
icebp
xchg
std
roll
cmp
clc
repnz
xor
repz
in
fiaddl
mov
jecxz
frndint
cmc
cld
jmp
int3
in
cmp
ret
in
cli
adc
hlt
jmp
xor
xlat
lock
jecxz
test
addl
out
fmul
test
rcl
into
xor
aaa
stc
repz
aas
aad
in
test
fnop
sar
std
loopne
fst
std
nop
sub
loop
pushl
xabort
hlt
ss
xlat
loopne
loope
cld
shl
jecxz
vpsubq
std
jecxz
in
in
xchg
into
iret
repz
ljmp
lock
out
ljmp
stc
xchg
lret
loop
ret
cmp
fxch
jmp
leave
in
iret
in
into
shl
shr
fcomp
hlt
loope
loop
test
repnz
rcl
lock
not
lret
rol
icebp
aad
fucomp
adc
cmp
loop
xchg
test
out
test
into
cli
ss
iret
into
ds
cmp
xchg
cli
ret
test
xchg
cld
stc
ret
enter
xchg
shl
lret
ljmp
fistpll
sti
inc
aas
xlat
and
popl
icebp
xor
enter
fnstsw
ds
in
ret
shl
ljmp
icebp
push
hlt
out
fcomp
xor
fucomi
shr
repz
repnz
rolb
lret
out
sub
cmp
enter
cmc
stc
cli
aad
xlat
loop
fdecstp
faddl
lea
cli
lret
sti
cmp
in
inc
ljmp
lret
shl
repz
xor
sar
repz
cmc
jmp
mov
lds
shr
ret
icebp
iret
int
repz
loope
shlb
fcmovbe
div
movb
xchg
pushl
cmc
aad
fadds
ret
mov
leave
lret
sti
lret
call
loop
ror
cmp
aam
sti
sar
jecxz
ret
aad
test
cli
ljmp
rcl
enter
jmp
jmp
shr
les
xchg
test
jmp
lock
cli
cmpb
cmc
jmp
fdivrl
fdiv
ljmp
lret
cld
int3
out
repnz
in
xor
jmp
jecxz
into
in
out
xlat
xchg
cmp
out
fmulp
test
in
call
push
adc
shr
add
add
fcomp
fistps
je
jne
shlb
aas
add
enter
cmp
jecxz
adc
repnz
aad
in
xchg
cmp
hlt
out
cmp
enter
fidivl
neg
test
fadds
enter
aam
aad
fucomi
cmp
lret
leave
lock
shl
shl
cld
fldl2e
cld
std
jecxz
mov
nop
loop
xlat
leave
aam
xlat
out
loop
into
hlt
fsincos
cmp
xchg
fxam
out
jmp
enter
call
cli
neg
test
sbb
sti
sti
mov
xor
cld
icebp
test
fadd
leave
out
xlat
in
out
fiaddl
icebp
clc
jecxz
xchg
in
shr
mov
stc
xlat
cld
cli
int
int3
std
shr
neg
test
mov
testl
icebp
call
into
call
ror
jecxz
sar
ds
stc
mov
out
in
fucom
test
jecxz
cmc
cmp
flds
loope
in
jmp
in
call
lea
enter
aaa
rcr
int
aam
out
cmp
repnz
in
ljmp
jecxz
ret
rcl
fcmovbe
aad
in
lret
fprem1
in
aas
test
xchg
loopne
in
std
mov
into
mov
mov
enter
stc
aaa
in
fcmovu
cmp
int
iret
xchg
enter
fiadds
out
icebp
lret
ss
stc
xor
fmulp
out
cmc
fstpt
out
loop
fincstp
sti
test
in
shl
test
std
hlt
jecxz
xor
rcl
repnz
cmp
sub
fisttps
test
jmp
out
in
repnz
ror
fdivr
rcr
out
icebp
rol
fdecstp
repz
enter
lea
aaa
shll
aaa
idivl
fdivrl
cld
fdiv
test
ret
xchg
fcmovu
mov
xchg
into
xchg
jmp
shl
into
aam
loop
loop
testb
in
out
jmp
loop
out
in
lret
int
repz
fcmove
hlt
xor
out
leave
mov
cmc
dec
sar
shr
in
xor
repz
aaa
inc
lret
fcom
sar
xor
cmc
loop
fucomip
cmp
shr
test
adc
ljmp
rcr
iret
xlat
loop
sar
rcr
sti
loopne
in
std
fimuls
out
cmp
rcl
shl
cmp
fiadds
jecxz
xlat
lret
jmp
shl
in
int
out
cmc
shlb
divl
cld
xor
rcr
cld
in
rol
repnz
jmp
sti
movl
int3
lret
lock
ss
int
loop
in
int
sarl
hlt
jecxz
lret
int
in
cli
xchg
int
jmp
out
cmp
aas
clc
add
in
clc
mul
std
fildl
shr
in
hlt
into
int3
fdivr
xlat
ds
filds
jecxz
into
out
loope
mov
test
std
xor
repz
fmulp
fucom
jecxz
fcomi
lret
into
pop
xchg
shl
icebp
out
jmp
aas
cmp
cmp
enter
mov
jecxz
and
jmp
into
jmp
shl
into
repnz
mov
leave
xlat
call
repnz
xchg
sub
lret
out
fcmovu
out
clc
stc
cmc
ror
loope
xchg
hlt
enter
enter
call
repz
xor
repz
aad
enter
imul
ret
loop
ret
lret
int3
in
lock
std
and
aam
ror
das
fdivrs
std
cmp
ror
into
jecxz
ret
test
jmp
mul
shr
xlat
dec
out
lret
test
mov
clc
sti
in
fisttps
xchg
lret
lret
jmp
loope
fdivrs
aad
mul
fcmovne
lock
nop
int3
jecxz
cmc
aam
in
aam
aad
divl
ret
jecxz
in
ret
std
leave
int3
xchg
fdiv
mov
out
xlat
enter
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
cmp
ja
jle
add
jmp
cmp
shl
fptan
mov
xchg
mov
xchg
cs
cmp
lret
clc
lock
and
sub
out
les
fiadds
icebp
clc
sar
rcr
fucomp
shlb
adc
stc
test
jmp
mov
ljmp
push
jmp
int
icebp
fcmovnu
loope
fiaddl
jmp
hlt
sti
call
cmp
xlat
out
fiaddl
ret
in
in
repz
xchg
repz
int3
fadd
cmp
cmp
in
cmp
shl
xchg
or
jecxz
shr
jmp
shlb
icebp
ror
aad
icebp
fadd
lret
fiadds
nop
sub
cld
div
enter
inc
in
ret
aad
out
lds
out
shlb
aam
call
fadds
aam
fsub
mov
fst
shl
xor
stc
repz
in
ljmp
rolb
fucomip
addb
int
fcom
call
ror
cmp
fcomi
out
mov
loop
aam
clc
enter
or
cmp
cld
fmul
in
jmp
hlt
ret
fadds
sti
loope
xchg
xor
lret
shr
out
sarb
cmp
neg
fadd
cld
aad
jmp
nop
out
in
lock
jecxz
ret
in
lret
into
lret
stc
div
sti
icebp
cmp
mov
fiadds
fsubr
fucom
loop
lret
xor
cmp
loop
sar
jmp
test
lret
mov
fmul
jmp
ss
into
std
stc
cli
out
fcomi
adc
sbb
out
sti
in
fdivrp
xor
stc
clc
repz
cmp
cld
fst
iret
xchg
sti
fnop
mov
and
loope
xor
out
in
fcmovu
cld
in
repnz
cmc
loopne
out
fisttps
out
int
in
enter
repnz
in
cmp
lret
mul
ljmp
xchg
nop
xchg
xchg
int3
jmp
icebp
jmp
into
fsubr
into
in
push
fincstp
cld
xlat
ret
loope
mov
sbb
out
sti
into
ror
mov
int
in
out
stc
jmp
fcmovnu
cmc
aam
fcomi
in
fsub
std
leave
mov
lret
aaa
xor
aad
test
lret
fcomp
in
cmp
iret
rol
rol
loope
xlat
cli
lret
test
out
icebp
loope
xor
repnz
xor
loop
fdiv
sarb
shl
mov
jmp
mov
nop
xchg
test
sub
fdivl
ror
aam
ljmp
ret
enter
sar
adc
lock
xor
cmp
jmp
lock
loopne
stc
mov
int3
lret
out
jecxz
test
ret
not
enter
rcl
test
cmc
not
test
faddl
lret
divl
cld
hlt
sti
aam
ret
rol
hlt
mov
movl
lret
ret
in
leave
xlat
clc
out
call
repnz
loop
filds
shl
cmc
xchg
lock
clc
xor
into
idivb
div
shl
sar
mov
test
filds
int
aad
shl
out
int
out
loop
fistpll
out
cld
in
mov
dec
xchg
repnz
fcomi
shll
lret
rolb
aam
std
cmp
ljmp
aaa
ss
jmp
xlat
sti
loopne
in
std
addb
fdivrp
rcll
out
int
out
cli
fcomi
cmp
std
clc
cmp
loop
in
stc
lret
fcomi
ljmp
cmp
iret
rcr
cld
int
fstpt
aad
rorb
mov
call
jmp
out
repz
xor
jmp
int3
rol
aad
pop
pop
movsb
or
jnp
jle
add
not
lret
icebp
xchg
xchg
int3
xchg
test
repz
in
out
ss
rcl
cmp
fcmovb
enter
and
xchg
idivb
cli
shr
fmulp
lret
sar
jecxz
sar
aam
mov
int3
aad
leave
iret
fmulp
rorl
sarb
ss
repz
out
std
loope
cmp
addl
out
std
jmp
shr
aam
iret
shl
enter
cmp
fiaddl
ljmp
jecxz
jmp
cmp
aam
cmp
repnz
ret
cli
mov
jmp
shl
jmp
ret
aad
call
cld
in
xchg
repnz
leave
vpsubusb
xchg
xchg
decb
cmp
lock
out
ljmp
rcl
test
orb
fcmovbe
orb
lock
sti
sbb
jecxz
cli
in
call
imul
lret
icebp
in
mul
out
jmp
enter
stc
repnz
repz
fld
in
out
lret
ljmp
aaa
in
fprem1
sar
icebp
cmp
rcr
cmp
add
in
cmc
mov
into
lock
xorl
shll
out
test
not
cmc
fiadds
mov
cld
jmp
loope
cmp
in
in
repz
call
loopne
enter
leave
jmp
fucomip
shl
ror
ror
xor
lret
aas
leave
idiv
jecxz
fistpll
fdiv
sti
std
int3
fsubr
jmp
addl
aaa
sti
in
jmp
out
out
cmp
cli
test
in
dec
xchg
addl
jmp
cmp
jmp
cmp
mov
fcmove
out
xchg
roll
aad
xor
cmp
hlt
repz
cmc
rcr
rol
xchg
xchg
mov
rcl
sub
icebp
into
fmul
loopne
in
out
ds
aad
hlt
fdivrp
or
in
mov
in
sub
ret
in
cli
imul
ljmp
clc
cld
enter
dec
jmp
in
shr
xor
cmp
out
fmulp
cmp
in
cmp
sar
ror
call
in
cmp
int3
cmp
fdivr
clc
clc
sar
out
mov
mov
lock
jmp
leave
out
enter
aaa
clc
in
fdiv
shl
fcom
xlat
loope
shl
lret
mov
jmp
iret
rcl
aaa
cld
out
aad
loopne
cmp
in
fcomi
cmc
ret
adc
mov
rolb
shr
out
out
out
cmp
clc
sar
out
fildl
rclb
loopne
lret
lret
stc
xlat
sarl
xlat
fiadds
std
fmull
xchg
loopne
cmc
int
fnsave
aam
cmp
xlat
sti
inc
lock
out
in
fadd
std
ljmp
lret
aam
ds
rcl
sti
loope
mov
in
jecxz
test
jecxz
lret
in
cld
xlat
repz
aam
cmp
sbb
mov
jmp
jmp
xchg
xchg
mov
int
icebp
loop
jecxz
shl
std
sar
out
sarb
ret
cmp
fucompp
fadds
cmp
std
jmp
or
sarb
ror
fcomip
in
aam
aam
mov
idiv
test
cli
fcmove
loop
xor
int
jmp
aam
lret
loop
fcmovnbe
clc
lret
mul
mov
icebp
std
call
shll
ss
out
out
xlat
lock
rol
test
dec
repz
jmp
enter
int3
int3
in
cs
repz
shr
hlt
lret
std
fcmovu
addb
sbb
lret
rcr
bnd
std
enter
hlt
add
cmp
sar
rcr
aad
lret
fabs
in
jecxz
xchg
sarb
repz
in
out
lret
clc
add
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
aam
cmpsl
jg
jle
add
cmp
out
shl
cld
shl
test
addb
int3
xor
clc
icebp
int
std
or
jmp
jecxz
out
fldpi
nop
test
loop
in
out
out
xor
enter
int
fiaddl
in
cmc
cli
fdivp
mov
int
iret
loope
repnz
aad
cmp
fsincos
cmp
out
xchg
ret
orl
xor
repnz
leave
out
in
in
aas
enter
jecxz
in
mov
roll
loop
div
rcl
cmp
test
fcmovbe
rcr
xchg
enter
in
into
nop
hlt
jecxz
loop
out
out
xlat
dec
roll
iret
les
mov
into
out
rcr
lret
add
aaa
ret
icebp
iret
lret
lock
fadd
mov
aam
in
enter
out
sar
in
out
stc
lock
xor
into
int
std
stc
roll
xlat
rol
test
popl
stc
call
std
sar
std
aad
incb
xlat
fst
int
loopne
into
jmp
repnz
out
das
in
std
shl
int3
testb
out
test
lret
lock
call
idiv
loopne
cmp
fadd
in
test
aam
call
mov
repz
xor
fcomi
xor
ret
out
into
in
int
into
nop
loopne
fsub
ss
xor
rcl
cmc
ffree
sbb
mov
idivb
ffreep
cli
orb
leave
shl
shl
in
shlb
loop
loop
xlat
faddl
fstp
mov
jmp
jecxz
sub
fsub
lock
testl
mov
mov
lock
xchg
xchg
int3
repnz
leave
in
xor
fcomi
cmp
adc
sar
out
jmp
loopne
xchg
loop
xor
ss
jmp
cmp
int3
in
lock
imul
clc
int3
loopne
and
jmp
xabort
das
neg
cmp
ret
shl
cli
int3
mov
repz
adc
in
fnstenv
jmp
fdecstp
stc
fadds
aad
lds
mov
cmc
out
clc
mov
imul
ljmp
ljmp
addl
rol
xor
xor
out
jmp
rcl
lock
hlt
sti
ret
out
mov
in
int3
incb
into
cli
lret
lret
leave
incl
jmp
loope
loop
icebp
nop
xchg
mov
jecxz
int
cmp
cmp
jmp
std
xor
cmp
enter
lret
mov
jmp
xchg
icebp
in
jmp
shlb
shl
fsubr
lret
fisttpll
xchg
iret
ss
xlat
out
jmp
ljmp
test
fcomip
out
fstp
aas
loopne
shll
int
cmp
clc
icebp
stc
out
int3
in
out
flds
faddl
mov
in
in
mov
aad
loop
out
sar
adc
sbb
xchg
ds
loope
stc
fmull
shrb
int3
enter
hlt
cmp
filds
cli
int
in
jmp
repnz
in
fcmovnb
icebp
das
ds
std
fsubr
int
jecxz
jecxz
out
in
iret
sub
fcmovne
testb
cmp
cld
out
cld
idiv
aam
addl
fninit
cmp
out
cmc
sti
in
aaa
fucomip
aam
shl
ret
roll
nop
enter
jmp
aad
xor
fucompp
repnz
lock
orl
filds
out
xchg
repz
in
aaa
cld
enter
xlat
clc
std
test
std
test
in
mov
loopne
stc
into
std
lret
ljmp
aaa
hlt
out
int
mov
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
clc
rcrl
push
add
rol
into
jecxz
aad
test
hlt
fcmovb
call
mov
int
jmp
ljmp
cld
xlat
cmp
fdivp
loop
jmp
out
int3
rorl
lret
ljmp
loope
fstp
sar
sar
std
fcmovnb
jmp
jmp
cld
xchg
in
iret
lret
jecxz
int3
xor
aaa
fdivr
sbb
in
std
movb
loopne
out
nop
lock
in
out
ret
hlt
aam
lret
rcr
shl
orl
out
std
repnz
xlat
ljmp
cli
cmp
int3
cli
sbb
ljmp
fninit
adc
les
cmp
not
cmp
leave
lock
incb
in
repz
in
xchg
out
in
clc
xor
sarl
filds
out
rcl
int3
jecxz
into
lret
xchg
jmp
clc
icebp
cmp
ret
into
movb
int
out
in
in
loop
xchg
xor
in
ret
neg
int
fldl
ds
call
in
int
out
lock
ror
fcmove
cmp
int3
loope
sar
clc
sar
ret
test
xchg
mov
leave
cmc
cld
rcl
cld
icebp
test
repz
jmp
into
lret
leave
jecxz
decb
xor
cmp
jecxz
in
shl
call
cli
into
int3
into
fstl
in
enter
idivb
cmc
icebp
jmp
fsubp
xlat
repz
in
jmp
decb
in
sti
ss
clc
sar
cld
in
cmc
test
aam
in
aad
loop
std
fisttps
ret
iret
cmc
fistpll
cmp
and
sti
lock
fcomi
shr
ret
xor
xor
fdivs
ljmp
loopne
fdivr
fdivr
nop
jmp
mov
jmp
lock
out
out
xor
cmp
adc
xor
call
test
xchg
fsubr
in
enter
lea
das
cli
enter
cmc
jmp
aad
rol
out
fldl
leave
lret
in
call
xchg
das
das
shl
test
rcl
jmp
cli
cld
out
jmp
jmp
xor
out
jmp
icebp
icebp
repz
in
jmp
fmul
icebp
hlt
mov
repnz
sar
stc
xlat
aaa
lret
fidivrl
into
cmp
icebp
iret
std
lds
leave
fcomi
fmulp
mov
ljmp
cli
aaa
cmp
cli
testl
int3
jmp
adcb
idivb
stc
rcr
fdivp
aad
fdivrl
aad
repz
lret
mov
fcmovnu
mov
out
clc
xlat
div
fidivrs
fsub
fxch
jmp
fcmove
jecxz
incl
ret
lret
rcl
out
xlat
fiaddl
cmp
fcomp
in
mov
loopne
cld
icebp
shl
notb
cs
out
jecxz
clc
out
sti
in
ljmp
repnz
fldl
xor
sarb
stc
cld
icebp
cmp
ds
cld
test
mov
xchg
orl
repnz
into
out
lock
sti
neg
fsin
jmp
test
in
fcmovne
cli
repz
lret
int3
aaa
hlt
aad
aaa
cmc
lret
in
shl
into
in
fcomi
and
loop
div
lret
mov
int3
xor
ret
out
icebp
std
lock
sarl
shl
incb
sbb
repnz
xor
xor
aas
cmp
adc
clc
sti
addb
into
mov
rorl
int3
neg
cmp
shr
clc
sub
call
fcmovu
enter
leave
out
int3
shr
rcl
hlt
aaa
xlat
shl
shl
sar
repnz
shl
ret
ret
out
mov
xor
iret
cmp
leave
iret
aam
cmp
mov
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
push
loopne
sbb
or
aas
add
fincstp
ret
repz
stc
call
lret
leave
in
fcomip
lock
lret
jecxz
shll
fcmovbe
sbb
aam
fprem1
jecxz
fucomi
mov
test
call
rcr
aam
fcomip
flds
int
repnz
fdivs
aad
sti
into
xlat
loope
xlat
xor
out
fsubp
cld
into
out
or
xor
out
call
xor
ds
aam
sar
hlt
xor
std
in
in
fcmovnb
xchg
fdivs
xor
cmp
in
ror
fcmovu
loopne
in
sar
mov
aad
clc
mov
stc
sbb
mov
xor
rcl
xor
icebp
cmp
xlat
sar
fdivp
aad
cmp
out
int3
nop
mov
repnz
jmp
in
cmp
sar
out
repnz
std
testl
rolb
lock
ret
fmulp
ss
cmp
icebp
ret
loope
hlt
xchg
lret
ror
lea
xor
fcomi
cmp
cmc
cld
ret
sar
ffree
fnstsw
in
in
cld
shl
and
fsubr
fadds
iret
flds
in
ret
in
cli
loopne
loope
shrb
repz
stc
cmp
xor
out
loop
repz
mov
xor
ss
aaa
jmp
fdivp
cmc
aas
aaa
out
fadd
cli
in
jecxz
int3
fistl
ljmp
aad
rcr
xor
stc
clc
aas
cli
enter
jmp
fsub
mov
ror
jecxz
lret
lock
cmp
fmul
lock
jecxz,pt
mov
loopne
jmp
out
movb
shl
ror
xor
out
cmp
rolb
rcl
loopne
test
fabs
int
xchg
iret
out
int3
rol
rcr
repnz
loope
repz
out
fildl
int3
loopne
mov
aad
cmp
repnz
and
shl
in
aad
int
decl
lock
in
xor
iret
xor
int3
int3
rolb
repz
repnz
loop
in
shl
fsubp
lea
xor
iret
ret
lock
rcr
out
int3
test
iret
orl
cs
roll
aaa
aad
aam
orl
call
xor
in
lret
fcmove
hlt
aad
cmpl
sub
ljmp
ror
mov
leave
in
jmp
cmp
iret
out
hlt
repz
call
in
stc
xchg
in
orl
stc
cmp
leave
iret
cmp
ret
cmp
xor
std
out
into
loopne
fsubrp
out
ror
aad
cmp
lret
int
cmp
fstp
loope
cld
clc
icebp
cmc
xchg
clc
leave
fsub
in
ror
out
lret
xchg
repnz
in
cmp
call
leave
rol
shl
loopne
enter
jmp
repz
fcmovnu
cld
cmp
call
aas
stc
test
in
loop
into
fsub
loopne
and
iret
rcl
iret
hlt
ds
aad
lock
cmp
leave
fcmovnb
mov
test
imul
jecxz
xlat
fidivl
cld
ss
loope
in
fldl
imul
fimull
fsub
ret
aad
rcr
enter
idiv
repnz
fdivrp
or
repnz
out
out
jmp
cmp
in
clc
fcmovnbe
cmp
rcr
cmc
loopne
jmp
test
xchg
xchg
mov
sarb
xor
ds
aaa
fadd
aam
fsubp
call
mov
fstl
in
shll
sti
in
cld
aaa
aad
sbb
div
sti
std
rol
leave
clc
loop
int
lret
test
lret
jecxz
in
xor
shlb
xlat
cld
repz
mul
aad
xlat
fucomip
ret
loope
into
test
jmp
out
fcom
fcmovnbe
icebp
cmp
mov
movsbl
jmp
aam
aad
fstp
movsb
ficomps
cmp
or
jle
add
shl
cmp
jmp
sbb
int
in
jmp
in
out
xor
lock
fsubrp
ret
fiaddl
std
fstp
icebp
mov
jmp
in
repnz
call
repz
out
xchg
mov
fisttps
iret
out
fldcw
lret
xor
fdivr
cli
jmp
fidivrl
shl
sti
loope
adcl
test
loope
shl
jecxz
cmc
shll
into
loop
fcomip
xchg
enter
test
loop
out
loopne
in
cmp
lock
repz
rolb
mov
test
cmc
xlat
sub
sar
jmp
mul
cmp
rol
cmc
aad
nop
lret
icebp
ljmp
into
in
xor
stc
icebp
rcl
xlat
shl
addl
jecxz
mov
mov
hlt
jmp
into
mov
cmp
iret
fsubrp
cmp
out
xlat
out
rcl
sarb
ret
mov
cld
jmp
loope
in
hlt
ljmp
in
std
rcl
loopne
incl
in
les
call
cmp
lock
shr
xor
fiadds
call
test
aad
in
sti
hlt
clc
leave
out
cmc
ss
ret
out
test
orl
cmc
mov
lock
xlat
aaa
call
sar
jecxz
ret
adc
cli
leave
enter
ror
ss
cmp
cmp
aam
fdivr
xor
loopne
loope
fst
xchg
loopne
clc
xchg
xchg
xchg
xor
sar
icebp
in
icebp
fcomi
cmp
aam
incb
repz
xor
in
lret
xor
loopne
loope
imul
clc
mov
xlat
cmc
loop
fxch
in
cli
jmp
int
aam
ljmp
in
icebp
ljmp
loop
xchg
int3
int3
in
dec
lock
jecxz
int
lret
out
std
jmp
cmp
stc
xor
int
jmp
int3
sti
mov
in
imul
ror
lock
int3
ss
repnz
fdivp
fsub
in
rol
clc
leave
addb
xchg
jmp
in
lock
sbb
testl
xchg
aaa
out
out
ss
jmp
in
sti
cmp
jmp
cmp
clc
test
cld
testl
loopne
sub
fsubr
cmp
fsubp
jmp
sbb
or
subl
iret
out
out
hlt
xor
shl
fcomp
iret
xlat
in
leave
out
fimull
shrl
cmp
repnz
std
xor
rolb
jecxz
dec
test
cld
in
out
in
fucomip
lret
xchg
xchg
xchg
aaa
loop
xor
aam
out
in
loop
shl
shr
loop
fxch
mov
lea
orl
in
testl
xchg
addb
loopne
int
xor
repnz
xlat
xor
imul
cmp
aaa
loope
fdivp
xchg
fcomip
mov
sti
adc
ret
ret
out
xor
xlat
repz
hlt
rolb
or
in
mov
cmc
out
fmul
iret
out
into
neg
xor
or
orl
rol
enter
fdivrl
out
fnstsw
lock
xchg
aas
cmp
ljmp
int3
shr
repz
icebp
aad
xor
icebp
jmp
fnstcw
loopne
fndisi(8087
jecxz
mov
in
xchg
out
out
aam
std
stc
aad
incl
mov
test
flds
out
f2xm1
lret
sti
cld
stc
xlat
loope
fcmovbe
shl
jecxz
rcr
clc
in
lock
repnz
mov
aad
ss
hlt
cmp
cmp
ds
hlt
call
loope
lret
fld1
repnz
int
jmp
in
int3
cmp
out
xor
jmp
ret
lret
enter
int
cltd
movsb
imul
outsl
imul
add
clc
fcom
mul
leave
fcmovb
jecxz
call
mov
xchg
out
xor
repnz
out
clc
lret
test
mov
in
xchg
mov
jecxz
jmp
ljmp
rcr
xlat
xlat
shl
aad
sti
loopne
hlt
leave
fucom
jmp
xchg
mov
aaa
les
xor
sarl
std
mul
fimuls
idiv
in
lea
loop
aam
xor
sti
cmp
loopne
sbb
fdiv
sub
sbb
xchg
lret
enter
test
jecxz
rol
ds
xchg
int3
in
clc
xchg
test
cld
addb
icebp
aam
clc
in
loop
loop
addb
imul
loope
orb
into
das
xor
jmp
shll
rcl
fucomip
out
rcr
loop
test
ret
xbegin
lret
shr
div
aad
aaa
xor
sti
aas
aaa
repz
fdivrs
sbb
fiadds
mov
xor
divb
xor
rcr
rol
loope
enter
adc
call
clc
divb
cmp
int
cmp
jmp
jmp
ret
loop
call
loopne
enter
repz
lret
cmc
in
shr
out
loopne
ror
cld
hlt
out
testl
ffree
test
imul
fcom
in
std
shll
sar
int
clc
xchg
in
sti
lret
jmp
lret
lock
ror
in
das
aaa
aaa
xor
fcom
rol
lock
xlat
aad
int3
jecxz
lret
orb
ljmp
sar
loope
iret
lds
in
xlat
sti
decb
in
xor
out
fmul
fcomip
div
sti
test
out
aam
fxtract
fcmovbe
call
icebp
icebp
fstl
stc
repnz
cmp
jmp
in
xlat
call
fadds
out
loopne
xchg
aad
xor
jmp
iret
repz
out
repnz
cmp
xlat
enter
mov
orb
shlb
stc
shlb
idivl
lret
or
aam
out
call
leave
int
xchg
or
out
lock
rcl
fnstcw
aas
icebp
faddp
test
mov
fdiv
loope
fsubp
stc
call
repnz
shlb
fdivrl
fld1
neg
fsub
stc
xchg
xchg
xchg
xor
lret
repz
shl
cmp
cmc
clc
neg
fincstp
repnz
movb
int3
test
repnz
int
lret
lock
cmp
loopne
aam
cmc
addb
out
jecxz
enter
cmp
fdivp
sti
cmc
jmp
hlt
sar
aad
loopne
out
out
orl
into
rcr
sar
cld
xor
ret
cli
iret
out
loope
repnz
in
lret
lret
cmp
test
cmc
loope
int
int3
sti
in
mov
in
ss
cmc
aaa
test
int3
jmp
iret
icebp
mov
jmp
in
xchg
loope
loop
call
shr
sti
cmp
jmp
mul
aad
mov
jmp
orb
das
lret
ss
xlat
in
hlt
xor
test
fdivr
loopne
fdiv
jmp
sbb
jecxz
not
ljmp
ror
cmc
cli
cmp
fsubp
loopne
lds
into
xchg
jecxz
in
xchg
shl
shl
cmp
iret
lret
jmp
in
add
std
jecxz
addb
mov
ljmp
jmp
cmp
hlt
test
into
iret
loop
out
lret
mov
in
loope
rcl
test
out
xor
cmp
int
xor
shr
iret
cmp
xchg
fdiv
enter
int3
repnz
shr
shl
cmp
sub
sti
not
shl
hlt
jmp
out
xchg
iret
cmp
test
aaa
stc
ljmp
hlt
addb
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
clc
cmc
xchg
loopne
out
in
mov
shl
rolb
cmp
in
enter
fidivrs
ror
fld1
ret
ret
in
in
jecxz
loope
out
jmp
cmp
test
cmp
not
div
repz
nop
push
lret
jmp
lret
aad
aad
hlt
cmc
cli
cmp
aas
fcmovnb
enter
loop
fmul
call
icebp
mov
aaa
out
xor
cs
aas
lock
iret
sti
not
hlt
std
jmp
in
cli
int
jmp
repz
lret
sar
ffreep
lds
out
std
icebp
int3
in
test
sub
in
int
xor
out
aad
xchg
not
ret
cmc
jmp
fucomp
in
icebp
jmp
sub
iret
cmp
cmp
roll
ret
loope
loope
shr
nop
xchg
lock
in
xor
fcmovnbe
imul
lock
in
mov
fimuls
cmc
fdiv
int
iret
in
ljmp
loopne
repz
ret
iret
iret
loope
repnz
test
int3
shl
xchg
imul
call
stc
out
icebp
leave
in
shl
mov
sub
aad
test
divl
repnz
cmp
repnz
incb
test
jmp
idivb
fdivp
in
fistpll
ds
sbb
sub
mov
icebp
cmp
out
cmp
cmp
jecxz
cmp
aam
call
mov
or
shl
clc
fistpll
shr
xlat
in
shl
mov
stc
in
jmp
fcmovne
adc
adc
sub
xor
out
stc
dec
shl
xlat
rcl
xor
enter
fmul
int3
cmp
repnz
out
xor
in
enter
aaa
std
lock
lock
xchg
xchg
mov
lret
leave
out
xchg
mov
test
xor
cmc
cmp
aas
loopne
sar
add
sar
mov
lret
iret
fstl
hlt
jecxz
jecxz
fdivr
out
shr
cmp
cmp
loop
xchg
cmp
mov
out
into
loopne
xor
ret
shr
repnz
div
repz
les
test
iret
in
not
hlt
xor
not
out
shlb
fxch
std
repz
aad
call
cmp
jmp
push
loopne
out
cmp
aad
lret
fdivr
and
ljmp
call
sti
hlt
std
in
fcmovbe
icebp
loop
cli
cld
les
iret
xor
cmp
lock
cmp
repnz
bnd
fiadds
xchg
mov
das
clc
sub
iret
lret
out
cmc
out
iret
mul
in
sbb
ret
out
repz
fcomip
in
fidivl
jmp
repnz
cli
jmp
cmp
in
test
iret
jmp
fldl
sti
out
in
xor
rol
fidivrs
shl
clc
rolb
clc
jmp
adcb
out
jecxz
cld
aaa
repz
icebp
in
idivb
in
fimuls
rcr
cld
mov
enter
out
rcl
rcr
aad
test
fcmovnb
xchg
rorl
xor
cmp
ss
cmp
leave
cmp
ret
fsubp
adc
repnz
not
mov
orb
lret
into
jmp
ds
jmp
fbstp
ret
jmp
test
loope
int3
adc
ror
jecxz
clc
ljmp
sar
ret
aas
xchg
ret
test
lock
out
out
out
aaa
fcmovnu
aad
xor
shl
in
inc
stc
stc
orl
jmp
in
loop
in
in
cli
cmc
leave
int
out
cmp
iret
loope
fucompp
repz
in
leave
jecxz
jmp
mov
cs
jmp
jmp
aas
lock
test
push
add
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
mov
mov
aas
add
repnz
sti
jmp
mov
into
stc
addb
icebp
int3
cmp
enter
cmp
fdivrp
stc
aas
sar
adc
or
in
jmp
out
test
adc
aad
out
into
std
leave
fstp
rcr
add
int3
call
test
hlt
lock
cs
aaa
xor
cmp
rcl
jecxz
sti
ret
out
aas
lret
mov
repnz
xor
lret
out
fadds
ret
mov
mov
lret
lret
xchg
out
hlt
shr
cmp
ss
in
clc
adc
std
fdiv
jmp
test
aam
jmp
shl
hlt
ljmp
cmp
shl
cli
testl
in
repnz
fsubr
ljmp
ds
sti
enter
in
enter
loopne
in
mov
out
sar
fucomi
int3
test
ret
decl
in
and
in
in
out
ss
leave
cmp
idiv
loopne
xlat
cmp
clc
fst
repz
call
rcl
divb
loopne
xor
in
lret
hlt
rcl
addl
loope
in
repnz
fadd
cmc
hlt
int
fldl
fcom
xlat
sub
nop
test
rcl
jmp
cmp
clc
ljmp
push
ljmp
std
mov
mov
mov
int
cmp
lock
rcl
aad
cmp
sti
fcmovnu
jmp
test
mov
into
in
lea
cmp
icebp
cmc
in
fyl2x
ret
ret
sti
std
fcompp
fucom
loope
test
cmp
lret
out
aas
into
lret
aam
shl
xor
rorl
mov
hlt
in
shr
repnz
repnz
cmc
inc
loop
cli
fcomp
stc
jmp
mov
adcl
xchg
xlat
int
test
fcom
fsubp
ret
bnd
ret
mov
fiaddl
test
int3
rcl
loopne
xor
leave
fsubr
rcr
or
addl
test
xchg
xchg
cmc
xchg
xlat
icebp
cmp
xor
shr
aas
jmp
sar
stc
xchg
fisttps
test
fldl
ss
lret
aaa
lret
cmp
loopne
aas
shl
xchg
cmp
mov
mov
mov
xor
cmp
into
cmp
call
mov
out
out
cmp
aad
in
call
jmp
rcl
repz
xchg
mov
xlat
dec
sub
ljmp
lret
fdivl
sti
rcl
cmp
xorl
test
call
fcmovb
nop
shr
int3
repnz
int3
aam
out
rcr
clc
xlat
icebp
f2xm1
cli
out
stc
call
in
xchg
nop
in
out
shr
out
xor
loope
lret
cmp
faddp
stc
call
loope
iret
fsubrp
hlt
xchg
divl
clc
cli
repz
xlat
ljmp
repnz
sar
mov
orl
fstpt
leave
cmp
shr
cld
hlt
ret
mul
mov
fcos
loopne
out
out
out
lret
int
xlat
cmp
sti
int
dec
fiadds
ffree
enter
xchg
incb
cmp
fdivl
fadd
testb
mov
test
lret
fisttpll
aas
mov
out
aaa
in
xlat
ljmp
out
cld
call
bnd
xlat
in
into
cld
fcmovnu
rcl
cmpl
hlt
hlt
jecxz
testl
ror
hlt
into
cs
xor
cmc
xlat
not
faddl
jmp
int3
or
cmc
clc
lock
into
cmp
repz
loop
cld
cmc
mov
mov
xlat
add
loop
jecxz
cli
xor
clc
fcmovu
not
rol
lea
jmp
ret
ror
aam
mov
out
out
sbb
jle
rolb
test
xchg
loop
mov
in
jecxz
loop
cmp
cmp
sarl
testl
mov
test
shlb
xor
stc
in
fcmovbe
cmp
test
cli
out
int
fisttpl
jmp
aam
jecxz
ss
ss
lret
ror
stc
fnstsw
rcl
in
fsubrp
into
fimull
xlat
sti
fld
lock
std
ret
ffree
leave
out
test
clc
orb
loop
stc
stc
jmp
cmc
repnz
rolb
aad
std
jmp
icebp
mov
lea
clc
lock
repz
test
xchg
cmc
fmuls
clc
sti
in
repnz
aad
loope
mul
iret
cmp
bnd
loop
aad
repnz
fmull
loopne
leave
cmp
div
aaa
lret
lret
loop
ret
aam
mov
mov
leave
sar
cmp
cs
jmp
sar
out
fldl
fdivp
decl
test
ret
lret
fsubr
repnz
lret
fistpll
loop
fcmovb
loopne
in
cli
fucompp
loop
icebp
test
in
shl
div
into
xor
ror
cmp
cmp
fimull
mov
mov
rcl
loopne
int
hlt
cmp
incb
rol
cmp
loope
xchg
call
test
xor
in
xor
icebp
in
lret
sarl
roll
out
out
fdivr
loopne
xchg
loopne
ljmp
ds
sbb
call
cmp
loope
test
out
fdiv
std
mov
ljmp
fadd
cli
jmp
shl
cli
xlat
jmp
mov
sbb
out
fists
iret
lret
out
rol
loopne
int
lock
call
test
out
cli
int
loopne
enter
icebp
cmp
out
fadd
test
out
orl
sub
in
xchg
hlt
iret
sub
out
lret
xlat
push
loop
loope
out
aam
mov
sub
jmp
fildll
rol
sub
lock
in
ret
cli
add
jmp
int3
f2xm1
enter
mov
lret
lret
stc
repz
lret
xlat
lock
aas
cmc
in
ret
lret
shl
cmp
int3
mov
aam
ret
call
rcr
fsubp
cmp
shl
clc
leave
call
lret
repnz
aad
xor
not
lret
in
in
xlat
lret
cmpl
fimuls
dec
icebp
xchg
mov
mov
das
call
cli
std
cmp
rcr
loop
fidivrl
fcmovu
fimull
lret
xor
aad
ljmp
adc
clc
loop
rcl
fisttpl
rolb
xor
iret
jmp
loope
cmc
fcomp
out
hlt
int3
fldl
test
mov
into
in
sti
lret
lret
repz
fcmovnbe
out
ljmp
out
in
repnz
xchg
cmc
jmp
cli
repz
cmp
out
sar
rcl
neg
ror
incl
fcmovnu
out
loope
jmp
xor
fxch
in
fdivr
jecxz
clc
jecxz
cmp
hlt
int3
test
mov
repnz
icebp
fst
aas
cmp
ror
les
fucom
mov
repnz
mov
jmp
stc
fcmove
std
int3
in
in
hlt
shl
fcomi
ret
orb
fsubrp
icebp
out
loop
rcr
out
in
cmp
test
hlt
in
icebp
fcomp
jmp
in
out
nop
out
in
xor
neg
rcl
xor
fildl
fmulp
test
in
rcll
out
fcom
aaa
cld
sti
std
cmpb
in
rol
loope
std
ljmp
call
shrb
ljmp
not
fcom
loop
fsubr
cmp
inc
in
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
lock
call
int3
lret
call
lret
divb
xor
push
sti
orl
lds
out
shr
rol
out
xor
cld
aas
addb
in
stc
int
rcl
or
clc
xor
div
in
aam
in
out
loope
fcmovb
enter
loop
mov
incl
out
int
in
std
out
rolb
clc
ror
mov
cmc
in
enter
out
out
repz
ret
cmp
aas
out
cmp
clc
sarl
ret
mov
cmp
jmp
into
jmp
leave
shlb
xor
rcr
icebp
lock
ret
fcmovnbe
enter
mov
mov
lret
xor
repnz
xor
call
repz
loop
ret
mov
jmp
test
loop
in
ret
repnz
stc
addl
in
sti
mov
loope
ret
fcmove
in
cld
repz
rcr
or
out
cld
sti
cmc
leave
aam
fildl
repz
xchg
aaa
out
stc
enter
cmp
stc
cmp
out
in
out
leave
mov
xchg
test
ss
int3
repnz
leave
cmp
lret
rol
ds
ret
or
mov
mov
lret
fdivp
clc
vmaskmovdqu
cli
div
out
xor
sti
int
clc
aas
cld
lret
fcmove
out
ret
nop
rcr
adcl
xlat
lret
fsubr
fdiv
xor
shl
lret
loope
filds
ret
cmp
in
int3
out
shl
in
test
rcr
fucompp
test
xlat
frstpm(287
test
int3
out
lock
fnstcw
cmp
lock
cmp
lret
in
std
cli
fadd
mov
xlat
mov
clc
fcmovne
out
into
int3
rcl
les
lds
cmp
out
flds
stc
jecxz
ljmp
addb
stc
divb
xor
aad
sti
icebp
jmp
int
mov
mov
int3
int
repz
aam
sar
addb
enter
loopne
in
inc
out
in
idivl
sar
xor
fucomip
jecxz
std
ljmp
out
xchg
movb
aaa
xor
repnz
jecxz
into
aam
cld
test
aam
fcomi
int3
incb
fprem1
fld
fucomi
into
ljmp
sti
sbb
aam
enter
fsub
xchg
xchg
ror
ljmp
ds
ljmp
xchg
ljmp
xchg
test
mov
out
lret
cmc
cmp
in
cmc
cmp
out
out
in
in
xchg
aad
jmp
in
lock
shlb
in
shr
fidivl
clc
sar
shl
in
xlat
loope
fadds
stc
xchg
in
rcll
iret
lret
enter
xlat
in
aam
loopne
neg
lds
fucomp
xchg
stc
cmp
cmp
aad
sarl
repnz
fsubrp
mul
in
mov
xor
out
lock
lret
std
rol
cmp
enter
int
mov
fucom
aam
in
loop
rol
out
cmp
fldln2
and
cli
aas
icebp
sbb
aam
loop
mov
mov
ret
in
aad
aam
aam
rcr
xor
loopne
in
adcb
mov
fadd
repnz
cmc
fidivrs
cmc
testl
add
icebp
jecxz
int
lret
lret
lock
fsub
fiadds
sub
jecxz
sti
in
iret
fldl
cmc
aaa
in
xor
cli
out
leave
hlt
fld
cmp
test
int
in
mov
sub
stc
ror
aad
shl
aam
out
loop
hlt
std
aad
out
fucomp
int
fsubr
call
ss
ror
ror
shl
sti
aas
incl
add
inc
lock
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
mov
aas
add
std
repz
out
into
ljmp
xlat
ret
out
in
icebp
jmp
clc
out
sarb
aad
aad
adc
xchg
in
addl
call
lret
cld
ds
rcr
test
xlat
ret
ret
sub
fimull
call
loop
lret
in
fnsave
loopne
sti
loop
aas
lock
jmp
jecxz
int3
int
adcl
into
int3
into
sti
iret
fst
xlat
in
std
cmc
loope
lock
imul
mov
stc
filds
in
xor
ss
xor
fcmovnu
iret
std
fcmovu
test
out
test
cld
icebp
xchg
mov
out
xchg
out
xor
xor
into
rcl
cld
loopne
aad
ror
incl
fstl
shl
in
out
div
out
iret
cmp
cld
ror
shr
ds
fcmovnbe
mov
out
enter
addb
cmc
lret
fdivs
loope
in
idivl
icebp
cmp
add
fdivp
jmp
loop
xor
divl
cmp
cmp
test
test
xrelease
mov
xchg
sub
rcl
aaa
imul
stc
aad
fcmovbe
orb
fldl
int
leave
out
xor
xlat
xor
rcr
cmp
repz
rcr
lret
leave
leave
fsqrt
mov
out
rol
shl
repnz
icebp
loope
in
shl
jecxz
loope
mul
into
orb
repnz
mov
in
rcl
out
cmpb
testl
mov
incl
clc
xor
fcom
ss
xor
cmp
or
mov
aad
int3
stc
out
fucom
int
repz
fcmovnb
fucomp
xor
sub
call
lret
inc
in
int3
in
xchg
clc
xor
ljmp
out
jmp
sti
aam
sub
ffreep
stc
mov
mov
in
in
loopne
imul
ljmp
aad
roll
jmp
loop
iret
in
jmp
lret
mov
int
xor
push
test
sti
rcr
jmp
mov
out
test
cmp
sarb
lret
cld
jmp
int
xor
mov
mov
jecxz
sbb
loope
hlt
xchg
ror
xlat
call
cmp
leave
iret
jecxz
stc
ret
xchg
sti
cmc
leave
fists
xor
cmp
clc
xor
loop
div
dec
xchg
loop
in
xchg
fisttpll
aam
aad
rcl
aad
sti
cmpb
std
ds
in
in
mov
call
leave
int3
xor
aam
lock
cmp
fxam
shl
cld
test
lret
out
loopne
jecxz
mov
xchg
out
xor
ss
in
cmp
hlt
fcmovbe
out
adc
std
jmp
addb
enter
ss
cld
imul
push
repnz
cli
movl
lret
clc
call
iret
sar
repnz
aam
ljmp
iret
ljmp
lret
cmp
loopne
shr
rolb
incb
in
rclb
ror
sub
aaa
test
in
cmp
jmp
std
out
lock
repnz
sar
out
lock
cmp
addb
fdivp
ljmp
out
enter
shll
enter
cmp
xor
cli
test
repz
lret
out
cmc
mov
cmp
stc
dec
sti
fsub
faddp
xchg
fmulp
loope
clc
nop
in
out
addb
fxch
cmp
ss
sti
dec
sar
fadds
mov
xchg
clc
int
fildl
in
leave
xor
ror
idivl
jecxz
in
fdivrp
fninit
mov
fimuls
out
sti
ljmp
cmp
out
addb
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
lcall
aas
add
out
idiv
jmp
in
mov
int3
icebp
in
out
in
leave
fucomi
fldl
fcmovnu
mov
movl
lret
out
ss
in
cld
cmp
fcom
stc
rol
xchg
cli
in
mov
addl
neg
rcl
stc
ror
icebp
out
aad
addb
loope
loope
les
hlt
not
out
clc
enter
into
xor
cmp
shr
rol
mov
loopne
fdivrp
mov
enter
cmc
leave
shl
jmp
cmp
fdivl
cmp
repz
mov
in
iret
jecxz
into
loopne
mul
fcomi
iret
lret
icebp
std
jecxz
test
xlat
fsubp
ljmp
mov
loop
shlb
cmp
aam
cmp
div
std
fdivr
call
std
fcmovb
fsubr
xchg
jmp
loop
shr
in
fcmovbe
xlat
jmp
adc
clc
fdivr
cld
into
in
jmp
in
neg
cmc
aaa
iret
jmp
cmp
icebp
aas
leave
fstpt
jecxz
test
out
loop
call
cli
nop
int3
fiadds
repnz
cmp
fidivrs
repz
ds
ffree
fiadds
and
jmp
hlt
aad
shlb
stc
fucom
loope
aas
out
std
mov
sbb
addb
jmp
out
xor
sar
fsubrp
ret
repz
xlat
not
mov
cld
lret
fildl
shl
fcmove
aad
fdivrs
and
out
fadd
xchg
test
sti
mov
int3
in
aam
clc
xor
imul
fsubrp
jmp
rcl
fcom
sbb
xlat
xchg
fyl2xp1
mov
call
imul
fucomp
aam
ljmp
mov
in
fprem
dec
in
in
out
sti
loopne
aad
cmc
ljmp
imul
aad
test
repz
mov
clc
mov
lret
cld
mov
leave
fsubp
in
loopne
iret
ret
jecxz
iret
cli
frndint
shl
shl
jmp
fcomp
xchg
push
fsubp
test
div
rol
jecxz
cli
cmc
cmp
rol
jmp
adc
xchg
int
sub
in
hlt
iret
cs
lock
enter
cmc
test
rcr
test
leave
and
repnz
out
xor
cmc
out
shl
ljmp
in
cld
loope
and
out
ffree
fucomp
adcl
into
lret
lds
xor
dec
int3
fadd
hlt
fdiv
out
or
test
in
out
jecxz
xor
lret
sar
cli
out
rcr
hlt
mov
ljmp
icebp
rorb
lock
shr
cmp
loopne
and
test
or
loope
loope
xchg
xchg
divb
lret
ljmp
fdivp
cli
iret
fcomp
fnclex
out
test
fsubr
test
aam
das
xlat
aaa
ljmp
cmp
test
les
not
cmc
test
mov
and
xor
lret
iret
in
int
int
cli
stc
out
int
repz
shl
fxch
lret
mov
mov
cmc
xor
das
xor
aam
xlat
ret
cmc
faddl
mov
int3
lea
jmp
in
out
repz
std
hlt
cmp
shr
cmp
ljmp
lret
mov
enter
ss
repnz
loopne
sbb
out
std
flds
xchg
clc
cmp
cmp
xlat
out
out
loope
ds
test
ror
mov
mov
in
in
xor
cmp
hlt
fidivrl
lret
int
clc
into
fninit
repz
cli
test
call
lret
repz
in
xor
out
clc
fdivr
hlt
sar
sarl
xlat
repz
in
orb
in
and
loope
rcr
rcl
into
fcomi
shl
out
out
fsincos
and
enter
ljmp
das
iret
out
jecxz
cli
lret
aaa
repz
cli
in
xlat
fimull
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
loopne
cmc
mov
out
xchg
call
cmp
leave
fdivr
neg
cmc
cmp
sarl
sti
neg
out
mov
fmulp
fsubp
enter
in
in
not
clc
fcmovu
hlt
test
lock
filds
out
mov
shll
out
icebp
fst
out
fsincos
fiaddl
xchg
xchg
fmull
dec
test
int3
cmp
clc
lock
shl
in
fstp
fsqrt
out
call
out
repz
aam
lock
rcr
cmp
xchg
lock
sti
orl
neg
out
cmp
cli
rcr
cli
mov
lret
call
mov
loop
in
not
in
shlb
std
sub
shl
fcmovu
rol
in
sub
loop
repnz
nop
repz
stc
icebp
clc
into
aad
cmp
fldl
in
dec
or
loopne
test
jmp
cmp
ret
lret
sti
fsubrp
lock
out
icebp
in
iret
out
div
clc
loop
repnz
lock
aas
clc
loop
lret
int3
into
loop
out
shl
rcr
cli
cmc
cmpb
loop
std
cli
sti
enter
in
std
out
jecxz
xchg
repz
xor
lock
lock
lock
fdivrp
cld
cmp
aam
hlt
fmul
int3
or
sub
fisttpll
stc
shll
cmp
adc
imul
cmp
cli
out
in
into
jecxz
loop
shr
stc
xor
loopne
neg
rol
stc
fsub
aad
in
fmull
hlt
shr
aaa
xor
cld
xor
fcmovb
jmp
hlt
test
ret
aad
flds
iret
in
fucomip
in
lock
fcomp
out
into
sarb
cld
ret
xchg
cmc
repnz
ffreep
out
mov
rcl
test
out
in
aad
shl
cmp
std
cmp
mov
out
or
aam
in
repnz
jmp
lret
lret
jecxz
std
fstpt
fcmovnb
aam
cmp
leave
lock
xor
ret
xor
clc
aam
xlat
xlat
aaa
xor
in
orl
enter
in
mov
aam
shl
in
sti
out
fidivrs
roll
leave
movl
xchg
mov
aam
xor
cli
bnd
repz
shl
loop
clc
mov
int
iret
int
in
jmp
cmp
aaa
shl
aas
lret
int3
rcl
out
mov
jecxz
loope
stc
lret
test
div
test
div
leave
fcom
lret
icebp
cmp
incl
icebp
call
xlat
lret
lret
ror
fcmovbe
fcmovu
loopne
faddl
fimull
out
rolb
ret
lret
test
cmp
cmp
test
jecxz
in
cld
fxch
mov
in
xchg
divb
cmp
fcomp
out
xor
fdivl
hlt
ffreep
stc
neg
stc
out
add
out
xchg
call
ret
jmp
repz
lret
sbb
aas
cmp
loop
call
mov
icebp
xchg
into
loope
jecxz
xlat
cld
ljmp
in
rol
ret
lret
lds
ror
ret
cmp
aad
cmp
in
fmulp
shll
repnz
enter
clc
xchg
sar
cmp
call
std
ds
int3
stc
ror
icebp
cmc
loope
jecxz
mov
mov
mov
repnz
in
rcr
ret
iret
lret
lret
shr
ret
loope
fdivrp
jmp
fcmovb
mov
std
fisttpll
loope
xor
cmp
fdivr
int
repz
in
testb
mov
stc
int
shr
or
in
aam
call
cmp
call
xchg
int
div
stc
xor
loopne
loop
test
clc
in
div
movl
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fstl
es
mov
jg
scas
add
incb
xchg
out
in
enter
aam
sti
std
rcr
in
std
sar
call
jecxz
lock
lea
out
call
fnstcw
stc
in
iret
loop
lock
fcomp
nop
sti
mov
stc
iret
lock
out
ds
in
sbb
faddp
jmp
test
test
das
in
test
cmp
xor
call
fdivrp
stc
xchg
aam
aad
lock
in
out
cmp
cmc
clc
clc
ds
sbb
aam
hlt
fcmovnu
in
repz
rol
or
clc
shll
out
aam
adc
cmc
stc
xor
fadd
out
fdivr
ror
xchg
loop
aam
neg
cli
icebp
fstp
cmp
cmc
rcr
cmc
repz
repnz
call
icebp
xchg
test
mov
clc
fptan
sub
into
fcmovnb
repnz
cmc
ret
call
out
mov
aam
not
int
not
fdivrs
jmp
aas
sti
icebp
aad
mov
in
jecxz
out
hlt
test
cmc
in
jmp
out
lock
shr
clc
sbb
leave
fstp
std
fsubr
out
mov
shll
cmc
fcmovnbe
std
clc
not
aad
adc
repz
vpsubsw
in
ffreep
ljmp
icebp
int3
repnz
aaa
fdivs
xlat
divl
rorl
xchg
icebp
cmp
icebp
mov
aam
loope
cmp
aad
aam
cli
icebp
xchg
and
cld
jmp
mov
and
icebp
in
ret
cmp
cmp
filds
shl
fst
fsub
jmp
loope
sub
cmp
fadds
repz
out
leave
xchg
mov
rolb
int3
sub
out
into
repz
xlat
loop
cmp
cld
cli
addb
out
mov
mov
loopne
ror
sti
out
hlt
shr
enter
ds
mov
jmp
in
sbb
std
mov
int
ret
int3
fcmove
icebp
lret
ret
addl
out
loopne
and
faddl
aaa
ljmp
addl
in
sbb
ljmp
std
fcmove
cld
cmp
in
std
std
hlt
sti
out
orb
in
into
out
int
repnz
call
aam
lock
stc
lret
int3
int3
cld
inc
in
mov
aam
xor
lret
int3
pushl
aaa
ret
out
cmp
ljmp
orb
ret
hlt
int3
repnz
cmp
out
mov
icebp
imulb
xor
leave
divb
lret
out
lret
out
fdivr
jecxz
mov
les
jecxz
sar
adc
xor
out
std
ror
cld
in
cmp
faddl
in
cmc
int
or
lret
mov
in
shlb
int
sarl
std
rcl
div
add
fmuls
in
shr
jmp
std
hlt
cmp
aad
cmp
in
and
sar
movl
movl
std
cmp
ret
stc
test
sub
enter
fimuls
mov
leave
jmp
aad
into
xor
imul
aas
test
call
fmul
ljmp
jecxz
cmp
fdivr
cmp
shl
sti
fdecstp
loopne
testl
ljmp
out
cmp
fdivs
aas
loope
fdecstp
clc
test
cmc
test
ljmp
repnz
mov
lock
in
ror
ds
cli
ret
lock
movl
fldl
cmp
xlat
cmp
cmp
rol
icebp
icebp
les
adcb
loope
loop
rol
rcl
out
iret
into
xlat
adc
aad
test
enter
fdivrp
mov
out
loopne
lock
ljmp
stc
cmc
fdiv
ds
sub
jecxz
xchg
rol
int
out
cmp
repz
cmp
roll
cmp
lret
rol
xor
aam
aad
fdivrs
cmp
rcl
xchg
mov
xchg
test
icebp
shr
xor
fadd
inc
clc
and
mov
leave
add
add
rol
rol
or
push
aaa
sahf
or
and
aaa
jg
scas
add
cmp
sti
cmp
into
in
loope
ret
enter
sti
cld
hlt
loope
subl
stc
aad
jmp
test
aad
ret
test
repz
out
cmp
cmc
sti
lret
cmp
icebp
cmp
lret
in
loop
iret
mov
test
int3
stc
aas
cld
in
jmp
fcmovu
sti
shl
test
fisttpll
repz
out
hlt
fucomp
rolb
enter
fiaddl
repz
in
call
ret
fistpll
xchg
addl
lock
shl
hlt
icebp
in
cs
in
aam
std
frstpm(287
out
aas
icebp
enter
orl
int
in
leave
rol
cld
fstp
cmc
cmp
cmp
ret
ffree
out
aas
enter
cld
in
in
fmulp
mov
xor
hlt
div
std
int3
rcl
clc
cmp
hlt
cmc
std
cmc
xlat
jmp
fmulp
orl
in
sarb
cmp
icebp
std
iret
stc
sub
fst
in
ffree
fcmovb
jmp
out
int3
xchg
mov
jmp
out
loopne
cmc
fcmovnu
clc
repnz
cmc
cli
out
test
repnz
repz
test
enter
lret
or
cmp
ss
rol
stc
loopne
jmp
test
shl
out
in
leave
sub
xor
int3
leave
xor
cmpb
jecxz
loope
cli
lea
roll
out
xor
std
lock
rol
fcom
jmp
loope
int
cmc
loope
into
lock
ss
repz
cld
sbb
cld
repz
jmp
cmc
testl
rcl
ss
repnz
hlt
std
repnz
iret
out
in
in
std
loope
ret
loopne
jmp
enter
ljmp
sarl
cli
cmp
ret
cld
jmp
mov
call
jecxz
xchg
jmp
in
fcmovnb
call
fdiv
iret
into
loop
fsubr
in
cld
std
jmp
jmp
into
xlat
leave
ds
out
in
sar
stc
loope
rcr
ret
mov
fsub
out
call
enter
iret
cmp
sar
cld
icebp
cmp
fdivr
std
leave
call
in
loope
out
aam
icebp
div
repz
into
int
addl
mov
imul
into
ret
xchg
test
test
stc
into
xor
out
shr
aam
fldpi
stc
jmp
xchg
out
mov
mov
loop
mov
shl
out
rcl
ljmp
cmp
test
ret
icebp
call
xchg
test
sub
fcomi
aad
loopne
jmp
in
aas
xchg
dec
lret
or
jmp
call
repnz
jecxz
cmp
repz
mov
sbb
stc
iret
loop
xchg
imulb
leave
jmp
shl
in
cmp
xor
aad
icebp
fsubp
in
call
lret
loop
std
std
mov
in
ret
cmp
enter
cmp
fsubp
loope
cmp
mov
inc
lock
mov
jmp
fisttpll
xor
aam
into
fnsave
cmp
fcomi
cli
jmp
fisttpl
orl
xor
ljmp
in
cli
fcomi
call
loope
shrb
in
ror
div
not
roll
loop
fcomi
aas
fldl2e
incb
shr
aam
xor
iret
aad
call
out
testl
fsubp
clc
loopne
sbb
aam
sti
enter
xor
shl
ds
jecxz
fxch
add
mov
xor
enter
stc
repz
xor
fcmovnbe
aam
mov
in
std
enter
hlt
shl
int
xor
int
hlt
fucomi
jmp
xlat
inc
rol
aad
leave
in
leave
mov
call
fnstenv
lret
lock
cmp
xlat
cld
rcl
out
neg
call
loop
fmul
div
in
jmp
cmp
cmp
call
xchg
out
loopne
aam
mov
fisttps
lret
stc
xor
cmp
in
movb
cld
test
sub
xor
out
xor
aaa
jmp
cmp
sti
repnz
out
clc
movl
jmp
enter
fxch
shll
or
xchg
data16
adc
add
mov
out
lret
cmc
test
imul
cli
xlat
cmp
cmp
repnz
xlat
aad
add
adc
orl
out
std
dec
in
int
sbb
cld
mov
nop
std
mov
jecxz
in
shl
ret
aaa
out
out
cmp
icebp
lret
cli
sar
cld
clc
icebp
shl
int3
stc
fnclex
call
fst
shlb
leave
iret
jmp
fcmove
aad
fcmovbe
cmpl
in
lds
mov
out
cmc
ljmp
rol
sti
addb
shl
in
fcmovnbe
aam
cmc
neg
repnz
incb
jecxz
test
lea
jmp
xor
out
std
fadds
add
int3
out
mov
sti
mov
loope
add
aaa
xor
int3
fsubr
cmpb
stc
into
aad
out
call
xchg
ljmp
fdivs
ss
jmp
cli
inc
cld
repnz
cli
jmp
loopne
ljmp
xor
std
out
in
loopne
cmp
out
in
or
jmp
rcl
jmp
jmp
in
aas
std
fsub
lock
std
jmp
out
repnz
call
lret
stc
into
shl
clc
fdivp
out
xlat
out
cld
jmp
into
shl
jmp
iret
cmc
not
int3
fstpt
aam
stc
decl
jmp
iret
xor
out
sub
shl
shr
cli
into
lock
fcmovu
test
cli
in
ljmp
xchg
repnz
jmp
fnstcw
stc
test
sar
std
fdivr
fninit
enter
sti
out
in
xorb
int
ret
in
xor
stc
iret
fsubr
lret
ffreep
in
cmc
sar
in
in
iret
ljmp
loopne
xlat
clc
fucomi
cmp
jmp
sbb
cli
ds
cli
fistl
rcl
in
ss
not
lret
shr
test
repz
cld
fmul
lds
loop
xor
out
in
cmp
lock
out
fiaddl
cli
jecxz
sti
enter
sar
fldl
iret
out
xor
lock
into
repz
std
iret
fstp
mov
lock
xchg
jmp
not
out
lret
neg
lret
loopne
ret
loopne
jecxz
rol
cmc
sub
addb
in
ret
repz
cmp
fcmovbe
ds
loope
out
lret
lret
shr
xchg
loope
in
out
jmp
les
aad
std
add
in
loopne
out
hlt
jmp
lret
xor
fcmovnbe
cmpb
aad
aad
fcom
cmc
mov
xlat
in
cli
sti
test
inc
idiv
out
rcr
iret
fmulp
aaa
stc
fiaddl
fadd
mov
jmp
xchg
mov
leave
lret
fdivs
int
ds
cmp
cmc
enter
in
in
faddl
nop
xchg
shr
jmp
loopne
ds
aad
in
call
std
dec
mov
aaa
ret
in
repnz
fistpll
testl
cli
mov
jecxz
jmp
xchg
hlt
in
in
das
leave
out
int
repnz
cld
cld
ret
cli
clc
jmp
mov
out
sti
orb
xor
lret
stc
cmp
xchg
mov
mov
call
divl
enter
fdivrp
hlt
in
out
rcl
hlt
rcl
ret
lret
mov
fcomp
test
rcl
das
into
out
cmp
rcl
loope
aam
sbb
xchg
xchg
loopne
sbb
fst
adc
in
cmp
xlat
aad
ds
cld
addl
out
out
in
aad
xor
clc
ret
xor
xor
fnstsw
hlt
sti
in
orb
lock
rcll
hlt
cmp
cmp
not
fdivrs
loopne
not
fdivp
orb
loopne
xchg
into
in
aad
in
icebp
out
xor
cmp
cmp
addl
out
int
into
cmp
in
cmp
rcl
icebp
loop
xor
add
cmp
into
xchg
call
cli
lock
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
xlat
leave
int
icebp
std
cld
clc
icebp
fldlg2
add
fmulp
in
std
out
test
call
fucomi
aad
cmpb
div
fyl2x
icebp
leave
and
leave
out
sti
fdivrp
mov
repz
in
lret
shl
in
cmp
sar
icebp
aad
cmc
div
sti
ret
stc
mov
fmulp
jmp
das
cs
int
out
out
iret
in
cmp
aas
aas
fcmovnu
call
mov
mov
hlt
int
in
iret
xor
into
cmp
cmp
cmp
fiadds
xlat
aam
call
enter
repnz
in
into
shl
repz
int3
jmp
in
div
in
clc
fdivr
lock
lret
leave
cld
out
loopne
int3
in
mov
repz
repz
stc
cmc
fucom
jmp
orb
dec
ret
fcom
cmp
sti
lret
imul
lret
ljmp
hlt
ljmp
out
xchg
sti
jmp
jmp
out
xlat
std
test
idiv
jecxz
mov
loop
icebp
int
stc
lock
sti
lret
int3
in
icebp
int
fldl
in
aam
lret
decb
fadd
sub
cmp
fldpi
clc
fdivp
out
fdivr
fdivr
std
xchg
leave
fsub
sti
add
mov
sbb
cmc
lock
fdiv
ss
xlat
jmp
out
icebp
xor
mov
out
cli
fucomp
in
repnz
out
sub
sti
repnz
ss
cmp
std
loopne
leave
test
mov
xchg
test
clc
ret
iret
icebp
enter
shr
test
fcmovu
ret
lock
xchg
jmp
or
cmp
cmc
in
std
out
in
loope
loope
faddl
faddl
aam
shlb
into
ret
in
sbb
in
call
lret
loope
mov
xor
cmc
lret
aaa
out
xlat
xor
cli
std
aad
adc
mov
xor
int3
icebp
xor
xor
cmc
fld
cld
loopne
loopne
enter
aad
fdivr
stc
mov
fsubr
mov
xor
cmc
ss
in
xlat
fdivs
int
lret
lock
cmc
xlat
clc
repnz
std
sbb
jmp
fucom
cmc
xchg
repnz
shl
ljmp
aas
fcomi
sar
adc
fiadds
fisttps
xor
fadd
repnz
xor
sti
int
div
cmc
sti
in
mov
sti
sub
out
lock
jecxz
divl
addb
in
sbb
loop
in
mov
xchg
xor
rcl
ljmp
cmp
lret
call
jmp
sti
fisttps
rcr
ljmp
int
sti
repnz
decb
fcmovnu
out
int
out
call
cld
jmp
ret
cmp
xlat
loop
in
test
out
cld
lret
jmp
cmc
sub
icebp
loop
cs
lret
lret
xor
aas
fcomip
out
fisttpl
clc
jmp
test
fimuls
in
hlt
in
repnz
out
fdivrl
sarb
cmc
in
addl
out
popl
loope
cmc
cmp
out
icebp
fxtract
fcmovu
xor
repnz
ljmp
xchg
fsubp
int
loop
cmp
xor
fdiv
clc
adc
fiadds
in
fldl2t
loop
lret
jmp
cmp
stc
neg
ss
fsub
xchg
mov
mov
in
aam
jecxz
ret
std
int3
xor
cmp
cmp
cmpb
loopne
loop
test
in
lds
in
ss
in
icebp
enter
rcr
in
cmp
stc
ret
jmp
enter
ljmp
cmc
cmp
into
enter
repz
hlt
icebp
clc
aam
fst
xchg
ret
out
out
fsubrp
lock
loope
in
int3
stc
out
inc
in
cld
adc
ret
mov
icebp
shr
iret
test
sti
std
aas
loop
out
adc
cmp
out
lret
mov
out
in
ss
cld
lock
lock
in
ret
ljmp
shl
mov
shl
clc
aaa
cmp
xor
lret
cmc
lock
hlt
out
sbb
call
jmp
iret
aaa
int3
jmp
cmp
or
cld
test
mov
in
dec
or
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
mov
imul
fucomip
xchg
mov
cmc
in
in
out
mov
cmp
cmp
loop
iret
aas
addb
in
addb
hlt
cmc
enter
iret
iret
std
loope
cmp
adc
xlat
inc
jecxz
xchg
call
hlt
xchg
jecxz
clc
jmp
cmp
sti
neg
fsin
cmpb
jmp
aam
xchg
int
out
jmp
rol
ljmp
cli
stc
rcl
fdivrs
aad
mov
jmp
xchg
int3
xchg
jmp
in
in
ds
out
in
rcr
loopne
xlat
addb
aam
ret
xor
sti
cmp
sti
std
cld
test
xlat
jecxz
fimull
icebp
sar
xchg
mov
int
iret
in
fcmove
cmc
adc
cmp
cld
cld
stc
lret
fmulp
fsubrp
test
aas
fadd
cmp
cmc
cmp
aaa
icebp
xor
repz
not
leave
enter
out
call
ljmp
ljmp
sar
incl
leave
testl
idivb
jmp
in
shr
sti
lret
fcomp
cmp
mov
mov
iret
int
sti
rolb
xor
sub
ror
hlt
cmc
test
repnz
xchg
hlt
jmp
xchg
out
xor
xor
enter
not
stc
div
sar
stc
mov
xchg
in
jecxz
repnz
in
cld
jmp
fcmovnu
loope
shr
aad
call
loop
loope,pt
loop
nop
into
jecxz
rol
ret
cmp
jmp
shl
ss
loop
aad
jmp
jecxz
orl
aam
out
lds
aad
pushl
cmp
cli
out
fmull
fucomi
in
shl
out
loop
ret
loope
cmp
out
aam
fucom
cmp
fcmovu
cli
test
jecxz
loopne
stc
ljmp
imul
ror
in
repz
int3
repnz
sbb
into
and
repz
ljmp
xchg
icebp
jmp
out
lret
dec
cmp
ffree
in
cmp
mov
enter
repnz
shl
in
ljmp
xor
stc
cld
and
xchg
out
icebp
mov
aas
jmp
in
cmp
iret
cmp
cmp
aas
repz
mov
cli
nop
jmp
mov
in
repnz
fdivr
repnz
int3
int
in
test
decb
enter
fadd
out
cmp
cmp
hlt
fcomi
fst
sbb
ljmp
xlat
xor
ror
xor
std
aad
jecxz
xlat
repz
mov
mov
out
int
xor
fcmovnu
leave
div
adc
lds
or
fmul
hlt
mov
xlat
ret
rcr
lock
faddl
hlt
div
cli
rcr
mov
hlt
sarl
cmp
out
aas
fnstsw
adc
xlat
xchg
repz
call
call
xor
lret
in
into
jmp
fidivs
clc
into
addb
xchg
into
nop
in
loop
test
out
lret
cld
repnz
lret
sarb
cmp
lret
fincstp
xlat
mov
icebp
out
iret
fsubr
out
int3
xor
idiv
ret
loope
rol
cmc
xchg
std
xchg
nop
hlt
mov
fxch
repnz
cmc
jmp
cmp
idiv
decl
xchg
std
cmc
int3
neg
clc
cmp
fst
out
cmc
rcl
inc
testl
xchg
icebp
xchg
shl
push
ss
repnz
not
fxam
cli
mov
ret
mov
out
mov
call
loop
xor
fcmovu
aas
cld
sar
out
fucom
test
loopne
aad
test
xchg
out
lock
stc
icebp
jmp
leave
fcmovu
cli
loopne
clc
in
fcmovbe
sbb
fsub
fneni(8087
call
xlat
lock
aam
icebp
neg
xlat
fidivrl
cmc
fcmovnu
leave
cld
fadd
cmp
hlt
xchg
test
rcl
jmp
cmp
into
out
jecxz
aad
in
in
leave
or
test
sar
enter
jmp
fcmovnbe
fdiv
fcom
leave
loopne
in
lea
in
cs
ss
ss
lret
fmul
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
sub
lret
scas
add
rcr
iret
int3
in
aam
jmp
in
fisttpl
jmp
int
int3
lret
repz
sar
fstpt
out
not
call
cmc
mov
fsubrp
in
mov
ror
fnstsw
stc
loopne
xor
aad
aas
fchs
aad
out
iret
fimuls
xchg
rcl
int3
call
rcl
ret
lock
fcmovu
enter
mov
sti
in
int
out
rcl
fcmove
cmp
sarl
cmc
lock
sub
and
in
ror
loop
rorl
fcmovnb
shr
cmp
std
cmp
fadd
fxch
out
in
iret
in
xchg
xchg
in
xor
lret
repnz
repnz
int3
repnz
cld
icebp
fcomi
ret
fmull
sub
mov
loope
ror
ljmp
aad
hlt
rolb
rolb
nop
loope
int
repnz
jmp
vpaddusb
lret
cli
lock
test
loopne
sub
idiv
out
fnstsw
sbb
out
std
cmc
in
fiaddl
popl
int3
xlat
das
in
icebp
jmp
shl
loop
in
aam
vpaddusw
fsubr
mov
fmulp
xchg
xor
repz
xor
stc
cmc
mul
fmul
std
fiadds
ljmp
out
clc
int3
mul
cmp
xor
sti
sarl
sar
fmull
mov
sti
shr
xchg
int
call
rcr
ss
ror
repz
fnstsw
in
mov
mov
fucomip
into
cs
cli
ss
icebp
aad
sarl
out
ds
shl
clc
aam
mov
shl
stc
sub
mov
out
int3
out
sti
cld
jecxz
iret
into
iret
les
out
test
out
out
xor
out
cmp
imul
call
cmpb
mov
fisttpll
call
aad
cs
loop
shr
fdivrp
xlat
fstp
into
cld
add
fsubr
repz
and
orb
cmp
lock
jecxz
stc
ret
fadds
xlat
in
in
enter
into
fsubr
mov
out
xor
sti
clc
cli
fidivrs
ret
icebp
cmc
incb
int
cld
ficoml
ret
loope
cmp
in
iret
aaa
aam
cmp
sbb
fldl
test
rorl
cli
ret
repz
aaa
ds
clc
in
mov
lret
test
call
lock
cmc
lds
lret
ljmp
hlt
aad
fcmovbe
aad
and
loopne
iret
mov
lock
shl
call
aaa
jmp
cmp
in
ret
test
hlt
loope
test
xchg
jecxz
jmp
nop
mov
ret
stc
fcmovbe
aaa
shl
out
lret
aas
in
lock
addl
xchg
sub
aad
hlt
fucomp
loope
addb
rcr
and
int
jecxz
out
in
cmc
shr
jmp
repnz
int
fcmovbe
xlat
ret
ret
loope
xchg
lret
repz
in
rol
hlt
idivl
ss
repz
lock
repnz
addl
mov
in
xchg
shl
int
div
xor
hlt
fildl
ss
roll
mov
cli
xchg
iret
cld
ljmp
into
cmp
stc
int3
out
xlat
cmp
rcl
test
loop
loope
icebp
shr
aas
ret
int3
sar
fmul
jecxz
into
clc
les
xlat
nop
lret
sti
int3
icebp
loope
jmp
fcmovnb
hlt
icebp
repz
ds
cmp
les
loope
rcll
cli
jmp
cmp
repz
in
cmp
jecxz
testl
movl
enter
cmp
add
fld
in
test
out
mov
enter
iret
mov
enter
clc
leave
cmp
xor
ret
neg
test
mov
cmp
call
in
icebp
jmp
call
rolb
call
ds
lock
lret
xor
xor
out
cli
icebp
fcmovnbe
cmp
jecxz
out
lret
loopne
in
mov
fimuls
xor
rcl
sar
cld
leave
cmp
loop
hlt
xor
fdiv
sbb
cld
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
cmpsb
sbb
pop
into
jg
scas
add
fcmovne
lret
aam
sub
aam
int
xor
sbb
aad
icebp
jmp
enter
mov
ljmp
test
fidivrs
into
fcmove
cmc
cmp
repnz
icebp
movl
xchg
out
in
cs
in
cld
cmc
out
stc
aam
add
enter
xchg
mov
rol
xor
icebp
leave
cld
in
cmp
out
enter
rcr
aad
jmp
rcr
leave
ds
repnz
stc
loop
loopne
rol
cmc
loope
into
repnz
mov
fsubp
cmp
fdecstp
rcr
fsubr
stc
fxch
mov
iret
mov
loop
leave
std
aam
neg
adc
and
out
fisttpl
leave
fldlg2
cli
ss
lock
test
fcmovb
fucom
lret
loopne
out
or
addl
out
idivl
loop
lret
fcmovne
xlat
std
xor
aad
mov
leave
into
int
nop
repz
nop
lret
rcr
xor
out
fcmove
cmc
aad
cmp
cld
rcr
xlat
rol
aad
clc
mov
nop
clc
xor
shl
hlt
lock
xlat
fcom
flds
jmp
enter
mov
xor
ss
jmp
std
fdivp
out
cli
cld
xabort
xchg
icebp
nop
fcomip
leave
sarl
xor
ljmp
cmpb
test
or
fsubr
out
xchg
xchg
addl
sar
in
lret
test
ret
rol
fadds
fcomp
loope
out
lock
xor
sar
repz
rcl
ljmp
rcl
ret
ljmp
cmp
nop
in
out
call
shl
repz
cld
into
in
cmc
in
mov
jmp
mov
repnz
cmp
fdivl
lret
cmp
loop
ret
sarb
lea
shl
shl
shl
repz
not
lret
cmp
repz
xchg
fcmovu
cli
aas
leave
jmp
in
repnz
out
xchg
aad
imul
in
sti
in
int
int3
cmp
add
fucom
ret
cmc
mov
adcl
xor
repz
cmp
in
cmc
stc
test
lock
mov
sti
mov
cmc
icebp
ljmp
lock
aas
jecxz
fcmovnbe
lock
sti
stc
lret
mov
fucomi
xchg
ret
ss
cmc
cmp
std
ret
fcmovu
cli
fcmovu
mul
call
loop
jecxz
int
ret
hlt
enter
loope
cmpb
in
test
jecxz
nop
test
rol
out
xor
rcl
lock
shl
movb
jmp
test
sub
in
shr
ds
xor
out
sti
jmp
cli
fmuls
repnz
xor
hlt
in
repz
cmp
aad
cmc
cmc
incb
mov
iret
int
mov
lea
fmul
leave
icebp
aad
int
test
neg
test
xchg
loope
icebp
mov
in
icebp
mov
ss
cmp
aad
iret
cmc
xchg
sti
loopne
std
jmp
dec
in
out
in
fmul
ror
cmp
ds
mov
test
incb
int
in
rcr
xlat
out
fidivrl
shl
sub
loopne
aas
out
mov
fxch
clc
lret
loop
cmc
xchg
shr
out
ss
cli
cmp
lret
aam
xor
stc
repnz
mov
out
std
int3
aas
into
mov
mov
lret
in
sub
bnd
sti
cli
shl
ret
in
in
leave
test
loopne
sub
loopne
lock
enter
into
fmul
fdiv
out
ds
loopne
fdivrp
fdivr
fcomp
xchg
fucomp
xchg
loop
int3
loop
rcl
out
hlt
loop
repz
fcmovne
jmp
fnstsw
ljmp
shl
cmp
int3
lock
fnstsw
iret
fdivr
in
aad
faddl
loop
loope
in
loopne
shr
aad
sti
repz
in
fsub
shl
rol
mov
xchg
cmp
xchg
int3
int
lock
out
jmp
cmc
cmp
ds
loop
in
and
rolb
mov
xchg
leave
mov
repz
cmp
out
cld
sti
int3
out
out
out
loopne
ret
add
add
fadd
fcom
fld
pop
into
shll
mov
jg
scas
add
add
hlt
icebp
loop
ret
add
xchg
call
ret
cmp
xlat
icebp
jmp
cmp
stc
icebp
stc
shl
clc
aad
fstpt
in
mul
std
fcmovbe
jecxz
out
leave
shr
cmp
cmc
out
enter
std
rcl
cld
in
hlt
xchg
fsubrp
out
cld
jmp
addl
cmp
in
aas
ds
clc
xchg
icebp
std
lret
lret
jmp
out
jmp
mov
std
mov
xlat
jmp
shl
loopne
rcl
stc
into
jecxz
out
decl
stc
cli
lret
or
icebp
ss
cmc
cmp
leave
cmp
rol
fadd
aad
jecxz
cmc
cmc
out
rorb
div
loop
jmp
fucomp
add
cmp
jmp
xchg
xchg
xchg
in
lret
aad
mul
loope
int
icebp
aas
fcomi
clc
xchg
test
in
ror
in
ljmp
inc
loop
xor
call
ret
ds
fcmovnu
loopne
xchg
lea
shl
call
cmc
fstp
lds
loopne
loop
jmp
mov
not
das
out
ljmp
std
fidivrs
and
cli
movl
loop
jmp
loop
out
out
cmp
cmp
repnz
xlat
in
loopne
in
ljmp
out
icebp
loopne
not
xlat
xor
icebp
rcl
xor
jmp
stc
shl
xchg
aam
addb
loopne
cmc
lock
mul
lock
xor
ss
loop
rolb
loop
xlat
mov
cld
enter
xchg
cs
out
lret
sti
lock
jmp
repz
fdivr
mov
lea
xchg
mov
int3
call
icebp
out
fsubp
fcomi
iret
mov
sti
ljmp
ror
les
call
dec
and
out
loope
fsubr
xchg
jecxz
xchg
enter
out
test
roll
repz
ljmp
in
iret
out
jecxz
cmp
fst
std
xor
cmp
aas
lock
stc
rcr
mov
out
shr
cli
cld
in
ljmp
cmp
cmp
sarl
loopne
enter
in
out
mov
repnz
lock
jmp
shr
cli
loop
fcmovb
clc
cmc
fneni(8087
cli
lock
ljmp
clc
jmp
ljmp
in
or
fstp
testl
ss
call
aas
int3
aad
aas
lock
clc
enter
std
leave
iret
shl
lock
mov
icebp
xor
int
repz
repz
out
sbb
sti
cmp
icebp
nop
repnz
lock
xchg
int
xor
out
out
xlat
sub
xlat
addb
shr
sub
cmc
xor
fxch
aam
ror
out
icebp
out
xlat
cmp
repz
sti
into
enter
lret
jmp
shl
lret
sti
int3
sbb
in
sbb
std
ffree
iret
stc
std
mov
out
mov
leave
ret
fnstsw
std
idiv
loopne
inc
sti
aam
fadds
fimuls
loop
shr
ljmp
in
fdivr
mov
in
xchg
stc
in
test
icebp
aaa
repnz
ljmp
jecxz
rol
and
ret
mov
mov
stc
int3
cld
rcr
ljmp
xlat
mov
xchg
jmp
shr
cmp
aam
repnz
fmulp
fcmovnu
roll
clc
loope
int
mov
cmp
out
out
out
fcmovb
fucomip
stc
sti
aad
xlat
sbb
lret
fsubr
fiadds
int
in
shlb
xlat
repz
cmp
out
filds
lret
mov
movl
lret
cli
aaa
cld
shl
rol
imul
testl
mov
icebp
cmc
in
out
stc
out
rcr
icebp
test
ds
in
not
in
aam
idiv
in
mov
loop
lret
leave
hlt
aad
cmpb
xlat
aam
cld
mov
mov
out
cmc
xchg
into
aaa
rcl
sti
lret
div
aaa
into
shl
cmp
vpslld
ljmp
lea
leave
add
add
aas
sarl
fcmovnbe
fcmovb
loope
add
mov
jg
scas
add
shl
mov
xor
shr
xor
and
iret
out
in
fadd
aam
mov
xchg
stc
jmp
out
not
das
xor
jmp
in
std
sti
int3
or
test
ret
test
jmp
jecxz
repnz
call
les
ljmp
sar
lds
mov
test
xchg
mov
in
out
rol
ss
cmc
cmp
fldln2
inc
cmc
call
cli
out
into
icebp
xchg
call
in
cmp
sti
fdiv
loopne
cld
in
into
xchg
out
cld
roll
fsts
in
enter
cmp
cmp
cmc
fdivr
rcr
loope
std
out
sbb
rcl
xlat
shl
cmp
jmp
shr
rcr
loope
sti
fstp
in
xlat
in
fdivrp
lret
in
into
out
test
out
cmp
lret
rolb
ret
cld
faddl
test
in
and
mov
lock
cli
fsqrt
call
fdiv
xor
ret
jmp
mov
test
int
and
in
cmp
xor
in
into
int3
int
roll
flds
fucom
in
in
imulb
out
xor
out
in
ss
shl
loope
sar
cmp
mov
std
mul
xchg
repz
sub
aam
in
cmp
repz
loopne
in
shl
vpsraw
adc
sub
lret
cmp
xor
cmp
ror
shl
call
call
mov
jecxz
das
shll
cmp
icebp
xor
loope
mov
cli
ljmp
mov
into
int
xlat
enter
cmp
cmp
or
shl
les
loope
into
out
hlt
rol
ret
iret
aaa
enter
cmp
cmp
mov
ljmp
enter
xor
fdivr
cmp
repnz
fdivrl
fcmovnbe
sbb
mov
in
lret
mov
cmc
fucomip
rcr
xor
xlat
sti
std
sarb
testb
in
int
fists
aad
out
leave
xlat
in
loopne
fdiv
fadd
cmp
in
fsub
fcoml
loopne
cmp
cmp
out
not
rcl
test
cmp
fsub
std
cmc
jecxz
leave
fisttpl
xor
ljmp
aad
fdivrp
sti
or
idiv
les
in
rol
iret
vpmuludq
fnstsw
loope
aad
xchg
xchg
in
test
nop
call
decl
lock
fincstp
repz
fsubr
aam
std
out
shl
int3
loop
out
call
into
xchg
xor
shl
leave
fst
aam
int3
aad
sti
repnz
shl
in
fmull
xor
in
cmc
cli
sti
cmp
fcmovnu
in
aad
repz
jecxz
and
test
in
mov
xchg
ror
not
stc
out
out
repz
rcl
ss
cli
repz
int3
std
mov
sti
in
mov
fadd
in
jmp
fdivr
rcl
fsubp
fstpt
loopne
not
flds
jmp
xchg
nop
ror
cmp
in
sarl
test
in
fucomi
repz
in
mov
jecxz
sub
lock
int
shl
addb
shl
clc
out
mov
out
mov
cs
int
dec
cli
clc
sti
cmp
fcmovu
test
stc
test
in
in
repnz
out
ljmp
cmp
shl
ffree
loope
cmp
cmp
jmp
stc
mov
icebp
test
xor
out
jmp
int3
in
ret
xlat
out
hlt
lret
fdivrp
sti
shl
jmp
cmp
out
shl
stc
ds
cmc
idivl
cmp
aad
cli
cld
cld
xchg
in
ljmp
ror
leave
repz
cmp
ret
testb
or
xchg
out
nop
rcl
shr
cmp
aad
loope
testl
xchg
into
sti
mov
cld
test
out
out
stc
fcmovb
xor
out
stc
jecxz
std
aas
aad
in
ret
out
test
into
sti
jecxz
icebp
xor
cmc
cli
lds
cld
cmp
cmp
hlt
into
xchg
loopne
sbb
xor
iret
out
loop
aaa
out
call
out
shl
cmp
add
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
ret
fimuls
lret
roll
in
xor
xlat
cmp
cmp
lock
repz
fucom
xchg
or
out
in
xor
out
hlt
cmp
loop
fdivl
loop
rcl
fdecstp
xlat
fdivp
rcll
iret
lock
fcmovnbe
int
jecxz
int
sar
repz
out
in
nop
xchg
or
shl
stc
fdivrl
cmp
cld
repz
xlat
in
cmp
cli
in
int3
into
std
xchg
call
in
enter
rcl
int
add
xchg
aam
fisttpl
jmp
xchg
out
fyl2x
ret
ror
hlt
aam
neg
cli
hlt
out
adc
faddp
mul
nop
push
mov
enter
icebp
aad
sti
fcmovu
iret
addb
lea
add
test
icebp
cmp
lret
shl
mul
cmp
aam
in
aad
xchg
ljmp
lret
test
clc
cmp
aas
fdivrl
clc
les
mov
rorb
xchg
lock
cmp
shl
hlt
jmp
fcomi
cmp
repz
in
sarl
loop
ret
ret
jmp
aam
mov
shl
jmp
cmp
enter
not
in
fcmovb
jmp
aas
xchg
repz
repnz
test
out
in
cmp
shl
xchg
repz
lret
mov
int3
lret
xchg
in
fucomip
shl
les
xlat
stc
stc
call
in
hlt
loope
movb
xchg
into
cmc
in
into
fadd
repz
cmc
icebp
neg
xlat
stc
ds
sti
add
leave
fimuls
les
imul
xor
icebp
xlat
lret
fildl
test
xchg
test
fcmovb
fiaddl
jmp
das
out
cmc
cmp
fdivrp
repnz
loopne
jecxz
cmp
ds
orl
in
in
ljmp
int3
shl
lds
leave
cmc
int3
std
in
lret
xchg
fmulp
lret
int
std
in
jmp
loopne
not
fisttpl
clc
mov
mov
ret
sti
xor
xlat
add
cmp
fadd
xchg
cmc
mov
stc
into
lret
mov
shr
aas
fnstenv
out
in
aam
out
aas
cld
test
cmp
stc
cmp
lret
and
mov
loop
jmp
xor
test
cmp
test
test
mov
out
jmp
repz
repnz
int
out
out
aam
lret
int3
cmp
loope
cmp
mov
fsubr
orl
xchg
test
xor
fidivl
idiv
cmp
jmp
fmul
stc
inc
aam
ret
xchg
fcmove
leave
loope
jecxz
in
into
ret
sub
icebp
xlat
out
cld
enter
clc
cmp
aas
test
loopne
jecxz
mov
dec
iret
xchg
loope
in
int
int3
cmp
cmp
cld
fucomi
sar
hlt
jecxz
aad
cmc
fcomip
stc
rol
sti
xchg
int3
in
int3
neg
ror
cmp
filds
repnz
out
lret
or
lret
stc
int3
loop
aad
fld
lock
aad
addb
aas
test
clc
mov
out
orl
repz
call
lock
cmp
aas
test
ds
jecxz
out
cli
test
fst
rorb
fucomi
cli
repnz
fcmovb
hlt
jmp
cli
out
repnz
test
aad
testl
aaa
shll
cmp
idivb
inc
xchg
std
addb
ret
xchg
ror
hlt
sbb
cmp
roll
ret
test
sti
or
mov
cmp
out
fcomip
std
ret
stc
aam
loopne
stc
mov
fucom
in
aam
repnz
fdivr
cmpb
fiadds
ret
and
lret
int
in
rcl
xor
xor
lret
xor
rol
out
ror
testl
jecxz
bnd
ljmp
clc
stc
repz
aaa
iret
xlat
loope
aam
and
fcmovu
xchg
shr
fsub
in
shr
das
int3
lock
fdiv
out
loopne
cmp
incb
in
mov
in
cs
out
clc
cmp
fcom
fsub
loope
cmp
cmp
loop
mov
leave
add
add
rcl
aad
aad
shll
notl
jle
add
lock
lret
lret
clc
out
aas
loopne
loop
aam
out
in
xchg
std
fiaddl
in
ss
xor
clc
jmp
cmp
fucomp
cmp
in
cli
mov
lret
mov
cs
lret
xor
repz
neg
sub
sar
iret
xchg
mov
jmp
xor
loop
xor
shl
ljmp
loop
xchg
or
xlat
jmp
out
aam
test
shr
clc
xor
sti
shl
cmp
std
ds
loop
mov
addb
subl
call
aad
stc
xlat
out
cli
in
lret
xchg
xlat
xlat
fchs
ljmp
into
icebp
in
fcmovu
aam
sbb
fincstp
ds
test
out
fucom
ret
xor
repnz
iret
cmp
cmp
out
in
jmp
out
fdivr
rol
cmc
jmp
jmp
sar
testl
test
repnz
cmp
out
aad
in
shl
flds
call
mov
sti
mov
xor
hlt
in
cmp
repnz
mov
cld
fdivrp
in
jmp
in
xor
cmp
icebp
cmp
cmc
repnz
loopne
orb
adc
repz
aad
ret
hlt
cmp
cmp
shlb
cmc
fcmovbe
cmp
mov
call
xor
in
sar
inc
sti
xchg
clc
repz
lea
in
std
jmp
loopne
jmp
sti
cli
std
fnsave
cmc
icebp
test
std
sarb
icebp
fsts
call
iret
lret
idiv
fistpll
int3
out
faddp
aad
fldl
mov
int3
out
aad
int
ss
sti
stc
lock
cli
mov
fucomi
cld
lock
mov
xor
in
lret
ljmp
enter
in
jmp
shl
lock
in
out
xor
repnz
clc
fiaddl
leave
hlt
test
mov
fidivl
cli
out
filds
xchg
out
jmp
fistl
repz
clc
xlat
clc
fst
aam
fstp
cmp
fidivrl
fstp
sti
hlt
enter
jmp
in
movl
fstpt
cmp
rcr
clc
mov
in
cld
cmc
jecxz
mov
loop
jecxz
cs
aad
call
loope
aam
aam
ret
ret
in
test
mov
rolb
out
cli
repnz
cmc
leave
repnz
test
sti
loopne
xchg
mov
mov
out
test
fdiv
in
int
in
loopne
out
mul
test
fists
aad
jmp
xor
fnstsw
in
ret
xchg
jecxz
shl
ret
int
loop
ljmp
xor
clc
idiv
out
ror
xor
lret
repz
ds
loope
lret
in
in
xchg
filds
cmp
out
out
hlt
enter
cld
icebp
push
out
fstp
aam
fsubr
mov
loop
mov
aad
rcr
out
cmc
ljmp
cld
incl
iret
xchg
in
ljmp
dec
repz
clc
xlat
mul
shl
les
in
xchg
lock
call
loop
cmp
lock
sarb
out
ret
cmp
xor
aam
cmc
mov
in
xchg
mov
in
aad
out
fiaddl
std
mov
mov
mov
ret
idiv
std
in
sti
jmp
lds
mov
ret
sti
mov
out
fcmovne
in
out
shlb
lret
icebp
fdivrl
jmp
loop
stc
int
ret
aas
loop
loope
xchg
int3
int3
rol
icebp
call
fcom
cmc
fsub
cmp
rol
les
fistl
cs
cmp
ror
call
aad
roll
loopne
cli
test
shr
shl
leave
ror
sti
in
in
cmp
inc
in
repz
in
out
dec
orl
fistl
ret
repz
ljmp
jecxz
lock
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
push
out
or
scas
add
cmc
fcmovb
shl
decb
aam
mov
enter
fcom
ljmp
testl
int3
fsub
lock
fsubrp
int
iret
jmp
aaa
call
lock
iret
test
inc
fsubr
fisttps
xor
fcmovu
in
int
adc
fcomp
mov
mov
xchg
int3
in
xor
xor
neg
std
into
loop
rcl
in
test
ror
test
xchg
cld
test
ret
in
ljmp
rcl
aam
shl
cld
cmpb
std
fsqrt
enter
rcll
fstpt
in
das
fcomp
fdiv
rcl
aam
cmp
out
xlat
lret
faddl
in
repnz
aaa
aam
out
iret
repnz
in
icebp
in
ljmp
test
hlt
lock
cmp
fmul
cmp
xchg
mov
test
clc
std
jmp
call
fld
icebp
xor
ds
iret
cmp
fstpt
sarb
test
loopne
ffree
int3
cli
loope
mov
fdivs
jmp
icebp
shl
cli
fdiv
jmp
out
mov
ljmp
hlt
aas
out
xor
clc
loop
hlt
fdiv
mov
std
leave
jecxz
lock
in
ljmp
vcomiss
into
aad
cmp
ffree
cmc
xlat
in
repz
fsubr
lock
xorb
aam
hlt
cmp
ljmp
cmp
sti
mov
in
mov
int
ss
out
xlat
aaa
sti
fidivs
div
in
loopne
mov
cld
test
mov
filds
out
clc
cmp
into
stc
cmp
addl
jecxz
jmp
out
loopne
leave
stc
sarl
rcl
sti
rcr
in
out
rol
icebp
out
out
loop
mov
jecxz
movl
ror
aaa
aaa
cmp
or
ret
cmp
cld
ret
mov
in
xchg
xchg
hlt
rcl
out
rol
fcmovnb
sar
clc
enter
cmp
lock
cmc
fprem
ljmp
out
divl
rcl
fdivrs
lock
jmp
xor
test
orl
jmp
hlt
shlb
repnz
out
cmc
fstp
int3
flds
mov
cld
jecxz
decl
loope
cs
call
fst
xlat
cmp
vpaddw
cmc
rcr
ret
test
mov
lock
into
cmp
stc
sti
sti
cmp
fiadds
jmp
out
mov
mov
lock
idivl
cmp
aam
test
addl
fimuls
int
lret
cmp
sarl
sar
lock
ljmp
mov
xchg
mov
out
ss
jmp
neg
in
hlt
cld
icebp
enter
aad
leave
sar
xchg
in
lock
ljmp
ds
ljmp
decl
loopne
in
leave
sbb
test
in
jmp
int3
out
cmp
in
loopne
xor
cld
loopne
lret
jecxz
xchg
fimuls
mov
out
ret
sub
shr
lret
fnstsw
fpatan
jmp
fadd
xchg
ljmp
fcmovne
hlt
into
cmp
divl
in
faddl
test
out
fucom
in
fsubr
xor
leave
fadd
aam
xlat
lret
out
mov
ret
loopne
lock
fxch
ljmp
fcmovnu
shl
clc
out
in
rcl
out
cld
sti
fucom
int
loope
fdivr
loope
repz
lock
hlt
lret
fmul
cli
cmp
movb
into
mov
shl
repz
shlb
call
cmp
rcr
cli
repz
mul
mov
lret
xchg
hlt
cs
ret
sar
lret
loop
lock
cmp
cmp
in
fiaddl
nop
nop
iret
icebp
out
sub
ljmp
stc
sar
cmp
jmp
stc
mov
hlt
int
xchg
aad
rol
cli
ss
xlat
cmp
cmp
fdivrl
out
test
mov
jecxz
out
leave
xor
jecxz
out
icebp
xor
cli
test
std
filds
rcr
in
into
mov
fmuls
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
or
jg
or
jle
aaa
cli
jmp
fsubrp
rcr
loop
ret
ds
sti
ret
fadd
std
lret
mov
repnz
subb
cmp
cmc
cmp
fsub
call
clc
in
xlat
mov
ljmp
aam
rcr
cld
das
cld
cli
fistpll
rcr
repnz
aad
jecxz
fsqrt
ret
enter
aad
divl
fcmovb
idivb
loopne
rolb
ljmp
aad
in
lret
lock
in
das
in
repnz
fcmovbe
lock
lock
ffree
loope
test
out
ljmp
test
xlat
ror
loopne
hlt
stc
aad
rol
xlat
loope
mov
fmulp
in
enter
out
stc
lret
in
loopne
fnclex
ret
aam
in
mov
aad
xchg
mov
xlat
jecxz
rcr
sti
ss
hlt
jmp
rcl
shr
sti
lret
lret
movl
xor
leave
sar
fcomp
loop
cld
sar
fisttpll
cld
int3
mov
hlt
xor
fdivl
faddl
cld
cld
in
in
lret
jmp
ret
int3
fstl
fld
enter
ljmp
in
ret
fsub
lret
in
iret
aad
aad
int3
out
clc
lock
lret
into
fucomi
cmc
shl
xchg
in
mov
sti
repnz
lock
loop
out
sub
out
out
lret
into
xlat
aad
ss
out
call
cld
mov
mov
enter
clc
lret
cmp
aam
cld
fiadds
lds
fadd
repz
call
cmp
in
aas
std
cmp
fidivrs
xlat
repz
out
test
ret
leave
out
xchg
jmp
iret
aad
fcmovnu
in
repz
out
neg
hlt
lock
fst
fsub
ljmp
cmc
aas
divl
loopne
stc
cmc
loopne
orb
loopne
int
inc
xchg
icebp
jmp
into
out
out
rcl
aaa
cmp
jecxz
sti
cmc
ret
clc
out
rol
ljmp
aam
test
call
rcl
fucom
ret
into
lock
call
lret
lds
cmc
aaa
sar
ss
out
in
call
rcr
cmp
fsubr
int3
sbb
int
shlb
xor
call
loope
int
in
cli
ret
xchg
leave
in
out
std
mov
ror
cmp
stc
aad
test
stc
fucomi
in
jecxz
std
sti
mov
into
loop
hlt
in
icebp
out
cmp
cmp
in
int3
ret
repz
lret
mov
stc
out
in
out
xchg
in
out
in
cld
sarl
sarb
aad
clc
ret
jecxz
repz
cld
call
mov
jmp
hlt
cmp
repz
call
aad
out
ret
rol
loopne
jecxz
out
test
xor
lock
cld
ss
shr
xlat
fcmovne
lds
sti
int
in
out
aam
jecxz
repz
icebp
repnz
ljmp
test
push
mov
cli
in
cld
std
jmp
out
lock
aaa
hlt
fucomi
aaa
filds
ds
sub
cld
xchg
jecxz
xchg
fdivs
in
icebp
stc
in
ljmp
test
add
std
sub
out
add
int3
ret
aaa
fdivr
rol
lock
cmpb
hlt
lret
fsubr
orb
fucomi
stc
fcom
std
fdivp
adc
sar
sbb
fsubr
mov
out
adc
in
xor
ss
out
in
cmc
add
rol
mov
lret
in
mov
jmp
icebp
fmul
cmp
iret
mov
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
mov
jg
or
jle
jmp
cmp
rol
add
clc
fcos
out
out
xchg
xor
cmp
ss
std
loope
roll
in
sar
mov
fsubp
loop
out
int
iret
repz
fdiv
not
sti
xor
fdivp
div
aas
incb
mov
iret
mov
enter
aaa
shlb
lret
cli
repz
test
cld
repnz
aam
fsubr
xchg
mov
call
ljmp
cmp
rcr
fadds
fsubrp
in
in
xchg
ss
neg
cmp
cmp
cld
cmp
fdivrp
repz
xchg
iret
sbb
test
enter
out
xor
xor
idivb
iret
in
fstp
add
lret
int3
enter
frndint
xor
icebp
xor
rcr
jmp
xor
ljmp
ret
repnz
rorl
call
call
ss
cmp
icebp
in
stc
fadd
sti
ret
shl
and
fsubp
mov
orl
clc
aam
xor
aas
jmp
jmp
in
not
test
mov
repz
mov
cmp
out
hlt
fcmovbe
fcmove
neg
cmp
test
int3
fcomi
hlt
or
lret
jmp
into
fmul
ljmp
fsub
fnsetpm(287
fmulp
mov
icebp
test
shr
repz
clc
out
cmp
xor
cmp
rcr
cmc
orb
mov
shl
int3
shl
out
xor
fcom
hlt
cli
hlt
jmp
cmp
adc
aam
fcomp
rolb
mov
ss
shr
rcr
loop
xor
hlt
imul
mov
loop
xchg
xchg
into
das
icebp
repz
xor
iret
in
ds
loop
ret
ljmp
icebp
in
fucomp
push
clc
lock
out
ss
jmp
jmp
jmp
in
mul
clc
cld
aam
cli
call
rcll
rcr
ljmp
repz
cmc
out
cmc
call
enter
out
xlat
icebp
aaa
fnstenv
ss
out
fnsave
aam
hlt
test
incl
test
mov
jmp
aaa
aad
div
fstp
cld
stc
in
lret
shl
xor
hlt
aam
jmp
cmp
cmp
xor
fcmovnu
fst
addb
adcl
leave
not
rcr
out
icebp
std
call
mov
enter
xchg
xchg
orb
fcmove
lret
fcomip
sti
icebp
cld
out
mul
jmp
into
orb
rol
aaa
icebp
hlt
xor
std
ljmp
movb
loop
iret
xchg
into
aam
shll
cs
cmp
stc
in
dec
cmp
ret
aam
in
sub
sti
cld
out
test
shl
repz
repz
ds
adc
sarl
loope
jmp
in
nop
enter
lock
shr
int3
cmp
out
std
stc
cli
dec
out
jmp
sbb
and
aaa
aad
lds
xlat
sar
rcl
xlat
clc
aad
mov
in
jecxz
nop
loop
popl
aam
cli
fldl2t
sti
ljmp
out
xacquire
ljmp
int
cmp
cmp
lret
sar
cmp
mul
xchg
cmp
fld1
leave
shr
xchg
xchg
iret
xor
jecxz
int3
das
lret
int3
aas
fxch
roll
mov
mov
xchg
int3
aad
xor
ss
fidivl
cmp
rcl
in
out
adc
fucomi
fadds
rcl
into
cmp
in
cmp
cmp
ds
jecxz
jecxz
cmp
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
xorl
jle
mov
in
cld
addl
in
fdiv
int3
sti
aas
cli
in
idivl
test
ljmp
and
jmp
into
cmp
hlt
aad
fcmovnbe
sub
addl
mov
loope
into
out
sub
lret
shl
shl
into
adc
and
loop
mov
out
lock
fcmovu
iret
fdivr
cmp
test
ljmp
sbb
out
adc
ror
imul
shr
aad
into
cld
addl
int3
adc
into
jmp
shrb
aaa
fucompp
in
cmp
aad
int
cmp
in
call
rol
mov
xchg
mul
in
ret
mov
test
iret
jmp
aam
rcl
in
fstp
jmp
jecxz
call
repnz
aad
repnz
testl
fstp
jmp
out
int3
clc
loop
aaa
cmp
div
shll
int3
rol
idiv
ret
call
or
out
out
xchg
jmp
jmp
jmp
iret
adc
shl
cld
neg
mov
cmc
adc
repz
ret
into
into
enter
ret
test
fprem
xlat
in
faddl
mov
xchg
fsubp
fsubrs
enter
cmp
cmp
ljmp
fldl
lret
int
cld
mov
cmc
lock
not
in
leave
aad
xchg
test
lea
enter
lret
int
or
test
hlt
mov
lret
enter
ror
jecxz
clc
xor
aaa
xor
in
repnz
fcmovnu
test
jmp
std
fcmovbe
repz
lock
out
cmc
loopne
xor
jmp
testl
hlt
xlat
call
in
cmc
cmp
ffreep
sbb
loopne
call
jmp
xchg
cmp
in
fadd
cmp
stc
stc
repz
loop
sub
fiadds
xchg
into
call
cmp
lret
rolb
aas
fdivr
hlt
test
jmp
flds
xchg
int
clc
ret
sar
xor
adc
jmp
xlat
in
les
loopne
in
mov
fsubr
jmp
and
xor
enter
neg
jmp
std
fdivr
mov
ljmp
loope
in
lret
and
fcmovb
clc
sti
int
ror
jmp
aam
dec
leave
sti
lret
fsubr
fsubr
stc
out
cld
mov
ss
or
aas
sti
sarb
repz
stc
iret
ror
jmp
out
fadd
cli
out
shlb
fcomi
fucomip
loope
aad
iret
hlt
sar
xlat
adc
loopne
orl
xor
int3
ret
repnz
lret
cmc
in
loopne
xlat
hlt
fsubrp
fiaddl
test
lea
jmp
fcom
rcl
out
aas
ss
in
xchg
call
xchg
xchg
enter
rolb
ret
ss
cmp
aam
out
flds
loopne
cli
test
mov
hlt
nop
subb
aad
cmp
fucomp
cmp
out
test
filds
in
lds
rorb
aad
not
clc
repnz
icebp
aam
icebp
into
into
std
xlat
shr
test
mov
leave
mov
icebp
loope
loop
ljmp
cmc
iret
call
ror
jmp
frstpm(287
enter
cmc
shr
fmul
out
divl
lock
xor
fucom
ret
fisttpl
xchg
aam
fdiv
ss
sar
ror
into
lock
hlt
test
jecxz
xchg
xchg
iret
xchg
test
idivb
add
andl
add
adc
jmp
rcl
aad
rcrl
lds
or
jle
xlat
ret
aam
cmc
imul
lret
out
ret
cmp
stc
in
stc
jmp
mov
das
shlb
hlt
bnd
int3
std
loope,pt
xlat
loope
in
jmp
mov
in
jmp
stc
cli
leave
repnz
clc
adc
repz
std
xlat
fimuls
das
rol
stc
xor
xor
lret
in
cmp
loopne
ret
enter
fmulp
xchg
int
std
movl
out
rcr
cld
hlt
clc
rcr
cmc
cld
rcr
fmuls
lock
xlat
into
lock
fsubp
fadd
icebp
fiaddl
in
ljmp
jmp
cmp
cmp
stc
clc
leave
lock
xlat
hlt
loope
mov
fucomip
mov
out
call
xor
ror
cmc
cmc
ljmp
cmp
mov
in
lock
int3
xchg
sub
lret
cs
aas
cmc
in
fcomip
ror
aas
ror
shl
stc
xlat
leave
loopne
icebp
sti
out
iret
int
cmc
xor
clc
cmp
cli
sti
aam
hlt
test
hlt
fildl
cld
in
cld
mov
repz
cmp
jmp
fcom
out
stc
cmp
xchg
aad
std
stc
fucomip
in
movl
cmp
fdivp
int
stc
repz
mov
jmp
fninit
mov
nop
nop
jecxz
fcomi
cmp
jmp
repnz
repnz
std
jmp
mov
add
out
int3
adc
loopne
xor
int3
into
fmul
in
int3
add
sti
fdivp
in
fcmovu
std
sub
out
jmp
out
fdivrl
hlt
div
ret
ret
jecxz
clc
leave
xlat
loope
or
xchg
rclb
out
enter
jecxz
jmp
fst
repz
stc
fdivr
in
in
cmp
leave
in
lds
cmp
cmp
ljmp
test
jecxz
sub
fst
iret
xchg
xchg
xlat
ror
clc
icebp
ffree
into
enter
cmp
cmp
sti
clc
fdivp
fstp
in
into
mov
jmp
sarb
cmc
shl
cmp
test
in
rcr
hlt
loopne
mov
ljmp
aam
stc
into
ds
aad
fcomp
cli
idiv
ror
enter
fimuls
into
leave
jecxz
xor
call
fcmovbe
add
xchg
ds
clc
fmulp
leave
xchg
mov
jmp
aad
shl
into
in
fst
idivl
ss
shl
into
ffree
rcr
fucom
into
test
jmp
xor
shl
in
aad
out
cmp
roll
fsqrt
cmc
test
lds
lock
iret
cmp
out
loopne
lret
hlt
aad
out
in
lret
mul
cld
ror
out
out
nop
ror
xor
fld1
fnsave
in
int
cli
hlt
aad
cmp
mov
in
in
xchg
jmp
xor
out
in
cmp
fiaddl
call
mov
loop
xchg
leave
sar
cmc
xchg
ret
sub
ss
fcmovu
call
fidivrl
test
cli
lret
xchg
lret
in
in
aam
iret
in
out
int3
leave
fistpll
clc
cmpl
bnd
cli
hlt
mov
in
jmp
adc
in
in
enter
aas
int3
hlt
in
hlt
in
sti
fdivr
xlat
lret
test
call
icebp
cmp
cmc
xor
fdivrp
call
shl
xchg
leave
call
icebp
icebp
int3
ljmp
leave
cmp
cmp
faddl
shl
inc
mov
out
xchg
mov
aaa
stc
in
cmc
ljmp
xlat
and
loope
std
fdivr
fildl
mov
lock
cmp
in
cmp
lock
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
inc
push
inc
shrl
sti
jg
roll
jle
cmp
aad
xor
orl
xchg
mov
cmp
out
in
ds
add
ret
fisttpll
stc
shr
xchg
shr
and
in
xor
aaa
repz
fistpll
in
int3
fld
sar
mov
xchg
in
xchg
adc
lock
out
out
hlt
aaa
ds
out
sti
cld
jmp
fiadds
xlat
int
cmp
fcom
test
std
fprem
loope
loope
in
fcmove
mov
rcl
icebp
repz
xlat
sti
shl
clc
out
fdivrl
shr
in
lock
std
fcomi
frstpm(287
jmp
adcl
in
loop
xor
fcmove
sar
repnz
call
aad
sti
iret
std
out
orb
hlt
ret
icebp
loope
cld
fnsetpm(287
loop
jmp
in
enter
aad
vpsllw
ljmp
ds
adc
out
leave
loopne
int
xchg
int3
ljmp
ror
icebp
shl
fcmovu
in
ljmp
lret
cmc
xchg
repnz
jecxz
hlt
cmc
in
in
stc
aad
out
cli
fldl
loop
in
or
adc
iret
out
shll
hlt
rol
enter
mov
fsubp
in
lret
rol
lret
int3
hlt
repz
icebp
rcr
idiv
enter
int
jmp
cld
in
nop
jmp
aad
in
jmp
jecxz
in
shl
ds
ljmp
icebp
repz
aam
jmp
cmp
idiv
cli
in
test
lock
iret
ret
div
mov
in
in
fucom
loop
loope
rol
fdivrs
jmp
cmc
int
in
out
aas
loope
aam
cmp
int3
mov
repnz
rcr
fdivr
ds
into
add
fcomip
leave
aam
stc
dec
call
sub
xor
idiv
hlt
loopne
ret
sbb
jecxz
clc
fildl
lret
popl
cmp
xlat
fdiv
fcomp
add
ds
fst
rcr
out
call
jmp
decb
repz
ror
leave
ss
ror
clc
in
out
addl
repz
clc
int
cli
jmp
clc
int3
neg
ffreep
test
rol
sti
stc
fucomip
mov
nop
std
out
jecxz
xor
cmp
in
xor
fidivrs
shl
testb
std
loop
xchg
out
nop
xchg
jecxz
out
not
call
rcr
fcmovu
leave
int3
inc
fisttpll
xchg
lret
xlat
sub
ret
lock
int
lock
cmc
rolb
mov
mov
mov
jmp
loopne
in
cmp
in
cmp
cmp
out
aad
idiv
hlt
fimull
nop
hlt
mov
aam
stc
ror
xor
aaa
jmp
rcr
int
hlt
incb
xchg
fsub
loope
leave
mov
into
out
in
xlat
aas
enter
cmp
test
testb
into
lock
lret
in
out
leave
cmp
call
cmc
adc
sar
xlat
test
mov
into
jmp
xchg
shl
call
cmp
cli
cmp
cmp
adc
repnz
jecxz
adcl
aad
ss
xlat
repz
cli
fdivr
in
fcmovu
loop
hlt
std
enter
out
xchg
sti
loop
aaa
vcvtpd2dq
xlat
hlt
cmp
dec
into
cmp
cmc
out
cmc
cld
lret
cld
std
std
repz
out
mov
enter
leave
xor
cli
std
icebp
or
test
cli
int3
lret
test
lret
aaa
int
out
out
ds
jmp
sti
xchg
fnsetpm(287
call
xchg
sar
in
fcomp
lock
cmp
xor
aas
idiv
ret
sbb
out
int3
in
int3
fldl
mov
ss
rcl
lock
stc
aas
loopne
loope
jmp
clc
mov
in
loopne
rol
inc
clc
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
push
inc
jg
roll
jle
jmp
out
xor
fnstsw
int3
cmp
hlt
fdivrp
clc
xlat
add
out
lret
nop
repnz
xchg
xor
aam
enter
int3
repz
out
loop
out
ffreep
int
fucom
icebp
test
ljmp
sar
ror
xor
and
rol
mov
xchg
mov
icebp
loop
fcomi
std
cmp
inc
in
fdivl
aas
repz
out
ljmp
xor
into
cmc
cmp
cmp
lret
shl
fnstcw
loopne
out
out
ret
mov
loope
call
cmc
neg
enter
cmp
cld
loope
test
cld
movl
mov
int3
rcl
in
clc
in
rcl
cmp
shl
ljmp
in
out
in
jmp
in
imul
fcom
loope
hlt
repz
in
loope
hlt
cli
cmp
and
repz
shll
cmc
stc
leave
aad
lock
cmc
loopne
fcmovne
fiaddl
loopne
shl
rorl
in
lret
fdivrs
jmp
fstp
sti
mov
fadd
out
cld
test
faddl
loop
lret
jmp
in
aaa
call
xlat
aam
cmp
add
addb
in
in
in
xlat
leave
fcmovnu
icebp
cmp
ret
ds
test
test
jmp
iret
out
ljmp
in
xor
addl
jmp
shl
jmp
xchg
xchg
call
shl
int3
std
fscale
loopne
xlat
in
into
fsubrp
fadd
mov
mov
call
out
div
lret
ss
rcr
cld
ds
shl
hlt
fdivp
sub
ret
loop
mov
lock
icebp
cmp
div
out
cld
loopne
fcmovnb
orb
xchg
mov
out
f2xm1
xlat
cld
fidivl
cli
fcmovbe
xor
shl
cli
loop
call
ficoml
sub
jmp
jmp
icebp
fsubrp
into
fdivr
rolb
cld
iret
ljmp
jmp
int
cmp
xor
sbb
repz
fucomi
jmp
test
int
lock
repnz
cld
hlt
in
fcomp
aas
out
aam
hlt
testb
lret
icebp
sub
ljmp
cmp
std
mul
cmc
loop
aas
shl
mul
xor
ljmp
call
ret
out
int
cmp
pushl
cmp
rol
lds
out
rcr
loop
mov
enter
lret
cli
loop
sar
xchg
clc
jecxz
dec
xchg
xchg
cs
cmp
into
clc
fdivrp
in
test
and
aad
hlt
jmp
mov
mov
lock
call
into
cmp
ds
out
sti
ret
in
out
mov
lret
fld
out
sti
filds
sti
xor
fmulp
ljmp
icebp
sti
sub
out
out
fucomp
rcr
test
cmc
iret
out
xor
leave
hlt
in
xor
int3
in
icebp
repz
ffree
mul
mov
lock
and
ss
ss
in
ss
cmp
fcomi
xor
xchg
loope
jmp
jmp
in
icebp
dec
cmp
ret
ss
fstp
out
jmp
cmp
sti
call
fmul
in
rorb
ljmp
rcl
sbb
mul
aad
xlat
in
movb
imul
lret
lret
fcomp
out
leave
rcr
fldl2e
sbb
loop
fucomip
clc
mov
hlt
repnz
hlt
xor
cmp
dec
cmp
aad
stc
test
in
shl
call
test
jecxz
ret
leave
xor
cmp
aam
sarb
aad
in
icebp
lock
aam
hlt
sbb
fiaddl
jmp
lock
fcom
icebp
in
cmp
rol
faddp
in
xchg
int
int
ret
das
lock
icebp
sti
cmp
loope
jmp
cli
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
in
mov
addb
loop
rcr
cmp
out
cmc
sti
lret
ret
icebp
xchg
out
call
out
out
mov
xor
lret
hlt
cmp
fiaddl
xchg
jecxz
out
decb
rcl
hlt
xor
xor
std
in
int
repz
aam
sub
jecxz
jecxz
cmc
iret
das
ret
lret
xor
cmp
in
icebp
call
notl
mov
jmp
cmc
cmc
xor
ret
in
xchg
ret
out
into
fmul
icebp
int
call
aam
in
fsincos
lock
in
clc
loop
aam
stc
fadd
loop
cli
cli
into
sbb
fcoml
repnz
lock
call
into
stc
xlat
aad
cli
cmp
int3
lock
ret
sti
lret
xor
in
repnz
sti
test
addb
in
test
jmp
fdivp
fmul
out
aam
clc
ret
loope
mov
in
shr
in
lock
aaa
call
repnz
xor
fnstsw
sarb
ret
fiadds
in
faddl
icebp
cmp
cmp
repnz
idiv
add
test
addl
loope
mov
jmp
icebp
incl
rcr
cld
icebp
repz
jmp
in
cld
int
loope
das
into
out
sar
int3
cmp
incb
aad
aam
addb
jecxz
into
jmp
xor
fxch
out
cmp
rcl
loop
loope
sbb
mov
stc
jecxz
lret
xchg
dec
int
stc
cli
cmp
aaa
in
cmp
rol
call
xchg
movl
jmp
out
xor
fdivrs
cs
cmp
xlat
out
cmp
test
loope
fdivr
mov
shl
xchg
out
ljmp
rol
hlt
cmp
icebp
incl
cli
loop
lret
addb
in
stc
call
jecxz
repz
mov
pop
lock
repz
out
jmp
test
add
loope
incb
popl
fidivrl
xor
into
cld
jmp
stc
repnz
rcr
icebp
fsubr
ljmp
enter
jecxz
lock
jmp
shlb
lock
repz
cmp
repnz
cld
leave
cld
lea
lret
in
enter
jmp
fld
cmp
sbb
rolb
leave
jmp
call
aam
cmp
aad
fdivrp
cmp
cmp
lret
lret
jmp
in
fildll
int
aad
sar
aad
cld
stc
jecxz
lock
inc
call
xchg
enter
popl
icebp
cs
cmp
loop
ds
fcmovnbe
std
jmp
mov
fdivrp
fcoml
hlt
call
leave
adc
test
xlat
fcomi
hlt
ljmp
ljmp
iret
imul
jecxz
in
fcmove
into
loop
ret
cmp
jmp
ret
mov
cli
ljmp
jmp
in
hlt
addb
fisttps
test
ss
jmp
cld
shr
aas
out
cli
xlat
and
call
lock
shl
jmp
lret
ljmp
sti
xchg
loopne
loop
incl
out
hlt
div
jmp
fxch
fsubr
cli
in
int3
ret
testb
stc
mov
cli
iret
loop
repz
stc
das
cld
xor
shl
fldl
aam
mov
mov
lret
shll
loop
aam
call
cmp
loope
call
ret
neg
jmp
mov
repz
cmp
in
in
fidivrs
sub
jecxz
ljmp
std
repnz
icebp
aaa
xor
in
xor
inc
arpl
orl
add
imul
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
pop
mov
lea
jg
roll
jle
enter
rolb
mov
stc
xchg
out
int3
iret
mov
iret
in
aaa
xor
cld
cld
mul
aad
ret
out
int3
std
in
shr
nop
fdiv
loop
in
cmc
ljmp
aas
fnstsw
jecxz
fadds
in
test
repz
enter
lock
icebp
aam
idivb
ds
loope
leave
shl
xchg
mov
incl
sarl
cmp
cld
cld
fcmovne
aad
xlat
cmp
adc
cli
ficoms
sar
loope
xlat
xor
lock
out
fprem1
repz
test
ljmp
and
test
mov
das
shlb
repnz
std
repnz
ret
clc
fsub
imul
test
test
xchg
xchg
xchg
loop
stc
sti
idivl
cmp
out
loopne
in
ret
in
rcr
cmc
xchg
cli
in
in
in
int
aaa
idiv
out
cmp
cld
jmp
hlt
ds
fcmovne
movl
test
in
shl
xor
enter
leave
test
cld
rolb
in
aas
enter
mov
loop
sub
loop
cli
iret
icebp
aad
int3
leave
cli
cmp
cmp
cmp
lret
xchg
into
out
call
int3
cmp
fucomp
dec
loop
enter
fneni(8087
lock
out
xchg
ljmp
in
jmp
fcom
div
inc
mov
ret
xchg
in
in
addb
xor
enter
stc
aam
iret
repz
ret
fisttpl
out
out
mov
int3
leave
divl
stc
out
ror
xor
repnz
enter
test
loopne
aaa
sar
in
sar
in
cli
loope
fcmovu
call
out
out
in
xchg
in
aam
xor
ret
out
jmp
cmc
fsqrt
rolb
test
jecxz
lret
fcomip
out
nop
das
xor
int
out
shr
jmp
shl
xchg
fcmovbe
fcmovbe
stc
loop
lock
ljmp
out
cmp
fidivrs
fdivrs
repnz
fucomp
fsubp
std
movl
xorl
xor
xor
ds
rcl
cmp
jmp
loop
out
int3
lock
in
cmp
sar
in
lret
jmp
ljmp
xor
lock
cmp
clc
ss
repz
xor
out
ret
mov
jecxz
mov
ljmp
lret
cld
iret
std
cmp
lock
addb
lret
xchg
jecxz
hlt
fsubp
loope
fmul
hlt
std
sti
int
shr
cmp
shl
jecxz
orl
xchg
lock
cmp
fsubr
cmp
clc
in
rolb
mov
xchg
jmp
loope
aam
shl
repnz
xor
lret
cmc
aam
sti
aam
clc
aam
in
cli
fisttpl
mov
fucompp
das
in
sarb
fsub
shl
out
fimull
aas
loop
fcom
xchg
out
xchg
jmp
leave
xor
cmp
loopne
aam
rcl
cmc
out
aas
xlat
in
xchg
into
fcomi
nop
std
xchg
sub
out
ret
cmp
aaa
enter
repnz
loop
fiaddl
xlat
std
fcmovne
cmp
cmp
aad
in
sar
lret
sarb
repz
aam
out
std
out
cld
addb
cmp
aam
enter
cmp
call
mov
addb
ret
not
int3
shr
xchg
xlat
sti
ret
std
movb
jmp
in
xor
cmp
std
fbstp
repz
fucomp
cli
test
fsub
xlat
jmp
in
into
in
out
cmc
lds
stc
xor
clc
hlt
stc
cmp
xchg
in
int3
fcmove
cli
dec
leave
xchg
out
xchg
jmp
call
fdivr
stc
fcmovnu
fadd
in
repnz
loop
jmp
fisttps
or
add
add
add
add
or
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
cli
mov
jg
roll
jle
fst
mov
in
aad
aad
lock
sar
clc
shl
test
fucom
mov
stc
loop
mov
xchg
shll
loop
icebp
out
lret
in
stc
rcl
fcmovnb
test
sti
cmp
mov
sar
out
or
xlat
stc
cmc
jmp
out
cmp
loope
loop
int
rcl
test
sbb
loop
mov
lock
ror
ljmp
cmp
lock
ljmp
movb
cmc
rcr
repz
repz
repz
in
cmp
fxch
std
aas
in
fsubr
xchg
in
xor
stc
in
fldcw
ljmp
iret
lock
and
vpmaxub
fucomp
shl
repz
shl
std
icebp
fcmovnb
fcomp
ds
xchg
rolb
xchg
lea
shl
fsubr
cmp
repnz
out
les
jmp
test
in
in
lds
xor
div
sti
icebp
cmp
imul
cmp
ror
ret
loope
ret
in
fmul
mov
hlt
jmp
in
cmc
fsubrp
rcl
incl
test
mov
fcmovnbe
int
loopne
vpmacssdd
aad
aad
out
loope
aad
hlt
sbb
jecxz
in
jecxz
fcmovne
out
into
mov
xor
cli
in
std
fxch
cmc
hlt
neg
cmc
aad
sbb
out
mov
out
out
out
shl
push
in
fildl
mov
decl
loop
loopne
test
xor
aaa
out
cmp
repz
fcmovnu
idiv
fidivrs
fadds
call
int3
xor
aad
sti
imul
cmp
std
cmp
and
jmp
test
hlt
mov
loop
shlb
jmp
idivl
icebp
fcmovne
imul
aad
mov
in
cld
filds
push
lret
out
lret
sar
ss
rol
std
shl
sti
cmp
cmc
filds
jmp
out
ss
xor
icebp
out
sub
lock
enter
mov
jmp
int3
xor
lock
fcmovnbe
and
aam
cmc
cld
mov
cli
std
lds
repz
aam
cmp
icebp
sarb
loopne
cmc
rcl
test
movb
xchg
xchg
test
ret
cli
fdivl
idivb
cli
incl
aad
out
jecxz
repnz
aam
lock
fnstcw
iret
loop
aas
cmp
mov
fcmovnu
mov
fmul
icebp
jmp
and
xor
repnz
out
not
lret
cmp
test
sarb
ret
cld
idiv
out
icebp
out
call
xorb
ret
sti
cld
clc
fcom
lock
lock
orl
iret
in
call
lock
stc
neg
cmp
cli
cmp
cmc
call
enter
call
in
in
lret
mul
out
stc
xor
in
fdivrl
iret
fdivr
adc
ret
out
decl
div
lock
lret
sti
hlt
sti
jmp
test
fsubp
fildl
in
xchg
lret
out
neg
rcl
test
ljmp
test
cmp
hlt
test
std
xchg
mov
loop
int
lret
out
out
std
clc
repz
sti
std
mov
clc
fsubr
leave
xchg
mov
in
ffreep
les
xor
fdivr
fdivrp
xlat
lret
cmp
aas
ds
ret
xchg
std
incb
loope
loope
fxch
int
cmp
xor
idiv
in
aas
aad
cld
cld
cli
mul
mov
jmp
xchg
in
cmc
out
xor
in
repnz
loope
rol
aam
out
ret
mov
aad
jmp
fcoml
fcom
jmp
aam
cmp
out
rolb
test
jmp
into
leave
xor
fidivrl
cmp
loopne
dec
sti
les
stc
test
jmp
lret
out
fsubp
int
loop
shr
int
sti
std
jmp
inc
in
jmp
aam
enter
aad
cmp
and
loop
stos
dec
nop
jg
roll
jle
rcl
jecxz
icebp
xlat
cmp
cmc
call
mov
cmc
test
loope
fdivr
cmp
ljmp
addl
lret
fmull
out
cmp
imul
xor
leave
clc
repnz
fcmovu
ljmp
fpatan
call
cmp
leave
lock
into
ss
addb
faddl
incb
loop
jmp
das
ftst
cli
xor
shlb
cmp
cmpl
ds
repz
fcmovnu
testb
mov
lret
xor
out
clc
fstp
iret
icebp
jmp
cmp
aam
vpaddusb
out
addb
mov
mov
shr
xor
cld
call
loope
out
in
test
xchg
out
mov
xchg
lret
call
icebp
cli
xor
repz
cli
repz
out
mul
in
sti
out
out
loopne
out
bnd
shl
fprem
aas
xor
imul
xlat
cli
aam
hlt
cmc
mov
jecxz
leave
loopne
in
in
lret
repz
xor
stc
int3
cmp
cmc
icebp
sar
iret
shl
iret
icebp
aad
jmp
loope
sbb
mov
leave
xor
dec
int3
sarb
repnz
jecxz
in
jecxz
fld
mov
xchg
int3
ret
das
cli
leave
ror
pushl
stc
and
fstp
loop
in
xlat
mov
lret
call
int
clc
stc
sar
shl
cmp
repz
xlat
ftst
std
std
loope
ret
aam
in
int3
cmp
icebp
sub
shll
into
repnz
into
enter
aas
aad
rcr
ljmp
test
repz
icebp
cmp
sub
stc
call
aas
ret
inc
fsub
in
test
in
dec
icebp
loopne
xor
xor
lock
repnz
std
enter
loope
out
out
xchg
xchg
cs
out
icebp
cld
out
aas
ror
xchg
faddl
dec
lock
test
icebp
aas
xor
cmp
call
loope
sar
aam
sti
aam
mov
add
into
int3
out
and
xor
iret
out
jmp
repz
fmuls
sti
repz
lock
jecxz
sti
div
std
jmp
shr
fsub
jmp
in
mov
shl
ljmp
cmp
clc
fucomp
into
testb
in
idiv
into
mov
xor
lock
lret
icebp
cld
repnz
roll
fsubr
int3
fdivrp
test
ss
ljmp
into
jmp
loop
loopne
repz
xlat
enter
cli
rcr
xchg
into
aas
shr
hlt
repz
out
xlat
shl
xor
clc
xchg
mov
add
in
lret
loopne
lret
fsub
int
out
lret
cmp
ret
xlat
mov
fucomi
std
jmp
fsubp
xchg
xorl
int
rol
sar
sar
sbb
ret
loop
mov
mov
int3
test
out
out
in
hlt
ss
out
cmp
cld
repz
fld
xlat
fildl
out
jmp
out
icebp
xor
in
in
cmp
stc
lret
sti
repnz
icebp
fadds
lock
xchg
xor
xor
cli
fsubr
idiv
loopne
sbb
out
cmc
xchg
test
jecxz
jecxz
mov
mov
repz
rcr
leave
jmp
int
xchg
rorb
enter
repnz
xor
aad
xor
xor
sarl
iret
filds
ret
fnsetpm(287
jecxz
lock
int
fsubrp
xchg
stc
repnz
cmp
call
sti
cmc
cmc
cmp
cmp
loop
test
cmp
rcl
hlt
aam
out
jecxz
in
idiv
xor
xor
clc
cmc
out
std
test
jmp
mov
aas
repz
sar
shll
loopne
incl
rcl
out
xlat
fcomp
jmp
rolb
sti
aam
out
int
cmp
out
lret
in
int3
adc
push
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
in
xor
clc
sub
repz
rcl
int
repz
mov
xchg
or
fcomip
in
xor
out
call
xor
cmp
cmp
sti
mov
cli
loope
std
jecxz
jmp
loop
int
xor
ret
cmp
repz
cli
not
in
fcom
les
fimull
cmc
mul
rcr
stc
xor
fdivr
divl
ret
out
out
fsincos
call
enter
icebp
jecxz
in
cli
out
sti
clc
cmp
repnz
idiv
rcr
cli
aam
addl
sti
fsubrp
lret
std
test
ret
shl
cmp
lock
sar
rol
neg
fmul
lret
int3
loop
repnz
test
out
out
cmp
cli
cmp
rcl
loop
in
xchg
in
loop
jmp
xchg
mov
ljmp
cmp
rcl
out
lock
sbb
out
lea
xchg
mov
loop
lock
aam
shr
lock
xlat
shl
sti
sub
mov
fsubr
in
repnz
shr
loope
shll
stc
icebp
rcl
ds
out
lock
idiv
ljmp
xchg
rcl
idivb
cmp
roll
std
ret
xlat
mov
mov
hlt
out
fsubr
fdivr
cmp
rcr
cmp
xor
cmc
xchg
cmp
out
int3
xchg
std
fisttpll
aam
out
in
cli
icebp
aas
int
add
in
fiadds
in
decl
in
das
out
xor
lock
cmc
fmulp
lds
loopne
jmp
mov
in
in
ljmp
aaa
cmp
sar
int
iret
aad
out
mov
in
mov
into
xlat
shl
out
cmp
int3
std
jecxz
loop
lds
mov
fucomi
enter
int3
loope
out
loop
jmp
out
sbb
std
ret
sbb
call
testb
aad
leave
test
cli
repnz
ljmp
jecxz
incl
xchg
in
jmp
xor
ret
clc
out
jmp
loope
cmc
clc
out
fcmovne
out
stc
test
fisttpl
filds
out
cmp
repnz
ret
ret
loope
enter
ljmp
fdivrp
iret
jmp
fdiv
in
out
xlat
cmp
aam
cmc
aad
cmc
iret
aas
not
fcomi
ljmp
lock
ljmp
lret
cmc
in
adc
int
call
cmc
repnz
repnz
cld
into
jmp
repnz
int3
in
sarb
into
cmp
xchg
hlt
fsubrp
ljmp
sub
aaa
xor
hlt
int
repnz
hlt
fnop
fscale
repz
out
ffree
clc
fiaddl
sar
loope
shr
clc
cmc
ss
hlt
clc
cmc
clc
addl
cld
stc
jmp
out
shl
ret
sub
out
cmp
fldl2t
jmp
fmul
ret
cmp
icebp
fadd
lret
and
fucomi
mov
out
cld
in
int
std
aam
shlb
addl
jecxz
lret
lock
fucomi
xchg
shl
repz
xlat
fldln2
out
cmp
repz
out
cmc
clc
clc
iret
vpmaddwd
fsub
sbb
nop
loope
in
xchg
in
ss
out
iret
fadds
jecxz
test
rcr
int
mov
incb
sub
into
repnz
std
cmc
ljmp
cmp
mul
fldpi
int
sub
shl
jmp
in
cli
xlat
out
cmp
in
aam
sub
ret
out
call
lret
lock
cmp
xor
in
aam
stc
loopne
jmp
fimuls
stc
jecxz
hlt
out
int3
cmpb
repz
xchg
xchg
int3
leave
repz
fmul
out
fdivrp
idivb
fidivrs
xor
flds
out
fmulp
out
adc
hlt
icebp
cmc
in
enter
not
lock
in
dec
or
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
shl
cltd
jg
roll
jle
test
loope
loope
incl
rolb
cmp
xor
cmc
aas
sar
cmp
sar
xchg
in
in
loopne
jmp
hlt
lret
out
in
ljmp
test
jmp
fiaddl
jmp
nop
mov
xor
into
hlt
sar
stc
repz
hlt
loopne
lock
fsin
cmc
fxch
ror
into
test
shl
in
jmp
lock
sti
repz
jmp
shll
icebp
in
clc
clc
imul
cli
out
fmul
cld
mov
ss
cmp
cmp
cmp
roll
not
rcr
clc
enter
fsubrp
and
ss
fpatan
div
xor
cmp
out
adc
xchg
add
loop
xchg
cmc
fyl2xp1
ret
cld
out
lret
iret
ret
test
in
xchg
in
fstl
lock
fcmovb
out
out
fmulp
in
in
icebp
cmp
out
in
cmp
iret
icebp
mov
mov
xchg
test
int3
rcl
icebp
ret
lock
hlt
sti
leave
or
enter
fldln2
in
aam
clc
fucomi
hlt
leave
sbb
stc
cmp
shl
in
incl
mov
sub
xlat
cmp
out
lock
in
loopne
lock
jecxz
mov
fisttps
xchg
mov
int
repz
cld
jmp
xor
mov
jmp
fsqrt
sti
sti
jmp
xchg
in
in
lret
xor
aam
ljmp
cmp
loopne
out
in
in
mov
ljmp
xor
imul
fmulp
rol
test
sbb
loope
jecxz
ret
xchg
xor
xchg
leave
out
cmp
in
repz
adc
test
repz
mov
cld
xchg
xchg
aam
sub
jecxz
jecxz
shll
std
cmp
ret
ds
ret
cmp
lret
fisttpll
in
out
test
ljmp
fcmovbe
rol
jmp
call
test
xchg
hlt
xor
sar
cmp
cmc
in
cmp
xlat
fmulp
loop
fcomp
jmp
lret
hlt
aam
fldln2
fcom
cmp
cmp
out
cmp
out
xor
ret
addl
nop
xchg
shlb
clc
cmp
cmc
xor
xlat
clc
shl
test
test
mov
fchs
loop
in
loop
int
repz
out
fdivr
hlt
push
rcr
fadd
fcmovnb
ror
mov
int
mov
xchg
xchg
int3
ss
ror
xor
in
sar
hlt
cmc
cli
sub
fcmovne
sar
fcmovne
push
out
leave
out
rcr
xor
std
aas
icebp
addl
mov
int
ss
int
int3
int
addb
flds
orl
out
lret
in
fmulp
loop
aad
rolb
xchg
cld
rcr
call
ss
repnz
in
repnz
iret
and
fld
mov
clc
in
orl
test
out
in
aam
std
enter
fidivrl
ror
cmc
hlt
mov
fadds
jecxz
aad
cmp
xor
in
cmp
repz
movl
xchg
xlat
into
iret
xor
leave
rcl
iret
and
cmc
test
sbb
cmp
xchg
rolb
out
in
in
leave
fcmovbe
ljmp
mov
jmp
fmuls
icebp
loop
into
clc
fnstcw
std
lock
std
stc
hlt
xor
call
test
nop
cs
xor
xor
aaa
jmp
aas
xchg
xchg
test
in
mov
mov
sar
jecxz
out
in
clc
rcr
imul
in
into
aad
cmc
repz
cld
jmp
iret
lock
mov
int3
cli
sarb
sti
neg
iret
hlt
fildl
mov
jmp
loope
ficoms
xor
imul
enter
fmul
fnstcw
aas
out
inc
popf
jg
roll
jle
in
push
loope
loopne
loope
icebp
stc
fdivr
cmc
mov
mul
out
leave
out
xchg
rcl
jmp
xor
out
cmp
shl
ds
fcmovnu
mov
testl
in
fisttpll
leave
std
lock
repz
cli
fcmovbe
aam
into
fsubp
test
int3
out
lret
cmp
cmp
idiv
sti
out
xor
out
mov
sub
cli
cli
sti
leave
std
shlb
fld
aad
fdiv
ret
fcomip
loope
repz
xchg
icebp
out
mul
hlt
shl
in
ror
repz
icebp
aaa
aas
out
ret
xchg
testb
hlt
icebp
icebp
in
out
ret
jmp
stc
xor
into
cmp
sar
fcmovnbe
stc
fcmovu
in
dec
jmp
mul
stc
xor
cmp
xor
aaa
ds
fiadds
lds
orl
shl
out
leave
imul
repz
sbb
loop
ret
test
fldl
mov
jmp
aam
loopne
rcr
jecxz
idivb
fmull
xlat
call
sub
out
fptan
lret
call
out
xor
aas
out
lock
in
stc
orb
icebp
ffreep
ret
ljmp
lret
ds
mul
in
std
fiaddl
in
in
xor
sub
icebp
out
sti
shl
cmp
xlat
out
mov
call
out
iret
call
hlt
xor
sub
std
fucomi
lock
div
in
in
repz
jmp
loop
xchg
lret
sub
in
into
clc
cmp
out
xlat
in
neg
add
loope
enter
sti
xchg
std
fucomip
sub
xor
fmulp
sar
rol
testb
movl
out
clc
les
out
fstpt
aaa
stc
mul
repnz
fxtract
fsincos
clc
les
mov
enter
aaa
hlt
cmp
leave
aad
cmc
loope
lock
faddp
mov
shr
lock
xor
in
out
sti
jmp
fdivp
stc
loopne
rolb
jmp
mov
iret
jmp
lret
out
rol
int3
xor
icebp
lret
into
jmp
out
mov
fsub
ljmp
jmp
int
out
fcom
leave
cld
fdivr
cmc
flds
rorb
or
fcmovne
fucom
aad
enter
in
lret
sarl
out
sar
xlat
aas
jmp
xchg
call
shl
lock
into
cli
cmp
call
cmp
test
aam
decl
mov
jmp
aaa
cli
hlt
lock
idivb
aas
or
iret
test
movl
jmp
nop
xchg
in
enter
call
addb
cmc
incb
mov
int3
icebp
fprem1
xor
std
sti
test
div
fdiv
lds
out
jmp
xchg
fadd
xor
div
cmp
fmul
cmp
hlt
fcmovu
in
cli
cld
int3
xlat
out
int
icebp
or
hlt
leave
xlat
xor
fsubr
loop
ret
iret
jecxz
shl
test
repz
int
xchg
in
test
int3
loope
cmp
sti
out
hlt
not
cld
out
lret
in
testl
fcmovb
leave
ljmp
repnz
sar
cld
and
into
xchg
int3
aad
into
repz
cmp
shlb
ss
adc
in
cmc
decb
sar
cld
nop
xchg
cmc
ror
cmp
jmp
stc
call
vaddsubps
mov
cmp
ljmp
aas
xor
cmp
lock
lock
shl
stc
idiv
call
fadd
lret
int3
out
shl
lret
mov
jmp
ljmp
fiadds
iret
icebp
cld
xbegin
mov
xor
fidivl
cmp
repnz
test
call
out
movb
shrb
add
imul
enter
fst
ffree
and
dec
jo
jne
pushw
mov
jle
stc
call
out
int
stc
xlat
aad
lret
lret
stc
cmp
leave
xlat
int
jmp
out
mov
icebp
lock
jmp
idivb
loope
ret
call
filds
out
nop
xor
cmp
cmp
out
sbb
rcr
cmc
ds
and
mov
fadd
iret
leave
jmp
xchg
loope
in
aad
in
int
aad
sarl
sarb
fucom
in
leave
std
int
hlt
xchg
xor
out
cld
cs
fxch
aaa
loopne
cmp
iret
and
xlat
jecxz
testb
std
test
int3
out
int3
aam
int
loope
in
adc
call
call
cmp
int3
repz
xlat
lret
fcmovu
repz
lock
lock
ret
aad
lret
mov
ljmp
in
iret
out
cmp
aad
loopne
lret
cmp
repnz
incl
cli
mov
orl
in
jmp
sarl
ljmp
mov
decb
aaa
into
fdivrl
rcr
loop
not
cli
testl
aas
aam
iret
rcr
hlt
cli
cli
aam
fld
hlt
repz
fcomip
in
xchg
xchg
test
enter
ret
jmp
std
stc
shl
stc
mul
repz
fsub
sbb
jecxz
lock
lret
shl
shl
dec
xor
xlat
jecxz
rcl
fiadds
aad
in
lock
xchg
sar
xlat
cld
cmp
cmp
ds
shl
orb
int
xchg
ljmp
cmp
out
shl
xor
rol
mul
xchg
incb
icebp
xchg
call
loop
xlat
cli
stc
lret
icebp
loopne
aaa
shl
cld
out
lret
mov
jmp
mov
loopne
lea
cmc
cli
xor
cli
fcmovbe
jmp
shl
fsubp
in
faddl
in
xchg
aaa
call
repz
cmp
shl
rcl
loopne
stc
not
aas
out
out
xchg
cmp
subl
aam
clc
in
into
in
aas
repz
out
mov
out
fsubp
orb
lret
fidivrl
stc
aaa
lock
sti
std
out
xlat
rolb
out
test
ljmp
cmp
enter
testb
fiaddl
out
out
leave
addl
xor
xor
xor
out
in
lock
jmp
dec
orb
rol
stc
cld
icebp
xor
inc
into
aas
fidivrs
loop
aad
and
out
jecxz
shll
aam
xlat
fnstsw
cmc
sarl
test
mov
decl
fcmovne
out
xchg
sub
cmp
cmp
dec
cmp
int3
aas
cmp
xlat
sti
lret
in
or
sti
repnz
out
into
sar
repz
neg
repz
jmp
aad
aam
movb
xchg
out
test
lret
ss
std
rcl
clc
int3
jecxz
test
repnz
sti
test
call
xchg
xor
icebp
xor
shl
out
repnz
cld
aas
cli
lock
cmp
int3
rcr
rorb
out
aaa
std
out
in
in
xor
enter
loopne
movb
xor
cmp
cmc
shr
cld
cli
icebp
test
cmp
aam
fnstsw
test
icebp
orb
cmc
in
stc
icebp
idiv
std
dec
int3
sarl
cld
loopne
mov
test
sti
repnz
shl
out
std
in
cld
hlt
fsub
rcl
jecxz
xor
int
in
out
decl
in
cmp
out
aam
fsubrp
loop
loopne,pt
aam
mov
mov
clc
out
enter
fisttpl
into
rcl
aad
std
aaa
loope
cld
cmp
cmp
out
icebp
lock
test
fcmovbe
xor
aaa
sarb
shlb
add
arpl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
pusha
and
jg
roll
jle
cmp
fdivrp
hlt
test
loopne
out
mov
nop
jmp
xchg
jecxz
repnz
add
leave
fcmovbe
loop
lock
out
lret
iret
xor
fucomip
mul
ret
mul
test
fucom
jmp
into
out
int
xor
xlat
cmp
xor
cld
aad
jecxz
stc
ret
neg
stc
out
int3
hlt
in
hlt
out
xor
hlt
int3
aad
repnz
aam
cld
aad
jecxz
decl
sub
jecxz
into
into
xor
fsincos
xlat
loopne
stc
aas
lret
into
into
out
cmp
jmp
sbb
cld
rorl
xor
shl
fxch
ds
test
aas
clc
mov
out
in
popl
rcr
jmp
stc
incl
ret
hlt
sub
in
xor
jmp
out
sub
enter
cmp
aam
cmp
sbb
neg
ret
loope
out
jmp
sub
shl
int3
sti
leave
out
in
ret
ret
mov
lret
ljmp
aam
test
call
hlt
shl
out
aad
sub
fsubp
clc
in
shl
ljmp
xlat
xlat
ror
out
shl
cmp
loopne
and
xchg
jecxz
icebp
cmp
out
cld
cmc
stc
cmp
in
div
iret
fadd
lds
int
out
ljmp
in
out
divl
shl
sar
rcl
icebp
repz
cld
lret
sti
mov
out
repnz
iret
aad
in
rcr
fsubr
std
cmp
fcmovnbe
in
xlat
in
in
fxch
iret
xchg
fstp
xor
das
shl
out
cld
fcmovnbe
cmp
cli
fcomip
sar
ds
leave
loope
inc
lret
xchg
xchg
ljmp
xor
in
aam
sti
fdiv
std
icebp
cmp
sti
clc
mov
loop
call
decl
icebp
cmc
aam
jmp
ljmp
iret
testb
test
out
into
in
mov
in
icebp
cmp
cmc
into
cmp
int3
xchg
xchg
vpsrad
icebp
ror
call
das
ret
xor
fmul
in
ror
ds
ffree
rcr
dec
enter
movb
hlt
ljmp
cld
aad
cli
cli
aas
loop
std
in
xchg
xchg
lret
enter
jmp
out
xor
aam
cmp
shr
xchg
cld
jmp
fsubr
out
jmp
xor
cmp
out
iret
cmp
jecxz
in
fmul
test
repz
fmul
shr
int
ds
stc
aad
adc
out
mov
fsub
adcl
cmp
cmp
loop
xchg
neg
test
out
xchg
sbb
out
lret
call
xlat
sti
cmp
ds
cld
loope
stc
loope
in
xchg
shr
in
leave
cmp
iret
ror
rol
fcmovnbe
cli
out
into
int3
enter
loope
jmp
lret
aam
faddl
incl
cld
addb
out
nop
ret
shlb
idiv
int
in
fadds
clc
mov
cld
nop
enter
xchg
in
jecxz
xor
in
std
rcl
rcr
rcl
ffreep
xchg
into
addl
aad
ljmp
sbb
ds
cmp
cli
clc
loopne
xchg
out
out
sub
not
cmc
lret
out
into
sti
xlat
cmp
loop
or
in
loope
in
xchg
ret
rol
in
sar
clc
lret
ds
fnstsw
xlat
test
xchg
ret
addb
in
xchg
fstl
int3
iret
ss
enter
fucom
sti
and
ret
ljmp
int
std
out
lock
aad
ljmp
call
aam
out
cmc
fstp
rolb
test
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
scas
mov
jle
lock
iret
cmp
jmp
std
out
lret
cmp
filds
lock
in
nop
xchg
in
shr
aad
div
rcr
fdivrl
loope
out
cld
mov
out
fsub
in
jmp
xchg
out
hlt
das
imul
aaa
leave
stc
xor
stc
stc
cmp
out
rcl
movl
mov
fidivrl
hlt
clc
cmp
cli
repz
loop
in
jecxz
orb
aad
xor
cmc
lret
aaa
call
leave
ret
and
jmp
sbb
loopne
xor
jmp
cmp
filds
fcmovu
ret
fstp
clc
bnd
xor
out
aam
xor
ds
adc
sti
fsub
faddp
lret
ficoms
jmp
in
cmp
hlt
in
fyl2xp1
call
loopne
nop
fucomi
cmc
mov
repnz
stc
cli
int
into
hlt
hlt
loop
in
ss
shl
mov
testl
sub
cmp
jmp
loop
clc
aam
incl
in
clc
into
std
adcb
leave
hlt
lret
rcl
iret
fistpll
fcmovu
loop
movb
jmp
out
rcr
mov
fdivr
icebp
clc
xor
shl
std
ret
xchg
xchg
cli
into
mov
xor
aad
cli
xlat
aam
cmp
out
fadd
lock
test
in
sar
icebp
xchg
in
xor
hlt
ss
cld
rcl
sub
addb
mov
mov
fldl
clc
int3
xor
test
test
ret
jecxz
test
test
push
std
mov
in
fincstp
lret
int
cmp
aam
neg
test
sti
test
ljmp
lret
jmp
cmp
iret
out
fcmovu
hlt
fidivrl
test
in
ret
enter
int
hlt
int3
cmc
xchg
cmp
out
xor
cld
cld
lock
cmp
sti
out
jecxz
add
test
test
into
in
xor
iret
int3
sarl
cmp
aad
fsub
ret
out
nop
xchg
out
int3
loopne
cmc
das
aaa
ljmp
ds
ss
xlat
ret
call
loop
out
xchg
xor
xor
out
fmul
sub
shl
aad
mov
iret
stc
filds
loop
out
lret
shl
cmp
stc
std
xchg
icebp
ljmp
lret
mov
xchg
xchg
into
xor
ss
xor
leave
ror
cmp
rolb
lret
test
fisttpll
xor
in
aad
fcmovnbe
int3
cmp
sti
xlat
loopne
out
stc
stc
jecxz
addl
int
int3
call
in
cmp
shl
test
xlat
addb
sti
icebp
rol
ljmp
fucomi
iret
out
addl
stc
xchg
xchg
loop
hlt
add
ljmp
into
jmp
iret
call
sti
cmp
std
repz
xchg
loop
xor
loop
shr
in
cmp
cli
int
rcr
ffreep
lock
hlt
clc
std
jmp
rclb
out
repnz
hlt
xor
fbstp
iret
rolb
in
mov
lret
jmp
shl
xor
out
div
xor
loopne
xor
jecxz
fld
aam
test
jmp
sub
loop
loop
jmp
cmp
clc
fsubr
ror
into
rcr
xchg
ljmp
int
sar
mov
xor
repnz
cld
cmpb
cmc
icebp
in
test
dec
sub
aam
cld
std
cmp
clc
into
out
sti
rcr
std
shl
enter
sub
mov
xor
xor
ss
cmp
xlat
ret
ffreep
loope
mov
clc
cli
mov
mov
lock
int
enter
leave
xlat
int3
jmp
loop
testb
arpl
add
add
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
in
adc
imul
roll
jle
cmc
cld
cmp
ljmp
test
add
lock
fcmovbe
cmp
or
cld
xlat
ffreep
mov
fdivrp
stc
repnz
in
rorb
ror
rcl
clc
enter
cmp
stc
fcomip
cli
out
call
rolb
int3
cmc
shl
fidivl
out
ljmp
ret
rcr
cmp
icebp
ljmp
xor
divl
hlt
and
neg
stc
fstp
inc
cmp
sti
in
sti
loop
xor
in
xlat
stc
lds
fmul
aad
loop
loopne
ret
jecxz
jmp
mov
repnz
icebp
loop
xor
ret
jmp
sbb
roll
mov
mov
cld
fsub
icebp
in
xchg
out
cmp
loope
test
out
rorb
enter
xchg
in
xlat
xor
sti
cmp
add
shl
leave
xchg
xlat
int3
sti
xchg
sti
loop
test
hlt
loopne
int
in
fdiv
aas
or
cmc
jecxz
std
repnz
call
test
shl
xor
das
les
cmp
aam
lock
stc
shl
loopne
stc
xchg
jmp
xor
aad
fucomi
fsubrp
cli
cmp
fstp
cmp
enter
out
test
xor
xor
icebp
aaa
out
call
dec
add
and
fsub
faddl
xchg
xorl
jmp
fprem
idiv
loop
out
in
shr
out
ret
sti
cmp
into
cmp
lret
into
shl
sti
sarl
fcmovnb
fdivr
fmul
out
sub
xor
lret
repnz
loopne
jmp
xlat
roll
std
ljmp
xchg
ljmp
aad
ljmp
ds
stc
sti
mov
xlat
mov
cld
jmp
rolb
out
cmp
ds
sti
fidivrs
repnz
fld
call
decb
aam
leave
xlat
cmp
cmp
jmp
sar
xor
test
or
xchg
lret
icebp
mov
int
repnz
lock
jmp
icebp
ror
icebp
int
xor
jecxz
mov
loope
into
iret
addl
lret
xlat
ljmp
icebp
cmp
aaa
loop
fiadds
into
jmp
lret
popl
mov
cmp
aad
fdiv
idivl
aam
iret
out
cld
out
jecxz
out
fcmovb
repnz
fisubrs
repnz
xor
cld
shlb
in
cmp
addl
hlt
ftst
ror
into
out
fdivrp
adcl
int3
clc
shl
ss
jecxz
loopne
mov
loop
rcr
test
cmp
lock
hlt
sarb
rcl
jmp
fxtract
fsub
fdiv
xchg
neg
jmp
cli
mov
in
aad
in
shlb
aad
mov
mov
fcmovne
lret
fnstsw
xorl
int
int3
xor
fcomi
xor
and
std
rolb
int
or
fucomp
call
out
out
cmp
ret
sti
stc
sar
adc
lret
hlt
cld
loope
in
in
out
fcmovnbe
fsub
cli
cmp
out
ljmp
repnz
icebp
icebp
sti
fsubp
in
aad
ret
ljmp
sar
sar
fcmovnb
and
out
std
out
xchg
repz
call
fdivrp
leave
aad
rcl
rcr
rcl
loopne
leave
in
out
test
jmp
imul
iret
fxch
clc
in
loopne
testl
fimuls
lret
imul
shr
jmp
std
cmc
shl
loope
sbb
loope
lret
aam
hlt
jmp
repz
out
hlt
int
xor
neg
xchg
movl
nop
mov
repz
ss
fidivl
cld
clc
aam
adc
fld
mov
enter
xchg
ljmp
adc
cmc
mov
add
add
fwait
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
push
scas
loop
jg
roll
jle
lret
in
cli
div
fdiv
sti
cmp
rorl
std
lret
ret
mov
rcl
lret
cmc
enter
out
cmp
leave
div
stc
fcmovu
sbb
clc
nop
enter
aam
out
xor
xor
xlat
hlt
int3
loop
in
shl
sar
dec
mov
faddp
xchg
fdivrp
into
das
fld
not
sti
xor
leave
idivl
aam
cmc
cmc
loope
fucomi
loope
lret
test
repnz
enter
cmp
fucomip
cmp
clc
out
fdivr
call
into
sti
rolb
out
sti
icebp
lock
shl
rcr
xchg
adc
mov
leave
lock
mov
xor
out
aam
cmc
into
cli
loopne
hlt
mov
jmp
out
fcmovne
addb
lret
cmp
xor
cld
int3
rolb
mov
shl
int3
out
call
ljmp
loopne
cli
cli
test
jecxz
sub
fucomip
xchg
repnz
sar
fcom
aaa
int
out
ljmp
aam
lds
xchg
ffree
int3
adc
rol
xor
cmp
idiv
hlt
out
addb
call
jecxz
leave
jmp
xor
mov
xor
int3
cmp
aad
cmc
test
aam
idivb
call
xchg
in
fsubr
sub
clc
aaa
sbb
cmpl
testl
out
das
mul
shr
xor
shl
std
repz
aas
hlt
out
testb
hlt
test
call
out
stc
fdivr
cmp
pushl
incb
shl
jmp
sub
stc
out
sti
in
cmp
cli
sbb
aad
cli
rolb
int3
jmp
mov
mov
loope
test
aam
stc
rol
rcr
cmp
ret
sub
filds
rorl
lock
aas
loop
repz
iret
xor
test
loope
clc
xchg
out
xchg
aad
sub
in
lret
enter
std
sarb
fiadds
shr
mov
hlt
into
aaa
ljmp
out
shl
rcl
fldl
fsubp
loopne
lret
iret
xchg
xchg
xlat
out
cmp
out
out
aaa
stc
into
ds
test
lock
out
faddl
shr
xor
mov
fsub
test
enter
out
in
cld
cld
push
repz
aas
decb
mov
cmc
test
cmc
xor
shr
clc
int3
repnz
test
leave
jecxz
clc
xlat
mov
jecxz
jecxz
lock
in
shr
xor
xlat
stc
repnz
cli
std
sbb
ror
mov
out
fisttpll
xor
out
lret
int3
sbb
loope
sti
out
hlt
ret
loopne
leave
fdivr
in
repnz
div
out
idiv
shr
lock
xor
repnz
addb
hlt
cld
jmp
xchg
in
and
rcr
aas
jecxz
orl
out
in
fmull
xor
in
aaa
stc
icebp
clc
cmpb
int3
fistpll
ljmp
jmp
aad
in
repz
aad
ljmp
rol
les
and
xchg
int
dec
inc
shlb
lret
cmp
loope
jmp
test
mov
out
loopne
icebp
dec
ss
cmp
aad
ss
cmp
jmp
div
rorl
xlat
dec
xchg
divb
cmp
cli
das
cmp
pushl
cli
shl
aad
lock
jmp
std
in
addl
xor
lock
rcl
sti
hlt
fcmovnbe
jecxz
enter
sbb
jecxz
cld
sti
out
xor
int3
aaa
xor
cli
xor
addb
lea
mov
sub
lret
rcl
sti
cmpl
rcl
add
xor
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
cli
lret
in
std
hlt
repz
hlt
ss
rcl
cmp
stc
aad
fcmovnu
neg
fsubp
faddl
into
mov
rcl
int
lock
jecxz
cmp
cli
xchg
test
mov
loopne
test
test
in
xor
rcr
cmp
fidivrl
aas
xchg
cmp
mov
push
out
xor
jmp
not
cmp
icebp
ds
fabs
lret
int
jmp
out
jecxz
lret
ljmp
icebp
rcr
jmp
fdivr
xchg
mov
mov
repnz
int3
cli
cmp
cli
rcr
or
loope
in
loope
mov
loop
fdivp
iret
iret
cmp
repz
aam
jmp
test
cli
ret
mov
xchg
fldln2
test
in
inc
ljmp
ss
xor
lret
sbb
addb
into
in
xchg
out
icebp
xor
shr
xor
sti
imul
test
test
clc
xchg
nop
sbb
mul
ljmp
int3
int3
xlat
clc
xchg
mul
mov
xchg
fmull
jmp
adc
in
aaa
cs
shll
loopne
ds
cmc
repnz
jecxz
loop
ljmp
xor
ljmp
addl
cmp
loope
jmp
xchg
rorl
into
aam
cmc
ljmp
sti
hlt
in
fsincos
fsub
nop
rcl
mov
adc
out
ret
fidivs
std
ljmp
fcmovbe
out
in
ret
decl
loop
call
rcl
into
xlat
ss
repnz
cmp
cmp
vpmuludq
flds
mov
in
jecxz
jmp
xor
int3
jmp
clc
shl
jmp
addb
ror
jecxz
xchg
fdivrs
ret
aam
xor
jmp
sti
ret
repnz
cmc
aad
loope
int
addl
into
ds
jmp
sbb
rolb
loop
nop
loopne
and
aam
not
cmp
into
cmp
call
cmp
fsub
lock
loop
mov
ljmp
xchg
xor
aad
ljmp
cmp
aam
mov
in
stc
stc
ret
in
cld
out
pop
loop
in
ljmp
test
mov
out
xor
std
out
int
out
xor
cmp
iret
lock
out
lret
jmp
std
jmp
jmp
out
into
ljmp
in
idivb
shl
aam
cli
rcr
cld
cmc
lret
xchg
sti
fiadds
icebp
xor
enter
xor
hlt
cmp
test
xlat
shl
jmp
loope
xchg
out
out
std
repz
aad
leave
aad
icebp
std
aaa
hlt
rcr
ds
rol
call
mov
sti
xor
int3
jecxz
leave
cmp
fnsave
shl
clc
addl
jecxz
cli
fcmovnbe
out
shr
shl
aad
in
call
sti
movb
test
ffreep
xchg
mov
out
in
enter
ss
clc
fadds
in
loope
out
cmp
out
cli
xor
cmp
cmp
in
cmp
aad
loopne
jmp
loop
and
repz
cmp
loope
flds
sar
test
or
sub
test
out
shll
ss
cmp
test
neg
sbb
fildl
and
in
out
int
fsubr
hlt
shl
not
sti
call
lret
fsubr
mov
lock
cli
test
iret
sarl
cli
std
sbb
rcl
test
call
in
aas
into
int3
clc
sarb
in
cli
sti
ljmp
fsin
repz
hlt
std
loop
enter
jmp
jmp
xor
mov
add
ret
cmp
add
ret
pop
jmp
rol
lret
fstp
aad
dec
jns
push
push
sti
mov
roll
jle
lret
int
cld
shr
in
rol
cld
orb
mov
xor
rol
icebp
sub
cmp
cmc
test
cmc
mov
iret
int
nop
adcb
aad
leave
imul
aas
out
iret
in
out
mov
fisttps
sbb
cmc
fbstp
ljmp
icebp
adc
add
loop
lret
std
in
in
mov
ret
int
lret
fldt
fdiv
rcl
loope
cmp
loopne
loopne
ret
loop
addb
sub
sti
out
cmp
sti
and
hlt
jecxz
enter
int3
std
in
xchg
loope
xor
aad
iret
jmp
repz
cld
faddl
jecxz
lret
loope
dec
lret
mov
aad
aam
ds
xor
out
flds
fstp
in
repz
xor
hlt
sti
dec
in
in
cmc
cmc
ret
cmc
call
jmp
mov
and
in
xor
stc
fdiv
aam
iret
div
repnz
fcmovu
test
aad
lret
std
out
xchg
xchg
in
xor
repz
divl
cmp
sbb
fmuls
enter
out
ljmp
xor
ror
jecxz
aad
loope
sti
mov
ror
call
lret
lret
jecxz
out
cmp
in
cmp
roll
rol
fcomi
mov
fsub
lret
lret
in
shl
into
out
xor
cmc
jmp
aas
jmp
fnstsw
icebp
out
out
out
cld
test
xchg
jmp
test
iret
repz
add
das
aad
ror
cmp
loope
ds
sbb
stc
fsubrp
enter
mov
lret
ret
jecxz
fdiv
div
cmp
cmc
lret
push
sti
loopne
vpavgb
mov
in
ret
aam
hlt
cmc
repnz
repz
cmc
out
std
fcmovnbe
cld
movb
jecxz
xchg
lea
xor
ss
jmp
int
cmpl
cli
filds
jecxz
aam
aaa
out
leave
cli
les
rcl
fcomip
repnz
cmc
cmp
jecxz
in
std
icebp
repnz
in
cmc
inc
xor
shl
ljmp
cmp
jmp
int3
xchg
in
aad
div
rolb
sti
test
xlat
lret
fimuls
xchg
fsub
cmp
out
clc
repz
fsubp
shl
adc
cmp
xchg
ret
fadd
mov
mov
cld
out
repz
ss
hlt
in
out
imul
aas
cmpb
xchg
rcr
in
mov
mov
shl
in
stc
icebp
fucomi
ds
clc
cmc
loopne
loope
hlt
xchg
roll
aaa
aaa
leave
cli
out
fcmove
fsubr
lret
icebp
iret
and
lret
into
out
and
int
ljmp
call
cmp
lock
ljmp
out
xor
not
fyl2xp1
lock
cmp
adc
lock
loopne
decl
adc
into
leave
iret
fmul
cli
shll
sti
xchg
addb
lret
mov
xchg
xlat
repnz
xor
fidivrl
xor
std
sti
test
leave
aad
sti
stc
mov
mov
sarb
sub
cmp
out
aaa
hlt
cmp
in
into
and
repz
test
int3
faddl
ror
sub
in
fadd
out
sti
icebp
into
fcmove
stc
loop
cli
std
xchg
adc
addl
loop
sar
iret
shr
xor
cld
test
fadd
cli
clc
jmp
shl
sub
and
loop
ret
fcmovnu
shl
rcl
repz
sub
enter
fsubrp
loope
lret
repz
aas
aam
int3
repnz
jecxz
repnz
movl
in
int
mov
int
lock
loope
rcl
loopne
fsub
call
mov
fld
iret
decb
test
sbb
add
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
cmc
jmp
aam
shr
fst
into
loopne
cmp
shl
out
loopne
jmp
iret
dec
iret
aam
call
xor
aas
xor
ret
xchg
mov
into
and
mov
xor
jmp
idiv
in
aam
shl
fdivr
in
fsubp
xchg
xlat
cmp
nop
shr
fst
int3
in
cmc
hlt
fsubr
cmp
aam
fsubr
adc
hlt
fcomi
aad
test
nop
lret
mov
int3
lret
rcr
stc
cmp
repz
out
lret
clc
in
rcl
stc
cmc
jecxz
fcmovnbe
out
and
into
xchg
cmc
aam
imul
hlt
aaa
ds
lret
shl
xlat
out
fdiv
aam
cli
jmp
jecxz
fcmovb
rolb
ret
lret
repz
aaa
aad
ret
cmc
rol
icebp
jecxz
out
fimuls
out
das
jmp
shr
fcmovnbe
lret
fbstp
les
clc
out
mov
ffreep
fisttpl
ljmp
dec
lock
cmp
fcmovnb
test
fabs
jmp
fdivp
lock
fsubr
lret
std
int
loope
in
aad
lock
in
stc
sti
orl
fcmove
cmp
ss
aam
call
test
loope
out
shlb
iret
fmul
fdivp
leave
aam
inc
shl
sub
orb
xchg
call
repnz
in
cmp
ss
ds
repz
shl
jmp
mov
xor
xlat
stc
shr
call
rcr
shl
call
jmp
movl
lock
fcmovne
cmp
stc
loop
faddl
ljmp
leave
out
cmc
rorl
int3
idivb
loop
jmp
fdiv
test
cmc
call
ljmp
clc
cmc
cmp
shr
cmp
notrack
cli
mul
ret
in
test
out
call
call
into
sti
enter
ss
xlat
aam
in
xchg
loop
in
mov
lea
icebp
icebp
cld
fidivrl
call
sar
xor
xchg
in
call
shlb
cmc
div
shr
fucom
cmp
xor
repz
hlt
rorl
adcl
repz
leave
iret
call
sti
flds
out
cli
mul
lret
xchg
jecxz
aam
cld
cmp
icebp
cmp
cmp
addl
jmp
mov
icebp
cli
shl
rcl
fcomp
ds
repz
test
repz
sub
test
int
in
div
int3
call
fdivs
in
ljmp
fadd
dec
clc
loope
std
xchg
mov
test
sub
in
lret
clc
in
fidivrs
rcr
enter
faddl
lret
xchg
out
shll
aad
xor
divl
idiv
fnstenv
cld
mov
into
in
jecxz
in
or
div
xor
leave
call
idiv
sbb
ret
enter
test
ret
shll
cmp
cmp
aam
aam
adc
mov
fucom
movl
ret
int
cmp
cmp
xchg
ret
mov
mov
dec
mov
lret
in
aam
out
not
stc
cmp
int
repz
std
ds
repnz
in
leave
adc
rcl
fcmove
rcl
jmp
rol
rolb
cli
test
nop
iret
out
icebp
xchg
jmp
cli
sti
int
lret
div
ror
out
loopne
in
in
jmp
out
mov
lret
fists
not
fdivl
aaa
loopne
rcl
xor
xchg
repz
hlt
stc
cli
mov
iret
xchg
xchg
rorl
lret
int3
jmp
xlat
repz
in
lock
stc
mov
fucomp
faddl
rcl
xor
into
ret
call
out
repnz
fmul
out
orb
mov
mov
xor
add
jmp
ror
rcl
mov
cmp
jle
add
addl
lret
leave
lock
test
not
aam
in
out
cmp
cmp
loop
icebp
rcr
rcl
in
sbb
mov
in
xor
cmp
fucomp
ret
in
loope
stc
lret
in
in
nop
orl
xor
ljmp
cli
xchg
jecxz
xchg
in
orb
icebp
jmp
cmp
cmp
loope
ljmp
mov
xchg
aas
int3
call
xor
loopne
fst
icebp
cli
mov
jecxz
out
orb
cs
fcmovne
cs
repz
call
cmp
mov
jmp
fsubr
out
cli
sub
repnz
lds
jmp
enter
cmp
hlt
stc
fstpt
mov
faddp
mov
stc
mov
xchg
mov
lret
aad
in
xor
jmp
div
mul
shl
fsub
clc
xlat
imul
fmull
xchg
xor
lock
out
xor
cli
iret
mov
shl
shl
lret
fdivrp
adc
aad
shr
fcmove
shl
cmc
in
out
ror
sti
aad
sbb
fdivp
loope
jmp
loope
jmp
out
in
cmp
jmp
sar
cmp
xlat
add
cmp
loopne
loope
into
mov
mov
into
test
mov
aam
out
sti
in
dec
repz
cli
fnstsw
hlt
test
iret
lock
call
in
jmp
loope,pt
rcr
icebp
repnz
loopne
mov
xchg
call
out
ffreep
in
cmc
iret
cmp
hlt
cmp
test
fdivr
ret
aad
int3
test
int3
jecxz
and
xchg
add
iret
ss
std
aaa
fdivrs
fnstsw
loope
shl
out
mov
lret
out
into
test
int
xor
clc
cli
int3
in
leave
iret
inc
stc
aas
fdivp
xchg
jmp
enter
xchg
call
shl
mov
hlt
sar
sti
fdivrp
in
not
cmp
std
cli
cld
movb
icebp
rcl
das
out
rcr
shrl
cmc
lret
cmp
aas
ds
fadds
hlt
mov
fcmovnu
in
test
rol
sti
rcl
xlat
lock
clc
jecxz
loop
sti
cmp
in
xchg
repnz
fsubr
sti
leave
out
cmp
repz
rcr
aad
leave
mov
and
enter
sarl
sarb
ljmp
cli
test
xchg
cli
loope
out
fstl
fdiv
fidivs
shlb
lret
rol
rcr
xor
fldl
in
int
mov
mov
int
shll
lret
cmp
loope
xlat
cld
loop
shl
neg
testl
xchg
sub
ss
stc
divb
repz
ljmp
not
bnd
jmp
mov
ret
into
cmp
xor
cmp
cmp
sarb
fsubrp
mov
xchg
out
jmp
int
in
lret
stc
cmp
fpatan
into
loope
rcr
fld
in
fcmovne
mov
cld
mov
jmp
aam
shl
sarb
fdivrl
cmp
icebp
xor
adc
loop
neg
int3
in
enter
aam
jmp
jmp
fmulp
loopne
xor
cli
fdivr
out
test
lret
std
addb
mov
lret
lock
icebp
aam
loope
aam
testb
fsubr
fucomp
mov
lock
in
aaa
hlt
xlat
cmp
sarl
into
lock
xchg
nop
iret
xchg
call
shll
out
clc
div
repz
lock
ret
call
out
test
xor
sti
out
fstp
loope
div
cli
cli
loope
jmp
in
in
sti
mov
loope
icebp
rcr
out
lret
in
loope
stc
in
xor
div
stc
in
int3
fucomp
int
int3
shll
fcom
sub
fstpt
lret
stc
jmp
cmc
loope
into
rol
stc
mov
mov
out
xchg
in
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
imul
roll
jle
out
ror
out
xlat
rcl
int
sti
loope
lret
fstp
leave
in
dec
cld
rolb
lret
cmp
out
imul
xor
adc
div
clc
shl
xchg
cli
fadd
out
fucomip
test
out
xor
xor
iret
repz
adc
fimull
mov
mov
loope
in
loope
out
lret
hlt
xor
iret
leave
sar
loopne
clc
std
in
les
fiaddl
div
test
sar
out
sti
repnz
into
aam
shl
neg
cmp
mov
or
icebp
mov
out
lret
leave
int3
xlat
lret
add
iret
std
ds
fiadds
fisttpl
lret
int
cli
fucom
fdivrs
loopne
ffree
in
ret
lret
loopne
loopne
clc
mov
fdivs
into
fdiv
jmp
neg
test
lock
call
sti
enter
mov
in
jecxz
cmc
hlt
ss
out
cmp
adc
enter
in
sti
enter
out
shl
cs
cli
out
xor
xlat
idiv
hlt
xlat
shl
loopne
in
and
enter
xchg
out
repnz
hlt
cld
cmp
in
aas
adc
shl
in
fiaddl
jmp
adc
aas
loop
ror
cmp
int3
fcompp
cmp
test
fadds
mov
xor
and
xchg
nop
lret
test
xor
fcom
fsub
roll
out
fdiv
loop
cld
jecxz
jecxz
out
in
xor
out
cmp
cmp
fldpi
xor
out
clc
call
out
out
xchg
shr
out
out
sub
xor
rcl
enter
aad
fdivrl
repz
out
ljmp
mov
jecxz
xor
hlt
sar
repz
and
hlt
iret
fadd
fmul
lret
test
out
in
cld
xchg
xchg
nop
int3
xor
not
dec
cld
in
in
fucomp
lds
xlat
test
fmull
int3
in
in
out
out
ljmp
cld
hlt
fsub
hlt
repnz
sti
mov
cmp
out
jmp
rcl
jmp
out
sti
loope
call
aad
xlat
xchg
in
out
loop
loopne
in
in
jecxz
sarb
ss
aam
fistpll
aam
cld
mov
rcr
xchg
in
out
cmp
clc
lock
cmc
aam
xor
out
aas
loopne
roll
mov
xor
ror
cs
cmp
fcomip
aas
repz
test
xchg
mov
icebp
aaa
repz
rolb
in
fadd
sti
out
xlat
in
into
out
int
out
loop
xor
fucomi
aas
fdivrp
in
fcmovbe
adc
into
fcomp
fisttpll
ret
xor
out
int
jecxz
out
mov
std
fsubp
leave
fcoml
jmp
jmp
cld
not
leave
cmp
in
clc
int
test
fcomip
test
mov
stc
fsts
das
bnd
out
enter
clc
out
test
clc
call
flds
cld
rorb
sti
clc
cld
cmp
ds
fcom
test
cli
lds
test
call
lock
in
ljmp
cmp
sarb
and
in
out
in
aad
fbstp
hlt
repz
sti
leave
dec
jecxz
sbb
std
adc
loope
fsubr
lret
and
fsubr
rcr
fpatan
neg
sar
aam
test
in
ret
in
mov
out
jecxz
filds
enter
lret
cmp
ret
jecxz
leave
aad
leave
mov
lock
shr
test
int3
xor
ret
rcl
rorb
fninit
out
cmp
xlat
out
in
repnz
rcr
lret
in
cmp
into
rcl
icebp
loope
les
xchg
ret
aam
fdivrp
ds
fucom
loop
ror
xchg
clc
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
in
lret
enter
repz
ret
call
shr
addl
fucom
int3
cmp
out
fcom
repz
fcom
hlt
fmulp
shl
xlat
fcmovu
aam
repnz
test
in
ror
leave
ret
xor
xlat
stc
out
lock
loop
repnz
fadd
cli
in
orb
repnz
fcmovne
into
test
xlat
loopne
stc
in
jecxz
mov
loopne
cld
aam
jmp
out
lret
fcom
lret
repnz
aam
fadd
out
imul
out
loop
in
in
xchg
in
cmp
iret
stc
int
sar
repz
clc
stc
xlat
call
iret
xchg
xchg
std
addb
aaa
fxch
sti
lock
cmp
in
iret
loopne
sti
cld
fcmovbe
lock
loope
lret
lret
leave
hlt
into
fdivp
icebp
fxtract
loope
sarl
and
out
and
iret
cmp
stc
iret
repnz
aas
jmp
xlat
in
ret
ret
fsubr
inc
movl
idivb
imul
stc
sarl
cmc
ffreep
repnz
jecxz
out
jmp
repz
out
sub
ret
jmp
std
int3
int
clc
aam
fcmovbe
in
cmp
jmp
fcmovu
out
aam
enter
lret
testl
xchg
mov
in
xchg
jmp
xlat
ret
lock
jmp
fcomip
aas
ret
hlt
ret
fmul
lret
decb
out
sub
into
shr
int3
cmp
xor
fdiv
sbb
repz
loopne
std
fmul
mov
lret
call
std
in
cld
jecxz
icebp
fldl
and
fsubp
fildl
out
idiv
out
fmulp
xor
cmpl
fucomip
into
mov
xchg
lret
out
xor
xor
lret
lock
xlat
leave
rol
shr
shl
roll
rcr
cli
in
iret
out
repz
leave
jecxz
fmul
cmc
cli
not
out
lret
shl
sti
shl
cmc
xchg
loop
cld
rolb
sub
hlt
or
neg
shl
repnz
enter
cli
mov
std
xchg
loop
mul
in
aaa
lret
xor
fstp
cmp
test
test
loop
jecxz
xchg
out
out
or
shlb
int
lock
lock
hlt
stc
xchg
idiv
stc
in
dec
hlt
out
int
das
xor
out
clc
ljmp
int
ret
cld
jecxz
in
test
sti
mov
sti
cmc
into
clc
xor
cld
fdiv
call
cmc
mov
neg
out
in
into
cld
mov
shll
lock
cmp
cmp
int
fdiv
incl
loop
std
leave
out
test
icebp
repz
ss
into
cmp
repnz
lret
sti
mov
jecxz
lret
into
and
mul
lret
ret
cmp
cmc
cmp
in
cmp
sar
decb
loope
fsubrp
fimuls
cmp
cmp
xor
cmp
test
fiaddl
mov
out
in
in
sti
addl
das
xor
lock
repnz
xlat
cld
ljmp
test
out
hlt
repz
not
repz
fxtract
stc
or
addb
enter
fmul
shr
aas
in
leave
iret
into
xor
xor
fmul
rcr
aas
neg
std
mov
mov
loope
xlat
xor
out
cmp
in
aas
repnz
in
mov
lea
in
enter
out
int
lret
ror
cmp
out
and
cmp
jmp
xor
fidivrl
cmp
loopne
out
out
loopne
jmp
repz
sub
fdivs
lret
hlt
fstpt
hlt
testb
in
lret
out
les
iret
lock
ss
xor
out
fbstp
xor
add
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
cld
fildl
fucom
aas
test
xchg
into
cld
dec
adc
shr
not
xor
fdivl
aaa
int
rolb
repz
mov
enter
sti
leave
lock
idiv
in
int
cmp
sbb
ret
leave
enter
test
loop
repnz
int
cmp
ss
call
sti
flds
lret
incl
lea
sub
call
int
cld
lock
jecxz
test
loop
ljmp
cmc
xlat
cmp
xor
cmp
aam
fidivrs
push
fcmovnu
ljmp
ljmp
loope
sti
aad
repz
lret
neg
testl
loope
icebp
std
cmp
mov
call
aam
xlat
div
lret
cmp
rorl
mov
in
mov
ret
xor
fdiv
jmp
fadds
fcomip
cmp
icebp
addl
lret
cli
aad
enter
fcomip
into
cmp
and
orb
int
std
mov
in
sub
jecxz
das
lock
lret
clc
cmc
lret
out
fadds
repz
lds
repz
fsub
cmp
icebp
xor
cli
icebp
repz
loop
mov
jmp
rclb
clc
lock
fcmovu
out
aam
idivl
not
repz
xchg
enter
lock
mov
xchg
jmp
out
xor
out
in
fst
cld
ffree
stc
fucomip
in
ljmp
out
das
fmul
hlt
into
clc
cmp
cmp
neg
cmp
cmp
xchg
stc
mov
ret
fucom
ljmp
xor
shl
lret
aad
incb
mov
les
into
test
out
cmp
out
aaa
lock
ljmp
fdivrl
rcl
out
jmp
fisttps
out
iret
repz
xor
fcmovne
out
loopne
xlat
test
sub
faddp
cli
loop
test
jmp
out
icebp
jmp
imul
leave
call
in
out
repnz
ljmp
xchg
xchg
into
xchg
mov
in
neg
aam
ds
imul
std
faddp
ds
fadd
orl
enter
xor
fxch
aaa
out
out
in
test
orb
jecxz
incb
stc
in
lret
loope
fstp
shl
aas
rolb
addl
xor
aad
ds
test
ret
std
neg
ret
out
cld
fucomp
shl
loope
rol
imul
lret
int
into
cmp
out
fcomp
shl
aas
orb
stc
in
fstl
xlat
idiv
sti
xor
cld
loopne
jmp
cli
fmulp
repnz
cmp
loope
sti
flds
mov
aam
xor
add
rcr
rcr
fprem1
fimull
std
in
hlt
shl
ret
in
fcmovb
fnstcw
int3
lock
fildl
enter
xlat
fsubr
fdivr
int3
lea
out
call
aas
cmc
fdivrs
repz
enter
out
xchg
std
fmull
ret
imul
lret
stc
clc
leave
int3
fcom
test
in
faddl
out
mov
xchg
orb
loop
hlt
xor
cmp
into
cmc
xlat
test
aad
movl
aam
repz
jecxz
fcmovne
out
cmp
repnz
icebp
out
adc
stc
cli
clc
call
xlat
test
repz
testb
std
repz
lret
jmp
aas
fadds
sti
out
lret
cld
xchg
repz
iret
repnz
aaa
xor
fcom
ret
notrack
movl
hlt
aad
div
loope
lret
repnz
leave
sti
cmp
in
xchg
cmc
shl
jmp
int
call
xchg
aad
out
fdivr
into
cmp
imul
aas
cmp
shl
icebp
in
jecxz
mov
int3
and
mov
adc
imul
lret
mov
fildl
adc
jp
jg
roll
jle
loop
addl
div
lret
fstp
xor
orl
hlt
loopne
lds
xor
aad
lret
cmp
fiadds
out
iret
mov
mov
xchg
aaa
ror
loop
xor
leave
cmc
ljmp
out
xchg
jmp
cld
xor
iret
hlt
out
repz
ds
out
std
rcl
mov
xchg
xchg
loopne
rol
lds
cli
lock
enter
in
hlt
iret
out
repz
f2xm1
repz
cmc
out
fld
out
addb
ret
sub
sti
out
out
int
cld
cli
sar
neg
lea
in
cmc
sar
jmp
lret
ljmp
in
xchg
ret
call
icebp
loop
lock
cmp
xor
rolb
movl
out
stc
icebp
test
enter
int3
addl
test
not
shrl
out
sar
sarb
test
loop
ljmp
fucomp
test
ljmp
shl
addb
xlat
jecxz
nop
xchg
lock
loop
loopne
iret
cmp
ljmp
stc
xlat
out
out
aad
loopne
lret
out
int
rcl
loop
aad
xor
lret
ss
ret
fildl
mov
xlat
loope
jmp
ljmp
out
hlt
out
iret
aad
fnstcw
cmp
jecxz
repz
cld
enter
loop
cmc
call
cmp
enter
int
fdivrs
loope
lret
in
test
cs
int3
fyl2xp1
fnstsw
lret
icebp
iret
rcl
fiaddl
orb
int3
aad
in
cmp
in
enter
pushl
dec
fcmovbe
rorl
ljmp
mov
out
fdivs
les
lret
in
out
shl
loope
mov
sbb
enter
hlt
icebp
out
stc
aad
in
repz
loopne
rcl
sarl
lock
std
out
int3
addl
lds
cmp
cmp
ret
lock
mul
cli
movb
xchg
in
into
lret
cmc
in
in
lock
fidivrs
fnop
hlt
and
lret
mov
iret
cld
mov
lock
jmp
aas
sub
enter
rol
int3
icebp
cmp
rol
call
movb
or
lret
jmp
cli
jmp
xlat
stc
fdiv
cmpb
sti
jecxz
cli
loope
test
loopne
test
rcl
call
cmp
iret
xor
cld
fadd
cli
loop
ds
adc
fucomi
call
jmp
lea
clc
leave
repz
cld
sarl
sub
test
std
fsubr
mov
mov
mov
lock
and
shr
xor
xor
fcomi
aad
aad
dec
cli
inc
ret
inc
jmp
orb
ljmp
xor
fcmovnbe
cmp
flds
lret
stc
jmp
xchg
rol
xchg
std
loopne
shll
ror
out
xor
cmp
jecxz
ljmp
in
lret
out
aam
ror
out
aam
repz
leave
leave
in
cld
out
xor
ljmp
fdivrp
mov
test
jecxz
jmp
int
idiv
loopne
in
mov
call
ret
jmp
xor
xor
loop
ss
cmc
cli
fndisi(8087
hlt
loop
out
fyl2xp1
hlt
fcmovu
ret
mov
std
call
in
loop
out
in
rcl
fnop
cmp
fcmovne
cli
jecxz
icebp
neg
cmp
int3
ret
xchg
cld
mov
xorb
cmp
jmp
fdiv
shl
cmp
loopne
cmc
in
add
fsubrp
fucompp
jmp
aaa
out
das
in
out
lret
loop
test
faddl
mov
in
std
in
aad
out
not
lret
fsubr
fcom
mov
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
shl
lret
out
iret
lock
ss
hlt
out
aas
shl
aas
lock
ret
test
sub
ljmp
in
clc
jmp
neg
mul
aas
roll
aad
ljmp
iret
mov
fcomi
fcom
cmp
cmpb
cli
mov
test
out
int3
jecxz
xor
ljmp
shr
or
clc
orb
xchg
in
hlt
in
xor
shl
icebp
aaa
int
sarl
cmp
fcmovu
mov
fcmove
jmp
loope
loope
clc
cmc
enter
cmp
loope
cli
into
stc
mov
jmp
faddp
lret
sub
idivb
leave
cmp
cmp
test
repz
fildl
out
cld
mov
adcb
ror
fsubr
icebp
shl
stc
xor
in
fsub
out
mov
xchg
call
out
out
idivl
ljmp
aaa
iret
in
fcomi
xchg
jmp
xchg
jmp
adc
xor
in
aam
icebp
shl
loope
ljmp
jmp
mov
aad
shr
cmp
xorb
loopne
stc
leave
lret
in
movb
xor
repnz
xor
jmp
xor
clc
icebp
in
out
mov
mov
in
mov
orb
lret
xor
repnz
idiv
jecxz
xor
lret
cli
fdivr
or
call
cli
ljmp
lock
in
or
out
mov
leave
lea
in
in
das
cmp
div
cmp
fisttps
ljmp
loopne
cmp
cmp
cmp
cli
clc
loop
in
iret
ds
test
incl
xchg
iret
cmc
int3
rcl
xor
icebp
in
shr
push
sbb
xlat
cmc
jecxz
stc
loop
sbb
jmp
lea
int
ror
into
out
call
xlat
push
aam
les
xchg
mov
hlt
xor
fsubr
lret
stc
cli
int
fxch
in
sti
faddp
xlat
xor
loop
fcmovbe
xchg
mov
clc
sarb
aam
ror
in
rcl
out
icebp
cmc
cmp
ret
xchg
lret
loope
jmp
in
xchg
fucom
iret
loop
fcom
ror
fmul
cmp
shl
cld
fcmovu
testl
sti
lret
call
lret
repz
jmp
clc
jecxz
in
fsubp
loope
imul
test
icebp
shl
shl
iret
cmp
ljmp
xlat
fistpll
aad
xchg
fcmovb
loope
cld
iret
in
fsubr
repnz
enter
clc
loopne
cmp
mov
faddp
out
fucomi
clc
call
shl
xor
rcr
jmp
fst
fsub
std
ret
sar
test
sbb
test
xchg
loope
les
cmp
xor
out
not
xor
sub
in
jmp
loope
mov
loope
shl
repnz
clc
shr
lret
icebp
cmp
cmp
addb
cld
sub
leave
dec
jmp
in
ss
fdivp
push
cmp
loopne
lock
inc
jecxz
lds
shl
in
clc
cli
shl
hlt
cmp
jmp
ret
fmull
in
add
call
in
neg
xor
fnstsw
std
test
shl
stc
icebp
test
rorl
ss
cmp
loope
std
out
test
loopne
in
movb
in
into
out
int
cmp
call
repz
test
call
movb
mov
jmp
ss
jecxz
xor
fdecstp
repz
test
imul
ret
repz
cmp
in
call
fstp
jmp
jmp
enter
jmp
xor
xlat
in
cld
cmc
fdivr
stc
fcomp
decl
out
fisttps
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
xor
int
lret
enter
ret
cmp
testb
lret
sti
mov
out
cmp
cmp
repz
icebp
xlat
repnz
test
ret
shr
idiv
in
testl
into
in
cmp
std
aas
cmp
xchg
inc
and
xchg
icebp
std
int3
loopne
lock
int
cmp
aad
xlat
add
neg
shl
fimull
shr
loop
clc
fadd
div
in
rcr
fldpi
out
cmp
fcomip
call
xchg
int3
mov
int3
jmp
in
into
fnstenv
rcl
out
cmp
push
not
in
enter
test
enter
imul
into
lock
hlt
std
fsubr
fdivr
mov
fiadds
fsqrt
fstl
idiv
clc
out
fdivr
clc
fsubr
cmp
sub
flds
ret
and
mov
out
shl
in
cli
fdivr
int3
loopne
fdiv
fcmovbe
rol
cmc
fcomip
out
fcmovnb
mov
fists
cmp
cli
aam
aaa
fsubr
loope
std
ds
loop
leave
lret
orb
sub
rcr
icebp
shl
aam
out
cmc
rolb
out
incb
jecxz
loopne
in
aaa
xlat
in
aaa
lock
xchg
aad
lea
cmc
in
shr
xor
rcr
ljmp
aas
cmp
out
int3
lret
addl
ret
test
rol
sti
fstp
stc
test
stc
add
rcl
mov
loop
leave
fcomi
xor
aam
aas
aaa
lock
loop
adc
jmp
adcl
repz
in
stc
in
cmp
xor
rcl
test
aam
out
in
incl
iret
mov
xor
repnz
rcr
ljmp
sbb
mov
test
xchg
in
ret
iret
ljmp
out
in
fcmovu
loop
xchg
std
jecxz
iret
cs
fsincos
fcmove
idiv
xor
xor
xlat
shl
neg
repz
in
fucomp
stc
fiaddl
out
in
lret
int3
sub
aam
sti
in
sar
ret
loop
push
fsub
jecxz
mov
std
mov
xchg
in
xlat
loopne
out
xlat
lret
cmp
out
ds
sti
loopne
cmc
ret
jmp
in
int
loope
in
ret
iret
fdivs
xor
cmc
in
loope
fst
ret
mov
mov
shl
mov
rcl
cmc
out
int
cmp
aad
fsub
rcr
in
std
int
mov
loopne
fsubrp
xchg
xor
sti
xlat
leave
jmp
cmc
in
clc
sti
fcmovnb
sti
call
shl
ljmp
iret
sti
cli
aaa
fidivs
aad
loope
int3
ffreep
cmp
cli
aad
loope
fcom
call
lret
mov
rcl
std
out
out
shr
sti
ret
repz
fisttpll
fsubr
cmp
cli
lret
lret
sbb
aad
in
ret
ljmp
repnz
xchg
clc
icebp
in
lret
aaa
xor
sti
xor
xor
jmp
loopne
sar
ljmp
in
cld
lock
cmp
out
ds
repnz
repz
ror
nop
jmp
mov
xor
into
cli
xor
sbb
repnz
roll
clc
lock
aam
repnz
call
shll
fdiv
filds
fdivr
mov
iret
out
out
fxtract
idivb
out
in
ret
ds
xchg
ret
loop
ljmp
das
loope
lock
aam
cmc
fiadds
faddp
mov
sub
loop
iret
test
aaa
aam
xor
ljmp
xchg
jecxz
in
cmpl
icebp
jecxz
hlt
xchg
clc
xor
stc
lret
xor
cld
fld
hlt
cmc
div
fisttpll
inc
pop
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
mov
jg
roll
jle
test
lret
test
into
xor
fidivl
fcmovnu
loope
adc
aas
out
call
mov
cld
in
fcomip
ror
jecxz
vpaddd
shr
stc
cld
adc
rcl
decb
mov
int3
lret
enter
xor
out
cmp
rcl
aad
out
cli
clc
in
repnz
fsub
clc
xlat
in
or
loope
lret
cmp
iret
rcl
jmp
repnz
fxch
rol
out
test
loopne
lret
int
test
loope
out
enter
xor
ljmp
cmc
jmp
cmp
add
sub
bnd
iret
ljmp
rolb
iret
sbb
ffree
lret
in
out
lret
cmc
xor
xor
cli
stc
jmp
lock
xor
in
fcomi
std
loopne
lret
repz
call
xor
out
lret
out
cmp
rcr
jecxz
in
fimuls
int
xchg
loope
shr
iret
xlat
xlat
cmp
cmc
cld
xlat
fadd
loopne
in
mov
std
test
int
rcll
out
into
repz
lret
icebp
and
aas
cli
hlt
xor
shr
ret
mov
jecxz
xchg
shr
xchg
in
xor
icebp
cmc
fcmovu
lret
in
in
idiv
xlat
neg
addl
fldl
repz
lock
out
ss
ror
in
std
test
fcomip
xchg
and
xchg
in
xor
fcmovu
aam
lret
dec
out
imul
shl
cmc
in
fmull
xchg
cld
lock
sti
repz
fdivr
fnstsw
into
repz
out
mov
mov
ljmp
in
fdivrl
loopne
cmp
icebp
ss
fcmovnbe
sti
flds
mov
dec
aam
sti
jecxz
imul
xlat
out
repz
stc
out
test
test
in
in
mul
shr
cmp
lock
roll
loopne
xchg
fmuls
icebp
xchg
aad
fsubr
shl
cmp
cmp
fsubr
test
test
repnz
out
lret
cmp
in
sti
idiv
shl
ret
int3
testl
leave
ret
aam
cmc
cmp
cmp
cmp
xrelease
jecxz
mov
std
xchg
sub
fldlg2
xor
xor
out
lret
in
sar
addb
call
div
aam
neg
xlat
jmp
loope
loop
test
xlat
out
xchg
nop
incb
in
int
call
aam
test
repz
mov
test
ror
mov
enter
ss
lret
std
into
cmp
cld
ret
aas
loopne
sti
flds
test
iret
out
idiv
cli
cmp
jmp
cmp
sar
ffreep
in
sti
fucomip
faddl
xchg
lock
nop
cmc
stc
cli
cmp
cmc
lock
rcl
or
test
in
mov
cld
xchg
fmul
and
xor
fcom
fdivl
std
mul
aam
adc
mul
fiadds
lock
jmp
out
neg
cmpb
jecxz
shr
hlt
and
mov
cmc
orb
shl
jecxz
in
xor
cld
int3
hlt
in
ret
addl
xchg
div
lret
lret
cmp
ss
stc
faddp
fidivs
clc
rcl
rorb
in
mov
jmp
out
out
fidivrl
int3
shll
leave
fsincos
mul
repnz
repz
clc
std
sti
push
lock
int3
lock
sarl
test
roll
sti
leave
test
call
out
ljmp
fcmovne
int
icebp
in
ffreep
cmp
mov
cli
jmp
jmp
out
int
hlt
into
ret
xor
out
lret
out
iret
rol
jecxz
jmp
lret
shl
out
or
xor
shr
repz
je
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
cli
ljmp
push
add
cld
aaa
fsubrp
jmp
out
sarl
xlat
icebp
incl
mov
fmulp
xchg
lock
lock
cs
frndint
repnz
idivb
out
jmp
out
ljmp
mov
in
xor
call
idiv
repnz
faddl
test
jmp
in
int3
loopne
in
in
mov
jecxz
sti
cmc
repnz
fdivp
loop
ret
sub
icebp
in
in
jecxz
leave
clc
out
repnz
int
lock
loope
icebp
fsubrp
hlt
in
out
enter
cmc
test
shll
vpmaddwd
cli
cmp
out
cmp
in
stc
aam
std
cli
stc
leave
xchg
xchg
in
loopne
nop
and
lret
stc
out
fxch
out
div
in
test
cmpl
mov
out
int3
orl
cmc
sar
hlt
std
cld
ds
mov
cli
mov
cld
in
rcl
repz
out
repz
cmp
sti
sti
iret
aaa
repnz
xlat
lret
loopne
fdivp
sti
adc
in
sub
leave
idivb
fcomip
leave
lret
cmpb
loope
out
loop
testb
fstl
clc
ret
iret
int
repz
xor
cmp
inc
repz
xchg
int3
mov
mov
adc
shr
cmp
aaa
cmp
fldl
fldl2t
and
iret
mov
cmc
aad
clc
repnz
in
out
repz
loope
loop
leave
std
lret
movl
aam
fsubr
out
out
not
lock
into
les
out
jmp
sar
loope
shl
iret
enter
clc
cld
loopne
cmc
clc
lret
neg
std
fsub
loopne
aad
in
nop
jecxz
int
mov
sarl
enter
int3
imul
test
lds
ret
cmc
out
jmp
int
mov
int
call
out
stc
repz
sti
not
cmp
ret
iret
lret
std
fiadds
xor
jmp
int
lock
out
in
loopne
fdiv
xchg
rcr
mov
in
hlt
mov
jecxz
std
cmp
bnd
sar
stc
xchg
xchg
testl
out
xor
cmp
cmp
lret
icebp
out
lock
out
stc
out
testl
in
cli
in
call
in
sarl
cmpb
shl
sub
hlt
fadds
xchg
lret
aam
in
rcl
fcmovne
int3
iret
cmc
in
cmp
aad
in
fsub
mov
icebp
rolb
xlat
cmp
sti
int
aam
cmp
in
xlat
loope
faddl
or
ss
sarl
enter
int
fidivrl
aaa
test
sbb
in
lret
out
cmc
into
xlat
hlt
into
xlat
fcmovu
cmc
int3
fstp
clc
aad
sar
xchg
sti
in
int3
int
mov
in
out
repz
out
out
int3
stc
fcmove
repnz
testb
fiadds
cld
loope
xchg
mov
xlat
aam
shl
out
fdivl
int
xor
jecxz
in
enter
ret
mov
repz
aam
ret
in
repnz
fdiv
loop
cmp
aad
ljmp
and
mov
loop
leave
fnstcw
cmp
lret
shl
cmp
in
leave
testb
ljmp
jmp
out
call
sarl
test
xlat
shl
jmp
lret
in
xchg
cld
mov
cli
jmp
iret
clc
cld
int
out
faddl
xchg
in
ror
xlat
repnz
into
lret
enter
test
adc
fiadds
mov
int
mov
mov
iret
repz
lret
shr
cmp
xlat
sti
and
cld
test
ljmp
test
xor
rcl
cmp
sti
sarl
repz
call
cli
cli
add
in
ret
int
cld
cld
loop
lret
cmc
mov
ss
aad
cmp
fistpll
test
testl
mov
fucomip
xor
cld
xor
fucomp
aad
mov
fcmovnb
mov
cli
out
leave
nop
lock
add
in
int3
cli
cmc
lds
cmp
in
test
frstpm(287
clc
add
fldl
std
xchg
jmp
jmp
cmc
repnz
jmp
aas
shl
clc
std
fsub
ret
mov
jmp
or
lock
aaa
in
stc
out
fxch
hlt
cmp
cmc
icebp
in
hlt
loop
movb
int
xchg
xchg
add
adc
add
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
movsl
mov
jle
add
lret
aam
jmp
jmp
lock
cmp
stc
icebp
fadds
jmp
clc
das
into
call
clc
aas
int
sti
in
aad
inc
fadd
fsubr
lret
hlt
mov
repnz
hlt
ret
enter
int3
int
xlat
idiv
loop
lret
ljmp
sub
hlt
xlat
das
in
hlt
cmc
cmp
cmpl
mov
std
xchg
enter
loopne
repnz
shl
iret
in
iret
in
ds
jecxz
stc
xchg
cli
fldl
sti
xchg
rclb
jecxz
lret
jmp
repz
rorl
and
xchg
rorb
sarb
leave
fidivrs
repnz
aad
out
test
sbb
lock
aaa
shl
out
cld
test
ret
add
incb
test
xchg
shll
fsubrp
fcmovnu
cmp
lret
sti
cmp
loop
lret
into
in
fisttps
int3
mov
loopne
fcomp
loop
out
ret
in
ljmp
out
fidivs
les
ror
cs
cmp
addl
and
aad
ljmp
jmp
cmp
lret
mul
out
cld
jmp
jmp
sar
jmp
ss
out
in
jmp
loop
rolb
roll
mov
sub
in
ss
out
addl
fucomip
test
in
out
out
xchg
lret
out
in
xor
in
cmp
loopne
repnz
ds
jecxz
in
mov
jecxz
repz
mov
fnstenv
cmp
xlat
aam
rcr
imul
cmc
fadd
rcr
loope
and
int3
lret
rclb
xor
out
xor
cmc
fsubrp
cmc
out
in
aam
cmc
fiadds
jmp
mov
jecxz
xor
idiv
icebp
int
cmp
rol
cmp
out
les
loopne
fsub
test
ror
in
div
out
aas
leave
aas
repnz
orb
stc
iret
test
mov
loop
hlt
xlat
cmp
int
icebp
cmc
fisttpl
sbb
int3
push
aam
cmp
sar
jmp
idiv
in
cmp
test
mov
hlt
out
int3
xlat
stc
xchg
mov
repnz
sub
cli
ss
shl
int3
lret
cmp
add
ds
mov
repz
loop
rol
cmp
rcr
icebp
shl
cmp
lock
xchg
jmp
mov
mov
in
lock
ljmp
stc
hlt
cmp
lret
test
xchg
in
loope
xlat
ljmp
hlt
lret
xlat
not
and
stc
cli
fldln2
xor
mov
ljmp
loopne
into
sti
lock
fcomip
mov
add
out
fucomi
rorl
ror
cmp
out
std
cmp
cmpl
cld
fcom
fsubrp
enter
xchg
orb
xor
xlat
clc
jmp
sarb
loopne
rcr
aad
test
fsin
lock
enter
hlt
ret
sti
fcmovbe
cld
hlt
call
lock
ret
in
cld
ffreep
out
out
in
out
out
lret
in
cmc
jmp
cmp
into
clc
repz
aam
neg
leave
xchg
repz
clc
repz
int
fidivrl
cmc
shl
stc
test
fsub
ret
int3
lret
rcll
ror
not
out
aad
repz
loopne
iret
out
neg
stc
jmp
mov
stc
mov
lock
neg
aad
out
aaa
xlat
xor
fidivs
roll
out
out
test
fistl
lds
ljmp
aas
shl
adc
jmp
std
fpatan
std
aad
icebp
xor
repz
fcomip
aas
sbb
cmp
in
hlt
lret
out
out
ljmp
xor
call
stc
rcr
ret
add
test
aas
jmp
mov
into
xchg
out
lret
lock
into
int3
rcr
rol
iret
adc
test
loope
cmp
in
or
and
repnz
aad
in
loop
addb
shl
stc
and
xchg
mov
call
into
shrl
int3
cmp
cmp
in
xchg
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
jb
jg
push
add
fadd
out
jmp
nop
incb
ss
ss
out
jmp
rcr
stc
lock
cld
mov
lea
xchg
test
add
ljmp
fldl
fcom
flds
call
repnz
iret
neg
cmp
fucomi
rcr
sarb
addb
xlat
xlat
sub
mov
int
xor
fcmovbe
hlt
lret
cmp
out
hlt
aas
in
fsubrp
in
loop
fcomp
iret
or
aad
repnz
test
ror
aas
not
into
rol
neg
bnd
hlt
test
xchg
std
imul
ss
enter
ljmp
out
sarl
fxch
repz
cmc
shl
jmp
ror
cmc
loopne
hlt
loope
lds
testl
fisttps
cmp
cmp
cmp
not
cli
into
repz
xchg
filds
dec
orb
cmp
jmp
in
ret
loope
fcmovb
leave
out
or
test
mov
xchg
xchg
in
fxch
aam
cmp
cmp
icebp
clc
stc
cmp
testb
lea
in
aam
cmp
cmp
cmp
out
test
xlat
jecxz
lret
or
ror
lock
rcr
cmp
sti
repnz
out
addl
mov
in
mov
in
lock
in
shlb
not
loopne
ret
loope
mul
sti
xchg
in
loop
fdivr
rorb
int
cmp
aad
fdivrl
ret
fcmovnbe
sar
mov
adcl
out
iret
cmc
test
repnz
loopne
orl
lret
cmc
jmp
fxch
in
jmp
shl
ds
mov
fdivr
lret
in
lret
divl
enter
cmc
icebp
fcmove
enter
cmc
test
fdivrl
cld
mov
jmp
mov
nop
jecxz
xlat
cmc
xor
xor
rcl
iret
aaa
loop
cmp
aad
bnd
fcmovnbe
in
loope
sub
int3
lret
into
stc
out
cmp
in
cmp
rolb
ror
call
rcl
lock
fidivrl
call
stc
xor
cmp
rol
xlat
aas
imul
incl
shl
adcl
incl
out
test
cld
addl
mov
xor
call
loopne
ret
test
xchg
shl
sar
xor
test
aas
sar
repz
xchg
cli
out
clc
loop
cld
fucomp
and
call
fld
out
cld
repz
cmp
fimuls
test
std
mov
loopne
ret
cmc
test
stc
jmp
shl
int
and
aad
test
mov
sti
shl
test
test
cmp
fsubr
stc
fdiv
icebp
adc
cmc
mov
test
loopne
hlt
shl
sub
ljmp
lock
div
fcomi
cmp
in
out
xchg
repnz
repnz
cli
in
sti
out
into
xlat
in
ret
repz
mov
repnz
sub
xor
leave
xor
cli
aam
rcr
cmp
fsub
cli
xchg
mov
fcomip
out
aad
enter
repnz
incl
cmp
call
lret
cli
xchg
mov
xchg
in
fcom
lret
int
cmp
clc
leave
cmp
xlat
in
hlt
repnz
cld
test
orl
xor
lret
in
call
out
jmp
loope
cld
xchg
cmp
mov
rcl
rcl
out
neg
aam
cmp
in
test
aas
fmul
stc
mov
cmp
loopne
cmc
idiv
ror
out
lret
int3
cli
lock
hlt
xchg
fiadds
decb
jmp
in
cmp
cmp
iret
cmp
cmc
sar
cmp
xlat
mul
jmp
xorl
fdivr
xlat
call
int3
in
out
ljmp
in
test
xor
out
cmp
fstpt
cld
mov
sarb
ds
in
into
addb
not
out
sar
std
loope
repz
out
div
ret
jmp
mov
nop
loopne
xchg
int3
ljmp
leave
stc
int
lock
fcmovu
repz
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
sub
into
loopne
filds
loopne
icebp
lock
int3
in
xor
cmc
cli
xor
sti
sbb
xchg
filds
call
ljmp
cmp
xlat
not
aam
cli
fstp
test
loopne
out
xor
xlat
icebp
xor
icebp
std
neg
in
out
jmp
shl
xchg
in
xchg
cs
in
aam
icebp
sti
lock
ds
imul
neg
mov
call
mov
jmp
xor
fyl2x
std
jmp
loope
ds
cld
in
ret
xlat
imul
out
lret
out
in
jmp
ljmp
test
cmp
fdivr
out
fildl
lret
mov
sar
stc
in
jmp
stc
loop
repnz
rcr
in
les
enter
into
leave
jmp
shr
aas
jmp
neg
sar
loop
xchg
into
out
loope
nop
test
cmp
jmp
repnz
rcr
sti
cli
les
nop
sti
adc
jmp
jecxz
xor
sar
imul
xlat
xchg
sub
loope
loope
sub
jmp
xor
fsub
adc
fildl
out
fsubrp
std
out
loope
ss
in
sar
fcmovnbe
and
adc
ljmp
out
in
lret
ror
repz
loop
xchg
repz
aas
test
call
mov
sti
into
int
xor
jecxz
ret
addb
fcos
fsub
xchg
shl
xlat
cmp
out
cmp
ds
flds
and
call
loop
cmp
sti
sti
sub
shl
mov
int3
orb
xorl
leave
cmp
fstp
ret
repnz
clc
test
out
xchg
sti
test
test
out
cmp
stc
hlt
rcr
cmc
les
fst
clc
hlt
fisttpll
xchg
mov
into
iret
jmp
cmp
lret
int
out
sub
les
cli
lock
xor
ss
cmp
out
hlt
ds
cmp
clc
adc
repz
jmp
xchg
ljmp
xor
in
ss
icebp
lret
fdivl
cli
aam
push
lret
adc
sti
jmp
call
xor
into
cli
icebp
clc
cld
aam
ret
in
loope
fistpll
out
in
lret
in
out
addl
sub
lock
out
cmp
cmp
rol
cld
mov
clc
mov
lock
xrelease
rol
hlt
hlt
fdiv
in
fcomi
repnz
mov
ret
sar
in
repnz
ror
iret
xor
cmp
xlat
lock
int
fdivrp
repz
test
iret
xchg
out
aam
sub
clc
xor
repnz
std
out
cmc
xchg
in
lock
fsub
hlt
xchg
xor
repz
loopne
loope
xchg
ret
clc
ret
leave
mov
enter
into
mov
adcl
std
icebp
aas
iret
jecxz
cmc
loopne
cld
clc
ffree
hlt
enter
faddl
leave
out
cmc
sub
in
fst
int3
int
rcl
loop
test
in
fdivr
xchg
mov
rol
in
iret
shr
cmp
fsubr
fcomi
repnz
xabort
enter
vpmovmskb
fimull
out
lock
lret
iret
into
repz
cmp
cmp
lds
ljmp
cmc
hlt
leave
call
fst
cli
aas
add
not
jecxz
loopne
cmp
jmp
in
ret
xor
fdecstp
out
fnsave
aam
loopne
jmp
mov
call
test
jmp
call
fdivr
out
rcl
ret
fadd
clc
mov
call
bnd
cli
xor
cmp
out
jmp
mov
repz
in
xor
aam
rcl
fstp
cmp
lock
into
aad
cmp
fcmovnu
into
mov
mov
in
neg
aad
lret
aas
shl
mov
cmc
ljmp
repz
loop
ret
in
int3
cli
fdivrl
cld
fucomip
cli
xor
hlt
ds
in
lret
out
lea
out
movl
sbbl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
sbb
jp
jle
add
cs
xor
out
iret
aaa
fmul
rcl
hlt
out
loop
testl
xchg
dec
fdivrs
ss
lret
stc
lock
bnd
fnstcw
mul
in
lret
fsts
incb
xlat
lock
fistpll
into
test
out
and
fcmove
xchg
loope
xchg
lock
ror
xlat
jmp
lock
call
fninit
aad
icebp
lret
clc
mov
into
loopne
test
jmp
int3
icebp
xor
aas
rcl
icebp
cmp
stc
ret
xchg
stc
iret
cld
fucom
fmulp
repz
cli
aas
out
test
std
cli
cld
cmpl
loopne
test
out
clc
int
fdivs
cmp
hlt
shl
repnz
loopne
loope
loopne
jmp
xor
sarl
jecxz
xor
orl
mov
int
repnz
lock
ror
jmp
out
xlat
aaa
fld
fmul
repnz
addl
sar
cld
loopne
loop
cmc
fsub
xor
ljmp
cmp
in
enter
test
lret
ret
out
sti
ror
cmp
test
addl
jmp
in
ljmp
fldl
filds
enter
mov
rorl
lret
leave
lock
cmp
into
sar
ffree
stc
repz
sti
fmulp
fists
in
out
rcl
repnz
into
cmp
cld
into
jmp
ret
cmc
in
filds
jmp
mov
in
jmp
fdiv
fcmovnu
cmp
hlt
in
sar
ffree
ffree
aad
out
in
repnz
test
cld
cmp
repnz
ds
out
cli
ret
mov
les
out
cmc
lret
cmp
in
neg
rcl
cmp
aad
fucomi
ror
ljmp
out
fadd
shr
ljmp
ror
hlt
cmp
mov
xchg
incl
lret
sub
stc
loopne
lret
adc
test
loopne
movl
ret
stc
jmp
lret
aaa
out
xor
loop
xchg
enter
ret
aad
std
adcl
call
xlat
cmc
rcr
rol
sbb
rcr
test
mov
fadds
lock
fstpt
xlat
cmp
lds
mov
fcmovu
fucomi
mov
fimuls
stc
lret
int3
ds
enter
or
icebp
xlat
and
out
lret
xchg
xchg
shl
out
and
xlat
xor
loope
in
cli
and
cld
rorb
ss
aaa
sarl
dec
into
sub
mov
clc
fcmovnu
out
lret
loope
loopne
xchg
out
int
in
fdivs
int
lock
sbb
fisttpl
mov
icebp
xor
cmp
sub
rcr
xlat
mov
stc
cld
neg
sub
jmp
fucom
ror
cli
out
out
jmp
enter
test
aam
loop
call
xchg
out
in
loope
nop
ret
test
lret
in
hlt
sar
in
adc
clc
jecxz
hlt
cmc
fcmovnu
testl
rcl
ror
fmul
fmulp
stc
lret
ret
ret
rol
loop
fsubrp
fucomip
loope
xchg
out
xor
xor
in
ss
sarl
fcmovnb
cmp
testl
icebp
mov
call
int3
lret
xlat
fnstenv
clc
in
sarb
roll
clc
div
mov
in
mov
rolb
in
ror
call
jecxz
ss
cli
stc
cli
sti
int
leave
std
int3
rcl
shr
loop
out
rcr
iret
das
ljmp
fiadds
cld
mov
int3
ffreep
xchg
xchg
ljmp
ljmp
ljmp
out
or
call
mov
icebp
ljmp
cld
std
clc
out
cli
fsubp
xchg
fucom
incl
in
xchg
aad
loope
out
ss
cmp
xor
int
repnz
sub
mov
xchg
out
iret
lock
out
out
ret
vpmovmskb
fdivr
out
adc
ret
adc
in
fcmovne
decl
sub
out
fdivrs
loopne
aad
fsub
mov
add
add
lret
push
add
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
jb
pop
lret
add
add
fsub
jmp
xchg
rorb
repz
jecxz
das
fucomip
mul
clc
rcr
cli
rol
enter
call
sub
rolb
ret
enter
fdivrp
and
aam
stc
test
dec
in
out
in
sub
ljmp
aam
cld
loop
loopne
test
jecxz
jmp
cli
leave
lret
hlt
rcr
lret
cmc
xor
enter
leave
cmp
stc
into
not
in
test
mov
incb
xchg
ror
out
icebp
jecxz
clc
std
cmp
cmp
neg
shl
test
aad
std
int3
mov
in
rol
out
loope
clc
test
xor
sar
ds
test
lret
in
stc
jmp
std
mov
xchg
mov
loop
jecxz
int3
out
iret
in
aas
cmp
in
into
ljmp
shl
into
xor
rcl
hlt
xor
cmp
fcmovnbe
repz
sar
rol
inc
sub
out
in
in
das
out
xor
cmp
hlt
ror
cmp
rcl
ret
in
clc
jmp
lret
add
xlat
xlat
xor
cmp
icebp
out
enter
addb
in
xchg
in
in
loopne
aaa
cmp
sarb
sarl
clc
cmp
ret
ffree
in
icebp
cld
in
rcl
div
out
int3
cli
lock
fmul
sarb
ds
rcr
fiaddl
std
aam
loope
xlat
cmc
imul
out
ljmp
into
hlt
mov
aas
cld
test
mov
fistl
out
xor
in
aad
lret
aas
aad
adc
test
lret
cmc
clc
call
repnz
aad
aaa
repz
ror
cmp
lock
addl
ljmp
shr
loope
xor
lret
cld
leave
in
cmp
sbb
cli
in
idiv
xlat
cli
fsubp
out
icebp
mov
lret
lock
lret
sar
aas
iret
in
stc
add
fldl
xchg
xchg
jmp
std
fucomp
ljmp
cmp
leave
out
out
in
ror
out
ss
hlt
iret
int
out
xlat
loope
fcmove
cmp
fcmovb
leave
out
cld
fucomp
roll
call
sar
aam
clc
in
rorb
cli
shl
mov
into
into
hlt
fdiv
mul
shl
fmulp
stc
cmp
cli
fmul
cmp
fiaddl
out
loope
fists
fdivs
repnz
fld1
out
stc
rcl
loopne,pt
xchg
loopne
orb
loop
xor
jmp
jmp
fdivrl
xor
in
cmc
aam
fcmovne
aad
mov
xchg
xchg
loope
loop
jmp
xor
rol
ds
mov
aad
xlat
stc
in
mov
xor
cmp
shr
cmp
aam
call
icebp
xchg
fucomip
jmp
xlat
in
aad
sarl
cmp
stc
xlat
out
fdivp
cmp
filds
mov
loop
out
jecxz
fsub
cmp
cmp
aas
cmpl
rcr
xlat
or
out
lea
out
aad
cmp
int
out
into
fiaddl
aam
xchg
xchg
lret
stc
cld
aam
ljmp
fistpll
fdiv
xchg
test
mov
cmp
xor
call
xor
cmp
out
rorl
mov
rorb
call
idivb
int
xor
fst
in
mov
cli
fsubrp
loop
mov
aam
ret
jmp
hlt
cmp
cmp
fcmovnu
mov
lret
fmull
hlt
xorb
xor
repnz
iret
out
cmp
mov
in
xchg
int3
loope
aam
cmp
neg
jmp
into
fstpt
add
xchg
loop
ljmp
out
xchg
hlt
int
int3
cld
lret
clc
cmp
rcr
fidivrs
out
mov
jecxz
mov
jmp
sub
hlt
xor
in
into
fnstsw
sti
cld
xor
aas
test
rol
repz
cli
mov
jmp
stc
rcr
cmc
loopne
xor
in
test
hlt
cmc
mov
neg
mov
std
fsub
out
std
shl
or
sarb
sti
xor
out
test
cmp
cmp
push
jmp
loope
shr
lret
iret
test
call
add
add
out
add
add
rcl
aad
aad
push
push
scas
push
xchg
idivb
lret
jle
add
ret
fdivr
xchg
jecxz
lret
in
out
loope
adc
xchg
cs
jmp
jmp
loope
sarl
out
xchg
ds
test
mov
mov
out
mov
clc
xor
aam
into
fmul
call
int
repnz
sbb
rol
call
fsub
out
out
mov
clc
cli
sub
leave
hlt
stc
ds
fxch
fadd
call
cld
in
lret
incl
cli
mov
xor
cmp
int
repz
inc
shl
std
aad
ret
rcl
out
mov
xlat
in
xchg
int
xchg
adc
hlt
idiv
xlat
into
out
lock
repz
cmc
cmc
loopne
rol
test
stc
ljmp
mov
xor
int
fdivl
lock
call
ds
loopne
shl
loopne
int
int3
jecxz
lock
repz
in
xlat
in
rol
imul
sbb
loope
sbb
in
out
nop
xchg
or
xor
ljmp
jmp
aas
rcr
ffree
jecxz
addb
int
repnz
enter
jmp
fidivl
cmp
xchg
icebp
cld
inc
ret
idiv
ljmp
ret
loop
out
shlb
into
fucomp
aam
fstpt
fcomp
ffree
hlt
out
in
sub
out
in
ror
jecxz
cmp
fcmovnbe
jmp
neg
jmp
fsubr
call
cli
int3
fcmovnu
sub
xor
cli
sar
shl
ss
sarl
fcom
stc
repz
loop
not
xchg
rcl
out
iret
int
xor
xor
lret
xlat
aaa
fiadds
fadds
test
leave
xchg
into
ljmp
repz
in
std
int
int
out
ror
aad
rcr
xlat
addl
fcmove
iret
mov
fcom
sub
call
cmp
ret
xlat
lock
in
cli
leave
jmp
hlt
in
aad
enter
shlb
repz
sarl
sbb
mov
cli
lret
int
mov
shl
sub
aaa
cmp
aaa
hlt
lock
out
addb
addb
mov
out
std
loop
ror
into
mov
fidivrl
aaa
mov
loopne
call
out
mov
faddl
jmp
leave
lock
rcr
loopne
jecxz
xchg
jmp
jmp
cli
lret
icebp
xchg
iret
xor
shl
shr
fptan
int3
shl
ror
ret
loop
ret
xlat
int3
decl
mov
loop
xor
lock
stc
cmc
f2xm1
cmp
roll
stc
mov
leave
mov
shll
loopne
in
icebp
loopne,pt
ret
fcmovb
mov
int
call
xor
cmp
cmp
addb
std
cmp
sti
iret
jecxz
aam
out
out
jmp
ljmp
rol
fadd
add
mov
or
shl
cmc
int
in
iret
cmc
hlt
ljmp
faddl
xlat
out
in
icebp
rol
jecxz
divl
fucomp
ds
fmul
cli
decb
sub
ret
out
in
cmp
call
fdiv
int3
shr
ret
aad
in
lock
in
push
loopne
test
sarl
int3
call
stc
fiaddl
testb
repnz
jecxz
repnz
fxtract
into
leave
sar
cmp
stc
loope
mul
shl
orl
ljmp
clc
lret
stc
xor
jmp
ret
jecxz
cmp
lds
out
out
in
cli
call
repz
cmc
out
rcr
stc
ljmp
sti
out
mov
call
mov
xchg
in
ss
cmc
lret
in
cmp
jmp
loopne
repnz
xchg
lret
lret
test
sub
iret
ljmp
fmulp
repnz
cmp
shr
enter
ljmp
loopne
xor
call
aas
aaa
jmp
cmp
fdiv
fildl
into
jmp
xchg
loope
jmp
cmp
fdivp
fidivrs
loope
cmc
xchg
ljmp
xchg
xchg
xchg
xlat
shr
aaa
in
call
stc
int
cli
aas
loop
cli
test
fadds
lret
lock
enter
shr
cld
jmp
out
std
repz
cli
test
in
and
call
repz
in
out
vcvtsd2si
int3
out
cmp
xlat
cmp
in
mov
fiaddl
xchg
int
loope
jne
andl
mov
jmp
aas
into
lret
leave
aam
dec
jo
pusha
adc
and
add
add
stc
shr
out
aaa
shr
cmc
jmp
mov
fsubrp
in
shl
orl
xor
sar
fmul
roll
test
fsubr
mov
testl
cli
into
aam
xlat
fiaddl
ret
incb
fcomi
sti
jecxz
mov
test
lock
stc
cmp
aad
shl
stc
icebp
cmp
aam
xlat
lea
shrb
ret
repz
into
cmp
ret
mov
hlt
out
imul
lret
shl
xchg
mov
shr
icebp
in
repz
ljmp
out
loopne
lea
fucomi
mov
xchg
leave
xor
jecxz
jmp
loopne
jecxz
shl
ljmp
lret
out
hlt
int3
clc
ljmp
xlat
int3
fucomi
aas
cli
fiadds
xlat
lret
loope
xchg
mov
jecxz
aaa
icebp
fcomp
stc
xor
out
fsubrp
ljmp
loopne
call
jecxz
xor
stc
xor
fmulp
loop
cmp
shl
leave
cmc
idiv
xor
into
into
std
shl
xlat
xor
cmp
ror
cmp
adc
int
faddl
lret
les
ljmp
hlt
rcl
addl
filds
shl
into
mov
jecxz
xor
jecxz
shl
stc
into
jmp
and
test
in
mov
xchg
jmp
xor
aad
xlat
xor
fcmovu
fadd
leave
cld
loopne
xchg
jmp
mov
not
clc
int3
icebp
clc
cli
into
shr
ss
in
mov
in
cld
cmc
mov
fcmovnbe
cmp
in
mov
sub
jmp
ljmp
hlt
cmp
std
les
mov
rcl
xor
in
neg
cmp
iret
cmc
ror
rcr
cld
fldl
jecxz
lret
hlt
in
xchg
shll
aaa
xor
xor
cmp
mul
in
ret
aad
mov
into
int
xor
divb
repz
loop
aas
ret
jecxz
cmc
aam
mov
xchg
loope
int
xlat
xor
repz
fcom
loopne
icebp
fcomip
loopne
incl
out
mov
fisttpl
ljmp
xor
jmp
ds
std
mov
faddl
out
mov
xchg
xor
out
ret
ror
cmc
cmp
repz
fnstsw
in
sub
ret
into
jmp
mov
int3
das
aam
jmp
clc
idivl
xor
mov
xchg
cmp
aaa
hlt
shl
leave
out
repz
ror
out
lock
mov
iret
jmp
xchg
out
ret
hlt
shl
call
fcmovu
cmc
call
jmp
test
fstp
lret
div
jmp
lock
std
aam
repnz
xor
test
orl
mov
loopne
xchg
ret
aaa
jmp
sti
cmp
aam
idiv
sbb
mov
enter
fistl
loope
leave
fdivr
out
fxch
jmp
int3
jecxz
add
sar
out
int3
fadds
not
xor
out
int3
aaa
xor
leave
cmp
rol
clc
stc
aas
xchg
xchg
lret
cld
jecxz
lock
jmp
aam
repnz
rcr
in
into
cld
ds
repnz
icebp
lock
xor
jecxz
stc
icebp
int
xor
shr
jecxz
aad
testl
lret
roll
cli
enter
rcr
aam
hlt
rcl
cli
mov
fmul
fadd
mov
test
icebp
int3
xlat
in
ror
xor
cmp
roll
in
addl
xor
cmp
int
loop
fnstsw
mov
out
stc
std
test
xor
out
hlt
xor
into
aas
in
out
les
lret
std
ljmp
xlat
xlat
not
lret
xlat
fdivr
iret
cmc
ds
cmp
in
mov
in
rclb
jmp
out
cli
loope
cld
out
jecxz
clc
ret
cmc
mov
out
call
mov
ret
out
ret
aad
int
ss
repz
fadd
ljmp
mov
lret
xor
in
lret
cld
into
roll
leave
fldl
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
cvtps2pd
add
add
ljmp
push
sarb
ljmp
ret
sar
out
aas
xchg
loopne
call
ljmp
clc
mul
fdiv
lock
repz
cmp
fdivr
jmp
mov
fdiv
into
lret
in
divb
lret
shr
fxch
lret
in
aaa
in
rolb
in
in
xchg
fcmovnu
xchg
lds
divl
xor
fdivrl
call
clc
cmp
rcl
fisttpll
filds
shr
xlat
call
enter
rcr
fsub
cmc
aas
xlat
in
orb
mov
in
enter
ljmp
cmp
repz
test
sti
mov
stc
stc
movl
cmc
xlat
xor
std
cmp
fst
in
fnstsw
rcr
leave
test
jmp
xor
or
repz
xor
repnz
fnstcw
cmp
addb
std
cld
sti
in
lret
xchg
fucomip
into
shll
shll
cmp
std
lock
into
fcom
fiaddl
not
fiaddl
enter
xchg
mul
out
fxam
fstp
call
sti
cmc
iret
shl
enter
test
jmp
sub
ret
lock
xor
into
loope
in
shl
loop
sti
mov
xchg
rol
fmul
in
out
std
shl
aaa
hlt
shl
fadd
cmp
call
std
notb
lock
aad
ror
cmp
cmp
fdiv
cld
out
loopne
test
mov
lock
repz
lret
nop
xor
hlt
loopne
cmp
add
out
and
cmp
jmp
jmp
iret
out
fdiv
incl
iret
jecxz
test
loop
in
out
mov
in
loop
rcl
jmp
ss
repz
cmp
jecxz
aad
in
orl
filds
shl
leave
shl
test
repz
sti
in
vshufps
test
test
xor
int
cld
hlt
ror
int3
out
rorb
fucom
leave
call
xchg
jmp
xlat
sub
aas
cmp
cmp
jecxz
fsubp
fprem1
mov
out
fisttps
shl
ss
rcl
fsubr
stc
fdiv
hlt
jmp
in
into
lret
out
shl
xchg
mul
cmp
jmp
addb
aam
fdiv
ret
lret
test
mov
repz
iret
out
fdiv
jecxz
aam
cmc
rcr
into
cmp
rcl
repz
fsub
cld
clc
xchg
rorb
shr
into
cmp
out
xor
cli
lret
test
loope
aam
lret
mov
mov
in
xor
jecxz
out
fcmovnbe
cmp
ss
fcmovu
call
les
movl
xchg
mov
loopne
out
hlt
cmp
fcomip
jecxz
aam
xchg
ret
jmp
fnsetpm(287
in
adc
ret
shl
fiaddl
fdiv
in
mul
xchg
stc
ljmp
imul
cmp
xor
jmp
dec
loope
call
or
leave
mov
shr
xchg
xor
leave
lock
cmp
loop
fcomp
cld
cld
cli
leave
in
mov
out
hlt
mov
in
cld
xor
lock
repz
out
call
ret
int
call
into
in
lock
xor
fucom
aad
iret
cmc
clc
std
xchg
lret
sti
mov
xchg
aam
ss
das
xor
ljmp
in
repnz
stc
call
mov
orl
out
fdivl
cmp
cmc
cmp
loopne
icebp
cld
add
sti
int3
jmp
mov
or
jmp
lret
fcom
cmp
cmp
loope
ljmp
repz
lock
ret
imul
cmp
shl
test
sbb
int3
int
lea
xchg
xor
hlt
xor
into
clc
sarb
in
cmp
iret
out
mov
imul
mov
cmc
rol
cmc
into
cli
out
cmp
cmp
loope
fdivrs
fcmovb
mov
loope
cmp
out
repz
lret
shr
jmp
loopne
out
ret
cmpb
std
and
clc
loopne
mov
shl
jmp
in
aaa
divb
cmp
iret
shl
hlt
cli
out
cmp
in
in
out
out
test
lret
enter
icebp
jmp
sbb
add
jmp
lret
into
fst
fstp
bound
dec
dec
adc
jle
add
xlat
loop
mov
fsub
cld
shl
rclb
rcr
out
into
sti
cmp
loop
stc
rorb
loop
lret
icebp
lret
xchg
out
jmp
jmp
into
rolb
incl
fsub
std
out
mov
loopne
test
out
jecxz
in
cmp
fiadds
xor
leave
xchg
mov
test
in
cld
fst
mov
cli
out
test
out
shl
fcomip
test
movl
repz
shl
int
aam
filds
repnz
ret
mov
out
mov
not
out
fxch
iret
cmp
fsqrt
ret
sti
ljmp
loopne
lret
hlt
iret
fucomi
inc
cld
ret
aas
cmp
sti
loopne
in
addl
sti
rcl
idiv
aam
shl
fld
fadd
fmul
orb
out
iret
das
repz
in
cmp
neg
cli
clc
into
out
jecxz
mov
clc
mov
in
xchg
iret
aaa
in
repz
int3
rcl
aam
sbb
repz
xchg
int3
fxch
cmp
lret
int
lret
cmc
cmp
ret
idiv
loopne
ljmp
lret
cmc
xchg
ss
out
in
fldt
lret
aam
fidivrs
lock
cli
repz
filds
call
in
ret
fcmovnbe
cld
icebp
jmp
cmp
iret
int
in
std
ror
mov
fmull
hlt
in
icebp
clc
idiv
cmp
repz
call
fcmovnbe
shl
fcmovb
jecxz
out
addb
rol
xor
sar
stc
test
fucom
repnz
loop
decl
adcl
iret
std
aad
aam
xlat
not
repz
aas
test
fadd
xchg
test
icebp
lret
in
in
sub
icebp
lret
xor
jmp
rcl
iret
ret
clc
clc
rcl
jecxz
lret
xchg
ljmp
shr
ljmp
shl
repz
out
call
popl
mov
aad
int
xlat
std
not
faddp
lret
in
add
aad
aad
aas
orb
repz
shl
into
cli
cmp
cmp
fxch
cmp
loop
xchg
icebp
fsubrp
in
jmp
stc
mov
int
icebp
test
jmp
ss
shr
cld
flds
cmpb
fcmovnb
sti
jmp
shr
lret
ljmp
fsubp
jecxz
icebp
enter
lret
int3
fsubr
mov
out
mov
aad
aad
fcmovbe
flds
loope
std
orl
loope
mov
mov
repz
xor
cmp
shlb
cld
in
jmp
fdivp
repz
cld
mov
aas
jecxz
fldt
cmp
cmp
cmp
icebp
repnz
loopne
lret
out
test
pop
rcl
lock
jmp
fldz
repnz
clc
ds
neg
fucom
xchg
hlt
sbb
fiaddl
in
shl
out
das
xor
call
cmp
sarl
int
out
mov
enter
cli
jecxz
iret
test
icebp
shlb
ret
lock
in
rcr
cmc
rol
fnstcw
and
fadd
call
call
orl
enter
in
cmp
aas
ss
iret
out
cmc
lret
fucom
mov
ljmp
std
ds
hlt
filds
fsubr
mov
call
int3
rcr
xor
enter
cli
clc
ds
icebp
ret
aad
mov
out
lds
in
int
xor
cmp
hlt
cmp
not
lret
shr
sbb
ret
fcmovnbe
fdivrp
ljmp
mov
in
ds
lret
loope
cld
shl
roll
std
loope
xchg
cs
hlt
cmp
shl
xchg
enter
enter
mov
lea
into
idiv
cld
aad
stc
iret
repnz
sarl
mov
out
lock
in
jmp
icebp
lds
xor
cmp
std
xchg
ret
jecxz
fiadds
fucomi
decl
ss
cld
loope
in
cmp
aam
hlt
adc
lret
out
fiadds
jecxz
loop
cmp
fucomi
fcmovne
jmp
xor
fstpt
fildl
loope
in
mov
shl
fcoml
aaa
push
jmp
int
iret
rcl
aad
inc
xor
mov
pop
add
add
xor
xlat
in
out
out
stc
int
sarl
neg
stc
test
into
stc
lret
loopne
cmc
loopne
in
cmp
int3
fdivr
fsubrp
out
jmp
jmp
fiadds
in
fsub
in
sbb
ficoms
shll
cs
stc
rol
cmc
test
loopne
sbb
in
fcmovnu
stc
xchg
xchg
mov
cmp
clc
lret
repz
sti
ret
cmp
shl
rcr
stc
inc
out
xchg
repz
in
cli
jecxz
jmp
xlat
out
testb
aad
aam
jmp
test
lea
fdiv
in
das
rcl
ds
shl
in
xchg
icebp
hlt
xchg
vpsrld
sti
cmc
sti
cmp
aas
repz
mov
fildl
ljmp
int3
repnz
cmp
xlat
enter
call
xchg
out
jmp
iret
into
das
leave
shr
sar
fnstsw
clc
repnz
hlt
iret
idiv
fcmovnb
in
fcmovnu
leave
jecxz
into
test
fldpi
repnz
std
fucomp
aam
test
shl
aam
mov
xchg
test
sti
fcoml
repz
fsin
cmp
loopne
shl
hlt
ret
rorl
out
out
out
out
sbb
clc
out
aaa
repnz
aaa
fst
test
out
fisttps
call
xchg
aad
xor
rcl
not
out
cmp
jmp
out
or
mov
fiadds
xchg
aad
aaa
int
rcl
lret
xlat
lock
icebp
roll
fsubrp
decb
lret
into
xor
cmp
int3
xor
stc
cmpb
clc
fucom
jmp
fimuls
jecxz
imul
in
clc
lret
cmp
adc
rcr
vpavgw
out
fdivrp
mov
xor
out
cmp
sti
xor
lret
test
stc
sar
leave
cmp
call
jmp
cmc
out
out
out
leave
int
std
int3
out
loop
repnz
loopne
in
shl
cli
call
in
in
out
std
ror
enter
out
fistpll
fldl
flds
out
loopne
iret
sub
shr
hlt
fnstsw
std
stc
out
fstp
cmc
aam
clc
fdivr
mov
test
mov
repz
call
stc
cmp
fadds
sub
lock
icebp
nop
xchg
into
shl
cmp
icebp
rcl
ljmp
cld
mov
out
out
ret
cld
int3
faddl
xor
cli
ror
in
or
fdivrp
loop
clc
mov
int
loopne
stc
fisttpll
aad
in
leave
leave
loopne
cmp
vpaddq
xlat
mov
mov
dec
ss
out
shl
std
sti
in
rolb
faddp
in
ljmp
rol
aad
neg
cmp
rol
shl
shr
call
aad
loop
jmp
xchg
int3
in
xor
enter
fst
lret
in
hlt
roll
flds
int3
lock
cmp
cld
iret
xlat
test
stc
sar
std
testl
hlt
stc
hlt
int3
std
in
ss
test
fxam
in
aam
in
enter
cli
std
repnz
mov
cs
leave
out
std
clc
stc
xlat
fcmove
fdivr
xor
out
testb
into
out
mov
xor
xlat
cmp
out
stc
adc
fisttpl
leave
ljmp
hlt
xor
aad
aaa
shl
not
jmp
loop
xchg
loopne
cmp
fdivr
call
hlt
aaa
int
repnz
repnz
cmp
clc
iret
jecxz
ret
loope
rcl
cli
in
jmp
mov
in
out
out
loop
in
les
fstpt
cmp
in
enter
cli
fdivrs
xchg
std
test
in
xchg
test
cmp
repz
in
cmp
fldl
ror
jmp
jecxz
out
loope
mov
lock
loop
enter
cmp
cmp
fcmovnb
aam
hlt
jecxz
in
lock
test
jmp
int3
fxtract
sti
ss
rcl
cld
repnz
ret
cmp
cmc
adc
int3
adcl
xor
xor
in
jmp
sarb
fdivrl
fsubr
hlt
xlat
fisttps
roll
cmc
sar
fdiv
jmp
fstpt
ret
incl
call
cmp
add
inc
or
out
add
add
aad
fisttpll
sub
js
pusha
clc
sbb
jle
add
filds
lret
lret
in
cmc
sbb
sbb
xchg
adc
addb
xor
stc
inc
sti
clc
out
dec
test
cmp
fsub
call
cmp
das
enter
cmc
repz
adc
fcom
iret
jmp
xchg
leave
std
lret
iret
int
lock
ljmp
fucomip
into
aas
cmp
jmp
loope
mov
mov
xchg
loop
xor
xlat
lds
aad
sar
ss
aas
lock
cmp
mov
xchg
out
shr
das
loopne
into
fcmovu
shlb
sarb
xchg
ret
xlat
mov
fcmove
in
shr
adcl
imul
xor
std
out
into
jecxz
loopne
xabort
fmul
sti
fdivr
adc
jecxz
fcomi
in
rcr
cli
rcl
out
iret
hlt
ljmp
mov
int
fcomip
aad
loop
stc
xlat
shl
fldl2t
cld
fadd
fcmovnbe
cmc
fdiv
out
cmc
sti
jmp
xchg
mov
repz
in
clc
xor
xor
std
ret
ret
cld
sbb
fcomip
out
in
ret
icebp
std
cmp
fcmovbe
clc
fcomip
aas
cmp
fld
out
lds
std
loope
in
in
int
ss
fcmovne
cmp
xchg
aam
jmp
out
int
mov
in
loopne
shlb
int3
lret
xor
addb
fiaddl
fiaddl
div
sarl
out
lock
hlt
cmp
faddl
fdiv
ret
aad
out
ret
mov
out
iret
in
ds
sub
cmp
ljmp
test
loope
aad
fcomp
icebp
in
cmp
iret
cmp
cmpb
aad
jecxz
out
fsubrp
xchg
out
nop
mov
xor
stc
fdiv
repnz
shr
lret
push
cmp
repnz
les
loope
lock
loopne
faddp
lret
lret
repnz
in
cld
shl
cmp
aad
aam
cli
ret
jmp
loop
call
shr
xor
int
sti
fucomp
loopne
aas
test
cmp
ljmp
test
mov
and
sub
in
out
std
jmp
fucomi
std
idiv
loope
jecxz
out
leave
std
in
repz
and
rol
xlat
xlat
xor
fmul
sti
incb
aad
imul
leave
std
leave
rorb
das
cmp
cli
fsubr
ror
sarl
fsub
lock
cmp
in
out
test
in
leave
ror
int3
lret
sbb
roll
out
std
sbb
ljmp
out
int3
cli
cmp
jmp
fcmovbe
hlt
out
stc
xchg
mov
jmp
xchg
mov
xchg
int
enter
std
ror
in
loope
xchg
out
lret
in
cmc
or
stc
out
out
cmp
icebp
cmp
jecxz
loopne
sti
cmp
cld
leave
xlat
int
jecxz
fcmovne
mov
xchg
aam
int3
jecxz
xlat
int
cmp
lock
cli
cmp
rcl
loopne
mov
xchg
repnz
int
into
sti
icebp
out
sti
fucomp
fcmovnb
shl
test
xlat
call
test
int
jecxz
repnz
fildl
iret
sarl
cmp
cli
loope
mov
mov
cli
jmp
ss
aad
xor
cmp
loop
sarl
stc
ret
ret
movl
and
enter
cmpb
loopne
sarb
ret
aad
cmp
jecxz
leave
jmp
rorb
out
call
loope
repz
ret
addb
in
xchg
cmc
fildll
imul
cmc
aad
iret
fldl
not
testb
lds
hlt
aam
vpsrlw
ror
xlat
xor
testl
loope
fmull
in
out
sub
cmp
in
aas
enter
fcmove
ljmp
ret
lret
in
lret
aam
not
ss
orb
std
call
in
repnz
hlt
call
lock
fdivr
sti
rcl
mul
ret
cli
mov
out
fimuls
sub
xor
cmp
fmulp
loop
test
stc
jecxz
xlat
fcmovb
rcr
loop
mov
vcvtpd2dqx
cmc
aaa
in
hlt
cmp
cmpl
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
into
and
jle
add
sar
repnz
addb
aam
leave
lret
hlt
lret
fcmovnu
clc
std
fdivrp
xchg
cmp
xchg
xchg
out
call
sar
das
jmp
repnz
test
rolb
mov
jecxz
fcmovne
xchg
repz
into
in
lock
repz
ret
in
clc
xchg
incb
fucomip
mov
jmp
decl
div
idiv
imul
repz
hlt
lock
rcl
test
std
mov
sub
jmp
in
xlat
aaa
sti
lret
addb
cli
lret
mov
orl
cmp
enter
cmp
repz
ret
shr
div
mov
call
out
xchg
xor
out
icebp
rcl
cmp
fucom
iret
loopne
cli
std
stc
mov
iret
in
cld
or
out
sar
xlat
call
fildl
ret
sbb
out
mov
nop
and
out
sub
xor
fdiv
cmp
cmp
loope
addl
loop
out
xchg
xchg
aaa
shll
clc
int
fstp
aaa
cli
repnz
and
aam
fmul
mov
hlt
in
int3
cmp
out
ljmp
out
rorb
out
in
repnz
lret
int
into
fsqrt
out
repz
ret
testl
ficoms
xor
aaa
ror
cmp
rol
xchg
repnz
out
enter
ljmp
call
out
leave
hlt
adc
xlat
cld
int3
sti
out
loopne
loope
icebp
aam
leave
clc
ss
enter
hlt
cmp
cmp
iret
xchg
add
aam
out
test
fcoml
xor
imull
ds
out
ror
ret
xchg
in
test
sti
call
rolb
jmp
fsqrt
fld
out
neg
shl
fadds
fdivr
mov
iret
enter
aam
loope
cmp
ljmp
in
xlat
sti
loopne
jecxz
call
decl
int
aad
aam
iret
xor
lret
out
fcmovnu
repnz
fisttpll
ficoml
xor
shl
xor
out
lret
jecxz
jecxz
shl
fmul
fsub
in
loopne
lock
xor
int3
cli
out
cmp
cmp
and
sbb
mov
out
out
leave
test
jecxz
clc
shr
lret
into
aam
xor
in
ds
std
rol
ret
jecxz
jmp
sub
icebp
fcmovnbe
mov
cli
cs
lret
fcmovnbe
loope
clc
out
test
hlt
test
nop
loope
iret
in
out
fstp
call
fdivr
ret
std
flds
or
xchg
mov
in
shl
lret
divb
ror
neg
repnz
xchg
std
jecxz
leave
fisttpll
out
ret
test
cmp
jmp
ds
cmp
ret
std
stc
cmp
fildl
shl
xor
jmp
fstp
cli
std
aas
xor
aad
in
ret
fstp
sti
repnz
xchg
xchg
ret
loopne
int3
fsubr
leave
hlt
aaa
iret
out
testb
stc
lea
popl
cs
cmp
fcmovbe
xor
aad
fiaddl
jmp
idiv
popl
into
repnz
les
sti
ds
lock
xor
mov
lock
out
cmp
les
int3
aas
test
test
ret
sub
jmp
loopne
lock
cmc
fdiv
fcom
sti
out
iret
dec
ret
sar
cmp
cli
fmuls
adcl
fstpt
int3
stc
jecxz
sar
into
xlat
enter
test
loopne
iret
loop
hlt
aad
fsubr
fyl2xp1
enter
out
test
out
xchg
add
icebp
in
cmp
into
out
sarl
fbstp
cmp
test
loope
hlt
ret
clc
mov
nop
leave
mov
in
out
test
xor
fcmovnu
repz
sti
aad
or
cmp
aas
loope
loopne
fdiv
jmp
ficoms
shr
ret
fcomp
cld
shl
imul
loopne
sbb
cmp
ffreep
testl
cmp
hlt
lock
lock
jmp
cmp
repz
cmp
ret
rorb
jmp
inc
mov
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
sti
cmp
cmp
repnz
out
bnd
out
clc
icebp
lock
xor
aad
clc
hlt
sti
into
fcmovbe
out
rcl
shl
shr
loop
and
hlt
in
into
in
cmp
clc
ljmp
in
loop
fdivrs
fadds
and
repnz
icebp
in
ljmp
ss
leave
jmp
loop
aad
aad
mov
cli
stc
fildl
mov
test
in
enter
fdiv
icebp
call
or
in
xchg
fcmovnu
lret
repz
xchg
repz
lret
fdivr
call
ds
clc
ret
fcmovnu
jecxz
icebp
lret
repz
ror
xor
cmc
stc
lret
cmp
rcr
in
fdivrl
shl
out
in
clc
xchg
mov
aaa
repz
lock
adc
xor
call
loop
into
cld
int
xchg
sbb
fcom
xor
in
sti
out
aaa
xlat
jmp
fldln2
sbb
out
or
out
shl
lret
test
xor
leave
les
xlat
fadd
fdiv
std
aas
call
out
int3
fninit
leave
lock
xor
iret
int3
idivb
iret
vcmppd
loopne
leave
cld
mov
ljmp
in
mul
xor
idivl
aaa
lock
jecxz
sarb
sbb
enter
in
mov
rcl
int
icebp
cld
test
lret
xor
dec
fdivp
shl
xchg
jmp
nop
leave
std
loope
ror
xor
xor
xor
aad
cmp
cmp
rolb
loope
out
repz
in
imull
ljmp
idiv
repz
xchg
fldl
in
xchg
int
lock
lock
cs
shll
sar
ret
std
into
out
fmuls
xchg
test
shlb
cli
aad
fdiv
lock
loope
testl
mov
enter
test
aam
enter
repz
aas
cmc
cmp
fpatan
call
int
xchg
jmp
lock
sub
in
leave
icebp
loopne
fsubr
in
test
ret
aad
hlt
and
loope
leave
jmp
rcr
in
fcmovbe
cmp
cmp
enter
mov
loopne
sti
in
cld
jmp
jmp
fcmove
lret
cmc
clc
cmp
faddp
add
mov
xchg
in
loope
xlat
xor
cld
repz
repz
fdivrp
hlt
out
out
aad
rorl
sti
loope
repnz
xor
aad
fdivrl
shl
shl
aas
aad
fcomi
add
xlat
cld
clc
xchg
stc
stc
decl
icebp
shlb
lock
out
loopne
out
xlat
in
jmp
stc
jecxz
xchg
nop
std
icebp
in
ljmp
sub
in
in
rolb
xlat
fucom
lock
loop
adcb
jecxz
call
fdiv
out
rcl
lret
out
cli
in
into
jecxz
out
stc
enter
sti
xor
int
aas
sarb
fsubp
out
jecxz
xchg
jmp
mov
ret
not
xlat
aam
mul
rcr
cmc
fmuls
in
mov
jmp
clc
enter
aam
sarb
call
in
cmp
fldl
ret
xacquire
xor
in
hlt
out
out
cmp
cmc
dec
cld
xchg
jmp
cld
fcomi
rcr
iret
fsubp
lock
in
out
iret
sub
hlt
into
xchg
loope
leave
into
in
out
out
test
aam
incl
fcmovu
sbb
xchg
mul
enter
aam
icebp
lret
repz
xchg
shl
in
sti
xlat
fcmovnu
iret
loopne
xor
shl
stc
fsubrp
fcomp
cmp
loop
ljmp
jmp
shr
icebp
ror
loop
xor
cmp
ljmp
cmc
fdivp
xchg
out
in
faddp
clc
loopne
loope
fdivrp
xor
xor
cli
idivb
test
leave
fsubr
testb
xchg
std
mov
neg
cmp
in
std
fdivr
shll
int3
icebp
hlt
jecxz
in
cli
mov
test
mov
das
hlt
out
aad
xor
sti
std
ffreep
out
xlat
out
xchg
out
fxam
icebp
ljmp
out
clc
xor
aad
shr
loopne
out
in
fmuls
mov
inc
test
inc
hlt
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
cmc
add
sub
jle
add
icebp
xchg
fcomip
call
fucomip
aam
into
cli
int3
rcl
xchg
hlt
xchg
mov
out
lret
icebp
shr
in
out
jmp
cmp
loop
mov
in
shr
in
in
fld1
xor
out
fdivrs
int3
aam
shl
in
neg
stc
loope
cli
out
mov
mov
xor
fdivp
shr
in
ds
in
jmp
decb
leave
repnz
jmp
rcl
in
cmp
leave
cmp
neg
jecxz
std
shl
hlt
or
mov
ss
in
xor
cli
cli
into
stc
repnz
cmp
xchg
addb
aad
aaa
in
stc
int3
ljmp
sti
fcmovbe
ffreep
in
ret
xlat
out
repz
shl
jmp
xlat
aaa
fprem1
in
out
clc
fldlg2
in
in
test
fisttpll
int
call
ss
in
fadd
stc
cmp
fdiv
xor
shl
adc
sbb
loopne
ljmp
cli
clc
icebp
icebp
aad
out
icebp
std
rcl
mov
mul
sbb
mov
lret
test
leave
ljmp
filds
mov
mov
inc
lock
out
cli
hlt
cld
ficoms
call
icebp
int
test
icebp
std
stc
fucom
jmp
int
repnz
loopne
shr
repnz
in
fdiv
fchs
sti
test
fdiv
call
mov
jmp
in
rcl
shl
cmc
enter
aad
lock
cmp
leave
lds
rcr
shl
mov
xor
out
lock
stc
cmp
aam
aad
repz
roll
ret
call
cmc
xchg
in
loop
cmp
ror
into
fdiv
ret
lock
rcr
in
out
loopne
addb
int
ljmp
cmp
loop
xor
out
out
repnz
vpsubusw
iret
nop
mov
div
icebp
cld
in
in
lret
jmp
sar
ret
testl
xchg
mov
hlt
xor
cld
in
cmp
clc
rolb
out
sti
cld
test
loopne
fsub
out
lret
mov
icebp
xor
cmp
xor
repnz
loope
ftst
rorb
loope
clc
out
xchg
int
lret
into
lret
xor
cmp
out
aad
cmp
xlat
lock
ljmp
or
out
ss
lret
in
jmp
cld
fstpt
fst
cli
jmp
loope
rolb
shl
out
idivb
call
cmp
cld
cmp
stc
aad
cld
clc
mov
roll
rcr
enter
aas
xor
out
cmp
lock
mov
orb
out
fdiv
jmp
cli
fstpt
cmp
incl
and
add
into
fimull
aaa
aad
shll
shr
cli
test
stc
loopne
and
int
in
faddl
xor
out
ljmp
loop
add
shl
out
mov
int
in
shl
xor
lret
cmc
ljmp
fcomip
xchg
and
clc
addb
enter
clc
into
ljmp
repz
aam
jmp
mov
xor
leave
ror
stc
cli
loopne
aas
fst
sbb
shl
lret
rcr
lret
xchg
in
out
cmp
rcr
cmc
cmc
ds
les
rcr
int3
mov
out
iret
clc
shl
in
lret
out
sar
cmp
in
stc
xchg
cmc
mov
cld
call
in
loop
repnz
cmp
fcomip
sti
int3
hlt
sti
f2xm1
into
test
out
hlt
loopne
xlat
loop
mov
leave
sarb
fadds
fiadds
jmp
out
fadds
out
aas
lret
aad
xor
xor
shr
jmp
test
in
cmp
leave
loop
roll
bnd
stc
shl
jmp
ret
stc
cmc
imul
test
enter
imull
enter
in
out
iret
cmp
loopne
enter
fisttps
xchg
out
aam
lret
hlt
jmp
fdivr
sar
repnz
xor
mov
mov
repnz
in
in
loop
jecxz,pn
sar
repz
hlt
std
in
icebp
sarl
mov
inc
mov
add
add
int
xlat
outsb
cmp
push
add
repz
stc
out
in
out
jmp
repnz
loop
ljmp
loopne
fdivr
sar
cld
fsub
movb
iret
in
out
in
xor
aad
enter
fdivr
xor
aam
les
call
in
xor
add
in
xchg
xchg
idiv
cmc
xlat
les
lret
addl
xor
in
testb
aad
out
std
inc
iret
loope
out
mov
out
jmp
shl
cmp
ret
fdivrl
fadd
loope
neg
mov
loopne
int3
jmp
jmp
ljmp
shl
iret
out
fisttps
out
loope
into
shl
call
cmp
iret
iret
repz
into
hlt
clc
ds
loop
fmul
into
nop
test
mul
xor
fcmovne
stc
out
ss
adc
neg
ret
ret
std
fadd
xchg
decb
xor
repnz
int3
xor
fstpt
test
fiadds
cmc
mov
std
fadds
cmc
out
out
shr
jmp
out
fpatan
iret
cli
fcmovbe
not
test
xrelease
test
divb
in
jmp
loopne
cmc
cmp
fcmovnu
rcl
call
in
xor
int3
xor
lock
out
test
mul
out
xchg
int
clc
shl
ret
out
cmc
xor
hlt
cmp
sti
ret
jmp
xor
leave
ljmp
nop
out
loopne
xor
out
cmp
into
cmp
ds
ret
test
loope
xchg
xchg
enter
shll
out
aaa
sti
int3
in
hlt
repz
repz
fld
fnclex
xchg
fsubp
nop
jecxz
xor
lret
cli
loopne
in
or
into
sti
rcr
mov
mov
jecxz
fdivp
addb
sarb
sti
cmp
fsub
xlat
call
sbb
test
ss
cmp
enter
loope
cli
fdiv
repz
clc
testb
sub
enter
cld
sarb
push
clc
repz
ret
in
cmp
std
call
out
int3
in
int
lret
jecxz
cmp
ret
repz
ret
mov
xchg
icebp
aam
call
ljmp
loopne
fsub
loop
test
loopne
enter
xchg
xlat
xor
stc
xlat
jmp
jmp
hlt
loope
fsubrp
inc
decl
mov
leave
call
neg
out
ret
mov
std
leave
fdivr
mov
in
call
hlt
mov
lock
in
icebp
shl
test
in
hlt
aas
neg
cmp
mov
xor
out
in
enter
rcr
sbb
repnz
loop
lret
out
cli
leave
and
nop
mov
into
repnz
lock
sarb
fcmovnbe
fnclex
fsub
in
faddp
fcmovnu
cli
fsub
loop
xchg
shl
out
cmc
lret
icebp
aaa
sti
cmp
fimull
xchg
into
and
leave
hlt
in
shl
call
ljmp
test
fsqrt
idiv
fcmovnu
iret
int
shr
out
idiv
std
lock
in
sbb
repz
test
lret
enter
jecxz
aad
aad
xlat
rcl
jmp
hlt
sti
aas
xchg
xabort
sub
mov
xlat
in
iret
cmc
leave
std
sarb
fdivrp
enter
out
mov
int
out
in
loop
shl
cmc
cmp
fsubr
cli
ds
rcl
fcomip
vcvttpd2dq
sti
lret
fcmovne
nop
repz
rcl
int3
ds
ss
aam
ljmp
fsubrp
shl
ret
cmp
test
shl
call
mov
jmp
and
xchg
mov
in
clc
xor
jmp
rcl
sarb
cmp
aam
test
int
stc
lock
rorb
out
out
fdivr
repnz
int
aad
xchg
aas
repz
cli
jmp
cld
jmp
out
enter
call
aas
cld
sarl
aad
enter
rcr
fisttps
shll
in
xor
into
fucom
cmp
neg
addl
incb
in
in
int
sarl
xor
ret
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
test
fdivrp
cli
fmulp
cli
xchg
mov
fsubp
out
xchg
repnz
shl
jmp
cmc
hlt
into
aas
ret
loope
cmc
ret
std
jmp
cld
mov
lock
call
call
cmp
iret
ds
stc
fiadds
inc
out
orl
sar
rcr
xor
jecxz
clc
adc
ffree
lock
test
cs
fld
std
hlt
neg
lret
ret
hlt
incb
and
addl
xor
jmp
fdiv
fucomp
aaa
shl
test
sti
out
sub
rorl
jmp
xchg
aam
xor
in
icebp
call
test
loopne
fucomi
cli
sub
in
shll
lret
xor
out
rcr
loop
repnz
mov
sbb
mov
xor
out
repnz
xor
cli
cli
sti
les
mov
leave
sub
in
stc
jmp
jmp
clc
shr
xlat
loope
rcr
lret
call
adcb
fnstsw
cmp
into
fdivrs
cmp
rcr
icebp
test
aam
std
iret
xchg
fiadds
xor
in
sar
in
iret
sbb
test
stc
std
fmuls
lock
hlt
xor
imul
cmp
lock
aaa
sar
fst
rol
rorl
jmp
mov
shl
imul
cs
jmp
cli
aaa
hlt
cmp
rol
stc
lds
lea
jmp
xor
loopne
incl
fadd
loopne
out
call
xchg
cmp
in
in
test
dec
repz
aam
std
ljmp
lret
stc
mov
mov
in
jmp
into
ss
ret
aam
jecxz
add
in
int
mov
aaa
ss
iret
repz
cld
enter
out
repnz
xchg
cmp
mov
lock
test
bnd
jmp
cmp
vpsrld
mov
loope
sti
ljmp
enter
xor
repz
aaa
fiadds
in
std
out
mov
add
cmp
iret
not
fadd
cli
int3
cmp
cmp
ret
loopne
movb
out
les
aam
fcomi
aam
leave
sti
incl
out
xlat
and
xchg
int3
jmp
fmul
xlat
out
xor
out
shl
xlat
clc
cmp
xlat
ret
fsubp
lret
std
out
mov
mov
xor
out
xlat
aaa
loopne
rol
xlat
sar
rolb
mov
roll
call
shr
lock
ret
sti
out
add
cld
mov
ljmp
shlb
xor
call
jmp
loopne
lds
not
in
sar
jmp
cmc
aas
xor
enter
ror
xor
neg
test
enter
int
lret
repz
sbb
shr
cmp
lret
aaa
aas
loop
loop
and
cli
enter
int
loopne
jecxz
shr
jmp
cmp
lret
xlat
jecxz
cmpb
jmp
mov
test
jmp
out
icebp
cmp
add
int3
or
fimull
shl
aad
loop
xor
sar
rcr
ds
jmp
fdiv
sbb
cli
iret
popl
xor
out
in
ds
test
fnstcw
shl
test
filds
ljmp
loop
sub
iret
aaa
loopne
sbb
ret
adc
and
fstp
and
not
vpslld
cmp
repnz
cli
rcr
test
sti
clc
sti
sub
out
ret
enter
fcmovu
hlt
sarb
ljmp
int3
in
shr
cs
loop
xlat
sti
cmp
fidivrs
adc
hlt
clc
hlt
stc
lret
mul
out
fistl
std
xor
enter
addl
aad
test
loope
jecxz
lret
adc
jecxz
cmp
sar
into
cld
test
sti
xchg
hlt
leave
in
xchg
dec
addl
xor
lret
out
idivb
xchg
mov
fdiv
fmul
leave
fiaddl
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
out
cld
cmp
jle
add
cmc
mov
in
idivl
cmp
cld
shr
cmp
shl
loopne
fsub
lds
rcl
and
rcl
stc
les
cmp
fdivr
loope
test
jmp
mov
test
fmulp
sub
mov
leave
cmc
rcl
ror
iret
loopne
aas
int
adc
rcl
loop
jmp
test
addb
les
hlt
repz
icebp
cmp
xchg
repnz
out
fsub
cld
out
into
fsubrp
repnz
xchg
cmc
aad
ss
icebp
not
out
ds
in
loop
jmp
fdivr
flds
int3
out
fmulp
in
sub
idiv
cmp
sti
iret
stc
sar
in
xchg
fildl
imul
shl
xchg
rcl
xlat
ss
shl
sti
jmp
cld
shl
fistpll
sar
cli
fildl
xchg
xchg
xor
hlt
xlat
xor
sti
int
cmp
cmpl
aad
clc
sti
jmp
lret
loope
in
in
repnz
repz
fsub
sarl
repz
sub
leave
lds
rcr
sub
fdivr
iret
fcmovnbe
lret
aaa
dec
mul
fcmovnbe
div
in
lret
cmc
lret
xchg
icebp
lret
jecxz
sar
xor
out
shll
stc
out
hlt
fxtract
ds
div
xchg
fstp
cli
add
out
xchg
cmc
loopne
out
divl
lret
fucomip
icebp
cli
fiadds
roll
xor
xlat
out
xor
jmp
incb
clc
repz
ds
lret
in
mov
xor
stc
clc
out
int3
repz
fcom
clc
clc
mov
loopne
shl
out
hlt
out
out
out
ljmp
out
hlt
cmp
call
in
iret
jecxz
fcomip
sub
out
fidivl
ljmp
hlt
fildl
leave
ds
out
xchg
into
int
loop
das
stc
fmul
cli
shll
fldln2
lock
loopne
repz
enter
clc
out
out
xchg
neg
aam
repz
loop
ror
std
loopne
hlt
int3
xchg
xchg
xchg
iret
cmp
sti
neg
cmp
cmp
roll
xchg
out
lret
loope
iret
jmp
shrl
das
jmp
rcl
fcmovb
ret
mov
sub
cli
adcb
lock
cmp
fcmovnu
test
loop
xchg
in
enter
jmp
iret
repz
leave
in
jmp
rcl
xlat
fstp
xlat
addl
jmp
subb
sarb
aam
rcr
fcomi
sti
fadds
sti
lret
filds
lret
ljmp
xlat
lret
out
cmc
jecxz
enter
add
leave
jmp
test
xchg
leave
repz
fcomi
cld
jmp
aaa
cmc
shl
fcmovu
xor
test
stc
and
loopne
ljmp
sub
cmp
cmp
repnz
shr
imul
aad
in
lea
stc
ss
in
sar
cmp
fcomi
fistpll
ds
in
repz
lret
out
in
xchg
xchg
in
leave
fsubr
cmp
repnz
neg
repnz
fcomip
loop
ds
loop
leave
enter
lock
xor
fnstenv
idiv
cmc
cmp
xor
test
shl
shl
cmp
or
divl
xor
iret
shr
into
shr
int3
fsub
ret
incb
test
xchg
fmulp
lock
jecxz
xor
fxch
call
into
repnz
add
loop
in
ret
xchg
lret
and
xor
shlb
in
loop
sti
push
lds
mov
xchg
icebp
in
std
out
icebp
repnz
xor
rcl
out
in
fcomp
iret
fsub
mov
lret
and
mov
bnd
call
cld
lret
sti
into
loope
cmp
decl
xchg
hlt
ljmp
not
ror
lret
cmc
out
ret
in
test
stc
enter
repz
repnz
out
xlat
cmp
cli
hlt
fucomi
jecxz
rcr
movl
mov
das
cmp
fcom
xlat
aaa
ss
ds
test
cmp
ret
sbb
jecxz
in
lret
fmull
int3
hlt
clc
sti
cmp
shl
cmp
mov
adc
test
icebp
xchg
out
rcr
sarb
in
adc
stc
out
fdivrp
xchg
ret
xor
add
push
mov
push
jmp
ret
rcl
aam
ret
sarl
lock
push
add
enter
lret
in
xchg
out
lock
fsubr
int3
aad
in
std
fcmovnbe
repnz
ret
jecxz
call
jmp
lret
sub
in
cli
out
ror
out
fadd
xlat
cmc
loop
ret
mov
out
test
out
int3
lret
out
out
jmp
cmp
xor
fnstsw
add
std
xchg
enter
repz
stc
in
in
lock
cmp
cmp
repnz
jecxz
mov
orb
sub
in
not
dec
out
cmp
dec
jecxz
lock
icebp
fcmove
sti
call
sub
xor
xor
in
enter
aaa
lret
cld
icebp
cmc
ret
mul
stc
mov
test
ljmp
out
out
sub
ss
rcr
sar
repz
mov
testl
mov
cmp
shl
stc
add
enter
in
loopne
adc
fsubrp
shr
xor
shlb
ljmp
fdivrl
hlt
xchg
ljmp
fmul
sub
jecxz
xor
div
fucomip
cli
in
rolb
mov
int
shr
leave
int
ljmp
ds
hlt
iret
test
jecxz
mov
in
test
shl
orb
mov
fucomp
int
cmp
lock
cmc
xor
std
xchg
xchg
out
jecxz
out
sti
in
ljmp
iret
and
in
fadd
loop
leave
leave
xchg
jecxz
lret
idiv
lret
cmp
idiv
enter
cli
out
in
fsubp
rcl
repnz
ss
xor
shll
call
shl
add
fcmovbe
repnz
mul
lds
out
cmc
ret
shl
xlat
call
ljmp
or
jecxz
mov
incl
xor
cmp
fst
lock
in
rcl
repz
aas
aam
call
in
out
lret
test
xor
rcl
aaa
aad
aam
into
fcmovnbe
jecxz,pt
call
ffreep
faddl
mov
idivb
cld
in
fucomi
loope
in
not
addb
sti
fmull
mov
lret
sar
lret
cmp
leave
fucomip
repz
out
sbb
fld
loope
ljmp
fmul
icebp
loope
out
call
ror
cli
push
iret
cli
stc
out
ret
orb
lret
adc
out
jmp
shl
cmp
jmp
mov
fcmovnu
out
jmp
icebp
out
mov
out
cmp
clc
idivl
ljmp
out
xchg
loop
in
lock
rol
int
out
cmp
in
cmp
flds
cmp
ret
shl
in
xchg
in
into
jmp
std
fucomip
rcr
add
hlt
jmp
jmp
flds
cmc
out
in
fstpt
jmp
rol
shl
loop
loope
add
fcoml
shll
shl
shl
aad
ss
loop
loope
test
icebp
xlat
loop
hlt
mov
fndisi(8087
mov
or
jmp
cmp
xor
push
lock
dec
stc
fdiv
test
and
int3
out
out
test
out
ss
rcl
fnstcw
icebp
ret
addl
jmp
icebp
icebp
jmp
call
fstpt
xor
loope
incl
lret
in
stc
fcomi
jecxz
les
xor
out
xor
out
cmp
out
fucompp
mov
jmp
lea
xchg
enter
int
jmp
fxch
ss
stc
shl
cmp
fdivr
loope
ret
cld
cli
icebp
fiadds
fmul
clc
lock
lret
in
ss
out
loop
adcl
out
jecxz
cmp
icebp
repnz
lret
sarb
rol
addl
out
mov
lret
in
addb
in
icebp
idivb
lret
idivl
rcr
repz
loope
cli
loop
fimuls
repnz
cmp
into
fsubr
ds
fnstsw
xchg
aad
clc
testb
xchg
lret
mov
icebp
xor
fld
in
sti
into
sti
iret
xor
aam
out
cmp
fimull
iret
xchg
loope
idiv
aaa
lret
lock
fstp
rcl
shl
cmp
cmp
fcmovb
lds
xchg
iret
xchg
loope
clc
mul
repnz
fdivp
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
fsts
sub
add
add
repz
aas
cmp
into
xchg
out
xlat
adc
icebp
jecxz
hlt
aad
lret
std
adc
loopne
test
aam
addl
faddl
leave
icebp
ljmp
jmp
sub
clc
vpaddq
in
ljmp
repnz
aaa
repnz
cmp
cmp
loopne
ds
xlat
jecxz
lret
lret
rclb
lock
jmp
cmp
repz
xchg
cld
hlt
mov
jmp
int
lret
out
sub
repz
cmc
ret
lret
fdivr
fdivr
ret
xchg
loop
sbb
shr
cld
iret
call
idivb
cmp
fdiv
ljmp
and
mov
jmp
call
mul
and
fcmovnbe
lret
int3
xchg
cld
rcr
in
out
cs
shll
loope
jmp
aam
fmull
sbb
sti
mov
call
in
cmc
cmp
ss
call
cli
cld
repnz
clc
loop
filds
loop
test
ror
out
lds
cmp
loop
stc
neg
jmp
leave
test
int
out
iret
mov
int3
call
imul
out
repz
ret
mov
and
aad
ljmp
loop
loopne
mul
aam
test
out
sti
int
fists
out
xor
call
aam
xlat
fidivrs
int
repnz
enter
mov
into
test
ret
out
jmp
aaa
xchg
jmp
in
cmp
int3
jecxz
xchg
xchg
shrb
repz
repnz
cmp
test
xlat
cld
orb
xchg
iret
loope
xlat
xor
enter
in
xlat
loopne
cld
loop
in
ljmp
orb
ljmp
aad
lock
xlat
loop
mov
loopne
xchg
fstp
mov
int3
loop
repz
xor
cmp
push
fildl
aad
inc
clc
fmull
out
repz
int3
in
in
cli
lds
in
iret
xor
sti
cli
sar
or
addl
jecxz
sub
leave
fcmovu
sarb
xor
hlt
rolb
out
movb
jecxz
out
rol
lret
repz
jmp
out
out
sar
cmp
iret
cli
testl
lret
out
sub
xor
cmp
cmp
stc
jecxz
into
fcmovb
fcomip
test
ret
out
lret
test
ret
xlat
xor
ss
repnz
into
xor
fld
jmp
cli
imul
lret
mov
xor
int
ss
aas
int
fdivr
fcmovnu
std
jmp
incb
mov
int
sub
cmp
lret
cld
std
aas
ds
loopne
loopne
int
mov
call
shlb
xor
xor
xor
lock
lock
sarb
clc
jecxz
ljmp
xchg
int
icebp
ljmp
stc
sarb
adc
repnz
fprem
fildl
ljmp
shl
das
aad
lret
shl
in
aas
cmp
xlat
neg
aam
std
ljmp
in
enter
jmp
shl
in
sti
rcr
fdivrs
cld
cli
cld
test
sar
fimull
bnd
ljmp
ds
repnz
neg
loope
call
shr
xchg
in
leave
fldln2
enter
int3
hlt
testl
mov
xchg
adcl
leave
into
repnz
lock
cmp
aas
shl
loope
faddl
loopne
lret
xchg
jecxz
int3
idiv
xlat
repnz
lret
xlat
std
rolb
stc
loope
idiv
out
mov
hlt
xor
out
enter
clc
sti
aam
out
shr
leave
orl
iret
jmp
cmc
fdivs
fcmovu
sar
out
or
ret
div
enter
testb
aam
icebp
out
xor
xor
ror
cmp
xlat
ljmp
cld
stc
lds
nop
icebp
fdivp
shl
ljmp
cmp
add
in
sarb
sti
neg
cld
mov
and
mov
repnz
enter
test
aad
int
out
fdiv
rcr
roll
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
stos
fistpl
enter
add
aad
jmp
iret
int3
mul
std
rolb
out
std
lret
mov
xchg
int
repz
idiv
int
into
repz
cmp
mov
popl
lock
out
iret
cmc
cmp
out
cli
faddp
rol
lret
mov
ret
lret
in
in
fildll
in
cli
cmp
mov
test
iret
cmp
test
rol
fiaddl
xchg
into
mov
in
cmp
sti
hlt
xlat
out
aam
xlat
int
fcmovu
mov
stc
stc
loop
mov
jmp
enter
int
cmp
in
test
jecxz
in
test
mov
xor
out
xchg
xchg
sar
xor
cmc
cmp
cmc
sti
fcomp
mov
fmuls
xchg
leave
xor
lret
test
aad
fistpll
out
out
cld
repz
in
test
sti
jmp
xchg
cld
std
xchg
in
in
fld
cld
leave
repz
out
cmc
clc
test
and
add
in
in
xchg
hlt
loope
int3
xor
std
aad
lret
xor
test
leave
loop
out
call
jecxz
xchg
xor
fnstcw
xor
sti
cmc
leave
out
lret
ret
icebp
rol
jmp
in
int3
xchg
rcll
fcom
lret
in
fdivrp
rol
repnz
shl
and
fdivr
fisttpll
in
hlt
enter
loope
fcmovnu
aam
lret
in
in
fdivrp
mov
sub
out
call
iret
cmp
test
cmp
mov
xchg
fisttpl
hlt
out
xor
fsubr
aaa
out
imul
xlat
fcos
ss
fucomi
leave
xchg
int3
loop
lret
subl
call
std
fprem1
int3
repnz
loop
out
mov
in
fcmovne
jmp
ror
clc
ret
aad
cmc
mul
fst
rol
xor
jmp
mov
jmp
mov
out
xor
jmp
xor
loopne
cmpb
aas
repz
lret
incb
xorl
leave
xor
ljmp
flds
idiv
xchg
out
xchg
mov
in
jecxz
cmc
sar
int
jmp
repnz
sti
filds
test
jmp
loope
and
rol
into
in
fdivrl
xchg
test
xlat
stc
nop
cld
int3
jmp
cmc
fmul
fcomi
out
cmp
aam
ds
adc
ret
test
mov
int3
fcoml
xor
aam
aam
sarb
not
not
roll
in
enter
ret
out
in
nop
xchg
xor
ljmp
fcom
fsubp
sub
std
enter
in
dec
std
icebp
xchg
repnz
xlat
xlat
jmp
xlat
out
aad
cmp
std
into
ror
shl
repnz
test
rorb
hlt
jmp
sub
out
ljmp
cld
out
aad
call
fsubr
xchg
icebp
mov
loop
enter
hlt
aam
in
hlt
xlat
icebp
fcomi
loope
xchg
lock
call
mul
stc
call
cmp
mov
fcmovbe
hlt
int3
fld
nop
cld
lret
out
xchg
repz
test
fdivr
cli
cmp
xchg
ret
cli
stc
cld
decl
lock
jecxz
das
jmp
cmc
icebp
call
fidivrs
lock
idiv
cld
cld
lret
jmp
in
xchg
xchg
div
xlat
int
clc
ss
into
sarl
rcl
in
fstp
in
test
shl
into
addb
cmp
leave
int
in
iret
in
fidivrs
movb
enter
xchg
lds
xlat
idivl
lret
lock
xlat
sti
ds
rcl
xchg
test
fstp
xchg
xchg
xor
int
shll
xlat
fcom
fsub
into
addl
mov
sub
out
mov
ljmp
cmp
iret
iret
hlt
icebp
loope
clc
in
sub
int
out
leave
out
in
into
int3
cmc
clc
in
int3
icebp
ss
sbb
cmp
test
cmc
decl
cld
rol
in
out
repz
xor
ds
cmc
out
jecxz
hlt
jecxz
hlt
shl
ret
out
int3
nop
fildl
xor
out
aad
int
cmp
sarl
fnstcw
out
test
iret
test
jecxz
in
in
das
xlat
fucomi
out
fcmovnu
shl
ret
test
or
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
cltd
mov
add
add
out
jmp
jmp
loop
shr
leave
test
sarb
aam
aad
rcr
mov
out
jecxz
mov
loopne
lock
xor
aaa
cmp
sar
jmp
cmp
ds
sar
cmp
test
nop
in
mov
hlt
ret
lret
cmpl
test
int
in
xchg
mov
in
call
ljmp
cli
in
test
fcomi
popl
jmp
xor
cmc
int3
fcomi
ret
aas
xchg
fxam
loopne
xlat
in
and
cld
loopne
xchg
loope
xor
enter
std
fsub
shl
imul
fdiv
test
cld
fisttpl
mov
xchg
jecxz
ljmp
leave
in
sub
aam
aad
repnz
repz
adcb
cli
stc
cmc
std
clc
cmp
sti
sti
jecxz
xchg
loop
decl
mov
shl
out
ret
cmp
lret
fnsave
cmp
xchg
repz
loope
xchg
dec
jmp
sti
lock
cmp
addb
fiadds
out
jecxz
test
sbb
icebp
cld
std
xlat
rol
cli
jecxz
aam
fsub
ds
cli
mov
aas
cmc
jmp
cli
leave
loope
lret
ror
icebp
enter
cli
sti
mov
loope
test
icebp
call
xor
hlt
addb
hlt
fcom
or
fdivr
in
fucom
ror
lret
and
hlt
aam
repnz
in
int
cmp
jmp
loopne
filds
mov
cmc
iret
divl
call
cmp
xlat
fiaddl
loop
fldpi
fldlg2
int
test
ljmp
rcl
stc
xor
jecxz
hlt
jmp
lret
fisttps
sub
repz
xor
shl
ss
test
hlt
enter
fcmovnu
imul
fdivr
xchg
ljmp
sub
out
sti
cmc
in
jmp
ds
fsub
add
sub
repnz
lock
int
out
cld
fidivrs
ljmp
rol
faddp
mov
mov
fmul
out
ljmp
lret
lret
aad
fcomi
aam
loope
cld
repz
ljmp
mov
loop
jmp
jmp
fxch
iret
cmp
repnz
ret
mov
and
mov
xchg
jmp
xor
repnz
rcr
shl
cli
not
fdivr
jmp
orb
lock
cmp
sti
fcomip
clc
out
ds
mov
loopne
addl
xlat
int
cmc
fucomp
jmp
neg
test
lds
ret
loop
roll
cmp
lret
in
jmp
out
int3
icebp
aad
ret
stc
repz
int3
leave
fsubr
sub
mov
sub
xor
xor
fdivs
ljmp
les
rol
into
mov
shll
int
xor
cld
call
fsubr
cmp
xlat
stc
xchg
mov
out
lret
out
repnz
ss
int
lret
ret
lock
icebp
filds
in
lea
iret
repz
in
fcmovne
fdivrl
out
neg
inc
cld
mov
lds
rcl
into
cmc
aad
xlat
xor
in
cmc
ss
cmc
in
out
hlt
cli
ffreep
loop
out
xchg
in
fisttps
mov
leave
fxtract
jmp
icebp
bnd
repnz
ret
jmp
call
std
addb
jmp
xor
cld
leave
sarb
call
sti
out
filds
sti
rcr
out
cmp
hlt
cmp
mul
cld
out
fsub
xlat
out
leave
out
std
xchg
imul
call
ror
aam
shl
xlat
decl
fadd
cmp
rcll
fcomi
aam
cmp
rcl
fucom
jmp
leave
fadd
fldl
ret
cli
in
ror
jmp
lock
loopne
in
aad
ljmp
out
aam
iret
int
repz
rcl
ljmp
repnz
lret
in
iret
cli
cli
xchg
test
mov
xor
lret
cld
enter
aam
cmp
xlat
iret
not
test
aad
mov
xchg
decl
lret
rcl
out
fdivr
shl
sti
mov
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
fmulp
cmp
push
add
test
into
fcomp
icebp
call
lret
mov
icebp
int
int3
out
repnz
rcl
rcr
fcomip
repz
ret
out
fdivr
jmp
test
xor
xor
jmp
in
cmc
clc
loope
clc
xor
sti
mov
ret
xchg
cld
ret
adcb
repz
shll
cmp
repnz
in
int
xchg
cmc
out
lret
int3
repz
repnz
iret
cmp
fnstenv
sti
repz
test
in
shl
fimull
out
mul
in
repnz
fptan
xlat
sti
aas
fcomp
rol
test
sti
out
fimuls
shr
aaa
div
fnstsw
iret
imul
loopne
lds
iret
int3
rorl
fdiv
lock
iret
out
cmp
sbb
ds
loopne
not
fmul
enter
iret
jecxz
addb
out
iret
loopne
sti
out
loope
jmp
loope
fisttps
shl
aam
sti
aaa
xlat
sub
fstp
fidivrs
ljmp
popl
icebp
int3
in
repz
cli
cmp
aas
inc
cmp
adc
out
faddl
lret
lret
decl
hlt
shr
aaa
jmp
fldl
loopne
loop
lea
std
out
int3
out
int
sub
xor
lock
std
lret
jmp
ss
repz
jmp
fdivr
in
xchg
ljmp
xlat
rol
lret
loope
lret
test
out
aam
ret
in
jmp
lock
in
into
xor
sarb
test
ret
fldl
movb
in
mov
test
ss
ror
xor
in
shl
roll
loopne
cli
out
aad
clc
jmp
int
xor
hlt
das
repnz
aad
cmp
mov
fucom
in
lret
test
xor
aam
in
sti
rcl
int
cli
rol
hlt
std
ljmp
xchg
cmc
out
lret
aam
lock
into
fneni(8087
ljmp
mov
out
into
and
test
icebp
out
ss
stc
cmp
lret
cmp
aam
int3
loope
hlt
shl
vpaddusw
test
call
mov
cld
aad
cmp
cmp
aad
ret
ret
or
fmuls
in
mov
lock
jmp
aas
ret
cmp
xlat
aam
out
mov
popl
rcl
int3
xor
int3
cmp
ret
out
std
cmp
fiadds
fcmove
loopne
mov
jecxz
enter
aam
shl
loop
out
sarl
in
mov
into
jmp
cmc
clc
fadd
int3
xor
in
cmc
sti
iret
int
ds
out
loopne
fcmovnu
xchg
test
rorl
xor
cli
xlat
cmc
into
xlat
fidivrs
cmp
out
out
cmc
ffreep
loope
lret
rolb
fmul
fcmovnu
aam
xlat
clc
loope
fcmovu
sbb
test
aas
addl
xlat
lret
sti
out
fdivrl
fstp
call
out
rcl
cmc
fdivrp
cmp
mov
lret
in
int
out
fcmovnu
out
into
cmp
ffree
ret
ret
fchs
and
mov
mov
iret
loop
in
int3
leave
stc
ret
call
sarb
aaa
vcmpsd
test
out
lret
xor
out
fdivrs
in
leave
out
ljmp
fcomi
in
mul
loopne
fcmovu
mov
cmc
jecxz
rcl
in
int
cmp
enter
jmp
test
ds
test
cli
xchg
sbb
test
int
repz
call
cld
xor
aad
neg
stc
cmc
clc
test
xchg
aad
ljmp
jmp
call
loopne
iret
incl
lret
out
int
xchg
and
sub
in
out
add
clc
xlat
rcl
jecxz
div
in
and
into
add
in
repz
jmp
aam
ljmp
sti
cmp
in
out
cmp
repnz
shlb
fdiv
cmp
clc
aam
xorl
xlat
repz
into
loope
aam
loope
xor
fsin
leave
cmp
aas
ds
stc
xlat
out
aam
xor
rorl
xlat
aaa
xor
std
cmp
fcmovb
neg
test
xchg
xor
enter
int3
or
in
mov
fsubr
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
outsb
adc
jle
add
in
cli
aam
int3
leave
cmpb
xlat
fcmovu
shl
dec
hlt
sbb
fcmove
and
fdiv
lret
ret
leave
fucomip
aas
aaa
cmp
aam
cld
lds
and
idiv
out
aaa
jmp
xlat
ss
fstpt
mul
ret
loopne
out
mov
lret
out
iret
loope
aaa
int
repnz
cmc
cmp
cmc
fld
fisttpl
out
jmp
loope
xor
out
aaa
stc
jmp
cmp
std
aam
xlat
out
mov
fimuls
xchg
sti
xchg
mov
hlt
lret
leave
aam
aam
out
in
cmc
cld
out
icebp
fdiv
xchg
in
rcll
jecxz
jmp
or
div
std
cmc
ret
mov
testb
repz
das
into
int
neg
cmc
fdivl
leave
cmp
test
cmc
repz
lret
idiv
sti
fiadds
lock
aad
stc
in
jmp
ret
or
rcr
call
icebp
shl
xchg
iret
enter
int
fmul
rcl
cmp
ret
fdivrp
icebp
enter
sbb
test
xchg
aam
xor
jecxz
rcl
aaa
lret
ret
in
fiadds
decl
out
cmc
jecxz
sarl
cmp
div
xchg
xabort
cld
in
loopne
jmp
fcmovne
mov
shr
iret
cli
into
lock
out
sar
call
lret
iret
sti
in
fcoml
lock
cmc
cmp
aaa
out
in
stc
or
adc
jecxz
xlat
in
fadd
int3
repnz
repnz
ljmp
jmp
test
fldl2t
cmp
lds
rcl
sub
mul
fadds
enter
mov
lret
cld
out
test
out
ror
shr
ss
out
in
stc
lock
incb
jecxz
out
jmp
sbb
int3
call
lret
in
aas
fnstcw
cmc
clc
test
sub
call
rcr
mov
hlt
enter
ljmp
rolb
mov
out
loopne
mov
fcomp
not
mov
ds
out
out
test
fadd
clc
xchg
jmp
mov
out
xor
fcmovb
xor
fcmovne
cmp
std
cmp
test
icebp
imul
test
lret
cli
into
mov
repz
aam
hlt
in
jmp
lret
repnz
repnz
jmp
ret
xchg
adcb
int
aaa
lock
ljmp
ds
xchg
fsub
loop
loop
icebp
jmp
fsub
aad
clc
enter
cmp
test
cld
loope
shl
std
sub
lock
sub
rcl
call
ss
std
ret
and
add
stc
in
loope
xchg
iret
mov
xor
loop
in
xor
shl
shll
lock
repnz
sti
clc
fsub
fxch
in
repz
loope
das
xlat
in
in
fmul
loope,pt
cli
in
aad
fmul
ljmp
lret
cli
repnz
jecxz
into
iret
sub
sti
icebp
aaa
jmp
cmp
test
jecxz
loop
int
lret
cmc
out
aaa
fidivrl
xlat
cmp
add
repnz
repnz
fucomp
clc
out
ljmp
mov
xlat
xlat
fdiv
in
cmc
jmp
stc
into
std
out
testb
out
mov
hlt
aam
out
in
out
fmul
cmp
and
iret
icebp
addl
in
in
test
lret
cmp
cmp
fdiv
sar
clc
cmc
in
lret
enter
xchg
mov
out
sar
stc
xor
iret
sar
loope
shl
fmulp
in
out
mov
xchg
ss
out
cmp
int
fnsave
std
shr
out
clc
ret
rcl
test
fucomp
cld
addb
xlat
stc
clc
leave
stc
in
cmp
fsubp
testl
fucom
test
sbb
aad
xor
cmp
aaa
fdivp
xor
cli
fildl
mov
repnz
jecxz
xor
sub
int
xlat
rcl
loope
fsubr
int
fimuls
in
jmp
cmc
cli
lds
hlt
std
cli
jecxz
fiaddl
js
add
inc
or
inc
lock
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
int
sbb
stos
add
inc
aas
enter
faddp
mov
jecxz
int
in
out
aaa
aad
enter
fcomp
out
fcomp
lret
clc
orb
aad
jecxz
xor
sti
jmp
xchg
addl
jmp
int3
sar
clc
in
cmp
aad
cmp
cmpl
loop
imul
mov
out
test
mov
loope
jmp
shr
out
call
into
ds
sti
fsub
in
test
icebp
int
hlt
add
jmp
in
into
out
clc
sar
rcr
out
xlat
flds
in
in
call
rolb
ret
in
cld
hlt
xor
aaa
into
cli
icebp
ds
in
fnstsw
cld
loope
faddp
out
mov
mov
call
aaa
lret
dec
int3
repnz
rorb
jmp
xchg
jmp
out
ljmp
call
shl
in
fcomi
icebp
xchg
sti
fimuls
in
rorb
icebp
lock
std
out
cmp
not
lock
in
filds
lock
fbstp
ss
fsubr
xor
sti
xor
sar
sar
mov
mov
div
mov
sar
decl
int
cmp
lret
lret
les
jecxz
fsincos
leave
out
rolb
ljmp
ds
into
fst
hlt
repnz
std
lret
jmp
call
cs
lret
adc
jecxz
cli
loop
xchg
fimuls
sub
lret
xlat
int3
iret
hlt
fcmovbe
stc
out
jmp
xor
ret
int
aad
flds
rol
fmull
cmp
cli
filds
ret
enter
xlat
leave
in
call
xchg
int3
xchg
div
not
aam
cmp
ds
loopne
std
int
test
sarl
xchg
lret
out
shr
in
xor
test
repnz
xlat
jecxz
in
call
clc
out
jmp
rclb
shr
stc
sarb
fxch
repnz
cmp
in
loope
call
addb
loop
icebp
cmp
fdivl
into
shlb
fdivrl
cli
iret
cmp
cld
sbb
mul
ljmp
leave
out
int3
rol
int
lret
fcomip
sar
in
in
in
faddl
mov
mov
in
rcl
jecxz
xor
aaa
aaa
cmp
ret
fdivp
fsubr
cmp
hlt
hlt
mov
ljmp
ror
in
int
int
repnz
cmp
in
sti
decb
in
xchg
das
sarb
cmp
jmp
cmpl
in
out
std
push
aam
jecxz
int3
call
xchg
adc
in
ror
fsubr
cmp
xor
inc
ret
test
mov
ljmp
std
jmp
out
aaa
jmp
fcomi
aam
rol
ret
in
mov
sti
mov
repnz
lock
lret
cmc
lret
sarb
cmp
fcmovnb
fcmovbe
lret
std
shl
in
out
shl
repz
lret
cmp
sti
repnz
fnstsw
fsubp
mov
out
iret
hlt
xor
in
ror
out
int
vpaddb
cmc
loopne
lret
fiadds
fdivr
ss
sar
test
fnclex
xor
shr
mov
std
lret
loopne
icebp
mov
call
test
int3
adc
sti
aam
les
clc
enter
into
repnz
repz
in
repnz
clc
jecxz
fistpll
loope
jmp
loopne
call
test
in
cmp
xor
shl
into
repnz
test
call
jmp
fdiv
int
out
aaa
xor
out
ljmp
or
into
test
xlat
neg
xlat
loope
int3
xchg
call
xor
int
shl
int
clc
cmp
xlat
hlt
cmc
loopne
test
faddl
cs
sub
out
std
fcom
ret
fmul
shl
std
and
xchg
icebp
xchg
mov
jecxz
mul
ss
lock
rcr
jmp
in
cli
fcmovb
sar
clc
roll
repnz
repnz
lret
cld
int
rcr
jmp
cmc
jmp
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
mov
pop
filds
jle
add
ffreep
aad
repz
in
ret
lret
jmp
sti
jecxz
fcmovnu
ret
cli
cld
cld
and
lock
fiadds
cmp
shl
rorl
incl
loopne
lock
lret
icebp
xor
cmp
xchg
test
loope
fists
sarb
aam
jmp
std
out
jmp
cmp
cmp
loop
call
int
rcr
fsubrp
into
mov
iret
shl
cmc
xor
icebp
out
ds
cmp
test
fstp
mov
mov
repnz
jecxz
int
iret
cld
cli
shr
rol
in
loopne
aas
fcmovbe
cmp
xchg
loop
xchg
mov
rcl
div
lock
ss
ds
shl
cmp
shl
sar
repnz
ret
xchg
jmp
cs
aam
int
out
out
ds
xlat
les
mov
lret
fisttpll
out
lret
xchg
clc
jmp
aad
aam
rcl
cmpb
icebp
out
cmp
mov
mov
lock
repz
repnz
enter
xor
xor
xlat
icebp
loop
rcr
xchg
flds
jmp
dec
out
lock
jmp
iret
loop
xor
sub
cmp
mov
repz
lea
hlt
std
fstpt
int
repz
cld
loop
into
ret
in
call
out
iret
leave
das
mul
in
ss
leave
in
loope
in
stc
cli
orl
mov
ljmp
int
aaa
cmp
into
out
cld
loopne
test
les
out
xor
mov
clc
repz
rcl
hlt
call
loopne
repz
ret
mov
fcmovu
call
in
in
sub
jmp
lret
out
shl
shl
leave
aad
jmp
xchg
filds
sarl
out
aaa
clc
cmp
cmp
fidivs
aam
out
repnz
les
mov
rol
xchg
xor
fcmovne
call
sti
sub
out
ret
addl
lock
mov
lock
iret
shrl
cli
repnz
incl
mov
int3
test
jmp
loopne
xor
enter
lret
cmp
fcmovu
cli
imul
movb
test
movl
aam
divl
adc
std
aad
sbb
hlt
fmull
mov
fucomp
in
xor
shl
push
jmp
aad
cld
xchg
sbb
cs
shl
clc
in
in
stc
mov
mov
loop
mov
div
sar
dec
adc
xor
cmp
cli
jmp
loopne
fimuls
ss
rcr
repnz
sti
cmp
xchg
shr
loop
test
in
nop
std
rcl
rcl
shl
sub
xor
xor
rolb
fcompp
xor
lret
into
fsubp
out
rcl
in
fcmovnu
int
icebp
in
stc
clc
int
in
roll
clc
out
xchg
lock
loope
loop
stc
fsubr
cmp
std
in
xor
loope
cld
aad
mov
mov
rcll
call
jmp
cmp
fisttpl
fdivr
xchg
mov
repnz
rcl
repnz
sti
xor
ftst
repz
fld
cmc
jmp
in
out
xchg
xchg
in
nop
out
leave
icebp
cmc
repz
icebp
cmp
rcl
loopne
adc
faddp
ljmp
or
jmp
in
rcl
fdiv
rcr
cmp
sarb
ret
loopne
adc
sti
leave
mov
loope
out
test
mov
xor
div
les
icebp
leave
or
aas
cmp
ds
mov
xchg
movl
call
fcomi
aad
int
in
ds
sar
fcmovne
lret
std
sar
out
aas
shrl
into
sarl
fcmove
sti
leave
rol
rcr
shl
neg
lret
fsub
nop
test
iret
xchg
test
clc
out
cmp
rcr
shr
stc
fld
out
sarb
jmp
enter
fxch
test
or
div
ss
cli
xlat
repnz
ret
aas
aad
rcr
stc
jmp
test
xchg
leave
aam
xchg
in
leave
clc
jmp
repz
hlt
xor
jmp
enter
int
fnstenv
xchg
and
xchg
add
add
cmp
lret
cmc
fcompp
in
repnz
jmp
std
test
into
cmc
cmc
lret
cld
ljmp
out
xchg
aad
idiv
jmp
std
loopne
mov
cld
shr
div
sub
jmp
out
hlt
repz
xlat
lock
mul
fmuls
mov
out
in
div
repz
int
clc
cmc
fxch
loop
ret
jecxz
cld
mov
int
jecxz
xchg
orb
shl
stc
into
cmp
loop
hlt
mul
sub
hlt
cld
lret
idiv
mov
sti
or
out
imul
cmp
cld
cmp
cmc
cmp
loop
aam
fsubr
in
loopne
xchg
repz
shl
ljmp
repz
cmc
loop
fcomip
lock
std
jmp
std
or
icebp
cmp
cmp
cmp
rcr
mov
xchg
stc
into
mov
mov
clc
aaa
icebp
hlt
iret
repz
imul
fninit
out
out
xlat
loopne
fimull
std
mov
out
test
repz
cmc
xlat
clc
cmp
aam
lock
fcomi
std
ret
out
lds
xchg
movl
cli
aas
cmp
iret
rol
loop
lock
call
int
lock
mov
cmp
in
lret
out
in
cli
in
cld
lds
out
lea
xchg
xor
out
sti
ret
out
aam
faddl
inc
clc
repz
fcmovbe
xor
jmp
loop
in
lock
lds
in
repnz
into
sti
push
div
test
in
rol
fisttpll
std
out
in
mov
out
jmp
fsub
add
cmp
lret
loop
mov
xchg
lret
xor
in
iret
out
clc
imul
loopne
repnz
neg
xlat
movl
out
repnz
in
xlat
in
shl
clc
rcr
aad
int3
aam
hlt
cmp
cmc
xlat
aas
sub
call
out
cli
clc
in
fmulp
lock
cld
loop
lock
addb
addl
lret
aam
in
xor
neg
cmp
cmp
jmp
jecxz
loop
xchg
xor
cli
xor
lock
ffreep
repnz
call
shl
xlat
int3
fldl
jmp
xor
das
out
int
in
out
fadds
cmp
lret
mov
rcll
ljmp
rcr
sti
aad
cmp
out
in
mov
lret
cmc
xor
xor
cli
aaa
xlat
icebp
lret
fmul
std
out
ret
sti
xchg
hlt
call
mov
in
test
lret
call
shl
hlt
call
loop
test
fildl
icebp
les
aad
rol
ror
fdiv
stc
int3
xchg
icebp
std
rorl
repz
clc
xor
in
test
jecxz
add
xchg
stc
mov
nop
aaa
shr
aaa
cli
in
jmp
fstpt
repz
cld
in
clc
jecxz
fiadds
test
icebp
aaa
sar
hlt
int3
repnz
ret
fdivrp
repz
ljmp
jmp
out
ss
out
rcr
idivl
cmp
shl
push
aad
out
sbb
ret
loope
repnz
lret
ljmp
jmp
sar
repz
cld
repnz
xchg
fucomi
out
mov
lock
dec
clc
in
cmc
xor
ret
xchg
cli
mov
and
xchg
xchg
out
ret
loope
lds
shlb
xor
fiaddl
ror
or
xchg
jecxz
iret
loope
iret
aas
rcr
enter
cmp
out
rcl
aas
cmp
ljmp
xchg
adcb
lret
jmp
lret
fmulp
aam
jecxz
xchg
stc
repnz
lea
mov
cmc
repnz
cmp
sti
xor
addl
std
div
lock
aad
into
enter
icebp
stc
fcomip
jmp
std
repz
fsubr
mov
jmp
out
lea
xor
test
repnz
repz
cmp
repz
cli
enter
lret
decl
lock
xor
sarb
hlt
clc
repnz
xchg
jb
add
cmp
jmp
ret
fmul
fcom
fdiv
jne
sub
add
add
int3
jecxz
cli
in
in
mov
mul
cli
cli
cld
in
jmp
aas
iret
frndint
cli
loop
out
test
enter
into
std
out
mov
hlt
xor
vpsubusb
in
lret
clc
loopne
out
cld
test
imul
sti
filds
mov
int
out
ss
hlt
repz
xlat
xlat
out
inc
loopne
mul
lret
ljmp
aaa
in
lret
stc
aam
loopne
test
xchg
loope
fcmovnu
lret
sti
ror
repnz
ror
sar
out
cld
call
fistpll
call
test
nop
mov
stc
xor
lock
out
ljmp
loop
fadd
leave
nop
clc
loope
lret
xchg
not
aam
enter
cmp
in
sar
mul
mov
les
shl
mov
ret
ss
shr
aaa
cmp
stc
into
aam
mov
aam
xlat
mov
sti
enter
mov
lret
stc
jmp
roll
addb
jmp
cmc
out
xor
das
cmp
xor
xor
rcr
shl
adc
xlat
cmc
out
jmp
stc
mov
xchg
xchg
in
idiv
shl
fcmove
cmp
iret
out
xchg
fdivrp
cmp
into
repnz
fdiv
hlt
in
fdivrs
xchg
fldl2t
cld
cmp
enter
jmp
leave
in
test
test
loope
fcomi
aam
ret
fcmovb
test
cld
or
loopne
jmp
in
enter
idivb
rcr
xlat
test
cmp
addb
loop
out
hlt
adcb
clc
in
cmp
in
std
loopne
div
add
fdivp
fcomi
loope
loop
fiaddl
xor
not
fcmove
shl
ret
mov
cld
test
jmp
icebp
loop
jmp
fidivrl
fidivs
repnz
lds
jmp
test
aaa
xor
ss
clc
ds
out
xchg
xlat
cld
jecxz
call
xchg
aam
cmp
shr
out
aas
std
into
repz
in
adc
ret
cld
or
fucomip
fldl
out
xor
int3
int3
rolb
cmp
mov
stc
rcr
repnz
xchg
test
shrl
out
int
neg
aas
xor
test
fdivr
call
incl
std
aam
loope
clc
xor
out
repz
std
shl
cld
fcmovbe
rcl
loop
cmc
out
leave
out
ror
sub
xchg
fdiv
in
xor
aaa
cmc
enter
aad
repz
vpandn
imul
ljmp
xchg
out
jecxz
iret
sarb
xchg
xchg
mov
loop
ljmp
xor
enter
cmp
hlt
stc
ds
rol
mov
enter
cli
ret
in
std
test
out
out
cmp
repz
into
rcl
cmp
in
into
cmp
ret
sti
xchg
adcb
xchg
shl
enter
aad
repnz
lock
xor
ds
jmp
fiaddl
loop
loopne
lret
call
aam
call
fdivp
sarl
add
loope
nop
loopne
in
ljmp
lret
not
cli
sar
loopne
out
icebp
sbb
in
filds
loop
nop
xor
xor
lret
sarl
loopne
ds
hlt
rcl
aam
cli
in
loope
ret
sub
rcl
in
fidivrl
lret
aad
sar
int3
cld
cmc
xchg
mul
int3
out
jecxz
xchg
loop
cld
shl
loopne
fdivr
test
ret
or
jmp
lock
repnz
cmc
out
leave
fmul
iret
cli
std
not
hlt
cmp
fnstsw
int3
fdivr
leave
xchg
fucomp
mov
jecxz
xlat
out
fstp
sarb
out
rcr
stc
rcl
sti
hlt
hlt
aad
jmp
xor
out
cmp
cmp
leave
cli
fdiv
sub
imul
les
orl
ror
repz
aad
cmc
fidivrl
cmp
hlt
cli
cmp
addb
shl
in
jmp
lock
int
lret
div
xor
enter
aad
sar
loopne
int
addl
xchg
fcmove
xor
xchg
in
lock
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
repnz
icebp
in
lock
sti
repz
stc
fmul
jmp
xchg
ljmp
repz
icebp
ror
ret
loope
fincstp
loopne
clc
cmp
mov
loopne
in
rcr
out
lret
aam
in
cld
std
mov
test
mov
aad
xor
ret
xor
aam
lret
sbb
cmp
test
ror
repnz
jecxz
adc
int3
leave
aad
jmp
lret
fdivrp
loopne
repz
neg
enter
test
jecxz
loopne
out
out
ret
ret
fdiv
fdiv
ds
out
fsub
fidivrs
xlat
in
lret
loope
test
lret
rclb
out
cmp
fcomi
clc
int3
int
repnz
std
fisttpll
call
call
cli
clc
cld
ror
cmp
in
shl
rolb
in
out
cmp
icebp
loope
xlat
out
xor
in
xlat
cli
fistpll
aas
aad
fucomi
fmulp
iret
shl
xchg
call
ss
fcmovne
repz
addb
lret
mov
clc
leave
iret
ss
icebp
cld
cli
lret
loope
aaa
iret
or
loope
out
cmp
repz
cli
in
mul
ljmp
lock
fucom
jecxz
enter
mov
loope
int3
loopne
out
stc
shr
cmp
call
addl
test
lea
mov
notb
hlt
aaa
repnz
xor
addl
fmulp
loope
std
xchg
hlt
mov
shr
xor
cmc
in
sar
jmp
into
ds
adc
rol
fucomi
mov
into
nop
in
lock
out
aam
roll
aam
std
fcmovnbe
int3
loopne
int3
fsubr
leave
cmc
adcb
ss
cmp
lret
fistpll
idiv
jecxz
fildl
cli
out
test
repz
ljmp
cld
cli
repnz
mov
fisttps
xchg
ss
cmp
fdiv
lret
fdivr
lret
xorl
leave
loopne
xlat
and
cld
mov
in
out
jecxz
cs
cmp
rcr
cmp
aad
int3
ljmp
xchg
ljmp
repz
shl
lret
out
fcomi
in
addl
iret
in
loopne
icebp
ror
jmp
jmp
cmp
xlat
rcr
mov
idiv
rorl
cs
int
out
repnz
cmp
fmulp
xor
out
test
shl
out
sti
jmp
jmp
sub
aad
ret
lret
in
cli
fucomip
lock
rcr
not
mul
int
mov
jmp
fisttpll
stc
out
in
cli
loopne
iret
cmp
jmp
testl
icebp
ss
out
vpminsw
shl
testb
mov
jmp
xchg
iret
xlat
jecxz
aam
icebp
out
xor
cmp
sti
movl
out
loop
jmp
cmc
test
xor
cli
stc
addl
int
jecxz
ror
in
jecxz
xor
lret
clc
lret
aas
loope
aad
out
hlt
neg
out
mov
int
xchg
shlb
loop
jmp
fsubr
incl
lock
fucom
out
test
xchg
shl
imul
icebp
xlat
aam
xor
cli
cmp
ret
fdiv
aam
loop
cli
mov
shl
fld
xor
cld
repnz
cmc
cmp
not
sar
sar
xlat
fidivrs
xchg
incb
dec
loopne
out
frndint
rol
icebp
loopne
fsubp
rcr
aad
xlat
in
fsubr
test
in
out
xor
ret
std
in
cld
iret
icebp
div
in
ret
sar
cmpl
loop
xchg
das
call
cmp
loop
fdivrp
ret
test
sti
lret
fdivr
xchg
aas
repz
in
fdiv
int3
sti
lock
cmp
f2xm1
in
jmp
cld
lock
loope
hlt
int
neg
clc
lret
in
in
xor
lock
sti
aad
jecxz
loopne
std
in
sbb
in
mov
lret
stc
shll
lret
cmpl
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
mov
repnz
add
lock
loope
xlat
cli
leave
jmp
mov
shr
cmc
clc
lret
cmp
cmp
lret
hlt
cmp
cmp
call
ds
flds
in
mov
rcl
lret
sar
rcl
repz
loop
jmp
mov
hlt
xchg
xchg
sub
sti
out
jmp
cmp
incb
loope
xchg
aam
iret
shll
cld
std
stc
fdivrl
cli
ror
cmp
aas
ffree
shl
cmc
xchg
sti
in
call
leave
loop
rcl
in
cmp
std
lock
vpslld
cmp
in
and
shlb
hlt
lret
fsubr
sti
neg
shl
xor
clc
repnz
mov
les
mov
out
hlt
jmp
ljmp
aaa
aad
div
repz
fadd
ret
test
fiadds
xor
aaa
int3
aad
clc
cmpb
cli
rcl
xor
in
lret
frstpm(287
in
repnz
lds
xor
xor
fistpll
aas
repnz
aam
clc
lret
xchg
xchg
xchg
fidivrl
call
in
xor
cmp
test
test
ljmp
hlt
cmc
fcmovnbe
shl
fsub
stc
rcr
rcl
cld
fadd
enter
mov
test
out
repnz
xor
lock
shl
aaa
xor
cmp
cmp
clc
leave
test
loop
loop
iret
in
sub
fninit
lock
fstpt
xor
std
into
xlat
xlat
xchg
xlat
out
leave
test
repz
ror
rcr
cmp
cmc
out
ljmp
out
test
out
fsubp
out
xor
out
in
aad
cmp
ss
cmp
fsubp
icebp
call
ret
leave
lds
test
xchg
das
ror
leave
repnz
aad
ds
loope
icebp
imul
jmp
enter
fmulp
fucomip
hlt
in
test
std
lock
sti
loopne
call
stc
jmp
in
in
mov
lock
cmp
xor
rcl
and
cmp
mov
rcr
cld
out
in
xchg
repnz
ret
cmp
repz
iret
int3
aas
xlat
out
fld
xchg
ffreep
orb
repz
xor
clc
jmp
cmp
stc
jecxz
fdivrs
addl
cmc
mov
leave
decb
fldcw
xor
fidivrl
sar
aam
test
sti
aad
fsubr
ljmp
in
xchg
xor
fidivrl
ror
out
int3
stc
aad
neg
aam
jecxz
mov
in
ljmp
aam
xor
cmp
xor
fdivp
leave
fninit
ds
fldl2t
ret
in
hlt
ret
cli
jmp
mov
shlb
int
fdivr
fucompp
iret
not
aas
not
aas
out
loopne
cld
mov
loop
movb
clc
std
test
repz
fnstsw
rol
sti
orb
aam
jecxz
loop
call
out
clc
std
loope
fiaddl
clc
cld
fcmovne
out
mov
aad
cmc
jmp
cmp
sti
cmc
cli
stc
aad
in
into
sar
clc
ljmp
fcomi
cld
jmp
vpsadbw
cmp
into
cmp
cmp
std
out
aad
clc
fdivr
in
call
rol
cld
neg
iret
out
aas
cld
fxtract
sar
stc
shl
mov
cmc
cld
lds
sub
loop
out
cmp
xor
hlt
clc
leave
out
into
into
cli
fst
adc
mov
std
or
mov
aam
loope
stc
shr
clc
aad
cmp
int
fsubp
sti
leave
jmp
out
mov
shl
shl
fidivl
int3
cld
enter
shr
sarb
mov
lret
int3
nop
into
rolb
xor
jmp
iret
rcr
fldl
xchg
jmp
movb
lock
int
fstpt
icebp
lock
repz
in
in
mov
fldl
sub
cmp
out
aam
cmp
cli
ds
fdivr
or
out
decb
ret
enter
fxch
lock
loop
in
shl
rcl
stc
in
mov
lock
sub
loop
mul
jmp
std
lret
loop
jmp
incl
aad
test
cld
mov
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
mov
testl
jle
repnz
ljmp
sarl
xlat
cmp
cmp
shl
ret
lret
xlat
in
out
loopne
icebp
and
jmp
lret
out
cmp
aad
test
sti
orb
mov
mov
add
out
in
xor
in
xor
jmp
sar
xchg
testb
clc
mov
loope
mov
aam
cld
cmc
aam
loop
fxch
adc
repz
aad
int
enter
iret
icebp
out
iret
fmul
ss
jmp
cmp
lock
sti
repnz
aam
mov
jecxz
fucom
loopne
cmc
xor
xor
into
lret
shr
repz
aam
fadds
clc
out
jmp
loop
xchg
xchg
ffreep
lret
cld
enter
cmpl
mov
into
shr
incl
fsub
icebp
std
icebp
ljmp
cli
cmp
movl
nop
mov
sub
xor
jmp
fnstsw
stc
incl
mov
cmp
jmp
orb
xor
lret
out
shl
sti
iret
fdiv
aam
sarb
in
mov
mov
in
fcoml
out
leave
in
in
in
cmp
stc
int
aad
idiv
fiadds
sub
loop
leave
int3
fsqrt
in
fcmovu
lock
repz
cmp
cmp
out
aas
loope
xchg
into
iret
lret
ss
cli
cmp
repz
test
stc
in
fisttpl
clc
int
hlt
lret
out
sarl
test
cmp
out
int
std
xchg
int
rolb
shl
xor
icebp
iret
clc
jecxz
ljmp
fucomi
loope
fimuls
iret
xor
loop
jmp
out
rol
cli
sub
aad
cmp
xchg
not
ss
into
cmpb
xchg
jecxz
mov
fsubp
int3
ror
jmp
ljmp
enter
out
icebp
ret
cli
fiadds
loop
mov
sub
mov
ljmp
shl
clc
iret
xor
fsub
clc
loope
std
leave
bnd
test
jecxz
enter
jecxz
aaa
jecxz
hlt
in
std
fidivs
fcomp
shl
icebp
loop
cmpb
stc
test
into
lret
repz
cmp
in
das
out
cmp
clc
in
clc
repnz
clc
cmp
aam
test
xchg
iret
mov
icebp
in
lret
ds
cmp
stc
lds
mov
stc
int
out
cmc
xchg
out
iret
cmc
xlat
lret
div
into
aam
rcl
ret
mov
sar
in
out
or
in
xchg
jecxz
xchg
aad
cmc
ror
ds
cmp
rol
loope
std
sub
std
in
in
cmc
std
mov
mul
xor
rcr
int3
fadd
sarb
xor
lock
in
cld
jmp
cld
in
rcl
loopne
call
cmc
hlt
idiv
cmp
stc
in
cmpl
addl
iret
call
jmp
ret
int3
das
stc
int
sti
sar
out
ffreep
leave
cmp
vpaddsb
xchg
test
call
icebp
sti
sar
call
in
rcl
sti
xchg
fiadds
cmp
lds
xor
fcmovne
aad
fdiv
repnz
in
incb
xor
loope
xchg
xor
in
in
cmp
cmp
cmp
xor
aad
fdiv
ds
out
out
out
fcomi
fldl
call
into
cmpb
sbb
ret
test
loopne
sub
int3
jecxz
repz
in
jmp
fcmovne
cmp
cmpb
rcr
fldl
rcr
call
stc
rcl
in
aad
hlt
jecxz
idiv
faddp
fadds
out
nop
fsub
fadd
hlt
loope
sub
cmp
hlt
in
xlat
jmp
xlat
cld
ret
cmc
leave
ljmp
cld
ljmp
fcmovnbe
fscale
std
int3
ds
sar
cmp
cmp
mov
into
jecxz
out
out
fidivs
not
ror
incl
xchg
in
cli
ljmp
mov
clc
leave
jmp
cld
cmp
repnz
and
out
mov
call
shl
xchg
mov
xor
call
inc
fsubs
test
add
int3
rcl
ret
fldl
cmc
insb
push
add
fcmove
into
in
std
iret
ret
mov
lret
xlat
int3
call
sbb
xor
ret
aaa
aaa
leave
int3
iret
sbb
hlt
loope
rolb
fimuls
jecxz
xchg
lds
out
into
ss
icebp
aad
shl
not
sar
mov
leave
xchg
mov
in
out
in
sti
int
stc
icebp
push
inc
std
repnz
fsubr
in
int
loopne
in
iret
loop
ljmp
icebp
aaa
sarl
rcr
loopne
icebp
loopne
stc
int3
cld
cld
in
jecxz
fisttpll
test
ss
push
fucomp
stc
clc
ljmp
icebp
lret
into
in
jmp
xlat
cmp
ret
fcmovb
mov
fmull
in
xor
cli
sti
shl
out
int3
cld
leave
lock
hlt
icebp
out
sbb
jmp
fnstsw
mov
shl
shlb
fsubr
std
sarl
loope
icebp
roll
imul
into
loope
cld
out
call
idiv
int
loope
ret
incl
filds
loopne
iret
aam
out
hlt
int3
into
cld
aad
fsub
fucomip
fcmovnbe
lds
sub
call
xchg
call
ss
call
int3
icebp
std
loope
cmp
call
movl
ss
adc
icebp
shl
cmp
sti
out
int3
jmp
ror
repnz
out
xor
ss
idivl
cmp
flds
ljmp
lock
loope
and
das
repnz
fprem
cmp
leave
repz
ror
xchg
hlt
ljmp
in
adcb
in
div
call
ljmp
std
aad
leave
xchg
shr
mov
fprem1
aad
aaa
sub
addl
loop
lret
out
fimuls
in
std
in
cmc
add
test
xchg
fcmovu
testl
cmc
xor
lret
cmp
rol
fdivp
flds
jmp
in
incb
mov
repnz
into
idivl
sti
repz
cmp
fnstenv
aas
call
xchg
sar
enter
inc
idivl
out
stc
shr
std
out
aam
cli
rolb
leave
cli
aad
out
cld
icebp
mov
nop
call
clc
leave
aam
cmp
rcl
xchg
sar
in
aad
xlat
fcmove
adc
in
ss
jecxz
into
ret
out
leave
xchg
in
adcb
icebp
ret
cmp
aas
cmp
ror
sti
rcr
cmp
lret
fucomp
add
jecxz
mov
fldln2
out
int
cmp
call
in
stc
testb
rclb
shl
sar
lret
cmp
int3
cmp
rolb
xchg
mov
mov
cmp
ljmp
in
ret
mov
std
inc
xchg
into
in
call
xor
xor
fsubr
int3
xor
cli
aad
in
in
cmp
out
out
enter
leave
sti
shl
in
hlt
fcom
lret
aaa
fcomi
iret
jmp
neg
push
stc
fcomip
sar
mov
stc
addb
ror
in
xor
neg
stc
push
sar
cld
testl
and
repz
ss
in
in
fucom
sar
fnop
xchg
jmp
mov
mov
xchg
lret
ljmp
ror
icebp
leave
call
stc
testl
clc
xchg
enter
aad
jmp
xor
sbb
addb
sub
icebp
adc
in
xor
imul
loope
repz
iret
shl
mov
fldl
shlb
iret
cmp
std
repnz
icebp
fstp
cmp
mov
f2xm1
mov
lock
lret
call
iret
cmp
rol
into
fnclex
orl
jmp
test
sub
xor
ss
lret
cmc
stc
icebp
ljmp
clc
cld
fadd
vpaddd
aad
lret
sarb
fcmovnu
ds
loop
stc
xchg
test
inc
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
push
clc
lret
add
add
int3
jmp
ror
out
ss
out
fcmovnb
int
out
fistpll
int
addl
enter
cmc
xchg
out
cmc
cmp
aaa
jmp
int3
rol
cmc
out
enter
jmp
out
call
call
shl
rcl
fcmovnb
fadd
fdivr
jmp
in
loop
out
mov
cmc
out
test
jecxz
aad
fcomi
out
addl
xchg
std
ficoms
lock
lret
aad
leave
out
fprem
and
addl
jmp
int
cmc
hlt
ror
aad
jmp
cmc
aad
loopne
clc
roll
jmp
adcb
shll
sti
fxch
fsin
test
repz
out
fdiv
stc
idiv
icebp
int3
faddl
jmp
ret
out
cmp
iret
lret
aad
rcl
add
shr
testb
xchg
mov
jecxz
sar
cmp
lret
lret
xlat
testl
aam
loope
fsubp
lock
xor
xor
cmp
lret
imul
neg
loope
in
inc
fcmovnu
and
call
jecxz
xchg
ret
cld
int
leave
xlat
cmp
fmul
jecxz
aam
xchg
cld
mov
nop
cmc
out
fbstp
jmp
cmc
fld
xor
call
fsub
mov
iret
mov
xchg
xor
in
cmp
aam
flds
xchg
cld
ret
into
nop
mov
mov
xlat
cli
cmp
std
das
rolb
fadd
not
movb
out
xchg
in
into
rcl
hlt
fucomi
cmp
cmp
cli
hlt
clc
in
mov
lret
fisttpll
lret
icebp
repnz
lock
imul
div
fadds
shl
nop
call
in
xor
loopne
std
jecxz
cmc
cmp
cmp
std
mov
in
xor
in
int3
cmp
not
aas
test
testb
into
lret
hlt
shr
cmc
shr
out
xor
rcr
in
stc
xchg
loop
and
lret
jmp
repnz
hlt
fucomp
ffree
fxch
loope
ret
sti
out
loope
fiaddl
icebp
cmc
sub
ss
aad
repz
fdivrs
sarl
repz
fucomp
jmp
into
repnz
xor
ret
ss
icebp
out
aas
div
into
in
test
dec
cmp
lock
in
ljmp
out
int3
out
cmc
cmc
int
ljmp
loope
sti
mov
cld
in
iret
fldl
xor
sub
into
rcl
repz
xchg
mul
xlat
in
call
cmc
loopne
lds
std
iret
hlt
lret
ds
out
shl
loope
mov
mov
loop
hlt
nop
ljmp
enter
aaa
hlt
lret
jmp
ffree
sar
loopne
fsubr
test
cld
lock
in
shl
aaa
cmp
xor
enter
fidivrs
xlat
shl
rcr
roll
std
lock
iret
sub
clc
xlat
ror
jmp
addl
in
in
loopne
iret
in
test
ret
iret
out
aaa
leave
ss
cmp
cmp
lret
jmp
into
out
fisttpl
lock
jmp
enter
rol
jecxz
in
fdivp
out
sti
leave
mov
fsubrp
roll
jmp
jmp
fnstcw
stc
fdivr
call
mov
jmp
mov
xor
fmul
in
fsubp
cmpl
ffreep
ret
loope
call
repnz
iret
xor
into
xlat
fdivrl
lock
cmc
roll
aad
jecxz
sbb
icebp
mov
in
xor
aad
clc
rcl
cld
out
cmp
shr
cmp
loopne
leave
in
lret
repnz
into
shr
call
cmp
iret
ret
out
loop
mov
and
jmp
xchg
nop
jecxz
clc
aaa
stc
xor
ljmp
int3
in
cmc
loopne
test
test
lret
incl
test
xor
out
test
ljmp
xlat
shr
sub
ljmp
xchg
repnz
into
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
mov
cs
jle
add
ljmp
shr
loop
jecxz
movl
mov
xchg
in
imul
cmp
std
xor
cmp
aas
shl
out
mov
in
mov
test
jecxz
aad
idivl
fnop
in
adc
jmp
ret
int3
dec
decb
fcomp
ret
fcomp
fmulp
in
fsubr
ss
mov
loop
in
icebp
xchg
cld
out
divb
test
out
aam
jmp
add
in
cld
dec
popl
not
aaa
leave
out
enter
aas
ds
std
rcl
ret
sti
in
ljmp
mov
aad
hlt
shl
ss
cmp
rolb
loope
fucom
ftst
jmp
repnz
xor
and
and
cli
ljmp
in
aad
jecxz
out
lret
std
lret
in
xor
jmp
stc
stc
and
fmul
rcll
jmp
leave
into
ds
cmp
idivl
test
loopne
shr
into
in
aam
lock
ljmp
ret
in
aam
std
jmp
loop
call
incb
hlt
xor
lock
rcl
jmp
lock
rol
call
int3
int
repz
out
xlat
aam
int
xlat
stc
dec
cmp
adc
fdivr
sarl
aam
loop
test
fcmovnu
in
test
repnz
xor
ljmp
lret
in
xor
clc
call
out
in
in
xchg
loop
test
fidivrl
xlat
out
in
sar
in
filds
int3
call
call
lret
bnd
fcomi
fdivr
idiv
cmp
std
mov
decl
sti
and
sti
ror
ror
in
loopne
incl
aam
std
in
sti
mov
out
out
nop
xchg
mov
jmp
cmp
std
cmp
icebp
ss
rcr
out
jmp
mov
stc
fistl
xor
in
sub
ds
imul
test
sti
fisttpl
enter
xchg
hlt
cld
in
shl
int
sti
fsubr
cmp
std
stc
jecxz
loopne,pt
loop
fadds
repz
ret
xor
cli
shl
in
xlat
xor
shl
aas
iret
jmp
loope
cld
rolb
shl
jmp
xlat
jmp
repnz
cmp
roll
in
out
in
lret
xchg
in
das
jmp
xor
call
cmp
shl
sti
lret
mov
fimull
loopne
aam
jmp
aad
cld
clc
fcmovbe
rol
in
inc
sbb
mov
fmulp
clc
call
nop
nop
out
cs
lret
aaa
loopne
loope
test
ret
call
lea
fucomip
rcl
shll
lret
int
rcr
shl
repnz
loope
aad
ret
call
addl
in
fmul
cmp
fsubp
ror
and
out
aas
rcl
xchg
mov
lret
mov
ror
cmp
xlat
imul
f2xm1
fprem1
fcmovbe
cmp
mov
xchg
mov
shl
out
mov
call
in
hlt
fcmovb
hlt
enter
loopne
into
rol
testb
int
jmp
lock
out
lret
enter
int3
jmp
jmp
fdiv
incb
out
enter
in
ljmp
cmc
sub
fnstcw
aas
les
fimull
mov
aam
rol
cli
fcmove
in
rcl
cld
std
sar
inc
fiaddl
out
cli
in
leave
roll
aad
in
cmp
cmp
test
cmc
xlat
ljmp
iret
and
imul
ret
xor
icebp
fsubr
cmp
xlat
rcr
in
sti
movl
ret
enter
xor
lock
in
cld
sub
in
out
xchg
xor
shlb
aaa
les
hlt
leave
cld
aaa
adc
aam
idiv
fcom
ret
flds
in
xchg
iret
ret
xor
aaa
cmp
std
int
not
cmp
shl
in
int
out
xor
xor
ret
leave
sarb
ss
ljmp
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
nop
and
jle
add
test
leave
in
test
mov
jecxz
int
in
xor
dec
fstpt
jecxz
addl
out
call
jmp
fsub
cmp
imul
rcr
cmp
sar
rcr
fucomip
fcomp
leave
std
enter
mov
aad
out
cmp
out
int3
aas
ror
loopne
aam
sar
in
mov
into
in
cmp
in
int
loope
xor
lret
shl
not
idivl
test
lret
lds
xor
aam
out
lret
leave
sti
cmp
rol
mov
xrelease
mov
ljmp
lret
aad
repnz
hlt
fstpt
sti
aad
jmp
aas
testl
loopne
out
clc
cmp
jmp
clc
cmc
loopne
ds
or
stc
fisttpl
in
vpminsw
shl
not
clc
loop
imul
rcl
rcr
out
sbb
in
jmp
ret
leave
lock
iret
cmp
loop
out
shl
test
clc
lret
nop
fninit
xchg
into
out
cmc
das
repz
in
std
jmp
aas
cmp
rcl
loopne
ljmp
mov
loop
aam
repnz
cmp
fcomi
int3
cmp
std
aam
in
jecxz
decl
int3
out
lret
ljmp
rcl
into
int3
into
out
aad
jecxz
mov
mov
roll
in
les
shr
aaa
loope
rol
vpsrlq
xchg
xchg
std
rcl
aaa
into
shll
in
iret
out
jmp
std
cli
vpmullw
adc
in
std
mov
ror
leave
aad
enter
cli
ret
test
shl
in
add
jmp
mov
jmp
ss
mov
cli
sar
repz
ljmp
lret
hlt
int3
lret
cmp
out
lock
leave
test
enter
test
jmp
call
xor
cmp
not
in
cmp
sbb
in
adcb
ret
ljmp
stc
cmp
jmp
fsub
aas
rol
test
int3
rclb
call
cli
ror
ss
sti
loop
loop
neg
imul
loopne
jecxz
test
lock
shl
shr
xor
int3
cmp
xlat
into
sti
std
loopne
cmp
shl
mov
into
in
in
ftst
shll
lret
cld
xor
or
sub
fcom
mov
fildl
xor
in
call
int
lds
aad
mov
in
xchg
sub
cs
div
out
fsubr
repz
shl
in
in
aam
enter
out
aad
aad
icebp
fucomi
jmp
ds
into
xchg
testl
out
call
repz
fnstcw
sarb
in
fcmovb
ror
lock
ret
flds
int3
fmulp
jmp
jmp
in
xor
sti
rcl
cli
cmp
sti
or
bnd
jmp
test
jmp
loope
jmp
rcl
shl
xlat
rcl
call
int
sbb
idivl
idiv
fcmovnb
jecxz
cli
xchg
out
xor
in
sti
repz
aas
into
into
lock
cli
ret
loopne
xlat
mov
fildl
lret
xor
xor
shl
out
ds
ret
addb
xchg
mov
xor
xor
out
xlat
stc
aad
cmp
aas
rcl
lds
sti
test
repnz
lock
jmp
cmc
out
int3
out
lret
xlat
in
lock
into
fistpll
rol
cli
in
out
fsincos
lock
mov
repnz
loope
icebp
sti
sti
rol
cmp
cmp
int
div
xlat
loop,pt
out
and
loope
repnz
in
in
idivl
loopne
fxtract
in
cli
testb
loope
mov
ret
lret
in
out
sub
jmp
iret
jmp
out
xchg
ret
mov
icebp
mov
aad
into
fld
out
jmp
out
loop
fsubp
std
hlt
hlt
ret
jmp
dec
mov
ret
int3
xor
lret
lret
aad
adc
cmc
iret
ljmp
add
scas
jle
add
js
inc
add
inc
add
cli
jmp
int
ret
aam
fstp
fstl
fmull
movsl
std
popf
pushf
mov
jle
add
test
aaa
call
aam
jmp
lock
rcl
in
cli
cld
jmp
fsub
cli
out
in
lock
xlat
in
xor
repz
fcmovbe
lret
int3
ffree
ror
cli
test
push
icebp
loopne
in
in
call
aaa
cmp
xchg
std
test
test
incl
in
out
cmc
jmp
jmp
cli
ror
rol
rol
call
out
mov
repz
in
shlb
xlat
out
int
repz
stc
ret
cmc
mov
decb
in
lret
xchg
in
lea
ror
jmp
cmp
hlt
fcmove
rcr
fst
aam
lret
in
jmp
in
out
int3
aaa
lret
test
incl
ds
std
icebp
div
loope
in
out
lea
call
cmp
lock
faddl
fdivrp
fldpi
fldln2
jmp
icebp
adc
int
in
cmp
sti
fucomi
jmp
shl
fnsetpm(287
rol
fsubrp
sub
mov
in
sub
jmp
repz
ljmp
lret
fucomip
orb
xchg
aad
cmp
into
fcmovnu
xor
int
fsub
cli
rorb
in
fisttpll
ror
clc
cli
lret
cmp
stc
loop
xlat
cli
cmp
enter
cld
jmp
repz
ss
out
imul
fcomp
lock
icebp
cmp
fmul
jmp
xchg
iret
shr
loop
call
int3
leave
cmp
aas
push
ljmp
repnz
mov
xor
enter
int
cmc
int3
sti
lret
into
cld
rol
ret
testb
mov
shl
rcr
das
rcr
out
xor
icebp
in
rcr
stc
jecxz
out
fcmovnu
lret
xchg
ret
cmp
cmc
fnstsw
cmp
into
sbb
aad
cli
out
jmp
icebp
jecxz
repnz
sarb
ret
jmp
addb
fxam
cmp
call
shl
in
xlat
rcr
les
idiv
and
lret
out
xchg
xorb
ror
fnstcw
iret
cmpl
test
call
in
out
xchg
out
call
hlt
fcmove
xor
xor
in
iret
into
shl
bnd
loop
fcmovb
faddl
jmp
lret
ljmp
enter
sar
cmp
std
loope
mov
mov
repz
cmp
out
aas
cmp
loopne
loopne
in
adc
out
leave
mov
mov
loopne
jmp
icebp
ljmp
loop
fadd
fucomi
loop
enter
call
cli
lock
shr
ss
icebp
rcr
repz
jecxz
cli
xchg
icebp
cli
iret
loope
test
hlt
neg
in
sti
cmp
out
sti
ds
ret
aas
jmp
adc
fyl2xp1
out
loope
repnz
aaa
in
cli
jmp
xor
fdivp
jecxz
in
out
mov
mov
leave
xchg
in
sar
in
call
lds
cmp
hlt
idiv
cli
roll
rcr
fstp
fdiv
jmp
mov
jecxz
xchg
ss
hlt
cmc
cmp
loop
clc
cmp
xchg
in
int3
cli
in
loope
in
fiadds
imul
lret
xor
repz
loop
repz
incb
incb
out
into
int
cmp
rcr
repz
clc
mov
mov
adc
out
in
nop
out
sub
call
repz
cmc
ret
cmp
fildl
mov
fldpi
hlt
out
ss
xlat
shl
fldln2
in
test
div
repz
mov
hlt
jmp
call
lret
enter
jmp
jecxz
fdivp
loope
leave
jmp
out
idiv
mov
mov
sub
sar
in
iret
sar
fcmovnu
std
fdivp
mul
mul
fucomip
shr
shl
sti
cld
mov
ss
jmp
fsubr
jmp
lock
sar
ljmp
icebp
iret
hlt
call
fucomp
icebp
fdiv
hlt
cmp
out
cli
std
addl
nop
loopne
icebp
xor
ljmp
clc
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
testb
add
add
xlat
cld
ret
hlt
aad
call
out
lock
loopne
loope
enter
stc
ljmp
sbb
iret
jecxz
cli
call
icebp
int3
sub
out
das
out
icebp
into
test
repz
iret
fistpll
aas
call
lret
or
and
hlt
lock
cld
icebp
out
in
loope
sar
loopne
ret
repz
loopne
cli
mov
sti
xchg
shl
xor
idivb
icebp
out
out
cmp
icebp
ret
out
add
jmp
jmp
jmp
cmp
fcmovbe
loopne
test
repnz
mov
out
xchg
aam
fmul
vpaddd
aas
cmp
repz
ds
xchg
mov
repz
lret
cmp
out
xor
in
aad
in
xchg
sti
ffreep
stc
ret
jecxz
sub
xchg
ljmp
int3
cld
fcomp
fucomi
test
mov
jmp
fsubr
or
out
out
xchg
loopne
out
fcmovnbe
fnstsw
stc
lret
cmp
rcr
cmp
jmp
in
test
leave
mov
xchg
aam
shr
cmp
test
leave
int
xor
int3
in
aad
in
jmp
addb
rolb
loop
fnstcw
iret
jmp
out
test
mov
jmp
int
sti
call
cmp
xor
cs
int
xlat
int3
ret
sti
aam
cli
movl
and
lret
out
icebp
stc
ret
ss
icebp
fxam
std
ret
out
lock
call
or
test
ljmp
loopne
clc
rorb
out
out
in
fildl
rol
cld
cli
enter
lret
incl
cld
jmp
jecxz
xchg
int3
out
lock
ss
fmul
loop
in
stc
sar
in
out
cmc
test
std
xchg
lret
ss
fidivrs
sub
ret
loopne
ffree
hlt
shl
divb
jmp
cld
cli
neg
jmp
fdiv
aaa
cli
repnz
out
xchg
std
iret
aam
in
in
icebp
out
rcr
stc
fcmovnbe
in
std
jmp
out
xchg
fucomip
mov
jmp
std
loope
in
loopne
int3
lret
ljmp
incl
inc
fxtract
in
enter
fldl
xor
jmp
addb
testl
loopne
fsubr
loope
hlt
cmc
ror
das
aad
fcmovne
cmp
cmc
in
std
add
test
in
fmulp
xchg
mov
leave
ret
fidivl
call
int3
into
jecxz
idiv
add
testb
in
loop
in
repnz
out
sar
jmp
rcl
repz
out
fcmovnu
fsubr
call
jmp
xchg
out
xor
cmc
call
repz
cmp
cmp
icebp
xchg
loopne
hlt
jecxz
ret
jmp
jmp
aas
sti
loopne
loopne
mov
lret
int3
in
leave
cmc
test
out
repz
hlt
in
cli
shl
aaa
xor
fsub
shl
aam
mov
stc
and
xchg
iret
mov
ror
ljmp
repz
jmp
vpaddsb
test
loope
repz
jmp
cmp
in
rcr
rol
fildl
mov
test
ffreep
out
in
lret
repnz
fst
ds
jmp
int3
out
in
cmc
repz
out
jmp
repnz
aaa
cmp
aam
fdivrp
hlt
loop
cli
repz
in
cli
lock
mov
loope,pn
ror
in
sarl
sbb
vpsllw
jmp
cmp
mov
adc
rol
aad
shl
int3
lock
ds
out
rol
lret
aas
jecxz
add
icebp
icebp
jmp
repz
cmp
fsubr
clc
iret
test
in
roll
sti
in
orb
fcom
ljmp
xlat
sub
fiaddl
out
fucomi
lret
iret
jecxz
aad
clc
repz
in
aad
rcr
ret
rcr
sar
call
enter
sti
std
ror
xor
sub
icebp
aam
rcr
into
ljmp
not
jecxz
out
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
leave
bnd
add
add
fcomip
shr
xchg
test
repz
rcl
cmp
fnstsw
imul
ret
out
mov
sti
xchg
icebp
aam
rcl
std
lock
leave
aam
loop
mul
lds
icebp
jmp
out
loopne
out
std
fmull
sub
iret
cld
cli
leave
shl
xor
iret
in
out
in
ds
enter
lret
out
test
out
cmp
xor
cmp
clc
lock
in
mov
mul
mov
xlat
fcmovbe
out
loop
mov
int3
lret
vpsubusb
cli
xor
test
rol
loope
leave
ljmp
loopne
ljmp
fdivl
lret
loope
ret
cli
rcr
in
cmc
call
clc
mov
in
out
sub
cmp
ljmp
cld
fdivr
iret
loop
in
loop
clc
aaa
out
ljmp
xor
in
fdivrp
xchg
inc
dec
into
cmc
out
ss
fnstenv
xor
ss
fcmovnb
in
fidivrs
and
fisttpll
lret
xor
out
rcl
call
lock
idiv
lret
movl
jmp
shl
div
shl
aam
cmp
in
lock
fcmovnbe
mov
mov
sti
mov
fucom
test
repz
aam
cmc
shl
ljmp
sarb
enter
jmp
jmp
mov
xor
xlat
shlb
cli
stc
cli
cmp
loope
out
cld
lret
out
lret
xchg
jecxz
ss
in
ljmp
shl
fdecstp
sti
mov
xchg
fdivp
lds
xor
fnstenv
repnz
xlat
leave
icebp
shr
rcl
shl
decl
cli
xchg
fst
sub
out
sar
fidivrs
cmp
iret
std
icebp
shr
jmp
loopne
iret
aam
int3
aam
out
into
cmp
repz
icebp
cmp
out
into
fsub
jmp
ret
loope
mov
xchg
int
orb
lret
jmp
fdivrp
out
flds
stc
in
test
xor
dec
rol
ljmp
lret
ret
shl
cmp
ffreep
mov
ljmp
in
sub
repz
cmp
not
fcomip
call
test
jecxz
out
flds
aam
xor
in
in
in
std
sti
jmp
dec
loope
inc
jmp
in
stc
stc
jecxz
lret
into
rol
in
lret
hlt
ljmp
aas
inc
jecxz
jecxz
int3
lock
fists
repz
aad
lock
cmp
aad
testl
neg
idiv
call
repnz
orb
mov
aaa
iret
xor
fdiv
das
cmp
xlat
ret
fcomi
and
call
nop
xchg
in
shlb
in
call
int
out
int3
test
and
into
repz
test
xor
ljmp
flds
ret
test
xchg
int3
jmp
lock
ljmp
std
sti
rcr
aam
fdivrp
clc
aam
aad
out
fdivrp
xchg
aaa
lret
fdivp
xlat
sti
sti
xor
fnsetpm(287
add
mov
in
test
in
shr
out
jecxz
stc
out
fmul
out
xor
loop
cld
fcmove
shl
sti
enter
rclb
out
repnz
bnd
idiv
shr
fstpt
sar
clc
dec
out
jecxz
into
mov
xchg
rcl
icebp
in
into
sarb
fcmovnbe
xchg
clc
cmc
std
out
sti
mov
popl
in
not
aad
lock
fdivrl
out
icebp
rol
ret
jmp
icebp
and
int
shlb
int
cmp
lock
sti
fcmovnb
cmpl
mov
xchg
int
call
int
fildl
cmp
sti
in
mov
aam
loopne
xor
hlt
aaa
into
icebp
repz
lock
fldl
fsubp
fxch
int3
icebp
aad
shr
in
les
idivb
aam
hlt
aaa
rolb
test
loop
in
out
and
out
aaa
rcl
in
enter
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
cli
stc
loope
lret
rcr
fsubp
int3
cli
fildl
mov
divl
aad
enter
lock
ret
cli
loope
call
jecxz
jecxz
loopne
in
leave
ret
out
into
into
int
cld
std
hlt
sar
ret
clc
test
lret
or
xchg
lea
in
int3
xor
cld
out
into
push
ror
cmc
ljmp
in
popl
shr
iret
icebp
cld
rcr
icebp
shr
int3
loop
repnz
fldl
lret
std
in
nop
jmp
iret
aad
sti
int3
into
ret
lds
faddl
lret
xchg
xchg
in
icebp
cmc
call
loopne
xor
cmp
jecxz
fsub
call
xchg
fldl
imul
in
int
out
xor
cmp
std
xor
fcmovnb
fucompp
cli
out
xchg
mov
aaa
shlb
jmp
out
sti
in
add
cli
repz
out
int3
dec
jmp
int
fcomp
hlt
repz
out
sarb
shl
cmp
fsubr
mov
in
jecxz
loop
ror
dec
repnz
cmc
xor
icebp
lret
cmp
sbb
shl
sarl
leave
test
lret
sti
loopne
or
loopne
cmp
out
repnz
cmp
xlat
out
fdivrp
ret
repnz
mov
mov
mov
xchg
lret
sub
xor
int3
leave
rol
into
ds
flds
fisttps
loope
ss
sar
cmp
clc
iret
in
fcompp
clc
in
jmp
mov
in
xor
xor
cli
ljmp
fcomip
out
mov
ljmp
lret
jmp
fsubr
repnz
fucomi
xor
int3
aam
lock
xchg
fcomp
xchg
mov
aad
jmp
xlat
fsubr
std
clc
ds
std
repz
in
lock
loopne
cli
leave
cld
shl
xor
xor
fsqrt
cmp
cmp
loop
shl
aas
hlt
in
cli
fucomip
fdivp
fucomi
hlt
mov
imul
jmp
lret
int
jecxz
loope
in
out
leave
fsubp
loope
incb
cmp
iret
enter
aad
fadd
int3
aaa
rcr
clc
fcompp
movb
iret
jmp
icebp
out
in
enter
in
leave
out
in
aam
jecxz
fsub
rolb
clc
movb
int3
repnz
lret
xor
lret
idiv
test
enter
mov
repnz
aad
in
repz
iret
cmp
rol
leave
cmp
repz
lret
imul
call
jmp
les
stc
xlat
stc
shr
repz
std
ljmp
test
int
ret
cmp
cmp
fucomp
neg
addl
out
repz
jecxz
out
into
xor
std
sarl
cmc
fnstcw
ret
ror
leave
mov
std
nop
loopne
xchg
xchg
xor
cmp
in
cmp
clc
rcl
adc
addl
in
or
xor
aam
sarl
stc
cli
fst
cli
cmc
std
fucomi
ds
mov
lret
cld
leave
mov
xor
leave
sti
rcl
in
hlt
out
loope
xlat
lock
ret
xlat
faddl
mov
into
in
out
fistl
sarb
xor
cmp
ljmp
push
xlat
stc
cmc
shl
fisttpl
out
in
jmp
ss
shl
fdiv
fldl
fcmovb
enter
mov
out
xchg
das
ljmp
shr
cmp
lret
aad
cld
lock
idiv
cld
fcmovu
fucomip
int
icebp
mul
out
xor
ljmp
xor
fst
fcmovnu
mov
fsubp
int
xchg
out
shl
shlb
xor
cmp
cmp
cmp
stc
hlt
cli
xlat
cli
out
ret
int3
stc
out
lret
repnz
cs
call
ljmp
out
testl
int
lret
nop
jmp
lock
repz
inc
iret
in
adc
lret
mov
fsubr
mov
out
loop
xor
jmp
icebp
fidivrl
xor
xlat
out
repnz
in
repz
iret
fstpt
shr
cli
jecxz
sarb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
adc
add
mov
mov
jmp
out
shl
call
cmp
rcr
lock
loop
int
fstl
aaa
xlat
in
lret
rcr
dec
out
loope
loop
xlat
cli
aad
call
enter
div
repz
iret
repnz
cmp
sarl
test
fdivr
in
fisttpll
aad
cmp
out
fxch
out
in
repnz
rolb
fcmovu
xlat
fdivr
fdivr
test
mov
in
icebp
xor
xor
clc
xor
loopne
cmp
aad
stc
rol
repz
loope
lock
fcmovne
int
jmp
bnd
fsubrp
fcmovne
test
in
movb
fcom
cli
lret
ss
aam
loope
sarl
cmp
imul
cli
mov
into
out
mov
lock
mov
in
lret
icebp
cmp
out
xlat
imul
loope
xchg
shr
std
mov
test
leave
call
aaa
out
aam
enter
std
loop
hlt
ds
cli
aad
loop
hlt
neg
out
stc
orb
idivb
leave
std
ss
inc
loope
into
and
roll
fldl
fadd
repnz
divl
ljmp
iret
loopne
in
fisttps
int
loopne
shl
xor
lret
shlb
xor
xlat
cmp
fcmovbe
addb
enter
xchg
xor
repnz
enter
stc
out
rcr
fsub
icebp
cmc
in
addl
fadd
jmp
jecxz
sti
in
imul
sti
fadd
addl
in
iret
rcl
call
repz
out
fmul
aam
rolb
fsubp
testb
test
fprem1
int3
int
fdivrl
in
addl
xlat
ret
movb
loop
lock
iret
lret
cmp
cmp
sti
lret
in
loope
in
cld
in
int3
into
mov
into
std
jmp
out
xor
leave
std
xor
shl
repz
loopne
cli
mov
or
fsubp
int
loopne
aam
xlat
in
stc
icebp
ljmp
adc
icebp
fsincos
fisttpl
enter
out
ror
repnz
std
aam
sti
xlat
ret
cld
testl
sub
test
ror
add
out
call
jmp
and
call
xlat
call
sti
cld
out
fcmovnb
cmc
ret
cli
in
mov
fistl
fdivr
rol
lret
in
fstp
hlt
xlat
shl
jecxz
fprem1
shr
in
loopne
test
std
loop
xchg
in
aad
loop
cmc
xor
std
fistpll
inc
out
in
mov
sar
int3
fsubp
xchg
lea
hlt
call
jmp
aad
in
shl
cmp
stc
aas
sti
nop
jmp
in
out
aaa
leave
xor
cmc
cmp
cmc
repz
fidivrl
xchg
fpatan
jecxz
aam
sub
icebp
lret
xchg
mov
aam
bnd
xlat
lret
jecxz
aam
cmp
hlt
out
int
clc
inc
dec
fcomp
ret
out
orl
ror
imul
fnstsw
xor
out
repz
in
lret
iret
xchg
xchg
mov
leave
ror
cmp
cmp
jmp
fcom
jmp
lret
std
iret
fdivp
fldl
rcr
repnz
xor
repz
stc
cmp
les
jmp
xchg
xchg
aaa
das
loope
iret
fmul
cli
aad
in
repz
aad
sarb
aam
out
aam
out
addb
shr
fdivs
icebp
cmp
cmp
sub
out
cld
vpmullw
mov
test
xchg
cmc
cs
loope
leave
aam
rcl
fucomip
shr
cli
stc
fcomi
repz
aad
mov
cmc
in
mov
loopne
out
cmp
aad
shr
cli
xor
idivb
ror
fmulp
std
in
fcmovne
icebp
ljmp
in
rcr
cmp
out
std
fcom
test
addl
jecxz
enter
in
icebp
into
xor
mov
and
fmulp
decl
ss
jecxz
stc
xor
cli
rol
icebp
repz
mov
ljmp
lds
add
aam
rcr
fstp
fnstsw
fmull
gs
mov
add
add
jecxz
clc
rcl
fmul
rcr
cld
aas
cmp
iret
aam
lds
cli
lret
jecxz
orl
in
lret
aam
rcr
std
call
fadds
mov
in
int
mov
xor
hlt
fcmove
cmp
cmp
loop
aad
stc
in
out
fmuls
orl
fcom
clc
sarl
sar
xlat
loop
ret
clc
repnz
in
mov
fiadds
xchg
loop
fldlg2
leave
out
aam
cmc
inc
stc
clc
cmp
ret
mul
test
loope
mov
out
icebp
in
std
neg
lock
sarl
xlat
fld
cmc
imul
imul
incb
out
loop
clc
jmp
fcmovnbe
out
cld
cmp
icebp
cmp
xlat
enter
out
and
mov
stc
xlat
jmp
sti
ss
shr
shr
int
jecxz
jecxz
aas
in
in
int
loope
jmp
xor
iret
jecxz
cmp
int3
cmp
stc
ret
lock
ret
stc
mov
cmp
xchg
jmp
xchg
shrb
clc
hlt
fidivrs
aas
jecxz
loopne
jecxz
jmp
out
jecxz
out
fisttps
out
std
ds
xlat
sbb
roll
mov
leave
in
in
or
int
ret
xor
hlt
aaa
aam
loop
ss
stc
rol
mov
loope
mov
out
fcom
loop
icebp
cli
aam
ss
sar
cli
out
into
fisttpl
lret
mov
enter
or
ret
int
cmc
ljmp
iret
in
in
cmc
mov
cmp
out
out
xor
out
xlat
cs
idivl
iret
xor
std
enter
mov
test
fmulp
aad
jmp
out
int3
aam
ljmp
movb
iret
xchg
fdiv
jmp
repz
xor
enter
cmc
rol
ffree
fmul
shl
les
enter
std
int3
out
xchg
in
stc
lds
enter
add
sti
ret
in
call
mov
xchg
hlt
aam
imul
into
push
aaa
cmp
repz
addb
loope
out
jmp
shlb
test
rcr
into
jmp
rcr
add
out
in
jecxz
lds
lea
enter
xlat
xor
cmp
cld
cmc
icebp
in
rcr
repz
fsub
loop
stc
out
out
int
shl
xor
rcr
fstp
xlat
aam
test
flds
fdiv
fmull
test
ret
out
in
iret
cmp
ss
out
rorl
int
faddl
xor
call
out
sti
in
lock
ret
sti
fcomi
xchg
jecxz
repz
jmp
xor
ljmp
loopne
not
fldl
xchg
add
shl
mov
xor
aam
cmp
fcmovnu
in
cmpb
repnz
out
stc
lret
std
lock
test
mov
lock
ror
or
cld
sti
test
cld
loope
cli
leave
out
int3
fimuls
shl
xlat
jecxz
in
lret
ror
aad
out
hlt
not
testb
dec
loop
in
fcmovu
out
out
repz
ss
ss
ss
cli
iret
cmp
repz
and
jmp
lock
iret
les
xor
adc
icebp
leave
lret
ret
out
int3
nop
test
fcom
hlt
int3
icebp
cmp
xor
add
cmc
leave
cld
orl
out
mov
iret
in
jmp
clc
idivb
neg
cmc
enter
leave
int
fildl
lret
cli
jmp
out
lret
fdivr
repnz
cmp
repz
fcomip
ljmp
in
not
out
out
in
in
cmp
rcr
rcl
test
sti
loop
fcmovne
xchg
in
xchg
lock
jmp
fldl2e
sarl
rcr
enter
in
lock
fsub
repnz
sarl
fcmovnbe
fdivl
cmp
cmp
xchg
out
jmp
ljmp
into
shlb
bnd
loopne
in
sti
fmul
call
repz
ret
in
std
cmp
shr
aad
xchg
add
add
or
add
lds
add
leave
aam
aad
aam
sbb
stos
stos
add
add
cmp
in
std
shr
loope
fxam
fsqrt
enter
loope
shrb
aam
stc
cld
sub
fdiv
fucomip
loop
int3
in
mov
ret
nop
orb
xor
sti
leave
imul
cmpb
fst
aam
les
lret
in
fcmovu
nop
loop
ljmp
lret
lret
lret
out
cmp
lret
xlat
hlt
in
test
hlt
mov
ljmp
fmul
fyl2x
aad
shl
adc
adc
in
jmp
test
or
cli
cld
fdivrl
cmc
cli
rol
in
stc
clc
rol
div
xlat
xchg
out
jmp
iret
adc
out
cmc
cmp
enter
xlat
iret
add
aam
fadd
std
out
ret
lret
lock
cmp
out
cmp
imul
iret
iret
aas
jecxz
idiv
lock
aad
mov
jecxz
xchg
in
mov
hlt
int
lret
test
stc
leave
out
cmp
rol
std
test
repz
clc
fisttps
cld
sub
adc
into
ljmp
in
cmp
sar
jecxz
incl
vpmullw
repz
sti
enter
lret
sti
xlat
in
mul
imul
out
ret
jmp
in
adcl
repz
repz
out
loopne
rcl
shl
in
jmp
cli
nop
mov
loope
fmulp
sub
icebp
aad
jmp
cmp
out
jecxz
cld
repz
clc
cmp
repnz
filds
ret
repnz
jmp
cmp
ret
test
in
out
test
int3
shrb
out
out
sti
ds
out
int3
cmp
fcmovne
fsubr
cli
stc
out
rorb
aad
xor
clc
lret
aam
shl
loop
iret
std
out
fcmove
loopne
fildl
xchg
xor
loop
repnz
repz
dec
ror
cld
shl
icebp
icebp
rolb
decb
call
repnz
fdivr
cmp
stc
lock
lock
fcmovnu
xchg
mov
into
mov
out
shl
shr
neg
aam
lock
cmp
xlat
repz
lock
fimull
in
test
jecxz
rcr
hlt
in
shl
sbb
fstp
test
mov
mov
iret
std
int3
ffreep
mov
test
in
lret
ss
cmp
loope
lret
faddp
iret
ffree
loopne
fucomp
testl
in
jecxz
xor
in
not
stc
fdivr
mul
rolb
out
jmp
cld
xchg
out
out
loopne
iret
cmp
jmp
fdivrl
div
test
out
call
fsubrp
xchg
xchg
into
neg
fsub
fdivl
int3
into
iret
out
iret
addb
and
lock
cld
loop
jmp
out
xor
in
icebp
sti
sti
int3
loopne
lock
xlat
fistpll
ret
imul
mov
fmul
cld
mov
xchg
ficoms
enter
iret
fcomi
xor
loopne
cld
into
shr
call
into
jmp
jmp
addl
loop
lock
call
int
fcomp
jecxz
test
loop
sti
rcl
aad
in
std
loopne
std
mov
jmp
out
incb
fyl2x
aas
filds
call
out
aad
repnz
repz
iret
in
fldl
enter
mov
xchg
in
cmp
xor
ljmp
cmp
in
stc
adc
test
loope
stc
loop
enter
repnz
hlt
rol
jmp
call
out
std
in
mov
lret
test
repz
out
shr
rcr
cmp
in
enter
iret
cmp
ret
fcmovnu
fsubr
test
out
out
roll
int
cs
into
fcomi
hlt
test
in
fiadds
shr
icebp
xor
int
incl
imul
test
in
shl
repz
imul
imul
cmp
int
sar
hlt
in
test
fxch
aad
loop
ljmp
mov
das
leave
jecxz
test
cmp
into
out
aad
xchg
out
incb
iret
xor
clc
ror
ljmp
cmc
out
call
add
mov
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
rorl
xlat
scas
add
add
nop
xchg
in
orb
in
in
rcl
aam
leave
into
flds
mov
jmp
neg
loop
lret
aad
loop
aam
ret
fcmovne
movb
jecxz
fcoml
in
out
out
cmp
xlat
sar
stc
sti
out
fucomip
lret
leave
xchg
roll
leave
ror
shl
fcmovnbe
out
lret
or
jecxz
add
aad
ror
mov
xorl
into
out
int3
in
xor
out
lret
cmp
ds
testb
neg
mov
lock
std
int
cs
xor
lret
jmp
int
jmp
iret
call
in
ffree
repnz
fucomp
out
repz
lock
int
rcl
loope
lock
fdivp
out
lds
xchg
out
fimuls
int
into
cmc
lret
sti
int3
ret
ret
xlat
mul
enter
out
loopne
jmp
or
nop
les
in
in
sar
out
cmc
out
aad
int3
fadds
roll
in
in
popl
in
int
fcos
cmp
ret
in
les
and
mov
fxch
cld
mov
xchg
ret
ror
repnz
faddl
loope
loope
cli
sbb
lret
xlat
nop
lock
jecxz
xchg
aas
hlt
int
shl
fdiv
leave
loopne
cmp
fdivr
xor
add
int3
in
xchg
mov
icebp
aaa
shll
fidivrs
xor
fdivr
cld
adc
xchg
in
aam
test
imul
out
fucomip
loope
enter
aaa
lret
fidivs
cmp
not
aad
mov
lea
mov
enter
fcmovbe
bnd
rcr
ret
loopne
lret
into
nop
lock
mov
clc
jmp
aad
in
out
div
cld
fstp
loop
fdiv
fldlg2
cli
cld
cld
ljmp
xor
cs
stc
ljmp
repz
xor
rclb
in
call
cmp
aas
cmc
test
jecxz
mov
lret
lret
jmp
iret
aad
aaa
ss
out
out
jmp
in
jecxz
out
jmp
enter
lret
mov
cmc
aaa
das
ret
lret
xlat
clc
cmp
aaa
incl
jecxz
lret
nop
xchg
xor
shl
sti
cld
cmp
rcr
fiadds
xlat
faddl
in
out
ret
cmp
iret
fdiv
xlat
lret
sar
clc
in
out
ljmp
lock
mov
sti
jmp
enter
ss
cmp
ljmp
or
hlt
out
ss
fidivl
ljmp
xor
test
mul
jmp
in
out
in
xchg
xor
ss
in
cmp
repz
adc
ljmp
mov
xchg
out
xor
jmp
ds
fiadds
loop
ffreep
idiv
sbb
xchg
addb
enter
cmp
aas
int3
std
aas
ljmp
fldl
jmp
ss
rcr
cld
out
in
aaa
cmp
cld
loop
jmp
fcom
mov
out
into
cmc
into
in
cs
repz
aas
ds
shl
test
lret
nop
mov
stc
sarb
idiv
cmp
in
iret
rcl
or
clc
stc
aad
int
lret
rcl
jmp
leave
xor
cmp
div
ret
out
loope
movb
orl
leave
ss
jmp
sti
out
jmp
out
loop
out
in
xchg
iret
call
cmp
xor
iret
aad
lock
loope
mov
hlt
out
mov
out
stc
movl
loope
fcomp
cld
loopne
xchg
test
cmc
into
lock
lock
shl
ret
out
sbb
hlt
mov
test
sbb
rorb
idivb
jecxz
out
repz
sti
out
sti
fidivrs
shr
in
fstp
int
int3
loopne
xchg
addl
fadd
loopne
aad
iret
stc
shr
out
xor
ret
fmulp
icebp
sub
ret
fcmovne
mov
mov
jmp
rcl
ret
fucomp
insb
fstps
negl
add
jle
jle
fucomp
aas
jmp
cli
xchg
mov
loopne
fadds
mov
aad
ret
aad
cmp
int3
cld
ds
cld
aam
add
in
lret
out
in
loopne
xchg
repz
ror
out
lret
std
shl
aam
loop
inc
shl
fildl
iret
addb
xor
ljmp
fldz
aas
test
movb
sbb
loop
ror
cmp
ljmp
shl
loopne
aad
stc
out
fst
ret
in
test
lret
xchg
fisttps
lret
int
into
aad
out
clc
int
std
call
or
test
test
shr
xor
xlat
lret
xlat
filds
loope
mov
mov
enter
mov
sub
sub
lret
call
sarb
fildl
subl
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
