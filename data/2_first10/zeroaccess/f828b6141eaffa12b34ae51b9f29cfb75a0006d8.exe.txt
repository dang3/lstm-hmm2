push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
sub
dec
and
ljmp
mov
insb
inc
xchg
xchg
add
inc
dec
shll
dec
mov
sar
cmp
popw
scas
daa
fcompl
ret
push
xchg
adc
mov
lcall
xchg
pop
fcompl
xchg
scas
out
out
pushf
dec
int3
fstps
fucompp
scas
mov
or
xchg
ret
sbb
rcrb
inc
lea
jecxz
mov
leave
xor
mov
cltd
xchg
pushf
sub
push
push
mov
mov
adc
loop
push
icebp
ja
add
xchg
mov
xor
jbe
cmp
fwait
popf
insb
cmc
ss
mov
sub
sbb
shrb
jnp
idiv
inc
jl
fstl
call
daa
outsb
inc
mov
sub
mov
jle
or
cli
inc
push
jp
jg
movsl
repnz
push
out
fisubl
inc
jl
inc
nop
icebp
xor
out
or
inc
adc
xorl
rol
jecxz
inc
pop
je
push
bound
cmp
xchg
xchg
scas
aas
cmc
in
pop
or
fadd
sbb
jmp
adc
sti
insb
cltd
das
mov
cmp
xchg
cli
jo
mov
xor
insb
pop
xchg
out
std
push
cmpsb
pop
arpl
or
aas
mov
pop
sub
xor
imul
popa
mov
cmp
iret
test
fdivs
neg
sub
mov
or
mov
aas
and
xor
sbb
sahf
cltd
cmp
aam
mov
out
mov
jle
mov
dec
loop
mov
pop
lods
mov
adc
jle
mov
xchg
dec
push
and
inc
inc
bound
addr16
nop
fwait
mov
mov
jecxz
hlt
push
leave
clc
rorl
loop
ds
push
repnz
fstpl
pop
bound
stos
scas
sub
jg
fidivrs
cmp
clc
mov
cmp
mov
sahf
pushf
insb
sbb
outsl
xchg
add
mov
push
mov
add
and
outsl
mulb
push
push
mov
add
jnp
dec
lds
jne
sbb
iret
mov
xchg
in
test
mov
jne
pop
gs
cmpsb
push
adc
or
jnp
or
jns
cmp
sub
mov
stos
stos
pop
aad
loop
push
ljmp
xor
fstl
xchg
push
frstor
rcr
and
or
stos
insb
loope
mov
adcb
js
sub
repnz
fnsetpm(287
stos
aas
and
mov
stc
mov
mov
cmp
add
and
fsubr
mov
xchg
mov
insl
xor
lret
cmp
fisubs
or
pop
sarb
popa
loope
xchg
ja
add
and
sti
loope
gs
and
popf
xchg
mov
fs
btsl
dec
dec
pop
push
in
sbb
out
dec
repnz
insl
jmp
dec
mov
sbb
sbb
cmp
sbb
cltd
cmp
mov
outsb
cmp
inc
cli
cmp
stos
or
pop
lea
imul
xor
loopne
xlat
mov
dec
lds
sub
ror
cld
mov
insl
mov
and
ret
push
out
inc
inc
fcmovu
pop
in
sbb
aam
dec
daa
mov
inc
pop
scas
es
inc
rcr
mov
and
mov
inc
jg
mov
mov
sbb
divl
gs
and
mov
jle
mov
jecxz
cmpsl
sbb
xlat
iret
xor
sbb
loopne
leave
mov
inc
test
xchg
mov
fldl
leave
jle
xor
sbb
jmp
das
xor
jne
rcll
in
mov
add
inc
mov
push
inc
cmp
loopne
push
mov
pop
xchg
fadds
mov
and
sbb
test
cmp
jg
jle
lds
mov
call
cmp
icebp
cld
dec
lea
hlt
cmp
xor
imul
lcall
mov
and
mov
xchg
jae
push
popf
sub
lea
movsb
mov
lods
sarl
mov
sub
dec
divl
aam
pusha
pop
out
or
lods
movsb
imul
sarl
adc
loop
sbb
lea
xchg
jge
jne
test
stos
repnz
inc
pop
jbe,pt
cmc
cmp
push
add
fsubrs
push
xor
xchg
out
inc
mov
pop
sub
push
pop
lock
cmp
hlt
jge
das
jge
outsb
sbb
push
mov
lret
std
adc
test
cmp
xchg
jae
int3
mov
mov
jg
pop
sahf
pop
aas
pop
jae
push
int
xchg
lds
xchg
pusha
arpl
dec
xchg
inc
daa
mov
imul
xor
stos
mov
pop
popf
repnz
insb
jg
cmp
xchg
enter
shlb
bnd
mov
pop
jae
or
sbb
pushf
mov
in
cmp
rcl
out
xlat
lret
loopne
out
cli
mov
enter
lret
jmp
sub
jmp
mov
sub
mov
hlt
and
xchg
je
mov
jl
and
mov
pushf
int
jg
xor
and
cmc
mov
cltd
mov
clc
sbb
sbb
fsubrs
jg
leave
js
pop
pop
or
mov
cld
mov
out
dec
jbe
pop
popf
call
xchg
addr16
pop
movsb
into
lcall
jne
rclb
adc
in
stc
faddl
loope
sbb
or
and
popa
push
popa
pop
and
les
mov
and
dec
sbb
mov
hlt
or
cmp
lahf
inc
or
adcl
clc
mov
aaa
daa
push
jo,pn
xor
push
inc
cmp
aad
mov
jmp
lret
mov
jle
orb
lret
popa
jne
jns
sbb
gs
lahf
cmp
push
add
pop
xchg
push
out
cli
dec
sahf
lret
pusha
lcall
and
leave
dec
inc
imulb
and
jne
imul
or
dec
out
das
fwait
lcall
xorb
lods
ss
mov
mov
clc
cmp
adc
in
stos
push
rclb
pushf
cld
or
movsl
push
xchg
mov
mov
sub
sub
adc
fs
dec
decl
cli
xor
xchg
lock
jp
cmpsl
pop
mov
pop
dec
std
mov
fsubrs
in
cmp
pop
cmpsb
dec
adc
mov
aaa
jno
mov
out
adc
mov
inc
pusha
lret
leave
sarb
jmp
sub
mov
jecxz
imul
inc
dec
iret
repz
xchg
dec
sub
jecxz
mov
out
dec
scas
jle
into
adc
rol
push
movsl
ss
and
xor
cmp
lods
xchg
fs
push
pop
cmp
pop
rcl
sti
xchg
and
les
inc
xchg
cld
lods
or
xchg
or
pop
aad
inc
push
dec
ja
jno
lret
push
push
mov
or
xchg
sub
sbb
fsts
or
sub
dec
xor
add
xchg
mov
mov
imul
stos
dec
jge
std
jecxz
adc
ja
jae
jge
ljmp
mov
rcll
andb
cltd
outsl
jnp
cmp
shr
xchg
sbb
cmc
inc
push
xchg
inc
inc
in
jle
sub
jnp
popa
push
and
jmp
sbb
addr16
mov
cwtl
add
pusha
mov
pop
pop
xor
or
imul
movsb
push
mov
clc
test
pop
and
push
push
cmp
adc
pop
cmc
out
movsl
xchg
ror
pop
push
ret
fdivr
lds
ds
add
mov
jecxz
mov
xlat
and
jne
sbb
outsl
insl
mov
mov
mov
jge
movsb
int
push
sbb
insl
sbb
dec
jmp
xchg
inc
adc
js
lcall
or
push
fmulp
xchg
push
addl
mov
lret
popf
xchg
cmp
ror
fidivrs
add
xor
imul
mov
cmp
dec
sti
add
xor
bound
and
fildl
xchg
push
ds
cmpsb
dec
mov
adcl
into
pusha
pop
inc
push
sub
jno
inc
adcl
sbb
cmp
pop
jp
jge
or
push
ss
xor
mov
fnstcw
ljmp
and
adc
and
mov
adc
outsb
mov
ja
or
or
ja
stc
fimuls
mov
jmp
xor
in
imul
push
xor
les
lcall
jg
dec
sbb
stc
cli
lahf
ja
xor
push
mov
xor
lcall
mov
xor
inc
mov
cmp
jbe
imul
repnz
jg
sub
cmc
pusha
movzbl
dec
or
mov
cli
testl
cwtl
cmpb
mov
ja
cmp
jbe
fiaddl
jecxz
cwtl
pop
and
stos
adc
mov
shrb
sbb
and
lock
lret
lahf
inc
add
jg
sti
and
daa
loopne
sbb
out
push
lret
ja
mov
js
lahf
popf
jae
xor
pop
xchg
push
xchg
out
cmp
sahf
test
push
inc
jg
xor
shlb
xor
imul
adc
pop
sbb
ja
popa
das
repnz
mov
pop
xor
cmp
movsl
aaa
filds
adc
lock
add
push
push
xor
sbb
in
mov
xchg
iret
dec
cmp
mov
xlat
fistpll
rcr
popf
dec
gs
lcall
adc
enter
push
cmp
mov
adc
pop
jmp
jae
fmuls
dec
xchg
add
add
or
cmpb
outsl
jmp
xchg
loopne
dec
jge
dec
sbb
or
sbbb
jecxz
sbb
xabort
bound
stos
or
dec
push
mov
faddl
popa
push
in
cli
std
js
dec
scas
cmc
lods
inc
inc
or
add
dec
adc
in
jno
xorb
gs
mov
pop
pop
inc
repnz
xchg
mov
sub
subb
jp
mov
faddp
fistpl
in
xchg
inc
fs
lods
imul
sub
dec
mov
and
or
lock
outsb
fucomp
inc
shl
sub
adc
mov
xor
inc
xor
cld
stc
push
mov
dec
or
pusha
cmpsb
dec
addr16
add
sub
lret
pop
xor
or
lcall
xchg
mov
sbb
loopne
jecxz
pop
lea
fcomps
fwait
inc
dec
sahf
stos
cmp
cld
das
or
ds
sub
jb
sub
sbbl
sub
ss
and
dec
sbb
cs
mov
mov
leave
cmp
enter
ret
addr16
test
aam
xchg
xchg
fidivrs
mov
xchg
or
ljmp
adc
in
xor
mov
xor
push
dec
fisubl
xchg
inc
pop
addr16
cmp
mov
fstl
jle
mov
adc
lcall
inc
ds
fcmovnu
mov
adc
xchg
sbb
sbb
rclb
push
xchg
jne
and
cs
push
dec
or
shrb
xchg
mov
sahf
mov
xchg
ds
cmp
js
mov
shll
cmp
mov
aad
sti
xor
pop
fwait
test
pop
add
and
jno
dec
rcl
xchg
mov
in
call
testl
mov
inc
mov
jns
dec
arpl
mov
xchg
xchg
scas
enter
jecxz
aam
mov
es
stc
cmpsl
fsubl
sbb
and
decl
jo
pop
sub
xchg
stos
xor
in
lahf
cli
and
sahf
mov
add
fidivrs
xor
mov
mov
inc
jnp
arpl
mov
dec
es
cltd
adc
repnz
fidivrs
fisttps
shl
test
arpl
push
sarl
mov
sbb
in
and
popf
sbb
dec
mov
mov
inc
in
sub
pop
push
mov
clc
dec
mov
loop
sub
sahf
sub
in
mov
pop
push
hlt
xor
cmp
xchg
sub
dec
test
ljmp
insb
fbstp
rorb
shlb
sbb
add
les
mov
dec
xor
nopl
push
in
testb
and
push
mov
in
insl
hlt
imul
mov
frstor
into
mov
jmp
repnz
push
push
mov
jge
ret
test
push
pop
outsb
dec
aaa
mov
test
adc
cmpsl
mov
shll
pop
jo
stc
jb
out
push
lock
xchg
sbb
inc
dec
push
dec
mov
jnp
jns
fxch
fisttpl
mov
clc
movsl
or
cmp
sti
fstpt
into
xchg
sbb
int3
jns
jbe
int
fldenv
xorb
pop
mov
in
xchg
fisubl
sub
and
clc
mov
repz
ret
or
adcl
ss
stos
in
mulb
add
in
js
outsb
psrad
aam
cld
mov
loop
jne
add
dec
leave
aas
sbb
mov
rcrl
xchg
rdpmc
in
and
das
mov
xchg
jmp
sub
push
dec
sub
push
adc
jb
adc
mov
das
adc
bswap
test
lcall
mov
inc
outsb
pop
repz
dec
shlb
mov
adc
dec
push
pop
push
aam
push
dec
cmpsb
testb
xor
aas
pop
aad
inc
push
into
mov
ja
in
sub
inc
add
add
stos
mov
inc
icebp
mov
ss
push
out
mov
lods
sub
neg
push
mov
icebp
jge
jns
or
imulb
mov
insl
test
or
popf
cmc
sbb
push
enter
in
xchg
push
mov
jg
cltd
push
ljmp
push
sbb
mov
cmpsl
andb
cs
pushf
xchg
push
mov
ss
xchg
push
fdivs
hlt
es
dec
ret
jle
ljmp
adc
adc
fdivs
and
pusha
lret
xadd
stos
dec
mov
cmp
jp
cmpsl
shll
jle
pushf
xchg
hlt
xor
pop
mov
sub
cld
xor
jmp
mov
loop
movsb
repnz
cmp
aad
fsin
insl
mov
xor
aaa
sbb
xor
push
xlat
and
jp
fs
mov
pop
and
andb
jo
add
out
mov
pop
push
xorb
jl
lock
in
testl
push
dec
hlt
pop
aam
cmp
cmp
movsl
pop
out
xor
jae
mov
mov
cmpsl
mov
pusha
cmpl
mov
sub
inc
pop
add
nop
clc
mov
mov
cmp
repz
dec
xor
icebp
adc
xor
fidivl
jge
out
and
dec
cmc
push
adc
mov
add
js
popa
dec
jo
fnstsw
inc
sub
test
push
inc
xor
push
inc
mov
cld
dec
fdivl
jae
sbb
cmp
dec
mov
fcompl
xor
rorb
sub
clc
cs
mov
ret
cli
jns
scas
mov
xor
add
xchg
mov
mov
negl
adc
divl
insw
outsl
inc
pop
sbb
push
pop
pop
push
push
xor
icebp
clc
mov
xlat
push
mov
imul
loop
and
adc
jl
and
push
dec
mov
mov
enter
mov
popa
xor
jb
sar
pop
jbe
jp
fld
ds
adc
rclb
cmc
ja
out
mov
out
rorl
in
sub
push
sbb
aad
daa
jne
aaa
or
gs
rcll
mov
mov
pop
movsb
stos
int
fmull
jge
jge
dec
and
xchg
loopne
mov
lock
cmpl
ss
imul
mov
in
cmc
ljmp
xchg
inc
movnti
sti
jnp
sbb
pop
or
data16
testb
js
jge
ret
in
mov
inc
fstl
sbb
pop
scas
das
nop
xchg
mov
ljmp
cmp
ror
enter
std
xchg
push
inc
xchg
jge
xor
orl
repnz
sbbl
lods
jno
call
leave
addr16
pop
xchg
or
jecxz
cmp
enter
xchg
dec
sahf
repnz
fldt
data16
and
lret
dec
sub
mov
push
mov
mov
adc
mov
add
mov
jno
cmc
fldenv
shll
mov
adc
sub
push
pushf
bound
jl
cltd
ljmp
or
mov
jnp
les
dec
push
iret
add
cli
fbstp
mov
daa
and
fwait
jo
sbb
aad
je
fmul
or
subl
push
lret
mov
or
inc
adc
clc
inc
push
and
daa
mov
add
sbb
lods
xlat
or
inc
mov
out
ja
scas
test
xor
cwtl
inc
inc
or
dec
insb
and
mov
jbe
je
div
jle
sbb
jno
pop
test
or
mov
push
mov
outsl
push
dec
mov
movsl
sub
cli
xor
sarl
scas
add
repnz
sbb
ret
add
daa
pop
aam
out
rcll
mov
sub
push
dec
lods
sahf
pop
test
stc
jecxz
shlb
xor
es
jno
iret
es
icebp
test
dec
fnsave
inc
jo
inc
mov
mov
or
pop
add
mov
mov
mov
js
pop
dec
aas
sbb
insl
or
mov
test
xor
mov
rcr
sbb
data16
pop
mov
gs
data16
orb
xor
xchg
ret
rcll
aam
add
andb
stos
xor
mov
test
rcrl
les
mov
aas
push
xor
ja
xor
cld
clc
mov
mov
push
lds
fwait
ror
and
jle
mov
aad
adc
mov
inc
adc
dec
imull
mov
cltd
xchg
xchg
andl
mov
shlb
push
jl
imull
nop
or
jl
outsb
inc
mov
sub
lods
mov
xchg
cmp
into
call
nop
iret
xchg
sub
imul
xor
dec
pop
sahf
xor
dec
jmp
sub
sub
dec
mov
jns
xchg
cmp
lea
cmp
js
sub
mov
negl
jg
leave
or
or
inc
add
cwtl
sub
pushf
xchg
mov
in
xchg
pushf
sub
dec
mov
cmpsb
movsl
je
loope
mov
inc
cmp
and
jno
jmp
insb
jns
push
xchg
lock
push
pop
std
int3
push
sub
or
mov
xchg
data16
out
dec
sub
call
lea
push
fiaddl
cmpsl
out
sub
mov
xor
cmpl
hlt
testb
cltd
cld
jle
sbb
adc
cmp
push
lds
es
out
ficoml
push
mov
cmp
sub
cmp
dec
cld
lock
mov
test
pop
add
cmp
cmpsb
fidivrl
sbb
adc
add
mov
aaa
mov
sub
or
mov
mov
mov
div
xchg
dec
out
dec
push
push
stos
scas
adc
xchg
jbe
xor
loopne
push
push
movsl
or
loop
push
inc
mov
fsubs
sbb
arpl
or
dec
addl
iret
jecxz
clc
jns
imul
andl
add
mov
pop
push
icebp
jge
lods
jb
int
mov
fistpl
movsl
stc
gs
push
mov
lret
lods
push
std
movl
add
push
insb
dec
in
loopne
dec
adc
bound
xchg
mov
push
out
popl
and
mov
xchg
push
sbb
jle
jo
pop
ret
arpl
adc
cmpsl
xchg
sub
mov
call
mov
popf
inc
in
out
nop
enter
cmp
jns
test
sbb
loope
xor
sbb
sbb
lea
testb
stos
and
int
dec
mov
xor
pop
iret
jle
out
das
push
int3
fistpl
ret
jno
test
ret
pusha
aad
mov
xor
inc
scas
std
cmpsb
clc
dec
xchg
or
mov
fnstsw
or
sbb
and
movsb
gs
dec
adc
xor
push
sahf
xor
loop
ret
mov
ds
imul
sbb
clc
push
mov
xor
push
or
mov
sub
pop
stc
cmp
jg
push
xor
lock
pop
test
faddl
cmp
add
mov
add
scas
lods
add
push
fmuls
mov
in
lret
jb
ds
imul
ret
push
add
pop
insb
lock
pop
jmp
stc
cmp
pop
fwait
cs
imul
clc
sbb
cmpsb
add
add
pop
sbb
jo
ficomps
sbb
int
hlt
sbb
xchg
fidivl
inc
pushf
test
loopne
dec
fmull
sbb
xor
fdivrp
das
je
sub
mov
insl
lahf
xor
test
jmp
or
xor
and
nop
xchg
sub
sbb
push
cmp
push
loop
dec
mov
imul
cmc
lretw
push
ja
fidivrs
inc
mov
ljmp
pop
cmp
mov
incl
popa
subb
lock
lock
aam
dec
int
fwait
pop
imul
add
add
fucomi
push
stos
mov
push
imul
jb
fbld
mov
push
jl
jp
fiadds
jl
ds
ficompl
adc
mov
jle
mov
jmp
sarl
xor
sbb
xchg
xor
ljmp
cld
cmp
dec
into
xlat
or
out
pop
aam
jo
mov
sub
mov
xchg
and
es
sub
xchg
addr16
ss
inc
pop
movsb
ret
stc
and
dec
mov
xlat
imul
jmp
push
fidivrs
outsl
xor
and
ljmp
mov
add
and
adc
dec
xchg
xchg
into
cltd
call
outsl
out
ljmp
add
push
test
sbb
jge
int
mov
mov
pushf
xor
fmuls
aad
stc
cwtl
xor
lock
das
clc
mov
lods
xchg
push
pushf
push
xchg
pop
jbe
adcl
loope
test
mov
lock
fistpl
sub
inc
or
sub
jbe
icebp
and
in
fsts
add
sbb
das
mov
icebp
lods
push
mov
rorb
mov
jg
bound
mov
mov
pusha
outsb
xchg
xor
inc
pushf
sub
xor
std
xor
lret
fwait
mov
lcall
mov
and
mov
out
mov
cmp
or
arpl
jge
mov
and
daa
cmp
ja
leave
stos
mov
push
sbb
adc
gs
int3
mov
or
scas
lds
ds
leave
push
push
fisttpl
cmp
push
add
and
mov
aad
sbb
and
sbb
mov
fstps
jnp
add
je
outsl
jge
rcl
sahf
outsb
fstl
mov
movsl
popa
mov
cmpsl
mov
push
lret
or
leave
sub
lret
inc
adc
lock
test
lds
jecxz
into
xchg
movb
mov
rorl
mov
jno
jmp
stos
or
test
je
repnz
mov
sbb
sub
adc
and
jne
repz
sbb
mov
jmp
imul
jmp
jne
jnp
push
jmp
jg
in
inc
xchg
stos
stc
jge
scas
jecxz
xchg
lret
inc
pop
scas
pop
xchg
jmp
inc
int
adc
ja
fnstsw
ret
jo
or
push
frstor
jg
cmp
xchg
aad
mov
js
mov
test
imul
dec
mov
pushf
daa
fidivs
nop
pop
lret
into
pop
sub
mov
imul
pop
lods
push
xchg
fadd
xchg
pop
lods
fadds
jns
cmp
movsl
pop
jne
push
ret
jnp
scas
cmp
mov
xchg
mov
cwtl
push
testl
mov
mov
mov
lret
xor
push
repz
cmpsb
rcrl
cld
add
aad
xchg
and
fists
test
dec
jnp
iret
jge
lea
jne
cmp
arpl
pop
adc
mov
pop
daa
dec
mov
sarb
dec
jb
shrl
in
lods
mov
insl
popf
mov
sbb
int3
xchg
jp
fimull
pushf
cmpsl
pushf
mov
frstor
adc
adc
sbb
ficomps
cli
test
dec
jnp
call
xor
mov
rorl
in
popa
or
dec
mov
insl
and
testb
push
mov
add
roll
pop
fwait
je
push
stos
sarb
clc
jecxz
rcrl
pop
and
xor
push
lret
ret
mov
and
mov
sbb
cmp
and
xorl
sbb
xor
cmp
bnd
push
shll
idivb
inc
mov
push
lea
lret
mov
fsts
xor
sub
jbe
mov
fs
int3
jae
adc
inc
lret
inc
in
adc
mov
mov
shl
dec
push
pop
jge
dec
cmc
push
push
clc
adc
push
enter
scas
out
xlat
mov
sar
fimuls
xor
ret
or
divb
mov
inc
inc
fimull
icebp
xchg
loope
cld
das
sbb
aam
xchg
add
adc
movsb
lret
std
data16
pushf
out
xchg
fs
mov
inc
lret
sbb
cmp
nop
out
cltd
xchg
mov
fdivp
mov
ret
inc
or
sbb
jne
pop
mov
jne
js
lahf
orb
inc
push
mov
lret
rcl
xor
adc
mov
scas
clc
fs
xchg
cld
xlat
mov
loope
xor
pop
mov
leave
add
scas
das
cmp
xchg
push
inc
scas
pop
jle
mov
cmp
dec
mov
pop
aas
inc
xor
jbe
jns
mov
loope
shl
in
mov
cs
mov
add
int3
jb
dec
mov
les
cli
jmp
xchg
xchg
add
daa
jg
in
pop
xchg
inc
cmp
jb
fadds
pop
pushl
mov
fnstenv
adc
data16
test
mov
imul
inc
inc
sbb
dec
das
add
jne
cmp
stc
test
arpl
adc
cmp
sbb
int3
cmp
stc
std
aad
or
adcl
mov
inc
adc
imul
lahf
adc
push
jns
ret
xchg
insb
fcmovbe
test
call
iret
pushf
psadbw
les
mov
lds
fcomps
jmp
xor
aas
sub
adc
cmp
xchg
xor
aaa
jmp
mov
lcall
pop
aas
adc
out
or
gs
mov
rorl
int
cmp
sub
dec
out
jg
movlps
push
xchg
loop
xchg
cmp
inc
pop
ret
mov
movsb
outsb
add
jae
cld
and
cwtl
jecxz
xchg
nop
add
jl
mov
in
ja
fwait
daa
loop
leave
dec
inc
lods
sub
repnz
loop
fs
loop
dec
js
adc
sbb
vorps
imul
sbbb
or
push
mov
push
loop
sbb
xchg
scas
inc
xchg
popa
jle
daa
lcall
mov
mov
in
inc
rolb
pop
or
add
push
sar
xor
add
loope
inc
cvtpi2ps
push
test
pusha
push
sti
imul
mov
pushf
cmc
ret
sahf
mov
aaa
lods
pop
dec
jecxz
push
clc
int
lea
jp
fwait
cwtl
push
out
add
push
jae
test
mov
rcll
adc
add
sbb
push
test
sbb
pop
push
lret
rorl
mov
mov
cli
outsl
in
test
dec
mov
xor
je
in
push
sar
push
dec
jmp
xorb
push
jns
adc
popf
jb
ds
dec
and
push
sbb
leave
out
mov
in
mov
xchg
xor
call
out
cmpsb
es
mov
mov
cmp
nop
jmp
rolb
jge
lcall
mov
test
mulb
xchg
dec
jp
xor
pushf
out
jbe
xchg
mov
loop
repz
fwait
movsb
or
jnp
xchg
dec
cmp
adc
rclb
es
push
mov
mov
mov
jno
and
movl
pop
mov
push
bound
jmp
or
dec
cmp
cmpsl
sub
cmp
subb
mov
lret
scas
add
sbb
cmp
jl
inc
sub
push
and
mov
test
push
xor
pop
mov
push
add
adc
mov
shlb
out
add
cmp
out
or
inc
mov
rorb
jb
icebp
and
add
lods
dec
add
and
lock
cmpsb
fidivs
push
jg
push
push
sub
addr16
push
lret
shlb
enter
ret
mov
imul
lahf
fisubl
sub
aam
cmp
popa
or
mov
xchg
and
cs
lcall
insb
push
jl
mov
jg
test
sbb
lea
xchg
repz
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
xchg
in
test
pop
jp
or
jp
in
jne
orb
or
jmp
dec
dec
inc
mov
mov
lret
idivl
sahf
mov
dec
xchg
and
dec
repnz
stos
icebp
adc
hlt
cltd
femms
add
xchg
pop
xchg
into
adc
pop
mov
xchg
mov
stos
mov
loopne
xchg
mov
mov
jno
jb
and
negb
sub
jecxz
inc
inc
call
pushf
or
push
fsub
pop
push
jecxz
jb
ret
aam
mov
es
imul
push
push
mov
adc
mov
mov
mov
popa
fcomps
pop
fimuls
rolb
jo
pusha
fldenv
std
nop
repnz
and
push
and
push
ret
push
dec
pop
jp
notb
popa
sbb
call
movsl
aam
sub
mov
sbb
sbb
mov
add
iret
push
xor
mov
pop
insl
push
cld
std
or
ljmp
clc
xlat
jnp
pop
push
pop
push
inc
lea
out
jge
push
jno,pt
xor
xor
dec
xchg
or
cmpsl
insl
sbb
int
in
jmp
icebp
pop
sbb
fldt
movsl
adc
dec
out
jg
push
ret
xor
xor
lock
dec
adc
lret
in
out
shr
push
ljmp
sti
movsl
mov
cwtl
js
cmp
or
dec
iret
faddl
in
add
fstpl
or
sti
or
int3
mov
add
add
adcb
xor
inc
jno
push
shl
xorl
idiv
cmp
cwtl
jno
fisubl
pushl
adc
dec
test
pop
fiaddl
out
lea
or
mov
adc
ffree
loopne
push
pop
jl
xchg
int3
xorl
jl
sbb
cli
inc
or
test
movsb
mov
lret
subl
mov
out
lret
dec
scas
inc
hlt
icebp
dec
sbb
sbb
mov
shlb
dec
nop
jecxz
dec
jo
out
push
sahf
xchg
addr16
or
mov
push
dec
fcomps
outsl
leave
divl
ds
iret
int3
sahf
fbld
pop
call
lcall
jmp
xchg
hlt
push
ljmp
pusha
std
lret
mov
inc
repnz
out
xor
and
cli
daa
ret
stos
out
push
mov
xor
or
pop
mov
ficomps
pusha
gs
push
addr16
and
mov
mov
pop
notl
fists
test
pop
jae
add
push
push
scas
lds
scas
jmp
push
and
and
sub
notl
dec
lcall
jmp
mov
or
cli
push
cwtl
and
mov
mov
std
add
fisttpll
mov
cli
mov
sbb
mov
dec
fwait
js
inc
jns
inc
or
sub
push
mov
testb
xor
add
loop
cmp
push
ljmp
pop
mov
or
aad
inc
push
push
pop
mov
aad
loopne
cld
xor
mov
out
iret
mov
aam
movsb
gs
cmp
fldt
out
jae
aaa
and
add
push
pushf
dec
shll
adc
sbb
fs
jl
inc
fcmovnbe
cmc
sbb
jecxz
fnstsw
in
mov
cmp
fdivs
cmp
xchg
add
out
arpl
jnp
dec
shlb
mov
dec
add
cmp
inc
pop
xchg
pop
inc
mov
jl
mov
insb
inc
fnstcw
mov
js
jae
adc
add
icebp
subb
dec
jg
push
jbe
mov
mov
mulb
fstpl
mov
stos
mov
in
cmpsl
test
aad
sarl
out
scas
jecxz
test
int
jp
gs
mov
dec
stos
sub
jle
in
pop
mov
daa
mov
scas
lea
dec
mov
xchg
leave
imul
fcmovu
xor
xchg
and
repz
add
test
adc
pop
cwtl
jl
adc
ja
sar
lcall
ljmp
jp
cli
mov
out
lcall
xchg
cmpsb
repz
sbb
pusha
push
sbb
cmp
inc
mov
cwtl
xor
lods
add
mov
xor
cmp
mov
xor
or
push
lea
push
sub
stc
jne
mov
cltd
pop
je
ljmp
js
xchg
inc
sbb
dec
adc
std
scas
cld
and
mov
pop
push
ror
dec
and
mov
jb
lret
mov
cmp
adc
enter
mov
jmp
mov
ret
int
js
les
out
aam
pop
ds
lods
adc
mov
sbb
in
mov
fs
mov
push
dec
xor
lods
xchg
sbb
cmp
and
imul
push
xor
aaa
and
std
mov
leave
push
dec
in
mov
call
xchg
xor
out
jmp
xor
in
adc
push
outsl
out
dec
inc
inc
pop
sahf
std
xchg
iret
add
shll
adc
jle
cld
lret
push
fiadds
ljmp
nop
cmp
fchs
adc
addb
stos
sbb
outsb
jne
cs
mov
xor
add
xchg
dec
sbbl
or
rclb
repz
pop
adc
xchg
dec
inc
std
xor
pop
jle
mov
es
insb
mov
sarb
out
data16
test
fbld
int
cltd
out
adc
lret
inc
jne
fsubl
xchg
iret
and
push
sbb
out
pop
in
mov
cmp
adc
push
sub
loopne
xor
jo
nop
push
mov
and
outsl
inc
mov
dec
std
faddp
sub
add
out
incb
pop
lahf
stos
das
scas
popa
lret
jle
push
jg
jb
dec
and
jbe
addr16
test
lret
stos
dec
lret
xor
or
pop
dec
movsl
dec
pop
arpl
mov
fdivrs
mov
pop
sbb
pusha
cmp
push
push
adc
ret
cli
mov
inc
or
aad
mov
popf
or
out
stc
aam
and
out
lret
sbb
out
enter
je
sub
imul
xchg
inc
imul
sti
xlat
and
mov
shl
adc
or
out
sbb
cs
fidivl
in
shlb
cmc
aaa
xor
dec
stos
fdivs
xor
sbb
cmp
jb
adc
adc
mov
lds
push
inc
mov
je
movsl
lcall
fisttps
int3
pusha
and
data16
or
out
sbb
pop
pushl
daa
ja
insl
insl
xchg
insb
pop
sbb
adc
inc
outsl
push
push
mov
lret
fwait
cmpsl
les
lahf
std
shrb
or
adc
jbe
jns
divl
and
xor
shlb
mov
mov
inc
mov
push
inc
sub
mov
pop
and
mov
mov
jae
test
or
dec
into
cmc
repz
xchg
cltd
sbb
mov
mov
push
jp
pop
sbb
leave
inc
iret
xchg
cltd
je
or
ds
push
xor
movsb
dec
decl
into
add
and
mov
inc
xchg
shrl
mov
outsb
dec
adc
inc
mov
mov
movsb
test
pop
xchg
mov
test
ror
ja
fists
notb
js
jne
xor
pop
sbb
inc
ja
mov
aaa
push
mov
add
mov
mov
mov
mov
rcrl
mov
aam
lcall
cbtw
push
ljmp
push
insl
jmp
jmp
lods
fmuls
push
scas
fistpl
hlt
cmpsl
cs
sub
prefetchw
or
and
xchg
loope,pt
addr16
mov
movsl
xor
pop
push
inc
add
mov
jae
xchg
ficoms
das
or
xchg
lds
out
imul
adc
add
and
lock
out
ljmp
xor
in
inc
cmp
mov
loopne
loop
mov
jmp
sub
out
out
cmp
subl
adcl
test
dec
je
inc
xchg
adc
sub
scas
stos
insb
xchg
ss
insl
shlb
mov
cwtl
imul
pop
into
test
call
lods
mov
jecxz
insb
lods
sarl
sahf
jbe
jb
jbe
repz
clc
sbb
mov
out
and
sub
jecxz
test
ljmp
fcompl
xchg
push
mov
jns
dec
test
cwtl
insb
xchg
aas
sbb
sub
lahf
inc
out
cmc
jns
ret
xor
inc
clc
cltd
xchg
mov
jo
pushf
int3
or
lock
mov
cmp
add
sub
mov
dec
or
jmp
outsl
dec
adc
lds
inc
std
das
insb
aaa
add
cmp
daa
fadds
push
mov
push
mov
add
ret
xor
add
cmp
je
test
lret
fs
shll
mov
xchg
icebp
scas
cwtl
in
arpl
lock
mov
call
xor
add
add
insl
ja
sti
sub
adc
mov
and
xchg
adc
fwait
cs
pushfw
add
sbb
mov
fidivl
inc
pop
lods
sub
call
mov
sbb
mov
pop
popa
dec
jne
btr
repz
jle
daa
xchg
push
cmp
add
inc
jle
lret
mov
test
lods
push
pop
out
das
and
faddp
inc
fcoms
mov
jno
outsl
scas
stc
roll
xchg
mov
mov
aam
or
jecxz
outsl
movsl
xchg
mov
and
lds
ljmp
xchg
pop
cmp
and
stc
jae
dec
in
push
add
sbb
cltd
mov
cs
xchg
fmull
iret
mov
adc
mov
aaa
cmp
and
loope
arpl
outsl
rcrl
fstp
scas
loopne
notl
je
movsb
dec
mov
mov
lret
xchg
cmc
push
jp
adcb
add
sbb
mov
mov
pop
popf
jmp
out
jp
stc
mov
hlt
outsl
mov
xchg
adc
dec
mov
idivl
dec
lds
dec
out
lret
test
in
dec
adc
fildll
add
pop
aas
jno
jecxz
adc
lahf
add
daa
xor
cmp
inc
xchg
insl
iret
jg
clc
cli
test
or
cmpsb
call
and
rcr
lock
xchg
mov
inc
je
inc
jmp
lds
inc
ss
popf
cmpsl
adc
mov
push
rcrb
xchg
inc
pop
js
in
pop
scas
movsl
pusha
outsl
or
pop
iret
arpl
test
inc
cmp
pop
add
jno
adc
gs
movl
and
adc
mov
fimull
dec
mov
or
mov
push
sub
dec
sbb
xchg
push
adc
repnz
cmp
rorl
jle
ja
shlb
std
ret
pop
fsubrs
aam
pop
mov
push
or
xor
scas
and
in
mov
dec
xor
sub
mov
mov
fxch
cld
jg
mulb
sub
adc
xchg
pop
pop
popf
mov
jae
mov
dec
inc
pushf
ljmp
cmp
fwait
rcrb
adc
jp
out
loope
das
enter
inc
and
push
ss
push
lcall
or
cld
add
add
inc
stos
cld
adc
ret
shll
int
ror
mov
add
sub
fdivr
cmpsl
in
pusha
mov
or
in
inc
enter
or
cs
jl
mov
pop
or
aaa
jbe
xchg
ret
test
fwait
pop
cmp
inc
iret
sarb
dec
xor
enter
outsb
addl
xchg
xlat
les
push
pop
outsb
out
add
xchg
mov
jns
sub
add
sub
sub
dec
add
out
rolb
xorl
nop
cmp
outsb
xchg
lea
mov
pop
out
bound
out
push
mov
mov
mov
or
aas
jnp
jbe
sbb
lods
inc
test
movsl
dec
inc
push
lods
sbb
inc
jno
lahf
mov
jge
mov
out
inc
xor
mov
xor
mov
cltd
ret
or
jae
xchg
pop
cmp
cmp
decl
push
rolb
test
cmpsl
scas
or
dec
mov
mov
fmuls
jle
xchg
jns
xchg
jne
cmp
dec
push
xchg
sbb
jnp
hlt
add
and
out
out
cld
fdiv
adc
and
pop
jb
lret
pop
je
mov
lcall
xlat
rcll
mov
mov
mov
jb
add
inc
push
test
das
and
sub
push
adc
mov
add
mov
mov
pop
gs
mov
enter
dec
bound
mov
in
mov
cmpsb
add
cwtl
xor
cmpsb
xor
lds
ds
in
push
adc
inc
movsl
jnp
subb
adc
inc
ds
dec
pushf
ja
pop
loop
sub
xlat
mov
pushf
fldl
mov
or
loope
shl
fisubrl
in
test
or
test
push
roll
cmc
mov
test
pop
pop
stos
lret
ret
mov
mov
cwtl
mov
mov
scas
fidivs
cmp
jno
in
fisubl
lret
cmp
xchg
movswl
push
insl
sbbl
pop
test
test
xchg
mov
xchg
addr16
cmc
sub
cmp
repnz
in
sti
mov
fsubl
aas
test
stos
pop
adc
fnstenv
xor
mov
push
add
int
aam
mov
loopne
sub
sub
or
mov
cmp
addr16
popf
out
and
sbb
mov
les
pop
scas
adc
xchg
je
out
popf
iret
xor
pop
or
xor
xchg
mov
xchg
dec
out
xlat
outsb
pop
cmpsb
sahf
cs
hlt
push
jo
or
enter
fstpl
testb
shlb
jge
aam
daa
popf
aas
fs
in
cmpsl
gs
fmuls
loop
mov
aaa
sub
cmp
pop
sarl
xchg
and
mov
adc
call
push
cmp
push
mov
xchg
push
mov
jecxz
imul
xor
mov
data16
cmp
pushf
push
or
sbb
inc
mov
xchg
aad
pop
out
sahf
xor
dec
out
pop
unpckhps
loopne
add
xor
xor
adcl
cmpsb
push
jnp
int
adc
pop
lcall
nop
loope
or
mov
js
fwait
cmp
dec
dec
ja
ljmp
dec
dec
pop
mov
in
jbe
enter
sub
xchg
sbb
sbb
jo
test
fcoml
pop
loope
idiv
ds
mov
repnz
adc
push
cmp
push
or
jle
sbb
mov
bound
push
push
mov
fnclex
push
and
xlat
xlat
lret
mov
adc
pop
mov
les
add
cld
xor
mov
xor
rcll
xchg
jle
jb
jle
mov
call
lret
sub
test
loop
rorl
dec
mov
xlat
in
jmp
jne
in
insb
loope
leave
aaa
inc
mov
jae
add
adc
lds
fwait
jge
or
cmp
push
and
mov
jge
lret
xchg
loop
cmc
jge
push
xor
jo
cli
fadd
insl
sub
cltd
and
dec
nop
das
or
dec
cmpsb
or
mov
push
roll
cwtl
add
ljmp
mov
loop
inc
outsl
or
or
add
push
xchg
xor
stos
push
fnsave
sbb
inc
fcmovbe
test
addb
movsl
popa
adc
daa
insb
cld
mov
test
mov
xchg
into
add
adc
pop
out
in
inc
sti
mov
maskmovq
idivl
mov
push
add
stos
subb
jl,pn
push
adc
shl
xchg
xchg
cld
xchg
mov
inc
test
call
mov
xor
inc
mov
jo
loopne
mov
incl
jno
pop
sub
fists
and
lahf
push
xchg
ret
push
dec
add
daa
push
jae
add
sbb
jg
add
fwait
pop
lahf
loop
push
jle
xor
clc
jae
jmp
lods
dec
cmpsl
xchg
mov
add
xor
jl
xchg
les
movsl
dec
xchg
pop
xor
arpl
inc
lds
daa
jge
mov
xchg
cmp
xor
jg
sbb
jns
fmul
repz
cmp
push
movsb
jno
cmp
pop
xor
nop
stc
fst
gs
sbb
into
inc
fdivrl
fiaddl
mov
loop
cld
aaa
lods
fucomp
inc
into
sbb
es
cli
add
mov
xchg
cltd
add
jge
xchg
pushf
std
jl
dec
push
sub
mov
push
outsb
add
push
jle
stos
adc
jle
sub
push
stos
cmpsb
push
sahf
jo
mov
mov
push
cmpsb
sbb
xchg
int3
cmp
dec
push
xlat
ds
cmpsl
jge
dec
jne
jnp
push
mulb
cmp
in
fs
in
lahf
lahf
fsub
shr
lcall
stos
jo
dec
adc
ss
adc
mov
pop
popf
cmp
loop
in
out
sti
rorb
mov
mov
mov
fadds
imul
cmpsl
daa
adc
sbb
cmp
or
push
jle
insb
mov
test
cmpl
adc
popa
inc
mov
mov
aam
adc
fadd
mov
lds
ret
scas
insb
push
stos
sbb
xorb
xchg
pop
push
xchg
arpl
neg
fistl
mov
mov
les
and
hlt
push
cwtl
xchg
inc
mov
add
aad
xor
lcall
sbb
adc
mov
dec
jb
dec
shl
mov
leave
lcall
and
fs
xchg
incb
mov
imul
mov
insl
rorb
xlat
stc
fisubl
aaa
mov
aad
stos
aam
insb
lret
fiadds
xchg
xor
or
fmull
sbb
push
push
jns
sti
inc
adcb
dec
inc
xchg
cmp
aaa
scas
pop
data16
movsl
cs
fucomi
test
xor
enter
int3
cli
clc
outsb
sbb
fisttps
mov
test
repnz
dec
jge
lahf
push
ljmp
xor
lods
outsl
in
mov
hlt
dec
mov
push
cltd
mov
xchg
bound
popa
ljmp
adcl
and
scas
sub
int3
imul
call
test
mov
in
je
jle
mov
test
pop
in
push
enter
call
mov
cmp
sbb
rcll
fildl
mov
in
rolb
clc
dec
push
aas
inc
daa
add
scas
or
mov
sbb
out
pop
lea
int
testb
sub
push
lods
cmpsb
inc
xchg
or
clc
pusha
and
cmp
lock
leave
mov
sub
out
sti
test
push
js
test
lds
aas
lcall
sbb
pop
add
dec
pushf
nop
rcll
mov
xor
add
sahf
push
lcall
xchg
insb
inc
ljmp
mov
in
inc
and
cs
pop
fninit
mov
sahf
mov
jmp
sub
loop
jb
mov
dec
xchg
pop
rcrl
gs
push
sub
add
or
mov
clc
xor
dec
test
repz
arpl
les
enter
ret
ds
js
mov
sub
adc
jmp
mov
sbb
lods
into
aas
jbe
sub
addr16
loop
fs
sbb
or
mulb
add
ja
xchg
xchg
xchg
push
mov
gs
xchg
xlat
sub
jle
es
xchg
sub
jl
fs
push
cmp
jle
jge
in
jp
std
mov
rolb
xlat
cmp
ret
mov
sub
testb
inc
dec
push
push
mov
push
inc
jns
js
cld
xchg
mov
dec
scas
xchg
cmp
sub
call
jle
cmp
lahf
ljmp
add
lretw
cmp
loop
mov
xchg
fstpl
ss
push
andl
rcl
cmp
mov
sbb
loopne
shll
jne
stos
rorb
mov
adc
add
jns
and
add
cmpsl
in
xchg
xorl
or
pushf
jge
in
fwait
cs
call
mov
cwtl
rolb
mov
das
sarb
or
or
in
mov
movsb
cld
inc
arpl
mov
idivl
push
repnz
sti
or
cmp
shrb
fcmovnu
pop
xchg
fsubr
mov
sbb
fdivrs
cmpsb
mov
mov
xchg
ja
jge
lds
inc
mov
int3
fcoms
adc
inc
adc
adc
andl
popf
or
sahf
or
and
outsl
jmp
add
loopne
adc
xchg
inc
pop
jmp
pop
pop
insb
cmp
fidivrl
dec
loopne
dec
pop
adc
mov
int
mov
or
call
mov
inc
cmp
addr16
cmp
in
loop
pop
adc
mov
dec
outsb
sahf
imul
movsb
stc
int
pop
outsl
push
push
stos
mov
adc
sbb
ret
out
lods
push
cmp
data16
hlt
push
jmp
or
add
mov
subl
mov
jo
pop
ficoml
pop
push
fdivl
xchg
in
test
xor
fdivrl
ja
add
arpl
ljmp
inc
lods
lods
ret
addr16
int3
aaa
cmc
fsubl
sub
in
push
jne
mov
push
insb
mov
and
stos
lea
sub
sbb
out
xor
mov
test
stos
mov
pop
cli
jl
movb
ja
mov
mov
mov
mov
pop
jle
mov
jle
sub
lea
cmp
popa
jecxz
jecxz
xchg
mov
call
pusha
jmp
je
add
push
rcrb
das
or
jl
mov
sbb
cmp
push
mov
stos
cs
cmpsl
nop
dec
sub
jmp
fsubrs
mov
popa
mov
dec
test
pop
mov
neg
xchg
ss
in
cmpsb
jg
dec
jg
lret
out
cmp
push
lods
inc
shlb
jmp
xchg
adc
xchg
leave
into
jmp
dec
sub
mov
insb
xor
mov
shrb
fldenv
push
daa
xchg
movsl
popf
or
mov
or
out
sahf
stc
stc
movsb
rcrb
push
fcomps
cmp
mov
lahf
mov
mov
mov
mov
pusha
and
sti
xchg
xchg
cmp
mov
add
xorl
scas
sub
jge
cmpl
mov
lret
cmpsb
dec
out
addl
xchg
and
mov
mov
mov
pop
pop
aad
cmp
inc
test
and
ret
jb
push
and
lds
xor
jb
sahf
loopne
fincstp
adc
ljmp
insb
mov
hlt
iret
push
divb
mov
lret
repz
inc
sub
mov
dec
lods
mov
mov
jnp
dec
ret
cmp
movsl
adc
popf
mov
push
adc
fldl
mov
adc
imul
mov
pop
out
or
adc
in
fcmovnb
out
ja
dec
in
mov
sbb
xchg
stos
ljmp
subb
popf
shrb
add
outsb
jbe
orb
mov
imul
lods
fists
sub
nop
pop
jnp
mov
ljmp
in
xor
xchg
cmc
mov
cltd
into
xchg
mov
pop
imul
mov
ljmp
sahf
pop
sti
iret
sti
btr
fmul
bound
xchg
xchg
ret
call
pop
and
push
add
test
orl
aam
cmp
js
je
and
bound
lock
push
mov
inc
jmp
push
ret
pusha
fidivrs
xor
xchg
fdivrs
mov
std
cmpsl
dec
xchg
leave
hlt
mov
sti
add
pop
xchg
xchg
dec
pop
aam
shl
testl
pop
push
lock
test
leave
and
lea
add
push
xchg
ret
js
lea
jae
fimuls
dec
and
push
pop
imul
adc
sbb
xor
out
gs
mov
xor
jno
cmp
insb
dec
lret
push
das
test
dec
add
push
cmp
lods
dec
xor
cs
lret
push
cmpsl
rcr
outsl
cs
inc
movsl
sub
fimull
jb
mov
lea
xchg
jno
inc
jno
aad
arpl
bound
lret
mov
cld
xor
or
pandn
jecxz,pn
call
cmp
pushf
sarl
fbstp
out
xchg
out
rorb
mov
jns
cmp
cmp
mov
sub
mov
push
mov
dec
jo
arpl
or
lcall
out
movsl
out
or
adc
in
sub
mov
add
xor
sbb
data16
sub
out
mov
shl
jl
cmp
jp
ds
inc
and
outsb
lods
sbb
push
adc
xor
bound
sbb
jp
fwait
outsb
inc
add
jns
fs
addb
arpl
cmp
inc
cmp
mov
aas
adc
jecxz
stos
ds
jnp
mov
mov
sahf
pop
out
xchg
dec
fsts
mov
imul
adc
xor
and
sbb
ret
inc
out
negb
outsb
jns
mov
scas
stos
mov
xor
imul
dec
mov
sahf
pusha
shlb
or
sti
xchg
mov
imul
cmp
jg
sub
jmp
scas
jo
in
push
fstl
daa
push
test
and
icebp
push
pop
daa
dec
sbb
add
dec
push
fdivr
mov
imul
cld
inc
jnp
push
frstor
lret
jns
push
jg
mov
add
xchg
lock
js
mov
sub
mov
sub
xor
cwtl
repnz
mov
pop
js
fsubl
arpl
cmc
mov
mov
cmp
testb
stos
leave
mov
push
jmp
cmp
insl
xor
cmp
out
xchg
xlat
jecxz
es
add
adc
ljmp
dec
test
adc
ja
cmp
add
andb
pop
fisubrs
inc
aad
outsl
push
or
push
cwtl
xchg
xchg
adc
pop
dec
cli
addb
lahf
sti
sbbb
lret
idiv
cld
mov
add
xlat
inc
xchg
dec
rcrl
push
pop
stc
cmc
repz
popf
xchg
fcmovnbe
bnd
sahf
lods
pop
mov
xchg
in
ljmp
cltd
mov
mov
pop
add
adc
sbb
push
or
outsl
inc
mov
es
shl
or
sbb
xor
addr16
bound
or
lret
out
pop
xchg
add
sbb
inc
sti
jne
jmp
or
mov
pop
mov
lods
dec
fmul
ret
sub
or
rcll
mov
aam
push
std
nop
popl
xchg
sbb
mov
cmpsb
sbb
inc
cmpsb
mov
xor
adc
es
xchg
in
insb
sbb
push
notb
mov
mov
lock
outsb
pop
pop
jnp
add
sub
push
adc
cwtl
pop
rcrl
jle
pop
pop
addr16
add
sub
fwait
and
pmaxub
cmp
test
enter
bound
lcall
lea
pop
js
movsb
sti
daa
es
jb
aad
adc
xchg
cmpsl
push
adc
mov
push
mov
inc
stc
mov
fs
adc
jne
jo
inc
clc
popf
std
push
jns
dec
cmp
add
fidivl
mov
popf
fstpt
mov
ja
repnz
outsl
mov
andl
test
ss
cmp
in
mov
push
sahf
mov
nop
test
sarb
lret
addb
pop
inc
pop
pop
filds
xchg
cli
xor
pop
dec
test
and
cmp
push
jle
push
pop
dec
pop
and
adc
movl
mov
test
mov
sbb
cmpsl
xlat
mov
dec
push
mov
mov
ss
insl
into
jecxz
test
loope
sahf
shll
mov
jae
pop
arpl
jle
add
push
push
inc
es
push
in
aam
mov
xchg
mov
pusha
ds
dec
data16
xchg
les
mov
in
add
xchg
jae
cmc
sub
jbe
movsl
mov
aad
xchg
push
and
push
in
data16
aaa
cmp
adc
cwtl
lds
ds
mov
mov
xor
mov
jge
push
add
xchg
fidivs
xor
and
push
outsb
pop
xorl
xchg
test
dec
pop
pop
cwtl
add
or
adc
mov
out
push
cmp
insl
mov
rcll
mov
cld
dec
loop
mov
mov
jbe
inc
popf
hlt
stos
in
outsb
sahf
lods
cmovge
mov
mov
inc
sbb
mov
test
fildll
nop
push
pusha
leave
cld
sti
push
in
xchg
scas
lret
mov
pop
sbb
mov
mov
mov
push
iret
cmp
sub
pushf
sub
adc
fdivp
hlt
call
add
pop
loopne
push
xchg
pop
sbb
lret
test
pop
rolb
and
jecxz
mov
cs
dec
sub
out
jns
pop
int3
jbe
in
aad
pop
cmpl
cmp
mov
and
in
test
dec
insb
ds
imul
insl
std
shlb
movsl
das
lea
xlat
test
xchg
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
add
arpl
and
sbb
jp
xchg
add
push
cmp
scas
pushf
push
pushf
out
jp
imul
sub
in
repz
lods
ret
or
xor
or
arpl
imul
cmp
js
mov
mov
jno
loopne
cltd
fbld
repz
into
repnz
ret
push
loopne
inc
das
and
ret
mov
fstl
or
ljmp
mov
movsl
int3
stc
fiaddl
in
sbb
lods
xchg
inc
and
int3
out
mov
jno
xor
push
sbb
cli
std
cs
pushf
xor
mov
imul
incl
inc
movsb
pop
sahf
push
xchg
mov
ret
mov
xchg
call
out
push
mov
mov
mov
dec
arpl
sbb
imul
mov
jno
loope
mov
cmp
outsb
pusha
pop
shl
dec
xchg
popf
loope
push
aaa
test
mov
ret
enter
jns
xor
dec
cmp
bound
mov
ret
push
jmp
mov
xlat
pop
mov
dec
xor
pop
inc
or
adc
or
loop
stos
jne
push
inc
imul
gs
sbb
jo
das
push
jle
pop
pop
mov
mov
movsl
daa
mov
js
rcl
xlat
test
xchg
sbb
adc
push
cmp
pop
in
jo
push
lahf
roll
dec
push
fistpll
shll
sub
push
dec
push
dec
cmp
add
lahf
data16
test
lods
pushf
inc
faddl
imul
mov
testl
les
mov
ds
imul
add
pop
adc
mov
push
sub
lods
test
insb
dec
mov
hlt
push
dec
sub
ret
push
popf
jnp
pop
std
sti
call
push
xor
fwait
inc
ljmp
aas
mov
pusha
push
adc
addb
test
stos
adc
xchg
xor
in
cmpsb
xchg
fiaddl
repz
jecxz
movsl
rcrb
push
decl
mov
fucomip
icebp
cmp
jecxz
rcrb
mov
xlat
add
icebp
sbb
mov
mov
out
mov
out
shlb
xchg
and
mov
xchg
adc
and
lods
clc
pop
outsl
pop
add
xchg
mov
push
adc
dec
mul
gs
jp
sub
xchg
mov
or
addr16
shrb
js
es
movsb
data16
in
popl
shlb
sti
aas
cmc
pop
and
push
jmp
lods
psubsw
nop
imul
lock
and
mov
repnz
lret
in
ficoms
shrl
sbb
hlt
divl
push
popa
movsl
ss
add
out
into
pop
lahf
sub
mov
out
add
xchg
mov
dec
mov
std
xchg
mov
loope
jnp
dec
popf
pop
jl
fs
mov
lds
std
and
sub
ffree
xchg
pushf
rorl
mov
mov
lret
out
mov
cmc
dec
mov
mov
add
mov
lods
and
adc
das
cld
sub
cli
fcmovbe
or
xchg
aaa
fcoms
ds
loope
stc
mov
lret
fidivrs
leave
fs
iret
push
rcrl
add
pop
ljmp
xor
mov
cld
xor
xor
xchg
sub
in
cli
imul
mov
ret
popf
repnz
pop
add
das
xchg
std
push
cmp
mov
lods
lcall
test
xchg
es
sub
sahf
mul
inc
sbb
pop
dec
dec
adc
jecxz
inc
jne
dec
add
jno
fdivrs
adc
dec
mov
jl
mov
inc
sbb
pop
inc
fmull
push
sbb
pop
ljmp
add
jg
cmp
neg
cli
adc
fldl
xorl
in
xor
cmp
sahf
je
add
das
addr16
sti
movsl
mov
cmp
mov
test
les
shl
ret
mov
adc
fbstp
or
or
addr16
ficompl
push
dec
push
mov
insl
enter
mov
addr16
add
enter
jp
or
insl
out
loop
ss
sbb
pop
je
cmp
pusha
lods
mov
ret
ja
mov
int
stos
fucomip
repz
pop
popl
loope
sbb
cmp
inc
xchg
xchg
sub
pop
outsl
and
lcall
adc
xor
aaa
cmp
ljmp
pop
mov
repnz
pop
cmp
xchg
out
xlat
pusha
jmp
and
cmpsl
pop
jl
scas
jle
popf
fsubr
mov
adc
scas
les
shll
mov
fs
lahf
int
sub
pop
dec
cld
cld
add
imul
push
aam
repz
ljmp
js
es
popa
jno
push
mov
fisubs
sahf
hlt
fmull
cmp
cmp
out
out
adc
ja
outsb
clc
cltd
add
xor
jno
aaa
fs
mov
mov
dec
push
js
xchg
roll
flds
cld
adc
inc
pusha
jmp
or
test
imul
cld
mov
mulb
das
xorb
loopne
or
push
arpl
sub
dec
inc
sub
aad
mov
sub
popf
pop
shll
lods
and
and
int3
inc
adc
repz
testb
mov
mov
fnstenv
std
ret
scas
xlat
dec
push
shl
mov
inc
int3
push
in
in
jl
popa
ja
shll
push
fiadds
add
sarl
std
imul
mov
out
push
addl
cmpsl
push
sbb
xchg
xor
add
dec
xchg
test
and
inc
repnz
jmp
inc
lods
sbb
mov
out
pop
jle
sub
idiv
mov
pop
sub
nop
jo
dec
cmp
mov
dec
test
xchg
outsl
testl
pop
add
cmp
and
add
jl
mov
je
lock
iret
inc
sbb
cmpsl
clc
lods
in
ret
fwait
mov
mov
jns
filds
xor
js
js
test
shr
adc
in
fs
sbb
jge
into
enter
xchg
push
xchg
in
and
jg
imul
movsb
outsl
pop
lds
inc
pop
mov
cmpsl
out
xor
xchg
and
cmp
mov
add
mov
or
ss
pop
cwtl
xor
add
push
shrl
pop
ljmp
xor
mov
je
int
jg
outsb
mov
iret
cli
cld
mov
lcall
mov
xor
mov
test
fdivr
sbb
xor
mov
repz
sti
adc
out
rorb
and
dec
mov
inc
mov
pop
fcmove
jae
sti
jl
aam
test
pop
int
adc
push
js
imul
nop
das
sahf
hlt
int
push
lds
mov
jl
repz
ret
int3
inc
dec
mov
mov
add
movsl
shll
lods
pop
mov
lahf
pushf
jne
inc
xchg
push
mov
or
aas
insl
cmp
sbb
mov
pop
jl
xlat
jbe
xor
stos
shl
ss
jno
mov
sbb
fdivs
xchg
jp
lods
inc
add
xchg
add
fcomip
fsubrp
cmp
in
xchg
ja
ret
xchg
popa
adc
arpl
dec
push
repz
push
inc
push
ljmp
stos
add
cmc
fnsave
or
mov
ds
pop
lret
test
sub
or
lock
loopne
mov
subb
inc
sahf
andb
cmc
int
sarb
lcall
push
jno
insl
xor
push
cmp
push
repz
into
movsl
and
ret
pop
push
fstps
int3
fcmovnbe
out
mov
movsb
mov
push
lods
lcall
or
mov
jo
cmp
dec
push
aaa
xor
call
xchg
pop
pop
outsl
out
in
or
mov
and
cmp
ret
jp
mov
cli
cmp
nop
cmp
ja
lock
pop
bnd
xchg
repnz
mov
cmp
dec
add
test
mov
jecxz
popf
arpl
test
iret
data16
dec
or
cmp
ss
out
and
hlt
mov
mov
pop
xor
mov
inc
sub
mov
lea
incb
push
int3
out
jecxz
add
or
inc
aas
cmp
cmc
hlt
fucomp
ljmp
push
cltd
lahf
cmp
cmpsl
das
add
push
push
xchg
inc
cmp
adc
cli
mov
fucom
or
out
les
adc
lret
cs
cmp
mov
addl
clc
divl
xchg
sbb
cli
sarb
mov
cld
insl
addr16
xchg
dec
sub
or
cmp
or
cmp
into
gs
mov
xchg
jmp
mov
popf
push
sbb
sub
sub
je
adc
sti
cmpb
in
pop
cmp
dec
lods
iret
xchg
mov
fldenv
in
mov
xor
mov
cmp
es
and
mov
into
lods
jnp
xor
add
lds
out
das
or
cmpb
das
int
xorl
pop
mov
movsl
rcrb
popa
pop
pop
xchg
nop
mov
mov
addr16
lock
push
sbb
aas
pop
xchg
mov
xchg
mov
or
mov
add
pop
outsb
inc
cmc
mov
cltd
cmp
dec
mov
pop
add
mov
test
ret
sahf
rorb
fstpt
stos
movsb
inc
pop
push
or
push
mov
pop
clc
and
xchg
mov
or
mov
movsb
sub
fs
push
fwait
xor
mov
aam
sub
inc
jns
int
repnz
jb
jl
pop
jnp
movsl
mov
mov
gs
mov
and
add
enter
dec
jecxz
mov
push
inc
cli
mov
insl
sahf
pushf
orl
mov
data16
repz
xor
ss
sub
add
hlt
sbb
xchg
test
pop
cs
scas
jge
mov
inc
sbb
gs
mov
add
imul
pusha
ret
sbb
repnz
dec
pop
pop
sub
lea
xchg
cmp
mov
adc
cwtl
or
mov
add
ret
ja
shlb
sti
in
dec
call
xchg
fs
cmp
pusha
mov
aad
dec
into
insl
jecxz
cmp
outsl
out
adc
rorl
pop
dec
jg
sti
mov
xor
push
mov
mov
dec
cli
sbb
jae
sbbb
pop
sbb
pushf
jae
ss
cmp
dec
pop
clc
jae
cltd
inc
cmc
jmp
xor
movsl
mov
int3
adc
sub
adc
add
xchg
push
outsl
loope
or
lods
out
or
lods
fcoml
inc
fcompl
in
in
mov
mov
dec
lds
cltd
js
fs
jg
sbb
mov
sahf
mov
nop
pop
imul
jb
loopne
jb
das
into
mov
cmpsb
daa
mov
shl
sub
insb
adc
imul
sbbb
js
lea
mov
int3
push
in
xor
call
scas
cmpsb
mov
into
lock
xchg
mov
movsl
imul
das
push
cmp
cli
nop
aam
int
mov
sti
sub
cmp
cmpsb
cmp
push
push
std
xchg
jmp
sbbl
xchg
in
dec
insb
fildl
sub
into
mov
inc
aad
fld
dec
pusha
mov
or
xor
jp
push
jb
xor
in
out
dec
jbe
insb
popf
popf
xor
mov
jp
mov
mov
add
lcall
imul
aaa
jo
in
stc
stc
aam
jg
fdivrs
popa
mov
rcrb
push
mov
ds
test
jo
fdivrl
dec
call
and
iret
pop
mov
jne
inc
aad
ror
in
mov
loop
int3
bound
adc
std
jg
adc
add
cmp
adc
xchg
enter
ret
xor
cmpsb
mov
mov
adc
sub
cmp
dec
pop
and
mov
push
pop
xorl
adc
dec
repz
rcrl
pop
mov
lret
cld
out
pop
gs
sub
jbe
mov
cld
in
push
leave
push
cmp
or
sub
loope
add
mov
sbb
je
andb
add
imul
jge
sbb
out
add
ret
cmpsl
sarl
stc
jb
outsl
test
pop
es
jp
rorb
scas
into
fldt
fcoml
loop
sbb
adc
outsb
inc
inc
lret
or
and
jmp
lock
das
sub
lods
sub
rcr
outsb
push
cs
in
jle
xor
pop
hlt
daa
popa
popa
mov
sub
fwait
inc
adc
imul
scas
aam
jnp
push
and
imul
xorl
ret
jge
testl
cli
test
jecxz
in
jbe
push
inc
stos
fcoms
ss
in
imul
mov
adc
mov
pop
cmpsl
pop
mov
mov
mov
clc
cld
push
cmp
push
cmc
sbb
imul
mov
sub
jne
mov
push
adc
sub
mov
mov
push
movsb
cmp
sbb
outsb
mov
sbb
pop
ret
jns
push
lea
push
fwait
roll
mov
push
xor
jp
pop
fdivrs
push
push
out
cltd
ds
pop
pop
inc
adc
ljmp
add
pop
aad
call
cwtd
test
cli
test
test
cmp
xlat
and
mov
daa
stos
lock
mov
sbb
dec
jbe
xorps
scas
push
sarl
mov
popa
cli
jmp
xorl
mov
sarb
or
ss
sbb
mov
mov
push
call
imul
mov
cmpb
mov
cmp
mov
mov
shlb
out
adc
in
cmpsb
mov
into
pop
mov
mov
mov
test
dec
xchg
leave
in
mov
inc
xchg
test
and
cld
out
pop
push
loope
cmc
dec
stc
push
jmp
pop
xchg
sbb
adc
arpl
sub
arpl
testl
or
fildl
xchg
test
or
in
mov
xor
mov
sarl
add
aaa
addr16
insl
es
sub
mov
pop
push
ja
and
xchg
stc
cs
orb
and
sbb
into
aaa
cmpsb
mov
dec
sahf
loop
bt
into
mov
sbb
sub
sub
xchg
xchg
int
pop
cwtl
rclb
sbb
cmp
loop
ret
sti
cmp
imull
outsl
mov
mov
push
jno
loope
inc
int3
jecxz
lcall
pop
stos
jmp
nopl
les
sbbb
loop
popa
mov
mov
jg
popl
xcrypt-ofb
cmpsl
push
lahf
push
cld
pop
adcb
add
ljmp
enter
push
add
push
in
cli
mov
mov
std
fs
sbb
sbb
lret
imul
aas
push
mov
cld
pop
jg
mov
popf
xchg
cmp
sbb
fbld
inc
cld
mov
mov
stos
cmpsb
loop
mov
cmp
or
insb
xor
mov
lods
adc
inc
loopne
jno
sub
ret
icebp
cld
adc
or
push
movsl
mov
ja
adc
data16
out
mov
cli
mov
test
aad
icebp
mov
dec
or
xor
cmp
mov
cld
cmpl
repnz
scas
clc
xchg
iret
sub
jo
jle
sbb
addb
xchg
inc
cld
mov
pop
and
mov
pop
imul
or
stc
xor
sbb
or
dec
mov
add
xor
leave
xchg
mov
dec
and
jns
sbb
les
cmp
cmp
icebp
jl
xchg
cmp
mov
sarl
xchg
add
jne
loopne
push
ret
mov
push
jp
push
ss
lcall
sar
xchg
adc
push
mov
aad
fisttpl
loopne
hlt
enter
repnz
insl
xchg
call
sbb
leave
inc
call
xchg
dec
xor
rcl
icebp
sub
cli
pop
pop
addr16
cld
pop
and
xor
mov
lock
adc
xor
jne
je
sbb
adc
jb
mov
pusha
push
and
push
repz
ja
jge
lea
faddl
dec
hlt
lret
xchg
daa
scas
fsubr
in
dec
ds
imul
push
jo
scas
jge
xchg
mov
jge
inc
lret
dec
sti
cmp
fwait
xorl
test
sub
cmpsb
rolb
jbe
jle
jecxz
add
lea
movsl
mov
leave
outsl
sub
mov
cmp
movsb
push
push
inc
xor
and
push
lahf
push
hlt
mov
fidivs
and
xor
arpl
aaa
in
ret
and
xor
imul
sbb
fdivrs
mov
mov
dec
scas
out
fcmovne
subb
push
push
mov
in
inc
cmp
mov
dec
cli
aad
and
dec
test
stos
ss
xchg
movsb
arpl
mov
lahf
push
push
sub
addb
das
aad
and
jns
mov
iret
stos
test
js
imul
xor
pop
xor
ret
aas
pop
push
mov
stos
flds
add
jbe
jae
idivl
ljmp
fwait
das
mov
icebp
pop
shrb
test
xchg
sbb
insb
mov
push
movsl
call
andb
aad
outsl
orl
dec
aam
push
aas
adc
pop
jne
scas
or
insb
dec
adc
xorl
or
shlb
push
inc
sub
dec
insl
push
jno
loop
and
and
dec
inc
jg
iret
mov
ds
mov
cmp
daa
or
popa
jp
inc
scas
sbb
mov
sub
out
stos
and
or
loopne
insl
andb
push
fdivr
mov
nop
imul
rol
mov
pop
cld
add
fidivrs
jae
pushf
add
mov
or
out
sub
xchg
push
ss
xchg
cmp
and
and
pop
stos
inc
pop
inc
sbb
pop
inc
fadds
and
jge
sbb
dec
fwait
fs
inc
dec
sub
jnp
les
inc
pop
idivb
and
mov
sti
fmull
push
inc
mov
jnp
in
or
icebp
xor
cmp
and
fstps
push
xchg
hlt
xor
mov
fbstp
jp
jmp
and
daa
adcl
add
sbb
lods
push
stos
icebp
inc
mov
pop
add
sbb
mov
inc
bound
xchg
or
lahf
dec
mov
and
mov
or
ret
inc
movsl
jmp
mov
mov
dec
pop
aas
pushf
dec
je
xchg
cmpsb
jns
cwtl
icebp
cmp
sub
pop
int
sbb
notb
ds
add
sub
and
mov
repz
popf
cmp
imul
xor
or
dec
hlt
subb
notb
cmpb
inc
movsl
je
je
lock
cld
dec
out
push
dec
in
rorl
into
int3
lods
popa
cmpsl
mov
subl
loop
push
cmc
pop
pop
inc
lock
aad
sbb
jb
dec
inc
mov
loope
pop
cli
aas
pusha
adc
pop
sbb
gs
inc
inc
and
mulb
movl
movsb
mov
dec
jno
and
add
or
jb
imulb
sub
cmp
mov
cmc
pop
movsl
fdivl
out
addr16
push
ja
xchg
test
dec
xor
test
dec
jne
dec
ret
shll
inc
xchg
add
cld
leave
xor
sub
inc
xor
andb
xor
mov
xchg
jbe
dec
mov
inc
jne
jl
push
popf
movsl
mov
dec
flds
mov
and
pop
rcrl
lock
mov
jb
jae
repnz
adc
jns
lods
sti
into
mov
add
or
sbb
inc
mov
aas
mov
pop
pop
adc
in
push
mov
call
sti
mul
ljmp
push
popf
dec
shl
jp
aas
imul
mov
or
push
call
xor
pop
mov
jp
jno
and
stos
mov
inc
push
movsl
sbb
iret
ja
inc
push
outsl
xchg
fldt
imul
jbe
and
mov
je
adc
test
mov
loope,pn
sub
sub
fadds
dec
push
add
jne
or
fdivrl
pop
into
add
sti
cmp
addb
push
mov
out
dec
jo
push
xor
leave
in
aas
sti
mov
cmp
inc
aaa
imul
fistps
jne
jmp
cs
push
scas
xchg
outsb
call
ror
pop
mov
xchg
jge
jae
mov
outsb
sbb
cmp
inc
lds
mov
ja
mov
pusha
mov
addr16
insl
mov
mov
sbb
stos
lcall
repnz
loopne
mov
cmc
xchg
into
testb
dec
push
stc
daa
ljmp
jecxz
mov
add
push
in
jo
stos
gs
clc
leave
iret
sbb
jle
cs
push
stc
push
orb
lcall
arpl
imul
enter
jns
stc
mov
dec
lock
xor
pop
ret
mov
dec
lock
jle
lock
jg
lcall
stos
mov
out
mov
push
jae
movsb
lds
dec
mov
push
insl
jecxz
sbb
sbb
inc
inc
insl
mov
push
add
mov
pop
fsubrs
into
push
rcr
jmp
popa
ja
cmp
xchg
inc
outsl
xchg
shlb
mov
scas
sub
jg
and
js
lds
cltd
cmp
lea
dec
xchg
xchg
cltd
sbb
fmuls
pop
mov
sub
cmp
jo
pop
dec
mov
icebp
aas
iret
dec
jmp
aam
test
pop
mov
int3
in
jns
sahf
cld
xor
aad
and
hlt
cmp
les
sub
add
pop
push
dec
pop
int
sbb
and
in
push
std
in
movsb
or
mov
add
fdivrs
popa
xor
mov
mov
inc
dec
hlt
test
into
jne
cmp
and
fadds
lret
test
cld
xchg
xchg
lods
out
in
mov
daa
rcl
addr16
xchg
cmp
jl
jecxz
sbb
and
jp
lahf
mov
cmp
jmp
lock
sbb
add
incl
int
loopne
cmp
jbe
sub
icebp
mov
adc
or
sbb
jb
cmpsl
ja
and
sub
out
push
xchg
std
lods
sbb
das
mov
popf
inc
dec
stos
into
pusha
add
adc
ds
cs
mov
push
aam
push
gs
mov
sub
jg
sub
pop
mov
adc
sbb
test
out
jecxz
out
popa
cwtl
std
imul
out
maxps
stos
ret
cmpsb
sbb
enter
insb
inc
loop
notl
xor
add
push
mov
push
es
in
and
or
divl
pop
fwait
mov
pop
xchg
cli
xchg
pop
fcoml
xor
lds
mov
mov
xchg
mov
mov
mov
sub
cmp
mov
sahf
insl
sub
fucomip
add
cld
rcl
push
nop
push
in
addr16
mov
movsb
insb
dec
adc
fidivs
adc
jecxz
test
arpl
or
mov
dec
or
push
loop
push
mov
loopne
lea
xchg
inc
mov
pop
sub
es
aam
movsb
add
addr16
jp
xchg
imul
fidivl
lahf
aam
pop
jb
dec
ljmp
push
test
rolb
repz
mov
lods
dec
frstor
or
repz
mov
sbb
subl
int3
dec
dec
repnz
movsl
push
inc
or
or
jo
jp
pop
mov
test
mov
add
push
les
shrl
ds
insb
push
sbb
add
fdiv
mov
aaa
mov
iret
inc
loope
inc
call
dec
jecxz
fldt
adc
movl
cld
xor
xor
mov
fcmovb
shrb
push
add
idivb
jo
and
leave
out
clc
out
cmp
jbe
cmp
sub
rcrl
movsb
lret
cs
adc
or
cmp
test
cmp
cld
cmp
scas
adc
test
loop
xchg
lods
inc
jnp
and
aam
xor
aad
mov
jns
mov
xchg
shll
lret
outsl
int3
mov
mov
movsl
cmp
inc
and
leave
test
les
push
test
dec
jmp
dec
gs
pop
xorb
pop
xchg
das
dec
cmp
pop
mov
mov
inc
jg
xor
or
inc
sarl
and
int
adc
es
mov
adc
out
pop
jns
or
imul
test
xor
fdivrs
rcrl
mov
cmc
loope
sbb
repz
cltd
roll
add
inc
mov
mov
mov
int3
test
mov
std
sub
je
loop
push
pushf
adc
addb
pop
mov
mov
fdivr
out
and
add
test
jp
sub
mov
scas
sti
jmp
sarl
rcll
mov
test
lret
das
sub
ret
dec
mov
adc
out
xor
adc
js
dec
sub
ss
lds
adc
push
mov
imul
mov
pop
add
push
inc
cmp
rcrb
jg
bound
js
stos
pop
cmp
dec
lahf
in
sub
mov
ret
fwait
data16
inc
adc
pop
jg
adc
lret
loopne
sbb
lea
pushf
dec
shlb
jno
insb
into
mov
in
stos
popa
rcrl
xchg
pusha
inc
adc
inc
cltd
popf
xor
xor
push
xor
pop
mov
jl
mov
pop
cmp
jp
cmpsb
jno
das
push
testl
push
cmp
sbb
mov
pop
test
dec
jne
jnp
add
mov
pop
loope
stc
sub
in
cmc
scas
imul
daa
adc
add
aas
cmpsb
mov
stos
lods
fdivrl
gs
push
ficoml
sub
iret
cmp
jae
lret
pushf
mov
xlat
fyl2xp1
frstor
lcall
mov
cmp
hlt
data16
sbb
jmp
mov
lods
lea
push
inc
je
loope
ret
add
loope
out
test
mov
xor
or
stos
iret
pusha
inc
push
jno
mov
jns
mov
jge
es
das
mov
mov
cld
rcl
insb
lods
js
daa
jp
outsb
sub
fadds
loop
rolb
dec
ss
test
xchg
jns
in
mov
push
mov
adc
stc
shrl
add
push
sahf
jl
xor
inc
cmp
sti
in
pusha
xor
jne
cmp
mov
cld
pop
add
jb
mov
mov
repz
mov
lcall
jno
cmp
mov
pop
sub
push
jb
mov
sbb
mov
and
test
mov
cmp
xor
mov
jle
mov
testl
jle
mov
xchg
cmp
pop
and
inc
stos
int
mov
mov
divb
push
mov
xchg
xchg
xchg
cmp
es
pop
push
fimull
pop
pushf
sub
je
mov
leave
fists
imul
adc
addr16
shll
loope
jp
je
cmp
or
mov
scas
stos
inc
bound
dec
sub
jl
and
ficoml
adc
mov
pop
fiadds
dec
sub
ret
xor
pop
mov
push
inc
dec
jne
ret
push
lahf
push
lock
jb
xchg
rcrl
icebp
icebp
mov
nop
mov
push
add
mov
in
ffreep
push
loope
jmp
dec
sarl
lcall
cs
xchg
mov
popa
out
adc
sub
jmp
adc
xor
inc
mov
loop
stc
pop
mov
and
in
data16
cld
icebp
dec
popf
jb
pop
add
mov
mov
cld
enter
jb
shr
cwtl
out
cmpsb
jae
jge
jmp
xchg
or
xchg
dec
out
lret
add
inc
jle
push
pop
aas
push
mov
in
xchg
data16
pop
scas
hlt
mov
jge
lods
add
gs
mov
dec
je
popf
inc
mov
add
stc
test
frstpm(287
adc
daa
repz
jno
xor
push
fs
addl
stos
lahf
cld
pop
mov
popa
sbb
std
ret
mov
daa
mov
daa
lret
cmp
inc
push
adc
data16
jo
mov
inc
fisubl
arpl
jmp
out
xchg
inc
jns
pushf
sbb
es
mov
ljmp
jg
std
mov
test
jmp
std
iret
stc
les
inc
ljmp
pop
sub
popf
or
mov
lret
ret
jno
shll
mov
dec
cld
outsl
enter
test
sub
jmp
xchg
dec
add
inc
int
cmc
mov
repz
xor
push
inc
stc
notl
xchg
bound
sub
leave
ficoml
mov
push
dec
popl
mov
pusha
dec
sub
jnp
mov
mov
mov
cmp
sbb
and
push
std
sbb
cmp
lret
lods
mov
add
push
jns
xor
adc
pop
pop
jge
loopne
cmp
xchg
lret
fs
int3
or
dec
cmp
xor
cmp
mov
scas
cli
loope
and
out
out
scas
or
add
mov
es
sbb
sbb
pushf
mov
pop
push
cltd
into
lret
push
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
xor
cmpb
jp
sbb
jp
scas
pop
jb
and
push
gs
rcl
mov
xor
popa
loopne
hlt
or
add
orb
push
pushl
pop
push
push
rolb
cmp
fadd
mov
push
ret
add
push
pop
xchg
xchg
xchg
aaa
emms
ljmp
mov
mov
decl
shrl
jo
cmc
jecxz
add
or
incl
lret
fcom
push
push
mov
pop
rcll
pusha
xchg
cmp
rcr
cmp
cmp
cmp
xchg
inc
jns
jns
stc
popa
out
cwtl
hlt
cmp
fwait
pop
lss
lret
adc
je
adc
cld
in
iret
jne
les
mov
shlb
or
sbb
popf
out
and
cmpl
ds
jno
std
rorl
cmp
fdiv
add
repnz
or
aad
movsb
fwait
add
mov
lret
aad
arpl
push
cld
call
fwait
inc
movsl
js,pt
in
js
jne
jno
jnp
push
stc
push
mov
mov
hlt
std
xchg
push
mov
sub
cmc
push
sub
sub
xor
xchg
clc
fdivrl
scas
pop
outsl
mov
aad
cmp
jns
mov
mov
cld
cmp
mov
movsb
mov
inc
lea
xor
pavgb
cmp
inc
popf
mov
inc
push
repnz
popl
cltd
xchg
mov
or
ja
jle
or
pop
ja
or
repnz
cli
cmp
nop
lods
cmpsb
fwait
add
add
pop
fiadds
loop
mov
cmp
cmp
sbb
mov
inc
or
ljmp
jnp
in
mov
pop
cmp
lcall
and
xor
loope
std
sbb
movsl
in
insb
jo
xchg
sbb
imul
sub
push
push
cmpl
inc
negl
cmp
or
cmpsb
scas
stos
insb
push
mov
nop
rcr
dec
into
and
cmp
lret
dec
sub
aas
repz
push
dec
and
adc
mov
icebp
out
xchg
nop
addr16
pop
mov
bound
jnp
add
pop
sbb
jne
push
xor
push
bound
mov
pop
pop
aaa
pushf
jecxz
and
pop
and
dec
js
mov
inc
inc
pop
shll
add
pop
aaa
lcall
icebp
cmp
cwtl
xor
cmp
xor
xchg
pop
pop
lret
rcrb
sahf
lret
sbb
inc
inc
imul
dec
insb
outsb
jp
out
push
push
push
cwtl
gs
dec
dec
das
sbb
mov
sbb
mov
pop
repz
push
sbbl
sahf
loopne
xchg
sbb
mov
stc
or
daa
dec
xchg
mov
sti
out
pusha
push
dec
jl
xor
mov
imul
mov
xchg
or
xchg
adc
out
mov
stos
jecxz
in
lcall
lret
call
mov
add
std
sbb
pop
lret
test
mov
pop
jp
add
jnp
sbb
jnp
xchg
sbb
mov
push
cmpsb
jecxz
cmp
cli
mov
sbb
fwait
lods
dec
in
cltd
adc
mov
inc
or
loope
insl
mov
test
add
jmp
and
dec
paddsb
idivl
popf
or
or
cmpb
inc
push
push
fwait
xor
xchg
je
sahf
cmp
pushf
mov
push
aam
jnp
push
lahf
xor
je
scas
mov
mov
sbb
stc
inc
aad
or
mov
test
mov
add
pop
mov
lret
repz
orb
cmp
inc
mov
pop
mov
sahf
pop
loopne
lret
mov
out
add
lgs
iret
js
clc
into
popl
mov
push
outsb
fildl
jl
daa
lret
or
mov
or
jge
cltd
mov
adc
mov
push
sbb
push
imull
sub
pop
fucomp
inc
out
call
jno
std
sub
cld
mov
sub
loope
dec
ror
jmp
push
fnstsw
lret
push
out
bound
mov
in
leave
dec
fsubr
push
fxch
fldenv
add
stos
cmpsl
lahf
out
cwtl
mov
xor
pop
in
cwtl
push
pop
rep
outsl
ret
pop
jnp
sar
daa
das
jnp
rolb
or
dec
pop
out
lret
in
xchg
cmp
xchg
mov
mov
and
xor
aam
arpl
inc
add
dec
add
adc
cmp
push
adc
lret
jecxz,pt
inc
pop
xor
sbb
lahf
mov
adc
call
imul
push
sahf
std
mov
xchg
or
fists
outsl
dec
mov
xchg
iret
lret
cmp
sub
and
loop
dec
sbb
inc
fdivr
adc
xchg
and
xchg
mov
fadds
mov
jge
inc
scas
dec
and
scas
jp
fistps
lock
push
pushf
dec
lods
add
adc
jne
ja
mov
popf
lahf
pop
insl
clc
insl
ds
cwtl
out
push
hlt
jo
movsb
mov
xchg
xchg
das
jg
or
jno
jmp
sbb
lods
mov
and
mov
adc
repz
out
or
imul
sti
loop
stos
or
icebp
popa
or
mov
movsb
ss
jo
lock
shrl
push
pop
shrl
mov
popa
push
inc
adc
test
lea
mov
push
cmp
inc
movsb
push
outsl
lret
mov
lahf
push
nop
inc
scas
mov
test
push
adc
dec
pop
daa
jo
out
ja
rcll
pop
xchg
mov
mov
cmp
mov
xor
std
scas
lret
clc
repnz
mov
addr16
xchg
fcmovu
sbb
sar
or
ja
ja
rcll
push
fcoms
movl
bnd
mov
adc
mov
xor
cmp
cmp
inc
sbb
shrl
mov
or
sub
fisubrl
ret
movsb
jae
push
movsl
xchg
fcoml
fdiv
icebp
mov
pop
mov
in
cmpl
and
stos
jne
scas
cwtl
mov
test
jge
out
adc
mov
push
test
xorb
mov
and
fists
lock
iret
jne
repz
add
xchg
imul
js
mov
mov
sub
sti
ja
sub
pop
or
loopne
or
jmp
je
cltd
push
das
dec
imul
cmp
movsb
cmp
sbbb
scas
xchg
xchg
mov
mov
ja
sub
movsb
hlt
popf
lea
pop
pop
sbb
push
inc
inc
adc
aas
xchg
or
and
mov
mov
je
nop
inc
dec
mov
pop
inc
mov
pop
lahf
push
sub
pusha
in
dec
mov
in
or
adc
into
mov
arpl
or
lret
lret
fnclex
or
xchg
mov
test
stos
adc
jmp
xchg
xchg
roll
xchg
iret
in
pop
cmpsb
mov
inc
adc
out
mov
add
or
or
inc
js
push
lods
shl
cmpsl
mulb
inc
insl
pop
and
leave
dec
out
xlat
jno
inc
mov
cmp
sahf
mov
mov
xor
js
dec
mov
dec
and
mov
xchg
lds
jmp
mov
and
into
push
popf
lods
or
loope
sahf
data16
out
cmp
loope
and
dec
xor
pop
je
pop
in
mov
clc
adcl
pushf
push
mov
das
out
jae
push
shrb
jno
xor
clc
clc
pushw
fs
in
cmc
add
inc
shrb
dec
pop
daa
sahf
aas
adc
xchg
test
test
or
out
pop
pop
inc
sub
or
std
sub
mov
in
fisubl
or
sub
mov
dec
cs
flds
std
fisubl
or
pop
jb
cmc
add
jne
in
cmp
daa
and
xchg
test
cmc
enter
decl
lret
imul
in
insb
cwtl
cmp
xor
sub
jns
das
add
inc
daa
ja
inc
sub
lea
lcall
add
cmc
mov
jae
push
outsl
cmp
iret
fnsave
mov
in
mov
negb
dec
cmp
inc
out
fistps
sub
into
cmp
in
into
mov
in
js
in
adc
shrl
sbb
in
ljmp
and
cmp
or
mov
enter
adc
cmovge
mov
das
and
sahf
pmuludq
aas
cmpsb
cmpsl
lds
es
rcll
or
and
adc
test
hlt
lahf
lea
ffree
push
jne
pop
clc
cltd
ja
sbb
aaa
add
fdivrs
sbb
push
push
mov
lds
xor
les
dec
dec
cmpsb
je
fists
xchg
mov
lcall
cmp
mov
push
cmp
jmp
sarb
pushf
jbe,pt
dec
mov
mull
mov
outsb
ljmp
fcmove
cwtl
jp
js
dec
push
fcoms
jno
jmp
or
mov
imul
xchg
xchg
mov
stos
ud0
pop
mov
pop
mov
and
pusha
test
iret
xor
lfs
mov
les
push
mov
xchg
mov
inc
push
mov
push
and
add
pop
bound
notb
push
out
jle
adc
outsl
lock
fldcw
fisttpll
lret
cld
ja
sub
mov
lret
jne
sarl
fiadds
or
lret
mov
dec
xchg
lcall
sub
inc
mov
adc
hlt
push
adc
inc
sbb
and
xor
daa
cmpsb
add
dec
stc
aad
push
inc
cli
mov
adcb
mov
test
or
insb
out
cmp
out
loope
jbe
cs
dec
sar
addb
jmp
pop
test
xchg
arpl
popf
pop
in
sub
sub
repnz
dec
cmc
imul
sbb
test
fisttpl
loop
adc
dec
or
sbb
adc
cmp
mov
or
idivb
sub
cmp
fcomp
jge
jl
shlb
or
add
sahf
scas
push
cmp
sub
sbb
out
sub
xlat
xchg
out
jne
mov
xchg
aaa
movl
outsb
fwait
adc
dec
dec
nop
in
mov
lea
or
jbe
push
dec
jbe
pop
adc
cmpsb
sub
loop
push
xchg
gs
xchg
data16
in
imul
adc
lock
notb
popa
aaa
jge
mov
scas
je
popf
js
jecxz
push
les
mov
push
lcall
rol
sbb
stos
test
pop
js
lds
ds
out
jno
fwait
cmp
pop
outsb
xlat
pop
cmp
fcompl
shlb
or
and
das
and
mov
jo
cmp
jg
sarl
aaa
push
sbb
stc
testl
and
ja
jge
pop
int
push
scas
repnz
fimuls
sbb
pop
push
ja
scas
stos
insl
or
mov
jo
xchg
dec
push
jnp
testb
xchg
inc
dec
lds
cmp
pop
adc
stos
incl
ja
mov
mov
cmp
mov
adc
add
adc
repz
insb
ss
mov
mov
or
mov
shrl
push
insl
jl
aaa
cmp
adc
lock
loopne
idivb
cld
ret
add
js
lret
sar
scas
fists
xchg
cmpsl
sub
add
jecxz
cmp
mull
and
js
pop
xor
xlat
push
leave
add
pop
adc
pop
mov
into
insl
call
xchg
push
push
out
stos
dec
fcomps
rcll
mov
xor
add
pop
push
lea
adc
xchg
inc
mov
adc
repz
in
les
subl
jae
xchg
push
mov
mov
mov
stos
push
pop
das
sbb
fistl
pop
inc
adc
adc
aam
cltd
insb
dec
fwait
xor
movsb
xchg
in
push
xchg
sbb
mov
or
es
cmpsb
cwtl
cmp
inc
xor
jecxz
add
inc
push
push
fmulp
fwait
pop
mov
inc
pop
inc
xor
loop
dec
add
mov
dec
test
bnd
pop
add
mov
hlt
adc
imul
and
in
mov
cmp
iret
cli
rorl
mov
out
inc
mov
gs
pop
rcr
rcll
arpl
jecxz
lods
xchg
test
rolb
xor
add
flds
xchg
dec
pop
push
push
mov
inc
xchg
jbe
sub
scas
stos
cs
leave
sahf
out
sbb
mov
dec
or
incb
aam
int
clc
aam
clc
in
cmp
push
stos
cmc
xchg
jl
or
xchg
and
adc
xor
out
fwait
cwtl
fs
jge
popf
lods
mov
fwait
js
xchg
mov
xchg
jb
cmp
inc
and
dec
vcmpps
loope
movsb
gs
scas
aaa
and
mov
push
bound
mov
repz
lods
iret
dec
pushl
lods
js
xchg
nop
clc
xchg
dec
pusha
movsl
add
fs
das
bound
inc
lock
fcmovb
in
inc
cwtl
adc
outsl
stos
insb
icebp
imul
pop
xor
dec
fs
adc
jecxz
mov
and
test
into
enter
aaa
je
mov
out
cmpsl
loop
loope
cli
in
and
popa
rorb
jbe
movsl
mov
xor
in
adc
rorb
test
xor
aaa
pop
mov
scas
mov
cli
add
loope
jmp
pop
xchg
mov
jmp
test
jecxz
mov
push
xchg
addr16
and
aaa
sub
xchg
xchg
xor
mov
add
stc
jnp
sbb
cmpl
aaa
sbb
push
fmull
cmovno
push
test
imul
sub
sbb
sarb
stc
mov
in
or
inc
jae
inc
subb
adc
sbb
cmp
push
imulb
mov
xor
shl
xorb
icebp
iret
enter
jns
cmp
pop
stc
dec
xchg
or
addr16
scas
out
xor
and
aam
repz
add
cs
loop
movsl
xor
add
xor
adc
and
repz
test
or
test
xchg
jp
imul
imul
xchg
add
iret
loop
inc
cmpl
test
test
lret
and
xchg
xchg
pop
loop
aad
push
out
dec
scas
or
inc
xchg
mov
jbe
mov
pop
iret
jo
sbb
mov
std
std
xchg
in
decl
push
add
mov
data16
lods
cmp
cltd
pop
xchg
sub
jg
aaa
test
int
addr16
and
push
fwait
mov
ljmp
cmpsl
pop
insl
ljmp
add
scas
fs
add
adc
sbb
or
inc
add
inc
xor
jge,pn
xor
push
mov
shrl
loopne
pop
mov
lods
clc
lret
push
outsl
repnz
xlat
mov
lcall
dec
pop
jmp
sarb
imul
mov
push
scas
shlb
pop
xor
outsl
inc
mov
fwait
xchg
int3
outsb
rep
adc
fwait
rolb
jg
stos
jb
or
inc
lret
and
jecxz
pop
and
xchg
cmpsb
adc
shrl
sbb
xlat
or
and
cmp
push
into
fwait
push
pop
arpl
add
push
outsl
frstor
jne
mov
loope
imul
jle
mov
aaa
sub
inc
jbe
or
pusha
out
cmc
mov
movsb
into
mov
push
xchg
mov
sbb
fneni(8087
test
in
lds
mov
ja
notb
dec
dec
inc
les
jge
ljmp
sub
adc
movsl
xchg
inc
jl
cmpb
cmp
imul
lret
out
mov
stos
sub
int3
pushf
out
jp
xchg
enter
mov
adc
push
sub
mov
inc
add
imull
dec
xor
mov
push
jp
jl
mov
fs
gs
shll
daa
leave
cmpsl
into
ret
dec
into
test
mov
sbb
mov
mov
inc
sbbb
outsb
imul
rcrl
mov
out
or
leave
inc
push
push
mov
inc
sbb
out
popa
popa
daa
sbb
push
adc
mov
inc
xor
outsb
xor
jg
mov
dec
dec
cmpsl
lahf
mov
lods
add
adc
mov
addb
das
push
ds
and
cltd
leave
hlt
cs
ret
lock
out
dec
stos
cwtl
call
jb
sbb
lds
idiv
cmp
xor
sbb
adc
mov
cmp
inc
popf
mov
fbstp
lods
nop
aad
ljmp
pop
inc
sub
dec
fadds
pop
xor
or
sbb
push
mov
and
mov
shrl
xor
and
push
pop
hlt
mov
arpl
xchg
adc
mov
dec
insb
sub
cmc
js
imul
test
inc
pop
jnp
xchg
inc
jnp
pop
mov
cmp
mov
and
outsl
mov
adc
inc
mov
adc
les
xchg
subb
jbe
adc
push
fiaddl
add
pop
movsb
or
mov
sbb
dec
push
cmp
xchg
les
ds
jo
push
adc
mov
fistps
xchg
push
or
xchg
add
cmp
sbb
gs
cli
scas
and
inc
xor
xchg
roll
aam
loopne
mov
jp
xchg
leave
sub
adc
in
dec
xchg
rorb
loopne
imul
sbb
and
iret
push
mov
fcomi
sub
or
sbb
int3
scas
mov
push
mov
sbb
dec
shr
test
call
xor
daa
push
hlt
push
out
es
sbb
pushf
int3
outsb
insb
lock
bound
jle
lea
pop
mov
inc
sub
jg
jl
pop
test
movsb
add
cmp
shlb
mov
pop
in
inc
dec
mov
pop
shrb
and
lret
data16
mov
pop
mov
adc
cwtl
mov
mov
imul
dec
xor
aad
push
fisubs
aas
inc
sub
or
out
les
add
mov
scas
mov
and
push
je
adc
push
cld
mov
aas
enter
add
xor
mov
mov
adc
lods
push
jbe
and
xchg
fmuls
dec
xchg
or
and
adc
stc
shll
jle
sub
push
loopne
ret
lret
xor
decb
repnz
pop
pop
cld
scas
jge
pop
jne
inc
cmpsl
xorb
pop
out
scas
or
addr16
jns
lds
es
push
add
popf
pop
push
movsb
add
jmp
call
mov
or
test
shrb
in
add
jae
mov
stos
and
enter
adc
shll
sti
in
jo
test
lea
outsb
add
mov
mov
jbe
mov
xor
fsubl
xchg
fistps
in
mov
pop
mov
data16
and
mov
inc
xchg
or
enter
test
mov
jae
pop
push
pop
pop
out
iret
ret
xor
mov
mov
cli
iret
sar
xchg
cmp
mov
inc
jae
push
jp
jnp
movsb
adc
push
sbb
enter
rclb
stc
lcall
xor
inc
mov
lods
dec
mov
push
ljmp
cmp
or
es
push
cwtl
into
mov
test
jo
mov
fldt
fisttpl
add
das
and
inc
sub
data16
adc
adc
roll
xchg
inc
adc
cld
pop
fbstp
cmc
sbb
or
rcrb
pop
push
popa
add
cli
cmp
fisubl
mov
push
push
add
test
test
mov
arpl
jne
sbb
mov
repnz
inc
in
cmpsb
js
jg
lods
pop
fucomip
js
dec
mov
cmpsb
shrl
push
mov
push
fldl
lods
imul
ss
and
mov
shrl
jmp
pop
inc
jae
test
push
pop
push
rorb
out
sbb
cwtl
xchg
mov
push
xchg
rol
inc
sbb
and
ficompl
sahf
pop
xor
xchg
out
sbb
inc
push
lods
pusha
pop
jns
mov
jmp
jo
je
dec
xor
xor
ljmp
sbb
clc
adc
adc
push
leave
cmp
daa
enter
jp
addr16
mov
and
pop
xlat
shrl
adc
sbb
sbb
js
mov
sbb
dec
into
in
jmp
push
notl
stos
out
mov
cvtps2pd
mov
lahf
cmp
jo
icebp
cmc
scas
jno
neg
cmp
or
les
lret
out
fidivl
push
fstpl
adc
or
popf
ret
pop
inc
or
test
repnz
dec
outsb
into
lods
enter
sbb
or
insl
push
or
adc
jp
adc
add
jae
movsb
pushf
sbb
lret
clc
dec
aas
push
lods
je
lea
call
lock
daa
push
inc
sti
mov
xchg
pop
outsl
mov
adc
aaa
jp
add
sub
rol
xor
out
ds
dec
push
loopne
sti
into
mov
js
mov
inc
incl
out
jecxz
sbb
add
lret
pop
add
aaa
loop
rcrl
cs
fldl
cmp
lea
push
cmp
cld
and
or
or
fsubs
dec
cmovne
imul
outsb
mov
jle
adc
push
fistpll
mov
cmc
fistpll
xchg
push
popf
outsb
fiadds
jl
popf
xchg
int3
out
mov
je
pop
add
dec
sub
adc
pop
mov
ljmp
jnp
cmpsb
jp
inc
inc
sub
xchg
pop
inc
jnp
es
notb
shll
mov
enter
cli
pop
int3
mov
imul
add
frstor
xor
add
scas
xchg
jbe,pn
outsb
mov
pop
fimuls
or
mov
out
fldenv
mov
mov
push
push
test
mov
ja
icebp
cli
mov
sbbb
or
pop
pop
xor
rorl
adc
pop
adc
stos
das
pop
fsubl
mov
or
mov
stc
incb
push
les
sbb
add
mov
xchg
mov
push
xchg
jnp
or
mov
xor
ret
int3
adc
stos
mov
xchg
pop
bound
leave
out
popa
add
leave
sti
add
fnstenv
push
xchg
daa
pop
and
clc
arpl
in
mov
add
leave
jbe
and
outsb
pop
pusha
sarb
mov
stos
loopne
and
pop
and
xor
jbe
outsb
cmp
adc
jg
adc
lahf
pusha
cltd
dec
mov
mov
xor
sti
sbb
mov
pop
or
shl
mov
adc
cmp
lock
lods
xchg
dec
pusha
sbb
xorl
loop
adc
or
repnz
push
pop
out
icebp
mov
inc
shrb
xchg
jl
adcb
out
not
ljmp
mov
scas
sahf
push
gs
lahf
xlat
inc
inc
pop
es
aaa
mov
or
jge
pop
and
je
xchg
add
inc
xchg
daa
jnp
push
mov
xchg
dec
xchg
jg
loop
cld
insb
mov
test
xchg
and
mov
mov
lea
cld
cmp
pop
cmp
aad
jle
fstl
adc
push
out
and
adc
cwtl
cmc
add
std
in
inc
jg
roll
mov
sub
inc
adc
inc
std
push
shll
mov
shlb
nop
lock
sub
jo
adc
adc
and
out
cwtl
pop
sub
jno
mov
cmpsb
pop
dec
xchg
xchg
cmp
adc
adc
ficoml
cwtl
inc
mov
imul
popf
adc
and
sarl
les
xchg
inc
mov
jns
mov
addr16
stos
xchg
add
push
xorl
int3
pop
sarl
daa
in
cs
pop
xor
mov
fwait
add
fmuls
mov
insl
hlt
push
out
push
adc
xchg
mov
int
ret
and
ret
loopne
dec
jl
into
addb
nop
clc
or
xor
xchg
pop
adc
dec
dec
and
lock
adc
in
std
xlat
in
jg
mov
ss
pop
jl
pop
cmpsl
xchg
ret
add
jge
dec
pop
ficoml
jge
pop
adc
fwait
cs
fisttpl
dec
push
mov
adc
cli
mov
gs
and
dec
xor
xor
mov
mov
mov
push
movsl
gs
add
dec
xchg
aam
inc
xor
pop
sub
data16
mov
js
dec
dec
into
cs
aas
lret
fsubrp
adc
out
fs
dec
fsts
pop
loop
inc
xchg
and
add
jg
es
lcall
mov
add
jmp
inc
pop
rolb
jmp
pop
or
cs
clc
adc
cmp
in
adc
add
pop
loopne
add
add
mov
and
test
leave
call
xor
fcmovnu
fiaddl
adc
mov
dec
inc
xchg
push
dec
cltd
mov
push
dec
lock
push
xchg
mov
mov
outsb
ret
xchg
mov
loop
les
mov
sub
es
fsubrs
mov
jl
rolb
sbb
push
or
inc
jno
iret
imul
or
sbb
dec
and
jb
movsb
inc
dec
imul
xchg
xchg
pop
in
add
mov
leave
mov
pop
es
gs
decl
pop
mov
xchg
mov
inc
popf
das
or
and
pop
cmp
and
negb
cmc
cmc
pop
or
ret
iret
ljmp
and
jg
push
xor
fisubrs
sbb
idivl
push
shrb
sahf
stc
sub
sub
imul
pusha
stc
dec
jl
mov
inc
lret
xor
pop
cltd
outsb
lods
insb
addr16
shrl
push
xor
mov
imul
call
fnstsw
xor
das
cmp
push
pusha
int
std
pop
stos
daa
add
sub
push
cmp
test
testb
xchg
cmp
call
lcall
xor
push
and
mov
sub
pop
fs
xchg
jo
pop
add
loope
sub
out
xchg
ja
cmp
inc
pop
fdivrs
mov
sub
dec
xor
into
ss
mov
or
nop
xor
scas
push
sub
ss
jmp
mov
test
repnz
daa
nop
sbb
xor
dec
repz
mull
xchg
test
or
lahf
mov
mov
in
add
sbb
mov
lds
aas
jb
rcrb
jo
in
cmp
out
adc
mov
push
lods
xchg
push
mov
cmp
fsubr
sub
pop
repz
fcompl
jbe
sbb
mov
mov
inc
pop
mov
pusha
mov
pop
loopne
sbb
jecxz
dec
add
xchg
or
cmpsl
hlt
and
xchg
pop
in
arpl
and
int3
mov
mov
dec
xchg
sub
cltd
mov
aad
xchg
idiv
shlb
xchg
inc
rcl
sbb
nop
sbb
mov
mov
mov
test
mov
mov
ret
sbb
adc
fldenv
fldt
lahf
add
push
push
pop
jo
mov
rorl
sti
fs
popf
iret
cmc
rcrl
in
ret
or
fmul
mov
das
movsb
bnd
cmpsl
push
add
movsl
push
mov
cmp
push
sbb
notb
mov
xor
das
loop
adc
jo
xchg
jne
shlb
mov
incb
xchg
pop
repz
fwait
shll
sub
movsb
and
nop
fcmovnbe
dec
xchg
insb
arpl
stos
push
xchg
jnp
sub
in
adc
dec
es
lods
js
stos
adc
mov
aaa
mov
sbb
mov
or
out
test
xchg
xchg
xlat
mov
not
or
inc
inc
clc
out
test
insb
subl
push
xchg
movsl
mov
negl
cwtl
pop
pusha
push
mov
shll
shl
lods
fidivrs
pop
loope
pop
dec
lss
push
fsin
aas
inc
dec
lods
or
push
xchg
inc
aad
imul
xchg
lea
imul
std
jecxz
ret
out
inc
icebp
icebp
leave
int
cmp
and
inc
ds
push
sbb
test
dec
dec
pop
cmpsb
mov
incb
mov
in
add
lcall
pushf
jo
jmp
push
cli
push
xor
aad
pop
mov
add
leave
lock
insl
aas
push
movsl
dec
and
out
loop
shlb
xorl
add
cli
xor
and
xor
jbe
mov
jbe
test
mov
add
aas
ds
mov
fimull
sti
pop
pop
je
sbb
inc
and
loop
xor
daa
jae
pop
push
out
fs
movsl
pop
jno
popf
jl
ss
ret
dec
scas
mov
mov
push
loop
cmp
push
daa
and
cmpb
outsl
iret
add
push
inc
xor
push
and
daa
push
xchg
inc
mov
mov
test
mov
and
cld
pop
gs
inc
adc
ljmp
bound
ret
jns
pusha
sarb
jb
sub
movsl
jns
fmuls
sahf
dec
int3
sub
push
dec
outsb
out
jnp
sub
mov
inc
shll
rorl
or
in
pop
mov
jne
and
lret
cmp
mov
mov
addl
dec
push
adc
pop
aaa
popf
pop
scas
push
jb
xchg
xor
stos
or
fisttpl
std
icebp
test
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
pop
fdivl
lret
aam
jp
sbb
jp
pop
inc
xorb
xor
mov
pushf
mov
cltd
cmp
movsl
add
sbb
rcr
xchg
ret
jo
incl
xchg
add
xor
sahf
cli
pop
jnp
adc
insl
mov
test
sbb
int3
mov
jnp
jl
mov
add
sub
sbb
xor
lea
pop
mov
sti
clflush
push
movsb
mov
test
lret
stos
mov
pusha
and
adc
jns
adc
ds
mov
or
or
xor
cmp
cltd
repz
add
imul
lock
xchg
std
int3
fiaddl
ja
in
repz
decb
mov
loop
shrb
mov
cltd
add
jbe
jmp
cld
nop
push
movsb
xlat
and
jecxz
rclb
out
es
jecxz
push
insb
outsl
scas
aaa
mov
add
dec
fildl
and
loop
aas
test
adc
add
add
inc
ljmp
dec
cmp
xor
cmp
push
lods
sbb
push
xchg
out
push
cltd
repz
cmp
sbb
es
push
aas
dec
gs
sbb
push
and
pop
test
sahf
inc
push
incl
fisttps
mov
jecxz
movlps
ror
mov
adc
and
ljmp
out
xchg
and
push
inc
cmp
ret
cmpl
adc
mov
inc
cs
loopne
adc
insb
rcll
shll
jne
add
lock
or
dec
inc
sbb
jl
or
sti
mov
loope
scas
mov
pop
arpl
mov
aad
fnstsw
ja
xchg
add
stc
loope
rcll
ds
inc
fisttps
cmpsb
push
cmp
addr16
icebp
xchg
sahf
adc
jmp
xchg
pop
cmpsl
neg
fadds
jne
lcall
jg
sbb
out
push
xchg
mov
mov
mov
repnz
addr16
mov
fs
push
iret
and
lock
lretw
sbbl
out
add
mov
dec
pop
aaa
mov
push
cmp
fisubl
dec
pop
mov
leave
bound
sub
push
mov
or
loopne
or
mov
sbb
in
lret
out
cmp
rclb
add
sub
rorb
adcb
into
outsl
xchg
cli
imul
fldt
sub
das
gs
adc
and
daa
loop
and
sbb
leave
mov
inc
je
sub
inc
fsubrp
outsl
mov
pop
int3
lret
test
popa
push
inc
mov
and
int3
inc
jns
sub
jg
pop
push
test
loopne
stos
or
and
stos
movsb
aas
mov
popl
mov
or
jl
pop
sarb
jl
mov
and
fs
and
cmpsl
clc
inc
mov
sbb
pop
sbb
mov
push
pop
sbb
inc
jae
xchg
out
les
pop
aad
stos
pop
int3
clc
push
iret
mov
push
dec
mov
es
outsl
jmp
inc
mov
jbe
pop
dec
sbb
pop
sarb
xchg
mov
jg
mov
dec
xor
scas
jle
fcompl
test
loopne,pt
lahf
mov
adc
xor
cltd
roll
push
add
xchg
scas
outsl
mov
inc
dec
test
out
cld
adc
inc
xchg
sbb
xchg
pushl
repz
inc
cmp
jbe
add
xchg
outsb
rol
push
pusha
or
seta
test
clc
mov
mov
inc
xchg
and
and
shrl
fsubl
cwtl
jecxz
or
cld
ror
xor
xor
adc
inc
call
cmp
das
push
test
jecxz
testl
leave
dec
mov
push
test
mov
popa
inc
xor
adc
lret
lods
loope
pop
dec
sbb
lods
mov
scas
in
cld
outsl
xchg
lcall
cmpl
push
mov
or
test
stos
xchg
dec
faddl
lock
pop
outsb
xchg
les
fidivs
xchg
xchg
sahf
fistl
fnop
pop
clc
dec
in
in
mov
fucomp
stos
aaa
sub
mov
cmp
dec
ret
jb
xor
hlt
sub
and
jnp
sub
stos
push
push
stos
xor
stc
or
popa
vpminsw
xchg
rclb
test
stc
cmpsl
cs
lret
es
js
fldcw
jno
adc
pop
in
dec
fs
inc
cmp
push
cltd
repz
xchg
les
push
xor
pop
push
fucomip
fwait
pop
lods
mov
lods
pushf
aaa
jo
in
clc
push
out
stos
xchg
shl
lods
mov
sarl
or
movsb
popf
arpl
cmp
pop
cs
icebp
stc
push
repnz
pop
arpl
nop
loope
add
sbb
ret
test
adc
cld
fs
outsb
inc
mov
inc
or
add
rcll
sub
mov
fiaddl
lods
xchg
aas
inc
mov
shrb
ljmp
sub
std
xlat
xor
add
jp
push
dec
sub
mov
mov
mov
dec
fcoml
movsb
cmpsl
xchg
insl
lock
xor
and
or
sub
cltd
inc
cmp
stos
jns
sub
cmpsb
test
xor
scas
in
push
or
bound
push
mov
loopne
ror
mov
enter
xor
das
push
outsb
mov
js
and
dec
cmp
sub
in
imul
scas
fdivrp
mov
fstl
psrad
neg
popa
pop
sbb
loopne
rcll
vshufpd
jo
mov
or
and
rcll
ja
push
sub
dec
fsubl
sbb
jge
stos
fistpll
mov
inc
xchg
inc
call
and
fidivl
int3
ss
gs
cmp
hlt
shlb
xchg
inc
movsl
xchg
rolb
xchg
mov
cmp
addr16
pushf
sub
pop
dec
xor
mov
pusha
clc
incl
aad
rclb
sahf
xlat
mov
mov
ljmp
insb
sub
add
cwtl
jnp
adc
sbb
daa
push
inc
dec
mov
cwtl
vfrczsd
imul
xlat
sub
divl
outsl
mov
stos
add
cmp
movq
jge
cmpsl
das
jl
xchg
sub
ja
push
adc
xchg
repz
pop
add
aam
push
push
lahf
mov
cmp
and
inc
outsl
inc
in
loopne
xchg
enter
cwtl
sbb
xor
fs
stos
das
sbb
repz
pop
lods
cld
pop
mov
dec
mov
add
xchg
cmc
ss
scas
or
inc
in
xchg
lret
mov
loope
icebp
sub
outsl
jmp
add
in
mov
leave
adc
popf
out
pop
stos
dec
mov
lea
rcr
mov
or
repnz
daa
repnz
cmpsb
fst
mov
add
jmpw
add
add
inc
inc
dec
pop
lds
sti
icebp
mov
das
fnstsw
and
push
adc
mull
movsl
mov
push
adc
pop
cmc
loop
adc
cmpsb
aas
xor
dec
fcompl
and
jno
insl
cmp
add
sub
imul
xchg
iret
lret
xor
jo
adc
mov
jbe
inc
jno
hlt
sub
mov
sarl
sahf
outsl
mov
cmp
xchg
lcall
loopne
jno
repnz
bound
sbb
push
mov
addr16
push
sbb
push
out
pop
cwtl
and
outsb
xchg
outsb
mov
jb
mov
push
gs
inc
shll
jo
imul
movb
enter
cmpsb
fisttpll
adc
ret
mov
ror
pop
inc
pop
ja
scas
dec
pop
dec
jmp
xor
adcl
or
icebp
pop
int
sahf
push
push
cmp
cmp
in
subb
mov
adc
inc
mov
jp
add
mov
and
test
lea
ljmp
adc
clc
out
inc
jecxz,pn
pop
xor
loopne
cltd
dec
jle
fstpl
loope
mov
jle
or
add
and
arpl
and
out
out
sti
cmp
xchg
mov
xchg
dec
gs
imul
insb
fidivrs
repnz
jns
leave
dec
mov
mov
cmp
and
sbb
mov
fcomip
outsl
inc
or
add
movsl
add
and
stos
or
and
and
adc
into
mov
sbb
and
movsb
dec
mov
aad
adc
icebp
push
adcl
stos
push
jg
rcrb
test
mov
mov
xchg
xor
movsl
xchg
aas
xchg
inc
push
and
push
dec
pop
ja
xor
enter
shll
push
mov
add
pop
and
mov
cmp
test
out
lods
inc
fdivrs
inc
lods
les
xor
add
insb
inc
loop
sbb
rclb
sbb
mov
push
pop
lea
or
outsl
inc
sbb
xchg
je
push
es
loop
ds
and
repz
popa
lock
or
xchg
xchg
sar
sub
xor
jae
or
lret
stos
push
pop
jae
cld
stos
and
adcb
imul
mov
mov
iret
xchg
xlat
or
jl
push
sbb
adc
into
mov
pop
inc
test
sbb
jmp
test
ret
sub
mov
out
fimuls
nop
scas
insl
or
pop
xchg
iret
sub
sub
mov
sar
pop
ja
addr16
cmpsl
sub
pop
sub
xchg
shl
jno
inc
loope
dec
scas
out
je
and
mov
dec
nop
xchg
pop
mov
insb
sbb
aad
jmp
mov
jae
cs
xor
mov
mov
adc
or
cmp
cltd
and
add
pop
push
fcomps
jbe
insl
imul
push
pop
adc
mov
push
cmp
sbb
push
push
push
push
out
movsl
jne
dec
mov
or
jp
mov
loopne
or
sbb
dec
pop
mov
cmp
iret
pushf
dec
dec
pop
ficompl
mov
lcall
inc
fdivrs
inc
jno
add
imul
add
in
mov
adc
aad
pushl
fstl
mov
sub
rclb
aaa
push
pop
out
push
inc
loop
mov
mov
inc
jmp
repz
jo
addb
rcrl
xchg
sbb
pop
sbb
inc
rorl
and
jle
mov
xor
lods
arpl
dec
movsl
mov
ficomps
fisubrs
out
rcrb
data16
int3
aad
inc
pop
repnz
adc
cltd
cmp
loopne
adc
sub
sbb
sub
push
cmp
ret
mov
jne
dec
cwtl
xchg
rcrl
xchg
xor
push
jl
iret
outsb
cmp
pop
aad
hlt
push
push
cmpsb
pop
subl
pop
jae
shll
insl
dec
inc
xor
out
push
popa
cmp
incb
ljmp
mov
inc
cmpsb
sti
movsb
inc
push
jb
into
imull
clc
push
pop
iret
pop
mov
imul
jl
jne
jb
mov
jbe
int3
push
lods
popa
nop
bound
fcoms
gs
pop
call
cs
in
mov
jmp
xlat
xchg
fs
sbb
aas
fldt
fbld
insl
imul
xlat
adc
mov
ljmp
clc
andl
inc
flds
ljmp
or
dec
and
jbe
shll
lcall
ret
adc
or
push
sub
mov
jge
seto
mov
adc
fildll
inc
test
enter
mov
mov
and
lods
loop
push
clc
and
imul
cmp
je
sbb
add
int
xchg
pop
sbb
push
loopne
jnp
xchg
inc
jb
jne
icebp
fs
andb
jl
outsl
into
or
movsb
ror
and
pop
mov
add
loope
sbb
push
lahf
imul
mov
decb
stc
mov
cmp
sbb
or
cmc
shll
add
mov
into
cld
and
test
cs
leave
jno
and
inc
sbb
pushf
rcll
mov
dec
test
shrb
iret
pop
push
rep
pop
inc
fsqrt
jae
dec
int
pop
test
cmp
stos
clc
test
xlat
push
outsl
pavgw
ss
and
and
enter
cmp
out
hlt
shrb
bswap
lret
out
jo
test
subb
in
popa
or
sbb
sbb
icebp
or
popf
test
jg
sub
movsb
push
mov
or
neg
jmp
mov
insb
xor
fimuls
addr16
lock
dec
inc
fdivrl
mov
pop
mov
shrl
xor
imul
shlb
adc
aaa
nop
addr16
loope
xor
ret
in
hlt
and
aas
sbb
push
out
add
jmp
add
sti
kmovq
mov
adc
scas
sub
fsubl
push
rorl
les
aas
pop
add
mov
fwait
push
xor
and
lcall
outsl
and
mov
push
add
sub
aaa
insl
xlat
xchg
loop
jbe
lods
adc
sbb
in
cmc
imul
xchg
inc
int3
mov
iret
fwait
lock
add
subb
repnz
dec
mov
stc
loope
imul
mov
pop
icebp
je
popl
insl
pop
mov
sbbb
mov
add
cltd
sbb
aaa
adc
sub
outsb
inc
dec
jnp
or
shrl
fstl
sahf
jnp
pop
fistpll
sbb
mov
sub
fsub
es
inc
out
imul
sbb
pusha
sub
and
fadds
cmc
imul
mov
adc
movsl
mov
mov
add
stos
out
jmp
xchg
rol
dec
iret
push
xor
mov
or
ret
push
imul
sub
repnz
jle
jne
mov
imul
dec
call
cld
adc
dec
out
cmpsb
dec
dec
jo
jl
mov
lea
push
cmc
mov
out
scas
mov
cmpsl
xchg
inc
clc
push
imul
add
or
push
push
push
lea
push
mov
jmp
fnstsw
mov
pop
mov
repz
shr
and
ljmp
jle
aad
sbb
adc
push
fmul
jno
sub
lret
jne
std
mov
jb
xor
adc
cmp
pop
test
ret
cmp
mov
popa
push
push
sbb
incb
push
jge
dec
shr
cli
adc
mov
jae
pop
inc
fcmovnb
cli
or
cmp
in
fstps
sbb
loopne
call
lea
inc
jge
leave
shl
nop
mov
int3
notl
ftst
mov
pop
inc
sub
ja
cmpsl
mov
imul
icebp
fwait
ds
pop
cli
aas
mov
insl
lock
leave
rclb
dec
filds
scas
fcoml
inc
js
push
sbb
mov
sbb
adc
mov
divb
arpl
in
pushf
ljmp
pop
in
jp
insl
lods
mov
adc
fildl
pushf
add
mov
fisttps
std
aad
sub
inc
fdivl
mov
inc
push
adc
jl
mov
lcall
mov
sti
xor
gs
in
mov
and
inc
movsl
inc
add
lods
insb
adc
dec
stos
jmp
sahf
cmpsl
mov
and
jnp
cld
inc
cmpsb
xor
pop
sub
sbb
adc
mov
ss
loope
fcmovnu
jnp
stos
fsubrl
inc
stc
mov
cmpl
jle
xor
or
mov
scas
xchg
lock
gs
loop
dec
test
mov
push
adcb
push
sbb
push
sbbb
insl
push
stc
lret
hlt
mov
into
ja
xorl
enter
pop
scas
sub
arpl
outsb
pusha
andl
loope
hlt
inc
push
and
mov
inc
dec
and
rolb
xchg
pop
sbb
dec
fnstcw
xchg
pop
mov
xchg
jge
xor
rclb
fs
xchg
jg
repnz
sbb
out
add
jne
insl
call
xchg
push
mov
mov
jg
aad
cli
jl
xchg
daa
dec
mov
repz
imul
push
dec
mov
lock
not
push
cmc
stc
push
je
dec
jnp
and
mov
outsb
adc
filds
cmpsb
aaa
lahf
scas
jmp
int
and
push
inc
fwait
adc
sbb
pxor
inc
cmp
and
insb
fwait
icebp
scas
mov
mov
aad
jo
mov
into
sbb
in
jle
out
std
xchg
push
enter
pop
xchg
push
or
cmc
out
test
and
notb
nop
imul
fidivs
lea
xor
icebp
leave
icebp
pop
or
cmpsl
in
inc
test
sbb
push
aam
jns
or
push
xchg
sbb
addr16
insl
and
mov
or
cmp
push
shll
mov
lods
jno
in
jle
outsb
push
icebp
jne
sub
rcll
sub
sub
and
es
adc
stos
mov
test
enter
outsb
xchg
repnz
push
dec
xchg
or
imul
js
inc
out
subb
cmp
ror
or
add
stos
mov
pop
or
sarb
shlb
push
dec
push
dec
xchg
jge
jo
mov
lret
out
cwtl
push
pushl
shlb
das
inc
xor
pushf
out
push
xchg
dec
lahf
aas
dec
xor
jl
loop
dec
mov
mulb
mov
movnti
fisttpll
pop
cmc
nop
xor
xchg
sub
push
cmp
xchg
aam
add
jb
imul
je
daa
rcrl
cmp
inc
mov
mov
jp
xchg
out
int3
call
mov
enter
and
imul
cltd
sbb
xchg
xchg
mov
inc
sub
mov
jbe
fs
pushf
mov
dec
adc
xchg
jle
les
addr16
mov
cmc
pop
sti
imul
mov
xor
dec
pop
dec
repnz
mov
lds
cmp
repnz
lcall
das
int3
pop
inc
cmpsl
out
inc
or
sbb
inc
cmc
add
pop
add
arpl
inc
sub
orl
test
xchg
mov
xchg
sbb
adc
adc
push
cmp
mov
and
faddl
cltd
test
lea
test
stc
insl
fnstenv
test
mov
mov
pusha
xchg
leave
fildll
jo
xchg
sbb
push
add
int
fstpl
int3
inc
sub
mov
dec
stos
jg
inc
in
rcl
push
and
and
pop
pop
ret
loope
cmp
test
mov
xorl
sub
adc
fildl
push
stos
scas
popf
sub
lret
repz
cld
xchg
clc
adc
movsl
leave
or
aaa
stc
fldt
inc
mov
xchg
xchg
xor
sahf
loop
dec
xor
rorl
je
or
jecxz
xchg
dec
cli
jno
xor
sahf
pop
pusha
cmpsl
loopne,pn
and
jb
hlt
ret
jge
adc
cmp
adc
and
leave
icebp
mov
or
js
xor
pop
and
jge
pushf
and
jle
pop
jo
sti
jns
mov
test
add
push
lret
dec
jns
pop
cmp
push
mov
mov
mov
cmpsb
dec
pop
out
insl
push
fsubrs
in
fbstp
jns
pushf
loop
adc
jg
or
out
les
in
scas
bound
xchg
xor
xchg
mov
mov
or
ret
mov
jo
mov
dec
adc
cltd
cmp
in
mov
jg
jl
inc
aas
push
cmp
xchg
mov
xor
cmpsl
test
xchg
or
jle
lods
add
addr16
dec
push
jns
mov
mov
push
jae
mov
mov
xchg
adc
icebp
std
and
jecxz
push
mov
push
mov
jne
out
xlat
stos
mov
das
mov
and
mov
pop
push
roll
and
fisubrl
aaa
push
enter
pop
or
aam
insb
fimuls
pop
sub
mov
jbe
push
xchg
mov
or
lock
call
jns
loopne,pn
mov
in
or
enter
aas
mov
setne
mov
lods
or
data16
negb
xchg
insb
mov
mov
or
fsubl
andb
mov
mov
std
xlat
cmp
clc
pop
sbb
mov
cmp
jne
pop
xlat
pop
jns
jmp
dec
cmc
adc
outsl
rcr
ficoml
std
sti
pop
push
scas
scas
cld
popf
add
js
mov
fdivl
or
out
pop
adc
call
xchg
clc
stc
outsl
shll
and
shr
orl
pop
orl
stos
push
lea
lahf
pop
ret
push
subb
popa
pop
inc
lods
jmp
imul
xchg
xor
inc
test
sub
les
and
add
pusha
pushf
xchg
adc
mov
mov
xchg
test
idivl
adc
int
call
lock
fnsave
mov
xchg
xchg
imul
jae
jo
mov
test
or
xor
mov
jmp
mov
cmpsl
pushl
shlb
das
pop
or
mov
inc
jp
ja
inc
movsl
xor
jae
push
or
push
test
xchg
pop
inc
push
and
lcall
xor
push
cltd
xorl
lahf
in
inc
mov
inc
scas
daa
mov
add
adc
fyl2xp1
outsl
push
fidivrl
push
xchg
loop
loopne
inc
mov
mov
sub
jo
out
mov
jne
push
cmp
pop
fnsave
mov
jg
jb
fisubrs
pop
sub
xchg
or
and
inc
jmp
xor
je
mov
mov
test
out
daa
cmc
or
test
shrl
fs
sarb
jae
ret
mov
popf
add
mov
fmul
pusha
cmc
aam
or
sbb
pop
mov
je
loopne
jns
sbbb
xor
pop
aad
xchg
mov
cmp
fs
cmp
xchg
jbe
jmp
lahf
sti
mov
mov
sbb
sbb
pop
outsb
and
js
stc
cltd
movsl
insl
add
push
cmpsl
mov
mov
jae
enter
xchg
and
je
mov
hlt
or
mov
outsl
sbb
pop
shr
fs
fisttps
xor
daa
add
imul
out
mov
sahf
ror
imul
repnz
push
int3
bswap
push
ljmp
push
push
lret
jle
scas
push
jmp
test
nop
push
xor
repz
adcl
pop
mov
push
xchg
dec
or
jae
cld
in
fidivrl
leave
dec
in
pushf
shll
xchg
jge
sahf
xor
repz
rolb
inc
pusha
mov
outsb
fildl
daa
mov
adc
and
xchg
cld
xchg
test
sbb
out
sarb
jno
pushf
dec
repnz
jae
in
out
data16
pushf
aaa
xor
jb
inc
cmp
pop
jo
jl
adc
or
push
add
adcl
xchg
mov
cli
sbb
in
add
jo
outsb
mov
rcll
outsb
dec
jmp
mov
adc
ss
dec
add
jmp
test
xlat
sbb
mov
sbb
xchg
dec
faddl
xchg
inc
in
jns
into
movsl
ret
andb
xchg
aas
sti
or
mov
jbe
je
sub
dec
mov
pop
inc
pusha
lahf
movsb
ja
arpl
xchg
mov
sbb
push
test
mov
pop
jl
out
popa
mov
shlb
cmp
mov
pop
jmp
insl
cmp
add
out
cmp
gs
push
and
add
popa
jecxz
in
push
les
push
popl
cltd
xchg
push
adcb
push
mov
pop
or
les
mov
mov
pushf
jmp
shrl
cmpsl
cmp
icebp
testl
out
xor
aas
lret
test
and
xchg
inc
pusha
lahf
loop
int
mov
mov
xor
out
or
mov
push
xor
cmpsl
adc
ljmp
mov
mov
gs
nop
xchg
pop
push
add
dec
stos
aam
lret
jge
push
jbe
pushf
test
loopne
mov
popf
adc
jne
cmp
jl
mov
push
mov
push
xor
cmp
mov
cmp
adc
shll
cmp
out
lcall
repz
scas
stos
pop
pop
pushf
or
les
ds
mov
flds
lcall
sub
jl
xchg
jno
ror
lahf
fidivrl
mov
sbb
mov
fs
out
inc
pop
ss
test
cld
push
jns
add
sub
mov
mov
subl
xchg
pop
nop
sbb
jns
xchg
fidivl
in
xor
adc
scas
pop
mov
pop
clc
and
fldl
mov
inc
mov
and
outsb
pop
fcomps
mov
sub
cltd
out
iret
or
mov
add
shrl
sub
jmp
jno
push
sarb
repz
cmpsl
out
nop
jp
aam
xor
xchg
inc
pusha
in
iret
mov
aad
sar
push
ljmp
cld
pop
gs
sti
fidivl
mov
push
pushf
fldl
inc
pop
adc
pop
aad
cmp
cs
sarl
mov
frstor
pop
jne
jg
xlat
in
mov
pop
mov
pusha
lods
pop
inc
ss
mov
adc
aad
or
push
cmp
xor
std
dec
inc
test
xchg
adc
xlat
cmpsb
imull
fsubs
jnp
inc
jp
xor
sbb
cmp
iret
test
sti
push
mov
orl
daa
fistps
or
xor
xlat
shl
xchg
and
cmp
xlat
scas
rclb
pop
popf
clc
je
movsb
sbb
push
add
popl
or
xchg
adc
mov
aaa
daa
ja
lret
dec
clc
fnsave
and
cltd
loop
mov
dec
pop
aas
mov
test
add
stc
and
popa
xor
inc
test
clc
iret
movl
pop
mov
push
shl
xchg
jno
jle
and
xchg
and
nop
in
cli
ljmp
adc
dec
inc
jbe
push
or
xor
mov
popf
popa
inc
test
loopne
push
imul
or
fdivs
or
shlb
or
ficoms
mov
jae
outsl
mov
arpl
jno
fisubl
cmp
sub
xchg
push
js
stos
das
test
mov
insl
addl
and
in
jmp
popf
mov
mov
shll
scas
fwait
in
or
mov
cmpsl
repz
mov
add
dec
xchg
movsl
mov
xchg
mov
adc
inc
ja
iret
dec
lahf
pop
in
pop
mov
scas
sub
lds
dec
pop
pop
rcrl
ret
in
xor
xor
sub
test
aad
mov
jbe
lret
rcrl
sahf
adc
in
stos
jl
xchg
aas
repnz
shll
in
and
xor
jge
push
inc
movsl
mov
scas
rcrb
lret
shlb
call
and
mov
push
pop
jmp
test
out
scas
dec
lret
out
int
sbb
std
ja
popf
fbstp
sahf
adc
cmpsl
sub
sbb
mov
sub
sbb
and
push
inc
ret
sbb
sub
inc
pop
call
mov
sub
dec
mov
insl
mov
xchg
data16
cld
shll
dec
inc
mov
inc
in
or
or
scas
xchg
fwait
push
out
fsubrs
fbld
pop
mov
cmp
pushf
sbb
out
lods
aad
cmp
mov
imul
aaa
cwtl
push
pop
mov
dec
inc
hlt
lods
stos
out
ljmp
lods
loopne
loop
jns
sbb
mov
bound
test
mov
push
aas
inc
pop
cmp
mov
adc
leave
cmp
fldt
test
cmpsl
xchg
lea
sub
jb
decl
dec
and
push
inc
aad
call
pop
outsl
adc
dec
test
or
or
jb
pop
xorl
xor
mov
sbb
ljmp
sti
in
mov
fwait
sbb
iret
push
lahf
dec
insl
cmpsl
jae
loope
ljmp
dec
movsl
jl
push
push
vpackuswb
stos
faddp
shll
jnp
stos
mov
sub
andb
cli
jl
xor
stos
xlat
ret
stos
iret
pusha
mov
push
in
sbb
pop
outsb
jo
pop
push
leave
icebp
push
jb
xor
mov
mov
test
xor
mov
add
and
push
mov
loop
gs
inc
push
mov
arpl
gs
div
flds
jnp
push
push
xchg
mov
shll
xor
jmp
sarl
ja
rcr
push
cmc
sub
or
jle
and
mov
push
sbb
xorb
push
mov
rcl
loop
jae
loopne
mov
jecxz
int3
xor
mov
arpl
popa
or
ljmp
cwtl
sbb
or
repz
mov
mov
xorb
mov
push
xor
cs
jne
test
mov
and
iret
iret
cmp
mov
cmpsb
xchg
stos
inc
into
clc
pusha
xchg
xor
cmp
adc
mov
pop
inc
int3
cmp
mov
mov
ret
mov
pop
jo
sub
adc
in
mov
push
inc
popf
rclb
cs
imulb
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
xor
jp
pop
jp
jb
fnsave
jns
add
mov
das
inc
sub
ss
cmpsb
adc
mov
mov
xchg
ja
leave
sbb
lds
fucomip
pop
nop
pop
popa
in
or
pop
in
sub
jno
sbb
xchg
fwait
pop
and
mov
xorl
pop
xor
rclb
mov
pop
pop
shrb
cs
hlt
scas
mov
stos
dec
out
adc
pop
negb
stc
pop
cmp
or
movsb
push
pushf
sbb
scas
inc
jne
lock
jne
fdivs
lahf
dec
ljmp
sub
fldln2
xor
jmp
xor
and
mov
xchg
mov
mov
cmp
in
int
cwtl
movsl
out
sub
jge
das
sahf
rorl
sbb
subl
inc
push
sbb
fwait
xor
js,pt
jbe
cmpsb
and
icebp
enter
mov
xor
sbb
mov
pop
push
jae
stc
or
dec
inc
xor
pop
xlat
xchg
inc
adc
push
imul
cwtl
xchg
scas
lock
sub
jg
or
cmp
dec
lea
out
notl
mov
cld
cmp
xor
add
or
into
and
push
pop
adc
adc
mull
cmp
int3
scas
push
cmpl
xor
repz
cltd
mov
mov
jo
cmc
repnz
mov
adc
sahf
lds
cwtl
out
mov
mov
jmp
push
sub
cmp
movsb
sarb
bound
or
adc
daa
arpl
dec
jge
jns
push
cmp
scas
or
mov
or
mov
pop
mov
jo
inc
adc
push
mov
rcr
testl
jmp
or
pop
dec
fnsave
sbb
jo
jnp
sub
adc
xchg
pop
rcll
pop
sub
mov
enter
xchg
in
arpl
lret
daa
fnstenv
daa
cmp
lods
rcl
sbb
mov
fistpll
mov
enter
jmp
mov
in
sbb
xor
aas
lods
mov
xchg
mov
cli
mov
scas
cmp
stos
cmpsl
repz
inc
mov
outsl
pop
test
pop
loop
ds
pop
push
pusha
jns
mov
cmc
out
ficompl
cmp
sti
cmp
cmpsb
mov
fchs
sub
push
test
mov
and
int
mov
mov
inc
and
in
pop
mov
mov
inc
repz
lea
cmpsl
pop
xchg
push
idivl
sbb
addl
adc
add
add
add
and
inc
mov
subl
setle
sti
pop
in
nop
sub
sub
lods
jl
sbb
push
or
insb
divb
lcall
mov
je
dec
xor
iret
and
mov
les
sbb
clc
pop
adc
shrb
std
or
or
dec
and
ljmp
mov
mov
pop
jp
hlt
mov
push
lock
cli
dec
sahf
mov
xor
add
arpl
orl
or
jmp
out
shrl
lds
repnz
or
cld
inc
out
inc
or
es
iret
cmp
push
rcr
mov
and
add
aaa
call
and
or
std
sahf
sti
loopne
gs
xchg
mov
jmp
decl
xor
xchg
pusha
rclb
inc
lods
out
roll
inc
pop
cltd
arpl
sbb
cmp
out
loop
pop
pop
jmp
movsb
mov
int
ss
std
pop
xor
push
inc
inc
in
lods
nop
enter
dec
int
inc
xor
cmpsl
jne
xchg
cmp
fs
sbb
mov
lock
cmc
jge
mov
push
xchg
les
imul
aaa
pop
lcall
cmp
mov
sub
ret
loop
mov
inc
pop
pop
aaa
xchg
cld
push
fldl
ret
dec
lds
enter
cmp
cmpsl
ret
testl
in
lods
xchg
scas
lret
test
mov
jle
scas
lahf
push
in
icebp
mov
cld
lock
and
fimuls
dec
mov
and
sbb
sub
mov
mov
mov
sarl
test
cmp
adc
jb
jmp
and
sbb
movsl
pop
jecxz
pop
pop
inc
lea
pop
sub
jg
inc
inc
pop
xor
hlt
mov
adc
leave
rcrb
imull
leave
push
je
leave
adcb
push
sarl
mov
imul
fisubs
gs
daa
addl
outsl
cltd
rcll
and
test
out
xchg
mov
or
mov
fsts
cmp
aas
stc
es
adc
sbb
xor
dec
or
dec
push
arpl
aam
ljmp
lcall
dec
sti
popf
mov
das
cli
jg
mov
push
lcall
xchg
or
pop
lea
orl
or
pop
mov
call
fnstsw
mov
lcall
adc
arpl
iret
test
xlat
pop
loop
pop
out
std
stos
jmp
mov
xchg
outsl
mov
mov
test
punpckhdq
jne
popf
push
and
data16
insl
xor
cs
xor
bound
xor
imul
add
sub
mov
cld
xor
push
repnz
adc
outsl
icebp
insl
mov
je
push
stos
mov
pop
mov
pop
pop
shlb
dec
mov
sbb
pop
dec
insl
daa
pop
repz
xor
cmpsb
rcrb
add
pop
imul
aas
test
ja
mov
repz
int
sbb
sbb
dec
ljmp
movsb
cld
call
fsubrs
and
cmpsb
mov
pushf
jmp
pop
scas
movsl
mov
call
int3
scas
dec
ja
js
out
cs
adc
pop
xchg
mov
mov
push
sub
out
dec
cli
js
sbb
xor
jno
daa
es
icebp
cmp
cmp
mov
mov
fwait
lods
push
adc
notb
arpl
scas
jg
add
gs
fldenv
push
loope
cmp
mov
pop
fcmovb
aaa
mov
dec
sub
xor
pop
xchg
das
clc
add
popa
mov
imul
hlt
or
jp
mov
mov
dec
push
mov
xchg
adcb
call
arpl
sub
inc
aaa
sbb
ds
add
popf
pop
jmp
lret
fisttps
and
mov
jbe
into
xor
lret
push
call
loope
jbe
sbb
mov
push
in
and
sub
cmc
notb
call
pop
lods
cmc
xchg
pop
imul
shll
mov
cmpsb
mov
fsubrl
push
rclb
xor
or
aaa
add
jb
into
loop
dec
mov
in
test
xchg
sub
test
push
out
adc
mov
mov
push
cld
repz
test
pushf
mov
xchg
lahf
or
sbb
mov
clc
xor
shlb
and
jmp
xor
xchg
test
add
lret
xchg
aas
cltd
sbb
test
jmp
shll
test
int3
data16
add
arpl
add
jge
push
sub
mov
jg
push
pop
or
pop
xor
and
in
stos
pop
push
jbe
stc
and
cmpsl
cmp
add
jg
jnp
gs
xor
pop
fsubr
mov
push
xchg
mov
dec
push
push
jnp
sahf
int3
add
jbe
xlat
nop
dec
push
sbb
push
leave
pop
lret
adc
outsb
and
cltd
adcb
or
sti
lods
or
repz
xor
sbb
xchg
pop
cmp
inc
xor
popf
out
and
testb
pop
jnp
inc
jno
divb
clc
das
xor
mov
lock
js
jb
ret
leave
add
fsubrp
add
mov
dec
lahf
aad
push
loopne
jp
push
xchg
jge
js
lds
dec
cmp
xchg
test
inc
pop
rorb
add
insl
mov
cmp
adc
cmpsb
sub
xor
mov
cmp
call
shll
xchg
cmp
mov
push
mov
aaa
orl
mov
add
shl
scas
jne
xchg
inc
je
pop
scas
pop
mov
push
fsubrl
xchg
insl
mov
insb
mov
rorb
cmp
dec
and
call
cmp
loopne
clc
lcall
sbb
sub
sbb
fidivs
jbe
adc
adc
icebp
ror
ret
stc
stc
pop
mov
cmpsb
jmp
rclb
sbb
insl
inc
roll
mov
aam
mov
cmpsl
fnstsw
aad
xor
sub
std
xchg
mov
pop
xor
pop
jge
lret
and
cmp
jno
bound
movsl
push
inc
ret
data16
in
lods
fstps
aaa
fidivl
jns
popa
outsb
lods
jp
jecxz
cli
jnp
repnz
ljmp
stc
stc
fidivs
add
or
es
daa
pop
shll
jp
inc
ds
xor
test
and
mov
or
sti
cmp
or
xor
adc
and
jl
adc
xchg
in
add
add
sub
xchg
push
jae
mov
mov
outsb
cmp
sub
jmp
mov
shlb
push
mov
in
mov
mov
and
inc
pop
inc
cmp
outsl
sbb
lahf
jno
jno
sahf
out
sbb
iret
and
xchg
outsb
bound
stos
hlt
xor
add
pushf
stos
jge
fwait
cld
pop
or
and
push
or
jle
idivb
sub
jl
hlt
sub
sbbl
sub
out
add
jo
cmp
lret
pop
cmpsb
pusha
push
lcall
jl
lea
pop
icebp
cmpsl
mov
mov
mov
or
mov
sbbb
pop
pusha
scas
xor
push
or
aaa
cli
pop
and
sbb
pop
adc
jns
xor
add
mov
sub
cmp
pop
loope
xchg
mov
outsl
rcll
xchg
js
jg
and
jmp
push
push
cli
or
mov
ss
imul
mov
into
xchg
std
mov
frstor
syscall
push
fabs
leave
mov
mov
push
mov
sub
shlb
and
mov
lret
add
adc
daa
pop
lahf
dec
push
add
mov
push
sub
ret
inc
xor
mov
cld
mov
push
in
mov
into
test
jmp
movsl
enter
pop
and
push
enter
inc
xor
je
adcl
scas
insl
addl
add
sub
add
int
repz
fisttpll
pop
movsb
pushf
pushl
pop
mov
les
insb
fsts
push
mov
cmpsl
mov
jg
movsl
sbb
int
in
or
cmpsb
jmp
out
fcmovne
push
mov
lcall
pop
jl
add
inc
sbb
and
ret
jecxz
shlb
in
or
mov
xchg
cs
xor
fcoms
shrl
ljmp
xor
jnp
mov
test
fidivl
aad
ficompl
fnsave
mov
mov
loope
inc
and
xor
popa
in
mov
push
test
popa
add
outsl
shl
mov
cwtl
lds
mov
inc
adc
movsb
js
cwtl
mov
sbb
lcall
mov
jecxz
cmp
sub
or
test
inc
jne
cs
mov
lods
xchg
lods
or
cmp
mov
push
lret
test
jle
sub
cmp
es
fcoms
int3
popf
mov
jae
pop
rcl
xchg
sub
setb
fistpll
es
push
repz
xchg
aad
mov
lret
xchg
jae
or
jmp
or
xchg
dec
pop
jge
shr
gs
cmpsb
push
hlt
ss
lock
mov
cltd
xchg
out
test
cltd
lock
fs
jmp
inc
xor
fwait
dec
js
cld
xchg
nop
mov
push
movsb
hlt
scas
outsl
sub
jl
mov
mov
add
rcr
xchg
ja
adc
cmp
sbb
pushf
clc
or
imul
subl
rol
sarl
popa
out
in
icebp
pop
les
fisttpl
sbb
std
subb
fbstp
mov
sti
imul
movsb
mov
cltd
sub
sbb
cmp
std
lds
xor
shlb
in
lods
mov
or
inc
sbb
pushf
add
lahf
ljmp
sbb
mov
cmc
insl
or
sahf
push
int3
aad
jb
mov
movsb
mov
popf
mov
push
lcall
mov
jp
adc
in
sub
dec
incb
enter
or
fwait
loopne
mov
pop
mov
jbe
out
loopne
cmc
add
mov
test
sbbl
in
mov
jb
bound
fwait
mov
frstor
insb
xor
mov
jb
jno
push
mov
pop
mov
lds
jae
jmp
cwtl
fiadds
jo
mov
insb
jo
test
into
mov
jp
cs
jnp
lock
jb
fs
dec
test
daa
xor
in
pop
xchg
jge
lcall
adc
sti
daa
in
cmp
in
dec
fs
js
stc
out
jbe
mov
mov
cmp
or
pushf
push
mov
std
stos
cmp
adc
mov
lcall
fs
daa
pop
add
cmp
jo
imul
stos
pop
mov
xor
mov
cmp
xor
jno
mov
cmp
pop
into
into
sub
mov
fsts
loop
add
imul
stc
dec
rcrb
cmp
adc
jbe
iret
les
push
into
push
cmp
cmp
mov
sub
ds
rorl
and
mov
pop
xor
and
lods
les
inc
or
or
pop
add
sub
movsb
mov
mov
push
lret
sbb
aam
add
cwtl
test
dec
out
lods
aas
ljmp
data16
add
jns
dec
insb
sub
xchg
pop
cmpsb
or
xlat
stos
fildll
jnp
adc
and
lahf
call
iret
xor
lahf
sarb
scas
pop
push
out
movsb
lds
mov
xor
mov
cmpsb
sarb
xor
cmp
pop
ret
fldl
int
cmp
lcall
loope
cmpl
xchg
inc
in
loope
and
inc
and
movsl
lea
inc
dec
scas
push
push
std
jbe
pop
mov
xchg
or
adc
repnz
lock
mov
jns
icebp
aaa
sbb
out
cmp
repnz
dec
mov
mov
xchg
xchg
and
fwait
sub
fdivrs
gs
dec
xor
dec
mov
or
mov
rolb
jns
xchg
sbb
in
cwtl
inc
lods
stos
pushf
sbb
mov
push
ret
cmc
pop
xor
enter
mov
fsubrs
fidivl
fbstp
mov
lods
pop
ds
notl
sbb
pushf
mov
jecxz
lea
mov
push
test
mov
dec
inc
adc
mov
mov
and
out
adc
xor
aaa
lret
xor
mov
add
xchg
lods
dec
jae
mov
fimuls
out
aam
pop
sub
xchg
ja
pop
inc
mov
cmp
jl
test
fisttpl
out
leave
mov
sub
xchg
hlt
or
mov
mul
loop
lcall
lcall
xor
fwait
cs
mov
adcl
movsl
sti
add
push
test
xor
cmp
jne
jle
or
sbb
push
or
jp
cmp
movsb
lahf
mov
lock
adc
enter
movsb
movsl
test
addr16
loope
lret
xchg
je
scas
push
out
mov
mov
push
gs
cmpsb
fs
movsb
and
push
rclb
jb
cld
mov
cmp
in
push
add
jmp
enter
xor
and
inc
mov
shlb
pop
fdivs
call
xchg
divb
push
cmp
cmpsb
add
movsl
icebp
addr16
mov
in
es
out
mov
sti
pop
xchg
push
and
aad
dec
mov
mov
mov
into
pop
or
int
push
rcl
mov
cmpsb
dec
inc
daa
fs
iret
dec
loop
test
in
test
jno
cld
pusha
cld
dec
adc
add
jmp
cmc
insb
shrb
jnp
cmc
test
sbb
mov
mov
and
xchg
inc
sbbl
lea
sbbl
sti
or
mov
loopne
es
ss
cmpsb
dec
shll
out
and
sbb
dec
jge
pop
pop
leave
lea
pop
insl
jne
pop
loopne
fwait
inc
add
jmp
insl
ret
jne
add
mov
jns
iret
inc
push
mov
mov
dec
sub
addr16
call
and
insl
pop
xchg
inc
cmp
xchg
fcomp
fsubp
cmp
jmp
std
js
repnz
push
std
adc
add
or
adc
stos
in
pop
pop
mov
inc
sbb
out
push
sbb
stos
leave
in
js
lea
jle
fs
push
xlat
lods
jg
les
jne
sub
mov
push
cwtl
mov
dec
fs
movzbl
push
pop
cmp
adc
into
sub
icebp
sub
mov
cmp
shr
xor
push
adc
sub
inc
mov
popf
dec
inc
add
or
inc
xchg
fdivrs
mov
inc
pop
ret
pusha
repz
imul
orl
and
fwait
mov
xorb
aad
mov
call
mov
test
movsl
mov
in
in
dec
enter
adc
xchg
cmpsl
mov
shl
push
pop
mov
lret
loope
lahf
push
or
cli
and
push
popl
xor
pop
xchg
rclb
cwtl
jle
jnp
stos
push
movb
sbb
inc
jo
mov
push
ficomps
xor
mov
loop
push
mov
test
pusha
jecxz
inc
iret
ja
js
cmp
lock
adc
out
dec
sub
mov
sahf
push
jp
push
or
sub
fwait
inc
mov
lret
pop
jle
sbb
out
std
shrb
lret
pop
fdiv
shl
inc
mov
jae
dec
inc
movsl
in
mov
mov
xchg
int
in
mov
mov
sbb
jo
jmp
mov
and
mov
int3
push
dec
repnz
leave
sub
cmp
xchg
std
add
push
pop
test
cmp
mov
int
outsb
and
inc
cmp
loopne
jae
inc
test
sbb
and
push
pop
cmp
mov
adc
call
pop
mov
mov
pop
test
cmp
notb
lods
inc
popa
in
repz
out
arpl
gs
pop
enter
fcompl
pop
int
aad
loope
mov
mov
push
dec
jge
mov
mov
or
data16
shlb
movsb
cmp
inc
pushf
outsl
lcall
pop
shl
loopne
sub
lret
inc
bound
fisttpl
scas
stos
adc
icebp
popf
xchg
xchg
js
add
popa
fcoms
iret
imul
ret
cmp
rorb
pop
aam
adc
mov
jmp
out
and
movsb
fnstsw
and
ljmp
mov
push
mov
lds
push
add
addr16
xor
jbe
mov
xchg
pop
fcmove
divl
inc
mov
rorl
push
iret
loop
sub
pop
clc
notb
mov
in
pop
sbb
sub
aad
loopne
lcall
pop
shll
sbb
or
or
dec
add
pop
pop
add
lret
lds
push
dec
mov
inc
data16
jmp
in
nop
cmpsl
cli
jle
sub
add
fstpl
push
xchg
mov
mov
push
cmc
bswap
push
shrb
push
loopne
out
cmp
cmp
xor
xchg
bswap
movsl
repnz
cmp
test
cmp
in
out
scas
mov
jge
xchg
leave
mov
add
jno
es
fsubrl
add
leave
in
mov
mov
push
fwait
scas
std
popf
jecxz
xchg
or
daa
int3
or
aas
jns
out
jae
cmpsl
test
ja
and
sub
xor
and
jb
mov
out
push
vunpcklps
fisubs
daa
int3
mov
push
jmp
pop
mov
xchg
in
leave
push
jb
punpckhwd
rorb
mov
add
insb
bound
and
std
ror
loop
popf
faddl
adc
push
jp
push
jae
mov
xrelease
sarb
out
test
dec
mov
int3
aaa
inc
ficoml
stos
loopne
lcall
bound
ret
stos
jo
cmp
mov
lret
mov
xchg
push
adc
pusha
mov
dec
dec
xor
push
out
pop
fs
sbb
pop
mov
adc
push
sub
sar
mov
outsb
rcrl
cmc
loopne
mov
sbb
out
in
push
mov
sbb
or
enter
lods
or
test
out
in
and
xor
or
or
cmp
inc
arpl
imul
sbb
sub
or
out
xor
fldenv
mov
sbb
lahf
shlb
repnz
and
or
and
unpcklps
iret
sbb
call
shlb
and
imull
jl
sbb
push
inc
jle
cld
cmp
xor
push
push
push
cmpb
xchg
lret
insb
pop
push
out
insl
adc
xor
insb
pop
xchg
mov
pop
or
aaa
pop
xor
pusha
int3
gs
add
rclb
repnz
mov
and
or
adc
fwait
sti
or
cmp
in
add
add
je
sub
addr16
pop
pushf
adc
js
stos
mov
in
xor
pop
jle
mov
sahf
incb
scas
dec
add
ss
mov
mov
push
adc
xchg
or
sbb
into
iret
ss
jne
data16
mov
mov
push
hlt
mov
jl
test
pushl
mulb
adc
sub
subl
fsubrl
or
and
fimull
test
push
mov
lds
jnp
mov
inc
mov
enter
jns
std
jle
cmpsl
add
stos
mov
inc
jg
rcrl
iret
icebp
mov
pop
sub
sbb
jae
ret
lret
inc
add
or
cld
cmpsb
sub
ffreep
hlt
fwait
mov
test
aad
shrl
jae
mov
push
imul
xchg
popf
movsl
call
insl
push
pop
mov
sarb
cmp
sbb
jbe
xor
mov
hlt
pop
int3
jmp
aad
cmp
pop
imul
dec
arpl
mov
push
movsb
push
lcall
adc
push
into
jns
fisubs
cmc
xchg
mov
movsb
int3
push
mov
call
pop
hlt
cmp
popf
je
or
lds
dec
sbb
mov
jmp
fstpl
lods
sahf
ficompl
loopne
cmc
cmc
push
xor
pop
rcl
lods
cmp
xlat
mov
mov
testl
pop
imul
in
insb
scas
xor
add
ja
div
js
and
adc
lds
push
mov
mov
mov
jnp
pop
lret
xchg
push
into
loope
insb
jo
scas
clc
sub
adc
jp
adc
pop
mov
out
push
adc
xchg
shlb
xchg
add
xor
jle
mov
incb
nop
andb
push
cmp
adcb
scas
in
int
or
pop
jo
mov
cmp
out
jo
cld
xchg
adc
mov
rolb
stc
popa
pop
cmp
scas
pop
push
sub
gs
pop
sahf
mov
xor
pop
cmp
lock
mov
lods
je
in
jmp
mov
orb
add
sbb
stc
mov
in
mov
cmp
xor
ficomps
sub
jg
sbbl
lods
test
sbb
lcall
in
jnp
adc
ficomps
movsl
xchg
ds
mov
notb
xchg
sbb
insl
stos
jecxz
arpl
inc
ja
or
and
jp
inc
pop
inc
fnstsw
xchg
cmp
roll
jnp
push
test
inc
mov
je
jge
xchg
outsl
xor
test
add
cs
pop
push
enter
push
push
mov
sub
jbe
lahf
xchg
scas
mov
xchg
js
aad
fisubrl
repz
les
in
cmp
inc
cmp
aam
cltd
pop
push
rcl
jp
cli
add
fdivrl
sub
cmpsl
imul
ljmp
iret
xor
xchg
jb
test
pop
or
popf
cmp
jge
in
jbe
inc
fldt
or
mov
cmc
cli
push
lret
push
or
fistpll
iret
rol
bsf
jl
inc
movsl
in
mov
jns
aam
xchg
push
pop
test
sbb
mov
push
rcr
sub
lods
dec
and
ret
mov
push
mov
add
inc
dec
adcb
mov
subl
in
call
mov
ja
cmp
jl
xor
loopne
mov
hlt
or
sarb
jns
jge
ds
dec
pop
out
call
xchg
push
lret
xlat
pushf
lods
aad
daa
cmp
fsubrl
mov
jno
les
lock
std
fisttpl
cwtl
scas
xchg
pop
or
mov
shl
add
push
arpl
inc
repz
das
jmp
mov
jmp
fwait
aas
cli
and
subl
nop
inc
es
scas
out
in
mov
lea
xor
into
and
in
xchg
popf
sub
dec
xchg
adcl
xlat
inc
lahf
mov
sti
scas
add
fistpl
scas
push
inc
sub
inc
sbb
repz
scas
out
enter
movsbl
xor
stos
adc
lods
mov
pop
das
sbb
add
push
jle
or
ficomps
xchg
pop
js
fs
ljmp
aam
and
pop
clc
jl
lods
sbb
pop
cs
out
add
xor
jmp
in
add
cmp
inc
imul
cld
std
push
dec
dec
and
das
dec
xlat
lock
shll
mov
mov
test
call
xchg
adc
and
pop
sbb
test
jge
adc
cltd
xchg
mov
push
dec
jo
cs
mov
lahf
sahf
pop
mov
xchg
pcmpgtd
mov
xchg
into
add
xchg
push
pop
add
jle
xor
out
fisttpll
imulb
bound
mulb
stc
clc
cmp
mov
je
lret
jl
mov
pop
pop
cltd
call
mov
sub
fsubp
jo
add
jmp
push
loop
out
leave
lahf
stos
mov
xor
out
mov
jmp
sti
mov
mov
cmp
dec
pushf
sbb
dec
xchg
fnsave
jne
sbb
test
out
push
pop
jmp
shlb
mov
test
loope
push
mov
mov
sbb
lahf
xor
sti
out
adc
nop
pushf
xor
cwtl
enter
pop
jmp
test
and
shrl
scas
les
mov
hlt
loopne
cmc
adc
testb
in
push
jbe
mov
imul
test
push
mov
std
nop
push
xchg
push
jecxz
pop
fnstenv
jp
mov
jo
sub
stos
stc
shll
subl
pop
jb
pop
push
out
decl
mov
xor
push
lcall
sbb
mov
aas
sub
mov
push
mov
sub
mov
dec
sbb
test
cmc
pop
addl
jae
imul
sub
lret
or
or
ret
sbb
movsb
addr16
movaps
shll
clc
test
loopne
sub
fcoml
dec
sub
mov
cmp
xlat
xchg
or
ljmp
lret
mov
dec
stos
dec
fidivrl
inc
xchg
push
jecxz
inc
std
adc
xchg
imul
addr16
add
sub
inc
lea
aad
in
mov
jo
add
cmp
pop
add
jmp
push
sbb
int3
xchg
pop
push
lcall
icebp
inc
cmp
call
sub
stc
and
mov
int
sub
add
jbe
lcall
sbb
mov
xchg
fldt
and
mov
jmp
sbb
lcall
cmpsb
pop
sbb
pop
xchg
hlt
mov
cld
mov
inc
push
inc
and
movsbl
inc
push
lods
xchg
pop
xchg
or
cmpsl
mov
loop,pt
mov
pop
fcoml
pop
dec
adc
and
add
xchg
psubsw
enter
mov
testl
push
mov
lret
lea
xchg
loop
repz
add
jbe
jae
jecxz
rol
pop
pop
ret
xor
in
fimuls
mov
std
mov
and
jb
add
inc
daa
jb
xchg
dec
xor
inc
rorl
cld
imul
sti
fcoml
fcomip
cmp
inc
pop
fisubrl
and
lock
fs
sbb
cmp
cwtl
cmp
ja
push
xchg
fsubr
jnp
inc
mov
inc
xor
divb
outsl
push
cld
push
cmpsl
adc
add
mov
pop
lds
adc
dec
scas
cmp
shr
mov
in
inc
sarb
push
mov
cld
inc
mov
lods
rclb
pop
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
aam
scas
jp
or
jp
mov
lar
mov
adc
clc
jno
in
mov
aad
shlb
sahf
ljmp
orl
xchg
add
inc
cmp
push
dec
ds
and
mov
inc
pop
mov
mov
out
mov
push
aas
mov
sahf
pop
bound
loope
pop
test
inc
sub
push
cmp
and
jns
lods
test
insl
sarl
iret
nop
out
icebp
ret
add
xorl
imul
xchg
xor
shll
mov
add
and
roll
inc
out
cmc
or
sbb
hlt
pop
stos
and
xchg
insb
jmp
push
cmp
xchg
jge
and
adc
std
xchg
jecxz
daa
cmpsb
adc
mov
fsubrp
enter
sub
notl
mov
add
test
clc
push
aas
inc
iret
xchg
movsl
enter
and
or
jne
sbb
daa
cwtl
jle
jbe
aam
and
mov
loope
mov
lods
cmp
je
cmp
rcll
push
mov
popa
lods
nop
test
xchg
clc
jle
ja
mov
or
movb
push
sarl
or
cmp
adc
nop
icebp
inc
nop
aad
pusha
inc
sub
dec
pop
ret
sub
xor
pop
jbe
xchg
cmp
cld
sub
or
inc
out
push
rorb
sub
sbb
pop
ljmp
and
inc
mov
ret
push
push
push
mov
frstor
popa
and
mov
add
add
inc
xchg
lret
add
mov
cli
xchg
jecxz
cli
lods
cmp
mov
mov
out
filds
push
jnp
popa
jae
add
cmpsb
xchg
lea
or
xchg
inc
xor
cmpsb
cmpsl
and
xchg
mov
cmp
lods
insb
or
mov
movsl
xchg
rcll
and
mov
push
xor
ss
push
insl
xchg
sarb
push
lcall
xor
shrb
imul
fwait
pop
fistpl
ror
inc
test
sbbl
pop
jmp
dec
movsl
mov
sub
pop
cmp
dec
hlt
mov
pop
shrb
es
xchg
pop
cltd
sub
cld
jecxz
jl
movsl
es
dec
popa
lret
mov
sti
add
loop
int
mov
inc
inc
mov
inc
ljmpw
inc
fs
cmp
in
repz
push
xchg
lcall
icebp
sub
cmpsb
in
fcom
shll
inc
push
push
dec
dec
rorb
xor
ret
nop
mov
mov
mov
icebp
aaa
es
mov
jge
xchg
jno
jecxz
add
push
sbb
iret
sub
push
mov
jg
cwtl
adc
jno
test
and
or
or
popa
js
js
jno
rcrl
shll
cmp
bound
mov
adc
stos
xor
sub
rcrb
jns
push
sub
inc
jp
insw
inc
sub
pusha
pusha
pop
adc
sbb
data16
fldt
mov
dec
sbb
fwait
int3
and
mov
fdivl
iret
mov
add
mov
notb
or
and
xor
dec
outsl
outsb
cld
imul
shlb
mov
in
aaa
and
fnstsw
pop
je
jns
push
inc
leave
loop
mov
pop
jle
or
xchg
and
cmp
ret
push
pop
sub
repnz
adc
icebp
jb
cmc
push
test
push
nop
pushw
pop
mov
ljmp
movsl
push
push
les
or
movsl
repnz
lods
fsub
loop
pop
ffreep
jno
jb
mov
aad
sub
dec
push
fcmovne
mov
mov
pop
lahf
lret
shld
nop
cmp
bound
mov
loopne
in
sbb
test
fsubs
sbb
mov
jbe
fisubs
add
leave
mov
push
ljmp
mov
xchg
sbb
loopne
push
lea
push
sbb
jg
push
sbb
xchg
rcr
add
int
outsb
xchg
cmp
or
cmp
mov
mov
and
test
call
add
xchg
je
cmp
cltd
push
xchg
inc
test
lcall
mov
mov
les
pop
mov
popf
out
scas
add
loope
pop
cmpsl
stos
push
vmwrite
adc
test
pop
dec
pop
sub
sub
or
icebp
sub
aaa
adc
push
fdivl
push
push
xor
sahf
call
in
cs
cmp
add
dec
push
or
sbb
mov
push
data16
lods
in
pusha
mov
adc
bound
popa
lahf
sti
cwtl
data16
rorl
jno
dec
jb
push
adc
pop
add
lea
and
rcrl
cmc
repnz
ds
sub
dec
pop
in
xchg
pop
or
mov
mov
mov
movsb
push
sub
xor
mov
jnp
sub
inc
fdivl
ljmp
movsb
xchg
inc
stc
int
int
jp
dec
idivb
fcompl
mov
add
loope
mov
lods
or
mov
stos
push
dec
loope
or
xchg
push
aad
enter
xchg
jle
jg
lods
mov
adc
xchg
pop
inc
loop
rcrl
jp
lret
push
mov
gs
sti
dec
jo
aad
jle
pop
or
pop
icebp
ret
int
out
in
enter
and
sub
bound
pop
sub
jp
sub
ss
inc
bound
fldcw
sub
jne
sbb
sbb
arpl
pusha
xchg
adc
jno
jl
mov
xchg
pop
pop
pop
push
and
xchg
hlt
and
loopne
rcrb
and
pusha
sahf
mov
movsl
hlt
arpl
rcl
adc
popa
rorl
ljmp
int3
mull
inc
aas
push
add
aad
cmp
bound
sti
shlb
enter
mov
adc
popf
push
loope
pop
addr16
jp
push
popf
xchg
js
mov
arpl
addl
and
add
cmp
jmp
lcall
xor
mov
xchg
pushf
out
adc
sub
jo
push
xchg
ret
xor
sbb
fcmovnb
add
or
cmc
scas
test
cmpsl
or
das
les
push
ljmp
push
stos
jae
mov
add
dec
ljmp
mov
ret
dec
pop
or
xlat
add
pop
rorl
movsb
test
jg
stos
cmpsb
adc
test
xchg
sub
gs
xor
mov
lea
dec
sbb
inc
in
or
push
scas
xchg
inc
lcall
xor
sub
mov
xor
lret
loope
mov
adc
stos
bound
dec
jne
loope
movsl
mov
inc
pop
jo
mov
sub
pop
repnz
lcall
dec
xor
popa
mov
into
xor
dec
mov
mov
pushf
pop
in
hlt
outsb
rolb
mov
inc
sarl
mov
outsl
jno
cmpl
cmp
decb
pop
pusha
lret
push
les
insl
dec
jl
test
aad
test
jmp
cwtl
sub
dec
adc
cmc
mov
cmp
jl
xchg
bound
loop
mov
scas
ret
leave
imull
or
mov
out
aas
adc
pop
inc
fimull
jae
add
sahf
sbb
or
pop
fbld
test
cli
mov
or
arpl
mov
or
test
fbstp
imul
xchg
adc
enter
outsb
cmp
pop
mov
jle
repnz
pusha
mov
mov
xlat
ja
inc
xor
shlb
lcall
push
into
js
mov
mov
sti
xor
mov
nop
and
adc
shlb
jno
out
mov
pop
mov
lret
push
lret
adc
stc
in
mov
xor
inc
shl
push
pop
push
jl
jns
xchg
jb
push
jle
inc
and
clc
inc
mov
jns
gs
mov
jns
dec
pop
xchg
imul
xchg
dec
push
lods
adc
arpl
mov
lea
rolb
arpl
mov
sub
sub
subb
sbb
in
mov
inc
cs
int3
jge
fcmovnb
fwait
xchg
mov
mov
inc
adc
shlb
adc
add
add
scas
test
lret
movsl
ja
sbb
mov
leave
mov
cmp
mov
cmp
xor
repz
cltd
sub
jne
fisubrs
out
gs
push
sub
adc
lcall
and
and
lea
in
pop
f2xm1
insb
mov
mov
sarl
sbb
jmp
push
aas
ja
lods
inc
cmp
notb
xor
sbb
dec
cmpsl
mov
out
adc
test
sahf
iret
and
pop
jle
fisubl
sti
adc
push
inc
pop
cmp
mov
in
int3
mov
adc
aad
fincstp
and
aad
clc
popf
adc
test
cmp
cmp
sub
lods
addr16
sbb
std
dec
mov
pop
xorl
out
jge
rorl
xchg
or
push
popf
inc
and
jno
add
mov
mov
push
in
xchg
mov
sub
inc
adc
loope
mov
mull
push
dec
mov
push
and
faddl
cmp
xorl
jne
jo
push
sub
cmpsl
insb
cmp
sub
sbb
push
push
outsl
addb
out
test
sti
movsb
insl
adc
sar
mov
and
cmp
fwait
pop
mov
jg
xor
mov
sub
lret
cltd
add
dec
pop
aad
movsb
cmp
je
test
rolb
cmp
lret
popf
cmc
dec
pop
shl
clc
fiaddl
inc
test
push
fisubs
lock
ja
and
ss
je
enter
jb
cmp
mov
mov
int
jl
imul
cmc
jno
pop
mov
daa
or
mov
pop
ret
mov
or
fstpt
aad
shld
adc
add
das
xchg
mov
mov
mov
add
cmc
js
dec
popf
scas
xor
cmpsb
addr16
bound
xchg
in
adc
test
neg
pop
mov
dec
test
sbb
nop
push
mov
sbb
std
ret
loop
cmp
lea
movsl
arpl
fcomi
aam
pop
mov
stos
mov
mov
push
je
loopne
iret
insb
cmc
pop
sub
lret
out
mov
fdivp
out
lret
or
enter
inc
rcl
mov
jge
adc
sbbb
les
nop
cmp
mov
je
adc
push
or
inc
mov
push
std
stos
fstpl
mov
adc
dec
adcb
or
mov
add
lcall
pop
leave
add
lock
out
leave
out
mov
stos
add
fcomi
push
sbb
andl
mov
aam
sub
xchg
rcll
jbe
dec
out
nop
cmp
mov
xchg
or
std
mov
jmp
xor
mov
inc
das
bound
aaa
mov
adc
iret
mov
mov
imul
mov
mov
mov
imul
jl
mov
fsubl
scas
int3
pop
repnz
inc
aaa
aad
jo
adc
ds
jg
hlt
mov
or
push
push
lcall
mov
or
leave
push
jmp
bnd
outsb
int3
pusha
into
cmp
sub
push
dec
popf
pusha
mov
dec
push
lret
and
loop
fs
cmp
fsubrs
rcll
push
push
addl
cwtl
pop
mov
jns
andl
sbb
sahf
and
rcrb
outsb
ret
sub
sub
test
xchg
push
jns
lret
jbe
inc
ds
xchg
aaa
fcomi
sub
ret
aam
cmp
imul
inc
dec
lods
popa
dec
imulb
cmp
lods
cmp
in
xor
sub
dec
add
iret
add
idivb
jbe
ret
xchg
fwait
mov
mov
mov
movmskps
das
in
sarl
out
jg
ret
and
dec
adc
sbb
lods
scas
jno
jns
icebp
sbb
xor
stos
test
pusha
icebp
lret
dec
lock
push
je
cmc
aaa
daa
popf
loop
das
sbb
sahf
loopne
bound
rolb
jg
aam
add
rcr
dec
adc
testb
insb
push
add
ss
adc
inc
xchg
mov
add
enter
cmc
mov
inc
fstpl
and
or
mov
inc
leave
xchg
mov
pushf
mov
add
int3
mov
mov
pop
insl
mov
sub
jne
cmp
aas
scas
loop
fcomps
inc
addl
lret
mov
add
push
mov
gs
outsl
fisttps
mov
xchg
pop
bound
sbb
add
fdivs
xchg
mov
in
and
pushf
ja
xchg
hlt
insb
sub
out
xchg
int
lcall
sub
mov
lcall
pop
rolb
push
push
shl
jns
das
cli
add
mov
into
sub
icebp
lea
xor
in
mov
lods
aas
add
test
scas
lock
or
loope
add
adc
rcl
xor
sbb
fs
dec
push
inc
add
push
push
inc
cmp
and
das
fstpt
subl
mov
mov
adc
sbb
test
or
xchg
push
ficomps
bound
jg
xchg
or
mov
jmp
add
out
jecxz
push
inc
addr16
pop
jo
mov
add
xchg
ret
sub
ds
add
adc
pop
jg
fsubl
push
fucom
cld
jo
inc
adc
and
rclb
mov
popa
xor
mov
bound
inc
iret
pop
cmp
pop
hlt
or
hlt
dec
mov
test
mov
loope
iret
das
xlat
fsts
stos
iret
add
aaa
adc
call
inc
lock
add
stos
mov
lods
leave
push
push
mov
jne
jle
pop
jne
fwait
outsb
out
arpl
cmpsb
xchg
test
push
arpl
jmp
popf
add
out
push
push
pop
xor
adc
mov
shlb
movsb
loop
pop
push
mov
mov
out
inc
testl
mov
shlb
ret
adcl
outsl
and
lret
sub
loop
lds
js
scas
add
cmp
mov
mov
cli
dec
or
jle
mov
loopne
cmc
mov
xor
icebp
clc
mov
test
cmp
pop
add
jmp
cltd
addl
mov
sarb
xor
cmp
rolb
lea
cmpsb
mov
mov
dec
inc
jne
push
nop
mov
shrb
push
push
mov
sub
fimuls
jbe
dec
cli
rolb
dec
pop
lret
insl
sub
push
bound
jae
bound
and
cmp
repz
sbb
xchg
lea
inc
loop
clc
adc
fs
sub
push
cmp
cmpsb
loope
jns
aaa
adc
leave
loope
add
push
addl
pop
imul
cs
inc
pop
push
mov
pop
js
aad
jns
fwait
andl
mov
loope
popa
test
or
aam
dec
enter
sbb
cwtl
aam
cmp
loopne
decl
fidivrl
sarl
adc
addr16
sub
dec
and
cmc
inc
pop
movsb
and
xchg
jo
mov
xchg
fcmovnb
xchg
repz
jg
jmp
out
and
arpl
dec
lds
mov
mov
add
cmpsb
sub
or
incl
pop
stc
mov
sub
push
fstpt
mov
and
ret
add
out
fcmovnbe
fmul
xchg
xchg
cmpsb
jmp
leave
outsb
mov
pop
scas
or
xor
dec
jmp
leave
push
ljmp
add
repz
sets
push
sbb
push
or
stos
jp
jo
arpl
inc
cmp
lock
nop
jb
mov
dec
icebp
inc
adc
mov
jmp
pushf
sub
jge
mov
adc
jecxz
and
dec
cmp
and
pop
jecxz
in
cmp
out
mov
pop
js
out
sub
inc
ret
adc
cli
or
test
adc
adc
cmc
repz
add
cs
stos
and
decl
sub
ret
mov
jns
sub
add
mov
mov
xchg
stos
cmp
pop
sarl
push
jle
test
dec
xchg
sub
dec
mulb
cmp
and
xor
sbb
mov
adc
push
lods
push
jb
sbb
aas
negl
cmpsb
divl
popa
mov
lcall
ljmp
jge
sbb
pop
mov
cmpsl
in
imul
lods
pop
pop
sbb
rcll
inc
dec
scas
cmp
push
fsts
and
add
or
jle
movsb
push
jb
inc
lods
adc
lds
sbb
fld
mov
cmp
dec
push
stos
push
mov
inc
push
cmc
sub
lea
aas
cwtl
xor
cmp
inc
call
sub
aam
add
hlt
pop
xor
loope
movsl
or
popf
test
int3
lahf
adc
ds
jbe
aam
movsb
push
or
loope
adc
cmp
mov
push
pop
aaa
xlat
pop
sub
add
lret
jge,pn
xlat
icebp
xor
test
pop
xchg
xchg
test
das
pop
out
repz
sar
push
les
dec
out
push
mov
jnp
stos
jmp
push
xor
fdivr
imul
outsl
ret
in
lcall
in
and
sarl
jl
mov
xchg
decl
inc
sub
dec
mov
fiadds
movsb
xchg
and
cmp
fiaddl
adc
mov
adc
jge
addb
fildl
mov
fists
push
out
andl
les
mov
or
aad
shl
push
pop
pop
cs
sti
lret
mov
sar
sti
adc
ret
testb
lods
mov
or
imul
sti
outsl
es
sbb
cmp
dec
mov
pop
ljmp
push
fdivrs
mov
insb
and
cli
push
rcll
std
adc
lahf
fsubrl
repz
jbe
loop
xchg
jle
mov
out
dec
rorl
mov
xor
cmpsb
mov
icebp
cmp
dec
push
fwait
adc
das
rcrl
pop
test
jne
hlt
fisubrs
or
bound
int
adc
cmp
dec
int
jmp
gs
js
hlt
and
pop
mov
shll
insl
arpl
mov
int3
test
mov
adc
in
xor
jae
jnp
xchg
imul
dec
clc
adc
scas
push
cmp
fimuls
lret
push
sub
pop
gs
leave
popa
fs
add
scas
scas
pop
hlt
adc
sbb
adc
dec
or
jb
or
push
cld
sbb
mov
loope
pusha
popa
imul
adc
adc
stos
or
ret
mov
sub
pop
jb
lods
or
xchg
or
lret
dec
add
mov
inc
out
jp
idivb
stos
stos
dec
leave
mov
cld
fdivs
mov
and
jbe
xor
push
punpcklwd
jmp
xlat
inc
inc
cltd
cmp
xchg
dec
iret
clc
cmc
aaa
pop
ret
in
cmp
rep
lret
stos
jnp
icebp
ret
push
nop
loope
icebp
push
or
cs
std
xlat
mov
dec
cwtl
cli
xor
das
mov
stos
xor
push
sahf
pop
movsl
push
loop
jns
imul
fldl
pop
movsl
inc
movsl
sahf
cld
divl
scas
aas
int3
or
out
pop
push
fstpt
orl
testl
fcomi
dec
mov
cmpsl
push
jl
hlt
mov
mov
incl
fwait
int
jbe
lods
out
dec
stc
fwait
mov
fwait
push
jl
insb
insb
mov
inc
xchg
pop
jl
repz
es
mov
test
xor
and
lret
lret
jb
sbb
dec
out
das
andl
and
cli
mov
js
in
loopne
dec
dec
cmp
pop
hlt
ret
mov
xchg
stos
mov
test
sub
mov
rorl
inc
sbb
ds
ja
cwtl
mov
jle
movsl
adc
cmp
insb
sbb
pop
xchg
mov
ret
lods
emms
add
xor
notb
inc
pop
or
push
mov
imul
inc
idivl
cmc
dec
pop
jno
sbb
loope
outsl
mov
jle
adc
or
cltd
pusha
adc
xor
cmpsl
sahf
xchg
insb
cmpsb
stc
cmp
pop
dec
cmp
out
enter
lea
iret
rcrl
fs
push
jg
orl
fadds
pop
or
cmp
fdivrl
mov
icebp
pop
dec
mov
mov
ret
ja
adc
daa
xchg
scas
lods
and
inc
sub
cmc
pushf
and
movsb
xor
xchg
mov
mov
mov
adc
shlb
or
das
inc
mov
aaa
sbb
push
pop
insl
xchg
lret
cmp
sbb
lahf
lret
xor
rcrb
and
cs
lret
daa
mov
je
insb
aaa
or
mov
out
pop
test
mov
xor
roll
fiadds
aad
dec
stc
repz
inc
clc
enter
jno
clc
cs
sbb
in
imul
sti
jne
or
xchg
aas
mov
inc
insb
jbe
add
xchg
leave
jae
pop
xchg
popf
cld
push
test
push
jbe
mov
jnp
mov
fsts
or
test
dec
mov
push
pop
dec
int3
das
inc
fwait
into
pop
mov
adc
fcmovnbe
dec
adc
jbe
or
sub
or
iret
jge
push
push
jns
arpl
push
jle
sub
test
sub
cmpsl
enter
add
mov
or
or
lret
sbb
or
repnz
add
xchg
sub
sbb
xchg
cld
adc
mov
xchg
ja
pop
xchg
mov
push
fsubr
xor
mov
stos
push
jns
jecxz
cmp
stos
adc
jbe
mov
and
push
fistpll
sbb
jae
mov
ret
jge
int
and
mov
pop
or
insb
cwtl
or
cwtl
jle
pop
pop
iret
ljmp
je
mov
jp
cmc
or
cmpsl
push
outsb
test
adc
pop
mov
into
ss
std
call
sbb
sbb
daa
mov
hlt
sbb
add
addr16
cmc
jge
negb
adc
xor
sub
push
dec
cmp
add
inc
test
daa
in
ja
mov
lcall
aam
mov
jmp
inc
inc
inc
lock
mov
adc
lret
mov
cmp
mov
aad
pop
loope
sub
inc
repz
clc
hlt
aam
push
sbb
imul
jb
pop
popf
ror
sub
mov
ja
rcrb
xchg
sbb
inc
push
xor
xorl
stos
jae
loope
pop
imul
mov
arpl
mov
divl
sbbb
ja
mov
out
or
stos
out
mov
xchg
cmp
jg
leave
sbb
pop
test
int3
jge
add
call
push
imul
fnstenv
cmp
pop
dec
mov
and
rcrb
dec
or
mov
cmpsl
bound
xchg
add
mov
sti
loope
pop
push
inc
push
pop
sahf
sarl
or
out
add
and
inc
stos
cmp
pop
pusha
insb
jbe
mov
mov
sbb
lret
inc
aas
cwtl
dec
stc
les
jmp
lret
cmpsl
adc
sbb
mov
jbe
fcomps
std
cmp
dec
nop
jns
jbe
mov
andb
shrb
repz
sub
inc
stos
inc
lret
dec
test
call
lock
scas
fmuls
pop
fcoml
clc
or
mov
shll
mov
and
test
and
mov
cltd
fidivrl
jle
mov
aaa
loopne
callw
xchg
mov
mov
test
inc
sbb
pusha
dec
call
fiaddl
adc
mov
popf
push
adc
scas
addr16
pop
mov
or
push
jo
mov
das
clc
shr
push
clc
push
pop
stc
xchg
adc
ficoms
lock
and
ss
and
cwtl
out
mov
popf
sub
aaa
sub
sbb
fstl
lds
mov
push
push
sbb
gs
in
sbb
mov
xchg
cmp
add
and
or
das
jmp
pop
test
enter
cs
cmp
bound
lods
mov
pop
push
sub
sbb
inc
or
add
int
adc
mov
in
aad
test
sti
cli
xor
and
out
std
mov
pop
jecxz
cli
clc
in
rcll
adc
add
fidivs
cli
clc
test
daa
jo
ljmp
enter
fstl
out
push
pop
shrb
sbb
cmp
add
loopne
fs
in
stc
cmp
mov
push
inc
xor
inc
stos
ljmp
or
pop
pop
jb
mov
push
pop
inc
mov
or
call
lock
dec
and
push
jns
adc
ljmp
js
mov
cmp
repnz
movsb
xchg
mov
adc
testb
scas
mov
minps
mov
popl
or
cmp
outsl
cmp
jns
fists
xor
inc
adc
test
cmp
enter
or
push
cld
sbb
xchg
lcall
pop
shlb
push
es
xor
jne
cs
or
mov
cltd
out
lea
mov
push
lcall
nop
arpl
in
outsl
add
jp
clc
jle
mov
js
jle
aam
push
fnsave
gs
sub
mov
fs
jecxz
dec
xchg
pop
pop
mov
jp
enter
aaa
pop
xchg
mov
stos
push
addr16
icebp
enter
movl
std
adc
sti
lea
pop
test
jp
into
nop
cmp
push
jne
aas
ss
test
jb
xchg
scas
cmpsl
ljmp
jns
jo
push
cmp
or
dec
adc
in
pop
std
and
aad
jl
aad
les
aam
loopne
push
fadds
sub
cmp
hlt
fidivs
lds
or
mov
mov
dec
in
fidivrs
xchg
fcomps
cmp
mov
jae
mov
orb
insl
mov
pop
adc
dec
arpl
aas
in
js
mov
jno
sub
jmp
pop
add
lcall
cmp
pop
inc
mov
sub
xchg
shrb
push
in
test
dec
and
ja
inc
adc
insb
or
es
dec
jbe
push
mov
dec
lcall
out
or
insl
xor
shr
scas
lahf
add
adc
pop
sahf
and
das
xchg
mov
cmp
popa
or
outsl
mov
xchg
fwait
mov
rorb
sub
jge
mov
xlat
mov
rolb
push
adc
dec
push
gs
es
push
mov
and
jmp
mov
push
xor
push
scas
cmp
test
mov
add
std
sub
decb
ja
das
dec
hlt
push
add
xchg
push
lods
aas
subb
sbb
push
jge
mov
xchg
shll
adc
pop
xchg
mov
inc
xorb
jle
fstl
fmuls
loopne
lock
pop
mov
stc
jnp
dec
rcr
fiadds
stos
push
xor
add
sub
cld
mov
mov
stos
dec
or
cwtl
pop
js
das
outsb
lods
xor
or
push
and
adc
loope
sub
sti
js
push
sub
clc
stos
sub
jb
dec
xor
sbb
xor
fmuls
or
bound
imul
jge
fildll
adc
fidivl
xor
stos
jbe,pt
fsts
rcrl
out
sub
in
mov
push
aad
xor
aas
cmp
sbb
outsb
and
adc
out
xor
xchg
inc
aas
jecxz
add
shl
gs
pop
pop
in
adc
mov
mov
in
adc
das
into
mov
test
mov
into
xchg
arpl
fs
mov
push
xchg
mov
loopne
push
int
push
sbb
cmp
icebp
jmp
dec
jb
xor
rcll
loopne
mov
movsb
stos
fildll
or
or
xchg
stos
insb
jno
ret
jecxz
fs
mov
pop
repnz
std
enter
jecxz
dec
add
adc
xchg
sub
sbb
jmp
and
lcall
imul
xchg
mov
add
shrl
add
cltd
cltd
push
movsl
les
and
cwtl
sbb
and
shll
inc
ds
enter
lods
int3
repnz
lock
daa
bound
jb
adc
mov
inc
xchg
repz
xlat
cmp
movsl
rcrb
sbb
mov
repnz
mov
call
cmc
sbb
fisubrl
jl
js
xor
lret
dec
addb
push
mov
dec
push
mov
icebp
ds
cld
nop
mov
test
mov
and
in
ljmp
push
shr
jecxz
imul
xor
cs
xchg
sbb
fsubs
loop
addr16
inc
fdivl
or
adc
xor
mov
jl
and
out
dec
mov
pop
pop
xchg
inc
mov
inc
mov
pop
fnop
and
addr16
add
call
xchg
mov
cmp
imul
ds
pop
in
xchg
ret
das
aas
jnp
loope
adcl
adc
jle
cmp
jns
and
movsb
xchg
imul
adc
or
daa
adc
imul
xchg
enter
loop
out
das
xchg
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
popa
mov
jp
pop
jp
mov
push
addl
pushf
sub
test
imul
mov
pop
fnstsw
xchg
jo,pn
jle
mov
pop
hlt
jne
ficoml
and
and
jno
cld
xchg
fsubrl
negb
je
aas
lahf
cmp
inc
cmpsb
test
mov
pop
popf
popf
popf
aas
roll
push
cmp
test
push
cli
dec
sub
int
dec
pop
loope
call
adc
push
lea
ljmp
pop
in
enter
in
insl
and
aas
mov
int
fwait
test
lea
imul
mov
or
xchg
hlt
lds
mov
lahf
jbe
out
xor
out
mov
fidivl
lea
push
xorb
cmp
push
cmpsb
loopne
cmp
out
cmp
pop
jg
aad
push
jl
je
aas
jno
int3
in
pop
ja
push
ffreep
movsl
or
jle
mov
sbbb
hlt
fildl
or
cld
sub
dec
out
sbb
cli
sti
outsb
aas
jge
in
push
push
jp
and
dec
mov
adc
jnp
ret
test
sbb
das
sbb
push
push
dec
fdivrl
jg
mov
push
mov
dec
ud2
sub
rcrb
mov
mov
scas
sub
xor
push
or
into
sbb
orb
in
sbb
adc
mul
std
test
call
shrl
mov
push
push
mov
lds
dec
test
ja
inc
mov
push
into
addr16
jne
xchg
cmp
test
lods
int
mov
mov
addr16
or
sub
ss
inc
pop
mov
enter
ds
insl
xor
xchg
mov
les
jnp
fwait
and
xchg
cltd
or
add
cmp
adc
leave
repz
pop
lds
sbb
jbe
xor
ja
sub
mov
fsubrp
popa
ss
xchg
jle
jae
add
jns
fidivl
jg
sbb
repnz
mov
aad
mov
sbb
fldcw
push
jge
fmul
mov
xchg
and
mov
add
lock
movsb
mov
sbb
jg
cmp
pop
loop
jno
insl
push
nop
push
adc
cmp
and
push
scas
int
pop
mov
dec
test
shll
outsl
jl
fucomp
jne
mov
cmp
das
div
lret
daa
cmp
cmp
fcmovu
pop
movsb
cs
dec
sub
jno
push
or
test
cltd
xlat
aad
out
add
mov
lds
dec
mov
or
out
stos
inc
testl
push
pop
push
pop
mov
adc
push
sar
push
sbb
je
sbb
mov
mov
push
adc
and
and
push
jo
jmp
adc
pop
push
mov
jge
rcr
pop
pop
jnp
cli
into
inc
icebp
clc
xor
xchg
jno
adc
xchg
push
push
stc
jl
mov
sub
jg
xor
jle
arpl
sahf
adc
aad
push
std
mov
sbb
or
aaa
fwait
pop
push
fbstp
es
inc
dec
push
xor
mov
imul
lods
inc
scas
aas
sbb
inc
or
jno
icebp
pop
das
mov
cli
jmp
ror
adc
xchg
xchg
fistps
insb
pop
dec
adc
sbb
sbb
scas
jp
mov
dec
jge
into
imul
sbb
mov
inc
test
sub
std
xchg
sbb
inc
icebp
rcrl
adc
add
shlb
add
push
or
adc
add
push
add
jne
mov
add
in
insl
loope
jb
pop
mov
pop
leave
mov
enter
and
mov
push
push
mov
jnp
shrl
cmp
imul
fbld
addb
outsb
add
sub
hlt
fdiv
pop
repnz
inc
xorb
cmpsb
dec
cli
sbb
popf
push
lret
jmp
mov
xlat
jp
add
inc
mov
bound
out
jp
fists
aad
lods
fwait
movsl
xchg
into
sub
pop
sbbb
aas
dec
push
sbb
ret
subb
cmpl
xchg
clc
push
cwtl
imul
push
cmp
popf
dec
hlt
and
cmp
adc
pop
sarb
sub
adc
aas
pop
pop
inc
pop
mov
fdiv
in
repz
inc
repnz
mov
dec
or
lds
push
sbb
pop
sub
aas
jmp
sbb
fidivl
and
cmpsb
lret
cmovnp
mov
add
adc
outsb
xlat
cmpsb
sub
aam
mov
pop
pop
fildl
in
fnstenv
inc
jmp
outsb
mov
mov
push
divl
jb
in
mov
dec
in
lds
lock
test
cmp
sbb
sbb
lock
lock
mov
inc
mov
lret
add
pusha
inc
out
mov
lock
test
fdivl
fdivs
add
mov
xchg
push
and
or
mov
jnp
fstl
xchg
jno
dec
mov
lods
shl
dec
into
cmp
mov
or
adc
mov
sub
mull
cs
adc
bnd
pop
aam
add
aad
pushf
stos
mov
mov
dec
test
sub
in
xor
jl
fimuls
popf
sbb
mov
push
movsl
orl
pop
leave
xchg
in
cs
or
mov
gs
std
mov
push
ljmp
pop
subl
stos
jg
cmp
mov
sub
xlat
clc
sub
das
into
mov
cmp
mul
cli
enter
fistl
fisttps
xlat
lods
inc
pop
inc
int3
es
pusha
inc
hlt
sbb
sbb
stc
adc
sub
push
clc
jo
adc
or
sub
in
je
add
inc
mov
cmp
movsb
stos
sub
sub
push
out
push
xchg
fcoml
dec
xchg
xor
daa
lcall
stos
ljmp
jno
mov
push
test
aas
sbb
mov
sub
movsb
add
test
fdivp
cmpsb
push
push
pop
push
loope
mov
pandn
in
and
push
mov
inc
pop
outsl
fsts
fisubrl
jae
sub
add
xchg
fcmovnb
mov
js
sbb
mov
jnp
clc
adc
dec
dec
push
push
mov
repnz
or
push
movl
mov
cld
and
es
orb
fs
push
mov
pop
pop
mov
int
dec
mov
shll
xor
pop
xor
scas
push
or
sahf
cs
out
es
adc
xor
add
rorl
mov
fistps
rcr
es
sbb
push
out
cmc
cmp
clc
inc
les
add
mov
loope
mov
fsts
lea
xor
jae
aas
dec
jae
lods
repz
popf
daa
or
adc
xor
mov
and
sarl
aam
jbe
jg
xor
push
dec
jno
jb
sub
rolb
nop
sar
cmp
rcrl
ljmp
sub
or
jns
or
fisubrl
mov
rolb
xchg
lret
gs
arpl
jae
cmpsl
inc
sub
adc
cwtl
pop
dec
arpl
repz
rcrl
xchg
mov
insl
xchg
adc
add
cmpsb
xor
vunpckhps
cmp
mov
mov
xor
xor
out
insb
stos
sbb
fwait
pop
sbb
enter
cmp
pop
fadds
dec
mov
sub
cmp
or
lcall
es
push
mov
cli
aam
loope
jmp
mov
jae
inc
sarl
dec
adc
push
cmpsb
dec
loopne
pop
in
cltd
push
rorl
push
test
sub
test
dec
cmp
loope
jne
loop
stos
ret
xor
ffree
inc
insb
scas
out
ret
rcrb
cld
sub
dec
pop
enter
mov
scas
mov
repnz
js
push
cmc
loopne
jmp
loope
jnp
cmp
sbb
and
push
sub
pop
lret
insb
ljmp
lds
fcompp
dec
imul
mov
and
popf
ja
orb
jns
sbb
or
sub
pop
fdivr
lods
repz
inc
stc
fildll
out
int3
nop/reserved
leave
loop
bound
aam
call
xchg
mov
jnp
pop
enter
lahf
into
xchg
pop
mov
or
mov
ljmp
sbb
int
clc
test
push
je
scas
scas
test
ret
out
fcmovne
in
add
sbb
push
mov
cmp
dec
xchg
or
mov
or
pop
and
ficoml
or
cmp
call
adc
xor
pushf
sbb
imul
xorb
jle
dec
fidivs
arpl
repnz
test
mov
or
das
imul
fwait
mov
dec
jo
cmpsl
out
jge
cmp
aad
add
add
popa
aaa
and
incl
loopne
sbb
cmp
fwait
sbb
push
jle
movsb
pop
cmp
outsb
cmpsl
and
rclb
insl
sub
inc
mov
jg
dec
xchg
imul
push
mov
gs
aad
push
xchg
mov
je
fmuls
or
inc
scas
enter
stos
pop
push
loopne
xchg
sub
xor
xchg
movsb
cmp
das
loopne
ret
xchg
popf
sbb
sbb
sbb
mov
push
loope
inc
call
adc
dec
push
ret
mov
sub
xchg
xchg
loopne
repz
inc
ret
rolb
sub
call
jbe
bound
dec
sub
cmp
xchg
movsb
fs
es
addr16
movsb
push
mov
jmp
pop
out
aam
mov
jns
and
rcl
jb
xchg
jb
or
pop
xchg
out
popf
xchg
xlat
jmp
fldcw
lods
pop
in
or
sbb
mov
mov
xchg
jbe
cmp
ljmp
or
and
sahf
sarb
sub
adc
add
push
ds
push
imul
mov
jae
incl
dec
mov
cmp
cmpsb
xchg
test
adc
mov
sub
cmpb
fildll
into
and
outsl
dec
idiv
imul
jae
jl
lock
ficomps
push
dec
popa
dec
xor
loop
aam
xor
add
mov
stos
sar
nop
xchg
cmp
jmp
scas
cs
addb
in
mov
mov
inc
sbb
push
vpackssdw
jmp
or
xchg
stos
fcom
in
xchg
jle
sbb
fsts
mov
push
cmp
popa
pop
in
pop
das
dec
pop
es
mov
cld
push
jmp
std
jmp
pop
dec
aam
and
adc
dec
std
shrl
dec
dec
int3
aaa
push
push
scas
push
in
fsts
and
adc
push
js
adc
ja
mov
pop
add
mov
sub
xchg
mov
hlt
out
adc
add
out
sbb
or
stos
jns
inc
stos
sub
imul
jno
out
push
pop
ficoms
jb
nop
out
and
sub
cltd
mov
mov
inc
jae
inc
pop
push
sbb
add
inc
xor
lds
jno
cwtl
xchg
movsl
sub
popa
jne
loopne
xchg
out
adc
inc
inc
adc
xlat
testl
mov
popa
jmp
cmp
loope
dec
xchg
xchg
stos
or
add
adc
jb
ret
leave
imul
sbb
inc
cmp
js
lea
test
inc
and
out
fsubrs
and
sbb
inc
scas
cmp
int
pushf
mov
pop
inc
mov
ret
fldenv
icebp
mov
or
aas
inc
jge
out
jae
add
test
xchg
lret
inc
push
leave
push
push
lock
mov
leave
int
sub
mov
lods
pop
mov
dec
pop
inc
lock
in
inc
cmp
daa
cmpsb
pop
adcb
ret
jmp
jne
cmovo
rorl
cmpsb
jp
stc
xchg
xor
push
pushl
sbb
lret
negl
lahf
repz
shr
lods
inc
enter
out
pop
xchg
fs
dec
push
add
fiadds
dec
cmpsb
push
push
cld
inc
mov
lds
imul
jbe
or
sub
lock
leave
mov
mov
lahf
xor
lcall
xor
pop
fidivrl
daa
scas
ret
sub
pop
fists
push
test
xchg
sub
mov
adcl
dec
add
hlt
repz
leave
divl
pextrw
or
clc
xchg
sbb
mov
jp
dec
lea
test
xor
mov
mov
movb
jl
mov
add
and
aam
push
testb
imul
aaa
cli
jl
fnstsw
mov
int
fucom
cmp
out
xchg
sbb
pop
xor
das
cmp
sbb
fwait
ja
adc
mov
jl
xchg
pcmpeqb
negl
push
sbb
mov
and
lods
mov
push
rorb
and
nop
dec
adc
das
jg
orl
dec
mov
gs
cmp
shlb
shrb
dec
scas
or
or
sbb
imul
xor
mov
or
sahf
bound
stos
or
dec
fs
xor
sbb
iret
adc
pop
stc
vandpd
xchg
push
ror
adc
mov
xchg
mov
imul
pushf
mov
or
jl
adc
aas
addr16
stos
mov
outsb
jge
sbb
mov
dec
stos
cmp
xlat
mov
pusha
int
mov
lahf
sahf
add
sbb
sbb
push
cmp
mov
lock
xchg
cld
push
adc
jl
or
add
inc
jl
lahf
hlt
xor
sbb
loop
jle
mov
sbb
call
mov
adc
pop
pop
sub
xor
push
repz
pop
clc
dec
leave
es
lods
xchg
or
loope
mov
inc
dec
daa
jl
movsl
aad
push
pop
fidivl
mov
ret
jmp
negb
mov
aam
jmp
jecxz
dec
inc
int3
mov
nop
mov
fs
xchg
pop
inc
jnp
xchg
ret
icebp
sahf
sbb
fdivl
and
jae
sub
or
ret
roll
and
and
xchg
cmpb
sbbl
test
repnz
sbb
loopne
jge
sub
lahf
ss
call
fsubr
inc
inc
int3
aam
push
jo
or
fs
aad
inc
jg
add
adc
pop
cld
push
cmp
jl
sub
adc
mov
hlt
inc
xchg
icebp
rclb
pop
scas
dec
inc
test
jo
xchg
lcall
xor
jno
adc
es
add
or
les
xchg
sar
out
adc
cmp
mov
jle
push
or
sahf
into
fistps
push
pop
jmp
nop
mov
aam
adc
pop
sbb
mov
inc
enter
pop
xchg
mov
mov
pushf
mov
add
jno
repnz
rolb
je
adc
sub
notb
stc
es
or
push
cmp
jmp
add
loopnew
mov
xchg
repz
data16
cs
mov
xor
sub
mov
mov
or
xchg
inc
pop
js
mov
sub
cmp
jecxz
xchg
shl
stc
pushf
xor
mov
lea
mov
push
mov
lahf
fwait
movsb
imul
xchg
aas
jno
inc
add
or
push
jae
adc
notb
pop
aam
mov
iret
cmp
sbb
pop
dec
iret
inc
outsb
daa
jl
add
leave
das
outsb
cmpsb
insl
repnz
in
pop
rorb
sub
ret
inc
add
or
imul
mov
xchg
ret
dec
daa
stc
jmp
jecxz
fstps
cmc
bound
or
mov
push
dec
xchg
pop
sbb
cli
cltd
push
ds
or
add
mov
ss
cli
pop
xor
sbb
add
mov
lahf
dec
xor
shlb
int
fcomps
xchg
cmp
xchg
sbb
push
mov
sbb
mov
outsl
dec
repnz
xlat
stc
mov
fistl
push
xorb
enter
sbb
rorl
movsl
adc
adc
ja
push
fucomp
sahf
dec
icebp
xor
arpl
mov
dec
adc
imul
out
into
cli
pop
cmp
jl
aad
xor
sbb
sbb
inc
lds
or
and
or
and
jmp
arpl
cmp
inc
stc
enter
iret
lock
ljmp
mov
dec
dec
jbe
cld
rcll
jmp
sti
fistps
mov
push
out
dec
aas
test
fsubrs
pop
xchg
adc
and
xchg
loope
add
pop
and
aad
stc
jp
push
aaa
cmpsb
push
xor
jo
pop
aas
cmpsb
adc
cmp
and
into
pop
pop
jl
mov
push
pop
stc
loopne
pushf
xor
jg
add
xchg
jbe
mov
cmp
scas
dec
or
xlat
cmp
jg
inc
push
aam
push
dec
insl
xchg
push
pop
mov
pop
das
xchg
jbe
dec
scas
xchg
das
sbb
adc
mov
cmp
dec
and
jecxz
fdivs
add
jns
ds
adc
cmp
pusha
sti
sbb
int3
imul
push
pop
cld
pop
scas
jb
popa
jecxz
ja
dec
push
outsb
les
xor
daa
adc
sbb
fs
add
loopne
mov
stc
dec
int3
in
pxor
jnp
popf
mov
hlt
subl
adc
ljmp
xlat
bound
xchg
push
mov
adc
mov
ficoml
jle
in
test
dec
dec
mov
fldcw
clc
ss
and
int
sbb
lods
std
subl
jecxz
test
insl
xchg
outsl
adc
add
jecxz
mov
fcmovu
jecxz
mov
xchg
mov
dec
or
sbb
cmpsl
outsb
sub
cmp
mov
xor
loope
push
dec
xor
push
les
mov
pushf
mov
inc
mov
mov
add
sub
pop
subl
not
fisttps
or
cmp
inc
jnp
int
js
and
fimuls
or
pop
jae
popa
inc
enter
inc
rcrl
fistl
fisttps
fwait
fs
push
rcll
dec
and
jge
cld
lret
cmc
cmp
cmpsb
inc
mov
subl
std
or
sub
testl
pop
cmpb
fcmovu
pushf
daa
into
sub
mov
jle
dec
jle
mov
push
shlb
or
aam
push
out
mov
movsl
pop
clc
xlat
pop
ja
add
sub
es
or
lcall
iret
aaa
addr16
fstps
into
test
imul
inc
movsb
mov
pop
xor
sbb
mov
inc
imul
push
jno
inc
xor
sbb
mov
sbbl
mov
xor
sub
inc
jns
insb
rorb
repnz
ss
orb
and
into
mov
mov
daa
cmpsb
out
test
jns
ret
xor
mov
mov
lea
stos
or
nop
cmp
imul
sub
mov
dec
inc
and
fldt
dec
lock
aas
fimull
daa
mov
mov
pop
and
dec
repnz
sbb
xchg
inc
xor
dec
shrl
es
push
je
sbb
rcl
nop
outsb
pop
pop
filds
test
mov
scas
xchg
sub
mov
cmpsb
pop
inc
xor
dec
push
into
out
fnstsw
ds
add
loope
sub
push
mov
out
fnstenv
jbe
insb
pop
mov
push
mov
int
scas
bound
adcl
mov
and
ss
dec
in
mov
pop
sbbb
add
cmpsl
and
repnz
sbb
and
jb
shlb
out
push
into
inc
inc
sbb
or
scas
test
sbb
ret
imul
out
mov
out
call
outsb
ja
popl
and
mov
sbb
push
cmp
pop
stos
push
push
repz
xchg
hlt
add
cmpsb
xchg
xor
fwait
je
test
push
mov
test
cld
gs
movsb
jo
xchg
add
xchg
pop
sbb
les
js
jecxz
mov
std
mov
inc
xor
jo
fisttpll
xchg
cs
push
xor
imul
mov
adc
orb
icebp
imul
pop
call
dec
fiaddl
in
movsb
dec
pop
pushf
loop
inc
clc
shlb
fistpll
mov
jmp
stos
jb
js
fidivs
data16
int3
dec
int3
mov
sbb
xchg
dec
gs
adc
icebp
cmp
xchg
pop
pop
mov
add
inc
aaa
cs
jne
dec
lcall
roll
or
and
push
xchg
fimuls
and
lret
jb
pop
popf
jne
int
stc
jnp
push
lods
insl
imul
int3
push
std
pusha
and
data16
mov
mov
stos
xchg
sbb
jge
mov
rclb
mov
idivl
lds
insb
mov
push
mov
in
xchg
xor
scas
or
adc
enter
stos
mov
nop
adc
sub
aam
mov
pop
ret
movsb
mov
mov
or
adc
xchg
shll
pop
shlb
cmp
dec
lods
inc
jno
loope
fidivrl
mov
xchg
xchg
inc
inc
inc
adc
out
stc
mov
mov
sub
icebp
cmp
out
dec
add
push
push
mov
cmpb
mov
mov
mov
push
xor
pop
push
push
loopne
or
push
sub
mov
inc
add
mov
push
mov
jmp
cmpsl
inc
xchg
subb
add
or
stos
loop
pop
test
lds
sti
hlt
jae
sub
imul
jecxz
rcr
push
icebp
adc
pop
into
adc
add
mov
inc
cmp
jp
sahf
lock
shrd
inc
dec
test
shr
nop
pushf
adc
cld
mov
sbb
ljmp
stos
adc
bound
pop
fs
lds
mov
flds
fadd
push
push
rorb
and
sbb
stc
or
jecxz
hlt
push
inc
incb
aaa
lds
and
loopne
mov
in
in
cli
lcall
cs
dec
aad
xchg
repz
dec
pop
pop
jo
mov
imul
sarb
mov
lret
inc
rcll
mov
or
ret
fdivrl
fistpll
lret
xor
jne
pinsrw
xor
cs
jg
inc
cmp
insl
test
insb
das
add
mov
out
rcrl
mov
mov
push
fidivs
repz
test
pop
out
imul
add
sti
lahf
sbb
mov
mov
in
mov
leave
lahf
mov
clc
push
jb
lret
cmp
xchg
adc
imul
mov
or
jbe
lret
insl
mov
add
into
stos
in
cs
jnp
fcmovnu
or
imul
lock
inc
fists
aaa
push
cwtl
dec
sbb
sub
inc
mov
imul
mov
dec
mov
jl
sub
or
enter
add
outsb
das
popa
adc
push
ror
enter
xchg
mov
cmp
outsl
out
icebp
scas
jecxz
clc
lds
xchg
pusha
orb
in
jp
mov
and
adc
dec
mov
mov
push
mov
pop
mov
add
fiadds
gs
aam
and
mov
out
gs
pop
hlt
adc
xchg
inc
sbb
xchg
incb
roll
or
imul
sbbb
or
xor
mov
jb
inc
xchg
rcl
mov
sarb
arpl
repnz
and
in
xchg
jmp
adc
scas
jecxz
hlt
idiv
rclb
cmp
dec
push
pop
fcompl
cwtl
popa
fbstp
in
xorl
aad
in
pop
ss
in
mov
in
sub
cmp
jmp
ss
std
sbb
adc
int3
insl
in
sbb
add
inc
cmp
pop
pop
jae
pop
jae
add
dec
sub
in
add
push
xor
gs
sbb
insl
inc
outsb
push
stc
sub
mov
imul
adc
jne
push
scas
push
dec
mov
js
mov
or
inc
adc
sbb
and
lfs
popa
pop
sbb
lods
mov
push
lar
orb
aam
enter
inc
mov
ror
push
jmp
xchg
add
shrb
dec
insl
ds
popl
faddl
stos
or
jle
loopne
imull
repz
xchg
lods
stos
or
add
xchg
stos
sub
rcl
mov
mov
lahf
sti
inc
popa
xor
pushf
sbb
lods
dec
add
jg
cmp
sub
xor
cs
or
jle
movsb
xor
jbe
mov
adc
mov
lds
cmp
sbb
movsl
fnsave
mov
xchg
or
jecxz
icebp
out
inc
xlat
push
in
loopne
mov
int
out
mov
jbe
in
ror
xchg
dec
sub
rorl
hlt
sbb
inc
jge
cmpsb
inc
jg
ja
or
test
movsb
fstp
jbe
push
pushf
out
sbb
call
mov
push
das
xor
scas
mov
pop
or
sbb
dec
fs
jg
sub
xchg
cmp
push
adc
push
std
out
test
jecxz
inc
adc
adc
shrb
loopne
pop
int3
cmp
cmp
sbb
leave
adc
das
into
xor
mov
jno
dec
lock
fcompl
sbb
pop
into
int
test
int3
sub
or
fs
jno
fwait
ret
xchg
adc
in
xor
adc
lcall
pop
sbb
insl
jmp
jne
icebp
adc
stc
xor
pop
insl
push
and
sbb
es
mov
cltd
mov
cmp
addr16
and
add
lds
ss
mov
xor
jno
rorl
fdivs
inc
add
shrb
data16
xor
adc
rclb
loope
iret
leave
test
sub
sub
push
imul
addr16
pop
jmp
fmuls
lds
jl
faddl
jns
mov
aam
pop
insl
push
mov
inc
sbb
push
test
push
adc
fadd
xor
mov
repnz
ret
jmp
rorl
call
leave
push
mov
jge
pop
aam
pop
mov
dec
out
fwait
dec
inc
sbb
mov
xchg
fcmovne
loope
mull
aad
dec
mov
push
std
movsl
in
imul
int3
jbe
je
push
pusha
ljmp
lret
and
test
rolb
jg
sbb
pop
lret
cmpsl
cmpsb
or
cmp
icebp
add
cmpsl
repz
cwtl
stc
or
and
jns
pusha
sbb
push
push
inc
std
and
fwait
insb
xchg
xlat
sub
jg
xor
pop
jb
jb
push
test
ja
in
push
or
pop
orb
rcr
test
mov
push
cmpsl
lds
nop
or
mov
mov
adc
mulb
pop
rcll
dec
das
ds
cmpsb
rcrb
jg
insl
push
adc
mov
pop
lahf
and
daa
xchg
fimuls
ljmp
fistps
cmpl
sbb
mov
jae
rcrb
cld
lods
mov
fadds
rcll
xor
jg
das
test
mov
scas
adc
lods
xlat
jb
lret
mov
shl
fisttps
jge
xor
or
inc
mov
adc
enter
cwtl
push
inc
lods
xor
out
flds
push
test
int3
sub
xchg
inc
sti
je
rclb
sub
and
pop
jne
and
adc
inc
pop
xchg
add
mov
repnz
adc
mov
xchg
push
mov
sti
jb
lcall
ss
sbb
mov
icebp
mov
scas
adc
cli
fs
xchg
pop
into
incb
jge
or
iret
sbb
lret
add
dec
insb
sahf
mov
jge
repnz
jne
jns
mov
mov
sub
lcall
dec
adc
repnz
int3
xchg
outsb
fnstenv
out
iret
ljmp
mov
sub
inc
fs
repz
push
std
dec
and
sub
pushf
push
jnp
dec
test
sti
xor
pushf
test
inc
data16
pop
ret
mov
scas
imull
cmp
xlat
addr16
sahf
cs
stos
inc
inc
out
ret
movsl
cmp
and
cmp
pop
mov
dec
mov
mov
jl
test
filds
mov
sub
mov
gs
lahf
shll
mov
in
lcall
xchg
lock
mov
inc
sbb
sbb
out
lcall
cmpsl
push
jge
ljmp
xorb
cld
roll
pop
or
fimull
ret
inc
mov
das
add
and
jecxz
mov
orl
jg
xchg
ret
cmp
mov
outsl
mov
jge
test
fsubp
push
fsts
xchg
pop
nop
outsb
jmp
rorb
cmpsb
mov
jge
or
add
mov
and
testb
mov
loopne
out
fwait
testl
xchg
push
fwait
gs
loope
cmp
xor
dec
dec
ds
movsl
sbb
xor
xchg
cli
xorb
addr16
sub
push
das
push
adc
mov
pop
add
sarb
xor
fidivrs
and
pop
pop
mov
mov
loope
adc
cmpsl
xchg
dec
pop
inc
xor
or
mov
scas
dec
jo
add
or
mov
xor
pop
mov
dec
pushl
cs
lahf
push
aaa
cwtl
push
pop
sbb
testb
mov
pop
inc
sbb
scas
sbb
popl
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
xor
push
jge
or
jp
xor
roll
hlt
mov
pusha
inc
dec
pop
mov
xchg
pop
mov
adcl
repnz
clc
or
pusha
or
cwtl
loopne
mov
push
sbb
add
fsubrl
jecxz
into
xchg
dec
dec
jbe
lods
scas
push
test
pop
cltd
mov
mov
push
mov
vpshuflw
mulb
and
movl
in
fildll
cs
andl
outsl
insl
icebp
lret
bswap
sahf
lret
mov
insl
cwtl
lea
jl
int3
jbe
shlb
pop
mov
adc
mov
fidivl
and
cmc
mov
loop
mov
mov
stc
push
lea
cmpsl
rorl
xchg
jo
xor
dec
mov
fisttps
xchg
jg
add
dec
adc
sbb
cmp
mov
and
inc
divl
jle
dec
mov
das
icebp
test
and
push
and
enter
jmp
rcll
in
jmp
icebp
push
push
out
jo
jmp
in
cmp
sbb
in
cmc
rcr
arpl
pop
test
sbb
cmovnp
sbb
jne
mov
xor
lods
movb
mov
leave
lahf
mov
mov
pushf
add
js
jg
or
filds
sbb
test
and
out
fmuls
mov
jbe
cmp
inc
jne
inc
jp
add
rclb
dec
pop
jno
add
imul
mov
sub
add
ljmp
cld
lds
push
xor
jg
lock
add
cmp
pop
mov
push
xchg
jle
xor
shll
mov
pop
jbe
lock
cs
repz
icebp
inc
pop
xchg
or
repnz
mov
sbb
jb
or
psrlw
push
roll
mov
popa
in
jns
cmp
dec
into
xor
call
sbb
lock
in
icebp
xor
xor
filds
add
mov
cld
xorb
stos
fistps
shll
es
mov
enter
stc
cmpsl
js
push
xchg
sti
nop
mov
hlt
out
aas
lcall
outsb
ja
shl
movsl
mov
daa
fadd
or
add
cltd
stos
push
cmp
test
imulb
inc
jb
fists
hlt
leave
add
jbe
ds
xchg
loopne
std
enter
mov
mov
push
push
sbb
sub
xor
jae
pushf
dec
ds
lock
in
add
cld
pusha
xchg
mov
lock
aam
sub
es
inc
enter
ljmp
fstl
jns
cmpsb
adc
not
add
sub
add
sub
mov
push
push
outsl
or
nop
mov
jecxz
adc
cmp
into
es
sahf
sbb
jmp
scas
fisttpl
mov
adc
aam
mov
pop
fmull
sub
or
outsl
test
in
inc
lock
loope
decb
add
dec
xchg
dec
cmp
adcb
js
pop
gs
inc
ss
out
jp
jne
addps
mov
push
subb
into
test
push
loope
mov
jle
inc
pushf
insl
repnz
or
jno
andb
cmpsb
cmp
out
adc
jle
or
fistpl
addr16
fcmovnu
mov
cmpsb
sub
cmpsb
jge
mov
push
mov
mov
or
mov
mov
jne
push
sub
fists
xchg
movsl
addl
inc
test
mov
outsl
inc
mov
xchg
adc
cli
out
lcall
aas
int3
daa
mov
mov
dec
inc
inc
mov
pop
daa
and
mov
inc
and
call
and
ror
or
cmp
and
insl
jbe
shll
out
and
add
jl
mov
push
out
mov
or
mov
imul
push
iret
sub
mov
xchg
rcrb
jnp
xor
mov
je
clc
outsl
pop
ss
jg
dec
push
pop
push
xor
adc
arpl
or
mov
push
jg
loopne
lret
test
push
and
xchg
and
rclb
inc
mov
mov
std
push
inc
orb
popf
outsl
fnsave
out
adc
int3
cmp
shl
insl
or
xchg
mov
adc
aaa
mov
ficomps
mov
adc
mov
stos
shll
xchg
sti
jb
stc
xchg
push
inc
xlat
dec
cmp
xchg
and
ret
mov
fbstp
call
shlb
cmpsl
xor
fs
mov
into
sub
pop
sub
mov
rcrb
push
jno
lcall
pop
inc
mov
mov
das
clc
xchg
fdivrl
ficoms
lcall
jbe
test
pop
adc
loope
scas
xor
mov
dec
outsl
jnp
jle
sub
and
insl
push
add
ss
fmuls
leave
or
popl
out
cmp
xrelease
daa
out
cmp
out
and
lock
dec
ret
sbb
add
insl
mov
stos
xchg
fdivl
in
int3
cmpsb
ret
inc
xchg
pop
push
in
and
add
filds
lcall
jbe
push
dec
pop
xchg
pop
inc
call
mov
pop
cmp
inc
add
movsb
pop
das
mov
push
pop
fistpl
call
and
push
mov
cmc
sub
pop
inc
cmc
push
lods
into
lret
shlb
decb
xchg
mov
out
push
cmp
cld
jne
pop
leave
enter
ja
jp
scas
movsb
add
stc
ret
scas
pop
insl
test
sbb
in
fdivl
push
dec
clc
test
sub
mov
pop
push
out
cwtl
cmp
call
sbb
in
insl
test
cltd
stos
push
ss
loop
ss
dec
test
shl
mov
sub
fxch
fistl
lods
push
sbb
shrb
xchg
inc
add
das
add
cmpl
scas
bound
pop
sbb
dec
mov
mov
out
jle
xchg
in
out
aaa
outsl
sbb
add
sub
hlt
in
mov
sub
pop
xchg
leave
mov
or
pusha
or
and
or
rcrl
aaa
pop
mov
sbb
push
cld
sub
jne
imul
pop
dec
jmp
mov
repz
xlat
ss
pushf
jnp
inc
imulb
in
push
mov
jg
jne
frstor
dec
inc
xor
sbb
xchg
mov
mov
dec
ret
mov
test
test
mov
mov
test
inc
fistps
lahf
push
or
sbb
je
mov
add
stc
cld
std
mov
lret
repz
xor
xchg
mov
xchg
out
dec
jle
data16
sbb
adc
add
pop
push
inc
xor
movsl
xchg
sub
sub
mov
cs
outsl
xchg
leave
mov
stos
out
lods
add
mov
testl
into
jns
in
out
call
sbb
push
jle
stc
rorb
add
dec
xchg
jno
add
jne
data16
pop
mov
push
mov
dec
ss
pop
pop
jne
jmp
xchg
xchg
adc
xchg
pusha
imul
loope
push
popf
fidivs
andb
or
outsb
insb
xchg
repz
xchg
jb
out
rolb
pusha
mov
sbb
jo
xor
or
rorl
cltd
fcomps
adc
dec
jl
mov
pop
mov
out
adc
inc
gs
push
mov
cltd
into
loop
idiv
cmp
cmp
xchg
into
stc
mov
fisubs
mov
lret
xchg
push
cld
ljmp
pop
out
sub
aam
enter
fidivl
shll
xor
cmpl
xchg
inc
jnp
add
add
sub
ds
pop
sbb
mov
js
test
ljmp
and
stos
mov
shl
fs
into
push
daa
lods
mov
stos
iret
and
dec
push
inc
roll
hlt
sbbb
jnp
pop
mov
adc
dec
mov
push
inc
in
or
pop
mov
mov
xchg
push
mov
push
mov
push
xchg
or
ss
pop
mov
cli
fisttps
cs
xchg
hlt
shll
sbb
addr16
pop
movsb
imul
pop
pushf
mov
push
jl
xchg
rcr
jl
inc
inc
push
jl
hlt
mov
mov
rclb
test
into
insl
outsl
jae
mov
aaa
call
insb
sub
xchg
mov
mov
stc
jnp
mov
lock
in
push
cwtl
scas
stc
inc
pop
and
mov
fsubrl
lret
test
out
push
mov
mov
dec
push
push
out
jle
add
out
scas
cmp
pop
jp
and
sbb
out
inc
pop
pop
mov
cmc
pusha
mov
mov
hlt
adc
clc
push
sahf
push
pop
sbbl
mov
jle
les
das
pop
push
inc
imul
jns
cli
sbb
xor
int3
fbstp
and
arpl
pop
aad
adc
fs
xchg
xor
pop
sub
int3
push
pushf
mov
lea
test
cs
push
mov
xor
and
pop
scas
cli
mov
repz
or
and
popl
dec
stos
loope
cmp
adc
ss
inc
inc
jbe
cmpsl
or
inc
sub
out
add
fstpt
adc
xor
mov
ffree
cmp
test
jno
js
fdiv
aaa
je
lods
insl
shrl
mov
inc
das
incl
ret
cli
sbb
xor
xor
xor
outsb
dec
aad
popa
imul
mov
das
inc
xchg
sbb
fldt
test
scas
cmp
xor
ja
pusha
mov
mov
sub
outsl
fisubrl
out
cli
sub
mov
jge
push
xchg
mov
nop
add
sbb
cmp
mov
icebp
cmp
cmp
lds
lods
pop
mov
lret
pop
pusha
and
enter
pop
pop
inc
daa
and
mov
jecxz
jg
adc
pop
mov
push
and
lahf
rorb
fiaddl
out
and
outsl
push
cmpsb
repnz
dec
scas
jle
lock
pop
aas
insl
lods
sbb
lds
loope
mov
daa
leave
in
cmp
nop
cmp
inc
and
dec
add
mov
jo
fld1
mov
jno
push
and
adc
push
fldt
fcmovb
or
movsb
addr16
iret
and
loop
jae
dec
mov
outsb
or
xor
in
lret
adc
int3
pop
adc
adc
int
mov
aam
sub
in
clc
pop
adc
jb
insb
out
cltd
dec
jno
or
rorb
insb
inc
xor
jmp
pop
jno
lods
fisttpl
adc
mov
xchg
adc
stos
int3
imul
xchg
out
fbstp
repz
sbb
sbb
jg
ret
sub
cmp
mov
repz
sbb
fmull
xor
pop
imul
scas
subl
xchg
shl
inc
add
push
out
jge
inc
cmpl
pop
mov
cltd
or
add
or
adc
outsb
outsl
fisubl
mov
xorb
jle
pusha
sub
dec
lret
bnd
ja
sub
mov
aad
bound
mov
pop
das
lds
add
jno
inc
clc
pop
jbe
es
and
xor
pop
dec
cltd
jecxz
jl
jg
push
jbe
das
repnz
xor
lods
popa
sub
sub
fidivl
movsl
in
push
pop
jmp
dec
adc
stos
sbb
cmp
or
outsl
cmp
fdivrs
sub
jp
dec
dec
inc
mov
scas
pop
adcb
xchg
clc
decb
enter
sub
cmc
pushf
push
int3
mov
sahf
into
in
mov
mov
sahf
fistps
loop
ret
xor
rcll
aaa
imul
mov
push
or
add
dec
cmp
inc
xchg
xor
mov
lods
adc
dec
mov
jmp
in
add
mov
xor
or
nop
xchg
orl
int
dec
dec
aas
rcll
xor
loopne
push
in
and
and
mov
xor
dec
xchg
dec
mov
cmc
out
cmpsl
jae
shrb
roll
jbe
cmc
pop
xchg
sub
sub
xchg
jbe
push
xchg
fdivl
ret
xlat
movsl
leave
ret
lret
add
cmp
iret
bound
fst
sbb
sbb
adc
enter
add
sub
aaa
mov
stos
in
and
shrb
aas
loop
adc
jge
dec
push
pop
in
movsl
out
in
orl
jg
testb
mov
out
pop
adc
pop
adc
rol
mov
call
jno
cmp
pop
sub
pop
xchg
mov
adc
adc
int
xorl
adc
dec
sti
divl
lds
and
cmp
inc
icebp
andl
cmc
test
in
leave
movsl
lahf
cwtl
rorb
xchg
adcl
gs
mov
aas
icebp
mov
mov
repz
lret
test
jl
sbb
scas
cmpsb
shrb
push
xchg
aam
cwtl
jns
or
insb
dec
hlt
loope,pn
dec
xor
stos
outsb
cmc
sbb
shrl
lock
sub
cld
shr
push
aas
and
stos
or
cmp
scas
mov
mov
xchg
dec
pushf
and
insl
notb
fnsave
mov
jb
fdivrs
fnsave
imul
loope
fisubs
rcll
mov
sbb
sub
insb
cmp
jne
test
mov
cltd
cwtl
xchg
lcall
cmp
clc
leave
out
and
adc
jp
cmpl
mov
add
cmc
inc
push
xchg
in
aad
cli
xchg
fnstenv
mov
push
in
adc
test
ret
xchg
aam
and
cmc
inc
sbbb
and
mov
test
lock
mov
xor
add
movsb
adc
xchg
test
icebp
sub
aad
jbe
add
mov
adc
in
mov
cmp
jb
push
pop
fimuls
jge
lret
mov
dec
arpl
vmwrite
loop
enter
pusha
mov
xchg
daa
cmp
movsb
push
mov
fwait
testl
sbb
movsb
out
jns
daa
jmp
rorl
adc
test
sbb
mov
cltd
divl
add
push
jbe
outsl
dec
fdivs
nop
xchg
mov
sbb
inc
cmp
scas
in
mov
sub
mov
pop
cmp
pop
into
sysret
test
inc
jae
lods
imul
cmp
sbb
lret
pop
dec
xchg
xchg
pop
inc
les
pop
clc
mov
lahf
mov
inc
xor
and
push
jns
xor
rcrl
shl
pop
mov
iret
sbb
and
mov
mov
jg
fwait
imul
push
jne
test
mov
movq
lds
pop
pop
inc
insb
and
pop
inc
int
loop
sub
adc
insb
pop
mov
ror
inc
jmp
add
ljmp
cmp
mov
push
jmp
call
bound
inc
xchg
sbb
mov
adc
adc
mov
loopne
add
or
jl
and
add
hlt
inc
stc
inc
sti
xchg
hlt
adcb
jno
xor
jecxz
push
and
rolb
loopne
adc
sahf
jno
enter
iret
cs
test
out
mov
add
pop
movsb
pop
jmp
add
call
insb
sub
test
lock
pop
mov
addr16
sbb
mov
push
xchg
xor
inc
sarb
xchg
test
jns
mov
negb
push
or
mov
cmp
xlat
lcall
pop
add
imul
inc
jnp
fwait
push
mov
cvtps2pi
add
lock
cmp
scas
sbb
xchg
jne
mov
push
push
or
adc
ljmp
add
outsl
fcomip
test
imul
fiadds
inc
pop
sbb
push
fisttps
mov
or
inc
push
inc
stos
inc
fxch
xor
int3
xchg
mov
cmc
or
movsb
fwait
aad
adc
movb
pop
decl
mov
push
arpl
add
scas
mov
push
lret
mov
push
push
xchg
fs
or
pop
pop
and
push
mov
add
fidivrl
into
cmp
scas
movsl
lods
jno
add
das
bound
cmp
add
xor
es
dec
ret
xchg
jbe
lods
xchg
sbb
into
mov
addb
pop
test
outsl
pop
leave
ja
mov
andb
cld
sbbl
mov
xor
xor
cmp
aad
add
jno
in
cmp
and
cld
pushl
xor
or
inc
mov
adc
adc
idivl
nop
inc
add
mov
decb
dec
push
and
pushf
enter
das
outsl
xchg
mov
into
lods
movsb
xchg
int
adc
or
xchg
rclb
xchg
dec
jae
nop
cmc
clc
iret
mov
mov
test
jmp
mov
and
int3
xchg
sbb
repnz
cs
sbb
or
add
in
xchg
cmp
loope
fwait
xor
xchg
popf
faddp
sarb
cmp
aas
sbb
sbb
jno
xor
sbb
push
aas
out
call
pop
add
scas
leave
fsubl
and
jne
or
addb
xchg
idivb
xchg
out
fadds
pop
sub
enter
fstps
repnz
or
sbb
pop
push
dec
cmc
stc
adc
sbbl
int3
sub
aaa
mov
mov
push
incb
sub
pusha
mov
mov
jp
xor
sahf
add
into
lock
pop
pop
lods
movsb
mov
mov
and
scas
scas
add
les
lods
pop
push
dec
loopne
lds
add
xchg
ret
ds
test
push
xchg
ljmp
xchg
cwtl
or
cmp
pusha
adc
pop
fcoml
pop
xchg
sub
daa
add
orb
scas
mov
loopne
iret
scas
imul
adc
test
xor
dec
sbb
jge
lret
xchg
gs
jmp
hlt
push
mov
cmpsl
jg
inc
cmpb
cli
add
adc
jno
jecxz
mov
adc
outsb
sti
fmulp
shrb
dec
pop
sbb
xor
xchg
jmp
sbb
add
in
ds
pop
jmp
pop
loop
sbb
adc
stos
loopne
data16
fs
in
test
loop
mov
cltd
xlat
lcall
xor
pop
xchg
xchg
rclb
ds
xlat
movsl
adc
in
cmp
cmpl
push
daa
sbb
scas
jp
inc
loopne
test
flds
sbb
sub
dec
dec
adc
jmp
call
addr16
and
shlb
iret
iret
ss
add
mov
aas
dec
aaa
sbb
inc
incl
add
adc
movsb
in
scas
push
jns
or
out
in
cmpsb
int
or
lock
roll
jae
inc
add
imul
lock
lock
mov
mov
mov
dec
push
loope
pop
std
sahf
roll
xchg
add
cmp
lea
icebp
xor
mov
cmp
fdiv
dec
in
dec
fildl
add
mov
movsl
cld
lret
cmc
lcall
repz
jno
dec
fxch
jecxz
push
jle
sub
cltd
push
mov
add
dec
les
mov
add
inc
cmp
cmp
push
xchg
ds
daa
notb
push
inc
je
xor
in
shll
movl
jle
in
xor
emms
mulb
sbb
dec
mov
dec
pop
pop
push
addr16
stc
or
add
cld
mov
jg
mov
pop
out
and
and
cmp
xor
cmpsb
inc
or
xchg
fidivrl
int3
cwtl
or
or
xchg
int
xor
je
dec
jp
xchg
lahf
xor
fistpl
and
cmp
scas
push
pmullw
sti
push
imul
xor
xchg
out
jbe
sbb
ljmp
or
test
jle
in
push
popf
jge
sbb
repnz
push
dec
pushf
cmpsb
push
mov
fldt
in
repz
sub
push
cmpsl
mov
ds
test
ret
pop
push
daa
pop
jns
dec
pushf
in
jg
jp
dec
or
jno
shlb
jmp
leave
xchg
add
xor
push
adc
sbb
dec
in
mov
mov
inc
sbb
xor
sub
repnz
popf
sub
mov
cmp
sti
cmpsl
xchg
xchg
dec
xor
inc
mov
clc
xor
stos
push
or
insl
or
insb
ljmp
adc
and
lcall
sbb
xchg
imul
jno
jle
fidivl
pop
imulb
and
das
lret
sub
loop
jl
aam
cmp
mull
pushf
in
mov
push
mov
pop
fildl
push
pop
add
jmp
ss
xchg
sahf
mov
or
test
push
add
sub
in
inc
sbb
sahf
cmp
mov
sub
repz
sbb
jo
add
push
push
cli
mov
dec
jo
push
xlat
pop
jne
mov
pop
mov
sbb
add
cmp
cld
jnp
xchg
push
das
adc
xor
fs
shr
mov
fdivr
sbb
or
flds
mov
js
enter
shlb
test
sub
adc
mov
sbb
scas
mov
push
int3
into
push
sti
ret
dec
adc
lret
xchg
adc
enter
movsb
push
mov
jl
mov
xor
or
mov
mov
int3
add
adc
xor
nop
jne
pop
sbb
jb
push
gs
add
dec
popf
mov
loop
in
imul
js
lret
subb
and
stos
mov
stos
mov
mov
pop
add
jle
daa
in
popa
dec
stos
rolb
mov
sbb
mov
clc
xchg
sub
clc
cld
rcll
or
and
test
scas
icebp
jle
fwait
sbb
mov
popf
cmp
mov
int
xchg
stos
test
loop
jecxz
or
ja
jmp
push
dec
push
mov
sub
stc
cli
xchg
rcr
mov
popf
mov
into
ds
dec
add
and
adc
pop
loop
fcomps
loop
ret
push
and
jg
test
lds
enter
xchg
sub
iret
dec
jl
movsb
filds
loope
jo
fbld
mov
push
dec
outsl
pop
jb
fmul
imul
movsl
dec
pop
mov
jl
push
jl
dec
ljmp
les
mov
cwtl
xchg
push
jp
shll
imull
imul
je
mov
pop
std
jbe
adc
push
or
stos
addl
or
sbb
xor
rcll
mov
adc
fmulp
inc
fisttps
scas
inc
mov
fdivp
mov
imul
mov
lock
test
out
stc
in
xor
mov
inc
jmp
rol
xor
and
inc
sahf
daa
xchg
fcmovnb
dec
ljmp
xor
jge
dec
cltd
cmpsl
mov
mov
movsb
pop
adc
mov
pop
lea
aam
xor
sub
push
pop
pop
cmp
mov
xchg
xor
xor
and
orb
lret
ret
cmp
clc
sbb
dec
sbb
and
push
and
lret
push
pusha
insb
mov
or
push
mov
in
pop
aas
mov
fdivs
or
mov
scas
cmpsl
adc
inc
nop
jo
xchg
pushf
stos
xor
inc
pop
adc
and
mov
outsl
or
mov
std
fcmove
ror
popa
mov
jecxz
pusha
sbb
dec
sarl
mov
cmp
scas
pushf
cmpsb
cmp
loope
data16
rcrb
mov
push
shlb
mov
repnz
lods
push
mov
arpl
add
jg
pop
sahf
jge
jb
enter
out
inc
xchg
negb
add
es
sub
out
stc
inc
or
mov
jg
jge
sti
fldenv
ljmp
data16
cmpb
push
and
and
inc
ret
mov
jo
test
js
jnp
gs
mov
vcvttsd2si
inc
iret
xchg
int3
mov
outsl
mov
jo
std
hlt
or
push
adc
repnz
movb
rcrb
lcall
syscall
cmp
call
sbb
es
loopne
sub
or
and
push
adc
in
adc
mov
inc
and
jno
test
cmp
ficompl
out
js
fsub
stos
andb
jae
push
dec
or
into
out
push
inc
push
incl
std
push
popa
mov
notb
jae
jmp
sub
imul
jl
shrb
xor
push
test
addb
int
sub
fmuls
or
ljmp
enter
outsl
push
sub
repz
adc
inc
xor
jno
xor
sahf
rorl
xlat
jp
adc
sub
mov
inc
xlat
jae
out
hlt
mov
jne
out
sbb
mov
fldl2t
xlat
ss
fnstenv
call
dec
xchg
xor
faddl
xor
xchg
mov
pop
inc
pop
icebp
mov
popf
jmp
mov
dec
lds
fs
jmp
das
mov
add
outsl
mov
xchg
adc
loopne
inc
pop
es
push
jb
or
or
push
leave
push
jne
inc
mov
cwtl
mov
out
sti
xchg
cmp
out
jne
leave
iret
push
pop
xor
push
and
xchg
data16
and
mov
mov
push
mov
cmp
mov
stos
fbstp
xor
je
loopne
cmp
sub
jg
jbe
popf
push
cltd
add
mov
inc
cmova
mov
pop
fcmovnb
insb
push
mov
ret
sbb
push
inc
push
repnz
arpl
out
dec
rorb
mov
jmp
das
adc
mov
es
dec
aaa
mov
cli
inc
inc
lds
sarb
inc
sbb
mov
out
inc
lcall
dec
cltd
xor
lcall
mov
cmp
push
ja
mov
adc
dec
addr16
or
inc
mov
sti
mov
pop
lods
pop
pusha
push
push
inc
lods
add
cmp
inc
mov
sti
in
faddl
scas
ss
mov
inc
mov
push
outsl
fstpt
inc
movsb
push
push
inc
or
sti
mov
sbb
das
jae
and
inc
inc
fmuls
jg
notl
jnp
xchg
adc
loope
mov
hlt
ss
push
in
jae
mov
sub
or
hlt
jg
daa
jl
mov
jnp
xlat
or
push
insb
lcall
into
jecxz
inc
js
jp
in
push
hlt
mov
xor
ffree
aad
sarb
xor
dec
scas
push
std
aam
stos
mov
jg
push
lea
scas
add
sti
inc
mov
pop
int3
imul
loope
leave
nop
inc
arpl
xor
dec
jecxz
mov
mov
cmc
mov
dec
lds
cmp
cmovl
pusha
sub
sub
cmp
pop
mul
repz
adc
dec
adc
mov
adc
rdpmc
add
out
dec
clc
dec
xchg
fcomps
pop
adc
int3
enter
sahf
xchg
das
dec
push
mov
push
int
cmp
rcr
xchg
push
lods
mov
mov
gs
or
pop
scas
push
pop
lret
addb
stc
shrb
sbbb
aad
xorl
mov
add
enter
dec
jbe
push
dec
or
mov
mov
push
andl
sbb
push
icebp
xchg
add
cmp
and
je
lret
mov
fsts
adc
ss
xchg
push
sbb
enter
daa
inc
fbld
clc
mov
popf
imul
adc
popa
sbb
repnz
or
enter
inc
pop
movb
clc
ficomps
xor
es
sbb
adc
cld
pop
push
sub
test
imul
mov
cmp
fwait
sbb
push
mov
mov
js
mov
push
int
cmp
and
loope
fbld
pop
andb
into
xor
inc
dec
xchg
les
inc
pop
inc
lods
and
dec
pop
ret
mov
ret
or
loopne
shrl
sub
into
mov
jnp
xchg
xor
xchg
in
ficompl
es
lret
adc
imul
jb
nop
icebp
out
pop
mov
int3
fs
mov
mov
and
std
ret
xor
fmuls
pop
cld
push
sbb
pop
cmpsl
mov
cmp
add
rcrl
and
pop
jl
or
sub
cmpsl
in
cmc
sahf
cmc
push
fisubl
clc
rcr
cltd
xchg
cmp
adc
sub
cmp
xor
clc
push
rolb
jle
pop
ss
ja
push
cli
push
loop
cmp
and
mov
dec
add
cmpsb
add
mov
imul
cmp
mov
jno
aam
insl
fnstenv
sahf
jnp
sbb
mov
jo
das
sbb
outsb
into
sbb
fsubrs
jbe
mov
outsl
test
mov
jp
pop
out
imul
dec
dec
fndisi(8087
mov
ret
or
adcb
jg
inc
fsubl
int3
mov
jno
lret
test
addl
mov
pusha
push
adc
icebp
jmp
mov
push
mov
jnp
sarb
pop
xor
loopne
xor
bound
pop
adc
aam
call
aam
aad
lret
sti
xorb
and
jbe
int3
mov
jg
sbb
or
lock
cltd
in
or
and
iret
mov
dec
mov
dec
sbb
aaa
stos
int3
not
nop
xchg
shlb
mov
mov
repz
jo
shrb
daa
cmpsb
adc
negb
mov
aas
aas
sub
xchg
popf
test
cltd
dec
test
iret
cmc
xchg
mov
loope
out
dec
mulb
dec
sbb
inc
int
dec
loopne
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
cmp
or
jp
push
push
sbb
and
or
jl
push
cmpb
bndstx
mov
pop
push
jg
mov
cmp
xor
dec
mov
pusha
fisubs
mov
lock
mov
xor
jge
ret
cmpb
ret
lcall
jae
outsl
ds
outsb
jb
fsubl
jne
int3
cmp
cmp
dec
aam
mov
int
fimuls
push
es
add
shr
stos
cmp
aad
and
rcrl
add
push
aad
hlt
nop
lods
push
subb
aaa
adc
sbb
mov
xlat
pop
mov
jnp
mov
and
sarl
sub
sub
scas
loop
mov
xor
pop
incl
fists
fnstenv
pop
testl
ret
mov
fidivrl
aaa
sub
add
add
add
inc
jp
test
push
jae
stos
pop
xchg
jo
outsl
je
jecxz
rol
mov
or
push
sbb
mov
xchg
adc
push
sti
aaa
xor
lcall
lods
fst
rcrl
jnp
xor
in
and
push
xchg
dec
or
fdivrp
pop
xor
xchg
cmp
pop
dec
inc
sub
notb
lods
mov
adc
sbb
mov
sahf
dec
xor
sbb
scas
xchg
mov
les
and
mov
repnz
jns
fs
xor
in
outsb
mov
add
jae
popf
lahf
cmpsl
cmp
cltd
sub
pop
repnz
mov
sbb
add
lods
lret
jle
shl
sub
bnd
in
push
xorl
jmp
divb
xor
add
int
push
pop
pop
or
stc
mov
jle
xchg
lret
sti
js
cmc
aaa
fidivl
mov
out
imul
adc
inc
xchg
movsb
cmc
dec
and
jle
push
cmp
ror
pop
ljmp
mov
or
adc
xlat
test
mov
mov
mov
mov
in
sub
jae
scas
push
adc
xor
pop
lea
movsl
xor
lret
mov
dec
in
pop
hlt
xor
sub
rcl
and
lea
and
xchg
cmpsb
movsl
inc
sub
ret
mov
ja
mov
mov
sub
adc
inc
loopne
adc
cs
xor
adc
xchg
add
ret
sbb
sti
clc
leave
add
clc
add
mov
stos
add
pop
in
inc
int3
mov
cmp
add
inc
movsl
sahf
pop
out
mov
and
fs
cmpsb
sbb
je
shlb
adc
inc
aam
push
popf
xchg
pop
shr
sbb
xchg
insl
addr16
mov
jle
cltd
in
sarl
or
gs
cltd
ja
mov
jno
lea
jp
inc
bound
mov
mov
mov
popf
inc
aaa
adc
js
aad
in
dec
rolb
lods
leave
fwait
test
mov
lea
dec
sahf
dec
add
adc
lret
mov
xchg
test
sbb
inc
mov
adc
jecxz
jne
push
sahf
pop
lret
sub
test
imul
and
sub
addb
push
cmp
sbb
rcrl
jae
stos
sub
inc
or
es
out
sbb
sbbl
dec
in
sub
push
idivl
test
imul
sarl
push
xchg
xor
add
add
mov
repz
fstpt
jecxz
gs
adc
fs
sub
addr16
add
xchg
jp
xor
mov
bound
xchg
movsb
ror
pop
roll
sub
lahf
xor
sbb
and
cmp
inc
xor
je
lahf
aad
fs
test
jne
js
mov
cltd
dec
cltd
and
rcl
loopne
fsubrl
mov
inc
add
idivl
dec
push
mov
jg
cmp
push
popa
and
js
hlt
les
imul
pushf
mov
cwtl
lret
cmp
shlb
outsb
mov
xchg
adc
sub
dec
and
fwait
out
xlat
or
cld
mov
out
daa
jne
mov
pop
cmp
jl
push
into
push
cli
daa
popf
dec
adc
jo
fiaddl
xor
shll
test
xor
into
sub
aaa
insb
dec
and
inc
add
add
dec
mov
xchg
scas
lds
push
jge
dec
mov
add
fistpll
adc
jge
push
lods
adc
test
and
push
stos
ds
aas
pop
incl
gs
jb
sbb
iret
and
and
sub
gs
mov
and
inc
mov
xchg
loopne
mov
sbb
mov
jae
cmc
lods
data16
fiadds
pop
mov
cmp
mov
add
xor
jmp
add
adc
jg
push
popa
imul
aad
sub
shr
lods
cmpsb
xchg
add
mov
repz
cwtl
outsb
pop
xchg
inc
ret
aad
mov
ds
sti
es
xor
jle
fldt
pop
xor
dec
and
mov
mov
xchg
cmpsb
lock
adc
adc
movsl
test
xor
dec
stos
iret
lahf
push
mov
xor
rcrl
data16
and
jb
pushf
inc
aas
int
add
es
mov
sub
cli
cmp
mov
jne
sti
or
les
jg
xchg
es
and
cltd
inc
xacquire
pop
mov
out
xor
xchg
jo,pn
fcomip
bound
pop
push
cwtl
mov
fidivs
sbb
mov
jb
xor
pop
xchg
int3
xchg
xorl
dec
dec
or
dec
mov
inc
sbb
rep
addb
xchg
adc
insb
sahf
lods
push
or
cmp
stc
repnz
cmp
cmp
shlb
mov
call
dec
into
lds
lods
out
out
pop
dec
jne
ja
in
dec
aad
sti
dec
xor
stc
pop
add
test
sub
nop
lock
subb
cmpsb
orw
sbb
outsl
jb
arpl
mov
bound
xor
mov
add
mov
push
scas
push
into
iret
loope
mov
inc
sub
loope
inc
pop
lods
xor
cmp
dec
cmpsl
xchg
mov
xchg
dec
xorl
adc
insl
xchg
es
rcrb
mov
mov
mov
adc
mov
test
daa
jns
push
sub
lock
or
inc
mov
imull
sti
xchg
ds
and
mov
enter
dec
rcr
filds
addr16
push
fmull
lcall
sub
lcall
jb
mov
fwait
adc
je
cmpsb
mov
xchg
jbe
mov
icebp
xor
dec
cltd
push
jno
shlb
frstor
or
decl
pop
inc
pop
outsb
clc
js
push
icebp
cmpsl
mov
push
sahf
fwait
imul
xor
out
cli
aam
and
sub
jnp
sbb
repz
lds
data16
cmpsl
insb
scas
xchg
es
lea
repnz
xchg
sub
mov
jae
jmp
xor
enter
sub
inc
xchg
xor
xchg
sub
test
push
out
jae
and
adc
dec
sbb
fucomp
popf
sub
cwtl
jnp
or
pop
xor
repnz
mov
xor
aas
insb
mov
cmpb
xor
mov
lahf
xor
ds
test
cmp
xchg
adc
jge
sahf
in
movsl
enter
jne
mov
and
pop
sbb
mov
cmp
fs
jle
ret
nopl
push
insb
push
adc
in
and
adc
inc
aas
push
push
jp
or
adc
imul
in
pop
dec
in
into
imulb
mov
adc
add
or
popa
push
ljmp
subl
gs
fsubp
into
movsl
je
nop
sbb
cmp
pop
stc
repnz
in
inc
push
mov
jl
jmp
xor
mov
imul
adc
mov
and
or
loope
cltd
lcall
clc
mov
jne
xchg
jg,pn
ss
fdivrs
ja
xlat
aam
cmp
mov
inc
pop
xor
sbb
pop
xlat
adc
adc
ret
rorl
add
dec
push
cmpsb
adc
cmp
popf
cld
jae
mov
dec
mov
xchg
mov
es
xor
mov
or
push
adc
jns
push
sub
mov
sub
jl
xor
lods
cmpsl
add
mul
sbb
push
in
inc
test
stos
notl
scas
sub
adc
rclb
pop
in
cltd
into
cwtl
sub
xor
xor
addb
fstl
jecxz
gs
adc
test
int
mov
hlt
popf
call
pop
insl
jbe
loope
cmp
xchg
lret
add
fnsave
pushw
lods
lret
insb
adc
mov
lock
cmp
movsl
pop
stc
mov
mov
mov
clc
shll
inc
adc
inc
fbstp
and
push
dec
xchg
aam
push
rcrb
repnz
mov
pop
push
ret
lret
jge
mov
push
int
jecxz
push
ror
sub
jmp
jnp
mov
push
pop
cmp
sub
enter
imul
jbe
fcmovb
mov
xlat
add
xorl
or
push
xchg
mov
xor
xor
dec
in
and
fs
repnz
mov
test
stc
shrl
jg
add
scas
inc
dec
inc
repz
test
mov
adc
loop
xor
iret
test
cmp
pop
jbe
outsb
xchg
dec
adc
and
mov
mov
fwait
mov
mov
jmp
mov
mov
sbb
sbb
outsb
in
shll
push
jmp
xchg
mov
jbe
pop
test
mov
cmpsl
push
push
mov
lret
repnz
cli
add
nop
adc
fisttps
pop
inc
loop
push
ficomps
xor
push
cld
scas
fsts
or
pop
es
in
lds
push
mov
cmc
sahf
loope
pop
xchg
add
inc
mov
fyl2xp1
sub
rorl
add
nop
shlb
call
lret
and
iret
xor
fcoms
push
sarb
sbbl
mov
jb
xor
sbb
xchg
push
loope
dec
and
cmpl
push
mov
js
fisttps
xor
stos
outsb
stc
lret
imul
adc
xor
jne
notb
rcrb
jae
js
xchg
leave
bound
xor
loope
cmp
fstps
push
jnp
test
and
sahf
cmp
push
addr16
daa
bound
xchg
lret
rolb
inc
dec
mov
adc
mov
mov
mov
ffree
out
movsb
cmp
inc
or
fwait
or
repnz
call
data16
push
adc
dec
clc
mov
xchg
bound
jno
xor
mov
dec
ret
cmpsb
jbe
xor
fcmovu
push
adc
sbb
mov
mov
pop
inc
pop
stos
pop
adc
in
pop
add
push
xchg
test
vmwrite
sbb
addr16
mov
lds
lret
cld
leave
pop
mov
cmp
sbb
aas
xchg
out
cwtl
cs
jmp
fadds
rol
test
add
inc
dec
pop
cmp
mov
jae
mov
push
fstl
ljmp
push
fisttpll
mov
jno,pn
inc
pop
cmp
out
jae
push
mov
mov
sarl
sbb
test
jg
sub
in
and
in
lods
test
mov
roll
test
roll
inc
clc
dec
mov
mov
or
xor
cmp
lret
mov
orl
jne
scas
push
lret
fwait
out
push
dec
inc
divl
sbb
loope
in
adc
lret
mov
cs
arpl
sbb
xchg
xor
xor
inc
int3
add
pop
fs
dec
sar
xchg
in
adc
in
loop
notb
and
dec
pusha
xchg
das
shlb
sbbb
dec
xchg
call
loope
mov
jbe
in
push
inc
jns
mov
int3
rcll
add
pushf
das
insb
mov
call
add
stc
scas
cmpsl
ljmp
cmpb
fwait
cmpsl
shll
out
and
addl
lcall
ds
das
addr16
pop
adc
pop
xor
mov
inc
je
jp
insb
pop
icebp
mov
lods
lcall
cmp
jmp
pop
dec
ret
ljmp
xor
arpl
aaa
mov
sbb
ljmp
into
and
mov
nop
cmpl
cmp
sbbl
push
testl
add
jl
outsl
loope
mov
push
sarb
clc
rcr
mov
shl
add
insb
mov
mov
mov
movsl
fwait
adc
cmp
js
add
idivb
inc
jp
adc
inc
sub
xor
pop
mov
ret
inc
cmp
mov
or
lret
adc
lods
mov
xor
inc
cld
lret
jno
les
ds
scas
xchg
test
stos
lock
inc
mov
lds
inc
push
cmpsl
mov
or
jbe
xchg
in
hlt
adc
fdiv
xchg
push
pop
or
pop
jno
mov
lahf
push
sbb
ret
mov
sbb
push
fsubl
sbb
pop
out
pushf
scas
rcl
insb
mov
sub
sbb
and
sub
add
push
lds
hlt
inc
jae
push
gs
cmpsl
dec
xchg
shll
xchg
jp
sub
out
in
xchg
mov
add
bound
je
je
add
insl
mov
adc
jmp
aam
sti
int
in
mov
cmp
cld
inc
sub
push
xchg
fiadds
insb
in
jb
sarb
xchg
pushf
icebp
pop
push
pusha
negb
mov
cs
fdivrl
jae
pop
hlt
push
push
loope
jle
pop
cmpsb
scas
stc
fwait
popl
sbb
mov
les
jle
sahf
jle
fcmovnu
cld
sbb
pop
aaa
leave
scas
push
sub
nop
push
mov
mov
adc
lock
sub
mov
or
ror
sub
xor
mov
jbe
push
mov
pop
test
hlt
mov
add
shll
sar
cmpsb
sbbl
rcll
add
and
stc
xchg
mov
js
cmp
pushf
dec
mov
outsb
mov
movsl
out
push
fs
mov
xor
add
xor
outsl
add
push
in
xor
outsl
sbb
loope
mov
cs
xchg
xor
push
jne
fiadds
repnz
idivb
aas
mov
cli
int3
or
push
xor
xchg
js
inc
std
stos
imul
pop
cmp
push
call
lret
xor
pop
pop
or
lret
ja
repz
mov
mov
imul
rcrb
idivl
test
mov
adc
in
jb
mov
push
dec
repnz
jl
lods
sbb
or
sbb
mov
mov
jns
cmpsb
ret
sub
stc
sub
inc
lahf
andb
add
mov
jecxz
call
les
lea
xchg
jg
aaa
adc
jne
jecxz
or
clc
fs
add
cmpsl
hlt
mov
adc
xor
outsl
xchg
sar
jg
lds
xor
rorb
inc
fistpl
push
xchg
les
gs
and
mov
xor
xchg
dec
inc
rclb
out
mov
xor
sub
insb
mov
pop
in
xlat
sub
test
add
call
insb
mov
loopne,pn
out
mov
pop
mov
sub
xor
jns
pop
inc
popf
test
pop
lahf
mov
mov
fdivl
push
daa
loopne
add
pop
je
mov
adc
aas
shrb
frstor
pushf
scas
adc
nop
js
test
push
in
icebp
xor
xor
jno
ret
in
fists
rorb
dec
dec
mov
frstor
fwait
inc
les
add
imul
loope
fcmovnb
adc
pop
mov
mov
push
lahf
push
aaa
dec
push
lret
scas
cmp
xchg
push
fdivl
test
popf
in
fimuls
jge
into
mov
iret
dec
cmpsl
push
dec
or
mov
adc
dec
hlt
cwtl
xchg
push
mov
mov
jne
fcom
sbb
mov
push
cmp
push
rol
dec
mov
in
popa
cmp
mov
dec
loopne
jns
in
stos
lods
mov
insl
jecxz
jae
pusha
sbb
adc
jne
sbb
popf
cmp
imul
cmp
aaa
popf
loopne
lret
popf
cmp
jecxz
pop
xchg
imul
mov
loop
dec
cmpl
sbb
lahf
test
ja
mov
icebp
sbb
push
pop
and
and
push
stos
pop
outsb
fwait
sbb
push
pop
lcall
repz
out
lock
call
mov
ret
shr
outsl
les
loop
jae
pop
mov
data16
cmc
ret
cmpsl
loop
outsl
push
xchg
adc
out
pop
imul
push
adc
loope
xor
movsb
xlat
cld
imull
push
add
cmp
cltd
cs
xor
sbb
lret
pushf
adc
shlb
repnz
push
cmp
add
pop
lea
push
and
insl
stos
shll
pop
and
lods
add
sub
iret
popa
test
and
push
lahf
or
jb
shlb
or
rclb
inc
or
inc
cwtl
push
cmp
cwtl
mov
fimuls
jle
xchg
jne
push
ja
xor
mov
int3
outsl
jbe
jp
inc
cmp
loope
ret
in
sub
insb
repnz
and
jg
jmp
fidivs
pop
sbbl
repz
jg
mov
push
inc
lea
add
lret
dec
push
insl
mov
pop
jo
mov
test
out
jge
call
mov
bound
pushf
or
gs
and
hlt
lods
cwtl
mov
inc
jge
dec
sbb
sbb
icebp
mov
into
imul
adc
push
xchg
dec
fimuls
push
rclb
sahf
cmp
into
pop
call
inc
lahf
pop
mov
insw
push
inc
fidivs
pop
rorb
nop
hlt
out
xchg
popf
push
sbb
lcall
pop
mov
rcrl
test
push
data16
fimuls
lock
iret
imul
push
rcr
xchg
or
je
xlat
outsb
imul
mov
jnp
xor
and
push
into
sbb
ds
inc
aas
loopne
cmp
or
nopl
lcall
jg
mul
movsl
int
mov
mov
sub
jae
sbb
jne
ret
xor
xor
clc
add
dec
shlb
insl
test
andl
out
hlt
inc
aad
popa
das
xchg
pop
rorb
lahf
pop
fmuls
enter
inc
cmpsl
pop
mov
jmp
daa
mov
add
sub
push
subb
mov
test
fs
sub
in
mov
fisubrs
and
and
mov
pop
jb
fsubr
enter
out
jbe
xchg
xchg
sbb
scas
mov
call
pop
xor
xchg
adc
mov
pop
movsb
push
cmpsl
sub
inc
add
lret
lds
pop
addb
jp
imul
push
dec
cmpsl
int
cmp
sbb
icebp
fs
jne
lods
push
je
xor
insl
push
mov
daa
add
add
cmp
mov
pusha
mov
lock
inc
pop
mov
notb
cmpsl
std
pop
addr16
aam
outsl
mov
aam
add
pop
nop
bnd
frstor
arpl
inc
push
mov
lods
jo
or
jae
scas
mov
mov
xchg
test
int3
xor
cmp
clc
popf
cmpsl
adc
rolb
jle
adc
adc
lods
push
insb
fbld
in
js
stc
fstpl
push
mov
orl
mov
addl
jp
pop
fidivrl
push
into
pop
movsl
imul
add
arpl
inc
and
ret
push
mov
and
push
out
dec
fs
ficomps
push
lds
xorb
icebp
xchg
mov
es
ret
mov
xor
lea
xor
xor
jge
add
enter
cwtl
push
fdivs
pop
add
pop
push
sub
cmp
mov
and
xor
xchg
cmp
push
or
dec
cmpb
inc
and
xor
test
aas
sub
mov
cltd
mov
sbb
es
pop
sbb
jne
push
je
lcall
pop
imul
jnp
in
js
xorl
xor
insb
cwtl
jle
dec
xlat
rolb
xchg
push
je
inc
mov
mov
aad
xchg
jge
decl
adc
pushf
sahf
daa
jb
dec
out
mov
xchg
lret
mov
cmp
jnp
leave
lods
dec
and
rol
imul
ljmp
xchg
cmp
in
sub
ja
dec
cmp
fbstp
repnz
jnp
test
xlat
repnz
sub
jle
sbb
inc
cmp
mov
mov
dec
jbe
dec
shrl
negl
sbb
das
in
subl
stos
notb
xchg
cmp
mov
iret
addr16
scas
out
aam
data16
clc
fs
outsl
push
aaa
inc
dec
rorl
arpl
out
notb
lahf
pusha
mov
pusha
in
icebp
int3
inc
push
inc
xchg
adc
out
fwait
mov
add
test
mov
aaa
sbb
fdecstp
cmp
stc
scas
ja
enter
aam
inc
jge
sbb
negb
mov
pop
andl
or
test
jl
xchg
fmul
xchg
or
sarl
sub
push
out
daa
jns
fcoms
fsubs
out
mov
std
lods
push
test
mov
cltd
push
inc
je
repnz
inc
and
scas
xor
mov
or
arpl
push
adc
popf
sti
mov
push
sub
push
or
adc
push
adc
cmp
dec
test
xchg
adc
xor
pop
push
mov
mov
outsb
jne
lods
ret
ss
add
daa
sub
flds
xchg
imul
push
test
inc
outsb
xchg
lods
mov
lea
popa
scas
je
mov
jmp
lret
xchg
or
cld
outsb
andb
cwtl
cmp
inc
hlt
int
inc
inc
dec
into
iret
dec
and
xor
pusha
mov
cli
sub
adc
loope
mov
leave
das
loop
pusha
dec
add
sbb
test
xchg
pop
add
xlat
fsubs
aad
std
aaa
cmp
lds
test
pop
fs
cs
scas
stc
adc
mov
push
xor
idivb
and
sub
or
andb
ficoml
mov
adc
inc
cltd
outsl
in
mov
leave
test
sahf
pop
add
mov
stc
lds
out
cld
xor
mov
lret
jne
outsl
or
lds
xchg
add
mov
lea
pop
test
rcrl
mov
lahf
ja
and
cmc
jo
pop
sbb
mov
sbb
inc
divb
push
xor
test
push
xor
negb
or
jne
or
sbb
xchg
inc
mov
xchg
cltd
and
addr16
dec
fists
jne
mov
push
je
and
les
add
push
lahf
or
cmc
fcomps
ja
sbb
mov
frstor
push
xchg
shll
fists
ss
pop
fists
dec
andl
ja
sarb
in
popf
andb
xor
movsl
xchg
mov
mov
xchg
add
roll
xor
xor
push
sub
scas
xor
or
pop
push
mov
xor
pop
jno
adc
les
or
mov
and
push
aad
xchg
jl
jns
or
aad
jns
mov
dec
push
jo
lret
in
push
lret
test
les
inc
mov
xchg
in
lret
into
push
test
push
mov
xchg
push
test
sbb
mov
fs
shll
lret
bound
in
pop
add
daa
bound
insl
jl
movsl
fcompl
xlat
adc
mov
cmpsl
pop
dec
mov
jo
push
rclb
mov
fisubs
and
dec
incl
jg
push
sbb
push
arpl
xchg
cltd
fdivrl
mov
rorl
xlat
mov
testb
ds
mov
cld
sbb
cmc
pop
popa
and
call
inc
icebp
adc
sub
add
xor
inc
call
imul
imul
nop
sub
or
dec
mov
mov
shll
jp
jno
in
ret
mov
sbbl
test
sahf
sbb
adc
inc
fldlg2
sub
push
ljmp
das
dec
in
repnz
out
jbe
adc
or
jmp
push
xchg
ficomps
pusha
or
icebp
inc
popa
or
or
mov
add
pop
insl
test
xchg
stos
sahf
idiv
lahf
sub
mov
lahf
sbb
ficoml
mov
add
pop
push
mov
popa
and
cmp
cltd
xor
cmp
repz
in
and
and
push
out
jno
add
inc
cmp
pop
insb
cmpl
rorl
cltd
and
cmp
jg
push
and
fs
adc
inc
jecxz
cs
cmpb
sub
or
shrl
aam
loope
cmp
or
ja
sbb
cmp
adc
dec
jmp
and
les
mov
sub
iret
mov
cmpsl
cld
out
xor
inc
jo
xlat
mov
repz
mov
fidivrl
add
das
push
sbb
mov
pop
loopne
inc
inc
inc
lret
into
xchg
icebp
sbb
out
cmp
sbb
and
call
pop
out
cs
das
push
jno
mov
and
adc
addl
mov
adc
je
or
orl
jl
out
inc
jecxz
mov
fs
mov
and
push
inc
cltd
les
std
push
lret
xor
fwait
mov
outsl
leave
out
cmp
xlat
popa
fs
cmpsl
aad
xchg
sub
mov
cmc
mov
mov
in
mov
loope
cltd
mov
pop
mov
jb
outsl
jle
scas
push
es
mov
xchg
jmp
call
inc
or
popa
mov
lds
int
push
add
and
xchg
cmp
notb
mov
and
rcrb
xor
pusha
ss
mov
subb
mov
dec
cmp
scas
popf
mov
jmp
sub
inc
dec
in
mov
jecxz
sub
into
aas
rcr
inc
addl
sbb
aad
popl
stos
sahf
inc
cltd
cld
scas
jge
scas
sub
jg
bound
xchg
mov
addr16
sub
or
hlt
cmc
cwtl
mov
jae
adc
mov
push
dec
adc
lods
add
inc
stos
das
hlt
dec
xchg
into
lods
mov
dec
pop
ljmp
loopne
rcrb
int3
fs
sti
cmp
sbb
xchg
stc
cmpsl
insb
loope
das
in
xlat
push
ud1
divl
inc
fstpt
push
cmp
xor
outsl
dec
sbb
jne
inc
aad
xor
push
repnz
jne
lods
sub
xchg
and
je
subb
lret
ret
add
add
inc
jne
jge
sarb
push
addb
mov
sub
push
push
ja
mov
xchg
js
cltd
xor
xchg
test
cs
adc
mov
stc
popa
lock
cmp
stos
inc
mov
push
xor
icebp
xor
std
push
add
loopne
ljmp
leave
aam
lret
jns
ljmp
and
pop
aam
sar
pop
bnd
stos
popa
mov
scas
ss
les
hlt
xor
loop
stc
dec
outsb
push
test
punpcklwd
adc
test
and
push
test
pop
lods
ret
inc
mov
pop
pop
push
test
sub
jge
pop
mov
scas
jge
ss
shll
or
aas
mov
pop
mov
bound
push
popa
or
in
test
or
fld1
xchg
stos
cld
lods
sbb
xchg
stos
and
mov
cwtl
call
xor
jg
bound
rolb
or
mov
jl
sti
fstpl
push
aad
xchg
cltd
cmp
add
loop
xchg
fwait
nop
sbb
stos
pop
inc
xchg
and
mov
dec
ja
dec
jp
repz
jno
inc
andb
and
roll
adc
push
xchg
outsl
cmp
or
cmp
pusha
mov
mov
aas
dec
imul
das
pop
loope
inc
lahf
adc
jmp
lahf
sub
cmpsb
adc
jns
std
in
shl
bound
lret
stos
iret
adc
mov
loopne
jmp
lret
leave
xchg
push
lahf
cmc
les
aad
cmp
dec
xor
push
inc
mov
mov
or
gs
stos
data16
jl
lret
xlat
cmp
lods
jno
dec
mov
sub
fld
cltd
icebp
loopne
movsb
inc
flds
aaa
sarw
mov
fidivrs
fiadds
xchg
adc
xchg
daa
pop
xor
retw
hlt
pop
jb
pop
movsl
cwtl
xchg
push
push
mov
ds
dec
into
push
fsubr
out
pop
arpl
cltd
push
lahf
pop
mov
push
jbe
hlt
mov
mov
hlt
orl
aas
popw
shl
or
fs
mov
loop
sub
mov
movsl
push
lea
jle
mov
lods
or
push
mov
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
dec
inc
roll
outsb
sbb
jp
pop
jp
enter
pusha
lahf
mov
push
stos
scas
jecxz
xchg
cmp
lret
orb
push
cmpsl
and
pop
and
push
fwait
and
ds
pop
sub
leave
pop
mov
std
sahf
jge
or
in
les
in
inc
mov
fnstenv
pushf
das
movsl
jecxz
das
ret
mov
jmp
dec
lahf
jecxz
push
pushl
dec
cli
test
jle
ficompl
add
xor
cmp
cmp
pop
movsl
add
inc
pop
imul
sub
add
jae
pop
push
xchg
lods
les
jmp
popa
sub
hlt
outsl
pop
mov
leave
push
xchg
inc
mov
xchg
add
daa
js
aam
and
lret
std
sub
ljmp
adc
mov
cmp
jle
adc
fistps
sbb
push
pushf
mov
xor
rorb
aas
das
dec
popl
sbb
mov
cmp
stc
icebp
in
sti
data16
pop
int3
imul
cmpb
sbb
lods
in
mov
dec
sti
rolb
out
xor
push
xchg
lret
in
mov
pop
sub
std
adc
mov
push
add
repnz
mov
frstor
cmp
cmp
push
cltd
dec
cmpsb
adc
push
mov
cmp
mov
lahf
lahf
xor
mov
push
mov
push
jbe
fcmove
test
movsb
addr16
pushf
lock
dec
sub
sub
mov
xchg
cwtl
mov
or
or
mov
xlat
int
sub
cwtl
lods
movsl
leave
pop
push
add
or
iret
cmp
push
jg
xchg
cmp
mov
sbb
xchg
lret
pop
shll
cmpsb
insl
pushf
lahf
xchg
inc
popa
lds
ds
out
test
sahf
dec
flds
sbb
xchg
mov
sbb
cld
inc
push
shll
pand
or
movsl
in
or
aaa
xchg
mov
cmp
add
outsb
jo
das
lahf
js
inc
das
add
or
and
sbb
mov
jp
push
negl
stos
test
sbb
mov
add
push
pop
or
int
pop
push
inc
inc
mov
out
ds
xor
and
icebp
mov
sub
or
out
rolb
popa
neg
and
aas
outsl
mov
xor
rcrb
or
mov
push
loope
enter
push
or
stos
sbb
sbb
lahf
xor
jo
push
cwtl
add
adc
stos
mov
lea
dec
xlat
movsb
xor
fiadds
push
pushf
mov
mov
sbb
jle
repz
aas
sti
frstor
shr
in
xor
dec
jb
scas
or
ret
adc
in
mov
jne
pop
mov
push
pop
mov
ja
fsts
xchg
out
push
push
inc
pop
sbb
dec
mov
addr16
cmp
push
sbb
mov
sbb
sub
test
popf
lods
in
pop
mov
icebp
adc
jns
out
enter
sahf
aam
in
aad
aad
cmp
pop
adc
cmp
sbb
sub
scas
in
dec
dec
das
cmp
mov
test
push
cmp
push
lcall
test
cmc
push
sub
dec
add
jne
jo
xchg
xchg
ja
in
es
out
or
loope
mov
mov
xchg
push
lahf
mov
mov
je
mov
ret
push
in
insl
fildl
imul
pop
add
insl
mov
push
jecxz
lock
push
adc
ficoms
jl
xchg
shll
jl
xchg
loopne
cmp
daa
rcll
test
outsl
enter
dec
shl
mov
aaa
or
inc
and
sub
mov
mov
jl
adc
stos
aad
popfw
xchg
les
add
xor
mov
xor
fs
inc
sub
jl
int3
pop
sbb
add
rcrb
jae
jge
mov
pop
sub
ret
out
jne
pop
adc
sbb
js
inc
adc
fistl
jmp
inc
mov
call
decl
incb
jle
lahf
mov
es
sub
and
faddl
lods
in
stc
sub
scas
mov
je
insb
sub
fsubrs
or
mov
cmp
js
mov
fs
pop
mov
lret
ljmp
sbb
mov
lret
sub
mov
lcall
lret
xor
mov
mov
and
outsl
dec
pop
pop
aad
ja
mov
sbb
test
mov
cmp
popa
stos
aad
lret
xor
sar
clc
xchg
sub
cltd
sub
shrl
fldcw
or
mov
je
int
mov
sub
jmp
lock
jnp
jmp
aad
ss
data16
cmp
loope
inc
cmp
cmp
mov
fs
jb
rcr
cmpl
aaa
stos
cltd
or
leave
jecxz
adcb
push
arpl
fiadds
repnz
mov
cmpsb
inc
jmp
dec
in
jge
mov
and
aas
decb
std
loope
test
idivb
cmpsb
mov
push
loope
xchg
loope
test
mov
sub
adc
pop
cli
mov
inc
std
and
in
pop
jp
xor
push
lret
inc
fcmovu
jge
fdiv
stos
dec
loop
sub
imul
loopne
ret
xor
jp
lahf
adc
imul
inc
clc
test
enter
cld
insb
lea
xchg
dec
push
sub
sahf
push
cmovl
xchg
inc
push
jmp
sarl
cmpl
pop
fcmovne
shll
sbb
sbb
ja
in
les
cmp
icebp
hlt
adc
or
or
fisubrl
cmc
and
add
sub
add
dec
xor
jae
xchg
dec
push
jecxz
popl
adc
sub
and
movsb
adc
daa
push
mov
loop
imul
movsb
xchg
mov
add
mov
filds
and
cmp
sub
cli
mov
dec
dec
insl
repnz
je
imull
adc
aam
ret
out
out
sub
mov
xorl
movsb
lret
aaa
cld
mov
jg
add
xor
into
or
adc
mov
pop
push
dec
clc
bnd
arpl
rcrl
sub
inc
push
sbb
sbbb
dec
decl
mov
mov
cld
in
mov
sub
fwait
jnp
push
push
call
sub
adc
out
roll
cmpsb
xor
frstor
push
popa
loopne
xor
fldenv
outsl
mov
and
adc
cmp
daa
ljmp
iret
mov
jno
push
rclb
aaa
ffreep
inc
xchg
lret
int3
ss
fdivl
push
mov
mov
nop
movsb
clc
dec
jae
add
sub
adc
xchg
mov
popa
jp
sub
movsb
and
jl
stc
das
loop
jbe
add
sbb
cli
out
imul
xchg
cmpxchg
stos
hlt
dec
mov
inc
push
and
ficompl
jg
je
push
add
aam
jne
lock
or
and
cmovs
pop
xchg
lret
ljmp
xor
sub
test
cltd
movsl
div
push
out
sub
mov
and
shll
sub
xchg
jbe
fstpl
lea
or
dec
fimuls
push
cld
pop
out
add
jb
pop
push
les
in
icebp
leave
pusha
xor
arpl
cmc
repz
add
mov
inc
add
mov
es
sub
push
lock
push
out
jp
or
mov
add
dec
inc
insl
mov
adc
sub
nop
push
and
popf
jo
mov
add
xchg
rol
push
shrb
adc
enter
xchg
lcall
and
fidivs
fdivrl
mov
mov
mov
adc
jo
outsl
repnz
xchg
or
je
xchg
jp
out
cs
cwtl
ffree
inc
mov
or
mov
mov
pop
sub
mov
jae
and
dec
mov
cmp
sub
cwtl
lods
stc
or
pop
xor
and
sbb
notl
sub
cmpsb
pop
loope
mov
mov
test
ficompl
sbb
notl
hlt
push
inc
dec
aaa
inc
arpl
pop
xchg
sti
xchg
jo
es
popl
cltd
test
sub
sbb
mov
arpl
int3
sub
andl
push
adc
xor
mov
pop
inc
inc
sti
in
les
outsl
push
push
in
fisttps
test
or
sahf
jnp
push
pop
mov
mov
inc
scas
jmp
pop
cmp
push
mov
test
and
mov
xor
cli
mov
lahf
fimuls
hlt
stc
ss
lea
inc
pop
or
orl
outsl
xchg
xor
and
mov
pop
pushf
aam
mov
xchg
jb
nop
xchg
repz
jge
cmp
inc
pop
dec
test
lcall
lret
xor
flds
pop
frstor
mov
enter
mov
sbb
jae
push
pop
and
shll
mov
cli
imulb
aam
fnclex
dec
sbb
sub
ret
aaa
jns
adc
xchg
cmp
xor
leave
outsl
test
jbe
movsb
loope
cmpsb
popf
adc
idivl
cmp
jmp
mul
fldl2e
or
mov
leave
dec
sbb
cmp
bound
test
push
push
jp
mov
and
unpckhps
push
lret
sbb
pop
pop
stc
jl
or
xchg
adc
lret
mov
pop
push
or
iret
outsb
lods
iret
xchg
into
jne
add
aaa
sbb
cwtl
push
jge
sbb
jo
push
arpl
test
mov
adc
xor
xchg
call
sub
std
stc
jp
dec
adc
rcrl
mov
lods
mov
dec
push
pop
popa
lds
fwait
xor
pop
cmp
mov
adc
jae
mov
les
inc
jl
shlb
mov
inc
mov
or
mov
xorb
test
into
pop
xor
xor
pop
cltd
mov
jmp
push
out
cwtl
jo
sbb
mov
in
xor
nop
jge
aaa
addl
dec
in
and
xor
jecxz
xorb
icebp
mov
add
fdivrs
mov
cmpsb
mov
inc
push
fcoml
movsb
ret
jb
adcb
add
pop
dec
insb
xor
sbb
cmpsl
cld
out
sbb
push
mov
push
xchg
mov
jno
mov
aad
imul
popf
mov
jb
xchg
fidivs
icebp
pop
mov
mov
popa
andnps
outsb
out
insb
imul
jecxz
cmp
cmc
adcl
mov
push
fwait
xor
inc
or
aam
jae
push
jo
jmp
push
sbb
mov
movsl
xor
mov
ret
test
movsl
sub
mov
inc
cmpsl
sbb
test
lret
in
sub
cli
add
sub
shlb
dec
dec
or
add
sub
fs
jbe
fmuls
in
inc
stos
and
mov
rorb
sti
ljmp
push
mov
xchg
cmp
mov
pop
into
push
scas
push
and
sub
test
stos
jl
sub
addr16
popa
leave
dec
icebp
mov
es
mov
adc
das
sahf
xor
cmp
add
mov
out
lock
lcall
int3
in
out
in
mov
mov
sub
xlat
test
lret
cmp
xor
loop
add
push
lret
stos
lahf
sbb
sub
inc
sbb
sbbb
jae
mov
cltd
sahf
insl
xlat
lds
cwtl
adc
loop
xchg
inc
popa
pop
inc
pushf
incb
rcrl
test
leave
pop
add
mov
cld
lcall
mov
dec
int
sbb
pop
or
lret
fdiv
lods
push
mov
cmc
gs
adc
xlat
vpandn
jmp
cmp
aaa
add
mov
push
cli
enter
loopne,pt
mov
or
inc
movsb
mov
pop
or
cli
sahf
xchg
xchg
mov
sub
das
popa
pushf
pushf
xor
loopne
or
adc
push
les
push
inc
outsb
inc
cmp
pop
stos
lahf
pop
fisttpll
and
xchg
test
lock
je
and
test
xor
jge
test
addl
fucom
ror
jo
pop
dec
test
or
in
adc
pop
mov
jne
pop
lock
xchg
popf
scas
je
cmp
fstpl
mov
je
inc
jl
pop
adc
int
fucom
xchg
insb
subb
js
lock
mov
lea
repz
aad
xchg
adc
popa
and
mov
insl
negb
push
mov
add
lods
out
sub
sub
or
out
add
lahf
lret
dec
adc
xchg
fisttpll
xor
jmp
jge
out
int3
dec
rcrb
push
or
push
jmp
inc
call
loop
dec
lea
or
sbb
cs
push
pop
lret
test
aaa
inc
rorl
ret
lods
lret
sbb
scas
dec
pop
test
out
sub
subb
pop
jp
imul
mov
xchg
notl
pop
push
fistpll
rolb
test
das
adc
into
dec
sub
and
loope
ficoml
and
sahf
mov
or
cmp
or
xor
mov
add
push
inc
nop
push
add
test
popf
mov
enter
dec
jb
arpl
test
jb
mov
sub
sub
push
pop
outsb
inc
outsb
call
out
xor
ja
push
xchg
lcall
sahf
outsb
mov
pop
or
scas
pop
mov
dec
popf
mov
pop
subb
jb
mov
xor
pop
insb
aam
js
jnp
mov
je
jg
jb
add
push
or
dec
out
mov
xchg
add
mov
lea
imul
out
jle
cltd
movsb
stos
pop
test
hlt
xchg
mov
and
hlt
push
xor
cli
outsl
sub
leave
xor
push
dec
mov
cmpsl
cmp
nop
js
mov
sub
mov
stos
push
inc
mov
push
xchg
pop
fwait
lcall
pushf
jo
cmc
mov
ss
ret
leave
jg
jge
push
push
mov
std
adc
mov
cmp
ja
mov
push
pop
fsts
fs
das
repz
cmpsb
mov
cmp
je
adc
shll
mov
std
mov
fwait
cmp
call
or
sbb
xchg
mov
jo
cmpsl
add
and
mov
inc
and
stos
int
fidivs
add
aad
out
pop
shlb
popf
pop
aaa
aad
mov
clc
out
gs
scas
push
mov
cmp
adc
lahf
lret
cmp
lahf
test
and
loope
jle
mov
inc
jbe
sub
cwtl
js
or
mov
stos
and
rol
dec
dec
add
icebp
push
lods
test
pop
inc
or
cmp
sbb
paddsw
mov
mov
pusha
dec
or
adc
std
js
mov
inc
lahf
fldcw
test
sbb
mov
inc
pop
inc
push
cld
pop
fsts
cmp
cld
cmpsl
sub
mov
push
shr
xchg
and
jo
adc
fdivr
aas
in
sbb
test
fisttps
jae
cltd
push
bound
insb
fwait
push
scas
clc
mov
in
inc
gs
jbe
add
stos
xchg
test
xor
pop
cmp
xor
pop
lods
push
scas
shlb
mov
xchg
mov
mov
jnp
jecxz
jecxz
lret
dec
inc
orl
daa
rcrl
mov
fidivs
jo
sub
lea
mov
or
ss
fadds
dec
jmp
jbe
cld
jb
outsl
mulb
pop
mov
fldt
dec
std
add
mov
mov
or
push
or
sbb
inc
imul
ja
adc
dec
mov
imul
mov
cwtl
dec
lds
imul
push
js
imulb
push
mov
add
push
jl
lcall
addr16
push
xor
cmp
jl
mov
xchg
shlb
fdivrs
ljmp
pop
and
lret
jle
stos
into
ljmp
jmp
xor
aaa
cmp
cmp
inc
out
adc
lahf
mov
mov
sub
fcmovu
and
inc
lahf
insb
fdivrl
xor
mov
push
mov
test
jp
and
pop
or
enter
and
loopne
call
scas
enter
cmp
mov
or
adcl
inc
out
push
mov
decl
addr16
scas
or
jle
repnz
mov
push
xchg
adc
int
inc
sbb
push
ljmp
cmc
pushf
cmp
push
jne
pop
sar
jne
cmp
clc
mov
jg
inc
inc
lret
test
mov
jo
lcall
inc
sbb
fwait
lahf
add
ret
add
inc
out
mov
jno
je
in
adc
adc
aad
sbb
xor
test
loop
sbb
notl
scas
adc
dec
repz
outsl
lahf
lret
call
push
add
push
mov
mov
sub
dec
pusha
or
push
in
push
inc
cmp
imul
inc
sbb
iret
pop
aaa
lods
mov
pop
pop
xor
test
ljmp
insl
xchg
inc
inc
out
jl
sub
mov
adc
loop
add
jnp
add
sub
imul
loopne
push
push
inc
sub
test
mov
orl
fsubl
imul
push
push
icebp
cmp
je
dec
push
int
push
adc
negb
cmp
or
and
ret
sbb
xchg
cltd
sub
rclb
dec
hlt
aas
shld
and
sarb
into
sub
cmp
mov
jb
mov
cs
mov
stos
nop
or
jo
jbe
dec
push
or
inc
mov
std
push
aad
mov
fsts
popfw
mov
ds
shlb
test
add
int
mov
and
mov
dec
mov
inc
mull
cmp
mov
out
mov
push
cmp
out
xchg
jl
and
adc
and
xor
fdivrs
sbb
das
sbb
cmpsl
xor
xorb
rorb
push
add
jecxz
xchg
mov
cmp
stos
xor
shrb
inc
and
andb
insb
aam
xor
or
jle
data16
push
jp
push
scas
in
push
push
mov
jae
pop
xchg
mov
xchg
sbb
test
cwtl
sub
add
xor
mov
cwtl
xchg
nop
roll
filds
inc
push
sbb
push
insb
outsl
adc
rorb
pop
pop
add
sub
sub
sbb
subb
cmp
mov
add
lret
sub
jg
inc
ds
and
cmp
addr16
into
outsl
cmpsl
lds
mov
push
dec
mul
sbb
cmpsl
lcall
cltd
jns
adc
pandn
pop
hlt
aam
clc
push
andl
inc
in
getsec
mov
test
insb
sub
stos
pop
push
out
cwtl
pushf
sbb
jne
pop
jae
push
ja
popa
mov
in
dec
dec
xor
into
sbb
shr
in
dec
loope
push
out
and
mov
inc
jg
push
push
and
adc
push
pop
adc
addr16
xchg
test
pop
jbe
inc
test
pop
das
idivb
cmp
out
int
nop
cltd
addr16
in
or
loopne
cmc
pop
adc
ss
inc
into
sti
iret
popa
addr16
insb
mov
inc
sbb
push
mov
fwait
int
adc
inc
roll
xor
fisubrl
pop
sbbl
cwtl
insb
pop
push
mov
adc
add
ljmp
pop
incb
movsl
stos
adcb
adc
mov
cmp
xchg
jp
into
aaa
adc
mov
cmp
cmpsl
xchg
inc
mov
xor
push
ret
jbe
stc
push
in
clc
in
mov
mov
inc
shl
fistpll
cwtl
mov
scas
rcrb
mov
mov
push
test
cmp
lcall
xchg
stos
je
ret
stc
lahf
adc
inc
shl
xor
jecxz
repnz
outsb
sti
repz
out
in
dec
sbb
pop
pop
scas
pop
push
and
add
mov
subl
lret
lcall
xor
mov
inc
xchg
xchg
nop
out
cmp
jae
inc
aas
jecxz
out
lods
fiadds
cwtl
data16
mov
outsl
jle
jmp
fstpt
xchg
jge
mov
mov
mov
cmp
gs
nop
or
mov
xchg
mov
dec
subb
push
faddp
and
inc
xor
cmp
cmp
aam
sti
sbb
scas
xchg
push
add
cmp
push
or
cmc
out
push
test
sbb
rcl
xorl
add
mov
rcrl
pushf
out
inc
sub
aas
cmp
mov
fidivl
cld
jae
es
std
adc
sbb
mov
xchg
test
mov
movsb
inc
jmp
xor
das
lods
jecxz
popf
pop
and
push
xchg
xchg
fsubp
mov
into
fimull
arpl
scas
add
or
mov
scas
aas
cli
loop
dec
repnz
les
mov
jne
inc
mov
xchg
xchg
pop
jp
mov
gs
js
add
xor
lahf
or
push
leave
jmp
movsb
xchg
test
std
ljmp
or
adc
lock
js
xor
addb
push
fwait
jno
pop
sbb
adc
pop
pushf
imul
jne
xchg
sbb
mov
xlat
cltd
push
movsl
sbbb
mov
jbe
adc
call
mov
movsl
jmp
push
xlat
jne
sub
or
movsb
mov
push
mov
cltd
and
inc
pushf
pop
push
cmpsl
push
push
test
mov
add
outsl
dec
cmc
inc
jbe
lea
das
and
mov
repz
or
and
sbb
push
inc
mov
icebp
push
test
out
popa
ljmp
push
stc
push
sub
or
mov
fcoml
mov
rolb
sbb
nop
sub
fxam
mov
cmp
mov
adc
leave
test
dec
testl
or
xchg
mov
pusha
mov
cmp
int
add
xor
dec
popa
jmp
hlt
pop
jno
pop
cmpsb
das
cmp
xchg
cmp
notl
js
jecxz
pop
popf
push
and
test
sub
jecxz
and
inc
roll
mov
xor
jg
sbb
mov
out
test
ret
in
scas
pop
push
dec
adc
ja
out
rcl
cmp
scas
test
ljmp
cld
fwait
jle
ds
inc
mov
add
cmp
pusha
or
les
std
out
nop
cmp
popf
mov
adc
pop
cli
mov
push
repnz
shlb
pop
sbb
inc
or
dec
in
data16
and
push
push
mov
ficoml
repnz
cmc
push
out
or
cmc
pop
mov
lods
int
pop
mov
push
insl
mov
lds
imul
pop
js
mull
pop
sub
aam
std
sbb
jg
popa
mov
enter
popf
mov
clc
pop
push
sahf
inc
jb
xor
mov
movsl
sahf
xor
andl
mov
adc
inc
sbbl
idivb
fidivrl
cmc
jg
mov
jnp
dec
mov
cli
rorl
loope
push
sbb
xchg
popa
sub
adc
nop
hlt
pop
imul
cmp
push
adc
in
subl
mov
fbld
out
gs
inc
add
clc
push
add
jg
call
and
add
ffreep
xchg
mov
sbb
cld
jecxz
mov
adc
xchg
dec
lret
adc
pop
add
out
jge
pop
inc
popa
or
pop
jle
lahf
push
hlt
icebp
adcl
mov
ja
push
mov
rolb
out
int3
iret
dec
int
cmpsl
movsb
out
aas
or
dec
inc
push
cs
and
push
insb
sbb
mov
pusha
mov
mov
dec
mov
and
daa
jo
fldt
mov
mov
aaa
mov
mov
ftst
or
lds
mov
mov
mov
xor
cmp
or
out
enter
and
jbe
and
push
scas
outsl
out
and
fdivp
hlt
and
orb
adc
mov
insl
shrl
inc
xchg
or
mov
xor
adc
fisubrl
dec
fs
sarb
mov
stos
lock
xor
cmp
inc
bound
daa
xchg
sbbb
jecxz
clc
dec
mov
in
out
pop
inc
adc
jp
sti
push
adc
shll
mov
repnz
jle
ds
cli
dec
ret
ljmp
arpl
loope
hlt
push
push
xchg
inc
and
mov
data16
sbb
push
scas
xchg
lret
cmpsb
fstl
push
in
or
and
xchg
test
inc
mov
jmp
xor
jno
flds
and
and
sbb
jne
mov
stc
jno
fisubrl
mov
movsl
les
push
loope
mov
and
xchg
pop
xor
mov
mov
rorb
ja
adcb
in
shrb
adc
sub
pusha
mov
push
pop
cltd
data16
cmpsl
fcmovbe
pushl
lret
dec
call
pop
xlat
lods
fwait
popa
stos
insl
lcall
add
test
mov
adc
xchg
jge
das
pop
out
and
aad
sbb
cld
mov
dec
aas
iret
xchg
lret
andl
xor
xchg
fsub
push
out
sbb
out
lcall
out
adc
push
or
push
lea
dec
jne
jmp
popa
cwtl
psadbw
aaa
pop
test
ret
cmc
xor
mov
stos
rol
hlt
mov
cmp
cmpsb
lock
call
jne
fistl
ss
lret
js
mov
pop
out
sbb
sub
cmp
test
xchg
stos
je
mov
xor
xor
push
mov
or
jnp
pop
push
pop
and
jno
push
aam
xchg
rolb
lahf
jmp
pusha
outsb
push
sbb
push
das
xchg
sahf
mov
push
dec
xchg
xor
int
pushf
cmp
lcall
and
push
or
je
scas
scas
dec
mov
cmp
dec
lods
pop
iret
clc
xchg
mov
or
or
mov
idivl
shrb
fnstcw
pop
fmull
cmp
movsb
jo
xlat
sub
pop
dec
mov
dec
lahf
sub
inc
mov
push
jp
mov
rol
imull
mov
nop
xchg
jge
dec
mov
fdivr
out
int
fstpt
push
or
pop
in
add
subl
pop
in
sti
push
imul
mov
inc
pop
mov
push
insb
jmp
fisubl
out
mov
imul
cmpsl
sub
call
xchg
push
pop
and
adc
inc
inc
mov
jg
push
imul
outsb
adc
or
repnz
inc
mov
cmp
and
dec
pop
and
jmp
push
imul
out
loope
pop
mov
mov
test
pop
shll
insl
std
in
push
fildl
pop
int
cltd
rclb
or
lret
and
xchg
or
loopne
fwait
scas
popf
ret
add
adcb
mov
mov
add
test
cli
cmp
sti
mov
in
roll
fxtract
add
scas
dec
leave
mov
outsb
mov
push
lods
jg
jae
xchg
cld
mov
icebp
sbb
mov
and
imulb
jnp
inc
cmp
fwait
and
mov
cs
jne
sbb
fiaddl
cltd
ffreep
inc
das
lret
mov
shl
or
mov
xchg
fdivr
jmp
inc
test
mov
dec
lea
mov
daa
lcall
jp
rorb
lahf
xor
and
jo
pop
xor
cli
inc
cmp
pop
or
mov
mov
add
xchg
inc
out
rclb
jae
jge
and
jno
fidivrs
ds
adc
arpl
xchg
aad
xchg
xlat
cmc
or
mov
add
jge
fisttpl
mov
enter
inc
dec
jne
rcr
lret
dec
add
in
js
fnstcw
lods
test
dec
sbb
sti
pop
adc
je
inc
test
sbb
mov
xchg
fwait
ljmp
lea
pop
push
inc
adc
mov
insb
xor
subl
push
mov
inc
aam
push
sub
lcall
and
shll
movsl
cmp
int
cmpb
xor
xchg
xchg
ja
add
pop
mov
scas
and
sbb
push
or
sbb
stos
and
xchg
sbb
xlat
xchg
sub
mov
mov
cltd
nop
mov
pop
loopne
jmp
es
test
mov
dec
mov
mov
mov
dec
mov
and
xor
adc
scas
push
cs
inc
adcb
stos
pusha
and
lret
inc
jnp
cltd
ljmp
or
dec
dec
fwait
pop
inc
sarl
mov
test
aam
repnz
cmpl
jmp
clc
decl
sbbb
pushf
jl
mov
and
dec
inc
sahf
and
cltd
loop
mov
ret
das
xchg
xchg
dec
repz
dec
into
ficoms
jae
adc
ss
fcoml
rorl
pushw
insb
data16
sbb
clc
pop
and
jg
inc
adc
popa
std
repnz
rcrl
scas
cltd
cmc
addl
sbb
xchg
stc
sub
push
or
or
insb
push
scas
push
xchg
gs
cs
rolb
addb
dec
adc
in
mov
jb
pushf
mov
push
hlt
imul
arpl
in
rorb
mov
mov
xchg
dec
movsb
mov
fdivp
jno
in
pop
sbb
mov
push
cwtl
adc
push
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
mov
fmul
loope
jp
pop
jp
shlb
mov
mov
fadds
dec
xchg
and
push
test
mov
inc
ss
fbld
xchg
xchg
pop
or
fs
mov
dec
sahf
push
clc
out
pusha
sahf
mov
sbb
out
idivb
mov
rcll
ret
addb
or
push
fstps
pop
sub
and
push
dec
mov
jo
pop
lcall
loopne
pushl
je
inc
call
insl
sbb
aam
test
dec
xchg
adc
or
inc
pop
dec
jmp
hlt
push
xchg
sbb
test
aas
mov
adc
adc
and
inc
mov
aaa
cwtl
aam
adc
iret
loopne
ss
pusha
pop
push
push
mov
inc
mov
push
ja
cld
pop
adc
jp
cmp
cmp
jp
mov
dec
pushf
push
iret
lret
call
shrb
xchg
adc
inc
pop
inc
sbb
leave
mov
inc
jnp
jmp
or
fsubrl
scas
mov
jge
xor
adc
mov
push
xorl
fwait
add
into
fdivl
inc
test
test
xchg
dec
int
cmp
repz
mov
mov
lods
in
fldz
and
adc
lcall
int
int3
test
mov
sub
lds
pop
inc
xchg
dec
inc
jns,pt
out
push
pop
ret
in
cmpsb
push
mov
icebp
and
xor
loope
pop
popa
fs
in
mov
pop
es
jbe
and
mov
mov
sub
in
or
and
addb
fisubrl
aam
push
dec
fcom
arpl
popa
sbb
lock
cmpsl
jno
inc
inc
dec
jns
adcb
icebp
dec
cmpsl
cmp
in
ss
pop
lods
cwtl
push
cmpsl
popf
adc
insl
pop
add
pop
addr16
ljmp
sub
jmp
mov
mov
fs
sub
cmp
mov
inc
sbb
dec
ds
lds
mov
cmpsb
mov
aas
mov
mov
mov
dec
ror
out
push
jae
mov
pop
dec
dec
mov
push
cmp
xchg
es
push
in
mov
or
fs
or
add
mov
jnp
outsb
mov
push
mov
mov
pop
fidivrl
mov
add
inc
repz
sub
xor
out
push
xor
jge
mov
inc
inc
jnp
iret
xchg
xorb
pop
in
test
fcoml
pop
sbb
push
lea
rorb
adcb
xchg
mov
and
xchg
pushf
lods
pop
popa
int3
and
iret
data16
jnp
xlat
add
or
pop
nop
xchg
mov
lret
jecxz
jge
fmul
cmp
mov
xchg
sub
xor
mov
dec
mov
xchg
or
cmc
jb
dec
jg
adc
jbe
mov
mov
insb
or
inc
repnz
push
sbbl
cwtl
out
call
in
and
or
aad
rcl
test
push
outsl
push
dec
mov
dec
ja
into
aas
jge
jbe
std
jae
cmpsl
ss
int
xchg
arpl
enter
cltd
mov
movl
movsb
jge
adc
loopne
filds
out
repnz
cmp
insb
mov
and
jb
pop
test
or
arpl
push
cmc
enter
xchg
and
mov
and
sub
daa
mov
int
int3
xchg
jmp
lods
clc
mov
mov
rclb
nop
call
in
pop
fisubrl
xchg
adc
lret
dec
cmp
ja
enter
popf
insl
jne
push
loop
adc
es
ja
and
iret
or
dec
push
dec
je
push
jne
enter
cmc
pop
aad
jle
cmp
aas
pop
aam
and
shrb
xchg
push
mov
mov
nop
mov
xlat
xor
xor
adc
repz
and
mov
push
scas
lds
scas
sbb
pop
push
and
ljmp
jle
cmpsl
roll
push
imul
dec
dec
iret
xor
add
inc
push
cmp
repnz
push
aam
mov
sti
mov
jmp
add
xchg
mov
or
stos
sbb
add
pop
jg
fwait
xorb
inc
fistpl
sbb
xorl
push
push
mov
cld
bound
fcoms
pop
les
pop
rcrb
aam
sarb
xor
fmul
sbb
pop
and
repnz
scas
js
cs
or
adc
sub
mov
sbb
popa
mov
inc
push
add
dec
lods
cld
out
fsts
dec
push
imul
cmpsl
and
lods
fistpl
push
jle
fsubl
sbb
cltd
jmp
lock
in
or
jae
rcll
mov
repnz
xchg
popa
dec
imul
negl
inc
jg
cmp
shll
fisttpl
data16
outsb
push
in
enter
sub
pop
sahf
imul
movsl
jmp
in
adc
inc
adc
movsb
mov
inc
test
xor
mov
fstpt
pop
mov
mov
sub
fs
jmp
leave
sti
add
sbb
cmp
xchg
scas
sbb
fwait
or
mov
cmp
mov
xlat
je
pop
push
xor
jg
jae
fistl
js
and
lahf
mov
loopne
xor
adc
idivb
out
popa
inc
mov
cmc
dec
idivl
jo
pop
scas
cltd
mov
testl
jle
pushf
and
mov
popf
lock
inc
xor
jns
mov
aam
bound
push
mov
aad
jne
push
lret
pop
cmpsl
fisttps
mov
aaa
fs
xchg
pop
inc
test
sub
add
mov
fwait
testb
pushf
lods
fistps
sbb
movsb
or
rolb
call
pop
movsb
and
std
ss
and
xchg
lar
or
sub
push
les
mov
ljmp
sub
or
mov
mov
setbe
add
pop
js
pop
mov
sub
stos
lods
push
popf
xchg
rcr
push
sub
into
add
rorl
sbb
pop
xchg
gs
gs
stos
mov
mov
mov
movsb
dec
movsl
das
jp
mov
je
ja
mov
xor
mov
pop
icebp
add
repz
pop
cmpb
loopne
out
pop
and
inc
lods
mov
pusha
lock
and
add
pop
jns
aas
dec
sahf
add
insl
in
mov
loope
outsb
fdivrs
cltd
xchg
sub
popa
sub
lods
dec
aam
add
adc
xchg
stc
outsl
in
loope
sbb
adc
cwtl
test
cmp
enter
jecxz
jae
aas
andb
mov
notb
stc
popa
mov
add
push
in
mov
inc
jmp
aas
les
roll
ror
lahf
pushf
mov
stc
pusha
xlat
or
rclb
and
mov
aas
mov
lds
mov
cld
faddp
call
adc
outsb
insb
pop
mov
inc
shr
push
movl
cs
mov
insb
insl
mov
fdivrl
cmp
fs
xor
add
adc
jne
adcb
nop
add
cs
mov
push
cmpsb
nop
cmpb
mov
jb
popf
sbb
mov
out
dec
push
jbe
jmp
sarl
lea
outsl
into
xchg
add
push
hlt
mov
mov
add
dec
aaa
sub
insl
lahf
scas
adc
dec
xchg
fxch
cmp
repnz
xchg
jmp
mov
mov
push
mov
mov
dec
mov
and
aas
jecxz
enter
mov
pop
cmp
dec
xchg
rcrl
inc
adc
daa
push
inc
lret
inc
mov
lret
push
loop
jb
pop
jnp
es
and
mov
mov
lea
fisubs
fnop
stos
adc
outsl
leave
aas
jl
xchg
lret
in
and
hlt
mov
andb
mov
imul
leave
pop
fnclex
bound
cmp
mov
fstpl
les
cmpsl
jns
cmp
movb
mov
pushf
push
and
adc
xchg
stos
mov
cmpb
icebp
std
mov
jnp
sub
inc
fwait
sahf
into
gs
push
pop
lahf
arpl
clc
dec
mov
cmp
imul
scas
and
or
lods
aam
push
cmp
xor
push
dec
or
pop
add
cld
add
imull
mov
inc
bound
sbb
daa
sahf
cmp
lahf
add
pop
pop
mov
int3
scas
adc
imul
pop
popa
repnz
xor
xor
cmp
inc
sbb
mov
push
mov
and
sub
shrb
sbb
rorb
pop
dec
incl
stos
add
int3
xchg
adc
mov
lds
test
push
push
cmp
mov
adc
and
xor
jb
mov
loope
scas
mov
jp
push
cmp
loop
mov
mov
cmp
sbb
hlt
push
cmp
push
lds
and
or
adc
sti
and
shrl
sti
pop
mov
enter
xor
stos
jmp
orb
or
pop
or
xor
ficompl
in
pusha
pop
jmp
xlat
mov
and
stos
popa
inc
xchg
pop
fs
sub
xsavec
push
mov
lret
pop
scas
push
push
popa
push
and
xchg
mov
push
mov
fdivrl
mov
addl
aaa
movsl
cmp
cltd
int
or
pop
repnz
je
dec
pusha
lds
dec
mov
in
mov
orl
fistpll
jmp
mov
pop
pop
add
mov
test
ss
test
mov
fdivp
push
sbb
lods
mov
xor
movsb
clc
inc
xor
push
mov
xor
or
cli
push
aaa
mov
sti
loop
std
data16
insb
xchg
imul
test
pop
sahf
cltd
pop
cmpsb
inc
out
xor
mov
je
mov
cmpb
pop
addr16
aas
test
sarl
inc
add
loopne
mov
pop
mov
or
gs
test
mov
pop
push
sub
pop
dec
xchg
imul
or
les
cmpl
fstpl
dec
sbb
adc
or
test
aas
sbb
and
iret
es
xchg
dec
cld
imul
mov
in
sbb
inc
mov
bound
sub
test
adc
clc
iret
xlat
jg
sar
xor
loopne
sub
bound
fildl
or
dec
and
push
push
inc
mov
push
push
add
sbb
xor
imul
lcall
out
mov
sbb
loopne
inc
and
sub
mov
lods
jmp
dec
pushf
daa
or
cs
pop
or
call
xchg
mov
add
clc
push
xchg
in
adc
add
insl
inc
sahf
lods
pop
sbb
xchg
mov
in
iret
in
xlat
pop
ljmp
xor
xchg
mov
ficoml
fdivl
ds
sbb
sti
lret
loope
mov
push
pop
dec
cmc
push
pop
fwait
scas
mov
xor
push
xor
imulb
sub
adc
frstor
ja
sti
pop
stos
cmp
adc
insb
mov
jo
cwtl
aas
rol
and
cmp
lahf
lar
dec
push
pushf
or
out
dec
push
scas
push
inc
stos
out
add
pop
mov
test
and
and
imul
inc
mov
fists
pop
xor
cmp
leave
in
lods
or
dec
int3
outsb
xchg
loop
sub
jge
push
jae
mov
test
mov
stos
push
dec
cmp
aas
shlb
jge
mov
mov
xor
lret
push
dec
mov
xor
pop
xor
nop
rep
dec
inc
stos
dec
inc
mov
xchg
adc
jbe
sti
dec
pop
icebp
ja
or
mov
cmp
mov
loopne
scas
enter
loop
sub
inc
mov
cmpsb
mov
out
sub
inc
mov
out
bound
aam
cmpsl
repnz
stos
xchg
mov
ficomps
sub
inc
into
in
stos
gs
loop
shlb
mov
mov
mov
sub
adc
stos
movsl
xor
xor
lea
add
orl
fisttpl
cltd
aaa
sti
jmp
jp
and
add
cmc
add
dec
dec
or
cli
rorb
push
xchg
lock
fwait
mov
loop
in
xchg
lea
sub
xchg
out
lods
rclb
xor
ret
lret
imul
dec
inc
push
push
sarl
pop
adcb
pop
xchg
cli
mov
inc
dec
mov
or
mov
rorb
icebp
or
fsts
and
xor
inc
jae
ds
xor
mov
shrl
aam
outsl
clc
mov
xchg
insl
in
mov
sub
daa
rol
les
outsb
in
fdivrs
mov
jb
and
gs
mov
into
cmpsl
or
sbb
test
cmp
stos
es
imul
sahf
xchg
hlt
fdivr
add
out
enter
in
icebp
mov
psubq
and
in
arpl
and
xor
rcll
pop
lods
stc
lcall
and
test
insb
notb
out
xor
call
push
icebp
adc
pop
lods
cmp
int3
ret
repz
inc
mov
lret
dec
sbb
sbb
or
stos
mov
loopne
mov
and
add
mov
ret
test
rclb
jnp
lock
jge
lcall
hlt
adc
mov
aam
enter
inc
xor
lods
rclb
pop
gs
sbb
dec
xor
adc
and
or
push
cmp
es
or
adc
gs
pop
mov
bound
xchg
test
test
in
gs
and
xchg
lea
xor
jecxz
daa
mov
pop
test
xor
sbb
sbb
jg
add
jecxz
inc
xor
mov
ss
inc
add
push
sub
mov
js
sub
inc
popa
out
stos
jmp
sbb
fiaddl
repnz
add
movsb
or
in
xlat
mov
int
cmpsb
xor
push
jnp
ret
jge
cmp
stos
roll
lds
ret
mov
mov
inc
push
movzbl
and
sub
mov
and
inc
mov
mov
ret
sub
jb
pop
test
fcomps
mov
cmp
divb
push
clc
jns
popa
and
movsl
mov
pusha
inc
in
push
sub
push
scas
cld
fisubrl
enter
inc
ficompl
jno
jns
loopne
mov
or
test
dec
mov
in
or
ret
mov
xchg
adc
mov
xchg
bound
sahf
mov
js
imul
cmp
lret
jle
adc
inc
add
testl
bound
xchg
cmpsl
stos
mov
sar
and
mov
rcrb
push
pop
mov
lods
add
mov
xchg
repz
mov
mov
cs
and
mov
test
cmp
jecxz
js
shll
sub
int3
adc
gs
mov
in
xchg
mov
imul
cmp
mov
je
clc
aaa
inc
jmp
jno
outsl
xchg
fs
mov
nop
int
lock
pop
rcr
lahf
push
add
lea
xor
add
pop
out
xchg
mov
sbb
fcomps
and
and
into
fcompl
sahf
push
dec
sub
test
or
or
mov
pusha
int
dec
pop
xlat
out
sub
rcr
cltd
js
rcl
inc
xchg
imul
scas
ja
mov
lods
cmpsw
aaa
and
mov
das
pop
push
and
sub
pop
call
icebp
xchg
or
shrl
mov
int3
dec
add
and
packsswb
inc
jg
fmuls
jle
adc
sbb
and
push
push
or
inc
stos
ret
mov
test
sarl
out
ds
cwtl
dec
stos
ss
lcall
cmp
push
enter
adcl
pop
sbb
ret
adc
cmp
cld
sbb
int
fs
xchg
inc
cmc
or
je
les
xchg
dec
pop
arpl
aam
ret
push
push
jge
movsb
inc
push
orl
jg
in
fsubs
inc
sbb
ss
adc
xchg
stc
shll
cld
dec
fisttpl
pusha
xor
mov
nop
sub
notb
cs
inc
std
aad
loop
pop
cmpsb
dec
cwtl
sub
pop
sub
sarl
and
jecxz
push
data16
aad
test
je
mov
stos
mov
xchg
inc
cs
push
push
mov
mov
int3
pusha
push
dec
dec
jnp
imulb
adc
pusha
into
mov
cmc
in
lods
or
cmp
or
fstps
mov
out
insb
outsb
lods
and
scas
gs
xor
cmpsb
cmp
lahf
jmp
adc
push
xchg
mov
lcall
lods
sarl
add
inc
cmp
xchg
int3
or
jmp
adc
sbb
cmp
mov
jmp
scas
dec
push
sti
inc
push
fcomps
add
shrl
mov
pushf
push
int3
rcr
pusha
fs
out
mov
push
bound
mov
adc
push
imul
push
stos
push
push
imul
loope
movb
pop
mov
mov
ret
xlat
inc
ficoms
int
cmp
mov
dec
stos
xor
fldl
ret
or
mov
or
xchg
cmp
cmpsl
push
outsl
daa
mov
sub
xchg
mov
dec
add
es
loope
mov
ficoms
addl
es
int3
loopne
add
xchg
loope
push
xor
loopne
dec
test
mov
lock
aad
inc
mov
mov
pop
or
movsb
add
inc
pop
bound
add
add
xor
xchg
mov
xor
lahf
xor
lcall
loop
xchg
xchg
mov
sbb
lods
mov
out
jmp
pop
xchg
fld
adc
xlat
insb
les
dec
test
js
fldl
test
out
and
push
insb
call
sub
out
gs
jb
inc
lfs
pusha
jns
pop
popa
inc
cmp
xchg
loope
stos
or
inc
imul
and
cwtl
xor
rol
dec
jl
sbb
push
scas
jmp
sbb
loop
es
pop
push
lcall
jb,pn
adc
fstl
cmp
jg
insl
shll
mov
jo
xor
rorl
mov
cmp
cmp
push
gs
xchg
push
inc
ds
xor
push
fsubrl
cmp
hlt
inc
mov
add
jnp
cmp
in
in
lcall
imul
push
jo
insl
hlt
push
test
sbb
cli
and
icebp
cmpsb
sub
insl
or
push
cmp
add
out
sub
orl
sub
or
or
sub
xor
lcall
inc
je
in
mov
iret
mov
pop
scas
fwait
dec
sbb
pusha
jae
aad
js
mov
pusha
inc
xor
mov
cmp
insb
or
push
mov
sbb
aas
jl
enter
and
ret
lcall
add
dec
icebp
cmpsb
cmp
push
std
mov
mov
inc
push
lcall
cmpb
push
jp
dec
mov
mov
cmp
mov
std
mov
inc
jg,pn
stc
popa
jmp
pop
test
push
shlb
add
hlt
test
lea
loopne
push
aaa
cld
js
mov
xor
aad
adc
cmp
loope
es
xsave
jg
and
adc
mov
cmp
out
cld
lea
adcb
or
sbb
insl
mov
dec
jns
xor
imul
fistpll
xor
sub
add
rcrl
lds
outsl
push
pop
repnz
lods
cmp
repnz
inc
mov
dec
ret
je
and
lds
mov
adc
cmc
in
roll
mov
leave
add
fcoml
sahf
adc
mov
shlb
fs
into
push
cmpsb
and
daa
lret
pushf
lcall
jmp
xorb
or
lds
adc
scas
jno
push
repz
push
pop
test
dec
pop
adc
clc
int
add
pop
push
dec
addr16
scas
popa
add
push
xchg
jae
fstpt
dec
or
lds
mov
sub
add
test
pop
clc
push
lds
sbb
pop
sub
xchg
xor
sbb
dec
lods
fildll
xor
dec
adc
push
enter
out
xchg
and
ret
call
scas
adc
sub
adc
shlb
std
push
sbb
gs
cmpsl
mov
sbb
mov
add
andb
jne
mov
and
pop
adc
dec
or
cbtw
pop
repnz
pop
pop
mov
xlat
je
or
dec
pusha
sar
lret
arpl
into
jg
inc
jne
bound
and
pop
mov
xchg
cmp
lcall
aam
popf
daa
imulb
xchg
jge
sbb
xor
clc
cmp
sub
repz
ss
xor
in
fisttpll
movsb
mov
mov
pop
cld
inc
les
push
xor
popa
sbb
leave
test
inc
jle
cli
adc
lods
inc
jg
pushf
rolb
lret
xchg
pop
jmp
add
movb
test
push
mov
rorl
dec
xchg
jl
sbb
sbb
into
aam
insb
sbb
fcoml
nop
fucomi
jb
jge
clc
mov
divb
jmp
mov
jnp
cmpsl
jecxz
cmp
lock
mov
pop
imul
xor
mov
lcall
jp
mov
dec
mov
mov
test
xor
xor
sbb
pop
mov
loopne
btc
in
dec
arpl
sbb
aam
ss
bound
js
loopne
adc
xor
icebp
divb
dec
rorl
fistpl
subl
data16
cltd
jle
andl
imul
jb
mov
js
decl
mov
shl
sbb
mov
mov
jl
fs
inc
fmull
mov
jne
jl
ja
test
into
mov
mov
sti
jnp
out
mov
in
lret
inc
lock
rcl
dec
sbb
dec
sbb
out
sub
jnp
mov
and
aad
cmp
fwait
mov
sbbl
cli
add
sub
sbb
or
push
loop
popl
cmp
cmp
es
ret
and
gs
sub
dec
ljmp
icebp
lret
cmpsl
push
mov
and
scas
push
cwtl
and
adc
sbb
jl
je
addr16
leave
sar
or
aaa
mov
notb
push
out
add
fcmovnbe
push
fs
mov
repnz
push
das
clc
popf
sub
out
mov
lret
xor
adcl
addb
mov
add
mov
sbb
std
insb
inc
mov
add
xor
adc
insb
push
mov
sti
jecxz
mov
sahf
int3
mov
ss
jnp
xor
add
jno
add
mov
gs
push
push
fdivr
and
shrl
repz
dec
mov
cmpsb
mov
insb
es
adc
add
mov
push
adc
inc
lods
pop
movsl
test
imul
rcll
mov
jmp
pop
dec
lds
in
push
imul
xor
push
jmp
adc
and
xor
mov
adc
xor
dec
sub
out
outsl
mov
js
daa
lock
mov
repnz
in
pop
popf
bnd
sarb
idiv
or
sbb
jmp
or
xorl
fbstp
sahf
sub
aaa
push
out
into
xor
dec
imul
mov
xchg
sbb
xchg
jne
arpl
adc
or
adcb
jp
inc
sub
jmp
ficompl
xorb
mov
imul
dec
aad
inc
cmp
test
jnp
jae
pop
pop
pop
cmpsl
loope
add
or
push
pop
mov
mov
mov
rcr
push
cs
mov
push
imul
or
dec
push
push
push
test
stos
inc
mov
clc
inc
add
flds
mov
inc
je
xlat
or
jno
xor
dec
sub
or
pop
or
lret
pop
aad
xchg
sub
and
add
inc
xor
pop
insb
xlat
lahf
stc
adc
pop
ljmp
jnp
call
mov
inc
int3
int3
rorb
jo
testb
test
jmp
rcrb
jle
xor
ss
sub
sarb
push
xor
dec
bound
cmp
add
jmp
adc
add
pusha
dec
push
aam
push
lea
out
faddp
aad
jns
pop
dec
pop
int3
add
arpl
shrl
jl
stos
cld
mov
mov
outsl
add
ficomps
dec
inc
aas
sub
xor
pop
cmp
dec
test
jecxz
adc
cwtl
jo
js
popf
out
scas
adc
xor
push
fcomi
mov
bound
fmulp
mov
push
mov
push
aas
fadds
test
sbb
mov
mov
inc
mov
out
shl
mov
pop
xor
negb
sarb
push
adc
bound
pop
mov
outsb
mov
sbb
sbb
pmaxsw
out
lahf
mov
or
or
and
leave
lock
lock
outsl
fsubrs
rorb
mov
shrb
mov
aam
mov
fsubl
xchg
inc
or
sahf
ret
adcl
dec
test
xor
lea
cmc
lcall
mov
fcomi
push
rcrl
cltd
daa
loopne
icebp
leave
or
test
push
cmp
and
cmp
xchg
out
xchg
fwait
xchg
sub
movsb
mov
pop
sbb
push
inc
or
adc
push
pop
fmull
cmp
jno
movsb
adc
inc
jmp
cmpsl
adc
inc
fiaddl
sub
mov
bound
xchg
sbb
out
lcall
repz
out
inc
imul
and
sbb
fcomp
ljmp
int
dec
jnp
std
jne
andl
lock
bound
xchg
lea
push
cmpb
mov
pop
addr16
push
fstl
hlt
push
sbb
pop
sahf
gs
mull
mov
pop
daa
inc
jmp
int3
xchg
repz
xor
cld
jbe
test
pop
loope
icebp
pop
pop
hlt
xchg
cs
pop
fcmove
adc
inc
data16
push
adcb
es
addr16
sarb
and
popf
add
scas
pusha
dec
lods
adc
dec
xchg
rorl
loope
push
out
jae
insl
lea
jmp
mov
fwait
sbb
movsl
xchg
mov
enter
xor
xchg
lods
imul
sbb
ja
out
rorb
aaa
sub
out
adc
xchg
int3
push
pop
pop
jge
inc
popf
sbb
ds
dec
pushf
jnp
dec
int3
repnz
mov
arpl
mov
pusha
lret
and
dec
mov
adc
test
inc
fs
aad
lret
cmp
ja
and
aam
xchg
mov
mov
aam
aaa
scas
aaa
xor
lahf
mov
aam
mov
push
icebp
loop
pop
js
loopne
push
roll
push
sbb
ja
xchg
aam
lahf
pusha
ret
fs
pop
jns
jge
cmpl
jno
mov
or
jb
mov
lcall
ljmp
fsubrs
lods
inc
test
ja
into
das
cltd
or
inc
mov
cmp
cmc
in
xchg
sbb
pushf
cmp
not
mov
or
lcall
push
stos
scas
dec
lcall
jmp
jne
das
xchg
lods
in
adc
das
push
fadds
push
outsl
jmp
xchg
xchg
mov
inc
in
idivb
gs
stc
pop
sbb
call
add
gs
test
xlat
adcl
out
and
mov
mov
das
pop
and
or
sbb
mov
in
leave
out
mov
fstpt
mov
xchg
arpl
adc
push
mov
adc
mov
outsb
xor
cmc
adc
mov
popf
xor
negb
mov
dec
adc
out
subb
pop
sub
outsl
lcall
out
fsubrs
int
dec
xchg
shr
cmpsb
in
xor
sar
add
int3
or
fs
sahf
cltd
js
add
push
inc
call
movb
mov
lret
cli
repz
lods
pop
jl
test
insb
push
inc
les
mov
outsl
lea
jbe
sbb
pop
insb
hlt
adc
loop
bound
ss
insl
out
mov
mov
adc
jle
in
imul
test
xchg
adc
movsl
xor
lods
or
inc
mov
pusha
xchg
mov
int
add
loopne
mov
jnp
scas
jnp
pushf
sbb
out
daa
call
lret
rol
ja
sub
jnp
and
push
push
sub
in
jecxz
add
cmp
jecxz
int3
aaa
subb
popa
mov
ds
clc
mov
aad
adc
es
adc
fdivrs
les
outsl
xchg
dec
mov
fldt
mov
test
decb
mov
mov
mov
inc
xchg
inc
lds
je
cmp
sub
dec
movsl
cmp
mov
out
dec
cli
push
xchg
push
inc
jb
inc
pop
add
int
xlat
push
xorl
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
add
or
jp
or
adc
mov
mov
dec
cmpsl
adc
fidivl
adc
dec
cltd
xchg
dec
adc
dec
adc
push
frstor
packsswb
imul
cmpsb
sub
enter
add
or
enter
mov
mov
insl
sub
mov
and
rcrl
jl
or
or
cmp
ret
loop
push
addr16
int3
xchg
in
sub
aaa
push
jo
cmp
and
dec
repz
mov
arpl
or
pop
repz
nop
add
xor
xor
push
mov
add
fdivrl
jae
das
int
mov
out
sti
out
or
inc
mov
pop
shlb
fwait
loope
add
hlt
sub
jmp
adc
jb
and
cmp
mov
testb
or
loope
in
loope
jp
mov
xchg
ror
imul
xor
cmp
and
inc
mov
jmp
add
jle
or
adc
and
push
ss
insb
loope
daa
pop
sbb
adc
outsl
movsb
cmp
push
mov
adc
out
sti
mov
cmp
lea
dec
cmp
inc
ljmp
xor
jns
lahf
sbb
out
add
daa
inc
lcall
add
or
inc
pop
mov
cmpsl
cmpl
fistps
outsb
sbb
xor
xlat
mov
pop
outsl
scas
mov
js
clc
mov
adc
pop
popf
in
rcrl
lcall
mov
dec
add
es
aam
xchg
jo
inc
xchg
movsb
hlt
mov
jge
pop
adc
inc
add
into
into
rorb
test
mov
mov
cwtl
cmp
pop
and
outsb
dec
div
into
mov
add
test
pop
test
add
cld
mov
lea
icebp
idiv
stos
sub
outsb
sbb
test
push
adc
xchg
test
jns
and
ret
adc
push
pusha
data16
das
adc
jne
arpl
cmp
popf
and
push
or
push
xor
add
mov
les
xlat
jmp
test
inc
mov
mov
or
or
xor
and
mov
push
pop
out
inc
cmc
jb
mov
aas
pop
into
int3
mov
loopne
sub
rcrl
rcll
push
add
mov
jne
ljmp
adc
cmp
jg
xchg
ret
sbb
jge
mov
int3
pushf
add
add
popa
rolb
jecxz
jb
dec
fwait
movsb
lock
icebp
dec
or
mov
jl
nop
fsubs
cmpsb
or
mov
pop
cld
adc
movsl
fcoms
ficoml
xor
xchg
call
rcr
jmp
jo
movsl
mov
lock
xchg
shrl
or
xchg
mov
mov
pop
lret
dec
es
rol
jle
sbb
rorl
cltd
mov
mov
fisubs
fbstp
sar
out
sti
jae
fwait
imul
rclb
and
pop
les
stc
scas
jbe
dec
mov
fimull
loopne
jl
fucomi
int3
shlb
test
pop
push
add
cmp
push
sbb
add
mov
pop
fsubrl
les
outsl
mov
or
sahf
orl
inc
jno
inc
inc
mov
test
fldenv
es
fistpll
mov
cs
mov
sti
les
dec
jb
xchg
push
js
dec
lods
imul
aas
negl
push
adc
add
leave
ret
aam
push
add
jge
mov
xor
movsl
mov
lock
mov
pop
cmp
inc
ret
inc
or
or
je
mov
loop
sub
inc
aaa
lods
mov
push
push
hlt
dec
and
mov
hlt
rcll
fmull
cmpsb
out
mov
inc
mov
jbe
cmp
sahf
adc
or
push
push
push
fldcw
test
mov
mov
push
or
pop
sbb
into
adc
push
outsl
aad
mov
ret
inc
mov
mov
es
xchg
push
push
xchg
outsb
or
cmpsb
inc
popf
pop
push
inc
int
pop
jb,pt
lahf
addr16
insb
adc
jno
popf
sub
mov
ss
sbb
push
orl
rcrl
shr
mul
ret
push
push
adc
fwait
movsl
sti
sub
ljmp
lcall
xlat
jmp
push
insb
ljmp
stc
lcall
jle
pop
cld
mov
sbb
popa
pushl
scas
into
jge
mov
dec
testl
sub
cmc
jns
and
pop
movsb
scas
insl
and
push
sti
sub
xor
loopne
pop
data16
add
popf
das
push
jge
call
fs
inc
xor
mov
push
dec
in
mov
sbb
rcl
push
cmp
out
adc
setg
pop
fldenv
scas
gs
inc
xor
or
aam
lcall
insl
inc
sub
xor
cmpsl
pushf
jns
xchg
roll
cmp
popf
jae
jecxz
jns
push
inc
enter
les
sub
add
push
fisttpl
rcr
and
xchg
xchg
cmp
mov
mov
sub
mov
and
in
insb
rclb
push
out
aas
xlat
lds
lods
and
adc
stos
in
ret
cmp
cmp
sbb
lret
add
push
scas
mov
dec
add
xchg
ret
repnz
push
mov
or
and
cmp
aam
mov
or
mov
pop
cmc
imul
data16
mov
mov
jbe
cmp
repnz
loope
jns
cmp
sbb
and
shlb
adc
xchg
cmpsb
and
test
jecxz
jae
add
lahf
inc
pop
lock
xor
fnstsw
add
cmp
jb
cltd
or
jae
cli
subb
cld
out
dec
jnp
pop
and
subl
and
orl
in
and
sbb
test
mov
xchg
xor
xor
cmp
ficomps
outsb
and
arpl
ja
into
lcall
push
loop
pop
sti
sbb
aam
pop
ss
mov
repnz
dec
stos
push
aad
push
and
sub
fstpt
pop
lods
lock
add
lods
and
repz
fwait
inc
add
add
push
es
xchg
xor
decb
popf
adcb
scas
xor
fisttps
cwtl
loop
and
or
xor
test
sti
pushf
shr
pop
mov
inc
and
out
cmpsl
inc
mov
push
xchg
xchg
mov
sbb
cmp
add
cmpsb
daa
cmp
seto
mov
add
pop
frstor
bound
cld
jns
enter
add
fldenv
fistps
scas
sar
ljmp
xchg
jnp
inc
push
movsl
pop
inc
ljmpw
loop
imul
adc
dec
push
push
ffreep
sub
aam
xor
pop
leave
pop
push
sub
adc
cmp
push
pop
out
loopne
xor
add
adc
and
or
mov
push
loopne
sti
leave
mov
pop
mov
stc
or
pop
nop
popa
inc
push
xchg
aam
fmulp
dec
pop
test
loopne
out
inc
xchg
pop
stos
mov
adc
js
jp
and
fcomi
daa
dec
das
mov
dec
and
imul
mov
jb
mov
cmp
xor
bound
test
mov
adc
adc
movsl
add
inc
je
push
out
mov
sub
mov
cmp
xlat
cmpsl
dec
sub
cmp
pop
cmc
cwtl
jmp
jbe
add
push
orb
subl
mov
mov
xchg
cmp
sub
out
pop
jp
lahf
dec
arpl
outsl
in
cs
adc
and
js
dec
insl
lods
iret
fists
movsb
dec
push
xchg
nop
movsb
movsl
lret
dec
cmp
mov
xchg
movsl
jmp
mov
mov
out
nop
mov
lock
push
mov
jns
test
mov
int3
jmp
outsb
ljmp
out
test
add
and
adcl
in
push
xor
stos
in
mulb
pop
aaa
js
sbb
jno
xor
or
icebp
mov
rcr
clc
sbb
mov
lret
aam
insb
repz
sar
pop
xor
sub
aam
mov
inc
cmp
jae
xchg
jp
cmp
add
cmp
cmp
sbb
aas
push
inc
xchg
xor
ss
jge
sub
sbb
sbb
lock
push
imul
jo
xlat
sub
push
mov
mov
mov
dec
addr16
cmp
div
cmpsb
mov
push
jmp
mov
fidivrl
imul
push
shlb
ss
cmpsb
adc
popa
stc
sub
or
push
push
popa
mov
push
add
cltd
mov
outsl
jp
pop
pop
faddl
mov
mov
movsl
adc
push
xchg
mov
test
popa
cmp
lcall
leave
insb
jo
pop
ret
sbb
mov
insl
sbb
dec
sub
movsb
xor
mov
push
add
stc
mov
scas
cwtl
cmp
inc
in
testl
or
cmp
jns
or
xchg
aaa
or
in
jecxz
mov
popf
mov
mov
aas
insb
lods
cmpsl
scas
adc
outsl
inc
inc
xchg
fisubrs
flds
arpl
pop
lock
shlb
inc
or
sbb
mov
inc
jns
outsl
int
fmull
out
push
das
rorl
mov
cmp
scas
clc
xchg
pop
add
ds
test
sbb
icebp
jecxz
fildll
test
push
loop
inc
loope
xlat
sti
in
insb
jmp
xchg
add
fs
pop
mov
mov
jmp
pop
scas
dec
sahf
push
arpl
sbb
test
xchg
mov
push
shlb
cmp
fdivr
mov
sub
divl
jne
sbb
daa
lcall
mov
in
test
and
xorl
clc
add
jge
mov
push
push
add
xchg
adc
and
mov
test
xorl
sub
and
xchg
lret
outsb
aam
imul
adc
mov
inc
stc
dec
inc
adc
jmp
ss
sbb
es
mov
loopne
mov
adc
and
xor
jl
sti
sarb
std
addr16
and
push
addr16
or
lret
clc
fisttpll
fs
cld
mov
jp
add
mov
or
mov
loop
mov
adc
pusha
pop
jo
in
test
sbb
dec
xchg
dec
and
rcll
fidivrl
in
iret
push
adc
xchg
mov
or
or
push
int
and
push
jl
push
mov
add
loop
lret
inc
mov
in
aad
sbb
dec
nop
sbb
dec
fwait
sbb
movsl
push
shll
mov
mov
sbb
jo
mov
ja
sbb
es
cwtl
bound
cmp
add
orb
inc
fisubs
pop
bound
push
adc
and
mov
pop
cwtl
movsl
lock
mov
inc
daa
je
fldcw
stos
fsubl
dec
insl
aam
xchg
jle
sti
loope
js
sbb
les
or
lahf
mov
mov
mov
lahf
std
inc
mov
lods
push
xor
lds
adc
jmp
mov
popa
xor
mov
inc
add
and
aad
cwtl
iret
and
mov
insl
jnp
mov
test
pop
insb
adc
movsb
mov
sbbb
aas
movsl
mov
ret
pop
mov
hlt
sbb
stos
xchg
fldcw
push
cld
pop
xchg
or
mul
sub
xchg
aas
aad
mov
xor
or
or
cs
test
mov
scas
bound
out
out
mov
fisubl
lods
jo
scas
rolb
test
shrb
lahf
pop
or
fs
and
or
repz
lret
outsl
pop
cmp
mov
andl
push
push
lahf
inc
jp
pop
out
sub
add
test
stc
add
cmp
push
xor
das
idiv
push
or
pop
sbb
mov
dec
test
mov
movsb
cwtl
add
pop
push
pop
push
in
xorl
mov
shrb
repnz
jmp
aas
lods
ss
adc
out
fwait
dec
aad
sub
shll
xorb
pushf
cmp
jo
scas
ret
inc
test
je
xchg
out
add
sbb
jg
cmpsb
or
mov
push
repnz
mov
mov
and
movsb
jo
orb
addl
daa
int3
push
sbb
rolb
xchg
inc
out
xor
fldl
sti
mov
cli
cmp
sub
cmp
nop
loopne
fstpl
mov
cld
pushf
fdivs
push
and
mov
leave
sub
sbb
lods
out
xor
push
dec
jl
pop
push
cmpsb
mov
repz
out
enter
shrb
mov
pop
cs
mov
sbb
inc
fimuls
mov
pop
cmc
rcll
aam
cwtl
xchg
in
repnz
jne
lahf
imul
gs
lds
adc
into
movsb
fcoml
push
out
std
mov
in
leave
dec
mov
xchg
pop
xor
aad
fnstenv
test
cld
mov
or
mov
rolb
xchg
jge
inc
cmpsb
and
sbb
xorl
xor
mov
lahf
std
pop
or
xorl
rorl
xlat
movsl
push
add
adc
jbe
xor
add
jp
divb
xchg
stos
lret
dec
clc
pop
ljmp
or
cwtl
jno
ds
pop
xor
xor
mov
mov
out
cmpsl
sub
or
jecxz
push
mov
mov
jno
dec
sub
clc
pop
or
push
int
xchg
sub
dec
hlt
ret
mov
insb
dec
stos
mov
int
out
mov
push
and
push
adc
push
dec
pop
fcmovu
subb
jecxz
inc
mov
xchg
cmp
fwait
call
mov
pop
outsb
dec
imul
cmpsl
sbb
adc
mov
mov
inc
jbe
adc
bound
push
lods
cwtl
adc
xchg
jle
daa
jp
aam
pop
xchg
add
ja
mov
cmp
adc
fdivl
loop
mov
mov
push
cmp
jl
push
test
das
add
out
imul
dec
mov
sbb
in
shl
fwait
cmp
movsb
mov
out
cmp
data16
or
cmp
add
negl
push
cmp
mov
pop
inc
arpl
daa
inc
std
in
xchg
xor
mov
gs
inc
shll
cmp
jp
fldt
mov
sti
in
inc
xchg
jnp
xchg
sub
incl
push
out
push
sbb
cld
fldenv
pop
fisubrs
loopne
addb
sub
mov
outsb
jbe
push
sbb
push
pop
pop
mov
add
adc
xorb
loopne
cmpl
sbb
pop
fucomip
ret
and
cmpsl
sbb
mov
ret
mov
jbe
cwtl
out
push
inc
push
insl
adcb
popa
jnp
jb
js
jg
xchg
xchg
inc
shll
outsb
shll
adc
mov
lcall
repz
das
ds
fcoms
loop
inc
cmp
mov
adc
arpl
mov
xchg
arpl
aaa
lods
loopne
inc
sub
pop
push
sbb
sti
bound
stc
lret
out
div
lahf
or
loopne
jmp
push
mov
outsl
xor
adc
mov
fld
push
push
ret
mov
inc
test
jb
outsb
jle
aaa
test
push
push
negl
insb
movsb
adc
aas
cmp
add
xor
add
stc
or
mov
ljmp
adc
loop
leave
mov
mov
dec
notl
cs
pop
mov
inc
lret
lds
lock
jo
lds
mov
out
test
mov
addb
popa
jg
test
popf
sahf
movsb
out
fbstp
push
inc
sbb
ret
insb
cli
push
jg
dec
insl
aas
aad
xor
rorb
imul
mov
addr16
and
xor
mov
cmp
out
movsl
and
aad
rclb
ret
and
sub
jbe
adc
fisttpll
sub
add
or
inc
int3
mov
in
sub
push
fdivs
mov
fbstp
mov
or
fsubrl
lret
push
lds
repz
fisubrl
mov
inc
lahf
outsl
xchg
xor
xchg
insl
aaa
mov
movsb
pusha
sub
lret
cltd
pop
inc
adc
adc
sub
sub
cmp
mov
push
xchg
repz
sbb
and
sbb
lods
fdiv
jne
push
lcall
mov
fdecstp
daa
inc
mov
mov
adc
dec
sub
test
mov
push
mov
xchg
dec
add
mov
fwait
movsl
pop
test
dec
addr16
fwait
xor
mov
es
lahf
jmp
jb
in
inc
mov
shll
imul
sbb
lea
mov
add
and
push
loope
and
into
pop
test
mov
adc
enter
pop
add
push
xchg
es
xchg
scas
sahf
xchg
sbb
and
xlat
loop
shlb
in
enter
pop
aad
fmull
test
pop
adc
mov
inc
fcmovnb
aas
jb
adc
call
dec
cs
aad
add
cli
mov
cmpsb
imul
aaa
and
cmp
adc
or
gs
sahf
pushf
pushl
popl
in
push
ss
mov
push
outsl
clc
rclb
xor
clc
into
push
test
inc
cmp
gs
in
rorb
pop
mov
xchg
sahf
loope
call
xor
xchg
gs
cmp
push
mov
addb
imul
bound
jmp
lret
mov
js
adc
pop
cs
aam
fimuls
and
int3
push
add
fistpll
xchg
sub
sar
fstpt
mov
pop
movsl
or
xchg
pop
rclb
mov
or
outsl
mov
dec
pop
sbb
fimuls
cmp
xchg
rcll
sbb
dec
cwtl
pop
or
jl
or
mov
xorl
xchg
fisttpl
xchg
lea
loope
dec
mov
fildll
enter
ret
leave
xchg
or
js
int3
sbb
ds
dec
rclb
ljmp
out
ds
pop
cmp
xor
mov
iret
dec
xor
js
push
cmp
xlat
test
test
jb
lret
js
push
sahf
scas
loop
daa
dec
daa
aaa
dec
add
popf
rcll
sbb
es
call
jnp
inc
mov
sbb
mov
push
in
mov
cmp
dec
ljmp
nop
jmpw
adcb
dec
or
jne
cmp
aas
sub
sbb
xor
add
push
adc
roll
mov
imul
clc
jb
xor
mov
call
pop
cwtl
sbb
jb
jmp
fmull
xchg
hlt
jmp
push
addr16
xor
ja
aaa
out
lret
push
subl
testb
cmp
inc
aam
stos
insb
in
sahf
push
cs
push
cld
mov
daa
sbb
fxch
sub
outsl
push
push
jl
fcmovu
push
arpl
out
das
xlat
movsl
ror
mov
sub
stos
add
xchg
int3
sub
daa
dec
mov
sbb
cmp
lods
in
dec
jb
xorb
popa
push
or
mov
shll
xchg
add
cld
insl
and
mov
push
push
sarb
jnp
and
lea
mov
rcrb
mulb
dec
sub
adc
xchg
inc
jno
rolb
hlt
movsl
mov
push
mov
enter
cmpsb
inc
insb
hlt
rcrl
test
jmp
mov
imul
rorl
fldt
xor
or
mov
nop
dec
xorl
inc
shlb
jg
or
and
pop
and
mov
adc
mov
mov
or
adc
push
jle
pop
mov
scas
movsb
dec
std
pop
sub
sub
lret
in
clc
cld
nop
or
inc
enter
insb
push
cmpsb
orb
mov
xchg
lods
pop
inc
dec
jmp
imul
clc
in
xor
dec
dec
dec
mov
int
adc
shlb
ljmp
scas
cmp
mov
push
jb
gs
jb
int3
adc
pop
sbb
cltd
test
or
sbb
sub
xchg
loope
in
sbb
sub
xor
arpl
mov
mov
and
std
mov
xor
aaa
rcrl
jbe
xor
add
mov
cmc
into
dec
inc
sbb
adc
cmp
aas
or
aad
xor
out
mov
mov
xchg
popf
jnp
pop
aas
aam
shl
inc
sub
aad
jmp
and
push
cmp
push
dec
mov
incb
stos
lock
stc
mov
push
inc
xchg
fistpll
jmp
push
sub
fisttpl
rclb
jge
xchg
repz
xor
hlt
pop
sbb
outsb
push
cmc
xchg
mov
inc
out
in
cmp
cmp
ret
mov
bound
push
imul
in
xchg
or
fisubl
fcomps
mov
push
into
cmp
push
dec
sub
push
jbe
xchg
cwtl
and
cmp
push
std
les
ljmp
fidivl
xor
mov
ror
shll
int3
fistps
and
adc
iret
sbbb
out
or
xorl
cs
scas
icebp
aad
aad
cltd
mov
dec
imul
cvtpi2ps
aaa
imul
jnp
jp
add
movsl
xlat
enter
cmpb
cld
lds
and
and
fwait
sbb
shlb
repz
popa
out
aaa
leave
insl
in
js
or
xor
fldcw
aam
pushf
mov
lea
sbb
add
jmp
cmc
shrl
test
cmc
lcall
repz
adc
jae
xor
enter
lret
or
cmp
sbb
in
lods
fucomip
aam
mov
cmpsb
in
ret
pop
into
test
xor
negl
push
jnp
sub
pop
les
inc
xor
mov
push
mov
mov
fisttpll
jp
inc
pop
xchg
jo
out
jp
mov
fstps
stos
call
fists
mov
jno
sar
popa
inc
or
hlt
xlat
inc
push
xchg
cmpsb
and
fldt
sbb
or
push
arpl
sub
fisttpll
sub
mov
pop
pop
js
mov
dec
sub
push
test
pop
hlt
push
dec
inc
fs
jbe
sub
test
pop
insb
cmp
popf
jne
mov
jne
fcompl
push
ret
pop
push
jl
je
xor
dec
add
orl
sub
pusha
loopne
inc
xor
fimull
mov
std
pop
xchg
fsub
sub
enter
cmpl
lea
and
push
inc
lahf
cmpps
repnz
sarl
push
pop
or
xor
sbb
push
mov
je
jns
ljmp
adc
mov
and
dec
xor
imul
mov
jp
dec
sbb
pop
mov
mov
fistps
les
jmp
movsb
arpl
mov
adc
daa
dec
pop
jo
das
int3
jb
or
cwtl
pop
dec
add
or
mov
cmpsl
jle
stos
incl
and
test
ret
mov
mov
sar
lods
enter
popf
xchg
lea
std
push
test
xor
mov
imul
adc
push
xchg
mov
cwtl
incl
out
sbb
xchg
out
xor
loopne
or
cltd
xchg
sub
push
mov
pop
jnp
sbb
clc
addb
mov
in
bound
jge
jecxz
xor
dec
jmp
cmp
pop
fwait
mov
sahf
mov
push
outsb
dec
addr16
and
sti
sbb
inc
fisttpl
mov
insb
cmp
xor
push
out
ret
rorl
loope
scas
stos
mov
adc
add
jns
insb
push
cmp
mov
test
jnp
push
xchg
jnp
fwait
aas
subl
xchg
or
jl
movsl
push
xor
enter
insl
mov
pop
inc
mov
sub
test
addb
test
shl
inc
jmp
pop
or
push
scas
add
orb
xchg
pop
imul
notl
mov
sbb
mov
insb
and
test
mov
push
mov
leave
gs
mov
sbb
scas
add
mov
pop
xor
mov
adc
lock
mov
es
xchg
movb
in
pop
mov
ss
rorb
test
pop
leave
jb
fcmovnb
mov
ljmp
mov
sbb
jbe
ljmp
cmc
lods
stc
imul
xor
loopne
lock
push
in
pop
fdivl
inc
and
mov
bound
cmp
and
cmp
iret
pop
adc
xchg
in
pop
ss
push
popa
cmp
fisttpl
inc
jns
mov
ss
fisttpll
shld
aas
push
mov
popf
cs
movl
jnp
ret
cwtl
jmp
adc
jno
pop
ret
scas
mov
adc
dec
pop
leave
sbb
test
add
xchg
inc
sbb
adc
cli
jg
cmp
mov
int3
and
and
dec
xor
xchg
jmp
pop
xor
or
mov
nop
dec
nop
mov
sbb
xchg
cmp
fs
int
sub
push
arpl
jno
lea
mov
push
jge
testl
stos
enter
jecxz
stc
dec
pop
lock
out
adc
pushf
insb
shll
bound
outsl
sub
jle
sub
jp
and
repz
pop
fisttpll
push
push
push
and
and
push
pop
pop
mov
or
nop
and
inc
out
addr16
mov
arpl
mov
mov
sar
outsl
test
inc
cmp
or
xor
int3
sbb
mov
push
add
sbb
jge
cmc
adc
and
push
mov
jo
arpl
stc
loopne
push
mov
mov
add
add
sbb
fiadds
jp
pop
ret
pop
pop
fdivs
push
testb
xchg
bound
xor
jge
dec
jg
sub
pop
popa
test
repnz
or
and
fstpl
sub
pushf
mov
inc
decl
cld
outsb
adc
adc
popa
test
sbbl
mov
push
lds
in
nop
fidivl
or
sub
es
sub
cmp
test
push
test
js
and
push
inc
lds
icebp
lock
iret
mov
jmp
and
sahf
jecxz
mov
pop
loopne
fstpt
push
cs
test
jle
adc
push
xchg
in
js
pop
in
or
pop
mov
dec
pop
out
shrd
cli
in
aad
push
push
pop
rclb
push
es
mov
pop
call
jo
lock
jne
sub
ret
or
push
fcom
stos
jge
inc
jno
cmpsb
add
or
ret
mov
jge
andb
mov
xchg
jmp
dec
push
xchg
pop
xor
pop
rolb
and
insb
and
mov
fistpl
aad
jl
lods
xlat
in
rclb
xchg
push
imul
sub
cli
jp
xor
push
js
lea
cmp
adc
mov
out
fstl
or
leave
ss
adc
std
jge
sbb
and
test
adc
bound
das
aaa
push
pop
mov
jle
ss
xor
pop
pop
and
xchg
inc
mov
pop
sub
sahf
pop
lret
pop
loope
jns
push
arpl
push
pop
add
mov
test
imul
xchg
fadd
ret
push
and
shlb
sbb
pop
leave
sbb
pushf
xor
fists
jg
cli
sub
pop
and
pop
jmp
es
ror
das
cwtl
mov
insl
sub
pusha
pop
adc
xchg
fcomps
adc
leave
mov
pop
and
and
idivb
push
divl
hlt
nop
out
mov
loope
adc
lahf
fldcw
cmpsb
jnp,pt
pop
push
jecxz
lahf
test
insb
inc
cmp
lods
adc
cmpsl
rcll
xchg
mov
jl
ljmp
cmp
jmp
xlat
jno
adc
push
mov
sub
dec
inc
dec
lods
lds
sub
jp
cmp
out
jge
adc
lods
mov
int
pop
pop
loop
cltd
mov
pop
cs
and
insl
mov
push
inc
or
js
call
into
jno
cmp
jp
outsl
scas
dec
pop
fsubp
mov
bound
sbb
ret
sub
mov
pop
test
jmp
xchg
push
mulb
xchg
lds
sub
inc
cmpsb
mov
leave
jecxz
cld
daa
mov
mov
fnstcw
xlat
or
pop
fisubrs
xchg
add
mov
adc
ss
stos
aaa
jmp
pop
mov
ss
mov
and
pop
lods
cmc
ss
fs
or
aas
push
or
jg
push
push
and
push
xchg
test
imul
xchg
lret
les
mov
xor
cwtl
pop
xor
test
mov
movhps
mov
ret
adc
xchg
xor
cmp
aas
shll
andl
int3
add
cmc
imul
inc
cld
mov
dec
jge
cli
xor
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
sub
dec
or
adc
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
