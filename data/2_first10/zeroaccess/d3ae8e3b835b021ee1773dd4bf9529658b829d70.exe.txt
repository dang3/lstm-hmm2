push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
push
jb
add
pop
addl
cmp
js,pn
je
in
jno
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
sbb
int3
dec
push
mov
and
dec
fwait
sbb
rcrl
out
call
outsl
lods
push
push
fwait
pop
sub
icebp
jno
rcr
movb
sub
stos
dec
sub
addr16
mov
loopne
jg
push
sbb
loope
movsl
jno
mov
push
aaa
and
adc
sbb
sbb
nop
fs
pop
imul
mov
les
roll
in
leave
movsl
push
cmpsl
lock
and
push
cmp
dec
xlat
jno
cmp
mov
insb
adc
fisubs
mov
jge
out
leave
mov
ds
push
xchg
and
mov
mov
add
mov
fdivrs
lds
mov
cmp
stos
mov
xor
aam
pop
lea
mov
mov
popa
pop
js
std
idivb
lods
cmp
xlat
jecxz
xor
sbb
xchg
decl
fcoms
daa
mov
imul
push
jge
push
push
xor
mov
loopne
push
jecxz
mov
and
call
imul
jmp
js
jo
mov
sub
hlt
sbb
mov
mov
sbb
ret
scas
popf
jecxz
cltd
out
jbe
push
and
mov
sbb
inc
or
in
jae
mov
cmp
and
shl
ret
adc
cmc
pop
lret
shlb
pop
call
pop
insb
es
int
xchg
lahf
adc
push
inc
enter
and
pusha
dec
mov
pop
inc
mov
lods
sub
mov
mov
and
pop
or
add
testb
or
shr
add
sbb
mov
xlat
pop
in
and
sbb
pop
push
cmp
rorl
add
cmp
inc
or
and
hlt
das
jge
jg
push
lock
aam
sahf
inc
xor
addr16
loop
jo
data16
cmpsl
pop
xor
mov
inc
xchg
jl
inc
imul
rorb
mov
jp
or
mov
pop
fcoml
jb
mov
and
pop
jmp
in
jnp
jp
adc
mov
sub
ret
sti
sahf
mov
add
pop
xorl
add
sbb
or
fldt
leave
jns
and
lret
push
ljmp
mov
sbb
lahf
testl
pop
aas
add
cmpsb
cmp
and
clc
test
ret
mov
push
fwait
rcl
jmp
cmpsb
inc
clc
mov
pop
in
sbb
inc
xor
jo
test
aam
sar
mov
insl
sbb
aam
loopne
push
call
push
lods
mov
jb
jae
push
dec
loop
or
dec
pop
imul
nop
pop
sahf
xor
jnp
jb
jle
shrb
push
mov
jno
xchg
mov
dec
clc
xlat
out
pusha
stos
sub
mov
outsb
loopne
je
inc
sub
out
jg
xor
in
imul
adc
jg
and
dec
and
ret
fistl
xchg
repnz
test
dec
mov
lds
pop
movsb
inc
mov
add
and
jg
out
adc
push
fucomip
and
mov
nop
ds
cmp
push
mov
cmc
pop
mul
jb
push
ret
xchg
fldenv
repnz
pop
cwtl
les
mov
cmp
hlt
sub
xchg
dec
iret
add
ret
pop
loopne
and
stos
sbb
movsl
imul
scas
pop
mov
cmp
cmpsl
mov
repz
imulb
std
pop
stos
jb
jmp
adc
aaa
fildll
jge
pop
mov
push
scas
ss
inc
cltd
test
or
sub
test
or
jmp
cmp
loope
mov
inc
or
jnp
mov
pop
fbld
sbb
js
mov
popa
sub
cmp
jecxz
stos
mov
xor
add
lea
std
push
jo
add
sbb
aaa
cmp
test
pop
repnz
insb
enter
jo
fucomp
mov
mov
popf
cltd
add
ss
out
pop
or
popa
or
insb
inc
out
jle
loope
cmpsl
cmp
pop
fisttps
filds
push
jmp
mov
mov
mov
lds
jmp
inc
sbb
and
push
mov
outsl
push
push
dec
inc
xlat
jmp
adc
pop
fwait
xor
dec
dec
jo
mov
xchg
fstpl
les
pop
out
jno
cmpsl
xlat
icebp
mov
popf
nop
or
inc
cmp
mov
out
sbb
inc
stos
lcall
punpcklbw
fnsave
cmp
sbb
gs
jo
dec
popl
nop
cmp
xchg
testl
shrl
pop
test
fsts
dec
out
scas
fsubs
dec
push
shll
xor
leave
test
lods
sub
jl
jbe
in
into
mov
ret
out
ret
jecxz
mov
add
or
inc
sti
insl
test
push
sbb
cmp
fiaddl
pop
inc
out
pop
je
push
repnz
xchg
out
xor
adc
lock
bnd
cmp
int
call
scas
cmp
sbb
loop
fmull
imul
insl
pop
cmc
cmpsl
les
pop
mov
fildl
inc
daa
sbb
jae
xchg
cwtl
inc
ds
test
mov
rcl
lret
mov
sub
int3
fisubs
adcb
arpl
loopne
ret
lods
test
xchg
hlt
mov
jp
sbb
lock
cmp
mov
xchg
fists
ja
aaa
repz
daa
lea
bound
fsubs
call
insl
sbb
and
cmp
lret
iret
pop
sub
and
cmp
sbb
pop
mov
cmc
mov
lds
xchg
add
or
insb
xchg
mov
mov
dec
pop
in
jecxz
leave
ret
sub
mov
mov
push
adc
dec
ds
mov
cmp
lea
adc
fs
sbb
adc
xor
inc
fldcw
push
lods
in
bound
push
add
inc
fs
push
lcall
rorb
test
push
cmp
sub
das
push
lds
jg
ja
mov
iret
mov
and
mov
mov
imul
es
add
call
neg
cli
inc
jmp
fldt
cmpsl
push
push
xor
pop
xchg
call
pushf
mov
push
loop
daa
lret
fiaddl
fcmovu
fidivs
push
pop
loope
shll
sbb
xor
cmpsl
addb
xchg
fdivrl
lods
out
sub
push
jne
dec
lcall
jp
cmp
loop
adc
lret
ds
cltd
decb
insb
mov
bound
mov
add
scas
push
outsb
lea
pop
cmp
adc
sub
std
sub
or
and
mov
popa
ret
mov
js
rep
test
pushf
in
sahf
xor
in
gs
mul
ret
mov
out
and
mov
mov
push
push
arpl
cmp
cmp
mov
cmpb
sub
ljmp
es
and
xchg
mov
and
mov
add
or
and
cmp
jg
rcr
filds
sub
xchg
push
adc
mov
pop
inc
sbb
mov
jo
adc
leave
mov
dec
movsb
jbe
imul
xor
mov
mul
sub
pop
push
rcll
lret
ja
pusha
arpl
dec
lock
outsb
in
inc
jmp
cmpl
mov
jns
adc
and
lds
cmp
mov
cmpsl
push
add
or
ret
cwtl
popa
outsl
or
cmp
gs
scas
stos
jmp
in
loope
mov
and
mov
cmc
jecxz
clc
cmp
jo
mov
out
shl
ja
mov
sub
ja
loopne
xchg
fsts
jo
mov
pop
or
mov
scas
fadd
in
mov
aaa
lea
push
sub
adc
mov
int
xchg
out
pop
adc
arpl
xor
inc
xor
pop
push
add
clc
aas
subb
dec
mov
xorl
mov
add
push
mov
cwtl
push
dec
dec
mov
call
xchg
push
pop
dec
jmp
int3
aaa
adc
notb
es
add
add
fucomip
out
shlb
das
cmpsl
cmc
out
pop
adc
add
je
ret
or
cmp
movd
flds
outsb
ja
mov
frstor
out
jno
pop
orl
adc
lahf
out
add
rcll
sub
fldenv
cs
dec
inc
bound
mov
inc
inc
xor
pop
inc
in
scas
call
and
test
jl
add
js
mov
mov
loopne
inc
jne
xlat
mov
xorb
out
rcrb
dec
or
out
adc
cmp
ljmp
cmp
dec
int
dec
xor
subl
cmc
mov
test
scas
les
dec
hlt
mov
xchg
rclb
movsl
push
inc
lock
dec
mov
imul
push
mov
fists
push
jno
std
cli
and
cmp
pop
mov
pop
stos
test
jns
fs
pop
mov
adc
cmp
and
and
or
loop
mov
popa
jb
rorl
xchg
daa
push
pop
lods
test
ds
xor
inc
push
sub
push
mov
sub
jae
dec
sub
sub
into
cmp
lret
scas
add
es
dec
cmp
ja
ret
lods
mov
pop
inc
sbb
xchg
cli
pop
jbe
ffreep
rcrb
aam
mov
cmc
adc
ljmp
sbb
add
lret
adc
jmp
jecxz
push
xchg
icebp
add
pusha
push
pop
fstl
fcoms
mov
or
mov
inc
movsl
sbb
or
sbb
aaa
dec
and
js
mov
aaa
out
xchg
add
nop
insl
mov
push
fadds
inc
mov
fdivrl
shrb
ficomps
mov
add
or
ret
and
sub
popf
sarb
sub
sub
jg
insb
mov
push
sahf
aaa
pop
mov
pusha
jne
lret
pop
push
out
and
xor
pop
stos
adc
mov
pop
flds
int3
sbb
outsb
pop
icebp
imul
sbb
and
sub
filds
test
repz
cmc
std
sbbb
jp
in
popa
bound
mov
aas
mov
sar
sbb
subl
jmp
xchg
stos
add
adc
sahf
jmp
stos
sbb
std
add
sub
sub
xor
or
sarb
ret
f2xm1
adc
push
cmc
lea
jmp
mov
or
xlat
cs
xchg
push
pop
hlt
jg
adc
andb
lds
and
roll
jne
mov
xor
dec
imul
xchg
fsubrp
and
fisubrl
in
sbb
pushf
xorb
or
xchg
or
ret
ljmp
adc
in
sub
xor
ss
sub
iret
mov
add
pop
inc
pop
lods
loop
or
mov
mov
add
mov
cmp
subb
add
jge
mov
addb
data16
jle
mov
jae
lods
movl
sbb
dec
adc
pop
repnz
xchg
in
das
mov
ficomps
popa
and
fisttpll
mov
inc
into
xor
lock
xlat
nop
mov
rorl
out
mov
xchg
or
insb
icebp
shll
add
sub
cvtpi2ps
lods
mov
lcall
test
or
enter
or
or
adc
fs
mov
imul
aaa
cmp
repz
push
lods
stos
fildll
ljmp
fisubl
mov
jmp
xor
sub
sub
or
mov
fisubs
or
adc
pop
icebp
add
mov
push
fisttps
mov
add
mov
xchg
pop
mov
movsb
adc
push
addr16
mov
hlt
cmc
cmp
test
es
daa
rorb
jmp
jne
cld
aam
mov
dec
leave
push
fiadds
pop
pop
cs
out
jge
jne
sbbb
insl
out
mov
cltd
sbb
mov
les
jge
inc
xchg
push
stos
arpl
push
mov
addl
or
fcompl
stos
stos
in
xor
xor
pop
jo
int
mov
push
fstpl
cmp
int
push
inc
insl
sbbl
addr16
or
mov
cs
sahf
jbe
lds
jl
jae
into
in
ficoms
fistpl
std
addb
ds
enter
in
stos
in
sbb
stos
sub
lds
pop
cmpsl
jnp
leave
mov
xchg
in
mov
push
cmp
add
mov
jmp
notb
bound
imull
jle
std
mov
and
leave
mov
adc
popf
stc
fbld
xchg
outsb
sbb
inc
testl
lcall
or
jle
leave
and
shrl
dec
mov
inc
dec
outsl
cmp
popa
stos
and
imul
push
cmp
shld
cwtl
pop
test
loop
add
faddl
out
jmp
push
push
js
jg
or
and
scas
mov
orl
rcl
cmp
mov
fsubrs
push
imul
testb
jecxz
aas
movsl
repnz
sbb
sarl
cltd
dec
push
dec
popf
enter
xor
orl
or
pop
mov
lret
pop
test
push
jne
inc
mov
adc
daa
je
mov
push
sbb
dec
mov
imul
movsb
je
pop
cmp
shl
sbb
fisttpl
jg
cmp
int3
push
lcall
push
fisubl
loop
dec
inc
mov
imulb
jno
lea
pop
cmpxchg
adc
or
arpl
pop
aam
in
xor
out
adcl
and
push
jae
xor
ret
xchg
xchg
je
in
xchg
xchg
cltd
dec
out
jne
ret
jne
xor
mov
pop
push
shr
pusha
loopne
cmpsl
cmpsl
sub
cld
sbb
sbb
add
sbb
sarb
sbb
fists
stc
push
jl
cmpsb
jbe
dec
in
adc
add
addb
ds
icebp
aas
adc
jecxz
aas
mov
imul
xor
mov
hlt
scas
cmp
dec
and
jne
jmp
cmp
mov
daa
js
lret
out
mov
lods
pop
hlt
adc
sahf
cli
pop
fisubl
or
and
jp
push
pop
adc
fmul
mov
stos
cmp
cwtl
psubusw
xor
movsb
xchg
fidivrl
stos
inc
xchg
sbbl
pop
mov
mov
andb
lock
mov
addr16
cwtl
daa
cltd
sub
push
add
pop
popa
repnz
lds
pop
sbb
jns
mov
lahf
pop
inc
fstl
sbb
and
sti
adc
cmc
pop
jecxz
data16
fldcw
call
xor
jecxz
adc
xchg
dec
mulb
jns
mov
sbb
cwtl
inc
pushf
data16
xlat
stos
push
push
mov
adc
fsubs
xor
jo
xor
lods
sub
jle
jb
daa
nop
icebp
rcrb
aaa
andb
xor
push
push
subl
cmpsb
xor
inc
shl
mov
rolb
jg
lock
jle
adc
into
or
push
out
pop
insl
pop
dec
in
flds
push
cmpsl
jge
adc
test
jmp
rorb
fmuls
test
pushf
das
mov
adc
cmp
sbb
cmpb
std
fsubl
jae
pop
pop
mov
clc
fnstsw
aad
dec
outsl
das
jecxz
xchg
fdivrp
sbb
add
or
pop
out
push
push
lods
pop
mov
mov
xorb
push
js
jno
push
addb
xor
idivl
jno
js
sbb
cmc
push
sbb
int3
iret
repz
xlat
lea
and
arpl
mov
loopne
mov
out
jo
xchg
lcall
and
scas
push
and
cmpsl
ds
inc
int
or
gs
sahf
pop
ret
mov
pop
dec
mov
mov
lret
imul
cltd
inc
movsl
divl
rolb
cmp
pop
test
jge
cli
popf
ds
testl
fwait
adc
in
mov
ret
jle
lock
stos
xor
or
aad
loop
jl
inc
mov
insb
stos
jo
dec
pop
sbb
sub
dec
js
ljmp
popa
mov
imul
in
mov
popa
imul
les
mov
roll
add
cltd
in
pop
xor
clc
js
dec
call
out
subl
add
xor
js
sbb
add
inc
jge
mov
or
sub
out
dec
mov
lret
je
je
inc
pop
sub
pop
in
inc
and
add
mov
add
mov
icebp
ret
mov
sub
mov
movsl
xchg
add
notb
fwait
andb
push
outsb
adc
roll
repnz
es
push
aam
loopne
popf
pop
jae
add
jge
inc
sbb
out
mov
and
xchg
ss
xor
push
addl
push
cmpsl
cltd
jbe
scas
mov
push
sub
repnz
lcall
push
cmp
cltd
aas
jl
movsb
aad
cld
into
shlb
popl
sbb
and
xor
adc
mov
test
pop
inc
sub
xlat
and
ret
out
push
aad
or
push
or
outsb
rol
ret
jmp
lahf
push
out
xchg
fs
dec
lock
mov
fdivrp
mov
ret
enter
out
dec
nop
xor
sub
rcrb
adc
shrb
sbb
mov
xchg
and
jno
mov
mov
shll
cmp
sbb
rcrl
jnp
add
mov
arpl
loopne
int
jne
mov
hlt
sbb
lret
insb
adc
stos
insl
and
mov
add
sbb
sub
adcb
cmp
das
xor
adc
xor
pusha
add
shlb
test
cli
out
aas
movb
and
jecxz
add
mov
in
mov
sti
push
add
fsubrs
out
pop
inc
xchg
mov
rorb
ret
push
ds
dec
repnz
movb
out
jl
adc
pusha
clc
or
arpl
cwtl
std
xchg
ja
int
mov
and
imul
mov
pop
mov
out
mov
push
push
and
mov
inc
xor
xlat
fs
inc
pop
je
sub
pop
cs
pushl
cld
cmp
xor
cmp
xor
mov
test
aaa
movsl
adc
inc
fwait
xor
and
or
fstl
add
test
adc
push
xor
xchg
and
add
les
push
mov
shrl
mov
mov
arpl
in
add
jb
lret
lret
push
cmp
dec
pushf
arpl
loope
or
xor
rclb
cmp
fs
icebp
pop
in
incl
outsb
pop
inc
out
out
outsl
in
push
loop
adc
or
lcall
imul
fs
adc
adc
xor
and
pop
mov
sub
ljmp
jmp
sub
or
test
rol
popl
mov
mov
gs
sarl
xlat
sub
push
mov
xor
sbb
call
std
int3
fldt
loopne
mov
int
jns
filds
ja
push
or
push
stos
xchg
pushf
pop
sbb
mov
xchg
cmp
jne
loop
push
jge
fistl
aaa
sbb
xchg
add
jle
mov
pop
adc
pop
mov
inc
mov
xlat
xor
adc
add
frstor
mov
fs
orl
int
hlt
movsb
dec
adc
aam
mov
mov
loop
add
dec
mov
stos
lds
test
mov
incl
lret
inc
cmpsb
mov
data16
popf
ret
frstor
sbb
mov
cwtl
loop
sbb
push
insb
lret
mov
je
or
xchg
fcoms
mov
int
mov
arpl
add
jmp
pop
jl
out
mov
addr16
add
mov
imul
ret
mov
jnp
push
addb
and
lret
and
fidivrl
add
mov
dec
ja
pop
sbb
ds
stos
loope
test
stos
rorl
sub
ret
or
add
sub
adc
xor
daa
xchg
sub
ds
repz
fnstenv
or
lret
lods
leave
movsl
add
repnz
add
test
rol
rcr
pop
roll
into
sahf
mov
push
lcall
xchg
sub
out
mov
xchg
xchg
in
inc
jo
jmp
stos
test
das
cltd
mov
dec
push
xchg
and
lahf
dec
rcll
mov
fsubrs
fistps
ljmp
rolb
lds
pusha
sub
ljmp
jns
add
out
sub
movsl
sub
notb
sbb
out
xor
sub
pop
pop
outsl
and
xor
push
sbb
pop
inc
sub
mov
xchg
push
cltd
jb
push
lcall
cmpsb
push
jl
mov
mov
mov
test
fcomps
and
js
repnz
adc
dec
mov
push
xchg
jb
cmp
pop
fistl
cmp
jg
cmp
inc
ljmp
cmpsb
jns
movsb
pop
and
mov
or
inc
inc
mov
insl
add
jge
ret
ret
aam
jl
test
mov
ja
sub
mov
mov
inc
adc
test
push
dec
push
pop
mov
cwtl
lcall
jl
sub
ret
pop
test
das
lahf
jl
mov
outsl
es
push
in
dec
or
adc
push
push
js
mov
xchg
outsl
daa
mov
sub
dec
outsl
push
fldcw
ss
jns,pn
mov
pop
mov
jbe
add
call
out
xor
out
repz
sahf
lret
or
sub
fisttpll
jmp
sub
aad
jne
out
dec
jp
add
pop
jle
cmp
or
or
mov
outsl
clc
and
call
fmuls
andl
xchg
std
adc
sbb
push
cmpsl
jns
inc
sub
bound
sbb
or
inc
mov
and
fs
and
xor
mov
xchg
xor
xor
inc
int3
fldenv
ret
std
mov
cmpsl
into
movsl
les
inc
fwait
stos
into
sub
dec
pop
sti
lret
scas
lods
adc
fisttps
iret
inc
cmpb
inc
icebp
push
mov
adc
pop
insb
hlt
lods
cmp
jg
xchg
fidivrs
add
scas
cmpsb
jnp
cmp
jae
stos
push
mov
leave
mov
cltd
pop
xchg
dec
xchg
movsb
iret
js
and
movsb
daa
pusha
adc
push
sar
sbb
fadd
inc
jbe
pop
stos
scas
fisubrs
push
mov
repnz
pop
pop
fsubrl
addr16
mov
xchg
sub
cli
ljmp
outsb
mov
inc
adc
pop
mov
add
shrl
iret
loop
sbb
mov
cmc
cmpsl
dec
fcoms
jnp
fcmovu
push
fidivs
enter
sbb
aaa
xlat
push
lds
push
lods
push
add
xchg
add
das
jne
xchg
insl
pop
xor
dec
mov
dec
movsl
mov
push
imul
sar
and
bound
aaa
sub
loope
movsb
pop
lea
out
jg
mov
cmp
cwtl
fcmovnb
outsb
cltd
dec
sbb
push
or
xchg
int3
jp
ja
bound
mov
ss
test
aam
push
cmp
lret
cmpsl
dec
pusha
jb
xor
fmuls
or
pushf
jns
add
in
sbb
add
inc
jecxz
out
pushf
test
into
daa
lea
testb
notl
jmp
mov
mov
mov
sbb
repnz
mov
pop
mov
jl
dec
inc
push
outsl
iret
iret
dec
pop
or
sahf
add
jbe
sbb
pop
adc
mov
int3
pop
sub
cli
aam
and
dec
inc
xchg
push
and
dec
sbb
dec
aaa
pop
sahf
pusha
les
push
add
mulb
ds
cmp
in
mov
jnp
add
sti
add
shrl
stc
andl
scas
pop
das
mov
mov
mov
xchg
lret
pop
arpl
dec
sub
xchg
lds
xchg
cmp
jb
mov
xor
hlt
pop
lea
or
repz
inc
enter
adc
jmp
inc
push
data16
xchg
jno
pop
outsl
xchg
push
out
inc
lret
lock
ljmp
dec
imul
out
jp
pop
cmp
daa
pop
lds
sti
dec
jle
mov
mov
jmp
fiadds
mov
jne
or
lods
sub
vminsd
and
xor
shl
dec
push
daa
loopne
xchg
xor
mov
cltd
or
jae
insl
int
cmp
sbb
bound
jns
mov
mov
repz
and
or
xchg
cmp
inc
add
mov
xor
lcall
lret
mov
pop
repz
lret
movsb
cmp
std
adc
or
popf
ss
jecxz
add
pop
leave
lret
cmp
push
mov
call
outsb
fs
out
add
outsl
dec
mov
and
divb
sbb
xchg
cmp
clc
pop
mov
fistl
and
sub
sub
movsb
jg
cmp
out
ja
mov
cmpsb
push
jle
stos
les
aas
xor
js
add
xchg
aam
iret
xchg
xchg
in
push
mov
je
in
addl
test
sbb
push
loopne
push
sbb
outsb
push
push
imul
push
out
out
rclb
xor
cmp
ss
cltd
mov
lods
sub
jbe
fstp
jo
jmp
push
jp
out
inc
mov
jne
mov
push
xor
and
and
sarl
push
jp
cmp
add
xchg
lock
sbb
insb
aam
sbb
inc
out
mov
mov
push
ljmp
jg
inc
push
inc
jne
xchg
xchg
jb
pop
pop
or
or
or
movsl
lcall
imulb
add
jl
mov
sbb
imul
lea
int3
push
addr16
les
aaa
cmp
das
ljmp
andl
jecxz
andb
lods
mov
std
setns
mov
cmp
add
test
jbe
dec
jmp
push
int3
and
mov
xchg
sub
mov
sbbl
mov
in
mov
jecxz
xor
pop
pop
xchg
loop
mov
rcrl
jmp
stos
jae
or
pop
cmp
adc
pusha
jb
sbb
mov
push
cld
cmp
sub
xchg
cmp
orps
je
jecxz
test
jb
xlat
push
pushf
cmp
movsl
inc
jbe
push
jle
pusha
jnp
call
mov
lds
jnp
cmp
sub
mov
jmp
insb
cmp
sbb
xlat
jmp
push
sub
mov
repnz
jne
jae
or
add
mov
xor
dec
fwait
dec
jmp
mov
or
orb
mov
mov
loop
mov
nopl
mov
pop
cmp
aas
sarb
pop
cmp
out
push
jle
add
in
adc
or
in
cmp
js
sti
fwait
push
and
movsb
add
rcrl
dec
adc
jbe
addr16
mov
and
fcmove
mov
push
cmp
jl
mov
pop
in
or
ljmp
andl
shll
push
xor
mov
inc
pushf
es
mov
mov
int3
mov
je
movsl
mov
sbb
orb
xorb
aaa
call
pop
jle
xchg
adc
notl
cltd
cmpsb
adc
adc
iret
pushf
stc
xor
lea
ret
add
addl
push
ja
jle
test
fwait
lds
aam
mov
ds
jmp
jg
mov
les
sub
inc
lcall
and
test
pop
jnp
cmpsl
insl
call
xchg
lcall
ret
int
cmpsb
inc
rcrb
popa
imul
xchg
into
adc
and
test
xchg
movsl
mov
imul
mov
fs
inc
add
repz
pusha
dec
daa
into
xlat
cli
mov
mov
sbb
frstor
in
dec
jno
stos
cmpsb
leave
push
adc
into
call
jns
jp
jno
push
mov
push
addr16
lahf
inc
xor
xchg
nop
cs
inc
and
nop
dec
movsb
and
inc
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
add
orl
sbbl
cmp
jbe
daa
xor
inc
popf
push
mov
and
or
or
push
jle
jae
pop
push
adc
daa
les
lea
sub
and
sti
sub
notl
mov
movsl
xor
cmp
mov
jg
push
or
jg
lock
cmp
inc
lds
xchg
mov
xchg
mov
movsb
mov
push
stos
imul
mov
cmpsl
adc
ss
subl
mov
mov
stos
xchg
xchg
pop
ficomps
test
scas
sbb
jge
movsb
and
sub
dec
xchg
out
aam
cmp
cmp
mov
or
push
addr16
fstps
and
je
mov
cld
mov
aam
out
or
sub
pop
aad
mov
inc
gs
pop
jne
xor
add
aas
fcomps
jb
add
push
nop
loope
scas
add
mov
sti
inc
xchg
enter
cltd
adc
inc
or
cmc
cmp
dec
dec
or
and
test
push
xor
xchg
rcll
fcomip
ds
mov
mov
iret
int3
cmp
and
fistpl
repnz
mov
lret
xchg
inc
inc
cmp
cltd
mov
xor
das
xchg
xlat
inc
mov
add
dec
mov
test
dec
mov
push
adc
mov
gs
sbb
stc
add
clc
cmp
jmp
mov
jecxz
out
inc
xchg
cmpsl
adc
or
xchg
cmpsl
enter
in
dec
shrl
adc
jno
scas
repnz
lret
clc
pushf
or
push
mov
and
sub
lds
push
lcall
ror
or
shrb
jg
add
sbb
shll
les
or
push
and
popf
or
push
lods
mov
push
mov
sbb
add
sahf
add
enter
fimuls
sti
mov
adc
and
aam
out
sbb
fcmovne
dec
sub
mov
andl
pop
loopne
icebp
push
jmp
mov
into
mov
pop
daa
cmc
aaa
sbb
xor
or
xchg
pop
adc
daa
shll
sub
outsl
xchg
mulb
sub
fisubl
push
movsl
mov
jle
xchg
leave
fiaddl
arpl
xchg
inc
fldl
pop
push
push
and
cmp
adc
cltd
mov
movsl
inc
adc
adcb
lcall
jecxz
cmpsl
xchg
fwait
cltd
xchg
arpl
mov
inc
cmp
insb
ret
and
xor
sbbl
iret
gs
push
outsl
pushf
xchg
add
test
sti
sbb
rol
in
cmpsb
in
dec
push
lea
dec
dec
jecxz
pop
push
aad
xchg
mov
lea
sbb
daa
push
push
cs
sbb
addr16
dec
mov
xchg
jb
and
enter
fwait
add
push
ja
das
cld
js
ret
mov
jo
stc
loope
clc
jmp
xchg
dec
and
pop
imul
inc
lods
dec
shrb
sbb
jno
js
push
bound
pusha
pop
sub
mov
or
mov
pop
push
xor
jecxz
and
and
cmp
xor
and
mov
sub
sbb
xchg
mov
mov
xchg
cs
in
fidivrl
adc
pushl
mov
and
out
daa
xor
dec
inc
mov
arpl
dec
lcall
cmpsl
mov
lret
insb
popl
push
push
addb
fstpt
mov
sbb
sbb
gs
or
lret
rcr
jg
shll
out
subl
add
popf
jne
hlt
scas
int
jl
mov
adc
lods
mov
mov
fisubs
mov
sub
or
lods
mov
popf
sbb
xchg
adc
sar
inc
addr16
cmc
aam
int
pop
mov
adc
push
jbe
ja
mov
jns
xor
or
add
clc
or
int
jmp
xchg
adc
push
push
push
inc
outsl
mov
pop
scas
loope
push
sub
or
jmp
xchg
cli
ret
sub
inc
mov
out
int
das
ror
shl
xor
push
xlat
mov
mov
popl
cmc
insb
mov
sbb
jmp
es
pop
and
add
mov
pop
in
imulb
mov
pop
icebp
negl
test
leave
pusha
fstpl
lea
mov
pushf
enter
insb
lea
les
addr16
fwait
aam
clc
cmpsl
cmpsl
in
jmp
dec
shrb
adc
les
push
loop
nop
add
sub
inc
pop
dec
je
test
mov
imul
lock
push
bound
mov
ret
jb
and
lret
or
aas
fadd
xor
sbb
push
jecxz
add
dec
push
mov
adc
data16
cmp
sbb
dec
int3
fdivs
lahf
xor
jae
flds
test
jge
js
pop
repz
sub
flds
pop
pushf
mov
adc
cmp
scas
out
aas
outsl
or
mov
pop
adc
arpl
push
xchg
push
ret
ds
shrb
popa
push
and
mov
cmp
outsl
pop
leave
gs
push
adc
dec
std
cmp
push
xlat
mov
jecxz
push
enter
das
xor
aam
in
push
pushw
add
popf
sub
shrb
dec
dec
popf
rcl
xchg
sbb
push
pop
sub
out
or
subl
leave
sub
sti
imul
sub
es
inc
sub
push
mov
jb
cs
cld
out
movsb
fldcw
push
adc
inc
mov
testl
and
mov
cmp
in
or
and
and
scas
ret
sub
and
scas
xor
pop
lea
int
mov
xchg
jbe
out
sbb
sbb
ja
mov
cmp
ret
fisubrs
xchg
in
inc
sub
movsl
jecxz
pusha
dec
notb
daa
cmpsl
popf
mov
dec
int3
fwait
cwtl
imul
stos
cmp
inc
popf
or
dec
xor
and
push
push
out
add
mov
stos
int3
cmpsl
inc
or
cmp
cmp
test
scas
adc
xchg
ret
out
or
xor
int3
mov
mov
idivb
mov
adc
daa
xchg
cmp
testl
cmp
pusha
mov
adc
xchg
es
add
imul
jbe
jb
test
sub
add
push
iret
test
jp
mov
loopne
push
jg
arpl
xor
stc
rcr
mov
mov
jmp
push
xor
pop
int
ds
movb
inc
loop
or
lock
and
or
cwtl
stos
fidivs
lods
pop
les
or
in
ja
dec
push
mov
dec
repnz
adc
sub
test
dec
push
xlat
jg
xlat
rcrb
popf
into
repnz
mov
adc
xor
mov
lret
mov
enter
jmp
inc
shll
mov
mov
xor
mov
lea
add
loopne
test
ficompl
std
pop
add
cmp
sti
jp
xchg
jae
repz
fiadds
pushf
in
fwait
dec
sub
push
pop
mov
movl
sub
adc
fistpl
pushf
xorl
and
movsb
and
in
mov
pop
pushf
jmp
repnz
pop
sub
mov
js
push
rclb
sbb
mov
outsb
test
adc
iret
repnz
lods
jns
loop
mov
data16
bound
pop
lcall
sbb
std
movb
mov
jp
jge
cltd
jmp
dec
or
rorl
rolb
or
cmp
int
mov
subl
and
adc
mov
sti
orb
jnp
ret
lret
sub
jo
jmp
sub
mov
and
adc
shrl
iret
jle
int
dec
lret
bndstx
mov
cmp
sbb
sub
sbb
loopne
popf
pop
xchg
push
fsubrl
pop
scas
xchg
add
lret
push
subl
into
mov
out
in
insb
ljmp
sbb
xchg
xor
xor
or
sub
mov
out
inc
cmp
sub
movsb
mov
dec
fdivrp
ret
cltd
enter
shrb
inc
or
push
outsb
dec
paddw
push
rorb
push
or
push
jo
psubusw
add
adcl
test
in
jne
dec
push
int3
add
inc
and
fs
lds
or
outsl
pop
mov
jo
sub
sbb
cltd
cwtl
arpl
je
dec
cmp
xchg
mov
adc
jne
mov
rorb
aad
cmp
mov
sub
xor
inc
add
in
xchg
inc
lods
dec
mov
mov
mov
fistpl
repz
mov
cltd
pop
mov
mov
cmp
mov
cmp
cmp
inc
mov
gs
icebp
xor
or
add
popa
out
dec
sub
stc
mov
shlb
ljmp
mov
xchg
fisubrl
lret
xchg
or
popf
push
fwait
add
fs
leave
mov
jns
adc
or
rol
or
cmp
cmp
sahf
jns
call
push
in
or
adc
dec
dec
jnp
call
xchg
fwait
ret
adc
shrb
cmp
inc
das
xorl
mov
and
loop
lcall
add
rcl
ret
mov
cld
mov
lea
scas
fcomps
jle
xchg
push
enter
mov
add
and
adc
inc
int
dec
lcall
arpl
ret
push
mov
lock
cmpsl
xchg
sbbl
lcall
cmpsb
adc
rcll
aam
sbb
push
mov
push
xor
dec
faddp
sti
or
rcr
cmc
inc
jge
sbb
add
or
icebp
loopne
idivl
xor
shrb
xchg
mov
mov
push
in
xor
xor
jae
sbb
sbb
rolb
iret
call
incb
inc
cmp
lret
xchg
frstor
mov
push
outsb
popa
pop
jb
scas
sbb
xor
jle
mov
push
add
ja
mov
sbb
iret
es
ret
cli
sbb
imul
push
inc
and
dec
aad
iret
adc
sub
adc
das
inc
test
sbb
stos
das
jp
pusha
sub
lahf
mov
add
pushf
push
jnp
jns
into
out
mov
adc
push
or
mov
std
sub
cmc
push
loopne
nop
dec
pop
dec
mov
mov
jmp
inc
sar
out
in
enter
aad
divb
pop
addps
mov
jne
or
xor
dec
outsl
int3
pop
sub
aad
ret
mov
dec
mov
and
ffreep
inc
movsl
sub
sub
lahf
int3
xor
push
mov
add
jno
dec
cs
or
jbe
xchg
jnp
jmp
mov
jae
iret
ret
shll
pusha
in
sti
ret
add
mov
xor
xchg
movsl
adc
ja
lods
dec
or
aas
jg
push
mov
fdivl
in
dec
cmp
jae
lcall
shrl
jns
pushf
sbb
mov
jne
jnp
cmc
inc
add
loope
popl
cmp
in
sub
push
in
stc
dec
pop
arpl
push
dec
mov
mov
xor
jg
or
das
arpl
repz
call
mov
xchg
aad
add
clc
outsl
ds
pop
adc
roll
pop
jbe
enter
arpl
fwait
leave
cmp
push
mov
mov
or
ret
jbe
rcrl
xor
dec
fst
dec
daa
rcrb
adc
jb
mov
xchg
xor
mov
inc
adc
jb
orl
xchg
push
mov
mov
sbb
aas
xor
lcall
xlat
ret
clc
mov
jmp
rcll
mov
push
dec
lods
icebp
xchg
add
stc
and
cmp
mov
xchg
and
pusha
repz
dec
outsb
iret
loope
stos
fildll
mov
push
pop
sbb
push
js
arpl
jle
outsl
jno
int3
inc
jno
dec
or
in
jb
mov
mov
jnp
repnz
or
xchg
pop
std
mov
fstps
push
adc
cmc
mov
xchg
xor
popa
loopne
pop
filds
outsl
lahf
loop
ds
mov
cmp
in
testb
int3
shll
pop
fs
mov
push
test
push
lret
adc
adc
in
divb
rclb
stc
pop
jns
push
data16
and
or
jno
mov
push
adc
push
stos
roll
in
pop
pushf
and
jecxz
push
ficoms
test
lock
lea
test
in
mov
int
aam
xlat
adc
adc
adc
adc
loopne
les
sbb
lock
cld
pop
jae
js
sarl
jo
inc
xor
int3
sub
cltd
fdiv
das
rolb
movsl
incl
mov
lahf
jge
push
sub
leave
sub
push
dec
cmp
or
mov
insl
mov
cmovbe
or
notb
clc
cwtl
fnstcw
test
or
sarb
out
jb
or
data16
outsl
fsubl
mov
jo
imul
stos
scas
lods
push
sbb
rorb
es
xchg
jno
cmp
outsb
pop
xchg
cmpsl
mov
lea
mov
sub
push
adc
rolb
mov
addr16
popf
push
lahf
sti
dec
push
movsl
cmpb
pop
or
nop
xor
push
call
inc
jbe
mov
fincstp
cmpsl
mov
jno
insb
mov
insl
jns
popa
or
xor
or
out
shlb
xchg
xor
roll
loop
mov
popa
enter
aam
pop
and
push
nop
mov
faddl
mov
pop
pushl
sbb
and
shl
xlat
and
sub
push
jecxz
xor
and
movsb
or
mov
mov
mov
cltd
ss
push
cmpsl
lock
dec
js
iret
lret
mov
sbb
push
xor
out
sahf
add
decl
jo
pop
out
icebp
in
xchg
xor
jnp
xchg
push
and
push
inc
cmp
sbbl
inc
jecxz
jmp
addr16
ret
mov
je
mov
pop
lock
cmp
mov
repnz
push
sub
cmp
mov
std
xor
cwtl
and
pop
dec
sbb
popf
sub
subb
mov
lods
nop
inc
push
mov
sub
stc
mov
pop
insl
push
xchg
mov
and
mov
mov
fstpl
sbb
adc
cmpsl
mov
push
imul
xchg
jge
mov
rclb
faddl
inc
and
daa
jl
lds
arpl
mov
loop
imul
ret
iret
inc
and
and
rorb
mov
test
imull
pop
imul
lret
xchg
mov
cmpsl
mov
mov
xchg
js
in
es
call
cli
addr16
dec
mov
pushf
xor
add
popa
pop
xor
std
pop
lods
dec
insb
push
mov
push
aad
sub
pop
shlb
push
enter
cwtl
mov
stc
test
jns
adc
inc
bound
enter
xchg
cltd
divl
and
dec
in
out
fsubl
inc
std
xor
icebp
xchg
lods
sub
jnp
dec
push
sbb
sub
cli
je
rclb
test
loope
sbb
sbb
test
pop
cmp
jb
imul
cmp
pop
sub
adc
shll
aam
ja
popa
mov
insl
call
cmpsl
xchg
les
pop
repz
xchg
adcb
out
mov
sub
daa
or
and
inc
roll
mov
addr16
mov
dec
shlb
aas
ljmp
inc
in
mov
fdivs
mov
cmc
jl
dec
xchg
sub
xchg
es
out
mov
fistpl
mov
xchg
and
aad
dec
adc
adcb
mov
push
xlat
adc
aam
mov
mov
push
fsts
push
add
cmpsb
lock
int
out
cmp
jmp
xor
jp
sub
ds
enter
lds
jno
daa
pushf
sub
inc
gs
pusha
cmpl
lahf
xchg
adc
push
sbb
mov
lea
or
xchg
loopne
mov
out
mov
xchg
decl
ret
divb
lret
fcoml
push
int
pop
out
fildl
lea
sbb
mov
mov
dec
sti
dec
add
outsl
popa
cld
int3
inc
loop
cmpsl
ret
sub
jecxz
fadds
cmp
push
daa
push
loopne
dec
inc
inc
mov
push
fstpl
adc
push
pop
lahf
mov
xor
les
jl
mov
pop
fxch
rep
inc
mov
or
rorb
mov
andl
sbb
out
dec
enter
call
or
out
ret
movsl
mov
fidivrl
aas
mov
popa
mov
mov
ss
stc
sbb
mov
xor
lcall
add
push
std
fildll
mov
push
xor
add
in
mov
mov
cmp
dec
push
ja
test
adc
mov
test
cmpxchg
mov
mov
adc
into
cwtl
loop
jecxz
sbb
leave
leave
repz
adc
mov
jb
mov
xlat
add
outsl
movsb
jmp
fnstsw
xor
lahf
pop
xchg
sahf
jb
push
out
pop
leave
std
xor
xchg
xor
test
movsl
xchg
mov
cld
test
fdivrs
adc
xor
leave
mov
int3
cs
ficoml
cmp
push
pop
icebp
lcall
sub
jae
js
icebp
inc
pop
pusha
nop
mov
insb
pop
clc
push
add
or
push
sahf
mov
mov
jne
decl
mov
cmp
adc
push
mov
push
andb
push
and
mov
mov
mov
clc
xchg
xor
mov
mov
repnz
adc
pop
repz
test
xchg
popf
cmpsb
fisttpl
jp
sbb
push
leave
push
xor
xchg
aam
loop
cmp
push
dec
mov
js
or
jnp
shlb
cmp
push
mov
cmp
adc
xchg
or
adc
and
loopne
test
bound
test
xor
and
lock
je
mov
mov
fidivrs
adc
or
sbbb
gs
adc
test
icebp
aam
mov
repz
xor
lds
in
mov
nop
mov
movsb
in
inc
loop
xchg
hlt
mov
mov
or
cmpl
fiaddl
fists
cmp
out
ror
out
push
repnz
xor
mov
push
stos
cmp
push
add
dec
cmp
mov
rcl
movsb
inc
iret
push
jno
mov
xchg
mov
pop
and
jp
stc
sbb
dec
stc
test
xor
imul
lea
daa
or
or
sub
das
cmp
mov
mov
xchg
xchg
insb
cld
sbb
mov
arpl
aaa
jecxz
jl
xchg
xchg
sbb
sbb
call
hlt
sub
mov
cmpsb
mov
push
pop
xchg
add
fdivrp
ret
xchg
lahf
shll
ret
dec
cmp
adc
xchg
xchg
pop
stc
xchg
in
int
imul
dec
pop
sub
jge
xorb
xchg
jl
pop
es
push
pop
inc
jmp
aaa
lea
imul
push
ds
repz
mov
bound
jmp
stos
adc
fcmovnbe
shll
cmc
in
imul
pusha
lods
imul
fmull
mov
and
int
pop
mov
cmp
stos
xlat
xchg
cmp
inc
pop
daa
hlt
cmp
push
adc
add
mov
xchg
dec
aam
dec
pop
jne
jno
int
sar
pop
mov
loopne
ret
and
sbb
adc
cmp
push
or
dec
jl
xchg
xchg
pcmpgtb
adc
jo
jl
mov
sub
xchg
push
lahf
call
push
f2xm1
jmp
xchg
scas
dec
gs
fs
roll
push
decl
divl
test
mov
dec
xchg
fnstcw
dec
cmpsb
and
jge
popf
cmpsb
movsl
or
addr16
mov
pop
fsub
cmp
pusha
mov
mov
or
xor
push
push
push
dec
xor
outsl
mov
jo
push
jmp
mul
gs
sub
nop
out
movsb
push
cmp
or
sub
ljmp
hlt
dec
int
int3
cld
xchg
add
jp
shll
dec
test
pop
in
pushf
sti
jns
xchg
aam
mov
xor
jo
add
shll
int3
sbb
popf
arpl
dec
rolb
xchg
push
jns
and
jne
orl
imul
das
rcrl
push
mov
aaa
in
xor
cltd
xchg
das
add
or
push
enter
add
jns
out
loop
scas
xor
dec
mov
pop
jno
sbb
aaa
xchg
mov
out
and
mov
jne
add
mov
pop
inc
popf
jnp
popa
cmp
loope
mov
imul
popf
sub
lea
out
xor
cmp
pop
cmpsb
push
xlat
mov
or
sbb
or
cs
xlat
mov
andb
es
dec
and
test
or
xchg
push
in
xorl
iret
test
push
daa
jo
add
and
mov
call
loopne
adc
mov
imul
sub
inc
cmpsb
cmp
dec
inc
mov
mov
lock
xchg
fldt
ds
ljmp
pushf
push
and
iret
xor
mov
cs
inc
cmpsl
test
mov
add
fistl
cmpsl
movsl
lea
mov
push
prefetch
lods
mov
add
sbb
arpl
dec
insb
in
cmpsl
test
inc
jne
pop
fnstenv
test
mov
lahf
dec
cmpsl
lret
inc
xor
je
pop
lret
cmp
mov
test
pop
incb
test
and
xchg
xchg
filds
cld
xor
movb
cmp
rcl
mov
xchg
call
pop
lret
sub
mov
into
push
int3
adc
inc
cmc
cmp
add
les
sub
lods
fwait
repz
add
push
mov
test
inc
adc
mov
test
cmp
ds
dec
test
clc
fwait
test
inc
stc
pop
in
into
xlat
out
mov
push
leave
mov
decl
add
sahf
imul
push
and
ja
addr16
jg
jb
jge
scas
mov
lret
imul
dec
sbb
stos
lret
mov
dec
mov
addl
es
in
mov
push
daa
icebp
lcall
and
loopne
jmp
int3
test
mov
adc
rcl
mov
scas
pop
xchg
inc
icebp
jle
sbb
push
mov
leave
pop
sbbl
and
jo
rclb
xor
mov
jge
enter
and
add
mov
scas
cwtl
inc
je
cltd
or
xchg
jnp
xchg
inc
add
cmp
bound
mov
mov
xchg
xor
mov
inc
les
push
pop
sarb
fnsave
push
loope
lods
arpl
fadds
push
mov
shll
loopne
test
dec
pop
jnp
push
ja
in
dec
arpl
clc
inc
stos
aas
inc
inc
jecxz
and
pop
xchg
int
pop
mov
test
or
arpl
mov
popf
inc
fcomi
and
mov
ds
mov
es
xchg
pop
mov
sub
mov
int3
in
enter
push
adc
inc
mov
mov
inc
push
nop
inc
inc
adc
cld
mov
and
in
icebp
push
pop
in
cmp
mov
shll
push
jecxz
cs
pop
mov
cltd
out
xchg
mov
jne
out
mov
add
test
push
adcb
push
inc
insl
push
cmp
pop
adc
fldl
popa
add
mov
in
cltd
in
fimuls
repz
and
popa
add
and
std
adc
push
jne
push
sub
adc
pushl
insl
push
pop
adc
imul
aam
mov
fnstsw
jecxz
js
xchg
into
lock
mov
sahf
cmp
ljmp
cwtl
xchg
cmp
mov
inc
and
dec
adc
scas
arpl
jl
xor
test
cwtl
push
scas
dec
xor
dec
jo
pop
fdivrp
inc
jge
push
mov
push
mov
xchg
push
adc
or
out
arpl
std
or
add
or
out
xlat
outsb
cmp
pop
int3
push
enter
inc
std
leave
jmp
mov
icebp
jle
push
and
loop
adc
or
fwait
out
and
ds
imul
es
push
popa
or
fistpl
push
jns
and
dec
jno
stos
push
adc
ds
icebp
iret
into
xor
fwait
dec
clc
test
adc
addr16
and
xor
lret
ja
dec
ljmp
add
les
dec
je
popa
sbb
mov
push
pushf
ss
push
in
xor
and
push
std
mov
lods
out
data16
cltd
inc
fmuls
add
les
std
mov
fs
add
int3
js
cmpsb
dec
and
inc
fldt
push
add
inc
mov
sub
dec
aaa
sub
or
cmp
rcll
jnp
loope
cli
cmp
test
xor
mov
push
int3
xlat
xchg
popf
ret
add
adc
jg
in
loope
mov
and
lock
xchg
push
inc
jb
sbb
inc
mulb
cmp
cwtl
in
mov
stc
sub
int
xor
or
jnp,pt
push
into
mov
dec
stc
mov
leave
das
mov
xor
and
dec
and
push
inc
repz
shr
dec
sbb
cmp
push
bound
jo
int
push
dec
shll
lods
dec
loope
adc
add
pop
test
xchg
imul
ror
aaa
shlb
sub
adc
lcall
cmpsb
sbb
cmc
push
dec
aam
cmp
mov
add
fiaddl
pop
jbe
jl
test
dec
xchg
cmp
out
pop
jns
sub
nop
xchg
stc
inc
jmp
adc
jg
sbbb
push
push
sbb
push
inc
push
sub
pop
mov
dec
dec
jle
dec
scas
fisubrl
inc
jo
adc
cltd
andl
sbb
push
xor
xor
cltd
pop
negb
jne
lea
mov
test
mov
aad
push
movsb
inc
cld
arpl
push
enter
sub
or
jno
push
icebp
adc
icebp
adc
mov
dec
imul
fdiv
adc
sti
movsb
mov
sub
fwait
in
roll
jge
jnp
scas
jnp
arpl
mov
mov
adc
add
mov
into
imul
pushf
dec
stos
sbb
jl
mov
ffreep
inc
mov
lea
mov
jne
ficomps
pop
inc
xchg
mov
mov
pop
mov
mov
int
icebp
pop
push
andb
mov
maskmovq
testl
push
xchg
adc
mov
arpl
dec
sbb
and
sar
sarb
cli
push
out
sbb
addr16
mov
sub
inc
jmp
popf
sub
std
cwtl
test
mov
pushf
jecxz
add
jo
cmp
push
call
enter
ret
and
cmp
sub
mov
jb
or
inc
dec
sub
cmp
gs
mov
daa
xchg
movsb
adc
lock
rolb
fwait
adcl
cmp
mov
jnp
adc
jnp
rol
call
jl
xchg
insl
subl
sbb
sar
cmp
pop
repz
cmp
popf
shufps
dec
or
and
dec
ret
push
cli
sbb
jl
shl
inc
xor
or
mov
sbb
and
test
leave
inc
pop
jg
outsl
fwait
xchg
sub
aam
ss
in
adcb
sub
ss
movsb
stos
orl
out
jecxz
and
inc
adc
jmp
mov
scas
cmp
rcl
pop
sbb
pop
lcall
ret
lods
cld
push
lea
cmp
jmp
outsl
sbb
cli
orb
jns
mov
xchg
xchg
mov
jb
mov
mov
push
int3
orl
mov
xlat
cwtl
popa
lods
push
pop
or
jo
imul
aas
icebp
es
call
ljmp
gs
int
pop
pop
xor
dec
or
data16
ljmp
and
rcl
scas
jmp
sbb
and
mov
adc
out
in
jl
mov
jle
jnp
add
out
in
jg
jne
push
pop
mov
cmp
icebp
mov
outsb
push
add
loop
fsts
inc
and
int3
sbb
repnz
adc
js
push
call
std
push
push
pop
mov
std
pop
mov
inc
out
mov
add
cmp
adc
pavgw
and
es
ficoml
sub
mov
adc
cmp
les
and
cmp
neg
pop
shl
xchg
iret
push
cs
es
ds
mov
inc
rorb
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
xlat
push
stc
inc
adc
addl
adc
pop
xchg
and
pop
aam
push
popa
idivb
jne
adc
paddd
loop
fsubp
jns
data16
int3
cmc
clc
imul
in
mov
repz
cmpsb
das
pop
repz
or
popf
lret
mov
notb
cs
push
std
sbb
push
xor
pop
push
jns
pop
mov
sbb
mov
testb
add
pop
out
es
loop
xor
sbb
adc
pop
rorb
dec
jl
sub
jb
cli
mov
sarl
dec
inc
push
cli
fildll
push
jge
je
add
xchg
add
das
xchg
into
icebp
std
loopne
sbb
scas
lea
or
movsb
loope
icebp
sti
fwait
ja
lods
insb
push
cmp
mov
js
push
dec
rclb
jnp
daa
adc
dec
jl
popl
cld
jge
xlat
cld
mov
adc
xor
push
mov
add
in
into
inc
flds
add
aaa
fwait
sbb
xor
addr16
in
pop
jnp
jo
js
xor
pop
mov
lods
mov
fidivl
lret
loopne
jns
push
rorl
sarl
lds
pop
flds
inc
dec
xor
movsl
xor
xor
jne
int3
test
inc
xchg
mov
lret
push
pop
xchg
loopne
xor
cli
shlb
dec
cwtl
dec
mov
push
mov
sbb
xchg
pop
dec
fstps
mov
lods
dec
xchg
bound
add
pusha
ja
mov
fimuls
andb
cli
mov
test
call
fnstcw
sub
insl
test
lret
jl
in
inc
and
popa
xchg
vcvtdq2ps
loopne
int
leave
mov
sub
rolb
pop
popa
sub
test
loope
sbb
pop
rcrb
jno
push
cmpsl
addr16
mov
les
adc
pop
mov
ljmp
jmp
adc
mov
hlt
dec
pop
movsb
ret
adcl
lock
mov
fidivrl
xchg
nop
jbe
sub
mov
dec
push
outsb
je
fsubs
jne
mov
test
lods
insb
jmp
or
out
pop
insl
movsb
fs
add
mov
gs
in
incb
mov
and
jge
lcall
mov
mov
fcmovne
mov
pop
inc
mov
sub
out
test
adc
mov
push
cmpsl
mov
lret
pusha
sub
test
ljmp
add
push
sbb
xor
sub
dec
mov
pop
push
cmp
js
cmpsb
ja
dec
and
insb
mov
shlb
inc
or
sbb
cs
fmull
mov
mov
fisttps
push
test
sub
insb
test
pop
push
mov
jp
pushl
lcall
xchg
dec
push
dec
fldt
gs
into
and
jle
mov
push
test
in
inc
pop
mov
mov
dec
sub
adc
sub
jbe
out
sarl
int3
mov
cmp
sub
in
xchg
je
sbb
pusha
ljmp
dec
jp
mov
pop
outsl
xchg
cli
loopne
and
cmp
xor
pop
mov
and
xor
out
dec
aaa
xlat
mov
lods
push
dec
cmp
add
stos
adc
inc
stos
lods
arpl
jae
xor
mov
cmp
pusha
stos
loopne
xor
xor
jae
shl
loopne
ja
es
sub
sub
dec
movsl
sar
cmpl
dec
and
sub
mov
repz
and
push
add
incl
std
jno
sub
pop
ja
shll
sahf
shl
repnz
adc
insb
push
xchg
mov
inc
cs
pop
jbe
jge
xor
stos
inc
insb
pop
fwait
test
das
xchg
and
cmp
sub
inc
inc
jle
int3
into
add
adc
add
jge
cwtl
xchg
mov
adc
dec
mov
inc
push
dec
push
scas
dec
pop
adc
and
je
inc
adcl
inc
jbe
outsl
das
adc
bound
fiadds
sbb
sbb
loopne
add
movsb
dec
in
stos
xor
pop
data16
add
popf
repz
stos
lret
lcall
sub
xor
daa
inc
andl
loope
iret
jnp
cwtl
pushf
fidivrl
out
popa
fs
jmp
mov
push
fdivrl
jb
inc
xorb
push
int3
add
cmp
xor
dec
or
lods
dec
sub
sbb
adc
dec
loopne
loop
pop
scas
repz
pushf
push
bnd
adc
pop
mov
sub
pop
icebp
in
sti
dec
push
pop
jmp
add
or
movsb
add
scas
fldcw
sbb
mov
in
scas
das
lds
pop
dec
lcall
loop
testb
pop
inc
cmp
push
in
add
pop
mov
mov
out
ss
loope,pn
xchg
mov
xor
xlat
mov
sub
mov
flds
mov
bnd
inc
es
xor
dec
movsb
femms
push
out
outsl
fbld
jg
sbb
pusha
sahf
inc
sub
xor
pop
lods
dec
lods
inc
into
jg
rcrb
ljmp
xchg
mov
test
sbb
add
sub
push
or
out
stc
mov
movsl
pop
fdivrs
mov
scas
xlat
mov
ret
push
cwtl
test
dec
movsl
movsl
and
adc
xor
cmpl
lret
mov
jne
mov
enter
mov
mov
xchg
and
mov
icebp
repnz
test
ja
data16
sub
or
out
dec
shlb
std
sbbl
fldlg2
sbb
repnz
push
push
xchg
out
jmp
out
inc
or
inc
pop
xorl
cld
mov
mov
xchg
xchg
fs
sub
inc
push
and
cmpsl
adc
mov
or
movl
mov
push
push
sub
jns
xchg
subb
xchg
cld
mov
adc
ret
insl
mov
shll
lock
movsb
fimuls
loopne
cmc
mov
sbb
pop
jo
clc
outsb
aaa
jb
sahf
cwtl
sub
sub
sbb
cmc
mov
adc
sarl
je
adc
jbe
std
sbb
fcomp
cmp
or
fdivr
scas
xor
cmp
popf
in
dec
cmp
add
and
push
ret
xchg
idivb
cmpb
loope
jmp
out
xor
mov
faddp
xor
sub
xchg
pop
testl
movsl
push
pop
mov
pop
dec
jg
rcrb
xor
pop
xor
mov
jae
lods
pop
mov
int3
mov
repnz
xor
adc
in
adc
mov
xlat
in
xor
adcb
cmpb
push
outsl
jg
jne
pop
or
loope
aad
mov
xchg
xor
arpl
add
js
je
add
sarb
sub
or
out
loope
stc
or
xchg
out
fisttpll
xchg
xor
jbe
inc
push
enter
flds
repz
xor
loop
cmp
dec
push
sti
fists
and
pop
das
clc
pop
cmp
cmp
xchg
xchg
scas
sti
push
aam
movsl
in
pop
dec
mov
sub
stos
xchg
outsl
sbb
cmp
mov
and
mov
xchg
cmp
sub
mov
mov
inc
shlb
iret
lahf
pop
xor
shrb
cmpsl
cwtl
mov
sbb
insl
jb
mov
out
mov
mov
cltd
inc
inc
push
mov
sbb
mov
int
add
sbb
mov
or
xchg
jae
sbbl
repnz
lcall
cld
cld
pop
cli
bound
jb
push
sub
bound
fmuls
pop
xor
test
jge
sti
lods
cli
xor
inc
in
in
movsl
mov
enter
lret
mov
aam
inc
js
or
pop
mov
mov
xor
inc
and
aad
fldl
jg
fs
sarb
int3
sbb
adc
roll
jae
ret
fstp
aam
ja
lock
idivl
icebp
adc
pop
pop
jne
lcall
mov
add
sbb
cmp
hlt
adc
cltd
mov
inc
clc
scas
or
push
inc
and
scas
xchg
and
sbb
inc
cs
test
adc
and
sbb
sbb
dec
into
dec
inc
jg
sub
adc
scas
jmp
mov
xor
adc
gs
inc
xor
mov
mov
ret
mov
sbb
adc
pusha
mov
repz
dec
sbb
jo
mov
cmp
add
sub
aam
xor
outsb
sbb
sti
xor
jb
xchg
inc
jb
scas
adc
pop
lock
out
mov
mov
jmp
addb
sbb
lcall
mov
sti
cmp
or
pop
inc
or
gs
stos
repz
fsts
loop,pn
add
mov
cmpsl
mov
push
mov
dec
jecxz
les
jb
pop
stos
inc
lret
mov
sub
cs
test
jns
cs
data16
int3
shlb
enter
jmp
data16
loope
adc
outsl
push
xchg
jae
orl
push
out
mov
enter
or
lret
inc
leave
add
cmp
jecxz
xorb
testl
dec
loope
jnp
xor
xor
lock
sbb
mov
or
cmp
add
hlt
jge
jb
xchg
lcall
outsl
pushf
fiaddl
add
cmp
inc
jns
fcoms
fs
popf
pop
dec
or
dec
xchg
mov
pop
push
mov
push
fstl
cld
pop
das
pushf
xlat
shlb
add
fsubrl
fstpl
cmp
pop
in
mov
adc
shlb
lret
and
vshufps
or
cmpsb
rorl
scas
scas
cwtl
add
pop
inc
mov
leave
out
scas
addr16
jmp
mov
adc
push
sbb
jge
mov
lcall
inc
fiadds
jbe
sub
sub
pop
in
aam
xchg
stos
std
adc
push
pop
jp
ss
aas
xchg
dec
jmp
fs
push
movsl
std
clc
fistps
inc
daa
sbb
inc
xchg
cmc
adc
sub
fldcw
xchg
bound
add
sbb
dec
add
call
adc
pop
fnsave
aam
or
pop
lret
popf
dec
inc
cwtl
adc
sbb
push
rorb
adc
aas
and
mov
xor
or
pop
sub
jecxz
lcall
sbb
or
insb
sbb
outsl
cwtl
scas
jge
or
fisubrl
shll
popf
andl
mov
and
out
xchg
add
shrb
or
adc
ljmp
in
call
stos
mov
adc
dec
sbb
mov
sti
mov
insl
lret
and
ss
sub
cmpsl
or
push
mov
cmpsb
movsb
cmpsb
pusha
jge
or
in
aas
scas
jns
jg
and
jecxz
sbb
sub
loope
add
xor
test
ljmp
call
sarb
addb
push
xor
mov
movsb
sbb
daa
cmp
add
pop
push
movsb
adc
pop
mov
cmp
adc
pop
push
repz
leave
test
pop
cmp
loop
adc
mov
into
lock
mov
stos
dec
in
shrb
outsb
inc
stc
out
lds
fidivrl
push
pop
mov
dec
jg
icebp
pop
bswap
stos
test
lods
addr16
jae
push
mov
imul
pop
cmp
xchg
inc
fldl
mov
daa
pop
jl
call
inc
lea
arpl
cmp
mov
sahf
add
dec
mov
jle
nop
xchg
outsl
inc
pop
mov
pop
rorb
clc
xchg
dec
mov
dec
out
popf
inc
fcoml
xlat
mov
pop
add
or
push
icebp
pop
mov
push
xchg
pushf
jo
or
push
sbb
testl
es
cmpsb
imul
insb
daa
and
pop
pusha
jl
lods
mov
mov
das
push
in
jbe
icebp
xchg
push
lds
call
cmp
fs
ret
outsl
adc
jbe
adc
rcr
add
jle
mov
shrl
or
icebp
add
add
ret
scas
or
js
xchg
loope
rclb
ss
lods
and
stos
mov
rorl
cmp
out
mov
xchg
pushf
mov
out
insb
ds
mov
ljmp
mov
add
roll
mov
push
sbb
push
sahf
sti
cld
imul
xchg
inc
int3
mov
lcall
insl
xor
addr16
arpl
mulb
ss
repnz
stos
popa
mov
inc
out
stos
jecxz
enter
cmc
mov
movsb
jl
push
push
popa
cmpsb
inc
imul
add
ret
adc
lret
lock
aad
pop
sub
jge
jne
cmpsb
adc
das
cmp
sub
scas
mov
inc
cmpsb
mov
lds
xorb
movsb
add
sub
jecxz
add
scas
cld
jge
int
push
pop
inc
enter
shll
inc
mov
mov
xor
loope
fwait
pushf
inc
lret
inc
push
popf
insb
je
cmp
xchg
add
inc
mov
mov
test
movsb
pop
mov
adc
xchg
int
xor
xchg
jmp
or
movl
out
dec
subl
mov
call
sti
mulb
or
cli
mov
jns
cs
ds
add
jns
xchg
out
push
cmp
inc
mov
adc
int
arpl
and
jne
sbb
stc
lock
dec
and
pop
cld
loopne
lods
cmp
and
jp
mov
cli
xor
dec
or
xchg
stc
adc
scas
andl
jbe
xor
stc
in
mov
xlat
pop
or
xchg
repz
jns
jmp
fisttps
sub
mov
sub
aaa
or
mov
addr16
mov
jl
adc
aad
mov
fwait
sub
loop
fldl
push
imul
add
push
cmp
test
push
dec
cmpsb
mov
js
fs
mov
dec
jne
mov
xchg
push
jle
insb
arpl
mov
push
icebp
das
xor
xchg
dec
mov
lods
adc
jp
or
jecxz
add
daa
das
dec
sbb
pop
jno
mov
mov
xchg
out
outsl
rol
mov
adc
lods
mov
jl
in
clc
sbbl
popa
cltd
in
ret
stos
adc
mov
push
xlat
ret
cmc
addb
outsb
adc
into
mov
pop
jo
jbe
xchg
push
sahf
pop
inc
out
lcall
or
fisubrl
push
mov
lock
out
sbb
es
mov
bound
cmp
imul
lods
aaa
push
int3
test
shl
cmpsb
clc
mov
iret
mov
vshufps
pop
out
insb
sub
call
test
mov
pop
pop
adc
pop
adc
and
ja
dec
mov
inc
aaa
imul
xor
cmpsb
jnp
pop
add
mov
jo
add
add
dec
aad
repnz
iret
mov
jg
jmp
iret
sbb
int3
fisttpl
or
and
sbb
icebp
pop
and
xchg
cmp
imul
cld
sub
or
ds
jb
pop
lea
jbe
fstpl
pop
fadd
cmp
loope
je
jbe
in
xor
jle
fwait
adc
inc
sub
mov
test
jno
inc
or
fidivrl
push
add
mov
jb
aam
fisttpl
call
jns
dec
mov
lret
jmp
add
cmp
nop
xor
and
dec
pop
cmp
imul
push
das
loope
fs
xor
sbb
sub
xor
out
or
stc
sbb
dec
push
aam
mov
ljmp
xchg
int3
pushf
cltd
fidivs
out
dec
adc
aaa
stc
xor
sarl
mov
mov
cmp
cmp
sub
sub
pop
enter
mov
jae
xchg
push
dec
adcl
je
cmpsl
and
adc
push
xchg
and
lcall
push
xchg
js
jnp
sbb
pop
int3
fsubrs
jo
pavgw
xchg
ret
popf
leave
sbb
mov
mov
test
xchg
movsb
orb
jp
adc
xlat
arpl
push
mull
lods
add
scas
and
lahf
js
adc
dec
cmpb
sarl
adc
fsub
sub
or
int3
or
sti
pop
sbb
test
mov
ret
dec
jno
call
sub
push
loope
push
clc
xor
jno
push
push
stos
jg
mov
daa
aas
add
in
out
jl
and
add
shrl
inc
add
mov
mov
pop
je
mov
jmp
fstpl
cwtl
pop
push
or
or
mov
ficompl
jg
jno
gs
add
mov
xor
data16
dec
xor
movsl
lods
in
les
cmpsb
clc
fs
push
je
add
stos
jmp
subps
mov
sub
std
adc
xor
fisubrl
mov
cmp
das
adc
movsb
mov
jp
inc
mov
add
out
inc
jp
inc
add
repnz
iret
lret
adc
mov
add
mov
test
icebp
out
and
push
xchg
cmp
jecxz
scas
dec
or
pop
into
xsavec
call
arpl
pusha
ret
popa
mov
leave
fadds
lahf
xor
adc
cwtl
cmp
fsubrl
cmpsl
mov
adc
cmp
mov
cmp
idivb
mov
stc
jb
cmc
addr16
adc
fnstcw
out
add
jne
mov
mov
inc
test
out
sbb
test
sti
xor
xchg
sbb
cli
fnstsw
sbb
xchg
or
cwtl
scas
or
sub
mov
cmp
test
imul
cmp
mov
push
jmp
add
ds
lods
adc
les
cmp
vphaddubq
and
aas
addr16
lret
sti
add
icebp
icebp
lods
je
cmp
xchg
sub
sub
xor
add
mov
mov
dec
out
jo
popa
dec
xor
cltd
movsb
mov
push
mov
jle
xchg
std
icebp
lret
mov
stc
xchg
jle
fadds
mov
push
ja
nop
mov
test
mov
push
sbb
je
xchg
or
clc
insl
xchg
addr16
ret
insl
jg
arpl
lds
ret
cmp
pop
cld
jmp
and
jo
lret
fs
or
out
sbb
jg
add
pop
mov
rclb
cmc
xor
jle
inc
andb
lahf
xor
bound
lods
hlt
ss
jnp
mov
rcrl
mov
add
dec
and
sbbb
popf
in
jb
xchg
and
stc
inc
data16
lcall
imul
adc
pop
fiaddl
into
push
sbb
hlt
jg
ret
imul
daa
mov
sbb
rcl
pop
dec
sbb
fdivs
rol
fbstp
and
jmp
shll
imulb
test
dec
jae
pop
call
jae
xor
xor
cmpl
into
sbb
mov
or
pop
mov
enter
or
sbb
cs
pop
fisubrl
mov
mov
lds
call
sbbb
in
inc
sti
mov
scas
jno
and
xchg
enter
pushf
fwait
xchg
clc
andb
lods
fsubl
or
or
adc
nop
insb
ficompl
mov
cmp
jne
pop
xchg
xchg
rcr
mov
nop
xchg
sub
int
mov
scas
xor
fs
mov
push
xlat
int
push
and
call
xor
out
inc
loop
std
push
ss
mov
cmp
push
clc
push
in
out
sub
jb
push
inc
sub
add
inc
jge
pop
cli
mov
push
repz
repnz
pop
movsl
or
jecxz
lods
xchg
pushf
add
es
sub
shrl
and
or
and
sbbl
ds
inc
cli
loope
fisubrs
jae
lds
pop
frstor
loopne
cli
stos
jno
adc
add
insb
fwait
push
add
insl
cmp
in
repz
add
push
jno
int
add
mov
cmp
nop
xor
dec
xchg
out
mov
cmpl
jg
or
dec
ret
or
stos
cmp
pop
inc
jp
cmp
test
sbb
inc
jae
nop
ret
cmpsl
mov
sub
inc
pusha
mov
rcl
divb
pop
jbe
pop
out
sub
cmp
in
push
push
repz
scas
sub
shufps
cld
fs
adc
mov
fs
xchg
sbb
or
push
xchg
ljmp
xor
push
int3
inc
pop
movsb
adc
xchg
in
push
mov
or
mov
sbb
das
mov
cltd
pushf
add
push
ror
jno
push
inc
cli
mov
insb
mov
cwtl
sub
test
cmp
sub
movsb
fiadds
inc
inc
mov
jecxz
xchg
dec
mov
scas
add
icebp
jmp
cmp
shrb
loop
sbb
loopne
imull
in
add
cltd
cld
xchg
daa
into
sbb
jo
lds
pop
repz
sbb
sti
adc
cmp
in
mov
out
lock
mov
jge
or
pop
frndint
sysenter
icebp
jle
push
mov
add
adc
or
pop
scas
pop
mov
pop
or
movsl
ret
push
push
repz
cwtl
in
pop
lahf
and
lods
mov
push
jnp
xchg
pop
rsm
and
test
inc
int
pop
add
jp
sarl
pop
pop
stc
lahf
rolw
mov
mov
mov
loope
dec
std
pop
sbb
xchg
jne
sbb
dec
push
mov
nop
xor
mov
mov
aaa
or
xor
std
mov
loope
test
push
push
aas
mov
cwtl
aas
jp
rol
rorl
fidivs
jl
mov
sub
outsb
push
test
mov
mov
int3
dec
sarb
add
add
pushf
stc
dec
shll
mov
mov
lods
push
inc
sub
scas
xchg
inc
inc
fimuls
jae,pn
inc
mov
shr
out
movsl
cld
clc
stc
jno
adc
cmp
into
lods
shll
jp
jp
cmc
leave
movsl
push
aas
and
dec
stos
xor
jbe
mov
push
pusha
fcmovb
insb
inc
idivb
and
jge
enter
aam
sub
fldenv
pop
adc
adc
inc
scas
mov
lock
fdivrs
je
mov
hlt
push
xchg
mov
imul
sti
xor
adc
test
clc
sbb
js
push
sarb
addr16
dec
dec
inc
push
sub
sbb
ljmp
mov
rcr
insl
xchg
movsl
cld
cmc
jnp
sub
xchg
xchg
mov
jg
mov
jmp
push
pop
sbb
sbb
out
sub
jb
es
rcrl
in
lock
int3
ret
test
dec
mov
cmp
mov
int
xchg
dec
jl
sbb
cmp
push
and
arpl
test
xor
ret
dec
adc
sub
mov
lret
in
movsl
sub
testl
xchg
mov
sahf
cmp
adc
xchg
cmc
scas
test
mov
adc
shll
xor
xchg
push
fdivl
adc
lea
xchg
test
cs
mov
inc
loope
out
iret
or
mov
push
dec
push
cwtl
sahf
sbbl
push
dec
dec
cmpsl
mov
adc
jnp
inc
xor
stos
sub
jmp
or
fwait
inc
int
cmp
jnp
dec
pusha
cld
xchg
push
cmp
push
dec
je
xor
shrl
rcrl
test
push
cmp
out
stc
es
mov
sub
and
mov
loope
in
inc
jg
test
fnstsw
in
mov
fs
mov
and
mov
mov
pop
cs
popf
push
sub
add
jl
and
ss
cmp
out
adc
mov
loope
ret
movsl
dec
mov
daa
jmp
sub
jnp
cmp
ret
and
add
into
add
popa
cmp
fnstsw
push
xchg
loop
bound
pop
loop
mov
or
ret
in
xchg
jbe
fnsave
jno
lret
into
push
inc
inc
dec
fimull
pop
rcrl
in
out
push
jmp
mov
add
xchg
pop
mov
aam
mov
out
pop
jl
add
jp
sarl
shll
mov
inc
xchg
add
mov
aad
js
mov
loop
in
cmpsl
add
lock
hlt
test
pop
xor
inc
sbb
adc
stos
movb
cmp
lods
scas
lret
jno
fcomps
mov
stos
jp
mov
adc
mov
ret
and
cmpsb
dec
and
popa
test
inc
sub
jo
xchg
mov
data16
sbb
loop
xchg
rcrl
or
adc
mov
jb
aaa
mov
pop
mov
mov
inc
ficoms
aam
pushf
sbb
ja
inc
addr16
xchg
adc
fidivl
jno
dec
adc
mov
mov
test
sub
mov
loopne
dec
sbb
xor
and
sti
sbb
inc
mov
push
popf
inc
rolb
andl
fwait
lea
cs
ret
fildl
add
inc
xchg
test
ficoms
xchg
inc
xorb
cmp
xchg
inc
or
mov
data16
push
add
mov
push
pop
or
and
icebp
cmpsb
pop
out
sub
pop
enter
adc
jecxz
sub
mov
cmp
sbb
push
jp
mov
jge
pushf
repnz
lcall
fsts
pop
and
stc
cmp
mov
int3
push
pop
test
xchg
gs
and
aam
inc
cmp
cltd
fsts
shrb
fldln2
loopne
hlt
fbld
lea
xor
mov
mov
add
dec
loopne
inc
mov
repnz
std
out
test
dec
mov
and
daa
gs
pop
xchg
mov
mov
jge
lcall
hlt
les
frstor
test
loop
mov
popa
mov
jbe
xor
and
jl
dec
dec
lds
scas
and
mov
test
lahf
add
loope
xor
mov
or
mulb
outsb
mov
ret
inc
or
out
rclb
movsl
fildll
lret
in
push
xor
cmp
adc
insl
inc
and
rclb
lret
div
sbb
xchg
or
shrb
in
push
jne
aam
pop
in
in
js
pop
mov
aaa
xchg
or
gs
jno
rclb
std
rorl
push
adc
mov
add
addr16
in
cmp
inc
jae
insl
add
push
dec
dec
lret
mov
and
push
mov
mov
call
jle
jae
mov
stos
adc
inc
daa
xor
insl
and
je
nop
repz
loopne
sbb
or
and
in
gs
ljmp
push
stos
aad
pop
push
loop
jno
sbb
lret
mov
scas
inc
mov
mov
and
stos
andl
aaa
jo
inc
int3
xchg
mov
lea
int3
out
lea
sbb
repz
ss
popa
dec
lea
fwait
outsb
repnz
mov
and
push
sub
xchg
lock
or
ret
das
push
ret
xorb
mov
lahf
dec
fwait
cli
js
in
rorl
push
sbb
xchg
push
push
dec
xchg
push
push
insl
js
scas
and
xchg
aas
mov
fsubrl
ja
into
mov
sub
nop
mov
dec
xor
cmp
jp
dec
or
nop
stos
in
daa
mov
ljmp
test
popa
xchg
stos
dec
fstpl
jno
jg
out
jbe
cltd
jecxz
lods
lea
les
cmp
movsb
sbb
fistl
pop
jge
xchg
push
pop
sub
cs
jo
adc
test
call
push
xchg
std
inc
test
adc
xchg
ret
sbb
movsl
mov
movsb
fstpt
outsl
pushw
mov
mov
push
push
jb
push
add
loope
sbb
lea
cmp
pop
stos
ds
popa
sti
adc
enter
xchg
pop
adc
scas
inc
pushf
sub
pop
inc
xor
daa
push
cmp
push
mov
sbb
test
ljmp
mov
js
inc
inc
cli
das
fs
mov
cmp
mov
or
sahf
push
cli
shrb
ret
push
sar
cld
int
fsts
and
aaa
jl
sbb
subl
adc
push
inc
sbb
mov
pop
mov
fcoml
dec
jge
xchg
in
inc
lret
test
pop
rcll
jecxz
dec
fmuls
push
push
pop
int
cs
hlt
lcall
int3
scas
cmpxchg
data16
filds
addr16
fs
stc
xchg
cwtl
aaa
paddw
out
dec
pop
cmpb
xchg
jl
fnstenv
xchg
adc
cmp
mov
jne
cmpsl
add
pushf
mov
mov
imul
inc
arpl
sbb
loop
sub
lret
and
inc
mov
dec
arpl
cld
pop
sub
insb
jne
push
and
cmp
outsl
bound
mov
xchg
iret
outsb
or
push
shr
or
add
lods
mov
insl
push
push
js
adc
leave
jnp
or
push
mov
ror
push
xchg
repnz
xor
mov
xchg
push
sbb
insb
nop
jmp
ljmp
adc
popf
aaa
mov
adc
pusha
push
jne
push
jne
or
pushf
fstpl
pusha
rorb
push
cli
jb
rcrb
sar
jmp
sbb
dec
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
adc
addl
dec
iret
xchg
inc
and
push
mov
test
popf
push
mov
lods
pop
cld
jmp
mov
mov
mov
mov
stos
xor
sub
jp
leave
xlat
sub
mov
idivb
movsl
mov
mov
xchg
sarl
lcall
ja
and
and
dec
push
clc
test
mov
popa
mov
daa
rcl
pop
push
jl
push
lret
jno
pop
cmp
mov
xchg
dec
pop
movsb
lcall
mov
push
rorb
jmp
sbb
adc
rclb
mov
popf
sbb
add
lods
outsb
nop
mov
mov
shrl
sub
push
insl
lock
mov
cmp
outsb
in
icebp
nop
jmp
cmp
enter
mov
leave
nop
cli
lcall
sub
and
xor
ja
sbb
out
jg
jo
xlat
mov
movsl
loop
jae
repz
xchg
pushf
push
xchg
jo
sub
or
sub
or
fld1
jp
outsb
es
arpl
mov
jl
fstpt
inc
sbb
clc
mov
pop
jge
jnp
mov
jp
cmp
push
cmp
pop
add
cmp
je
ljmp
fstl
jl
ret
in
insl
mov
mov
inc
pop
mov
ror
sub
js
mov
fistl
sti
mov
pushf
mov
outsb
arpl
bound
sub
jg
mov
addb
ret
cld
stos
cmp
arpl
dec
in
xor
inc
aas
lret
adc
dec
push
lahf
int3
xchg
fldt
jne
or
dec
dec
cmpl
pop
out
in
or
inc
push
mov
cmp
mov
mov
adc
repz
inc
xchg
insb
dec
push
inc
cmp
in
mov
cmp
out
push
dec
loope
int
out
adc
mov
add
aaa
and
xchg
mov
jb
mov
in
dec
mov
xchg
sbb
lods
xchg
movsl
lods
jl
ljmp
lret
out
hlt
shlb
inc
add
fmuls
ljmp
xchg
int3
adc
cltd
scas
data16
pusha
fwait
cli
jmp
adc
xor
sub
dec
movsb
ja
fcmovnbe
xchg
sahf
adc
xor
jns
adc
cwtl
xor
xor
test
xchg
mov
out
add
inc
mov
push
adcl
movsl
pop
or
call
sub
or
or
fucomp
mov
outsl
adc
pop
movsl
cwtl
cs
test
add
jge
in
pop
mov
in
adc
in
test
movsb
dec
aas
sahf
stos
out
stos
leave
adc
test
cwtl
arpl
fisubl
xorl
jle
pop
mulb
popa
aam
cltd
add
sti
sbb
jmp
mov
inc
pop
mov
fists
jge
mov
rcrb
add
mov
popa
das
repnz
sbb
sub
dec
je
inc
lods
cld
jo
mov
cwtl
mov
push
sub
mov
jbe
orb
jmp
mov
fsubrs
lods
mov
scas
adc
mov
xor
and
ds
enter
push
inc
fstl
into
sub
dec
rorb
mov
into
jno
and
mov
sub
popf
jmp
mov
loope
add
mov
frstor
pshufw
outsb
scas
jae
mov
dec
sbb
mov
clc
add
pop
imul
dec
mov
cmp
push
out
mov
ror
leave
insb
dec
das
pop
inc
insb
jl
dec
insl
inc
aam
jp
or
mov
je
sub
loope
rclb
call
and
lahf
sub
shlb
sbb
mov
xchg
cmp
cmc
pop
xchg
iret
inc
push
jne
add
and
shr
mov
mov
sahf
repnz
popa
ror
jae
fwait
mov
imul
sbbb
in
sub
sbb
xchg
in
in
inc
mov
adc
popf
or
negb
sbb
mov
jp
enter
adc
or
inc
mov
sarb
sub
fs
pop
fimull
mov
xchg
cmp
cmpsb
cltd
dec
or
into
lods
ret
repz
imul
xchg
inc
jmp
loope
push
sbb
movsb
ds
push
iret
sarb
stc
inc
sarl
dec
cs
mov
inc
and
xor
mov
fnsave
sbb
mov
sub
hlt
push
das
call
and
xor
lods
pop
loop
mov
mov
clc
loop
mov
cmpsb
mov
fidivs
cmp
pop
dec
test
xor
jae
das
ret
jb
lds
and
xlat
sarl
push
xor
out
fsubrl
or
bound
push
movsb
pop
xchg
repz
cmc
dec
jae
mov
fstpt
js
mov
mov
sbb
into
xor
jo
sbb
mov
es
adc
mov
std
lret
out
sub
add
xchg
push
scas
jae
push
cmp
aam
mov
fsts
cmp
ds
jb
sub
mov
aam
test
pop
dec
pusha
dec
jb
sbb
pop
imul
cmpsl
mov
test
movsb
xchg
fs
inc
hlt
mov
jae
loop
pop
movsl
pop
lods
inc
pop
push
lcall
test
in
fcomps
out
out
jmp
movsl
fistpl
addr16
xor
pop
shll
mov
jae,pt
daa
mov
inc
cld
sti
pop
call
jge
dec
das
ficompl
rcrb
and
cmpsl
int3
push
xor
add
xor
sub
push
pop
fidivrl
out
or
mov
fsub
cwtl
inc
in
adc
or
xlat
or
shll
cli
fdivrs
insb
scas
dec
imul
pop
xor
jno
pop
notl
nop
dec
mov
aaa
in
add
xor
adc
rclb
jbe
cltd
lahf
lds
in
mov
jae
rcl
mov
js
repnz
mov
jno
pop
stos
push
addr16
dec
dec
sbb
xorb
je
dec
ja
xchg
and
jnp
pop
and
mov
ss
add
xchg
add
push
sbb
dec
aad
cmpsb
pop
xor
popa
cmp
aam
xchg
fisttpl
xorl
sahf
sbb
and
push
mov
es
mov
imul
xor
and
mov
imull
jbe
mov
jp
mov
add
jp
dec
mov
xchg
outsb
or
cmpb
insl
push
inc
popf
sub
xchg
stos
aad
mov
mov
adc
xor
in
and
pop
mov
push
test
push
repnz
sets
xchg
test
sahf
pop
mov
rol
into
js
push
add
in
dec
inc
aad
adc
push
lcall
sbb
jmp
mov
sbb
aad
sub
cmp
popf
pop
cltd
xor
push
cs
ljmp
sub
pop
adc
jle
jnp
xchg
stc
mov
cmp
mov
add
xchg
jmp
ljmp
or
mov
sub
scas
sub
or
add
mov
imul
cmp
xor
rdmsr
js
cmp
mov
push
add
mov
cmpsb
rcrb
adc
mov
cwtl
cmc
xchg
jge
and
cmpsb
inc
jp
or
mov
cmp
lea
nop
inc
mov
sub
outsb
cmp
cmp
fstpt
in
cmpsl
rcrb
inc
loope
rcrl
xor
pop
add
out
or
mov
int
lock
adc
dec
pop
in
add
sub
mov
lds
int
in
jb
inc
adc
aad
and
fadds
xchg
int
bound
adc
or
dec
clc
je
stos
movsl
push
ljmp
lcall
xor
lret
mov
push
cmp
mov
cltd
popa
ljmp
jbe
dec
inc
cltd
mov
call
cmpb
int3
adc
bound
jo
outsl
sbb
cwtl
fstl
mov
pop
mov
and
aad
inc
aad
mov
xlat
adc
mov
adc
sar
daa
fstl
pop
pop
and
push
inc
push
inc
arpl
xor
lret
lcall
mov
xor
adc
sbb
sbb
cmc
inc
mov
loop
inc
lock
fistpll
mov
adc
mov
push
or
or
imul
adc
and
sbb
inc
sbb
sti
inc
push
sub
jbe
add
js
push
push
sti
cmp
mov
int
testb
pop
push
dec
sub
xor
push
mov
mov
sbb
popf
xchg
add
xor
bound
xchg
sub
movl
je
pop
inc
inc
out
sbb
add
dec
inc
jg
lods
iret
in
and
inc
xor
shll
into
cld
int3
fisubl
jmp
mov
test
pushf
aas
into
test
xor
sbb
push
dec
xchg
pop
js
fsubrl
lods
and
xchg
push
jae
mov
push
out
mov
aaa
xlat
or
out
call
out
adc
add
mov
push
shrb
aam
xchg
push
pushf
sbb
imul
jmp
jg
dec
in
sbb
push
cld
cmp
lahf
jnp
daa
addr16
xchg
dec
ds
cmp
test
inc
ss
push
lret
mov
pop
cmp
mov
cmp
push
or
jo
int
jp
dec
mov
xchg
outsl
pushf
sarl
cmp
rcll
in
test
jecxz
lret
cli
fldenv
push
cmp
dec
push
std
lods
or
add
push
stos
dec
leave
push
lahf
sub
xor
clc
xor
notb
or
adc
xor
cmp
mov
fstps
or
add
jg
jmp
test
movsl
add
mov
mov
xchg
pop
push
jb
inc
icebp
mov
adc
mov
xlat
inc
in
cmp
mov
mov
push
lret
add
pop
and
mov
xor
std
sbb
daa
inc
jnp
lock
xor
daa
lea
inc
xchg
xchg
xor
and
xor
mov
pop
insb
mov
and
push
xchg
sbb
flds
aaa
inc
neg
or
inc
scas
decl
imulb
sub
pop
pop
ret
and
scas
jbe
or
or
stc
int3
mov
pushf
sub
lea
fdivl
ret
aaa
cmp
std
pop
xor
fcom
jb
cli
mov
dec
sub
and
je
ja
mov
mov
sbb
test
fadds
mov
push
mov
cltd
scas
and
mov
push
dec
orb
push
lret
lock
loop
xor
xchg
fnstenv
call
xchg
dec
je
mov
cltd
and
add
and
adc
arpl
or
adc
mov
jl
dec
leave
pop
ret
dec
push
sar
adc
adc
dec
call
xchg
sbb
movsb
sub
loop
popf
loope
iret
out
into
mov
js
stos
xor
xlat
cs
xchg
fcomps
cs
sar
cmpsb
ljmp
xlat
xchg
add
stos
dec
push
xor
mov
test
dec
out
aad
data16
cmp
cmp
or
push
ss
sub
lods
pop
mov
das
clc
pop
jno
sub
in
stos
addr16
jno
push
sub
icebp
icebp
adc
outsb
lret
js
jb
jns
lock
les
sub
add
imul
jp
sub
cmp
mov
fcomi
jp
xor
ret
je
push
xor
bound
pushl
iret
adc
push
dec
sub
xor
inc
popa
movsb
sub
enter
push
or
push
fcmove
popf
lret
add
and
repnz
lea
hlt
mov
jecxz
or
xor
ljmp
mov
sbb
mov
pop
out
popf
xchg
lods
jae
sahf
push
outsl
repnz
sbb
arpl
mov
bound
mov
in
xor
push
cmp
test
repnz
repz
subl
pop
lcall
outsb
inc
pop
dec
push
xchg
sbb
aad
mov
fucomi
call
dec
leave
or
stos
and
add
test
int
ljmp
test
add
xchg
inc
jge
lods
popa
or
push
inc
xor
push
mov
add
mov
addr16
jmp
ss
shrl
aam
or
div
push
ret
mov
jge
pop
outsb
dec
aas
sub
cmp
in
leave
lahf
lock
and
jno
insl
lcall
arpl
dec
and
xchg
sbb
pop
cmpsb
add
jno
pop
pusha
fldlg2
mov
dec
movb
and
cli
lret
test
xchg
sbb
sub
cmpsb
push
stos
ret
jns
dec
lahf
sub
push
adc
mov
jae
pop
lea
cltd
xchg
mov
test
out
mov
mov
jle
out
push
cmpsl
imul
mov
dec
in
xor
jg
sub
push
xchg
push
imul
lret
mov
inc
or
or
gs
mov
test
push
stc
lahf
push
insl
jbe
inc
or
cmp
mov
les
pmuludq
jge
sarb
data16
into
stc
movsl
lcall
sub
mov
ljmp
frstor
fst
out
dec
icebp
jl
subb
fisttpl
sbb
cs
sub
adc
adc
sahf
test
xor
or
xor
popf
jbe
fldl
sbb
shlb
xor
mov
into
fdivl
mov
sbb
mov
jno
jnp
outsb
sbb
fs
daa
add
sub
aam
or
inc
dec
dec
push
xchg
lods
loopne
sbb
cmc
jle
nop
adc
lods
fstpt
pop
shrl
das
adc
mov
fcmovnu
mov
cmp
cmp
mov
cmp
clc
out
aam
jae
or
cmp
repnz
jo
ljmp
mov
inc
rcl
cmp
mov
adc
lock
and
pop
lea
js
test
fiaddl
mov
fisttps
push
fildl
mov
push
push
lods
sub
or
fs
stos
xchg
cmp
xor
in
leave
dec
in
loop
mov
dec
outsl
or
mov
scas
and
mov
enter
movsl
pop
pusha
inc
mov
xchg
inc
pop
inc
mov
add
ret
ficomps
pop
add
outsl
dec
test
vpaddsb
sub
aad
inc
mov
test
pop
fisttpll
jecxz
xchg
xor
aam
adc
rcrl
xchg
pop
mov
sbb
pop
movsl
mov
in
xor
out
cmp
xchg
jae
inc
je
adc
daa
stos
add
add
test
cmp
call
jns
cltd
scas
mov
jecxz
into
ss
ret
sbb
dec
pop
nop
mov
lret
adc
cwtl
ret
stos
rcrl
add
jbe
cs
sbb
xor
dec
lods
and
xor
cmpsl
dec
repnz
jo
hlt
ret
mov
jns
inc
mov
mov
or
movsb
add
clc
push
leave
iret
cmp
xchg
lahf
and
sub
or
enter
xor
lea
arpl
dec
adc
pmulhw
cmp
push
mov
adc
jge
enter
add
aas
mov
pop
scas
push
lods
mov
sarb
insl
pusha
jmp
jno
imul
lds
aad
sarl
fdivl
test
inc
xor
out
fsubr
inc
lock
std
sbb
addr16
pop
in
fistps
push
inc
lahf
push
sbb
xchg
call
fs
dec
add
jmp
sub
sbb
ljmp
aaa
cs
dec
fsubl
inc
add
iret
fsubrl
xor
lret
jno
out
es
imul
or
inc
js
xchg
je
or
push
test
cmpsl
add
dec
or
mov
jnp
push
dec
push
jmp
adc
mov
mov
pop
sti
scas
int3
mov
lods
inc
jmp
push
add
loopne
leave
out
fiaddl
mov
jno
pop
cli
mov
ret
pusha
dec
std
sti
imul
cmp
imul
mov
outsl
test
ja
mov
mov
aaa
push
clc
xlat
mov
push
vandnpd
aaa
or
lcall
adc
das
mov
or
jo
jg
flds
and
hlt
repnz
fmul
sub
sub
cwtl
xor
in
dec
les
pop
xchg
enter
xchg
leave
ds
jg
jae
mov
adc
pop
je
lret
xor
leave
js
xchg
js
cmp
xor
inc
repz
dec
loopne
jecxz
mov
adc
jecxz
cmp
repz
je
xchg
mov
pop
pop
xor
dec
push
mov
jp
arpl
push
cmpsb
mov
pop
mov
xor
and
fwait
xlat
mov
sub
fisttps
sub
mov
clc
pop
aad
jecxz
inc
jnp
push
pop
popf
aad
in
movsl
test
jge
mov
nop
push
out
dec
cmp
sahf
mov
xchg
push
sbb
xlat
icebp
loopne
pop
je
mov
decb
adcl
push
push
adc
mov
sub
lcall
iret
sbb
mov
adc
lea
loop
insl
jle
jle
and
add
adc
mov
clc
test
mov
xor
jno
fildll
xchg
dec
mov
xlat
xorb
xor
push
icebp
or
sarl
sbb
sbb
jno
adc
xor
inc
pop
pop
cld
cmpsl
add
and
lock
orb
hlt
in
push
negl
push
cli
mov
and
push
mov
rclb
subb
cld
aad
push
lock
push
shlb
jle
mov
in
insl
dec
je
adc
dec
pop
dec
mov
fs
pop
popf
movsl
adc
loope
sub
aas
js
cmpsb
insb
shll
std
fdivrs
dec
mov
test
icebp
outsl
loope
mov
pop
lea
mov
mov
xchg
sbb
mov
aam
sbb
addr16
test
adc
orb
mov
rorl
push
xchg
gs
and
push
fcomps
jmp
outsl
rcrb
cli
xor
orl
out
sbb
fsubrp
mov
inc
dec
cmc
adc
loopne
cli
push
mov
loopne
sbb
cwtl
decb
push
test
and
sahf
loope
mov
xchg
incb
fistpl
sub
mov
xor
cmp
andl
arpl
push
lcall
add
dec
mov
xchg
clc
inc
loope
test
std
out
loop
mov
lods
dec
mov
or
xor
cmp
sub
mov
mov
stc
xlat
inc
scas
hlt
jae
sbb
jno
xor
mov
xchg
mov
sbb
push
int3
dec
lret
in
out
mov
mov
mov
push
ja
jnp
push
loope
or
sbb
adc
add
sub
movsl
popa
dec
xchg
lods
jle
jbe
lahf
in
mov
xorb
out
sbb
in
clc
sti
add
jecxz
ficoms
add
cmp
xchg
sub
cli
cmc
xchg
lret
ljmp
data16
push
lods
call
out
add
push
imul
sti
xchg
xchg
pop
cmp
dec
filds
adc
dec
popa
mov
popf
mov
gs
pop
lahf
std
sbb
test
inc
cmp
mov
sbb
dec
sub
pop
rclb
mov
clc
jmp
lods
pop
cmp
or
mov
inc
out
mov
inc
addr16
cmp
xchg
jb
sbbb
pop
sbb
dec
scas
neg
adc
add
xor
rorl
xorl
cmp
enter
test
test
fildl
mov
inc
pop
fmull
jp
sarb
jl
dec
inc
mov
dec
popf
push
ds
and
imul
lret
test
ret
xchg
xor
inc
daa
push
clc
sbb
xchg
test
sub
mov
push
mov
mov
pop
mov
adcl
mov
adc
and
push
or
aas
and
popa
enter
stc
jge
mov
scas
icebp
and
add
shll
fmuls
pushf
subl
mov
push
sub
test
xor
push
mov
rorl
ljmp
jp
inc
fisubs
xchg
dec
mov
inc
sbb
sbb
xor
adc
hlt
push
cwtl
int
sbb
insl
faddl
jae
mov
sbb
test
pushf
stos
add
out
or
sti
adc
dec
lret
adc
push
fisubrl
ja
out
sarb
push
dec
xor
push
dec
mov
faddl
cli
mov
stos
xor
push
sbb
or
movsb
push
enter
dec
and
dec
rol
loop
mul
pop
mov
jg
neg
adc
stc
testl
add
loopne
or
testb
push
and
dec
ss
jno
leave
add
fisttpll
je
call
inc
xor
stos
inc
std
xchg
push
mov
and
push
dec
call
inc
gs
add
mov
sub
out
arpl
das
in
mov
mov
out
pop
test
mov
push
pop
dec
out
dec
out
jg
inc
sbb
in
mov
in
xchg
in
cli
xor
mov
or
add
and
shr
mov
gs
sub
cmc
xor
mov
les
sub
mov
pop
pop
add
sub
and
icebp
aam
mov
cmp
adc
jecxz
aad
jb
int
lock
addb
mov
xchg
jg
pushf
or
mov
xchg
mov
xchg
mov
in
in
pop
andl
or
lcall
outsl
lret
jecxz
nop
xchg
pop
xchg
and
mov
adc
mov
dec
idivl
cwtl
push
xlat
ret
mov
insl
add
test
cmpsb
dec
lods
inc
mov
sbb
inc
notb
repnz
mov
inc
mov
out
cmp
fs
rorl
pop
inc
xor
ds
pop
pop
push
adc
jg
inc
dec
lcall
xchg
add
adc
jae
or
fwait
sti
outsb
lret
fwait
pop
inc
fs
test
stos
and
lock
ja
cmp
mov
mov
jne
ss
scas
mov
add
pop
or
xchg
xor
popf
fsubs
sbb
leave
lods
idivl
dec
test
fsubrl
stc
push
dec
clc
into
out
pop
pop
push
push
jbe
sbbb
mov
mov
push
scas
and
xchg
fistpll
popf
pop
mov
in
and
aam
fwait
inc
pop
in
loopne
repnz
jb
xorb
xor
test
popa
sub
sahf
enter
inc
add
int
sbb
xorl
or
mov
ds
popf
repz
push
shlb
lock
xchg
pushf
push
shrl
js
sbb
mov
rolb
lahf
pop
jbe
push
push
add
xor
stc
dec
out
sbb
loopne
scas
mov
fs
jge
push
fs
pop
aaa
arpl
inc
in
xor
push
sbbb
lock
cmc
mov
inc
dec
jecxz
add
pandn
and
push
mov
out
jle
mov
movb
jmp
loop
aad
lret
outsb
shlb
mov
push
lods
repz
mov
cmp
outsb
jo
sbb
and
pop
int3
cltd
sbb
int
insl
push
out
orl
adc
mov
in
cmp
insb
xor
adc
cmpsb
or
movsl
xchg
sub
imul
scas
xor
in
sub
pop
sbb
cwtl
hlt
push
mov
inc
mov
mov
movsl
loope
mov
sub
enter
jb
push
pop
jmp
xchg
xor
jp
aam
cmpl
pop
mov
sub
pushf
iret
sub
add
and
dec
mov
stos
lcall
mov
loop
mov
xchg
cmp
bound
arpl
loopne
jle
mov
shl
fsubs
dec
sub
sbb
jp
imul
mov
rcrl
mov
push
lea
sub
cli
stc
xor
test
push
cmp
cmpsb
stc
push
loopne
sarb
pop
xchg
cmp
or
lret
aaa
lds
mov
pop
adc
sub
repz
sbb
testl
mov
cmp
xchg
cmp
repz
push
xor
mov
out
and
in
repz
mov
mov
cmp
leave
in
mov
sarl
jge
fs
push
imul
push
icebp
ret
cwtd
add
push
out
xchg
add
xchg
mov
out
pop
movsb
cmp
mov
pop
adc
sbb
ss
ss
popf
fmul
mov
lcall
push
or
scas
push
dec
lret
mov
inc
inc
pop
pop
mov
pop
ds
bound
push
xchg
mov
adc
lahf
jp
add
leave
xlat
out
adc
stos
sbb
or
mov
cmovo
sub
scas
or
cmp
jno
inc
test
lret
test
fstl
inc
pop
daa
adc
pop
fidivrs
adc
mov
jl
nop
stc
inc
std
sbb
outsb
cmp
add
push
add
mov
or
lock
jle
cs
mov
sbb
jl
stos
imul
xchg
sub
cmp
in
insb
imul
divb
ret
mov
stos
rclb
jge
inc
and
fldenv
mov
lods
jle
lcall
cli
mov
pop
popa
push
sti
sub
mov
mov
mov
mov
mov
and
andl
sbb
mov
sbb
out
mov
outsl
cs
adc
mov
push
fcom
jnp
leave
pusha
or
jne
aam
xchg
out
sub
cmp
sahf
sbb
sub
loopne
jmp
lcall
fdivs
mov
mov
adc
lea
popf
xor
mov
shrl
jl
ret
shrl
sbb
aad
inc
pop
inc
cltd
mov
and
mov
dec
in
pushf
xchg
mov
add
adc
pop
cwtl
xor
sbb
andb
into
xor
pop
call
push
sbbb
mov
jae
jmp
rcr
mov
bound
fadds
leave
mov
xor
push
test
ss
push
mov
inc
push
mov
mov
nop
mov
je
and
and
push
push
push
sti
cld
fwait
inc
push
imulb
jle
or
and
mov
stos
sbb
icebp
pop
fmul
test
or
daa
enter
ret
je
dec
mov
push
sub
push
or
xor
or
push
xor
jmp
jmp
test
insl
into
into
pop
xchg
push
push
cwtl
jg
imul
dec
jns
or
adc
das
in
mov
out
pop
sti
mov
shlb
pushf
mov
in
cld
sub
mov
in
addr16
insb
test
adc
inc
xchg
sbb
pop
fcmovnbe
testb
dec
mov
lock
cmp
daa
and
cs
outsl
insb
inc
mov
add
test
shll
adc
and
clc
xchg
push
jmp
imul
push
insl
pop
xchg
mov
out
cmc
mov
xor
shll
aad
fidivl
shrb
fldl
rorl
xchg
and
scas
imul
imulb
bound
movsl
cltd
adc
fidivs
mov
aaa
sbb
dec
push
roll
dec
jb
stos
xor
ds
repnz
push
xor
int3
mov
out
aam
pop
xor
test
mov
loope
test
add
xchg
xor
jne
in
inc
outsl
mov
cld
fstpl
popf
into
clc
pop
xor
pusha
aad
daa
data16
inc
in
movzwl
cmp
test
inc
xchg
xor
and
sbb
sbb
mov
movsl
cmp
scas
ret
fs
inc
in
mov
cmp
rcrb
cld
jne
jle
jo
add
inc
lock
inc
movl
jae
das
add
pop
lock
mov
pop
sub
fsubrl
jbe
xchg
fldt
dec
imul
mov
mov
jmp
pusha
mov
into
scas
pop
push
ljmp
push
outsl
push
jp
ja
xor
test
icebp
sahf
cmp
les
mov
jno
in
lods
pop
jo
inc
ja
push
mov
jnp
loopne
pop
loope
jae
xor
adc
xchg
rcll
sahf
imul
and
xor
inc
fistpll
shrb
push
push
fdivl
icebp
adc
fimull
mov
mov
in
pop
jb
mov
in
add
std
in
leave
sti
cmp
mov
jb
cs
xor
bound
mov
mov
pusha
lahf
test
cmp
addr16
cli
lret
jecxz
pop
gs
dec
cmpsb
mov
or
aaa
cmp
insl
daa
test
repz
jbe
mov
cmp
add
push
in
inc
movb
aam
cmpsb
sbb
inc
fs
iret
out
xorl
in
cmp
jge
cmpsb
adc
push
ds
cmc
bound
add
sub
cmpsl
jbe,pn
stc
mov
scas
xchg
cmpsl
or
or
pusha
test
lcall
dec
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
nop
mov
hlt
addl
mov
lahf
mov
sbb
sub
neg
data16
loop
dec
or
iret
inc
scas
popa
fisubrs
test
pop
dec
push
leave
push
in
movl
cmpsb
xchg
into
int
pop
and
and
fistps
mov
xchg
int3
sbb
cld
out
jle
in
mov
jb
mov
push
ds
js
pop
jp
out
das
mov
mov
mov
test
daa
jns
xor
lahf
clc
pushf
addr16
movsb
out
aam
mov
hlt
mov
sbb
mov
jl
inc
and
and
sbb
pop
mov
sbb
jno
fcomps
movsb
divl
roll
shrb
call
pop
jle
and
mov
lcall
popf
jmp
decl
jnp
clc
gs
repnz
mov
lcall
in
rcrb
pop
scas
ret
sahf
fdivrs
fisubrs
les
cmp
mov
mov
xchg
out
notl
xchg
outsl
xorl
inc
xchg
xchg
jp
jl
insb
dec
lcall
enter
loop
xchg
inc
inc
mov
popf
mov
aas
lret
das
mov
or
aas
std
aam
test
push
ljmp
mulb
pop
mov
and
call
test
das
pusha
int
std
sub
adcb
sub
mov
mov
xor
nop
rolb
push
outsb
jmp
hlt
xor
stc
leave
mov
cmpsb
cmp
mov
sbb
mov
and
enter
fs
dec
mov
jl
pop
iret
ret
mov
push
into
pop
adc
inc
xchg
scas
inc
movsl
fmul
mov
das
sub
xlat
jg
and
mov
fmuls
mov
cmpsl
insl
add
cltd
dec
sbb
in
cmpsb
pusha
sbb
add
and
stos
je
sub
nop
cmp
push
push
and
mov
and
cs
pop
inc
dec
push
icebp
in
xchg
adc
xchg
aas
mov
movsb
imul
icebp
add
adc
pop
dec
pop
fidivrl
cmc
mov
jns
rolb
push
fbstp
fisubrs
ja
mov
mov
push
mov
in
int3
outsb
in
jae
stos
sub
add
inc
or
dec
mov
lea
cli
testl
mov
pop
mov
shlb
lock
push
jecxz
xor
push
iret
dec
cmp
test
inc
enter
js
leave
incb
cmp
mov
fdiv
jecxz
inc
jne
sbb
jmp
mov
jl
push
mov
movsb
inc
adcb
mov
stos
adc
movsl
imulb
iret
rcrb
mov
sub
push
test
imul
jle
mov
pop
fs
dec
test
xchg
sarl
clc
stos
sarl
jp
pop
add
fdivrl
mov
mov
lea
mov
xlat
fxam
lret
push
stos
and
xor
mov
imul
push
mov
sbb
sbb
fs
cmp
xchg
stos
loop
push
push
xor
leave
out
mov
and
jmp
inc
movsb
dec
xor
add
in
fsts
mov
rcl
jnp
push
jg
movl
xor
lods
pop
insl
sub
ficoms
popf
repz
clc
ja
push
mov
jg
ret
mov
mov
sbb
mov
jns
mov
sub
mov
je
jle
pop
add
les
fdivl
jns
stos
imul
rolb
lahf
in
mov
test
jp
dec
fmuls
and
pop
in
mov
insb
sbb
rcrb
arpl
adc
sbb
sbb
lea
fs
stc
mov
outsb
xor
aad
jge
xchg
push
mov
cmpb
add
inc
mov
loope
adc
nop
pop
push
dec
mov
and
lock
mov
mov
aaa
inc
aaa
popf
int
push
inc
out
leave
sbbb
mov
dec
pop
mov
dec
xchg
addb
pop
push
sub
mov
adc
sub
les
and
mov
pop
aad
and
outsb
fcmovb
cld
and
nop
rcrl
sub
popl
mov
movsb
pop
jle
or
add
mov
stos
js
int
jo
insl
pop
sub
jae
push
pop
dec
pop
mov
shrl
ss
push
pop
cmp
pop
xchg
jnp
lock
shrb
push
sbb
imul
dec
add
push
sbb
lock
push
lods
mov
es
xchg
das
fidivrl
fbld
lret
mov
negb
insb
scas
in
mov
out
in
addr16
xchg
aam
push
clc
nop
cmpsl
cmpsl
aaa
push
imull
enter
push
xor
adc
lds
inc
push
cmp
dec
push
loope
jb
push
popa
pop
adc
stc
cmp
test
movsl
das
out
xlat
repnz
out
insl
cmpsb
xchg
mov
jge
and
roll
and
dec
mov
data16
push
data16
ss
aam
pusha
or
adc
adc
and
sub
repz
jne
mov
mov
jecxz
das
cmp
test
xorl
out
lcall
sbbl
iret
push
and
mov
xchg
inc
mov
les
or
std
and
mov
andl
mov
shlb
rclb
call
inc
xchg
push
hlt
sbb
cmp
jle
fdivs
inc
mov
mov
mov
push
push
mov
cwtl
cwtl
ficoml
test
xchg
insl
push
xor
test
cmp
pushf
pop
push
cmp
daa
daa
and
cmp
icebp
lret
shr
and
push
pop
aad
add
mov
xchg
sub
mov
dec
popa
push
pop
adc
je
repnz
push
pop
sbb
sbb
or
aas
add
psadbw
mov
jmp
push
and
sub
jmp
push
jno
xor
pop
ds
dec
rdtsc
mov
mov
or
sub
aam
and
daa
pop
mov
in
jge
xchg
cmp
mov
mov
jnp
fisubl
into
nop
push
and
and
imul
adc
pop
outsb
dec
xor
dec
cmp
pusha
nop
lret
pop
andl
push
mov
mov
call
outsl
sub
out
fistps
aas
sarb
imul
add
jmp
hlt
cmp
int3
jns
jnp
rcll
xchg
loop
shll
push
insb
lds
mov
or
mov
dec
push
aaa
leave
xchg
imul
rcll
add
sar
and
fs
popw
imulb
in
out
push
bound
jb
divb
test
mov
test
out
movsl
push
lea
push
ja
ret
cltd
cmp
dec
mov
cs
imul
add
jge
pop
movsb
das
int3
jmp
popf
outsb
in
mov
es
inc
sub
in
mov
adc
call
add
push
into
mov
fiaddl
jae
shl
pop
adc
xor
sub
xor
mov
out
xchg
pop
mov
jecxz
cmc
lea
xchg
xchg
ds
in
inc
mov
dec
or
das
addr16
test
or
add
outsb
mov
jns
inc
pop
jbe
lret
js
jmp
cmpb
mov
push
sub
adc
sbb
insl
inc
scas
std
clc
out
xchg
cmp
stos
xchg
mov
mov
inc
xchg
xchg
sub
in
mov
push
lmsw
adc
pushf
pop
dec
xchg
cwtl
aas
je
insl
scas
subb
mov
lds
xchg
inc
xor
out
imul
and
std
jne
mov
ljmp
aaa
icebp
pop
loopne
addr16
xor
sbb
cmpsl
rcr
mov
xchg
repz
sub
jmp
xor
pop
xor
fmuls
outsl
leave
popf
fdivp
mov
in
pop
add
adc
aas
push
popf
test
jo
aaa
ja
sahf
enter
js
icebp
outsl
mov
scas
js
imul
mov
xor
or
cs
gs
loop
dec
sarl
arpl
mov
adc
scas
inc
cwtl
add
jbe
xchg
jns
dec
mov
aaa
outsb
dec
sti
fcoms
dec
sarl
sbb
sbb
testb
shr
les
movsl
popa
js
icebp
loopne
sahf
or
ss
out
sub
and
fwait
shll
movsl
sub
int
gs
mov
push
movsl
loop
lods
sbb
pushf
ja
mov
in
cs
prefetch
bound
mov
add
jns
cwtl
or
jns
sbb
pop
dec
mov
or
shl
das
ja
xchg
adc
sbb
rorl
jle
push
cli
sti
lds
int
jp
cwtl
mov
aas
jg
mov
into
mov
mov
and
lcall
repz
iret
bound
ret
mov
lea
cld
lock
mov
push
sub
lods
int
mov
xor
jns
add
mov
scas
pop
lret
pop
add
popa
stos
mov
mov
sub
scas
stc
imul
das
xchg
fldl
inc
rorl
and
pop
cmpsb
sub
in
fcmovnbe
mov
fbstp
sub
loop
cmp
adc
dec
clc
mov
fisubs
int3
shll
mov
push
push
xchg
test
mov
divb
push
sbb
jg
pop
xchg
mov
xor
in
and
and
pusha
sub
popf
xchg
int3
xchg
in
test
and
mov
xor
ss
jbe
lcall
fwait
aas
dec
hlt
add
push
mov
enter
sbb
out
inc
mov
cli
cmpsl
adcl
ret
test
xor
ja
xchg
incl
dec
pop
sbb
and
daa
xor
dec
add
xor
faddl
out
mov
mov
fcompl
push
adc
imul
filds
loop
insl
mov
and
js
loop
outsl
cmc
lods
shll
nop
ljmp
xor
sbb
push
push
push
xchg
mov
xlat
cld
sub
jp
xchg
jp
sub
scas
push
add
jmp
add
ds
push
inc
stos
or
int3
jo
cmp
xchg
xor
sbb
gs
test
push
xorb
and
or
imul
std
ret
cmpsb
stos
mov
sbb
lret
inc
test
adc
pop
sbb
dec
in
sub
and
jge
xchg
dec
xchg
lds
dec
cmp
push
movb
test
adc
loope
pop
divb
cltd
stc
outsb
pusha
push
ds
loope
jmp
or
mov
repz
xor
push
sub
jo
fdiv
cmpsl
call
cmp
add
dec
aas
js
jl
cli
loopne
dec
repz
jbe
push
jle
rcrb
cmc
or
pop
test
mov
shlb
mov
ss
ds
pop
push
shlb
lret
cld
jns
and
fsub
imul
xor
dec
jo
jae
addr16
int3
inc
xchg
cwtl
jns
add
add
push
into
jecxz
bound
std
rorl
jne
mov
mov
dec
mov
fcmovb
fistps
outsb
pop
scas
das
mov
in
fdivr
sub
hlt
push
xor
xchg
mov
mov
push
aad
das
add
int
in
push
or
jmp
cmp
mov
jle
mov
inc
pop
ret
jo
mov
pop
mov
lea
push
pop
mov
mov
stc
ss
in
call
stos
sti
imull
cmc
cmp
inc
sbb
push
les
adc
mov
cmc
add
fldenv
push
loope
lea
shrb
mov
loope
fisubs
outsb
xor
movsl
adc
push
ror
shrl
lods
push
bound
adc
sub
lds
push
test
pusha
popa
dec
xchg
sbb
leave
or
and
mov
inc
out
inc
leave
mov
push
iret
sub
inc
jmp
scas
ss
ljmp
in
sub
jmp
lret
mov
push
mov
repz
dec
inc
scas
iret
jp
sub
mov
adc
pop
in
sbb
jne
mov
sbb
std
pop
cmc
fwait
sarl
outsl
and
repnz
out
adc
cmp
jle
lahf
clc
in
adc
jge
inc
or
push
sub
add
sbb
mov
cmp
popw
cs
es
add
je
jle
pop
js
add
je
jge
leave
inc
jbe
xor
hlt
aam
mov
jmp
cmp
addr16
jecxz
cmp
xchg
jle
jge
mov
xchg
push
outsb
inc
jae
mov
cmp
dec
pop
dec
xchg
mov
xor
cli
ds
fmul
xchg
jmp
repnz
roll
jl
xchg
fists
mov
xor
or
in
xlat
aaa
insb
clc
inc
dec
jecxz
out
in
push
into
in
xor
and
cmp
jbe
popa
pushf
iret
sub
xor
pop
add
icebp
jl
ret
jmp
xchg
sbb
xchg
add
and
test
vmovaps
jno
mov
fcos
jae
orb
es
cmp
dec
mov
popf
mov
jns
fs
shll
flds
fnstcw
rorb
ja
fisubrl
inc
pop
and
rcrb
int
pop
and
lods
daa
cld
sub
inc
inc
add
hlt
mov
daa
jecxz
test
adc
out
cmp
repz
bound
push
jp
ljmp
mov
adc
jmp
inc
lea
jl
push
or
pop
cmp
inc
cltd
mov
xlat
pop
add
lret
or
mov
bound
enter
pop
mov
bound
jge
shr
test
in
lock
in
pop
cmp
les
inc
addr16
sbb
cmp
inc
jecxz
stc
out
loopne
push
in
test
xchg
sub
sub
pop
inc
jmp
stc
les
xor
or
and
repnz
sbb
fadds
push
add
int
ja
pushf
add
mov
outsb
loope
sbb
pop
push
sub
cld
ss
in
jnp
out
cmp
aad
in
in
and
push
jns
leave
nop
mov
divl
lods
pop
push
stc
test
jg
into
aaa
xor
test
add
pop
les
mov
into
insl
mov
ret
xchg
jne
dec
xchg
scas
test
add
push
sub
insl
mov
mov
in
repz
jbe
mov
stos
mov
outsb
cmpsl
push
pop
add
or
mov
call
sarl
xchg
adc
in
loope
mov
xor
int
jo
add
sahf
gs
xchg
rolb
daa
sbb
je
sbb
push
lds
aad
aas
or
mov
xchg
pop
fnsave
jns
adc
daa
adc
rclb
lret
add
jnp
pop
and
pop
jl
ja
fistpl
icebp
stc
faddl
xchg
mov
or
fsubrp
sub
fidivrs
mov
inc
or
add
jl
pop
imul
or
in
mov
ret
xchg
pop
int
pop
cmp
in
scas
leave
jb
push
mov
enter
dec
jo
scas
sub
inc
inc
nop
and
icebp
push
mov
mov
bound
pop
pop
cmp
imul
sub
and
and
push
lcall
out
test
test
add
mov
loopne
push
xor
fs
sub
inc
pop
sahf
add
ret
aaa
dec
pop
repz
inc
cli
xchg
dec
push
cmpb
or
sti
mov
sub
xlat
mov
ja
arpl
add
lods
sbb
pop
jmp
fimuls
pop
pop
lret
or
pop
sti
lods
imul
testl
mov
out
aad
loope
sbb
pop
lret
scas
pop
hlt
es
sbb
sti
out
insl
cwtl
mov
add
ds
jno
and
mov
push
pop
jo
adc
orb
lds
addl
and
clc
cmpsb
fcmove
pop
cmp
mov
jo
jno
sub
push
test
inc
outsb
test
mov
or
xchg
aas
xor
ljmp
mov
int3
mov
add
ss
hlt
repnz
or
cmp
popa
sbb
cmp
ljmp
xchg
jge
adc
ror
in
adc
jg
stos
out
stos
pop
shufps
cld
les
mov
pop
add
lahf
filds
jbe
push
dec
aam
fcomi
add
adc
cltd
pop
insb
popa
push
rcr
popa
xlat
icebp
std
repnz
test
cmp
jnp
shl
cmc
jno
shr
pop
push
sbb
sbb
xor
sub
ljmp
jle
push
jp
add
and
loopne
lds
imulb
sbb
lea
push
inc
mov
lcall
lods
jle
xchg
cmp
cmp
xor
pusha
adc
mov
xchg
push
arpl
lods
add
cmpsw
inc
jns,pt
data16
shrb
push
mov
jge
cwtl
js
jmp
dec
xor
adc
jmp
and
mov
xchg
pop
mov
inc
loopne
loope
mov
xchg
rcll
xchg
in
mov
sarb
xor
pop
loopne
aad
lds
lods
lock
mov
dec
fstpl
add
xor
ficoms
pop
das
stos
imul
sub
bound
ror
push
pusha
mov
dec
aam
test
xchg
mov
inc
push
orb
mov
cli
fstps
subl
and
inc
mov
sahf
xor
cltd
sti
inc
xor
sbb
or
adc
adc
push
push
push
xchg
and
ss
test
adc
into
insb
dec
shll
pop
push
jle
cmp
stos
xchg
fs
stc
mov
push
add
cmpb
xlat
mov
xlat
xstore-rng
cmpsl
test
pop
add
push
lcall
popf
jp
scas
mov
mov
pop
and
xchg
sub
mov
call
add
lret
scas
pop
mov
inc
fldcw
out
in
daa
xchg
mov
sbb
outsb
mov
or
ds
mov
jns
shl
xor
jns
and
pop
in
mov
xor
pushl
aam
push
or
ret
push
xchg
mov
xchg
orw
loopne
dec
iret
iret
mov
add
cmp
int3
outsl
xchg
xor
fstps
mov
adc
call
dec
pushl
scas
inc
mov
xor
iret
xchg
xchg
call
jno
sbb
or
hlt
jne
push
add
scas
scas
stc
fcoms
pop
into
scas
pop
imul
out
or
xlat
push
out
andb
movsl
mov
int3
ja
adc
add
clc
movsb
incb
clc
jmp
cwtd
or
int
push
call
inc
mov
nop
mov
mov
sbb
cs
sbb
jp
das
xor
dec
cmpsb
inc
loop
clc
cs
ja
dec
mov
cwtl
jecxz
mov
and
stc
addr16
adc
and
nop
int
mov
test
mov
cmpsb
mov
lahf
out
ljmp
pop
add
sbb
ficoms
xor
jnp
sbb
pop
out
aad
std
xchg
mov
sti
jmp
jae
outsl
mov
push
and
outsl
cmp
jle
inc
es
lds
inc
add
jns
lods
sbb
mov
add
xchg
pop
mull
add
leave
push
sahf
movsl
out
adcl
jne
mov
lcall
loope
xor
jmp
pop
fs
sbb
pusha
and
and
sti
shlb
xlat
inc
xchg
sub
cpuid
enter
cmp
cmp
sbb
pop
mov
mov
dec
insl
std
sub
pop
imulb
inc
out
jns
xor
pop
aas
push
sbb
mov
adcl
insb
and
out
inc
jb
cmp
mov
movsb
mov
xchg
sbb
inc
fsts
into
sahf
xchg
gs
arpl
sub
or
xchg
inc
notl
push
lea
pusha
stc
mov
pop
fs
xor
or
pop
lcall
fsubs
dec
repz
dec
lods
movsl
mov
mov
or
adc
mov
fcomp
in
mov
ret
arpl
loop
bound
xchg
push
in
push
dec
aam
cmp
fwait
loope
adc
stos
inc
adc
fldl
adc
out
mov
std
or
and
inc
cmp
cwtl
mov
jne
data16
fimuls
xor
mov
mov
jne
imul
lret
push
and
xorl
in
jne
gs
jp
mov
repnz
outsl
sub
jae
test
cld
aaa
pusha
dec
aam
lret
mov
lods
daa
enter
mov
lods
dec
add
bswap
adc
sahf
lock
movsb
mov
jcxz
mov
lret
in
notl
sbb
xor
fisttpl
ret
das
in
lret
pop
stos
fcomip
in
cs
sbb
or
fimuls
js
daa
adc
jo
aas
xchg
scas
inc
sbb
lcall
repnz
pop
or
dec
mov
mov
cmp
in
repnz
out
mov
test
mov
scas
dec
test
gs
push
lret
and
inc
test
sbb
rorl
int
mov
dec
mov
movsb
loop
mov
pop
hlt
rorb
sub
int
mov
mov
idivb
mov
in
jo
mov
jo
hlt
push
inc
loope
stos
or
xor
dec
mov
pop
push
fdivs
les
add
push
out
cmp
mov
js
jno
orb
into
sbb
jecxz
pop
mov
in
and
inc
movsb
test
scas
lret
xchg
stc
add
std
cmp
cmpsl
stc
mov
cmp
xlat
xchg
int
sbb
pop
cmpsb
mov
call
test
insl
or
cmp
xor
fwait
stos
addr16
add
enter
loope
cmc
add
mov
cmpsb
int3
fidivrl
inc
xchg
jp
mov
pop
xchg
lock
scas
cmp
dec
loopne
sub
or
arpl
xchg
xchg
scas
cltd
jp
sub
movsl
push
jmp
or
mov
pop
cld
or
cmpsb
adc
insl
rcr
xchg
mov
sub
mov
ss
adc
xchg
aas
daa
xchg
shll
jmp
push
icebp
pop
popf
mov
mov
enter
arpl
scas
rcl
sub
or
movb
insb
fistps
mov
cmp
jle
aas
cltd
cmp
sub
xor
inc
lahf
mov
loop
cld
and
push
jno
hlt
jnp
fistpll
and
jno
pushf
xor
xchg
ljmp
dec
cmc
in
hlt
ds
shll
dec
aas
movsl
ret
lea
je
and
outsb
stos
xchg
add
xchg
adc
bound
loop
cmpsb
push
mov
mov
dec
cltd
call
dec
fistl
hlt
mov
xchg
jns
fistpl
in
add
lret
mov
jecxz
or
lods
loop
iret
mov
in
or
cmpsl
les
leave
stos
push
jge
iret
mov
push
or
hlt
into
pop
dec
pusha
enter
adc
loop
lods
mov
jecxz
inc
imulb
loopne
and
mov
out
mov
jmp
fiaddl
add
sub
dec
xchg
cmp
jns
test
jb
pop
ret
in
jbe
mov
jle
add
xor
arpl
hlt
daa
or
mov
or
jae
push
mov
pop
scas
les
test
enter
fs
scas
push
pop
sub
lahf
nop
inc
int
mov
insl
sub
mov
cmp
cmp
inc
mov
imul
xlat
sahf
mov
iret
jae
subb
inc
jl
cwtl
mov
aad
push
ds
add
push
icebp
mov
rdtsc
lcall
or
pop
or
ror
jae
sbb
fimull
sbb
ret
pop
and
sbb
cmovo
mov
mov
jmp
mov
out
push
fists
das
bound
imul
push
scas
xchg
mov
daa
mov
pop
pop
cwtl
dec
mov
jbe
inc
into
filds
lea
xlat
or
add
scas
cmpb
cwtl
jns
jl
xchg
aas
pop
inc
sub
inc
addr16
dec
sbb
or
scas
mov
push
sub
dec
int
jno
push
push
sub
out
cld
mov
sbb
push
jle
sbb
insb
addr16
push
enter
inc
xchg
clc
outsl
push
dec
inc
add
sub
mov
mov
xchg
test
xor
sbb
mov
mov
xchg
push
adcl
sub
roll
xchg
mov
dec
xchg
leave
jno
lds
rcr
fldt
rol
outsl
pop
stos
out
dec
out
das
jp
in
ds
icebp
test
mov
push
and
xchg
or
jnp
std
mov
outsl
scas
jnp
out
shr
add
arpl
es
sarb
and
and
ret
pop
cmp
std
movsl
xchg
out
rcr
decb
pop
mov
fdivrs
stos
or
inc
aaa
repnz
mov
sti
sub
repz
mov
lret
bnd
mov
jmp
xor
imulb
mov
out
mov
push
inc
movsl
push
mov
jno
icebp
xlat
xchg
hlt
mov
xchg
loopne
stos
and
push
mov
or
sub
jb
push
ret
jne
std
roll
out
pop
jle
sbb
push
das
dec
sub
mov
int
js
push
mov
mov
mov
mov
fs
fdivrs
adc
aam
imul
xor
stc
loopne
and
jecxz
xchg
jg
std
push
bound
hlt
jnp
jb
insb
leave
scas
pop
sbb
mov
push
inc
dec
push
gs
movl
pop
sub
sub
adcb
cmp
and
mov
mov
ret
mov
xchg
dec
xchg
ds
rcll
leave
add
sti
inc
jo
outsb
dec
cli
cmp
scas
bnd
push
lcall
psubq
imul
roll
push
xchg
ds
rcl
push
lock
stc
scas
je
xor
push
dec
mov
and
test
jnp
add
inc
jmp
or
push
push
ret
mov
dec
mov
jmp
xchg
retw
sub
aad
jp
pushw
outsb
pop
fildl
or
push
outsl
shl
in
jp
xor
jecxz
mov
iret
sbb
in
adc
icebp
dec
jbe
lcall
mov
sbb
sbb
fdivrp
or
sbb
imul
push
enter
xor
fxch
cmp
add
nop
pop
jmp
gs
or
in
jmp
cli
mov
bound
xor
inc
stos
dec
mov
es
mov
mov
add
pop
inc
dec
mov
jg
rcrl
in
add
cltd
fs
notl
dec
dec
push
cs
ljmp
cld
iret
js
mov
and
push
es
push
dec
push
out
shll
cmpsl
mov
les
jle
in
test
ja
sbb
pusha
mov
and
mov
out
mov
rorb
imul
mov
push
xchg
ss
inc
out
stos
aaa
jns
out
cli
in
cmp
repnz
fwait
xor
cmp
out
arpl
mov
jb
andl
mov
shlb
divl
adcl
pop
divb
jle
xor
jp
cmp
stc
push
xchg
xchg
mulb
rclb
push
adc
xchg
mull
xchg
cs
add
cmp
inc
lret
fnstenv
lret
ljmp
aas
lock
mov
das
fldenv
clc
aas
mov
popf
nop
pop
jne
jne
mov
mov
data16
sahf
jo
stos
ucomiss
test
js
ror
cmpsb
sub
jmp
aam
or
into
xchg
std
daa
jl
push
sbb
cmp
adc
xor
push
add
jno
pop
lods
dec
cwtl
mov
jg
int
cld
inc
push
jp
ljmp
es
or
jne
sub
mov
pop
icebp
cmpsb
fs
movsb
loope
inc
fucomi
mov
daa
insl
mov
xor
in
enter
jle
xor
imul
pop
lods
mov
imul
fwait
sub
fnstsw
dec
movsb
pop
outsb
insl
scas
gs
inc
push
mov
lds
ljmp
xor
gs
loop
ss
call
fnstsw
jns
mov
mov
dec
popa
jecxz
addr16
add
into
idivb
outsl
std
jle
or
xchg
aas
push
lock
or
inc
movb
xchg
sub
xchg
cmp
pop
dec
mov
mov
out
lds
repnz
test
mov
ja
or
lods
shlb
stos
imull
pop
cmp
shl
dec
out
xor
out
loope
cmp
adc
mov
jmp
mov
in
lcall
dec
push
cmp
mov
sar
mov
cs
test
lret
cmpsb
andb
xor
add
stc
hlt
scas
cwtl
cld
xchg
mov
cmc
pop
lahf
dec
xchg
popa
mov
dec
jns
xor
sbb
cwtl
mov
jge
fdivl
adc
xor
popa
add
loop
repz
xor
dec
inc
xchg
mov
out
jb
in
out
popa
rcrl
je
inc
sbb
mov
pop
sbb
xor
shrl
and
movsb
push
addr16
in
adc
dec
pop
imul
xor
jmp
jno
add
in
dec
pop
add
divb
jne
cmpl
pop
jl
scas
loopne
mov
pop
insl
js
sahf
inc
sbb
add
inc
jl
fwait
loopne
mov
sub
in
pop
mov
pop
xchg
imul
mov
popa
daa
push
pushf
mov
lock
cwtl
cmp
in
aas
out
adc
pop
out
cmp
or
pop
outsb
and
pusha
aas
gs
jb
fisubl
push
mov
daa
stc
call
scas
mov
stos
es
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
loope
fidivrs
roll
cmpl
jae
les
xchg
in
jle
mov
push
fstpl
mov
sbb
int
and
aas
jo
insb
rcr
and
cli
mov
jb
mov
push
and
repz
test
cmp
es
xlat
jno
movsb
mov
rcrb
shl
fidivrl
add
mov
mov
sbb
lods
fiadds
push
minps
stc
adc
add
shll
sbb
leave
fmull
sub
cltd
inc
pop
test
push
push
jns
cmp
ret
ret
jno
pop
jmp
or
mov
jge
neg
dec
mov
cmp
fists
mov
dec
inc
inc
cmp
jno
pop
jmp
lcall
cmp
imul
ss
jb
push
adc
loope
dec
adc
push
rep
movl
clc
int
pushf
sbb
cli
lahf
xor
outsl
pop
popa
fwait
repnz
or
arpl
rcll
pop
jmp
xchg
sbb
sbb
imul
push
adc
mov
jns
in
dec
out
sbb
xchg
pop
in
addb
jmp
hlt
and
and
jnp
push
inc
or
push
push
adc
mov
call
icebp
xchg
mov
repz
xor
nop
hlt
inc
out
repz
vcvtps2pd
inc
dec
pop
sbb
jmp
fwait
mov
adc
dec
enter
je
and
ds
lea
andl
push
lods
je
imul
das
adc
cltd
mov
mov
loopne
dec
dec
inc
mov
push
inc
and
fsubrs
sub
js
jne,pn
pop
decl
mov
and
mull
mov
repz
or
cld
loop
mov
shlb
push
std
and
and
xchg
flds
and
jno
popf
and
lea
pop
inc
icebp
cmp
filds
xor
shl
stos
cwtl
jne
jne
add
push
bound
xchg
jp
inc
ds
adc
outsl
gs
test
fldl
adc
push
or
mov
jmp
retw
cltd
xor
inc
fnstsw
in
mov
pop
cltd
fcmovnb
test
outsl
and
cli
dec
xchg
ret
push
xor
rclb
test
mov
sbb
mov
push
std
jle
cmc
jmp
or
int
dec
ja
mov
fildl
stos
jo
xor
popl
mov
cmc
sub
mov
xchg
in
js
xor
popf
shlb
mov
xchg
lret
clc
mov
shll
idivl
xchg
pop
sti
sbb
jbe
xchg
mov
pushf
shll
stos
fstpt
mov
cli
jnp
xlat
jp
rclb
loop
scas
xor
sub
into
adc
loop
cmpsl
and
sub
mov
add
iret
stos
inc
ljmp
orl
sub
push
mov
pop
sbb
pop
sbb
mov
push
decl
fcomps
lock
out
sub
enter
push
xchg
sub
iret
xor
scas
jle
pop
pop
jecxz
fcoml
cs
jge
inc
aas
scas
mov
and
xchg
lds
repz
or
rclb
push
rcrl
into
ror
jl
in
and
pop
fldenv
fsubrs
adc
push
hlt
or
inc
inc
or
loop
mov
xchg
mov
aas
sub
inc
gs
mov
movsl
push
and
add
mov
dec
mov
js
lods
xchg
pop
aas
xchg
sub
lret
and
std
push
pop
xchg
in
push
lahf
dec
lcall
lret
push
int
dec
xor
dec
jno
cmp
rorb
and
sbb
stc
fcom
push
xor
cmp
hlt
or
cmpb
add
cmp
fnstsw
sub
jnp
xchg
std
test
dec
movsb
mov
cltd
popa
int
in
inc
test
and
fcomip
mov
mov
mov
dec
rcrb
test
into
push
mov
aad
inc
adc
dec
sbb
add
adc
xchg
scas
adc
jecxz
sahf
ffree
scas
sar
xchg
xlat
cmp
bound
xchg
adc
popa
shrb
cmp
aas
int3
dec
dec
push
push
rolb
cmpsl
cli
and
push
fistps
cs
in
dec
rol
outsb
call
aad
shll
and
add
fists
pop
sbb
xchg
mov
mov
sti
push
pop
xchg
mov
mov
testl
jbe
sbb
shl
dec
jecxz
outsb
cmp
add
mov
in
ds
mov
inc
loope
cmp
aaa
mov
pop
or
or
and
je
pusha
xor
dec
pop
out
and
stos
loopne
push
insb
shrl
and
bnd
sub
mov
dec
cmp
stos
sar
loop
lret
xchg
jle
push
setl
sub
sahf
jge
push
fadds
push
out
xlat
mov
daa
arpl
push
out
nop
fidivl
ss
bnd
stos
sbb
and
test
rcrl
lret
push
push
dec
inc
add
mov
shrb
pop
fisttpl
adc
out
pusha
xchg
jns
test
pushf
lods
dec
pop
ret
mov
adc
jge
nop
loope
js
dec
or
add
test
call
mov
mov
movsb
sbb
test
icebp
adc
add
dec
seto
xchg
dec
in
loope
jp
stos
jnp
divb
cmp
and
js
xor
int3
pop
xchg
popf
mov
int
mov
sbb
mov
in
inc
ret
loop
mov
lret
push
inc
aaa
mov
sti
jle
arpl
xchg
or
and
pop
lds
sub
sbb
stos
pop
mov
outsl
mov
inc
mov
test
arpl
add
pop
xor
fisttpll
lock
test
sarb
xchg
test
push
daa
cs
ds
inc
aam
add
adc
popa
dec
popf
mov
daa
cmp
xchg
ljmp
push
out
sbb
into
pop
ds
jge
hlt
sbb
cmp
and
cmpsl
pop
lods
in
mov
push
lcall
add
and
fnstsw
push
insl
stc
dec
mov
add
repnz
cmp
lock
add
jno
sbb
dec
out
mov
insb
nop
dec
outsl
xor
add
fstl
dec
add
es
and
mull
jg
push
test
pop
xchg
or
inc
clts
add
pop
xchg
pop
mov
mov
ja
outsl
fistpll
pop
adc
gs
sub
fildl
jb
movsb
jne
mov
mov
pop
in
push
add
and
in
and
jmp
sub
xchg
adc
lret
pop
lret
dec
imul
cmp
orl
imul
insl
sbb
cli
lods
fmuls
jae
dec
out
and
push
or
xchg
or
lock
sub
int3
add
adc
daa
and
popf
cli
or
fcom
sti
insl
pop
lcall
cmpsb
leave
imul
roll
test
mov
cmp
xorb
adc
sub
es
adc
ja
loopne
jmp
dec
ret
fimuls
shlb
fbld
xchg
mov
pop
shl
clc
daa
das
pop
fsubrs
pop
jno
dec
mov
cwtl
add
cmp
out
jo
mov
sti
push
adc
gs
jbe
movsb
dec
popa
jl
aas
scas
outsl
inc
sbb
xor
fcmovnu
dec
loop
mov
fnstenv
idivl
outsb
je
rcrl
or
mov
stos
clc
mov
inc
push
xchg
inc
mov
xor
popa
push
jne
mov
sub
aad
push
cmovns
mov
insb
mov
push
shll
push
leave
and
test
mov
ss
dec
loope
mov
cmp
xor
jnp
mov
pop
shlb
arpl
stc
jle
movsl
mov
jne
inc
add
or
std
sbb
mov
sbb
popf
sbb
inc
xor
xor
leave
subb
sahf
dec
cltd
cmp
lret
aaa
loop
push
mov
jle
and
fsubrl
pop
jae
cmc
add
adc
outsb
ficompl
cmp
into
sub
fcomip
lahf
loopne
popa
push
or
std
rclb
sub
jns
adc
ljmp
fisttpl
xchg
adc
scas
dec
sbb
mov
push
mov
jg
add
in
popl
mov
je
aam
push
dec
push
decl
fcmovnb
pop
mov
lods
repnz
jge
sub
xlat
shll
sbb
inc
mov
xorb
and
jb
jno
mov
insl
int
cmp
mov
pop
mov
xchg
jnp
add
inc
inc
stos
movsl
mov
adc
jb
in
cmp
xor
lret
cmpsb
int3
pop
mov
push
stc
jbe
mov
push
jge
aas
pop
sbb
cmpsl
mov
lret
mov
nop
pop
mov
jb
dec
xorl
iret
pop
insb
std
shrb
cmp
cmp
imul
mov
repnz
dec
daa
fsts
je
icebp
xchg
mov
andl
int3
push
fbld
add
scas
jmp
stos
jb
xor
fldcw
sbb
jns
mov
cmc
int3
xor
jl
mov
shll
xorb
lret
shrb
xchg
decl
ja
pop
dec
insb
sbb
jge
mov
mov
cs
test
dec
xchg
shr
jae
sbb
fsub
fcoml
vdivps
imul
iret
jp
jae
les
lods
jae
sub
ret
xchg
jne
xor
into
in
ret
cwtl
loop
adc
cmpsb
arpl
aam
mov
sbb
pop
out
jbe
fadds
je
out
cli
test
or
mov
mov
les
add
jp
add
xchg
lds
mov
lret
stc
dec
ret
sti
mov
jb
daa
clc
cmpl
daa
lret
mov
mov
mov
nop
fadds
test
pop
xchg
xchg
out
and
test
arpl
rorl
mov
movsb
ret
ficomps
mov
shrb
rcrb
and
std
out
test
cmp
sbb
or
mov
aad
adc
push
orl
cld
sbbb
adc
add
sbb
xchg
cltd
lods
scas
push
movsb
jb
js
ficoms
pop
sub
inc
imul
lds
lds
and
in
cvttps2pi
cmp
into
leave
or
mov
jl
in
sahf
jg
loope
movsb
dec
mov
mov
popf
or
aad
dec
pop
mov
pop
ret
cli
das
and
adc
adc
or
push
es
adc
lcall
inc
or
out
jbe
sbb
mov
fstpl
mov
aas
imul
pop
jmp
mov
aad
mov
push
pop
push
aas
push
loopne
or
bound
repnz
mov
jb
mov
movsb
sbb
stos
ja,pt
or
pop
out
cmp
add
loop
and
cs
aad
js
mov
cmp
pop
pop
mov
shll
mov
xchg
in
std
cwtl
mov
in
aaa
push
push
push
insl
xor
stc
lods
xor
mov
pop
or
inc
and
gs
daa
adc
cld
js
sub
push
in
sbb
loopne
cwtl
in
add
ja
add
pop
pop
push
cmc
cmp
pusha
and
sbbl
sbb
fdivrs
jae
ds
sbb
xor
mov
jp
add
out
out
imull
enter
xor
movsl
mov
test
pushl
dec
xlat
add
daa
mov
int
test
ljmp
add
or
call
pop
repz
insl
pop
cmp
pop
sbb
popa
int
pop
sbb
jp
pop
fnsave
gs
mov
push
out
pop
jb
xrelease
hlt
aad
repz
in
xor
pop
data16
xlat
inc
dec
repnz
lret
fnsave
pop
shrl
mov
inc
sti
xor
inc
xor
outsb
push
mov
pop
addr16
and
xor
enter
or
inc
sbb
push
addr16
ss
mov
push
xor
ja
adc
addr16
imul
cwtl
push
or
fwait
in
bound
sub
dec
addr16
cltd
cmp
lret
push
mov
sub
xchg
push
pop
pop
fwait
jo
lcall
repz
sub
jo
mov
sub
inc
adc
push
dec
and
fidivrs
push
fs
lret
jbe
pusha
cltd
loopne
add
cmp
imul
rclb
andl
cwtl
jbe
out
ja
xchg
rorb
sahf
mov
sbb
xchg
or
movsl
mov
cltd
jp
inc
dec
dec
stos
add
pop
inc
test
jne
inc
mov
push
fistps
cmp
or
cltd
stos
test
cmp
sub
sbb
adc
sti
lret
in
push
push
stos
lcall
push
cs
gs
sbbl
inc
fsts
inc
aad
add
xchg
mov
dec
mov
adc
cs
or
fwait
aas
xor
mov
fistl
adc
popa
mov
jno
arpl
cltd
sub
jecxz
inc
adc
mov
mov
mov
push
popa
cmp
jl
and
jecxz
sarb
xchg
lea
stos
pop
daa
sub
ljmp
add
negl
pop
lods
das
sbb
lock
lock
daa
cmp
adc
call
shrl
xor
rorb
lret
loopne
loop
xor
xchg
jge
in
lock
sbb
fs
insb
lret
scas
imul
jmp
dec
sbb
cmp
add
jbe
es
fs
les
stos
jae
jge
jnp
in
xchg
call
pusha
outsb
jno
mov
push
enter
push
divb
fwait
sub
rclb
bound
and
gs
and
out
sti
subl
mov
pop
dec
in
push
push
lahf
pop
loop
xchg
fwait
clc
push
cmpsl
sbb
shrb
imul
repnz
cmp
scas
cmpsb
xchg
or
pop
rol
in
sahf
cmpsb
jno,pt
push
sbb
sub
jg
xchg
mov
addr16
and
inc
jecxz
fisubs
lods
adc
and
fdivs
fisttpll
jge
and
mov
dec
pop
push
pop
fsubl
imulb
xchg
outsl
repz
pop
loop
inc
sbb
sahf
addl
jo
push
mov
leave
xchg
daa
int
ret
sub
add
jge
cmp
add
add
push
repz
cld
movsl
jmp
and
fcompl
jne
into
pop
mov
inc
movsb
jle
push
mov
int3
stos
inc
arpl
and
mov
mov
jns
cmp
jb
inc
add
mov
outsl
sub
xchg
pop
dec
rcll
mov
mov
mov
stos
iret
jecxz
xlat
adc
xchg
test
ljmp
cmp
or
sar
lods
fisttpl
sbb
or
jle
imul
xchg
or
hlt
cli
push
and
xchg
xor
int3
sub
sbb
test
push
mov
sbb
aaa
xchg
jns
flds
pop
fsts
outsl
pop
jg
xor
jmp
push
loop
int3
movsl
sbbl
outsb
push
pusha
aas
dec
stos
xchg
ret
fsubl
movsb
pop
add
cltd
mov
sub
aad
mov
insl
mov
xor
imul
mov
jb
adc
inc
enter
push
sbb
xchg
push
xchg
xchg
lea
stc
outsb
sahf
std
and
andl
xor
adc
jge
adc
popa
and
jno
dec
or
xor
notl
enter
mov
dec
mov
and
stc
fsubrl
testb
loop
sub
add
xor
ljmp
pop
shrb
fstpt
jecxz
cltd
adc
lret
lds
div
pop
sbb
pop
sahf
xchg
inc
stc
ds
mov
pop
lock
adc
push
negb
and
mov
xchg
add
mov
dec
push
lcall
movsb
adc
push
insb
rorl
and
pop
test
inc
ficomps
adc
jle
out
enter
ds
cli
pop
mov
add
sbb
int3
jnp
mov
popa
sub
test
mov
cld
dec
jne
fwait
cmpsl
cmp
mov
push
jp
sbb
ret
dec
dec
jp
mov
inc
sub
push
xor
fistpll
pop
jbe
pop
daa
test
mov
sarl
out
arpl
jmp
fdivrs
or
das
lret
and
mov
xchg
mov
sbbl
sahf
insl
xchg
push
dec
daa
dec
cwtl
addr16
into
addr16
scas
aas
pop
or
sbb
jno
dec
dec
cmp
addl
lahf
mov
lea
xor
xor
gs
daa
inc
cmpsl
mov
sub
iret
gs
xor
jge
jecxz
shrl
push
inc
jo
mov
das
je
arpl
xor
fnstsw
push
xor
pop
fsts
pop
sti
stos
in
mov
dec
pop
add
sahf
jecxz
jmp
fistpl
push
addr16
xor
push
lret
clc
cmpsb
xor
jp
dec
pop
cmpb
xor
dec
push
jns
cmp
dec
jmp
pushf
cwtl
call
call
xchg
fcoml
add
mov
sbb
cmp
or
mov
pop
js
xorb
add
mov
push
pop
rolb
inc
rcrb
sbb
fwait
or
mov
fldz
arpl
sub
shrb
or
push
xor
xchg
inc
cmp
fxch
iret
fadds
fists
push
jbe
fistpll
fcmovu
js
in
mov
add
fcompl
xchg
sub
fidivl
fcoms
dec
xorl
sub
cs
lods
sub
adc
jno
add
jl
icebp
jns
xor
and
sub
sub
push
cmp
dec
arpl
adc
mov
cmp
add
pop
mov
or
std
sbb
jg
cmpsb
fdivrs
xchg
vmread
stos
addl
push
and
push
sub
in
sbb
mov
lret
and
fbld
adc
stc
push
in
push
ds
bound
sub
aaa
out
or
and
xor
inc
mov
lods
ret
adc
push
bsr
gs
xchg
mov
mov
dec
jl
cmpsb
aaa
lahf
cmp
inc
push
testb
sbb
mov
pop
pop
adc
jns
test
ljmp
popf
dec
cltd
add
ds
lea
in
sbb
jno
mov
or
sbb
loop
in
or
cmp
jno
and
add
dec
clc
hlt
pop
pop
addr16
lcall
pop
push
dec
lahf
cmp
aam
aad
mov
imul
xlat
mov
pop
mov
out
push
push
scas
xor
pop
dec
cmpl
add
dec
icebp
jno
pushf
sub
lods
inc
fwait
sarb
push
sbb
fsubrl
xor
sbb
inc
jle
lret
scas
lret
stos
jno
and
jmp
adc
clc
cmp
add
mov
push
jb
clc
enter
daa
and
and
cs
jae
cmc
pushf
inc
cli
je
cmp
xor
push
lret
scas
aas
rcrb
hlt
mov
jno
shrb
sbb
das
lcall
xlat
jns
in
pushf
cmp
inc
lcall
sahf
mov
pop
fwait
and
lods
dec
sub
xchg
push
or
dec
add
testb
xor
sbb
lods
push
out
sbb
movsl
add
enter
inc
cmp
or
sahf
cltd
inc
sub
inc
xor
push
sub
fists
pop
sbb
aam
mov
or
cvtpi2ps
sub
leave
ljmp
pop
lret
aam
lahf
ljmp
jno
fadd
imul
aas
loopne
sub
push
inc
hlt
nop
or
fcompl
inc
sbb
sbb
imul
xlat
push
cli
cmp
repz
scas
in
aas
push
outsb
clc
je
or
pop
add
mov
notb
inc
data16
mov
push
fsts
and
xor
dec
pusha
shrb
hlt
sbb
out
jbe
push
jp
lods
enter
test
sti
fdiv
hlt
mov
mov
movsl
adc
and
aam
xchg
jb
push
test
shll
ror
pop
xlat
stc
arpl
loopne
fcmovb
outsl
adc
dec
loopne
sbb
repnz
push
xchg
inc
jnp
les
iret
adc
or
les
mov
lahf
and
jge
je
adcb
cmp
jp
fsubrl
fnsave
xchg
dec
mov
push
scas
gs
jmp
dec
scas
dec
or
pop
xor
into
aaa
push
or
stos
inc
mulb
add
stos
cmpsb
icebp
push
push
fwait
cmp
fwait
sub
les
stos
das
das
pop
xchg
jecxz
sbb
xor
push
imul
inc
aad
sub
push
fidivrl
inc
push
mov
outsb
xor
mov
sbb
jl
lret
jae
mov
loope
adc
sub
test
das
cmpsl
and
pop
lcall
push
sbb
imul
aam
lea
mov
hlt
fcmove
inc
pusha
pop
add
aaa
cmpsb
loopne
xchg
scas
cmp
add
cmpsb
or
imul
movsb
lea
lods
xor
push
inc
test
cmp
mov
jmp
mov
push
stos
xchg
sbb
sub
push
lahf
aas
inc
inc
mov
mov
fstpt
pop
mov
cld
mov
mov
pop
xor
jg
inc
mov
mov
xchg
push
cltd
xor
dec
mov
mov
lds
into
sub
mov
adc
adc
add
fwait
xor
push
adc
lret
fsubrl
pop
rol
pushf
mov
xor
add
adc
std
mov
adc
jge
cmp
fucom
mov
loope
out
dec
aas
in
or
js
xchg
sbb
mov
jo
rcll
fs
xor
fs
jo
xor
insb
js
ljmp
cs
loopne
out
jb
pushf
test
xchg
jbe
stos
cs
add
cltd
imul
dec
shl
jg
lret
shrl
out
sub
scas
and
cmpsb
lds
out
mov
jg
or
jge
xor
and
outsl
push
in
pop
jae
ja
movsb
bound
or
xor
int3
fsubs
movb
push
loopne
pop
fldcw
sub
or
sbb
and
cltd
xor
sub
or
sub
test
js
ss
insl
pop
dec
push
push
sti
push
pop
enter
xchg
cld
cmpxchg
mov
push
pop
ljmp
xor
fisttpl
jg
out
xchg
js,pn
cmp
sbb
adc
adc
testl
sbb
mov
fidivs
jns
lods
fsub
sub
fidivs
xchg
and
fs
xchg
fwait
and
lods
icebp
xchg
pushf
jb
stc
jb
fisttps
xchg
lret
shrb
loopne
dec
out
jge
lret
jecxz
pop
mov
mov
outsl
jns
mov
dec
lcallw
add
aad
test
pushf
test
sub
dec
ja
and
cmp
pop
jb
mov
test
das
pop
aas
add
pushf
int
xor
push
fmuls
test
add
mov
lods
lret
lcall
push
cltd
popf
cmp
popa
lods
xor
mov
pop
jg
mov
es
lcall
push
outsb
adc
jecxz
mov
jp
jge
adc
mov
jmp
jae
or
movsb
into
xor
add
xchg
adc
or
or
jnp
lods
adc
mov
or
mov
pop
sub
or
jno
lods
xor
jge
fwait
xchg
rcr
aaa
sbb
mov
xchg
mov
ffreep
out
stos
in
aad
outsl
movsb
aaa
sti
out
fsubrl
xor
mov
mov
xor
and
insl
stos
dec
pop
ss
xor
jl
dec
xor
call
cwtl
loop
cmpsb
out
jae
sub
in
repz
jne
cmc
push
fistpl
inc
xchg
push
xorb
lretw
int3
les
mov
push
jecxz
sarl
je
cli
jne
inc
xchg
mov
gs
inc
sub
jnp
scas
xor
or
pop
lahf
test
xchg
inc
loopne
mov
inc
call
andl
test
insb
push
pop
push
mov
adc
int
lea
cmpsl
xchg
mov
cmp
insb
sbbb
xlat
and
test
dec
inc
mov
test
ss
inc
test
enterw
rcll
shll
in
xor
rdpkru
fbstp
adc
int
push
repz
subl
adc
aaa
fdiv
xor
andb
pop
sub
in
mov
xchg
mulb
xchg
sbb
xchg
fcmovb
dec
push
jbe
mov
or
lds
cli
test
sub
push
xchg
dec
jbe
dec
jle
lea
push
push
jmp
out
cmp
add
call
or
inc
mov
repz
xor
jle
sarb
pop
pop
movsl
sbb
xchg
add
test
xchg
add
fisttps
les
lods
incb
shll
or
bound
stos
shlb
fwait
cmpl
shlb
cmp
std
aas
stc
inc
add
test
xor
mov
or
les
xor
push
push
inc
or
pusha
or
jbe
xchg
mov
and
das
pop
leave
ret
sbb
sbb
inc
popa
or
test
repnz
mov
mov
pop
jl
xchg
andb
pop
loop
lds
jmp
xor
dec
hlt
pop
cli
icebp
mov
dec
or
sahf
sbb
jb
in
ret
loop
adc
mov
arpl
cmpb
imul
iret
inc
rol
mov
daa
fldt
andl
pop
arpl
mov
addl
mov
inc
jmp
jl
popf
mov
scas
idivl
mov
and
sbb
negl
aaa
in
mov
jo
mov
andb
and
stos
xor
lock
aad
int3
sbb
adc
mov
loop
loop
or
mov
mov
sar
das
insb
and
cmp
dec
fucomi
ss
dec
sti
insl
cmp
mov
or
out
andb
idivb
sub
loope
imul
cmp
popa
xor
xchg
aam
sbb
leave
fwait
clc
mov
xor
mov
jle
sti
mov
cmp
fs
nop
ja
das
xor
popa
fmulp
iret
decl
dec
and
es
scas
or
rorl
fidivrl
out
jge
mov
in
rcl
mov
das
int
fistps
cmp
mov
jp
sub
gs
fwait
subl
ja
sahf
fisttpl
mov
mov
inc
lret
dec
movsb
aas
or
xor
inc
adc
adc
and
nop
mulb
or
repnz
addb
movsb
fwait
dec
and
add
les
jnp
jge
mulb
movsl
in
mov
dec
jne
and
stos
push
and
cmc
aad
xor
andb
scas
test
in
mov
cmp
mov
js
inc
scas
adc
push
in
dec
js,pt
leave
jbe
pop
pop
dec
pop
ss
int
mov
repz
mov
out
iret
cmp
cli
sub
mov
ss
mov
and
pop
cmp
jo
cmc
sbb
xchg
aam
dec
pop
sub
rclb
jb
pop
xchg
cmp
adcl
repnz
les
push
xchg
pop
enter
daa
sti
sbb
xchg
in
ss
or
outsl
xor
or
pop
pop
jbe
sbb
test
cmpsb
add
test
add
stos
mov
and
call
fstps
jg
xor
dec
out
xor
or
jnp
fsubrl
and
cmc
sub
and
or
movsb
xchg
mov
add
lret
imul
arpl
or
jge
cwtl
ret
fisttpll
xor
sti
arpl
xchg
xchg
mov
xor
insb
xchg
add
mov
or
nop
and
jp
rcrb
push
data16
add
push
rolb
daa
push
jg
xor
pushf
jle
and
sbb
adc
addr16
jne
sub
sub
or
icebp
out
jno
sub
fsubl
or
mov
pop
fcomp
hlt
jb
fidivl
out
loopne
mov
cltd
mov
sbb
or
leave
xchg
add
push
dec
and
cli
nop
add
jp
sarl
adc
insb
nop
xor
jl
mov
ret
or
cmp
or
xor
pusha
pop
js
lahf
movsl
mov
sub
push
mov
mov
out
push
or
sbb
adc
rcrl
out
fsub
or
pop
je
std
in
lea
repz
andl
or
das
mov
dec
outsb
cmp
in
and
xchg
xchg
mov
xor
fwait
lea
jns
xchg
add
or
pop
dec
loopne
mov
dec
notb
pop
mov
and
mov
push
ljmp
sbbl
xchg
js
fcmovnu
xchg
rsm
xor
loopne
fwait
push
inc
mov
jl
xor
test
inc
xchg
mov
idiv
js
mov
test
loope
shrb
cmp
push
pushl
test
jp
cltd
and
cmp
in
les
es
mov
sahf
jmp
pop
xchg
mov
std
mov
cmp
les
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
iret
aas
scas
addl
push
arpl
sbb
lret
xchg
add
dec
call
mov
sarl
mov
in
sbb
push
mov
fsubr
dec
pop
sub
mov
jle
imul
cltd
pop
lea
jle
pusha
sbbb
cmpsb
push
inc
iret
popf
movb
push
jne
les
dec
lock
repnz
jmp
sti
xchg
xor
das
pop
xor
les
xchg
add
shll
or
jne
hlt
or
mov
dec
enter
cmp
jns
cmp
jmp
rcl
aaa
push
inc
mov
pop
mov
mov
adc
sbb
imul
jmp
and
add
out
pop
lahf
outsb
adc
test
sub
test
mov
xchg
loop
cld
pop
fistps
insl
ss
xchg
cs
mov
hlt
dec
pop
or
fisubrl
pop
aad
cmp
test
jo
push
xlat
es
mov
cltd
ds
pop
cmp
and
push
test
pop
or
loope
ficompl
test
rep
pop
stos
and
imul
pop
testl
idivl
add
mov
insl
jb
push
jo
mov
dec
clc
adc
nop
mov
sbb
mov
loopne
addr16
lds
negl
dec
aad
adc
or
mov
in
pop
mov
outsl
cmp
push
xchg
js
xchg
repz
xor
pop
sahf
into
clc
add
mov
xor
mov
xchg
cmpsb
xchg
mov
inc
pop
sub
xor
in
aaa
sub
int
jb
fisttpll
into
stc
add
out
js
xchg
scas
iret
and
xchg
jb
xchg
xor
test
xor
add
pop
test
sbb
test
stc
sbb
sti
in
lea
lea
lds
mov
test
cmc
out
pop
out
insb
cltd
pop
inc
mov
dec
push
xchg
fmuls
aaa
mov
rorb
imul
xchg
clc
cmp
out
dec
pop
std
sub
filds
sub
mov
rclb
sbb
es
popa
sub
cmp
fisttpll
addl
fmul
and
lahf
sub
ret
in
lods
sbbl
and
fs
test
inc
mov
mov
fdiv
les
shrl
mov
jb
mov
or
insl
out
lods
mulb
in
dec
into
aad
mov
fcmovu
adc
add
lret
lods
aas
sub
push
sahf
and
dec
stos
push
lods
insl
xor
dec
mov
sbb
jne
pop
dec
mov
mov
shrd
div
rcrb
fnclex
sbb
dec
pop
push
test
movsl
leave
daa
rcll
cmp
lahf
je
ret
adc
sub
aaa
or
leave
adc
cmp
push
fbld
mov
ss
lods
sub
xor
popf
inc
xor
pop
add
mov
sahf
jb
ja
jns
pop
add
cmp
loop
std
cltd
aas
and
loopne
push
shll
push
jne
pushf
inc
arpl
xor
pop
jns
mov
inc
mov
movsl
xor
repz
leave
mov
pop
outsl
jnp
add
adc
orb
ret
sbb
aam
out
loope
cli
sub
and
xor
lea
cmc
or
and
xchg
cmpsl
inc
enter
xor
stos
insl
push
int
pop
fs
sub
sbb
in
bound
adc
movsb
mov
nop
fmulp
scas
pop
xchg
inc
add
fwait
lods
and
xchg
cmp
arpl
mov
pop
inc
mov
enter
mov
cmp
orb
mov
adc
cmp
bound
mov
pop
jbe
push
dec
mov
sbb
push
xchg
mov
insl
popa
nop
jmp
mov
cmp
sub
js
mov
push
cmp
fidivl
sbb
inc
cmpsb
adc
scas
push
jb
push
xlat
push
aaa
mov
jno
push
fwait
adc
mov
aaa
mov
xchg
in
loopne
pop
add
aas
ss
lea
push
out
loopne
sbb
push
ret
add
push
in
mov
pusha
addr16
sub
andb
dec
xchg
aas
movsb
inc
lret
jmp
xchg
pop
ret
ja
and
pmaddwd
fcompl
je
mov
mov
add
jbe
xlat
jnp
jg
sub
cmp
daa
cmp
push
sub
mov
out
sbb
incl
or
mov
in
gs
pop
mov
cli
cmp
test
outsb
in
ds
mov
xchg
jge
lock
add
xchg
movsb
jp
pop
daa
mov
fisubrs
pop
push
and
pop
fs
sub
test
into
sub
sub
xlat
notl
jg
cmp
stc
pop
andb
push
xchg
jno
scas
pop
xor
mov
or
add
rcl
add
mov
push
jno
push
sti
lods
dec
fcomip
sti
addr16
testb
xor
mov
sub
repz
icebp
mov
sbb
cmp
inc
push
inc
cmp
jns
mov
mov
sbb
mov
jecxz
sti
or
pop
xor
stc
mov
je
lret
scas
pmulhuw
push
mov
cmp
lea
or
mov
xor
jp
fwait
dec
push
mov
jecxz
repz
clc
dec
inc
popl
jg
pop
cmp
mov
mov
cmp
inc
pop
aam
ficomps
shrb
push
mov
out
cmp
adc
arpl
fldl
repz
leave
jnp
and
jmp
es
fwait
stos
enter
add
sbb
push
je
leave
sahf
sbb
fldcw
push
or
out
dec
pop
cld
cmp
dec
cmc
mov
pop
xchg
bound
scas
jbe
rorl
leave
pop
div
sub
lret
mov
stc
lret
ret
xchg
aad
lock
pop
push
sub
xchg
scas
rclb
xchg
lock
xchg
mov
shl
bound
push
cli
sbb
les
mov
sbb
das
fldt
push
inc
rcll
testl
sahf
or
clc
stos
pand
into
aad
ja
fstps
add
mov
xlat
jb
xchg
into
aam
xchg
lods
pop
xchg
pop
pop
sti
pop
jl
xchg
xor
mov
roll
mov
mov
xor
popa
std
enter
xchg
pop
dec
mov
sbb
scas
pop
jp
pop
mov
push
cmp
jnp
das
scas
fidivl
fsubrl
lock
in
xchg
or
loop
mov
push
adc
or
pop
es
mov
ret
loope
les
imull
jnp
dec
mov
popf
pop
mov
clc
xchg
fisubl
mov
ss
dec
stos
outsl
ja
jae
cmp
push
add
dec
sub
in
mov
ficompl
mov
sti
adc
add
dec
add
pop
iret
hlt
cwtl
push
or
fst
pushf
inc
out
sbbl
cmc
lds
in
push
orb
stos
cmpsl
mov
and
sbb
mov
int3
jno
outsb
xchg
das
add
push
test
dec
test
and
rep
fimull
fistpll
cmp
adc
enter
mov
orb
cwtl
cmp
int
loopne
pop
sti
ret
mov
inc
and
or
lcall
cmc
cmp
or
push
bound
incb
xchg
push
mov
js
adc
outsl
divl
adc
mov
cmp
inc
ret
mov
pop
movsb
and
popa
into
and
rorl
mov
rcl
orl
mov
jbe
sbb
data16
addr16
out
or
ffree
xchg
pop
fldl
inc
sbb
aam
xchg
cs
stos
xlat
rolb
shlb
pop
ja
adc
inc
adc
scas
jb
xorl
inc
imul
dec
movsl
aaa
sbb
and
sti
notb
adc
pushf
xlat
mov
test
xor
mov
xor
push
and
lret
cmc
movsl
mov
pop
js
dec
sbb
insl
lock
jo
pop
cmp
pop
mov
push
push
test
ret
xor
and
enter
add
add
in
orb
cmp
test
adc
popf
fstps
movsl
call
cwtl
rclb
scas
repz
pop
or
inc
xor
mov
nop
insb
test
pusha
cmpsb
test
mov
outsl
mov
or
and
or
in
mov
or
in
stc
cmpb
arpl
out
cli
fmul
mov
dec
lea
or
xchg
cwtl
pop
sub
and
inc
cmpl
cmp
dec
enter
ret
fdivr
jne
ficoml
mov
sub
sarb
scas
rorl
out
and
filds
ficompl
cs
mov
push
cmp
jo
pop
and
dec
xchg
addr16
repz
cli
jo
xor
aaa
jbe
call
sub
fists
test
xor
xor
mov
ret
fstpl
sar
mov
imul
jg
les
mov
inc
pop
inc
cmc
clc
test
rolb
popf
inc
adc
jl
pop
mov
cmp
adc
adc
or
daa
pushf
les
dec
sub
mov
popf
imul
cltd
xchg
test
mov
mov
movsl
pop
push
and
add
shlb
pop
imul
je
je
cs
jno
std
outsb
jmp
pop
or
mov
add
cwtl
add
cmp
jnp
sub
add
pop
add
inc
mov
aaa
int3
sub
pop
repnz
xchg
into
outsl
adc
lret
pop
cmp
add
sbb
call
cmp
cmp
jg
xchg
push
int3
push
lea
movsl
loop
cli
clc
fisubl
out
or
ret
lahf
cmpsl
mov
xor
jnp
sub
daa
pop
jns
mov
insl
xor
out
addr16
add
test
daa
jb
jns
cmpsb
and
inc
jae,pn
xchg
dec
movsl
add
mov
sbb
lcall
inc
xor
call
sbb
mov
sbb
cli
in
test
lea
sbb
jnp
mulb
xor
lds
push
int3
lret
movsb
sub
xchg
shl
in
push
sbb
add
insb
das
mov
ss
mov
xchg
jl
xchg
subl
xchg
stos
or
sbb
icebp
mov
sbb
bound
lcall
or
ja
das
pop
mov
jbe
daa
mov
cmp
push
jo
xor
or
adc
arpl
paddusb
test
in
jae
push
jl
notl
adc
mov
cmp
mov
movsl
inc
js
adc
push
js
test
mov
dec
sbb
dec
jno
adc
rcl
xchg
rcrb
mov
and
stos
insb
fidivs
repz
add
movaps
jge
and
into
fwait
inc
and
cmp
push
mov
jns
stos
pop
cltd
pop
mov
xchg
xchg
jo
dec
enter
mov
jbe
jle
sbb
stos
xor
jl
adc
push
and
mov
out
ret
adc
mov
cmp
mov
mov
xchg
fwait
push
add
cmp
int
cmp
mov
xor
xchg
mov
aaa
inc
pop
push
inc
dec
sbb
repz
les
shlb
rclb
rorl
mov
and
pushf
imul
or
jle
jns
adc
cmc
movsb
popf
push
xor
adc
push
mov
push
inc
repnz
add
rcll
add
xchg
adc
cmp
stos
dec
cmp
shll
jecxz
pop
mov
cmpsl
add
outsl
enter
pop
pop
mov
hlt
and
insl
test
xchg
inc
sub
clc
out
dec
or
mov
mov
fdivs
enter
inc
andb
jb
mov
pop
sbbb
enter
pop
jecxz
filds
sub
or
bound
inc
inc
and
mov
xchg
jecxz
or
lods
hlt
fdivs
sub
add
pusha
cmc
dec
fldt
in
cmp
es
fcom
push
push
aas
push
cmp
jle
fisubrs
sbb
inc
add
and
mov
add
jmp
xchg
pop
add
ret
cmpsl
pusha
add
insb
clc
repz
xor
popa
adc
dec
je
push
ss
lock
sahf
loope
je
xor
sbb
jl
stc
or
fdivr
jo
add
out
std
sub
sub
repnz
aam
pop
lahf
and
ljmp
xor
inc
enter
movsl
add
icebp
imull
sub
lret
fcoml
jne
outsb
sbb
push
fstpt
jno,pn
inc
mov
adc
gs
jne
pop
es
mov
pop
push
pop
mov
jmp
jmp
lret
mov
fcmove
inc
jle
stc
insb
cmp
into
or
out
mov
fwait
or
dec
inc
call
movsl
sbb
add
jmp
test
lahf
cld
out
stos
and
sub
iret
xchg
dec
in
loope
jbe
shr
ret
pop
xchg
insl
sub
adc
cld
pop
stc
add
add
test
inc
mov
add
fwait
push
sub
cli
pop
pop
mov
and
xchg
pop
mov
scas
mov
push
xchg
mov
jnp
outsb
cmpsl
sbb
mov
mov
xchg
and
mov
jne
mov
pop
mov
shll
dec
adc
pop
xchg
dec
jl
push
mov
sub
aam
dec
fisttpl
rcrb
mov
adc
push
xchg
popf
add
loop
or
jge
jg
test
mov
mov
dec
test
cltd
push
mov
pushf
stos
lds
adc
out
push
adc
cmp
fs
dec
aas
js
dec
ljmp
mov
mov
xchg
les
cmp
and
scas
sarl
test
pop
stc
jbe
sahf
in
cs
scas
sbb
inc
jb
mov
cmpsb
mov
jno
ja
add
add
fistpl
cmp
mov
mov
jmp
adc
inc
insb
sbb
mov
outsb
add
ret
dec
adc
mov
mov
test
aaa
nop
inc
pusha
xor
lds
push
xor
or
imul
dec
xor
pushf
jae
jno
aad
lret
lcall
fildl
aam
xor
nop
in
es
push
mov
mov
sub
mov
xchg
shl
fs
lock
call
movsb
cmp
leave
cltd
cld
das
imul
aad
pop
push
dec
outsl
adc
mov
rorb
daa
xchg
ficoms
inc
pop
sub
push
inc
fsubp
loope
mov
jg
add
cs
shrb
jo
jmp
popa
add
cmp
push
shlb
xor
icebp
xchg
and
les
out
and
out
es
js
mov
pop
cmpsb
lods
jl
or
inc
jae
sub
movsb
mov
enter
insl
lock
insb
mov
and
mov
fdivs
push
sbb
lods
push
sub
mov
pop
push
popf
or
into
push
repnz
loope
sbb
push
gs
in
jb
clts
jno
ficompl
in
fdivrs
scas
inc
pop
dec
sub
jbe
dec
loopne
cmp
pop
aad
push
mov
outsb
xlat
jmp
jae
insl
scas
rolb
or
cmovg
imul
sub
nop
or
push
cmp
ss
ss
mov
addb
cmp
push
xor
and
icebp
jmp
loop
sarb
push
daa
inc
push
adc
mov
stos
ret
push
mov
rol
jne
ret
cmp
add
sbb
mov
lods
insl
lods
arpl
add
push
mov
out
or
fistl
mov
divb
sarl
gs
dec
mov
stos
rcrl
cltd
shll
adc
js
in
fildl
pop
stos
pop
sahf
in
stos
mov
mov
push
jg
add
fdivs
insl
dec
and
push
cwtl
test
fists
or
pop
pop
mov
mov
in
shlb
insl
mov
lahf
jns
ret
inc
push
dec
cmpsb
shll
jbe
ja
pushf
push
xor
lods
cmp
int3
cmp
ss
je
scas
mov
insb
shlb
nop
and
jge
lahf
add
mov
lcall
fstl
stos
xchg
adc
int
sarb
add
cmp
inc
les
pop
rcrb
in
sub
sbb
lcall
and
dec
nop
sub
dec
loop
push
cli
movsb
dec
lea
adc
cmp
xor
xchg
xchg
xchg
ss
pop
out
push
inc
sub
xchg
dec
cmp
iret
push
jle
mov
cmp
push
iret
cmp
dec
aam
cmp
sbb
mov
into
add
xlat
shr
and
bound
lods
insl
mov
cld
callw
jg
or
subb
xor
jne
jl
mov
ss
loope
pushl
push
cmc
lods
daa
xor
and
pop
aad
sbb
pop
mov
cmp
imul
pop
mov
shrl
subb
lock
push
out
mull
movsl
mov
pop
inc
xor
cmpsb
adc
ja
mov
ret
jmp
shll
fistps
dec
jle
or
adc
lahf
pop
mov
fiadds
lods
cli
adcb
sbb
xor
mov
adc
sti
fcomp
daa
push
inc
ret
mov
adc
scas
ja
js
pop
sarl
sbb
adc
and
push
sbb
mov
mov
test
mov
pop
xchg
mov
stc
pop
pop
pop
js
notb
or
orl
push
sbb
push
repz
je
lock
mov
pop
adc
ja
xor
xchg
and
cs
iretw
sbb
ja
fs
jge
mov
cmpsl
pusha
mov
js
insl
and
popf
and
pushf
iret
mov
pushf
sbb
pop
rolb
daa
imul
ljmp
pop
inc
mov
outsb
cmp
je
iret
pop
sbb
loope
push
rorb
push
lcall
scas
sub
or
push
pop
in
sti
jae
sbb
fdivl
inc
int
jns
pop
xchg
icebp
aaa
hlt
mov
fisttpl
push
ss
mull
ret
adc
xchg
rol
sbb
fsubl
adc
mov
fdivs
dec
in
push
loop
add
subl
call
dec
mov
jp
stos
add
jno
lods
xorl
inc
std
stos
cli
xor
xchg
in
loop
clc
add
add
pop
cld
movsl
imul
movsb
add
in
jb
les
jbe
adc
cmp
sbb
andnps
inc
in
aad
lcall
mov
jle
iret
lds
ror
outsl
nop
cmp
and
mov
test
push
call
push
mov
fcoml
mov
cmp
jns
adc
sbbl
push
jns
aad
hlt
js
cld
dec
mov
or
and
shll
jecxz
mov
fucomip
scas
je
jp
mov
or
push
inc
pop
inc
shlb
xor
mov
out
std
cli
stc
aad
lcall
cmpsl
mov
xlat
xchg
outsb
push
push
ud2
and
push
push
dec
and
addr16
cmp
icebp
sbb
lret
addr16
cmp
or
cmp
pop
pushf
xor
push
inc
ss
cvtps2pd
lret
jno
lea
shll
icebp
bound
xchg
push
add
inc
popf
mov
cmpsl
add
rcr
fmuls
sahf
xor
js
stos
mov
push
pusha
pop
js
aas
hlt
lcall
sbb
ret
les
pop
inc
or
out
test
and
sbbb
push
inc
movsb
lock
in
add
wbinvd
adc
or
fxch
xlat
adc
mov
mov
pop
xor
xchg
pushf
subl
xor
jmp
repz
sbb
lea
dec
aas
outsl
sub
fwait
iret
add
aaa
mov
xor
sub
sbb
mov
cld
push
sub
in
adcb
js
sub
lret
push
jae
fcompl
mov
fcmovb
scas
loopne
inc
and
mov
rorb
sbb
mov
mov
lock
test
daa
dec
popf
and
clc
test
sahf
mov
in
data16
fwait
jnp
push
push
pop
mov
js
arpl
sbb
dec
or
mov
std
xor
sbb
data16
xor
jle
lea
fistpl
jmp
xchg
push
leave
add
mov
es
mov
divb
enter
inc
lods
push
mov
inc
sbb
lret
mov
adc
mov
dec
or
sbb
and
mov
popa
mov
mov
mov
push
or
jo
hlt
and
insb
mov
pop
adc
sub
ja
push
add
aas
pop
sbb
mov
dec
out
add
or
lret
in
test
jl
data16
std
jb
insl
js
mov
xor
inc
jp
cs
mov
je
int3
loope
jl
fwait
jge
fsubrs
popf
push
mov
cmp
jnp
call
out
sti
fcmovb
push
int
enter
insb
sub
mov
in
xor
ret
and
cmp
mov
pop
hlt
add
in
in
cmp
dec
dec
out
sbb
xchg
mov
andl
hlt
mov
lods
sbb
push
outsl
and
fndisi(8087
mov
jbe
xchg
daa
mov
mov
pop
jp
and
cmp
pop
lret
pop
repz
outsl
js
sbb
arpl
sahf
and
mov
fmuls
add
scas
jo
aaa
in
mov
push
or
jo
jae
call
pop
fmull
mov
mov
xlat
in
sub
sub
pushf
sbb
pop
gs
jle
inc
sub
sti
push
push
popa
les
push
pop
or
push
int
ret
sti
xor
mov
add
sub
pop
push
dec
lret
lcall
and
pop
mov
mov
and
adc
pop
adc
xor
inc
scas
js
in
dec
dec
xchg
mov
dec
xchg
andl
push
jmp
inc
and
pop
mov
inc
lods
pop
xor
fdivs
sbb
mov
inc
into
lahf
cmpsb
lret
jbe
stc
stos
in
stos
leave
inc
into
jbe
xlat
imul
fisubrs
sub
cmp
out
clc
scas
test
push
inc
popf
pop
and
in
addr16
lret
ss
out
jmp
insl
imul
call
push
scas
mov
jg
xor
in
push
out
aad
adc
scas
out
and
mov
bound
xchg
mov
aaa
call
push
movl
push
sub
and
push
xchg
push
imul
arpl
subb
jnp
add
das
xor
test
xor
test
xchg
loop
mov
cmp
mov
or
push
adc
add
test
cmp
or
jp
repnz
test
shlb
push
inc
stos
push
jecxz
xor
push
pop
pop
add
or
inc
dec
aam
mov
notl
mov
dec
xchg
movsl
and
mov
scas
pusha
popa
inc
mov
jae
stc
cmp
add
mov
insb
nopl
jno
lods
add
sti
inc
dec
sbb
xor
mov
lods
fsts
pop
sub
sbbl
scas
jl
fwait
or
add
in
push
lcall
fbstp
mov
lahf
pop
mov
jle
adc
and
xchg
push
int3
aaa
and
xchg
or
push
or
pop
cmpsb
lret
xchg
push
pop
gs
in
cmc
or
in
cmpsb
sub
pushf
add
lock
jge
rcrb
sub
push
pop
push
adc
fcmovnu
push
pop
xchg
inc
je
dec
in
sbb
push
adc
loope
insb
xor
or
dec
sub
scas
pop
repnz
xor
mov
outsb
repnz
in
add
mov
mov
mov
in
arpl
adc
xor
push
loope
insb
jle
shrb
imul
insb
ja
enter
enter
movsl
push
and
dec
scas
xlat
or
mov
jo
mov
or
mov
ret
inc
mov
jb
int3
lock
xchg
imul
push
push
je
std
adc
fisubrs
sahf
fcmovbe
sub
mov
cmp
sbb
cmp
dec
jle
xchg
dec
int3
imul
lds
xchg
lcall
xlat
fwait
fwait
push
rorl
push
imul
xor
mov
cld
cmp
sub
sub
aas
xor
and
popl
and
jge
aaa
add
icebp
inc
dec
xchg
sbb
pushf
cmpsl
pop
in
dec
xor
in
das
or
dec
add
cmp
pop
push
jae
and
movsl
sub
mov
das
loope
lcall
into
out
imul
les
adc
mov
insl
test
ljmp
sbb
rcrl
aad
inc
idivl
cmp
ret
dec
xchg
adc
out
lret
adc
inc
sub
add
divl
out
pushf
pop
imul
or
push
outsb
pop
jns
xor
pop
nop
cmp
add
adc
movsb
add
xchg
inc
in
faddl
cld
sbb
mov
and
in
adc
icebp
push
lret
or
push
jge
push
xor
sbb
out
fcompl
xchg
fwait
jb
sbb
insl
dec
fxch
jp
cmpb
pushf
inc
pushf
aaa
imul
dec
mov
xor
cmp
mov
sbb
cmp
bound
fists
sub
mov
nop
fistpl
loop
push
inc
fimuls
ret
push
popf
insl
sbb
call
dec
and
imul
xchg
sub
scas
mov
push
out
xchg
insl
int3
mov
jne
inc
push
xchg
gs
dec
and
or
push
aad
pop
dec
gs
pop
clc
sti
jb
lret
mov
or
mov
icebp
pxor
jbe
inc
mov
sbb
stc
inc
fsubs
out
ds
or
sarb
mov
add
pusha
repnz
adc
test
es
mov
xchg
push
imul
lods
sarl
test
and
push
xor
idivl
jecxz
xchg
xchg
mov
mov
sbb
fnsave
pushl
xor
adc
ljmp
push
and
or
xchg
fstl
test
loop
mov
mov
inc
scas
push
popf
pop
popf
cmp
xor
mov
sbb
fcoms
adc
pop
inc
xorl
in
sbb
add
dec
clc
adc
imul
xor
notb
sub
cmp
mov
sub
mov
repnz
out
inc
and
add
leave
loop
in
xchg
sub
cwtl
popf
mov
ret
jmp
adc
loopne
testb
or
add
sar
or
shlb
rorb
sbb
pop
and
sar
cmp
mov
cltd
scas
ror
or
xchg
push
in
mov
nop
xor
xorl
jmp
adc
std
cmp
xchg
sbb
mov
int
and
shll
mov
dec
xor
and
dec
dec
push
mov
sar
inc
mov
rclb
jmp
pop
jno
dec
mov
pop
or
fcoms
out
out
push
imul
aam
xor
push
pop
add
add
imul
lods
rcr
call
fcmovnu
mov
int3
xor
sub
jmp
mov
adc
loopne
inc
push
pop
fs
jo
sti
xchg
ljmp
out
test
arpl
pop
inc
mov
gs
outsl
push
sbb
insb
addb
das
mov
inc
std
aas
clc
mov
test
mov
les
mov
mov
icebp
cmp
test
inc
loopne
add
mov
in
inc
sbb
iret
mov
shl
sarl
pop
jb
out
inc
sti
jp
and
std
mov
sbbb
pop
jg
xchg
loop
inc
int3
rcll
rorl
addb
sbb
out
test
lods
les
das
loop
sub
xor
stos
and
repnz
sub
inc
aad
in
mov
leave
push
mov
mov
sub
fidivrl
aas
add
jno
sub
and
add
lock
imul
dec
loop
dec
mov
push
push
sbb
jle
add
testl
dec
cmp
adc
mov
fdiv
sub
sub
mov
mov
and
adc
push
mov
xor
out
rclb
stos
inc
inc
fwait
std
mov
dec
movsb
pop
ret
test
mov
mov
push
mov
pop
inc
push
imul
cmpsb
mov
xor
repnz
scas
jns
pop
out
test
stos
push
insb
aam
push
stos
lock
mov
das
js
mov
stos
mov
cmp
xchg
inc
xor
mov
movsb
aam
jl
movsb
sbb
rcrb
insl
lds
into
or
insb
xor
rclb
out
js
int3
cmp
xor
xlat
xor
pusha
outsb
lock
jle
fs
inc
pop
sbb
es
gs
jp
sub
lods
mov
outsl
add
test
mov
into
pop
sub
push
arpl
scas
xchg
in
cmp
aas
dec
fidivrl
in
pop
test
xor
push
popf
mov
stos
testb
jbe
xchg
jo
sbbl
and
hlt
fldcw
sub
xchg
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
div
jbe
inc
cli
mov
sbbl
adc
out
ret
inc
xorb
scas
imul
mov
icebp
pushf
lret
rclb
js
shlb
fisttps
add
out
pushf
mov
fmuls
ds
lds
je
aam
pusha
das
loop
gs
and
jb
jbe
push
mov
int3
mov
push
inc
stc
push
adc
adc
test
add
jo
add
sbb
mov
and
fs
data16
mov
out
in
lahf
cmc
into
xor
ss
pop
dec
imul
adc
push
sbb
push
cmp
imul
mov
sub
xchg
jecxz
arpl
daa
fwait
shl
mov
sbb
fnstcw
jp
xchg
call
fs
clc
push
xchg
test
call
lds
jb
push
push
stos
rol
ss
mov
push
popf
outsl
aad
das
mov
clc
loope
movsb
and
xchg
cwtl
lds
pop
pop
fwait
adc
mov
bound
mov
ja
lock
xor
sbbb
cltd
push
xchg
push
push
fbstp
adc
jp
and
add
sbb
mov
aas
lcall
in
aaa
push
out
adc
repz
out
movsl
push
arpl
mov
sbb
ret
in
xchg
cmp
push
inc
xor
stos
addl
inc
std
rol
push
fwait
ret
leave
mov
dec
aas
or
call
mov
fistl
cld
repz
jns
in
dec
sahf
fsubp
jb
mov
leave
inc
andl
mov
stc
or
cmp
sbb
mov
pop
pop
mov
sbb
push
add
rorb
jge
pop
in
lcall
push
dec
mov
fimull
test
clc
imul
fwait
pop
pop
mulb
xor
fidivrs
outsb
out
cmp
mov
sbb
int
enter
cmc
mov
es
aad
or
push
sahf
int
mov
mov
and
jnp
ret
lds
shl
mov
cli
in
pushl
call
push
addb
pop
push
inc
jne
push
jne
mov
adc
push
and
fiadds
sbb
xchg
lods
inc
popa
xchg
pop
rolb
xor
rorb
pushf
inc
pop
aaa
xchg
mov
in
mov
fstps
xchg
push
lcall
dec
xor
cmc
adc
int
sbb
push
push
mov
stc
jno
mov
push
jns
inc
cmp
push
mov
fcompl
cmp
xchg
xor
pop
movsb
add
inc
enter
sti
fnstcw
push
stc
mov
and
cld
inc
push
enter
inc
mov
out
sbb
mov
fisubrl
stos
ret
jnp
fsubl
adc
pop
flds
adc
dec
push
pop
lds
sbb
shlb
test
lahf
or
test
pop
sbb
lods
in
in
ljmp
dec
jns
jg
adc
mov
mov
jne
push
cmp
xchg
mov
in
shrl
fbld
pop
mov
fsts
js
mov
ret
mov
cld
mov
mov
or
cmc
push
sub
push
jno
repnz
imul
sub
negb
or
repnz
sbb
movsb
imul
out
mov
fildl
sar
xor
insl
das
mov
into
lret
xchg
mov
mov
cmpsb
mov
and
jg
fs
leave
int
mov
xor
and
out
sub
dec
cmc
jno
sub
test
mov
fucomp
xor
xor
jns
xor
test
jge
pushf
and
adc
mov
sbbb
jae
pop
pop
dec
pop
jge
stc
aas
dec
inc
xchg
cs
lods
mov
imul
push
or
adc
in
adc
xchg
stc
fstpt
mov
cli
or
or
sbb
mov
adc
cmpsl
xor
sbb
mov
xor
lock
repz
pop
push
sub
lods
xchg
or
jnp
mov
mov
flds
mov
or
push
or
xchg
mov
xor
call
inc
mov
push
adc
insl
jecxz
inc
and
movsl
or
subb
jp
popa
xchg
insb
inc
jg
stc
nop
sbb
test
fwait
js
dec
in
lahf
dec
test
sub
fisttpl
inc
mov
jbe
in
out
adc
enter
and
xor
add
cmp
ret
sub
ljmp
jbe
andl
fcmovne
popf
mov
out
sbb
sbb
and
push
cmp
hlt
push
add
sti
pop
je
add
dec
push
fstps
mov
mov
popa
xor
sub
adc
stos
test
in
insb
rol
jge
push
jecxz
cmpsl
or
rclb
jne
mov
cwtl
push
sub
addr16
jns
mov
lahf
stos
cmpsl
xadd
shrl
xchg
inc
add
xchg
shll
push
sub
movsb
js
jl
xlat
mov
mov
sbb
cmpb
push
pop
inc
fs
movsb
jae
mov
fstps
mov
hlt
jae
adc
xlat
mov
dec
fdivs
out
mov
mov
ljmp
fstl
and
std
push
jg
into
dec
xchg
push
mov
jnp
cmp
ljmp
popf
and
inc
dec
ret
inc
mov
popa
cmp
xor
jnp
dec
mov
ret
add
push
xor
pop
iret
pop
dec
out
and
out
jnp
add
jecxz
hlt
cmp
rol
out
jge
lock
aam
movl
loop
daa
pop
int
push
cld
xchg
shll
push
and
or
stc
sahf
nop
std
ret
pop
push
std
push
test
dec
loope
mov
jne
mov
dec
mov
xchg
aad
pop
pop
xchg
addr16
sbb
loopne
mov
movsl
cwtl
jle
insl
in
sbb
scas
jmp
xorl
push
stos
mov
test
out
mov
std
outsl
lods
roll
xlat
rcrl
xchg
ja
jnp
mov
pop
inc
icebp
ja
in
inc
or
mov
or
adc
pop
pop
repz
xchg
mov
or
sbb
cmp
lahf
fistps
cmp
hlt
mov
imul
pop
xor
movsb
and
mov
aas
rclb
xchg
add
mov
aas
fsubs
mov
ds
push
cmp
icebp
push
push
sbb
loopne
sbb
add
add
cmp
push
add
xchg
sbb
jecxz
dec
add
in
fsubrp
or
es
xchg
cmp
insb
loop
pop
push
lock
sbb
sbb
xchg
cmp
bound
xchg
fistpl
mov
pop
pop
and
daa
lret
mov
decl
pop
xchg
jb
dec
in
pop
aaa
clc
push
mov
ret
inc
xchg
loop
sbb
insb
fs
add
div
xchg
dec
jns
data16
lcall
repz
sti
adc
cmp
sub
jo
or
fmuls
aad
fnstsw
sbb
push
sub
int3
fdivp
dec
xchg
fsubrs
fwait
sub
inc
xchg
add
mov
inc
push
push
push
aad
cmp
jmp
loopne
mov
pop
js
icebp
inc
lret
aam
xor
adc
fidivs
or
int3
leave
adc
cmc
hlt
xchg
icebp
add
out
inc
cld
aas
cmp
xchg
add
jae
and
in
mov
xchg
adc
pop
mov
fstps
push
shll
pop
add
xor
lods
loope
xchg
leave
clc
push
lea
shl
cmp
pop
push
subb
enter
fs
or
test
jle
mov
jp
subl
js
xor
imul
inc
adc
push
xor
mov
dec
jae
vpsrad
loope
stos
cmp
popf
lock
ret
jo
jg
cmpsb
in
in
imul
mov
sub
or
shr
cmp
jge
stos
sub
adc
or
fstl
mov
sbb
push
test
cli
jae
leave
sbb
push
outsb
push
or
insb
fcmovne
xchg
dec
inc
mov
out
xor
fs
xchg
jo
pop
dec
mov
sahf
lods
push
xchg
sub
out
adc
in
call
push
and
jb
push
jns
pusha
mov
sbb
mov
cld
cmpsb
insl
inc
in
inc
popl
call
mov
push
dec
pop
adc
cmp
fisttpll
cmp
dec
rcr
lea
idivb
out
movsl
cmc
in
mov
mov
mov
in
arpl
cmpl
and
fsubs
data16
jb
add
pop
movsl
cmp
xor
in
pop
jp
pop
ds
jecxz
into
lds
ja
lock
jbe
gs
fs
cmp
lock
std
xchg
mov
dec
or
inc
inc
scas
inc
xlat
dec
mov
or
mov
inc
cld
cltd
mov
ret
cmp
xchg
call
pusha
fisubrl
jl
sub
jmp
or
icebp
mov
cmp
mov
js
test
stc
jmp
mov
lods
ja
orl
and
daa
es
ret
pop
ret
lcall
push
stos
shll
sub
ret
cwtl
test
cmp
aam
gs
mov
repnz
out
and
fwait
sbb
lods
popf
stc
lods
jge
gs
sbb
cmp
imul
lods
das
cmc
cmp
inc
xor
jmp
stos
sbb
dec
or
cmpsl
lds
fsubrs
adc
jl
stos
mov
add
xchg
test
addr16
pop
aaa
nop
and
jne
add
outsl
push
inc
cmp
pop
imul
shl
xchg
daa
scas
mov
mov
shll
pop
sbb
mov
sbb
test
mov
cmpsb
movsb
cmpsb
cmc
adc
sbb
out
ret
mov
mov
loopne
es
ss
mov
mov
cmp
adc
clc
jae
stos
roll
imul
nop
and
pop
pop
inc
pop
mov
sarb
out
lods
sbb
push
aad
mov
or
sahf
sar
cmpsl
mov
jecxz
jo
sbb
shrl
mov
cmp
movsb
inc
xlat
jecxz
ds
mov
add
sti
repz
aas
repnz
mov
jl
mov
jae
cmc
lcall
dec
push
das
push
popa
cmp
sahf
jge
roll
mov
mov
loopne
call
xlat
xor
stc
push
cmp
test
add
into
fwait
in
push
rcrl
pop
in
and
outsb
nop
pusha
repnz
fstl
out
push
mov
insl
push
in
xchg
rolb
cmpsl
jno
mov
xchg
add
shlb
jne
push
ss
xchg
es
fiaddl
aam
stc
jne
sub
jl
mov
lods
adc
call
leave
aam
dec
mov
mov
mov
mov
pusha
dec
repnz
adc
mov
xchg
adc
insl
sub
jbe
or
and
movsb
pushf
add
pop
push
sub
mov
out
xchg
into
loopne
loop
movsl
popa
dec
into
pop
lea
add
fs
cmp
or
movsl
lods
dec
in
or
cwtl
mov
mov
in
loop
repz
ja
cmpsb
fnstsw
clc
mul
dec
rorb
mov
es
sub
lock
loopne
dec
shll
js
arpl
movsb
out
sahf
cmp
add
push
in
xor
add
sbb
aam
cld
push
lods
stos
sbb
cmp
xchg
sub
lods
push
push
sbb
jb
ret
push
ficoml
xchg
jb
scas
mov
inc
mov
jnp
and
jbe
xor
shlb
cmc
jmp
mov
cli
dec
and
cmpsl
push
ss
aad
mov
ljmp
shlb
mov
dec
mov
out
aad
stos
aaa
rolb
sahf
shrl
lret
pop
cmp
cmc
incl
lock
push
mov
cmpsl
push
lret
or
repz
push
outsb
cmp
xchg
cs
pop
sub
dec
std
xchg
repz
xchg
inc
sar
push
sbb
or
jmp
mov
imul
push
mov
xchg
mov
scas
sar
cwtl
stos
call
xchg
add
in
cmpsb
push
mov
insb
xchg
lahf
jge
test
jle
inc
movsb
movsb
pop
shlb
enter
mov
push
xchg
dec
andl
mov
test
arpl
xchg
push
mov
xor
xor
adc
jns
clc
icebp
push
stc
sub
pop
sub
std
sub
popf
jnp
jno
outsl
mov
aas
mov
mov
inc
into
jb
jle
mov
imul
je
aad
aam
inc
inc
jg,pn
inc
cmp
flds
popf
ds
cmpsb
in
cmp
pop
ret
add
push
or
cld
cmc
pop
js
add
sub
mov
stos
dec
pop
xchg
adc
jecxz
and
test
test
cmp
in
jle
jb
nop
jne
pop
clc
pop
lret
xor
cmpsl
std
insb
ds
inc
data16
mov
push
pushf
loop
popf
xchg
sub
mov
sub
in
sbb
xor
xchg
loopne
push
jne
pop
subb
sub
or
sbb
rclb
int3
or
sbb
xor
push
cmp
xchg
sub
pop
fiadds
inc
adc
xchg
pop
inc
ss
or
mov
mov
inc
mov
sub
daa
sti
ja
les
or
push
dec
push
dec
and
xchg
inc
andb
mov
push
outsl
xchg
into
pop
out
adc
mov
mov
loop
mov
mov
sub
jno
cs
shrl
mov
mov
jne
dec
ja
es
jo
aad
cmc
push
enter
aas
int
out
mov
sub
push
or
std
fs
inc
fwait
in
add
mov
mov
push
dec
int
xchg
clc
mov
push
call
mov
adc
push
cld
adc
lods
dec
add
aam
push
loopne
jle
xor
and
push
ficoms
cmovs
jg
es
mov
aam
repnz
gs
cwtl
rorb
shll
push
add
push
cmp
push
sbb
mov
or
cmp
or
icebp
add
lahf
loopne
adc
clc
mov
mov
in
imul
inc
fisttpll
insl
movsl
repz
cmp
insl
inc
dec
pop
xor
and
xorl
loope
xor
or
insb
stc
sub
and
xor
hlt
jmp
insl
pushf
aad
xor
xor
mov
cli
add
cmp
movsb
pop
mov
stos
jl
xchg
jg
rclb
adc
shrl
add
xor
mov
stos
and
int3
push
or
add
mov
sbb
cld
add
pop
push
pop
add
push
add
lea
outsl
mov
sub
sbb
aad
and
or
js
std
sub
test
leave
mov
mov
push
and
sub
cmp
mov
sbb
and
push
xchg
fsts
sbb
cli
xor
pop
push
and
inc
insb
lret
add
pop
adc
icebp
jl
or
fstl
adc
fsub
push
xchg
rorb
push
mov
dec
xchg
subb
lret
dec
scas
fldl
in
xor
nop
add
or
out
mov
mov
mov
jge
adc
mov
sub
int
ljmp
aad
iret
jecxz
ret
add
rcr
xchg
outsl
popa
and
js
fistpl
fisttpll
add
gs
popa
jae
lcall
pop
add
out
inc
push
mov
adc
or
pop
setp
and
jo
loop
dec
push
out
jle
jecxz
inc
cmpsl
fmulp
je
cmpsb
pop
cld
pop
add
arpl
fnstsw
test
mov
fildll
into
fsubs
cmpsb
jmp
inc
iret
bound
sub
testb
lock
addr16
inc
push
xor
in
add
pusha
sbb
jl
cmp
jno
imul
imul
add
pop
pop
xorb
xor
sarl
into
test
cmpl
cltd
psrlw
je
insl
add
xchg
pop
dec
imul
sbb
and
xlat
pop
ja
sub
enter
mov
pop
or
es
insb
jg
mov
std
out
nop
xchg
mov
mov
adc
jge
and
arpl
scas
xor
sbb
mov
inc
movsl
es
push
cmp
pusha
xor
mov
insb
movsl
or
mov
shlb
ss
gs
cmp
cmp
in
add
pop
fwait
cmpsl
out
dec
fdivrs
mov
sub
mov
shr
add
lds
xchg
and
orl
xchg
mov
ljmp
ret
mov
and
pop
aad
je
cmp
cmpsb
jbe
push
divl
mov
xsaveopt
rorb
shlb
mov
scas
pop
shrb
dec
pushf
mov
icebp
jns
dec
aam
mov
repz
xchg
shlb
or
xor
push
ss
rcll
in
mov
out
jnp
adc
stc
inc
dec
lcall
cmp
mov
jb
divb
push
hlt
shll
arpl
cmp
clc
lret
outsb
out
fsubrp
mov
jle
int
mov
in
dec
cmp
mov
or
cmp
int3
dec
ja
xor
pop
out
sub
jo
push
cs
out
and
xor
pop
xchg
mov
inc
push
mov
popa
xor
mov
stos
es
jno
push
call
push
fld
faddl
rcrb
clc
push
daa
loop
mov
out
lds
or
sarl
sbbb
xchg
jno
ss
and
add
xlat
mov
rcrl
addr16
repnz
ret
enter
pop
aam
mov
fucomip
mov
pop
or
mov
in
mov
push
sub
loop
cwtl
pop
adc
cs
gs
mov
pusha
stc
dec
fstpl
cmp
sub
out
das
ljmp
xor
mov
mov
push
dec
dec
ret
test
adc
xchg
mov
les
xor
cltd
out
addr16
jnp
sbb
test
loop
xabort
jo
sub
push
fnstenv
into
es
loopne
in
dec
pushf
push
lods
ror
sub
loope
aaa
or
cld
mov
mov
mov
outsl
test
aad
mov
push
in
aaa
scas
mul
rcr
adc
imul
fsubs
leave
jp
sbb
in
in
cmp
jmp
movsl
inc
xor
lret
add
xor
aam
cmp
les
add
gs
push
shll
in
inc
test
jnp
lret
popa
in
lods
out
or
cmc
dec
adc
into
jbe
sti
fmuls
sub
or
jmp
sub
lret
outsl
outsb
xchg
mov
mov
lss
out
and
mov
add
mov
lahf
leave
mov
in
jmp
outsb
das
lock
mov
aad
out
ret
xchg
subl
mov
and
shlb
addr16
mov
jmp
xchg
adc
dec
xlat
xchg
addr16
jbe
ja
xor
hlt
rorb
push
cmp
cmp
out
in
cmp
xchg
mov
lods
fstpl
xorl
sub
cmp
push
mov
mov
xchg
out
jbe
dec
pop
pop
in
cwtl
fistl
mov
xor
out
or
fwait
sub
stc
push
cmp
movsb
jae
dec
popa
pop
leave
add
lret
out
xor
sub
mov
sub
ja
add
and
fsubp
sub
mov
xchg
movsb
sub
pop
adc
insl
sbb
test
inc
loopne
cli
int
cmpsb
mov
mov
and
pop
outsb
pop
inc
loope
add
adc
inc
fsubr
arpl
mov
jo
cmpsl
or
dec
adc
imul
ja
rorl
cmpsl
sub
adc
add
or
jno
mov
mov
mov
push
mov
jbe
add
rcl
add
stc
fldt
cli
rorb
jmp
jecxz
inc
daa
pop
mov
insb
pusha
sbb
sar
add
mov
sub
jg
nop
pop
dec
test
leave
xor
jg
sub
and
inc
icebp
rol
inc
and
sbbb
ret
dec
icebp
les
jae
cmpsl
gs
fstpl
push
jae
int
enter
ror
sbb
lods
add
pandn
inc
mov
add
pushf
push
mov
or
sar
jge
xchg
stos
inc
out
les
sub
in
mov
aad
xchg
arpl
and
mov
or
xor
repnz
cmc
repnz
mov
and
lds
data16
ja
shlb
mov
lahf
and
pop
push
ret
scas
jno
or
imul
cmp
add
int
push
das
dec
sbb
mov
and
mov
subl
jo
pop
popf
cmp
dec
mov
dec
pop
xchg
filds
leave
or
pop
sahf
sbb
es
sbb
pushf
pop
jg
loope
stc
xor
pop
icebp
iret
pop
mov
push
adc
stos
push
mov
push
dec
cmp
arpl
call
xchg
and
popa
ja
inc
xchg
pop
mov
mov
imul
jecxz
xor
cmc
jecxz
xchg
dec
ret
mov
mov
mov
xchg
fsubrl
fmull
cld
xor
scas
xchg
das
scas
mov
xlat
in
xchg
pop
jmp
mov
mov
test
outsl
out
mov
dec
mov
dec
inc
mov
mov
arpl
xor
int
test
jbe
adc
mov
xor
mov
jbe
pop
mov
pop
and
xor
mov
imul
pop
xchg
or
mov
inc
aam
add
xchg
jno
pop
push
adc
push
sub
popf
lds
and
outsb
add
dec
dec
jae
int
fs
mov
jg
push
outsl
mov
stc
test
std
mov
cli
xorb
sbb
cmp
jbe
test
dec
adc
cmp
sub
mov
jmp
lock
sub
or
sbb
jnp
dec
push
test
adc
es
add
xchg
in
adc
mov
push
mull
adc
jo
adc
dec
popa
or
mov
adc
dec
jl
int
aad
or
push
mov
lret
pop
sub
mov
stos
cmp
pusha
repnz
das
mov
in
adc
nop
test
arpl
out
js
adc
dec
xchg
push
ja,pn
mov
cmp
add
mov
lods
dec
in
dec
stos
or
fucom
and
mull
add
dec
add
jg
mov
stos
outsb
lods
outsb
cmc
adc
sub
inc
das
pusha
mov
pop
adc
scas
jb
push
jge
cwtl
ja
pop
pop
cmp
push
push
ret
xchg
ljmp
daa
xchg
rorl
mov
ja
add
stos
mov
or
or
push
mov
repz
pcmpgtb
les
movl
adc
dec
and
sub
mov
mov
push
and
mov
mov
sti
cmpsl
outsl
iret
sub
mov
lock
shrb
lods
call
pop
imulb
push
enter
mov
pop
jb
loopne
mull
push
mov
cs
out
in
aaa
push
addr16
sbb
testb
ret
inc
clc
int
mov
mov
cli
mov
and
jle
jge
dec
lods
or
adc
push
sbb
pusha
push
fs
clc
imul
push
jp
push
in
mov
stc
ficomps
imul
mov
sub
jbe
xorb
cs
jo
dec
sub
inc
mov
lret
cmp
out
jmp
or
sbb
cmp
fstpl
cmpsl
out
out
sub
or
lea
mov
jne
xlat
test
aam
stos
jne
lods
push
incb
cmpb
jae
xchg
ljmp
into
sub
jp
jo
fisubrl
stos
pop
iret
adc
movsl
movsl
clc
add
or
fdiv
hlt
inc
jb
xor
daa
test
aas
cmp
cs
or
dec
loopne
inc
xor
cmp
xor
add
cltd
xchg
mov
repnz
cwtl
test
inc
pop
pop
adc
jnp
xchg
adc
sahf
rolb
push
data16
mov
out
pop
mov
enter
scas
jmp
fcomp
push
test
mov
jo
pop
aad
jge
sbbl
jbe
mov
fs
into
stc
inc
mov
mov
fadd
sub
pop
aad
fwait
and
dec
xchg
and
xchg
cmpsl
add
popf
test
daa
push
std
mov
add
inc
stc
xchg
bound
inc
xor
xchg
popf
lret
andl
cmpsb
es
pop
int3
paddb
rcll
and
mov
notb
adc
mov
pop
mov
imul
and
adc
and
sahf
xchg
lcall
rcrb
mov
in
popf
xchg
sbb
or
jle
in
push
popa
sti
dec
sub
stc
test
ficompl
mov
jb
int3
dec
rcll
pop
insl
adc
and
xchg
dec
push
rclb
cmpsl
jecxz
mov
aas
nop
sbb
or
aad
jne
in
jmp
call
dec
inc
cwtl
lock
cwtl
std
pop
sti
push
aaa
jae
test
add
std
inc
in
mov
je
int3
out
adc
or
lcall
push
jns
fisubl
nop
stos
insl
sub
outsb
icebp
adc
fs
sbb
aam
and
pop
ds
loope
xchg
adc
mov
sbb
jne
jno
mov
rcrb
sub
adc
and
fadds
pop
xor
push
cmp
lock
je
mov
xor
jbe
dec
aam
outsb
rolb
inc
adc
jmp
xor
cltd
adc
push
push
test
adc
jmp
sub
or
xchg
mov
test
je
cmp
das
daa
pop
dec
test
push
fsts
sbb
xor
pusha
fidivrs
orb
jp
fwait
pop
fs
xor
jge
aam
cwtl
xchg
sub
adc
xor
imul
inc
adc
push
loopne
pop
or
ret
mov
mov
mov
pop
cmpl
mov
jo
xchg
scas
out
ficomps
jg
arpl
pop
dec
data16
mov
mov
aas
adcb
sbb
fildll
loope
adc
repz
ret
dec
fists
cmp
addl
jmp
jns
dec
outsl
dec
jne
cmp
popf
insl
inc
aaa
or
fmul
push
shll
inc
imul
push
outsb
push
push
xor
lret
xor
mov
js
xor
lods
sub
cmpsl
stos
aaa
adc
popa
rorb
fistpll
int
adc
rcll
out
ss
mov
repnz
sbb
das
loop
jl
mul
jmp
callw
scas
inc
das
popl
es
dec
repnz
add
fsubrl
mov
mov
cmpsb
lahf
adc
mov
xchg
push
hlt
mov
and
push
adc
roll
xor
lret
inc
jmp
mov
xor
sahf
sahf
add
movsl
pop
icebp
mov
sti
cld
adc
mov
push
iret
or
mov
shl
les
sbb
mov
cmp
lds
xlat
sbb
push
in
aaa
pusha
pushf
gs
ja
push
dec
cmp
bound
rorl
xchg
fnsave
pop
sti
cmp
test
inc
shll
xor
adc
in
cltd
or
mov
or
in
in
repnz
cmp
pop
sbb
cli
adc
insb
xor
mov
or
ds
push
adc
lahf
mov
shll
or
and
aam
cwtl
add
cmp
rclb
push
popa
xchg
adc
jne
cmp
lods
or
adc
pushf
icebp
jmp
fistl
cld
mov
into
mov
shll
add
jge
or
pop
mov
jo
test
and
xchg
movsb
lcall
cs
fmulp
js
jle
add
fmull
out
adc
mulps
cmp
sub
cmp
cmp
dec
or
pop
fsubrl
push
cmp
jbe
jmp
or
xchg
lret
dec
ljmp
xorb
outsb
ficoml
cmpsl
jl
xchg
cmp
push
xor
push
mov
andl
sbb
inc
pop
xor
aad
jmp
rcll
mov
inc
fdivrs
cmc
dec
jb
pop
dec
out
push
test
push
out
lods
cld
fildl
in
or
lock
ret
push
std
add
std
int3
mov
iret
push
mov
imul
repz
xor
dec
mov
in
in
inc
mov
in
scas
mov
into
aad
cmp
hlt
stc
out
jge
jne
xchg
jne
shrl
aam
ret
xchg
push
stos
fmull
lods
mov
add
xor
push
dec
and
testb
std
xchg
sub
jo
hlt
mov
lods
inc
mov
addr16
jge
add
rcrb
xchg
arpl
cmpsl
cmp
mov
out
lods
stos
push
shlb
mov
insl
sbb
pop
movsb
xor
sbb
add
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
insb
push
dec
mov
mov
cmpsb
jne
adc
jo
aas
out
push
sub
ds
mov
out
cli
loop
aaa
aas
sbb
add
lods
lods
out
pop
jle
xchg
stc
aaa
mov
fnsave
aaa
lret
jp
sbb
mov
cwtl
pop
imul
xchg
pop
xchg
dec
mov
sbb
push
push
repnz
sbb
clc
out
xchg
sti
adc
inc
pop
add
cmp
aas
ljmp
xchg
jae
add
js
ljmp
and
in
jl
fstps
pop
adc
test
and
das
ret
imul
xchg
sub
shrb
pop
sub
addr16
lock
push
cmp
gs
mov
loope
incl
in
lock
add
xor
loopne
xor
add
inc
jo
push
pusha
ljmp
jbe
inc
adc
pop
decb
ljmp
mov
adc
stc
and
jmp
pop
dec
aad
aam
test
mov
mov
in
xchg
or
xchg
sbb
dec
cmp
mov
jb
pop
in
loop
out
test
test
push
push
inc
test
push
sti
push
mov
ret
movsl
cld
sub
or
xor
notb
fmulp
and
add
popa
mulb
push
or
inc
shlb
mov
pop
scas
outsl
fwait
sub
jne
das
lods
xlat
pop
add
cli
push
aam
sub
push
dec
in
add
mov
arpl
pusha
jbe
test
mov
cmpsl
outsb
das
in
add
mov
out
cmp
repz
jle
xchg
movsl
loopne
push
sub
sbb
outsb
rcll
adc
mov
por
pop
push
sbb
lods
iret
mov
icebp
mov
add
scas
popa
cmpsl
xabort
mov
and
xchg
pop
mov
xchg
cmp
pop
pop
push
dec
mov
xor
pop
fidivl
aad
mov
sahf
adc
lret
mov
inc
cmp
scas
cli
inc
sbb
shrb
add
mov
inc
cmp
cmpsl
adc
andl
outsb
mov
adc
add
mov
insb
adc
adc
xchg
cmc
inc
sbb
pop
mov
ds
test
cmpsb
or
or
pop
lea
lods
fldl
adc
dec
jne
and
cltd
std
stos
dec
sub
sub
repnz
pusha
mov
dec
cmp
roll
pop
jnp
cmpsb
int3
fwait
inc
sbbl
add
or
sahf
cli
fwait
sbb
cs
add
aad
rorb
or
dec
idiv
xchg
push
pcmpeqw
lods
push
fdivl
push
jp
sarb
pop
int3
dec
icebp
push
ficoml
sub
push
lahf
das
mov
dec
or
stos
lahf
inc
xchg
or
push
fistpl
adc
push
xor
outsl
aaa
inc
mov
pop
test
and
inc
inc
inc
clc
sub
xchg
mov
and
sub
mov
mov
pushf
adc
lods
cmp
mov
push
nop
or
je
xchg
jb
push
adc
mov
jns
and
jge
pop
icebp
ljmp
xchg
ror
mov
std
fisttps
dec
sbb
arpl
xchg
push
hlt
notl
dec
sbb
and
adc
mov
pop
mov
or
dec
cmp
stos
shlb
pop
push
ret
pop
mov
dec
std
icebp
xchg
adc
adc
lods
js
add
mov
lods
mulb
fld
test
rorl
mov
inc
nop
mov
inc
dec
testl
lods
test
bound
xor
mov
push
mov
push
or
aad
xor
pop
lret
jo
mov
jmp
mov
leave
mov
aad
push
cmp
js
sbbl
adc
movsb
div
cs
jmp
mov
imul
rorb
jmp
jnp
ret
aam
cmpb
sub
movb
mov
push
mov
mov
inc
mov
lds
daa
mov
out
outsl
clc
push
xchg
and
nop
rorl
push
mov
arpl
fisubrs
ds
ja
jmp
ffreep
inc
cmp
scas
cmpsl
ja
outsb
stc
cmp
mov
daa
push
loopne
popa
std
add
push
xlat
sub
push
out
add
jne
cmp
orl
lock
xchg
xor
push
addr16
and
and
dec
cmp
jns
gs
mov
sahf
faddl
and
sbb
aas
mov
lods
cs
stc
ret
jg
int3
cmpsb
and
mov
stc
and
jg
sub
add
cld
fidivl
adc
xor
add
out
inc
repnz
xor
test
repz
fsts
and
fs
push
mov
dec
mov
fistps
push
mov
pop
clc
test
jb
cmpsl
int3
mov
shrb
jl
sbb
mov
pop
sub
aas
lahf
push
in
mov
mov
xchg
xchg
sarl
jecxz
cwtl
ret
xor
int3
scas
add
cmp
pop
in
aas
jo
pop
adc
xchg
or
mov
push
inc
ss
mov
and
add
stc
cmp
mov
outsb
xorb
std
push
pop
xchg
icebp
or
sbb
sti
sti
pop
stos
jo
subb
scas
jns
inc
fdivl
lock
int3
mov
cmp
or
push
jno
std
inc
call
jge
sbb
adcl
add
or
movsl
fsubrs
or
xor
xchg
push
clc
pop
inc
jbe
test
aaa
xchg
xchg
pop
rcrb
xlat
pop
lock
add
mov
adc
jae
and
hlt
cmp
jge
adc
cmp
in
testl
jmp
insl
push
repz
pop
aas
push
cmp
push
and
xchg
mov
dec
mov
insl
cmp
subb
bnd
add
push
test
call
or
test
jb
jae
fmull
mov
xchg
push
xchg
outsl
das
push
out
dec
gs
inc
arpl
bound
iret
dec
mov
xor
xor
or
and
shl
in
xor
cs
mov
mov
out
mov
dec
enter
test
xchg
sbb
test
rolb
push
xchg
jns
mov
lea
pop
xorl
jmp
xchg
aaa
xor
jg
movsl
outsb
pop
js,pt
xor
fistps
mov
adc
pop
xor
dec
movsb
lea
aas
sub
mov
sub
jns
stos
mov
or
cld
lahf
pop
xor
je
pushl
outsl
pop
fstl
jo
lret
mov
repz
mov
mov
and
add
das
jbe
pop
pop
call
mov
add
sub
gs
pop
sub
adc
add
sti
xor
pusha
out
push
imul
inc
mov
mov
mov
sub
cltd
inc
inc
out
push
sti
cmp
mov
pop
out
pop
mov
popa
cmpsb
cmpsl
hlt
push
dec
movsl
in
pop
stos
fdivrs
add
mov
inc
push
je
adc
dec
inc
mov
lret
inc
arpl
movsl
mov
cmp
and
push
out
test
fisubrs
bound
mov
clc
push
or
insl
inc
lds
in
jmp
adc
xchg
in
js
insb
icebp
push
popf
push
push
or
or
int3
sub
push
into
adc
je
xchg
and
clc
mov
cmp
rolb
cmpsl
ret
xchg
and
shll
into
sahf
xchg
out
add
leave
or
sbb
stc
inc
mov
xlat
insl
xchg
sub
push
mov
sub
jmp
or
ret
lock
aas
and
xchg
push
testl
mov
add
add
frstor
repz
leave
mov
lret
out
insl
jns
pop
jne
jle
aaa
sub
fiaddl
cmpb
fwait
push
insb
xor
ss
inc
cmpsl
xchg
aam
push
jae
jl
fcompl
das
cmc
insb
jno
pop
leavew
mov
xchg
stos
sarb
cmp
xor
hlt
in
in
and
daa
loopne
jbe
push
xchg
rcr
xchg
mov
mov
fldenv
enter
repz
adc
inc
fstpt
mov
je
cmpsl
js
shlb
pop
pop
sbb
cmp
je
mov
mov
and
mov
fstpt
ret
insl
push
push
into
jno
inc
inc
or
push
push
xor
inc
adc
jg
mov
fs
xchg
cmp
das
inc
xchg
pop
xor
xor
es
mov
xchg
pop
sbb
dec
jp
sbb
aaa
sbb
mov
and
das
mov
mov
xchg
mov
jmp
dec
aaa
jp
subb
mov
or
cmp
imul
arpl
push
aas
icebp
sub
mov
pop
dec
and
dec
xchg
pop
and
mov
scas
int
test
into
insl
cmp
insl
push
popw
fnsave
andl
call
jae
xchg
addr16
data16
push
mov
clc
sub
movsb
leave
adc
test
or
aam
inc
cmp
mov
xchg
pop
push
jle
inc
pop
adc
loop
dec
mov
inc
push
dec
sbbl
popa
add
cmp
lds
and
std
pop
sahf
adc
mov
sti
outsl
cmpl
jno
ljmp
add
aad
jle
leave
or
insl
in
inc
stos
mov
mov
mov
jae
aad
hlt
add
pop
jmp
test
lea
push
add
lret
cmp
daa
push
dec
loope
mov
xor
movsb
stos
xchg
pushf
out
nop
push
es
or
fnstsw
outsl
loop
loop
pusha
or
dec
sbb
out
std
push
js
inc
cwtl
orl
sbb
mov
lret
inc
pop
rclb
fmuls
jae
push
incb
sbb
jge
pop
loopne
and
cmp
mov
stc
sbb
dec
jp
mov
out
lahf
jne
sub
je
mov
out
ds
ret
roll
enter
jnp
dec
icebp
push
fdivr
and
shlb
das
stos
pop
xor
fwait
mov
insl
mov
add
out
adc
sbb
sahf
testl
adc
xor
sbb
popf
or
cmpsb
xchg
aad
dec
clc
test
stos
and
pop
gs
loop
cmpsl
arpl
add
inc
out
xchg
push
mov
sbb
test
xchg
jb
mov
sbb
out
push
pop
sbb
adc
outsl
aaa
push
lds
cmp
xlat
sbb
dec
mov
mov
cwtl
jg
addr16
cmp
test
xchg
fnstsw
insl
ret
ret
cmc
cmc
jl
nop
sbb
xor
test
imul
sub
mov
sti
scas
repnz
aam
test
lods
push
inc
test
and
add
xor
pop
cwtl
movsl
mov
sbb
aaa
js
add
push
ret
subl
add
into
adc
sub
dec
scas
dec
sbb
dec
icebp
je
cmp
js
les
push
sahf
and
sub
lret
cld
xchg
cmp
adc
aas
mov
int3
sub
adc
in
dec
mov
mov
jae
mov
xchg
std
sbb
adc
movsl
cmp
out
scas
pop
adc
outsl
fdiv
mov
mov
lret
xchg
jge
mov
jmp
je
xchg
pop
test
imul
cs
movsb
rcll
fcompl
into
aas
dec
shrl
mov
push
out
push
test
and
sub
idivl
xchg
les
roll
push
push
push
adc
cmp
xchg
in
in
push
sbb
dec
aaa
cmp
and
fsubrs
pusha
mov
cmpsl
and
out
xchg
out
push
lret
test
mov
frstpm(287
sbb
mov
cmp
cs
fcompl
cmp
xchg
pop
aaa
add
nop
scas
xor
lods
lods
mov
lock
mov
add
mov
pop
mov
imul
aam
fdivr
sbb
sub
pop
nop
dec
std
fimuls
pop
push
mov
adc
sub
xchg
fisttpll
jbe,pn
outsb
repnz
out
sbb
pushf
test
mov
pushl
and
insl
inc
push
and
lock
popa
imul
mov
bound
mov
sub
jecxz
lahf
dec
sbb
push
push
lock
or
sub
leave
cmp
sarb
adc
rcrb
cli
aas
pop
jnp
in
ss
xor
in
gs
dec
inc
push
pop
ja
scas
mov
push
mov
sbb
pop
insl
mov
les
fisubl
add
mov
int3
icebp
sbb
push
clc
mov
inc
push
in
lea
mov
inc
cwtl
and
mov
scas
sahf
dec
inc
leave
sahf
popf
push
das
data16
push
push
push
int
jl
pop
repz
call
jae
cmp
orb
mov
adc
mov
idivl
lods
xchg
mov
add
daa
xor
out
cli
xchg
adc
stos
mov
and
cs
dec
leave
bound
sub
std
outsl
jb
xlat
inc
mov
push
xchg
or
leave
int3
jbe
ljmp
fnstcw
movsl
xor
js
call
jge
sub
je
mov
sbb
jg
cmpsl
into
sahf
daa
stos
into
movsl
dec
and
add
popl
mov
fwait
push
faddl
nop
ds
xor
mov
fcmove
xlat
loopne
mov
hlt
testb
and
lods
getsec
inc
xchg
inc
rcrb
imul
and
add
sbb
lock
cli
stos
out
das
push
xchg
cmp
jno
and
sub
xchg
mov
xchg
sbb
xor
cmp
arpl
pusha
mov
inc
jp
mov
mov
jnp
and
push
mov
sti
addr16
imul
rolb
pop
jnp
out
push
lock
dec
cmp
loope
xchg
or
insl
sub
nop
jno
std
pop
shl
dec
sbb
and
sbb
inc
dec
shl
push
dec
mov
or
pop
jo
test
cld
hlt
inc
and
ficompl
cmp
imul
fcom
outsl
pusha
push
adc
mov
xchg
push
pop
icebp
or
sbb
adc
mov
push
xchg
sbb
or
dec
sub
adc
add
rcll
or
into
lods
push
add
ret
fwait
or
popf
mov
orl
sub
lods
insl
popf
adc
loopne
lods
jg
pop
push
psubd
ljmp
cmc
fsts
push
fildll
js
das
mov
cmpsl
push
dec
jg
push
mov
movsl
and
ret
adc
daa
insb
clc
ljmp
push
dec
mov
in
das
or
ret
ror
movsb
sarl
fstl
mov
lret
fldt
adc
mov
imul
lcall
jge
add
iret
imul
xchg
ja
mov
cmp
adc
sbb
std
rcl
mov
push
sub
pop
sbb
std
mov
scas
jbe
ret
dec
pop
pop
out
shlb
sub
inc
sub
insl
cmc
popf
cli
xor
jns
movsl
mov
add
roll
mov
fwait
adc
loop
out
or
mov
or
aam
imul
out
inc
into
call
add
xchg
sbb
addl
stos
sub
mov
pop
and
mov
loopne
mov
mov
adc
cmp
jne
push
inc
push
push
dec
inc
shlb
outsb
shr
mov
jp
cmc
mov
sub
add
jecxz
leave
ss
mov
sbb
lcall
in
sub
clc
sub
lret
into
int3
lret
loop
scas
out
xchg
in
inc
xor
call
imul
ljmp
mov
outsb
jnp
std
sbb
outsl
or
fwait
fidivl
push
mov
push
scas
or
cs
inc
xor
inc
mov
mov
xor
fcomp
scas
pusha
sbb
xor
cmp
jne
push
arpl
clc
out
ret
enter
sti
sub
jae
rclb
ja
fwait
leave
lock
lea
ljmp
mov
hlt
add
addr16
std
mov
cmp
mov
outsb
pop
dec
inc
imul
mov
xlat
push
sbb
mov
idiv
dec
shrl
lahf
pop
push
mov
aaa
in
cmpb
sub
adc
and
sub
shrl
test
ret
xchg
pushf
repz
pop
inc
mov
in
lock
mov
mov
mov
jnp
inc
sub
push
pop
lods
dec
sbb
sbb
popl
mov
jns
aaa
shl
aas
clc
xchg
cmp
jns
fsubr
jle
sub
in
ret
adc
mov
xor
adc
ret
rclb
push
out
je
int
jp
xchg
add
xchg
mov
js
daa
or
mov
js
and
outsb
mov
jnp
pop
arpl
outsb
aas
sub
sbb
fidivs
cmpsb
adc
xor
in
stos
xchg
ljmp
cmpsl
cmp
call
bound
adc
sbb
dec
dec
outsb
vandnps
dec
inc
mov
sar
dec
and
add
pop
dec
mov
lahf
xchg
push
repz
inc
test
ficompl
push
pop
adc
dec
inc
test
add
adc
dec
dec
mov
outsl
sbb
push
xchg
in
sub
rcl
div
and
ljmp
rcrb
inc
cmp
inc
push
jo
sbb
mov
sub
xor
sar
xor
lret
je
mov
fcoml
adc
xorb
push
mov
loop
cmc
test
or
in
cmp
dec
xchg
xchg
and
fstpl
in
loop
push
add
add
jg
xor
cmpb
mov
lcall
add
mov
sbb
add
jne
jle
xchg
pop
mov
add
gs
xchg
xor
add
and
mov
pop
daa
xchg
inc
ss
jl
mov
fdivs
or
stos
push
mov
add
push
and
inc
cwtl
mov
jb
add
out
mov
cli
mov
lahf
mov
xchg
movl
data16
add
pop
push
or
push
xchg
scas
addr16
mov
xchg
fsubr
or
repnz
push
xchg
movsl
mov
cmp
jmp
mov
lcall
shl
push
inc
dec
xchg
lock
stos
xor
mov
int
xlat
or
adc
dec
leave
mov
inc
mov
pop
int3
fisttpl
cmc
mov
inc
push
inc
sti
sbb
xor
arpl
mov
mov
add
sahf
dec
loopne
mov
push
jno
or
mov
inc
xchg
bound
xor
lret
and
sub
movsl
adc
je
sbb
push
jp
in
or
gs
cmp
aaa
xor
mov
push
xchg
ret
xchg
icebp
fidivs
jge
push
mov
sbb
in
inc
repnz
push
fsubp
loopne
jns
xor
mov
sub
jnp
out
js
repz
and
imul
jl
pop
sub
in
mov
lock
imul
fsubrl
xor
xchg
stos
mov
loopne
shl
xchg
ja
pop
and
jne
stos
insl
jns
jg
jae
das
not
out
imul
push
push
push
lret
xor
leave
adc
mov
loope,pt
xor
dec
adc
into
test
stos
pop
push
xlat
inc
xchg
lret
mov
fst
inc
mov
sbb
stos
out
sub
fsubl
pop
sbb
sbb
aaa
xor
sti
jne
daa
ret
inc
add
dec
arpl
adc
sbb
cmp
pushf
cmp
nop
mov
and
clc
pop
xchg
dec
sub
or
pop
popa
inc
fs
pop
dec
cmc
sub
shrb
sahf
push
add
jns
popf
insb
xchg
and
jge
push
int
ja
add
cmp
sbbl
mov
cmp
xor
jbe
gs
cmpsl
sbb
popl
xlat
mov
add
cwtl
jb
mov
test
ljmp
int3
fs
push
mov
sub
fwait
clc
push
ret
stos
xchg
pop
xchg
or
test
fiaddl
adc
fcompl
outsb
push
pop
mov
ret
stc
cs
call
jo
fcmovnbe
xor
fwait
xchg
repnz
aaa
outsl
das
jns
fs
pop
inc
sbb
or
push
xchg
fnstenv
cmp
iret
jp
data16
pop
adcl
int
rcrb
sbb
sub
stos
push
inc
push
sti
cmp
mov
xchg
push
mov
imul
aaa
adc
mov
js
adc
dec
lcall
jbe
lahf
xchg
int3
cmp
pop
rolb
movsb
jle
sub
imul
loope
inc
popf
nop
ds
and
mov
loope
inc
jge
cwtl
fimull
mov
test
push
std
ja
push
ret
and
fisubrs
sub
mov
pop
shll
rorb
cmp
sub
add
ljmp
jl
or
xchg
imul
repz
inc
insb
lcall
jmp
shlb
mov
cs
popf
inc
mov
mov
imul
lret
std
xchg
push
jnp
repz
inc
pushf
lea
insl
sbb
test
repz
addr16
mov
adc
xchg
lea
inc
fucomp
test
sub
lock
adc
int3
and
pop
xor
mov
push
jmp
jnp,pt
shlb
sub
add
inc
add
aad
ret
arpl
sbb
repz
lods
cmp
mov
dec
jmp
dec
mov
add
les
lea
dec
sub
xchg
sbb
cmpb
call
inc
inc
popf
pop
test
jge
out
inc
sub
xor
xor
dec
jb
ljmp
pusha
test
js
pop
pop
dec
in
and
lock
psrlw
adc
je
int3
int3
adc
jmp
addr16
jg
pop
cs
mov
add
adc
rorl
sbb
xor
jo
and
dec
cmp
pop
inc
mov
lret
mov
rorl
fs
movsl
stc
mov
adc
pop
push
rolb
lahf
jl
inc
adc
lock
cmp
shrb
xor
push
push
mov
in
fisubs
in
mov
repnz
xchg
andl
mov
popf
xchg
out
ljmp
mov
mov
call
dec
cld
loope
and
dec
bound
jno
xor
gs
mov
testl
and
cli
sbbl
jne
dec
test
insb
les
lret
xorl
mov
int
add
mov
lahf
adc
and
lcall
ret
call
sub
or
cmc
push
testl
test
addr16
pop
xchg
add
mov
mov
popa
push
inc
jg
mov
add
imulb
mov
call
and
jp
in
xor
add
inc
sbb
mov
pop
imul
adc
clc
lods
test
lcall
add
mov
int3
mov
jo
mov
ficompl
sub
in
xchg
aaa
xchg
lods
lret
mov
mov
xor
std
inc
fstl
jg
sub
cmp
xchg
jne
cld
mov
xchg
push
jnp
mov
xchg
xchg
mov
inc
pop
mov
stos
jmp
sti
pop
outsb
js
xor
inc
cmpsb
xchg
lods
mov
inc
pop
sar
mov
and
jge
add
cmp
inc
push
and
sbb
inc
cmp
adc
jge
jbe
cs
test
cltd
cmp
or
aaa
test
xor
lea
cli
shll
daa
outsl
nop
xor
inc
or
shlb
int3
je
mov
out
and
fildl
xor
inc
imulb
in
push
inc
push
and
fs
pop
cmpsb
frstor
mov
mov
in
mov
aad
sarb
push
aad
movsl
adc
mov
cmpsb
pop
out
jl
jo
in
push
add
stos
test
ret
xorl
push
cmc
daa
pop
pusha
pop
xor
xor
inc
outsl
in
push
jbe
sub
mov
sub
adc
shl
mov
or
data16
dec
lods
mov
cmp
and
cmp
ljmp
mov
pop
sub
push
xor
imul
jnp
pusha
jp
jns
int
cltd
not
adc
hlt
punpckhdq
push
aad
sub
push
push
jnp
cmpsb
jle
xor
insb
rcll
sub
rorb
add
and
jl
out
mov
test
out
pop
or
inc
jg
pop
loop
jb
jno
test
sbb
sub
imul
aaa
xlat
js
sbb
adc
mov
ds
ja
sub
add
push
adc
std
dec
dec
addr16
out
sti
das
loop
push
hlt
pop
lods
insl
push
pop
lcall
mov
xchg
cld
mov
test
outsb
jg
push
or
sbb
pop
push
fwait
lret
dec
pop
cmpsb
ja
data16
mov
sub
mov
jg
xchg
add
das
insl
xor
in
mov
dec
xor
mov
negl
pop
daa
mov
nop
push
ja
push
nop
dec
cltd
insb
test
aad
mov
xchg
lret
fdiv
lret
iret
push
ret
sub
xor
pop
jo
mov
div
jno
lea
mov
lock
out
mov
and
jecxz
pop
daa
mov
sbb
lret
shl
xorb
push
jp
xchg
or
jnp
aaa
aad
movsb
loope
imul
sub
mov
test
test
sub
xchg
das
xchg
sbb
test
mov
sbb
loopne
xchg
cmp
in
xchg
sub
shlb
or
xchg
outsl
add
lret
mov
pop
inc
lret
sbb
dec
ja
je
in
dec
mov
es
scas
enter
mov
das
mov
cmc
loop
add
loope
mov
and
js
iret
adc
push
pop
cmovnp
lea
adc
mov
add
mov
pop
imul
decl
cmp
rcr
pusha
pop
insl
and
sbb
test
pop
inc
mov
dec
cld
pushf
xor
cmp
pop
jl
fs
push
aaa
jo
dec
les
cld
add
fcmovnu
sti
xchg
in
xlat
sub
or
mov
ja
push
jecxz
orb
ja
add
sub
sbb
adc
sbb
ljmp
sub
xchg
dec
or
addb
stc
je
ja
lahf
movsb
push
iret
shrb
xchg
bound
mov
cmp
add
adc
fimull
mov
je
pushl
and
xor
lahf
or
test
fisubrs
fmull
arpl
mov
dec
mov
stc
imul
sub
xchg
sub
int
stc
or
imul
mov
lret
hlt
fdivr
ftst
adc
inc
dec
jnp
jnp
popf
and
leave
jb
outsb
cmc
inc
xchg
das
inc
xchg
mov
push
outsb
shlb
insb
sbb
add
and
push
dec
popf
inc
push
stos
pop
scas
jne
sbb
cmp
or
js
jge
loope
sbb
push
sti
in
pop
rorl
je
stos
fcompl
dec
std
mov
call
jl
sbb
shrl
cmp
movsl
les
mov
pushf
inc
sti
sbb
jnp
insb
sub
sarb
mov
out
pop
push
dec
loop
ror
jp
into
rorb
sub
push
dec
subl
pop
stos
lods
outsb
and
jae
mov
int3
ljmp
xchg
mov
idivb
lods
iret
add
push
inc
repnz
mov
testl
push
int3
fwait
pop
das
out
cmp
mov
mov
pop
jnp
shll
fdivl
fistpl
das
out
test
dec
jo
mov
adc
or
aam
loop
pop
js
cmp
inc
mov
xor
mov
sub
addr16
push
mov
shlb
js
push
push
cmp
lcall
or
mov
mov
repnz
add
insl
add
insl
jns
sti
cltd
pop
fisttpll
mov
jo
push
jecxz
lret
add
js
or
repnz
clc
decl
push
pop
jb
stos
loop
or
loope
fcompl
testb
and
jle
xchg
jns
lea
push
fstpl
movsl
mov
and
sar
cmpsl
aad
or
mov
add
jae
scas
mov
imul
jne
pop
cmp
xor
daa
roll
sbb
lret
jl
pop
pop
aaa
call
mov
inc
dec
out
sub
jnp
xchg
imul
test
pop
jno
mov
pop
mov
popf
push
dec
jge
xchg
push
lods
sarb
jo
push
fwait
into
lret
ja
pop
and
fdivr
pop
ss
add
lea
aam
lret
mov
dec
add
call
lcall
mulb
sbb
in
or
addr16
or
cmp
ss
sti
loop
faddl
pop
cs
stos
pop
popa
jo
movsl
xlat
and
ljmp
xor
xchg
and
mov
popf
nop
movsl
pop
xor
mov
jbe,pt
scas
dec
lahf
xchg
fucomp
aaa
js
pop
cld
int3
shl
in
xlat
lods
push
add
and
push
repnz
jmp
lea
fisubrs
xchg
pop
push
mov
and
sbb
or
ds
inc
int3
sbb
fisttps
imul
jge
sub
jmp
stos
movsb
insl
pushf
inc
stos
je
inc
cmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
inc
addb
push
pop
pop
push
mov
jg
leave
mov
std
cmp
lea
adc
sarb
adc
cwtl
pop
adc
push
scas
bound
and
jae
scas
pop
jmp
std
sbbl
je
arpl
jl
pop
jmp
hlt
jle
mov
outsl
outsl
nop
aam
and
xchg
out
daa
jbe
inc
jp
xor
jg
fs
jl
outsl
out
jae
lcall
std
push
std
stos
jmp
in
mov
add
jmp
mov
ds
mov
jmp
test
sub
add
mov
lea
lcall
push
mov
lret
sub
mov
ret
or
add
or
jg
adc
pop
inc
mov
je
mov
jbe
cwtl
mov
scas
js
add
dec
movsl
iret
dec
cmp
ret
sbb
push
js
cmpsl
push
scas
mov
pop
in
stc
icebp
sub
cmpsl
add
add
and
jg
je
lds
repz
imul
inc
or
dec
out
jne
or
push
fwait
sbb
ja
xchg
jno
xlat
js
into
xor
or
jns
mov
test
lock
cmp
fldcw
cmpsb
leave
xorb
xor
idivb
je
mov
das
add
add
inc
xchg
clc
cmp
jp
and
pushf
negl
insb
sarb
notl
andb
jg
dec
adc
aas
scas
andb
inc
mov
push
jns
sbb
and
mov
and
repz
cmp
jp
sti
dec
fdiv
in
jno
sbb
shlb
adc
imul
cmc
lcall
gs
bnd
aas
pop
adc
adcb
jbe
inc
sar
xchg
loope
adc
lahf
stc
xchg
mov
mov
aas
sub
cld
and
lret
bound
ja
mov
cwtl
rolb
lahf
outsl
cmp
push
mov
mov
aas
pop
mov
idivl
sub
popa
lret
aad
scas
xchg
aaa
pop
push
fsubrl
mov
int
pushl
add
mov
cmp
sbb
push
push
sahf
outsl
dec
jge
dec
push
adc
rcr
push
push
sub
pop
jp
rcr
pushf
cmp
out
cld
clc
and
dec
push
pop
mov
dec
aam
push
push
lds
cmp
jae
das
push
hlt
pushf
jns
add
cltd
js
lret
push
xor
xor
jecxz
push
mov
dec
dec
cmpsl
and
cmpsl
out
mov
xchg
out
push
jnp
mov
lcall
inc
imul
pop
pop
cmp
out
scas
cltd
insl
inc
scas
mov
adc
push
ds
inc
xor
aam
adc
loope
or
gs
fistl
in
lret
cmpsl
loope
stc
xchg
xorb
push
mov
xchg
popa
out
scas
test
push
lret
repnz
xor
dec
adc
pop
daa
inc
jg
push
sbb
lret
fsubl
and
pop
pop
add
lods
push
mov
inc
std
adc
adc
popa
mov
adcb
clc
push
mov
or
les
fistps
mov
and
imul
outsl
stos
mov
pop
pusha
ljmp
nop
iret
rcr
adc
in
fsubs
dec
daa
xchg
mov
dec
pop
aam
dec
mov
cltd
adc
push
xlat
addr16
addl
sahf
adcb
sbb
movsb
push
pop
cmp
ret
rcrl
stos
ret
arpl
insb
and
andb
ret
push
mov
imul
daa
mov
xor
mov
or
pop
dec
jno
jg
xor
cmp
push
or
pop
pusha
jnp
jns
mov
cmp
inc
loop
test
adc
cld
sbb
bound
insb
into
popa
jb
sbb
mov
out
cmp
inc
adc
cmp
mov
cvttps2pi
enter
icebp
nop
addr16
dec
stos
jb
sbb
call
sahf
pusha
sbb
dec
mov
sub
out
leave
xchg
into
jp
pusha
xor
cmp
xor
push
shll
test
mov
hlt
shrb
outsb
mov
mov
test
inc
cmpsb
dec
pop
addr16
sub
inc
jo
out
mov
xor
rsqrtps
sti
cmpsl
test
xor
mov
repz
out
pop
push
inc
jge
cmpsb
iret
push
xchg
insl
xor
dec
frstor
dec
jae
mov
jae
sub
mov
fistpl
jg
add
sbb
enter
lds
lods
add
pop
or
aad
cmp
mov
push
loope
push
pusha
aam
xor
mov
jecxz
rcll
outsb
add
adc
pushaw
std
xchg
xchg
xchg
pop
jb
jo
mov
inc
mov
xor
jecxz
inc
push
in
adc
clc
mov
pop
shll
jns
cmpb
mov
adc
jne,pt
mov
retw
test
pop
pop
xchg
inc
notl
mov
jo
test
ja
roll
adc
shll
cs
cmp
xchg
fwait
lret
shll
call
loope
in
or
mov
lret
jne
adc
hlt
mov
xor
cwtl
fbstp
popa
pusha
pop
push
sub
faddp
mov
addb
and
adc
ljmp
push
sub
mov
pop
pop
leave
sbb
cld
test
loopne
and
cld
cmpl
xchg
ljmp
outsb
and
inc
cmpsb
dec
push
outsb
cmpsb
push
or
push
and
test
out
adcb
pop
xor
or
faddl
mov
nop
lahf
jb
fcmovnb
and
xor
pushf
dec
sub
xor
test
add
icebp
inc
jecxz
dec
mov
push
sbb
jne
scas
insb
push
xchg
lea
jnp
and
out
js
and
shrl
stc
cmp
lods
cmp
addr16
jb
pushf
mov
mov
xchg
mov
mov
inc
ret
imul
mov
hlt
jge
call
cmp
xor
jecxz
inc
lods
fnstcw
or
pop
lds
xor
test
pushf
xchg
out
lret
push
pushf
js
inc
sbb
arpl
add
daa
inc
pop
xchg
shrl
and
shrb
fnstenv
ret
dec
js
stos
or
clc
mov
or
iret
jecxz
xor
pop
data16
fucomi
xor
or
inc
mov
push
lock
cli
push
mov
iret
xchg
lret
popf
mov
cltd
rclb
inc
pop
dec
jnp
jl
inc
lds
mov
sub
push
adc
mov
xchg
gs
mov
mov
test
sbb
repz
inc
jnp
es
ret
jecxz
jmp
das
outsl
xchg
jecxz
pop
not
mov
xchg
cltd
adc
ljmp
icebp
cmp
icebp
mov
jne
or
repnz
mov
pop
icebp
popa
bound
dec
mov
es
aam
cmc
lods
pop
sbb
test
xor
cwtl
repz
cmp
stos
call
ret
pop
add
mov
leave
add
dec
sahf
pop
jmp
add
shll
jb
sbb
scas
xchg
mov
shlb
jl
cmp
leave
or
jle
pop
test
shll
jnp
push
xor
jle
mov
xchg
icebp
shrl
pop
pop
test
jno
fstp
negl
outsb
mov
ljmp
shlb
adc
int3
int3
xor
lahf
popf
inc
jnp
or
cmp
cs
fcomp
das
dec
imul
scas
cmpsb
movsl
push
xor
pop
xor
fsts
cs
aas
jae
out
lods
push
sub
pusha
ret
mov
push
lahf
imul
sub
mov
lahf
jp
test
inc
mov
cmpsl
sub
daa
mov
loopne
or
pop
inc
mov
repnz
jno
aad
inc
lret
xor
pop
divl
mov
push
adc
lret
push
mov
inc
pop
push
cmp
sub
test
jns
imulw
sbb
or
insb
aas
sbb
lret
mov
pop
subl
xor
push
call
lods
jno
shlb
popa
rcrb
mov
add
rcrb
aad
dec
mov
call
fs
leave
dec
sarb
jbe
jae,pn
loope
inc
sub
lods
xor
stos
push
movsb
lds
testl
push
scas
dec
loopne
mov
lret
xlat
xchg
mov
je
cmp
loop
jg
xchg
fnstcw
movsl
jle
aaa
test
mov
loop
aam
mov
push
and
out
jp
outsl
iret
dec
mov
loope
inc
loop
mov
aaa
into
icebp
jno
dec
dec
mov
mov
aam
mov
lods
aam
es
loopne
cmpsb
sbb
dec
cmpl
push
or
clc
sbb
mov
sub
shlb
pop
xchg
xor
rorl
push
jne
sbb
or
push
repnz
mov
adc
sub
xchg
xor
repz
pop
dec
xor
test
jg
shrb
dec
call
xchg
into
xchg
adc
pop
pop
push
xor
dec
popf
ret
add
ret
cmp
divl
outsb
scas
jo
mov
sub
rcrl
cld
mov
mov
adc
add
cli
int
or
adc
push
add
daa
ja
outsl
out
cli
push
adc
lret
add
push
in
dec
and
stos
cmp
sahf
rcpps
push
xor
xlat
aas
mov
ja
pop
xchg
lods
inc
test
mov
movsl
int3
cmp
rorb
test
or
sbb
shrb
adc
push
xchg
lock
mov
xchg
fldl
pop
push
cmpsl
or
inc
insb
or
sbb
cmpsb
loop
or
cwtl
int
or
mov
dec
fcompl
adc
cmpsb
rcrl
into
add
rolb
lock
xchg
nop
adc
divb
adc
push
in
out
pushf
push
fwait
lahf
adc
xchg
repz
js
xchg
in
cmp
scas
add
push
outsl
sbb
hlt
insl
pushf
cwtl
lods
leave
xchg
push
and
std
inc
sarl
cmp
push
faddl
sbbb
repz
dec
push
rcll
or
adc
ja
inc
mov
xchg
icebp
jo
jae
push
cmp
shrl
xchg
fwait
sahf
in
mov
jp
dec
into
pop
mov
adc
sub
push
and
mov
jg
mov
mov
add
loopne
dec
mov
push
es
fdivrl
inc
mov
push
mov
inc
stos
sbb
jl
mov
mov
push
inc
pop
pop
sbb
lret
inc
aad
adc
dec
aaa
test
insl
int3
into
pop
in
in
fistl
jl
cmp
dec
jl
push
and
out
mov
filds
test
ja
out
fisubs
adc
int
push
xchg
icebp
or
pop
insl
xlat
lock
iret
ret
insl
mov
ficoms
es
xor
pusha
and
dec
sarb
mov
pusha
rcrl
mov
xlat
sbb
cmp
jbe
and
in
and
pop
js
daa
ss
fidivs
add
sbb
fidivl
xor
daa
shll
pop
add
sti
test
xlat
cmpl
dec
pushf
xlat
loop
or
jno
jecxz
mov
pusha
push
inc
inc
sub
loop
roll
cmpsb
cwtl
aam
cwtl
sub
push
imul
xlat
or
sbb
dec
test
imul
das
sub
cmpsl
jp
movsb
sub
pop
cmp
xchg
cmc
or
mov
jecxz
pop
or
gs
push
xor
xorb
mov
sbbb
add
scas
push
pop
jecxz
mov
lret
push
aas
out
sub
repz
insb
cmp
mov
in
in
insb
call
rolb
gs
or
adc
mov
xor
jae
mov
mov
pop
xor
outsb
jb
cltd
cmp
dec
sbb
jmp
inc
inc
sub
add
loope
sub
popl
push
fwait
adc
not
out
and
pop
repnz
fildll
adc
push
outsb
pop
insl
pop
je
jmp
adc
xor
add
lods
jl
and
outsl
pop
cmpsb
hlt
push
imul
fldt
jge
sub
adc
addl
loop
int
ret
int3
and
xchg
xor
pop
fisttpl
cmp
lea
jae
hlt
fsubrs
out
data16
mov
mov
dec
lea
insb
loope
sbb
cli
sbb
sbb
adc
sub
and
cli
ret
mov
cmp
bnd
xor
nop
jae
popa
pop
fisubl
rclb
rcrb
sbb
pop
imul
mov
dec
sub
mov
cmp
stos
cmc
insb
daa
mov
movsb
outsl
outsb
aas
fstp
push
out
push
mov
dec
movsl
cmp
mov
push
addr16
es
cmp
fucomip
pop
popf
test
nop
mov
or
or
data16
jmp
or
or
mov
cmpsl
or
int
sbb
out
loope
or
cld
push
cwtl
jno
add
aad
iret
jmp
push
pop
xchg
sub
out
push
daa
fisubrs
xor
sahf
les
fldt
cwtl
loop
xor
jbe
jp
hlt
inc
jb
mov
mov
fs
rorl
or
add
mov
inc
hlt
jmp
ljmp
mov
out
add
out
push
dec
sarl
mov
mov
jb
daa
movsl
cmp
fdiv
andl
mov
xor
mulb
push
sub
pusha
push
pop
inc
and
ja
stos
dec
testl
inc
xchg
fsubrl
nop
sub
sbb
lahf
jecxz
ret
icebp
lods
pmullw
insl
xchg
mov
scas
inc
sahf
ret
aas
push
cld
jb
push
outsb
idivl
stos
mov
imul
push
jecxz
lcall
push
repnz
in
jmp
dec
mov
sbb
xor
lcall
or
lahf
stos
xlat
mov
xor
pop
push
push
sbb
and
popf
cmc
mov
lods
mov
out
mov
enter
inc
or
ret
shlb
mov
xchg
lds
pop
hlt
push
mov
cwtl
push
popf
repz
test
cmp
mov
add
fs
subb
sti
pop
addr16
fwait
pop
or
inc
lahf
push
cmp
orb
pop
and
aad
lods
xchg
or
jl
jge
inc
cmc
ss
adc
push
pop
movsb
ljmp
add
jbe
or
rclb
sbb
jns
clc
out
jmp
daa
push
fistl
sbb
icebp
and
enter
or
or
popa
shl
pop
insb
sbb
sbb
ret
sub
shrl
inc
ss
xor
xchg
sub
insb
sub
cmp
clc
and
xchg
sbb
and
mov
sub
cmp
shrl
xchg
lods
das
inc
enter
pop
inc
sub
test
std
adc
jmp
daa
jnp
outsb
incl
add
shll
int
pop
dec
adc
dec
clc
adc
push
pop
xchg
insl
in
cmp
inc
xchg
add
add
sbb
jbe
sub
fs
dec
dec
mulb
jb
pop
outsb
xlat
cld
lock
aaa
xchg
bound
inc
inc
sarb
rcrb
xchg
dec
cld
icebp
sbb
jp
cmp
xchg
push
fstpl
sbb
stos
sub
sti
mov
scas
lret
sahf
aam
negb
cmpl
cld
and
rcr
pop
xor
xchg
inc
lcall
sub
jp
adc
nop
dec
dec
mov
or
jno
cmp
lods
sub
repnz
cmpsb
mov
mov
fwait
test
pop
push
xlat
or
xor
inc
repnz
sahf
jmp
adc
jge
pop
cmpsl
pop
adc
cs
xchg
int3
scas
cwtl
adc
ret
lahf
or
popa
add
jp
adc
cmp
dec
call
idivb
mov
and
pop
mov
daa
cmp
ret
cld
orb
outsb
adc
xchg
lds
mov
cli
imul
mov
into
jne
cmc
sbb
adc
pop
mov
fdivrp
outsb
xchg
dec
mov
mov
lahf
push
pop
mov
sbb
pop
imul
dec
pop
lock
scas
sbb
iret
call
xchg
in
test
outsb
adc
popa
push
stos
sub
pop
or
bound
pop
mov
mov
repnz
mov
addl
jb
pop
cmpsb
in
aas
iret
mov
pop
adc
adc
push
mov
adc
aam
loop
cmc
ficoml
jns
or
xchg
das
pop
xchg
cli
ret
shrb
ljmp
aas
lds
cmpsb
jo
jo
pop
jo
or
lahf
data16
mov
cmp
xor
dec
out
test
mov
out
xor
xchg
imul
add
xchg
repnz
sub
popa
sub
dec
bound
rorb
fs
mov
outsb
out
push
fadds
test
jg
ljmp
repnz
popa
imull
lcall
fyl2xp1
add
mov
and
es
loope
loop
lahf
mov
jbe
xchg
adc
pop
jl
add
inc
in
pop
mov
jmp
popf
loopne
jo
mov
mov
push
cld
lcall
inc
lock
or
nop
and
jno
ficomps
add
mov
dec
imul
enter
repnz
push
and
cwtl
jl
in
daa
xchg
pop
sub
xchg
xchg
ljmp
dec
loopne
lds
xchg
xchg
sbb
cmp
scas
cmp
int3
inc
inc
mov
mov
aas
xchg
mov
divb
lret
dec
jbe
lcall
sti
cmp
mov
xchg
dec
insl
xor
mov
aad
or
out
js
sub
loopne
sub
ljmp
push
push
idivl
fldt
fisubl
rcrb
mulps
rcrl
xchg
ds
or
push
ss
js
icebp
aas
sarl
fsts
sub
movsb
xor
xor
test
shl
out
jne
mov
mov
in
xor
push
in
jge
insb
push
into
jno
iret
cmpb
sub
mov
mov
xor
and
sub
addl
leave
or
insl
add
popf
jne
fsubr
pop
sub
push
xorl
jmp
dec
or
movsb
popa
dec
iret
add
add
and
orl
loope
fisttps
test
jg
jl
jecxz
add
cltd
repnz
xchg
imul
xlat
pop
pop
fdivs
push
fisttps
jmp
mov
aas
add
add
jno
adcl
fnstsw
mov
adc
pop
xlat
adc
dec
movl
je
fsubl
sbb
and
mov
out
add
jle
mov
cmp
cs
adc
clc
jp
dec
pop
add
and
dec
fs
into
cli
fldcw
inc
mov
daa
aad
je
into
rcl
adc
lret
es
and
jle
inc
or
loop
mov
mov
mov
scas
pop
dec
pop
insb
int
adc
ret
clc
pushf
stos
jle
fsubrs
jns
or
jns
sub
test
inc
fcomi
push
inc
cs
loop
xchg
add
movsl
push
xchg
or
cmp
lcall
xor
jl
xor
mov
cwtl
fxch
xor
stc
into
ret
test
inc
pop
sbb
out
shll
popf
inc
dec
inc
ficoms
cmpsb
push
div
push
cmp
add
fld
stos
sbb
jb
lock
loope
pop
mov
es
inc
inc
mov
fcoms
adc
mov
add
and
jl
adc
or
hlt
and
inc
lret
test
add
lahf
es
mov
arpl
xchg
jecxz
mov
adc
sub
repz
mov
xor
hlt
jo
int3
xchg
push
push
xchg
ficoms
xchg
int
std
mov
push
aaa
push
push
hlt
adc
dec
loop
in
popa
mov
add
cmp
into
lret
pop
outsl
scas
jp
mov
stos
inc
xor
inc
mov
pop
mov
aam
and
xchg
xchg
out
add
lods
add
outsb
pusha
js
inc
loop
push
nop
fistl
into
adc
sub
jno
or
pop
std
xor
daa
decl
mov
pop
scas
xchg
mov
int
les
cmpsl
push
imul
xchg
sbb
inc
lock
sub
inc
inc
xor
xor
cli
xlat
in
ficompl
dec
repnz
xchg
jecxz
orl
mov
mov
inc
stos
add
stc
leave
sub
test
aad
outsl
push
pop
ja
or
cmpxchg
cld
movsb
push
xor
mov
mov
sbb
int3
push
gs
dec
test
repz
sbb
inc
jnp
popf
and
lods
mov
mov
dec
xchg
jp
adc
out
jp
in
into
clc
mov
pusha
gs
es
dec
xor
pop
pop
inc
pushf
jmp
sbb
pop
push
jbe
push
push
sub
jnp
cmpsl
scas
in
push
fdiv
xchg
xor
jns
cmp
into
ret
arpl
mov
sub
pop
pop
out
inc
aad
cld
je
dec
cmc
shrl
add
test
mov
aaa
int3
jne
inc
mov
jecxz
mov
mov
dec
fistpll
sbb
add
leave
mov
fisubs
in
dec
faddl
xchg
mov
cmp
jne
imul
leave
xchg
pop
mov
test
xchg
daa
cmp
leave
addr16
sbb
add
icebp
loop
pushf
mov
add
insb
pop
cmp
push
sub
mov
push
in
mov
or
or
mov
aad
jmp
jl
jo
in
jb
mull
mov
cmp
adc
mov
fsubl
cmpsl
lret
mov
xchg
lret
icebp
je
inc
xchg
outsl
cmpsb
lds
sbb
sbb
repz
jne
movsl
mov
fwait
mov
sub
frstor
lods
cltd
cld
loopne
loop
adc
inc
jnp
push
add
cli
and
lds
fs
push
idiv
pop
shlb
pop
sbb
push
and
sub
pop
inc
push
std
repz
cmpsl
inc
xchg
lret
movsb
jle
mov
dec
dec
roll
shlb
bound
jmp
mov
test
out
das
lcall
ds
mov
add
xor
sub
push
adc
nop
loope
sub
and
lcall
ljmp
loope
stc
test
pop
add
inc
data16
int
rcll
dec
jne
adc
xchg
gs
sbb
xchg
inc
pop
in
cli
jp
mov
rorb
movsb
push
adc
cmp
jns
inc
xor
xchg
sub
mov
xchg
aam
and
mov
mov
mov
scas
ror
call
nop
mov
fiadds
dec
or
jbe
insb
push
stc
mov
aas
fildl
rcll
pushf
xchg
int3
sbb
call
dec
dec
loopne
aad
inc
jne
jo
jns
add
pop
std
sub
cmp
ret
sbb
rolb
fdivp
jg
subb
dec
pop
mov
push
sub
add
sub
movsl
or
push
xor
inc
pop
stos
mul
and
mov
adc
xchg
mov
sub
adc
fxch
jne
xchg
mov
push
es
loopne
dec
adcl
in
push
push
cwtl
sbb
pop
or
sbb
inc
or
cmp
pop
mov
dec
fwait
test
orb
bswap
mov
add
sub
and
xchg
adc
enter
mov
jb
dec
out
mov
jecxz
sbb
in
shl
int
dec
call
lahf
cltd
int
bound
mov
hlt
stos
rcr
cmp
ds
mov
xor
mov
mov
movsb
xlat
jae
jmp
push
add
das
pushf
sti
in
ror
inc
mov
sub
nop
stos
lods
or
es
test
cmpb
sbb
xor
mov
dec
in
insb
adc
pop
aaa
xchg
test
sub
gs
clc
mov
add
imulb
push
adc
outsb
cmpsl
insb
mov
mov
sarb
adc
jae
jl
mov
push
nop
out
jnp
test
and
mov
add
jl
lahf
setae
and
add
mov
jns
sbb
nop
sub
fisubl
ja
hlt
popl
or
dec
add
push
pop
fst
adc
xchg
outsb
sar
push
clc
mov
mov
inc
mov
and
iret
mov
xchg
iret
pop
pushf
jge,pn
sub
rcl
cmp
fsubrl
scas
rclb
stos
int
lret
adc
data16
push
loopnew
fdiv
ljmp
je
loop
cmp
call
fs
cmp
pop
data16
icebp
adc
cmpsl
pop
mov
pop
or
loopne
pop
and
inc
adc
mov
insb
outsb
les
cmp
sub
pop
aaa
push
cmp
pop
mov
add
clc
or
ror
dec
sti
or
shlb
or
xchg
mov
out
mov
add
mov
mov
mov
mov
rcrl
test
test
daa
xchg
lret
mov
out
aad
inc
mov
test
mov
cmpsl
fistl
pop
xor
out
inc
jb
bound
cmp
outsb
daa
push
and
out
ss
pop
inc
cmpsb
or
xchg
inc
das
pop
aas
nop
inc
in
fbstp
xor
arpl
sub
subb
inc
std
adc
push
test
pop
pusha
repnz
mov
inc
aas
clc
lds
dec
lock
pop
das
cld
rolb
inc
or
fstpt
ret
scas
push
mov
or
fildll
mov
cmpsl
dec
movsb
data16
outsl
ljmp
rcll
jno
popf
outsl
inc
xor
pop
cmp
daa
mov
or
daa
sub
cmp
lods
jmp
jae
add
xchg
rcrl
lahf
jnp
push
mov
lock
or
or
add
les
push
aaa
and
adc
sbb
mov
xchg
mov
rolb
nop
or
fbld
adc
xor
leave
stc
js
sub
sub
imul
test
enter
add
bound
das
push
xor
sti
pop
push
outsb
loope
mov
push
mov
cld
mov
mov
inc
xor
das
mov
in
mov
adc
cs
jmp
jbe
xchg
icebp
mov
dec
sbb
leave
lock
cmc
lods
in
xor
mov
shlb
fisubl
jmp
add
inc
cmp
pop
mov
dec
cmp
sbb
cld
cmpsb
xor
cmpsb
aaa
inc
xchg
xchg
orl
mov
leave
push
imul
or
jo
loope
xchg
adc
ret
mov
ret
inc
push
or
mov
lds
pop
dec
mov
cwtl
mov
mov
and
mov
jp
mov
lock
jno
jge
or
shrb
imul
add
daa
xchg
pop
dec
cwtl
sarb
hlt
push
inc
xor
loope
push
aas
enter
pop
or
xor
clc
mov
xchg
fmull
xchg
ficomps
outsb
daa
mov
jns
push
mov
inc
add
dec
cltd
and
mov
arpl
lret
mov
jb
ret
fs
testl
scas
aas
pop
in
aaa
xor
xor
dec
dec
std
and
mov
icebp
cli
mov
sarb
and
outsl
pushf
push
cmp
in
push
and
dec
test
push
sub
push
inc
xchg
lods
pop
lea
jns
orb
into
xor
hlt
or
dec
pop
xor
pop
adc
pop
gs
jnp
and
mov
outsl
popa
jg
inc
popf
mov
pop
outsl
pop
push
mov
es
push
xor
xchg
mov
sub
scas
enter
jle
mov
mov
loopne
in
in
imul
mov
jl
rcr
jl
sahf
cmpsb
inc
mov
xor
xor
or
mov
xor
mov
mov
jbe
popa
aas
mov
enter
add
add
inc
lret
push
ljmp
cmp
das
outsl
outsl
adc
cs
mov
jns
jecxz
int3
mov
push
mov
mov
mov
xchg
add
and
dec
mov
jge
ds
mov
jmp
repnz
rolb
test
jg
inc
in
and
icebp
test
mov
xor
stos
imul
loope
adc
dec
gs
fbld
fsubrl
mov
xchg
into
push
cmp
jmp
mov
inc
clc
jg
add
jb
inc
lock
mov
stos
dec
icebp
mov
jnp
imul
jle
inc
jp
hlt
test
and
adc
cli
cmp
mov
bound
mov
leave
andb
and
cmp
mov
pop
add
psrld
cld
in
pusha
out
lods
xor
xchg
nop
in
adc
mov
cli
popf
jmp
cmp
mov
loop
popa
cmp
jmp
push
into
sub
mov
xchg
repz
ljmp
jp
cwtl
roll
sbb
pop
jne
sbb
jmp
cltd
ljmp
xchg
fwait
cmpsb
lods
mov
mov
adc
movsl
scas
repz
sbb
dec
mov
mov
push
pop
movsb
out
loop
iret
cmp
push
xlat
jbe
lock
in
mov
dec
or
cmpl
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
sub
xor
addb
adc
repz
jle
test
test
rcr
lcall
and
inc
imull
cmpsl
adc
das
shlb
dec
dec
loop
push
imul
in
push
cmpsl
adc
outsb
mov
fidivrs
or
adc
sbb
dec
dec
jb
mov
dec
add
xchg
fld
pop
ljmp
mov
jmp
or
das
xor
push
and
lret
imul
sbb
adc
pop
cs
in
jg
es
cmpsl
ljmp
fidivrl
dec
xlat
mov
jge
jo
outsl
rclb
jae
mov
cld
aad
push
push
je
inc
shlb
int
pop
or
je
outsl
or
xchg
dec
mov
in
inc
test
je
jnp
pop
xor
or
mov
aaa
xor
dec
cmp
and
out
je
jge
sar
rorb
jno
enter
jne
gs
jnp
xchg
xchg
cld
lret
jp
adc
lods
mov
adc
ja
xchg
loope
jmp
dec
cmpsb
or
sub
jb
push
out
mov
adcl
gs
push
jnp
ret
jg
imul
std
pop
xchg
jne
jno
loop
push
ds
call
in
lods
aaa
iret
and
sub
pop
jnp
adc
outsb
cmp
shll
aam
push
mov
mov
and
cmc
mov
fnstsw
mov
rolb
dec
or
movsb
aaa
jb
xchg
ljmp
rol
dec
fcomps
pop
cmp
bound
add
pop
lock
jmp
icebp
push
cmpsb
rorl
mov
daa
push
mov
dec
xchg
imul
enter
push
jecxz
jbe
jmp
pop
mov
or
pop
inc
pop
adcl
lret
inc
leave
sbb
jbe
cmp
test
or
jo
mov
mov
xchg
cwtl
add
pop
jmp
in
fcmovbe
push
cli
out
or
out
mov
pop
and
inc
in
insb
movsb
mov
mov
loope
mov
and
push
pop
push
movsl
jg
jno
stc
into
loopne
mov
cmpsl
push
jmp
push
adc
pop
leave
mov
xchg
mov
addr16
iret
dec
xchg
mov
in
jp
jo
xor
es
fdivp
adc
in
add
mov
pop
and
inc
aaa
or
mov
xchg
icebp
dec
adc
adc
mov
call
dec
xlat
icebp
rcl
or
out
inc
xchg
cwtl
xchg
pop
pop
and
xor
rorb
mov
out
cmpl
mov
adc
jns
mov
cmc
ljmp
mov
daa
pusha
pop
pop
dec
xorl
adc
adc
jns
mov
ljmp
adc
dec
mov
bound
mov
addb
and
xchg
jge
xor
jp
int3
mov
mov
fisubl
lahf
sbb
imul
push
push
xchg
popl
rcr
pop
jle
addr16
mov
sub
dec
lds
pop
call
imul
div
cli
xchg
jae
sub
inc
dec
pop
lds
incl
mov
fldt
ja
aad
lahf
jb
leave
andb
mov
lea
sub
lret
mov
leave
pop
fistl
insl
iret
push
into
mov
call
xor
or
loope
fwait
push
fists
scas
mov
sbb
clc
push
mov
out
and
add
movsl
shlb
bound
inc
movsl
ds
sub
into
ds
jecxz
jno
in
xor
xchg
lods
xlat
out
dec
pop
cmp
and
xlat
ret
cmp
outsb
cmc
js
push
fsubs
ffreep
jl
lea
push
std
push
sbb
sub
or
mov
mov
ljmp
out
and
and
pop
sahf
lods
gs
loope
pop
and
scas
jne
mov
cwtl
mov
jmp
push
mov
enter
and
mov
xor
sbbb
stc
mov
adc
pop
ficompl
add
out
test
cmp
push
adc
and
mov
inc
das
fdivrs
jle
cmp
lea
pop
into
mov
lret
sahf
add
bound
daa
mov
iret
rcrl
js
fcomp
lea
dec
lcall
lcall
mov
and
push
mov
sub
fisubl
mov
mov
xlat
cs
into
imul
mov
test
mov
push
sti
stc
les
pop
xchg
les
dec
sbb
bound
mov
sub
pop
mov
mov
into
shr
xor
stc
and
jmp
dec
daa
inc
dec
rolb
in
fdivrl
pop
xlat
xchg
pop
dec
mov
cmpsl
cmc
cmp
std
loop
lcall
mov
gs
je
sub
sahf
jg
lcall
adc
imul
sub
dec
mov
subb
jbe
into
ret
push
mov
jle
in
mov
push
arpl
pop
lahf
or
add
cmp
lock
insb
jno
nop
or
mov
scas
test
adc
jns
inc
inc
in
xchg
mov
rolb
xchg
jmp
repz
jge
jnp
sbb
and
pop
lret
mov
add
xchg
jge
jns
call
in
jg
dec
test
fwait
sub
mov
and
cmp
hlt
hlt
rcr
jnp
adc
aas
and
out
mov
xorb
shrb
ret
fimull
mov
xchg
aam
shlb
push
insl
movsl
xchg
arpl
stos
mov
add
cmp
mov
ret
outsl
and
or
aad
bound
lret
mov
lds
lods
daa
aam
jo
xchg
push
jge
mov
aas
fistps
sub
and
xor
mov
inc
je
mov
xor
xchg
and
xor
cmp
jle
sub
cmp
add
aad
in
shr
stos
add
mov
jl
dec
mov
out
cmp
imul
test
cmpb
xchg
repz
xor
xorl
xchg
mov
push
cli
and
dec
movsl
xchg
xchg
out
movsl
adc
adc
mov
mov
push
xlat
dec
sahf
mov
dec
orl
sub
cmp
dec
out
sti
insb
aas
into
adc
aad
xchg
test
lods
ljmp
jns
pop
in
in
lods
test
cmpsb
mov
jne
add
mov
roll
stos
mov
and
jl
clc
dec
aad
push
mov
dec
xor
loopne
or
testl
lcall
adc
cwtl
add
adc
push
out
push
xchg
dec
xchg
daa
and
mov
lret
add
popl
lods
xchg
shlb
add
inc
pop
icebp
cli
xor
icebp
add
shlb
roll
cmpsb
cmp
push
addr16
test
dec
stc
cmp
imul
xchg
rolb
push
xchg
cmp
shll
mov
push
inc
inc
cmpl
mov
addr16
jbe
shl
loop
mov
xchg
nop
cmp
mov
lds
ja
fstps
and
insl
and
jae
outsl
push
pop
leave
or
xchg
sub
pop
shll
addr16
stc
pop
rorl
lret
fiaddl
repnz
push
sbb
movsb
sti
cltd
inc
mov
mov
daa
push
loope
and
push
hlt
jne
shlb
add
cltd
cwtl
dec
mov
sub
mov
fcomi
lret
arpl
push
test
or
out
inc
lcall
mov
xlat
jecxz
js
xchg
rolb
stos
insl
push
add
insl
add
scas
iret
aam
pop
test
cmp
test
icebp
daa
or
and
sbb
cmp
pop
mov
cld
mov
cltd
mov
cmpsl
hlt
in
pop
sbb
jbe
push
push
into
add
das
sub
xchg
cmpb
sub
test
sbb
testl
dec
in
cmpsl
fdivl
mov
add
movsb
pop
in
add
mov
les
cltd
sub
push
cmpsb
insb
fbld
mov
sbb
jb
js
test
jnp
leave
lock
adc
movsb
inc
cmp
in
cmp
sub
xor
sub
push
sbb
jb
jns
and
inc
scas
mov
lcall
mov
mov
mov
imul
cli
psubsb
cli
pop
and
or
loope
cmp
int3
lea
push
sub
int3
or
gs
fstpt
jmp
das
push
mov
jae
mov
cwtl
xor
cmp
adc
imul
pop
dec
push
in
subl
dec
jg
shll
pop
sub
in
repz
and
and
stos
and
aaa
subl
push
inc
test
stos
jecxz
and
popf
nop
aad
movsl
sarb
push
das
outsb
mov
rolb
cltd
les
idiv
sahf
arpl
jns
jb
jl
into
dec
xchg
lahf
into
pop
icebp
fidivrs
les
cwtl
push
cmpsb
ss
or
inc
cli
iret
jns
jp
push
dec
imul
push
call
and
addr16
xchg
mov
outsl
mov
push
add
sbb
cmp
clc
push
arpl
jns
divb
cmp
nop
divb
pop
sbb
arpl
ret
add
push
push
movsl
repnz
pop
jne
sbb
call
call
mov
cmpl
outsl
mov
mov
div
sbb
aam
or
ret
dec
fwait
inc
ficomps
les
jnp
inc
in
aad
xchg
pop
push
in
or
pushf
lock
sbb
in
cmp
and
mov
and
inc
mov
adc
inc
or
cmpsb
mov
push
mov
push
jmp
ftst
cmc
lahf
mov
movsb
popf
lcall
mov
sbb
hlt
mov
sti
pop
sub
jb
icebp
stos
inc
add
mov
adc
push
add
ljmp
mov
xchg
fcmovne
repnz
pop
xchg
and
inc
mov
xchg
pop
scas
mov
nop
fs
pop
ret
lds
pop
bound
sbb
out
inc
or
mov
loop
pop
push
cmpsb
not
jb
scas
mov
dec
in
rorb
adc
int
sub
adc
mov
inc
mov
out
xlat
jp
loop
mov
push
push
mov
xor
les
or
outsb
int3
adc
shlb
sbbb
push
fdiv
jle
ss
inc
sub
xor
cmc
dec
js
mov
in
ja
and
mov
loopne
sbb
rcrl
and
mov
cwtl
into
add
mov
pop
pushw
jne
inc
adcl
cs
aaa
xor
pusha
icebp
aad
pop
pusha
lea
idivb
ljmp
mov
pop
xchg
mov
outsb
push
fwait
pop
xchg
push
fistpll
adc
pop
sbb
loopne
les
push
notb
outsb
lea
addr16
xchg
xor
outsl
addb
and
shlb
or
lods
mov
ljmp
das
sub
xor
test
mov
test
out
call
xor
mov
subb
popa
jnp
mov
out
add
sbb
adc
mov
lock
cmp
add
inc
sbb
jnp
imul
lcall
jne
dec
test
adc
xor
pop
xchg
jp
mov
lds
pop
xor
popa
stos
push
iret
dec
and
pop
andb
inc
sbb
inc
and
pop
cld
lods
sbb
cmpsb
jmp
and
jbe
sbb
cmp
inc
fs
cmp
mov
cld
or
aas
sbb
js
pop
push
xchg
and
popa
mov
int3
out
cmp
lret
mov
into
push
jns
dec
subl
sub
xor
jns
push
cmp
std
outsb
ret
inc
or
dec
jle
add
push
mov
scas
pusha
jecxz
ds
push
mov
or
ret
jno
mov
gs
and
lock
outsb
mov
xchg
mov
clc
mov
out
mov
mov
aam
jp
insb
cltd
int
pop
jae
cmp
xchg
push
pushf
inc
in
popf
mov
xor
xlat
xor
je
shlb
hlt
cld
or
mov
stos
fs
sub
cmc
sbb
mov
sub
pop
push
mov
int3
pop
xchg
out
fcomi
movsb
fcomps
dec
jmp
bound
pop
push
cltd
outsl
and
outsl
andl
and
xchg
dec
mov
mov
cwtl
lahf
sub
jno
push
push
pusha
scas
push
out
push
xchg
in
cmpsb
mov
mov
sti
ljmp
sub
mov
push
xchg
lcall
aam
mov
mov
leave
jge
pusha
or
dec
ret
cmpsb
or
dec
jmp
or
mov
int3
pushf
push
push
and
je
sahf
cmpsl
out
out
arpl
adc
adc
lret
stos
sbb
dec
scas
aas
adc
test
test
push
clc
out
loop
iret
push
cmpsb
int3
iret
pop
bound
das
aaa
add
jle
pusha
aad
push
mov
push
int3
cmpsb
inc
ja
movsl
aas
or
mov
sbb
jmp
hlt
sbb
jg
ret
call
xchg
insb
push
es
jp
cld
pop
aad
cmp
add
pop
sbb
dec
mov
int
push
mov
fnstenv
sbb
fcmovnu
push
mov
mov
test
scas
sbb
push
stos
add
lock
xor
ljmp
mov
adc
shrl
fcomi
inc
fstpt
in
and
subb
mov
rcrl
inc
call
mov
dec
test
hlt
in
xor
in
or
mov
xchg
mov
mov
jmp
insb
mov
sbb
ss
ljmp
jno
in
lahf
into
pop
cmpsb
lea
insb
or
into
cmp
ror
sahf
out
repz
lahf
xchg
adc
gs
mov
stos
sbb
aam
sub
jmp
add
fmul
mov
dec
mov
in
aaa
xor
pop
jno
pusha
test
ljmp
call
loop
lods
notl
sub
or
aam
lods
cmovne
bsf
add
ljmp
sahf
pop
lods
fiaddl
dec
mov
xchg
sub
mov
push
pop
mov
mov
out
cmp
pop
sub
fwait
stos
pop
push
sbb
or
inc
fldl
and
or
ljmp
and
insb
leave
mov
sbb
add
mov
adc
mov
push
add
pop
cmc
or
sti
jne
psrad
jbe
sbb
enter
pop
or
fucom
mov
roll
aaa
jmp
sti
aaa
in
add
push
push
mov
mov
inc
lahf
dec
sbb
jmp
lcall
xor
daa
inc
loop
ficoml
inc
jecxz
rcl
xchg
pop
fimuls
bound
mov
jmp
inc
pop
mov
pop
mov
and
push
pop
inc
out
mov
cwtl
dec
jae
cmp
bound
dec
xor
sbb
fucom
pushf
das
out
push
mov
mov
andb
gs
enter
mov
dec
inc
mov
andb
jne
fwait
lret
mov
inc
out
ja
insb
cmc
insb
shll
test
mov
add
adcb
xor
insb
movsb
rcr
out
ja
test
push
mov
mov
inc
xor
dec
jns
dec
add
lret
into
std
iret
jmp
lret
cwtl
xor
fadds
adcl
repz
ss
and
js
jne
scas
aad
insl
cmp
jmp
or
xor
xor
ret
xlat
fs
mov
pop
pop
sub
adc
ffreep
mov
jnp
or
in
or
mov
int3
adc
mov
mov
jge
sub
pop
pop
cltd
sti
loopne
and
pop
call
jge
inc
orl
push
cltd
fnsave
mov
mov
dec
xchg
cwtl
cmp
in
dec
loop
or
sahf
lret
pop
pop
xor
addr16
movb
dec
rclb
mov
pop
sarl
mov
iret
pop
pushf
pop
outsb
mov
sahf
dec
jge
or
pop
outsl
xlat
xchg
inc
fistpll
mov
and
add
repnz
mov
cli
lea
fistl
jmp
push
cmp
icebp
cmp
out
jnp,pn
stos
pushf
and
cmp
xchg
xchg
dec
xchg
sbb
dec
addr16
out
fs
adc
add
and
dec
or
lahf
push
sub
dec
shl
out
mov
es
inc
gs
ja
cmp
fcmove
or
mov
mov
and
incl
fstpl
addr16
push
rcr
aas
jae
cmp
or
mov
jg
enter
out
lds
in
adc
and
mov
mov
call
and
or
xor
inc
or
and
pop
orb
mov
push
pop
or
roll
mov
mov
push
cmp
pop
cmp
test
cld
lds
fdivrl
xchg
dec
cmp
out
sbb
popf
add
sub
cmp
in
inc
add
loope
dec
sarl
jo
incb
dec
sub
das
push
cltd
pop
sbb
jecxz
push
or
xchg
and
flds
mov
lret
jmp
xchg
mov
aad
dec
vandps
pop
mov
mov
ret
in
cmp
cmc
aas
sbb
add
adc
outsb
xor
cmp
adc
sub
pop
push
mov
sbb
fcomps
and
daa
xor
cmp
xor
iret
jl
mov
push
adc
andl
adc
jno
daa
daa
js
adc
mov
clc
xchg
les
or
adc
inc
fucom
repnz
cld
cmp
rcr
bound
mov
in
clc
xchg
cltd
testb
pop
add
push
rcrl
jge
mov
mov
mov
mov
pusha
add
lods
mov
loop
in
inc
loopne
dec
sarl
js
test
insl
jecxz
cmp
stos
js
repz
lds
cld
inc
pop
pop
mov
sub
mov
and
inc
pop
jle
adc
inc
push
popa
into
xchg
repnz
popa
movsb
cmp
adc
mov
xchg
notb
push
or
jae
xchg
orl
or
jno
addr16
inc
movsl
inc
in
outsl
push
test
hlt
sub
pop
aaa
sbb
adc
fistpl
in
aas
movsb
mov
jno
xchg
out
and
dec
inc
mov
or
inc
add
sbb
cs
and
cld
push
xchg
xor
sbb
cmpsl
pop
inc
pop
fwait
aam
outsb
insl
pop
xor
fwait
sub
pop
xor
mov
negl
loopne
subb
or
jp
stos
stos
xor
xchg
pushf
sbb
inc
cmp
fsubr
out
sub
xlat
jns
neg
fwait
cmp
push
mov
xchg
adc
ds
out
lods
mov
bnd
in
mov
xor
repnz
mov
jae
mov
mov
jns
sub
cmpsl
push
inc
sbbl
push
sahf
jnp
pop
cmpsl
xchg
dec
adcl
add
outsb
pop
bound
cmc
int
iret
inc
pop
cmp
test
cltd
sub
pop
inc
push
aas
fiaddl
dec
rcl
shll
xor
push
call
pop
jp
sarb
imul
add
dec
pop
pushf
fs
notl
lea
sbb
enter
rorl
andb
out
roll
test
inc
out
xchg
adc
test
or
jne
xchg
jo
into
mov
int3
pop
xchg
jb
stc
data16
rorl
or
dec
aam
ret
pop
test
adc
add
in
xor
test
ljmp
dec
jle
push
dec
mov
jge
aam
push
xchg
jge
xor
inc
jge
pop
or
aaa
les
xchg
stos
push
in
aam
and
loopne
int
push
imul
xor
jmp
mov
leave
cltd
lret
call
sub
shrb
stos
cmpsl
add
inc
ficoml
sub
movsl
jbe
inc
inc
add
cmp
arpl
rcrl
add
mov
imulb
insl
out
das
movsb
test
fdivrl
adc
xchg
mov
adc
sbb
in
rcll
mov
mov
insl
pop
lods
push
inc
pop
outsb
sbb
push
adcl
cwtl
cmp
addl
xchg
xchg
mov
jmp
sbb
gs
mov
bound
inc
jne
gs
sahf
in
bound
push
int3
popa
or
aad
jnp
cmp
out
mov
sub
mov
push
std
out
cmc
roll
fsubl
push
pop
sub
das
add
fwait
addr16
and
fwait
pop
push
aam
mov
push
inc
add
pop
push
pop
inc
mov
push
push
dec
and
aaa
push
addr16
sub
and
xchg
dec
sub
subl
js
loope
jge
xor
pop
lods
mov
add
sub
mov
or
sub
imul
dec
in
inc
mov
adc
mov
call
js
jp
iret
mov
fsub
out
dec
xor
or
jo
stos
inc
jne
js
ljmp
mov
test
mov
lods
sub
jge
pop
mov
lods
mov
inc
lahf
jl
mov
pop
and
xor
and
dec
push
faddp
in
or
jg
push
movsb
addr16
rorl
xor
out
cmpsl
imul
mov
push
jmp
mov
pop
jecxz
and
pusha
in
and
mov
push
cmp
mov
pop
sub
pop
or
push
sbb
insl
adc
popa
mov
inc
mov
gs
inc
and
dec
cld
pushf
xchg
js
cld
inc
sub
sub
jp
insb
cmp
cmc
mov
fs
inc
jo
mov
shl
enter
popf
daa
adc
sub
call
fcmovb
xchg
dec
and
jge
mov
lds
mov
mov
test
jb
mov
repz
insl
xchg
or
add
test
loop
leave
jmp
push
sub
mov
pop
pop
push
add
mov
cwtl
daa
cmpsb
sub
outsl
push
mov
aam
ja
pop
sbb
dec
repz
mov
adc
mov
pop
xor
aaa
popa
lahf
and
sbb
cmp
mov
cmpsb
sbb
std
lahf
rcrb
push
lret
aam
test
loopne
sbbb
into
insl
lods
mov
lods
mov
lret
inc
mov
std
mov
fnstenv
jg
imul
loope
sbb
dec
push
push
insl
xchg
push
out
sbb
push
cmp
or
add
in
mov
lock
push
cwtl
push
jns
fs
sbb
push
mov
add
jl
sub
inc
xchg
jle
dec
fldcw
divb
xor
f2xm1
jbe
cli
push
and
lock
movsb
add
mov
ja
in
and
and
jl
movsb
idivb
in
mov
adc
and
inc
push
jmp
sbb
xor
cmpsb
jg
mov
nop
negl
in
dec
mov
neg
mov
xor
mov
lods
cmp
stos
loop
into
fincstp
ret
mov
sahf
jmp
xor
push
aad
jp
je
pop
sarl
insl
or
fcompl
das
hlt
sbbb
out
pushf
stos
push
pusha
enter
push
sbb
addr16
ret
push
aad
pop
pop
pop
fdiv
pop
inc
sub
aam
ss
cltd
or
jg
mov
aad
mov
pop
pop
mov
jb
arpl
add
imull
les
test
jns
lods
fimull
repz
and
inc
pop
clc
adc
dec
jbe
push
idivb
sub
adc
and
and
fisubrl
mov
stc
push
les
mov
out
loop
jo
mull
shl
ret
jecxz
scas
jge
cmp
data16
mov
xchg
repz
dec
inc
add
mov
mov
cwtl
mov
test
cmpsb
ret
jns
adc
dec
dec
mov
xor
mov
lods
stc
arpl
pop
cmp
adc
stc
popa
adc
int3
icebp
inc
lods
cmp
lret
mov
stos
cmpb
and
clc
dec
adcl
fs
mov
movsl
mov
jo
xchg
ret
xchg
mov
fiadds
lock
ret
repnz
pop
out
enter
in
outsb
lret
pushf
mov
insl
shrl
enter
inc
das
mov
jge
mov
out
jl
cltd
into
fildll
dec
test
pushf
or
fmuls
mov
call
lret
scas
shld
inc
clc
jl
lret
dec
or
pop
add
dec
movsb
adc
add
testl
popf
imul
scas
stos
jmp
ds
jmp
les
jns
inc
daa
dec
aam
push
push
push
xor
dec
fwait
inc
sub
sub
jo
loopne
mov
jecxz
pop
lock
xchg
ret
aad
in
mov
fstps
mov
scas
mov
xor
adc
das
in
adc
shl
jl
or
inc
pushf
lret
dec
out
cmp
jbe
in
movsb
nop
loope
cmp
test
inc
pusha
add
jmp
ucomiss
jp
outsl
clc
hlt
ret
jnp
loopne
xor
in
or
loop
jl
jne
and
push
push
dec
in
lret
fists
bound
arpl
xchg
push
mov
jo
mov
jp
je
es
push
adc
inc
arpl
jns
in
rorb
or
jnp
aas
pop
push
mov
sub
leave
add
pop
cmpsb
cmp
cmp
popa
jbe
mov
adc
pop
push
xorb
adc
stos
bswap
mov
ror
cltd
orb
mov
pop
jge
xrelease
sbb
mov
mov
xchg
inc
fisttpl
lods
push
add
out
sub
xchg
mov
push
add
cwtl
xchg
xchg
std
test
or
test
xlat
push
popa
imul
xor
fstpl
sti
mov
sbb
adc
mov
dec
and
dec
sbb
scas
mov
cmp
push
sub
nop
sbb
test
lds
mov
cltd
xchg
add
sub
enter
push
cmpsb
inc
aad
roll
test
pop
movsl
fbstp
sbb
or
push
cmp
or
xchg
add
dec
and
xor
or
xlat
lock
test
or
or
mov
cmp
inc
adc
ss
mov
mov
cmp
rcrl
rcll
xchg
mov
cmpb
ss
xorb
fldt
mov
mov
push
dec
popa
push
jns
fbstp
mov
sti
loopne
adc
fcmovne
movaps
mov
popa
mov
push
xor
mov
sbb
jbe
jp
imul
mov
leave
xchg
dec
and
cmp
js
dec
dec
mov
lods
js
add
jno
cltd
clc
adc
xchg
loop
out
push
cli
adc
push
es
imulb
jmp
insb
sbb
cmp
xchg
cmp
fisttpll
push
mov
mov
jo
cli
push
mov
xor
mov
cmpl
daa
js
imul
xor
jo
jl
sti
xchg
in
mov
aad
arpl
mov
xchg
xchg
cmpsb
and
bound
xor
ret
dec
scas
lret
ret
in
mov
push
inc
or
pusha
push
or
jg
loope
enter
lds
jns
mov
pop
fadds
cli
mov
sub
mov
icebp
enter
push
call
call
les
and
test
andl
ret
push
add
stos
jno
mov
dec
rorb
test
dec
mov
mov
fildl
xor
sti
mov
jg
xor
adc
add
cmc
sahf
dec
add
int3
cmc
int
mov
lret
mov
ret
jbe
into
out
rcll
lret
call
pushf
jmp
or
rorl
imul
imul
mull
push
arpl
pop
adc
call
shll
rolb
xor
add
cmc
mov
pop
fisttpll
inc
mov
sbb
inc
push
mov
stos
repz
in
arpl
jp
mov
daa
sbbl
lret
enter
jbe
cmpsl
fldenv
jmp
mov
mov
adc
and
mov
js
test
shrl
xchg
cmp
inc
lds
scas
sub
and
or
in
cmp
sub
xor
test
lcall
mov
loop
sbb
popf
push
push
inc
sub
out
mov
test
loop
and
decl
orb
scas
add
xchg
dec
adc
pop
in
xor
push
and
test
xor
inc
cwtl
pop
fisttps
jae
in
xchg
lods
jmp
fistl
push
xchg
movsb
in
jo
pop
pop
cltd
mov
mov
pop
xor
pop
jae
push
ja
xchg
fs
cmpxchg
fstpt
push
out
pop
ss
or
and
add
xchg
std
jns
lds
ror
and
xlat
push
ficompl
test
sarl
hlt
daa
xchg
sarl
cld
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
nop
loope
incl
subl
popf
test
mov
add
jl
rclb
jge
into
mov
xchg
js
jnp
sub
sub
int3
int3
jno
mov
mov
push
cmpb
ljmp
mov
xor
movsb
adc
inc
add
jo
aad
mov
rorb
mov
aas
call
or
pop
aam
jo
lahf
aaa
xchg
xchg
arpl
pop
loope
and
and
iret
dec
push
cld
push
stc
cmp
inc
mov
aaa
pop
scas
pop
dec
fdiv
leave
fmull
mov
nop
stos
jge
push
mov
loopne
imul
push
fimuls
dec
lahf
int3
add
sahf
and
mov
mov
fstp
cmp
adc
sub
sub
les
mov
int3
inc
jecxz
adc
sbb
add
fdivrs
pushf
addr16
inc
sbb
mov
mov
jle
push
repnz
add
sub
mov
ljmp
fdivs
notl
sbb
sub
jae
mov
cltd
lahf
mov
popa
inc
and
inc
ja
sbb
rcl
or
into
jnp
mov
ljmp
sub
pop
jb
xchg
sbb
ret
ret
and
int
lock
jmp
or
into
fs
sub
xchg
test
mov
arpl
inc
repnz
adc
outsb
scas
es
and
add
mov
dec
xor
outsb
sbb
mov
daa
pop
subb
fdiv
bswap
fstl
xor
dec
ficompl
ffree
mov
jge
js
enter
fnsave
pop
sbb
mov
mov
xor
inc
pop
mov
pusha
inc
shll
rcrb
sub
adc
ret
jne
cmpsb
xchg
mov
ss
mov
xchg
push
out
sahf
cmpsb
sub
push
jbe
in
jg
xchg
and
fmull
mov
popa
pop
icebp
adc
mov
mov
or
push
in
sub
rol
movsl
testl
clc
inc
fnstsw
mov
lods
pop
fwait
pop
cmp
sbb
test
lcall
mov
mov
lds
out
js
icebp
sub
cmp
mov
inc
xor
pop
scas
mov
mov
push
mov
jbe
xchg
fcompl
or
das
into
mov
fs
test
jmp
pop
sub
inc
add
add
push
xor
pop
dec
push
and
pop
sahf
mov
push
jg
pop
or
scas
test
adc
dec
cli
pop
sti
add
cmpsl
cmp
sti
sbb
mov
push
sub
push
cmpsb
add
sarb
push
xor
jne
aad
bound
push
pop
ret
out
add
mov
and
ret
jbe
fwait
xchg
dec
shlb
mov
pop
cld
hlt
fdivl
mov
loope
mov
push
and
je
add
mov
or
inc
cmp
sbb
push
inc
fistpl
adc
cmp
xchg
pop
push
pop
imul
xor
insb
inc
in
cld
daa
add
xorb
sub
ret
xchg
xchg
mov
dec
mov
cmpsb
mov
ret
loop
inc
int
inc
pop
hlt
lds
push
ds
aad
xchg
or
hlt
jb
sbb
out
test
pop
jnp
into
aam
dec
repnz
cwtl
jg
sbb
dec
adc
add
pop
fisubrs
jb
lods
pop
mov
test
sbb
xchg
lods
sti
add
leave
fucom
out
int3
mov
jnp
jl
fdivrs
mov
and
mov
test
pop
or
das
pop
and
lahf
sbbb
sbb
adc
add
and
iretw
dec
shlb
pop
repz
and
push
mov
rcr
repnz
sub
fmulp
out
pop
mov
test
xchg
jae
in
ja
sbb
fisttps
sub
popf
push
cld
inc
in
push
inc
or
mov
xchg
gs
push
imul
mov
xor
cmc
ret
aam
and
dec
aad
add
add
and
add
sub
add
jne
inc
mov
stc
or
ret
mov
hlt
pop
ret
cmp
push
icebp
iret
inc
xor
jecxz
and
or
and
jbe
addr16
jb
inc
push
mov
iret
bound
aas
and
arpl
sar
gs
xchg
sub
andb
sub
mov
sbb
jbe
add
int3
cld
mov
add
sub
push
sub
int
jo
popf
and
dec
hlt
ret
rsm
imulb
fnstenv
dec
mov
xor
sbb
add
push
clc
jb
mov
rcrb
rcll
add
call
lahf
jp
pop
enter
jge
jge
fnstsw
jo
cld
cltd
mov
mov
lcall
cmp
jne
jbe
jbe
or
jecxz
sti
aas
sbbb
xor
shl
fstpl
pop
ja
ja
aas
and
jmp
or
push
mov
xor
inc
sbb
dec
sub
gs
lock
jle
push
inc
adc
loop
and
loope
pop
cmp
jo
or
iret
sub
lret
test
out
adc
jno
mov
sbb
sbb
aad
in
dec
adc
insb
lret
mov
jg
pop
mov
mov
sar
inc
popa
ror
or
sbb
sub
inc
xchg
add
or
dec
add
ds
cmp
jge
xchg
popf
aas
add
ss
sub
jl
dec
lods
adc
outsb
add
jbe
jp
pop
lcall
jmp
mov
lcall
in
loope
mov
lock
insl
pop
pop
push
not
rorb
in
jge
popa
outsl
sbb
int3
mov
jp
sub
arpl
sbb
ja
sbb
dec
add
jno
xchg
enter
mov
dec
mov
pop
and
pusha
ljmp
lahf
cmc
inc
mov
jbe
pop
and
or
sbb
imul
mov
int3
xchg
rorl
mov
and
dec
in
lea
mov
or
jbe
shr
cmpsb
loope
bound
sub
lea
shrb
call
mov
dec
test
dec
mov
imul
ja
lods
ss
mov
jno
mov
cmp
lret
in
cmp
subb
stos
pop
data16
out
ret
mov
adc
and
fldt
jbe
arpl
sub
data16
and
pop
sbb
mov
outsl
repnz
movsb
cmpsl
mov
fimuls
push
inc
sbb
aaa
mov
jge
add
sub
imul
sbb
addr16
mov
sub
int3
cmpsl
js
packssdw
lods
in
add
shll
fdiv
lods
or
mov
gs
int3
jmp
lahf
and
loop
lock
into
dec
dec
ljmp
dec
adc
or
mov
xor
adc
iret
insl
ffreep
push
mov
xchg
sahf
sarl
sarb
pushf
je
lock
mov
loop
sbbl
push
cmpsb
test
stc
aaa
insl
fxch
cmp
inc
mov
pusha
cld
cmp
and
ss
or
mov
cmp
fists
pop
xchg
je
nop
mov
repz
jp
xchg
inc
loope
sbb
pop
fdiv
xor
mov
stos
loop
out
stos
mov
mov
dec
mov
cmp
jp
sbb
xchg
nop
test
jmp
mov
jmp
sti
inc
jo
movsb
fucomi
lock
inc
pop
and
mov
pusha
push
cmp
fstps
add
cmp
pop
dec
push
mov
xor
sub
insl
inc
sti
sub
cmp
jb
into
and
xlat
hlt
xor
std
or
fnsave
mov
roll
or
push
mov
or
mov
mov
jne
icebp
mov
push
stos
outsl
test
cmp
rorl
mov
push
push
and
sahf
mov
push
cmpsl
dec
sbb
clc
sub
lcall
pop
jge
jg
jg
mov
mov
jbe
sub
fcoms
cmp
pop
cwtl
fwait
and
cmp
insl
mov
xchg
in
mov
cmp
mov
mov
mov
sub
std
notl
pop
push
push
lods
daa
clc
out
mov
fcoml
add
mov
ds
mov
nop
xchg
mov
test
sub
lret
cld
sub
scas
movsl
pusha
jmp
into
xor
outsl
popf
xchg
or
bound
rcrb
mov
sub
and
cmpsl
or
push
mov
dec
aaa
mov
or
mov
fbstp
scas
sbb
sub
or
stos
dec
mov
insl
xchg
jb
or
das
push
lret
aaa
and
cmpl
mov
xchg
add
pusha
lds
push
push
dec
pop
imul
in
int3
push
jl
mov
and
or
inc
xchg
rcll
fwait
add
repnz
add
add
jo
mov
insb
jo
dec
add
frstor
mov
icebp
subl
mov
xchg
dec
mov
xchg
and
xchg
out
dec
dec
cwtl
cmp
mov
cmp
add
fwait
push
mov
mov
fs
outsb
pop
sbb
les
sbb
dec
push
popa
fmull
adc
pop
xor
cmp
jnp
sbb
fistl
enter
insb
in
fmuls
lret
fcmovu
inc
cs
rcll
jno
mov
into
inc
jo
ror
push
call
pop
sbb
cltd
js
ret
stc
jb
pop
rsqrtps
ja
cltd
jecxz
cwtl
and
mov
insb
les
xchg
inc
mov
dec
mov
push
pop
adc
cltd
cmp
xor
push
dec
mov
div
and
push
mov
sbb
insl
jb
xor
outsb
cmpsl
xchg
or
mov
enter
jmp
sbb
pop
pop
cli
pusha
adcb
sbb
xchg
mov
pop
into
jne
mov
lahf
sbb
lea
loop
test
mov
jbe
jno
xchg
das
out
ret
push
icebp
inc
push
xchg
mov
inc
cld
push
aam
adc
pushf
jbe
mov
insb
push
jo
push
loope
push
xchg
and
fsubp
ss
inc
lock
sbb
leave
inc
aad
enter
repnz
mov
adc
negb
arpl
fldenv
jns
push
stc
mov
aaa
xor
idiv
pop
push
mov
fcomp
mov
sub
mov
addr16
or
inc
lock
icebp
cwtl
js
roll
lds
orb
inc
and
nop
mov
jle
out
and
xor
jle
add
push
aas
xchg
fwait
out
pushf
dec
cmpsl
and
cmp
outsb
sahf
mov
addr16
mov
mov
or
push
adc
out
call
jb
jns
movsl
lcall
or
aaa
xchg
ljmp
nop
jl
mull
loopne
popf
cmp
sub
addr16
jmp
mov
imul
mov
adc
or
jbe
stc
dec
dec
repz
jg
mov
daa
test
stc
aaa
pop
in
xor
mov
inc
mov
mov
push
fcmovb
mov
jno
add
cmp
loopne
or
cli
cmpsb
push
unpckhps
or
mov
and
popf
sub
out
mov
and
xchg
aam
pop
mov
sbb
and
shlb
or
fwait
test
jl
push
mov
outsb
mov
jp
test
rolb
stos
shll
mov
jo
sbb
adc
cmpsl
jnp
loopne
movsb
loope
dec
jp
jmp
sub
inc
shl
arpl
jo
cli
enter
data16
mov
fildll
pop
sbb
add
pop
clc
adc
mov
ljmp
dec
jl
cld
xchg
movsl
je
xchg
pop
jne
push
sbb
cmp
cli
xchg
aas
in
push
adc
mov
imulb
inc
out
cmpsb
inc
leave
jne
dec
xor
lods
xor
cmp
push
mov
push
enter
pop
push
fs
icebp
lock
inc
or
dec
jns
add
int
in
call
mov
pushf
add
or
and
xchg
push
adc
mov
cmp
test
ja
insb
dec
pop
pop
iret
shr
or
pushf
jno
pushf
dec
scas
shlb
inc
into
sub
lock
or
out
xchg
popa
push
mov
pop
fwait
dec
cmpl
pop
out
lods
mov
fs
lea
xchg
outsl
ficoms
in
lods
movsb
rorl
cmp
test
lock
icebp
enter
cltd
push
in
ljmp
bound
adc
clc
mov
push
das
xlat
mov
adc
xchg
cld
rcrb
fdiv
sbb
popf
xchg
jbe
test
push
mov
daa
fstpt
jno
je
inc
inc
shl
mov
mov
dec
xchg
ljmp
bound
pop
mov
or
or
sbb
mov
xchg
inc
lcall
rcrb
sub
subb
pushf
aam
pop
addr16
cmp
movsl
jge
and
hlt
inc
push
icebp
das
mov
add
mov
sti
xor
pop
push
call
xor
pop
jno
cli
out
sub
mov
sti
test
inc
ljmp
in
ljmp
out
scas
pushf
inc
out
push
in
sbb
clc
xor
mov
push
dec
leavew
lret
fs
in
gs
mov
jbe
or
jb
add
popa
lahf
xchg
jbe
xlat
fstp
push
in
movsl
push
ret
inc
pop
stos
xchg
aaa
dec
aaa
in
fstps
cmp
adc
sub
push
xor
cmp
cmpl
mov
nop
fimuls
enter
aam
mov
jb
rolb
les
std
cmp
mov
or
xchg
inc
pop
rorl
adc
pop
call
cmp
cld
jmp
jmp
cmpb
sbb
dec
decb
jae
mov
scas
add
or
mov
push
jecxz
jl
ljmp
pop
add
icebp
insb
mov
jp
rcr
js
and
aaa
rcrb
sub
adc
shrb
das
adc
jae
add
arpl
cli
add
or
aaa
mov
add
aad
xor
out
xchg
and
jp
push
or
and
xchg
jle
dec
xchg
and
jnp
mov
sbb
sbb
mov
repnz
mov
fidivl
sarl
std
es
int3
xchg
hlt
pop
adc
cwtl
stos
stos
mov
lds
cld
pop
cmp
mov
sbb
and
mov
mov
in
cli
aaa
jb
inc
inc
std
sbb
push
mov
popf
jmp
inc
pop
ret
xchg
xchg
sarl
daa
lret
add
sbb
push
push
push
or
cmc
mov
xor
in
xlat
cwtl
pop
xchg
push
pop
sbb
sahf
sub
jb
sub
sub
push
xor
sub
mov
mov
mov
sub
fcoml
sub
fldcw
jp
mov
dec
push
loopne
mov
adc
push
xor
and
xchg
jne
cmp
jo
xchg
pop
stos
cmp
int
movsb
scas
sbb
stc
push
jge
leave
repz
pop
jns
movsl
insb
add
pop
and
repnz
sub
xchg
es
and
and
jp
xchg
in
daa
adc
rcr
stos
sub
mov
int3
aaa
sub
aam
adc
ljmp
sahf
sbb
pop
mov
cmc
push
or
nop
aas
fsubs
xlat
lods
out
cli
jl
and
mov
test
in
popa
pop
mov
inc
pop
aad
enter
insb
mov
test
mov
std
adc
cwtl
sbb
stos
xchg
and
mov
push
fsubl
iret
repz
nop
pop
lcall
jmp
xchg
sahf
mov
add
mov
pop
or
lock
mov
lds
dec
cltd
adc
fs
xchg
insb
sbb
xchg
shrb
cmp
rcrl
xor
in
jmp
adc
jb
or
fucomip
push
in
clc
inc
hlt
ds
sbb
mov
mov
rclb
fxch
cmp
dec
cltd
loop
push
cmp
inc
cmc
rol
jl
jns
mov
faddl
or
push
cli
sahf
inc
mov
cmp
pop
inc
sub
mov
jbe
sar
add
xor
sti
mov
iret
out
ds
mov
sbb
cmp
pcmpgtd
iret
mov
jg
add
dec
ret
fmull
push
lea
fisttpll
clc
mov
xor
jle
imul
jmp
jo
lahf
cwtl
mov
xchg
lods
das
sub
repnz
movsl
cmp
in
or
outsb
or
sbb
cli
jmp
stc
sub
daa
sub
aam
jmp
idiv
sbb
jmp
call
ffreep
mov
dec
dec
push
pop
mov
mov
pop
adc
add
xor
sub
mov
push
dec
pop
push
scas
xor
sub
lock
push
and
or
stc
sti
rorb
lock
mov
jl
mov
push
test
stos
sub
movsb
fdivl
xor
fs
mov
les
enter
loope
scas
inc
xor
xor
pop
xchg
lahf
push
stos
lcall
add
repz
add
mov
ds
stc
mov
jbe
test
out
aaa
imul
fwait
repz
xlat
xchg
push
sarl
mov
sbb
jle
mov
pop
push
cwtl
loop
scas
mov
dec
cmp
push
cmp
or
xor
xor
inc
cs
sbb
sarl
scas
mov
mov
stos
mov
stc
pop
xor
hlt
dec
sub
xor
fnstsw
mov
add
test
call
jl
cltd
pop
dec
or
push
mov
xlat
in
push
in
push
mov
and
cmp
scas
loope
or
fistpll
pushf
rorl
mov
inc
xchg
and
lcall
jl
jp
add
mov
andl
ret
es
aaa
pop
hlt
cwtl
out
fidivrs
push
mov
fdivrs
iret
xchg
std
aaa
pop
sub
mov
out
sub
sub
xchg
dec
push
jge
add
dec
scas
xor
xchg
sub
sbbb
dec
sbb
shl
popf
shl
xor
push
enter
mov
mov
sub
adc
pop
or
mov
xor
aas
mov
dec
daa
inc
lcall
sbb
xchg
aaa
arpl
mov
or
mov
push
and
idiv
mov
pushf
sbb
gs
fiadds
pusha
jecxz
daa
or
lods
mov
jbe
leave
out
nop
sub
hlt
aam
xchg
jae
dec
pop
call
sbb
inc
out
xor
xor
cmp
test
and
mov
jecxz
outsb
test
imul
pusha
and
fwait
in
popf
stc
cmp
in
fs
subl
fs
fmul
test
test
xchg
inc
rorb
mov
lods
jne
mulb
das
and
aaa
xor
push
cli
jbe
jno
arpl
xor
setb
fistps
sbb
dec
adc
push
cmpsl
sub
js
cmp
ja
ss
adc
mov
push
adc
dec
dec
hlt
push
cmp
dec
lods
mov
mov
sbb
fidivrs
test
out
dec
inc
lret
push
ja
pop
popa
push
jne
cmpsb
cmpsb
push
xchg
add
push
mov
fs
imul
pop
movlps
mov
push
xrelease
push
add
mov
jecxz
adc
mov
mov
and
dec
outsb
mov
xchg
add
add
ror
push
or
mov
sbb
adc
js
dec
push
xchg
and
or
or
jo
mov
inc
paddw
fnsave
lods
in
push
jp
iret
iret
sbb
imul
popf
repnz
mov
or
pop
jne
cmc
icebp
out
repnz
fwait
mov
call
in
pop
sbb
jnp
cmc
cs
dec
mov
inc
cmpsb
pop
insl
ja
adc
stos
or
jle
mov
popf
cmp
test
fisubrs
loope
aas
add
push
inc
movsl
mov
xchg
push
xor
bound
adc
mov
addl
loop
pop
push
test
lahf
mov
jl
hlt
xlat
cli
lea
adc
push
sbb
inc
ja
ds
int3
negl
cmp
outsb
cmpsl
nop
test
pcmpeqd
aas
mov
cmpsl
insb
ss
ds
int
mov
push
cmc
pop
daa
pusha
jb
mov
pop
pop
test
cld
jmp
das
fstps
or
mov
push
adc
ficoml
daa
aam
xchg
es
cmpsl
movsl
std
cmp
push
mov
lahf
lea
and
mov
lret
dec
outsb
pop
lret
push
dec
test
mov
into
push
push
popa
js
push
out
movsl
sar
mov
jbe
outsb
xchg
fcomi
scas
cmpsl
mov
mov
pop
mov
sbb
cld
dec
mov
addr16
pushf
cli
mov
mov
dec
or
mov
push
int
ss
movsl
push
add
mov
notb
pop
jnp
pop
inc
idivl
aad
push
flds
sub
jl
xchg
adc
adc
aam
mov
mov
sbb
mov
sub
or
cmp
stos
dec
xor
add
std
js
daa
ficompl
mov
out
ja
mov
mov
mov
push
mov
mov
sub
add
imul
ds
push
and
and
cwtl
rol
mov
stos
dec
xor
popa
rorl
adc
sub
lcall
in
clc
fisubrs
ss
mov
push
xchg
mov
and
push
and
push
pop
jnp
test
push
scas
dec
lret
test
inc
sarb
sti
loop
or
xor
dec
movsb
jge
in
push
movsb
cmc
adc
or
hlt
push
pusha
lahf
int3
jmp
fidivs
clc
scas
mov
je
fs
insl
mov
xor
in
aad
cld
aas
in
inc
sbb
jmp
jmp
mov
push
adc
xchg
jge
pop
dec
mov
cmp
rol
call
cmpsb
push
test
lahf
outsb
ret
mov
popa
xchg
push
mov
aaa
add
je
mov
out
add
out
dec
int
mov
shlb
mov
adc
sbb
or
adcl
sbb
shll
shr
cmp
mov
add
scas
jae
pop
mov
dec
add
xor
cli
dec
and
push
fwait
add
sub
jne
or
adc
and
les
cwtl
or
xor
adc
repnz
daa
xchg
push
fbstp
or
cmp
adc
adc
push
test
dec
lahf
cmp
or
call
xchg
lods
lock
dec
mov
rclb
add
lods
insl
push
pop
ja
jmp
pop
nop
add
add
lods
test
in
pop
inc
sti
hlt
add
int
out
jb
fdivp
mov
lret
fsubrl
jne
imul
cltd
movsl
xchg
and
jne
push
xchg
or
jmp
sbb
push
adc
mov
dec
inc
xchg
pop
out
lret
and
add
dec
lret
cmpsb
inc
inc
int
movsl
popa
into
daa
mov
ds
mov
insl
cmp
dec
out
test
adcb
add
stos
push
jp
test
fwait
loope
push
push
or
rorl
dec
mov
mov
mov
push
mov
jbe
pop
dec
ret
push
xor
shrl
popa
adc
xlat
loopne
scas
aad
cmc
das
in
or
and
mov
das
fwait
xchg
rcr
int3
xchg
bnd
push
imul
push
lea
inc
cmp
jl
sar
jle
jne
cmp
lahf
insb
add
movsb
and
scas
les
test
xor
and
ljmp
jns
mov
push
xorb
int
mov
ror
or
in
adc
mov
punpckhwd
jae
sbb
ja
ja
mov
iret
mov
fs
outsl
ret
pop
es
mov
int
cmp
jbe
dec
mov
dec
ljmp
mov
aaa
dec
pop
add
jae
jp
nop
stos
sbb
or
dec
subl
jmp
xor
pushf
push
fwait
mov
test
stos
repz
andb
jbe
repnz
leave
xchg
xor
cmpsb
popa
jge
jb
dec
sub
scas
andnps
scas
pop
mov
les
loope
lods
sub
push
cld
lods
and
and
pop
les
xlat
imul
and
and
fdiv
shll
adc
notb
adc
cmp
ret
xor
sbb
sub
xchg
cmp
jecxz
cltd
or
jle
push
mov
inc
and
dec
adc
jge
das
idiv
mov
ret
xchg
pop
popf
mov
xchg
stos
cmp
iret
inc
std
mov
repnz
into
mov
in
pushf
aas
je
gs
jo
enter
test
xor
shrb
outsb
mov
dec
fsubl
jl
in
xchg
mov
xor
rolb
and
inc
and
cs
jae
pop
dec
subb
fisubs
push
pop
cmp
dec
ja
push
dec
popf
bound
fdivl
out
adc
xchg
adc
fsubrs
dec
cwtl
push
add
lods
pusha
dec
inc
gs
xchg
jnp
fistps
lock
jnp
jmp
sbb
jle
outsl
push
mov
sahf
repnz
or
cmpsl
in
movsl
outsl
jp
int3
movsb
in
testb
mov
inc
int3
push
or
lcall
fisubs
lret
add
jp
neg
cmp
dec
je
push
inc
adc
mov
or
leave
adc
cmp
mov
lods
movsb
cli
mov
inc
push
lds
lret
test
fdiv
out
sbb
pop
inc
sbb
xchg
mov
dec
dec
jecxz
cli
mov
sbb
or
jl
in
jne
xor
cmp
adc
mov
pop
scas
mov
gs
stc
aaa
mov
jge
or
out
dec
add
hlt
xchg
aad
adc
adc
or
dec
push
pop
fwait
cmpsb
xchg
mov
xor
inc
mov
xchg
xor
mov
fcoms
lea
fadds
mov
dec
cmpsb
or
mov
fcmovu
jge
mov
lods
jno
mov
xchg
push
jmp
cwtl
subl
push
lds
ret
aas
scas
jp
popa
in
enter
dec
mov
into
mov
lods
xchg
sbb
divps
jp
adc
rol
mov
inc
js
inc
inc
pop
dec
sbb
addr16
aad
pop
fisttpll
mov
testb
sbb
push
xor
shlb
xor
sub
int3
xor
mov
mov
ds
sbb
out
and
mov
mov
cld
inc
lods
and
mov
jnp
lods
inc
addb
cld
jl
dec
mov
popa
cmp
mov
divl
xchg
cmp
sti
lods
xchg
popa
dec
repnz
and
pop
mov
hlt
lods
and
data16
add
or
iret
in
aam
push
push
out
cwtl
mov
push
shlb
scas
push
mov
push
incl
jg
clc
insb
pop
mov
test
fldt
jp
cltd
insb
mov
sub
pop
xchg
in
dec
fldl
dec
out
out
inc
xlat
jnp
js
push
into
adc
fiaddl
pop
ret
sub
jns
in
push
loope
call
inc
inc
sbb
pop
and
add
movsl
inc
les
shlb
xor
lcall
movl
mov
push
jo
sub
and
add
sub
sbb
test
jo
jmp
lock
inc
outsb
or
xor
lods
loopne
mov
jae
or
mov
cwtl
shlb
mov
ret
add
pop
add
mov
out
xor
das
lret
push
in
inc
sub
addb
sbb
jmp
outsb
dec
nop
add
cli
xor
fimull
dec
lods
or
jo
mov
cmp
imul
loope
leave
jl
lds
jae
cs
push
pop
push
out
jmp
inc
or
jl
mov
sbb
flds
cwtl
js
jmp
adc
cmp
mov
add
xchg
mov
mov
loope
sahf
mov
jb
aam
inc
adc
cmc
scas
cmp
inc
nop
inc
fmuls
test
push
js
push
add
call
jno
or
ss
inc
xor
xchg
leave
jge
repnz
jns
incb
adc
iret
jecxz
inc
fisttpll
shlb
arpl
inc
push
repnz
mov
divl
mov
xor
std
cmp
lahf
rolb
aaa
mov
sub
out
push
nop
outsb
mov
xor
movsl
shl
and
sbb
outsl
sarl
xor
sbb
psubusb
cli
loopne
mov
int3
adc
inc
and
fsubrs
xchg
scas
sbb
mov
xlat
jne
fildll
rcl
cli
push
shlb
shlb
inc
jno
mov
pop
lret
mov
jg
jl
test
lret
push
sub
shlb
xchg
push
in
insb
es
xor
mov
addr16
lret
lock
sbb
mov
shlb
mov
fstps
mov
fsubs
jo
add
popa
cli
lcall
and
push
cmpsl
into
js
aas
loopne
add
mov
push
and
scas
test
idivl
xchg
es
test
inc
xchg
popf
arpl
inc
inc
orb
pop
sti
xchg
cmpsl
je
gs
sub
mov
sti
mov
sub
mov
xor
aaa
or
mov
iret
in
rcl
mov
and
or
pop
dec
jl
cld
pop
cmp
xor
aam
inc
push
or
add
adc
lock
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
jnp,pn
lea
divps
xchg
mov
ret
int3
fldcw
repnz
jl
ds
xor
sub
cmpl
fucomip
ds
and
in
mov
mov
iret
imul
xchg
xrelease
adc
push
jecxz
add
test
mov
inc
stos
les
ss
cmpb
ljmp
mov
roll
mov
subb
sahf
loopw
fiaddl
sbb
dec
mov
push
loope
or
pushf
or
jecxz
std
adc
gs
fstpt
add
jle
cltd
fwait
add
inc
fnsave
xchg
nop
imul
out
scas
dec
push
pop
pop
add
cmp
pusha
dec
bound
cld
or
outsl
mov
jnp
xchg
lret
mov
imul
and
scas
dec
dec
lock
je
sbb
test
subl
jp
mov
pop
push
pop
cltd
outsb
test
sub
call
filds
outsb
sbb
sahf
stos
xor
and
aas
xor
into
mov
cmp
cmp
es
xchg
sbb
pop
cvtdq2ps
test
lret
fsubl
mov
into
nop
inc
bnd
pop
loopne
or
xchg
sub
pop
rcll
inc
sub
dec
movsb
shlb
sub
push
push
dec
push
shll
jae
dec
adc
gs
push
adc
and
lcall
or
pop
test
jb
add
sub
popf
inc
ficomps
ljmp
mov
inc
jmp
adc
xor
stos
jg
shll
adc
rorb
lcall
repnz
or
mov
imul
std
inc
mov
cltd
jg
lea
mov
dec
pop
mov
mov
mov
cwtl
jns
lods
fs
sbb
hlt
dec
test
andb
push
cmp
cmpsl
jne
aas
fiadds
and
sahf
mov
mov
push
adc
mov
pop
jecxz
push
jmp
xchg
stos
pop
mov
sub
xchg
jae
outsw
std
mov
push
and
and
xor
or
in
imul
scas
stos
cmp
mov
push
cltd
test
popa
push
adc
addr16
push
mov
addb
or
pop
mov
ret
adc
and
sbb
xor
sbb
xchg
mov
rol
pop
movsb
stc
cmpsl
cmc
xor
sub
scas
movl
test
cmp
or
or
mov
aas
out
repnz
jno
push
fisttps
xchg
fsubrl
fstl
push
fdivr
loop
std
add
loopne
stos
inc
shrb
hlt
dec
rcrb
repnz
xchg
and
pop
and
mov
mov
mov
pop
xor
add
mov
popf
pop
jge
cmc
sub
push
pop
xor
add
xor
xchg
mov
addl
mov
jno
loopne
lods
dec
nop
jbe
push
add
xchg
pop
xchg
cld
mov
insb
add
hlt
inc
sub
js
xchg
pop
fmull
adc
jg
push
stc
add
test
lods
sbb
mov
adc
cli
mov
push
cli
cmp
jb
jnp
fnsave
and
and
or
and
jo
pop
int
cmpl
cmp
cmpsl
insb
xor
cltd
int3
add
mov
out
imul
lds
mov
testl
push
pop
inc
pop
xchg
sarb
mov
dec
jbe
mov
or
mov
int
mov
mov
fldenv
push
in
loopne
push
pop
dec
push
add
jmp
cmp
jns
mov
cmp
fistpll
out
add
push
and
es
or
out
sub
shl
fdivl
pop
cmp
outsl
ret
jno
inc
xor
mov
inc
xchg
rolb
push
leave
je
nop
jle
pop
xor
ljmp
xor
adc
nop
mov
jne
mov
ret
add
jno
jl
mov
jmp
adc
dec
idivb
stos
cmp
mov
es
cmc
push
scas
fmull
das
sti
mov
call
adc
mov
jno
cld
rcrl
push
mov
jae
lods
ret
jo
test
cmp
push
xchg
or
scas
mov
add
adc
leave
clc
in
jmp
and
repnz
shrl
lcall
je,pn
mov
test
and
aam
test
sbb
leave
pop
cmp
mov
ss
icebp
jmp
push
cmp
fadds
xchg
pusha
jp
rcrb
add
sahf
mov
or
jmp
lahf
cmp
xlat
push
xor
rolb
sahf
out
jmp
ret
mov
mov
xchg
xor
cmp
jp
dec
aas
push
pop
adc
incb
lods
push
bnd
xor
pop
jmp
ret
aad
mov
mov
mov
fs
das
cmp
inc
xor
mov
leave
inc
leave
mov
xor
jp
mov
stc
pop
dec
lods
insl
movsb
mov
cmc
or
scas
out
cltd
js
mov
mov
xor
sbb
dec
cltd
push
jne
dec
gs
es
xchg
out
dec
mov
lret
rorb
faddl
jns
cmp
push
popf
enter
dec
test
jne
loope
shlb
xchg
mov
jbe
js
sbb
insb
jecxz
sbb
mov
lcall
inc
stc
mov
pop
aaa
ret
sarb
push
sahf
sbb
in
jbe
je
cmp
and
cmpl
push
jo
mov
sub
cs
repnz
clc
xchg
xchg
xchg
adc
xlat
push
lcall
mov
xor
fimuls
loopne
and
loop
dec
in
push
mov
das
inc
roll
mov
sahf
es
or
push
lock
sbb
leave
bound
adc
inc
je
jae
lret
add
enter
inc
add
and
sbb
xchg
ret
push
inc
clc
xchg
in
jnp
push
jmp
xchg
dec
push
mov
mov
adc
fmuls
sbb
jne
push
mov
xlat
fildll
xchg
out
mov
jne
rcrb
cmp
xchg
mov
repz
cmp
cmp
mov
stos
xchg
lret
cmp
mov
xor
sub
fstl
fisubl
mov
jno
mov
mov
pop
or
dec
movsb
iret
mov
jbe
ja
enter
cmp
cmc
test
xor
pushf
ja
jno
testb
movsb
mov
lcall
sbb
mov
sti
test
fwait
sar
js
cmp
sbbl
in
lret
ret
cltd
xor
cmc
data16
out
fwait
mov
loopne
mov
dec
push
mov
imul
add
inc
outsb
ficompl
and
sti
jo
or
pop
into
mov
or
push
dec
outsl
adc
jge
dec
fcomps
imul
pop
mov
push
pop
cltd
xchg
pushf
nop
xor
dec
jp
in
push
or
mov
test
sbb
jne
mov
ljmp
mov
xchg
arpl
pop
add
stos
and
sub
xchg
jmp
xor
mov
out
loopne
pop
incl
mov
push
ret
faddl
xlat
push
stos
dec
mov
lret
adcl
push
pop
mov
and
and
fcmovbe
out
mov
sbb
in
fwait
pop
cmp
pop
push
daa
scas
lods
add
aas
minps
addr16
pop
faddl
sbb
mov
and
mull
push
ljmp
and
mov
cmpsl
cmp
mov
outsb
inc
decl
mov
lds
xor
sub
out
out
and
jae
into
mov
bound
imulb
inc
dec
std
lock
pushf
pop
test
xor
jmp
xor
fxch
mov
cmc
fstl
aad
cli
data16
dec
mov
test
cld
mov
cmp
push
mov
daa
cmc
jge
inc
or
lcall
ret
mov
xchg
jmp
sahf
pop
int
loope
sbb
pusha
popf
stc
aaa
repz
push
ja
insb
into
testb
sbb
mov
aaa
enter
push
xlat
push
out
out
sub
ficomps
lret
cmp
sti
lods
cmp
lahf
mov
jns
leave
sahf
mov
sub
je
ret
lahf
push
xor
jno
or
push
aaa
call
sahf
mov
and
push
enter
dec
add
lods
call
fs
cmp
hlt
inc
in
add
xor
jno
xchg
push
ja
adc
push
js
popa
and
sbb
inc
and
and
call
mov
test
mov
das
sub
ficomps
mov
out
push
jae
pushf
mov
insb
movl
stos
fcoml
cmpsl
add
loope
std
leave
push
stos
push
sub
xor
hlt
fists
cli
adc
test
push
pop
aam
mov
cltd
ljmp
rorb
rcll
in
cbtw
lea
dec
mov
mov
sub
test
jno
je
int3
lret
inc
nop
add
pop
dec
stos
lods
jle
fs
leave
mov
ss
xor
in
frstor
sti
mov
int3
jle
xor
inc
jne
cmp
ret
jns
out
out
sub
fldenv
push
cmc
jb
sbb
clc
std
in
fildl
out
lahf
sbbl
fbstp
push
cmp
jp
push
push
sub
pop
add
adc
cmp
jbe
repz
out
mov
lds
neg
loope
add
add
add
adc
dec
aas
aaa
sub
loop
mov
jnp
gs
mov
mov
lahf
sarl
xchg
sbb
es
in
sub
loope
sahf
ret
pushf
rorl
shll
leavew
test
or
and
lret
call
adc
pop
xchg
cltd
or
xor
inc
xor
les
icebp
aas
sbb
int3
gs
aad
pop
movsb
andl
leave
xchg
adc
cmpsb
ds
jbe
ss
pop
and
xchg
insb
jbe
pop
std
cmp
les
ljmp
xchg
push
push
aaa
or
hlt
aaa
lock
adc
js
rep
push
and
ljmp
cltd
lcall
jp
lods
setb
sarb
add
pushf
call
or
gs
cmpsl
sub
mov
ret
daa
dec
mov
xor
pop
mov
push
out
sub
add
imul
stos
js
cmp
jno
xor
jmp
sbb
es
test
jno
cmp
jno
or
movb
inc
scas
dec
dec
inc
mov
push
and
mov
sbb
sbb
stos
arpl
rclb
xchg
sbb
icebp
dec
aad
stos
lods
mov
scas
and
popa
add
or
js
fucomi
cld
rorb
jge
or
mov
push
cmp
push
clc
mov
sub
cmp
jl
mov
or
outsb
imul
popf
mov
push
inc
loope
into
push
dec
ret
les
ret
jl
jb
pop
jae
imulb
sub
inc
fwait
sub
or
lods
scas
adcb
inc
call
xor
dec
mov
mov
add
fisubs
sarb
lea
ja
mov
add
jnp
mov
dec
scas
or
add
sub
jns
jns
xchg
dec
adc
xor
rep
subl
push
dec
mov
and
sbb
test
jle
imul
mov
xlat
loop
mov
test
or
stos
or
movsl
mov
mov
jmp
mov
repnz
cwtl
mov
test
sbb
fwait
mov
fiaddl
testl
mov
inc
jl
adc
mov
inc
outsb
sahf
pop
dec
jb
lret
in
mov
fdivs
es
mov
xor
ss
mov
mov
lcall
in
loop
inc
nop
ret
jmp
jbe
pop
push
aad
fistl
test
mov
cwtl
cmc
lods
add
decl
or
ss
insl
cmc
inc
sahf
ljmp
push
shl
test
hlt
fs
ret
shl
and
je
pop
ss
mov
sbb
in
inc
sub
mov
hlt
adc
dec
sbb
jmp
push
je
stos
std
loop
mov
add
inc
rcll
rolb
into
insl
das
aaa
cmp
jae,pn
out
hlt
test
or
subl
pop
popf
roll
test
or
lods
imul
jecxz
and
push
call
enter
fdivrs
push
test
fwait
mov
pop
xchg
sarb
out
inc
jbe
pop
pop
sbb
sub
cmpsl
gs
add
mov
addr16
and
cmp
or
inc
push
mov
fildl
pop
lods
inc
push
mov
inc
icebp
in
mov
dec
mov
and
out
push
mov
adc
add
add
lods
sbb
fwait
add
lock
sbb
popa
fildll
adc
push
pop
addb
mov
cmpl
cwtl
or
jp
stos
cmpsb
inc
inc
repz
push
es
push
push
in
push
cmp
inc
test
pop
jge
scas
push
sub
clc
arpl
sbb
mov
inc
mov
add
stos
and
fnsave
xchg
pop
hlt
int3
sti
shll
out
inc
enter
in
mov
sub
push
leave
xchg
inc
lret
hlt
nop
xchg
fdivrs
lea
test
lea
add
inc
insl
loope
movsl
adc
das
or
cmpsl
mov
sub
push
lret
bound
mov
leave
mov
scas
sub
cmp
and
xchg
mov
loope
cmovl
sarl
das
mov
dec
add
rolb
mov
out
sbb
mov
leave
mov
lret
dec
dec
push
cmpxchg
imul
mov
xor
mov
adc
add
aam
cmc
out
or
or
push
mov
sbb
cmpb
or
jbe
mov
dec
imull
ds
test
or
scas
cmp
and
ljmp
arpl
jb
testl
add
xchg
sti
mov
mov
or
push
mov
or
xchg
push
and
clc
inc
xor
aad
xor
mov
dec
mov
movsl
and
outsl
cmp
xchg
jno
inc
or
pop
pushf
pop
incb
add
jns
lret
dec
orl
outsl
sbb
push
inc
bound
jg
and
pop
cmp
ss
mov
dec
movsl
dec
jnp
addr16
lret
add
sub
cmp
scas
cmpsb
mov
inc
pop
push
movl
push
xchg
xor
and
addb
icebp
nop
jne
es
push
lods
mov
lods
mov
pop
sub
iret
cs
iret
jne
sbb
js
cwtl
mov
std
test
xor
idiv
mov
sub
addr16
daa
ficoml
mov
cmpl
or
push
fs
jmp
jge
xchg
movsl
dec
add
inc
jg
dec
add
daa
stos
shll
cmp
out
aad
iret
cmp
ret
xchg
sub
ljmp
cwtl
lds
test
mov
dec
lds
cmp
test
outsl
nop
add
clc
pop
mov
mov
aaa
adc
ljmp
std
addr16
out
sti
dec
inc
lret
add
mov
lcall
inc
loope
lds
idivl
sarl
xor
dec
add
push
fnstcw
push
je
lods
cltd
push
xorl
xorb
out
mov
and
lahf
push
out
loop
ja
or
dec
aam
inc
mov
mov
lret
in
mov
movsb
push
or
pusha
push
aad
and
mov
rolb
inc
cmpsl
and
or
ror
test
sbb
adc
xchg
sbb
movsl
addr16
sbb
sbb
int3
jnp
and
or
aaa
fsub
dec
xchg
or
jae
mov
test
sub
push
fs
jl
inc
xor
and
addb
mov
hlt
icebp
mov
loope
inc
gs
cmc
mov
aam
std
mov
mov
andl
mov
and
sub
inc
scas
dec
jge
xor
insl
test
mov
in
xor
inc
ds
imul
clc
adc
je
sbb
test
imul
adc
out
lcall
xor
pusha
loopne
insb
popa
in
push
fsts
fs
jp
repnz
and
pop
sbb
jo
sub
xor
test
jb
or
lahf
dec
sbbl
add
xchg
xchg
adc
adc
pop
and
dec
inc
cmp
jbe
ja
push
push
sub
or
std
data16
xor
mov
repz
enter
lds
iret
cltd
pop
imul
pop
and
aad
stc
xor
sti
rcrl
stc
out
loope
jbe
fbstp
outsb
or
aad
adcl
loop
jbe
aaa
frstor
mov
lret
dec
fwait
mov
imul
push
ss
lret
les
xchg
pop
stos
fs
divb
imul
jge
mov
adc
add
lea
in
push
insl
mov
cmp
adc
cmpsl
inc
cmp
nop
out
push
movsl
push
inc
lock
mov
mov
lcall
ficoms
mov
push
sub
aad
scas
stos
popa
jecxz
int
lret
ss
popa
and
add
or
outsl
repz
sub
xchg
test
cli
xchg
test
stos
jecxz
aas
xchg
aad
imul
mov
push
fistpl
int
inc
sbb
add
cld
out
loop
cmpsl
dec
repz
ljmp
ds
pop
pushf
adc
push
iret
bound
push
movsb
fwait
cmp
sbb
test
enter
jbe
xor
icebp
fiadds
fbstp
lret
adc
jge
outsb
lea
sbb
xor
sbb
add
icebp
mulb
mov
or
movsb
mov
mov
mov
lods
push
push
add
insb
popa
mov
sub
cmp
mov
out
xchg
ret
sub
gs
lret
mov
std
inc
fsts
add
js
negl
fs
lcall
das
imul
sarb
jl
dec
aaa
dec
out
out
cmc
in
or
add
shll
testb
add
pushf
pop
push
popa
jbe
pop
push
push
aas
cmpsb
wbinvd
aad
pop
or
pop
cld
sub
in
lret
or
sub
sub
cltd
lret
pop
push
xor
imul
stos
dec
adc
push
sub
xlat
xchg
orb
fisubrl
adc
jae
sub
inc
std
xchg
pop
or
lret
or
mov
mov
mov
enter
shl
cli
insl
sbb
test
ljmp
mov
call
testb
push
ja
cwtl
rep
test
movsl
lds
rol
add
outsl
outsb
jmp
adc
cmp
sub
call
fs
and
and
jae
jmp
sti
cmpsb
pop
mov
sahf
rolb
loope
iret
dec
mov
fidivl
ficompl
mov
and
ljmp
xchg
outsl
and
stc
maskmovq
negl
xchg
or
jle
pop
stos
mov
cld
out
shrb
pop
aad
lods
jno
mov
pop
pop
xorl
into
outsl
push
stos
fldenv
repnz
push
pop
sbb
jne
inc
testb
stos
rcrb
and
pop
xchg
xchg
stos
and
jae
jb
divb
adc
les
push
adc
mov
xchg
pusha
fcoml
xor
aaa
movsb
cltd
jns
sub
pushf
dec
mov
mov
dec
pusha
into
pop
mov
add
and
pop
push
int3
bound
jo
cmp
popf
add
mov
out
int3
jmp
mov
cli
inc
add
loop
in
xor
push
dec
sub
fdivl
xchg
addl
mov
arpl
lods
incl
inc
adc
imul
push
out
fistpll
sahf
pop
push
xchg
jmp
xor
movsl
mov
jno
mov
sub
fsubrs
hlt
mov
push
or
and
cmp
cmp
xor
mov
sbb
inc
sbb
cmc
loope
jp
sahf
inc
jb
xor
in
mov
stc
scas
sbb
notl
out
out
outsb
fnstsw
xchg
into
add
mov
push
outsb
ds
push
fisubl
push
or
cs
dec
fs
push
inc
pop
sahf
cld
popf
and
test
dec
jo
repnz
cld
dec
mov
or
popa
aas
xor
loop
out
sbb
xor
mov
gs
cltd
cmp
sub
cld
mov
mov
hlt
adc
sbb
inc
call
or
and
sbb
ja
enter
fbld
push
or
scas
popf
pop
pop
outsl
cmp
fbld
cmpsb
cmp
or
mov
jno
orb
jbe
mov
mov
ja
mov
pop
add
stos
enter
sbb
add
addb
dec
js
test
cmc
pop
sbb
mov
and
push
daa
pop
int3
aaa
mov
jae
adc
lds
ds
movsb
out
stos
ret
dec
inc
orl
out
cmp
push
xor
jge
xchg
movsb
mov
repnz
cmc
adc
outsb
add
xchg
addb
jno
inc
jb
hlt
sub
add
arpl
inc
dec
cmp
fcomps
push
xchg
mov
sub
mov
and
mov
mov
jo
push
andl
xor
repnz
les
push
addl
inc
xchg
or
imul
mov
xchg
mov
jnp
in
push
mov
mov
sbb
xchg
sub
mov
cli
stos
sbb
sbb
test
sbb
daa
xchg
rep
out
jp
leave
xchg
ret
pushf
enter
jae
and
adc
mov
jo
inc
imul
frstor
cs
or
test
test
clc
adc
and
adc
adc
cltd
out
pusha
outsl
xchg
arpl
or
fstpl
dec
xchg
pop
pop
jnp
dec
icebp
inc
cmp
pop
loope
jb
xlat
cs
jo
xchg
in
fwait
lcall
ss
dec
mov
and
xorb
cld
cli
xchg
mov
xchg
lahf
sbb
pop
insl
or
mov
lcall
fldl
add
push
orb
add
stc
push
fdivp
lret
push
fs
mov
bound
pop
push
pop
inc
jg
ficoml
or
xor
xchg
repnz
dec
and
ljmp
imul
cmp
mov
int
lods
movsl
repz
mov
div
add
icebp
iret
in
pop
lea
lahf
fcmovu
xor
int3
mov
jmp
cmp
mov
or
fnstsw
js
fs
inc
push
pop
dec
sub
dec
sub
xor
dec
stos
das
xchg
add
jl
pop
add
cwtl
rcr
mov
testb
pusha
aaa
data16
dec
xchg
mov
and
shl
sahf
cmpsb
pop
in
mov
fsubrs
jo
mov
lods
cltd
in
xchg
cli
repnz
or
andb
gs
ja
ss
divb
jns
sbb
sbb
xchg
lret
sub
pop
dec
xchg
or
xchg
fiadds
jl
pop
adc
outsb
fnstsw
inc
cli
push
sub
mov
mov
sbb
negl
fnstenv
je
and
lods
popf
jge
fildll
xacquire
sbb
out
or
stos
rol
add
push
and
imul
shl
fsubr
pushf
adc
popf
cmp
lahf
in
inc
mov
or
sahf
fsubrs
stc
push
inc
les
push
adc
fdivl
sbb
hlt
xlat
and
ljmp
inc
jle
lock
mov
mov
cli
enter
push
inc
and
arpl
or
movsb
pop
sarb
mov
sbb
xlat
popf
outsl
out
jo
cld
pop
adc
fstp
xchg
jp
push
and
xchg
in
xor
mov
pop
aad
dec
loope
adc
push
lods
pusha
adc
shlb
cmpsl
in
popa
pushf
daa
arpl
jl
push
fimuls
mov
pop
sub
lahf
iret
cld
xor
add
aam
ret
jle
sub
xor
push
inc
test
int3
data16
sar
cmp
xchg
clc
and
sarb
ret
in
jns
rorl
gs
shl
out
mov
stos
pop
inc
and
xchg
lods
call
push
and
arpl
mov
push
xchg
jbe
nop
cmp
cmpb
mov
leave
mov
sti
clc
mov
adc
sub
dec
imul
insb
xchg
sbb
fcomp
mov
enter
icebp
sbb
das
inc
addr16
push
aas
adc
push
lahf
inc
ds
lods
pop
ja
dec
adc
cmp
push
mov
cli
scas
iret
jbe
pop
sub
push
outsb
pop
movsl
xorl
rcll
jno
stos
adc
and
nop
mov
or
add
fcmovnu
popf
arpl
add
cmp
js
cmp
xor
lret
nop
fnsave
in
dec
xor
pop
pop
aas
inc
gs
lods
idivb
sub
fwait
xchg
call
leave
cmpl
xchg
ljmp
cmpsb
fmuls
add
pop
cltd
lods
fwait
nop
shll
lret
xchg
sbb
sbbb
lahf
pop
sti
outsl
in
mov
dec
and
in
rorl
push
in
sbb
mov
cmp
push
jle
inc
jp
mov
sub
add
mov
pop
jbe
xchg
adc
jb
jge
loope
enter
hlt
jnp
inc
pusha
dec
outsb
sub
dec
push
xor
stc
jae
add
jb
push
test
mov
jbe
mov
pop
jecxz
cmpsl
or
insl
xchg
ljmp
sbb
push
xchg
push
sub
inc
xlat
jae
out
sti
and
add
push
test
add
jo
hlt
in
lock
jl
xchg
pop
mov
sub
dec
incl
add
xchg
sbb
dec
cmc
es
sti
js
inc
icebp
xlat
sbb
adc
mov
mov
add
add
mov
push
insb
cmc
add
in
mov
sbb
fisttps
mov
in
mov
pop
xor
scas
imul
clc
push
ds
int
mov
cmpsl
dec
test
lret
push
jle
xchg
push
gs
sti
jne
add
lret
stos
sbbb
movsb
pop
cmp
inc
dec
nop
dec
sti
into
xchg
stos
push
lcall
pop
aad
mov
push
outsl
cmp
xor
in
add
insl
ror
fistps
pop
inc
or
sbb
cmpb
outsb
jo
std
sub
sub
fldt
mov
pop
add
lods
cmp
jp
cmp
test
adc
rcrb
pop
mov
xchg
jnp
out
xorps
mov
aas
add
jns
mov
mov
pusha
movsb
pushf
sub
sbb
in
mov
cwtl
dec
add
daa
mov
cli
or
pushl
xchg
lock
mov
add
fnsave
pushf
fsubs
iret
push
addr16
push
jnp
pop
lds
out
in
or
dec
pop
push
test
pushf
int3
or
fwait
mov
dec
or
loop
mov
and
scas
xor
sub
mov
aam
arpl
adc
jmp
add
dec
lahf
lods
loopne
push
cmpsb
mov
and
jl
sbb
xor
addr16
pop
xchg
push
js
fwait
pushw
or
sbb
andb
test
stos
add
sti
sbb
fldl
aam
aaa
jbe
jo
jp
xchg
data16
rcrb
and
adc
or
cmp
cltd
pop
mov
test
imul
std
mov
loopne
mov
sahf
cmpsl
push
or
jo
das
sub
xchg
push
add
sbb
into
and
mov
sub
xchg
lea
sub
sbb
jae
cmp
out
or
add
out
cli
fsubr
xor
stos
mov
jge
or
jae
sub
pop
lock
fnstenv
push
nop
jle
xchg
inc
cli
int3
and
aaa
das
mov
cltd
dec
mov
xchg
push
imul
cmpb
ds
mov
shll
jne
adcb
dec
in
adc
push
dec
cmc
gs
cmp
cmp
cmp
arpl
call
inc
xchg
mov
xor
and
decl
data16
imull
adc
mov
jg
mov
or
js
jno
push
xor
cld
mov
pop
popf
cmp
mov
cmp
cli
push
das
test
aas
sub
push
int
out
push
xor
ljmp
mov
test
pop
dec
cwtl
mov
cmc
shrb
adc
test
pop
test
push
inc
shl
add
jbe
mov
and
jne
sbb
sahf
xlat
mov
in
outsb
dec
orl
dec
xchg
arpl
cwtl
push
cmp
lods
cmp
xchg
sub
sti
imul
jg
outsb
adc
xchg
aas
mov
fwait
pop
xor
xor
inc
aam
jo
sub
pop
jo
cmp
aam
mov
int
sub
mov
cli
xchg
xor
or
jno
pop
aaa
mov
and
inc
scas
ja
sub
lret
push
fidivs
push
jb
jae
push
and
sbb
int
and
sti
cmp
popa
ret
add
stos
movsb
scas
xchg
stc
ret
outsb
mov
mov
nop
add
push
jl
ja
sub
fs
sub
stos
loopne
mov
out
sub
fimull
jmp
repz
inc
mov
or
mov
fdivs
add
shlb
mov
testb
cs
xor
nop
pushf
and
sbb
adc
int
popf
scas
in
mov
test
lcall
jg
insb
loopne
add
sbb
push
lock
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
add
mov
orl
addl
xchg
mov
mov
push
pop
js
gs
fldenv
cmp
pop
adcb
mov
inc
sahf
into
and
mov
add
lcall
or
xchg
mov
add
in
hlt
shl
shl
aaa
mov
adc
fs
test
cmp
dec
and
lret
push
lea
or
neg
push
dec
mov
je
ljmp
pop
rcll
pop
addb
or
mov
inc
push
push
adc
aaa
lock
adcl
loop
and
mov
jmp
pop
pop
lea
push
jae
inc
int3
testl
mov
gs
fs
jo
push
cmp
push
mov
mov
mov
scas
pop
fwait
xchg
xchg
jmp
mov
push
push
push
jno
jmp
repnz
mov
fucomp
push
int
or
fwait
scas
xchg
popf
dec
fs
add
and
adc
xorl
dec
pop
inc
out
cltd
dec
mov
das
xlat
cmp
in
or
pusha
loope
pop
cmc
cs
inc
xchg
pusha
xchg
lods
dec
add
cmpsl
sbbl
fsubrs
mov
cltd
addr16
lret
setge
hlt
fnstsw
aam
dec
add
lret
enter
lea
cmp
stos
in
testl
sbb
dec
sbb
pop
inc
jns
mov
push
mov
aas
mov
lock
sbb
fcmove
fsubrl
data16
notl
cli
xchg
xchg
and
outsb
and
push
or
pushf
add
fstpt
jle
push
sbb
inc
xor
ret
push
mov
sub
or
jp
add
or
ljmp
jno
test
iret
pop
jnp
inc
out
in
or
sub
push
sub
jno
ljmp
push
xor
mov
cli
stos
cmpl
scas
push
push
leave
sbb
popa
sbb
jmp
xchg
mov
push
rol
pop
push
dec
inc
pop
xchg
xor
xorl
pop
dec
inc
jno
xchg
loopne
xchg
cltd
lret
outsl
fidivrl
inc
mov
xchg
fisttpll
pop
out
mov
mov
fwait
inc
adc
or
gs
or
icebp
mov
clc
aad
inc
mov
pop
add
pop
jne
sub
mov
xchg
lock
loope
mov
enter
xlat
divl
add
jmp
xchg
stos
cli
push
outsl
roll
lcall
pop
jno
dec
sub
push
or
sbb
andl
pop
mov
push
or
adc
jl
pop
daa
cmp
lock
xor
xchg
lods
xor
ja
mov
sbb
jge
xor
jl
push
das
pop
jno
ficompl
call
add
adc
int3
xor
addr16
mov
adc
adc
int
xchg
mov
rolb
imul
into
and
or
nop
enter
dec
xchg
pushf
ret
stos
ror
das
sbb
push
cmpsl
lahf
push
dec
adc
aam
mov
cmc
sbb
jge
sbb
adc
jl
nop
lods
decb
pushf
adc
ret
fnstenv
and
sub
out
cmpsl
xchg
shll
cmc
dec
pusha
aaa
sub
push
jg
sbb
shl
shl
push
stos
add
sbb
inc
push
mov
add
add
out
fdivr
andl
cmp
and
push
fs
leave
in
inc
inc
xchg
in
fs
hlt
loopne
dec
imul
ss
jge
fdivrs
xchg
adc
and
les
xchg
bsf
push
jmp
xchg
cmp
cmp
rcrb
in
mov
mov
add
sti
and
int3
cmc
enter
fwait
std
popf
sti
cmp
sbb
fldcw
out
int3
or
push
shr
pusha
pop
jae
mov
ss
lcall
and
icebp
push
jae
imul
xchg
xor
imul
sub
pop
insb
sbb
sub
or
dec
inc
out
push
pop
ds
std
or
in
pop
addr16
jae
or
jbe
adc
or
outsl
push
imul
negb
lret
inc
xorl
xchg
push
push
add
sbb
jae
out
add
ret
mov
int3
ret
lods
push
push
mulb
pop
cmp
out
cs
loope
andb
scas
dec
mov
cli
repz
add
jbe
inc
cwtl
add
mov
roll
leave
mov
movsb
and
mov
cmp
out
jnp
cmp
jae
sbb
pop
imul
push
jnp
stos
dec
xor
jb
js
inc
push
sub
sbb
pop
scas
dec
adc
cli
sbb
call
add
dec
les
cmp
sub
out
and
and
into
pop
idiv
or
pop
les
aas
dec
dec
fwait
push
popa
or
clc
imul
jecxz
sbb
sarb
sti
pop
cld
jl
fnstsw
aad
mov
mov
jmp
in
pop
daa
pop
repnz
dec
jne
repz
cltd
xor
lods
rcl
lock
jle
jno
or
pop
xor
push
add
lods
xchg
call
adc
push
pop
adc
lea
mov
mov
push
movsb
pop
mov
push
mov
or
fidivl
ljmp
pop
adc
xchg
jl
mov
ds
jle
jmp
out
pop
xchg
sti
add
aam
xchg
mov
xchg
sbb
jb
stos
dec
mov
int
jae
loopne
arpl
push
aaa
inc
sub
push
push
push
push
mov
fimuls
pop
movsl
or
xchg
or
icebp
sub
outsl
jnp
gs
xor
sub
mov
outsb
aam
mov
test
push
dec
jns
adc
loopne
imul
scas
jecxz
inc
cmp
or
mov
xlat
mov
mov
imul
pop
jno
mov
jae
andl
aad
clc
jmp
addr16
mov
xchg
movl
inc
add
call
push
inc
jnp
hlt
mov
cmp
adcb
in
sbb
xchg
mov
loope
adc
inc
fdivrs
sahf
in
jb
fcoms
mov
shr
jl
push
sti
in
pop
aas
push
cmp
inc
jnp
test
test
lea
ret
xor
cld
cltd
sub
sbb
xchg
dec
mov
mov
sub
lock
dec
adc
sub
xlat
inc
and
lcall
test
jle
cmp
lret
lods
and
ficoml
jne
push
and
into
into
pop
dec
inc
or
sbb
mov
or
arpl
and
sbb
mov
pop
fistpll
jle
loope
scas
in
push
mov
inc
rorw
or
jp
in
cmp
ret
cmp
fisubs
lret
or
jne
int
call
dec
addr16
xchg
in
add
inc
mov
popa
push
mov
std
shlb
jae
xlat
sarb
imul
xchg
test
in
sbb
and
outsb
push
fidivl
dec
inc
aas
test
enter
xlat
shlb
outsb
inc
lahf
add
push
push
stc
inc
lahf
adc
addr16
jl
adc
icebp
loope
je
push
pushf
and
xchg
insb
sub
jns
into
xchg
adc
inc
pop
jbe
roll
jp
mov
push
insl
xor
xchg
movsl
in
int3
fsubp
out
orb
mov
inc
hlt
jmp
sbb
orb
inc
add
mov
jae
inc
in
mov
adcb
out
push
inc
out
or
sti
cli
ja
mov
sub
int3
cld
inc
pop
xchg
sub
push
add
test
loop
xor
adc
jge
outsb
push
popf
jmp
sarl
sti
or
out
leave
pop
pop
sbb
lret
pop
ja
mov
movsl
cmp
and
add
cmpsb
ja
mov
clc
push
pop
std
push
mov
xlat
add
cs
int3
pop
and
cmp
dec
rcll
outsb
or
xlat
pop
xchg
lea
cmpsl
xor
aas
out
xor
dec
iret
inc
push
les
mov
dec
jle
mov
iret
jge
inc
cmp
jne
xor
decl
repz
and
sahf
fcmovnb
push
sbb
jae
test
cmp
cmp
sub
push
hlt
pop
push
inc
pop
jg
cs
inc
mov
scas
jg
lcall
adc
add
add
adc
jmp
and
mov
and
and
push
imul
sbb
pop
xor
leave
out
test
cmp
jge
jnp
mov
lock
stc
pop
cli
or
xor
out
int3
cmpsb
xor
pop
adc
stos
testl
cmp
pop
cmp
sub
jne
test
mov
or
add
in
mov
fstpt
aam
in
pop
pop
call
outsl
cmp
ja
je
push
fsubr
test
ss
pop
add
mov
xchg
xor
jae
cltd
sbb
dec
or
movsb
xchg
mov
push
xor
clc
xor
jge
and
xlat
dec
push
hlt
insl
pop
mov
fldenv
shr
stos
sub
aaa
jb
scas
mov
in
or
dec
aad
push
pop
sub
das
hlt
enter
sub
sbbl
mov
rcrl
xlat
jb
pop
push
lods
cwtl
cs
xchg
pop
xchg
add
xor
subb
inc
test
popa
aam
test
incl
push
and
scas
xlat
shl
imul
pusha
icebp
add
mov
add
popa
je
movsb
and
dec
test
and
stos
iret
fcmovu
and
es
xchg
lret
adc
xchg
mov
cbtw
adcb
add
xor
outsb
lahf
cwtl
mov
shlb
or
pop
lahf
xor
cmp
sbb
adc
sarb
aad
and
cli
mov
nop
test
cltd
jg
jmp
pop
jp
dec
jg
out
jp
scas
pop
lahf
jg
pop
inc
sbb
pop
scas
mov
mov
jns
lods
arpl
rorl
push
inc
mov
and
dec
xchg
fdivrl
scas
push
scas
scas
push
xor
xchg
xchg
and
pop
cld
stos
mov
loopne
jecxz
or
pop
movsb
push
sub
mov
cmp
lahf
pop
call
negb
jnp
out
mov
push
shll
mov
test
inc
nop
fsubs
sub
pop
in
and
pop
jp
sti
cmc
mov
adc
mull
cmpsl
mov
inc
xchg
std
gs
mov
es
test
adc
jb
or
iret
pop
outsl
mov
or
js
sub
mov
into
cmp
inc
adc
mov
ret
lret
icebp
sub
or
or
sbb
int
je
cmp
jne
popf
push
call
cmpsb
or
cmp
fwait
cli
mov
mov
inc
xor
pushf
mov
lahf
fldl
out
iret
icebp
fists
jge
and
daa
inc
movsb
test
push
xchg
push
testl
in
inc
dec
cmpsl
cwtl
into
mov
sar
jno
je
xor
sub
mov
rcll
and
jb
out
outsb
enter
xchg
mov
push
jp
adc
xchg
stos
enter
push
outsb
dec
sbb
add
jp
jae
and
hlt
ret
insl
leave
mov
or
mov
hlt
stos
push
lcall
pushl
sbb
add
fdivrs
jne
jmp
xchg
into
cmp
dec
leave
sbb
xchg
push
cmp
push
in
cmp
xchg
mov
sti
sarl
jle
mov
and
les
fs
push
inc
jle
jns
jne
jmp
aam
pusha
dec
lret
rclb
adc
mov
bound
xchg
inc
lea
push
push
mov
enter
jnp
pop
cld
add
jl
xchg
mov
push
fwait
pop
movsl
lret
ja
push
pushf
mov
cmp
xor
adc
in
scas
outsl
jge
sbb
push
enter
xchg
not
je
jle
jns
push
push
inc
fwait
in
jl
cwtl
icebp
and
adc
dec
stos
inc
je
push
in
movb
addr16
aas
in
fwait
xor
sbb
scas
push
push
inc
aad
mov
out
repnz
rorl
ficompl
cmpsl
inc
mov
pop
xchg
cmp
mov
les
or
rorl
push
cld
shr
jmp
xchg
push
fwait
lret
xor
add
jl
mov
lock
cmp
fimuls
lahf
shlb
mov
xor
outsl
pop
into
lsl
lcall
je
inc
aam
pop
add
inc
outsl
inc
xchg
xor
or
dec
aad
daa
mov
rcll
test
int3
sub
mov
in
jmp
mov
or
cmpsl
xor
fists
jnp
leave
pop
jnp,pt
jne
inc
roll
add
adc
cli
mov
bound
inc
inc
fdivrp
sbb
mov
outsb
pcmpgtd
andl
pop
mov
icebp
lret
ret
test
xor
push
aaa
xorl
cmpsl
rclb
jg
adc
in
jmp
mov
in
push
add
sbb
adc
aas
pop
cmp
mov
xchg
and
subb
jl
inc
stos
aas
xchg
dec
or
sti
lcall
mov
and
movsl
stos
mov
rol
xchg
cwtl
and
jb
pop
mov
xor
pop
cmpsb
sbb
loope
jge
enter
ret
dec
mov
scas
dec
push
and
inc
fidivrs
mov
jnp
mov
adc
jle
mov
dec
or
mov
pop
xchg
hlt
ljmp
aas
xor
mov
stos
fadds
ljmp
iret
test
and
movsl
sbb
in
pop
mov
ret
popa
jp
popa
xchg
inc
punpckhdq
xchg
es
lahf
xchg
push
movsl
loopne
mov
idivl
cli
xchg
mov
ret
jp
imul
scas
insb
inc
int3
ja
cmpl
insb
inc
cmp
jp
mov
dec
mov
cwtl
cli
jno
or
fwait
add
hlt
push
sub
cld
mov
mov
in
xor
insl
mov
pop
in
int
adc
add
xchg
in
sbb
lahf
sbb
test
jge
jno
mov
and
shlb
test
ljmp
imul
mov
lods
mov
and
jg
xor
test
sub
lret
pushl
dec
jo
xlat
ja
jno
mov
mov
cmp
jo
in
cmpl
xchg
popf
das
xchg
or
cmp
cld
bound
cld
xor
inc
arpl
sti
sar
sbb
or
xchg
test
xor
or
insb
inc
in
cmpb
inc
or
shll
jno
sub
mov
pop
xchg
inc
lahf
in
orb
fistpll
cmp
xor
sbb
or
repnz
jb
scas
test
paddb
xlat
jne
imul
adc
shll
or
jle
arpl
stos
lret
cmp
add
stos
push
pop
call
or
fldl
cmp
pop
sub
sub
inc
dec
sbb
jmp
dec
or
pop
jns
and
ja
mov
in
sbb
bound
sbb
push
inc
xor
pop
test
bound
dec
inc
pop
sbb
imul
jno
test
mov
cmc
insb
mov
mov
cmp
cmp
loop
push
dec
dec
shr
pop
cltd
fcoml
popf
sbb
dec
jp
in
loopne
or
stos
cmp
pop
xor
jp
inc
dec
dec
les
arpl
ja
inc
or
cmp
sub
push
push
negl
aas
data16
dec
add
test
mov
mov
cmp
shl
fstpl
dec
mov
nop
sub
shll
inc
out
push
dec
or
xchg
xchg
sub
push
push
cld
jo
xor
je
push
enter
vrsqrtps
jo
cli
dec
xlat
jbe
cltd
sub
ja
jae
movsl
idivb
fdivrs
jo
inc
ret
clc
fimuls
sub
test
movsl
insl
and
mov
scas
in
jae
jae
int3
xor
sti
ljmp
pop
jno
jle
enter
mov
nop
aaa
adc
mov
aas
movsb
or
inc
xchg
es
or
xchg
mov
insb
dec
mov
jno
and
pop
stos
inc
cltd
dec
push
jne
push
and
xor
scas
mov
cmp
mov
rcll
sbb
mov
inc
gs
psadbw
push
jnp
cltd
push
jne
pop
and
lcall
pop
sbb
movsb
xchg
addr16
loope
mov
pop
repz
dec
cmp
adc
scas
pusha
jmp
pushf
iret
in
dec
movsl
xchg
daa
and
int3
ljmp
xor
movsb
ja
mov
mov
gs
xor
out
mov
ret
xchg
movsl
pop
push
and
push
outsl
xchg
popa
xchg
cld
dec
enter
mov
add
push
cmp
mov
fsub
ljmp
or
add
mov
cmpsb
jp
int
jecxz
popa
enter
sahf
xchg
sbb
iret
or
sbb
movsb
loop
les
stc
mov
add
jnp
jb
fwait
lds
mov
xchg
mov
or
ja
and
mov
call
lret
stos
xor
mov
jl
aam
mov
test
aad
dec
cwtl
aaa
push
xor
stc
fs
das
pop
int
jmp
adc
jno
xlat
repz
idivl
jbe
mov
xchg
jp
push
jb
xlat
adc
mov
sub
lret
or
outsb
int
cmp
stos
push
and
pop
cmp
cmpsl
sub
hlt
sub
push
sbb
xchg
push
es
pushf
xchg
jae
out
inc
xchg
rclb
pop
jo
mov
jb
push
cmp
jae
cltd
rcl
outsb
xlat
xor
sbb
inc
popl
add
addr16
int3
pusha
popa
decl
rclb
cmpsb
dec
xchg
addl
pusha
or
sbb
and
mov
out
push
push
popf
sbb
mov
xor
push
loope
roll
cltd
data16
xlat
ss
jge
div
repz
fisttpll
dec
push
lods
mov
call
adc
pop
mov
and
xchg
in
mov
out
or
or
call
cs
dec
adc
push
mov
and
iret
dec
dec
jne
call
std
add
mov
adc
filds
push
popa
add
push
ret
ds
push
out
vmread
in
push
mov
push
icebp
inc
cltd
movsl
ret
pushf
js
addr16
xchg
in
les
js
xchg
pop
mov
mov
aam
aam
hlt
adc
cmp
cmpsb
bound
sub
sub
jecxz
mov
lret
push
leave
pop
sti
pop
idivl
test
add
push
inc
cmpsb
dec
imul
xor
jg
cmc
movl
mov
ja
fisubrs
out
jle
sub
sbb
jb
jp
stos
sarl
or
and
push
push
rcr
cltd
je
add
addr16
lahf
ret
adc
sarl
sets
xchg
sbb
mov
and
push
dec
jecxz
daa
xor
lea
lret
fcompl
jl
shlb
mov
or
sub
cmp
lock
jmp
xchg
jb
dec
and
aaa
and
sub
std
arpl
jle
xchg
pop
mov
pop
imul
jns
sbb
or
or
jecxz,pt
syscall
inc
mov
or
pusha
dec
adc
or
mov
pop
push
js
shld
xchg
lret
loopne
cmp
xor
jne
sub
cmp
sub
in
xchg
push
outsl
in
jae
js
adc
mov
pop
sahf
popa
xchg
popf
jbe
xor
dec
movsb
dec
jb
es
adc
sbb
and
or
adc
loope
cwtl
popa
cmp
add
fldenv
fidivs
shlb
frstor
jno
mov
add
es
jne
out
pop
fwait
stos
mov
js
enter
lahf
mov
sub
push
or
xchg
pop
mov
mov
and
xchg
fs
lds
out
mov
mov
lret
xchg
gs
add
push
ljmp
xchg
imul
scas
sahf
push
mov
test
out
sub
test
jg
mov
xchg
mov
movsb
mov
hlt
add
sub
push
or
mov
repnz
and
test
jae
dec
add
sub
clc
mov
pushf
sarl
inc
lds
ret
xor
adc
idiv
pushf
mov
inc
sbb
pop
xor
push
mov
cmc
jae
jnp
dec
jmp
mov
sti
repz
or
or
clc
or
mov
iret
xor
repz
mov
fwait
aam
cmpsb
adcb
inc
js
cmp
lret
push
fcompl
std
sub
adc
pushf
and
xor
push
and
mov
jae
cmpsl
insl
lret
test
xchg
scas
es
repnz
push
ret
popf
sbb
jnp
jno
xchg
int3
sub
mov
pcmpgtd
bound
jbe
pop
adc
xchg
fdivs
inc
into
mov
aas
leave
inc
cmp
fsubl
push
sub
mov
dec
xor
cwtl
cwtl
mov
add
in
sbb
popa
lods
dec
stos
repnz
dec
clc
mov
ss
andl
add
mov
or
cmp
xchg
mov
xchg
ror
push
dec
je
pop
les
testb
dec
mov
xor
loop
into
xchg
xor
dec
mov
push
and
push
je
sbb
adc
dec
shr
nop
outsb
xchg
jmp
out
dec
lret
in
mov
lds
inc
sbb
and
clc
lcall
inc
and
call
jle
enter
xchg
fstpl
dec
test
push
xchg
pushf
xchg
mov
sub
es
sub
out
ss
js
leave
pop
das
jp
pop
inc
jbe
add
lret
inc
out
adc
cmp
rcrb
pop
incb
pop
pop
xlat
out
push
out
repnz
jbe
mov
jns
mov
xchg
mov
cld
mov
mov
xlat
jg
fst
fimull
add
mov
cmp
sti
cmpsl
and
or
or
lods
cld
negb
iret
mov
dec
cld
mov
push
jmp
cmp
or
aam
and
sbb
mov
stc
xchg
aaa
test
gs
pop
in
sbb
addr16
imul
mov
decl
arpl
popl
pop
jl
jp
push
ret
jb
xchg
mov
xor
cmp
xor
mov
push
add
stos
jno
or
mov
jge
ds
xchg
xchg
insb
jmp
jp
mov
dec
je
rol
mov
pop
cmp
loop
add
xchg
xor
jne
lahf
imul
jns
fnstsw
dec
inc
rcl
test
inc
jmp
aas
adcb
test
cmpsb
es
jne
jns
sbb
pop
inc
dec
pop
loope
cltd
repz
pop
mov
add
inc
scas
pop
sub
enter
mov
pop
push
aaa
mov
shll
pop
mov
mov
and
pop
in
psubb
adc
xchg
sbb
lret
in
cmc
pop
popf
rcr
sbb
repnz
fistps
adcb
push
mov
cmp
arpl
mov
dec
ja
call
push
or
push
fwait
xor
and
mov
dec
pop
or
pop
or
mov
insb
dec
les
inc
loope
pop
push
sti
or
jmp
jmp
adc
adc
inc
cmp
lahf
push
push
or
add
imul
sbb
jle
stos
and
test
repz
lods
push
and
popa
cwtl
jae
aaa
lret
inc
mov
xchg
dec
or
stc
fidivrs
fdiv
lods
arpl
cld
or
and
cmpsb
sbb
pop
in
or
cld
push
out
jnp
pop
sahf
aas
mov
shrl
and
loope
jo
mov
repz
repz
test
jge
divb
popf
push
ret
push
popf
push
jb
fisubrl
and
sahf
push
data16
lret
out
gs
adc
xchg
movsb
sahf
adc
mov
out
dec
int3
fwait
xor
fstpt
mov
sbb
sarb
imul
aad
popf
sbb
sahf
cmp
test
cld
mov
mov
je
daa
out
sti
pop
and
outsb
push
leave
loopne
mov
movsb
lret
add
data16
out
pop
pop
sub
cwtl
push
pop
mov
imul
mov
or
fcmove
movsb
push
mov
cmp
test
sub
sub
dec
adc
xor
pushf
scas
loopne
xchg
cmp
xor
jp,pt
cmp
sbb
xchg
mov
pop
xchg
idivl
adc
jmp
adc
in
test
fs
bound
jmp
cmpsb
push
jg
or
jge
mov
repz
ss
lahf
xchg
loope
jne
or
ss
xchg
sbbb
mov
gs
mov
mov
inc
sbb
pcmpgtb
or
rclb
iret
cmp
cmp
cmp
inc
push
mov
shlb
test
or
fcomi
lods
push
pop
or
mov
lret
dec
lret
js
cmp
dec
incb
in
or
or
push
dec
jecxz
or
mov
xor
dec
ficoms
fwait
adc
out
mov
rcrl
push
pop
clc
xor
hlt
fidivrl
jge
shrb
addl
stos
mov
pop
mov
and
lods
jmp
idivl
stc
enter
mov
xor
pop
ja
mov
sar
lahf
std
pushf
fnsave
xchg
mov
test
rcrl
pop
icebp
lds
xor
push
dec
enter
inc
in
pop
pop
les
shrb
cmpsl
shl
sbb
pop
sub
jg
les
fst
lods
jns
cmpsl
out
push
sub
dec
and
add
or
out
gs
mov
addr16
xor
dec
adc
cli
jmp
movsb
pop
pop
sahf
cltd
div
in
sub
and
jns
dec
jg
ss
push
inc
mov
movsl
sub
fmul
mov
jno
adc
mov
ja
dec
jb
das
jno
dec
cmp
jae
clc
cltd
sub
sub
loop
neg
xor
adc
dec
popa
testl
cltd
call
add
push
jle
dec
out
ds
shll
add
cmp
push
rcr
xchg
pop
xchg
jo
push
out
sahf
push
push
cmp
in
jl
cld
dec
rsm
mov
movsb
jae
push
adc
dec
add
testl
sahf
cmp
mov
adc
mov
in
mov
in
call
pop
ret
jecxz
push
mov
jne
sahf
movsb
movsl
mov
mov
or
and
jle
lea
test
push
xor
nop
loopne
cmp
clc
in
dec
repz
cmc
and
jo
and
in
jge
add
push
dec
mov
sbb
mov
pusha
sbb
rcrb
bound
push
outsl
psubq
cmp
sbb
mov
out
mov
cmp
jecxz
xor
fmull
add
ret
fbstp
shlb
addr16
sbb
cmp
add
mov
ret
sub
lock
sub
push
test
mov
jg
pop
scas
pushf
sub
ret
outsb
addl
push
aam
movsb
fwait
sub
cmp
scas
mov
xchg
lods
fildl
or
push
add
scas
cmp
push
pop
adc
aas
test
frstor
js
adc
lea
jmp
lea
daa
jl
push
jae
xor
cwtl
xchg
cs
pop
repz
test
repz
xor
and
scas
and
stos
call
xchg
fiaddl
push
mov
outsl
cli
lcall
sbb
shrd
mov
jp
push
rolb
aas
and
push
in
repnz
fcoml
xor
xchg
dec
cmp
cs
out
or
jbe
into
hlt
mov
jnp
adc
cli
lods
or
stos
lock
les
std
scas
inc
push
pop
in
dec
xor
mov
jg
jno
sub
xchg
nop
hlt
jne
xor
pop
sbb
je
jno
es
inc
or
adcb
or
dec
sbb
cltd
jl
xor
jecxz
dec
push
push
std
xor
in
sub
dec
sti
fildll
xchg
pop
icebp
and
add
cli
fwait
mov
cwtl
xchg
std
pop
mov
sub
jo
inc
and
es
popa
scas
push
xchg
movsb
adc
es
inc
cmpsl
notl
xor
xchg
jp
lcall
jne
sub
sub
mov
insb
or
out
ljmp
je
sub
pop
push
and
sbb
es
pop
pop
outsb
andb
xchg
arpl
xchg
sub
test
fsubrl
in
push
mov
mov
shll
inc
jg
pop
outsl
jmp
fdivs
insl
mov
into
push
mov
in
aaa
xor
lahf
jecxz
clc
in
mov
mov
test
mov
loop
mov
pop
push
imul
subl
fcmovne
xchg
mov
lret
movsl
add
jbe
pop
arpl
test
fbstp
imul
push
jo
test
sbb
lock
mov
cmpl
jecxz
stos
subl
out
rcl
sub
mov
add
stc
xchg
lods
inc
test
js
push
ss
fsubrl
enter
xchg
outsl
stos
dec
mov
add
fincstp
add
push
add
fstl
sbb
xor
mov
lds
imul
leave
iret
inc
out
repz
xlat
and
test
cld
xor
sbb
ret
add
outsb
cmp
subl
lea
pop
mov
sbb
hlt
sahf
stos
mov
xor
sti
jmp
ja
cmp
sahf
push
outsb
cmc
pop
push
sub
rorb
ficompl
stc
push
pushf
inc
std
and
push
movl
or
cmp
add
sahf
lods
pop
add
add
out
lds
fadd
add
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
pop
ja
xchg
xchg
addb
sub
inc
mov
stc
loopne
xchg
pop
scas
dec
push
loope
sbb
xchg
mov
sbb
cwtl
nop
ficoml
lret
mov
sahf
in
mov
and
dec
imul
and
sub
sub
mov
pop
loope
mov
int3
xchg
scas
jle
repnz
out
es
xchg
push
ljmp
push
jb
icebp
fwait
negb
jle
leave
mov
mov
decb
sbb
repz
xchg
sub
cmp
fbstp
test
sbb
adc
cltd
aaa
xchg
inc
jnp
int3
cmp
pop
adcl
add
pop
adc
add
loop
mov
push
add
cli
sti
ja
stc
les
mov
pushf
jns
enter
movsb
adc
mov
jecxz
jp
push
das
scas
scas
movsl
dec
clc
test
or
and
in
cwtl
jge,pn
les
arpl
rolb
mov
iret
lahf
cwtl
ja
mov
or
mov
fstp
jl
sbb
xor
movb
out
loope
mov
inc
insb
lods
xorb
mull
cli
fisubrl
cmp
call
andl
pop
push
and
xchg
cmpsb
ss
ficoms
xchg
fwait
lock
pusha
std
pop
jb
add
pop
int
sub
cmp
add
xchg
fcmovu
sub
ds
pop
sub
push
push
xor
out
cmp
stc
xor
pop
push
cmc
add
pushf
in
xor
movsl
inc
cmp
cmp
scas
and
mov
push
push
repnz
pop
in
push
and
inc
cmp
lods
and
sbb
or
or
pop
inc
jo
in
mov
bound
rorb
xor
cmp
pop
stos
fisubl
std
out
ret
adc
dec
fs
mov
or
mov
repnz
pusha
mov
xchg
mov
shlb
jmp
push
sub
dec
mov
int
insl
dec
xchg
add
adc
or
sti
cmp
push
add
clc
push
xchg
xchg
shl
pushf
lea
mov
mov
repnz
cmp
xor
fwait
add
insb
scas
cmp
div
xor
and
hlt
cli
imul
cmp
jle
mov
aam
cmp
mov
xchg
mov
cmp
sti
jae
dec
add
pop
dec
mov
cmp
cli
add
fidivrs
in
xor
loopnew
xchg
xor
push
mov
add
push
push
fstps
repz
mov
cmp
dec
cwtl
rcl
cmc
and
cltd
adc
push
enter
pop
in
lods
sbb
insl
adcb
std
idivb
sub
cmpsb
dec
cmpsl
sub
idiv
fsubrs
or
jo
scas
add
xchg
cmp
pop
dec
ljmp
mov
adc
push
testb
mov
adc
shrb
or
push
inc
mov
or
cmp
pop
stos
dec
push
adc
dec
aad
inc
xor
inc
jg
lcall
loopne
mov
dec
rep
cmp
xor
pop
dec
mov
xlat
pop
ret
inc
mov
ret
push
xor
nop
xchg
sbb
fists
out
pop
pop
ret
std
mull
push
inc
push
xor
out
daa
push
pop
rep
push
xchg
aas
push
into
pminsw
mov
aam
cmp
adc
sub
ljmp
jecxz
call
or
xor
add
out
push
iret
cmp
gs
xchg
pop
inc
ljmp
mov
push
mov
nop
sbb
xor
rorl
or
mov
mov
sub
xchg
or
jnp
popf
sbb
mov
mov
or
cmpsl
icebp
sub
xchg
leave
lock
aad
or
sahf
pop
or
mov
movsb
scas
push
and
lock
std
pop
xchg
jle
cmp
adc
out
xchg
lcall
fldenv
xchg
jl
cmc
pusha
enter
push
mull
inc
into
lret
out
sub
jns
out
mov
xchg
das
insb
test
cmp
fcmovnbe
inc
pop
inc
shlb
aam
sub
cmpsb
jnp
das
inc
js
cmp
xor
inc
xchg
mov
adc
and
xlat
xchg
xchg
lcall
stos
divb
clc
fisttpll
mov
movl
stos
in
push
push
mov
lea
rcrl
imul
scas
ret
push
adc
out
cmp
jecxz
addr16
sbb
xlat
es
in
cltd
mov
push
rorb
adc
inc
dec
test
shlb
xor
mov
adc
lock
sub
adc
jo
add
mov
cmp
jg
push
push
push
mov
pop
sub
ret
xchg
pop
test
pop
enter
and
roll
mov
orl
jb
pop
shrb
cli
stc
leave
mov
xchg
hlt
dec
js
mov
jmp
ret
lock
adc
pushf
fnstsw
movsl
jne
inc
sub
sub
mov
js
pop
ficoms
push
dec
pop
dec
xor
movsl
jge
pusha
adc
sub
jl
test
cmp
xor
and
out
sbb
or
loop
sbbb
xchg
mov
push
outsb
lock
or
stos
shll
ja
jns
and
mov
mov
imul
stc
jg
push
test
pop
scas
sahf
leave
div
es
mov
popf
aam
lock
rcrb
xor
test
cmp
xchg
pop
dec
test
xor
shll
adc
ficompl
jge
pop
cmp
push
cs
cmc
push
lret
pop
xor
sar
movsl
test
adc
pop
inc
dec
aam
insl
cmpsl
jns
lret
sbb
jp
mov
iret
fistps
sub
mov
mov
inc
mov
fdivrs
ret
jle
mov
and
push
imull
xor
xabort
sub
cmp
xor
gs
not
repz
add
add
lret
ljmp
xchg
jne
cmp
scas
fistpl
adc
insb
dec
jg
jnp
into
outsl
mov
lret
or
repnz
aad
xor
aad
mov
roll
outsb
or
dec
mov
out
add
push
or
stos
imul
and
fcmove
aas
out
and
sub
fdivr
imul
jmp
pop
mov
mov
mov
test
sub
into
aad
dec
jle
outsl
ljmp
fstpt
stos
push
test
nop
nop
fisubrl
mov
mov
icebp
jg
push
push
lret
outsl
out
popf
cltd
add
cwtl
push
pusha
mov
into
fstps
mov
add
jne
cmp
ljmp
fldenv
out
jp
sbb
insb
aaa
repnz
inc
and
mov
cmp
and
push
outsl
stos
enter
jb
mulb
insb
insb
or
push
cmp
pop
out
and
push
loopne
xchg
sub
mov
xchg
insb
test
inc
aas
or
inc
lea
divb
test
sub
or
mov
mov
popf
stos
movsl
jbe
mov
stc
out
outsb
push
call
jl
or
popl
add
add
jns
xchg
adc
mov
adc
xchg
mov
stos
add
ljmp
mov
popa
xchg
jbe
jns
and
push
sarl
sbb
adc
pop
pushl
cmp
sbb
lret
add
in
imul
jmp
pop
sbb
popf
ss
pop
push
scas
aad
dec
inc
ffree
cli
mov
les
jl
mov
or
inc
or
shr
imul
dec
mov
push
out
movb
iret
in
xchg
sbb
inc
fdivrl
bound
xor
push
ss
cmp
dec
inc
xchg
mov
aad
push
and
mov
lds
gs
xchg
pop
shl
mov
inc
xchg
aam
mov
bound
gs
cmpsb
repz
sub
rclb
shrl
dec
cltd
push
imul
bnd
jns
mov
xchg
xchg
call
pop
pusha
push
cmp
jno
mov
movsl
les
imul
addr16
mov
inc
cmp
movsb
mov
sahf
scas
and
or
cmpl
fiadds
repnz
stos
jae
dec
aad
or
sbb
cld
in
and
sahf
in
hlt
xlat
pop
xor
fstl
mov
stos
aas
stc
jae
xchg
pop
test
mov
dec
mov
or
xchg
and
cli
daa
adc
cmpsl
lcall
rorb
popf
sbb
mov
jbe
addl
jge
sahf
pop
or
clc
mov
xchg
int
or
add
adc
push
addl
loop
icebp
fs
mov
notl
lret
js
cwtl
and
cmp
xor
in
stc
lods
jge
movsb
stos
dec
fildl
push
das
jp
or
scas
inc
lea
cli
insl
add
xor
aaa
sbb
jl
and
sbb
popa
in
fistpll
push
js
fdiv
xor
sbb
jne
pop
test
lcall
inc
cli
inc
xchg
pop
addr16
filds
mov
int3
rol
test
sbb
ret
jge
jle
xor
mov
sub
aas
outsb
sbb
jnp
ror
inc
pop
lods
fnstenv
jo
adc
sub
into
jae
out
mov
dec
push
mov
out
dec
push
inc
sbb
pop
mov
nop
adc
jge
or
jge
mov
sub
push
cmp
cmp
xor
cmpl
daa
inc
fs
mov
xor
sbb
imul
sbb
fs
mov
in
inc
test
mov
sbb
add
cld
pop
testb
clc
loop
iret
xchg
enter
popa
jecxz
leave
push
call
gs
out
jg
lock
inc
ds
xor
out
stos
loop
fists
mov
adc
push
push
sub
jb
jbe
mov
or
imul
jb
push
aaa
mov
test
sbb
sbb
inc
mov
cmp
movsl
dec
fidivrl
push
add
stc
iret
push
movl
mov
or
enter
fildl
inc
shrl
insb
stos
or
add
cmp
in
sub
xchg
addl
fcomps
mov
test
stc
cmp
rclb
enter
lcall
dec
movsl
out
testb
push
js
or
sub
out
gs
test
fs
sub
fists
fnstcw
push
inc
jnp
gs
les
ret
mov
outsb
push
xor
mov
mov
mov
insl
dec
adcb
sbb
sbb
ret
imul
mov
cmp
iret
roll
loope
inc
enter
fstpl
push
mov
adc
xchg
repz
stos
and
sbb
lret
xchg
inc
mull
dec
mov
sub
add
cmp
and
jmp
addr16
push
imul
push
mov
icebp
jmp
sub
sbb
xchg
imul
mov
stos
inc
pushf
addl
sub
jmp
scas
fcoms
add
jnp
jle
push
nop
int3
inc
js
sub
adc
into
inc
push
adc
push
repz
arpl
xor
es
stc
pop
jmp
js
shlb
sahf
mov
ret
add
push
dec
mov
and
pop
cmp
mov
adc
pop
addr16
mov
mov
cltd
xchg
sahf
pusha
push
pop
jmp
popa
gs
jl
sub
jno
push
inc
cli
pop
mov
or
jbe
xchg
adc
ljmp
inc
js
rorl
fisubrl
cmp
sub
sub
outsl
sub
or
shll
cld
sbb
and
pop
arpl
aam
cmp
rol
mov
movsl
add
mov
lods
sbb
mov
leave
dec
add
leave
pop
ja
push
fisubrs
push
push
or
mov
cmp
push
outsl
lds
jle
movsb
pop
and
or
cmp
cmp
lods
repz
cmp
cmp
add
shrl
fsubrl
mov
push
mov
push
xor
fdivs
outsb
and
cwtl
jae
out
test
sbb
call
mov
dec
lahf
adc
fld
pop
js
daa
adc
in
jbe
cli
and
je
flds
lret
rol
popf
movl
mov
mov
rcrl
mov
fsts
sbb
das
pop
std
pusha
jmp
sahf
or
cmp
rol
lods
mov
mov
dec
aad
test
xchg
xchg
and
sub
popf
sbb
sub
fstpl
cmc
and
push
loop
call
mov
fisttps
xor
inc
pusha
dec
push
xchg
or
out
cld
leave
mov
or
das
and
out
sahf
jae
jp
xor
add
icebp
loopne
push
loopne
sub
jno
stos
jle
dec
push
sub
inc
pop
cmp
xor
popa
mov
sub
aam
repz
std
xor
xchg
into
fwait
cltd
xchg
mov
dec
aaa
push
into
push
mov
nop
add
dec
mov
cltd
outsl
or
push
xchg
scas
add
push
inc
mov
testl
jl
dec
int
xchg
mov
mov
pop
jo
add
jl
sbb
js
jp
sbb
jo
jae
lcall
in
notb
mov
mov
loopne
inc
adc
xchg
pop
push
loopne
leave
ficoml
ret
js
xchg
adc
mov
lret
mov
xchg
into
inc
js
std
cmp
fildll
arpl
jmp
insb
add
or
cwtl
out
and
mov
lcall
sub
xor
xchg
or
mov
mov
cmpsb
dec
pop
mov
or
or
aaa
andb
aam
push
mov
push
pop
fstps
cmpsb
fs
pop
test
mov
xor
das
cs
mov
cltd
xchg
mov
mulb
in
and
xor
mov
jno
adc
add
insb
cmpsb
stos
adc
inc
sub
and
mov
jle
repz
scas
jnp
dec
fdivrl
inc
add
imul
aaa
push
outsl
stos
pushf
daa
mov
mov
mov
inc
clc
test
mov
cmp
sub
inc
enter
dec
fistpl
and
jae
xchg
or
pop
and
hlt
movb
stos
mov
scas
xor
pop
mov
aaa
orb
into
xchg
sub
in
repnz
in
fwait
rcr
pop
sbb
adc
loop,pn
or
movsb
stc
pop
and
dec
and
sub
mov
and
add
pop
lea
push
jge
add
les
out
push
and
iret
push
mov
cmc
es
lahf
insb
adcl
movsl
jne
lds
popa
data16
add
or
mov
fnstcw
out
cmp
pushf
test
rorb
in
and
cld
or
adc
dec
jno
xchg
sbb
bound
cli
cli
cmp
scas
out
rol
and
cmpsb
push
dec
and
out
mov
movq
push
sbb
mov
subb
pusha
icebp
fdivl
hlt
sbb
jle
inc
lahf
andb
imul
jge
adc
cli
mov
xchg
loop
cmp
or
mov
ret
jb
repz
xor
adc
pop
xchg
daa
or
cmp
sbb
and
rcl
jo
and
jno
sti
testl
push
and
ret
out
movsl
push
cli
cwtl
sub
shr
mov
inc
imul
cmc
cmp
sbb
es
lods
ds
ret
les
xchg
es
cmc
shll
iret
cld
mov
inc
repz
sbb
enter
lds
sar
mov
xchg
mov
cs
fstpl
mov
divl
mov
push
pop
out
in
pop
inc
repz
pop
outsl
inc
jle
sub
inc
stos
sub
movl
xchg
sbb
in
popf
inc
loopne
daa
rcrb
movb
xor
icebp
dec
test
dec
scas
jb
les
scas
les
ds
sub
pop
stc
jns
lea
rclb
pop
es
mov
in
rcll
stos
dec
call
jl
dec
int
lea
imul
xchg
lea
and
int
cmp
cmpsl
mov
fisttpll
insl
sbb
cmp
lds
pop
jecxz
lret
orl
inc
push
js
fnstenv
test
arpl
ficoml
sub
outsl
in
sub
cwtl
call
fwait
xchg
push
pop
mov
aas
cmp
pop
and
dec
gs
pop
mov
jecxz
mov
enter
lahf
cmp
scas
ret
sbb
addr16
outsb
mov
fs
push
cli
mov
push
test
push
and
adc
mov
adc
pop
ja
stos
jo
or
hlt
cwtl
icebp
mov
fisubrl
add
cmp
pop
inc
inc
and
or
push
jne
int
sub
mov
pop
fdivl
lods
call
test
jbe
mov
dec
pop
jns
add
dec
push
scas
push
push
push
ljmp
xor
pusha
sti
enter
or
xor
sub
add
daa
cmp
bound
cli
inc
mov
out
lock
sbb
mov
xor
push
mov
aad
add
sbb
push
rorb
clc
sbb
mov
xor
js
cli
cs
test
lcall
dec
fsub
cmp
pop
pusha
int3
es
mov
js
push
dec
mov
sahf
jae
jo
rcll
adc
cmp
rorl
lods
xchg
out
pop
jnp
lods
push
in
test
aad
cmpsb
adc
push
mov
add
loopne
fsub
pop
dec
jo
pusha
jecxz
ljmp
inc
scas
int
jp
jo
in
mov
lods
out
ss
ror
outsl
les
mov
popf
aam
inc
adc
xor
cs
xchg
stos
inc
inc
push
or
cli
lods
xchg
cld
popa
xorl
push
inc
das
add
insl
fwait
pop
flds
mov
es
repnz
inc
add
sub
cmp
push
in
mov
mov
imul
sahf
data16
lcall
es
mov
dec
xchg
stos
int3
lret
int
dec
cmp
icebp
xor
jg
aas
lds
xlat
mov
test
or
mov
sbb
mov
or
fldenv
insl
cmp
cmc
test
add
add
jecxz
repnz
mov
repnz
ds
push
xor
push
add
andl
add
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
cmp
dec
add
add
add
add
add
add
pop
add
adc
add
add
add
inc
push
jge
pop
loopne
mov
out
cs
xor
add
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
