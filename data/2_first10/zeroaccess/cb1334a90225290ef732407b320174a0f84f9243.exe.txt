push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
sbb
dec
mov
mov
mov
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
in
mov
dec
push
in
enter
jge
imul
cmp
push
pop
popa
mov
in
scas
ret
or
daa
out
dec
fstp
or
push
and
xchg
aam
popf
rcr
mov
fs
mov
push
testb
cwtl
sbb
adc
bound
mov
cmp
mov
push
pop
mov
add
outsb
out
int3
and
adc
inc
cmp
call
and
mov
push
ss
sbb
lock
xor
or
enter
xchg
fwait
pop
xchg
sbb
std
add
dec
int
lea
mov
adc
push
pop
fsts
xchg
mov
mov
fbstp
mov
jg
sub
out
movsl
mov
aad
sub
notb
int3
mov
jmp
pop
stos
push
add
clc
inc
fstpt
sub
inc
xor
push
push
cmp
cmp
jge
clc
jp
pushf
pop
idivb
divb
mov
jecxz
inc
mov
pop
sti
popa
pop
jae
mov
mov
gs
pop
mov
and
bound
sbb
cmpb
pushf
mov
outsl
push
lds
mov
cvtpi2ps
dec
ficoms
hlt
sti
jo
enter
arpl
mov
scas
or
xchg
pop
jo
in
sbbb
add
ffree
pop
pop
int3
dec
imul
add
test
and
sbb
out
pop
out
sbb
outsb
aas
lods
jp
in
std
repz
sub
movsl
inc
sti
or
stc
or
cld
mov
jns
lcall
pop
mov
fwait
and
outsb
nop
ja
jmp
inc
sub
cmc
stos
in
inc
or
jle,pt
outsl
aam
icebp
js
mov
cmp
dec
iret
int
pop
add
inc
sub
jmp
pushf
adc
jae
jle
jge
movsb
or
and
dec
ljmp
lahf
jbe
push
out
push
jnp
xor
int
insl
mov
pop
rcrl
cmp
aam
pop
cltd
mov
iret
aas
xchg
or
xchg
xor
and
adc
mov
mov
and
mov
fstl
xorl
mov
mov
xor
mov
shlb
sub
fs
lret
sbb
push
sbb
insl
in
fsubr
aas
pop
adc
cld
or
mov
lock
cmp
push
insl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
lods
lock
lods
adc
adc
adc
subb
mov
sub
sub
fimuls
mov
cs
imul
cmpsb
mov
lcall
push
out
outsl
in
jbe
xchg
enter
inc
sahf
mov
jmp
push
cmp
mov
fisttps
out
das
pop
leave
sbb
das
push
pop
mov
mov
add
jns
std
ret
or
dec
mov
mov
sub
int3
adcl
pop
lods
cmp
push
add
movsl
cmpsb
mov
sub
decb
rcll
rolb
mov
movsl
pop
sbb
pop
movl
lret
int3
ja
push
stc
cmp
add
fcoml
push
arpl
push
cmp
lret
fisubrl
dec
sbb
sar
xlat
aad
outsb
out
imul
inc
xchg
mov
es
sub
pop
daa
sbb
stc
cmpsb
xor
mov
push
out
cwtl
cmp
test
loope
cmc
das
xor
fstl
inc
out
jo
outsb
test
cwtl
out
cltd
dec
scas
lcall
imull
and
dec
sahf
testl
pop
stos
jo
xor
arpl
cmp
icebp
in
add
jecxz
pop
lcall
into
mov
std
push
cmpsb
push
sub
cli
imul
cld
fsubs
and
sbb
push
nop
inc
ds
fidivrl
xchg
ja
jno
movsl
aam
cwtl
adc
leave
movl
cmp
ds
fst
or
xchg
sub
jo
stos
adc
cmp
lcall
pushf
shll
jb
xor
call
xchg
xchg
out
push
cmp
add
int3
pop
pop
jbe
iret
jnp
dec
xor
lret
pop
and
and
daa
sub
shl
xchg
cmp
mov
dec
mov
test
bound
push
jl
xchg
xor
inc
jns
aad
add
lock
push
adc
lcall
stos
mov
inc
test
aad
inc
leave
lret
mov
inc
mov
stc
jge
imul
pusha
jno
xor
addr16
pop
daa
and
movsb
inc
lock
cmp
pop
mov
addr16
pop
fdivrl
pcmpeqw
insl
sarl
push
int3
jge
push
fiadds
fisttps
xchg
outsl
mov
mov
popa
adc
in
mov
cmp
mov
jns
mov
jge
adc
push
hlt
lods
mov
dec
push
inc
movsl
loop
pushf
ja
and
movsb
pop
jns
push
or
adc
mov
mov
in
mov
cmpsb
sahf
jge
adc
xchg
adc
out
pushf
xchg
movzbl
pop
mov
xchg
loopne
push
gs
push
mov
sub
imul
popf
lret
add
inc
jge
scas
loop
push
and
call
rorl
outsb
sub
dec
hlt
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
cs
jg
sbb
out
mov
xchg
sub
aaa
fsubr
mov
aam
xchg
jp
incb
xor
lahf
movsb
call
leave
push
inc
cmp
popa
pushf
jmp
cmp
pop
xlat
and
cmp
cmp
mov
and
cwtl
add
jge
pushf
jp
push
shlb
out
movsb
inc
xchg
xchg
lock
jge
add
sub
mov
test
mov
push
sarb
push
jmp
hlt
stos
lea
xchg
pop
pop
mov
in
mov
mov
outsb
mov
mov
add
pop
aas
xchg
mov
gs
pusha
sbb
jbe
movsl
mov
and
cmp
test
dec
insb
addr16
in
ljmp
popf
push
pusha
inc
jb
or
bound
test
ja
xchg
add
xchg
cmc
nop
subb
test
mov
cmp
lock
inc
ljmp
and
jnp
stos
popa
fwait
dec
or
push
ret
rcll
xor
fst
push
sub
ror
mov
scas
or
mov
dec
aam
lds
pop
outsb
cs
lea
cmp
or
pushf
xor
mov
pop
jne
pop
mov
xlat
push
insl
cmp
mov
andb
ret
push
leave
in
push
cltd
loop
xor
ljmp
dec
pusha
movsl
add
mov
sbbl
adc
test
cli
cmpsl
xchg
fsubrl
inc
fiadds
adc
push
sbb
and
pusha
jg
daa
jnp
push
divl
pushf
push
cmp
in
push
shlb
pop
flds
push
push
std
cmpsb
hlt
and
dec
mov
loope
imul
mov
and
xor
fcomps
test
jecxz
aad
mov
ret
add
into
inc
cld
mov
outsb
mov
sbb
sbb
sub
sbb
adc
push
imul
test
xlat
fwait
test
mov
test
cmp
mov
inc
jb
int
repz
dec
and
jp
movb
or
pop
cmp
add
dec
int3
xor
test
sbb
roll
dec
std
and
inc
or
jl
addl
pop
jp
add
cmpsl
lds
int3
fwait
push
or
inc
dec
pop
mov
mov
sub
ret
fwait
pusha
mov
mov
jnp
inc
cwtl
jecxz
add
stos
test
jns
cmp
sub
xlat
cld
and
pop
push
out
dec
int
lds
mov
addr16
rcll
imul
push
adc
fcomp
jmp
xor
push
flds
jb
in
jb
jbe
xchg
das
fucomp
or
insl
add
mov
scas
rolb
xchg
pushf
es
out
cli
jb
fistps
call
addl
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
xchg
cwtl
lods
add
adc
adc
adc
std
xor
addb
mov
add
bound
fsub
mov
adcl
cmovae
sub
jno
out
pop
jle
mov
imulb
fcmovnu
fimull
push
jnp
call
movsb
push
xchg
in
gs
xchg
push
insb
cli
mov
adc
sbb
adc
iret
adc
sbb
dec
in
inc
bound
aas
lahf
jg
pop
fildll
sarl
jecxz
clc
dec
xlat
add
dec
dec
xchg
ss
xchg
insl
lods
cmpb
leave
dec
mov
pop
or
fcmovnu
or
push
mov
lret
xlat
cmp
mov
outsb
mov
mov
mov
loop
into
add
and
xchg
lcall
mov
in
xchg
jg
xor
das
mov
sub
mov
pop
mov
adc
enter
xor
cmp
inc
imul
in
push
pop
clc
lods
jge
int3
outsb
and
lock
mov
aad
mov
cmp
jge
or
punpckldq
pop
jnp
shrb
vmovss
pop
clc
aad
fwait
sub
loope
adc
or
out
mov
movsl
repnz
cmp
sub
mov
in
repz
sub
add
or
push
lods
jns
jl
aam
repnz
out
sbb
mov
jnp
and
das
dec
lods
or
fdiv
xchg
push
mov
scas
mov
js
push
movsl
push
dec
imul
jno
xor
scas
mov
jae
outsl
push
mov
lods
xorb
cmc
roll
pop
mov
inc
outsl
cli
int3
shll
dec
popf
pop
add
push
pop
aas
push
pop
push
sbb
cmpsl
sti
repz
fdivs
arpl
mov
mov
sbb
mov
iret
mov
outsb
addl
sub
mov
inc
sub
add
dec
psubb
xchg
xor
stos
ja
repnz
rcll
xchg
dec
sbb
mov
pop
mov
jecxz
cli
adc
mov
dec
hlt
dec
inc
adc
mov
jo
addl
add
mov
mov
jae
mov
scas
jb
movsl
sbb
add
iret
push
movsb
loop
mov
cmp
cmpsb
mov
or
pop
xchg
sahf
jp
ja
add
icebp
pop
jg
je
push
add
pop
test
and
cmpsl
pop
or
push
pop
mov
xor
jmp
or
dec
and
dec
pop
popa
sub
addb
fldt
aad
add
jle
addr16
cwtl
cmp
and
in
mov
test
sbb
cmp
hlt
dec
and
fs
ja
xor
or
jle
jbe
mov
shl
adcb
dec
icebp
roll
jle
cmp
lods
cmpsl
aaa
cmp
or
into
or
clc
daa
iret
bound
sahf
into
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
sbbl
adc
mov
sub
test
mov
andl
adc
sbb
clc
mov
mov
push
and
xchg
push
xor
movsb
hlt
aam
cli
stos
or
stos
sub
in
icebp
das
rcl
and
push
inc
mov
imul
and
leave
shll
xchg
inc
mov
and
and
cmpl
ficomps
cmp
inc
sbb
pop
loop
pop
outsb
xchg
mov
cld
call
jo
hlt
mov
inc
mov
mov
jb
xor
iret
pop
mov
or
clc
lahf
mov
push
int3
mov
xchg
and
adc
mov
jns
in
mov
dec
and
push
rcrl
pop
fidivrs
push
clc
jl
lret
stc
lea
test
jbe
imul
cmp
sub
cld
inc
jecxz
xor
adc
and
inc
or
dec
pop
sub
mov
pop
es
movsl
mov
push
sahf
movsb
mov
sub
mov
jbe
dec
adc
dec
test
andb
popa
in
lods
jge
fwait
or
mov
dec
ret
add
xchg
dec
push
jg
dec
xorl
enter
test
sbb
cmp
push
test
imul
arpl
or
in
dec
nop
xor
jmp
xchg
icebp
add
mov
lock
outsb
mov
add
and
or
repnz
out
sbb
mov
and
insb
popa
mov
add
cwtl
cmp
int3
pusha
push
xor
inc
sub
xchg
xchg
lret
cltd
cmp
sub
or
mov
into
pop
xor
xorb
adc
repnz
mov
loop
ds
pop
mov
push
inc
into
dec
mov
leave
or
jbe
lods
jne
jno
lods
add
add
aad
aas
pop
jne
add
cwtl
inc
jns
inc
scas
lds
daa
movsl
dec
arpl
adc
jno
stc
cmp
mov
fstpt
adc
jbe
mov
mov
mov
or
inc
cld
movl
xor
mov
push
pusha
fs
xchg
negl
arpl
dec
clc
mov
sti
or
mov
cld
shll
pusha
pop
jae
jg
adc
add
jmp
jbe
mov
scas
fcmovnb
sub
call
pop
mov
inc
cmp
movsb
dec
sbb
lret
adc
jmp
scas
jmp
clc
jae
repz
std
mov
jne
popf
dec
pushf
fmull
jle
mov
mov
mov
push
lret
xor
jbe
xchg
cwtl
mov
lret
nop
dec
dec
mov
lret
jle
lcall
push
popa
mov
jle
loop
out
rol
mov
mov
dec
icebp
mov
fmul
jg
imul
out
push
pop
shrl
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
push
data16
repz
adc
adc
sbb
pop
mov
aas
cmp
dec
mov
push
xor
les
cltd
aas
arpl
out
fsubs
mov
out
out
mov
pop
shl
ret
jle
xchg
in
mov
xchg
and
mov
sub
cmp
test
push
cmc
div
pop
xor
xor
es
pop
std
jnp
mov
adc
mov
jb
dec
add
pushl
frstor
stos
lods
lock
jno
sbb
lsl
shl
sub
pop
scas
out
dec
lcall
inc
cmp
fists
in
xlat
lods
scas
inc
mov
add
xchg
add
xchg
cmc
mov
movsb
xor
es
dec
xor
jecxz
add
sbb
out
test
pop
xorb
jg
and
sbb
sub
inc
push
jle
data16
ljmp
scas
pop
dec
test
push
sub
xchg
lea
stc
mov
scas
adc
test
xchg
out
dec
mov
ds
insb
jae
or
or
rcll
scas
sub
cmp
pop
sbb
leave
imul
mov
mov
cmp
sub
jecxz
mov
in
fstpl
xor
add
sub
iret
jp
outsl
inc
mov
icebp
pusha
jnp
pop
pushf
or
adc
insl
jnp
push
cmp
call
scas
inc
push
insl
pop
xchg
sub
addr16
push
cli
cld
mov
in
inc
cmpsl
xchg
inc
jecxz
shll
scas
subb
test
push
jbe
jg
or
outsb
in
popa
jecxz
push
inc
cmpsb
sbb
iret
pop
and
and
ret
mov
or
xchg
outsb
and
jmp
jnp
mov
lds
sbb
movsl
push
xchg
jg
inc
imul
mov
ret
sbb
decb
sub
jae
push
mov
fmull
cli
push
cmp
incb
sub
sti
push
pop
sbb
insb
adc
mov
aad
mov
xor
or
adc
ffree
insb
arpl
enter
mov
sub
mov
je
sub
fisttpll
or
xlat
out
outsb
stc
pop
pop
cmp
ret
repz
movsl
push
dec
outsl
mov
in
out
fistl
mull
popf
xchg
mov
push
and
dec
pop
sbb
ret
into
clc
or
and
insb
xchg
addr16
push
sahf
push
lea
jge
pop
out
sbb
jns
mov
out
pushf
push
lea
stos
movsb
out
mov
test
hlt
add
mov
cmpsb
and
inc
push
sub
scas
in
add
sub
push
push
arpl
pop
cmpsb
outsb
jo
jg
sbb
ret
inc
xlat
inc
pop
pop
mov
js
push
push
xchg
in
add
rep
adc
xor
cvttps2pi
push
push
push
movsb
das
pop
jmp
in
and
pop
xchg
and
pop
imul
aam
dec
stos
push
rcll
ds
or
add
jne
add
xchg
cltd
bound
and
push
jo
xchg
fincstp
jle
jmp
adc
adc
fsts
jmp
loop
inc
pop
ret
and
pop
mov
cmc
mov
rolb
xchg
icebp
or
insl
cli
sub
sub
cmp
ret
ficoml
mov
inc
cmpsb
ds
mov
xor
sbb
orb
ficoms
or
push
cwtl
in
ljmp
push
in
sbb
lret
push
mov
inc
aas
inc
std
std
dec
sbb
jecxz
jne
rclb
mov
pop
mov
sub
test
xchg
lock
rolb
inc
outsl
repnz
mov
inc
fldl
or
iret
call
pop
push
sub
pop
mov
or
sahf
adc
fwait
xchg
push
jns
cmpsl
xchg
out
rcrb
push
and
ds
fcoml
lea
push
sti
cmp
jle
out
iret
jge
mov
faddl
dec
test
adc
pop
clc
clc
movsb
xchg
xchg
rcrb
adc
fs
inc
adc
mov
inc
filds
int
dec
aad
icebp
cs
sbb
cmp
sti
mov
adc
sub
or
mov
test
cmp
imul
subb
cld
and
inc
mov
pushf
ds
jl
test
shrl
out
repnz
movsl
push
mov
add
lods
insl
mov
xchg
xlat
xor
sub
outsl
out
or
dec
iret
scas
inc
shll
cli
pop
lret
pop
push
lods
lret
in
jno
cmp
outsl
xor
xchg
lret
mov
or
lahf
mov
sti
cmpb
shlb
inc
dec
adc
lods
mov
std
adc
mov
lock
jne
lods
and
mov
rcl
mov
dec
inc
les
or
jbe
push
scas
mov
push
addr16
pop
data16
movsl
mov
js
push
lahf
out
sub
mov
cmpsl
add
rcrb
add
sub
aad
lahf
scas
int
test
into
or
int3
pop
clc
insl
jp
push
xor
sahf
or
into
push
sti
xchg
or
jp
pusha
mov
fcmovne
lods
mov
or
pop
in
jne
inc
insl
loope
cmp
push
imul
push
out
pop
jmp
push
inc
pop
and
cltd
push
sbb
std
or
sti
hlt
faddl
jp
fldcw
mov
repnz
push
xchg
mov
fimull
jnp
push
je
dec
lods
lcall
push
lcall
adc
sub
sub
or
cmpsb
and
adc
sti
std
adc
test
and
add
dec
lcall
out
in
out
or
sub
or
mov
xchg
inc
push
sub
pop
mov
bound
lahf
dec
pop
rcrb
insl
xor
dec
frstor
loope
leave
in
inc
call
mov
or
and
out
add
cmc
ror
dec
dec
xchg
daa
idivl
enter
roll
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
pop
xchg
js
ljmp
flds
fistps
and
mov
sbb
jo
popf
adc
movsl
sub
dec
out
imul
nop
ja
andb
adc
sub
xchg
push
int3
dec
outsl
divl
xchg
ds
hlt
mov
mov
pop
or
sub
jmp
popf
lock
sbb
rol
addr16
sbb
and
cmpsb
jo
jbe
lods
xor
fsubrs
push
pop
xlat
xchg
loope
sar
pusha
jno
repnz
loopne
and
push
popa
stos
je
or
in
dec
pop
push
add
hlt
jno
cld
adc
ljmp
pop
mov
rorb
mov
mov
fld
in
adc
adc
mov
jno
out
clc
insl
adc
sbb
loop
mov
pusha
dec
ja
mov
mov
xor
push
loopne
mov
icebp
sbb
sub
scas
dec
jp
lods
mov
mov
in
mov
xchg
lret
push
push
cmp
pop
dec
sub
push
xor
jnp
out
push
test
or
adc
mov
dec
mov
push
adc
cwtl
push
imul
sub
add
sbb
lods
mov
je
cmp
loope
sub
ret
aas
cmpsb
dec
cmp
inc
sub
cltd
inc
sub
xor
daa
pushf
xchg
imul
push
jne
xor
lahf
imul
test
rcl
decl
in
je
js
mov
adc
lock
outsl
nop
pop
subl
mov
push
and
popa
mov
cltd
adc
movsb
lahf
push
icebp
or
mov
es
loopne
mov
rolb
add
mov
cmpsb
out
pushf
sub
jg
fs
stc
daa
sahf
stos
dec
push
cwtl
jge
cmp
pop
insb
vandnps
int3
mov
push
das
fsts
je
fcomi
ror
xchg
sub
mov
inc
popf
mov
cs
rclb
andb
loopne
lods
and
xchg
xor
cmp
adc
stc
test
add
repnz
or
pop
movd
cmpl
in
enter
xchg
xor
adc
popa
pop
out
fdiv
push
ffreep
xchg
outsb
push
add
and
insl
jmp
jb
mov
dec
cmpsb
xchg
icebp
std
inc
pop
les
pop
xchg
loopne
in
cltd
faddp
xchg
xor
dec
cmp
pop
xor
pop
jl
ret
shll
mov
jb
pop
and
push
and
call
les
xor
dec
push
and
cs
shlb
fdivp
pop
fdivl
sbbl
jecxz
test
xchg
sti
push
and
xchg
fs
mov
enter
loopne
or
and
inc
inc
jle
ret
pushf
dec
out
jp
inc
mov
fcmovnb
cmp
cmp
mov
cmpsb
inc
adc
fcoms
cltd
popa
mov
push
rolb
scas
xor
mov
xchg
dec
push
sub
pop
add
fsubp
popa
sbbl
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
add
and
adc
adc
das
fwait
jbe
cmc
jo
and
mov
inc
pop
jnp
add
in
pop
adcl
ds
and
fadd
mov
push
imul
cmp
jnp
xchg
fistpl
xchg
out
in
pop
mov
jmp
add
dec
or
adc
inc
xor
fidivrl
sbb
add
push
sbb
nop
cmpsb
push
dec
pop
pop
loope
xor
and
pop
sbb
xchg
outsl
int
pusha
int
ficomps
in
jbe
cwtl
mov
repnz
in
pop
pop
jge
sbb
push
outsl
mov
dec
es
lods
mov
call
jge
and
mov
add
pop
lret
sbb
cli
sub
dec
jno
add
or
push
cwtl
inc
sbb
mov
loopne
dec
mov
ljmp
aaa
add
xchg
mov
lods
out
imul
xor
xchg
popf
out
xchg
scas
adc
mov
jecxz
pop
test
add
lcall
sub
imul
iret
push
push
outsl
adc
out
push
push
decl
cmp
movsb
out
ljmp
cwtl
or
adc
jmp
pop
pop
pop
gs
shlb
xor
ret
push
lret
xchg
jg
mov
cmpsl
testl
xchg
xchg
mov
push
int3
add
es
xor
mov
jb
add
inc
stos
nop
sub
mov
jecxz
inc
idivl
xor
push
xchg
aaa
jb
ss
cwtl
sub
dec
clc
movsl
test
fwait
sbb
insb
das
in
int
mov
xor
add
push
icebp
dec
xor
xchg
push
leave
xor
push
hlt
popf
loop
ret
repnz
jae
sahf
lcall
int
clc
loop
jns
adc
mov
les
mov
sub
nop
fistpll
jno
and
or
pushf
cmp
adc
and
mov
addr16
lret
add
clc
sbb
mov
pop
ret
imul
sbb
dec
fucomip
push
mov
leave
add
test
push
lcall
sahf
mov
add
roll
add
jno
pop
pushf
shlb
push
mov
ret
sub
dec
lcall
inc
push
icebp
mov
and
push
dec
mov
int
bound
scas
mov
lea
push
stos
mov
orl
add
data16
inc
ja
gs
jecxz
es
xchg
or
mov
or
pop
add
inc
push
fadd
aas
pop
or
sub
xchg
fidivrs
dec
jl
pop
fldt
arpl
leave
inc
or
xchg
mov
sub
sbb
jge
cmpsb
mov
dec
ret
xor
push
pop
stos
outsl
loop
push
xchg
push
fwait
and
xor
loop
pop
adc
xchg
aaa
repz
bound
lods
sub
inc
mov
xchg
xlat
xchg
push
mov
into
xor
pop
leave
mov
sahf
repnz
or
xor
mov
mov
fwait
mov
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
jg
pushf
lods
fcoms
adc
adc
cmpsl
jbe
xor
pusha
rol
xchg
add
int
push
popl
jmp
sar
mov
lahf
lods
inc
rcrb
or
leave
jnp,pt
mov
push
pop
fstl
jg
test
roll
lahf
adc
aas
xor
adc
rol
and
push
jge
jg
xor
xor
add
rclb
xor
sbb
sahf
dec
arpl
dec
and
leave
cld
jae
shrl
pop
imul
mov
or
insl
mov
in
xchg
ds
sbb
stos
outsl
call
nop
addb
mov
loopne
mov
rclb
pop
add
je
mov
fs
ficoms
cmp
lods
lahf
aaa
sbb
or
shlb
icebp
js
jns
xchg
arpl
mov
sbb
mov
pop
roll
sbb
scas
mov
in
sub
test
in
sbb
jae
and
lds
jns
mov
jo
fidivs
stos
mov
fdivrp
add
xor
mov
dec
aam
xlat
xchg
cmp
sbb
insl
inc
mov
inc
stos
and
sbb
movd
push
sti
fadds
inc
in
shll
mov
sbb
popa
test
call
dec
pusha
fisubrl
jae
mov
incb
lds
pop
xor
sbb
sarb
pushf
xor
lock
mov
filds
mov
cltd
inc
clc
xorb
push
in
mov
popf
push
lods
adc
adc
jbe
dec
mov
and
sahf
into
fisubrs
mov
int3
test
dec
mov
mov
fbstp
sbb
dec
mov
out
adc
add
cwtl
cmp
sub
fs
pop
jmp
mov
fwait
scas
outsl
pusha
xchg
inc
and
fcmovb
fnstsw
sub
adc
daa
cmp
xchg
inc
out
insb
dec
lods
inc
dec
je
sbb
in
insl
pop
mov
repz
cmpsb
icebp
cwtl
sbb
icebp
lock
add
std
xchg
dec
pop
sub
rcr
adc
mov
out
stos
xchg
cmp
shr
mov
mov
jne
mov
xchg
cmp
idivl
dec
nop
ret
dec
mov
aas
xlat
movsb
aaa
mov
cmp
std
sub
into
dec
xor
repnz
fisttpl
sub
and
test
mov
mov
cmp
stc
das
stos
cmp
adc
cli
lcall
pop
mov
push
sub
aas
stos
scas
loop
dec
push
daa
push
cmpsb
lret
cmp
in
popa
jecxz
sbb
pop
cmp
xchg
jg
sbb
int
movb
rol
mov
sub
or
sarl
hlt
scas
movsl
scas
xor
push
cmp
inc
cltd
lds
or
inc
lret
pop
aam
mov
pop
ss
or
imulb
pop
lret
data16
iret
push
or
les
inc
jno
loopne,pt
aam
cmpl
mov
xor
mov
jle
in
dec
into
sbb
jge
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
push
xor
adc
adc
dec
sahf
sbb
add
shlb
dec
sahf
psadbw
add
repz
cmpsb
adc
dec
dec
popf
inc
out
cmpb
out
push
addb
inc
sahf
cmp
mov
dec
mov
push
add
iret
cmc
mov
imul
pusha
add
arpl
cmp
test
fdivl
leave
in
pusha
mov
jge
mov
lahf
sbb
cmp
adc
lret
lret
aam
xchg
or
cvtdq2ps
xchg
fmulp
xchg
inc
ja
dec
hlt
leave
lcall
rep
ret
and
dec
mov
cmpsl
xchg
mov
fwait
js
jecxz
fisubrs
adc
enter
in
lds
dec
jnp
cmp
sbb
mov
inc
iret
cmc
mov
or
add
cwtl
rorl
push
out
push
hlt
and
and
cmp
sar
inc
mov
push
ljmp
or
fisubl
inc
xchg
adc
es
aaa
int
mov
insb
pusha
and
sti
in
aam
ja
jno
daa
inc
add
cs
ficoms
xor
adc
jns
mov
mov
mov
jne
in
sbb
mov
movsl
adc
cmp
adc
adc
xchg
shll
repz
in
into
and
rorl
mov
popa
cmpsb
dec
lahf
sub
push
jo
sahf
add
add
stos
mov
aas
repz
je
jecxz
mov
andl
xchg
enter
add
sahf
pop
fistps
cli
xlat
pop
jne
push
loop
imul
cmp
hlt
jns
inc
cmp
in
fnstsw
daa
lods
mov
adcb
out
mov
aad
cwtl
and
cmp
addr16
cmp
xchg
leave
add
aad
pop
and
aad
into
or
pop
pushf
test
mov
lds
in
cmc
andl
jo
mov
and
inc
sbbb
xor
cmpsl
cld
andl
test
push
movsb
mov
and
lret
cmp
lret
dec
inc
roll
sbb
call
test
js
cmc
fidivrl
test
jnp
jbe
cwtl
add
mov
mov
stc
xor
inc
lods
jmp
mov
sbb
jnp
shrl
jmp
adc
mov
push
jae
xchg
test
es
xor
xchg
xchg
mov
outsl
inc
add
adc
leave
adc
aas
xor
cld
pop
adc
mov
aad
adc
ret
inc
shrl
xchg
sar
mov
add
repz
pop
cld
loopne
add
lret
jmp
cmpsl
mov
scas
mov
adc
jle
mov
fucomip
insb
sarl
cmp
fisubrs
lcall
aam
fsubs
in
nop
loopne
adc
xor
btc
jg
adc
and
addl
sbb
sub
andl
mov
les
lock
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
mov
int3
adc
adc
adc
ja
ljmp
int
mov
mov
jne
or
ficompl
cltd
push
cld
lahf
enter
out
int
xor
inc
push
je
cmpb
sahf
mov
loopne
repz
pop
into
lret
in
jecxz
push
int3
mov
mov
xchg
lock
xor
iret
sub
pop
cmc
or
mov
xlat
arpl
repz
xchg
push
jmp
fisubrl
shll
add
rorl
out
dec
mov
jge
ds
mov
jg
gs
mov
aad
pushf
adc
mov
push
mov
sbb
test
xchg
sub
roll
push
dec
movsl
push
out
out
adc
pop
stc
cmp
dec
pop
aad
pop
call
xchg
pop
add
fwait
outsl
or
aam
mov
shll
mov
pop
xchg
push
mov
mov
add
fbstp
popf
pop
shll
test
push
lret
push
and
xchg
cmp
mov
add
das
cmpl
mov
sub
sub
je
int3
outsb
push
mov
std
push
push
xchg
or
aas
push
in
xchg
pop
out
mov
and
pop
xor
out
cmp
xchg
mov
cmp
repnz
cwtl
ljmp
stos
pop
push
outsb
scas
mov
add
fdivs
stc
lahf
or
push
cld
xchg
cmpsb
xchg
and
push
ljmp
adc
jne
fiadds
test
out
sbb
stos
sbb
sub
mov
dec
enterw
pushf
xlat
pop
mov
jl
pop
jae
int3
addb
dec
sub
cmpsl
lea
mov
cltd
pushf
bnd
ja
lods
jnp
adc
and
adc
rcll
jnp
mov
in
divps
fimuls
push
movsl
fwait
jmp
test
dec
lods
add
mov
pop
out
in
sub
js
imul
push
sbb
mov
fs
cwtl
add
xchg
bound
out
cmp
outsl
mov
add
mov
incl
subb
xlat
inc
add
sub
add
mov
clc
sar
mov
cmpsb
jle
adc
push
inc
inc
add
mov
mov
xor
pop
pop
mov
fnstsw
mov
test
les
sbb
cmpsb
lahf
data16
and
int3
and
xor
jns
lea
sub
dec
jmp
fwait
jne
add
popa
xlat
fdivrs
sub
ja
out
mov
js
fstpt
divl
add
mov
cmpsb
inc
or
mov
adc
stos
mov
iret
sbb
xor
sub
and
ja
lods
sub
jle
test
loop
shlb
adc
mov
xchg
test
or
outsb
jbe
cmpsb
push
mov
hlt
cmpl
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
mov
fdivrs
adc
adc
cld
ljmp
cmc
cmp
data16
add
xor
mov
jg
les
stc
cmp
scas
popf
cmpsb
push
pop
adc
sbb
sub
mov
bswap
call
popf
scas
pop
or
pop
cmp
sub
sub
xrelease
ljmp
ds
xor
inc
out
in
adc
and
jae
mov
gs
mov
in
mov
and
push
in
sub
lods
jmp
xchg
push
xchg
mov
roll
mov
dec
mov
enter
add
ljmp
sbb
test
or
sbb
xchg
lods
xchg
pop
inc
movsb
mov
ret
cmc
repnz
push
dec
scas
push
in
adc
jo
adc
cwtl
addr16
movsl
and
sub
xor
lods
xor
inc
and
ds
xchg
sbb
xor
or
cwtl
orb
pop
add
ja
jnp
ds
cld
js
out
addr16
cltd
aam
dec
push
test
cmp
mov
lcall
arpl
push
mov
dec
mov
imul
or
lods
lock
pop
shr
jb
shll
add
mov
and
loope
pop
test
and
xchg
stos
out
adc
in
ss
shrl
sarl
mov
pop
dec
pop
fcomip
test
ja
int
fildl
jbe
scas
out
adc
mov
ljmp
mov
enter
or
sbb
in
testl
mov
cli
rol
rcll
inc
rcl
mov
adc
fists
or
mov
pusha
repnz
xor
add
lahf
jnp
les
pop
lahf
cs
mov
and
mov
xchg
mov
xor
test
lods
fldcw
mov
and
es
pushl
jge
pop
loopne
int3
shll
mov
pushf
jle
sub
push
mov
popf
inc
movsl
adc
push
fcoml
xchg
ljmp
or
dec
test
jge
jnp
xchg
push
add
adc
in
lea
or
push
int3
xchg
imul
addl
lret
pop
fiaddl
xor
xchg
add
or
cmp
mov
addr16
popf
mov
std
repz
das
pop
movsb
xchg
jge
add
sahf
dec
aas
mov
push
jo
add
es
repnz
test
or
enter
mov
lret
test
cmc
push
jbe
outsl
cli
dec
xor
int
push
in
pop
adc
add
pushf
cmp
fs
inc
jo
int
mov
roll
js
jb
jne
loop
aad
into
pop
add
add
movsb
fisttpl
jb
mov
inc
pusha
adc
iret
not
inc
rclb
cmp
cmp
add
sub
outsl
pop
mov
adc
les
pop
test
and
lea
push
insl
dec
add
jo
mov
push
dec
dec
movsb
sbb
cld
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
push
jl
hlt
ss
fdivrl
adc
nop
mov
ret
jmp
mov
ret
cmp
dec
lcall
fiaddl
lds
add
inc
xchg
imul
xchg
dec
sbb
jns
jmp
lahf
inc
cld
xor
cs
les
lcall
dec
dec
or
loopne
std
sbb
cmpsl
bound
push
jge
xchg
aaa
jbe
push
cmp
test
loope
shrb
push
mov
sbb
je
in
outsb
aam
inc
push
inc
movsb
mov
jmp
insl
inc
fsts
mov
jbe
cmp
inc
aad
pop
xor
add
cmp
sbb
ret
xchg
movsb
out
clc
and
inc
push
in
lds
andb
jo
push
fwait
xor
daa
jnp
pop
inc
test
mov
mov
sub
add
mov
pop
jle
mov
hlt
sub
daa
jb
pop
mov
fdivl
jb
imulb
push
cmpsb
dec
sub
movsl
sbbb
lahf
outsl
loop
and
call
inc
jne
fsubrs
adcb
sub
fisubrl
inc
shlb
push
in
mov
adc
ljmp
or
enter
fistpll
scas
es
sti
in
mov
stc
push
dec
mov
out
sub
shr
push
test
adc
dec
lcall
scas
xchg
idivb
pop
mov
in
and
pop
mov
mov
adc
xchg
sub
das
jne
mov
or
xor
bound
fs
es
sbb
movsb
push
into
or
mov
and
lret
push
loopne
enter
add
mov
sbb
roll
cmp
xor
pusha
loop
int
test
hlt
cmp
push
jns
pop
mov
mov
lcall
add
inc
ljmp
sub
mov
outsl
mov
push
out
mov
xchg
and
push
ret
fcomip
jmp
mov
dec
movsb
shlb
jmp
cmp
jle
clc
cltd
icebp
mov
popa
or
jecxz
add
fildll
int
push
or
cmp
movsb
xor
xchg
xchg
je
cli
and
sub
bound
cmp
mov
mov
outsb
adc
adcb
dec
or
cmpb
loopne
movsl
lock
shrb
jno
jb
insb
fs
test
jg
or
aam
out
iret
jb
pop
cld
inc
inc
mov
jp
arpl
add
cmp
rclb
std
adc
mov
mov
add
jb
pop
xlat
les
mov
add
gs
jbe,pt
and
sbb
out
fwait
pop
mov
or
sub
xor
or
dec
cmpl
faddp
jmp
jno
call
dec
rorb
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
js
mov
adc
rclb
out
sahf
dec
sahf
sbbb
xor
jbe
ljmp
sbb
aam
iret
inc
xor
inc
in
pusha
not
jp
scas
or
jnp
dec
mov
sub
sbb
outsb
inc
jb
jae
xlat
lods
in
jg
outsl
push
xchg
lea
jl
dec
repz
std
aas
test
int3
movsb
cmp
stos
inc
rorl
shll
jge
fiadds
pushf
adc
xor
mov
adc
pop
mov
pop
jne
inc
jns
adc
dec
fsubl
stos
scas
mov
lods
add
sub
sub
movl
ja
xor
push
adc
jge
cmp
cmp
nop
dec
dec
pusha
cmpsl
lea
cltd
sti
stos
idivl
sti
mov
std
inc
inc
mov
sbb
scas
frstor
mov
ljmp
mov
mov
loopne
dec
ret
push
or
push
dec
inc
leave
adc
lock
cmp
jg
mov
subb
inc
test
dec
andl
jno
xchg
cltd
adc
pop
aad
js
mov
iret
cmp
xchg
sbb
inc
jl
sbb
xchg
sub
fwait
mov
or
or
jl
cmp
test
cmpsl
scas
js
call
cmc
loopne
movsb
dec
mov
les
leave
mov
mov
out
ret
insb
add
mov
imul
rorl
ss
jl
fidivrl
mov
xor
stc
add
in
in
mov
shrl
sbb
fs
push
cltd
or
lahf
mov
jl
mov
push
es
repz
mov
movsb
arpl
adc
in
adcl
cld
sbb
xor
and
movsb
push
shr
iret
sbb
cmpl
cli
loopne
dec
fimuls
dec
imul
iret
push
adc
push
push
movsb
or
ljmp
sbb
sub
aaa
lods
xchg
fs
sti
aad
jb
lret
xchg
dec
push
pop
repnz
mov
mov
xor
dec
les
addr16
loop
cmc
or
ljmp
mov
sbb
mov
adcl
js
and
pop
or
mov
push
jbe
push
mov
scas
sub
jl
outsb
dec
insl
mov
adc
jo
lret
and
or
push
out
dec
jns
mov
xchg
jno
and
push
pop
jl
xchg
out
loop
and
sarl
mov
pop
ret
neg
mov
stos
insl
push
das
flds
mov
lds
xchg
ljmp
fs
leave
aad
mov
mov
jne
daa
or
push
push
ffreep
push
filds
test
push
sahf
adc
xchg
lcall
dec
adc
mov
push
enter
imul
dec
leave
cmc
cmp
ficoms
shr
dec
call
inc
sbbb
loop
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
fdivl
adc
adc
adc
pusha
lds
xchg
fwait
ds
pop
loop
adc
ficoml
lahf
fidivl
sbb
fs
ja
cmpsl
shrl
imul
ja
or
lds
or
sbb
ds
int
dec
out
shrl
and
pop
adc
sub
arpl
xchg
pop
adc
cmpsb
xchg
push
stc
or
ljmp
daa
popl
lret
xchg
aam
jge
out
push
sbb
pop
push
lea
inc
inc
in
pop
mov
mov
aam
adc
fldl
or
pop
sti
fcmovnb
add
mov
cwtl
jns
pop
rolb
mov
ljmp
out
aad
mov
xlat
out
aam
orb
mov
mov
inc
insl
push
rcrb
xor
xchg
bound
js
inc
jne
xchg
or
jbe
adc
test
bound
insl
hlt
jge
out
inc
dec
inc
out
pusha
clc
lods
lret
dec
mov
loop
pop
orl
cmp
call
or
xor
jl
pop
stos
mov
loopne
jl
cwtl
loop
repz
xor
lret
pop
jp
mov
cmp
out
lret
scas
mov
mov
sub
in
sbb
push
in
lret
or
adc
inc
push
mov
push
or
leave
mov
push
sub
xchg
xor
hlt
lcall
pushf
xchg
sbbl
cli
stos
add
xchg
pop
sub
jle
push
dec
mov
lea
out
les
push
push
sub
insb
xchg
xchg
and
and
imul
cmp
pop
mov
add
push
je
xchg
add
lahf
sbb
notb
adc
aad
fwait
cwtl
cltd
add
lahf
aam
push
js
add
add
mov
jne
pop
leave
xchg
in
dec
pusha
xchg
pop
inc
dec
cmp
add
les
clc
inc
sbb
cmpb
xor
enter
push
jae
sub
lret
push
mov
jnp
inc
fiadds
in
push
lahf
clc
inc
loopne
add
aaa
sbb
xchg
xchg
and
pusha
push
lea
jne
shlb
jnp
sahf
xchg
push
push
pop
mov
hlt
jecxz
movsb
out
xlat
icebp
iret
dec
push
je
dec
jp
sbb
xor
pop
mov
cwtl
arpl
sub
xor
sbb
fsubl
mov
adc
fcompl
bound
movsl
jae
insl
adc
dec
mov
shrl
push
test
setnp
pop
lret
xchg
cmpb
iret
pop
pop
hlt
and
inc
xchg
out
mov
loope
mov
shll
sub
dec
dec
dec
hlt
fwait
inc
push
and
call
cltd
or
or
mov
pop
xor
jp
adcb
fiaddl
pop
xchg
fcmovbe
mov
and
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
sub
std
jle
scas
adc
adc
adc
xchg
jmp
push
int
mov
cmp
in
jnp
into
mov
ficoml
cmc
cld
test
jbe
lret
rorl
jno
enter
ret
fmull
or
mov
test
adcl
es
insb
inc
and
sub
negl
pop
dec
test
enter
movsb
lcall
imull
imul
mov
ds
lods
fwait
addr16
or
nop
jl
pop
call
insb
test
jno
adc
cmp
dec
or
mov
les
push
xchg
pop
shr
loop
mov
dec
shll
jno
lea
jg
mov
dec
mov
les
jp
decb
jbe
xchg
scas
test
ja
pop
test
jl
pushf
cmpsb
xor
leave
sbb
out
pop
subb
adc
mov
push
jle
call
std
sbb
lds
jl
dec
jae
testl
movsl
loop
sub
pextrw
mov
xchg
lock
jae
orb
cltd
fldcw
or
cli
ss
pusha
adc
fidivs
and
dec
stos
nop
dec
cmp
cmpsb
icebp
jp
pop
pop
cmp
imul
out
in
xchg
aad
lock
add
pop
cmpb
jge
cld
aaa
clc
jns
adc
rcll
div
mov
pushf
insb
dec
mov
mov
mov
inc
hlt
xchg
cmp
pop
xchg
test
cmpsl
cmp
cmp
sti
imul
mov
aas
and
sub
int3
dec
mov
sub
xor
xchg
cmp
jp
sub
clc
aad
push
dec
xlat
mov
ds
or
jl
dec
sar
or
mov
inc
imul
mov
sub
pop
adc
call
lock
mov
xor
jmp
mov
pop
push
push
insl
popf
inc
and
aas
add
push
add
mov
movl
mov
dec
fidivl
add
push
jecxz
jne
xor
mov
lock
jo
aam
cmp
fldt
jp
in
add
dec
out
mov
mov
jmp
adc
xor
xor
adc
loop
icebp
mov
mov
std
addr16
add
je
inc
mov
clc
jb
dec
cmp
mov
push
out
push
inc
sarb
data16
push
insl
gs
mull
xchg
mov
xor
dec
ret
test
int
out
daa
and
repz
pop
and
xor
bound
scas
fs
inc
dec
pop
cmc
jmp
popl
mov
mov
push
xor
fstpt
repz
adc
pop
enter
pop
flds
mov
mov
icebp
inc
inc
mov
cli
popf
aam
push
std
pop
sbb
jne
lock
sbb
das
arpl
outsb
inc
pop
in
mov
jecxz
lret
pop
leave
loope
shlb
adc
jnp
cmp
loop
sub
js
out
push
in
leave
xor
pop
loop
inc
mov
lahf
inc
scas
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
cltd
push
push
movsb
adc
adc
adc
push
sub
push
out
jb
rcrb
cwtl
sub
out
mov
ret
data16
outsb
dec
repnz
push
add
jl
pop
cld
lods
pop
sbb
aad
jmp
nop
sbb
mov
sbb
sub
pop
clc
mov
lea
mov
add
lahf
inc
add
sbb
push
cli
cmpsb
and
cwtl
outsb
adc
not
inc
cld
xorb
and
push
shlb
shll
mov
cs
int
aaa
ret
xor
or
mov
pop
mov
pop
adc
in
xchg
pop
mov
in
xchg
pop
and
aas
in
out
int3
mov
cltd
fcoml
cmp
sbb
nop
das
movl
sub
ret
or
iret
mov
aas
adcl
cmp
rcr
lret
in
sbb
add
jb
mov
out
xchg
pushf
aam
mov
int3
mov
outsl
mov
push
sub
mov
jnp
xor
push
xchg
pop
mov
cmp
mov
dec
lods
jmp
mov
test
call
jge
lds
jge
lock
pusha
insl
enter
cmp
mov
lods
xchg
hlt
pop
mov
mov
and
jmp
negb
jns
loopne
andl
xchg
mov
adc
cmp
in
mov
mov
sti
std
sub
lods
xor
cmp
add
and
scas
fmuls
fisubl
int3
mov
sub
pop
xchg
mov
add
xchg
and
or
ss
test
dec
cld
cli
push
cwtl
pop
aaa
xchg
orb
or
aad
shrl
in
inc
jne
mov
out
mov
lret
push
lock
sub
sub
loope
mov
cmp
into
xchg
shr
push
test
mov
pusha
inc
cmpsl
mov
jle
repnz
pop
bound
add
sbb
pushl
leave
cmp
mov
daa
inc
inc
xchg
and
mov
cli
dec
nop
sub
sub
test
cmp
mov
data16
sahf
sub
mov
push
and
jbe
stos
insb
mov
ljmp
ljmp
cmp
or
xor
repnz
dec
pop
lahf
jp
in
pop
pop
sub
movsl
int
add
or
xchg
push
sub
sbb
in
jg
scas
jecxz
lret
dec
sub
int3
rol
movzbl
mov
rorb
in
cmp
popa
ret
cwtl
push
push
outsl
push
scas
mov
and
lret
jne
mov
fsubrs
loopne
loop
xor
dec
out
fldenv
jg
cmpsb
repnz
mov
sbb
inc
xor
ret
shr
or
pop
or
arpl
ds
jg
loop
push
setl
jo
add
ja
insl
repz
divl
mov
mov
leave
push
out
mov
sub
cli
cmp
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
pop
mov
adc
adc
adc
inc
call
inc
icebp
fwait
xor
cltd
mov
out
or
mov
cltd
mov
push
or
lret
mov
sub
sbb
mov
or
cli
sahf
xor
adc
xchg
divb
dec
and
shrl
lea
pop
xchg
jbe
adc
mov
cmp
and
mov
ror
push
adc
or
fsubrs
jle
pushf
je
mov
push
jl
insl
pusha
adc
sbb
sbb
or
loop
fwait
or
loope
fdivrs
push
int
sub
arpl
lret
int3
xchg
scas
inc
mov
fstpl
pop
clc
lock
sarl
jmp
out
and
ret
sbb
xlat
pop
xor
psrlq
pop
dec
lock
addr16
aam
scas
ja
push
and
icebp
inc
adc
cltd
pop
sub
leave
call
movsb
or
xor
daa
fwait
insb
xchg
ret
cmp
xor
pop
push
sub
subb
loope
bound
adc
cmp
xchg
psadbw
popa
sahf
test
jns
inc
jecxz
and
sbb
jg
pop
push
mov
lcall
test
in
add
aad
jne
in
push
jl
in
or
enter
mov
cmpsl
arpl
aam
push
and
addr16
pop
lods
out
scas
ret
adc
xchg
test
xchg
mov
ss
xlat
push
fdivs
cwtl
out
xorb
inc
test
mov
mov
or
mov
inc
adc
xor
nop
xchg
enter
dec
decb
xor
jecxz
sbb
notl
mov
outsb
mov
or
push
and
dec
mov
jle
divl
dec
push
test
aad
and
xor
flds
mov
and
xor
stos
and
sbb
cmp
scas
or
insl
lea
mov
sub
dec
xlat
test
mov
cmp
addr16
pusha
sti
aad
jns
out
inc
aas
xor
inc
rcr
xchg
dec
or
xor
mov
lods
rol
add
loop
out
dec
sub
xchg
mov
mov
sbb
sbb
sbb
add
pop
fildll
jmp
adc
aaa
add
push
adc
sub
xchg
sbb
rolb
test
xchg
cld
pop
les
sbb
lock
jbe
aad
pop
pop
push
pop
cmp
leave
pop
pop
cmp
sub
pop
lret
mul
fimuls
mov
push
popa
add
pop
daa
loopne
insl
ror
jo
push
mov
scas
stos
jns
jmp
sti
push
imul
sub
fwait
cltd
test
sbb
sahf
clc
dec
lea
cmp
mov
inc
in
push
sub
cs
test
add
inc
mov
loop
and
ja
mov
dec
imul
icebp
ret
shl
xor
or
add
mov
jmp
xor
and
data16
adc
adc
pop
xor
xor
in
sbb
fisubs
daa
mov
loop
enter
cmpsl
inc
and
popa
xor
iret
sbb
or
sbb
cld
fucomi
into
int3
jo
icebp
fnstcw
push
add
gs
daa
push
mov
mov
cmp
andl
cltd
jmp
xchg
mov
or
cwtl
roll
test
mov
cli
and
push
scas
dec
imul
push
aas
xchg
adc
scas
sbb
loop
maskmovq
cltd
jge
lcall
fcom
fmull
xchg
in
inc
cmp
dec
mov
jge
rcrl
mull
mov
insl
xlat
push
loope
push
cli
xor
hlt
mov
jg
fistpl
fcmovbe
shrl
jo
adc
cwtl
cld
mov
xchg
in
stos
xchg
fnstcw
test
add
mov
cmp
mov
int
outsl
jne
out
stos
iret
cs
lret
xor
add
sahf
hlt
sub
mov
mov
adc
in
or
out
mov
leave
aaa
jo
mov
in
or
or
mov
mov
ret
mov
aas
xchg
lock
ja
sub
das
mov
pop
adc
sarl
insl
fcmovne
xor
xchg
adc
or
mov
pcmpgtw
addb
lcall
sbb
mov
call
xor
out
dec
push
insl
mov
xchg
out
push
push
mov
inc
push
fs
jns
in
test
daa
popf
icebp
cmc
cmp
mov
fdivr
xchg
mov
xchg
aad
lret
jb
in
sbb
insl
fsub
mull
insb
inc
add
clc
cmp
ss
lahf
in
add
cmpl
das
or
pop
loopne
mov
repnz
shrl
les
add
daa
sbb
sar
lods
xor
int3
xchg
sub
inc
popf
inc
dec
jmp
lahf
mov
add
sarb
mov
push
jecxz
sub
xchg
push
int
jae
in
mov
fucom
adc
popa
das
mov
aaa
cmp
mov
xchg
js
xchg
dec
add
fisubl
sbbl
push
jae
jnp
push
pop
mov
adc
adcl
cmp
test
stos
out
ljmp
js
nop
sbb
jg
ds
arpl
mov
mov
xchg
ss
aas
ja
stos
out
cmp
inc
xor
js
nopl
and
xchg
test
jbe
or
mov
push
fistps
stos
rcl
lahf
inc
lahf
aas
push
xor
add
jno
fidivrs
popf
add
fdivp
jo
cli
out
loop
mov
fldcw
scas
inc
pushf
nop
int
repnz
test
rcl
imul
cmc
mov
mov
enter
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
sub
jmp
sub
adc
xchg
fld
jmp
jns
mov
lds
xor
xchg
dec
adc
mov
push
push
fldcw
and
sub
adc
aad
adc
loopne
inc
push
loope
data16
jp
jnp
cmpsb
jo
mov
mov
stos
js
outsb
arpl
insl
fmulp
mov
fwait
pop
cs
ret
sub
pop
adc
fwait
test
sahf
in
pop
aam
lret
pop
add
loope
out
scas
and
test
imul
repz
add
and
in
cmp
jo
fisttpll
adc
shl
inc
dec
aad
fistpl
rcrb
adc
scas
xchg
pusha
inc
jmp
cmp
push
inc
sub
out
daa
adc
and
adc
cmp
pop
das
mov
fstps
xor
ret
nop
push
mov
push
xor
and
js
mov
cmc
iret
inc
std
lods
sbb
sbb
cwtl
push
testb
inc
aad
test
mov
stos
dec
xchg
mov
sub
out
ja
int
add
adc
inc
sahf
cli
test
sbb
push
enter
aam
sbb
pop
sub
inc
xchg
sub
sbb
jl
repz
or
or
xchg
adc
int
arpl
stc
out
xor
mov
xor
popf
mov
sub
imul
sbb
lret
mov
mov
sub
sti
fldenv
cmpsl
push
push
es
pusha
icebp
out
add
fbstp
inc
mov
popa
pop
outsb
sbb
sbb
notb
xchg
mov
cmp
sarb
fisubs
cmp
mov
mov
mov
mov
push
insl
rcl
fisttps
test
mov
dec
adc
cwtl
enter
call
jle
clc
popa
jbe
push
mov
mov
mov
maxps
arpl
insl
dec
les
sbb
gs
rcrl
inc
sub
in
inc
into
data16
and
and
cs
mov
hlt
sub
xchg
test
jne
jb
aaa
jns
sbbb
out
fadd
loopne
xor
adc
push
pop
pop
leave
nop
fcom
rcr
scas
daa
jp
jp
or
gs
scas
aam
cmp
es
leave
cmp
mov
mov
std
aaa
pop
stc
mov
hlt
fldt
push
dec
cmpsb
cmp
sub
int
sbb
repnz
or
adc
stos
daa
stc
sub
sbb
into
ds
and
cmp
jne
loopne
xor
vandps
shr
mov
cld
pop
inc
nop
pop
cmpb
movsl
inc
mov
and
push
push
mov
jne
popa
lds
sti
jae
pushf
push
in
jmp
mov
adc
scas
add
jg
in
sbb
and
imul
orb
pop
ss
pop
sub
scas
sbb
push
push
pop
cmp
lret
hlt
in
xlat
imul
xlat
sar
inc
xchg
push
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
aad
adc
mov
adc
adc
loop
sub
mov
push
dec
push
cmp
ja
mov
mov
lods
mov
es
mov
push
adc
adc
dec
dec
cmpsl
negl
add
jecxz
es
xchg
clc
mov
xchg
enter
or
bound
rcrb
cwtl
sbb
fs
js
lcall
insb
ror
insl
int3
lret
sbb
inc
insb
dec
pushf
in
out
jae
mov
push
sub
cmp
dec
xor
addr16
sub
pop
test
lock
movsl
sub
insl
xorl
or
push
jnp
das
and
mov
sarl
and
cmpsb
andb
cmp
mov
adc
mov
sub
popf
push
and
test
mov
jecxz
sub
cmpsl
mov
sarl
mov
xchg
rclb
inc
sub
pop
mov
jne
jns
stos
lahf
test
in
jmp
andl
inc
movsb
addr16
inc
push
js
popa
cmc
xor
sbb
lea
mov
xor
jl
mov
nop
lock
dec
ss
outsb
or
cwtl
sbb
dec
or
jp
or
inc
popf
lahf
repz
sub
mov
add
and
mov
test
loopne
jl
and
popa
fldenv
jo
dec
jb
lcall
mov
adc
cld
xor
dec
pop
mov
in
mov
aaa
mov
sbb
dec
inc
sub
fwait
prefetcht0
pop
mulb
insb
ret
cld
rcrb
sub
int
xor
cmpsb
add
in
or
aaa
xlat
iret
xchg
std
xlat
jmp
rcrl
add
insl
nop
push
and
lret
in
mull
ret
nop
sub
push
mov
out
adc
push
adc
lock
in
mov
sub
mull
cmp
mov
cli
or
xchg
repnz
sbb
cmp
fs
sub
adc
divl
xchg
jmp
sub
jmp
cmc
mov
subb
lock
pop
rcll
sub
mov
stos
mov
in
push
add
sahf
add
out
mov
bound
mov
push
fisubl
push
clc
movsb
push
jo
daa
xchg
test
in
and
js
lods
pop
sub
jle
jle
gs
fdivrs
jbe
fidivrs
lods
ja
sub
mov
mov
rcrb
ret
fildll
lret
mov
ret
and
cmpsl
lcall
shl
or
jnp
cmc
pop
sub
loopne
xlat
xor
cmp
negb
daa
xor
pop
and
aad
pop
cmp
das
inc
jne
nop
or
mov
push
roll
sbb
jg
sahf
mov
cmpsb
push
ss
inc
int3
repnz
hlt
aaa
int
data16
icebp
push
lods
jg
add
jmp
mov
mov
xor
cs
mov
in
jg
xlat
adc
loopne
ss
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
int3
xor
inc
dec
pop
data16
loope
cmc
lock
popf
sub
loope
xchg
test
pop
inc
ljmp
jg
bound
iret
jnp
les
pop
mov
dec
xor
repnz
outsb
fimuls
push
xor
cltd
mov
xor
andl
out
sub
mov
mov
ret
pushf
xor
mov
pop
jno
sub
test
cmp
not
int
xchg
sbbl
jecxz
push
dec
sbb
mov
ror
iret
in
pop
dec
sbb
sbb
insb
mov
lods
pop
call
dec
fwait
in
jle
mov
popf
xor
inc
inc
lret
sub
lods
lahf
nop
inc
sahf
andl
loop
jle
enter
inc
mov
xchg
cs
mov
xlat
out
out
push
dec
pop
in
mov
jns
jle
and
dec
or
dec
fiadds
fists
mov
inc
push
xor
sahf
ret
sbb
aad
xor
pop
xor
sbb
push
clc
xor
jns
jmp
adc
mov
mov
dec
arpl
mov
xchg
sub
inc
les
mov
stc
mov
pop
dec
jae
push
imul
mov
test
ficoml
push
clc
test
decb
cmpb
push
mov
mov
sarl
scas
mov
push
in
sbb
stos
aas
aaa
adc
xchg
mov
pop
shlb
fisttps
es
test
mov
mov
add
add
lret
mov
jge
and
dec
or
rcl
and
es
xor
ja
xor
mov
ret
xchg
ret
add
shrb
dec
dec
std
sbb
adc
push
jns
xchg
lahf
clc
push
jp
mov
outsl
or
imul
mov
imul
pop
in
mov
mov
and
movsl
inc
mov
xchg
rorl
leave
les
outsl
dec
jg
push
lcall
push
paddw
fstpl
mov
enter
scas
je
or
jno
push
cmp
mov
aad
or
ret
es
dec
inc
movsl
jmp
xchg
in
xor
jp
test
aad
jns
xchg
dec
mov
test
jp
cmc
int3
and
mov
incl
test
mov
lods
jbe
cltd
movsl
push
mov
scas
cmpsl
orb
pop
dec
cmpsl
or
and
inc
cwtl
fnstsw
fnsave
or
push
mov
add
pop
sbb
jl
pop
outsb
adc
pop
pop
push
sbb
jle
lds
int3
jb,pt
or
int
cmpl
pop
jb
and
out
movsl
leave
lret
mov
ljmp
mov
inc
cmc
add
dec
andb
sub
xor
add
xor
loope
cmpsb
outsb
sub
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
push
jl
adc
adc
lcall
mov
iret
jecxz
inc
adc
add
sbb
icebp
test
jno
jecxz
add
xlat
jp
jnp
std
pop
jp
xchg
jg
push
or
int
or
mov
mov
repz
jns
loop
fnstenv
subb
lods
leave
pop
inc
pop
mov
jge
lea
mov
pop
pusha
and
ljmp
pop
cli
fdivrs
insl
push
roll
repz
xchg
push
xchg
out
filds
fcmove
xor
sub
ds
psubw
mov
js
sub
mov
psubusb
pusha
jno
mov
out
lret
push
mov
or
pop
mov
mov
adc
imul
scas
outsb
sahf
stos
loope
push
imul
mov
mov
mov
sarl
jo
ucomiss
adc
mov
insb
jno
out
mov
je
mov
fistpl
push
out
fcomip
hlt
and
cli
mov
inc
push
fidivrs
add
popa
xchg
les
rep
jae
in
fst
mov
je
mov
mov
cwtl
in
negb
pop
push
mov
xchg
jge
inc
adc
adc
add
mov
pop
sbbb
sti
add
mov
jbe
mov
icebp
aaa
mov
addr16
fsub
mov
cmc
call
test
push
enter
test
dec
and
adc
dec
icebp
shlb
xor
in
decl
rcrb
in
nop
jg
insl
sbb
push
inc
xor
xchg
sti
aad
test
sbb
lahf
ret
arpl
dec
repnz
repnz
xchg
shl
jmp
std
jmp
mov
daa
test
lds
lds
mul
pop
mov
bound
xchg
fcomip
sahf
mov
addr16
jns
in
popa
std
inc
jecxz
fs
inc
sub
in
nop
lahf
jb
test
fs
and
call
out
das
pop
xchg
test
add
mov
insl
pop
push
jmp
icebp
orb
dec
mov
aad
aam
bnd
or
add
sbb
inc
mov
cmp
add
pop
in
cmp
rol
xor
ret
in
ja
mov
sbb
xor
lods
fnsave
outsb
das
xor
jecxz
xor
pop
xor
lret
shll
sti
or
push
mov
dec
mov
pop
cmp
cmpsl
cwtl
bound
cmc
sbb
icebp
sbb
ret
dec
adc
and
in
add
inc
std
addr16
into
clc
jae
divb
sub
fisubrs
popf
dec
mov
dec
data16
cmp
loope
pop
in
gs
pop
mov
push
inc
pop
mov
stc
push
hlt
in
sbb
lahf
repnz
cmpsb
sub
imul
pop
push
cmp
xchg
pop
add
movsb
cmc
rcl
decb
pusha
loop
push
ljmp
pop
adc
and
loope
jl
jnp
orl
loop
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
mov
je
adc
adc
xor
loopne
ss
iret
and
sub
dec
ret
add
loopne
inc
add
adc
or
mov
imul
rolb
aaa
test
push
shl
push
aad
inc
adc
adc
add
or
aam
jg
dec
lret
pop
scas
rorl
cld
insl
push
jecxz
dec
test
cs
pushf
mov
xor
sub
fsubrp
fstl
dec
aas
sub
fisttps
vmovq
xchg
jnp
fwait
sub
xor
and
loopne
sahf
cmp
mov
cmc
mov
jnp
xchg
sub
test
hlt
lods
lret
es
sahf
add
mov
jmp
fidivs
adc
std
adc
push
mov
orl
out
adc
fwait
arpl
xchg
and
adc
mov
js
js
imulb
jl
mov
and
shl
pop
daa
push
aad
xchg
push
addr16
pop
mov
mov
cltd
jo
sbb
xchg
mov
push
push
sets
cli
sub
sahf
xchg
cmp
pop
or
imul
xchg
addr16
ret
inc
fsubs
mulb
roll
adc
cmp
das
stc
mov
xchg
mov
cwtl
mov
out
sbb
ds
ds
mov
orb
lods
or
jmp
fbstp
sahf
or
testl
nop
adc
mov
mov
push
xor
sub
mov
jg
or
shr
negb
push
ret
adc
jmp
pushf
push
sbb
push
mov
push
neg
jp
jecxz
adc
or
xorl
sbb
adc
mov
jne
and
shrl
mov
daa
mov
and
xchg
mov
sub
aas
mov
mov
mov
faddp
mov
gs
adc
pop
out
and
lods
inc
pushf
pop
sti
xchg
aas
push
sar
enter
inc
lret
mov
ret
stos
dec
add
xor
mov
pop
jl
mov
cmpsb
fdivl
cmpsb
push
fadds
imul
xor
sbbb
inc
inc
dec
mov
out
fistpl
stos
insb
jo
inc
xor
in
push
adc
sbb
fcom
xor
or
push
and
lods
or
push
ja
sub
rorl
in
fidivrs
jl
loop
inc
cmp
imul
loopne
stc
mov
in
pusha
mov
adc
jnp
out
test
sub
sub
xchg
scas
and
call
cmp
inc
stc
or
pop
pop
pushf
cmp
stos
dec
xchg
lret
hlt
mov
sahf
dec
or
xchg
inc
mov
fidivrs
addr16
ret
push
mov
add
arpl
ficompl
jmp
xchg
loope
and
jecxz
xchg
and
aas
dec
shlb
ret
adc
nop
fisubrl
jne
push
jecxz
sub
jnp
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
dec
inc
jo
mov
adc
mov
mov
loopne
aaa
xchg
js
cmp
ljmp
imull
sbb
cmc
jns
pop
aaa
cmp
imull
dec
inc
insl
pop
xorb
dec
imul
mov
adc
stc
sbb
cmp
test
mov
adc
sbb
sarl
adc
xor
inc
xchg
lcall
or
les
dec
adc
xor
xor
push
enter
jl
xchg
dec
xor
ljmp
in
call
sub
pushf
mov
push
mov
mov
jnp
cli
stos
lock
pop
aas
lds
in
pusha
fcoms
pop
inc
in
xchg
sub
data16
xlat
cmpb
cmp
add
add
das
int
clc
dec
pavgw
mov
pop
aad
sbb
adc
push
jecxz
dec
sbb
mov
xlat
xchg
les
les
jp
fcmovb
out
mov
dec
das
mov
stc
mov
sub
xor
cmp
pop
imul
mov
dec
std
insl
mov
jo
sarb
push
sbb
fwait
insb
insl
mov
addb
mov
sarl
dec
mov
inc
and
cmp
addb
pop
lcall
inc
push
pushf
shrb
dec
pushf
jle
xchg
in
push
cli
lret
pop
sbb
icebp
test
pop
or
dec
movl
inc
jns
cmpsb
and
test
and
rcr
inc
mov
stos
rclb
out
inc
and
xchg
and
je
xchg
in
mov
pop
pminsw
and
call
testb
lds
xor
test
dec
je
push
jp
xor
cmp
fcmovbe
inc
in
test
addr16
adc
push
sub
aam
loope
inc
icebp
jmp
mov
popf
mov
mov
ret
cs
mov
int
dec
mov
pop
cwtl
or
test
in
or
jae
push
out
dec
pushf
repz
push
mov
mov
jnp
mov
addb
daa
js
cmpxchg
stos
pop
push
mov
pop
xchg
imul
repnz
lea
mov
rcrl
fisttpll
rcll
jo
pop
aaa
dec
sub
inc
jl
adc
test
mov
dec
inc
cs
mov
aad
lahf
mov
ljmp
shlb
push
stos
dec
das
ret
loopne
cmpb
in
pop
cltd
jp
jle
das
pop
adc
xchg
mov
adc
inc
adc
xor
cmpsl
rorl
and
mov
cmpsl
pop
call
inc
sti
rcll
and
ds
jb
daa
fildll
loop
lock
add
clc
jecxz
fnstsw
cmp
fldenv
jnp
je
js
fstpt
aam
sub
lods
or
ret
cltd
enter
stos
lods
cmp
mov
outsl
xor
ds
popf
cmpsb
gs
clc
in
lahf
and
addb
and
sub
dec
cwtl
inc
cmp
mov
push
jns
xchg
aad
loop
bound
mov
repnz
mov
jg
cmpb
cmpb
dec
clc
insl
mov
fcomi
cmpsl
sub
sub
sti
jg
mov
roll
or
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
ljmp
fwait
adc
int
gs
in
movsb
loopne
cli
mov
orb
xchg
fcom
es
out
or
inc
push
loope
mov
arpl
adc
lods
lcall
mov
test
mov
stos
xlat
jmp
pop
and
mov
arpl
and
nop
jg
insl
dec
call
std
int3
lods
dec
dec
jge
out
hlt
jle
cwtl
or
push
pop
rcr
pusha
lcall
dec
sti
subb
inc
popf
pop
les
adc
inc
cmp
data16
out
mov
jno
push
xor
or
jns
pop
mov
jmp
les
add
sahf
fst
test
jle
fadds
mov
xchg
pop
add
inc
rol
aas
mov
int
in
les
pop
movntps
fdivl
mov
sbb
lea
inc
xchg
pusha
mov
in
loop
sbb
xorb
sub
sub
stos
enter
test
lods
adc
imul
push
sbb
add
jne
bound
aad
mov
sub
push
mov
pushf
ret
ret
aad
push
scas
pop
dec
inc
mov
push
pop
xor
push
push
jl
adc
push
xor
aas
add
xchg
xlat
mov
push
fbstp
scas
ljmp
dec
inc
push
lcall
fidivrl
clc
push
xor
jle
loopne
cmp
xor
inc
and
lock
push
cmp
cld
cs
in
pop
test
ljmp
mov
inc
pop
mov
gs
jo
aam
dec
cld
sbb
ja
lea
std
push
rcrb
fcomip
push
cmpsb
loope
ss
or
mov
dec
scas
jg
cmc
mov
push
in
sti
fwait
outsl
inc
cmpsl
mov
xchg
int
jl
test
jmp
rcr
cltd
lret
test
test
inc
fcoml
xor
xor
mov
int
adc
fistl
jg
cmp
out
jecxz
jmp
pop
inc
mov
ret
add
dec
and
repz
jae
or
icebp
negb
fmuls
cmpsb
outsl
scas
sub
cmc
cmpsb
loope
or
mov
pop
inc
gs
adc
lret
sub
ret
xchg
fisubrl
jbe
pop
lret
std
and
adc
xor
adc
daa
xor
mov
ficomps
scas
das
mov
dec
dec
or
pop
xor
insl
sahf
mov
or
dec
iret
jns
mov
imul
and
pop
js
xor
mov
cmp
jae
lahf
insb
mov
xchg
xchg
mov
clc
pushf
fldenv
or
jb
mov
dec
push
jge
pop
dec
fstl
fwait
outsl
test
repz
adcb
popf
lods
or
and
sub
pop
push
aaa
cmp
inc
sub
mov
pop
movsl
push
push
mov
aas
aaa
cwtl
jg
mov
in
cmp
pop
pop
sub
or
xchg
das
rcr
outsb
jmp
sbb
cmp
cmp
arpl
stc
push
mov
add
repz
stos
or
cmp
notb
mov
jge
rcll
mov
adc
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
xchg
and
bound
adc
fldln2
pop
sbb
test
scas
in
psrld
inc
in
jl
movsl
aaa
jmp
jge
clc
fwait
insl
mov
xchg
mov
inc
push
int
arpl
lahf
mov
imul
scas
push
imul
xor
push
jne
repz
icebp
cmc
sbb
xor
mov
push
dec
and
fs
stos
inc
in
test
sub
cmp
jb
inc
ja
mov
je
adc
cmc
cmp
fxch
std
cs
jl
mov
aas
sub
inc
mov
dec
decb
dec
test
cs
fwait
cmpsb
negl
hlt
sbb
aam
popa
jp
mov
call
adcl
push
sbb
shl
rclb
pop
clc
adc
addr16
js
mov
mov
shr
mov
das
mov
lret
ret
mov
jnp
fidivl
xchg
sub
popa
xchg
je
movsl
mov
sti
sub
addr16
jg
mov
popa
adc
mov
data16
cmpsl
jl
jge
addr16
je
pop
repnz
test
mov
and
cmp
add
loope
jnp
test
xchg
push
sbb
adc
lcall
jge
or
sbb
mov
dec
mov
and
pop
mov
add
test
dec
stc
mov
movsb
mov
sti
mov
mov
lods
sub
push
pop
insl
cli
insb
scas
loopne
shr
xchg
dec
jne
and
les
bound
out
cmp
int
std
sub
push
adc
sub
insl
sbb
scas
mov
jmp
mov
mov
in
add
lods
dec
iret
jno
inc
xchg
jge
jb
insb
cmp
stos
std
subl
mov
cmp
mov
imul
sbb
dec
xor
cli
out
out
loopne
leave
inc
stos
mov
or
push
cld
push
aas
stos
loop,pt
cmp
xchg
add
add
push
add
lods
jmp
jae
mov
mov
or
in
xchg
ret
out
clc
daa
and
ljmp
es
jno
lret
out
adc
rolb
mov
out
push
push
push
cmp
ror
adcb
add
pop
out
sar
outsb
fdivs
xor
pusha
jecxz
arpl
rcrb
addr16
ret
xchg
or
gs
pop
arpl
adc
dec
mov
arpl
mov
sub
dec
cmp
jbe
sti
movsb
xchg
and
mov
hlt
mov
inc
dec
into
push
inc
jb
dec
or
sti
sub
imul
insb
sub
lods
fnstsw
popa
sbb
pop
sti
call
out
loope
cmp
int3
push
mov
mov
shrl
cmp
in
mov
cmp
jno
in
rcrl
mov
lods
je
mov
repnz
popa
inc
je
push
cmc
push
ffree
pusha
nop
stos
ds
outsl
sub
addl
neg
push
dec
add
mov
cmc
rclb
mov
push
adc
xchg
mov
cs
push
mov
cmpb
out
mov
popa
xchg
xor
divl
in
jne
fcompl
cli
divl
cmpsl
jne
and
repnz
jbe
iret
or
mov
dec
scas
js
adc
gs
cmp
clc
shl
xchg
popa
mov
pop
xchg
fisubs
fadd
inc
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
js
pop
adc
mov
xor
push
negl
clc
and
leave
sub
imul
xchg
movsb
mov
xor
sub
cmp
scas
sarl
adc
lea
and
stos
push
outsb
jae
bound
jns
inc
cmpsl
adc
dec
jl
and
dec
stc
out
adc
movsl
xorl
add
sahf
movsb
and
xchg
push
scas
jb
lods
mov
mov
dec
fbld
mov
rol
mov
mov
adc
jo
in
insl
out
mov
gs
mov
dec
jno
insb
xchg
xchg
cmp
cmp
popf
cmp
stos
cmpsb
or
out
imul
loop
xchg
jl
or
cmp
and
jp
xchg
hlt
pop
push
or
mov
adc
pop
enter
cmpsl
inc
out
xchg
cltd
call
pop
das
cwtl
xor
outsl
andb
inc
jle
or
mov
movsl
cwtl
or
test
xchg
hlt
pop
popa
mov
xchg
je
push
popa
sbb
ss
jae
cmpsb
mov
movsb
leave
js
inc
cwtl
add
pusha
test
push
xorl
movsb
jbe
aad
jb
mov
movsb
xchg
cwtl
pop
mov
cmp
and
popf
insb
push
stos
inc
jle
jnp
dec
add
bound
cltd
mov
outsl
sbb
adc
shlb
cmpsl
pop
push
sbb
lods
mov
mov
hlt
shl
repnz
aam
cmpsl
clc
adc
test
lea
cmpb
dec
xlat
mov
es
outsb
scas
jno
xchg
xchg
xor
stos
sub
lret
and
add
cmp
test
mov
mov
push
shll
xor
nop
add
jg
dec
jle
jecxz
pop
or
xchg
in
mov
push
add
fcmovbe
scas
imul
xlat
pop
xorl
dec
adc
arpl
inc
aam
push
fadds
loope
aaa
out
ficompl
negb
push
adc
dec
push
in
adc
jno
fdivs
push
push
aad
push
xorb
insl
push
aam
adc
lret
loopne
je
lret
out
mov
adc
or
call
push
int3
pop
jge
inc
test
push
mov
mov
dec
pop
ret
shlb
enter
adc
pop
add
and
fptan
push
xor
loopne
lods
das
mov
pop
lods
xchg
pop
add
adc
sbb
jno
loop
cmp
cwtl
push
cmp
imul
clc
jp
outsb
clc
pushf
inc
cmpsb
pop
lea
js
mov
cmpsl
hlt
xchg
dec
fwait
xlat
xor
fistps
pop
xchg
repnz
mov
cwtl
rorl
rcll
inc
adc
mov
sbb
and
jg
aaa
dec
pop
lret
js
or
loop
mov
mov
imul
clc
xor
in
lds
cmp
mov
pop
mov
cmp
mov
addr16
xor
fsts
sbb
lahf
sar
mov
loope
push
mov
jbe,pt
sbb
jp
add
push
sbb
mov
jle
inc
push
and
push
dec
sbb
push
into
int
pop
lods
outsl
xor
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
jp
jle
push
adc
mov
adc
ret
jmp
cmp
mov
inc
inc
sahf
xlat
in
sbb
je
dec
nop
cmpsl
and
loopne
cmp
add
scas
test
mov
repnz
jns
mov
sbb
ret
loop
adc
xchg
dec
inc
mov
addr16
sbb
and
cmp
pop
fnstsw
jge
sahf
rcrl
scas
xor
push
cld
xor
in
mov
dec
outsl
inc
gs
rcrb
movsb
mov
ret
jecxz
cmpsb
lds
push
xchg
xchg
mov
mov
daa
ret
jns
jno
sub
or
or
dec
jge
movsb
das
and
mov
enter
jns
call
or
aad
rcrb
jecxz
xor
stc
push
mov
adc
mov
ds
xchg
add
inc
xchg
std
loopne
adc
pop
pop
and
xchg
xor
sahf
aas
insb
adc
pop
mov
cltd
testb
js
xchg
mov
sub
cmp
dec
repnz
imul
lcall
lahf
push
pop
outsb
dec
cmpsb
cltd
test
xchg
nop
xor
ds
dec
lahf
fnsave
scas
push
jl
mov
xorl
dec
rolb
xor
movsl
enter
bsf
xchg
add
test
push
xchg
sbb
add
xchg
cltd
stc
push
xor
loop
fmul
in
popa
sbb
outsb
push
mov
jmp
jmp
pop
ja
outsb
sbb
scas
add
pop
jnp
jae
fucomip
push
cmp
clc
cld
pop
fstps
lock
mov
mov
ja
rcr
push
loop
cmc
aam
ret
inc
icebp
inc
iret
xor
pushf
mov
push
sbb
imul
dec
stos
ret
or
xchg
pop
mov
ret
bound
inc
cltd
mov
and
push
push
inc
ror
pusha
jecxz
sbb
dec
pop
pusha
add
and
leave
push
imul
pop
rorb
fcoml
mov
cmpb
mov
mov
and
lods
xchg
xchg
sub
sbb
popa
aad
imul
inc
test
popa
aam
cmpsb
scas
movsl
xorb
icebp
and
repz
insb
dec
lods
imul
adc
insb
mov
fstl
xor
dec
loope
pop
sub
xchg
sbb
js
insl
outsb
jp
add
out
dec
push
lcall
cmp
xchg
jle
cmp
sbb
lahf
rorl
imul
int3
cld
sub
loope
daa
xor
fildll
into
push
lret
mov
mov
insb
je
inc
and
dec
lods
les
and
xor
xchg
scas
cmp
stc
scas
call
lock
dec
mov
pop
push
scas
sti
or
jmp
rcl
push
aam
sbb
imul
ljmp
fwait
dec
cmp
stc
mov
jns
jge
adc
xchg
pop
int3
xchg
aam
mov
cmpsb
mov
push
repnz
or
jp
pop
ljmp
cld
scas
das
repnz
sbb
or
popf
int
out
hlt
filds
or
rcrl
dec
fwait
lahf
lret
es
push
jnp
mov
hlt
aad
jle
push
mov
add
jmp
mulb
loope
dec
lock
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
mov
mov
adc
scas
mov
call
lahf
xor
sarb
dec
xchg
leave
notl
or
or
push
and
sub
in
fidivrl
std
cmp
mov
jb
xchg
cmc
cmp
negl
mov
aad
enter
inc
loop
inc
sbb
bound
add
jbe
repnz
mov
aad
mov
jne
or
mov
add
jge
jns
jns
pop
pop
dec
xchg
xchg
and
fstl
cmp
pushf
pop
cmp
pop
xor
fsub
cmp
xor
lahf
push
pop
adc
pop
mov
push
push
mov
jmp
adc
aas
imul
pop
std
push
jecxz
and
adc
pushw
rcrb
rcll
jae
jb
into
imul
dec
pop
xchg
test
push
cli
cmc
int3
adc
adc
lds
xchg
sub
popa
mov
int
int
mov
mov
outsb
loop
adc
inc
out
cltd
mulb
cld
pop
jmp
jge
out
jecxz
pop
mov
outsb
and
pop
push
enter
test
sbbb
maskmovq
mull
mov
push
jbe
mov
fwait
movsb
jecxz
xchg
jns
jnp
and
xchg
or
push
loop,pn
std
dec
pop
push
push
mov
push
in
sub
les
movsl
sahf
mov
fsubrp
cs
sbb
jns
inc
int3
adc
or
or
fnsave
fwait
jae
jle
lods
rcrl
in
aam
iret
mov
inc
adc
iret
mov
cmp
push
sbb
cli
lods
inc
add
popf
or
push
mov
lods
xor
dec
sub
sub
or
in
ss
mov
fcomip
insb
add
adc
xchg
push
sbb
push
popf
adc
test
mov
leave
out
push
cmp
adc
push
or
movsl
into
pop
adc
ljmp
push
push
xchg
cmp
push
push
xchg
stos
ds
aas
jnp
popa
xchg
movsb
pop
sbb
scas
ret
pop
push
jl
inc
test
aaa
sub
jge
push
jbe
mov
fcmove
daa
pmulhw
psraw
scas
test
adc
int
cmp
xchg
loopne
mov
loopne
inc
and
add
add
cmp
sub
scas
mov
dec
push
aad
adc
adc
pop
js
sub
subb
out
cmp
sub
rol
test
pop
and
sub
jle
sbb
aad
push
jle
jecxz
dec
adc
and
hlt
divb
xchg
mov
jg
dec
js
dec
ljmp
ljmp
sbb
outsl
fwait
clc
insb
mov
jl
xor
mov
jg
sub
std
and
cltd
fnstenv
addr16
add
mov
inc
and
rorb
xor
sub
iret
icebp
and
test
call
sbb
cltd
arpl
mov
fdiv
xchg
or
xor
xor
mov
push
je
jge
lret
xchg
pop
imul
fwait
xchg
push
mov
arpl
mov
sbb
insl
lahf
mov
je
pusha
pop
mov
mov
or
outsb
test
sbb
daa
sti
mov
add
adc
push
loopne
test
xor
test
cwtl
lods
or
add
xchg
inc
sub
ja
pushl
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
addb
js
inc
adc
mov
adc
mov
fsub
mov
leave
in
imul
stc
sbb
pop
dec
or
inc
mov
loop
shl
pop
inc
lods
pop
mov
mov
xchg
shll
xor
ss
stc
push
xor
lea
cmp
testl
cmp
mov
out
aam
sbbb
jl
xchg
pop
lcall
cmp
xchg
mov
jp
mov
jno
push
popf
push
dec
or
push
notb
cmp
mov
out
ds
out
push
outsb
repz
cs
aad
xchg
mov
iret
pop
int
in
xchg
jne
cmp
xlat
out
enter
in
sbb
xor
into
fwait
jle
adc
lahf
jns
sub
aad
push
pop
jp
mov
lds
lret
mov
xchg
cmp
xchg
sbb
mov
or
sbb
or
lds
sbb
mov
ss
dec
or
dec
inc
aam
push
sbb
fisttps
movsb
sub
inc
mov
sti
je
int3
std
rcrb
or
and
repz
int
sbb
dec
mov
roll
call
enter
cmp
arpl
jl
pusha
jmp
ficoms
jno
mov
stos
fisttps
add
push
ret
mov
cmc
xchg
mov
movsl
out
push
aam
dec
out
repnz
lods
mov
mov
ficomps
cmp
xchg
dec
out
fstpl
lret
add
sbb
test
mov
push
adc
xchg
jecxz
add
jnp
mulb
loope
lea
mov
insl
and
in
cltd
mov
call
adc
inc
mov
imul
xchg
loop
mov
cmp
sub
pop
arpl
movsb
adc
pop
sarb
mov
push
and
pusha
addr16
adc
push
fsts
movsb
cltd
mov
fistpl
xchg
gs
psubsb
mov
pushf
js
inc
lahf
mov
inc
in
jecxz
xor
cmpsb
and
lods
dec
das
xor
inc
leave
out
adc
stc
data16
call
dec
pop
sbb
lret
cmp
mov
das
mov
nop
enter
or
dec
jle
push
dec
maskmovq
testl
dec
neg
lahf
hlt
jno
sub
cmp
je
andl
xchg
jg
int
jp
inc
lods
scas
inc
inc
ljmp
popa
mov
dec
fdivrp
cmp
mov
aas
inc
jns
and
mov
in
imul
loope
jge
xor
lock
test
ljmp
incb
mov
insl
mov
js
sti
jmp
lods
xchg
dec
cmpsl
popf
fcmove
repz
int
mov
es
xchg
lock
fidivrl
push
and
mov
push
hlt
sub
pop
xchg
jne
cld
test
push
push
aas
aaa
sahf
jle
xor
aam
cmpsl
jp
rcrl
ja
mov
sbb
imul
lea
mov
stos
mov
fcmovnu
jg
or
xchg
xchg
testb
push
or
inc
push
and
icebp
fwait
dec
pop
xchg
mov
into
sarb
pushf
sbb
push
cmp
scas
add
jno
loopne
pop
or
fadds
jp
stos
mov
in
dec
es
mov
adc
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
mov
mov
adc
nop
dec
or
sbb
sub
xchg
ret
ficoml
xchg
sbb
mov
orb
jg
cli
leave
jle
movaps
dec
add
aaa
aaa
push
nop
in
mov
stos
or
aaa
jae
sbb
leave
jbe
cli
sub
adcl
stc
aas
sbb
sbb
inc
mov
jns
test
sbb
dec
clc
mov
aam
xor
and
cli
cmc
and
fxch
test
ja
push
sbb
ret
cwtl
fstl
cwtl
js
stos
pop
push
jnp
pop
cltd
into
popa
cmp
imul
aaa
test
repz
call
ret
and
push
cmp
jne
repz
mov
movlps
je
push
insl
jmp
stos
and
fmuls
fwait
mov
push
std
cs
lret
jg
stos
test
jo
mov
shr
adcl
mov
scas
mov
cmp
lods
fs
in
movsl
inc
subb
popf
call
lods
stos
ja
dec
idivb
stos
pusha
xor
adc
pop
lcall
shlb
adc
out
xor
or
inc
mov
push
push
cmp
mov
loopne
andb
dec
or
pop
push
cli
stos
stos
rorb
ficomps
xor
test
imul
or
pusha
arpl
push
mov
lea
loope
xchg
push
push
push
in
in
out
cmpsb
ljmp
mov
jp
or
jo
fdivl
pop
xor
in
xchg
lcall
in
popa
fnstsw
and
xor
xchg
inc
mov
or
sub
sbb
daa
ja
mov
stos
lret
jbe
jle
dec
rclb
mov
enter
mov
inc
dec
jno
enter
add
jg
cltd
out
sub
and
dec
test
in
lods
inc
ds
mov
jno
sub
mov
mov
in
xor
mov
sub
xchg
jp
div
mov
push
or
nop
sub
jg
add
cmp
pop
cmp
inc
std
pop
adc
pushf
cli
mov
pop
icebp
mov
push
jns
xor
push
xchg
push
pop
repz
int
iret
ds
mov
call
arpl
je
mov
cmpsb
jmp
out
test
repnz
jbe
adc
popf
cmp
cwtl
sub
jns
lock
mov
cmpsl
mov
rorb
iret
iret
leave
in
lret
rolb
inc
pushf
pop
pusha
test
mov
pop
xchg
lea
icebp
fsubrl
cmp
adc
repnz
imul
sub
jnp
mov
scas
sub
stos
pop
es
adc
xchg
insb
mov
dec
push
inc
leave
aam
rol
popa
xchg
flds
dec
in
xchg
lds
sbb
xorb
data16
pushf
or
pop
test
push
xor
xchg
data16
mov
push
ffreep
bound
jae
out
cmp
outsb
mov
leave
pusha
sub
mov
movsl
aam
adc
and
loop
adc
call
fimuls
jno
push
aad
xorl
xchg
aas
inc
mov
dec
cs
and
aaa
dec
and
lock
shr
xchg
inc
mov
imul
insb
lcall
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
and
int3
lods
jbe
adc
mov
adc
xor
dec
xor
pop
sbb
dec
roll
jmp
lcall
mov
mov
xor
mov
out
or
or
or
cmp
jl
push
cli
and
xchg
add
jnp
mov
gs
aad
add
lods
mov
sub
push
cmp
push
push
dec
cmc
insb
jae
leave
pop
mov
cmp
jno
xor
pop
push
jns
add
xor
das
aaa
bound
sbb
pop
xchg
sub
xchg
xlat
dec
mov
lahf
shll
out
mov
mov
in
cmp
mov
jne
xchg
sbb
mov
lahf
mov
mov
push
mov
fsubl
bound
fld
sub
movsl
rcrl
xchg
je
bound
stos
test
fdivrl
jne
lods
popf
dec
imul
lds
xchg
fidivrs
xchg
pop
adc
clc
outsl
jmp
js
dec
add
mov
sbb
push
daa
scas
popf
ss
loope
loop
xchg
and
popa
sar
mov
sub
mov
pop
cltd
popf
outsl
movsl
cmpsb
js
insl
bound
pusha
sub
cmpsb
cmp
mov
sbbb
push
xlat
pusha
or
ds
aaa
push
lret
fmull
jle
out
addr16
xor
pop
inc
push
leave
lds
outsb
add
aad
mulb
popa
notl
lods
mov
mov
sahf
nop
adc
inc
xchg
push
orb
and
or
dec
xor
out
jno
insb
imul
aad
scas
xor
xchg
mov
mov
rcr
iret
nop
adc
xlat
push
movsl
aas
adc
int3
dec
lock
mov
dec
repnz
dec
xor
arpl
push
mov
lahf
bound
pop
das
adcb
negl
arpl
mov
imul
xor
jno
push
psrlw
gs
or
pop
jecxz
xor
fisttps
cmp
mov
js
jecxz
mov
lea
cld
and
pop
das
xchg
xor
jb
push
pop
jle
adc
lahf
mov
fidivrs
call
jae
mov
jge
subb
sarl
push
cmp
mov
cli
jne
daa
sarb
adc
dec
xchg
shl
inc
push
loope
mov
xchg
fadd
xor
pop
xchg
loope
orb
out
jb
add
dec
sbbl
jne
ret
sahf
lods
and
test
mov
fs
jo
scas
mov
call
mov
das
daa
sbb
adc
lds
inc
aam
sub
cld
loope
inc
into
rclb
xor
add
jbe
insb
jb
int3
data16
pop
push
popf
rclb
dec
pop
inc
jg
ret
xchg
sub
mov
jmp
fcoms
ret
xchg
add
push
das
mov
xchg
arpl
sbb
outsb
dec
outsb
scas
cltd
xor
mov
dec
js
testb
cmp
xchg
lret
cmp
inc
addb
cmp
inc
rorb
fmull
adc
sbb
adc
mov
jle
jno
lods
add
outsl
fwait
push
mov
add
je
jae
sub
xchg
mov
cld
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
mov
adc
adc
aaa
xor
fwait
cli
mov
fldcw
and
sub
cmpb
in
and
xlat
out
arpl
sbb
test
cmp
sbb
xor
dec
shl
sub
lock
inc
fwait
or
push
cmp
and
rcr
cld
aaa
out
mov
mov
data16
repz
test
sub
xor
or
in
dec
mov
push
aam
pushf
xchg
fildl
push
mov
stos
imull
push
adc
inc
push
dec
mov
popa
test
push
roll
fwait
jno
add
cwtl
xor
cmp
dec
aaa
cmpsl
movsb
sti
rorl
sar
loopne
mov
dec
and
fbld
mov
and
mov
mov
cmc
out
clc
cli
xor
std
mov
xor
add
sub
pop
jb
mov
or
sub
cwtl
mov
rorl
stos
imul
jmp
cmp
lea
fimull
les
das
jno
and
add
lock
outsb
stc
mov
dec
cmc
sbb
sub
push
pop
scas
shll
push
dec
imul
ds
and
stos
dec
es
xchg
xor
sahf
insb
xchg
sbb
pmaxub
push
push
andl
dec
sub
bound
cmc
adcl
pop
lock
cld
xchg
sbb
ret
addr16
inc
inc
lock
rcr
pop
or
mov
icebp
fldt
mov
shl
xorb
adc
mov
sub
jle
xchg
pop
jns
sahf
lea
push
mov
adc
lea
inc
lds
dec
gs
aam
ret
ja
mov
cs
push
mov
dec
insl
jg
fs
adc
loopne
data16
sti
cltd
test
call
loopne
loope
ds
cmp
pop
sbb
jns
iret
ss
sub
xor
pcmpgtb
xchg
sbb
shll
insb
std
jp
sub
imul
or
loop
inc
sub
xor
inc
clc
fisubl
inc
lock
jge
mov
mov
out
pop
xchg
mov
dec
adc
lea
push
sbb
xchg
xchg
mov
jbe
jmp
xor
pop
dec
xchg
jge
mov
push
std
rol
pop
push
xchg
addr16
cmp
dec
and
addr16
jae
adc
xlat
adc
jle
dec
mov
xchg
sub
pop
xchg
loope
lahf
out
adc
loope
sub
je
cmp
adc
popf
pop
mov
jb
in
loope
popa
cli
out
adc
add
ficoml
inc
lahf
aam
xchg
cld
mov
addr16
pusha
in
and
or
pop
jae
sbb
inc
or
and
add
jo
pusha
push
adc
lret
sub
xor
adc
pop
and
mov
and
mov
xlat
add
sahf
push
imul
shlb
fs
jl
or
insl
pop
dec
inc
adc
sub
rorb
mov
repnz
lret
push
roll
out
or
insb
call
pop
ja
mov
icebp
enter
in
fs
push
push
ja
push
fildl
in
mov
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
cli
cmp
jle
and
adc
aam
out
jne
push
adc
imul
jge
pop
xchg
repz
xchg
sbb
loopew
cld
std
ds
and
xorl
pushf
mov
scas
mov
cmp
lret
pop
sub
sbb
idivb
mov
pop
outsl
push
bound
mov
repnz
sbb
pop
adc
jle
jnp
cltd
pop
pop
je
ja
jecxz
inc
sub
mov
loop
aas
add
dec
mov
cwtl
xchg
bound
mov
add
imul
add
or
ret
adc
insb
outsb
aas
xchg
add
jmp
xchg
sbbl
inc
cmp
sub
jmp
mov
jno
sbb
jle
jg
inc
shlb
repnz
push
pop
or
in
jecxz
sub
inc
lods
add
xor
out
pop
add
pop
mov
push
xor
mov
into
test
es
and
add
lods
add
test
inc
sbb
push
adc
es
adc
fiaddl
fldcw
pop
adc
cmc
adc
outsb
jnp
cmpsl
sar
clc
imul
out
test
dec
imul
add
push
in
add
inc
cmp
insb
mov
ret
cmp
jecxz
push
add
inc
xor
xchg
fldt
stos
xor
dec
xor
stc
and
in
jnp
in
fwait
pop
and
and
sub
mov
xorl
in
xchg
mov
imul
push
addr16
cwtl
loop
sbb
or
mov
dec
cmpsl
jns
loop
sti
jo
sub
icebp
pop
repz
sub
mov
fmull
pop
stc
jbe
xchg
push
push
inc
int3
push
cmp
aaa
lret
pop
cmp
shl
cld
clc
fdivl
jmp
mov
mov
lods
out
jne
pop
push
stc
sub
xchg
jl
loope
out
xor
adc
int
movsl
mov
shl
ds
xchg
jne
jge
das
jne
inc
jg
out
push
jge
inc
loope
mov
addr16
or
jo
inc
inc
push
dec
mov
inc
jmp
dec
cmp
pop
jo
daa
mov
ljmp
adc
js
lahf
sbb
aaa
sbb
push
sar
sbb
xchg
dec
cmp
loope
mov
inc
imul
cmp
push
js
repnz
rorl
in
mov
mov
sub
test
sbb
insb
mov
mov
jmp
cmp
add
push
mov
bnd
adc
dec
int
cmp
cmp
push
rcl
and
jl
icebp
fcmovb
push
pop
jne
cwtl
push
mov
mov
or
data16
sub
scas
int
push
dec
cmpsl
out
pop
ret
adc
inc
xchg
xchg
sbb
dec
orl
sysret
in
jns
add
xlat
cwtl
push
syscall
ret
cmpsl
mov
insl
dec
test
in
test
pop
jb
fidivl
mov
and
pop
lahf
inc
stc
insl
stc
mov
add
cs
test
cmp
mov
adc
jo
add
sbbb
xor
shlb
mov
out
cmp
lock
mul
inc
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
in
jecxz
js
sbb
adc
sbb
loope
nop
in
xchg
cmp
cmp
inc
repnz
xor
and
popa
sbbl
cwtl
es
outsb
fadds
jbe
push
push
out
cmp
inc
mov
stos
int
lea
or
pop
fdivs
repnz
mov
sbb
sbb
sub
mov
mov
xchg
rcll
imul
push
loope
cmp
sub
pop
sarb
cwtl
sbb
or
inc
in
jno
xchg
push
inc
sub
cmc
add
xor
pop
sbb
push
xchg
js
cmp
mov
push
andl
int3
xor
jmp
lcall
inc
hlt
dec
clc
pop
cmc
stc
mov
push
shrl
push
pop
jb
mov
sub
adc
sbb
bound
incl
adc
stc
or
out
aas
out
mov
loopne
adc
ss
ret
fisubrl
mov
stos
sub
sub
out
mov
dec
pop
jo
add
rclb
pop
add
loop
add
mov
sub
bound
sub
mov
xchg
sbb
mov
jnp
out
pop
jp
fidivs
aas
pop
xor
jae
push
and
inc
incb
sub
lcall
mov
scas
add
jb
mov
push
sbb
daa
push
add
sbb
mov
pop
fnstsw
std
sub
test
jae
dec
push
arpl
enter
icebp
loop
les
lret
mov
mov
jge
jl
lods
dec
xlat
pop
dec
xorl
mov
jl
jnp
cmpl
add
loop
test
push
push
call
shrb
push
andb
cmp
sbb
call
jbe
sbb
push
xor
jne
in
insl
ret
cmc
call
pop
inc
xchg
xchg
pusha
cli
incb
cmpl
adc
xchg
out
test
dec
sub
push
popa
int
sbb
leave
dec
cmp
sbb
pop
mov
mov
or
ja
cmpb
aam
sbb
incb
lahf
and
dec
jns
xor
push
push
dec
add
mov
cmp
xchg
sub
stos
or
jmp
sahf
lock
dec
jb
pop
adc
movsl
in
or
inc
xorl
push
sub
inc
stos
fdivrl
jne
out
xchg
or
mov
mov
ret
mov
in
jne
sub
lock
mov
adc
es
icebp
inc
movsb
dec
or
sub
xchg
lods
shrl
mov
sti
lods
stos
push
rcrb
lds
sti
mov
cmp
push
sub
push
imul
jp
jbe
mov
movb
mov
lods
jns
addr16
xor
mov
xor
out
mov
test
adc
sub
sbb
add
lock
int
xor
inc
xchg
rolb
or
lret
lcall
adc
pop
push
inc
rol
mov
dec
inc
fwait
inc
and
pop
pop
xor
mov
jp
sbb
ds
add
push
outsl
lds
adc
out
enter
mov
int
ss
daa
push
out
push
jge
in
std
jb
xor
fadd
mov
or
bound
push
push
xchg
movsl
and
add
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
xchg
sbb
fisubs
insb
jb
sub
mov
push
movb
mov
mov
xor
sti
movsb
sahf
hlt
jb
pop
cmp
fs
jo
insl
xor
test
mov
aaa
xlat
pop
mov
pushf
cs
or
dec
mov
and
dec
push
gs
andps
lret
addl
dec
xchg
mov
fists
push
jns
and
pop
aaa
loopne
scas
adcl
cmp
xor
ss
and
ret
je
adcl
std
and
xor
in
cmp
call
fcmovne
jb
icebp
ret
xchg
stc
cwtl
negl
in
sbb
inc
orl
out
mov
mov
stos
test
xchg
inc
loop
cwtl
test
lods
add
sbb
insl
shrl
xchg
ljmp
repnz
push
ljmp
insb
mov
mov
adc
mov
stos
mov
out
xchg
inc
xchg
add
in
vmovdqu
mov
add
int
mov
cmc
and
je
push
adc
ret
into
push
mov
sub
nop
mov
popa
outsl
push
dec
js
mov
push
paddb
sub
xor
cmp
iret
and
pop
mov
loop
mov
pusha
mov
and
jbe
cmpsb
loopne
lods
das
imul
pusha
pop
dec
pop
iret
decl
mov
out
aam
mov
push
jmp
sub
lcall
and
hlt
jge
insl
sbb
ja
xor
es
mov
orl
mov
push
or
add
orb
bnd
inc
es
int
daa
jp
xchg
bound
je
scas
and
jmp
pop
fnsave
sub
adc
inc
xor
in
lahf
lods
mov
xchg
mov
xchg
or
or
js
ret
sbb
or
fcmovnbe
mov
test
xchg
mov
imul
loopne
jbe
cmpsl
loop
sahf
stos
loop,pn
loope
cmp
jle
inc
cltd
and
outsl
xor
lcall
mov
sarb
adc
inc
or
daa
xor
rorl
jae
je
jmp
lcall
loope
test
add
cmpsl
sub
or
xchg
mov
shlb
sbb
push
dec
int3
mov
lds
cmp
fistpll
push
std
sahf
add
movsl
fwait
mov
fisubl
and
sub
fisttpl
mov
dec
fucom
dec
ds
lds
cmp
insl
test
rcrb
mov
lods
mov
adc
cmp
mov
stc
ss
cli
es
cmp
mov
mov
adc
add
jnp
and
mov
cmp
xchg
push
xor
sub
push
fs
test
jb
jg
xorl
jmp
movl
aad
fucom
push
mov
jo
pop
leave
dec
push
movsl
movsl
fiadds
pop
pusha
push
decl
ret
cwtl
lcall
test
aam
in
pop
movsl
xchg
mov
lret
outsl
aam
and
pop
mov
or
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
outsb
sub
js
adc
adc
xchg
xor
std
in
jge
sbb
bound
fwait
in
xchg
cmpsb
movsl
in
jge
dec
sbb
loope
or
push
inc
xchg
outsb
fisubs
push
loopne
leave
icebp
lcall
adc
push
cmp
mov
push
jecxz
dec
mov
cmp
xor
scas
mov
inc
cmp
sbb
mov
inc
jecxz
mov
jne
dec
scas
mov
lock
iret
pop
xorb
dec
xorl
fprem
int3
jne
pop
cmpsb
add
xor
mov
push
or
pop
push
inc
test
addr16
in
scas
mov
adc
and
movsl
adc
add
inc
xor
sahf
loopne
sbb
dec
enter
enter
dec
in
jb
negb
pop
icebp
fimull
adc
dec
dec
div
xor
cmp
inc
cmp
test
add
pop
jg
int3
mov
mov
push
sbb
arpl
imul
in
xchg
lds
cmpb
mov
sbb
pusha
dec
in
outsl
add
packssdw
fcmovnbe
mov
pop
push
mov
inc
jnp
push
fdivs
mov
test
orl
loope
aas
lods
movl
jns
xor
scas
loope
sarb
xchg
cli
imul
dec
pop
xor
mov
testl
lahf
dec
cmp
xchg
jg
fmull
scas
je
and
loop
pop
and
push
leave
sbb
cli
jecxz
xchg
pop
cmp
jmp
jmp
pop
icebp
pop
and
xlat
add
pop
add
mov
addr16
idivl
inc
int3
fisubrs
ret
pusha
stos
xchg
shlb
mov
or
sbb
add
lock
cmp
jbe
sbb
mov
je
cwtl
insb
mov
jae
xor
in
clc
and
jmp
push
cmpsl
sub
dec
xchg
pushfw
lds
arpl
dec
sbb
add
int3
pop
test
mov
cmp
cmc
lahf
int
fldl
lods
push
addr16
push
sub
jae
xchg
call
push
adc
mov
xchg
imul
sub
imul
add
mov
lds
mov
mov
out
cmp
adcb
imul
sub
cli
loope
movb
ror
push
sub
js
out
push
cmc
sub
jmp
mov
push
add
cld
inc
jbe
inc
test
aad
les
cmpsl
ret
and
pop
mov
aam
pop
fiadds
jle
shll
test
sbb
cltd
fs
push
lahf
rorl
std
test
sbb
jae
es
mov
xchg
bound
sub
or
mov
lods
xor
push
repnz
pusha
ds
push
cmp
out
das
stos
stos
jl
jl
fdivr
je
mov
stos
scas
inc
adc
mov
je
popa
fidivrs
adc
out
ficompl
sbb
mov
shrb
mov
cli
dec
xchg
ret
mov
xor
jb
or
stc
scas
cmp
jmp
iret
add
sbb
dec
lds
add
ret
lahf
jl
add
lock
mov
jo
out
jno
sarl
sub
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
fsubs
adc
adc
mov
adc
push
xlat
mov
outsb
jno
aam
scas
fnstcw
loop
add
or
subb
shll
lea
inc
out
repnz
and
or
xchg
imul
dec
mov
cmpsl
mov
sbb
pop
ljmp
sbb
xlat
mov
pop
aam
sahf
push
cmp
push
pusha
push
xchg
fbld
in
adc
or
dec
js
adc
mov
lods
add
lock
xor
sbb
mov
push
pop
push
jp
out
out
mov
mov
stc
add
dec
pop
jbe
adc
addr16
pop
cmovbe
pushf
mov
xchg
fwait
outsl
add
scas
out
leave
adc
jl
test
sub
cmp
gs
mov
pop
fldt
cmc
out
es
push
xchg
pusha
mov
daa
stos
jb
int
jmp
aad
data16
sarl
insl
shlb
mov
fnsave
push
int
mov
pusha
enter
cmpsb
mov
arpl
adc
ret
mov
into
cmp
pop
push
push
test
adc
inc
xchg
loopne
xchg
sti
mov
mov
dec
testb
pop
dec
out
hlt
test
add
repnz
pop
push
xor
fistl
and
pusha
and
movsb
icebp
push
push
push
or
int
mov
push
loop
rorl
jne
mov
cmp
mov
mov
push
mov
mov
gs
and
out
mov
jmp
cmp
mov
ficoml
xchg
adc
sti
xchg
pop
dec
or
push
mov
jecxz
int
out
xchg
inc
orb
int
sub
dec
jne
jo
int3
jnp
adc
push
cmp
lea
jno
mov
lods
jge
idivb
shlb
xor
addb
repnz
pop
pop
sti
scas
xor
push
sbbl
das
sub
lock
ss
popa
and
enter
mov
dec
push
jbe
sub
in
sbb
in
pop
aaa
sbb
aam
xchg
movsl
adc
loop
cli
lret
pop
cmpsb
fistl
sbb
xchg
pop
pop
or
xorb
gs
sahf
call
mov
add
or
adc
jmp
and
xchg
pop
stos
daa
addr16
push
out
pop
cmp
jne
es
pop
lret
push
jmp
negl
das
sti
outsl
push
add
pop
add
lods
lods
inc
xor
int
int3
rcrb
jecxz
sub
xchg
mov
lcall
imul
mov
sub
mov
subl
mov
xchg
jge
xor
jns
inc
or
add
xor
aas
je
jae
stc
in
sbbb
jnp
fisttps
sub
sbb
add
gs
pop
mov
pop
mov
add
insl
roll
ret
je
or
imul
xchg
add
add
push
mov
lods
xadd
mov
enter
or
divl
xor
jne
push
sub
ja
clc
xor
inc
mov
jmp
dec
or
and
testl
gs
test
sbb
in
mov
adc
mov
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
mov
mov
adc
jo
mov
pop
sbb
push
xor
push
jle
cmpsl
fistl
pop
cli
jae
pop
adc
cmp
imul
inc
mov
push
jbe
sub
mov
cwtl
xchg
ret
push
xorl
mov
aam
dec
cmp
mov
insb
jge
jae
fwait
scas
cmp
cmp
clc
add
adc
mov
lods
sbbl
lret
sub
cmp
mov
cli
adc
pop
mov
call
lahf
pop
lahf
repnz
xchg
or
xlat
hlt
and
pushf
or
bound
ret
out
mov
jnp
push
scas
mov
jae
mov
xorb
xor
push
arpl
add
daa
mov
call
pop
inc
jnp
push
lret
push
ret
data16
popl
int3
push
jecxz
inc
inc
testl
popf
icebp
iret
cltd
rcrl
repz
jno
sub
sub
xchg
pop
push
scas
add
jl
filds
pop
fs
mov
add
hlt
cmp
repnz
fdivl
mov
stc
pop
test
mov
sub
rolb
jl
cld
xchg
xor
mov
std
mov
mov
stos
cmp
xor
adc
std
test
lret
or
testl
jae
sbb
push
call
mov
movsb
jbe
mov
sub
inc
div
adc
dec
icebp
sbb
sbb
mov
push
nop
mov
ficompl
add
fwait
push
jo
std
test
mov
pusha
imul
push
cwtl
leave
add
xor
in
test
gs
jecxz
lea
movsb
pop
xor
lret
mov
cli
adc
mov
push
xchg
cwtl
out
in
or
or
stos
mov
mov
add
xchg
adc
imul
inc
cwtl
or
lods
jge
inc
cli
jno
sbb
cmp
xchg
loop
out
scas
cmp
out
and
adc
out
movsl
cmp
ret
add
sbb
sarb
out
add
test
lretw
adc
jae
daa
sahf
stos
push
mov
cmpb
lock
xor
lock
sar
mov
adc
scas
aaa
or
sub
jne
inc
fisubrl
mov
jae
inc
fadds
roll
cmp
repnz
jecxz
cwtl
scas
mov
es
movsl
inc
aam
jns
pop
loope
push
rol
pop
mov
mov
xor
enter
sub
test
pop
cmp
int3
pop
jnp
sub
out
inc
push
stos
pop
into
mov
jle
mov
ds
call
pop
adc
jbe
adc
iret
or
idivl
xor
shrl
jl
popf
and
mov
in
dec
jae
iret
pop
and
aam
mov
aaa
repz
sbb
sbb
dec
adc
add
lcall
jo
cld
lods
sbb
cmpb
xchg
ret
jnp
daa
iret
add
flds
mov
mov
into
insl
ret
xor
mov
inc
mov
test
ljmp
dec
pop
mov
andb
cwtl
lahf
push
psubb
mov
ss
lods
outsb
pslld
sub
and
add
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
subl
test
cs
xor
lcall
jmp
xchg
dec
xlat
jge
mov
call
lahf
dec
enter
xor
push
jb
sub
xchg
pop
pop
cmpsb
cmp
jmp
loop
lds
and
xchg
xchg
pop
inc
mov
push
icebp
xchg
lods
push
mov
pop
aas
aas
arpl
ds
shll
incb
jge
jecxz
push
ficomps
out
pop
rcrb
testb
jne
sub
inc
adc
arpl
enter
dec
jl
adc
push
lret
fisubl
int3
mov
movsl
pop
in
insb
lods
ljmp
mov
mov
sti
cmc
in
test
movsl
push
cmc
adc
sbb
sub
hlt
jle
in
fistps
repz
test
jb
loopne
lret
and
jl
lock
mov
mov
js
xchg
in
loope
out
push
mov
lea
ficomps
push
movsl
test
sarl
stos
mov
fs
loopne
add
dec
push
or
mov
mov
fsincos
aad
and
sbb
es
add
insb
fidivrs
mov
mov
jb
xchg
dec
mov
scas
xor
push
xchg
out
sbb
adc
outsl
fldenv
mov
xchg
mov
push
adc
es
es
rorb
std
cli
dec
js
fwait
cmc
into
mov
jl
mov
jae
jmp
push
xchg
jne
push
sub
pop
sbb
pop
push
das
add
inc
jge
jb
cs
push
xchg
lahf
repz
sub
outsl
sbb
call
mov
mov
andb
push
cmp
fidivrl
jp
push
iret
push
and
stos
push
call
pusha
aaa
push
and
je
pop
rcrl
jno
or
xchg
xor
pop
ret
inc
mov
add
mov
dec
mov
push
mov
add
cmp
jae
xor
fsubrs
cmp
in
cld
xor
jl
and
jmp
sbb
xchg
sbb
sti
inc
cmpsb
popf
jmp
jg
cmp
dec
sbb
ljmp
cltd
cmpsb
push
jnp
inc
ja
cld
mov
adc
scas
cmc
out
add
xchg
das
les
jno
test
inc
or
mov
and
int
out
push
scas
outsl
jle
incb
aam
icebp
push
ljmp
test
roll
cmpsb
adc
push
stos
in
ds
adc
aad
dec
adc
or
sbb
inc
add
push
test
sub
dec
push
inc
xchg
xor
jne
jmp
cmp
push
ss
sub
fldl
push
lret
push
stc
out
jnp
jae
or
adc
add
inc
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
xor
jle
lock
adc
adc
leave
jmp
rolb
cs
jbe
mov
jb
in
inc
dec
imul
sub
jnp
sbb
or
addr16
jecxz
pop
ss
jmp
push
jg
mov
xchg
mov
fwait
mov
outsl
xchg
dec
js
ds
cs
pusha
test
cmp
push
adc
mov
push
pop
in
push
lea
or
lahf
imul
and
xor
pusha
cmp
pop
jle
push
mov
add
sbb
sub
fmuls
repz
mov
xchg
jge
mov
or
inc
mov
lods
mov
xchg
dec
jbe
in
jae
pop
orl
add
hlt
in
pop
push
lret
add
fmulp
adc
sbb
lods
nop
clc
mov
xor
dec
jmp
mov
les
decb
adc
cli
mov
push
out
ds
dec
jecxz
xchg
test
and
jbe
ds
ljmp
dec
xchg
dec
rorl
adc
mov
pop
fdivrs
add
or
fwait
or
sahf
and
push
sub
stc
and
out
sbb
sub
cli
adc
loope
mov
or
xchg
leave
insl
pop
add
orb
jl
push
add
bnd
dec
jmp
add
inc
mov
push
les
jge
sbb
and
pop
push
and
test
xor
sbb
bound
cmp
sub
xchg
dec
or
loope
ds
dec
add
push
add
dec
pop
lods
data16
xorl
xchg
xor
inc
jb
enter
repnz
pop
in
push
call
mov
int
lcall
in
push
daa
jb
test
push
in
cld
add
out
dec
fbstp
inc
sbb
js
sti
stc
inc
div
ds
xor
loope
xchg
xchg
pop
cmp
push
iret
enter
inc
lods
mov
out
and
dec
sub
lcall
inc
mov
or
aam
mov
jl
dec
mov
into
xor
xchg
es
fsubr
hlt
sub
sbb
pop
cmp
cmp
xor
popf
mov
or
lret
cmp
out
sub
jae
nop
inc
jno
add
sbb
and
dec
inc
pop
aad
jp
movsl
outsl
xchg
ret
cmp
jp
mov
repz
into
xor
and
lods
push
js
lods
sbb
cmp
cs
js
push
jo
and
cmpsl
mov
fsubrl
ret
mov
cmpsb
push
nop
fs
xor
cmpsb
adc
aaa
fldcw
xor
mov
test
stos
sbb
jns
add
fcomp
adcl
imul
outsl
stc
push
add
aas
aad
int3
dec
or
subb
and
mov
repnz
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
sub
adc
adc
adc
xchg
xorb
push
sti
dec
cmpsl
dec
mov
inc
dec
mov
xor
mov
mov
mov
test
xlat
lea
inc
adc
add
inc
pop
lods
jae
test
iret
clc
sbbl
dec
lret
enter
xchg
jb
adc
xor
stc
sbb
dec
adc
sbb
mov
and
jle
hlt
sbb
and
push
pop
jb
sbb
mov
and
cmc
out
scas
fucom
xor
shr
pop
inc
shrl
lods
clc
pop
int3
sbb
pop
dec
add
and
cs
cwtl
gs
mov
pop
xchg
xchg
sbb
test
in
ljmp
aaa
add
sub
insl
or
cltd
mov
jmp
push
push
fbld
inc
out
sbb
jg
pop
data16
das
clc
and
push
inc
test
jge
cmpb
out
insb
push
bound
xor
jno
push
imul
or
imul
or
cld
push
aad
jl
inc
rorb
sub
add
cmp
mov
push
mov
rclb
mov
sbb
icebp
pop
clc
mov
mov
cmp
mov
fisubl
rorl
jne
or
xchg
imul
add
ror
push
cmpb
sbb
clc
mov
jecxz
pusha
clc
sub
icebp
ret
lret
or
int
dec
or
aaa
ds
push
ljmp
mov
aas
mov
bound
notb
cmp
mov
xchg
std
and
dec
mov
lock
test
pop
je
sub
push
adc
pop
fstpt
and
cltd
and
xchg
neg
adc
push
lds
jle
adc
mov
rcll
ds
dec
imul
sbb
mov
in
dec
sub
imul
add
inc
rcrl
shlb
jbe
outsl
orb
mov
clc
add
dec
cmp
fistpl
lea
hlt
add
stos
imul
and
sbb
sbb
xchg
xchg
loope
in
icebp
xchg
into
xchg
and
aad
cmpsl
and
mov
out
arpl
pusha
dec
mov
add
popf
mov
jle
pop
out
subb
mov
cmp
fcmovne
pop
mov
sub
loope
inc
add
ret
or
mov
idiv
sbb
mov
rcll
js
inc
test
loope
dec
repnz
stos
test
cs
xchg
test
cwtl
cmp
push
and
or
or
lret
lcall
and
add
and
cmp
aas
out
lods
scas
std
add
xor
out
and
jae
adc
xchg
insb
sub
lock
faddl
jmp
clc
xchg
push
out
popa
inc
xchg
mov
xchg
fnstsw
add
add
ret
nop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
pushf
rep
dec
jecxz
adc
adc
adc
cmpsl
sbb
leave
sbb
xlat
loope
outsb
mov
cli
xor
int3
cmc
in
adc
xor
or
or
je
imul
dec
cmc
pop
ret
dec
repz
roll
mul
test
and
fisubrl
leave
aad
sbb
inc
loope
out
push
xchg
addr16
repnz
mov
in
out
imul
mov
pushl
pop
popa
call
std
jge
fs
mov
int3
jg
enter
mov
mov
sub
sub
imul
mov
bound
inc
xor
push
out
sahf
shrb
mov
test
push
xor
insl
jp
dec
cmc
jbe
push
in
jecxz
rolb
inc
pusha
inc
xchg
test
jle
fldl
stos
insl
cs
pop
sti
in
xor
cld
pop
fdivs
sbb
and
inc
jle
sub
rcll
insl
aas
cmp
inc
dec
mov
mov
cmpsb
jae
xor
ss
add
or
roll
int3
fwait
jnp
mov
pop
loop
sahf
inc
out
xor
inc
jne
icebp
movl
push
call
in
xchg
jecxz
pop
sarb
cmc
inc
inc
or
call
push
mov
push
loopne
int3
je
mov
xlat
imul
cld
fs
fwait
test
mov
loop
mov
test
add
push
enter
jg
iret
pop
insl
dec
add
je
cld
ret
sahf
push
fmul
mov
stos
sbb
and
out
adc
dec
aas
inc
xorl
xor
mov
sub
je
jno
fldcw
mov
xchg
push
cmp
adc
jmp
xor
add
cmpb
std
enter
mov
fs
inc
je
pop
test
mov
inc
inc
pop
dec
mov
sbb
cmp
jns
cmp
sbb
pop
inc
mov
scas
inc
pop
adc
in
cmp
xor
aad
or
mov
in
adc
in
ret
in
test
xor
out
daa
js
lock
xchg
das
cmp
faddl
push
fsts
dec
imul
or
clc
mov
adc
in
adc
pop
ja
jne
loop
ds
sbb
xor
xor
xchg
inc
mov
push
or
dec
cmpsl
xchg
push
das
ret
push
inc
xor
or
repz
sbb
or
pop
int3
adc
popf
mov
enter
cmp
outsl
movsl
imul
sub
lret
call
and
or
fcoml
cmp
xchg
sbb
inc
mov
add
cwtl
ret
sub
jl
enter
mov
sub
sbb
push
outsb
repnz
lcall
fcoms
aad
jbe
push
sbb
lahf
nop
pushf
ror
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
bound
adc
adc
adc
sub
jecxz
push
ficomps
pop
pop
ss
dec
jle
jne
clc
push
out
stc
jno
cld
pop
stos
add
dec
xor
mov
push
inc
mov
cwtl
xchg
ljmp
add
cmpsb
push
nop
rcrb
cltd
adc
dec
cmp
xor
mov
daa
push
adc
in
push
sbb
rcl
xchg
add
xchg
or
push
push
fisubl
and
fisttpl
popa
push
add
loope
cmp
stc
mov
or
ret
mov
jno
and
inc
mov
test
sbb
gs
xchg
jge
add
ds
mov
adc
pop
mov
inc
inc
or
std
sbb
push
call
push
pop
xchg
popf
push
in
in
sti
add
insb
addr16
inc
aam
js
lods
pop
sbb
mov
lods
mov
adc
pusha
adc
or
xchg
dec
aad
push
aas
inc
inc
xchg
or
sub
lds
push
xchg
cmpsb
jge
fimull
iret
xchg
jo
mov
mov
in
jo
pop
aad
mov
push
adc
cwtl
adc
je
pminsw
pusha
sub
cmp
cmp
insb
mov
mov
cmp
imul
xorb
test
sbb
call
or
mov
dec
xchg
xor
push
gs
sub
and
xor
mov
mov
jle
loope
outsb
mov
iret
xchg
pop
sub
into
outsl
je
sub
jle
dec
cmp
sub
or
lds
pop
fbld
inc
js
addr16
ret
jl
das
lret
push
and
lret
lds
xchg
scas
insb
xor
int
in
cltd
ja
inc
inc
clc
xchg
mov
dec
cmpsb
xchg
or
add
push
and
fldenv
pop
sbb
xor
int3
loope
xor
cltd
push
inc
sbb
mov
popa
sbb
jg
pop
mov
movsl
xor
test
mov
and
fldl
jnp
xor
push
xchg
inc
fcomip
imul
and
push
das
test
data16
pop
sub
sub
test
bound
in
mov
je
es
fnstenv
fcompl
hlt
xor
into
leave
sti
jecxz
fs
jmp
cwtl
sbb
outsb
push
leave
mov
pop
pop
jns
fwait
mov
in
cmpsl
mov
inc
lds
pop
inc
into
pushf
into
inc
sbb
lock
in
xlat
scas
ds
inc
loope
or
sub
cmc
sub
add
push
sbb
inc
dec
cs
xchg
cmp
push
pop
adc
mov
and
add
mov
out
mov
pop
imul
ss
jo
xchg
repnz
sti
dec
shll
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
xchg
neg
xchg
or
jne
fwait
mov
push
data16
cmpb
xlat
mov
sahf
popf
push
mov
test
cwtl
jne
scas
mull
shr
sbb
ja
js
enter
jmp
test
js
inc
push
jecxz
push
sub
outsb
adcb
jnp
imul
les
fs
cmp
add
mov
aad
mov
mov
jno
rcl
jle
sub
loope
jg
imul
mov
sbb
repnz
push
cs
stos
aam
xor
lods
nop
and
shl
repz
ljmp
cmp
ret
rorb
push
pushf
inc
ja
cltd
ss
mov
cmpsb
pushf
jp
cmp
push
rorb
push
test
pop
cmp
xchg
dec
stos
pop
push
dec
push
ficompl
int
in
fsubr
enter
xor
fs
sub
jbe
xchg
js
out
jo
mov
lea
add
loopne
andl
xchg
add
lahf
stos
push
or
xchg
inc
or
jge
add
fs
addb
dec
scas
dec
and
pop
push
jp
xor
test
in
mov
les
mov
sub
andb
in
add
push
in
mov
scas
aaa
push
cmp
mov
nop
pop
jl
arpl
push
mov
pushf
bound
popf
inc
xchg
inc
sarl
adc
movsl
faddl
fidivl
or
mov
push
jb
sti
mov
lods
jge
outsl
jle
cmpsl
xchg
jge
xchg
jle
cwtl
lahf
movsb
shll
data16
lret
hlt
pop
adc
add
imul
adc
mov
jmp
cmp
push
fistpll
int
xor
or
daa
rcll
xor
or
mov
lock
sti
out
lds
jle
std
adc
orb
out
in
outsb
sbb
and
loopne
push
push
or
frstor
mov
inc
fs
lea
push
sbb
mov
fs
sub
test
in
data16
mov
lock
icebp
stos
mov
adc
mov
decb
fucom
dec
pop
fstps
iret
or
gs
pusha
mov
imul
icebp
or
mov
fwait
push
lods
sbb
inc
cmp
pop
movsb
insb
or
in
and
and
leave
shrl
aam
pop
xor
push
rcll
and
jmp
jmp
cli
mov
sub
jns
pop
mov
mov
jns
or
es
sub
fwait
mov
mov
sub
aaa
mov
mov
das
or
jle
lahf
add
in
cmp
xchg
xor
test
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
or
pop
aad
adc
adc
adc
pop
call
bound
nop
daa
cmp
testb
hlt
or
and
in
xchg
mov
fdivs
lods
ljmp
in
js
or
test
sub
out
prefetch
sub
sarb
dec
pop
aaa
push
in
pop
sbb
inc
mov
je
sbb
jmp
aas
jge
bound
imul
cmp
dec
call
mov
inc
int3
xor
stos
cmpsb
shr
ljmp
ror
pop
push
push
push
nop
dec
push
insb
inc
jo
mov
adc
and
cltd
add
xor
cs
out
jmp
mov
lock
and
dec
push
out
rol
xor
xchg
js,pt
cmp
push
out
adc
mov
jp
jmp
mov
in
mov
jge
xor
mov
cmpsb
push
inc
push
divl
add
hlt
repz
in
pushf
repz
and
pop
mov
int
popa
outsb
fsubl
cs
pusha
add
and
lds
dec
aam
lods
insl
mov
cmpsb
pushf
jmp
xchg
scas
or
xchg
or
out
repz
dec
xchg
je
js
nop
mov
dec
adc
andb
mov
jecxz
push
xchg
out
and
mov
stos
or
inc
jge
jecxz
lea
jmp
sub
lahf
mov
fcmovnb
push
repnz
ss
xchg
out
dec
outsl
xlat
xor
in
ret
lret
icebp
sbb
dec
lahf
adc
gs
dec
lods
cmp
and
inc
movsb
mov
incb
sbb
mov
mov
or
mov
pop
fwait
jae
lcall
dec
stc
in
pusha
add
push
push
andl
inc
or
push
mov
aam
movsl
in
jno
xlat
push
xlat
test
mov
fnstenv
xor
iret
mov
add
xchg
icebp
pop
jge
push
jecxz
inc
aaa
adc
js
sub
loope
mov
and
test
push
mov
pop
sub
rorl
mov
adc
sahf
aaa
adc
ljmp
cmp
mov
adcb
inc
fisubl
lods
lea
push
les
cmpl
add
mov
add
pop
imul
pushf
test
jmp
lcall
xor
pop
xor
cmpsb
movsl
dec
mov
clc
xor
in
sbb
loope
pop
loope
and
aas
xchg
jge
push
push
faddl
inc
std
xchg
aas
ja
imul
loope
and
lahf
sar
mov
insb
cmpsl
mov
pop
out
cmp
sub
add
int3
inc
scas
dec
cs
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
mov
adc
xorb
jnp
mov
add
cld
push
sub
mov
loope
dec
pop
enter
push
jmp
pop
sahf
sti
lds
push
mov
clc
in
or
or
icebp
jb
popf
int
les
inc
jg
mov
icebp
es
aas
repz
pop
es
fdivs
push
ja
sbb
shlb
pop
adc
jmp
rcrl
sub
mov
or
dec
xor
cmp
xor
push
stos
xor
lods
shll
ds
aaa
mov
adc
test
jne
repz
stos
mov
jg
mov
fstpl
in
jnp
call
sbb
lcall
sub
and
xchg
xchg
xor
aam
xor
mov
fdiv
mov
push
inc
lcall
int
js
fsubl
pop
jne
int3
idivb
sub
mov
mov
out
adc
xchg
ljmp
clc
sbb
mov
nop
sub
xchg
mov
dec
pop
lds
in
sarl
cmp
cmp
cmp
cmp
out
pop
out
jo
xor
out
fnstenv
in
faddp
out
bound
push
push
ds
cmp
scas
mov
das
clc
ja
movsb
movsl
push
mov
inc
subl
cmp
sbb
test
cli
sub
cmovp
mov
lea
xor
mov
dec
adcb
mov
popf
scas
icebp
mov
xchg
mov
out
gs
push
xor
stos
pushf
clc
out
mov
std
mov
fwait
add
bnd
lret
cmc
cmpsl
lret
fdivs
shll
sub
dec
ret
xchg
or
pop
xor
push
xchg
std
mov
jo
mov
xlat
out
loop
jmp
fwait
mov
lret
cli
push
dec
scas
mov
imul
lcall
or
pop
add
insb
and
iret
push
xor
jo
ds
dec
fs
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
sahf
lods
test
adc
xchg
movlps
inc
lret
mov
inc
dec
test
loopne
jns
std
lret
mov
and
xchg
in
das
mov
push
add
push
cmp
mov
clc
push
mov
pushf
testl
or
les
cwtl
lret
xchg
mov
inc
inc
cmp
adc
mov
gs
inc
sbb
xchg
outsb
cmp
pop
mov
push
dec
xchg
addr16
aam
adc
out
scas
push
sahf
mov
daa
and
mov
and
lods
bound
cmp
inc
xchg
fcomi
and
dec
cli
mov
xchg
xchg
sub
clc
mov
in
or
loop
cli
jmp
and
sub
adc
cmp
mov
xchg
mov
dec
pop
mov
rcll
and
cmp
adc
or
cmp
lcall
dec
mov
lret
andb
push
push
xchg
sbb
fstpl
ret
pop
mov
cld
add
sbb
testb
xchg
rcrl
mov
dec
xor
enter
cmp
sti
mov
add
gs
inc
jmp
push
stos
or
sbb
mov
jp
faddl
es
ret
lret
lock
daa
push
loop
fstpl
imul
int3
mov
test
insb
xchg
lahf
data16
xor
outsb
xlat
jp
push
adc
cmp
pop
mov
add
test
mov
cwtl
in
int3
or
test
nop
arpl
mov
pop
rolb
inc
push
jg
adc
xchg
in
push
dec
loopne
mov
inc
jnp
subl
push
into
fdivrs
sbb
dec
je
sbb
adc
cmpsl
push
inc
movsl
cmp
nop
and
inc
sbb
aam
sub
or
sub
mov
and
mov
xchg
pop
mov
test
cmp
dec
ja
jae
popa
cltd
and
xchg
les
push
cs
call
inc
push
fistpll
inc
fdivrs
sbb
jmp
sbbl
cmp
aam
pop
lods
outsl
sbb
lods
add
adc
xchg
movlps
add
pop
cmp
mov
mov
pop
nop
jo
adc
push
dec
fwait
xor
and
pop
xor
jmp
inc
pop
ljmp
push
push
cmpsl
jbe
mov
pop
add
dec
lds
or
outsb
paddd
sbb
push
jle
jecxz
test
into
das
adc
ud2
xchg
enter
or
in
lret
stos
xor
dec
xchg
dec
les
enter
push
lods
adc
mov
xchg
insl
rcr
or
mov
icebp
dec
cmp
mov
mov
lods
xchg
and
sti
mov
cmp
aaa
leave
out
icebp
xor
test
dec
add
data16
je
push
cltd
popa
inc
jno
ds
rorb
inc
dec
stos
dec
lea
add
mov
xchg
dec
jp
cs
or
popa
xor
cmpsb
sbb
mov
mov
dec
test
fiadds
sbb
mov
mov
jae
loopne
and
jecxz
nop
movsb
flds
out
dec
gs
rcrb
inc
jbe
xchg
push
das
out
jno
adc
cltd
sbb
insb
movsl
cmpsl
cmpsb
push
mov
sbbl
jmp
dec
push
pop
push
and
jmp
add
lock
repnz
adc
pop
dec
dec
cli
sahf
shlb
lfs
dec
inc
into
shlb
sahf
cmpsl
lcall
xchg
or
pop
jns
adc
mull
add
aad
pop
das
leave
test
pop
sahf
dec
mov
ret
je
ret
mov
push
mov
and
cs
mov
mov
test
pop
fmull
adcb
loop
pop
cmp
movsl
or
popa
shlb
fsubl
jnp
stc
arpl
stos
pop
cmc
xchg
inc
ja
mov
push
sub
aad
or
jnp
lret
inc
dec
pusha
cli
mov
cmp
lret
jp
insb
cmp
jb
test
mov
das
nop
lods
fisubrl
sti
ret
mov
xor
loop
aas
cmp
sub
dec
enter
or
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
hlt
stc
xor
xchg
movlps
push
rcrl
inc
xor
dec
mov
arpl
add
bnd
mov
adcb
rclb
in
movsb
cmp
aam
inc
movsl
jns
push
xor
xchg
daa
xlat
dec
jb
xchg
outsb
cmp
mov
clc
push
mov
jecxz
mov
mov
scas
repz
idiv
sbb
jo
std
cwtl
lahf
das
sti
mov
pop
sub
ret
inc
cwtl
cmp
orb
cmc
mov
aas
sub
sbb
inc
outsl
adc
inc
in
xchg
sahf
cmpsl
mov
fstl
jle
movsl
imul
daa
inc
sbb
xchg
repz
dec
gs
jbe
add
mov
cld
mov
iret
je
shll
nop
mov
cmp
pop
leave
inc
adc
out
out
add
and
jno
push
sub
sub
and
xchg
out
ss
jne
inc
pop
and
fbld
xor
mov
cmp
mov
mov
adc
xchg
mov
xchg
sbb
pop
arpl
ss
inc
je
mov
lods
andb
mov
mov
jb
js
or
out
pop
sub
dec
sbb
aad
bound
loopne
add
ud2
jb
call
leave
push
mov
imul
int3
xor
adc
cmp
mov
dec
dec
xor
mov
push
sub
xor
lret
cld
fistpll
xor
rcrl
fwait
popf
add
or
in
and
mov
push
xchg
or
inc
mov
sbb
adc
dec
add
lret
ds
add
inc
fwait
push
shrl
jle
leave
gs
jae
call
adc
daa
push
bound
push
inc
jno
xchg
jno
push
cmc
leave
xor
scas
and
cmpb
mov
mov
pop
cmp
ss
mov
leave
lahf
jb
push
clc
hlt
adc
inc
lea
inc
les
and
push
mov
pop
mov
xlat
push
es
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
push
xor
pop
xor
mov
mov
push
div
jp
fsub
cmp
int3
lds
xchg
cmc
or
mov
rcrb
pop
pop
fldt
push
js
outsb
dec
ss
push
fiaddl
fldcw
test
popa
mov
lods
lcall
sbb
in
aad
pop
jns
scas
flds
lock
mov
dec
and
cld
stos
jb
xor
icebp
inc
jecxz
cmc
ficompl
xchg
mov
lea
in
jo
push
mov
arpl
divl
icebp
jne
aad
std
pop
push
and
call
ret
cmp
mov
jmp
sbb
loope
adc
adc
or
mov
inc
mov
mov
add
mov
mov
int3
pop
aas
lods
cwtl
cmp
push
pop
aad
lds
add
ret
inc
arpl
shrb
pop
mov
hlt
sti
lods
bound
cmp
sub
cltd
in
adc
stc
divb
sbb
push
xorl
and
add
pop
call
ljmp
cli
jg
xchg
test
pushf
inc
mov
cmp
pushf
and
push
enter
dec
test
xor
adc
out
jne
pop
cmp
cmpsl
ret
push
xor
add
adc
xchg
push
inc
dec
aaa
push
xchg
mov
sbb
scas
inc
in
mov
xchg
xchg
negl
fwait
int3
mov
or
loope
insb
cmp
das
add
jnp
rclb
ljmp
and
add
add
or
add
push
fildll
lods
xor
int
inc
sub
sub
movsl
ds
icebp
stos
mov
xor
mov
mov
pusha
inc
xchg
or
mov
pop
add
adc
add
jo
mov
dec
decl
cmc
insl
hlt
add
or
mov
push
fldenv
inc
js
or
scas
in
rcl
leave
push
or
ss
dec
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
mov
adc
xchg
movlps
and
je
ret
imul
lock
xchg
mov
push
mov
imul
in
xorb
dec
cmpsl
test
sahf
repz
rcr
lds
fisubl
rcll
pop
mov
into
mov
imul
mov
fstpl
dec
xlat
repnz
cs
pop
test
sbb
mov
dec
mov
filds
jl
jp
mov
shrd
mov
cmp
and
cmp
xor
pop
jl
aaa
notb
mov
adc
scas
leave
or
int
adc
fsubrs
fs
pop
pop
insb
jecxz
and
pop
in
sbb
orb
jae
push
repz
push
packssdw
xor
sbb
leave
mov
jns
in
mov
pop
mov
loopne
repnz
add
dec
jb
ret
dec
xor
adc
in
shl
popa
jecxz
dec
push
pop
pop
jae
mov
sbb
in
int
test
pop
jbe
loopne
pop
add
add
push
repz
mov
aaa
jns
lahf
sar
aad
push
fcompp
inc
inc
dec
xchg
push
cld
mov
addr16
fisttpl
inc
add
std
std
call
mov
adc
jp
mov
cmpsl
push
lock
fistpl
xchg
in
jmp
leave
fs
or
pop
inc
lahf
enter
dec
mov
insl
cwtl
mov
dec
fdivr
in
subl
mov
add
mov
jns
das
jle
lods
data16
in
fistpl
pop
das
cmc
mov
push
and
add
out
pop
insl
pushf
mov
sti
jno
or
daa
cmp
mov
xor
or
adc
ja
fpatan
and
inc
inc
movsb
and
pop
lret
cltd
or
ffreep
pushf
lahf
or
loope
xchg
repz
sahf
xchg
adc
or
les
idivb
into
hlt
cmp
cmp
sahf
sbb
out
inc
test
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
test
add
adc
lock
nop
insb
sbb
sub
lds
repz
test
in
inc
jbe
lret
lods
xor
xor
stc
add
push
dec
pusha
mov
jns
mov
add
mov
dec
lods
mov
adc
icebp
data16
sarb
and
iret
lods
sahf
xchg
mov
xor
icebp
jno
push
adc
jae
cmp
add
insb
mov
sub
or
adc
imul
and
les
push
imul
cmp
or
and
das
sub
xchg
and
add
mov
mov
ljmp
stos
mov
es
fisttpll
cmp
std
into
fwait
jo
mov
and
adc
adcb
dec
outsl
xor
in
adc
push
or
dec
mov
push
xchg
into
and
add
xchg
or
aas
jg
adc
cmp
adc
pushf
dec
paddd
xchg
cmpsl
stc
fs
or
fwait
test
add
outsb
pop
push
xchg
or
pushf
and
int3
popf
js
sub
clc
imull
cwtl
or
stos
or
movsl
fs
stos
jl
pop
rorl
int3
ret
stos
leave
jge
fs
loopne
push
add
push
adc
je
cmp
xor
leave
call
pop
and
mov
xor
cli
mov
movsb
mov
push
adc
sbb
addl
or
or
aad
rclb
bound
jl
jg
cwtl
loope
into
jno
in
out
bound
cld
out
out
in
cmp
fstpl
jge
jle
cmpsl
in
or
lea
aad
fs
xor
add
or
add
dec
ss
and
jb
scas
idiv
adc
xchg
mov
arpl
ficoml
push
sbb
push
fadd
mov
jg
mov
daa
cmpsl
push
sub
sub
push
fistpll
adc
adc
daa
dec
adc
dec
pop
pop
xchg
stos
jg
inc
fdivrs
jle
sbb
pushf
or
or
inc
cs
ja
and
sarb
inc
mov
aad
jo
lret
roll
ljmp
imul
std
pusha
test
outsl
loopne
ds
cmc
or
sbb
pop
push
and
ss
mulb
cmpl
cmpsb
xchg
xor
pop
stos
mov
jle
push
lret
pop
test
jb
sbb
add
mov
fs
xor
or
adc
hlt
push
mov
mov
add
pop
int
cmpsb
sahf
xchg
lret
int3
loop
xor
mov
push
jg
sbb
push
lret
xor
pop
and
aad
xor
push
xchg
dec
xor
push
and
jecxz
jg
adc
outsl
pop
ja
fsts
dec
lahf
dec
jnp
pop
in
jl
and
lods
and
sar
scas
daa
sarb
sbb
xchg
rorb
xor
movsl
repz
fs
fstps
out
das
mov
subb
ljmp
dec
jge
in
dec
jns
sbb
mov
fwait
dec
pop
shrl
inc
sub
inc
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
add
out
cmpsl
adc
add
adc
adc
enter
mov
call
and
nop
in
fcoms
mov
aaa
stos
aaa
ja
out
movsl
or
dec
fistpll
int
or
movsl
inc
jmp
call
jae
aam
ss
cmpsl
roll
sbb
pop
xchg
push
inc
pop
iret
jg
fwait
pop
ficoml
sti
xor
xchg
gs
js
mov
mov
xlat
adc
xchg
mov
mov
sti
sbb
int
push
add
mov
and
iret
push
xchg
fcmove
sbb
je
enter
mov
mov
mov
inc
lahf
mov
or
mov
jnp
lret
std
xor
mov
sti
stc
push
xchg
add
icebp
xchg
and
les
add
aas
and
jne
gs
push
and
stc
jp
or
pop
pop
js
popa
cmpsl
and
je
jmp
xlat
xor
sub
aam
dec
loop
push
mov
lock
add
push
pop
lcall
fwait
rorl
add
pop
and
aas
lret
xlat
out
ret
shlb
jecxz
push
nop
lcall
lretw
cs
stos
ljmp
insb
in
add
jge
shrb
and
sub
inc
inc
jae
in
je
imul
cltd
xor
lcall
aam
xchg
dec
movsl
cmp
pop
cmp
or
mov
push
add
inc
lcall
pop
sub
or
mov
jo
mov
push
pop
sbbb
mov
stos
fidivs
push
sti
sbb
loopne
mov
inc
movsb
out
sub
mov
rclb
fs
add
enter
xor
mov
inc
addr16
jge
fcmovne
arpl
loop
idivl
push
or
mov
popf
pop
adc
div
jecxz
fadds
pop
add
outsb
adcb
mov
mov
dec
fdivrs
pop
cmc
ss
and
ss
fdivs
pop
inc
bound
jmp
pop
cmp
popa
andb
mov
pop
mov
cmc
pop
shlb
cmp
adc
je
jne
ret
repz
jae
sbb
and
lods
rcrb
cmp
adc
cmpsl
or
popa
jnp
xor
data16
hlt
cmpsb
sub
repz
dec
and
inc
out
sbb
repz
dec
xor
and
fs
sbb
mov
cmp
inc
jno
cli
inc
mov
ss
add
insb
leave
pusha
pop
repz
rclb
sub
stos
sbb
lea
repz
jns
cmp
and
jne
arpl
push
ss
lret
xor
cmpsl
mov
outsb
and
ret
jge
mov
adc
jge
jno
rcr
cmp
push
orl
cwtl
hlt
jb
or
sbb
pop
ret
sbb
test
pop
out
mov
dec
outsl
pop
outsl
aas
mov
push
bnd
clc
iret
jp
or
or
cmpsl
das
mov
push
repz
jne
js
xchg
outsb
enter
cmp
jne
ret
add
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
xor
adc
add
adc
shlb
jmp
jmp
jmp
push
xchg
mov
sbb
lret
movl
fcmovu
adc
out
jecxz
int
scas
hlt
push
jnp
arpl
test
fldl2t
mov
movsb
jbe
or
hlt
jge
xor
add
push
fistps
or
inc
add
les
pop
popa
cli
inc
adc
lret
push
add
add
loope
mov
xchg
sub
jne
rclb
fs
adc
xor
add
xor
dec
fiadds
out
dec
adc
push
lea
rol
jge
push
jg
push
xor
mov
add
movsl
cld
das
jge
daa
pop
mov
scas
and
jnp
push
inc
sub
mov
ja
sbb
pushf
cmc
hlt
test
or
jp
or
hlt
iret
jbe
sbb
cwtl
test
aaa
inc
pop
push
fs
jno
sub
fwait
daa
jo
add
mov
mov
mov
mov
testb
sahf
or
or
pop
mov
jmp
sub
fsts
jge
repz
rorl
mov
jne
inc
jo
negl
xor
call
cmp
dec
or
push
sub
inc
mov
rolb
aaa
aam
jo
xor
pusha
iret
cli
xor
outsl
mov
mov
mov
add
fstpl
divb
out
or
cltd
add
inc
inc
test
shl
decb
mov
xchg
xchg
push
xchg
icebp
sub
ja
aad
aam
dec
push
xchg
and
scas
fsubrl
movsb
lret
mov
int3
pushf
sahf
ret
add
mov
push
shl
mov
enter
xchg
aas
sahf
dec
lods
mov
lret
mov
jge
aas
jne
les
dec
leave
xchg
pushf
int3
sub
jae
push
cmp
xor
in
adc
mull
dec
jb
or
add
lahf
mov
stos
pop
jae
int3
inc
cmp
lahf
arpl
cmp
mov
or
pop
and
in
js
mov
xor
movd
pop
sbb
pushf
xchg
push
adc
rcll
dec
mov
subb
enter
ljmp
mov
adc
lods
add
xorb
jae
ja
xchg
jecxz
inc
add
nop
daa
mov
adc
shll
and
cmp
mov
adc
and
mov
test
mov
or
in
mov
movsl
dec
xchg
mov
jge
cmp
xchg
jns
sahf
insl
xchg
leave
or
fbld
push
pop
or
lods
insl
adc
xlat
arpl
imul
inc
aaa
dec
and
lcall
in
lds
add
or
popa
or
clc
cli
sbb
icebp
sub
push
fiadds
loope
jb
pop
mov
cmc
xor
jge
lds
mov
push
incb
scas
ret
inc
xor
lret
mov
xor
dec
mov
sub
sub
fwait
daa
dec
dec
loope
push
sbb
scas
addr16
outsl
push
dec
scas
aad
loopne
jp
ret
stos
jecxz
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
mov
popf
adc
jne
adc
rolb
loope
out
movsl
jmp
mov
xchg
or
xchg
cli
imul
jp
lret
adc
in
in
daa
inc
inc
ds
mov
fdivl
mov
sar
or
mov
fdivrl
loop
ss
push
jnp
mov
int3
fsts
lcall
xor
das
xorb
je
pop
dec
cmp
xor
push
popa
sbb
add
popa
int3
xchg
fdivl
adc
inc
inc
dec
inc
rclb
cmp
pop
and
cmp
mov
add
enter
pop
xor
dec
sbb
enter
pop
lret
xchg
mov
and
xchg
jle
aam
or
pop
das
and
jg
sub
pop
pop
mov
in
push
aas
add
jge
xchg
mov
push
loopne
mov
dec
jle
adc
mov
filds
inc
enter
pop
fisttps
add
mov
fcomi
push
mov
int3
movsl
xchg
out
pop
sahf
shr
push
aaa
add
sbb
mov
sbb
xchg
fnstcw
test
inc
xor
out
fldl
iret
mov
sub
mov
ja
or
leave
sub
fdivs
out
lea
jns
movsl
je
iret
xor
lods
mov
sub
xchg
imul
pop
sub
mov
popa
xchg
pop
movsl
or
loopne
and
flds
add
cs
scas
pushl
sbb
ret
ret
inc
jecxz
xor
xchg
sub
and
jmp
add
cmp
lret
icebp
lcall
xor
pop
sbb
sbb
fiaddl
cmc
adc
mov
lret
cs
mov
scas
xor
mov
imul
mov
pushf
jmp
mov
xchg
into
add
inc
cmp
mov
inc
or
push
and
js
pop
jg
and
pop
lds
mov
or
repz
sbb
imul
push
cmpl
mov
out
jle
pop
out
gs
into
pop
cmp
dec
in
aam
and
xchg
bound
lahf
ja
movsl
push
inc
add
sbb
adc
or
js
addb
aaa
cmp
and
ds
xorl
add
jle
add
test
cli
enter
pop
cmp
sub
jg
sub
cmp
push
dec
js
dec
into
lcall
inc
xor
rcrb
push
int3
sbb
mov
enter
dec
test
outsb
and
cli
in
pop
mov
push
xchg
xchg
jb
jno
mov
cmp
repz
dec
ljmp
movsl
pop
mov
pop
mov
and
cmp
subl
or
les
es
lods
push
rcr
outsl
adc
mov
inc
add
jg
icebp
sahf
stos
pop
jmp
shl
inc
popa
pop
jmp
outsl
adc
or
xlat
cwtl
mov
inc
int3
xchg
shr
add
pusha
rorb
mov
fsubl
and
xchg
xor
cmp
and
sub
push
mov
mov
movsb
test
xchg
ss
div
pop
adc
cmpsl
scas
pusha
daa
test
pop
iret
pop
subb
push
punpckhwd
sub
xor
fsts
mov
out
mov
inc
and
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
daa
or
jne
adc
mov
enter
arpl
push
mov
push
jno
and
repz
dec
dec
testl
xchg
pop
push
sbb
add
mov
mov
sbb
pop
enter
jo
inc
mov
scas
jo
and
addr16
jae
mov
imul
pop
xchg
push
lock
mov
mov
mov
sub
adc
out
out
daa
dec
xchg
add
add
in
inc
ficomps
sarl
mov
repnz
fcompl
mov
imul
mov
mov
cmc
push
lahf
xor
mov
mov
mov
push
pop
mov
aad
dec
addps
stos
flds
cli
mov
push
inc
sub
add
adc
jl
mov
mov
pusha
adc
sarl
jecxz
lea
loope
mov
mov
mov
dec
xchg
push
fs
inc
das
dec
loop
sbb
push
arpl
sbbb
mov
imulb
push
inc
add
shl
or
mov
push
out
adc
jno
shrl
lea
xor
aaa
out
imul
mov
jmp
and
inc
push
xor
push
mov
and
cmp
cli
push
loope
add
mov
jnp
sbb
je
mov
push
emms
sub
xor
mov
in
and
stc
popa
or
cmp
fisttpl
jb
fimull
ljmp
sub
and
in
mov
adc
and
icebp
ret
nop
jecxz
lahf
and
lahf
push
je
pop
mov
fsubrl
hlt
mov
xorb
push
lret
and
dec
push
pop
lock
hlt
mov
orl
sub
das
cmpsb
inc
jmp
xor
mov
lahf
lea
mov
sub
mov
ret
push
insl
xchg
mov
addb
data16
in
mov
lret
pop
ljmp
add
cli
mov
xchg
and
int
fs
dec
sub
sbbb
js
adc
pop
inc
fsubr
xchg
aam
fs
out
mov
stos
lea
outsb
aad
cmc
adc
hlt
mov
call
aas
xchg
std
xor
add
jo
ljmp
mov
push
and
pop
roll
sub
dec
push
or
mov
inc
push
cmp
fucom
test
or
xchg
in
push
mov
cmpsl
push
xor
mov
xchg
out
dec
jp
mov
push
mov
adc
mov
or
xor
int
mov
or
lahf
dec
lret
pop
cmp
dec
add
stos
xorb
adc
enter
fwait
inc
sahf
in
xchg
xor
stc
sahf
adc
sbb
push
std
int
pop
mov
inc
add
jecxz
stos
xor
adc
adc
hlt
mov
es
pop
xor
inc
cli
mov
mov
insb
into
or
sbb
dec
ret
sub
mov
cmp
or
rorb
sarb
lret
das
hlt
mov
xchg
and
lcall
data16
or
popf
xor
adc
pop
mov
ss
xor
ss
cmp
mov
sub
sbb
pop
dec
dec
jecxz
sub
cltd
lret
int3
xor
sub
pop
sub
dec
pop
mov
inc
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
shl
stos
orl
adc
scas
sbb
sub
cmp
add
push
xor
or
or
cmp
in
jmp
cmpsb
dec
push
jecxz
mov
lods
orb
imul
xor
or
mov
sbb
das
sub
aaa
dec
jnp
dec
sbb
lcall
je
lahf
loope
orl
loope
add
fwait
sahf
leave
out
sbb
or
insl
iret
int
shrl
test
imul
mov
sub
cmp
aam
shll
dec
mov
fbld
jge
les
in
jo
mov
arpl
ja
testl
mov
sbbb
stos
cmpsl
in
cwtl
push
mov
add
pavgb
mov
add
pusha
mov
je
out
loope
sbb
les
loop
add
adc
mov
pop
sar
in
insl
inc
adc
push
scas
aad
cmpsl
cmp
inc
fcompl
dec
pushf
jnp
aas
sbb
data16
js
aaa
insb
insb
cmp
jmp
mov
dec
nop
jg
imul
xor
jp
push
repnz
ss
mov
jo
jb
cld
stos
add
jg
ret
xor
jne
adc
xchg
pop
inc
js
les
sub
nop
repz
out
daa
jne
fsubl
mov
dec
lods
cmp
out
mov
aaa
nop
jecxz
pop
adc
jge
inc
fldt
cmc
mov
sbb
push
mov
push
repnz
ficoml
sti
cmp
cmp
shll
mov
aam
and
in
adc
and
cmp
lods
test
cmp
sbb
xchg
outsl
sbb
decb
jns
mov
sbb
data16
gs
rorb
xchg
negb
xlat
adc
mov
pop
stos
inc
cs
jg
fsts
mov
imul
out
push
dec
in
sub
aam
loop
sub
add
decl
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
movsb
push
dec
xchg
adc
movlps
cmp
mov
sub
sti
xor
adc
int
scas
imul
jbe,pt
aam
shl
clc
pop
shll
pop
xchg
dec
inc
jne
shrb
bound
stos
push
push
out
lock
mov
aaa
xchg
gs
int
xor
aam
dec
aam
aad
and
enter
ss
cltd
cmc
icebp
jae
out
repnz
pop
xor
lret
push
aad
push
mov
cmp
adc
add
cmp
push
adc
xchg
pop
cmp
test
aam
dec
jo
int
sbb
cld
sub
scas
push
and
aaa
fisubrl
jns
cmpsb
clc
scas
or
stos
out
mov
into
mov
shlb
sbb
icebp
nop
ds
push
movsb
add
inc
in
sahf
fisubs
stos
xchg
mov
fwait
cmpb
lock
cmpsb
or
loope
sub
cmp
js
out
iret
scas
out
ljmp
cmp
mov
add
ljmp
icebp
mov
int3
insb
outsl
nop
pop
jl
sarl
adc
mov
mov
sub
adc
sbb
test
ljmp
imul
sbb
cmc
push
rolb
xlat
xchg
and
mov
mov
xchg
ds
call
push
repnz
test
mov
jp
jge
movsb
loope
andl
mov
cltd
mov
lea
test
lret
or
addr16
jns
stos
aaa
out
push
pop
sahf
xchg
xchg
add
sbb
gs
cmpsl
cli
adc
add
movsb
sbb
mov
mov
stos
xchg
loopne
aas
cli
or
arpl
sbb
das
test
mov
leave
inc
sbb
out
ret
loope
jb
lock
inc
fs
loop
sahf
hlt
xor
js
into
push
inc
mov
mov
loop
ret
test
mov
xchg
insl
sti
add
fs
lods
or
in
data16
mov
mov
hlt
lods
jnp
pusha
jno
pushf
mov
jo
mov
inc
xchg
or
mov
inc
in
lds
and
andl
pop
insb
jg
jmp
mov
aas
sbb
push
inc
add
test
add
add
cli
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
aad
stos
sub
adc
decb
adc
adc
movsb
sbb
cmp
insl
push
mov
and
lret
jno
jo
aad
pop
out
push
rcrl
imul
sbb
imul
ret
movsl
jecxz
adc
test
xchg
gs
aam
xor
iret
and
xchg
mov
in
mov
jle
test
dec
not
mov
push
lret
icebp
lcall
jmp
sbb
sub
sbbl
mov
iret
cmpsb
xchg
jnp
sub
jbe
in
mov
mov
mov
lret
pop
mov
outsb
pop
lahf
add
les
test
adc
xor
pop
sbb
mov
xchg
adc
loope
inc
not
xchg
push
pop
loope
dec
dec
jnp
and
shll
push
push
add
repnz
cltd
and
in
fcomps
scas
jp
inc
aad
insb
or
push
xor
std
pop
xor
imul
hlt
jmp
insl
insb
add
int3
mov
mov
movsl
inc
sbb
inc
mov
lods
pop
nop
jge
push
scas
movsb
adc
shrb
notl
inc
lods
outsb
faddl
popa
insl
and
push
inc
decl
stos
dec
test
xor
jmp
ret
mov
mov
addr16
dec
shr
cltd
xchg
cwtl
push
add
andb
inc
popa
or
mov
scas
movsl
ja
and
sub
lret
sub
jg
out
jo
add
outsb
iret
xchg
fs
outsl
xchg
addr16
mov
push
mov
cmc
movsb
xor
mov
outsb
outsb
fidivrl
test
xlat
mov
repz
pusha
sub
scas
jno
std
subl
adcb
loopne
sbb
add
jmp
dec
push
movsb
cld
les
fstps
adc
xchg
cld
pop
cmpsb
push
ja
pusha
or
clc
mov
mov
mov
add
dec
jno
test
jns
xor
mov
sbb
hlt
mov
out
adc
mov
mov
push
mov
mov
push
insl
imul
mov
das
pop
js
sub
mov
dec
pop
enter
pop
mov
mov
xor
pop
aas
jae
mov
jns
inc
cmpsl
cmpsl
fdivrs
aas
mov
push
jecxz
xor
push
push
or
mov
test
insb
shll
clc
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
adc
jnp
adc
movlps
roll
sbb
pushf
leave
xchg
mov
mov
adc
sub
repz
sbb
adc
fwait
pop
leave
movsl
std
mov
in
cld
imul
aad
in
inc
or
add
popa
lods
lahf
adc
ret
test
jb
inc
ficoms
pop
or
inc
fmull
mov
mov
mov
cmpsl
add
sub
inc
cmp
fldenv
movsl
pop
lahf
lock
cmpsl
out
push
imulb
lret
sub
push
push
xchg
js
scas
mov
mov
sbbb
ja
cmpsl
nop
es
call
and
sbb
bound
cmc
xchg
sbb
iret
call
loope
movsb
imul
les
push
mov
push
xchg
sbb
pop
xorb
test
mov
je
cmp
faddl
iret
cmp
je
push
xlat
sbb
push
mov
inc
leave
jno
sbb
fcoml
mov
pop
sub
push
mov
pop
andnps
push
sarl
mov
pop
popf
adc
adc
or
cmp
adcl
sub
sti
mov
sbb
sarb
aaa
ljmp
fnstsw
out
add
lahf
jae
int3
xor
and
test
cwtl
test
add
fsubrl
xchg
fisttpll
dec
ret
or
aaa
inc
pop
push
fisttpl
dec
outsb
sbbb
mov
jne
hlt
cmp
and
inc
mov
or
pop
and
xchg
rorb
dec
mov
xor
sahf
mov
nop
icebp
and
mov
aam
rclb
es
ljmp
orb
bound
bound
dec
sbb
movsb
imul
divl
mov
lea
stc
pop
cmc
jbe
xchg
pop
pop
popf
dec
push
je
mov
fisubl
mov
sub
pop
sub
lret
shr
in
adc
add
mov
insl
shl
cmp
in
int3
jecxz
xchg
jg
add
sub
jl
test
daa
pop
xchg
insl
ret
cs
push
pop
in
sbb
mov
jbe
cmc
test
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
jns
lods
clc
ja
adc
movlps
ja
dec
xor
pop
leave
mov
add
pop
outsb
lret
and
ret
pop
xor
and
leave
es
test
mov
nop
int3
sub
into
push
in
test
jp
push
cmpsb
xor
scas
and
bound
inc
lret
jns
sub
xor
mov
jnp
icebp
notb
sbb
in
lcall
leave
test
dec
inc
dec
xor
aam
inc
xchg
or
mov
pop
rcll
je
fsubs
aaa
and
in
sbb
jp
ss
cmpsb
adc
add
cmp
notl
jns
push
mov
or
outsb
xchg
out
sub
mov
repnz
cmp
pcmpgtd
jl
stc
mov
aad
add
cli
ret
call
and
mov
mov
das
push
xchg
mov
loope
xor
pop
push
lcall
test
push
lret
jge
xor
jle
and
cmp
push
sarb
or
xor
cli
in
jnp
and
outsl
shll
sti
sub
sub
jbe
shll
or
loope
xor
neg
fsubrl
push
add
out
leave
inc
std
adc
cli
jbe
push
push
dec
xlat
sbb
sbb
repz
ds
xchg
dec
int
sub
jnp
fimuls
sub
rclb
xchg
or
cs
jne
lods
dec
inc
xlat
add
mov
std
mov
push
jne
popa
fmuls
cmpsw
lds
jg
je
mov
test
loop
or
adc
daa
push
jge
add
loopne
or
mov
rclb
or
or
xchg
sub
mov
roll
aam
inc
lret
push
mov
inc
push
shrb
push
pusha
mov
mov
cmpsl
jae
fwait
lods
aad
arpl
xor
scas
or
rcl
adc
aam
inc
leave
test
xor
jae
popa
sti
insl
push
stos
into
adc
jbe
cmc
or
sub
jb
mov
inc
test
les
dec
stos
notb
mov
popf
inc
negb
inc
fstl
pop
movsb
or
insl
loopne
add
mov
out
shl
call
mov
jmp
js
cmc
repz
sub
nop
dec
xchg
js
jne
adc
movlps
jmp
mov
arpl
push
lock
jno
xlat
fsubrp
mov
mov
fiadds
pop
cwtl
add
push
repnz
xchg
dec
cmp
mov
sbb
xchg
loop
imul
stos
pop
in
sar
int3
scas
or
inc
inc
jg
icebp
sahf
jle
test
cltd
pop
popa
jmp
sbb
ss
ret
jno
inc
add
ret
pop
mov
ds
std
dec
les
jns
nop
mov
lods
sub
dec
lods
in
pop
push
data16
shlb
fidivl
shr
jecxz
insl
sub
xchg
inc
push
cmp
lahf
cld
pop
mov
repz
ljmp
lcall
pop
lods
lret
mov
dec
xor
xor
lock
mov
inc
stos
sub
scas
mov
fs
xchg
mov
jb
mov
sbb
jp
pop
push
mov
push
shll
test
mov
pop
jg
inc
inc
stos
test
and
add
dec
das
xchg
jge
mov
insl
imul
lods
inc
push
fildll
push
jle
addr16
insb
xor
ljmp
push
idivb
shr
or
sub
or
addl
mov
popf
in
cmpsl
mov
xor
cmc
jge
xchg
jbe
or
xor
call
out
arpl
xchg
mov
mov
or
sbb
cmp
mov
push
push
mov
adc
incb
cmp
xor
pop
insb
mov
mov
push
out
sub
sbb
pop
jmp
outsb
cli
sarl
mov
xor
pop
pushl
int
add
mov
test
shlb
inc
test
xor
push
cmpsb
xor
xchg
iret
adc
mov
ds
outsb
xchg
cli
fidivrl
out
jno
cs
test
dec
daa
in
push
jle
fcomp
jl
fidivrl
call
xchg
mov
push
jmp
xchg
add
call
sub
mov
inc
aas
ss
mov
add
push
jp
push
shrl
mov
add
loopne
mov
add
cmp
jo
sub
lret
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
lods
ret
jno
adc
movlps
scas
push
xor
in
jo
inc
bound
hlt
mov
loop
jp
cmc
aas
dec
mov
push
push
shlb
mov
sti
jbe
in
or
std
xchg
jecxz
outsb
test
adc
push
into
pop
sbb
add
and
stc
loop
pop
sbb
insl
lds
int
xor
jno
mov
sar
cmp
add
sbbl
jns
dec
mov
jge
jg
jp
fnstcw
push
xchg
cmp
lret
addb
ds
push
mov
dec
xor
cmp
pop
mov
std
push
inc
test
jno
arpl
and
mov
inc
xlat
imul
add
leave
cmpsb
cmpl
iret
outsb
push
mov
adc
movsb
testl
es
sub
pop
in
cld
mov
pop
stc
cmp
push
mov
fs
xor
or
stos
js
leave
and
rorl
shl
outsl
mov
pushf
lods
ja
test
into
xor
mov
push
add
jmp
jp
out
fwait
sub
mov
dec
in
fs
or
scas
loop
lahf
adc
into
mov
mov
sub
sahf
int
mov
inc
xor
jmp
ret
out
sbb
cli
shrl
pop
jno
xor
mov
adc
ss
inc
xor
inc
jne
adc
gs
jnp
loop
pop
mov
add
mov
ss
repnz
test
call
std
addb
outsb
sub
jbe
shlb
jnp
push
push
lret
icebp
mov
dec
lret
xchg
pop
pop
loope
cld
push
pusha
test
mov
or
lret
push
pop
xor
xor
jmp
push
pop
iret
cmp
cmpsb
dec
in
clc
clc
aad
xchg
fs
pop
in
out
cltd
xchg
adc
and
mov
ss
std
in
xchg
out
data16
add
stc
mov
jo
sbb
mov
test
fsubrs
jnp
outsb
dec
dec
sub
lods
rcll
add
inc
push
push
push
or
add
push
dec
mov
mov
pop
test
sbb
xchg
lret
into
pop
data16
dec
inc
sbb
popl
mov
push
sarl
adc
mov
aam
rcrb
ret
inc
xchg
insb
adc
cld
push
mov
repnz
or
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
push
adc
decb
adc
mov
and
dec
sub
fucom
fistps
jl
mov
iret
in
loop
xor
xor
mov
imul
jmp
cmc
int
addr16
jp
stc
bound
xchg
insl
notl
scas
inc
std
pushf
mov
mov
add
shl
xchg
mov
mov
and
pop
jge
mov
inc
test
pusha
test
xor
and
stc
xchg
fistpll
addr16
sub
adc
in
pop
rcrb
jbe
pop
sbb
xor
lock
ds
fucom
fisubrs
loopne
or
sub
pop
dec
ficoms
or
xchg
mov
fiadds
mov
bound
cmp
ja
cmc
shl
sbb
jmp
test
inc
inc
jae
cli
xchg
lock
lock
je
jnp
adc
sbb
cli
or
and
ljmp
int
push
mov
push
ret
add
rcr
pop
push
in
add
sub
icebp
add
xchg
lahf
or
xor
rcr
or
pop
mov
je
pushf
sub
negb
cmp
cmp
mov
pop
sbb
dec
mov
jmp
js
or
mov
insl
fsts
fdivs
xchg
xor
pushf
adc
addb
adc
stos
call
cwtl
loopne
adc
cmp
xlat
pop
add
add
int3
lea
mov
aaa
adc
aam
add
push
mov
dec
jo
stos
dec
fidivs
dec
test
mov
setns
xor
or
sub
mov
rolb
in
cs
scas
cli
loopne
add
fdivl
mov
xchg
scas
mov
inc
jecxz
cvtps2pd
push
cmp
scas
neg
lods
into
push
inc
inc
movlhps
cmc
hlt
sub
fxch
pop
es
sbb
and
mov
or
dec
lcall
loopne
mov
mov
test
push
dec
lahf
aad
ds
les
lods
gs
xchg
cmp
add
fbstp
pusha
and
addr16
dec
jnp
mov
push
inc
mov
leave
out
mov
adc
mov
adc
int
and
fadds
push
das
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
push
mov
adc
decb
adc
inc
sbb
aam
sub
push
in
xchg
sahf
mov
scas
push
mov
outsb
or
xchg
movsl
stc
jge
int3
ret
rcrl
sub
dec
setae
xchg
neg
add
dec
mov
loope
loope
ret
push
data16
aas
adc
ss
in
loopne
je
mov
inc
mov
xor
stos
or
mov
lock
mov
mov
int
xlat
popa
mov
imul
add
inc
aad
push
mov
lret
mov
aas
int
lret
lret
xor
dec
sbb
popl
sbbb
orb
sub
insl
int3
lahf
mov
in
sub
push
lea
xlat
leave
mov
lods
outsl
mov
aad
inc
shr
cmc
mov
mov
fs
xchg
movsb
loop
popf
out
pop
lea
fists
pop
cltd
sbb
in
push
inc
sub
mov
and
popa
mov
int
aam
stos
and
inc
xor
mov
pushf
xchg
adc
mov
lock
dec
sar
rol
or
push
sti
and
fiaddl
jb
adc
or
add
sub
adc
jecxz
inc
xchg
pop
ret
loop
shlb
outsb
movsl
mov
fwait
int3
jp
or
xchg
push
test
jno
dec
mull
data16
push
pop
and
test
inc
pop
aam
fwait
xchg
jne
push
jecxz
pushf
jle
cltd
push
outsb
loopne
mov
inc
stos
pop
fcomp
ss
xchg
rorb
orb
mov
insl
xchg
dec
adc
and
lcall
mov
ret
call
dec
or
inc
imul
jecxz
int3
adcb
ss
jb
sub
mull
pusha
mov
pop
adc
dec
adc
add
push
dec
cmp
fsubrs
lock
imul
pop
sbb
add
pop
cmc
movsl
push
jno
std
aam
xorl
lcall
fisttps
mov
fmuls
push
sbb
leave
inc
stc
scas
out
mov
les
out
push
sbb
push
jb
xor
imul
dec
dec
adc
test
mov
sub
das
aam
aam
sar
push
dec
or
jo
push
fs
inc
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
out
js
popa
adc
decb
adc
jb
xor
mov
mov
fcomps
lcall
add
lahf
shrl
movsb
cmp
xchg
imull
aad
push
jb
in
pop
xchg
jno
pop
out
lock
xchg
jnp
xor
xor
push
pushf
sbb
and
mov
stc
repnz
jge
dec
inc
rclb
jmp
repnz
sub
push
mov
and
xor
test
icebp
pop
mov
rcl
mov
and
fucom
clc
stos
mov
ljmp
movsb
int
mov
adc
push
jmp
gs
pushf
hlt
scas
sahf
or
sti
add
pop
ret
in
mov
inc
test
lea
adcb
inc
dec
pop
mov
pop
xchg
mov
stos
mov
out
jmp
sbb
or
or
lcall
int
gs
rcpps
jmp
add
mov
push
test
pop
in
hlt
inc
pop
das
push
mov
imul
sbb
xchg
mov
les
lea
adc
dec
out
cwtl
je
ficompl
pop
repz
jno
arpl
rcrb
nop
push
addr16
pop
xlat
notb
push
push
xorl
xor
lods
inc
jae
sub
push
adc
pop
mov
jle
lods
repz
xchg
cmp
lock
in
mov
sub
jmp
jb
ficoms
sub
insl
push
sub
push
cmp
ljmp
mov
frstor
pop
sub
push
cli
out
fistl
mov
fisttps
push
push
push
iret
jb
fs
add
mov
sbb
xchg
call
mov
push
adc
enter
xchg
cs
popa
mov
es
add
xor
lret
mov
les
cmp
test
ja
sub
pop
adc
and
adc
mov
data16
jne
out
sub
sarl
xchg
loop
cltd
inc
xor
add
js
adc
sub
mov
ss
inc
cmpsb
in
inc
aam
cwtl
mov
cltd
jg
test
xor
lret
pop
push
cli
loopne
iret
adc
add
xchg
in
insl
aaa
adc
xchg
sub
arpl
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
js
pop
adc
decb
adc
push
sbb
or
sbb
mov
push
or
inc
jp
sbb
std
sbb
test
xchg
inc
inc
jne
out
inc
fsubrs
lcall
fists
or
xor
adc
push
sub
in
aaa
mov
lret
shll
push
mov
imul
sub
jmp
std
aaa
mov
cmp
cwtl
int3
inc
add
scas
xchg
push
comiss
add
test
add
dec
or
mov
push
xor
popa
jg
insl
repnz
mov
cltd
inc
cmpsb
dec
daa
mov
mov
mov
test
jb
cmc
or
mov
mov
fldl
pop
mov
pop
dec
ja
pushf
sbb
sahf
sub
arpl
int
movsb
scas
test
or
lods
adc
sbb
or
or
pusha
or
add
imul
and
stos
enter
adc
fwait
mov
movsb
pop
rcll
leave
dec
aas
dec
xchg
scas
mov
mov
push
pop
lahf
stos
leave
enter
adc
ret
jbe
jle
mov
adc
bound
daa
xchg
cwtl
into
loope
push
add
pushf
in
push
mov
lahf
insl
in
cmp
fsubl
pusha
fsub
leave
sbb
in
les
or
int3
and
loope
jne
mov
sbb
fwait
movl
jmp
cmpsl
adc
ja
lret
jl
aad
mov
inc
movzwl
sbb
add
mov
stc
mov
fwait
sub
fwait
add
lret
dec
orl
sub
xor
rorb
sbb
mov
gs
or
push
sti
cmp
cs
adc
cmp
dec
inc
fs
push
xor
aam
nop
in
inc
xor
mov
push
add
push
rclb
jmp
shlb
or
loope
iret
rcrb
push
es
jns
mov
mov
das
jg
inc
pushf
inc
pop
dec
mov
or
in
dec
sub
jp
adc
mov
movsb
je
icebp
dec
je
bound
data16
loope
jmp
jnp
push
push
out
int3
and
inc
cmpl
adc
inc
stos
loope
or
ja
lahf
or
movsl
push
xor
cmpsb
pop
fistpl
xlat
sti
or
fdivrs
jb
ret
sbb
mov
testb
dec
decl
cmp
shr
add
add
bt
cmp
test
push
adc
decb
adc
xchg
sti
shr
roll
mov
dec
fwait
test
mov
rcl
pop
and
mov
aam
cmp
movsb
mov
push
pop
fs
dec
pop
jg
sbb
test
add
bound
lret
dec
retw
xchg
fstp
pushf
std
mov
sub
dec
sub
dec
cmp
sub
jo
push
pop
sbb
xchg
call
ds
les
xor
inc
iret
addr16
mov
cmp
xor
dec
and
iret
js
iret
xchg
add
outsl
aad
cmp
and
lret
inc
out
cmp
or
rcrl
fisubrs
pop
jg
pop
addb
sbb
add
nop
mov
push
cli
jp
push
sbb
add
popa
pusha
sub
mov
cmp
js
insl
dec
int3
nop
sti
dec
jecxz
mov
mov
add
ja
aam
dec
push
or
aaa
adc
xchg
pop
and
mov
icebp
loope
rcrb
mov
sbb
aas
lret
sbb
dec
push
xchg
add
xchg
push
sar
mov
outsl
xor
cs
jle
les
jle
ss
outsl
jo,pt
aam
mov
push
mov
clc
ljmp
adc
jp
and
mov
cmp
mov
and
sarl
or
cs
push
mov
sti
adc
xchg
cli
rcll
or
lcall
daa
jae
sbb
dec
pop
in
add
pushf
ret
pusha
sbb
popa
xor
xor
lods
ret
sbb
mov
pop
movsb
pop
pop
nop
sbb
aad
test
and
xchg
in
arpl
push
xchg
orl
call
fs
xor
test
push
mov
adc
and
into
xchg
repz
ja
jmp
cmp
ficompl
mov
popf
cli
push
stc
lret
xchg
aam
ljmp
cwtl
mov
jecxz
push
scas
sub
int
movsl
dec
cltd
xor
fdivl
cmp
fstpt
sbb
fidivrs
cltd
jo
xchg
sbb
mov
das
lret
in
enter
pop
sbb
enter
inc
lods
mov
mov
adc
lahf
mov
rcrb
mov
add
lret
js
jo
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
pop
loop
daa
dec
adc
decb
adc
sbb
sbb
pop
test
leave
mov
xchg
sbb
push
xor
ret
inc
jge
xchg
daa
out
cmp
inc
xchg
insl
sub
loope
sahf
ds
add
sub
stc
lea
jne
mov
imul
hlt
mov
and
test
ficompl
inc
scas
cmp
mov
jle
jo
mov
fadd
jns
xor
pop
ret
daa
jne
popa
movb
jge
push
add
sahf
jge
rolb
mov
xchg
or
push
jp
push
addr16
notb
test
stos
addr16
push
mov
mov
ficompl
sub
test
and
rclb
jecxz
fwait
xchg
or
jle
mov
push
clc
aaa
xchg
sbb
sub
cmp
testl
cwtl
jl
out
jmp
je
subl
ret
add
push
cmpsb
mov
inc
sbb
xchg
pusha
mov
or
fisubl
jb
lods
lahf
sbb
push
inc
xchg
inc
roll
push
mov
movsl
jecxz
nop
ret
std
mov
cli
or
nop
test
fistpl
push
je
mov
jmp
outsl
push
dec
test
inc
adc
out
rolb
dec
push
xchg
int
aam
jle
sbb
into
inc
dec
sbb
sbb
leave
fimull
cs
pop
bound
enterw
add
add
xacquire
push
test
movl
cmp
mov
xchg
mov
xchg
movl
cwtl
pop
std
and
adcl
mov
mov
inc
neg
pop
enter
movsb
shrb
ss
xchg
icebp
icebp
or
scas
mov
xor
js
dec
and
cmc
movsb
das
jnp
aaa
daa
push
xchg
orl
jl
pop
gs
mov
cltd
sbb
pop
sbb
sbb
dec
inc
les
mov
jae
jle
and
in
cmp
adc
outsl
cmpb
and
jl
lcall
lahf
mov
jmp
imul
ret
daa
jge
ja
or
xchg
repnz
xchg
or
sub
popa
enter
xchg
sti
lds
mov
add
pop
mov
xor
push
test
dec
mov
lock
push
xchg
test
mov
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
mov
adc
movlps
sbb
xchg
xor
es
add
test
fsts
and
xlat
popa
or
jnp
cmpsb
test
aad
pop
sub
nop
or
ret
rcll
gs
insb
inc
fisubs
popa
jb
dec
ss
mov
cwtl
xlat
ret
paddsw
push
out
ljmp
scas
and
mov
shl
ds
pop
stc
mov
mov
dec
ds
mov
fsubs
cli
jl
popf
mov
push
and
scas
sbb
jns
notl
sub
int
lea
daa
push
add
mov
push
dec
fdivr
push
lret
out
add
lcall
fbld
inc
mov
dec
aam
test
inc
aaa
pop
lret
mov
addl
xchg
pop
imul
adc
sti
roll
in
dec
stos
outsb
into
and
xor
aas
xor
lods
mov
std
in
mov
adc
lods
data16
in
fldenv
clc
add
mov
pop
out
xor
scas
stos
jno
pop
adc
das
pop
imul
push
stos
or
add
movsb
sahf
mov
dec
mov
jg
jae
cmp
sbb
sbb
dec
mov
push
or
xchg
aas
cmc
nop
xor
enter
jbe
xchg
loop
sbb
ss
jns
das
leave
cmovae
sbb
cmp
xchg
add
enter
sub
mov
insb
pop
scas
popf
add
jae
sbb
push
lods
sbb
inc
shl
mov
bound
xor
jbe
data16
mov
in
add
and
cmp
cmp
ret
js
inc
jne
hlt
lcall
imul
jmp
sahf
pop
arpl
out
cmp
stc
mov
mov
inc
xor
jg
inc
ret
xor
std
shlb
sarl
sbb
push
mov
sbb
sarl
dec
subps
jmp
inc
cmp
jne
cmpsb
jp
xchg
aaa
xor
pushf
mov
std
dec
sub
pop
jne
nop
cmp
idivb
pop
inc
sub
sub
cmp
into
lods
or
push
mov
test
mov
lods
outsl
cwtl
sbb
out
leave
inc
stos
mov
xchg
add
adc
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
ja
pop
loop
ret
les
xchg
inc
mov
and
stos
in
and
pop
mov
stc
sub
out
aaa
ret
xchg
jg
adc
cmp
cwtl
push
mov
sbb
push
insb
flds
ror
jae
std
cmp
mov
mov
in
rcrl
decl
xor
pushf
mov
inc
fcomps
xor
add
jecxz
pop
sbb
inc
dec
loop
cmp
push
in
inc
das
stos
je
lock
xchg
popa
cmp
mov
scas
sbb
cmp
xchg
mov
out
xchg
mov
sahf
shlb
clc
in
push
mov
inc
jecxz
movsl
jl
pop
sub
mov
sub
ljmp
int3
rcrb
insl
out
xchg
cmp
cmp
cmp
insl
fiaddl
sub
push
dec
ljmp
pop
sbbl
fistpll
addl
subb
jo
xor
aad
inc
sarb
orb
shl
jl
inc
out
sub
sub
sbbb
test
inc
lods
push
add
add
adcl
xor
inc
nop
pop
loop
movsb
insb
sub
lret
lcall
push
ret
scas
xor
push
adc
sub
dec
ret
jle
xchg
ljmp
and
lods
movsl
jne
aaa
cmp
incb
stc
in
push
rcl
iret
int
dec
push
aad
push
sub
es
mov
sub
ja
ds
sbb
lea
cli
add
sbb
repz
inc
cli
imul
pop
jo
aam
icebp
jp
outsl
pop
dec
xor
sbb
dec
stos
xchg
push
scas
sbb
push
scas
mov
mov
dec
lret
cmc
push
jnp
cmpsl
xor
fdivl
xor
data16
roll
add
mov
mov
cmp
xchg
pop
daa
or
mov
push
pushf
jne
stos
fistps
xor
mov
and
adc
test
mov
push
clc
fwait
xlat
inc
ss
cmp
mov
cs
xor
mov
dec
negb
and
cmp
adc
mov
scas
jg
cmp
push
fidivl
jp
and
fildll
fcomp
add
push
lods
clc
fistl
mov
mov
cmp
sub
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
mov
bound
lds
jecxz
jbe
gs
int
jne
jne
insl
clts
mov
clc
lret
xlat
pop
jge
pop
mov
fcmove
add
add
add
xchg
push
scas
mov
adc
repnz
push
cmp
adc
mov
in
jns
add
ljmp
xlat
cmp
cmp
cmp
int
mov
pop
rcrb
inc
mov
call
mov
daa
jae,pt
dec
outsl
cmpsl
cmc
addr16
cmp
mov
xlat
push
mov
mov
jb
insl
addr16
pusha
loop
bound
or
hlt
sbb
loop
pop
test
scas
insb
adc
ret
cli
mov
sbb
mov
mov
pop
push
mov
or
xchg
or
sbb
xor
sbb
shrl
and
mov
add
cmp
lods
adc
add
push
lds
xchg
fsub
js
call
ret
jl
xchg
rorb
add
outsb
fnsave
cmp
js
add
or
iret
jae
rcr
jb
inc
adc
in
enter
cmp
fs
leave
pop
dec
in
xchg
add
imul
repnz
or
and
out
call
imul
sarb
ret
inc
jmp
int
add
add
cmpl
mov
add
and
cmpb
es
jbe
jbe
daa
push
fsubl
jg
adc
push
hlt
xchg
out
popf
dec
jb
loopne
imul
jbe
clc
das
jge
fisttpl
cmp
push
add
pop
in
lret
push
pop
pop
popa
push
out
and
jo
sbb
cmp
xsha256
cmpsb
shrl
and
out
lahf
jo
dec
mov
pop
filds
lcall
lret
sub
popa
out
add
imul
inc
mov
ror
out
rcll
mov
out
movsb
mov
aam
je
adc
jbe
lcall
inc
sbb
aad
xlat
mov
loop
mov
sbbb
jmp
ljmp
or
int3
xchg
and
fadds
jo
lret
jb
nop
lahf
mov
pop
lods
mov
mov
xor
jge
aas
lods
sub
cli
pop
pop
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
rcr
push
push
cmp
adc
icebp
aas
sub
mov
adc
fsub
fwait
mov
bt
sahf
stc
and
gs
add
ss
ds
add
sbb
mov
cld
xchg
aam
pusha
xchg
xchg
sub
cmpsb
mov
cmc
mov
iret
adc
push
inc
pop
cltd
fmuls
dec
loop
daa
inc
push
out
imul
pop
stc
aaa
mov
pop
fistps
clc
xorl
inc
jecxz
push
sub
xor
mov
and
xor
inc
ret
int3
dec
imul
scas
pop
js
leave
mov
sub
xor
fdivr
or
fsubrs
cltd
addl
aam
callw
mov
push
or
xchg
dec
push
stos
jle
loop
cs
ficoms
sub
repz
cltd
cmp
push
inc
in
cmp
insl
mov
push
jbe
loope
add
clc
xchg
fs
ljmp
cltd
pop
shlb
ljmp
into
cld
xchg
iret
addr16
pop
inc
xor
xchg
loopne
pushf
fwait
inc
clc
aam
xchg
dec
mov
adc
push
mov
cmpsb
jmp
jle
dec
repz
add
cmp
in
lahf
cli
cmpsb
push
inc
fwait
or
ljmp
cld
jmp
mov
mov
stc
das
dec
gs
push
call
rorl
repnz
jmp
ud0
inc
and
mov
xchg
add
adc
fwait
mov
scas
sub
and
ds
daa
cmpsb
mov
je
in
mov
insl
jo
xor
pop
inc
les
aas
pop
lock
shll
lock
inc
cltd
mov
mov
dec
dec
in
dec
mov
lret
push
out
mov
cmpsb
cwtl
or
rorb
jp
aad
jg
test
jmp
cmp
stos
call
fs
int3
enter
xor
mov
sub
push
cmc
dec
ret
dec
nop
repz
add
jecxz
lds
pop
mov
mov
or
xor
out
jg
mov
jno
inc
call
and
rol
lret
or
std
xchg
mov
or
lods
aaa
aas
xor
or
aam
neg
xchg
loopne
cld
pop
cli
jl
scas
scas
jne
sbb
rcl
nop
aam
sub
jae
mov
popl
dec
enter
repz
cli
mov
repz
sti
cmp
shrb
bound
lahf
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
mov
adc
push
cmp
sbb
dec
mov
inc
cs
in
pop
push
and
jo
pop
xchg
ret
inc
dec
sahf
imul
dec
jmp
imul
dec
jbe
fiaddl
mov
ja
ja
nop
in
adc
loopne
ss
mov
lret
popf
push
dec
mov
xchg
cli
add
fnsave
sub
xor
xchg
inc
sti
mov
cmp
mov
mov
lcall
movsl
dec
cmc
adc
lds
jo
ja
pop
push
cmpsl
mov
pusha
scas
jnp
and
mov
dec
or
rcrl
mov
add
jns
pop
mov
out
test
pop
sub
and
mov
ss
or
in
lds
ss
and
insb
fwait
es
shl
xor
sti
sbb
popf
lcall
mov
cld
movsb
xchg
jecxz
push
mov
test
iret
adc
adcl
mov
fisubs
insb
sti
xor
inc
mov
xchg
add
xor
je
ret
jae
cmp
aaa
insl
push
pop
insb
and
cmc
cli
mov
pop
and
pop
push
push
out
fsubrs
pop
push
in
pop
nop
sar
add
xchg
xchg
push
lods
mov
dec
add
shll
mov
ljmp
adc
icebp
push
xor
xchg
jmp
mov
xchg
xchg
faddl
addb
scas
push
psrld
insb
sub
test
pop
das
xchg
addr16
fnstenv
stos
out
or
lock
pushw
push
test
and
cmpsl
xchg
icebp
dec
bound
fdivrs
daa
aas
cs
lock
dec
or
mov
push
and
inc
add
enter
xor
add
mov
repnz
test
mov
mov
or
jnp
mov
sub
mov
xchg
xchg
xchg
mov
jp
or
sbb
cld
dec
dec
fsubrl
mov
sub
insb
in
dec
pusha
jl
cwtl
aas
ja
add
push
push
dec
jne
adc
cmpl
imul
jle
inc
add
fs
test
pop
dec
imul
loop
stos
sbb
dec
lret
xchg
insl
sbb
and
in
pop
mov
fisubs
setne
shr
pop
lcall
in
sbb
cmpl
add
or
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
and
push
das
adc
popf
movlps
xor
xor
mov
scas
or
loop
fisubrl
repnz
std
cmp
and
fs
sub
test
sbb
adc
fdivrp
mov
push
aad
sbb
lock
hlt
cmpsl
mov
lock
mov
mov
inc
and
ds
dec
ds
or
and
std
inc
imul
dec
lret
jbe
pop
cmp
mov
cmp
add
xchg
loopne
push
out
jbe
dec
pop
rclb
inc
mov
or
xchg
in
aam
inc
clc
jbe
scas
pop
out
scas
je
das
pushf
sbb
sub
add
sarb
repnz
fstps
or
mov
pop
or
adc
std
push
push
sbb
push
and
sbb
sub
imul
test
push
data16
fcompl
jecxz
fsubr
mov
sahf
shl
jecxz
push
les
es
test
pop
filds
sbb
mov
in
jo
jo
xor
xchg
push
das
xchg
push
fnstenv
pushf
mov
sbb
inc
aad
cld
int
push
xlat
ja
sahf
pop
in
add
sub
iret
arpl
cld
insl
jno
outsl
push
imul
repz
cmp
lahf
inc
stc
ja
insb
incb
sbbb
mov
mov
test
sbb
xchg
imul
call
fsubs
add
mov
or
and
out
xchg
jo
ret
mov
add
mov
outsl
mov
in
sar
or
xor
cmpl
mov
inc
cmp
inc
xor
adc
shll
lock
clc
pop
xor
jle
or
xchg
mov
jbe
cmp
xor
xchg
jbe
jmp
mov
sub
push
xchg
lock
movsb
inc
push
xlat
xchg
pop
lock
dec
jnp
mov
mov
and
mov
lds
lahf
xchg
aad
cmp
pop
lretw
xchg
les
icebp
mov
aas
add
inc
or
and
mov
sub
insb
sbb
out
sbb
push
sbb
nop
push
cmp
cli
es
mov
mov
dec
inc
dec
adc
shr
add
inc
push
out
stc
dec
mov
aaa
inc
pop
lret
popa
in
in
nop
mov
mov
adc
hlt
scas
lock
out
stos
loope
call
and
sub
sub
sub
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
ffreep
cld
ljmp
lods
bound
jmp
pop
popa
stos
int3
and
xchg
sub
cmc
or
mov
adc
inc
jge
dec
jb
add
push
leave
pop
xor
mov
ds
cli
xchg
add
aas
adc
pop
je
or
xchg
fcoms
jno
in
lds
cwtl
int
cs
jmp
fndisi(8087
ficompl
push
subl
or
loopne
inc
or
mov
in
jle
stos
ljmp
pushf
daa
and
fldcw
aas
cmp
sbb
sbb
jg
inc
or
dec
push
out
dec
imul
dec
test
outsb
jge
mov
mov
loopne
pusha
movsb
jp
mov
mov
lods
xlat
popf
push
lods
test
push
test
jmp
xchg
adc
push
rcr
mov
jle
daa
jmp
add
outsb
or
ss
adc
vprotb
mov
mov
lcall
nop
pop
ret
jnp
jecxz
movsl
or
fcoms
clc
js
push
xchg
shrb
push
cmp
and
aam
xchg
jl
icebp
sbb
cld
mov
cmp
push
dec
data16
aad
call
pop
pop
xchg
adc
fidivl
aad
push
fcomi
stc
cmp
es
push
pop
test
mov
jb
dec
int
add
dec
rorb
loopne
ja
lea
loope
repnz
jo
in
imul
mov
ja
testl
bound
out
sbb
mov
cmc
outsl
or
je
loop
popf
std
jnp
icebp
lods
lahf
xchg
and
lods
test
sar
xor
test
dec
cmpl
mov
test
jae
lock
out
fsubl
add
sti
pop
mov
dec
stos
mov
cmp
insb
cmp
test
dec
or
mov
mov
dec
outsb
ds
pop
cli
dec
or
movsl
mov
jecxz
fldenv
lds
test
repnz
push
icebp
adcl
stc
adc
push
inc
pop
adcb
inc
in
push
in
lods
xchg
add
stos
mov
loopne
out
movsb
out
pop
arpl
and
or
out
cmpsb
pop
rcrb
jecxz
test
je
push
jne
pusha
cmc
fildl
jnp
mov
jno
and
xchg
outsb
shll
xor
add
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
mov
int
repz
rorl
sbb
fs
push
pop
push
lahf
pop
mov
popa
add
rclb
lcall
das
sub
or
pushf
not
lea
cmc
mov
sub
das
mov
adc
mov
sti
addr16
mov
in
mov
push
daa
inc
inc
xor
xchg
or
test
push
lock
or
repz
xlat
sarl
stos
jg
dec
mov
shll
pop
int
mov
jle
lret
aad
loope
mov
out
mov
adc
mov
scas
or
lret
mov
add
int3
xchg
xchg
xchg
fwait
loop
adc
fwait
mov
sbb
xchg
mov
ja
adc
pusha
dec
loope
mov
push
icebp
mov
das
aas
imul
imul
or
cmpsl
cmp
add
fcoms
mov
fdivp
inc
iret
xchg
rorl
cmp
clc
std
cmpsl
pmovmskb
and
adc
xor
fdecstp
pop
decl
xor
into
pop
push
das
cmp
je
out
jg
xchg
sub
xor
pop
jge
sub
mov
mov
and
pop
cmpsb
jne
add
addr16
lods
loope
pop
or
mov
aaa
sahf
loopne
mov
mov
gs
or
push
mov
addr16
mov
fistpl
nop
fidivs
mov
repnz
aas
ds
inc
stos
pop
cmpsb
push
in
push
mov
mov
cmp
push
outsl
les
xchg
out
mov
mov
sti
sub
dec
int3
jl
in
and
sub
repz
cmp
jns
inc
mov
ficomps
nop
mov
or
jns
repnz
and
cmc
and
and
into
hlt
jns
jge
sub
mov
scas
cmp
movsl
push
daa
popa
outsl
es
xorl
out
lea
ds
xchg
and
icebp
cmp
mov
mov
inc
xchg
call
dec
lcall
test
daa
xor
sbb
and
and
nop
adc
mov
dec
lret
stos
lea
or
sub
stos
imul
jecxz
sbb
mov
sbb
sbb
pop
and
push
push
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
mov
movlps
push
inc
dec
and
lret
mov
xor
int
adc
lds
dec
rolb
mov
push
rcrb
or
sahf
fwait
leave
sub
test
inc
inc
adc
inc
mov
sub
mov
push
pop
mov
xchg
push
in
inc
xchg
xlat
test
pop
or
repnz
pop
in
test
in
insb
adc
cmpsl
xor
dec
pop
push
and
inc
fbld
pop
inc
insl
testb
out
stc
push
cld
jg
jg
cmp
out
jb
push
xor
shll
clc
adc
inc
nop
lahf
push
pop
shr
loop
pop
or
xor
iret
push
call
dec
jge
dec
dec
dec
js
push
imull
daa
fisubrs
lcall
movl
pop
push
mov
mov
cmpsl
subl
fildll
xor
jno
fdiv
mov
dec
dec
mov
jp
jns
or
rcr
pop
pop
mov
add
or
mov
jnp
stos
add
pop
adc
insb
shll
cmc
popf
sar
adc
xchg
mov
add
sub
push
add
xchg
js
test
subb
jb
addr16
mov
or
ss
loopne
and
fists
sti
notb
loop
push
mov
jno
sub
push
mov
xlat
imul
jbe
xor
push
call
dec
push
mulb
sbb
in
xchg
xlat
icebp
xchg
xor
loopne
mov
inc
in
xor
leave
es
mov
cmp
mov
jb
test
icebp
push
push
jecxz
push
lahf
jne
popf
cmpb
aas
loopne
int
push
fcmovnb
jno
or
in
xchg
pop
dec
int3
clc
cmp
ljmp
push
push
mov
lret
orl
stos
adc
inc
or
ljmp
jb
out
pop
push
push
mov
lock
les
xor
es
push
push
or
push
jns
stos
jne
insl
mov
jg
sti
in
subl
mov
stos
cmpsb
push
cmp
rorl
add
pushf
std
js
inc
dec
daa
inc
or
in
push
xor
into
jne
cs
scas
mov
ds
pop
inc
test
pop
sub
lahf
rolb
inc
and
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
pop
jbe
push
sbb
adc
cmp
loopne
std
cmp
loopne
pop
bound
pushf
mov
sbb
xchg
loopne
sbb
movb
sbbb
inc
lret
xor
xor
rolb
or
nop/reserved
adc
push
sbb
es
mov
push
adc
jl
addr16
dec
sbb
lret
icebp
push
xchg
subl
cmpsl
mov
mov
mov
lock
arpl
mov
movsb
clc
adc
jg
ds
int
xor
stos
lret
dec
enter
fldenv
bound
xchg
shrb
mov
mov
test
adcb
es
add
sub
push
add
daa
jns
inc
sub
lock
mov
push
mov
mov
ss
mov
mov
dec
test
std
les
dec
or
inc
adcb
or
roll
ljmp
jl
or
pop
and
jg
sti
leave
fwait
sbb
xor
xchg
incb
leave
das
mov
and
dec
push
dec
pop
lcall
or
hlt
sbb
scas
ljmp
out
pop
lret
daa
cmpsl
pop
inc
cs
pop
clc
xchg
mov
mov
das
aad
lock
jle
pop
adc
cs
lret
xchg
or
scas
or
dec
sahf
cmp
inc
push
cmp
insl
mov
aaa
idivl
dec
cmovnp
pop
repnz
leave
jnp
jl
pusha
mov
mov
inc
imul
inc
lods
add
cmp
lret
pop
and
adc
das
mov
mov
arpl
out
jmp
icebp
cmp
mov
xchg
mov
ss
outsb
dec
fldenv
inc
mov
std
mov
out
or
xchg
add
nop
cwtl
shrb
fwait
aam
cwtl
mov
stos
mov
out
cmp
pop
jp
out
out
icebp
or
leave
dec
cs
and
in
jae
and
sub
jnp
hlt
icebp
sub
rcll
xchg
das
call
icebp
in
mov
add
mov
xchg
outsl
out
push
or
push
cmp
mov
fisubrs
mov
ss
xchg
into
add
jg
cmp
inc
jbe
repnz
jmp
test
cwtl
and
xor
ljmp
jb
fcoms
dec
sarl
push
adcb
loopne
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
add
adc
adc
imul
gs
stos
dec
cmp
icebp
cmp
jnp
pop
push
dec
mov
add
insl
ret
mov
daa
fcoml
arpl
int3
push
in
xlat
push
movsb
stos
add
inc
mov
pop
mov
popf
jecxz
mov
mov
cmp
adc
in
les
pop
adc
clc
icebp
mov
icebp
dec
jb
mov
sahf
xor
orb
dec
xor
out
pop
cltd
leave
scas
aad
jmp
idivl
sub
stos
xchg
js
pop
adc
fiadds
push
cmpsl
outsl
sub
cmp
jae
dec
pusha
std
mov
adc
pop
enter
mov
aaa
cmp
jmp
out
je
push
aas
ret
jb
mov
mov
jp
cmp
mov
push
mov
call
push
in
sti
ljmp
pop
shl
lea
jl
insb
jge
fisttpll
bnd
repnz
int
ja
ss
cmp
das
fadds
popf
std
sbb
clc
push
outsb
push
mov
idivl
test
dec
lods
pop
adc
mov
jnp
adc
xchg
cld
mov
mov
mov
inc
sarb
loop
lret
negl
shll
aad
shll
and
je
fwait
mov
sub
jge
in
mov
dec
arpl
je
or
gs
jecxz
mov
jp
or
xchg
push
pop
enter
mov
jp
cmp
jl
shll
loope
movsb
sbb
jne
mov
shr
or
sti
adc
lea
push
les
fwait
lods
xor
pop
divb
xchg
popa
dec
gs
rcr
mul
sbb
pop
mov
dec
popa
fs
mov
add
and
push
mov
addr16
outsl
mov
add
sbb
inc
inc
or
rorb
mov
shlb
pop
xchg
or
rcr
lcall
std
jb
data16
mov
xor
repnz
dec
rcll
lds
mov
loop
jo
xchg
mov
in
mov
dec
inc
fwait
xchg
jp
int
fists
test
jge
cmp
pop
leave
cmp
arpl
dec
xchg
xor
test
scas
imul
in
out
jo
in
mov
adc
sbb
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
cmc
pop
mov
iret
movlps
add
ljmp
in
ss
push
into
fisttps
ret
ljmp
push
xor
xor
cld
pop
sub
stos
mov
movsl
std
test
stos
jl
sar
inc
ret
ret
and
mov
dec
inc
sbb
mov
mov
sbb
insb
repnz
pop
xor
ss
mov
sbb
adc
push
pop
bound
mov
pushf
out
cwtl
cmp
movups
lds
imul
lea
mov
xchg
inc
lcall
and
and
stc
negb
pop
es
test
jmp
xor
push
or
popf
popa
xchg
sti
jmp
addr16
push
enter
cli
mov
nop
and
rol
mull
or
js
mov
rcrb
pop
mov
arpl
adc
pop
pushf
pop
mov
or
popa
sahf
or
sub
lret
jae
xchg
mov
jge
arpl
idivb
nop
fwait
roll
cmp
xor
ljmp
popa
jge
pop
mov
jnp
sbb
int3
out
push
or
sahf
xlat
movsb
ds
adc
xchg
adc
mov
sub
out
clc
xor
fsts
jmp
vphaddubd
inc
inc
sbb
sbb
cmpsl
mov
xchg
lret
les
sub
jle
lret
idivb
push
icebp
add
js
jl
mov
pop
sub
ljmp
jne
xchg
mov
cs
ja
adc
mov
mov
pop
mov
pusha
ljmp
xlat
inc
loopne
or
add
fstpl
pop
push
push
pop
fs
pop
xor
stos
and
shrb
hlt
sbb
or
mov
xlat
mov
mulb
add
push
or
dec
sarb
xor
jl
dec
jae
add
pop
lods
inc
xchg
jno
jbe
adc
push
ds
push
lret
icebp
sub
adc
mov
dec
or
fidivs
dec
mov
fsubl
push
lcall
mov
ss
scas
leave
iret
adc
cmc
addb
lods
xor
dec
imul
aam
aam
pop
rcrb
enter
push
adc
rcr
aad
insl
pop
iret
popa
lret
push
into
fdivs
inc
dec
mov
push
push
push
or
or
jmp
dec
pop
imul
enter
push
adc
movlps
cli
push
mov
cmp
lea
adc
clc
xchg
xchg
mov
pushf
mov
shl
mov
mov
ljmp
addr16
js
jg
sub
cmp
dec
rcr
out
and
add
xor
mov
popf
lea
jno
int3
cwtl
add
sbb
stc
popw
fs
xchg
shrl
bound
call
and
add
mov
lock
cld
mov
xchg
sti
cli
push
fbld
aaa
aam
add
cltd
push
xchg
stos
test
inc
lea
push
stc
jle
mov
jp
push
lods
sti
jne
jo
stos
fdivrs
jnp
jp
fdivrs
xor
pop
stc
pop
int
aam
enter
or
mov
call
jge
jns
mov
xchg
inc
pushf
jbe
mov
sub
stos
mov
inc
jge
mov
jae
sahf
mov
add
out
sub
and
int
popf
mov
push
shlb
and
mov
mov
je
cmpl
jbe
ror
sbb
test
and
xchg
jae
and
imul
ja
inc
cmp
cli
notl
inc
sub
sar
pop
and
lods
sti
jno
mov
clc
ljmp
pop
xchg
bound
fcompl
cld
jmp
add
jae
into
in
jmp
lods
scas
fwait
hlt
int
lods
fcomps
add
in
into
mov
aam
daa
sbb
inc
cltd
in
xor
out
jg
jbe
sarb
mov
dec
mov
out
adc
aam
cmpsb
jbe
aas
in
orl
gs
shlb
fsubrl
push
cmc
xor
jno
mov
add
jl
or
xchg
push
addr16
push
xchg
dec
loopne
or
adc
idivl
arpl
mov
cs
rdtsc
stc
not
pop
mov
aas
xor
add
jmp
hlt
repz
sbb
hlt
adc
negb
mov
enter
mov
dec
mov
out
data16
add
int3
inc
sub
sbb
rcrl
mov
pop
adc
mov
hlt
mov
popf
test
loop
cmp
stos
xchg
test
jmp
lea
shlb
add
mov
inc
shlb
mov
mov
jge
mov
icebp
mov
mov
loope
out
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
push
ljmp
sub
adc
lods
or
adc
lea
jle
hlt
mov
rorb
aam
cmp
cmp
push
sub
mov
sub
jle
or
sbb
jmp
fdivp
and
mov
stc
jns
jge
insb
or
pop
pop
inc
call
scas
js
sbb
pop
test
pop
adc
push
dec
mov
dec
es
mov
mov
cmp
mov
pop
stos
jns
mov
inc
xor
inc
xor
cmp
in
andb
clc
xlat
out
xor
and
lcall
inc
mov
iret
in
xor
outsl
push
loop
rol
or
insl
movsb
or
dec
jmp
mov
mov
cltd
ja
pop
cmpb
arpl
mov
lret
cs
hlt
xchg
ror
mov
inc
out
imul
daa
ds
inc
loopne
and
outsl
into
add
push
popf
xor
sbb
mov
loope
xchg
jne
dec
mov
push
out
jno
movsl
cmp
mov
int
or
jl
fnstcw
fcompl
adc
jecxz
mov
jnp
cmp
enter
gs
or
add
sbb
lods
xchg
fldt
inc
add
dec
or
imul
jae
adc
add
jecxz
mov
shll
lret
imul
inc
adc
ja
in
mov
loop
sbb
xchg
ljmp
cmp
mov
pop
arpl
lret
and
cli
mov
scas
pop
jbe
mov
popf
inc
mov
jp
pop
test
es
xchg
push
adc
out
js
test
xor
xor
arpl
cmp
jmp
aaa
js
ret
test
aaa
std
pop
pop
mov
fbstp
cmp
or
jne
lods
fs
andps
test
xchg
xor
xchg
in
std
xorl
pop
js
push
jecxz
or
xlat
mov
ss
xchg
mov
jnp
mov
mov
cmp
mov
sbb
mov
mov
push
lret
addb
out
lret
cmpl
fs
push
mov
mov
loopne
inc
pop
out
pop
pop
and
loopne
imul
lcall
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
sbb
adc
adc
inc
dec
xor
xchg
sbb
and
shlb
mov
in
out
mov
arpl
push
popf
add
adc
shlb
imul
xlat
ret
inc
lock
mov
mov
bound
cmc
out
pop
dec
or
xorl
xlat
lds
sub
pop
stc
mov
or
daa
ret
sub
xor
loop
sub
sub
scas
enter
jae
cmp
jg
bound
pop
inc
repz
jle
rcl
movsb
jg
pop
jne
fstps
cmc
inc
ret
cmp
push
xor
mov
mov
jl
push
inc
mov
lret
add
push
cld
lods
adc
dec
sub
loopne
sbb
sbb
int3
imul
pop
loopne
sub
std
jl
inc
enter
hlt
sub
pop
push
pusha
inc
loope
xchg
sti
arpl
or
or
icebp
mov
mov
out
xor
fdivrl
dec
adc
out
mov
cmc
into
scas
fwait
add
push
int
xchg
rcll
mov
pop
dec
dec
nop
in
cli
xchg
fcomps
clc
mov
sub
jg
add
in
mov
xor
add
push
add
clc
inc
lcall
jle
and
jge
jp
mov
and
into
rorb
or
stos
cmpsl
jae
jb
add
push
adc
shll
out
test
stos
popf
fsubl
pop
test
mov
shrb
mov
je
std
daa
mov
cmpsl
push
xor
cli
cs
mov
jnp
pusha
mov
roll
cmp
mov
pushf
sbb
lock
adc
fsubrp
int
inc
cmpl
cli
cwtl
clc
in
mov
cld
in
imul
mov
int
mov
pop
add
mov
mov
outsl
inc
xchg
gs
fsubs
or
inc
das
fdivrs
ror
fisubs
jl
arpl
cwtl
mov
out
xchg
ret
xor
loopne
js
repz
inc
pop
push
adc
out
or
inc
cmp
add
ja
mov
aaa
fs
insb
cs
mov
push
mov
movsb
xchg
xor
bound
xchg
inc
and
sbb
pop
pop
add
mov
xchg
out
les
jnp
pop
cmp
push
adc
inc
repnz
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
or
cs
sarl
les
repnz
jo
inc
jl
pop
fwait
sub
mov
jmp
mov
sub
mov
lahf
imul
cmp
scas
repnz
je
cmp
data16
lods
push
stos
sub
push
push
pop
xor
icebp
imul
insl
in
repz
mov
test
pushf
and
xchg
pop
cmp
addr16
push
lahf
stos
pop
cmpsl
iret
inc
addr16
sbb
cltd
cs
xchg
mov
lret
lods
imul
pop
jmp
sbb
mov
dec
adc
imul
popa
aad
ljmp
fsubs
mov
fidivs
and
mov
xlat
xchg
and
stos
mov
push
cltd
in
data16
lea
aaa
push
xchg
push
fwait
verw
ss
int3
mov
xchg
stos
enter
ljmp
push
sub
aaa
out
jbe
xchg
je
rcl
mov
data16
aad
sub
stos
pusha
cmp
mov
fcomi
sub
in
push
or
out
push
aas
jns
pop
mov
ret
dec
cltd
mov
jns
and
push
cmpb
jno
pop
jnp
push
xor
pop
pop
cmpsb
ror
cmpsb
imul
cmp
dec
pushf
movsb
fcmovb
lahf
dec
add
fidivs
rep
pop
rorb
xchg
jg
add
mov
jge
mov
cmpsb
daa
pop
mov
push
lcall
xchg
fisubl
out
les
mov
stos
scas
xor
movsl
cmpl
jns
aas
push
clc
rcl
das
jl
mov
test
daa
mov
lret
icebp
or
adc
dec
lcall
mov
scas
adc
mov
adc
pop
xchg
fs
in
and
pop
in
xor
pop
cmp
or
cmp
and
fcmovu
cmp
imul
mov
xchg
add
nop
add
mov
sbb
lret
mov
mov
pop
jg
xchg
fwait
jmp
fs
daa
adc
pcmpgtw
pop
push
pop
push
fidivl
mov
daa
ja
pop
std
jno
in
movsb
aam
ret
das
das
xchg
lock
pop
daa
mov
inc
jns
ja
shlb
push
stos
stos
ds
dec
jo
push
lods
test
out
or
enter
add
add
cli
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
sar
js
stc
adc
adc
pop
cmp
imul
add
add
mov
scas
adc
jb
insb
in
out
mov
cs
fsin
xorl
decb
ret
popf
js
test
inc
add
test
and
mov
cmp
or
mov
imul
dec
leave
mov
xchg
fisttps
fwait
jg
mov
and
jae
cld
cmp
inc
mov
pusha
arpl
paddusw
lret
dec
scas
shll
lahf
xchg
push
fwait
sub
mov
dec
sarb
or
imul
imul
iret
push
cmp
pop
les
xchg
push
ss
push
and
nop
neg
andl
mov
sub
sti
ficoms
cmp
mov
pop
mov
cmc
jo
xor
push
mov
sti
lret
clc
adc
cvtdq2ps
xchg
mov
in
icebp
dec
xlat
pop
outsb
add
dec
adc
sub
or
or
and
nop
stc
add
sbb
movsl
cmc
mov
aad
out
aaa
adc
push
mov
mov
fldenv
push
jmp
orl
pop
push
jecxz
rcrb
cmp
arpl
adc
pushf
push
fwait
leave
in
test
pop
fldt
xchg
ret
add
or
rclb
out
sub
fldpi
in
xchg
mov
sbb
jno
mov
push
xor
mov
outsl
fucomip
dec
sarb
outsb
xlat
pop
mov
jno
lods
and
test
xchg
jb
repz
test
lcall
adc
fwait
repnz
lds
ucomiss
iret
inc
push
xchg
add
or
pop
je
cmpsl
clc
je
lods
mov
lret
scas
imulb
jno
or
lcall
addps
sub
test
dec
sbb
ss
test
mov
bound
xchg
and
int3
cs
add
insb
leave
orb
aad
div
xor
repnz
xchg
xchg
pop
mov
or
fdivr
int
nop
pop
xor
stos
add
lahf
imul
aas
fs
ljmp
mov
xor
pop
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
das
or
out
adc
adc
in
push
lods
cld
mov
or
add
dec
jl
arpl
sbb
test
jge
les
inc
das
xor
test
movsl
sbb
orl
xorl
test
stos
mov
idivl
and
int3
sub
outsl
int
and
jae
add
shll
stos
jb
push
add
repz
pop
cmp
mov
adc
fdiv
sbb
faddl
push
add
orb
adc
outsb
dec
insb
sbb
add
nop
aas
out
pop
push
fldenv
dec
inc
loop
lcall
mov
push
cmpsl
rorl
mov
testb
push
adc
mov
mov
enter
mov
loope
gs
xor
pop
and
xchg
jb
movsl
cli
iret
std
and
mov
xor
cmpsb
pop
fwait
lock
pop
sbb
out
dec
mov
add
sbb
scas
cmpb
aas
cmp
lock
push
or
out
pop
inc
mov
mov
lea
fs
add
pop
xorb
mov
push
sub
inc
pop
pushf
int
stos
call
cld
test
adc
hlt
ret
push
les
sub
or
std
jge
xchg
add
fimull
mov
mov
mov
pop
mov
lock
ja
cmp
cmpsb
outsl
sbb
pop
push
test
pop
icebp
xchg
jmp
jle
xor
pop
mov
add
jb
xchg
push
push
call
xchg
aam
mov
loope
mov
fmull
es
clc
test
xchg
popf
loopne
and
iret
mov
pop
jmp
hlt
dec
cmp
inc
pop
mov
cli
xchg
mov
mov
or
mov
test
loopne
add
sub
mov
pop
into
out
call
lock
testb
push
outsb
icebp
repz
dec
cmp
mov
push
hlt
out
pop
clc
push
call
sbb
jbe
shrb
inc
push
rcrl
lcall
jge
insb
pop
fs
mov
loopne
xor
pop
enter
clc
imul
xchg
dec
mov
in
mov
push
and
cli
rorb
jnp
bound
add
inc
and
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
xor
push
in
adc
adc
je
pop
sub
mov
les
add
pop
cmc
mov
xor
pop
adc
inc
lock
sti
fstpl
jp
stos
sahf
adc
inc
xchg
sbb
out
jnp
stc
gs
iret
test
cmp
adc
in
loop
push
sub
orb
mov
fnsetpm(287
pop
push
push
push
sbb
cmc
pushf
mov
cwtl
fidivrl
push
test
and
lock
cmp
pop
inc
les
xchg
xchg
sub
dec
sbb
sub
push
and
or
jmp
sub
hlt
lcall
scas
push
rorb
outsl
push
mov
or
aad
inc
push
rclb
and
mov
add
jbe
cmp
xorb
shlb
in
add
enter
testl
and
sbb
in
mov
inc
movb
and
mov
jno
sbb
push
mov
out
mov
and
xor
negb
push
pop
pushf
push
push
mov
test
repz
fs
mov
out
cmp
int3
in
inc
test
fldl
push
xchg
xor
pop
pop
loope
mov
dec
mov
mov
and
mov
jnp
mov
bound
test
icebp
and
xchg
nop
adc
jne
sbb
pushf
arpl
lret
test
ret
push
fs
cmpsb
sub
imull
cmp
adc
shl
inc
sub
push
xor
xor
xor
icebp
or
push
and
test
adc
clc
insb
push
mov
xor
mov
hlt
cld
mov
test
test
xchg
pop
pop
pusha
and
adc
xchg
add
test
cwtl
and
stos
adcb
filds
in
mov
in
add
in
mov
xchg
sub
push
mov
adc
mov
ret
mov
enter
sbb
push
adc
push
out
aad
decl
mov
add
jmp
gs
sub
jl
ss
dec
ret
cmpb
imul
and
clc
inc
pusha
repnz
pop
pop
inc
xchg
jle
or
mov
sbb
xor
movsb
or
and
mov
lahf
add
jl
testl
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
push
mov
push
insl
lods
rolb
mov
test
cs
filds
int3
lds
mov
cwtl
inc
mulb
std
mov
loop
mov
pop
and
std
jae
pop
mov
lret
mov
test
mov
inc
jae
popf
es
das
stos
mov
lea
cli
adc
test
pop
jecxz
push
mov
mov
das
mov
jnp
hlt
or
sbb
ja
lea
lahf
xchg
pop
in
loope
xchg
lahf
jns
adc
mull
sub
stos
je
in
adc
lcall
jne
mov
clc
xchg
arpl
fsubrp
jb
shll
mov
leave
xor
inc
aaa
or
add
jns
push
insb
push
xchg
cmp
mov
in
das
popf
and
imulb
clc
daa
ljmp
fistpl
jne
xor
out
push
push
mov
lods
repz
popa
inc
mov
dec
rcrb
stc
jae
out
mov
arpl
stc
incb
mov
sbb
sahf
push
mov
adc
popf
cmp
iret
bound
and
stc
popa
addb
jecxz
sub
imul
mov
lret
or
aad
jne
lods
dec
or
or
dec
aam
mov
or
xchg
testb
lods
inc
mov
es
cmpsl
add
fwait
popf
jg
jbe
push
stos
cltd
aaa
inc
icebp
movsb
sahf
pop
xchg
out
loop
xor
js
mov
jb
add
pop
loop
adc
aaa
or
popf
sub
shrl
jne
and
into
sub
popf
setnp
push
mov
cltd
mov
cmp
sbb
ds
test
fs
mov
xchg
add
adc
cli
xchg
push
inc
pushf
into
cmp
push
test
test
fistps
sbb
mov
pushf
adc
push
cmp
inc
fisubrl
mov
inc
movsl
inc
adc
test
xchg
push
jae
aaa
aam
inc
jae
inc
movsl
mov
data16
lret
cmp
mov
push
sti
dec
in
sub
enter
je
adc
repnz
idiv
stos
dec
loop
adc
inc
dec
xchg
stos
jmp
rcr
mov
sub
in
aam
out
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
cmc
stos
fs
adc
movlps
jmp
mov
in
or
test
mov
dec
push
jg
das
cs
push
test
loop
sub
adc
nop
out
sti
and
cmc
xor
or
adc
push
adc
cmp
adc
mov
je
cmpsb
dec
imul
pop
lret
inc
ljmp
loopne
sbb
fiaddl
cmp
pushf
lahf
pop
ud1
cmp
dec
sbb
idivb
dec
std
push
jg
lds
cltd
mov
into
inc
mov
icebp
inc
push
cmpb
push
out
icebp
lods
or
popf
mov
push
mov
int
mov
cld
xor
jg
jo
adc
out
aaa
push
aas
pop
push
xor
loop
je
cmp
in
jno
lods
mov
bound
jno
jl
imul
mov
push
and
dec
push
dec
or
rorb
outsl
mov
aaa
push
add
fistpl
movsl
popf
push
lahf
mov
loopne
sahf
sub
int
lock
pop
inc
sbb
loope
mov
sbb
sbb
orl
sti
mov
je
jae
hlt
cmp
call
inc
ret
fwait
jge
add
cmpsb
mov
das
in
icebp
mov
and
jbe
int3
jbe
into
adc
cmp
sahf
int
das
pop
enter
cld
add
push
mov
jg
push
popa
add
lcall
stc
jno
test
test
mov
push
dec
dec
jne
insb
jg
cli
add
sbb
mov
subb
inc
nop
lret
iret
adc
jmp
mov
popa
notb
inc
jns
push
and
in
loopne
lea
jl
inc
jge
scas
cmp
or
out
jne
mov
nop
xor
pop
mov
push
aam
loop
cmp
ds
clc
xchg
lock
xchg
mov
sbb
ja
pop
lcall
mulb
into
das
movsl
xchg
ds
lret
xor
lahf
mov
ret
cld
daa
lcall
and
pop
push
cmp
lds
roll
xor
cltd
jbe
xor
cltd
jnp
loopne
fstps
mov
lods
out
jne
lahf
repz
hlt
fcoms
sarl
mov
pop
lods
push
popf
add
xor
daa
fmull
xor
mov
mov
mov
mov
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
stc
jb
pop
fcoml
adc
les
mov
outsb
cmpsb
repz
pushf
mov
mov
mov
sbb
sub
stc
dec
out
lods
sub
inc
mov
mov
or
sub
fistpl
shrl
jae
mov
lock
lret
adc
or
push
ja
xor
lea
xor
mov
jg
jecxz
and
xchg
fimuls
out
pop
jb
xor
aaa
xor
stc
or
insb
sahf
cmp
mov
inc
jbe
arpl
mov
in
push
sbb
insb
movsb
ret
inc
cmova
mov
mov
fistl
pop
jge
lea
call
mov
data16
add
mov
nop
rcll
adc
cmpsb
jns
and
jle
push
popa
mov
mov
xor
jae
xchg
inc
pushf
shll
sbb
pop
stos
inc
mov
imul
lcall
es
xchg
sub
adc
and
xor
jns
pop
addr16
sbb
jp
out
cltd
dec
cmp
clc
add
mov
push
lods
inc
pop
jmp
mov
fwait
mov
jle
icebp
mov
stos
test
sub
push
push
int3
mov
cmp
loop
adcl
cmp
cld
cmpsl
clc
popa
xor
aam
push
xchg
mov
pusha
scas
rorl
mov
ja,pt
xor
mov
insl
outsl
mov
pop
and
fs
and
popa
mov
adc
imul
cmpsl
mov
xor
out
xor
xor
out
push
xchg
imul
push
icebp
test
pop
inc
sbb
mov
mov
insb
push
dec
dec
cmp
pop
bound
insb
test
cmp
call
xchg
xchg
in
notb
sub
inc
xor
ret
lods
std
dec
mov
dec
dec
jb
xchg
fstpl
jle
xchg
or
test
mov
mov
xor
arpl
pusha
pop
es
mov
cmp
movsl
push
cmp
pop
jnp
or
sbb
and
push
nop
fsubl
incb
xchg
mov
mov
stos
adc
mov
mov
mov
orb
jle
clc
xor
inc
mov
enter
call
hlt
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
insl
ljmp
movlps
or
xor
int
scas
cmpsb
jae
push
out
addl
cmp
and
mov
jge
adc
pop
aad
out
mov
xlat
lods
cli
daa
and
int3
repz
or
sub
cmp
or
call
mov
cmp
pop
add
mov
cmp
jns
or
add
in
sub
push
or
jecxz
out
xchg
push
out
add
mov
jnp
cltd
xlat
xor
loope
pop
jns
jns
scas
dec
mov
sub
shlb
xor
imull
rorl
lcall
and
nop
cmpb
fistpl
adc
cmp
xor
inc
sarb
in
enter
add
fcompl
stos
push
adc
xchg
dec
ret
xlat
jl
xchg
adc
mov
jbe
and
addb
js
in
out
mul
mov
cmp
adc
insb
cmp
ret
and
loopne
into
or
add
outsl
imul
and
pop
or
adc
push
insl
sbb
or
aad
pop
cmpps
repz
mov
sti
mov
iret
pop
dec
shll
scas
adc
adc
jg
jp
js
sbb
cmp
in
jne
jmp
popf
inc
shrb
loop
je
testw
fisubs
sub
xchg
adc
lcall
ja
cmp
int
dec
ret
bound
xor
inc
clc
dec
sbb
incl
loope
jle
lcall
out
jb
mov
aaa
sbb
imul
pop
movsl
push
fstp
xor
jmp
push
jae
push
jecxz
popa
aam
dec
jnp
cli
push
leave
pop
shll
cmpb
rcrb
sbb
cwtl
sbb
repnz
xchg
add
dec
or
xor
push
cmp
mov
mov
cli
pusha
mov
popa
mov
in
loope
out
je
and
not
repnz
mov
popa
movsb
jge
mov
cmp
dec
mov
stc
fwait
popl
jecxz
inc
xor
jnp
dec
cmp
ljmp
pop
imul
or
xchg
xchg
scas
lock
fnstenv
aaa
mov
pusha
ss
std
sbb
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
stos
cwtl
rclb
adc
mov
dec
xor
or
add
xor
cmp
test
int3
push
leave
inc
xor
sbb
inc
jb
adc
cltd
pop
mov
jmp
cli
add
leave
mov
mov
std
lahf
jno
pop
fidivrl
enter
inc
arpl
jg
mov
lret
push
mov
std
mov
jne
jecxz
leave
in
xor
xor
add
scas
jne
out
jmp
pop
jno
mov
int3
mov
add
test
das
sub
push
mov
push
pop
mov
inc
lret
lcall
lea
cmp
xchg
pop
jle
out
scas
jmp
jl
inc
mov
mov
in
sub
arpl
xor
iret
and
dec
nop
adc
lret
out
dec
mov
cmp
mov
xchg
fdivs
mov
call
pop
pop
jp
stos
stos
jae
adc
loop
xchg
cmp
push
add
ds
nop
sub
add
fisubrs
push
jbe
enter
lea
in
cltd
pop
ds
psubd
ja
into
repnz
stos
add
mov
dec
or
cmp
popf
or
push
orb
add
xchg
call
popa
cli
cld
mov
cmp
das
inc
insb
pop
icebp
add
lcall
inc
hlt
cld
inc
mov
sar
pop
pushf
repz
jns
bound
movsl
push
pusha
aas
push
mov
sub
in
test
add
push
sbb
into
stos
pop
sarb
lret
jl
enter
adcl
mov
cmp
fs
dec
ja
rorb
negl
jle
pop
loop
mov
push
sbb
shll
add
in
pop
sub
xor
cmp
je
ljmp
sbb
push
sbb
sub
and
repnz
inc
inc
push
test
bound
mov
xor
cmp
cwtl
push
icebp
out
mov
mov
cmp
xchg
mov
mov
mov
pop
cmp
xchg
cmp
mov
dec
test
out
add
adc
shll
mov
push
je
dec
add
jle
out
push
mov
rcr
imul
mov
outsl
sub
rcr
loope
pop
sarb
lcall
repnz
fistpl
fstpt
inc
xor
add
das
xchg
mov
iret
sbb
pop
cltd
fwait
out
or
sub
in
jp
mov
mov
ds
cld
lock
jnp
lcall
mov
in
leave
hlt
test
or
aaa
or
push
popf
loop
js
ja
gs
mov
sub
fsubrl
in
jne
mov
jle
sub
jl
dec
sbb
jecxz
xor
lods
popa
mov
mov
fcoms
aam
mov
jmp
sbb
pop
pop
sarl
lea
stos
clc
loop
jnp
push
mov
mov
rol
dec
notl
push
xchg
stos
sahf
mov
repnz
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
sbb
adc
adc
inc
es
imul
rorb
mov
inc
fildl
clc
pop
mov
adc
nop
inc
pop
movsb
mov
out
call
inc
cmc
xor
cmc
sbb
hlt
adc
or
push
enter
rorb
insl
or
lock
mov
inc
mov
aas
xchg
or
and
push
dec
mov
pop
icebp
sub
pop
aad
fwait
jno
cmp
xor
pusha
add
push
inc
clc
push
leave
jb
mov
outsb
test
in
jmp
imul
mov
scas
loop
inc
shll
pop
jmpw
xchg
cmp
decb
sub
sub
sub
out
or
pushf
jnp
in
mov
aas
iret
mov
enter
inc
dec
inc
xchg
or
cmp
xchg
mov
in
in
cmp
in
mov
lods
or
mov
xchg
test
fiadds
mov
jp
add
gs
adc
push
push
sahf
ret
cwtl
adc
or
rolb
pop
xchg
xor
mov
out
out
cltd
pop
add
inc
in
dec
adc
int3
in
or
rcrl
adc
pop
je
icebp
cmovbe
insb
scas
popa
sub
sub
jnp
in
outsb
jmp
fsubs
push
lahf
mov
mov
into
dec
push
ret
or
cs
xchg
movsl
sub
loope
fiaddl
and
add
aas
dec
xchg
imul
and
insl
aad
sbb
out
ret
cmpsl
repz
or
xor
mov
in
cmc
or
xchg
pop
push
popf
pop
mov
cs
movsb
inc
popf
incb
mov
rorl
fdivl
or
inc
dec
and
adc
sarl
push
pop
xchg
mov
pop
movsb
jne
push
icebp
imul
fcom
pop
push
jns
out
aas
int
mov
dec
hlt
jle
fcompl
add
push
xchg
mov
in
imul
pop
iret
mov
dec
lret
dec
dec
inc
mov
fdivs
pushf
pushf
pop
push
mov
mov
pop
pop
notl
xor
jge
cs
sbb
pushf
inc
mov
pusha
and
fucomip
mov
xchg
movsl
xchg
pop
xor
jb
jmp
int3
jo
push
idivl
insb
adc
loop
nop
xor
or
sahf
stc
mov
pop
inc
mov
test
notb
sbb
daa
cld
incb
lcall
pusha
cmp
addr16
dec
imul
push
dec
ja
push
and
popf
movsl
scas
pop
jl
mov
or
out
ss
pop
jbe
lea
mov
stc
sarb
decb
repnz
push
outsl
inc
ja
sbb
cmpsl
cmpsl
fisttpl
and
stos
mov
xchg
and
das
shl
int
xor
sbb
adc
imul
notb
adcl
dec
xchg
dec
push
and
xchg
aaa
bound
movsb
shll
mov
ret
mov
sub
mov
cli
xorl
int
jne
out
rorb
push
cmp
loope
adcl
add
add
push
fcoms
jg
xchg
dec
sbb
ljmp
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
ret
sbb
mov
pop
cmp
jmp
or
xchg
ja
mov
xchg
cmp
mov
imul
fisubl
pop
aad
bound
loopne
leave
push
push
cmp
dec
xor
push
shll
mov
add
lret
popa
xchg
addr16
fldcw
mov
leave
jae
popf
mov
stc
adc
cmp
jecxz
stos
sub
fisubrs
pop
adcb
jns
push
cli
mov
dec
mov
mov
jo
fidivl
push
cwtl
mov
cli
jl
mov
aad
in
inc
adc
stc
add
out
pop
dec
xchg
or
test
cltd
mov
mov
enter
and
ror
mov
sbb
mov
or
mulb
inc
pop
adc
mov
out
repnz
sbb
out
mov
mov
jle
dec
shrd
mov
cs
and
and
mov
mov
ljmp
mov
cmp
push
adc
lds
mov
ljmp
in
xchg
xor
and
shrb
xchg
clc
andb
into
outsl
lret
arpl
push
mov
mov
scas
add
loope
sub
sub
cmpb
test
out
push
cmp
movsb
js
orb
mov
pop
hlt
push
fsubrp
es
push
and
sahf
mulb
gs
idivb
test
cld
jecxz
daa
stos
or
inc
aas
pop
js
add
in
insl
jnp
insb
cmp
mov
cmp
ret
pop
fsub
imul
jecxz
fnstenv
call
mov
mov
sub
pop
sbb
push
les
fistps
fbstp
fs
mov
scas
mov
jmp
jle
or
leave
pusha
mov
mov
sub
inc
sbb
icebp
shr
popf
xor
xchg
dec
push
cwtl
les
out
mov
ja
scas
sbb
idiv
jno
sub
and
add
cwtl
test
jno
cmp
mov
test
xchg
push
inc
xchg
sbbl
sub
aad
jmp
xorl
sub
xor
xchg
adc
in
push
stos
flds
ret
je
or
mov
repnz
xchg
aas
mov
dec
sbb
cld
push
sub
mov
ja
imul
or
jp
jg
cld
push
add
cmp
jge
pop
inc
int
pop
sub
sbb
roll
sub
shll
xchg
xchg
sbb
test
lock
inc
jmp
adc
popf
fnsave
hlt
cmp
sbb
xor
push
rcl
lahf
inc
ljmp
pop
movsb
sub
mov
ret
mov
popa
out
out
movl
mov
adc
mov
imul
adc
js
scas
aas
cmp
or
sbbl
sub
push
xchg
dec
shlb
add
cmp
repnz
shll
or
mov
mov
sbb
and
xchg
pop
je
push
imul
sub
and
arpl
shll
lea
daa
mov
jecxz
jp
or
out
and
pop
sbb
loope
repnz
rcrl
push
inc
movsb
addr16
and
jae
dec
ds
sti
lods
scas
mov
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
aas
cmpb
adc
adc
gs
and
daa
cmc
cwtl
or
cmovs
int
fldlg2
popa
sub
xchg
lock
add
pop
or
jecxz,pn
popa
dec
pop
cmpsl
sar
mov
lcall
rol
sub
and
call
pop
addr16
jge
mov
popa
rep
cmp
cwtl
jle
sbbb
or
pop
shlb
lret
imul
inc
daa
push
rcl
call
popa
sub
js
adc
cmp
lds
pushf
and
mov
in
loop
cmp
out
pop
xchg
fcomi
adc
cli
stc
sbb
sub
mov
cmp
add
lock
enter
lock
push
xor
mov
shlb
cmc
pop
iret
pop
mov
subl
xchg
sahf
pop
or
pop
add
push
ret
das
insl
in
pop
es
insb
aam
push
xor
cwtl
into
ret
push
or
jb
stc
mov
rolb
jns
lock
pop
aaa
andl
cmpsl
ret
je
cli
lock
shlb
repz
mov
dec
outsl
push
mov
ret
dec
jbe
out
out
cmp
lret
xchg
scas
lods
jae
iret
aaa
mov
mov
mov
aam
jb
mov
pop
shl
pop
mov
fidivrs
test
icebp
mov
mov
inc
xorb
xor
cmp
mov
and
call
test
inc
mov
aaa
mov
mov
xchg
imul
scas
out
icebp
je
test
jnp
in
jp
repnz
in
jno
adc
add
fsubrp
inc
mov
add
imul
add
shrl
pop
aas
ret
test
faddl
pop
dec
movsb
xor
js
mov
in
das
fcoml
pop
movsb
sti
mov
inc
sbb
out
into
xor
das
lahf
in
dec
clc
or
adc
xor
fisubl
lods
jmp
sti
fcomps
std
sbb
mov
mov
gs
mov
mov
pop
sub
ljmp
cmpsl
push
dec
add
xchg
mov
xor
gs
add
push
push
inc
clc
popa
push
dec
inc
jg
lods
adc
loope
jns
add
add
fisubrs
jb
pop
scas
in
cli
and
sahf
out
sahf
adc
std
mov
or
cmc
lods
test
push
xchg
shll
je
sbb
dec
sub
fisubrs
or
in
or
or
fisttps
pop
scas
inc
icebp
jne
test
lods
out
jo
mov
stos
and
cltd
mov
aam
scas
sbb
sub
jl
lret
xlat
cmpsl
push
sbbl
ss
fimuls
xchg
sbb
sbb
mov
cmpsb
stos
test
cmp
push
scas
mov
inc
shlb
jnp
test
inc
cmp
test
inc
addr16
loop
jns
sbb
mov
clc
fldenv
jo
inc
mov
mov
jno
or
jo
sbb
mov
cmp
cmp
filds
xchg
sub
test
sti
jle
xorl
jmp
jecxz
push
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
sarl
leave
sub
push
push
rcll
nop
fwait
mov
stc
jo
sub
iret
mov
jecxz
icebp
fwait
mov
xor
shld
clc
lods
call
rcrl
rcll
dec
imul
jmp
pop
sub
mov
xor
push
fwait
cld
fsub
addb
cltd
insb
mov
dec
lret
pop
adc
dec
jl
insb
gs
leave
inc
sbb
dec
xchg
fstpl
jns
sub
insb
outsb
mov
out
dec
in
cmp
leave
fwait
inc
jnp
cmp
xchg
xlat
bound
data16
xchg
orl
lods
loope
mov
mov
push
mov
xchg
aas
loop
imul
mov
xchg
popf
push
mov
dec
cltd
fucomi
xor
nop
and
subb
mov
iret
push
test
scas
int3
inc
jbe
sub
dec
bound
adc
add
pop
dec
jbe
mov
dec
pusha
aas
xorps
inc
or
dec
jno
dec
int
aas
lret
cmp
pop
sub
mov
sbb
mov
test
es
das
pop
cmp
fisubrl
mov
push
cmc
add
push
dec
fildl
jmp
mov
notl
lahf
sbb
mov
aas
xlat
push
out
mov
push
ljmp
out
ficoml
pop
sbb
fidivl
adc
cmp
cmpsl
add
xor
or
ja
shrl
ficoms
or
pop
out
xchg
jg
or
pop
inc
cmc
pop
xor
cli
xchg
fisttpl
scas
mov
and
sub
mov
adc
or
dec
push
jae
fwait
scas
push
jle
ja
out
ljmp
xor
pop
mov
or
push
sbb
jl
or
movsb
cwtl
cld
xchg
push
cmp
push
shl
sbb
lock
imul
push
pushf
mov
jle
jne
cltd
cmpsb
imul
cmc
icebp
lds
or
clc
pop
sub
pop
inc
movsl
imulb
xor
inc
aam
mov
lods
mov
mov
push
jns
ja
sbb
jb
push
inc
insb
sbb
sub
pusha
lock
shll
loope
lcall
dec
mov
mov
loop
fidivrl
addr16
push
in
mov
ret
outsl
test
ds
cmpsl
push
xor
cltd
xchg
lock
out
jl
sub
test
jno
scas
ljmp
sub
cmpsl
dec
jno
loopne
addr16
aad
fucom
dec
push
cmp
dec
cmp
bound
mov
pop
ja
xor
adc
cmp
xor
jb
outsl
cmp
enter
mov
fdivrl
int
jb
nop
pop
or
lahf
dec
sbbb
fldl
jecxz
push
cmp
push
lcall
cmp
sub
fwait
out
adc
cwtl
inc
push
sti
xor
std
movsb
jp
mov
xlat
push
nop
cmpsl
jns
lret
mov
inc
jnp
inc
adc
shrb
es
mov
jle
push
jg
pop
sbb
sub
xlat
dec
int3
adc
movsb
ss
mov
push
rcl
cmc
xchg
adc
mov
push
push
shrl
xchg
fdivs
dec
and
sub
cs
cmpl
in
dec
cmp
dec
adc
mov
mov
mov
aam
repz
dec
dec
imul
repnz
xlat
sahf
or
and
xchg
sub
xchg
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
pop
int3
idivl
lods
adc
adc
std
ja
aad
add
mov
ss
out
pop
add
push
xchg
orl
scas
out
inc
in
fldt
scas
iret
mov
mov
outsb
cmovbe
loope
jbe
push
sbb
ror
push
mov
mov
jl
push
or
imul
adc
addb
fs
push
data16
cmc
jb
fistpl
mov
sub
dec
sti
inc
test
mov
add
loopne
imul
dec
cmpsl
or
xchg
mov
inc
dec
sub
outsl
jmp
push
jno
in
into
js
push
xor
inc
jp
pop
jbe
cmp
cmpsl
frstpm(287
xchg
adcl
shlb
inc
imul
lea
fldt
adc
rclb
daa
mov
push
test
xor
inc
sbb
cmpsb
and
fsubr
arpl
mov
cmc
sub
mov
or
mov
testb
mov
inc
int3
ja
subl
ret
cld
data16
mov
cmc
out
leave
je
sarl
jle,pt
jp
push
sarb
adc
aaa
jmp
out
mov
pop
dec
test
scas
ror
ds
icebp
scas
ljmp
dec
dec
jle
lods
adc
mov
js
rclb
jecxz
jne
gs
mov
or
loope
sbb
lock
mov
in
mov
std
jo
inc
call
cmp
gs
cmp
inc
adc
mov
or
push
inc
mov
insb
cld
addb
out
xchg
pop
push
mov
add
sbb
int3
lock
popf
aas
fwait
push
xchg
add
pop
jne
popa
ljmp
or
pop
xchg
cmp
scas
arpl
and
pusha
in
shrl
lods
mov
in
stos
mov
hlt
into
daa
cmp
je
arpl
add
adc
or
cmpl
and
movsb
xchg
jns
test
pusha
sbb
inc
adc
ret
dec
cli
dec
ret
mov
lret
lahf
mov
inc
js
in
mov
sub
jno
push
out
mov
out
cwtl
jecxz
pop
mov
pop
sub
cld
jle
nop
and
lret
cmp
add
jb
pop
lods
out
hlt
bound
xchg
sub
cmp
loop
dec
rcrb
mov
imul
push
ficomps
ja
int3
test
icebp
dec
sub
mov
sub
and
xor
mov
cld
pop
fwait
les
jmp
xor
jg
add
in
or
ds
pusha
shll
pop
pop
sbb
mov
or
sbbl
in
rcl
cs
in
cmp
je
jb
ds
add
aaa
pop
xchg
in
repnz
loopne
mull
les
cwtl
cmp
mov
lcall
loop
xchg
stos
jbe
lcall
mov
pop
lahf
cli
adc
push
push
les
mov
aas
adc
inc
cmp
insl
mov
inc
fcoml
add
add
out
into
xchg
push
jl
movsb
pcmpeqd
push
js
sar
test
mov
mov
xor
in
or
mov
or
lcall
sub
decl
pushl
xor
jmp
or
mov
mov
mov
scas
push
inc
stos
sub
adc
inc
idivb
mov
enter
in
push
nop
jo
mov
jb
xor
mov
jno
popa
push
test
add
pop
ret
xchg
or
xchg
out
or
lea
mov
stc
xchg
dec
push
mov
cli
cmp
jl
test
dec
xchg
and
sub
int
push
ror
test
push
and
add
unpcklps
icebp
dec
adc
cmp
stos
or
cld
into
jecxz
xchg
sub
vphaddubw
shl
aad
stos
xor
cld
push
cmpsb
sarl
or
cmpsl
xchg
popa
and
icebp
xor
adc
inc
mov
inc
insb
cli
cmp
jmp
les
loopne
sub
lret
leave
and
push
std
xor
jg
test
sbb
stos
xchg
aaa
push
and
push
push
or
xchg
mov
jno
clc
push
push
stc
stc
inc
fwait
je
scas
mov
dec
xchg
jbe
push
or
add
mov
adc
cmc
popf
sti
mov
or
jbe
cmp
in
jo
inc
dec
cmp
loop
imul
add
bound
adc
sbb
in
iret
cmpsl
push
mov
cmp
jle
pop
add
lods
xchg
pop
fmull
stos
aaa
inc
jecxz
push
and
pushf
push
lcall
inc
imul
sbb
fisubrl
scas
bound
or
outsb
fstps
and
mov
into
mov
push
sub
jnp
mov
or
punpckhbw
jne
pop
orb
scas
outsl
sub
leave
xor
data16
cmp
shll
mov
shr
insb
sbb
and
cmpsl
nop
shrb
test
ja
ds
test
cmp
or
je
filds
aad
sbb
xchg
dec
ret
dec
fidivrl
dec
mov
add
and
xchg
lret
outsb
lock
sbb
cmp
roll
lcall
xor
mov
shlb
int
xchg
push
dec
cmp
int
sub
xchg
leave
push
jecxz
jecxz
loopne
adc
lea
mov
mov
ss
cmc
jg
or
cmp
mov
orb
jbe
and
scas
mov
push
dec
lods
out
pop
jp
ret
daa
xchg
dec
stos
outsl
dec
inc
mov
push
outsb
adc
push
gs
jno
les
int3
xor
popa
xchg
sti
imull
mov
ljmp
or
xor
xor
dec
popf
fstpt
out
add
shl
cwtl
pushf
lcall
mov
mov
sub
sub
movsl
mov
inc
mov
dec
and
inc
jmp
or
inc
jne
sbb
jbe
test
cmp
mov
fwait
imul
ja
add
xor
pop
nop
aad
pop
bound
push
mov
lahf
lret
or
xchg
out
mov
cmpsl
mov
push
into
xchg
test
xchg
pop
mov
test
sbb
inc
inc
adc
pop
xchg
into
jl
sti
inc
lds
bound
and
pop
xor
sbb
scas
insl
xor
mov
push
mov
mov
add
loope
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
insb
rcrb
loope
ret
das
jnp
jae
lods
fmull
clc
add
sbbb
dec
aaa
stc
std
jg
fsubs
jae
sbb
stos
out
ja
je
enter
inc
push
fcoml
stos
xor
pop
push
ss
mov
testl
pop
sub
dec
xchg
push
es
pushf
and
push
bound
pushf
push
push
fistpl
jg
push
mov
adc
in
dec
xchg
je
mov
mov
pop
xorl
sbb
fisubrl
cld
sub
push
pop
jge
cmp
pop
pop
xchg
and
mov
shlb
and
push
aas
xchg
mov
mov
mov
loopne
mov
cmp
into
push
fbld
repnz
mov
and
pop
pop
ljmp
push
jnp
leave
dec
test
test
mov
inc
mov
xor
and
mov
in
add
fimull
add
ret
push
xlat
inc
push
xchg
scas
sti
sub
mov
or
push
sbb
sub
dec
hlt
jl
sbb
dec
int
int
leave
fmul
enter
outsb
lret
test
pop
leave
dec
and
int
sub
xchg
pop
sbb
push
jne
mov
mov
mov
bound
in
pushf
mov
fwait
into
repz
sbb
test
sbb
pop
imulb
ss
lret
or
adc
mov
sti
sahf
sub
scas
testb
mov
sbb
not
aam
mov
mov
jl
sahf
js
mov
mov
mov
sub
mov
pop
repz
lahf
pop
lcall
sub
push
sbb
outsb
or
mov
cmp
mov
sub
or
rorl
jl
jnp
mov
fmull
enter
add
add
mov
jo
mov
movsl
mov
loope
fwait
popf
pop
je
inc
sub
popf
sti
int3
rcrl
je
pop
pop
stc
mov
cpuid
lock
outsl
mov
popa
lret
jo
cmpsb
sbb
rolb
ds
pushf
and
int
xchg
adc
pushf
adc
arpl
cmp
pop
jnp
jg
ret
es
push
dec
sbb
inc
out
cmpsl
fistps
add
loop
dec
lret
xor
lret
loope
add
jle
cwtl
fbstp
mov
sbb
mov
lret
lcall
flds
imul
mov
xor
add
aas
cltd
movsb
xchg
movsl
mov
outsb
pop
popa
daa
mov
stc
stc
adc
fstpt
pop
in
test
push
jp
push
sbb
pop
into
aad
cmpsl
into
in
insb
mov
repnz
push
fdivrl
push
inc
mov
push
loop
push
sub
xor
loop
xlat
in
stc
dec
xor
jl
fisttps
push
ficomps
cmpsb
add
pop
jmp
shrl
adc
xchg
sub
stc
stos
dec
cld
je
sbb
popf
jo
cs
add
test
lahf
mov
fwait
or
mov
sub
mov
in
icebp
jno
dec
es
mov
cli
push
fdivs
test
mulb
ficomps
push
test
movsl
rcll
out
or
cmp
repnz
mov
stc
xor
xor
jmp
jge
jmp
cmp
mov
js
push
adc
adc
fdivrl
dec
or
movsb
mov
cmp
add
je
fwait
mov
and
and
int3
in
cmpsb
aam
bound
xor
xor
mov
sti
push
mov
or
jo
imul
jnp
fwait
dec
cltd
sarb
adcb
cmp
xor
jmp
add
lret
pop
mulb
in
ficoms
mov
lods
dec
mov
add
rorl
pop
sbb
std
sub
cltd
aam
dec
shr
adc
jle
mov
call
mov
popa
popa
adc
push
or
lods
push
sub
push
mov
push
adc
xchg
inc
filds
mov
dec
xchg
sub
jmp
aas
rcrb
xchg
out
cmp
in
mov
les
mov
inc
out
fisttpl
mov
sub
xor
push
jge
add
addr16
std
mov
call
and
adc
mov
adc
jne
sahf
ret
adc
xchg
int
test
mov
mov
xchg
incb
dec
gs
cmpsb
jecxz
pop
mov
add
stos
dec
insb
mov
push
cltd
int
repz
scas
nop
stos
mov
jne
sub
jle
mov
lcall
and
adc
and
inc
jb
cmp
add
fsubrl
insl
das
push
into
insb
adc
loopne
sbb
jbe
mov
sbb
push
xchg
bound
loope
shlb
xchg
out
inc
enter
xchg
pusha
aaa
sub
mov
cmp
or
aas
mov
addl
adc
pop
je
cld
aaa
xchg
inc
call
xchg
imul
push
dec
push
pop
dec
fcomps
inc
or
pop
pop
add
add
push
int
insl
xchg
cltd
shlb
test
xor
mov
cmp
push
ds
sub
icebp
cltd
les
outsb
lret
pop
sbb
ss
xor
pop
insb
xchg
daa
mov
sbb
dec
shrb
stos
inc
in
and
fs
ja
mov
stc
xchg
std
mov
jne
lret
push
rcrb
movsl
mov
inc
fwait
pop
scas
mov
mov
das
movsb
sub
stos
cmp
outsb
dec
pop
dec
mov
add
xchg
adc
call
jo
sahf
out
xchg
inc
in
sbbl
adc
xchg
arpl
jns
mov
xor
mov
ds
or
jmp
pop
cwtl
adc
mov
dec
mov
inc
pushf
aaa
cltd
das
jge
and
fldl
xchg
int3
sub
sti
cld
aad
aas
scas
mov
jge
inc
and
jne
cli
add
pop
gs
leave
data16
inc
leave
mov
js
dec
aam
pushf
push
ss
lods
mov
mov
cmp
je
mov
mov
imul
inc
pop
bound
adc
mov
enter
jns
int
adcb
pop
loopne
or
mov
xor
or
inc
xor
jnp
xchg
dec
lret
insl
inc
mov
mov
jbe
mov
test
cmp
fs
jae
jo
inc
push
or
and
push
mov
cmp
mov
lock
cmc
sbb
push
mov
mov
pop
mov
adc
pop
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
push
lock
adc
adc
inc
icebp
in
mov
cmp
pop
imul
mov
jle
mov
cltd
out
adc
xchg
and
pop
ljmp
leave
xchg
aaa
leave
inc
fs
inc
jl
imul
ja
sbbb
mov
repnz
lods
sbb
mov
into
mov
lods
push
mov
jecxz
inc
jmp
and
inc
pop
lret
js
inc
aad
mov
jae
test
inc
pop
jecxz
dec
add
mov
fwait
push
mov
xchg
inc
das
add
call
test
sti
jbe
dec
adc
dec
bound
loopne
lret
popa
or
add
addb
mov
mov
xchg
mov
pop
push
ret
jnp
cmc
xorb
and
xchg
jae
std
das
pop
repz
or
pusha
sbb
unpcklps
lds
push
cmp
xchg
or
lcall
popa
pmuludq
icebp
out
sti
and
test
sub
mov
insb
and
incl
js
jle
jo
jns
mov
sti
lock
mov
xchg
aas
mov
and
jbe
adc
sbb
sbb
cmp
sbb
xchg
dec
push
pop
push
pop
pusha
test
outsl
ret
or
sbb
fistl
push
faddl
pushf
mov
les
mov
jp
inc
xor
inc
push
jle
movsl
dec
xor
cmp
sbb
mov
sahf
sbb
mov
add
inc
bound
push
lcall
xchg
rcll
xor
sti
xchg
xorl
cmpsl
add
inc
stc
xor
imull
stos
mov
sar
cmp
in
jg
mov
mov
sti
sbb
mov
fstpt
rcrb
add
repnz
imul
loopne
mov
pop
int
shll
fs
lock
jle
push
push
add
xchg
jne
xchg
out
popf
adc
sbb
adcl
push
xor
das
repz
mov
lcall
lods
inc
add
clc
mov
jbe
sbb
clc
jnp
lret
and
add
into
push
stc
pop
mov
mov
add
lock
lret
sar
popf
pusha
bound
mov
mov
test
insl
adc
cmp
ss
rorl
xor
jmp
add
outsl
cmp
out
sub
into
js
std
cmpl
sbb
cs
fnstsw
mov
addr16
lret
test
jo
pushf
inc
jge
jmp
lret
and
adc
dec
adc
sbb
mov
push
dec
out
mov
icebp
repnz
dec
fisubs
add
push
repz
stos
insb
push
and
mov
xchg
sub
vandpd
pop
cmp
sbb
mov
rep
test
push
enter
adc
mov
xor
and
notb
dec
dec
mov
jp
ret
aaa
and
fildll
xchg
sub
sarl
add
in
insb
inc
setnp
and
adc
stc
xchg
mov
adc
out
test
test
adc
faddl
pushf
mov
jmp
sahf
pop
pop
adc
lahf
sbb
insb
mov
adc
adc
xor
push
dec
lods
mov
push
lcall
mov
arpl
sbb
lret
add
stos
bound
pop
mov
adcl
call
pusha
xchg
mov
sti
push
pushl
out
sahf
xchg
pop
outsl
dec
sub
in
and
lods
dec
fld
sarb
ds
enter
mov
mov
aas
pop
or
jle
jb
ficoml
inc
mov
push
push
ss
xchg
dec
sbb
cmp
sahf
mov
push
je
cmp
xchg
add
imul
mov
inc
popf
jp
add
mov
add
inc
int3
je
sti
scas
fdivs
aad
add
scas
fnstenv
lret
dec
std
push
xchg
push
sub
fsubrp
xlat
js
inc
rcrl
jp
std
pop
loopne
in
cmp
sub
inc
jbe
jnp
cmpsl
mov
rcl
dec
call
lahf
mov
dec
sbbl
clc
cli
dec
and
nop
loopne
mov
add
add
out
pop
scas
and
in
mov
fnsave
lods
psllw
inc
es
pop
mov
sub
inc
setns
dec
addb
adc
das
jbe
mov
cli
out
mov
nop
pop
and
add
shr
cmc
stos
addr16
fcmovne
jmp
lea
shr
xchg
je
add
js
mov
xchg
nop
imul
addr16
xchg
lret
dec
dec
sub
dec
in
mov
jne
pop
data16
push
nop
pop
cmp
xchg
decb
scas
fiaddl
into
cld
mov
cmp
mov
cmp
popf
pop
pop
repnz
pop
test
push
dec
fldcw
nop
jbe
pop
insl
and
dec
push
add
xor
dec
or
sub
adc
gs
popf
inc
mov
fsubl
xchg
cmp
cmpsl
mov
xor
jno
jmp
jae
movb
pop
loope
cmp
mov
mov
test
mov
popa
in
mov
inc
shlb
movl
dec
das
pusha
jecxz
and
cmp
imul
insl
cli
jno
pop
mov
lahf
call
xor
nop
jp
aaa
ficoms
inc
add
jmp
jne
mov
in
pusha
mov
in
lods
dec
and
int
shlb
push
in
mov
or
es
and
aad
sti
mov
sub
jno
imul
sub
push
xchg
dec
mov
cmp
int3
bound
mov
inc
sub
sbb
ret
add
imul
push
or
xor
dec
push
ror
cwtl
cwtl
xchg
mov
popa
jge
xor
rclb
mov
test
jo
push
xchg
or
adc
in
sbb
fld
push
mov
push
loope
inc
arpl
mov
xchg
int3
xchg
fcmovnb
push
xor
lret
xor
dec
cmpb
push
xor
in
fdivs
or
xor
mov
sub
movsb
andl
fwait
testb
call
inc
bound
lcall
test
ret
cmp
xchg
mov
cmp
lcall
cltd
pushf
out
cmc
punpckhwd
idivl
lods
cmpsl
push
add
pop
jno
dec
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
cmp
adcb
bound
out
jmp
cwtl
cs
pop
out
mov
stos
or
aas
pop
rcl
scas
xor
rcrl
lods
dec
pop
jp
jge
or
cli
mov
dec
adc
mov
push
adc
inc
scas
daa
subb
push
outsl
xchg
mov
inc
sbb
ljmp
push
gs
pop
and
mov
mov
popf
mov
mov
loop
aam
push
jp
cld
mov
out
push
jmp
test
out
inc
xchg
ret
mov
mov
jmp
mov
and
addr16
jecxz
push
hlt
scas
lock
daa
repnz
int
sub
andb
mov
xchg
push
test
outsl
daa
lock
sbb
cmp
lea
lods
cmp
test
lret
cwtl
mov
sub
push
dec
pop
aad
fst
cs
push
test
add
xchg
cmpsb
daa
adc
gs
mov
stos
jno
ror
push
out
adc
cmp
fwait
jmp
out
push
or
fistpl
ljmp
jge
cwtl
mov
pop
cli
shrl
cmp
sbb
inc
adc
cmc
bnd
lods
push
fmulp
das
sbb
loopne
jle
sar
test
push
movsb
bound
push
sbb
adc
mov
lahf
rol
aaa
popf
cmp
cmc
ja
jecxz
repnz
xchg
mov
imul
dec
aad
push
or
or
fists
xchg
lods
push
pop
sbb
outsl
and
orb
mov
mov
lock
cmpb
clc
lods
popf
push
cmpsl
iret
pop
insb
xor
pop
aaa
adc
loop
or
rcr
dec
jl
jle
repz
pop
icebp
xchg
inc
add
outsb
dec
mov
std
sbb
leave
orl
es
sub
xchg
push
subb
pop
mov
stc
xor
aaa
xor
sub
pop
leave
add
push
push
lret
or
adc
sti
iret
jo
loope
fstps
push
cmp
aas
in
repz
loope
sahf
push
mov
cld
stos
repnz
push
and
dec
sbb
pop
divl
xor
xor
lret
mov
push
push
pop
ss
rcrl
out
lret
mov
xor
out
into
shlb
icebp
pusha
push
lds
sbb
xchg
sub
insb
mov
sbb
dec
adc
in
pushf
icebp
sbb
lods
xlat
push
add
in
int
add
popf
adc
cld
in
mov
iret
mov
push
shrl
cwtl
mov
movsb
mov
out
add
and
loope
xor
insb
push
movsb
rcrb
aas
xchg
sbb
push
mov
or
shll
adcb
fbstp
mov
pusha
jge
push
sbb
jns
xor
sahf
cmpsb
jg
in
outsl
xor
das
sti
inc
imul
xchg
scas
jg
cmp
cld
xor
mov
or
into
mov
xchg
mov
xchg
cmp
and
jecxz
xchg
jo
mov
rclb
test
shll
pop
movsb
sahf
das
shlb
xchg
dec
jnp
test
or
in
xchg
lcall
out
push
fstpl
sahf
lcall
lea
icebp
sahf
lcall
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
inc
dec
mov
stos
adc
adc
cmp
mov
pop
mov
jae
xchg
jp
dec
sub
imul
adc
cmp
push
jle
inc
enter
sbb
jp
xor
fwait
jg
in
adc
adc
xchg
mov
dec
lock
dec
pop
out
rcrl
inc
js
ljmp
push
in
loop
out
xor
add
jae
fwait
mov
mov
dec
add
aad
cmpsb
aaa
rcl
sbb
call
cmp
dec
addl
nop
cli
xchg
ffreep
inc
scas
popf
jmp
and
add
sbb
out
cmp
push
popa
mov
data16
push
ds
iret
xor
mov
dec
sbb
jp
jo
bswap
xchg
gs
or
mov
mov
lahf
sbb
mov
faddl
int3
inc
mov
mov
ret
xor
push
inc
mov
push
cmpsl
std
mov
xchg
or
movsb
test
sbb
jle
fsub
nop
cmp
das
xor
shrl
fimull
dec
es
xchg
jnp
mov
add
sub
or
mov
cmp
mov
push
loopne
shlb
mov
mov
add
fisubrl
xchg
sbb
popa
sarl
mov
push
mov
neg
imul
push
sbb
test
adc
pop
sbbb
push
jmp
pop
or
or
mov
loopne
lret
addr16
cmp
imul
in
fs
pop
pop
mov
lcall
sbbb
mov
movsb
mov
sbb
nop
lcall
sub
movhps
lahf
xor
in
movsl
fs
dec
adc
inc
inc
andb
lods
mov
jnp
jle
iret
jmpw
daa
stos
lret
mov
mov
mov
pop
aad
ret
cli
adc
cmp
or
je
gs
cltd
aad
xchg
and
xlat
roll
mov
jge
and
enter
leave
sbbb
outsb
mov
xor
std
mov
ljmp
je
pop
movsb
mov
insl
sub
std
mov
jns
jg
pop
lock
outsl
dec
aad
cmp
enter
and
and
add
aam
lock
orb
jbe
xor
or
mov
loope
xchg
cltd
lock
pop
mov
fcoml
push
lods
adc
push
loope
sub
inc
or
inc
scas
jmp
jecxz
je
stos
ret
push
dec
adc
push
decl
xchg
mov
jbe
and
sub
dec
sbb
or
xchg
aaa
mov
int
xor
push
imul
add
imul
mov
andb
mov
cmp
xor
hlt
ds
xor
push
jns
xchg
arpl
xchg
push
pop
aaa
rcll
je
divl
dec
test
pusha
adc
sarb
pop
push
iret
fisttpll
test
jb
adc
out
jl
inc
inc
sub
clc
mov
nop
fwait
sbb
jno
pop
movsb
mov
adc
pop
push
push
mov
ss
inc
sbb
xchg
das
jp
addr16
sarb
clc
pop
aaa
into
sbb
addl
mov
dec
mov
adc
mov
decl
jmp
mov
clc
mov
sub
jle
mov
adc
cli
and
ja
pop
and
inc
adc
or
mov
jae
sahf
dec
inc
push
mov
add
xor
out
mulb
scas
or
push
test
test
jb
int
in
insb
ffreep
cltd
or
push
cld
mov
or
dec
jne
frstor
mov
push
adc
test
jb
push
cmc
cwtl
iret
and
jne
push
lods
push
int
mov
and
xchg
push
push
enter
jbe
mov
add
dec
fs
mov
sub
outsl
out
imul
add
cs
movsl
inc
popa
or
outsl
mov
test
cmp
int3
sbb
push
fistpll
mov
cmc
mov
inc
mov
xchg
lahf
mov
icebp
bound
movsb
ss
xor
popf
fs
mov
sub
dec
jle
jno
sub
or
mov
xor
add
xor
add
mov
pop
push
imul
je
add
cmp
push
and
jl
dec
icebp
push
lea
notl
in
sub
aad
or
rep
enter
xor
mov
addl
mov
mov
enter
mov
pop
push
and
jb
adc
sub
testb
call
jno
xchg
sub
lds
or
loopne
jb
or
add
push
mov
cs
jo
test
in
in
jne
sarl
add
mov
jnp
and
data16
mov
jns
dec
or
loopne
jno
les
add
cwtl
dec
jge
scas
mov
sbb
and
test
mov
out
imul
test
dec
fcmovb
gs
leave
dec
xor
fcoms
scas
in
rcr
pop
sub
scas
movsb
dec
mov
scas
orl
add
roll
aad
addr16
fsubr
cmpsl
sbb
lahf
and
mov
addb
mov
mov
pop
inc
mov
and
dec
cld
arpl
xlat
push
fdivrp
xchg
and
aaa
push
andl
dec
lcall
inc
push
xchg
roll
lods
add
aam
sbb
sub
dec
jb
and
ror
pop
sahf
cwtl
mov
ret
in
and
fisubl
fsubrs
inc
orl
adc
sbb
stos
xchg
int3
inc
mov
repnz
adcl
test
xor
cmpsl
insl
jp
mov
and
in
addr16
mov
cld
adc
fcmovne
inc
fadds
ss
push
pop
icebp
sbb
sbbb
gs
shll
and
inc
arpl
insl
sub
inc
ljmp
mov
test
cmp
out
inc
mov
push
cmp
sbb
xor
xchg
adc
pushf
and
shll
pop
shl
lock
mov
xor
lcall
dec
or
daa
mov
cmp
in
add
push
push
dec
inc
mov
sbb
lock
cwtl
push
fcoms
movsb
cmpl
stos
push
cltd
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
cli
and
mov
stos
adc
adc
xor
call
dec
cmpsl
aam
jno
bound
sahf
repz
mov
fs
aaa
insl
xlat
or
dec
jecxz
les
movsb
mov
test
imul
xchg
pop
lret
push
xchg
xchg
or
jno
inc
test
cmp
or
xlat
mov
iret
mov
add
add
es
xlat
mov
xor
shlb
mov
out
sub
clc
sbb
nop
sahf
jns
adc
add
jge
and
shlb
inc
sbb
pop
adcb
and
xchg
sbb
dec
pop
sub
pushf
jne
dec
mov
cs
fs
cmp
mov
xor
lods
or
negl
lcall
jl
jnp
jmp
or
ljmp
jg
dec
cmpb
inc
add
xchg
push
mov
pop
add
push
movsl
mov
xchg
leave
cld
pusha
or
imul
mov
loopne
ret
cmp
or
rcrb
mov
or
jo
or
sub
xor
iret
xchg
xorb
xchg
mov
cmp
cs
mov
dec
adc
xchg
fwait
rolb
in
mov
cmp
sbb
frstor
xor
test
or
xchg
xchg
sub
bnd
insl
pop
bound
adc
stc
xchg
and
xor
mov
out
fcomps
sub
dec
lods
adc
adc
shlb
dec
pop
hlt
and
and
dec
lcall
out
cmp
cmpsb
xor
xor
pop
xchg
xchg
push
pop
mov
jb
and
mov
fiaddl
jno
inc
pop
dec
cmp
aaa
cmp
lods
je
inc
xor
iret
fisubl
push
pop
dec
jns,pt
lret
scas
sub
pop
xchg
mov
inc
std
outsl
icebp
lods
dec
in
loopne
sbb
add
movsl
push
and
dec
aad
dec
adc
rcrb
adc
pusha
and
decl
popf
aas
sub
mov
mov
dec
fmulp
jbe
out
icebp
scas
mov
push
hlt
cli
aam
roll
negl
sub
out
jge
fisubl
inc
sub
pop
vpunpckhwd
lret
cmp
jge
int3
aaa
xchg
and
xor
xor
fsub
cmp
jno
mov
fistps
arpl
gs
int3
lea
lea
push
dec
mov
pop
outsl
mov
ficompl
inc
xor
repnz
cmc
jmp
adc
call
mov
loopne
mov
or
fsubl
pop
stos
inc
addl
adc
sbb
arpl
inc
and
and
add
push
sbb
fwait
xchg
mov
jmp
mov
mov
dec
adc
sbb
stc
inc
clc
pushf
inc
mov
into
xor
rcrb
scas
cld
xchg
mov
mulb
pusha
std
cmp
mov
mov
cmp
movsl
fisubrs
cli
push
xchg
xchg
in
pop
mov
mov
and
out
lcall
push
pop
fistps
out
cmp
xor
add
rcll
mov
mov
and
xchg
je
cmp
addr16
lahf
movsl
faddl
fwait
test
xchg
aad
cld
xor
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
out
out
or
mov
int
icebp
dec
notb
daa
rclb
mov
out
sub
scas
popa
xchg
data16
faddl
cmp
ss
jl
mov
adc
cmp
lahf
xchg
and
scas
nop
inc
lcall
call
sarb
mov
jmp
sub
dec
call
dec
adc
or
loope
push
out
mov
push
dec
or
sbb
orl
jp
mov
mov
mov
cmc
push
pop
shrb
scas
mov
scas
xchg
arpl
push
fwait
dec
dec
sub
cmp
xorb
mov
mov
sub
mov
out
push
inc
pop
mov
sub
jnp
adc
lea
js
xor
or
hlt
sarl
push
loop
and
aam
jl
stos
and
mov
adc
mov
stos
and
and
cmp
adc
mov
mov
bound
dec
orb
int
fdivs
sub
and
adc
lret
inc
or
add
ror
adcb
mov
fwait
cld
leave
ss
int
out
push
jmp
in
jecxz
inc
add
jge
jmp
outsl
data16
divb
mov
mov
aaa
in
stos
sbb
rorl
push
movq
push
add
ds
test
mov
test
movsl
pop
imul
ss
mov
fmuls
jns
outsb
and
or
ds
lcall
xchg
lds
inc
dec
or
ret
sub
cltd
out
popf
xor
les
outsl
loopne
or
push
das
ljmp
test
mov
nop/reserved
leave
daa
loope
arpl
and
and
cwtl
inc
std
fwait
sbb
add
scas
add
push
loope
jmp
in
in
mov
xchg
cmpsb
and
push
fwait
js
sbb
loope
pushf
and
cld
cmc
sub
xchg
int3
jg
loop
insl
ret
sub
pop
movsb
xor
push
insb
shll
inc
inc
sub
xchg
pop
arpl
out
inc
lock
imul
jno
sub
orl
push
and
pop
jnp
mov
or
inc
mov
mov
jnp
push
cmp
jns
push
and
into
arpl
pop
mov
ss
or
sub
lea
jbe
cs
push
es
mov
add
jl
out
mov
cld
dec
arpl
add
in
sbb
stc
test
gs
adc
fwait
lret
pop
lods
insl
dec
out
xchg
imul
dec
sub
fimull
xchg
cmp
push
aam
fidivl
into
nop
sbb
xchg
aam
push
push
push
loop
stc
mov
cwtl
add
pop
mov
sub
jb
fldcw
out
dec
repz
dec
sarl
pop
gs
fcmovu
mov
pop
aas
and
outsb
nop
inc
fcmovnu
js
xchg
ss
xchg
in
icebp
stos
adc
cmc
mov
cmc
outsb
dec
arpl
add
sbb
jne
pop
inc
xlat
inc
leave
call
xor
push
push
push
push
inc
push
jl
adc
out
or
xchg
xorl
push
sub
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
jo
sarb
pop
adc
adc
es
mov
adc
cli
jae
loopne
mov
push
xor
std
or
iret
or
scas
rol
cs
cmp
movsl
cmp
push
fimuls
add
out
repnz
das
adcb
add
adc
sbb
cmpsb
jge
aam
cmp
out
cmp
fldcw
lret
adc
movl
adc
add
pop
pushf
sub
lcall
mov
mov
sbb
and
jmp
and
clc
cmp
dec
loopne
ds
aam
mov
add
jge
cmp
jbe
push
pop
mov
xlat
addr16
push
movsb
call
js
or
inc
leave
scas
inc
nop
add
insl
cmp
jmp
lcall
rcl
fadds
jno
rcrl
pop
push
dec
push
pop
lahf
push
outsl
pop
fdivrs
test
sub
movsl
aam
push
rclb
stos
add
dec
aaa
pushf
les
jge
lcall
icebp
dec
dec
jns
in
aaa
pop
fstp
cmp
movsb
addr16
xchg
subl
loop
je
inc
mov
and
pushf
movsb
aam
cwtl
rorb
xor
lods
lods
xchg
jae
into
call
or
cld
pushf
les
mov
out
dec
cmp
xor
jne
in
les
jge
mov
push
fisttpll
add
and
lret
mov
jno
add
les
push
movsb
ret
jg
mov
testb
lods
jo
lahf
int3
sbb
cli
jl
mov
inc
orb
sar
xchg
std
js,pn
mov
lret
push
lods
ja
mov
inc
and
shl
inc
outsb
and
adc
mov
xchg
jmp
aaa
add
data16
xchg
ret
push
sub
jne
push
mov
jno
movsb
xchg
adc
testl
inc
add
mov
jb
shll
int3
jg
iret
icebp
sarl
loop
xlat
rclb
push
inc
cmpsb
js
push
hlt
sub
pushf
add
in
subl
fcoml
std
jmp
inc
roll
rorb
inc
push
addr16
push
jne
cmp
add
cmpsl
jbe
fs
into
pop
stos
lds
sub
or
sbb
loopne
rorl
xchg
cmpsl
mov
push
inc
jbe
outsl
scas
les
pop
ljmp
and
mov
mov
out
movsb
fsubrl
mov
push
sar
movsb
hlt
cld
jle
jno
or
in
and
push
lea
nop
pop
in
mov
out
jo
and
int3
adc
outsl
stc
pop
mov
hlt
aas
adc
out
mov
repnz
test
dec
cltd
push
je
lret
dec
inc
ret
pop
jge
fcmovne
lahf
out
sub
pop
push
xor
or
ret
inc
xchg
or
rorl
sub
jb
lods
daa
or
ret
jno
cwtl
push
cltd
fstl
cli
xor
pop
je
jp
paddusw
mov
xor
inc
add
rcl
fadds
les
icebp
dec
lods
mov
sub
ss
mov
into
lahf
mov
cmpsb
dec
adc
cmp
mov
and
add
inc
daa
clc
xchg
dec
gs
and
mov
or
lock
pop
and
sahf
neg
sahf
or
add
pop
into
testl
jnp
and
or
jge
push
scas
cmpsl
and
jne
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
stc
xor
xor
test
jge
push
fidivs
sbb
or
out
adc
popf
xchg
jb
out
cltd
fnsave
aaa
incb
xor
pushf
push
popf
fidivs
pop
jecxz
sbb
pushf
jnp
push
rclb
fmulp
test
popa
lods
pop
jmp
and
add
or
popf
jbe
push
inc
mov
cmc
lahf
fisttps
sbb
dec
fs
shrl
mov
ljmp
push
push
addr16
mov
les
enter
mov
sbb
nop
sbb
xchg
jecxz
push
add
xchg
xlat
fcomps
lea
mov
les
inc
mov
push
adc
mov
mov
sub
movsb
jmp
inc
push
jecxz
test
icebp
imul
push
jl
inc
sub
adc
inc
fmul
xor
mov
add
pop
pushf
xchg
popf
dec
fildll
dec
es
out
mov
ljmp
mov
inc
xchg
mov
test
out
jp
xor
movsl
xchg
test
iret
shll
fisttpl
sub
movsb
fidivl
mul
fimuls
add
rcl
push
dec
add
mov
mov
sbb
adc
negl
aaa
lcall
sbb
or
sbb
sti
push
cmp
jmp
or
add
je
sbb
lcall
or
insl
mov
mov
mov
cmpsl
mov
es
sbb
push
ret
pop
push
jnp
mov
mov
dec
sbb
add
mov
dec
mov
add
fstps
pop
orl
insl
inc
outsb
outsb
ret
mov
jbe
sub
das
cmpsb
mov
lock
lret
cs
inc
insl
pop
rcrl
cltd
push
push
test
jnp
sbb
das
ret
push
sub
inc
xchg
lods
jp
mov
mov
pop
add
sub
cmpsb
push
pusha
mov
xchg
sub
aam
mov
and
out
outsb
sub
in
sti
jne
std
fs
js
mov
mov
push
pop
dec
test
cmp
icebp
dec
cld
lea
jmp
into
mov
ret
xchg
movb
adc
fdivs
xchg
jg
mov
out
mov
sbb
ljmp
popl
sahf
mov
les
ror
std
mov
dec
dec
add
ljmp
insl
mov
leave
bound
cmp
dec
rcrl
push
sahf
cmp
pop
rorl
xchg
stc
jp
adc
and
xchg
adc
fistl
xchg
inc
insl
cmp
repnz
addl
fildl
push
jmp
clc
xchg
cmp
aam
lds
push
fs
js
jns
das
cmpsl
ss
lret
or
push
mull
jnp
sbb
jp
ficoml
in
add
pop
pushf
js
icebp
rcrl
addr16
jns
jl
cmp
xor
scas
push
push
and
sub
pop
add
das
or
ljmp
pop
mov
shl
adc
push
data16
mov
dec
cltd
ljmp
lahf
mov
ficomps
push
adc
mov
int
js
lds
inc
adc
mov
mov
jo
nop
ss
mov
shlb
clts
sti
arpl
test
test
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
cli
sahf
lods
inc
dec
adc
adc
jmp
popf
mov
push
sti
insl
add
inc
pop
lahf
mov
mov
or
xchg
push
mov
xor
mov
fldenv
push
pop
int
push
xor
cmpsl
or
dec
ss
add
test
dec
shlb
adc
lret
add
or
loop
mov
mov
sub
cwtl
or
ret
daa
push
add
or
mov
xor
push
cmpsb
lret
jno
testl
mov
xchg
jo
notb
fnsave
icebp
push
gs
pop
sti
sti
hlt
jp
jns
xor
cld
ficoml
jnp
dec
add
dec
sub
cld
std
sbb
test
jl
push
pop
sub
mov
arpl
dec
or
ficoms
incl
sub
mov
inc
insl
les
and
push
mov
xorl
test
sbb
mov
call
pop
mov
ja
add
pop
lods
fs
pusha
xchg
movsl
fs
pop
jb
std
sub
lret
xorb
xchg
or
enter
sub
scas
pop
js
pop
sbb
stos
ja
stc
xorb
xchg
mov
jnp
pushf
sbbb
out
mov
or
jo
sbb
mov
out
in
andl
adc
pop
sbb
dec
in
sub
inc
xor
dec
inc
push
mov
in
sbb
in
sub
js
sub
cmpb
mov
sti
jbe
test
rorl
and
xchg
push
add
addr16
out
bound
cwtl
or
sub
popf
jo
add
inc
aad
rorl
imul
add
mov
pop
xchg
cmp
mov
sbb
movsb
mov
testl
and
outsl
adc
test
dec
push
les
adc
xchg
add
inc
or
push
mov
inc
cmp
rcrl
sub
mov
mov
hlt
adc
pop
push
in
mov
mov
and
jne
pop
roll
push
push
xchg
outsb
xchg
or
xlat
add
mov
mov
sbb
mov
jecxz
inc
or
dec
add
lds
or
test
xchg
xchg
pop
mov
call
adc
roll
fcmovb
into
jg
push
incl
push
push
xlat
dec
in
aas
mov
ss
add
in
pop
jns
lcall
jmp
xor
mov
push
xchg
mov
adc
jb
xor
pop
jno
leave
popa
clc
test
cwtl
adc
cmp
adc
inc
push
mov
or
sub
ss
outsl
pop
idivl
popa
pop
dec
pop
stos
mov
dec
fdivrl
je
dec
jno
subb
mov
mov
aam
clc
int
add
clc
mov
fidivs
loope
mov
sbb
popa
mov
cli
rol
std
mov
addl
add
repz
inc
dec
push
xchg
arpl
mov
cld
xor
mov
mov
out
push
push
lcall
adc
outsl
inc
es
rorb
dec
push
push
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
push
sbb
ja
stos
push
lea
mov
mov
pop
adc
test
popa
jmp
fdivl
movsl
sti
rclb
mov
mov
lock
mov
out
and
dec
push
je
push
popf
mov
in
dec
sbbb
and
aam
jmp
cmp
int3
imul
sub
mov
mov
in
lret
xchg
mov
sub
dec
das
pop
or
cmp
sub
popa
cmc
inc
push
sbb
movsb
or
or
xchg
dec
sahf
insb
dec
icebp
push
mov
sbbb
and
sbb
je
jo
lea
mov
and
lret
jno
lock
sub
fimull
push
out
adc
lds
or
sub
cmpl
push
inc
or
cs
pusha
push
fcompl
and
leave
aam
adc
mov
andb
mov
xor
imul
dec
pop
sbb
xchg
jbe
mov
and
inc
or
or
push
arpl
mov
fmul
pop
cmc
iret
pop
test
push
xorl
jle
or
int
adc
lahf
mov
inc
ljmp
mov
addl
pop
push
movl
adc
jno
fwait
popl
lods
push
aas
fcomps
inc
mov
fdivl
xor
imulb
scas
nop
mov
imul
int
cwtl
out
xchg
xchg
out
mov
mov
xor
outsl
iret
pop
xchg
cmc
ja
sarl
jg
xchg
fistl
sbb
cmp
shrb
pop
icebp
cmp
sub
add
inc
cmp
pusha
fs
inc
push
data16
jne
jns
mov
pop
pop
shl
xor
jge
push
sbb
cmp
pop
xchg
es
dec
or
pop
cmp
lret
cli
daa
pushl
xchg
mov
call
js
ja
loop
jl
and
cmpsb
mov
or
xorb
in
nop
arpl
cmp
stos
mov
jmp
mov
loopne
in
cmp
push
mov
or
inc
jns
shll
push
cmc
xor
fisubrs
xor
and
xor
adc
lea
jns
xor
and
lret
pop
sub
scas
fdivrl
add
pop
push
mov
orb
addr16
dec
pop
filds
push
repnz
mov
mov
jl
idiv
ret
xlat
incl
xchg
push
cmp
loopne
ret
sarl
push
js
cld
leave
jnp
lds
outsl
rol
or
rcrb
out
nop
lahf
fsts
add
jmp
popa
cmp
push
stos
outsb
jbe
and
js
xchg
adc
jne
cli
cld
pusha
js
stc
cmp
fs
ret
decb
shlb
pop
pop
mov
nop
inc
jge
shll
sub
and
fwait
xchg
and
add
jns
push
lret
add
lock
xchg
mov
es
xor
rcll
repnz
outsb
jns
jle
pop
repz
sbb
inc
dec
daa
lcall
xor
popf
leave
outsb
in
mov
out
insb
mov
sbb
sub
or
add
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
push
push
cmp
adc
movsl
ss
pushf
rcrb
lcall
pop
mov
jno
sahf
pop
lret
bound
outsb
into
adcl
fbld
cld
divb
lock
or
add
lret
andl
lods
divl
test
cmc
scas
and
outsl
mov
inc
std
mov
bound
cmp
inc
adcb
mov
xor
sahf
push
nop
mov
add
js
push
dec
sub
and
adc
add
int3
xor
insl
mov
lret
mov
dec
inc
test
xchg
sub
pop
cs
mov
pushf
scas
aas
pop
pop
mov
outsb
adc
jns
paddd
xchg
dec
jg
stos
and
pop
ja
mov
adc
fcoms
mov
rep
add
jno
nop
in
ret
sarl
ljmpw
sbb
sub
xor
inc
cmp
push
pop
sti
mov
push
ljmp
sarl
jg
push
mov
faddl
add
pop
dec
stos
pop
das
ds
fisubrl
xor
sarl
mov
or
mov
dec
gs
xchg
xchg
aad
cmp
xchg
data16
pop
imul
fldenv
push
sub
enter
out
andl
cmc
sbb
xor
jg
mov
push
cmc
inc
out
imul
dec
and
mul
test
mov
cmc
cld
lods
dec
in
sbb
rcll
into
out
add
sbb
sub
in
jg
in
sub
or
fsubl
cmp
stc
jb
xor
daa
loope
stc
inc
call
and
in
cmpsl
ljmp
pusha
pop
int3
adc
xchg
push
cld
dec
bound
mov
aam
jmp
flds
push
jo
fsubl
xor
sub
int3
pop
push
sub
dec
xchg
mov
mov
cld
lcall
sub
mov
out
jae
sub
movsl
sbb
jp
sbb
scas
pusha
jb
ss
push
jbe
jnp
cmp
jecxz
xchg
orb
and
bound
jg
jge
add
xor
addr16
imul
fdivp
pop
or
mov
loopne
fs
in
enter
adc
leave
pop
mov
pop
movsb
jae
lahf
and
mov
jecxz
fucomip
cmp
or
loopne
xchg
and
mov
mov
test
push
jmp
mov
in
push
dec
aas
rcrl
jmp
push
inc
nop
out
lret
add
xchg
xorl
cmpsb
lret
push
mov
sbb
sub
mov
arpl
loop
ljmp
jns
push
jl
xchg
lds
mov
cwtl
mov
add
test
dec
push
jae
mov
mov
push
cmp
pusha
pop
jmp
stos
pop
lahf
xor
pmullw
lret
pop
jl
sub
lret
mov
insb
xlat
adc
mov
and
cmp
lret
insl
mov
icebp
inc
and
inc
xor
lods
scas
sbb
add
je
or
dec
ret
lock
ret
push
xor
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
xlat
dec
lods
insb
sysenter
adc
adc
into
xor
stc
loope
cmc
popa
mov
cwtl
out
cmp
jge
xor
mov
addr16
into
jo
mov
daa
sub
jbe
jge
aad
lods
das
out
mov
cwtl
or
jge
sub
pusha
dec
sub
and
jo
cmp
loope
mov
out
push
sbb
je
bound
notb
jb
adc
cmp
or
fcom
in
push
push
repz
clc
pop
adc
std
ss
xchg
or
push
push
das
pop
xor
push
mov
ss
flds
sub
loope
mov
fs
sbb
jno
pop
stos
sbb
inc
rclb
enter
dec
lahf
pusha
xor
mov
sti
faddl
and
dec
cmp
dec
in
add
sbb
mov
or
adc
mov
sti
or
rcrl
cmp
push
xchg
stos
push
repnz
inc
imul
push
sbbb
les
adc
scas
mov
bound
sub
cwtl
stos
mov
sbb
adc
sbb
adc
repz
and
shrl
in
std
lret
dec
rcl
ja
inc
in
cmp
fistps
xchg
shll
testl
or
leave
pop
movsb
lock
xor
fwait
sbb
shll
ror
dec
out
mov
outsl
xchg
stos
sbb
xchg
lcall
out
push
movsw
hlt
push
or
lods
cs
mov
clc
dec
and
shr
sub
sub
and
lea
sbb
les
test
push
repnz
shll
adc
sub
js
mov
jnp
test
stc
xorl
es
popa
lods
imul
es
sub
ds
pop
call
inc
shlb
push
lock
shlb
cmpb
mov
and
sbb
or
jae
xchg
mov
cmp
mov
lahf
jp
xchg
dec
xchg
push
incl
jle
bound
stos
fs
call
js
add
test
and
in
adc
enter
jb
push
js
or
dec
in
push
test
cmpb
and
pop
add
cltd
ss
cmpsl
je
fnstcw
nop
das
push
pusha
arpl
enter
sbb
jg
scas
icebp
dec
dec
mov
or
mov
fs
dec
pop
xor
daa
leave
shll
pop
lea
shll
xor
roll
sbb
rcrb
out
fdivp
lret
dec
movsb
sti
lcall
negl
or
nop
gs
add
or
bound
and
adc
jnp
dec
insb
pop
sbb
mov
enter
pop
mov
adcl
pop
pop
mov
bound
pop
jmp
cmpsb
into
test
jo
aaa
ja
nop
cmp
or
mov
in
jp
adc
out
mov
jmp
sbb
push
push
jle
aam
or
mov
pop
lret
out
sarl
and
pop
pop
mov
jmp
clc
adcb
adc
mov
sbb
rclb
enter
repnz
ds
in
jnp
test
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
mov
adc
adc
jne
xor
sub
daa
inc
subl
cmpsl
test
daa
jle
loopne
sub
push
call
push
or
in
enter
bound
repz
xchg
fyl2x
dec
cli
jmp
jg
pop
push
imul
sbb
add
aad
popw
push
adc
out
cmp
fistps
sbb
imul
movb
adcl
imul
arpl
cmpsb
jne
cs
fcoms
push
inc
mov
or
popf
dec
cwtl
pop
fnstcw
lahf
jp
pop
sub
repz
pop
and
daa
cld
call
jl
sub
push
icebp
loope
cmp
shlb
insb
inc
mov
lahf
loop
fiaddl
repnz
insl
out
pop
outsb
add
mov
sub
scas
jne
ja
icebp
sub
or
fiaddl
fimull
pop
adc
cli
mov
jle
cmc
or
xor
js
ret
in
aaa
out
sti
or
js
cli
lods
sti
inc
call
mov
in
jl
cmp
ret
cwtl
or
in
jnp
lds
test
ja
lods
inc
add
cmp
push
fisubl
rorb
cmp
lret
xchg
mov
out
aas
fucomi
push
jo
mov
or
lret
mov
les
lret
ds
lea
and
out
std
in
fsubs
ljmp
addr16
fiadds
sbb
sbb
xor
fmull
xor
jmp
mov
jmp
mov
test
sahf
les
dec
scas
jne
cs
pusha
or
insl
adc
stos
dec
rcrb
outsl
movsb
inc
dec
daa
jbe
pminsw
inc
sbb
call
dec
dec
add
hlt
adc
leave
cmc
out
cmp
sbb
mov
and
cmpsl
sbbb
ficoml
sbb
fnstsw
int
iret
sbb
dec
inc
jne
dec
xor
add
mov
jle
ds
sub
lret
xor
jno
jns
out
test
mov
push
out
in
inc
mov
pop
test
out
add
je
dec
jne
xor
jbe
mov
imul
pushf
test
or
mov
sbb
sub
mov
adc
int
lock
mov
adc
or
pop
adc
pop
ss
hlt
pop
je
lcall
xor
gs
jno
inc
pop
push
pusha
jns
aaa
inc
inc
aaa
lcall
cmp
cmp
jo
sahf
sar
xchg
pop
xor
clc
aad
pusha
push
call
sub
add
call
cmovns
clc
adc
scas
scas
shl
in
xlat
clc
std
push
movb
jbe
pop
je
jge
pop
xchg
sbb
in
sbb
insl
jb
pusha
or
movsl
mov
push
xchg
pop
ja
inc
aas
ret
inc
mov
inc
cmpl
test
clc
dec
out
adc
loop
lahf
cmp
int3
dec
push
jge
dec
pop
repz
ja
ds
sub
nopl
adc
orl
ja
aas
ja
push
or
jbe
out
arpl
cltd
test
icebp
jae
add
xchg
xchg
pop
fcompl
mov
mov
inc
shrl
pop
shll
push
sbbb
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
je
sub
inc
sub
adc
into
out
hlt
push
or
add
cmp
rorb
clc
push
insl
inc
cmp
cwtl
scas
orb
cmp
sbb
dec
xlat
movsl
aaa
test
xchg
fmul
mov
mov
insl
lret
push
ljmp
cmp
das
mov
xchg
arpl
mov
cmpsl
incl
push
out
aam
inc
mov
popa
push
fisttpl
icebp
mov
xchg
call
mov
dec
mov
mov
hlt
mov
xchg
enter
inc
sub
pop
pop
mov
shrl
mov
pop
test
fstpl
call
mov
cmp
lcall
mov
or
mov
arpl
data16
push
stc
push
cli
or
cltd
xchg
mov
mov
out
cmp
daa
mov
imul
mov
mov
aam
loop
sbb
jno
movsl
dec
mov
dec
int
je
fisubl
mov
pop
stos
and
mov
mov
xchg
jg
movsl
add
mov
dec
leave
push
in
xor
xor
mov
mov
ret
fidivrl
mov
jne
shll
out
sub
push
aaa
gs
and
jg
cmp
jns
dec
cmp
inc
add
fsub
and
mov
mull
and
mov
lods
jle
xchg
xchg
or
test
pop
inc
mov
mov
sbb
inc
inc
fmuls
cli
mov
ret
lods
mov
xor
fadds
insl
fcomi
xor
fstps
outsb
repnz
push
lds
pop
andl
or
jb
fucom
xchg
lea
push
mov
push
xlat
lods
fstpl
push
bound
es
dec
je
ret
int
inc
bound
xchg
test
mov
sbb
jbe
enter
ljmp
repz
ja
mov
lret
out
adcb
mov
out
add
mov
int3
fwait
popf
jl
mov
fistpl
mov
push
cli
cmp
or
in
lret
dec
jmp
mov
xor
pop
sbb
ret
rcrl
fistps
or
jge
push
add
clc
cmp
movsl
sub
loop
bound
scas
lahf
and
cmpsl
cld
mov
addr16
mov
pop
cltd
cmp
and
mov
repz
fistps
jmp
push
addr16
test
sub
hlt
adc
jbe
movsb
fldl
sbb
inc
loope
fistps
push
leave
sahf
mov
daa
pop
arpl
xor
push
insl
inc
mov
or
push
mov
popf
loop
std
dec
dec
leave
dec
xor
int3
dec
adc
enter
push
pop
jno
sub
pop
xor
out
rcll
sub
lret
xlat
cmp
out
lret
xor
add
popa
outsl
imul
sub
jecxz
xchg
jbe
fisubrs
xchg
inc
sbb
xor
sti
dec
stc
int3
push
fildl
cs
mov
stos
sbb
xlat
insb
scas
jo
pushf
sub
rorb
cmpb
push
dec
out
jp
cmpsb
outsb
call
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
adc
xchg
outsb
rclb
cmp
test
repz
jg
sbb
push
xor
cmp
mov
adc
pushf
mov
fldl
inc
pop
outsl
push
or
mov
mov
mov
and
and
add
test
cmpsl
mov
cs
cmpsl
rorb
mov
inc
loop
add
sti
leave
jmp
and
sub
fdivrs
sbb
arpl
xchg
mov
dec
mov
mov
arpl
bound
mov
loopne
cmc
in
cmp
int3
push
mov
push
roll
fstpt
push
inc
sbb
lods
mov
shl
cmp
cltd
or
lret
popl
adc
add
data16
icebp
pop
xchg
mov
jne
cmpl
clc
cld
icebp
imul
mov
add
ffree
xchg
and
mov
inc
cli
lock
nop
stos
popf
sbb
int
std
push
cmpl
push
mov
and
sub
fcmovnb
cmpsb
stos
cmp
push
orl
roll
xchg
cmp
inc
sbb
ret
aas
movaps
push
popa
or
cld
jmp
addr16
mov
les
xor
insl
cmp
pop
icebp
and
das
dec
dec
loopne
out
inc
lods
dec
push
lret
cmp
ret
icebp
lahf
jno
jp
insl
add
inc
imulb
jne
std
sbb
out
jg
jecxz
test
dec
xchg
clc
push
add
inc
push
int
je
movsb
imul
je
push
and
jb
pop
inc
inc
inc
xor
lea
dec
xlat
nop
add
js
xchg
cltd
pop
sub
lea
jnp
cmc
lds
mov
cltd
mov
mov
lret
and
cmp
data16
in
not
ljmp
mov
and
loopne
jns
daa
out
xor
scas
ret
out
push
repz
dec
push
fstl
fldl
mov
jns
pop
push
lds
push
push
ss
popa
mov
fists
or
loop
imul
call
aas
pop
cwtl
xchg
fs
push
cwtl
ljmp
and
adc
xchg
or
jae
mov
fwait
mov
lret
sub
out
in
dec
shll
jno
push
test
cwtl
out
dec
outsl
mov
xlat
out
xor
mov
cmp
mov
test
fdivrs
lods
and
loop
lock
sbb
mov
iret
popa
mul
xchg
fisttps
xchg
mov
enter
mov
push
mov
mov
or
and
xor
or
insb
cmpsb
std
sbb
sub
popa
jmp
push
data16
cwtl
mov
or
scas
repz
test
xchg
pop
in
push
shrb
jmp
ficoms
cmp
and
dec
bound
dec
stos
shrl
add
adc
jnp
cld
lock
jne
test
fsts
pop
jo
mov
fcmovnu
mov
xor
push
push
adc
mov
add
lods
pop
add
fmul
sbb
or
lret
mov
push
add
fs
out
fistpl
gs
xor
push
out
scas
mov
adc
jnp
inc
and
lret
arpl
bound
orb
jo
cmp
add
mov
mov
mov
jmp
or
mov
adc
and
stos
outsl
sbb
adc
and
fldl
stos
mov
lock
pop
aad
xchg
xchg
mov
xor
adc
mov
movsl
adc
fisubrs
pop
shll
add
cmp
mov
xchg
lock
mov
jno
imul
cmp
sbb
aam
cs
mov
out
xchg
ror
cmp
pop
mov
jnp
call
mov
popa
xor
bound
add
aas
sbb
movsl
daa
movsl
cmpsb
dec
adc
add
xor
adc
cmc
imul
push
push
jnp
or
and
out
sahf
outsb
fldcw
or
push
sahf
mov
jae
or
dec
sub
pop
push
shl
sti
xchg
test
xchg
xchg
xchg
lcall
xchg
jno
cli
cmpsl
adc
testb
jge
jl
fisttps
adc
xor
jl
xor
clc
push
out
xor
out
enter
xchg
add
add
sbb
mov
sahf
adc
inc
push
cmp
das
dec
je
je
pop
lods
cltd
das
rcrb
mov
jecxz
xchg
xor
push
push
cmpsl
xchg
pushf
xlat
ljmp
sbb
addl
out
lret
or
andl
pushf
je
pop
and
sbbl
and
xchg
sub
fwait
sub
or
out
mov
mov
dec
mov
cmp
and
ret
lock
repnz
fnsave
push
testb
pop
aad
test
insb
xchg
cwtl
pop
ret
in
push
fwait
jle
mov
mov
xchg
dec
bound
inc
lcall
aas
cmpl
or
mov
loop
mov
mov
and
pushf
test
je
imul
loop
shl
mov
icebp
add
pusha
push
in
lods
shl
xchg
jge
dec
xchg
xchg
in
sub
es
sarb
cltd
scas
gs
mov
cmpsl
mov
sti
push
cmp
xlat
nop
cmp
mov
or
jp
bound
movsl
and
test
shrb
push
xchg
xchg
sub
std
xchg
fwait
dec
dec
repz
adc
outsl
lcall
lret
aad
shl
jbe
add
pop
lcall
jle
loope
jp
ljmp
movsl
push
daa
mov
add
xor
cs
sub
out
jno
repnz
ret
sub
scas
push
test
xor
pushf
repnz
jnp
xchg
or
pop
out
adc
mov
imul
cld
repz
pop
sub
repnz
nop
jg
orl
mov
xchg
ja
out
into
mov
gs
decb
icebp
dec
out
jg
add
pop
rolb
arpl
inc
mov
inc
test
iret
cmp
mov
jmp
sbb
outsb
jnp
mov
pusha
xchg
data16
stos
sub
jno
test
shr
or
ss
dec
jb
repz
stos
inc
xchg
mov
jae
lea
ret
sbb
arpl
cmp
leave
jmp
leave
not
into
cmpb
pusha
dec
clc
mov
popf
add
outsb
and
and
push
repnz
or
mov
or
fistpll
insl
pop
dec
cli
mov
test
fwait
shl
or
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
mov
adc
ret
test
lods
xchg
mov
psubd
je
lds
push
aad
inc
xchg
aas
xchg
or
mov
pop
lods
add
rcr
push
dec
pop
arpl
stos
popf
test
pop
es
push
ret
jmp
jns
movl
loope
mov
movsb
nop
gs
xlat
mov
fistpl
push
jecxz
push
cmpb
stos
lea
mov
daa
insl
gs
pushf
or
cld
cmp
xchg
lret
cld
xor
loop
inc
mov
ja
mov
xor
mov
loope,pn
ja
rolb
xchg
or
pop
pusha
add
faddl
mov
cmp
cld
or
inc
dec
shrb
push
pop
mov
or
inc
hlt
icebp
test
sub
xchg
sub
mov
rol
rep
jne
add
mov
stos
rorb
addr16
enter
jmp
mov
jne
mulb
sbb
sub
popa
or
xor
ret
fmul
mov
mov
inc
insb
shrb
add
and
pop
mov
cmp
adc
push
add
scas
stos
fnstcw
loopne
mov
fsubr
insb
cmpxchg8b
lret
int
add
mov
pop
jp
pop
fnstenv
scas
push
loop
outsl
or
lcall
adc
xlat
xlat
cmp
mov
decb
or
pop
lcall
cmpsl
xor
push
data16
or
xor
pop
inc
mov
clc
fwait
mov
sub
test
popa
lea
mov
pop
sbb
inc
inc
sub
lods
nop
sbb
add
call
mov
cmpsb
xchg
inc
mov
inc
inc
xchg
push
aad
inc
xor
aam
cs
into
in
adc
add
orb
lea
mov
into
add
sahf
repnz
stos
inc
xor
lahf
cmp
mov
fdiv
hlt
cmp
dec
add
out
std
jno
mov
dec
enter
and
cmpsl
adc
push
jmp
cmp
pop
jbe
out
lods
fs
test
xorb
js
push
nop
add
push
sub
lds
jg
je
xchg
mov
outsb
fwait
xor
pusha
adc
pop
sar
jle
ja
jecxz
inc
call
cli
inc
ss
fcmovnbe
cld
call
xchg
dec
xor
lahf
mov
and
add
cli
pop
sbb
gs
adc
rcrb
scas
pushf
test
lods
testl
mull
inc
cmpsl
sub
fnsave
in
scas
xor
ljmp
xlat
xor
mov
fstps
das
cli
add
xor
mov
xor
push
fs
pop
jecxz
mov
fsubrs
sbb
adc
cld
mov
and
jns
or
mov
inc
push
sbb
mov
test
mov
mov
inc
pop
xor
or
lret
fimuls
push
in
mov
mov
jo
pop
fisubrl
add
xchg
mov
fs
pop
or
fucomi
lea
movsb
lock
jne
mov
sete
shl
insl
insb
mov
addr16
mov
or
loope
pop
jbe
sahf
xchg
lahf
cld
push
pop
dec
cltd
jne,pt
test
fwait
sbb
test
add
add
hlt
add
add
xchg
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
stos
sbb
xchg
add
cmc
mov
push
hlt
sbb
cmp
jmp
dec
mov
sahf
sbb
xor
mov
mov
push
cmp
aas
jl
push
roll
adc
loopne
xor
popf
mov
mov
lods
dec
sbb
mov
out
stos
cmp
push
lret
scas
fdivrs
aam
icebp
add
lock
out
clc
lahf
push
pop
jle
sub
cmc
icebp
clc
sbb
lcall
mov
dec
pop
jge
std
mov
xor
sbb
popa
fists
pop
lods
pushf
icebp
mov
mov
jg
mov
aaa
adc
pop
int
fwait
gs
push
jae
nop
popa
imul
inc
fldl
ds
ret
or
fidivrl
inc
rcrb
enter
push
ret
testb
imul
pop
sahf
xchg
ss
add
push
jne
xchg
adc
stos
mov
fs
sub
jmp
mov
and
jno
stc
cmc
popa
cmc
or
ret
sti
shll
xchg
add
jns
lcall
mov
adc
cmp
jno
lods
mov
cmp
push
loope
jbe
rol
in
lods
cmc
rclb
outsl
dec
xchg
adcb
cmp
fs
and
add
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
