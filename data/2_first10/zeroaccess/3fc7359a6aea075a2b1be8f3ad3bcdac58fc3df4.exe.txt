push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
mov
jle
jle
mov
jle
into
xlat
cmp
pop
add
push
lods
or
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
repz
cmp
xor
mov
fildl
sbb
fidivl
push
cmp
cld
bound
lock
gs
cmpsl
hlt
jae
xchg
fdivrl
jbe
jecxz
xabort
sbb
inc
push
and
jmp
mov
sbb
and
add
mov
dec
xor
pop
pavgb
jl
inc
movsb
mov
xchg
insb
xchg
sbbb
les
outsl
gs
lea
add
pop
mov
xchg
add
push
cmp
lret
sbb
and
mov
lret
mov
in
fwait
jnp
adc
inc
pop
arpl
add
pop
xchg
adc
ss
cmp
sti
dec
push
mov
adc
mov
pop
in
inc
inc
faddl
pop
jg
scas
mov
fstl
fldl
aad
adc
inc
andb
fbld
push
cltd
pop
pop
dec
fiadds
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
jg
jle
jg
jle
cmp
out
sbb
movsb
push
push
mov
inc
mov
outsl
or
xor
dec
push
std
fwait
loopew
js
cmpsl
loop
lds
pusha
rolb
out
cmpsl
fidivrs
dec
cli
push
mov
xchg
aaa
xchg
push
je
fwait
dec
test
cmp
fiadds
jle
aaa
test
hlt
jecxz
int3
mov
pop
movsb
cmc
roll
fidivs
jae
test
adc
xlat
leave
std
dec
sub
cli
or
pushl
js
outsb
scas
push
sbb
loop
mov
cmp
ret
sbb
push
or
int
or
mov
pop
scas
imul
jl
out
popf
call
popl
and
or
int
push
in
inc
inc
cmc
outsl
je
movsb
xchg
jp
in
dec
jp
adc
and
xor
inc
clc
inc
inc
push
test
in
jecxz
push
adc
enter
cld
inc
call
jns
dec
icebp
call
push
push
push
lea
pop
cmp
cmp
lret
lods
mov
and
aas
and
icebp
sbb
pop
add
or
cmc
pop
mov
jecxz
mov
mov
sub
add
lods
test
icebp
faddl
pop
test
fcomps
xchg
inc
out
fadd
xchg
inc
dec
add
testb
pop
mov
jge
pop
mov
lods
jno
and
jo
ja
mov
data16
fstl
lds
ss
inc
or
add
or
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
sbbl
jle
push
imul
cwtl
add
cmpsl
into
lahf
cli
shrb
gs
dec
sbb
push
imul
mov
into
push
mov
xlat
popa
push
ds
shrl
push
sub
add
jl
adc
pop
lds
shlb
addb
in
fdivl
neg
mov
mov
adc
roll
mov
stc
shl
inc
stos
pushf
jbe
pop
out
repz
popa
push
nop
jb
sbb
out
in
fsubp
loopne
fstps
test
lea
pop
jbe
sbb
push
push
sbb
in
mov
mov
mov
rcl
cwtl
push
jno
cmp
xor
pop
pop
cmpsl
arpl
pop
shlb
xchg
jle
adc
popa
aaa
cltd
adc
push
test
not
xchg
leave
nop
sub
sti
jns
adc
or
outsb
mov
and
jae
and
mov
push
mov
dec
pop
sub
mov
jp
mov
xchg
adcb
jle
aam
inc
mov
mov
xchg
into
sbb
xchg
dec
xchg
in
inc
jmp
pop
or
pushf
jo
sbb
insl
out
test
fwait
imul
mov
and
add
sbb
cvtps2pd
xor
cmp
pusha
jo
iret
mov
jb
test
mulb
mov
jne
lret
cmp
cmp
repnz
iret
or
das
iret
aad
loop
cmp
mov
dec
jb
decl
mov
xchg
fistpl
push
xor
test
add
add
add
or
jmp
or
popa
sbb
inc
xchg
jnp
jle
jg
jle
or
sysexit
sub
adc
or
aam
sbb
xchg
cli
add
sub
and
andl
cmp
repnz
insb
lods
add
pop
shll
cmpsl
and
movsb
andb
lds
in
inc
fmulp
adc
push
dec
fmuls
insb
add
shrl
into
xor
jmp
push
and
insl
mov
cmp
cmp
fwait
mov
test
in
mov
fsubrl
mov
mov
jecxz
movzbl
xchg
inc
xchg
pop
mov
sub
and
pop
fdivrs
inc
divps
sub
and
sbb
lods
mov
sub
cli
pop
mov
and
rclb
push
insl
ret
and
out
popa
jbe
lea
aad
imul
pop
push
loopne
pop
es
pop
in
lret
lahf
xor
cli
int3
xchg
cmp
fcompl
pusha
mov
je
sbbb
pop
dec
and
mov
inc
nop
push
push
shrl
daa
das
or
lahf
push
or
cmp
fwait
mov
cld
sbb
dec
jb
mov
mov
aam
jo
inc
shrb
cmp
std
push
les
cmp
call
mov
cld
outsl
mov
cmp
and
ds
jge
shlb
pop
fsubrl
ret
popf
enter
test
sahf
nop
xchg
push
test
out
dec
cmp
add
mov
mov
outsb
ljmp
jbe
lock
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
popa
dec
push
add
jle
jg
jle
orb
cmpsb
shlb
mov
je
mull
add
scas
in
jns
inc
aas
dec
push
pop
mov
push
mov
jo
es
es
and
push
lods
shl
adc
arpl
inc
dec
dec
lods
and
fldcw
in
jp
jg
push
inc
sbbb
hlt
and
mov
pop
data16
jle
push
ds
jge
sarb
dec
arpl
pop
fiadds
mov
mov
cmp
outsb
test
inc
adc
push
inc
clc
sub
mov
and
xor
call
pop
sar
cmpsb
xchg
cmp
lods
aaa
mov
sbb
jmp
and
add
pusha
sbb
pop
movsb
inc
shrl
inc
cli
out
xor
and
dec
in
pop
push
lods
lds
and
sub
movsl
jne
adc
add
sub
push
mov
add
fcomip
xor
xchg
mov
pop
mov
push
adc
leave
shll
sarl
adc
add
pop
dec
testb
push
mov
mov
pop
ftst
pop
aas
ret
pushf
mov
xchg
movsb
fcmovb
mov
xlat
aas
aad
jl
push
mov
pop
test
cld
pop
stos
test
xor
mov
xorb
ss
pop
fwait
repz
sti
outsb
data16
sbb
aas
ja
fimull
stc
icebp
mov
and
add
shrb
inc
add
cld
movzwl
add
jmp
push
mov
test
xor
jle
mov
jle
add
sbb
std
add
sbb
xchg
push
scas
lods
mov
xor
pop
shl
into
outsl
pop
cmp
int
pop
pop
rol
outsb
lds
mov
shrl
sbb
shrb
ret
repnz
cwtl
mov
sub
mov
sbb
dec
dec
popf
rol
decl
sbb
and
pop
sbb
iret
jle
sbb
xor
or
xor
xchg
mov
or
aaa
ret
push
xlat
push
fwait
movsl
aaa
loop
cld
ljmp
rcr
dec
in
je
int3
xchg
jecxz
mov
push
sbbl
sub
adc
je
xor
test
out
xor
mov
inc
and
mov
jno
sbb
sub
and
out
push
popa
jno
mov
push
imul
ss
cmp
xchg
lock
push
lret
out
addb
out
sbb
xor
jge
leave
add
jae
or
push
pop
dec
pop
xchg
xor
cmc
push
dec
push
mov
stos
mov
fistpl
insb
cld
int
jmp
add
jne
sti
push
lods
das
pop
inc
test
xorb
add
xchg
ljmp
push
pop
dec
xor
jecxz
mov
sbb
and
jnp
int3
jo
pop
jno
pusha
sub
mov
or
push
inc
sub
jbe
int3
sub
insl
pop
mov
popf
inc
or
nop
pusha
scas
fwait
dec
test
ret
mov
ret
push
fisubrl
mov
add
dec
push
rcrb
popf
arpl
mov
sbb
fwait
inc
cltd
push
xchg
das
hlt
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
xchg
daa
rcrl
add
mov
jle
sub
sbb
pop
push
mov
inc
in
lret
lods
xchg
xlat
mov
push
xchg
jns
idivl
xchg
xor
lret
inc
mov
adcb
das
mov
jg
mov
outsl
sbb
mov
xor
sbb
rolb
pop
test
hlt
xlat
call
push
outsl
xor
shrb
leave
xor
sub
fwait
ljmp
cmp
clc
lcall
mov
xor
push
inc
sub
inc
sbb
popl
out
cmp
xchg
jle
pop
out
xchg
je
dec
lock
pop
pop
xchg
lahf
clc
cs
adc
inc
mov
sub
sbb
icebp
fnclex
ret
into
or
in
add
imul
in
jbe
repz
ljmp
sub
lahf
adc
out
aaa
lods
sbb
in
ret
pop
push
aaa
lret
outsb
lods
mov
mov
push
and
loope
or
pop
sbb
daa
adc
retw
out
adc
ucomiss
fsts
cmp
jb
sbb
adc
adc
pushf
mov
fnstenv
or
xchg
add
jno
clc
aas
cli
xor
dec
pop
push
shl
cmp
mov
cs
lret
mov
arpl
addr16
cmpsb
ficoms
dec
mov
hlt
dec
xorl
push
ror
imul
add
ja
add
inc
lds
ror
xlat
pop
mov
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
lods
xor
jg
jle
mov
jle
jg
mov
dec
jle
sbb
sub
insl
adc
add
sbb
xchg
xchg
and
rcll
mov
sbb
xor
hlt
loopne
lock
cmc
lcall
push
pop
dec
inc
xchg
dec
and
daa
icebp
inc
xorl
pop
xchg
imul
mov
push
pusha
xchg
leave
stos
roll
adc
cmpsl
movsl
jle
cltd
sub
xchg
cmovp
std
jecxz
fdivl
imul
rorl
dec
outsl
add
mov
dec
ret
or
fldenv
dec
mov
pop
fstpl
orl
xchg
dec
ss
pushf
mov
imull
mov
pop
xchg
testl
repz
lahf
jmp
stos
or
scas
or
inc
movsb
aaa
mov
ret
mov
add
mov
call
or
mov
mov
mulb
ja
push
insl
cld
pop
addl
pop
pop
push
fstpt
pop
cmpsl
jno
das
outsl
popa
push
ljmp
cltd
sbb
loopne
jns
push
mov
loope
sbb
outsl
adc
js
add
std
ds
mov
imul
jmp
shlb
out
inc
inc
test
or
sub
jmp
pause
sbb
icebp
outsl
sub
sbb
mov
aam
fisttpll
push
cmovb
fisubl
mov
cmpl
mov
cmp
js
cli
lahf
in
xchg
movsb
out
adc
fcom
addb
push
insl
popf
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
shld
stos
mov
jle
mov
jle
test
inc
sbb
test
xor
and
sbbl
cmp
inc
repnz
push
test
add
inc
arpl
into
cmp
test
or
aas
mov
rcr
bnd
idivl
mov
lods
ficomps
inc
adc
inc
das
push
rcrb
xchg
xor
imul
pop
js
dec
pop
and
mov
clc
js
add
or
jl
sub
mov
or
and
add
adc
inc
xchg
pop
int
and
fs
decl
in
into
push
in
popf
addr16
hlt
fists
std
shrb
jo
xchg
hlt
movsl
pop
pop
mov
pop
testl
pushf
inc
addb
lds
ja
or
mov
int
sbb
inc
subl
loop
stos
cmp
inc
dec
jb,pn
push
ss
xorl
mov
sbb
lahf
fistps
add
scas
fdivr
test
add
test
leave
mov
inc
xchg
xchg
gs
adc
cmp
fcmovnb
and
cld
in
ret
push
leave
neg
movsl
lods
orb
repz
jbe
jo
mov
aaa
jg
gs
dec
cwtd
fcmovu
mov
and
adc
popl
dec
pop
sbb
jmp
rcrl
mov
dec
fbld
movsb
sbb
push
and
rorl
arpl
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
cwtl
add
pop
inc
xchg
sub
push
inc
mov
xchg
outsb
pop
js
mov
inc
mov
je
lahf
mov
sbb
notl
mov
and
mov
inc
xchg
sti
and
push
pushl
xchg
cld
sub
adcl
and
adc
repnz
lahf
loopne
in
sbb
or
repnz
push
jl
or
ret
xchg
inc
dec
cmp
mov
lock
jle
shr
outsl
subb
and
and
out
jle
inc
sbb
xor
jecxz
stos
cltd
mov
sub
and
pop
jg
testl
dec
and
and
fsubp
jg
call
fwait
xchg
das
ja
mov
cmp
xor
sbb
hlt
and
jp
leave
sub
mov
filds
pop
loope
inc
outsl
sbb
subb
stos
pop
xchg
mov
xor
inc
arpl
lock
repnz
mov
lds
divb
out
cmp
pushf
mov
popf
push
push
adc
and
add
out
loopne
xor
cmp
mov
or
or
pop
pop
sbb
xor
fbld
cmp
dec
sti
lods
adc
adc
movsb
adc
dec
shll
data16
sbb
adc
ficompl
lcall
pop
and
adc
and
outsb
mov
inc
mov
rorb
mov
dec
loopne
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
dec
orl
mov
jle
or
cwtl
lods
stos
fmuls
add
loope
xor
lret
stc
stos
xor
cmp
popa
xchg
gs
scas
inc
cmp
add
out
and
movsb
pop
inc
xchg
faddl
xor
cmc
jecxz
dec
pop
push
jns
cmp
mov
arpl
push
call
dec
mov
mov
ret
cmp
mov
cs
push
xchg
incb
je
adc
hlt
mov
dec
pop
xlat
cmp
cmc
enter
xlat
fidivrl
stc
push
lods
adc
sub
jo
aam
sti
fcoms
out
cs
in
mov
and
iret
cli
lods
in
inc
cwtl
mov
mov
mov
and
in
pop
and
aas
mov
dec
outsl
inc
jmp
and
adc
les
xor
xchg
adc
stos
adc
jo
mull
push
in
lea
push
and
mov
dec
cmpsl
inc
rcr
mov
sbb
gs
mov
mov
pop
mov
scas
xor
mov
and
push
arpl
jmp
and
dec
ss
lods
dec
outsb
insb
popl
and
daa
jmp
mov
mov
in
dec
into
inc
test
pop
sub
mov
dec
imul
popf
fcoml
enter
or
fildll
fsts
jp
stos
ret
sub
loopne
xorb
arpl
sbb
stos
push
mov
xor
inc
lea
push
or
add
push
je
lods
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
je
ret
push
or
push
jg
jle
cmp
or
lock
lret
xor
sti
dec
jne
clc
mov
loope
lahf
lcall
jne
inc
cltd
sbb
sub
adc
sahf
leave
mov
sbb
popa
aad
loopne
sub
call
push
hlt
push
or
out
cwtl
mov
sub
or
push
fisubrl
dec
in
adc
js
popf
mov
sbb
xor
mov
xor
ror
lea
jg
mov
sub
lock
mov
mov
jnp
xchg
inc
jg
scas
sub
mov
out
or
cmp
addl
in
sbb
and
jg
xor
fstpt
stos
cs
xchg
lods
mov
movsb
push
and
in
clc
cmc
gs
pop
sbb
in
pushf
in
popl
pop
sub
mov
sbb
aam
mov
imul
xchg
rcrb
popf
add
out
sbb
das
mov
subl
lcall
jmp
in
ljmp
and
inc
les
push
pushf
scas
loop
push
pop
je
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
sbb
and
jle
push
jg
jle
lock
popa
cmp
imul
pop
out
mov
inc
pop
dec
jp
xlat
pop
mov
sahf
adc
jecxz
nop
mov
or
insb
pop
adc
jnp
push
pop
repnz
pop
jp
arpl
cld
jbe
aam
shll
test
jne
sbb
add
loop
dec
outsb
sbb
dec
in
fmull
push
je
push
push
aad
aaa
movsl
inc
cmp
jmp
adc
cmp
pusha
xchg
inc
or
pop
sbb
cmp
aas
andb
imul
mov
jecxz
out
push
or
inc
int
cmpl
pop
outsl
movsl
push
or
inc
fidivrs
and
pop
test
ret
or
into
das
adc
cmp
sbb
xor
lods
lds
popl
cmp
mov
repz
cwtl
nop
and
sarb
jnp
inc
ss
sbb
dec
dec
xchg
cmp
dec
lret
and
ret
jne
lahf
sahf
push
ljmp
cld
mov
jg
adc
lret
xchg
cmpsl
sbb
add
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
cmpsb
stos
imul
push
jg
jle
movsb
adc
inc
repz
repz
dec
aas
and
stc
stos
jno
int3
cmp
mov
jp
dec
jb
add
loop
out
sbb
inc
imul
xlat
insb
ja
fdivrl
dec
pop
xlat
movsl
push
mov
repz
sbb
insl
push
daa
cmp
inc
pop
adc
adc
js
in
aam
mov
andb
pop
xlat
dec
sub
repnz
lahf
adc
fs
repz
cmpsl
sub
xchg
adc
inc
stc
push
test
cmp
popf
sbb
cmc
sbb
fnstenv
push
sub
int
aas
jne
dec
mov
push
negl
mov
add
shll
sbb
lea
roll
pop
inc
cwtl
mov
jb
jno
pushf
xor
fldt
pop
cmp
lret
xchg
mov
fstpl
jae
jecxz
pop
sahf
mov
pushf
sub
scas
scas
push
repz
sbb
pop
sub
pop
jo
fwait
adc
inc
idivb
notl
pop
or
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
jns
xor
jle
jns
jle
jno
mov
ja
pop
or
mov
arpl
out
movsl
mov
mov
mov
loopne
arpl
xchg
cmp
lret
call
mov
adc
xor
jg
inc
xchg
je
loopne
mov
sar
inc
sub
mov
pop
std
lods
push
cmp
outsb
cwtl
sbb
mov
jmp
and
adcb
pop
cmp
std
sbbb
mov
cmpb
sahf
mov
loop
jns
cmp
xchg
and
in
xchg
jo
mulps
fcomi
jno
lahf
outsl
xor
scas
insb
pop
adc
pop
test
imul
mov
es
sub
aas
jle
sub
lods
jb
pop
test
adc
xchg
in
dec
movsl
jae
insl
xchg
int
jl
add
cs
cltd
std
cltd
mov
movsl
out
ret
addr16
shlb
test
xorb
negl
xchg
lret
es
test
jle
inc
call
cmp
mov
aas
mov
push
aas
rcr
adc
push
stc
push
test
lret
push
xor
mov
inc
add
out
fildl
adc
rcrl
icebp
mov
sbb
jbe
sbb
lods
dec
jnp
sbb
cmp
push
mov
pop
xor
mov
pop
xlat
or
dec
lahf
int3
and
bswap
fs
lahf
aam
jmp
mov
lahf
mov
test
adc
scas
mov
ret
cmp
ds
mov
outsb
cmp
inc
jge
push
xor
add
cwtl
repz
mov
arpl
lahf
or
mov
dec
sti
mov
xchg
mov
rol
or
out
mov
cs
repnz
lret
loope
movsl
push
or
mov
inc
cs
xchg
pop
add
loope
stc
lock
aad
pusha
mov
int
aaa
jl
in
call
scas
daa
call
jl
and
xchg
sarb
push
cmp
arpl
and
cmp
cmp
les
mov
xlat
repz
into
fsqrt
mov
cs
pusha
out
xlat
add
sbb
cltd
mov
jns
idivl
xchg
scas
pop
cltd
nop
adc
xchg
pop
nop
fs
mov
int
sbb
or
testb
pop
mov
or
dec
movsl
insb
push
push
mov
int
test
sub
cmp
add
sub
push
loope
ljmp
xchg
dec
push
adc
xchg
jle
and
jno
ja
push
shl
mov
call
ret
cmp
cmpsl
xor
aad
jae
xor
sbb
aas
imul
je
push
fs
insl
mov
xor
ficoms
or
mov
ret
rol
icebp
mov
ljmp
xlat
cmp
inc
and
les
inc
cltd
pop
xchg
ret
sbb
xchg
add
adc
or
inc
mov
fistpl
dec
cmpsb
xor
cmp
mov
shll
add
cmpsl
sub
inc
xchg
imul
and
inc
ret
adc
hlt
jno
push
add
mov
fisubrs
mov
adc
jg
int3
mov
test
imul
sbb
loopne
test
hlt
or
test
fcomps
xlat
lock
pop
or
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
sub
push
jns
jle
jmp
popf
scas
popf
and
xor
mov
jb
std
lock
mov
inc
sub
scas
xchg
imul
adc
mov
add
addr16
mov
jnp
mov
mov
leave
dec
or
jmp
jb
inc
lret
mov
ss
dec
lock
loop
sbb
sbb
cmp
mov
sub
in
pushf
xor
icebp
and
fsubrl
outsl
jp
sub
inc
js
sub
shll
or
pop
dec
jb
pop
lods
test
in
mov
xor
or
inc
adc
cmp
add
mov
fnstcw
pop
cltd
jecxz
and
mov
adc
xchg
gs
mov
pushf
or
sbb
adc
mov
movsb
pushf
xchg
lds
mov
mov
dec
dec
inc
clc
mov
aaa
mov
popf
leave
jp
mov
jbe
stos
insb
or
cmp
data16
fcoms
push
loopne
push
cwtl
adc
les
push
xor
mov
push
xchg
ljmp
or
add
inc
or
lods
shrl
outsb
subb
sbbl
jecxz
push
cmc
adc
stc
call
xor
jg
and
cld
add
pop
fucomp
and
dec
mov
and
add
or
mov
psubusw
hlt
jae
insb
push
add
test
mov
rclb
sbb
pop
and
aad
adc
jb
hlt
andl
sbb
push
mov
mov
divb
lret
mov
test
insb
or
int
mov
out
out
jbe
or
xor
fisubl
and
xchg
fildl
ret
jns
xchg
cmc
data16
sbb
popa
imul
out
insl
xchg
in
hlt
mov
sbb
mov
cli
ret
dec
movsl
in
cmp
js
rcll
add
cmp
les
or
cld
dec
inc
and
sbbb
push
es
cwtl
js
jne
xlat
sub
cmp
decl
in
bound
pop
pop
xor
ds
inc
cmp
adc
pushf
jbe
jo
ret
clc
popf
and
imul
gs
or
cmp
push
cmovge
sbb
mov
ret
insl
fs
cmp
lods
push
push
inc
cmp
mov
cld
js
xchg
std
sub
enter
das
insb
iret
sti
roll
add
into
adc
fildll
or
pop
add
cli
pop
sbb
mov
mov
and
add
enter
push
pop
inc
push
outsl
adc
aad
push
insb
inc
jbe
add
into
movsl
insb
xchg
imul
lock
pop
pushf
ljmp
addl
sub
arpl
pop
xchg
pop
das
cmpsb
leave
add
int3
movsl
test
adc
mov
sub
js
add
mov
test
xor
in
pop
cmpsb
push
shrb
int
push
pop
pop
sub
int
xor
xchg
push
jo
mov
push
loopne
mov
sbb
fmull
fwait
or
adc
adc
lods
ja
mov
xchg
mov
or
mov
test
divb
inc
and
mov
xor
repz
and
cmp
hlt
cmp
ss
sub
mov
filds
inc
decl
add
or
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
adc
data16
jle
push
jns
jle
icebp
pushf
mov
mov
adc
daa
aam
test
mov
shr
rclb
ret
cs
cmp
in
cli
jo
lock
lret
dec
mov
shr
pop
popf
lahf
inc
stos
dec
and
dec
or
fistl
pop
add
shll
ljmp
aad
adc
test
inc
sub
or
push
dec
lcall
shll
shrb
mov
mov
sub
rcrb
scas
hlt
je
aam
inc
or
flds
dec
nop
cmpsb
cmpsl
lods
xchg
add
stos
and
loope
cli
pushf
int3
and
stos
or
fcoms
jle
lahf
xchg
jmp
dec
movsl
xor
pop
mov
dec
sub
mov
outsb
scas
ss
cli
jp
mov
clc
push
jmp
xor
sub
outsl
dec
push
push
movsl
add
test
jae
mov
jmp
pshufw
inc
rcrb
cs
jae
push
nop
xor
xchg
xorl
push
out
dec
div
ds
mov
jge
test
out
cld
je
mov
mov
or
dec
xchg
sub
in
cmp
sbb
les
movb
mov
mov
popa
sahf
ja
mov
xchg
shrl
out
das
add
xchg
pop
cmp
pushf
jae
sbb
iret
aaa
pop
lahf
lock
or
add
sub
bound
js
push
xlat
subl
mov
mov
shlb
inc
xchg
pop
mov
jmp
mov
into
fsubrs
fcompl
in
hlt
test
push
jne
sahf
lret
test
shr
mov
movsb
cltd
xor
jmp
xor
cmp
test
xchg
sub
lods
imul
sbb
test
loopne
fisubrl
lock
pusha
jo
dec
sub
dec
data16
movsl
iret
mov
inc
ljmp
xor
orl
out
daa
out
add
add
fildl
mov
out
incl
sbb
fsubs
xor
pushf
pop
out
inc
push
push
pop
push
orb
sbb
mov
cmpsb
fsubl
sbb
movsl
sbb
push
hlt
or
pop
or
test
test
clc
or
push
cmp
repz
in
push
mov
xchg
fildll
idivb
mov
dec
jp
fidivrl
xor
in
jp
xor
aam
mov
jecxz
mov
cmp
jo
mov
inc
shll
and
lock
lods
cld
or
jmp
xchg
push
or
pop
sbb
fwait
pop
addr16
mov
push
xor
fistpll
shrl
sbb
ret
lods
push
sbb
add
fimull
enter
test
jmp
in
cmp
inc
pop
sub
hlt
pop
clc
jnp
dec
sub
lcall
call
lds
mov
xchg
pop
mov
inc
sub
sbb
int3
jp
push
add
dec
js
sbb
push
std
mov
inc
xchg
pop
aaa
lcall
jp
jmp
mulb
aad
mov
push
sbb
repnz
xchg
xchg
mov
roll
jmp
jae
sbb
and
rcr
push
push
gs
inc
xchg
adc
sub
in
pop
mov
cmpsb
mov
dec
dec
add
sub
push
insl
sub
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
loopne
pop
scas
aas
outsb
cld
xchg
sahf
sti
sbb
or
lcall
insb
fwait
cs
inc
pop
xchg
dec
cmp
xchg
lcall
push
call
fsubr
mov
stos
pusha
movsl
and
lahf
fcompl
fdivp
shll
pop
lret
sub
fsubs
incb
rorl
cld
add
std
leave
or
inc
fwait
les
inc
push
inc
inc
pushf
add
cmpsb
or
sahf
inc
push
mov
jp
xor
mov
scas
push
mov
adc
or
mov
test
arpl
jg
push
xor
mov
out
data16
or
cmpb
lock
ja
mov
inc
inc
jp
and
and
dec
imul
jns
cmp
movsl
lods
push
add
add
insl
dec
sub
inc
dec
int3
jne
test
dec
in
adc
popf
jo
sbb
out
sub
js
inc
nop
sub
ficompl
orb
out
sbb
scas
test
cmp
dec
jecxz
mov
nop
mov
mov
mov
mov
daa
add
into
dec
call
cld
testb
cmp
jne
lcall
xchg
push
jp
sbb
fscale
test
movsb
jmp
sbbb
test
fucom
pop
enter
mov
icebp
xchg
xchg
movl
push
inc
out
rep
xchg
sti
call
loop
xor
xor
push
cmc
nop
mov
ret
jae
clc
push
cmc
lods
cwtl
jge
xchg
lsl
les
and
xlat
or
nop
add
in
jae
arpl
jecxz
jno
jo
ss
lods
decb
enter
xchg
cmp
and
sub
cmc
mov
push
jno
lods
lret
mov
sub
ds
jmp
xchg
jo
xorl
ss
imul
mov
cmp
js,pn
ret
pop
testl
mov
dec
sub
cmpsl
and
pushf
incb
rcrl
ret
mov
sub
jg
pop
jp
lds
dec
pop
bound
mov
lcall
subb
push
mov
dec
fwait
rcrl
jae
mov
mov
pop
sbb
cmp
call
lds
ljmp
out
dec
jecxz
in
mov
inc
repnz
inc
fstpt
jg
ret
jbe
ret
push
push
add
xor
scas
xchg
loopne
mov
loopne
lahf
ficomps
out
or
jl
xor
pop
call
mov
mov
popa
jp
add
aad
aaa
sub
jle
pushf
shrl
fcomps
xchg
pop
jnp
sub
andb
mov
mov
add
pop
pop
push
add
into
sbb
scas
jl
inc
fisttps
into
repnz
shl
out
xor
xchg
push
loopne
movsl
and
cli
cmpsb
stos
ficoms
jns
xor
mov
out
in
clc
push
sti
lret
into
jmp
out
into
xor
shll
mov
sub
pop
cmp
shll
lock
cltd
movsl
aad
jg
mov
ret
movsb
push
stc
mov
mov
lock
adcl
and
jp
push
or
jmp
cwtl
jae
lock
in
push
cmpsb
insl
jno
add
roll
cmp
test
cli
xchg
bound
in
loope
mov
pop
dec
inc
pop
shrb
in
xchg
mov
loopne
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
daa
xchg
sbb
push
jns
jle
adc
negl
ss
sbb
int3
arpl
mov
je
cmc
bnd
cmpsb
xchg
loopne
cmp
or
add
jae
loopne
dec
fnsave
shrl
push
movsl
jo
and
push
addr16
xchg
pop
out
cmpl
dec
xor
adc
jns
sbb
clc
jb
lods
jbe
push
test
call
data16
mov
ret
mov
mov
and
mov
inc
cmpl
or
pop
dec
or
or
stos
sub
shlb
lea
pop
mov
sbb
arpl
push
rorl
push
lret
scas
cld
sbb
adc
adc
xchg
dec
cmc
and
jg
lods
loop
stc
xchg
out
stc
inc
hlt
sti
sti
mov
ret
inc
and
adc
jp
popf
mov
jno
xor
and
stos
xor
xchg
cmp
jnp
adc
pop
jno
test
movsb
mov
mov
pop
addr16
adc
inc
hlt
sahf
add
cmp
xor
mov
mov
scas
pushf
pushf
cmp
sub
inc
cmp
xor
pushf
or
das
ja
push
fisttpll
jg,pt
jecxz
mov
test
nop
push
in
fcmovbe
std
mov
mov
jecxz
dec
sub
mov
test
push
mov
popa
xchg
dec
sbb
jle
dec
add
dec
mov
popa
and
mov
cmp
push
xor
lea
jnp
gs
adc
push
pushl
arpl
jbe
push
lret
fcmovnbe
pusha
push
xor
rcrl
push
cs
adc
push
lods
loope
push
dec
hlt
int3
cwtl
xchg
imul
mov
xor
cvtpi2ps
in
out
cmp
cmpsb
xchg
push
and
pushf
mov
pusha
push
xchg
cmp
xor
cltd
ljmp
cmpsb
ss
add
pop
das
push
cmc
push
or
and
std
pop
dec
movsb
mov
jle
lsl
mov
scas
subb
jae
lcall
add
pushf
cmpsl
jbe
stc
mov
lahf
fsubl
iret
insb
dec
outsb
into
js
stc
or
enter
fs
jne
jge
dec
fs
call
or
pop
cmp
sbb
jp
xor
mov
cmp
test
sbb
cli
movsb
mov
aad
xchg
nop
or
pop
repz
dec
les
cmp
and
pushf
ds
es
and
push
jge
lret
les
fsts
mov
test
stos
mov
xchg
pushf
sub
mov
mov
fisttpl
jne
negl
pop
pop
in
push
mov
push
xchg
add
mov
inc
shll
mov
ja
out
imul
arpl
ret
add
pop
in
lods
fmuls
jae
lea
jl
into
scas
xchg
pop
adc
clc
aad
aaa
mov
arpl
arpl
or
jne
dec
pop
xchg
cs
xlat
fisubl
pop
stc
daa
imul
lock
inc
leave
cmp
adc
outsl
dec
sbb
leave
push
les
pop
ja
xchg
popa
nop
sti
xchg
pop
ljmp
mov
enter
cli
mov
popa
out
xchg
xchg
subb
bsf
je
pop
and
repnz
fsub
movsb
mov
iret
lcall
dec
mov
lahf
xchg
cmpsl
dec
add
lahf
jbe
push
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
xchg
loop
fsubrp
daa
jle
push
jns
jle
jge
jecxz
scas
lea
sub
xchg
jne
cmp
out
aam
push
or
scas
pop
sbb
imul
mov
add
scas
jecxz
xchg
push
xchg
stos
sub
xor
or
repnz
fcomp
int
mov
cmp
cmp
clc
stos
pop
jmp
lret
pop
pusha
ss
mov
es
xlat
and
bound
jbe
pusha
fisubs
add
cmp
pop
or
popa
jno
scas
pop
or
push
leave
mov
mov
popa
xlat
cmp
mov
jmp
lret
aas
xlat
mov
mov
xor
cmpsb
xor
pop
mov
or
ret
lea
xlat
mov
out
test
lea
and
jns
repnz
pop
dec
fldl
in
xchg
or
fidivl
mov
bound
jbe
dec
xorl
inc
mov
mov
aad
dec
xor
addr16
pop
jg
dec
nop
xor
mov
movsl
movsl
aad
mov
dec
mov
dec
mov
xor
fistps
outsl
jle
mov
and
add
fldt
in
mov
int3
cmc
call
enter
add
mov
push
or
inc
adc
inc
aad
jp
push
enter
jno
fsubp
gs
push
lret
push
dec
xor
inc
int
push
sbb
out
icebp
xchg
jnp
fs
adc
jg
leave
repz
add
adcl
rol
dec
mov
popa
adc
cmpsl
or
in
pop
lret
lahf
sti
out
pop
sbb
aaa
add
pop
sbb
outsb
jne
lds
pop
adc
inc
cmp
negb
adc
leave
cmpsb
shl
dec
and
sbb
xor
xchg
fcmove
jmp
daa
mov
xchg
sbb
xor
sub
push
jge
arpl
scas
mov
or
jnp
dec
push
and
ffreep
or
sbb
adc
sub
xchg
adcb
into
mov
jbe
xor
mov
sub
mov
inc
int3
sub
adc
sbb
movsl
cwtl
xor
loope
and
mov
inc
les
push
scas
mov
push
testb
test
adc
push
jno
mov
mov
xchg
or
xchg
mov
popf
fcoml
les
hlt
pusha
jle
stc
imul
dec
into
rcrl
cmpsb
xor
fstpl
and
push
js
loop
push
lahf
jg
mov
pop
fdivl
and
cmp
popa
mov
sbb
addr16
in
int3
mov
xlat
push
pop
xchg
gs
ror
mov
jnp,pn
push
push
dec
icebp
jecxz
lea
scas
lods
inc
sub
or
and
in
pop
mov
cwtl
in
lock
push
inc
daa
xchg
ret
add
addl
push
push
roll
call
dec
mov
into
sub
xor
stos
cs
fildl
mov
mov
mov
das
insb
pop
aam
jnp
and
data16
mov
lock
add
dec
or
xchg
fnsave
jl
in
inc
int3
ret
mov
jp
cmp
xorb
cmp
mov
dec
xor
leave
cmpsb
jle
in
push
jne
jmp
pop
pop
sbb
repz
nop
insl
das
sub
dec
fildl
dec
mov
cltd
nop
out
pushf
dec
in
xor
xchg
out
inc
pop
xchg
push
sbbb
aaa
shl
jbe
out
lods
xchg
push
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
jae
mov
jle
jns
jle
fldl
mov
testb
ljmp
sti
jle
aas
je
int3
xor
inc
int3
enter
cld
addr16
daa
or
pusha
repnz
and
inc
pop
sbb
jns
out
push
stos
jb
jge
mov
jecxz
ds
int
xor
and
push
inc
ret
in
stos
adc
adc
inc
lret
fcoms
mov
inc
push
in
push
mov
mov
mov
adc
ffree
jmp
xchg
xor
cs
push
scas
pop
jmp
dec
in
pop
add
movsb
das
xor
and
xchg
test
pop
scas
push
lea
push
cmpsb
pop
xchg
in
adc
or
lcall
fisttpl
test
mov
aad
push
aas
addl
pop
std
roll
pop
pop
sbb
mov
shl
push
sbb
dec
sbb
cltd
fnsave
or
mov
adc
pusha
mov
fistpl
sub
mov
aad
mov
fisubl
fs
inc
scas
mov
mov
lock
nop
pop
cld
push
mov
cmp
bound
cmp
in
dec
sub
mov
jle
test
out
sbb
cli
repz
xchg
xlat
in
mov
mov
mov
and
repnz
pop
mov
or
push
iret
fldenv
dec
jne
dec
sub
imul
push
push
and
pop
adc
lods
adc
jmp
xor
gs
sbb
cmp
movsl
in
lcall
mov
in
add
aad
cmpsl
imul
dec
jl
loopne
imul
xchg
arpl
std
lret
inc
mov
pop
repnz
sub
test
or
sub
fadds
push
jno
or
adc
mov
shlb
psadbw
or
cmp
out
out
sub
jno
jns
mul
sti
in
dec
stos
popa
mov
adc
xor
nop
pop
ja
js
add
pushf
fs
out
xor
or
inc
leave
out
xchg
sbb
sti
shl
jp
aad
dec
cmp
in
or
cs
jle
mov
hlt
jne
jno
jo
pusha
and
sub
sub
lods
lock
aaa
sarb
dec
mov
movsb
jns
jno
call
cmp
arpl
xchg
jle
rorl
mov
jmp
inc
push
cmp
jmp
testl
pop
in
fwait
mov
scas
xchg
jmp
mov
cld
inc
outsb
imulb
sarb
cltd
insb
loope
sbb
popa
mov
pop
dec
push
cmp
xor
cs
push
push
jmp
jge
inc
inc
mov
popf
sbb
cmp
loope
out
out
xor
js
test
nop
inc
daa
ret
mov
mov
daa
lret
inc
sahf
push
pusha
mov
xor
add
out
mov
pop
push
push
subb
adc
pop
gs
int
mov
mov
andl
sbb
xchg
jmp
imul
sbb
xor
in
outsl
cld
pusha
and
rclb
xchg
push
scas
push
fcoml
filds
enter
cld
cmc
lahf
fistpl
jle
xorb
stos
xor
adc
and
and
push
ljmp
sti
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
jae
jb
das
jle
pop
jg
jle
lods
sahf
pop
fucom
xorb
daa
xor
loope
pop
mov
jg
mov
icebp
xor
mov
jne
jo
idiv
stos
push
lods
mov
es
push
sbbl
jecxz
in
pop
xor
movb
sbbb
popa
sub
jns
mov
sarl
dec
dec
inc
sub
js
mov
bound
add
mov
mov
mov
repz
stc
xor
or
mov
pop
mov
loope
addr16
mov
jmp
stc
add
ljmp
xchg
xor
dec
stos
or
and
shlb
icebp
iret
roll
aad
xchg
mov
push
cltd
test
out
push
mov
bound
pop
dec
mov
pop
dec
aaa
mov
pushf
addb
mov
jnp
fstpt
mov
mov
jno
sbb
ret
rolb
shl
add
js
test
test
jne
add
pop
add
inc
dec
dec
test
xor
lods
hlt
jge
jg
pop
stc
sub
ss
push
lods
pop
mov
js
pop
ljmp
or
mov
jecxz
addr16
ret
dec
insl
inc
data16
pushw
dec
mov
stos
sub
inc
inc
outsl
popf
push
dec
mov
daa
pop
mov
dec
enter
inc
scas
mov
add
scas
dec
push
outsb
xchg
outsl
add
ret
insl
mov
test
jae
push
sti
outsb
mov
cmp
lcall
mov
xchg
push
pop
xchg
cmpsl
rcr
xchg
aas
mov
xor
xchg
hlt
cwtl
lock
movsl
or
adc
adc
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
les
jnp
jle
pop
jg
jle
adc
jmp
push
push
mov
test
test
test
pop
add
sub
inc
pop
sarb
adc
rcll
and
scas
add
repnz
pushf
add
ja
int
cmp
lcall
cli
inc
pop
jno
cmp
push
cltd
mov
inc
push
xchg
outsl
jle
mov
xor
hlt
push
xchg
mov
mov
cli
cmpl
cmp
ret
sbb
mov
mov
add
sbb
in
mov
aad
mov
and
in
mov
out
cmp
adc
jle
lods
cs
sub
pop
hlt
adc
sbb
adc
or
push
add
cmp
jmp
push
mov
lock
dec
cs
inc
jecxz
mov
dec
aad
ds
mov
repnz
mov
jecxz
adc
adc
scas
fldt
lret
out
mov
jmp
mov
mull
inc
dec
ret
mov
cmpsb
std
bound
sub
leave
mov
add
push
outsb
notb
cs
ret
jb
movsb
mov
pop
scas
out
xor
cs
ja
xor
pop
movb
pop
xchg
fwait
or
lods
inc
jnp
mov
int3
shlb
ja
push
sub
insl
dec
icebp
ja
add
jecxz
mov
aaa
lcall
dec
gs
xor
mov
pop
pop
mov
aad
mov
sbb
test
outsb
shrl
movsb
inc
sub
pop
dec
adc
mov
sbb
enter
or
adc
daa
andb
xchg
or
into
inc
pop
push
rorb
fmuls
mov
pop
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
fcomps
jle
les
jle
imul
rorl
fistps
clc
lea
push
sbb
or
jb
shll
mov
xlat
mov
xor
hlt
and
lret
out
in
push
cmp
adc
ljmp
jge
or
in
dec
or
ret
sub
lds
shlb
out
or
jns
ficomps
std
cld
jb
xchg
rolb
adc
dec
out
mov
gs
lock
ror
insb
loope
sbb
mov
sub
dec
jle
mov
xor
xchg
mov
outsb
loopne
and
int
pusha
popa
out
cmpsb
ret
xlat
dec
inc
gs
cmpsl
push
mov
icebp
cltd
pop
sub
fs
test
and
nop
and
jp
xchg
mov
jbe
xchg
xor
icebp
pop
cmp
leave
data16
fsubrp
jg
and
nop
pop
leave
kmovb
xchg
clc
sti
dec
push
lret
pop
lock
and
adc
rorl
lcall
fsubs
cwtl
sbb
jb
sbb
mov
cld
push
lea
ss
adcl
mov
cld
pop
enter
xor
dec
lahf
mov
daa
iret
addr16
lcall
mov
jge
xor
and
int3
daa
jno
arpl
rcll
inc
push
cmp
sub
pusha
dec
inc
je
sbb
fidivl
cs
push
xor
sbb
push
rorl
mov
push
jg
add
shl
pop
add
add
xor
aad
fmull
divb
loopne
and
in
cltd
xorl
sub
push
add
ret
inc
and
mov
andb
inc
push
mov
pusha
xchg
inc
sbb
clc
sti
mov
cli
jmp
leave
sbb
inc
loope
ss
sub
mov
sub
cmp
or
loope
xchg
jns
js
data16
inc
push
shl
into
ds
out
xchg
in
mov
mov
sub
fwait
jae
and
movsl
and
jae
cltd
pinsrw
jb
xchg
std
mov
adc
jg
mov
push
mov
movsb
and
xchg
ret
clc
sti
ss
push
adc
and
adc
cmp
mov
clc
cmp
ret
cmp
sbb
shl
not
es
movsl
hlt
mov
pop
sub
rol
and
cmp
scas
push
mov
icebp
scas
enter
adc
mov
ss
adc
and
mov
lods
jmp
push
movsb
mov
fsub
test
mov
sbb
inc
xchg
daa
int3
imul
and
ret
data16
mov
test
cmpsl
in
loopne
xchg
sti
inc
jo
push
mulb
push
adc
cmp
imul
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
jge,pn
cmp
jle
jns
jle
mov
test
cmc
or
cli
push
sub
add
ret
rol
mov
add
sarl
pop
insl
imul
outsl
adc
add
pop
lret
mov
push
mov
sarb
test
imul
and
test
rcrb
mov
repnz
or
sub
push
cmp
adc
adc
xor
arpl
loope
xchg
jno
movsl
rcrl
inc
xchg
loopne
sbb
dec
fnsaves
rol
pop
faddl
mov
sub
int
fcomps
pop
push
scas
into
pop
cmp
scas
cmp
and
sub
jle
sti
jo
lods
les
loop
mov
push
push
out
adc
jle
or
dec
xchg
xor
or
adc
dec
cmp
push
test
insb
out
mov
inc
js
pop
ljmp
mov
das
cmpsb
jecxz
dec
adc
xchg
and
add
in
outsl
jmp
mov
imul
xchg
shl
mov
adcb
jae
push
adc
mov
pop
ret
lods
test
rcrl
aaa
mov
sahf
add
or
jns
pop
jbe
jae
movsl
dec
arpl
scas
filds
xchg
mov
cwtl
inc
cmp
cmc
and
shlb
into
es
inc
add
jb
push
mul
push
mov
notb
lods
dec
lahf
dec
pop
mov
clc
mov
inc
pop
add
inc
cld
lahf
decl
cmp
add
mov
ds
mov
pop
push
aaa
push
push
out
mov
push
jle
cmp
inc
stos
jno
inc
notb
sbb
push
subl
mov
lret
imul
dec
fcomps
mov
pop
cmpsl
or
inc
arpl
ret
mov
mov
test
int3
sub
mov
xor
add
add
cmpsb
sbb
stos
add
pop
shrl
sub
fistps
loope
pop
sub
in
test
out
aaa
js
sub
ret
pop
adc
push
lret
or
in
xor
cltd
fadd
adc
int
rorb
inc
push
cli
push
push
cmp
jo
and
ficomps
popa
imul
lcall
push
xchg
sub
sub
cmpsl
mov
icebp
lahf
push
adc
push
jg
sub
mov
sbb
out
jno
mov
sti
cltd
mov
sub
mov
mov
mov
inc
sbb
push
hlt
inc
push
jmp
cmp
mov
in
adc
pop
pushf
imul
mov
test
xchg
push
pop
inc
and
scas
cmpsl
sbb
cmc
cmpsb
push
push
movsb
gs
mov
dec
dec
testl
mov
insl
pop
jl
add
pop
cltd
jle
push
sti
in
dec
mov
or
and
mov
adc
adc
rol
jns
out
jbe
fwait
sahf
sub
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
jbe
mov
out
xor
les
jle
pop
out
loope
ljmp
jl
enter
loop
lret
push
xor
sub
ds
jl
popf
jns
jge
sahf
int
testb
push
test
sbb
test
or
pushf
push
push
xchg
roll
shl
mov
out
and
xchg
movsb
and
push
mov
mov
je
adc
jl
dec
cmp
or
test
mov
repnz
mov
cmp
jecxz
jge
jmp
and
loop
dec
adc
pop
js
lahf
jnp
movsb
inc
xchg
xchg
adc
pusha
fldpi
cmp
add
and
adc
jns
push
pushf
ja
into
add
push
mov
lock
in
lcall
mov
lahf
mov
mov
shlb
cmp
mov
pop
xchg
das
sahf
dec
pop
js
adc
jge
shlb
popaw
push
push
mov
flds
stc
lcall
ljmp
rorl
mov
into
hlt
push
sti
rcll
add
cmp
jg
jo
adc
stos
jge
insl
adc
inc
push
add
dec
outsl
xchg
xor
in
mov
add
dec
pop
push
or
lock
enter
sbb
pop
test
cmp
adc
mov
pop
notb
pop
xor
insb
stos
xchg
pop
sub
or
movsb
shl
insb
fwait
ret
xor
mov
inc
outsl
mov
psrlq
mov
inc
std
test
shlb
adc
push
sub
mov
pop
cli
cmp
fdivrs
testl
jmp
mov
loope
and
bound
out
iret
add
add
imul
add
cwtl
outsl
jns
outsb
dec
sub
push
xchg
xchg
gs
xchg
arpl
push
cmp
jge
sti
and
pusha
mov
lds
inc
iret
arpl
outsb
pop
jle
xor
push
leave
rcrl
movsl
fcoms
push
lret
dec
shl
adcl
xchg
into
jmp
lods
lcall
repz
pop
int
xor
and
adc
pop
cld
mov
adc
and
and
jns
sbb
lret
jg
out
stos
pop
cmp
or
cwtl
decb
movsl
into
data16
sub
in
jo
push
cmp
jecxz
out
ljmp
bound
mov
mov
in
popa
enter
int3
jl
dec
xchg
clc
cmp
ljmp
fsubl
mov
xor
cwtl
enter
cmpsl
mov
loopne
cmc
and
cmp
lea
push
push
daa
jge
pusha
and
and
out
push
scas
jp
mov
adc
cmpb
cmpsb
sbb
cmpl
push
xchg
cmp
test
push
mov
testb
xchg
push
lret
imul
lds
pop
jg
add
enter
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
out
sbb
jns
jle
into
sarb
rolb
inc
cmc
inc
sub
gs
push
dec
cmp
imul
mov
sbb
jecxz
mov
mov
fcompl
and
cmp
ss
stc
sub
jl
sub
pop
xchg
fldcw
pop
add
aad
jecxz
lcall
dec
std
aam
pusha
ret
hlt
orb
inc
popf
sbb
sbb
sbb
int
mov
cmp
into
xor
test
test
mov
sub
int3
testl
jmp
enter
in
je
and
test
outsb
fwait
lds
shll
mov
dec
int
jle,pn
adc
bound
outsl
mov
aaa
dec
mov
inc
loop
cld
jmp
fcmovnb
mov
mov
je
inc
mov
sti
or
loopne
out
inc
sbb
sub
call
jb
cld
push
jg
jb
or
out
aam
loopne
mov
sbb
arpl
fmuls
pop
sbb
push
dec
sbb
pop
outsb
in
mov
jne
pop
out
cmp
xchg
or
inc
pinsrw
mov
or
mov
or
jmp
rol
dec
das
scas
or
adc
jnp
add
push
ret
std
mov
jne
add
loop
pop
or
and
push
iret
mov
push
sbb
adc
push
lret
pop
mov
mov
fsubl
clc
mov
jl
in
mov
popa
aad
test
test
mov
cmp
push
into
ret
or
mov
lock
xor
int
dec
cmc
mov
jnp
loop
add
out
cmp
into
xor
divb
xor
xchg
push
int3
rol
mov
mov
push
loopne
sub
imul
cmp
or
jb
data16
pop
scas
mov
lret
jns
pop
dec
lods
mov
addr16
aas
sbb
call
mov
fimuls
iret
cmp
ficoms
int
xor
ja
push
xor
fistpll
sbb
add
lock
mov
je
lcall
xchg
and
push
cmc
xor
cli
into
into
jae
or
sbb
mov
pusha
rol
jae
lahf
lret
xchg
aad
iret
pop
jmp
or
cmpsb
cwtl
mov
xchg
cwtl
imul
mov
xchg
xor
cmc
inc
dec
and
push
ret
outsb
inc
stos
sbb
mov
fisubrl
in
nop
repnz
dec
jmp
push
aam
jmp
push
xor
mov
inc
sbb
xor
enter
xor
push
add
inc
and
cmp
mov
lcall
add
repnz
inc
icebp
hlt
mov
pop
clc
dec
add
push
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
cmpsl
cmp
aaa
jae
jle
dec
jns
jle
ror
jne
push
ljmp
or
push
dec
push
mov
mov
adc
leave
insl
rorb
test
adcl
jb
das
ret
push
call
testl
inc
jnp
sbb
push
sub
decl
push
xor
or
rcrl
repz
add
dec
repz
fidivrs
bound
push
inc
pop
ret
je
inc
push
cmpsb
jnp
mov
test
add
shrb
into
je
xchg
negl
push
push
insl
or
js
mov
cmp
mov
cmc
and
mov
adc
call
stos
aad
fcmovu
or
sarl
add
xor
pushf
or
lret
pop
xchg
xchg
cli
ret
adc
push
mov
dec
sub
adc
call
or
jb
inc
or
inc
daa
fsubs
loope
fdivr
sbb
adc
decl
outsl
sub
and
cmp
dec
std
push
mov
xor
fidivrs
cmp
and
pop
xchg
pop
jno
mov
or
push
xchg
pop
and
and
inc
cmp
xchg
push
or
fadd
bound
cmp
je
das
rorl
adc
insb
lods
push
divb
inc
and
mov
mov
ror
gs
popl
lods
cmp
jl
mov
lret
ds
outsl
in
mov
mov
int
rol
mov
notb
push
rcrl
jb
push
in
pop
cmp
sahf
and
out
frstor
cmp
iret
add
push
mov
cmpsb
mov
stos
sub
fld
push
jne
roll
ja
lret
mov
pushf
sbb
cltd
inc
add
adc
xor
xor
pop
sbb
xchg
je
mov
cmp
movsb
leave
in
jno
or
jo
pop
mov
dec
adc
adc
jge
rcrl
jo
enter
xchg
notl
pop
or
mov
movsl
imul
rcll
je
jle
cli
add
icebp
stos
lret
mov
push
das
xor
xchg
iret
cwtl
pop
call
mov
addb
jno
sahf
aas
arpl
sti
les
jo
and
sbb
xor
fs
xchg
or
mov
aaa
test
push
push
or
push
push
out
ficomps
lock
test
aam
inc
pop
pop
int3
inc
aad
loop
repz
mov
ret
dec
lahf
std
sbb
add
jecxz
icebp
cmpsl
adc
stc
and
addr16
mov
int
fidivl
mov
hlt
mov
daa
inc
sbb
int
fdivs
popf
jl
loope
lcall
call
xlat
aaa
xchg
mov
mov
or
test
adc
sub
xchg
daa
aam
ror
out
adc
jmp
stc
pop
mov
movsb
sahf
dec
in
mov
inc
and
adc
cmp
dec
inc
daa
stos
jbe
hlt
jo
xor
das
fneni(8087
xor
push
lock
imul
pop
in
cmpb
out
test
pop
mov
mov
test
xchg
int3
rcl
xchg
scas
push
xchg
mov
lods
mov
lods
jge
mov
sbb
inc
notb
sub
or
inc
add
cltd
pop
ljmp
jle
js
pop
jp
mov
fmull
mov
mov
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
dec
xchg
clc
dec
cmp
dec
jns
jle
push
out
jge
test
test
dec
movsb
xchg
bound
inc
or
inc
aam
mov
xchg
ret
and
push
adcl
int
inc
pop
mov
pusha
xchg
or
adc
and
and
jo
lds
clc
jmp
out
jne
in
gs
jne
hlt
dec
movsb
adcb
stc
adc
insl
add
sub
add
pop
addr16
lahf
jmp
outsl
push
sub
xchg
arpl
push
inc
lret
in
stos
pop
add
popa
and
icebp
hlt
push
inc
loope
cs
mov
lock
test
sub
sbb
bound
into
flds
mov
push
ss
mov
imul
xchg
or
sahf
int
clc
adc
out
mov
push
xor
cmp
add
cmp
push
fwait
aaa
jbe
sub
lahf
int
ja
inc
aaa
mov
xchg
inc
push
sub
push
vxorps
xchg
iret
jnp
pop
lds
mov
xchg
sbb
inc
in
and
cld
ss
jg
sub
sti
movsb
mov
xor
arpl
pop
or
fisubrs
sbb
addr16
dec
icebp
or
pop
dec
fisttps
mov
xchg
gs
push
xchg
imul
data16
dec
mov
mov
or
in
mov
cld
cmp
shlb
mov
rcpps
inc
inc
pop
iret
add
or
popf
sbb
dec
repz
xchg
mov
lea
jp
xchg
ss
cmpsb
xlat
subb
cmp
pop
sub
sub
fsubrl
and
test
adc
popa
mov
in
sbb
leave
sahf
xchg
inc
rcll
sahf
testl
frstor
ret
sub
mov
call
mov
mov
pop
leave
cmp
sub
xchg
cltd
xchg
or
xchg
jle
inc
repz
push
mov
push
adc
xlat
jecxz
int
sbb
mov
mov
mov
roll
jns
dec
test
cmp
inc
or
adc
xchg
fnsave
jp
iret
sahf
sbb
cmp
insl
inc
mov
pop
in
cs
repz
xor
and
inc
adcb
sbb
data16
pop
test
sahf
pop
cmp
rcl
add
loope
or
inc
xor
inc
ss
mov
xlat
shl
ret
inc
jge
insl
aam
sub
push
test
sbb
jge
and
clc
push
leave
inc
out
xchg
add
sub
in
jmp
xor
xchg
or
add
in
loopne
ja
mov
nop
cld
dec
or
cmp
add
sarl
or
clc
int3
pop
movsb
mov
jecxz
cwtl
icebp
xchg
daa
jp
test
cmp
andb
mov
xchg
movsl
xchg
psubq
cmpsl
icebp
adc
out
in
sub
ret
xchg
pop
daa
or
out
das
adc
in
xor
xchg
xchg
popa
xor
sti
test
adc
sub
pop
or
out
addr16
mov
sbb
enter
test
mov
inc
orb
cld
fsubl
adc
push
push
repz
xchg
mov
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
push
popf
jle
dec
jns
jle
inc
xchg
ret
daa
add
mov
hlt
and
push
ror
mov
sub
cltd
popl
out
inc
test
pop
pusha
aad
and
jmp
jmp
shll
pusha
mov
sub
fnstcw
pop
xor
sub
pop
nop
loope
shlb
mov
cltd
xchg
std
xchg
xor
call
push
mov
adc
mov
xor
roll
movsb
add
sbb
pop
xorl
adc
fwait
cmc
movsb
pusha
mov
dec
mov
adc
outsl
fcmovnu
cmp
mul
roll
push
xor
daa
lret
or
push
mov
cmc
pop
mov
sub
add
add
lods
mov
call
or
inc
fistps
cmc
popa
push
mov
outsl
or
je
in
jl
out
or
add
xor
inc
xor
jnp
xor
push
dec
test
mov
jmp
loopne
rorb
sub
mov
xor
or
xchg
cwtl
lahf
inc
test
jg
push
movsb
into
xchg
sbb
mov
jnp
jge
cltd
aaa
mov
xor
sti
push
push
rol
inc
mov
pop
jmp
pusha
dec
lods
int3
dec
push
cmc
aad
sub
push
push
cmp
sub
dec
dec
cmp
lock
imul
add
cwtl
or
and
jnp
test
or
shrl
icebp
hlt
sti
push
aam
xchg
popa
mov
stos
es
xchg
into
sbb
add
mov
jo
inc
xor
fsub
insb
pop
and
mov
cmp
or
loope
pop
mov
xor
push
mov
lods
lcall
pushf
sbb
je
dec
jne
dec
aaa
mov
inc
popf
adc
inc
cli
mov
xchg
scas
int
movsb
mov
and
jle
xchg
pop
or
cltd
cld
test
clc
fcoms
cmpl
sbb
inc
repz
fistpll
xlat
adc
jle
mov
push
sbb
pusha
mov
popf
lods
leave
inc
adc
add
jbe
fisttpl
incb
test
sbb
notb
ja
or
add
adc
jmp
andl
jne
movsb
jp
push
add
mov
cs
mov
mov
mov
ficoms
call
das
orb
divl
jmp
cmpsl
pop
lret
push
push
sub
into
pop
out
or
and
pop
hlt
or
icebp
pop
and
push
pop
out
int
insl
imul
push
mov
jg
adc
mov
xor
xchg
mov
lret
xchg
test
ret
out
nop
pop
jno
inc
mov
test
dec
or
popa
movsb
dec
scas
fs
or
lods
pushf
mov
mov
jge
push
stc
push
add
sbb
mov
loop
scas
adc
stc
lods
mov
sub
cltd
pushf
jno
adc
int3
pop
loopne
rcrb
dec
and
mov
push
mov
into
fsubs
test
or
stos
ret
xchg
mov
arpl
ret
hlt
jb
mov
xchg
cltd
testb
repz
add
mov
jmp
call
push
cld
mov
movzwl
testl
and
test
xchg
adc
mov
inc
mov
pop
sbb
fwait
xor
loopne
add
add
add
jmp
shlb
cld
ja
or
out
ret
jle
dec
jns
jle
xor
ja
push
xchg
push
fs
mov
pop
mov
adc
or
cmpsl
arpl
cmp
mov
jecxz
jb
inc
inc
add
out
jmp
jo
lret
pushf
and
push
fucom
leave
mov
mov
das
cvtps2pd
mov
icebp
and
mov
outsb
fs
xlat
xor
jge
fbstp
enter
xor
mov
dec
daa
ret
xor
add
mov
mov
test
mov
cwtl
adc
dec
mov
fisttpl
in
loope
adc
sbb
pop
xchg
test
xchg
adc
cmp
sub
sbb
sub
scas
ss
aam
xchg
sbb
rolb
mov
cmpsl
mov
xor
sub
or
mov
lcall
lret
xor
xor
pop
outsl
pop
call
scas
cs
dec
push
jg
popa
insb
inc
mov
xchg
pop
mov
mov
ret
inc
add
mov
jp
jno
gs
cli
negl
popa
aam
cli
mov
call
jecxz
call
sarb
out
or
divl
push
aam
and
in
fcmovnb
insb
xor
pop
push
std
add
cltd
stos
out
call
stc
sahf
sub
lds
push
push
popf
out
mov
rorl
sub
stc
aad
cmpsl
mov
iret
xchg
out
roll
aas
data16
mov
movsl
inc
outsl
dec
mov
int
xchg
call
dec
int
mov
and
xor
aaa
imulb
lcall
and
pop
mov
dec
outsb
push
iret
mov
repnz
xchg
sub
adc
incl
cltd
callw
mov
and
jae
fs
inc
call
cwtl
sbb
scas
or
adc
mov
in
and
sub
mov
das
fucomi
add
pop
pop
out
call
mov
sbb
push
insl
aas
xchg
int3
call
pop
xchg
stc
outsl
and
aad
addr16
mov
or
in
orl
ja
pushf
inc
ja
enter
fnsave
ret
push
pop
fimuls
dec
int
subl
insl
mov
sbbl
fstl
jbe
push
sub
std
ljmp
adc
rcrl
jle
inc
cwtl
cmp
xor
hlt
ret
sub
pushf
xchg
idiv
sbbb
aas
and
mov
stos
mov
sub
or
neg
popf
sahf
test
cmc
mov
xor
mov
push
add
xor
mov
and
lcall
imul
popf
fstl
stos
shll
cmp
inc
mov
rcll
xor
sub
dec
push
cmp
pop
mov
cld
daa
push
in
inc
mov
in
xchg
xor
outsl
xchg
jecxz
jl
push
orl
sbb
out
dec
in
cmp
in
outsl
push
lds
mov
outsb
fiadds
mov
icebp
ja
ja
lahf
dec
lahf
or
inc
cmp
jp
and
mov
int3
mov
pop
sub
jmp
movsl
ds
mov
sub
hlt
sub
lock
mov
jno
std
faddl
cld
add
subb
inc
outsb
daa
fiadds
shl
pushf
push
mov
cmp
jle
mov
mov
dec
pop
xchg
test
fdivs
mov
cmp
add
add
scas
adc
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
pop
in
aas
iret
jle
dec
jns
jle
mov
dec
jnp
cmpsb
mov
dec
pop
in
cmp
jbe
push
fcom
repnz
xchg
icebp
iret
sub
mov
test
sysexit
push
jno
push
movsb
pinsrw
and
sarb
inc
jbe
sahf
or
popf
xchg
pushf
sub
fiadds
sub
inc
sbbb
push
jp
sahf
push
cs
pusha
inc
les
sbb
inc
mov
out
push
inc
jns
popa
mov
xchg
jnp
mov
mov
cmp
jbe
mov
sub
clc
fs
mov
xchg
xchg
add
adc
pop
xlat
inc
hlt
jnp
notb
mov
and
xor
xchg
aad
mov
call
mov
mov
mov
xor
je
sub
pop
stos
inc
and
into
sbb
shlb
pop
or
push
lods
dec
test
push
movsl
lahf
push
sub
mov
cltd
add
jbe
mov
sbb
outsl
mov
jo
or
scas
mov
jl
jae
and
out
xchg
push
push
pushw
rolb
loop
ret
mov
scas
pop
inc
mov
xchg
inc
fcoms
inc
pop
lods
dec
and
lcall
jbe
stc
lods
outsb
xchg
mov
fisubl
pop
or
push
mov
sti
bndstx
mov
sub
mov
mov
and
fnsave
cli
push
mov
loopne
add
sbb
fmull
mov
rorl
and
hlt
mov
push
push
push
and
shll
and
cli
inc
cmp
addb
das
xor
jnp
push
pop
push
test
inc
add
pop
test
mov
fs
push
ret
xor
int
pop
inc
mov
inc
push
add
xor
xchg
fwait
or
push
aas
sbb
push
testb
adc
pop
mov
lret
sub
pop
mov
and
nop
add
fistl
cltd
mov
test
ja
cmc
mov
call
jl
xor
rorl
daa
popl
les
add
xchg
in
int3
cmp
xchg
sbb
aas
push
mov
pop
xor
cmpsb
fwait
adc
test
fbstp
insl
testl
rolb
mov
dec
jl
push
in
testb
push
fildl
mov
lret
jmp
je
lock
pushf
inc
push
lods
cmpsl
pusha
add
js
mov
jne
mov
mov
dec
push
sbbl
sbb
jmp
test
mov
pusha
mov
push
add
mov
mov
repz
sarl
pop
jbe
mov
or
int
shlb
xchg
xchg
pop
jo
cmp
leave
sarl
pop
test
jl
push
cmp
mov
mov
jl
xchg
subb
mov
cmp
mov
lea
mov
push
rorb
idivl
mov
ret
xchg
jg
add
data16
stos
ret
adc
pop
lret
cld
dec
cmp
cmpsl
push
repz
sarb
js
int3
xor
mov
cltd
mov
cmp
xorl
xor
xchg
mov
test
into
mov
sbb
dec
cmp
push
aaa
out
enter
dec
mov
jle
mov
in
mov
jae
imul
push
ja
fmuls
mov
aas
enter
xchg
imul
and
popa
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
stos
jmp
mov
sarb
jbe
and
push
jae
sub
sub
adc
dec
dec
fnstenv
test
pop
les
test
std
dec
jne
cmpsb
nop
aas
jnp
clc
jbe
insl
popa
xor
dec
lock
fdivr
mov
imul
jae
push
pavgw
scas
push
adc
xchg
mov
cltd
test
inc
push
sbb
inc
sbb
loope
xchg
popf
mov
movsl
aas
addr16
adc
xchg
sub
ss
aad
push
adc
jl
xchg
adc
daa
inc
hlt
out
test
into
sub
nop
andl
cmp
into
mov
pop
imul
cmpsl
je
inc
xchg
xchg
test
mov
xor
aad
rorb
shrl
push
mov
inc
sarb
mov
jecxz
jmp
fs
xchg
pop
adc
inc
add
in
or
dec
mov
in
sbb
in
ja
dec
dec
mov
insb
sti
repz
nop
xchg
push
addr16
mov
repz
add
mov
mov
mov
jno
repnz
push
std
inc
imul
jmp
mov
pop
std
add
push
sbb
add
jp
stos
sub
xorb
sbb
jne
addr16
push
xor
rcll
cli
out
mov
imul
pop
or
fidivl
cld
cmp
xchg
cmp
dec
dec
cmpl
mov
or
mov
sub
loopne
sahf
insb
adc
inc
mov
insb
sarb
hlt
ds
loope
mov
sbb
and
shr
sub
cs
sarb
pop
push
cli
cmpsl
leave
cmc
cmpsl
sub
daa
fdivl
cltd
push
mov
mov
sub
dec
cli
dec
push
sub
cmp
cmp
dec
fsubl
inc
add
sub
lods
mov
cltd
push
clc
mov
lods
ljmp
lods
clc
gs
ja
lea
shlb
insl
in
sub
dec
ret
xchg
adc
test
mov
popa
mov
scas
gs
sub
cmp
sub
ljmp
cmp
pop
adc
ljmp
pop
addb
repnz
dec
mov
ss
mov
cld
push
movsl
jnp
arpl
arpl
and
mov
cli
fstps
pushf
mov
lea
rorl
lret
sbb
mov
scas
cltd
jecxz
in
sti
jne
xchg
mov
lods
inc
adc
movsl
inc
mov
lahf
into
scas
or
pusha
testb
pop
fcoms
cmpsl
mov
hlt
add
scas
fidivl
xchg
fsubl
mov
mov
xchg
hlt
xchg
jmp
in
movsb
pop
dec
pushl
inc
push
sub
xchg
ljmp
mov
mov
movsl
xchg
movsb
iret
mov
push
fcmovnbe
dec
mov
in
popa
lahf
cmc
xlat
gs
inc
ljmp
mov
shrl
pop
add
pushw
lea
fsubl
leave
push
xchg
inc
test
fdivrl
sbb
lods
cmp
test
dec
negb
bound
jle
push
push
aas
mov
stos
inc
mov
push
hlt
mov
jno
jnp
rorl
jo
jnp
mov
jno
scas
push
test
push
push
xchg
and
icebp
divb
jmp
cmp
clc
cmc
loope
lods
jge
xchg
cmp
mov
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
sbb
ficomps
jle
dec
jns
jle
mov
inc
jb
std
adc
inc
daa
stos
pop
sbb
dec
xchg
cli
das
repz
sbb
push
jbe
xchg
scas
mov
shrb
icebp
scas
xchg
push
dec
in
into
insb
and
sub
cmc
cmp
rcl
push
pop
xor
callw
push
insb
notb
int3
sahf
cmp
js
mov
dec
ja
enter
out
jl
hlt
ljmp
jne
inc
lahf
lret
mulb
push
repz
test
mov
cmp
jecxz
icebp
cmc
addl
inc
test
test
shlb
xor
inc
dec
push
out
ja
int3
mov
jle
addr16
and
ret
arpl
ss
xchg
and
ds
gs
pop
clc
gs
arpl
cmc
push
sub
xor
xor
loop
jecxz
insl
cmpsl
fs
test
sti
and
xor
pusha
push
das
in
scas
test
leave
test
shll
mov
xor
js
je
xchg
dec
imul
xor
adc
pusha
jnp
dec
das
mov
pop
enter
insb
mov
imull
sbb
sub
inc
test
ret
pop
pop
sahf
push
or
popa
xchg
movsl
jnp
adc
sub
jg
mov
divl
mov
adc
scas
ja
cmc
call
in
add
fists
cltd
mov
lcall
mov
sbb
push
aaa
lods
iret
inc
inc
cltd
bound
jmp
ss
dec
ret
xor
sti
cld
bound
mov
push
shll
pop
test
xchg
push
and
cltd
cmp
pop
fldenv
into
adc
movsb
mov
mov
mov
push
mov
or
enter
sub
mov
scas
cli
clc
sbb
shl
test
jb
inc
lret
test
loopne
sti
mov
cmp
lods
jp
push
data16
or
arpl
xor
sar
es
pop
into
add
push
push
arpl
fwait
add
add
mov
adc
insl
mov
cmp
pop
test
in
and
daa
stos
cmp
arpl
in
shll
push
iret
int
loop
fcmovb
fs
insb
xor
loopne
fwait
int3
xchg
mov
xchg
xlat
mov
dec
add
jecxz
cmp
rorb
repnz
mov
add
and
inc
les
jb
andb
popl
cmpsl
fcmovbe
das
push
sahf
push
adc
or
jne
inc
sub
xor
testl
mov
inc
aas
out
rclb
cmpsb
daa
insb
add
or
fsts
es
mov
ror
lea
jmp
mov
jge
push
lods
sti
lock
adc
mov
jle
ss
push
jmp
xchg
daa
popa
pop
mov
scas
cmp
adc
jns
push
pop
push
sbb
cmpb
dec
outsl
out
xor
mov
stos
jns
mov
fnstcw
cs
mov
dec
dec
push
push
jle
cmp
mov
jns
les
jno
pop
mov
jo
jo
es
jmp
jmp
sbb
mov
das
popa
jg
cmp
inc
lret
inc
call
das
dec
inc
mov
ss
add
scas
sbb
das
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
test
stos
sarb
dec
jns
jle
lock
lods
add
pushf
jb
mov
dec
popa
cwtl
jmp
pop
xor
loop
testl
push
adc
ss
ret
and
pop
insb
or
adc
mov
mov
shl
sub
ret
or
sub
mov
sahf
push
push
xchg
addr16
pop
movsl
add
mov
repnz
mov
pop
cmpsb
sub
shrl
jb
nop
jge
pop
aam
loope
lahf
xor
pop
jo
sub
ss
pop
dec
daa
leave
mov
inc
sbb
dec
xchg
out
inc
stos
popf
cli
loopne
rorb
mov
and
repnz
movsb
ja
adc
or
sahf
gs
cs
and
add
outsl
loope
popa
subl
xor
lods
hlt
jo
or
jae
jo
sub
pop
push
outsb
call
insl
into
and
loope
out
inc
mov
pop
cli
mov
push
pop
sbb
cli
pusha
mov
arpl
inc
push
js
out
out
pushl
cmc
adc
sbb
jne
lret
xchg
flds
xor
sbb
mov
imul
addb
jo
pop
or
xor
cmpsl
sbb
sub
ja
stos
sbb
popf
repz
sbb
mov
and
loope
dec
push
dec
adc
outsl
int3
std
mov
push
cmp
pop
sbb
stos
cwtl
xor
mov
add
push
push
sbb
cmpsb
dec
pop
jo
xchg
pop
hlt
lret
sub
cmp
sub
xchg
mov
cmp
or
das
mov
imul
mov
movsb
repz
in
mov
in
aad
stc
out
in
sbb
jg
out
add
lds
addl
dec
daa
dec
dec
faddl
mov
push
movsb
jb
inc
and
scas
sti
mov
call
xlat
add
adc
out
xlat
gs
aaa
into
lret
jo
xor
fcompl
adc
cld
cltd
xlat
test
cmp
icebp
testb
aam
negl
xlat
push
sbb
xchg
or
fs
cmp
aaa
movsl
in
dec
xchg
cld
sbb
jle
add
rclb
adc
jns
adc
sbb
xor
cmp
xchg
sbb
repnz
cmp
scas
sahf
pop
fcoml
test
lret
add
daa
dec
mov
adc
dec
add
je
int3
inc
cs
and
add
cli
movsb
cmpsl
pusha
lea
test
test
add
das
lea
notb
lea
pop
fucomip
pop
mov
or
sub
shrb
lahf
or
mov
addr16
clc
cwtl
add
xchg
jns
gs
lea
push
cld
ljmp
push
sbbl
or
sbb
push
testb
jl
inc
test
insl
idivl
push
xchg
test
pop
jb
xchg
sarl
ret
popf
mov
and
rcrb
sbb
mov
rorb
sub
sub
push
popf
call
pop
sub
cwtl
pop
cmpl
lcall
rcr
lods
inc
leave
mov
jbe
pop
test
lcall
insb
pop
mov
loope
popa
fwait
adc
mov
pop
push
lret
jno
inc
pushl
mov
daa
push
test
scas
xchg
adc
popf
cmp
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
add
ffreep
sti
fidivrs
loope
jle
aam
fcoml
test
cmp
mov
pop
lods
sbb
js
es
cmp
arpl
insb
jecxz
push
pop
lods
or
adc
or
in
push
xor
jns
sub
pop
imul
and
inc
xor
xchg
rcr
lcall
incb
nop
or
mov
sub
ljmp
pop
pusha
or
std
stc
cltd
push
xchg
scas
mov
jmp
iret
adc
sahf
inc
test
sub
inc
subl
mov
inc
mov
xchg
popf
cmp
add
popa
jb
mov
les
shl
sub
pop
call
fildll
int
lea
popf
cmc
mov
lahf
dec
js
jnp
mov
daa
add
jnp
push
daa
jno
sbb
pop
sbb
aad
xchg
cli
jecxz
rclb
sbb
inc
mov
repnz
xor
pop
add
adc
dec
sub
mov
aas
and
jne
inc
mov
mov
hlt
comiss
icebp
movsl
adc
cmpsb
xor
rol
mov
inc
es
scas
loopne
in
push
jne
pop
xor
mov
inc
shrb
add
imul
stos
mov
decl
push
pop
insl
and
or
xchg
insb
js
in
jecxz
xchg
jnp,pt
loop
mov
outsb
mov
xor
and
dec
aas
sbb
stc
add
int
sbb
jecxz
int3
lahf
lock
jo
clc
mov
xor
jl
cmc
adc
sahf
cmp
xchg
dec
xchg
dec
fstl
cltd
xchg
dec
sub
loop
inc
mov
jp
icebp
in
loop
inc
or
pusha
push
call
sub
leave
push
sbb
lea
dec
nop
sbb
mov
push
xchg
rcl
outsb
aaa
sbb
inc
sbb
add
mov
rcll
je
rcll
mov
mov
jno
stos
push
pusha
cld
cs
mov
sbb
lds
loop
mov
pop
adc
pop
int
out
js
cltd
mov
data16
mov
jb
arpl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
dec
outsb
fdivrs
loope
jle
sbb
cmp
loopne
andb
sub
sub
ss
cmp
outsb
bound
jbe
xchg
and
jo
jle
inc
in
cwtl
mov
xchg
loop
and
andb
mov
pop
enter
loopne
mov
loope
das
hlt
dec
mov
stc
dec
cltd
cmp
xlat
jle
add
xor
ljmp
imul
imulb
mov
repnz
movsb
out
sbb
test
dec
dec
daa
decl
enter
lds
mov
adc
xchg
xchg
fcmovu
ja
leave
pusha
push
js
inc
mov
das
fisttps
shlb
sbbb
imulb
jmp
mov
jl
mov
or
or
push
jnp
arpl
subb
out
cmc
out
xchg
dec
jbe
or
inc
sbb
cmpsb
js
lds
testl
daa
hlt
imul
rcrl
cmpsl
adc
mov
shlb
jnp
test
outsl
xchg
ds
cmp
cmp
pushf
jge
test
push
mov
mov
test
pop
mov
and
stos
xor
cmp
mov
mov
push
std
cmpsb
daa
sbb
call
mov
sbb
add
xchg
or
add
cli
mov
mov
into
push
aaa
jg
aad
add
fwait
add
lds
daa
sub
push
movsb
scas
add
sbb
jae
lods
aam
jns
mov
mov
jmp
cmp
rcl
mov
jg
mov
mov
pop
popa
mov
and
inc
insb
cltd
add
cmp
dec
adc
cmp
push
imul
shlb
lret
and
sub
jmp
adc
hlt
test
arpl
inc
fistpll
lcall
mov
xchg
loope
add
lcall
pop
shrb
xor
pop
and
out
mov
pusha
xor
push
mov
mov
ljmp
fidivrl
popa
cltd
aas
lods
dec
add
xchg
cmp
inc
inc
jns
ljmp
ffree
fidivs
pusha
adc
fcmovbe
test
outsl
aaa
inc
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
cmp
fstpt
loope
jle
jl
cld
pop
dec
sahf
inc
cmp
fldl
fsts
jne
jmp
cmp
mov
clc
inc
pop
shll
mov
aam
stc
xchg
pushl
mov
fwait
inc
inc
pop
mov
cmp
xor
mov
hlt
out
iret
jl
out
fidivrl
push
pop
shll
jge
jl
insb
jo
loope
pop
jg
addr16
out
mov
imul
dec
xchg
int
sbb
sbb
pop
mov
insb
je
sub
inc
push
ja
sub
insl
and
xchg
ljmp
cmpsl
test
and
les
and
pop
mov
fldt
jp
xor
pcmpeqd
rcll
std
divl
jbe
add
leave
pop
sbb
or
mov
fisubrl
mov
xchg
int3
add
pop
data16
ss
xor
push
pop
int
or
mov
adc
adc
jge
pop
pop
mov
repnz
je
dec
roll
pop
pop
iret
add
call
ja
bound
cmp
idivb
add
dec
popf
add
fs
bound
jecxz
fs
cmp
mov
sbb
xchg
push
lock
push
mov
adc
or
repnz
dec
dec
jl
dec
mov
jnp
test
pop
xor
adcl
dec
jmp
fiadds
out
movsl
inc
push
pop
cs
jle
into
cmp
cmpsl
sub
xchg
mov
arpl
popf
outsb
add
mov
into
repnz
push
sub
mov
icebp
outsb
ljmp
adc
lret
or
pop
inc
and
or
test
adc
push
lea
popa
jnp
or
inc
orb
stos
mov
sbb
xchg
xchg
adc
movsb
pop
orl
scas
gs
je
imul
andl
out
repz
scas
cmp
mov
and
pop
pop
jge
xchg
in
pop
adc
in
outsl
mov
xchg
inc
insb
add
out
fidivrl
scas
push
or
sbb
in
outsl
inc
cmp
jo
adc
xlat
inc
into
shld
inc
add
add
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
mov
in
jle
js
jle
xchg
pop
sarb
cmp
jb
bound
nop
scas
sbb
mov
mov
dec
push
jbe
stos
clc
stc
mov
aaa
cmp
cwtl
loop
adc
mov
stc
fdivrp
pop
lea
pop
push
cmp
push
jnp
stos
shlb
jge
sarl
cmp
xchg
and
dec
pminsw
mov
lahf
movsl
ret
or
mov
or
push
int3
mov
idiv
out
mov
in
or
lods
std
es
jb
icebp
es
rcl
jecxz
sbb
inc
les
add
jle
shll
cmp
dec
popa
cmp
testl
out
cwtl
dec
push
adc
pusha
lret
iret
sub
adc
push
stos
pop
dec
in
xchg
pop
sbb
jg
mov
ja
xchg
les
push
fcmovnbe
scas
imul
idivb
and
pusha
insl
pop
mov
and
inc
sub
mov
inc
xchg
add
mov
xchg
add
insl
arpl
add
adc
in
adc
cmp
leave
js
mov
add
lods
push
add
pop
cmp
addr16
xchg
add
mov
call
aaa
jne
pop
add
cmova
adc
or
sub
fwait
pop
getsec
into
int
or
lock
cmp
rclb
rcrl
mov
mov
stc
fs
fcomp
in
movhlps
outsb
je
xchg
test
leave
ds
subb
cmpsl
loop
jg
cli
mov
aaa
lcall
fwait
xchg
in
or
and
adc
mov
push
dec
pop
negl
pushf
test
cmp
stos
jl
fs
ljmp
pop
lock
xchg
sbb
jnp
gs
jb
push
lods
pop
data16
dec
sbbb
ret
arpl
add
add
mov
loop
outsb
sub
addl
mov
xchg
push
cmpsb
cmpsb
mov
gs
mov
mov
jo
jae
push
inc
loopne
xor
pop
mov
mov
pop
rorl
lods
mov
sub
test
mov
mov
lods
xsavec
int3
dec
je
mov
sub
fwait
and
sbb
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
push
adcb
js
pop
jbe
addr16
push
pop
xchg
scas
and
icebp
adc
mov
mov
adc
out
sub
xor
xchg
xchg
pop
xchg
cmp
xorb
test
pop
xchg
or
out
ret
mov
push
inc
jg
insl
aaa
jns
add
ljmp
es
add
xchg
xchg
ds
icebp
mov
fisubrl
ret
sub
pop
bound
add
repz
pop
xchg
setae
repnz
fbstp
and
movsl
ss
jmp
add
lock
cli
movsb
mov
cli
and
leave
sub
nop
pop
sbb
icebp
lcall
imul
cld
xor
scas
adc
cmc
mov
mov
jne
stos
adc
push
add
pop
loopne
cmp
cmp
out
push
sbb
lret
sub
push
xchg
in
shl
adc
add
inc
fsubl
cmp
repz
roll
pushf
inc
bound
or
xor
fiadds
sbb
aaa
insb
xchg
ljmp
jle
insl
ljmp
inc
scas
pusha
jbe
mov
rol
int
mov
inc
pop
setno
dec
stos
inc
dec
lock
or
pop
cmp
addr16
add
dec
lea
jne
jp
aaa
iret
jle
jecxz
rcr
push
push
lds
clc
ret
sbb
dec
push
cmpsb
mov
pop
les
mov
fisttpll
dec
dec
and
inc
sbb
and
mov
mov
mov
pop
ret
adc
pop
cmpsl
daa
je
push
icebp
jbe
add
sub
add
jmp
cld
dec
faddl
mov
adcl
nop
test
fstpl
sbb
jle
jge
imul
vfrczps
negb
inc
movsb
or
stos
add
pop
in
add
outsb
jae
pusha
addr16
mov
mov
fistpll
adc
sti
add
pop
loope
fsub
stc
cmp
shl
aad
int3
nop
insl
imul
jns
xchg
addr16
inc
adc
jge
xor
lret
mov
lods
in
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
add
adc
xchg
loop
jle
jns
jle
ljmp
testb
jno
mov
or
mov
ret
jg
add
popf
subl
arpl
mov
outsb
jg
pop
in
aam
ss
mov
rorl
pop
pop
lock
mov
iret
sub
jmp
int3
pop
aad
pushf
loope
arpl
push
mov
test
mov
mov
add
ja
pushf
mov
std
pusha
daa
jb
data16
pop
loop
es
push
rorl
xchg
stos
lret
loope
jne
cmpsl
int
pop
sbb
xchg
add
imul
inc
jecxz
add
fwait
mov
lcall
rcll
mov
xchg
and
cmpsl
inc
rorb
repz
cmp
jmp
and
sbb
xor
mov
pop
inc
rclb
mov
mov
loop
lods
negl
mov
dec
mov
popa
ljmp
push
hlt
xchg
and
pop
cmp
or
sub
repnz
adc
jmp
pop
xchg
fcompl
or
mov
cld
sbb
rclb
mov
xlat
scas
jle
cli
cwtl
cmp
push
stos
lret
popa
out
stos
rcll
aaa
sbb
ljmp
hlt
sti
jns
xlat
cmp
xor
test
mov
push
loop
adc
fwait
adc
xor
aaa
inc
mov
mov
imul
jl
scas
aad
in
push
lods
jl
xor
test
and
arpl
pop
cmc
lock
xchg
xor
dec
es
lret
cmp
xchg
and
cli
idivb
and
loopew,pn
push
mov
stc
cmpsl
clc
sub
and
mov
mov
movsb
sbb
adc
sahf
jno
ja
jns
mov
add
xor
ljmp
xchg
std
mov
mov
add
adc
push
jl,pt
cmc
shlb
lret
int3
dec
mov
push
int3
push
int
adc
pop
xor
mov
mov
aad
lret
adc
inc
mov
shrl
and
mov
ss
mov
mov
and
jmp
pop
mov
dec
jno
jge
inc
mov
xchg
sbb
repz
inc
adc
popl
movsl
mov
sbb
xor
cltd
mov
xor
jle
daa
es
jl
push
and
in
lods
aaa
push
jp
js
sub
addr16
pop
fldt
jb
pushf
adc
sbb
add
lods
sub
sbb
inc
cmp
mov
pop
movsl
js
push
mov
int3
cmpsb
fs
out
push
jmp
push
fildl
push
or
or
or
aas
cwtl
int3
xchg
jne
xchg
jo
dec
mov
adcb
cmp
sti
pusha
mov
inc
add
lods
lcall
push
sub
test
cmp
fsubl
ss
or
ret
inc
out
add
push
mov
add
mov
notl
adc
mov
pop
aam
incb
popa
xchg
push
pop
dec
aaa
add
popa
mov
repz
das
mov
mov
notb
pop
les
dec
cmc
fucomp
stc
mov
dec
stos
or
lea
pushl
fildll
add
lods
js
test
imul
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
mov
xchg
adcl
jle
add
xchg
in
pop
loope
lretw
insb
iret
movsb
mov
fsubrs
insb
mov
mov
mov
push
int
lret
lods
inc
jecxz
pop
cmpb
sub
lods
push
pop
cmpsb
rclb
add
jg
mov
mov
orl
mov
lods
loop
adc
mov
lods
stos
movsl
in
out
mov
pop
sub
pop
fisttps
mov
pop
outsl
in
sub
add
aas
ss
aam
lods
insb
leave
mov
adc
cmp
inc
adc
and
xor
push
mov
add
lea
icebp
fldl
add
and
aam
xor
shll
mov
lahf
hlt
ret
sub
jmp
inc
mov
shrb
dec
inc
movsb
ss
rclb
lcall
mov
aad
adc
popa
mov
pushf
pop
ss
sub
stos
das
out
sbb
ss
dec
idivb
sbb
sbb
movl
mov
sbb
mov
jae
and
add
mov
dec
cmc
sub
popa
fs
lcall
jbe
mov
and
push
cmp
cmc
jno
sbb
jnp
push
adc
pop
int
rorl
and
add
fcoml
xorb
xchg
shr
lock
fmull
test
pushfw
out
clc
rorl
mov
insl
out
xchg
sbb
idiv
aad
jmp
loope
xchg
mov
mov
fbstp
jmp
mov
cmpsb
shl
xor
adc
mov
or
xor
out
or
stc
sbb
cmp
xorb
sbb
pop
mov
jecxz
jp
mov
fistpl
popa
push
cmc
push
pusha
push
icebp
fnsave
pop
mov
dec
pop
addr16
or
fnstcw
aam
xchg
sbb
jg
cli
roll
fisubrs
jl
test
lcall
mov
fcmove
push
test
sbb
adc
jge
mov
cltd
xor
mov
inc
in
cltd
mov
cmp
xlat
push
adc
fmull
inc
and
mov
loope
fcmovnu
push
scas
testl
adc
mov
jecxz
test
adcl
jmp
mov
popf
jns
or
and
add
out
sbb
mov
fadds
xchg
adc
pop
add
push
int
or
int
inc
shrb
sbbl
mov
test
pop
or
mov
lret
imul
std
out
push
mov
andb
xchg
xlat
cmp
daa
xor
lcall
ret
jg
mov
xor
fldt
pop
xor
test
fcomip
ret
movsl
sbb
add
lods
push
into
mov
xchg
xor
stc
jp
xor
fisttps
push
cmp
xchg
pop
mov
cwtl
jbe
mov
mov
int
xor
pusha
cli
adc
push
xchg
dec
pop
cmpsl
adc
cwtl
inc
cmpsl
std
test
sbb
cmp
pop
pop
leave
dec
insl
cmpsb
lods
or
cli
out
sub
stc
sbb
loop
cld
push
imul
leave
pop
ljmp
add
xor
dec
je
testb
out
inc
in
out
outsl
add
push
pop
and
jbe
lods
xor
xor
popf
inc
bnd
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
int3
inc
jl
mov
jle
jo
jle
jmp
inc
jge
mov
mov
out
push
mov
rcrl
or
cmp
jecxz
push
rcrl
mov
arpl
pop
xchg
inc
cs
jp
sbb
movsl
cmp
pop
or
mov
mov
stos
push
outsl
jmp
ficoml
xor
jmp
xor
lahf
int3
xchg
push
in
mov
pop
sbb
dec
dec
inc
popf
out
and
xlat
sbbl
insb
push
dec
add
or
jmp
rep
mov
xor
mov
cli
pop
pextrw
cmp
xor
shrl
xor
cmpb
mov
dec
aaa
mov
mov
in
adc
sbb
imul
in
xchg
enter
jl
in
clc
daa
lcall
sub
sub
inc
shrb
int3
testl
pop
adc
sub
pop
dec
mov
fcoml
lret
mov
xor
movsl
mov
sub
xchg
fldl
cmp
pushf
adc
imul
stos
sbb
mov
sbb
mov
push
call
clc
jg
mov
lds
xchg
adc
sbbl
cli
inc
mov
jmp
mov
jg
mov
and
add
push
dec
xlat
mov
loop
inc
into
pop
mov
mov
add
xor
cwtl
ljmp
xor
jge
stos
clc
icebp
loop
fsub
xor
cmp
fwait
or
cmpsl
or
lret
fmull
pop
cmp
xor
sbb
xchg
jmp
inc
cmp
fists
in
mov
aam
es
sub
adcl
out
mov
dec
and
xor
sbb
pop
sbb
fwait
pop
adc
inc
loopne
mov
inc
cmp
data16
mov
add
aad
popf
insb
cmp
jo
xor
fdivr
dec
out
mov
les
sub
or
adc
stc
pop
mov
repnz
and
les
sbb
lods
adc
cmpsb
adc
ljmp
dec
pushf
adc
push
push
fs
push
jle
outsl
fistl
mov
lea
mov
addr16
fstpl
daa
pushf
jle
lret
aaa
lahf
aas
fidivs
xor
lods
xchg
leave
sahf
or
shl
lret
sub
in
flds
pop
push
xor
pop
je
jl
xchg
sub
mov
xchg
sahf
push
mov
and
or
cmc
add
int3
sub
popa
loope
mov
es
fucomp
pop
inc
scas
mov
cmp
mov
jb
or
fwait
aas
dec
popl
push
xchg
sub
mov
mov
cmp
mov
xlat
cmp
mov
insb
sbb
and
popf
cmp
sbb
jb
or
movsb
xchg
das
js
push
fcompl
and
iret
adc
loopne
mov
adc
jmp
adc
pop
pop
pushf
in
mov
mov
pusha
movsl
adc
jge
mov
dec
lods
and
repz
es
mov
in
add
ljmp
js
arpl
mov
jecxz
add
xchg
push
or
iret
lea
xchg
ljmp
cmc
or
jns
jne
je
push
mov
xor
lds
dec
cs
xchg
inc
shlb
test
adc
out
sbb
inc
mov
ljmp
movsb
sbb
sub
movl
and
jmp
popa
imul
cld
popf
popa
imul
push
sbb
jle
jo
jle
pop
lret
mov
int
jmp
aaa
push
cmp
mov
push
imul
mov
jp
popa
in
mov
dec
in
nop
sub
cld
popa
mov
xlat
test
outsb
fcomip
push
sbb
loope
fs
mov
mov
jns
shrb
mov
add
mov
cltd
fwait
lahf
sarb
call
ja
mov
xchg
stos
pop
mov
mov
xor
jmp
js
cmp
leave
push
and
jl
cmpl
test
mov
loop
arpl
lret
pop
nop
mov
add
mov
lods
mov
mov
scas
mov
xchg
mov
popa
push
add
and
mov
jbe
push
sbb
jmp
pop
push
out
outsl
dec
pop
inc
sbb
jne
js
scas
addr16
out
jo
cmc
push
lods
add
insl
pop
shlb
and
in
scas
mov
xchg
cmp
adc
dec
adc
add
int3
pop
in
je
sub
mov
pop
ja
xchg
ja
and
mov
es
in
mov
into
dec
ja
into
mov
ret
es
xor
and
mov
out
jb
test
das
cmp
fimull
ja
cmp
shlb
in
shl
into
mov
pop
adc
cmp
filds
aaa
jb
pop
aas
mov
mov
lret
cmp
hlt
imul
jmp
add
mov
jp
mov
mov
scas
lds
icebp
imul
in
pop
ljmp
push
sub
push
leave
xor
int3
out
cmp
ret
test
mov
fwait
inc
cmc
jbe
repz
cmp
aam
xor
mov
mov
jle
jmp
pop
mov
pop
adc
imulb
pop
mov
mov
push
push
sarl
fsubs
xchg
or
mov
loope
out
mov
std
xchg
test
pop
fdiv
mov
sbb
pop
clc
xor
sub
push
cmc
push
ja
popa
jo
enter
mov
lahf
out
mov
pop
rcll
xchg
jle
daa
loope
fsubs
xor
scas
jl
pop
in
in
sahf
test
test
xchg
cmpsl
jle
xchg
ss
jle
outsl
out
enter
das
mov
mov
shlb
sbb
add
dec
scas
movsl
pop
notb
add
addr16
dec
cmp
xor
scas
pushl
es
cmp
push
je
push
or
rcr
aas
in
mov
cli
gs
sub
jecxz
add
sahf
mov
or
rcll
out
sarb
dec
cli
pop
dec
pop
divb
adc
sub
cld
outsb
xchg
lcall
push
iret
adc
cmpsl
xor
xchg
mov
int
pop
adc
mov
repz
mov
idivl
pop
cltd
push
repnz
fucomip
mov
in
sbbb
jl
out
ret
popa
push
sub
mov
jne
shrl
call
lcall
pop
sub
ljmp
and
out
aam
or
push
adc
jp
sbb
xchg
mov
test
pop
adc
int
ret
cmp
and
idivb
sub
movl
movl
or
movl
sbb
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
bound
jle
jo
jle
ljmp
mov
xor
mov
pop
imul
bndstx
popa
inc
mov
jle
pop
jecxz
out
orb
pop
subl
push
inc
std
movsb
out
add
xchg
je
adc
lcall
jmp
jo
sub
fnsave
and
jmp
rcll
sub
subb
inc
mov
pop
je
in
xchg
or
out
outsb
mov
cld
pushf
jbe
or
cmp
pop
mov
push
insb
xchg
fsubl
lcall
inc
jns
inc
mov
push
jl
jne
jmp
fmull
xchg
cld
cmc
xlat
popf
jns
xlat
mov
scas
xchg
fwait
pop
inc
loopne
daa
fwait
js
shrl
std
out
and
sbb
mov
push
adc
inc
subl
out
and
mov
mov
add
sbb
sti
xchg
xchg
rcl
insl
repz
out
roll
xchg
out
les
arpl
mov
mov
mov
mov
insb
scas
sub
into
xchg
lds
cltd
xor
sbb
jl
and
dec
fisttpll
cmp
cmpsb
mov
int
loopne
jle
inc
jg
pop
inc
scas
jmp
pmuludq
push
add
inc
inc
add
test
jne
test
mov
add
cmp
fldenv
xor
jnp
jge
cmpsl
cmp
xor
jge
cmc
cmpsl
mov
outsl
lcall
jno
ret
xchg
push
stos
imul
xchg
ds
mov
mov
fcmovb
jns
jmp
and
sub
sub
adc
pop
daa
scas
mov
bound
jge
add
in
mov
and
add
dec
jnp
repnz
cwtl
wbinvd
mov
mov
gs
in
aam
pop
mov
test
push
ljmp
push
aad
sub
mov
inc
jo
scas
adc
out
dec
mov
data16
stos
push
mov
ljmp
push
mov
mov
push
stos
fldl
lods
in
daa
shrl
jg
test
pushf
inc
cmp
mov
mov
push
add
imul
jge
inc
or
mov
cmp
add
aaa
or
mov
loopne
dec
cmp
mov
mov
enter
in
cs
jecxz
inc
and
sti
arpl
outsl
loop
mov
mov
es
cmp
push
xor
lods
xor
or
add
fsubs
mov
push
imul
cmp
adc
jb
popa
vucomisd
push
pop
add
mov
lcall
aaa
loope
popa
enter
jl
adc
adc
je
or
rclb
push
ret
sub
dec
or
fdivrl
insl
add
mov
dec
sarl
andb
pop
cmpb
push
jle
into
jns
aaa
mov
clc
sub
dec
ljmp
mov
add
push
dec
cltd
lret
adc
xor
testl
push
jl
mov
subb
lret
and
mov
negb
imul
sbb
sub
in
fcoml
ljmp
cmc
sbb
push
mov
push
stos
pushf
mov
add
mov
sub
pop
rorb
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
sub
jle
jns
jle
mov
mov
repnz
in
or
push
xor
ret
adc
fidivrl
jb
orb
pop
adc
aad
jnp
pop
cs
fdivr
sub
stos
xchg
pop
adc
mov
mov
test
dec
sub
in
or
incb
mov
or
adc
jp
push
cmp
add
outsb
rclb
jne
and
adcb
bound
andb
mov
pop
popf
pusha
das
fsubrl
jbe
mov
jmp
mov
mov
add
popa
mov
jne
test
aaa
mov
jae
sub
cmpsb
xor
or
xchg
and
push
fsubrl
sub
mov
decl
test
pop
testl
jl
shll
fstps
hlt
adc
cmpsb
mov
and
pop
or
icebp
or
sbb
xor
pop
call
jae
out
mov
xchg
into
mov
in
repnz
test
sub
scas
xchg
xchg
fisttpl
mov
pop
lods
inc
sti
lret
shrb
jbe
and
pop
pusha
lock
fadds
xor
ret
add
pop
testl
lcall
push
pop
cs
mov
repz
mov
jmp
push
inc
stos
and
std
ret
dec
jl
std
ret
jge
repnz
stos
hlt
hlt
dec
loopne
adc
jnp
outsb
inc
xor
outsl
clc
out
insb
cmp
fidivl
mov
shrb
jo
push
arpl
jmp
mov
or
or
xlat
clc
xchg
ljmp
sbb
xor
repnz
xchg
mov
mov
leave
mov
jge
sub
js
in
jnp
fcomps
scas
rcrb
cmc
dec
lea
fisubrs
dec
out
je
scas
mov
scas
jge
cmpsb
xchg
mov
es
push
xchg
stc
popf
les
movsl
imul
mov
push
add
sti
lea
jnp,pn
rclb
xor
fwait
pop
lods
inc
cmp
jo
add
repz
sbb
add
sarb
inc
mov
inc
mov
pop
mov
mov
push
sbb
hlt
jnp
stc
int
fs
or
pop
fdivrs
ss
std
js
push
inc
pop
and
mov
movsb
arpl
mov
cs
mov
cs
xchg
sbb
xchg
xor
dec
stc
hlt
push
shrb
inc
pop
and
subl
xor
shlb
repnz
jle
or
xchg
roll
add
mov
mov
sbb
mov
add
cs
mov
xlat
sar
lcall
ja
xchg
xlat
sub
insb
dec
rcr
jge
std
mov
mov
cs
aas
adc
or
test
incl
cmpb
sbb
into
cwtl
hlt
inc
cld
pop
sti
js
out
push
cmp
xchg
aad
push
test
enter
out
out
pop
jg
mov
fsubrs
scas
cmp
imul
cld
out
mov
cltd
pop
adc
push
aas
pop
fidivrs
push
clc
test
cmp
xor
push
enter
adc
mov
mov
sub
sub
into
xor
movsl
xor
ljmp
shrb
insl
loope
xchg
cwtl
sbb
inc
adc
lcall
add
loopne
cwtl
push
sarb
cmpsl
stc
aam
add
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
pop
xor
idiv
jle
jo
jle
xor
sub
xlat
out
push
je
and
sar
fcmovnu
cmp
pop
or
cmp
xchg
sbb
jmp
ja
mov
fwait
scas
dec
js
test
into
xor
xchg
xchg
scas
inc
imul
nop
jnp
flds
push
mov
or
push
ret
inc
mov
lcall
sarb
fidivrl
loopne
shrl
mov
sarb
clc
mov
xor
lcall
inc
scas
and
mov
xchg
testl
fstps
arpl
psubsb
mov
mov
mov
jnp
pop
arpl
sbb
jg
inc
jne
inc
jg
jmp
xor
cld
ljmp
aaa
jmp
push
popa
ss
inc
sub
mov
inc
inc
repz
xlat
jnp
shll
ds
test
xchg
and
dec
sub
cmpsb
or
je
fwait
ss
gs
cmp
test
rcl
dec
mov
jb
jmp
xor
jnp
xor
cmp
xchg
pop
insl
outsl
inc
or
xchg
xor
xchg
and
js
jbe
or
xor
mov
fimull
pop
or
dec
adc
ret
sbb
jmp
and
mov
xor
scas
inc
inc
iret
mov
pushf
lods
jo
aas
sbb
ss
out
mov
daa
xchg
push
ss
xor
nop
stc
cmp
loop
fs
pusha
js
sub
outsl
and
call
push
outsb
cltd
mov
cmpsl
sbb
stos
inc
nop
cs
jb
jge
mov
lods
inc
loop
or
xor
adc
aas
cmp
jns
add
fstps
call
push
pop
inc
insl
cmp
push
aaa
cmp
sbb
inc
sub
sbb
adc
mov
cwtl
dec
jbe
int3
aad
js
xor
sbb
jecxz
mov
rol
imul
adc
lea
pop
repnz
pop
xor
jo
int
dec
mov
jg
ret
jo
stos
adc
push
and
cmp
inc
test
das
lods
lods
jns
dec
into
hlt
not
inc
dec
mov
cmpsb
inc
pushf
add
subb
push
popa
mov
mov
out
and
lret
mov
or
push
popf
mov
add
loope
lods
inc
enter
mov
or
icebp
jns
aam
cltd
mov
jmp
jne
in
xor
sbb
mov
mov
jb
dec
pushf
cmpsl
insb
xchg
out
ja
in
fstl
push
iret
mov
adc
int3
and
sti
fwait
daa
les
or
hlt
push
in
scas
mov
and
mov
sbb
sub
jbe
sub
repz
or
lods
ds
icebp
and
dec
movsl
std
cmp
idivb
pop
xor
mov
aas
in
notb
popa
sub
adc
jecxz
adc
das
ficoml
fcmovnbe
inc
inc
cltd
fwait
xchg
dec
sub
cltd
pop
push
clc
mov
mov
pop
adc
pop
mov
insl
xor
xchg
mov
or
or
xchg
jne
jbe
inc
adc
imul
negl
and
jae
add
aam
bound
and
pop
adcb
movsl
jae
scas
les
mov
push
fsubr
je
popa
nop
fwait
push
lret
mov
mov
aaa
sub
data16
pop
fidivl
push
sub
mov
sub
adc
testl
repz
scas
dec
mov
fcmovnu
inc
subl
xchg
fdivrs
rcrl
push
aas
sbb
jno
pop
ss
xchg
sub
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
call
jle
jo
jle
into
insl
pop
and
mov
jno,pt
jecxz
call
sub
jne
cwtl
push
add
sub
push
fs
push
rolb
das
cmpsb
xchg
xor
xor
xor
mov
neg
xchg
or
in
adc
mov
iret
addb
shll
imul
rol
inc
mov
sti
jns
lret
add
mov
jns
xchg
fsubs
mov
ljmp
adc
jmp
int
dec
enter
pushf
cmovg
and
xor
mov
inc
cmc
mov
call
or
fwait
clc
sbb
mov
insl
cmp
fisubs
or
adc
or
fs
lret
dec
mov
xor
xor
fstl
enter
nop
fidivs
push
fcoml
push
ja
arpl
mov
cmp
sub
mov
mov
dec
xor
pop
fs
push
pop
add
xlat
imul
shll
mov
xchg
push
xor
add
inc
mov
dec
cmp
and
jne
bswap
cwtl
or
gs
lds
sbb
and
enter
insb
int
nop
sub
cmp
sub
sbb
xchg
sbb
inc
pop
shlb
std
sbb
loope
imul
sahf
sbb
mov
mov
sbb
mov
das
lods
arpl
imul
sub
jp
jae
fsts
push
test
add
int3
testl
and
jns
dec
pop
fcompl
xchg
or
mov
mov
shrl
fldenv
mov
scas
dec
js
mov
cmpsl
push
bnd
faddp
rorl
cmpsb
stos
mov
adc
sti
inc
imul
push
pop
xchg
cmpb
sub
imul
pop
mov
cmpsb
jns
mov
mov
mov
cmp
jle
js
mov
adc
mov
push
cs
nop
js
std
mov
insl
push
pop
sub
xchg
fistps
mov
mov
adc
fisubs
ret
push
jo
cmp
lret
xchg
xchg
push
cmp
cmp
cmc
mov
fdivrl
sbb
xor
imul
inc
mov
cmc
repz
push
mov
lret
sti
jl
jp
mov
pop
add
push
fs
dec
jmp
xor
add
stos
addl
data16
mov
mov
je
out
xchg
jle
and
pop
xor
es
sub
popf
mov
in
inc
leave
push
xor
adc
xor
sub
arpl
out
cmpsl
push
std
mov
mov
icebp
mov
mov
mov
push
cmp
push
jge
jbe
dec
pop
lock
xchg
and
sub
adc
aad
inc
push
divb
insl
sub
daa
xchg
sti
icebp
js
iret
jb
xchg
push
sbb
mov
mov
and
mov
jns
aas
jl
imul
vphaddbd
jl
sbbl
loop
jecxz
fdecstp
pop
fnstsw
push
das
cmpsl
pop
mov
adc
mov
data16
lods
pop
sub
push
sub
inc
push
inc
ss
mov
out
sbb
lahf
notl
mov
scas
mov
jl
mov
ret
fcomi
adc
push
push
lahf
inc
cli
add
inc
arpl
imul
enter
xor
xor
jg
pop
fwait
pushf
inc
mov
hlt
or
sbb
fimull
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
imul
jle
jns
jle
test
mov
js
mov
sahf
test
inc
push
sahf
push
scas
cmp
jge
ret
int3
dec
je
push
push
push
out
cmpsb
nop
idivl
mov
jbe
dec
les
mov
enter
in
push
pop
gs
mov
testb
xor
or
frstor
sbb
jo
xchg
pop
lret
mulb
in
cld
mov
push
and
mov
ficomps
aam
mov
inc
pushf
mov
fildll
aam
and
mov
or
push
xchg
scas
dec
mov
lret
lret
cmp
adc
push
fistl
ret
mov
inc
adc
call
sbb
xor
mov
stos
std
lods
lea
pop
loop
xchg
addr16
mov
add
adc
jb
and
inc
sarb
xchg
mov
inc
mov
arpl
pushw
jmp
mov
push
inc
adc
fidivs
js
imul
push
fistpll
cmp
repnz
pop
push
pop
scas
adc
or
scas
dec
incl
dec
jae
add
lcall
push
jg
jle
sub
aam
insb
outsb
mov
jbe
xor
scas
rcrl
push
stos
pop
xchg
enter
decl
xchg
push
lcall
ret
imul
les
and
es
leave
push
sbb
xor
popf
repz
jecxz
adc
out
add
test
lock
insb
aam
insb
push
jnp
inc
daa
divl
pop
lahf
test
xchg
ficoms
xchg
sbb
fdivs
loop
call
and
ss
pop
shlb
lret
mov
notb
es
adc
stos
adc
jge
xchg
repz
dec
inc
shll
insb
cmp
sahf
stc
mov
lock
mov
pop
pop
scas
scas
push
sbb
ljmp
stos
in
dec
sarb
or
cmp
lock
add
push
aad
clc
lods
outsb
sbb
fs
jne
in
jp
xchg
sbb
movl
stc
jno
xor
popf
pop
mov
sbb
inc
jecxz
adc
ret
sbb
or
lret
fmuls
xchg
xor
into
xlat
fmul
insl
and
adc
aaa
dec
and
mov
dec
jl
and
sti
mov
insl
sbb
jno
jno
adc
mov
std
jmp
addb
xlat
sarb
cmpl
movsb
addr16
xchg
or
popf
lods
aam
inc
fists
repz
xor
out
push
aaa
outsb
jb
inc
mov
outsb
or
lods
sarl
js
andl
dec
dec
int3
addr16
mov
in
jo
int3
scas
addb
iret
divl
mov
pop
arpl
push
in
dec
out
jo
jle
sbb
xchg
pop
lods
outsb
outsb
cwtl
mov
sub
arpl
sbb
je
cli
push
or
pop
out
lea
jle
ficompl
mov
sbb
cwtl
sbb
cmp
fdivrl
es
mov
xchg
xor
loope
dec
push
fistl
shrl
mov
mov
mov
dec
mov
cmc
push
lcall
inc
push
jo
xchg
jne
cltd
and
cs
jnp
sub
fadd
pop
mov
inc
shll
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
xor
adc
in
jle
jo
jle
mov
aad
sti
jnp
inc
orl
loopne
inc
je
movsb
sub
cmp
cmpsl
mov
adc
js
lods
sti
dec
arpl
xchg
outsl
hlt
mov
popa
addr16
insl
push
mov
je
and
sub
mov
jl
push
adc
mov
in
and
jns
cmp
jecxz
rorl
mov
inc
movl
test
add
mov
xchg
sti
add
cltd
call
sbb
xchg
lods
shll
mov
mov
scas
fld
and
mov
subb
pop
jle
cmpsb
push
mov
dec
cli
fisttpll
cmpsl
add
dec
clc
insb
or
rolb
pushf
inc
enter
push
cmp
mov
iret
movsl
add
mov
fwait
push
mov
imul
cwtl
clc
inc
mov
test
jnp
pop
mov
divl
loopne
stos
sub
stos
shlb
or
jne
sbb
outsl
dec
cmp
loope
push
add
stos
lahf
aam
pop
dec
dec
shll
sbb
fdivs
ret
jmp
dec
fiaddl
jo
out
xchg
sub
lods
and
enter
jae
imul
lahf
cmp
int3
adc
mov
pop
xchg
dec
stos
aam
cmp
pop
pop
lea
mov
repnz
or
leave
std
adc
mov
outsb
pop
les
es
fimull
clc
pop
and
pop
iret
adc
icebp
ljmp
incb
jbe
push
or
sub
adc
adc
mov
dec
push
xor
js
xchg
adc
inc
sahf
sub
lods
cwtl
mov
mov
sbb
pop
es
fidivrl
jbe
add
nop
cmp
dec
inc
icebp
xor
loopne
aam
imul
mov
fdivrp
scas
push
ds
adc
iret
sub
pop
subps
imul
in
repnz
inc
das
xchg
pushf
mov
das
int
pop
push
add
inc
dec
jne
lock
xor
daa
stos
and
jecxz
xchg
fstpt
lar
add
push
mov
jl
cmp
les
sbb
mov
addr16
lahf
pop
leave
fcmovne
cmp
xchg
pop
orb
lods
or
add
inc
cmp
xor
pushf
cmp
xorl
sub
fsts
cwtl
adc
pop
lret
in
mov
je
add
or
mov
dec
popf
ds
repnz
adc
add
mov
lods
xlat
pop
pop
mov
push
std
into
dec
jp
dec
pop
pop
ret
cmp
xor
mov
sub
lret
adc
push
shrb
sahf
or
orb
iret
sahf
pushf
mov
insl
mov
or
push
fcmovnb
sbb
or
cwtl
ss
cmp
aam
in
pop
jns
lret
cmp
movsl
fidivl
or
stos
stos
lock
aaa
int3
or
xchg
dec
xchg
call
sahf
sarb
lea
jnp
call
js
xor
gs
mov
sti
jge
mov
sahf
sarl
sbb
mov
fimull
xor
cmp
rcrb
and
adc
cmp
pop
ss
scas
dec
xor
and
pop
aam
lods
fdivp
mov
enter
cmpsl
enter
fldenv
fisttps
dec
daa
imul
pop
mov
mov
jmp
cmp
dec
mov
rorb
mov
jo
jle
cs
cli
mov
dec
sbb
sub
mov
inc
push
xchg
xchg
push
mov
bound
in
ja
sbb
jo
cmp
pop
inc
mov
icebp
das
aad
lret
ret
lret
xor
jecxz
stc
push
adc
mov
add
jmp
xchg
ds
out
inc
je
pop
dec
xchg
dec
push
sbb
outsl
dec
or
pop
mov
mov
mov
dec
push
aas
mov
mov
punpcklwd
cmpsb
call
inc
insl
ret
scas
jbe
mov
loopne
pop
mov
out
call
pop
xchg
je
sti
push
roll
inc
jge
push
jae
or
pushf
dec
push
cmpsb
sub
mov
xchg
mov
stos
and
psraw
stc
inc
mov
lret
lahf
mov
add
jne
mov
pmullw
sub
or
ljmp
pop
lcall
lea
adc
lahf
sbb
lahf
xchg
mov
push
jns
loope
adc
das
test
or
jp
movsb
mov
add
push
movsl
sub
push
sub
mov
stos
aad
pop
cs
es
mov
test
popa
lock
fucomp
or
hlt
imulb
loopne
enter
outsb
and
dec
cwtl
mov
or
shlb
testb
lret
sub
inc
pop
popa
cld
pop
sbb
outsb
nop
adcb
xchg
jo
sahf
mov
dec
js
cmp
insb
andl
or
addr16
nop
je
fs
cmp
xchg
movsb
and
aas
or
rcrb
fiaddl
pop
movsb
push
mov
adc
pop
cmp
sbb
outsl
jne
add
js
mov
mov
fsubrl
mov
push
jnp
lcall
xchg
mov
imul
sbb
sub
inc
adc
mov
and
mov
jg
mov
xchg
lret
mov
mov
scas
outsl
add
sbb
dec
fidivrl
fidivrs
and
nop
rorb
frstor
sbb
adc
sbb
lcall
imul
push
adc
adc
icebp
cmpsb
dec
and
shll
pop
pop
out
insl
inc
jmp
aad
sti
jge
fs
jecxz
mov
popf
popl
imul
jge
pusha
sahf
adc
pushw
icebp
sub
popa
add
adc
add
fcompl
mov
jae
pop
push
insl
mov
xchg
pop
iret
popa
jecxz
jb
adc
imul
xor
fidivl
rcll
add
nop
pop
outsl
outsb
adc
xlat
adc
into
push
scas
sub
jecxz
xchg
rolb
pop
mov
lods
and
and
dec
inc
shll
mov
enter
add
push
pop
lock
inc
shll
pusha
jno
hlt
lods
xor
and
cmpsl
rcrb
pop
cmp
pop
add
sbb
mov
enter
cwtl
cltd
and
or
in
aas
mov
inc
rcrl
ret
popa
xor
fstl
les
cmp
sbb
xchg
sbb
mov
ficoms
pop
addr16
les
sbb
jmp
jp
test
mov
andb
fwait
popa
cmpsl
sahf
clc
cmp
jae
push
int3
push
mov
cmp
js
sub
jb
hlt
push
stos
mov
imul
sbb
pop
or
or
roll
mov
inc
lods
ss
xchg
sbb
mov
push
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
push
sbb
jle
jo
jle
hlt
sub
mov
shlb
ja
push
and
aaa
mov
push
adc
xchg
loop
ficomps
xchg
or
fnstenv
mov
cmpl
xor
sbb
pop
jg
jge
sbb
scas
lret
cmp
push
gs
cli
dec
imul
out
ja
mov
xorl
sbb
add
ds
ror
enter
mov
je
gs
mov
inc
pop
mov
dec
stc
js
rolb
xor
adc
pushf
pop
cmc
sbb
out
or
lods
insl
fdivl
fwait
fisubs
push
jge
xor
icebp
inc
mov
dec
mov
push
cmpsb
mov
mov
fistl
inc
xlat
fcmovnu
nop
jno
movsl
mov
xchg
loope
and
mov
mov
xchg
jmp
mov
out
icebp
fadds
in
push
mov
incb
out
aaa
icebp
or
mov
pop
ror
jp
mov
mov
jle
push
test
sub
sahf
and
outsl
push
pop
lods
mov
cmc
sbb
shr
mov
mov
mov
jle
jno
sub
cltd
push
mov
inc
repz
jmp
std
xor
inc
lret
jb
inc
cmpsl
stos
std
ljmp
pop
inc
in
fidivs
scas
mov
pop
loop
cld
inc
lods
adcb
outsl
dec
pop
mov
xor
mov
jecxz
mov
fnsave
fsubrs
popf
mov
outsb
mov
das
cmp
mov
xor
push
add
push
sub
mov
ss
dec
xor
pop
or
xchg
idivl
aas
cmp
test
cmp
aaa
mov
incb
push
mov
push
xlat
push
adcl
scas
aaa
mov
les
smsw
push
inc
xchg
cmp
int
add
lahf
mov
jns
and
and
test
movsl
inc
gs
add
adc
movsl
mov
jnp
inc
and
lods
mov
sti
pop
push
jmp
lret
dec
mov
into
adcl
mov
loopne
aam
jmp
in
enter
mov
sti
int3
mov
cmpsl
aam
enter
scas
std
fs
insl
xchg
jb
cltd
adc
movsb
lea
push
sbb
call
fsubl
and
pop
aam
scas
out
mov
insb
aam
stc
xchg
xorl
sahf
xchg
lods
ret
mov
xlat
jmp
push
gs
xlat
call
dec
daa
inc
test
sarl
xchg
adc
sub
pop
jae
mov
sbbb
mov
dec
aam
mov
jo
add
imul
adcl
ljmp
and
mov
jne
sti
add
ret
cltd
mov
enter
mov
jae
adc
xchg
cltd
push
pusha
mov
jecxz
mov
mov
loope
sbb
adc
mov
mov
das
pushf
push
adc
adc
nopl
mov
pop
rolb
cwtl
mov
aad
das
mov
jo
inc
les
testl
nop
pop
and
aam
xor
adc
inc
cs
dec
popf
push
push
and
cmp
sub
nop
lods
sbb
in
in
enter
lds
lcall
data16
xor
cli
dec
call
jno
inc
lret
lret
cmp
dec
jnp
cmp
or
lods
add
pop
sbb
cmp
outsl
rorb
xor
ret
dec
lock
shrl
repnz
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
phsubd
jle
jns
jle
stos
inc
inc
je
xlat
push
ja
sti
xchg
dec
ja
jb
pushf
mov
mov
push
push
cs
xlat
aam
loope
lods
push
push
call
test
orb
int3
push
cltd
test
hlt
xor
arpl
mov
push
testb
in
popa
out
in
decb
sub
je
mov
stc
or
imul
pop
xor
shlb
push
mov
rorl
aad
mov
fadds
push
jno
lahf
add
jns
pop
lcall
pop
jns
subl
sub
ret
mov
int
leave
jp
or
aas
jl
mov
movsl
lods
jno
test
inc
in
xchg
dec
mov
mov
mov
mov
pop
xchg
xchg
mov
lock
hlt
in
xchg
mov
or
sub
add
jbe
inc
push
ds
stos
dec
ficomps
into
scas
arpl
pop
addr16
or
mov
test
xor
or
push
test
mov
sarb
mov
and
and
std
cmp
pop
cld
push
enter
lahf
pop
mov
and
xchg
arpl
xor
xchg
mov
and
push
in
arpl
adc
out
mov
inc
shl
cmpl
lds
in
adc
push
imul
scas
xchg
mov
cwtl
cmc
roll
fistl
xchg
test
pushf
inc
or
adc
jnp
xor
gs
jge
cmp
fstl
dec
lcall
jg
in
das
jecxz
xor
in
push
seta
push
and
fdivs
int
xor
popl
add
xor
mov
lock
xor
mov
lret
into
nop
gs
pop
sbb
push
dec
sbb
pop
add
pop
out
push
mov
inc
aad
sub
pop
movsb
mov
into
sti
fildll
jmp
in
dec
jo
xchg
mov
or
mov
cmp
xchg
mov
les
pop
aam
test
imul
add
mov
jno
cld
mov
jne
push
cmp
lock
mov
and
decb
js
les
xor
push
jns
sar
js
add
cld
vpmaddwd
push
mov
stc
call
dec
jmp
cmp
add
fisubs
lods
rcl
cld
or
and
stc
sbb
sbb
or
testl
mulb
cmpsl
mov
shl
and
scas
or
mov
nop
and
das
dec
sahf
add
sub
mov
mov
jp
mov
xor
pop
stc
xor
xor
je
ret
repnz
xchg
dec
mov
aam
daa
lahf
cmp
push
jp
mov
aas
nop
adc
sub
pop
lretw
call
push
mov
hlt
mov
cmp
pop
cmp
lcall
mov
ljmp
dec
mov
lcall
negb
flds
adc
adc
pop
outsl
mov
jmp
pop
push
cltd
mov
cmp
daa
jge
stos
shl
into
xchg
int3
xor
adc
xchg
lock
or
add
push
xchg
daa
cmpsb
pop
js
pop
int3
in
test
push
or
adc
inc
and
add
ds
pushl
jmp
adcl
sti
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
adc
sahf
jle
jo
jle
push
add
imul
sbb
scas
sub
cmp
mov
outsb
scas
and
dec
push
out
or
sbb
scas
insl
xor
clc
addb
push
dec
sbb
ss
jl
aam
add
add
stc
mov
inc
mov
shll
into
xor
mov
mov
add
mov
mov
pop
and
not
ds
insb
and
dec
dec
mov
inc
stos
pusha
inc
push
push
fldl2e
repnz
lods
sub
ljmp
xor
push
push
xor
mov
xlat
push
fsts
sbbb
mov
mov
xor
stos
lret
mov
mov
shl
arpl
jmp
cmpsl
bound
je
sbb
jge
aas
xor
ja
data16
mov
push
xor
xorl
sub
push
daa
mov
cmpsb
aam
js
push
xor
jp
inc
incl
hlt
loopne
adc
mov
xchg
push
inc
stos
sbb
xor
add
cld
jb
scas
outsb
push
dec
mov
lcall
mov
sarb
lods
mov
mov
aam
dec
adc
ret
inc
push
loope
andl
adc
out
loope
fldenv
mov
cld
js
daa
lods
and
pop
cs
lret
mov
push
popa
pop
cmp
push
insl
cltd
add
lea
xor
pop
push
cwtl
add
fcompl
cli
andb
shrb
test
dec
sbb
and
sbb
out
dec
push
mov
jge
cmp
das
fwait
dec
cld
cmp
daa
filds
ljmp
out
jns
mov
push
pop
into
aad
jecxz
ss
pop
popa
pop
cmp
and
movsl
lcall
mov
dec
cmp
pop
sbb
push
pop
ficoms
lahf
push
sub
mov
jb
movsl
inc
adc
into
fildl
pop
inc
xchg
lods
push
shrl
push
imul
sub
cmp
and
scas
sub
leave
mov
mov
les
add
mov
ret
adc
in
clc
dec
movsb
xor
mov
adc
pop
cli
fistpll
fcoml
mov
testl
xor
pushf
pop
ss
jne
sbb
push
movsb
outsl
fsubrs
dec
xor
iret
fwait
add
insl
push
xor
les
shlb
xchg
dec
pop
sub
int3
loopne
inc
gs
xchg
ja
mov
dec
test
je
popf
lods
shr
adc
or
push
jns
push
mov
mov
push
cmpsl
fmuls
and
rolb
rep
je
cli
test
mov
int3
cmp
mov
out
fmuls
hlt
xlat
repz
out
adc
xor
mov
jb
mov
cli
push
xchg
push
jbe
push
xchg
pusha
mov
sbb
insb
add
lcall
sar
or
hlt
xor
push
sub
push
arpl
add
pop
out
mov
or
jne
inc
out
stos
cld
add
jae
shll
frstor
push
pop
adc
dec
sub
leave
insb
jg
jecxz
inc
sbb
js
push
pop
dec
push
adc
inc
fsubs
jbe
leave
mov
mov
add
pop
nop
movsl
dec
outsb
dec
cld
loope
mov
das
and
test
cmp
cmpsl
pop
pop
shll
imul
jmp
push
dec
push
cmc
xor
dec
jge
aam
inc
pop
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
jecxz
sbb
lcall
or
adc
sub
inc
pushf
mov
mov
xor
pop
or
jno
mov
pusha
jb
dec
mov
into
xchg
cmp
cmp
xchg
mov
push
jecxz
cli
xchg
or
xchg
std
imul
push
bound
ds
dec
popa
aas
push
xor
pusha
stos
mov
test
in
mov
xchg
test
loop
imul
sbb
pop
dec
loop
adc
pop
cmp
daa
fdivl
xchg
and
and
mov
xchg
leave
out
out
cmp
loop
aad
loope
xchg
data16
sbb
and
int3
xor
lds
dec
adc
andl
mov
idivl
iret
lods
cli
push
in
push
aad
xorb
shlb
adc
mov
jle
mov
mov
sbb
dec
ret
or
jg
jo
sbb
out
lds
bnd
cmp
sub
mov
push
inc
fwait
mov
bound
push
ljmp
arpl
mov
push
lret
mov
push
dec
sub
sbb
mov
or
out
cs
sahf
adc
push
outsb
fisttpl
or
movl
mov
push
dec
int
call
xchg
mov
add
shrb
dec
jns
jbe
clc
rep
mov
imul
insl
int3
cmpsb
popa
ret
jno
dec
adc
mov
js
sbb
mov
in
jno
jge
in
inc
push
subb
inc
cmpsb
pop
cli
adc
xchg
sbb
mov
mov
jg
xchg
mov
pop
sub
jmp
adc
cld
adc
mov
ja
loopne
mov
out
inc
ljmp
and
push
xor
mov
xorl
scas
pushf
and
cmp
stos
rorl
lret
adc
xchg
stos
fistpll
or
jno
stc
stc
push
out
mov
inc
and
sub
adc
mov
int
lret
bound
sub
mov
push
cmc
sbb
mov
and
mov
aam
js
jb
sub
cmpsl
add
sub
cmp
out
jp
std
or
dec
mov
and
sbb
or
lret
call
jno
xchg
or
fldcw
mov
inc
push
push
lock
push
adc
mov
inc
push
adc
push
mov
mov
js
bound
rcll
mov
jns
xchg
push
mov
rcrb
out
mov
into
subb
mov
testl
push
sbb
mov
mov
xchg
mov
lret
subl
mov
mov
add
lret
push
pusha
cmp
push
sbb
or
cltd
mov
pusha
or
int
ret
fcmovnbe
sbb
sti
sti
mov
scas
fsubr
jle
es
jnp
movsb
cld
loope
cmp
push
lods
cmpsl
mov
and
xchg
pusha
mov
scas
add
aas
dec
xor
jne
jo
in
sub
out
clc
mov
dec
and
loope
sahf
loope
cwtl
int3
xchg
mov
movsb
mov
arpl
dec
and
pmullw
sbb
outsb
pop
sahf
add
adc
jge
std
testl
dec
rorl
scas
jb
outsb
mov
mov
pusha
mov
mov
fwait
leave
pop
dec
ljmp
out
and
and
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
sti
cmp
jle
ds
sbb
ret
stc
ja
push
cmc
push
xchg
xor
dec
lret
mov
sti
inc
outsb
xchg
add
repz
add
mov
xchg
loope
mov
adc
fsubl
dec
testb
ret
cmpsb
mov
dec
lahf
shll
push
stos
sahf
jge
xchg
cli
xor
test
xor
push
inc
loop
mov
fiaddl
ret
sti
xchg
mov
iret
test
pushf
or
or
mov
inc
incl
ret
xchg
outsl
cld
inc
sub
mov
or
sbb
cmp
mov
jne
push
and
adc
sti
icebp
fdiv
and
ja
inc
add
mov
out
seto
pop
inc
mov
mov
leave
mov
pop
or
aas
imul
leave
push
or
or
adc
cwtl
sub
sar
enter
out
jae
sbb
inc
aas
lods
cltd
mov
cltd
aaa
outsl
add
les
repz
push
lret
sbb
add
push
lret
xor
adc
dec
or
outsl
shrb
sub
add
jmp
aas
repz
jg
sub
mov
addr16
loope
adcb
out
pop
lahf
addr16
shrb
ret
jbe
pop
out
xor
pushf
ss
or
in
test
dec
inc
cwtl
sub
mov
rorb
out
inc
cmp
andb
int3
dec
ss
push
and
sahf
aam
mov
arpl
xor
pop
std
push
pop
dec
xchg
lea
call
mov
int
xchg
and
cmp
fisubrl
inc
jae
push
stc
cwtl
push
daa
mov
hlt
jg
jno
xorb
inc
mov
cmpsb
add
jnp
fimuls
mov
jo
dec
xchg
stos
shl
subl
arpl
cmpsb
and
sbb
nop
cmp
les
and
xor
pusha
pushf
mov
imul
push
jno
std
cmp
aam
into
jl
mov
repz
mov
das
dec
jns
arpl
mov
ljmp
xchg
mov
out
iret
mov
mov
es
sub
outsb
xchg
dec
pop
icebp
es
in
mov
test
cmc
xlat
jg
jae
roll
and
push
inc
cmp
push
adc
mov
mov
xor
fimuls
outsb
fmul
pop
inc
shlb
pusha
nop
nop
popa
loope
push
xchg
lahf
js
int
pushf
sub
ss
add
sub
je
subb
ds
mov
adcb
and
fwait
jg
adc
push
leave
xchg
rorl
imul
ret
gs
dec
shrl
mov
push
pusha
jns
sbb
dec
test
add
inc
in
and
outsl
hlt
mov
jle
xchg
mov
mov
jae
mov
xor
add
push
sub
xor
cltd
stos
btr
out
xchg
pop
inc
push
mov
pop
outsb
mov
arpl
aam
ds
cmp
mov
ja
push
adc
jno
bound
push
jp
fstps
or
adc
jmp
xchg
ja
xchg
sbb
mov
fucomp
dec
jnp
adc
or
idivb
shrl
and
negl
loop
push
stc
stos
add
jle
jnp
clc
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
inc
rcrl
jle
jo
jle
xchg
push
rcrb
out
into
mov
mov
adc
in
fsubs
push
or
and
push
mov
xlat
jecxz
fdivr
cld
jbe
aaa
mov
push
push
out
pop
pop
mov
sub
shlb
mov
out
inc
xor
fmuls
push
mov
rclb
jge
xor
dec
inc
ror
clc
mov
sub
inc
mov
and
sub
fistpl
push
pushf
out
dec
mov
inc
out
icebp
cmc
inc
xchg
test
xlat
not
mov
testb
mov
jnp
gs
mov
mov
dec
jae
cmp
bound
sbb
dec
dec
std
popf
pushf
int
lret
or
les
xor
lds
cmc
mov
mov
lcall
sbb
sub
lods
adc
dec
in
iret
out
push
mov
sub
sbbl
imul
outsl
out
notl
mov
and
cmp
and
addr16
xor
movsl
mov
pop
xchg
mov
lods
out
jmp
mov
loope
pop
xor
aaa
mov
cs
push
cmp
or
cli
rclb
int3
lock
add
inc
xor
popf
ss
sub
mov
jnp
jl
loop
or
ret
xor
inc
cli
jns
push
out
outsb
cmp
mov
xchg
dec
and
xchg
and
lcall
pop
pop
xor
lcall
iret
xor
test
mov
sub
jbe
inc
push
mov
dec
xchg
cmpsl
xorl
jns
stos
rcrb
ficompl
in
pop
int
push
sub
cltd
cmp
in
lock
rcrl
mov
lret
push
mov
mov
sub
lds
dec
pop
nop
iret
in
inc
test
push
push
icebp
push
pop
les
or
shll
sbb
dec
cmp
in
stos
out
push
jmp
sarl
xor
pusha
mov
insb
clc
in
fwait
xor
stos
mov
push
test
loopne
or
adc
push
scas
stos
cli
sub
inc
mov
dec
hlt
jnp
jns
push
insl
mov
pop
push
hlt
add
aas
enter
fs
cmovs
and
push
in
out
push
jae
mov
xor
cwtl
pop
jo
xlat
cmp
je
push
clc
enter
in
or
pop
cmp
jp
mov
pop
mov
stos
dec
iret
cwtl
pop
addb
roll
int
mov
in
ds
lret
push
inc
mov
ficoms
testb
rcrl
frstor
insb
and
push
dec
cmp
enter
push
xor
xchg
sub
mov
mov
or
jmp
fdiv
sbb
and
xchg
mov
jge
push
and
push
lea
and
addb
shrb
sub
stc
aad
lahf
out
clc
jnp
sbb
iret
cmp
pop
cmp
xor
fisubl
in
push
cwtl
test
cmc
push
mov
jo
imul
and
lret
inc
popa
loopne
in
je
inc
repnz
incb
xor
push
pop
aam
mov
ret
sub
push
push
orb
dec
ret
and
or
mov
mull
add
add
jmp
jg
out
sub
mov
pop
push
mov
pushf
push
aam
push
jae
dec
and
jecxz
xchg
std
push
pop
ljmp
loopne
sarb
jmp
sahf
lcall
adc
and
and
lea
scas
jle
jo
jle
ret
divb
movsb
insl
xor
out
mov
mov
fdivs
lods
mov
or
xchg
imul
clc
lret
xchg
mov
jmp
sbb
mov
sub
push
insl
and
addl
pusha
in
shrb
jb
ss
jne
mov
cld
cmp
mov
push
insl
data16
cmpsl
sub
shr
inc
rcrb
sub
xor
xlat
notl
scas
push
jg
stc
dec
in
aaa
popa
loop
mov
xchg
push
push
or
hlt
jo
add
xchg
pop
xchg
mov
or
mov
out
fsubl
cld
mov
ds
lcall
das
ds
pop
pop
xor
aad
das
xchg
aam
ljmp
and
stos
pop
lret
shrd
and
xor
pop
test
sbb
pop
enter
imul
fs
data16
subb
sahf
pushf
insb
pop
mov
outsb
push
xor
arpl
push
ljmp
pusha
xor
and
mov
mov
movhps
mov
mov
jns
fstp
imul
negl
xchg
mov
jne
mov
xor
into
mov
clc
mov
outsb
pop
jo
mov
aaa
dec
negl
mov
xchg
pusha
pop
sahf
mov
lea
push
inc
mov
data16
ja
mov
pop
stos
in
gs
dec
inc
xchg
sbbb
in
mov
lock
leave
repz
jmp
xchg
movsb
sarl
ror
aad
jl
jle
ret
mov
rep
cvtps2pi
stos
mov
inc
out
ljmp
dec
dec
cmp
mov
xor
insl
pop
imul
lcall
mov
out
in
xchg
ret
fsub
lea
or
push
inc
cltd
dec
in
dec
mov
add
pop
inc
xor
and
dec
adc
pop
out
xchg
in
fildll
pop
test
mov
push
push
ljmp
lock
pop
sar
sub
ret
jmp
stos
jns
int
sub
pusha
jno
mov
mov
push
leave
fwait
sbbl
push
mov
sbb
cmp
gs
pop
mov
ret
inc
mov
cmp
xchg
and
arpl
add
mov
fs
xchg
dec
mov
repnz
jae
sbb
push
sbb
call
mov
add
aas
fildl
sbb
jo
and
cmpl
sbb
push
insb
loopne
inc
ljmp
pop
lret
int3
enter
inc
fsubs
iret
popa
sub
xor
ljmp
inc
les
lods
inc
in
out
movsl
movsb
cmp
dec
fwait
dec
loope
flds
cmp
and
mov
es
push
lods
dec
or
cmp
add
fmul
pop
cmp
xchg
scas
cmc
fs
adc
imul
ror
xchg
gs
out
sub
or
pushl
addr16
decb
xchg
sub
inc
pop
idivb
loopne
sbb
cmpsl
sti
fildl
adc
aad
mov
or
jle
pop
push
xchg
add
popf
xor
cli
xchg
pop
outsl
nop
pop
rcll
push
mov
je
or
pop
pop
ja
sub
loopne
jmp
cmp
or
cmp
add
dec
testb
int3
fcompl
sub
imul
fwait
xor
xor
test
clc
adcl
out
mov
loop
mov
xchg
mov
lret
pop
test
pushf
pusha
addb
mov
jb
in
mov
and
gs
cltd
in
xor
inc
in
pop
fwait
mov
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
fstpt
cs
jle
jo
jle
mov
cli
jbe
mov
cmpsb
sub
or
mov
sbb
repz
add
loop
dec
test
ja
pop
push
insb
push
and
sti
dec
jle
mov
xchg
cwtl
les
stos
pusha
scas
sub
push
push
pop
sahf
rolb
cmpsl
cli
jmp
mov
cwtl
sti
outsl
pop
mov
ja
test
add
add
and
enter
pop
loope
xchg
add
fmul
inc
ror
fcoml
push
mov
and
aaa
lea
or
fnstsw
mov
jns
mov
dec
cwtl
cmp
adc
jge
cmp
mov
je
imul
xchg
ja
negl
ja
or
push
push
pop
cmp
in
jnp
into
rcll
iret
std
sbb
cmp
mov
mov
repz
sbb
xchg
or
add
pop
cmp
mov
dec
xlat
jecxz
lea
test
push
sbb
lret
and
shl
push
jbe
sti
std
xchg
xchg
cli
add
fwait
movsb
dec
jecxz
pop
jo
js
inc
rol
push
cli
mov
sarl
dec
lods
pop
ja
pop
rcr
or
cmp
out
sub
push
aaa
pop
pop
stos
sub
cmpsb
dec
lret
mov
adc
lock
pop
push
add
or
mov
mov
sub
stos
ret
xlat
add
div
xchg
andl
cmp
mov
out
arpl
jle
pop
cld
lock
std
adc
pop
xchg
and
mov
je
adc
les
push
xor
icebp
jne
or
je
adc
adc
out
loop
test
add
pop
and
add
les
dec
push
subb
xchg
nop
fistpll
sahf
sub
popf
pushf
clc
cmpsb
fsubl
cmpsb
or
cld
jmp
in
mov
jecxz
pop
fsubl
jmp
into
adc
idiv
out
mov
mov
xor
mov
lds
push
xlat
inc
mov
adc
xchg
cltd
mov
cwtl
pop
ficoml
jg
lods
add
mov
push
lock
mov
mov
pop
sbbl
inc
das
outsb
mov
xorb
int3
mov
mov
pop
loopne
adc
out
nop
stc
jns
push
and
adc
push
adc
xchg
int
js
xchg
enter
jne
fcoms
cmp
sbb
push
and
mov
xchg
push
jo
pavgw
shll
mov
jge
call
sbb
int
mov
repz
pop
rorb
cld
test
out
fwait
and
stc
popa
mov
sbb
int
cld
dec
lock
xor
outsb
adc
pop
xchg
cmp
or
in
stos
adc
fildl
pop
out
push
lods
pop
fcomps
sub
xchg
icebp
xlat
mov
aaa
sbb
fwait
arpl
inc
insb
loope
xor
rcrl
push
and
fstpl
ds
jne
mov
or
xor
test
and
mov
loopne
arpl
repnz
movl
cmp
ret
mov
mov
dec
add
cli
pushf
add
push
jo
stos
std
inc
mul
out
mov
idivl
popf
sti
xchg
gs
loope
push
movsl
setnp
add
cld
adc
arpl
jno
xchg
or
data16
sub
fdivrl
jg
xor
inc
fnstenv
ret
lock
and
aam
rcr
mov
pop
repz
add
fs
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
rorl
jle
jns
jle
jae
add
pop
testl
sbb
jns
sub
test
sbb
loope
ja
mov
adc
mov
stos
scas
pop
push
sahf
inc
stos
cmp
sbb
jnp
sub
cmc
pop
mov
pop
in
imul
cmp
xor
mov
and
sub
rorl
lret
xchg
outsl
sub
test
mov
test
repnz
mov
leave
mov
pushf
cwtl
int3
arpl
f2xm1
notl
cmp
idiv
lds
movsb
movsl
push
imul
pop
pop
dec
sub
sbb
pop
xchg
xchg
cmc
add
inc
sub
pop
mov
stc
sbb
rorl
jmp
push
jecxz
xchg
cmp
inc
mov
mov
lret
test
mull
or
xchg
ja
cld
out
sbb
push
add
inc
push
popa
mov
jo
jns
or
push
and
test
fsincos
pop
mov
movsb
aas
les
rolb
cmp
mov
sbb
pop
cld
adc
dec
or
mov
jle
enter
cmpb
jnp
fsubrl
gs
int
es
enter
or
fidivrl
and
lret
ret
or
shll
jecxz
xchg
and
aad
xchg
ja
sbb
pop
dec
sub
adc
mov
bound
fldl
lock
inc
or
dec
xchg
int3
ret
loope
stos
pop
push
adc
xchg
xchg
adc
mov
imul
push
mov
xchg
sbb
mov
cmpsb
pop
movsl
imul
mov
repnz
fs
sbb
stos
mov
mov
push
cmc
mov
in
int
pop
push
je
xor
push
inc
int3
and
cmp
imulb
mov
push
mov
mov
outsb
int
repz
add
daa
movsl
test
sti
push
cli
arpl
cwtl
mov
and
nop
add
adc
jl
lds
jp
mov
lret
sub
movsl
pop
mov
outsl
je
dec
aad
mov
inc
jne
sbb
stos
nop
loopne
or
mov
xchg
sub
push
stc
sbb
nop
sti
pop
add
mov
ffree
add
ficompl
jp
orb
in
xchg
xchg
clc
mov
pop
decl
clc
push
repnz
cmp
and
aaa
fnstsw
sbb
sub
loopne
iret
ss
push
outsb
adc
dec
adc
jae
push
mov
dec
movsl
push
popf
bnd
pop
fsubrs
movsb
or
pop
push
scas
sahf
inc
lahf
and
daa
sub
pop
or
repz
movb
and
int
inc
fstp
sarb
std
pop
jno
loopne
sub
aaa
xchg
in
dec
in
cmp
push
pop
arpl
test
xchg
loope
jle
mov
xor
mov
and
ret
in
xor
xchg
sub
in
orb
push
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
out
fwait
sahf
mov
jle
jns
jle
inc
push
pop
xchg
mov
mov
push
dec
push
add
dec
xchg
push
inc
sub
xchg
xor
pop
lods
sar
pusha
stos
xchg
sub
dec
xchg
cltd
jb
popa
adc
in
or
and
pop
or
sar
sbb
into
xchg
add
xchg
ficoms
outsb
sub
shl
sub
or
xor
fistps
cmpl
cli
sbb
dec
or
in
das
in
dec
ret
pop
or
add
mov
lret
sbb
subl
sti
mov
adc
inc
leave
clc
cmc
fcom
xor
xor
sub
cmpsl
or
rorl
das
sarl
popf
addr16
jge
ret
sbb
scas
xlat
pop
add
push
sbb
sbb
dec
scas
dec
xor
pop
jno
out
ds
mov
test
mov
int3
addb
lds
sbb
pop
lcall
mov
cmpsb
cmc
cmp
sub
mov
subb
xor
lods
mov
data16
sahf
bound
mov
pop
push
js
out
cmp
fsubs
fwait
shll
sti
inc
ficompl
jae
fadd
jns
jecxz
or
test
daa
xor
fcoms
mov
stos
out
sbb
mov
cs
les
out
jne
dec
in
scas
inc
mov
ret
dec
xlat
mov
sarl
in
dec
ss
rcll
popf
pusha
mov
fistps
imul
popf
test
pop
inc
flds
push
push
pop
pushf
or
mov
jecxz
cmp
aad
outsl
bound
mov
sbb
inc
pop
lcall
adc
dec
sbb
bound
popf
aaa
mov
xchg
pop
and
mov
xor
loopne
js
out
mov
mov
inc
ret
fmull
sbb
mov
ss
movb
push
inc
stc
pop
insl
movsb
cmp
xchg
rclb
mov
test
mov
mov
jge
fisttpll
pop
inc
das
push
hlt
inc
push
gs
mov
xor
xor
cmp
mov
jge
je
fistps
push
push
inc
dec
ret
orb
ljmp
sub
xchg
dec
jle
fisubl
cmpxchg
in
sbb
xchg
outsl
mov
sbbl
xor
cmpsl
cltd
rolb
scas
jle
fcoms
insl
outsb
repnz
aas
dec
icebp
int
sbb
inc
arpl
sbb
shrb
sbb
push
aas
lods
gs
fstps
insb
mov
out
cmpsb
sti
inc
pop
xor
or
xchg
xor
sbbb
in
rcr
jns
daa
int
popf
addr16
push
or
push
mov
mov
lods
inc
ds
mov
mov
dec
mov
test
aad
mov
mov
cmp
push
shlb
xor
xchg
xlat
pop
add
ret
int3
mov
repz
or
jecxz
scas
lods
aam
jae
inc
and
lret
mov
stos
pop
vmovntpd
imul
inc
pop
inc
fcmove
adc
mov
cmp
fwait
mov
inc
cld
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
cmp
fwait
adc
jle
hlt
jns
jle
mov
adc
push
jno
aas
push
ret
push
mov
xchg
mull
enter
andb
aas
push
jecxz
xchg
lcall
clc
sub
jp
mov
loop
cmpsl
push
cmc
and
mov
rcrb
lret
aad
pop
inc
lods
dec
push
in
lea
cld
test
mov
pop
lds
inc
inc
inc
dec
scas
mov
arpl
fsubrs
inc
jle
mov
iret
es
test
scas
aas
das
adc
xrelease
add
lret
sbb
mov
mov
push
addl
pop
sahf
out
popa
sti
add
inc
ffreep
xchg
movsb
push
push
sbb
cltd
mov
popf
inc
data16
pop
xor
sub
popa
adc
cmp
addb
xor
pop
mov
pop
cmp
sub
iret
cmp
pushf
cli
ret
jl
add
enter
mov
je
ret
jp
int
ret
push
jl
add
faddl
test
lods
fwait
mov
insb
add
mov
sbb
outsb
xchg
add
fs
js
cltd
hlt
jl
xchg
jmp
dec
daa
andl
stos
mov
sbb
loop
aad
jae
cmpsb
mov
pushf
rol
xlat
lcall
or
xlat
aad
mov
jp
das
fs
xchg
lds
or
dec
adc
or
adc
fistl
adc
cltd
jp
ljmp
lods
andl
repz
dec
or
push
pop
mov
push
insl
out
or
shlb
leave
lret
mov
jnp
sub
sarb
xchg
pop
adc
mov
xchg
pop
test
mov
test
popf
and
rorb
lock
mov
push
dec
mov
stc
mov
arpl
sub
push
pusha
lret
xor
rorl
mov
iret
cmpsb
dec
ret
fcompl
cmp
mov
jbe
loopne
inc
sbb
pop
rcr
fstpt
dec
test
int3
scas
sub
les
gs
mov
xchg
inc
jge
test
adc
xchg
mov
sub
xchg
fnstcw
add
call
mov
mov
mov
xchg
into
insb
pop
in
aaa
lea
rcrl
inc
mov
pop
dec
xchg
pushf
sti
subl
loope
pop
test
out
sti
repz
dec
fisttpl
pushf
pop
enter
icebp
xorb
int3
push
inc
mov
lret
scas
mov
push
xchg
cmpsb
xor
cmpsl
outsl
in
add
push
pop
sub
es
stos
mov
lods
lods
and
fsubrs
nop
sbb
adcb
xor
mov
lods
xchg
pop
mov
stc
repnz
mov
sub
andl
cltd
jb
or
xchg
outsl
sbb
or
sbbb
or
cmp
mov
imul
adc
test
rcrb
sar
insl
mov
mov
dec
jne
pop
insb
cmpsl
cmp
add
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
lret
filds
jns
jle
or
mov
add
add
xchg
push
jg
shll
add
mov
lea
roll
imul
xor
mov
mov
and
pop
pop
lods
push
xor
sub
scas
inc
cmp
movsl
lods
pusha
imul
push
mov
jnp
cwtl
mov
fldl
lret
sar
inc
and
xor
dec
sbb
out
inc
adc
push
sarl
fnsave
and
rcrb
xchg
inc
ss
push
adc
pop
test
mov
cmpsb
xlat
sbb
push
mov
cli
mov
adc
mov
in
mov
add
nop
xchg
inc
bts
dec
jge
mov
icebp
cmpsl
mov
cwtl
and
ficoml
jmp
pop
push
iret
jmp
inc
sub
nop
add
rclb
sub
mov
xchg
addr16
mov
add
leave
lods
cli
cmpsl
push
data16
lods
test
inc
push
mov
push
inc
push
xor
inc
fdivrl
imul
push
mov
cmp
jecxz
aam
jbe
mov
lds
lods
or
es
dec
xor
cmp
les
into
add
sub
aad
mov
cmp
call
hlt
repnz
loopne
jle
lds
pop
cmpsb
fwait
rcr
xor
xor
mov
insl
xchg
push
mov
sub
inc
leave
sbb
cmp
loopne
or
rcrl
nop
xor
jle
dec
in
inc
insb
jg
cmp
nop
xor
scas
dec
aam
adc
shrb
or
aad
gs
aad
aaa
jl
in
add
sti
adcb
ljmp
imull
insb
push
xor
aam
xor
xor
popa
xor
sar
repnz
lods
je
fs
dec
push
repz
rorb
mov
push
addr16
aas
push
mov
pushf
scas
adc
mov
mov
dec
out
lahf
andl
sub
xchg
add
nop
sbb
popf
int3
mov
mov
xor
xor
mov
or
push
pop
fldcw
repnz
faddl
fistpll
in
jno
icebp
mov
jo
sub
icebp
pop
mov
jmp
sbb
and
jmp
das
clc
repz
shlb
or
or
aam
out
jnp
lret
pop
test
push
inc
push
jb
mul
xchg
icebp
ret
lock
and
aas
or
push
int
stc
push
jno
jl
inc
lcall
pop
adc
push
idiv
imul
dec
cmp
pop
loopne
ljmp
repz
xchg
ja
scas
imul
das
mov
jmp
jb
fsubrs
mov
xchg
imul
dec
pop
clc
fs
and
int
into
push
or
inc
cmp
xchg
movsb
xor
outsl
jmp
insl
pop
stos
and
jns
jae
jae
insb
iret
shrb
pop
pushf
lret
cmpsb
pop
adc
pop
mov
xor
pop
jmp
push
clc
clc
mov
test
adc
divl
inc
jle
hlt
jns
jle
add
mov
add
movsl
adc
and
aad
or
fdivl
mov
imul
movsb
xchg
xor
cmp
mov
pop
add
call
mov
xchg
ds
cmp
and
xchg
std
idivb
pop
rcrl
mov
pop
lods
lcall
adc
xor
inc
test
or
push
jg
add
test
push
xchg
jp
sbb
xor
jbe
and
lods
ret
mov
nop
xchg
insl
inc
and
mov
sub
arpl
hlt
adc
add
cwtl
jns
scas
cmp
imul
je
jb
push
pushf
mov
ret
add
push
test
lods
mov
jecxz
out
loopne
jno
or
out
test
cmp
or
adc
ja
iret
out
mov
add
xchg
pop
repz
mov
outsb
xchg
add
sbb
lods
inc
mov
push
xchg
int
add
adc
flds
arpl
sub
or
subl
add
or
and
fistl
pop
push
jno
mov
ja
ljmp
shll
test
out
insl
out
push
mov
mov
mov
lods
dec
mov
xchg
inc
aaa
notb
push
cmc
mov
test
push
stos
pop
cs
dec
repz
xchg
lcall
push
shrb
arpl
data16
sarb
daa
cmp
out
and
or
popa
xchg
push
rcrl
push
jnp
and
mov
jnp
jl
int3
sub
xchg
loope
xchg
js
and
add
and
sahf
mov
jns
insb
arpl
xor
mov
mov
or
push
icebp
mov
aad
mov
fnsave
or
push
pop
inc
lcall
mov
pop
jno
mov
movsl
rclb
popf
pusha
sub
lahf
ss
push
push
xor
std
gs
push
mov
imul
dec
out
insl
pop
dec
pop
push
and
and
sahf
adc
scas
aas
ficoms
inc
ljmp
pop
add
das
aad
shlb
cmc
call
inc
in
fsts
popa
jno
and
push
lahf
ds
jo
and
fldcw
ret
sub
out
sub
cmpsl
sbb
dec
xor
loope
iret
mov
and
pop
imul
dec
push
lds
mov
push
mov
and
mov
mov
xor
mov
adc
sbb
es
sbb
and
jp
andl
jge
fwait
push
rcrl
movsb
call
lds
xchg
dec
push
loope
pop
ret
xor
dec
das
fwait
cld
les
and
xchg
insl
insl
push
mov
mov
sub
cli
dec
nop
sbb
movsw
push
xchg
test
fwait
int
data16
jo
or
rsqrtps
clc
and
js
dec
fistps
inc
das
lock
repz
mov
jno
shl
jle
fcoml
movsl
roll
test
ds
sub
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
shll
inc
testb
pushf
jg
jle
les
adc
jl
lds
mov
in
lea
das
add
or
es
pop
dec
aad
xor
rclb
xlat
jb
repz
int
std
nop
cltd
mov
jecxz
int3
cli
stos
or
shll
mov
add
bound
push
jbe
jae
notl
fists
or
and
jns
inc
shll
popa
pop
dec
adc
mov
push
cltd
fldt
jp
jne
dec
ljmp
loope
rclb
loopne
insl
leave
adc
pop
adc
mov
xchg
into
mov
adc
shrb
mov
inc
mov
leave
mov
sub
aam
sahf
out
mov
je
ja
mov
jl
dec
cwtl
lahf
in
xchg
xor
and
rcr
dec
adc
nop
mov
mov
mov
shrl
ror
jmp
push
cwtl
xor
push
mov
repnz
jg
push
aam
inc
mov
mov
push
or
jo
and
adc
pop
pop
clc
pop
mov
mov
mov
lret
sub
jle
enter
cmc
add
cs
inc
clc
adc
popl
and
push
pop
jp
push
mov
jp
arpl
push
les
cltd
aaa
cmpsb
jg
outsl
push
lret
pop
mov
cli
push
cltd
leave
and
fwait
xchg
inc
nop
push
fisubl
loop
fldt
push
add
jne
mov
jmp
cmc
mov
enter
cmpsl
mov
push
jge
lods
adc
jle
pushf
jg
jle
add
lea
loope
fstps
arpl
stos
jb
pop
cmp
dec
add
jmp
gs
pop
subb
cmp
outsb
mov
cmp
dec
xor
sahf
ret
cmp
mov
ret
xor
adc
loop
fcomp
xchg
adc
js
fwait
rcrb
data16
cmp
imul
dec
sub
push
into
loope
in
cmp
xchg
push
sub
loope
pop
ret
rcl
cmp
push
movsb
das
dec
loope
mov
fbld
dec
cmp
gs
pop
pop
cld
inc
inc
ja
xlat
clc
hlt
test
sbb
dec
scas
call
cltd
mov
pop
inc
inc
outsb
in
mov
nop
decb
rcr
inc
lea
mov
cmpsb
js
pop
out
es
pusha
cmpsb
sbb
add
test
in
push
adcb
cmp
loop
inc
add
iret
push
xlat
inc
pusha
outsl
repnz
cmpsl
mov
icebp
stos
imul
rorb
cmp
sub
gs
xchg
cld
xchg
test
cmp
mov
aaa
popf
mov
mov
jb
inc
mov
jne
jl
arpl
sub
movb
cmp
pop
into
mov
out
sub
arpl
dec
sub
and
icebp
mov
orb
sub
sahf
insb
mov
cli
dec
lock
add
xchg
daa
stos
pop
or
jno
xchg
mov
subl
ds
psrlq
inc
mov
xchg
sarl
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
ror
lcall
js
jle
mov
pop
jbe
mov
mov
and
xor
pop
jnp
mov
jbe
sub
add
ja
imul
mov
and
daa
seto
xorb
stc
insl
xor
mov
andl
and
rcl
jle
fisttpl
call
ljmp
fsubr
mov
mov
or
xchg
pop
lea
les
lds
adc
decl
and
jp
jbe
test
and
xor
add
mov
cmpsb
push
adc
sbb
rcrb
mov
pop
arpl
add
in
cmp
fs
movsb
out
pushf
sub
adc
and
lret
roll
imul
mov
popf
dec
xchg
push
pop
aad
stc
pop
jb
fiaddl
push
sahf
add
test
gs
jecxz
cmp
pop
mov
mov
dec
pushl
mov
sub
cmc
mov
lcall
mov
cmp
vmwrite
cmp
sbb
xchg
xchg
rorl
mov
xchg
cld
daa
test
rol
andl
push
mov
movsl
in
add
jmp
stos
pushf
lahf
sarb
dec
pushf
sub
dec
mov
xchg
pop
or
pusha
fdivr
in
sub
je
jle
out
out
mov
sbbl
pop
sbb
mov
xchg
pop
aad
or
cltd
cmp
or
or
xchg
addr16
adc
popa
repnz
test
imul
xchg
mov
jno
push
mov
cltd
sub
or
out
cltd
xor
mov
aaa
ffreep
mov
pop
dec
bound
inc
inc
adc
adc
dec
push
add
sbb
xorl
divb
ljmp
jb
fbld
xor
adc
mov
sar
aas
dec
pop
outsl
inc
aad
lea
xor
mov
jnp
sub
xor
cs
sub
mov
insb
sti
pop
lds
inc
mov
call
fstpt
int
sbb
lcall
push
jno
sub
loopne
fmulp
js
dec
jle
enter
jg
inc
iret
mov
stc
dec
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
jne
jecxz
leave
jmp
xor
ljmp
fstpl
jg
lods
in
xor
fcmovne
adc
xor
add
roll
andb
adc
ja
mov
pop
ja
or
mov
insb
dec
push
jo
adc
ds
push
in
and
in
and
mov
sub
and
ja
mov
sahf
daa
lahf
cwtl
popa
stc
xor
pushf
xchg
jae
pop
jge
insl
sbb
rclb
out
arpl
cmpsb
data16
scas
jae
mov
outsl
jecxz
hlt
das
out
jo
das
shrb
push
or
lods
loope
pushf
movsl
pop
mov
and
das
fnstcw
jnp
or
xchg
ljmp
rol
mov
mov
cmp
mov
cltd
mov
test
add
jecxz
add
fstpt
push
sub
lret
cmp
lock
test
mov
inc
cmp
nop
arpl
mov
inc
ljmp
dec
xchg
andl
pushf
cmc
mov
and
clc
outsb
fcompl
lret
jg
pop
out
imul
xor
je
sub
in
pop
xchg
mov
aam
movsl
jp
mov
mov
rcl
push
sub
sub
cmc
pop
test
or
jb
cltd
outsl
and
xchg
lods
jnp
push
das
inc
jns
inc
push
clc
push
clc
std
push
insb
pusha
xchg
or
lret
jecxz
std
mov
xor
fisttpl
inc
pop
out
xchg
adc
mov
sbb
dec
les
cmp
dec
xchg
hlt
push
jo
pushf
adc
sahf
fs
jae
add
push
aam
out
popa
gs
mov
jmp
aad
pushf
ss
cmp
sbb
add
out
mov
scas
test
sbb
shlb
imul
jb
pop
dec
pushf
in
stos
in
aam
mov
xor
popw
jle
sbb
insl
jg,pt
mov
jne
cwtl
ffree
push
ljmp
add
repz
out
or
fwait
bound
ds
insl
es
adc
jns
out
mov
lret
test
mov
std
cmp
sub
add
sti
lods
lock
add
int
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
ds
push
js
jle
pop
insl
mov
stos
or
push
inc
jo
je
sti
xchg
mov
mov
ja
or
inc
jp
icebp
and
push
dec
sub
nop
xchg
flds
push
repnz
fnstenv
fwait
insl
daa
roll
push
sub
rcrl
je
push
inc
or
push
movsb
clc
in
pop
and
das
mov
push
mov
xor
inc
jmp
push
xchg
add
int3
push
jg
jg
xor
scas
lcall
jle
inc
push
aad
xor
test
xor
out
call
mov
test
lcall
hlt
pop
and
negl
mov
sub
clc
mov
test
or
push
sbb
sbb
out
repz
icebp
mov
into
add
loope
adc
lret
add
in
dec
cmpsl
inc
in
or
push
dec
in
cmpsb
jno
pop
lock
xchg
inc
push
mov
aas
imul
orb
int
push
dec
pop
pop
adcl
mov
shl
fs
pop
rcl
sub
lods
sarb
cmp
push
sub
in
andl
aad
pop
cwtl
pop
pop
and
jge
jmp
add
ret
sbb
vcvtsd2ss
jp,pn
xchg
popa
mov
call
and
and
test
mov
inc
pop
xor
das
jl
adc
mov
and
lods
aam
mov
mov
mov
fisubs
push
loopne
inc
mov
mov
mov
adc
sbb
jnp
hlt
insb
lahf
mov
lahf
jmp
cmp
add
cmp
arpl
jg
mov
ljmp
in
sub
mov
xchg
stos
xchg
sbb
jb
sub
sub
adc
scas
and
dec
jne
cmp
lahf
pop
mov
js
add
dec
rcll
pop
movsl
dec
adc
lock
dec
push
mov
in
pop
addb
pop
je
mull
add
jb
mov
lret
pushf
sbb
ret
ret
cmp
sbb
pop
pop
sub
mov
mov
sub
cmc
rorb
push
loop
add
inc
mov
pop
imul
xor
cmpsl
inc
dec
xlat
push
lock
cmp
cltd
push
pop
jle
int3
mov
fiaddl
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
enter
dec
jle
pop
jg
jle
sti
mov
cmc
xchg
data16
iret
into
in
into
andb
ret
aas
daa
in
pop
cmc
adc
jnp
xchg
mov
daa
stos
jl
and
int3
lock
jns
mov
lcall
jle
mov
inc
cmp
mov
popa
ret
ret
sbb
insl
adc
mov
inc
hlt
jo
inc
mov
repz
stos
outsb
adc
mov
sub
sbb
or
mov
pop
adc
mov
hlt
stos
cmpsl
movsb
cmpsl
dec
stos
add
mov
fbld
mov
call
int3
and
cmp
loope
imul
sbb
adcl
imul
cli
push
cmpsb
pop
jb
shlb
push
daa
mov
cli
outsl
pushf
fsubs
jge
shll
mul
push
ljmp
adc
int
imulb
mov
sarl
xlat
adc
test
mov
sub
sub
outsl
arpl
and
xchg
inc
fcomps
aaa
imul
pusha
lods
das
lds
xorb
hlt
or
dec
adc
jg
shrl
add
mov
lods
sbb
nop
lret
icebp
das
or
lahf
xchg
push
int3
add
cmp
iret
pop
mov
jmp
out
inc
mov
lcall
adc
sahf
and
fdivs
in
xchg
icebp
std
adc
fstl
in
enter
mov
xchg
jnp
test
jg
push
mov
push
aam
jmp
ficoml
mov
inc
ror
or
and
data16
and
clc
sub
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
ds
lcall
jg
jle
jae
dec
loop
fcompl
mov
xor
rol
dec
and
enter
mov
push
es
daa
fdivs
lret
sbb
aaa
xlat
int3
jns
nop
mov
or
cmovns
loopne
bound
or
mov
data16
mov
js
clc
insl
jb
lods
das
push
mov
pop
lret
jge
inc
out
cmp
adc
lods
movsb
xchg
pusha
push
pop
pop
pop
fidivrs
push
in
push
and
fcmovbe
jae
xchg
sahf
rclb
jno
mov
daa
lahf
inc
dec
ja
or
out
pop
jl
jno
test
clc
lret
pop
ja
mov
cmpsl
xor
imulb
jns
mov
dec
push
ret
adcb
jle
pop
adc
sub
cld
outsb
mov
and
xchg
cmp
aaa
mov
sub
hlt
xchg
lds
outsb
cmpl
dec
movsb
push
jb
add
jbe
push
out
fcomps
hlt
and
outsl
rcll
cmp
inc
out
mov
mov
testl
mov
sub
jg
out
sbb
mov
xor
push
sti
jb
push
ljmp
jo
or
adc
loop
xchg
xlat
data16
mov
in
into
mov
mov
je
ret
incl
dec
and
add
and
dec
ljmp
sbb
xor
xchg
pop
mov
jno
dec
jnp
xchg
sub
imul
dec
test
cs
add
cltd
rcrb
dec
pop
out
mov
insb
outsl
push
les
mov
or
mov
pop
cmp
aam
or
xor
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
cmpsb
sbbl
jle
pop
jg
jle
fisubl
lea
ljmp
hlt
add
or
bound
push
jmp
bound
cmpsl
lea
inc
jecxz
sbb
out
push
add
jge
pop
clc
adc
cmp
popf
add
and
inc
mov
xchg
mov
jp
sub
mov
push
pop
sbb
dec
mov
in
stos
add
jo
fwait
inc
sub
push
cmc
lods
xchg
ja
cmc
sub
pop
and
mov
out
jl
sahf
sbb
movsb
gs
mov
inc
or
fsubs
out
stc
mov
call
xchg
iret
int3
ss
xor
xorl
negb
dec
insl
sub
sahf
ffreep
mov
lock
xchg
cwtl
ja
aas
pop
mov
pushf
fmull
push
push
inc
movsb
mov
pop
adc
ljmp
pop
idivl
jo
jge
or
jge
std
out
cmp
pop
jae
and
test
jl
cltd
pand
popf
mov
into
call
and
push
pop
hlt
dec
mov
add
mov
inc
xlat
stos
test
rcl
pop
pop
rcr
pop
inc
inc
decb
xor
icebp
sbb
dec
daa
out
loope
call
std
add
cli
cmpsl
clc
mov
inc
mov
dec
mov
mov
call
int3
pop
pop
mulb
pusha
lahf
add
mov
fnstcw
push
mov
arpl
call
call
leave
adc
mov
insl
icebp
adc
pop
out
dec
push
btc
mov
mov
imul
pushf
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
sub
jle
pop
jg
jle
jb
addr16
xchg
in
imul
fwait
into
xchg
pop
cwtl
outsl
dec
sub
sbb
or
loope
and
jg
popf
outsb
iret
pop
push
mov
into
ret
dec
jo
push
push
mov
jbe
pop
orb
and
cmp
mov
xlat
pop
jle
std
hlt
mov
pop
mov
pop
push
int3
or
xchg
mov
jb
push
xchg
icebp
mov
sub
insl
cmpsb
in
stc
sbb
inc
sub
mov
js
mov
das
data16
mulb
cltd
sbb
test
popl
cmp
cs
shrl
inc
lods
pop
adc
pop
lock
fadds
js
xchg
jle
xchg
xorl
orl
dec
cmp
sahf
cmc
std
fnsave
add
in
idivb
push
sbb
mov
jo
in
stos
sbb
mov
mov
es
pop
fidivl
popa
mov
jecxz
popf
loope
add
push
or
mov
mov
imul
dec
cmp
sbb
cmc
movsb
add
bound
test
jl
xchg
jno
xor
das
push
pop
pop
jmp
cmc
shrl
sahf
mov
mov
iret
pop
cli
xor
and
and
push
mov
inc
loop
pop
dec
inc
imul
fwait
add
rcll
mov
cmp
out
fcomp
icebp
sbb
xchg
cmpsb
push
dec
lea
or
loop
lods
push
paddq
adc
lcall
leave
xlat
gs
push
xchg
sub
mov
pop
mov
mov
pop
stc
pushf
ljmp
push
std
xor
xchg
mov
mov
jmp
cmp
jne
xchg
mov
inc
mov
jle
jg
jle
push
out
aas
lds
in
mov
test
add
clc
mov
xchg
inc
iret
js
les
mov
lret
addb
cmp
jbe
adc
mov
test
mov
cltd
int
and
fsubs
sar
or
das
in
movsl
sub
insl
clc
dec
adc
pop
sub
cmc
loope
cld
and
ljmp
push
push
xlat
addr16
or
jge
dec
xchg
aaa
and
fwait
in
in
push
jmp
push
sub
pop
mov
xchg
fnstsw
int3
sub
add
sub
cltd
and
push
sti
out
ljmp
fwait
inc
xchg
pop
imull
mov
nop
mov
out
addr16
cmp
cmc
dec
fldt
por
lea
aaa
push
sarb
pop
incb
js
inc
inc
xchg
jle
loopne
into
dec
add
inc
pop
aaa
push
shrb
xchg
aas
sbb
popf
sub
pusha
sbb
subb
int
add
arpl
sub
hlt
scas
repz
incb
mov
repz
sub
out
call
dec
mov
mov
sub
and
jmp
fs
dec
mov
in
mov
out
and
or
aam
dec
and
lock
xlat
jbe
aad
fwait
mov
addb
fstpl
iret
push
out
jnp
mov
orl
xchg
fwait
popa
push
mov
jnp
or
or
jnp
int
jmp
insl
repnz
jle
test
imul
test
cs
dec
add
enter
popf
and
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
mov
pop
jg
jle
sbb
cmp
mov
adc
or
push
push
cmp
lahf
xor
push
sbb
mov
mov
ret
lahf
fmuls
ja
push
lahf
mov
mov
mov
adc
mov
ret
stos
dec
fs
push
and
clc
loopne
std
gs
xor
out
jne
popf
xchg
dec
push
cltd
pop
cmpsb
cli
test
and
adc
dec
or
xor
imul
movsb
xor
repnz
leave
test
popa
arpl
popf
pusha
repz
jnp
test
ja
bound
push
jp
jg
cmp
xor
out
sbb
lret
adc
mov
add
incb
inc
or
xor
xchg
sub
sbb
leave
lods
stos
stos
fld1
or
out
pusha
push
out
add
sub
and
scas
popf
cmp
pop
fbld
insb
adc
fdivs
std
jge
xchg
and
lock
aad
popf
scas
add
mov
lcall
jle
xchg
sahf
bound
xchg
fidivrs
or
ss
mov
jge
push
or
dec
pop
and
idivl
xor
jl
jp
ljmp
rcr
fxch
cs
or
sbbb
pop
mov
cmp
cmpsl
jb
jmp
pop
dec
jns
xchg
xor
mov
sub
cmp
into
and
cli
fnstsw
loop
sub
imul
fbstp
dec
inc
push
or
push
loopne
mov
pushf
inc
repz
sbb
mov
xchg
xor
les
dec
push
dec
cli
mov
inc
inc
cmp
mov
adc
xchg
or
sbb
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
lcall
jle
jg
jle
scas
push
dec
inc
adc
cmpsb
or
data16
cli
clc
sbb
and
jo
jle
jge
pop
sbb
je
inc
dec
jecxz
pop
and
add
push
mov
int3
std
xchg
stos
jecxz
add
out
test
fcmovne
lret
out
aam
pop
mov
push
mov
cmpsb
mov
lret
out
sub
aam
push
xor
push
hlt
adc
xor
lret
out
xchg
stos
push
adc
loope
pusha
mov
shrb
dec
popl
icebp
or
jge
adc
outsb
pop
push
xchg
stos
pusha
pop
dec
in
cld
and
outsb
bound
dec
mulb
scas
mov
fwait
xchg
loop
push
mov
inc
mov
fwait
ljmp
stc
and
dec
loopne
fldcw
or
inc
out
add
or
pop
lock
ljmp
mov
cmp
dec
sarl
and
cmp
movsl
mov
insl
cmp
aas
or
inc
mov
pop
fwait
mov
sub
test
fbld
push
sarl
notl
and
pop
add
inc
fldl
xchg
jg
sbb
loop
in
sub
loope
mov
pop
test
add
cmp
dec
push
xchg
andl
iret
dec
in
jmp
dec
pop
pop
rcll
out
test
cmpb
and
xchg
and
dec
lds
push
es
adc
mov
out
adc
mov
lods
jns
popa
lahf
mov
push
add
shrb
sbb
xor
lea
cmc
ret
mov
dec
push
mov
jle
faddl
stos
ljmp
adc
popf
xor
jmp
aaa
cmp
cltd
int
jno
ja
loope
xor
jle
pop
jg
jle
xchg
sbb
mov
dec
test
pop
xor
dec
subb
cmp
daa
mov
mov
loopne
push
or
sbb
shl
repz
mov
mov
adc
and
xchg
enter
test
xlat
out
stos
repz
sbb
adc
mov
sti
mov
push
ret
and
add
xchg
leave
outsl
add
adc
inc
push
lsl
xor
add
push
mov
xchg
inc
dec
xchg
push
jno
movsl
dec
sbb
insb
pushf
lcall
adc
push
push
cmp
mov
push
in
orb
xchg
outsb
ja
mov
xchg
and
loopne
aaa
loop
lds
lea
std
sbb
jmp
fcoms
mov
cs
xor
fs
jge
add
movsl
outsl
cld
lahf
stc
push
cwtl
cmp
mov
je
jl
notb
or
loopne
jecxz
inc
loope
loope
das
pushf
int3
out
movl
rol
push
lods
xor
daa
push
cmpsl
push
or
mov
sbb
pop
inc
or
adc
cltd
mov
cli
mov
sbb
ret
add
inc
push
fcoms
lock
outsl
mov
dec
sbb
adcb
pop
fbld
pop
lret
fidivl
mov
and
pusha
into
das
or
pop
or
jl
cli
jb
inc
mov
xchg
jns
ret
jno
dec
popa
mov
dec
sbb
pushl
jbe
aas
sbb
mov
inc
fsubrs
pushf
mov
lock
xchg
dec
rcll
push
and
mov
push
sbb
sub
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fdivrs
pop
jle
pop
jg
jle
mov
lahf
xchg
push
jno
lret
pushf
scas
adc
sbb
shrl
add
pop
mov
mov
cmc
ds
jle
mov
add
or
pop
and
push
mov
xor
push
addb
fs
test
adc
sahf
dec
cmp
cs
es
xchg
aas
pop
xchg
cmp
sbb
mov
out
inc
jo
push
cmp
imul
xor
mov
test
pop
mov
outsb
rcll
dec
sahf
call
decl
lods
shrl
addb
dec
xor
ss
mov
add
mov
cmp
mov
gs
out
ljmp
add
jns
dec
ss
cli
xor
push
jnp
sub
idivb
cmp
pushf
mov
test
add
and
outsb
repz
scas
pop
or
in
jge
aaa
cwtl
andb
cli
mov
das
adc
test
cmp
je,pn
xchg
pop
and
add
adc
sub
and
repnz
pop
popf
movsb
out
lods
aas
mov
leave
add
lcall
fldl
add
gs
lret
sub
ss
hlt
mov
jecxz
test
scas
jae
jle
xchg
add
mov
imul
xchg
popa
dec
jae
clc
rorb
lds
aam
jo
dec
pop
add
test
push
hlt
mov
in
pop
call
and
sub
mov
out
mov
lock
cwtl
mov
inc
std
inc
insl
pusha
jns
scas
and
icebp
sub
push
add
nop
shrb
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fldenv
in
add
add
add
loopne
enter
test
faddp
popf
ja
cmpsl
mov
rcll
cli
fstpt
inc
cmp
adc
and
dec
jns
lods
aas
mov
scas
addr16
cmp
sahf
pop
mov
cmpsl
adc
push
xor
add
mov
outsl
scas
xchg
test
jno
movsl
jno
cmc
fcompl
out
call
jne
inc
sbbb
xchg
fnstenv
cs
in
orl
jb
mov
xchg
out
jae
aam
pop
pop
fs
xchg
cmp
sbb
sub
cmpsl
mov
div
mov
nop
adc
mov
push
sub
lds
fxch
sbb
cmp
add
incb
loopne
int3
and
scas
and
mov
dec
jo
jnp
es
fsubs
lock
cmovg
sub
je
fildl
add
add
push
pusha
in
jle
cs
pop
ret
int3
cmp
cmc
add
add
jo
add
pop
pop
rorl
push
insb
aaa
cmp
cmpsb
lds
xchg
cltd
dec
jbe
enter
mov
pop
xchg
imul
add
mov
adc
dec
or
jp
and
ja
jno
jg
negb
adc
daa
sub
call
xchg
and
xor
push
jne
iret
clc
add
or
imul
adc
inc
fcmovnbe
scas
or
mov
into
and
roll
scas
shlb
fstl
inc
mov
nop
shrb
lds
inc
sbb
subl
insb
das
fwait
movsb
aas
dec
add
incb
inc
jl
test
into
test
add
mov
int
icebp
out
mov
out
clc
ret
popa
sub
dec
xchg
mov
les
icebp
sub
leave
jb
dec
sub
int
imul
in
add
add
adc
mov
adc
and
cmc
add
add
jle
hlt
dec
cmp
sbb
fwait
out
pushf
mov
mov
push
push
mov
inc
movsb
outsl
lea
sbb
shlb
pop
std
xchg
pop
mov
sub
stos
sub
pop
sbb
jmp
mov
push
mov
or
jl
xchg
scas
cmp
push
insl
cmc
cmpsl
sahf
xor
cmp
xor
push
inc
movsl
clc
imull
mov
movsl
sub
xchg
mov
cld
je
rolb
inc
daa
inc
imul
sub
dec
ficompl
scas
mov
push
bts
insl
mov
pop
pop
fcom
mov
xchg
arpl
push
scas
cmp
jae
and
and
jbe
adcl
mov
es
iret
inc
mov
sbb
pusha
adc
add
std
std
mov
cld
xor
leave
mov
dec
and
nop
dec
jl
lods
add
add
subl
stos
dec
out
aaa
jnp
mov
cmc
add
add
imul
mov
push
imul
rcll
jo
cmc
fabs
jg
fcompl
mov
xchg
shrl
jne
jge
mov
fdivrs
sbb
push
bound
jb
jo
in
cs
fprem1
lods
xchg
push
push
add
les
int3
xchg
pop
jae
aas
mov
cltd
sbb
daa
movsl
mov
or
mov
jo
das
sahf
add
jb
mov
lods
cmpsb
ds
jns
cmp
jecxz
mov
jnp
push
aam
std
movsl
sbb
je
xchg
das
mov
ret
aam
push
aam
stos
lret
stos
insb
sub
mov
rcrl
push
push
ret
dec
and
sbb
lret
jae
xor
jno
fstps
in
dec
mov
pop
sbb
or
adc
add
ja
push
cmp
add
add
inc
or
leave
bnd
add
jmp
add
or
aam
lods
and
push
fstpl
fcmovb
mov
cmc
adc
shlb
sbb
mov
data16
sbb
lock
jmp
mov
shlb
pop
xchg
cmpsb
rorb
jmp
jge
cmp
lock
mov
cltd
mov
ds
clc
dec
inc
ret
shll
pop
decl
hlt
and
popf
in
mov
pushf
sarl
push
push
push
push
popa
or
sub
dec
cmpsl
jo
pusha
cmp
and
push
push
fs
aas
mov
movsl
or
mov
enter
sbb
insb
push
pushf
movsl
fiaddl
ljmp
inc
inc
inc
rcll
mov
pop
mov
add
fsubs
pop
out
int
xor
mov
xor
stos
mov
cwtl
and
and
mov
in
fwait
lods
mov
lcall
icebp
xlat
jmp
add
add
cmc
insl
cmc
out
lcall
sub
jns
pop
and
ljmp
in
or
push
sub
adc
aaa
cld
inc
test
out
pop
mov
fistpll
and
push
adc
mov
mov
into
lret
decl
pop
pop
ds
lretw
cmc
mov
mov
jge
jg
add
jg
ffreep
mov
sbb
push
pusha
pop
sbb
sub
aam
out
mov
push
jecxz
cld
cwtl
daa
movsb
and
push
jle
sub
clc
xchg
in
pop
and
lods
add
js
int
xor
xacquire
clc
xchg
cmpsl
mov
nop
xchg
mov
jnp
jbe
add
iret
jg
iret
sub
ja
mov
test
cmp
fidivrl
pop
hlt
mov
dec
clc
mov
or
fstpl
xchg
aam
or
push
xchg
mov
mov
dec
cmp
push
push
or
mov
add
jle
add
outsl
jle
dec
xchg
call
cmp
add
cmc
add
add
xchg
xor
jmp
jmp
push
pushl
loopne
aas
movsb
sbb
cli
mov
sub
inc
mov
cmpsb
imul
xorl
or
jno
fs
scas
add
out
cli
test
out
pop
mov
pop
cli
out
aam
in
sahf
push
hlt
sub
insb
sub
and
mov
cmp
adc
pop
jnp,pn
or
mov
push
pop
jmp
jecxz
mov
jle
loope
scas
std
add
inc
lds
lods
int
dec
sti
mov
int
cmpsb
adc
movsb
je
pop
pop
out
aam
pop
sbb
mov
pop
jno
mov
mov
inc
adc
mov
dec
push
sbb
out
test
add
sbb
leave
incl
cwtl
dec
push
or
mov
xchg
cs
xchg
rclb
ds
enter
mov
add
or
and
scas
sti
jle
inc
sbb
and
cmc
add
add
pop
cli
repz
add
repz
icebp
inc
adc
jnp
jl
pop
outsb
mov
movsl
sub
arpl
push
cmp
mov
xlat
and
outsb
rolb
cmp
xchg
mov
andl
and
stos
repnz
test
test
pop
sub
repnz
jo
sub
xor
sbb
imulb
jle
xchg
cmp
and
sbb
cmp
aam
fildl
fsubrs
ret
lds
cmpsl
dec
stos
xchg
push
jbe
xor
add
insb
inc
cld
jge
stos
and
andl
loop
ret
inc
push
add
popa
daa
bound
aam
pop
xor
stc
mov
xor
loope
js
or
add
add
negl
lahf
push
push
push
mov
cmc
add
add
jae
push
and
jnp
push
addr16
movsb
lock
mov
push
leave
arpl
aaa
pop
cmp
orb
ficoms
test
lret
xchg
ljmp
aas
jecxz
call
sbb
ja
jno
sahf
cmpsl
les
repz
push
mov
xor
push
movsb
mov
mov
dec
mov
pop
mov
sahf
sahf
xor
add
in
jns
setbe
pminub
loop
pop
push
inc
inc
inc
scas
clc
adc
popa
fwait
sbb
and
pop
sbb
sbb
sbb
and
xchg
pop
dec
gs
jmp
mov
lcall
adc
pop
xchg
push
pop
add
lea
sahf
js
pop
es
rorb
pusha
or
int3
test
imul
or
inc
add
cmpsl
push
xor
hlt
adc
add
add
push
jl
jle
insb
pop
decl
fisubl
lea
out
add
cmc
add
add
xchg
faddl
jl
mov
lret
sub
and
test
xchg
cltd
pop
adc
imulb
xlat
je
aaa
dec
cmp
leave
mov
push
sub
lahf
lea
and
xor
gs
sbb
mov
cmc
xchg
jno
repz
or
mov
or
push
adc
filds
xor
xor
add
xchg
loopne
cmc
decb
sbb
lahf
cltd
ret
jb
jmp
jb
and
xor
pushf
mov
mov
frstor
dec
inc
xchg
aas
mov
ds
fisubs
outsb
jp
in
mov
movsl
mov
inc
jl
es
fcmovu
out
and
outsb
inc
stos
and
or
lret
xchg
mov
or
mov
pushw
add
push
addb
or
mov
xchg
movsb
sub
add
add
fwait
mov
pop
ljmp
push
out
add
cmc
add
add
aas
popa
pusha
outsl
aaa
movsb
and
mov
fsubrl
push
scas
dec
jno
pop
xchg
sbb
pop
imul
gs
imul
jl
sbb
sub
jp
fucomi
inc
test
jmp
mov
push
sbb
imul
push
or
adc
pop
and
aam
stos
testl
fildl
jo
stos
arpl
xlat
or
cltd
gs
das
inc
jmp
pop
adc
adc
icebp
xchg
test
cmp
test
fidivrl
fdivrs
push
add
jmp
cli
inc
clc
xchg
in
add
xor
inc
mov
fadds
mov
dec
add
mov
fld1
imul
aas
lret
cli
mov
testl
lcall
push
pusha
add
ds
pop
cs
add
add
data16
jne
mov
movsl
dec
jmp
add
add
add
mov
imul
or
adcb
sub
daa
xchg
adc
nop
and
rclb
test
mull
in
fwait
out
js
jmp
lahf
push
mov
out
arpl
push
nop
imul
cs
lea
shll
cli
add
xchg
dec
cltd
push
jecxz
test
mov
aaa
add
sbb
mov
and
pop
sbb
ss
mov
lds
sbb
jnp
jg
ja
int3
outsl
and
pop
mov
dec
pop
lock
jge
add
adc
rorl
jge
push
bound
adc
jl
cmp
rorl
imul
inc
jg
mov
fucomp
insl
lock
out
js
ss
xchg
mov
sub
pusha
push
subb
add
add
add
jnp
sti
xchg
rol
imul
add
cmc
add
add
arpl
jns
std
add
mov
andb
out
stos
leave
xor
mov
sarl
int3
stos
out
adc
loopne
jns
xor
fdivrs
or
xchg
jecxz
insb
mov
pop
adc
pop
test
imull
decb
xor
push
loop
dec
sub
cmp
inc
cmp
dec
jbe
pop
setbe
lcall
lahf
int3
cmp
notb
mov
add
mov
xchg
mov
insb
and
mov
fsubrl
mov
out
xchg
lock
mov
out
add
xchg
pop
dec
jl
pop
push
cmp
mov
sti
pusha
dec
inc
xbegin
cld
popf
push
or
mov
jno
sub
in
dec
mov
add
shr
and
add
sub
pop
sarl
test
sub
icebp
add
cmc
add
add
add
in
lcall
fistpll
cmp
jp
pop
sahf
jnp
dec
movsl
lret
sbb
push
push
into
pop
pop
aad
sub
push
mov
hlt
punpckhdq
shlb
jmp
lods
into
enter
or
out
in
cmp
add
mov
jmp
cmp
insl
push
stos
movsl
xchg
pop
jnp
sub
pop
ja
iret
pop
or
push
cmp
cmp
sahf
int3
sub
mov
nop
icebp
je
mov
stc
adc
push
rcll
movsl
mov
loopne
sarb
add
xchg
sbb
inc
dec
rorb
push
sbb
xchg
mov
pop
gs
cmp
xlat
jae
aaa
jp
mov
ret
push
popa
add
out
repz
fildl
mov
or
sbb
ss
push
out
mov
add
add
repz
std
repz
xchg
scas
push
xchg
repnz
cmc
add
add
flds
sbb
testb
lock
repz
sub
pusha
jae
cltd
xchg
movsl
divl
ret
add
fs
cmp
mov
pop
out
lret
fildl
lods
pop
movsb
inc
dec
in
sub
loope
jle
imul
jecxz
cmp
cwtl
adc
shll
je
jo
adc
inc
ja
mov
ficomps
and
inc
cmp
bound
loop
cmp
lret
inc
pop
pushf
and
lds
xorb
xchg
aaa
out
mov
arpl
push
ficomps
pop
lret
lahf
inc
sub
int3
in
mov
cmp
xchg
inc
add
fimull
imul
push
or
adc
and
push
mov
jae
imul
roll
push
or
test
pusha
fwait
pop
shl
mov
cmp
and
mov
adc
insl
jo
dec
add
add
lock
cmp
or
push
dec
clc
cmp
repz
cmc
add
add
jmp
addr16
xchg
rcrb
ljmp
stos
and
dec
xor
xchg
shrb
in
cs
jle
lods
xor
fdivs
subb
xchg
push
fwait
sub
xor
cli
push
push
adc
outsb
in
jae
sarl
lret
and
cli
mov
mov
hlt
fcmovu
ljmp
xor
fwait
inc
or
out
fadds
jg
and
mov
push
xchg
in
nop
push
ss
mov
inc
lret
out
push
cmp
adc
nop
dec
test
or
inc
push
cmpsb
or
xchg
sbb
popa
xchg
xchg
mov
sahf
cltd
fistl
inc
add
or
repnz
xor
fsubs
jp
enter
lods
adc
data16
xchg
loop
xor
sti
push
jo
in
hlt
mov
jno
loop
push
into
loope
mov
xlat
cmp
cmp
outsl
add
add
mov
mov
add
add
cmc
add
add
pop
shlb
pop
imul
xor
adc
sbb
fnstsw
in
leave
loopne
lods
popf
push
pop
dec
enter
mov
dec
popf
mov
cmp
in
and
into
pop
test
rol
pusha
pop
ljmp
loopne
mov
aaa
and
xlat
test
popf
outsl
xor
add
es
xchg
xor
jae
mov
mov
dec
scas
cltd
cli
xchg
rcll
lcall
int
mov
cltd
out
add
add
inc
js
lret
and
enter
neg
mov
push
pop
jle
cltd
repz
xchg
aam
lods
les
lret
sbb
cmpsb
xor
mov
mov
and
fxch
dec
shlb
pushf
pop
and
sbb
je
push
aaa
je
lret
sbb
xchg
inc
int3
inc
gs
add
add
xchg
in
mov
pushl
comiss
cmc
add
cmc
add
add
out
mov
movb
pushf
insl
pop
test
jl
loop
xchg
mov
dec
aaa
add
lahf
andl
sub
movsl
and
sbb
iret
push
xchg
dec
aas
inc
hlt
lcall
sbbb
mov
call
push
xlat
mov
sub
shll
xor
lahf
lock
inc
fistpll
jp
leave
jbe
pop
xchg
xor
push
inc
in
mov
scas
xchg
and
stos
mov
rcr
fdivrl
cmp
cmp
mov
lock
mov
cmp
pushf
and
mov
add
leave
hlt
ficomps
and
lea
cmp
enter
sahf
movsl
xchg
mov
shll
cld
call
mov
xchg
add
scas
ljmp
int3
mov
xchg
xchg
inc
xchg
cmc
popa
jmp
in
sbb
sub
add
inc
mov
in
negl
push
inc
push
xor
je
testb
cmc
add
add
in
mov
push
sub
sbb
outsb
dec
sarl
push
fstpl
stc
jl
cli
adc
jno
mov
xor
sti
into
mov
cli
je
mov
adc
and
mov
fdivl
mov
mov
pushf
fcomp
dec
sbb
adc
sub
mov
lret
rcrl
test
cs
mov
ja
pop
aaa
iret
into
push
les
adc
int
cmp
dec
add
pop
adc
hlt
dec
adc
lods
cmp
add
sarl
shrb
cld
nop
nop
xor
shl
mov
testb
cld
faddp
mov
test
and
add
xchg
pop
aam
ret
mov
add
push
xor
lahf
movsl
pop
popf
jp
stc
inc
add
ret
and
jnp
imul
add
mov
nop
fmull
xchg
add
add
pop
aas
inc
jmp
mov
xchg
push
xchg
lret
adc
pop
and
inc
fildll
fsubs
pop
mov
cmp
in
ret
enter
shll
ret
or
cli
jb
test
cld
mov
out
cmpl
xor
sub
xchg
jne
aam
mov
jb
and
jmp
adcl
jne
gs
add
loopne
fscale
xchg
jg
es
arpl
adcb
test
int3
mov
mov
lret
mov
xchg
lret
mov
out
clc
cli
cld
jne
fbld
lock
sbb
cmpsl
xchg
fwait
xchg
jge
shlb
push
rorb
and
mov
test
cmpsb
and
loop
push
das
pop
or
lret
shrl
lret
push
aad
sbb
add
add
adc
push
add
adc
push
and
add
add
add
push
iret
sub
push
cmpsb
movsb
jmp
mov
lahf
adc
push
out
ret
pusha
jle
xor
aad
xor
ss
stos
jne
sub
mov
loop
out
dec
push
jb
loope
push
add
in
into
sbb
hlt
jo
sarb
sti
jbe
das
adc
mov
xor
mov
jno
in
pop
pop
in
imul
xlat
push
xchg
mov
stos
sahf
jmp
les
in
andl
pop
xchg
aaa
sbb
in
mov
out
or
mov
bound
lods
xchg
sub
loope
scas
or
sbb
cmp
outsb
mov
stos
xchg
test
mov
stc
adc
dec
xchg
pop
dec
fstpt
shl
xchg
mov
sahf
in
push
loope
mov
lcall
add
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
ret
add
lret
pop
push
adc
call
cmp
sti
xchg
fnstcw
xor
clc
sbb
add
iret
pop
mov
stos
mov
call
loope
fcompp
mov
loope
ret
xchg
mov
sbb
or
xchg
add
bnd
sahf
clc
adc
xchg
iret
mov
dec
stos
in
out
stos
sbb
mov
sub
mov
mov
stos
xchg
popa
mov
icebp
cmpsl
push
dec
or
push
mov
dec
jecxz
push
push
xchg
cltd
adc
fcomp
int
fiadds
jb
or
loop
fisttpl
xchg
pop
push
loopne
in
fsub
mov
stos
inc
dec
stos
mov
pop
clc
int
in
cmc
data16
rcrl
or
cmpsb
stc
data16
rcr
notl
or
jns
ss
ret
mov
ljmp
add
mov
push
decl
addr16
add
cmc
add
add
adcb
mov
xor
mov
sbb
aaa
je
scas
fisubs
fdivl
scas
cs
fstpt
ret
scas
mov
dec
sub
popf
pusha
aam
ret
push
and
cmp
dec
lods
xchg
stos
mov
inc
xchg
out
adc
jmp
xchg
arpl
inc
adc
mov
and
inc
lret
or
iret
push
xchg
cmp
pop
add
xchg
call
hlt
mov
lret
dec
in
jge
sahf
xlat
add
aas
push
sbb
pop
in
push
mov
mov
ja,pn
jp
fcoml
pushf
xchg
call
sbb
inc
out
clc
fidivs
test
mov
iret
push
sub
test
jo
jb
adc
push
jae
sub
call
int
ljmp
sbb
inc
cmpsb
hlt
ds
lea
hlt
testb
xor
push
stos
out
cmp
add
add
jmp
in
dec
dec
ret
xorl
or
sti
add
cmc
add
add
mov
gs
xchg
or
sbb
ljmp
repnz
mov
outsb
inc
cmp
inc
mov
outsb
jl
lret
add
loope
scas
jbe
mov
push
adc
clc
sbb
add
pop
call
test
mov
sbb
insb
test
and
into
nop
or
push
cld
sbb
loope
js
fstpl
into
xor
into
cmc
add
iret
pop
push
lcall
jb
out
jbe
xchg
and
fldcw
dec
into
test
dec
xchg
pop
sub
jg
mov
jp
push
bswap
or
xor
outsb
dec
fsubrl
sbbl
lea
add
cmp
mov
test
cmc
push
rorl
call
fisubs
jecxz
xchg
dec
push
xor
movsb
loopne
cmp
cmp
cmpsl
bound
cwtl
jb
lahf
fwait
js
add
add
outsb
xor
or
or
cmp
add
mov
jg
sbb
mov
xchg
and
xor
movl
mov
mov
pop
ss
jnp
test
inc
adc
xor
loopne
cmp
frstor
adc
xor
xor
jae
imul
pop
inc
lods
fldenv
or
stc
addr16
xchg
fiadds
adc
das
mov
stos
push
pop
cmp
or
jp
adc
clc
sbb
dec
mov
mov
out
sar
jno
push
pop
pop
xchg
pop
cmp
push
test
mov
mov
sub
cmp
mov
sbb
xchg
out
xchg
push
and
adc
jmp
pop
mov
iret
mov
ret
jnp
es
push
cmc
mov
and
pop
mov
xchg
stos
int3
addb
sub
icebp
add
add
inc
ror
lock
jnp
jmp
sbb
push
out
jns
add
cmc
add
add
fistps
jae
test
loope
scas
jp
loop
lret
mov
cmp
in
add
sub
pop
outsl
in
lods
mov
xor
jge
ret
sbb
cmpsl
lcall
idivb
or
xor
pop
adc
jecxz
ds
jae
out
ret
outsb
divl
xchg
push
cli
loope
scas
or
gs
out
insl
push
mov
ret
out
ret
jae
pop
sub
jb
fnsave
pop
adc
pop
int
outsb
sub
ja
xchg
call
inc
lret
aam
lea
call
mov
dec
mov
or
cmpsb
sbb
ret
jbe
inc
pushf
int3
jo
sbb
enter
inc
inc
mov
loopne
mov
shll
pop
jo
sar
push
jnp
add
and
repz
fimuls
mov
jo
outsb
incb
add
add
add
cmp
mov
dec
sub
add
pop
test
pop
jae
pop
push
rcl
in
lret
cli
sbb
cwtl
ficompl
orb
mov
xchg
or
outsl
sub
in
add
pop
xchg
inc
inc
test
ja
iret
rcrb
mov
mov
and
outsl
lea
jecxz
lcall
fadds
adc
sbb
sahf
inc
aad
mov
lds
rol
pop
dec
ss
ja
push
imul
inc
xchg
xchg
ljmp
push
push
int
sub
adc
fxch
ss
xchg
in
inc
cmpsb
pop
dec
mov
mov
pop
dec
mov
fsubs
ret
xor
cmp
lods
dec
xorl
enter
cmp
sbb
adc
inc
ret
add
add
out
xchg
jns
mov
or
cmc
add
add
add
xor
ret
aad
in
or
sarb
pop
or
jne,pn
jecxz
push
daa
jae
mov
add
or
pushf
lds
jo
call
sbb
pushf
fxch
insl
pop
dec
repz
push
movsl
sarl
cmpsb
jp
negl
leave
test
xor
inc
mov
mov
push
movsb
mov
jle
stos
in
or
adc
nop
adcb
mov
sub
or
scas
icebp
jmp
adc
xor
or
dec
push
aaa
lahf
lcall
pop
add
jecxz
divb
fs
inc
pushf
jp
sub
fisttpll
stc
jecxz
lds
jge
negl
pusha
out
adc
xchg
push
push
bound
dec
int3
xorb
add
clc
imul
sbbl
jl
pushf
mov
or
add
shrl
cmc
scas
mov
xor
jg
add
add
add
add
jl
in
mov
repz
mov
or
or
jmp
and
dec
xor
fsubrs
mov
hlt
pop
hlt
cmp
sub
in
mulb
in
mov
jae
dec
inc
clc
bound
repnz
push
loopne
ficomps
sbb
lahf
sbb
inc
inc
mov
inc
or
push
nop
lret
mov
xor
outsb
dec
jp
rolb
push
fcomps
mov
popa
push
iret
in
sub
adc
js
xchg
mov
cmp
sub
jne
mov
movsb
insl
je
hlt
int
js
loopne
or
pop
add
fistpll
arpl
inc
mov
in
dec
mov
push
mov
sbb
arpl
lea
mov
xor
inc
int
add
add
pusha
rorb
lea
clc
mov
cmc
add
add
or
jb
in
push
inc
bound
ficompl
popf
push
jp
adc
out
cmpsl
add
sbb
out
in
xor
clc
rcrl
insl
mov
sub
in
lock
out
fucomi
sbb
pop
mov
cmp
out
pop
aad
imul
popf
dec
popf
js
int
ret
les
orl
divb
arpl
push
sub
xchg
mov
jns
in
scas
inc
xor
daa
rcr
mov
jle
jmp
lret
aaa
cli
push
pop
pop
in
js
jl
in
mov
scas
out
xlat
inc
outsb
call
lcall
int
xchg
jmp
jl
or
rol
movsl
sbb
pop
pushf
or
sbb
mov
mov
and
scas
cli
mov
std
jmp
bound
cs
add
jecxz
push
testl
mov
add
cmc
add
add
xchg
cltd
loopne
lods
inc
loop
mov
cs
jle
xchg
mov
sub
mov
mov
stos
dec
pop
in
mov
mov
pushf
cmp
gs
ja
mov
out
inc
push
cwtl
pop
dec
insl
jae
dec
jne
bound
jnp
dec
loopne
lock
xor
roll
push
cmpsl
es
and
in
and
pusha
mov
mov
inc
out
pop
dec
adc
xchg
push
jmp
or
jl
fcomps
adc
rorl
lods
jle
popa
sti
cmc
jae
push
enter
sbb
call
in
loop
xor
stc
xor
pop
push
int
push
rclb
inc
dec
out
outsl
popf
jl
daa
xlat
test
ljmp
negb
and
addr16
test
fdivrl
das
daa
popl
add
and
daa
lahf
jle
sbb
aaa
aaa
add
add
add
add
pmaddwd
scas
dec
mov
cmp
repz
repnz
cmp
cmp
sbb
stos
mov
orl
mov
repz
fldenv
imul
shl
push
add
mov
ret
xor
pop
stc
mov
int3
hlt
push
mov
mov
icebp
cmp
jp
addr16
jne
fisttps
cmpsb
mov
jne
mov
mov
jno
mov
sub
lock
out
scas
xchg
sbb
ljmp
scas
lahf
mov
push
test
imul
push
fs
sub
or
into
adc
inc
ficompl
dec
add
in
push
imull
mov
loopne
lods
push
adcb
dec
sbb
mov
roll
mov
jne
cmc
cmpsb
lods
int3
push
outsl
incb
jnp
outsl
inc
and
mov
xlat
aam
je
mov
add
add
add
dec
xor
stos
push
push
mov
push
bound
enter
sub
cmp
xor
pushl
cmp
fdivrp
dec
int3
xor
mov
data16
pop
pop
scas
pop
pop
xor
gs
ljmp
das
ror
xor
sbb
ret
cltd
inc
out
int
leave
cwtl
jecxz
in
shll
mov
lcall
and
rolb
fcompl
into
fdivrs
add
das
divb
repz
test
pop
mov
sbb
inc
sbb
inc
or
cs
movsl
push
les
sub
add
dec
add
dec
sbb
cmp
sub
add
jae
addl
push
sarb
lcall
pandn
pusha
movsb
inc
adcb
add
cs
jbe
or
pop
in
sub
es
add
jbe
push
inc
pop
jns
aas
fisttpl
inc
lret
cmp
and
add
insb
and
jns
jge
xchg
mov
push
daa
test
hlt
out
pusha
cmp
inc
aas
int3
cmp
jo
ss
rcrb
nop
pop
and
stos
imul
hlt
loopne
loop
bound
fmuls
aam
add
sub
pop
andl
jnp
cs
jns
lock
xchg
mov
in
out
sbb
in
sbb
push
mov
fucomp
cwtd
fcmovb
fistpl
in
push
pop
adc
clc
xor
test
adc
mov
das
test
xchg
xchg
hlt
push
pop
stos
pop
lcall
mov
cmp
add
nop
jp
dec
fcompl
mov
lods
int
leave
mov
xchg
icebp
push
sbb
shll
sub
xor
push
ror
dec
xchg
sub
pop
sahf
dec
xor
test
cmpsb
sbb
jnp
mov
pop
fisttps
into
push
push
add
cmc
add
add
jmp
push
lret
pop
add
ljmp
hlt
in
push
insl
adc
sbb
aaa
or
pop
fwait
mov
js
or
push
sub
cltd
imul
int
add
insb
ss
mov
sbbb
fimuls
xchg
es
jae
nop
dec
adc
in
call
push
mov
jecxz
shrl
and
push
loopne
mov
adc
push
add
fidivrl
dec
push
add
push
cmp
cld
pop
inc
mov
sub
adc
rorb
mov
inc
xor
lock
movl
cmpsl
inc
cmpsb
clc
repz
ljmp
stos
mov
in
inc
or
adc
loop
sub
and
add
imul
adc
pop
pop
adc
pop
add
cmc
add
add
sbbb
sti
push
sub
ss
xchg
mov
fs
inc
mov
xor
mov
test
test
movsl
sub
push
fdivl
lods
mov
fisubl
or
out
cmp
inc
lcall
int
hlt
pop
and
or
push
daa
scas
scas
jb
mov
cmp
cli
aaa
out
int
pushf
adc
inc
sub
mov
sub
xchg
inc
arpl
dec
jns
fdivl
ja
fisttpl
and
mov
aad
or
jne
jmp
push
adc
pop
in
mov
xchg
inc
shlb
mov
loopne
xchg
xchg
mov
pop
sbb
dec
in
mov
fisubrl
std
mov
lret
scas
push
decb
mov
add
fcmove
bnd
daa
mov
add
add
fdiv
mov
ds
mov
cmc
add
add
mov
mov
xchg
mov
dec
sub
and
stos
jae
std
lret
aam
cmp
mov
imul
cmc
jae
ds
push
dec
sbb
or
mov
or
loope
out
cmpsl
clc
mov
adc
aam
in
mov
cmpb
out
add
call
push
or
sbb
jae
shl
clc
lods
push
in
pop
ds
add
ja
jle
jnp
call
jmp
je
shlb
stos
cmp
mov
daa
jle
pop
mov
leave
aam
mov
popf
inc
adc
imul
jl
pop
push
lods
adc
mov
ss
loopne
xchg
fildll
iret
mov
push
or
xchg
xchg
and
add
inc
xchg
shrb
fcoms
add
add
mov
stc
mov
or
add
add
add
aas
fisttpl
inc
out
adc
inc
inc
loop
xchg
add
ret
loope
sub
js
ret
cmpsl
mov
or
out
pop
lahf
mov
sti
add
sub
jecxz
insb
pop
cli
je
or
das
andl
inc
arpl
mov
jmp
push
cld
jbe
leave
fs
or
and
mov
adc
sub
ret
pop
push
sub
pop
stos
dec
and
mov
lret
add
imul
mov
add
je
cld
pop
rcrb
shrb
test
jno
shll
add
mov
mov
popl
ds
pop
inc
mov
movsb
mov
mov
decb
fsqrt
jne
mov
imul
dec
outsb
xor
shl
adc
adc
mov
sahf
jne
fisubrl
add
add
push
pop
push
jmp
sub
in
ss
ljmp
add
mov
gs
pop
adc
popf
add
loope
mov
loope
sbb
lcall
imul
lea
int
mov
mov
lock
dec
movsb
daa
in
ja
dec
in
push
fdivrs
testl
adc
sti
dec
or
xchg
fldl
mov
out
ret
mov
cs
imul
notl
inc
in
mov
aas
scas
dec
mov
jmp
out
jb
leave
cmp
loope
daa
bound
mov
loope
icebp
cmpsb
mov
das
fnstenv
shlb
popa
ret
popf
lahf
xlat
adc
popa
inc
gs
fiaddl
push
out
jno
pop
pusha
sahf
push
mov
xchg
jnp
inc
xchg
iret
cmp
sub
mov
pop
cmpsb
jb
imul
dec
iret
add
xchg
in
aam
fildll
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
xchg
fisttps
add
cmc
add
add
cld
xchg
mov
xor
or
xchg
repz
pop
cmp
mov
fstl
inc
push
mull
push
adc
arpl
outsl
cmp
pop
fs
jp
stc
inc
jle
ret
int
stc
jle
cmp
cli
sbb
and
push
adc
mov
pop
xlat
outsl
in
sahf
in
sub
adc
and
pop
in
or
testl
bound
inc
push
xchg
mov
cli
gs
loopne
push
insl
jae
push
xchg
xorl
cmp
cmp
jle
xor
mov
add
add
pop
and
out
loope,pn
pop
dec
pop
pop
sbb
lret
fwait
jnp
insl
cmp
add
adc
mov
les
cmp
jno
jns
pop
test
repz
mov
out
push
cmp
jnp
add
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
int3
and
or
add
add
add
mov
icebp
mov
jl
sbb
std
push
jno
outsb
aas
fld
iret
nop
sahf
jbe
add
fimull
test
ja
ja
in
lret
push
mov
xor
mov
loope
add
test
jo
pop
mov
inc
adc
and
xor
neg
adc
xor
pop
insl
test
xchg
ja
loop
es
xchg
pop
xchg
insl
call
ss
cmp
sbb
imul
pop
loop
cmp
pop
mov
pop
jne
mov
dec
jb
mov
fisttpll
pop
mov
in
daa
test
mov
aam
popf
lods
cmp
test
ror
aaa
cmp
and
inc
shlb
rclb
xchg
mov
lods
popa
push
cs
insb
fisttps
xor
in
xor
cmp
and
add
add
aam
int
xchg
clc
mov
jo
or
add
add
add
inc
je
jb
mov
popf
clc
cmpsl
sub
dec
dec
mov
inc
cmc
es
mov
push
jmp
mov
cs
call
dec
dec
jnp
adc
mov
clc
cmp
add
jno
rclb
mov
xor
mov
push
mov
sahf
das
add
jae
sub
dec
std
rclb
stos
jge
pop
cmp
cli
lahf
adc
sbb
xchg
and
inc
jge
rorb
nop
jo
fdivs
cmp
lret
leave
test
cmpsb
or
aaa
decl
test
jmp
jecxz
outsb
std
dec
into
adc
dec
mov
es
rcrl
inc
dec
int
or
dec
divl
push
cmp
lret
push
jnp
fcoms
mov
sar
mov
add
add
arpl
addr16
inc
jmp
sub
add
add
ret
movsb
xchg
sub
pop
cmp
incb
dec
inc
cmp
and
fistpll
jo
adc
cwtl
add
sti
xor
rolb
cmc
push
pop
les
faddl
pop
xchg
mov
out
into
pop
leave
in
push
mov
xchg
mov
mov
inc
sbb
aaa
call
neg
mov
fs
in
sbb
adc
lahf
pop
sub
mov
inc
insb
or
and
mov
and
outsl
cmp
sti
xchg
lea
sub
dec
adc
paddsw
xor
fldcw
mov
cmp
subb
push
lcall
mov
jb
xor
jmp
pop
xor
popa
jg
fadds
mov
daa
test
ja
arpl
fs
mov
mov
push
into
mov
push
jmp
sub
xchg
mov
add
out
cmp
cmp
pushl
jecxz
and
cltd
mov
add
cmc
add
add
notl
and
inc
test
push
pop
xor
dec
sub
mov
adc
sahf
loop
fs
push
pop
mov
dec
psubw
mov
fscale
ret
sub
les
sbb
mov
cmp
add
jmp
cmpsb
push
jl
dec
movsl
popf
or
jne
fwait
sahf
sub
adc
xchg
cld
inc
int
mov
sub
shlb
cmp
fwait
stos
adc
int
inc
push
cmpsl
rcl
mov
sub
pop
ljmp
adc
sbb
lcall
xchg
mov
leave
xchg
loop
jge
dec
test
ja
pop
mov
cltd
in
push
and
push
ljmp
push
mov
sbb
mov
lea
push
pusha
add
dec
jae
fimull
add
add
push
scas
out
mov
shlb
or
sgdtl
cmc
add
add
xor
fisubl
push
dec
mov
cli
pop
mov
ds
cmp
lds
lret
out
mov
dec
out
arpl
xchg
test
push
das
insl
jecxz
adc
push
mov
xchg
xchg
daa
pop
inc
pop
stc
mov
xchg
mov
jg
or
ror
fadd
lahf
movsb
dec
adc
mov
pusha
sbb
mov
mov
inc
push
inc
es
or
pop
inc
mov
int3
or
cmp
stc
add
and
mov
nop
in
pop
add
mov
push
xor
xchg
add
push
push
pushf
stc
push
std
in
and
jne
pop
iret
mov
mov
movsb
aad
push
xchg
je
sub
outsl
xchg
lret
pop
fildl
add
aaa
xchg
and
movsl
mov
mov
cmp
scas
out
sbb
add
add
add
les
jnp
jns
cmp
mov
fstpl
enter
test
inc
call
sbb
lahf
jns
sub
imul
push
lahf
inc
add
lods
pop
add
inc
cld
insl
adc
inc
jns
push
cli
cmpsl
dec
adc
or
adc
fwait
adcl
pop
aaa
shlb
and
pop
fisttps
pop
popa
loope
mov
lahf
push
mov
movsb
jns
jb
sbb
pop
push
or
sbb
cmp
loope
cmp
pop
outsb
mov
mov
jb
rorl
jno
xchg
in
imul
hlt
cltd
mov
jo
clc
cmpsb
lahf
add
push
xchg
dec
mov
mov
xchg
leave
cmpsl
sti
mov
mov
sbb
movsb
inc
mov
lcall
sahf
mov
fdivl
mov
cwtl
aas
ss
xchg
adc
add
add
add
add
pop
mov
scas
out
loope
sbb
push
jb
sbb
adc
incl
add
cmpsb
inc
pop
mov
jp
add
shrb
call
mov
cmp
testl
pop
subb
jne
lret
stc
negl
dec
pop
jne
cmp
pop
fst
ss
popa
insl
je
lret
fidivl
bound
mov
push
scas
out
sub
cmpsw
inc
aad
jne
out
out
bnd
pop
add
fisubrl
dec
pop
icebp
jnp
rcrl
test
mov
ja
push
js
inc
xor
xchg
dec
lcall
and
sarl
and
add
xor
in
lret
fimuls
roll
subb
add
adcb
pop
cwtl
or
cs
or
or
add
mov
mov
fidivrs
inc
cmp
add
add
add
dec
mov
loopne
push
popf
push
mov
scas
stos
xchg
pop
jp
xchg
xor
lods
mov
sub
mov
out
js
push
push
push
sti
push
movlhps
mov
dec
mov
fwait
cld
mov
jb
lcall
test
mov
mov
sti
inc
inc
arpl
jnp
ficoms
push
add
insb
push
sbb
push
mov
jae
lds
test
stos
call
mov
pop
dec
jmp
movsl
xorl
loopne
push
jno
sarb
mov
fldt
push
sub
movsb
mov
test
fdivs
mov
xor
xchg
pop
jo
ret
cs
jns
dec
jle
dec
mov
pop
mov
insl
lea
cld
sub
cwtl
pop
add
sbb
ret
xchg
jo
dec
dec
push
stos
jo
out
decl
add
add
mov
or
jl
add
cmc
add
add
mov
inc
jecxz
and
pop
dec
out
fisubrs
imul
loopne
sub
in
and
cmpsb
lret
inc
shl
push
and
cld
sbb
xchg
lock
stos
adc
test
xchg
cli
std
test
fadds
out
ret
push
jp
push
adc
mov
pusha
add
mov
aaa
dec
mov
or
js
sbb
andb
xor
ja
loopne
test
test
pop
jl
jo
icebp
jbe
pop
xlat
pusha
jnp
mov
xchg
sub
pop
inc
icebp
js
sbb
int
fists
out
pop
ss
jns
shrl
cmpsl
cld
test
jp
sbb
add
roll
inc
shll
jns
sub
sbb
sbb
ret
inc
and
scas
pusha
push
arpl
mov
pop
pop
add
add
hlt
fists
mov
add
cmc
add
add
dec
lret
sbb
outsb
fcompl
xor
xor
ficoml
clc
scas
mov
mov
aaa
scas
lods
fdivrs
stc
arpl
test
sub
andb
bnd
push
fs
xor
repnz
stc
gs
stc
add
or
lcall
and
pop
adc
sbb
movsl
pop
add
or
arpl
jo
mov
out
outsb
dec
push
jg
neg
xchg
inc
addr16
mov
xor
dec
test
ss
dec
jns
sbb
push
into
push
xor
adc
sub
jbe
dec
adc
dec
idivb
outsl
leave
loopne
mov
enter
adc
out
xchg
push
jns
shll
aas
xor
lods
nop
ss
mov
mov
push
mov
xor
lret
outsl
cmp
add
pop
adc
add
add
into
fwait
testb
rcrl
add
cmc
add
add
insl
jg
repz
jp
in
cwtl
jo
out
mov
hlt
mov
jbe
adc
aaa
imul
sbb
insl
mov
int3
push
pop
dec
inc
lcall
push
jne
pusha
in
add
leave
cmp
mov
and
mov
pop
lahf
test
insl
lcall
jg
dec
inc
jecxz
pushw
int3
rol
es
fnstenv
mov
jge
sbb
enter
pop
adc
xchg
mov
dec
fsubrl
adc
dec
sarb
sub
mov
add
xlat
outsl
sarb
push
nop
mov
and
scas
or
cwtl
push
add
rol
scas
xchg
int3
push
jmp
pop
xchg
test
mov
jge
scas
int
xor
andb
xor
dec
lock
inc
dec
xchg
jo
and
rcl
mov
add
jl
test
out
mov
pop
mov
adc
add
cmc
add
add
js
popf
push
xor
and
pushf
and
xor
mov
jge
enter
ljmp
mov
pop
insb
cwtl
sbb
int3
orl
arpl
pop
pushl
aad
pop
cmp
in
push
ret
mov
enter
outsb
mov
sub
popa
xor
adc
xchg
cld
imul
pop
jmp
sub
jecxz
sbb
xor
leave
notb
fwait
repz
add
xor
dec
and
push
jp
in
push
mov
int
inc
in
and
mov
jae
fisttps
loop
push
in
or
mov
ljmp
std
cmc
fidivs
push
out
xchg
mov
lea
push
ljmp
sbb
jno
movsb
cmp
add
add
inc
out
aas
mov
sub
sbb
push
pop
add
cmc
add
add
repz
loop
std
aad
cli
mov
sbb
inc
imul
cld
mov
inc
xchg
pop
pop
or
mov
bound
pop
or
and
fwait
cmpsb
testl
shl
icebp
mov
out
xor
mov
cwtl
jl
subl
and
xchg
mov
and
and
mov
mov
fwait
push
and
in
aad
popf
lret
cmc
or
adc
sbb
sarl
inc
xchg
mov
dec
pop
push
pop
lods
loop
jl
lods
ret
mov
mov
mov
push
push
or
and
fsubrs
cmpb
inc
outsl
hlt
sub
mov
xchg
in
inc
cmp
cmpl
mov
or
mov
cmp
imul
sub
lock
jle
inc
adc
adc
loopne
add
add
bnd
jp
xchg
inc
cmp
filds
add
cmc
add
add
out
test
out
std
cmpsb
test
sub
subb
cmp
sahf
push
pusha
sbb
cld
int3
jle
add
xchg
sbb
push
mov
dec
push
repz
xchg
rsm
bound
lcall
and
xorl
das
outsb
int3
dec
out
mov
push
mov
or
jb
sub
cmp
sbb
int
and
mov
sahf
mov
inc
cmc
fstpl
pop
test
dec
xor
clc
pop
and
sbb
xchg
xchg
rcrb
movsl
cmp
mov
pop
or
cld
and
std
outsb
jg
ficoml
aas
std
pop
fwait
les
and
mov
xor
and
es
test
sub
inc
loope
mov
jno
mov
insl
and
mov
mov
add
sbb
in
out
ja
fbstp
adc
cmp
add
cmc
add
add
in
mov
xor
push
pop
aaa
push
jg
pusha
inc
mov
hlt
int3
in
je
and
cli
inc
pusha
ret
pop
xchg
jne
push
jne
sub
mov
add
inc
jle
pop
stos
push
pop
sbbl
ret
es
adc
cmp
jmp
jmp
jmp
aas
and
aas
mov
ja
je
or
test
xor
sbb
mov
loopne
shll
jb
jecxz
mov
in
es
mov
xchg
sbb
xor
rcll
loope
outsl
sub
cmp
mov
and
push
xor
stos
lds
iret
xchg
lods
ja
jecxz
adc
cmpl
mov
mov
push
mov
push
mov
mov
inc
jg
sbb
add
add
pop
in
xor
cmc
add
add
xlat
push
jns
pop
or
cmp
into
jle
ljmp
cli
data16
nop
shlb
hlt
adc
mov
mov
clc
loopne
xor
pop
stc
push
or
adc
inc
mov
lret
xor
mov
lods
insl
xor
test
push
shll
sbb
pop
pushw
mov
jg
sub
subb
std
ret
dec
lods
je
je
add
pop
push
mov
push
into
jb
ja
fistps
jo
pop
xchg
and
das
mov
sub
in
test
cmp
cwtl
addr16
fldenv
mov
pop
sbb
addr16
xchg
inc
out
enter
xor
outsb
ret
xorl
xor
pop
sarl
outsl
xchg
and
sub
dec
add
insb
jbe
sarl
lods
lods
add
add
jg
imull
push
testb
add
cmc
add
add
clc
loop
fsubr
push
jg
cmp
inc
inc
nop
pop
cltd
push
push
and
sub
call
or
insb
popf
psubq
dec
orb
pop
lds
pushl
sbb
adc
roll
mov
int
and
adc
adc
inc
dec
xor
clc
jle
xor
pop
jmp
inc
dec
call
cmpsl
addl
pop
nop
cmp
mov
loope
lods
inc
addb
adc
or
aas
in
mov
cmpsb
mov
cmp
out
adc
mov
fucom
or
dec
mov
inc
enter
stc
jg
jo
loope
push
mov
stos
dec
lcall
sbb
rol
mov
mov
out
pop
movsl
mov
jb
aad
dec
fisttpll
shlb
add
popa
xor
pop
gs
pushf
dec
fst
cltd
xchg
inc
fsubr
dec
les
repnz
add
add
sti
jg
and
jmp
sbb
add
add
add
xchg
mov
jge
cmp
xlat
lds
pop
mov
or
fdivs
inc
dec
jle
shlb
lods
jno
add
add
out
jp
in
fwait
xchg
pop
and
ja
jo
lret
loope
sub
andl
push
rclb
gs
mov
jo
jnp
iret
lods
loop
push
mov
arpl
xchg
mov
test
cmp
mov
nop
jmp
out
or
push
jno
lea
jns
mov
mov
xor
cmp
aaa
xlat
mov
sub
pop
and
dec
hlt
lods
inc
leave
cmc
aaa
cmp
push
imul
or
rep
rorb
mov
das
mov
sub
std
lock
popf
and
mov
cmp
in
jb
and
fstl
sub
jp
cmp
cmc
jl
idivl
add
scas
aam
jnp
fldl
adc
pop
push
sbb
add
sub
mov
andl
addr16
cmpl
jns
jo
pop
call
shlb
les
out
loopne
adc
mov
mov
mov
sbb
out
xchg
cld
fwait
jge
sbb
push
cwtl
repz
in
push
cmpsb
push
pop
ds
repz
xchg
or
shrl
or
add
clc
fistpll
push
mov
out
mov
jbe
xchg
test
arpl
inc
push
lods
addr16
out
mov
or
cmovle
mov
jp
shll
pop
dec
test
movsb
leave
pop
jg
cmp
xchg
popa
jge
push
sbb
nop
sbb
outsb
and
jl
subb
jae
sbb
pop
cmpsb
xchg
add
pop
shll
cmp
leave
or
push
or
movsb
pop
fcomps
mov
ja
sbb
lods
or
add
add
outsl
mov
xchg
pop
cltd
mov
fsts
add
add
add
out
loop
scas
push
pop
jbe
pop
repnz
ds
repz
push
std
test
add
das
mov
sbb
pop
loope
push
mov
rcrb
lret
mov
pop
aam
enter
push
in
add
mov
js
popa
add
jp
data16
outsb
mov
dec
inc
movsb
xchg
ljmp
mov
push
insl
out
push
cld
xchg
dec
and
scas
xor
cmp
les
inc
sbb
pushf
adcl
mov
out
xchg
adc
mov
sbb
push
aas
or
testl
sbb
xlat
or
xor
icebp
push
xchg
adc
iret
cmpsb
jo
add
fisubrs
loopne
into
add
ss
push
gs
xchg
xchg
sar
push
xor
test
add
cmpl
add
jmp
loop
sbb
add
add
add
scas
in
push
dec
xchg
jmp
or
sub
std
repz
fadds
cwtl
roll
das
mov
mov
pop
inc
leave
jb
lods
push
mov
test
cmc
jmp
adc
dec
js
fimuls
inc
cltd
mov
leave
dec
sbb
jbe
inc
in
push
push
jo
daa
adc
cltd
decl
sbb
lahf
add
lcall
xchg
cli
lods
fs
xchg
pop
jo
out
fisubrs
mov
aaa
pop
ljmp
push
xor
add
nop
int3
ret
xor
jb
pop
in
cmp
leave
mov
movsl
fistl
scas
in
add
insb
add
add
or
inc
jge
sub
push
adc
js
mov
mov
push
jb
lret
outsb
mov
adc
clc
les
or
sub
fdivs
pusha
push
add
xor
xchg
lds
icebp
cmp
cmpsb
in
pop
add
cmc
add
add
mov
lcall
lret
rorb
stos
mov
punpckldq
pop
push
dec
in
sub
scas
stos
scas
xor
add
mov
push
lods
fwait
jae
ja
repnz
xor
add
inc
cli
mov
int3
cmp
xlat
xchg
and
jl
mov
lahf
cltd
jnp
push
test
push
xlat
adc
mov
pusha
insb
sub
pop
shrd
pop
push
or
mov
adcb
and
popf
push
flds
jle
jbe
and
cs
fisttpll
jnp
cli
jg
and
mov
pop
lret
lods
fucomi
repnz
fdivrl
mov
movsb
test
pop
roll
xchg
and
out
push
insl
and
dec
gs
jno
xchg
and
xor
cld
hlt
inc
mov
inc
push
xchg
in
jl
xchg
mov
insl
sbb
pop
addr16
pop
sub
dec
cli
inc
jg
int
pop
sbb
lds
out
loop
add
cmc
add
add
pop
ret
outsb
fmul
fucomp
bound
mov
in
pushf
add
pop
aam
popf
sbb
jno
xor
pushf
aam
sub
aaa
inc
pop
push
scas
mov
addl
cmp
ja
out
je
dec
inc
cld
pop
insl
push
add
loopne
movsl
add
inc
les
mov
or
sub
inc
jge
add
cmp
cmp
cmp
cmp
mov
and
mov
fadds
das
int3
cmp
cmp
divl
jmp
sbb
or
iret
and
cmpsl
or
lds
cmp
xchg
inc
fmull
lahf
or
cmp
sbbl
out
insb
mov
pop
jo
or
sbb
jno
stos
in
cwtl
adc
imul
add
add
xchg
std
cmp
jle
fisttps
cmp
in
xlat
and
add
add
add
mov
add
std
add
icebp
adcb
lahf
lock
mov
cmp
scas
sub
mov
sub
jle
and
sbb
lcall
fstl
mov
ja
and
call
ret
sbb
imul
dec
gs
icebp
divb
popf
popf
pop
andl
cmp
aam
in
mov
xchg
shrl
in
lea
bound
push
aaa
aad
rcl
data16
dec
leave
mov
scas
cmp
sub
pop
xor
les
pop
loopne
outsb
btr
xchg
add
push
negb
pop
ljmp
cwtl
xchg
movsb
clc
fisttpl
cmpsl
loope
popl
dec
out
sahf
es
add
pop
mov
add
add
iret
xlat
ficoml
inc
outsb
fmul
and
add
add
add
or
or
mov
pop
mov
rclb
scas
std
popa
jg
nop
or
mov
mov
testl
push
movsb
into
aaa
addb
mov
jo
lcall
iret
nop
inc
hlt
adc
mov
jmp
adc
push
fs
mov
lods
repz
scas
ret
outsl
inc
inc
dec
mov
dec
lret
dec
test
loope
mov
ds
into
fwait
add
sti
shlb
xchg
and
mov
shlb
insl
fidivs
inc
out
and
iret
loop
pop
fisubrs
dec
lret
xor
cmp
test
push
sub
mov
jecxz
sysenter
out
inc
fsubl
mov
cmp
push
rolb
push
xor
lahf
push
xchg
addr16
into
sti
test
add
add
sub
iret
outsb
jmp
rcll
fsubrl
shll
add
add
add
bswap
sbb
xor
or
push
test
inc
ds
jmp
lods
add
shll
and
adc
cltd
fcmovu
cmpsb
or
cmpb
cmc
push
xchg
leave
into
and
rolb
lock
cmp
jnp
mov
mov
hlt
xchg
nop
loop
and
iret
xor
add
into
add
test
fdivrs
insl
or
out
cwtl
jmp
jp
inc
inc
imul
inc
xchg
out
stos
hlt
aad
push
jae
sbb
repz
push
and
jbe
pusha
rolb
and
dec
or
adc
push
aam
and
inc
cmp
es
and
xor
push
xchg
movsl
jb
aas
sbb
ss
mov
xorl
ficomps
sbb
add
add
std
sbb
stc
cld
or
sbb
add
cmc
add
add
mov
in
cmpsl
test
movsl
stos
mov
ret
xchg
out
or
cltd
dec
inc
test
mov
sahf
jle
outsl
jg
mov
xor
adc
outsl
mov
imul
jecxz
movsl
ljmp
inc
lahf
mov
mov
ja
sub
je
inc
shrb
sbb
les
lods
cwtl
xor
into
or
sub
jmpw
cmp
xchg
sub
insl
xchg
dec
in
add
das
cmpb
dec
dec
cwtl
imul
cmp
mull
repz
aas
cmp
cmpsb
inc
hlt
mov
shlb
loope
ljmp
mov
ja
lret
popa
movsb
push
rcrl
dec
xchg
cli
dec
clc
pop
dec
outsb
sarb
movsl
cmp
pop
ret
mov
adc
add
negl
adc
out
jl
outsb
adc
dec
stos
and
add
stos
jne
add
rcll
mov
push
sbb
adc
dec
lock
insl
testl
sbb
nop
xchg
inc
imul
xor
and
xchg
inc
ss
stos
push
insb
adc
gs
cwtl
inc
mull
sahf
inc
mov
fiadds
rcr
icebp
cld
jbe
mov
dec
push
data16
xchg
mov
mov
in
inc
cmpsb
push
mov
lock
out
daa
stc
in
or
sahf
mov
push
xchg
inc
cmpsb
lcall
xor
outsl
pop
sub
daa
push
ljmp
and
loope
leave
jbe
ljmp
div
xchg
sub
les
aas
add
aaa
adc
jle
and
and
gs
gs
or
sub
ret
das
mov
mov
dec
pushl
stc
sub
mov
add
add
adc
dec
je
push
push
cmp
sahf
filds
or
pop
ja
push
aaa
sbb
sbb
mov
cmc
nop
je
pop
in
out
je
push
sti
les
xchg
mov
push
stos
dec
cltd
xchg
fs
into
sti
mov
mov
sub
imull
sbbb
insl
and
mov
jbe
in
sub
add
jb
loopne
imul
xchg
and
imul
add
imul
mov
xor
and
scas
in
mov
cwtl
testb
pop
imul
mov
into
roll
aam
mov
decl
popf
outsl
cmp
out
stos
mov
push
mov
loopne
push
add
in
xor
out
pop
rclb
cs
out
cs
sub
pop
sub
inc
ja
pop
aas
pop
pop
inc
adc
jb
xlat
xchg
daa
add
cmc
add
add
jl
mov
les
lret
dec
idivl
aad
jle
enter
xchg
mov
mov
mov
in
jo
fisubl
movsl
or
sub
sub
call
mov
and
out
arpl
push
lea
mov
jl
cmp
enter
mov
rcr
popa
jb
or
repz
out
inc
sub
xchg
gs
dec
jbe
js
and
test
and
add
mulb
fstpt
aas
xor
inc
int
aam
inc
jno
push
xchg
jae
shrl
xchg
es
out
cmp
test
xchg
loop
cmpsl
push
adc
xor
pusha
inc
insb
adc
xor
or
and
push
xchg
cmp
mov
jns
scas
lds
sbb
lock
add
xchg
jae
ja
div
dec
lods
push
mov
sub
add
add
add
fcmovbe
mov
testl
add
shlb
mov
pop
jno
fwait
je
inc
inc
and
cmp
xor
or
stc
jg
sbb
loope
adc
adc
lds
pop
push
mov
cmp
sub
outsl
bound
test
aad
mov
sbb
or
sbb
adc
jge
dec
shll
xchg
sarb
mov
dec
push
jl
imul
dec
sarb
pop
jno
fidivrs
push
cmp
cwtl
out
int3
pop
xor
out
mov
lock
mov
popf
loope
lcall
jb
inc
fcomps
fnstsw
sbbb
ljmp
sub
push
cmp
jg
roll
jno
adc
jbe
leave
out
inc
dec
add
or
add
std
mov
dec
sar
lahf
andb
add
add
cli
std
jg
into
jno
add
sub
add
cmc
add
add
mov
jo
into
pushf
cmp
or
in
xchg
inc
push
pushf
iret
add
shrl
aas
loopne
push
mov
mov
in
jg
xchg
sbb
xchg
imul
xchg
jle
and
ret
pop
mov
fcmovnu
jae
cwtl
push
inc
mov
xchg
data16
popa
sbb
add
repz
notl
das
lds
push
mov
std
pop
insb
xrelease
xchg
test
movsb
lahf
mov
mov
or
jecxz
inc
loope
inc
adcl
inc
outsl
stc
xor
push
adc
js
xchg
push
dec
push
cli
mov
in
mov
imul
pusha
orl
dec
int3
mov
push
xchg
std
insb
jg
xlat
cmc
subl
pop
rolb
into
in
jbe
rolb
or
outsb
arpl
pushf
sub
xchg
add
add
add
mov
std
incl
sub
pop
cli
pop
xor
je
add
cmc
add
add
mov
je
lock
fucomip
adc
insl
in
xor
jl
loope
sti
les
xchg
mov
jae
enter
sbb
dec
inc
rcrl
rol
xchg
add
in
jae
xchg
jbe
cmp
adc
xlat
jno
out
pop
xchg
xlat
sbb
fdivr
sub
sbb
mov
jnp
lods
aad
mov
push
cld
xchg
lock
insl
pop
pop
insl
cmp
sbb
mov
mov
lret
cmp
jl
inc
sub
sahf
int
in
mov
add
pop
iret
mov
subb
jg
xchg
jns
mov
add
pop
jne
mov
std
push
or
pop
ret
add
sub
repz
jne
mov
sahf
mov
mov
adc
add
push
es
jg
pop
xorl
cld
out
pop
ljmp
add
insl
cmc
lock
fldcw
sahf
daa
push
enter
sbb
sbb
lahf
xchg
jo
js
enter
xchg
jmp
stos
or
pop
mov
mov
or
fistpl
mov
push
fwait
push
lret
call
and
jae
push
jo
in
mov
pop
add
cmpsb
push
push
push
fsub
xchg
stc
mov
xorl
outsb
add
cmp
fstp
out
test
sub
or
sbb
fdivs
mov
mov
jo
loop
movsb
jp
js
std
das
sbb
stc
negb
jnp
les
sbb
mov
xlat
xlat
add
xlat
sub
jb
xchg
dec
add
roll
divb
xor
push
mov
in
dec
pop
mov
arpl
sub
aam
push
mov
add
add
or
cmp
bound
or
add
cmc
add
add
or
mov
mov
add
xor
outsl
jbe
pop
xchg
pusha
and
mov
jmp
daa
fistpll
xchg
cmp
dec
mov
lods
sbb
lahf
and
mov
push
cmp
movsb
aaa
lret
xlat
das
mov
mov
cld
test
adc
adc
mov
jae
jae
adcb
nop
cmc
push
sub
jle
popa
adcl
push
stc
outsl
sbb
xchg
and
cmc
xchg
and
pusha
aas
or
js
lcall
dec
xchg
cmp
jmp
repnz
hlt
int3
dec
outsl
cwtl
fistpl
jno
sbbb
fdivrs
xchg
out
mov
and
add
add
stc
lods
xor
ja
lgdtl
jno
push
sub
add
xor
shll
hlt
testl
add
mov
adc
jge
mov
xchg
mov
add
mov
mov
adc
stos
testb
mov
out
push
addl
lret
push
mov
cltd
mov
jmp
mov
cwtl
sub
add
mov
jl
in
or
fisubl
cmp
dec
jle
div
add
shll
mov
jbe
fwait
xor
loopne
sbb
push
fwait
out
add
xchg
and
sarl
mov
in
mov
push
cltd
imul
cmp
enter
lods
dec
out
loope
sti
mov
xlat
xchg
push
das
mov
jp
nop
dec
inc
mov
in
pop
pop
stos
pop
cmp
sti
sbb
or
push
mov
or
push
push
mov
add
ficoms
stos
sbb
ljmp
adc
stos
dec
add
cmc
add
add
jno
dec
and
mov
or
stc
xchg
jmp
sbb
ljmp
push
pop
lret
cmp
dec
stos
inc
aas
mov
notb
mov
ljmpw
leave
sub
or
inc
pop
in
push
push
clc
cmpl
adc
jbe
js
popa
adc
rcl
stos
outsb
dec
and
aaa
sub
mov
push
cld
es
fsubr
mov
add
lcall
xchg
inc
sub
clc
cmc
jae
sarb
nop
mov
loop
out
dec
aam
stc
fcompp
mov
ss
loopne
std
repz
rorb
xchg
or
stos
aaa
aaa
mov
dec
sbb
inc
in
ja
dec
lea
pusha
in
adc
les
and
scas
stos
pusha
mov
or
cmp
dec
icebp
int3
fs
je
jno
adc
mov
pop
movsb
add
add
in
out
sbbb
sbb
cmp
add
add
xor
xor
add
iret
xlat
sbb
jo
cmp
js
out
jnp
xor
sub
lahf
dec
mov
test
fs
ljmp
push
xor
ret
fwait
das
jae
ja
jmp
xchg
mov
inc
xchg
cli
add
sbb
int3
cmc
movsl
test
add
pop
inc
cmp
push
icebp
mov
pop
adcl
movsb
mov
stos
push
in
js
push
adc
lods
hlt
xchg
cmp
dec
mov
dec
test
movsl
inc
dec
dec
push
xchg
ret
dec
mov
shlb
in
gs
outsb
out
sbb
loope
lea
outsl
ror
aad
and
mov
sbb
in
sbb
fs
inc
dec
outsl
xor
insl
popa
push
dec
or
out
aad
jo
adc
add
cmc
add
add
xlat
out
jmp
rorl
jb
sti
cmp
cld
ror
jnp
lret
mov
inc
lcall
add
dec
popa
int3
dec
mov
dec
dec
icebp
aam
push
lods
dec
push
je
sbb
int
jl
and
cmpsl
out
pop
sub
popf
fcomi
lea
mov
je
clc
repnz
cmpsl
mov
mov
aas
sub
inc
lahf
mov
add
mov
sbb
aad
push
mov
jns
mov
dec
pop
jno
add
addl
nop
aaa
mov
addr16
cmpb
pop
mov
push
ror
or
divl
outsl
int
sub
adc
jns
pop
xchg
or
xchg
mov
pusha
fwait
dec
xor
int
add
cmp
cwtl
fstl
xchg
xchg
cmp
jo
repnz
int3
mov
and
cmpsl
add
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
ret
imul
insb
or
lods
pusha
aam
push
repnz
mov
mov
sbb
stos
mov
std
mov
dec
mov
or
push
daa
adc
pop
shrb
jae
jmp
in
test
push
push
dec
dec
fstpt
scas
push
or
mov
popa
clc
mov
js
rcll
lods
mov
iret
pop
es
sub
lahf
repnz
dec
outsl
push
ficompl
cmp
or
xor
lret
inc
and
adc
and
ljmp
and
cld
xor
sarl
clc
mov
pop
popa
or
fwait
push
jp
addl
mov
add
inc
in
adc
addr16
hlt
jnp
sbb
lods
pop
push
adc
mov
loopne
inc
pop
xchg
add
lods
jg
add
lods
mov
xor
add
add
add
mov
cmovne
lret
push
shlb
int
mov
inc
stos
inc
adc
pusha
sbb
jo
xor
or
jl
mov
out
not
push
jp
iret
in
jns
sahf
arpl
jmp
inc
jg
jl
cltd
push
addb
jne
dec
inc
jbe
xchg
insb
rcll
sub
or
enter
cli
adc
push
test
cmp
inc
stc
bound
mov
and
jmp
push
jl
add
xor
jle
cmp
mov
scas
js
mov
cmpsl
addb
ja
ffree
cld
dec
mov
sbb
xchg
push
rorb
shlb
in
dec
aas
mov
jnp
sub
lods
faddp
push
inc
mov
or
add
mov
dec
idivl
cld
add
adc
outsl
adc
add
cmc
add
add
pusha
ja
mov
cmc
mov
adc
fsubrl
pop
and
hlt
sub
push
call
mov
bound
in
lods
out
sub
fdivl
cs
add
sub
cltd
or
test
cmc
test
push
incb
mov
repz
roll
arpl
pop
jns
mov
jle
xor
fistps
mov
or
and
stos
mov
pop
lods
add
ja
cmpsb
adc
aas
lret
mov
test
ja
ljmp
cmpsb
pop
mov
push
fsubrl
icebp
adc
out
mov
ficoms
insl
mov
pop
movsl
icebp
cs
cmp
lret
adc
inc
ds
inc
push
inc
leave
dec
sub
xor
adc
gs
pop
fdivp
out
pop
jl
pop
add
xchg
or
mov
add
add
mov
iret
mov
pushf
push
push
add
xor
add
add
add
pop
ds
add
jnp
push
mulb
movsl
jne
pop
loop
sbb
inc
sub
in
js
xchg
jmp
and
xor
arpl
scas
add
mov
mov
cmpsb
sub
or
jo
inc
cmp
mov
lods
dec
insb
jne
and
in
enter
xchg
pop
xchg
repnz
jl
popa
stc
stc
adc
sbb
sbb
roll
or
adc
cmp
pushf
insl
mov
fists
mov
test
cmp
in
fbstp
ficoml
mov
add
pop
rcrl
clc
mov
dec
popf
ljmp
cmpsb
or
mov
and
sarb
pop
sti
fistpl
jmp
sub
jnp
jne
add
leave
and
out
movsl
and
add
or
sbb
enter
xor
add
add
add
add
pop
pop
stc
dec
stc
dec
add
sub
xchg
inc
sahf
into
fnsave
and
or
jp
dec
roll
inc
cmp
outsl
cmp
sarl
std
imul
call
xchg
cmp
pop
or
jmp
mov
out
arpl
push
movsl
jo
add
cmp
jb
mov
add
sub
pop
clc
and
es
mov
stc
rep
clc
insl
xchg
mov
or
mov
mov
push
fucomi
jl
jne
push
xor
pop
sahf
sbb
inc
icebp
adc
xlat
rcl
movsb
push
into
fcom
mov
add
loopne
int
and
mov
mov
add
aam
pop
call
mov
push
cmpsb
pop
movsb
xchg
adc
add
add
xor
clc
cli
clc
sarb
repnz
inc
aam
dec
inc
cltd
lock
add
xor
movsb
xor
jno
lcall
stos
leave
popf
bound
and
out
fwait
into
pop
adc
sahf
fildl
das
js
outsb
xor
scas
rclb
cmp
stc
push
ucomiss
mov
daa
sbb
fwait
ror
mov
cmp
mov
push
jns
xchg
es
add
popf
sub
ss
or
xchg
pushl
jecxz
or
adc
xchg
cmp
sbb
dec
andb
pop
mov
mov
push
add
jns
pop
adc
mov
jge
imul
int
pop
or
sahf
pop
jbe
cwtl
ret
lock
pusha
mov
das
xlat
or
inc
outsb
adc
sub
inc
outsl
mov
add
icebp
ja
add
hlt
cltd
add
inc
add
decb
test
imul
push
lcall
in
add
cmc
add
add
or
popa
and
mov
fmuls
daa
int
rolb
stc
loop
and
add
icebp
shlb
adc
push
inc
push
adc
add
mov
daa
cld
leave
addr16
es
shl
and
push
cltd
aaa
jne
or
push
lahf
pop
es
cmp
sub
and
ds
inc
adc
dec
insl
test
dec
test
push
inc
pop
mov
aam
mov
repnz
dec
into
inc
mov
test
sub
ret
sti
cmp
idiv
and
popa
sub
repnz
sbb
sub
stos
test
xchg
loop
push
ljmp
xchg
pop
cmp
movsb
dec
repz
scas
jg
xchg
jbe
stc
cmp
xchg
clc
sub
mov
pop
mov
cs
jne
and
add
data16
stos
lds
pusha
hlt
das
jmp
or
fld
out
add
add
fs
es
data16
cmc
jle
dec
movntq
fidivl
add
cmc
add
add
outsb
mov
push
aam
mov
cmpsl
mov
test
mov
adc
adc
xor
scas
jns
push
gs
je
imul
fsubr
xor
add
insl
sbb
push
adc
pusha
pushf
repz
mov
pop
sahf
rcrl
shlb
es
fnsave
pop
das
addb
or
sbb
loope
fyl2x
push
pop
push
mov
or
outsl
fs
daa
je
lock
hlt
fsubrp
mov
jp
call
lock
shrb
adc
test
aas
jbe
fcoms
iret
loop
dec
sbb
gs
insb
mov
xchg
setle
rcll
repz
pop
sub
dec
add
mov
adc
sti
nop
adc
xchg
out
or
lcall
jno
test
cmp
cmpsl
jle
dec
mov
xchg
fwait
fwait
orb
mov
data16
cli
push
sbb
add
add
dec
mov
imul
cmc
jne
cmp
add
add
add
imul
test
adc
cwtl
push
ss
pusha
xor
mov
adc
loope
mov
push
push
mov
mov
mov
das
out
add
or
test
out
push
adc
fsubrl
insb
pop
or
mov
jbe
nop
mov
jbe
xchg
ds
sub
jnp
sbb
mov
jo
nop
jg
pop
out
cmpsl
mov
cmp
cmc
cld
pop
test
stos
mov
jmp
hlt
mov
ljmp
adc
out
cmp
and
fldenv
and
inc
pop
test
xor
xchg
and
xor
movb
sub
dec
push
mov
sub
loope
loopne
int
mov
jno
jp
pop
outsb
jne
xor
movsb
in
add
add
and
push
sti
cmpsl
pop
push
jo
push
push
add
cmc
add
add
dec
xor
dec
cwtl
or
fildll
not
cmp
xchg
mov
or
jnp
fwait
xchg
and
cs
xor
lahf
pop
clc
xchg
repnz
in
sbb
pushf
push
add
inc
cwtl
and
in
mov
les
scas
inc
cwtl
sub
push
sub
aam
or
pop
nop
jle
loope
dec
push
lds
mov
in
mov
data16
cmp
adc
jge
out
push
call
xor
lcall
jo
dec
adc
or
rcrb
inc
adc
sub
scas
loope
cmpsb
pop
cli
or
jg
cld
movsb
mov
int
loope
sahf
hlt
or
test
imul
cwtl
stos
cmpb
adc
mov
enter
fldt
pop
xchg
pop
ret
xor
add
push
and
std
cmp
cwtl
cmc
lods
fnstsw
add
add
sti
and
dec
out
jns
out
mov
das
testb
in
cld
cmp
or
jo
pushf
xchg
pushl
fsubr
mov
jne
loope
fmul
mov
mov
fcmovnu
xor
clc
mov
sub
push
lods
mov
pusha
mov
xchg
movsl
in
dec
scas
test
sbb
mov
jb
dec
xlat
fdivrl
mov
dec
orps
imul
nop
jns
add
dec
or
fwait
enter
fcompl
inc
or
ret
push
int3
dec
xchg
sub
or
push
xchg
cmpsl
pusha
sbb
jae
adc
outsl
lea
ss
mov
fdivrs
out
les
lcall
aam
xchg
pop
mov
mov
and
insb
nop
xchg
popfw
adc
in
les
cwtl
xlat
and
jg
pop
pop
jle
add
add
and
jecxz
or
scas
cmp
add
add
add
sbbb
jg
add
cmp
and
jmp
fisubs
leave
into
mov
js
das
mov
cmpb
push
mov
lods
enter
out
mov
mov
cmp
xor
punpckldq
mov
jmp
sbb
cmp
adc
leave
pop
fldcw
sub
adc
mov
mov
lds
loop
cmp
fs
cmp
fcompl
inc
mov
mov
mov
mov
ds
pop
mov
pop
stc
adc
adc
xor
loopne
mov
and
test
xchg
mov
int
testb
and
out
insb
frstpm(287
cltd
inc
ret
inc
andb
mov
aam
mov
stc
cld
add
loope
pop
push
push
lcall
fiaddl
ret
ficomps
push
pushf
xor
add
add
add
xchg
outsl
pop
rcll
sbb
aas
mov
xchg
cs
movsl
frstor
add
jg
out
cmp
mov
fucomp
cmp
movsl
andl
cs
dec
mov
xor
mov
cwtl
jl
pusha
or
add
in
mov
mov
jbe
out
je
mov
clc
sub
push
xchg
add
loop
or
clc
int
call
mov
in
sahf
sbb
movsb
shrl
pop
push
xchg
or
xchg
sub
jbe
mov
arpl
and
fwait
sbb
rorb
cmp
cmpsl
vmovaps
call
add
out
pop
insl
rclb
mov
fwait
mov
cmp
sub
push
aaa
jg
mov
xchg
jmp
fcmovu
ds
inc
insl
in
test
aad
add
arpl
ja
repnz
add
cli
les
cmp
add
jge
sub
movsl
push
lods
test
mov
les
subl
adc
dec
jo
xchg
lretw
cmpsb
subl
cmp
add
push
movsb
subl
adc
jns
scas
cmpsb
adc
aam
lahf
into
dec
push
cmp
adc
jmp
mov
jno
ss
xchg
lods
into
dec
loopne
leave
dec
shrl
mov
aas
aaa
iret
inc
sbb
dec
cmpsb
lcall
sub
data16
mov
jne
mov
mov
popa
add
pop
add
jge
outsb
xchg
sbb
adc
mov
mov
and
stos
mov
int
and
ret
scas
addl
cli
cwtl
imul
adc
outsb
sub
pop
mov
and
sbb
jecxz
adc
stc
shlb
cmp
add
lock
mov
cwtl
sbb
mov
add
cmc
add
add
lds
and
ds
orl
add
sub
push
popa
jle
sbb
push
sub
pop
cmp
jne
int
sahf
jno
dec
aaa
cmp
lods
jbe
pusha
or
push
js
lods
fnstsw
aam
loopne
xchg
push
adc
shl
hlt
ds
repnz
push
mov
call
sub
sbb
insl
imul
popa
mov
push
cmc
push
out
adc
mov
add
push
and
inc
pop
ret
add
and
jnp
push
call
xchg
push
pop
aas
mov
hlt
imul
int
inc
sahf
jo
jb
je
push
inc
add
repz
fxch
ficompl
data16
mov
mov
scas
mov
mov
into
test
sti
push
enter
adc
inc
mov
call
in
scas
daa
les
mov
add
add
sti
pop
jge
div
cmp
inc
ljmp
cmc
add
add
sbb
fsub
addr16
aas
add
sub
mov
and
add
cmp
daa
imul
test
adc
aaa
inc
hlt
cli
lea
or
push
sahf
pop
or
xchg
outsl
imul
filds
xor
outsl
or
dec
jp
scas
xchg
int3
add
adc
in
jb
add
andl
inc
mov
iret
sub
jbe
xor
leave
sbb
loope
vpandn
sbb
xor
rorb
enter
sub
or
incl
xchg
div
imul
ds
and
nop
ror
inc
les
and
jns
cmpsb
fs
outsb
ret
ja
fmuls
das
and
mov
sbb
pop
dec
test
ss
jno
gs
fidivs
into
icebp
xchg
add
add
fsub
std
in
popf
jle
es
jmp
add
cmc
add
add
into
push
test
inc
add
movsb
jnp
mov
insl
cmpsb
cltd
test
sbb
mov
xor
jbe
push
aam
adc
sub
ljmp
pop
pop
fcompl
adc
inc
sbb
cli
mov
mov
aam
push
clc
ret
loop
xchg
shrl
jge
lea
mov
xchg
ja
fwait
aas
addb
pop
push
and
inc
movsb
xchg
cmp
arpl
dec
ret
xor
mov
add
in
ja
pop
dec
sbb
mov
lock
std
std
repnz
out
mov
push
cmc
mov
pop
push
lock
xchg
jmp
mov
mov
imul
inc
xchg
dec
push
push
or
xchg
or
cmp
inc
shlb
les
test
aas
sysenter
lcall
sbb
pop
add
add
jp
jnp
sti
xchg
jle
popf
loopne
in
or
jmp
cmc
add
add
pop
fcoms
sbb
incl
cmpsl
es
sbb
cltd
daa
in
lock
push
jl
xchg
lea
test
dec
push
gs
or
jl
xchg
into
mov
mov
in
pop
popf
mov
imul
imul
jmp
hlt
xchg
addr16
pushf
inc
idivb
aaa
jecxz
insl
outsl
daa
mov
daa
mov
push
push
ja
mov
sbb
popa
shrl
mov
xchg
jno
cmp
jmp
push
outsb
jmp
jns
xchg
out
mov
roll
xchg
aaa
pushf
pop
aas
fadds
add
mov
lret
xchg
mov
mov
pop
popa
icebp
out
movb
fstl
addr16
push
jmp
ss
ljmp
add
push
sti
loopne
cmp
arpl
push
inc
add
cmc
add
add
ljmp
adc
sub
notb
stos
cmp
jae
sub
nop
clc
out
jle
std
andb
ror
mov
push
int3
cltd
mov
adc
inc
mov
repz
mov
dec
mov
bt
sbb
push
adc
adc
add
sbb
add
xor
scas
sahf
xchg
shr
sub
out
adc
test
idivl
push
jb
cwtl
cs
cltd
mov
and
mulb
loop
and
mov
inc
cmpsl
inc
sbb
mov
xchg
fidivrl
lret
sub
jb
xchg
lods
pop
or
mov
pcmpeqd
sahf
ljmp
adc
jecxz
loopne
cmp
pop
popa
inc
pop
arpl
lds
bound
sbb
adc
lods
jmp
ror
imul
bound
add
add
cmp
and
push
dec
mov
subl
add
cmp
mov
mov
pop
cmp
cmc
rcrb
jg
std
sbbb
xor
iret
into
mov
add
dec
dec
push
fcomp
mov
in
addl
adc
xlat
andl
xor
push
iret
out
add
andb
test
jns
hlt
stos
mov
cmp
push
or
mov
push
hlt
dec
dec
push
jae
pop
inc
jnp
cwtl
and
mov
js
push
xchg
xchg
pop
test
repz
out
mov
call
jo
ja
push
sar
in
dec
in
mov
jmp
ljmp
mov
neg
mov
cs
mov
mov
fcoml
push
or
jns
cmp
std
pop
xchg
jmp
leave
in
jb
ret
sbb
jp
aas
aas
mov
sub
xor
hlt
add
add
cmp
jge
stos
movsl
push
arpl
mov
inc
add
cmc
add
add
sub
push
sub
repz
mov
xchg
mov
sub
xorb
ja
adc
push
rcrl
mov
push
inc
out
sub
push
sbb
daa
pushf
mov
adc
cwtl
push
and
xchg
insb
stos
inc
sbb
xor
xchg
daa
addr16
or
fildll
xchg
cwtl
or
adc
hlt
stos
aam
jl
jmp
fildl
and
adc
mov
inc
or
mov
out
pop
inc
ret
loop
xor
into
aaa
popa
fbstp
jecxz
xor
test
push
in
out
pop
adc
xorb
dec
push
lock
push
nop
in
out
and
test
cwtl
divl
aad
xor
jmp
add
add
rclb
mov
pop
and
add
cmc
add
add
mov
in
movsb
cmp
fnsave
add
test
pop
mov
imul
adc
test
add
pop
mov
cmp
add
aam
bound
push
lret
fcomps
enter
mov
cmpsl
add
mov
fiadds
cmp
aam
iret
cld
xchg
ficomps
imul
aam
or
lcall
andb
pop
cs
jae
sahf
adcl
jnp
jo
push
jecxz
xchg
dec
add
jl
mov
fdivl
jo
rcr
sti
or
fcmovnbe
sarl
dec
inc
daa
lods
push
pop
loope
in
push
loop
iret
out
nop
and
xor
aaa
adc
addr16
insl
mov
in
in
mov
pop
rolb
jnp
mov
outsl
dec
xchg
outsl
or
fwait
and
dec
add
aaa
sub
xchg
loope
int3
cmp
xor
add
jl
dec
jbe
idivl
ss
repz
mov
xor
add
add
mov
jne
nop
pop
push
mov
popa
adc
dec
lret
lret
push
js
je
xor
out
clc
add
inc
shll
jmp
sti
mov
xchg
stc
mov
movsl
lcall
fildll
inc
fldt
cmc
mov
cmc
mov
aas
std
pop
push
test
mov
cmpsl
rcl
inc
mov
cmp
cmc
mov
dec
jnp
aaa
xchg
mov
int
fnstsw
mov
stos
lods
into
pop
xor
inc
aad
rorl
cmp
out
pop
mov
pop
mov
stc
sbb
pop
or
mov
jae
push
subl
jmp
xor
testl
dec
adc
imul
adc
pop
out
gs
dec
es
test
nop
data16
xchg
pop
iret
mov
push
add
add
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
add
sub
iret
popa
sub
xchg
in
in
mov
or
or
and
inc
lahf
xchg
cmp
loope
pop
jne
int3
into
aaa
jecxz
fistps
pop
push
ficoml
dec
hlt
out
mov
cmp
sbb
mov
jp
cmc
jl
loop
lret
adc
hlt
inc
add
ds
lea
mov
fs
outsb
jp
test
loop
mov
sbb
and
das
aam
aaa
adc
iret
sbb
sbb
fdivl
xchg
rcrb
and
imul
mov
lea
out
enter
inc
nop
jp
loop
or
adcb
add
out
pcmpeqw
add
sqrtps
dec
xor
xchg
sub
mov
stos
lods
jnp
jbe
in
rclb
js
xor
add
addb
add
les
scas
fistpll
loop
addr16
ljmp
add
add
int3
cmp
in
je
arpl
imull
lock
adc
mov
lret
in
cmpsl
pushf
dec
popa
sbb
fs
sub
xor
xchg
sbb
jl
and
mov
ret
cmp
push
cmpsl
movsl
xchg
xor
cmp
adc
adc
roll
jb
sbb
adc
lods
xor
movsb
rolb
push
and
in
shl
cmp
loope
cmp
ud2
sub
int3
mov
mov
xor
js
mov
mov
cmp
in
jecxz
push
es
rol
lods
inc
outsb
negl
leave
repnz
add
scas
insb
sahf
and
inc
leave
adc
test
push
movsb
lahf
xchg
jne
pop
outsb
and
test
popa
cli
clc
lcall
xor
arpl
outsl
mov
int
push
cmpsb
jo
inc
push
jnp
adc
addb
add
add
cmp
les
fisttpll
in
adc
add
cmc
add
add
movsl
pop
inc
add
pop
cmpsb
ret
lock
pop
test
xchg
jb
ds
adc
inc
icebp
xlat
fisubrl
cmp
cmpl
out
xchg
inc
movsl
rcll
dec
xor
push
enter
fs
pop
or
jno
cmpsl
loopne
pop
cmp
push
pop
jb
bound
jae
mov
mov
fcoms
xchg
mov
cmp
fldt
in
cmp
aaa
mov
jbe
nop
incl
push
repz
shll
repnz
xor
jg
jp
cmp
push
loope
std
fdivrp
xchg
fwait
imul
pop
jne
not
dec
lods
cmp
fiaddl
mov
es
mov
mov
hlt
adc
dec
jnp
mov
xchg
sahf
mov
jb
sbb
fdivrl
sub
aas
push
lret
push
shl
pop
jae
in
add
shl
add
add
adc
incl
arpl
imul
push
or
add
add
add
adc
push
mov
lret
cli
test
outsb
mov
aaa
mov
andb
sub
xchg
imul
xor
out
jo
cmc
sbb
sbb
sarl
xchg
test
xor
pop
stos
jp
mov
iret
jp
add
xchg
push
add
push
in
cld
cwtl
loop
mov
les
pop
fwait
mov
add
icebp
push
jbe
inc
cli
mov
xlat
sbb
xor
dec
jp
cmp
cmp
idivb
out
or
ds
and
adc
aad
insl
jnp
cmpsl
sbb
pop
fcoml
jecxz
lcall
dec
ds
xchg
cmp
call
xchg
mov
add
das
dec
inc
rolb
push
xchg
je
pop
ds
mov
xchg
inc
aad
test
fcoms
mov
pop
fbld
jno
add
add
repz
cmp
lods
repz
in
pusha
out
repz
mov
add
add
add
test
loopne
insb
cmp
pop
ss
push
push
fdivl
mov
xor
sbb
add
pop
ljmp
sub
pop
das
or
int3
nop
fiaddl
mov
aam
daa
xchg
pandn
mov
inc
mov
mov
out
lcall
fdivrs
xchg
sbb
outsl
cmp
mov
stc
ja
mov
lds
push
sbb
xor
stc
ficoms
mov
cmp
leave
xor
test
add
lock
mov
xor
mov
mov
sub
adc
cld
cmpsb
imul
gs
in
jne
cwtl
cs
pop
jmp
or
int3
pop
ret
jb
jnp
xor
xor
xor
sti
out
pusha
pop
shlb
in
xchg
xchg
add
add
daa
push
cld
push
std
jmp
push
jg
push
sub
gs
add
cmc
add
add
mov
repz
jns
or
icebp
pop
cmp
jle
lcall
dec
inc
xchg
xchg
cld
cmc
test
lea
xchg
cmc
mov
stc
adc
decb
fnstenv
cmp
int3
jne
jmp
sbb
sbb
lret
xchg
push
aad
cmp
scas
sub
pop
imul
sub
aam
out
adc
sub
je
dec
repnz
out
sbb
fstpl
sahf
inc
push
jecxz
or
mov
sbb
test
stc
test
scas
adcl
orl
rolb
loope
sub
adc
andl
arpl
mov
add
in
push
call
jae
ss
fsts
out
adc
cmp
roll
mov
ja
mov
add
add
add
sbb
dec
push
cwtl
adc
mov
push
call
add
add
xlat
cmp
sub
push
or
loop
mov
lahf
test
xchg
imul
dec
adc
jbe
cmpsb
jne
fcoms
flds
loop
xchg
mov
xchg
inc
mov
cmp
sarb
in
cltd
je
inc
mov
out
stos
orl
jle,pt
testb
fld
push
sar
add
cwtl
fisttps
in
icebp
and
fcmovb
into
cmp
adc
jge
ja
mov
fs
loopne
mov
cmp
pop
xor
jge
xor
fsts
subl
ret
lcall
xor
mov
pop
jp
out
loop
sbb
psrad
push
inc
fcmovbe
jns
or
mov
sub
dec
dec
sub
lahf
add
add
idivl
mov
dec
add
cmc
add
add
push
mov
push
jg
sbb
sbb
std
push
jp
insb
mov
icebp
add
fdivrl
mov
lods
and
mov
or
cmc
insb
sbb
adc
insl
inc
sti
shlb
test
in
xchg
push
adc
pop
arpl
in
and
fimuls
les
cld
pop
adc
sub
mov
lods
negb
cmpb
dec
movsl
jg
inc
insb
jmp
cmp
call
inc
push
shr
stos
mov
inc
stos
xor
insb
leave
and
testb
inc
sub
hlt
in
sub
loope
cmovle
mov
pop
mov
les
mov
loope
jle
hlt
movsl
push
sub
pop
adc
ret
push
cs
imull
mov
and
lods
cwtl
lahf
push
xor
shrb
cmp
add
add
jg
xchg
lcall
sub
dec
add
cmc
add
add
aas
imul
adc
xor
enter
adc
aaa
jg
sarb
xor
sbb
xlat
int3
mov
into
out
stos
imul
ljmp
inc
mov
mov
jle
leave
inc
mov
push
dec
sub
mov
xor
fcomp
adc
and
mov
lea
inc
dec
push
dec
notb
dec
jle
xchg
cmp
cmpsb
xlat
shrb
int
mov
jno
adc
pushw
sub
cld
or
lock
pop
pop
mov
inc
mov
shlb
sar
xchg
mov
rol
mov
sahf
addr16
jno
test
rolb
xor
mov
push
pop
das
add
push
mov
adc
dec
or
push
sbb
hlt
divb
subb
jns
add
and
dec
lret
jmp
imul
xchg
aad
mov
add
cmc
add
add
fimuls
cmp
or
add
out
mov
jbe
jmp
adc
add
cmpsl
out
sbb
xchg
fldcw
enter
sub
mov
push
cmpsb
in
mov
dec
loope
xor
mov
mov
mov
xor
roll
std
mov
xchg
inc
push
jo
xor
icebp
pop
xchg
loop
jae
out
mov
mov
lcall
jg
in
scas
add
push
push
dec
mov
lods
jmp
pop
sub
hlt
or
movl
out
cmp
mov
repnz
sub
or
lods
xchg
mov
mov
push
dec
into
aaa
sub
scas
out
pop
mov
sti
lock
lahf
fcmove
and
clc
mov
cs
dec
cmpsb
lods
jle
pop
cmp
jmp
movl
or
mov
xchg
test
lods
inc
test
add
lds
cmc
cwtl
and
popf
out
out
push
add
cmc
add
add
pusha
roll
aam
rolb
mov
sbb
outsl
mov
dec
sbb
push
or
mov
inc
or
imul
add
addr16
and
adc
sarl
out
pop
sarb
out
outsb
popl
push
loop
cmp
sub
mov
push
stos
add
inc
adc
mov
insb
lret
xchg
xlat
fmulp
adc
jno
dec
in
jo
decb
imul
pop
gs
pop
jle
mov
mov
cmpsl
and
call
sbb
sbb
push
loope
jmp
jbe
jnp
and
or
mov
leave
add
mov
clc
lahf
mov
imul
or
leave
sbb
adc
daa
or
mov
adc
data16
cltd
in
mov
mov
xor
mov
add
jns
clc
mov
and
mov
add
add
add
xor
mov
mov
adc
xor
cmp
lahf
in
mov
dec
push
xchg
pushf
clc
xchg
dec
push
cmc
ljmp
roll
dec
pop
jo
jge
xchg
or
lcall
cs
iret
push
arpl
cltd
dec
stc
sbb
pusha
jecxz
cmp
paddw
packsswb
ljmp
sbb
cld
into
les
xor
sarb
loope
shll
ljmp
xchg
inc
testl
sbb
sbb
mov
je
mov
popf
cmp
xchg
hlt
dec
push
fs
in
cmpsb
xchg
sti
fcoms
cmp
push
xlat
sub
pop
loopne
xchg
cmp
out
and
sbb
imulb
rep
sub
clc
into
gs
inc
and
xor
sbb
and
test
add
add
ret
jg
mov
jno
jg
push
add
cmc
add
add
nop
and
xchg
or
fdivs
push
decl
inc
out
bound
and
pop
ds
push
jo
in
sbb
adc
or
shr
aam
cmp
out
out
into
jns
in
aad
mov
jp
jo
cmp
dec
cld
je
dec
inc
test
lcall
push
cltd
jle
xchg
or
fstpt
and
cmp
push
adc
pop
flds
adc
mov
in
mov
sbb
lea
push
sub
sbb
add
cs
cmp
xor
int3
jmp
cld
int
cld
int3
xchg
push
mov
inc
scas
jge
aas
mov
adc
stos
mov
sbb
fwait
outsl
add
sub
js
pop
lds
sub
insb
inc
pop
mov
sbb
iret
push
push
lea
dec
cmp
in
add
adc
mov
cwtl
out
daa
aad
or
add
add
add
sbb
push
jbe
sub
fnstenv
push
mov
test
cmp
xchg
add
jmp
bound
push
pop
add
adc
push
and
jnp
add
mov
sbb
icebp
cs
scas
movsb
les
mov
add
ljmp
mov
lret
sbb
pop
xor
jo
bound
mov
pop
jns
lret
push
addr16
jle
lods
fld
jle
adc
mov
addl
in
iret
mov
adc
xor
sarb
js
inc
popf
xchg
and
jno
and
inc
push
push
mov
pop
movsl
aas
sub
rorl
adc
lret
and
lods
addr16
fwait
cmpxchg
and
adc
xor
xor
imul
add
add
hlt
gs
push
sub
xor
push
add
cmc
add
add
and
ds
int
cmp
shr
iret
sub
jnp
cmp
imull
xchg
lahf
cltd
popa
push
sbb
mov
mov
scas
pop
outsl
bound
jle
outsb
or
sub
shrl
mov
pusha
es
adc
lds
aam
out
aam
imul
mov
xchg
xor
test
lret
jnp
mov
fmull
fnstsw
inc
mov
clc
jg
int
mov
addb
ret
adcl
sub
scas
jge
jl
cmp
push
mov
insb
inc
inc
pop
arpl
pop
mov
and
push
cmpsb
sub
scas
loopne
inc
push
inc
adc
jle
or
jp
enter
xor
test
adc
ffreep
int3
xchg
movsl
mov
shll
ficoml
sub
push
test
arpl
add
add
aas
gs
repnz
and
lods
lcall
cmc
add
add
jmp
aaa
int3
jp
sub
cli
fs
ljmp
pop
sbb
jno
xchg
add
push
mov
test
mov
cmpsl
pop
adc
in
loope
in
cmpsl
sbb
xlat
and
adc
inc
lock
xor
fiaddl
lret
lea
mov
cmpsb
ss
dec
mov
sbb
mov
xchg
test
xor
aam
jge
mov
and
ljmp
iret
cmp
push
xchg
push
subl
repz
add
fdivr
arpl
sub
push
leave
cmova
loope
sbb
cmc
pop
add
add
mov
and
dec
xor
xchg
rclb
rorl
and
jmp
xor
pushf
ljmp
xchg
mov
fs
lret
fmull
aam
mov
add
add
out
fisttpll
mov
jp
add
cmc
add
add
mov
test
lods
shl
add
hlt
mov
xor
mov
cmp
aas
or
push
xchg
movsb
das
arpl
push
push
pop
mov
adc
or
add
addb
movsb
pop
or
jne
push
mull
scas
popa
mov
lret
lds
sbb
sub
bnd
nop
test
and
adcl
mov
pop
mov
dec
push
lcall
mov
fs
push
adc
int3
fcoms
jnp
sub
inc
bswap
sbb
imul
ret
xor
es
jmp
stc
cmp
rol
test
jb
inc
adc
jb
push
mov
nop
dec
dec
mov
popf
pop
ljmp
in
sahf
pop
xor
fildll
mov
arpl
outsl
push
add
cmc
add
add
lahf
pusha
mov
push
xor
jmp
mov
lods
insl
adc
push
push
lcall
popa
in
and
roll
xor
std
add
loope
fiadds
push
ljmp
lock
repnz
clc
lock
movb
xchg
lret
ljmp
jle
jae
inc
loopne
xor
rclb
sti
jae
or
xchg
fiaddl
push
xchg
dec
in
cmp
ds
ja
ds
es
cs
mov
xlat
iret
pop
mov
loop
mov
xchg
push
add
jns
jb
dec
aas
mov
xor
movl
xchg
int
mov
icebp
pop
push
rolb
scas
add
pop
into
pushf
and
mov
lods
jbe
cs
jl
add
cmp
sbb
cmpsb
hlt
mov
daa
mov
iret
data16
add
add
jmp
out
aas
mov
pop
xchg
fs
add
cmc
add
add
insl
scas
loop
fsubl
xchg
xchg
aam
mov
aaa
sahf
jmp
mov
cld
pop
xchg
sub
bound
mov
push
inc
jle
push
cwtl
push
ret
imul
mov
pushf
mov
pop
pop
push
jnp
mov
dec
loop
mov
test
js
repnz
xchg
add
pop
adc
mov
loopne
roll
mov
mov
dec
jg
les
testb
in
sbb
int3
xor
int
pop
test
clc
dec
lock
xchg
jb
shlb
jnp
xchg
sub
mov
hlt
adc
in
jl
push
mov
std
lret
test
les
lods
pusha
stos
dec
or
call
xchg
cwtl
push
mov
adc
adc
jb
bound
pop
cli
pop
sub
xor
cld
adc
sub
add
add
imul
out
mov
arpl
pop
add
cmc
add
add
or
xchg
pop
xor
popa
fidivrs
sti
adc
pop
aam
addr16
xchg
mov
sbb
cmp
push
mov
or
add
insl
xchg
insl
pop
in
cli
jb
or
daa
fs
xor
lret
fsubr
insb
nop
popf
ret
dec
cs
sbb
push
dec
jecxz
cli
xor
sub
push
ljmp
je
cmc
jl
mov
jno
add
mov
roll
cmpsb
stos
cmpb
mov
mov
sahf
int3
insl
and
mov
jbe
xchg
rcrb
inc
aas
mov
jmp
mov
jno
loope
out
mov
lods
outsb
lods
movsl
push
ja
jle
sub
aad
mov
cmc
dec
test
aam
mov
shrb
fldl
lds
add
js
add
dec
stc
mov
clc
add
sarl
pop
dec
pop
add
cmc
add
add
arpl
outsb
cltd
lds
push
dec
stos
xlat
inc
cmp
sahf
loop
jmp
cwtl
jg
inc
and
xor
and
aam
push
cwtl
fstps
fnstsw
movsl
push
rcll
mov
pop
cmp
testl
push
insl
or
fidivrl
xlat
popf
fs
in
aas
cli
cmp
adc
sbbb
outsb
stc
mov
xchg
xchg
addr16
cmc
aam
cmc
rol
sub
cmp
xor
push
lahf
sub
add
and
jno
xor
xor
mov
mov
mov
cmp
mov
faddl
mov
ret
test
xchg
aam
pop
stos
xor
jns
lcall
or
popa
inc
sub
aam
push
pop
shll
dec
stc
mov
inc
out
push
out
xor
cmp
add
xchg
cmp
jle
jg
cld
jo
hlt
leave
fbstp
sub
add
add
add
sbb
push
xchg
testl
and
das
mov
push
pop
int3
cltd
out
bound
arpl
xor
cwtl
les
xchg
sub
xor
sbb
es
mov
inc
adc
sbbb
sub
adc
cmpsb
nop
daa
test
mov
xor
sti
stc
sub
add
mov
fdivl
xchg
ds
xchg
cmp
lea
cmp
aam
dec
aam
push
push
cmp
cld
pop
sbb
out
incl
mov
stos
gs
sbb
lods
imul
cltd
mov
sbb
jbe
mov
shl
add
fwait
sub
mov
mov
sub
jae
movsl
push
push
pop
adc
mov
dec
sbb
jbe
mov
mov
mov
push
pop
lahf
outsl
imul
add
mov
xchg
mov
mov
jno
nop
cmp
cmc
add
add
dec
imul
sbb
fildl
fisttpll
mov
out
loope
adc
and
mov
add
fadds
mov
js
push
call
push
cmp
int
and
mov
in
shr
popl
fnstcw
shll
pop
cmp
sahf
scas
leave
push
dec
rorl
mov
aam
test
test
mov
cld
xchg
adc
xor
push
or
bound
dec
pop
inc
sbb
cmpb
movsb
pop
stos
mov
and
xchg
mov
lods
ja
mov
adc
and
imul
adc
inc
in
movsl
stos
mov
push
ret
mov
roll
stos
pushf
sahf
rcll
scas
xchg
xchg
jns
pop
pushf
and
repnz
add
add
inc
mov
push
push
jmp
sahf
fisubs
or
add
add
add
cli
arpl
jg
cmp
ret
jae
adcl
xchg
xor
jns
test
xchg
push
sbb
clc
xchg
hlt
sti
sub
mov
xchg
xchg
adc
lret
xorb
dec
xor
cmp
mov
lock
fbld
push
hlt
addl
pop
xor
insl
and
inc
fcmovne
movsb
or
cs
and
mov
popf
jl
push
mov
out
jne
fadd
mov
mov
pop
leave
pop
cld
es
cmpsl
lea
aaa
xchg
sub
mov
mov
mov
ret
imul
es
scas
inc
xor
xor
mov
ret
movsl
jo
mov
daa
mov
pop
jge
pop
ljmp
mov
je
mul
loope
push
lds
mov
add
fsubrl
mov
out
cmp
dec
jg
pop
add
cmc
add
add
push
scas
lock
mov
sbbb
lods
or
cmp
fdivl
mov
in
mov
push
xchg
adc
stos
sarb
lahf
iret
arpl
je
cltd
pop
daa
xor
xchg
loop
mov
int
add
in
sub
pop
jg
jnp
movsb
lea
xlat
mov
sub
jbe
push
clc
or
mov
pop
and
jno
fldenv
and
lds
in
int3
insb
sahf
add
mov
mov
push
push
test
jecxz
lock
pushf
insb
testb
mov
adc
lods
sub
clc
jge
rclb
mov
in
sbb
pop
sub
push
cmpsb
mov
lret
in
cwtl
sub
ffreep
xchg
cmp
sbb
in
pop
in
repz
loop
xor
pop
pop
mov
add
add
push
shll
out
xchg
inc
push
mov
pop
add
cmc
add
add
fcompl
add
add
add
mov
outsb
out
or
mov
adcb
jbe,pn
scas
pushf
mov
icebp
stos
mov
aaa
repnz
clc
in
xchg
arpl
sahf
xor
xchg
xor
jb
ror
sub
mov
sub
leave
inc
xchg
adc
push
cmp
gs
or
adc
js
dec
push
ss
add
cwtl
mov
out
movsl
pop
jns
dec
mov
or
pop
call
int3
subl
popa
cwtl
lods
jnp
aam
cmp
mov
ret
mov
out
dec
es
and
xor
lcall
jb
shll
inc
sbb
xlat
mov
lahf
stos
and
test
dec
or
pop
int3
or
fstpt
inc
and
add
stos
push
lcall
inc
and
sbb
xor
cmc
add
add
pop
xchg
icebp
cli
pop
sub
jl
mov
jb
subl
pop
sub
push
add
lahf
je
and
sarb
mov
jp
inc
xor
imul
popf
iret
je
mov
inc
fdivl
insl
dec
and
imul
push
xchg
enter
jge
test
mov
xor
sub
xor
insb
push
imul
popf
mov
fsubp
dec
cmp
ret
push
cltd
sub
mov
inc
push
dec
sbb
lods
dec
mov
dec
dec
movsb
int
ds
sbb
add
roll
jo
mov
aam
cltd
repz
push
sub
cmp
sub
insl
inc
jecxz
push
adc
dec
mov
push
bsf
lea
fsts
iret
and
in
pusha
xchg
cmp
dec
inc
outsl
push
mov
mov
add
bound
imul
cmp
cmc
add
add
adc
xchg
clc
adc
add
mov
movsl
fstps
jnp
sub
mov
outsl
jae
xor
push
push
mov
popa
cmpsb
dec
inc
mov
shll
jns
sub
xlat
outsl
aaa
mov
sbb
sahf
cltd
cmc
cmp
in
push
aas
xchg
mov
cmp
cltd
pushf
jne
ret
cwtl
add
out
mov
testl
ss
push
mov
not
jp
insl
inc
outsb
leave
mov
arpl
data16
jne
cmp
rorl
pop
jg
jge
and
movsb
mov
or
xlat
std
into
xor
cmp
xchg
sbb
int
fwait
mov
pop
aad
sbb
pop
les
ret
xor
ds
mov
add
add
fwait
cmp
dec
data16
xchg
xchg
popa
add
cmc
add
add
push
inc
in
mov
stos
dec
add
int
fldl
fwait
aas
xchg
pushl
jne
sub
push
aam
aas
sbb
lret
sbb
pushf
inc
stc
notb
or
mov
inc
pop
test
xchg
cltd
shl
adc
call
stc
fdivr
dec
addr16
xchg
dec
ja
popa
aad
adc
lret
fistpll
movsl
inc
loop
imulb
add
in
jno
cmp
xor
faddl
dec
mov
stos
adc
jge
imulb
xchg
push
pop
stos
fcoms
mov
fwait
pop
sarl
lock
mov
movsb
adc
lods
pop
rcrb
push
in
add
xor
stos
lods
call
iret
mov
jb
xchg
repz
xor
call
cmp
jmp
sar
in
je
jecxz
or
mov
and
aad
push
lea
inc
push
clc
mov
or
and
jmp
add
cmc
add
add
lods
ss
lea
pop
aaa
mov
fisttps
add
int3
cmpl
inc
paddb
add
subl
scas
sahf
cltd
or
divb
std
fstpl
pop
and
dec
sbb
test
rolb
das
into
test
fdivrp
icebp
dec
add
das
push
nop
mov
sbb
sub
add
test
lcall
sahf
adc
inc
push
inc
or
mov
fwait
les
sbb
in
lret
bound
in
sub
pop
inc
and
in
jmp
jp
dec
mov
xchg
orl
gs
lods
sub
out
aad
pop
inc
lods
jl
xchg
mov
mov
pop
mov
sahf
xchg
cmp
xchg
mov
sarb
sub
push
mov
mov
mov
mov
mov
add
shr
mov
imul
loopne
add
cmc
add
add
hlt
add
pop
or
shl
imul
jle
and
sub
cmp
gs
adc
bound
adc
in
lcall
imul
cmc
mov
les
sbb
or
iret
mov
in
cmp
or
mov
dec
faddl
dec
and
adc
adc
sub
and
data16
xor
bound
mov
mov
cmp
sub
xchg
mov
cmpsl
sbb
outsl
out
imul
inc
jb
fisubrl
ds
nop
mov
mov
jbe
fcomps
pop
mov
mov
sub
cmpl
sub
sub
push
mov
shll
push
adc
movl
lret
push
or
add
add
mov
int3
rorb
popf
loope
aad
add
cmc
add
add
test
mov
lock
xor
mov
arpl
ret
int3
stos
and
push
js
push
jb
jp
adc
sahf
adc
lahf
lret
push
cmp
dec
pop
and
lds
xchg
cli
mov
and
pop
mov
jb
xchg
movsl
sbb
gs
jns
cmp
add
xchg
lods
or
and
push
aad
nop
mov
adc
addr16
and
cmp
dec
push
fbstp
int
or
gs
xchg
inc
and
out
mov
pop
mov
sub
or
mov
test
dec
mov
cmp
dec
in
adc
pop
ss
push
bound
movsl
mov
call
insl
push
andb
pop
mov
fs
ret
mov
out
jp
mov
sti
rorl
add
sub
add
add
mov
cmp
ret
fisubl
add
cmc
add
add
dec
add
add
sbb
xchg
and
jl
push
inc
push
ja
xchg
into
pop
pop
push
loope
pop
dec
sub
jns
jo
cmp
push
xchg
imul
push
loopne
inc
mov
arpl
andl
adc
mov
ljmp
jo
mov
xlat
cltd
nop
ds
into
sbb
pop
shll
inc
pop
cmpsb
or
cs
push
xchg
add
cli
or
lock
push
jmp
fidivrl
loopne
jo
inc
lret
cltd
pop
jge
or
rcr
or
or
ljmp
add
lret
xor
pusha
popa
dec
lods
outsl
cmpl
adc
scas
scas
in
pop
mov
gs
loop
pop
cwtl
popa
lret
sbb
mov
out
add
add
movsb
jae
jnp
mov
lods
push
adc
mov
mov
add
add
pop
push
jno
mov
scas
sub
es
jbe
and
xor
push
adc
xor
cltd
vsubsd
shrl
outsb
test
fisubs
sti
xor
frstor
sub
push
hlt
inc
jae
inc
pop
or
or
pop
icebp
cmp
push
out
or
aam
daa
dec
fmuls
repz
dec
mov
push
mov
call
rclb
push
insb
sub
int
fcmovb
mov
pusha
aas
insb
mov
or
fidivs
sbb
mov
jle
ret
push
popa
test
or
sbb
or
leave
push
cs
aad
sub
dec
push
sarb
add
mov
fists
cmp
cmp
inc
repnz
mov
adc
add
fbstp
scas
adc
lahf
mov
and
mov
add
cmc
add
add
or
xchg
jle
inc
das
stc
dec
fsubl
mov
arpl
fwait
xlat
test
sti
sub
mov
mov
dec
jl
adc
pop
aaa
and
es
and
push
dec
test
enter
leave
push
hlt
js
inc
sub
divb
popf
mov
sbb
and
pmaddwd
cld
mov
lret
pop
shrb
ja
mov
test
cli
fistps
ljmp
incb
into
stc
cmp
and
aam
dec
icebp
js
jg
aaa
jo
sub
push
sahf
fcom
cmp
add
xor
lret
push
xchg
xchg
popa
jo
xchg
dec
or
iret
mov
addl
mov
dec
sbb
call
inc
mov
rolb
add
mov
mov
sub
push
add
cmp
xchg
lods
js
inc
cmp
xchg
sti
add
pop
or
sbb
cmpsb
vpsubusw
jo
or
jecxz
ds
pop
rcrl
mov
push
outsb
xchg
out
adc
nop
ret
mov
mov
test
scas
out
jecxz
subl
mov
lret
push
dec
in
jns
aas
rcrl
mov
inc
pop
andb
inc
pushf
dec
ljmp
push
fwait
pop
out
call
in
push
inc
loop
xchg
cmove
push
fsubrl
fdivrs
sti
int3
xor
cld
mov
mov
mov
sbb
daa
push
int3
xor
cmp
xor
dec
mov
adc
out
cld
xor
insb
push
fwait
repz
sbb
inc
andb
ss
sbb
fdivrl
pop
aaa
add
pop
mov
pop
pop
jb
add
add
push
into
push
cmp
sub
cmp
xchg
sahf
imul
add
jnp
cmp
xchg
xchg
stc
stos
sub
lea
cltd
and
leave
lret
sti
cld
test
out
push
mov
hlt
pop
xchg
dec
stos
lcall
loopne
xchg
dec
aam
fs
inc
add
or
mov
test
std
scas
xlat
mov
or
mov
pop
jo
lods
push
cvtps2pd
pop
lods
add
sti
out
das
xor
imul
loope
cmp
xchg
cmc
mov
test
sub
mov
decl
and
xorl
kmovw
push
add
lahf
xchg
mov
xchg
in
inc
cmp
mov
adc
insl
xchg
stos
and
xchg
leave
cmp
cmc
ficomps
and
jnp
jle
fcoms
cld
xchg
jns
aam
pusha
lcall
cmp
cmp
sbbb
stc
outsb
add
add
xchg
inc
shl
xlat
mov
fisttps
jo
ja
ret
add
cmc
add
add
fidivrs
ret
pop
setl
aas
shl
cmpsb
pusha
insb
and
or
not
pop
js
mov
dec
xor
pop
mov
mov
fmull
jp
shrb
leave
sahf
pop
jae
stc
xor
fdivrs
inc
cli
sub
mov
pop
lods
in
es
push
inc
andl
repnz
mov
mov
leave
fstpl
xchg
sahf
adc
popf
inc
ljmp
push
fdivrs
push
push
mov
adc
adc
push
mov
xchg
dec
xchg
mov
mov
out
test
sub
mov
loop
inc
adc
aaa
daa
push
fstpt
inc
cwtl
jns
dec
inc
and
jno
jecxz
ficompl
and
in
cli
iret
or
js
inc
lcall
jbe
notl
pusha
push
xor
out
and
repnz
clc
mov
jge
test
xchg
cmpsb
add
add
lahf
pop
bnd
mov
mov
add
add
add
test
dec
pushf
rorl
jmp
sti
lret
popf
out
nop
xchg
daa
cld
in
insb
jno
cmp
int
mov
aaa
mov
sub
pop
fists
push
sub
in
in
add
xor
add
cmc
js
adc
pop
jmp
icebp
jmp
pop
ficompl
xchg
hlt
xor
push
cs
repz
leave
out
loope
pop
adc
icebp
jbe
mov
out
or
and
jbe
cmp
jmp
dec
or
rcrl
clc
cwtl
cltd
in
addr16
mov
mov
dec
jnp
dec
repnz
ja
daa
mov
outsb
in
lods
ret
push
cltd
loop
rcl
int3
push
js
clc
cmp
or
mov
out
add
popa
popf
enter
jo
and
mov
adc
leave
mulps
add
add
idiv
jg
data16
aad
wrmsr
cwtl
jge
add
cmc
add
add
or
inc
sbb
push
enter
cmp
popf
pop
divl
insb
dec
test
inc
enter
loop
in
and
roll
fsubrs
inc
movsl
push
xchg
adc
lret
ljmp
repnz
arpl
es
test
mov
and
add
sbb
iret
mov
cmp
mov
xchg
sbb
insl
pop
sub
push
push
mov
jno
cli
xor
adc
nop
and
inc
mov
xor
adc
movzbl
sti
xlat
aas
mov
sub
lret
lret
insl
sti
orl
mov
mov
les
int
xchg
jbe
repz
push
mov
repnz
mov
iret
mov
mov
push
pop
cmp
mov
or
mov
jne
or
add
pop
mov
movsb
inc
gs
loope
js
jb
add
cmc
add
add
push
cmp
stc
fcoml
sub
dec
rdtsc
push
xorl
dec
in
dec
jle
and
sbb
int3
in
inc
aad
jno
ret
arpl
mov
ret
lret
arpl
leave
loop
mov
xor
jecxz
fmuls
push
and
test
inc
xchg
xor
or
jae
inc
push
aas
xchg
sub
test
xor
ss
sbb
outsb
ja
lods
adc
addb
scas
and
mov
lds
stc
daa
je
loopne
push
dec
aaa
loope
xorb
dec
mov
jne
cltd
ja
or
push
mov
jge
pop
stos
loop
movsl
push
shrl
std
or
shrl
test
repnz
lock
inc
push
je
mov
cmp
jge
aam
pop
gs
fwait
icebp
add
add
repnz
movsb
jle
mov
mov
outsb
add
cmc
add
add
je
mov
cli
jns
push
mov
push
inc
lahf
adc
cmp
insl
hlt
cltd
lods
sub
fwait
jne
jecxz
inc
call
sub
cmpsb
or
mov
push
add
or
fmul
dec
loope
cli
push
push
lret
out
test
arpl
imul
into
mov
mov
adc
cmpsl
rcr
xchg
push
lods
std
sub
pop
mov
ss
lods
and
xor
lcall
or
xchg
add
push
fisttpll
jo
jl
js
sub
lods
stos
dec
cmp
jae
cmpsl
push
push
dec
popa
dec
cld
jo
notb
enter
adc
mov
jb
xchg
cli
out
xlat
jg
push
sbb
xor
dec
cmp
in
sub
shl
pop
xor
call
mov
repnz
add
add
jmp
sub
lcall
add
add
add
inc
jae
pusha
lcall
call
pop
jno
test
lcall
mov
xor
jne
scas
jno
mov
in
div
fs
pop
fistl
test
jb
aad
inc
aam
add
scas
ret
scas
test
js
sbb
mov
icebp
scas
mov
mov
mov
adc
cmp
mov
pop
std
out
sbb
outsb
iret
lret
pop
bound
sub
pop
pop
push
movsl
cld
mov
and
ss
sbb
addr16
in
add
rorl
imul
jo
jp
sub
jno
in
cld
cmp
xor
pop
mov
call
mov
dec
dec
cmc
jno
xorl
fcomp
repz
push
or
jge
sahf
mov
rorl
mov
rcr
dec
popa
fsub
add
add
mov
fnstenv
xchg
out
lcall
add
mov
lock
js
test
sti
xchg
inc
fiaddl
pop
push
aas
lahf
xchg
inc
lcall
pushf
xchg
movsl
sar
mov
mov
test
or
sbb
fwait
cmpsl
into
fwait
std
roll
pop
and
lret
inc
popa
sti
stos
add
jns
dec
rorb
arpl
movsb
mov
leave
test
xor
mov
pop
into
mov
adc
mov
sub
mov
pop
hlt
out
out
sub
sub
clc
int3
xor
sbb
adc
dec
push
rclb
lret
fcomps
dec
mov
pop
in
cmp
or
inc
bound
das
pop
fs
in
push
xorl
mov
daa
leave
sub
or
dec
or
cmp
das
popf
add
or
je
sbb
add
add
cld
je
jbe
jmp
lea
xchg
imul
add
add
add
leave
in
push
xor
les
jg
mov
cld
pop
roll
mov
mov
push
fisttpl
mov
inc
pop
dec
fcmovnb
mov
sbb
sbb
push
push
mov
push
aam
in
in
or
nop
faddp
jb
imul
inc
mov
fmul
pop
mov
or
push
pop
fs
add
je
fwait
daa
mov
mov
add
and
cmpsl
xchg
xchg
dec
aaa
or
pop
pop
in
push
xchg
cs
mov
inc
mov
lcall
mov
cmpsb
mov
jl
xchg
dec
pop
mov
insl
jnp
stc
fs
xchg
and
cmp
xchg
call
push
arpl
adc
lods
xchg
add
neg
outsb
repnz
pop
ljmp
pop
insb
jnp
nop
cltd
adc
jg
xor
add
push
cltd
jmp
fcmovnbe
cld
xor
imul
out
jb
add
add
add
or
lahf
fisubrs
sub
lods
dec
lea
cmp
loope
test
xor
add
cmp
inc
daa
mov
orb
push
sbb
adc
cmp
cmp
sub
mov
imul
leave
movsl
xor
pop
rcll
dec
inc
dec
adc
movsl
cs
jo
inc
sub
and
inc
data16
in
pop
out
mov
mov
push
pop
aam
xor
sbb
lods
test
idivl
or
pusha
push
in
je
jbe
out
dec
xlat
addr16
xchg
ljmp
call
xchg
shlb
dec
add
repz
iret
mov
sbb
push
jb
jl
dec
or
cmp
or
mov
daa
xor
push
stos
adc
and
xlat
xchg
test
popa
aaa
and
adc
sub
mov
add
mov
mov
push
jg
pop
jne
stos
dec
psrad
jae
add
add
add
jle
popf
adc
pop
and
cmp
mov
ret
mov
pushf
scas
testl
or
mov
mov
les
popa
sbb
fisubs
sub
cmp
les
xorb
sub
xor
push
xlat
decl
mov
shll
pop
sti
pop
cmp
jbe
movsl
dec
jecxz
mov
jle
pushf
adc
add
xchg
add
fistl
loope
inc
and
in
jne
fstpt
jecxz
and
add
and
and
testb
pop
gs
pop
push
pop
xor
and
push
pushf
fidivs
cld
jmpw
jecxz
int3
or
mov
cmpsb
jo
in
cld
test
in
xor
enter
aad
xchg
xchg
xchg
pusha
jae
cli
iret
and
add
iret
mov
fucomip
addr16
pop
popf
and
add
add
jp
mov
aaa
xor
pop
xor
jnp
imul
mov
sub
xor
pop
enter
inc
mov
roll
adc
lods
addr16
or
das
xor
test
and
pop
dec
rdpmc
mov
and
scas
xor
inc
pop
mov
xchg
add
sbb
xchg
ret
or
pop
pop
mov
pop
xchg
mov
push
mov
movsb
adc
sbb
mov
nop
sarb
out
aam
outsl
ja
xor
inc
dec
popa
lret
xchg
aas
ficomps
cvtpi2ps
mov
lcall
ret
dec
and
test
sub
and
or
cmp
add
or
sbb
loop
mov
jae
pop
je
dec
shll
movsb
sbb
sbb
pop
rorl
push
inc
cmc
jecxz
repnz
add
imul
dec
out
iret
jmp
cmpsb
add
or
add
add
add
loopne
mov
icebp
cmc
call
add
xorl
inc
test
mov
stos
jl
mull
xlat
movsb
and
adc
dec
in
mov
and
jno
sbb
jo
dec
cmp
push
dec
mov
push
xchg
in
pop
jo
mov
and
arpl
rclb
aaa
ret
mov
xor
sub
mov
cltd
adc
loopne
stc
out
xor
jns
stos
add
mov
xchg
sahf
sbb
sahf
pop
popf
push
loope
mov
lret
cmpsl
jle
inc
scas
inc
imul
pop
in
test
jno
gs
push
lret
push
loopne
in
pop
test
cmp
push
fildll
mov
push
dec
mov
pop
jge
dec
mov
aam
out
fmuls
fstl
mov
jae
push
cltd
cmp
sbb
in
jne
cmc
add
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
lret
jge
adc
jbe
add
add
add
jbe
frstor
mov
adc
jge
sti
and
mov
fmul
add
push
jl
lcall
sahf
test
into
popa
push
inc
dec
jo
adc
mov
je
cli
lds
in
push
adcl
sub
test
ror
sahf
pop
and
pop
pop
int
fimull
ljmp
call
mov
xor
push
mov
jnp
mov
nop
mov
pusha
xor
xchg
push
or
pop
addr16
stos
fbld
sub
lods
inc
jg
out
jnp
popl
sub
jmp
and
cmp
and
ja
idivl
add
mov
lods
shlb
subb
or
sbb
mov
arpl
mov
lcall
inc
imul
sbb
jne
inc
xor
lcall
mov
add
in
lods
imul
neg
std
stc
idivl
cmp
add
cmc
add
add
pusha
cli
pusha
dec
aad
std
loope
sub
jp
mov
das
cmp
out
or
push
insl
test
xchg
pop
fdivs
push
mov
adc
mov
bound
sbb
dec
test
sbb
out
mov
mov
fdivrl
jg
xor
xorb
jecxz
lcall
aas
push
rcrb
cmp
dec
stc
lret
mul
outsl
mov
push
aaa
mov
inc
fcomps
push
daa
adc
fs
sbb
or
and
pop
test
bnd
sahf
or
testb
and
and
fisttpll
repz
mov
int
sub
push
mov
popa
jbe
imul
ja
xor
dec
cld
out
pushf
lock
add
xor
fistl
jne
out
out
cmp
jp
pop
test
fdiv
cmp
sub
add
add
cs
mov
cmp
stc
ja
add
add
add
data16
decb
test
hlt
inc
mov
rorb
mov
in
inc
sub
ss
mov
dec
ret
mov
insb
popf
adc
cmp
jp
ds
or
pop
fcmovb
in
xchg
bound
rcrb
adcl
mov
out
push
into
icebp
xchg
inc
clc
out
orb
dec
or
fnstsw
lret
js
out
pop
pop
inc
adc
and
ljmp
mov
cmp
mov
xor
into
adcb
inc
lret
lcall
mov
sbb
out
add
pop
test
iret
jne
xchg
aad
push
mov
movsb
fistpll
pop
pop
cld
mov
in
rclb
filds
jbe
or
js
push
leave
iret
adc
cmp
add
lcall
out
dec
jg
aad
sbb
cmp
js
add
add
add
mull
jmp
arpl
imul
nop
orb
push
push
cmp
pusha
jge
addr16
dec
add
mov
mov
das
movsl
add
loope
adc
jbe
ret
loope
adc
scas
cld
das
dec
add
es
scas
adc
xlat
push
mov
or
xor
jmp
in
lods
adc
outsl
fsubrs
add
xchg
cmpsb
sbb
ljmp
jg
aam
sub
int
repz
xor
pop
cld
cli
xchg
jbe
rorb
aaa
mov
xchg
popf
dec
pmulhuw
cld
repnz
pop
lods
int3
sbb
push
outsb
dec
stc
icebp
pop
or
push
lcall
divl
push
psubusb
movsb
lds
ja
cmpsl
fstpt
inc
xor
sbb
add
daa
sub
ja
mov
paddq
jns
add
add
add
jge
xor
movsl
nop
ljmp
lret
adc
jbe
adc
cli
in
fisubs
lret
js
xor
mov
in
cmp
repz
sub
in
or
mov
jmp
std
ss
cmp
mov
aad
psubd
push
out
lret
dec
push
push
pop
mov
push
jnp
ss
mov
dec
xor
and
xchg
sbb
mov
in
aaa
mov
aad
jg
sbb
and
xor
jnp
cli
int3
or
push
pop
pusha
lock
lods
lods
mov
nop
add
sub
repnz
cmp
fisttpl
inc
and
aaa
push
xchg
sbb
ret
mov
stos
mov
ss
stos
add
int
mov
jnp
jge
xchg
sub
jp
add
add
add
xchg
loop
inc
push
sbb
xor
mov
push
movsl
mov
paddsw
stos
cmp
rol
dec
jno
adc
cld
sub
test
push
mov
push
in
mov
das
ja
mov
mov
in
sub
iret
mov
mov
aaa
cmp
sbb
ds
js
in
mov
popf
sbb
push
addr16
xor
leave
je
xorl
cmpsb
cmp
adc
xor
jbe
dec
or
add
jne
add
xchg
sub
mov
fisttpl
movsl
lret
pop
jge
rcl
fsts
jb
test
push
lods
pop
xchg
sti
pop
sbb
and
xor
dec
fsubr
dec
outsl
cmp
adc
push
dec
or
lahf
addr16
es
cmp
in
lods
pop
lahf
jb
jne
insl
mov
mov
fisttpl
push
clc
mov
add
xchg
push
mov
cli
xchg
jle
mov
mov
mov
int
add
cmc
add
add
pop
sub
mov
out
sub
cmp
fwait
and
sbb
pop
mov
push
arpl
sarl
mov
cld
mov
inc
in
dec
push
push
test
cmp
test
fwait
add
addr16
cltd
cmpsb
rcrl
je
testl
xor
jecxz
cmp
insb
mov
in
inc
sub
pop
xchg
mov
jnp
test
mov
outsl
imul
jns
arpl
icebp
call
inc
mov
add
mov
cli
add
dec
call
and
sbb
dec
outsl
pop
mov
aad
inc
les
adc
jae
jle
outsb
sbb
aas
sub
testb
jae
test
jmp
or
xor
mov
mov
push
push
mov
push
vpunpcklbw
imul
cltd
repz
add
add
fwait
jnp
aad
gs
into
add
aad
mov
jl
add
add
add
mov
adc
dec
shll
xor
jae
mov
sahf
mul
inc
js
cmp
out
push
outsl
repz
fdivrl
mov
fdivrs
test
pop
sahf
jno
sub
pop
inc
scas
sbb
sbb
pop
gs
paddsb
jnp
shll
fidivl
push
out
or
or
adc
sub
nop
out
aam
sti
notl
mov
xchg
inc
mov
jge
fwait
dec
imul
xlat
and
fldl
pushf
cmp
jmp
xor
push
fwait
xchg
shl
and
fimuls
xor
sub
rol
inc
push
xchg
mov
dec
and
cld
and
or
scas
mov
sub
jl
sub
outsb
or
sub
lock
inc
xor
les
add
add
std
mov
enter
movsl
mov
add
cmc
add
add
cmp
dec
ret
mov
pop
mov
xchg
mov
js
insl
jae
loopne
mov
jle
and
fidivrs
hlt
xor
adc
mov
mov
sub
ljmp
mov
mull
dec
mov
dec
and
sbb
and
mov
shll
pop
lds
int3
lock
into
idivl
cs
push
dec
jo
cmp
mov
sbb
cmp
jge
inc
xchg
jb
ja
arpl
pusha
int
adc
or
or
xchg
mov
or
mov
stos
inc
mov
jp
std
roll
adc
mov
cmp
daa
hlt
and
lahf
stc
xor
or
mov
shl
inc
pop
pop
mov
lret
jno
loopne
decb
jecxz
and
das
shlb
mov
add
adcl
xchg
ffreep
dec
imul
mov
adc
add
push
mov
les
sbb
jb
sbb
mov
pop
pop
lcall
lods
jmp
mov
and
sbb
xor
push
cmpsb
mov
mov
std
add
pop
pop
or
xchg
xor
jl
std
ja
les
rorb
enter
movsl
sub
out
mov
sbb
nop
lods
notl
mov
mov
in
dec
mov
ja
mov
jecxz
mov
dec
xchg
push
fs
pop
lods
leave
pop
pop
jg
push
es
dec
sub
xchg
pop
mov
xor
mov
inc
lret
adc
test
xchg
dec
or
or
dec
or
xchg
sbb
rcrb
gs
es
lea
mov
insl
add
add
bound
in
pop
test
xor
add
cmc
add
add
ja
lods
mov
mov
xchg
mov
outsb
jns
xchg
ljmp
xchg
ja
cmp
cmpsb
cmp
sarb
addr16
stos
or
daa
loope
dec
inc
sti
inc
ficoml
xchg
jo
inc
xor
and
and
movsb
fmull
fsubp
push
sbb
jns
push
or
mov
daa
mov
fs
dec
test
xor
sbb
lret
xchg
arpl
rclb
adc
sbb
sbb
call
sbb
pop
stc
out
inc
or
inc
std
cltd
xchg
inc
add
add
push
xlat
test
stc
jl
outsl
aas
fcompl
xchg
fdivs
push
jns
std
divl
push
jge
test
call
dec
and
sti
cmpsl
dec
add
fistpll
lcall
add
sahf
mov
add
add
add
divl
bound
cwtl
dec
xchg
addb
cmc
add
add
jecxz
js
mov
lods
push
cmp
clc
xchg
ret
xor
cmp
xchg
mov
jmp
shll
xchg
iret
push
push
lret
sub
sbb
dec
lods
gs
or
mov
dec
mov
mov
inc
add
test
pop
lods
imul
push
dec
sub
mov
inc
lds
xor
test
lahf
xchg
inc
iret
fs
mov
cltd
push
mov
mov
jg
movsb
iret
daa
xchg
insl
mov
sbb
jns
jns
add
mov
or
fists
out
ret
adc
sbb
cmp
cmp
add
mov
xchg
dec
bound
nop
ljmp
out
adcb
out
push
push
jl
ss
lret
cmp
sub
andl
mov
fistpll
add
add
fisubs
mov
push
mov
push
push
mov
add
jp
divb
fnstsw
clc
cmp
sbb
xchg
ret
out
push
mov
sbb
out
pop
mov
add
lret
sti
ds
scas
jnp
adc
pusha
pop
mov
inc
dec
adc
gs
pop
mov
pop
mov
sub
shrb
jge
dec
lea
inc
jno
adc
mov
cwtl
push
scas
in
loope
or
dec
pop
mov
cwtl
jns
inc
pop
mov
inc
add
lods
add
add
movsb
movsl
sub
xchg
test
pop
jns
iret
sti
jmp
mov
fwait
jecxz
pop
jle
roll
cmc
jo
sarl
ja
cli
aaa
sub
sbb
or
mov
jnp
dec
mov
jg
lock
in
add
shlb
mov
adc
add
addb
add
out
scas
mov
divl
aaa
dec
dec
test
lods
jbe
fisttpl
outsl
or
stos
inc
mov
sbb
mov
cmpsl
lea
and
mov
inc
fs
xor
cmc
sub
fdivrs
das
repz
mov
sahf
jp,pn
mov
dec
in
mov
push
arpl
and
and
jmp
test
inc
mov
enter
or
dec
or
xor
pop
out
lret
clc
pop
cmc
lret
es
jmp
and
jl
mov
pop
jmp
push
sbb
add
movsb
lcall
clc
cmc
rcl
movb
lcall
sahf
call
mov
inc
xchg
sar
inc
clc
cmp
addr16
pushl
adc
inc
push
xchg
notb
xchg
iret
sub
les
xorl
add
orb
jle
insb
xor
cmpsl
add
add
cmc
add
add
inc
xchg
imul
inc
scas
hlt
iret
push
incl
popf
sbb
jl
test
push
mov
jge
mov
jne
insb
pop
loopne
jb
fists
mov
pushf
outsb
xchg
jp
xchg
test
cld
out
cltd
aaa
test
nop
mov
mov
sbb
addr16
sub
xor
repz
cmp
jmp
test
sbb
sbb
inc
cmp
or
mov
sub
aas
rcll
frstor
je
rolb
popf
or
cmp
xor
cld
sbb
inc
jmp
outsb
or
lods
movsb
adc
push
bound
pop
call
xor
cwtl
inc
lds
sbb
xchg
pop
mov
adc
inc
fs
pop
pop
inc
adc
ffree
jmp
sub
add
jo
ja
std
stos
lods
and
fnsave
test
add
add
add
test
pop
jecxz
or
inc
dec
fidivl
mov
icebp
dec
test
ljmp
scas
jle
jge
xlat
ret
test
jae
xor
lcall
popf
mov
mov
xor
mov
mov
and
das
push
mov
aas
lods
hlt
in
cli
cmc
mov
andb
fisttpl
add
mov
lahf
in
xor
dec
fwait
std
sub
mov
jp
ret
rorl
test
sub
xchg
mov
decb
fcomi
fs
bound
add
inc
sub
jge
and
dec
into
lret
xor
sub
outsb
dec
and
fistpll
std
or
adc
add
dec
adc
pop
xchg
jge
mov
or
jp
loopne
mov
arpl
cmp
rcr
mov
sbb
mov
xchg
xor
add
add
cmpsb
arpl
je
insl
fisttpl
test
add
add
add
jp
cmc
xor
aas
adc
sbb
cmp
pop
sbb
inc
nop
leave
ret
lahf
jmp
fimull
stos
out
clc
stos
lahf
aaa
pushf
mov
aas
insb
inc
sbb
add
dec
pop
sbb
icebp
in
incl
cmpsl
pop
scas
ss
mov
movsb
lea
mov
mov
mov
imul
sahf
xor
xchg
inc
pop
mov
jnp
lods
cli
fwait
mov
pop
into
fcmovne
pop
mov
in
mov
and
pinsrw
add
icebp
icebp
imul
pop
cmpsb
pushf
sub
inc
sub
dec
ret
or
cld
adc
dec
fdivrs
movsl
shlb
addr16
mov
xlat
pop
pop
ret
cwtl
xchg
lea
cmc
cmpsb
inc
loope
xchg
das
xchg
push
arpl
daa
mov
lods
sub
add
add
cmp
cli
mov
pop
rcrb
push
xchg
add
add
add
sti
adc
adc
cmpl
shll
scas
sub
xchg
gs
scas
imul
dec
push
mov
into
in
pop
cwtl
cmc
push
mov
mov
in
sbb
lahf
jg
dec
and
scas
icebp
xchg
push
insl
fdivr
lds
jmp
or
cltd
fcompl
ja
into
mov
lcall
in
test
fdivrs
jae
mov
pop
in
fsubrs
jnp
cli
sbb
jp
mov
jmp
and
pop
dec
xorb
movsb
scas
filds
popf
pusha
mov
and
adc
cmp
out
push
cmp
pop
fiadds
jbe
xchg
out
jne
das
pop
enter
ror
mov
sub
dec
push
xorb
test
in
ja
movsl
xchg
repnz
scas
mov
adc
add
test
ljmp
pop
jmp
dec
xchg
add
add
add
fdivrl
repz
cmp
mov
fcompl
mov
mov
cwtl
aas
push
gs
adc
push
lret
sbb
ss
mov
loopne
je
adc
cmpb
dec
mov
sub
dec
lret
adc
cmp
mov
push
adcl
cwtl
outsb
mov
add
lea
outsb
int
xor
sub
cmpsl
sahf
es
jne
into
cltd
add
push
mov
jns
pop
imul
sbb
push
leave
mov
mov
mov
dec
mov
fsubrs
adc
xlat
mov
jmp
inc
xchg
in
lods
cmp
mov
push
addr16
xchg
cmp
cld
repnz
xchg
iret
jns
mov
inc
repnz
cld
sub
out
add
add
xchg
xchg
jns
incl
mov
mov
add
add
add
cmc
jl
ret
dec
mov
fcompl
adc
stos
les
adc
or
push
xchg
out
aam
push
push
das
push
test
inc
das
xor
ds
jmp
sahf
pop
in
stos
cmpsb
lods
pop
add
pop
mov
or
lock
cmp
test
push
stos
in
lret
cltd
add
bound
xchg
pop
aam
mov
push
popa
adc
enter
inc
in
push
std
sbb
in
imul
cltd
in
sbb
mov
jns
mov
fistpll
sbb
sbb
js
jae
mov
sbb
jae
xchg
sbb
rorl
clc
jb
addr16
stos
push
enter
jmp
mov
or
sti
adc
icebp
jl
push
mov
aaa
lods
jno
push
rolb
aaa
out
add
add
lcall
aaa
out
adc
mov
add
add
add
pop
sbb
movsl
inc
adc
inc
xchg
out
cmpsl
test
psrld
sahf
leave
mov
test
adc
pop
push
and
or
mov
sar
mov
push
jae
lcall
rcrb
dec
ret
inc
adc
adc
xchg
in
fcmovbe
push
xchg
adc
das
jmp
out
repz
mov
fists
icebp
add
andw
dec
and
dec
sahf
or
stos
inc
cmp
call
mov
push
xor
shll
push
ljmp
movsb
jp
cld
dec
dec
imul
cmp
sbb
call
aad
sbb
addr16
xchg
ljmp
sbb
arpl
push
cmp
cltd
ret
pop
out
inc
add
add
mov
idiv
fst
inc
sahf
pop
pop
push
stos
sub
add
push
xor
stos
inc
repz
int3
mov
mov
fsub
cltd
pushf
push
stos
dec
cmpsb
pop
mov
add
lret
dec
xorl
rcrl
dec
push
jecxz
sahf
clc
cmp
sbb
in
and
or
out
mov
sbb
sbb
mov
popa
cmp
cmpsb
lret
dec
xchg
adc
jle
mov
cmp
sahf
imul
out
lds
sbb
jb
decl
adc
ror
bound
mov
jmp
xchg
inc
test
stos
push
aas
call
subl
fbstp
add
inc
insb
mulb
mov
inc
inc
ds
dec
sbb
push
lahf
sbb
add
cld
dec
jmp
call
lret
bound
ja
movl
int
inc
mov
out
adcl
mov
sarb
add
add
call
and
nop
cmc
jecxz
sbb
add
add
cli
mov
adc
out
mov
dec
bound
in
dec
cmpsb
or
stos
xchg
stc
adc
or
in
push
xchg
sbb
dec
push
or
xchg
or
mov
not
flds
sbb
stos
cltd
dec
cli
sbbl
outsb
jp
xchg
sub
rcll
shll
adc
test
push
fmul
mov
repz
push
movsl
add
sbb
cmp
out
push
bound
sub
and
divb
push
lods
test
push
pushf
outsb
xchg
movsb
mov
xchg
inc
jb
repnz
loope
mov
test
fxch
lret
pop
mov
push
add
mov
mov
mov
mov
mov
sti
push
idivl
xor
mov
mov
mov
mov
mov
or
inc
aad
push
adc
xchg
add
add
sti
iret
and
repnz
xchg
adc
add
insb
repnz
js
lcall
ja
mov
in
outsl
xchg
in
fstl
adc
cwtl
add
lods
push
and
cmp
imul
push
mov
inc
lock
je
dec
xchg
mov
xor
gs
mov
xchg
adc
cwtl
cmp
outsl
mov
in
jae
ret
or
add
xor
insl
adc
cmp
leave
bound
lods
push
popa
scas
aaa
sub
mov
push
repz
add
and
movsl
push
xchg
pop
pop
dec
testb
xchg
gs
out
or
ret
int
lcall
out
inc
pop
jb
xorl
into
or
or
dec
rorb
sbb
jl
inc
pop
movsb
mov
loopne
dec
dec
xor
jbe
cs
pusha
xchg
adc
dec
cltd
sub
mov
jnp
sti
pop
test
or
push
dec
xchg
scas
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
fimull
iret
pop
lea
add
add
add
int3
sub
push
gs
or
fwait
xor
loopne
sub
add
lret
push
sbb
inc
in
cld
jmp
mov
imull
mov
pop
mov
push
hlt
jne
mov
incb
ja
in
jne
pop
hlt
cld
vpinsrw
adc
nop
xor
cmp
mov
push
or
adc
lock
jbe
lods
xchg
jp
inc
arpl
test
mov
and
add
xchg
or
sti
jb
add
fs
mov
pop
mov
cmc
mov
dec
pop
leave
xchg
lds
mov
dec
xor
xlat
fldcw
cmp
fiaddl
clc
cmp
mov
inc
repnz
cmpsl
lock
nop
pop
int
lock
adc
sbb
pop
pop
stc
loop
sbb
decl
fiaddl
add
mov
mov
into
jnp
lods
loop
lea
add
add
add
jl
pop
adcl
xor
and
clc
das
das
sbb
lods
repz
add
lock
push
lds
out
adc
xchg
fcoms
ljmp
jbe
shll
jl
in
fcmovnb
out
pop
je
in
jp
aam
cld
mov
cmpsl
outsl
mov
sbb
fadd
in
mov
mov
mov
aad
fnstcw
mov
vpcmpeqq
push
push
and
fs
lds
mov
mov
shlb
cmpsb
dec
push
ljmp
jmp
sbb
pop
mov
leave
sbb
ds
out
insb
pop
sub
xchg
jo
or
sti
push
dec
push
mov
imul
sbb
or
mov
sti
lret
add
add
pop
test
ljmp
jp
cmp
leave
dec
clc
dec
icebp
mov
add
add
add
negb
mov
fidivrl
xchg
mov
or
jp,pt
sbb
sbb
inc
pop
gs
stos
jno
pop
mov
and
adc
int3
and
rorl
xchg
hlt
sbb
and
push
sbb
push
leave
ss
and
xchg
sub
mov
xor
xor
dec
cltd
mov
cli
cmpsl
mov
pushf
jle
jg
mov
or
pop
pop
mov
cltd
push
fwait
jnp
dec
std
pop
rol
xchg
sub
icebp
pop
or
cmpsl
cmp
pop
jb
mov
mov
jg
leave
xchg
je
inc
lods
cmp
sbb
inc
dec
pop
pop
mov
cmp
std
or
and
and
lret
jmp
scas
push
mov
jmp
push
fildll
into
inc
filds
cmp
repz
push
and
push
sbb
xor
add
arpl
jnp
sbb
xchg
sub
pop
ss
popl
add
add
add
jle
cmp
or
mov
push
jno
das
out
xor
lods
xchg
rsqrtps
mov
dec
add
xor
pop
std
mov
in
hlt
lock
adc
mov
cwtl
xlat
addl
mov
or
add
loop
shlb
stc
mov
cmp
hlt
inc
lea
lcall
push
xor
sbb
fmuls
scas
call
stos
pop
mov
stc
rorb
sbb
pop
pop
shlb
inc
pop
shrb
push
subb
mov
cli
inc
in
ret
ss
cmp
fsubl
imul
add
sbb
jne
adc
pop
push
aaa
mov
xchg
dec
lcall
cmpsl
aad
test
add
mov
xor
cmpsl
lahf
sbb
in
pop
in
mov
pop
add
add
aas
or
mov
imul
sbb
add
cmc
add
add
add
dec
jne
add
lahf
leave
push
xor
iret
movsl
in
sbb
xchg
add
gs
mov
mov
xchg
in
push
xor
es
dec
test
sbb
cld
pop
mov
cmpsb
mov
mov
daa
fucomp
sbb
mov
cwtl
and
int
sub
sub
xchg
scas
adc
sbb
imul
mov
add
aam
loopne
lret
push
pop
jl
lock
mov
call
fcompl
leave
mov
and
inc
xor
dec
inc
ffree
add
cmpsl
insb
push
jmp
movsl
and
jecxz
mov
jmp
lods
add
mov
lret
sub
cs
dec
fdivs
outsl
mov
rorl
or
add
and
cmp
push
xchg
es
mov
xor
push
popf
or
add
add
push
outsb
fdivrp
sub
lcall
add
cmc
add
add
adc
mov
mov
testb
and
mov
xor
shrb
dec
negb
testb
lea
or
xchg
mov
xchg
sbb
adc
cmpsl
xchg
jmp
push
jle
or
xchg
pop
es
pop
jb
mov
inc
add
and
pusha
dec
daa
adc
in
dec
inc
sub
mov
pop
icebp
mov
daa
sub
lock
popa
add
jle
cmp
mov
lock
lods
lret
jnp
pusha
inc
xor
loope
mov
push
mov
mov
xor
pop
loopne
repz
lcall
adc
shll
pop
das
fisttpl
cwtl
inc
insl
movsb
cli
lret
and
mov
stc
mov
mov
pushf
cld
xchg
xor
leave
aaa
flds
add
cmp
mov
in
ja
fs
xchg
add
cmc
add
add
jns
xchg
ss
out
je
mov
xor
outsl
cmpsb
sbb
test
jmp
mov
xchg
std
sbb
and
stos
repnz
scas
loop
push
fildl
mov
push
mov
dec
add
xrelease
ss
scas
fs
cli
decb
pop
test
cmpsl
ficoml
inc
rcr
fldt
dec
scas
movsl
ss
jno
movsl
push
mov
push
jb
push
pushl
out
pop
dec
mov
mov
in
jne
mov
pop
jl
jo
aad
and
mov
roll
aas
jns
jbe
addr16
lds
mov
cli
mov
outsl
and
xor
pop
cli
jmp
popf
imul
jp
mov
dec
std
mov
cwtl
stos
inc
je
out
rorl
lahf
stos
pushf
sbb
add
sub
insl
pop
cmp
add
dec
push
int
fstp
iret
push
lock
jmp
hlt
call
mov
add
add
sbb
push
mov
jecxz
stos
pop
mov
dec
call
fmull
cmpsb
insl
or
imul
mov
insb
add
xor
test
and
fcmovu
stos
inc
inc
mov
out
push
xchg
jmp
adc
popl
outsl
jae
icebp
jae
insb
mov
push
insb
lock
cwtl
pop
dec
fstpt
jge
push
mov
das
xchg
inc
cwtl
mov
stos
leave
in
dec
aaa
sbb
testb
stos
fwait
adc
inc
ret
dec
int
mov
icebp
inc
arpl
lret
loop
dec
cli
movl
or
xchg
mov
or
push
inc
jbe
cmp
push
jecxz
shlb
js
inc
imul
into
aaa
imul
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
icebp
xlat
cmpsb
std
mov
pop
invd
mov
dec
cmp
cmp
mov
mov
loop
dec
push
and
jmp
je
sub
sbb
fmulp
push
xchg
popa
mov
leave
and
add
jno
mov
les
divl
push
mov
lret
icebp
orb
sbb
xor
std
test
test
pop
and
in
fimull
shll
jno
test
fbstp
dec
xor
test
arpl
pusha
xor
xor
inc
test
mov
fildll
stc
sub
mov
add
sbb
sbb
pop
xchg
out
cli
sbb
xchg
out
inc
orb
ror
push
cld
and
jg
add
inc
add
or
loopne
jne
cmpsl
adc
scas
pop
data16
stc
sar
add
add
lods
les
jnp
mov
push
mov
add
cmc
add
add
cmp
popa
adc
push
and
push
stos
dec
gs
daa
jb
mov
add
jp
or
or
mov
cmp
push
ds
and
jle
fsubl
xor
jg
cmp
mov
sbb
sub
ss
inc
add
mov
push
call
adc
ds
aas
or
mov
mov
js
mov
pop
push
fcoms
lret
cmp
lret
bound
xlat
or
cltd
inc
mov
inc
mov
stc
inc
sti
addr16
mov
mov
test
mov
jp
daa
out
into
or
dec
lods
xor
jne
adc
push
std
pmuludq
rcll
mov
cmp
clc
lods
fs
les
and
xchg
mov
mov
lds
push
daa
xor
xchg
inc
cs
add
add
les
mov
mov
mov
add
add
add
xchg
pop
push
dec
rcrb
sbb
andl
inc
push
jmp
sbb
push
jl
sbb
les
iret
rclb
shll
enter
outsl
mov
jg
jae
mov
les
dec
in
popa
loop
or
frstor
mov
push
push
pushf
pop
js
ret
leave
shr
mov
xchg
dec
popa
rorb
and
sahf
add
cmp
xchg
push
roll
loopne
push
or
mov
nop
mov
sbb
les
mov
mov
inc
loop
in
in
xor
dec
fisubl
iret
das
sbb
in
mov
lahf
lea
lods
repz
out
mov
inc
and
lods
push
cmpsb
jge
xor
jmp
dec
insb
and
je
add
add
ljmp
loop
dec
pop
fdivrl
mov
add
add
outsb
push
xchg
es
adc
repz
and
mov
sub
and
mov
cli
insb
icebp
pusha
lock
or
arpl
cli
clc
mov
ja
or
das
dec
pushf
out
xor
dec
xor
mov
out
ss
pop
orl
adc
movsb
xor
loope
in
fincstp
les
mov
jne
or
mov
xchg
add
mov
or
push
jne
shlb
mov
jbe
dec
push
cmp
inc
into
fcomps
ja
popf
xor
xorl
xchg
add
add
jnp
xchg
dec
in
leave
stos
xchg
cmp
iret
xor
lahf
xor
mov
push
pop
aas
or
xchg
pop
shrb
pop
std
mull
icebp
add
imul
add
aaa
shlb
cmc
div
rcl
inc
pop
fs
add
cmc
add
add
ja
out
pop
and
les
add
xor
mov
mov
das
adc
push
sbb
jmp
or
mov
push
mov
or
or
les
test
mov
mov
xchg
pop
add
mov
mov
lcall
sbb
idivb
gs
inc
push
mov
jne
addr16
popf
inc
out
inc
jo
ljmp
cvtps2pd
cmp
sub
out
add
or
xlat
rep
jl
sti
lahf
add
fcompl
push
lret
and
inc
push
test
inc
inc
into
insl
inc
sbb
fisttpl
jo
pop
push
xlat
or
xlat
test
sub
call
js
mov
ret
cmp
pusha
dec
adc
lret
mov
je
arpl
inc
sti
push
daa
jno
add
add
push
sahf
rcr
pop
test
and
cmc
add
add
fists
mov
int
je
cmp
mov
inc
mov
mov
mov
enter
sub
mov
std
dec
adcb
xor
sbbb
pop
sbbl
push
inc
rcrl
fisttps
mov
fs
popf
jmp
pop
cmp
cmp
mov
outsb
fisttpll
xor
stos
call
add
mov
sbb
cmpsb
shrl
push
icebp
inc
icebp
je
or
ljmp
dec
repz
jge
mov
lcall
mov
scas
fadds
lock
push
adc
mov
mov
lcall
and
mov
inc
xor
add
xor
sbb
adcl
cmp
push
adc
pop
in
fimuls
jp
add
add
arpl
cmpsb
jcxz
jne
push
inc
xor
std
insl
lcall
in
sub
xchg
ds
push
insl
test
and
pusha
hlt
dec
clc
and
test
andb
cmpsb
addr16
int3
dec
iret
arpl
xchg
jge
and
cmp
jns
into
popf
loopne
dec
jnp
add
shrb
cmp
int
inc
cli
xor
call
scas
or
lea
test
mov
cmp
mov
xlat
lcall
xor
filds
mov
lods
ds
sub
mov
cmp
jb
mov
jmp
hlt
jne
dec
mov
jg
xor
data16
mov
jge
pop
iret
das
xchg
xchg
xchg
and
shrd
add
inc
push
rcl
pushf
xor
pop
sbb
sbb
aaa
mov
cli
mov
fcom
subb
testl
dec
imul
in
jae
stos
ljmp
insb
add
add
clc
jnp
jg
in
cli
cwtl
inc
mov
popa
pop
mov
bound
add
arpl
repz
mov
fsubrs
push
mov
mov
jns
popf
mov
popa
mov
das
aam
jp
pop
je
fst
pushf
out
mov
jecxz
or
clc
xchg
test
int3
aas
clc
add
aaa
jae
es
xchg
and
add
ret
data16
push
sub
or
scas
cmp
iret
jnp
pop
inc
add
cmp
add
lds
mov
es
es
adc
into
faddl
stos
mov
adcb
test
nop
std
mov
incb
out
cmp
jnp
shlb
mov
and
rcll
push
xchg
movsl
inc
sbb
les
pop
andb
xor
adcl
popf
xchg
aaa
inc
mov
mov
fisubl
add
ljmp
cld
inc
push
cltd
das
enter
push
pushf
add
cmc
add
add
and
test
scas
or
xchg
cmp
lcall
jb
and
jns
mov
sub
fs
repz
sub
icebp
mov
fisubl
orl
add
and
scas
lods
fcompl
xchg
je
and
mov
js
test
inc
sbb
and
sahf
jle
sbb
xor
stc
jnp
rclb
cmp
push
mov
dec
adc
sub
inc
int
aas
cmp
add
jno
mov
cmpsl
pop
inc
sub
ljmp
xchg
xor
push
aad
jmp
or
scas
insb
dec
cmp
sbb
and
fs
adc
lods
lret
test
movsl
cld
inc
mov
pushf
mov
mov
pop
stos
dec
out
sarl
jge
rcrl
mov
hlt
mov
add
jl
sar
std
jle
loop
mov
add
cmc
add
add
mov
out
mov
mov
inc
xor
js
push
pop
pop
in
scas
and
cmc
fldt
add
pop
cmp
mov
pop
cmp
add
repz
pop
fnsave
jmp
hlt
add
fwait
out
repz
out
sbb
les
or
pop
pop
push
mov
scas
mov
pop
sub
mov
popl
popf
jbe
loope
pop
push
jp
mov
xor
aaa
insb
mov
and
mov
and
pop
cmp
cmp
int
decl
sahf
sub
es
lahf
jno
push
mov
int3
pop
or
xchg
or
and
cmp
stos
sti
inc
testb
adc
pusha
mov
gs
pop
gs
cmp
cmp
cmp
pop
xor
sahf
add
cmc
add
add
scas
jmp
out
notl
inc
testb
dec
adc
mov
inc
mov
mov
je
imul
leave
out
out
push
cmc
lock
xor
mov
cmpsb
in
mov
push
addr16
mov
xchg
cmp
xorl
out
or
xor
xor
xchg
repz
test
dec
add
lock
pop
fnstenv
lahf
pop
pop
jae
xchg
sbb
xor
mov
sub
fwait
dec
out
gs
jbe
xorl
imul
inc
xchg
adc
lods
loopne
and
xchg
int
shll
pop
xchg
pushf
xchg
inc
shl
sub
and
fldcw
ds
stos
stc
lods
sar
cwtl
dec
sub
jp
xchg
jbe
jno
jecxz
fcmovne
mov
add
fwait
and
popa
mov
aad
aam
outsl
sub
ss
add
cmc
add
add
sub
gs
insb
xchg
gs
and
xchg
repz
push
fidivl
jne
jp
nop
push
aas
hlt
jp
data16
clc
sub
lods
push
sti
loop
mov
jb
dec
and
jecxz
jnp
sar
dec
cwtl
xchg
mov
adc
sbb
mov
sti
popa
loope
pop
nop
sti
mov
je
divb
lods
push
shll
push
les
push
shll
jb
mov
leave
xor
push
out
lret
jbe
push
es
add
ss
jbe
and
jbe
xchg
popa
iret
mov
pop
cltd
fisubs
outsb
movsl
mov
rcrb
idiv
mov
mov
xchg
jne
xchg
gs
filds
arpl
lcall
out
sar
inc
mov
out
pop
xchg
pop
cltd
cwtl
push
cmpl
add
dec
std
out
xlat
aas
jle
ds
sub
add
cmp
rcll
xchg
ret
sub
adc
jo
push
imul
inc
and
lcall
loopne
gs
ja
cld
aad
sbb
or
jnp
or
xchg
aam
and
loop
lock
les
mov
test
mov
fcomps
push
out
or
mov
mov
stc
fists
mov
jnp
in
popf
cmp
adc
dec
hlt
xchg
pop
cmp
test
out
fs
fisttpl
jg
pop
inc
stos
shl
mov
push
fldt
fdiv
sbbb
or
xor
push
es
scas
movsb
lds
ss
push
outsw
mov
aas
cmpsb
cmp
shrb
rclb
cmpl
sar
add
push
test
xor
pop
xor
in
testl
fyl2xp1
add
add
mov
mov
jmp
ljmp
add
cmc
add
add
cs
jle
iret
adc
sbb
sub
mov
insb
popa
outsb
and
inc
mov
mov
out
movsl
lret
movntq
push
jp
into
jp
pop
enter
scas
test
fcmovnbe
mov
cltd
mov
cmp
fbld
aam
popf
bound
icebp
or
sub
dec
clc
adc
mov
dec
repz
mov
fs
fs
cld
dec
cmc
ja
mov
cmc
fs
repnz
icebp
fadds
or
push
mov
sti
push
pop
cmp
dec
xlat
add
xor
dec
add
pop
fstpt
loopne
aad
sub
mov
mov
and
sbb
xor
ja
push
sbb
add
insl
subb
jge
testb
mov
enter
push
clc
cmp
push
push
lret
add
adc
sbbl
mov
gs
jno
mov
add
add
repnz
xchg
call
push
iret
mov
mov
adc
loopne
pushf
jne
inc
ficomps
jb
mov
push
or
out
rcrl
xorl
loope
js
or
cmc
add
pop
dec
mov
les
aas
std
leave
movsb
out
clc
xor
push
sub
push
aaa
mov
loopne
rorb
call
aaa
shlb
and
out
sub
inc
in
loope
or
jae
repnz
sbb
pop
mov
add
in
adc
mov
scas
or
jge
xchg
into
push
jae
sbb
xor
lret
jno
sarl
loopne
cmp
gs
lahf
outsb
nop
clc
lret
pop
adc
js
adc
shr
icebp
ret
lds
cmp
addr16
dec
dec
daa
js
jmp
scas
add
add
imul
and
or
push
or
add
add
add
mov
jmp
lret
jne
cmp
jbe
pop
rolb
scas
arpl
cmp
shrl
test
inc
xor
xchg
fcoml
fcmovu
sub
sbb
repz
shr
adc
add
dec
js
dec
mov
imull
icebp
loop
scas
xor
pop
push
inc
and
lcall
inc
arpl
inc
and
mov
push
test
call
push
push
xchg
into
xor
in
cs
jge
loope
mov
xchg
fwait
add
inc
and
push
jg
outsl
movsl
adc
and
sub
loope
inc
andl
mov
je
pop
push
xchg
xor
push
jp
push
mov
dec
sbb
or
orb
loope
icebp
jne
rol
mov
js
clc
outsb
xchg
in
rorb
fdiv
dec
push
aaa
add
add
mov
dec
mov
int3
movsl
jmp
add
pop
jb
clc
adc
or
jp
movsl
loop
dec
mov
rcrl
sbb
mov
hlt
test
jp
cwtl
inc
enter
das
or
mov
aaa
and
les
pushf
jne
add
dec
mov
jp
mov
mov
cmp
jo
fnstcw
scas
mov
dec
andl
jb
mov
jmp
inc
int3
lahf
sbb
std
movl
lods
popf
insl
fcompl
pop
pop
mov
mov
mov
mov
pop
ss
pop
jp
aam
aas
int3
add
js
cmpsl
inc
imul
ror
xchg
add
inc
sar
outsb
cmp
lds
jb
fsubrl
push
pop
xor
and
loopne
out
inc
add
jp
push
xor
fwait
loope
and
lods
jae
mov
data16
into
stos
mov
inc
or
add
cltd
sub
out
das
mov
aam
fwait
or
hlt
movsb
add
cmc
add
add
repz
pop
xchg
pushf
ja
mov
or
jns
mov
jne
loop
fdivl
sbb
dec
pop
mov
jge
xchg
mov
in
and
adc
cltd
jo
or
inc
lcall
gs
loope
jns
sarl
pop
add
aaa
mov
int
mov
add
pop
add
push
pop
repz
popa
loope
push
ljmp
std
and
cmp
test
xor
pop
inc
mov
adc
mov
cmp
sub
into
mov
je
lahf
adc
and
jo
popl
pop
dec
stc
cmpsl
out
and
enter
adc
pop
pop
cwtl
lods
cmpsb
fidivrs
add
lods
mov
mov
das
dec
xor
mov
sbb
pop
dec
sbb
xchg
data16
add
add
pusha
test
mov
mov
jg
movsl
add
cmc
add
add
pop
inc
nop
into
mov
add
mov
in
jae
add
std
in
sbb
sbb
mov
js
cld
cmc
sub
in
shll
mov
addr16
scas
aad
cmp
or
mov
inc
mov
cmp
xchg
movsb
and
lcall
xor
inc
xchg
dec
lods
inc
testb
rorl
std
dec
and
dec
mov
shlb
pusha
add
mov
xor
cmp
push
fsubl
mov
icebp
xchg
xor
and
mov
sub
stc
pop
xor
inc
stc
fsubrl
xchg
push
inc
imul
push
jecxz
adc
test
xor
outsb
push
addl
cmp
pushf
rcrb
push
fists
mov
xor
mov
icebp
repz
out
ficoml
pop
add
add
mov
repz
repz
mov
neg
cmpsb
add
cmc
add
add
xchg
sub
mov
jmp
adc
jno
or
dec
add
cwtl
xlat
shrl
arpl
int
push
inc
inc
dec
adc
mov
push
negl
pop
push
int
in
xchg
jp
in
hlt
pusha
xchg
mov
push
mov
push
mov
and
cmpsl
fisttpl
arpl
inc
jmp
xor
arpl
inc
int3
lock
je
arpl
xchg
cltd
mov
imul
movsb
xorb
in
int
cmpl
or
jmp
iret
test
popl
lcall
adc
out
out
fsubrl
and
test
and
sti
in
mov
loopne
lock
aam
mov
ja
mov
and
xchg
in
aaa
in
mov
iret
mov
lock
fsubs
sub
adc
scas
ja
enter
cmp
add
add
mov
mov
cmp
push
roll
add
add
add
stc
clc
aam
shl
stc
cltd
aad
iret
pop
inc
inc
xchg
fnstsw
test
ss
lds
rolb
xchg
cmp
jg
out
mov
bsr
add
jge
clc
mov
fldt
and
mov
stc
dec
add
in
shlb
pop
fwait
push
into
cltd
dec
es
mov
lret
inc
adc
cmp
pop
imul
pop
out
out
int
and
push
scas
pop
js
shl
inc
rol
popf
pop
pusha
xchg
bound
sbb
repz
mov
adc
push
dec
mov
mov
xchg
push
mov
jp
or
mov
jmp
sbb
push
fiadds
ret
dec
fcoms
cld
pop
push
rcl
cmp
dec
sub
sahf
fs
outsb
add
stos
or
pop
jmp
cs
stos
insb
arpl
jbe
add
add
std
mov
xchg
test
enter
cmc
add
add
lock
cmpsb
lea
imul
pop
sub
stos
adc
sub
in
mov
les
and
mov
push
shl
sbb
dec
faddl
lods
mov
jmp
mov
daa
pusha
mov
sub
ss
insl
sti
sbbb
and
xchg
lds
push
ret
xor
fidivrs
lahf
mov
cld
mov
out
jno
pop
mov
cmc
pusha
pop
into
icebp
sbb
mov
jae
jns
out
mov
decl
sahf
stos
lahf
xchg
inc
pushf
iret
and
cmpsb
sub
sti
pop
inc
dec
sahf
mov
mov
sbb
test
pop
add
pop
fstpt
mov
out
leave
add
loop
popa
fdivrp
mov
jns
mov
fcoms
pop
call
jecxz
xchg
ss
jle
cli
cld
push
pusha
inc
add
add
inc
fdivl
stos
push
movsb
mov
add
add
fisubs
subb
out
mov
out
outsb
sub
and
arpl
ret
fnstcw
movsb
xor
lret
pushf
dec
xor
lea
mov
sbb
lea
ja
jo
xor
sbb
mov
jmp
fs
mov
sbb
push
jb
rclb
xchg
mov
stos
inc
cld
sub
cmp
xor
or
mov
mov
jbe
mov
sbb
cmp
dec
mov
int3
xor
std
xchg
inc
insb
sub
rcl
xchg
xchg
cmp
xor
and
cmc
pop
add
xchg
test
es
add
adc
push
push
out
xchg
push
das
mov
sub
dec
mov
sub
pop
enter
pop
jl
mov
xlat
fprem
repnz
fmuls
int3
inc
cmp
add
add
sbb
mov
pusha
ret
popf
mov
add
cmc
add
add
xchg
adc
jnp
push
mov
out
xchg
ljmp
cmc
outsl
mov
sub
sub
sarl
and
cld
xlat
add
shll
jge
mov
cmp
sbb
aas
daa
bswap
aaa
pop
mov
pop
cmp
fistl
add
sbb
dec
arpl
arpl
outsb
and
sub
xchg
out
repnz
sbb
test
ficomps
push
cmc
aad
dec
jl
aas
aaa
sub
mov
mov
popl
or
jg
jmp
aam
adc
sbb
jp
mov
aam
in
popf
jp
lcall
push
fstp
pop
sahf
inc
aas
imul
cltd
inc
test
push
sbb
bound
loope
imul
jge
ffree
je
pop
sbb
add
pop
test
stos
hlt
jmp
ljmp
jp
ljmp
add
mov
pop
add
push
jecxz
jae
dec
lret
test
push
movsb
jne
lcall
push
sub
mov
jecxz
jns
loop
mov
jmp
test
popf
ret
in
dec
aaa
insb
in
test
fmuls
imul
dec
fiaddl
mov
and
lods
push
sbb
outsl
lds
pop
fsubrl
je
movsb
mov
addb
inc
adc
inc
int3
lcall
enter
stos
out
mov
add
aad
jb
push
arpl
push
mov
jl
fs
dec
push
pop
mov
jbe
les
jno
pusha
xchg
or
mov
arpl
inc
and
sbb
xor
push
jo
call
fidivs
xchg
dec
push
sub
inc
mov
xchg
movsb
out
loopne
pop
scas
add
add
add
push
nop
out
xlat
out
jg
dec
cmp
inc
mov
pop
pushf
lods
add
cmc
add
add
imul
mov
shrb
mov
push
sbb
pop
cmp
shll
jnp
inc
pushf
ljmp
les
dec
fpatan
mov
or
sbb
xchg
xlat
clc
movsb
ds
mov
ds
xchg
std
mov
mov
mov
popa
cmp
sub
nop
dec
jg
cltd
jmp
shll
jp
push
jle
hlt
jbe
mov
mov
icebp
sahf
int3
mov
dec
je
dec
mov
pop
lret
aam
in
lods
aaa
xchg
pop
dec
cmpsl
jl
adc
xor
insl
scas
inc
ret
jb
pop
sbb
cli
dec
push
adc
stos
subl
pushf
lods
pusha
loop
test
jmp
ss
outsl
jno
pusha
hlt
sbb
mov
add
mov
inc
fwait
lds
xor
mov
add
add
add
jne
cwtl
xor
divb
sbb
pop
ret
dec
sbb
int
or
aaa
ret
and
mov
decl
xor
push
popa
adc
pop
pop
xor
mov
xchg
sbb
mov
das
sub
enter
dec
andps
lahf
and
mov
subb
dec
cmp
pusha
and
inc
aad
data16
jbe
push
cmp
addr16
add
ljmp
push
cmp
push
in
mov
out
shll
and
dec
xchg
mov
sub
or
popa
sti
fldcw
je
push
xchg
push
and
repnz
nop
pop
lcall
repz
push
fimuls
cmp
mov
loope
daa
jecxz
mov
adc
push
ds
xor
imul
add
add
mov
ja
lods
stos
adc
xchg
add
mov
sbb
ret
jb
inc
jbe
jmp
in
cmp
jl
lahf
push
out
push
xchg
je
cltd
push
pop
aam
dec
inc
pop
or
and
rol
ds
pop
sti
push
push
fs
adc
cwtl
filds
inc
sbb
into
roll
fldcw
dec
or
loop
gs
mov
xor
int3
jbe
addl
mov
xchg
xor
xor
nop
outsb
xor
in
shlb
pop
xor
imul
shlb
fwait
push
lods
push
pop
and
and
cwtl
out
lods
inc
loope
iret
push
aas
mov
mov
jp
pop
jp
lods
push
lcall
jl
out
mov
cmp
leave
mov
xor
mov
stc
daa
imul
je
insl
movsl
xchg
in
push
jle
aam
lret
test
xchg
pop
add
add
mov
push
sti
jmp
xchg
sub
aad
jnp
add
cmc
add
add
arpl
test
out
imul
sahf
jl
cld
dec
insb
add
xchg
sbb
push
or
mov
ficomps
pop
mov
pop
stos
ss
cli
les
jns
or
mov
ficoml
out
mov
lds
stos
xor
mov
incl
int
sbb
aam
in
fimuls
pushf
mov
aaa
imul
stos
mov
push
testb
mov
mov
push
pop
pop
mov
test
mov
inc
sub
jno
pushf
stos
insb
pop
lret
adc
cmc
int
inc
or
dec
aad
outsl
sbbl
ss
mov
mov
cmp
adc
out
clc
adcb
push
decb
push
enter
push
mov
adc
and
pop
push
insb
cs
movsl
xor
push
inc
cli
add
add
jecxz
lock
ja
jo,pt
add
cmc
add
add
fnstenv
mov
clc
mov
sub
or
and
add
adc
icebp
incl
adc
ret
pop
sbb
outsl
add
pop
jecxz
mov
das
and
pushf
add
cld
inc
in
or
and
loope
test
push
fs
fidivrl
std
js
dec
inc
push
push
fcompl
loopne
pushf
rep
sbb
sub
aaa
inc
mov
xchg
ja
mov
popa
xlat
arpl
jno
cmp
dec
cltd
sti
push
fwait
out
pop
xor
jne
mov
iret
lods
mov
test
inc
loope
inc
or
out
dec
xchg
pop
je
in
gs
std
inc
stos
outsl
sub
cmpsb
add
pop
and
push
movsl
mull
cmp
push
fsubrl
mov
jg
lahf
push
jle
adc
mov
mov
iret
clc
push
inc
dec
das
push
mov
test
jo
add
add
cld
mov
test
gs
add
add
add
movsl
add
data16
push
popa
jnp
dec
sbb
push
adc
xlat
sbb
mov
and
daa
loopne
adc
jne
fnstsw
and
lea
adc
adc
jnp
mov
and
inc
jg
pop
sbb
sbb
ljmp
push
sbb
push
pop
sahf
call
push
jle
and
cmp
adc
xchg
dec
fdiv
push
std
fmulp
fcoml
mov
jnp
fiadds
jle
stos
lcall
mov
loop
repz
cld
jmp
push
adcb
icebp
mov
cltd
ljmp
jne
inc
sbb
pop
es
mov
out
and
lods
int3
mov
gs
push
shrb
into
lcall
stos
and
mov
shrb
loopne
flds
add
mov
dec
das
pop
out
cmc
mov
leave
jmp
pop
mov
add
add
add
dec
add
inc
nop
fldenv
xchg
jb
ljmp
cmpsb
cmp
jb
push
addr16
or
mov
lcall
mull
lcall
lods
push
inc
fdivl
ret
mov
dec
pop
dec
xor
cmpsb
addr16
iret
iret
mov
dec
nop
adc
sub
notl
sbb
popa
xor
test
cmp
in
jg
lock
xlat
stos
xchg
mov
lcall
and
or
mov
pop
rclb
or
dec
ret
loop
mov
sbb
jne
jg
push
jbe
sbb
mov
and
and
popf
fidivs
stc
sub
inc
mov
pop
cli
pop
int3
fnstcw
test
jns
jle
mov
das
pop
pop
fcomps
fdivrl
jnp
inc
ret
add
out
std
dec
std
pop
mov
sbb
cmovg
add
out
ret
mov
movsb
aad
sub
xchg
jns
mov
pop
aaa
xchg
push
push
and
xchg
bound
add
xchg
pusha
aaa
nop
sbb
push
lret
inc
mov
cltd
or
jl
mov
mov
xor
in
movsl
rcr
sbb
cmpl
xlat
aaa
mov
push
pop
pop
push
shrb
and
xor
stos
xchg
ja
in
pop
loope
inc
mov
sahf
fcmovbe
sbb
and
ja
mov
inc
dec
xchg
pop
jg
cld
int3
pop
or
outsb
inc
pop
mov
loop
in
fwait
int
sub
xchg
or
pop
add
or
push
dec
enter
inc
idivl
and
jl
lods
aas
push
lods
push
int
loop
andb
jae
inc
rcrl
les
in
add
iret
mov
addr16
push
sarb
jmp
push
adc
mov
mov
add
add
fidivs
loop
ljmp
xor
inc
mov
add
add
add
sub
dec
cmpsl
ss
dec
jecxz
xor
pop
mov
rep
cmpsl
loope
es
in
sbb
xchg
orb
mov
ret
cltd
sbb
jmp
mov
mov
dec
std
pop
dec
fmul
lcall
sbb
repnz
ja
or
in
cltd
mov
xchg
scas
dec
stos
mov
cmp
movsb
imul
lahf
stos
pop
insl
cs
js
and
cmp
mov
or
mov
xchg
jb
in
fcomps
insb
leave
and
xchg
lea
hlt
cmp
cmp
mov
sbb
fisttpl
xor
jo
jb
sub
rcr
lock
jo
or
imul
xor
pop
in
lret
xor
lahf
mov
add
push
xchg
jg
jmp
std
jge
in
xchg
pop
jg
lcall
add
sub
ret
loopne
fst
in
dec
adc
leave
arpl
add
mov
jle
cmp
stos
call
jae
xor
adc
dec
fs
mov
jmp
out
add
xor
pop
inc
sbb
pop
and
insl
aaa
mov
xor
out
jnp
cmp
jmp
movsb
xchg
sub
mov
popa
push
sbb
sahf
fs
xor
leave
inc
sbb
out
cmp
mov
leave
adc
xchg
pop
jne
dec
dec
je
clc
xlat
dec
movsl
aaa
in
cmpl
pop
xchg
roll
pop
lods
xor
mov
sarl
xlat
lods
into
iret
clc
push
adc
scas
add
test
repnz
cmc
sub
add
shll
mov
aam
cmp
sbb
inc
rcrb
and
add
push
divb
std
cmp
push
mov
cmc
add
add
push
mov
ljmp
mov
mov
rol
jae
addr16
mov
nop
dec
cld
sbb
in
inc
aas
dec
fistpll
pop
add
xor
fbld
cmp
repz
js
outsl
xchg
fcoms
fstpl
lret
add
shlb
pop
pusha
xor
imul
jg
inc
add
push
and
ljmp
inc
sbb
test
dec
push
mov
push
shrl
imul
push
xchg
pop
xchg
mov
ret
push
test
adc
xchg
mov
xor
inc
fs
sti
xchg
sub
push
adc
lahf
push
das
enter
repnz
bound
inc
movsl
push
mov
fnstenv
dec
push
or
out
cwtl
lret
jno
mov
aad
test
add
add
xor
cmp
ficoml
xor
mov
add
add
add
sub
daa
and
add
xchg
loop
xlat
lea
push
inc
gs
pusha
add
jo
in
xor
es
popf
mov
sub
push
lds
hlt
scas
mov
fucomi
lret
icebp
sbb
loop
pop
inc
xchg
dec
add
iret
mov
repnz
std
or
cs
or
fstpl
sbb
mov
xchg
subb
or
push
xchg
push
cs
in
arpl
sbbl
loop
cmp
fbld
add
dec
mov
xor
fs
sub
cmc
out
inc
jb
movhps
mov
hlt
lods
sbb
out
bound
fiaddl
popa
andl
ljmp
bndstx
dec
cwtl
pop
sub
shrb
mov
jno
push
nop
scas
pop
cmp
add
es
les
mov
push
push
adc
mov
nop
sbb
add
lods
pop
lret
ss
and
popf
fidivrs
jge
and
pop
lahf
test
mov
movsb
jno
sbb
jecxz
lret
mov
leave
pushf
push
sub
scas
or
dec
jno
outsb
sub
xchg
lret
adc
fwait
stos
and
mov
shll
push
mov
push
mov
and
and
in
jecxz
push
adc
mov
rorb
sbb
dec
adc
data16
inc
aas
sbb
or
arpl
xchg
out
inc
imul
cs
rcll
xchg
adc
push
sahf
jnp
fwait
mov
sub
mov
andb
jl
xor
aas
inc
fs
jmp
repz
roll
mov
rorl
cmpsb
imul
clc
inc
cs
jp
inc
pop
imul
jle
mov
rorb
cmp
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
loope
or
add
add
mov
adc
xchg
pop
enter
in
jno
dec
fstpl
les
inc
jbe
aaa
or
xchg
repz
rcr
cld
ret
inc
push
or
subl
cmp
mov
cmpsl
rcl
pop
jns
lret
fists
cmp
sub
pop
arpl
push
push
jnp
dec
pop
xchg
shll
sbb
ficoms
jmp
xchg
pop
sbb
jne
adc
and
movsl
mov
mov
ja
mov
xchg
xchg
and
and
gs
icebp
in
out
or
cld
mov
pop
aas
jbe
or
cwtl
push
lret
fbstp
dec
arpl
sbb
xchg
mov
mov
cs
dec
std
push
add
and
xor
xlat
ja
mov
add
add
push
mov
lcall
ret
ret
mov
add
sub
insl
and
mov
stos
inc
sub
xor
loopne
aad
jae
notl
lret
push
xor
adc
loopne
add
pop
sbb
inc
enter
nop
xor
lds
cmpsl
out
lret
sub
inc
xor
mov
clc
xor
push
sbb
jnp
sub
or
roll
adc
cli
pop
adc
dec
mov
mov
sub
add
fs
imul
cli
mov
inc
ss
jae
xchg
ja
test
ds
out
test
hlt
jge
mov
xor
push
clc
dec
rolb
jmp
in
rcrb
mov
hlt
mov
mov
imul
pop
fadds
divl
das
push
stc
or
test
adc
imul
xorl
insb
scas
pop
lret
idivl
add
push
dec
frstor
je
int3
shll
or
fwait
lahf
popa
les
xor
in
enter
cmp
cmp
imul
in
dec
pop
pop
movsb
mov
ret
push
push
lcall
lahf
cmpsb
int
xor
dec
psllq
fcoml
sub
mov
jmp
cmp
scas
nop
popa
jb
push
mov
push
jecxz
std
scas
ret
mov
and
movsb
sahf
movsl
aam
lods
cmp
cld
popa
jl
add
mov
mov
push
mov
aad
or
push
sub
push
jo
orb
iret
sub
test
scas
ss
lods
xchg
inc
aas
mov
add
xchg
daa
mov
inc
jb
sahf
push
mov
jnp
mov
outsb
cmp
add
ja
cli
or
idivb
inc
cmpl
addl
jg
lea
add
dec
pop
pop
sbbl
fstpl
ret
pop
in
mov
add
adc
shlb
fisubs
mov
or
pop
adc
push
dec
inc
ja
pop
xchg
adc
icebp
jg
lods
lret
or
cmp
jne
fidivl
ffreep
repnz
add
mov
pop
jne
xchg
nop
mov
cmc
pop
repz
in
push
cmp
aad
test
fistpll
cmp
pop
jmp
push
sub
mov
adc
mov
int
or
sbb
ret
adc
dec
ror
pop
movsb
jmp
in
dec
cmp
into
loope
push
pop
inc
jae
add
icebp
add
addb
jecxz
mov
add
movsb
loope
popf
out
cmp
push
inc
jbe
xor
or
mov
mov
lods
sub
cwtl
cs
or
call
aas
lds
bound
xchg
aas
mov
add
in
mov
jecxz
out
sub
pop
pop
loope
add
cmc
add
add
lcall
adc
out
lods
and
mov
aad
cmp
fcomip
adc
jg
fisubl
movsl
test
rolb
jae
or
xchg
adc
xchg
xchg
js
fnstsw
xor
mov
popa
mov
inc
sbb
imul
out
and
addr16
cmp
sahf
lods
lods
mov
test
dec
pop
sets
pop
rcrb
jg
addr16
subb
mov
xor
ret
test
push
gs
fildl
sub
xor
addr16
push
movsb
push
fidivl
fbstp
cmp
daa
ds
fcmovb
jno
add
pop
adc
or
mov
int
push
gs
add
push
xchg
test
jg
jbe
movsb
xor
ja
mov
add
add
fwait
add
push
cmpl
in
shr
dec
cmp
hlt
lea
pop
mov
xchg
inc
mov
jl
js
scas
adc
jmp
and
int
rorb
mov
mov
cmp
ror
push
dec
pop
mov
cmp
jge
sbb
aas
shlb
jae
ljmp
filds
in
ds
add
push
pop
push
sbb
and
xchg
push
lcall
mov
jo
inc
and
lahf
mov
cwtl
jo
mov
pop
icebp
clc
xchg
aas
adcb
mov
push
mov
mov
cmp
sahf
cmpsb
jmp
inc
jecxz
ret
mov
test
mov
lods
adc
push
and
dec
into
dec
mov
lcall
aaa
add
add
adc
in
lcall
xor
dec
dec
out
lret
mov
add
fildl
adc
add
int
mov
dec
sbb
insb
adc
sahf
sub
fldl
ss
mov
adc
adc
gs
testl
lods
xchg
jb
lods
lcall
insl
pop
pop
xchg
bound
xor
and
or
idiv
inc
iret
inc
rcrl
sbb
mov
mov
call
pushf
repnz
daa
sub
ret
into
push
inc
adc
pushf
scas
js
ret
add
mov
xchg
ret
aam
rep
push
adc
lock
not
sub
jnp
cmpsb
shll
fs
cmpsl
dec
mov
xor
in
fwait
std
repz
sbb
pop
lods
cmp
fiadds
adc
pushl
pushl
in
shll
mov
js
cwtl
sbb
push
adc
shll
ficoml
add
dec
or
jg
stos
dec
push
jo
or
dec
sarb
add
clc
outsl
xchg
pushf
mov
movsl
or
fcmovbe
xor
rcll
arpl
into
jne
xchg
cmpl
mov
fdivs
stos
mov
fwait
pop
xor
xchg
pop
divb
jmp
cwtl
push
mov
pop
ljmp
sahf
jmp
add
test
cmp
das
mov
shrb
data16
imul
pop
fnsave
ds
mov
add
sahf
jne
test
stos
rcll
inc
sbb
stos
xchg
int3
sub
cmpsl
mov
xor
and
add
push
and
lcall
and
cs
std
adc
and
cltd
call
out
push
imul
fwait
bound
push
aaa
mov
lods
xlat
pusha
and
bnd
cmp
testb
dec
in
cmp
mov
push
mov
add
insl
sbb
outsl
mov
add
and
add
add
sbb
xor
jp
dec
scas
out
mov
jg
je
fisttps
cmp
icebp
repz
push
sahf
sbb
rcrb
imul
adc
subb
sar
pop
cmp
inc
jno
shl
and
push
dec
push
aaa
pop
scas
imul
fs
imul
mov
xorl
jg
and
repnz
mov
fstl
mov
pop
arpl
leave
scas
movsb
lock
mov
clc
loop
cmpsb
insb
pop
lds
cwtl
dec
pop
ret
es
stc
jp
fistps
pop
pop
mov
mov
ja
pop
inc
add
rcrl
add
mov
cmp
int
mov
mov
dec
jecxz
shll
hlt
popf
jae
fbstp
sub
cmpsb
std
adc
mov
mov
stos
lods
scas
add
add
inc
fbld
mov
cltd
fcmovnbe
xchg
rep
roll
cmc
add
add
outsb
inc
cmp
xchg
lods
mov
dec
mov
mov
dec
notb
adc
jb
out
mov
loopne
aaa
movsb
imul
lret
mov
pop
jecxz
add
popa
mov
ja,pt
cmc
pop
or
daa
lods
andb
or
lret
adc
cli
movsl
movsl
pop
test
clc
ds
xchg
push
cmp
and
enter
sbb
dec
cmp
pop
mov
adc
rol
loope
mov
adc
or
sbb
xor
out
sbb
push
jecxz
repz
fwait
ret
mov
dec
or
iret
out
packssdw
pop
mov
or
mov
daa
mov
dec
mov
mov
add
fcmovu
aad
repnz
repnz
in
cs
add
push
push
call
add
lahf
ret
cmc
add
add
cmp
push
pop
and
mov
push
cmp
jno
pop
mulb
dec
out
jg
clc
repnz
jae
mov
or
or
push
pusha
mov
cmp
popf
cmp
fnstcw
shll
push
mov
sub
pop
xlat
or
cmp
lds
ljmp
push
dec
leave
test
iret
movsb
and
mov
in
mov
nop
aas
xchg
push
cmpsb
aas
add
cmp
lret
aam
or
shld
sahf
mov
fidivrs
sbbl
inc
push
push
scas
out
xor
add
call
dec
jmp
inc
push
mov
pop
dec
in
push
decl
add
fldenv
and
add
push
out
or
add
idivb
mov
pop
pop
outsb
add
add
std
sti
leave
sti
iret
ljmp
sub
add
cmc
add
add
pop
add
cs
and
mov
cmp
or
loopne
leave
jbe
fists
shll
cmp
cwtl
shl
dec
cli
repnz
ja
push
mov
dec
dec
xchg
cmp
cmc
adc
push
sub
xchg
inc
add
pop
das
in
int
xchg
dec
out
xchg
cltd
loop
clc
push
lcall
xchg
xchg
pop
sub
xor
lret
inc
cli
pop
jbe
adc
pop
jbe
loop
lock
pop
lretw
mov
popa
sub
and
in
movsb
push
pop
and
cmpsb
jle
jns
and
pop
cmp
xor
sahf
bound
lock
pushf
test
or
pop
enter
mov
ret
mov
mov
cmpsl
cli
rclb
xorl
std
mov
jge
bound
push
aaa
hlt
xchg
cwtl
lock
push
lret
ret
add
mov
mov
es
lret
pop
mov
add
cmc
add
add
xchg
jmp
and
sub
cltd
movsb
xlat
cmp
add
ljmp
sub
mov
test
and
out
and
orl
daa
cmp
enter
fdivs
jb
cltd
scas
jge
mov
addr16
sbb
movsl
inc
std
and
stc
shr
inc
mov
xor
shlb
dec
xchg
add
stos
adc
adc
mov
scas
cmp
shr
out
or
rcr
movsb
push
mov
xchg
pop
adcb
xchg
arpl
out
cvtps2pi
jecxz
mull
outsb
adc
cmp
xchg
jge
mov
jns
add
idivb
mov
sti
sbbl
hlt
sbb
inc
inc
ret
out
sbb
test
inc
cmpsl
jno
popa
fwait
jge
pushf
pushf
push
stc
add
fsubrl
es
jns
dec
das
cmp
add
jg
mov
sub
pop
add
add
cmc
add
add
loop
adc
mov
shlb
shll
mov
push
lods
xchg
pop
addr16
imul
pop
cmpsb
jp
cli
clc
and
xor
add
inc
push
jo
xor
jns
pusha
cmc
mov
test
nop
inc
and
testb
pop
pop
cmpsl
xor
jp
ljmp
lahf
dec
gs
mov
sti
std
lahf
adc
and
loop
leave
xor
mov
push
popf
and
sbbl
cmp
les
and
gs
das
loope
arpl
leave
xor
lds
jg
ss
ljmp
inc
jno
fwait
call
and
sahf
cmp
add
and
push
sbb
aaa
rolb
popf
xor
add
xor
push
cld
pushl
out
adc
pop
sub
leave
jae
add
cmc
add
add
mov
mov
shlb
das
mov
inc
sub
bound
jbe
push
jg
jecxz
in
cltd
sti
sub
mov
mov
xchg
in
ret
ret
dec
push
xor
and
xchg
pop
sub
mov
mov
cltd
test
cltd
lds
and
aaa
addr16
into
pushf
lods
sbb
xchg
sub
iret
lcall
test
cltd
loop
jae
fwait
popa
xchg
lods
lret
shll
pop
mov
jecxz
les
je
icebp
pop
lods
daa
mov
pop
insl
pusha
and
or
outsl
and
fnstcw
in
jecxz
cmc
fsubrl
gs
push
outsl
inc
std
inc
mov
sub
stos
cld
aad
fisttpl
rolb
dec
clc
cwtl
adc
lret
jne
jne
stc
mov
enter
shll
and
add
pushf
shrb
jb
ret
jne
push
add
add
int3
mov
stos
mov
sbb
and
inc
pop
inc
fidivs
mov
sti
aam
cmp
jo
xor
outsl
mov
ret
popa
outsl
mov
adc
jo
jmp
fwait
mov
test
dec
xchg
scas
out
notl
adc
sarl
jbe
pop
fwait
repz
pop
insl
sti
pop
shrb
ret
lods
or
fwait
xor
popa
mov
gs
ffreep
push
hlt
and
dec
filds
scas
push
mov
mov
dec
mov
push
loope
and
and
pop
in
dec
mov
int3
rolb
inc
inc
cmp
fs
inc
cmovb
out
xchg
lods
lcall
add
jns
test
aaa
aad
gs
lret
movsb
or
insb
mov
push
mov
cmp
dec
add
add
test
mov
xchg
push
outsl
push
notb
pop
enter
add
add
into
jecxz
ret
in
or
stos
cmp
fmulp
push
inc
push
add
mov
fld
bound
loop
sbb
xchg
push
inc
mov
test
fstpt
cwtl
dec
into
pop
pop
ljmp
lds
inc
ljmp
stos
out
xor
test
cmp
lods
xchg
inc
sbb
inc
mov
xor
mov
sub
movsl
int3
and
test
rcrb
adc
sahf
int3
pop
push
xchg
jl
sub
daa
mov
inc
push
xchg
scas
mov
ret
ret
xchg
jno
pop
push
push
int
popf
mov
ret
pushf
mov
jecxz
in
sbb
jnp
outsl
out
xchg
inc
int3
divb
dec
loopnew
jae
stos
popf
lret
fldl
add
add
aas
clc
xor
mov
pop
lahf
imull
and
jbe
jmp
or
pop
add
add
jne
jne
jg
out
and
stc
scas
rcll
add
cmc
add
add
int
orl
or
sbb
fistps
sub
lahf
pop
pushl
int
into
mov
cmc
shll
mov
cmpsb
pusha
mov
mov
cmpsl
dec
mov
or
xchg
cmp
adc
push
or
add
inc
sti
stos
hlt
lds
sub
aaa
mov
aad
int3
xor
adc
icebp
and
sbb
call
out
and
jp
div
arpl
fldl
stc
mov
sahf
aaa
adc
dec
les
scas
rclb
daa
mov
xchg
inc
and
lahf
add
stos
pop
and
insl
fistpl
inc
mov
mov
lahf
inc
mov
js
jo
push
sbb
mov
imulb
shlb
lret
mov
lods
out
cmpsb
fldcw
add
add
dec
pop
mov
cmpsb
fstpl
js
mov
add
add
add
mov
loop
mov
mov
add
iret
les
fwait
jnp
loope
ja
jecxz
xchg
movsl
jle
stos
int
std
and
add
das
add
lahf
mov
sahf
sahf
jo
arpl
ds
aam
xor
dec
push
aam
cmp
jo
add
orb
rcll
adc
jno
int
movsl
or
sbb
dec
shrb
push
mov
push
xor
inc
aad
stos
mov
negb
mov
mov
frstor
lock
pop
cli
mov
fnstenv
add
mov
push
push
or
testl
push
add
mov
add
push
jo
push
push
lea
jo
hlt
movhps
adc
push
aad
mov
fstpt
mov
fs
js
cwtl
add
add
add
outsb
jle
lods
not
mov
add
or
cmp
add
cmc
add
add
orb
mov
dec
inc
mov
nop
fs
shll
jmp
testb
lods
repnz
mov
hlt
lea
data16
push
xchg
sti
sub
insb
sub
loope
mov
fnsave
in
mov
xchg
sbb
jns
ret
or
sbb
sbb
scas
aaa
jno
dec
sub
cmc
fs
sub
sub
fisubs
stc
es
push
fmull
adc
mov
dec
pop
add
xchg
mov
pop
pop
jg
xchg
bound
jns
and
sbb
ds
decb
push
popf
fsubrs
pop
call
push
mov
rcr
mov
dec
push
inc
loopne
out
add
cmpsl
stos
sar
dec
and
xor
lods
cmpsl
aad
fucomp
imul
pop
clc
subb
scas
inc
cld
add
inc
mov
add
add
mov
xor
mov
int3
add
cmc
add
add
sti
sbb
inc
xor
push
lahf
xchg
dec
xor
or
mov
xchg
int3
inc
xor
mov
lea
jp
ljmp
inc
push
les
out
add
lahf
imull
outsl
xor
dec
or
or
mov
cwtl
pushf
lods
pop
push
mov
cld
into
sti
std
testl
xchg
cmpb
testl
dec
sub
std
das
cwtl
test
sub
sub
int
int3
ret
mov
enter
and
sub
pop
arpl
add
inc
inc
jns
arpl
mov
dec
adc
js
inc
inc
outsl
adc
mov
push
push
loopne
mov
dec
stos
mov
pop
push
sub
jmp
xor
ss
int
sahf
cmp
sti
inc
out
rcl
mov
rorb
add
out
sti
xlat
ss
inc
movsb
dec
push
mov
es
add
add
add
mov
arpl
pushf
lock
lds
xor
inc
lret
ficompl
mov
push
test
push
xchg
jbe
adc
fs
test
pop
int
mov
fldenv
fistpl
xlat
mov
and
sub
fsubrs
out
sbb
fmull
cmc
daa
inc
adc
jmp
xchg
lea
sbb
or
adc
or
sub
inc
adc
nop
insb
adc
hlt
push
stos
xor
outsb
xchg
xchg
imul
ljmp
push
repnz
fucomp
stos
push
mov
jnp
mov
aad
and
mov
mov
xor
ficoms
out
mov
mov
outsb
mov
jmp
test
inc
icebp
fistpll
aaa
pop
mull
xchg
jp
cmovae
test
add
add
push
sub
cmp
jg
cmp
xchg
into
add
cmc
add
add
pop
test
jbe
lods
sbb
rcll
loop
mov
xchg
jecxz
inc
xor
sbb
mov
pop
jne
xorb
sub
cltd
shl
xchg
ror
pop
mov
mov
movsb
popa
lahf
mov
test
and
lret
popa
lods
scas
dec
xor
pop
jle
dec
jmp
sub
pop
mov
push
bound
es
outsb
je
xchg
lock
sbb
sub
out
push
sbb
cmpl
adc
inc
push
jns
das
add
dec
xchg
push
popa
in
sbbl
and
fcomip
or
cmp
dec
and
shr
jne
popa
lret
pop
add
jne
into
cwtl
mov
daa
sub
xor
cltd
xchg
or
jp
inc
dec
inc
mov
mov
xor
and
xchg
or
scas
jecxz
in
add
jmp
jne
add
jmp
ds
repz
aam
mov
adc
add
cmc
add
add
test
pop
sbb
mov
test
adc
daa
jae
scas
std
rolb
rorb
test
sbb
bound
rorl
xor
hlt
loopw
popa
js
push
pushf
jnp
rcll
pop
dec
sub
nop
fidivrs
jle
fs
cmp
movsb
divb
cmp
shrb
xchg
push
out
in
lcall
or
sbb
movsl
and
fstpl
mov
cli
stos
addb
xchg
cmp
add
cs
fidivs
pusha
and
and
lock
movsb
mov
mov
jae
cmp
xchg
aaa
xchg
push
adc
pop
leave
imul
xor
mov
nop
mov
xchg
pop
loope
rol
cmp
dec
push
jl
xchg
jo
subl
add
add
mov
jne
xor
rolb
add
add
add
jmp
sbbl
dec
xchg
lea
and
stos
std
sbb
nop
mov
shrb
pushf
popf
xchg
jle
inc
ficoms
rolb
iret
clc
xchg
call
stos
shr
xor
xchg
jno
cmc
test
push
test
sbbl
fldcw
aaa
add
adc
push
rcrl
fdivl
das
test
into
mov
pusha
push
or
fidivrl
in
loopne
out
fsubl
jo
lret
push
xchg
xor
mov
sbb
test
movsb
push
mov
xchg
iret
icebp
out
icebp
and
ficoms
mov
outsb
xchg
je
add
addr16
jb
cld
inc
lret
inc
loop
divl
loope
scas
pop
ret
lea
cmp
imul
outsb
xchg
lods
lock
sbb
mov
stc
enter
in
out
mov
dec
pop
ds
adc
rolb
add
add
add
stc
js
pop
and
lea
xor
jmp
stc
fdivrs
or
pop
repz
sub
or
add
xchg
in
push
lret
cmp
xor
sbb
mov
bound
cmp
xchg
fistl
jno
or
shll
idivb
sub
in
insb
xlat
mov
out
mov
mov
adc
imull
jne
push
push
rolb
mov
push
shrl
out
dec
inc
push
int
xchg
cwtl
je
push
mov
mov
inc
mov
mov
dec
pause
jns
je
pop
pusha
test
pop
or
xor
sub
push
cmp
fcmove
jmp
mov
xlat
mov
aas
push
mov
push
les
push
into
les
add
mov
adc
push
into
jecxz
ret
jno
mov
jg
add
add
imul
cmc
call
and
das
out
roll
add
add
add
js
out
xor
insl
jmp
push
in
xchg
sub
cmp
push
mov
stos
push
mov
adc
mov
or
std
je
xchg
pop
popl
lahf
cmp
in
pop
pop
mov
jbe
gs
push
lods
or
dec
mov
or
pop
daa
jmp
mov
jae
and
dec
adc
subb
push
cmpsl
loopne
pop
in
pop
lret
add
testb
or
inc
jbe
test
mov
xor
je
negb
jl
add
pop
mov
push
emms
pop
rcr
cmc
xchg
decl
lds
add
rclb
ja
aam
jmp
xor
xchg
fildll
push
pop
inc
jns
jns
testb
inc
loope
push
lock
push
xchg
pop
in
xchg
pushf
xchg
sub
inc
add
pop
push
add
movsl
mov
iret
xchg
xor
adcl
rolb
add
add
add
stc
fxch
mov
sub
les
dec
sti
push
sbb
cmp
popf
pop
neg
adc
lds
xor
xor
ss
lods
sub
fnstenv
mov
insb
push
add
inc
xchg
in
ja
cmp
add
gs
outsb
sbb
iret
in
hlt
or
xchg
sbb
mov
pop
clc
push
fnstenv
pop
cmp
mov
test
popf
hlt
rcrb
add
fcoml
and
or
mov
dec
int3
out
cmp
imul
mov
add
daa
jne
sbb
sbb
jno
cmp
scas
inc
scas
inc
sbb
cmp
push
cmp
bound
test
rcrb
insl
movsb
int3
decb
into
push
fdiv
cmp
fs
call
sub
daa
fidivrs
adc
idivl
and
filds
nop
add
add
out
into
gs
fsts
dec
mov
add
cmc
add
add
sbb
jmp
test
int3
outsb
imul
jbe
addb
inc
push
jns
push
mov
rolb
xlat
or
and
in
jecxz
mov
mul
xchg
ljmp
loope
add
rorl
stos
xchg
shlb
cltd
adc
mov
popa
jne
inc
xor
mov
jl
imul
icebp
jge
xchg
mov
add
xchg
fsubrs
jg
dec
loope
or
loop
and
push
lahf
adc
ja
xchg
mov
pop
cmp
mov
push
dec
push
push
cld
dec
fwait
mov
sbb
sub
mov
subl
shll
imul
xor
test
das
bound
aad
xchg
mov
into
inc
cwtl
mov
dec
add
add
xchg
and
je
out
mov
in
movsb
mov
add
add
add
push
jns
dec
jmp
adc
mov
add
je
jecxz
jmp
outsb
cmpsl
jo
mov
cmp
or
ljmp
popf
or
xchg
shlb
das
pop
inc
sub
mov
test
pop
popf
lea
sub
mov
test
sub
fwait
shrb
fistps
test
add
call
aam
imul
jecxz
cmpsl
mov
dec
mov
push
pusha
call
lods
add
std
pop
xchg
sbb
add
mov
hlt
lods
jo
lods
sub
mov
bound
out
add
mov
cmc
push
in
mov
sub
in
int3
out
add
repnz
jecxz
mov
inc
lods
adc
je
and
filds
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
bound
cmc
add
add
push
addr16
in
cmpl
or
pop
jno
push
pop
inc
inc
add
cmpsl
mov
jecxz
xchg
cmpb
andb
stos
dec
mov
cmp
and
jnp
or
sub
iret
lods
dec
es
in
int3
mov
jge
sti
lret
ds
flds
mov
fs
fimuls
jbe
dec
sarl
push
mov
daa
pop
jge
lods
ret
lods
xor
mov
std
mov
aas
push
popf
cmp
dec
jnp
pop
cltd
pop
sub
std
mov
shlb
inc
mov
xchg
add
movsb
lods
ss
or
mov
stos
mov
xchg
and
inc
cwtl
aaa
imul
mov
inc
mov
mov
pop
sti
frstor
outsl
jno
sbb
push
lret
xor
mov
add
add
popf
mov
lahf
or
fdivs
mov
add
add
scas
push
xor
dec
rcrb
xor
and
mov
push
call
test
xchg
jp,pt
adc
in
xlat
cmc
jno
xor
ljmp
insl
or
adc
clc
mov
jecxz
fisubrl
scas
pop
leave
mov
push
clc
adc
pushf
icebp
push
sbb
xchg
sbbl
jae
out
scas
fs
jg
ja
push
push
dec
mov
and
cmpsl
push
dec
enter
adcb
lock
cmp
je
les
jl
xor
test
xor
imul
sbb
out
jp
xchg
scas
sbb
aas
adc
test
add
push
pop
push
sbb
jp
pop
inc
push
mov
iret
sub
cmpsb
lods
jl
inc
fmuls
ja
jne
repz
cmpsb
mov
jg
add
mov
mov
mov
ficoml
popa
push
ret
mov
xlat
add
cmc
add
add
testb
cmpsl
pop
dec
mov
sub
xchg
pushf
and
inc
les
cwtl
dec
inc
hlt
push
lods
lcall
and
cmp
cs
jne
pop
inc
mov
mov
sub
push
shlb
add
sub
mov
cmp
in
sub
xchg
ljmp
lret
nop
or
cmp
lods
pop
pop
and
adc
rcll
in
dec
mov
movsl
jae
jae
repnz
cmp
subb
mov
iret
rolb
cmpsl
adc
roll
push
popf
push
aaa
ds
popa
push
in
add
gs
cmp
mov
notb
pop
lret
pop
aad
mov
imul
loopne
sub
mov
aaa
lret
inc
jno
sbb
jae
aad
popf
arpl
add
add
add
sbb
sbb
cmc
jge
jge
fadds
add
add
add
sub
fcoml
shlb
xchg
or
jle
push
daa
es
sahf
or
test
ds
inc
cmc
shll
mov
xor
icebp
mov
rcll
pop
aam
mov
dec
sbb
popf
cwtl
mov
fmull
stc
int3
jne
shl
out
sbb
popfw
dec
cs
sbb
lret
sub
std
and
push
inc
sbb
jle
push
mov
push
push
ror
adcb
out
pop
or
mov
pushf
mov
pop
pop
loopne
pop
xchg
adc
aam
ret
and
scas
push
mov
inc
mov
adc
or
xor
negl
push
mov
je
test
push
pop
scas
jl
movsb
dec
or
aas
mov
stc
std
in
jg
pop
xchg
stc
jp
cli
add
add
mov
pushf
adc
ds
sub
fadd
aas
xchg
flds
add
add
add
dec
adc
out
les
out
cmp
and
pop
xor
idivb
mov
xchg
sbb
popf
mov
fidivrs
ret
aad
lret
addr16
inc
mov
cli
leave
adc
and
stos
dec
push
mov
addb
add
imul
test
addr16
or
sub
das
inc
jge
test
cmc
sub
fistpl
dec
in
jl
mov
mov
lds
sbbb
outsl
jae
mov
mov
adc
popf
in
sbbl
sahf
xchg
xchg
xchg
dec
leave
std
xlat
out
movsl
inc
jge
mov
add
xchg
loopne
xchg
adc
insb
jne
jge
ss
lea
fxch
inc
rcrb
mov
xlat
jnp
fsts
pop
mov
andb
into
mov
cmc
sub
xchg
and
idiv
lahf
insl
mov
shl
jmp
cmc
add
add
js
mov
fildll
ss
movq
mov
ss
dec
lcall
mov
ret
jnp
inc
mov
orb
enter
mov
popa
addr16
pushf
lock
andb
push
cld
cmpsl
icebp
mov
js
dec
cmpsb
int3
mov
push
mov
data16
push
jl
lock
leave
push
aaa
stc
out
sub
jle
xor
dec
push
ret
insb
ljmp
aaa
pop
add
in
xchg
in
leave
dec
mov
sahf
shlb
mov
xchg
sbb
out
cmp
dec
mov
adc
mov
jno
mov
sbb
jnp
orl
mov
ds
inc
cwtl
popf
jle
sub
sub
enter
xor
xlat
inc
cmp
sbb
mov
jecxz
mov
sbb
mov
add
xchg
ja
push
jg
loope
cs
dec
or
sbb
add
outsb
xchg
aam
inc
mov
stos
test
jmp
cmpsb
xchg
cs
push
xchg
mov
cld
cs
es
adc
jp
dec
stos
roll
mov
fcmovnbe
add
test
lods
roll
ror
nop
jl
test
stos
fdiv
and
lock
push
pop
aaa
sbbl
je
or
aad
and
push
adc
movsb
ret
cltd
xchg
xor
cmpsb
and
cwtl
xchg
pop
push
lcall
xchg
pop
out
shl
mov
push
sti
push
mov
in
loopne
in
xor
cmp
cmpsl
movsl
jle
push
xchg
inc
cmpsb
push
out
pushf
lods
mov
rol
push
mov
and
frstor
sar
sub
add
pop
dec
push
cmpsb
pop
xchg
pop
lds
mov
arpl
push
mov
sbb
sub
fists
or
jmp
hlt
aaa
pop
mov
add
imul
xor
hlt
jbe
add
cmc
add
add
gs
nop
lods
shrl
mov
mov
ret
jnp
cmp
inc
addr16
sub
jo
daa
data16
xlat
sbb
out
in
mov
jno
mov
jmp
dec
fcomip
out
lret
ja
mov
or
jg
push
sbb
es
bound
sbb
pop
mov
mov
loop
es
mov
jmp
adc
inc
ret
cmp
or
and
inc
aas
inc
xor
mov
mul
test
cmpsl
rorl
dec
sarl
lods
mov
xor
mov
insl
rclb
test
jecxz
ret
aad
adc
ss
cmc
int3
test
push
adc
dec
adc
pop
xchg
cmpsb
or
ret
mov
fstl
mov
addr16
xchg
or
add
out
fldcw
push
xchg
fsubrs
xor
add
cmc
add
add
mov
insb
loopne
mov
testb
lea
xchg
std
testl
out
fwait
push
int3
lods
cmpsb
lods
ret
adc
add
pop
cmc
mov
xor
hlt
sbb
in
in
sub
mov
fldt
mov
in
lods
inc
leave
lods
inc
sbb
jbe
sbb
in
inc
lcall
imul
bound
cmpb
add
lahf
mov
dec
mov
ret
mov
xchg
mov
mov
scas
mov
je
mov
test
push
std
push
lds
or
fs
mov
xor
sbb
test
push
inc
idivb
and
xchg
mov
lock
dec
or
fistpl
dec
and
pushf
mov
lcall
ss
sahf
or
and
add
add
sbb
sahf
cmc
fsubrp
jnp
mov
ret
xchg
pusha
fiadds
add
add
add
mul
jnp
mov
int
inc
cmp
mov
mov
push
xor
add
pop
sbb
xor
pop
lret
xchg
jae
sbb
inc
and
push
mov
mov
or
ret
aaa
movsl
lret
outsb
mov
loopne
push
xor
js
inc
call
test
jmp
mov
popa
leave
outsb
je
fsubl
in
add
push
mov
adc
cli
pop
push
mov
and
push
fwait
hlt
mov
add
mov
mov
mov
test
sub
rcrl
cltd
sub
imul
dec
lret
jp
cmp
test
sahf
outsb
jle
pusha
inc
ss
mov
lret
stos
mov
add
das
xor
leave
add
cs
ds
cmp
adc
push
lea
add
add
jle
jg
std
fldt
cmp
add
notb
add
cmc
add
add
je
or
push
mov
push
add
mov
jnp
pop
pop
pop
add
push
ret
fisubrl
leave
add
push
cli
lea
mov
movb
xchg
mov
pop
pop
mov
je
cmovno
and
push
mov
lea
jge
jg
inc
out
sbb
sbb
out
lock
pushf
scas
popa
fs
loope
mov
adcl
sub
sub
inc
and
sbb
mov
test
sbb
jp
jcxz
dec
pop
mov
shll
adcl
jnp
mov
lods
pop
in
xchg
loop
or
popf
jae
fisubrl
dec
mov
xchg
lahf
sub
mov
cmp
jg
xchg
clc
popf
xchg
sti
sub
jno
in
sbb
pop
mov
enter
cmp
ljmp
bound
lahf
xchg
dec
loopne
add
add
add
mov
cmp
push
adc
mov
inc
es
mov
ss
mov
test
mov
mov
xlat
or
rorb
mov
cmpsb
mov
and
add
fildl
inc
into
enter
or
nop
jno
jns
cmpsb
add
cmp
lcall
and
jp
add
or
pop
dec
and
lahf
sbb
repz
movb
ds
jns
pop
insl
inc
icebp
roll
leave
mov
inc
outsl
xor
mov
cmp
popf
mov
cmp
mov
xchg
adc
sahf
inc
out
test
dec
mov
mov
mov
ror
cld
int3
dec
enter
ss
mov
pusha
sub
cltd
loop
dec
sbb
push
add
add
sbb
jmp
mov
mov
add
cmc
add
add
data16
cmp
fisttpll
popf
test
test
fadd
mov
stos
fistpll
pop
movsb
fwait
ret
cmp
out
gs
in
test
cltd
bnd
ds
cltd
and
pop
movsl
repz
dec
push
inc
pxor
mov
push
pop
mov
test
pop
in
in
jbe
daa
xor
lods
rorb
popa
out
gs
push
dec
aaa
jbe
sbb
leave
sbbb
ljmp
sub
call
repz
js
mov
jb
inc
push
add
push
mov
push
popf
sub
in
jns
aas
inc
hlt
into
xor
xchg
ljmp
xor
test
out
inc
cmpsb
sub
inc
jmp
push
stos
stc
aas
and
stos
or
sub
add
add
push
out
jp
dec
popl
jg
xchg
add
cmc
add
add
or
add
repz
sbb
ljmp
cmpsb
mov
out
cwtl
adc
outsl
and
cli
inc
adc
cmc
mov
xor
inc
or
or
xor
lret
les
and
adc
outsl
pop
outsl
loop
scas
xorl
loop
add
xor
mov
jns
roll
repz
iret
jl
sub
lods
xchg
sbb
xchg
or
add
xchg
sar
fdivp
lcall
mov
xor
jns
push
xchg
and
mov
jmp
mov
pop
sub
or
push
popf
xchg
movsl
mov
arpl
loope
fcoml
adc
cld
sahf
adc
outsl
outsl
lahf
cmc
and
cltd
leave
daa
sbb
and
cli
cli
ret
ret
mov
cmp
add
jg
mov
lcall
mov
int3
sub
add
cmc
add
add
jno
outsl
xchg
and
fisttpll
jl
jne
add
add
add
or
add
mov
mov
dec
mov
xchg
cmp
movsl
cltd
pop
fs
xchg
ds
push
and
xor
in
cwtl
lds
xchg
push
lret
call
stos
mov
cmp
inc
arpl
inc
pop
push
aam
add
adc
popa
mov
mov
mov
sub
loope
cmovb
out
jns
test
xchg
aam
lock
dec
add
pusha
test
push
test
dec
mov
popf
fs
add
notb
mov
clc
lock
lock
adc
sbb
sub
mov
iret
mov
leave
movsl
jae
inc
shl
mov
jle
stc
std
xor
sahf
lea
add
sbb
jns
daa
data16
push
in
add
add
add
lods
js
add
imul
out
mov
scas
in
mov
cmp
outsl
adc
inc
push
jl
in
rclb
loope
lods
leave
or
subb
jb
fcompl
push
push
outsb
inc
fs
fxch
push
push
jbe
addr16
cmpb
adc
fidivrl
daa
outsb
je
cld
dec
mov
ret
scas
in
jb
aam
jae
rclb
cmp
jno
xor
mov
lods
mov
pop
jge
das
dec
fldcw
loop
inc
negb
rcl
add
mov
dec
jp
es
lods
or
sub
out
lods
and
push
adc
pop
jecxz
or
mov
movsb
scas
inc
popa
sti
jne
add
js
push
xchg
stos
out
mov
or
leave
movsl
cltd
mov
add
add
fadd
fsubp
jnp
push
xor
hlt
adc
add
cmc
add
add
loopne
pop
sti
cmpsb
hlt
bound
lods
lret
lods
mov
sub
clc
sbb
test
push
jle
pusha
jb
into
test
mov
fwait
js
scas
push
loop
dec
cmpsl
rcll
cmp
adc
sub
and
sub
in
push
enter
rolb
aad
cli
inc
jmp
add
lea
pop
push
or
insl
int3
jmp
iret
dec
lods
popa
pop
imul
xchg
and
and
pop
out
out
hlt
int
jp
dec
addr16
mov
lds
jo
jb
cmp
sbb
jo
in
outsb
int3
call
push
cli
cltd
xchg
iret
xor
movsb
mov
pop
fadd
mov
or
fwait
xor
rcr
fistpll
cmp
or
movsl
aam
add
add
sub
cld
cli
jle
addb
or
add
cmc
add
add
cmpl
mov
push
addr16
nopl
lods
push
push
inc
pushf
fs
mov
rcr
mov
out
test
mov
inc
pop
sti
icebp
test
dec
pop
sub
jns
pushf
insb
pop
pop
mov
mov
or
pusha
mov
lods
call
fwait
test
inc
loopne
lods
mov
pusha
loopne
cmp
pop
adc
cmp
adcb
lahf
pushf
mov
fisttpl
sti
and
push
mov
dec
xchg
fwait
adc
dec
sbbl
ret
mov
sbb
mov
sub
insb
sub
repnz
inc
mov
sbb
dec
ds
xchg
adc
xor
jb
mov
cmp
arpl
cmp
pop
subw
pop
ljmp
or
add
lea
pop
jbe
ja
sti
dec
push
sbb
pop
std
out
add
add
add
mov
pop
pusha
outsb
cs
xchg
push
or
adc
mov
shll
sub
or
jns
dec
ss
lcall
or
clc
cmp
add
cmp
cmp
aam
add
and
xchg
dec
mov
pop
sbb
sub
push
idivl
sbb
xor
cmp
lea
mov
or
push
or
scas
mov
repnz
pop
xor
in
psllq
xor
cmc
into
std
outsb
sar
jl
fldl
orb
xor
inc
outsb
cs
jecxz
lods
ret
and
negb
pop
xor
js
cwtl
ljmp
je
jnp
xchg
or
addr16
sub
sub
aaa
lcall
mov
mov
adc
xlat
dec
pop
mov
sbb
sahf
loope
dec
call
add
into
arpl
inc
push
cmc
or
out
add
add
add
mov
decl
push
call
push
dec
adc
lods
int
lahf
pop
push
cmpsb
or
inc
insl
rol
cmp
cltd
dec
pop
das
pop
jb
push
movsb
jbe
dec
sar
imulb
out
push
out
loopne
js
dec
lds
lahf
outsl
sbbb
lret
mov
xchg
fmuls
and
stos
fiaddl
ds
inc
inc
xor
insl
dec
push
and
or
in
sbb
pop
std
pop
mov
add
jb
push
cmc
std
enter
sbb
adcl
dec
jns
push
or
jmp
or
in
pop
pop
popf
outsl
mov
and
jb
cmpl
push
pop
gs
fnstsw
sub
xchg
add
scas
scas
mov
or
lcall
fwait
pushf
into
clc
popa
stos
xlat
and
push
inc
push
iret
jge
sub
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
insb
mov
sbb
xor
sbb
pop
mov
in
repz
setp
addr16
test
cwtl
icebp
pop
add
inc
mov
fisttps
aam
add
pop
in
js
pushaw
jo
jmp
clc
loope
cs
ja
aam
jmp
pop
mov
shll
xchg
inc
jo
xchg
cmc
iret
outsl
adc
into
pop
inc
jno
fistpll
sub
push
bound
xlat
mov
fsts
sub
and
jae
mov
or
cmpsb
and
int3
mov
or
jle
es
push
call
add
adc
mov
ret
adc
xchg
mov
aad
mov
stos
arpl
sbb
and
call
xor
push
and
test
repz
add
mov
cld
fisubrl
sti
dec
roll
add
add
lock
jg
mov
xor
xchg
pop
fsubr
add
cmc
add
add
sbb
and
aad
int3
dec
fcomps
pop
adc
sbb
push
dec
pop
std
addb
cltd
insb
or
sub
repz
push
outsl
mov
out
add
inc
hlt
outsb
mov
call
jbe
mov
cmp
sahf
and
mov
out
leave
mov
cmpsl
lea
mov
xor
pop
imul
in
loop
repz
enter
movsl
aam
js
stos
rorl
hlt
rolb
pop
jge
xchg
addr16
stos
or
pusha
or
std
scas
add
jl
sub
or
cld
das
xchg
int3
inc
pop
js
and
xchg
ss
fildl
mov
arpl
cwtl
int3
pop
cmp
inc
daa
ret
push
inc
pop
js
jle
pop
popf
ror
bound
add
lods
and
out
jecxz
pop
rolb
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
jge
ja
ljmp
inc
cmp
ret
xlat
or
lds
cmpsb
lcall
leave
pop
push
or
or
int3
dec
inc
sbbb
testl
lock
and
repnz
scas
and
pop
cmp
notl
into
in
inc
out
and
cmpsb
stos
dec
ja
divl
ficompl
popf
lea
inc
jg
icebp
push
jmp
shlb
jmp
ljmp
jno
mov
cld
mov
stc
pop
sub
mov
pop
dec
jb
push
stos
dec
subl
and
test
lret
sub
lock
jl
psubb
inc
xchg
mov
sub
in
sub
ret
xchg
inc
rol
and
dec
mov
fildll
popf
lahf
jns
inc
cmpsb
ljmp
mov
adc
sbb
cs
or
mov
ret
and
adc
sbb
push
push
subb
add
add
mov
dec
js
stc
mov
push
nop
aad
mov
xor
jmp
add
add
add
xchg
adc
shlb
and
sbb
push
lcall
xor
das
xchg
cmp
insb
call
data16
jmp
cmp
dec
popf
pop
cmp
scas
addr16
fistpl
in
es
or
lea
sbb
xchg
xchg
mov
ds
mov
cmp
shl
lods
dec
ljmp
jbe
or
inc
mov
jo
negb
arpl
adc
jmp
dec
mov
into
popf
std
popf
pop
jo
pop
out
rolb
pop
sub
push
rcrb
fisubl
pop
jg
dec
aas
imul
fstps
inc
pop
inc
adc
mov
mov
and
or
loop
cmovb
mov
pop
aaa
fisubrl
cmp
dec
ret
add
add
insl
repz
add
cmp
add
cmc
add
add
mov
sahf
sahf
lcall
jb
stc
and
xlat
mov
xchg
cmc
push
mov
subl
cmp
std
mov
pop
popa
mov
mov
xchg
mov
mov
xchg
jns
cmovnp
pusha
jp
cltd
sub
pop
sub
mov
pop
cltd
scas
sar
fwait
mov
sbb
push
jnp
out
imul
out
xor
sbb
leave
mov
adc
pop
jl
xchg
push
pushw
aam
movsl
add
sbb
push
dec
pushf
sbb
jge
mov
jecxz
jbe
imul
mov
cs
aam
adc
je
jp
xchg
or
je
aam
push
into
mov
mov
xchg
adc
jle
lea
sbb
cmp
out
negl
ret
sbb
pop
xor
inc
jo
xchg
into
add
add
mov
pxor
jnp
sbb
mov
cmc
add
add
mov
lret
mov
inc
mov
movsl
cmp
enter
xchg
mov
mov
aaa
sbb
xchg
jecxz
iret
push
loopne
adc
out
push
cmpsb
fidivrl
movsb
mov
jno
jge
mov
inc
call
push
aaa
out
iret
je
lahf
aad
adc
call
mov
mov
adc
or
jge
mov
aas
icebp
cmp
cmpsl
jmp
cmpsl
cmp
mulb
loopne
inc
push
adcl
xchg
and
cmpl
nop
mov
imul
sub
inc
adcb
jno
mov
dec
push
cs
jno
std
stos
imul
frstor
cwtl
jne
jns
lcall
stc
into
cltd
mov
dec
jg
lods
clc
repz
std
mov
jno
dec
std
js
cli
mov
hlt
test
xor
mov
push
int
adc
roll
add
out
lods
xor
aas
xlat
jmp
popa
test
movsl
out
add
cmc
add
add
stc
xchg
cwtl
lret
repnz
xchg
or
add
jge
popf
rol
data16
mov
aam
ds
jecxz
movsb
test
inc
daa
pop
sahf
pop
enter
sub
jb
mov
out
test
pop
jae,pn
jae
aad
sbb
dec
jmp
test
lock
or
insl
hlt
cmp
pop
and
jmp
jge
cmp
nop
cmpsl
in
lcall
dec
mov
jmp
pop
push
inc
and
sbb
sar
popa
imul
iret
lods
shr
cmp
adc
push
sahf
or
mov
push
inc
push
rcrl
mov
push
jbe
or
cwtl
inc
mov
jo
ret
xor
or
lret
pop
adc
fwait
or
jo
ret
jg
sub
push
daa
adc
add
add
jb
scas
cmp
int3
repnz
jecxz
or
add
add
int3
les
jg
scas
mov
fistpll
bound
jp
jno
loopne
mov
dec
push
out
cmpsb
ja
sub
xchg
xchg
xor
scas
dec
mov
fwait
call
ss
out
in
jno
ret
dec
push
imul
xor
imul
sbb
push
gs
loop
inc
sahf
jmp
inc
sbb
mov
std
shl
mov
stos
fmull
xchg
inc
sbb
enter
sbb
pop
bound
push
sub
pop
ja
jns
pop
repz
adc
iret
popf
jecxz
sahf
lock
movsl
call
ret
mov
out
fiaddl
lea
gs
andb
and
pusha
nop
shr
lahf
xchg
insl
ss
je
inc
cmp
fldl
insb
push
sbb
cmp
push
inc
pop
sti
add
add
xlat
mov
bound
lock
cmc
add
add
push
mov
andl
sbb
scas
pop
mov
jbe
aaa
out
inc
add
cmp
xchg
add
jae
clc
test
sbb
mov
sub
push
inc
xchg
inc
push
fstl
cmpsl
jg
cmp
jne
subb
xor
adc
or
clc
cmpl
lods
push
fimuls
mov
xchg
test
add
sbbl
mov
xor
mov
cld
mov
shrb
mov
mov
mov
push
xor
jno
push
cmpsl
push
inc
in
aaa
fistpll
adc
out
ds
sbb
daa
pop
add
dec
addr16
pop
sub
cmp
ss
xchg
push
imul
jmp
out
popa
push
xchg
or
sub
xor
lret
outsl
std
push
push
cld
les
xchg
mov
inc
or
jecxz,pt
sub
mov
enter
add
add
mov
aas
jp
int3
icebp
mov
mov
cmc
add
add
outsb
data16
lcall
xor
dec
sbb
dec
jg
jb
or
outsb
xchg
daa
xor
dec
out
inc
mov
jg
jle
sbbb
lods
mov
jle
imul
pop
scas
lock
cmc
lock
ror
sub
or
jmp
in
dec
std
inc
sbb
iret
mov
fisubs
out
lea
lea
enter
sbb
out
mov
and
js
cs
xor
std
sbb
or
xchg
mov
dec
jne
adc
stc
hlt
shll
pusha
iret
mov
dec
cld
mov
and
or
aas
je
cmp
sub
push
add
test
xrelease
jbe
test
cmpsl
mov
cmc
lret
jbe
insl
mov
sub
vmovsd
adc
push
pop
jae
stos
cwtl
fnsave
cmp
add
loop
fadd
sti
mov
nop
rolb
jns
add
cmc
add
add
adc
mov
loop
push
inc
in
jns
popa
push
rcrb
and
xchg
rorl
fisubs
dec
test
mov
inc
pusha
xchg
test
sbb
fistps
loope
faddl
sbb
mov
cmp
or
cmpsb
daa
pop
stos
mov
push
out
fnsave
call
adc
fstl
jmp
stos
lods
pop
mov
lcall
loope
in
shrb
cmp
clc
aas
xchg
push
mov
jno
jl
pusha
in
gs
outsl
inc
sbb
xor
sub
add
mov
or
imull
jae
aam
js
pusha
jo
ljmp
loop
push
aaa
xchg
mov
jae
inc
lret
cmp
sbbl
dec
xor
xchg
mov
dec
add
add
into
adc
neg
jge
push
xchg
xchg
inc
outsb
outsb
repz
cmc
add
add
scas
push
xchg
mov
mov
xchg
and
jns
or
pop
mov
jl
in
movsb
push
in
and
shlb
or
in
sbbb
data16
sarl
test
lret
out
pop
gs
jmp
xchg
lds
and
jno
lahf
xlat
jae
jg
mov
sti
mov
inc
test
rolb
push
pop
enter
punpcklwd
adc
popa
mov
add
push
add
push
dec
ljmp
push
pop
loopne
xor
mov
cmpsb
mov
cmp
jo
cmpsl
cmpsl
xchg
adc
jno
cmp
mov
jp
sbb
and
add
xchg
xchg
sbb
dec
ja
stos
cmp
test
icebp
xchg
sub
jl
xchg
sbb
test
lahf
jmp
or
inc
stos
add
add
dec
sub
or
push
jg
hlt
add
cmc
add
add
sub
mov
call
mov
add
clc
mov
push
pop
sub
xchg
movsl
sub
cmp
clc
test
lcall
cltd
pop
ljmp
or
outsl
push
ljmp
add
xchg
mov
mov
mov
cmp
mov
hlt
in
fisttps
int
pop
lods
loop
cmp
enter
add
push
mov
inc
scas
mov
int
lret
and
loope
std
sub
lea
cmp
inc
loopne
xor
fisubrl
cmp
jge
sbb
mov
test
xchg
lea
je
incl
push
cmpl
rclb
sbb
mov
sbb
frstor
jb
test
leave
add
add
ja
and
aaa
negl
ss
pop
cmc
add
cmc
add
add
push
cmp
nop
in
lcall
js
cmc
shrb
push
xchg
sbb
stc
fs
clc
int3
mov
les
cmp
lds
cli
testb
aaa
test
inc
jae
bound
dec
cltd
push
mov
sbb
fsts
or
je
xchg
pop
xchg
jno
fsubrl
mov
outsl
mov
pop
inc
movsb
mov
int3
aaa
test
pop
pop
sti
push
mov
xchg
push
sbb
idivl
out
insb
adc
insl
aaa
sbb
mov
pop
cli
fwait
ret
sahf
jnp
mov
sub
and
scas
data16
or
sahf
jbe
popa
mov
imul
pop
sbb
mov
xchg
out
outsb
in
xchg
jecxz
jmp
mov
mov
testb
cmc
add
add
cltd
mov
xchg
xchg
inc
jbe
es
mov
ds
pop
in
testl
xchg
or
sahf
and
into
and
push
cld
push
adc
push
and
cmp
adc
stc
fwait
sbb
popa
test
jb
shl
popw
lock
add
cld
ljmp
pushf
or
xchg
imul
nop
pop
jno
addr16
dec
fldcw
sub
and
add
mov
divl
arpl
rorl
bnd
xor
cwtl
xchg
fidivrs
jae
or
pop
xchg
fmull
testl
push
pop
sbb
jmp
cmpsl
ss
push
fsubl
lahf
xchg
push
dec
jne
insl
into
out
dec
xchg
repz
shrl
add
add
jne
cmp
pop
mov
add
cmc
add
add
stos
sahf
xchg
xor
sub
mov
rcll
ja
shrd
orl
lock
cmpsl
mov
xor
mov
jecxz
out
or
mov
lock
push
sub
jnp
fprem1
outsb
bound
mov
jne
cld
cmp
imul
imul
mov
xchg
add
das
mul
and
jp
in
sarb
jns
sbb
mov
push
jle
and
scas
mov
xchg
jne
jecxz
outsb
dec
mov
addr16
cld
jl
sub
loope
inc
gs
mov
lret
cmpsb
lock
cmp
push
sub
sub
adc
stc
pop
mov
mov
xchg
add
add
imulb
testb
iret
push
aaa
clc
add
cmc
add
add
iret
mov
xchg
enter
or
sbb
jbe
cs
shll
inc
sub
mov
bts
or
into
nop
pop
bound
loopne
iret
repnz
sti
dec
cmp
cld
mov
or
popl
insb
mov
xchg
sub
scas
pop
mov
mov
mov
sub
ja
jne
xchg
loopne
lods
add
jbe
mov
jmp
sub
popa
push
js
repz
repz
adc
mov
push
cs
jecxz
cltd
ljmp
clc
push
mov
mov
lds
lea
xor
fldt
push
mov
or
mov
sbb
out
hlt
pop
and
jecxz
dec
sahf
addr16
dec
add
cmp
inc
popw
jmp
clc
rcrb
sub
add
add
add
xor
xchg
fwait
bound
fdivr
mov
sub
add
cmc
add
add
das
or
in
sti
test
xchg
call
dec
sbb
pop
lods
sahf
sub
jns
or
pop
sub
dec
negl
mov
and
xor
les
aam
push
aam
mov
sub
mov
mov
insb
xor
test
stos
insl
mov
or
push
out
xchg
push
adc
sbb
mov
cltd
jg
inc
lcall
sbb
add
xor
push
je
out
adc
add
lret
in
test
or
loop
or
mov
jo
dec
xlat
insl
stos
repz
and
in
jge
pop
lods
jo
test
scas
jp
pop
sti
dec
push
out
or
xchg
jne
stos
mov
mov
aad
shll
sub
push
testb
das
mov
add
adc
int
in
idivl
pushl
dec
sbb
and
add
cmc
add
add
fwait
xor
imul
jae
xchg
and
andb
or
hlt
movsb
mov
push
jnp
push
inc
daa
push
les
ljmp
cmpsb
mov
shlb
add
ds
mov
fistpl
sbb
roll
fisttpl
into
pslld
sti
mov
inc
pop
stc
cmp
fdivrl
notl
xchg
xor
pop
rcr
jg
ds
mov
mov
sbb
jge
xchg
push
pusha
repnz
push
lret
sbb
pop
or
repnz
ds
iret
pop
jae
add
pop
or
stos
hlt
cmp
pop
cmp
mov
mov
jbe
mov
add
ljmp
pusha
loop
shr
adc
adc
js
jns
pushf
mov
aam
and
stos
jle
in
rcl
adc
lea
add
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
inc
cmpsb
pop
mov
mov
mov
in
adc
and
lret
push
jle
jb
call
dec
mov
iret
mov
jp
cmpsl
lock
lret
loope
mov
outsl
negl
add
and
xor
mov
sbb
inc
imul
stos
inc
pushf
in
jno
dec
cmp
scas
mov
jne
dec
icebp
fldt
or
pop
mov
stos
adc
adc
jmp
add
rcrb
icebp
add
mov
cmp
inc
les
xchg
add
jne
cmp
xor
mov
mov
cmpsb
jno
outsb
cmpsb
fwait
dec
pusha
fwait
lcall
cltd
inc
test
dec
xchg
push
in
jnp
adc
fcomps
loop
leave
jp
lret
sbb
cltd
adc
inc
faddp
mov
pop
bound
test
add
mov
lcall
mov
insl
dec
or
add
cmc
add
add
adc
cmp
mov
leave
outsb
push
cwtl
stos
pop
add
mov
jle
bound
xchg
xor
cld
fwait
dec
icebp
arpl
xor
aam
icebp
stos
stos
mov
test
stos
insb
push
mov
push
je
xor
pop
fistpl
add
lret
std
push
gs
outsl
loop
and
out
xchg
movsl
mov
adc
lods
sub
imul
out
mov
pop
daa
cmp
mov
repz
lahf
mov
addb
pop
lods
add
fwait
pop
movsb
push
jecxz
iret
popf
lock
iret
inc
lret
ret
xchg
push
mov
in
scas
icebp
jne
std
std
ja
cwtl
ljmp
loopne
push
jge
loopne
push
push
fnstsw
cmp
lock
ficoms
pop
repnz
sarb
mov
xchg
or
add
jae
cltd
dec
mov
fs
add
cmc
add
add
sti
adc
aad
mov
cmc
je
mov
stos
stos
mov
inc
lcall
cmp
int3
out
pop
and
pop
cmpl
ds
out
adc
jns
pop
push
or
inc
mov
cmp
xchg
dec
ds
int3
mov
ret
jge
outsb
test
movsl
cwtl
stos
sub
jbe
pop
je
pop
es
popf
inc
xor
push
push
pop
cmp
in
fxtract
hlt
sbb
pop
sub
jecxz
and
or
clc
push
stos
or
scas
add
push
in
addb
shr
inc
insb
mov
and
aas
mov
jg
in
push
or
jecxz
push
test
adc
lret
mov
insb
xor
imul
lret
loopne
dec
scas
and
inc
and
dec
add
insb
push
add
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
push
loop
cmc
std
add
cmc
add
add
out
jne
add
shrb
xchg
icebp
stos
adc
movsb
jbe
mov
adc
ficomps
shll
and
stos
leave
jmp
cmp
or
out
lea
pop
aaa
sbb
sbb
bound
pop
fsub
int3
fstpl
mov
cmpsb
ret
aas
adc
pop
xchg
xor
mov
ljmp
out
cmp
add
dec
push
int3
negl
mov
adc
inc
ffreep
arpl
push
sub
leave
jmp
ret
arpl
push
mov
movsb
inc
xchg
xor
sbb
jbe
cmp
cltd
mov
imul
lods
sub
mov
or
rcrl
cmp
call
pop
test
ficomps
xor
dec
lahf
pop
sub
into
fnsave
out
lahf
push
push
dec
orb
lret
add
jno
test
jg
xor
or
sbbl
cmc
add
add
pop
bound
clc
sbb
bound
inc
not
and
orl
mov
call
ret
out
mov
cmp
insl
adc
idivl
and
cmp
test
dec
and
in
js
inc
int3
insl
lock
bound
cmp
pop
lds
das
mov
mov
pop
jmp
and
int3
inc
xor
daa
xor
push
jle
mov
or
aas
sbb
push
cli
mov
fwait
addr16
ret
addr16
push
rclb
dec
or
cmpsl
fnstcw
pop
mov
cmpsl
stos
inc
jno
dec
push
stos
imulb
insb
dec
push
arpl
add
xlat
inc
popf
and
mov
or
in
addr16
add
or
xchg
pop
sub
add
outsb
mov
xchg
mov
popa
and
nop
mov
inc
jns
fs
add
add
movsb
push
in
cmc
jne
pop
adc
or
scas
mov
incl
add
add
add
xchg
push
push
and
sbb
xchg
out
push
fdivrl
mov
dec
jle
jns
cmp
push
push
sub
dec
mov
ret
ss
pushf
dec
mov
cltd
addl
jne
cmp
mov
adc
adc
enter
lea
sahf
push
jmp
lret
in
enter
mov
push
fsub
movsb
xor
xchg
mov
sub
lahf
das
mov
xchg
mov
xor
sub
loop
adcb
cwtl
call
dec
cld
in
mov
cmp
ret
or
cmp
cli
shrd
ret
test
dec
and
sub
inc
insl
add
arpl
inc
cltd
xchg
daa
lahf
mov
inc
mov
mov
xor
mov
jnp
outsl
dec
aad
pop
push
cld
rsqrtps
inc
fwait
dec
aad
aas
mulb
add
out
shlb
aas
out
fwait
aaa
call
sub
cmc
add
add
std
int3
or
in
mov
cld
jbe
push
or
insb
xchg
cs
push
dec
xor
lahf
xchg
leave
mov
out
dec
in
test
lahf
je
mov
dec
rcr
lock
mov
ja
sub
daa
mov
push
dec
add
pop
mov
or
movsb
sub
lahf
sarl
ror
repnz
popf
mov
adc
pop
sub
aam
adc
fmuls
pop
mov
adcl
push
push
loopne
sub
dec
stc
inc
push
cmp
jnp
lock
adc
je
mov
and
or
add
das
lods
fldl
bound
lds
lahf
shrb
das
in
leave
out
jg
push
jns
sub
daa
pop
add
add
mov
lcall
outsl
and
add
add
add
add
push
xchg
jmp
pop
add
or
sbb
dec
push
and
sbb
mov
cwtl
lahf
repnz
test
gs
fcmovu
test
loop
shl
shl
and
jle
adc
fildll
clc
lods
ja
xor
sbb
out
in
fstl
pop
xchg
flds
std
fmul
imul
mov
xor
jb
int3
pop
or
lcall
cli
loopne
jl
lcall
int
pushf
inc
sub
test
lea
dec
xor
cld
jnp
and
mov
jmp
push
dec
aaa
call
sbb
mov
inc
aaa
mov
stos
xchg
jmp
and
scas
sub
ret
cli
lods
inc
ret
mov
dec
inc
or
mov
pushf
mov
jl
push
shld
sbb
and
packssdw
in
in
or
ss
arpl
add
add
ret
bnd
rorb
cltd
jl
push
mov
cmc
add
add
sub
lods
add
fdivl
sub
cs
sub
jns
fwait
adc
aad
inc
popf
xor
push
call
stos
popa
rorb
sbb
push
movsb
fisttpll
mov
arpl
adcb
test
jp
fmulp
and
loopne
stc
js
adc
ret
lea
and
push
je
lret
sbbb
bound
xchg
popl
mov
dec
push
and
and
test
ret
inc
push
es
mov
repz
and
pop
lock
dec
jge
mov
pavgb
push
push
pop
fsubrl
scas
scas
mov
dec
add
cmp
inc
out
aad
icebp
push
cltd
fiadds
cmp
aas
lea
cwtl
jle
push
cmp
stos
jmp
cltd
fisttpll
adc
xor
out
mov
add
std
aaa
mov
lret
jne
dec
subb
add
add
add
add
sub
cmp
add
movb
inc
sbb
dec
insb
fmuls
ljmp
sbb
fisttps
xor
mov
push
dec
incb
je
out
xchg
daa
mov
cld
call
and
xchg
cli
stos
repnz
mov
mov
adc
es
sbb
xchg
cmp
testl
and
lcall
dec
or
xchg
outsb
xlat
adc
push
mov
add
dec
xchg
flds
or
subl
sti
xchg
mov
cltd
pop
jge
and
jp
fdivr
fcomps
inc
stos
rorl
or
jl
or
push
or
icebp
jnp
fisubs
adc
mov
xchg
or
iret
enter
rcll
jns
pop
out
or
fcmovne
lret
inc
pop
adc
or
add
add
insl
aam
mov
fs
test
dec
test
add
or
add
push
fsts
inc
adc
add
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
mov
gs
mov
test
add
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
