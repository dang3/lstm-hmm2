push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
xor
bound
pop
bound
sub
pop
add
pop
jne
clc
in
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
pushl
push
or
fs
fisttpl
scas
pusha
push
jge
mov
pop
lahf
dec
xchg
mov
enter
loop
frstor
fnstenv
lcall
icebp
mov
xor
or
lret
add
outsl
mov
cli
jb
sbb
jae
cmp
pop
out
cmp
xchg
xor
xchg
and
adc
xorb
xor
and
data16
push
sub
ret
aad
and
cs
inc
xchg
xchg
xchg
insb
mov
cmp
bound
dec
sbb
or
int3
out
xchg
fcoms
decl
xor
sbb
cmp
add
add
xor
fstp
dec
inc
dec
push
in
cs
push
push
dec
cmp
sahf
jp
push
xchg
push
mov
pop
sub
lods
mov
xor
push
movsl
cmpsb
popa
pop
push
test
sub
ds
pusha
cmp
jl
mov
test
mov
dec
xor
sti
test
lcall
lret
movsl
shlb
cmpsb
mov
leave
mov
dec
mov
ds
pop
sub
sbb
jge
add
decb
test
pop
mov
data16
or
addl
and
test
cltd
jl
and
xor
sbb
loope
mov
loop
hlt
loop
push
push
adc
fs
and
mov
jnp
fildl
hlt
add
vpminsw
inc
sbb
jge
pop
mov
and
aad
xchg
jle
outsb
adc
outsb
mov
incl
mov
adc
mov
jb
bswap
mov
mov
cltd
adc
or
mov
jmp
mov
into
js
gs
add
outsb
add
push
out
add
mov
pop
imul
adc
push
insb
ffreep
enter
dec
or
cmpsl
add
in
cmp
fs
or
arpl
jnp
sbb
cwtl
in
lret
or
sbb
mov
cmp
push
mov
arpl
xchg
imul
xchg
push
subb
outsb
xchg
inc
jbe
insl
push
ret
jle
int3
aad
mov
outsl
cmp
hlt
bound
xchg
inc
push
loope
inc
and
xchg
dec
outsl
push
cmovns
in
inc
pop
lcall
data16
in
shlb
sbb
or
lcall
flds
lcall
popf
fldenv
std
outsl
out
ja
stc
lods
sub
ss
add
inc
jp
sarb
push
jge
shl
cmpsl
and
pop
mov
dec
pop
add
cmp
pop
xor
xchg
push
or
mov
in
or
push
fnstenv
enter
push
outsb
dec
add
arpl
movsl
push
or
movsl
or
cwtl
movsb
inc
adc
pop
jae
mov
cmp
jne
jne
add
and
mov
mov
mov
addb
mov
out
push
jnp
rcrb
xor
bound
xchg
cmp
xchg
lret
daa
lret
dec
mov
lea
insb
jns
shrb
push
fcoml
adc
sub
sub
leave
js
dec
data16
lods
sbb
in
and
loop
push
xchg
imul
js
in
push
clc
arpl
fs
or
test
cmc
outsl
xor
mov
negb
outsb
iret
mov
das
pushf
test
dec
mov
int
push
cmp
push
xor
mov
xchg
jge
fdivrs
jo
inc
pop
in
addr16
in
vpcmpgtw
stc
lret
jnp
adc
xor
sbb
imul
std
pop
lret
lods
pop
jae,pt
xchg
mov
imul
divl
sti
xor
jmp
mov
ja
mov
test
and
and
adc
cmp
cmc
mov
pushf
int
or
inc
fisubrl
pop
cmc
sub
in
mov
or
int
xorb
fldcw
xchg
insl
mov
popa
cmp
pop
sbb
insl
push
jno
jecxz
iret
imul
sarb
enter
push
cmp
or
outsb
clc
or
xchg
out
push
call
lcall
push
mov
leave
sbb
scas
sbb
adc
imul
scas
test
jecxz
cltd
xchg
adc
mov
pop
add
mov
add
push
xchg
outsb
incb
push
jnp
and
aas
jl
lods
lock
jbe
jo
cmc
aad
jmp
dec
and
mov
es
mov
les
jl
xchg
mov
clc
xchg
daa
and
repz
fdivs
jmp
jl
cmpsl
fcmovbe
lock
cmp
pop
lret
pop
jle
add
lock
pop
inc
sub
sbbb
dec
mov
out
stos
xchg
enter
loope
push
mov
mov
sub
iret
loop
jae
mov
dec
xchg
ror
inc
sbb
ret
jl
pop
fwait
rorl
fwait
lods
daa
bound
nop
sub
push
bound
inc
mov
arpl
rorl
jno
out
mov
xchg
xchg
dec
dec
mov
aad
adc
lret
fidivrs
aam
push
mov
out
sbb
add
or
sub
int
loopne
fwait
dec
lea
lahf
fsubs
push
enter
out
pop
imul
sub
mov
sbb
dec
and
ja
shr
aas
xor
fcoml
in
fmull
sbb
cmpsb
fildl
cmpsb
negl
sbb
loop
insl
cld
lahf
xor
cltd
dec
nop
jl
xchg
adc
mov
cmp
mov
popa
dec
jne
fs
imul
paddsb
lods
shrl
pop
and
xchg
lods
mov
dec
add
incl
xchg
xorl
nop
mov
sbb
xor
int3
int
rcrb
pop
lahf
loope
fisttps
sbb
jns
pop
shlb
add
int
jno
inc
notl
pop
jno
inc
shlb
inc
mov
push
push
jo
int
mov
ds
movsb
pushf
pop
inc
jg
cld
mov
inc
loop
lcall
insl
cmc
xor
in
enter
mov
add
popl
inc
mov
mov
dec
sbbl
sub
lods
jmp
imul
cwtl
es
rclb
mov
mov
in
xchg
lret
jns
fsubl
inc
dec
in
mov
and
rcl
add
lock
mov
andl
pop
cltd
movsl
scas
test
mov
int
repz
aas
dec
and
lahf
shl
adc
rcrl
ficoml
aad
dec
add
pusha
lds
and
int
lods
sti
iret
ret
lret
loopne
mov
sbbb
insb
ret
push
adc
clc
push
cli
pop
mov
push
xchg
sarl
fcoml
and
mov
int
insb
sti
outsb
mov
jne
and
dec
cld
in
inc
inc
jb
push
xchg
enter
in
movb
xor
ret
or
mov
jae
divb
movhps
rolb
mov
pop
ret
arpl
loope
imul
loop
cmp
popf
mov
test
hlt
cmp
js
push
lret
jl
jnp
jmp
jecxz
stos
clc
into
mul
out
cmp
loopne
and
cmp
cs
sbb
in
dec
sbb
adc
inc
push
fnstenv
dec
shll
inc
jae
pop
leave
inc
dec
mov
adc
shl
inc
push
enter
das
sbb
dec
jg,pt
dec
mov
adc
lret
jle
repnz
xchg
aaa
dec
sub
call
sahf
mov
fsubp
bound
adc
aaa
mov
add
xchg
imul
sub
scas
rcll
into
sbb
or
add
pop
push
mov
pusha
xchg
adc
sub
andl
jne
xchg
shrl
lock
pop
rol
push
outsl
mov
das
adc
jno
fiaddl
cli
sub
pop
je
adc
adc
add
push
jg
mov
test
loopne
xchg
cmp
cmpsb
mov
or
cmpsb
aas
testb
out
test
jg
sbb
lods
adc
cmpsb
inc
adcl
popf
or
jecxz
jecxz
inc
jns
sbb
add
icebp
sbb
lahf
jg
inc
leave
nop
in
ss
js
mov
mov
cmpsb
repnz
jb
push
xchg
jg
mov
mov
mov
adc
sbb
cmp
cmp
jg
jg
add
mov
inc
mov
mov
int
xchg
cli
mov
push
mov
xchg
pop
xchg
movsl
into
pop
out
dec
jl
jnp
test
scas
adc
add
cmc
xchg
push
xorb
pop
mov
add
xchg
add
mov
outsb
addr16
ret
test
mov
mov
loop
jmp
ret
mov
inc
stc
testl
repz
sub
aad
inc
fistpl
es
push
pop
test
mov
arpl
imul
aaa
pop
int
scas
lock
scas
sub
pop
test
inc
or
imul
dec
inc
insl
inc
sti
xchg
dec
inc
imul
daa
int
cmp
jno
in
or
fisttpl
pop
ret
out
ss
adc
inc
pop
pop
mov
nop
mov
mov
sti
push
test
inc
inc
fcompl
sbbl
mov
and
movsb
mov
lahf
mov
mov
mov
mov
sti
push
aad
push
stos
xorb
in
mov
adc
aaa
jae
stos
push
fistl
test
loop
add
mov
ret
mov
test
mov
mov
xchg
outsl
stos
pop
in
pop
test
jg
popa
ret
jg
push
pushf
lock
out
mov
outsl
mov
aad
mov
repnz
ljmp
push
inc
and
fcompl
mov
and
loop
pop
cmpb
into
jae
add
jmp
out
iret
adc
fdivrs
mov
enter
js
xchg
rcl
mov
pusha
subl
adc
or
in
pushf
leave
xchg
shrl
pop
xor
in
int
les
jge
repz
int3
sarb
pop
adc
mov
and
add
mov
inc
insb
pop
cmpsb
adc
lcall
nop
iret
mov
pop
lock
push
stos
adc
mov
dec
xchg
fs
xor
sub
xor
loop
or
cmp
call
lea
push
push
scas
xchg
rorl
pusha
mov
test
xchg
test
and
xor
ja
movsl
cmpsl
inc
out
mov
pop
jb
int
and
jg
xchg
xchg
loop
std
mov
or
imul
mov
cmp
clflush
cwtl
dec
push
xchg
in
push
push
mov
test
and
lret
pop
dec
mov
mov
push
and
jno
shrb
mov
push
mov
aas
jle
mov
pop
mov
sti
mov
dec
mov
mov
test
fldenv
mov
inc
sar
push
dec
and
jne
sbbl
loop
mov
mov
int
pop
lods
mov
pop
xor
repz
adc
fldl
xor
or
into
cmp
push
jl
pop
fldt
jbe
sub
fs
test
pop
cmp
jb
bound
cmp
push
or
mov
and
ret
sarb
sahf
mov
cmp
lret
mov
shrl
push
adc
jae
mov
add
movsl
shrl
push
mov
sbb
enter
roll
cmp
negl
imul
es
cmpsl
fldt
mov
pop
fsubl
inc
lock
inc
insb
xchg
xchg
adcb
inc
add
das
popf
fs
call
rclb
mov
sbb
aas
cld
jmp
adc
sti
cmpsb
and
sarl
les
mov
cmp
pop
icebp
insl
in
std
sahf
ret
mov
lds
loop,pt
sbb
or
test
push
jae
pop
add
xchg
mov
cmpsl
mov
xor
cmp
or
loopne
pop
xlat
sbb
adc
je
pop
xor
pop
int
fwait
sbb
jbe
pushf
inc
mov
xor
xchg
xchg
aad
mov
jno
ja
mov
sub
inc
sbb
lods
push
lahf
jbe
and
popf
imul
int3
xor
inc
push
lock
jg,pn
push
lock
or
mov
sbb
adc
cs
mov
add
jecxz
push
int3
pop
scas
orb
adc
loope
out
shll
add
int3
call
into
mov
mov
ss
and
xchg
and
ds
test
lock
cwtl
xchg
arpl
js
loopne
ret
jnp
mov
ds
enter
adc
aad
jmp
jecxz
in
xor
sahf
pop
aas
push
mov
loopne
jb
pop
int
stos
bound
xchg
adc
push
cltd
fsubl
cmp
pop
rcr
aas
and
adcl
rclb
mov
aam
push
jmp
jle
fcoms
mov
test
cmp
fbstp
in
jmp
loopne
xchg
inc
push
cmp
stos
test
adc
or
shlb
outsl
insl
adc
xchg
adc
adc
inc
pop
in
pop
aas
adc
fiadds
mov
xchg
xor
test
inc
mov
jge
scas
ja
inc
in
jecxz
xlat
cmp
insl
cmp
mov
movsb
add
and
xor
xor
xor
test
pop
repz
jno
jo
cmp
cmp
mov
cli
ljmp
lcall
push
or
dec
es
mov
sar
hlt
and
aam
inc
mov
mov
pop
push
and
pop
cmp
test
cwtl
mov
dec
ret
insb
inc
mov
popa
out
shlb
out
jl
pop
push
cmc
mov
mov
dec
cmp
lods
or
mov
sbb
inc
or
fcoms
fstl
ret
stos
dec
cmc
subl
xchg
mov
adc
jae
outsb
push
adc
notl
jge
dec
sahf
js
inc
out
mov
cmp
test
pushw
aam
xchg
pop
in
subl
mov
movsb
or
jne
push
test
xor
cld
mov
push
push
fimuls
push
into
jp
or
bound
mov
pop
stos
pop
aaa
sbb
push
push
sbb
mov
cmc
cmpsl
jecxz
xor
stos
out
sub
sbb
fidivrs
push
sbb
insb
and
pop
inc
dec
popa
loope
xor
jae
push
in
and
xchg
lods
mov
xchg
add
fistl
cmp
jae
ret
jg
movsl
out
adc
inc
inc
outsb
xor
es
or
push
ds
push
jecxz
mov
inc
xchg
inc
dec
or
cs
mov
mov
cmc
movsl
jge
or
pop
fbld
lcall
xlat
repnz
xchg
iret
faddl
or
xchg
gs
in
pop
mov
xchg
inc
jbe
aad
mov
pop
cli
pop
or
clc
push
loope
pop
xlat
push
hlt
pop
xlat
cltd
pushf
test
pop
cmp
and
push
sub
mov
jo
lock
mov
stos
sbb
leave
mov
cs
cmpsl
inc
jb
cmc
or
jbe
or
pop
stc
cli
ret
sahf
and
xor
mov
jae
add
ja
sbbb
dec
cltd
or
rolb
mov
push
sub
adc
xchg
mov
sub
pop
jle
clc
sub
hlt
dec
pop
insl
add
or
rorl
push
xor
inc
in
mov
rorl
jae
sbb
jecxz
sbb
push
dec
hlt
mov
push
or
pop
scas
xor
mov
setne
add
cmp
lock
or
jnp
lods
and
pop
mov
xchg
sub
and
adc
stos
dec
scas
and
dec
std
inc
mov
lds
pop
mov
scas
sub
into
test
scas
les
and
test
fcomi
dec
or
adc
negl
popf
jl
ficoml
cmc
movsb
mov
scas
gs
lds
leave
push
andl
into
into
mov
out
fiaddl
hlt
movsl
push
test
adc
jb
hlt
pusha
cmp
push
mov
mov
cmpsl
xchg
xchg
repnz
cmpl
xchg
fists
pop
adc
icebp
fmuls
mov
cmp
mov
sub
dec
mov
push
xlat
test
push
xchg
test
xchg
lock
xor
inc
adc
loopne
enter
cmp
push
repz
arpl
dec
ret
add
lods
fists
in
sub
ret
iret
sub
adc
push
fmul
mov
push
sub
ficoml
cmp
xchg
xor
daa
push
mov
pop
jne
inc
int
addr16
and
aad
outsl
decb
lea
or
pop
inc
and
mov
sbb
orl
lret
repz
mov
rcr
mov
fmull
push
leave
icebp
adc
xorl
jae
idiv
sub
subb
pop
mov
jge
dec
adc
lahf
sub
cmpsb
das
xchg
dec
cmp
sub
lret
fdivrp
xor
lea
data16
dec
and
fldl
in
filds
inc
dec
dec
add
adc
push
fidivrs
fisttps
call
sub
test
test
xor
sbb
daa
mov
mov
push
ljmp
cwtl
lds
ja
sbb
rclb
pusha
scas
in
clc
cmpsl
scas
xchg
mov
hlt
into
in
scas
mov
jg
mov
in
cmp
xlat
jmp
popf
adc
cmp
jnp
jns
loop
cmp
adc
cmp
dec
test
push
mov
cli
lcall
xor
adc
stos
mov
popa
mov
pop
add
and
lock
iret
push
lods
pop
xchg
fndisi(8087
mov
dec
xor
xor
xchg
or
lds
dec
daa
fmull
dec
mov
mov
pop
push
dec
push
mov
jbe
push
cmp
sbb
les
lea
cs
fidivl
fdivl
mov
ret
xchg
cmp
stos
sub
add
add
push
dec
lods
dec
cmp
shll
jbe
mov
xor
push
and
pusha
mov
xchg
pop
and
addr16
enter
das
int3
scas
push
xchg
ljmp
iret
adc
lea
mov
dec
mov
imul
outsb
dec
sub
push
xor
lock
je
cmp
push
icebp
jp
je
test
dec
sub
mov
cld
jle
adc
adc
pop
xchg
rcr
push
pop
pop
xor
stos
das
and
push
lea
jecxz
push
inc
mov
pop
andl
lret
adc
je
addl
aad
add
aaa
fildll
stos
adc
cmc
add
pop
cmp
fwait
xchg
in
push
push
push
fwait
xchg
lret
pop
dec
test
inc
in
and
daa
mov
pop
xorb
mov
aam
pop
lods
bound
rorl
and
es
xchg
aas
xor
jmp
cli
out
movsl
sbb
push
xor
aaa
xor
inc
cwtl
in
jae
push
push
aas
fists
push
scas
incl
jbe
add
jno
jbe
inc
xor
fwait
icebp
rcrb
sbb
nop
arpl
cwtl
pop
leave
lods
cmp
fildl
iret
mov
and
mov
int3
idivb
adc
mov
outsb
cmp
pusha
sbb
and
roll
scas
sbb
push
adc
or
jmp
ja
jg
icebp
lcall
ljmp
aaa
sub
sar
fstl
xor
loop
aam
push
or
ss
adc
dec
fucomp
or
and
movups
scas
clc
sbb
scas
out
cmp
inc
dec
sbb
inc
sbb
mov
rcr
test
cwtl
or
mov
jns
fdivrl
iret
cmp
loope
aam
sbb
mov
jle
int
jp
adc
test
movsl
leave
aad
js
adc
insl
in
rol
mov
or
cmp
notb
das
adc
mov
jmp
cmp
jae
pop
adc
sahf
dec
cld
dec
add
js
or
mov
enter
push
xor
stos
add
rcrb
xor
js
movsl
mov
jmp
cli
jl
ficompl
sahf
jl
popa
ljmp
hlt
pop
sub
es
ret
rorl
negb
pushf
ret
std
add
cmp
jo
cwtl
adc
jo
xchg
cmp
inc
cmp
hlt
es
stc
xlat
rorl
pop
fmul
push
xor
adc
jecxz
aas
jno
pop
outsl
jno
cmpb
jno
adc
push
mov
lock
std
jle
fs
sub
inc
sbb
or
icebp
scas
adc
mov
repz
out
out
roll
aad
fadd
hlt
jo
sti
mov
or
or
jg
push
mov
shrb
aas
sbb
aad
out
ja
push
out
push
sub
idivb
cmp
xor
mov
dec
xor
rolb
xlat
xor
js
arpl
pushf
push
xor
loop
mov
dec
leave
les
mov
xor
ss
scas
imul
pop
adc
es
sbb
pusha
mov
xchg
lods
int3
pop
sbb
xchg
bound
cld
fidivs
jnp
enter
jle
fbld
jle
cmp
push
daa
or
clc
jne
cmp
inc
jae
sbb
xchg
push
cmp
xor
adc
cmp
lea
lcall
or
xor
jb
and
adc
or
inc
sbb
cmpsl
add
push
insb
in
imul
cltd
jge
xor
fcmove
push
xor
sbb
jmp
rol
add
test
sbbl
dec
cmpsb
inc
pushf
cli
mov
cmp
mov
mov
arpl
adc
dec
pushf
rcl
and
ja
inc
dec
scas
in
popa
add
int
push
cld
sub
mov
loopne
xchg
inc
cmp
dec
sbb
fisttpl
and
repnz
addb
push
sbb
jecxz
aam
mov
mov
pop
inc
xor
sub
test
mov
je
leave
and
mov
jl
mov
lock
cwtl
inc
nop
pushf
push
loope
std
and
out
or
mov
mov
and
push
jecxz
xchg
cli
lock
pop
decl
dec
fimull
out
adc
pop
jno
xor
xchg
mov
insb
xchg
mov
push
mov
push
adc
jecxz
fistl
lock
shrl
sbb
push
mov
loope
jge
fadds
mov
mov
sbb
je
mov
in
sahf
shrb
cli
jae
lret
inc
mov
cmp
pusha
out
xorl
and
add
xor
cli
mov
imul
out
lret
movsb
pop
jne
mov
dec
fimuls
pop
xor
bswap
pop
mov
dec
fldt
shr
mov
cmp
xchg
jmp
or
mov
fidivrl
je,pt
int3
sub
mov
cwtl
xchg
out
outsb
shll
movl
sbb
scas
and
xchg
xchg
gs
mov
loopne
adc
imul
xchg
xchg
repnz
sti
stos
repnz
push
jmp
xor
push
je
into
fs
mov
shrb
mov
dec
or
or
mov
pop
xlat
jbe
add
or
ljmp
lcall
jmp
aam
pop
cltd
jne
lret
aas
jne
sbb
or
andb
mov
mov
inc
test
fcoml
xchg
add
add
cwtl
sahf
imul
loop
cmp
push
shll
data16
push
inc
mov
mov
pop
xchg
imul
jne
xor
jle
jnp
adc
push
cli
sub
inc
xchg
dec
xchg
pop
stc
push
cmp
cmpsl
dec
adc
popf
mov
int3
cli
mov
pop
inc
inc
rclb
imul
cltd
stos
and
xchg
mov
dec
out
dec
jnp
fiaddl
mov
rcrb
mov
ds
cli
pop
mov
arpl
sub
scas
sarl
mov
repnz
xor
imul
sub
test
hlt
scas
lods
imul
mov
popa
in
mov
push
lea
xchg
aas
dec
cmc
pop
stc
shrl
sbb
aas
xor
insl
sbbl
daa
xor
adc
daa
add
xlat
pop
push
jmp
iret
dec
jbe
or
xor
test
push
loopne
mov
cmp
sbb
mov
das
pop
imul
pop
data16
stos
jp
pushf
xor
and
and
scas
mov
mov
cld
inc
ds
mov
ret
out
div
insb
test
jne,pt
mov
push
imul
mov
out
pop
inc
add
sahf
lret
xchg
in
mov
mov
xchg
popa
push
mov
sarb
test
mov
add
int
cmpsl
cli
sub
cwtl
mov
and
xchg
in
lret
push
or
jle
outsl
mov
add
or
shld
jmp
inc
lret
loop
int
ret
or
xlat
mov
inc
loopne
addr16
mov
jnp
jge
mov
ljmp
inc
pop
scas
hlt
sar
adc
jo
fdiv
repnz
inc
add
xor
leave
aaa
repz
out
rolb
jg
jle
xlat
int3
or
out
subb
cltd
cmp
mov
nop
and
push
dec
pop
sub
leave
push
ret
js
out
stos
sbb
xchg
cmp
out
sbb
popa
loopne
lret
filds
bound
xchg
or
inc
dec
mov
lock
jbe
orl
arpl
cs
test
sub
andb
and
fsubrs
jo
gs
xor
cmp
js
mov
cmc
iret
roll
mov
frstor
dec
mov
push
xor
add
scas
popf
lds
dec
mov
stos
jmp
sub
adcb
and
arpl
hlt
outsb
sub
adc
adc
mov
sbb
int
scas
cs
lret
xor
lods
hlt
mov
in
lds
mov
and
jns
xlat
push
lock
ret
xchg
lods
add
fisubs
jecxz
jo
mov
scas
jbe
jle
pop
pop
add
add
loop
pop
scas
sub
cwtl
fs
dec
or
cld
subb
pmulhuw
fistpll
test
test
out
ljmp
ret
out
int3
ret
inc
int
test
dec
cmpsl
xor
shlb
xor
movsb
mov
pop
pop
xor
lret
outsl
subl
dec
leave
jo
rcrb
xor
push
cltd
push
mov
jle
test
adc
fsubl
sbb
filds
lock
or
mov
mov
push
push
leave
iret
jnp
push
dec
iret
inc
hlt
xchg
lcall
lea
aam
pop
and
fiadds
call
fwait
aad
adc
jo
ljmp
mov
clc
aaa
dec
sub
jns
or
mov
adc
inc
inc
lret
pop
inc
pop
and
dec
xchg
and
mov
cli
mov
fstps
push
push
mov
xchg
or
pop
repnz
or
xor
xchg
repz
jae
or
push
cli
iret
clc
dec
daa
mov
sub
aad
pop
mov
push
mov
sub
rcrb
jo
jmp
testl
jg
add
or
mov
xchg
pop
sub
adc
lcall
xchg
insl
cwtl
bound
jns
dec
fldt
sub
inc
repz
push
cmpsb
js
push
mov
movsl
mov
pop
sarb
and
sub
push
sub
out
inc
adc
adc
ljmp
xor
test
and
xor
jecxz
jecxz
fcoml
and
in
pusha
inc
loop
fisttps
xor
push
and
repz
ljmp
pop
dec
sahf
hlt
pusha
mov
leave
mov
xor
jmp
insl
jne
out
lret
jge
cmp
pop
push
lahf
ds
aam
sarl
test
sbb
pop
imul
stos
sub
mov
and
je
aaa
push
mov
jb
mov
es
jg
gs
jmp
test
pop
movsb
popf
adc
cmp
fsubs
ljmpw
insb
test
pushf
shrl
pop
pusha
aad
xor
push
ret
insl
les
lock
mov
js,pt
push
push
in
fsubr
ror
cmp
stos
into
pop
xchg
imul
xchg
push
out
dec
cmp
xor
fdivl
out
adc
mov
imul
jg
and
dec
pop
fidivs
mov
xchg
imul
pcmpeqw
jl
nop
stos
in
test
add
or
jae
out
or
and
sub
dec
push
orb
jl
lret
xor
hlt
icebp
arpl
mov
or
vpunpckhqdq
ficoml
scas
lcall
ret
fdivrs
and
adc
jmp
inc
pop
xchg
ror
push
push
and
jl
and
stos
pop
pop
dec
es
lds
inc
push
pop
sub
int3
test
negl
xchg
sbb
mov
out
ret
jno
cmp
or
push
test
mov
push
test
xor
test
jmp
sarb
imul
js
es
popf
insb
pop
fistpll
pop
cmp
aad
xchg
add
sbbb
fidivrs
pop
cli
jns
stos
lock
adc
xor
enter
xor
push
pop
pushf
aam
jge
hlt
pop
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fsubrl
pop
bound
pop
bound
push
mov
fists
addr16
pop
imul
in
aaa
xchg
dec
fs
loop
xchg
sbb
cmp
in
in
test
ret
lds
sti
adc
data16
sbb
std
mov
shlb
xchg
xchg
scas
test
inc
cmp
sarb
stos
inc
fwait
push
jnp
jne
clc
popa
xchg
jae
incl
inc
mov
add
out
sbb
jl
xchg
jmp
sub
cmpsb
jno
into
je
insb
push
movsb
mov
jp
insb
ret
cs
cmp
xor
mov
inc
mov
and
pop
ja
sub
xchg
bound
push
sub
fsub
insb
mov
cld
loopne
xchg
cltd
aaa
mov
fwait
jp
dec
aaa
stos
pop
lea
push
movsb
int
add
adc
scas
mov
jl
sbb
sub
mov
or
andb
adc
out
iret
cmc
dec
sub
xor
stc
repz
xchg
lock
lret
jns
sbb
pop
add
mov
jo
dec
nop
adc
lds
pushf
cmp
dec
sbb
xor
outsl
pop
jecxz
mov
in
dec
pushf
shl
push
push
js
lcall
push
not
outsb
fisubrl
mov
jno
test
and
and
popf
sbb
jle
jnp
gs
mov
fstl
cmp
sahf
or
imull
push
iret
jle
and
cwtl
rcl
loopne
adc
movsb
int
cbtw
rorl
adcl
sub
inc
js
std
pop
and
xor
rcrl
mov
cmpl
out
popf
in
popf
test
cwtl
loopne
push
dec
push
movsl
movsl
loop
xlat
stos
pop
jae
mov
iret
shrl
mov
add
add
adc
imul
test
lods
add
or
filds
decb
mov
pop
push
testb
pop
pushf
aaa
pop
lret
cmp
aas
stos
lods
inc
xor
imul
mov
push
jne
lcall
push
jmp
cmpsb
inc
pop
xchg
sarb
stos
ja
lock
add
lea
pop
mov
mov
mov
lret
or
inc
xchg
ret
mov
push
or
xchg
jecxz
pop
and
mov
sahf
jo
sbb
mov
out
fiadds
out
jne
rorl
xchg
jno
add
int
mov
insb
daa
dec
cmp
push
mov
test
push
test
js
outsl
imul
push
ja
icebp
push
inc
in
jmp
jmp
pushf
fnstcw
jl
mov
dec
mov
arpl
and
pop
add
gs
push
push
mov
das
iret
hlt
aas
jg
in
rcr
ds
jmp
and
sbb
mov
adc
int
and
rolb
pop
adc
xor
pop
out
or
jp
mov
jnp
mov
xchg
push
in
adc
jno
cld
fisttpl
loopne
out
push
test
sub
lcall
movsl
mov
push
xchg
mov
jae
inc
ds
in
xor
fwait
iret
xor
inc
fs
adc
and
ljmp
inc
ja
faddl
xor
jns
dec
std
fisubrl
shrl
dec
sub
push
xor
fstl
mov
xor
jbe
imul
inc
add
jg
cmp
or
jo
adc
js
inc
push
pop
inc
fisubl
in
mov
mov
insb
or
pop
cmp
sbb
inc
push
mov
leave
xor
test
mov
popa
loop
mov
sbb
xor
popf
jl
mov
out
xchg
dec
cmpsb
fsubl
ret
insl
mov
xlat
pop
or
ss
rcll
pop
imul
cmpsb
pushf
mov
cmp
push
cmp
mov
add
rol
mov
cmc
jne
dec
mov
das
xor
pop
pop
and
shrl
adc
stos
or
jo
mov
dec
ja
mov
outsl
add
mov
fstpt
or
aad
jnp
xor
and
fsubrs
cmp
push
and
ret
hlt
cmpb
stos
loopne
mov
push
push
lret
mov
inc
aam
rcll
daa
lock
mov
xchg
jp
push
push
inc
std
and
sti
push
fldcw
clc
jp
push
lock
shrb
jnp
stos
rorb
sub
fstpl
pop
outsb
add
nop
pop
push
hlt
inc
aam
adc
lcall
mov
cwtl
inc
and
adc
dec
jp
adc
pop
call
ret
sahf
dec
jns
iret
lret
stos
push
pop
pop
in
mov
insb
nop
orps
mov
mov
push
dec
adcb
xorl
out
add
ret
insb
ret
fistps
test
daa
pop
sbb
jno
dec
insl
outsl
test
inc
daa
adc
lahf
cltd
in
add
push
mov
insb
dec
sub
shrl
adc
sahf
mov
or
movzbl
cmp
jno
xor
and
rol
sub
sub
mov
mov
jno
xor
pop
hlt
fcomip
adc
test
out
int3
push
sub
pop
aas
pop
in
pop
cmp
inc
xlat
jo
hlt
pop
pop
or
or
lods
popf
leave
xchg
xor
hlt
ja
subl
dec
jl
fcoml
jmp
ljmp
xor
mov
add
add
testb
out
push
mov
sahf
insl
xchg
cld
sbb
push
xchg
in
sbb
iret
and
pop
mov
rolb
cmpb
pop
int3
out
mov
cltd
and
sub
fwait
lea
mov
test
jbe
inc
fildll
jp
xchg
mov
repnz
int
cmpl
rorb
mov
cltd
adc
push
pop
cmp
fnstenv
adc
enter
dec
pop
es
jno
push
add
mov
fwait
jno
pop
shll
add
mov
call
test
mov
inc
adc
add
outsl
dec
dec
mov
and
or
mov
push
add
cmp
movsb
dec
int
xor
cmp
jbe
int
cs
sub
or
or
sahf
insb
mov
push
mov
xlat
and
pop
cmpsl
sub
out
std
fadd
insb
test
fbstp
das
pop
mov
mov
cmp
cli
mov
jb
xchg
popa
or
mov
push
pop
repnz
lds
rcrb
fsubs
loope
mov
icebp
push
mov
fmuls
mov
mov
push
sbb
loope
movsb
xchg
lret
add
ljmp
int3
inc
fmul
pop
jle
std
ret
cmpl
pop
or
lcall
fxch
mov
in
push
pop
outsl
push
add
iret
shlb
add
add
mov
xchg
xchg
mov
fstpl
fwait
xlat
repnz
insl
xor
jmp
rolb
enter
adc
adc
mov
icebp
cltd
adc
dec
in
iret
xchg
add
push
adc
or
or
inc
mov
push
test
mov
sbb
cs
push
movsl
pop
jle
cli
fnstcw
movsl
cmp
pop
or
xor
sub
fnstenv
jg
leave
cmp
int
inc
sub
cmpsl
xchg
xchg
inc
shrl
cmc
dec
or
mov
pop
ja
bound
ja
sbb
inc
lcall
xchg
lahf
in
call
notl
xchg
push
inc
inc
fidivs
or
sarb
sub
xor
push
pushf
push
shrb
jg
pop
kmovb
pop
mov
and
int3
push
xchg
and
fidivl
stc
jns
mov
imul
idivb
pushf
jno
pop
fsubs
and
add
mov
lcall
in
or
lret
nop
cmpsb
ljmp
inc
pop
jg
xchg
insl
rcrl
and
sub
or
xchg
adc
cmp
pop
lock
fdivr
pop
aam
inc
push
xchg
icebp
aam
aaa
mov
inc
sbb
movsb
mov
adc
add
push
cmp
xlat
push
fcoml
ds
lcall
loopne
test
in
inc
mov
push
not
push
sbbl
mov
pop
mov
lea
sub
mov
loope
mov
ror
jno
mov
pop
mov
dec
dec
push
pop
sub
sub
cmp
sub
mov
and
and
jecxz
nop
lret
insb
loopne
pop
std
add
jle
inc
xchg
lahf
push
push
adc
or
cmpsb
jl
mov
sbb
popf
daa
xchg
popa
notb
loopne
mov
popa
ret
outsl
dec
push
adc
dec
pop
and
pop
mul
loopne
pop
gs
jle
cmp
out
jle
jns
pushf
pop
jl
aas
fs
mov
dec
lea
jl
and
fadd
call
ljmp
aas
push
and
pushf
leave
pushf
das
sub
inc
pop
ss
adc
repz
repz
jno
mov
lods
xchg
imul
fstpt
xchg
dec
ss
fs
pop
jmp
flds
mov
pop
imul
jo
fcomps
js
dec
inc
xor
jbe
mov
mov
nop
xchg
and
je
inc
push
and
loope
js
xchg
divl
cmpsb
imul
iret
mov
jp
rcrl
pop
mov
or
addr16
cmc
cs
pushf
adc
push
push
repz
adc
or
inc
xor
xorl
es
enter
jnp
xor
mov
push
lcall
hlt
sbb
arpl
aas
loopne
push
sbb
mov
rcrl
xchg
add
jle
mov
lods
and
popa
dec
cmpsb
in
jg
xlat
xchg
mov
fcmovbe
or
dec
or
sbb
jne
fs
fdiv
popl
xchg
stos
jecxz
aaa
push
inc
and
ret
inc
dec
adcl
addr16
dec
jo
adc
adc
pushf
mov
xchg
cmpsb
pop
mov
dec
cmp
out
xchg
or
sbb
cmp
sbb
les
fcmove
inc
jl
dec
adc
cld
stos
jno
pop
xchg
adc
add
daa
repz
sub
icebp
test
sub
outsb
clc
cmpsl
sbb
xchg
std
push
pop
das
sub
add
cltd
fs
mov
pop
mov
xor
and
sub
aaa
or
out
lcall
dec
call
loope
add
or
mov
ja
outsb
push
lahf
test
outsb
add
push
adc
jne
mov
push
das
or
lds
mov
push
in
enter
int
add
cmpb
mov
stos
cmc
clc
xchg
aad
dec
xchg
test
not
push
clc
pusha
adcl
stos
mov
cmp
mov
xchg
jg
pop
aad
sub
sbb
insl
ss
jne
xchg
js
adc
test
sbb
jg
sbb
outsl
or
mov
mov
int
mov
fimuls
adc
jg
es
pop
xor
out
scas
cwtl
inc
outsb
mov
xor
outsb
fs
les
loop
xlat
outsb
xor
mov
xchg
push
adc
jg
sbb
and
push
imull
add
xor
adc
xchg
push
inc
into
adc
and
rep
insl
inc
test
mov
xchg
in
fld
repnz
dec
mov
and
imul
xor
sbb
fs
loopne
test
aad
or
imul
fidivrs
jb
idivb
cld
orb
dec
popf
iret
rcrl
jno
sbb
cwtl
mov
imul
sub
je
dec
test
dec
pop
je
jmp
inc
lds
addr16
shlb
cli
daa
ret
mov
sbb
mov
test
pop
lahf
aas
pop
mov
xchg
std
lea
mov
mov
insl
mov
negb
pusha
add
mov
aad
cmp
cmpsb
jg
mov
sub
mov
sbb
cwtl
jp
sub
jb
inc
loope
inc
adc
dec
dec
test
lods
test
lods
mov
pop
rcl
lds
enter
jl
sub
mov
inc
cmc
notb
push
cld
push
pop
stos
out
lret
or
inc
fists
cmp
sbb
jp
or
sbb
xor
sahf
fildll
es
ljmp
es
addl
jb
mov
aad
pop
inc
sub
scas
add
adc
adc
leave
push
popf
repnz
push
repz
pop
sbb
imull
mov
pop
test
ret
ja
or
imul
ss
push
sub
in
mov
repnz
mov
mov
rcll
mov
xchg
fildl
nop
add
jge
fidivrs
push
ds
sbb
jns
xchg
push
in
arpl
xchg
dec
int3
mov
jl
js
out
lock
and
xlat
cmp
adc
test
inc
roll
dec
lods
shufps
inc
and
ret
insb
inc
or
xchg
sar
xchg
out
in
mov
jne
sbb
stc
call
xchg
leave
scas
mov
arpl
sub
dec
mov
mov
inc
xor
or
icebp
jnp
shlb
subb
arpl
sbb
sub
mov
in
addr16
push
and
cmp
xor
or
ret
aas
mov
lahf
add
int3
pop
xchg
mov
aaa
test
cmp
jg
sub
aaa
fwait
and
pop
outsb
mov
jecxz
cld
insl
ficomps
fwait
xchg
test
cmp
lret
adc
jns
mov
lods
sub
movb
mov
mov
adc
mov
vpmuludq
push
inc
sub
pop
rcll
adc
jecxz
ljmp
push
leave
mov
rcl
dec
mov
or
lock
cwtl
popf
push
dec
clc
das
and
std
jecxz
scas
jp
push
leave
dec
and
jmp
push
mov
xchg
xor
or
pop
cmp
and
lock
lods
add
mov
jp
xorb
or
mov
dec
movsb
inc
dec
mov
push
cmp
jmp
shll
pop
nop
or
test
stc
xchg
mov
stos
icebp
mov
test
mov
pop
xchg
xor
pop
out
inc
mov
popf
cmpl
push
dec
das
mov
outsb
packsswb
adc
add
dec
mov
stos
jp
push
cmc
xchg
rol
ds
sbb
stc
add
and
popf
or
mov
sbb
mov
push
mov
pop
push
add
sub
push
xor
lods
mov
lock
adc
out
ds
push
in
out
scas
pop
in
iret
not
dec
cmp
insb
push
outsb
cmp
fsub
dec
push
xchg
inc
and
icebp
and
lods
jle
or
popa
mov
shr
cmp
sbb
xchg
xchg
stc
jae
jle
push
icebp
sahf
outsb
jl
inc
ja
xlat
gs
into
repnz
push
sbb
out
mov
iret
js
push
lret
pop
mov
fucomi
pop
leave
aam
ja
inc
jne
out
mov
xchg
cmp
out
imul
cwtl
movsl
inc
orb
stc
outsl
pop
mov
scas
call
mov
pop
fsubr
cld
dec
mov
es
hlt
fsts
jg
push
pusha
pusha
outsl
pushf
dec
sarl
jmp
inc
or
popf
stos
sbb
cltd
and
jp
sbb
mov
push
inc
mov
xor
sub
xchg
cmp
dec
jbe
fcoms
mov
test
push
inc
push
lret
adc
fdivrl
test
out
xchg
stc
pushf
mov
cltd
lods
mov
push
mov
sbb
adc
inc
adc
lods
testl
sti
mov
xorl
mov
sahf
ljmp
mov
mov
fwait
jmp
loopne
ror
dec
jmp
sub
std
xchg
xchg
dec
shr
mov
push
lcall
pop
roll
mov
cmp
cli
std
inc
mov
push
jp
pop
dec
sbb
pop
leave
mov
jmp
cmpsb
cmp
lock
in
add
xchg
add
movsl
sbb
lret
push
test
sub
jmp
scas
mov
and
stc
mov
mov
outsl
jno
lahf
leave
mov
add
scas
fprem1
js
icebp
cmc
sbb
sub
jo
cs
gs
je
xor
insl
sbb
pop
arpl
jge
or
fs
push
lcall
sarb
pop
add
pop
push
out
xor
lret
dec
add
inc
fsubl
jp
sbb
divl
inc
xor
dec
rcll
jo
xchg
pop
shrb
in
aaa
mov
int
data16
sbb
jno
sub
push
fs
push
add
ljmp
pop
xchg
dec
dec
stc
add
dec
cli
mov
inc
adc
xchg
xor
jmp
mov
fildll
sbb
dec
test
pop
out
lock
repz
sti
cli
mov
pop
aaa
mov
dec
hlt
shrb
out
call
xor
les
jmp
clc
mov
add
sub
movsb
fsubs
lods
pop
stos
rcl
inc
jnp
aam
sub
rorl
cmp
mov
ljmp
addr16
sub
cmp
sbb
mov
fs
mov
xor
mov
js
int
mov
or
mov
sti
sarb
in
daa
fwait
out
std
fmull
jb
push
fbld
mov
iret
outsb
call
dec
xor
and
fsubrp
sbb
in
sti
repz
daa
jmp
insl
addl
mov
subb
movsl
adcb
jnp
mov
iret
insb
sbb
je
sbb
add
xchg
shl
mov
cmpsl
enter
or
inc
fstl
mov
xor
into
sbb
stc
sub
andl
cmp
js
push
pop
fadds
mov
dec
js
sub
loopne
fwait
js
push
lds
dec
lock
xchg
popa
xchg
and
enter
mov
jo
sub
pop
mov
stos
fsubrs
movsb
xchg
stc
xchg
sub
xchg
push
ja
add
shrb
aaa
xor
mov
mov
mov
mov
cmpsb
test
push
jbe
cwtl
mov
mov
jecxz
addb
aam
push
xchg
xchg
out
cmpsb
mov
jmp
fistl
and
fxtract
ret
cltd
roll
pop
xchg
orl
data16
xchg
add
inc
sti
lcall
xor
pop
push
adc
xor
jbe
mov
loop
pop
xchg
dec
repnz
mov
push
mov
add
adc
pop
or
enter
mov
pusha
lret
jge
stc
jmp
scas
mov
test
mov
shll
lods
mov
lods
nop
sub
lea
push
jg
test
rclb
inc
and
xor
mov
push
repz
xchg
xor
cwtl
jmp
out
shrl
add
lods
push
in
mov
sub
ret
and
ss
es
shlb
les
mov
sbb
mov
shll
ljmp
sub
and
xor
jb
ret
mov
add
gs
iret
mov
test
mov
shrb
in
pop
out
cmp
push
jns
add
mov
adc
aas
or
dec
sbb
inc
fs
fsubs
aas
cmp
jns
pop
pop
cmpsb
push
loop
mov
mov
into
fildl
stos
fisttpll
test
or
mov
add
roll
sarl
outsb
outsl
mov
push
jbe
popa
jb
mov
loopne
fdivs
int
mov
pushf
ret
mov
cmpsb
cmp
lods
push
adc
xchg
pop
push
or
lock
jmp
out
and
cmpsb
fdecstp
jae
mov
mov
dec
sahf
and
out
jne
lock
stc
xor
lcall
push
pop
outsl
push
cmp
movsb
sbb
mov
aas
xchg
cmp
lahf
xchg
lods
add
ficompl
fmuls
rolb
mov
xor
jge
push
jno
jo
daa
adc
push
mov
fsubs
xor
std
or
bound
ret
adc
mov
shrl
ja
or
into
aaa
add
out
add
dec
pop
btcl
stos
stos
lods
clc
les
push
cmp
lcall
cmp
xchg
or
nop
pop
inc
loop
push
test
cs
xor
xor
scas
mov
push
push
fidivrs
mov
sub
fs
push
out
movsl
in
jmp
sarl
pop
je
push
stos
dec
xchg
xchg
pop
loop
jmp
imul
icebp
inc
add
mov
je
xor
js
and
sub
loop
lea
xchg
fxch
pop
mov
in
fsubr
movsl
sub
cmp
xor
pop
ret
jl,pt
adcl
inc
fs
out
mov
or
pop
mov
dec
add
xor
pop
mov
jnp
pop
imul
cmp
cmovnp
out
inc
iret
shl
loop
ss
sub
stc
or
pop
mov
cmc
pushf
cld
movsl
jg
xor
mov
inc
xchg
xor
push
mov
mov
iret
mov
scas
jecxz
mov
aaa
cli
mov
mov
lods
sets
rolb
das
jp
xchg
jns
pop
jns
test
pop
pop
sub
add
cld
push
lods
jl
jmp
sub
in
movsl
xchg
inc
cmp
add
push
test
test
mov
or
mov
mov
or
cwtl
mov
adc
pop
sub
sbb
lea
out
in
mov
outsb
loope
xchg
ret
in
lcall
bound
in
xchg
dec
mov
repnz
sbb
jmp
pop
mov
jl
fadd
mov
jecxz
xchg
jmp
mov
sbb
xor
fs
mov
mov
pop
dec
sub
pop
cld
test
in
push
sbb
testl
sbb
push
dec
mov
sub
sbb
mov
mov
mov
push
popa
testl
in
xchg
mov
push
push
adc
js
pop
sbb
in
lcall
fistpll
inc
movsb
fiaddl
jg
movl
fucomi
inc
and
sahf
scas
inc
cli
pop
aad
and
mov
rolb
out
mov
out
xor
mov
mov
int
arpl
orb
lcall
into
add
push
xor
fiadds
pop
pop
in
or
push
lcall
xchg
lahf
leave
jecxz
repz
stos
xor
or
jmp
mov
adc
add
jp
aam
add
aam
sbb
add
sbb
subb
inc
mov
js
inc
pop
sub
movsb
add
lds
jl
and
rorl
mov
ret
mov
rolb
or
mov
pusha
mov
rcrl
jne
roll
aaa
into
test
cmp
or
fstpt
inc
rcr
xor
rclb
aas
jmp
jl
xchg
adc
insb
mov
enter
mov
jno
fisubrs
push
push
push
fsubl
fs
add
mov
out
jae
andb
ret
enter
int
aas
xchg
mov
out
insb
and
loop
pop
stc
cmp
mov
jb
les
pop
mov
pop
insb
and
pop
std
sub
int
adc
mov
mulb
enter
bound
inc
rcl
and
call
enter
xchg
scas
mov
inc
jecxz
and
xor
xchg
or
pop
xchg
mov
mov
lea
add
fldcw
int3
jmp
or
int3
adc
jbe
repz
jmp
sbb
in
aaa
aas
push
mov
cmp
lret
lret
inc
inc
sbb
movsb
jp
cs
push
jmp
ss
std
fwait
dec
jecxz
out
fadd
mov
fmulp
inc
pushf
mov
jno
loope
outsl
push
lods
ret
xchg
insb
sahf
adc
mov
shll
lods
or
pop
movsl
sbb
xor
jbe
jnp
ret
push
mov
dec
sbb
movsb
fstps
hlt
jb
pop
stos
ljmp
sahf
into
arpl
cwtl
stc
xor
loopne
adc
bound
pop
scas
mov
sub
es
aaa
std
adc
test
pop
bound
xor
jo
dec
push
in
inc
test
xor
repz
adc
xchg
push
mov
roll
outsl
les
add
add
shll
arpl
in
push
rorb
int3
mov
roll
sub
cmp
jbe
and
pop
and
xor
jno
adc
or
mov
mov
xchg
sub
sahf
push
xchg
push
ror
inc
mov
mov
rorl
lahf
pop
dec
sbb
icebp
xor
aam
popa
xchg
jo
enter
test
push
pop
inc
test
cmp
popl
cmpsl
push
push
mov
pop
push
cmp
inc
adc
pop
test
out
dec
and
popa
cmp
add
jmp
iret
neg
int
fisubrs
or
xor
push
xchg
addr16
ret
daa
dec
push
sub
into
imul
dec
mov
inc
mov
std
push
ss
int3
fadds
mov
adcl
push
jb
scas
outsb
orb
jo
or
fidivrl
jle
cmp
orl
test
bound
xor
je
sub
pusha
xor
stos
scas
jb
dec
jge
vmulps
lds
or
inc
jmp
insl
sbb
pop
hlt
mov
lea
lcall
push
jno
cli
inc
int3
push
test
out
int3
inc
push
into
lods
inc
popa
adc
pop
xor
and
js
mov
push
pop
mov
subb
add
inc
push
jecxz
cwtl
add
rolb
lahf
pop
clc
pop
in
sahf
push
outsl
pop
cmp
out
scas
mov
iret
retw
jbe
mov
popa
push
ljmp
mov
mov
fs
push
nop
movsl
and
mov
and
loopne
subb
cmp
cmp
mov
clc
cs
mov
jnp
pop
or
inc
and
xchg
stos
movsb
test
dec
cmp
xor
sub
and
cli
rorb
mov
push
insl
jae
mov
mov
or
sub
or
xchg
sbb
ljmp
lods
adc
imul
popf
int
push
jne
pop
repz
test
js
movsl
add
push
cmp
mov
sbb
pop
sub
mov
lcall
repz
dec
lds
hlt
xor
test
cs
adc
mov
pop
fs
xchg
movsl
fbstp
or
insb
test
sub
jno
cmpl
adc
jmp
and
or
xchg
lds
mov
jo
loop
fucomp
mov
or
dec
aam
lret
jns
sub
rcr
mov
pop
pop
in
mov
test
mov
mov
mov
mov
add
iret
xchg
enter
mov
xor
xor
jne
jg
add
jb
sbb
mov
xchg
scas
sub
add
lcall
add
stos
sbb
sarl
xchg
inc
cli
jnp
jne
lds
cmp
adc
leave
cmpsb
adc
mov
xchg
and
pushf
sub
pushl
vpunpcklwd
inc
cmp
push
enter
mov
mov
out
daa
xchg
popa
aam
shlb
sub
aaa
test
mov
inc
ljmp
push
adc
lods
rep
ret
cmp
ds
add
pop
dec
cmp
idivl
sub
dec
std
cmp
sbb
push
fldt
push
scas
int
jno
xor
adc
sub
das
pop
leave
stc
dec
out
mov
or
orb
ja
aam
repz
cmpsb
or
push
ficompl
fidivl
xor
pop
push
push
mov
sub
jg
push
outsb
push
bnd
insb
mov
out
cmp
or
cltd
movsb
sbb
add
xchg
mov
enter
mov
mov
lahf
pop
cmp
dec
sub
sbb
cmp
aam
push
sti
adc
cmc
in
cwtl
hlt
mov
arpl
data16
out
test
ret
daa
cmp
add
lret
and
jns
inc
sub
testb
std
dec
or
hlt
or
cs
sbb
push
sbb
add
xor
mov
sarl
pop
sbb
mov
pop
je
inc
pop
in
sbb
mov
inc
notl
inc
int3
xor
dec
inc
lds
mov
xor
pop
push
notl
out
push
dec
xchg
cli
dec
mov
scas
dec
sub
and
pop
mov
xchg
jge
sbb
mov
fsubp
pop
xchg
jge
sbb
push
ret
jo
scas
cmpsb
lret
sub
dec
fcom
ret
subl
xor
push
cmp
mov
xlat
cmp
scas
pushf
ret
sbb
mov
sbbl
loopne
into
xor
in
cli
lret
push
aas
loope
dec
imul
insb
push
xchg
push
cwtl
sbb
mov
stos
insl
adc
andl
jl
popf
imul
outsl
cmpsb
add
cmp
jp
iret
push
sbb
test
add
and
xchg
fnstsw
fwait
dec
mov
mov
push
pop
mov
jle
sub
test
and
lcall
mov
dec
add
cmp
dec
bound
jno
xor
sub
inc
lea
data16
pop
ret
jmp
sub
jnp
bnd
fsubrs
sub
mov
fdivr
out
jecxz
ja
cltd
jbe
and
push
call
sarl
jp
xchg
mov
push
sbb
dec
fcomps
out
ficompl
mov
add
sbb
testl
insb
int3
sub
pop
lcall
push
call
jp
jge
jecxz
adcb
mov
call
push
add
je
sbb
dec
sbb
push
or
push
fstl
or
cmp
sub
aaa
mov
dec
fists
or
push
jb
xchg
xchg
sub
inc
xchg
and
popf
jge
rcrb
inc
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
add
bound
pop
bound
or
xchg
lahf
adcb
int3
in
xchg
je
cmp
icebp
adc
loope
dec
test
fnstenv
sub
ret
mov
das
int3
pop
xchg
or
mov
cmc
into
and
aaa
out
push
scas
pop
mov
jns
pusha
sub
int
mov
mov
dec
lods
pusha
xchg
sub
call
mov
and
clc
pop
mov
adc
rolb
imul
push
mov
aaa
fldcw
stos
mov
add
hlt
push
in
repz
enter
nop
fldt
movsb
mov
cwtl
popf
push
pop
inc
fcomps
mov
adc
mov
add
jmp
leave
add
jle
sbb
and
sub
adc
add
or
jl
cmp
fldt
add
mov
outsl
gs
add
into
aas
jo
mov
pop
xchg
sbb
fcmovbe
std
in
stc
addr16
pop
jmp
cld
in
cmp
push
rcrl
pop
roll
bound
mov
insb
xor
lcall
fnstenv
call
imul
pop
aas
adc
xchg
and
sahf
pop
sbb
std
mov
or
icebp
push
mov
jo
mov
inc
cli
adc
or
iret
xchg
inc
push
add
addl
xor
movsb
sub
pop
cs
hlt
push
scas
call
hlt
inc
mov
sbb
hlt
and
adc
outsl
dec
inc
lea
in
adc
incb
mov
sti
sub
js
add
scas
xchg
movsb
xchg
mov
xchg
and
cmp
adc
js
pop
jno
cmp
adc
sbb
fsubrp
sti
sbb
xchg
sub
cmp
push
cwtl
and
sub
dec
mov
cld
call
push
cwtl
scas
and
push
clc
shrl
push
xchg
mov
mov
jne
jbe
lcall
sbb
into
lret
dec
int3
pop
jae
mov
cmp
stos
sahf
shlb
mov
inc
out
ret
shr
xchg
bound
xlat
xor
or
sub
add
and
push
int3
push
call
mov
xchg
cwtl
mov
jecxz
inc
jl
xchg
popa
xchg
lret
pop
stos
cmp
inc
mov
xor
clc
adc
push
cmp
sbb
lods
xor
push
sub
dec
jne
fmull
cs
jbe
xor
xor
popf
cmpsl
push
mov
mov
popa
test
test
pop
cld
push
scas
stos
mov
xor
pusha
jb
xchg
out
rcll
jp
jae
mov
sbb
and
fwait
shlb
ds
mov
push
jnp
inc
and
std
out
push
push
lock
cmp
lods
sbb
dec
dec
and
mov
imul
sahf
push
popf
push
cltd
ret
fdivr
mov
rolb
xchg
insl
sub
setl
addl
push
into
pusha
and
xor
lods
mov
pop
lock
fs
aad
push
sub
ret
push
and
xor
jae
sbb
xchg
and
stos
lret
mov
jae
inc
rolb
in
loopne
sbb
jge
icebp
or
lds
cwtl
bound
mov
pop
addl
orl
mov
aas
imul
cmpsl
in
add
lcall
adc
cltd
iret
ret
lock
add
lods
popf
mov
xchg
jbe
adc
or
out
dec
cld
shl
pushl
rorb
or
cmp
call
ja,pt
push
stc
fimull
and
sub
mov
mov
out
ficomps
loopne
les
xlat
shll
outsl
insb
cld
jno
xor
sub
scas
mov
mov
jno
aas
rorl
mov
cmc
jmp
mov
mov
into
rcrl
test
lds
jp
cltd
fwait
jp
sub
mov
adc
jns
jmp
mov
loope
push
movsl
fsubp
or
lret
push
or
jb
mov
aad
imulb
inc
inc
mov
and
cltd
lds
lret
dec
int
add
or
shr
fldcw
pop
into
and
das
ss
jne
mov
ds
pusha
sbb
mov
nop
mov
push
sbb
fdiv
jmp
enter
jno
dec
js
pop
rcll
aad
mov
stos
mov
pop
aas
cs
jmp
push
mov
fisttpll
inc
xor
ds
lret
test
jg
pop
and
mov
notl
ret
or
into
or
push
xchg
stos
cmpsl
xchg
cmp
pop
pop
xor
sbb
sub
leave
sbb
movsb
push
popa
aaa
xchg
pop
shl
pusha
cmpsl
fs
lock
aam
mov
sahf
jno
adc
dec
or
fildl
mov
xor
outsb
adc
jns
stc
sbb
popf
scas
ljmp
setae
adc
xchg
into
arpl
jnp
mov
sub
call
imul
test
divl
rol
mov
and
das
push
test
sub
mov
xchg
dec
repz
shlb
ss
xchg
fcos
ret
ljmp
xchg
mov
out
shrl
je
rcrb
adcl
dec
stos
lods
scas
ds
inc
test
insb
test
stos
mov
inc
jae
aad
add
pop
imul
je
cmp
cs
fstpl
into
push
test
fwait
push
mov
loope
xchg
xchg
dec
pop
sub
inc
push
sti
mov
or
and
push
shll
movsb
in
mov
sub
jae
jp
int
pop
jecxz
dec
add
adc
xlat
mov
xchg
mov
mov
adc
movsb
int
into
mov
out
xor
add
mov
xchg
scas
xchg
mov
pop
addb
sbbl
fadd
inc
xorl
cmpb
mov
pushf
xchg
dec
add
jp
dec
insb
out
push
jmp
dec
loop
ljmp
mov
adc
xchg
sahf
xor
in
pop
dec
mov
jae
inc
inc
loope
in
pop
jg
mov
dec
lret
or
mov
jb
sub
cmpsl
gs
movsb
dec
je
push
sub
pop
pop
and
dec
push
mov
loope
adc
je
cltd
andl
fcompl
xchg
popa
ja
dec
mov
mov
in
outsl
int3
outsl
inc
mov
lds
xchg
imul
pop
shll
les
dec
hlt
cwtl
xor
xchg
ret
loopne
xchg
clc
lahf
dec
dec
ret
jns
cmpsl
rolb
lods
xchg
data16
fldt
xchg
xor
cwtl
std
adc
in
arpl
daa
aas
not
pop
scas
rcr
mull
daa
popa
in
scas
out
rolb
inc
fwait
adc
sub
dec
stos
and
ja
add
dec
add
popa
jns
mov
xor
inc
movsl
out
cmp
sbb
lds
inc
mov
dec
sub
push
bound
mov
mov
je
out
inc
fcomps
mov
push
shlb
cmovns
fcoml
xchg
mov
divb
testb
aad
xchg
or
imul
xor
sub
sub
mov
inc
fcomps
adc
jle
sub
xor
sbb
insl
jae
xchg
xor
sub
jg
popfw
popa
cmp
sbb
xlat
dec
data16
cmp
dec
imul
inc
mov
pop
daa
inc
inc
fcom
lret
pop
mov
and
inc
enter
sahf
rcll
mov
push
nop
fnclex
std
rorb
std
mov
jl
sahf
adc
jb
lcall
adcl
jo
enter
out
cld
mov
pushf
push
fisubrs
add
xchg
aad
pop
sub
sbb
mov
jge
movsl
mov
push
mov
add
xchg
clc
rolb
cmp
inc
subl
loop
dec
add
sub
xor
jp
loop
xchg
inc
and
insl
mov
or
aad
cs
inc
push
out
subl
frstor
repnz
mov
ret
hlt
or
mov
xor
jl
lods
call
fisttpll
das
loopne
jnp
clc
inc
mov
imul
fsubr
movsb
pop
jbe
jno
jge
fs
adc
iret
and
and
sub
pushf
inc
cmp
roll
cmpsb
call
xchg
mov
cmp
pop
or
push
sti
out
xchg
and
jb
push
sahf
mov
loop
push
mov
inc
orb
xchg
and
les
fs
jo
cli
xor
add
add
push
clc
mulb
icebp
fmull
push
sbb
sbb
xor
std
lods
das
mov
or
cmp
cmp
pop
rolb
push
sub
or
test
fwait
xchg
dec
lcall
negb
cmp
out
movl
xor
into
ffree
mov
bound
dec
or
out
fs
xor
out
push
jle
lea
dec
fisttpll
mov
out
in
jmp
xor
push
cltd
pop
ror
pop
fstpl
xor
jb
mov
pop
dec
inc
cmpsl
in
cmc
dec
push
pusha
or
loopne
aaa
cmp
imul
ss
out
dec
inc
shr
loopne
add
push
outsb
loopne
sahf
nop
jp
fwait
adc
addl
ja
add
pop
lret
and
jge
lcall
xchg
lea
subl
jge
lahf
imul
ja
cld
sub
scas
scas
out
fnsave
xchg
push
sahf
mov
imul
sub
or
movsw
pop
inc
mov
or
movsl
sahf
and
imul
add
jp
adc
pop
pushf
sub
sub
inc
xchg
add
out
sbb
shll
lcall
sub
xchg
mov
scas
inc
mov
push
outsl
popf
mov
cld
leave
in
scas
jns
mov
pushf
iret
rorb
jp
icebp
rcr
sbb
mov
stc
addr16
fwait
xchg
pop
and
popf
add
shlb
push
and
push
loop
imul
jno
or
out
stos
aam
cld
sbb
clc
je
mov
jae
mov
or
ljmp
inc
aas
add
imul
or
cmp
or
ja
jb
stc
dec
xchg
ret
cld
aas
call
ret
pop
mov
lret
sahf
xor
sub
lods
subb
int3
insb
ss
mov
and
cmc
xchg
outsb
xchg
adc
adc
repnz
inc
test
repnz
fwait
scas
gs
arpl
mov
inc
mov
jbe
inc
lret
dec
pop
rol
xor
incl
inc
and
das
inc
jae
jecxz
cmp
imul
in
mov
scas
outsl
pushf
push
repnz
test
subl
aas
hlt
push
inc
lock
pop
hlt
mov
or
orl
xor
inc
pop
and
stc
addr16
dec
dec
mov
movsb
js
sub
xor
shr
pop
push
cmpsb
cmp
pop
in
stc
pop
pushf
andl
xor
xlat
imul
stos
test
pop
cmpsb
arpl
mov
es
mov
jmp
aaa
je
insb
cmp
mov
adc
push
aam
mov
stos
push
cmp
inc
xor
push
mov
xchg
add
adc
rorl
lock
lock
push
cltd
lcall
imul
rorb
sarl
mov
test
sbb
insb
adc
movsb
in
mov
or
loopne
inc
xor
pop
insb
fildl
xor
jnp
mov
push
push
cs
rsm
xor
out
adc
mov
scas
shrb
or
inc
jmp
fsubl
jae
test
dec
pop
xchg
arpl
das
mov
shll
jnp
dec
xchg
pop
ss
test
lea
outsl
sub
adcb
pop
add
subb
and
xorl
movsb
xchg
loopne
into
xor
mov
stc
mov
mov
out
inc
les
inc
lods
sbb
nop
mov
mov
pop
int
stc
cmp
xor
nop
fnstsw
loopne
int3
inc
cmpsl
arpl
popf
mov
out
rorl
pusha
daa
in
mov
pusha
xchg
flds
outsl
ret
in
rolb
insl
fwait
pusha
xchg
fs
inc
sub
stos
sbb
in
mov
insb
out
jae
cli
and
adc
push
mov
sbb
mov
xor
sub
adcl
test
cmc
xchg
xchg
cmpsl
movsl
ljmp
mov
test
hlt
out
dec
jle
or
nop
addr16
lret
gs
int3
scas
adc
rorl
add
sub
or
movsb
mov
sub
jge
aas
add
test
into
adc
or
or
pop
pop
jne
fisubs
fisubl
mov
mov
loope
cmpsb
jb
mov
shrl
add
fcmovnb
and
or
sub
mov
or
or
xchg
jns
lea
lods
sbb
mov
pop
mov
mov
mov
mov
inc
mov
dec
ss
push
js
das
lret
faddl
addr16
xor
pop
and
dec
lock
outsb
aad
add
jnp
pusha
test
data16
dec
mov
loopne
aad
or
stos
dec
or
pop
out
jo
scas
xchg
add
xchg
fiadds
jnp
cld
and
push
out
push
dec
pop
les
aam
scas
cmp
inc
pop
ret
pop
icebp
fwait
fwait
sub
fistl
ljmp
test
inc
fdiv
pop
sub
inc
hlt
xchg
bound
sub
js
mov
cmc
fsubp
mov
das
in
mov
mov
pusha
jne
clc
sub
cmp
mov
iret
sahf
inc
jo
popa
mov
test
push
fsubrp
mov
shlb
cmp
cmp
or
mov
push
pop
jae
into
lea
mov
arpl
decb
mov
sub
mov
out
repnz
clc
add
inc
adc
sub
mov
cld
and
push
dec
and
test
leave
cld
push
js
inc
cmp
cmp
xor
es
sbb
bound
int
outsl
movsb
and
stos
xchg
repnz
outsl
cli
into
hlt
fmuls
dec
push
pop
andl
test
fimuls
fsubrl
jmp
inc
rcr
fwait
adc
in
addr16
subb
sub
aam
dec
lret
dec
rclb
inc
mov
decl
sbb
loopne
inc
mov
loope
jo
std
notl
push
sahf
xchg
xor
das
dec
cmpsb
hlt
aas
loop
fwait
jge
dec
jnp
leave
xchg
das
xor
sub
stc
imull
jecxz
inc
testb
in
ja
imul
jb
mov
sub
repnz
xor
jge
lods
inc
pushf
js
xchg
les
pop
mov
incl
dec
repnz
inc
ss
std
pop
rcrl
push
jb
shr
repz
lods
test
outsb
popa
divl
xorb
in
adc
cmp
jge
ret
mov
cmp
jmp
push
push
adc
xor
xor
xchg
and
fwait
sub
pushf
rep
mov
stc
xchg
cs
aas
cmpsb
out
fimuls
dec
xchg
hlt
out
ficoml
jno
mov
add
das
aas
mov
ficompl
xchg
add
xor
les
dec
je
push
dec
adc
mov
jae
inc
dec
gs
or
popa
inc
je
cmp
and
xchg
adc
inc
sub
sbb
mov
insl
jns
pop
mov
sarl
test
mov
lods
fwait
adc
adc
mov
scas
push
push
xlat
cmpsb
sbbl
aam
jge
pop
dec
mov
jge
or
inc
xchg
addr16
xchg
jne
mov
push
mov
addb
dec
mov
dec
out
out
dec
mov
adc
test
pop
fisubrl
jbe
fcomi
dec
adc
aad
pop
cmp
sbb
jge
arpl
push
call
icebp
ss
xchg
loopnew
cltd
sub
cmp
mov
inc
aam
jb
lret
inc
xchg
addb
xor
jns
test
mov
movsl
cld
mov
mov
ss
sbb
push
jno
or
inc
sbb
mov
cmpb
mov
xchg
pop
pushf
into
push
xor
pop
inc
cmpsl
inc
pusha
ja
jp
int
adc
xchg
adc
sbb
test
xor
out
adc
rol
sti
fdivp
dec
cmp
or
aaa
inc
jl
in
scas
lock
outsb
lcall
push
push
add
push
mov
inc
das
imul
push
adc
sarl
leave
shrl
add
push
stos
ficoms
adc
cli
enter
xchg
jo
aaa
mov
sbb
lahf
test
insb
enter
lods
orl
add
movsl
mov
add
shlb
in
loopne
add
lret
lahf
enter
cs
leave
popa
push
int
aad
mov
push
fildl
pushf
rolb
inc
cmp
je
push
adc
test
cwtl
aam
addb
rorb
sbb
bnd
cmp
mov
outsl
movsl
dec
push
mov
shll
mov
insb
mov
popa
fwait
pop
add
jmp
cli
sbb
lahf
ja
sbb
ficoms
pop
ss
pop
xor
pop
movsb
pop
and
xor
arpl
scas
fcmovnu
fstpt
cmp
dec
cmpsb
fsubl
call
jb
cmp
jl
sti
out
imul
pop
loop
mov
andl
outsb
mov
push
sub
dec
mov
pop
xor
mov
push
mov
xchg
dec
gs
cmp
and
mov
jnp
ficoml
mov
sub
cmp
mov
loopne
mov
subl
sbb
xor
std
jg
cmp
jp
mov
xor
add
and
inc
jmp
lret
clc
adc
push
dec
popf
or
xchg
adc
or
jo
push
xchg
xchg
or
cmpsb
nop
mov
push
pop
add
push
mov
outsl
cmc
daa
int
popf
fsubrs
fiadds
fidivs
js
adc
mov
mov
arpl
scas
inc
or
mov
loope
faddp
or
ret
sbb
inc
cmp
das
xorl
loop
push
je
in
outsl
in
xchg
repnz
cs
les
pop
mov
out
rcll
fldl2t
pop
and
mov
mov
es
push
pushf
xchg
add
ja
xchg
xchg
mov
mov
mov
fldl
aam
lods
fldl
adc
aas
jb
mov
testl
imul
cmp
pop
or
outsb
pop
mov
pushl
add
cmp
outsl
jae
stc
movsb
or
push
stos
int
mov
adc
cmp
insl
push
push
aaa
jecxz
sub
mov
jmp
hlt
iret
xchg
jl
out
aam
out
mov
scas
mov
xchg
xor
add
push
clc
js
xor
test
pop
xor
xchg
jo
inc
int
push
push
sbbw
jle
jp
jbe
outsl
add
out
shrb
cmc
mov
lea
imul
or
add
jno
pop
and
push
sub
sub
lods
push
and
scas
and
inc
sbb
sarl
inc
test
les
inc
lea
fnsetpm(287
jmp
inc
mov
adc
pop
sahf
sub
add
pop
mov
out
sbb
add
jmp
pcmpgtw
xchg
xor
decb
fs
jmp
shlb
clc
es
xor
dec
dec
mov
mov
test
pop
cli
adc
call
lods
mov
shlb
cmpsl
dec
shrb
sbb
xchg
add
jmp
repnz
adc
mov
mov
mov
inc
xchg
outsb
dec
mov
or
jle
fstps
icebp
stos
inc
test
leave
aaa
hlt
outsb
jmp
lds
aas
faddl
push
inc
cltd
test
xchg
loope
stos
ret
inc
lea
cwtl
mov
sarl
xchg
inc
add
add
std
xchg
add
insb
dec
xchg
and
inc
movsb
xor
xchg
push
xchg
pop
out
or
dec
jg
in
push
and
push
mov
jle
or
outsb
sbb
das
lahf
inc
je
sbb
mov
in
lcall
jae
jg
loopne
mov
pop
lret
rolb
mov
pop
or
or
cmpb
push
cmp
mov
dec
jno
mov
and
fmull
gs
xchg
add
adc
or
popa
xchg
cmp
mov
cltd
popf
adc
scas
js
cwtl
push
xchg
arpl
xor
loop
mov
mov
jo
and
in
aad
negb
add
adc
enter
ss
xchg
xchg
loope
push
jb
dec
push
movsl
cmp
add
pusha
mov
sub
and
push
inc
dec
insb
fimull
sub
pop
leave
xor
pop
push
mov
addr16
inc
mov
lcall
ljmp
push
dec
jnp
mov
ss
adc
lcall
sti
in
ja
mov
pop
out
xor
adc
jl
sub
or
or
test
leave
popf
data16
ljmp
roll
rcrl
es
pushf
js
out
lock
push
push
adc
dec
sbb
fistpll
fwait
repz
mov
test
repnz
pop
int
add
fsubrp
pop
mov
scas
enter
jl
jl
cmp
movsb
shrl
and
cmp
jns
jl
cmp
and
cmc
jno
sub
and
pusha
cmp
mov
inc
mov
pop
sbb
shrl
fwait
pop
cmp
ja
mov
inc
insl
out
or
or
cmp
outsl
adc
add
sub
mov
out
test
or
jo
shrl
dec
por
sbb
jg,pt
pushf
insl
int3
fdivp
xchg
fisttpll
sub
loop
and
data16
pop
fxch
shr
mov
cmp
pop
push
leave
or
test
es
mov
jge
mov
xchg
jge
pop
adc
push
sbb
sbb
jecxz
push
xor
mov
and
pop
jno
adc
js
xchg
iret
sarb
jle
inc
xchg
decb
call
pusha
push
sbb
mov
jl
pop
push
and
pop
call
fdivrl
cwtl
test
add
lds
xchg
hlt
aam
mov
cmp
pop
inc
dec
and
mov
bound
and
xor
adc
mov
mov
icebp
and
int
mov
xor
ret
bound
jbe
inc
popa
icebp
push
pop
pop
fisttpll
jo
mov
daa
aaa
daa
in
jo
lret
jecxz
jge
repz
xchg
or
xchg
ret
lock
lds
fnstsw
movsb
scas
pop
push
adc
mov
push
and
add
imul
mov
push
lretw
dec
and
lret
push
push
lds
dec
sbbl
push
rcrl
push
dec
incl
add
fisubl
mov
sahf
xor
mov
std
scas
xor
int3
adc
loopne
fcmove
push
negb
add
lahf
fiadds
leave
mov
rcl
or
test
lods
inc
sti
pushf
push
fstpt
dec
rcll
xchg
loopne
sbb
or
add
hlt
cmp
or
jge
sti
mov
mov
pop
mov
ror
mov
lret
push
aad
push
scas
je
cmpsb
mov
fisttpll
aam
pusha
mov
js
test
adc
sbb
test
pop
dec
or
push
fstps
cmpl
subl
pushf
pop
adc
and
adc
sub
mov
inc
mov
daa
pop
cmp
loopne
inc
push
cmp
xchg
insl
adc
mov
adc
dec
mov
cmove
xchg
jae
dec
push
lods
mov
fwait
xchg
dec
dec
mov
test
sbb
xor
mov
mov
in
in
lods
jo
idivl
loop
cmp
pop
mov
mov
xchg
sbb
popa
inc
sti
ds
dec
outsb
lds
je
dec
mov
cld
mov
ds
xor
add
cmpsl
cltd
sbb
xchg
fwait
xchg
mov
and
leave
icebp
movl
aam
push
adc
js
popa
in
or
adc
inc
cmp
jne
inc
call
or
lods
dec
dec
cmp
pop
stc
xor
fildll
pop
mov
inc
stc
push
icebp
ja
and
and
adc
push
sub
sbb
ret
xchg
mov
aad
in
out
js
rcll
sub
lret
sub
dec
jae
jo
mov
ficoml
push
adc
pop
jnp
stos
cmp
jne
fsubr
or
ds
in
cwtl
push
inc
mov
in
shrl
mov
shl
inc
jbe
push
out
iret
mov
clc
jne
outsb
adc
insb
jo
ss
aam
in
xchg
loope
lock
pop
inc
mov
inc
push
lea
aaa
xlat
and
leave
sbb
lret
mov
dec
subb
es
imul
xchg
jbe
incb
mov
push
addr16
cmpsw
ja
cmpsl
pop
imul
push
push
pop
cmpsb
add
or
inc
out
xor
adc
mov
adcl
mov
lahf
sti
or
mov
jp
pop
cmp
jg
xchg
or
mov
fisubrl
mov
out
fnstcw
popa
adc
add
sbb
xchg
adcb
sbb
push
aas
cmp
adc
stos
aad
xor
push
lahf
dec
cmpsb
mov
movsb
sub
repnz
sbb
dec
bound
enter
jbe
lahf
adc
pop
mov
push
jno
jbe
test
in
push
stos
xor
cltd
sub
mov
cwtl
cmpsb
jle
xchg
lea
push
mov
jg
mov
and
scas
sbb
mov
and
adc
jecxz
push
mov
fisttpl
sti
shrl
and
pop
mov
pop
sub
neg
adc
sahf
inc
scas
or
outsb
out
popl
mov
ljmp
lret
dec
iret
addr16
fs
adc
repz
xchg
daa
sti
mov
add
cmp
ror
jbe
dec
mov
or
arpl
lret
xchg
add
and
add
pop
movsb
push
push
add
les
aad
js
aaa
mov
fs
imul
add
cs
scas
mov
rorl
insb
cmp
daa
sub
repz
lea
pshufw
cmp
or
or
lods
ja
xlat
mov
cmp
orb
push
xor
push
daa
and
scas
in
sub
retw
imul
stos
lods
sti
aaa
pusha
nop
jge
arpl
out
out
mov
test
jg
push
sbb
pop
dec
div
shll
cmpsl
hlt
pop
xor
mov
jns
aam
movsb
sub
xlat
and
mov
mov
xchg
jb
fcmovne
gs
cli
adc
ds
push
pushf
insl
inc
sub
les
mov
cs
rcll
mov
repz
jns
jo
mov
loope
sahf
jne
test
loop
jbe
push
inc
xchg
sub
push
jns
sbb
sbb
pop
rcrl
mov
jnp
cmp
inc
mov
xor
inc
ljmp
leave
pop
stc
stos
pop
push
add
adc
pop
jecxz
xchg
leave
jp
or
xchg
pop
scas
push
ffreep
fsubrl
ja
jae
arpl
test
mov
cwtl
je
fwait
ret
cmp
jnp
out
push
je
ss
jnp
mov
insl
sub
add
pop
or
adc
push
jmp
push
sbb
cmc
loop
add
sbb
adc
mov
jne
leave
add
mov
flds
in
hlt
jmp
movsb
jbe
leave
mov
mov
cmp
sbb
js
xor
inc
cmp
ficoms
mov
jle
sub
scas
ja
int
testb
adc
movsb
ret
addl
push
rcrl
mov
mov
lret
fcoms
and
or
lahf
add
mov
inc
pop
xchg
mov
lds
dec
insb
sbb
cmp
dec
push
insb
adc
jecxz
in
jmp
movsb
jg
imul
je
mov
sub
and
jl
pop
pop
movsb
pop
outsl
pop
outsb
pop
sub
faddl
lret
lods
nopl
jns
out
repz
mov
pop
adc
jo
pop
cmp
loop
je
xchg
cltd
pop
jp
pop
push
mov
push
xor
jmp
movsb
inc
xor
sub
scas
xor
mov
add
cmp
aas
lcall
jmp
fidivs
aad
dec
loope
inc
cmp
inc
test
mov
xor
mov
cmp
fisubrl
mov
in
add
dec
mov
pop
xor
push
sub
sub
aaa
push
push
fdivs
mov
aas
jp
mov
adc
adc
aad
in
fisubl
mov
pavgw
mov
mov
sahf
cmpsl
movsl
jne
xorb
adc
sub
mov
stc
or
sbb
mov
cmp
test
xchg
jns
add
test
push
adc
jg
leave
shr
dec
mov
sub
js
scas
mov
sbb
sbb
cmp
cmp
aaa
mov
cmp
sub
mov
or
xchg
xor
test
fldl
std
or
mov
outsl
push
add
icebp
xor
and
pushf
gs
loop
movsl
mov
lea
loope
dec
mov
out
pop
icebp
inc
int
dec
into
push
dec
in
fildl
pop
sbb
jo
lret
inc
mov
popf
cltd
cmp
rorb
or
sbb
push
insl
xchg
xchg
negb
stc
mov
pusha
cli
push
stc
std
or
loopne
roll
pop
popa
flds
xchg
mov
aaa
push
mov
movsl
jle
icebp
push
subl
and
pop
jle
adc
outsb
fdivl
push
roll
mov
jmp
shl
js
leave
mov
fisttpl
repz
and
imul
xor
lcall
lock
movsb
fidivs
das
mov
std
or
push
push
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
outsb
cltd
cmpsb
scas
lcall
outsb
push
data16
lock
jmp
aad
lahf
push
jne
jb
xchg
enter
outsb
xchg
es
pop
adc
lahf
iret
inc
pop
and
fwait
lds
pop
mov
xchg
les
inc
dec
dec
xor
and
loop
and
push
xchg
shl
jae
add
mov
or
jne
push
imul
sti
mov
iret
scas
fidivs
hlt
and
cltd
cmp
repz
cltd
and
pop
inc
pop
inc
jns
ljmp
repz
sti
ficomps
fnstcw
mov
loop
pop
scas
aam
mov
jmp
stos
mov
xor
ja
ja
push
sbb
mov
pop
jne
outsl
out
mov
jle
push
push
xchg
xchg
ljmp
fldcw
mov
push
idiv
addl
and
stos
ret
jp
xor
cmp
js
xchg
jno
xchg
ret
test
push
iret
sbb
stc
push
or
movsb
cwtl
out
aad
push
hlt
add
iret
imul
add
jle
ljmp
xchg
bound
adc
roll
push
sbb
orb
inc
bswap
or
lret
mov
stos
cmp
ljmp
sar
sahf
insl
pop
or
sbb
test
sarb
mov
out
mov
jl
test
out
pop
add
pop
mov
or
call
mov
scas
testl
sub
lahf
dec
pop
jo
dec
xchg
mov
jnp
dec
dec
jl
rcl
cmp
xchg
jmp
aaa
lods
mov
dec
sub
out
adc
push
xor
adc
jo
adc
gs
js
ljmp
xor
inc
lock
enter
mov
les
adc
ret
xchg
lds
push
jle
and
loopne
inc
xor
cmp
gs
jmp
decb
out
movsl
int
in
in
add
push
loop
sub
sub
and
rolb
jbe
sub
sbb
popa
jbe
mov
addr16
or
leave
repz
or
sbbl
pop
pop
test
popf
mov
arpl
push
inc
push
or
dec
xor
fbld
add
filds
iret
mov
lea
pop
jbe
std
mov
mov
mov
sub
or
notb
or
pcmpgtb
cld
js
pop
jno
lock
cmp
gs
sub
push
pusha
ljmp
scas
sub
jecxz
sbb
mov
xchg
or
test
xchg
lock
cmp
pop
lock
xchg
in
adc
xor
mov
das
mov
in
jge
push
cs
ret
cltd
mov
fs
cmp
nop
cmc
jb
pop
pop
mov
mov
jnp
pop
lds
mov
punpcklwd
movsl
arpl
add
bound
aam
xchg
cmpsb
pop
add
mov
jae
sub
cld
ret
and
test
jb
or
test
bound
push
ja
mov
in
mov
ljmp
leave
je
dec
xchg
ficoms
pop
xchg
add
shl
jo
add
shlb
push
sbb
andl
push
dec
dec
dec
ljmp
std
cwtl
insl
in
addl
adc
and
in
das
or
test
and
add
jmp
add
and
dec
sub
lret
scas
and
loope
and
mov
push
dec
dec
cmp
dec
rol
push
dec
cmpsl
mov
in
mov
aam
jl
xor
stos
ss
sbb
jp
nop
dec
jo
inc
cmp
inc
adc
push
and
add
lods
lds
movsl
test
nop
addr16
ds
scas
out
xlat
pop
cltd
xor
cmp
dec
xchg
fistps
cmpsb
pop
mov
inc
xor
mov
popa
rcrl
add
stc
fidivs
and
fisttps
add
pop
adc
aaa
loop
arpl
cmp
xor
imul
fcmove
jo
addr16
into
mov
cwtl
sbbb
sbb
push
js
dec
cmpsl
inc
imul
loope
mov
push
push
push
sub
add
rcrl
pop
adc
or
les
fldt
fstpt
dec
jmp
push
jno
adc
xor
stos
cli
stc
sub
mov
jb
ds
inc
mov
dec
out
sbb
pusha
dec
and
push
psraw
sub
inc
or
push
or
test
cmp
sub
fmulp
sti
cs
dec
inc
xchg
in
dec
std
push
sbb
xchg
xlat
sub
xchg
inc
repz
loopne
push
mov
push
lds
or
movsb
call
or
and
xchg
sub
push
pop
and
je
in
scas
aad
shrb
test
push
mov
push
clc
jns
pushf
mov
pop
sbb
in
jnp
mov
dec
iret
ja
xchg
insl
xchg
repz
pusha
pop
or
mov
sub
adc
adcl
subl
sub
out
icebp
jno
jb
jg
or
sbbb
pop
cli
lds
sub
mov
xchg
repnz
nop
insb
clc
loope
cli
mov
cli
aaa
loop
aam
push
xchg
in
pop
jmp
jmp
fcoml
stc
inc
adc
inc
roll
xlat
mov
fcmovne
jl
xor
lds
push
pop
push
mov
icebp
push
pop
insb
jae
push
jbe
stos
dec
sbb
mov
jbe
cwtl
aas
mov
jae
pop
add
push
or
loop
dec
filds
inc
cwtl
in
jns
das
dec
or
jo
cld
sbb
popf
xor
inc
xor
push
orb
or
sbbb
mov
adc
iret
arpl
mov
andb
mov
mov
adc
cwtl
inc
xchg
fwait
xchg
mov
dec
xchg
and
nop
roll
iret
iret
or
adc
cwtl
and
ja
imul
orb
fmulp
lret
cmp
lock
jae
adc
js
jbe
movsl
dec
ljmp
add
and
mov
stc
movsb
ret
mov
adc
xchg
fmuls
mov
sbb
cli
lret
or
mov
pop
je
hlt
cmpsb
cmc
cwtl
lea
xor
lcall
movsb
jp
fidivs
mov
add
imul
push
and
mov
xchg
fldenv
lahf
mov
leave
fucomi
sbb
fwait
int
or
mov
and
sub
mov
sbb
cmp
fldenv
jne
pusha
ljmp
mov
dec
cld
mov
sahf
arpl
repnz
scas
sbb
aam
cmpsb
pop
mov
push
or
int
sub
aad
shll
or
scas
push
fldcw
cwtl
bnd
aad
mov
andl
imul
adc
movl
pop
adc
adc
mov
jl
lcall
movsl
jp
pop
arpl
mov
push
mov
out
adc
jb
push
jno
dec
fwait
rorb
ret
mov
je
outsl
mov
lea
stos
jno
addb
call
lds
jge
xchg
add
sub
jne
mov
das
fwait
ljmp
mov
sahf
sub
stos
pushf
sub
roll
push
dec
mov
xchg
cwtl
or
xchg
push
cmpb
dec
sti
cld
arpl
cmp
repnz
dec
fisttpl
lds
and
xchg
adc
add
ficomps
jl
pop
mov
push
call
jb
addr16
fsubr
shr
cmc
add
adc
into
repnz
push
icebp
cmp
lret
push
in
sbb
and
or
das
add
jg
jmp
cmc
mov
adc
popa
jne
and
jp
sbb
out
pop
push
add
jle
adc
rcr
aas
out
pushf
push
adc
add
in
mov
inc
xor
mov
xchg
add
icebp
sahf
gs
xchg
rorb
aas
pop
adc
sbb
mov
push
insl
pop
xlat
das
or
xchg
sbb
gs
lret
sarl
orb
lahf
lret
and
mov
cmpsb
mov
jecxz
inc
sahf
push
adcb
mov
and
vorpd
pop
mov
popa
mov
or
xor
fidivrs
inc
dec
mov
jnp
jns
cmp
jbe
push
inc
pop
dec
fisubrs
nopl
mov
test
fisubrs
sbb
inc
pushl
shr
xchg
pop
ret
shll
call
sub
cltd
jecxz
pop
outsb
xor
repnz
pushf
sbb
xchg
or
mov
test
sbb
mov
std
inc
stc
cmp
push
adc
mov
pop
enter
pop
in
inc
mov
pusha
cltd
hlt
arpl
test
daa
jbe
out
mov
jns
loop
ljmp
or
mov
xchg
lods
mov
test
jp
pop
sbb
xor
fdivl
rcll
inc
andb
sub
mov
jge
push
mov
push
cmc
dec
push
inc
je
sub
push
or
daa
mov
add
es
push
jns
fwait
fldcw
adcb
mov
cmpsl
mov
jmp
pop
out
nop
xor
jmp
jo
addr16
out
mov
popf
add
pushf
or
mov
mov
inc
mov
cmpsl
mov
addb
mov
out
mov
jle
roll
dec
adc
and
pop
mov
cmpsb
mov
cli
mov
insb
push
cmc
add
xlat
cmp
add
gs
add
movsl
sub
rcrl
add
push
mov
mov
mov
xchg
fidivl
out
aam
repnz
gs
aaa
aaa
repz
xor
jp
xchg
inc
mov
sbb
ss
push
outsl
jge
push
xorb
test
loop
inc
andl
xchg
push
aam
and
loope
inc
mov
push
pusha
cmpsb
mov
and
add
lcall
or
shrb
mov
inc
sbb
push
xor
xor
cmp
movsl
movsb
adc
pushf
gs
xor
fsubp
sbb
pop
nop
loopne
repz
daa
popa
cmp
push
loope
mov
xchg
into
in
mov
jno
dec
jmp
pusha
repnz
aaa
arpl
pop
nop
push
push
aas
jne
pop
pop
lahf
mov
imul
or
faddl
dec
mov
lahf
jmp
mov
sub
jo
test
pushf
dec
xchg
arpl
inc
xchg
pop
sbb
push
and
push
mov
call
sbb
mov
adc
arpl
mov
pop
xchg
jp
stos
xchg
dec
xor
subb
shlb
sbb
outsb
and
mov
pop
dec
adc
lods
inc
push
mov
ja
das
dec
stc
ja
in
loop
lods
out
xchg
ljmp
and
into
shrl
xor
stc
add
out
inc
mov
lods
lcall
clc
xchg
inc
fstps
hlt
mov
in
push
in
cmp
lahf
mov
lcall
test
pop
mov
adc
pop
mov
in
jge
dec
add
cmp
adc
pop
icebp
clc
pop
dec
and
add
lods
push
cmpsl
and
pop
inc
jecxz
mov
scas
sbb
push
das
push
cmpsl
arpl
add
inc
mov
daa
pop
push
iret
addr16
icebp
lret
mov
adc
rcr
jecxz
outsb
xchg
inc
pop
cmpsl
stos
mov
enter
andl
fcomp
cmp
xor
pop
xchg
jmp
jne
ds
test
pop
mov
ret
iret
sub
dec
xchg
sti
aam
aad
add
rsm
pushf
pop
lds
add
mov
dec
push
and
cmc
and
push
fdivr
cmp
or
inc
sub
mov
out
cmp
xor
hlt
sbbl
cli
int3
fildll
xchg
aas
inc
clc
div
in
loope
bound
test
and
scas
lock
es
jge
jg
cmp
gs
pop
repz
lods
cmp
cmpsb
pop
sbb
and
sbb
mov
test
int
push
and
sub
cs
jbe
add
insb
in
xor
inc
mov
mov
jp
inc
loope
frstor
lahf
jp
push
lods
rorl
test
xchg
lds
in
decl
test
sbb
inc
hlt
cmpsb
into
out
xchg
daa
jg
hlt
jg
mov
lcall
les
xchg
push
cwtl
fwait
xchg
outsb
movsb
imul
mov
stos
sub
loope
and
ret
jne
push
xor
rolb
rorb
xchg
scas
dec
sub
jnp
and
ljmp
int
jne
inc
lcall
stc
mov
jnp
gs
xor
sbb
idivl
cmp
shl
ret
inc
lret
hlt
sbb
repnz
call
loopne
stc
jge
mov
jle
xor
ret
mov
adc
mov
xor
cli
test
popa
and
test
cmpsb
xchg
jbe
push
bound
add
shr
addr16
mov
aas
mov
out
inc
test
jmp
jle
leave
push
lock
fsubs
cltd
mov
enter
call
in
stos
jp
out
and
into
not
jmp
and
iret
jmp
or
cmp
push
jl
jns
imul
rol
xor
jae
insl
cmp
xchg
ror
aaa
pop
xor
dec
add
pop
xlat
and
or
imul
xor
loopne
inc
add
xor
sbb
filds
lea
ja
dec
dec
dec
and
sub
cwtl
jno
sahf
xchg
in
stos
mov
xchg
xchg
shll
sbb
xchg
add
aad
pop
cmpb
mov
xor
mov
out
aad
shr
jmp
in
into
push
fsubl
das
test
imul
in
mov
mov
cwtl
sub
push
jno
cmc
adc
jb
or
cli
jle
xchg
movsl
aad
mov
xor
pop
jp
mov
fwait
mov
jbe
jecxz
xchg
cmpsl
movsl
leave
pop
fcoml
mov
mov
adc
sub
push
mov
fsts
nop
sub
daa
test
loope
test
or
push
or
xchg
dec
call
and
jecxz,pn
iret
pop
ret
sbb
fdiv
xor
xor
sbb
mov
jb
pop
cmp
pop
out
mov
xchg
adc
gs
mov
or
mov
and
leave
cmp
xchg
sbb
int
fbstp
push
hlt
movsl
cld
lods
cmp
cli
das
jp
inc
cli
sub
mov
jecxz
cmovg
add
adc
xchg
and
mov
pusha
ja
bound
in
inc
loope
xchg
or
cmp
xchg
scas
adcl
shlb
out
in
xor
loopne
repz
xor
pusha
mov
xchg
aad
in
or
mov
ret
int
inc
mov
std
imul
divb
cltd
dec
or
sub
outsl
sti
mov
sbb
rcrl
mov
pop
daa
popf
fs
into
add
rol
push
and
stos
icebp
clc
sti
movsl
leave
pop
cwtl
jo
and
call
aam
jbe
std
inc
aam
dec
cmp
jg
push
gs
mov
xchg
rorl
stos
push
outsl
add
jnp
divl
and
cs
ret
mov
lods
cmp
jbe
dec
adc
lahf
cmp
dec
test
fucomp
pop
es
test
adc
add
ret
gs
call
push
add
aas
push
sub
xor
adc
fisttpl
jns
mov
mov
mov
stos
in
repnz
fimull
cmp
test
pusha
inc
jmp
int3
push
sarb
into
jns
sbb
mov
add
mov
mov
cmpl
sub
sbb
xlat
cmp
mov
dec
lahf
cmp
mov
jl
pop
sahf
outsl
xchg
mov
dec
jmp
push
lahf
iret
nop
xchg
fwait
jne
mov
inc
rclb
cmpsl
test
xchg
adc
mov
mov
pusha
lret
jae
adc
push
subl
aas
sbb
lock
fbld
icebp
mov
mov
sub
int3
sbb
mov
out
je
push
xor
inc
fadds
leave
mov
popf
and
jmp
mov
jo
movsl
in
mov
es
mov
and
adc
lret
sbbb
dec
int
jge
sbb
outsl
jne
dec
jl
cmp
cwtl
adc
pop
stc
ss
lods
int3
add
dec
ret
jnp
rcrl
loope
xchg
std
js
enter
push
les
aaa
mov
popa
sarb
mov
xor
std
dec
fdivrs
xchg
jae
sub
fucomp
ret
mov
ficompl
cmpsb
mov
ja
insb
xor
or
fldl
pop
out
xlat
notl
shrl
mov
xchg
ret
je
icebp
in
xor
mov
insb
daa
pop
lahf
into
leave
dec
sbb
fs
cmpsl
xchg
imul
test
push
lcall
ss
adc
pop
sbbl
aad
adc
imul
mov
leave
jbe
negb
adc
pop
repz
aas
pop
push
or
shlb
push
mov
push
mov
xlat
mov
sbb
jae
jnp
jl
aas
fwait
push
popa
push
inc
xchg
inc
mov
xchg
in
mov
and
mov
les
fimull
cmc
insl
je
add
enter
inc
out
in
rcl
or
adc
sub
in
sti
inc
shl
rcll
lods
jle
mov
add
imul
and
push
xchg
out
ljmp
jo
or
jo
movsl
shll
jle
jne
insb
out
ds
mov
mov
mov
push
pop
mov
int3
push
and
mov
movsb
inc
cmp
and
inc
or
inc
sub
add
bound
lret
out
push
cli
inc
cli
pop
sub
int3
pop
mov
test
pusha
mov
mov
ficoml
push
aaa
cmp
pop
cmp
idiv
jge
xlat
arpl
push
and
leave
rcrb
in
push
jg
lret
pusha
sbb
fs
pop
fimuls
dec
lcall
push
mov
rcrl
cmpsb
or
inc
jno
repnz
in
mov
jb
sbb
or
or
outsb
cmpsb
or
cmpsb
mov
push
sti
insl
push
lcall
leave
data16
ljmp
fs
push
clc
and
nop
sub
sub
inc
push
sub
andl
shlb
shrb
push
jns
int
mov
and
cltd
pop
jnp
mov
mov
mov
sbb
sbb
xor
mov
loop
sub
je
xorl
add
mov
sbb
rorl
or
repnz
cmp
jg
fwait
insl
pop
add
fwait
cmp
aam
outsb
sbb
call
mov
push
pusha
inc
popa
shll
fiaddl
aam
sbb
in
inc
test
or
jp
cmpsl
jp
dec
test
jnp
xor
mov
cmp
sti
push
mov
mov
xchg
mov
insb
add
add
outsb
stc
test
xchg
icebp
adc
mov
test
sub
add
mov
dec
lock
daa
pushl
sti
std
inc
mov
insl
dec
repz
mov
shl
and
popa
daa
outsb
sbb
movsb
xor
mov
outsb
sti
lret
xchg
leave
inc
sbb
idivl
icebp
sub
jl
ja
fmull
push
fldt
mov
aad
jmp
add
and
loope
sbb
arpl
inc
and
outsl
xchg
inc
sub
push
orl
bound
xor
mov
xchg
pop
cli
xchg
pop
decl
shrl
fists
adc
sbb
xchg
bound
out
mov
sbb
ret
dec
fld
push
imul
mov
fmuls
xchg
sub
clc
mov
cld
rcl
out
push
push
ss
dec
lds
push
bound
testl
lret
xchg
jno
jge
fisttpl
data16
sbbl
jl
jecxz
hlt
xor
pop
and
nop
rcrb
clc
pop
lcall
push
and
cmp
and
mov
xchg
out
sbb
sbb
mov
out
in
lock
shrl
push
dec
fldl
xchg
cmp
fsubs
push
sbb
fs
into
mov
roll
cmp
xor
xchg
or
cmp
adc
rcll
sbb
imul
sbb
pop
pop
fmull
aad
sub
in
movsb
cli
add
mov
in
mov
icebp
cmp
rcrb
mov
jne
mov
sbb
scas
fistpl
push
fisttpl
lods
inc
jp
or
sarb
dec
and
push
xchg
ljmp
add
or
nop
mov
jo
int3
cmp
cli
adc
adc
adc
fs
push
cmpsl
repnz
stos
and
jae
adc
jp
clc
outsb
outsl
jne
out
fildll
dec
add
jns
jg
mov
xor
inc
push
lcall
xorb
xchg
clc
divl
push
mov
mov
dec
mov
mov
adc
dec
push
mul
mov
scas
xor
scas
sti
imul
dec
cmp
push
xchg
mov
jnp
pop
inc
and
loopne
in
push
xor
ret
push
inc
aas
jno
in
daa
out
nop
arpl
adc
sbb
in
push
arpl
adc
dec
lods
fwait
pop
xchg
lock
mov
push
push
add
mov
js
mov
xlat
mov
loope
sub
xor
fisttps
sbb
dec
jns
sub
cmpsb
adc
and
loopne
cmp
cmp
pop
in
pop
xlat
pop
inc
cmp
lods
inc
aaa
mov
xor
into
sbbb
push
mov
nop
sbb
insb
or
in
xchg
in
fnsave
cmp
push
test
cvtps2pi
pop
mov
ljmp
xlat
pushf
je
push
xor
jbe
add
and
sbb
arpl
xor
sub
insb
call
ja
sarb
pop
pop
mov
or
inc
out
cmpsb
popa
out
inc
jae
jp
sub
mov
jo
int
fs
insl
into
enter
jae
pop
cltd
in
jmp
pop
xlat
fs
sbb
pop
insl
in
out
cs
jle
mov
in
lock
mov
xchg
ss
leave
dec
out
fsubr
fldl
dec
jg
xchg
insb
cmpsb
bound
imul
fdivs
cmp
xor
mov
jo
shr
add
int
sbb
mov
push
mov
testb
sub
cltd
cs
push
pop
fld
mov
dec
push
and
lea
outsl
adc
subb
fwait
pop
popa
icebp
xor
dec
dec
mov
inc
xchg
outsb
aad
iret
nop
sub
sbb
lret
inc
xorb
push
repz
nop
sbb
push
inc
mov
lahf
inc
mov
adc
mov
jecxz
test
pop
ss
andl
inc
pop
loope
mov
sbb
mov
shll
jo
gs
lds
push
jecxz
stos
sub
dec
or
xchg
mov
sarb
jo
push
sahf
iret
scas
xor
adc
in
mov
sub
in
mov
das
xchg
pop
ret
jge
js
sub
xor
lods
in
add
imul
rorl
jns
xor
shll
jno
scas
out
cmp
das
jl
test
lods
sub
cld
sbb
idivb
mov
bound
cmp
jae
je,pn
loop
mov
jns
dec
leave
lcall
fidivrl
lea
or
push
test
out
sti
int3
cld
and
out
fwait
cwtl
mov
lods
pop
adc
mov
pop
movsb
popa
or
mov
add
fcmovb
add
or
adcb
test
mov
jp
dec
int
call
iret
and
nop
into
mov
push
out
cld
xchg
lcall
mov
out
popa
adc
mov
push
cli
xchg
popa
mov
jbe
comiss
in
popf
scas
mov
roll
mov
and
dec
inc
aas
sub
insb
insb
xchg
scas
andb
mov
pusha
inc
popf
in
adc
movsb
push
imul
testl
jb
push
bound
pushf
in
fwait
xchg
repz
cs
xchg
adc
pop
mov
mov
int3
out
add
into
sbb
ret
icebp
mov
add
cmpsb
jmp
imul
mov
add
scas
clc
cmp
and
mov
aas
pop
cmp
popa
xchg
mov
call
js
cmc
jl
sbb
insl
sub
sub
movsl
rcll
mov
jnp
mov
mov
xchg
push
les
int
jmp
ljmp
insl
mov
cmp
adc
std
jnp
pusha
and
sbb
mov
fisttps
stc
jno
stos
jge
inc
or
mov
rorb
inc
cmp
xchg
or
das
pop
cmp
dec
cld
xchg
stos
sbbb
push
pop
xchg
mov
dec
lea
xchg
cmp
push
int
imul
mov
cltd
jae
lods
enter
add
sbb
xor
pop
and
flds
fcoms
cmp
dec
dec
jne
aas
sub
sbb
popf
lret
cmp
xchg
inc
inc
aas
push
rcrl
test
sbb
mov
test
data16
inc
pop
push
es
cli
das
add
jae
test
lahf
sub
push
add
cli
jecxz
in
mov
mov
movsl
xchg
scas
and
mov
test
jne
mov
or
popf
mov
fsubrl
push
xor
and
dec
lahf
mov
and
jl
pop
inc
addr16
jae
adcl
dec
add
cmp
in
js
sub
jp
xchg
sbb
test
aam
daa
cmp
pop
ja
fcomps
ljmp
aaa
out
int
decl
test
mov
stos
pop
or
out
int
sub
out
xchg
inc
mov
cs
int
ret
out
mov
push
in
or
movsl
jg
dec
sbb
outsb
cwtl
add
xchg
enter
dec
cwtl
rorl
cld
aad
test
es
adc
sahf
lea
mov
call
fdivs
int
inc
lahf
stos
jne
mov
ss
sti
clc
into
ss
ja
loope
xchg
mov
inc
sbb
aas
xchg
add
sbb
push
js
movsl
iret
jns
mov
mov
xlat
sbb
xchg
jle
push
icebp
test
push
push
imul
mov
sub
pop
into
mov
loopne
dec
mov
jns
add
push
hlt
push
xor
cltd
mov
fldt
filds
jb
sahf
xchg
lods
pop
adc
push
xor
sbb
push
adc
inc
dec
pop
mov
repz
cmp
sbb
sbb
mov
sub
sbb
into
jno
ds
jp
push
enter
cmp
fldenv
lods
out
pushl
sub
push
data16
cwtl
cmpsb
fcomps
out
shl
mov
addr16
in
adc
pop
pop
pusha
push
jge
loopne
pop
icebp
inc
pop
add
mov
loope
shl
xchg
mov
push
lods
scas
xor
xchg
cmp
or
pop
popa
out
add
jae
inc
pushf
cmp
mov
sti
ret
int3
xchg
and
cmpsl
xchg
shl
inc
cltd
sbb
pop
or
pop
add
xor
adc
in
cmpsb
out
mov
cli
and
in
mov
xchg
aam
add
stc
sub
in
dec
push
xchg
jns
imul
jne
stc
sbbl
xchg
pop
xchg
inc
pop
arpl
adcl
mov
sbb
shlb
popa
loop
mov
outsb
repnz
stos
sub
dec
xor
lret
dec
stos
sub
or
and
and
pop
xchg
mov
and
fsubrs
push
inc
mov
lods
test
push
or
pop
into
inc
xchg
jbe
call
sar
add
gs
push
fstpt
jl
jns
mov
or
adc
xchg
stos
push
sbb
int3
xchg
mov
pop
xchg
aas
cld
pavgw
mov
into
movsl
in
insb
nop
inc
ret
movsb
es
out
vmovq
mov
jnp
xchg
adc
push
arpl
pop
adc
jbe
mov
repnz
pushf
sbb
call
mov
xchg
mov
jp
aad
outsb
iret
incl
hlt
cmp
ds
xchg
ficoml
ss
dec
icebp
stos
negl
std
insl
mov
aaa
lock
adc
jne
repnz
xor
ja
mov
push
jns
mov
jae
cli
xchg
fsubrl
pop
call
repz
sub
test
js
inc
and
xchg
cmp
mov
jnp
dec
cli
inc
dec
xchg
imul
loop
pop
in
pushf
adc
push
in
pop
bound
mov
insl
sbb
loope
jno
pop
mov
cmc
add
lret
nop
into
mov
sub
sti
add
xchg
icebp
jl
pop
sub
subl
mov
mov
push
add
test
fsubl
xchg
daa
adc
dec
orb
adc
push
and
les
mov
aaa
mov
les
fcomip
scas
jae
imul
mov
js
pushf
sti
pop
scas
lret
mov
aam
loope
cmp
sbb
lds
push
xchg
aam
dec
mov
fidivrl
nop
leave
shlb
lcall
iret
icebp
mov
aaa
sbb
jmp
jbe
sbb
pop
mov
nop
std
daa
adcl
jl
pop
fdivr
loopne
or
mov
add
mov
gs
jbe
adc
sbb
sahf
std
cmp
and
testl
in
roll
or
pop
mov
sbb
pop
push
cli
add
mov
sti
cmp
dec
fcomps
xchg
out
inc
mov
and
and
jmp
not
and
mov
xchg
xchg
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
fwait
push
hlt
bound
pop
bound
push
mov
add
ret
adc
mov
rcr
inc
mov
aam
jno
sub
shrb
test
lock
mov
arpl
push
mov
mov
sub
inc
insl
ja
pop
xor
xchg
inc
jl
dec
imul
punpcklwd
dec
or
scas
xchg
test
adc
das
xchg
adc
inc
lahf
rcrb
jbe
repz
stos
jo
mov
packsswb
cmp
cmp
lcall
pop
sbb
in
outsl
xchg
push
dec
nop
cmp
addr16
testl
in
cmpsb
and
jle
std
stos
bound
push
dec
into
jne
js
pop
dec
add
push
jecxz
or
dec
movsb
jne
jge
popf
sbb
pop
jns
push
and
pop
andb
jns
call
jne
cmp
and
out
ja
inc
pop
shl
sub
addb
sub
jno
nop
loop
es
fwait
xchg
pushf
iret
adc
sub
sub
mov
into
jp
sahf
lahf
mov
pop
mov
mov
push
or
cmp
pop
and
ss
xchg
imul
jl
push
lret
adc
jae
add
push
lcall
mov
sub
jg
pop
clc
xchg
int3
insb
sbb
repnz
arpl
sub
rcrl
dec
mov
sti
fsubrl
mov
mov
dec
jge
fimull
in
inc
sahf
jns
movsb
mov
iret
mov
repz
sbb
sub
dec
jns
sub
pusha
fstpt
popf
fsubs
dec
in
xlat
or
xlat
and
vpaddsw
pop
jmp
sbb
push
popf
mov
imull
imul
pop
imul
insl
sub
inc
inc
push
add
je
cmp
pop
rcrb
repz
roll
out
test
nop
push
idiv
pop
rorb
fstpt
fstpl
pop
cltd
adc
inc
pop
cmpsb
daa
dec
or
in
jmp
and
sub
sbb
jg
mov
call
jmp
mov
push
push
sti
lea
pusha
aas
sub
and
sub
push
les
mov
and
cli
jmp
dec
mov
cmc
xchg
jne
mov
rcl
mov
inc
mov
push
test
cltd
fs
adc
cld
xchg
insb
leave
pusha
insb
ror
sub
insl
icebp
push
hlt
es
inc
push
scas
movl
inc
movsl
fsts
aad
out
mov
inc
cmpb
inc
mov
sbb
fcoml
jb
out
mov
nop
adc
hlt
jecxz
out
rorl
movsb
rol
nop
jnp
adc
add
cmpsl
mov
lods
mov
das
add
xlat
cltd
pop
dec
movsl
xchg
mov
pop
das
inc
push
or
scas
std
jmp
mov
notl
fimuls
mov
mov
xor
fsts
jns
jge
ret
into
aad
dec
pop
push
add
xor
iret
lea
xlat
inc
mov
cmp
nop
ljmp
push
out
pop
cwtl
sbb
lahf
out
out
xchg
mov
jbe
xlat
and
lahf
pop
push
scas
and
cmpsl
out
jle
lret
cwtl
nop
ffree
jp
scas
std
xchg
out
shlb
dec
psubsb
mov
adc
data16
or
in
dec
dec
adc
or
cmp
andl
dec
icebp
fidivrl
and
sarl
lea
xchg
scas
cld
jle
js
sarb
inc
dec
xchg
cmp
add
or
mov
insb
jo
pop
mov
scas
inc
imul
fs
and
pop
leave
pop
mov
mov
push
test
cmpl
xchg
pop
fiadds
ss
mov
int3
mov
add
jne
add
pop
dec
sbb
sub
jae,pn
fadd
in
push
sub
jae
call
cli
inc
in
xchg
in
xor
rcrl
jg
lock
xchg
je
push
sbb
cmpl
cmp
call
mov
pop
mov
jb
int
inc
stc
sub
pop
jbe
lea
add
in
jp
loope
mov
mov
dec
es
cmc
xor
mov
loopne
xchg
arpl
adc
ret
inc
insb
sbb
das
sub
inc
add
dec
popa
lretw
fldl
mov
movsb
push
scas
mov
mov
dec
outsb
sbbb
stc
push
lods
adcl
adc
jb
repnz
cmp
nop
mov
leave
ja
sbb
arpl
nop
ror
jle
cmp
push
push
loop
mov
or
push
sbb
outsb
fadd
cmp
sarl
insb
dec
mov
sbb
scas
jmp
inc
fwait
jecxz
xor
aam
mov
fstpt
dec
xchg
or
sbb
pop
jb
rorb
mov
mov
and
loop
sub
out
mov
jmp
mov
mov
mov
lock
mov
adc
movsb
jo
jp
enter
scas
mov
negb
pop
push
cmc
cmpsb
arpl
fistpl
sub
inc
dec
mov
push
xchg
mov
cmpxchg
and
xor
jmp
cmp
push
cmp
lea
xor
mov
sub
addr16
jae
dec
mov
out
push
mov
xlat
jge
jne
pop
inc
mov
mov
inc
pop
adc
push
cmpsl
movsb
xchg
sbb
cmp
popf
inc
pop
xchg
das
sub
stos
aam
pop
into
js
aaa
nop
pop
imulb
push
push
jb
or
sbb
es
jmp
sti
scas
icebp
and
cmp
mul
lock
cmp
movsb
sbb
or
or
lret
fists
out
pop
mov
and
xchg
jne
and
mov
adc
add
dec
push
adc
adc
shlb
xor
andb
insl
gs
xor
stos
test
push
xchg
mov
xchg
ds
shl
mov
xor
call
pop
daa
aam
cltd
push
ja
mov
and
dec
cmp
cld
fs
out
xchg
sahf
call
pop
mov
xchg
insl
int3
test
mov
push
lods
jb
cmp
xchg
add
fmuls
lret
or
add
in
dec
sub
adc
dec
sub
icebp
sub
push
cmp
inc
pop
xor
xchg
das
fsub
ds
xchg
je
mov
imul
cmp
cmp
adc
rdmsr
pop
sbb
in
sbb
int3
scas
and
in
addb
cltd
cmp
jns
adc
cld
sbb
lods
dec
into
mov
divb
aam
jmp
sbb
mov
stos
adc
or
mov
xchg
mov
hlt
loope
leave
ljmp
inc
pusha
fidivl
sub
xlat
jbe
pop
pop
scas
int3
pushl
xchg
pop
add
fstl
push
add
lock
lea
sub
and
dec
arpl
add
cwtl
xor
mov
int3
or
lods
aaa
scas
scas
testl
lcall
shll
in
daa
in
sbb
or
mov
gs
ljmp
mov
popf
data16
lahf
mov
sbb
pop
rep
mov
icebp
sub
sahf
cltd
or
push
cmpsl
dec
or
andb
fisubs
test
fwait
cmpsl
out
xor
imul
sub
push
loop
and
sub
in
je
cmp
aam
hlt
mov
inc
dec
jp
cmp
hlt
lock
adc
and
addr16
sub
xchg
das
pop
dec
inc
shr
mov
jecxz
pusha
xor
loop
xchg
cmp
xchg
adc
inc
lret
inc
pop
cmp
mov
lahf
mov
inc
in
fdivs
pop
loopne
es
inc
sbb
mov
sbb
and
ja
lods
popa
pop
dec
push
or
sbbb
push
inc
adc
andl
pop
cmc
push
jns
test
test
push
dec
aam
and
andb
out
push
insb
lock
sub
imul
inc
jl
pop
aam
and
lods
xor
mov
std
out
outsb
mov
je
daa
and
inc
sub
sbb
mov
sbb
xor
loop
mov
test
mov
in
aas
jmp
xor
mov
dec
or
shr
add
int3
daa
push
mov
inc
aas
inc
jl
call
inc
inc
inc
rorb
testl
xor
add
xor
jns
xchg
adc
inc
mov
mov
cmp
into
mov
popf
push
scas
int3
sub
cmp
sti
jbe
adc
scas
test
lret
jns
icebp
mov
pop
out
jecxz
pop
inc
ret
inc
je
mov
dec
leave
or
ljmp
xchg
rcrl
cwtl
jecxz
push
push
or
insl
test
repz
and
shlb
out
dec
das
fisttps
rcrb
addr16
mov
inc
ficoml
shrl
mov
jo
jo
addr16
leave
adc
xor
fdivrs
fdivrs
cs
ja
dec
pop
fwait
clc
leave
out
fisubrs
and
je
or
mov
inc
clc
mov
xor
loope
scas
stos
dec
jne
stos
xchg
sahf
inc
test
xchg
mov
emms
mov
add
out
or
dec
xchg
pusha
out
subl
mov
cmpsb
mov
repnz
or
push
sarb
cmp
iret
sbb
adc
mov
inc
enter
push
addr16
jo
cmp
dec
mov
jl
inc
cmp
or
dec
repnz
fsubrl
mov
jae
jo
mov
lods
in
sub
push
into
call
inc
and
stos
ja
lods
xchg
cmp
mov
sbb
adc
add
int
inc
jmp
out
cmc
mov
mov
inc
stc
cltd
vpmulhw
pop
jns
add
xchg
dec
and
jl
test
inc
decb
mov
mov
mov
inc
jge
fmulp
scas
sbb
push
xchg
mov
ret
mov
mov
cmpsl
mov
push
mov
loope
push
jecxz
arpl
pop
dec
imul
mov
sub
add
mov
adc
sbb
pushf
mov
leave
fwait
xor
cld
xchg
inc
fsubl
cmpsl
jge
daa
pop
xor
adc
sub
dec
sub
addr16
xor
push
lcall
and
mov
or
sub
xchg
mov
mov
xchg
inc
push
inc
shrb
sbb
or
adc
mov
cltd
or
xchg
jns
adc
shl
xchg
xor
loop
sub
sub
jnp
mov
jnp
jo
mov
and
cmp
movsl
and
and
push
push
les
mov
jle
test
bound
lock
sbb
pop
push
mov
mov
mov
je
jp
sub
cli
mov
cmc
jae
and
loope
mov
mov
stos
jne
fadd
xor
add
mov
in
and
inc
mov
adc
sbb
mov
inc
into
fwait
movsb
mov
rolb
rorl
xchg
bound
arpl
push
pop
xlat
movsb
or
cltd
inc
inc
xchg
scas
pop
pop
push
pop
push
dec
pusha
orb
in
mov
mov
mov
test
jge
adc
push
std
loope
fldcw
sub
pop
push
std
mov
cld
das
mov
outsb
xchg
out
sub
faddl
clc
aaa
mov
mov
xchg
fimuls
fs
stos
inc
cmpsl
dec
icebp
xchg
std
out
outsb
lods
cmpsb
mov
test
out
jmp
kmovb
xor
inc
jae
sub
cmpsb
pop
inc
xchg
mov
xchg
lea
mov
ret
and
popa
add
dec
cmp
add
ret
sub
inc
div
test
jns
push
fmuls
iret
push
mov
sti
push
sarl
pop
cmpsb
add
flds
jle
dec
repz
inc
jmp
inc
cwtl
adc
jle
pop
sarl
stos
popa
dec
push
inc
mov
mov
shrl
loopne
mov
mov
stc
int
jns
icebp
sub
push
scas
out
stos
sti
lock
mov
cmp
jo
jmp
adc
mov
mov
stc
and
clc
shl
add
ficompl
sub
mov
fadd
xor
jg
adc
lahf
dec
test
call
mov
cmpsb
xor
and
sub
and
push
stos
repz
bound
ljmp
arpl
out
loop
or
push
in
mov
push
xor
xlat
inc
xchg
xlat
xchg
push
xor
pop
jmp
pushf
subl
jns
push
mov
mov
icebp
inc
push
int
imul
pushf
mov
arpl
push
addl
mov
inc
xchg
fstps
mov
push
notl
mov
shl
imul
enter
enter
sub
xchg
subl
ja
fs
jle
hlt
cmc
adc
rorb
cmpsl
mov
pop
dec
mov
scas
push
out
xchg
cmp
push
inc
cmpsb
inc
shl
cwtl
xchg
jno
pop
fs
out
or
shl
testb
jl
bound
pop
mov
lods
and
cltd
sbb
ret
aaa
mov
out
outsl
out
inc
mov
lcall
xchg
mov
xlat
xor
lock
outsb
cmp
cmpsb
cs
sbb
xchg
lods
mov
push
jmp
mov
mov
orl
mov
pop
push
pop
or
fstps
cmp
insl
inc
ss
and
inc
cmp
and
in
cmp
dec
test
sub
push
mov
lock
les
popf
mov
sub
ret
pop
lds
adc
outsl
jbe
push
das
pop
aaa
ret
pop
jmp
mov
sub
and
fscale
mov
stos
sbb
or
and
push
jo
push
cld
das
daa
mov
lods
dec
add
fdivrp
jl
dec
ret
jmp
clc
outsl
xor
push
enter
push
pusha
negl
add
push
and
sub
mov
inc
push
fnsetpm(287
test
cmp
mov
mov
push
xor
xor
xor
adc
subb
mov
xchg
clc
in
cmp
mov
sarb
hlt
jmp
pushf
adc
push
test
xlat
cmc
adc
int
in
dec
ret
push
cmp
xor
or
cmc
or
mov
push
mov
jo
mov
inc
and
adc
and
idivb
pop
lret
scas
push
shlb
and
movsb
notl
outsb
popf
sub
xor
addr16
movsl
adcl
xchg
adc
stc
sub
pop
cmc
jbe
sbb
ffree
imul
and
cld
mov
pop
push
mov
push
jb
roll
mov
push
push
loop
sub
jnp
dec
mov
shlb
adcl
lcall
xchg
push
sbb
mov
adcb
pusha
and
push
stos
cmp
push
popl
xlat
int3
dec
hlt
push
mov
add
mov
ja
lods
push
and
push
leave
lea
push
popf
cmc
push
cld
in
repnz
rcl
lods
adc
push
aaa
scas
sub
xchg
jne
les
xchg
inc
hlt
imul
inc
mov
nop
gs
lock
adc
lods
push
or
dec
mov
xor
sbb
out
sub
popa
test
jge
mov
mov
in
sahf
jp
sbb
cmpsb
adc
jb
loop
and
fldt
jecxz
inc
aas
int
js
xchg
gs
mov
mov
aas
jns
lcall
and
sbb
sbb
jge
ret
xchg
je
cwtl
out
xor
lods
jns
clc
xchg
dec
fxtract
inc
jl
popa
fucom
int3
into
lods
mov
or
mov
dec
xchg
mov
hlt
lds
pop
inc
leave
arpl
jmp
in
add
mov
loop
and
mov
pusha
loopne
sahf
pop
daa
sub
es
rcrl
push
cmp
mov
enter
xor
orl
adc
std
mov
repnz
adc
mov
jecxz
insl
dec
fldenv
in
cmp
xor
jnp
cmp
ret
sbb
addr16
push
mov
js
rep
jg
cld
lret
mov
add
fwait
cmp
dec
mov
fsubr
sbb
aad
xchg
lret
sub
je
push
stc
mov
test
cs
xchg
dec
icebp
lcall
in
int
addr16
pop
daa
mov
nop
and
dec
lahf
lret
mov
jne
jbe
and
insb
ret
xchg
mov
rclb
movsl
inc
mov
in
ljmp
ret
jecxz
sbb
xor
daa
jne
adc
mov
push
sub
and
xchg
xor
mov
adc
sub
sbb
push
adc
and
push
jnp
push
int
push
sub
cmp
nop
pop
pop
nop
xor
pop
cs
jl
jl
xor
sbbl
mov
sbb
rcll
punpckhbw
push
fnstenv
gs
les
push
adc
in
jbe
movsb
jno
push
inc
add
mov
mov
mov
lods
bound
mov
pushf
pop
mov
inc
clc
test
aaa
sub
pushf
je
out
test
xchg
rol
or
and
mov
mov
fldl
push
sbb
push
mov
mov
out
lock
sbb
mov
mov
sbb
aaa
mov
enter
test
cwtl
xor
fwait
bound
sbb
jge
sub
and
aam
stos
hlt
call
sub
add
mov
inc
in
pusha
out
sub
fwait
mov
into
push
xor
mov
mov
scas
pop
xchg
pop
sbb
lds
ja
mov
sub
icebp
in
cmp
dec
arpl
xchg
into
adcb
inc
insb
call
cmp
jmp
sub
rclb
out
popa
xchg
pop
std
inc
pop
mov
pop
sub
xchg
pop
dec
lods
sbb
xor
mov
push
outsb
sahf
mov
add
or
scas
cli
push
jg
dec
cld
cmc
xlat
sbb
fdivl
hlt
inc
addr16
sub
popf
push
rol
addl
loopne
arpl
stos
test
fwait
icebp
cmp
or
aaa
cs
rol
mov
lret
mov
imul
mov
sub
cmp
or
inc
adc
mov
dec
xchg
sbb
fldenv
jecxz
imul
loopne
push
and
shl
pop
pop
leave
mov
mov
loope
cs
jp
cwtl
xchg
xor
lahf
lea
pop
xchg
jmp
scas
cwtl
pop
adc
and
test
roll
mov
jnp
fdivs
mov
inc
jg
or
mov
lret
inc
aam
andb
pop
fmuls
jmp
sbb
lods
add
in
adc
enter
and
pop
mov
fistpll
cmp
or
loopne
clc
shl
or
mov
stos
aam
arpl
rolb
pop
cmp
dec
arpl
rcll
ljmp
inc
mov
jbe
mov
or
pushf
mov
mov
add
stc
xlat
mov
xor
jecxz
sbb
lock
out
out
pusha
rorl
sub
popa
cld
mov
sub
out
ret
adc
bound
scas
jb
leave
insl
xor
popa
rolb
adc
push
out
pop
lock
fsub
mov
cwtl
popf
jmp
mov
push
data16
cmc
stos
mov
inc
and
push
pop
inc
int3
imulb
inc
clc
lock
mov
dec
je
in
aas
mov
nop
out
xlat
fcompl
adc
cmovae
pop
jp
and
shl
pushf
pop
mov
arpl
dec
xchg
xchg
xor
insb
into
fists
ficoms
imul
stos
xchg
mov
pop
push
call
sbb
sbb
clts
jo
popa
mov
and
or
cli
jp
and
sbb
push
addr16
sbb
je
mov
cmp
pop
insl
adc
mov
or
sti
adc
aaa
push
jmp
or
or
or
sub
rolb
push
call
mov
movsl
aad
clc
stos
xchg
pop
pusha
or
out
imulb
pop
arpl
mov
cmp
and
dec
xor
hlt
shll
xchg
dec
inc
cmpb
stc
sbb
sub
fcompl
ret
xor
or
idivl
pop
inc
rcll
ret
xchg
sub
test
repz
mov
cmp
dec
add
adc
adc
testl
addr16
pop
pushf
mov
ret
sub
shll
repz
into
scas
mov
mov
mov
add
std
cmp
mov
mov
push
xchg
das
inc
push
mov
mov
and
pop
push
push
push
and
and
sub
xchg
mov
cmpsl
add
mov
shrl
mov
jmp
jl
xchg
cmpsb
shlb
cmpsl
in
xor
add
cmp
aaa
mov
shlb
cltd
jb
inc
xchg
jmp
aas
adc
movsb
sbb
xchg
xchg
fs
cltd
arpl
scas
jg
mov
shll
scas
rcrl
call
popa
jns
dec
xchg
cmp
push
int
insb
adc
push
xchg
push
or
xchg
leave
xchg
jno
fadds
into
sub
sub
inc
sub
xchg
das
push
std
xchg
scas
mov
pop
and
push
into
xchg
into
push
cltd
add
pop
adc
cltd
fcmovbe
adc
add
out
fadds
pop
mov
push
or
pop
into
fldenv
fdivs
movsb
lods
mov
xchg
stos
dec
into
dec
or
xchg
xor
push
and
dec
mov
clc
sub
lods
enter
popa
lock
jbe
push
sbb
outsl
or
push
xchg
mov
jno
mov
mulb
lds
jg
cmp
test
lea
xor
mov
cmp
adc
into
dec
xor
test
xchg
inc
test
lcall
xor
out
mov
push
sahf
imul
adc
cs
pop
insl
or
loope
emms
sub
adc
xor
inc
or
pushf
imul
addr16
and
push
cwtl
daa
fcomip
add
das
mov
mov
inc
mov
in
bound
xorl
outsb
sub
out
cmp
ds
mov
imul
mov
sub
push
jo
inc
adc
test
mov
data16
out
dec
in
dec
jp,pt
adc
push
pop
xchg
mov
arpl
cltd
push
mov
mov
insl
sahf
sbb
cmp
js
lcall
adc
push
shrb
stos
mov
sub
movsb
rcll
aaa
nop
into
dec
add
cmp
flds
add
stos
pop
fstl
loopne
inc
jne
lods
push
lods
dec
scas
sahf
das
mov
lret
or
pop
cmp
test
or
push
sti
out
leave
fmuls
gs
repnz
cwtl
rcrl
xor
sbb
imull
xor
cld
testl
test
repnz
ret
inc
mov
ret
add
inc
ds
and
pop
inc
dec
lods
or
inc
adc
push
sbb
js
cmpsl
popa
jmp
and
scas
push
lds
push
sbb
or
lea
adc
xchg
or
push
adc
mov
das
cmp
xchg
gs
lods
lds
insl
dec
fmulp
sbb
mov
mov
int
adc
cmp
cwtl
mov
jae
mov
fcomps
pop
insb
hlt
and
pop
inc
in
jbe
rorb
ljmp
popa
or
popf
xchg
pop
pop
push
cmp
es
ret
ret
sub
nop
out
mov
adc
mov
pop
ror
cltd
cs
xor
les
ret
fsts
fldenv
or
test
and
push
rclb
sar
add
jnp
mov
xor
jp
test
int
inc
xor
push
pop
mov
cld
repz
lock
leave
ret
pop
push
mov
sahf
xor
aas
movl
sub
lahf
cmp
mov
pop
push
mov
int3
loopne
inc
out
inc
fimull
push
sbb
mul
adc
mov
mov
into
cltd
pop
cld
popa
sub
jp
xor
or
pop
or
repz
xor
and
sahf
popf
leave
jae
inc
icebp
cmp
cmp
out
add
pusha
cs
andb
and
inc
xor
inc
daa
jne
dec
push
dec
mov
fcompl
cmp
mov
out
ss
mov
jge
xchg
cmp
rcll
add
sahf
xchg
adc
push
xchg
leave
fldcw
xchg
mov
ret
or
cmp
cmpsl
adc
jnp
add
ss
lcall
js
jnp
lods
fcmovnu
int3
push
xchg
data16
loope
insl
scas
mov
movsl
sbb
jmp
xor
dec
push
imul
dec
inc
popa
loop
fimull
and
dec
inc
inc
mov
jp
xchg
adc
inc
mov
jb
push
or
mov
arpl
out
push
cmp
int
movsl
jl
and
push
mov
dec
push
inc
jl
mov
pop
push
xchg
jmp
faddl
mov
pcmpgtb
sbb
daa
subb
clc
and
push
inc
fldt
adc
or
cli
ret
sahf
cmp
lock
lds
xor
test
mov
pop
pop
jl
fwait
cmp
or
mov
mov
xor
mov
movsl
sbbb
xor
cwtl
jno
sub
aas
outsl
inc
aad
push
dec
popfw
jae
adc
dec
ljmp
jbe
pop
xchg
push
push
dec
int3
sbb
push
rol
push
or
mov
xchg
add
adc
je
les
dec
xchg
pop
leave
scas
xchg
mov
data16
xor
ret
jge
jecxz
push
cmovge
xor
or
mov
inc
cs
xor
out
mov
movsl
add
mov
sbb
mov
das
stos
mov
rolb
testb
dec
rorb
lahf
ja
cmp
adc
ja
mov
push
fistpll
push
xchg
mov
insb
or
fwait
lcall
jp
insb
decl
mov
dec
out
push
imul
leave
sub
cli
xor
fimuls
in
mov
int3
lret
sub
push
in
cwtl
sbb
inc
das
xor
mov
nop
stos
xor
jno
xor
sub
xor
sub
hlt
shll
out
cmpsb
lds
xor
out
test
xchg
xor
movsl
imul
test
xchg
adc
adc
mov
leave
inc
aam
sub
xchg
mov
inc
mov
and
imul
add
je
lahf
icebp
inc
and
mov
out
inc
adc
sbb
jb
inc
cmp
or
xchg
xor
repnz
push
out
lods
lcall
dec
les
push
nop
out
cmp
xchg
hlt
fisubrs
xor
lods
pop
test
pop
mov
pushf
push
push
ret
inc
hlt
je
enter
ret
inc
mov
pop
jg,pn
jp
pop
gs
jae
je
and
or
add
loope
es
cmp
mov
sbb
jae
cmpsl
in
movsl
xor
hlt
nop
shll
push
jno
xrelease
cmp
mov
pop
dec
lret
add
lods
sub
jmp
mov
mov
pop
aad
lahf
xor
xchg
loope
xchg
jmp
loopne
out
nop
dec
mov
das
inc
fbstp
push
addb
jb
mov
andl
cld
invd
out
xchg
or
xor
repnz
and
dec
dec
push
mov
cli
sti
or
dec
les
adcl
jge
fmuls
mov
push
sbb
and
loopne
pop
int3
lea
daa
dec
sbb
enter
add
call
cwtl
addb
dec
je
sub
jnp
daa
cmp
and
xlat
lret
mov
stos
or
xor
out
jp
jle
jne
mov
and
xchg
mov
pushf
mov
ja
pop
movsl
in
scas
loope
or
repz
cmp
push
lods
push
call
xlat
outsl
mov
jns
cmp
sub
repz
loope
test
pop
cmc
sub
mov
xor
push
and
jmp
mov
je
iret
rcll
mov
mov
and
iret
jae
outsl
mov
mov
pop
sarl
jle
scas
imul
sub
notl
cld
push
inc
jno
mov
out
adc
orl
daa
cmp
pop
xorb
add
push
xchg
into
sub
inc
aam
clc
mov
jmp
cmc
push
shrb
xchg
bound
stc
adc
call
cmp
push
out
jne
jno
add
sub
cmp
sub
pop
pop
insb
dec
in
aad
push
cs
xor
stos
in
jb
cmp
hlt
xor
xor
cmp
testl
add
adc
mov
mov
or
sbb
or
mov
jb
xchg
push
jp
dec
or
and
in
pop
mov
sbb
dec
stc
mov
mov
stos
shl
cli
dec
or
aam
xor
adc
aaa
and
jnp
sub
add
out
icebp
or
sbb
js
jns,pn
bound
bound
pcmpgtd
adc
cmp
pop
and
pusha
and
idivb
test
std
in
fadds
or
and
sbb
sub
mov
repz
xchg
mov
cmp
push
mov
and
and
cli
inc
mulb
imul
mov
gs
dec
lret
mov
rcrl
pop
cmp
dec
pop
aad
xchg
cmp
push
add
fisubl
ret
adc
push
pop
and
sub
xchg
dec
jmp
push
sub
stos
nop
and
adc
mov
in
mov
or
jnp
and
dec
sub
arpl
std
sub
cmp
pop
push
stc
cmp
mov
je,pt
pusha
sub
inc
mov
imul
mov
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
push
dec
lret
mov
shll
jmp
bound
cmpsl
cwtl
fstl
or
subb
movb
pop
or
sbb
xchg
aam
sarb
mov
minps
cmp
sub
aas
mov
in
dec
aam
test
lods
iret
push
icebp
test
sub
mov
jecxz,pt
scas
mov
jnp
inc
add
out
js
cli
cmpsb
adc
je
lods
lcall
jl
sbb
dec
jecxz
xor
add
pop
push
fsub
hlt
xchg
mov
cmp
jmp
jnp
or
mov
or
mov
sub
das
adc
cmp
gs
fadds
mov
rcl
ret
xor
ret
fsubp
jge
xchg
jmp
push
mov
xor
sti
sti
shl
pop
push
test
xchg
jle
call
inc
cs
push
addb
mov
mov
push
cmpsb
xor
add
lahf
ret
es
stos
jmp
jle
cld
popf
sbb
cwtl
mov
fs
jne
xlat
sar
int
add
jae
ror
sarl
mov
mov
cmp
bound
das
sub
xchg
fcmovb
stos
dec
xchg
outsb
fbstp
mov
out
scas
xor
ret
cmp
push
inc
push
sbb
sub
sti
fistpl
ficompl
sahf
in
inc
push
loopne
xor
stos
data16
mov
push
ja
das
outsb
cli
test
push
xchg
mov
inc
and
mov
xor
sub
es
inc
cmp
cmp
push
push
push
pop
xor
lods
push
mov
test
push
push
xor
push
mov
fxtract
mov
jns
push
cs
xor
cmp
mov
and
push
inc
mov
or
pop
inc
push
push
mov
xchg
jns
sub
adc
cmc
pop
arpl
xor
popa
sbb
push
pop
cltd
in
add
decl
mov
xor
mov
cmp
int3
jns
or
pop
and
xor
push
outsl
push
repz
jle
sub
pop
jg
adc
jl
pushf
call
dec
leave
enter
fstpt
mov
sbb
mov
adc
add
andl
and
cltd
orl
fstps
div
jns
or
fcomps
and
xchg
pop
or
decl
pushl
cmpsb
lods
int
mull
push
xor
loopne
push
xchg
pop
mov
xchg
lret
scas
dec
aaa
dec
sti
push
inc
jno
and
or
leave
aam
sarb
jns
sbb
jnp
jmp
popf
jecxz
cmovp
xchg
inc
xchg
stc
cltd
cwtl
gs
xchg
call
adc
frstor
sub
mov
or
lcall
sub
dec
push
pop
test
cmp
in
mov
mov
mov
rcrb
push
arpl
pop
ljmp
addb
jne
int3
push
pop
dec
dec
fiaddl
call
and
icebp
les
sbb
or
xchg
xchg
movsl
in
xchg
sbb
jns
sbb
push
cwtl
sub
add
add
fcoms
cs
jae
mov
mov
inc
lock
push
incb
inc
push
sbbb
addl
cmc
sub
inc
and
mov
jo
cwtl
andl
mov
gs
in
in
test
push
or
lds
enter
mov
dec
repnz
cmpl
push
lock
cmp
scas
mov
push
pop
cmp
pop
push
or
pop
sub
sub
fidivrs
pusha
shlb
xchg
iret
jle
scas
sbb
fisubrs
out
xchg
jg
lahf
mov
or
cli
movsl
sti
and
xchg
mov
int3
xchg
sbb
xchg
outsb
add
cmp
insl
xchg
sar
bound
enter
sub
nop
mov
jp
cld
inc
jge
sub
cmp
je
ficomps
cmp
mov
fcmovnu
push
mov
mov
je
aam
call
sahf
fildl
jl
and
lds
push
rcr
shr
xchg
cmpsb
loope
or
int
imul
jg
pop
das
add
les
jecxz
ds
mov
test
sub
popl
jns
and
movsl
cmp
xor
dec
sub
call
aad
lea
or
scas
or
mov
jge
cwtl
test
inc
pop
sub
in
or
icebp
mov
xor
inc
or
sub
mov
mov
pop
rcl
and
mov
cmp
test
fstps
das
repz
push
mov
or
mov
les
pusha
loop
mov
das
out
cmp
cmpsb
and
cltd
cld
data16
dec
mov
jno
std
ja
je
loopne
and
mulb
or
pop
add
aaa
mov
lods
jmp
jns
mov
add
cwtl
jb
add
vpcmpeqb
cltd
std
idivl
aam
push
and
lock
jno
xchg
jle
xchg
push
and
jae
jle
cmp
repz
sub
adc
cs
leave
push
dec
jmp
mov
mov
popf
xlat
in
insb
orl
int
mov
and
push
int3
mov
mov
mov
stos
xchg
push
and
pop
imul
sti
add
sub
jge
loope
std
add
fsubrl
shrb
imull
pop
mov
mov
loopne
lret
fisubs
lods
pop
jbe
push
hlt
jne
insl
jnp
add
sbb
rcll
pushf
ljmp
loope
pop
and
mov
test
fiadds
add
pop
addb
test
inc
push
repnz
in
js
repnz
negb
sbb
push
mov
push
push
inc
lods
dec
fistps
mov
jg
xor
andl
sahf
push
popa
mov
xor
lret
pop
xor
insl
out
pushf
jae
call
subl
popf
jb
adc
push
dec
inc
push
inc
imul
cmp
aam
mov
dec
sub
sbb
int3
sub
adc
push
rorl
out
lcall
ret
add
dec
or
mov
and
xor
sub
cmp
mov
cli
mov
xchg
and
xchg
inc
pusha
jns
repnz
hlt
jnp,pn
ss
test
hlt
fcomp
ljmp
loop
mov
xchg
dec
adc
add
mov
enter
jmp
lds
xor
pop
push
mov
jmp
leave
and
jnp
mov
enter
movsb
sbb
add
jno
push
fsubrl
xor
insb
pop
jo
or
cmp
and
push
shll
lret
in
and
daa
push
add
in
imul
adc
xor
js
xor
les
pushf
std
xlat
dec
mov
mov
out
subb
add
jne
cmpsl
mov
pop
insl
imul
inc
dec
sbb
repnz
gs
repnz
out
call
pusha
xor
cld
pop
dec
divl
dec
push
jne
or
inc
sahf
jle
or
mov
inc
cmp
jle
xchg
nopl
shll
adc
sub
int3
std
mov
in
lods
adc
sub
mov
or
add
adc
je
les
loopne
mov
push
pushf
xchg
xor
rol
ds
jg
or
in
dec
add
jge
pop
jno
out
sbb
pop
aas
out
add
aam
fwait
testb
jns
jnp
movsl
inc
push
dec
lock
and
lahf
pop
mov
movsb
xlat
or
xor
stc
pop
xchg
repz
lea
pop
aam
jle
cmp
popf
mov
repz
jle
sti
mov
and
or
adc
add
mov
dec
mov
add
mov
inc
inc
loopne
jmp
inc
pushf
arpl
jecxz
adc
mov
xlat
add
jbe
rcrb
movsl
xchg
mov
mov
xor
fiadds
movsl
cmpsb
pop
ds
sti
nop
xor
cmp
in
call
ss
pop
push
not
jl
or
xor
fiaddl
into
jnp
cmp
gs
hlt
fnsave
mov
cmp
addr16
fnsave
inc
mov
ret
push
mov
sbbl
pushf
ja
dec
adc
fsubr
mov
pop
add
test
jmp
xchg
cmp
add
je
loopne
add
data16
imul
loopne
mov
shlb
outsl
mov
pop
ret
mov
push
add
dec
testl
dec
aad
pop
inc
dec
sarb
das
enter
stc
lret
loope
aaa
out
in
popf
adc
lcall
cmpsl
xchg
add
hlt
push
mov
icebp
add
dec
bound
test
dec
outsb
out
packsswb
jmp
sbb
movsl
push
roll
in
aaa
loope
movsb
and
sbb
out
sub
pop
xchg
xlat
repz
pop
xor
test
stos
std
push
mov
inc
xchg
shll
dec
inc
jge
lea
mov
aad
dec
shrl
test
inc
scas
test
in
dec
in
jno
xchg
push
imul
stos
sub
cltd
mov
loopne
cltd
rolb
out
pop
std
jecxz
mov
loop
jnp
or
xor
inc
mov
inc
pop
push
push
pop
es
push
scas
and
xchg
push
sub
adc
xchg
sbb
out
add
andl
push
push
notl
xor
jbe
mov
enter
movsb
sbb
cli
imulb
mov
adc
and
pop
inc
and
sbb
roll
sarl
cmp
xchg
or
nop
pop
gs
fsts
rol
sbbl
jae
lret
dec
pop
into
xchg
pop
shll
cmpsb
jmp
pop
xchg
sti
ja
out
push
popa
inc
rcll
ret
push
dec
dec
dec
lret
jmp
pop
add
xor
sbb
pop
lods
stos
dec
lods
shrb
gs
cmp
outsb
les
std
mov
shl
jecxz
shr
pusha
lret
cld
sub
popf
inc
xor
cmpsl
dec
addr16
cmp
mov
lahf
push
jecxz
dec
mov
mov
mov
loopne
roll
fs
push
sti
dec
stos
cmp
sub
dec
mulb
push
outsb
mov
scas
add
pop
test
negl
mov
inc
jo
push
jno
movsb
xchg
cld
dec
xchg
ret
cmpsb
icebp
lock
pop
pop
cmp
call
int
insl
and
mov
aam
push
loope
pop
aas
icebp
insb
lods
scas
pop
outsl
push
push
pop
mov
push
mov
sub
mov
or
add
ss
stos
sbb
lret
sahf
das
scas
jns
mov
data16
imulb
dec
xchg
jne
push
les
sub
in
repnz
rcr
and
rol
cmp
cmp
fdivl
pop
jmp
sbb
pop
call
lret
dec
pop
lret
in
mov
jnp
aaa
es
mov
inc
ret
or
andl
ss
add
clc
and
jb
call
adc
sub
xor
jbe
fs
push
in
sbb
es
andb
xchg
jl
jl
mov
out
enter
int
mov
outsb
jb
add
outsb
xor
sub
jg
loopne
mov
inc
test
sub
shrl
loopne
inc
out
mov
in
fsubr
inc
mov
and
dec
xor
jg
pop
aaa
sbb
mov
loopne
insb
or
or
jb
int3
iret
mov
push
popa
mov
xor
xchg
jnp
inc
inc
adc
cld
dec
mov
xchg
push
or
adc
add
push
cmpsl
mov
xchg
call
sbb
cmc
repz
mov
sbb
sbb
sbb
adc
int3
cmp
cltd
orb
push
or
jle
out
lcall
cs
jl
mov
jg
mull
xchg
outsl
mov
push
hlt
mov
negb
std
cmpsl
inc
sti
fdiv
cmp
push
xor
fsts
rcll
das
in
xor
xlat
repnz
or
sub
mov
pop
fstpt
pop
sub
aad
jg
sub
in
out
subb
sub
dec
lahf
jno
cmp
pop
leave
sub
jl
arpl
dec
dec
out
cmp
mov
jae
xchg
lret
lcall
leave
mov
cltd
cmp
scas
nop
pop
hlt
test
rcrl
jl
repnz
lret
mov
inc
stos
jo
inc
inc
adc
inc
ftst
cmc
pop
shll
dec
fmuls
imul
mov
inc
or
and
out
into
aad
inc
xor
adc
and
daa
aas
cmp
push
imul
cmp
cs
loope
leave
imul
mov
scas
sahf
test
xchg
mov
das
movsl
pop
pop
and
jl
xor
decb
stc
add
pop
test
stos
rol
or
fs
pop
mov
jno
fnstcw
aaa
aam
and
cmp
sub
shl
pop
int
or
outsl
mov
jp
pop
icebp
test
xlat
adc
sub
sub
out
das
subb
rolb
xchg
pop
inc
loop
std
orb
pop
popf
mov
xor
pop
push
pop
cld
inc
imul
push
cmp
pop
pop
mov
mov
mov
ret
push
adc
ljmp
ljmp
js
sub
add
cmp
mov
loope
scas
sub
push
or
enter
lcall
xor
int3
fwait
daa
addr16
imul
fmull
ret
in
mov
mov
sbb
sti
psrlq
push
dec
jg
nop
loope
jne
insb
popf
mov
cmc
data16
loop
inc
xor
dec
ds
js
leave
mov
outsl
mov
adc
and
testb
jl
fmuls
add
add
jbe
lds
or
mov
repz
inc
jns
popf
daa
adc
xchg
clc
in
shrl
lock
jg
nop
sbb
aad
adc
jo
lods
cmpsb
push
and
call
mov
or
add
imul
pop
mov
aas
mov
mov
sbb
in
into
or
mov
mov
mov
mov
mov
pop
lds
sbb
clc
cmp
jbe
out
in
shrl
mov
arpl
lcall
arpl
adc
daa
cmpsb
popf
xchg
pop
inc
push
cs
scas
add
mov
mov
aaa
arpl
xchg
mov
out
dec
aas
xchg
mov
xor
sbb
or
into
pop
sarl
jg
push
movsl
cmp
lahf
les
jae
cmp
pop
icebp
roll
cmp
or
lods
cltd
cld
add
popa
out
push
add
mov
and
mov
out
lds
daa
mov
aas
pop
cmp
cwtl
pop
xor
pop
mov
fbld
scas
sub
xor
push
aam
test
fidivl
ljmp
ljmp
and
inc
dec
rol
loop
or
loopne
test
into
xchg
lahf
jno
dec
mov
xchg
loop
pop
xchg
pusha
vunpckhps
jb
cmp
xchg
hlt
cld
dec
push
mov
shl
or
je
mov
scas
movhps
pop
xchg
adcb
push
mov
adc
cmpsl
adc
movsb
inc
jbe
jbe
in
adcl
xor
cmp
mov
cmp
lcall
arpl
inc
sbb
cmp
aad
pushf
out
dec
jge,pn
or
mov
pop
imul
dec
ds
cmp
loope
jno
pusha
imul
and
lods
add
imul
or
fs
fwait
or
jnp
pop
shll
pop
and
mov
sub
popa
ficomps
stos
xor
subl
jg
imul
lds
add
sub
inc
clc
dec
inc
jg
les
mov
push
fidivrs
lds
std
mov
leave
add
in
and
fs
push
aad
mov
int3
test
frstor
sahf
pop
lcall
sbb
sti
ljmp
out
pop
out
out
sub
sub
cmp
jp
xchg
cld
jae
jl
imul
xchg
push
test
mov
leave
xchg
xchg
xor
adc
out
pop
pop
mov
push
mov
lea
bound
adc
and
dec
jmp
fisttpll
test
mov
roll
and
xorb
cs
int3
sub
loopne
nop
adc
cwtl
test
sub
xchg
dec
imul
mov
arpl
xor
outsb
xor
cld
pop
pop
jbe
ret
adc
push
pop
pop
or
idivl
scas
mov
fdivr
or
lea
mov
sub
incl
cmp
cltd
mov
mov
and
xchg
inc
data16
push
mov
ja
xchg
or
pop
fdivl
shl
stos
dec
aad
pop
inc
sbb
or
pop
int3
mov
shr
add
jp
addr16
shrl
mov
loopne
fildl
inc
sub
movsb
pop
or
roll
icebp
arpl
or
pop
les
jge
mov
rep
mov
negb
stc
mov
arpl
call
ret
pop
fdivl
dec
push
and
pop
lods
ss
push
inc
and
sbb
cmp
dec
pop
mov
popf
dec
inc
jne
lcall
push
cmp
sarb
mov
rolb
and
in
dec
push
add
pcmpgtb
sub
mov
into
cmp
sbb
jb
addps
xchg
pop
pop
sarl
loope
pop
lods
aas
mov
adc
pop
fs
pusha
and
outsl
fsubl
mov
sbb
mov
push
add
mov
push
repz
das
repnz
jl
mov
fs
sbb
sub
pop
nop
xchg
das
xchg
mov
decl
mov
mov
sahf
pushf
insl
sbb
and
xor
or
pop
mov
and
jne
testl
fcoms
push
cs
pop
arpl
fistps
or
inc
js
daa
dec
bound
sahf
mov
mov
pop
roll
pop
loopne
scas
outsb
pop
add
add
mov
popa
push
imulb
push
icebp
test
mov
pop
ja
and
fstpl
call
mov
loopne
cltd
and
mov
mov
pop
repz
add
insl
insb
jae
outsl
pop
mov
inc
cld
sti
pushf
out
arpl
mov
js
shrl
adc
pop
and
or
pop
into
jae
mov
cmc
pop
xor
test
fimuls
js
out
and
nop
int
pop
dec
icebp
push
mov
mov
push
jecxz
inc
dec
jb
and
fidivrs
icebp
mov
rcrb
sbb
dec
jo
mov
jbe
mov
sbb
mov
inc
fwait
add
fdivs
xchg
psubq
xlat
jno
push
and
subl
lea
adcl
iret
inc
or
pop
test
cmp
addr16
ret
adc
stos
sub
aas
dec
out
lea
xor
adc
or
push
lret
scas
loope
ret
pop
lcall
jns
push
movsl
orl
push
xchg
cmp
xchg
cmp
pop
fisubrl
in
xor
mov
aad
movsb
mov
call
cmp
pop
xchg
inc
adc
ficompl
fistps
inc
cmp
movsl
fwait
push
je
inc
pop
pop
lea
ja
fidivs
pop
cmp
inc
push
push
stos
push
lret
dec
loopne
inc
mov
stc
xchg
cltd
leave
popf
loop
adc
pop
mov
inc
pop
push
jl
call
into
jnp
fxam
test
push
lds
in
sub
and
jp
stos
andl
popf
pushf
imul
test
mov
int3
lcall
fisttpll
mov
mov
jbe
pop
fidivrl
jo
xor
pop
lret
cmp
pop
shrl
jg
push
pop
pushf
call
push
cmp
cmp
jbe
ds
cmp
lods
ffree
cs
inc
sbb
xchg
add
mov
dec
xor
mov
dec
dec
stos
or
lret
addr16
or
sbb
lret
push
mov
jne
add
jno,pt
lea
fidivrl
adc
dec
jg
addr16
imul
mov
jno
stos
and
cli
out
lcall
adc
mov
mov
stc
cmp
push
arpl
sti
lods
leave
cli
mov
jecxz
rcrl
jo
push
sub
mov
inc
or
mov
pop
scas
push
mov
shl
mov
sub
jno
cli
or
dec
sbb
fstps
into
jecxz
jp
sub
cmp
adc
xor
mov
pusha
popf
inc
add
test
dec
notl
ret
mov
iret
pop
xor
test
movsl
aas
jl
add
rclb
xchg
das
test
stc
in
mov
lock
mov
xor
xor
jg
lret
mov
ret
push
mov
jecxz
cmc
std
das
or
jns
jo
fsubl
sub
sub
sahf
sbb
adc
and
jmp
les
roll
movsl
outsl
sbb
mov
pop
jae
jne
aaa
repnz
mov
sbb
pop
mov
mov
mov
mov
mov
mov
inc
pop
pushf
fnstcw
bts
xor
xor
cmp
jae
pusha
mov
sbb
adc
inc
outsl
fcmovb
enter
popl
test
sbbl
shll
shr
adc
hlt
stos
pop
mov
push
mov
dec
xor
cmpsb
sub
ret
scas
mov
outsl
push
mov
push
nop
inc
lea
lret
andb
push
inc
push
lods
sbb
mov
cmp
sbb
ss
mov
sub
data16
mov
daa
xorl
orl
test
mov
inc
ret
dec
dec
sbb
rcll
xchg
cmp
popa
pop
push
jno
incl
mov
mov
neg
incb
push
test
dec
out
xlat
arpl
pop
cmp
mov
or
ds
add
lret
popa
xchg
pushf
jmp
imul
in
pop
sub
or
fldl
mov
mov
mov
jle
pop
sahf
dec
push
inc
jnp
inc
lock
iret
mov
xchg
push
add
lock
mov
das
mov
out
jg
xchg
adc
mov
movl
std
sti
mov
jmp
shl
fwait
test
int3
gs
cmp
push
hlt
test
ja
lcall
mov
mov
jp
pushf
cmp
mov
or
cmpl
adcl
dec
daa
test
sbb
aaa
dec
inc
mov
mov
fnstenv
aad
inc
jle
test
daa
pop
loopne
xor
fs
lahf
pop
sbb
push
mov
xor
popl
or
out
aad
insl
add
push
inc
movsb
jp
jbe
fdiv
adc
mov
xchg
movsb
or
sub
xor
fidivrs
lods
inc
sbb
dec
test
mov
push
pusha
push
mov
inc
pop
ficoms
jg
scas
in
into
fcmovnu
pop
push
fwait
mulb
insl
test
sub
or
add
clc
int
movsb
clc
pop
and
negl
rorl
in
shl
sub
cld
lcall
in
adc
sbb
push
loop
adc
mov
loopne
aas
pop
pop
stos
ljmp
mov
or
inc
cmp
out
jae
arpl
gs
mov
shrl
andb
lock
and
cmp
add
out
jp
ret
cltd
mov
rclb
shll
mov
pop
pop
imul
cmp
cmp
scas
push
push
ret
inc
add
mov
sub
gs
mov
inc
jmp
adc
jns
out
rcll
icebp
mul
push
gs
mov
add
pop
cmp
out
shrb
push
xchg
and
push
push
sub
adc
sbb
lcall
idivb
in
sahf
xchg
jbe
or
and
add
and
insl
in
add
mov
or
in
lret
ret
mov
pushf
lret
cmp
std
lea
je
notl
add
push
inc
sbb
scas
in
shlb
add
popf
daa
add
push
sub
inc
sbb
add
mov
fs
orl
jae
popa
mov
mov
mov
js
lods
popa
fs
ss
ss
mov
out
aaa
popf
inc
sbbb
inc
push
fsts
call
std
and
xchg
jo
pop
push
pop
nop
jecxz
push
icebp
inc
push
add
pusha
sbb
cmp
out
sbb
fwait
add
or
ja
clc
test
cmp
popl
mov
dec
pop
push
call
or
jo
push
iret
xor
or
dec
mov
lea
subl
vmread
aad
daa
insb
insl
jbe
outsl
cmp
pop
cmc
mov
cmp
lret
int3
loopne
sub
jl
mov
lret
mov
pop
and
xchg
cmp
daa
or
nop
test
or
inc
dec
mov
jnp
ret
xchg
pop
inc
nop
sbb
inc
add
jp
mov
dec
jae
lds
mov
mov
jno
sbb
sahf
es
push
mov
daa
sbb
ss
cmp
enter
jb
daa
push
popf
lds
ds
or
cmp
aaa
push
call
lcall
mov
cs
pop
pop
xchg
negb
rcll
call
inc
pop
loope
mov
pop
dec
jo
imul
push
int3
xchg
mov
daa
mov
arpl
mov
adc
pop
xchg
outsb
sub
jno
inc
in
xchg
cmp
not
data16
or
repz
push
icebp
inc
std
and
xchg
add
fbld
out
sbb
lret
inc
lods
push
mov
cltd
cmpsl
dec
scas
mov
inc
movsl
fwait
or
fisttpl
fadds
jle
loopne
push
add
shlb
rep
test
je
cmp
fistl
insl
add
and
add
test
enter
mov
hlt
test
dec
mov
cmp
inc
not
cwtl
jge
inc
mov
adc
in
lods
mov
pop
cmp
int3
shrl
sahf
jns
mov
iret
in
inc
xchg
xchg
xor
cmp
loope
mov
andb
jo
cmp
xchg
or
push
or
jo
aad
cld
add
add
inc
pop
sbb
stos
in
out
shrb
xchg
cmp
ret
test
stc
aaa
movsb
dec
mov
imul
out
add
jno
aaa
aam
sahf
push
scas
and
push
adc
pop
shll
sti
cmp
cmp
mov
push
out
bound
sahf
out
pusha
test
fnsave
test
std
xchg
in
mov
cmp
jp
xor
pop
cmc
sub
xchg
push
iret
dec
fisubl
lods
test
pop
sub
and
sub
imul
jns
in
movsl
xchg
mov
pop
dec
loop
mov
lods
dec
lock
addl
inc
lcall
sub
cmp
movsl
inc
xchg
inc
cs
inc
mov
xor
and
push
bnd
and
xchg
ljmp
inc
cwtl
loope
out
xor
pop
rcr
mov
mov
or
ds
mov
mov
out
mov
shl
cmp
xor
jecxz
lods
int
notb
addl
gs
in
loopne
in
pop
cmp
lea
dec
mov
xchg
jns
adc
adc
xor
sbb
insb
subb
mov
movsl
xlat
push
cmp
adcb
lahf
adc
push
leave
pop
add
cmp
insb
mov
jbe
rorb
hlt
xchg
popf
popa
lea
mov
shrb
pop
adc
jmp
sahf
imul
push
and
mov
cmp
int3
insb
arpl
fs
addr16
push
cmp
mov
jp
mov
ficompl
sub
nop
fwait
adc
mov
mov
and
int
dec
loop
fcom
inc
sbb
sbb
jno
mov
pop
in
pop
test
jecxz
and
lea
mov
or
adc
mov
movsl
jl
je
mov
adc
das
leave
push
fst
pop
xor
hlt
dec
popa
bound
sub
aaa
or
sub
and
adc
xchg
shl
sub
mov
popf
mov
mov
movsb
cmp
movsl
ror
fs
les
shll
dec
sbb
mov
sbb
mov
insb
aas
and
cmc
div
dec
xchg
mov
cmp
int3
shlb
cs
inc
imul
out
push
mov
cmc
mov
pop
repnz
leave
out
pop
xchg
push
cmp
inc
fwait
sbb
sarb
push
jnp
in
dec
popf
or
testl
popl
out
jmp
jl
shlw
sbb
pop
es
lret
popf
in
lcall
shrl
inc
stos
mov
scas
push
lds
fidivs
clc
enter
mov
mov
fwait
dec
or
pop
fldcw
idivl
push
push
sbb
adcl
lea
push
mov
xchg
mov
mov
mov
dec
aam
jno
cmp
pop
cmp
imul
fs
andb
fmuls
ret
mov
jecxz
aam
or
psubusb
cltd
nop
and
js
ret
mov
xor
nop
pop
inc
xchg
stos
cmpsl
hlt
insb
cmp
cmp
insb
jae
push
test
push
movl
dec
pusha
outsl
jmp
add
pop
imulb
sub
inc
movsb
fnstcw
inc
aas
xlat
stc
mov
jge
sub
stos
sbb
sti
loop
push
mov
jae
scas
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
add
mov
dec
lea
jmp
bound
test
insl
or
shll
cmc
femms
jg
pop
and
fsubs
lcall
mov
ss
iret
xchg
jg
dec
rcr
je
cmp
and
jnp
mov
lock
xor
xor
insl
cltd
push
jae
pop
test
negl
in
jb
cmp
das
sti
pop
shl
out
ficomps
jne
leave
je
cld
inc
mov
arpl
mov
jl,pn
mov
push
fistpll
ret
test
jg
icebp
loopne
adc
xchg
fsubr
fucom
fstps
bound
mov
sub
add
jp
aad
aas
cmpsl
push
cmp
xor
dec
out
roll
pop
push
cld
push
jne
push
cli
mov
stos
loope
std
sbb
or
scas
test
mov
add
aad
jmp
or
cmp
adc
loopne
dec
stc
pushf
cmp
addb
imul
pop
mov
divps
in
leave
negl
dec
data16
insl
in
inc
shll
sub
call
roll
mov
subb
bound
xchg
sub
lahf
adc
cli
addr16
jg
out
mov
movsl
or
in
add
pop
dec
xor
dec
ds
dec
pop
xchg
adc
sar
add
loop
push
xor
pop
sub
fsubs
jne
inc
mov
in
stc
fldl
xor
aam
dec
cmp
cmpsl
setb
mov
es
mov
ljmp
in
mov
insb
arpl
cmp
mov
into
fsubrp
pop
addr16
push
js
jb
repnz
pushf
jb
mov
int
enter
ret
push
inc
js
dec
mov
stc
and
hlt
popa
fs
push
in
pop
add
mov
mov
out
mov
cmc
mov
or
lahf
xchg
test
jge
test
xor
xchg
push
cs
test
inc
mov
roll
dec
movb
and
daa
jb
mov
jge
rcrl
or
sbb
test
push
mov
lods
cli
add
scas
dec
test
popf
and
shll
add
ds
mov
push
fs
lock
adc
pop
inc
imul
pusha
shrb
adc
lahf
scas
mov
push
adc
pushf
mov
push
scas
enter
lret
icebp
adc
or
jno
add
out
imul
call
cmpsb
adc
mov
mov
or
clc
cmpsb
outsl
and
fs
sti
or
push
mov
lcall
mov
fists
xchg
push
xor
push
or
push
in
ret
xlat
cmpsl
in
cltd
inc
shlb
mov
outsl
and
cmp
xchg
push
add
or
xchg
adc
dec
loope
arpl
notb
add
mov
inc
pop
xchg
call
sub
jmp
cmp
push
push
push
sbb
pop
repz
jne
push
inc
das
adc
dec
stc
scas
or
sti
pop
inc
bound
jno
sub
sub
and
fists
int
add
dec
bound
adcb
stos
mov
subl
mov
adc
push
push
mov
lret
adc
xchg
jge
lcall
cltd
testl
inc
and
repnz
push
dec
dec
loope
faddl
sub
nop
out
scas
lods
pop
adc
fstpl
out
push
pop
push
xchg
data16
xchg
imul
hlt
push
jb
xlat
sbb
int
scas
push
sti
cmp
daa
les
fldcw
jge
insl
test
cmp
dec
loopne
pop
in
adc
fidivl
pop
cmp
test
fnstenv
repnz
mov
push
test
pop
sub
jns
lea
lret
std
mov
add
and
mov
das
mov
fcomps
stc
inc
lahf
leave
inc
jns
cmpsl
cmp
inc
mov
xor
cmpb
mov
fidivrl
repnz
addr16
adc
outsl
cmp
adc
xchg
out
dec
sbb
ret
sbb
ja
and
sbb
addl
outsb
fs
mov
fldenv
sub
icebp
inc
and
mov
stos
mov
ret
jg
jnp
stos
aas
adc
dec
cli
xor
popf
scas
mov
dec
fnsave
cmp
pop
das
fwait
aas
faddl
insb
inc
cli
sbb
and
es
xchg
inc
fwait
leave
sub
dec
mov
xchg
cmovs
jmp
inc
xor
sbb
dec
push
jb
repz
lcall
rol
mov
mov
ret
cmp
add
add
imul
and
sti
push
out
sbb
push
adc
push
icebp
xchg
mov
xor
jmp
orb
push
clc
test
cmpsl
call
hlt
dec
add
mov
xor
ljmp
jnp
nop
inc
pop
cmpl
les
mov
push
aam
pcmpeqw
add
mov
fwait
push
or
sub
and
lods
mov
outsb
bound
pusha
dec
and
aad
adc
push
mov
rolb
sbb
stos
push
test
in
divb
leave
pushf
jge
adc
xchg
bound
loopne
jnp
mov
jbe
pop
xor
fadds
aaa
inc
mov
movsl
cs
imul
movsl
xor
mov
movsbl
fadds
in
rclb
cmp
sub
cmp
inc
fstps
inc
mov
inc
mov
xor
and
sub
and
loope
and
pop
push
fwait
mov
fwait
push
iret
loope
xchg
mov
mov
xor
mov
inc
cltd
xor
outsl
outsb
call
int3
rclb
imul
mov
or
lahf
mov
enter
sahf
das
add
push
mov
ljmp
outsb
cmp
jmp
jecxz
dec
mov
push
sarb
inc
loope
sbb
insl
push
js
push
adc
cwtl
xchg
mov
mov
sbb
push
mov
rol
mov
rcl
lods
mov
and
sub
dec
sbb
dec
adc
nop
lret
sbb
xchg
jnp
rcrl
js
cld
xor
loopne
mov
xchg
icebp
popa
inc
push
sbb
in
negb
bsr
or
cltd
leave
insb
sub
jnp
outsl
jno
add
adc
jle
aad
cld
shll
xchg
mov
into
sub
cwtl
int3
aam
cmpsb
loope
push
push
movsb
subb
mov
and
adc
mul
cmp
cwtl
xchg
loop
mov
push
mov
arpl
stc
dec
mov
clc
or
popl
xor
xor
sahf
pop
sub
aaa
aas
fldt
sub
mov
out
ss
iret
enter
inc
xchg
and
cmc
or
cltd
xlat
xchg
mov
xor
mov
mov
mov
inc
shll
in
aad
fidivrl
and
bound
xor
mov
orl
sub
jmp
xor
fwait
inc
sbb
xor
push
imul
lret
sub
pop
cmp
sub
stos
scas
imul
sub
xchg
jecxz
and
adc
pop
scas
pop
lds
push
dec
stos
rol
mov
xor
push
mov
in
sbb
in
inc
ss
rcrl
mov
pop
add
fimuls
cs
lds
int3
enter
dec
mov
es
pop
jmp
cmpsb
dec
lcall
adc
xor
or
scas
fs
fisubs
cmpb
sub
sahf
cmp
xchg
jns
scas
nop
and
and
mov
pusha
xor
push
bound
clc
mov
inc
or
cli
clc
xchg
fdivs
leave
loop
test
cmc
jae
inc
inc
inc
lds
push
add
in
push
sub
sub
out
push
push
jl
or
push
add
cld
mov
popa
push
jge
lea
lods
or
les
adc
daa
out
cld
fiadds
cmpsb
fmul
lock
mov
js
rolw
mov
jno
sub
cmp
sub
mov
movsb
stos
push
mov
fiaddl
jmp
int
lods
push
sbb
cmp
xor
pop
pop
add
xchg
mov
aaa
and
bound
test
leave
cmc
out
fs
dec
pushf
arpl
repnz
mov
pushw
pushf
in
hlt
mov
dec
push
inc
pushf
pusha
pop
jmp
pop
pusha
sub
sbb
inc
aam
andb
push
mov
jnp
ret
sbb
fcoms
lea
jmp
leave
loop
mov
scas
push
addr16
inc
sub
mov
ror
jae
pushf
std
sbb
jbe
push
daa
jmp
or
out
add
mov
daa
and
bound
mov
popf
mov
push
lods
xchg
testl
push
pop
outsb
dec
jb
sti
mov
enter
outsl
and
fstpl
int3
adc
dec
pop
dec
test
clc
cmp
negb
loope
adc
inc
into
mov
mov
leave
dec
mov
jl
sub
inc
or
lods
or
xor
aaa
js
and
cld
frstor
cli
incl
add
ja
pop
mov
mov
jl
lret
xor
idivl
cs
sarb
pop
aad
xchg
mov
push
push
mov
ss
xlat
test
mov
scas
xorb
stos
cs
dec
lret
inc
sub
xchg
insl
dec
out
lods
sbb
add
sbb
jne
aam
sbb
scas
test
dec
mov
es
into
cmpsb
fdivp
sar
out
in
sbb
xor
nop
or
push
add
movsb
sbbl
notb
cmpsl
xchg
sub
jmp
pop
mov
mov
mov
test
inc
jmp
das
add
aad
dec
xlat
jge
push
outsl
push
out
xchg
inc
sbb
ret
cmp
jno
jns
cs
lret
or
and
outsb
and
jp
imul
imul
mov
fwait
pop
push
xor
aam
das
push
sbb
dec
mov
mov
mov
ficompl
je
in
fmul
jp
xlat
adc
nop
cmp
cmp
pushf
mov
movsl
std
mov
or
add
lret
inc
push
jno
inc
outsl
mov
adc
jle
dec
sub
xchg
or
inc
test
mov
subl
clc
cmpb
cmc
scas
fsubrs
mov
icebp
pop
pcmpeqw
outsb
mov
or
push
xchg
mov
sbb
repz
adc
inc
int
lods
add
addb
dec
jo
out
fiadds
xchg
into
cmp
gs
mov
xchg
test
or
inc
sub
xchg
les
mov
lcall
call
xor
rcll
lcall
aaa
pop
push
cld
mov
cmp
dec
sbb
into
outsb
push
inc
mov
add
dec
out
mov
sub
push
jmp
add
cmp
pushf
lahf
mov
ret
fs
in
mov
cmp
push
loop
fisubl
leave
xchg
fstpl
pop
dec
mov
push
adc
or
or
mov
or
and
sbb
xor
pop
push
sti
rorl
loop
decb
xchg
std
lea
in
fdivrl
addb
dec
ss
icebp
jb
sub
or
pop
mov
push
fldcw
lea
sbb
pop
or
in
mov
ds
xchg
arpl
jnp
xchg
inc
dec
push
js
jb
les
call
sub
jb
test
int3
xor
jnp
xchg
ret
and
sbb
add
xchg
xchg
aad
sbb
xchg
dec
jnp
loope
je
insb
xchg
mov
outsl
das
fs
ret
dec
sbb
pop
movsb
jne
jmp
mov
outsl
mov
shlb
in
jp
pop
mov
inc
xor
xchg
sbb
mov
dec
xchg
push
pop
jno
dec
xor
sub
push
fists
sbb
xorb
and
in
pop
pop
lret
cmc
or
and
push
mov
movsl
fimuls
fidivrl
daa
popa
inc
stos
repnz
pop
push
pop
inc
stos
adc
xor
jp
les
mov
std
add
adc
call
xor
sub
repnz
xorb
xor
lds
mov
lahf
je
mov
dec
sub
dec
aad
or
inc
xor
fidivl
adc
and
xor
add
pop
js
sub
call
xlat
pop
or
jnp
mov
adcl
into
lahf
test
push
aaa
pusha
subl
sbb
push
in
int
pop
sti
pop
rcrb
mov
adc
aad
loop
pop
loopne
or
inc
dec
push
cli
lahf
jl
test
rcrb
testl
adc
push
ret
out
xor
int
lock
xchg
dec
cmpsb
jae
cmp
push
xlat
orb
cli
or
jnp
ja
mov
filds
mov
mov
arpl
adc
insl
jae
jns
insb
je
outsl
xchg
dec
arpl
pop
jle
xor
movsb
xchg
fnstsw
test
dec
stc
addr16
jmp
lods
aam
adc
test
lds
pop
mov
bound
add
dec
imul
mov
lret
jne
rcll
xchg
jl
clc
aaa
cmpsl
jg
lock
subb
int
inc
mov
hlt
js
sti
xor
sub
inc
mov
xchg
div
std
and
mov
ret
ss
cld
dec
adcb
xchg
pop
sahf
out
mov
cmpsl
jae
hlt
aam
call
jbe
stos
test
inc
sahf
xor
scas
or
xor
jo
pop
daa
and
mov
mov
icebp
jb
fs
sub
mov
les
in
sub
shr
idivb
cld
and
dec
jecxz
insl
test
jg
jecxz
mov
leave
aaa
jle
pusha
mov
add
inc
push
movsb
ret
arpl
or
or
cmp
cld
pop
adc
rorl
push
push
cmp
sahf
cld
bound
popf
outsl
dec
ficoms
push
dec
stos
std
sbb
icebp
orl
mov
das
jb
repnz
cmpsl
dec
and
xor
mov
ljmp
fsubp
mov
push
cmp
pop
jnp
rolb
ljmp
in
mov
repz
lcall
xlat
push
aas
jg
aas
sub
std
out
sbbl
xchg
xchg
pop
adc
out
sahf
int
lahf
fcmovnbe
mov
xor
adc
xchg
push
mov
int3
sti
rolb
aam
rorl
push
ret
adc
xcrypt-cbc
push
dec
or
out
xor
std
repz
and
mov
fcmovu
or
cmp
or
sarb
dec
mov
dec
bound
and
or
mov
out
dec
dec
mov
icebp
add
rorl
sub
loope
mov
lods
mov
imul
xchg
test
pop
xor
xchg
pop
mov
and
add
xchg
inc
cmpsl
ss
pop
jl
out
jge
xor
enter
fs
repnz
push
outsb
loop
inc
call
jne
out
dec
in
mov
les
xchg
sarb
fsts
js
mov
clc
leave
outsl
icebp
clc
cmp
jo
jo
mov
mov
push
pushf
icebp
add
push
push
push
xor
adc
adc
into
and
shl
not
popa
mov
or
adc
adc
jmp
mov
es
sub
jmp
jne
inc
inc
int3
test
xchg
xor
push
ds
add
mov
push
push
ficomps
test
jne
outsl
jle
int
or
ret
cs
push
mov
mov
push
out
frndint
shrl
outsl
cmp
aas
mov
mov
push
popa
pop
aas
xor
xchg
cmpsl
mov
push
add
mov
lods
ret
add
or
ss
cld
out
push
icebp
pop
adc
adc
lret
rcll
sbb
pop
mov
ret
lds
fstpt
push
pop
addl
xchg
shl
pop
mov
stos
dec
aad
jge
xchg
fsts
stos
inc
cmp
nop
jmp
xchg
or
jno
pshufhw
rcrb
cltd
or
inc
sti
lret
inc
xchg
mov
pop
inc
xchg
jb
mov
ljmp
adc
dec
jg
push
mov
outsl
mov
mov
pop
pop
jg
fiadds
fidivrs
pop
adc
dec
sub
and
stos
in
ds
shrl
push
ficoms
lret
and
xorl
inc
cmp
jl
incb
mov
mov
popa
sbb
cmpps
mov
jns
cmpl
push
sub
sbb
roll
pop
div
mov
hlt
or
or
sub
pop
pusha
aaa
inc
out
mov
jne
fcomps
dec
add
fs
fstpl
mov
pop
sbb
push
sub
pop
fmul
jle
in
pop
xchg
mov
ja
adc
out
mov
fcoms
fs
sar
mov
inc
xchg
insl
outsl
sub
adc
lock
ja
nop
aad
xor
sbb
idivl
popf
sub
enter
add
cmp
fsubs
pop
cld
movsl
mov
mov
mov
cmp
xor
pop
mov
inc
dec
insb
call
into
adc
test
dec
cmp
sahf
fs
push
cmp
fidivrs
cmc
mov
push
xchg
push
xchg
push
loop
les
nop
add
pusha
imul
mov
adcb
loopne
dec
in
in
mov
lds
loop
pop
push
xor
or
outsb
xor
adc
pop
fbld
loopne
xor
out
loop
cltd
push
movb
or
aaa
fadds
mov
xchg
cld
mov
les
inc
push
push
pop
mov
sarb
jae
cmp
in
int
movsl
movsb
push
sub
iret
mov
fwait
dec
jp
jnp
xor
lcall
sub
daa
sbb
je
test
jae
int3
lea
add
pop
jge
dec
sbb
add
and
pop
cld
xchg
pop
outsl
dec
nop
jbe
xor
mov
leave
out
mov
dec
pop
fcoml
sahf
sahf
insl
sub
and
sbbl
loop
rolb
testb
enter
fld
pop
sbb
movb
and
pop
leave
pop
lea
test
add
out
pop
cmp
pop
jge
jo
ja
movsl
add
int
mov
jp
mov
rcrl
arpl
cmp
mov
xor
fsubl
jb
lret
in
cmc
sbb
inc
in
iret
test
popf
lcall
jno
sub
dec
mov
repz
mov
lock
popa
mov
jp
out
lods
add
cmp
jae
cli
pop
jp
out
repnz
xor
pop
out
fldt
xchg
sub
lcall
gs
mov
mov
jns
lds
jecxz
mov
push
aam
adc
cld
repz
add
test
push
into
lods
mov
addr16
ss
jmp
pop
xchg
sub
aad
call
clc
fadds
int3
fcmove
js
clc
jae
cmp
adcb
sub
adc
je
cli
cmp
adc
adc
adc
sbbb
stos
into
xchg
jmp
push
aad
jnp
int
xchg
inc
js
inc
cld
inc
mov
insb
lods
jg
inc
pop
sub
pop
add
mov
or
clc
mov
in
and
lret
adc
pop
nop
outsl
out
xor
sbb
aaa
sub
hlt
dec
xor
mov
mov
mov
test
sub
jno
add
cmc
add
ja
loope
in
push
xchg
xchg
addb
stc
les
xchg
mov
sbb
fisttpl
adc
mov
adc
inc
idivl
or
jmp
pop
cli
fstpl
push
xchg
pop
leave
adc
ja
test
pop
xor
inc
into
mov
test
add
ljmp
xchg
xchg
lret
rcl
xlat
cmp
jge
pop
mov
aad
mov
mov
inc
mull
sarb
sub
mov
push
and
mov
pop
pop
push
mov
cmp
inc
shr
out
push
outsl
repnz
jle
test
sbb
lods
mov
test
sti
push
movsl
pop
aam
lock
fisubrl
ret
adc
mov
pop
clc
or
test
fbstp
mov
stos
shlb
or
popa
pop
sar
mov
add
push
iret
ret
nop
jne
jns
movsl
push
xlat
out
aaa
mov
in
xor
cmp
xchg
push
mov
pop
or
mov
inc
mov
inc
mov
and
inc
popa
or
std
bound
stos
hlt
in
stos
clc
pop
data16
inc
pop
lods
cli
adc
mov
push
xlat
cmp
pop
mov
xlat
inc
mov
jg
mov
arpl
push
fnstenv
test
and
cld
jnp
int
push
int3
mov
fstps
jg
sarb
stos
fists
and
sahf
shlb
xchg
sub
and
fnclex
mov
rcll
fcoml
mov
mov
sbb
jbe
fildll
repnz
xchg
sbb
jl
mov
lea
int
shlb
insl
xor
cmp
xchg
stos
mov
and
mov
imul
loop
lock
call
gs
xchg
adc
aam
sarb
fisttpll
mov
lea
std
jne
pop
cwtl
arpl
outsl
jbe
pop
lock
lea
test
scas
in
mov
adc
andl
push
pop
in
ret
in
in
adcb
into
inc
inc
mov
data16
leave
fisubs
jnp
dec
mov
or
dec
mov
sbb
mov
push
ds
cmpsl
push
sub
pop
icebp
in
push
pop
sbbb
cmp
dec
dec
inc
jb,pt
imul
pop
mov
popf
je
lods
xchg
cmp
mov
mov
add
imulb
ja
jle
push
loop
and
es
push
inc
or
test
leave
mov
cli
inc
pop
xchg
cmpb
movsl
inc
aas
call
sbb
movsb
ds
sbb
mov
xchg
ljmp
xlat
pusha
in
mov
xor
stos
xor
arpl
leave
insl
jns
rorb
hlt
sahf
push
imul
or
lea
outsb
icebp
adc
out
leave
or
stc
cmpsl
movsl
cli
jae
push
in
sbb
pop
sahf
fsubl
jno
test
lds
sahf
ret
stos
in
push
orps
bndstx
push
jb
cmpsb
nop
or
mov
xor
add
scas
or
shll
mov
repz
enter
pop
sti
into
outsl
out
jl
xor
inc
sbb
jb
mov
gs
outsl
xchg
in
fidivrs
stc
jecxz
xchg
push
add
cmp
mov
adc
stos
lcall
gs
ja
mov
adc
mov
aaa
hlt
mov
cmp
scas
test
pop
inc
stos
in
jne
mov
daa
inc
stos
cmp
xlat
add
push
and
fwait
dec
lahf
push
dec
ret
sub
or
mov
xchg
mov
dec
sub
aam
lock
fadds
xor
mov
lcall
testl
outsb
xor
mov
je
cli
push
and
addr16
pop
pop
sbb
mov
jb
xlat
jmp
adc
inc
andl
jb
jnp
je
adc
dec
jno
add
dec
shll
div
iret
xor
inc
xor
xchg
scas
inc
cmc
addr16
out
das
jbe
repz
aaa
adc
xor
cmp
jo
aad
add
ljmp
lock
adc
sbbb
jle
cli
fwait
addr16
jae
push
inc
in
dec
jmp
lea
inc
jge
sahf
imul
push
sub
dec
fstp
inc
fadds
fbstp
ja
shrl
jne
pushf
sub
sbb
test
daa
mov
aas
push
outsl
je
jae
xchg
jno
mov
test
leave
movsb
fbld
sbb
cltd
into
loope
mov
adcl
addr16
shlb
mov
mov
testb
mov
cmp
rorl
aam
scas
or
out
pop
addl
jecxz
cwtl
loopne
and
int
pop
insb
jbe
mov
into
arpl
sub
ds
jmp
lods
pop
jg
bound
cwtl
sub
pop
and
cmp
aaa
jnp
lods
andl
negl
push
dec
sbb
xchg
push
in
dec
sarl
xchg
inc
scas
hlt
xchg
jp
and
gs
mov
add
int3
cmpl
enter
sub
cmpsb
xchg
popf
dec
rolb
out
push
and
loop
enter
jp
dec
std
mov
pop
push
cltd
mov
add
pop
sbb
mov
ja
lods
movsb
outsb
dec
insl
std
mov
pusha
jae
ret
push
fs
jge
data16
fdivrs
xchg
push
lret
xchg
call
movsl
and
stos
das
jns
sahf
das
inc
cmp
dec
and
sbb
repnz
es
jne
in
mov
sysret
cmp
jnp
jb
push
scas
ret
vandps
or
and
js
sub
sbb
mov
aas
sbb
out
test
jg
add
out
mov
lock
aad
mov
rcr
jae
dec
dec
clc
and
mov
movsl
inc
push
mov
add
mov
hlt
push
sbb
cmp
add
out
mov
insb
pushf
aaa
sub
mov
int3
mov
dec
dec
pop
push
or
sub
xor
mov
nop
sub
adc
dec
jbe
cmpsl
mov
xor
loope
aas
push
imul
mov
mov
ss
lods
cmpsl
lods
imul
push
insb
mov
jecxz
imul
push
and
jns
mov
or
xor
fstpt
stos
fimuls
test
pop
movsl
or
fstpt
rorb
mov
xor
out
roll
leave
mov
test
push
fdiv
push
sub
leave
aad
jbe
inc
movsb
xchg
jmp
jae
xor
sub
adc
fmuls
out
sub
adc
and
mov
fistl
xchg
xchg
sbb
mov
sub
push
mov
xchg
bound
xlat
push
xlat
jle
mov
scas
arpl
je
test
data16
roll
idiv
negl
and
push
xchg
sbb
mov
loopne
and
xor
add
jle
sarl
imul
scas
ret
shlb
or
xor
sbb
cld
push
sub
je
and
adc
stos
shlb
lods
loope
dec
cmpl
inc
mul
or
push
xor
mov
jno
lods
loopne
rcrb
lret
dec
andl
xchg
push
stos
aaa
and
lret
inc
outsl
ljmp
imul
es
cmp
or
cld
in
dec
lods
adc
sbb
inc
mov
ds
and
jle
sbb
sub
loop
jae
add
js
sub
adc
sbb
out
jp
and
lcall
mov
xchg
icebp
outsb
adc
in
enter
dec
xchg
leave
out
add
inc
pushf
lock
mov
mov
jecxz
xor
fmul
mov
mov
xchg
mov
enter
icebp
sbb
mov
scas
jb
xchg
pop
and
jo
sarb
shll
mov
movsl
mov
mov
je
sub
cwtl
pop
wrmsr
jl
xchg
mov
loope
cmp
fs
mov
dec
xor
sbb
push
ret
es
subb
test
push
ret
mov
test
jge
adc
push
or
pushf
cmp
adc
fs
mov
int3
xchg
lcall
jns
adc
sbb
cmp
cmp
dec
imul
push
push
sbb
cmp
sbb
shll
adc
jb
push
shlb
push
fistpl
jbe
sub
int3
nop
imul
sbb
sbb
or
pop
mov
loope
jp
movl
mov
or
sti
aam
lock
mov
jnp
cmc
ret
sub
std
iret
scas
mov
cmp
xchg
inc
cmp
mov
mov
lock
mov
fidivl
cld
test
in
mov
inc
js
out
fldenv
out
aam
fisubl
xchg
add
inc
mov
inc
cld
pushf
pop
mov
dec
leave
sub
hlt
fdivrp
sbb
cmp
cmpsb
aad
ss
cld
iret
test
add
sbb
clc
push
mov
and
lds
pop
add
xchg
mov
inc
icebp
mov
pop
in
dec
jbe
aam
or
and
jmp
pop
test
es
and
sahf
xchg
cmp
xorl
ljmp
pushf
pop
mov
fs
ficomps
pop
add
or
imulb
sub
das
xchg
cs
dec
adc
lds
in
js
pop
out
cmc
filds
cwtl
cwtl
jle
xchg
iret
out
hlt
add
sbb
pop
sub
dec
pop
pop
fidivrs
dec
sub
mov
rol
pop
fldenv
lret
inc
adc
insl
inc
insb
push
aad
dec
jbe
cmc
push
push
sbb
lea
inc
cmp
mov
stos
fsub
test
fisttpll
cmp
and
mov
dec
mov
inc
test
jnp
les
dec
xlat
mov
std
fidivs
cwtl
fsts
div
div
pop
pop
mov
pop
int
adc
push
add
jg
dec
insl
frstor
clc
data16
pop
sbb
dec
ja
sbb
ljmp
add
or
orb
roll
repz
pop
test
shrb
dec
addl
out
or
mov
jne
add
fwait
push
push
sahf
mov
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
adcb
push
jmp
bound
test
add
push
sbb
inc
push
jge
jb
arpl
inc
insb
pop
pop
imul
cmpsl
stos
adc
imul
popa
mov
imul
mov
mov
pop
repnz
push
and
mov
cli
iret
xchg
and
loope
and
or
cmp
aaa
sbb
mov
add
data16
aaa
mov
inc
mov
jno
sbb
cmp
jmp
jae
test
sahf
pop
pop
push
cmp
jb
xor
sbb
sub
idiv
clc
add
imul
add
test
mov
push
repz
dec
and
mov
fimuls
std
aaa
adc
xchg
clc
hlt
scas
mov
ret
pop
ljmp
lea
in
jb
icebp
loop
lcall
cmp
jge
movsl
ds
dec
out
xchg
cmpsl
jp
cld
pushf
dec
testl
cwtl
dec
pop
movsl
sarl
sahf
jecxz
jae
mov
and
daa
sarl
jge
adc
push
inc
and
push
test
cld
rolb
sbb
lds
sub
cmp
adc
xor
push
jecxz
fcomps
aam
adc
pop
data16
cmp
ljmp
aam
imul
pop
sub
cmp
outsl
mov
mov
stc
jnp
sbb
jmp
adc
arpl
fdivp
shll
adc
xchg
repz
mov
je
push
mulb
sbb
mov
jo
push
lods
loop
inc
push
pop
dec
rcll
inc
orb
out
popf
subl
mov
or
outsl
cmc
out
xor
adc
xchg
cmc
and
ret
xchg
cli
add
pop
adc
cli
lea
fcoms
scas
leave
fwait
pop
cs
xor
icebp
cli
andb
loope
sbb
in
jne
mov
movsb
pop
cmpsl
add
ja
cmc
sbb
mov
mov
call
mov
add
sub
inc
daa
fldt
loopne
rorb
sbb
nop
cwtl
sub
xchg
rcl
or
or
pop
fs
test
jmp
mov
xchg
or
dec
inc
add
jns
or
sub
rolb
xchg
adc
sahf
dec
jg
push
push
xchg
xor
mov
pushl
sub
mov
enter
jne
mov
lods
scas
and
pushf
shlb
in
mov
add
lds
adc
out
pop
les
dec
lret
cltd
or
jmp
jne
ja
jle
push
ret
pop
cmp
xchg
sub
pop
push
ror
sbb
mov
loopne
jg
add
pop
mov
cmc
add
cmc
imul
mov
jg
cmp
popa
jns
stos
sbb
into
addr16
gs
stc
xor
imul
jae
mov
cmp
push
push
nop
call
add
out
cld
fidivs
push
arpl
in
out
inc
cmp
rcll
ja
frstor
mov
test
cmc
inc
xchg
lret
cmp
gs
xor
pop
jmp
cmp
pop
xchg
test
jmp
pop
ljmp
lock
sahf
gs
or
xor
in
je
jge
jl
and
loop
shlb
jns,pn
popf
out
sbb
jecxz
jge
out
sub
hlt
das
out
mov
bound
rcll
mov
out
data16
cli
into
jo
jne
and
movsb
mov
pop
inc
adc
cmc
mov
lods
imul
jno
sti
inc
fdivs
in
ja
pusha
or
jbe
ret
outsb
rorl
pop
rclb
sub
sub
pusha
cmp
popf
insl
sbb
or
out
jo
outsl
rorb
adc
push
sbb
dec
cld
test
cltd
xorb
add
out
int3
gs
in
inc
movl
sub
mov
xchg
mov
pop
cmp
mov
cwtl
int
add
pop
mov
xor
add
cltd
stos
mov
mov
int
lods
pop
in
dec
jg
test
push
pop
lahf
cmp
cmp
inc
sub
pop
jge
mov
rclb
sbb
jo
cmp
stos
xor
sub
push
adc
mov
iret
scas
pop
scas
adc
scas
lods
jno
xchg
cli
stc
repz
pop
out
cmp
sbbl
jns
popf
mov
test
pop
push
iret
and
add
shl
xor
leave
ss
push
pop
inc
cs
dec
int3
cwtl
or
jl
das
sub
adc
jp
in
dec
adcb
out
lret
nop
scas
push
dec
cmp
adc
cmpb
push
fnstenv
jno
aad
adc
rorl
adc
lret
push
pop
mov
jbe
mov
push
lods
mov
sbb
es
sbb
sub
inc
test
mov
mov
push
push
cli
push
call
cld
lea
and
jecxz
mov
adc
push
nop
mov
and
stos
dec
mov
dec
cmp
cmp
and
push
push
cmp
lcall
adc
pop
mov
pop
inc
sub
cld
mov
cmp
movsb
ds
jge
or
pop
movsl
sahf
xchg
adc
lahf
push
shrl
push
nop
imul
dec
or
enter
mov
xor
dec
sbb
fsubrs
sbb
pop
icebp
js,pt
and
jle
ret
cli
dec
push
popa
pop
test
adc
aaa
stos
mov
mov
shlb
jbe
out
les
pop
xorb
push
fsubrs
inc
lret
mov
in
or
ja
xor
xor
push
cmc
sbb
inc
loope
add
or
mov
scas
sub
int3
add
out
inc
jo
cmp
sbbl
popf
jmp
sbb
fadds
ja
cwtl
ds
push
sub
lds
pop
adc
lcall
xlat
or
and
pop
ret
ja
or
mov
jle
aaa
out
inc
mov
mov
or
lea
outsb
push
scas
inc
pop
sahf
dec
hlt
fidivrl
shll
imul
lods
addr16
fstpt
mov
mov
jns
mov
xor
subb
cmp
test
push
pop
pop
sbb
xor
jg
imulb
aas
sub
cmp
sub
fs
arpl
push
xor
jo
jae
insb
push
outsl
cmp
sub
adc
aas
sbb
add
adc
push
test
ds
lock
xor
outsl
cmpsl
loop
loope
xor
out
cld
rorl
das
xor
xchg
sbb
sarb
les
icebp
andl
xchg
add
and
adcl
inc
adc
fndisi(8087
pop
push
mov
pop
popf
movsb
inc
jne
inc
mov
or
aaa
xchg
xor
dec
loopne
ds
leave
int3
ljmp
cmp
add
lods
pop
test
cwtl
jo
out
add
pop
push
pop
mov
pop
popf
repnz
xor
gs
adc
sbb
pop
lcall
jmp
mov
cwtl
xchg
or
ficoml
int3
ja
pop
push
arpl
mov
jecxz
jge
into
lea
dec
mov
std
out
cwtl
mov
mov
fiaddl
in
daa
stos
inc
push
mov
lahf
mov
fisubl
lret
inc
xor
push
cmp
mov
mov
and
out
aam
add
stc
addr16
cmp
in
fldt
mov
inc
cmp
dec
insb
ret
push
loop
xchg
imul
cmp
fcomps
call
jle
mov
jae
loope
jecxz
andl
cltd
mov
mov
fisubrl
out
nop
mov
in
roll
aad
fisubrl
inc
mov
pop
pusha
outsb
jp
mov
adc
xor
sbb
test
adc
push
pop
pushf
adc
sbb
stos
dec
xchg
pop
repz
sti
popf
ret
call
push
fisttpll
bound
adc
aas
mov
pusha
adc
xorb
cmpsb
iret
xor
loop
add
test
mov
out
inc
mov
pop
dec
lds
pushf
push
out
pop
lret
mov
or
xlat
std
sub
sub
mov
lret
mov
mov
popf
adc
add
das
ljmp
dec
in
jns
je
sti
gs
les
cltd
adc
mov
cmp
jge
pop
push
cmp
daa
adc
pusha
xlat
cmpsb
shl
or
xchg
stos
stos
adc
ficoms
scas
push
insb
test
add
sbb
test
sbb
std
pop
mov
aaa
shl
sbb
inc
dec
mov
bnd
pop
iret
popa
or
jb
pop
lods
insl
int
adc
leave
add
addl
inc
xor
mov
jg
stc
jno
test
out
data16
or
lahf
je
mov
push
sbb
mov
fsubl
leave
divb
stos
cmpsb
insl
sbb
ret
int3
dec
push
shl
pop
outsl
cmp
cld
jle
mov
pusha
in
daa
jbe
push
push
inc
movsl
cwtl
inc
mov
mov
and
sub
fiadds
sub
rolb
outsl
daa
xchg
push
mov
lods
dec
inc
repz
adcl
mov
pop
push
cld
xorl
jecxz
adc
lahf
pop
stos
push
dec
dec
in
lret
inc
inc
cmpl
frstor
adc
cmp
roll
sbb
sub
in
inc
ja
cltd
cli
js
push
shll
adc
jns
dec
int3
jae
jmp
ljmp
jnp
fsub
dec
ss
sub
daa
mov
test
push
pop
jae
je
dec
out
cld
lock
add
push
addr16
jge
xchg
mov
stos
ds
sbb
inc
sbb
ss
cli
scas
xor
fwait
pusha
shrb
push
in
xchg
mov
xchg
sub
divb
out
scas
imul
add
cld
loopne
mov
and
aaa
adc
fxch
js
push
sub
mov
jnp
push
mov
mov
pushf
sbb
rol
out
std
out
mov
cwtl
jle
push
hlt
test
jno
in
dec
jns
sub
mov
push
movsb
lret
je
data16
mov
jo
jno
scas
gs
repz
push
imul
dec
int3
dec
jmp
sti
mov
cmpsl
inc
add
sbb
pop
ret
push
jge
or
jno
out
push
xchg
mov
pop
add
cli
mov
xchg
sbb
sbb
fisttpll
inc
xor
es
pushf
xor
xor
inc
xchg
in
xchg
sarb
data16
iret
sbb
mov
lea
cmc
mov
sub
or
scas
adc
rcll
push
and
mov
pop
cmp
xchg
pop
mov
popf
lds
les
aas
mov
aad
mov
sbb
pop
dec
xchg
mov
adc
outsb
frstor
and
jecxz
mov
mov
sbb
sub
pusha
fimull
mov
adc
and
lds
inc
leave
in
stos
mov
dec
push
rorl
mov
jg
mov
ljmp
adcb
cld
mov
ja
sub
vmwrite
lahf
aas
fsubs
test
fs
cwtl
xlat
subb
mov
cmp
jg
leave
add
xchg
push
dec
popf
xchg
ret
out
xor
aas
test
dec
aad
mov
add
stos
insl
gs
fidivrs
in
aas
lock
push
loopne
xchg
lea
cmpsl
adc
push
out
in
or
dec
dec
in
lret
add
jecxz
push
repz
cmpsb
stc
mov
xlat
jne
pop
dec
xor
ljmp
iret
roll
cs
jo
imul
sbb
rcr
icebp
add
lea
add
stc
push
dec
roll
inc
and
or
cmp
leave
das
jae
or
mov
sbb
fs
or
mov
mul
lock
add
pop
mov
push
movsl
das
sti
cmpsl
out
scas
lds
test
icebp
cmp
scas
hlt
rcrl
ret
stos
adc
xchg
mov
in
pop
xor
sti
xchg
sbb
std
icebp
test
mov
sub
pop
repnz
fisubrs
push
jns
mov
fs
push
lcall
mov
imul
and
pop
aad
loopne
sbb
xorl
push
push
xchg
loop
flds
fistl
inc
sarl
pop
sti
inc
xor
leave
rorb
xchg
pop
loop
mov
jmp
in
xor
je
fbstp
add
loope
mov
ljmp
and
loopne
pop
cmp
fsubl
imul
or
jnp
jl
fwait
xchg
jle
pop
push
cmp
in
xor
push
aam
cmp
xchg
into
gs
pop
xchg
ffreep
fisubrl
add
movsl
sbb
lret
aam
pop
xchg
adc
mov
ret
push
loope
loopne
in
jno
xor
push
jb
lods
mov
jae
cmp
imul
es
dec
insb
mov
cmpsb
outsl
cwtl
cmp
test
mov
ret
mov
mov
sub
icebp
fldl
sahf
inc
andb
ret
test
daa
adc
xchg
test
addb
inc
mov
fidivl
fcoml
bound
pop
inc
fcmovbe
push
call
jno
mov
pop
addr16
cli
ljmp
cmp
cmp
lock
and
push
xchg
call
or
ds
and
adcb
cmp
add
push
push
pop
orl
inc
in
push
sahf
inc
sbb
xor
push
and
push
jne
insb
test
jnp
jnp
pop
in
dec
nop
sbb
mov
ds
sub
stc
add
xor
dec
mov
dec
clc
int
inc
push
das
and
and
add
fildl
ret
mov
xchg
push
cmp
jns
imul
sub
in
fs
in
test
hlt
shrb
pop
jmp
xchg
or
xorb
int
negb
push
iret
lret
hlt
popa
or
mov
aad
test
out
rcl
ss
sahf
xor
cmpsl
fidivs
ljmp
dec
push
insl
dec
lea
or
xchg
or
push
mov
mov
call
pusha
push
stos
mov
sub
call
adc
inc
lcall
scas
fstpl
mov
mov
add
aam
fimull
outsb
inc
add
jne
xchg
dec
push
pop
jno
mov
ja
cwtl
adc
jmp
imul
aad
aas
add
dec
movsl
cmp
inc
lds
pusha
jmp
push
jno
ljmp
cmp
adc
cmp
mov
lock
or
aam
fstl
das
and
or
mov
sbb
and
jne
mov
mov
or
mov
adc
or
adc
sub
xor
jnp
push
leave
and
or
mov
lret
test
popa
mov
xlat
aas
mov
loop
enter
mov
loopne
cltd
pusha
mov
push
fildl
jb,pn
pushf
sahf
popa
int3
adc
mov
xchg
pushf
pop
aad
hlt
push
or
jmp
cmp
addb
jg
pop
sbb
rclb
push
jno
add
push
sub
sub
mov
mov
jns
pop
adc
ljmp
stos
pop
jbe
xchg
pop
lock
xor
test
sbb
push
sub
dec
and
inc
aas
mov
xchg
add
outsl
movsl
jecxz
jo
icebp
inc
cmp
cwtl
pop
or
dec
mov
loop
jmp
cmp
mov
mov
mov
hlt
cmp
stc
cmc
or
rolb
inc
pop
dec
xchg
mov
loop
or
dec
push
push
incb
fucom
decl
jno
add
subb
daa
sub
jl
stc
mov
arpl
aaa
sbb
push
ljmp
aaa
loope
mov
add
cmp
call
pop
ficoml
add
iret
ds
lcall
xchg
jg
sti
mov
movsb
jb
andb
shlb
iret
inc
ror
dec
adc
shrb
movsw
sbb
mov
fadds
xlat
sub
xchg
mov
inc
jmp
dec
xor
adc
sbb
gs
dec
rol
mov
imull
fisubrs
stc
incl
xor
loop
sub
and
out
mov
mov
lcall
in
lret
xchg
bound
movsl
movsl
cmpb
pop
jb
cmpxchg
bound
into
sub
jbe
add
mov
das
push
or
pop
test
xchg
xchg
imul
xchg
cmp
jae
call
mov
xor
cld
xor
mov
lret
movsb
stc
adc
stc
mov
xlat
lahf
dec
push
cmp
jb
sti
lock
and
cwtl
loopne
push
aas
push
and
aam
xor
xor
mov
inc
repz
inc
mov
mov
add
cmpsb
push
sahf
jmp
movsb
cli
stos
mov
in
cmp
cmp
sbb
je
insb
push
popf
pop
into
push
movsl
fcoms
test
insl
aas
aam
add
xchg
call
aas
scas
repz
push
jle
push
sub
mov
jp
imul
leave
mov
inc
je
and
mov
and
je
jmp
or
jg
sbbb
xor
sub
sbb
or
mov
add
xor
ljmp
jae
fistpll
mov
stc
push
cmp
xchg
fstpl
sbb
sti
xor
cmp
fimuls
pushf
lcall
inc
and
stos
sbb
and
out
outsl
jl
dec
insb
scas
nop
insl
idivb
inc
cmpsb
mov
iret
fiadds
inc
push
sub
push
cmp
pushf
adc
sbb
pushf
icebp
mov
ja
lret
mov
sbb
sbb
sbb
adc
in
and
inc
add
into
jns
insb
fidivrl
fstpt
clc
shlb
adc
cmp
cmpsl
jecxz
mov
sbb
jbe
in
sbb
lea
cmpl
pop
pop
dec
inc
jbe
mov
dec
pop
inc
cltd
int3
pusha
mov
popa
and
cmp
mov
push
inc
or
stos
jmp
dec
dec
mov
mov
int3
icebp
jmp
test
adc
pop
int3
and
pop
stc
mov
outsb
or
pop
pop
in
inc
popa
and
insb
push
and
add
fisubl
mov
sub
out
jmp
push
out
into
dec
sub
fstpt
jb
nop
mov
aad
cmpsl
nop
lret
add
add
lret
push
mov
jno
cmp
jno
rol
mov
lret
test
rclb
loope
sub
sbb
push
aam
cwtl
lods
and
dec
sub
fcompl
fcmovb
inc
iret
mov
push
out
testl
adc
cmpsb
pushf
pop
ficoml
mov
lds
sbb
fdivl
loop
or
cltd
add
mov
popf
lds
add
mov
pop
mov
hlt
pop
les
aad
dec
and
testl
dec
scas
xor
test
jl
je
inc
fistpll
push
loopne
xchg
in
jo
notl
cmp
mov
out
xchg
pop
jl
out
adc
andb
insl
cmp
adc
xchg
xor
fisttps
xor
addr16
or
sbb
lods
push
sub
in
jo
and
test
repz
out
and
xchg
dec
mov
std
add
mov
repnz
xchg
xchg
sub
fldcw
cmpsl
push
bswap
loope
xorb
jg
jp
push
pop
and
pop
mov
stos
repz
sub
pop
ficoml
xchg
imul
out
popa
cmp
fnstsw
aaa
out
call
popf
test
shrb
ficoml
adc
push
adc
and
sub
xor
mov
sahf
orl
fistps
adc
loopne
repz
fldcw
addr16
jmp
mov
pop
dec
sbb
mov
pop
int
in
xor
xor
or
mov
daa
lods
fnstsw
clc
aad
push
jecxz
jmp
cltd
stc
in
lret
jo
or
fnstcw
inc
out
inc
mov
cmpsl
xchg
cmc
pop
test
bound
test
out
insb
pop
in
and
repnz
sub
loop
push
mov
aaa
sub
cmp
dec
repz
mov
inc
xlat
adc
jg
cs
sbb
pop
inc
fisubl
dec
lods
push
or
in
pop
dec
test
rolb
nop
fmulp
xchg
cli
inc
leave
jb
xor
xchg
inc
movsl
pusha
test
lahf
cli
pop
je
add
orb
cmp
mov
sbb
mov
ds
xor
dec
subb
loope
pslld
mov
mov
xor
cmp
mov
dec
loop
push
fisttps
nop
sub
out
adc
sub
cmc
test
mov
cmp
test
mov
and
pop
subl
arpl
mov
insb
adc
cmp
xchg
jns
pop
cs
test
push
push
adc
bswap
in
mov
sub
dec
xchg
add
xchg
inc
cmp
mov
fwait
fs
xchg
push
scas
fbld
outsb
mov
mov
sbb
movsl
pop
push
ss
xchg
subl
hlt
mov
xor
and
jno
sub
jne
push
fsts
pop
jl
popa
andl
mov
ret
repnz
adc
repnz
fwait
adc
sub
jbe
addr16
mov
lock
orl
inc
xchg
fstps
call
testb
jle
mov
mov
daa
or
push
add
xor
stos
jne
stos
xchg
in
lahf
and
mov
xchg
lods
pop
fdivs
cmp
arpl
cltd
out
or
inc
popf
mov
cwtl
stos
dec
cmp
std
loope
xchg
call
in
jl
xlat
arpl
out
ljmp
push
fisttpll
ljmp
push
inc
pop
sahf
incl
or
inc
out
das
mov
jbe
jo
mov
lods
test
das
mov
stc
add
mov
adc
cmp
cmp
fisubrs
xor
imul
clc
and
sbb
and
pop
out
xchg
shlb
mov
js
bound
cli
fildll
pop
jb
mov
and
mov
mov
shll
cwtl
mov
mov
push
mov
inc
jns
into
xchg
addr16
mov
aad
cld
jge
sbb
pushf
mov
xchg
rcrb
je
loopne
cmovae
add
sub
xor
psubq
adc
add
popa
add
lahf
ljmp
xchg
clc
cmpsl
jg
in
fwait
lds
jmp
push
movsl
or
inc
xor
jne
lret
mov
outsb
sub
out
xchg
pop
cmp
xor
fs
and
inc
pop
roll
pop
les
lods
fildl
mov
loopne
sbb
mov
dec
dec
test
lods
jnp
jno
push
into
or
stc
pop
inc
mov
xchg
or
adc
adc
push
pop
fwait
mov
mov
cltd
mov
dec
xchg
xchg
push
cmp
inc
dec
push
dec
xor
cltd
cwtl
fbld
movb
push
mov
inc
push
dec
sbb
loop
movsb
jecxz
sub
push
clc
loope
sbb
insb
lahf
sti
push
add
leave
pop
loop
test
inc
fisubrl
outsb
push
mov
xor
sbb
mov
push
inc
jge
lds
movsl
mov
aad
pop
mov
roll
pop
inc
addr16
sub
mov
jbe
cmpb
stc
fisttps
scas
jo
sbb
aad
and
pop
in
pop
push
mov
xchg
insb
cmp
xchg
cmp
and
dec
jne
lods
in
xchg
movl
pop
je
xor
sbb
lahf
adc
mov
fsubr
sub
mov
mov
loop
data16
andl
and
sbb
imul
dec
cmpsl
mov
dec
sbb
mov
in
sti
fs
lret
or
mov
js
sbb
popa
xor
bound
in
aaa
jb
das
movsb
sub
xor
dec
das
test
mov
fidivrs
mov
rol
xchg
jmp
adc
cmc
idivl
popf
gs
xchg
stc
pop
sbb
testb
repnz
inc
mov
xchg
je
push
and
inc
clc
jo
pop
dec
dec
inc
mov
test
lret
and
mull
mov
mov
jbe
sbb
into
adc
add
push
fisttpll
cs
cmc
insl
pop
cltd
pop
sbb
add
test
mov
and
cs
sti
std
push
push
jno
pop
pop
xchg
fsubr
mul
inc
loope
jns
stos
jl
mov
push
inc
lds
inc
call
int3
ljmp
out
sub
pop
aas
jle
inc
xor
push
mov
mov
stmxcsr
inc
or
xchg
sub
add
repnz
cld
out
and
out
sbb
dec
xor
lcall
jle
cmp
and
in
ret
dec
cs
inc
add
dec
sub
pop
xchg
ss
outsb
xor
sti
and
clc
lods
mov
jnp
cmp
mov
movl
pop
fprem
inc
lods
xchg
push
pusha
mov
scas
adcl
fcompl
jns
lods
lcall
cmc
and
push
adc
lock
movb
fdivrp
add
mov
in
mov
daa
in
adc
mov
stos
dec
mov
clc
pop
sahf
dec
jmp
fcmovu
mov
adc
push
gs
adc
xlat
xchg
add
lods
sub
inc
fs
jle
fmuls
xchg
sub
enter
xlat
xor
or
cmp
dec
jns
xchg
insb
leave
rclb
je
addr16
cmpsb
iret
and
push
adc
sbb
and
imul
cmp
loopne
stos
call
lods
push
xor
icebp
popa
mov
sub
sbb
lods
pop
adc
scas
out
xor
cmp
mov
ljmp
pop
xchg
rcrb
stos
cmp
fwait
bound
mov
push
or
int
dec
ds
adc
xchg
adc
in
and
add
and
addl
les
pop
sbb
inc
in
lcall
repnz
adc
push
pop
ds
dec
mov
fisttps
shl
inc
sahf
adc
dec
leave
out
pop
leave
leave
je
pop
add
mov
test
mov
add
sbb
inc
mov
sbb
mov
add
sbb
repz
sub
cmpl
popf
roll
repnz
push
shlb
add
aas
gs
movsl
pop
xchg
inc
mov
add
mov
adc
mov
cmpsb
lret
push
push
lret
or
test
icebp
rorb
faddl
add
aas
cltd
xchg
pmaxsw
mov
adc
rclb
mov
in
clc
fxch
push
sbb
dec
push
hlt
cmp
mov
mov
cmp
imul
gs
nop
jge
mov
shlb
and
div
les
pop
cmpsl
mov
rorl
inc
xchg
cli
pop
lret
mov
icebp
inc
imul
cmpsl
stc
xchg
xchg
add
ret
sbb
sti
xchg
add
or
fisubrl
in
jmp
jmp
sub
adc
adc
fdivrs
xor
dec
mov
mov
es
mov
or
clc
mov
pop
sub
test
nop
cld
add
imul
jecxz
xor
jl
push
and
insl
add
in
int3
xchg
mov
add
into
pop
cmp
js
test
sub
sub
js
arpl
cmp
inc
int
mov
xor
sub
mov
add
dec
or
mov
add
xchg
jae
pop
mov
mov
ljmp
sbb
jmp
pop
ljmp
lea
xor
mov
js
adc
movsl
lahf
mov
pop
stos
enter
pop
call
call
jno
inc
xchg
shlb
and
jo
and
std
push
lods
dec
repz
mov
and
mov
inc
adc
add
mov
jnp
xor
loopw
xor
movsl
inc
int
leave
sub
imul
cmpsb
data16
das
decl
cmp
sahf
push
faddl
iret
inc
and
rcll
push
jb
or
and
sbb
xchg
mov
shlb
inc
mov
push
mov
mov
inc
cmp
stc
push
pop
xchg
inc
cmp
iret
jecxz
mov
jle
insb
sbb
and
xor
jp
adc
adc
je
or
sahf
popa
mov
ds
fistps
pop
add
mov
cwtl
loope
push
cmp
fiaddl
sysret
xor
ret
imul
rcrl
testl
call
dec
mov
insb
mov
xchg
pop
xchg
ret
xchg
vhaddpd
pop
mov
mov
or
in
clc
push
in
sbb
jle
into
jns
dec
and
mulb
push
dec
stc
dec
dec
mov
pop
rcrl
cmpsl
out
dec
in
mov
rcr
xchg
xchg
sarl
int3
mov
jge
pop
loop
sahf
popa
out
in
pop
dec
dec
push
fbld
jle
cmpsl
or
addr16
mov
rorb
jl
aad
out
out
push
inc
pusha
inc
into
push
rclb
arpl
adc
or
xor
out
fcmovne
inc
mov
loopne
adc
xlat
cmp
jne
jmp
mov
ret
adc
icebp
xor
insb
push
icebp
sbb
xor
dec
push
out
adc
jne
sahf
lcall
dec
das
loope
jns
jo
addr16
in
mov
cmp
adc
jle
push
movsb
xchg
into
and
dec
mov
int3
mov
jbe
int3
cmp
movsb
xchg
test
sub
mov
jge
inc
movups
and
cmp
mov
dec
jmp
inc
xchg
into
bound
pop
out
mov
sti
push
cmp
xor
test
jmp
incb
mov
es
add
cld
or
cmpsb
and
pop
cmpsl
arpl
fnstsw
repz
add
lods
bnd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
jae
fsubrp
jge
popa
rcrb
daa
sbb
ja
xchg
sarl
and
mov
xchg
sbbl
insb
jb
cltd
cs
out
loopne
xor
ret
dec
pop
out
sbb
mov
adc
andl
loope
sbb
pop
pop
sub
dec
xchg
aad
leave
sahf
pop
add
inc
push
xchg
jp
cld
sub
push
jb
int3
xor
and
iret
push
dec
cmp
pop
dec
data16
jp
sbb
fsubl
movsl
mov
ljmp
or
jns
inc
add
mov
cltd
jle
ds
in
aad
pop
movsl
add
jmp
js
test
jl
adc
pushf
mov
mov
xchg
jo
rcl
fstl
sub
imul
and
xor
mov
sarb
jg
mov
add
ljmp
inc
mov
and
ja
ljmp
lods
and
mov
pop
out
mov
je
xlat
pop
sbb
popl
pop
aam
jge
icebp
cmp
lds
cmc
adc
mov
jle
in
jns
and
shlb
ss
das
fwait
pop
xchg
scas
lahf
or
repz
or
rcl
cmp
into
imul
xlat
movsb
dec
lcall
push
ss
fisubrs
fsts
mov
mov
out
jecxz
movsl
pop
pop
ret
andb
mov
dec
cmp
test
jp
push
fsubl
cmp
pop
adc
or
jl
fcoml
pop
jbe
or
es
mov
je
fwait
inc
add
dec
jge
add
or
sbb
and
cmp
push
push
cmpsl
orb
pop
lds
mov
adcl
mov
int3
and
pop
dec
out
inc
xchg
mov
hlt
jbe
orb
mov
pop
mov
leave
push
icebp
sti
enter
imul
cmp
add
syscall
cmp
scas
xchg
pop
pop
ljmp
loope
int3
and
mov
push
mov
fdivs
mov
inc
lret
xchg
rorl
inc
call
mov
rcrl
sub
xor
adc
lock
xchg
shll
mov
hlt
fidivl
shrb
cmc
sbbb
lock
pop
shll
testl
mov
in
fs
jmp
insl
sbb
cli
scas
push
push
enter
push
and
and
mov
test
adc
andl
in
xor
sbb
cli
mov
ror
push
adc
lahf
and
sub
bound
or
mov
add
mov
enter
fisubrs
push
andw
mov
push
or
in
fistpl
fimuls
pop
xchg
enter
aam
lahf
sbb
mov
movsl
ficoms
mov
aad
out
push
mov
mov
pop
mov
xchg
or
and
push
xor
outsl
and
jmp
add
mov
and
lahf
push
and
cmpsl
sti
push
pop
and
push
cmpsb
cmpsb
mov
inc
cld
rcrb
sub
push
pop
insl
sbb
std
dec
gs
dec
sub
nop
out
mov
out
cmpsb
pop
add
push
ror
outsl
andb
xor
push
in
mov
push
fwait
into
repnz
mov
and
add
mov
sti
lret
ds
push
shl
jp
out
movsl
pushf
scas
std
fiadds
popa
push
rcll
push
pop
in
or
popf
add
sbb
jl
jmp
ja
xor
mov
lock
clc
aam
push
imul
push
add
jnp
fisubrs
sub
xor
xchg
bound
aas
mov
dec
xor
fwait
ret
das
jle
icebp
hlt
xor
das
testl
sub
rcrl
std
and
js
lret
in
and
push
inc
or
cmpl
adc
shlb
sub
xlat
pop
movsl
add
movsl
loopne
cmp
jb
add
dec
loop
cmp
mov
data16
mov
adc
loop
fs
add
jb
push
sahf
stos
scas
cmp
sub
sbb
add
scas
cmp
lods
stos
mov
int
int
and
mov
enter
xchg
lcall
popf
ja
or
shrl
movsb
jle
mov
lahf
in
dec
cmp
loope
dec
cmp
mov
sub
sub
lret
pusha
sbb
or
lods
xor
adc
int3
repnz
mov
ret
push
sahf
mov
in
cmpsb
cmc
leave
stc
dec
jmp
inc
and
inc
jmp
mov
and
sbb
stos
and
pop
dec
inc
lock
mov
cmp
jg
pop
insl
icebp
lock
int3
arpl
mov
loopne
jmp
mov
es
adc
inc
jle
adc
lahf
outsb
xchg
je
push
pop
scas
pop
cmpsb
xchg
cmpsl
inc
test
jecxz
xor
pop
pop
or
jle
stos
jecxz
jns
jnp
lahf
ss
add
add
add
cltd
shlb
aad
push
addb
push
sti
outsb
cmp
fstpt
daa
lcall
in
ret
dec
in
outsb
in
and
les
dec
aas
es
popf
dec
dec
xchg
loop
jge
sbb
sub
mov
pop
std
sbbl
arpl
adc
ficoms
sbb
sti
jmp
js
jno
repz
lcall
sbb
push
popf
adc
sub
inc
push
push
adc
shll
hlt
push
sbb
push
push
cmpsl
decl
adc
mov
fs
addr16
pop
shrb
je
sub
push
xchg
repnz
lock
push
andl
mov
or
insb
ljmp
xor
pop
fadds
addr16
fwait
jl
sub
test
loope
out
ds
xchg
and
minps
cmp
sbb
sahf
pop
and
mov
loope
je
mov
mov
mov
cld
roll
sub
into
add
xchg
nop
jns
fldl
jne
push
dec
ss
cmp
push
clc
adc
sbb
roll
pop
cmp
jecxz
pop
and
cmc
cld
filds
adc
mov
fyl2x
cmp
jge
cmpsb
push
push
ret
ret
sahf
pop
fadd
cmpsb
cmp
fucomip
sbb
or
sbb
jns
or
les
pusha
dec
jno
mov
sarl
jne
aad
notl
jns
imul
push
js
lods
xor
mov
icebp
push
xchg
sti
cltd
sub
dec
push
dec
loope
jle
xor
jecxz
xor
pop
gs
jl
xor
xchg
lods
imul
pop
cmp
arpl
and
pop
sti
int3
icebp
sahf
fnsave
and
mov
xchg
sub
aad
fstl
jne
or
and
stos
mov
addr16
rolb
mov
cmc
inc
dec
cmpb
fildll
inc
fs
mov
mov
cltd
test
adc
add
push
fmul
push
push
cmc
adc
stc
clc
cltd
iret
xlat
repnz
call
pop
or
mov
lods
cmp
stos
sub
es
sub
xor
mov
lock
out
popf
mov
sbb
call
mov
clc
lods
addl
cwtl
cmp
loopne
pop
aam
popa
adc
or
js
rclb
push
sti
dec
add
insl
cmp
sbb
mov
inc
js
nop
push
mov
fwait
pop
jne
testb
pop
sub
outsb
mov
mov
test
sarl
xor
add
js
iret
ljmp
rcrb
cwtl
xor
sbb
pop
cmp
sub
fdivp
mov
cmp
dec
jmp
gs
mov
imul
pop
das
lea
addr16
aad
mov
sbb
push
xchg
call
dec
clc
fst
or
lods
jp
xor
sbb
sub
sbb
jno
mov
mov
lea
xor
add
xchg
mov
cmpsl
fidivs
popa
gs
in
dec
ljmp
clc
pop
test
inc
xchg
call
cmp
adc
and
loope
xchg
pop
fwait
sbb
mov
mov
orl
adc
in
or
out
aam
mov
jnp
aaa
mov
bound
inc
adcl
push
inc
out
mov
xchg
stos
jno
jmp
xchg
push
subb
cmpsl
mov
insl
add
daa
xchg
fildl
out
lahf
les
jg
fcmovu
mov
shrl
mov
mov
lods
mov
push
dec
sbb
xor
cmpsl
in
rorl
stos
nop
stc
repnz
loopne
push
loopne
in
mov
sub
push
pop
jbe
ja
sbb
xchg
out
enter
push
in
pop
mov
or
lods
dec
lahf
push
mov
arpl
or
nop
insl
mov
pop
push
into
cwtl
add
pusha
orb
or
mov
push
mov
xlat
je
aaa
sbb
dec
jg
inc
sbb
sti
xchg
mov
sbb
rclb
fdivs
pusha
mov
lock
and
inc
fstl
lret
shll
inc
adcb
and
mov
sbb
xor
mov
repnz
mov
or
mov
mov
nop
test
ds
mov
in
fisubrs
xchg
add
stc
sahf
les
js
add
mov
loope
cmp
jg
daa
nop
sahf
mov
test
cld
lcall
shrl
scas
add
xor
js
adc
pause
lods
and
jmp
xchg
pop
adc
sarl
jge
mov
imul
test
mov
imul
call
pushf
and
cmpsl
imul
imul
fmuls
dec
ret
push
insb
popa
sub
shll
mov
mov
inc
cmp
rol
jge
fidivs
add
pop
adc
dec
andl
and
sub
pop
ljmp
pop
insl
push
in
mov
cmp
adc
std
jns
rcll
lret
push
sbb
popf
and
aam
push
and
insb
cmp
pop
notb
xor
push
nop
data16
arpl
leave
jge
sbb
rep
mov
jne
pop
sbb
fcmovnbe
jp
xor
fiaddl
fnstsw
mov
sbb
sbb
cli
popf
shll
sub
push
jae
lods
popa
out
mov
stos
xor
pop
inc
sbb
insb
push
int
out
dec
mov
cld
and
xchg
ljmp
lret
mov
insb
xchg
xchg
or
ljmp
dec
nop
das
mov
or
test
lock
xchg
inc
mov
push
movlps
fnstenv
inc
scas
popf
jl
ljmp
scas
and
leave
adc
xor
xchg
fwait
add
or
inc
leave
inc
dec
push
sub
out
dec
or
xlat
addr16
xor
mov
in
sub
into
mov
cmp
xor
outsb
add
dec
lret
mov
fcoms
out
jbe
js
popf
hlt
mov
adc
dec
jg
fstpl
gs
ss
fdivrl
xchg
mov
push
push
dec
fs
xor
jb
in
mov
test
shlb
add
jnp
xor
andb
imul
pusha
scas
mov
cwtl
mulb
sub
add
mov
inc
or
add
add
jno
mov
lock
mov
aam
sub
or
sbb
mov
mov
push
test
xchg
mov
xchg
push
fcmovb
dec
xchg
xchg
push
out
dec
jb
jae
scas
test
xor
bound
pop
subb
popa
xor
insb
loope
out
sbb
sub
push
iret
cmp
je
fistpll
xlat
test
shll
sbbb
je
push
jno
adc
xor
inc
addr16
lds
stc
cmpsl
hlt
xchg
add
push
mov
hlt
and
adc
jg
in
xchg
stos
mov
inc
mov
jecxz
aad
adc
popf
icebp
mov
xor
jmp
aam
sbbl
stos
lock
xchg
mov
inc
xchg
jmp
movsl
xor
mov
insl
mov
imul
ss
xor
rolb
nop
pop
lahf
adc
push
push
syscall
fs
dec
jno
lods
pop
mov
cld
and
fbstp
inc
mov
cmp
cmp
je
or
ljmp
je
pop
inc
mov
push
jne
xor
push
push
add
ret
aaa
out
aaa
cltd
ficoml
jno
js
mov
movsl
fistpl
pop
or
xchg
ficomps
mov
pop
mov
mov
loop
orb
push
rcrl
arpl
xlat
add
iret
ret
fmuls
mov
adc
jne
jmp
inc
and
mov
scas
js
jmp
cs
lcall
push
test
cmc
in
outsb
arpl
push
adc
sbb
loope
int
ffree
daa
pop
jp
jg
inc
sarb
and
scas
push
pusha
cmp
mov
shll
sti
ret
or
stos
lea
insb
imull
daa
xchg
sahf
cwtl
flds
int3
adcl
cltd
addl
mov
pop
daa
jne
push
dec
clts
xchg
rol
jbe
out
jp
pop
insb
or
or
sarb
mov
and
in
mov
insb
or
loope
addl
imul
mov
arpl
cmp
add
cmpsb
push
lahf
sahf
popf
in
push
push
cmpsb
scas
hlt
add
fcomi
pop
in
popa
mov
pop
pop
jge
lock
push
mov
xchg
mov
scas
push
push
ljmp
xchg
dec
ja
in
fidivl
xchg
xchg
popf
mov
sub
push
scas
pop
ret
push
movsb
idivb
pop
lds
fisubs
loope
lock
clc
fdiv
jmp
lret
dec
pop
loopne
mov
jne
pop
sbb
add
jb
xchg
icebp
cs
test
jmp
mov
and
or
push
leave
arpl
dec
cmpsl
cmp
add
xor
pop
into
cmpsl
int3
je
stc
insl
add
adc
rcrl
or
jg
push
push
pop
rcrb
loop
inc
orb
rolb
cld
push
loop
jno
xorb
scas
push
push
pop
mov
dec
rcrb
pusha
jb
shlb
mov
push
andb
jnp
stos
in
loop
iret
in
stc
shlb
dec
adc
push
stos
popa
push
xchg
push
call
and
add
add
cmp
fs
and
xor
lods
push
push
aas
jne
dec
leave
xchg
push
in
mov
add
xchg
call
ret
jb
xchg
xchg
sbb
stos
fcomps
in
cli
fisttpl
out
sub
repnz
mov
rclb
push
out
or
mov
push
cltd
addb
mov
adc
cmpsl
ror
mov
adc
mov
test
push
pop
fptan
jne
in
mov
jmp
jmp
test
lret
push
or
dec
push
adc
push
xlat
sbb
inc
aam
mov
aas
ljmp
shrl
pusha
xchg
das
push
imul
nop
push
movsb
inc
shlb
adc
push
xchg
pop
adc
mov
ret
cmpb
mov
lock
jb
mov
imulb
jge
mov
cs
or
ljmp
push
jmp
in
dec
adc
ret
into
xchg
cmp
or
loopne
cwtl
push
adc
jno
jp
mov
out
push
sbb
and
fs
mov
pushf
xor
fwait
push
leave
loopne
mov
add
push
pop
and
sahf
leave
cmpsl
xchg
push
pop
push
add
cmp
pop
imul
or
out
daa
sbb
add
shl
push
xor
push
clc
repnz
imul
pop
mov
xor
jmp
pop
inc
mov
nop
loope
daa
daa
outsb
fs
ret
mov
cs
jmp
test
sbb
js
mov
lea
jmp
out
std
daa
mov
sub
mov
mov
sbb
cli
in
aaa
data16
pop
mov
cltd
std
enter
lret
stos
fldt
xchg
call
jge
in
pop
pusha
jne
lret
pop
cmpsb
sbb
adc
decb
sbb
xchg
pop
adc
inc
push
add
in
dec
rcrb
rcrl
push
push
shll
mov
sub
sbb
jne
aam
and
and
in
mov
rcr
mov
dec
and
inc
jle
xchg
cmp
cmp
jmp
jl
repz
test
cmp
mov
stc
inc
dec
mov
sub
xchg
and
pushf
stos
imul
sbb
cmp
dec
out
jl
fmuls
cmp
jbe
loop
mov
lods
add
nop
lods
sub
mov
sub
clc
insb
push
and
lods
sahf
mov
jmp
hlt
push
jns
mov
push
push
mov
add
mov
in
dec
in
push
sbb
fs
push
outsl
jae
push
mov
push
jo
add
or
push
cmp
lret
in
aas
mov
aas
mov
mov
lods
jae
adc
repz
sbb
inc
stos
nop
xchg
mov
mov
aam
xchg
adc
dec
mov
cmpsb
lods
enter
mov
and
dec
dec
mov
cmpsl
mov
lea
pop
mov
cmp
shrl
into
mov
lahf
and
fs
add
jmp
jnp
ret
stos
jnp
sbb
sarb
push
fcompl
cmp
or
dec
into
inc
push
xchg
jae
outsb
insb
cltd
pop
out
lahf
jo
mov
add
fs
sub
arpl
mov
rcll
mov
and
or
pop
subl
or
mov
sub
dec
daa
cli
scas
mov
pop
push
gs
or
jns
loope
lods
loopne
int
repnz
add
es
out
mov
mov
int3
in
loopne
cmp
dec
jno
std
jo
inc
lock
subb
jmp
cmp
test
jl
sbb
or
enter
mov
mov
push
out
xchg
repz
xlat
jg
stos
sub
add
iret
pop
mov
fiadds
or
add
loope
stos
push
rol
out
dec
inc
imul
xor
ja
lock
cmp
fmul
mov
mov
dec
int
sub
push
stos
ret
imul
inc
or
inc
adc
and
imul
insl
fidivrs
fcmovbe
xchg
icebp
inc
outsb
in
xor
in
jnp
push
adc
push
mov
pop
sete
cmc
push
push
stos
inc
shll
or
pop
fstp
out
cltd
inc
inc
flds
or
cmovno
neg
inc
call
stos
mov
jg
xchg
jno
xchg
dec
hlt
out
cmp
dec
xchg
adc
aam
sub
test
outsb
dec
jno
jb
into
cwtl
rcll
into
daa
adc
fsubrl
mov
cmp
or
loope
mov
inc
push
nop
jbe
fs
negb
scas
and
or
dec
mov
mov
lret
and
fisttpll
mov
js
sbb
shrb
push
fs
enter
pop
movsb
ret
cmp
sub
leave
sub
les
mov
mov
dec
call
jnp
movsb
ljmp
shrl
les
sti
enter
lret
mov
lods
stos
addb
inc
sahf
test
inc
xchg
insb
repnz
fs
pop
cs
inc
addb
xchg
addb
test
adc
mov
mov
mov
cmp
mov
jecxz
cmpsl
and
pop
push
pop
adc
dec
dec
sub
mov
mov
mov
jecxz
or
loop
and
inc
jmp
jmpw
jb
or
enter
cmpb
lods
cmp
sbb
std
fadds
popa
inc
das
imul
sti
test
icebp
aam
xor
ja
test
and
xchg
or
int
addb
sbb
and
sub
mov
lea
rcr
mov
mov
stc
outsl
cld
add
xor
sahf
dec
jb
xchg
subl
sti
mov
pop
jp
test
cmp
lds
mov
ss
sub
mov
imul
mov
jge
ret
push
push
inc
aam
lcall
xchg
mov
popf
adc
std
mov
repz
mov
mov
out
mov
cmpsb
pop
xor
mov
hlt
xor
xor
je
cwtl
cmc
jl
jnp
xchg
dec
mov
sar
test
mov
jecxz
mov
mov
shlb
and
jecxz
dec
xor
imul
push
rorl
add
popa
xchg
xor
dec
push
ljmp
cmpsb
nop
addr16
adc
sub
or
pop
pop
adc
fs
push
sbb
outsb
sub
sahf
out
and
adcl
clc
hlt
xchg
loopne
rcll
adc
push
jo
sbb
inc
xor
inc
outsb
push
xor
mov
and
and
test
pop
incb
fs
mov
pop
pop
or
adc
and
mov
cli
xlat
sub
jecxz
shrb
call
fisttpl
ljmp
movsb
push
scas
mov
xchg
addl
xchg
cmp
mov
jno
sub
xor
xchg
jo
pop
mov
leave
adc
gs
fs
fildll
addr16
in
jbe
andb
dec
sbb
xor
je
adc
call
leave
dec
outsb
inc
adc
shrb
add
dec
fcomp
sub
dec
sub
or
dec
and
lahf
mov
push
popf
fimuls
fiaddl
inc
xor
xorl
pminub
adc
xchg
or
idivl
rorb
mov
filds
aad
aad
rep
or
inc
jbe
ret
test
shr
aad
dec
add
ljmp
inc
fsubrl
and
in
stos
sti
popf
js
enter
xchg
xchg
mov
mov
fwait
and
jmp
xlat
mov
pop
sub
or
roll
out
adc
jb
push
sub
jmp
dec
mov
adc
les
call
add
xor
in
cmp
icebp
jecxz
ss
xchg
push
xor
inc
push
lods
adc
hlt
push
in
js
jge
int
ja
sbb
push
mov
mov
daa
clc
aas
out
insb
dec
sbb
mov
aaa
fsubrl
or
vcmpss
insb
imul
pop
add
enter
push
dec
xor
sub
jl
jecxz,pn
cli
loopne
mov
cmc
out
test
mov
xchg
data16
cwtl
adcb
idivl
inc
test
sti
test
arpl
dec
and
jmp
adc
sahf
ja
cmp
xchg
test
jae
enter
lock
sahf
sub
pop
das
mov
push
xor
int
pop
sahf
adc
mov
hlt
adc
sahf
push
lods
add
lret
call
xchg
clc
lret
loopne
adc
sub
mov
xor
out
mov
in
xor
sub
pop
jmp
mov
push
aam
add
loop
icebp
push
sub
adcl
push
mov
insl
test
ljmp
adc
icebp
or
push
inc
mov
repz
adc
add
dec
int
mov
rcll
xchg
and
sub
icebp
inc
pop
jle
sub
out
dec
mov
subl
sbb
ljmp
cmp
xchg
scas
xor
jno
inc
jae
push
adc
pop
add
addl
cmp
xor
pop
cmp
cmp
push
lcall
iret
sub
cmpb
inc
call
insl
cmp
and
mov
fs
pop
cmovs
test
jns
pop
inc
outsb
divl
js
jns
test
inc
iret
shrl
out
mov
jg
out
outsb
repz
inc
cmp
mov
daa
jo
insb
xor
fwait
sbb
xor
sbb
jp
jge
dec
adc
jbe
xchg
clc
lock
mov
jb
lock
mulb
push
pushf
sub
jl
jmp
je
in
mov
aad
jmp
cmpsb
jbe
aad
mov
idiv
pop
test
push
push
inc
addr16
and
cwtl
mov
mov
push
pop
int3
or
push
jno
push
adc
and
dec
xchg
ret
aaa
xchg
movsl
cwtl
push
xor
iret
mov
sbb
daa
rcll
and
jge
jns
jp
mov
add
push
pop
les
mov
mov
inc
xor
dec
xor
out
pop
inc
add
add
jecxz
call
cli
sub
cmc
pop
imul
stos
stc
test
scas
or
popf
out
pop
data16
test
movsl
push
aas
into
mov
lcall
mov
cwtl
sbbb
push
pop
call
xchg
pop
sub
cmpsl
adc
gs
mov
test
xchg
movsb
xchg
push
imul
cmc
sub
jbe
mov
scas
daa
dec
out
lcall
dec
inc
jmp
xchg
adc
pop
push
mov
pop
notl
sub
mov
mov
arpl
lret
jns
jl
push
jno
in
andb
lods
jle
or
jle
push
fisubrs
mov
mov
dec
test
test
mov
pop
cmpb
cs
inc
push
hlt
lcall
and
ds
push
pop
dec
fiaddl
or
out
xchg
or
mov
cmp
pop
push
pop
or
iret
xchg
es
push
pop
inc
les
mov
stos
sbb
testb
icebp
mov
ffreep
int3
lock
gs
xlat
pop
ljmp
scas
push
stos
pop
lea
divb
dec
cmp
stc
movsl
inc
aaa
cltd
scas
bound
adc
jle
std
dec
jne
ja
jae
cmp
adc
pop
repz
ret
ret
or
rorl
in
outsl
add
mov
pop
pop
icebp
jg
scas
xchg
inc
ss
mov
jns
ss
inc
arpl
lock
je
cli
mov
pop
notl
xchg
ret
in
outsb
sub
dec
ds
clc
cltd
gs
sbb
push
pop
ja
sbb
jno
push
jns
xchg
adc
mov
daa
and
cmp
aam
mov
jmp
mov
pop
adc
int
pop
adc
sti
test
iret
mull
ja
pushf
addl
cmp
loop
sti
dec
icebp
xchg
xor
jl
aam
imul
aam
rorb
pop
movsl
cmp
jbe
popl
fcomps
xchg
fsts
pop
inc
adcb
shr
mov
jae
lcall
add
lea
dec
inc
dec
xor
or
mov
in
dec
mov
adc
jo
sbb
cmpsl
add
insl
ja
jbe
adcl
stos
addr16
push
sti
sbb
mov
iret
cmc
pop
call
and
insl
ret
fstpl
subl
js
out
adc
jne
and
mov
movsl
cli
add
lock
int
clc
dec
fnstcw
sbb
notb
pop
adc
adc
testb
stc
xchg
mov
loope
cmp
jne
push
mov
sub
jb
pop
push
or
fsts
aad
outsb
pop
lock
add
and
cmp
jno
mov
ret
jo
xlat
lret
outsb
pop
push
and
loope
cmp
push
lock
add
or
and
lret
inc
dec
xchg
imul
pop
fcoms
push
mov
or
jmp
in
fimull
sahf
cmp
dec
enter
std
test
dec
scas
leave
mov
js
divb
pusha
sbb
mov
je
in
insb
fsubrl
sbb
sub
movsl
and
popf
push
xor
push
int
pop
sbb
sub
ret
int3
cmp
add
xor
sbb
sahf
cmp
cmpl
pop
icebp
cmp
xchg
shl
and
dec
xorb
roll
or
adc
jno
or
iret
int3
popa
sbb
aad
jns
mov
aaa
sahf
insb
repnz
and
push
jmp
mov
addr16
jmp
xchg
inc
je
cmp
sub
sub
popf
cli
out
std
push
or
xor
stos
mov
into
jmp
lock
ret
iret
dec
rorl
nop
adc
ss
lahf
pusha
stos
mov
push
mov
mov
mov
movsl
adc
test
or
clc
and
sbb
addl
dec
or
mov
repz
pop
test
adc
icebp
sbb
nop
fwait
dec
or
or
arpl
pop
fwait
cs
dec
or
out
jp
lret
push
mov
nop
push
repnz
jnp
pop
mov
xchg
mov
mov
shr
negl
xor
mov
add
bound
nop
mov
xchg
dec
bound
sahf
xchg
shrl
add
in
and
cltd
push
cmp
loop
add
aas
mov
sbb
fsubl
pop
imul
orb
push
lds
cmc
sbbl
cld
pop
jo
sarb
daa
xor
mov
push
and
jae
out
push
daa
mov
fwait
cld
pop
adc
out
push
dec
sbb
ret
xchg
out
insb
jo
popf
dec
sbb
add
adcb
lret
lock
fwait
mov
in
imul
xor
mov
xor
pop
inc
out
push
and
add
cmpsb
arpl
mov
mov
test
lcall
mov
mov
mov
pop
jge
mov
add
adc
mov
pop
push
push
mov
loope
leave
jb
outsl
sub
rol
fiaddl
adc
fmul
ss
adc
dec
sbb
xchg
fdivp
adc
mov
pop
pushf
jno
lods
ret
fidivrs
mov
out
push
xor
push
sarb
dec
insl
inc
lock
xchg
popf
adc
xchg
mov
cmc
lock
fisttps
sbb
mov
fidivrl
cs
sub
push
cmp
popa
sahf
xchg
pop
aad
and
cmp
das
jge
in
dec
dec
jg
fildl
scas
fstpl
and
add
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
fdivl
rcrb
xor
in
addr16
jle
push
imul
push
add
push
xor
movsl
icebp
jecxz
jae
pop
lock
sbb
add
lahf
cmc
lds
add
js
jg
paddw
aad
ret
sub
movsl
out
daa
insl
and
cwtl
adc
pop
pushf
stos
or
lods
test
xchg
fidivrl
push
xchg
xor
ljmp
int3
dec
icebp
jle
fs
push
adc
inc
imull
xchg
fwait
out
inc
mov
mov
mov
cmpsl
jmp
cmp
pop
leave
out
mov
sbb
add
fiaddl
add
push
test
mov
sub
push
inc
cmp
and
addr16
sbb
adc
lods
fisttpl
pop
inc
mov
inc
push
mov
stos
or
test
out
jmp
dec
psubw
mov
add
lcall
es
add
cmp
lahf
xchg
dec
adc
lea
pop
push
xchg
pushl
mov
dec
into
loope
xor
nop
and
push
jae
cmpsb
loop
mov
call
jne,pt
loop
jge
jae
cmp
popa
icebp
aas
inc
fwait
les
lea
pop
dec
xchg
mov
xchg
lsl
lods
push
sbb
push
push
xchg
mov
cmpb
push
insl
scas
lcall
push
jbe
stc
sub
cmpsl
loopne
mov
cmp
hlt
mulb
xor
dec
push
jle
loopne
push
bound
sub
clc
jmp
js
xor
mov
jbe
imul
and
ds
in
rol
cwtl
mov
cmp
je
pop
mov
add
test
das
ret
loop
sbb
js
icebp
xchg
lret
loop
pop
test
jmp
lcall
scas
or
mov
xchg
cmp
js
jne
ret
sub
mov
mov
jbe
dec
mov
inc
xor
pop
sub
push
cmp
scas
inc
fsubrs
int3
pop
push
std
cmp
mov
push
daa
sub
ja
inc
sub
fwait
into
jp
inc
pop
push
adc
jg
lds
sbb
push
xchg
inc
jo
xchg
testb
mov
lea
mov
pushf
dec
or
xchg
mov
std
mov
pop
fisubs
pop
mov
add
bnd
push
sahf
mov
fmulp
clc
rorb
stos
sbb
and
mov
bound
std
mov
fimull
jae
jns
pop
and
pushf
add
je
iret
or
dec
dec
imul
inc
dec
mov
push
clc
loopne
push
movsl
or
pop
xchg
adc
push
pop
sub
mov
mov
lret
push
fmull
scas
testl
jo
sahf
or
inc
mov
mov
add
aad
adc
sbb
dec
ret
nop
jmp
dec
push
sti
call
adc
jge
js
sbb
out
cld
dec
adc
and
dec
mov
imul
xor
ficomps
ja
push
adc
sub
jno
pop
jno
add
lea
aaa
push
sbb
mov
test
test
cld
xor
sub
cmpsl
leave
xor
mov
sbb
cwtl
or
insb
mov
jmp
lret
cmp
outsb
test
dec
data16
es
mov
loop
pop
jne
jb
lret
xlat
xchg
adcb
outsl
mov
mov
in
shlb
and
imul
dec
pop
fwait
out
adc
popf
in
adc
pop
mov
in
hlt
jle
mov
cmp
aad
pop
dec
aad
xor
scas
pop
popf
inc
fs
test
or
mov
cmp
inc
outsl
mov
dec
mov
xchg
and
loope
cmp
xor
aad
add
js
clc
pushf
pop
xchg
out
hlt
lret
bnd
cmp
cmp
out
mov
mov
lea
in
pop
data16
inc
imul
adc
stos
das
mov
inc
push
das
xchg
movsb
loop
imul
adc
or
popf
mov
aaa
fcomi
inc
fldt
mov
lahf
shrb
test
pop
repz
sub
inc
pop
sub
incl
or
cmpsb
cmp
push
mov
inc
jl
cld
dec
hlt
xchg
bound
mov
mov
or
std
push
enter
enter
hlt
ret
sub
push
ret
jne
adc
movsl
mov
std
xor
loopne
pop
aam
fstps
addr16
bswap
push
pop
test
pop
dec
cwtl
pop
jge
cmpb
neg
mov
jp
fstpl
mov
or
cmp
cmp
mov
inc
dec
gs
clc
push
jp
xchg
or
and
setbe
sbb
sbb
pop
in
mov
insl
aad
ja,pn
mov
pusha
shlb
pop
or
inc
mov
jae
jns
jp
pop
fdivrs
jg
jmp
outsl
lock
add
shrb
xchg
dec
std
mov
lea
icebp
mov
imul
dec
adc
cld
jg
inc
out
add
ja
test
popf
into
jmp
inc
aas
subl
test
into
xchg
inc
scas
stos
xorl
pop
lcall
mov
inc
sarl
stos
pop
cmp
pop
push
ret
xchg
mov
stos
or
add
jecxz
lcall
popf
cli
jae
adc
mov
mov
xor
data16
or
cmp
js
je
push
dec
inc
jmp
hlt
inc
in
shl
ret
loope
ficoms
loop
cwtl
dec
xlat
lea
adc
lods
lahf
or
jp
stos
imul
mov
lea
mov
insl
dec
sub
icebp
lds
dec
stc
bound
mov
js
push
push
xor
data16
adc
inc
add
in
imulb
mov
popf
pop
addl
push
in
inc
or
mov
movsb
icebp
cmc
aad
xchg
push
inc
fists
lods
xor
mov
repnz
jg
stc
test
mov
dec
insb
iret
subl
pop
add
fstpt
cmp
push
mov
push
bound
jb
mov
pop
in
pop
dec
movsl
jge
test
aaa
shll
add
cwtl
rorl
outsb
mov
fwait
push
mov
dec
jecxz
adc
arpl
hlt
adc
lods
dec
lods
push
xor
mov
mov
dec
lcall
ja
loope
push
xor
das
add
fldt
aaa
and
fisttpll
mov
or
cmp
jl
inc
mov
stos
inc
rcrl
popf
adc
push
mov
mov
leave
or
and
jecxz
mov
inc
jl
shlb
and
dec
fucomip
mov
adc
fs
pop
into
push
pusha
xlat
pop
jb
ret
stc
lret
add
push
clc
loop
mov
xchg
cwtl
xchg
sti
push
mov
enter
and
fisttpl
sahf
mov
jns
out
mov
fiaddl
jae
pop
lds
bound
push
xchg
jge
in
fdiv
push
cwtl
or
xor
mov
sub
outsl
popa
scas
inc
negl
mov
xchg
mov
dec
jns
fdivrl
popa
icebp
mov
movb
pop
mov
jmp
int
fsubl
push
pushf
dec
or
mov
es
pop
mov
or
sarl
mov
cwtl
mov
out
push
push
popa
test
test
adc
sarb
and
out
enter
add
dec
aam
popa
les
pop
jno
loopne
fwait
pop
cmp
adc
dec
inc
add
xchg
es
mov
xlat
mov
lea
cmp
ljmp
mov
lahf
insb
lahf
and
jae
fwait
push
or
mov
and
fucomip
inc
xchg
or
dec
sub
sahf
add
fcmovnu
mov
fisttpl
mov
mov
inc
subl
cmp
movsl
stos
stos
jae
pop
in
nop
ljmp
test
xor
fsubrs
jbe
in
sub
jecxz
pop
into
mov
xchg
mov
adc
xor
shrb
mov
sub
inc
jg
in
push
dec
shll
into
repnz
filds
sub
std
out
bound
sub
xor
pop
push
push
sbbl
cli
or
inc
fidivl
xchg
test
push
mov
inc
fisttps
lahf
loop
lret
mov
aad
ljmp
cmp
push
mov
inc
cmp
into
fnstenv
inc
insb
out
dec
jno
ss
push
fwait
xor
push
sbb
inc
push
test
das
arpl
les
loop
jge
xor
arpl
popf
fistl
mov
std
scas
jnp
sub
arpl
scas
add
stos
loope
add
not
push
test
in
mov
jecxz
sbb
int3
mov
in
pop
inc
faddl
mov
cmpl
xchg
xchg
dec
dec
test
push
mov
jno
jp
mov
and
adc
or
lods
sub
out
enter
mov
repz
inc
sub
pop
pop
aaa
mov
jge
mov
push
mov
movsb
std
xchg
adc
mov
push
add
dec
fadds
jle
or
scas
jae
cmp
jecxz
sbb
inc
dec
cmp
jecxz
push
cmc
outsl
mov
inc
data16
or
add
outsb
mov
dec
and
mov
pop
inc
out
nop
sarl
xor
imul
clc
out
and
repnz
cmpsb
ret
push
and
pop
ret
inc
hlt
aaa
jbe
cmp
cld
mov
xchg
or
inc
xchg
xchg
cmp
or
xorl
jg
sbb
add
movsb
inc
clc
xor
into
inc
int3
pop
push
pop
xor
jmp
imul
jp
frstor
loope
das
inc
mov
jns
jnp
xchg
out
jo
aad
add
call
mov
add
and
and
loope
sub
into
pop
add
sahf
or
mov
dec
sbb
pop
int3
xchg
insl
movsl
adc
lea
cli
sahf
out
mov
ffreep
sbb
push
popf
lea
sbb
inc
cli
mov
lock
cmp
mov
xchg
xor
repz
dec
mov
jns
cli
xchg
rcl
cmp
xlat
loopne
clc
adc
push
cmp
aam
cmp
xchg
dec
sbb
cld
jae
mov
mov
cltd
cmp
data16
sub
out
outsb
jns
pop
aaa
pop
ja
or
gs
jle
rcrl
leave
insb
push
xor
push
je
fidivrs
bound
je
sti
aad
leave
sub
push
testl
push
js
in
inc
cmp
repnz
mov
int
xor
mov
mov
and
lret
mov
call
mov
fwait
jmp
inc
fisttps
mov
pslld
mov
dec
into
inc
or
and
mov
mov
icebp
dec
pop
je
daa
cmp
mov
insl
cli
push
scas
pop
dec
in
or
cmp
inc
out
jle
jb
fnstenv
repz
movsl
repz
fadds
addr16
testl
add
inc
lods
jo
xchg
mov
push
adc
adc
sti
mov
leave
push
hlt
xchg
icebp
rcrb
xchg
xchg
movsl
and
jbe
je
inc
adc
pop
insb
dec
sub
iret
data16
ret
push
testl
push
sarl
popf
push
jno
sub
jb
roll
rorl
mov
mov
in
adc
cltd
repnz
into
out
push
and
push
or
xor
cmc
push
lret
sub
lahf
mov
inc
fisubl
jg
adc
jmp
xor
mov
mov
mov
addr16
jbe
or
fdivl
scas
std
push
xchg
push
or
pusha
adc
mov
mov
xor
cmp
inc
pop
pop
mov
mov
push
fldl
jnp
or
stos
push
adc
push
mov
jnp
data16
and
sub
push
mov
jp
jge
cmp
shll
inc
ret
sbb
sar
aad
mov
xchg
mov
inc
std
add
add
sbbl
adc
sbb
rcrl
das
add
sub
les
lods
test
test
mov
xor
dec
mov
hlt
add
pop
pusha
mov
gs
pop
xlat
pop
add
ret
aaa
inc
and
scas
lock
lds
enter
add
call
call
repz
cli
inc
sbb
add
popa
bound
int3
xor
cmp
jmp
sarb
es
and
sarl
cs
ljmp
mov
out
das
rolb
pop
sub
push
mov
and
orl
popf
and
hlt
cltd
cmpsl
add
sbb
fsubl
repnz
inc
mov
nop
shrl
out
fwait
cmpsl
push
pop
sub
push
sub
loop
xlat
adc
cli
add
pop
out
mov
fdivl
sbb
adc
jge
inc
insl
out
push
sbb
andl
fidivs
insl
pop
in
jp
xchg
test
pop
jecxz
and
lods
add
ljmp
xchg
cld
push
sahf
pop
push
and
pop
addr16
test
leave
fldl
and
mov
int
push
push
push
ja
adc
fimull
insb
sti
cmp
add
sbb
outsl
lret
xchg
iret
xchg
mov
fldt
out
fwait
je
xchg
outsb
test
dec
dec
pop
xlat
loope
mov
fcoms
cmp
mov
in
xchg
adc
mov
in
mov
ror
mov
or
pop
sbb
push
mov
jno
jno
bound
push
pop
mov
aad
movsb
sub
xchg
lds
pop
mov
and
cmp
in
outsb
lods
xor
stos
imull
icebp
push
in
fldcw
jge
les
das
sub
sbb
add
xlat
in
add
xchg
fildl
std
in
pop
xchg
test
cmpsl
lahf
jno
xor
dec
jp
leave
movb
jne
dec
test
pop
into
xchg
popf
sbb
dec
mov
data16
cmp
xchg
mov
push
or
movsl
jnp
xchg
sar
lcall
mov
adc
and
xchg
jmp
ret
cld
loop
data16
cmp
mov
add
add
xchg
or
stc
arpl
add
cmp
lret
bound
lock
fwait
push
jp
movsb
out
adc
cli
cmc
test
ds
cld
arpl
or
mov
jne
xchg
popa
dec
sbb
cmpsl
outsb
scas
inc
jecxz
and
lock
mov
push
add
cmpsb
jl
mov
push
stos
in
adc
inc
jg
lods
fs
inc
mov
and
repnz
dec
mov
xchg
xlat
push
repz
jmp
pusha
cld
out
incb
inc
popa
out
mov
cmpsb
sub
mov
cld
arpl
jmp
cmp
mov
imul
or
and
cs
xor
das
aad
jmp
cs
pop
adc
cmc
lods
fsts
mov
movsl
in
test
xor
out
adc
mov
xchg
dec
jae
sbb
outsb
push
cld
cmp
movsl
mov
xchg
loop
mov
jne
push
out
inc
lods
inc
outsl
adc
loope
std
test
fildll
push
fldt
lods
mov
scas
in
es
sbb
sub
dec
popa
sbb
and
push
inc
imull
xchg
mov
sbb
sub
push
dec
fwait
daa
push
stos
add
or
flds
push
shll
push
pop
loop
mov
add
cmp
leave
push
jns
mov
rol
pop
mov
int3
push
dec
sti
mov
lret
inc
dec
out
mov
cwtl
xor
lods
sub
dec
xor
sub
test
es
sbb
insl
popa
jmp
xor
nop
pop
mov
push
jae
xchg
aam
or
test
mov
sbb
int3
cmp
inc
push
iret
test
daa
pop
repnz
inc
mov
add
icebp
das
lcall
pusha
xchg
ss
mov
inc
xorl
xor
fisubl
ficomps
mov
loopne
and
mov
aad
mov
xlat
imul
daa
mov
xor
or
aas
pushf
in
imul
repnz
xchg
call
js
lods
test
scas
inc
add
les
xor
inc
jmp
xchg
std
and
mov
cmp
adc
and
iret
inc
iret
mov
arpl
jae,pn
mov
insl
inc
lods
adc
pop
mov
dec
mov
in
imul
jl
ficomps
mov
bnd
sub
fcoml
decb
pop
lods
shll
pop
mov
test
loope
pushf
icebp
sbb
data16
ficoms
and
fsub
andl
dec
ss
pxor
sbb
sub
inc
mov
mov
mov
stc
cmpsl
jnp
repz
adc
sub
insb
mov
sbb
scas
and
push
mov
aad
out
jns
inc
stc
push
fcmovnu
lea
repnz
xchg
cmp
dec
fldcw
movsl
mov
ja
jno
sahf
add
ret
lock
fs
in
scas
testb
mov
xor
jae
sbb
xor
in
cmp
inc
icebp
cmpsb
lock
xor
pushf
pop
inc
loopne
jbe
repnz
sub
mov
jbe
in
pop
test
lock
push
fneni(8087
frstor
stc
lods
push
mov
fnstcw
xchg
lea
and
out
xchg
pushf
ss
call
ljmp
push
sahf
into
sti
sbb
sub
pop
mov
sbb
mov
add
jp
mov
sahf
cmpsl
sbbl
pop
dec
pop
sub
andb
mov
jmp
lcall
scas
cmc
mov
out
arpl
fwait
sub
ret
pusha
pop
sub
sbb
cmp
out
mov
stos
lea
inc
mov
add
dec
pop
jb
cmc
mov
xor
test
and
sub
fisttpl
xchg
dec
shll
fs
ljmp
fbstp
xchg
aad
leave
adc
and
sub
cmpsl
mov
jno
sub
sub
push
jnp
sbb
fiadds
out
push
adc
mov
pop
dec
arpl
pushf
dec
jnp
aam
les
out
pop
int
xor
mov
jmp
in
jmp
mov
push
mov
lods
mov
and
fidivrl
xor
test
out
xorb
xchg
fmull
movsl
mov
jne
cmpsl
or
outsb
mov
not
jmp
inc
pop
ds
dec
dec
inc
cmpsb
or
lods
ja
ret
sahf
add
jb
loopne
adc
enter
dec
jb
pop
js
jmp
rorb
jp
mov
ds
mov
inc
arpl
xchg
jmp
sbb
cmp
lock
sub
and
or
dec
imull
or
xchg
enter
mov
mov
mov
loop
adc
and
xchg
popa
and
pusha
dec
push
mov
filds
cmp
push
movsb
faddl
cli
push
cmp
scas
jo
fisubrs
and
popa
ret
lret
lcall
or
and
mov
mov
sarl
out
nop
mov
jo
stos
ljmp
mov
xor
push
push
mov
xchg
inc
call
sbb
mov
inc
mov
xchg
loope
out
jo
and
outsl
cltd
mov
mov
or
jmp
sbb
ror
jmp
mov
roll
addr16
mov
mov
jl
comiss
and
adc
dec
movl
and
test
mov
pop
xchg
fisubrs
movb
outsl
movsb
stos
in
push
cmp
pop
xchg
xor
repnz
dec
push
mov
mov
aaa
insb
or
pop
add
test
data16
jno
shrb
lods
jp
jecxz
loop
xchg
je
fwait
imul
xchg
xchg
sub
cmc
out
insl
sarl
mull
sub
mov
fs
and
sbb
pop
push
repnz
adc
mov
imul
pushf
fimull
dec
xchg
inc
test
mov
mov
xor
push
push
daa
fldl
popa
push
out
test
xlat
decl
or
or
pop
jb
fidivrs
cmp
sub
clc
cltd
pop
dec
ss
push
shll
mov
pushf
andb
aad
mov
dec
xchg
aad
xor
in
push
ret
fcompl
inc
lea
cmp
mov
loope
push
scas
out
xchg
xchg
jne
mov
sbb
push
or
sti
jo
cmpsb
dec
ds
xor
sar
xchg
cmp
ljmp
sbb
cmp
adc
and
add
cmpsl
jb
clc
ljmp
ret
inc
sub
test
sub
test
and
iret
jg
pop
lea
adc
jecxz
fptan
mov
insb
dec
sbb
rorb
hlt
xchg
lea
mov
sbb
add
mov
inc
aam
decl
add
cmp
gs
push
pop
cmp
cmc
sbb
outsb
stc
rcrb
jmp
cmp
cwtl
pop
minps
or
orl
cld
ds
cmpsl
imul
jne
std
aas
cltd
das
imul
and
dec
push
data16
jo
and
stos
dec
mov
scas
sarb
xchg
pop
mov
ds
rolb
fnstcw
mov
add
stos
fmuls
add
rcrl
jmp
dec
aam
movsl
data16
add
sbb
adc
adc
sbb
ret
in
jecxz
mov
dec
dec
or
push
and
xchg
mov
into
push
fcomi
rcl
pushf
fisubrs
jne
enter
push
jg
dec
icebp
sbb
lods
adc
imul
pushf
shlb
int
inc
mov
xchg
xchg
xor
xlat
add
inc
sub
fdivl
adc
in
lock
outsb
sub
clc
mov
cli
mov
sbb
out
outsb
out
dec
adc
int3
pop
xchg
add
imul
adc
inc
pop
push
cmp
outsb
frstor
lret
fwait
xchg
mov
dec
adc
clc
ret
fldlg2
inc
jo
aas
xchg
ja
rorl
mov
hlt
fnsave
roll
cmp
inc
dec
mov
out
testb
cltd
mov
sbb
mov
aam
fwait
inc
insl
lods
push
movsb
sub
pop
das
add
fiadds
popa
push
daa
inc
jnp
sbb
sbbl
mov
fcmovbe
mov
mov
popf
cmpsb
add
lods
or
call
shlb
sub
stc
in
orps
es
lea
jb
pop
in
sti
add
push
adc
sbb
imul
jp
incl
iret
stc
mov
xchg
xor
repz
repz
test
ljmp
sbb
leave
lods
mov
push
lcall
ficoml
mov
mov
stc
icebp
jmp
insl
fcmovu
aas
js
jae
int3
mov
insl
sub
cmp
push
in
add
sub
ret
push
dec
adc
push
mov
ret
or
inc
lea
repz
fldt
dec
popa
pop
ljmp
push
add
frstor
stos
xor
xchg
cmp
sub
nop
mov
inc
adc
inc
pusha
lcall
or
int3
jae
dec
jle
sbb
inc
or
pusha
mov
xchg
out
shll
mov
and
clc
aas
lods
into
std
cmpsl
sbb
daa
pop
and
imul
cmpsb
cli
xor
dec
xchg
std
ja
mov
cmp
fstpl
adc
sbb
subl
mov
cmc
pop
pop
cltd
lods
hlt
add
mov
push
lcall
add
std
fwait
cli
mov
loope
pop
jb
push
cmp
dec
icebp
insl
xor
es
push
mov
inc
xchg
dec
aas
aad
test
jno
js
push
imulb
mov
fldenv
sbb
or
xchg
cwtl
ret
sub
and
lock
fisttpl
jmp
cmp
cwtl
and
cmp
pop
je
jmp
sbb
jo
int
cmp
pushf
lds
and
es
insb
mov
xchg
incb
push
jg
fwait
sti
mov
mov
enter
data16
into
dec
ss
xor
xor
push
mov
add
jns
cmp
fldcw
or
scas
cmpsl
popa
sub
rolb
xchg
pop
sahf
dec
cmp
or
lock
xchg
fucompp
repz
mov
test
insl
xor
push
leave
dec
push
shlb
push
clc
jp
test
arpl
or
mov
sbb
cmp
addr16
loop
push
jmp
ljmp
ds
rcll
pop
cli
outsb
cmp
sub
adc
clc
test
inc
aaa
enter
push
test
and
add
sub
add
scas
ss
lcall
jno
dec
sub
jmp
imul
pop
into
and
ja
inc
hlt
dec
or
jbe
fistpl
jo
daa
jne
cmpsl
das
push
mov
push
int
rorl
lods
or
ljmp
inc
fldt
or
dec
adc
pop
mov
mov
adc
push
cmp
cmp
es
jae
dec
pusha
inc
mov
sti
dec
lea
into
shll
adc
pop
addl
ret
push
pop
pop
aas
pop
jo
mov
lret
out
leave
dec
dec
out
adc
adc
ja
into
mov
outsl
std
jae
out
out
cmpsb
add
repz
fstpl
ss
xchg
jecxz
lods
dec
enter
insl
lds
push
mov
jae
adc
add
inc
sbb
and
dec
push
mov
data16
jecxz
stos
xor
mov
nopl
je
jge
push
fs
xor
mov
fdivr
push
sbb
mov
in
hlt
out
xchg
add
and
sub
pop
mov
rolb
mov
scas
add
inc
inc
scas
push
cli
inc
movsb
clc
testb
adc
mov
pop
enter
aad
stos
adc
and
and
sbb
adc
cld
pop
push
inc
mov
or
stc
dec
jmp
pop
repz
xorl
loopne
xorb
scas
or
outsb
data16
aam
cltd
push
packsswb
adc
sbb
in
or
adc
adc
cli
pop
ss
push
out
xlat
test
jne
xchg
cld
jns
imul
repz
cmp
jg
push
inc
jnp
ret
mov
mov
outsl
sub
adcb
inc
repz
mov
lcall
stos
pop
lock
mov
cs
loope
pop
fidivrl
ss
sbb
xchg
dec
outsl
jmp
dec
ret
cmp
sub
pop
jmp
jne
cmpsb
or
repz
lcall
aas
cld
add
push
jae
pop
push
mov
pusha
cmp
je
pop
outsl
inc
scas
xchg
sbb
pushf
scas
add
fistl
sahf
pop
dec
js
mov
flds
divb
jo
mov
movsl
in
mov
lret
pop
sub
mov
in
dec
mov
fucomp
pop
in
rorb
mov
xchg
push
xchg
dec
jecxz
mov
dec
in
imul
outsl
push
jno
adc
mov
inc
fildl
xor
and
push
dec
cli
pop
popf
jmp
pop
sbb
adc
xchg
add
pop
sbb
pop
outsb
adc
ja
mov
inc
inc
fsts
push
mov
adc
sti
mov
stos
and
cmp
inc
imul
inc
xchg
adc
sarb
aas
cmpsl
add
inc
add
hlt
bound
fwait
mov
and
jnp
addr16
fdivl
lods
sub
push
xchg
mov
test
fwait
stos
fnsave
lods
or
or
sub
push
in
xchg
rcll
push
js
jl
xor
push
or
adc
add
inc
jp
add
in
jo
ds
add
hlt
jne
in
dec
jl
pushl
jnp
in
mov
add
inc
arpl
add
and
into
fldt
sahf
cli
int
sbb
jbe
cwtl
outsb
cltd
add
arpl
fdiv
inc
inc
inc
mov
xor
lds
and
mov
adc
jb
jae
scas
xchg
fidivs
sbb
jns
and
test
icebp
sahf
jl
pop
adc
js
std
sbb
cmp
add
jo
add
mov
xor
mov
inc
inc
and
mov
mov
cltd
stos
sti
cwtl
sbb
adc
loope
push
inc
pusha
test
scas
lods
xlat
loope
in
jl
fldenv
lea
and
and
repnz
dec
popa
sub
and
mov
xchg
dec
pop
mulb
lock
cltd
sub
push
ret
out
iret
cmp
pop
inc
sbb
mov
push
adc
shl
dec
pop
cli
xchg
push
jnp
jge
jae
andl
jp
les
js
jmp
imul
push
imul
cmc
cmp
iret
adcb
dec
popa
mov
cmp
dec
adc
push
inc
lret
jge
pop
xor
dec
and
and
dec
push
ds
fdivrs
cmp
mov
jge
iret
lahf
std
jmp
xor
ja
jbe
adc
dec
sti
xchg
ss
xor
inc
xor
mov
push
sbb
stos
add
and
pop
imul
push
popa
mov
cmc
sub
popf
or
xchg
ret
mov
sub
mov
jle
inc
cmp
and
sbb
sub
or
sahf
jle
mov
xchg
lahf
sbb
sbb
ja
mov
and
mov
add
pop
je
jbe
mov
fcomps
sbb
lret
imul
jae
dec
jno
mov
inc
xchg
fprem
inc
lea
or
jge
sbb
add
sub
push
inc
add
jge
add
fdiv
in
mov
ret
add
dec
imul
xor
xchg
add
jecxz
inc
outsb
frstor
cmpsl
fisttps
in
in
adc
dec
bound
imul
mov
cwtl
stos
jns
mov
or
pop
shr
and
mov
mov
inc
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
push
jecxz
pop
popa
rcrb
test
aad
or
inc
xlat
dec
xor
jns
jno
add
mov
sbb
mov
out
test
popf
push
jl
jns
sub
movsl
mov
cmp
mov
fsubs
xchg
ja
or
inc
sub
mov
out
xchg
adc
cmp
cmp
jmp
xchg
insl
push
xlat
mov
or
mov
mov
jmp
dec
aad
or
stos
adc
shrl
sub
pop
xchg
pop
leave
ljmp
cmpsl
loope
sahf
lahf
mov
lcall
or
cmpsb
sahf
and
imul
fsub
dec
popl
push
stos
cmp
mov
cmpsl
jae
dec
mov
lcall
pop
cmp
lods
add
mov
mov
call
sbb
jecxz
lcall
cs
movsl
scas
movsl
xchg
pop
js
or
push
sti
lcall
js
faddl
push
movsb
adc
outsl
ljmp
cmpsb
cli
imul
push
loop
xlat
test
xchg
inc
jb
bound
jge
add
push
jmp
repnz
adc
test
lea
stc
lods
daa
divl
jbe
out
adc
or
into
sbb
popa
or
xor
repnz
inc
inc
orb
push
dec
adc
push
sbb
mov
dec
push
mov
jle
test
or
leave
mov
mov
movsb
add
cmpsl
leave
rclb
xor
push
sbb
popa
mov
ficomps
add
in
inc
lcall
loopne
movsb
lea
add
sub
scas
jecxz
daa
scas
add
xor
dec
and
add
mov
rcll
cmp
loope
jl
jns
lds
aas
push
mov
push
sbb
adc
or
jno
dec
icebp
lret
subl
jns,pn
repnz
gs
xchg
movsb
call
xchg
stos
leave
sub
sbb
dec
dec
push
dec
xchg
mov
test
cli
shlb
or
outsl
pop
cld
push
sbb
ss
in
jg
pop
scas
dec
loope
mov
cmp
decb
sub
add
jno
mov
inc
imul
call
sbb
aad
in
repnz
dec
ja
jle
loop
mov
popf
js
and
dec
sub
cli
notb
inc
lcall
cs
lods
mov
or
test
and
cmp
push
dec
sti
les
ds
testl
dec
idivb
mov
out
xorps
jmp
xchg
sub
adc
push
lds
jge
jno
and
cmc
xor
push
or
inc
push
stc
fstpt
lea
pushf
arpl
hlt
sbb
mov
add
push
leave
inc
inc
idivb
add
cmpsb
jmp
jmp
jb
push
mov
xor
and
cmp
xlat
shll
rorl
lahf
out
fdivr
cli
pop
or
adc
js
inc
adc
popa
fdivl
js
rcrl
pop
dec
divb
pop
aaa
cmpsb
and
xor
push
cvtps2pi
jmp
repz
out
lock
mov
pop
jle
jb
push
sbbl
cs
mov
in
push
xorb
je
adc
sahf
loope
mov
or
dec
mov
mov
add
pop
lret
pop
mov
popa
mov
adc
pop
xor
repnz
addr16
sub
enter
lods
push
or
in
mov
fwait
out
imul
inc
lcall
push
cmpsl
rolb
cmc
mov
add
stos
xchg
sarb
cwtl
aas
xchg
push
sar
and
cmp
mov
pop
cld
cmpsl
movsb
loope
jl
xchg
inc
push
shrb
mov
cmpsb
adc
sar
inc
sbb
xchg
fstps
cmc
sbb
stos
jnp
push
xchg
sub
pop
push
xor
repz
xchg
fistpl
add
pop
es
push
add
addr16
unpcklps
pop
push
test
fstpl
bound
xor
ds
out
push
sbb
stos
and
cmp
rcrl
lods
int3
fdiv
and
outsl
test
lods
sbb
jmp
and
push
and
shrb
js
std
push
popa
popf
cmp
fs
out
cmp
dec
push
push
scas
mov
fcom
jo
out
xchg
pop
jnp
xchg
sub
jge
push
shr
cmp
aad
insl
add
aam
push
pusha
movsb
inc
push
out
pop
bnd
out
fsubp
jb
mov
dec
dec
dec
or
std
out
dec
jp
out
scas
cmpsl
xchg
sbb
cmp
jns
or
out
lods
push
int3
mov
pop
sbb
aam
stos
cmovno
iret
push
iret
loopne
xchg
out
jns
xorl
jge
out
inc
das
outsb
push
jo
lret
outsb
inc
jecxz
cmp
xor
xor
cmpsb
fmuls
pop
in
ffreep
mov
xor
pop
clc
add
lds
mov
mov
push
mov
div
cltd
mov
mov
out
push
xchg
inc
loop
fwait
push
incb
xchg
and
loope
pop
pop
or
xchg
push
and
test
inc
scas
mov
cmpsl
push
and
nop
imul
xchg
ds
push
jae
out
push
xchg
imul
arpl
dec
testb
cs
mov
xchg
pop
mov
gs
sarb
push
and
aam
mov
or
pushf
sub
aas
push
inc
lret
int3
into
pop
lods
repnz
jo
in
sarl
xchg
fistps
jno
mov
xlat
stc
inc
pop
add
xchg
mov
out
adc
pop
jne
xor
fisttpll
jecxz
pop
jle
push
lret
fwait
xor
mov
scas
cld
push
je
lcall
dec
pop
inc
ret
lret
push
jb
or
out
enter
inc
lea
ret
sbb
lret
mov
mov
jbe
mov
in
leave
imul
aad
mov
clc
mov
mov
aad
cmp
mov
scas
rcl
pop
or
xchg
push
push
push
jns
mov
loop
mov
loope
mulb
sub
jge
cmp
lcall
lahf
mov
mov
pop
das
loope
jae
add
xchg
mov
jmp
inc
push
mov
mov
push
mov
lcall
repz
push
dec
jo
out
or
push
pop
mov
out
rorb
jno
mov
adc
xchg
jo
mov
mov
adc
jge
js
mov
dec
xchg
pop
cld
xor
hlt
into
inc
aad
popf
stc
or
adc
jmp
les
dec
test
xchg
mov
jmp
push
mov
inc
loopne
lods
add
or
data16
idivl
divl
inc
movb
jns
insl
orl
pop
lock
and
xor
sub
push
pop
sahf
mov
push
sbb
filds
rorl
adcb
addr16
das
jne
push
arpl
inc
xchg
decl
dec
movb
call
or
push
sub
mov
out
js
repnz
inc
scas
sbb
cmpsl
mov
repz
jns
int
and
das
mov
or
mov
sbbl
in
jae
cli
xorb
ret
jns
jp
mov
imul
movsb
enter
jbe
inc
dec
neg
icebp
out
andb
and
or
mov
rorb
ss
sbbl
and
jb
add
gs
nop
ljmp
aam
pop
adc
les
decl
mov
iret
inc
cld
xchg
pop
imul
cmp
jge
test
subl
jbe
cli
sub
jb
hlt
pushf
mov
jl
daa
fwait
sub
xchg
cmovp
mov
je
xor
mov
lret
mov
fcomip
aad
repnz
pop
xchg
ret
imul
push
fs
or
scas
scas
fldt
push
enter
fs
into
push
pop
sbb
and
ret
push
adc
jecxz
pop
aam
sbb
jp
cmp
sub
jg
into
clc
pop
xchg
push
imul
sbb
xor
loopne
mov
cmp
pop
cmpsl
enter
mov
and
mov
fcompl
mov
mov
lea
or
cmpsb
sub
inc
xor
add
mov
popa
or
idivl
dec
sahf
sub
shl
jge
sbb
push
mov
lds
sub
sbb
iret
pop
lods
loop
xchg
dec
in
loop
mov
addr16
loope
setg
adc
and
subb
cltd
add
jl
push
xor
xchg
jge
add
add
cmp
arpl
push
or
cmp
jbe
and
scas
mov
mov
sub
inc
mov
jg
out
sbb
testl
nop
sbb
repz
fisubs
and
mov
fwait
xor
ret
sbb
push
pop
and
cmp
notb
loopne
sbb
das
xchg
mov
mov
xlat
sub
pop
jns
or
fidivl
dec
out
lret
out
std
pop
push
mov
mov
add
pop
out
lcall
inc
les
mov
xchg
inc
lds
mov
mov
cmp
andl
cld
xor
sbb
in
sar
adc
mov
icebp
mov
sahf
push
jae
xchg
outsl
ret
cmpsl
cli
sub
and
imul
jge
testb
pop
jmp
fistps
in
mov
aaa
jb
hlt
adc
lock
jmp
aam
sbb
or
imul
in
dec
insl
mov
fisttpl
xorb
cli
ja
push
jbe
out
adc
into
push
sahf
cli
popf
push
negl
cltd
ret
insl
sbb
mov
xchg
mov
cmp
cmp
pop
xchg
jb
xor
cli
ret
add
outsl
lahf
add
xchg
mov
dec
jno
fstps
out
lret
push
pop
pop
mov
adc
inc
lcall
ret
xlat
outsl
adc
loop
inc
into
cmp
test
mov
cmp
push
cwtl
sbb
inc
sarl
and
out
inc
and
fdivl
out
xchg
lock
andl
mov
enter
aam
mov
xchg
in
jne
mov
mov
pop
push
push
pop
arpl
int
xchg
jb
aam
sub
les
push
iret
mov
xor
pop
rcrl
sbb
or
pop
cmp
push
mov
imul
out
jmp
dec
popl
xor
hlt
adc
inc
push
xor
sahf
inc
popf
mov
cmp
sub
test
sbb
iret
scas
dec
sbb
sub
mov
aas
outsl
mov
mov
push
fistpll
xor
add
jbe
hlt
ror
adc
out
push
cmp
vmovaps
ss
push
mov
sti
test
mov
and
push
xchg
or
lahf
adc
and
jmp
fbstp
or
xchg
or
mov
mov
or
aaa
cwtl
shlb
pop
xor
mov
xlat
jmp
leavew
mov
call
add
das
popf
mov
loopne
lods
xchg
js
mov
out
mov
out
mov
push
fisubrs
mov
les
jge
xchg
fidivrl
out
insb
mov
jg
mov
inc
mov
inc
shrb
les
aas
repz
xor
mov
outsl
push
sbb
push
bound
or
or
fdivs
out
mov
outsb
addl
mov
jb
ficompl
enter
call
mov
push
call
sub
mov
sahf
out
cmp
iret
aad
push
cmp
add
inc
dec
cmpl
popa
ret
pop
icebp
test
and
insb
bound
adc
movsl
mov
sti
push
int3
inc
nop
sub
in
fists
pop
push
adc
hlt
outsb
or
cmp
add
or
out
push
subl
push
movsb
mov
dec
cmp
shll
sub
sub
shrb
cmp
ja
inc
dec
push
sbb
pop
out
and
movsl
jbe
dec
jb
push
rorl
fists
nop
les
and
shlb
pop
dec
pop
aas
sbb
add
xchg
mov
in
push
mov
in
inc
dec
pop
pop
fs
push
mov
pushf
call
shrb
add
cmpsl
fs
push
dec
cmp
and
sbb
fbstp
xlat
mov
sub
std
add
xor
xor
lock
mov
inc
call
sbb
lods
xchg
roll
sti
ret
fcomps
mov
mov
cltd
mov
movl
call
pop
cmpsl
and
fisubrl
xlat
mov
jbe
jmp
mov
inc
xor
xchg
mov
sbb
pop
das
sbb
push
add
push
inc
lret
xchg
push
lahf
lods
mov
ret
ret
mov
stos
jno
adc
ret
and
add
and
jo
pop
adc
cltd
push
jmp
push
push
cmp
sarb
shlb
cltd
rcrb
ret
icebp
push
test
mov
and
imul
pop
inc
shll
sti
call
adc
out
adc
push
or
clc
lcall
test
jp
ror
hlt
push
ret
push
les
fdiv
mov
rolb
shrl
hlt
xchg
or
lret
mov
subb
aam
xor
jns
add
jl
add
mov
arpl
lods
das
psraw
mov
dec
mov
sub
pcmpgtd
movsl
push
ds
mov
cmpsb
sbb
sbb
xor
xchg
sbb
rcrb
xchg
push
test
daa
aas
mov
test
rol
mov
shrl
and
or
clc
mov
push
dec
lds
test
jo
fdivl
xchg
jnp
ja
pop
xchg
adc
jecxz
movsb
hlt
add
mov
clc
inc
xchg
fistps
pop
imul
mov
ret
sub
pop
xchg
and
sbb
insl
mov
mov
cmp
out
sti
sbb
stc
lahf
lret
je
lcall
je
cmp
cmpb
std
test
xchg
stos
mov
mov
insb
pop
addr16
ljmp
dec
fwait
xlat
jb
fs
outsl
test
scas
rorb
cmpsl
dec
into
lret
mov
xchg
es
cli
icebp
sbb
bound
add
out
repnz
sbb
int
fwait
addr16
jle
mov
outsb
ss
leave
pop
mov
jae
js
push
push
push
cmpsb
lret
leave
xchg
mov
adc
mov
cld
mov
movsl
cmpsl
xor
ss
fdivl
pop
andl
lret
inc
mov
out
push
xchg
arpl
jg
inc
out
aaa
std
mov
fwait
loop
mov
imul
mov
in
shrl
or
subb
test
xlat
lahf
cs
mov
loopne
repz
sti
in
scas
lea
scas
fisubrs
in
pop
mov
repnz
cmpsb
jl
mov
mov
int3
loop
in
adc
xchg
cs
xor
daa
jne
or
das
xor
mov
dec
cmc
dec
add
add
aad
sub
mov
jg
xchg
shlb
pop
and
aad
xor
pop
dec
lret
imul
hlt
movsb
inc
jle
push
xchg
sbb
ds
scas
sub
adc
enter
adc
iret
cmp
push
and
add
ljmp
dec
push
pop
xor
adc
xchg
pop
sti
pop
push
adcb
call
enter
fcmove
or
push
popa
les
lahf
sub
xchg
mov
cmp
rcrb
rcrl
push
shlb
mov
cmp
mov
das
fcomps
mov
icebp
fnstenv
mov
fisubrs
aam
dec
mov
add
add
jg
inc
out
loop
fld
lcall
out
sbb
cs
xchg
sub
lahf
subl
test
jmp
and
aad
inc
adc
les
popa
jae
das
cld
es
and
xchg
ficoms
pop
dec
iret
jl
dec
xchg
dec
jmp
xchg
mov
xchg
fsubrl
cmp
xor
mov
mov
andl
cmp
lock
imul
xchg
adc
jmpw
cld
in
or
push
inc
test
mov
mov
mov
popf
push
pop
add
jmp
or
push
xor
mov
fs
loop
popf
in
rolb
or
push
rcrl
bound
pop
mov
lock
pusha
test
ja
aad
cmc
frstor
pop
outsb
decl
mov
dec
pusha
and
or
mov
sub
jge
into
jbe
scas
into
stos
xchg
and
lahf
xchg
adc
inc
sahf
lahf
clc
xchg
lahf
int
fcoml
gs
rcl
test
call
mov
add
cld
into
lahf
pusha
shrb
bound
js
rorb
sbb
test
fimull
xchg
stc
dec
push
pusha
pop
mov
mov
push
out
cmp
lcall
mov
jae
arpl
pop
lea
fcomip
lahf
cmpsl
cmp
push
add
iret
fcomps
jns
xorb
adc
stos
sahf
test
mov
or
jno
insb
rorb
test
pop
pop
rcrb
or
ret
add
xchg
gs
data16
ljmp
jg
jle
mov
xchg
jo
add
dec
sbbl
popa
stos
enter
repz
mov
loop
xchg
inc
push
push
fxch
jae
dec
xlat
insl
pop
pop
sti
or
pop
fiaddl
shl
push
outsl
lds
mov
fnstcw
movsb
push
test
or
inc
xlat
inc
std
dec
call
add
push
push
adc
xor
cltd
mov
adc
gs
ret
pushf
mov
mov
and
sub
in
iret
mov
push
adc
je
fdivl
pop
loopne
push
jmp
pop
int
shlb
int3
lock
sbb
mov
inc
add
in
sbb
pop
aad
leave
lock
je
sub
and
sarb
insb
pop
inc
mov
data16
sub
jp
in
jne
mov
cltd
repnz
lret
pop
test
push
outsl
and
out
cmpsl
lcall
aas
out
out
jae
mov
xlat
lret
and
mov
loope
add
mov
mov
lock
add
push
int3
in
cmp
loope
repnz
fdivs
adc
mov
outsb
outsb
testb
sbb
and
mov
xor
dec
or
mov
lahf
jecxz
and
push
mov
mov
add
inc
push
int
in
and
dec
sbb
data16
xor
push
clc
push
es
pop
aas
cmp
push
jl
inc
mov
cld
inc
js
xor
mov
arpl
roll
lds
mov
ret
jns
push
sub
inc
andb
push
mov
ret
add
push
pop
scas
lea
mov
inc
jbe
out
pop
mov
sub
xorl
stos
inc
cld
add
jbe
popa
stos
les
in
popf
insb
sub
xchg
adc
add
pusha
adc
lea
xchg
mov
fwait
mov
iret
jnp
rolb
sahf
es
mov
pushf
mov
imul
loopne
mov
jmp
gs
xor
mov
sbb
out
iret
push
pop
imul
pop
sbb
sbb
stc
fdivrl
sbb
fnstsw
scas
xchg
scas
sti
in
iret
loopne
fadds
mov
bound
mov
push
mov
cli
push
out
icebp
cmpsl
fmulp
mov
in
adc
sbb
mov
jge
push
cwtl
or
test
adc
add
add
inc
sub
sti
cmpsl
cmc
push
add
jbe
in
insl
and
jmp
dec
int
in
incb
outsl
pushf
lods
aaa
xchg
popf
mov
nop
imul
mov
push
add
loop
sub
lahf
dec
shrb
repz
sbb
mov
sub
iret
gs
jae
ud1
pop
inc
pop
jg
in
adc
jmp
sahf
loope
pop
imul
mov
stos
inc
aam
inc
adc
call
inc
xor
js
jae
xorl
sub
mov
stc
iret
adc
cmpsb
shl
arpl
jbe
mov
stos
xchg
insl
xchg
loope
jnp
lock
inc
in
mov
rolb
xor
lea
xor
xor
test
das
in
aad
and
movsb
loop
nop
sub
xchg
lods
sub
pop
lahf
fisubs
jmp
mov
mov
xchg
fimull
xor
cli
pusha
fsubrl
add
sbb
nop
fnstcw
sub
into
test
rorb
cmp
in
dec
out
mov
cli
push
out
fdivrs
aam
xor
add
jne
push
pop
fcomps
xchg
xlat
push
inc
jbe
mov
out
push
pop
and
lods
sbb
sub
inc
push
rcr
sti
sub
lret
xor
pop
jnp
out
lret
out
cmpsl
fdivp
rolb
add
hlt
les
sub
andb
pop
fsub
lock
and
cmp
je
je
loop
lret
and
or
inc
jns
push
sahf
in
mov
out
cmp
mov
aad
inc
loop
pop
arpl
in
xor
inc
xchg
xchg
inc
sti
xrelease
and
sahf
adc
repnz
mov
jp
jp
push
scas
pop
and
negb
xor
cli
pusha
xchg
imul
cmp
add
push
or
xor
and
cmp
stc
mov
mov
jne
xor
lods
add
mov
jmp
das
or
das
orb
and
or
adc
nop
lods
clc
push
and
add
or
push
or
mov
xchg
ljmp
xchg
cmpsb
leave
cmp
scas
xchg
pop
add
dec
push
adc
cmpsb
das
mov
or
jle
test
repnz
or
add
mov
lock
into
out
xorl
mov
test
mov
xor
cld
cmp
pushf
add
add
lock
push
sti
jb
xor
fidivs
pop
mov
sti
pop
cmp
ret
jno
aas
mov
jne
xchg
into
inc
xchg
rol
sub
outsl
and
pop
cmp
popf
mov
inc
js
cmp
jmp
adc
ljmp
sbb
ljmp
sbb
mov
xchg
jnp
pop
lds
fdivl
lods
lds
inc
cmp
sahf
ficoms
in
repz
aad
aas
jbe
daa
cli
fadds
xchg
mov
xchg
insl
ja
dec
sbb
xchg
repnz
leave
inc
adc
in
mov
enter
icebp
ss
mov
or
fcomp
in
je
rolb
jns
aaa
aas
xchg
test
jb
mov
inc
sti
adc
ret
pop
pop
hlt
iret
push
inc
push
add
and
int
pop
rcrl
pop
int3
cmc
daa
repz
or
xchg
cld
daa
and
push
mov
rcrb
rcrl
add
pop
pop
cmc
and
gs
pop
xor
sbb
xchg
xchg
sub
fwait
leave
imul
push
jl
movsb
sub
jmp
popf
push
fstpt
lret
xor
mov
repz
imul
out
mov
das
jmp
cmp
jno
repz
add
sarb
lea
les
mov
jae
dec
shlb
push
ds
insl
insl
mov
pushf
js
mov
sti
mov
pusha
pop
push
cmp
add
sub
mov
pop
es
dec
jle
jp
ror
sbbl
add
or
mov
inc
jbe
cmpsl
scas
faddl
out
xor
pop
jae
ja
sub
push
push
add
mov
sbb
mov
dec
pop
mov
mov
push
ds
jnp
or
xchg
icebp
dec
lea
jae
xor
data16
imul
clc
xor
jns
inc
dec
mov
fs
shll
leave
scas
mov
push
mov
add
out
cli
je
mov
popf
loope
dec
fs
push
mov
pop
cmp
mov
xchg
xchg
into
or
add
xchg
pop
mov
mov
push
dec
das
outsb
mov
mov
jmp
mov
popf
inc
jge
xorl
xlat
into
neg
inc
cli
shrl
adc
add
sahf
ss
add
pusha
adc
fnstcw
adc
dec
adcb
xchg
cld
ret
xchg
jae
xchg
mov
das
fldt
or
fsubs
test
sbb
sti
es
jb
adc
data16
cmp
int
push
or
popf
lods
in
loopne
stos
and
mov
stc
fprem
sbb
cmp
pop
ret
add
jno
mov
ljmp
nop
push
push
lcall
fs
jp
stos
test
mov
inc
stos
insb
nop
mov
bound
mov
jnp
lret
xchg
cwtl
cmp
andl
adc
scas
adc
add
loope
imul
test
cmp
dec
adc
data16
aad
test
pushl
int3
test
xor
test
or
push
cld
fnstcw
or
push
fidivl
jg
and
xchg
add
or
fldt
imul
pop
mov
mov
mov
xchg
sub
jp
mov
sbb
mov
insb
lock
xchg
loop
pop
xor
add
mov
popf
push
shlb
and
jg
add
rolb
outsb
aas
in
scas
ss
repz
sub
repnz
jae
cmpsb
xor
pop
cmp
fwait
adc
sarb
sub
dec
imul
movb
mov
xor
xchg
push
shll
mov
jne
xchg
pop
push
jp
std
insb
fiaddl
mov
into
inc
pushf
mov
inc
rcl
fisubs
int3
dec
sub
aas
sbb
inc
mov
mov
lods
subb
mov
mov
jo
call
cmp
dec
adc
add
loop
adc
fiaddl
filds
loop
out
outsl
cmpsl
les
push
dec
jmp
mov
cmpsl
or
ret
inc
repnz
add
dec
bnd
das
mov
xchg
test
or
inc
les
shl
sub
jns
repnz
lcall
cmpsl
cld
or
loopne
mov
inc
sub
mov
adc
cs
adc
or
les
xchg
mov
loope
sbb
rcll
mov
mov
cmp
imul
mov
adc
cmpsl
and
orb
repz
pushf
adc
add
push
inc
pushf
jmp
shrl
pop
sti
pop
iret
out
fcoms
pop
adc
lods
adc
dec
call
das
sub
imul
jg
xor
inc
fmull
rol
repz
loopne
dec
outsl
xchg
push
in
lret
mov
mov
push
and
sub
mov
mov
fsubl
inc
dec
add
clc
cwtl
and
mulb
lds
sub
mov
insl
and
repz
fs
mov
dec
jne
sar
data16
mov
xlat
dec
andl
stos
jo
jae
adcb
lret
push
mov
jmp
and
xchg
push
sbb
addr16
in
mov
imul
mul
push
mov
push
jl
jecxz
cmp
mov
mov
popa
lret
pusha
sahf
fists
mov
mov
movsl
xor
inc
adc
dec
add
fisubs
inc
xor
pop
mov
xchg
arpl
jo
repz
xor
sbb
pxor
xchg
jmp
test
fisttpll
cltd
and
adcl
daa
out
lods
fsubrl
push
rcll
sti
and
testl
popa
cmp
incb
pop
push
out
sbb
int3
movsb
mov
xchg
mov
push
js
ror
sub
xchg
inc
inc
push
sbb
fidivrs
inc
jmp
jecxz
stos
pusha
in
push
inc
push
mov
aad
xchg
add
jp
fs
aam
xchg
popa
hlt
icebp
xor
stos
xchg
mov
bound
shrl
pop
push
stc
jbe
push
sub
cltd
xor
dec
sub
sbb
inc
sub
je
pop
arpl
pop
sbb
popf
fcomi
lods
jp
scas
loop
dec
xchg
push
xchg
cltd
shll
push
xchg
pushl
call
sti
cmpsl
cs
push
sahf
repnz
cli
mov
jne
test
addr16
jecxz
lea
in
shll
mov
icebp
or
stc
mov
aas
dec
sarl
jp
or
sub
addr16
cmp
mov
and
fisubs
aas
scas
push
popa
or
rorl
or
xchg
cmpb
pop
into
stc
inc
lock
in
std
inc
int3
pop
out
stos
cmp
negb
int
cwtl
jp
xlat
ds
jo
sbb
add
xchg
mov
mov
call
sarl
enter
fcompl
popf
push
rolb
lret
in
or
push
cltd
adc
aam
imul
push
inc
push
je
xchg
mov
push
push
mov
or
shrb
roll
cld
mov
and
popa
into
faddl
mov
shll
or
hlt
push
xchg
mov
mov
fs
iret
ffree
inc
mov
rol
or
fcmovnu
inc
mov
add
cli
xor
push
xor
and
clc
mov
xchg
mov
inc
mov
sbb
shlb
mov
popa
xchg
outsl
xchg
jne
add
cmpsl
cmpsl
fsts
leave
adc
stos
movsl
adc
sti
push
les
dec
fs
jae
xor
inc
cmp
xlat
shl
sbbl
dec
test
push
jl
scas
mov
and
adc
lahf
pop
mov
ljmp
dec
call
or
push
adc
sti
and
imulb
lret
push
xor
mov
mov
loope
jnp
mov
fs
pop
xchg
jp
fidivrs
jo
or
imul
adc
int3
sub
sbb
loope
push
in
in
or
jnp
cwtl
shrl
cmp
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
sti
loope
xchg
cld
popa
bound
bound
imul
sbb
inc
adc
mov
in
or
inc
xor
push
mov
xor
call
into
das
push
out
xchg
and
mov
js
inc
daa
xor
stc
pop
xchg
inc
cmp
mov
xor
sbb
ds
sbb
push
inc
add
adc
dec
shl
repz
js
dec
shr
inc
icebp
stos
outsb
xchg
cltd
pop
dec
xchg
loopne
and
fstpt
mov
jl
dec
outsl
js
mov
in
je
ficoms
jmp
lds
adc
mov
nop
xchg
ja
inc
mov
movb
mov
ret
xor
pop
push
mov
mov
shr
insb
sbb
or
mov
adc
mov
int3
into
fisubl
mov
lahf
jo
mov
push
jl
cli
add
mov
iret
sub
jns
xor
adc
pop
pop
cmp
call
xlat
ficomps
movsl
xchg
push
cmp
cmpsb
xor
pop
in
sbb
test
les
pop
dec
adc
enter
mov
leave
sbb
lahf
jg
pop
and
xchg
dec
pop
jbe
or
dec
or
out
cmpsl
xor
inc
popl
out
jmp
and
lock
outsb
into
push
mov
fisttpll
mov
jmp
inc
cli
add
test
jns
fistpll
cld
je
or
movsl
xchg
iret
popf
ficomps
push
or
dec
jecxz
sbb
mov
dec
das
clc
jne
lret
ss
cmp
inc
repnz
pushf
mov
test
vpmuludq
push
or
cli
movb
mov
stc
fldt
and
leave
in
inc
leave
ret
shll
in
int3
push
rcrl
outsl
jecxz
in
lods
fdivrs
pop
rcr
cmp
inc
mov
loopne
xor
cli
pop
movsb
adc
or
test
pop
cmp
hlt
xor
lea
lret
jg
cltd
testl
jle
aad
test
test
xchg
xchg
jmp
jnp
imul
lret
inc
xor
ds
lret
and
push
sbb
pop
mov
fisttpl
lock
ljmp
test
mov
or
test
movsl
sub
loopne
dec
loopne
mov
lret
adc
repnz
jmp
lods
xor
orl
mov
mov
xchg
dec
in
dec
rcll
cmp
leave
icebp
pop
movsb
add
scas
mov
jno
add
jns
pop
pop
push
daa
mov
repz
hlt
mov
mov
mov
fdivr
sub
icebp
jae
adcb
test
mov
dec
vmovsldup
cltd
outsl
test
leave
sbb
adc
adc
jp
aad
addb
and
fimull
insl
jnp
and
or
sahf
pop
frstor
xor
xor
mov
push
sub
stos
push
test
aam
iret
sbb
pop
mov
push
aad
lock
ret
pop
push
adc
roll
aad
scas
lods
fidivl
dec
mov
pushf
je
inc
cmpsl
xchg
scas
pop
rorb
adc
push
mov
dec
lea
cmp
lea
fs
jns
inc
pop
mov
pop
dec
mov
outsl
xchg
leave
inc
adc
insl
out
cmc
mov
cmpsl
sbb
std
jne
cmc
jl
and
sbb
outsl
cmovg
dec
xchg
mov
ret
push
pop
pop
mov
arpl
xor
xlat
addb
or
mov
xchg
mov
cmp
jge
jg
loop
and
jl
cmp
inc
in
sub
int3
cmp
push
std
add
mov
leave
imull
sbb
pop
push
aas
or
pop
push
mov
sub
push
das
push
into
sbb
mov
sbb
inc
sahf
sbb
dec
ret
pop
ret
movsl
shlb
mov
mov
lods
push
adc
popf
xchg
les
cmpsb
hlt
mov
stos
xchg
mov
aas
les
in
insl
mov
push
iret
out
add
stos
arpl
cmp
movsl
sub
cmp
push
dec
xchg
or
push
int3
mov
cwtl
mov
insb
mov
sbb
sub
jl
push
sti
sub
xchg
or
les
ret
cmc
aam
je
sub
mov
jnp
inc
clc
fldcw
das
je
lds
inc
lods
cmp
mov
enter
pop
inc
xchg
adc
in
aas
mov
pop
enter
pop
bound
in
dec
jns
pop
popa
sbb
mov
scas
scas
sbb
mov
lea
xor
imul
sub
or
xchg
jecxz
sbb
mov
lods
mov
jnp
mov
pop
jg
sub
mov
cltd
xchg
dec
pop
lock
sub
ss
jle
outsl
in
xchg
lea
jmp
mov
pop
lock
add
fistl
xor
sub
xchg
lock
test
mov
adc
push
mov
daa
xor
or
mov
jns
pop
movsl
cmp
sbb
insl
and
xchg
or
push
pop
jecxz
fcomps
pop
mov
aas
xchg
lcall
gs
push
clc
testb
movb
pushw
lahf
loopne
add
push
movsb
notb
dec
xchg
pop
outsb
mov
xlat
out
push
pusha
jecxz
xchg
jmp
cmp
ss
pushf
push
mov
pop
add
inc
mov
and
adc
fwait
xor
inc
loopne
aaa
xorb
jmp
inc
mov
sbb
dec
xchg
int3
insb
sbb
sahf
pusha
add
mov
into
sarb
fwait
cltd
lcall
daa
insl
testb
or
sti
xchg
mov
mov
and
bound
jp
pop
leave
xchg
pusha
repnz
aad
xor
cmp
cmp
jne
cmp
out
lock
cld
pop
cmp
bound
cltd
sbb
sub
arpl
out
cli
loop
mov
pop
aad
outsb
insl
and
dec
add
jecxz
insl
xchg
xlat
in
and
and
lret
lret
xchg
push
push
inc
sbb
out
push
test
test
or
mov
or
xchg
inc
ds
inc
jno
xchg
pop
nop
repz
mov
mov
or
shlb
fsubs
sub
call
adc
mov
pop
scas
mov
sub
call
add
sti
xchg
notl
or
mov
dec
jecxz
jl
repnz
dec
dec
lahf
leave
mov
negb
mov
add
mov
and
cld
lods
xchg
ljmp
mov
stc
jmp
push
sub
or
loopne
mov
sbb
xchg
cmp
push
fadd
mov
test
enter
dec
dec
or
movsb
jmp
fwait
pop
data16
mov
push
scas
sbbl
data16
imul
push
lret
mov
fistpll
cmc
cmpsb
nop
xchg
in
xor
cmp
add
lret
add
xchg
mov
insl
or
sub
ljmp
xor
fnsave
jno
mov
clc
imul
dec
jno
in
dec
xor
stc
outsl
lds
aad
lahf
repnz
and
bound
movsb
movsb
xchg
gs
pop
mov
nop
add
pop
jo
sbbb
out
imul
cwtl
adc
sub
pusha
pop
in
cmp
data16
jns
dec
in
cmp
in
cld
cmp
loope
sbb
lea
xchg
sub
or
test
adc
int
daa
popf
jp
jno
std
xchg
lret
mov
in
sub
mov
mov
add
repnz
pop
xor
mov
mov
cmp
jns
xor
fcmovnb
push
cld
mov
cmpl
aaa
sbb
aas
in
mov
mov
push
add
xchg
out
stos
shrl
xlat
lods
adc
sub
scas
and
cmpsl
jmp
popa
xchg
pop
repnz
dec
adc
fstpt
inc
cmp
mov
sbb
test
insl
lea
push
or
sbb
xchg
jecxz
xchg
into
dec
xchg
or
outsb
outsb
inc
sbbb
cmp
add
cs
and
push
aam
adcl
sub
and
cmp
sub
cmp
xchg
and
adc
pop
pop
add
sbb
mov
push
jo
int3
push
add
arpl
mov
pop
jge
adc
or
outsb
pop
cmpsb
jnp
add
outsl
xor
mov
stos
push
mov
fnsave
xchg
aas
int3
mov
push
add
xchg
aam
test
stos
adcb
cmp
and
or
mov
minps
stos
push
jno
sbb
shr
out
or
insl
pop
sti
xor
mov
mov
cmp
sahf
add
je
test
push
inc
stos
pushf
rep
lcall
xor
in
icebp
mov
and
ss
sti
ret
mov
in
adc
fwait
into
or
stos
ficoms
jmp
mov
xchg
stc
sbb
add
sahf
scas
aad
jge
cmpsl
pop
aad
loopne
negb
and
pop
mov
scas
dec
jae
cmp
test
bound
and
leave
cmp
popf
addl
mov
negl
inc
cmpsb
insb
xchg
arpl
mov
pushf
dec
add
jge
aam
jmp
jbe
push
mov
or
mov
xchg
std
cs
icebp
xchg
xchg
les
iret
mov
sub
int
dec
cmpsl
insl
dec
inc
lods
dec
add
les
rcll
sub
push
clc
scas
xor
adc
or
add
popf
pop
out
popf
ja
adcb
fdivl
outsb
pushl
dec
cmpsl
aaa
movsl
adc
aam
cwtl
leave
jno
into
daa
adc
aaa
dec
enter
add
mov
sbb
jle
aam
xchg
cld
jbe
lea
pop
repz
sbb
mov
aaa
xchg
or
test
inc
pop
pop
jns
jg
rclb
push
aaa
stos
leave
popa
out
mov
pop
dec
add
jo
xchg
outsb
sbb
add
inc
rcl
xor
cmp
divl
sar
push
dec
test
cmpsl
inc
negl
jae
std
aas
sub
xchg
test
pop
stc
pop
push
or
jecxz
adc
js
adc
lret
adc
mov
jnp
leave
dec
adc
and
mov
arpl
jg
dec
adc
push
jns
dec
and
xor
lods
je
xchg
xchg
bound
cmp
pop
push
dec
sti
shlb
jno
ret
mov
in
clc
int3
iret
add
sbb
out
push
fidivrl
adc
insb
bound
shrb
sub
loop
add
mov
pusha
insb
mov
jno
add
mov
sbb
mov
sub
cmp
push
out
cli
jns
push
popf
or
mov
or
clc
dec
aam
enter
les
stos
pop
xchg
shl
add
movsb
lock
mov
testl
jb
es
stc
or
xchg
fnstsw
int
inc
cmc
mov
pop
insl
aad
and
adc
pushf
aaa
dec
mov
mov
cmp
cld
shrl
cs
dec
cwtl
nop
dec
push
cs
and
add
outsb
adc
stos
fidivrs
shrb
cmp
and
jmp
arpl
xor
mov
sti
xor
inc
inc
shlb
push
adc
in
es
mov
jo
sub
cmp
lret
enter
loopne
mov
dec
jge
out
push
add
jmp
adc
cmp
sub
sarl
inc
inc
jmp
stos
out
lret
pop
pop
jns
fcomps
psrad
mov
inc
movsl
sbb
imul
and
outsb
xchg
ljmp
cmp
test
iret
fists
pop
outsb
xchg
push
cs
pusha
jo
int3
call
cmp
daa
mov
scas
lds
cmp
cmp
icebp
pop
push
xor
stos
lods
shlb
cmp
push
pop
nop
enter
pop
subl
sbb
mov
dec
scas
nop
mov
mov
inc
dec
ds
dec
mov
mov
xchg
filds
jns
in
out
popf
imul
leave
inc
les
sarb
das
mov
xchg
sarl
ffreep
pusha
sbb
xchg
mov
mov
mov
icebp
sub
pop
iret
adc
ljmp
bound
and
popa
je
sbb
shrl
mov
dec
push
mov
lods
not
cmpl
fwait
pop
pushf
sahf
mov
test
fwait
push
divb
push
ror
ret
adc
out
in
sub
xchg
fwait
cmovo
xorl
lds
adc
adc
xor
sub
add
push
jb
sbb
repz
int
daa
jmp
dec
jo
xlat
ret
dec
xchg
and
icebp
out
xor
sub
sub
pusha
mov
mov
or
out
hlt
stc
push
lods
xor
push
jmp
mov
dec
inc
mov
push
dec
aaa
xor
xchg
cli
stc
add
fistpl
add
movsl
test
sub
cmp
sub
sub
out
jo
xchg
and
out
ret
lcall
es
pop
add
out
in
fistpl
and
push
push
scas
cwtl
xor
cld
push
into
push
jg
dec
es
scas
fildl
mov
aaa
pushf
mov
lods
dec
lcall
adc
xor
mov
jmp
nop
xor
insb
jno
push
mov
mov
cmp
xor
xor
push
loope
ficoms
adc
push
inc
pushl
pop
leave
cltd
push
clc
in
or
jb
cmp
mov
add
sub
loopne
adc
rolb
xchg
movsb
and
inc
aaa
into
js
cmp
nop
sub
aas
loop
imull
xchg
cld
ret
sub
inc
sub
push
out
addr16
std
jbe
outsl
or
xor
mov
js
pop
sub
sbb
inc
outsl
jl
in
int3
push
das
xchg
xchg
jmp
mov
adc
push
xchg
pusha
inc
inc
or
or
mov
mov
mov
out
inc
aam
test
sbb
js
sbb
cltd
jns
aaa
pop
pusha
mov
xchg
pop
lods
lret
or
jae
sub
cmp
mov
fisubrl
xor
sbb
shll
jecxz
add
dec
pop
sbb
cmp
out
int3
popa
add
movsl
insb
negl
mov
sbbb
mov
pop
push
int3
imull
or
mov
and
add
xor
bound
leave
cs
lds
test
or
mov
mov
aad
lret
idivl
sbb
ljmp
aaa
outsb
leave
call
sbb
inc
adc
mov
pop
or
jg
adcl
jne
jl
divb
mov
sahf
xorb
sbb
mov
cwtl
xchg
mov
jo
inc
pop
mov
add
push
push
cmp
bound
sbb
add
sbb
and
into
cmpsb
xchg
adc
sti
and
popa
add
sub
jle
inc
aad
push
in
rcll
dec
in
in
out
decl
push
inc
out
test
jne
js
and
fmulp
mov
mov
rcr
inc
addr16
subb
pop
inc
subb
sti
aaa
jb
adc
mov
fldt
push
imulb
mov
fld
push
and
mov
rcrl
jge
adc
rorb
cmpsb
xlat
stos
aaa
dec
sbb
pop
or
jge
inc
pop
call
mov
and
lret
inc
cmp
adc
dec
sbb
movsb
bound
push
and
dec
mov
jb
mov
dec
xor
push
mov
ss
xor
xchg
sbb
xchg
or
pop
and
aad
test
adc
add
add
ret
stos
jnp
xor
push
adc
lock
adc
imul
mov
in
pop
pop
dec
mov
mov
movsl
lods
and
push
xor
out
xchg
mov
aad
stos
iret
mov
pop
incl
inc
push
push
inc
les
adc
outsl
ja
rcr
es
mov
out
mov
pop
hlt
mov
cmp
les
lret
mov
test
push
fwait
stc
mov
pusha
bound
repnz
xor
out
mov
cmp
inc
add
jb
ret
fmull
hlt
dec
adc
repnz
adc
pop
or
test
xchg
out
jnp
aam
leave
fildl
rcrb
std
xchg
call
pop
repz
xchg
lahf
out
xor
fwait
cld
sub
inc
xchg
out
inc
in
and
cli
dec
mov
ror
xor
pop
cmp
mov
sbb
sub
lods
es
jp
insb
and
jbe
inc
in
test
push
mov
aaa
popa
add
inc
sahf
pusha
not
inc
fimuls
xor
mov
leave
fimull
in
stos
or
ja
in
test
sbb
push
ficomps
add
cvtps2pi
adc
xchg
icebp
das
daa
mov
xchg
mov
add
pop
fsts
movntq
jg
jg
jnp
or
fdivs
cmpsb
bound
or
jo
xor
andb
ret
jle
and
or
subb
jg
jp
jo
push
ret
dec
imul
pop
or
jge
add
aaa
mov
mov
icebp
mov
enter
push
hlt
xchg
adcl
pop
fs
mov
jb
mov
xchg
mov
mov
cmp
sbb
inc
xor
mov
sbb
stos
outsl
and
sti
gs
mov
es
xchg
rcrb
ja
inc
idivb
mov
xor
icebp
cmpsl
in
ret
push
pop
mov
scas
ds
cwtl
or
sub
dec
lret
add
mov
mov
loope
and
push
lods
test
fs
mov
imul
out
xchg
pop
rcrl
sbb
mov
jnp
movq
imul
stos
push
aaa
fs
ficompl
inc
dec
bts
pushf
pop
stc
stos
inc
sti
lcall
imul
push
jne
lret
rcll
or
mov
clc
mov
out
dec
fistpl
aaa
iret
and
dec
inc
mov
push
repnz
mov
std
jae
inc
push
dec
xor
sbb
movsl
js
dec
push
mov
xor
bound
in
imull
psrad
dec
flds
jb
aad
sub
cwtl
pop
mov
mov
add
je
repz
cmpsl
mov
or
cmp
cmc
js
pushf
gs
insb
outsb
dec
aad
push
int3
add
ja
fnstcw
xlat
data16
jne
and
xchg
std
divb
je
pop
pop
cltd
inc
push
arpl
movsb
icebp
cmp
in
lahf
push
sbb
adc
andb
ss
fwait
leave
not
sub
sbb
pop
fnstenv
sub
mov
lock
mov
dec
jo
mov
push
pusha
cmp
xor
and
lret
push
sbb
inc
aaa
das
and
cmp
in
jae
pop
jecxz
out
ss
lret
enter
mov
and
jmp
adc
jp
mov
sbb
dec
cmc
popa
xchg
mov
inc
fmull
arpl
lahf
jle
mov
push
mov
mov
push
test
stos
cmp
jl
and
loope
mov
mov
xchg
leave
hlt
xor
push
rcrb
in
div
vaddps
popf
adc
sbb
xor
idiv
repnz
jecxz
pop
and
push
and
das
int
inc
and
and
cmpsl
ljmp
addr16
lret
or
sub
loope
subb
inc
aam
lods
jbe
xlat
shlb
jge
stc
andl
mov
mov
sbb
jecxz
or
sahf
sbb
adc
cmp
fisubrl
insb
test
xor
sbb
jmp
leave
cwtl
add
jecxz
fsts
and
sub
or
mov
mov
call
aad
add
mov
in
and
test
cmpsb
and
mov
or
mov
inc
push
add
push
push
pop
xchg
pusha
jo
aam
cmc
add
xor
push
and
outsb
jg
stos
xchg
inc
mov
test
pop
incb
nop
lods
and
lock
sbb
fsubr
adc
mov
hlt
nop
fwait
iret
cltd
ds
push
cmp
cmpb
mov
pop
push
adc
ljmp
cmp
push
mull
lret
inc
sbb
js
dec
inc
ret
negl
fdivr
jp
es
inc
movsb
dec
jbe
pop
filds
daa
in
pop
aas
je
mov
or
aas
inc
leave
or
jb
inc
std
mov
rol
push
test
das
rcrb
fimull
ret
push
das
arpl
xchg
dec
ja
xchg
out
and
call
imul
xor
jne
fiadds
pop
std
push
pop
test
dec
cmp
mov
fs
dec
xor
add
inc
or
rolb
dec
sub
loopne
or
fwait
lret
push
int
mov
jle
add
pop
jg
jae
mov
nop
mov
xchg
xor
push
stc
cmp
stos
clc
xrelease
dec
arpl
xor
dec
jno
fldcw
outsl
test
aam
or
xor
lods
jns
adc
push
addb
jp
sub
lock
test
fidivrl
or
push
out
in
pop
mov
sbb
mov
add
cwtl
sub
jne
pop
pushf
sub
repnz
out
int3
adc
clc
sti
data16
push
pusha
or
mov
iret
hlt
or
cmp
mov
test
rclb
icebp
dec
das
adc
scas
pop
ficoml
pop
mov
mov
stc
cmp
stos
mov
outsb
push
sbb
xchg
sbb
pop
inc
mov
stos
out
imul
sub
xor
xchg
jl
add
fbld
push
sub
popf
xchg
fsubrl
mov
insb
arpl
xchg
xchg
inc
jmp
ret
push
outsl
clc
jl,pt
inc
xchg
imul
popa
push
mov
clc
dec
or
push
sbb
xchg
xchg
repnz
mov
mov
lds
inc
xor
lods
lock
sbb
loopne
decb
push
adc
fmull
in
mov
mov
stc
add
xchg
outsb
jmp
xor
int3
pop
or
lcall
sub
pop
xlat
imul
orl
xchg
ret
mov
xor
or
xchg
jae
lret
imul
jl
xchg
jge
mov
je
or
cmp
outsb
stc
loopne
pop
or
add
adc
hlt
cs
bound
arpl
and
sub
scas
or
cmp
jge
mov
dec
cmp
lods
push
mov
int
sub
mov
xorb
jbe
xlat
sub
fsts
test
out
insb
cwtl
sub
cmpsb
loop
dec
sub
leave
test
popf
push
mov
push
push
ljmp
adc
mov
inc
in
jbe
int3
insb
cltd
dec
adc
rorl
sbbb
ljmp
add
stos
int
cmp
iret
jbe
mov
xor
into
pop
xchg
mov
sub
loope
sbb
roll
inc
add
in
imul
jnp
popf
jb
adc
hlt
outsb
push
cmp
loope
aas
cmp
sbb
lret
sarb
mov
push
sbb
lret
add
cmp
daa
add
mov
sarl
mov
imul
mov
adc
cmp
cmp
sbbl
ljmp
ljmp
fsubrp
mov
adc
movsb
sub
lods
push
xchg
mov
js
inc
push
xlat
scas
sbb
loopne
repnz
mov
sbb
jns
mov
pop
fnstcw
sti
jg
lea
sbb
lods
js
pusha
fdivrs
andb
cs
leave
pusha
arpl
push
sbb
arpl
fs
imul
or
in
in
jnp
loop
mov
stos
jne
imul
mov
xchg
pop
mov
mov
fs
popf
cwtl
adc
jmp
and
ja
push
push
lods
les
dec
xchg
push
loopne
lods
fildll
nop
insw
loopne
mov
jo
leave
inc
das
andl
mov
popf
dec
ljmp
push
adcl
cmp
andb
lahf
sti
mov
sub
pop
out
pop
iret
lret
test
arpl
test
xlat
les
aaa
les
mov
rorb
jle
fmull
into
js
cli
sub
mov
test
and
icebp
in
mov
xchg
divb
xchg
ja
pop
xchg
aam
inc
push
rorb
jns
fistpl
cmpsl
adc
xor
and
xchg
sub
adc
jl
dec
jecxz
dec
popf
shrl
adc
pusha
movsb
mov
scas
aas
add
in
pop
fsubrl
out
inc
fwait
pusha
sub
mov
jp
nop
jg
pop
xchg
testb
jg
mov
push
jle
xor
pop
dec
xchg
dec
lock
test
mov
ret
in
pop
in
dec
lods
es
adc
fxch
daa
fistpl
inc
fimull
push
pop
jge
xor
repnz
fdivr
enter
lcall
mov
and
push
int
xor
xchg
sar
mov
lret
inc
xchg
inc
push
and
jecxz
stos
rcr
adc
push
push
push
js
xchg
jno
int
mov
push
mov
dec
pushf
in
mov
pop
out
pop
jb
mov
or
dec
cmp
xchg
xchg
arpl
cmp
fildl
movsl
and
mov
jle
das
inc
jmp
repnz
mov
bound
sbb
into
adc
xchg
fldl
in
xlat
popf
xor
shrl
xchg
inc
iret
xchg
je
scas
lds
cmp
cmp
movsl
cltd
lock
cltd
jmp
or
xor
sub
pop
mov
lock
push
dec
fs
push
mov
stos
inc
push
shrb
shrl
outsb
scas
in
jns
cltd
sbb
xorl
ds
adc
test
adc
loope
pushf
adc
cmp
cmp
mov
pop
mov
xchg
sbb
testb
jge
stc
clc
push
adc
or
jl
jecxz
push
sahf
les
lods
inc
and
cs
xchg
mov
imul
pushf
xchg
lock
and
mov
pop
daa
loopne
stos
test
jge
adc
cmp
leave
sbb
in
aas
and
dec
xchg
insb
xor
jnp
pop
or
pop
mov
jmp
inc
out
mov
or
pop
data16
sub
adc
lret
or
or
mov
cmp
out
insl
leave
stc
ds
sti
xchg
ret
movsl
inc
pop
cmpsb
cmpsb
rol
lahf
or
insl
movsl
xchg
cltd
lahf
add
test
sarl
je
xor
xchg
add
cmc
mov
pop
and
mov
loopne
ret
adc
cli
sbb
cmpb
xchg
jecxz
push
xor
cmp
sub
lock
pushl
sub
jg
hlt
cld
mov
sti
aas
inc
adc
test
or
adc
lock
out
pop
xchg
add
leave
std
arpl
inc
rcrl
mov
int
movsb
or
imul
roll
mov
jl
add
sub
sbb
jb
lods
out
add
js
cmp
and
mov
ss
aam
cmpsl
cmp
scas
lods
adc
mov
sub
mov
cwtl
xchg
test
into
sbbl
or
int
pop
dec
mov
das
fcomp
cltd
sub
lahf
push
out
ss
xchg
hlt
stc
and
leave
xchg
pop
push
xchg
jne
pop
inc
jg
mov
pop
sbb
xlat
stos
xor
aad
dec
inc
xor
xor
out
inc
pminub
jo
test
rclb
and
xchg
lcall
cld
sub
mov
xor
sub
xor
ja
push
movsb
mov
add
mov
xchg
mov
mov
mov
in
int
aas
outsl
popa
test
push
jmp
dec
push
adc
flds
mov
les
pop
icebp
inc
dec
arpl
rcrb
rcrb
xchg
or
xchg
loopne
pop
rcll
lcall
aas
stc
xchg
mov
dec
imul
sbb
nop
int3
sbb
pop
mov
cli
scas
fbstp
rcrl
scas
je
hlt
cltd
and
orl
mov
aad
out
aad
or
add
data16
mov
in
jb
in
pop
hlt
inc
adc
test
fs
cmp
sbbl
add
jnp
inc
fldt
popf
pop
adc
lods
cltd
cmp
or
mov
pop
repz
lock
sbb
dec
clc
mov
or
test
pop
iret
fwait
clc
loop
inc
push
push
xchg
test
push
stc
cmpsb
fs
push
icebp
ds
jne
daa
add
add
cmp
hlt
mov
pop
mov
cmc
mov
cmpsl
mov
sbb
inc
cmpsb
mov
fwait
cmp
lahf
lret
or
dec
push
cwtl
cmpsl
sbb
das
aad
jge
mov
or
xor
lock
std
lcall
cmp
ja
sbb
mov
lcall
shrl
jns
push
cli
mov
xchg
mov
aas
pop
int
aam
and
mov
out
xor
xchg
imul
and
testl
fimuls
insb
push
pop
mov
and
mov
test
xchg
movsl
mov
mov
lock
inc
cmpsl
pop
xor
dec
aas
pop
xor
or
je
pop
xor
adc
mov
out
mov
or
mov
mov
xor
adc
mov
lret
js
push
xor
outsb
test
push
push
addr16
into
insl
push
aas
mov
mov
lcall
insl
or
add
ds
push
cmp
repz
out
fdivrs
out
lahf
or
fldenv
pusha
enter
clc
lods
leave
or
or
enter
test
decl
or
sub
dec
or
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
dec
adcb
bound
bound
jecxz
std
arpl
mov
dec
cmp
adc
rcrb
les
cmp
pushl
sbb
xlat
jno
clc
adc
mov
testl
sbb
and
inc
xchg
pop
subb
in
xchg
imul
loope
cmpsl
in
mov
scas
ret
sar
xor
aaa
jne
add
push
cmp
stc
stc
mov
add
cmp
xor
pop
fstps
insl
imul
imul
jns
les
aam
adc
jp
push
cmpsl
mov
in
mov
imul
jmp
xchg
xchg
addr16
loope
or
sub
sub
stc
pop
lret
mov
xchg
mov
xchg
test
jp
or
mov
or
or
xchg
lods
clc
sar
andl
pop
xlat
xchg
inc
sub
add
or
mov
xor
dec
loope
test
scas
aad
out
sub
jge
xchg
and
int
cmp
fstp
jmp
add
gs
pop
sub
int
inc
arpl
fbstp
xor
pop
loope
mov
add
adc
test
xlat
test
xor
mov
xor
jno
mov
lods
and
mov
std
and
jb
push
stc
dec
mov
gs
stos
and
ljmp
xchg
aam
add
in
inc
push
push
sti
rorl
imul
push
mov
dec
push
mov
mov
or
mov
pop
filds
jmp
dec
lcall
xchg
pop
push
daa
mov
adc
popf
mov
imul
jo
sub
dec
dec
jg
mov
faddp
jnp
and
dec
pusha
xor
ss
fs
mov
sahf
dec
jno
jg
divl
sbb
sbbb
xor
rcrb
cmp
jnp
mov
leave
dec
xchg
add
and
mov
call
mov
cltd
xchg
push
jns
stos
call
ss
mov
pop
cld
testl
pop
dec
test
inc
clc
ljmp
leave
xchg
xchg
pop
mov
adc
sub
lret
push
inc
cmp
cs
dec
jge
test
push
add
add
jmp
xchg
aam
aam
pop
mov
sbb
dec
cld
mov
mov
mov
insl
add
xor
mov
lea
negb
inc
insb
add
scas
xor
stos
cld
cmp
mov
xchg
shlb
jg
mov
test
test
sub
lock
mov
enter
stc
add
mov
pop
lds
dec
mov
stos
mov
mov
push
orl
aas
xchg
pushl
xchg
xchg
cltd
es
or
sub
ljmp
jb
lret
jne
cld
lea
int
mov
inc
dec
sub
mov
fwait
imul
adc
sahf
popa
dec
jb
pop
out
push
mov
sbb
sbb
xchg
mov
mov
inc
xor
mov
jbe
fisubrl
adc
sahf
shl
xor
add
scas
and
addb
stos
xchg
sbb
push
adc
shlb
dec
sbb
jmp
movsl
pop
mov
mov
out
mov
sub
and
pop
sbb
xchg
hlt
dec
sbb
xchg
dec
movsb
fcoml
outsl
rcrb
mov
push
cli
jae
pushf
jge
xchg
leave
or
inc
test
lea
adc
mov
pushf
mov
neg
dec
ja
nop
test
daa
pop
mov
out
cltd
aam
dec
cmp
lahf
and
add
fnstenv
mov
jecxz
pop
mov
push
jge
sub
cmp
cld
pop
or
cmc
out
jb
cmc
jp
cwtl
push
test
dec
jle
neg
stc
stos
jl
dec
cld
cmp
dec
es
subl
scas
mulb
and
cmp
lods
jbe
jbe
cmpsl
add
push
fst
cmp
aam
adc
mov
xor
mov
xchg
xor
push
insb
pop
ret
mulb
fdivrs
hlt
jg
mov
inc
addr16
jne
jne
ljmp
mov
mov
dec
stos
loop
push
sub
xchg
jg
jne
cmp
inc
jp
mov
xchg
jno
adc
jl
push
or
xchg
mov
outsl
scas
mov
jns
inc
mov
adc
les
scas
ret
inc
mov
call
call
or
arpl
push
bound
xor
arpl
sbb
push
out
xchg
ja
push
push
xchg
cmp
lcall
jb
cwtl
push
sbb
es
leave
and
loope
and
sbb
xchg
aas
pop
add
movsl
outsb
cmpb
push
pushf
aaa
sub
and
mov
pop
cwtl
jo
adc
sub
sti
jle
mov
inc
lock
int3
xorl
mov
rolb
cwtl
js
xchg
aam
gs
push
stos
cld
push
cmovb
repz
jmp
outsl
inc
movsl
mov
mov
pop
cmp
jnp
data16
jo
rorl
aaa
inc
lret
jmp
cmp
push
add
in
push
pop
popa
push
push
dec
mulb
and
or
xor
sub
push
cmpsb
adcl
sub
push
bound
mov
mov
es
and
nop
and
mov
clc
bound
jg
cltd
push
jb
pop
jo
push
ljmp
mov
mov
loope
negl
cltd
jge
and
fwait
mov
cmp
frstor
pusha
mov
push
leave
cli
shlb
shll
inc
cmp
iret
addr16
dec
pop
sarb
sub
outsl
js
ss
pop
cs
sub
push
inc
mov
les
push
in
cld
fsubr
sub
adc
jp
loope
cltd
mov
rol
movsl
adc
inc
xor
sbbb
push
aam
shr
insb
sub
pop
aaa
xchg
mulb
lods
push
add
sbb
test
roll
fidivrs
arpl
xchg
inc
test
test
testb
xor
jle
sub
adc
cmp
jno
sub
decb
in
jbe
inc
mov
fstpl
outsl
pop
popa
jnp
mov
test
xchg
cmpsl
sbb
in
mov
test
mov
add
and
mov
jae
pop
jmp
cmp
push
lds
add
into
loop,pt
addr16
cli
mov
shll
cmp
pop
xor
cmpl
cs
or
aad
dec
adc
std
popa
mov
mov
outsb
movsl
les
ret
andl
in
lret
dec
dec
xor
mov
in
and
hlt
mov
inc
jns
and
sub
cmpsb
lods
xor
cmpsl
dec
sbb
mulb
jge
xchg
or
out
out
xchg
fwait
loop
jns
pop
inc
pop
lods
sbbl
imulb
fnstcw
mov
or
mov
mov
js
jmp
sub
aaa
cmp
insl
xchg
clc
or
sbb
mov
xor
add
scas
inc
jge
xor
jecxz
inc
xor
adc
inc
mov
push
mov
in
enter
ret
les
jnp
jno
stos
int
iret
andl
cltd
fbstp
fs
mov
cmp
and
loopne
inc
mov
xchg
mov
mov
jbe
hlt
or
xchg
bound
lds
and
sub
outsb
xchg
adc
std
pusha
popa
leave
dec
lods
lods
and
pop
imul
add
data16
and
mov
mov
test
aaa
mov
xchg
out
push
jnp
xchg
mov
nop
and
daa
cmp
cld
mov
aas
les
loopne
repnz
mov
or
lcall
and
mov
lcall
shll
lret
das
pop
sbb
cmpb
cmpsl
pop
add
dec
or
mov
jmp
in
fsts
and
jae
push
push
test
pop
mov
jp
mov
ret
repnz
mov
icebp
cmp
inc
imul
cwtl
jecxz
aad
dec
add
sbb
andl
ret
mov
pop
xchg
shl
inc
cmp
xor
push
daa
fistps
adc
cli
jno
inc
and
sub
dec
iret
dec
lods
xchg
stc
cltd
lret
fisubs
fwait
shlb
fstp
sbb
jns
sbb
push
xor
mov
pop
xchg
insl
cmp
scas
imul
es
sbb
xor
cmp
jmp
ja
add
mov
mov
cmp
fldl
dec
mov
cmp
loopne
call
push
icebp
xor
dec
xor
cld
and
lock
mov
mov
in
cmp
cwtl
cmp
mov
cmp
cld
icebp
aas
jecxz
push
std
inc
or
dec
pusha
mov
stos
lret
mov
sub
pop
sahf
cmp
sub
push
aas
jg
adc
xchg
fidivl
mov
mov
or
stc
pop
mov
mov
mov
icebp
jbe
repnz
stos
scas
out
pop
or
es
mov
aas
in
mov
rorl
jb
mov
jne
pop
gs
int
stos
lock
xchg
sbb
inc
movl
sub
lea
outsl
aam
xor
cmc
out
iret
mov
sar
pop
mov
xor
repz
add
jbe
xchg
xchg
inc
mov
out
test
into
cld
xor
es
push
cmpsb
outsl
mov
jae
xor
cmpl
out
out
mov
test
std
inc
fistps
fdivr
mov
lret
adc
cmc
and
push
adc
lock
bound
ficompl
mov
mov
inc
xor
and
fimuls
xor
lahf
testb
lods
insl
movsl
cmp
loopne
hlt
gs
jns
add
sub
sub
push
lret
lods
adc
push
sahf
orb
mov
xor
jns
mov
outsl
push
cmp
std
hlt
xchg
or
jge
dec
or
add
cmp
or
out
push
test
mov
push
aad
stos
push
inc
adc
leave
iret
xor
out
loope
bound
dec
mov
xchg
and
inc
out
push
mov
es
xchg
cmp
mov
mov
test
std
movsl
testl
jno
stc
xchg
jbe
add
pop
inc
xchg
inc
mov
sti
pusha
lret
ljmp
sub
xchg
cltd
out
jb
rorb
xchg
jl
outsl
pop
jbe
xchg
and
and
sub
xlat
clc
dec
ja
xchg
push
testl
rolb
cmp
inc
jmp
arpl
inc
add
div
lret
push
cmpsb
inc
inc
pusha
mov
mov
inc
jae
lcall
dec
fcmovnb
setge
mov
sbb
mov
push
jne
adc
add
or
xor
aam
or
push
divl
xlat
cmpsl
inc
xchg
adc
dec
mov
andl
and
xor
push
jl
das
adc
add
ljmp
xor
and
loop
mov
xchg
and
xor
mov
sahf
mov
and
cs
sub
xchg
rorb
test
cmp
es
add
lcall
jbe
test
jle
hlt
ret
push
xor
pop
dec
fstl
aas
fisubrl
jp
add
pop
xchg
xor
pusha
mov
push
sub
jmp
or
test
dec
push
jnp
push
jo
mov
cmp
push
jns
shrl
daa
or
jle
test
pop
xchg
push
rolb
loope
cmp
xchg
sbb
cmc
mov
imul
add
scas
ret
test
ss
and
lcall
or
divb
daa
dec
and
int
scas
stos
xchg
adc
or
mov
add
cld
pop
out
icebp
data16
mov
loop
es
cmpb
ljmp
inc
gs
test
mov
addr16
int
bound
idivl
pop
xchg
add
roll
dec
dec
movl
cli
dec
mov
adc
fmuls
pop
clc
sub
cmpl
sbb
inc
jno
das
dec
sub
fildll
ljmp
pop
movsl
gs
bound
mov
push
rcll
rolb
adc
fildll
add
xchg
int
insb
addl
adc
daa
sub
pop
cmpsl
ja
pusha
ds
mov
mov
push
popa
fsts
xchg
hlt
fnsave
or
xor
inc
notb
and
xchg
call
mov
movsl
adc
insb
adcb
adc
outsl
cmp
dec
stc
call
jmp
dec
jg
nop
sbb
mov
cmc
or
inc
mov
aaa
popa
lods
insb
cs
cwtl
push
mov
das
out
adc
insb
dec
inc
cs
lahf
and
test
mov
lock
insb
inc
xchg
mov
and
repnz
int3
std
in
inc
pop
out
or
inc
xchg
mov
rol
push
scas
cmp
cmpb
pop
jbe
daa
adc
icebp
xchg
adc
fnstcw
or
pop
sub
out
jae
pop
aam
in
jo
cmpsb
push
arpl
mov
dec
dec
xchg
mov
sti
test
sub
inc
sub
pop
hlt
aas
jp
decl
ds
dec
fwait
loope
int3
insb
int3
xlat
pop
dec
notb
push
and
ret
test
aas
cmc
leave
push
cltd
in
rcr
mov
je
inc
dec
xchg
pushf
movb
jge
dec
into
mov
cmp
mov
push
fisttpll
cmp
enter
lret
push
in
jmp
fs
jecxz
mov
pop
inc
out
jl
push
loop
clc
or
mov
std
ror
setne
dec
loope
fildll
add
jecxz
jnp
imul
mov
shrl
xchg
pop
cwtl
dec
gs
adc
mov
mov
enter
fmuls
xor
cmp
mov
not
cmp
dec
rcl
push
stos
sub
std
cmp
arpl
jle
stc
dec
aad
dec
movsb
movsl
inc
das
adc
test
push
ret
mov
mov
push
or
push
into
sahf
and
cmp
jmp
xor
das
ret
faddl
cmp
mov
add
pop
jns
icebp
inc
adc
lds
xor
bswap
in
xor
add
lahf
rorb
in
inc
sub
inc
pushf
jge
inc
dec
scas
adc
adc
orl
cltd
test
in
test
jp
mov
push
aad
pop
jge
flds
xor
add
jno
xor
div
in
fwait
xchg
sbb
shl
jne
out
lret
adcb
add
dec
cmpsb
add
sbbb
jno
stc
std
jg
out
mov
jp
mov
or
pop
stos
lock
stc
mov
cs
int
adc
mov
pop
and
rcll
mov
add
in
sti
into
aas
sub
mov
mov
shlb
sub
add
xlat
add
nop
push
push
sahf
or
add
loopne
sbb
mov
push
or
adc
push
lahf
lahf
fmuls
or
arpl
test
cmc
push
pop
jge
fstpl
sub
sub
cmpsb
rolb
fldl
jbe
jmp
fstps
daa
xor
mov
imulb
push
jbe
inc
out
adc
lahf
lods
mov
das
push
xchg
lds
mov
lret
dec
xor
leave
fcmovnu
gs
enter
mov
sbb
mov
mov
hlt
out
movsl
jmp
test
sub
aad
bound
nop
mov
sub
mov
aad
dec
xchg
aam
aaa
or
push
add
adc
stc
xchg
stos
fidivs
pop
in
into
sub
stc
js
cld
mov
or
sbb
lret
xchg
rcrl
mov
mov
and
cmp
jecxz
sub
push
ja
xor
daa
adc
loop
call
nop
sbb
fs
inc
jbe
and
icebp
jge
sbb
aam
nop
push
sar
ja
pop
add
push
into
out
mov
mov
or
inc
not
faddl
push
into
cmp
push
jecxz
movsl
ljmp
daa
pop
loopne
pop
pop
js
pop
sbb
cmp
jae
in
lock
dec
adc
pop
or
mov
jno
insb
and
aad
fwait
adc
lds
pop
ret
inc
lea
cmp
dec
aam
ficomps
ljmp
cmp
adc
sti
mov
pop
adc
or
addb
fiaddl
setne
sarl
scas
mov
pop
add
mov
adcl
push
gs
outsb
stos
call
outsl
pop
divl
mov
sub
stc
pop
sahf
mov
neg
ja
xchg
adc
sbb
xchg
fcoms
cmp
es
adc
sub
xor
scas
iret
inc
mov
shl
xchg
mov
in
cmpsl
inc
fstp
rcr
pushf
inc
jl
lods
stos
sarb
cmpsb
insb
push
cmp
xor
std
arpl
test
in
pop
xlat
mov
lock
andl
push
stc
push
fs
stos
aam
int
dec
push
movsl
stc
dec
in
mov
ret
jge
aaa
ret
clc
test
lahf
lret
sbb
mov
cmp
data16
test
aas
leave
push
dec
push
sub
xor
cmp
mov
std
imul
pop
push
mov
push
pushf
pop
xchg
cmp
test
sahf
jne
test
mov
lret
ret
ds
clc
jb
jecxz
dec
xchg
mov
dec
stc
leave
popa
inc
or
jecxz
insb
pop
mov
aam
inc
sbbb
shrb
mov
ftst
push
lret
fsubr
in
pop
lods
imul
or
outsw
repnz
test
mov
xchg
pop
dec
mov
mov
and
cmp
xchg
xor
std
sub
cmp
scas
or
or
arpl
mov
or
jmp
xchg
es
rorl
cmp
and
and
and
sub
adc
push
mov
lcall
fldcw
pushf
jg
imull
jmp
enter
or
stos
loopne
inc
out
lcall
sbb
mov
test
push
in
jno
mov
xchg
scas
gs
sub
lret
mov
aad
fistpl
pop
daa
shrl
fmuls
addr16
mov
dec
jp
inc
jle
mov
bound
inc
and
repz
push
sub
mov
jle
sbb
icebp
xor
inc
xchg
sbb
pop
jae
inc
adcb
and
mov
lds
jo
push
repz
repnz
dec
add
mov
arpl
mov
movsb
int
jno
mov
loop
lods
test
fidivrs
jnp
xchg
enter
or
int
and
cltd
cmpsb
test
jg
mov
es
addr16
xchg
lret
and
and
mov
mov
lods
pop
cmp
stos
in
ja
or
ret
stos
fnstenv
pop
in
xor
mov
dec
jecxz
jne
jmp
lea
pop
cmp
lret
sub
dec
mov
jp
pop
xchg
and
je
in
pusha
mov
aad
es
movl
js
xor
jmp
pop
add
pop
stos
hlt
insl
je
dec
cmp
stos
negl
test
rorl
jo
or
and
repnz
fsincos
lds
cmc
ret
jmp
cmp
dec
mov
push
push
mov
stc
pop
sub
dec
imul
std
or
push
mov
arpl
mov
std
pop
lods
aas
inc
xchg
sbbl
push
and
lock
jecxz
mov
imul
xor
add
adc
jge
xor
outsl
subl
dec
sub
dec
mov
outsl
into
dec
in
add
cmp
les
lds
push
mov
movsb
mov
mov
shll
xor
add
dec
stos
sbb
in
push
adc
clc
lcall
loopne
in
mov
sbb
mov
push
mov
xchg
lods
sbb
test
sbb
push
mov
gs
test
adc
inc
xchg
ljmp
clc
aam
xchg
out
inc
pop
xor
subl
sbb
cmp
or
mov
pop
jbe
dec
jmp
insl
push
pop
mov
shlw
sti
xor
insl
rcrb
push
arpl
xor
or
pop
popa
ret
jb
add
ret
mov
push
outsl
dec
xchg
lret
mull
add
or
xchg
aaa
sbb
jmp
and
cs
aam
addr16
or
in
ficoml
mov
mov
mov
loopne
decl
adc
stos
push
outsl
fstpt
aaa
call
sbb
das
lahf
jnp
pop
mov
jecxz
shll
test
ljmp
jecxz
les
iret
push
sub
sarb
pop
mov
aad
mov
ss
in
mov
lret
stos
loopne
sub
xor
xor
push
fwait
sahf
insl
sarb
inc
xorl
xchg
ljmp
out
shll
popa
mov
dec
cs
test
lods
jnp
iret
push
andb
sahf
in
icebp
arpl
sbb
cmpsl
push
mov
je
xchg
in
mov
inc
sar
jb
mov
mov
stos
push
fmulp
movsb
bound
jno
xchg
lret
fwait
mov
call
daa
push
aaa
jg
xlat
cmpsb
adc
inc
gs
lods
xchg
sbb
insl
sub
mov
mov
cwtl
jnp
sarb
rclb
push
cmp
adc
popl
out
into
xor
std
scas
repnz
push
sub
out
hlt
pop
in
and
out
cmp
mov
xchg
sub
aad
sbb
sub
adcl
jge
and
inc
dec
lods
lods
in
fildl
push
loopne
ficomps
jp
mov
dec
push
xor
inc
inc
subb
sbb
popf
lret
sti
jbe
push
pop
stos
arpl
ret
ljmp
gs
sub
jecxz
adc
jg
outsb
push
outsl
insl
ss
sub
stos
pop
outsl
jle
sub
sub
and
cs
dec
aaa
cmpsb
fcmove
ret
fcmovnbe
xor
scas
mov
aaa
mov
lea
pop
jo
clc
addl
pop
loop
cmpsb
mul
stos
imul
scas
cwtl
ja
mov
adc
sub
mov
push
scas
sbb
dec
push
push
int3
inc
mov
insb
loopne
aaa
or
addr16
inc
mov
out
pop
inc
pushf
sti
fidivrl
dec
dec
adc
jno
rcr
xor
gs
or
clc
cwtl
push
mov
and
stc
inc
popf
xchg
xchg
cmp
mov
jns
and
jecxz
rclb
insb
sbb
fucom
xchg
inc
les
in
or
stos
int
pushf
jne
lret
jns
int
arpl
cmp
dec
xor
cwtl
dec
xchg
test
stos
je
adc
cmpsb
xor
push
outsl
sub
mov
and
and
jge
mov
xchg
xor
mov
push
adc
shr
sub
es
fstpl
leave
adc
adc
shrb
fidivl
scas
inc
insl
fcomps
lods
mov
lock
add
cmp
pop
add
adc
repnz
jno
push
xchg
inc
lods
jg
cli
repz
xor
add
stos
fwait
ljmp
push
scas
xor
or
insl
jl
outsb
negb
outsb
cmp
dec
sub
mov
hlt
imul
mov
xor
mov
in
jle
lods
test
pop
inc
divl
out
les
pop
lea
int
dec
test
push
xchg
icebp
nop
cmc
les
lods
mov
es
push
adc
jbe
or
sarl
test
movsl
pop
sbb
shr
push
cmp
xchg
outsb
pop
test
fwait
mov
add
iret
out
push
jge
pop
repz
test
push
mov
pusha
adc
sub
jbe
mov
fcoml
lods
xchg
js
cmp
jb
popa
fsubs
out
rcrl
or
int3
call
push
js
imul
jns
sbb
dec
sbb
loopne
jb
sti
fildll
mov
dec
das
mov
ljmp
and
icebp
popf
inc
mov
and
insl
shll
fldl
test
test
lret
xchg
cmpsl
ret
mull
xchg
inc
lods
iret
insb
inc
test
fidivrs
inc
aaa
mov
pop
mov
cmpsl
imul
jecxz
loope
add
inc
ret
jl
lea
gs
dec
loope
sbb
loop
out
in
lret
divl
push
cmp
out
dec
mov
sub
and
sbbb
cltd
hlt
jae
scas
jbe
add
scas
mov
out
sbb
inc
xor
fnsave
ret
xchg
lret
lock
std
sbb
mov
push
lock
xor
jo
mov
fdivrs
mov
add
lret
pusha
repz
popf
and
or
add
mov
les
test
sub
pop
iret
xorb
and
les
pop
push
cmpsl
into
jecxz
pop
arpl
dec
dec
mov
pushf
int
fxch
cs
add
or
mov
popa
jp
mov
pusha
cmpsb
and
mov
sbb
adc
leave
out
push
repnz
sbb
cmp
movsl
push
lods
pushf
notb
loop
sbb
addr16
int
lock
ss
or
push
repnz
je
adc
es
arpl
xor
jmp
outsb
jl
adc
add
sbb
or
clc
inc
outsb
pop
cld
xor
arpl
testb
sahf
xor
sub
fbld
add
mov
mov
mov
cwtl
jo
out
cs
fidivrs
addr16
jnp
shlb
lods
mov
inc
inc
push
xchg
rorb
xchg
push
in
sahf
mov
es
or
sbb
mov
xlat
lds
dec
mov
inc
test
jge,pt
xor
push
and
repnz
and
mov
fwait
test
cltd
mov
sub
dec
rcll
int
std
cwtl
push
and
cmp
out
clc
sti
xchg
add
clc
mov
pusha
jle
dec
pop
mov
sbb
ljmp
push
jbe
repz
xchg
mov
pop
cs
xchg
shlb
dec
pop
mov
mov
xchg
mov
and
aam
loope
iret
dec
cmpb
das
jmp
lret
xchg
lret
ja
cmp
mov
pop
mov
and
ss
add
out
adc
pop
sub
lods
and
lcall
es
aad
jp
pop
xor
push
jo
add
lock
ja
cmp
cmpsl
loope
int
pop
shrl
adcl
pop
inc
in
cli
inc
xor
cmp
repz
xchg
jmp
pop
or
mov
icebp
enter
fsubs
lret
out
addl
test
mov
mov
iret
movb
adc
push
and
xor
xchg
jmp
sbb
in
loope
add
cmpsb
inc
test
fcom
cltd
fcoms
xor
jge
adc
cld
or
jbe
aaa
movsl
xchg
cli
lock
neg
or
jns
imul
pop
imul
shrb
adc
sbb
push
jb
dec
cs
dec
ficompl
inc
js
fldenv
or
in
fidivs
in
jmp
lods
fwait
ret
je
outsl
arpl
repnz
xor
cld
sub
ret
mov
mov
push
cmc
sub
sti
fstps
jmp
sub
sbb
add
xorl
fcom
mov
stos
ljmp
in
adc
adc
outsb
push
ret
inc
mov
fcomp
xlat
xchg
mov
add
fisttpl
ja
xchg
xchg
sub
add
xor
dec
pop
scas
popa
notb
pop
fsubp
mov
cmpsb
adc
xchg
cmp
adc
push
sarl
xchg
fistpll
movl
mov
xor
stos
loop
adc
mov
add
xlat
lock
push
out
daa
das
push
out
cli
xor
lret
or
jecxz
mov
jmp
ds
inc
mov
jo
mov
lods
adc
dec
jnp
loopne
pop
xchg
rcl
cmp
ret
mov
outsb
jmp
jp
mov
adc
cmp
xchg
lea
pop
pop
in
outsb
xchg
aas
mov
lcall
dec
sub
loopne
test
movsb
xchg
add
popf
mov
sub
popa
push
fsubrl
enter
pop
add
cmp
sbb
mov
repz
push
sbbl
mov
lds
inc
popa
sub
jne
mov
pushf
fmuls
pushf
enter
cmp
cwtl
sbb
cltd
xor
and
mov
das
scas
int
and
fwait
ljmp
add
dec
mov
icebp
mov
mov
jno
popf
push
inc
cmp
popf
xor
in
scas
nop
scas
out
pop
iret
push
sbb
push
adc
jns
repnz
shl
in
fsubs
sarb
mov
or
mov
cld
shr
gs
inc
mov
sahf
mov
movsl
and
sbb
inc
leave
mov
push
cmpsl
lahf
jno
xor
jle
mov
in
mov
push
sbbb
pop
jo
push
and
push
fwait
je
into
cmp
push
xor
adc
and
and
xor
int3
iret
pop
cli
std
push
and
stos
jge
rolb
iret
outsb
stc
sub
shll
dec
daa
mov
call
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
push
mov
arpl
add
imull
jnp
fwait
mov
pop
sub
mov
mov
popa
mov
je,pt
std
aad
xor
sti
dec
shrb
cmp
xor
out
xlat
push
jno
or
cmp
sub
orl
fisubrs
dec
and
xlat
mov
or
sti
push
fldcw
sub
pop
pop
add
add
add
sub
adc
cmp
out
pop
xchg
push
fcmove
add
arpl
add
cld
clc
fs
dec
out
enter
add
cmp
and
adc
pop
aam
jmp
xor
jg
pop
inc
push
sbbl
dec
aas
and
incl
movsb
fistpll
outsl
std
out
aaa
sub
or
xorb
sub
push
jns
icebp
gs
lock
stc
sub
add
sub
sub
addb
into
add
arpl
add
or
xchg
fcomi
or
xor
add
or
mov
icebp
es
ret
addr16
sub
xor
cli
xor
out
add
jecxz
add
mov
xchg
scas
lret
mov
add
pop
mov
push
lcall
fisttps
sbb
xor
ret
outsl
add
add
add
and
aam
aam
ljmp
je
jg
cmp
into
add
arpl
add
adc
movsb
iret
and
out
xchg
cmc
pushf
and
adc
call
mov
adc
adc
xor
popa
imul
insb
adc
dec
call
jnp
iret
pop
imul
inc
lea
addb
fdivs
insl
push
jne
aam
popa
rcrl
push
stos
jno
int3
fs
push
add
add
add
mov
sti
cmpsl
mov
dec
mov
add
add
arpl
add
xchg
fstl
lahf
xchg
xchg
stos
add
sti
pop
stc
inc
popa
dec
inc
jl
lods
lock
cmp
in
inc
aad
push
inc
mov
les
xor
push
ds
and
scas
jb
inc
jbe
lock
sub
data16
push
jb
mov
adc
sbb
loopne
xchg
fadds
cmp
bound
add
add
out
lods
cmp
stc
stc
iret
xchg
cs
add
arpl
add
push
adc
out
iret
es
inc
pop
mov
in
out
bound
jle
rcll
dec
lcall
and
insb
adc
pop
nop
dec
cmp
push
pushf
jbe
mov
mov
sbb
pop
and
movsb
imull
in
pusha
into
aam
pusha
add
jle
add
add
push
xor
gs
aaa
push
mov
mov
iret
add
arpl
add
dec
mov
fcmovb
ds
fstl
or
pop
add
iret
out
cmp
loopne
sbb
data16
push
mov
scas
aas
sub
icebp
aad
pusha
cs
xlat
pop
lods
or
in
mov
pop
push
out
loop
imul
mov
or
mov
sub
sub
and
add
add
add
mov
push
adc
cwtl
out
dec
movsl
std
dec
mov
add
add
in
iret
jae
mov
pop
inc
push
push
pop
andl
aaa
hlt
add
xchg
pop
lock
dec
shl
adc
scas
push
stos
stos
mov
mov
cmc
lcall
orb
mov
mov
daa
ja
adc
outsb
add
je
jb
cmp
cwtl
xchg
iret
mov
add
sub
das
jle
jg
imul
aaa
lods
sbb
pop
jecxz
add
add
data16
xchg
sbb
mov
fidivl
outsb
fidivrs
or
inc
gs
daa
pop
dec
cmovp
add
imulb
jno
movl
les
in
fdivrs
fs
mov
sbb
mov
mov
add
add
add
and
mov
mov
test
add
add
jo
cmp
dec
loope
add
enter
nop
movsl
stos
jge
sar
inc
mov
out
jle
repnz
adc
mov
cltd
push
jno
sar
movsb
add
hlt
sti
mov
cmp
jnp
dec
mov
cwtl
int3
jecxz
jp
inc
add
mov
push
jne
cs
imul
add
add
add
or
ret
lods
sub
mov
inc
in
add
arpl
add
mov
aam
fisttpll
sti
loop
sub
ljmp
pop
mov
pushf
inc
in
stc
std
or
inc
loopne
cs
cs
or
pop
jae
dec
pusha
in
std
push
pop
data16
les
xchg
xor
jle
pop
mov
mov
inc
lahf
shrl
add
add
add
ret
pop
iret
fst
enter
ja
mov
add
add
adc
jge
sarb
or
pushf
sahf
mov
ja
pop
fs
xchg
lods
and
in
rcrl
popf
faddp
sbb
jnp
adc
xchg
inc
aas
xchg
test
inc
mov
pop
xchg
xchg
fisttps
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficomps
inc
add
sbb
add
sbb
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
cs
inc
add
test
loop
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
into
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
ret
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
or
add
xlat
add
arpl
add
jnp
pop
add
out
int
or
dec
fidivrl
loop
add
inc
or
fisubrs
cmp
and
add
out
and
or
arpl
out
cmpb
fldt
adc
push
bnd
xchg
xchg
in
sbb
add
repz
int
fnsave
add
add
add
mov
push
mov
xlat
push
rep
test
add
add
popa
and
das
in
mov
xchg
inc
and
sub
jae
jae
mov
das
push
daa
ficompl
pop
or
or
dec
dec
jmp
mov
xchg
out
lods
xchg
or
rol
aad
pop
push
sub
ja
cmc
xchg
adc
pop
xchg
inc
addr16
idivb
jmp
add
mov
jg
ljmp
push
test
xlat
add
arpl
add
daa
jns
in
cwtl
and
inc
pusha
cmp
jg
mov
mov
loopne
cltd
adc
outsl
ret
lods
or
sbb
lret
test
push
or
cltd
aam
stos
repnz
sbb
jecxz
insl
fdivrs
xchg
xchg
sbb
or
cmp
adc
add
add
cmp
cmp
in
fimuls
jg
xor
add
arpl
add
pop
xchg
insb
inc
fwait
clc
fmuls
cmp
jg
or
sbb
imul
xor
aaa
je
pop
ss
sbb
inc
mov
cmp
mov
fwait
stc
mov
push
movsb
inc
add
and
sbb
lock
xchg
ret
push
mov
or
mov
add
add
fnstenv
std
negb
sub
inc
ja
clc
scas
fadds
add
add
lds
and
stc
dec
es
and
pop
ss
ss
cmp
ret
pop
test
add
popf
xlat
jge
dec
mov
lahf
adc
and
inc
inc
int3
xchg
popf
and
add
or
xor
cmp
lods
xor
aad
xor
in
sbb
cmc
icebp
add
add
add
xor
jb
inc
mov
xor
flds
add
add
xlat
sbb
jno
jno
mov
jns
scas
aam
jbe
mov
lahf
roll
pop
inc
cmp
ret
iret
nop
fdivrp
pusha
dec
push
xlat
cmp
icebp
sbb
call
jg
repz
cs
jne
movsb
xchg
stos
fstpt
dec
inc
hlt
mov
jo
sbb
fnstcw
sarb
adc
dec
in
fwait
scas
fdiv
pop
sub
lcall
add
clc
adc
pop
in
push
scas
fimull
data16
push
dec
cmp
daa
sbb
pop
or
jne
jno
push
shrb
mov
arpl
scas
sub
xor
sarb
jnp
adc
xor
sbb
insl
stos
in
out
bound
movsl
out
sub
push
subb
xchg
xlat
das
and
add
mov
aam
xor
and
xlat
flds
add
add
mov
or
sbb
das
idivl
or
and
dec
dec
sub
inc
cmp
nop
movsl
xchg
cmc
jb
xor
mov
push
mov
xor
movsl
neg
or
addb
pop
outsb
lahf
xchg
test
and
fwait
out
mov
dec
jl
popl
pop
not
mov
adc
or
mov
add
add
push
add
mov
out
popf
subb
add
add
lds
repnz
push
add
jge
testl
dec
add
or
mov
mov
adc
jbe
cmp
add
dec
cmp
clc
add
clc
cmp
xchg
movsb
in
int
lods
div
div
jbe
dec
sti
adc
add
add
add
mov
jmp
fimull
aas
pop
jb
fiaddl
add
add
inc
fistps
and
pushf
aaa
scas
sbb
fimull
adc
insl
or
inc
inc
fcomps
divb
sbb
push
jbe
jae
cltd
in
or
jp
and
push
dec
stos
imul
dec
in
fsubrl
pop
pop
pmaddwd
popa
out
test
push
fdivl
or
pusha
push
movsl
in
pop
ss
or
add
add
pop
iret
pop
aad
ss
dec
popf
push
shlb
arpl
add
movsb
jp
cmp
jb
imul
idivl
sub
test
sub
jle
push
repnz
pop
cmp
cmp
stos
in
fimuls
sbb
pop
rorb
mov
aaa
xchg
leave
aad
das
pop
sbb
pop
mov
cmp
jno
mulps
adc
add
add
fwait
test
jg
or
aaa
arpl
add
arpl
add
xchg
lock
jmp
lods
inc
adc
rcl
mov
mov
mov
jb
jp
ret
lcall
in
test
mov
push
dec
idivb
stc
inc
ds
push
sbb
push
xor
jle
jl
test
pop
xchg
pop
pop
leave
test
or
sbb
mov
add
outsb
jae
lret
jle
repz
into
dec
fildl
add
add
xchg
icebp
incb
push
leave
pop
sub
stos
mov
pop
push
cmpsl
mov
aas
lea
cmp
mov
pushf
jecxz
jb
fiaddl
mov
repnz
pop
sbb
mov
mov
hlt
inc
pop
adc
repnz
gs
stos
add
test
add
push
add
add
add
adc
adc
mov
lds
sub
add
arpl
add
lcall
push
push
or
int
fistl
rcl
lea
mov
stos
cmp
or
aad
cmp
or
jb
push
jae
and
mov
ja
add
ss
enter
dec
xor
pushf
jb
push
mov
cmpsl
cltd
enter
loop
add
add
cmp
mov
shlb
add
add
sub
push
jae
dec
dec
arpl
and
or
jmp
cmp
mov
or
jle
movsb
mov
or
push
aad
inc
clc
sub
mov
lods
xlat
in
das
repz
add
int
xchg
rorb
movsl
sbb
ds
or
ja
lods
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
sub
pop
inc
out
faddl
add
add
nop
sbb
insb
mov
cltd
pusha
push
xchg
mov
push
int3
bound
adc
addr16
or
or
mov
jge
fiadds
push
xchg
fwait
lahf
jne
mov
jb
pop
mov
loopne
shr
loopne
inc
mov
shlb
bound
sub
push
nop
int3
xchg
es
add
and
add
add
int
xchg
inc
cmc
sti
fildll
pop
jo
jae
fldl
add
add
inc
scas
int
outsl
lea
andb
add
sbb
inc
hlt
xchg
ds
jl
and
lret
imul
cs
cmp
decb
push
mov
cmp
dec
div
gs
add
add
mov
jne
jecxz
push
cld
pusha
fistps
clc
rcr
push
mov
add
fs
testl
outsb
mov
add
arpl
add
test
add
rclb
cld
dec
xor
pop
call
jle
add
flds
mov
mov
mov
xor
add
test
movsb
in
div
jae
shlb
iret
in
aaa
out
sbb
out
mov
scas
jae
xchg
test
mov
add
add
add
jne
jg
clc
cs
push
sub
add
arpl
add
jo
jns
mov
movsl
in
rol
shl
mov
scas
mov
sti
loopne
outsb
data16
jb
mov
xor
push
pop
jo
out
sbb
jmp
or
fcoms
int
pop
lcall
push
andb
pushf
mov
pop
out
dec
mov
mov
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
arpl
add
dec
lret
or
and
mov
jl
leave
cmp
xchg
push
inc
sub
inc
outsb
rcrl
lret
sti
aaa
sub
jl
in
mov
iret
cs
subl
jnp
popa
or
xchg
cltd
sbbb
ds
adc
test
push
test
pop
fnsave
pusha
jmp
add
add
add
push
mov
mov
xchg
adc
sbb
repnz
add
add
adc
mov
sti
push
hlt
sbb
std
jmp
and
jb
incl
xchg
rcll
pop
mov
test
mov
xchg
cld
cwtl
fldlg2
or
add
testl
pop
je
add
cmp
loopne
mov
lret
or
sti
xor
imul
add
fisttps
push
inc
imul
arpl
add
lods
cmp
scas
ret
sbb
add
sbb
notl
mov
fwait
test
dec
push
pop
pop
xor
jg
cmc
fwait
dec
call
inc
xor
sbb
and
xor
sti
cld
lahf
xor
inc
pop
es
cli
loopne
sbb
pop
lret
aad
cmp
add
add
add
jle
out
sbb
mov
roll
add
add
jae
mov
mov
test
lock
xchg
sahf
add
adc
mov
cmp
fstpl
aas
imul
lock
sub
sbb
idivb
mov
dec
jne
test
jle
mov
pushl
cs
scas
call
mov
and
push
add
add
add
and
cmp
jo
stc
sbb
add
arpl
add
jbe
sbbl
movsl
cmc
xor
test
scas
push
cld
insb
insb
fisttps
notl
pop
iret
aaa
jl
leave
in
lcall
bound
dec
or
pop
syscall
fisubs
lods
mov
jbe
in
jmp
in
cmpsb
fwait
imul
cs
imulb
adc
addb
add
add
popf
aam
daa
loopne
jle
add
arpl
add
aas
mov
cmp
jnp
jne
add
push
test
fisttpl
mov
sub
popa
cmpsl
bound
pop
pop
mov
stc
roll
out
xchg
movsl
data16
xlat
xchg
and
xor
jne
mov
sub
xchg
pop
push
xchg
and
xchg
jb
mov
movsb
add
add
add
mov
jbe
hlt
mov
and
cmpsb
rorw
arpl
add
stc
and
aad
mov
ja
mov
repnz
std
mov
and
pushf
loop
or
int3
in
jb
repz
add
and
ja
scas
and
mulb
outsl
pop
lcall
dec
cli
sub
sbb
out
lods
data16
push
sbb
ffree
pop
and
sti
sbb
mov
ret
add
add
add
ror
mov
sub
out
add
cmpsb
or
arpl
add
aam
cmc
pop
or
rcll
lock
adc
xchg
loop
inc
fcoms
inc
jl
pop
popa
in
cmp
cs
fdiv
shrb
in
push
push
imul
sub
add
jb
lods
pop
jmp
aaa
mov
fcomps
sbb
jae
add
add
add
in
outsb
and
pop
mov
cmpsl
roll
add
add
fsub
in
pop
push
arpl
ss
dec
inc
mov
leave
add
cwtl
xchg
loopne
pop
or
mov
rcrl
cmp
mov
fucomp
lcall
xor
mov
lods
fiaddl
cmp
push
loop
xor
jmp
rol
out
add
add
add
mov
and
leave
or
add
arpl
add
cld
mov
pop
inc
jns
insb
sub
xor
hlt
les
neg
lcall
je
or
test
xlat
ss
into
shlb
icebp
hlt
sub
sbb
mov
jecxz
call
lods
cmp
in
in
movsl
js
pusha
sti
jle
cmp
decl
adc
add
add
mov
and
jg
call
into
inc
mov
std
push
sub
add
add
fnstcw
cmp
mov
test
lea
xchg
dec
push
rcrb
or
std
insl
sbb
xchg
lea
nop
stos
push
jo
and
xor
sub
inc
out
push
push
mov
xor
dec
aaa
jno
test
xchg
adc
dec
push
pop
adc
out
adc
je
add
add
add
sub
sub
inc
int3
jb
rcl
add
arpl
add
mov
dec
dec
fdivrl
xor
adc
mov
jp
dec
popf
outsl
je
cmp
lret
notb
sbb
xchg
add
jnp
add
daa
sub
pop
cs
inc
imul
sbb
jnp
shl
jae
pop
and
jo
dec
inc
sub
imul
sti
inc
jecxz
aam
daa
lea
jl
shlb
add
add
add
int3
sbb
out
loopne
lods
inc
sub
cld
xor
add
arpl
add
pop
pextrw
sub
add
dec
fmulp
je
adc
push
iret
pop
xchg
stos
mov
cs
adc
adc
lret
xchg
mov
fwait
jl
ds
mov
pushf
in
inc
adc
fadd
ss
mov
add
sbb
cltd
pop
sbb
push
orl
or
mov
cwtl
mov
ret
fwait
xor
add
add
push
test
fildll
mov
mov
xchg
aad
add
add
mov
incb
add
push
loop
shll
loop
stos
pop
daa
loopne
dec
jmp
pop
scas
cmp
sub
pop
pop
inc
fwait
pop
lret
sti
pop
shl
push
xor
popa
mov
fwait
or
pop
loope
jge
cmp
outsb
xor
jo
cmpsb
divb
bound
push
cmp
lret
pop
aad
add
add
fwait
loope
sub
sarb
add
jmp
add
add
xchg
push
lahf
into
les
shrb
fldenv
enter
xchg
mov
cmc
sbb
shlb
push
in
cmp
daa
hlt
pop
adc
stc
pusha
scas
xlat
xchg
fisttpll
divps
sbb
push
negl
cmp
dec
mov
inc
xchg
leave
xor
adc
inc
dec
fisttpl
daa
aaa
addl
add
or
ja
dec
cmp
dec
sub
ds
pop
add
arpl
add
sub
add
add
lcall
rcll
sbb
lods
cmp
int
jb
pushf
in
aas
pop
mov
jns
dec
and
jns
ss
push
loop
jp
sbbb
xchg
xchg
sbb
std
movsb
fmuls
imull
inc
insb
in
add
add
arpl
jge
mov
daa
aaa
out
dec
nop
mov
add
add
and
adc
xor
and
sbb
push
in
adc
and
pusha
js
adc
mov
cwtl
push
lods
push
out
xchg
daa
mov
or
mov
mov
adc
out
mov
pop
in
int3
dec
aaa
cli
out
clc
inc
loopne
or
addr16
rol
icebp
add
ljmp
pop
jbe
test
xchg
mov
add
add
push
imul
shl
rcrb
fiadds
add
add
mov
lock
inc
mov
inc
dec
aaa
pop
mov
cmpsb
stos
into
cmpsb
scas
sbb
inc
xchg
pop
jmp
adc
hlt
jne
stos
lods
add
in
psubq
scas
sbb
ret
addr16
cmp
xor
mov
and
push
repz
dec
in
arpl
or
pop
jo
add
mov
add
add
add
ss
xor
and
inc
mov
fiadds
add
add
sub
popf
pop
fildll
rcl
stc
lret
lcall
orb
setno
sar
adc
je
mov
push
jle
jmp
inc
leave
bound
lea
fs
insb
add
cmc
enter
add
movsl
dec
enter
cmp
insb
jbe
popf
add
into
add
add
add
out
mul
aaa
cmc
xchg
lcall
add
arpl
add
jmp
fucom
jno
dec
stos
pop
imul
and
and
xor
mov
je
xchg
and
push
stc
and
cmp
das
add
pop
jp
mov
push
icebp
pop
xchg
and
pop
test
fsts
dec
incl
sbb
adcl
sti
adc
pop
in
inc
mov
add
add
add
aad
out
fucomip
ss
cmp
aam
inc
filds
add
add
sbb
cmp
inc
and
add
mov
js
or
xor
xchg
and
stos
ret
mov
imul
adc
addr16
icebp
movsb
fcmovnu
add
pop
dec
fwait
pop
call
mov
lods
hlt
scas
fstpl
lods
and
ds
push
ss
add
add
add
add
in
cld
fisubrl
sbb
and
filds
add
add
mov
mov
or
das
push
push
mov
mov
dec
xlat
mov
data16
cmp
pop
jle
add
dec
sub
gs
loope
push
xchg
lret
jl
cwtl
mov
aas
dec
jno
sub
hlt
test
pop
xor
adc
sbb
xor
add
add
add
push
les
in
lahf
sti
ja
rcll
movsb
pop
loopne
add
add
scas
test
xchg
mov
cmc
jb
push
dec
xchg
arpl
pop
add
cmp
push
sbb
popa
mov
sbb
jmp
mov
mov
dec
std
jg
pop
repnz
fidivrs
dec
ljmp
rcrl
xor
insb
or
add
cmc
jecxz
and
sbb
add
add
xchg
cmpl
push
loopne
lcall
add
arpl
add
inc
in
insl
jp
xlat
adc
mov
aas
add
int
stos
xchg
sahf
adc
mov
push
sbb
push
jne
lret
int
lods
orb
sub
dec
loop
test
punpckldq
cmpsl
leave
mov
jae
mov
test
decb
mov
pop
xor
xor
stos
or
cld
mov
add
fincstp
shl
frstor
pop
dec
outsb
shlb
arpl
add
or
mov
icebp
lock
sub
in
lods
lock
or
pop
or
cld
ja
aam
adc
mov
xor
das
rcll
outsb
das
lahf
outsl
dec
jmp
lahf
mov
jnp
jae
popf
cwtl
cmp
addl
orl
xor
sbb
push
in
outsb
xor
add
add
outsl
mov
jmp
push
fcmovu
in
mov
add
arpl
add
lcall
out
loopne
cmpsl
or
divb
imul
xchg
hlt
fistpl
imul
pop
jp
data16
sbb
cmp
scas
add
xlat
add
in
inc
test
loope
xchg
cwtl
jp
xchg
push
push
xchg
fdivrs
jnp
gs
xchg
add
add
stc
sbb
inc
jecxz
mov
mov
loope
add
add
mov
jo
mov
aas
outsb
test
ror
movsl
pop
or
push
mov
xor
fisubs
cmp
addr16
mov
sbb
mov
xlat
outsl
and
enter
mov
cmp
pop
sti
adc
mov
mov
pop
and
sbb
jecxz
stos
sbb
add
add
add
mov
icebp
and
push
adc
loope
add
add
inc
xor
mov
cmpl
inc
sbb
adc
jns
repnz
mov
cmp
mov
out
jno
push
dec
scas
pop
popa
daa
test
mov
lods
adc
test
sub
out
cmpb
add
andnps
dec
hlt
push
lds
cmpsb
jns
int
shll
stos
push
fsubr
or
add
add
add
xlat
repz
das
cli
fists
dec
es
sub
aas
pop
loop
add
add
les
outsb
ror
jmp
cmpsb
in
or
add
pushf
and
mov
out
and
pop
push
add
and
add
lods
adcb
outsl
adc
in
ret
sahf
stc
inc
icebp
pop
add
nop
sub
jp
pop
push
out
push
lods
pop
fs
enter
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
add
add
add
add
add
add
add
add
clc
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
