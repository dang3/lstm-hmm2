push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
mov
bound
lret
bound
sub
pop
add
jne
inc
adc
jb
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
rolb
outsl
jbe
jae
mov
outsb
and
adc
mov
xor
push
push
mov
add
mov
mov
mov
insl
mov
sbb
or
adc
xlat
std
hlt
imul
xorb
pop
xor
aam
cld
addr16
out
mov
mov
sbb
movsl
sbb
add
fs
cld
pop
ss
out
push
fimull
xor
mov
cld
pop
and
sbb
aam
xchg
dec
jo
add
adc
aaa
dec
jmp
mov
pop
sub
dec
sub
mov
dec
pop
ljmp
in
movsl
push
cmp
imul
mov
cmp
pop
adc
or
dec
mov
lea
js
and
jbe
aam
rorl
and
jmp
adc
sbb
mov
pop
mov
mov
pop
xchg
insl
fcomip
cmc
cmp
hlt
fs
mov
and
nop
adc
xchg
inc
add
call
adc
and
adc
jg
mov
popf
sbb
sti
fistpll
push
fsubrl
test
sub
imul
cmc
aas
rorb
push
mov
nop
inc
xchg
call
and
shrb
adc
mov
adcb
out
mov
jl
gs
mov
mov
xlat
popa
add
jmp
mov
jmp
out
xchg
cmp
xchg
hlt
inc
jge
jae
or
adc
push
mov
push
fsts
jge
mov
mov
lcall
jl
adc
arpl
add
je
xlat
xlat
bnd
lcall
sbb
sbb
addr16
aaa
ljmp
rcll
push
push
cmpsb
sub
push
scas
pop
jmp
sarl
mov
in
mov
mov
mov
je
outsl
dec
lcall
cs
sbb
cli
adc
sub
xor
cwtl
aas
cwtl
pop
pushf
sbb
dec
loop
int3
mov
and
mov
push
cwtl
sbbb
and
les
dec
xor
ret
mov
subl
inc
clc
xchg
push
dec
pop
mov
popf
push
adc
xchg
sbb
shlb
lds
push
and
sub
and
sbb
xor
ss
or
cmp
repnz
scas
xor
mov
shrl
int
test
inc
mov
dec
or
cs
jp
test
fsts
push
out
dec
cltd
addr16
jo
dec
sbb
js
cmp
aad
aad
pop
jl
dec
lcall
jne
and
das
sbb
lret
and
pushw
mov
call
mov
inc
cmp
push
lret
mov
push
or
idivl
dec
mov
arpl
das
or
inc
add
cld
andl
sarb
mov
xchg
mov
sbb
mov
pop
repnz
cmp
lods
xchg
popa
add
inc
ljmp
js
fstl
loopne
dec
test
addb
jle
lcall
jg
aam
jo
lds
scas
xor
fwait
push
xchg
mov
jg
inc
mov
or
push
pop
mov
mov
cmc
stos
popa
mov
jo
xchg
mov
mov
cmp
xchg
std
sbb
xchg
out
jno
in
fs
sbb
jl
cmp
lahf
sub
add
add
imul
pop
cmp
addr16
in
out
mov
cmp
xor
loop
ror
ret
gs
xor
pop
ja
adc
aaa
add
cmp
jle
adc
mov
adc
jl
inc
rcr
sbb
sti
je
sbb
mov
mov
jmp
in
in
jae
or
and
add
pop
xor
pop
push
dec
leave
or
or
mov
add
sub
mov
jb
xor
aas
outsb
call
pop
addl
or
and
das
dec
add
imulb
ret
dec
cmp
out
mov
xchg
mov
mov
inc
fcompl
das
out
out
cmp
pop
orb
xchg
ss
cmp
imull
js
mov
pop
imul
jmp
fmull
fistps
or
xchg
mov
inc
xchg
movsl
mov
dec
push
rolb
scas
jl
xor
shlb
pop
cmpsb
adc
shll
mov
es
add
push
imul
shll
adc
mov
js
pop
loope
into
shlb
imulb
bound
sahf
mov
sbb
test
or
mov
jmp
pop
paddsb
imul
pop
dec
jg
lahf
jmp
inc
mov
dec
xor
pushf
in
mov
xchg
pop
push
jge
jns
mov
sbb
mov
ret
add
xor
adc
or
jle
adc
leave
fiadds
jnp
je
xor
inc
repz
and
mov
cmpsb
iret
inc
les
cmp
std
jbe
cwtl
sbb
sub
cmp
popf
cmp
mov
lret
xchg
or
and
mov
ret
insb
xchg
pop
xchg
dec
xor
outsl
adc
mov
pop
cmpsl
sbb
loope
adc
mov
push
xor
loop
dec
jne
arpl
sbb
mov
fwait
mov
inc
push
adc
notb
mov
mulps
shl
mov
out
cmp
iret
dec
cmp
das
pusha
in
push
pop
add
aaa
aad
lret
stc
outsb
movsb
sub
int3
dec
addb
push
dec
ret
mov
pop
xor
or
je
add
idivb
je
mov
clc
inc
mov
push
cmpsl
mov
mov
out
xor
adc
adc
testl
push
testl
jbe
cmp
sbb
insl
push
mov
imul
xchg
jb
mov
push
inc
ficoms
dec
mov
rorb
jmp
xchg
lock
pop
sub
dec
sub
fldlg2
mov
cmp
filds
mov
xchg
adc
jmp
daa
jp
lahf
xlat
pop
aam
sti
add
xlat
in
mov
xchg
or
mov
into
mov
mov
add
imul
jno
xchg
sub
sti
adc
int3
daa
sbb
mov
sub
dec
cmp
imul
jae
mov
nop
xchg
sti
outsb
mov
xor
xchg
subb
movsl
std
xor
test
cmc
cltd
jecxz
cmpl
and
fwait
call
repnz
addb
stos
inc
mov
leave
xlat
adc
and
scas
sbb
dec
dec
faddl
inc
sub
arpl
mov
xor
xor
adc
xchg
sbb
mov
movl
pop
sbb
mov
cmp
je
add
dec
std
xchg
insb
jp
movsb
sahf
outsl
add
push
xor
jb
cmc
xchg
sbb
adc
imul
xchg
xchg
jb
test
push
cmpsl
sbb
inc
add
lea
inc
xlat
jg
push
fisttpl
and
pop
clc
fwait
pop
push
lcall
push
xlat
cmp
das
mov
adc
push
mov
or
pop
jb
fsubl
dec
arpl
and
jae
jmp
stc
fucom
xor
and
push
lret
add
mov
mov
mov
ja
push
dec
inc
mov
aam
vdivpd
in
clc
pop
ret
add
cld
sub
xchg
aad
sar
mov
stos
and
subb
aad
adc
rcrb
sbb
xlat
test
scas
xor
sti
das
cli
sbbb
xlat
arpl
xlat
mov
jmp
cmp
and
and
lods
punpckhwd
enter
pop
pop
sub
push
mov
sbb
xchg
push
fdivrs
mov
add
into
xchg
inc
xchg
or
xchg
popa
inc
ds
ds
push
xchg
int3
cmp
jmp
jmp
cli
add
jns
pop
jae
lods
mov
inc
call
js
out
in
les
sub
dec
mov
xchg
movsb
inc
lea
pop
enter
mov
dec
jno
rcl
xor
inc
clc
push
fcmovnu
adc
mulb
xchg
imul
flds
movsl
jecxz
imull
lds
mov
push
mov
push
xchg
or
push
std
aaa
push
cltd
lret
mov
test
mov
fbld
inc
sub
add
mov
push
jg
xor
popf
xor
in
push
call
dec
dec
leave
scas
in
mov
and
mov
clc
jp
outsl
int
or
icebp
sub
cltd
imul
jge
sub
xor
adc
inc
jo
cmc
in
adc
pop
enter
enter
roll
cli
loop
shl
jp
dec
out
jmp
xlat
mov
cmpsl
mov
xchg
pop
ficompl
std
push
pop
push
bound
fnstsw
xlat
inc
inc
and
sub
push
pop
cltd
dec
fidivl
es
push
and
movsl
insl
dec
adc
lea
leave
and
jb
xchg
push
dec
fistpll
sbb
cli
push
dec
jae
or
stc
lods
xchg
jno
ret
in
setns
sbb
in
aas
add
pop
push
insb
mov
mov
mov
loope
or
imul
adc
es
mov
or
jbe
lahf
fdivl
les
xor
xchg
push
in
je
jecxz
loope
sub
dec
lret
ret
lea
and
cmc
decb
add
push
mov
push
int3
insb
or
push
mov
faddl
out
jae
lcall
jge
xor
mov
mov
mov
outsl
pop
repz
test
adcl
xchg
push
sbb
push
fidivl
shl
stos
cltd
mov
mov
cmp
jns
mov
pusha
mov
jle
mov
or
mov
sub
mov
mov
in
mov
ja
mov
or
stos
cld
inc
movl
scas
lock
pop
lret
cmp
adc
push
lock
popf
push
rcrl
movsb
lds
les
xchg
cmp
pop
arpl
pop
jge
mov
mov
xlat
lock
adc
in
das
cmpsl
mov
cltd
enter
dec
into
mov
cmp
and
xchg
in
mov
add
mov
or
sbb
rcrb
nop
fldcw
das
lods
jecxz
pop
push
mov
jge
das
mov
mov
push
pop
push
mov
mov
std
lods
pop
xchg
add
xlat
jo
mov
mov
test
or
cmp
insl
loop
ljmp
push
push
in
enter
in
in
push
mov
xchg
std
test
and
or
mov
pop
lds
lret
outsl
adc
cs
sarl
test
add
push
and
add
mov
adc
test
test
xchg
daa
cmp
jno
push
pop
xchg
mov
testb
std
js
fimuls
dec
ljmp
sub
mov
mull
jns
cmc
inc
xchg
out
push
sub
mov
sub
icebp
xchg
int
out
sarl
inc
std
fistps
jae
stos
ret
xchg
cld
repz
push
rol
mov
mov
cmp
shll
lock
mov
jnp
cmp
icebp
divl
call
jl
jno
adc
stos
sbb
fcompl
idivb
jg
in
std
xchg
sbb
and
pop
pop
lds
fistpll
ja
cltd
ret
mov
add
cld
aas
inc
dec
jbe
adc
call
sbb
shrl
push
adc
sbb
ja
adc
loop
sar
or
cmp
pop
push
cmc
mov
pop
cmpsb
and
inc
outsl
loopne
xorb
add
in
sti
lahf
clc
test
dec
inc
loope
and
mov
aas
arpl
inc
fistl
rorl
cmp
inc
outsl
int
lahf
and
std
pop
push
add
jns
mov
sub
std
fstl
or
out
xabort
out
cltd
ljmp
das
aaa
xor
pop
mov
rorb
fistps
aaa
pop
or
stos
mov
mov
popf
and
pop
jb
jns
add
fstps
fidivs
cmc
cld
push
inc
push
jmp
cmp
adc
ljmp
mov
jbe
mov
sub
or
sbb
iret
out
mov
mov
jmp
sbb
mov
out
arpl
loop
push
adc
add
xchg
jns
xchg
in
pop
sub
int
and
sub
lea
mov
hlt
sar
xchg
insb
sarb
leave
sti
int
mov
sbb
dec
shrl
xchg
and
shlb
imul
ss
fsubr
xchg
gs
insb
aad
inc
add
push
leave
mov
fwait
and
lods
mov
outsl
pop
jge
cmp
xchg
inc
xchg
add
mov
shlb
mov
mov
imul
jg
inc
test
mov
or
mov
push
int3
out
mov
lret
mov
xchg
jnp
lret
out
das
lods
inc
push
jle
sbb
cmpsb
mov
fwait
lret
ret
jp
adc
repnz
push
cmp
bsr
imul
jb
es
dec
xchg
test
iret
add
movsb
lret
mov
sbb
mov
sbb
pushf
and
pop
or
add
cmp
push
adc
in
pusha
sbb
adc
add
sbb
mov
sub
xchg
cli
roll
pop
mov
jecxz
add
movsl
mov
inc
fidivs
hlt
das
out
lret
inc
or
mov
jecxz
jae
push
call
rclb
push
jne
ret
add
inc
sbb
lcall
sub
sahf
jo
xchg
or
je
mov
nop
or
pusha
jg
cld
ret
shlb
fs
push
mov
sbb
bound
and
into
xor
cmc
cmp
mov
pop
push
mov
push
inc
pop
aas
sub
add
ds
mov
shll
cmp
jecxz
sbb
jno
into
rclb
aaa
in
fistpl
jmp
out
inc
popa
mov
out
jbe
lret
cmp
jmp
add
and
test
sub
addb
imul
cmpsb
leave
lods
mov
testb
cs
arpl
es
scas
in
or
shlb
fisubl
cltd
sbb
fwait
pop
push
mov
jl
sbb
outsb
push
cltd
mov
pop
dec
xchg
shll
pusha
cli
repnz
outsb
orb
pop
hlt
into
ja
lahf
test
jns
in
orb
dec
dec
shl
lock
dec
push
lea
fildl
je
popa
mov
imul
pop
ss
aas
jne
fildll
icebp
data16
popa
in
push
pop
jnp
jae
arpl
dec
jl
or
cmp
inc
ljmp
js
gs
icebp
jnp
das
xchg
pushf
stos
or
int3
shlb
xchg
cmp
stos
dec
xorl
xchg
pop
stc
sbb
mov
sub
mov
cs
out
aad
or
cld
push
arpl
and
sbb
pop
mov
pop
xor
repnz
imul
xor
lods
xor
stc
lods
pushf
xor
jbe
std
or
mov
dec
jp
pop
mov
xor
pop
das
stos
push
xchg
add
pop
loop
mov
pop
loop
xchg
xorl
mov
rclb
add
lock
data16
iret
cmp
mov
sub
pop
pop
lods
sbb
lea
pop
adc
sub
or
inc
mov
mov
popl
mov
cmpl
sbb
mov
mov
into
jno
pushf
jmp
sbb
je
inc
xchg
or
out
cmp
add
mov
loopne
mov
pop
push
scas
hlt
test
hlt
cmp
sti
or
vpsubsw
mov
adc
nop
jno
adc
mov
xchg
fwait
xchg
pop
jae
xor
and
jns
lock
mov
mov
cmp
andb
mov
jno
sbb
push
cmpsb
push
dec
xchg
daa
inc
mov
mov
rcr
jmp
lea
inc
lds
aas
xchg
dec
in
jp
push
roll
mov
adc
mov
mov
lea
fsubrs
lret
push
fsubl
jle
fsubl
cs
out
xor
lea
sub
das
cmp
test
testb
pop
jg
jecxz
sti
push
jae
adc
rcrl
inc
pop
cwtl
rcrl
and
aaa
sub
or
dec
push
rol
gs
pop
mov
push
daa
je
lcall
ja
cmpsl
mov
ljmp
and
cmc
dec
xchg
sbb
jg
leave
and
and
inc
jb
scas
enter
xchg
inc
push
fidivrs
cwtl
ret
mov
mov
inc
mov
dec
jae
in
arpl
pop
mov
ljmp
enter
dec
add
push
int3
cmp
mov
xchg
pop
in
add
and
js
pop
cmpsb
lahf
lods
imul
ljmp
gs
lret
push
popfw
ljmp
push
pop
movsb
mov
dec
or
rcll
inc
jg
fucomip
or
orb
add
jne
shll
cmpsl
pushf
insb
cmp
xchg
sbb
adc
hlt
stos
ret
movsb
mov
xchg
mov
sbb
add
mov
es
sub
adc
inc
das
and
test
inc
das
push
inc
daa
mov
into
int
roll
adc
inc
inc
fwait
lock
ljmp
cmp
aaa
add
push
je
xchg
sbb
cmp
scas
jno
leave
lahf
repnz
into
adc
sbb
sub
push
inc
jb
fcoms
hlt
into
adc
fwait
stos
lahf
mov
sarb
movsb
push
out
jnp
cld
sub
xchg
jl
xor
mov
lret
and
movsl
stos
stos
dec
jns
mov
xchg
cld
xchg
push
jnp
inc
sub
add
leave
ret
push
popf
das
loopne
mov
mov
data16
push
jae
sbb
popa
pop
lcall
push
cmpsb
adc
stc
xor
dec
mov
cld
fcomps
inc
mov
pop
imul
and
movsl
fucomi
fldenv
cmp
jmp
in
std
fildll
cld
push
fstl
arpl
out
inc
xor
push
out
mov
cmp
dec
fcmovu
rcr
or
pop
mov
dec
inc
mov
shrb
adc
mov
pop
cmp
cli
inc
sahf
js
jge
add
fnstsw
push
data16
xor
sti
sub
sbb
dec
sbb
sbb
jbe
add
add
das
outsb
pop
fsts
mov
cli
scas
and
rclb
add
mov
mov
adc
dec
out
nop
mov
add
inc
cltd
les
or
jle
arpl
cmp
shll
mov
in
lret
aad
jp
fisttps
stos
ret
pop
sub
adc
enter
mov
dec
mov
lret
jns
je
mov
lds
xlat
cmpsb
adc
push
xor
sub
mov
addr16
dec
xchg
cmc
cltd
or
mov
fwait
sbb
dec
xchg
push
scas
jae
outsb
rclb
lret
and
dec
popa
xor
fmull
hlt
lcall
mov
push
push
push
dec
jp
mov
mov
out
icebp
aaa
sarb
push
jl
loope
mov
insb
cld
arpl
cmp
mov
adc
sbbb
add
movsl
cwtl
mov
adc
aam
sbb
std
inc
xor
jae
sub
lods
pop
add
ret
inc
lods
lea
inc
mov
or
dec
mov
outsl
aas
mov
cli
push
dec
ljmp
xchg
bnd
jge
outsl
insl
pop
imulb
aad
addr16
lahf
andps
pop
lret
pop
mov
in
sbb
jle
cli
cmp
sbb
and
push
movsb
int3
ret
adc
addr16
scas
mulb
xchg
sub
cmpsb
push
aaa
mov
int3
fmul
push
or
mov
pop
push
shll
mov
inc
xor
and
jle
cmp
cmp
dec
jae
rcll
out
popf
fptan
xchg
adc
rolb
dec
mov
clc
mov
dec
addl
jo
add
imul
movsl
inc
shrl
push
and
mov
popa
stos
and
cmpsl
jecxz
insb
lds
adc
mov
xlat
mov
pushf
push
sar
sub
jecxz
xor
loop
lods
cmp
xchg
out
stos
flds
fsubr
xor
das
mov
stc
add
jbe
mov
shl
imul
cmp
or
fs
xlat
pop
out
push
push
sbb
mov
insb
fimull
mov
rcrb
je
jne
jle
jo
inc
into
push
mulb
or
testl
push
std
popa
inc
cmp
sbb
or
xchg
push
xor
repz
and
add
mov
pop
shrb
inc
cmp
sti
lods
fisubl
sub
push
or
loop
push
cmp
xor
fnstcw
out
mov
jmp
pusha
in
inc
fldt
ret
cmp
pop
sti
adc
ss
push
xor
jecxz
or
mov
cmp
outsb
ds
mov
cmovge
addb
mov
inc
test
ds
nop
adc
dec
std
loop
xchg
popf
jecxz
punpckhbw
pop
decl
mov
in
int
adc
repz
sbbl
sbb
movsl
add
fsub
fimuls
in
mov
inc
inc
xor
xchg
movsb
xchg
fildll
mov
dec
xchg
pop
adc
out
push
add
pusha
pusha
iret
and
aas
pop
add
arpl
inc
sbb
ss
mov
push
dec
std
and
insl
outsb
lock
rcll
loope
ja
stos
sub
shll
lds
pop
jne
icebp
sbb
cmp
pop
mov
arpl
out
mov
add
nop
mov
add
jo
hlt
int
xor
xor
mov
cwtl
xchg
push
jne
scas
or
add
ds
pusha
dec
test
call
shl
cmp
and
pusha
and
mov
insl
fldenv
mov
lahf
in
mov
outsb
pop
push
aas
mov
adc
push
mov
cmp
out
int
lahf
jmp
or
cld
clc
into
fdivrp
and
and
adc
and
mov
xor
movsb
dec
xchg
mov
push
push
mov
je
inc
dec
daa
pop
mov
std
addr16
cltd
push
dec
hlt
enter
inc
xor
xchg
gs
jecxz
rcrl
or
rcrb
sti
das
cli
mov
cmpsb
dec
in
adc
sbb
shrl
cmp
mov
push
lods
xlat
fistps
inc
mov
lcall
xorl
inc
mov
xor
xor
xchg
pop
addr16
pop
jo
pop
daa
test
mov
popa
into
out
arpl
ljmp
test
out
in
mov
daa
mov
lods
popa
fs
out
or
xorb
mov
data16
cmp
test
jmp
rcrb
lret
mov
inc
mov
rclb
test
pop
cmpsb
mov
sub
cmp
mov
and
inc
inc
xor
xlat
pop
sub
mov
jecxz
mov
xlat
movsb
test
shl
lret
mov
sti
cmp
cmpsl
adc
in
lcall
inc
test
pushf
inc
sub
mov
sub
inc
loopne
dec
sbb
cs
test
aaa
je
movb
add
pop
push
push
pop
cmp
test
sub
or
sbb
sahf
cld
fs
or
lods
loop
push
xchg
sbb
push
adc
xchg
cwtl
mov
outsl
push
fidivrs
lcall
mov
fs
shrl
bound
popf
xchg
sbb
enter
xchg
insl
negl
lds
push
fxch
sub
push
or
or
pusha
lahf
cld
shlb
dec
fisttpl
arpl
push
mov
sbb
mov
clc
push
enter
cltd
mov
fldt
aas
cltd
cltd
push
les
and
mov
sub
fldl
rclb
repnz
sbb
fstl
rcrl
xor
shll
push
or
jmp
test
xlat
mov
cmp
cmp
and
mov
daa
mov
outsb
and
movsl
fwait
les
jbe
fstpl
or
andb
addr16
push
xchg
xor
shl
push
sahf
cs
xor
mov
jno
cltd
jns
jns
push
jle
insl
adc
call
xor
add
adc
mov
pcmpeqw
cmp
test
cmp
enter
jnp
cs
in
in
roll
notl
loop
testb
dec
pop
inc
fidivl
mov
add
sub
inc
lcall
sbb
les
sub
mov
fs
jno
frstor
inc
inc
jnp
inc
pop
andb
mov
xabort
jmp
mov
mov
mov
mov
add
adc
scas
mov
daa
sti
fisttps
shl
pop
stc
xor
and
in
mov
leave
pop
or
and
je
ret
fisubrs
add
pop
inc
subl
xor
fisubrl
mov
pop
push
cmp
in
mov
das
je
gs
sbb
add
dec
adc
popf
fsubrl
adc
scas
ss
lods
sbb
rclb
cmp
arpl
jne
pop
xlat
add
or
push
xor
inc
sbb
adc
push
ja
lea
push
adc
movsb
imul
xchg
leave
enter
mov
aad
xchg
inc
push
mov
fcomip
push
sbbl
call
mov
imul
addr16
dec
jnp
cmc
not
jnp
mov
in
pop
or
sub
xchg
insl
inc
jmp
dec
aad
mov
push
lcall
aaa
jb
mov
sbbb
mov
shrl
testb
das
adc
add
dec
jno
cmp
sub
or
pop
rcl
xchg
leave
pusha
mov
push
mov
mov
xor
xchg
inc
add
or
shll
and
leave
cld
push
sbb
or
mov
dec
ret
and
dec
jnp
mov
lods
pop
out
push
mov
aad
sbb
cli
xlat
addr16
andb
mov
push
mov
sub
arpl
dec
mov
in
sub
xor
ret
repnz
xorl
faddp
les
in
cs
out
movsl
fwait
cld
loopne
loop
lahf
lret
sub
jb
cld
jge
shl
ja
cld
or
or
add
adc
push
xchg
shlb
int3
lods
xchg
push
mov
insb
xlat
adc
xchg
scas
pusha
mov
push
xchg
outsb
lea
mov
jns
add
sub
data16
pop
sahf
adc
mov
imul
jl
shll
insb
pop
push
mov
push
mov
jo
cld
mov
sbb
test
and
mov
out
xchg
cmp
mov
clc
and
xor
push
les
fs
pop
push
jb
xchg
pop
arpl
in
add
pusha
sub
out
not
or
pop
jbe
or
push
out
negb
mov
push
inc
in
inc
ss
cmp
mov
fldcw
aam
mov
pop
mov
mov
xor
cmc
cmpsb
mov
mov
loope
pop
jno
push
mov
cmp
dec
xor
mov
fimull
push
orl
mov
inc
movsl
pop
xchg
jle
insl
xor
mov
mov
inc
loope
in
cmc
xchg
xchg
dec
pop
inc
mov
imul
sub
out
das
adc
lret
notb
mov
loope
mov
pusha
movsb
cwtl
dec
sub
pop
mov
and
cmp
pop
test
scas
or
add
movsb
test
jecxz
imul
lods
xor
jns
in
and
incb
outsb
jg
mov
addr16
scas
cmp
adc
mov
inc
stc
push
pop
push
repz
dec
in
pop
pop
pop
mov
jo
pusha
repz
pop
dec
jno
movsl
cld
xchg
insl
add
in
add
lahf
pop
mov
movsl
andl
mov
xchg
xchg
out
jl
jbe
andb
jns
jno
int3
or
filds
add
or
mov
mov
push
out
lods
adc
mov
pop
mov
mov
push
add
sysexit
test
mov
decl
push
sub
fmuls
sub
push
arpl
push
insb
push
jbe
mov
dec
or
test
inc
daa
repz
loopne
jne
adc
movsl
lds
mov
sbb
xor
xchg
add
outsb
lret
add
jno
cmpsb
repz
cmp
mov
lret
sbb
testb
push
mov
mov
sub
cli
sbb
jecxz
hlt
push
push
sbb
cwtl
sub
scas
shrl
jl
lret
xor
stc
aaa
mov
inc
in
call
or
hlt
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
pop
bound
pop
bound
filds
sub
iret
adc
leave
mov
pop
xchg
xor
loop
mov
pushf
cwtl
cmp
into
jmp
jmp
lea
sbb
enter
lcall
aad
xlat
or
fsts
fnsave
or
daa
mov
mov
mov
pop
nop
dec
lock
jge
cli
and
push
xor
pop
dec
inc
cmp
xchg
inc
jae
push
aad
ret
add
leave
jnp
rorb
sbb
dec
hlt
jecxz
or
imul
mov
add
mov
sub
push
mov
and
push
push
stos
scas
orb
mov
data16
mov
cmp
jns
shr
add
fwait
xor
popa
imul
pop
bnd
jp
outsb
cmp
rcl
int
loope
lret
sbb
jecxz
pop
sub
lods
adc
in
adc
xchg
jo
nop
pop
sarl
lcall
out
test
hlt
jbe
cmp
daa
notl
adc
bound
or
xor
call
mov
and
or
mov
mul
std
adc
in
sbb
outsb
cltd
dec
add
pop
rorl
jge
roll
loope
add
add
and
jecxz
dec
gs
lahf
fistps
out
divl
push
into
ja
push
adc
pop
mov
dec
jns
mov
shll
imul
mov
punpckhwd
in
inc
mov
inc
cmp
mov
notb
gs
lock
je
test
filds
fldcw
inc
xorl
add
inc
push
aas
adc
inc
pop
push
push
outsb
in
push
and
pop
cmp
daa
in
or
dec
rolb
in
jmp
lods
mov
and
ljmp
adc
xchg
lea
aas
xor
inc
and
movsb
in
mov
nop
shlb
xchg
pop
add
subl
dec
in
xor
iret
ficoml
ret
cs
pop
shr
cli
into
aam
repz
mov
pop
cmp
push
jns
dec
sti
dec
mov
adc
or
scas
push
xlat
pop
mov
shl
lods
mov
mov
sbb
xor
int3
daa
push
push
xchg
lds
mov
andb
pop
mov
out
cli
lods
add
mov
or
push
sbb
inc
cmpsb
push
mov
and
and
sbb
cmpl
aam
ret
dec
jecxz
jmp
cmpsl
cmp
pop
pushf
lret
push
cwtl
popa
lods
rcrl
inc
sbb
stos
jne
sbb
or
xchg
ljmp
test
dec
pop
pop
aad
mov
int
daa
fcmovbe
les
repnz
hlt
fildll
cli
or
cmc
repz
mov
adc
test
sub
or
jbe
in
mov
sub
insl
sub
flds
outsb
in
out
pop
or
xchg
mov
and
xor
aaa
sub
adc
pop
mov
out
xor
dec
sub
orl
scas
cmp
cmp
xchg
dec
out
mov
jo
pusha
mov
jmp
int
test
movsl
push
cltd
fimuls
and
rcrb
jb
push
pop
int3
arpl
movsl
gs
sub
call
in
fiadds
int
push
and
hlt
dec
xor
into
cmp
aad
shrb
and
push
roll
movsl
imul
shll
leave
inc
mov
mov
arpl
xchg
pusha
movsl
dec
out
xchg
das
cmc
mov
or
in
sub
or
and
sbb
xchg
int
inc
cwtl
cmc
adc
pushl
push
call
imul
mov
pop
nop
or
movsl
pop
in
inc
inc
aam
scas
or
xchg
lret
int3
cmp
mov
pop
dec
ficomps
outsb
cmp
ja
push
shl
and
outsl
or
add
incl
jo
loop
and
cltd
inc
or
inc
jno
mov
adc
rcl
hlt
xor
sub
mov
mov
rorl
daa
push
jl
add
add
or
adc
adcl
jbe
clc
dec
xor
es
push
add
mov
outsl
xchg
mov
shrl
pop
cmp
xorl
mov
cmpsb
sbb
enter
iret
sub
insb
fsubrl
repnz
fs
aam
dec
mov
scas
xor
sbb
mov
lcall
mov
lret
enter
or
inc
pushf
lock
inc
mov
xor
lret
push
movsb
pop
pop
lds
imul
lret
cmc
rcll
out
push
mov
jns
xor
jmp
jge
rcr
outsl
jae
inc
add
outsl
sbb
pop
sub
mov
lods
inc
dec
xchg
pop
jle
popa
fistps
outsb
mov
nop
fistl
iret
push
out
pop
mov
push
iret
dec
sti
xor
icebp
dec
jecxz
inc
nop
cli
adcl
test
pop
dec
cmp
xorb
ret
insb
pop
and
inc
sub
jbe
sti
push
jg
loop
cltd
daa
aad
inc
and
pop
sbb
mov
adc
add
dec
in
jecxz
fwait
and
or
adc
mov
pop
insl
scas
jnp
fidivs
mov
jmp
and
adc
push
push
push
xor
dec
cmpsl
sub
jne
shll
icebp
mov
dec
dec
pop
dec
push
lret
mov
push
int
pop
fdivs
or
scas
push
daa
sbb
bound
mov
loop
out
lods
lock
stos
push
sarb
neg
jg
iret
out
lcall
sbb
jnp
fs
rcll
dec
add
call
push
in
pop
mov
pop
push
xchg
outsl
cltd
movsb
sub
pushf
in
mov
inc
cmp
mov
sub
in
push
jl
lds
mov
inc
jg
ja
jg
mul
rolb
inc
shll
pop
test
das
clc
xor
mov
std
mov
xchg
sub
pop
inc
js,pt
ss
aam
arpl
and
cmc
mov
aas
mov
loopne
add
pop
pop
das
ficoms
sbb
rcrb
mov
jecxz
ss
adc
jle
lea
ja
mov
inc
mov
mov
inc
adc
movl
and
mov
cmp
fsubl
mov
movsb
dec
push
stos
or
dec
mov
xor
push
fucom
in
jae
and
test
andb
xor
push
incb
cltd
gs
call
fwait
pop
push
inc
inc
sub
sti
and
push
dec
call
dec
or
andb
addr16
jp
push
gs
xchg
fdivs
rcll
addr16
sbb
and
mov
fmuls
fs
push
adc
mov
fidivrl
cmp
lret
iret
aaa
jns
adc
stc
xchg
and
sub
sbb
inc
sub
xor
scas
cmp
movsb
popa
jge
hlt
pop
icebp
mov
in
scas
fstl
jae
ret
and
daa
jb
jecxz
pop
dec
inc
xchg
add
dec
lods
push
scas
sbb
sbb
sbb
add
jnp
fdivs
lods
add
stc
pop
out
pop
orb
addr16
or
pop
popa
xor
cwtl
xor
fdivl
decb
repz
ds
test
shll
lods
sbb
push
inc
jecxz
xchg
pop
pop
sub
sarb
mov
adc
ljmp
ljmp
xchg
cmp
inc
loop
xor
push
xor
test
dec
and
dec
or
or
out
out
jo
insb
sahf
jno
jecxz
inc
js
sahf
pop
xchg
rorl
popf
lods
popa
inc
mov
mov
push
xchg
in
fs
mov
aaa
nop
mov
pushf
sbb
andb
js
cmp
pop
cmp
sub
xor
add
adc
dec
xor
insb
push
jo
mov
inc
lods
push
adc
add
mov
add
sar
inc
jge
int
movsl
push
fdiv
in
pusha
inc
clc
das
jo
lock
or
mov
aaa
int
negl
mov
xorb
cmp
orl
leave
rorb
lods
mov
jp
or
jo
repnz
mov
or
adc
adc
lock
cwtl
outsb
bnd
pop
cmp
addb
push
xchg
push
and
cld
or
mov
xchg
mov
shlb
mov
flds
adc
es
pop
popa
pop
fidivs
insl
adc
sbb
mov
add
jmp
lahf
mov
xchg
jno
and
push
in
xchg
mov
pop
cmp
cmp
enter
cmp
mov
sub
inc
mov
daa
xchg
in
in
dec
or
out
test
ret
hlt
loop
xchg
or
pop
xor
js
andl
push
jle
mov
out
push
std
pop
ja
test
dec
add
andb
sbb
ret
dec
cltd
mov
pop
dec
xchg
push
popa
mov
jg
pop
mov
es
in
xchg
jbe
and
lds
fimuls
mov
cmpsb
or
pop
in
mov
outsl
cwtl
adc
push
dec
and
and
sar
lods
jns
add
or
mov
pop
xchg
out
xor
mov
cwtl
loop
mov
pusha
scas
mov
add
and
cs
adc
shl
stos
fnstsw
adcb
addr16
lahf
cmp
or
mov
cmp
stos
or
mov
ds
bound
add
sbb
add
inc
inc
pop
push
or
add
xchg
mov
nop
add
push
push
cmpsb
arpl
mov
jp
and
bound
jae
cltd
inc
jbe
test
xchg
xchg
sbb
adc
add
cmp
popf
sbb
pop
sub
pushf
mov
push
into
in
pop
push
xchg
fwait
or
dec
xchg
push
cli
shl
fxch
xor
cmpsb
mov
sub
cmpsb
std
push
and
push
std
test
mov
or
test
divl
cmpsl
lea
xlat
in
insl
js
lods
push
mov
mov
jae
adc
adc
mov
sbb
mov
popl
gs
add
dec
ficoml
and
bound
sub
jno
in
xchg
aam
bswap
jno
aaa
lret
pop
sub
popa
mov
push
xlat
xor
lret
outsb
addr16
lahf
or
inc
lahf
or
lods
sti
addr16
mov
pop
mov
sub
cmpsl
pop
or
aad
dec
pop
push
inc
xchg
outsb
inc
cmp
xor
pop
push
call
cmpsl
mov
in
test
inc
out
inc
push
cwtl
les
and
dec
sbb
jecxz
cmp
pop
sub
aas
cs
jns
inc
insl
mov
xchg
cmp
push
pushf
xchg
ljmp
and
icebp
push
mov
push
jno
icebp
mov
mov
push
imul
mov
pop
dec
into
int3
pop
push
test
stos
out
push
lcall
mov
bound
add
sahf
or
inc
dec
in
bound
sub
jecxz
jg
sub
jp
out
inc
push
test
fsts
mov
jl
push
jg
sub
pslld
xchg
aam
add
mov
fldenv
xchg
inc
fsubl
test
leave
or
dec
mov
test
sti
cmpsl
stc
or
and
popa
add
jne
inc
lcall
aas
jns
js
inc
addl
jecxz
test
addr16
add
loop
sahf
add
in
je
enter
into
pop
push
lock
mov
insb
ljmp
cmp
xlat
cmp
popa
push
push
sti
xor
inc
cmpb
je
out
pushf
fldcw
add
mov
jo
mov
and
scas
push
jbe
mov
pop
pop
movsl
pop
adc
lahf
mov
into
and
cmp
mov
cmpsl
push
xchg
push
push
pushf
cltd
xlat
scas
cmp
mov
pushf
fwait
lret
mov
rep
loop
shlb
shr
jns
mov
imul
mov
repz
outsl
sbb
shll
push
pop
adc
adc
shrb
inc
mov
je
dec
insl
inc
mov
xchg
fs
push
mov
xlat
scas
gs
lret
xchg
pop
pop
add
hlt
pop
xchg
das
stos
cmc
aam
stos
arpl
pop
in
sub
adc
adc
xor
xchg
testl
xchg
mov
mov
orl
pusha
push
sahf
push
mov
xchg
ljmp
repnz
push
inc
push
leave
sub
fisubl
fsubl
mov
sarb
insb
lret
js
hlt
push
cmp
aam
sbb
push
and
fwait
cmpsl
xchg
stc
repnz
pop
mov
scas
js
int
loope
pop
fbstp
ret
and
rorl
mov
pop
nop
mov
or
sub
cli
fidivrl
mov
or
dec
aaa
mov
outsb
dec
jmp
fiadds
fs
ret
mov
lret
mov
in
stos
ja
mov
push
pusha
push
push
cltd
sbb
bnd
inc
popa
cmp
push
sub
xorb
jmp
inc
sub
cli
xorb
cmp
inc
jae
or
outsb
inc
push
xchg
lgs
andb
es
or
mov
jnp
cmp
mov
cmpsb
in
aad
es
fnstsw
fstpt
sub
mov
out
add
push
les
fcomip
inc
xor
sub
fiaddl
push
pop
ds
movsb
add
mov
leave
call
adc
add
lds
movsl
xchg
jle
push
in
int
pop
stos
inc
mov
mov
mov
xchg
xor
fidivrs
cmp
mov
jmp
jae
adc
xchg
pop
mov
mov
mov
or
cmp
stos
mov
sub
das
inc
mov
inc
dec
dec
push
incl
popa
out
mov
outsl
push
cmp
lcall
xchg
mov
dec
je
loopne
or
xor
xor
or
ror
jge
xchg
hlt
and
jmp
das
and
popf
outsl
adcl
pop
aad
xor
cmpsb
xor
mov
in
cmp
sarb
aam
add
lret
cmp
xor
xor
dec
add
mov
mov
inc
outsb
cld
loop
mov
out
out
pop
faddl
int
dec
leave
stos
xchg
push
cmp
cltd
jecxz
pusha
push
sbb
push
mov
icebp
pop
jl
arpl
int3
jl
dec
cmp
inc
xchg
cmp
and
gs
cwtl
data16
stos
movsb
xchg
adc
add
jb
cld
sub
movsl
aas
jno
pop
divl
imul
sahf
xor
imul
adc
fsubr
je
dec
gs
pop
dec
dec
scas
cs
inc
push
add
xor
int
rorl
sbb
ret
cmp
push
xchg
addr16
iret
cmpsb
xorl
jno
leave
jmp
out
mov
leave
ds
jb
orb
add
ja
inc
inc
mov
imul
inc
jp
cmpsl
addr16
enter
insl
or
sarl
call
aaa
das
shl
add
inc
mov
popa
stc
xchg
mov
es
lods
push
sub
nop
xchg
or
xchg
add
popa
adc
and
pushf
cmp
add
xchg
decb
mov
popa
mov
add
out
mov
dec
test
dec
int3
sbbb
pop
mov
xor
jmp
jle
push
jmp
inc
lcall
iret
mov
idiv
aad
aaa
aam
adcl
adc
xchg
add
test
push
sbb
pop
sub
dec
fdivrs
in
inc
subl
push
fidivrl
cwtl
mov
mov
push
pop
das
loop
add
xchg
xor
ja
mov
sub
add
inc
sbb
scas
imul
sahf
add
subl
sub
xor
jnp
mov
or
aam
add
dec
pop
rclb
pop
jae
leave
cmp
sbb
das
pop
dec
sbb
inc
cmp
test
pop
mov
mov
notb
loope
out
stc
mov
jp
insb
sbb
inc
test
and
test
in
bound
sbb
jno
je
xor
push
inc
cmp
lds
mov
inc
push
xchg
mov
and
andb
xchg
jbe
rorb
mov
aaa
cmp
pop
cmpsb
push
js
jmp
movsl
xor
adc
pop
sub
xor
mov
movsl
mov
or
mov
pop
sub
sti
or
and
jns
rclb
mov
mov
rol
or
sahf
into
cmp
xchg
cmp
cli
movsl
popa
addr16
int3
popa
mov
aam
rorb
subb
mov
ljmp
mov
adc
loope
push
mov
xor
arpl
ja
fcoml
repnz
test
mov
push
xchg
shll
nop
dec
xor
sbb
fldcw
xchg
cmp
mov
les
sbb
and
test
insb
test
pop
sbb
push
adc
aam
cwtl
in
cmp
shrb
push
cmp
gs
inc
loopne
std
ja
arpl
dec
popf
push
pop
mov
push
ss
push
sbb
aas
lahf
push
faddl
orb
mov
inc
sub
into
sub
xlat
sub
mov
rorb
push
or
inc
add
inc
lods
daa
xchg
dec
inc
ret
xor
mov
or
pop
sti
sbb
outsl
jge
xchg
fcompl
movsl
xchg
jg
in
sub
adc
sarb
enter
adc
sub
push
add
xchg
out
mov
cmpsb
mov
adc
mov
push
mov
xor
jno
fisubs
aaa
cli
and
idiv
dec
cli
add
loope
popl
pop
jle
ds
xor
mov
daa
push
addb
mov
adc
fcmovbe
testb
outsl
pop
out
cmp
into
sti
rcll
out
lret
jecxz
out
aad
in
xchg
adc
in
clc
sub
sub
dec
subl
cmpsl
push
call
ud2
cmp
mov
sbb
fstl
mov
mov
jp
mov
fsts
jg
jge
xchg
and
cmpsb
mov
test
xchg
cld
mov
dec
xchg
xor
ja
sub
repz
cmpb
fst
inc
gs
pop
sub
xchg
lahf
xor
fnstcw
int3
popa
xchg
sub
aam
add
cwtl
pop
in
mov
mov
loop
or
es
inc
and
lods
dec
aam
cmpsl
xor
cmp
ja
jle
rcl
xchg
mov
push
sbb
stos
xchg
and
lret
mov
push
js
push
mov
pop
out
adc
inc
mov
lods
sbb
fmul
aaa
jnp
mov
cmc
mov
addr16
aaa
mov
jns
mov
push
adc
dec
into
mov
xor
mov
fcmovnbe
inc
ret
cmp
mov
arpl
mov
xorl
adc
adcl
push
mov
lahf
push
lret
jo
movsb
idivl
cmp
xor
cltd
mov
cltd
pop
jge
arpl
fstpl
mov
fidivl
dec
fmull
jae
data16
push
es
mov
push
pop
fmuls
test
mov
pop
test
int3
out
mov
sar
pushf
inc
movsl
inc
les
xchg
add
das
hlt
push
enter
dec
adc
push
es
jecxz
shlb
test
fadd
cmp
and
pop
lret
push
add
sarl
xlat
xor
aad
int3
and
enter
aad
inc
testl
data16
xchg
lahf
push
mov
inc
cmp
jge
pushf
lods
jge
subl
ficompl
dec
sbb
pushl
sar
fimull
sbbb
pop
mov
movsl
dec
ficomps
jecxz
popf
adc
xchg
leave
out
inc
popa
cli
insl
mov
add
xor
pop
or
pop
mov
cmp
outsl
cmp
mov
std
xor
popa
jecxz
adc
testb
cmp
insl
enter
pop
imul
cs
outsl
sub
pop
sub
cld
shll
cmc
xchg
aaa
repz
pop
dec
sub
pop
arpl
sub
mov
stc
add
push
jnp
lahf
jge
adc
mov
jecxz
call
mull
jae
aam
sub
mov
inc
sti
mov
hlt
test
test
sub
rclb
or
sbb
push
add
mov
sbb
add
inc
enter
int
cmpsl
pop
out
aad
xor
mov
pop
add
ficoms
mov
mov
out
repnz
fsubp
je
add
inc
mov
imul
jae
push
cwtl
loop
nop
and
daa
xor
mov
iret
not
push
test
dec
in
fsts
out
mov
aam
jl
dec
push
leave
test
jne
aaa
lcall
sub
and
clc
je
into
inc
inc
pushf
cmp
arpl
cmp
pop
push
cmc
push
mull
mov
or
sbb
std
inc
fwait
sub
arpl
ret
add
rcrb
imul
ds
pop
mov
add
jno
inc
or
int
sub
sbb
aaa
fwait
lret
pop
fistps
and
push
ror
jo
sbb
scas
mov
mov
loope
or
push
jg
incl
stos
cmp
test
popa
icebp
inc
lret
xlat
sahf
pop
sbb
wrmsr
lea
xchg
mov
sbbl
sbb
inc
and
stos
push
lret
inc
addb
lods
movsl
ds
mov
in
lahf
repz
sbb
cli
sub
fidivrl
cmp
dec
leave
hlt
cmp
dec
pop
push
mov
jecxz
ljmp
adc
mov
leave
xchg
dec
insb
cmp
xorl
popa
je
sbb
and
pusha
sub
pop
mov
mov
pop
outsl
out
in
out
lock
mov
sbb
or
push
addl
jno
sbb
shrl
mov
mov
jg
fistps
push
iret
push
fwait
ret
pop
push
dec
inc
push
lock
mov
mov
repnz
jne
cmp
es
out
cmp
insl
push
xchg
ljmp
cwtl
cmp
push
nop
mov
add
in
cmp
daa
mov
sub
out
stos
movsl
jle
cmpsl
loop
push
fistpll
add
cltd
fdivs
jno
clc
fcmovnb
nop
xor
dec
add
js
push
or
gs
outsl
sub
lret
cmp
or
insl
adc
xchg
ja
push
ja
sbb
movsl
lret
out
shlb
mov
or
xchg
add
dec
dec
cmp
mov
loope
mov
inc
test
pop
and
call
shr
in
and
mov
sbb
in
in
mov
xor
xchg
cmp
push
cmpsb
lahf
push
mov
cmp
mov
jnp
sarb
push
mov
hlt
dec
push
inc
and
jnp
cmp
dec
mov
xor
or
dec
jmp
mov
cs
jae
cmpsl
lret
or
pop
jo
fsubrl
jb
je
push
lock
fimuls
cmpsl
inc
popa
je
sub
bound
or
mov
std
jne
int
loopne
test
mov
test
fsubrs
stos
dec
xor
inc
addl
sub
fsub
mov
mov
int3
sbb
les
testb
push
iret
lds
rol
cmp
cli
repnz
pop
int
mov
loop
aaa
fimuls
jge
lods
inc
out
push
gs
fidivl
jns
push
adc
rcrl
mov
lret
and
in
in
shrl
add
mov
sar
lahf
inc
mov
adc
popf
cltd
fstp
push
sub
cmp
aaa
subl
std
pop
sub
jg
mov
fucomip
das
cmp
pop
jge
in
adc
mov
jmp
stos
mov
xor
mov
push
in
or
mov
cs
outsb
xchg
sar
xor
xchg
call
test
fsubrl
ja
clc
pop
out
sub
scas
pop
xor
adc
lret
mov
dec
adc
outsl
xchg
sbb
inc
jg
lods
jl
pop
mov
lock
mov
fcom
jl
cmc
movsb
sub
sahf
xlat
ficoml
movsb
scas
mov
xor
iret
loopne
add
push
pop
pusha
inc
mov
scas
popl
push
dec
out
aam
xlat
pop
add
lret
sub
cmp
adc
xlat
loope
push
dec
cli
in
mov
cli
es
pop
cs
jle
inc
jae
stos
xchg
xchg
stos
mov
mov
cmp
cmp
push
pop
lods
icebp
ret
xor
mov
mov
nop
add
sti
not
nop
clc
lcall
fisttpll
sub
sahf
sbb
popa
pop
cmp
out
cmp
dec
sbb
fscale
mov
loope
mov
push
fcmovbe
mov
or
or
cwtl
push
pop
sub
in
out
adc
icebp
ret
rorb
icebp
mov
jne
mov
and
repz
es
mov
mov
pop
jbe
fmuls
in
mov
loope
sub
or
ret
arpl
fst
adc
inc
mov
pop
test
cwtl
aam
popa
mov
mov
lods
adc
nop
mov
jo
mov
jmp
cmc
scas
out
outsl
ja
push
arpl
je
jmp
insl
test
in
push
inc
mov
callw
int
lock
mov
jmp
pop
sarb
push
mov
jo
inc
fdivp
push
push
cld
popa
inc
nop
cld
jmp
mov
fimull
lahf
jns
pop
stos
sbb
rcrl
scas
scas
pop
fwait
sub
or
mov
jno
mov
mov
pusha
cmp
push
xlat
iret
cld
jp
add
push
and
or
aam
movsb
xor
pop
jg
stos
cmpsl
cli
sub
addr16
xchg
lret
jae
int3
jne
adc
iret
test
fbld
mov
scas
jg
dec
inc
ret
pop
clc
mov
mov
xchg
addr16
fisttpl
aaa
mov
inc
bound
stc
ljmp
and
into
mov
lods
xlat
test
jl
dec
pusha
push
push
push
xchg
inc
jl
push
push
scas
stos
push
mov
hlt
sti
inc
xchg
fsubrs
ljmp
pop
inc
outsl
lods
jb
mov
ret
push
cltd
js
mov
subl
iret
push
lock
ljmp
shl
cmp
repnz
outsl
cs
je
xor
call
insb
stos
fs
and
data16
je
lods
xchg
mov
sbb
sbb
lcall
mov
xchg
clc
mov
dec
and
adc
cltd
pop
mov
dec
pop
cmp
enter
lahf
xchg
fwait
sbb
fwait
lea
add
ja
and
inc
cmp
mov
cmpsl
test
sub
fcompl
jecxz
aaa
pop
mov
push
mov
lock
fiaddl
push
and
mov
pop
movsl
fisubl
jbe
jno
test
bound
dec
and
call
jae
push
mov
and
sub
lock
add
cmp
jnp
xchg
shrb
or
cmpsl
repnz
pop
dec
outsb
aaa
mov
mov
mov
jbe
std
jecxz
sti
pop
int
push
and
push
cmp
lods
sbb
inc
adc
xchg
pop
in
and
xchg
fisttpll
andb
loopne
imul
ret
push
xlat
arpl
pop
add
lds
ss
je
mov
lock
lock
jp
pop
mov
or
jns
jge
daa
pop
pop
mov
inc
xchg
mov
data16
repz
push
mov
clc
push
xchg
xchg
ljmp
mov
call
jmp
jbe
pushf
idivl
hlt
adc
fbstp
cld
pop
adc
out
je
repnz
adc
mov
mov
stos
xor
cli
pop
mov
jbe
inc
push
pop
mov
pop
xchg
in
jl
and
pop
call
and
dec
fsubl
repz
add
lea
jns
enter
jb
cwtl
outsb
lea
ficoml
aas
popa
xor
mov
mov
dec
ret
sub
push
pushf
bound
mov
ljmp
out
ds
outsl
lods
sti
mov
test
cmpsl
aas
das
call
arpl
insb
mov
dec
add
and
out
mov
cmpsb
jo
jns
sub
dec
in
pop
pop
ret
data16
dec
and
cmc
xchg
loopne
adc
push
fwait
sub
mov
rol
outsb
cwtl
jmp
int
push
dec
xlat
mov
test
fisubrl
sub
fldcw
sarl
insl
mov
inc
jne
xlat
and
sti
xor
dec
and
frstor
rcrb
hlt
push
mov
shlb
rep
mov
iret
mov
sbbb
sub
fidivl
xchg
in
cmpl
jmp
pusha
aam
inc
add
dec
inc
push
mov
sbb
test
lahf
xor
sub
clc
pop
pop
icebp
adc
clc
fndisi(8087
mov
jbe
lret
add
cltd
adc
mov
add
mov
lcall
rolb
fcmovne
jecxz
adc
push
push
jne
mov
xchg
push
mov
rcll
idivl
mov
inc
mov
mov
fidivrl
jmp
cwtl
movsb
lock
loope
mov
outsb
nop
and
xlat
in
cli
popa
cmpsl
jl
frstor
push
jno
xor
insl
inc
insb
testl
pop
xor
cmp
xor
gs
mov
int
pop
jno
sbb
and
push
roll
sbb
push
mov
das
stos
mov
xor
aas
pop
or
addb
pushf
fsub
and
lret
inc
imul
jmp
outsb
lahf
call
pop
push
popf
or
pop
cmpsl
cmpsb
or
mov
xor
push
shl
add
inc
dec
inc
in
jge
pop
cmp
mov
mov
sub
ljmp
mov
insl
adc
pop
sbb
cwtl
mov
adc
out
dec
lea
push
aam
pop
sbb
dec
clc
fs
sub
incl
push
andl
mov
adc
jl
jae
mov
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
dec
cs
mov
nop
push
insb
lods
das
jns
ljmp
jo
cmp
cmp
test
rcrl
aad
cld
xchg
sub
addl
out
and
cmpsl
mov
notl
shlb
xchg
cmp
or
push
push
sub
sub
add
pushl
scas
mov
sub
sub
pop
fdivr
xchg
jae
mov
cmp
bndstx
cmp
mov
and
mov
mov
inc
mov
mov
mov
cmp
inc
insl
inc
aam
stos
lock
cltd
mov
in
mov
pusha
movsl
fwait
daa
mov
cmovge
fcomi
mov
nop
pop
test
fdivrl
jge
js
or
cmc
sub
ja
out
jmp
dec
stos
mov
outsl
rolb
rcl
mov
ja
xchg
pop
negb
and
rcl
popf
aaa
pop
dec
jge,pt
adc
push
adc
xchg
or
mov
xchg
adc
xchg
outsl
sub
imul
adc
and
pop
stos
adc
std
inc
and
je
mov
xchg
or
es
inc
pop
fsubr
fldenv
xchg
inc
adcb
adc
cmpsl
les
fildll
ror
lods
xchg
xchg
outsl
xchg
testl
mov
daa
dec
dec
and
aam
add
jne
sub
repz
push
dec
outsl
pop
aad
push
and
rcrb
es
test
es
movsb
jmp
jae
sbb
fdivrs
add
xlat
adc
enter
frstor
pop
in
movsl
jl
jno
push
adc
aam
or
or
dec
lock
sub
pop
repz
push
jb
outsb
repz
pop
mov
mov
pop
sub
adc
xor
sti
cltd
and
mov
call
loopne
mov
sti
jbe
sub
pop
iret
push
xchg
xor
or
shlb
icebp
adc
fdivrl
add
xchg
fdivl
pusha
xchg
dec
cmpsb
ret
dec
xchg
jmp
pop
mov
andw
rcrl
rcrb
fsubrs
cltd
mov
lock
fbld
xor
dec
mov
mov
xor
loopne
clc
es
aad
stos
scas
xchg
adc
leave
mov
fsubl
les
mov
loope
add
in
cmc
xor
mov
cmp
sub
cli
ja
inc
dec
stos
mov
mov
cmp
mov
mov
fisttpll
xchg
adcb
push
fmul
jo
xchg
push
sbb
mov
xchg
loop
adc
mov
arpl
mov
add
cmp
insb
mov
pop
repz
and
pop
sbb
icebp
mov
add
imulb
das
shl
std
jae
mov
dec
lea
mov
cmpsb
cmp
call
xor
sti
or
push
push
xor
pop
inc
and
or
cs
gs
ja
xchg
lahf
out
push
xchg
mov
int
loopne
aad
rcrb
pop
lahf
ljmp
mov
insl
rol
shl
jb
dec
cld
decl
xchg
outsl
mov
push
int3
dec
popa
cltd
outsb
mov
divb
pushf
cmc
push
cmp
push
in
sub
push
sbb
sub
xchg
adcb
pop
pop
test
fidivrl
dec
jno
pop
push
addl
add
enter
sub
mov
push
loope
pop
ret
pop
test
fisttpll
xor
mov
or
popa
pop
je
inc
jnp
jo
mov
sub
jne
popa
pop
insl
jbe
mov
std
pop
adcl
ret
mov
sti
shll
cmpsb
push
push
xchg
in
push
ret
popa
cmp
add
leave
test
jo
sahf
xchg
dec
pop
outsb
dec
mov
inc
fisttpll
xlat
or
push
fwait
sbb
mov
arpl
lcall
imul
pusha
mov
add
les
mov
cmp
adc
leave
addr16
xchg
pop
fistl
push
inc
popf
mulb
jo
inc
aas
leave
ret
in
xchg
cmp
test
popa
sbbb
add
cmp
inc
cmp
push
pop
push
jae
dec
mov
add
sti
mov
mov
lahf
dec
mov
mov
adc
loopne
sub
rol
mov
inc
int
mov
mov
imul
pushf
cmc
orl
shll
cli
jg
sub
push
into
movsb
int
and
loopne
addb
test
aaa
mov
testb
mov
out
push
loop
add
rcrl
pop
andl
and
inc
int3
sub
jno
movsb
or
sbb
out
dec
outsl
into
lods
mov
mov
push
pusha
mov
mov
cli
out
mov
xchg
sbb
push
jae
push
in
inc
out
push
and
push
jb
je
xchg
cmp
and
jle
xchg
test
cmpsb
mov
mov
in
adc
fwait
push
xchg
in
cmp
pushf
pop
and
cmpsl
fnstsw
cmp
lret
lahf
sub
rcrb
lahf
sahf
mov
sahf
test
arpl
call
xchg
mov
sub
xchg
int
jle
push
mov
cmp
outsl
loop
mov
insb
inc
or
sbb
xlat
xchg
popa
jge
inc
nop
aad
cmp
pop
fdivrp
sarl
jge
outsb
pop
inc
adcb
aaa
js
mov
out
xchg
mov
or
sbb
aad
movsl
in
adc
nop
cli
xchg
hlt
add
xor
dec
mov
lock
xorl
in
pop
pop
mov
lahf
push
pop
leave
fxch
sti
pop
push
pop
pop
mov
pushf
ret
inc
popa
jne
dec
cmpsb
mov
stos
dec
jp
jmp
pop
imul
popa
js
or
xchg
aas
mov
adc
jge
ds
inc
push
inc
xlat
lods
add
ljmp
aas
insb
jae
ret
mov
push
mov
mov
xchg
xchg
mov
and
ljmp
hlt
xorl
jno
ret
mov
and
cmpl
test
in
pop
cmp
enter
pop
and
ret
xor
lret
mov
push
cmpb
push
sub
cli
cld
adc
rorb
addr16
popf
pop
sarl
scas
outsb
repz
and
cwtl
and
mov
mov
ds
mov
mov
sub
filds
dec
scas
pop
mov
sbb
cmp
neg
shr
mov
cmpsl
into
inc
xchg
sbb
sub
cltd
add
pop
test
ret
mov
sub
outsb
xor
sub
loop
addl
sub
adc
inc
dec
push
scas
xchg
dec
cwtl
xor
inc
dec
cmp
mov
adc
fstl
insb
adc
sub
jb
pushf
push
pop
mov
fdivrs
mov
or
inc
add
xchg
mov
sahf
mov
shrb
xchg
stc
add
cmp
daa
jo
add
outsb
js
iret
popf
lcall
or
or
sbb
out
sub
in
mov
mull
fdivrl
mov
jnp
adc
jge
pop
lods
lret
pop
mov
scas
or
inc
mov
in
pop
push
out
push
mov
jp
xchg
cmp
out
adc
aas
jne
ret
pop
rcrb
mov
xor
and
adc
test
push
xor
xchg
icebp
je
daa
jbe
out
iret
add
cli
test
ds
add
or
cli
push
dec
divb
aad
add
test
jae
lods
lods
stc
es
push
push
lods
in
jl
xor
cmp
stc
jnp
inc
jl
pop
and
adc
push
pop
mov
movsb
adc
loopne
mov
in
repz
incb
cmc
mov
pop
and
mov
lcall
pop
adc
loope
mov
mov
xchg
inc
ds
and
frstor
sbb
jns
stos
push
in
dec
adc
push
pop
jl
mov
push
daa
fnstsw
and
in
and
scas
adc
push
and
imulb
outsb
mov
mov
rolb
inc
cs
scas
fs
adc
shlb
sbb
lahf
pushf
xchg
inc
mov
gs
cmp
cltd
ret
stos
cmp
push
rcr
dec
icebp
outsb
iret
aaa
dec
pop
mov
adc
xchg
push
std
and
cwtl
stos
cmc
sahf
mov
bound
faddp
sub
pop
call
xor
adc
mov
adc
pop
ljmp
movsb
push
pop
icebp
es
mov
mov
mov
loopne
std
ss
inc
divl
jb
jnp
clc
imul
ss
cld
inc
mov
add
sahf
xchg
mov
ret
incb
in
pushf
cmp
push
dec
cmpsl
enter
aad
jns
sbb
test
mov
outsb
mov
icebp
shrb
or
cltd
pop
add
cmp
mov
je
adc
lret
js
push
sub
jmp
pop
pop
mov
jbe
sti
pop
mov
cmpl
adc
xor
scas
ja
imul
les
jmp
gs
push
xchg
leave
add
pop
add
fnstcw
movsl
xlat
bnd
jecxz
cli
gs
loopne
sbb
jecxz
jno
and
insb
mov
jae
lret
insl
inc
push
adc
pop
jle
lea
push
dec
in
push
lret
sub
cwtl
add
sahf
push
hlt
pop
inc
cmpsb
mov
dec
shrb
mov
sub
dec
jmp
clc
mov
nop
xor
popa
loop
xchg
or
lret
roll
lea
out
out
cmp
xchg
dec
adc
bound
shlb
add
fdivs
mov
push
call
rcrl
sti
fisubrl
movsb
daa
mov
mov
adc
out
mov
std
int3
dec
fwait
xchg
ret
je
and
loope
mov
fs
fdivs
stos
popf
cwtl
pusha
movsb
test
sahf
subl
push
std
mov
fsubl
and
cmpb
inc
pop
pop
mov
ficoml
jge
inc
xchg
xor
std
cs
jne
fidivrl
or
xchg
pushf
jmp
lea
into
adc
add
insb
xchg
ret
jns
push
adc
adc
and
or
jle
or
iret
dec
xlat
and
dec
mov
push
arpl
pushl
mov
sub
add
mov
dec
push
xchg
xchg
pop
pusha
mov
dec
cmp
out
mov
call
leave
popa
cli
dec
cmp
and
xlat
gs
aam
ds
and
mov
jns
mov
mov
xor
cs
mov
inc
mov
xchg
dec
adc
pop
and
hlt
or
in
faddp
mov
xchg
pop
cmp
xchg
cmp
mov
repnz
lods
cli
fistpll
dec
push
lahf
lret
fstl
out
mov
out
sbb
jecxz
mov
mov
icebp
xchg
adc
mov
aas
mov
inc
sarl
and
inc
jno
out
lret
fs
dec
out
cmp
push
jmp
cs
inc
xlat
and
jle
das
mov
daa
jne
mov
jmp
dec
push
pushf
mov
rolb
stc
sbb
adc
je
mov
cli
stos
pop
cwtl
fdivl
je
pusha
aas
jns
and
adc
xor
xchg
fldln2
in
xchg
sbb
pop
mov
inc
sbb
inc
cld
jno
xor
jmp
jo
mov
lahf
jno
mov
sub
arpl
xor
and
xor
iret
mov
or
jae
mov
outsb
aam
shlb
xchg
rcr
in
mov
aad
cwtl
pusha
jno
std
sub
popa
push
jge
adc
mov
and
push
int
clc
inc
dec
stos
les
adc
jne
stos
into
subl
cmp
ret
sub
in
add
xchg
cs
jg
jecxz
cli
fdivr
sbb
test
inc
or
jno
lret
mov
and
into
ss
shr
cmp
pop
mov
sbbl
shll
dec
out
or
call
and
rol
daa
int
mov
pop
push
jle
xchg
enter
adc
mov
mov
push
sub
fldt
lods
cmpsl
pop
scas
aad
push
cld
in
lock
inc
mov
fmull
push
mov
jg
xchg
or
loop
cmpsl
adc
mov
cmp
mov
dec
sar
cmp
lods
dec
cwtl
icebp
and
mov
enter
jb
cs
lret
into
push
call
aaa
jg
jge
divb
sub
dec
fwait
insb
out
fnstenv
subl
je
push
fwait
arpl
ss
xchg
cmp
sub
and
stc
test
insl
or
sub
cld
cmp
or
inc
cmp
ja
pop
sub
repnz
int3
ja
sti
mov
jns
insb
mov
add
push
std
aad
dec
adc
and
scas
lcall
fs
and
push
aad
jb
ds
lea
and
push
cs
shll
xor
ljmp
push
xchg
test
adc
repnz
inc
mov
outsb
mov
sbb
je
adc
inc
inc
push
sub
scas
jle
and
lahf
lods
arpl
pop
sub
or
cmp
insb
js
dec
repnz
jne
inc
test
add
adc
adc
fists
cmp
out
xchg
inc
dec
mov
or
stos
ljmp
inc
outsb
dec
mov
int
test
jecxz
das
decb
mov
cltd
mov
cmp
pop
xchg
int
les
mov
mov
mov
sub
lret
mov
lea
in
mov
insl
jnp
ja
stos
mov
repnz
cmpsb
mov
sub
nop
adc
lock
push
scas
pop
dec
sbb
aaa
sub
int
push
ror
pop
sbb
shrb
xchg
xchg
push
pop
cmp
or
repz
sub
sbbb
sbbb
mov
jno
mov
inc
push
push
push
imul
pop
or
enter
xchg
int
dec
test
pop
push
sbb
mov
adc
cmpsl
cmpsb
cmp
sti
lock
rcr
add
movsb
mov
fdivl
cmp
push
iret
mov
test
and
sbb
out
sbb
test
outsl
hlt
jno
mov
dec
jp
push
jecxz
out
pop
mov
outsb
insl
test
xchg
pop
test
es
mov
xchg
push
xchg
lret
add
mov
mov
ja
fwait
sbb
mov
leave
ja
mov
ret
in
push
dec
sti
es
int
lahf
inc
rcrl
ja
mov
xor
in
inc
xlat
enter
and
ret
adc
jg
cmc
sahf
jne
sarl
jp
jp
cs
pop
test
jb
sbb
jl
jb
shlb
cmp
nop
add
and
ret
xchg
mov
fwait
lods
adc
outsb
xchg
fldl
popa
add
repz
lods
and
ljmp
test
subl
pop
dec
popf
sub
mov
pop
mov
je
std
push
or
cmp
mov
pop
je
test
sbb
insb
xchg
icebp
aad
inc
cmp
enter
mov
dec
lods
jne
jns
add
fwait
mov
shr
add
ss
xorb
jmp
js
adc
imul
cmpsb
push
not
jno
inc
xlat
sub
movsb
push
das
ret
fmull
sbb
repz
adc
push
dec
sbb
int
fisttpll
outsb
out
mov
pop
inc
not
or
stos
stc
jl
sbb
jl
movsb
sbb
mov
movsb
mov
rep
fimuls
popl
ljmp
aas
mov
fimuls
out
xor
out
enter
jo
sahf
sbb
or
les
inc
mov
insl
jb
add
sahf
arpl
sti
fcompl
imul
lret
jnp
clc
movsb
enter
jmp
xlat
mov
sub
daa
push
test
sbb
sti
mov
clc
xor
stos
pop
push
and
jge
jns
xor
push
cmp
fs
sbb
jp
movsb
push
push
xchg
hlt
push
test
mov
lods
cmc
or
mov
push
incb
imul
lods
mov
xlat
mov
pop
xor
clc
lret
sti
addl
dec
pop
idivl
xchg
lods
pusha
mov
cmp
mov
mov
dec
cmc
dec
fnstsw
jnp
ret
sahf
jbe
push
call
fistps
pop
out
fcoms
jl
cs
aam
pushf
hlt
fs
stos
mov
xor
cmp
mov
jecxz,pn
mov
mov
xorb
add
jecxz
inc
adc
loope
in
inc
pop
stos
movsl
mov
mov
pusha
lea
insl
es
or
mov
arpl
aas
fucomp
in
cmp
jns
adc
xchg
push
sar
and
lods
inc
xor
aam
ljmp
in
rorl
sub
mov
rcll
sbb
adc
mov
in
orb
mov
sub
aas
pop
idiv
pop
stos
arpl
popa
xchg
mov
mov
cld
int3
mov
popf
inc
push
sahf
js
lock
movsb
mov
je
and
sarl
jecxz
movsb
jge
push
lods
dec
pushl
jo
push
outsb
jp
shrb
out
add
sbb
pop
inc
sbb
mov
inc
mov
aad
mov
push
cmp
lret
and
push
mov
jp
mov
adc
ljmp
mov
les
xor
jg
push
fdivrl
mov
mov
xchg
ret
mov
jle
push
xor
stc
fstp
push
mov
mov
jmp
sahf
aas
mov
in
movsl
pop
mov
pop
mov
movsl
les
mov
xchg
mov
lods
insb
repnz
jmp
test
lods
shlb
mov
popa
aaa
xchg
push
sbbl
sbb
pop
mov
pop
xchg
push
roll
mov
xchg
ret
pop
sahf
cmpsl
fincstp
data16
xchg
cli
shr
mov
mov
pop
pcmpgtb
clc
dec
dec
adc
aam
out
fnstcw
sbb
xchg
mov
repnz
sub
cli
icebp
stos
in
xor
push
cmp
out
jae
and
stos
adc
rcrb
cltd
push
ds
xor
lds
mov
adcb
dec
hlt
add
out
rcll
out
mov
or
and
sahf
ja
jnp
xor
outsl
mov
sub
insl
push
sbb
ds
inc
int3
pushf
ds
popf
int
sti
adc
cmp
movsb
sbb
rcrb
xchg
pmaddwd
leave
jbe
std
mov
jecxz
jne
inc
adc
out
dec
mov
sbb
ljmp
jne
sti
push
ficomps
fldenv
daa
pop
sbb
push
out
lret
xchg
jl
mov
sub
stos
arpl
xor
lcall
adc
pop
insl
in
mov
nop
stos
mov
ret
lahf
out
lea
sbb
mov
test
jl
je
jno
out
mov
sbbb
out
jne
movsl
or
jecxz
dec
pop
les
xor
adc
popa
pop
stc
push
xchg
dec
or
xor
cmpl
bndldx
jl
pop
insb
mov
lea
mov
dec
sub
mov
in
imul
push
xor
inc
sub
sub
mov
out
decl
dec
les
mov
mov
dec
int3
js
stos
add
or
sub
lods
test
fisubs
mov
clc
je
jne
and
nop
mov
mov
inc
adc
xchg
shr
mov
popf
cltd
addl
stos
add
int3
or
push
mov
or
adc
mov
imul
test
sub
in
jge
xchg
leave
pop
xor
lods
cmp
sub
push
pop
dec
jne
or
or
out
dec
outsb
inc
inc
cmpsb
es
xor
out
test
pop
cmp
xor
mov
mov
mov
xchg
dec
jb
adc
add
outsl
outsl
add
or
cmp
dec
cs
movl
imul
jns
fwait
mov
jne
aam
mov
xchg
dec
sbb
ljmp
sbb
mov
fcompl
jmp
cs
gs
nop
das
ljmp
jmp
add
pop
popa
jp
xor
jb
push
lds
push
mov
jne
pop
shrl
shll
xor
cmpsl
mov
jg
repnz
mov
rcll
xor
fsubrp
sbb
xchg
xchg
and
in
cmp
rolb
lods
shl
cmp
xchg
std
ljmp
jl
xlat
pop
js
mov
dec
ja
and
add
mov
dec
lods
shlb
add
push
aam
sarb
ret
push
movsl
mov
int
jg
es
jle
mov
inc
sahf
inc
leave
cmp
pop
sbb
clc
mov
movups
and
xchg
fs
repnz
push
dec
repz
dec
cli
es
pop
mov
cwtl
xchg
mov
lods
outsl
xor
pop
jle
xor
es
push
iret
enter
lahf
adcb
aas
lcall
into
inc
mov
push
out
bound
sub
and
int
cmc
arpl
outsw
mov
sub
out
jp
pop
outsb
jecxz
add
lods
jb
cwtl
adc
xor
pop
lret
push
xchg
dec
xor
adc
mov
test
mov
mov
sbb
pop
jb
lea
lock
sbb
cwtl
sbb
aas
xchg
adc
jnp
loope
push
and
mov
clc
loop
dec
fs
bound
ret
jo
pop
jnp
enter
mov
sub
roll
pop
mov
inc
mov
push
mov
xchg
hlt
cltd
fisubrs
popa
loop
jns
lock
call
adc
ret
imul
sub
push
cmp
adc
cmp
inc
pop
lret
imul
stc
mov
sbb
xchg
push
mov
cmp
incb
sti
cmp
in
movsl
xchg
test
xor
push
or
push
call
stos
pop
inc
lahf
mov
add
mov
inc
ja
push
cmp
out
shll
roll
xor
inc
inc
push
aas
sub
jne
gs
xchg
xor
addr16
in
xchg
fstl
mov
jnp
in
sub
sahf
or
push
xor
push
jno
or
sbb
imul
iret
pop
das
pop
sub
pushf
dec
xor
cmp
je
insb
fs
iret
ds
and
lods
push
xchg
enter
push
add
mov
or
push
fsubp
inc
add
loopne
adc
cmp
mov
sbb
sub
imul
mov
sub
outsb
jo
xchg
cltd
lret
mov
stos
addb
or
iret
fisubl
jp
mov
xchg
sub
fbstp
gs
addl
in
lahf
cltd
rcrb
adc
push
aad
data16
cmc
mov
sub
pop
scas
add
rolb
pop
repnz
pop
das
dec
pop
jmp
dec
cmpsl
ret
mov
xchg
cs
mov
das
cld
cld
push
mov
cmpsb
adc
into
jle
test
xorl
rorl
aad
sbb
addr16
stc
out
xchg
enter
pop
pop
iret
jae
int
popa
ret
pop
push
jno
adc
cmc
or
jmp
jle
call
lret
xchg
lods
movsl
adc
dec
sar
pop
jmp
or
sbb
dec
pop
shrl
and
mov
sub
xchg
inc
or
int3
call
cmpb
addr16
jge
adc
push
fwait
lcall
or
pop
in
bound
xor
jno
cmp
jl
insb
inc
sbb
pop
leave
inc
dec
test
rclb
hlt
xchg
fwait
cwtl
ficoms
pop
inc
mov
scas
loope
mov
mov
pop
mov
out
cld
rcrl
test
mov
inc
shlb
js
adc
mov
popa
jns
lea
push
and
stos
les
invd
aad
or
add
cmpsl
or
and
xor
dec
mov
test
xor
mov
aad
jno
jmp
jns
cmpsl
jg
in
or
or
lock
js
push
or
lock
push
xchg
sub
mov
je
lods
test
pop
clc
lea
adc
mov
test
stc
int
insb
fsubs
mov
rcrb
mov
notl
sbb
pop
push
out
cli
sarb
cs
pop
fldenv
sarl
shll
rclb
xor
cmp
daa
ficompl
outsb
mov
dec
mov
cld
cli
enter
mov
int
mov
dec
scas
sub
pusha
lcall
das
test
jnp
sar
lock
xchg
pushf
cmp
jnp
sbb
dec
insl
lock
mov
jle
jmp
dec
jg
hlt
stos
ret
and
fsubr
jae
xchg
popa
lods
jae
incb
xchg
jmp
mov
push
mov
dec
daa
and
cli
lret
outsl
rol
pusha
in
jecxz
jmp
stos
sti
movaps
loop
out
and
mov
inc
mov
jno
rcrl
vaddps
sub
push
mov
mov
int3
into
and
mov
xchg
mov
fidivl
add
stc
jnp
fwait
mov
int3
jb
dec
xchg
sbb
mov
jle
das
rcrb
popa
mov
rcll
mov
pusha
xor
fistpl
enter
or
pop
arpl
dec
mov
movsb
mov
daa
push
fwait
jg
ljmp
xor
imul
adc
aas
fcmovnb
loop
add
nop
mov
mov
xor
and
sbb
andl
push
add
daa
scas
in
xchg
aas
jne
fnstsw
imul
xor
jae
ret
mov
out
mov
inc
xchg
pop
mov
or
cwtl
cmpsb
xchg
inc
gs
mov
push
enter
mov
incb
xor
dec
in
lret
xlat
adc
fmull
in
sbb
mov
sub
sbb
jnp
ss
sub
xor
leave
stos
lahf
bsf
and
gs
dec
cmp
test
mov
jne
inc
test
mov
jmp
cmc
push
sub
hlt
push
rol
lods
xchg
mov
sub
add
push
das
xchg
jl
loop
in
shr
cmc
outsl
cmc
and
daa
scas
daa
dec
push
mov
ja
jge
sbb
stos
sub
arpl
or
in
and
jns
push
mov
dec
pop
jbe
movsb
push
and
fxch
inc
shl
push
cld
hlt
stos
pop
data16
jnp
sti
out
addr16
pop
dec
movsl
pop
icebp
ljmp
cwtl
sbb
inc
loope
pop
or
test
ds
inc
out
pop
push
jmp
lret
mov
insb
iret
gs
xchg
daa
sub
xchg
imul
adc
adc
ja
test
xor
inc
mov
call
sub
xchg
inc
add
sahf
fwait
jno
inc
and
pop
test
sbb
mov
xor
jl
pusha
fistl
je
jl
pushf
aaa
xchg
adc
jne
icebp
fnstsw
or
or
adc
jae
push
jbe
les
scas
cmp
mov
cmp
sbb
arpl
add
mov
push
insb
xchg
repz
in
shl
add
xchg
sub
cmp
and
or
push
sub
xchg
nop
aaa
dec
movsb
fdivl
pushf
xor
pop
lea
and
mov
pop
movb
mov
nop
xchg
sub
sbb
mov
test
and
aad
subb
std
pop
pushf
lods
push
jp
stc
mov
fstl
mov
testl
sub
aaa
lock
fs
lret
sbb
add
cmp
fwait
push
jne
lock
add
fstpl
out
mov
idiv
mov
lret
aas
pop
add
int3
fninit
push
jge
scas
mov
les
sub
add
rorl
jnp
in
mov
sbb
mov
outsb
add
or
mov
xchg
loopne
push
pusha
outsl
cmp
jmp
mov
jbe
js
stos
in
mov
jo
int
xchg
add
bound
add
fiadds
sub
fnsave
mov
leave
movsb
mov
out
jns
adc
push
subb
jmp
pop
hlt
out
dec
repz
stos
and
push
in
test
in
xchg
push
sbb
cwtl
cld
jb
push
add
mov
aam
sbbl
in
sbbb
adc
dec
xor
xchg
mov
dec
fidivl
dec
ds
xchg
push
mov
insb
xor
aam
clc
jge
stos
scas
inc
repnz
js
pop
adc
push
xchg
dec
sub
arpl
ffreep
cmpsb
ds
aaa
xchg
out
out
mulb
mov
lock
push
outsl
sub
movsl
sub
push
push
addb
adc
idivl
pop
mov
inc
test
jae
ds
test
sub
sbb
mov
xchg
cltd
cmp
mov
or
insb
daa
lahf
fsubp
jne
inc
cmc
out
mov
mov
sub
mov
aas
sub
jbe
loopw
rol
and
aad
push
push
mov
jbe
test
sub
sbb
sub
nop
aas
ret
out
xchg
xor
add
push
lods
mov
pop
dec
push
js
mov
xor
and
push
dec
mov
xchg
and
sub
cmp
stc
in
mov
push
fs
mov
neg
pop
adc
mov
add
dec
mov
lar
xor
ds
or
xlat
xchg
in
lock
gs
sbb
dec
in
pop
cmpsb
sbb
jno
sub
mov
out
sar
nop
shll
std
lods
test
xor
std
sbb
mov
mov
sbb
fsubrl
out
fisubrs
xchg
and
xchg
xchg
xor
fwait
mov
scas
cmp
xor
add
push
mov
inc
cmp
push
xchg
in
cmp
jmp
xlat
push
out
in
movsl
lcall
sub
inc
pop
loopne
push
xchg
pop
xlat
lods
nop
push
in
mov
cmp
shl
sar
sarb
lea
bound
addb
pop
adc
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
fwait
and
cmpsl
sbb
or
bound
iret
push
jl
das
mov
xchg
and
xlat
dec
in
sub
ds
testl
and
and
test
test
cli
lods
lds
inc
fiadds
mov
push
lds
push
mov
inc
inc
sbb
mov
cli
outsl
jo,pt
xchg
or
cli
jo
movl
adc
adc
negl
xchg
mov
int
mov
mov
imul
int3
and
jge
fmul
cs
mov
push
pusha
push
movsb
add
call
cltd
mov
push
push
sarb
test
loope
or
and
cli
or
adc
xchg
lcall
fsubrs
nop
fldl
sahf
cwtl
test
push
scas
mov
jle
xchg
lahf
pop
or
push
pop
sbb
sub
mov
fcmovb
in
out
lcall
movl
or
subb
iret
pop
mov
leave
nop
xchg
xchg
test
sub
filds
insb
gs
std
push
in
in
mov
lock
js
sbb
lcall
push
loope
in
inc
cmp
adc
out
ficoms
aaa
test
inc
jle
data16
rorb
jbe
cli
push
dec
xchg
lods
pop
popa
and
cs
test
dec
inc
sbb
cmp
push
sahf
inc
lods
dec
xchg
jo
pop
sbb
out
xlat
aas
mov
test
push
cmpsb
arpl
and
sub
mov
jl
pop
lea
xor
inc
dec
fadd
jl
dec
cld
xchg
lret
mov
idiv
loopne
cmpsb
sub
push
dec
jo
push
add
mov
inc
jo
xchg
icebp
inc
cmpsb
jp
jo
aad
std
outsb
pop
xchg
out
push
mov
add
and
sub
dec
push
jae
test
cmp
pop
mov
inc
cli
ret
repnz
arpl
mov
mov
xchg
addr16
cmpsb
scas
rorl
xchg
addr16
test
sub
inc
mov
inc
loopne
add
adc
and
stos
adc
jns
sub
push
and
and
stc
cmp
scas
adc
movsl
dec
clc
and
mov
dec
jbe
cwtl
xor
sbb
adc
out
xorl
ljmp
fsub
inc
mov
cmp
mov
pmaxub
lret
popa
mov
lock
rcrl
aaa
lds
mov
dec
bound
sbb
std
subb
xchg
les
xchg
call
xchg
cmpsb
jne
loopne
shll
dec
sbb
movsl
or
jg
shlb
orl
in
or
test
outsb
mov
cli
add
sbb
movsb
push
out
call
test
js
mov
int
in
xor
cmp
push
cmp
aas
cli
cltd
cmp
dec
lret
xlat
cltd
daa
xchg
sbb
es
lea
jb
adc
aad
mov
add
xor
mov
dec
in
jecxz
cmp
sub
push
pop
pop
pushf
pop
sub
out
lods
stos
pop
cmp
leave
mov
xchg
inc
mov
out
aam
cltd
pushl
gs
mov
test
addb
dec
inc
aaa
inc
add
mov
mov
jnp
jl
mov
mov
repnz
stos
push
push
adcl
aam
push
mov
clc
js
outsb
pushf
fwait
sub
lahf
inc
test
lods
test
sti
push
adc
aas
or
mov
test
cwtl
and
stc
daa
loopne
cmp
lret
lods
or
rcl
cmp
or
loop
les
lds
jp
adc
das
sahf
jae
cmpsb
popf
inc
in
lea
inc
scas
jno
imul
add
inc
cmp
lret
sahf
mov
dec
and
xlat
lret
mov
rcrb
mov
inc
mov
aas
insb
shrb
push
imul
pop
scas
xchg
aas
jl
sahf
inc
mov
sbb
lds
fiaddl
adc
jb
xor
add
lea
mov
leave
popf
sbb
mov
inc
jo
mov
add
fimuls
lcall
pop
daa
xchg
sbb
in
pusha
lcall
test
sbb
jns
xchg
push
inc
insl
hlt
inc
addb
sti
mov
sbb
andb
mov
push
xchg
lahf
and
insl
xchg
inc
xchg
mov
mov
cmc
and
mov
adc
and
push
aaa
jge
fdivp
or
xor
push
mov
xor
inc
jge
or
in
test
inc
xchg
push
jmp
imul
mov
xor
or
popf
mov
pop
jo
loopne,pt
cmpsl
mov
or
pop
gs
jo
mov
jge
je
in
and
mov
jne
stos
aam
call
add
leave
dec
stc
jne
push
int
xchg
andb
sub
cmp
adc
jl
pop
aas
dec
or
push
test
cmp
in
test
sbb
aad
sub
cmp
mov
jno
scas
lock
pop
inc
and
push
mov
sub
fsubp
std
gs
pop
cmpsl
mov
daa
cmp
pop
jno
inc
movsl
mov
jge
lods
cmp
cmp
lret
xchg
jbe
mov
or
and
fstps
mov
adc
popa
xlat
xchg
daa
sbb
cltd
jp
jbe
xchg
imul
nop
cmp
je
cmp
pusha
cmp
dec
into
lods
xchg
fsubrl
es
sub
inc
scas
mov
fs
fistpl
sub
je
xchg
jae
into
dec
pop
push
mov
push
mov
insl
in
enter
sub
mov
adc
mov
sub
add
jle
pop
mov
push
icebp
mov
dec
xchg
lods
push
mov
lret
dec
repz
xchg
and
test
adc
inc
add
inc
jns
mov
jecxz
mov
and
rcrb
imul
stos
push
icebp
push
shll
jae
sub
xchg
xchg
dec
ret
int
out
lea
push
pop
test
xchg
add
fwait
out
test
shll
test
lahf
bound
xor
movsb
pop
fcom
shlb
inc
pop
mov
add
lcall
idivl
lret
add
mov
mov
xchg
xor
add
push
xchg
inc
scas
fidivrl
mov
push
fstpt
sbb
push
mov
ljmp
mov
call
out
mov
ljmp
and
in
cmpsb
jmp
xchg
xchg
test
movsb
add
and
icebp
push
add
push
lds
jns
ret
add
sub
dec
cmp
cmpsb
addr16
data16
loope
das
dec
xor
or
xchg
icebp
outsl
ss
imul
jge
std
mov
mov
add
adc
dec
sbb
iret
xor
xchg
sub
iret
jp
mov
pushf
and
stos
inc
int
insb
mov
fildl
jp
xor
push
jl
leave
into
mov
pop
inc
push
popl
cltd
pop
inc
gs
xchg
in
mov
mov
sbb
sarb
jno
pop
cmc
mov
pop
lret
fidivl
cld
lds
adc
mov
xchg
das
or
popa
loope
sbb
xchg
js
cmp
je
js
adc
outsb
pop
mov
sub
or
xor
push
lea
cltd
rclb
repz
xchg
cmp
icebp
xlat
ficomps
dec
jp
push
adc
stc
rcl
add
push
out
fdivrl
test
jnp
js
clc
pushf
hlt
into
fistpl
push
pop
loop
pop
and
lret
mov
adc
push
or
and
mov
iret
mov
pushf
mull
filds
sbb
mov
xor
mov
adc
pushf
xchg
or
xchg
jge
fs
dec
dec
mov
add
xor
in
pop
jns
jmp
mov
or
adc
inc
pop
xor
mov
mov
mov
into
and
add
mov
mov
das
sub
xchg
mov
rcl
cmp
mov
cmp
mov
shlb
xor
jo
imul
lods
inc
sub
stos
pop
gs
push
mov
xchg
dec
and
mov
or
and
xchg
leave
in
mov
xor
xor
push
lahf
xor
lods
mov
push
inc
je
les
lahf
pop
aad
and
jae
jnp
lret
outsl
stos
sbb
into
inc
sbb
test
xchg
cmp
add
pop
shr
add
in
outsl
adc
and
rclb
or
pop
sub
mov
je
fdivl
andl
or
sbb
xchg
and
fsts
cmpb
pop
adc
jns
xchg
jg
decl
dec
mov
dec
hlt
jb
cmp
mov
imul
cltd
addb
fs
add
inc
or
fists
insb
sbb
dec
das
inc
stos
mov
pop
mov
jnp
scas
dec
loopne
mov
push
mov
mov
mov
mov
sub
mov
mov
sub
pop
cmp
pop
jmp
movsl
xchg
imul
shrl
xlat
je
js
lahf
inc
and
or
push
orl
pop
into
ljmp
cli
fwait
enter
pop
int3
stos
and
dec
stos
nop
lods
popa
cmc
or
inc
fcoml
push
lods
ss
pop
or
orb
inc
stc
frstor
jmp
dec
and
int3
fsubl
and
mov
sbbl
imul
sub
loop
loop
dec
and
ret
data16
subb
movsb
push
mov
and
adc
pop
jnp
stos
push
loope
xchg
and
js
jne
and
and
push
push
and
mov
aam
test
nop
in
cli
icebp
insl
fdivrs
cwtl
xchg
lods
je
scas
frstor
mov
sbb
sbb
mov
test
in
mov
jge
lods
mov
or
bound
cs
jmp
push
push
divl
push
notl
jp
mov
repz
loopne
add
out
pop
jno
into
ljmp
ss
xlat
fidivs
mov
hlt
movsb
stos
out
orb
lds
fstpl
movsl
aaa
xor
mov
xchg
jne
incb
stos
or
jmp
lock
int3
add
insl
jl
or
adc
icebp
push
test
sub
popa
pop
loope
call
mov
adc
std
xor
lods
hlt
gs
arpl
adc
pop
jnp
xor
push
adc
jb
out
fbld
add
dec
sbb
scas
jl
test
loopne
daa
sbbb
movl
sbb
sub
push
sti
xchg
pop
popa
sbb
insb
and
sbb
mov
pop
mov
cmpsb
popa
in
sti
xchg
mov
mov
jl
pop
adc
shlb
mov
cmpsb
dec
cmp
into
enter
int3
arpl
push
sbb
push
and
cmp
outsl
idiv
hlt
iret
push
add
inc
in
mov
das
out
ja
xchg
gs
mov
imul
loope
int
xor
dec
jno
jo
fucomip
sub
out
sahf
sub
ljmp
rolb
push
bound
or
inc
out
xor
out
adc
es
dec
pop
adc
jnp
out
cmc
mov
mov
sub
and
and
pushf
xchg
stos
in
inc
ficoms
sbb
lretw
test
xchg
add
fs
cmp
lea
ficomps
lret
movsl
insl
sbb
mov
ljmp
add
out
test
xor
in
mov
fs
or
adc
xchg
inc
jg
and
arpl
insb
in
pop
and
mov
unpcklps
lahf
scas
es
pop
and
sbbl
xchg
ret
scas
mov
mov
xor
das
sahf
xchg
add
aam
insl
clc
adc
repz
bound
and
add
ja
in
iret
mov
sbb
jg
xchg
pop
push
leave
out
inc
xchg
ret
ret
xchg
cmp
call
mov
or
mov
bound
nop
pop
out
mov
arpl
mov
jb
xchg
push
cmpsb
subb
lcall
or
mov
ljmp
mov
fisubrs
andl
lcall
pop
mov
and
fmull
jb
in
fidivrl
decb
or
fadd
xchg
mov
dec
jno
aaa
orl
xor
xor
mov
cmp
cmpsl
pop
push
into
push
push
mov
lret
fs
xchg
test
dec
dec
leave
sbb
shll
hlt
adc
xchg
push
test
dec
pop
push
into
mov
mov
icebp
and
push
sbb
mov
arpl
mov
inc
addb
insb
xor
loope
popl
outsb
and
add
adc
xor
incb
pop
cmp
cmc
lcall
sub
mov
out
push
rclb
adc
pushf
scas
adc
aad
int
mov
mov
bound
pop
mov
mov
imulb
cmp
push
pop
pop
inc
xchg
inc
sahf
dec
stos
insl
mov
loope
aam
sti
enter
decb
push
fdivrl
xor
bnd
or
cmp
pop
inc
xchg
jecxz
mov
xchg
add
mov
cmp
and
mov
mov
lds
lds
or
dec
dec
push
add
movb
push
in
push
mov
in
lret
shlb
imul
fstpl
pop
dec
xchg
jl
mov
and
ljmp
orl
mov
arpl
xor
push
xchg
sub
ja
std
test
data16
xchg
pop
imul
adc
mov
mov
stos
xchg
fs
cli
pop
jge
dec
test
fisubs
flds
scas
xchg
xor
in
repnz
xchg
jge
loope
and
push
fisubrl
adc
inc
test
cmp
test
cmp
mov
jae
icebp
pop
jmp
pop
sbb
sub
stc
mov
rcll
and
ja
imul
or
pushf
inc
je
jae
pop
cwtl
pop
add
ds
addr16
sahf
out
pop
loopne
pop
bswap
sbbb
cltd
in
dec
cmp
lods
in
sti
push
mov
pop
iret
lea
cwtl
cltd
out
outsb
ror
xchg
ja
pop
aas
add
jne
pop
testb
or
sbb
sti
push
or
xchg
sahf
and
mov
in
sbb
enter
push
adc
sbbb
push
pushf
jns
fmul
push
mov
dec
jle
test
std
lea
scas
int
add
in
xchg
jo
ja
ret
or
out
push
inc
inc
int3
pop
or
movsb
cld
pop
inc
add
jnp
xchg
inc
pop
xchg
dec
divb
test
xor
out
mov
xor
cwtl
ja
imul
push
xchg
roll
dec
enter
loopne
sub
lcall
or
dec
and
and
mov
loopne
push
gs
sub
mov
cli
sub
mov
jbe
sub
popl
sar
je
xchg
sbb
in
ds
pop
inc
gs
movsb
aad
push
push
iret
mov
xchg
push
out
push
inc
mov
into
lods
cmp
sbb
pop
inc
lahf
clc
loopne
mov
xchg
pop
mov
test
mov
jnp
insl
push
sbb
or
sub
mov
scas
pop
or
dec
pop
sti
jp
adc
into
movsb
push
push
push
pop
nop
jne
pop
or
es
push
mov
xchg
add
push
fs
or
or
lock
xor
lea
das
sahf
sub
sbb
inc
jl
cs
clc
cmp
cs
imul
push
es
iret
xor
push
pop
sahf
scas
mov
jbe
insl
jmp
fadds
dec
cli
aam
daa
gs
push
dec
lock
adc
sbb
lock
dec
push
mov
mov
xchg
mov
jp
pusha
sahf
cmp
pop
or
stos
jo
out
aaa
ror
pop
ds
mov
adc
pop
dec
xchg
ds
fucomip
and
repz
arpl
fimull
test
jg
ljmp
xor
sub
mov
mov
xchg
jno
outsb
or
cmp
push
fnsave
fwait
sbb
fs
loopne
jns
sbb
mov
ljmp
xchg
lea
hlt
das
inc
inc
xchg
pop
xchg
sahf
sbb
jne
faddl
movsl
insl
jno
notl
xor
add
mov
mov
cwtl
push
aad
sarl
lahf
or
idivb
shlb
mov
rclb
stos
inc
call
mov
lret
push
mov
sub
out
lods
rorb
arpl
sub
mov
dec
leave
movsl
jle
or
ds
push
gs
mov
insl
sub
sub
adc
out
push
and
push
jp
fisubrs
mov
adc
jo
add
in
xchg
orl
loope
sub
mov
leave
ds
xchg
cwtl
shlb
add
fwait
scas
push
push
cmpb
sub
mov
icebp
cli
loopne
test
push
sub
je
sub
aas
adc
add
not
xor
add
nop
jbe
hlt
je
jne
push
xchg
mov
das
mov
mov
and
push
xchg
in
fdivs
push
and
push
sub
mov
dec
cwtl
pushf
mov
rolb
cmp
fwait
sti
addr16
sbb
fldl
cld
push
lret
cmp
hlt
loopne
or
shl
or
and
dec
dec
leave
negb
fwait
enter
and
xchg
sbb
insl
pop
rorl
imul
xor
ds
and
inc
into
add
push
cmpsl
shl
add
inc
adc
dec
xchg
cwtl
pop
mov
in
sti
loop
les
xchg
test
mov
jb
outsb
mov
ljmp
mov
or
ret
or
mov
orl
mov
adc
shlb
sahf
loopne
hlt
or
ljmp
dec
fisttpl
push
sub
xor
jo
stos
in
mov
mov
xchg
mov
pop
lcall
lahf
jae
out
sbb
inc
sub
fmuls
arpl
cmpsb
pushf
xor
mov
popl
jge
or
sub
dec
ret
test
mov
stos
fstpt
jge
dec
mov
adc
add
jbe
ret
push
daa
cld
les
fidivrs
push
push
imul
sbbb
fsub
xorl
pop
push
mov
popl
push
add
popf
lahf
das
mov
xor
inc
push
test
test
xchg
cmpsb
insb
sbbb
imul
sar
xchg
push
xor
ljmp
mov
jle
mov
lret
jae
lds
cwtl
jns
insb
out
stos
or
rclb
mov
cli
dec
lds
sbb
testl
dec
repz
in
mov
jae
fnstsw
cmp
hlt
pop
mov
jne
test
pop
pushf
loope
adc
into
cmpsb
adc
push
mov
out
mov
or
xchg
cmp
vaddss
jae
andb
pop
lcall
sub
aam
pop
shll
mov
ret
sti
out
jae
push
insl
jmp
xchg
mov
push
mov
dec
in
clc
ficomps
or
jl
ja
repnz
push
js
mov
mov
scas
jae
dec
in
fiadds
mov
mov
jp,pt
pop
sbb
inc
aam
ror
sbb
outsb
adc
and
mov
cli
dec
fmull
aam
fsubrl
pushf
xchg
shll
mov
cmp
clc
imul
cli
shr
sbb
mov
adc
outsl
int
pushf
sub
inc
outsl
movsb
popa
adc
sti
mov
lcall
pushf
jb
movsb
loope
lcall
adc
pop
cs
and
cltd
push
ret
mov
push
pop
jl
loop
subl
lret
jne
xchg
je
mov
fcoml
xchg
je
sbb
aad
in
lds
sbb
loope
cmc
lea
sub
inc
dec
in
shr
sbb
in
pop
mov
outsb
xchg
and
fwait
push
mov
cmp
xchg
imul
jo
ret
test
in
pushf
lcall
sub
int3
fs
fcmove
jp
pop
in
fdivr
pop
popf
scas
testl
out
push
mov
lret
sub
mov
js
aaa
sub
xor
cmp
icebp
inc
out
pop
push
fcom
mov
adc
jp
xor
jnp
call
fnsave
sub
rcll
push
inc
push
inc
mov
pop
mov
xchg
pusha
mov
ficompl
jl
jle
mov
mov
iret
movsl
inc
mov
mov
rolb
cmc
dec
jp
call
cli
sbb
pop
cli
lahf
imul
xorb
dec
sub
repnz
inc
jp
sub
jle
aas
jnp
adcl
mov
or
xor
mov
fs
cs
jmp
jl
mov
add
outsl
or
push
mov
mov
inc
xchg
insb
jnp
or
sbb
clc
pop
out
pop
imul
pop
sbb
mov
xchg
and
xor
idivb
loope
add
mov
aaa
repnz
sbbl
sbb
ret
stos
adc
aas
xor
int
mov
insb
and
rcrb
sbb
or
insb
xor
push
mov
addr16
adc
insl
movsl
repz
fstp
adc
mov
cmovp
lret
push
lea
popa
in
ds
dec
jne
gs
roll
inc
iret
mov
mov
inc
inc
in
imul
das
in
or
pop
rclb
sbb
pop
fidivrl
jae
leave
in
pop
imul
adc
mov
mov
pop
addr16
into
mov
scas
sbb
cmp
sar
pop
sub
add
lock
xor
test
les
jmp
dec
cmp
inc
das
data16
jb
push
jg
dec
jecxz
in
cmp
fistpl
cmp
shrb
adc
sub
inc
inc
cld
and
xchg
repz
jge
jg
ret
imul
jo
aam
scas
call
aad
add
cmp
mov
popf
test
mov
mov
or
rclb
mov
add
loop
fmuls
cs
mov
pop
mov
mov
push
mov
loop
mov
sub
push
cltd
pop
test
inc
push
in
pop
das
cli
mulb
xor
out
scas
jp
sbb
movsb
int3
sbb
fdivrs
push
sbb
jne
ret
popl
int
sub
adc
gs
rcl
or
test
xor
shr
ret
test
mov
mov
dec
xchg
adc
dec
pop
sbb
in
shrl
aas
adc
das
call
es
dec
fidivl
cmp
pushf
push
mov
scas
add
mov
adcb
stos
mov
push
jne
lahf
std
pop
jno
daa
es
rcll
incl
mov
aad
fs
in
xchg
jge
ja
dec
sti
sub
lea
sub
xor
stc
cmp
or
xor
sti
push
fiadds
ds
inc
fcmovne
loopne
jecxz
mov
icebp
ljmp
mov
outsl
cmc
and
mov
nop
sbb
dec
popf
pop
push
loopne
nop
sahf
xchg
cmpsl
xchg
movsl
lret
xchg
cmpsb
and
rolb
push
xchg
sub
lods
jge
pop
mov
mov
mov
mov
out
or
fdivl
sti
push
push
pop
into
int3
in
dec
stc
sbb
mov
xchg
or
scas
pop
in
in
jno
sbb
jp
shlb
fcoms
stc
push
pop
loope
fs
xor
cmp
sbb
mov
or
sbb
and
in
repnz
push
push
adc
push
dec
into
jne
add
rcrb
pop
xchg
adc
inc
sbb
add
ret
pop
mov
jbe
out
inc
imul
or
pusha
hlt
fwait
or
pop
pop
mov
jno
repnz
shll
sub
test
fmuls
out
inc
bound
and
xchg
scas
inc
out
xor
nop
cs
and
out
sub
mov
int
cltd
daa
dec
in
pop
push
mov
or
mov
dec
ja
sbb
dec
popf
pop
sub
mov
mov
int3
jle
lcall
sahf
outsb
je
adcl
dec
pop
orb
xorl
fwait
adc
ja
xchg
push
add
jae
dec
sbbb
loop
mov
jae
cld
adc
popf
or
adc
lods
lods
mov
fsubs
xor
rorb
xchg
pop
and
sub
cmp
js
push
cmp
lahf
insb
ja
hlt
add
sub
dec
cmp
fidivs
push
xchg
dec
pop
imul
stc
fnstsw
popa
xchg
in
cs
stos
into
push
mov
xchg
sub
xor
sbb
pop
mov
jne
movsl
mov
pushf
lods
sbb
fistpll
xor
stc
adc
mov
sub
cmp
sarl
mov
sub
cmc
pop
mov
dec
xlat
rorl
ja
inc
push
nop
rorl
mov
jmp
mov
xchg
sub
sub
push
hlt
cs
ljmp
xlat
jmp
jo
adc
fstl
push
push
loopne
sahf
mov
add
arpl
pop
outsl
ffreep
mov
dec
mov
lods
in
pop
sub
testb
push
cltd
sub
xchg
or
dec
ret
inc
xor
push
loope
in
jmp
inc
mov
jl
pop
cmpsb
loopne
add
fdivs
dec
adc
pop
repz
push
ljmp
dec
aas
jae
add
out
and
addr16
cmp
mov
in
jb
mov
mov
or
mov
lret
jno
inc
getsec
sahf
jecxz
lahf
dec
xchg
stos
lds
sbb
xchg
fiaddl
push
outsl
daa
sti
nop
and
push
add
loop
jge
jne
and
push
mov
repnz
push
call
in
inc
mov
xchg
gs
idivb
testb
jg
pop
mov
push
cmp
mov
bound
arpl
mov
and
loopne
sti
ret
mov
arpl
ror
aad
mov
in
fnstsw
lret
xor
out
outsb
pop
insb
enter
pop
movsl
ja
xorb
ret
pop
pop
sti
inc
pop
dec
lds
mov
push
lret
pop
lret
popf
fs
mov
stc
fildll
xor
mov
cmpsb
out
cltd
or
pop
push
push
clc
aaa
std
sub
andb
lds
ja
jae
and
aad
push
cmp
mov
dec
dec
rol
jmp
test
push
pop
push
jle
mov
xchg
xor
sbb
xchg
lock
pop
testb
dec
hlt
mov
lods
jne
pop
xor
fsts
cmp
mov
fisubrl
push
or
cltd
inc
fcmovnbe
aaa
mov
shlb
je
jp
fsub
fsts
rcr
xor
addb
cmpb
cmc
push
ja
jbe
push
mov
cmp
ljmp
xlat
cli
jmp
and
jl
sub
mov
xchg
jbe
xchg
or
adc
rcll
cmpsb
mov
subl
aam
cmpsl
roll
scas
fsubrl
cmp
iret
mov
sbb
outsb
dec
sbb
push
cmp
cs
pop
xchg
jecxz
pop
int3
dec
loope
loop
scas
jo
jo
int3
add
sbb
adc
xor
pop
or
sbb
or
das
and
sub
dec
adc
mov
lret
adc
mov
in
out
cltd
dec
std
and
dec
pop
icebp
dec
xor
push
fiaddl
lock
sub
rcrb
inc
cmpsb
jmp
scas
and
push
mov
jnp
xor
clc
adc
addr16
mov
outsb
push
les
jo
jge
push
lods
lea
jne
adc
sub
add
cli
fcmovnb
fstl
xchg
add
adc
in
enter
pop
bnd
das
test
in
sub
jae
frstor
les
shlb
inc
pushf
filds
sub
hlt
inc
jecxz
or
scas
mov
or
mov
pop
push
cmp
inc
jp
test
pop
mov
insb
inc
repnz
fists
push
dec
cmc
mov
jae
fmuls
outsl
pop
test
lcall
cmp
imul
xchg
mov
and
les
jl
ja
pop
push
add
aaa
mov
xlat
movsbl
das
leave
fidivrl
jnp
or
mov
ret
xchg
inc
in
data16
add
mov
fcmovnb
mov
adc
sbb
mov
pop
cmp
addb
outsb
jp
cmp
mov
frstor
divl
loope
jecxz
test
bnd
movsb
movsl
lret
inc
adc
jo
rclb
push
xorb
xchg
fsin
insl
ss
xor
mov
adcb
lret
xchg
out
insb
mov
fistl
xchg
sub
inc
dec
mov
inc
push
nop
pop
cld
arpl
inc
cmpsl
jne
jb
ret
lds
sbbb
scas
popf
cs
xchg
inc
mov
sarb
cmp
jnp
jno
scas
cld
leave
and
test
cmpsl
movsb
or
mov
sbb
loopne
icebp
cs
shlb
cmc
mov
mov
mov
mov
scas
pop
addr16
mov
add
mov
mov
xor
into
hlt
lods
into
loope
dec
sub
rcll
sbb
pop
in
mov
cmp
and
jle
repz
stc
scas
xchg
jmp
cld
xlat
and
xor
lods
pop
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
mov
dec
hlt
bound
pop
bound
sub
inc
mov
in
sbb
adc
fwait
vmsave
xlat
into
sub
in
aas
mov
daa
xor
stos
out
flds
roll
jmp
lcall
shl
sub
pop
cmc
ret
call
push
enter
cmova
pop
pop
cmp
mov
dec
and
inc
adc
rclb
cltd
test
jae
sbb
jmp
pop
fcomps
popa
js
lea
sbb
cltd
daa
aas
jae
paddsb
push
scas
loopne
ja
mov
jbe
and
jg
scas
mov
fistps
stos
fcoms
or
mov
orb
ret
or
cmc
jno
addl
sbb
lea
shll
push
sahf
mov
add
inc
cmpsb
push
data16
call
sbb
ret
sub
loope
adc
xor
rcrb
hlt
ficoms
jb
and
jmp
mov
sbb
xchg
out
repz
sbb
je
sti
je
or
pop
inc
sahf
add
ds
imul
pop
push
pop
mov
sbb
lock
fsts
pop
int3
daa
or
cmp
jmp
mov
and
add
cmp
mov
sbb
mov
or
pop
push
dec
push
stos
inc
aas
add
lods
lret
mov
inc
shl
xchg
push
imul
shrd
inc
outsb
cmc
popf
add
imul
push
xchg
movsb
aaa
fisttps
fmul
xlat
cltd
lea
ja
loop
pop
test
in
jl
push
cmp
mov
mov
fcomp
push
xchg
push
add
inc
or
push
gs
dec
in
das
cmp
jmp
dec
fwait
push
cmp
sbb
repz
mov
fcmovnbe
sbb
pop
inc
dec
xchg
sub
call
push
jns
in
xor
add
fucom
in
dec
mov
shlb
pop
xorl
std
mov
addb
inc
les
insl
cmpsb
push
mov
and
fcomps
in
dec
cltd
sub
push
or
icebp
xchg
mov
mov
lock
sub
mov
mov
popf
in
pop
cwtl
jmp
add
call
ss
mov
into
jecxz
ret
cmp
outsl
jo
mov
mov
out
jno
outsl
fistl
xor
xchg
mov
cmp
fisubs
inc
push
dec
and
inc
lods
xchg
mov
cmp
imul
jmp
dec
outsb
lret
pop
push
rcrb
ja
pusha
jo
xchg
cmp
fiaddl
add
sti
ret
xchg
push
clc
mov
jb
flds
sbb
je
in
pop
mov
andb
or
or
int3
imul
je
ljmp
aaa
inc
fs
sbb
lods
push
and
mov
in
jle
shrb
and
cli
hlt
jb
add
cwtl
mov
aad
adc
xchg
adc
aas
pop
je
xchg
and
or
mov
dec
movsb
cmp
insl
push
icebp
je
je
push
sbb
pop
lods
outsb
aad
insb
hlt
inc
jo
addb
and
popa
xchg
pop
loop
movsl
or
adc
jbe
mov
pop
add
ja
inc
fdivrp
pop
add
popa
fwait
sbb
pop
dec
and
dec
es
or
pop
cltd
outsb
cmp
enterw
data16
sti
xchg
inc
jo
pop
aam
ret
bound
add
daa
cmc
xchg
cmp
stc
jp
and
int
mov
xor
movsb
aaa
or
adc
pop
push
sti
sub
cmp
ja
mov
testl
aad
lcall
mov
shl
mov
fcomip
xchg
addl
mov
aas
movsb
test
push
mov
nop
mov
orb
adc
rcl
push
jo
and
mov
or
mov
cmp
sub
out
int
testl
out
adc
add
cltd
pop
jl
push
or
xchg
xor
mov
cmp
push
sub
push
adc
lret
ret
sbb
xchg
dec
mov
testb
xor
in
jg
sub
push
jp
icebp
shll
cmp
mov
dec
cmp
es
pop
mov
mov
andb
jno
bound
xchg
nop
mov
das
shlb
jle
ret
push
push
and
dec
or
pop
lock
adc
push
sub
out
repz
rcrl
inc
push
sub
pop
push
adc
jbe
mov
sbb
inc
aas
es
pop
inc
add
daa
mov
jae
push
mov
mov
loopne
cmpsl
ja
and
shlb
test
add
outsl
fld
loop
imul
js
adc
xor
fisubs
pop
insb
mov
jp
mov
sbb
dec
dec
fisubrl
mov
inc
cmpsl
cmp
imul
ds
pop
jle
nop
push
aad
clc
ljmp
imul
lea
rcll
xchg
popa
xchg
out
lock
or
rorb
arpl
mov
pop
dec
fiaddl
push
pusha
adc
fidivs
xacquire
jnp
clc
nop
loopnew
inc
pop
rcll
fsubs
and
mov
ret
push
sbb
mov
xor
push
shlb
inc
inc
jae
test
popa
lods
rcl
dec
test
cld
lret
mov
test
adc
test
stos
into
jnp
push
mull
clc
in
gs
outsb
loopne
pop
xor
cltd
push
push
inc
pop
pop
xchg
movb
ficoml
sbb
in
lock
ds
pop
add
imul
int3
insb
dec
repz
ret
mov
rcrb
shll
push
popf
insb
dec
bound
ljmp
dec
pusha
xor
sbb
and
sub
aam
cld
mov
push
jl
jecxz
mov
rorb
mov
mov
mov
fidivrl
jmp
and
mov
push
mov
mov
mov
inc
add
test
mov
pop
andb
out
pop
push
sbb
jns
jae
ss
das
dec
lret
push
lahf
dec
test
pop
jmp
clc
push
movsb
roll
cmp
stos
testb
test
adc
mov
enter
and
and
push
subb
sarb
sub
xchg
cs
sarb
inc
xor
cli
test
js
sbb
or
mov
jg
outsl
xchg
test
push
ja
divl
fistl
cmp
ror
cmp
add
add
loopne
movsl
mov
imul
mov
pop
mov
mov
sbb
push
or
sbbb
test
xor
or
cld
or
test
push
pop
pop
dec
pusha
loopne
into
mov
xor
shrl
mov
out
and
sub
xchg
inc
mov
insb
insb
outsl
push
dec
sbb
mov
mov
shlb
aad
xchg
jmp
cld
xor
mov
and
mov
jmp
test
xchg
or
paddb
mov
mov
inc
cltd
lahf
ret
sub
sub
lods
pusha
sub
ja
push
stc
ljmp
add
shl
fcmovnu
push
pop
cld
mov
pause
jns
les
js
in
jle
jmp
dec
mov
ja
adc
repnz
mov
lods
fcomi
lcall
fldenv
mov
ja
dec
dec
ret
testb
pusha
arpl
cmp
int
mov
jecxz
push
mov
test
mov
cmp
out
and
mov
add
adc
jns
in
mov
jmp
cld
xchg
lret
and
mov
add
pop
mov
les
out
lds
push
shlb
into
xchg
jle
in
xorb
push
adc
scas
addr16
bound
pop
pop
cld
aam
mov
arpl
mov
sub
leave
fnstenv
inc
movsb
rcrl
xlat
icebp
jp
loop
adc
ret
mov
inc
jns
and
ficomps
mov
jl
stos
mov
mov
jp
xor
dec
hlt
cmp
mov
inc
pop
push
or
enter
jecxz
mov
mov
xor
imul
outsl
hlt
mov
adc
scas
daa
fneni(8087
and
push
push
gs
pusha
aaa
xchg
mov
cmpsl
push
fildl
test
loop
ljmp
ret
into
xchg
icebp
test
pop
mov
lods
fstpt
movsb
das
pop
dec
mov
insl
out
cs
pop
popa
int
fdivrs
aad
and
sahf
add
fs
xor
mov
lcall
adc
lds
and
xor
xchg
fs
popa
in
pop
sarl
and
sub
cmpsb
jg
int
lock
inc
push
xchg
aam
or
ss
and
pop
push
mov
mov
jp
imul
cmp
outsb
mov
lods
imul
pop
out
adc
xor
icebp
or
pusha
pop
rcrb
or
daa
test
shlb
fcompl
lea
adc
pop
pop
mov
or
xor
push
jae
out
data16
or
cmp
mov
repz
cmp
mov
cmp
daa
les
push
adc
xor
loop
cmp
inc
mov
mov
add
scas
fwait
lods
jb
xchg
imul
into
cmp
jge
mov
xor
cli
xor
jae
out
lea
cmp
push
ret
jns
push
icebp
cmc
aaa
stos
clc
sub
jl
and
gs
test
sub
xor
imul
xor
dec
mov
lret
rcll
dec
mov
loop
mov
sbb
pop
rcl
add
pop
mov
mov
pop
out
mov
fsubrl
xor
mov
mov
ret
daa
imul
aam
inc
pop
cs
mov
adc
les
dec
cwtl
leave
ljmp
fcomi
shr
scas
rcr
in
cltd
pusha
adc
xchg
add
out
out
clc
xchg
rcll
add
xor
out
sbb
adc
jp
xor
add
pop
test
imul
notb
movsl
pop
jmp
jp
jnp
das
xchg
rolb
xchg
xchg
fsubrl
xor
leave
sub
call
in
insb
xor
insb
popf
cli
add
xchg
popf
stos
test
xor
fst
mov
lods
lcall
int
jg
inc
mov
cmp
rorb
or
notb
adc
jecxz
pop
movsb
xor
popf
sbb
enter
sahf
popa
mov
scas
cmp
lcall
repnz
testb
in
imul
loop
rep
push
mov
push
in
outsb
fmull
insl
bound
sahf
push
inc
mov
and
pop
lret
dec
je
add
shlb
push
xchg
rcrb
jmp
xchg
lea
or
shrb
xor
mov
inc
mov
mov
mov
xchg
jle
pop
rolb
mov
jno
sub
inc
filds
jge
imul
inc
sbb
pop
lea
jbe
jl
xor
add
pop
fs
in
jp
or
xor
out
aam
dec
adc
mov
sarl
mov
enter
xchg
sbb
das
add
push
mov
jb
movsb
pop
scas
loop
mov
sub
inc
repz
dec
cmc
mov
ret
mov
ret
jo
push
or
dec
scas
or
push
add
js
xchg
fildll
xchg
cmp
stc
lahf
aam
push
cltd
test
xchg
adc
sarl
jnp
repnz
cs
cmp
mov
clc
ja
clc
adc
cli
ljmp
in
ja
pop
or
rcrb
push
jno
push
pushf
stc
sub
mov
mov
add
out
jo
xchg
gs
ds
outsl
lahf
push
stc
cs
or
push
xlat
jb
shrb
out
inc
or
sub
or
jle
pop
push
hlt
outsb
lea
push
das
and
enter
fwait
push
xchg
adc
push
aaa
xchg
and
cmpsl
scas
imul
pop
loope
xor
jne
jae
ja
sub
xor
mov
add
jnp
pusha
test
pushl
push
inc
or
ffree
imul
pop
push
aad
imul
xlat
xchg
xor
test
push
daa
test
mov
imul
scas
mov
dec
push
or
push
mov
in
gs
rcr
inc
faddp
ret
and
push
fsubs
pop
adc
addb
xchg
push
movsl
sbb
dec
mov
push
cld
into
mov
aas
xor
mov
pushf
sub
loop
xchg
imul
inc
cld
mov
pop
ret
fisubrs
jecxz
aas
imul
pop
or
out
imul
mov
cmc
dec
cmp
mov
and
pop
jns
push
stos
mov
and
inc
repnz
mov
adc
xor
cmp
test
pop
mov
mov
mov
or
mov
sub
es
or
imul
xchg
int3
jg
lea
sub
cmpsl
mov
roll
pop
ljmp
or
pusha
sbb
mov
mov
mov
or
lock
arpl
jnp
xlat
pop
adc
jg
shl
mov
and
icebp
xchg
cmc
fwait
or
sub
mov
cmc
jae
jno
pusha
mov
fnstcw
mov
mov
dec
testl
ja
and
mov
push
lahf
stc
pop
push
mov
jmp
mov
aad
clc
inc
pop
mov
insl
mov
inc
in
popa
mov
push
repnz
scas
push
mov
ss
adc
mov
or
add
outsb
push
outsb
pop
pop
rcll
jp
sub
fldl
sbb
fwait
sbb
lahf
ja
xlat
sub
fcompl
sbb
vmwrite
loopne
cs
jle
fdiv
lock
xchg
add
pop
std
movsb
push
jnp
lods
in
cmpsl
push
cltd
bound
cli
xchg
mov
xchg
pop
mov
adc
out
int
outsb
nop
or
dec
mov
xor
adc
sahf
fisubrl
fadds
cwtl
cwtl
cmpb
xor
mov
pop
mov
xor
lahf
lods
loop
and
rcl
aas
and
repnz
cld
sub
mov
dec
adc
loop
dec
sbb
pop
xchg
cs
lea
or
fnstcw
sbbb
add
dec
ja
ficomps
pop
pop
mov
movsl
fists
lock
shlb
adc
shlb
sub
scas
test
lods
popf
sbb
sub
dec
out
mov
dec
gs
insb
and
insl
packuswb
movsl
cwtl
popa
repz
push
add
stos
dec
add
xlat
push
jecxz
mov
push
ret
inc
mov
push
test
and
fsin
dec
jb
rcr
adc
push
mov
arpl
mov
push
ss
or
jns
cmc
xchg
xorb
nop
cmp
fnstenv
sbb
or
sbb
in
out
hlt
adc
xchg
dec
inc
js
lahf
fiaddl
in
in
and
ds
pop
js
push
icebp
hlt
iret
inc
mov
outsb
ds
jo
jbe
jecxz
jmp
pop
jo
test
dec
ss
cmp
and
aam
outsb
stos
add
pop
dec
xor
add
inc
lret
cld
pop
mov
cmp
arpl
push
cmpsb
pop
aas
std
ja
cmp
std
in
fistps
sbb
dec
nop
sti
xor
leave
jmp
hlt
fisubrs
fidivrl
insb
cmp
aas
dec
test
outsl
subl
dec
sbb
xchg
add
std
imul
pusha
in
adc
xor
test
sbb
add
hlt
shll
fistpl
inc
mov
and
inc
sbb
out
mov
ret
sub
mov
lret
push
cmp
jmp
xchg
popf
dec
mov
lods
xchg
mov
out
push
fildll
add
push
ljmp
jne
mov
mov
sbb
sbb
lret
movl
ja
aad
in
hlt
in
dec
sti
dec
scas
fistpl
mov
lcall
or
aaa
out
popf
hlt
les
dec
add
jb
pop
test
in
cld
cmp
in
js
or
push
sub
leave
sbb
add
mov
dec
dec
std
cmpsl
movsb
mov
je
or
test
fcmovb
push
jge
sub
sahf
rorb
dec
mov
hlt
rcr
pop
pushl
lcall
and
adc
es
cmp
movsb
cs
inc
stos
lods
sti
mov
inc
insb
ljmp
jo
fidivs
aas
js
adc
leave
mov
and
cmpsb
pushf
mov
xchg
add
insb
bnd
or
pop
movsl
ja
xor
imul
add
iret
scas
enter
sbb
mov
and
pop
daa
cmp
faddp
push
scas
cli
inc
addr16
aas
mov
mov
aam
cmp
xor
jl
inc
cmp
mul
out
ds
lds
adc
inc
or
cltd
loope
js
inc
xchg
push
mov
mov
rcrb
cmp
subl
add
and
fisttps
lcall
out
int
adc
lods
mov
stos
pusha
xchg
addr16
sbb
pop
dec
in
or
pop
mov
cmp
pop
fisttpll
daa
sub
sub
xor
in
adc
loopne
xchg
outsl
xor
mov
int
int
cltd
enter
mov
loope
ret
in
dec
xor
sub
repnz
dec
dec
loope
sub
and
xchg
xor
jnp
push
clc
pop
xor
mov
das
sbb
jae
rolb
push
mov
fcomi
mov
xchg
cmp
leave
push
cs
imul
test
cltd
sbb
mov
imul
jle
or
cmp
insl
es
lea
ja
jns
inc
and
loope
fmuls
iret
dec
and
mov
mov
clc
out
xchg
adc
nop
jno
add
adc
js
fisttpl
test
push
hlt
cmpb
je
adc
cmp
test
sub
pop
inc
jle
bound
adc
rcr
cmpsl
mov
das
sub
mov
dec
outsl
sbb
gs
jae
push
bound
push
jecxz
pop
fs
les
pop
push
adc
outsl
sub
cmp
jae
add
imul
test
pusha
mov
xchg
cwtl
pop
decb
mov
pop
nop
cmp
adc
or
jne
xchg
pop
icebp
and
int
mov
pushf
pop
dec
push
stc
hlt
and
test
adc
mov
push
mov
mov
push
gs
bound
out
sahf
mov
push
lods
push
xchg
add
sbb
mov
fsubl
in
jns
loop
cld
pop
sbb
in
std
cli
sub
jecxz
inc
xorb
cli
mov
cs
fbstp
sbb
push
pop
pop
jo
sahf
cmp
cmpsl
jb
sti
ja
mov
outsb
insb
add
test
jmp
jne
adc
cmp
loop
shll
jb
jl
dec
add
inc
call
shl
nop
push
aas
negl
pop
add
test
aaa
lahf
pop
les
xchg
or
insl
mov
xchg
adc
js
mov
push
insb
add
xchg
imul
mov
insb
jge
or
xchg
mov
mov
mov
out
push
cmpsl
shlb
sub
and
inc
mov
jg
loopne
outsl
repz
popf
mov
in
mov
push
test
xlat
adc
inc
shlb
xchg
mov
cwtl
aad
das
push
dec
mov
test
mov
xchg
xchg
clc
mov
adc
and
push
adc
cmc
pop
xor
addr16
sub
push
jns
push
xchg
push
jno
pusha
or
lret
aas
cwtl
jmp
incl
xchg
jae
cld
das
gs
fisubrs
xor
pop
inc
dec
adc
mov
cmpsl
xorb
ja
mov
outsb
pop
fwait
arpl
fwait
ss
fs
bnd
data16
ret
cmp
or
xor
fwait
out
fsubp
faddl
popa
cmp
mov
in
stc
and
add
jbe
jp
push
pop
daa
rolb
fdivs
jle
add
dec
pushf
inc
cmc
outsl
pop
out
enter
orl
mov
xor
int
jbe
and
hlt
std
mov
repnz
xlat
dec
sarb
pushfw
aad
sarb
je
adc
in
sti
aaa
subb
jnp
push
ret
and
int
add
fwait
cld
callw
rcr
imul
test
mov
inc
adc
cmpl
in
lock
pop
pusha
pop
test
xlat
in
idivb
sti
jne
mov
add
mov
and
push
jb
add
or
out
jbe
scas
add
sbb
adc
aad
sbbb
cld
jecxz
sbb
popf
sub
jecxz
cld
mov
xor
dec
or
ja
pop
xorb
push
and
popf
movsb
or
fidivrs
test
lahf
hlt
popa
movsl
lock
loop
push
pusha
sbb
mov
adc
sbb
inc
add
cmp
mov
enterw
and
sahf
nop
out
inc
out
jne
mov
add
jp
add
movsb
cmc
mov
shll
bound
push
push
jno
mov
notl
xchg
cmp
cmp
imul
daa
mov
cmp
xor
mov
mov
xor
xchg
dec
rcll
imul
fwait
xchg
mov
stos
xchg
out
inc
inc
fldenv
dec
sbb
mov
popa
aas
lahf
cmp
pop
mov
lret
dec
clc
mov
mov
pop
and
and
in
hlt
mov
push
insl
xchg
cmc
push
mov
in
lret
fdivrs
add
push
addr16
clc
cmpsb
or
adc
sbb
xchg
nop
mov
leave
icebp
jno
fwait
inc
and
adc
push
data16
mov
pusha
sbb
into
xlat
cld
jp
dec
mov
dec
xchg
out
and
inc
cld
push
punpcklwd
xlat
dec
das
jp
std
dec
fcmovne
pop
adc
mov
sbb
gs
enter
xchg
pop
adc
mov
notb
bound
lret
popa
addr16
test
and
dec
sti
test
add
imul
push
adc
popa
mov
adc
incb
iret
sub
pop
stos
lahf
and
imul
xchg
stc
cmp
mov
lods
jmp
ds
iret
push
push
inc
pop
pop
or
and
adc
xchg
inc
aad
pop
mov
xchg
xchg
sbbl
sti
sub
fwait
and
jmp
test
push
sbb
lret
sbb
jbe
sub
enter
sti
outsb
imul
outsb
arpl
xchg
mov
stos
add
or
fldl
mov
or
cmp
push
sbbb
repz
mov
adc
cmp
push
in
int
mov
sahf
push
inc
shrb
mov
or
insl
mov
mov
sub
aaa
cmc
and
xor
jnp
in
ja
xchg
stos
aam
lods
call
test
std
adc
mov
adc
push
adc
test
ljmp
xor
mov
and
mov
sbb
pushf
loop
xor
rorb
sub
adc
inc
hlt
shrl
movsl
pop
hlt
cmp
ljmp
jns
mov
popf
or
mov
inc
enter
jecxz
and
cmp
data16
push
pop
pop
push
mov
dec
inc
push
es
fs
rclb
call
push
out
mov
push
sbb
mov
ret
das
dec
sub
pop
xor
mov
dec
dec
push
sbbb
test
ljmp
cmc
scas
loope
cs
pop
out
ss
loopne
call
mulb
stos
incb
movsb
mov
mov
cmp
inc
addl
or
and
arpl
cmp
push
adc
sbb
mov
inc
adc
pop
cmpsb
scas
add
xchg
xlat
pop
mov
jecxz
cmp
fldcw
stos
fwait
dec
addl
lret
fld
cmp
fldcw
jb
adc
push
iret
push
push
xchg
dec
aad
imul
insl
aam
nop
rcrl
jnp
xor
pop
cmp
mov
mov
popf
sub
add
pop
decb
and
ss
imul
cltd
sarl
call
stos
std
imul
out
fwait
pop
mov
or
inc
insl
mov
dec
sub
in
mov
xchg
or
ret
sbb
mov
jmp
xor
leave
or
lret
insb
xchg
sbb
xor
or
into
mov
cmpsl
aaa
insl
sti
shl
jp
repz
ja
mov
cmova
lea
lock
fstl
shrb
cmpsb
call
icebp
stos
popf
mov
in
push
mov
sbb
mov
adc
pop
fsubrl
lock
jl
iret
rolb
cmc
ret
push
push
out
lea
into
adc
push
xor
or
in
divl
sub
or
sbb
data16
mov
sbb
ljmp
push
sbb
loope
adc
stc
pop
lods
cmp
pop
jge
stc
push
je
fldlg2
push
inc
lods
lea
hlt
pop
add
xor
mov
cmp
mov
cmpb
adcb
fwait
jbe
sbb
leave
clc
jp
dec
fists
and
ja
sub
repz
dec
jp
cmc
lahf
mov
adc
push
or
jno
jb
inc
jecxz
jl
scas
mov
push
sub
stos
shrb
dec
cmpsl
lods
stos
mov
cmp
aad
pop
call
lcall
add
dec
xchg
enter
faddl
pop
shlb
pop
fmuls
pop
pushf
add
mov
pop
cmp
cmpsl
jb
out
shrb
movsl
jecxz
dec
je
rolb
adc
cmp
stc
push
into
aas
dec
fsts
xchg
and
mov
cmc
cmpl
add
cs
push
pop
mov
scas
inc
aaa
mov
jp
mov
rorl
ss
les
jnp
push
sub
dec
lods
and
xorb
into
pop
jns
aaa
jmp
mov
or
daa
mov
push
das
lcall
movsb
and
xchg
adc
test
mov
insl
loopne
scas
push
loopne
test
pop
in
sub
mov
pop
sarl
cmp
out
adc
pop
aam
sub
xchg
push
loopne
xor
jmp
mov
and
imul
pushf
aas
and
aaa
or
jb
stos
test
cmp
lds
aas
sub
outsb
loope
xor
pop
mov
xchg
push
sub
int3
aam
or
push
push
fisubrs
in
psrad
ss
jne
repz
cmp
out
xchg
inc
movsb
fildll
inc
and
jne
add
xchg
jno
movsl
mov
add
in
adc
push
cmp
js
out
cwtl
pop
and
call
mov
movsl
aad
daa
inc
or
cmpsl
cmpb
and
sub
push
mov
mov
xchg
sbb
fcomps
mov
add
cmp
mov
mov
out
jbe
mov
jmp
adc
int3
pop
in
and
cld
loop
ja
pop
je
push
jmp
test
rcl
or
divb
pop
out
push
lods
jae
push
shlb
or
cmpsl
cli
frstor
imull
fwait
mov
jmp
dec
test
out
sbb
mov
sti
jb
std
push
mov
or
mov
iret
sub
adc
andl
andb
je
mov
mov
ret
sbb
decl
aad
or
or
es
lods
je
mov
loope
sbb
aad
std
mov
and
test
or
or
xchg
jle
mov
cmpsb
lret
adc
imulb
imul
xchg
cmpl
out
xor
subb
dec
inc
sub
sbb
in
or
jns
push
cmpb
or
jb
dec
lea
inc
adc
test
in
sub
dec
les
or
inc
fimuls
cmc
and
aas
or
test
sub
fldenv
xchg
mov
dec
sub
in
fidivl
inc
shrb
sub
push
shrl
cmp
sub
jecxz
pop
inc
mov
xor
xor
pop
mov
mov
in
pop
rcr
xchg
mov
xchg
in
mov
xchg
cltd
dec
mov
pop
pop
push
insl
pop
mov
mov
xchg
fsubrl
out
dec
sti
xchg
sub
sub
pop
xor
cmp
sub
sub
push
mov
ss
inc
xor
fwait
mov
jg
xchg
mov
jle
jbe
movsl
pushf
out
mov
inc
jmp
testb
call
jbe
push
in
ret
pop
sar
xor
xchg
jno
loope
jecxz
mov
shll
lds
out
mov
je
and
cmp
int3
rorl
repnz
xor
test
push
inc
std
and
cmp
cmpsb
lahf
stos
and
shlb
or
push
jmp
sysenter
inc
add
xchg
out
in
xchg
bound
mov
lods
lock
cld
jge
adc
mov
mov
jno
ja
pusha
xchg
xchg
xchg
je
fldl2e
adc
mov
push
cmpsb
leave
cmc
ss
and
pusha
mov
pop
inc
dec
push
ja
and
fidivrl
push
sbb
les
add
xor
rol
sub
adc
pop
das
repnz
or
sub
in
cs
mov
jl
xor
mov
test
or
jg
pop
mov
out
sarb
hlt
mov
scas
and
mov
push
sbb
imul
mov
xchg
cmp
sbb
inc
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
ret
xchg
shll
or
bound
repnz
in
or
and
icebp
mov
mov
mov
loope
mov
lret
andb
scas
test
cs
daa
or
xchg
imul
inc
jle
ja
jge
pop
pop
pop
push
dec
cmp
mov
imul
aam
pop
shrl
fadds
add
jne
jo
push
sbb
mov
lret
loopne
pop
add
and
xchg
scas
stos
out
and
int
stos
sahf
addr16
jle
add
and
inc
xchg
sub
mov
push
scas
test
mov
push
fs
or
out
cld
fisttpll
push
repz
xchg
out
pop
adc
jmp
adc
and
adc
nop
xor
adc
enter
ds
or
pop
pop
pop
enter
imul
leave
xchg
addl
push
pop
pop
jnp
or
fldl
cli
sub
mov
pop
movsl
retw
dec
fsubl
add
pop
imul
mov
fidivl
fisubrs
clc
lahf
loope
push
enter
adc
out
dec
jl
pop
mov
dec
lret
add
imul
fcmovu
daa
dec
out
sbb
pushf
imull
adc
loope
jno
fldl
jb
xchg
or
in
inc
sahf
arpl
popa
push
cmp
clc
jae
push
inc
jbe
or
and
or
xchg
pop
inc
xor
push
pop
inc
xchg
clc
shll
stos
mov
daa
bound
mov
push
shrb
stos
or
psrlw
cwtl
outsl
rcll
call
jno
jb
sub
jno
outsl
jge
jne
push
sub
dec
fs
gs
dec
mov
inc
jo,pn
js
popa
mov
sub
je
jae
fildll
xor
pop
orl
mov
xchg
push
int
push
add
lods
mov
jecxz
cmp
in
cmp
repnz
std
out
pop
cmpsl
inc
faddl
push
pop
jl
and
lahf
das
add
call
sub
sub
mov
test
test
call
push
retw
jmp
fcom
insl
mov
dec
xor
cmpsb
sub
test
lods
jmp
xor
repz
rorb
push
int3
outsl
out
and
push
test
ret
stos
cmp
imul
and
dec
js
cs
popf
mov
lds
ret
pop
pop
pushf
test
inc
inc
jmp
xchg
xchg
gs
loop
popa
popf
jg
mov
inc
js
mov
add
push
xchg
loope
pushw
clc
mov
xchg
cmp
mov
shr
mov
stc
xor
cmovle
sbb
sarl
inc
adc
mov
fsubs
cld
cmpsb
fwait
and
sub
pusha
lods
fs
sbb
inc
or
nop
inc
fildll
and
mov
dec
pop
pop
inc
inc
int3
sub
shll
mov
cmpsl
lahf
sub
or
adc
mov
fwait
jmp
xor
pusha
dec
dec
jmp
and
or
call
in
cli
popa
out
sub
or
cmpl
push
daa
mov
ret
mov
sub
ret
sbb
push
sti
jnp
adc
hlt
jnp
fisttpl
pop
hlt
jecxz
sub
lahf
fldt
test
mov
out
xor
scas
shl
sar
les
push
mov
inc
orl
insl
pop
aad
push
notl
popa
push
lods
hlt
xor
push
orl
pop
outsb
sbb
pop
in
xchg
mov
xchg
mov
push
inc
cs
push
jl
iret
mov
frstor
jmp
fldenv
int3
cmpsl
xlat
xor
push
jbe
mov
cmpb
cmpsb
or
cli
lods
aad
cmp
mov
aad
push
sub
mov
jns
addb
add
lods
mov
inc
mov
dec
aam
lcall
loop
test
push
aam
or
les
push
loope
dec
push
in
mov
inc
add
nop
fs
xor
insb
mov
subb
push
fcomip
jns
outsl
inc
rolb
adc
aas
add
outsb
xlat
lcall
and
or
pop
notb
repnz
cli
xchg
shrl
nop
jns
cmp
stc
pop
popf
or
dec
movsb
out
inc
or
loop,pt
cmp
dec
pop
rclb
xchg
mov
imul
dec
pop
popa
xor
mov
cmc
lret
xor
aam
adcl
cmp
inc
cmp
jns
pop
and
jg
xlat
leave
add
rcll
push
xchg
and
jns
std
lods
xchg
pop
fucom
sbb
push
out
sub
lcall
mov
jb
push
xchg
ds
mov
in
icebp
jb
pop
outsb
leave
dec
mov
xchg
outsb
cmpsl
popl
xchg
xor
lods
popf
ret
mov
insb
insb
sbb
or
mov
enter
jae
fisubrs
cmp
xchg
xchg
cltd
cltd
ss
sub
jecxz
xor
jne
mov
mov
in
je
dec
push
lret
xor
mov
lods
adc
cmp
rcrl
lods
cmp
loope
xorb
xor
lret
mov
in
mov
cltd
rcll
push
cltd
outsl
in
test
xor
test
stos
sub
ja
dec
xchg
mov
xchg
push
repz
jo
pop
pop
adc
ret
xor
cmp
xor
in
icebp
push
push
push
jno
je
xlat
push
cmp
mov
and
or
dec
sbb
lret
data16
adc
mov
and
lahf
test
scas
sub
les
push
mov
leave
aad
pop
xor
dec
rcrb
fldenv
scas
inc
dec
fdivs
mov
inc
add
repnz
add
lods
lret
mov
dec
movsl
mov
sbb
shrb
or
das
and
push
mov
push
fwait
xor
repz
mov
add
xchg
mov
bound
dec
xchg
sahf
ret
mov
aas
mov
or
lahf
test
inc
aas
adc
clc
sbb
xor
sub
mov
sbb
jle
negl
add
inc
int
xor
out
pop
fcmovnb
or
cwtl
and
and
inc
xchg
adc
in
adc
mov
xchg
push
xor
add
and
lds
shl
pop
dec
xorl
adc
jl
pop
inc
sar
repnz
hlt
roll
mov
pop
mov
xchg
pop
rorl
adc
sub
xor
insb
sub
or
or
and
mov
incb
addr16
cmpsl
addr16
stos
mov
lds
jae
push
add
push
push
mov
lea
push
movsl
jecxz
push
mov
in
int3
mov
pop
jno
pop
outsl
popa
mov
mov
cmp
jl
out
cmpb
jmp
inc
gs
adc
push
sub
cmpsl
lock
fldl
mov
rcrl
mov
adc
scas
sub
sahf
ret
mov
into
mov
or
sbb
pop
cmpsl
sbb
loop
lock
and
clc
sbb
xor
mov
mov
cmc
mov
mov
stos
jae
xchg
ss
or
lods
and
inc
addr16
mov
test
mov
dec
xor
shlb
cmp
shrb
icebp
cmp
or
cmp
mov
icebp
mov
jno
lret
pop
pop
decb
mov
xchg
inc
repz
das
inc
mov
jae
int
xchg
add
fs
mov
pop
add
xchg
push
lret
add
inc
bsr
mov
out
sbb
out
outsl
hlt
das
jnp
inc
cmp
das
sar
call
ds
mov
cmpsb
mov
inc
loopne
cmp
mov
cltd
scas
and
mov
mov
jle
sti
inc
fxch
push
rol
enter
mov
std
dec
lods
popf
mov
adc
or
mov
dec
ret
rcll
jb
adc
mov
lret
xchg
es
dec
rorb
mov
sti
int
fdivrs
push
jge
sub
add
adc
sets
pop
cmpsl
icebp
add
mov
dec
jae
fisubs
jg
pop
push
sub
ljmp
insl
sbb
jbe
cld
push
sub
push
inc
or
cmp
adc
ret
into
or
mov
sbb
and
adc
fs
insb
add
sub
enter
push
mov
aam
fwait
or
pushf
xor
xor
mov
or
mov
mov
cmp
int3
arpl
sbb
gs
out
adc
push
cmp
cmp
jns
fcomp
call
mov
cmc
ror
or
add
xor
addb
or
push
push
dec
xchg
xor
adc
mov
ss
and
cmc
xchg
xchg
out
cs
iret
cmp
cmp
aas
ljmp
ljmp
les
xchg
dec
or
sub
cmp
lods
inc
and
roll
lahf
lret
hlt
xchg
inc
push
out
mov
aad
jnp
lahf
and
ret
insl
scas
mov
fst
push
adc
sbb
in
sub
outsl
xchg
mov
lds
ljmp
test
mov
mov
fdivrs
cmc
cld
pop
or
sarb
addr16
adc
faddp
adc
adc
sub
gs
icebp
stos
aam
fmull
mov
ficompl
iret
imul
repz
sbb
enter
adc
ret
fmull
aas
jbe
imul
push
shrb
mov
push
data16
cmp
dec
or
pop
mov
test
sbbb
test
aaa
fwait
popa
fwait
jne
push
clc
xchg
and
shlb
fcompl
and
imul
dec
mov
cmp
adc
push
stc
fwait
scas
ja
sub
out
popf
sbb
in
icebp
xor
rolb
push
jbe
adc
inc
mov
or
xor
clc
sub
or
push
jge
sti
add
dec
mov
adc
mov
flds
loop
test
mov
addr16
lods
inc
sbb
cmpsb
cs
arpl
rcrb
movsb
cmpsb
cmp
mov
lret
out
xchg
daa
dec
adc
or
fnstsw
cwtl
int
orl
push
push
fwait
push
mov
jg
imul
mov
pop
das
mov
outsl
lcall
test
gs
sahf
into
and
inc
clc
stc
xchg
sbb
addl
add
cmc
mov
mov
addr16
in
mov
push
push
push
mov
push
push
fiadds
fists
pop
in
add
enter
psubusw
lods
pop
xor
push
add
or
ja
es
xchg
cmc
insl
inc
cmp
jge
outsb
mov
sbb
dec
push
movsl
add
cmp
mov
out
sbb
ret
mov
mov
sbb
icebp
lods
dec
out
inc
into
iret
mov
xlat
je
pop
cmp
xchg
jp
xor
je
dec
les
in
sbb
aad
leave
cwtl
pop
push
mov
pop
and
subb
add
mov
cli
idivl
aas
out
scas
aaa
jmp
mov
xchg
iret
test
jge
push
xchg
dec
inc
in
cltd
inc
or
fwait
addr16
out
jle
stos
push
mov
dec
fstps
outsl
lret
addb
jl
stos
movsl
mov
shll
insb
ljmp
push
xchg
ret
cltd
in
jmp
insb
mov
pusha
push
pop
es
loop
jno
dec
fbstp
sbb
fadds
jg
lods
push
pop
insl
les
jmp
or
add
aaa
test
fistps
je
push
xor
jg
loopne
rcrl
lret
movsl
mov
movsb
mov
push
xor
sub
adc
xor
testl
jle
jns
test
int3
les
jb
iret
sub
in
cltd
aam
push
mov
fwait
lds
push
loope
cltd
sbb
fcmovnu
imul
push
enter
pop
imul
lds
push
xchg
mov
mov
mov
xchg
adc
in
mov
fidivs
jp
fwait
leave
push
push
jbe
xchg
jb
jge
filds
jo
rcrl
push
mov
mov
int3
push
std
adc
fwait
xor
push
xor
hlt
jge
xchg
add
ja
enter
xlat
mov
add
mov
out
aas
jmp
pop
sysexit
movsb
xchg
mov
push
push
int3
fwait
or
popf
ds
insl
popa
mov
addl
fucomi
sbb
pop
shrb
mov
cli
jb
jb
cmp
mov
pop
lods
outsb
cltd
mov
xchg
sahf
cwtl
mov
lock
lcall
dec
dec
mov
popf
inc
dec
rcrl
fstpt
mov
push
jnp
xchg
push
mov
filds
pop
rcrb
sbb
dec
mov
push
jbe
mov
add
in
pop
subb
xlat
sub
mov
aad
pop
dec
adc
xchg
cli
loope
aad
mov
nop
add
add
pop
movb
pop
ret
fdiv
mov
sub
jmp
rorb
adc
repnz
cmpsb
inc
mov
aas
jle
and
xchg
jecxz
dec
rorb
pusha
lods
fiadds
jmp
sub
fcmovnbe
dec
inc
lcall
sti
stc
push
cli
outsb
push
xchg
mov
xor
aaa
ss
sub
fdivs
aas
sub
clc
rorl
dec
mov
cmp
xor
push
imul
cmp
inc
sub
or
xor
mov
pop
pushf
and
add
arpl
xchg
mov
lahf
or
xchg
std
int
mov
cwtl
inc
jle
shr
push
xor
cmpsb
jmp
mov
fidivrs
aam
mov
adc
or
inc
mov
cmp
inc
into
mov
enter
adc
inc
or
push
cld
addb
xchg
jge
inc
inc
ret
ljmp
lret
fnstenv
add
dec
bnd
fidivrl
pushf
sahf
je
mov
push
js
sub
sbb
mov
neg
fmuls
orb
mov
ja
neg
lods
aas
popf
or
dec
rorb
ds
fcomi
into
inc
jmp
iretw
lret
adc
push
repz
je
sbb
pop
insb
loop
xchg
dec
scas
or
jns
repz
adc
imul
rolb
mov
add
ficoml
cmp
xor
xchg
xor
insl
inc
pop
pop
sbb
xor
subl
push
inc
popf
test
push
jge
sbb
mov
or
mov
add
add
mov
dec
mov
mov
repnz
cmpsl
pop
jno
call
filds
dec
loope
aad
bound
dec
stc
in
pusha
lcall
rorl
stc
movsb
inc
fldt
test
xchg
cmp
adc
or
imul
or
popl
mov
negl
mov
mov
ljmp
mov
test
rorb
mov
mov
jge
test
sub
shrl
stos
iret
sub
add
imul
in
sub
mov
lcall
popf
push
pop
shrl
in
int3
mov
push
mov
lahf
int
ja
shr
mov
jbe
dec
and
cmp
xchg
scas
jge
ret
movups
cmp
mov
cmpsl
cmpsl
fisubs
insl
lods
inc
pop
insb
ss
inc
daa
and
ds
xor
pop
jbe
jg
fwait
mov
shlb
enter
mov
bswap
add
shll
fmul
test
repz
sbb
jns
mov
in
xor
imul
cmp
xor
xchg
incb
adc
negb
lock
mov
cmc
push
pop
in
imul
xchg
testl
sub
or
jp
rclb
push
int3
mov
adc
sub
insb
jno
aam
icebp
loope
int3
repz
lods
dec
cld
popl
mov
inc
pop
xor
add
mov
cmp
negl
sub
sub
xchg
je
push
cmpsb
mov
js
clc
leave
mov
adc
in
and
pop
loop
sub
lret
icebp
cmp
shl
dec
mov
pop
cmp
cmp
lcall
cltd
mov
xchg
aaa
xchg
mov
mov
popa
mov
sub
mov
push
fsubrl
ret
mov
popf
xor
movsb
movb
cli
pop
sarb
xchg
pop
cmpsl
scas
js
fisubs
cmp
add
push
mov
and
jp
cmc
sub
xchg
pop
aam
mov
push
aas
inc
jae
push
mov
out
or
ss
add
xor
dec
nop
xchg
jbe
popf
mov
in
xchg
adc
sbb
lds
lcall
imul
and
cmc
daa
icebp
cmp
popf
jbe
sub
leave
leave
adc
adc
adc
sub
ret
mov
imul
add
filds
adc
mov
pop
mov
jle
dec
or
push
fwait
cltd
nop
shlb
popl
leave
lret
dec
fnstsw
imul
xor
cmpsl
pop
insb
or
negb
and
mov
jne
stc
and
add
push
add
lret
sahf
pop
cmp
pop
fdivr
icebp
xchg
or
decl
xchg
test
sbb
ja
scas
xlat
repz
divl
sbb
in
xchg
jbe
xor
cs
adc
sbb
repz
lcall
in
mov
mov
jge
jns
push
pop
inc
fnstenv
lods
xchg
xchg
xor
adc
jne
pushf
insl
sbb
xor
cmp
es
imul
push
cmp
dec
in
pop
cmpsl
cmp
aaa
push
fwait
jne
loope
stos
fisttpll
std
in
sbb
mov
out
sub
arpl
pop
addr16
enter
ja
sbb
leave
fs
jle
std
mov
fldl2t
imul
or
js
je
dec
ljmp
aad
adc
adc
xchg
pop
iret
mov
push
sub
xchg
lret
cltd
xor
inc
roll
lock
cmp
cmp
jns
xchg
adcb
pusha
push
jmp
sub
call
mov
or
loope
or
or
test
push
mov
lea
sbb
sahf
clc
fdivs
jl
fsubrl
or
mov
out
push
pop
lds
sbb
imul
sub
test
ja
push
mov
stos
xor
mov
pop
test
pop
lock
test
jae
fdivl
arpl
pop
inc
add
jecxz
xchg
mov
pop
inc
outsl
pop
aam
hlt
scas
incb
push
cltd
xorl
popa
in
out
stos
inc
in
xchg
loope
mov
fsubr
fmulp
pusha
mov
push
pop
gs
inc
jne
les
push
xorl
lret
cmp
jmp
jne
shrb
cld
jbe
push
subb
popf
jns
lret
dec
adc
push
call
fstp
dec
adc
jmp
mov
sub
out
test
jb
mov
xlat
jbe
lret
xchg
pushf
mov
mov
lret
xchg
sbb
xchg
sub
and
jns
mov
mov
mov
fmul
mov
mov
cmp
adc
pop
sub
cmpsb
loop
add
add
out
or
insl
subb
and
bnd
mov
or
mov
or
inc
fwait
xor
xchg
sub
pop
mov
cmp
pop
inc
push
insl
xchg
daa
push
jp
jo
xor
rdpmc
call
mov
xchg
out
xlat
popf
test
les
add
add
dec
push
cmp
sbb
jecxz
and
xor
jp
loop
imul
shlb
movsl
jae
scas
orl
cltd
mov
bound
cld
sbb
adc
pop
test
mov
pop
add
push
inc
pop
dec
xchg
mov
dec
sub
test
mov
sbb
enter
shrd
fstl
mov
shll
jb
xchg
inc
mov
sub
mov
xor
adc
loope
adc
movsb
fsubrp
rcll
das
push
lds
mov
inc
xchg
mov
aas
icebp
repz
push
jne
inc
stos
jmp
lret
mov
into
aas
inc
sub
push
jb
scas
xlat
sub
lods
mov
cld
stos
dec
fstpt
shlb
fcmove
dec
ret
mov
call
or
lahf
push
xchg
gs
mov
inc
in
es
and
push
mov
dec
lret
mov
cld
pop
pop
adc
mov
inc
cltd
pusha
or
xor
movsb
push
nop
cmp
pop
int
pop
and
cmp
and
aas
and
iret
or
js
pop
std
push
ljmp
out
ret
lret
clc
js
aad
in
test
xor
mov
and
out
sub
dec
cld
push
xchg
stc
test
xor
mov
and
adc
cmp
mov
push
test
pop
stos
test
push
nop
ja
icebp
rolb
clc
in
jbe
lock
stos
insl
pop
cld
xor
ja
jp
cli
imul
enter
mov
aaa
pop
sbbl
pop
mov
clc
nop
cmp
aam
fisttps
stc
shr
mov
lahf
ffree
xchg
ja
lahf
negb
imulb
ss
call
xchg
mov
aad
jmp
mov
popa
add
pushf
push
stos
fisubrs
cwtl
daa
inc
pop
sbb
int
xor
jns
jmp
aam
mov
arpl
xor
sub
mov
jns
push
or
push
aas
scas
xchg
adc
cmp
add
fsubr
dec
lock
mov
pop
sahf
mov
addr16
push
or
inc
les
push
cmp
xchg
sarl
xor
xor
mov
cli
mov
inc
dec
sub
test
mov
rcr
add
sbb
scas
out
js
loopne
jbe
test
out
sbb
jecxz
add
shll
push
outsl
outsb
jae,pt
pop
notl
in
int
cmp
mov
push
lahf
dec
jae
xor
cmp
pop
call
aaa
jo
and
jae
nop
icebp
test
mov
and
inc
xlat
imul
into
or
les
cmp
add
mov
push
lds
fistps
mov
dec
js
mov
sbb
out
dec
xchg
push
std
adc
insl
sbb
ljmp
fisubl
cld
sbb
data16
sub
pusha
cmpl
icebp
sub
ret
adcb
sbb
test
cmp
pop
repz
cwtl
mov
jo
push
stos
fwait
inc
fbstp
pop
xor
out
lock
or
cmp
and
repnz
repz
mov
jle
inc
sbb
adc
idivb
jl
pop
push
adc
ret
enter
jp
pop
inc
popf
inc
jae
int3
nop
or
repz
cmp
or
int3
cwtl
jnp
je
xchg
sbb
outsl
inc
mov
inc
push
add
xchg
jnp
jno
xchg
in
sbb
sbb
jae
lret
or
in
and
adc
in
jmp
mov
and
sbb
es
push
pop
loope
loope
out
aas
jl
test
mov
sub
lods
stc
cmp
rorb
leave
mov
cmc
insl
dec
dec
sub
stos
sbb
pop
les
fisubrl
idiv
sub
lret
jl
adc
xchg
jl
rolb
xchg
out
notl
out
fidivrs
int3
or
push
dec
mov
mov
add
das
jg
cmp
dec
or
inc
inc
or
iret
icebp
sub
xchg
push
xor
repz
mov
sahf
and
add
mov
add
movsb
cwtl
adc
cmc
lds
mov
adc
out
inc
stos
or
cltd
dec
repz
jge
shll
ficoms
xlat
fsubrs
cli
nop
push
inc
popf
sbb
inc
xchg
mov
icebp
scas
and
and
ret
mov
pushf
enter
mov
jbe
cwtl
mov
jbe
rorb
sbb
mov
lock
lods
jecxz
dec
inc
sub
shrl
lcall
and
xchg
rcrb
push
in
and
mov
jle
xchg
pusha
clc
aaa
add
test
or
adc
iret
es
punpckhbw
lret
or
jbe
push
mov
loopne
test
mov
call
jp
mov
in
dec
iret
xchg
jl
cmpsb
push
outsl
and
or
aad
outsb
fldt
sbb
fcmovnb
adc
or
shll
insl
addb
rolb
sbb
jno
leave
mov
adc
cld
cmp
sub
mov
adc
add
das
jl
cmp
xsha1
cmpsb
lret
adc
xor
scas
imul
out
inc
fldenv
or
mulb
cmpsl
mov
out
arpl
pop
mov
pop
inc
cmp
das
addr16
mov
xor
push
sub
hlt
or
dec
lret
fidivl
stc
mov
cmp
les
loope
mov
fs
nop
cmp
pop
imul
insb
fisttps
out
mov
inc
pop
jo
cld
push
adc
jecxz
das
mov
pop
iret
and
jmp
sub
cmp
push
or
push
mov
jne
mov
iret
ret
or
notb
arpl
and
es
lret
in
loopne
arpl
loopne
mov
ljmp
sub
dec
push
sub
adc
out
rclb
xorl
inc
add
dec
pushf
jge
mov
push
fstl
or
cltd
cs
popw
inc
sbb
dec
sub
lahf
fisubs
outsb
add
movsl
lcall
adc
lea
rcl
cmp
or
inc
sub
cmp
call
mov
mov
ret
or
fs
add
dec
xor
sarb
scas
xor
sub
mov
adc
data16
shr
rol
shl
push
jge
lea
movl
cs
aaa
movsl
sub
mov
xor
cmp
ds
sub
fwait
out
fcmovnb
stc
sbb
dec
pusha
dec
dec
sarb
inc
movsl
and
in
jo
mov
movsl
push
mov
pop
lods
stos
scas
fwait
daa
out
out
popf
mov
sub
add
sbb
jl
dec
rorl
ror
inc
ficoml
ljmp
xchg
sbb
and
cwtl
dec
arpl
stos
jns
int
xlat
scas
and
stos
out
pop
pop
push
inc
test
jge
xlat
and
adc
addr16
mov
xor
incb
adc
jne
cmp
mov
sub
pop
xchg
in
mov
popf
push
pop
hlt
fs
lahf
cmc
dec
lret
aas
adc
in
xorb
lcall
in
sub
mov
lock
push
jno
out
cmc
mov
movsl
fucom
mov
dec
adc
sub
jbe
push
mov
or
or
xchg
sbb
clc
mov
sub
xchg
dec
jl
sub
mov
dec
sbb
int
push
mov
out
dec
mov
mov
test
ss
rorb
sarb
dec
xlat
scas
dec
jnp
mov
or
mov
iret
sbb
jae
call
inc
sub
jp
cmp
cmc
in
stos
icebp
movsl
jb
orb
iret
mov
mov
push
cmpsl
pushf
into
xchg
pusha
sbb
mov
lahf
and
stos
repz
xor
ds
or
xchg
lods
mov
inc
in
or
loop
inc
or
icebp
pop
sub
cmp
sub
ror
cltd
pop
ljmp
mov
sbb
daa
ficoms
push
mov
xchg
ja
lods
pop
mov
dec
imul
cmpsb
jmp
les
jno
lahf
popf
pop
loope
imul
repnz
xor
enter
jb
call
movsl
pop
call
and
outsl
flds
arpl
dec
outsb
cwtl
test
or
cmpsb
repz
jnp
push
dec
mov
push
or
hlt
mov
cmpsb
pop
xor
add
lods
lods
pop
pop
sti
leave
cmp
lea
arpl
sbb
aaa
sub
add
pop
inc
divb
mov
in
or
mov
in
int
sahf
xor
jge
dec
jns
ret
mov
mov
xchg
cs
sbb
pop
outsb
or
xorb
cli
pop
movsl
bt
pop
adc
sub
cld
mov
add
push
add
xchg
cwtl
dec
jae
mov
add
inc
sub
or
xchg
out
and
and
int3
and
cltd
out
andb
and
stos
sarb
mov
imul
subb
push
ja
sbb
mov
mov
sbbl
mov
sbb
cmp
cmp
and
mov
shll
mov
pop
adc
fldl
lahf
out
pop
mov
pop
mov
mov
mov
in
aam
outsb
jg
pop
push
push
divb
xor
int3
test
jmp
add
dec
lret
sbbw
js
jp
sub
sub
stos
sub
shl
jmp
mov
mov
inc
fstl
mov
ljmp
clc
add
sbb
pop
das
mov
repnz
sbb
mov
add
lret
dec
jb
mov
push
pop
adc
call
int3
int
add
insb
pop
cld
loop
fwait
sarb
movsb
cmp
or
std
iret
or
or
inc
aam
sahf
imul
cmp
nop
push
stc
cltd
cld
lret
repz
push
ds
dec
mov
mov
dec
scas
push
cmc
xchg
ficoml
out
pop
repnz
lods
xchg
pop
lret
daa
enter
loopne
cmp
leave
sbb
cltd
jb
inc
xchg
pop
outsb
xchg
and
test
cmpsl
push
loopne
jno
jne
xor
and
in
sub
sti
mov
push
mov
lret
jno
popf
into
mov
mov
add
gs
mov
or
in
mov
in
xchg
cmp
dec
adc
sbb
and
inc
push
fsubl
mov
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
push
mov
or
bound
sbb
in
dec
cmp
ret
cmpsl
fwait
add
mov
icebp
and
add
or
xchg
dec
xchg
lock
jnp
sbb
sbb
jne
and
imul
sub
mov
mov
stc
mov
int3
pop
xchg
sub
movsb
mov
mov
mov
jo
sahf
xlat
fimull
xchg
push
int3
shlb
or
clc
cwtl
xor
sbb
mov
push
in
es
fs
fldcw
xlat
imul
jo
inc
addr16
fcmove
pushf
mov
mov
xor
mov
lock
leave
add
add
mov
addr16
loope
insb
pusha
xor
mov
std
addl
or
pop
sub
stos
imul
push
test
lcall
add
xor
outsb
shlb
scas
add
xchg
inc
mov
popf
jns
mov
sub
adc
inc
test
jecxz
outsb
pop
xor
xchg
stos
jne
mov
xor
sub
popf
sub
dec
pop
jb
cmpsl
fadds
repnz
subb
dec
jecxz
scas
pop
shll
adc
enter
and
ss
mov
inc
jne
mov
ja
inc
jno
add
pop
in
mov
xor
ss
sub
sub
sub
sub
and
inc
jmp
pop
dec
mov
fldenv
and
out
lcall
hlt
or
out
fidivl
pop
mov
cmp
jge
js,pt
fwait
inc
rolb
inc
push
jns
pop
clc
inc
fdivrs
cmp
push
fdivs
add
xchg
push
in
fdivrp
das
sub
sub
mov
sarl
mov
lods
cmp
js
sbb
andl
in
dec
lret
or
cmp
mov
lret
mov
hlt
in
in
xor
xchg
push
out
and
ret
mov
cmpsl
pop
or
mov
insb
fldl
push
fxch
sub
mov
push
push
ret
dec
pusha
cmp
std
into
add
popf
push
push
clc
je
sbb
adc
repz
xchg
insl
jb
pop
je
and
xor
add
icebp
in
mov
ret
test
mov
gs
outsb
push
inc
ljmp
adc
xchg
mov
or
pop
xchg
mov
repz
mov
mov
sub
cli
test
xor
bound
das
leave
cmp
cltd
xchg
inc
shlb
add
push
clc
loope
dec
sub
cmp
or
ret
mov
iret
push
mov
dec
sbb
in
loop
sbb
cwtl
or
or
inc
cli
repz
test
sub
jle
push
pop
and
les
dec
or
xor
mov
fdivl
leave
xchg
jl
cltd
aam
push
mov
xchg
inc
rcrb
loopne
jns
shl
or
inc
push
cmpsl
test
sahf
dec
xor
jl
sub
or
and
test
gs
mov
sub
fisubrs
mov
mov
arpl
adcl
push
scas
lret
or
add
das
enter
mov
imul
and
xor
pop
in
or
dec
xor
shl
xorb
mov
mov
out
pop
lea
out
sub
cmp
hlt
or
stos
push
pop
or
scas
xchg
test
lahf
pop
fisubl
xchg
fs
and
outsl
xchg
ds
jns
mov
jno
pop
cmp
out
or
jge
out
nop
inc
dec
aam
push
lahf
test
pop
inc
shr
pop
into
dec
add
or
loop
in
or
fisubs
cwtl
pop
adcb
hlt
adc
cmp
aas
pusha
mov
fisttpl
inc
cwtl
sbb
aam
mov
xor
je
bound
outsb
imul
xchg
nop
ret
xor
inc
dec
cmp
dec
cmp
sti
lcall
fwait
xor
nop
and
test
fdivs
add
push
std
cltd
out
sub
mov
popa
or
inc
push
pop
ficoml
aaa
mov
push
push
int3
cmpsl
repnz
cmpsl
xchg
or
sbb
in
xchg
push
rclb
jae
and
ljmp
jae
aaa
cltd
loope
in
jbe
cmp
ss
enter
mov
inc
adcb
fs
fsubl
je
mov
pop
call
dec
into
nop
fcomp
test
stos
shll
jmp
cwtl
in
hlt
cli
sub
mov
jl
pushf
mov
stc
das
lahf
mov
adc
and
jne
add
fistl
ret
and
bnd
and
mov
aas
jns
mov
sar
push
insb
test
add
cmp
xorb
lcall
or
or
stos
popf
pop
movsl
cmp
mov
xor
fisttps
popa
fidivrs
in
outsl
sahf
clc
lds
adc
popf
inc
and
stc
push
lcall
lods
xchg
sbb
cmpsl
jp
gs
cmp
inc
fcoms
sub
hlt
mov
xchg
xchg
adc
mov
lret
js
mov
adc
dec
and
repz
xchg
cmpsl
faddl
outsb
push
mov
stc
cmpl
mull
sub
fwait
or
jl
push
sbb
mov
mov
mov
add
std
sub
test
movsb
cmp
negb
xor
cmp
push
es
pop
inc
adc
and
jge
mov
dec
jmp
rcrb
shlb
mov
inc
inc
sbb
pop
into
fmuls
test
and
inc
mov
fcoms
mov
jg
inc
jmp
or
or
cmpsb
mov
jmp
repnz
or
icebp
out
fisttpll
dec
xchg
mov
insl
mov
fadd
in
push
add
xlat
in
sbb
dec
sub
and
mov
push
push
push
mov
adc
cmpl
cmc
mov
add
fbld
ljmp
adc
push
pop
cmp
push
fucompp
pop
dec
repnz
test
das
rorb
mov
cltd
aas
adc
inc
pop
adcb
enter
jne
sub
mov
and
mov
dec
or
loope
rol
mov
xor
movsl
out
lods
sbb
push
xor
pop
jp
adc
lds
push
daa
cmp
adc
nop
sbb
jmp
outsb
movsl
add
cs
dec
mov
imul
sarl
shr
iret
pop
sahf
add
aam
popf
and
pop
sti
push
imul
scas
mull
insl
movsb
das
and
and
aam
push
int3
push
test
shlb
lods
fsubrp
mov
jecxz
and
fmuls
add
fwait
test
pop
dec
sbb
clc
enter
cmp
and
mov
movsl
sub
sti
fbld
jbe
add
jge
orps
mov
sahf
push
cmp
sub
adc
test
std
outsl
cs
out
push
fwait
cltd
repnz
dec
xor
into
sbb
mov
clc
les
outsb
into
lret
dec
mov
mov
clc
mov
aas
enter
xlat
das
jmp
iret
das
sbb
aam
sub
imul
out
cmp
mov
mov
clc
inc
insl
pop
loope
sub
pop
movsl
xorl
ret
les
lahf
rcrb
jp
sbb
mov
leave
in
jne
jb
jg
fstpt
outsl
mov
and
push
in
jns
movl
mov
out
mov
sub
xchg
iret
pop
ret
pop
imul
dec
outsb
jecxz
jno
or
and
jnp
sti
mov
add
cmpsw
mov
dec
loope
aad
xchg
repz
cmp
inc
std
stos
mov
cmp
cmovne
cmp
jns
je
movsl
mov
shll
pushf
cwtl
xor
push
cltd
cld
lods
mov
mov
xchg
dec
adc
gs
in
mov
test
mov
pop
aaa
loop
dec
mov
sub
inc
cmp
rclb
sub
pop
add
inc
leave
jg
dec
xchg
out
jge
mov
ljmp
push
inc
stos
out
xor
aaa
test
mov
mov
jbe
sahf
rolb
pusha
inc
aaa
fsubl
mov
adc
sbb
je
xor
pop
jo
inc
push
loopne
test
mov
iret
jmp
adc
inc
xor
mov
sub
xchg
push
push
cmp
sbb
push
jns
sbb
and
sub
lods
dec
cmpsl
and
lock
movsl
out
sbb
pusha
fsubp
bound
xchg
pop
cli
orb
cs
push
movsb
jg
push
mov
mov
inc
mov
xlat
cmpb
leave
mov
leave
clc
sbb
std
jae
jp
dec
xchg
push
inc
jno
jmp
std
imul
outsb
je
push
dec
push
jmp
adcl
or
jmp
or
fstps
pop
or
mov
sarl
mov
lds
loop
inc
push
icebp
mulb
call
pusha
add
sub
sarl
pop
inc
dec
ror
sub
arpl
call
rol
add
jecxz
pop
notb
sarb
ret
sbb
inc
negl
pop
sbb
dec
dec
mov
movsb
adc
xor
or
call
xor
sbb
pop
scas
cs
fisubl
push
sub
adc
push
stos
pop
mov
mov
imulb
insb
sbb
pop
mov
xchg
lods
inc
or
add
sbb
or
jb
push
js
jl
sub
add
in
mov
lock
pop
mov
js
scas
mov
out
lods
pop
clc
jbe
mov
faddl
es
pop
sub
daa
push
inc
cmpsb
sub
fs
xor
ret
cmc
sub
cld
dec
xchg
and
repz
ds
sbb
out
repnz
cwtl
xchg
sub
inc
lock
add
repz
xchg
push
test
pop
les
push
lret
in
pop
sarl
adc
add
push
cmp
lcall
push
cmp
fmuls
lret
repnz
mov
sub
xchg
popf
adcl
cmp
sbb
scas
ret
inc
je
in
cmp
jle
jbe
sub
mov
pop
loopne
push
ljmp
cs
adc
push
jnp
hlt
sbb
sbb
mov
fldcw
int
jle
test
push
imul
insl
and
xchg
and
mov
adc
push
scas
xchg
sarb
mov
or
loope
lods
inc
sbb
and
push
lods
outsl
out
mov
jecxz
scas
cltd
into
popa
lcall
test
xchg
adc
jmp
rol
jge
popl
or
jmp
and
lods
sub
divl
clc
xor
inc
mov
lcall
mov
jae
mov
xchg
arpl
lock
scas
jp
lcall
pop
jle
pop
and
mov
or
xor
xor
or
test
gs
pop
andb
dec
and
jle
adc
xchg
loop
jne
mov
mov
lahf
fdivl
popa
test
jne
ds
inc
push
popf
xchg
mov
lcall
xchg
stos
icebp
mov
sub
fdivp
loope
outsb
data16
mov
or
or
mov
fldenv
push
leave
pop
dec
inc
jecxz
iret
popa
or
std
jnp
mov
std
test
jmp
ss
arpl
addr16
adc
js
mov
in
and
in
packssdw
and
stos
pop
xchg
inc
ficompl
adc
rcrl
mov
or
hlt
cmp
mov
stc
lcall
jle
mov
leave
addr16
cmpsb
or
xorb
push
adc
mov
and
jle
sub
mov
sub
in
dec
and
movsl
arpl
adc
mov
jg
dec
sub
sub
xor
sar
aaa
jae
cmpsb
out
sbb
loopne
cmp
or
cmp
int3
xorb
popl
mov
sbb
dec
in
fldl
mov
ds
and
mov
mov
aam
cmp
xor
inc
inc
add
lea
jge
sbb
xor
pop
cmp
pop
push
repz
loope
cmp
mov
in
ficoml
imul
insb
mov
xchg
inc
jg
negb
add
aaa
mov
dec
inc
push
loope
lods
xor
jg
xor
rorl
jp
or
push
adc
jmp
iret
jmp
push
push
adc
repnz
mov
test
sahf
fs
pop
cmpsb
xlat
std
cmp
in
fs
and
or
popf
jno
roll
sar
scas
xchg
pop
jnp
sti
dec
mov
stc
adc
mov
add
inc
mov
in
std
jae
adc
or
pop
out
shlb
mov
sbb
lahf
test
mov
clc
inc
inc
pop
in
mov
fmul
add
xor
in
aam
mov
fs
out
mov
in
lds
xchg
incb
scas
repnz
enter
in
and
jno
incl
mov
adc
shl
add
sbb
int
test
cli
inc
mov
pop
sbb
mov
xor
out
test
add
mov
leave
mov
popa
cmp
mov
test
outsb
mov
pop
repnz
push
add
insl
std
push
fadds
xor
lcall
or
sub
mov
sbbb
xor
dec
mov
fwait
pop
jae
pop
jns
jnp
test
and
cmpsl
sbb
imul
or
pop
cmp
fildl
mov
shrl
testl
xor
xor
ljmp
shlb
xor
imul
mov
adc
mov
cwtl
imul
andb
mov
inc
test
lods
inc
das
cli
sub
test
shrl
push
lds
inc
push
fcoms
xor
fs
push
xchg
jbe
out
popa
add
lret
sub
and
jl
cvttps2pi
leave
adc
add
out
inc
xlat
inc
push
lock
cmp
mov
inc
shrl
jl
test
jnp
aaa
add
ret
pop
jbe
in
cld
pushf
movsl
icebp
cmp
cmp
ljmp
fnstenv
xchg
jo
sbb
mov
loopne
jmp
insb
inc
mov
fsubr
nop
push
out
jp
xor
push
mov
ficoms
add
stos
push
test
out
adc
sbb
lcall
adc
mov
rcll
sbb
add
inc
xchg
push
fimuls
js
xor
xchg
xchg
dec
or
add
jecxz
jle
arpl
push
xor
jae
lahf
cltd
pop
or
push
inc
xor
pop
popf
jp
inc
std
lea
popf
pop
out
leave
sti
sbb
in
fdivl
add
mov
mov
jne
js
mov
xchg
cltd
test
pop
or
mov
adc
adc
pop
xor
loop
rorb
lret
push
push
test
push
push
cmp
int
add
push
jp
xchg
push
out
fadds
xchg
mov
iret
fistpll
mov
out
cld
fbld
inc
cltd
mov
daa
movsb
cltd
mov
xor
jg
in
cmp
les
jnp
inc
pop
xchg
hlt
cwtl
pop
cld
subl
repnz
jl
clc
in
push
push
sub
or
mov
subl
cmp
add
or
lret
mov
repz
inc
push
pop
test
loop
insb
mov
mov
fwait
aam
mov
jl
push
lret
push
xchg
shl
mov
subl
pushl
sub
jns
pushf
mov
jne
cmp
decl
loop
jecxz
inc
mov
xlat
mov
pop
mov
pushf
lea
jnp
ror
jmp
into
arpl
jg
xchg
je
mov
cmpsb
push
mov
stos
mov
jns
sbb
lret
pushf
lods
jle
out
mov
mov
xor
jg
testb
inc
test
jb,pt
and
fcoml
testl
and
mov
push
fs
xlat
and
sbb
fstl
adc
lcall
arpl
push
mov
arpl
dec
dec
insb
adc
movsb
xchg
cmp
jmp
fucomi
mov
cmpb
outsb
add
hlt
mov
xchg
stc
scas
in
dec
mov
imul
clc
testl
loope
dec
cmpsl
jne
pusha
mov
mov
xor
rcrb
pop
inc
dec
adc
popf
cli
lock
mov
fldl
add
pop
jle
push
loope
push
aaa
jne
adc
or
loope
ja
add
clc
int3
loop
insl
and
int3
in
xor
imul
or
xor
ds
mov
jg
cmp
test
sub
test
xchg
jno
fsubr
jmp
cmp
or
fcom
mov
les
push
pop
in
fsubs
test
inc
pop
int3
aad
in
sub
mov
adc
pop
cmp
imul
or
mov
pushf
jp
add
daa
pop
add
shr
mov
fsubrs
adc
dec
pop
mov
and
push
pusha
scas
xchg
es
cmp
sbb
test
xchg
add
and
sahf
sbb
push
add
push
push
or
notb
ds
mov
fwait
jo
ud0
jb
push
sbb
jae
hlt
jle
mov
je
in
aad
xchg
aas
push
and
scas
aad
hlt
cltd
shlb
adc
aaa
and
xor
xchg
jo
pop
mov
mov
jo
cmp
cmp
mov
sbb
sub
mov
pop
xchg
or
xor
bound
sub
xor
sbb
stos
xchg
cmc
lret
shlb
xchg
push
cmc
les
jnp
dec
push
mov
movlps
mov
sub
sbb
ljmp
xchg
dec
sub
mulb
or
dec
xor
pop
mov
repnz
dec
push
icebp
adc
dec
scas
xor
or
or
xchg
shrd
ficomps
ljmp
inc
icebp
sbb
push
ret
insb
shll
shlb
shrb
cmpb
in
push
xor
push
pop
loop
lahf
cltd
pop
sub
popa
sub
scas
xchg
jmp
push
loope
ret
movsl
loopne
cli
sar
ret
pop
std
and
dec
cmp
test
call
fsubrl
add
inc
lahf
xchg
jo
xor
inc
movsl
sub
or
fisubs
add
push
mov
rorb
push
repz
mov
out
xor
int
ss
xor
pushf
pop
lret
loop
lret
aad
xchg
jo
clc
push
popa
fadd
push
xchg
movsl
mov
jmp
dec
cmp
arpl
inc
mov
inc
out
adc
mov
adc
pop
imul
aaa
mov
fsubp
jo
out
jno
mov
loope
int3
ljmp
mov
int3
sbb
std
or
outsb
pop
out
push
out
jo
pop
addr16
push
dec
negl
scas
stc
cmp
sti
aaa
xchg
jo
into
loop
jno
sbb
jp
movsb
mov
mov
mov
call
jecxz
pushw
addr16
imul
std
and
lret
popa
hlt
outsl
pop
out
mov
out
jo
pop
jbe
insb
adc
or
rcll
xchg
cmp
clc
lret
jge
andl
ja
dec
and
add
out
imul
stos
sub
mov
repnz
mov
mov
xchg
mov
sarl
cmp
cmpsl
clc
loope
mov
mov
ds
adcl
and
mov
repz
xor
aad
ljmp
cmp
cmp
pop
rol
or
cmp
sbb
xchg
insb
movsl
jbe
adc
popa
mov
cmp
lret
sub
fistps
mov
cmp
push
jne
lds
sbb
sub
and
dec
dec
movsl
rcrl
arpl
xor
mov
cmp
jae
imul
out
fiaddl
mov
test
cmp
cmpsl
movsl
pop
insl
push
in
mov
mov
cld
in
and
loopne
das
cli
pop
add
and
pop
sub
lret
test
js
iret
ret
push
add
jns
dec
sub
cwtl
in
jmp
std
xorb
aam
cli
push
push
in
cli
jge
fidivrl
cmpsl
or
push
xor
adc
push
shlb
jecxz
int3
enter
add
inc
mov
and
mov
jecxz
cwtl
addr16
movsl
rcr
mov
popf
scas
adc
mov
xor
xchg
push
dec
and
push
pop
nop
ja
mov
daa
or
push
push
push
pop
xor
sub
sbb
loop
jbe
cld
data16
mov
cmp
inc
inc
mov
imul
sbb
cmpsb
mov
pushf
ja
jmp
and
xor
mov
call
xor
xor
jg
add
lods
jle
aaa
stc
sub
add
daa
int
sbb
jns
fcoml
cmp
pop
stos
frstor
mov
lret
icebp
movsl
or
push
aas
mov
sahf
and
inc
sub
lods
stos
xor
adc
jmp
lahf
sahf
lock
or
shlb
pop
imul
cmp
insb
sbb
xlat
cmc
int
mov
rcr
adc
push
shl
test
fdivs
clc
mov
cmp
add
mov
ficoml
outsb
sub
mov
nop
jbe
pop
cmp
adc
je
stos
add
pop
add
jno
adc
xor
pushf
xchg
dec
mov
push
and
mov
out
push
cmp
int
jno
lret
jp
xchg
movsb
jae
jae
fstps
shrl
gs
fsubs
popf
fisubrl
stc
sbb
cltd
mov
ret
stos
adc
mov
adc
into
mov
mov
push
shl
xor
lahf
dec
lcall
jg
aas
pop
imul
xchg
mull
test
sbb
inc
sbb
xor
minps
adc
insl
mov
stos
push
lods
lods
ja
push
or
adc
push
cmc
pop
mov
pusha
shrl
loope
cs
mov
push
in
jecxz
cli
pop
mov
xchg
xchg
push
adc
js
push
sub
xor
xor
jl
sbb
cli
sub
mov
jbe
mov
xor
xchg
xchg
lea
pushf
xchg
jmp
lret
lahf
pop
cmp
xchg
xchg
cmp
orb
popa
cld
jns
cwtl
mov
dec
push
adc
rcrb
cltd
call
jmp
rolb
lret
mov
xchg
popf
sbb
inc
int
mov
rcl
mov
test
cmpsb
or
cmpsb
dec
push
ds
adc
dec
or
addr16
outsl
mov
lock
cmp
lret
adc
xor
pop
in
cmc
repnz
jg
int3
shrb
scas
sahf
popa
cmp
mov
add
ret
xchg
call
test
sbb
dec
or
fcmovbe
lds
pop
int3
cli
add
pop
fwait
xor
mov
in
lods
leave
fcoml
push
popf
xchg
daa
pop
mov
arpl
push
gs
cmpsl
imul
dec
mov
mov
cmp
out
mov
xchg
sbbb
mov
pop
push
nop
repz
test
xor
scas
sbb
cmp
sti
xchg
and
sbb
xorl
mov
les
fwait
cmpsl
lret
push
in
inc
mov
push
sbb
lcall
js
loop
inc
sbb
xchg
cmpsl
out
xchg
dec
push
xchg
or
cs
addr16
adc
pop
fldcw
jns
faddl
inc
fsubrs
mov
ss
mov
cwtl
sahf
xchg
loope
das
faddl
jo
xchg
push
lret
dec
xlat
pop
ss
pop
fadd
jbe
and
adc
leave
inc
pop
mov
scas
cli
jo
rep
leave
jnp
or
paddsw
jb
popa
leave
sbb
dec
outsb
jo
dec
test
mov
lret
inc
lock
or
fldl
into
shl
cld
xchg
xchg
sub
mov
push
push
cld
inc
dec
pop
ja
sbb
and
mov
mov
into
and
and
mov
int3
movsb
xchg
pusha
cli
test
adcb
and
or
mov
dec
push
pop
mov
es
fcoms
int3
mov
clc
addr16
ljmp
mov
lods
sub
sti
lods
jmp
inc
fisttpl
lea
shlb
and
jg
scas
cmp
stc
in
inc
pop
daa
adc
lea
or
jbe
into
das
popa
adc
lods
add
out
dec
sub
pop
xchg
xchg
push
in
xor
fwait
jmp
push
outsb
out
fldpi
lock
stc
inc
cld
rcrb
bound
jne
mov
jae
insb
nop
test
cmp
pop
je
clc
jecxz
lock
cltd
sub
daa
aas
mov
lret
xor
es
nop
and
xor
push
and
xor
cmpsl
cli
pop
fnstenv
sbb
movsb
fwait
cmpsl
sbb
ret
xor
lods
xor
adc
insl
push
imul
lahf
out
test
cld
push
sub
movsl
pop
inc
push
jl
adc
add
push
test
lods
sub
mov
stos
lcall
pop
frstor
in
add
shl
pushf
inc
and
jmp
ljmp
rcrb
xchg
mov
inc
aad
js
push
add
adc
je
mov
push
push
mov
adc
and
frstor
les
jnp
push
add
arpl
mov
iret
repz
and
lds
out
repnz
push
push
leave
dec
xchg
sub
lods
aaa
hlt
sub
xchg
add
jnp
mov
inc
mov
dec
dec
mov
repz
pop
mov
add
insl
mov
arpl
mov
pop
and
pop
or
add
pop
mov
pop
push
lret
sub
shr
push
add
cmp
jmp
xor
cmp
jns
jo
inc
mov
xchg
dec
add
xor
dec
jne
lret
jnp
fldcw
inc
cmp
sub
iret
das
or
sub
mov
ffree
jnp
inc
shrl
jne
mov
lea
xor
push
sub
mov
sarb
jle
ss
repz
out
xchg
xor
mov
dec
je
sbb
movsb
ja
pop
inc
js
xchg
cs
inc
push
in
outsb
dec
fistl
cmpl
test
push
popf
stc
push
nop
dec
or
outsb
clc
mov
adc
add
stos
lahf
and
push
cmpsb
shll
dec
loope
pop
in
inc
pop
push
jae
jle
jmp
mov
push
shr
cmp
icebp
mov
shrl
sarl
in
in
pop
adc
mov
aaa
mov
inc
cmc
std
faddp
mov
jb
gs
decb
repnz
repnz
push
pop
aas
fisubrl
add
jle
mov
cmpb
shl
in
lcall
dec
fdivl
jns
mov
test
or
or
jge
ret
cmp
sbb
icebp
clc
push
aas
imul
mov
outsb
orl
decl
js
pop
xchg
call
out
in
xchg
shll
sub
ret
gs
test
cmp
add
mov
push
out
pop
jge
shlb
push
jo
cmpsb
inc
aaa
decb
cmp
int3
jno
mov
sarl
mov
jecxz
fnstenv
cmc
push
xor
popa
xchg
mov
movsb
jmp
cmp
dec
jle
nop
lds
stc
push
ljmp
popa
xchg
add
insb
xor
out
cmpsb
jg
mov
mov
mov
push
push
push
ljmp
stos
xchg
int3
outsl
scas
dec
mov
cmp
mov
fisttpll
mov
inc
pop
pop
fidivrs
xor
xchg
leave
push
notb
loop
test
sbb
sbb
xor
xchg
je
nop
xor
mov
jno
pop
js
fbld
lret
iret
aam
or
call
shlb
int3
stc
xor
push
daa
push
adc
outsb
xchg
jmp
xchg
aad
arpl
jmp
cmp
pop
xchg
out
cmp
in
adc
inc
xor
jnp
push
test
paddq
int
es
pop
jbe
xchg
push
test
mov
and
xor
mov
jle
scas
lock
movsl
popa
jno
loop
insl
int
xor
dec
test
push
rclb
call
sub
sti
jo
jmp
je
mov
bnd
and
cmp
xor
xor
pop
fstpt
push
cli
filds
sub
pop
xchg
adc
out
or
inc
sbb
movsb
and
pop
jno
jp
push
xchg
into
xchg
les
dec
scas
dec
lahf
mov
cmp
pop
es
in
lea
lahf
daa
push
mov
sahf
sbb
dec
pop
std
js
xchg
cmp
leave
outsl
mov
insb
sbb
sbb
test
cmp
sub
iret
insl
jo
out
and
and
fstps
out
jmp
dec
hlt
stos
sarl
mov
jg
sbbb
push
es
repnz
aas
in
and
repz
icebp
ffreep
cmp
lock
ja
xchg
gs
dec
bound
fimull
loopne
and
pop
pop
aas
sub
jg
fdivrp
outsl
flds
and
outsb
or
and
xor
push
cld
test
daa
enter
xchg
shrb
jmp
pop
aam
cmp
adc
out
addr16
sub
push
pop
sbb
xchg
loopne
cmp
in
subl
mov
sbb
push
sub
gs
rolb
inc
cmp
sub
xor
xchg
test
aam
mov
clc
add
xlat
xchg
pop
pop
mov
or
fimull
in
dec
mov
dec
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
lods
outsb
push
push
bound
pop
bound
cmp
push
mov
sub
mov
leave
je
arpl
push
cmp
push
mov
movsl
lret
outsl
dec
or
fisubl
insb
loop
rcrb
xor
lock
lret
pushf
rdmsr
imul
add
lods
leave
add
nop
ss
jnp
push
enter
call
mov
or
sbb
xlat
popf
add
shrb
cmp
xor
mov
icebp
xchg
lock
xchg
jecxz
shll
outsl
adc
scas
mov
jns
mov
cli
xor
xor
xchg
into
lret
scas
inc
es
sub
repz
sbb
inc
lret
jb
lcall
test
sbb
sbb
jne
or
stc
add
test
xor
pop
and
fcmovnb
mov
inc
push
gs
cmp
loopne
popf
ss
test
stc
jge
xchg
clc
sub
movsl
test
mov
aad
push
ffree
je
mov
insl
xor
lea
data16
shlb
addb
mov
mov
mov
repnz
les
mov
and
sbb
testl
repz
enter
jnp
push
loop
ret
pop
push
ja
mov
sti
call
inc
jne
data16
mov
js
scas
mov
and
and
dec
loope
mov
adc
mov
mov
cltd
lret
lahf
mov
ret
or
dec
xchg
adc
add
movsl
imul
jb
cmp
jne
xchg
cwtl
inc
xchg
mov
pop
and
mov
inc
inc
pop
sub
or
cltd
test
jno
sbb
mov
dec
stos
pusha
push
jbe
inc
int
xchg
ret
sub
fisubl
mov
pushf
push
xor
push
adc
pop
lods
mov
pusha
shrl
add
xlat
jle
or
push
cli
cmp
sti
push
add
inc
enter
iret
pop
sahf
push
into
dec
jne
sbb
sarl
sub
xchg
jge
mov
cmc
xchg
jmp
ja
push
mov
mov
mov
inc
hlt
jnp
dec
fildll
pop
scas
jns
jge
icebp
xchg
dec
add
ret
test
lret
pop
jmp
test
mov
fwait
subl
pop
cmp
jno
sbb
ret
in
push
add
lahf
xor
inc
bound
addl
xlat
outsb
adc
mov
pop
fsubrs
insl
mov
mov
sbb
mov
fwait
xorl
ja
stos
aam
and
outsb
and
es
adc
mov
fidivrs
mov
dec
push
dec
cmpsb
mov
mov
fdecstp
or
imul
in
sub
js
cli
pop
insb
sbb
mov
mov
loopne
pushf
mov
loop
sub
or
loope
push
aas
cmp
adc
sub
or
xchg
xor
and
mov
dec
lds
xlat
in
das
cmc
inc
test
jecxz
fstpl
inc
fwait
ja
in
call
aam
jecxz
sbb
inc
test
ja
xchg
jp
push
rcll
sub
jmp
into
push
ja
or
in
lcall
je
lahf
and
push
shlb
in
repnz
mov
cmp
idivb
retw
or
push
popa
enter
fstl
mov
cmc
js
ret
jmp
cs
push
in
dec
test
cltd
dec
mov
xor
mov
dec
in
xchg
negb
lcall
out
jae
fwait
and
ret
sbb
ds
mov
sbb
sub
mov
and
or
mov
pop
fcoms
into
ja
dec
sub
movnti
fisubrs
inc
mov
jmp
or
add
frstor
xchg
cmp
sbb
mov
push
jp
push
aas
mov
aad
jge
and
das
enter
xchg
nop
sub
cmp
popl
push
sarl
mov
repz
in
and
lcall
xchg
imul
pop
test
pop
adc
rolb
in
data16
andl
lods
pusha
lock
jmp
push
sbb
ja
aam
and
pop
mov
mov
iret
std
and
sub
xchg
mov
jp
mov
jmp
cwtl
or
push
or
lahf
jge
and
mov
or
xchg
daa
repnz
outsl
stc
scas
jle
xchg
dec
outsl
gs
add
mov
push
lods
xchg
dec
xchg
or
jbe
movsb
fwait
jecxz
mov
pop
push
push
mov
pop
jle
mov
jo
xchg
int3
xor
push
test
in
xor
es
mov
mov
and
xchg
cmpsl
outsl
sbb
push
jg
cmpsb
lock
mov
xchg
ds
icebp
mov
xor
inc
jmp
mov
lea
pusha
test
cmp
mov
sub
mov
xchg
imul
inc
and
push
xchg
andb
mov
js
push
cmp
loope
stos
mov
gs
in
xor
jne
cmpsb
in
or
cmpsb
mov
mov
insl
xchg
mov
push
pushf
dec
rcll
ret
sbb
mov
test
mov
add
and
shl
loope
jb
call
or
mov
movsb
mov
pop
xor
sahf
mov
decb
pusha
into
pop
or
lret
aam
in
dec
test
aas
out
repz
inc
mov
fsubr
xor
dec
fdivs
mov
sar
out
pop
ljmp
inc
inc
add
cmpsb
mov
out
dec
sbb
stc
cwtl
adc
cmp
cmpb
xor
lcall
lcall
pusha
rcr
aaa
lock
add
retw
imul
aaa
sbb
in
push
das
lahf
test
lret
addl
sbbl
clc
cmp
push
stos
add
pop
lods
mov
pop
or
mov
sbb
sbb
mov
xchg
je
mov
sub
inc
mov
test
int3
repz
testl
jae
fs
addr16
push
out
sbb
pop
jae
out
inc
fmuls
add
jns
jae
outsl
test
xchg
or
mov
dec
or
add
loopne
jp
inc
daa
ds
enter
test
mov
push
jp
jle
lret
sub
repnz
jle
movsb
or
shlb
stos
fcoml
xchg
inc
icebp
ror
divb
loope
mov
cmp
fimuls
inc
jl
push
push
mov
push
cmp
cmp
push
stos
imul
push
andl
insb
jb
in
orl
es
mov
mov
pusha
mov
test
xchg
sbb
mov
out
scas
push
cmc
jmp
aad
dec
cmpsl
nop
jnp,pn
test
mov
sbb
mov
popa
mov
lea
inc
enter
sahf
bound
leave
adc
push
pop
jmp
shlb
xchg
fdivrs
jle
mov
adc
or
jle
loope
xchg
stos
mov
sbb
pop
lret
lea
cmpsl
pop
out
loope
pop
popa
xchg
cmp
or
pop
sbb
adc
dec
push
xchg
mov
xor
jl
pop
push
loopne
push
aad
lahf
push
jnp
cmp
into
mov
pusha
bound
aam
sahf
mov
std
mov
clc
add
add
cmp
adc
movsb
in
out
pop
jecxz
pushf
xor
jo
inc
cmp
push
fisubrs
ret
mov
dec
xchg
fidivrs
mov
or
sahf
mov
mov
jbe
std
and
mov
sarl
mov
pmaddwd
jmp
adc
xchg
dec
lea
push
dec
xlat
mov
fbstp
and
mov
inc
enter
stos
movsl
adc
jp
mov
jmp
inc
add
sub
sub
aam
and
push
xor
jmp
dec
mov
jl
movsl
mov
cmpsl
das
lahf
lret
repnz
shll
adc
ljmp
push
sub
cltd
mov
cmpsb
aaa
sbb
push
or
cli
push
rorb
and
and
arpl
xchg
shrd
cli
popf
inc
mov
cltd
jmp
out
sbbb
lods
mov
adc
inc
pop
adc
js
rclb
jg,pn
out
mov
xlat
shrb
jb
mov
in
aas
jb
jno
sbb
push
sub
xchg
sbb
mov
sub
aam
adc
mov
adc
iret
or
test
filds
mov
lds
lret
cmp
cmpsb
shrb
or
cltd
ds
jmp
movl
mov
jle
mov
jne
dec
jg
outsl
push
rol
xchg
mov
pop
sahf
mov
sbb
scas
cmp
lock
pushf
shrb
int3
sub
shll
es
repnz
fstps
enter
adc
or
daa
inc
push
push
xchg
mov
ds
jle
mov
je
das
pusha
cmpl
pop
pushf
imul
mov
int3
pop
enter
inc
ret
pop
cmp
sbb
mov
add
jnp
dec
push
fists
jle
push
fs
jno
stc
ds
jle
pop
in
aas
push
out
xchg
pop
pop
sbb
or
mov
out
sbb
stos
das
lods
jmp
pop
mov
xor
and
pop
dec
sub
movsb
push
and
sub
insb
cld
mov
dec
stos
es
imul
sbb
inc
or
imul
jecxz
je
lods
gs
pushf
mov
sub
jecxz
loopne
cmp
decl
cmc
pop
jmp
cmp
or
dec
imul
push
out
pop
push
mov
and
repz
nop
iret
or
mov
lds
mov
jnp
jne
imull
orl
imul
and
cwtl
xchg
mulb
scas
mov
push
pop
stos
jns,pt
push
int
xchg
ficoms
pop
pop
xchg
filds
pop
mov
lods
shrl
das
push
jmp
insb
sub
jns
scas
mulb
loope
js
lret
xchg
movb
mov
outsb
adc
fmull
xor
out
pushf
mov
aas
lods
cli
ss
add
cmc
sahf
mov
sub
push
movsb
out
dec
orb
scas
mov
sub
mov
push
dec
fisubrs
add
ret
sbb
xor
cwtl
mov
pop
movsb
or
mov
rcr
lret
jmp
enter
mov
in
mov
jo
jbe
xchg
cmp
inc
inc
adc
das
enter
mov
lretw
sbb
lods
xor
sbb
mov
xchg
lods
push
pop
pop
mov
xor
clc
pop
mov
stos
cmp
push
ret
inc
mov
and
xchg
insl
inc
loop
testb
and
insl
adc
or
sahf
push
int
push
and
sbb
dec
push
les
pop
imul
rol
xor
lret
pop
insl
je
ret
push
aam
mov
adc
xor
jno
mov
xchg
dec
fisubl
push
addr16
loop
xchg
push
xor
nop
inc
and
int3
adc
adc
xchg
xchg
stc
cli
cltd
mov
les
out
jb
xor
pop
push
lods
retw
outsl
mov
jb
dec
dec
movsb
xchg
mov
js
adc
inc
inc
sub
pop
sahf
sub
lock
js
sahf
int
pop
int3
pop
jmp
dec
sub
jl
ss
loope
in
add
xchg
addr16
jge
mov
fildll
cmp
lcall
sarb
cmp
mov
push
lahf
mov
imul
sub
or
iret
jnp
and
jo
popa
adc
pop
pop
jne
jg
fistpl
mov
push
roll
out
and
cwtl
fs
addr16
loope
jmp
daa
push
mov
xchg
ret
jle
int
add
sbb
andb
sbb
mov
loop
out
dec
in
sub
dec
shlb
arpl
ret
sub
pushf
adc
fldcw
aam
jge
jle
mov
mov
mov
jb
aad
add
loop
pushf
mov
out
ss
add
pop
xchg
mov
xchg
sub
ja
pop
push
push
sbb
fadds
imul
mov
ret
dec
mov
icebp
xchg
pop
imull
adc
or
mov
hlt
pop
in
pop
or
jmp
sbb
sub
arpl
ss
push
xor
or
cmpsb
add
ret
xchg
stos
add
push
lea
pushf
and
mov
adc
lret
pop
add
fs
and
hlt
sbb
xor
insb
add
or
or
pop
icebp
fwait
and
imul
mov
daa
in
xchg
pop
xchg
mov
push
cwtl
sub
or
and
jecxz
ja
in
xor
aad
jo
mov
xchg
cmp
mov
and
in
fwait
push
mov
ds
xchg
push
dec
adc
push
jmp
sbb
cmpsb
in
xchg
std
jg
fidivrl
lret
jg
xor
jge
mov
daa
cmpsb
mulb
inc
jns
or
lret
stos
add
mov
sbb
lods
or
sub
leave
dec
mov
mov
ljmp
test
loop
mov
sub
rorb
in
ud2
mov
pusha
add
ja
test
scas
aaa
cli
mov
inc
fscale
sub
jo
add
mov
mov
xchg
jle
loop
xor
dec
repnz
jg
sbb
repz
or
cmp
inc
adc
sub
sbb
or
cmpsb
xor
sbb
std
cmp
push
icebp
xor
cmp
in
pushl
test
xchg
or
fsts
or
insl
in
sub
mov
fimull
in
mov
cmp
mov
pop
push
push
xchg
fsts
push
xor
popa
fbld
push
scas
mov
sahf
pop
xchg
mov
lcall
int3
popf
cmp
xlat
rolb
add
movsb
push
pop
orb
ret
lea
aaa
fstpl
lret
or
cmc
fnstcw
aad
mov
arpl
fidivrl
ds
jb
ja
jns
sub
mov
mov
in
jnp
imul
aam
scas
pop
xchg
jno
jae
jae
push
imul
inc
subl
nop
outsb
and
or
xchg
sti
jl
mov
aam
or
sub
adc
jle
push
addr16
test
ljmp
sub
jg
shl
dec
dec
jnp
enter
sub
pop
xchg
loope
ss
rcl
sbb
test
lds
repz
arpl
shrb
mov
dec
pop
adc
add
adc
adc
inc
cmp
into
ret
pop
fbstp
stos
jl
mov
andl
sub
lcall
call
dec
test
dec
ljmp
pop
xor
pop
shl
jecxz
jp
jo
mov
jle
adc
sbb
xchg
inc
xchg
arpl
cwtl
test
sub
mov
in
or
in
inc
sub
xchg
sbb
xchg
sub
inc
pop
subb
out
ljmp
cmp
jnp
xchg
data16
ljmp
subl
push
lds
and
add
pusha
mul
in
and
popf
inc
sbb
xor
cli
add
fidivrl
outsl
mov
mov
shr
pop
mov
xchg
add
int
lea
enter
jecxz
xchg
ret
mov
jo
pop
adc
or
mov
cmp
cli
mov
jne
dec
sti
std
push
jbe
addr16
mov
sbb
enter
rcr
ret
shll
pop
jmp
in
enter
mov
mov
dec
insb
push
ror
lret
jno
push
mov
out
pop
xor
testb
test
xchg
mov
pop
repnz
outsb
ret
lahf
int
or
rorb
ja
popa
out
lcall
mov
lret
xor
fdivs
lcall
bound
pop
push
xor
lret
outsb
aad
fisubrs
popa
packuswb
mov
xchg
lret
xorl
aas
adc
add
adc
ror
stc
aad
cmpb
mov
jbe
sar
mov
mov
movsl
dec
add
xchg
push
div
cli
rcr
jae
scas
or
sbb
test
push
xchg
loopne
lcall
cmpsl
cmc
cli
xor
neg
pop
sub
ds
nop
inc
inc
adc
xor
mov
mov
aaa
sub
inc
mov
jl
dec
aaa
jae
sub
in
lock
add
and
icebp
das
push
out
andb
std
adc
in
mov
stc
cs
inc
mov
es
mov
mov
or
mov
btsl
outsb
or
ret
aas
es
xor
or
add
add
cs
in
dec
movsb
cmp
mov
add
mov
dec
adc
mov
ror
insl
or
fdivl
and
subl
mov
fstpt
mov
loope
xchg
outsb
cmp
lcall
xchg
dec
inc
neg
icebp
mov
movl
mov
xor
jns
mov
lret
dec
xor
xor
push
decb
sub
xlat
dec
xor
add
stc
dec
push
int
jge
les
ret
xchg
xor
sti
jne
into
ficoml
in
lock
push
jge
cmovg
sbb
stos
faddl
mov
xor
pusha
sbb
loopne
push
mov
aam
jmp
leave
clc
arpl
jae
sbb
in
subl
ds
pushl
lods
outsl
roll
xchg
pop
jecxz
scas
mov
mov
jecxz
adc
adc
mov
enter
shll
sub
dec
inc
or
cmp
ja
mov
lret
lds
rorl
popa
subl
jge
mov
pop
orb
bswap
ret
adc
sub
pop
flds
and
jo
js
add
mov
data16
sub
mov
nop
ss
movsb
movsl
mov
pop
pop
adc
dec
or
insl
jecxz
push
dec
sahf
or
add
mov
insl
lahf
and
sub
scas
popa
mov
dec
add
pop
add
pop
outsl
mov
notl
xor
xchg
and
in
xor
sbb
stc
ljmp
mov
push
sbbl
mov
aas
xchg
push
xchg
xor
xchg
or
std
inc
add
scas
xchg
repnz
scas
popa
cmp
movsb
push
hlt
shlb
xchg
pop
push
pop
imul
mov
xchg
pop
mov
jl
js
mov
jecxz
mov
and
and
and
mov
xor
insb
xchg
in
mov
testb
ds
cmpsb
dec
or
fildl
arpl
sarl
ss
addb
nop
rcrl
ret
das
or
push
mov
xchg
addb
xor
fcmovb
aas
imul
add
mov
mov
pop
pusha
mov
pushf
test
add
ds
mov
cmp
adc
or
fistpl
dec
pop
fcmovnbe
and
pushf
cli
ds
mov
subb
cli
rcll
aad
fwait
mov
adc
enter
aaa
es
mov
stos
aam
xchg
repz
dec
cmpsl
pusha
pop
js
std
ret
arpl
dec
inc
xchg
adc
out
cmp
fs
cmpsl
jns
mov
dec
in
ljmp
test
sub
orl
push
and
xor
jne
push
mov
dec
xor
lea
mov
inc
cmp
shrb
sub
stos
cmp
mov
add
mov
imul
jl
iret
adc
cmpl
int3
pop
loope
push
push
or
jae
xchg
push
shrb
cs
mov
sbb
hlt
push
pop
pop
movsl
outsb
clc
mov
das
push
or
lods
push
pop
in
ret
cmpsl
dec
jecxz
in
lods
in
dec
push
sbb
pop
addps
insl
fnstsw
ret
sahf
dec
addr16
cwtl
inc
push
lea
lcall
popa
test
sbb
pop
ljmp
stc
jmp
and
push
daa
or
mov
add
fistpl
sti
cmp
jl
fstpt
cmc
lods
sub
push
inc
sbb
sub
cmp
or
insb
loope
xorb
test
inc
or
add
inc
mov
ja
setno
jge
cltd
imul
pop
xchg
push
and
jae
dec
scas
call
loop
mov
in
inc
cmp
cmpsl
mov
inc
repnz
scas
outsl
addr16
and
hlt
sti
xchg
into
dec
stos
imul
mov
add
rolb
sub
mov
lret
mov
dec
jae
outsb
jle
int3
push
mov
mov
dec
arpl
sbb
pop
ja
ja
xchg
gs
incl
mov
cmpsl
push
add
adc
jp
jle
lods
fbstp
sbb
push
xchg
fists
jb
sahf
cmp
mov
clc
add
cmpsl
cld
mov
sti
mov
lahf
les
push
push
and
push
cs
pop
push
inc
aas
mov
pop
cmp
fs
ficoms
das
aad
xchg
dec
and
sub
push
fs
mov
mov
mull
xor
dec
fists
jmp
jmp
in
dec
and
out
adc
jb
lret
push
cltd
jo
es
mov
repnz
and
js
scas
or
fsts
cmc
dec
sbb
adc
hlt
add
repnz
outsb
ja
push
movsl
or
mov
enter
pop
jo
outsb
out
or
inc
mov
dec
icebp
push
stos
imul
jno
mov
xlat
adc
xchg
push
push
into
mov
cmp
loope
int
repz
sub
lods
mov
cmp
mov
jmp
insb
pop
lret
cmp
xor
icebp
pusha
fsub
dec
inc
test
dec
mov
add
mov
lcall
sbb
xor
cmp
xchg
loopne
enter
jl
cmp
or
test
es
pop
sub
cmp
adc
jmp
pushf
outsl
adc
fwait
ljmp
push
add
adc
jl
mov
in
mov
dec
popa
js
jo
sbb
and
ja
and
sub
in
sbb
iret
jns
aaa
jg
add
int3
mov
xor
mov
mov
and
rcrl
sahf
xchg
fldcw
inc
cmp
inc
xchg
les
inc
outsb
push
in
popf
std
sbb
pop
mov
sbb
shr
ds
sub
arpl
xchg
mov
adc
arpl
pop
jae
cmp
add
addb
dec
or
lret
dec
fwait
push
popa
iret
stos
dec
mov
imul
sbb
in
inc
movsl
imul
dec
mov
mov
pop
outsb
les
ja
into
stc
pop
cmp
mov
nop
xor
jle
cmp
xchg
push
inc
jne
pop
sub
aas
clc
nop
cmp
inc
add
jp
lahf
leave
mov
mov
mov
outsl
hlt
lds
or
mov
shl
and
js
pop
mov
xchg
sti
sahf
jne
sbb
push
jg
pop
xchg
hlt
or
pop
fmul
adc
imul
repnz
bound
clc
push
xchg
push
ss
popf
aas
loopne
jmp
jb
mov
ds
imul
push
lds
cmp
adc
aas
adc
in
pop
add
pop
jae
inc
pop
dec
mov
and
xchg
cmp
cwtl
jb
pop
xor
in
imul
xchg
xchg
enter
jmp
test
cmp
push
and
and
mov
clc
outsb
xor
push
cmp
jle
and
out
and
push
incb
jg
fldt
xorl
pusha
and
pusha
mov
daa
in
ds
movsb
push
hlt
fwait
dec
int
ret
out
xor
dec
lock
scas
cli
into
jae
cmp
sbb
inc
dec
hlt
outsl
jmp
xor
sub
sbb
sub
jp
nop
mov
jecxz
xchg
cmp
mov
inc
or
andb
sahf
addl
shll
jne
in
imul
mov
test
fld
add
push
mov
mov
loopne
call
stos
mov
gs
mov
mov
jl
xchg
xor
mov
rdtsc
cs
or
in
sbb
cmpsl
adc
jp
mov
int3
popf
add
jns
outsl
into
imul
xor
mov
or
push
sub
repz
pop
mov
mov
int3
aad
bt
fmull
add
in
and
mov
adc
jb
push
sbb
addr16
mov
lods
jae
fwait
jmp
popl
pop
push
lods
outsb
mov
hlt
loop
fs
or
dec
insl
inc
inc
enter
imul
addr16
sahf
adc
fimuls
orl
cmp
dec
xchg
mov
cmp
pop
push
fwait
mov
add
mov
bound
and
jmp
sub
psubsb
xor
inc
fsubrl
fst
pop
pop
test
arpl
cmc
dec
dec
cmpsb
mov
cmpsb
xchg
jae
scas
pusha
xchg
push
push
arpl
out
xor
in
out
sbb
clc
dec
mov
mov
mov
jge
mov
lahf
rclb
and
cmp
pop
adc
rclb
mov
xchg
and
fcomi
imul
adc
aad
sub
daa
inc
lcall
xchg
es
sbb
jno
mov
call
cmp
or
dec
fmuls
loop
lds
loopne
aam
jb
sub
hlt
flds
dec
xlat
sub
jmp
jb
or
das
xorb
iret
lods
jle
sub
pop
out
jl
xchg
sub
adc
and
inc
loop
xchg
outsl
in
sar
add
mov
je
add
mov
pop
mov
scas
mov
inc
sbb
xlat
nop
jnp
stos
hlt
test
cmc
dec
out
mov
xor
in
xchg
in
mov
and
jge
out
aad
xchg
xor
fnsave
inc
js
lea
mov
mov
inc
aas
cmpsl
cmp
push
cmp
outsb
cmp
leave
cmpsl
inc
push
mov
cmp
mov
rorl
mov
xchg
sub
aam
mov
call
sbb
xor
aaa
popa
pop
xchg
jb
in
outsb
inc
lcall
sbb
mov
adc
or
fnstcw
out
mov
pushf
mov
insl
mov
cmp
mov
lods
xchg
push
outsb
insl
in
jbe
inc
loop
stc
xchg
jge
push
jmp
push
jbe
popa
mov
adc
cmpsb
fbstp
add
inc
cmp
clc
pop
leave
js
lods
cmc
movsl
test
clc
ds
insb
adc
js
and
stc
js
cmc
aas
cmp
outsb
push
cmp
push
sahf
inc
and
rol
fwait
decb
movsl
pop
dec
add
jae
jns
into
mov
iret
out
or
inc
and
iret
test
or
inc
lret
test
inc
in
stos
popa
xchg
popf
dec
stos
add
in
adc
sahf
and
mov
xor
into
in
xchg
stc
out
sbb
int
fwait
jbe
movsb
pop
jg
pop
popf
jl
add
push
nop
or
push
ret
mov
jns
dec
sub
add
pop
jns
xlat
out
shr
or
mov
xor
fcmove
cwtl
add
or
les
dec
pop
mov
sbb
fldenv
daa
add
das
test
lods
xchg
inc
inc
jle
ja
loopne,pn
mov
mov
xor
mov
ret
dec
sbb
sub
dec
and
add
xor
test
jecxz
addr16
adc
dec
outsb
fcoms
mov
pop
les
mov
push
jns
aam
inc
sbb
jo
inc
push
pusha
mov
fs
adc
push
sub
jnp
push
dec
cli
in
xchg
shlb
add
sbb
insl
adc
scas
push
out
adc
ret
push
popa
jae
pusha
imul
scas
or
lods
addl
mov
push
sub
cwtl
lret
shl
push
lock
mov
ss
jne
jp
les
sbb
das
mov
lcall
pop
mov
inc
mov
dec
push
movb
adc
loopne
inc
shl
push
xor
adc
inc
adc
or
push
lret
pop
shlb
lcall
mov
push
pop
rolb
adc
shlb
addr16
xor
jmp
cmp
jae
pop
dec
lret
addl
daa
jp
dec
adc
mov
repz
mov
jnp
setp
mov
sbb
jmp
jo
into
cmp
push
icebp
jne
mov
ret
push
cmp
pop
fnstenv
jo
es
inc
iret
adc
push
loope
adc
adc
shr
sti
sub
xchg
mov
outsl
mov
xor
mov
xor
add
hlt
fwait
cmpsb
push
jmp
jb
mov
push
lods
insb
lcall
les
repnz
aaa
or
stos
xorl
cmpsl
insl
push
hlt
das
pop
lods
pusha
fs
jno,pn
lea
sbb
xchg
pop
popf
xor
loopne
jne
jmp
adc
dec
outsl
insb
ret
fsubrs
stos
pop
popa
sbb
push
pushf
js
add
popf
cld
nop
add
in
inc
cmc
aam
push
iret
or
ret
cmp
mulb
cmp
out
flds
cmpsl
out
fsubrs
jae
mov
icebp
dec
xor
push
addr16
enter
pop
hlt
ja
das
push
lcall
imul
rol
popa
popf
mov
add
mov
aam
pop
sub
out
and
jnp
mov
aas
pushf
mov
push
scas
mov
dec
cmpsb
xchg
push
in
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
fiadds
popa
bound
pop
bound
clc
cmpb
push
xchg
je
xor
fbld
jp
jmp
jl
push
aam
subb
sub
add
nop
lock
jmp
mov
push
jns
dec
out
fstp
adc
imul
add
cmp
xor
push
sahf
inc
pop
sahf
lods
inc
fdivs
lods
ret
fcmovnbe
pusha
fstps
jno
dec
dec
lahf
adc
dec
inc
gs
rcll
idivl
cmp
jg
inc
sti
out
mov
jl
adc
mov
xor
notb
loope
ds
out
pop
int3
sbb
cwtl
sub
movsb
cmp
lods
popf
aas
lret
inc
jo
jb
mov
insb
add
or
add
or
cmp
or
mov
jg
fwait
jmp
test
and
push
aad
outsl
push
mov
lcall
add
dec
fsubrl
fistps
dec
adc
leave
dec
dec
outsl
jp
sbb
test
fcomps
jmp
mov
push
add
inc
inc
out
mov
cmpb
adc
daa
into
cltd
dec
bound
mov
add
mov
ficomps
xor
sbb
ds
jb
mov
shrl
push
cmp
xchg
testb
into
push
mov
mov
and
dec
xlat
sub
cmpsb
mov
dec
mov
cmp
cmp
imul
ss
adc
mov
jle
clc
std
pop
push
jg
in
sub
dec
xchg
mov
mov
xlat
rcrb
lea
mov
and
xor
add
and
or
outsb
aas
pop
mov
add
aad
cli
add
and
xor
leave
cwtl
cmc
push
aaa
inc
mov
lret
cmpsb
imull
mov
jo
lret
push
pop
inc
clc
add
in
mov
jge
lods
lahf
lret
ljmp
aam
jecxz
ret
sub
pushf
xchg
push
rcrb
sub
sub
nop
mov
repz
out
pop
or
rcll
ds
sbb
repz
sbb
insb
xchg
cmpsb
pushf
scas
lret
fists
repnz
int
inc
std
aad
sub
add
lea
mov
sbb
sbb
jl
xchg
popf
xchg
fsubr
xor
scas
jge
mov
mov
xlat
pop
popf
sub
sbb
ret
fnstsw
loopne
mov
in
loope
pop
sub
js
jg
mov
out
les
rcrb
add
fsubr
das
cmp
xchg
ljmp
iret
call
imull
add
pop
dec
cmp
adc
lds
fwait
ret
dec
cmp
lret
call
gs
mov
cmp
stos
cs
popf
in
outsl
stos
jecxz
and
icebp
pushf
mov
mov
bound
cmpsl
push
cld
jl
mov
ret
fisubs
push
js
cmp
popf
stos
push
in
adc
pop
insb
lea
incb
push
inc
bound
dec
xchg
out
icebp
jns
xchg
jg
maskmovq
divl
decl
xchg
xor
fsubrl
jg
cld
adc
adc
jg
adc
jmp
xchg
cmpb
in
mov
leave
cmp
cmpsl
push
mov
fmuls
je
or
loopne
lahf
adc
mov
loop
or
fisubs
sbb
leave
clc
out
inc
or
push
jp
and
jp
mov
insl
and
inc
insb
pop
jb
data16
loope
dec
adc
add
imulb
fucomp
mov
jne
mov
std
std
pop
push
push
clc
mov
fadd
sahf
dec
out
addr16
adc
inc
in
dec
mull
sbb
cs
xor
sbb
jg
mov
add
cmpl
mov
les
stos
cmp
jno
or
dec
stos
scas
push
icebp
sbb
gs
test
mov
jo
arpl
xlat
lcall
outsl
int
ss
pop
push
gs
mov
xlat
ficoms
inc
stos
push
out
ja
dec
push
sbb
cmpsb
testl
jb
pop
adc
lods
xchg
cmp
push
cmp
push
scas
and
in
xor
jno
inc
scas
test
push
aas
lea
out
dec
dec
sarl
test
jbe
adc
aam
lret
rclb
shll
adc
cmp
mov
cld
fs
dec
jno
into
iret
pusha
inc
add
sbb
inc
mov
rorb
dec
mov
pop
adc
mov
pop
imul
loop
test
push
push
out
and
inc
sbb
gs
or
mov
cmc
adc
cmpsb
ficomps
xlat
jbe
add
out
mov
jae
and
dec
fadds
xor
lret
xchg
jecxz
and
fsubl
in
aad
ljmp
hlt
jno
mov
xor
rol
xor
rcrb
pop
lahf
das
jl
push
lds
mov
push
add
cwtl
sti
pop
in
in
xor
xor
rcl
into
lods
sbb
push
test
and
add
jae
pop
sbb
pop
outsl
push
dec
xchg
sbb
shlb
dec
outsb
or
dec
fwait
pop
cmp
add
ficomps
addr16
or
ds
adc
push
scas
repz
sub
es
outsb
cmp
ljmp
and
fidivs
idivb
mov
rolb
fisubrs
lret
mov
add
inc
sub
push
movsl
jmp
push
test
jecxz
push
ljmp
hlt
pop
adc
repnz
add
ficoml
into
push
rorl
int
stc
mov
hlt
cmpsb
les
inc
pop
inc
xchg
rorl
in
lods
cs
mov
mov
push
sub
jo
pop
imulb
cmp
loope
clc
mov
addl
mov
lret
pop
xchg
or
and
sbb
jb
dec
shlb
and
faddp
cld
cltd
mov
push
pop
scas
mov
or
aaa
int3
aad
aad
outsl
jle
jmp
in
inc
xor
dec
push
aas
lods
jns
sub
and
add
pop
nop
dec
jg
or
popa
jle
je
mov
outsl
imul
dec
xchg
xor
xchg
or
jmp
sbb
pop
mov
cmpsl
pusha
arpl
sbb
pop
loopne
xor
idivl
pop
repz
les
mov
andb
fsubrl
mov
aam
cmpl
mov
and
addr16
je
cmp
lods
fdivs
push
mov
loopne
stos
pop
in
adc
inc
sub
push
ret
ljmp
repz
xchg
sti
cmpsb
shrl
push
mov
jg
mov
xor
scas
fs
adc
mov
push
push
popf
insl
jb
daa
sbb
add
pop
cwtl
mov
mov
mov
and
cmpsl
icebp
add
push
dec
loopne
decb
xlat
aam
aam
xor
add
fsubs
leave
stc
mov
bound
call
repnz
or
xchg
or
pop
stos
aad
and
mulb
pop
enter
std
sbb
mov
mov
arpl
hlt
xchg
pop
or
lock
sti
clc
mov
inc
out
jl
jae
adc
cmc
nop
fsubrs
ret
mov
add
inc
test
pop
fcmove
inc
jb
mov
add
mov
push
jne
lcall
lcall
outsl
jnp
filds
and
enter
adc
adc
xor
cltd
in
xchg
jo
pusha
xchg
jne
mov
adc
lock
inc
in
out
pop
push
ret
sahf
decb
cmpsb
xchg
dec
test
in
sbbb
lds
xorb
shr
cli
movsl
jbe
cli
int
xor
cmp
out
cld
xchg
jbe
ja
inc
pop
xor
andb
cmpsb
sub
out
psubd
adc
adc
jno
xchg
xor
jb
pusha
sub
js
pop
in
in
cmp
push
lret
jae
push
jl
jnp
shll
ret
jmp
and
jbe
xchg
gs
out
jp
nop
pop
inc
push
pop
mov
push
adc
hlt
mov
fisttpl
scas
or
add
mov
cld
sub
cmp
and
stc
aam
flds
repnz
gs
hlt
js
scas
xchg
inc
decb
mov
push
inc
sub
imul
mov
hlt
push
jns
mov
call
clc
or
adc
pop
push
cwtl
mov
fimuls
inc
mov
mov
lods
sub
dec
push
loope
shll
ja
in
orl
in
mov
jl
mov
nop
inc
xor
push
scas
xor
sbb
sbb
mov
in
jp
pop
push
mov
frstpm(287
sbb
out
push
hlt
ret
loop
and
mov
fbstp
arpl
gs
out
mov
xlat
test
jg
ds
fucomp
add
mov
imul
inc
lea
add
lea
fidivs
lret
push
cli
xchg
adc
adc
fs
dec
outsb
int
jb
jb
mov
sub
aad
inc
push
inc
inc
sub
add
jo
or
enter
cmp
xchg
mov
ret
push
pop
add
test
lahf
inc
fnsave
dec
out
push
popf
in
mov
inc
loope
mov
out
out
in
out
and
xchg
fbld
sbb
pop
mov
fwait
dec
xchg
cld
stos
cmc
sbb
xchg
lcall
xlat
xor
xchg
lods
xchg
jge
mov
je
push
cwtl
mov
mov
cmp
iret
adc
into
imul
out
or
jmp
leave
mov
pop
push
lods
add
cmp
mov
sbb
shlb
ljmp
push
mov
ljmp
call
cmp
aad
aad
or
mov
ret
push
mov
mov
mov
popf
sbb
insl
add
xor
out
dec
lods
ss
xor
mov
in
or
stos
mov
pop
lds
push
add
inc
lret
push
mov
cs
ret
mov
test
stc
bnd
cmp
aas
inc
loope
jg
jnp
push
je
repnz
cmp
imul
inc
pop
jg
dec
add
or
cmp
pop
adc
inc
shl
leave
sbb
mov
scas
sbb
jecxz
jl
addr16
scas
rolb
mov
jb
mov
aad
fwait
dec
pop
dec
in
push
xor
out
jnp
arpl
test
xor
dec
rclb
push
mov
xchg
adc
ds
and
inc
mov
push
fs
hlt
lret
int
jg
in
and
jle
jb
imul
out
sbb
out
icebp
enter
enter
push
xchg
test
lods
nop
fisubrl
jno
cwtl
xchg
xor
inc
lock
add
in
cmp
pop
shl
test
adc
sbb
ret
sbb
enter
bound
ficoms
push
push
out
ss
in
push
add
outsl
cmp
pop
pop
sti
jp
loope
jo
sub
repnz
mov
ret
fcomi
call
loope
dec
movsl
lret
dec
mov
stos
inc
je
repz
jae
mov
dec
jns
enter
or
xchg
mov
les
mov
jnp
mov
jle
shl
incl
mov
cmp
or
sbb
fdivrl
or
in
loop
pop
imul
ret
adc
inc
mov
icebp
daa
cld
ljmp
xchg
mov
stc
popa
cld
push
pop
nop
cmp
ds
sbb
pop
sbb
test
scas
jg
add
mov
mov
xchg
mov
test
into
pop
pop
test
fstps
mov
sbb
ljmp
mov
mov
cmp
or
repnz
lcall
sbb
outsl
jl
adc
sbb
adc
fucom
xchg
lea
mov
mov
pushf
ret
pop
sub
popl
xor
test
gs
inc
or
ret
ljmp
loopne
pop
fimull
mull
mov
and
xchg
push
lock
jno
jno
sub
scas
mov
mov
dec
push
sti
or
clc
xor
out
stc
add
negl
fisubrs
and
clc
je
es
rcr
popa
mov
sbb
xchg
dec
imul
testb
movsb
subb
dec
cmp
sub
popf
sub
pop
or
mov
pushf
jl
daa
out
sub
sbb
call
pop
dec
fnstenv
les
cmp
mov
mov
pop
lret
mov
jnp
jnp
and
repz
gs
pop
movsb
mov
jecxz
add
push
jp
pop
jmp
sbb
outsl
call
cld
stos
popf
leave
adc
call
mov
cmp
pop
sub
shrb
cmp
sbb
fwait
addl
sub
fdivs
xor
test
int3
test
aad
cwtl
je
mov
add
mov
repz
lret
mov
dec
loop
adc
out
fdivrp
and
out
mov
das
push
push
pusha
or
jmp
sti
xchg
add
mov
arpl
loop
test
ret
lds
insl
repnz
icebp
jo
push
insl
jmp
cmpsb
jnp
cmp
pop
scas
mov
inc
rcll
lret
negb
cwtl
lahf
mov
imul
movlps
test
sub
add
jecxz
loop
imul
sbb
outsl
push
jecxz
xchg
sub
clc
sub
mov
sbb
jge
and
jle
stos
test
mov
not
mov
xor
or
enter
xor
std
cmp
negl
pop
mov
inc
xor
xchg
aad
sub
xchg
jno
xchg
jge
clc
inc
dec
mov
cmpsl
lea
js
mov
mov
cmp
xlat
inc
jg
cmp
xor
inc
pop
cmp
sarb
insb
test
sub
dec
push
and
repz
in
xchg
pop
or
xchg
inc
imul
iret
adc
mov
sub
decl
xor
sub
or
loop
in
mov
ret
add
outsb
xchg
lret
test
popa
lods
mov
dec
test
fs
imul
mov
aam
loope
jge
cmp
test
push
xchg
sbb
mov
cmp
dec
dec
bsf
sbb
xor
loopne
mov
mov
cmp
xchg
adc
jb
lea
jecxz
aam
mov
and
cmp
or
mov
adc
dec
ret
xchg
add
lret
push
or
insb
push
adc
test
sub
mov
cmp
cmp
inc
add
mov
stos
jne
dec
xor
cmpsl
xchg
icebp
enter
adc
int
pop
xor
sub
jb
popf
jnp
xchg
mov
mov
ljmp
jae
pop
inc
repz
mov
xor
mov
push
movsl
mov
les
mov
faddl
ljmp
das
xlat
adc
push
dec
lock
js
push
mov
sub
dec
sub
subb
mov
mov
sbb
mov
cli
pop
mov
arpl
cwtl
pop
ljmp
push
inc
push
addr16
ljmp
iret
insb
xchg
inc
lret
xchg
jp
les
mov
dec
push
jb
sub
cs
mov
mov
pushf
cmp
dec
int
xchg
adc
jg
mov
iret
dec
adc
mov
repz
inc
and
dec
sbb
or
or
ljmp
or
loop
inc
nop
inc
xchg
xchg
push
jns
mov
xchg
xchg
dec
inc
data16
jg
out
fmuls
shll
push
mov
mov
fildll
lock
outsb
popf
out
dec
mov
dec
stos
jecxz
sbbb
hlt
paddusw
lret
xchg
cmp
sub
sarl
rolb
nop
stc
hlt
inc
in
repnz
jae
in
adcl
sub
cli
repz
add
insb
adc
or
fucom
call
mov
push
fimuls
ja
andb
lret
add
mov
adc
pop
ret
mov
mov
xchg
jnp
jg
and
push
push
adc
push
mov
jmp
testl
fistpl
lds
mov
insl
out
xchg
test
shll
insl
lea
mov
stos
add
cmpsb
jno
hlt
imul
pushf
mov
push
add
lock
loop
inc
ud0
add
sbb
nop
shrl
mov
mov
push
or
movsl
insb
jne
test
mov
les
push
pop
adc
and
mov
cmpsb
jns
cmp
rclb
mov
lcall
das
or
sti
cmpsb
imul
int3
or
xor
lds
clc
xor
in
int
ds
jg
sub
rol
or
xchg
inc
icebp
cmp
mov
jl
fwait
mov
imul
outsb
sahf
xchg
jo
pop
mov
test
push
jns
mov
and
adc
lret
mov
adc
inc
data16
fdiv
decb
adc
int
clc
or
xor
cmp
loop
inc
cmp
out
xchg
lahf
ret
aas
movsl
push
pusha
adc
data16
popf
xchg
fdiv
popa
jbe
sub
push
mov
push
jg
xor
repz
fildll
int
sti
xchg
fcmovbe
aaa
pop
inc
cld
scas
and
fwait
mov
enter
xchg
cmpsl
mov
in
mov
adcl
cmp
dec
loop
fcoms
cli
sbb
pop
fmul
movsl
or
xchg
rcll
or
jns
out
pop
int3
lcall
fisubrs
push
outsb
lds
mov
gs
push
mov
mov
stc
ss
mov
xchg
insb
jbe
dec
and
dec
fwait
daa
jb
ds
mov
mov
pushf
inc
push
push
outsb
popf
jo
sti
push
fisubrl
pop
dec
jo
or
cmc
lcall
cmp
xchg
pop
mov
cmp
aaa
jecxz
xchg
add
sarl
pop
scas
push
jae
push
lods
and
push
and
jne
mov
stc
xor
outsb
cli
ret
cmp
sbb
aam
dec
shrb
dec
test
in
xlat
jnp
jle
cmp
cmpsl
cltd
rcll
and
push
testl
jge
push
xor
repnz
cmp
xchg
roll
rcl
mov
mov
push
jmp
push
hlt
in
repz
inc
jmp
out
cli
jno
add
call
pusha
icebp
jae
lcall
scas
sub
lea
adc
push
pop
std
ret
int
xchg
sub
xor
lods
xor
vmwrite
gs
or
cs
popa
jp
mov
add
cwtl
data16
stc
pop
push
xchg
fsubrs
or
arpl
xor
shll
xlat
push
pop
mov
leave
mov
mov
aaa
sub
cld
enter
mov
or
lock
jns
shlb
fwait
mov
lods
inc
daa
sti
fmuls
jns
dec
jle
sub
popa
push
fcoml
rcrl
incb
imul
push
xor
push
mov
pop
adc
int
add
add
jg
outsb
mov
daa
testb
push
lret
jbe
insl
xchg
and
fs
cwtl
add
cmp
pop
ljmp
jns
xchg
stos
sbb
jnp
push
push
cwtl
ds
shlb
sub
push
pop
dec
adc
outsl
mov
ror
pop
add
dec
mov
in
push
es
mov
add
xorl
xchg
adc
mov
mov
pop
ds
jecxz
rorl
int3
subl
les
mov
fwait
mov
push
dec
add
pop
mov
mov
popf
jns
pop
loopne
popa
add
jp
dec
mov
sarl
mov
push
fmull
insl
scas
jno
popl
xchg
in
dec
popf
ficoms
xor
inc
subb
aad
mov
or
test
or
stos
test
and
pushf
xchg
inc
clc
ret
into
sub
pop
leave
push
or
mov
mov
dec
mov
mov
imul
dec
inc
pop
jns
push
push
xchg
dec
and
fwait
adc
cld
xchg
dec
iret
adc
cmp
mov
shrb
xor
sub
mov
stos
mov
daa
cmp
imul
mov
pop
cwtl
ljmp
out
bnd
clc
sarb
push
lahf
jmp
jnp
mov
icebp
push
jnp
rcrb
inc
stos
repz
mov
xchg
popa
int
mov
xchg
loopne
in
int
push
addr16
inc
daa
xchg
xor
lret
push
int
xor
cmp
adc
and
and
dec
xor
pop
jae
or
push
stc
loopne
xor
shrl
pop
repnz
push
and
pop
or
lret
test
pop
enter
add
cmp
inc
int
fcomps
pop
daa
push
mov
pushf
movsb
fsts
repz
stos
xchg
or
inc
inc
fs
wrmsr
stc
ljmp
xchg
inc
jae
test
dec
out
int
outsb
mov
je
mov
push
pusha
add
rcrb
dec
push
sbb
mov
add
push
sub
movb
sahf
and
cmp
int
pop
pop
sbb
fidivrs
movsl
out
mov
mov
enter
dec
add
lret
aas
lret
mov
lahf
dec
or
add
mov
sti
dec
push
shll
sbbl
mov
repnz
addr16
repz
test
inc
stos
fcompl
lea
jmp
push
es
test
mov
and
inc
daa
lods
mov
das
shrb
mov
scas
pushl
xchg
cmc
arpl
insb
push
movsb
dec
xor
or
mov
dec
or
ret
or
aam
mov
inc
addl
cmp
test
out
cs
imul
icebp
outsl
iret
cmp
adc
imul
jnp
movsb
mov
pop
xchg
push
pop
dec
mov
xchg
jne
mov
or
out
ds
dec
ja,pt
mov
das
inc
push
xchg
sbb
inc
adc
into
js
movsb
iret
lahf
lods
xlat
dec
mov
jns
int3
out
ds
cmpsb
aas
fistl
push
sbb
sahf
loop
les
stc
icebp
xchg
fdivrs
outsb
pop
inc
faddl
mov
ret
outsl
pop
cmp
mov
rorl
mov
mov
adc
xchg
mov
hlt
adc
xlat
mov
cs
in
pusha
or
dec
repnz
mov
dec
mov
sahf
push
jmp
out
hlt
push
mov
loopne
mov
or
fucomi
insl
iret
sbb
pop
pop
mov
push
jmp
pop
inc
pushf
cmpb
push
jp
sar
fstpt
outsl
fnstsw
fisttpl
push
popa
mov
xchg
cmp
test
imulb
sbb
jb
inc
loope
repz
testl
inc
stc
inc
or
scas
cwtl
xchg
out
mov
and
mov
in
sub
inc
xchg
mov
mov
lock
mov
add
mov
mov
into
sbb
sbb
mov
pop
leave
lods
int3
or
and
mov
mov
call
push
sbb
scas
mov
sahf
scas
cli
xchg
test
add
je
mov
push
popf
mov
push
pop
ljmp
adc
fwait
xchg
cmpsb
ljmp
pop
add
in
popa
jecxz
mov
mov
outsl
push
dec
repz
add
es
mov
jmp
mov
push
fs
add
xchg
movsl
ret
fldl2e
pop
dec
sbb
movsl
lcall
repnz
mov
aam
pushf
sahf
push
cmp
xorb
sbb
sbb
adc
dec
jbe
add
sbb
pop
add
or
or
test
cli
les
xor
mov
loopne
enter
mov
mov
mov
inc
jmp
mov
movsl
mov
ja
xchg
add
sub
mov
push
and
sbb
jmp
push
sbb
fs
add
in
add
pop
jne
jg
mov
mov
stc
cmp
inc
out
sbb
bound
add
aas
push
bound
dec
xchg
cmp
pop
lods
lahf
sbb
je
and
mov
mov
push
pusha
movsl
mov
jne
mov
cltd
xor
cld
mov
aam
cmpsb
out
rcrb
ljmp
mov
mov
decl
dec
lret
enter
dec
push
nop
icebp
call
loope
and
out
test
mov
outsl
mov
push
jae,pn
pop
stc
jle
jge
pop
ljmp
jecxz
mov
xchg
pop
jmp
push
push
push
ret
int
mov
push
mov
notb
repnz
outsb
aam
adc
addr16
pushf
sbb
gs
mov
sbb
dec
push
pop
sahf
mov
xchg
mov
daa
in
add
adc
adc
fnstcw
dec
in
test
xchg
dec
xor
sbb
cmp
cs
cwtl
mov
or
adc
js
jo
ficoms
mov
insb
jne
jle
fistpll
imul
cli
inc
add
loope
mov
sbb
jbe
aad
xchg
pop
cmpb
mov
icebp
inc
push
sbb
sbb
or
test
int
jge
or
fisttpl
test
or
or
dec
jb
repz
inc
push
shrl
push
xchg
xchg
xor
sbbl
dec
add
lret
inc
adc
sub
or
pop
mov
dec
or
aad
dec
iret
mov
mov
cmp
scas
xor
mov
lret
fwait
loop
add
jo
inc
mov
aas
cwtl
les
xchg
gs
or
call
fisubs
jnp
pop
cmpsb
std
stos
subps
lea
aam
xchg
fsubr
cwtl
mov
cmc
aad
stc
mov
sub
out
sub
add
repnz
leave
inc
sub
xchg
pop
lds
scas
cmp
imull
andl
mov
insl
push
mov
push
inc
outsl
lret
std
sub
stc
inc
addr16
sub
cwtl
xchg
push
orb
push
scas
xor
adc
push
or
adc
pop
sub
out
das
add
mov
mov
jb
icebp
call
aaa
sbb
push
dec
add
xchg
jns
test
nop
outsl
mov
xor
addr16
mov
je
inc
fmulp
outsb
shlb
fisttpll
je
inc
fptan
and
ds
dec
icebp
push
jp
push
or
ret
fadds
std
xchg
outsl
push
push
dec
int3
cltd
fbstp
jnp
sub
inc
cmpl
sbb
icebp
pop
dec
lock
mov
and
push
inc
mov
lock
lea
lods
mov
aas
scas
cmp
daa
cli
jmp
push
add
xor
stos
mov
jbe
push
daa
popa
gs
or
xchg
sub
cmp
mov
xchg
sub
das
out
sti
cmpsl
test
gs
lret
jnp
loope
add
xor
or
std
ds
mov
cmpsb
sahf
adc
loope
mov
addr16
mov
xor
adc
or
pushf
xchg
cli
cmp
add
fildll
mov
outsl
std
add
int
or
cs
pop
pop
in
in
mov
lods
push
push
enter
and
pop
sbb
cmpsb
test
mov
push
aad
push
lea
mov
lock
in
insl
mov
aaa
test
push
mov
rcrb
pop
fisubrs
and
mov
xchg
jae
es
lcall
hlt
and
and
gs
sub
push
inc
cmp
add
lds
lahf
sahf
inc
sarl
out
aad
subl
mov
repnz
aaa
mov
mov
js
ficoms
inc
pusha
mov
add
mov
mov
xor
movsb
add
add
lock
xchg
xchg
stos
fwait
xchg
xor
inc
stos
mov
movb
push
push
add
mov
push
or
mov
movhps
fwait
jno
scas
add
pop
sarl
hlt
mov
pop
aas
lds
sub
jle
repz
cmc
lret
mov
movsb
orl
fwait
les
int3
lcall
mov
loopne
imul
lret
push
iret
pop
scas
add
dec
mov
aas
xchg
jno
cmp
sarl
in
push
fwait
dec
inc
fbld
xor
idivl
xchg
mov
ds
cmp
and
icebp
push
lock
sbb
push
jecxz
mov
jmp
push
sbb
lcall
stc
shr
out
mov
adc
add
adc
in
sar
sarb
sbb
add
fiadds
inc
inc
lcall
jl
add
dec
mov
outsb
out
pop
mov
sub
xor
iret
in
xor
ret
cs
push
int
cmpb
dec
lahf
aam
aas
mov
repz
sbb
xchg
jno
push
pop
xchg
dec
mov
cmp
mov
imul
fdiv
in
inc
enter
and
call
mov
aam
mov
xor
scas
dec
xchg
dec
mov
ds
and
xor
pop
xlat
push
push
adc
mov
pop
jo
pop
pop
cmp
mov
push
jmp
repz
rclb
cld
xor
or
mov
sub
movq
pop
imul
pop
loop
loopne
fdivl
adc
mov
stos
mov
mov
inc
xor
push
jg
adc
pusha
push
in
sub
sbb
push
pusha
inc
push
test
mov
hlt
stos
gs
jbe
incl
sub
jp
ret
movsb
dec
push
adc
rsqrtps
rcrb
lret
sub
test
lcall
gs
in
loopne
cmpsl
in
mov
scas
mov
aad
rcrl
pop
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
cmp
popa
bound
pop
bound
aad
mov
loopne
and
popf
xchg
in
jae
int3
jbe
outsl
add
jns
sbb
mov
sub
nop
pop
mov
cltd
lds
iret
inc
xchg
aad
add
push
jnp
push
nop
stc
lods
stos
xor
mov
mov
pop
add
icebp
mov
and
test
aaa
test
push
push
sbb
popa
push
scas
jne
inc
repnz
cwtl
jo
inc
out
xor
dec
test
mov
mov
lods
fdivs
xchg
xchg
xchg
cmc
cmp
inc
in
lcall
sub
lods
pop
cld
outsb
or
xchg
out
sahf
das
inc
sarl
and
aaa
jnp
xchg
cltd
cmp
in
cmp
mov
jge
aam
pop
push
mov
mov
mov
stc
xchg
and
movsl
xchg
adc
mov
loope
cli
inc
cmp
push
arpl
lods
or
outsb
xor
stc
ja
lahf
mov
clc
icebp
loope
pop
test
leave
fistpl
bound
add
mov
je
and
iret
cli
xchg
and
cwtl
sbbl
lahf
lahf
shlb
dec
fucom
push
mul
sub
fwait
or
dec
cltd
jge
fucompp
aam
jle
mov
pop
jl
sub
push
mov
aam
lcall
aad
jecxz
out
test
mov
xchg
xchg
lods
xchg
sbb
js
xorl
mov
add
sub
xor
and
int
adc
adc
xor
arpl
int3
mov
pop
daa
int3
scas
cltd
ficomps
mov
stc
inc
insl
out
push
fiaddl
clc
lods
jbe
andb
adc
pushf
je
jb
inc
sbb
outsl
xor
pop
insb
mov
and
fwait
outsl
mov
dec
std
mov
adc
bound
jbe
aam
ret
je
sub
pop
clc
ljmp
mov
add
mov
les
popa
jge
test
cli
cwtl
shlb
hlt
or
pop
adc
adc
das
fdivrl
fnsave
push
mov
push
push
out
cmp
sarb
les
mov
add
or
lock
or
pusha
push
scas
int
pushf
mull
mov
mov
cmp
xchg
or
and
or
fidivrl
repz
or
mov
xchg
xchg
jl
scas
add
aaa
add
xacquire
xorb
push
sub
xchg
repnz
cmpsb
dec
pop
or
ret
fiadds
fisubl
mov
jne
aam
sub
pushf
sti
mov
ss
dec
jno
and
shlb
xor
out
xchg
outsl
sbb
outsb
js
pushl
shlb
pop
lcall
mov
cmp
pop
enter
orl
ds
cmpsb
mov
insl
add
test
xchg
mov
mov
xchg
pop
mov
jge
dec
in
sahf
imul
lret
mov
inc
push
sbb
popf
jmp
sbb
aad
lock
mov
mov
lret
xor
inc
mov
or
or
sbb
in
divl
mov
fisubrl
je
imul
cli
sub
jne
jmp
sbb
fldl
mov
pusha
mov
movsb
cmp
into
xor
int
mov
pop
inc
inc
aaa
push
int3
xchg
stos
rcrl
cmp
jne
daa
outsb
jae
mov
dec
in
outsl
cld
sbb
dec
cmp
in
and
cmp
sub
inc
sbb
cmpsb
sbb
xchg
ret
sub
push
pushf
setg
out
stc
push
test
shl
cld
jno
jns
in
adc
mov
mov
fdivrp
jle
je
push
and
dec
xor
loop
mov
xchg
push
inc
push
repz
inc
or
jns
aas
insb
enter
addb
lods
outsl
and
arpl
arpl
ret
jl
xchg
mov
data16
push
mov
jo
inc
lds
jecxz
or
outsl
sbb
cmp
lret
int3
jl
add
in
dec
sub
xchg
xor
fyl2x
mov
pop
jne
inc
xchg
outsb
sarl
mov
mov
add
xchg
sarl
and
and
scas
out
shll
movsl
fidivrl
int3
shll
jl
mov
xor
sbb
test
mov
sbb
repnz
addl
mov
icebp
pushf
test
xchg
xor
mov
movsb
and
out
add
aas
and
push
loope
out
bound
fidivs
inc
mov
sub
andb
ja
xchg
mov
cwtl
cld
je
sub
int3
xchg
dec
adc
xchg
sub
dec
mov
pop
loope
sbb
movsl
pusha
push
fidivl
mov
xor
jmp
xchg
ds
mov
sub
mov
fsubrp
sub
cmp
and
shrb
es
jecxz
inc
sbb
adc
jae
sub
pusha
dec
leave
js
xchg
mov
mov
cmp
insl
mov
ljmp
mov
outsl
dec
mov
enter
mov
jg
imul
sub
fdivs
jno
into
mov
xchg
mov
test
scas
mov
xor
ficompl
test
sub
push
cmp
lods
mov
lret
mov
dec
push
sbb
mov
scas
iret
cmp
into
xchg
inc
and
cmpsb
sbb
arpl
jge
mov
and
cmp
into
loop
repz
cmpb
test
sbb
cmp
lds
xlat
xorb
mov
sub
push
sub
imull
mov
xor
mov
fmuls
int
lods
adc
mov
repnz
and
sub
push
jnp
insb
ljmp
out
js
sub
xchg
mov
loop
fnstsw
sub
sbb
adc
sub
dec
ret
aam
movsl
incl
inc
mov
mov
jmp
adc
add
pop
arpl
push
sbb
out
cltd
mov
jg
sub
daa
jo
insb
sbb
sub
in
rcll
inc
in
into
mov
push
pop
bound
jmp
stos
scas
sti
stos
dec
out
jg
mov
mov
or
and
insb
xchg
xchg
es
test
subb
mov
jne
pop
push
outsb
mov
ja
jbe
pusha
out
adc
lret
lret
adc
mov
push
jp
or
push
mov
es
outsb
fs
test
pushf
das
cltd
or
jb
imul
jne
test
jnp
testb
lock
sub
mov
mov
testl
add
xchg
cmc
or
dec
scas
mov
mov
movsl
fcoms
xor
pop
lods
inc
call
add
decl
xor
jle
dec
rorl
idivb
test
popf
enter
lret
out
data16
mov
push
repz
sub
jmp
lock
adc
enter
lret
and
lods
jmp
andb
push
inc
int3
push
mov
je
add
pushf
es
popf
pop
or
mov
std
sbb
adc
bound
inc
test
js
enter
mov
mov
popf
or
dec
add
add
adc
mov
fidivs
sub
movsl
push
push
inc
call
pop
pushf
fstps
push
mov
cmpsb
insl
ds
mov
push
lock
mov
cmp
lods
xor
nop
dec
jns
push
ljmp
movsl
adc
nop
inc
arpl
inc
fisubrs
mov
push
repnz
lcall
pop
dec
mov
xchg
lret
inc
or
inc
push
fnstcw
pusha
pop
xchg
sub
sbb
push
loopne
jmp
xchg
repz
adc
stos
jb
insl
icebp
add
cmpsl
mov
jno
pop
mov
cmp
mov
loope
pop
jne
pop
cmp
jecxz
xor
ds
outsl
loop
stos
adc
stos
repz
dec
inc
mov
and
fldl
push
call
jmp
jno
iret
pop
aam
and
cli
mov
jle
ret
add
aam
xchg
test
int3
lods
jecxz
pushf
jb
dec
cmc
pop
xor
mov
imul
jecxz
lahf
jg
add
mov
mov
pop
ds
dec
inc
hlt
xchg
fisttpl
bound
hlt
jb
mov
mov
lds
or
test
and
mov
add
test
dec
gs
cmp
mov
xchg
ret
fistl
fwait
push
subl
push
jg
jo
cmpsb
mov
icebp
and
mov
stos
jns
cmp
cmp
and
push
adc
pop
xchg
jo
data16
js
outsl
lret
pop
sub
cmp
mov
and
shlb
or
test
in
mov
loop
push
push
ljmp
push
lret
add
cmpsl
push
ud2
add
mov
loopne
inc
push
dec
js
mov
rcrb
jg
mov
out
pop
inc
cmpsb
jecxz
aaa
jne
pop
pop
arpl
mov
push
mov
repz
sub
xchg
out
cmp
push
cmpb
leave
pop
mov
scas
cmp
test
add
and
das
fnstsw
dec
cmp
mov
jecxz
div
mov
xor
push
pop
adc
sarl
pusha
call
pop
mov
and
xor
mov
jb
sub
push
in
mov
cmp
mov
popf
or
aad
xchg
fisttpll
in
inc
int3
inc
jmp
inc
jge
fisttpl
bound
test
add
push
test
aam
jl
ds
dec
adcb
xchg
mov
popa
push
xor
mov
jbe
fisubrl
and
iret
inc
jnp
inc
xchg
push
stos
jg
push
in
xor
jae
mov
addb
lret
or
popf
pusha
add
push
inc
hlt
stc
xor
lcall
lds
cmp
stos
stc
scas
outsl
jns
ja
xlat
inc
xchg
sbb
sbb
in
scas
xor
rcll
pop
arpl
lea
lcall
add
xchg
arpl
insb
pop
call
out
lahf
ljmp
cmpsl
xorb
pop
xchg
cmp
bound
xchg
out
enter
cmp
xchg
add
mov
cmpsl
dec
cmp
out
dec
sbb
xchg
pop
ja
mov
mov
sbbb
xorb
xor
inc
hlt
hlt
add
jl
cmp
adc
cwtl
push
outsb
xor
jo
mov
add
pop
jl
pop
int3
call
dec
cli
jb
into
cmpsb
popa
insl
in
dec
dec
scas
cli
and
aad
int3
push
mov
movsl
push
mov
mov
outsb
xchg
shll
mov
jl
mov
mov
mov
pop
dec
pop
fcoms
in
popf
mov
add
cmp
ja
sub
dec
xor
into
push
fwait
mov
cmp
mov
je
fcomps
fldcw
rcr
xlat
inc
cwtl
jp
push
movsl
es
push
pop
mov
inc
and
or
ret
lock
lcall
and
lcall
clc
push
mov
cmp
add
xchg
shl
jmp
jns
daa
fldl
lret
imul
jo
iret
jmp
cld
lods
xlat
sub
cmp
insb
mov
addb
popf
sbb
jbe
xchg
sub
push
loopne
pop
mov
dec
test
test
mov
xor
add
call
xchg
pop
lret
negb
into
jmp
je
roll
rcll
mov
psllw
repnz
insl
ret
subb
popf
push
cmpsl
pop
inc
adc
and
aad
stc
push
mov
in
insb
or
cmp
xor
xlat
xor
mov
in
lods
aas
les
shlw
cs
test
jecxz
data16
jecxz
add
ss
xorb
sbb
ret
fildl
data16
aad
daa
stos
and
push
pop
cs
push
stc
cltd
mov
add
sbb
add
jge
int
xchg
mov
pushf
mov
sbb
nop
xchg
xor
dec
mov
xor
mov
es
and
cmp
ja
testb
sbb
into
les
xchg
ficompl
dec
jo
push
mov
sbb
roll
push
sti
push
loope
pop
pop
fisttpl
inc
out
mov
push
dec
adc
punpcklwd
jnp
xchg
scas
xchg
mov
jne
dec
dec
int3
xor
dec
cmp
cmp
inc
aaa
cwtl
or
int
pop
mov
lea
movsb
mov
sbb
cmpsl
push
pop
add
jne
sbb
jbe
movsb
call
pop
cmpsb
sbb
sub
daa
inc
pop
sub
test
pushf
xchg
cmp
sbb
and
inc
movsb
cmpsb
fimuls
and
add
call
mov
mov
lret
lahf
cmpsl
int3
mov
pminsw
jmp
fcompl
lret
testb
bound
test
imul
pop
in
adc
jecxz
jecxz
pop
rorl
push
ret
jae,pt
jae
mov
xor
pop
loopne
adc
ret
xchg
aam
pop
sub
frstor
test
cmp
sbb
push
loopne
xlat
cmpsb
mov
mov
fwait
sub
inc
aaa
lcall
sub
adc
fsubp
pop
in
xchg
pushf
pop
inc
mov
push
mulb
sub
mov
dec
cmpsl
andb
push
pop
dec
je
or
cmp
pop
dec
dec
sbb
dec
sbb
inc
repnz
aad
jmp
mov
cmpsl
jge
xchg
mov
cld
sub
sub
test
ljmp
and
and
adc
or
mov
mov
inc
sbb
imul
leave
push
mov
xorb
xor
adc
popf
mov
pop
into
imul
pusha
jo
out
cmpsb
hlt
mov
or
cmp
lock
mov
lret
inc
lods
mov
subb
inc
jae
out
std
popf
mull
sbb
movsl
and
xor
mov
in
or
xchg
push
mov
rorb
movsl
outsb
fisubl
adc
ja
in
pop
mov
rclb
iret
repz
mov
outsl
mov
jne,pn
jg
mov
push
ds
fbstp
jg
outsb
jecxz
in
push
add
loope
jo
popl
mov
pop
pop
jecxz
and
das
mov
or
jae
out
add
stos
inc
and
or
mov
add
outsb
pop
outsb
roll
xor
cwtl
fcoml
ja
fwait
adcl
xor
xor
pusha
adcl
adc
stos
insb
and
cmp
scas
pop
cld
or
outsb
movsb
push
lds
fisttpl
jbe
dec
inc
pushf
adc
ja
adc
leave
bound
mov
push
in
aad
lods
mov
sbb
xchg
mov
or
add
pop
faddp
push
out
lahf
lcall
mov
aad
add
or
jmp
addr16
xlat
out
or
sbbl
xor
into
repz
mov
sub
xor
xchg
inc
addb
xor
aam
pop
aad
pop
adc
push
dec
xlat
hlt
sub
aas
inc
and
sbb
ljmp
jnp
fwait
inc
ja
enter
cmp
or
rcrb
lods
imul
sbb
ds
js
hlt
sub
ja
mov
add
inc
push
stos
outsb
mov
jge
jp
fidivrs
jnp
mov
jbe
cmp
jno
test
es
ja
faddl
mov
fsubrl
cmp
imul
mov
rol
loop
pop
mov
fadd
cli
dec
dec
cs
scas
ja
inc
inc
push
fcoms
movsb
mov
fidivl
or
add
ljmp
xor
mov
out
jge
sarl
rolb
xchg
imul
dec
jne
push
pop
fld
sbb
subl
push
mov
fs
cs
ljmp
xor
je
pop
or
jmp
lcall
sbb
lahf
lods
outsb
push
pop
scas
movsl
fdivrl
cs
dec
jl
in
pop
insl
mov
sub
jae
add
lahf
aaa
rol
repnz
xor
jne
cmp
mov
movsb
aam
push
movb
sarl
add
dec
jo
mov
pop
andl
push
mov
movsl
dec
cmp
xchg
mov
cmp
jbe
pop
cmpsb
addl
in
test
cli
push
sti
and
cmp
ljmp
cmp
cmpsl
jmp
pop
rclb
mov
add
inc
addr16
ret
xor
pop
jnp
lods
push
lods
sub
push
out
sbb
in
js
adc
fstpl
or
and
loope
mov
rclb
push
aad
mov
mov
cmp
cmp
loop
mov
cwtl
ds
idivl
add
cmp
lods
jmp
add
movl
aas
push
mov
dec
xor
jnp
js
dec
out
fimuls
inc
push
fcmovnb
add
xchg
stc
or
inc
xlat
into
push
adc
mov
out
mov
rorb
cmp
lods
pop
fcmovnb
jmp
call
fisttps
adc
adc
fmuls
mov
dec
lock
popf
pop
enter
jbe
in
push
cmc
les
add
jae
xchg
pop
loopne
and
lea
mov
out
mov
pop
jbe
out
pop
and
int3
fnstcw
jl
insl
mov
cmpsl
sahf
sti
xor
push
mov
mov
jl
jl
mov
jne
faddl
lcall
pop
dec
data16
xor
imul
shlb
movsl
lods
cltd
leave
push
cld
fucomi
jmp
mov
inc
add
fucom
daa
shrb
and
out
mov
push
por
pop
mov
int3
test
movsb
jecxz
pop
mov
mov
xor
mov
iret
ret
or
lcall
mov
jne
addr16
enter
xor
movsl
mov
adc
int
aas
cli
sbbb
jp
xchg
leave
dec
xor
mov
or
jo
int3
push
mov
test
addb
test
imul
dec
filds
shrb
sbb
adc
adc
xor
xor
cs
test
rolb
lcall
xchg
jnp
fldcw
insl
lock
movsl
js
lahf
icebp
push
and
inc
mov
int
inc
bound
sti
xchg
mov
and
cli
lds
xchg
test
sbb
cmp
hlt
inc
cli
scas
jae
sbb
pop
xchg
cwtl
inc
addb
int3
sbb
stos
mov
sub
lods
je
cmp
aaa
shlb
pop
test
jecxz
lret
mov
jnp
push
inc
push
sub
ret
push
test
adc
lret
fwait
or
mov
mov
in
push
xor
lret
xchg
push
idivb
stos
jno
cmp
inc
xchg
jp
push
cmp
fwait
int
sbb
mov
out
xchg
leave
stc
adc
sbb
pop
cmpsl
ljmp
fisubrs
add
mov
mov
lcall
subb
sub
inc
dec
gs
cmp
push
dec
mov
lahf
addr16
lock
sub
cmp
aaa
sbb
cmpl
cmp
lock
push
mov
out
sahf
int
pop
arpl
jle
xchg
jmp
or
push
into
enter
inc
mov
shrb
lcall
dec
mov
mov
sub
xor
divb
out
pop
mov
mov
and
lods
ret
inc
push
inc
sbb
adc
and
cmpsl
js
mov
xchg
fists
jp
mov
les
stc
lds
mov
into
inc
push
mov
jb
dec
jg
rolb
notb
out
movzbl
cmp
int
sub
push
fs
pop
test
fsubrp
jecxz
xchg
xor
sbb
shll
and
call
rorb
imul
dec
cli
arpl
xchg
das
mov
stos
gs
repnz
adc
xchg
push
push
inc
sbb
dec
xchg
dec
fs
cmc
adc
test
cs
rol
push
jmp
lods
icebp
push
mov
pusha
test
push
int
mov
pop
sub
jns
xchg
inc
xor
mov
lahf
jae
xor
mov
idivl
mov
push
outsb
inc
sub
mov
fstpl
pop
dec
pop
sbbb
scas
xchg
cmp
push
cmp
xor
ljmp
xchg
and
adc
popa
fwait
xchg
testl
repnz
adc
mov
push
cld
ljmp
and
adc
aas
ret
cs
push
movsl
loopne
jns
js
and
mov
cmp
aad
repz
mov
enter
cmc
dec
in
out
sarl
dec
ficoms
data16
mov
jecxz
push
fidivs
in
or
adc
mov
add
inc
icebp
xchg
sbb
in
push
rcll
leave
imul
daa
mov
mov
add
and
out
divb
aaa
add
mov
jmp
pop
xor
mov
push
xorl
in
cmp
test
movsb
fsubrs
data16
in
arpl
push
loop
jo
jae
ja
pop
jg
iret
dec
fbstp
add
add
ret
push
repz
jl
mov
mov
int3
fs
in
xchg
mov
adc
mov
adc
push
scas
js
sub
push
cltd
scas
push
push
sub
mov
xor
orb
scas
fsubrp
or
mov
mov
arpl
mov
cwtl
sbb
dec
cmp
insb
xor
push
mov
cmp
dec
add
and
rol
bound
ja
std
js
push
mov
pusha
shll
rorb
cli
fidivs
loop
dec
cmpsb
loop
sahf
mov
push
sub
fwait
xchg
fnstenv
push
loope
adc
push
mul
jb
xchg
push
rorl
mov
outsl
xchg
dec
adc
imul
in
cmp
mov
test
dec
mov
and
sbb
mov
and
getsec
push
pushf
adc
stc
add
sub
imull
fcomps
fisttpll
push
sub
and
cmp
dec
imul
or
nop
add
lds
add
or
mov
icebp
mov
adc
mov
jne
and
cmpsb
mov
mov
imul
xor
pop
and
movsl
jmp
dec
ds
mov
es
or
int
adc
cmp
or
sub
cmc
pop
cmp
fadds
add
lods
lret
mov
or
aam
mov
sub
lock
mov
adc
adc
vpshuflw
addr16
push
jo
mov
xor
sub
repnz
adcl
pushf
icebp
push
mov
sub
data16
dec
sub
mov
pop
cmp
mov
dec
inc
xor
sahf
in
xchg
inc
fsubrl
dec
mov
int
push
out
sbb
dec
js
aaa
mov
add
pop
dec
cld
stos
jmp
ljmp
gs
cld
mov
dec
pop
pop
push
gs
jae
push
movsl
movsl
sbb
cmp
mov
inc
daa
inc
mov
mov
or
inc
not
notb
stc
lds
cmp
loopne
test
arpl
xchg
je
stos
dec
cmp
cmp
cltd
test
nop
and
jecxz
fidivl
cmp
jo
stc
in
mov
loope
add
adc
add
xchg
push
in
mov
in
xor
push
out
ret
pushw
shl
pushf
movsb
imul
sbb
xchg
into
inc
lods
sbb
scas
jae
insb
pop
cwtl
xchg
aam
scas
pushf
jle
dec
sbb
jecxz
sbb
mov
dec
out
lock
divb
mov
outsl
xchg
jmp
cmp
fisubrs
dec
jl
sti
or
cmpsb
dec
cs
fisubrl
fnsave
sbb
je
xor
int3
cld
fdivl
loope
adc
daa
mov
mov
call
xchg
in
jae
push
addr16
into
inc
inc
mov
jle
rol
loopne
in
je
scas
ss
sbb
test
lock
cmp
mov
or
insb
jp
mov
addb
pop
movsl
out
ds
jmp
in
loopne
dec
stos
pop
sub
dec
sub
push
in
into
decb
mov
pop
xchg
pop
fildll
rorb
cmpsl
sub
and
je
frstor
mov
movsb
ret
imul
fst
adc
test
cltd
out
pusha
rolb
dec
mov
mov
andl
mov
push
jb
xchg
dec
mov
lcall
cmp
xchg
mov
jns
inc
inc
in
pushl
push
pop
or
inc
int3
cmp
repnz
push
sbb
push
scas
pop
fnstsw
out
mov
cmp
cmp
popa
and
mov
lods
mov
mov
xchg
sarb
adc
mov
out
jecxz
or
sbb
pushf
sub
movsl
or
sub
xor
xchg
movsb
icebp
sahf
movsb
shl
lods
cmp
fs
and
xor
inc
mov
jge
pop
sub
rorb
loope
lcall
or
adc
push
fwait
mov
out
in
mov
push
test
xor
mov
or
add
xchg
rorl
iret
push
pop
jg
inc
scas
mov
iret
jecxz
andb
jle
xor
mov
and
fldl
inc
adc
cmp
mov
adc
add
mov
mov
js
movsb
lea
dec
sub
cmpl
push
mov
xor
sahf
cld
xchg
imul
mov
sbb
iret
push
push
fisttps
add
cmp
mov
stos
dec
xor
cmp
into
sbb
aam
pusha
in
mov
testl
out
jbe
iret
addl
xchg
lods
push
cmp
mov
int
and
pop
icebp
mov
jno
ja
std
mov
leave
outsb
xor
lcall
int3
std
or
or
sbb
adc
in
mov
jno
fcoms
pop
sbb
pop
fwait
cmp
mov
lods
mov
jne
add
clc
cmpsl
or
mov
cmp
adc
push
ret
and
xor
jge
xor
push
jle
mov
and
jae
sbb
lcall
push
jge
push
or
imul
sub
cmpsl
nop
imul
cmc
mov
loope
or
xchg
mov
enter
ja
call
clc
mov
addr16
xchg
xchg
dec
add
popf
cmp
dec
lds
movsb
mov
clc
int3
into
jecxz
inc
aam
pop
test
jge
or
pop
adc
dec
ret
mov
inc
mov
jbe
push
jmp
pop
mov
sub
or
shl
inc
ret
mov
dec
out
out
push
xchg
and
adc
lods
adc
add
scas
jnp
pop
aaa
shll
sti
fldenv
xorb
push
mov
jle
mov
and
cld
sub
ficompl
sub
dec
div
imul
mov
scas
xchg
lods
dec
add
adc
rcrl
mov
cwtl
inc
inc
int3
xchg
sub
dec
jle
shl
adc
inc
das
repz
push
cmpl
mov
pop
cwtl
iret
push
repz
les
sarb
movsl
pop
ds
arpl
insl
in
jne
dec
mov
xchg
pop
cmc
pop
repnz
push
loop
repnz
mov
jnp
ja
aaa
idiv
cltd
hlt
icebp
sarb
in
test
adc
fisttpll
pop
jmp
lods
bnd
daa
mov
xchg
push
das
add
cmp
mov
ret
int
push
stos
lock
insl
ret
into
inc
adc
decl
stos
cmp
loop
je
xor
je
xor
cltd
dec
iret
sbb
pop
arpl
sahf
xor
xor
inc
mov
and
in
jmp
jnp
mov
xchg
xchg
stos
push
pop
shll
xchg
aas
jl
in
mov
mov
mov
add
mov
push
xor
ljmp
add
frstor
sbb
icebp
adc
pop
ds
inc
movsb
pop
cmp
cmpl
gs
mov
lret
xchg
cltd
or
xor
int
and
loop
dec
fbld
mov
pop
fabs
pop
push
adc
loop
push
jae
loope
xor
and
xchg
icebp
mov
lret
mov
data16
dec
movsb
pushf
xor
add
insl
in
addr16
or
xchg
xchg
subl
mov
inc
popa
in
push
lock
loopne
call
sub
cmpsl
mov
lds
je
or
mov
into
ja
mov
inc
lcall
adc
ds
scas
inc
add
xchg
xor
mov
dec
or
sbb
push
jbe
dec
and
xor
inc
or
or
pop
cmc
mov
js
lcall
arpl
push
dec
pop
sbbb
enter
push
cwtl
lahf
loop
mov
notl
mov
ss
xor
lret
xchg
call
adc
sub
mov
mov
or
rcrb
inc
xor
dec
adc
in
insl
jecxz
mov
jmp
out
inc
mov
leave
cmc
jnp
sbb
fiadds
cmc
sarb
xchg
sbb
lahf
mov
test
es
inc
jo
mov
in
mov
int
lret
jmp
fmuls
pop
das
or
jo
inc
jns
fsubrp
gs
inc
push
jnp
adcb
mov
ds
sub
pop
movsl
out
test
inc
push
jl
pop
sub
jb
push
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
cli
mov
popa
bound
bound
incb
lea
das
inc
add
rcrb
mov
in
lods
sar
cs
adc
sub
shl
out
adc
bound
call
shl
pop
testb
adc
fs
add
xchg
mov
cmc
pop
daa
dec
out
jle
mov
mov
rcrl
mov
mov
ret
adc
nop
xchg
sarb
inc
into
pop
mov
test
jno
das
pop
outsl
push
int
push
popf
inc
mov
and
cmp
test
pop
jecxz
scas
and
out
es
jmp
fsubl
and
in
nop
std
and
mov
loop
or
sahf
orl
popf
xchg
add
sub
arpl
cwtl
and
or
xchg
cmp
iret
adc
mov
repnz
test
mov
xor
and
ret
jg
sti
push
aas
mov
fsubl
and
not
lret
pop
dec
in
cli
out
cltd
sbb
aam
jecxz
add
insb
mov
push
clc
xor
popa
push
mov
mov
jl
out
adc
adc
cwtl
mov
push
clc
jle
xor
pop
subb
xorb
xor
sti
hlt
sbb
pop
lret
lods
cmpl
hlt
in
inc
loop
lcall
xchg
lock
xchg
in
scas
or
outsl
rorl
pop
fstpl
push
mov
lock
js
rorl
add
cmp
das
push
jl
sbb
clc
push
scas
sub
inc
stc
les
lea
inc
add
daa
movsl
out
sub
stc
fimull
mov
xchg
fidivs
jecxz
or
mulb
mov
jb
push
xor
pusha
aas
jmp
lock
int3
stc
lcall
mov
rcll
push
mov
push
imul
out
sub
daa
das
fcom
and
repnz
sbb
inc
jmp
rcrl
jnp
pop
jno
pop
js
cli
daa
jmp
stos
shll
jecxz
lods
sub
shlb
xchg
stc
incb
jb
mov
jp
xchg
jnp
inc
lahf
jge
sub
push
addr16
push
jge
test
dec
jp
or
hlt
shl
test
xor
sub
pop
pop
and
mov
test
inc
dec
or
sub
lret
xor
test
jnp
repnz
and
repnz
int3
test
inc
loop
xchg
mov
cs
cmpsb
xorl
iret
stc
fs
ja
loope
push
bound
iret
adc
inc
fmuls
and
ja
dec
push
je
jno
gs
rol
mov
rcrl
ds
fcmovnbe
cmp
xlat
mov
dec
fcomps
fdivr
das
mov
lea
push
adc
inc
adc
xor
mov
push
testl
mov
nop
push
xor
gs
xchg
adc
lahf
sahf
cmp
jecxz
repz
cmc
cmp
sar
fcom
mov
fdivrs
adc
inc
fwait
cs
repnz
inc
lahf
fdiv
inc
call
mov
and
nop
xor
adc
push
push
sbb
xor
jbe
imul
and
fs
add
lds
roll
xor
cmpsl
dec
sahf
in
inc
jno
adc
cmp
leave
push
sub
in
imulb
imul
insl
rclb
sbb
adc
cmp
xor
ret
leave
in
add
test
push
mov
sbb
in
mov
daa
push
sub
pop
rcll
sub
sub
jmp
inc
mov
add
insb
sub
in
push
add
fs
jb
and
negl
push
out
shll
inc
cltd
test
pop
aad
addr16
mov
loopne
mov
subl
std
cmp
xor
in
sub
mov
imull
lock
mov
je
sub
push
jnp
push
add
or
mov
xlat
inc
xor
pop
aas
rolb
jecxz
and
mov
int3
sub
push
test
adc
fstpl
xchg
int3
sbb
jnp
push
and
out
push
push
inc
jnp
ror
pushf
outsl
cmp
mov
or
cmp
adc
adcb
aaa
out
leave
clc
andb
sbb
cmp
and
pop
or
in
mov
out
jae
pop
je
fildll
cmpsl
pop
mov
push
dec
mov
xor
adc
enter
add
cmp
lcall
arpl
sbb
nop
or
loop
adc
je
adc
enter
add
xchg
cmp
or
ret
mov
sub
aad
push
push
int
add
dec
enter
jo
cwtl
call
mov
ja,pn
call
mov
and
cltd
mov
xor
loope
inc
adc
divl
inc
jne
adc
jge
insl
jo
in
in
pop
jmp
dec
in
xchg
add
push
jne
mov
mov
outsl
xor
cwtl
cmp
mov
inc
add
push
insb
shrb
shrl
iret
hlt
mov
mov
xchg
dec
xchg
ss
int
insb
add
and
mov
ror
inc
imul
test
mov
inc
aaa
jo
sahf
cmp
insl
cltd
add
cli
cli
mov
cmp
cmc
mov
aas
stc
xor
or
hlt
fimuls
ficompl
mov
mov
popf
test
fimuls
push
outsl
and
icebp
push
ss
movsl
sahf
pop
adc
ljmp
push
inc
or
repnz
mov
sub
mov
jns
push
mov
sub
arpl
stc
fdivs
or
stos
test
out
push
aam
insl
jp
mov
jne
in
rcrl
push
push
and
jae
inc
jg
cmp
xor
movsb
jg
imul
jl
out
and
lcall
sahf
or
mov
loope
imul
jb
xchg
sub
mov
ljmp
fidivrl
cli
test
mov
jl
push
mov
ja
pop
loope
or
mov
sub
outsl
aad
xchg
cs
lret
imul
sbb
bts
testb
push
mov
dec
jb
push
insb
es
fmuls
cwtl
std
pop
jno
jb
push
dec
and
push
jl,pn
cmc
out
leave
out
mov
inc
mov
xchg
push
jbe
scas
lret
and
or
test
int
dec
outsb
mull
xor
loop
and
sbbb
inc
cmc
ljmp
xchg
test
cmp
sbb
sbb
fadds
xchg
cmc
add
repnz
adc
mov
cmpsl
and
adc
mov
pop
sbb
push
mov
dec
cmpsb
shlb
fs
icebp
pop
lret
popf
cs
add
mov
dec
js
cmpl
lret
fidivrl
mov
scas
ljmp
test
mov
add
sub
jae
push
aas
dec
xor
or
in
loope
push
fsubr
cmpsl
dec
subl
jns
sub
push
ja
leave
push
push
clc
insb
push
mov
push
mov
xor
outsl
jo
mov
mov
mov
push
sub
fistps
mov
loope
sub
and
clc
xchg
icebp
xlat
jmp
ret
jge
aaa
sub
imul
or
cmp
pop
inc
or
out
push
jbe,pn
cmpsl
lret
clc
adc
cltd
out
jmp
jecxz
xchg
pop
jno
adc
shrl
les
jl
pop
mov
mov
nop
push
mov
mov
loope
mov
push
js
mov
xchg
lahf
fwait
jp
mov
gs
inc
xor
inc
loop,pt
mov
fs
shr
movsl
cmpsb
lea
les
xor
push
in
mov
aad
xchg
cmp
xchg
xor
dec
mov
call
mov
scas
cmpsl
mov
xchg
add
jg
or
dec
pushf
popf
sbb
dec
out
hlt
sbb
leave
inc
clc
mov
aad
mov
xchg
or
inc
fsubr
or
mov
pusha
loope
xchg
xchg
data16
nop
or
push
mov
mov
ror
mov
mov
je
lea
add
ss
adc
sbb
cmp
into
loop
cwtl
adcl
movsb
ds
add
loopne
js
out
jp
popf
cmp
xchg
leave
out
bound
or
loopne
push
aaa
pop
loope
pop
jl
insb
mov
flds
add
leave
xor
push
inc
je
or
shl
sub
ds
push
xchg
mov
int3
imul
mov
arpl
popf
xchg
cmpsb
xor
mov
cmc
in
dec
add
sub
jbe
imul
enter
adc
mov
lods
adc
mov
fimuls
lahf
cmp
cmp
icebp
add
xchg
dec
orb
gs
ljmp
cmp
xor
leave
movsl
in
shll
jns
ja
cmp
xchg
xor
and
loope
jmp
push
inc
and
mov
int
and
divl
in
push
and
cmp
jno
jmp
mov
adc
add
sub
xchg
test
adc
enter
shlb
into
cmp
inc
jmp
ss
mov
xchg
mov
out
inc
pop
insl
leave
fmuls
dec
mov
pop
adc
ss
jns
sub
lcall
pop
push
ret
int3
mov
xor
sub
adc
cli
and
push
jbe
icebp
test
cli
roll
adc
jmp
popf
call
fiaddl
push
adc
fwait
loope
repz
lret
call
add
and
push
inc
xchg
lods
add
test
sti
mov
mov
out
jns
int3
gs
jae
shrl
fwait
xor
sbb
push
enter
stc
adc
sbb
add
das
dec
test
cwtl
jo
rolb
xchg
jns
scas
test
sbb
bound
aas
out
pop
mov
mov
dec
aas
sub
ljmp
push
movsl
enter
les
fldt
xchg
xor
pop
pop
dec
dec
mov
xor
sahf
dec
sbb
and
aaa
sbb
test
mov
push
ficoml
push
inc
aaa
push
sbbb
or
pop
push
xchg
fsubr
cld
pop
test
jmp
loop
jne
in
pop
inc
dec
push
test
loopne
pop
push
es
test
mov
outsb
xchg
gs
xchg
movsl
and
aaa
fnstsw
push
xlat
sbb
imul
fmulp
test
pop
movsb
dec
stc
iret
leave
mov
adc
icebp
mov
mull
clc
mov
bound
fcmovb
cmpsl
xchg
jmp
nop
out
cmc
sbb
icebp
push
shlb
inc
xchg
out
lret
icebp
sahf
pop
sbb
xchg
sti
test
inc
mov
ja
ja
adc
pushf
test
mov
push
popl
push
stc
and
mov
sub
shl
call
jae
stos
addr16
jge
sarb
pop
fwait
hlt
imul
aas
and
lea
jp
scas
xor
insl
sti
jb
lcall
adc
dec
push
shlb
neg
mov
xor
sub
mov
pop
into
lods
push
lret
fisttpll
xor
mov
fwait
adc
push
mov
add
daa
xchg
mov
jbe
incl
iret
in
std
call
jno
mov
jmp
sti
popf
adc
adc
cmp
xor
mov
aad
jmp
xchg
adc
cli
cmpsb
xor
xor
or
ret
iret
xchg
xor
scas
loope
shl
iret
xchg
es
test
or
ss
ss
xor
mov
dec
jno
inc
xchg
incb
out
add
adc
sub
jge
enter
push
movsl
repnz
fwait
inc
inc
pushf
rcll
test
outsb
imul
mov
xor
xor
insb
push
xchg
jns
sbb
xchg
mov
xchg
psllq
mov
cmpsb
and
loope
lret
and
popf
gs
lcall
dec
into
pop
call
cmp
rcr
inc
stc
popa
jbe
inc
sbb
push
dec
out
pop
cli
outsl
fnstsw
sbb
mov
aaa
fdivl
sarl
pop
cmp
cli
into
sub
aam
dec
imul
loopne
sub
add
dec
scas
mov
pop
mov
dec
jp
cmpsb
decb
cmp
sub
mov
jne
cmp
pushf
sub
sub
cld
andl
add
sbb
inc
psraw
lcall
adc
xor
dec
push
bound
cmpsl
aam
adc
mov
popf
sbb
inc
outsl
mov
adc
ljmp
arpl
bnd
inc
push
xor
lgs
jnp
and
lea
ja
pop
stc
cld
in
test
cmc
lock
out
push
add
in
mov
adc
ret
inc
shlb
fisttpll
cmc
lahf
imul
fs
lret
ljmp
add
mov
inc
je
ds
mov
mov
cmpsl
andl
movsb
in
mov
pushf
movsl
xlat
or
xor
inc
aaa
in
rol
cmp
pop
adc
sub
dec
popf
mov
cmpsl
adc
lea
xchg
pop
rcrb
push
xchg
and
mov
iret
push
push
xor
sbb
imul
and
fwait
movsb
mov
int
into
jo
jecxz
cmpb
adc
cmp
ja
data16
and
int3
addr16
mov
pop
nop
test
cld
jg
mov
mov
rorb
lcall
pop
add
cmp
js
mov
popa
or
mov
fs
cmp
add
leave
outsb
dec
inc
stos
adc
andb
aaa
cmpsl
popf
xchg
loop
in
push
push
sbbl
push
popa
or
inc
xor
inc
fstp
xchg
dec
adc
shll
ljmp
out
popf
mov
push
cmp
mov
sti
fwait
movl
pusha
sub
test
push
pop
out
shll
inc
lods
arpl
into
pop
icebp
iret
outsl
dec
sub
fcompl
jbe
push
popf
xchg
mov
dec
mov
ret
ret
mov
lods
adc
sub
ret
mov
je
pop
cmp
into
fldt
pushf
pop
cmp
loope
mov
pop
mov
jle
pop
cld
call
push
ljmp
jnp
pop
mov
cmp
xchg
in
cmpl
cmp
lds
sub
mov
or
mov
je
add
sub
int3
xor
movsl
lret
inc
push
mov
out
aas
push
xchg
jnp
xchg
sahf
popa
movsl
shl
mov
cmp
aas
xchg
into
pop
add
js
xlat
movsb
pop
rcr
jne
mov
cld
xor
sti
dec
outsb
adc
popa
and
cmp
ss
stos
mov
push
stos
sar
ds
sbb
and
subb
rcll
xor
mov
aas
insb
xchg
jecxz
mov
inc
bound
pop
adc
mov
and
xchg
jle
into
or
scas
nop
pop
push
xchg
stos
mov
cltd
cmp
ja
imul
cmp
add
mov
mov
sbb
push
test
pop
imul
xlat
add
dec
mov
mov
inc
in
pop
push
cmpsl
fstl
aam
aad
dec
enter
and
and
fadd
mov
push
pop
xchg
mov
push
and
pop
mov
lretw
sub
cmpsl
dec
xor
cmp
mov
xchg
mov
jb
into
pop
xchg
add
jae
ds
jle
lahf
leave
enter
cli
sbb
aas
lret
mov
xor
cmp
inc
mov
shl
aas
sarb
subl
and
cltd
pop
loope
or
inc
adc
and
sub
scas
fadd
sarl
add
jns
cwtl
jne
or
icebp
leave
fstl
ss
pop
loopne
xchg
dec
push
xchg
jl
stos
movsb
or
pop
pop
cmp
mov
xor
cwtl
mov
inc
or
shrl
cltd
xchg
sbb
sub
jo
sti
inc
out
out
scas
inc
stc
arpl
adc
xor
int3
jnp
out
pop
imul
adc
push
cmp
repz
push
pop
rorl
push
or
lods
xchg
add
or
pusha
add
cmp
nop
popa
shrb
push
arpl
insl
loopne
jg
addr16
add
dec
shl
out
jb
test
lds
sub
xchg
rcrl
cmpsl
mov
xchg
in
jp
int
aad
dec
mov
test
test
jge
mov
mov
pop
lahf
mov
cmc
pop
and
je
pop
push
dec
cld
adc
gs
xor
sub
in
jns
xor
inc
iret
cmp
scas
sbbl
imul
les
in
mov
orb
adc
lret
or
inc
xor
xchg
into
sub
lcall
mov
mov
out
inc
das
cld
lds
enter
rclb
dec
int3
push
jl
lret
hlt
lods
call
sbb
hlt
and
shrl
scas
jae
mov
jb
pop
pusha
xor
lods
adc
xor
aas
lret
aad
mulb
out
imul
out
sub
dec
or
outsl
mov
int3
pop
lret
pushl
popl
mov
lcall
dec
sub
xor
mov
stos
adc
cmpsl
pop
mov
aaa
sub
xor
inc
and
hlt
cmp
or
mov
inc
add
incb
aaa
xchg
push
fcmovu
adc
xchg
sub
sahf
div
mov
aam
cli
inc
cmp
jb
jmp
jbe
mov
lea
or
sbb
outsl
add
fwait
mov
pop
and
pusha
sbb
cld
sbb
xchg
inc
xchg
js
test
lret
xor
push
adc
push
adcb
or
adc
or
fistps
xchg
pop
lds
aaa
and
pop
popf
add
or
mov
mov
push
mov
xor
lods
sbb
inc
mov
ret
pop
ds
sub
adc
std
and
mov
cmp
cmp
jne
aad
or
inc
or
push
dec
pushf
pusha
mov
sbb
mov
dec
push
or
push
xchg
push
int
and
mov
pushf
in
hlt
adc
call
sbb
and
push
mov
loopne
mov
xchg
imul
ret
loop
or
jge
ficoms
inc
fbstp
mov
lcall
repnz
adc
andl
cmp
mov
cmp
lods
push
popa
push
push
cmp
push
mov
cwtl
movsl
popf
pop
cmpsl
clc
je
clc
or
and
fists
fs
mov
pop
stos
rcrb
dec
das
lock
dec
repz
test
test
inc
imul
mov
mov
cld
mov
outsb
stc
dec
or
pop
ljmp
pop
loope
push
or
dec
std
ret
mov
mov
enter
dec
loopne
repz
mov
aad
sahf
mov
xchg
jnp
mov
dec
fbstp
xchg
lds
jno
fucom
stos
add
stc
test
adc
add
fwait
mov
push
in
sub
xorl
jae
sbb
aad
clc
sahf
enter
lahf
mov
cmp
pop
or
dec
test
subb
lcall
mov
stc
aad
jne
jge
xor
mov
fwait
loopne
xchg
pop
out
mov
add
and
dec
and
lret
andb
aad
cmpl
hlt
mov
push
test
jb
mov
shlb
out
push
cmp
jne
add
add
push
mov
jp
leave
sbb
movsl
imul
and
add
or
les
fimuls
lcall
in
or
int
popa
bound
scas
aaa
repz
or
xor
je
dec
out
call
std
shr
cmp
push
call
and
pop
sarl
lcall
adc
xchg
and
cmp
xchg
cmp
sahf
pop
ja
jle
stos
lea
push
mov
bound
roll
shll
out
ja
add
jns
loopne
add
xchg
adc
cmp
and
fiadds
mov
mov
mov
mov
fldl
setp
cmp
clc
insl
ret
test
mov
jne
lds
and
ret
cmp
das
jmp
jge
in
shrl
arpl
int3
mov
xor
add
popa
xor
pop
int3
std
pop
out
mov
pop
or
bound
add
push
in
loop
cmp
loopne
testl
or
movsb
or
sub
cltd
movsl
push
sbb
lret
imul
xor
cli
icebp
pusha
fs
addl
lret
inc
ds
rorb
int3
jae,pn
add
mov
in
ds
adc
lds
xchg
pushf
cmc
std
pop
sbb
jecxz
or
sub
sub
xchg
loopew
jne
js
sub
and
nop
cmp
sub
lods
scas
aam
add
jae
or
cltd
xchg
mov
xchg
and
pop
mov
fstpl
pop
add
lahf
cmpsb
jl
push
dec
jns
arpl
popf
insb
sbb
sub
aad
xchg
sahf
enter
mov
and
out
push
xor
sarb
fadds
add
mov
test
mov
mov
rcl
ret
in
mov
rcrb
popf
mov
stos
gs
ret
xchg
vpaddsw
das
bound
and
mov
mov
mov
pop
out
insb
stos
ds
pop
repz
xor
and
jge
fdivs
and
les
fdiv
adc
stos
push
outsb
iret
sub
push
xchg
jp
sahf
cld
jae
fdiv
test
addr16
mov
hlt
add
inc
mov
repnz
adc
cmpsl
mov
test
test
in
add
out
gs
out
enter
int
xor
and
pusha
inc
pop
or
imul
adc
arpl
sbb
pop
sbb
lret
pop
scas
jg
xor
lods
scas
hlt
dec
cmpsl
or
stos
stos
in
sbb
or
and
in
fdivrp
jo
stc
rcl
rcrl
push
test
push
fistpl
out
and
cmp
push
inc
shlb
mov
sub
les
icebp
jmp
mov
mov
adc
dec
jge
stos
mov
sub
push
push
jbe
cltd
mov
mov
popa
push
fnsave
cld
mov
mov
adc
negb
aaa
push
into
cmp
rclb
push
sahf
fcmovu
dec
cmp
cmp
xor
mov
lods
cmp
test
subb
inc
jmp
ss
jno
pop
cmpsb
mov
add
sub
movb
push
lds
push
test
adc
sbb
imul
data16
xchg
push
add
mov
loopne
mov
jmp
decl
sub
cli
imul
mov
mov
sbb
pop
and
fbstp
dec
in
movsl
or
adc
mov
lret
movsl
jbe
inc
imul
notb
inc
dec
and
jns
push
xchg
sub
out
xor
into
jge
push
shlb
mov
jno
pop
pop
and
arpl
pop
jns
cmpsb
xchg
andl
ret
in
and
mov
cmp
add
stos
subl
pop
jno
das
xchg
movsl
lret
iret
shlb
vmovaps
add
mov
xchg
push
sub
sti
sbb
sbb
scas
icebp
fldcw
pop
xlat
jge
movb
outsl
and
fildl
stos
nop
inc
inc
xchg
data16
lods
dec
aam
out
add
inc
cmpsb
jl
mov
test
sbb
mov
mov
test
xchg
and
nop
popa
xchg
outsb
mov
icebp
adc
cli
adc
pusha
push
cmp
mov
xorb
add
mov
inc
mov
jne
xchg
cmp
xchg
std
ss
lock
loopne
add
mov
pop
sub
dec
xchg
mov
xor
pop
and
add
lcall
pop
clc
pop
mov
xor
jnp
movsb
fwait
in
insb
add
cmp
lret
dec
pop
pop
push
xchg
xchg
adc
push
iret
leave
mov
jmp
movsl
cmc
and
mov
cmp
out
push
push
add
xchg
dec
push
rolb
dec
cmp
in
scas
jns
lods
lret
mov
jmp
add
cli
mov
popa
lcall
mov
lods
ja
aas
aam
push
and
xchg
and
sbb
in
jl
pop
and
mov
dec
jmp
in
repz
pushf
pop
mov
adc
push
xor
xchg
mov
loopne
aam
dec
sub
adc
xchg
in
sbb
in
mov
jg
xchg
cmp
adc
mov
jle
jmp
stos
out
xchg
iret
inc
jb
and
ljmp
std
out
cmp
inc
shl
push
xchg
fidivl
in
sub
sysenter
jecxz
les
adc
shl
cmp
stos
loopne
pop
jae
jnp
repz
mov
lret
bound
imul
mov
insb
std
loope
icebp
jecxz
pop
fsubp
mov
lcall
pushl
inc
dec
insl
fnsave
movsl
add
cld
xor
or
in
jge
dec
movsb
aas
cwtl
rcrl
mov
pop
push
mov
dec
mov
sub
movsl
or
or
adc
leave
adc
cmp
push
pop
icebp
xlat
or
call
push
cmpsl
aad
push
call
mov
add
xor
mov
dec
pop
je
sbb
push
outsb
cmp
bound
cmp
lds
adc
pop
out
aaa
std
lods
or
xchg
fmuls
pop
mov
negb
mov
mov
add
ljmp
inc
adc
add
mov
xchg
mov
and
mov
cli
mov
fsubrl
repz
imul
push
xchg
repnz
push
imul
insb
addr16
dec
inc
mov
sbb
inc
repnz
push
xor
mov
ja
sub
jnp
aam
je
loop
fwait
shrb
adc
enter
mov
mov
lcall
jp
and
inc
xchg
xchg
imull
mov
xchg
cmp
std
sbb
lahf
and
inc
push
ret
pop
adc
mov
int
mov
mov
dec
mov
pop
sbb
popf
pop
outsb
pop
mov
pop
add
frstor
or
stos
stos
sub
adc
cmp
fs
sti
in
and
cwtl
fistl
jne
mov
sbb
fisubrs
jnp
push
ss
adc
repz
ret
cs
jb
cmp
sbb
xorl
lahf
mov
lahf
and
not
data16
shl
and
nop
mov
dec
push
inc
jbe
loop
roll
inc
fs
jmp
insl
adc
insl
adc
push
test
dec
cbtw
mov
cs
push
mov
mov
mov
xchg
jbe
pop
repz
mulb
cltd
clc
and
xor
and
or
inc
and
imul
mov
add
ds
pusha
add
fistps
mov
in
dec
or
arpl
insb
dec
imul
xchg
pop
jmp
cmp
jae
cmc
loope
mov
dec
test
sub
inc
bound
and
jmp
xchg
mov
andnps
xor
aaa
insb
pop
sbb
into
notl
iret
or
push
movsl
pop
loopne
testb
mov
sbb
fisttpl
mov
icebp
inc
addr16
gs
adc
sub
or
fistps
lret
sahf
and
xchg
pop
scas
int3
rcr
adc
and
jle
inc
mov
insl
mov
clc
cmp
cmc
mov
loopne
int3
xor
jb
add
inc
push
pop
pop
sarl
mov
jbe
mov
shll
xlat
xor
cmp
icebp
xor
ss
push
repnz
push
movsl
add
dec
inc
xor
inc
or
in
xchg
mov
mov
test
pop
or
dec
leave
push
popa
or
jnp
gs
and
scas
inc
sahf
jbe
cltd
sahf
push
scas
stc
inc
pop
cld
out
shll
flds
push
flds
enter
cld
jae
mov
lret
jbe
imul
pusha
stos
cmp
fcoml
jb
loop
mov
pop
rorb
mov
scas
xor
jecxz
adc
insb
test
movsb
xchg
jno
mov
decl
jo
sbb
mov
mov
jo
out
stc
out
aad
iret
jnp
dec
fadds
xor
cwtl
or
xchg
jae
cmp
outsl
push
loop
push
push
das
push
and
testl
xor
ret
mov
fdivrl
jbe
inc
adc
jb
popf
stos
enter
stos
dec
jbe
sbb
add
jl
push
and
lret
and
xor
out
dec
inc
jnp
xchg
dec
xchg
jns
test
lock
pop
test
popa
mov
cmc
jbe
cpuid
jg
push
ds
lock
mov
ret
outsb
mov
imul
fmulp
lds
lea
jecxz
xor
lods
jmp
std
add
nop
push
pop
adc
andl
cmp
out
dec
insl
add
shrl
sub
dec
xor
cld
stc
loop
push
dec
sub
xchg
ficoms
imul
inc
mov
cmp
mov
in
aad
xchg
pop
pushf
dec
pop
mov
cmp
icebp
scas
jo
out
mov
call
mov
xchg
ret
ljmp
cmp
adc
xor
mov
push
and
mov
hlt
jg
xor
xchg
sub
gs
jp
in
xchg
decb
inc
in
enter
jns
data16
adc
jle
jg
xor
divb
imul
lret
pop
lcall
adc
push
in
jns
shl
push
pop
fmull
push
pop
in
xor
push
neg
mov
aad
bnd
and
dec
ds
lret
lea
or
pushf
cmp
int
into
pop
movsl
push
add
pop
jae,pt
xchg
out
mov
mov
inc
sbb
add
mov
add
add
inc
add
dec
xchg
add
add
add
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
or
loope
popa
bound
bound
scas
clc
dec
cmp
ljmp
add
xor
adc
or
subb
and
adc
sub
inc
rorl
xchg
xchg
xchg
fcmovnb
jo
push
filds
jae
in
mov
pop
cmpsl
or
mov
sbb
nop
mov
xchg
scas
jnp
sub
pop
lods
pop
sbb
sub
xor
cmpsl
decb
stc
insb
sub
test
popa
inc
adc
cmp
cwtl
and
sarb
shrl
inc
xchg
mov
or
xchg
adc
xlat
fdivl
sub
outsb
sti
sbb
sbb
cld
push
pop
and
or
mov
push
testl
sbb
cs
pop
into
sar
pop
pop
pop
test
push
invlpg
fadds
cs
jne
lea
mov
ret
call
mov
popa
cmp
pop
stos
or
or
mov
add
cmpsb
lods
mov
ret
movsl
mov
idiv
int
out
orl
imul
fucomip
lea
inc
in
pop
jp
cld
sbb
repz
or
loop
cmp
xchg
es
inc
dec
idivl
jmp
aaa
in
not
imul
lret
in
add
mov
or
adcb
bound
shll
pushf
cmp
jae
dec
gs
sbb
aas
sub
repnz
push
add
out
xchg
outsb
pop
aaa
stc
lret
out
orl
pop
push
jecxz
mov
xchg
dec
push
gs
pop
adc
icebp
sbb
loopne
cmpsl
and
push
xchg
cmpsb
lret
mov
jno
lret
test
dec
xchg
inc
and
mov
and
xor
aam
daa
pop
mov
lahf
scas
adc
shrl
add
leave
ror
fldenv
insb
add
sbb
scas
cmovle
dec
cli
inc
sub
xchg
add
mul
fnstenv
fdivrs
mov
inc
xchg
pop
fisttpl
dec
lods
ret
sub
sbb
insl
test
scas
jae
mov
incl
inc
mov
aaa
jp
push
add
dec
scas
mov
out
cmc
std
jo
rolb
sbbl
fistl
out
jp
push
lds
leave
aaa
sti
mov
pop
std
clc
xor
data16
ja
inc
mov
pushf
xchg
mov
lods
sub
aam
xchg
mov
mov
js
mov
xor
test
add
mov
push
sub
in
cmp
lret
into
shll
jl
mov
loopne
xor
out
out
push
inc
add
testl
push
lods
mov
fdivp
jge
pop
jo
xorl
and
scas
jb
adc
mov
cmp
pop
lret
cmp
and
lahf
push
sbb
hlt
mov
pop
mov
gs
and
push
cmp
mov
addr16
jbe
ret
into
mov
loopne
lods
movsb
mov
dec
js
xor
add
xchg
or
inc
idivl
aam
sbb
add
bound
loop
aas
dec
jmp
ss
das
aas
xchg
hlt
mull
popf
insb
lahf
xchg
frstor
outsb
adc
mov
or
pusha
sbb
lcall
pop
cmpl
inc
lahf
in
popf
imul
flds
clc
repnz
cltd
xor
lahf
mov
adc
outsl
cmpsl
push
pop
shlb
repz
dec
inc
cmp
dec
and
lea
push
dec
imul
nop
inc
shlb
mov
mov
jmp
cmc
dec
fs
mov
rol
movsl
mov
pop
mov
jbe
call
test
or
or
push
inc
je
hlt
cmp
push
jae
cmpsb
hlt
ljmp
xchg
movsb
gs
fwait
insl
sub
mov
pop
nop
push
js
out
or
outsl
pop
hlt
clc
idiv
jl
cmc
fildll
dec
push
lods
addr16
jmp
push
inc
insb
or
sub
cmpsl
out
mov
add
sub
int3
jo
xor
xchg
inc
cmp
mov
inc
in
pop
js
pop
inc
cmp
nop
dec
dec
adc
aam
inc
ljmp
add
and
xlat
mov
xchg
mov
add
lock
inc
inc
mov
and
loop
dec
lahf
insb
cmp
idiv
mov
mov
out
popa
sbb
clc
std
iret
jge
mov
and
jecxz
pop
fsubrs
or
adcb
mov
insb
repnz
fstps
and
jle,pn
add
in
rcr
mov
adc
lret
mov
adc
mov
inc
add
push
dec
push
lods
popf
pop
es
fidivs
xchg
mov
popf
adc
sub
sub
inc
call
pop
dec
mov
enter
xchg
dec
cs
lahf
mov
sub
aam
dec
adc
in
inc
hlt
xchg
iret
lods
push
adc
push
sbb
add
jmp
and
push
cmpsl
adc
test
jl
call
push
daa
fidivrl
arpl
push
xor
push
adc
mov
outsb
xchg
mov
xchg
adc
outsb
les
mov
fmull
cmp
daa
sarl
or
addr16
pushf
lock
cmp
mov
sbb
jnp
nop
shl
test
xor
leave
xor
mov
nop
inc
in
orb
jo
mov
xchg
outsb
adc
shr
dec
aas
mov
stos
addr16
gs
psrlq
aad
lods
cmp
xchg
xchg
xchg
mov
arpl
push
addr16
lods
inc
cwtl
xor
mov
ljmp
insb
pusha
push
sub
movsl
xchg
ss
pop
push
in
fstpl
call
sahf
shrb
ds
and
add
add
xchg
negl
ja
mov
dec
xchg
outsb
insl
push
outsl
jno
fwait
cmpsl
std
add
xor
lret
cmp
jnp
test
das
inc
adc
push
pandn
sbb
in
dec
scas
lret
or
add
xor
add
stos
lahf
or
mov
push
outsb
xor
jmp
popa
xchg
mov
and
fiaddl
popa
es
pushw
repnz
cmp
outsb
mov
sub
or
push
rcrb
imul
in
pop
hlt
iret
fisubl
movl
dec
shlb
jmp
out
test
sbb
sub
sbb
mov
add
jae
lea
jo
cmp
jne
jg
repz
mov
pop
dec
jne
pop
sbb
clc
pop
addr16
jge
js
dec
cltd
test
cmpsl
sti
das
jnp
sahf
dec
or
mov
stos
or
dec
aad
test
insl
cmp
mov
iret
lea
mov
sbb
in
xchg
sub
or
sub
dec
or
mov
xor
push
jbe
sub
dec
std
pop
push
fistpl
imul
push
cwtl
sbb
mov
xchg
daa
in
sti
pop
leave
loopne
xchg
ljmp
cli
insl
movsl
sbb
xchg
mov
adc
push
scas
xchg
pop
jecxz
repz
pop
xor
push
push
cmpsb
cltd
xor
fistl
cs
pop
dec
add
and
cmpsb
sub
sti
sbb
out
cmp
es
inc
pop
je
xchg
mov
fisubrs
mov
arpl
push
adc
rcrl
pusha
cltd
jle
andb
and
mov
in
sbb
sub
movsl
aad
push
insb
inc
cmp
enter
int
call
mov
gs
push
sbb
pushf
fsub
std
lea
in
xchg
mov
orl
lahf
cmc
js
or
sub
aad
hlt
idivb
mov
pop
pop
loop
sarb
add
out
adc
fstps
mov
lahf
push
aaa
sub
scas
mov
mov
stos
aaa
int3
es
mov
push
push
push
or
je
pop
mov
loop
out
jg
sub
ror
ret
or
je
test
cld
aad
or
xchg
js
jns
movb
enter
mul
shlw
xor
dec
std
jle
popa
add
fistpll
mov
int3
dec
iret
push
jecxz
daa
jb
leave
imul
leave
or
mov
push
das
jp
ljmp
imul
dec
push
cld
in
fwait
inc
xchg
test
and
pop
sub
arpl
inc
adc
jge
stos
pop
in
xor
mov
and
ret
and
imul
rorb
js
dec
cmpsb
jge
mov
push
adc
dec
decb
aaa
out
push
adc
shll
inc
lods
sub
push
pop
enter
out
push
cmp
ss
dec
mov
and
cmp
mov
xchg
add
or
cmp
pop
ljmp
not
arpl
inc
push
mov
add
shlb
pop
push
dec
scas
mov
lods
push
push
jo
orl
inc
push
xchg
add
push
sub
xlat
pop
mov
in
adc
mov
mov
jo
inc
jle
pop
aad
xchg
jp
adc
call
aad
inc
test
cmp
icebp
mov
outsl
mov
jnp
aaa
negl
jo
jp
loopne
imul
cmp
int
insb
push
dec
sub
stos
daa
lret
arpl
std
jne
outsb
lret
inc
mov
xchg
fisubrl
into
enter
mov
pop
div
add
sub
inc
jo
xor
repnz
mov
ret
dec
lret
sub
mov
out
lcall
test
mov
mov
call
add
xchg
mov
gs
lahf
xor
push
push
or
adc
xchg
pop
push
dec
pop
sti
mov
cmpsl
dec
cli
push
cmp
inc
cltd
inc
or
enter
dec
xchg
xchg
jne
sub
add
xor
adc
xchg
popa
jp
mov
insl
out
mov
jge
cmp
aam
outsw
fwait
rorl
mov
mov
fsubrp
xchg
cltd
popa
mov
pop
pop
mov
lds
lods
addl
mov
aad
int
in
or
in
popf
repnz
or
sbb
lret
arpl
fldenv
mov
xchg
inc
sub
push
and
xchg
xchg
adc
cmp
test
push
aad
push
adc
and
sbb
push
lret
aas
jbe
sbb
sbb
and
mov
inc
cs
aas
int
adcl
xor
addr16
sub
mov
mov
pop
add
mov
das
and
cs
mov
imul
out
ja
xor
out
xchg
mov
jl
push
or
js
fdivl
es
xor
or
sbbl
push
jecxz
mov
add
lahf
add
or
dec
adc
je
insl
mov
cld
rcl
push
mov
pop
es
aam
cmp
xor
mov
into
fs
sahf
mov
add
aam
iret
and
sbb
out
rcrb
test
js
sar
pop
pop
or
inc
cltd
adc
mov
jno
xchg
sbb
test
mov
fcompl
cli
and
lcall
mov
or
push
test
out
in
out
enter
xchg
into
scas
icebp
xchg
xchg
xchg
fsubrl
or
xchg
stos
daa
adcb
movsb
cs
sub
test
cmpsl
aaa
xchg
and
pop
xor
mov
pop
cmp
cmp
sbb
mov
mov
cmp
mov
lods
mov
addr16
insl
outsb
test
jg
dec
call
repz
js
dec
pop
adc
rcrb
jmp
sbb
inc
inc
jbe
push
xor
sarb
js
push
ret
and
and
mov
cld
ret
test
jl
or
inc
je
movb
ss
cltd
loop
popa
mov
test
sahf
fwait
in
push
pop
dec
lcall
push
addb
shlb
pusha
pop
mov
push
lods
adc
imul
into
inc
lea
mov
pop
ja
loope
in
subl
out
movsl
mov
or
arpl
pop
arpl
inc
out
push
add
inc
sbb
xor
outsb
mov
xchg
aad
xchg
sbb
loope
aad
daa
mov
dec
xorl
fisubrl
adc
sub
lds
lds
ja
xchg
add
jp
mov
popf
cmp
rorb
sbb
xor
xchg
fwait
mov
inc
xor
adc
cmp
cmp
loope
mov
cld
jl
mov
subl
jge
jb
push
bound
adc
mov
mov
adc
sbb
nop
or
xchg
stos
pop
mov
mov
hlt
cmp
addr16
call
jns
test
incl
dec
mov
out
ret
cmp
pop
pop
cs
arpl
ds
adc
dec
and
pop
dec
lds
cltd
pop
sub
or
lret
mov
and
pop
push
jg
int
jo
push
mov
inc
jle
call
mov
cld
daa
sub
or
mov
push
jle
mov
enter
imul
fidivl
dec
xor
and
mov
ja
leave
flds
jae
inc
cltd
xchg
daa
or
div
inc
cmp
inc
push
cwtl
jne
adc
pop
inc
clc
call
fisttpl
push
shrb
add
in
imul
mov
cmc
adc
fldcw
loop
sub
iret
movsb
les
jne
mov
and
in
leave
test
leave
jae
xchg
xor
ds
push
push
dec
mov
aas
sbb
xchg
insb
flds
dec
mov
xchg
outsl
lods
dec
cmpsl
mov
addr16
mov
rcr
or
mov
les
outsl
cmp
adc
jecxz
fs
inc
dec
ret
push
cmp
fsubs
mov
fisubs
loop
sti
enter
sub
fstps
cmpsb
and
add
ja
loop
inc
repz
sub
inc
stos
cmp
add
dec
mov
and
xchg
repz
mov
jae
mov
scas
and
cmpsb
mov
pushf
fisttps
lret
or
sub
fisttpll
pop
fst
imul
adc
enter
sub
lods
shr
or
repz
sbbl
xchg
mov
mov
lods
fiaddl
rorl
in
popf
sahf
int
bound
jb
or
stos
sahf
xor
loope
aad
fsub
fdivs
outsl
test
subb
dec
adc
push
jns
xchg
lock
dec
cmp
jle
adc
xchg
testl
ja
jbe
popa
push
mov
or
sbb
decl
out
mov
test
pop
push
sub
lock
orl
fwait
jle
je
fs
inc
enter
jmp
enter
data16
xchg
xor
rcr
testl
push
sbb
ret
xor
sub
insb
inc
call
dec
test
mov
mov
xor
mov
jge
sbb
mov
pop
int3
adc
je
lds
sub
shlb
adc
mov
cmp
mov
into
imul
fildl
jns
scas
cmp
inc
jl
xor
dec
movsl
push
jae
adc
scas
int
ja
sub
scas
mov
add
inc
fsubrs
or
iret
repnz
mov
mull
jne
jo
rcrb
fldenv
dec
or
rcll
sbb
push
inc
cmpsl
jno
test
addr16
sub
xchg
movsb
gs
imulb
ret
out
out
mov
xor
out
xor
xor
dec
mov
or
scas
outsb
test
aad
movsb
or
cli
popf
pop
outsl
mov
into
cmpsb
jge
push
pop
cs
cmpsl
movsb
mov
adc
mov
in
subl
aad
xor
sub
arpl
xchg
sbb
ss
paddb
repnz
mov
cwtl
mov
lds
jge
aam
dec
pop
jb
push
sbb
push
mov
mov
mov
mov
ds
ss
test
sahf
lea
dec
jb
ret
xchg
xchg
in
xchg
adc
rorl
jnp
fdivrs
cmp
aas
xchg
idivl
push
int
lock
adc
test
into
mov
in
jb
test
and
and
movsl
shrl
std
testb
andl
mov
cmpsl
in
scas
mov
repnz
pop
inc
dec
pop
test
mov
repnz
mov
addb
mov
add
gs
mov
stc
hlt
jge
arpl
pop
mov
jne
imul
out
fidivs
dec
pop
pop
adc
into
lahf
cltd
scas
or
loopne
insb
xor
sti
sbb
push
and
jno
enter
cmc
and
mov
sbb
mov
adc
lret
loopne
mov
aad
psrlw
jle
sti
or
push
bound
stc
dec
ss
fcomp
xchg
cmp
push
cmp
sbb
xor
mov
sarb
insb
push
nop
mov
mov
repz
pop
push
jne
notl
or
xlat
call
sbb
sbb
mov
fwait
pop
ljmp
mov
or
negb
pusha
aad
lea
lahf
pop
and
aas
test
out
cmp
xchg
push
cmpsb
jg
sub
jbe
or
adc
lahf
inc
mov
adc
mov
int3
pushl
pop
pcmpeqw
mov
xchg
aas
pextrw
int3
scas
sub
fimuls
shl
sub
push
cmc
sahf
mov
mov
or
pop
mov
pop
pop
pop
sbbl
inc
adc
add
and
mov
js
hlt
sbb
in
inc
int
sub
leave
sub
mov
push
push
das
mov
push
or
data16
or
sti
dec
xor
shl
mov
clc
dec
repz
insl
imul
imul
stos
sbb
jmp
cmp
push
lcall
ret
mov
lds
imul
jecxz
jmp
stos
jmp
cmp
jbe
xor
aas
aas
pop
mov
sti
dec
ss
stos
cmp
test
addb
push
sti
into
ds
jg
les
stc
and
pusha
clc
loope
lret
push
mov
and
notb
lret
daa
cmpsl
xchg
test
or
jbe
sub
push
pop
fidivs
mov
dec
add
cmp
clc
jmp
sub
adc
lock
imul
xor
jle
cwtl
ret
push
outsl
fwait
out
sbb
cwtl
outsb
lcall
loope
in
into
aas
cltd
xlat
inc
movsb
push
int3
repz
std
pop
xor
push
lds
dec
sbb
adc
xor
sub
movsl
in
mov
lea
add
std
xor
ja
mov
dec
sub
push
jg
outsb
sarb
jecxz
clc
and
cmpsl
cmpsl
mov
mov
jo
sbb
jbe
xor
push
aad
mov
clc
sti
cmp
dec
dec
xchg
jbe
ret
inc
push
je
push
icebp
inc
rcrb
xor
aaa
fwait
xor
add
xchg
fisttps
lods
divl
mov
pusha
adc
mov
mov
cmc
imul
xchg
jbe
faddp
push
cwtl
sbb
movsl
mov
xchg
mov
lock
xchg
add
sub
loopne
lds
and
push
icebp
insb
cmc
lods
xchg
xchg
mov
loopne
adc
xor
cltd
jl
or
mov
rolb
cmp
mov
push
pushl
cmc
in
dec
pop
loop
xchg
mov
add
ss
outsb
jnp
jae
nop
dec
or
cmp
mov
gs
or
cmpsb
mov
cmpsb
add
jne
add
dec
cmp
aas
aad
mov
out
std
mov
fwait
cmp
xor
negb
mov
cli
in
or
xchg
inc
jmp
notl
push
out
xor
imul
pop
outsb
addl
or
cs
mov
mov
pop
test
sbb
in
cmc
sbbl
mov
ror
fldt
jnp
into
leave
std
push
mov
inc
inc
mov
mov
push
and
jmp
lcall
mov
sub
mov
add
jno
daa
mov
or
jg
xchg
addb
jne
push
cli
xchg
fimull
pusha
addb
aad
lods
jnp
cmp
or
loop
pop
fnstsw
inc
jae
dec
and
sub
and
bswap
std
ret
lret
and
shl
xchg
lret
dec
pop
rorl
addr16
sahf
jle
jnp
dec
push
icebp
mov
popf
sbb
pop
in
cltd
test
dec
sbb
hlt
fistps
pop
nop
lahf
xchg
xor
mov
fistl
mov
and
cmp
push
in
mov
mov
insl
fldenv
cltd
adc
js
scas
mov
std
adc
rorl
out
xchg
int3
sti
insl
data16
jne
mov
push
sub
adc
mov
lcall
insb
rcl
ja
mov
ljmp
xor
jb
je
xor
mov
rclb
fimuls
shl
push
mov
push
popa
ss
aaa
lods
jmp
fdivrl
popf
hlt
cltd
es
pusha
lods
mov
xchg
aaa
push
divl
int
out
sti
sub
jbe
repz
test
inc
mov
adc
adc
dec
nop
jl
sub
and
sbb
dec
scas
xor
ja
jo
xchg
lods
push
nop
lea
movsb
add
aad
jg
add
jns
sahf
or
fwait
lcall
cli
les
pop
sub
orl
rcrb
cltd
dec
daa
and
push
cltd
mov
xchg
adc
push
cmp
push
mov
jno
adc
movsb
jnp
xor
clc
cli
inc
out
cmp
stos
pop
imul
lods
cmp
outsl
xor
rcl
dec
lds
fcmovnu
stos
push
mov
icebp
push
xorl
jno
add
shrb
js
xchg
add
jmp
lcall
pop
adc
rcll
push
cmp
xchg
aad
insb
addr16
cmpsb
or
rcrb
lock
inc
aaa
mov
or
xchg
imul
cmp
mov
sub
cld
fimuls
dec
fbstp
sahf
jmp
xchg
pop
addr16
repz
jmp
das
fistpll
sub
popl
jmp
out
push
out
stc
jae
out
insb
xchg
mov
movsl
and
mov
xchg
sub
mov
push
bound
xchg
shrb
dec
mov
mov
fdivl
cmp
mov
inc
sbb
mov
es
add
pop
mov
mov
lods
adc
cwtl
or
repz
mov
in
in
xchg
out
andl
and
iret
lods
ljmp
pop
shr
mov
push
bound
mov
clc
push
mov
shlb
jg
lret
or
jle
xchg
sbb
inc
ja
jg
js
xlat
out
add
pusha
lea
cli
adc
or
imul
cmp
add
jne
in
cwtl
jmp
sub
hlt
jge
push
add
pushf
ds
jge
ss
rcll
mov
mov
sarb
xchg
insl
test
inc
fsubs
add
mov
int
jecxz
dec
inc
push
loop
stc
out
lret
aaa
scas
xchg
outsl
lods
lret
pop
xchg
pop
es
cli
xor
rcll
out
cltd
mov
sbbb
xor
inc
mov
push
push
mov
ja
dec
fnsave
and
das
lods
push
cli
lods
pushf
rolb
pop
pushf
int3
mov
shr
or
xchg
scas
dec
adc
in
in
pop
xor
add
enter
pop
inc
xchg
jae
repz
adc
xchg
enter
insl
xor
icebp
mov
adc
fildll
into
pop
pop
and
xchg
mov
bsr
fimull
xchg
test
mov
adc
out
cmc
daa
fwait
enter
push
sti
aaa
ja
adc
sbb
adc
aad
pusha
movsb
js
insl
sahf
sub
or
decb
ret
adc
imul
out
fs
ja
lea
jle
mov
ret
jne
pop
push
push
out
loop
insb
int3
lds
xchg
daa
cmpsl
inc
je
mov
incb
sub
loop
push
int
ljmp
jmp
hlt
pop
jl
movsb
xchg
dec
pop
xor
cli
jnp
sbb
lcall
popa
jp
sbb
jl
pushf
movsb
add
lods
in
add
jg
enter
xchg
jns
mov
lret
adc
push
xchg
rcrl
mov
cmp
popa
out
fistpll
push
scas
lods
cs
xchg
mull
fstpt
mov
xor
sbb
fsubrl
int3
lods
and
scas
jbe
push
xchg
andb
add
add
aaa
xchg
xchg
aas
out
dec
mov
mov
fwait
setb
sahf
sbb
and
ja
in
sub
lock
pop
aaa
jae
inc
pop
or
repz
js
sbb
ss
nop
subl
popa
je
pop
stc
dec
leave
cs
sub
jb
adc
nop
mov
add
pop
jg
adc
cmpsl
cmp
jmp
jmp
arpl
push
jno
jb
cmp
sbb
inc
adc
xchg
arpl
mov
lret
jbe
rorl
lock
inc
pop
push
mov
dec
pop
xor
inc
lret
xlat
mov
inc
dec
pushf
shrl
inc
cli
mov
sub
hlt
dec
stc
add
push
push
xor
add
pop
jg
jns
sarb
xor
dec
mov
cmc
push
cwtl
incl
mov
inc
jo
repnz
sbb
dec
sti
dec
adc
js
les
sbb
je
out
fcompl
adc
movl
add
fisubs
daa
mov
or
ficompl
push
add
dec
repnz
sbb
pop
xor
outsb
cmp
pop
pop
mov
adc
inc
int3
std
iret
je
push
jmp
push
movsb
sarb
outsb
mov
jbe
jae
inc
xchg
mov
fs
outsb
bound
push
je
ja
test
push
mov
shrb
mov
icebp
add
arpl
stos
pusha
xor
shl
mov
pop
xor
cmp
dec
jns
push
xchg
cmp
push
cltd
mov
adc
add
cmp
ljmp
mov
lods
xor
sub
push
adcl
out
jp
jge
mov
std
pop
or
adc
xor
mov
mov
ret
jb
negl
popl
mov
scas
cmpb
lods
or
in
bound
mov
pop
into
inc
lds
xor
jns
test
fldcw
repnz
xchg
js
sarb
xchg
dec
dec
mov
jne
cmp
adc
sar
dec
jmp
cmc
push
dec
out
jg
clc
addr16
dec
add
mov
test
mov
aaa
popf
xchg
stos
push
lret
cli
mov
repz
mov
xor
or
or
or
cmp
mov
mov
aad
ss
lods
and
xchg
imul
xchg
out
test
cli
xchg
sahf
pop
movsl
sbb
xor
inc
jg
daa
xor
fsts
cmpsb
mov
sub
push
xchg
pop
xchg
insb
sbb
xchg
pop
mov
and
mov
mov
jo
adc
dec
mov
xor
int
fildl
movsb
scas
sub
imull
inc
inc
lea
add
test
nop
frstor
inc
lock
shrl
stos
mull
sbb
inc
pop
push
and
push
sbb
xchg
push
enter
or
fwait
and
push
sub
push
pop
jle
pop
mov
jmp
popf
cmp
adc
sub
mov
adc
and
scas
pop
fstl
fmull
inc
sahf
jns
jb
push
test
lahf
popa
addb
xchg
pop
popa
push
lea
cwtl
jno
mov
push
push
in
in
addr16
mov
in
shr
das
xor
mov
outsb
int
lahf
jge
jle
push
andb
sahf
movsl
pop
ljmp
adc
arpl
xchg
push
jb
cmp
jl
test
cmp
dec
scas
sbb
je
sub
stos
out
aad
add
fwait
mov
or
pop
mov
fistpl
adc
shrl
adc
pop
aas
out
jle
mov
mov
add
sub
cmpsb
arpl
loopne
mov
out
or
jns
mov
insl
xchg
mov
add
push
pop
es
pop
inc
pop
add
push
icebp
pop
cmc
jmp
inc
test
in
inc
mull
mov
and
imul
or
mov
orb
mov
orl
jnp
mov
ret
daa
jecxz
ljmp
in
ds
in
testl
gs
cltd
mov
and
adc
inc
enter
enter
mov
aad
inc
push
sbb
adc
fstpt
cmp
sub
xor
cmpl
addr16
or
dec
mov
test
inc
dec
addr16
stos
mov
pop
test
loopne
mov
out
sbb
cmpsl
rorl
jmp
je
add
jne
sbb
ljmp
call
cmpsl
mov
imul
scas
mov
fsub
add
and
sbb
sub
cmc
push
mov
fstps
out
mov
loopne
shrl
adcl
cmp
xor
xor
loopne
out
sub
fcoms
outsb
sub
xchg
fyl2x
jle
lcall
mov
or
jns
xchg
pop
rcll
iret
cwtl
inc
mov
ret
xorl
pusha
push
mov
xchg
out
nop
mov
sub
lret
cmp
pop
mov
lcall
ficomps
cltd
push
in
sbb
mov
cmc
inc
inc
mov
in
aad
pop
mov
repz
int3
es
mov
fnstsw
fadd
shrl
leave
cmpsb
cmp
xor
lahf
and
imul
jbe
fisubs
fidivrl
pop
and
nop
hlt
or
mov
dec
mov
outsb
fwait
jns
xchg
sub
sub
lds
mov
sbb
int3
fimull
lods
out
jmp
pop
aad
or
test
popl
dec
or
or
cmc
or
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
xchg
pop
int3
sbb
bound
bound
xchg
pop
aaa
pop
shll
push
das
adc
ret
lods
adc
lahf
and
xchg
fwait
mov
inc
push
xchg
cld
loop
out
pushf
or
cmpsl
jnp
imull
ljmp
jl
sub
ficoms
cs
and
test
imul
pop
xchg
jns
fdivrl
adc
mov
sub
outsl
xchg
lds
popa
dec
insl
ljmp
mov
jae
pop
mov
adc
mov
psllq
xor
aam
jb
mov
fnstcw
test
inc
inc
push
fnstsw
popf
cltd
pop
cli
fcmovu
test
int
ror
cmpsl
xchg
rorl
icebp
and
dec
aad
push
push
mov
or
xchg
fldcw
add
movsl
ds
mov
int3
test
and
adc
ljmp
cmp
mov
xor
cs
out
sti
or
popf
and
mov
pop
aas
push
icebp
add
mov
iret
dec
jmp
aas
mov
fmuls
xor
into
xor
xor
lret
mov
insl
cld
adc
push
into
pop
repz
lret
mov
cmp
in
cmc
add
std
mov
mov
sahf
inc
dec
mov
adc
idivb
cs
daa
xor
jg
movsl
into
gs
arpl
push
daa
rep
inc
mov
sbb
js
or
and
loop
out
hlt
out
mov
mov
lods
add
jmp
jle
cmp
mov
int
inc
mov
jno
int
mov
icebp
clc
xchg
js
jo
in
fiaddl
repz
dec
lret
add
unpckhps
lock
cmc
xchg
pushl
idivb
shll
aad
mov
iret
add
add
cmp
testl
dec
in
and
clc
call
pop
mov
je
jo
in
dec
lea
mov
pop
subb
jle
aas
cmp
or
sbb
inc
mov
xor
fcoms
xchg
imul
testl
test
mov
adcl
mov
ljmp
push
push
inc
in
xor
mov
add
cmp
daa
ljmp
or
pushf
lahf
or
stos
aam
in
and
or
mov
fcmovnbe
mov
and
cmp
dec
dec
xchg
fistps
je
dec
or
aaa
pminsw
mov
lahf
loope
shrb
push
sbb
xchg
dec
cli
outsb
inc
dec
adc
and
add
fstl
dec
fs
pop
adc
jecxz
lret
push
pop
ret
ficoms
pop
xchg
push
fs
xor
lahf
pop
das
je
fdivl
xchg
es
out
mov
sub
sub
push
or
fsubs
dec
cwtl
filds
out
scas
adc
dec
push
and
aad
in
sti
cli
into
lea
inc
pop
dec
mov
xchg
inc
js
mov
fwait
mov
stc
mov
cmp
aas
into
dec
rorb
lods
test
mov
stc
mov
sub
cmc
sub
call
sbb
and
mov
cltd
icebp
syscall
add
lret
fnstcw
fcomip
sub
lahf
mov
or
and
push
in
sub
stos
push
inc
push
and
pop
outsb
fldt
mov
or
sarl
sub
jle
movsb
adc
push
sub
and
sahf
add
out
mov
mov
out
sbb
les
cmpsb
fbstp
jle
sub
mov
repnz
cmpsb
inc
xor
sub
cltd
shll
inc
lods
rcrl
add
push
adc
addb
decl
stos
ja
mov
xor
dec
sbb
push
mov
pop
mov
rcll
xor
push
sub
lret
mov
or
cmp
push
call
pop
mov
push
inc
lahf
push
pop
imul
cld
pop
add
ja
mov
mov
pop
rcr
call
mov
jbe
lods
bound
lods
mov
and
sbb
or
pushf
addb
mov
nop
adc
out
or
pop
mov
mov
jo
jl
lock
mov
inc
subl
lds
adc
adc
xlat
xchg
test
imul
divb
mov
cmpsb
cmp
or
pusha
das
mov
out
in
mov
sub
cmp
mov
dec
js
pop
sub
adc
ljmp
adc
mov
hlt
inc
mov
repz
jmp
push
in
sarl
testb
in
fs
jecxz
inc
cmc
dec
sub
stos
data16
and
xchg
lods
jne
data16
mov
add
jp
idiv
lea
fmuls
das
push
xor
hlt
sbb
adc
or
jecxz
mov
nop
frstor
fwait
sub
add
pop
inc
jae
inc
clc
xor
lods
xchg
inc
ja
call
cwtl
fcomi
scas
adc
lock
shlb
fst
push
xchg
jecxz
mov
pop
pop
mov
dec
push
or
xchg
stos
fwait
pop
xchg
xlat
and
stos
hlt
sub
push
or
xchg
sbb
arpl
stos
retw
dec
push
pop
xchg
and
data16
sti
nop
push
dec
jns
loop
sub
daa
sbb
jecxz
push
or
add
and
lds
fcmovnb
aas
xchg
lods
or
and
dec
js
rol
loope
mov
inc
push
pop
xor
ror
ret
mov
jb
jae
inc
fisubl
scas
test
lret
xchg
lods
dec
push
push
popa
in
aam
pop
enter
hlt
inc
call
jnp
out
add
mov
xchg
mov
mov
sti
or
mov
xchg
lret
in
lds
mov
dec
mov
stos
mov
jnp
aaa
cld
mov
imul
les
lock
add
in
sbb
test
outsb
push
fnstenv
mov
call
push
and
aas
stos
lea
jp
jge
cmp
clc
dec
cmp
repnz
in
xchg
lock
cmpsl
fmul
cmp
outsl
inc
xchg
xchg
sbb
js
and
ja
lahf
sbb
out
in
lods
fdiv
adc
cmp
iret
jns
add
jmp
push
insb
jnp
mov
lea
shlb
jg
xor
out
xlat
ja
sti
pop
cltd
int3
add
aam
fstpt
inc
xchg
pop
jae
roll
xor
xor
inc
sbb
call
out
aam
or
jl
push
and
xchg
in
mov
cs
lahf
xchg
sbb
daa
inc
out
mov
loop
jb
pop
test
in
out
repz
cmp
inc
jp
sahf
xor
in
and
mov
xchg
dec
out
daa
mov
stc
dec
sub
pop
lcall
or
add
push
in
lahf
in
or
fidivs
mov
cmp
fdivrs
arpl
iret
ja
mov
jno
lea
orb
test
in
iret
test
mov
les
cmp
lea
and
jb
gs
pop
jp
pop
movsl
shrl
jbe
sbb
pop
mov
stos
mov
and
out
xlat
pushw
xor
mov
push
mov
rcll
test
pop
xchg
push
xchg
sarw
mov
and
push
sub
inc
jae
out
pop
xorb
cs
lea
aas
cltd
xor
and
in
xlat
lea
fsts
popa
mov
mov
imul
sti
lcall
lock
ljmp
mov
in
je
pop
cmpsb
xchg
mov
xor
dec
add
push
out
xchg
or
pop
and
out
cli
roll
inc
mov
sbb
mov
out
arpl
xor
or
aas
call
pop
sub
xchg
pop
fistpll
mov
pop
lds
lret
in
mov
push
insl
pop
jns
cmp
movsl
outsb
and
sub
pusha
adc
xchg
adc
mov
and
enter
pop
inc
mov
push
cmpsl
insl
xchg
inc
enter
or
mov
nop
or
cmc
fisubl
shlb
ret
nop
cmp
xchg
sbbl
xchg
in
or
and
stos
xchg
jmp
lods
mov
or
clc
push
sbb
or
jge
dec
and
mov
adc
cli
ret
in
push
and
test
xor
cmp
rcl
aas
push
lea
cmp
js
gs
cmp
mov
ljmp
lret
outsb
jns
dec
test
dec
sbb
dec
inc
dec
xor
into
pop
xchg
outsb
sti
inc
pop
xor
lret
mov
lret
outsl
jg
xchg
dec
scas
push
xchg
sbb
push
pop
out
les
jmp
popf
inc
cmc
ffree
shrb
cmp
jmp
mov
sbb
icebp
cmp
sbb
outsl
ret
ret
rcrb
lods
fwait
push
sbb
xor
push
push
outsb
stos
jnp
ja
loopne
fnstsw
mov
shl
pushf
lods
add
xchg
inc
hlt
pop
mov
dec
andl
cmpsb
lcall
and
adc
lds
xlat
out
cmp
sub
daa
fmuls
xchg
repz
pop
pop
cld
and
leave
cltd
pop
test
not
push
je
ret
lahf
mov
push
lock
mov
push
data16
inc
xor
pushl
inc
jg
sub
ljmp
pop
jge
add
pop
rclb
xor
xchg
and
pop
out
pop
mov
aam
out
jp
add
mov
rcll
fisttpll
insb
mov
fwait
nop
out
in
test
adc
jo
mov
int3
push
mov
mov
popf
jo
push
jnp
fwait
adc
dec
jge
xchg
mov
ss
out
mov
ja
jb
cmp
cltd
jno
push
pusha
ds
jne
int
dec
in
mov
outsl
inc
or
ss
clc
fs
ljmp
xchg
dec
add
aaa
and
mov
mov
sti
cmpsl
add
lea
jp
jo
jb
xchg
nop
mov
pushf
rol
jmp
adc
out
fimull
ja
and
aad
inc
movsb
xchg
scas
lods
shlb
and
std
jns
pop
arpl
push
fsubrs
sub
cmpsl
iret
fbstp
int3
and
daa
xchg
jns
add
or
jmp
cmp
into
pop
pop
sub
cwtl
pop
cltd
add
dec
push
dec
cli
jecxz
aam
arpl
popf
xchg
js
cmpsb
leave
outsb
jge
push
in
adc
icebp
insl
jno
insb
int
cmp
arpl
lret
and
xor
or
mov
or
sbb
add
cwtl
lahf
or
mov
xchg
mov
icebp
dec
enter
lods
out
xchg
mov
push
cmp
movsl
jae
jae
sub
clc
xchg
inc
add
in
pop
cmpsb
rcrb
inc
push
jp
push
aad
jae
cmp
inc
fisttps
and
in
int3
jle
in
roll
in
stos
cmp
lds
dec
adc
test
and
fdivrs
negl
pusha
outsb
aaa
xor
ja
dec
sub
lcall
pop
jg
mov
xor
jg
push
cmovno
icebp
jmp
pop
pop
iret
pusha
cmp
and
push
cli
test
in
lret
enter
xor
dec
cs
das
dec
out
lret
mov
addr16
imul
xchg
mov
ljmp
ret
js
popa
ds
jp
inc
xor
cmp
insb
mov
dec
and
sbb
data16
ss
inc
ljmp
xchg
imul
insb
fildl
or
lcall
xchg
scas
mov
js
outsl
add
mov
inc
insb
roll
cmpsl
aas
mov
push
shl
daa
cmp
dec
dec
cltd
cmp
leave
rcrb
jmp
pop
or
iret
idivl
imul
pop
cmc
sbb
mov
add
lret
pop
mov
imul
xchg
sahf
pop
cltd
pop
mov
push
lret
adc
push
lahf
repz
movsl
jmp
aaa
les
je
inc
push
inc
inc
stc
mov
es
inc
in
inc
fdivrl
jecxz
add
cltd
mov
outsb
daa
adcl
add
and
cmp
push
add
int
add
movsb
aam
jbe
jmp
repnz
int
les
mov
int3
push
add
mov
aad
subb
cs
out
jg
icebp
xchg
cld
lahf
leave
je
sub
xchg
push
lea
push
dec
mov
sub
xor
adc
repz
arpl
and
lock
push
xchg
and
sbb
cmpsb
xchg
mov
popf
pop
jae
rcl
imul
in
loope
ja
dec
std
pop
addl
mov
dec
adc
mov
pop
inc
push
gs
ja
aad
icebp
aad
fmull
std
rolb
fdivl
push
cmp
fadd
pop
test
andb
xchg
or
push
jmp
js
sbbb
rol
cli
add
dec
push
adc
xchg
mov
lock
out
inc
jb
dec
pop
std
xchg
xor
inc
push
mov
and
in
sub
xlat
inc
es
shlb
arpl
sahf
imul
cmc
popf
push
jne
cmpsl
inc
das
sbb
cli
mov
xchg
inc
or
cmp
xchg
add
outsb
adc
adc
jp
mov
jo
xchg
loopne
ljmp
lret
lods
fisttpll
cmp
sbb
js
das
jns
push
cmp
cmc
push
sbb
fs
fucomp
mov
out
insl
mov
addb
test
lcall
dec
test
test
aas
mov
inc
in
data16
mov
andl
or
test
cmp
and
dec
ret
or
jo
icebp
mov
ffree
sbb
in
scas
stos
mov
test
cmpsb
sbb
andb
loop
loop
jns,pt
mov
aas
cmp
sbb
jg
xchg
pop
aam
je
sbb
imul
iret
into
xor
cltd
lods
mov
add
les
fwait
sbb
mov
sbb
ds
testl
adc
aaa
fnsave
loope
lahf
sub
xchg
std
mov
mov
xchg
popa
jne
pop
popa
cltd
xchg
in
push
movsb
rol
mov
push
cmp
imul
ljmp
es
mov
or
xchg
dec
mov
xchg
xor
xchg
mov
sub
call
sahf
lahf
mov
shr
insl
jmp
and
mov
inc
jle
xchg
xchg
ret
fcoml
rcll
mov
insl
mov
test
hlt
lea
lahf
xor
out
mov
push
cmp
loop
push
jns
sub
inc
pop
andb
fdivl
mov
inc
inc
cltd
cmp
xchg
test
mov
gs
aaa
mov
xor
mov
xor
mov
push
pop
inc
fstl
adc
cltd
pop
daa
pop
test
jge
xchg
add
scas
enter
mov
cli
stos
cltd
les
sbb
or
xor
push
stos
pop
push
je
ret
xor
mov
lods
adc
stos
nop
adc
iret
mov
fisttpl
and
xor
jbe
dec
inc
add
ror
mov
mov
sbb
loop
cwtl
lods
daa
aam
xor
stos
std
xlat
lcall
bnd
ret
mov
mov
dec
sbb
jnp
dec
jg
stos
jge
insl
add
mov
notl
mov
jge
cmp
or
lds
mov
inc
mov
add
rcll
jo
xchg
sbb
pop
test
sbb
mov
xchg
sub
jmp
dec
cmp
sbb
ljmp
inc
inc
cmp
fcompl
ret
push
add
in
sub
jb
decb
pusha
xor
fisubs
push
aaa
xor
sti
xor
xchg
mov
divb
inc
sub
push
sub
xor
push
aam
imul
cmp
sahf
push
dec
out
jno
fcomi
add
jg
xchg
add
sub
xchg
xor
stos
pop
mov
cltd
mov
dec
and
cltd
test
push
jbe
call
push
dec
mov
mov
stos
popa
jecxz
and
cmp
mov
cmp
and
or
dec
mov
mov
out
imul
add
loopne
xor
cmp
rclb
pusha
xorl
popa
add
xor
testb
insl
add
loopne
ss
iret
sub
js
lock
push
mov
pop
sbb
xor
sub
dec
addr16
lea
scas
jae
movq
gs
fisttps
repnz
adc
jp
movsl
add
icebp
mov
pop
fidivs
icebp
fldl
mov
loopne
dec
push
mov
mov
or
and
mov
xchg
and
mov
mov
dec
call
mov
or
push
mov
mov
pop
add
mov
aam
sbb
lods
and
add
inc
repz
push
lods
inc
jnp
fstl
inc
lods
mov
jno
nop
sbb
insl
cmp
fistl
sbb
shll
lahf
sbb
in
jno
test
jp
mov
leave
pop
mov
push
lahf
jae
test
mov
push
inc
jp
in
push
stc
cmp
pop
lea
dec
or
hlt
movb
es
ljmp
add
add
rorl
push
cli
lcall
icebp
add
push
mov
xchg
das
push
inc
mov
push
pop
push
dec
jno
andl
adc
dec
fmuls
shll
xchg
push
pop
leave
jge
xor
into
divb
loope
xchg
or
movsl
test
pop
add
insb
popf
pusha
dec
in
lret
fisubl
in
movsb
outsl
cmp
mov
add
mov
hlt
data16
xor
lods
sbb
les
jp
sbb
aam
fistl
sub
addr16
fnstenv
fists
lea
adc
imul
mov
jno
sub
adc
mov
sbb
pop
outsb
jne
das
jbe
and
mov
aaa
push
cmpsl
xchg
sbb
mov
dec
mov
dec
adc
aaa
xor
and
sub
sub
sub
mov
and
ficomps
push
addr16
and
daa
vorps
adc
popa
lods
push
mov
ss
jge
call
pop
lock
mov
sub
mov
xchg
iret
dec
les
mov
ja
pop
cld
dec
and
test
shll
lret
insb
cwtl
jge
aas
in
jae
fistpl
jo
enter
push
dec
addb
sbb
adc
es
sbb
inc
mov
inc
sub
xchg
subl
mov
in
push
inc
daa
ficoml
iret
jmp
decl
lcall
pop
jne
test
inc
mov
jae
xor
add
push
sbb
push
xchg
dec
pushw
in
or
fnstsw
xchg
add
mov
mov
into
daa
in
sarb
inc
or
jae
addr16
jae
jmp
incl
jae
cwtl
pop
pop
jno
js
mov
and
sub
mov
cmpsb
inc
xchg
ja
daa
dec
sub
push
jle
nop
and
shrl
mov
pop
lods
cwtl
dec
jge
jae
mov
je
sbbb
xchg
cmp
jmp
cmc
and
movaps
dec
out
ss
imul
or
js
mov
jne
js
mov
cmp
jl
icebp
push
cmp
dec
jge
xchg
push
imul
xchg
push
out
and
leave
jnp
shrl
cmp
xor
jg
iret
in
mov
xchg
cmp
test
adc
cmp
adc
loop
jle
mov
clc
dec
adc
add
shlb
aad
pop
gs
rolb
fsubrl
dec
mov
sti
or
jl
sbb
dec
cs
inc
vorps
or
movsb
lea
dec
stc
cmpsb
and
lret
xlat
popf
push
dec
inc
and
hlt
inc
push
push
inc
jnp
scas
ja
xor
xchg
inc
or
lods
test
jmp
xor
mov
into
fs
adc
push
sbb
test
cwtl
jae
or
sub
sub
std
xor
mov
add
loop
stos
out
mov
add
xchg
enter
or
mov
mov
jle
pushf
mov
pop
out
cli
and
cmp
ja
into
scas
xorl
imulb
pushf
sub
aam
add
pop
adc
loop
inc
push
out
pop
mov
inc
and
cmp
mov
inc
lods
stos
push
ja
jbe
jae
ss
scas
cmpsb
fiaddl
pop
std
clc
mov
add
mov
insb
inc
repnz
into
push
or
inc
push
fisttps
in
int3
mov
stos
and
sbb
inc
cmpsl
je
insl
cld
fwait
jle
mov
pop
loop
xchg
or
mov
jae
jl
or
mov
fs
mov
pop
mov
xor
xlat
shlb
dec
mov
or
inc
sbb
lea
jecxz
gs
idivb
sbb
jge
add
pop
test
insb
nop
dec
test
addr16
out
insb
les
sub
mov
mov
and
aam
je
xorb
sbb
std
dec
lods
sub
mov
cli
fwait
shl
inc
pop
jmp
mov
mov
fadds
lahf
ja
dec
mov
aaa
pushf
cmpsl
movsb
idivl
ljmp
es
leave
lcall
repz
decb
jmp
jl
out
inc
fadds
ficomps
divb
inc
jns
idivb
jg
sbb
imul
call
pop
jnp
flds
inc
sahf
xor
int3
lcall
or
into
jae
or
push
sahf
xlat
mov
scas
test
mov
aam
jnp
mov
lds
and
sbb
leave
std
out
std
mov
loop
jp
add
pop
sbb
sbb
rcll
rcrb
jns
in
mov
aam
add
xchg
lods
xchg
popa
fincstp
and
aas
cmpsb
rcr
lret
cmp
test
out
inc
out
add
dec
sub
test
sub
push
call
push
jmp
dec
mov
jmp
sahf
cld
xor
lock
call
push
sbb
pop
xchg
cs
lret
sti
xor
cld
fdivs
test
fs
sub
dec
aaa
loopne
nop
out
xor
mov
test
into
mov
adc
int3
and
adc
inc
mov
das
bound
xchg
sbbb
sbb
sub
int3
or
or
mov
push
xchg
outsb
stos
jae
rol
stos
lret
repnz
std
mov
add
jecxz
out
insb
dec
or
je
lcall
rolb
sbb
mov
nop
adc
outsb
insl
jg
mov
mov
lret
lcall
sbb
cltd
add
daa
push
ss
pop
shll
jmp
fwait
in
or
mov
enter
inc
mov
iret
jns
cli
cmp
subl
mov
xchg
push
outsb
ds
rclb
xchg
lahf
inc
je
jp
mov
rolb
xchg
out
push
subl
pop
notb
adc
ret
test
std
inc
cmc
testl
dec
into
sbb
repnz
ss
cwtl
jns
inc
int
xchg
mov
lock
mov
add
mov
mov
enter
mov
push
cmp
xchg
shll
add
jmp
int
dec
add
mov
ret
jmp
das
sbb
cmpsl
stc
mov
leave
jae
jno
cmp
and
fs
scas
int3
jno
popa
imul
pop
test
adc
dec
lds
push
fs
fwait
ja
iret
ljmp
dec
or
idivl
imul
shlb
push
add
push
cmc
shlb
push
xor
arpl
cmp
pop
inc
sub
adc
xor
jmp
andl
pop
cmpsb
ret
mov
bound
or
or
sbb
push
xchg
int3
adc
lahf
jl
sub
scas
adc
mov
mov
insb
jne
inc
push
rol
push
xor
adc
push
lahf
inc
push
js
pushf
xchg
ds
xor
add
or
sti
or
adc
or
sbb
fisubl
or
dec
gs
lea
ja
xor
mov
and
call
sbb
cmp
std
pop
add
inc
push
ret
fildll
mov
sbb
sbbb
bound
xchg
bound
add
cmp
add
mov
jno
sbb
fs
scas
sub
lea
cmp
jmp
cmp
arpl
mov
or
sbb
mov
add
ffree
mov
sub
ffree
mov
xchg
push
subl
pop
mov
syscall
xor
jecxz
push
pop
lods
cli
cs
loopne
jmp
es
add
cmp
das
fdivrl
sbb
cmovs
inc
sub
inc
stc
mov
mov
sub
fwait
or
pop
lea
scas
fs
ss
ret
sti
mov
daa
sarb
call
movsl
push
sar
cmc
adc
push
stc
lret
lahf
pop
sub
inc
fdivr
outsb
and
xchg
test
dec
dec
imul
cltd
in
fucomip
mov
cmpsl
gs
pop
cmp
dec
and
jbe
xor
test
clc
shll
stc
mov
scas
call
pop
rcll
ret
leave
imul
rcl
or
into
mov
cmp
mov
test
ret
or
cmp
cvtpi2ps
mov
lahf
subb
sti
out
js
or
jecxz
add
push
stc
mov
and
sub
push
ds
shll
push
jno
jnp
adc
adc
ja
push
ljmp
test
dec
loopne
iret
push
out
sbb
or
jo
or
test
mov
lcall
dec
inc
mov
adc
ljmp
dec
pushf
cs
pusha
test
cld
int3
push
push
push
jnp
fcmovnu
ror
fstps
adc
in
leave
dec
iret
fadds
or
sti
ljmp
jne
out
adc
insb
fisttpll
push
cli
jg
in
fs
mov
cmp
mov
dec
cmp
dec
pop
cwtl
or
mov
in
outsl
sub
loopne
or
sub
mov
hlt
es
mov
in
jp
dec
sub
push
out
in
cwtl
clc
int
stos
lret
xor
mov
or
movb
mov
add
jno
inc
es
fstl
jb
cmpsb
shrl
and
decb
or
inc
outsb
cmp
mov
adc
popa
fisubl
adc
mov
inc
inc
in
es
xchg
nop
sbb
push
mov
xchg
enter
andb
mov
xchg
mov
jg
in
sbb
int
push
lcall
movsb
pop
xchg
fsub
add
xor
adc
lcall
and
mov
dec
fsubl
jo
in
mov
mov
mov
xor
es
sbb
ret
mov
or
loopne
icebp
les
sbb
insl
mov
lods
lock
mov
adc
sahf
push
mov
mov
mov
lds
xchg
and
aaa
pop
mov
or
jbe
mov
and
sbb
push
pusha
xchg
jne
dec
xchg
rolb
push
mov
cmc
cltd
out
jp
sbb
jae
dec
pop
sbb
or
add
mov
sbbb
xchg
and
mov
jne
and
cmp
std
sbb
rorb
push
mov
clc
push
pop
jge
pop
pop
dec
popf
fwait
dec
sahf
xor
scas
xchg
and
mov
hlt
xor
mov
scas
mov
jmp
mov
cmp
cmpsb
repz
xchg
push
or
mov
pop
mull
into
fs
pusha
or
repz
loop
rcl
ret
inc
cmpsl
jl
dec
sbb
add
pop
mov
cmpsb
mov
lock
jbe
out
mov
mov
leave
lcall
or
adcb
cmp
pop
pop
jmp
pop
or
inc
pop
adc
sbb
gs
clc
jmp
stos
push
lahf
jp
arpl
cld
sub
aam
sub
cmp
add
pop
arpl
movsb
or
leave
sub
jmp
test
das
mov
dec
pop
ljmp
xor
xlat
test
outsl
cwtl
lahf
and
notl
cmp
scas
test
mov
imul
mov
outsb
dec
cmp
and
xor
cltd
sbb
cwtl
fidivl
shr
cmp
jmp
repnz
pop
aaa
or
jns
fisubl
push
inc
jmp
sbb
pop
rol
int3
mov
mov
jne
fwait
push
jle
hlt
popf
das
xchg
xlat
adc
push
pusha
in
dec
cltd
mov
push
test
ss
sbb
aas
pop
test
fmull
dec
fs
pop
sub
scas
decl
xor
in
les
mov
xchg
inc
and
lea
movsl
sbb
jl
aad
out
outsl
cmp
pop
inc
xor
xchg
adc
xchg
adc
inc
out
mov
outsl
xchg
mov
mov
pop
int
lods
mov
aaa
lcall
xchg
mov
jge
scas
arpl
adc
loop
jbe
jle
add
call
cli
mov
ds
lret
mov
inc
inc
push
inc
std
adc
les
xor
out
mov
nop
xchg
repnz
pop
faddl
mov
jl
xchg
push
sbb
xor
mov
xchg
adc
mov
iret
push
aad
pop
aad
xchg
rorb
cmc
adc
or
lret
adc
inc
out
repnz
mov
shlb
in
xor
pop
cmpb
jo
inc
add
dec
adc
inc
out
lods
jl
clc
ret
inc
ret
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
jmp
cmp
add
add
mov
andb
xor
rorb
jns
out
mull
jo
and
out
pushf
imul
push
fwait
rorb
mov
addb
and
or
call
pop
scas
notl
sbb
adc
in
sarl
add
sub
adc
cmp
out
pop
xchg
push
xchg
int3
add
pop
add
add
xchg
mov
jmp
daa
cld
clc
inc
xor
icebp
xchg
jg
es
je
js
leave
mov
addr16
movsl
rcrl
inc
stc
stos
jo
iret
repnz
scas
fdivrs
mov
inc
add
fsubr
ja
adc
mov
stc
dec
xor
int
int3
add
pop
sub
sub
addb
int3
add
pop
add
add
sahf
jno
sub
and
xlat
lock
pop
insb
xlat
ret
dec
in
jbe
fdivrl
cmp
cmp
cmp
dec
popf
enter
adc
pop
stc
es
ds
popa
popl
mov
mov
fs
mov
sbb
add
add
and
aam
aam
ljmp
je
bound
add
pop
add
add
push
mov
pop
fcom
sbb
fld
fwait
shll
xor
out
sbb
dec
sti
call
dec
popa
aas
push
cmp
sub
push
jno
jno
xor
and
js
inc
imul
int3
xorl
loop
mov
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
movsl
int
add
add
pop
xchg
xor
out
mov
mov
jp
xchg
gs
mov
ja
dec
push
in
call
inc
nop
mov
push
dec
push
pop
jl
scas
test
mov
push
mov
int3
pusha
or
add
imul
mov
fwait
and
mov
jg
add
out
lods
cmp
stc
stc
add
lock
int
add
add
and
sbb
imul
cmp
push
pop
push
cs
xor
jmp
aam
mov
in
sbb
in
int3
popf
inc
lds
sub
or
std
lcall
sbb
or
sub
ds
aas
push
mov
xor
lret
fsubr
add
push
xor
gs
aaa
push
sar
sub
add
pop
add
add
imul
add
pushf
dec
jl
das
outsb
inc
mov
mov
gs
adc
shrb
push
jb
sbb
xchg
adc
jno
mov
pop
mov
imul
xchg
jns
sbb
loope
es
sbbl
cmpl
adc
dec
inc
sub
das
jle
jg
imul
push
cmc
hlt
imul
filds
add
add
pop
enter
imul
ss
testb
bound
pop
mov
jno
aad
ljmp
sahf
aas
shll
pushf
pop
jecxz
ret
in
out
stc
adc
mov
xchg
rclb
sub
out
loopne
cli
scas
xchg
data16
and
addr16
and
mov
mov
call
add
add
cmp
mov
xlat
lcall
int3
movsl
wrmsr
aam
sti
lea
jne
xchg
mov
mov
mov
jo
mov
ja
xchg
inc
adc
push
xchg
push
push
scas
nop
das
outsl
ds
lcall
cli
cmp
mov
addb
ret
or
ret
lods
sub
mov
movsb
mov
add
add
negl
pop
add
outsl
adc
cld
cmc
fsts
xor
int
orl
sbb
test
cs
push
fs
les
mov
paddsb
movaps
sub
cltd
psubusw
outsb
out
mov
mov
sub
xchg
dec
pop
fisubl
jge
push
add
fld
add
ror
outsl
clc
rclb
addr16
loopne
add
add
inc
mov
sahf
lods
push
and
loopne
dec
cltd
call
ja
cmp
mov
fwait
cmp
jge
rclb
add
sub
mov
repnz
movl
jo
int
xchg
out
push
addr16
jne
test
out
faddp
add
inc
loope
sub
inc
add
popa
pop
lock
out
repz
mov
ret
in
mov
ds
loope
add
xchg
add
cmp
sub
cltd
dec
inc
pushf
push
mov
int
imul
adc
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
dec
sbb
loop
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
stos
pop
inc
add
sbb
dec
sbb
mov
sbb
xchg
inc
add
sbb
out
sbb
or
mov
inc
add
inc
add
sbb
mov
sbb
cmpsb
pop
inc
add
sbb
ljmp
add
or
subl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
inc
add
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
pop
mov
add
add
cmp
sahf
push
lock
repz
xor
pop
mov
add
das
pop
jl
mov
adc
dec
inc
clc
cs
sub
nop
adc
gs
mov
test
cmc
out
sbb
popf
mov
ret
inc
pop
nop
jo
mov
jmp
movsb
cmp
add
sub
cli
jl
xlat
push
loop
push
je
aad
add
add
inc
and
stos
stc
or
stc
lret
pop
push
call
pop
mov
scas
mov
cmp
lds
sub
add
sbb
mov
sti
push
pop
push
push
dec
mov
xchg
in
aam
mov
add
and
fldenv
dec
lods
sbb
stos
add
mov
jg
ljmp
push
out
aad
add
add
testl
push
test
and
jmp
insb
cmp
movsb
call
and
mov
shlb
scas
or
aam
dec
decb
add
inc
xchg
shll
cmp
jae
xchg
imul
shrb
scas
pop
pop
xchg
push
push
dec
push
push
scas
push
imulb
test
incl
add
cmp
in
fimuls
test
loope
add
pop
add
add
sub
or
jb
mov
mov
rcrb
cli
cmpsl
fisttpl
sbb
adc
push
or
add
aas
ret
mov
jmp
xchg
push
in
decb
outsb
sub
aad
pop
pushf
jae
lea
sbb
fnstenv
std
negb
sub
outsb
sbb
sub
add
pop
add
add
cmp
pop
dec
add
push
cltd
inc
cmp
xchg
sub
sbb
test
pop
ss
pop
sbb
scas
sub
gs
inc
and
xor
dec
adc
and
pop
mov
xchg
mov
mov
sub
jnp
mov
mov
inc
es
ss
add
fidivl
xchg
mov
scas
fbstp
inc
mov
add
add
pop
add
add
pop
push
xchg
mov
ret
nop
aam
dec
pop
stos
cmp
ds
lea
dec
pop
dec
pop
push
test
out
mov
repnz
cs
xor
dec
push
push
xchg
mov
sbb
movb
popa
stc
mov
imul
arpl
loope
imul
dec
in
fwait
scas
fdiv
pop
sub
push
xlat
add
pop
add
add
xchg
or
sbb
scas
or
daa
pop
jb
ds
adcl
mov
addr16
inc
bound
movsb
and
inc
test
xchg
dec
or
outsb
adc
in
adc
lods
loop
mov
pop
repz
cmp
add
mov
aam
xor
and
jge
add
pop
add
add
or
mov
dec
cmpsl
dec
xchg
out
and
add
insl
into
mov
es
push
js
sbb
mov
addb
push
adcl
mov
pop
cmpsb
dec
ret
addr16
adc
or
int
mov
hlt
and
cmp
pop
scas
cmc
repnz
cmp
add
mov
out
bswap
aas
xlat
xlat
add
pop
add
add
push
xlat
mov
mov
xor
out
lea
iret
adcl
rcrb
push
shlb
in
and
adc
int3
push
or
mov
test
and
sbb
lahf
jnp
jmp
movsb
ret
jne
out
imul
add
mov
mov
xchg
add
jmp
repz
fimull
xor
ljmp
add
add
fsubrl
aad
and
dec
int
cli
inc
or
out
xor
movsb
push
pop
mov
aaa
cmp
jnp
jns
mov
mov
push
icebp
jl
push
add
in
lcall
adc
xchg
movb
lahf
lea
mov
sub
cli
add
pop
inc
pop
iret
pop
aad
ss
dec
out
pop
mov
pop
add
add
dec
es
nop
incb
sub
sub
nop
xchg
pop
int
jb
lea
inc
xchg
or
mov
pusha
stos
insb
xor
cltd
cmpsb
push
in
and
aam
push
push
jbe
mov
mov
insb
pop
mov
popf
cltd
mov
sbbl
add
cld
int3
stc
nop
mov
fadds
add
add
mov
sub
jle
dec
out
dec
inc
pop
lahf
push
sub
pop
mov
stc
scas
outsl
stos
out
imul
fisubl
in
pop
mov
popa
test
nop
push
std
and
lea
push
and
addb
sti
shlb
aas
aam
pop
and
and
dec
cmpsb
test
mov
push
xchg
add
outsb
jae
lret
jle
repz
jge
aas
flds
add
add
shlb
shl
xchg
pop
test
pop
xor
outsl
add
lea
lea
sbb
jecxz
or
add
or
neg
xchg
cwtl
pop
sub
dec
mov
dec
lock
mov
outsl
fs
hlt
dec
xchg
mov
mov
cmp
aad
cmp
add
cmc
adc
adc
mov
lds
cltd
flds
add
add
sub
mov
daa
pushf
subb
xchg
dec
sahf
hlt
adc
in
push
lret
cltd
mov
cmp
push
inc
jb
int3
ret
jge
mov
and
lods
or
out
or
popa
insl
ss
movsb
test
lods
les
xchg
fndisi(8087
mov
mov
mov
add
add
mov
lock
mov
rorb
add
pop
add
add
jnp
xor
ja
popf
mov
add
lock
pop
dec
int3
aas
scas
loop
cmp
stc
int3
jl
jg
sahf
and
push
ljmp
test
push
sti
mov
mov
sbb
iret
out
jb
ret
pop
xorl
out
or
add
sqrtps
cmc
das
sbb
xchg
iret
das
ds
pop
add
add
jne
cs
idivb
or
adc
mov
mov
iret
inc
shlb
inc
loop
push
mov
xor
cld
lods
sbb
lret
movsl
dec
in
mov
add
testb
cmp
add
sub
jae
je
mov
int
xchg
inc
cmc
sti
fildll
sahf
daa
mov
cmpsl
fiaddl
add
add
push
jb
jno
pop
jnp
and
hlt
rcr
and
jp
loop
jge
cmp
mov
fsubs
std
fs
loop
or
test
mov
out
push
int3
mov
scas
aaa
push
xchg
ljmp
mov
push
popf
push
ja
repnz
add
adc
testl
cld
test
pop
add
add
add
or
lret
aas
dec
cmc
insb
pop
add
or
push
xor
xor
popf
mov
push
push
jmp
popa
xor
rcll
lahf
mov
mov
addl
xchg
lods
push
sub
std
cltd
xchg
movl
add
push
imul
ret
movsl
pop
fildl
add
add
les
lea
pop
push
rcrl
mov
sbb
jo
pop
sbb
pop
cmpsb
pusha
std
les
icebp
fsubrl
insb
xchg
dec
stos
fstpt
lcall
lret
sub
clc
out
popf
stc
and
test
rorb
sub
mov
add
add
jne
jg
clc
cs
push
mov
add
pop
add
add
icebp
loopne
push
stos
rcll
push
dec
fcoms
xchg
int
stos
hlt
jmp
mov
icebp
sub
call
mov
mov
xchg
imul
lods
sahf
stos
dec
bound
mov
cltd
jg
lea
jnp
fwait
rol
pop
add
or
dec
mov
je
lcall
add
pop
add
add
imul
popf
dec
insb
insl
shlb
mov
repnz
dec
fmull
lret
stc
popfw
add
pop
pop
xchg
and
lock
jg
sub
inc
add
inc
sbb
push
lock
inc
rorl
dec
and
std
pop
test
adc
or
sbb
add
fists
dec
mov
xchg
adc
mov
add
pop
add
add
loope
js
pop
sbb
push
je
hlt
jne
lds
cmp
and
push
into
xchg
pop
xchg
clc
inc
cmp
dec
inc
les
jle
or
xchg
jb
fnstsw
leave
call
mov
mov
jg
es
dec
push
movsl
cmpsb
push
lret
jne
loope
xor
add
xchg
fcmovu
fisttps
push
movsl
pop
pop
mov
pop
add
add
test
mov
decl
jmp
or
and
xor
adc
add
push
push
dec
pushf
mov
movsb
cmpsl
aad
call
and
das
and
sub
sbb
dec
jne
pusha
xchg
and
add
jle
out
sbb
mov
rolb
add
add
inc
mov
cmp
push
mov
je
int
xchg
mov
test
add
mov
mov
aad
xchg
movl
orb
sti
addr16
call
jns
sub
lock
jae
jae
ret
jmp
mov
jb
fs
add
and
cmp
ja
push
jne
add
pop
add
add
jle
push
addr16
int
fistl
inc
inc
out
mov
lock
filds
pop
inc
dec
pop
dec
jecxz
jg
xchg
lahf
inc
ror
cmp
and
xor
in
lahf
jns
cmc
fucom
jg
imul
hlt
mov
or
outsl
add
xchg
nop
ffree
popf
aam
lods
stc
inc
iret
rolb
add
add
or
push
push
into
mov
add
push
cmp
cmc
fcomi
jmp
lahf
test
push
loope
test
xlat
mov
cmpsl
cwtl
jp
cwtl
ss
xor
cmp
test
add
xor
mov
fadd
cwtl
xchg
mov
pop
mov
jecxz
add
mov
jbe
hlt
mov
and
cmpsb
sbb
aam
roll
add
add
mov
mov
cmp
enter
push
dec
adc
popf
or
push
sbb
xchg
mov
push
or
mov
mov
and
xor
mov
pop
xchg
xchg
and
mov
dec
lahf
pop
sbb
pop
lea
lret
es
ret
cwtl
out
add
ror
mov
sub
out
mov
roll
add
add
mov
js
jbe
outsl
mov
cmp
out
pop
sub
add
sub
push
cmpsl
cmp
aad
addr16
dec
sahf
in
jae
ret
mov
sub
add
add
addb
mov
adc
sbb
add
fucomi
outsb
and
pop
mov
fst
add
pop
add
add
dec
cmp
xor
call
or
mov
pop
add
jnp
sub
jo
sbb
ror
mov
mov
jp
xchg
loopne
nop
pusha
adc
lahf
push
dec
and
movsb
jno
imul
mov
add
mov
and
fidivl
rolb
add
add
je
dec
push
stc
lret
and
jp
imul
shl
push
cmc
mov
test
pop
and
into
add
inc
int
nop
insl
popa
cmp
arpl
dec
push
or
jecxz
jno
imul
das
bound
fnstsw
sub
add
add
stc
call
into
inc
mov
mov
adc
rolb
add
add
jmp
popf
decl
push
mov
jnp
dec
dec
adc
or
iret
mov
and
mov
dec
loopne
or
mov
sub
jno
lret
jmp
lcall
mov
push
mov
lea
mov
scas
push
aas
ljmp
lods
cs
call
add
sub
sub
or
rolb
add
add
cs
push
insl
stos
push
inc
ja
aad
cmpsb
dec
out
pop
add
rolb
les
dec
shll
push
add
inc
ret
cmc
mov
pushf
std
lahf
sbb
sarl
mov
ljmp
negl
jbe
pop
xor
xor
add
int3
sbb
out
loopne
lods
adc
sub
inc
roll
add
add
orl
fldt
xlat
cmp
mov
pop
dec
pop
mov
dec
dec
test
incl
js
arpl
jl
aam
inc
mov
jae
adc
push
shrl
insb
insl
decb
es
jecxz
jb
sub
add
subb
cli
and
int
push
sub
add
push
test
fildll
and
lahf
roll
add
add
lcall
jp
sbb
pop
cmpsl
outsl
cwtl
mov
jae
pop
cmpsl
dec
adc
lock
cmc
push
roll
pop
mov
movsl
leave
mov
jmp
sub
cmp
push
add
sarb
jo
mov
je
and
cwtl
sbb
and
add
add
lods
fcomi
sarb
add
shll
roll
add
add
xor
lahf
in
or
scas
mov
out
pop
xchg
xlat
andl
adc
and
in
or
popf
xor
xchg
push
pop
das
mov
xor
push
arpl
adc
mov
shlb
sbb
pop
icebp
inc
out
adc
sti
add
or
ja
dec
cmp
dec
fdivrs
lret
add
pop
add
add
les
add
out
orl
add
lcall
rorl
adc
iret
jo
jmp
ljmp
fldenv
sbb
mov
mov
int
insb
gs
cmp
or
dec
in
lock
add
add
arpl
jge
mov
daa
xchg
xor
scas
lods
aam
add
add
xchg
inc
mov
sub
sbb
inc
pop
das
and
cmpl
inc
sub
push
popf
jo
jg
fwait
movsb
sub
enter
in
push
fisubrs
xchg
push
jb
xchg
mov
insb
mov
jge
xchg
pop
insb
sbb
pop
fldt
add
daa
ss
xor
and
ret
jno
fildl
add
add
ss
cmp
icebp
shlb
iret
movsbl
sub
push
dec
lock
sbb
xchg
scas
test
pop
leave
jbe
leave
mov
jmp
hlt
mov
insb
cmp
fldt
mov
xchg
les
test
loop
icebp
mov
and
xchg
aaa
out
mul
aaa
cmc
xchg
lcall
paddusb
add
add
add
insl
mov
xchg
jns
sub
int
add
ret
push
cmp
push
mov
bound
jnp
mov
mov
gs
adc
xchg
stos
leave
fildll
dec
mov
xorl
mov
in
mov
add
aad
out
fucomip
ss
cmp
daa
add
faddl
add
add
test
cs
dec
decl
jle
loop
stos
dec
outsb
push
data16
dec
outsb
adc
push
pop
dec
lds
sbb
cld
inc
mov
or
push
test
mov
cmc
mov
mov
jp
clc
inc
cwtl
add
cltd
sub
or
add
xor
dec
scas
jns
outsb
jbe
lret
outsb
negb
xchg
xchg
ret
faddl
add
add
xchg
adc
cltd
push
aad
ficomps
lods
repz
jecxz
sub
jnp
int3
jns
ret
mov
sub
scas
imul
xchg
repnz
shrb
jnp
jo
in
roll
adc
sbbb
and
push
mov
rcr
mov
js
lods
add
cmp
paddsb
nop
rorl
std
add
fldl
add
add
mov
bound
lret
stc
inc
sbb
jl
mov
mov
sbb
xor
cld
jl
fwait
sbb
add
jl
or
jnp
cmp
fnstenv
jl
pop
pusha
nop
loope
and
cmpb
xor
sub
add
xchg
cmpl
push
loopne
lcall
add
pop
add
add
xor
jle
ja
xor
fmull
enter
test
cmp
sti
or
data16
out
push
xchg
lcall
mov
xorl
jmp
pop
xlat
call
pop
sub
mov
and
inc
xchg
add
fincstp
shl
frstor
pop
dec
aas
jnp
sahf
rcr
add
pop
add
add
scas
or
loope
cmp
iret
push
out
mov
xlat
push
addb
push
add
jns
and
scas
push
fwait
mov
xchg
int3
lea
and
addr16
inc
dec
mov
in
add
sub
data16
fwait
or
mov
add
outsl
mov
jmp
push
fcmovu
in
mov
add
pop
add
add
add
fsubl
push
adc
sbb
push
add
fistpl
jp
mov
mov
loope
sbbb
mov
into
cmp
xor
ljmp
mulb
xchg
and
mull
sbb
push
or
mov
icebp
xchg
and
add
stc
sbb
inc
jecxz
mov
aad
cmpb
add
pop
add
add
add
mov
imul
arpl
outsb
outsb
jae
dec
cltd
pop
jno
mov
lock
movsb
xchg
sub
popa
fists
mov
out
push
in
addr16
fistpl
jne
fdivs
mov
enter
xorl
repnz
subb
add
mov
mov
icebp
and
into
imul
add
pop
add
add
out
jns
mov
jecxz
ret
imul
outsl
fisttps
inc
insl
jae
push
ret
scas
fcmovbe
mov
loop
xchg
push
pushf
xchg
stos
lcall
sbb
sti
inc
insb
cli
sub
popf
dec
sub
in
adc
jns
mov
jne
hlt
out
addr16
ret
mov
add
xlat
repz
das
cli
fists
dec
es
mov
aas
push
pop
add
add
jno
jo
call
arpl
lods
adc
mov
palignr
mov
and
stc
out
ret
lods
xchg
mov
cmp
lods
inc
lock
lret
rclb
sub
mov
cmpsl
dec
adc
mov
add
adc
push
adc
cwtl
out
shll
filds
add
add
movsl
pop
dec
pop
jo
inc
movsb
xchg
sbb
or
add
mov
out
scas
cmp
cmp
jecxz
xor
add
cmp
movsb
mov
mov
mov
jp
mov
or
iret
insb
mov
cmpsb
es
pop
dec
nop
and
sbb
adc
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
inc
cmp
add
add
add
add
add
add
add
cmp
add
add
inc
cmp
add
mov
add
add
add
push
outsl
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
