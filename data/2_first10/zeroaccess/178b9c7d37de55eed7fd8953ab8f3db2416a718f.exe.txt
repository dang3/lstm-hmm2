push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
or
jl
jl
pop
jl
adc
and
popa
pusha
insb
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
xchg
add
mov
jae
push
jns
lret
scas
xorb
push
cmp
ljmp
push
and
divl
jp
rcl
pop
and
jge
xor
mov
adc
dec
shlb
lea
fists
inc
inc
cmp
adc
in
sub
jle
jg
xchg
in
jl
sub
push
inc
cs
lret
add
sub
fwait
and
xlat
xlat
pop
push
ror
pop
jb
dec
push
pusha
cs
fwait
rol
repnz
mov
dec
popa
loope
or
test
into
aad
ljmp
mov
out
adc
movsb
add
nop
cltd
inc
bound
out
ljmp
xor
mov
cltd
and
inc
in
xor
cmpsl
jo
or
jecxz
test
push
cmp
imul
cmpsl
cmpsl
sahf
dec
sti
cmc
mov
fisubl
or
mov
jbe
lods
jmp
mov
lds
and
mov
cmove
fwait
lcall
mov
ror
faddp
or
xor
adc
je
movsb
and
and
and
incl
mov
cld
mov
xchg
out
inc
call
jno
pop
nop
push
or
jl
adc
jae
xlat
mov
pop
mov
xorl
add
mov
rcrb
jb
mov
dec
and
pop
pop
dec
mov
hlt
dec
mov
pop
adc
mov
push
fsts
cmpb
mov
scas
mov
flds
adc
mov
jge
mov
fs
shrl
imul
and
mov
sub
js
or
outsl
or
outsb
mov
decb
xchg
mov
cmpb
mov
adc
cmp
cltd
push
lds
sbb
pop
sub
aad
pop
fistpl
pop
pop
ljmp
xlat
jge
fdivrp
mov
scas
lcall
aam
inc
inc
jb
shll
rclb
aaa
ljmp
shr
jns
sub
cld
mov
outsb
mov
fsubs
frstor
int3
into
mov
movsb
sbb
dec
jg
les
or
in
addl
out
lods
nop
in
ds
ja
cmp
cmp
lcall
int
jmp
jne
jl
and
mov
xchg
mov
pop
xor
xchg
pop
js
jae
sbb
jmp
push
int
iret
xchg
xlat
jle
mov
pushf
mov
and
sbb
dec
dec
int
dec
sbb
enter
sub
cmp
movsb
lret
and
scas
inc
ss
xchg
rolb
rsm
xchg
pop
dec
call
cmp
jbe
fwait
push
sub
xor
cli
mov
add
fwait
movsl
xor
fisubrs
adc
xchg
fldt
out
adc
cmpb
inc
sarl
xchg
dec
xchg
cltd
cltd
faddl
mov
lret
loop
inc
int3
lcall
outsl
inc
or
aas
mov
pop
xor
imul
lods
popf
andl
enter
sub
mov
mov
das
iret
pusha
add
mov
sahf
jle
lret
cmovne
cs
insb
inc
sub
testb
mov
shrb
xchg
mov
scas
dec
xor
fildll
ret
pop
lret
gs
pusha
inc
ja
cwtl
sbb
test
iretw
out
xchg
dec
icebp
cld
sbb
cwtl
js
inc
pop
mov
imul
test
iret
out
cli
jmp
mov
dec
rcrb
cmp
pushf
sub
clc
cmp
out
stc
and
lahf
push
mov
dec
out
pop
cmp
ljmp
insl
jecxz
outsl
xchg
sub
inc
pop
iret
jns
repz
mov
scas
lds
movsb
clc
inc
outsb
and
aad
push
jae
scas
inc
rorb
popa
fidivl
jmp
pop
shl
mov
and
sarl
sbb
fistpll
outsb
push
aas
inc
add
movb
test
ja
lods
or
lahf
dec
test
inc
cmpl
sbb
inc
aaa
mov
and
mul
pop
fnstcw
sbb
push
negl
imul
loopne
mov
sub
shr
icebp
xchg
jne
out
clc
pop
addr16
mov
idivl
adc
scas
popa
clc
cmpl
dec
mov
aaa
rcll
push
push
in
sbb
pushf
adc
jp
sub
inc
xor
imul
neg
idivl
popa
icebp
in
dec
sbb
xorl
mov
xor
mov
adc
popa
outsb
shll
xor
push
xor
inc
jg
push
pusha
inc
sbb
mov
jg
test
cmp
in
mov
xor
cwtl
sbb
movq
fildl
cmpsb
rcrb
out
push
sbb
fcmovnu
cmp
jo
pop
roll
jo
in
orb
test
sbb
dec
pop
adc
ret
imulb
xor
shll
jnp
and
xchg
mov
dec
or
add
ljmp
and
xor
aaa
out
pop
iret
stc
ret
les
js
dec
pop
sbb
pop
or
test
mov
xor
add
cmp
repz
sar
arpl
inc
stc
sub
dec
add
mov
sahf
dec
rcrb
xor
out
xor
lods
mov
ret
push
xchg
out
fisubrs
imul
fimuls
inc
push
test
not
daa
loope
pop
out
aad
mov
movsl
cmp
mov
cli
sub
cmp
mov
add
lret
jo
ds
and
lret
mov
and
dec
mov
hlt
out
add
out
decl
push
sbb
push
push
aas
push
stc
adc
mov
jae
dec
lods
jmp
pop
cmpsb
and
in
mov
mov
xchg
mov
lret
js
push
mov
push
daa
icebp
sbbl
pop
sub
jmp
stos
inc
inc
pop
or
sub
sbb
arpl
inc
pop
imul
test
push
imul
call
aas
push
add
clc
lcall
cmpsl
inc
dec
push
ficompl
xor
orl
inc
pop
jnp
data16
fiaddl
jb
cmpsb
loop
lahf
je
fwait
std
imul
int3
jl
pop
cmpsl
aad
fdivrl
jp
int3
adc
shll
sub
fdivrl
adcl
test
mov
jge
cmc
mov
inc
lds
inc
fwait
jg
adc
mov
inc
sub
jbe
inc
xchg
enter
lahf
jp
adc
pop
xor
dec
and
adc
dec
movsl
int
rep
hlt
cmpsl
ret
sub
shlb
popa
xchg
in
mov
mov
adc
jg
cmpsl
ss
outsl
jl
in
push
jbe
push
or
outsb
fcompl
cmp
adc
cli
jne
arpl
xor
mov
pop
or
jnp
xchg
jmp
mov
xchg
dec
out
shrb
pop
out
mov
cmc
sahf
sub
int
call
hlt
add
pmulhuw
imul
and
fbstp
leave
xlat
xchg
xor
mov
pop
pop
push
xchg
push
push
mov
sbb
cmp
adc
jg
push
shlb
test
into
push
push
sbbl
sbb
aas
daa
mov
ds
lods
adc
push
ret
divl
into
data16
lods
or
push
jl
ljmp
xor
jne
shlb
dec
pop
aam
mov
cmp
ljmp
add
mov
push
ss
outsb
add
jnp
xchg
push
sub
xor
faddl
push
ret
jns
mov
xchg
add
sti
repz
pop
aad
ja
dec
cmp
popf
sbb
or
adc
test
lret
test
adc
cmp
mov
push
push
fisubs
push
orl
add
jg
xchg
add
dec
jno
pop
iret
mov
cwtl
scas
adc
fisubl
xorl
xchg
adc
test
out
pop
outsl
pop
and
push
cli
cs
je
inc
add
xor
dec
push
stos
inc
or
lods
sbb
pop
pushf
dec
hlt
sub
stc
add
stos
imul
mov
mov
nop
sub
pop
sti
cmp
xchg
xor
outsb
mov
cmpsl
aaa
inc
jmp
cmc
mov
in
and
rolb
mov
push
das
and
inc
pop
adc
adc
mov
test
push
sub
mov
jo
jl
nop
or
sbb
test
push
clc
add
out
ja
cmp
aaa
out
or
daa
or
sbb
dec
cli
pop
test
aam
and
or
inc
nop
data16
add
mov
repz
pop
outsl
stos
or
popa
out
xchg
cmpsb
clc
mov
imul
sahf
push
mov
push
xchg
xchg
enter
mov
add
pusha
int
xchg
push
pop
cmp
adc
adcl
popf
int
stc
or
popl
or
sub
outsb
xor
lret
pop
fisttps
pop
mov
in
fnsave
xor
push
mov
xchg
nop
xor
iret
int
push
or
mov
cmc
cwtl
fnstsw
icebp
jno
rcll
inc
inc
mov
stos
sbbl
xlat
rcrl
aaa
jmp
hlt
push
dec
add
mov
push
dec
mov
lods
jge
jnp
ljmp
lret
iret
cli
subb
adc
lods
ret
add
mov
add
fdivl
divb
and
and
mov
es
enter
insl
sar
clc
and
add
push
xchg
inc
xor
and
test
inc
jo
mov
or
clc
push
rcl
jb
xlat
scas
jecxz
and
cmp
and
cmpsl
and
add
xlat
out
cmp
enter
outsl
movsl
mov
out
out
jb
jbe
cs
fimuls
repnz
xchg
shlb
pop
pushf
outsb
push
fdivrs
xchg
imul
adc
push
rclb
or
stos
js
sbbb
in
jle
push
loope
iret
stc
lret
or
lret
fdivl
das
sub
inc
pop
xor
cld
subl
data16
popf
in
adc
ljmp
mov
and
xor
jp
xchg
pop
lret
lahf
pop
or
and
sti
sti
mov
cwtl
sar
sub
adc
inc
mov
loope
add
xorl
sbb
jl
imul
mov
mov
jp
sub
nop
adc
push
call
dec
rolb
xchg
sub
jmp
pop
data16
inc
mov
mov
mov
loopne
add
adc
imul
ja
sub
or
fcmovne
dec
movsb
cltd
adc
pushf
fidivl
gs
es
inc
dec
stos
scas
lret
xchg
and
jno
movsb
push
add
xor
push
out
pop
ret
mov
aam
movsb
mov
popf
roll
insb
repz
cmp
shl
inc
adc
cmp
jae
and
and
cmp
cmpsl
outsl
not
stos
hlt
mov
fistl
push
adc
loope
and
push
push
in
jecxz
rcrl
call
pop
pusha
adc
push
out
arpl
ffreep
lock
jb
xchg
pusha
and
adc
fcmovnu
jno
jae
fsub
imul
xor
aad
je
test
into
cwtl
jne
dec
or
enter
popa
out
push
dec
mov
lea
rcr
push
push
xor
xor
outsl
shll
pusha
dec
cmpsb
movsb
andb
xchg
cmp
adc
mov
outsb
cmp
loope
loope
push
idivl
xchg
fucomip
pushf
imul
cmp
mov
cmp
mov
sbb
je
xor
into
inc
cwtl
aam
mov
or
ds
sub
xchg
dec
push
in
cwtl
push
jns
mov
std
dec
out
lret
sub
adc
pavgb
adc
mov
mov
sub
jne
movsl
clc
out
lcall
dec
lcall
enter
add
jl
in
cmp
jne
aas
xchg
push
jge
and
pop
mov
adc
push
aas
push
push
jnp
sbb
fisubl
lods
pop
and
inc
xchg
jnp
mov
pop
sbb
pop
mov
add
outsb
add
cs
sahf
ja
movsl
test
fdivrs
addr16
push
in
into
mov
sbb
loopne
outsl
pop
mov
xor
test
add
mov
roll
dec
rorl
push
popa
sub
aam
push
jle
hlt
sbb
call
or
dec
jl
clc
sahf
shl
cmp
aam
and
push
push
push
inc
movsb
sbb
scas
dec
push
sub
stc
jge
divb
outsb
cmp
loopne
fwait
data16
push
mov
push
adc
in
aaa
fldt
je
xchg
cmpsb
inc
mov
nop
mov
push
push
pop
and
rol
test
fidivrs
lods
sub
subb
dec
lahf
sti
int
or
les
jp
xor
sti
xchg
gs
adc
andl
loopne
dec
jl
add
shlb
test
into
clc
adc
hlt
mov
addr16
and
aad
xlat
cmp
mov
dec
mov
jne
xchg
pop
add
and
xchg
xchg
int3
aas
xor
inc
push
fucomi
push
xchg
sub
insb
or
mov
push
push
andb
add
lcall
mov
enter
xlat
sbb
filds
jb
ljmp
out
jne
pop
add
sbb
push
or
into
dec
add
movsb
icebp
jnp
gs
jmp
or
jae
inc
fwait
icebp
mov
movsb
and
rclb
mov
int3
push
hlt
add
xor
push
clc
insl
imul
testl
push
test
icebp
lret
lods
push
test
add
jae
outsb
pushf
mov
in
and
mov
fidivrl
sub
lret
out
jnp
cmp
sbb
pushf
cmc
jb
clc
add
cmpsb
ds
jg
ds
jge
leave
add
and
mov
daa
or
dec
pop
dec
adc
cmp
xchg
mov
mov
add
idivb
xchg
mov
mov
dec
popf
js
mov
mov
scas
mov
repnz
jg
jnp,pt
xor
adc
ret
inc
dec
cs
jp
mov
fdivrs
in
push
cmp
jnp
and
out
mull
or
aad
mov
push
jns
inc
mov
ja
mov
movsl
pop
pop
mov
xchg
cmp
cmp
inc
ja
mov
mov
in
pop
xor
pop
ret
enter
xchg
aas
pop
sahf
gs
push
imul
fistl
sub
xchg
jns
xchg
or
xchg
fwait
xlat
cmpsl
push
mov
mov
jne
imul
xor
aad
dec
and
push
jge
andb
outsb
xchg
pusha
insl
sub
or
loopne
cmp
jg
cmpsb
sti
dec
hlt
dec
lds
addr16
cmpsb
sub
mov
repnz
push
cmp
lods
insl
push
fcmovbe
xchg
sti
pop
mov
shr
int3
dec
pop
inc
sbb
or
sub
jmp
mov
adc
lret
outsb
jb
out
jecxz
pusha
xchg
pop
mov
in
lret
lock
inc
jo
gs
mov
mov
jp
nop
sbb
xor
xchg
fbstp
jb
imul
xchg
xor
stc
push
lods
xchg
scas
add
frstor
fldt
xchg
adc
lock
dec
pop
add
and
jecxz
arpl
aad
mov
adc
stos
add
adc
dec
fwait
lret
test
or
out
pop
jecxz
incl
cld
sahf
inc
fxch
mov
imul
mov
sub
push
jmp
pop
jnp
xorb
pop
cmc
ror
mov
jno
and
sbb
insl
aam
mov
jg
jo
jecxz
ljmp
jns
hlt
stos
jge
jmp
jge
push
pop
add
sbb
enter
je
es
jmp
pop
push
mov
mov
mov
sub
sub
loope
sbbb
lcall
ret
cmp
fwait
xor
sbb
dec
pop
xchg
ret
xchg
jle
lret
pushf
testb
mov
xchg
jae
sbb
aam
mov
repz
and
push
xchg
dec
jno
bound
xor
shl
in
and
out
jnp
or
lods
mov
ficoms
mov
dec
ret
ljmp
mov
jmp
addl
mov
cmp
aaa
inc
mov
fnstcw
fwait
gs
dec
imul
shl
jo
pop
iret
out
js
bound
in
dec
movsb
sub
mov
inc
and
cltd
rep
cmovge
arpl
jmp
les
and
xchg
adc
cld
pop
adc
loope
pop
cmpsl
movq
and
jb
fldcw
pop
xor
dec
ret
cld
ja
pushf
xchg
stc
stos
adc
in
data16
pop
inc
call
mov
push
jo
push
jno
add
daa
push
adc
rorl
repz
sbb
insb
je
js
lds
push
addl
popa
jae
les
jmp
inc
sub
psadbw
adc
dec
roll
jecxz
mov
sbb
outsb
xchg
mov
das
adc
xor
data16
inc
out
fidivrl
je
pop
xchg
dec
ljmp
pop
mov
or
jg
ljmp
insl
out
add
push
mov
xor
xchg
push
sarl
loope
addr16
cs
xchg
mov
xor
pop
sub
jbe
loop
test
add
mov
jnp
loopne
mov
test
mov
sbb
add
rcrb
pusha
test
jne
mov
cmp
lods
push
cmp
cld
and
out
adc
pop
mov
xchg
test
int3
push
cmp
xchg
add
add
lahf
daa
int3
mov
les
xor
loopne
and
inc
repnz
movsb
les
fildl
mov
sbb
xor
mov
imul
rcrb
mov
push
lea
shll
adc
inc
push
cmp
cmc
stc
cmp
bound
jl
nop
push
xchg
dec
jp
in
lea
sbb
xor
dec
pop
repnz
add
scas
int3
into
xchg
addr16
imul
shlb
outsl
jp
dec
dec
fs
push
cmp
std
leave
jne
dec
inc
and
push
popa
lcall
pusha
cmpb
ss
and
in
mov
push
sbbb
xchg
loop
mov
lods
or
lea
lret
dec
lea
and
pusha
in
je
push
jle
inc
xor
in
shrl
ljmp
jno
mov
test
mov
stc
notl
movsb
cltd
ss
pop
push
cmp
insb
jmp
outsl
inc
dec
in
pop
sti
jno
nop
div
pop
movsl
xor
inc
inc
or
dec
sbb
sub
aad
mov
mov
in
imul
sbb
in
pop
in
mov
fistl
xlat
andl
jg
xchg
adc
or
dec
cmpsb
incb
mov
pop
adc
cs
and
add
test
aad
movsl
hlt
stc
add
test
js
dec
rorl
mov
adc
call
sub
ret
shll
or
out
inc
adc
cli
push
outsl
push
in
and
shrl
xchg
mov
and
and
or
cmp
push
in
sarl
xchg
sbb
inc
std
loope
push
es
ds
cltd
cmp
and
loop
je
leave
inc
outsb
pop
or
pop
test
mov
std
call
cmpb
bound
aas
ljmp
in
add
sbb
jbe
daa
dec
or
aas
xchg
in
cmc
inc
outsl
int
add
add
jns
rcrl
jg
inc
ds
test
mov
dec
mov
cltd
and
mov
dec
jp
int3
push
ficoms
inc
test
mov
sub
cli
arpl
adc
ret
or
adc
jge
sbb
mov
mov
sub
add
in
fdivrl
add
xor
jae
loopne
das
addr16
cmp
xchg
jb
inc
scas
inc
mov
mov
fcoms
shl
push
sbb
fcom
dec
push
mov
lret
imul
mov
aas
ljmp
lahf
out
jg
lahf
in
add
pop
iret
stos
ret
and
sets
fisubs
sbb
outsb
xchg
push
es
pop
enter
jae
lds
inc
ret
gs
pop
dec
aad
in
sahf
lods
pop
loop
pop
push
in
sbb
add
xor
scas
cld
cmp
xor
dec
clc
sub
ret
pusha
js
add
inc
dec
jne
or
popf
dec
das
jbe
sbb
popa
push
insl
repnz
mov
lcall
xor
sub
mov
pop
jp
push
idivl
insl
xchg
sarl
out
lock
sbb
cmc
pusha
mov
mov
cwtl
pop
lahf
cs
push
xchg
out
rclb
sbb
test
popf
xchg
jbe
sbb
lock
push
popf
leave
and
lock
mov
inc
ljmp
shlb
faddl
ja
call
xchg
das
ret
mov
adc
lods
cmp
dec
clc
lock
testb
lods
xlat
jb
push
xchg
movsb
lds
sbb
xchg
push
push
pop
xchg
xchg
mov
les
push
dec
mov
aam
or
cmp
sbb
lods
sbb
gs
lcall
in
push
xchg
dec
fsubrl
jb
jbe
aaa
jecxz
xorb
push
cld
ret
aaa
pop
test
stos
adc
sub
inc
mov
cmp
dec
js
add
lret
mov
outsb
bound
sub
pop
aaa
jbe
cmp
xor
lret
stos
inc
adc
pop
fwait
je
rclb
lock
loop
dec
or
jae
push
or
sub
in
jecxz
cwtl
sahf
lods
sbb
jns
sbb
add
mov
ds
xchg
xchg
jge
adc
xor
add
mov
mov
aam
sbb
sub
lea
pop
mov
push
arpl
mov
imul
sub
repnz
mov
je
push
sub
loope
gs
pop
jo
fbstp
mov
xchg
in
add
push
pop
fisubl
xchg
push
shlb
adc
fsubrs
aam
bound
ret
outsb
push
cmp
jns
das
mov
jb
mov
inc
inc
imul
jge
in
mov
orb
lods
sbb
mov
pop
stc
sub
push
jnp
cs
enter
cs
or
fsubrl
sbb
inc
movb
fcom
movsb
jmp
fisttpll
push
cltd
daa
or
dec
ret
lods
std
cmpsl
jmp
outsb
and
stos
inc
xor
aaa
push
add
xor
and
nop
mov
sub
jge
sub
sub
cmc
lods
xor
shl
xor
add
test
fists
add
cmpsb
les
decl
cmp
in
cmp
fwait
mov
xor
enter
inc
in
jmp
divl
into
pusha
xor
jl
loop
push
sti
or
and
lret
mov
add
mov
dec
push
hlt
cmp
sub
sbb
jg
xor
call
dec
adcl
xchg
xchg
xchg
outsl
pop
mov
and
push
mov
stc
ffreep
pusha
fsubrl
mov
jge
in
cli
sbb
movsb
fwait
cltd
cmp
sarb
movsb
and
inc
filds
xchg
mov
idivl
inc
pop
mov
rol
xchg
push
adc
jp
loope
jno
pop
jecxz
lahf
adc
cmpsl
outsb
rcrl
mov
adc
mov
int
mov
sub
movsb
mov
repz
mov
loop
pop
pop
loope
shlb
or
mov
insl
outsl
fildl
clc
rorb
dec
or
sahf
adc
call
cltd
pop
fdivl
jmp
es
jl
cmp
sbb
mov
aaa
dec
mov
push
int3
cmp
imul
mov
mov
ja
outsb
iret
mov
dec
les
std
adc
movl
xchg
xchg
mov
or
xchg
mov
je
outsl
adc
lods
xchg
pop
ret
call
enter
shr
fnsave
push
lret
push
and
outsl
in
insb
adc
xor
mov
push
or
adc
mov
fstl
jmp
jbe
push
pop
fmull
stc
inc
sub
dec
mov
jmp
shll
add
dec
je
cmp
clc
or
mov
jae
leave
mov
lret
and
cmp
test
int
insl
mov
in
sbb
xor
das
mov
inc
lret
cmp
and
jns
mov
fisttpl
mov
sub
xchg
rcl
addr16
inc
aad
lret
sbb
les
repz
push
mov
test
loopne
mov
int3
add
xor
dec
pop
sub
mov
cmp
lahf
mov
fsubl
xchg
add
out
daa
daa
sbb
shlb
sbb
call
or
lret
clc
sub
invd
lods
loopne
adc
xor
mov
outsl
in
mov
lock
inc
or
xlat
dec
iret
rorl
and
popa
inc
mov
or
cltd
roll
les
arpl
adc
popf
out
adc
aaa
imull
or
mov
sbb
xchg
outsl
lcall
pop
js
or
lods
xor
inc
push
rclb
cld
xor
push
scas
popf
mov
push
clc
mov
xchg
sti
frstor
add
ret
xchg
clc
add
out
aaa
aam
inc
push
movsl
xchg
sbb
pop
rcll
xchg
mov
stos
cwtl
lea
xor
sbb
cmp
xchg
lods
mov
adc
outsb
fsub
popf
lock
mov
xor
jl
stc
push
pop
dec
es
jge
leave
jo
fmul
dec
pop
xor
xor
jb
fucomp
hlt
cmp
test
movsl
dec
lods
jp
push
pop
lret
mov
add
ret
xchg
push
sahf
aam
push
push
jp
arpl
mov
jae
mov
out
jns
call
scas
cmp
int
mov
pop
fadd
xor
es
jl
outsl
and
jno
into
stos
cltd
mov
stc
mov
pop
gs
dec
cmpsb
xchg
sbbl
or
xchg
gs
outsl
mov
cltd
mov
loop
shlb
lea
cmc
mov
and
add
movsb
mov
fnsave
mov
pusha
pop
sbb
dec
push
push
aaa
push
pop
mov
cmp
pop
rorl
out
jl
mov
add
mov
xor
int3
push
or
xor
in
xchg
jno
xchg
dec
fwait
aad
cmp
and
push
mov
loopne
fstpt
pop
ss
adc
mov
inc
xchg
and
scas
add
call
sub
add
fwait
adc
and
dec
test
xor
dec
insb
out
movsl
repz
popl
dec
or
mov
cs
jmp
jbe
insb
popa
or
xchg
sbb
js
stos
push
cmc
dec
mov
pusha
xor
or
in
hlt
movsl
xlat
mov
or
movsb
adc
cmp
fisubs
mov
mov
jnp
stos
and
fwait
repnz
cmp
adcb
xor
or
outsl
xchg
stos
testb
cmpsl
cltd
sub
add
xchg
jp
rolb
xor
adc
pushf
adc
pop
push
xchg
jle
push
std
sub
add
dec
pop
cwtl
xor
pop
mov
shr
jnp
jl
into
test
jne
xlat
loope
xlat
xchg
jo
out
aaa
jo
or
push
jne
push
push
lds
add
aad
xchg
orb
lea
repz
ret
mov
jnp
jnp
or
xor
addr16
pop
xor
adc
fisttps
mov
inc
repz
js
filds
fdivl
mov
push
hlt
in
mov
jno
add
jo
xchg
jg
pop
add
jo
js
push
sub
mov
xor
jne
xor
jae
inc
in
in
in
or
lods
pop
in
popf
and
cwtl
push
adc
ljmp
shrb
lea
push
ret
test
xchg
rol
pop
inc
nop
or
dec
addr16
mov
in
imul
rcll
inc
cli
sbb
add
testl
sbb
scas
sub
mov
jne
sbb
mov
neg
int
iret
test
jge
movsb
lcall
int3
mov
inc
pushf
bsf
int
or
dec
in
cli
inc
sahf
jl
cmp
cmp
std
and
fildl
sarb
xchg
scas
jne
mov
and
add
out
test
das
mov
sti
js
inc
cld
push
shl
push
jb
and
xchg
mov
mov
loopne
bound
cmp
fisttps
stos
dec
pop
cwtl
dec
push
popf
pusha
dec
data16
mov
scas
int3
test
xor
mov
bound
subl
imul
jae
push
stc
pop
dec
xor
xchg
cmp
jns
rcll
pop
mov
das
mov
popf
push
push
xor
or
incl
ret
mov
fcoms
cmp
rcr
lods
jmp
jle
daa
icebp
mov
cld
and
push
xchg
mov
out
in
xorl
xchg
inc
xlat
es
gs
mov
sub
pop
insb
inc
jns
dec
mov
xchg
cmpsb
ja
pushf
nop
push
mov
mov
sar
shll
mov
push
inc
cmp
loopne
mov
xor
push
or
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
pop
rcrl
jl
pop
jl
add
adc
push
je
aad
repz
inc
jb
jo
lds
mov
mov
aaa
pop
scas
mov
nop
pop
cmp
inc
xor
add
and
fstps
xor
outsl
sbb
xchg
push
push
cmp
gs
or
adc
adc
push
das
pop
push
mov
repnz
adc
inc
and
out
xor
mov
gs
sbb
repz
jae
sub
xor
mov
outsb
movsl
into
lret
shrb
inc
imul
dec
cs
adc
or
lret
iret
add
mov
xor
movsb
cli
lcall
push
cli
sub
enter
imul
or
sti
nop
lahf
ret
mov
ficoms
arpl
loope
jo
jge
loope
fiaddl
test
stos
or
aas
fsubrs
repz
lods
mov
mov
sbb
leave
sbb
push
hlt
pop
fwait
insl
fnsave
xor
sbb
dec
mov
sbb
adc
iret
movsb
leave
and
inc
or
movsbl
lock
push
stos
loop
cmpsb
fildl
call
std
clc
or
xor
jb
lods
and
mov
sub
cmp
gs
fistpl
sub
mov
aaa
adc
dec
orb
mov
cmp
ljmp
movsl
sti
and
xchg
ror
jecxz
pop
insb
rcrl
je
mov
sbb
mov
lret
fistpl
inc
iret
les
and
repz
stos
stc
jge
add
pushf
pushf
jl
sahf
push
xchg
out
cmp
mov
leave
lock
fwait
test
lea
sbb
fsubrs
divb
or
mov
das
push
loopne
fbstp
adc
hlt
dec
ds
in
in
push
jle
sub
mov
adc
out
xor
adc
mov
std
cmp
push
push
xor
cmpb
sub
out
push
mov
rcll
mov
fcompl
cmpsb
adc
into
cmp
pop
and
xchg
sbb
jne
inc
mov
mov
lret
test
add
aad
lods
iret
imul
or
mov
pop
push
fwait
mov
das
dec
mov
outsl
push
imul
cmc
cmpsb
sub
aas
inc
outsl
and
popf
dec
dec
jae
xchg
sbb
jge
not
insb
imul
or
sbb
and
mov
add
xchg
jle
mov
aaa
fsubl
and
cwtl
add
sbb
jno
jecxz
sarb
xor
rcrl
loop
aaa
pop
je
xor
mov
inc
insb
mov
out
push
jle
sbbl
fwait
sti
xlat
scas
mov
jne
in
push
sub
dec
mov
pop
cwtl
into
mov
mov
sbb
xor
push
push
mov
arpl
cmp
pop
loop
movsb
inc
pop
lret
xlat
mov
pop
pop
ss
cld
das
xchg
mov
pop
adc
sbb
push
jge
popa
aad
xchg
jae
sbb
mov
push
xor
outsb
cmp
mov
xorb
pop
out
push
aaa
leave
push
dec
jne
inc
jg
repnz
cmp
mov
dec
aad
test
inc
std
aas
lret
xchg
roll
stc
stc
movsb
sub
fistpll
push
aam
shl
dec
inc
mov
iret
dec
sbb
ret
aas
add
adc
test
or
or
jae
fnstsw
xchg
sub
je,pn
in
and
out
mov
jp
fs
shll
push
imul
jp
push
pop
xor
lods
out
aas
pushf
gs
lock
mov
or
cld
ja
adc
pop
bnd
mov
je
mov
adc
xchg
outsb
roll
aaa
add
add
mov
mov
push
mov
addr16
movsl
andb
test
mov
and
stos
xor
xor
jmp
adc
jae
stos
cltd
mov
xchg
pop
and
push
out
scas
and
xchg
dec
std
leave
outsb
fcompl
rol
jecxz
std
ja
testb
jg
push
iret
lret
mov
inc
clc
or
push
in
je
imul
pushf
and
mov
insb
sbb
xchg
xor
shlb
or
lahf
cmovbe
sub
lahf
fstpl
in
mov
xor
lret
incl
popf
rcll
lea
mov
mov
sbb
movsl
pop
arpl
sbb
pusha
mov
xchg
fsubrs
sti
jp
push
rol
jb
push
jp
inc
push
sbb
sbb
mov
stos
jbe
pushf
fiadds
fnstenv
loope
mov
stc
lock
or
out
imul
pushf
add
filds
pop
add
and
ja
jb
xchg
aaa
ret
rolb
pop
xor
mov
shll
inc
test
push
andl
addl
mov
mov
lret
xchg
je
jae
push
cmp
aas
rorb
pop
es
daa
cmp
jecxz
mov
in
js
fwait
push
popa
xor
lock
cmc
test
mov
jae
cli
inc
xor
mov
push
fadds
mov
sub
movsb
outsb
push
scas
insl
cmp
sub
adcl
push
and
sub
test
into
popa
sbb
jp
call
pop
sbb
stos
pop
sub
into
mov
pop
xchg
add
out
push
pop
ficomps
add
xchg
add
cmp
cld
pop
xchg
data16
jle
inc
jl
cwtl
outsl
and
add
jno
add
mov
push
push
or
sub
movsl
pop
and
lock
fistpll
dec
push
mov
out
push
pop
fwait
sub
pop
push
in
sbb
rep
lods
and
movsl
mov
and
ficomps
and
stos
in
ret
cltd
mov
xchg
stos
xor
pop
jb
loopne
bound
cltd
repnz
scas
mov
ret
out
addr16
into
popf
add
aam
dec
call
loopne
xchg
mov
les
fimull
jae
and
aad
adc
cwtl
jne
xchg
loope
cmc
loopne
inc
call
testb
sti
xchg
shll
xlat
push
push
movsl
add
or
add
cmc
mov
cmp
xor
xchg
sub
pusha
decb
fcmovbe
mov
mov
jbe
aaa
add
cmc
jle
mov
dec
mov
or
les
ljmp
bnd
loopne
lds
sti
dec
or
lahf
xchg
push
push
repz
xchg
sub
mov
adc
sbb
sarl
sbb
outsl
jne
lds
xor
cli
xor
out
push
or
pop
push
or
xchg
ret
push
mov
sub
xchg
mov
outsl
mov
fwait
sti
test
mov
scas
dec
shlb
insb
mov
outsl
sub
and
es
aam
sbbb
mov
std
inc
mov
div
outsb
sbb
jp
mov
cli
push
bound
mov
shrl
mov
fbld
test
test
pop
nop
sbb
and
clc
push
outsb
jp
insb
cmp
lret
test
out
cmp
stos
lahf
jo
jl
and
lcall
lret
jbe
ljmp
sub
push
aas
xchg
push
pusha
and
inc
xor
mov
add
jg
ret
pop
pop
fadd
add
pop
mov
mov
call
push
sub
mov
ret
inc
dec
icebp
or
lret
mov
mov
push
dec
mov
xor
xor
movsb
lods
dec
mov
jge
repnz
jmp
mov
xchg
xchg
xchg
mov
jl
inc
mov
adc
orl
cs
divl
int3
sahf
or
int
mov
sbb
movsl
imul
xor
mov
es
xor
lods
push
jmp
das
cmp
inc
or
shll
push
jbe
scas
or
fdivs
das
daa
cmp
inc
repz
adc
out
sbb
hlt
mov
insb
jo
push
inc
sbb
push
xchg
in
cltd
lret
imul
adc
cmpsl
in
pop
add
stos
shlb
or
or
cmp
daa
shll
push
int3
sti
fldcw
xchg
mov
dec
bnd
mov
int3
and
lea
sbb
rclb
jmp
inc
pop
es
pop
arpl
mov
out
aaa
xor
sbb
negb
je
cmp
xor
repz
lret
stos
enter
popa
add
sti
mov
push
xor
cmp
testb
mov
jp
cmc
dec
jo
pop
int
adc
ds
sub
jle
jb
movsl
dec
jl
jecxz
int3
or
movsl
adc
blcmsk
inc
test
cmpsb
mov
xchg
cmc
cwtl
addr16
sti
sub
and
pushf
das
in
sub
fisubrs
dec
xor
ss
int
mov
hlt
mov
sub
cwtl
mov
dec
jl
pop
imul
js
icebp
pop
stos
inc
cmp
mov
sbb
cmp
adc
cmp
sub
out
mov
xlat
mov
adc
cld
sub
or
jne
add
mov
push
and
pop
adc
shrb
lcall
mov
aaa
jb
iret
xchg
sub
dec
aaa
xchg
mov
cmp
cli
scas
mov
arpl
into
shll
lds
or
push
test
outsl
scas
jns
cmp
mov
lcall
dec
sub
insl
push
fwait
movsl
lds
out
xchg
or
and
enter
mov
inc
pop
daa
xor
mov
pop
adc
mov
daa
cmp
enter
imul
jnp
data16
jge
push
ret
in
mov
cmpl
popf
fnsave
jnp
insl
fmul
stos
add
test
pop
int
add
dec
pop
cmp
iret
fstl
mov
aad
and
xchg
das
xlat
dec
jle
dec
sarb
jb
sub
adc
bound
xchg
js
mov
stos
fnstsw
xor
dec
mov
frstor
mov
test
mov
in
mov
loopne
repnz
sti
in
pop
xchg
and
cmp
out
mov
xchg
inc
ss
or
jmp
push
push
xlat
jge
add
out
dec
xor
adc
cwtl
jmp
ret
mov
fiadds
dec
shr
mov
lds
sub
std
or
jg
mov
out
sub
pushf
jecxz
out
xor
mov
jno
lods
mov
insl
push
fst
notb
lea
mov
inc
mov
fidivrs
sarl
adc
mov
mov
out
jmp
add
xchg
inc
sub
movsb
sub
out
jne
mov
inc
xchg
inc
decb
mov
jmp
xor
in
dec
xor
lock
in
or
mov
movsl
test
mov
and
cmp
and
or
pop
call
push
and
mov
addl
xor
outsl
push
scas
inc
cmp
stc
mov
subl
cmp
arpl
jb
inc
repnz
push
daa
mov
sbb
fwait
xchg
inc
add
scas
pop
pop
pop
stc
aaa
subl
mov
dec
lret
push
cmpsl
ljmp
mov
lahf
sub
inc
mov
popf
cli
sbb
jl
jnp
xchg
scas
icebp
and
lea
mov
imul
cwtd
outsb
ret
rorl
push
arpl
cltd
fdivl
jb
fmull
shll
cmpsl
add
inc
jb
stc
jae
inc
inc
and
sbb
jno
jno
hlt
lret
test
xor
stos
inc
loopne
mov
dec
xchg
mov
testb
sbb
jnp
mov
call
push
fmull
mov
push
add
out
frstor
or
js
lock
inc
in
xchg
xchg
aad
repz
lcall
clc
mov
xchg
jno
pop
sub
push
hlt
mul
jge
mov
in
xor
loope
out
mov
mov
fdivr
mov
xor
neg
incb
dec
aam
inc
fiaddl
and
movsb
aas
dec
subl
test
pop
xor
test
hlt
inc
arpl
push
or
jae
dec
test
aaa
adc
mov
push
jb
inc
jno
les
xchg
scas
je
mov
fs
outsb
movsb
mov
stc
push
cmp
xchg
negl
fwait
mov
and
in
pop
in
js
aad
les
sbb
rcrb
stc
cltd
rclb
lahf
adc
lea
fnstcw
mov
shll
lret
inc
jmp
push
sbb
cmp
cmp
mov
stos
repz
sarb
loopne
pop
pushf
sbb
inc
or
call
mov
test
out
pop
in
ds
ficompl
out
and
and
sbb
dec
lcall
push
push
iret
mov
xchg
jns
xlat
xchg
cmpsl
mov
int3
mov
jb
fcoml
fnstcw
push
inc
scas
ljmp
cmpsl
lret
mov
loopne
or
inc
mov
push
jp
sub
cld
push
inc
pop
dec
jno
lea
or
das
ja
inc
lcall
rorb
in
das
insl
xor
in
pop
mov
imul
mov
mov
adc
out
cltd
mov
lock
and
cwtl
push
sbb
imul
pusha
adc
shll
repnz
push
or
in
mov
pop
stc
ror
and
pop
sub
or
xchg
mov
inc
pushf
xor
lods
ret
aad
data16
or
mov
sbb
cmpsl
jno
sub
outsb
hlt
popa
fisttps
fwait
xchg
jb
in
pop
lea
cmp
sub
fwait
sbb
ficoml
out
fstpl
or
xchg
mov
add
maxps
fnsave
xor
xchg
xor
push
rcr
jmp
cltd
adc
add
add
push
pop
insb
jns
sbb
fwait
lds
or
xchg
repnz
daa
pop
cmpsl
out
jne
sbb
lods
ds
xor
pop
mov
cmp
in
sahf
jnp
mov
shld
loope
adc
xor
xchg
pop
sbb
pop
in
jp
sti
dec
mov
dec
in
out
xchg
testl
std
xor
sbb
or
sbbl
out
sti
ss
mov
addr16
bound
xchg
push
adc
andb
stos
out
push
push
lea
in
aas
stos
xorb
jg
pushf
inc
nop
dec
daa
mov
imul
pcmpeqd
arpl
mov
imul
ret
testl
ret
adc
mov
mov
ret
xchg
aam
mov
and
sbb
lods
gs
daa
dec
or
sbb
add
pop
imul
mov
test
sub
pushaw
data16
sbb
or
arpl
push
mov
push
out
scas
or
clc
xchg
loopne
bound
jg
mov
jns
cwtl
xchg
je
loopne
jecxz
dec
or
push
adc
mov
xor
xor
adc
jmp
mov
mov
icebp
cwtl
sub
lret
mov
adc
fsubl
and
std
mov
repnz
stos
sbb
mov
mov
xchg
mov
popa
fld
les
jg
fwait
adc
jmp
sub
imul
out
das
jbe
cmc
mov
sub
mov
sbb
call
inc
adc
push
xor
dec
cwtl
test
pop
add
jae
xchg
xchg
pop
jmp
cs
mov
cs
push
push
test
xchg
and
xor
lcall
call
mull
cwtl
mov
je
decl
movsb
mov
out
pop
addr16
or
ds
sbb
push
jle
cld
inc
stos
or
test
mov
mov
out
into
lret
lret
pop
cltd
ljmp
mov
add
push
sbb
out
rcr
pusha
jo
jmp
add
rcrb
cwtl
dec
lret
fwait
sbb
enter
int
mov
js
pop
xchg
ljmp
cmp
in
sahf
and
or
pop
push
dec
mov
mov
cmp
jecxz
mov
jmp
dec
aad
lock
xor
lea
and
sub
fwait
push
cwtl
push
mov
mov
and
fwait
gs
insb
mov
stos
leave
in
imul
or
mov
dec
loope
fdivrs
iret
push
jl
adc
dec
out
mov
addr16
in
mov
jg
jo
out
xchg
push
xchg
push
call
das
ljmp
adc
xor
sub
sbb
mov
mov
test
and
xchg
es
testl
clc
icebp
push
lock
bound
xor
sub
xchg
hlt
cmp
out
dec
mov
cmp
mov
aam
pop
bound
mov
push
mov
and
sub
popa
rcrl
lahf
sub
xchg
iret
andl
ret
push
jne,pt
js
mov
nop
and
push
xchg
clc
cli
imul
imul
mov
aas
cltd
and
and
mov
call
cld
jb
push
mov
adc
cli
rcrl
cmpsb
outsl
xor
jp
imul
shlb
addr16
sbb
cmpl
rcr
add
jo
and
fucom
out
cmpl
or
ss
sub
arpl
sub
and
fldl2e
cs
lcall
cwtl
sti
movsb
fwait
imul
imul
mov
ret
lds
jg
mov
jbe
cmp
pop
sub
or
mov
shll
outsb
lock
mov
inc
hlt
mov
pushf
dec
inc
mov
adc
pop
sahf
jp
jecxz
data16
test
pop
or
ret
pop
pop
fidivl
vsqrtsd
lods
mov
pusha
sub
xor
mov
push
sub
push
lahf
inc
int3
push
or
fmuls
xor
es
push
int
stos
sub
push
xchg
sbb
sbb
out
shll
jge
mov
cmp
xchg
push
push
aaa
fsubrs
sbb
jmp
negl
popf
movsl
cli
in
fnstsw
mov
int
xchg
jno
data16
adc
xchg
aam
addb
or
bound
adc
fnstcw
out
mov
shlb
jmp
imul
pop
je
adc
pop
ljmp
jp
or
imul
dec
pop
lods
int3
and
and
inc
into
adc
bound
mov
jle
mov
lods
daa
xchg
jle
xor
sub
mov
dec
inc
sub
mov
repnz
pusha
xchg
popf
push
fidivs
dec
loopne
pusha
aaa
xchg
and
orb
enter
mov
jnp
daa
sbb
cmp
jne
xchg
add
jbe
hlt
movsl
push
pushf
lcall
testl
fs
xor
mov
fimuls
mov
lahf
dec
mov
push
cmpl
arpl
xchg
shrb
mov
mov
fsub
xchg
mov
adc
rcrb
add
es
sahf
rcrl
or
int3
in
jns
decl
in
js
add
dec
cs
out
enter
dec
mov
mov
sub
je
ret
mov
or
std
insb
lods
lret
mov
div
push
xor
xchg
jle
xchg
lea
jnp
pop
test
jbe
push
into
fsubs
jns
ja
adc
lods
nop
fadds
and
pop
loop
sbb
pushf
dec
jno
lds
shll
mov
push
cs
pop
or
mov
cmpsb
mov
xchg
adc
loop
cmpsb
scas
movsb
mov
aas
inc
test
movsb
mov
sub
rolb
fucomi
pop
dec
mov
sti
in
sbb
sub
jmp
adcl
sbb
push
jecxz
ljmp
stc
jmp
pop
push
mov
push
in
gs
xchg
pop
push
sub
lret
jbe
aas
clc
call
mov
add
jmp
aas
jmp
push
mov
xorb
cli
push
out
nop
inc
imul
or
out
mov
test
jne
push
push
xor
jecxz
push
or
loopne
scas
shr
pop
lds
xchg
push
ret
mov
or
push
xor
sub
outsb
mov
xchg
loop
sub
ret
repnz
pop
xchg
lea
test
dec
lods
inc
mull
enter
repnz
test
int3
mov
js
add
imul
dec
clc
push
jp
jne
clc
jno
inc
js
shr
xchg
out
neg
mov
mov
inc
int
add
insb
push
fwait
jge
insl
xchg
fistpll
mov
pop
dec
push
mov
enter
push
add
and
cwtl
mov
adc
roll
sub
inc
adc
stos
push
iret
sbb
mov
nop
sbb
jle
popa
xchg
daa
pushf
sub
rcrb
sbb
jecxz
movsb
repz
stos
inc
jge
mov
es
imul
sbb
in
imul
adc
mov
add
xlat
push
lock
aaa
jecxz
cmp
popa
mov
nop
pushf
mov
in
mov
aad
or
push
ret
lret
lds
out
and
loopne
imul
xor
dec
testl
cmp
mov
push
into
ljmp
jle
cmp
mov
loope
inc
mov
cld
mov
pmaddwd
dec
roll
lcall
or
das
int
inc
insl
inc
sbb
xchg
aad
cmpsb
add
call
sti
loope
jg
cmp
dec
in
outsl
cmp
js
push
jg
jnp
cmc
pop
mov
cmp
sbb
add
jns
addr16
mov
popa
pop
jp
push
icebp
ds
adc
jnp
pop
sub
rcll
mov
in
pop
das
repz
mov
mov
rcll
mov
xchg
divb
inc
xchg
mov
mov
fs
push
adc
pop
aas
sub
int3
sub
lods
jbe
cmp
aad
bound
test
mov
mov
imull
mov
outsl
imul
add
das
in
xor
and
sahf
sbb
xchg
add
fidivrl
icebp
pop
movsl
dec
xlat
sar
pop
jmp
sbb
push
and
cmp
push
jl
jb
ljmp
test
mov
ljmp
lock
jns
mov
fsubrs
and
test
pop
or
lret
mov
and
mull
out
loopne
pop
imul
adc
int
aad
adc
push
or
movsb
adc
cmp
jp
btr
lret
pop
push
push
xchg
sbb
cmp
or
insb
adc
mov
mov
jmp
call
not
xor
xor
and
cmpsl
int3
lret
loopne
push
or
ja
and
out
out
jge
and
in
sbb
sbb
cli
fisttpll
mov
int
push
and
call
jge
dec
int
xchg
xchg
imul
adc
ficoml
loop
pop
xor
ficomps
cmp
fistpll
movb
push
inc
movl
and
stos
repnz
imul
push
xchg
cmp
inc
sub
jns
das
push
or
adc
repnz
jl
xor
cmp
ds
cmp
jo
xchg
xchg
divb
out
mov
push
dec
dec
ds
aad
cmp
push
inc
aad
mov
or
push
mov
xchg
shr
cmp
ja
test
mov
cmc
test
addr16
bound
pop
pop
mov
or
loopne
mov
inc
les
stos
inc
cmp
arpl
mov
test
xor
xchg
cmp
testl
into
sarl
fs
lods
hlt
lret
mov
and
fincstp
cmp
cmp
jno
fstl
pop
cmp
pop
mov
jecxz
repnz
lods
push
pop
dec
inc
mov
adc
or
jns
jge
and
call
mov
push
adc
adc
adc
jbe
pop
cwtl
add
add
dec
push
subb
into
pop
mov
in
inc
mov
or
pop
jmp
sahf
bound
js
sub
mov
int3
xor
fistpll
gs
and
push
repnz
jb
out
cli
mov
jmp
dec
addb
add
jge
test
push
and
and
lahf
cmp
pop
mov
leave
push
hlt
sbb
ret
mov
sub
rcl
pop
clc
frstor
inc
fstpt
or
fiadds
imul
dec
xchg
call
add
sbb
int3
out
lock
stc
sub
mov
mov
dec
mov
xchg
into
and
adc
decl
std
jl
dec
gs
lods
dec
scas
sub
imul
jl
mov
or
stos
lahf
sbbl
xor
mov
sub
repnz
mov
sbb
out
sbb
je
jnp
scas
cmp
lock
scas
mov
scas
mov
fsubrp
push
sbb
int
dec
and
xor
xor
jb
movsl
unpckhps
sub
jmp
cmc
push
push
push
rcll
inc
jae
jnp
push
std
dec
xchg
insl
enter
aam
cltd
xchg
repz
rolb
xor
or
cmp
jg
sub
fwait
jns
mov
movsb
scas
dec
jl
ljmp
insl
test
sbb
stos
adc
xchg
dec
inc
ret
xchg
pushf
sbb
push
jb
ss
pop
lods
imulb
mov
call
clc
arpl
loopne
push
add
push
jb
loop
into
clc
dec
mov
pusha
test
xchg
push
out
push
adc
call
lahf
popa
fisubrs
cmp
jns
pop
xchg
cli
negl
out
sbb
xor
add
add
pushf
pop
mov
jg
jmp
mov
pop
lcall
fdivrs
cmp
inc
mov
push
pop
rcll
insl
lcall
cltd
andb
push
je
movsl
subb
xor
call
shlb
sub
dec
sbb
out
les
pop
jnp
inc
sub
inc
pop
test
mov
jo
loope
sahf
nop
movsl
sti
lods
fmuls
mov
cmp
clc
fwait
insb
outsl
ret
js
test
shll
arpl
aad
pop
mov
cld
jne
pop
in
sub
push
inc
pop
repz
nop
sti
les
mulb
lods
lret
mov
jo
mov
push
add
push
or
adc
sbb
movsl
repnz
mov
inc
addr16
out
std
inc
jge
loopne
loope,pn
pop
sub
enter
mov
jne
in
xor
sub
pop
xlat
mov
cmp
sub
xor
scas
divl
mov
clc
mov
xchg
outsb
je
popa
inc
repnz
shlb
and
push
ljmp
xchg
xchg
mov
lret
and
xchg
cld
or
test
xor
iret
popf
rclb
pushf
into
mov
cli
or
adc
call
out
icebp
jnp
sub
loop
into
jns
imul
loope
sub
test
clc
call
aam
std
mov
sub
dec
cltd
sub
aam
mov
imul
mov
not
mov
xchg
leave
jecxz
sti
xchg
out
add
jne
scas
mov
rcll
jno
push
or
jecxz
lret
in
sub
hlt
ret
add
arpl
jmp
push
jae
or
push
xor
cmpsl
sub
repnz
pop
jmp
inc
ss
sbb
int3
bound
cli
jo
cld
cmpsl
test
pop
lret
mov
cmpsb
stc
fs
mov
dec
push
int3
mov
pop
stos
fcompl
pushf
sbb
mov
sbb
and
daa
jnp
int
leave
jb
fistl
test
in
xor
jmp
data16
push
pop
mov
inc
popa
pop
jb
je
mov
movsb
sarl
lahf
in
fs
mov
mov
rcr
test
mov
mov
jecxz
mov
bound
cmp
mov
inc
cwtl
aam
jno
push
lret
or
pop
xlat
iret
fildl
stc
inc
into
jae
mov
xchg
repz
cmpsl
jb
mov
ret
lahf
dec
mull
adc
dec
into
mul
insl
test
enter
sbb
add
in
adc
jge
push
inc
fwait
int3
push
xlat
nop
push
dec
arpl
icebp
jl
cld
aad
adc
cwtl
orb
loop
xchg
mov
in
sar
ja
dec
and
out
out
addr16
in
inc
popa
cld
js
xchg
and
mov
mov
mov
or
outsl
sub
xchg
fimull
fnstenv
jb
hlt
out
push
or
fcoml
std
jo
ds
movsl
add
jge
adc
xor
dec
lods
sub
lret
push
stc
cmp
pusha
and
push
mov
xor
stos
mov
fistps
jno
mov
fisubrs
pop
lods
pushf
mov
iret
lret
mov
or
cmpsb
inc
xchg
push
mov
adc
push
sahf
nop
jge
insl
xchg
aad
out
inc
jb
aad
flds
jle
scas
lret
inc
jg
and
or
xlat
cltd
push
popa
xchg
cmp
scas
xor
xchg
test
dec
jl
iret
std
pop
arpl
push
test
imul
aaa
sbb
inc
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
dec
mov
adcl
mov
jns
inc
adc
inc
sub
cli
scas
push
mov
mov
sahf
inc
leave
jp
xlat
out
inc
cmpsl
mull
roll
jnp
pop
mov
mov
je
mov
and
xor
enter
fcomps
xchg
inc
imul
fsubrs
rol
in
xchg
sub
mov
push
bnd
inc
popa
sub
or
dec
jg
popf
lret
cmp
in
popf
cld
test
xchg
stos
adc
scas
pop
call
imul
gs
fwait
mov
in
jns
cmp
in
cs
lods
mov
or
out
bound
adc
ss
adc
xchg
aaa
push
pop
fwait
mov
jecxz
inc
mov
lret
mov
cmpb
adcb
loop
daa
shr
addr16
sub
xor
mov
lret
mov
sub
sub
mov
fs
mov
cmp
aad
out
adc
pop
xor
add
mov
add
pop
ja
sub
cwtl
ljmp
adc
cs
add
mov
loop
mov
test
sbb
sti
aaa
lahf
icebp
popa
push
imul
movsl
adc
fdiv
jnp
or
cmp
xor
pop
fldcw
test
pop
iret
pop
jp
test
jp
mov
pop
fidivl
mov
leave
dec
pusha
pop
push
ss
addb
fnstsw
sub
div
sahf
or
int3
mov
sahf
cld
dec
pop
aad
call
shll
in
push
push
xchg
lahf
cmc
fsubp
and
out
jp
xor
cmp
cmpsb
and
push
pop
dec
int
mov
rorl
scas
insb
jmp
jle
nopl
xchg
lods
mov
jle
outsb
lods
clc
idiv
mov
out
int
std
cmp
inc
daa
or
pop
adc
add
das
mov
lret
insb
push
outsl
dec
adc
mov
dec
dec
daa
mov
pop
mov
outsb
xor
xchg
pop
imul
lahf
std
mov
xchg
bnd
loope
jmp
sbb
int3
jne
and
sbb
dec
daa
sub
sub
dec
mov
mov
jp
push
xchg
xchg
add
cmp
push
arpl
je
cmpsl
sub
xor
icebp
or
cmp
test
insl
jns
cltd
xor
bnd
ret
lea
sbb
int3
outsl
inc
insl
repz
add
aam
sbb
push
mov
mov
int3
or
jo
in
out
fisubl
mov
loopne
mov
push
xor
mov
jmp
ss
inc
popf
sub
in
incb
clc
hlt
repnz
cmp
leave
jp
add
cmp
pop
lods
dec
dec
cwtl
repnz
adc
pop
enter
aad
int
les
sub
roll
and
sbb
or
mov
sgdtl
lock
dec
sbb
xchg
adc
cltd
ss
test
popf
or
jle
jne
cltd
scas
in
pop
mov
fdivr
add
fstl
ljmp
das
movsb
iret
sub
add
das
jg
lea
sub
adc
imul
inc
mov
aad
movsl
clc
orb
inc
add
in
icebp
pop
data16
jp
cmc
enter
sub
stos
test
pop
push
ret
loopne
in
lahf
mov
push
nop
hlt
lret
mov
sbb
sbb
push
adc
xlat
loope
xlat
lods
push
mov
insl
pop
das
xor
nop
xor
jmp
pusha
sub
arpl
dec
mov
cmc
mov
sbb
scas
mov
pop
popl
adc
cmp
imul
decl
push
pop
push
sub
push
out
add
rcll
fildl
pop
icebp
and
sub
dec
outsb
pushf
and
repz
cmpb
in
ja
orl
xchg
and
sub
fidivrs
add
pop
jp
push
mov
and
xor
imul
xchg
pushf
mov
out
xchg
int3
jbe
sub
dec
outsb
iret
mov
pop
jmp
mov
cli
lds
jmp
and
mov
bound
js
xor
ja
fmull
mov
push
daa
xchg
ss
dec
movsb
xor
xor
mov
sahf
sub
fldt
in
xchg
xor
dec
dec
mov
jecxz
mov
sbb
ja
cmpsl
add
inc
lods
fs
cmc
arpl
hlt
fstpl
inc
pop
jo
stos
fxch
fisubrl
mov
fcomps
push
pop
jg
ljmp
xchg
pop
and
int
test
or
leavew
cmp
test
inc
mull
pushf
dec
arpl
xchg
pop
or
and
mov
push
mov
iret
fldl
pop
test
shll
sub
xor
fidivrl
add
mov
aam
or
jmp
stos
cmp
fstpl
xor
mov
dec
lcall
xchg
pop
pop
sbb
int
movsl
imul
int
std
cmc
fcoml
push
les
mov
sub
mov
jne
jge
bound
aas
clc
jmp
repz
pop
mov
xor
dec
cmp
call
es
sarb
pop
fwait
ss
add
pop
test
jge
enter
subw
fwait
adc
pop
xor
inc
rcll
enter
ficoml
mov
xor
adc
adc
stc
inc
jp
imul
lds
scas
pop
sub
sub
into
sub
sti
jo
ja
jae
pop
inc
ret
call
push
cmp
insb
clc
or
pop
adc
push
sbb
mov
jl
icebp
ljmp
push
call
push
outsl
pop
mov
or
push
cmp
jl
push
lds
jno
cmp
pop
clc
jecxz
pop
fld
inc
push
jb
lahf
lea
or
bound
dec
adc
jnp
idivb
and
push
sub
mov
mov
mov
jne
dec
mov
xchg
mov
sbb
adc
xor
cli
cmc
sbb
jge
rorb
aaa
mov
mov
imul
imul
or
add
mov
lea
adc
lret
loop
jp
lahf
sbbl
add
arpl
test
dec
cmpsl
call
arpl
stos
dec
cwtl
js
or
push
inc
xor
outsl
addr16
mov
jb
aam
lcall
xchg
jne
xchg
in
shl
push
mov
xchg
mov
pop
int3
mov
in
mov
cwtl
push
adc
xchg
repz
testb
hlt
arpl
das
mulb
test
addr16
out
xor
jge
ret
insb
imul
pop
aad
jno
inc
rep
xor
xor
mov
sbb
ret
add
lcall
dec
xchg
mov
je
or
cltd
jae
test
dec
in
mov
fisubs
dec
stc
dec
sub
lock
push
push
mov
subl
dec
out
out
adc
dec
or
lock
movsl
neg
sub
shrl
lock
cltd
push
and
bound
adc
nop
mov
outsl
or
ret
scas
addr16
jmp
mov
or
sbb
enter
dec
and
out
push
dec
lods
scas
rorb
int
hlt
ljmp
aas
andb
mov
mov
adc
jmp
xchg
lret
stc
xchg
jae
movsl
cmp
xchg
adc
cld
sahf
pop
mov
int
movsl
xchg
jne
and
hlt
int
aas
popa
std
enter
add
push
movsl
mov
out
and
fdiv
std
repnz
adc
or
mov
dec
xor
cmp
cs
fstps
das
iret
push
mov
dec
repz
stos
lahf
adc
dec
cmc
mull
loope
inc
dec
xchg
std
mov
outsl
shll
in
test
mov
xor
inc
test
pusha
cmpsb
push
adc
lcall
rolb
xchg
lahf
mov
mov
or
xchg
pushf
cmp
push
push
mov
shrb
mov
sub
mov
cld
icebp
xchg
mov
sbb
mov
js
lret
sub
cmp
in
jmp
xchg
adc
pop
pop
leave
in
bound
insb
pop
loop
dec
fmulp
sbb
mov
sbb
gs
sbb
fwait
in
jge
repz
dec
mov
dec
jle
ljmp
dec
into
cmp
fs
imul
mov
adc
aad
jb
loopne
iret
flds
xor
pop
icebp
popa
std
mov
inc
lahf
in
jge
testl
fisttpl
pop
jmp
inc
or
push
add
test
aaa
enter
xchg
jmp
add
push
adc
mov
sub
sbb
mov
ja
lahf
rcll
lret
or
cld
inc
movb
shrb
add
es
fsubs
cmp
lcall
orb
mov
sbb
sbb
jbe
out
mov
xchg
cwtl
pop
sub
jns
mov
add
movsb
mov
dec
fidivrs
fisubl
addb
push
out
in
je
xchg
xor
dec
push
cmp
push
mov
rcll
sub
jle
aas
adc
stos
fistl
popf
int
out
loopne
xchg
mov
jnp
sbb
xchg
xchg
mov
enter
cmp
adc
rcrl
dec
mov
fcoms
movsb
fstps
test
popfw
repz
pop
int
test
imul
ljmp
sbb
cmpsb
and
mov
nop
out
fwait
add
shl
movsb
mov
wrmsr
shrb
imul
pop
mov
fildl
out
sahf
xchg
jnp
sbb
jl
shlb
inc
push
ljmp
loope
test
out
jle
mov
mov
sub
pop
fcomps
addl
movsl
lahf
stos
scas
xchg
xor
ja
xorl
jbe
xor
jne
xchg
adc
mov
mov
movsb
dec
pop
andl
out
or
out
push
dec
andl
fldcw
flds
jecxz
jecxz
stc
outsb
movsl
jo
sub
mov
pop
jne
shrl
clc
add
cmpsb
mov
mov
push
fucomip
movsb
out
fnstsw
push
lds
inc
in
sub
push
sbb
sbb
add
lock
mov
push
das
ja
jbe
lcall
pusha
jmp
cmpsl
or
cmp
sbb
sub
mov
negl
out
stc
std
subb
mov
sub
popa
cmc
jo
sub
jp
dec
push
sbb
daa
mov
inc
add
pop
add
sbb
sub
andl
pop
jg
add
movsb
stos
bound
sub
push
xchg
arpl
movsb
mov
pop
mov
or
andb
insb
xor
aam
into
int
mov
outsb
sbb
popa
xchg
outsl
rolb
jbe
xchg
mov
nop
xor
clc
inc
stos
lahf
cwtl
xor
xchg
sub
sub
loope
xchg
mov
cmp
and
xchg
sbb
sub
fisubrl
nop
data16
int3
ret
mov
fwait
inc
lcall
in
popa
jmp
repz
dec
pushf
out
notl
push
dec
xchg
call
push
ficoms
mov
xlat
lahf
xchg
push
push
test
movsl
sbb
nop
and
mov
jae
dec
dec
stos
sbb
jno
sbb
xchg
mov
subb
gs
pop
loopne
sub
fisubs
dec
fdivl
or
sub
sub
pop
scas
iret
jo
fsubrs
mov
jns
add
iret
or
out
push
jnp
mov
add
sub
sbb
pusha
mov
addb
pop
ficoml
fisttpll
push
or
jno
xchg
shrb
js
lret
stos
icebp
nop
sbb
loopne
icebp
dec
xchg
pushf
sbb
and
jecxz
lret
iret
pop
mov
imul
das
mov
cmp
hlt
jecxz
xchg
add
mov
pop
mov
mov
mov
es
add
xor
pop
loopne
add
mov
cld
pause
jae
cld
jge
mov
les
adc
subl
jo
leave
jle
imul
mov
dec
xchg
loop
repz
stc
nop
push
lods
daa
outsl
dec
aam
add
pop
sbb
fdivrl
ljmp
int3
dec
shll
sbb
sub
push
hlt
lds
jp
sarb
cltd
push
addl
cmp
fstpl
jle
mov
sub
js
addr16
out
sbb
aaa
pop
pop
cmp
mov
inc
push
loop
in
loope
bound
mov
sub
lret
pop
dec
pop
xor
loop
adc
cli
inc
stc
inc
popf
test
fsubrs
rcrl
popf
divl
hlt
jno
inc
add
pop
repnz
push
clc
xchg
xor
insl
inc
fwait
enter
mov
pop
dec
ja
or
test
add
int3
pop
out
ss
rolb
cmp
faddl
mov
push
leave
gs
add
cli
das
pusha
add
push
sub
rorb
mov
push
pop
jne
cmp
mov
jl
adc
adc
sub
stos
mov
ljmp
sbb
pop
imull
or
push
cld
xchg
sbb
ret
gs
dec
roll
mov
or
jl
or
cmpsl
inc
dec
and
ja
jbe
pop
mov
rolb
sub
or
stos
push
cmp
mov
push
pop
cmp
push
mov
sbb
mov
aam
xchg
fcmove
mov
mov
push
shr
sbb
xchg
cmp
addr16
cmpsl
orl
mov
pop
repz
pop
push
mov
add
daa
jo
mov
pop
sbb
invd
sbb
cmpsl
outsl
sbb
inc
insl
sbb
cmp
xor
and
pop
daa
sub
cmpb
and
pop
mov
cmp
jb
std
inc
jnp
sbb
xor
pop
shl
andl
push
push
test
shll
push
cmc
ret
movsb
mov
test
outsb
lock
push
and
push
jne
cmpl
in
mov
or
fldz
xchg
ret
xorl
repz
movsl
fistps
outsl
lock
std
lahf
gs
jecxz
mov
lret
das
fadd
dec
jecxz
mov
into
xchg
xchg
pop
dec
call
hlt
jmp
jno
ret
inc
in
fldenv
mov
dec
mov
pop
add
cltd
jp
push
push
dec
cld
das
dec
dec
inc
and
pushf
vpsubb
pushl
les
inc
clc
xchg
push
pop
in
xchg
xlat
and
fiadds
cmp
push
xchg
mov
out
popa
inc
arpl
cmp
jno
add
mov
and
nop
insl
sub
xchg
jl
mov
int3
jae
inc
jne,pt
hlt
push
sub
fwait
scas
outsl
or
mov
popa
pop
subl
adc
xchg
or
mov
iret
int
ficompl
addr16
jno
out
mov
jnp
out
adcl
adc
add
mov
pop
jl
or
ljmp
iret
sbb
outsb
push
jnp
sarl
mov
dec
scas
ret
pop
lret
and
out
idivl
cmp
mov
push
push
ficoml
mov
fldenv
std
bound
lods
add
test
push
and
mov
mov
lahf
scas
movsl
sub
cmpsb
and
jbe
sbb
mov
mov
cmp
jp
rclb
cmpsb
das
mov
paddq
pop
fldl
ficompl
dec
ret
mov
lds
or
cmpsb
popa
pop
and
adc
mov
iret
xlat
and
dec
mov
sub
cli
nop
push
fisttps
les
loop
sub
jo
js
xorb
enter
scas
mov
or
ljmp
imul
pop
dec
imul
mov
sti
rcll
mov
andb
pop
mov
sbb
push
sbb
adcl
xchg
adc
adcl
pop
imul
incb
add
das
jno
jne
xor
adc
adc
jmp
ds
jmp
push
jae
imul
movsl
popf
aad
lods
lods
sub
and
lock
nop
pop
outsl
jno
jg
cmp
outsl
aam
push
aam
adc
je
cmp
jecxz
adc
xchg
outsb
push
jnp
push
fs
mov
std
arpl
push
stos
xchg
xchg
cmp
jo
mov
ds
push
std
jo
sar
jae
xor
xchg
arpl
popa
add
fstl
dec
dec
movsl
or
xor
jmp
sbb
jp
add
xor
out
in
add
push
add
mov
xchg
and
repz
inc
xlat
aaa
inc
test
dec
adc
dec
icebp
test
subb
in
cld
scas
loope
movsb
xchg
cmp
lock
pushf
setle
notb
dec
mov
stos
and
int3
aas
hlt
mov
push
outsl
add
cmp
les
cs
cmp
icebp
call
sarb
imul
jo
dec
outsl
or
and
jg
and
add
jbe
xor
out
loop
outsb
mov
xchg
pop
insb
orl
mov
inc
push
lcall
dec
xchg
push
jae
sub
or
ffreep
jmp
loopne
mov
cmp
cmpsb
loope
dec
mov
shll
sbb
bound
fsubrl
fistl
xchg
mov
out
xor
aad
xchg
push
out
subl
insl
pop
mov
shll
inc
sbb
cmp
dec
ja
shl
mov
fwait
push
jbe
gs
in
hlt
mov
adc
mov
push
int
adc
jbe
arpl
cs
test
gs
sahf
jno
ret
pusha
cmp
cmc
add
and
rolb
out
jmp
jecxz
pmaddwd
movsl
xor
test
and
std
cwtl
dec
cli
sbb
xchg
mov
or
inc
xchg
push
fdivl
repz
mov
xadd
arpl
scas
fs
cwtl
jl
jge
pop
js
loopne
outsl
jnp
sbb
idivb
fwait
test
fs
in
jnp
fwait
icebp
push
ljmp
es
fs
cmc
adc
lods
and
movsb
into
push
cmp
jmp
jns
lahf
add
adc
mov
adc
mov
sahf
mov
dec
lods
xchg
jne
push
push
dec
jns
std
add
stos
lcall
in
xor
test
stos
mov
xor
test
fldl
cltd
dec
popa
fs
sbbl
ret
into
push
cmp
aam
xor
push
cld
loop
bound
ss
fistps
mov
data16
or
outsl
push
ret
sti
loopne
outsb
enter
sbb
mov
pushf
jo
in
push
cmpsb
inc
push
popf
insb
adc
test
je
mov
mov
cmp
jo
ret
fsts
ficompl
xor
leave
push
mulb
fs
dec
cmp
outsl
cwtl
int
or
inc
mov
and
ret
test
xchg
lods
and
pop
test
sbb
ss
les
into
jmp
ret
xor
ja
adc
pop
rcll
nop
and
clc
sub
cltd
push
push
mov
fwait
sarl
outsl
jmp
push
xor
adc
mov
mov
dec
mov
xchg
mov
xchg
inc
mov
hlt
into
cld
and
aaa
stos
rcr
xchg
cli
cli
lods
int3
repz
mov
lds
daa
mov
movl
daa
mov
insl
lods
push
jmp
jmp
cmc
jno
data16
int
scas
cmp
jb
dec
ficoms
insb
aad
push
cmp
test
and
jle
pop
xchg
std
and
cmp
test
mov
lds
add
jl
in
and
lds
sbb
or
jae
xor
mov
popf
cmp
mov
lods
fcomp
nop
fisubrl
or
in
mov
ret
jmp
push
dec
mov
nop
ja
pop
mov
lcall
xchg
repnz
cmp
add
jmp
clc
add
sbbb
mov
mov
push
mov
dec
add
call
enter
out
sbb
add
jecxz
sub
sub
inc
push
lods
lret
push
pop
push
or
filds
ret
push
ljmp
insl
fimuls
mov
add
movsb
mov
sbb
sbbl
push
outsl
mov
cmp
dec
dec
add
cmc
dec
xchg
pop
add
xchg
arpl
nop
imul
pop
add
inc
push
mov
fsubrl
insb
sbb
cmp
icebp
cmp
push
pop
cmpsl
add
mov
test
ret
mov
xchg
push
loope
pop
std
mov
out
dec
loope
rolb
fwait
bts
scas
lods
push
ret
aas
std
scas
cmp
push
adc
pop
outsl
xchg
dec
inc
insb
adc
jbe
and
loop
rcrl
pop
test
leave
lock
xchg
mov
movsb
inc
inc
adc
faddp
addr16
sub
jecxz
or
sbb
orb
jns
mov
shrl
loopne
push
xchg
xchg
scas
sbb
mov
dec
lret
mov
and
mov
cli
adc
pop
lods
xor
lret
lods
and
in
or
cwtl
push
mov
orb
std
push
scas
fildll
cwtl
outsb
add
adc
sub
mov
enter
or
data16
test
pop
inc
mov
dec
imul
mov
xchg
popa
mov
fsub
cmc
ret
or
xor
jo
mov
or
mov
xchg
xor
mov
jns
js
mov
inc
pusha
das
addr16
out
jecxz
in
inc
mov
fisttpll
lret
insb
pop
pushf
jne
jo
fistpl
lods
hlt
push
mov
dec
cs
outsl
mov
cmp
and
xchg
and
mov
push
push
mov
or
add
scas
shll
sbb
imul
mov
mov
mov
dec
jmp
test
out
js
push
and
test
sbb
push
cmpsl
xor
sub
pop
setp
ljmp
cmpsb
test
push
movsb
dec
dec
jge
jb
test
fcoms
adc
mov
in
push
hlt
pop
pop
xchg
mov
sub
fsubrs
pop
loope
dec
stos
pop
scas
push
out
mov
and
mov
jae
mov
jmp
adc
pop
cmc
mov
pop
cmp
mov
mov
mov
test
movsb
inc
aam
mul
sti
iret
lock
push
jle
ss
movsb
fldenv
jnp
pop
or
cs
or
lods
outsl
ja
cmpsl
stos
or
pop
lods
out
into
jmp
enter
int3
ss
xor
repz
dec
mov
xchg
cmpb
das
ss
jge
xchg
or
dec
dec
inc
cltd
repnz
jmp
jp
test
mov
dec
mov
movsb
pop
out
push
mov
inc
sarl
ja
std
into
lcall
mov
je
push
ret
sub
ja
test
shl
out
adc
int3
sbb
mov
test
inc
jns
out
in
cmp
aam
mov
in
sub
and
scas
xor
es
int3
stos
into
push
add
pop
and
push
ret
test
xor
fs
fadds
dec
stc
cmc
cmp
pusha
fldl
or
fadd
hlt
sbb
mov
in
sub
mov
or
mov
ffree
into
repnz
stos
rorl
in
mov
icebp
cmpsb
inc
into
pop
pop
push
sbb
push
mov
mov
test
mov
pop
sbb
add
pusha
movb
cmp
cli
icebp
inc
cs
negb
mov
mov
lcall
mov
push
jb
pop
sarl
lods
add
cmpsb
pop
ret
mov
mov
adc
out
rorb
xor
push
xor
jle
outsl
in
sbb
mov
and
or
test
jo
dec
setl
pusha
sbbb
inc
lods
xor
in
adc
and
mov
dec
cmp
xor
ljmp
incl
faddp
mov
iret
mov
push
xchg
insb
adc
xchg
jbe
popf
cltd
mov
aas
addr16
mov
les
dec
and
scas
inc
lret
imul
orl
rorl
bnd
imul
out
xorb
jnp
cmp
fmull
test
loopne
adc
psubsw
push
out
jp
mov
mov
ja
cwtl
outsl
jmp
cld
inc
lret
js
jl
lea
sti
push
ret
adc
sub
inc
dec
test
mov
cs
daa
repz
into
and
or
mov
fcomp
push
pop
xor
sub
hlt
jbe
inc
fistps
aas
sti
xor
test
inc
jp
fnstcw
shlb
cmp
mov
mov
das
neg
loopne
fcomp
flds
adc
inc
xchg
loopne
out
mov
notb
mov
test
mov
mov
add
dec
lea
jne
mov
pop
push
ds
sub
add
pop
cmc
and
inc
vmovshdup
cld
mov
loop
mul
push
pushf
arpl
adc
jno
add
mov
add
push
mov
dec
mov
dec
sbb
pop
enter
clc
cmp
adc
mov
sbb
sbb
jnp
xor
push
lcall
xrelease
jp
in
push
lds
mov
mov
out
adc
adcl
fisttps
push
lea
inc
jne
ret
mov
xchg
pop
xchg
jl
push
arpl
or
popf
fldenv
jae
mov
lea
insl
popf
andb
dec
imul
add
int
mov
dec
sub
pop
and
mov
jbe
out
imul
push
mov
andl
fidivs
sbb
push
imul
jmp
xorl
cmpsl
push
cmp
bound
popf
jp
sub
call
or
sbb
or
popf
hlt
jmp
pushf
pop
inc
je
inc
pop
inc
and
aaa
jmp
scas
gs
pop
decl
cmpsl
shll
fmuls
cld
dec
push
mov
add
push
add
shll
cli
adc
ret
push
xor
dec
dec
xchg
jp
pop
jl
fcompl
iret
add
mov
pop
mov
out
adc
movsb
jge
sbb
sub
dec
pushf
pop
mov
pop
or
mov
jne
cmp
jae
inc
xor
push
cmp
xchg
pop
out
mov
lret
cs
fwait
mov
and
and
adcb
nop
sbb
aas
ficoml
aad
and
inc
sahf
fisubrs
mov
ror
ja
rclb
stc
je
dec
stos
mov
stos
adc
pop
sub
lcall
insb
push
int
mov
outsb
jl
inc
sti
or
les
push
es
das
push
inc
xchg
clc
push
idivl
int3
aas
sbb
shlb
push
sub
out
int
jbe
or
pop
imul
stc
fcoml
ljmp
or
shld
xchg
js
mov
pop
mov
aam
aad
pop
xor
cli
xor
adc
gs
mov
cs
inc
test
ss
icebp
popa
mov
mul
fmul
pop
add
js
imul
adc
jno
mov
push
adc
test
cwtl
jg
jno
in
jecxz
jge
enter
das
test
jnp
push
or
mov
enter
or
scas
mov
shlb
jecxz
or
cmc
fdiv
cli
rorb
mov
rclb
std
dec
loope
aam
dec
or
dec
js
jnp
mov
xchg
gs
lock
pusha
out
ds
or
out
sti
pop
xchg
lcall
adc
in
rol
mov
cwtl
mov
out
jecxz
cmc
mov
int
std
fisttpl
and
leave
push
in
mov
mov
pop
cmp
popf
sbb
shlb
scas
pop
inc
arpl
mov
je
test
repz
add
adc
rcll
lret
xchg
sub
add
xchg
ss
negb
leave
mov
push
insb
push
or
add
adc
or
test
stos
insb
repz
fwait
call
sbb
push
sbb
mov
insb
push
mov
test
imul
sbb
nop
jnp
pop
jecxz
adc
inc
mov
mov
cmp
mov
mov
and
sub
fdivp
popa
lods
dec
jl
push
add
stc
mov
jmp
hlt
dec
push
scas
call
add
cs
xor
cltd
stc
addr16
xchg
cltd
xchg
repz
loopne
aaa
mov
ds
sbb
les
xchg
lea
fimuls
pushf
adc
adc
mov
jne
mov
sbb
inc
mov
and
sar
cmp
adc
sete
jg
push
xor
pop
inc
or
jne
mov
dec
rclb
mov
jno
lds
jne
push
psubusb
aaa
mov
push
lret
shll
xor
lret
push
jns
lea
cmp
movsl
adc
pop
sbb
xor
push
clc
ret
leave
insb
jbe
cmp
in
sub
cmp
sub
fcmovbe
adc
ss
adc
cmpsl
adc
test
pop
insb
sbb
idivb
xor
sbb
dec
fiadds
xor
push
dec
add
aaa
xor
or
sahf
add
sbb
fdivs
stos
inc
sub
into
xchg
jbe
mov
dec
jns
xor
xchg
mov
in
push
inc
mov
popa
pop
in
rep
and
outsb
lret
xor
and
xchg
push
xor
sub
fbld
loope
fldl
and
es
inc
push
test
fs
adc
dec
divl
stos
pop
leave
dec
fcomps
gs
shl
les
mov
rclb
mov
lods
leave
xchg
inc
pop
lock
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
sbb
dec
xor
push
jl
jmp
jl
insl
xchg
loope
or
daa
mov
inc
jno
daa
lods
dec
sbb
das
ficompl
cltd
out
xchg
in
xchg
gs
pushf
lods
test
or
sub
rcr
loop
adc
test
aaa
pop
cmpsl
insl
cmc
dec
add
bound
stos
decb
adc
dec
fsubs
mov
out
mov
sub
dec
adc
das
sub
fldl
sbb
add
fsubl
std
or
movaps
jg
pop
stos
cmp
ret
cmp
mov
pop
dec
cwtl
loope
fldl
mov
in
mov
iret
loope
jb
pop
sbb
pop
cmpsl
es
ret
imul
test
push
out
cmp
and
pop
adc
test
in
push
sub
push
push
mov
aad
sti
movsb
std
imul
and
pop
lods
jb
mov
xor
jo
fdivrs
xorl
mov
sbb
lret
push
ss
loopne
decl
inc
and
arpl
fs
hlt
fcmovb
xor
and
gs
add
in
into
ret
cmpsl
fdivr
mov
loopne
add
imul
sbb
jb
push
loopne
mov
xor
loope
cmp
test
in
sbb
daa
pop
mov
mov
inc
shlb
mov
or
lds
xchg
jle
fs
pop
xchg
mov
dec
jne
add
jge
cmp
fisubrs
subb
imul
hlt
movl
dec
movsl
cmp
outsb
mov
or
mov
in
mov
mov
and
or
mov
push
imul
inc
call
cmp
js
data16
orb
dec
jbe
lret
idivl
sub
jno
and
cwtl
mov
imulb
and
out
mov
dec
xor
enter
push
adc
shlb
inc
leave
out
pusha
divb
sub
fstpl
push
roll
mov
pop
fdivs
mov
popf
cmpsb
sub
jbe
aam
and
dec
sub
not
push
fwait
jl
scas
xchg
insl
adc
addr16
nop
cmp
jae
pop
test
xor
xor
add
adc
pop
inc
xchg
test
sbb
jg
test
pop
jae
loope
push
das
incl
ss
jbe
lcall
dec
sub
stos
arpl
cmp
jp
movsb
repz
push
loop
dec
rolb
and
addb
add
pop
imul
inc
mov
mov
xchg
bound
or
mov
push
bound
repz
test
dec
pop
jmp
mov
jne
xorb
sarl
aam
sub
jne
push
or
ror
or
adc
mov
inc
cmp
fs
mov
xchg
out
cmp
add
sbb
or
sahf
jmp
es
and
das
cmp
nopl
es
add
int3
idivb
adc
push
push
xor
stc
or
int
je
pop
cld
mov
sbb
xor
cmp
dec
fs
mov
roll
pushf
cmpl
cmp
sbbb
in
sub
mov
mov
mov
jge
and
dec
add
imul
jge
mov
ljmp
mov
jle
cs
outsl
int3
ret
mov
xchg
jae
shlb
in
out
or
sub
ljmp
gs
imul
sahf
call
mov
mov
pop
push
or
loopne
jae
push
icebp
sub
pop
repnz
add
jns
jb
mov
lret
push
push
inc
adc
or
cmp
loopne
add
mov
out
shrb
mov
mov
cmc
pusha
out
sub
aaa
push
js
mov
stos
aaa
cs
cwtl
cld
pop
add
fwait
jae
add
or
iret
and
test
cmp
addl
push
or
mov
pop
inc
xor
aaa
sbb
pop
cmpsb
in
fildl
mov
movsl
mov
sub
pop
push
lock
push
xchg
cmp
mov
in
or
mov
cltd
pushf
mov
out
and
fs
out
push
inc
inc
shrl
int
aam
les
fwait
lds
fs
lea
jne
adc
cmp
inc
adc
xchg
xor
xlat
sbb
xor
and
mov
jb
sbb
out
and
lcall
mov
mov
sbb
in
aaa
sub
nop
int3
and
pop
scas
int3
jp
jbe
jmp
test
leave
dec
jl
or
cmp
xor
dec
xor
movsb
or
sbb
inc
cltd
shrl
inc
cmc
inc
jmp
push
and
icebp
ds
cmp
mov
daa
cmc
mov
jbe
and
adc
xchg
inc
aad
icebp
out
or
fistpll
pop
jle
and
mov
fistpl
xlat
inc
jecxz
jge
or
pushf
outsb
jns
pop
movsl
xor
shl
inc
out
nop
iret
add
fcompl
push
xchg
push
cs
andb
mov
sub
xchg
jmp
push
ljmp
and
out
mov
mov
rcl
in
mov
or
mov
aad
lret
pop
addr16
fwait
push
les
out
movsb
lods
cmp
les
pop
or
pushf
jp
in
ss
rorl
inc
sbb
dec
or
rorl
test
xor
fmull
lock
push
push
int
lods
cld
xor
xlat
pop
pop
add
mov
mov
mov
mov
or
enter
or
or
mov
adc
paddusb
and
dec
jecxz
lret
fwait
dec
cmp
inc
fwait
pop
stos
mov
addb
stc
pop
xor
lock
movsl
sbb
dec
xchg
repz
and
pop
inc
fcomps
mov
outsl
push
lret
jle
jl
cld
pop
add
pusha
mov
mov
mov
cld
push
call
sti
inc
xchg
shlb
icebp
dec
add
into
and
push
ret
aad
sub
mov
arpl
mov
test
das
sti
jg
mov
inc
xchg
lcall
int
call
gs
pop
call
shll
arpl
push
inc
imul
pop
pop
jmp
xor
mov
xchg
pop
daa
shlb
mov
arpl
mov
or
xorb
daa
push
mov
jne
lds
jle
cwtl
cmp
lock
dec
push
pop
stos
xchg
jae
push
out
adcb
pop
jae
loop
sbb
cmc
cwtl
shr
out
aas
adc
std
add
jmp
add
mov
mov
mov
clc
mov
dec
fiaddl
cmp
shll
idiv
sbb
or
lea
das
into
pusha
popf
cmp
push
fistpl
jb
cmp
fwait
push
jnp
imul
out
out
lods
sahf
cmp
cmp
pop
out
das
jnp
cltd
inc
sarb
rcrl
inc
mov
out
jmp
mov
in
or
sahf
and
or
scas
mov
dec
xchg
test
arpl
inc
or
int3
adc
jnp
pop
outsl
daa
out
push
jnp
cmc
adc
jns
cmpsb
jp
cld
rcr
test
in
cld
mov
xchg
xor
or
in
adc
pusha
lret
push
pushf
push
sbb
and
jnp
push
imul
mov
or
adc
or
in
pop
mov
sbb
inc
test
sbb
pop
cmp
mov
fldl
adc
std
les
and
int3
add
ja
lcall
scas
or
test
int3
mov
in
xor
push
inc
outsb
push
and
outsb
ret
out
pop
push
call
or
cltd
jne
sbb
xchg
sbb
push
lret
test
lret
xchg
loop
sub
mov
sub
push
sarb
pop
add
pop
push
push
imul
pop
and
push
jno
inc
pushf
rolb
lods
orl
and
enter
mov
pop
test
inc
cmpsl
lods
cld
test
push
push
adc
test
and
mov
ljmp
adc
stos
lahf
add
fidivl
idiv
int
loop
mov
jne
xchg
mov
mov
test
xor
add
pop
repnz
aad
dec
and
dec
inc
add
or
adc
test
push
cmp
pop
pop
jbe
mov
roll
xlat
mov
sub
popf
js
loop
lcall
in
sti
jnp
ja
push
movl
imul
sti
mov
jno
addr16
cmp
mov
movb
loopne
andl
jnp
adc
insl
jbe
test
jae
scas
adc
mov
xchg
sbb
sbb
imul
jle
pop
sub
push
dec
out
inc
mov
cmp
cld
divl
sahf
mov
stos
out
mov
mov
into
and
sub
push
lret
idivl
dec
push
imul
add
leave
mov
repz
sbb
ror
pop
ss
adc
test
pop
sub
add
inc
cmpsb
shrb
dec
jno
sbb
lret
test
mov
push
repnz
mov
call
call
fcmovne
mov
popa
jecxz
movsl
fcoml
std
pusha
push
inc
cmp
imul
or
mov
lahf
push
cmp
out
pusha
aam
jns
mov
movsl
rcll
aas
pushf
out
or
push
inc
jnp
push
ljmp
inc
repnz
dec
jo
adc
pop
mov
lods
lret
xchg
pushw
hlt
pop
pop
shll
jmp
lods
jno
or
cwtl
mov
pop
adc
adc
dec
das
adc
stos
int
and
jmp
xchg
mov
push
cmpsl
pop
inc
jne
cmp
mov
test
inc
pushf
and
jmp
addr16
into
aam
aaa
test
or
std
aaa
push
cmp
and
pusha
xchg
mov
cmp
mov
ret
push
shrb
aaa
cmp
mov
test
add
std
inc
mov
inc
enter
inc
scas
add
inc
push
add
mov
stos
mov
push
bound
fnsave
loopne
pop
mov
in
cld
adc
test
daa
fsubrs
mov
ja
add
fcompl
lcall
add
lds
or
jns
fs
int
andb
fimull
arpl
mov
push
inc
push
cwtl
adc
stos
and
cmp
leave
divl
sahf
fstps
jae
fwait
mov
pop
les
inc
pop
ret
and
test
jecxz
ds
xchg
out
sub
xor
jmp
testb
mov
lods
es
aad
dec
push
ficoml
fdiv
in
jnp
leave
push
inc
inc
pop
aad
cmpsb
xorb
and
push
cltd
mov
les
mov
shrb
mov
push
aam
jns
jecxz
dec
push
mov
sub
rorb
inc
mov
push
cwtl
mov
adcb
outsl
inc
in
fisubl
ficompl
jge
outsb
stc
sub
in
divb
mov
dec
mov
jnp
jecxz
lock
repz
dec
cld
aas
fs
int
mov
in
mov
xchg
cwtl
pop
lods
adc
and
jne
negl
int
testl
xchg
sub
ljmp
inc
push
rcll
mov
out
rorb
leave
inc
in
out
es
mov
sahf
mov
inc
adc
popa
xor
je
rcrl
add
pop
enter
push
cmc
or
mov
lret
jle
inc
or
jae
aaa
xor
jl
mov
fbld
dec
loop
iret
sbb
push
and
jnp
call
shll
jg
and
jae
imul
in
mov
xor
mov
repz
cmpsb
push
aaa
add
xor
insl
hlt
in
jae
jle
aaa
xchg
jno
xor
pop
lahf
out
aas
pop
push
cs
bound
arpl
push
add
inc
shlb
xor
hlt
test
popf
ljmp
fcoms
sub
es
inc
jbe
sub
sar
sahf
decb
dec
inc
and
icebp
sbb
lahf
dec
inc
sub
and
mov
push
pop
jo
js
insb
fbld
jg
imul
dec
call
sub
cli
das
cwtl
cmp
lret
fnstsw
mov
inc
mov
push
in
subl
xchg
imul
ret
loop
push
pop
jmp
mov
cmpsl
dec
les
mov
das
inc
ljmp
inc
sbb
cmpsb
add
add
jg
lret
mov
jo
sbb
stc
dec
aaa
dec
push
in
jae
cltd
dec
fistpll
iret
stos
jmp
pop
xor
inc
int3
mov
adc
sahf
out
loopne
xchg
mov
pop
movl
addr16
push
mov
and
movsb
ljmp
rolb
test
mov
xchg
popa
arpl
pop
js
int
ret
cmc
fiaddl
xor
push
lahf
ror
lds
mov
adc
daa
cmp
iret
jae
ds
mov
fldenv
fldt
xlat
in
mov
mov
jp
ja
or
bndstx
popl
and
pusha
inc
cmp
fwait
mov
fbld
int3
in
push
aaa
push
out
in
push
sbb
mov
rorl
mov
aaa
insl
in
aad
mov
fwait
fwait
sub
pop
cs
lret
mov
mov
inc
push
inc
inc
and
in
cmp
cs
sbb
jle
icebp
cmp
and
cmp
neg
mov
std
out
mov
lock
std
negb
out
cmp
lock
adc
cwtl
lret
inc
dec
add
mov
not
cmp
xor
dec
sbb
lods
int3
cmc
pop
pop
das
loopne
ret
sub
jbe
push
mov
addr16
inc
xor
int3
dec
xchg
and
imul
cltd
mov
iret
in
xchg
loopne
bound
dec
xor
pop
lods
xor
ja
in
shlb
dec
adc
jns
pop
insb
aad
cmpl
and
mov
and
sbb
insb
jge
xchg
sbb
adc
xchg
and
and
inc
mov
shrl
inc
sbb
out
out
ret
adc
cli
popa
dec
mov
xor
daa
mov
and
jne
aas
inc
out
loopne
inc
adc
out
dec
and
dec
pop
jecxz
rorb
xchg
mov
fisubs
mov
adc
sbb
jnp
pop
cltd
dec
lods
dec
push
lea
in
push
test
push
lret
jo
mov
rcll
adc
mov
push
es
mov
jmp
adc
sub
sub
xchg
cli
daa
inc
test
int3
scas
ret
imul
or
daa
repz
fprem
movsl
sub
loopne
add
aam
inc
push
movsb
pop
sub
xchg
ret
sbb
je
jb
lods
in
mov
jno
mov
adc
lret
mov
xorb
mov
mov
add
mov
dec
pop
sbb
mov
push
jnp
jmp
xor
loop
xlat
add
xorl
mov
dec
fdivrl
xor
and
xor
lahf
insb
test
rcrl
or
xor
fildl
imul
imul
in
cmovnp
jb
mov
mov
xchg
dec
and
mov
test
jns
sbb
xchg
mov
imul
jmp
and
stos
in
scas
pop
pop
out
fdivrl
mov
outsl
rolb
fstl
cmpsb
cmp
jecxz
les
psrlw
xchg
insl
in
mov
cmp
shll
jle
fsubrl
test
xlat
xchg
and
lock
push
sub
clc
lahf
stc
xor
rolb
push
cmp
mov
pop
ficompl
jns
movsl
mov
mov
xor
mov
dec
pop
inc
dec
jae
push
int3
sub
sbb
in
sbb
xchg
push
mov
sub
cmp
lds
mov
stos
jo
int3
jno
js
pop
xchg
sbb
jae
jae
sbb
addr16
mov
subb
movb
cmp
xchg
inc
and
cmp
mov
sub
mov
adc
test
xchg
ret
sti
pop
and
add
xchg
dec
mov
xchg
aam
inc
sti
mov
sbb
stc
imul
aad
insl
jae
mov
cmp
popa
fdivs
pop
js
mov
sbb
jg
mov
xor
adc
xchg
lret
cs
js
in
sub
into
ljmp
jae
ret
adc
xchg
xor
jge
sub
and
les
mov
fs
loop
mov
mov
ret
push
pop
mov
je
out
add
mul
cmp
mov
sub
mov
outsl
lds
int3
mov
sub
push
icebp
jecxz,pn
pop
dec
shll
mov
cmp
mov
xor
mov
fwait
inc
std
loope
test
sub
cmp
popaw
cmp
stc
mov
xor
pop
fistpl
in
or
loopne
pop
and
cmpsl
jbe
push
lods
mov
adc
sbb
pop
mov
adc
cmp
sbb
mov
add
xchg
cmp
add
pop
push
in
mov
mov
int3
jmp
mov
les
or
lea
daa
or
subl
xor
adc
sbb
dec
pop
pop
pop
push
jle
add
mov
xor
popf
add
jle
pop
ja
pop
fdivs
sbb
test
pusha
jo
into
mov
int3
xchg
dec
lods
or
inc
add
sbb
or
fidivl
xchg
inc
pop
add
and
xor
jle
xor
adc
cmp
clc
loop
lock
jecxz
shrb
mov
inc
mov
mov
mov
gs
lds
adc
sub
or
loopne
push
lea
mov
xchg
loopne
jb
js
jns
mov
addr16
xchg
jle
push
cmp
in
in
jmp
adc
pop
add
mov
sbb
sub
add
jle
inc
lret
stc
cmp
mov
push
push
cmp
aaa
adc
sbb
add
sti
bound
js
test
xor
rcrb
push
pop
push
fcomps
mov
cmc
in
roll
mov
cmp
jo
cmpsl
std
cltd
std
mov
push
test
out
outsb
leave
cs
dec
rcll
mov
push
jno
jmp
mov
jp
stos
jg
popf
or
testb
push
fs
inc
sbb
push
xor
lahf
xor
lahf
dec
xor
scas
add
ljmp
cmc
test
shl
mov
ljmp
dec
xchg
add
hlt
add
dec
adc
xor
sbb
cmp
test
jno
cld
xchg
pop
push
sarl
jp
pop
or
iret
loopne
pop
add
xor
jmp
nop
test
cmpsb
sub
outsb
push
pop
test
mov
jbe
int3
shr
cmp
xor
add
fnsave
movsl
push
xlat
or
inc
or
fcomps
loop
adc
sbbl
cltd
dec
pop
sbb
xor
enter
loop
sbb
out
lods
movsl
repnz
ja
cs
xchg
and
into
sub
cs
xchg
ficomps
lods
sbb
int3
mov
xlat
mov
js
scas
push
stos
add
cmp
jmp
mov
or
rcrl
push
mov
rcll
xchg
sti
jnp
lea
rcr
scas
out
inc
sub
push
push
mov
test
add
jne
pop
mov
fimuls
lcall
enter
ja
lea
and
mov
mov
shll
stos
dec
xchg
lret
mov
pop
jne
push
sub
popf
jnp
and
std
addb
jp
add
dec
fidivrs
push
xor
ficoms
inc
test
sub
mov
aaa
adc
sbb
arpl
adc
data16
cmc
or
popf
jmp
cmp
push
aad
add
sahf
pop
add
cmp
popf
ss
rolb
mov
sbb
scas
lea
push
stos
aaa
dec
xor
jmp
cmc
push
rorl
mov
bound
and
lahf
scas
pop
inc
add
inc
cmp
or
add
push
mov
push
fwait
es
or
outsl
dec
pop
js
adcb
movl
js
pushl
stc
jno
imul
les
inc
ss
fldt
rcr
arpl
cmp
out
mov
es
sbb
ret
cmp
sub
test
std
add
orl
imul
mov
rolb
sahf
and
mov
mov
cmpsl
jae
lahf
push
xor
jecxz
pop
or
std
loope
cmp
jge
dec
test
sbb
add
dec
dec
inc
adc
movsl
dec
call
mov
pop
xchg
decb
cmp
movsl
pop
adc
sti
pop
and
jne
fs
push
pop
mov
iret
call
and
adc
imul
push
lret
push
lahf
outsb
mov
faddp
mov
xor
hlt
bound
jle
mov
pop
outsl
adc
sbb
lock
jp
leave
outsb
pop
mov
fdivp
cltd
cmpsb
std
std
icebp
dec
cli
push
mov
inc
sub
pop
xlat
loop
pop
mull
mull
jae
aas
jmp
rorl
bound
in
aas
adcl
js
cmp
and
xchg
mov
sbb
fidivs
inc
int
enter
stos
aaa
or
jb
adc
mov
repz
mov
dec
sub
scas
popa
push
call
fucomip
push
mov
dec
out
icebp
outsb
rclb
push
stc
adc
ds
xchg
adc
sbb
mov
add
out
outsl
jo
insl
xchg
or
xor
scas
hlt
xchg
pop
outsl
es
pop
orl
jo
and
mov
sub
jb
sub
pop
shlb
mov
inc
lds
aas
pop
movsb
out
pop
pop
lods
dec
jae
pushf
inc
frstor
adc
mov
adc
cmp
filds
in
aam
aas
out
dec
mov
fcoml
fxch
jo
and
jbe
lods
scas
int
sub
adc
cmc
xor
jge
push
dec
jo
stc
pop
adc
mov
xor
ret
cltd
mov
iret
jb
pop
cs
xchg
pop
je
xor
ljmp
xchg
sbb
sbb
dec
pushf
xor
xorb
xor
lock
ja
test
xchg
sbb
scas
iret
xchg
cmpsb
cmovg
add
sbb
xor
mov
movsb
fldz
idivb
jno
shl
iret
xchg
lret
xchg
loop
outsb
inc
add
xor
cli
dec
jae
ds
and
pop
sub
or
cmpsb
push
or
add
push
mov
cmp
xchg
ror
arpl
xor
les
xlat
pop
dec
cmp
mov
mov
lods
movsl
pop
stos
cmp
add
jns
jle
mov
mov
in
decb
mov
mov
xchg
icebp
outsb
iret
mov
jmp
jae
mov
data16
nop
mov
fwait
jns
cli
jmp
jo
mov
ffree
cmp
mov
mov
pop
lret
insl
xchg
ret
inc
cmp
pop
inc
xchg
div
mov
bound
shll
lds
repnz
mov
int
int3
pushf
mov
xchg
pop
sar
insl
sahf
cmpsl
xor
cld
xchg
cmpsb
jno
nop
sbb
imul
data16
dec
cmp
mov
add
std
sub
push
jmp
movsb
push
sub
push
push
repnz
mov
movsb
sbb
js
jnp
ds
mov
pop
fsts
and
mov
leave
xor
lods
and
aas
aam
sub
xchg
xchg
aam
repnz
xor
cmp
and
fwait
daa
xor
aad
push
xchg
sub
push
mov
mov
jl
repnz
fcoms
dec
fwait
xchg
adc
int
push
ljmp
das
ds
popa
out
and
sub
add
and
pushf
les
in
nop
jp
ja
xor
inc
pop
and
mov
xor
mov
mov
ret
dec
leave
push
lcall
dec
xor
adc
xchg
iret
add
dec
lods
lods
data16
fistps
clc
movsl
xchg
ljmp
stos
pop
pop
aam
lea
or
mov
dec
push
leave
andb
push
nop
out
popl
cmp
mov
sbb
into
ljmp
jmp
ss
inc
andl
cmp
jbe
mov
xchg
enter
mov
jno
stc
adc
out
rcrb
xchg
add
xsave
pushl
lahf
add
pop
mov
pop
in
popf
rolb
jle
sub
push
imul
test
and
ljmp
pop
cmpsb
aaa
sahf
rcrb
movsb
xor
mov
push
mov
lods
inc
jmp
fsubl
add
mov
pop
test
je
int
out
test
decl
rcrb
leave
sub
pushf
jb
fs
inc
pusha
or
arpl
imul
and
js
dec
adc
mov
mov
inc
mov
rcrl
xchg
mov
addr16
loope
fisubl
mov
nop
mov
jno
fstps
or
xchg
in
mov
jb
inc
cli
sbb
cmpsl
lock
sti
outsb
ret
adc
cmpsb
jge
lcall
int
jb
fdivrs
jl
and
in
test
mov
xchg
and
mov
inc
jne
sub
adc
jl
mov
fdivrp
imull
mov
mov
jg
pushf
xlat
lcall
push
testb
stos
sub
cli
cltd
pop
pop
shlb
shr
loope
pop
aaa
popa
pushf
sub
cmp
mov
sbb
cli
test
sahf
cmpl
and
and
sbb
pop
pop
mov
jg
in
pop
je
out
cmc
test
nop
mov
iret
ljmp
push
add
add
stc
cmp
call
mov
test
sbb
or
mov
mov
jb
sbb
mov
or
int
in
dec
out
jecxz
ljmp
int3
movsb
xor
mov
sbb
mov
sbb
sti
rcrl
pushf
or
lcall
pop
inc
mov
and
call
push
out
pop
push
or
lret
push
rcl
ljmp
mov
fstps
sahf
dec
cmpsl
outsb
xor
insb
pop
scas
xchg
movsb
jns
add
mov
loop
test
pop
or
sahf
inc
pop
jbe
inc
push
mov
xchg
fistpl
xor
pop
call
enter
lock
or
mov
dec
mov
inc
in
cmp
mov
in
adc
lahf
add
jbe
mov
out
add
sbb
mov
test
push
cmp
xor
xor
rcrb
push
scas
fwait
mov
sbb
or
addr16
dec
lret
lret
ja
lods
lahf
mov
pop
and
out
pop
mov
adc
xor
sub
pop
dec
add
push
or
inc
pop
xchg
add
mov
mov
repnz
je
dec
mov
insb
inc
mov
jle
dec
sbb
sahf
pop
std
adc
pop
pushf
mov
mov
mov
add
dec
xchg
cmc
add
mov
sbb
xchg
int
ljmp
ljmp
pop
je
dec
adc
sub
gs
inc
dec
or
fwait
mov
xor
mov
mov
inc
faddl
cmp
push
add
adc
outsb
adc
test
imul
dec
jbe
cmpsl
out
test
out
cmp
jno
inc
pop
cwtl
xor
shl
xor
xchg
icebp
mov
xchg
pop
lods
cli
das
lea
negb
test
xor
xlat
cmp
mov
and
filds
in
xor
imul
mov
mov
or
and
cmp
notl
xchg
sbb
popa
imul
mov
cmp
jno
popa
jb
or
mov
mov
sti
jecxz
sbb
xchg
in
xchg
jg
sbb
stos
lods
sub
les
test
pop
add
into
ds
pusha
xchg
mov
mov
pop
add
mov
fistpll
arpl
lea
sar
cwtl
out
xor
lods
ss
pop
testl
cltd
push
jnp
pop
xor
mov
inc
movsl
ret
cmp
sbb
iret
push
mov
xor
pop
js
mov
aaa
ret
test
fadds
jge
ret
stos
jg
jmp
adc
xchg
mov
hlt
pop
or
rcl
stos
jae
hlt
ret
push
push
mov
inc
mov
mov
shr
or
int3
mov
xor
fdivrs
push
out
sbbl
lea
adc
sbb
or
fimull
cmp
scas
jle
sbb
pop
aas
or
and
cmp
popf
das
or
xchg
notb
loopne
std
pop
xchg
test
arpl
nop
push
dec
ds
cmp
ja
int3
add
mov
cmp
imul
mov
adc
mov
sahf
div
sub
jns
dec
orb
push
jae
movsl
ja
aam
ror
aad
pop
fs
stos
xchg
repnz
dec
xchg
dec
push
push
sub
cltd
das
sub
hlt
out
cmpsl
fbld
movsb
pop
and
mov
dec
test
pop
jb
enter
push
xchg
daa
repz
pop
fsubrs
pop
sbb
inc
fs
and
lds
pop
int3
ret
inc
cmpb
fcoms
loope
cli
push
jns
jmp
mov
or
mov
inc
lcall
sbb
movsl
sub
xchg
mov
loope
enter
sahf
enter
xor
or
popa
cmp
push
xchg
popa
inc
pop
loope
push
sbb
sub
add
xor
mov
or
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
jno
leave
mov
jmp
jl
pop
mov
adc
fbstp
nop
or
into
leave
cmp
xchg
rolb
mov
lahf
or
insb
push
push
std
cmpsb
pop
mov
or
outsl
jnp
ret
mov
sub
xchg
dec
pusha
or
dec
insb
cmp
mov
sub
cmpsb
push
inc
gs
jecxz
sbb
fisttps
popa
sarb
cmpsl
inc
inc
lods
popa
inc
lods
addr16
gs
pushl
lcall
in
jbe
fwait
js
lret
mov
xor
sub
in
jbe
out
lahf
loopne
loope
push
ret
ja
stc
and
xor
inc
jnp
push
clc
jns
dec
loop
add
js
jmp
xchg
adc
sub
repz
xor
xchg
mov
sahf
jp
push
mov
aas
push
mov
xchg
lahf
push
adc
jno
jl
inc
pop
sub
mov
sbb
sub
jle
fstp
loop
xor
adc
stos
cmc
cmpsb
mov
add
pushf
movsl
fstl
lret
ret
pop
addl
hlt
mov
xlat
dec
lods
xor
pushf
add
push
jle
adc
jnp
js
pop
sahf
sbb
sbb
cwtl
xor
adc
push
cmp
fsub
xor
loop
jecxz
icebp
jbe
mov
jmp
xchg
pop
add
sub
sti
test
ficomps
jae
push
jb
mov
sbb
cld
insb
imul
loop
jecxz
sub
rolb
cld
stos
in
push
push
pushf
or
cmp
sub
pop
shufps
mov
inc
push
push
push
adc
mov
adc
add
push
adc
sbb
lret
push
pop
xor
ret
cmp
imul
xor
mov
sahf
xchg
and
cmp
fisttps
push
stos
rcl
push
push
cmpsb
insb
jmp
or
scas
cmovle
push
mov
dec
call
and
test
jbe
jns
lret
addr16
aam
mov
mov
sub
xchg
mov
adc
push
push
mov
jmp
xor
aaa
cli
pop
test
dec
aad
sbb
sbb
out
sbb
jnp
mov
outsl
adc
ja
push
shlb
jle
bound
xchg
mov
push
int
dec
jl
test
inc
scas
subl
scas
jns
orl
and
push
outsl
insb
outsl
in
and
mov
inc
outsb
push
add
mov
cmp
arpl
jecxz
xchg
or
inc
cmp
xor
jp
push
xor
cmp
pushf
adc
add
pop
push
mov
jb
jbe
scas
jo
jne
adc
popf
stos
xor
jmp
mov
mov
cltd
add
adc
add
push
mov
lods
in
loop
pop
dec
loop
daa
mov
int
jp
push
bound
mov
add
cmp
les
add
cmp
jge
mov
leave
xor
xchg
pop
mov
dec
sub
push
lea
loopne
das
loope
sti
lret
dec
adc
jp
lret
cmp
pop
pop
into
jg
sbb
xchg
mov
cmc
ret
push
sti
mov
mov
jo
arpl
mov
cmp
push
jmp
loop
jp
sti
xlat
cmp
lahf
push
std
lods
push
jecxz
add
adc
add
xchg
fimuls
or
jb
repnz
xchg
push
push
jno
sub
jbe
daa
je
sahf
aam
jae
push
cmpsb
mov
fldt
stc
jecxz
out
or
xchg
ja
inc
mov
daa
adc
loop
lret
repnz
jbe
sub
movsb
repnz
roll
pushf
call
out
xchg
stc
mov
mov
xchg
in
xor
jno
ret
loope
dec
adc
fnstcw
push
movsl
sarl
sub
adc
fidivrs
jle
and
andl
mov
add
dec
test
mov
sbb
push
das
dec
sti
add
jp
inc
adc
push
adc
rclb
mov
into
roll
add
jmp
das
mov
push
jae
inc
outsb
sti
arpl
pop
push
mov
je
stc
jp
xor
cmp
push
push
push
int3
nop
xor
xchg
push
mov
mov
adcb
mov
cmp
push
add
xchg
mov
sbb
xor
jge
loopne
fidivrl
addr16
loopne
in
jno
mov
push
xchg
shrb
mov
sbb
imul
cld
pop
inc
loope
add
ss
rcrb
and
xor
mov
movsl
or
addr16
decb
jp
out
es
loop
and
ljmp
add
fisubs
jl
lock
sub
add
ret
lods
imul
or
mov
notb
mull
mov
mov
in
and
mov
cltd
jge
cli
imul
fnstsw
sbb
dec
add
inc
test
lods
fildll
jae
lock
xchg
clc
mov
lret
push
push
mov
mov
fwait
jmp
adc
loopne
fists
in
mov
xchg
inc
pop
inc
push
mov
dec
mov
jnp
ss
mov
imul
push
sti
jne,pn
fnstenv
loopne
ds
cmp
dec
faddl
dec
inc
cmpsb
jp
jmp
aad
sbb
fdivrs
xchg
ss
dec
sub
lods
test
hlt
sub
or
cmc
stc
sbb
fdivrl
jg
mov
mov
sahf
mov
mov
mov
sbb
pop
sahf
push
or
push
xchg
mov
sub
mov
lock
nop
mulb
lods
sub
movsl
data16
or
out
lcall
frndint
sbb
into
imulb
stc
pop
aad
insl
fimuls
xchg
fstpt
push
mov
and
mov
inc
mov
cmp
pushf
or
sbb
enter
clc
insl
shll
in
jmp
daa
imul
lahf
jno
outsb
int3
stos
out
dec
add
adc
frstor
mov
sbb
inc
je
cmpsl
add
or
es
jp
stc
inc
inc
lods
lcall
fwait
mov
jo
pusha
lods
cwtl
adc
sbb
push
adc
xchg
sub
pop
mov
leave
mov
dec
dec
add
ja
or
lahf
and
imull
les
lods
cmpsl
clc
cmp
sti
inc
lods
inc
sti
pop
mov
fsubrs
dec
jbe
in
testb
sub
mov
cmp
add
test
or
bound
jmp
jnp
add
nop
scas
daa
push
int3
dec
loope
popa
outsb
icebp
jno
addr16
dec
add
adc
imul
jmp
sbb
outsl
repnz
xchg
daa
fnstcw
push
shll
pop
mov
fnstcw
addr16
mov
adcl
stc
add
mov
in
fistpl
xor
adcl
pop
mov
sbb
add
or
dec
je
or
inc
lcall
sbb
aam
pop
cmp
or
faddl
shrl
lret
in
shlb
loopne
push
mov
repnz
push
sbb
adc
stos
cld
js
test
sbb
xchg
insl
sbb
push
fistpll
cmp
shrl
std
xchg
pop
leave
push
cmp
loope
jle
out
stc
aaa
xchg
dec
sbb
jg
cmp
mov
adc
mov
pop
or
enter
sbb
jb
lock
fsubs
movsb
arpl
push
ljmp
or
inc
jle
loopne
inc
daa
negb
push
sti
add
mov
push
pop
or
mov
mov
gs
iret
fsts
icebp
stos
cmp
fst
add
lcall
xchg
fs
and
shlb
les
aam
jb
out
jb
sahf
fstpt
lret
int
mov
test
cmp
cmp
adc
or
mov
sbb
lods
mov
dec
in
out
lods
inc
and
sti
lret
mov
sbb
mov
rorl
adc
insb
stos
xor
pusha
hlt
and
lcall
aam
add
jb
dec
jl
in
imul
xor
lahf
dec
add
imul
pusha
rorl
mov
dec
leave
cmp
or
out
xor
not
push
inc
mov
push
jbe
jne
fimull
pop
stos
add
push
xchg
sbbl
test
pop
and
mov
pop
push
sti
mov
sbb
test
test
inc
out
pop
mov
mov
mov
mov
mov
sub
mov
cld
mov
arpl
rorb
divl
pop
xchg
adc
dec
es
inc
mov
mov
cmp
dec
imul
dec
lea
xlat
icebp
push
test
out
mov
mov
or
aaa
mov
fwait
stc
mov
ss
or
dec
cmp
xor
ret
ret
mov
cmpsl
sub
adc
movsl
adc
or
add
and
popa
push
dec
insl
adc
mov
cmp
cs
add
push
push
dec
push
mov
test
lds
sbb
sub
mov
cwtl
sub
test
aaa
mov
out
int3
fcmove
lods
fmull
sahf
jo
and
aad
push
lock
or
in
or
cmpsl
mov
andl
fidivs
push
mov
push
xor
jno
out
in
xchg
xchg
lods
les
adc
xlat
cmp
cmp
inc
lock
xor
cmpb
xor
mov
jmp
cmpsl
aad
adc
pop
or
sbb
imul
std
mov
aaa
sarl
mov
les
fidivrs
stc
push
js
lds
pop
push
loop
adc
xor
jno
mov
aam
outsb
jo
orb
jecxz
ret
lret
test
call
push
and
loopne
push
push
xchg
or
xchg
cmp
push
pop
outsl
cmp
movsb
sti
xchg
xchg
in
mov
hlt
stos
clc
sahf
shll
inc
sub
or
rolb
js
enter
sahf
imul
lea
and
mov
addr16
lock
cs
ret
loop
cmpsb
dec
and
aas
cmpsl
xchg
dec
lcall
stos
aad
lods
push
push
mov
orb
xchg
lods
call
rcr
jns
and
mov
fidivl
lds
xor
rcrl
sbb
roll
leave
inc
jns
div
in
fcompl
das
or
jecxz
call
in
jle
push
lret
dec
sbb
loopne
fisubrs
stos
icebp
xchg
mov
jb
adc
ljmp
add
add
sub
inc
inc
cmp
aad
or
icebp
push
xchg
sbb
call
xchg
subl
popa
push
addr16
and
dec
push
inc
rcrb
sti
fisubrs
jmp
cmp
dec
adc
sbb
aas
imul
sub
and
hlt
aaa
jo
ds
xchg
cltd
xchg
gs
inc
sbb
add
repz
out
aas
inc
push
and
pop
or
pushf
ljmp
loope
or
lock
push
ret
mov
dec
jns
xchg
xor
mov
popa
xor
imul
aam
jl
lds
jns
jecxz
jmp
and
push
push
mov
loop
lods
push
mov
movsl
lahf
ret
loope
fistl
test
aam
mov
pop
ret
es
loopne
ret
xor
mov
mov
out
lods
movsb
add
rclb
push
fdivrs
ljmp
aaa
pushf
inc
popa
jne
inc
mov
adc
es
out
lahf
push
ss
jb
imul
jns
adc
cli
and
jmp
test
popf
jnp
adc
adcl
notb
repz
dec
adc
das
pop
aaa
add
imul
shlb
xchg
and
jl
lods
fs
stos
xor
add
mov
das
cmp
lods
xchg
add
js
jg
dec
jmp
test
rcll
add
mov
fldl
xor
mov
ljmp
push
mov
int
fst
shll
xchg
pop
sti
xchg
mov
dec
dec
pop
sub
out
scas
neg
dec
jne
inc
in
sahf
dec
xor
jecxz
jmp
sbb
in
inc
ds
in
push
loop
decb
outsl
lods
int
bound
push
inc
fidivrs
shrb
add
pop
shr
testl
aas
xchg
push
test
scas
hlt
mov
bound
and
sub
es
mov
repnz
sarl
xchg
lds
out
push
ficompl
test
and
and
pop
jne
test
testb
cld
xor
sub
test
mov
mov
test
fmuls
jp
enter
jmp
icebp
pop
or
pop
insb
mov
lea
and
out
cwtl
xchg
shlb
popf
cmpsl
ds
sbbl
cld
pop
cmp
pop
ss
rorb
dec
data16
lcall
inc
nop
repz
fsubrp
inc
jne
mov
xchg
sub
clc
pop
cli
shl
sar
pop
cmc
es
pop
dec
std
popa
cwtl
ss
call
xor
jge
sbb
xchg
aaa
cmc
mov
in
dec
adc
outsb
push
push
in
push
mov
pop
cli
add
shlb
aaa
repnz
dec
mov
push
adc
imul
ljmp
movsl
add
lock
jo
jl
push
cmp
stos
js
dec
jno
add
sub
lret
sbb
in
and
insl
cmpsb
das
inc
inc
and
and
cltd
xchg
mov
cmp
int3
sahf
nop
repnz
into
or
scas
lock
push
push
mov
cmp
lret
mov
jo
ljmp
out
test
scas
inc
xchg
add
sbb
push
dec
out
mov
rclb
in
fs
repnz
dec
rorb
sbb
xor
and
sub
mov
test
stc
sub
cmc
jl
add
cmp
leave
mov
fmul
fldt
fninit
push
cmp
addb
fistpll
xchg
fnstcw
pop
fcomps
ret
and
jg
out
divb
orl
jns
sub
push
push
mov
xchg
imul
ss
xchg
cmp
mov
mov
add
mov
adc
jecxz
leave
subb
cmpsb
iret
sahf
cmpsl
mov
push
or
lods
lods
mov
mov
fdivr
or
add
push
cmp
add
mov
or
pop
and
cmp
add
outsl
pop
dec
sbb
lret
jmp
ss
in
aas
and
mov
dec
pop
mov
mov
sbb
xchg
dec
dec
mov
jns
jmp
add
mov
in
mov
xor
pop
cmp
fidivl
cmpsb
push
dec
xchg
cli
mov
inc
mov
mov
mov
sub
jg
add
out
addr16
jl
mov
insb
popa
pop
faddp
xchg
mov
pop
popa
xor
adc
jl
jle
rcrb
addr16
jb
lahf
push
mov
outsl
bound
enter
and
hlt
lods
push
lods
test
cltd
or
adc
sarb
xchg
aad
ret
inc
adc
xchg
mov
jge
inc
rorb
push
clc
icebp
ja
fdivp
lods
aad
aad
mov
or
or
or
std
fwait
mov
dec
fildll
pop
jbe
aaa
adc
jmp
cmc
int3
outsb
lcall
jl
pushf
gs
rcrl
mov
sub
pop
enter
in
ss
jmp
or
daa
scas
inc
push
mov
adc
ljmp
mov
add
adcl
and
sub
xlat
ds
dec
jle
es
add
imul
outsl
ds
sbb
add
daa
icebp
jecxz
push
mov
cmp
js
leave
inc
iret
icebp
mov
add
stos
popf
cli
xchg
lock
xor
ja
jg
cmp
pop
add
pop
adc
inc
imul
xchg
dec
push
roll
push
pop
lock
dec
mov
push
jne
fildl
mov
incb
ret
outsl
test
add
inc
jb
pop
movsl
add
push
insb
ja
jmp
out
add
dec
inc
loope
fidivs
jne
adc
xchg
or
aas
ja
call
cli
xchg
nop
repnz
out
mov
xlat
dec
mov
movsb
adc
out
in
jb
addr16
nop
inc
lcall
cmp
out
and
jae
dec
or
aas
xchg
call
sub
ret
xchg
lcall
negl
mov
test
ljmp
cld
push
push
outsb
jno
lods
jg
mov
scas
leave
clc
cmp
push
dec
adc
lea
mov
fwait
lret
push
das
addr16
pop
sbb
into
inc
xchg
mov
js
bound
stc
test
jo
dec
movsb
pop
inc
push
imul
stos
stc
rol
jmp
imul
push
stc
adc
clc
aas
sub
xor
orl
clc
fmull
mov
push
inc
in
xor
mov
shll
mov
shl
cmc
mov
mov
and
out
lret
aam
ss
ja
and
into
inc
loope
stos
jmp
mov
out
mov
mov
in
jo
sbbl
in
fwait
push
adc
cmp
fsubl
dec
into
inc
xor
repnz
cmpsl
hlt
push
or
sub
rep
adc
push
sbb
mov
int
jge
xor
outsl
mov
push
daa
push
out
into
pop
xchg
jmp
dec
xchg
jp
mov
cmp
or
iret
sbb
fnsave
sahf
or
inc
pop
pop
lods
xor
rcll
xor
sub
adc
ljmp
xor
negb
push
shll
xchg
addb
call
ljmp
ds
shrb
push
lds
sahf
insb
insl
add
xchg
mov
push
in
and
or
adc
sub
insb
push
idivl
ret
xor
inc
and
push
fstl
inc
xchg
jo
mov
icebp
das
xchg
arpl
xor
pop
test
pop
sub
push
lock
aas
sub
and
xchg
sub
jmp
and
jne
adc
test
int3
add
jne
notb
lea
ret
lahf
popf
repz
or
cld
test
add
rcll
fidivl
dec
ret
shl
ljmp
or
dec
mov
rolb
xchg
out
jae
movsl
popa
jge
mov
dec
inc
sub
int
rcr
scas
sti
fsts
dec
and
out
jb
cmp
mov
shlb
push
add
lods
jg
scas
pop
or
mov
push
ret
lock
sub
leave
pop
int3
imul
and
icebp
xor
pop
inc
test
mov
jnp
lods
mov
js
ret
pop
or
ret
ja
jb
jb
pop
inc
into
scas
cmp
cmp
shlb
mov
xchg
or
fdivl
fdivrl
sbb
out
mov
or
insb
dec
jns
mov
gs
push
dec
sbbl
fbstp
pop
cmp
inc
idivb
inc
movsl
clc
xchg
cmc
push
aad
cmp
inc
into
mov
lea
daa
adc
cmp
jno
mov
lds
adc
mov
sar
xlat
mov
pop
inc
or
enter
mov
cli
xchg
mov
ret
aaa
sar
loop
dec
lret
ja
jne
xor
mov
std
test
iret
pusha
rclb
pop
test
or
add
jo
sbb
aam
xor
popl
cmp
pop
push
or
sub
and
sbb
cmp
hlt
lock
pop
sar
jle
daa
loop
sub
adc
add
inc
push
leave
ja
aas
adc
adc
or
mov
mov
loope
fdivr
stos
add
insb
mov
xchg
add
pop
test
push
dec
dec
xchg
idivb
jg
test
xlat
or
in
pop
pop
sbb
and
push
cmc
sbb
mov
sub
push
cs
gs
dec
xor
xor
push
and
push
mov
in
jne
sub
mov
cmc
cltd
shl
loopne
fsubrs
out
rorl
inc
fcom
lods
mov
imul
mov
jp
lret
cmp
scas
mov
push
inc
push
xchg
pop
lcall
fisubrl
xor
ss
mov
sub
mov
mov
shrl
mov
mov
jae
nop
stos
xchg
push
sahf
sub
push
out
lea
mov
jge
sub
adc
mov
rclb
addr16
xchg
pop
sti
pop
mov
iret
adc
int3
cltd
dec
xor
xchg
shll
sarb
out
xchg
xor
sbb
call
mov
adc
xchg
mov
bound
inc
push
sbb
enter
and
cmp
and
pslld
or
rcrl
popf
mov
fcmovu
push
int
wrmsr
pop
je
pusha
xchg
iret
mov
xorl
call
jg
fisubrl
jno
cmp
sub
loop
xchg
lods
lret
fwait
add
sub
xchg
add
negb
lods
push
loop
add
sahf
add
sub
ja
popa
mov
xor
and
jno
outsl
repnz
dec
add
insb
mov
add
jbe
push
or
mov
in
shlb
negl
lret
lds
aad
cltd
sbb
jns
ds
popf
dec
cli
insb
jmp
daa
loopne
xchg
and
cwtl
mov
lods
cltd
inc
push
scas
pop
les
xchg
mov
or
shl
xchg
cmp
ds
lods
xor
fnstsw
and
sarl
dec
fistpll
lods
jmp
inc
inc
add
addr16
mov
sub
fwait
loope
push
inc
cmc
addb
sub
hlt
incl
or
jecxz
mov
test
jae
icebp
mov
mov
enter
mov
push
lcall
orb
popf
pushf
aas
push
cltd
xchg
inc
mov
jns
mov
xchg
mov
push
aam
insl
xchg
push
and
sub
jmp
inc
icebp
inc
aaa
lea
mov
inc
inc
pop
xchg
les
in
pushf
or
cmp
xor
sub
pushl
iret
or
jno
xor
fidivrs
push
mov
rcl
cli
lret
mov
and
fs
mov
xchg
stc
das
arpl
loop
cwtl
addr16
stos
iret
divl
enter
xchg
jl
into
stc
lret
testb
mov
pop
loopne
and
inc
and
dec
or
rorb
stos
cmp
xor
ret
outsl
pop
inc
outsl
dec
mov
xor
stos
jg
lock
cmp
test
and
in
mov
ljmp
pop
mov
sub
lahf
subl
ds
fcompl
std
pop
dec
rcrb
adc
sbb
mov
or
or
jb
lret
dec
mov
js
std
dec
push
adc
aas
shll
repnz
and
popa
dec
pop
call
mov
jae
or
mov
ret
xor
pop
adc
test
cmpsl
push
push
or
iret
ss
je
pop
sbb
fidivs
leave
pop
pushf
mov
enter
shll
sub
pop
ret
icebp
mov
pop
jno
pushf
cltd
movsb
cmpsb
cmp
cmpsb
dec
roll
vminss
and
mov
out
pop
icebp
push
loopne
mov
cmp
outsb
or
sti
xlat
sbb
sub
aad
stos
xchg
pop
nop
xchg
xlat
fists
lret
incb
sbb
les
out
add
push
mov
leave
jne
mov
js
xchg
cmp
lods
shlb
push
dec
jo
xor
fcmovne
xor
mov
scas
add
pop
sub
and
push
pop
xor
fisttpll
movsb
jne
xchg
push
test
push
adc
inc
dec
pop
iret
and
sbb
pop
int
xchg
and
mov
js
out
popf
mov
inc
cmp
fists
dec
mov
jb
enter
push
ror
cwtl
mov
push
call
push
in
pop
inc
mov
int3
inc
dec
or
out
inc
xorb
sbb
adc
inc
pushf
inc
dec
gs
push
cmp
into
xor
daa
pop
add
popl
mov
aam
rorl
out
gs
std
push
xchg
add
xchg
mov
nop
jmp
es
jno
xchg
repz
xor
stos
repz
cmp
mov
mov
xchg
mov
push
sbb
adc
and
xchg
xlat
aad
jne
inc
fbld
or
add
sti
push
add
pusha
pop
ret
adcl
push
imul
clc
imul
mov
add
testb
je
and
insb
xchg
imul
inc
push
sti
xor
leave
mov
add
push
xchg
cmp
mov
lret
cli
rcr
enter
and
and
popl
pusha
xchg
and
stos
outsb
mov
pop
cli
push
pop
and
xchg
mov
movl
outsl
aaa
sti
sub
xchg
lods
stos
in
lods
cli
das
pusha
xchg
jmp
loop
call
int3
xor
and
pusha
out
add
adcb
jl
mov
mov
test
add
mov
sub
mov
jb
fs
pushf
and
mov
dec
mov
jbe
push
pop
or
loope
test
cmp
repnz
cli
push
cli
iret
ret
jge
pop
nop
xor
fs
in
xor
inc
pop
xchg
jbe
sbb
mov
pop
adc
cmpsb
idivb
gs
inc
scas
add
mov
lret
cmp
popf
rorl
mov
dec
lret
test
lock
icebp
inc
pusha
xchg
xchg
push
loope
mov
or
sbb
cli
popa
mov
or
jl
mov
jne
pusha
xlat
cmp
sbb
cmp
outsb
jp
cmpsl
mov
mov
adc
cmp
imul
adc
push
in
mov
aas
jmp
test
cmp
movsl
in
repz
lods
jecxz
inc
xor
jnp
rolb
add
iret
loop
push
ret
pop
or
mov
inc
ss
imul
pop
cltd
aas
dec
sbb
xchg
clc
xor
icebp
jmp
cmp
out
cmp
sub
jo
ror
push
mov
test
mov
xor
sub
jno
push
lds
jae
stc
xchg
lods
fwait
imul
cmpsb
dec
pop
mov
pop
and
push
dec
jns
pop
xchg
mov
subb
push
out
xlat
xchg
movb
jmp
std
cmc
scas
mov
notb
stos
cmc
inc
add
popf
repz
aam
adc
clc
pushf
mov
int3
xor
lods
sahf
arpl
xor
sub
push
xor
mov
das
insb
pop
xor
jg
adc
ret
fildl
cltd
into
imul
mov
call
shlb
xrelease
mov
dec
ret
je
scas
cmpsl
and
jecxz
cmpsb
repnz
pop
sbb
push
mov
sbb
jge
ss
adc
and
jmp
loop
js
dec
mov
add
lcall
dec
hlt
adc
dec
loop
xchg
inc
les
pop
cmp
sbb
call
cmp
test
imul
add
cwtl
adc
mov
dec
push
jle
pop
cwtl
mov
fcoml
lret
clc
je
dec
add
mov
mov
ds
sub
mov
adc
or
pop
sbb
inc
sbb
js
sub
adc
dec
xor
das
cmp
aaa
mov
rclb
lret
mov
pop
sbb
mov
sti
dec
stos
pop
lcall
enter
enter
adc
loop
les
mov
adc
xchg
loopne
inc
stc
xchg
mov
icebp
les
push
mov
call
ror
stos
xor
mov
imul
loopne
shll
subl
pop
inc
dec
lods
pop
xchg
std
mov
pop
imul
xor
mov
jg
xchg
inc
mov
dec
sahf
popa
movsl
mov
pop
dec
inc
adc
push
outsb
xor
cmp
pusha
pushl
sahf
mov
mov
movsb
sbb
stc
mov
mov
jo
and
xchg
inc
int3
pop
popf
movsb
inc
inc
sub
and
mov
sub
dec
xchg
xlat
jg
jecxz
sub
cs
adc
inc
or
push
loop
jle
jmp
and
push
push
into
pop
mov
negb
std
mov
in
pop
jb
xor
mov
jns
roll
mov
pop
ficoml
fmull
push
and
call
cli
sub
pop
xor
bound
mov
cmc
dec
jmp
cmp
es
adc
js
mov
int
sub
in
sti
mov
inc
nop
gs
cld
inc
lcall
les
sub
jmp
mov
shll
adc
ss
bound
mov
ds
mov
dec
inc
fwait
cmp
xor
jmp
pusha
pop
push
xor
mov
scas
rclb
in
or
jmp
test
dec
add
inc
fwait
int
jmp
cmpsl
jmp
ret
nop
sahf
out
dec
xchg
xchg
dec
jg
add
cmp
jg
addr16
ret
test
fcompl
mov
push
add
push
fbstp
add
xor
rclb
xchg
adc
dec
or
and
int
fnstsw
push
sub
lahf
pushl
adc
push
xchg
out
add
fstpl
aam
aaa
jnp
imulw
dec
mov
pop
jno
fwait
loop
ja
rcll
lds
cmp
popa
mov
or
mov
sbb
loop
inc
orl
jae
adc
test
rcrl
jo
mov
or
pop
pushf
in
xchg
jno
cs
dec
jns
in
sbb
scas
xchg
out
xchg
hlt
icebp
in
xchg
out
cwtl
jge
mov
fwait
rorl
xor
jg
int3
cmp
ss
xchg
sbb
push
test
jmp
fs
cmp
cmpsl
cmp
sub
jp
outsl
stc
cmp
xchg
shl
pushf
into
sti
adc
mov
jne
and
jge
loop
mov
js
push
mov
dec
divb
loope
push
jns
sbb
push
sbb
insb
lret
mov
leave
mov
rcrl
mov
rcll
pop
pop
cmp
lea
enter
jl
js
mov
in
or
add
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
mov
int
jl
pop
jl
xchg
roll
add
jg
arpl
not
cmp
sub
xor
xor
and
or
outsb
mov
lods
into
dec
sbb
int3
or
dec
int
sbb
sbb
ja
add
mov
add
push
jl
jne
std
xchg
mov
aam
jae
rcll
sub
jge,pt
push
rolb
int
enter
cmpsb
inc
push
data16
es
insb
add
int
popf
jno
cli
cs
loop
stos
push
xchg
xchg
fbstp
clc
jp
leave
inc
loope
pop
test
stc
movsl
or
push
jmp
and
data16
pop
mov
lahf
scas
mov
push
jns
dec
mov
mov
or
inc
in
xchg
in
mov
stos
sbb
decb
mov
int
cmp
sbb
into
repnz
mov
jle
lods
add
mov
fdivrl
cmc
xor
xchg
aaa
pop
add
mov
adc
adc
out
ret
inc
clc
dec
lock
mov
test
mov
addr16
aam
fadd
dec
push
cltd
dec
test
or
mov
sub
jmp
notb
repz
mov
xchg
js
pop
pop
cmc
js
fs
scas
mov
xor
scas
iret
scas
mov
xchg
push
shlb
scas
insb
inc
mov
xchg
and
lcall
sub
in
dec
cmp
icebp
mov
and
js
lea
movsl
imulb
cltd
sub
push
cli
jecxz
xor
lock
mov
jge
ds
aad
add
sahf
gs
mov
mov
jmp
jne
inc
xchg
sbb
out
xor
testb
repz
lds
das
xchg
ret
fldcw
push
adc
in
add
push
dec
mov
lods
cmp
jae
cmp
je
iret
std
int3
stos
mov
divw
xchg
les
push
maskmovq
divl
test
mov
hlt
into
dec
movsb
jmp
mov
lret
aad
adc
add
sbb
and
std
inc
or
frstor
std
pop
clc
sub
dec
inc
aam
adc
and
or
loop
jns
repz
mov
xor
lret
leave
fcmovbe
fisttpll
test
inc
adc
xchg
outsb
mov
cmp
mov
and
addr16
loopne
and
out
jle
push
xor
inc
jecxz
add
jns
dec
jle
cltd
cmp
xchg
xorl
leave
test
add
scas
mov
mov
lahf
pop
push
test
jge
fnstenv
adc
jge
icebp
mov
xor
popf
push
cmp
add
les
jp
out
push
pusha
pop
dec
cmp
fimuls
sarl
insl
bts
out
jo
jnp
add
sub
jo
push
jl
adc
pop
testl
lea
push
test
subl
jecxz
sub
insb
sub
arpl
add
lret
xchg
add
cmp
adc
pop
dec
aas
push
pushf
or
repz
mov
ret
add
test
insl
cmp
xchg
lret
leave
mov
jne
lahf
sbb
imul
jns
adc
stos
cmp
fs
ror
lret
fs
nop
inc
cmp
mov
sbb
ret
dec
push
pusha
in
cmpsl
shl
cmp
inc
es
sub
sub
cmp
cltd
or
loopne
int
aad
inc
jno
dec
cmpl
ljmp
adc
pop
call
xchg
icebp
add
popf
ret
inc
mov
inc
sub
lret
mov
leave
es
rcrb
ljmp
repz
cwtl
and
sub
arpl
jg
mov
jno
add
cmpsb
inc
or
out
mov
cmp
ds
gs
push
mov
cmovl
add
cltd
push
movsb
js
mov
fsts
sub
cmpsb
pop
add
data16
mov
or
xchg
mov
pop
aad
push
dec
mov
inc
and
push
ss
les
push
andl
repnz
push
pop
jmp
push
repz
mov
mov
loopne
cmp
and
mov
inc
inc
jb
add
fwait
jmp
leave
divl
fwait
or
jno
sub
push
leave
pop
adc
mov
lods
repz
xor
sbb
adc
icebp
cmp
inc
lods
sbbb
and
adc
xchg
div
ret
cmpsb
cwtl
loopne
xchg
test
hlt
out
jo
loop
xchg
fidivrl
in
call
mov
mov
stos
pop
daa
popf
ljmp
ljmp
push
loopne
test
inc
loope
jne
js
pop
adc
jmp
mov
dec
xchg
inc
out
inc
adc
fistl
cwtl
fcoms
ja
addr16
mov
scas
andb
mov
lods
aad
xlat
pop
jmp
push
popf
and
enter
ret
or
and
jno
mov
xchg
mov
shl
out
movsb
jb
add
fsubs
fwait
adc
dec
mov
leave
out
adc
mov
sub
fsubp
cwtl
sbb
mov
insl
adc
sub
add
imul
ret
je
add
ret
ja
add
jecxz
adc
imull
mov
movsl
push
mov
cmpsl
arpl
mov
and
jl
insl
mov
mov
test
icebp
xchg
push
es
loop
out
or
xchg
int3
mov
push
imul
mov
insb
sub
testl
pop
jecxz
inc
es
or
pop
mov
jecxz
enter
dec
push
add
inc
push
dec
mov
cmp
mov
imul
filds
sub
xor
ja
leave
rcrl
xchg
sbb
icebp
fistpll
sub
push
push
push
push
fnstsw
push
sub
mov
rolb
inc
rcll
ljmp
mov
fisttpll
push
stos
mov
xor
bound
std
ret
int
sub
jmp
mov
mov
mov
mov
je
lods
lods
jae
jge
sbb
cltd
mov
sub
lods
push
loop
popa
test
aas
inc
lock
jg
xchg
xchg
sbb
outsb
add
xor
cwtl
pop
movb
adc
lds
in
call
mov
in
cmpsl
sahf
push
int3
xchg
adc
and
sub
dec
dec
cltd
and
cmc
jmp
sti
sub
cltd
cld
in
dec
inc
cwtl
sbb
out
pop
sbb
js
and
mov
stos
mov
dec
outsb
mov
and
push
adc
pop
mov
std
arpl
cmp
scas
les
mov
loopne
ss
sti
or
lock
repnz
in
adc
or
jge
cmovno
outsb
xor
pop
loop
push
pop
pushf
pop
int3
xchg
adc
jbe
shl
mov
int3
dec
loop
mov
and
xchg
lods
cmp
insb
xchg
and
or
into
dec
mov
lods
insb
outsl
icebp
jle
xor
xchg
sbb
xor
jl
fisubrl
adc
cmp
and
subl
ret
xor
mov
sbb
imul
jne
sub
push
dec
jo
pop
mov
mov
xchg
shrl
jge
adc
cmpb
dec
inc
adc
ja
in
nop
mov
push
jmp
insl
jg
jle
mov
mov
fisubl
mov
and
insl
test
imul
and
xchg
xchg
mov
repnz
neg
mov
pop
or
sub
es
or
arpl
sbb
shlb
ljmp
out
inc
sahf
mov
mov
imul
mov
ret
or
jp
pop
fidivrl
outsb
pop
sub
filds
or
outsb
sbb
mov
jno
and
pushf
ss
into
adc
clc
out
pop
mov
dec
loop
into
jo
popa
xchg
loop
lcall
xor
jbe
xchg
mov
outsb
fimuls
push
lds
popf
sub
imul
push
icebp
push
jo
fcoms
push
cmp
inc
and
scas
imul
popf
aaa
mov
test
add
adc
clc
nop
test
testb
jle
out
fimuls
mov
xchg
xchg
xchg
lea
out
sub
stos
rclb
test
movsb
stc
outsb
jae
dec
xlat
arpl
sub
add
aas
adc
int3
sbb
clc
jle
add
shll
lds
mov
das
addr16
imul
push
sbb
roll
and
mov
push
or
ret
sahf
insl
loopne
fadd
ja
scas
jecxz
xor
cmp
sub
jg
pop
fldt
adc
xchg
pushw
addr16
dec
pop
inc
or
dec
mov
mov
or
jle
jp
rorb
mov
adc
leave
es
nop
sbb
or
shrb
adc
pop
sbb
push
int3
jne
push
sub
add
fnsave
sarl
ret
fs
push
xor
sti
pusha
inc
inc
fisubrs
adc
mov
daa
xchg
sub
pop
push
sbb
mov
sub
pop
sbb
aad
mov
cmp
ljmp
and
ret
jl
or
or
andb
xor
mov
subb
shlb
in
fsubrs
inc
sub
cmp
and
in
movl
push
push
ja
add
inc
sbb
push
add
sbb
pop
jns
cmp
ja
inc
icebp
loope
cs
cmpsb
aaa
stos
decl
jne
scas
ficoms
cmpsb
pop
jns
loop
sub
into
clc
cmp
nop
ss
inc
adc
jmp
and
or
sar
pushf
es
dec
mov
mov
lods
cwtl
add
adc
rol
out
loop
repnz
dec
mov
pop
ljmp
out
loopne
push
aas
dec
mov
and
or
pop
or
ficompl
in
in
inc
lcall
dec
gs
rcl
mov
outsl
pop
pop
arpl
sbb
jle
add
loope
ja
cld
shrl
shlb
or
xor
lret
lds
dec
cltd
nop
xlat
xchg
jge
add
mov
xlat
mov
cmp
jmp
mov
lahf
insl
dec
mov
fcoms
push
fistl
dec
fildl
daa
mov
cld
push
push
mov
mov
bound
and
sbb
rclb
sub
dec
xchg
pop
loopne
push
shrb
mul
add
mov
js
push
movsb
dec
scas
imul
push
sub
mov
mov
flds
adc
jo
add
sub
or
dec
mov
jae
push
insl
rol
movsl
cmp
and
sbb
xchg
lock
mov
adc
push
xchg
mov
and
imulb
cmpsb
adc
out
fcoml
icebp
cmp
xor
push
sbb
dec
adc
pop
iret
xchg
mov
adc
je,pn
pop
jb
repnz
or
jecxz
sub
jmp
stos
fstpl
or
fidivrs
mov
xchg
push
lcall
jg
jmp
das
lret
cli
notl
cltd
mov
cmp
lcall
adc
lods
loop
push
ss
mov
inc
sub
aaa
test
cmp
jbe
sbb
mov
fldenv
cmc
dec
xor
jg
imul
mov
xlat
js
arpl
jp
xchg
mov
jo
cltd
pop
int3
pop
rcl
lahf
sahf
int3
fildll
clc
pop
sub
in
jne
mov
repz
pop
mov
sub
dec
fisubs
and
sbb
add
jb
addl
jl
cs
nop
sub
out
lods
fcmovu
ds
pop
adc
adc
bound
dec
in
movsb
jns
pop
xor
fistpll
and
xor
jns
fstpt
cmp
fists
xchg
bnd
xchg
adc
aam
adc
fs
dec
mov
mov
sbb
adc
lcall
in
jns
add
push
aam
imul
sbb
jne
mov
sub
in
adc
xchg
shlb
inc
repnz
and
pop
mov
loopne
mov
stc
push
sub
das
dec
imul
sbbb
xor
jl
cwtd
outsb
cwtl
pop
fdivrs
or
xor
aas
ds
shll
jmp
outsb
pop
mov
in
in
fisubl
sahf
jns
pop
pop
sub
jg
jbe
push
stos
adc
mov
jp
add
clc
inc
dec
adc
or
ds
xor
in
add
movsb
mov
mov
jnp
out
mov
test
arpl
leave
mov
enter
cmp
int
mov
inc
lods
jne
ret
and
mov
fldcw
mov
das
or
ret
mov
movsl
mov
adc
mov
pushf
mov
push
mov
aaa
in
out
decb
push
add
lret
mov
adc
xadd
data16
mov
pop
ja
mov
fisttpll
imul
rolb
rolb
fwait
mov
ud0
fistpll
add
xor
jl
cwtl
mov
jae
xchg
stc
in
nop
pusha
adc
pop
std
sbb
jb
fnstcw
cwtl
cmp
xor
pushw
es
mov
xchg
icebp
jae
adc
add
pop
call
movsb
inc
dec
daa
test
lds
loop
jmp
pushf
jp
loopne
das
je
cmp
js
imul
inc
mov
out
out
orl
cld
popa
mov
inc
mov
cli
aaa
jg
push
pushf
loop
add
lret
add
and
push
pop
inc
sti
insb
in
jbe
imulb
or
loop
stos
adcl
jl
jne
out
inc
jmp
sub
insl
mov
and
orb
ja
jb
aaa
jno
inc
movsl
cmpsl
popa
nop
fs
cltd
imulb
pop
xor
scas
lea
add
jae
sbb
int3
xlat
ret
outsb
dec
dec
mov
push
jge
xorb
push
loop
mov
or
push
jo
adc
insl
jo
inc
add
push
gs
xchg
cmp
std
out
fldl
ret
mov
and
ljmp
dec
xor
mov
cmpsb
inc
nop
arpl
pop
mov
cld
or
rclb
movb
lret
add
jns
sti
mov
les
xor
jns
fcmove
push
adc
stc
adc
subb
out
push
inc
pop
sub
leave
xchg
lock
lret
xor
or
leave
mov
dec
loopne
rorb
mov
repz
adc
xor
add
cmp
cmp
jl
xor
loopne
push
xor
arpl
jp
add
fadds
data16
mov
lahf
ret
idivl
adc
or
cmpsl
cmp
dec
std
or
ret
add
add
pop
dec
inc
push
xchg
mov
inc
lahf
cmp
fstps
mov
lea
pop
stc
mov
pushf
mov
jnp
mov
pop
subb
adc
andb
xchg
jbe
pop
add
add
arpl
jp
cmp
or
ja
dec
push
outsl
pop
xorl
push
jle
cmp
icebp
pop
ja
aaa
jle
and
xor
incl
test
stc
sub
mov
push
adcl
loope
push
xchg
mov
and
les
mov
mov
fisttpl
inc
bound
mov
and
sar
push
cs
rcrb
fnstsw
and
or
push
clc
jle
in
lods
cltd
lods
push
adc
jb
jmp
leave
pop
push
ljmp
add
movsb
sub
xor
dec
add
lea
jns
test
pop
daa
fiaddl
repnz
sub
xchg
lcall
sub
frstor
add
and
outsb
movsb
xor
ds
cmpsb
jle
push
mov
cmpsl
cmp
movsb
or
add
out
mov
and
nop
les
mov
xchg
inc
mov
fcmovne
aas
jbe
fucomi
inc
mov
gs
ds
jle
push
hlt
mov
add
daa
xchg
movsb
ljmp
popf
mov
in
rcr
imul
push
or
fiadds
sbbl
ss
shl
movsb
frstor
ret
adc
add
pushf
fs
adc
je
scas
fdivr
mov
imul
aaa
pop
inc
push
mov
out
rorb
fisubs
leave
xor
sbb
sub
imul
fnsave
repz
mov
popl
xchg
jno
sub
das
jge
mov
clc
and
pop
mov
and
inc
inc
dec
inc
sub
or
xor
jmp
jge
fxch
push
mov
ret
xor
xchg
xchg
mov
mov
dec
cmpsb
sub
sbbl
sahf
ljmp
insl
lret
cmp
inc
mov
dec
and
mov
stos
sahf
in
and
nop
arpl
xchg
lcall
dec
pushf
mov
cmp
rorl
cmpsb
jmp
push
xor
cmp
test
mov
les
push
aaa
jbe
sar
mov
push
sahf
les
andnps
pop
cmpsb
xor
pop
outsb
mov
inc
xchg
mov
push
jno
sbb
loop
pop
mov
xorb
adc
mov
mov
nop
pop
test
jae
fsubl
mov
or
scas
nop
add
pop
xor
cmpsb
inc
dec
sub
insl
xchg
rclb
adc
xlat
popf
insb
and
test
jno
mov
jb
popa
cmp
pop
test
jg
sub
decl
es
dec
pop
ret
jge
xorb
mov
imul
int3
in
test
fidivs
iret
loop
sub
or
fildl
sub
ds
es
and
int3
std
jmp
mov
push
clc
or
cs
jle
mov
or
mov
scas
inc
push
mov
daa
insb
push
lea
xchg
fld
xor
dec
ds
pusha
rcrl
mov
xchg
clc
test
add
or
or
test
push
test
push
push
bound
sub
inc
out
out
and
xor
pop
cmp
daa
pop
or
push
dec
pop
mov
test
sub
insb
inc
leave
xor
sbb
mov
adc
mov
cmpsl
aaa
jg
push
inc
dec
test
cs
out
sahf
dec
test
and
xchg
sub
push
imul
loope
fistps
test
dec
and
add
sbb
and
stos
pop
clc
addr16
aad
cli
mov
lds
push
int
mov
push
subl
inc
cmp
mull
popf
mov
cld
mov
pop
inc
cmpsl
ja
out
or
test
add
addr16
outsl
movsl
test
test
shll
test
hlt
lds
sbb
pslld
mov
xchg
jmp
sbb
and
jmp
stos
inc
notl
inc
xor
and
mov
xor
sbb
in
or
xlat
lock
fs
pop
push
xor
lahf
dec
pusha
fs
sub
push
add
or
mov
xor
sbb
enter
pop
les
fcmovu
adc
lds
push
lea
mov
test
xor
dec
and
aaa
sbb
mov
imul
in
dec
dec
push
ret
xchg
nop
add
pop
gs
sub
ret
dec
add
insb
cmpsl
subb
and
push
add
push
cld
push
pop
cmp
sti
mov
outsb
fwait
mov
pop
inc
cmp
pushf
dec
lret
jns
in
call
loope
dec
jbe
test
jnp
mov
jp
cli
repz
fstps
fbld
inc
leave
pop
cltd
addl
hlt
scas
xor
sbb
cs
pop
hlt
sti
jmp
dec
je
pop
xchg
imul
or
je
dec
movsb
cmpsl
jg
lea
add
xor
inc
jae
repz
imul
and
xor
xor
xchg
fsts
test
mov
scas
clc
in
cld
fmuls
or
sub
xchg
movsb
sub
lretw
jbe
scas
arpl
pop
loop
call
iret
jmp
gs
es
sbb
das
sub
add
push
es
inc
push
mov
clc
lds
popa
fsubs
cmpsl
push
push
xor
call
into
inc
xor
rol
sbb
adc
xchg
mov
int
adc
das
cmp
jg
cld
out
cmp
push
or
ficomps
jle
dec
inc
push
jge
mov
leave
rorl
mov
pop
pop
cmp
decb
mov
mov
adc
mov
or
push
ss
add
jne
mov
rcrl
inc
jge
adc
sbb
clc
popa
push
and
sti
sub
push
out
adc
dec
aam
jbe
rclb
popa
mov
bound
js
fs
das
push
mov
sub
shr
and
mov
in
lcall
jno
aaa
add
jecxz
adc
outsb
cmp
and
add
push
and
dec
mov
dec
pop
and
popf
xchg
adc
fcmove
jne
sub
or
xchg
aas
lahf
xor
imul
aaa
loopne
jnp
sbb
fs
adc
iret
iret
mov
lahf
add
jmp
icebp
fistl
inc
mov
shlb
jge
push
outsb
mov
in
xchg
sbb
and
mov
cs
jns
out
inc
xor
bnd
sub
push
in
push
ret
jp
add
insl
fcompl
or
shrl
and
clc
xor
mov
out
mov
mov
pop
dec
int
sahf
dec
push
jns
movsl
cmpsl
xor
jae
sub
mov
xchg
xchg
jmp
mov
push
fsts
imulb
idivl
mov
dec
out
dec
das
cmc
pop
dec
and
aaa
lret
loope
les
ficomps
push
loopne
div
push
int
pusha
scas
shll
jb
fs
ret
push
repz
sub
sbb
std
aas
popa
in
mov
or
stos
lea
mov
les
jbe
push
leave
clc
popa
push
mov
arpl
cmp
push
jbe
inc
cmp
test
inc
mov
push
add
es
add
pop
mov
mov
adc
sbb
enter
mov
mov
sahf
lret
xor
xchg
nop
dec
addb
push
enter
sub
rclb
push
xor
xchg
jb
or
lcall
nop
dec
lahf
imul
cmp
leave
pop
push
xor
sbb
stos
inc
or
aas
push
dec
jo
or
ret
in
adc
sahf
sahf
cwtl
pusha
call
cli
mov
inc
or
inc
mov
xchg
and
adc
inc
and
cmp
xchg
fucomi
ss
std
test
push
xor
sarl
pop
sub
scas
ja
aam
dec
add
stc
cmp
pop
adc
stc
sarl
dec
jmp
sarl
jmp
outsl
lods
ja
xchg
xor
push
lahf
ficoml
and
jnp
sub
dec
pushl
test
stc
cmp
push
cmc
loopne
push
cs
andb
or
cs
add
iret
and
std
xor
insb
mov
dec
adc
push
xchg
lret
rcrl
fnstenv
mov
std
sbb
push
sahf
aad
mov
mov
es
dec
xchg
in
pop
xchg
adc
jne
sbb
das
adc
xchg
xchg
jmp
jg
jecxz
aas
lods
adc
sbb
and
mov
out
addr16
jo
xchg
repnz
mov
in
rol
shr
adc
push
outsl
mov
fstl
inc
and
hlt
inc
popf
push
flds
jl
dec
sbb
jg
repnz
jge
mov
and
adc
outsl
out
mov
push
addr16
mov
jp
out
fs
pop
fcomps
inc
xlat
mov
lock
fdiv
mov
jb
push
outsb
mov
cmp
cld
std
pop
ds
daa
stos
fsubrs
mov
xchg
push
cltd
push
fnstcw
mov
popf
loopne
punpckhdq
lea
jne
xchg
mov
mov
cmp
mov
add
je
shlb
pop
push
shll
add
sbb
std
pop
loop
sbb
jg
adc
sbb
dec
mov
cmp
lods
sbb
movsb
pop
and
pop
in
pop
scas
lret
jb
dec
iret
js
nop
add
cs
pop
in
xchg
pop
mov
sub
test
dec
pop
hlt
inc
and
mov
nop
cmp
add
pop
dec
sbb
rorb
adc
xchg
mov
jns
lcall
mov
jecxz
leave
dec
out
cmp
and
aam
sub
divb
lock
mov
jno
xchg
xorb
shrb
push
jnp
icebp
ljmp
mov
mov
xchg
in
popa
jno
mov
in
push
les
xor
mov
std
pop
jmp
mov
xchg
jb
cltd
les
mov
out
enter
fwait
loopne
xchg
xchg
popf
rorl
lret
loope
outsl
xchg
xor
dec
loopne
movsl
jae
out
inc
ret
leave
addr16
mov
das
ret
and
hlt
idivl
xor
xchg
hlt
loopne
cld
or
cli
push
sbb
dec
xor
mov
imul
mov
sub
out
sbb
cli
ja
rolb
jmp
outsb
jg
cld
imul
outsb
es
mov
mov
or
mov
or
or
into
lea
clc
cmpsb
or
popl
cmp
imul
lea
or
frstpm(287
inc
shll
movl
sub
lcall
cmp
lods
movsl
neg
jl
aam
cmpb
in
jae
jge
inc
enter
into
mov
dec
mov
dec
xchg
mov
mov
lret
adc
imul
pop
ds
stos
pusha
aaa
je
add
aaa
cld
add
mov
addl
lods
sbb
inc
fwait
ja
xor
fbld
mov
loope
out
rol
pop
push
dec
adc
inc
jg
sub
inc
loopne
cli
je
pop
mov
into
dec
sahf
test
mov
dec
repz
jge
xchg
add
cmp
dec
jg
stos
and
mov
mov
jge
xor
pop
jl
cmc
push
das
pop
rol
push
in
mov
icebp
xor
mov
dec
or
cli
or
xlat
add
inc
dec
adc
jo
pop
inc
sbb
lods
push
stos
push
jb
dec
sub
inc
pop
dec
lea
nop
jo
mov
xchg
insb
adc
shlb
jge
aam
xchg
mov
mov
scas
push
cmp
cmpsb
mov
push
mov
pusha
jg
insb
and
cwtl
inc
mov
pop
mov
mov
and
fidivl
lcall
aam
mov
mov
pusha
das
insb
sti
adc
push
dec
xor
sti
loop
sbb
pop
ds
bound
stos
add
sub
int
mov
rorb
push
stc
xchg
adc
and
xor
inc
leave
insb
clc
std
ret
fimull
adc
mov
jg
jb
lcall
jge
mov
nop
mov
add
sbb
push
icebp
or
icebp
inc
repz
stc
call
mov
arpl
cmp
jmp
and
clc
cmp
push
bound
lret
jo
aaa
mov
je
pop
aam
mov
ret
jp
loop
loopne
leave
and
and
dec
sub
xor
xchg
test
lret
aam
lods
sub
stc
mov
out
jg
jnp
push
xchg
outsb
mov
sub
enter
mov
in
lea
loope
jae
push
xlat
shll
dec
jns
fs
test
in
inc
loope
mov
jae
shlb
adc
cmp
pusha
test
sub
outsl
sbb
dec
jbe
pop
lret
jge
and
jmp
out
xor
cmc
test
sub
je
fcoml
mov
loope
inc
into
sahf
popa
mov
xchg
inc
stc
popa
mov
push
pusha
lods
pop
ret
push
rorb
inc
pushf
sbb
fcos
aad
out
jl
jg
mov
sbb
xchg
add
mov
xchg
mov
aas
adc
and
lock
adc
lret
push
sub
adc
push
leave
adc
fwait
jmp
insb
or
adc
mov
xchg
js
gs
cltd
imul
seto
add
or
mov
sbb
dec
rolb
sub
inc
adc
out
jmp
mov
or
hlt
gs
out
add
dec
aam
jle
fst
fdivrs
into
push
push
dec
pop
jle
add
push
mov
imul
insl
ljmp
fs
push
and
movsb
int
out
dec
pop
push
hlt
movsb
sbb
pusha
mov
dec
xlat
ds
dec
imul
mov
cmc
add
addr16
cmp
jno
sahf
dec
daa
fwait
adc
ret
mov
lods
xor
fimull
loope
sub
push
in
and
pop
outsb
xor
cmp
in
mov
test
xchg
and
add
sub
xor
aad
add
push
adc
push
mov
cmp
cmp
pop
js
inc
push
xorl
add
popa
hlt
pusha
pusha
sub
pop
icebp
decb
push
push
jno
or
jp
imul
ja
dec
xchg
sbb
cwtl
imul
cmp
int
inc
dec
or
out
pop
ljmp
adc
mov
shrb
es
ficoms
mov
xlat
test
mov
jnp
mull
call
popf
scas
mov
xchg
notl
pop
mov
in
mov
xchg
inc
cmp
add
xor
cmp
fmul
insl
pusha
popa
lods
test
int
es
lea
dec
lret
sbb
push
and
enter
stos
aas
roll
mov
inc
xchg
jbe
stos
xchg
mov
rcr
push
in
icebp
push
mov
jge
pop
loope
inc
dec
sbb
xchg
call
jecxz
push
add
push
call
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
pop
inc
jno
dec
test
jl
jp
or
sub
sahf
imul
and
add
sbb
xor
pop
movsb
or
adc
loopne
sub
or
inc
andl
inc
out
push
jns
xor
out
mov
adc
lods
fstpl
mov
jns
adc
sub
scas
js
in
lods
sub
leave
mov
and
movsb
dec
mov
pop
mov
lods
mov
fcmovnb
aaa
add
mov
filds
cwtl
sub
nop
enter
inc
jmp
add
outsl
push
xchg
test
xor
sub
daa
stos
cmpsb
jns
ret
les
pop
xor
inc
pop
pop
sbb
jmp
aam
cmp
inc
xchg
add
mov
movsl
shl
fisttpll
loopne
inc
and
push
mov
dec
xchg
fstpt
or
outsb
in
divl
cmp
xor
adc
push
cmpsl
add
mov
sbbb
loop
inc
sbb
push
imull
subb
popa
call
mov
pop
xchg
ret
jb
adc
lea
imul
sub
test
add
jno
dec
pop
mov
dec
xchg
sarb
mov
jecxz
mov
mov
inc
mov
inc
xchg
push
pushf
hlt
sti
mov
mov
xchg
lret
xchg
sub
insl
cmpsl
fnsave
dec
hlt
popa
xlat
jge
push
cltd
pusha
imul
pop
iret
int
or
popa
lods
imul
xchg
sub
ljmp
int3
shr
sbb
inc
jb
push
or
insl
or
xchg
cmpsl
jl
rcrl
in
fildll
or
jno
adc
cmpsl
stos
ret
popl
cwtl
roll
jno
lcall
adc
and
inc
or
in
mov
sub
xor
mov
inc
lds
mov
cld
lret
xor
xor
xchg
pop
jmp
xchg
inc
sub
add
push
mov
aad
adc
sub
fdivrp
jmp
adc
imul
sub
sbb
inc
faddl
in
repz
adc
mov
cmp
or
mov
nop
and
sub
sub
mov
cmp
sub
shl
int
and
loop
lret
jl
insl
es
cmp
inc
shll
popf
mov
aad
and
sub
pop
and
stc
dec
fcmovnu
xor
outsb
push
pop
ret
push
dec
mov
or
xor
aad
cmp
sub
call
mov
inc
insb
add
cmp
or
insl
addl
mov
dec
cs
xlat
and
test
paddusw
es
jp
int
loop
imul
pushf
idivb
mov
imul
dec
add
outsb
inc
mov
inc
mov
pop
push
int3
ds
jmp
xor
mov
push
test
fisubs
pop
ds
inc
cmp
movsb
int3
fldpi
sti
and
insl
jne
aaa
xor
jbe
sub
call
xchg
daa
out
push
push
sub
dec
enter
jno
push
jmp
shl
cltd
sub
fisttpl
xchg
fcomp
pop
rcrl
rclb
cmp
std
stc
sbb
xor
jg
pushf
loop
jno
xchg
fcmove
jo
iret
inc
mov
cmp
pop
cmp
jp
mov
cld
jle
mov
fnsave
std
cli
lret
push
and
mov
add
repnz
stos
jbe
inc
sbb
fsubs
and
and
jno
fwait
movb
dec
outsl
out
sti
in
cmp
inc
xchg
sahf
imul
xchg
jmp
test
ret
mov
mov
sbb
xlat
arpl
addl
jnp
hlt
bound
xor
pop
daa
cmp
ds
jecxz
sbb
mov
in
pop
mov
mov
cli
addr16
cmpsb
loop
sbb
xchg
inc
mov
roll
mov
sbbb
test
mov
shll
mov
test
js
cmp
jns
daa
popf
int3
repz
scas
std
fsubl
pop
push
stos
jecxz
fdivl
xchg
inc
nop
and
jmp
push
xor
mov
and
xlat
ret
jp
out
ret
sahf
nop
xchg
lahf
dec
dec
dec
and
xchg
jecxz
cld
cmp
sbb
sti
inc
or
or
movsb
or
push
add
arpl
out
sbb
cmp
lahf
push
pop
push
orb
dec
idivl
push
pop
lods
mov
and
and
call
pop
or
roll
cmpb
mov
inc
mov
pushf
cmp
push
and
lea
jge
xchg
fwait
sbbl
mov
mov
add
and
sahf
sbb
cmp
sub
jecxz
or
sub
xor
push
cmp
in
mov
lock
push
loop
jae
dec
dec
sub
or
cmp
adc
inc
in
repz
out
mov
push
roll
mov
fidivrl
lea
int3
jmp
cmpsl
or
jbe
dec
cld
xchg
inc
push
gs
jno
pop
push
or
pop
scas
push
dec
mov
push
pop
sub
dec
jb
cmp
jne
pop
and
xchg
hlt
cmp
sbb
and
xchg
and
mov
adc
scas
inc
js
sub
sbb
frstor
inc
dec
das
mov
push
ljmp
cli
lods
cmp
mov
cld
push
adc
ljmp
lds
sbb
insb
push
mov
sarl
and
xlat
repz
call
mov
pop
lods
mov
jp
in
or
lock
fs
imul
sub
jo
push
enter
test
xor
adc
mov
pop
dec
jbe
jp
lods
je
jbe
fwait
test
push
inc
xchg
test
imull
icebp
mov
das
dec
or
jne
mov
inc
in
lahf
jge
stos
icebp
add
sti
out
rorb
xchg
inc
sarl
fmuls
cmp
mov
sahf
pusha
adc
mov
pushf
lock
pop
pusha
mov
imul
int3
rcrb
inc
das
test
mov
or
dec
shll
inc
jg
movsb
rorb
outsb
xor
int3
stos
xor
ss
and
lcall
rorb
inc
frstor
xor
mov
xor
incl
ds
dec
cmp
mov
sbb
adc
adc
test
bound
loope
mov
lods
add
rol
in
lcall
insb
jmp
jns
mov
pusha
xlat
push
test
adc
scas
dec
pop
stos
dec
fst
add
xchg
add
in
repnz
in
jp
and
sbb
mov
cltd
out
es
mov
dec
daa
jo
lods
dec
lods
dec
mov
mov
xchg
adc
cld
xor
dec
pushf
cmp
jl
cmp
ret
fisttpll
int3
mov
popa
dec
adc
jo
sarb
sbb
mov
test
jp
or
test
xchg
jnp
mov
lcall
clc
and
in
add
xchg
mov
inc
xchg
inc
sub
jecxz
popf
leave
mov
push
sbb
mov
fisubs
stos
ljmp
and
imul
and
mov
insb
scas
daa
lock
movsb
das
imul
jmp
aam
ret
sub
xchg
mov
xor
xchg
pusha
insl
pop
and
lock
push
pop
jb
sub
mov
iret
sub
jg
outsb
xlat
fistps
imul
out
outsl
cmp
movsl
insl
nop
sbb
pop
xor
push
je
add
and
frstor
or
dec
sti
dec
stos
shrl
ret
sub
cmp
in
xor
pop
popf
mov
or
mov
cmp
mov
lock
pusha
lcall
ficoml
jle
loopne
popf
and
cmpb
aas
cwtl
xor
out
jo
fwait
mov
scas
movsb
sub
clc
lea
enter
daa
inc
or
xchg
and
movsl
mov
fs
pop
inc
in
stos
in
out
push
sbb
push
jp
push
ficoms
mov
pop
leave
xchg
or
xor
int3
lea
or
popw
scas
inc
lret
cmp
stos
inc
dec
push
add
cltd
ret
mov
or
add
mov
push
push
mov
mov
push
sub
pushf
mov
sub
lock
aam
ds
sbb
sahf
pop
repz
aaa
push
mov
mov
test
adc
in
fcmovnb
sbb
jecxz
test
popa
mov
cltd
xchg
sti
js
stos
adc
lds
xchg
shlb
mov
insl
cmpsl
mov
test
mov
pushf
and
cmp
sqrtss
mov
xor
mov
cmp
jae
or
inc
es
add
push
addb
jmp
cs
xchg
jmp
and
stos
sub
mov
mov
daa
xor
ret
jg
sbb
lea
dec
cld
cwtl
aaa
inc
leave
scas
jmp
or
and
and
enter
and
push
int3
dec
std
jle
jb
fisubrl
aaa
adc
stos
mov
xchg
mov
fsubr
mov
out
mov
pop
pusha
xchg
call
lcall
shrb
jle
jl
push
test
push
int
pushf
pop
mov
pop
test
into
out
mov
int3
out
adc
adc
push
jg
mov
inc
ljmp
out
inc
or
cld
adc
ljmp
sti
dec
push
xlat
inc
mov
mov
mov
push
xor
mov
stos
pop
mov
mov
jle
in
scas
dec
hlt
mov
jmp
movsb
out
adc
mov
cs
icebp
cltd
push
adc
out
scas
mov
shl
enter
cltd
fs
mov
test
inc
pop
mov
jp
mov
mov
sub
or
mov
nop
inc
mov
xchg
dec
pop
mov
stc
mov
inc
xor
roll
xorl
push
push
mov
rclb
call
lods
mov
xchg
and
aam
xor
cmc
cltd
push
dec
pop
ss
iret
push
inc
xor
mov
test
pop
imul
push
mov
jbe
aas
mov
xchg
jno
jae
shl
out
test
popf
mov
ss
pop
adc
sbb
in
cltd
dec
loopne
js
sub
je
out
scas
sbb
and
pop
lods
push
popa
cmp
push
push
and
mov
lcall
fisubrl
jg
adc
dec
jae
in
fstps
xor
pop
cmp
mov
scas
test
int
or
jae
icebp
pop
mov
movsb
js
adc
fwait
lods
jg
outsb
xor
jecxz
out
mov
add
add
fisttpl
sti
repz
xchg
xchg
sbbb
jge
mov
add
fadd
pusha
mov
popaw
outsb
mov
xor
inc
lds
shll
or
loope
sub
xor
popf
mov
jno
sbb
leave
pop
imul
fsubl
aaa
pusha
sbb
sti
iret
movl
sbb
insl
out
sub
and
out
push
insb
add
mov
pop
das
fidivl
fisttpll
mov
pop
mov
push
jmp
lret
sub
shl
sbb
push
jecxz
jb
cltd
adc
aas
fsubrs
push
dec
mov
sub
mov
lea
mov
dec
fistpll
out
repnz
xor
fwait
pop
push
iret
testb
inc
mov
ret
in
inc
jl
dec
sbb
mov
iret
cmpsb
fcmovnu
data16
push
inc
sub
fs
data16
jecxz
or
sub
mov
adc
xchg
adc
sbb
iret
hlt
incb
ss
rorl
jmp
dec
and
pushf
mov
mov
xchg
add
xchg
and
push
add
pop
mov
sub
in
call
jno
sbb
push
fdivrp
mov
stos
sbb
mov
mov
and
pop
rclb
daa
push
imul
das
jnp
inc
stos
into
outsl
gs
xchg
jp
fnstenv
mov
insl
and
pop
pop
mov
rcrl
rorb
ret
pushl
leave
das
movsl
into
outsb
mov
insb
xchg
insb
pop
imul
push
repnz
btr
sbb
std
or
gs
insb
in
add
dec
dec
mov
lds
cmp
test
and
icebp
mov
lea
mov
inc
mov
out
inc
pop
sbb
ds
addb
lea
mov
scas
lods
cld
pop
add
int3
lds
jno
lds
sbb
pmuludq
push
into
mov
out
mov
jge
mov
or
daa
push
test
lret
pop
repz
lcall
lds
xchg
xlat
xchg
or
jle
rcrb
fcoms
shrb
fisubs
mov
push
sahf
dec
jno
adc
cmp
insl
je
cmp
loopne
lret
mov
cmp
inc
and
les
loop
ds
inc
sbb
sub
mov
jp
jno
test
out
scas
xor
xchg
sub
xchg
lcall
stos
dec
outsb
sbb
xchg
adcl
sahf
push
xchg
stos
hlt
hlt
cmp
call
fwait
rorb
xchg
in
push
fdivl
sbb
cmp
jg
aaa
sub
jp
cmp
push
es
ja
int3
and
sub
mov
cwtl
les
insb
mov
rclb
mov
pusha
cli
cmp
cwtl
sbb
dec
pushf
jle
aaa
mov
lahf
jnp
test
sub
stos
aas
dec
xor
xor
hlt
fwait
out
jmp
xor
arpl
xor
mov
sub
popf
test
bound
add
in
in
jmp
orb
jmp
mov
xchg
sbb
xchg
bound
mov
rcrl
insl
mov
sbb
mov
dec
jg
scas
xor
sub
lret
frstor
jae
push
xchg
in
rolb
aam
aad
movsl
test
bound
gs
or
stc
in
arpl
mov
fimuls
inc
and
mov
cltd
sbb
mov
add
jo
mov
jno
out
scas
fldt
fstpl
mov
xchg
cmp
ret
data16
jbe
xchg
outsl
aas
aaa
arpl
in
outsb
dec
out
rcr
mov
loopne
jae
sbb
adc
mov
test
jge
mov
lods
ret
mov
lock
jns
int3
ds
jecxz
sbb
loop
lds
test
xchg
js
jo
cmp
shrl
or
stos
lcall
xor
jae
leave
in
imul
js
repz
out
lods
add
fcomi
fs
fiadds
jb
add
push
popa
int
pop
mov
mov
xchg
inc
std
sub
adc
cmp
imul
sub
cmpsb
add
das
loopne
shlb
out
fadds
lret
in
leave
or
or
or
cmp
mov
sbb
sub
cmp
lcall
add
rcll
add
int
movsb
or
dec
cmpb
mov
xor
mov
rolb
pop
enter
into
or
mov
jmp
int
sarb
push
enter
jecxz
or
mov
push
fsubrs
push
bound
adc
jecxz
lods
xchg
xor
loop
bound
and
xchg
js
sub
aas
repnz
xchg
push
xchg
cmpsl
dec
repz
sbb
jno
cs
shrb
sti
shl
and
xor
mov
jbe
push
or
sub
fmulp
les
out
xchg
pop
or
outsl
popf
sbb
in
fistpl
shr
pusha
pop
bound
sub
ss
cmp
push
dec
cmp
mov
lock
imull
sbb
mov
push
adc
out
out
test
mov
bound
sbb
adc
xor
mov
sub
repnz
and
scas
lds
mov
mov
std
mov
loopne
pop
cs
jne
push
inc
fstpt
or
fdivrs
sbb
xchg
jle
mov
inc
push
xchg
or
or
lds
push
arpl
rcr
mov
lock
cmc
mov
daa
loope
test
adc
stos
push
aaa
mov
push
adc
fucom
sub
rcll
dec
mov
mov
sbb
and
int
or
lea
add
and
jbe
lds
mov
insl
test
imull
loopne
xchg
pop
loope
jp
jmp
push
dec
fwait
popf
fimull
movsl
sub
ds
ljmp
push
icebp
insb
xchg
push
dec
out
adc
imul
add
pusha
ficoms
pop
jbe
nopl
insl
fbstp
rcr
jo
push
push
int3
mov
cli
cmp
cmp
lret
adc
or
scas
popl
inc
aas
in
lds
jle
xchg
push
movsl
imul
scas
sahf
mov
mov
outsb
jg
mov
xor
inc
mov
lcall
fnsave
cmp
leave
cmpsb
fstl
adc
scas
dec
add
pop
and
insl
inc
adc
xor
and
xchg
scas
test
test
popa
sbb
xchg
gs
jge
xchg
jnp
les
out
out
xor
pop
test
std
cld
mov
xchg
sbb
xchg
mov
pop
rdmsr
div
sub
cmp
xor
mov
jl
and
movsl
inc
imul
ja
push
inc
and
lods
cmp
mov
or
data16
xchg
pop
lret
test
popf
push
movsl
mov
cli
cmc
js
lock
lret
fdivrs
cmp
xor
cmp
in
push
mov
or
aam
pop
dec
ret
fcmovb
adc
sarl
cwtl
push
into
dec
incl
dec
aad
pop
adc
call
sahf
cmp
test
js
add
icebp
and
rcr
fisttps
mov
or
imul
pop
jbe
sub
cmp
es
inc
ss
mov
xor
xchg
out
pusha
jl
jmp
cmpsl
mov
jmp
adc
pop
sub
jmp
popf
stc
inc
xchg
rcrb
retw
daa
pop
inc
jecxz
nop
push
mov
jns
movsb
dec
test
nop
push
fadds
ret
adc
xor
clc
aas
mov
cltd
sbb
or
inc
rorl
jmp
loope
das
dec
push
sbb
inc
push
xor
fsubp
aas
push
mov
arpl
adc
pop
rcl
cmp
fs
jno
dec
aaa
ret
jp
cmp
mov
dec
jmp
das
outsl
and
jbe
ds
and
out
out
sbb
cli
fucompp
dec
push
aaa
aas
or
test
mov
xchg
imul
nop
mov
mov
jmp
inc
out
push
imul
xor
shrb
stos
aas
mov
shll
pushf
inc
fiaddl
icebp
sbb
into
rclb
sahf
leave
cmpb
sub
out
xchg
add
icebp
lods
insl
push
jg
adc
mov
add
lock
movsl
repz
loope
lahf
loopne
bound
kxnorb
jne
mov
lcall
mov
loopne
jl
movsl
dec
or
adc
fsub
adc
in
mov
in
ljmp
pop
popa
out
sahf
adc
jl
push
fnstcw
nop
mov
out
ret
xchg
add
jno
ja
push
fcoms
sub
ficomps
andps
enter
roll
fimull
or
movsl
inc
mov
jmp
jnp
aas
aad
std
icebp
ret
cmp
icebp
and
pop
shr
icebp
jge
sub
pusha
push
push
loope
pop
inc
inc
sbb
jmp
jae
sti
mov
adc
add
mov
ret
mov
mov
push
sub
ja
popf
or
cmp
or
xchg
xchg
xchg
sub
bound
mov
fbld
or
aad
pop
in
adc
mov
dec
ret
mov
dec
push
pop
in
mov
mov
xchg
xchg
add
pop
adc
jae
mov
and
test
push
xchg
int3
jno
inc
sub
cmpb
mov
push
ret
movsl
push
xor
inc
push
xor
cmpsl
and
mov
inc
addr16
inc
mov
xchg
or
out
jns
pop
iret
out
push
cmp
xchg
jns
lret
movsb
icebp
ljmp
lcall
or
scas
pop
dec
sbb
pop
ficompl
ret
fs
mov
inc
lret
mov
inc
daa
xor
xor
jp
mov
inc
fistl
inc
mov
stc
fcoml
gs
mov
mov
jmp
outsl
pop
mov
push
pop
loope
mov
or
iret
pop
jb
rclb
pop
push
jbe
sahf
loopne
in
fcom
pop
adc
push
cwtl
or
mov
ret
movsl
icebp
leave
outsb
outsl
jne
sub
outsl
push
dec
adc
int3
inc
ds
rsm
mov
inc
cld
jecxz
or
mov
or
gs
pop
cld
js
cmc
or
cmp
inc
dec
cltd
jg
icebp
mov
or
faddl
fsubs
xchg
inc
mov
inc
inc
pop
clc
push
fildll
cmp
cmp
mov
or
dec
lcall
mov
xchg
andb
add
xor
add
add
cltd
repz
dec
cmp
xor
jne
jb
mov
mov
push
fdivrs
cmpsb
in
in
imul
outsb
mov
cltd
adc
pop
jno
pop
jle
cmp
jmp
jo
jge
sbb
and
scas
push
pop
xchg
xchg
add
or
mov
lods
cmp
repnz
and
adc
mov
mov
xchg
stos
pop
push
negb
insl
mov
adc
sub
xor
add
fst
stos
repz
sbb
or
cmp
scas
ljmp
xor
icebp
ficompl
mov
clc
sbb
mov
les
aas
scas
push
xchg
pop
cltd
pop
repnz
jno
xchg
cmp
ret
nop
fstl
rcl
inc
scas
xor
test
negl
push
icebp
lods
ss
scas
lods
mov
lods
ficompl
cmpsl
jecxz
mov
mov
mov
test
push
push
and
dec
sahf
leave
fwait
cli
cmp
sub
scas
cs
in
and
fsubs
xchg
mov
repnz
test
aam
pop
neg
and
mov
adc
gs
mov
jle
cmp
sbb
pop
and
fistpll
cli
inc
repz
push
and
mov
je
jo
lock
ds
add
cmp
sub
aaa
cmp
cs
loop
add
inc
cmp
bound
and
adc
xor
xchg
or
sub
inc
clc
loope
pop
pop
mov
pop
call
dec
push
test
add
popf
sbb
shrl
negb
leave
ss
pop
jb
dec
and
sbb
push
ficoml
mov
or
inc
icebp
icebp
out
push
fisubrs
imul
xchg
mov
mov
jg
fldt
lods
jo
mov
cmc
xchg
incb
jg
lret
adc
cld
scas
sub
js
mov
jl
cmp
dec
add
or
out
enter
mov
inc
push
aam
in
jne
jnp
fwait
or
jb
rcl
xor
xor
stos
leave
push
jecxz
aas
inc
shrb
sahf
add
jecxz
aaa
mov
ljmp
sbb
and
pop
jo
xor
iret
cwtl
jnp
popa
push
push
fnstcw
jp
shrl
mov
cwtl
lods
aad
negl
pop
sub
das
dec
aad
mov
or
das
popa
push
push
pop
or
nop
out
icebp
add
ds
cwtl
mov
push
inc
fisubrl
ret
jo
icebp
or
imul
dec
adc
in
je
jb
mov
addr16
out
and
cwtl
into
imul
xlat
aam
ja
jns
xor
mov
rcl
add
dec
aas
push
icebp
mov
hlt
xchg
cmc
mov
pusha
sti
or
sub
cmp
cmpsb
push
imul
inc
xor
add
mov
loop
lock
stc
cmpsl
sbb
mov
jmp
fwait
mov
jmp
jecxz
cmp
les
mov
ss
insl
mov
push
cltd
popa
cmp
adc
or
pop
leave
xor
inc
aas
cmp
sub
lret
fmuls
daa
pop
add
sbb
shl
aam
mov
xchg
gs
testl
pushf
add
pop
test
popf
cmc
xchg
inc
mov
mov
outsl
in
aas
popl
pop
jecxz
mov
xchg
xchg
js
mov
imul
jbe
aaa
and
add
rolb
test
mov
mov
sbb
les
adc
xlat
insl
mov
dec
outsb
aas
push
daa
push
je
jo
cmp
mov
sub
add
leave
xchg
or
and
sbb
cmp
add
fsts
not
das
jle
icebp
adc
shlb
push
cmc
adc
push
pop
xor
arpl
mov
push
fs
mov
and
popf
adc
int3
jo
jbe
jae
xor
xchg
inc
inc
pop
jp
mov
mov
dec
pop
movsb
or
dec
cmp
dec
pop
mov
into
int3
cwtl
fildl
lcall
xchg
mov
jae
lods
in
clc
popf
xor
cmpsb
or
mov
mov
push
mov
mov
rdpmc
inc
ret
imul
pushf
mov
sub
sti
in
cmp
fisubs
pmulhuw
aaa
shl
ljmp
cmp
dec
push
subb
xor
push
mov
testb
lds
xchg
leave
es
pop
jmp
fimuls
into
adc
fsubs
adc
fstps
dec
fs
mov
lods
lahf
dec
inc
lock
xchg
mov
mov
cmc
test
and
xlat
ss
jg
push
push
fucom
xchg
pushf
dec
fsubrs
mov
mov
outsl
cli
mov
sti
adc
mulb
sbb
jb
and
pop
and
jno
je
jmp
inc
rolb
in
fwait
inc
add
filds
jae
sub
bound
xor
into
arpl
in
imul
stc
inc
outsl
inc
jne
ljmp
test
push
movsb
int
add
fsts
rolb
popa
add
cmpsb
add
test
lods
dec
add
mov
sub
jg
sbb
xor
imul
push
stc
pop
jno
mov
jno
and
call
mov
mov
aas
sbb
jge
cmp
push
mov
test
mov
rcll
sub
clc
push
gs
fstp
sub
pop
inc
lret
stos
rcrb
cmpsb
pop
test
add
lcall
loope
cmc
pop
fnstenv
repz
push
mov
xor
out
lods
ljmp
lahf
xlat
or
aam
stos
popa
shll
or
xor
inc
cwtl
or
negb
cmp
sub
shr
jnp
and
push
incl
and
or
cmp
pop
jle
popf
push
mov
and
inc
xor
push
test
jno
lret
ret
mul
lcall
mov
lods
mov
test
divl
sbb
jl
pop
movsl
sub
call
or
aad
dec
call
cmp
int3
into
lret
dec
push
pushf
push
test
fsts
dec
in
cmp
add
add
pop
scas
push
add
in
loope
in
rcrl
xor
loope
cld
xor
cmpsb
mov
sbb
lea
fistpll
add
add
fisttpll
shr
mov
lcall
xchg
scas
jb
or
jg
push
jnp
mov
pop
ds
jne
div
pop
xchg
xor
mov
mov
repnz
popa
sbb
lret
fcoml
add
jbe
ljmp
pop
lahf
jnp
xor
jle
idivb
addr16
dec
cwtl
or
xor
and
notl
dec
jbe
push
je
call
mov
enter
shlb
addr16
inc
jns
in
dec
push
dec
inc
movsb
sbb
push
sarb
shll
insb
mov
das
iret
mov
sub
push
out
sbb
lahf
add
push
sbb
mov
fimuls
int3
push
or
iret
subb
sub
sbbb
adc
dec
pop
push
stos
xchg
clc
pop
stc
shrl
mov
lods
xchg
cmp
ret
xor
clc
test
in
and
pop
mov
pusha
mov
ret
adc
mov
or
loopne
sub
imul
sub
mov
cmp
push
jl
sti
inc
lcall
cmpsb
fchs
mov
sbb
inc
sub
push
sub
jb
iret
repnz
pop
ffreep
lock
mov
cmp
out
ljmp
sbb
in
push
mov
adc
fldl
mov
insb
and
fcomi
js
sbb
insl
in
mov
push
nop
repnz
in
leave
or
mov
push
loope
mov
out
js
sub
data16
subb
shll
ds
fnsave
xchg
fcmovnbe
sub
movsl
pop
cs
aas
inc
mov
add
xor
xchg
inc
xchg
or
dec
sbb
push
dec
inc
sti
movsb
addr16
xor
call
mov
shrb
dec
pop
inc
enter
daa
and
shlb
les
jbe
das
mov
cmpl
pushf
push
punpckldq
sar
pop
mov
inc
pop
inc
sub
jno
and
mov
mov
enter
imul
icebp
xchg
dec
jmp
jae
imul
pop
cmp
repnz
imul
pop
jae
sbb
xchg
xlat
jae
mov
icebp
cltd
jb
cmp
sub
xor
jmp
xchg
fistpll
insl
lret
mov
flds
or
jp
mov
cmp
cs
mov
lock
jecxz
or
mov
sub
test
pop
lods
fisubs
adc
or
in
fidivs
shlb
and
inc
sti
xchg
xchg
enter
push
jb
nop
imul
push
ja
cmp
aam
movsb
outsl
stc
imul
loopne
addb
xchg
adc
jbe
in
push
jno
mov
and
dec
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
jecxz
aad
mov
pop
jl
cmp
lcall
stos
push
dec
dec
int3
mov
mov
sub
mov
ss
or
inc
xchg
jne
add
daa
js
add
cmpsb
mov
sbb
push
push
adc
cltd
cmpsb
rolb
ret
push
setp
lods
into
int3
xchg
dec
sub
cmp
jecxz
idiv
mov
add
cmp
leave
sti
push
pop
mov
xor
sbb
sbb
aad
fs
jo
push
cmp
adc
into
or
dec
push
gs
mov
mov
fldl
les
jg
mov
ffree
mov
pop
jb
scas
test
pop
int3
in
mov
loopne
lret
cmp
mov
xchg
and
and
sub
xor
xchg
add
stos
pop
mov
les
push
adc
iret
sahf
sahf
sti
sub
out
or
js
sbb
rcrb
adc
arpl
cmp
inc
push
and
ret
addl
scas
add
xlat
mov
cld
jb
mov
push
lea
lea
stos
mov
outsb
psadbw
pop
jno
jb
inc
mov
mov
and
push
lea
add
cmpsb
pop
icebp
sub
push
call
dec
jbe
das
call
cs
mov
sub
sbb
xchg
mov
jb
xchg
inc
pop
jb
dec
sbb
iret
add
mov
popa
js
push
test
xchg
mov
or
out
add
push
cs
shlb
cwtl
test
or
adc
addr16
iret
subl
mov
push
rol
fiaddl
ret
rorl
int
ds
arpl
sub
push
sub
dec
xchg
scas
and
sub
aad
ss
mov
cmp
cli
or
hlt
fcmovb
sub
mov
lds
fisubs
popa
in
pop
mov
out
mov
pop
and
int
cmp
sub
lret
outsl
rclb
movsl
mov
inc
scas
stos
clc
xor
mov
popf
mov
jmp
sbb
mov
lds
repz
push
xchg
clc
imul
push
fld
inc
decb
inc
sbb
je
push
xor
outsb
shl
addb
loopne
out
scas
outsb
or
idiv
adcl
push
mov
jmp
and
je
ret
ficompl
aam
jge
fists
jnp
jg
push
jecxz
push
sbb
adc
loope
insb
in
add
sti
jo
add
xor
ds
cwtl
inc
fwait
mov
mov
pop
sbb
xor
sti
cmp
jg
fdivs
into
cmp
jge
mov
jae
xor
mov
mov
cmp
mov
mov
das
loope
push
cmp
pop
dec
mov
push
mov
out
ror
mov
push
or
fidivrs
sub
iret
dec
out
ds
pop
testb
push
mov
and
pop
mov
push
fwait
movsb
sub
bswap
xchg
pop
cmpsl
pop
das
scas
loope
jmp
clc
pop
cmp
inc
rorl
xchg
jl
cmpl
in
or
les
push
cmp
mov
sub
sub
in
mov
cmpl
dec
jecxz
or
test
out
dec
out
sub
xor
cld
jne
aam
jmp
sub
push
pop
and
rcrl
movsl
mul
mov
pop
iret
fidivs
popa
arpl
mov
aaa
mov
in
int3
xchg
clc
fdivr
or
rcrb
xchg
xor
sbb
js
xchg
in
lock
ljmp
loope
xorl
sti
mov
adc
mov
vpsubb
pop
push
or
sub
popf
push
fiadds
in
add
push
pop
dec
xchg
sub
xchg
stos
popf
inc
push
ss
das
push
cmp
cltd
mov
or
cmp
arpl
jns
lret
lock
and
push
scas
movb
call
clc
rcr
mov
xchg
dec
push
xchg
out
fsubl
in
mov
aaa
and
imulb
dec
fidivl
dec
pop
jbe
ficomps
cmp
xor
xchg
dec
adc
lahf
and
and
sbb
cmp
push
sbb
sbb
test
fimull
in
loopne
mov
lret
out
xor
dec
add
pusha
xchg
fwait
out
sub
pop
or
jl
mov
pusha
iret
adc
jg
pop
mov
mov
dec
sub
mov
jno
mov
fstpt
cmp
ss
in
punpckhdq
jg
or
fldl
cmp
xchg
mov
lret
mov
leave
f2xm1
movsl
mov
and
hlt
pop
sbb
fstps
inc
xorb
fistps
lods
test
into
lods
ret
mov
lret
loop
fidivl
mov
jecxz
jb
fdiv
pusha
fwait
mov
push
sub
les
pop
repz
push
mov
iret
and
adc
and
jnp
or
xchg
gs
comiss
xor
test
loope
shr
push
negl
data16
nop
or
pop
fs
sbb
dec
shlw
cmp
pop
and
js
out
jno
hlt
cmp
mov
adc
frstor
mov
mov
fldenv
fidivs
rcll
test
jb
or
mov
add
dec
xor
fcoms
add
mov
das
mov
orb
sbb
or
cmpsl
pushf
or
repnz
mov
push
loope
test
es
or
shlb
outsb
push
push
test
xchg
and
or
icebp
ret
dec
mov
jp
xchg
dec
sub
scas
xchg
mov
mov
sti
inc
test
dec
add
popa
popa
daa
dec
rcrb
sti
or
or
out
in
cmp
push
xchg
xchg
fisttps
fadds
mov
dec
lahf
inc
ret
jnp
test
jmp
xchg
inc
sti
fstl
dec
adc
adc
xor
das
push
mov
push
mov
rcrl
repnz
les
push
sbb
cld
ret
ds
je
mov
pop
mov
push
jno
fcmovb
icebp
repnz
mov
mov
jne
sub
outsb
jns
push
jbe
mov
jmp
std
sbb
or
or
pop
jb
repz
inc
jb
push
pop
clc
xchg
and
and
pop
push
xchg
dec
loop
adc
scas
jg
xor
nop
jnp
mov
cmp
push
xor
cmpsb
mov
mov
fldt
ret
add
push
sahf
fs
mov
cwtl
js
xchg
inc
sub
out
pop
dec
aas
pop
mov
aad
shll
aam
sahf
lock
decb
push
stos
jo
push
rcll
testl
test
test
arpl
cmp
dec
aaa
cmp
add
xorb
dec
dec
clc
pop
fisttpl
adc
addr16
mov
aad
xchg
scas
js
mull
out
xor
std
mov
and
push
daa
pop
sbb
or
jb
lock
push
inc
jp
adc
mov
xlat
mov
ljmpw
rorl
xchg
add
rol
mov
and
aaa
mov
out
mov
cli
pop
jns
mov
aam
out
xchg
mov
and
lods
mov
mov
enter
cmpb
pop
out
fpatan
dec
ret
out
je
xor
ja
pop
jno
popf
call
popa
mov
rcr
add
push
inc
xchg
push
sahf
push
fwait
pop
pop
mov
cmpsl
cmp
js
adc
imul
sbb
cmpsb
or
imul
mov
aam
icebp
aam
jmp
and
in
hlt
repnz
out
scas
ret
jmp
adc
mov
mov
popa
push
sti
push
inc
shlb
and
scas
mov
sub
mov
js
movsl
int3
jmp
jle
out
inc
in
inc
hlt
stos
or
mov
adc
outsb
push
ret
lahf
daa
in
bound
outsl
xlat
inc
mov
pop
shll
lods
jl
jo
aas
cmp
leave
jle
inc
jle
inc
mov
and
push
sub
loop
cmpl
xor
ds
and
lahf
movsb
inc
mov
sbb
dec
movsb
in
les
mov
push
pop
test
cwtl
xor
into
sub
dec
in
mov
neg
dec
mov
sbb
and
inc
adc
sbb
call
xchg
xor
and
pop
fisubs
inc
aad
adc
testl
out
dec
mov
mov
mov
outsl
pop
push
mov
xchg
and
cmc
xchg
sbb
in
sbb
push
cmpw
push
popa
adc
and
xchg
cmp
jb
fimuls
pop
movsb
add
dec
jae
adc
dec
sbb
fistps
cmp
out
outsl
in
out
dec
test
mov
pop
sbb
mov
ret
jl
mov
or
ds
cmp
cmp
mov
std
mov
aam
dec
inc
aam
icebp
ljmp
xor
xchg
sub
mov
decb
daa
loopne
push
push
cli
daa
jle
mov
enter
icebp
mov
jmp
add
test
js
or
adc
or
mov
mov
pop
sahf
test
xchg
and
jle
icebp
aam
push
adc
sub
dec
ficoml
xlat
cmp
lahf
mov
pop
xor
adc
xchg
call
sub
or
inc
popl
inc
mov
pop
xor
dec
in
adcl
mov
loope
mov
aas
popa
hlt
add
out
inc
mov
clc
adc
cmp
xor
sbb
stc
aaa
adc
pusha
mov
sub
dec
dec
xchg
sahf
mov
jmp
cmp
dec
js
and
push
and
sub
jg
insl
jns
bound
lcall
xchg
push
sub
add
mov
arpl
and
jo
inc
out
mov
rcrb
rorb
repz
mov
daa
xlat
std
jo
lret
mov
push
cmpsl
adc
adc
mov
and
in
fnstsw
jle
sbb
add
jns
cmp
fidivs
mulb
ret
inc
packsswb
cmpsl
rolb
repz
sub
xor
add
adcb
ds
int3
aaa
cltd
cmpsb
adc
into
and
or
sub
cmc
filds
outsb
shl
mov
sti
push
sub
pushf
xor
jne
jg
xchg
fs
jo
pusha
pop
sbb
jo
push
popf
scas
dec
mov
mov
js
push
push
gs
rclb
mov
or
cmp
or
xchg
leave
mov
push
xchg
lds
flds
add
daa
push
movsb
inc
int
scas
call
pusha
ret
shl
mov
mov
fcomps
call
outsl
push
fists
xchg
sarl
into
pop
push
dec
adc
clc
divl
cld
lock
push
hlt
mov
popf
xor
or
lds
inc
inc
inc
inc
dec
adc
jno
sub
fsub
dec
mov
adc
stos
xor
aad
das
mov
test
out
mov
ret
mov
push
jmp
xlat
call
pop
jl
sarb
aaa
adc
loope
stc
xchg
addl
xchg
cmpsl
inc
xchg
das
xchg
mov
or
scas
inc
and
cld
push
jg
adc
adc
sub
ds
mov
ss
push
daa
dec
inc
pop
and
adc
mov
test
push
cltd
add
xchg
lahf
jno
push
pushf
xor
ffreep
stos
lds
or
fcoml
jecxz
pop
es
mov
mov
out
adc
test
sub
mov
enter
inc
mov
or
inc
pushl
cmp
adc
pop
sbb
fnstcw
and
dec
mov
lahf
xchg
mov
movsl
and
in
xor
lock
adc
call
cmpsb
pushf
jo
inc
dec
and
loop
repz
rep
push
or
sbb
jmp
adc
push
push
pusha
pop
push
dec
inc
inc
pop
pop
inc
aas
jb
and
sub
test
dec
mov
scas
pushf
lret
repnz
flds
lods
xchg
push
int3
xchg
mov
mov
mov
mov
fsts
sti
cmp
arpl
cmpsb
arpl
lret
pop
ret
sub
aam
add
adcb
test
add
fwait
xor
testl
add
aad
cmc
inc
addb
das
scas
and
int3
adc
add
sbb
sub
std
mov
out
shl
in
push
mov
fcoms
les
jo
punpcklbw
pop
loope
mov
lret
icebp
cwtl
lods
pop
jns
dec
xchg
sub
inc
sti
xlat
test
push
aas
sti
data16
cld
jp
fcoms
mov
fdiv
andl
add
push
jbe
cmc
in
sub
jno
adc
cld
pushf
xchg
pop
xor
ds
or
std
aam
in
clc
pop
sbb
push
xchg
sub
or
jb
leave
test
mov
lret
fwait
push
mov
push
sbb
or
lret
insb
popa
mov
xor
push
stc
or
lret
sbb
mov
sbb
dec
pop
add
sbb
inc
cmpsl
fxch
insb
mov
or
sar
pop
mov
and
and
out
or
ror
mov
jecxz
clc
imul
sbb
std
repnz
inc
fcoms
sub
in
in
sub
xchg
ret
inc
push
cmpsb
xor
mov
enter
shr
mov
imulb
insb
lds
dec
mov
jle
or
or
jno
mov
lock
out
add
and
icebp
pop
push
sub
mul
icebp
mov
dec
and
xor
lahf
fisubl
mov
bound
pop
insl
cmp
sub
mov
clc
les
mov
dec
xchg
insb
adcb
inc
inc
pushf
adc
or
imul
or
aam
inc
cltd
cmp
push
cmp
out
xor
jbe
xor
shlb
fnstcw
xchg
adc
idiv
jle
add
dec
or
aaa
jle
add
mov
mov
mov
stos
out
or
push
xchg
cmp
mov
and
sbb
ret
sub
dec
stos
repz
shll
add
adc
jg
data16
sub
stos
jl
das
sub
cmp
lahf
pop
xor
out
sub
sub
repnz
pushl
push
dec
in
ret
adc
enter
outsb
sbb
pop
js
and
mov
push
xor
sbb
sub
ret
iret
insb
jns
inc
rolb
mov
leave
sti
jg
into
sub
sub
jg
cmpb
mov
cmpsw
pop
fxch
xorb
jge
push
mov
int3
je
mov
xchg
and
or
inc
pushf
pop
fdivrs
pop
scas
xchg
and
imul
adc
lret
pusha
dec
pop
stos
sarb
push
scas
loopne
sets
cwtl
push
divl
scas
sub
mov
fstp
adc
dec
cpuid
js
es
fcompl
hlt
pop
bound
call
addb
fyl2x
push
inc
mov
int
inc
ds
arpl
push
in
and
dec
test
enter
or
lods
sub
adc
sti
mov
xchg
loope
push
cmp
mov
lods
cmp
push
xorl
lea
int3
repz
fsts
xorb
stc
sbb
faddl
adc
or
mov
int3
fcomi
cmpsb
aad
xchg
pop
aas
gs
cmp
xor
jg
imul
jge
ffreep
or
xor
into
sbbl
xchg
dec
push
cmpl
xor
pop
mov
dec
subb
mov
xchg
bound
fcoms
mov
das
mov
test
mov
pop
or
mov
in
and
and
and
lods
inc
les
adc
or
ds
sbb
pusha
push
mov
xchg
xor
mov
data16
fsubrp
mov
or
int3
arpl
mov
adcl
outsl
aam
jp
aas
add
jge
push
adc
inc
movsb
push
cmp
insb
iret
insl
test
daa
jbe
cs
mov
push
les
push
cli
negl
fimuls
lret
adc
dec
xor
fcoms
pop
mov
mov
sub
out
shr
cmp
mov
jmp
cli
gs
pop
cwtl
inc
pop
jecxz
in
pop
cmpsl
xchg
sbb
pop
test
ret
repz
je
push
mov
movsb
mov
mov
sbb
inc
dec
or
mov
fidivl
int
dec
int3
adc
shll
sbb
add
outsl
push
lods
inc
out
push
xlat
cld
push
adc
pop
xor
sub
cmpsb
adc
jp
js
ss
pop
and
inc
dec
jmp
cmpsb
outsl
sub
leave
or
xor
outsb
xchg
mov
pusha
test
xor
rorb
lret
repnz
in
imul
std
lret
mov
loop
push
pop
pop
inc
nop
jb
cmp
andl
fmuls
hlt
std
mov
adc
movsl
and
xchg
in
and
cmp
jnp
sub
insl
pop
ret
ljmp
pop
cltd
call
xor
dec
xchg
out
lret
imul
mov
sbb
lods
push
insb
xchg
push
int3
sbb
adc
arpl
fists
cltd
add
or
imul
mov
xchg
in
fs
xor
push
push
imul
xchg
pavgb
jae
or
push
call
add
lret
ja
shrl
fcomp
push
daa
cmp
jg
mov
mov
ja
sbb
mov
out
adc
jb
and
test
adc
and
ds
andb
fwait
mov
stos
sub
ljmp
dec
ljmp
mov
sarb
inc
in
jns
insb
mov
add
icebp
push
aam
cmp
arpl
aaa
mov
insb
or
xchg
lea
aas
fwait
xor
jns
xor
lret
aaa
aad
shll
loop
jbe
in
sbb
xchg
imul
fcmovnb
inc
jns
mov
fwait
xor
jns
das
je
ljmp
xlat
adc
insb
inc
add
lret
iret
cmp
adc
je
xchg
jmp
adc
dec
jmp
push
popf
pop
mov
xorl
inc
mov
inc
stos
out
xchg
icebp
cmc
scas
pushl
jmp
or
idivb
cmpsl
or
iret
or
fiaddl
adc
pop
xor
cld
cmc
movsl
sub
rorl
pop
lods
test
or
aad
leave
js
sub
stc
sbb
daa
xchg
jno
cmc
popf
xchg
mov
test
negb
inc
dec
jae
nop
cmpsb
or
xchg
shr
sbb
dec
cmp
flds
repnz
shlb
pop
xchg
and
lahf
jne
fmull
shlb
ret
add
and
pop
sti
loopnew
cld
cmp
and
mov
jns
add
pop
incl
aaa
sbb
and
das
push
mov
adc
dec
insl
cmp
pop
inc
add
or
dec
addl
lods
xor
mov
leave
pop
mov
inc
pop
movsl
jae
jmp
cmp
or
cltd
dec
inc
mov
dec
in
xor
jae
bnd
sbb
mov
int
push
lret
loope
std
pop
imul
subl
enter
repnz
cltd
pop
lahf
lret
and
dec
inc
scas
in
cs
je
cmc
aaa
ficoms
cltd
or
push
fdiv
mov
jge
cmp
add
mov
dec
int3
cmp
jge
loopne
sbb
pop
and
aad
xchg
push
psraw
data16
inc
fisubs
or
mov
in
aad
pop
dec
push
hlt
in
or
mov
inc
and
ss
in
jno
xchg
mov
flds
push
push
sbb
and
repnz
mov
xor
jmp
jnp
outsl
dec
or
fiaddl
push
popf
mov
xor
imul
outsl
inc
sahf
jmp
inc
or
xchg
sbb
aaa
mov
daa
mov
lods
in
jmp
lods
lods
or
data16
outsl
scas
mov
sbb
sub
sub
push
fstl
pop
outsl
mov
imul
cmc
rcl
xchg
adc
xchg
pop
sub
pop
lea
and
stos
js
or
jno
and
dec
inc
nop
xchg
sub
mov
cltd
aam
cli
jno
dec
je
xchg
mov
sbb
repz
mov
aad
mov
cmpsl
cmp
xchg
jo
or
inc
stos
jnp
outsl
addr16
insl
loop
cld
fneni(8087
adc
std
ret
ss
ret
sub
scas
mov
push
push
out
mov
sbb
iret
test
adc
loope
xor
lock
pusha
pop
mov
pushl
es
lods
pop
lds
fldcw
jl
sub
xchg
inc
jbe
shrl
lret
cmp
lret
mov
jne
mov
sbb
xlat
jge
cmc
push
sarl
lods
jp
outsb
adc
mov
push
movsl
dec
cmpsb
mov
pop
pop
loope
xor
scas
xor
dec
sbb
cmp
mov
mov
cmp
sub
or
mov
jmp
movsl
js
sahf
je
cmpsb
push
cmp
mov
push
adc
cmp
mov
dec
rorb
out
pop
push
scas
push
aam
xor
sbb
and
loope
push
shl
out
cmp
pop
sbb
cli
mov
lods
cmp
push
fucom
gs
dec
lods
mov
push
jp
mov
jl
cmp
sbb
clc
addl
xor
add
push
inc
mov
jg
cmp
ja
int3
mov
mov
ss
fcmovnu
sar
mov
jb
aad
loopne
daa
mov
jb
sub
dec
xchg
nop
sbb
gs
mov
push
adc
int3
adc
and
icebp
and
mov
xchg
jbe
push
andl
imul
mov
ja
test
xor
mov
xchg
mov
test
push
cmp
sub
es
mov
jnp
jo
mov
pop
ffree
push
push
stos
xor
mov
outsb
inc
xlat
cmp
sbb
xchg
add
leave
pop
ljmp
pop
and
fs
pop
jb
inc
inc
adc
add
or
jmp
mov
cld
adc
push
ds
xchg
inc
cs
lret
xchg
or
shl
mov
inc
and
dec
and
in
sbb
add
shlb
dec
data16
in
dec
cmp
int
inc
push
out
jo
push
mov
xchg
das
es
sub
dec
dec
mov
and
aad
in
rcr
ret
fimull
pop
das
mov
popa
adc
rclb
add
cmp
mov
jp
push
mov
mov
stos
out
pop
sbb
xor
sub
pop
sub
arpl
fnstenv
into
mov
dec
mov
inc
cmp
mov
rorl
lcall
fbld
jp
in
mov
mov
scas
adc
jg
addr16
rorl
push
cmp
scas
cmp
xor
rcll
cmp
push
call
aaa
mov
mov
cmpsl
lea
add
scas
loopne
adc
pop
jnp
lea
jg
xor
fmuls
cmpsb
xchg
xchg
test
fsts
jno
dec
in
cmp
sub
xchg
loopne
enter
xchg
push
movsl
dec
xor
imulb
idivl
mov
js
adc
scas
icebp
lea
push
push
movsb
in
sub
into
push
and
push
incl
and
sub
jns
pop
int3
in
and
in
dec
pop
std
mov
rolb
into
hlt
or
pop
and
mov
stc
insb
xor
movsb
sub
ja
fnstcw
cmp
insl
int3
popa
fcomps
test
pop
mov
mov
dec
dec
pop
sub
jecxz
cmp
mov
loope
push
fnstsw
leave
in
shrb
inc
adc
cmp
scas
sub
in
ficoms
mulb
push
jno
cli
aad
mov
mov
flds
and
mov
cmp
scas
inc
out
pushf
into
movsl
clc
jbe
gs
cmp
int
mov
scas
popf
in
push
pop
leave
lea
pushf
dec
lock
ss
dec
cmc
mov
dec
ljmp
sbb
push
cmpb
ljmp
push
and
jnp
add
testl
pop
loopne
pop
test
ret
push
imul
jnp
push
les
cwtl
mov
lret
cmpsl
es
mov
lods
sar
dec
lods
cmp
adc
scas
xor
or
add
outsl
in
push
lret
inc
ret
jnp
push
jmp
sbb
jo
adc
mov
sbb
mov
pop
adc
pushl
nop
inc
xor
enter
inc
hlt
fdivl
subb
loope
in
cs
fwait
shrb
push
sbb
adc
stos
and
repnz
jecxz
rdpmc
jecxz
xchg
and
xchg
xlat
pusha
pop
orb
stos
jg
or
mov
inc
push
mov
jmp
ljmp
cltd
push
mov
xchg
inc
lret
icebp
test
sahf
jmp
inc
in
ret
mov
loope
int3
insb
out
jle
add
pop
add
xchg
pop
lods
push
sar
mov
inc
push
adc
pop
cltd
or
or
clc
lds
mov
loopne
push
push
jne
mov
pop
pop
xchg
sbb
imul
insl
cwtl
data16
pop
push
cmp
mov
push
mov
sub
addl
movsl
mov
in
or
or
add
push
pop
aaa
mov
and
fsubrs
pop
mov
aaa
xchg
ja
pop
dec
jae
into
cld
mov
les
js
scas
es
inc
mov
adc
out
leave
inc
ljmp
xchg
fwait
std
cmp
std
sbb
test
lods
add
ret
ds
fnstcw
insl
xor
xor
hlt
aad
adc
push
cmc
fmull
fisubl
and
add
push
push
add
xchg
jno
aas
or
fwait
add
out
ss
ret
in
xor
pop
stc
push
add
es
ds
jl
jmp
cmp
daa
fcomps
mov
cmp
in
mov
ret
iret
test
add
mov
popa
hlt
push
mov
lcall
bound
das
dec
lods
lahf
les
int
cmp
movl
cmp
lahf
negl
adc
std
out
add
push
or
mov
dec
cmc
rol
mov
sub
xchg
sub
mov
dec
xchg
pop
icebp
pop
mov
fisttps
mov
insb
sbb
push
xor
sahf
das
clc
pop
hlt
pop
xchg
mov
ret
aam
mov
rorb
push
push
lret
mov
lods
dec
pop
jnp
sbb
in
sbb
sbb
ljmp
mov
es
aas
sbb
test
inc
dec
fisubrl
jl
es
cld
fbld
sbb
pop
add
incl
incb
sbb
push
out
xlat
adc
repz
int
mov
adcl
push
fisubrl
lret
and
rcrb
leave
cltd
iret
inc
xor
movsl
scas
aam
cmpsb
fwait
daa
fs
fldl
fwait
xor
and
clc
mov
mov
dec
jge
imul
dec
add
stos
cld
cmp
mov
fsubrs
dec
jp
and
in
xchg
mov
xchg
loope
adc
mov
sbb
add
cmp
mov
sbb
sarb
scas
jns
and
mov
andl
add
mov
clc
fistpll
push
insb
loope
mov
stos
mov
jb
inc
inc
cmpl
sub
pusha
in
adc
xor
mov
mov
in
es
sbb
pusha
push
dec
jns
mov
jae
xchg
mov
stc
push
xlat
out
cld
pusha
adc
cmc
xchg
push
pop
inc
scas
sub
fistpl
shll
xor
pusha
mov
pop
add
push
fisttps
filds
xchg
xchg
shr
sarl
pushf
sbb
add
lods
stos
adc
stc
rcrl
pop
int
and
cmp
into
loope
mov
sbbb
xchg
iret
adc
jbe
add
adcb
fbld
out
iret
int3
loopne
and
or
pushf
add
cld
dec
sbb
in
mov
shrb
adc
mov
jge
pop
dec
stos
push
ret
or
in
enter
inc
xchg
stos
mov
lods
mov
push
pop
mov
fsubrs
push
mov
out
xchg
dec
pop
je
in
pop
adcl
or
fdivr
vpackssdw
mov
sbbl
adc
push
fdiv
lods
rolb
pop
bound
jp
sbb
mov
jmp
repnz
out
ljmp
and
test
cmp
add
pop
and
aad
jg
sbb
popaw
mov
adc
add
dec
mov
jl
mov
das
mov
cmpsl
dec
or
sub
fldt
out
lret
ja
mov
xchg
lea
mov
xor
lcall
sbbb
icebp
test
fcmovb
negb
cmp
xor
mov
mov
or
xchg
data16
pop
ret
mov
push
mov
adc
jle
push
and
pop
int
pop
out
mov
add
xchg
dec
inc
fists
lds
xor
in
mov
push
fcomps
fists
jp
insb
or
xchg
mov
int
movsl
loopne
mov
test
push
rcr
movsb
cmp
push
push
cmp
or
mov
jo
dec
mov
mov
sub
data16
or
inc
imul
ficomps
inc
cmpsl
mov
or
push
push
and
test
add
and
pop
lret
cmpsl
test
pop
test
leave
push
pop
and
mov
mov
loop
cmp
js
or
dec
push
jmp
inc
dec
jne
xchg
inc
les
or
xor
mov
in
or
insl
lcall
mov
mov
xchg
test
adc
jecxz
pushf
mov
lcall
movsb
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
pop
add
outsl
adc
sbb
push
jns
fbstp
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
sbb
das
addr16
outsl
test
test
std
jmp
test
cld
ret
pushf
and
nop
adc
lock
enter
xchg
mov
add
std
leave
jno
ja
in
mov
xor
add
sub
mulb
fisubrl
jge
aaa
test
push
lret
xchg
repnz
sar
push
xchg
stos
mov
call
stos
mov
and
clc
iret
addb
imul
cli
or
fstps
nopl
pop
xchg
mov
mov
popa
add
mov
je
or
popf
test
mov
outsl
lcall
xor
pushf
mov
pushf
jb
repnz
daa
jnp,pn
iret
mov
sub
fsubr
cmp
movsl
add
js
pop
subb
ja
out
mov
int
push
and
imul
or
pop
ds
xchg
xor
sti
mov
dec
mov
lods
pop
push
adc
xchg
mov
cld
sahf
je
hlt
adc
nop
dec
iret
sbb
cmc
fidivrs
mov
and
clc
mov
push
ss
popa
and
outsl
dec
ldmxcsr
mov
push
pop
sbb
inc
mull
add
jmp
movsb
out
subb
pop
lock
loop
addr16
inc
jbe
into
pause
loopne
aam
lods
jno
mov
xchg
pop
push
fimuls
das
mov
add
pop
add
mov
je
adc
add
add
popa
js
mov
lahf
pop
xchg
enter
jmp
leave
lds
mov
idivl
daa
dec
or
mov
lcall
xchg
pop
ja
jns
cmp
iret
cmp
cmp
scas
xor
out
sub
and
cltd
add
xchg
int
dec
fisubrs
in
mov
fs
ljmp
sbb
leave
mov
jb
and
adc
jg
int3
jl
out
fs
xchg
stc
rolb
xlat
push
or
pop
out
push
and
outsl
ret
fwait
add
inc
add
lods
fsubp
out
pop
cmpsb
add
das
ja
xlat
lcall
mov
sbb
fisubs
mov
stos
jle
loope
js
and
push
cmp
insl
lds
in
inc
cmp
aaa
hlt
jae
lods
ret
loop
jmp
data16
sbb
xchg
dec
jno
loopne
outsl
insl
repz
cmp
push
mov
jns
dec
lock
mov
ja
mov
mov
and
fldenv
pop
es
sbb
das
loop
adc
lock
jmp
add
stc
sub
in
in
lods
xchg
roll
mov
xor
jl
dec
jne
aam
mov
jle
dec
lock
cmc
scas
xlat
std
jle
fsincos
push
test
ficomps
dec
movb
jl
jno
xchg
add
mov
pop
add
cmp
ja
mov
fnstcw
cld
ret
and
movsl
pop
clc
jne
cmp
inc
jb
inc
data16
mov
inc
hlt
pop
in
pop
int
cs
in
and
insl
xor
imul
fcomps
push
cmpsl
fsubrp
cmp
mov
mov
addb
add
add
jmp
or
xchg
icebp
xlat
xor
and
add
cs
mov
rcr
xchg
clc
sti
add
in
push
xchg
adc
pusha
pop
xor
cmpsl
mov
popa
or
xor
ret
popa
fiadds
jne
cmp
push
and
sub
andb
das
iret
daa
pusha
xlat
and
dec
fs
mov
add
lahf
sahf
and
ret
jns
stos
sbb
ret
push
rcll
or
arpl
mulps
push
and
xchg
insb
ja
sbb
lret
shll
add
ret
shll
add
bound
ret
xchg
push
cltd
sbb
jnp
lret
push
push
jmp
jmp
pop
sub
jnp
dec
mov
xchg
lods
xor
xchg
push
xor
and
ror
jb
cmc
loop
rclb
lods
and
sbb
leave
mov
push
xchg
idivb
pusha
fimuls
data16
scas
add
inc
aas
shll
pop
stc
push
addb
daa
mov
push
mov
push
mov
mov
nop
xor
movsb
rcrb
movsb
add
jo
aas
hlt
mov
xchg
xchg
lock
into
fimuls
in
mov
or
popa
mov
imul
mulb
push
push
rcrl
repz
int3
rclb
mov
rclb
pop
xchg
fdivrs
arpl
in
dec
pushf
out
xchg
mov
lret
ror
repnz
lret
sub
aad
inc
fnop
sbb
jnp
call
mov
or
fs
mov
mov
dec
icebp
push
adc
inc
scas
in
jecxz
loopne
lods
add
enter
pop
stos
cltd
xor
fwait
call
mov
push
jecxz
mov
and
aam
rcr
scas
xchg
in
lds
jae
mov
jmp
jp
addb
out
jnp
and
ret
push
mov
hlt
mov
pusha
adc
dec
imul
or
pop
mov
mov
out
sbb
pop
repz
xor
push
inc
sub
jno
dec
lock
aaa
inc
mov
xor
mov
mov
test
xchg
out
and
xchg
outsl
sbb
shlb
mov
roll
test
ja
jl
fbstp
push
push
push
hlt
mov
dec
inc
pusha
shrb
lds
sbb
dec
out
testl
add
dec
insl
cmp
push
push
lcall
inc
bnd
mov
mov
mov
mov
dec
inc
subl
sbb
mov
jge
push
bound
cwtl
xchg
shl
enter
popf
jge
loopne
push
rcl
jb
fdivs
mov
ficompl
mov
sahf
mov
out
rclb
mov
inc
jae
push
cltd
imul
adc
pushl
cld
cmp
and
dec
repnz
lret
pushf
ljmp
movsb
xchg
inc
xchg
adc
cmp
int3
loope
xor
push
scas
xchg
fisubrl
jge
sbb
fidivs
or
out
mov
call
jbe
stc
mov
cltd
mov
dec
pop
out
pop
mov
sbb
or
pushf
enter
pop
sub
in
leave
ja
repz
or
enter
pop
sahf
inc
jbe
add
mov
or
lcall
and
add
fmul
loop
fidivs
sbb
stos
pop
sahf
pop
out
jl
pop
push
and
movsl
adc
shrl
notb
pop
pop
sbb
stc
mov
mov
mov
aad
mov
cmp
jp
cli
stos
lock
test
insb
test
xchg
out
xchg
loopne
rcll
test
or
sbb
call
push
cltd
lret
in
and
orl
dec
xchg
shrl
mov
and
imul
outsl
mov
mov
xchg
inc
jle
idiv
push
mov
inc
in
imul
adc
mov
in
mov
mov
jbe
dec
aas
xor
jecxz
jg
pop
inc
add
aam
xchg
lcall
cmpsb
cmp
jg
cmp
push
imul
mov
sub
inc
gs
in
jnp
dec
pop
push
cld
push
xorb
adc
nop
fidivrs
subl
fistps
and
pushf
in
mov
pop
pusha
cmp
xchg
jnp
jg
pop
cmp
push
mov
loopne
lods
mov
imul
pop
ret
std
aas
dec
inc
and
popf
sbb
mov
mov
fs
cwtl
lret
lret
mov
xor
mov
mov
daa
ret
xchg
sbb
movsl
mov
push
inc
ss
loope
jo
and
sub
dec
sub
and
cwtl
into
hlt
pusha
insb
dec
cmc
pop
jge
dec
test
jnp
inc
pop
mov
movsb
insl
dec
movsb
mov
pop
push
fildll
cmp
inc
js
push
inc
dec
cmp
arpl
pop
arpl
int3
add
mov
fcomps
andl
mov
stos
fwait
cltd
fisubl
imul
push
ret
in
dec
popf
das
jmp
jbe,pn
xchg
fnstenv
fwait
jg
outsl
inc
loopne
andb
call
inc
insb
lret
or
xor
jg
in
push
in
mov
sub
lret
hlt
push
iret
cmp
push
movb
xchg
insb
cmp
adc
dec
pop
dec
es
mov
stos
fists
xorl
fldl2e
pushf
call
sub
jae
mov
rcrl
cmpsl
fwait
mov
push
fistpl
jle
ljmp
push
fisubrs
mov
sub
int
cmp
xor
test
add
mov
icebp
dec
clc
mov
xor
cmp
cli
repz
jge
in
test
ljmp
repnz
push
mov
mov
ljmp
jnp
je
jg
push
movsb
pop
in
dec
cmp
and
iret
mov
inc
jecxz
pushf
mov
divl
divl
das
add
mulb
scas
xor
scas
mov
cmc
pop
add
aam
out
subb
cmp
cmp
rol
mov
inc
dec
mov
test
pop
jl
lcall
inc
push
div
scas
sbb
into
mov
fwait
or
push
dec
add
push
jp
mov
scas
repz
outsb
pop
dec
add
leave
push
pop
inc
xchg
in
push
adc
lods
stos
test
stos
fwait
aas
push
sub
stc
mov
inc
mov
pop
cmp
idivl
add
gs
popf
jg
mov
dec
sahf
push
add
data16
add
stos
add
add
cwtl
enter
pop
ret
es
repnz
pop
ljmp
dec
and
aas
je
jle
pushf
fidivrl
push
aaa
sub
aaa
lods
jge
out
add
sub
mov
sti
sbb
xor
dec
dec
or
jbe
int3
dec
cmp
jns
jnp
fldl
mov
sub
rolb
and
lock
inc
dec
pushf
negb
xchg
movsb
in
js
scas
dec
std
sbb
dec
icebp
adc
inc
das
sbb
aas
mov
lret
loopne
aas
pop
or
mov
xor
dec
sub
mov
daa
shll
xlat
in
loope
and
incb
sub
stc
dec
aam
pop
push
pop
lahf
sahf
loope
jo
jne
mov
hlt
stc
lds
loope
pop
lds
push
clc
bound
push
xor
pop
sub
mov
das
xor
fistpll
jg
mov
jg
shll
lea
xchg
push
aam
mov
sbb
leave
divb
xchg
lahf
push
sbb
mov
xchg
pop
inc
loop
pop
cltd
in
sbb
mov
sbb
nopl
ja
iret
inc
inc
popa
inc
sbb
mov
push
int3
les
fstpt
fsubl
cltd
add
dec
push
cmovle
adcb
jg
and
movsb
mov
addr16
push
test
jnp
daa
imul
cmc
xchg
mov
insb
adc
addr16
cmp
add
and
jp
inc
push
lret
cmpsl
imul
fiaddl
dec
aad
push
fnsave
cmp
in
aam
lea
icebp
jge
fcoml
adc
ljmp
insb
sahf
in
ret
inc
mov
dec
cmp
xchg
cwtl
dec
or
int3
pop
jne
add
jo
xlat
xchg
ljmp
mov
lret
loopne
mov
fildl
movsl
pushf
jge
pop
xor
mov
or
ljmp
push
repnz
sbb
cmc
lahf
stc
leave
test
xor
sbb
add
add
pop
bound
or
repz
shl
mov
push
js
std
ds
inc
es
je
outsl
mov
ds
adc
jo
cmp
ja
cmp
hlt
je
jno
pop
mov
xor
xlat
into
xorb
adcl
dec
or
jmp
bound
sbb
arpl
cmp
inc
mov
pop
add
sar
or
xchg
inc
insb
push
lds
mov
or
sub
jno
or
push
es
jle
jno
hlt
ljmp
dec
leave
adc
push
sbb
jno
stos
sub
mov
adc
ret
sbb
fldcw
lods
hlt
fistpl
lds
in
scas
into
dec
pop
ret
out
fcmovnu
xchg
pop
and
adc
mov
push
dec
or
add
icebp
out
rcll
fwait
pop
cmpsl
mov
cltd
sbb
movsl
mov
iret
pop
adc
sbb
mov
cmpsb
fwait
loope
popf
sti
jp
cwtl
negb
ret
faddp
sub
ljmp
std
jne
in
mov
flds
loop
lret
push
add
testl
ljmp
sub
loop
jg
xlat
not
out
sub
pop
sbbb
dec
imul
sub
add
repnz
std
outsl
pusha
adc
in
sbb
fisubs
lods
jnp
push
jno
push
sar
cmpsl
xchg
push
dec
xchg
test
cmp
mov
fcompl
pop
lahf
or
outsb
int
cmp
add
mov
mov
cmp
inc
inc
sbb
xorl
in
lret
test
div
cs
pop
clc
pushf
out
cmp
fldl
mov
xchg
lret
fxch
ret
icebp
aam
rcr
or
call
sbb
in
pop
mov
fwait
sub
sub
and
sub
fistps
dec
imul
movsb
or
test
sub
in
gs
cmp
push
mov
jae
sub
shrb
mov
sbb
lcall
and
in
into
scas
mov
shlb
test
popf
adc
sti
stos
sbbb
shr
sbb
iret
add
jl
rolb
mov
add
shl
je
fldcw
enter
cmc
mov
lock
stos
adc
ljmp
out
loop
stc
rclb
mov
punpckhwd
fists
sub
jbe
and
stc
loop
mov
sbb
jge
jle
stc
cld
or
fcoml
mov
cld
xor
fldcw
adc
jecxz
ds
xchg
loopne
cmc
adc
and
push
addr16
shrl
push
sbb
adc
and
cmp
sub
lcall
mov
nop
mov
inc
icebp
ret
mov
cmp
sub
popl
xor
or
sahf
stos
test
adc
flds
xorb
mov
jge
imul
adc
rclb
repnz
daa
cli
out
pop
dec
pop
fmul
lret
cmp
movsb
mov
mov
out
scas
cmp
push
cmp
mov
daa
mov
jmp
test
jnp
pop
ljmp
adc
push
push
insl
insl
ss
mov
addr16
pop
into
push
add
cmpsl
stos
lahf
aaa
lods
sbb
ljmp
fidivrs
push
fildl
xor
push
scas
add
jno
push
inc
gs
jns
pop
add
cli
arpl
sbb
sbb
test
xor
adc
pop
aad
cmp
pushf
out
push
out
aas
dec
mov
test
aad
push
xchg
adc
popf
cwtl
out
shl
and
jno
ror
and
test
es
sub
mov
std
clc
ds
xchg
adc
and
or
and
daa
loopne
popa
mov
sub
sbb
pop
adc
pop
daa
fiaddl
push
loop
cmp
inc
jg
movl
jecxz
mov
dec
sub
pop
popa
or
test
push
xlat
insl
fcoms
dec
lret
outsl
movsl
cmpl
cmpsb
pop
cmpsb
aas
push
jae
cltd
or
std
in
subb
mov
jmp
es
insl
xchg
xlat
les
xor
pop
fcoml
push
lods
pop
cmpsb
ljmp
out
inc
iret
mov
fsubrs
pop
xchg
lods
cmp
jg
pop
xchg
inc
add
scas
mov
fdivs
std
movl
jecxz
nop
rcrb
dec
shr
jmp
add
stos
add
add
lods
cmp
or
mov
and
and
fildll
bound
push
out
inc
pop
rorb
ret
dec
repz
or
add
ret
rcll
mov
jge
jp
sbb
xor
or
inc
sbb
jp
xor
int3
nop
jp
nop
sub
shlb
cmp
and
or
mov
sti
loope
mov
ret
xchg
cmp
push
popa
jp
aam
mov
aad
lea
mov
xor
flds
add
cltd
loop
add
cli
es
repz
push
arpl
sbb
mov
movsb
test
sbb
pop
shr
iret
sbb
enter
mov
cld
dec
and
arpl
iret
cli
sub
jl
js
test
jns
jmp
outsl
aas
ds
adc
xor
dec
outsb
mov
pop
int3
and
adc
leave
cs
cli
jo
popf
rcrb
sarb
adc
dec
or
and
pop
ret
dec
cmp
xor
jecxz
lock
jo
dec
fmul
loope
repz
popa
cmpsb
mov
ret
pop
out
cmpsl
lahf
mov
outsb
adc
das
jl
jae
sub
inc
into
pop
mov
lods
fistps
push
cld
xor
std
repnz
jl
jg
in
adc
push
fldl
and
mov
int
ljmp
pop
dec
jo
xchg
imul
insl
mov
insb
sahf
imul
jo
rcll
mov
inc
call
fcmovnb
data16
push
fdiv
dec
mov
mov
mov
sub
cmp
outsb
inc
add
aad
xlat
jg
gs
jl
ret
mov
jle
dec
adc
ficompl
stc
mov
addl
nop
add
and
dec
cmp
mov
ja
inc
aas
lret
pop
cmp
sub
xlat
mov
out
addr16
rclb
shlb
push
or
add
insl
cmpsl
pop
testl
pop
sub
jno
jmp
rorl
stos
sbb
inc
dec
fs
or
mov
scas
dec
inc
cmpsb
shll
test
cli
leave
or
out
adc
test
sbb
inc
repnz
and
test
or
inc
subl
das
fstpt
clc
pusha
std
lret
aaa
pop
aaa
xor
mov
mov
inc
pop
and
jge
dec
es
dec
lds
mov
jl
add
prefetch
xchg
mov
mov
outsb
shll
into
cmp
les
add
jecxz
test
sbb
jecxz
dec
pop
loop
out
pop
inc
and
dec
pop
sub
xchg
lds
rcr
lahf
xor
loope
and
movsl
clc
jns
push
aaa
push
push
mov
dec
dec
fiadds
fsubrs
clc
aad
lods
mov
mov
fisttpll
sarb
sub
mov
lret
xor
das
dec
and
cmpsl
push
dec
icebp
imul
jmp
sbb
and
jo
lods
push
jl
add
xor
lahf
sbb
movsb
mov
cld
or
mov
dec
lea
out
test
scas
xor
add
data16
lods
cld
mov
hlt
xor
xor
add
pushf
inc
setp
hlt
cli
lods
or
orb
inc
mov
mov
pop
cmpsb
filds
jnp
roll
sub
sahf
inc
cmp
cs
add
fldcw
or
inc
xchg
push
jecxz
popf
pusha
test
xorl
out
shrb
jmp
out
jne
mov
mov
notb
lods
sbb
adc
ja
in
add
adc
xor
dec
mov
je
xor
push
add
or
pop
jns
popa
and
inc
pop
mov
mov
sbb
stos
xchg
inc
enter
pusha
sahf
mov
xor
shlb
xor
rcll
mov
push
out
push
mov
inc
cmpsl
sbb
sub
add
cld
mov
push
sbb
insb
add
imulb
test
cmpsl
cltd
cmp
add
ds
cli
and
cli
dec
in
jp
dec
jmp
mov
mov
sbb
in
sub
test
mov
xor
loop
jl
adc
adc
xor
mov
lea
adcl
cmc
sbb
or
xchg
fwait
ljmp
inc
insb
repnz
cltd
jp
into
xchg
je
cmc
jg
loop
jg
aad
aam
stc
dec
sbb
add
lahf
lahf
push
inc
test
stos
push
test
int3
mov
jge
rclb
insl
inc
mov
and
fwait
or
xchg
xor
rolb
in
cmp
pop
scas
push
inc
fs
mov
push
jno
sbb
pop
out
int3
xor
arpl
sbb
icebp
sbbb
jo
loope
mov
dec
shll
fnstsw
cmpsb
ret
add
mov
xchg
jmp
nop
sub
ja
push
mov
nop
sbb
pop
iret
mov
and
or
mov
push
xchg
push
movsb
lea
call
mov
sbb
sbb
int3
ljmp
adc
fnstcw
and
xor
dec
jecxz
les
cmp
pop
jle
jle
adc
ss
loopne
icebp
test
inc
lea
xor
pop
repz
pop
test
jp
cmp
jl
outsb
sbb
pop
xor
xchg
mov
adc
and
aad
xor
jle
rcrl
cs
mov
inc
leave
inc
movsl
pusha
xchg
cmp
xor
xchg
dec
mov
inc
fadd
arpl
mov
testb
fcomip
jg
hlt
imulb
sbb
cmpsl
sbb
push
sub
xor
sbb
icebp
out
push
adc
or
daa
mov
push
imul
push
jge
inc
repz
cmp
scas
rcll
or
adc
fcmovu
jp
pop
add
and
icebp
movsl
popf
inc
jb
adc
pop
push
sub
pusha
pop
jns
inc
mov
jo
jnp
jb
cmc
ret
fs
lea
in
movsb
or
adc
in
les
xchg
mov
cmpsb
push
dec
ja
sbb
jl
in
mov
cmc
and
and
rol
push
clc
jnp
inc
lret
jl
icebp
cmpsl
dec
sbb
imul
xor
adc
neg
jmp
cli
and
xor
add
stos
add
add
mov
into
lods
daa
xlat
mov
rclb
adc
push
adc
mov
lods
lods
fldenv
jae
xchg
lods
repnz
les
cmpsb
inc
push
adc
jb
scas
dec
lret
les
fldl
pushf
mov
jp
das
minps
sti
shl
inc
mov
dec
and
popa
out
pop
or
xor
sbb
es
dec
sahf
push
sar
mov
stc
push
cmp
pop
imull
and
mov
fs
push
mov
scas
ja
mov
mov
outsl
test
xchg
icebp
mov
mov
mov
lods
cwtl
aaa
xor
hlt
rcrl
pop
xor
cmp
mov
adcb
dec
sahf
inc
mov
push
clc
cmp
jge
inc
iretw
out
int
aas
repnz
hlt
jmp
and
mov
sbb
call
push
add
adc
add
push
jns
repnz
xor
and
inc
mov
jo
jecxz
in
xchg
lods
add
sub
inc
pop
loop
add
mov
in
push
pop
jmp
sti
pop
test
repz
call
in
sub
es
inc
ret
iret
sub
in
pop
xor
js
test
jg
adc
inc
cmp
test
ret
data16
fcmovnbe
push
out
push
lret
mov
xchg
lcall
pop
insl
in
pop
sahf
adc
xor
inc
sub
jno
rolb
mov
ja
push
sti
jp
pop
das
cmpsl
loopne
lods
push
mov
pop
cmpsb
cwtl
lret
lock
adc
sub
mov
add
bound
mov
popa
add
inc
push
icebp
add
lods
rol
divl
movsb
lret
dec
cltd
adc
pop
outsl
and
ja
lock
clc
mov
dec
adc
ja
out
adc
jp
add
and
lods
repnz
inc
out
fidivl
add
dec
mov
roll
mov
lock
push
dec
mov
movsb
pop
mov
call
mov
jmp
jbe
inc
lods
push
mov
mov
mov
sbb
shll
fidivl
add
pop
sbb
popa
scas
popf
insl
or
nop
pop
dec
inc
aad
lcall
clc
xlat
pop
aam
pop
or
cmpsb
push
neg
add
lock
mov
mov
xor
cmc
pushf
pop
jnp
ficoml
adcl
mov
ficomps
into
cmpsl
imul
nop
jmp
mov
cmp
sub
les
aaa
xor
cmp
mov
lret
out
ja
fld
mov
ret
negb
mov
popf
scas
sub
jno
jg
sbbb
aaa
jno
mov
add
and
jno
xchg
and
cwtl
lret
fdivs
sbb
test
dec
and
shrb
push
int
stc
sub
push
dec
and
jne
sti
test
ja
popa
rcl
xchg
outsb
adc
inc
leave
xor
push
xlat
adc
push
pop
push
out
loopne
movsb
int3
xor
inc
enter
inc
pushf
enter
lcall
and
xchg
stc
xor
aas
jecxz
jb
or
lods
js
mov
popa
jno
push
push
cli
cli
inc
iret
popa
push
sbb
push
es
pop
imul
data16
push
fdivs
fistl
gs
and
add
mov
and
jmp
ret
into
mov
add
add
cli
ret
movsb
mov
xchg
pop
ja
xchg
loopne
cmp
or
push
mov
push
loopne
out
jno
jmp
push
test
aas
adc
gs
mov
mov
ret
and
jmp
sub
je
pop
and
repz
cmp
outsb
ret
ret
jmp
ljmp
mov
jl
fsubrs
push
push
sahf
push
pop
jge
inc
push
pop
xchg
mov
aad
addl
xchg
enter
icebp
and
add
mov
pop
and
dec
mov
mov
jno
mov
jo
and
in
popf
movsl
mulb
xchg
mov
add
mov
daa
arpl
sbb
outsb
cmpl
jo
lret
icebp
xorl
and
jecxz
pop
rcrl
movsb
sub
repnz
fwait
inc
adc
sti
push
or
mov
sub
dec
mov
cmpsl
xor
insb
popf
dec
shlb
or
lods
or
add
loope
inc
adc
cwtl
lods
jo
xchg
xchg
addr16
cmpsb
and
push
push
xchg
imul
cmp
pop
icebp
js
or
cli
outsb
mov
xchg
in
cwtl
inc
das
lahf
repz
cmpb
aas
mov
lds
arpl
cmp
aad
test
shlb
mov
cmp
cmc
sahf
ljmp
rclb
push
imul
sbb
clc
and
adc
inc
rcll
stos
mov
dec
jbe
pop
mov
popa
pushf
iret
arpl
pop
push
aam
cli
or
lret
pop
cs
int3
xor
xchg
ficoml
cwtl
fs
inc
lods
in
push
mov
sbb
movsl
fdivrp
and
xchg
cmp
iret
mov
cmp
in
mov
push
rolb
ret
adc
mov
mov
dec
inc
rcr
das
lahf
or
cmpl
stos
or
dec
sub
andl
xchg
mov
add
push
call
sub
or
xchg
mov
xor
add
mov
mov
jns
mov
cmp
mov
inc
jae
ret
fucomi
dec
inc
popf
fidivrl
xchg
pop
cmp
inc
and
stos
or
cmp
sti
jp
addr16
sbb
inc
inc
inc
jno
scas
or
int3
xchg
jb
lods
dec
jmp
push
addr16
fnsave
and
xchg
pop
mov
mov
sub
pop
push
pop
ljmp
and
inc
stc
and
arpl
cmpsl
rcr
cmp
cltd
jno
jo
dec
sub
pop
in
fsubl
out
jne
stc
adc
push
xchg
cwtl
test
rorl
add
xchg
xor
fnstsw
dec
push
cmpsb
fwait
inc
xchg
out
jp
in
jge
inc
imul
stos
sbb
inc
dec
aam
mov
lds
mov
inc
daa
sub
out
cmp
xchg
insb
dec
push
jae
jae
movsl
leave
insb
adc
lret
aad
pop
mov
push
push
orb
lret
mov
xchg
roll
pushf
cmp
sub
sbb
std
dec
lcall
jg
add
leave
fnstenv
movsl
pcmpeqw
test
pop
inc
mov
sbb
das
and
mov
negl
lret
test
sbb
dec
fisubl
push
add
push
add
add
cmp
je
out
mov
je
arpl
movsb
lcall
pop
inc
jge
and
fsubs
xchg
fwait
cmc
popf
jle
sub
cmpsb
jmp
dec
and
imul
fwait
sbb
dec
arpl
pop
pop
xchg
ja
adc
fs
cmpsb
mov
xor
out
sbb
push
out
fnstcw
repnz
mov
das
mov
sahf
rclb
les
inc
adc
jmp
dec
jnp
loopne
arpl
mov
mov
ror
aad
jp
add
imul
cmpsb
cmp
test
stos
pop
clc
push
call
cmc
cmp
adc
add
cmpsb
mov
jp
nop
je
lret
pushf
movsb
pop
pop
fcmovnu
mov
lds
fistps
jge
xor
push
hlt
mov
out
xor
into
jg
stos
or
rcll
out
mov
or
adc
adc
jne
gs
lock
mov
dec
lcall
lods
outsb
mov
outsl
mov
mov
or
mov
dec
xorl
out
add
es
jl
stos
lea
mov
mov
pop
das
movsl
sbb
xchg
adc
sub
js
loopne
adc
xlat
pop
cmp
outsb
decl
jle,pn
lcall
mov
jno
jno
je
sbb
pop
sub
adc
in
andl
xchg
adc
pop
ds
or
push
mov
xchg
pminsw
movsb
fisttps
xor
jle
jb
dec
loopne
imul
mov
ret
lret
jns
arpl
add
test
int
xchg
fldenv
fmuls
bswap
test
fcmovbe
jns
mov
enter
outsb
or
pop
ds
in
aas
add
aad
xor
add
xchg
and
js
imul
jno
mov
xchg
xchg
pusha
push
ret
push
sbb
stos
and
or
push
lds
or
lock
add
inc
in
cmp
test
adc
bound
dec
dec
lock
addb
xchg
dec
sub
je
enter
cmp
loopne
cmp
ret
lods
cmp
insl
test
cld
lret
imul
push
jne
cmp
rolb
ljmp
je
sub
and
add
ja
push
mov
in
mov
dec
jmp
out
aas
mov
cmp
adc
shlb
push
and
sub
test
push
outsb
mov
leave
inc
lock
mov
orl
pushf
test
xor
mov
sub
aas
dec
and
loope
insb
mov
inc
mov
mov
lods
cmp
mov
sbb
cs
cs
in
or
dec
fsubs
lock
or
lret
bts
jno
add
mov
arpl
jp
pop
sub
je
hlt
xchg
pop
sbb
pushf
nop
add
rorb
sub
or
mov
pop
mov
ficoml
inc
jmp
pushf
adc
rcl
aad
push
adcl
add
add
add
mov
sbb
call
out
inc
dec
add
pop
adc
add
sbbl
testl
ljmp
xchg
push
sbb
out
lahf
add
adc
addr16
roll
cmp
rcrl
int3
mov
and
out
insb
lods
testl
aas
pop
pop
aas
or
dec
add
adc
adc
fldt
mov
mov
cmpsl
in
imul
inc
mov
or
ret
movsb
mov
sub
and
icebp
testb
push
cmp
xor
and
outsl
sbb
imul
orb
and
insb
add
in
arpl
in
mov
and
out
mov
cmc
and
pop
stc
dec
loop
pop
cli
mov
outsb
lock
out
adc
int
outsb
add
aad
fiaddl
adc
loopne
add
fs
add
inc
icebp
fistpll
stos
mov
sbb
push
sbb
add
and
cld
jns
xchg
xor
into
jecxz
mov
jle
test
dec
dec
pop
mov
iret
int
in
push
rolb
jne
sub
jae
in
push
or
rcl
lret
jp
and
xchg
cld
inc
dec
jbe
cmpb
fidivs
imul
cmpsb
and
adcb
xchg
xor
dec
into
jne
mov
cmp
sbbb
inc
jmp
mov
cli
pop
ret
test
out
xchg
into
rcrl
fsubl
popa
leave
and
and
mov
mov
out
xchg
adcb
and
mov
or
stos
dec
cmpsb
stos
mov
xor
js
roll
aam
push
mov
pop
jp
mov
lea
shl
xor
shll
ljmp
jae
aam
sub
mov
inc
repnz
lea
cwtl
push
xchg
jle
mov
jmp
popf
decl
sbb
ret
int3
jns
pop
adc
addr16
jecxz
push
sbb
xchg
pop
jl
mov
adc
dec
xchg
pop
pop
lret
int
xor
sub
mov
leave
and
out
pop
imul
xchg
addr16
lods
and
in
dec
into
test
fisubrs
jg
mov
jecxz
mov
hlt
jae
lret
int
inc
inc
inc
pop
ja
and
push
add
mov
les
mov
aas
aad
daa
gs
inc
ret
leave
mov
pop
adc
je
outsl
jae
sarb
mov
ds
lret
xchg
das
cmp
jmp
xchg
xor
jb
in
xchg
push
out
jbe
pop
std
aad
cmp
out
cmp
lds
popf
fdivs
rcrl
push
mov
lea
sub
sbb
sbb
out
sar
mov
lods
sar
loope
mov
mov
push
jle
out
push
nop
jb
clc
sbb
xchg
ljmp
cli
cwtl
cmp
lret
std
sbb
fmul
loope
xchg
pop
ret
xor
dec
and
xchg
jae
ja
pop
or
leave
push
xlat
mov
mov
adc
roll
dec
stc
fstpl
mov
sahf
pusha
loope
mov
movl
leave
mov
push
jle
mov
movsl
mov
pop
xchg
out
jns
cmp
fisubs
add
leave
or
add
or
xor
add
mov
mov
outsl
mov
xchg
insb
xchg
data16
lea
dec
clc
repnz
or
es
inc
out
popf
pop
lods
lea
mov
fs
xchg
movsb
xor
xor
leave
pushf
adc
test
lea
mov
jecxz
fwait
and
nop
out
lret
pushl
xchg
cmp
sbb
sbb
shlb
xchg
fs
dec
test
inc
jp
mov
scas
test
std
fsubs
adc
sub
push
aad
data16
and
push
push
mov
push
inc
sbb
mov
nop
insl
subl
idivl
cmpsb
lock
ljmp
shl
loope
sahf
es
mov
mov
jmp
sbb
ret
out
push
movsl
out
fwait
push
or
sbbl
hlt
cli
mov
push
add
cld
push
inc
out
je
adc
andl
test
lods
cmpsl
mov
pop
mov
ljmp
orb
jns
xchg
or
pop
mov
jg
push
mov
mov
cmpsl
adc
push
add
jmp
stc
ficompl
out
cs
mov
ja
ja
rcrl
cmp
or
stos
mov
xor
test
gs
test
xor
repz
aas
je
and
mov
lret
cmc
jle
out
sub
mov
dec
mov
pop
sbb
or
sbb
push
or
stos
pop
clc
nop
pop
dec
mov
jnp
cmpsl
jo
pusha
aam
cmp
xor
cmp
in
test
jge
xchg
pop
push
int3
dec
decb
jnp
jno
dec
std
shl
sar
and
dec
fldl
jo
xor
stos
popa
xor
xor
pop
sbb
dec
cltd
jge
loopne
arpl
xor
add
sahf
push
dec
test
movsb
pushf
xchg
add
mov
movl
fwait
xor
data16
cmp
jge
jno
cli
cmpsb
jmp
leave
pop
and
mov
dec
mov
cmpsb
dec
xchg
push
jge
jle
fisubrs
mov
std
into
push
inc
in
push
or
add
lods
shrb
pop
and
sub
adc
cmp
inc
movsl
test
xchg
xlat
loope
into
dec
jne
fwait
cltd
push
ljmp
adc
mov
xchg
mov
imul
cmp
xor
outsb
inc
mov
dec
iret
rcrb
in
and
xchg
mov
push
mov
fistl
inc
sarb
popa
mov
mov
nopl
ds
sub
shlb
testl
popa
dec
in
or
sbbl
inc
fmul
push
push
cmpb
pop
sti
lods
movsl
adc
xchg
or
popf
out
aaa
add
faddl
xor
inc
cmpsb
mov
popa
scas
fmull
jns
mov
mov
mov
mov
negb
insl
loopne
xor
and
int
in
out
lret
xchg
mov
filds
xor
sub
aad
dec
jl
aam
dec
mov
pop
and
mov
out
cli
or
mov
subl
aam
mov
in
stc
incl
xchg
mov
jmp
je
pop
lock
add
cltd
ja
out
out
cltd
ja
daa
xor
imul
add
push
sbb
sbb
push
iret
xor
shrl
add
ds
adc
cmpsl
in
fnstenv
pop
bound
or
sub
jge
sub
lcall
cmp
mov
leave
leave
add
iret
cmp
lahf
gs
roll
lcall
mov
ret
cli
add
testl
fwait
stos
sti
das
popa
fidivrl
jle
cs
push
ja
dec
rcrb
mov
sbb
jo
shll
sub
push
shlb
and
or
in
dec
and
xlat
xchg
pop
push
mov
les
call
or
push
inc
dec
pop
push
dec
roll
popa
or
sbb
les
and
xchg
sub
pop
notb
adc
push
in
fsts
jne
jns
push
fldl
fldl
lds
xchg
inc
imul
dec
outsb
fildll
push
popf
push
movsl
mov
lock
aaa
jg
arpl
add
fsqrt
jb
cltd
jo
push
mov
daa
add
aad
jne
cmp
ret
sbb
mov
nop
pop
sub
push
mov
iret
and
out
jae
cwtl
or
fdivs
pop
rorb
pop
dec
xor
cmp
mov
pop
nop
pop
lcall
mov
sbb
or
cmp
and
ret
daa
push
cmp
mov
adc
mov
sbb
mov
inc
test
scas
notb
scas
xchg
and
inc
addr16
jp
fidivrs
mov
push
cmpsb
push
in
push
data16
sti
mov
mov
mov
dec
or
mov
ljmp
push
mov
xor
jns
popf
xchg
gs
cmpsb
xchg
cmp
idivb
pop
ds
adc
cld
pop
or
movd
inc
dec
nop
xlat
pop
mov
dec
fdivl
fucom
inc
test
mov
ret
popf
pop
adc
pop
xor
or
push
stos
test
jb
xor
mov
xchg
or
js
xor
mov
int
dec
pop
push
jge
xor
jne
bound
lea
rorb
mov
mov
sbb
loop
inc
ret
hlt
pop
pop
cwtl
outsb
stos
adc
push
sbb
or
imul
aam
popf
dec
aad
into
ja
mov
aas
mov
popl
fstpt
mov
inc
jecxz
movsl
dec
jge
xchg
or
arpl
bound
divb
popa
add
dec
fisttps
pop
in
mov
decb
mov
loope
mov
add
aam
cmc
scas
add
cmp
xchg
dec
mov
orl
inc
aas
bound
insl
push
cmp
add
and
fadds
mov
fs
pop
test
cmp
loope
bound
jo
sub
scas
mov
lds
repz
xchg
add
insb
lods
pop
sub
dec
push
pop
aam
cmpsl
in
in
pop
out
lods
pop
push
mov
inc
insl
jb
xchg
xlat
pop
arpl
mov
and
mov
xchg
inc
mov
loop
aad
movsl
mov
outsl
adc
add
stos
add
add
ds
xchg
popf
mov
mov
mov
sbb
in
inc
aam
loop
xchg
movsl
in
mov
int
mov
sbb
insb
jecxz
sub
pop
mov
adc
inc
imul
fbld
push
adc
mov
loope
and
jle
inc
and
pop
nop
sbb
dec
pop
pop
movsl
lret
andl
xor
out
push
bound
aad
push
mov
cld
jp
rcrl
add
aas
pop
lret
xchg
mov
xchg
jnp
sbb
add
adc
shll
pop
add
aam
fs
dec
mov
or
dec
sahf
or
dec
push
sahf
adc
push
cmpsb
sbb
xor
dec
xchg
in
pop
movb
cmp
mov
std
or
inc
and
jecxz
ret
insb
gs
mov
mov
and
test
cmpl
aas
fisttpll
dec
pop
stc
pop
jmp
out
stos
or
enter
movsl
aaa
xchg
sarb
loope
adc
fwait
repz
xor
adc
pop
int
clc
xchg
jl
and
mov
je
jns
and
inc
push
int3
lret
orb
fld
arpl
xchg
mov
leave
rolb
xchg
icebp
sub
in
cmp
mov
adcb
or
test
push
test
mov
sbb
xor
ret
dec
cmpsl
repz
cltd
or
xchg
movb
orb
mov
sbb
in
pop
ret
popf
fisubl
pop
cmp
hlt
cmpsl
xchg
and
jb
push
jge
cmpsb
mov
xor
fsubrl
jecxz
and
lds
testl
lds
or
in
and
jno
xor
test
fmull
inc
iret
push
pop
ficompl
push
insb
push
or
rolb
data16
mov
hlt
test
aas
xchg
xor
icebp
mov
movsl
mov
mov
mov
out
mov
into
sarl
inc
loopne
inc
inc
xchg
dec
std
stos
shrd
and
popa
pop
je
inc
pop
rcrb
shll
dec
in
push
mov
add
dec
loop
gs
stc
push
sub
xor
imul
jo
and
and
pusha
jae
xchg
dec
fcoms
scas
and
rol
fneni(8087
push
sub
shrl
cmpsb
es
dec
jbe
xchg
addb
js
jge
clc
cmpsl
incl
jecxz
mov
call
jno
enter
int3
cmp
fimuls
test
rcrl
in
sub
lcall
outsb
dec
test
bound
cmc
or
lea
adc
ficoml
mov
push
mov
cmp
es
cmp
adc
pop
addr16
bound
mov
or
cmpsb
dec
push
std
icebp
enter
jb
xchg
lret
enter
addr16
adc
fimuls
call
incb
mulb
fs
fisttpl
add
stc
js
or
add
xlat
mov
and
rclb
adc
mov
andb
add
stc
mov
stos
dec
lods
cltd
out
dec
add
stos
add
add
popf
iret
inc
dec
mov
test
xor
lds
sub
pushf
cmpsb
mov
lods
mov
stos
stos
daa
adc
lods
sub
ljmp
scas
fistl
cmc
sahf
sbbl
std
pop
inc
loope
addr16
mov
call
imul
fisttpl
inc
inc
rorl
rorl
dec
mov
orb
xchg
and
mov
xor
sahf
test
sbb
in
or
sub
inc
aam
or
je
jl
mov
mov
iret
cmp
test
xchg
stc
sub
jbe
stc
mov
in
cli
jge
jmp
jg
mov
jmp
movsb
jl
neg
insl
cmpsl
mov
fsts
repnz
mov
push
aas
shll
dec
jb
jl
imul
mov
pop
cmp
pop
push
xor
push
or
xchg
in
mov
mov
insb
out
dec
sub
mov
mov
mov
and
enter
add
test
sub
cmp
inc
dec
cmp
push
dec
push
insl
ds
and
negb
mov
pop
mov
pop
into
cmp
mov
mov
jmp
inc
sbb
or
test
inc
mov
fsubs
adc
push
cmpsb
fcmovb
jp
insl
je
popa
mov
inc
mov
pop
pop
ret
pop
dec
stos
sub
mov
sbb
or
sbb
fisubrs
outsb
or
or
fs
fisubrl
cmp
sub
rdmsr
mov
mov
adc
mov
rolb
adc
insb
cmp
xor
xor
outsl
cmc
imul
popf
add
arpl
push
aaa
cmp
std
pop
clc
cmp
jecxz
jo
push
cmp
mov
jae,pn
in
lods
and
mov
fcmovu
popa
push
sbb
xchg
cli
cmp
mov
push
adc
imul
sbb
fmull
daa
pop
aad
push
jp
fcomp
pushf
lods
add
cs
jmp
lahf
mov
imulb
repnz
fimull
dec
sub
std
dec
sbb
dec
cmpsl
call
lods
movsb
mov
scas
xlat
mov
call
in
pop
push
in
push
and
clc
adc
push
push
sbb
out
rolb
repz
stos
mov
call
xor
and
int
or
out
ror
xor
mov
mov
dec
add
mov
xor
shlb
mov
fmull
lcall
pop
sub
jo
jle
push
pop
cmp
ret
mov
and
xchg
lea
mov
insl
arpl
mov
pop
jns
add
lahf
or
in
inc
js
sbb
push
push
xchg
lea
inc
fsubl
and
stos
test
out
clc
rcrl
inc
mov
fcoml
movsb
sbb
jecxz
jbe
les
das
xchg
and
and
sub
sahf
jg
test
cmpsl
sub
arpl
jle
push
or
repz
jno
dec
imul
xchg
adc
call
add
cld
xlat
dec
call
adc
addr16
push
add
stos
add
add
xchg
and
xor
push
bound
je
jbe
pop
adc
dec
inc
push
adc
pusha
dec
cmpsl
dec
hlt
scas
mov
and
or
lret
cmp
push
and
shr
les
xchg
int
in
das
test
aam
mov
sub
mov
inc
stc
mov
and
sbb
inc
aas
pop
pop
mov
pusha
pop
sbb
mov
or
or
rol
inc
cmp
es
jo
test
les
inc
rclb
enter
sub
les
push
jo
cmp
dec
mov
mov
inc
mov
bound
mov
in
lahf
fisttpl
cmp
les
stos
popa
cmc
out
sbb
mov
jno
dec
cmp
roll
insl
subl
aam
inc
inc
popf
mov
push
iret
jmp
dec
stc
pop
jl
mov
jp
sbb
sub
loopne
jns
dec
mov
jb
lock
inc
repnz
lret
push
enter
lahf
add
jp
scas
div
adc
loopne
fildll
cld
xor
jg
sub
icebp
mov
sub
outsb
es
xchg
adc
mov
sbb
xchg
jo
sbb
movsl
sti
stos
inc
mov
sub
mov
push
jbe
test
pushf
call
push
addr16
lds
mov
shll
sbb
mov
mov
cmp
cmp
rolb
roll
inc
adc
push
jno
mov
leave
nop
lcall
mov
push
stc
jno
insb
aas
cmp
adc
mov
fiadds
js
jle
cmpsb
imul
jnp
push
movsb
cmpsb
pop
fmuls
adc
pop
mov
jmp
repz
aad
pop
loope
inc
or
push
or
or
leave
fstl
fwait
cmp
sahf
and
adc
mulb
mov
adc
es
lods
jb
mov
in
icebp
insb
cwtl
mov
pop
jmp
mov
add
lret
cmc
shlb
into
cltd
adc
sub
aad
push
cld
minps
pop
mov
inc
shlb
mov
mov
xchg
push
pop
sbb
cmp
mov
fsubl
cmpsl
je
ret
aad
push
sub
imul
inc
xchg
addl
mov
lea
mov
test
inc
gs
mov
xchg
jmp
push
fsubs
fs
popf
ret
xor
push
stc
xor
push
lock
jg
mov
jle
sbb
and
loop
hlt
sub
inc
xor
ds
ret
or
and
cmp
lcall
in
enter
xor
xor
xchg
mov
and
jmp
mov
lahf
imul
ds
xchg
mov
inc
or
sbb
shlb
cmpsl
mov
mov
das
jae
enter
loope
dec
out
enter
xchg
aaa
pop
mov
test
push
jno
push
std
cmp
cmp
or
fwait
jmp
stc
scas
in
lahf
sbb
pop
mov
test
jo
pop
jmp
xor
mov
popa
dec
into
add
mov
sub
daa
push
lock
pop
lock
mov
das
jbe
sub
xor
int
scas
test
inc
out
jnp
mov
cmp
xlat
adc
add
add
aad
dec
or
cwtl
sbb
std
stos
push
in
sbb
fimull
push
or
test
pop
shrl
into
lcall
out
xor
out
gs
mov
mov
mov
or
fistpl
pop
sbb
push
daa
cmp
and
push
push
ljmp
mov
sub
xchg
das
jmp
xor
mov
data16
sub
xor
mov
cmc
rcrb
lods
imul
add
pop
divb
in
arpl
add
je
jle
cli
pop
and
sub
add
jp
xlat
mov
es
insl
push
mov
adc
insb
xchg
cwtl
inc
cmc
dec
ret
stc
jge
scas
mov
std
sbb
jl
mov
fwait
popa
push
bound
add
add
sbb
adc
pop
push
je
rcrb
dec
negl
and
xor
mov
mov
leave
shlb
xchg
jecxz
rcrl
mov
dec
in
dec
xchg
rcll
popl
outsb
cmp
sub
pop
push
mov
mov
xchg
outsb
mov
adc
mov
fsub
int
imul
and
xor
and
arpl
lds
ljmp
push
mov
cs
sbb
lock
ficoms
out
pop
addr16
cltd
sbb
pop
cmpsb
or
mov
adc
ja
jnp
add
xchg
pop
fcmovu
xchg
rol
std
out
cmp
pusha
add
jnp
lret
imul
or
movb
adc
imul
insl
mov
ds
push
in
arpl
dec
push
sbb
mov
push
and
and
sbbl
mov
cmpsb
out
jns
cli
test
or
ds
mov
popf
scas
ja
cmp
dec
sub
mov
add
push
stc
dec
pop
pop
and
and
xchg
mov
shll
dec
fsubrp
mov
and
xchg
rcl
lods
xlat
adc
jb
ficoms
pusha
fcoms
mov
out
insb
testb
js
stos
popa
in
mov
sub
out
dec
fcomip
push
jns
rorl
add
fidivrs
push
xchg
je
jne
daa
mov
dec
cmp
mov
xor
popf
sbb
aam
lcall
xor
in
dec
mov
add
enter
add
xchg
sub
mov
dec
pop
sbb
xchg
xchg
addr16
lret
fistl
cmp
jmp
fisubrl
xor
and
push
cmp
cld
pop
push
xlat
stos
inc
cmpsb
add
test
jge
int3
ja
or
or
xor
fucomi
jnp
xchg
sbb
jg
xorb
je
jmp
cmp
cwtl
imul
mov
jne
nop
in
mov
mov
imul
ret
adc
out
lods
jg
aad
repz
int3
xchg
shl
ret
push
scas
and
xchg
ds
cmp
sub
dec
jmp
mov
dec
push
sub
push
stos
lcall
cld
pop
cmp
add
add
jg
jns
pop
or
dec
insb
rcrb
stos
add
add
icebp
xchg
pop
push
ret
jo
out
xor
jo
into
adc
mov
loop
ret
lea
je
fidivrl
xchg
sub
inc
outsl
mov
mov
stos
xlat
lret
lods
es
pop
pop
jle
add
adc
pop
inc
sarb
mov
xchg
sub
fidivl
lds
cmp
pusha
dec
inc
pop
popf
in
into
ja
cmp
xor
aam
or
inc
imul
mov
ret
xor
bound
mov
or
sbb
js
imull
dec
loop
repz
fidivrs
sub
rolb
jp
xor
mov
or
lcall
lods
adc
sub
les
mov
in
outsb
xlat
dec
jne
push
popa
xchg
ljmp
cmpsl
cmp
or
push
js
xchg
and
add
aas
sub
testl
out
lret
dec
cmp
aas
jbe
dec
lret
shll
fcoms
ds
inc
push
sbb
bound
ja
mov
insb
xor
cmc
rcrl
subb
sbb
adc
dec
mov
and
mov
aad
notl
push
xchg
aas
xor
test
ljmp
adc
xor
pop
xchg
ss
push
cmp
out
stos
sbb
add
adc
es
xchg
adc
or
shrb
ja
inc
dec
mov
lock
mov
dec
sbb
and
mov
pop
push
mov
lahf
data16
fistl
outsb
adc
cwtl
mov
mov
sahf
cltd
jg
loope
lret
inc
icebp
cli
pop
stc
sbbb
pop
stos
out
adcl
jo
inc
int
cmc
jo
mov
sub
popa
mull
daa
and
cmp
scas
ja
rorl
pop
cmp
ljmp
aas
add
jl
mov
aad
xor
nop
cmp
gs
stos
pop
movsl
loopne
fcmove
cs
and
pop
idiv
fstcw
js
into
ja
cmp
ljmp
rorl
xchg
divl
mov
ret
dec
mov
out
insb
sbb
in
dec
cmpsl
xchg
lock
xor
jo
adc
and
mov
insb
call
insb
ret
sub
sbb
sbb
enter
out
insl
ret
cmp
mov
or
clc
sub
mov
inc
mov
push
sub
data16
mov
testl
lret
inc
mov
dec
pop
push
jecxz
xchg
adc
das
hlt
pop
popl
movsl
int
pop
mov
loopne
repz
inc
or
sar
scas
and
lret
inc
push
out
sbb
out
insb
mov
je
cld
dec
insl
push
jno
xchg
xlat
cmp
ret
and
xchg
lods
jnp
gs
dec
cltd
in
stc
fs
out
mov
orb
fdivrs
xor
cmpsb
repz
xor
xor
sti
mov
sbb
jecxz
sub
in
and
fistpl
rclb
in
aam
add
and
fcoml
inc
inc
adc
addb
pushf
pop
fists
arpl
xchg
stos
jecxz
cltd
in
mov
enter
pop
mov
xor
pop
add
mov
notl
pop
ja
int3
xchg
imul
stos
add
add
mov
fbld
pushf
or
std
adc
lea
imul
push
jl
ljmp
mov
xor
repnz
xor
push
xor
aas
sbb
push
sbb
xor
mov
loop
ds
add
outsl
enter
and
test
orl
cmp
adcl
inc
stc
or
cld
leave
ret
xchg
shlb
lret
clc
add
fdivl
dec
cs
fwait
dec
mov
out
or
push
mov
push
mov
push
push
xchg
cmpl
clc
addr16
cmp
stc
sub
mov
movsl
adcl
scas
pusha
call
nop
repnz
mov
rorl
dec
dec
leave
fs
sub
adc
daa
insb
xor
and
and
outsl
fldl
in
xlat
mov
jnp
idivb
jmp
cli
rorb
imul
mov
mov
push
jns
subl
fwait
imull
add
pop
jne
add
dec
test
xor
adc
stc
hlt
pop
or
gs
in
sti
xor
adc
xchg
notl
jl
xlat
inc
inc
popa
fwait
enter
sahf
adc
mov
sbb
pop
jp
push
and
fcomp
stos
adc
std
ret
xor
mov
pop
mov
notb
mov
pop
or
xor
std
cmp
fsin
inc
fstpl
es
test
xor
mov
xchg
popf
cmp
les
cltd
xor
sub
dec
insb
push
mov
mov
aas
or
aad
mov
iret
xchg
pusha
push
aas
pop
pop
call
ljmp
pop
pop
cmpsl
mov
mov
mov
jb
mov
add
dec
gs
add
jo
adcl
mov
xchg
cmp
mov
out
xchg
jo
xchg
loope
orl
push
push
bound
push
ret
out
in
cmp
popf
push
lea
mov
push
xchg
jnp,pn
repnz
repnz
sbb
jle
mov
mov
cmpsb
push
push
inc
push
adc
sbb
je
pop
insl
lock
mov
popf
or
adc
mov
sbb
xchg
fsts
mov
xor
call
cmp
lret
sbb
mov
dec
scas
insl
ja
add
cmp
int3
loope
nop
add
and
aad
mov
stos
pop
mov
xrelease
sti
ds
jle
cmp
mov
pusha
int3
test
mov
xor
inc
adc
loop
sub
lock
dec
aam
fidivs
and
adc
adc
icebp
adc
xor
neg
push
insb
sub
xchg
cwtl
or
dec
sbb
ss
stos
xor
icebp
cmp
loop
sub
std
out
add
pushf
pop
mov
pop
call
inc
and
sahf
das
leave
loop
cltd
cmp
sub
sti
pop
push
jp
fucom
sbb
ljmp
sub
je
popa
fbld
mov
cmp
daa
mov
add
push
pop
je
icebp
lock
jle
lds
test
or
add
sub
sti
lods
or
jmp
and
bound
add
pushf
push
dec
mov
add
movhps
pop
inc
stos
xor
imul
jmp
pop
fstpt
loope
xor
movlps
sub
mov
sub
sub
rclb
jp
inc
aas
sbb
jns
enter
addr16
scas
fidivl
repnz
aad
mov
pop
mov
shlb
sub
addr16
fs
sbb
or
inc
repz
pop
inc
or
pop
dec
jnp
mov
xlat
adc
ljmp
call
scas
adc
rcrb
jg
pop
mov
out
dec
sub
imul
sub
subl
aad
jge
xor
dec
xchg
jns
and
and
stos
in
test
fistpll
test
fs
fwait
testl
scas
jp
xchg
inc
inc
aad
xor
in
int3
aam
adc
shll
cmpsb
add
clc
lods
jle
repnz
push
jecxz
cmpsl
stos
std
jb
mov
lret
sub
fdivl
sub
fnsave
pop
push
adc
push
and
cwtl
imul
pop
sbb
jg
pop
and
in
adc
xor
pop
xor
arpl
icebp
or
mov
mov
insb
cli
gs
lods
sub
adc
push
cvtps2pd
ljmp
and
fwait
mov
mov
sbbl
pop
lods
push
sbb
inc
mov
insb
aam
adc
push
lock
imul
imul
push
loopne
mov
and
sbb
sbb
scas
jmp
jae
lods
out
arpl
lahf
sbb
mov
cs
loopne
dec
xor
xor
jle
loop
mov
mov
jne
mov
inc
test
adc
inc
not
pop
mov
imul
dec
xchg
xlat
push
dec
btsl
push
push
test
pop
int
imull
das
mov
aad
aad
lea
cmp
test
sub
sbb
aam
aam
stos
or
lcall
lahf
add
push
push
fsubs
jl
shll
dec
stos
sar
hlt
dec
loope
or
mov
daa
and
decl
sbb
mov
push
add
mov
ficoml
je
inc
jl
into
sub
pop
scas
les
push
clc
mov
sub
sarb
nop
cmp
pop
push
int
das
rcr
test
das
aam
inc
inc
jecxz
and
cmpsl
sub
and
lods
fidivs
punpckldq
xchg
and
mov
xor
fisubl
pop
fs
push
or
shrb
add
mov
ficoml
pminub
loop
and
sahf
adc
sbb
int
aad
inc
mov
cwtl
mov
shlb
lret
sbb
pop
fidivs
mov
test
aad
pop
comiss
out
int3
add
cmp
xchg
fbstp
lcall
loopne
pop
push
mov
bnd
xchg
int3
shlb
inc
sbb
lcall
std
clc
xchg
lcall
jle
in
push
cld
cs
repnz
add
xor
test
add
stos
add
add
stos
cmpb
leave
inc
pushf
push
inc
fs
inc
cli
mov
adc
insl
xor
outsb
outsb
push
lahf
cmp
ljmp
pop
stos
divl
lock
out
inc
test
push
mov
imul
mov
data16
sbb
jp
nop
hlt
int
add
dec
cmc
mov
push
shll
rcrl
or
xor
mov
je
insb
aaa
pop
dec
es
inc
dec
popf
fisttpll
ja
mov
dec
add
mov
lds
into
jns
aaa
mov
enter
pop
fwait
insb
in
icebp
lea
pushf
repnz
sarb
and
and
mov
cmp
sub
adc
out
inc
sub
ret
xlat
outsb
cmc
or
push
pusha
pop
cmp
int
mulb
aam
mov
je
imul
aam
pushf
inc
xor
jmp
popa
das
inc
xchg
jle
test
dec
into
stos
loopne
adc
loopne
dec
add
add
cli
xor
jp
sub
js
adc
es
fldlg2
sahf
pop
mov
shll
dec
sar
cmc
jno
and
sti
pop
out
popf
sub
sub
shlb
mov
inc
lret
shrb
or
sbb
fildl
pop
dec
mov
lods
add
jae
push
or
cmp
jne
test
imul
shr
xor
mov
aam
popa
aad
mov
das
mov
iret
int3
lds
jge
dec
fstpt
sbb
clc
cltd
fldcw
pop
cltd
bound
aam
pop
aad
xchg
and
or
cmp
clc
mov
stos
fxch
add
mov
xchg
std
push
clc
push
inc
mov
rcll
push
dec
cmp
jl
mov
pop
out
mov
and
leave
jbe
lock
enter
std
lcall
mov
inc
xlat
mov
addr16
outsb
xchg
push
cld
hlt
ret
pop
movsb
fs
push
mov
sbb
les
inc
fmull
cmp
pop
movsb
clc
cwtl
adc
push
xchg
les
xchg
dec
mov
les
xchg
and
in
arpl
and
mov
ja
mov
mov
adc
or
sbb
dec
xchg
cmpsl
xchg
sbb
xor
inc
int
xor
cld
push
shl
and
cmc
rcrl
das
mov
mov
notl
test
sbb
cmpsb
pop
rcrl
lret
pusha
dec
fcompl
stos
sub
shr
and
out
sbb
dec
cmpsb
jmp
mov
cmpb
dec
and
imul
pop
lret
mov
cmp
nop
outsb
push
inc
mov
xchg
cwtl
push
test
mov
jae
mov
pop
repz
push
cmp
add
inc
pop
divl
jecxz
rcrb
pop
jg
xor
sarl
mov
outsl
ror
in
jo
repnz
jp
ds
divb
in
dec
push
add
xchg
test
mov
aaa
lea
jl
sbb
push
sub
popf
arpl
adc
jle
or
mov
out
je
iret
fisttps
or
test
mov
ret
popf
cmp
dec
leave
mov
add
add
sahf
mov
das
cli
pop
dec
jne
jae
bound
cli
xor
sti
enter
in
and
ljmp
aam
popf
in
xchg
xor
out
cmpsl
mov
xor
jne
das
jnp
cmp
cmpsb
jg
mov
iret
pop
inc
and
ret
outsl
adc
repnz
push
aaa
fstps
js
adc
push
inc
mov
test
ret
nop
add
ret
int
aam
pop
xor
mov
mov
insl
repnz
inc
cmc
jno
pop
inc
es
in
push
pop
test
or
js
mov
movb
jno
or
adc
mov
and
mov
and
cmpsl
push
sahf
addr16
mov
adc
add
fs
xchg
xchg
mov
mov
int3
fldl
xchg
call
lret
hlt
out
addr16
lds
lcall
xchg
sbbb
out
sbb
xchg
mov
xchg
repnz
out
out
in
sbb
movsb
lods
das
pop
jecxz
xor
push
das
sti
cmp
ja
data16
cli
mov
clc
mov
ret
jp
xchg
xlat
dec
jmp
imul
call
popa
movsb
cmp
xchg
mov
and
shrl
dec
pop
dec
push
fisttpll
arpl
cmove
sub
aas
inc
negb
push
pop
dec
cmp
fildl
push
mov
and
xchg
int3
cmp
sbb
jecxz
or
push
jno
dec
mov
add
ds
fwait
pushf
stos
out
mov
leave
sub
int3
mov
movsb
sub
je
test
testl
ds
cs
jmp
or
jo
gs
ljmp
loopne
adc
push
dec
push
pusha
mov
jae
sub
dec
push
mov
out
mov
gs
jnp
dec
ficoml
out
dec
loope
mov
aas
add
cltd
push
mul
xor
pop
sbb
jl
mov
mov
pop
rorb
in
iret
and
ret
pop
jb
adc
xchg
pop
or
cmpl
jns
pushf
add
xor
cmp
inc
sbb
xor
out
cmp
in
sbb
xor
cli
bound
add
cltd
add
movsb
bound
push
aaa
and
push
mov
aaa
sbb
cmp
cmpsl
cmpsb
fadds
xor
ljmp
dec
loope
and
add
jno
xchg
mov
xchg
jb
std
mov
lds
ja
push
std
mov
jecxz
sub
icebp
cmp
add
daa
call
mov
add
decb
fs
sub
push
push
out
ja
push
inc
jg
repnz
inc
mov
add
mov
loop
push
fidivs
ljmp
jp
imul
leave
push
fwait
int
adc
xor
mov
fs
test
cmp
jg
jbe
lret
lcall
cmp
mov
insl
xor
push
xchg
mov
push
stos
outsb
repz
sbb
fistpl
jo
fstps
xor
xor
and
repz
fcmovnb
pop
sbb
aam
and
insl
add
stos
add
add
pop
test
test
jbe
roll
das
leave
dec
call
mov
stos
and
je
jg
sub
xor
pop
add
or
jecxz
rcrl
pop
mov
cmp
cld
into
repnz
inc
sbb
rcrb
cwtl
addb
lds
shl
push
loope
test
and
sub
addr16
repnz
push
lds
outsl
es
ds
mov
xchg
xlat
dec
insb
fucom
imull
popa
pushf
dec
inc
arpl
or
sbb
insb
push
add
nop
jg
pop
mov
ficompl
mov
mov
adc
lret
lahf
xchg
stos
nop
jecxz
lods
into
sti
sarb
adc
lahf
and
inc
pop
nop
repnz
add
in
and
sub
loopne
aad
inc
lods
sub
les
daa
loop
into
rcl
sub
fisubrl
pop
mov
pop
xchg
cmp
add
insl
cmp
sub
fisubl
gs
sbb
sarl
and
decl
mov
shrl
and
pop
fidivrl
test
cmp
notb
push
xchg
mov
out
xor
xsaveopt
bound
pop
mov
enter
mov
mov
jg
jecxz
add
mov
jae
mov
outsb
sbb
cli
sbb
dec
adc
scas
dec
ret
mov
push
ret
dec
rcll
cld
sub
xor
jno
gs
inc
push
stos
and
xchg
jo
out
repz
leave
mov
adc
out
jp
into
imul
hlt
xchg
mov
adc
or
jl
fnstenv
jp
cmpsl
sbb
lods
sbb
sbb
mov
add
inc
jecxz
call
cld
xchg
jmp
arpl
push
cwtl
jg
mov
hlt
pop
and
daa
sbb
stc
sbb
in
and
jne
in
sub
dec
aaa
mov
add
mov
sbb
aas
stos
pop
push
adc
mov
cmpb
xor
dec
mov
cltd
repnz
movsl
ss
mov
in
xchg
in
mov
and
addb
jecxz
push
rol
mov
cli
clc
mov
jne
inc
aaa
and
in
jns
dec
loop
test
dec
cwtl
shll
je
push
aaa
jl
sahf
sbb
mov
scas
in
sti
arpl
cmp
mov
shll
scas
inc
or
in
mov
aaa
adc
cmp
sbb
cli
mov
cmpsl
adc
addr16
adc
or
jge
xchg
sbb
fld
mov
sti
mov
push
out
pop
mov
lret
mov
enter
scas
stos
lahf
inc
mul
aam
out
push
adc
add
adc
adc
adc
cmpsl
addr16
mov
push
push
cmpsl
push
pusha
in
jnp
shrl
inc
adc
loope
cmp
push
int
mov
andl
mov
pop
repnz
mov
jmp
flds
mov
pop
push
inc
jle
mov
stc
inc
jo
mov
mov
add
inc
add
inc
daa
sti
mov
push
pop
das
xchg
test
jo
add
notb
popf
add
mov
adc
cmp
dec
fstps
cmp
mov
fisttpll
cltd
hlt
popl
test
cmpsl
dec
ret
les
out
xchg
pop
cmp
fwait
mov
sbb
lahf
pop
jg
pop
jo
adc
mov
xor
insb
dec
loopne
lret
fimuls
mov
cmc
xlat
dec
adc
jge
and
pushl
dec
cmp
lret
sbbl
mov
or
cmp
jne
aaa
adc
pop
loopne
inc
fstl
push
rclb
sub
dec
hlt
scas
repnz
fwait
jp
pop
mov
sbb
xor
int
int3
mov
cwtl
lahf
adc
and
mov
movsb
sbb
pusha
lds
pop
int
popa
jbe
cmpsb
push
imul
push
stos
in
aaa
les
mov
imul
leave
fimuls
cmp
popf
cli
jge
xchg
icebp
std
jns
pop
call
pop
movsl
xchg
fidivs
cwtl
clc
xor
insl
sub
mov
sahf
mov
dec
inc
lock
push
cmp
imul
ror
std
idiv
push
sub
lods
nop
inc
cmp
pop
mov
xchg
push
jmp
jnp
dec
cmp
xchg
push
cs
push
shll
sub
mov
lods
cmp
popa
push
clc
xor
push
inc
mov
mov
insb
inc
lock
sbb
cmp
aam
sbb
cmp
rorl
jp
scas
cmpsb
xor
mov
push
arpl
popf
int
shrb
aaa
mov
cs
xor
xchg
xchg
ds
shrl
mov
mov
enter
jnp
mov
sub
xchg
loope
les
inc
mov
daa
pop
pop
jbe
jl
mov
jmp
ret
mov
out
and
jb
cmp
jp
cmpsb
iret
test
ficoms
ss
push
pop
enter
pop
je
fisttps
mull
call
cli
cmpsb
in
dec
adc
fiaddl
pop
or
jns
or
jg
fldt
je
jne
loopne
cwtl
xchg
loopne
sbb
stos
or
and
push
mov
and
pop
daa
mov
xchg
xor
dec
das
add
pop
mov
push
and
cmc
iret
inc
sbb
dec
and
add
aaa
jb
int3
xchg
insl
jge
pop
dec
ret
sub
test
xchg
int3
cs
mov
pop
stos
bound
aad
les
inc
dec
cmpl
inc
fisubrl
xchg
pop
in
or
mov
or
push
movsl
pop
push
aaa
int
pop
data16
dec
push
xchg
jns
loop
test
sbb
cmp
clc
scas
inc
or
fistl
fildll
loope
xchg
and
dec
xchg
sub
sbb
in
subl
mov
aam
ds
add
rorb
fisubrl
adc
sahf
xchg
jg
lahf
jne
jbe
outsl
add
cmp
and
aam
inc
sbb
fistl
repnz
inc
xor
or
stos
pop
jge
ds
xor
sub
pop
mov
stos
sub
push
test
jb
es
mov
xor
dec
or
lds
testl
mov
int
pushf
sbb
add
mov
aas
sysexit
pop
push
jg
test
insl
je
add
fstpt
adc
ja
stos
mov
push
cmpb
scas
ret
daa
and
test
xchg
jg
mov
stos
sub
add
ds
jmp
iret
bound
push
cld
in
lds
pop
movsb
push
testb
push
int
std
daa
rclb
xchg
mov
or
sbb
mov
cmp
adc
adc
test
push
lahf
movsb
imul
ret
dec
adc
push
cmpsl
fcmovb
in
jl
inc
xchg
and
xchg
push
push
and
mov
inc
pop
subl
dec
ja
push
ret
jecxz
adc
jp
adc
pop
icebp
inc
mov
dec
cltd
mov
fucom
lods
cli
push
out
mov
dec
pop
icebp
test
loope
and
add
adc
xlat
mov
aaa
int3
jg
into
jl
jae
aaa
cmp
push
loopne
pop
je
test
movl
nop
mov
cmp
mov
movsl
and
loopne
xchg
cmp
les
insb
cmp
outsb
pop
outsb
xlat
lock
testl
daa
mov
out
idivl
loop
mov
jb
mov
imul
dec
adc
cmpsb
enter
shl
das
fisubl
cli
dec
pop
pop
stos
pop
je
pop
fwait
daa
sub
lret
cltd
ds
pusha
mov
ss
into
loopne
mov
movsl
dec
adc
daa
fdivrp
sub
out
xor
loopne
push
dec
add
xchg
mov
stos
rcrl
out
fbstp
out
pop
out
lret
out
or
sub
sub
adc
push
dec
cmc
adc
cmp
decb
loope
and
push
fmuls
jle
inc
cltd
jne
jne
ss
out
icebp
fs
xor
add
xchg
sbb
dec
lgs
lahf
dec
pushf
inc
dec
add
in
cltd
push
out
jp
dec
dec
loop
mov
addr16
aam
insl
aaa
cltd
inc
push
je,pt
adc
or
test
adc
loope
xlat
push
popa
cmp
or
rcrb
scas
cmpb
flds
insb
andb
inc
push
mov
into
mov
inc
jp
pop
bound
pop
enter
and
cld
jno
xchg
dec
shll
inc
xchg
sub
jl
repz
push
fstps
mov
in
repnz
addr16
fsubl
jp
fcomi
adc
push
pop
cmp
or
lods
movsbl
add
popa
mov
jg
sbb
shrb
iret
jp
mov
insl
das
cmp
outsb
jmp
inc
sbb
hlt
adc
push
repz
popl
or
in
inc
out
inc
push
xchg
pop
stos
cmp
add
imul
jmp
mov
stc
adc
imul
arpl
ret
lods
test
fimuls
mov
jmp
inc
in
xchg
mov
int3
mov
lds
mov
aam
jnp
mov
movb
aam
fnstcw
ds
xor
scas
lock
das
ljmp
fcmovbe
fimuls
lcall
sub
xchg
xchg
addb
cltd
add
xchg
cmp
push
loop
sbb
icebp
xchg
lcall
icebp
fcoms
add
add
repz
push
cmp
loop
lds
sbb
add
cmc
loopne
loop
cmp
std
mov
pop
xchg
xor
mov
subb
pop
dec
scas
jle
mov
hlt
sbbl
leave
test
mov
pop
fcomps
jecxz
sub
sahf
adc
and
mov
ficompl
ds
fistpll
movsb
pcmpeqd
lods
jae
sub
inc
movsl
pop
pop
gs
sub
cld
addl
imul
lock
fnstenv
or
fisubrs
mov
bound
jp
cwtl
loope
call
sub
xor
clc
ja
je
fists
inc
mov
xor
or
dec
dec
rcll
pop
sahf
add
out
dec
lock
fists
adc
sub
scas
shl
fwait
push
pop
push
mov
xchg
push
mov
add
jg
mov
bound
sub
mov
lret
pop
mov
mov
int3
out
shl
pop
inc
rcl
xor
movsb
inc
inc
lods
nop
jne
iret
xor
insb
ja
mov
push
cmc
popa
sbb
jae
cltd
in
pop
mov
std
ljmp
aas
sub
jnp
xchg
and
jge
out
or
cld
test
pop
imul
pop
push
bound
xchg
cmp
out
pop
sub
pop
xchg
pop
test
fldt
test
jnp
mov
shlb
sub
pop
mov
adc
mov
xchg
adc
mov
inc
adc
loope
mov
in
dec
or
popf
js
jbe
lret
pushf
loopne
dec
pop
mov
inc
adc
js
and
pushf
mov
mov
push
out
jae
lret
popf
scas
push
add
imul
or
aam
or
push
sti
das
mov
imul
negl
inc
mov
sbb
pop
inc
outsb
cli
addr16
xor
push
pop
pop
push
lret
in
jbe
mov
push
jnp
jge
xor
hlt
int
mov
mov
mov
les
and
cwtl
cld
dec
mov
xchg
adc
dec
jns
lret
test
mov
icebp
sti
adc
inc
inc
fstpt
lock
int3
adc
xchg
and
pop
mov
sub
push
into
fidivl
stos
fwait
mov
push
cli
cmp
fimuls
mov
cwtl
mov
mov
out
mov
loop
cld
pop
inc
icebp
pusha
mov
and
mov
xchg
dec
adc
dec
mov
xor
inc
sub
cmc
inc
sbb
adc
mov
loopne
add
jle
and
sarl
scas
sub
das
pop
ret
rcr
movsl
push
push
lock
adc
into
fwait
mov
sub
xchg
mov
cmp
dec
adc
fnstcw
clc
pop
jb
std
fcmove
js
mov
sbb
lods
mov
cmp
xor
inc
mov
vcvttpd2dqy
mov
stos
push
mov
fdiv
pop
ss
inc
repnz
cmp
sbb
xor
mov
xchg
jns
xor
lock
jmp
movsb
outsb
dec
push
loop
pop
iret
push
pop
mov
iret
mov
mov
call
adc
sbb
add
add
xchg
lcall
ret
jnp
add
aad
sbb
movl
leave
movsb
icebp
mov
xlat
les
pop
or
inc
xor
insl
xchg
pop
subb
scas
popa
or
and
das
cltd
ficoms
xchg
std
inc
push
add
pop
int3
mov
sub
dec
movsb
sbbl
arpl
dec
jge
int3
mov
daa
in
lods
out
cmp
mov
les
xor
sub
fisttpll
push
sbb
xchg
std
sahf
sbb
jb
cmpsb
rcll
rclb
notl
or
dec
test
mov
xchg
push
ja
pop
lea
aad
mov
push
push
push
mov
repz
pop
mov
into
mov
lds
lock
sbb
pop
add
xlat
jg
iret
inc
xchg
ret
out
inc
lea
lds
gs
sub
js
leave
push
lcall
mov
add
lods
fimull
adc
gs
mov
adcb
push
mov
dec
popf
aas
lods
mov
cmp
push
in
jne
adc
sarb
push
mov
xor
push
or
and
incb
mov
lret
dec
cmpb
add
not
add
movsl
push
push
rorl
pop
inc
sbb
add
or
cmp
and
jecxz
cltd
cltd
add
fnstenv
fmulp
bound
lods
addl
lret
lret
aam
in
imul
mov
and
dec
adc
inc
scas
rolb
in
mov
xor
xor
push
addb
xor
fst
scas
dec
movsb
add
out
stc
negl
inc
mov
push
inc
arpl
or
xchg
cmp
jecxz
in
mov
sbb
push
sarl
out
ja
xchg
xchg
aam
enter
sbb
jo
pop
mov
push
into
pop
xor
imul
mov
mov
push
and
adc
mov
cltd
lea
adc
jo
jge
pop
fmull
sahf
lret
cmp
sbb
adc
fstl
adc
out
test
jge
cmp
cltd
into
push
popa
push
jbe
call
in
clc
mov
shl
int
fwait
sbb
mov
jg
cmpsb
fisubl
xor
or
jnp
xchg
jno
or
bound
dec
jp
sub
or
insl
loopne
scas
cmp
add
testb
push
subl
es
sbb
pop
sub
cmp
hlt
xchg
out
sub
jne
cmc
lods
loopne
mov
aam
inc
xor
into
or
aaa
imul
mov
jne
pop
mov
aam
ret
jecxz
sarl
add
dec
dec
sarb
sub
xorl
aas
lcall
mov
xchg
scas
cwtl
sbb
insb
jp
je
hlt
and
or
bnd
ret
push
mov
stc
test
dec
movsl
jecxz
cwtl
jnp
jno
mov
mov
sub
jle
mov
sub
dec
mov
jmp
xorb
xchg
sub
push
mov
inc
mov
jl
push
sbb
or
push
out
sbb
push
mov
xchg
es
stc
mov
test
sbb
imul
nop
mov
fildll
and
adc
jg
add
pop
pop
stos
dec
push
dec
out
popa
lods
adc
mov
push
arpl
outsb
pop
shll
scas
xchg
xlat
xchg
push
lea
inc
mov
cmp
xchg
in
pop
gs
cs
sbb
mov
imul
ja
popa
inc
jg
add
testl
and
xor
int
push
repnz
pushf
pop
xlat
mov
jae
and
loopne
ljmp
dec
sub
xchg
or
cmp
and
aam
jg
fwait
sub
fnsave
adc
dec
push
or
xor
pop
movb
xor
shll
add
adc
cmpsb
lret
add
and
fstpt
fldcw
jle
xchg
push
adc
ret
and
sbb
xchg
push
push
pop
inc
cli
mov
iret
push
mov
inc
cmp
push
sahf
divl
pop
dec
xchg
dec
dec
or
push
pop
add
inc
push
mov
jb
jg
out
mov
cmp
std
cmp
movsb
cmp
aas
cmp
adc
mov
fstl
out
hlt
pop
jbe
mov
shlb
cmp
jno
adc
cmpsb
adc
mov
dec
loope
repnz
push
sbb
or
rcr
push
mov
add
cmpsb
movsb
or
repz
dec
pushf
or
mov
sqrtps
push
jmp
jne
in
pusha
sub
in
cmp
jae
xchg
mov
pop
adc
push
dec
in
hlt
push
fwait
pop
mov
pop
jle
sahf
cmp
lcall
sub
mov
loopne
push
dec
ds
outsb
push
psubusb
xor
pop
xor
dec
fadds
scas
sbb
lea
xor
xchg
sti
bound
xchg
rorl
pop
shrb
jns
out
mov
scas
jo
mov
mov
outsb
sti
jle
pop
out
push
cmc
das
imul
add
sbb
cmp
jno
jno
pusha
mov
dec
int
insl
rcrl
xchg
arpl
fisubs
cwtl
lret
popa
xchg
pop
js
fisubrl
sarl
data16
jmp
fimuls
stc
and
insb
lahf
adc
mov
jmp
mov
cli
outsb
out
add
or
add
push
popf
xchg
inc
outsb
mov
jo
jmp
ds
xchg
insb
cmc
cmp
and
inc
push
cmp
dec
fmull
pop
inc
into
jp
shll
add
nop
jge
outsl
xchg
dec
xchg
bound
xor
push
xchg
mov
iret
xchg
iret
pop
mov
sub
push
add
iret
add
add
xchg
test
or
insl
sbb
pcmpgtb
enter
pop
or
fcmovnbe
test
inc
jnp
mul
jns
popa
jo
mov
cs
cmp
lret
cltd
cli
ljmp
pop
aas
mov
rol
ja
cld
mov
call
xor
or
and
dec
jl
or
push
lods
dec
js
loope
cmc
push
jb
sub
pop
lods
inc
cld
insb
or
sar
mov
cmc
in
test
ret
xor
cmpsl
pmaxub
adc
mov
inc
jbe
add
add
rorl
add
cmp
pop
rcrb
addl
stos
add
add
cmp
lea
adc
out
mov
shll
testl
pop
or
scas
cmpsl
fnstsw
enter
xchg
xchg
dec
subl
mov
incb
outsl
jg
inc
lret
clc
lret
push
test
add
push
sti
loopne
mov
hlt
cwtl
push
fisttpl
subl
push
test
or
mov
or
and
hlt
xchg
push
cld
or
pop
jo
clc
icebp
mov
scas
addr16
inc
xchg
jne
daa
jge
or
in
inc
and
inc
jg
fsubrs
mov
rol
sbbb
fildl
lods
fistpll
xor
imul
add
xchg
jb
inc
push
inc
or
jle
dec
mov
cltd
cmp
aaa
push
jns
xor
lock
sti
das
std
imul
cmpsl
mov
xchg
outsl
mov
jmp
insb
sti
cmp
insl
dec
test
xor
and
pop
adc
or
fsub
pop
dec
fdivr
into
and
jb
gs
test
mov
pop
shlb
mov
xlat
js
ds
divb
je
pop
dec
adc
pop
dec
add
adc
jae
mov
rcll
push
fmulp
aad
fldl
addr16
aaa
call
mov
ret
repnz
pop
pop
insl
inc
clc
mov
pop
jo
adc
imul
rorb
adc
popf
xchg
in
inc
cmp
iret
pusha
cmp
icebp
mov
mov
dec
outsb
lods
mov
add
push
dec
push
pop
inc
decb
iret
dec
pop
mov
dec
clc
mov
jns
sbb
inc
or
sub
jecxz
sahf
test
mov
xor
test
adc
mov
imul
mov
mov
lds
adc
inc
data16
in
movsb
sahf
push
xlat
sub
mov
mov
clc
jmp
pop
pusha
loopne
lea
fidivl
cwtl
lcall
mov
and
test
jg
jp
adc
push
cmpsl
inc
push
int
movsb
in
and
fwait
dec
xor
and
and
in
add
or
test
xchg
xchg
ds
mov
cltd
push
out
cs
cli
mov
xor
jl
sub
push
mov
aaa
faddp
aad
cwtl
cli
inc
push
xchg
mov
test
push
xchg
pop
leave
loope
or
jmp
ret
dec
mov
je
xor
add
sbb
rcrl
xchg
or
jns
sahf
xlat
cmp
fistl
and
mov
mov
xor
es
lds
add
sub
loopne
inc
jno
aaa
jge
iret
jge
inc
stos
mov
cmc
cmpsl
or
in
sbb
clc
jmp
push
ror
and
adc
ja
jno
and
pop
loop
dec
fwait
pop
gs
leave
out
sbb
jecxz
xchg
mov
push
mov
mov
jae
mov
and
in
cmp
packsswb
cmc
aas
dec
ret
aas
cmp
adc
pop
cltd
cmp
jp
aad
fbld
and
fs
sbb
inc
push
fildll
mov
mov
imul
pop
ret
push
xor
xor
jle
sbb
add
mov
cmpsb
mov
movsl
rcr
loop
xchg
add
sar
jo
outsb
or
fst
into
jnp
sbb
outsl
adc
jp
adc
xor
or
inc
shll
push
dec
std
lods
aad
cmp
clc
ja
js
shlb
adc
test
je
iret
add
ficoml
push
inc
cmp
out
mov
push
ret
pop
xchg
movsl
fisttps
fisubrs
lds
cmpb
inc
cmp
mov
aas
std
scas
insb
cmpsb
cmpsl
mov
imul
xor
sbb
jnp
jae
lret
sub
xchg
roll
cmp
push
push
loop
movsl
iret
adc
and
mov
cmp
loopne
imul
lock
sbb
aad
repnz
cmp
pop
pushf
mov
xor
les
mul
dec
leave
out
test
scas
ret
xor
hlt
or
stc
dec
push
mov
mov
popa
test
mov
jno
fs
mov
pop
cmpsb
xchg
loopne
and
in
jecxz
mov
scas
inc
add
mov
jle
insb
adc
in
pop
mov
int
add
cmpsl
xor
scas
xchg
cld
jp
dec
push
inc
std
cmp
call
mov
and
cmp
xchg
add
mov
je
stc
hlt
cwtl
xchg
jo
cmp
fs
mov
push
push
fcmovnb
mov
jns
lods
dec
dec
sti
add
jne
inc
test
push
fdivrl
mov
fwait
push
jmp
movb
xor
outsl
xor
inc
mov
sub
sahf
pop
xor
or
inc
cltd
push
and
cs
test
add
jne
sub
mov
iret
sbb
adc
pop
xchg
adc
jmp
test
push
xor
sbb
fistps
add
in
push
jb
mov
sbb
inc
dec
mov
adc
outsl
cltd
jl
dec
pop
loopne
movb
cs
push
pop
out
ret
add
int
add
push
stos
xchg
push
or
std
mov
mov
enter
in
jns
into
out
jmp
cmpsl
and
mov
repnz
or
adc
and
mov
in
inc
push
fcoms
adc
adc
jae
add
std
and
test
inc
cmp
cwtl
addr16
xor
xchg
fcmovb
lret
adc
ficoml
push
pushf
jmp
shr
test
pop
icebp
idivl
cmpsl
pop
cwtl
pop
nop
rolb
enter
push
aaa
out
loop
cs
push
movsl
mov
adc
xchg
repnz
lock
xorb
jns
mov
orl
sub
xchg
pop
popf
pop
scas
mov
sti
push
outsb
push
sarb
adc
je
int3
mov
xor
pop
pop
lock
or
push
mov
mov
lods
cwtl
mov
lret
or
cmp
jl
sbbl
mov
and
mov
std
mov
mov
pop
ret
popf
and
into
in
loope
jae
jp
leave
cmp
rolb
jmp
dec
cli
in
jle
sub
mov
adc
push
pop
scas
and
jle
sbb
mov
mov
dec
jo
jl
cld
out
jbe
outsl
cmp
inc
push
mov
add
cmc
inc
mov
adc
shll
out
ds
xchg
ja
lds
sbb
data16
in
cmp
jmp
add
cwtl
cmp
ds
es
add
sub
lds
and
mov
enter
and
push
push
fmull
and
xor
in
mov
lea
in
js
clc
cmc
je
push
push
std
and
nop
adc
add
rorb
aas
int3
lds
jg
pop
push
mov
test
iret
repnz
divb
fdiv
enter
jns
lea
or
mov
mov
sbb
jl
pop
dec
or
cmp
lds
lahf
cmc
mov
lret
lods
sub
lcall
jmp
xchg
add
in
divb
jmp
cmp
pop
cmp
xchg
dec
ficoms
push
movsl
cmc
in
ror
sub
jge
sarb
sub
in
and
push
mov
and
dec
and
push
fisttpll
xchg
sbb
jnp
popa
stc
fstpl
lret
pop
fs
xchg
cmpsb
loop,pt
inc
mov
lds
sarb
inc
mov
lods
mov
ja
out
lds
adc
mov
adcb
test
mov
inc
xchg
fs
dec
jo
in
xchg
aad
stc
push
jg
and
out
jge
leave
sbb
out
subb
dec
push
adc
adc
pop
ss
push
cli
jg
push
dec
mov
lods
push
cwtl
gs
dec
push
sbb
add
dec
sub
in
or
shlb
out
push
jg
cmpsb
fwait
in
xchg
jnp
pop
xchg
and
lods
push
icebp
aaa
data16
sub
js
xchg
inc
rcl
adc
mov
ficompl
outsl
cltd
cmp
dec
pop
add
adc
fnstcw
es
cmpl
or
mov
fucom
jae
out
mov
xor
cmpsb
dec
fcomip
push
push
xorps
je
xchg
pop
jns
adc
enter
xor
mov
xchg
push
push
add
or
je
jg
jg
mov
outsb
stos
push
addb
mov
mov
sarb
sbb
fwait
push
fwait
outsb
sub
divb
or
sub
xchg
outsb
jb
das
cmpsl
xchg
sub
aaa
iret
jge
incl
sbb
sub
xor
mov
pop
sub
imul
adc
or
add
mov
sti
mov
push
xchg
push
xchg
and
xor
xchg
loop
jae
mov
mov
loope
aas
bound
push
pop
sub
and
decb
add
pusha
xchg
bound
insb
mov
add
push
negl
in
mov
inc
mov
lcall
scas
push
iret
push
and
loope
add
out
les
ficomps
jo
jp,pt
mov
orb
subl
and
mov
cmp
in
add
jne
iret
sti
movsb
jo
mov
mov
je
dec
inc
xor
in
dec
lcall
jno
push
push
jmp
das
fsts
or
ljmp
jmp
adc
mov
fadds
ret
xor
mov
in
test
adc
lcall
and
mov
add
fimuls
daa
mulb
sbb
add
pop
push
xor
ss
loop
popa
mov
rorl
sbb
jge
push
test
scas
shr
fldl
loop
fildll
lods
loope
inc
call
xchg
outsl
ljmp
outsb
cmc
xor
jecxz
in
mov
pop
mov
push
cmpb
push
sti
ret
push
scas
inc
bound
enter
add
pushf
loope
fdivrp
seto
or
testl
lods
mov
mov
repnz
bnd
int3
xchg
mov
out
mov
loopne
pop
sti
lret
jp
adc
sarl
pop
adc
leave
jnp
rolb
enter
lcall
inc
aaa
dec
add
lods
frstor
and
mov
fbstp
mov
pop
repz
gs
xor
sub
icebp
mov
into
mov
lods
ss
fistpl
cmp
xor
lcall
fwait
popf
mov
xor
insl
cwtl
popa
mov
or
gs
cli
sbb
adc
out
in
sti
xchg
jns
adc
push
pop
jmp
sbb
push
jl
std
lods
mov
pop
push
je
add
mov
outsb
push
aas
cmpxchg8b
cmpsl
adc
and
out
mov
xor
sub
loopne
dec
lods
or
add
adc
fdiv
loope
scas
in
sub
mov
scas
jecxz
xor
cltd
test
mov
test
pop
jmp
rclb
mov
cld
shll
or
jne
outsb
xchg
sbb
pop
jbe
push
push
std
into
jo
xchg
pop
lcall
popf
repz
fcoms
mov
cmp
lods
sbb
xor
mov
mov
dec
push
rcll
jecxz
inc
mov
cltd
push
cmp
movsb
pop
or
pop
std
cwtd
inc
leave
lods
scas
lock
sbb
adc
bound
je
out
mov
into
sub
les
xchg
or
pop
mov
sarl
jb
inc
and
xor
xchg
mov
and
mov
mov
pusha
std
push
and
movsb
mov
pop
sbb
jg
test
aaa
fcmovu
arpl
and
lahf
mov
xchg
adc
and
adc
iret
pop
inc
mov
xchg
push
cmpsl
daa
dec
inc
sbb
jecxz
xchg
add
cmpsl
stos
push
pop
rsqrtps
lcall
mov
jne
cwtl
and
xchg
cld
lods
push
xorl
push
add
add
xchg
jne
loopne
dec
or
add
push
cmp
popa
sub
rcll
in
sarb
mov
imul
in
adc
xchg
and
call
popl
xor
lea
xchg
mov
xorb
adc
lahf
andb
das
ss
sahf
sbb
push
cmp
add
fcoms
jns
jne
fdivp
xchg
nop
lahf
fmuls
inc
add
dec
inc
push
mov
sbb
jl
inc
inc
and
fnsave
adc
cld
ret
movsb
lret
pop
scas
cs
movsb
push
rcll
movsl
iret
shll
sub
cmpsb
mov
cmp
int
xchg
adc
test
jmp
ds
dec
mov
popa
dec
push
sbb
mov
add
stos
add
add
add
ja
aad
bound
dec
adc
lea
push
cmp
rcll
out
js
rorb
testb
cs
std
inc
test
cs
rcll
mov
pop
in
out
add
push
jne
pop
pop
mov
inc
das
stos
sahf
shll
bound
sbb
fwait
push
ficomps
push
cmp
xor
aad
mull
push
loop
je
xor
xor
push
sbb
ret
cltd
lahf
inc
adc
push
pop
jae
scas
sub
movsb
frstor
jns
out
mov
sbb
in
cmp
xchg
add
mov
in
push
out
cmc
out
fs
xchg
push
rclb
imul
fiaddl
jge
sub
add
roll
cs
dec
xchg
jnp
imull
icebp
out
pusha
push
call
or
mov
lret
bswap
pop
insl
mov
ss
cld
mov
fxtract
jbe
mov
rcrb
es
insb
xchg
pop
adc
cmp
sbb
aas
cmp
mov
movsb
leave
fists
push
mov
int
mov
sbbb
pop
cmp
xor
and
mov
outsl
cmp
fildl
sbb
jb
sbb
xchg
push
lcall
ss
push
pop
cmp
push
jp
ret
call
shrl
out
mov
jmp
outsl
mov
add
dec
or
mov
jns
daa
jno
mov
sbb
push
aas
lods
repz
aaa
fisttpll
sub
out
and
mov
and
loopne
sub
cltd
jnp
xor
mov
popa
repz
adc
clc
je
xor
mov
lcall
jae
ljmp
mov
or
add
xchg
adc
mov
xchg
mov
push
ret
movsl
push
lods
sub
or
dec
fldcw
shll
stc
push
icebp
sub
inc
or
fisttps
outsb
push
and
mov
iret
ljmp
cmc
icebp
adc
outsb
fdivl
bound
je
lods
inc
mov
dec
sahf
mov
loopne
push
cmpb
leave
inc
pusha
mov
test
jns
aam
cld
rorl
lahf
ss
jns
fdivr
lds
outsl
lahf
stos
loope
js
clc
pop
cld
ljmp
inc
cld
js
pop
and
cmpsb
pop
mov
sbb
mov
lret
lret
xchg
cmc
ret
dec
in
sti
dec
push
outsb
cmp
jl
cld
xchg
lds
jge
mov
mov
add
leave
mov
bound
jecxz
jns
int3
jno
add
jae
push
xor
lahf
jbe
sbb
dec
aam
and
nop
sub
fstpt
std
and
mov
lods
std
dec
jp
jg
fcmovnu
inc
push
dec
rclb
xchg
push
mov
cmp
aad
pop
inc
adc
mov
adc
xchg
jo
mov
cli
jl
das
or
mov
ret
dec
inc
mov
pop
aaa
inc
mov
es
inc
fldl
and
mov
test
aam
cmc
outsl
into
fwait
inc
inc
outsb
sarb
or
dec
in
cmp
divps
in
outsb
push
push
and
add
xlat
and
aaa
std
out
and
dec
int3
inc
jo
add
stos
add
add
or
mov
mov
roll
cld
shll
adc
mov
sarb
cwtl
dec
in
pop
or
add
lods
mov
jecxz
out
js
inc
push
pop
mov
movsl
js
les
cmp
rcll
lods
add
adc
mov
mov
rcrb
lret
hlt
mov
movsb
pop
mov
es
lods
mov
clc
fldcw
push
jae
pop
mov
loope
add
mov
xchg
loope
fildll
xor
pusha
ret
fcoms
inc
cmp
dec
inc
enter
stc
lcall
push
add
jmp
dec
mov
loop
addr16
test
popf
and
daa
out
nop
cmp
sbb
mov
and
les
icebp
mov
and
or
jge
dec
in
or
dec
jge
in
enter
pop
out
fdivs
push
movsl
and
sub
adc
lea
js
mov
stos
sbb
out
mov
adc
dec
cwtl
or
and
fdiv
cmc
test
xchg
hlt
push
jle
or
push
and
shll
sahf
sub
jnp
out
or
mov
ficompl
push
scas
mov
sub
or
push
bound
jns
lods
lret
aaa
add
and
adc
inc
enter
mov
inc
mov
push
xchg
inc
clc
sub
push
std
jbe
sub
or
daa
dec
add
cwtl
aam
cli
outsl
orl
pop
out
cmp
xchg
jle
rolb
sahf
lock
pop
pushf
push
inc
rolb
cmp
xor
popf
cmp
inc
sarl
hlt
cmp
xlat
mov
push
fdivrs
sbb
sub
int3
test
xchg
in
xchg
mov
push
jbe
cs
xor
xchg
pop
aas
adcl
cmp
mov
push
test
jbe
rcr
inc
and
pop
push
imul
sub
lods
fcomp
out
sub
jne
cmp
das
add
inc
pushf
lret
xchg
xlat
mov
push
push
push
push
rorl
sub
jge
mov
mov
push
or
vcvttsd2si
or
mov
pop
jg
push
sbb
popa
stos
jb
hlt
jge
ficompl
iret
dec
xchg
inc
sub
jmp
daa
cmp
outsb
jmp
xor
les
sbb
xchg
cmp
pop
mov
stos
stos
bound
loop
int
add
jle
aam
mov
push
and
jmp
insl
lods
lea
mov
in
pushf
dec
dec
pushf
mov
jl
mov
or
mov
in
dec
nop
cmp
enter
xchg
and
adc
rcr
pop
ljmp
or
testb
rolb
adc
jo
sbb
cli
repnz
in
inc
lret
inc
loopne
aaa
jl
xor
sub
leave
pusha
or
aas
insl
rol
test
push
lret
jl
outsb
out
sub
or
mov
in
movsl
rclb
jno
gs
or
jo
sub
mov
cmp
sub
lock
push
in
ret
cld
sbb
add
add
nop
int3
popf
fistps
lea
jmp
outsl
sbb
add
xor
dec
xchg
in
and
mov
sbb
adc
and
or
cmc
push
inc
jmp
jle
xlat
jmp
xlat
xor
or
push
test
ljmp
testb
dec
movsl
stos
pop
xor
dec
or
adc
in
jae
inc
mov
mov
sub
push
sbb
ret
clc
aad
imul
inc
inc
push
loope
xchg
gs
incl
dec
xchg
gs
pop
mov
mov
insb
les
insl
inc
dec
or
jle
out
mov
outsl
xor
adc
imul
inc
push
mov
inc
stos
ljmp
int
icebp
pusha
loope
shll
and
pop
scas
pop
dec
sbb
int
push
inc
mov
in
xchg
stc
adc
adc
out
push
hlt
jno
push
sbb
mov
sbb
or
repnz
andl
inc
add
cmp
add
into
std
sub
mov
cmp
cmpsl
jo
inc
sarl
jge
cmp
xchg
stos
mov
cmp
adc
clc
ret
iret
xlat
dec
push
rcr
popa
repz
mov
pop
sbb
jbe
xor
popa
mov
inc
es
inc
outsl
cmp
dec
ss
aam
cmp
cltd
cmc
adc
ja
aad
lret
popl
cli
inc
and
sbb
push
dec
dec
mov
pop
nop
ret
ss
xor
scas
sbb
icebp
jne
xchg
loop
sarl
fwait
ss
movsl
jmp
in
mov
mov
pushf
pop
mov
mov
stos
loope
push
adc
imul
in
cmpsb
cltd
imul
adc
in
int
out
test
push
cwtl
insb
mov
fs
pminsw
jno
cmc
xor
andl
jecxz
xlat
sbb
into
mov
jmp
inc
dec
mov
sbb
lods
in
push
jae
mov
mov
repnz
jg
ja
xor
jbe
inc
js
dec
daa
fdivs
mov
jg
push
inc
into
fbld
push
enter
rcl
and
cwtl
lret
cmp
aas
enter
sbb
jb
xor
mov
lret
shlb
jge
cltd
sub
mov
inc
aam
imul
pop
sarl
push
xor
test
jb
inc
pop
daa
test
ja
or
jmp
mov
sub
xor
test
stos
push
mov
mov
shl
cmp
sub
popa
fcmovne
adc
int3
adc
fucom
loopne
jbe
aam
dec
shrb
push
sbb
in
inc
loopne
rcrb
in
sub
in
outsb
idivb
fs
fstpt
xchg
push
mov
jo
pop
insl
inc
filds
xchg
adc
mov
jle
loope
adc
xlat
or
popf
sub
pop
addr16
mov
adc
and
mov
fcompl
outsl
incb
jle
fadd
pop
ret
add
lock
push
sub
shrb
js
lret
mov
hlt
and
pop
lds
repz
imul
sub
adc
jne
in
mov
insl
nop
fucom
pop
rcll
cwtl
add
loopne
cli
mov
pop
dec
fsub
std
daa
pushf
add
stos
add
add
sarl
mov
lds
out
andl
dec
call
jmp
or
aaa
mov
jmp
gs
loop
dec
out
xchg
rorl
pop
jae
lds
adc
pop
mov
mov
mov
pop
lret
adcl
addr16
jmp
add
and
bound
and
mov
jns
pop
inc
je
push
lds
fldenv
sbb
cmp
or
subb
add
push
out
in
pop
add
jecxz
xchg
or
or
not
fbld
fcmovnbe
xor
jb
jp
jbe
pop
inc
xchg
stc
mov
lcall
xchg
insb
xchg
mov
add
or
insl
out
rcl
enter
jg
jge
lods
mov
test
ret
pop
adc
mov
mov
lahf
iret
cmp
flds
push
clc
mov
addr16
aaa
jge
enter
mov
fistpll
push
mov
into
pop
out
xchg
jecxz
xlat
push
inc
add
sbb
cs
jge
rorl
xchg
sbb
inc
push
dec
cltd
int
fidivs
add
push
xlat
pop
mov
or
add
nop
xchg
arpl
adc
fsubrs
sub
mov
mov
scas
pop
cltd
sbb
mov
or
ss
loop
inc
shlb
push
lahf
adc
push
leave
cmp
je
and
popa
cmp
fmulp
cmp
push
xchg
clc
negl
pop
pop
push
cmpsl
ljmp
int
mov
jo
cmpsl
bound
cmp
cmp
stos
aaa
insb
pop
ret
add
mov
mov
sbb
ds
add
ja
cmp
xchg
test
dec
cmp
in
pop
lahf
mov
out
sub
mov
loop
sti
incb
push
dec
xor
sbb
lods
pop
in
pcmpgtw
sub
sub
dec
pop
xchg
dec
dec
popf
lahf
push
jae
pop
loopne
in
mov
rol
cmp
rolb
sbb
add
push
add
sub
cmpsb
icebp
cmp
in
loope
adc
push
push
mov
cli
test
shlb
out
add
xorb
ljmp
pop
inc
jne
xchg
ja
mov
jae
mov
aaa
mov
ss
xor
iret
mov
jg
test
mov
dec
xchg
lcall
mov
adc
xor
lock
cmp
inc
ja
lcall
lods
inc
ret
sub
sbb
jecxz
test
jmp
cmpsl
nop
pop
cli
sbb
sbb
es
pop
xchg
popa
pop
jecxz
and
dec
ss
addr16
out
adc
test
adc
lea
fs
pusha
aam
or
xlat
pop
popa
mov
es
xchg
ret
test
xorb
sub
sub
xchg
aas
xchg
or
pusha
or
jb
into
adc
mov
xor
repz
repz
xor
cmp
mov
dec
push
stc
jo
jae
adc
mov
inc
dec
lret
dec
cmpxchg
aad
ret
push
fwait
inc
and
push
sub
pop
mov
or
repnz
ret
iret
or
pop
mov
push
test
test
loope
out
in
in
push
fldt
add
int3
inc
fdivrp
out
ja
or
pop
cmp
roll
add
stos
add
add
js
hlt
mov
rorl
mov
add
mov
and
adc
sbb
outsl
scas
in
push
add
or
faddp
iret
push
cmc
aad
fcmovnu
fmul
add
pop
mov
or
sub
xchg
jp,pt
dec
dec
sbb
xchg
aad
subl
xor
mov
xchg
push
movsb
stos
xchg
addr16
addr16
ja
xor
shrb
xor
cmp
jmp
mov
ds
jno
jns
push
xlat
and
push
out
orb
pusha
dec
cmp
jno
pop
jne
addr16
xchg
test
push
cld
adc
jg
pop
xchg
mov
aam
fsubrs
adc
sub
and
je
jae
jne
xchg
mov
pop
arpl
pop
mov
popa
popf
loope
xor
hlt
sahf
inc
fisubrs
dec
inc
add
fiaddl
mov
and
pop
lods
lock
inc
mov
je
test
dec
int3
mov
je
in
enter
out
cmpsb
in
fld
adc
push
je
cmp
xchg
jmp
xor
sbb
les
pop
out
lods
inc
cmpsl
insb
shrb
insb
pusha
idivb
je
dec
leave
and
leave
js
mov
mov
gs
or
push
mov
cmp
sbb
jp
out
push
cld
mov
daa
test
subl
imul
jmp
push
mov
mov
out
dec
aad
or
adc
jo
jo
and
outsl
arpl
lahf
push
int
rcrb
xchg
out
clc
mov
pop
inc
cmp
jp
cmpsl
xchg
fildll
push
dec
cmpsb
std
ljmp
mov
movsb
int
in
stc
jnp
add
jns
dec
pop
dec
dec
into
lock
push
sar
pop
jne
dec
mov
push
sbb
add
cmp
push
pop
popf
das
loopne
outsb
ja
xor
adc
xchg
js
push
mov
cwtl
aas
lods
dec
sahf
loopne
repnz
jmp
xchg
fbstp
es
clc
das
cmp
in
divl
pop
jecxz
dec
push
mov
mov
insl
in
sub
loop
loop
jns
pusha
rorb
push
rcl
movsb
imul
or
pop
pop
mov
or
cmp
ss
add
imul
in
dec
mov
mov
add
mov
inc
movsb
push
out
loop
fdiv
and
pop
dec
xchg
mov
gs
push
stc
inc
dec
inc
subl
mov
pop
sahf
dec
fisubrs
xor
push
xchg
mov
push
in
add
scas
or
mov
std
mov
rep
mov
adc
xlat
dec
ljmp
sbb
mov
xchg
inc
xchg
xchg
or
leave
cs
loope
jb
popf
setns
sbb
mov
mov
mov
mov
lods
in
xchg
outsb
xor
test
clc
lahf
jb
ret
sub
xchg
out
lret
icebp
loope
mov
push
pop
push
jns
mov
or
shlb
sarb
std
xlat
iret
or
xchg
dec
push
xor
pusha
pushf
or
mov
adc
push
rol
push
xor
mov
pushf
cmc
cltd
adc
xchg
int3
stos
xchg
arpl
sbb
out
and
add
cltd
mov
xor
outsb
add
sbb
add
stos
add
add
fbstp
sub
popf
adc
andl
shr
sbb
jmp
sub
test
and
cmp
adc
sub
and
ss
sub
out
add
in
inc
adc
sub
dec
orb
lock
sub
sti
mov
lahf
sbb
jp
mov
cli
adc
xchg
mov
pop
ror
cwtl
jmp
ja
xor
mov
ss
add
je
mov
rcrb
sub
jno
dec
jae
mov
adc
ljmp
lret
arpl
jmp
mov
movsl
push
inc
sub
cmp
push
push
xchg
push
cltd
test
dec
out
hlt
addl
add
fiaddl
mov
dec
xlat
mov
xchg
sbb
mov
mov
jmp
movsl
add
jmp
mov
xchg
ss
add
ljmp
push
bound
mov
test
cwtl
sub
sub
pop
int3
xor
cmp
mov
mov
popa
push
lret
fimull
adc
test
in
imul
push
push
push
mov
and
mov
rcrl
in
adc
fistl
scas
push
rclb
inc
dec
je
push
cmc
fsubrs
jb
xchg
mov
repz
lret
dec
jp
and
fldl
out
cs
insl
fldenv
mov
insl
pop
out
movsb
in
into
jbe
xchg
xchg
jg
or
mov
jle
push
xchg
cmp
cmp
adc
stc
fbld
add
push
scas
dec
pop
icebp
mov
mov
xlat
mov
add
dec
jae
popa
mov
or
mov
cli
fidivl
push
or
sub
mov
aas
fcmovb
test
stc
add
iret
dec
jno
out
add
jnp
test
inc
add
out
aad
mov
xchg
xor
sub
call
loopne
call
pop
pop
orl
sbb
cltd
stc
cltd
inc
push
mov
jbe
fmull
xchg
push
scas
jb
lock
push
xor
cld
fwait
into
mov
imul
push
lret
mov
popa
pop
and
pusha
cli
sbb
fcomps
inc
rcrl
rcll
imul
out
sbb
bnd
add
and
mov
add
lcall
jo
popf
push
push
scas
iret
sub
in
mov
xchg
rcll
insb
jmp
and
dec
es
jle
xor
test
inc
dec
cmpsl
xor
aas
lret
lock
dec
in
icebp
ljmp
lock
dec
inc
sti
daa
adc
in
push
ljmp
int3
mov
mov
fnsave
fidivl
pushf
movsb
das
lock
out
sbb
push
into
xor
popa
mov
cwtl
jnp
sub
popa
dec
cmp
and
dec
in
mov
ret
cmp
arpl
mov
dec
xchg
jbe
xorb
pop
aad
gs
dec
out
adc
lret
cmp
mov
lods
inc
add
repnz
cs
das
flds
add
mov
mov
fsubrp
mov
adc
add
stos
add
add
popl
int3
mov
out
push
push
cmc
pop
cmpsl
hlt
and
loopne
and
pop
hlt
dec
or
or
leave
test
icebp
rclb
and
subb
andl
les
mov
mov
call
fildll
adcb
cmpsb
or
xchg
xor
test
fsubrs
cltd
cmc
and
jbe
mov
push
and
mov
ljmp
fcmovbe
xor
stc
ss
ficompl
inc
dec
stos
sub
arpl
inc
fldt
mov
int3
movsl
xchg
rcl
insb
insl
pop
xchg
icebp
stos
jbe
sbb
mov
ds
sub
andb
push
push
jmp
cmpsb
iret
int3
neg
imul
lcall
sub
xchg
jnp
jge
cmpsb
xor
arpl
loope
inc
jg
lock
sahf
jmp
lcall
lcall
xlat
aad
mov
call
mov
xchg
add
mov
sahf
iret
jbe
cltd
pop
popa
dec
add
enter
mov
push
jnp
outsb
mov
push
push
insl
adc
movsl
cmp
sbb
je
lret
test
sub
cmp
jge
gs
call
int
ds
lods
mov
std
push
sub
or
sar
shlb
and
in
xor
dec
adc
andl
or
xor
mov
addr16
and
adc
pushl
mov
int
cmp
mov
push
push
test
mov
mov
or
out
push
and
push
in
shlb
xchg
int
mov
push
jns
ss
imul
dec
cli
cmpsb
movsl
jns
sarl
push
daa
fldl
lret
jne
enter
fdivrl
clc
sahf
adc
into
ss
cmp
ljmp
cmc
js
xchg
movsb
mov
in
ret
mov
push
xchg
insb
gs
cmp
mov
xchg
dec
xor
shrb
hlt
scas
iret
add
fstpl
jne
dec
mov
fcoml
repnz
push
inc
push
popf
int3
jl
dec
dec
and
imull
inc
mov
icebp
dec
push
jb
jae
pusha
xor
mov
push
mov
xchg
mov
sub
pop
pushf
movsb
mov
jg
push
std
lcall
mov
fistpl
push
aad
in
sbb
jo
xchg
test
jg
add
ficoml
stos
test
stos
stos
mov
ljmp
in
les
mov
jl
das
divb
mov
gs
jae
and
sbb
and
cltd
xor
mov
pop
xchg
das
xchg
int3
and
cwtl
shll
mov
mov
add
pop
mov
insb
jns,pn
mov
add
or
in
pop
push
test
movsl
jmp
mov
mov
test
ss
pop
rcr
sbb
inc
mov
pop
sbb
jge
outsl
push
shl
mov
inc
scas
push
and
les
pop
mov
pusha
dec
push
dec
insb
xlat
adc
mov
pop
dec
mov
ret
dec
rclb
xchg
lock
dec
jnp
ret
xchg
sbb
mov
int
jns
pop
out
and
cmp
fmul
pop
test
add
dec
push
ret
mov
jge
cmp
in
sbbb
stos
add
stos
add
add
add
and
jnp
icebp
or
add
out
ret
or
fdivrs
mov
aas
xchg
jecxz
pop
popa
std
es
dec
mov
jmp
and
arpl
add
aaa
int
dec
sub
jl
scas
iret
fidivrl
js
movsb
movsl
sbb
out
hlt
sbb
push
xlat
das
or
int
sbb
sub
push
mov
movsl
sbb
pop
das
adc
movsl
inc
in
xchg
mov
in
mov
insl
pusha
dec
add
cmp
sub
nop
mov
mov
lcall
dec
xchg
inc
push
cmp
jo
sti
adc
sbb
adc
aam
ss
push
cltd
shl
lock
ret
pusha
movsl
mov
andb
and
cwtl
test
int
movsb
mov
mov
ja
jne
cli
or
xor
sub
mov
lds
add
sub
aas
sbb
pop
mov
roll
ja
std
imul
jo
inc
inc
mov
jae
enter
lea
inc
aaa
gs
mov
scas
test
mov
adc
loope
push
inc
repz
imul
inc
mov
adc
dec
leave
mov
mov
mov
dec
mov
cmp
shlb
loopne
addr16
cltd
mov
stc
xor
insb
ret
call
xor
in
sbb
dec
int3
mov
inc
jnp
add
iret
movsb
icebp
sub
jb
pop
push
or
jo
iret
sbb
adc
into
cmc
cmp
push
push
out
sub
outsb
gs
xor
insl
lods
fistpl
sbb
jno
fldenv
repz
sub
sbb
popa
mov
dec
xchg
sbb
jae
pop
mov
sbb
stos
es
jl
enter
daa
mov
or
mov
ljmp
lods
in
lret
push
xchg
dec
orb
inc
imul
push
out
ficoml
cwtl
mov
sahf
mov
and
inc
cmc
cmpb
daa
ret
aam
stos
clc
cmp
popf
mov
push
lock
push
push
aad
lahf
subl
out
sbb
sub
mov
sub
les
notl
mov
subb
scas
xor
cmp
jbe
out
loop
es
push
sbb
mov
sub
jg
imul
pop
jne
add
push
test
mov
xlat
inc
sub
adc
subl
dec
mov
call
data16
jbe
fs
xchg
out
adc
pop
adc
addr16
sub
add
and
arpl
outsb
rolb
jo
addl
push
iret
outsl
jbe
pop
jecxz
xor
cmp
aas
adc
mov
mov
pop
push
and
fidivl
xor
inc
gs
stos
pushw
dec
add
or
in
stc
dec
repz
jne
mov
mov
or
or
popa
jge
lcall
js
outsb
sub
xchg
mov
sbb
jns
xor
std
aad
jo
in
hlt
imul
mov
fdivrs
sarl
clc
pushf
dec
pop
pop
test
ds
in
popf
ret
imul
lds
dec
imul
insl
fidivs
sbb
in
jmp
lahf
jle
stos
xchg
sbb
add
add
cmp
push
cmp
pop
lock
out
or
mov
cli
pop
addr16
sahf
je
into
pop
xchg
mov
jbe
fnsave
lods
mov
mov
imul
shld
ficomps
mov
lods
scas
mov
clc
mov
daa
mov
and
lods
cs
mov
sbb
or
mov
adc
pushf
insl
adc
pop
xchg
lods
xor
addb
adc
lea
or
std
fcoml
pop
sbb
insl
insb
sub
in
jno
jecxz
sub
lret
sbb
xorb
mov
jno
lods
sti
jae
add
imul
iret
pcmpeqb
inc
popa
pushf
fbld
and
imul
push
jnp
jo
je
xchg
xchg
jbe
lock
cli
hlt
jg
jae
mov
pop
xchg
push
imul
neg
sbbl
je
xor
dec
mov
scas
pusha
mov
daa
jbe
jmp
std
stos
insb
add
cs
iret
loope
push
aad
xchg
mov
xchg
fwait
push
outsb
mov
jo
xor
iret
fistl
cmpsl
jecxz
mov
ljmp
je
cld
fs
scas
js
test
jb
xlat
sti
out
jl
test
xrelease
mov
daa
test
test
ficompl
sbb
dec
notb
imul
push
cmp
imul
jl
daa
int3
fldenv
imul
lock
xchg
mov
and
jl
out
repnz
dec
lret
inc
es
mov
pop
and
xchg
and
mov
mov
enter
add
call
lds
dec
jmp
add
inc
test
xchg
push
cmpsb
mov
mov
or
pop
cmp
out
lea
add
cmp
pop
ds
inc
loope
adc
fld
popf
aaa
ja
xlat
xchg
aam
lock
dec
arpl
sbb
insl
xchg
in
add
pop
out
dec
call
lcall
ljmp
loopne
lock
movsl
jae
mov
sub
mov
in
test
inc
jns
sub
lock
xor
push
nop
or
dec
sbb
adcl
xor
mov
gs
xchg
iret
jno
push
orb
mov
arpl
pop
gs
sub
ret
push
sbb
lea
fists
stos
push
xor
sbb
into
out
xchg
cmpsb
out
test
add
xchg
outsb
test
stos
push
inc
es
loope
xlat
ror
nop
jge
stos
push
mov
lods
dec
bt
leave
popa
out
out
mov
addr16
sub
lds
dec
repz
cltd
inc
clc
pop
cmp
push
pop
cli
inc
ja
adcl
mov
jno
fistl
pop
lea
imul
repnz
xlat
insl
xor
pop
mov
mov
xchg
jmp
sbb
adc
jnp
ror
lcall
dec
mov
push
cmp
sub
popa
aaa
cltd
rolb
mov
push
xchg
adc
inc
repnz
pop
cltd
call
add
add
mov
decl
mov
mov
mov
stos
add
add
add
mov
cmpsl
aas
inc
lock
call
add
shll
out
lock
imul
fdivrl
stc
loop
mov
and
xchg
bound
mov
movsb
xor
jmp
or
jle
test
dec
push
out
lods
mov
sub
lcall
cmp
sbb
xor
out
fcomi
xlat
sub
push
sbb
mov
xchg
lea
out
and
pop
ficoms
das
sbb
imul
lods
dec
dec
sbb
xchg
divl
les
aaa
mov
ja
sub
lcall
scas
xchg
or
pop
aad
mov
ja
cli
or
and
jl
insl
cmp
and
fisubrl
cmpsb
nop
clc
rcrl
jecxz
cld
outsl
inc
add
sbb
cmp
sub
nop
mov
push
dec
stos
in
xchg
adc
jnp
out
push
in
sbb
jns
jle
pushf
repnz
xchg
in
push
cld
dec
cmpsb
adc
pop
outsb
subb
mov
int3
stos
inc
mov
xchg
xchg
stos
repz
pop
mov
cli
xchg
lock
stc
stos
or
aaa
dec
test
popa
imull
sti
test
mov
lock
in
inc
loop
and
ja
and
test
jb
shrl
mov
stos
fdiv
cli
nop
jmp
ret
test
push
imul
hlt
mov
mov
sub
and
xchg
ficoms
subl
add
jp
or
stos
aaa
dec
pop
test
fstpl
mov
pusha
movl
stc
addr16
faddl
popa
pop
fs
test
movsb
add
insb
and
xchg
mov
add
aaa
ja
inc
push
sub
push
stc
and
mov
outsl
cwtl
pop
add
and
cmp
insl
aas
dec
jle
mov
mov
jecxz
adc
sahf
pusha
subl
mov
or
leave
dec
divl
fstpt
lcall
push
repz
jns
adcb
andl
cld
scas
xchg
cli
outsl
repnz
mov
and
ret
inc
addr16
rcrb
rcrb
sbb
notb
stos
in
rorl
clc
mov
inc
adc
jecxz,pn
xchg
jle
jmp
inc
lods
mov
sbb
push
cmp
pushf
int
cs
sub
outsb
in
pop
out
rolb
repnz
adc
int
jns
adc
popf
mov
lret
scas
pop
test
in
leave
rclb
sub
add
lret
test
fistps
popf
roll
pop
lock
test
subb
leave
rcrb
psrlq
roll
enter
jnp
dec
xchg
les
mov
mov
testb
push
push
jle
imul
inc
das
xor
hlt
imul
mov
js
test
xchg
popa
adc
and
add
mov
dec
inc
dec
mov
jnp
xor
pop
mov
lods
shll
mov
sbb
jo
rcr
fwait
dec
add
mov
mov
mov
sub
daa
dec
mov
bound
cwtl
sahf
add
lret
xorb
icebp
lret
aam
imul
xchg
lock
stos
add
add
dec
test
mov
push
sbb
jl
jne
cwtl
das
mov
or
push
fdivl
add
sbb
push
cmpsb
imull
clc
pop
lret
lods
push
outsb
adc
xchg
test
sub
push
jno
jbe
jno
or
outsb
test
ret
pop
sub
jbe
sbb
rcrl
push
ret
xchg
fisubrs
test
jmp
mov
and
stc
sub
dec
das
int
lcall
insb
and
adc
push
out
mov
cli
jne
out
cmpsb
sub
bound
fs
js,pt
cmp
fildl
lds
cld
mov
out
test
push
add
lcall
ja
xchg
mov
jno
dec
push
jmp
xchg
push
jecxz
stos
mov
pushf
cli
or
in
mov
adc
outsl
xchg
call
cmc
inc
lds
xor
pop
scas
or
inc
pop
pushf
out
mov
xchg
dec
das
cmp
dec
mov
sub
or
shr
jbe
fwait
stos
repz
insb
test
cmp
cmpsl
sbb
jg
sarl
popa
scas
xchg
nop
out
pop
push
cmc
pop
push
sbb
and
cmpl
daa
xchg
dec
les
dec
repnz
xchg
aas
sub
push
jno
and
testl
jp
xchg
add
fnstenv
mov
xchg
sub
test
mov
pop
dec
dec
push
cmpsb
mov
pop
jnp
push
ja
rcrl
gs
popf
dec
mov
and
mov
insl
push
dec
mov
ljmp
inc
jmp
lods
mov
mov
dec
mov
and
dec
subb
inc
jle
negb
xchg
outsl
flds
icebp
or
mov
dec
jle
loopne
test
inc
shlb
jl
and
sarb
test
mov
pushf
in
sahf
ret
fs
cltd
inc
dec
ss
lret
jno
push
fwait
daa
fmull
repnz
hlt
mov
lahf
repnz
ja
xchg
fsts
pop
sub
add
sbb
add
add
mov
mov
rcrb
arpl
fstpl
cli
add
out
jno
repnz
and
sub
fs
mov
outsl
lret
dec
or
mov
push
js
push
mov
pop
das
call
pusha
stc
loopne
sar
cmpsb
dec
jnp
rolb
adcl
dec
inc
or
adc
hlt
mov
push
popf
loope
out
fs
mov
ror
sbb
movsb
push
sbb
into
int3
sub
fs
cmp
cs
cmp
inc
jle
and
xor
xor
xchg
or
cld
lea
stos
aam
jbe
mov
xchg
xor
lret
lds
xor
ja
pop
jmp
mov
mov
repz
pop
and
call
out
xor
ret
xor
loope
inc
jge
jge
mov
xchg
pop
lods
test
jmp
int
push
and
out
insb
add
jne
cs
mov
lds
repnz
insb
xor
add
sbb
pop
jne
roll
adc
xchg
sbb
pop
mov
add
in
jp
jp
in
sarl
imul
add
add
ja
push
imul
aam
aaa
pop
or
in
outsb
imul
xchg
jge
sbb
stos
adc
test
mov
mov
pushf
shrl
inc
xor
clc
stos
dec
inc
insb
lock
xchg
in
stc
mov
ss
sub
in
mov
mov
pop
fildll
xchg
test
les
je
test
mov
jnp
jmp
daa
pop
pop
mov
rcl
or
push
into
sbb
in
cs
lret
jle
pushl
push
ss
cmc
shlb
scas
cltd
mov
sub
test
sub
sub
ds
hlt
fs
push
mov
enter
xchg
mov
jg
xchg
sub
lock
rorb
mov
dec
cwtl
mov
push
push
and
push
jl
xor
mov
inc
and
mov
inc
loope
es
aaa
sarb
pop
adc
xchg
enter
fwait
cld
pop
stos
jge
dec
add
movsb
xlat
test
int3
or
add
push
pop
out
sti
adc
and
cmp
push
mov
scas
xchg
sti
fcoms
dec
xchg
pop
sbb
sti
fcmove
sbb
mov
or
mov
dec
or
int
cmp
inc
mov
xorb
insl
and
or
loope
fdivrp
adc
cmp
push
icebp
jae
mov
dec
sub
xor
mov
aad
mov
std
cmp
push
fsubrp
call
cwtl
pop
xchg
mov
test
shl
mov
push
gs
mov
fs
in
ja
add
xchg
popa
jle
ret
leave
lods
arpl
cmc
int
adc
scas
pop
test
xchg
sub
test
js
jge
rcr
pop
js
shll
or
fs
pop
or
sti
xchg
test
xchg
ficoms
dec
insl
cltd
cwtl
int3
push
rcrb
add
jmp
lods
imul
pop
roll
ds
lea
pop
ja
cld
pushf
popa
ja
outsb
sti
mov
inc
mov
jl
sub
cmp
fdivrl
inc
or
jp
mov
cli
push
dec
jg
loop
cmp
sub
fbld
pop
out
scas
dec
rcr
sub
test
jp
inc
movsl
pushf
vpunpckhdq
sub
sahf
lea
jne
push
nop
loope
push
sarl
jmp
loop
daa
adc
icebp
je
push
shrl
dec
add
cltd
lods
push
jns
push
push
inc
fstpt
fwait
push
mov
rcll
jge
shll
icebp
test
lea
and
imul
adc
mov
cmp
aaa
leave
add
sbb
dec
jg
lods
cmc
sbb
adc
pop
xor
ljmp
jb
xchg
aas
mov
sarl
dec
mov
icebp
adc
adc
xor
inc
mov
push
sub
cld
pop
xor
out
sahf
mov
xchg
rcr
or
jb
pushf
adc
xor
pop
insl
add
or
inc
rorb
orb
pop
out
fwait
and
scas
pop
or
or
fwait
bound
add
mov
lcall
pop
aam
or
mov
add
clc
inc
imul
scas
dec
sahf
mov
loopne
es
insl
cmp
aaa
lods
fistl
lret
sbb
mov
cmpsb
mov
jle
enter
rol
xchg
push
jne
js
bound
or
pop
dec
sub
push
sti
je
dec
cmc
push
lods
cli
fimull
inc
cs
loop
das
pop
sbb
xchg
pop
test
pop
or
loop
daa
lea
outsb
popa
push
add
dec
inc
xchg
mov
sbb
repnz
aad
jg
mov
out
cmp
push
and
adc
out
das
xchg
mov
and
adc
and
scas
aaa
notl
movsb
aas
xchg
je
mov
xor
jecxz
movsl
mov
enter
cmp
incl
addl
cmpsl
add
pop
push
clc
push
fimuls
nop
xchg
jb
sub
push
popf
or
add
outsb
jle
or
xchg
addr16
add
dec
push
std
jns
xor
lret
jne
cwtl
stos
sbb
jle
mov
dec
mov
out
in
ja
test
xor
gs
adc
insl
mov
sbb
or
rol
lret
mov
mov
or
shr
cwtl
cld
and
sahf
mov
push
daa
mov
lret
mov
out
loopne
xlat
insl
push
fnsave
mov
daa
fcoml
outsb
jns
push
stos
gs
cmp
mov
mov
dec
fadd
add
mov
add
mov
push
fmul
out
fdivl
xor
mov
ficoml
scas
aaa
fdivr
or
daa
dec
leave
hlt
out
push
or
dec
cmp
out
pop
shl
and
lcall
jnp
lds
imul
sub
sub
dec
dec
aaa
push
push
arpl
enter
jge
daa
sarl
ljmp
pextrw
icebp
fwait
dec
push
addr16
jl
ret
push
inc
cmp
adc
jne
sbb
stc
sub
rol
lds
stc
lret
adcb
shrl
popf
adc
aad
and
or
mov
shlb
mov
hlt
icebp
js
dec
inc
rorl
arpl
sbb
jnp
lret
jo
mov
inc
aaa
ret
fwait
pusha
sbb
lods
cwtl
and
outsb
xchg
push
in
inc
fstl
sub
bound
rcl
pop
ds
out
repz
rorl
sbb
aaa
or
in
pop
and
push
dec
push
lock
mov
hlt
fidivl
xor
and
movsl
fwait
xor
dec
sbb
call
push
stos
pop
pop
adc
adc
jne
iret
insb
movsb
ss
test
jb
int
jge
dec
rcl
out
push
xor
adc
sar
ds
cmc
std
mov
aas
mov
lods
ss
mov
jae
mov
xor
jb
mov
enter
adc
sbb
cmp
xlat
ret
fdivr
sbb
xchg
dec
jl
in
icebp
and
out
aas
fidivs
xlat
lahf
jecxz
adc
dec
inc
ret
dec
push
dec
xor
sbb
pop
and
adc
movl
std
xchg
test
push
mov
das
rclb
push
push
mov
mov
cmp
mov
roll
stos
add
add
push
jecxz
divl
push
dec
les
mov
mov
inc
sub
or
cli
inc
dec
jns
sahf
add
push
aas
dec
push
arpl
cmp
sub
push
mov
fsubrs
or
ret
fldz
mov
leave
adc
mov
fcomip
xor
or
cltd
movsb
pop
int3
xchg
sti
add
std
xchg
das
pop
lcall
call
rcrl
mov
or
dec
mov
xor
fcoml
andb
jge
movsb
fwait
mov
jnp
rcl
mov
cmp
push
pop
int
ficompl
pop
and
iret
mov
jge
ljmp
cwtl
xchg
sub
add
daa
or
stos
or
clc
xor
cmp
add
add
mov
pusha
bound
mov
or
lds
rcrl
mov
jno
sbb
hlt
jb
lahf
xchg
dec
push
in
fcmovnu
mov
in
lret
mov
add
cmp
cmp
mov
in
inc
pop
in
cmc
mov
pop
cmc
sahf
xchg
test
and
cs
jg
sub
xlat
and
sbb
jmp
imul
aad
and
sbb
pop
subb
sbb
pop
hlt
pop
mov
aaa
loope
rclb
aas
jp
xor
cmp
push
popa
sub
sbb
cmpsb
sbb
mov
fmuls
xor
aas
or
push
ds
adc
xor
movnti
and
out
push
lret
push
sub
adc
stos
ffreep
filds
mov
adc
or
xchg
daa
xchg
add
imul
fisttpll
inc
enter
insb
andb
jg
sub
clc
test
add
cmp
stos
mov
inc
pusha
loop
jg
cmpsb
pop
sti
add
jnp
test
sbb
inc
jmp
mov
jb
rolb
jge
insl
icebp
divb
xchg
sbb
mov
jo
negl
leave
inc
mov
scas
xchg
jecxz
xorb
sub
mov
filds
shr
mov
dec
jae
sbb
popa
adc
icebp
and
push
sbb
cli
inc
js
cwtl
or
xor
testl
fldcw
jle
add
push
pop
lods
mov
mov
sbb
jmp
mov
jmp
imul
nop
or
mov
outsb
sbb
addr16
jmp
je
andb
jae
dec
push
repnz
add
std
rcrl
stos
inc
mull
sub
dec
dec
roll
daa
dec
push
cmc
jmp
lods
les
shrb
aam
xchg
and
jmp
mov
or
mov
mov
test
sarb
xchg
cmc
cmp
push
pop
add
xor
aad
jmp
dec
popf
dec
jp
inc
bound
pop
cmpsl
pop
or
adc
adc
or
mov
add
sbb
loope
rcrb
dec
push
add
or
sbb
jnp
inc
test
adc
fdivrp
or
pop
fucom
add
adc
cmp
fwait
out
adc
jp
jo
mov
cmp
sti
cmp
or
mov
add
mov
xor
jne
adc
stos
add
add
or
sub
je
pop
push
fs
jg
xchg
jmp
aad
rcll
inc
xlat
ja
ret
loopne
fcmovu
adc
sbb
jae
ljmp
mov
add
cmp
insb
push
jno
sbb
cmp
and
mov
add
divl
in
test
stos
clc
dec
dec
loopne
add
jo
rclb
int
pop
inc
pushf
aaa
dec
and
pusha
pop
dec
ds
push
cmc
pop
jmp
test
into
test
jmp
daa
mov
jle
mov
mov
cmp
push
jmp
gs
add
js
or
jg
pop
pop
out
into
ret
mov
ss
arpl
or
lock
or
and
scas
dec
jae
std
cmp
pop
idivb
cltd
jg
ficoms
outsb
inc
repz
push
lret
cmp
jecxz
ss
or
push
ret
or
jae
cmp
lea
cmpxchg
push
lahf
cmpsb
bound
repnz
shlb
fyl2xp1
mov
flds
cmpsb
xor
push
push
xchg
pop
out
sbb
shr
xor
jg
insl
sarb
inc
pop
out
sub
rorl
mov
lahf
test
and
sub
lret
es
sti
sbb
sbb
lock
bound
add
out
ds
mov
push
xchg
lret
popa
lock
dec
pop
mov
mov
mov
push
lcall
cs
shrb
movsl
xchg
addr16
gs
stc
xchg
xchg
jmp
je
fucompp
scas
pop
jg
push
lahf
scas
and
arpl
and
cmp
test
sarb
psrad
cltd
cmp
scas
dec
pop
jb
jle
add
mov
in
std
or
inc
adc
pop
lcall
loop
jg
out
inc
rcrb
and
and
std
push
loopne
sub
call
ret
inc
mov
xchg
lods
cmpsb
in
leave
xchg
mov
adcb
inc
mov
jne
insl
jmp
dec
bnd
cli
jnp
dec
pop
push
fwait
xor
adcb
xor
pop
cwtl
cwtl
loopne
stc
or
pusha
aam
mov
sbb
mov
or
mov
jle
ljmp
adcl
xchg
fcmove
pop
xor
inc
pop
pop
adc
aad
arpl
fidivrs
sub
add
mov
push
adc
mov
je
repz
data16
adc
mov
cmp
addr16
inc
cwtl
cltd
ret
fcmovnu
daa
loop
pop
repnz
or
aad
xchg
inc
cmp
jbe
out
xor
test
push
and
jp
out
mov
push
sbb
scas
test
push
inc
xchg
fisubrl
sub
sub
push
sbb
pop
cwtl
pop
lret
push
test
sub
jo
inc
outsb
jne
int3
mov
adc
and
scas
push
test
and
inc
sub
mov
dec
xchg
pop
sbb
ret
ds
les
out
sub
inc
push
mov
or
xchg
fwait
dec
test
pop
push
clc
iret
repnz
pop
aaa
test
add
and
add
cmp
jnp
dec
pop
iret
es
lret
add
sbb
cmp
cwtl
cmpb
cld
inc
jbe
sbb
imul
jb
inc
inc
cmp
mov
cs
adc
and
sub
or
ja
push
jmp
enter
and
lret
push
jge
or
in
xor
mov
movsl
imul
shll
fldenv
inc
xchg
adc
pop
outsb
pop
sbb
ds
in
pushf
stc
mov
out
pop
mov
dec
pop
lds
int3
dec
or
in
adcl
push
and
out
test
push
pop
push
adc
sarb
loopne
mov
ret
testb
inc
lods
ret
push
mov
idivb
xchg
inc
fwait
ljmp
mov
sub
ja
cmpsb
jo
arpl
lock
inc
xchg
xchg
inc
imul
aaa
jnp
push
jae
fimull
dec
cs
sub
jbe
mov
es
pushf
pop
mov
xor
adc
aam
lahf
sahf
pop
movsb
sbb
fidivl
movsb
adcl
inc
mov
add
pop
push
sbb
pop
jae
les
xchg
int
adc
jae
pop
sbb
pop
outsb
sub
xchg
out
lret
rcll
and
popf
push
in
adc
loop
add
mov
mov
cmp
jbe
sub
mov
rdmsr
xchg
cmp
fisubs
jge
jecxz
sbb
push
shll
sbb
psllw
jmp
xchg
xchg
insl
imul
mov
mov
sbb
pop
mov
ffree
add
add
inc
enter
in
xor
les
xlat
test
pop
mov
sub
and
test
jmp
adc
add
mov
jbe
dec
cmp
je
ds
leave
pop
call
sub
mov
push
scas
pop
repz
repz
adc
mov
movsb
pop
jnp
or
outsl
int3
scas
fisttpl
inc
or
adc
push
and
out
js
sbb
leave
push
mov
pop
push
pop
frstor
jg
sub
popf
insl
adc
stos
pop
imul
push
es
jmp
sub
movsl
mov
adc
or
out
aad
mov
mov
and
add
push
xchg
fadds
stc
cwtl
jbe
inc
sbb
cld
pop
inc
ficoms
and
jb
aaa
arpl
das
js
xor
add
adcl
iret
add
cmpb
lcall
adc
pop
mov
test
push
push
mov
outsb
call
jno
mov
sub
or
push
sub
testb
mov
dec
xchg
fcoml
sub
dec
lods
pop
sub
mov
mov
add
mov
inc
lahf
and
leave
test
cmp
stc
jmp
stos
loopne
out
cltd
cmc
mov
push
cmpsb
pushf
outsl
iret
sahf
adc
and
mov
arpl
loope
aaa
mov
dec
or
insb
ret
lds
jns
cld
popa
rol
pushf
sub
mov
push
or
mov
mov
pop
dec
xor
push
je
loopne
adc
cmp
dec
int3
loope
dec
push
xchg
sub
jmp
or
scas
jmp
popa
mov
or
shlb
stos
add
add
mov
dec
sbbb
pop
fs
xchg
push
pop
adc
cmp
inc
lods
dec
jns
jbe
cwtl
js
sarl
popf
aam
jecxz
xor
inc
pop
mov
pop
test
inc
inc
sbb
mov
cmpsl
mov
mov
hlt
dec
insb
add
fadds
je
jae
in
out
pusha
cmp
pop
inc
stc
jl
dec
mov
xchg
dec
push
cmc
jg
mov
out
push
inc
pop
jp
jae
add
jns
sbb
mov
sbb
push
cmp
fwait
pop
lret
xchg
xor
psllq
jo
xchg
pop
push
jae
mov
pop
or
shl
out
addr16
mov
cmp
add
mov
add
test
jg
xchg
mov
xchg
incb
push
out
and
das
movsl
cmp
cld
enter
adc
mov
fisubrl
repnz
add
inc
sub
adc
mov
ficomps
ss
shr
jne
pop
lret
push
adc
jnp
xchg
dec
lods
mov
mov
xchg
neg
data16
loop
and
scas
mov
leave
cmp
inc
das
rorb
rcrb
push
dec
subl
ljmp
hlt
mov
add
repz
mov
dec
movsb
and
and
cli
inc
add
mov
and
push
dec
jbe
ret
push
cmp
inc
shll
lea
mov
xor
mov
inc
adc
push
das
push
jnp
loopne
dec
in
push
cmp
test
repz
jle
aaa
aaa
and
push
add
test
btc
cmp
mov
pop
xchg
cld
orb
or
push
add
xchg
repnz
xchg
loop
mov
fs
jns
cmp
and
pop
jno,pt
sub
inc
negl
jae
test
jno
xchg
movsb
cs
sbb
lock
mov
push
adc
sbb
cmp
push
add
mov
out
add
aad
lods
sbb
pop
jne
test
and
inc
enter
shlb
sub
pusha
test
mov
mov
mov
int3
inc
xorl
cmc
bound
test
aaa
ret
mov
cmp
lods
or
xlat
mov
inc
mov
mov
push
lds
pushf
adc
xor
and
and
inc
mov
pop
idivl
aaa
mulb
add
leave
aad
imul
and
sbb
push
jbe
xchg
lods
insb
mov
sbb
je
mov
cmp
scas
mov
cmp
pushf
mov
outsb
cmpsl
inc
and
psrlq
fidivs
xor
mov
rep
push
jle
fdivrs
mov
cltd
pusha
inc
shll
xchg
adc
xlat
mov
stos
mov
cmp
cmp
lahf
out
jo
movsl
inc
sub
je
lds
push
outsl
dec
jg
das
enter
jno
cs
pushf
mov
sbb
push
xorl
stos
inc
sub
push
xchg
mov
cwtl
icebp
push
add
incw
stc
inc
dec
add
popa
pop
dec
cs
push
mov
scas
imul
lods
sti
pop
dec
scas
clc
sbb
cmpb
add
addr16
jmp
add
in
test
push
cld
mov
and
add
stos
add
add
push
scas
mov
push
ret
scas
stos
fdivrs
xlat
pop
xchg
out
in
xor
pop
iret
test
push
enter
push
nop
mov
pop
push
cmp
hlt
popf
xchg
cwtl
mov
xchg
push
add
dec
rcrb
pop
rcll
cwtl
fdivrs
push
out
ds
or
int3
xchg
xor
jb
lods
rcrl
sub
stos
ret
and
test
dec
mov
xorb
sbb
push
pop
ljmp
out
cmp
xlat
lock
loope
sar
cmp
je
dec
inc
cmp
mov
cmovo
pcmpgtb
mov
jecxz
das
loopne
int3
clc
sub
fldcw
popl
and
or
or
xchg
adc
dec
jmp
ljmp
mov
shrb
add
sti
ja
lea
arpl
shrb
cld
std
mov
out
push
insb
dec
or
loope
ret
or
pmaxub
push
test
jg
sbb
in
pop
xchg
daa
fldl
cmp
mov
pop
stos
js
outsl
hlt
scas
cmp
loop
cmp
into
xchg
lret
cli
inc
xor
iret
push
call
sub
gs
push
fwait
stos
loopne
sbb
xlat
aam
adc
gs
cmp
mov
jne
rcl
pop
lds
test
inc
cltd
leave
inc
cmp
frstor
pop
adc
inc
mov
cmpb
mov
loopne
jo
sbb
jmp
int
push
out
in
xchg
int3
mov
ror
addl
mov
xchg
not
cmc
cmp
cwtl
sub
push
orl
stos
outsl
sbb
sub
jno
inc
pop
jp
enter
dec
scas
pop
fidivrs
imul
lret
arpl
lcall
adc
mov
dec
out
and
sbb
call
xor
or
mov
fsubrp
fbstp
cmpl
out
movsb
mov
jg
dec
cmp
xchg
pop
dec
popf
pusha
inc
xchg
inc
mov
shrl
negl
pop
cmp
call
mov
aad
cmc
das
or
int3
idivb
pop
lret
cmp
mov
mov
and
mov
subl
aad
xor
les
cmp
push
jo
jns
pop
xchg
fwait
jp
add
sti
lahf
add
int
dec
add
aas
or
stc
addb
int3
mov
jns
pop
sbb
sub
pop
ror
and
fildll
and
pop
mov
fmul
mov
xor
push
xchg
outsl
mov
addl
sbb
gs
jae
xlat
pop
inc
jnp
cmc
adcl
repnz
jb
fcomps
mov
mov
cld
inc
mov
loope
mov
pop
adc
je
sti
repnz
xor
sbb
xchg
icebp
mov
xchg
stc
jbe
sbb
pop
fistpl
mov
mov
xchg
adc
lret
mov
pop
pop
fmuls
jge
mov
pop
shll
mov
dec
repnz
stos
das
lds
add
leave
popf
lret
popf
pop
xlat
loope
fs
push
adc
roll
add
aam
in
bound
aam
imul
fwait
std
lock
ds
stos
out
stos
push
mov
lds
sub
lret
inc
in
iret
mov
xor
cli
aas
clc
adc
sbb
mov
gs
imul
test
inc
pop
pop
arpl
movsb
cmpsb
fsub
cmp
cltd
adc
xchg
mov
rcrb
xor
sub
push
aaa
repz
lds
nop
pop
gs
addr16
xorb
pop
jmp
stos
mov
aaa
push
cwtl
or
sbb
mov
and
jnp
dec
mov
sub
cli
dec
repz
out
dec
jb
sbb
std
iret
sahf
adcb
xchg
pop
lds
xor
add
jns
inc
or
jecxz
cmp
sbb
repnz
ljmp
out
dec
mov
mov
notl
push
cmp
pop
inc
lods
and
mov
xchg
fld
xor
sub
ja
aas
push
lock
hlt
mov
sar
arpl
jg
inc
jno
sub
cmp
fldcw
nop
mov
push
mov
or
jecxz
lea
arpl
out
dec
and
stos
das
push
sahf
xor
add
mov
movsb
jg
cs
jecxz
push
jmp
push
xchg
jecxz
sbb
or
xchg
sub
shr
leave
cmp
arpl
cmp
mov
daa
jb
push
movsl
pushf
dec
cmp
in
dec
pushf
xor
lods
mov
sbb
sub
mov
mov
xor
mov
jecxz
pop
cli
sbb
jns
pusha
sbb
inc
aaa
dec
sbb
jne
sahf
cmp
jbe
lret
nop
fnsave
push
out
pop
cmpsl
mov
ss
jae
pusha
aaa
lcall
jg
dec
adc
inc
clc
std
add
ret
jmp
jb
sahf
rol
mov
arpl
inc
xlat
pop
xor
push
pop
in
loopne
mov
dec
sub
ror
inc
bound
loope
cmp
lods
dec
lcall
inc
jecxz
dec
inc
inc
inc
outsb
or
and
cmc
std
mov
stc
stos
cmp
insl
out
dec
push
in
xchg
pop
enter
ja
scas
pop
nop
ljmp
lea
scas
sub
stc
or
dec
js
aas
push
int
rcrl
frstor
outsb
push
mov
lods
jae
dec
adc
mov
dec
stc
hlt
lahf
arpl
cmc
cmpsb
rcrb
cltd
xchg
fcoms
sbb
out
inc
mov
push
das
or
xor
adc
mov
xchg
addr16
int3
icebp
fcmovu
add
scas
jecxz
je
mov
stos
fisttps
mov
hlt
stos
std
imul
lret
inc
sti
mov
or
sub
push
fdivrs
js
adc
mov
int
and
inc
sub
test
js
mov
add
sub
repnz
and
ja
fildll
xchg
xlat
add
pusha
out
int3
xor
shrb
sbb
sbb
mov
aad
call
inc
and
std
insb
sbbb
dec
xor
mov
sbb
popa
cmc
jb
in
aas
imul
inc
nop
xchg
pop
lahf
sub
filds
lret
mov
inc
shlb
push
dec
arpl
and
loopne
sbbl
xlat
cmp
xor
sbb
mov
sti
lcall
dec
pop
popa
sub
scas
mov
add
scas
hlt
xchg
fdivl
test
fs
and
xchg
pop
mov
xchg
mov
jb
fnsave
dec
push
dec
lret
jg
pusha
ljmp
movsl
repz
test
ljmp
in
stc
inc
pop
jmp
jne
push
mov
icebp
dec
out
jge
adc
je
fistl
stos
test
arpl
mov
cmpsl
clc
or
pop
sbb
xchg
popf
pop
sbbl
nop
loop
loopne
bound
mov
pop
jg
fbld
bound
mov
cmc
lret
or
outsb
int3
xchg
into
scas
orl
mov
or
sbbl
jge
dec
and
sub
lods
fsub
or
xor
cmp
pushl
lock
adc
xor
gs
add
jne
lods
push
xchg
jge
xor
pushw
jmp
ss
push
and
add
out
arpl
shll
ja
cli
cmp
dec
dec
aaa
fsubs
lret
popf
int3
outsl
push
inc
les
lahf
add
dec
and
bound
mov
in
fldl
movhps
outsl
cmp
xor
jmp
outsb
jge
mov
neg
inc
jecxz
scas
movsb
xor
push
sbb
test
jae
test
cmp
sti
cli
xor
arpl
mov
pop
in
sub
xor
fimuls
out
or
push
adc
sub
push
rcrl
pop
mov
mov
mov
inc
inc
xor
fnstenv
mov
fsubr
stc
sbb
jg
xor
shlb
mov
decl
inc
lds
outsb
mov
les
xchg
addr16
jae
cli
and
jo
insl
test
xchg
cwtl
mov
sarb
xor
xchg
in
sbb
push
xor
xchg
or
jg
cmp
add
loop
sti
repz
addb
ss
xchg
scas
sbb
in
jecxz
adc
adc
ret
lods
stos
jp
cli
js
jge
ljmp
pop
push
int3
mov
jmp
mov
out
mov
dec
sub
xor
test
add
xor
test
les
fmuls
xchg
or
push
sbb
sar
and
jmp
sti
sahf
stos
scas
dec
int3
insb
loopne
jno
leave
aad
xchg
dec
test
jae
cmpsb
and
mov
dec
mov
std
xchg
add
movsb
mov
cltd
fiaddl
inc
mov
call
mov
push
fcomip
insb
fs
je
jge
pop
jbe
out
push
scas
pop
sub
sbb
repz
add
jno
add
rclb
dec
mov
or
mov
sbb
je
mov
rcrb
cmp
dec
or
jg
fistpl
pop
adc
mov
fsubs
addr16
int
lds
insb
lahf
add
lods
xor
lock
lods
mov
add
bsf
repnz
cmp
flds
add
ss
lods
jp
jmp
xor
jae
xor
loop
push
data16
decl
std
or
add
stos
add
add
mov
dec
scas
cmpsl
push
in
js
cmp
sbb
lea
and
icebp
jp
fld
add
out
sub
insl
sbb
pop
inc
or
inc
add
pusha
mov
pop
scas
xchg
mov
dec
ffree
es
cwtl
ret
sub
jl
cmp
jge
fldt
inc
xorl
adc
fidivrs
mov
sub
xchg
or
jp
inc
lds
mov
xchg
mov
and
ljmp
pop
hlt
loopne
pop
jp
orb
addr16
jecxz
push
lret
arpl
adc
cmpsl
push
add
out
cld
jmp
aas
and
mov
pop
push
xchg
xchg
pop
jbe
mov
hlt
sbb
jmp
neg
and
sbb
sbb
push
in
test
add
jo
lods
mov
mov
and
jle
fs
cwtl
xchg
leave
mov
dec
inc
out
jge
jle
cmp
or
daa
jne
aad
pop
movsl
in
jmp
fidivl
addl
inc
xlat
out
loope
lods
mov
aas
cmpsl
pop
aad
in
adc
hlt
sub
pusha
xor
rcrl
idivl
jl
pop
push
stos
sti
pop
and
sti
and
push
roll
fdivrp
add
iret
es
fisubl
fsubrs
or
mov
into
sub
add
inc
add
stos
les
shlb
xchg
adc
xchg
mov
pop
repz
test
inc
dec
mov
push
jl
jg
mov
call
outsl
enter
push
adc
xchg
mov
in
mov
lgs
dec
or
inc
movsb
popf
jbe
je
dec
cmp
mov
test
addl
push
push
out
sahf
mov
arpl
ljmp
insb
movsb
pop
pop
inc
cmc
nop
mov
in
int3
push
movsl
jmp
jno
dec
mov
ja
imul
in
das
daa
add
rolb
aas
das
push
inc
movsl
lret
ljmp
jecxz
in
sbbl
jp
test
jae
or
cmp
xor
test
lret
dec
and
popf
xlat
adc
arpl
aad
bound
sbb
adc
or
mov
push
dec
frstor
gs
cmpsl
lock
jmp
les
sahf
push
out
jl
cmp
popa
jle
mov
test
arpl
ds
push
lcall
inc
jp
sbb
adc
rorb
fstpl
xchg
xchg
cs
or
mov
pop
rclb
add
sti
sbb
cs
mov
ret
mov
dec
fwait
jae
push
dec
inc
xchg
jmp
xchg
cmp
dec
int
scas
out
sbb
dec
les
addr16
mov
sub
xor
or
mov
mov
mov
cmp
aas
inc
test
insb
cltd
xchg
push
call
stos
daa
jae
dec
dec
sub
mov
insb
or
decb
lcall
xor
xor
ret
xor
xor
sbb
cmpsl
push
xchg
mov
es
xchg
inc
mov
xchg
shl
mov
jno
add
mov
insl
sbb
shlb
mov
fwait
add
into
psrld
rcr
fistpll
push
add
add
stos
add
add
inc
mov
int
out
hlt
mov
sub
fcompl
cs
flds
bound
push
popw
push
popf
lcall
mov
cltd
add
cmc
mov
gs
push
hlt
sub
imul
in
sbb
push
pushf
int3
pop
in
pop
insb
out
insl
sbb
cmp
adc
outsb
clc
cmp
into
je
push
mov
adc
out
jns
sub
out
xchg
mov
dec
stos
sub
ds
pop
dec
mov
mov
jmp
adc
xor
cmc
shrb
hlt
lret
xor
aaa
call
mov
mov
inc
sub
das
add
push
xchg
loope
pop
mov
cmpsb
mov
je
outsl
sti
popa
addr16
and
jge
jbe
or
adc
movsl
xchg
inc
xchg
pop
repz
push
xchg
push
psllw
fdivl
cmp
fnstenv
adc
adc
cmp
push
pop
mov
dec
rclb
push
mov
shlb
in
push
inc
cmp
inc
mov
in
testb
xchg
dec
loopne
sarb
adc
inc
aad
xor
sbb
jne
mov
push
mov
ds
insb
daa
popl
jb
mov
or
fwait
mov
jno
outsl
and
shr
scas
mov
push
leave
inc
mov
sarl
or
mov
xor
cli
inc
daa
pop
xchg
sbb
in
mov
xchg
enter
and
push
shll
fdivl
push
rcr
fs
inc
sub
pop
mov
add
sub
out
dec
cmp
sub
mov
xor
adc
mov
xchg
inc
icebp
loopne
pop
insl
ljmp
out
add
xchg
sarl
es
sbb
mov
and
lret
jp
inc
add
adc
das
in
sbb
dec
in
icebp
in
test
and
jns
pop
xchg
cmpsl
dec
adc
divb
push
aas
add
lods
mov
xchg
aas
xor
xchg
inc
lahf
sub
sbb
inc
into
stos
push
lods
dec
hlt
push
popf
inc
jnp
add
mov
mov
push
cli
and
test
push
or
inc
inc
loope
add
popf
aam
mov
adc
pop
ds
add
dec
jo
popf
lock
sub
stc
xor
xor
push
sub
sbb
popf
in
dec
mov
pop
jmp
mov
fsubl
jo
ret
dec
aas
test
or
ja
jecxz
pop
rclb
fwait
out
out
pusha
mov
mov
or
cltd
jns
fdivl
mov
adc
push
jmp
loopne
xor
mov
fnstsw
or
push
mov
jnp
fstl
and
pop
xchg
fldl
iret
inc
mov
int
cmp
mov
jno
sahf
push
and
dec
push
sub
xchg
hlt
or
xchg
rcrl
test
dec
sti
jmp
xchg
notb
cmp
sbb
fld
xor
in
inc
sub
clc
xchg
mov
pop
shl
clc
ret
xor
icebp
or
jne
in
out
cmp
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
ret
or
stos
add
add
dec
pusha
fdivrp
or
mov
movsb
jg
call
int
adc
rorb
push
and
and
dec
ljmp
out
sahf
in
test
adc
mov
pop
jp
shrb
nop
int3
sbb
fidivl
jecxz
popl
les
dec
pop
pop
in
icebp
out
pop
xchg
ret
push
iret
push
call
inc
cmp
into
mov
mov
adc
add
add
jmp
popf
add
leave
addr16
fnstcw
mov
enter
dec
sub
mov
dec
jne
sbb
clc
jae
andnps
rorb
movsl
ret
pop
stos
lods
mov
dec
xchg
mov
sub
aaa
jae
dec
loop
mov
stos
enter
mov
daa
jecxz
shll
jp
pop
pop
fcoms
xchg
outsb
outsb
xor
ja
xchg
mov
mov
pusha
ss
test
and
xor
mov
ja
mov
mov
jo
nop
cmp
js
jo
xchg
and
shll
fisttps
cmpsl
xor
xlat
test
loope
push
lret
fbstp
and
push
pop
inc
es
pusha
hlt
clc
or
loopne
xchg
out
out
fildl
rcrb
xor
leave
mov
dec
mov
xchg
lret
fidivs
pop
jecxz
mov
fmuls
xor
leave
add
adc
adc
dec
fistpll
ret
jae
pop
mov
xchg
aaa
mov
je
mov
testb
dec
mov
in
rol
out
rcrb
adc
push
push
pop
cli
mov
fisttpl
pop
imul
loope
inc
test
lret
xchg
jne
dec
call
test
pop
add
and
inc
push
cmp
sbb
cmp
scas
sbb
pop
jns
notb
ljmp
fstpl
aam
lds
movsl
mov
dec
insb
into
xorb
xor
sbb
mov
leave
icebp
enter
jnp
xorb
xchg
dec
outsl
movsl
out
jecxz
scas
mov
clc
loopne
dec
adc
adc
pop
push
stos
fimull
sbb
shlb
shll
xor
inc
xor
cld
pushf
push
in
int3
pop
clc
inc
in
sti
rol
pop
outsb
sub
call
out
inc
pushf
add
mov
mul
xor
mov
mov
inc
push
stos
ret
inc
test
lea
scas
sbb
xchg
dec
cmp
pop
int
push
adc
jnp
jle
or
push
and
pusha
negl
rorb
dec
cli
mov
mov
pop
mov
sbb
add
xchg
pop
xor
sub
ret
cmp
lods
clc
sbb
jo
cltd
std
pusha
mov
stc
std
repz
decl
push
dec
sbb
hlt
mov
sub
lods
mov
jbe
push
sbb
pushf
adc
xchg
and
jne
push
mov
sub
movsl
sbb
rol
out
mov
push
outsb
lea
push
aam
xorb
ret
mov
testb
mov
xlat
icebp
cltd
adc
ds
jae
in
add
outsl
out
and
jb
orl
sbb
in
data16
leave
loopne
subb
adc
loopne
ret
hlt
dec
dec
test
xor
or
stc
pop
push
xchg
imul
inc
std
cmpsl
nop
jecxz
clc
mov
and
sbb
ret
jg
mov
rorb
shlb
add
stos
add
add
and
inc
push
shlb
aad
dec
lds
pop
mov
mov
fistl
jp
int3
rcl
cmp
sbb
iret
ja
jb
cmc
sbb
lea
lahf
cmp
pop
dec
jbe
and
jbe
in
add
mov
leave
xchg
cmpsl
mov
xor
insl
loop
dec
mov
pop
push
and
aam
xchg
jmp
aaa
and
cwtl
xchg
or
lock
daa
pop
adc
aas
xor
enter
mov
das
cmp
jnp
aam
insl
insb
push
jnp
and
sub
decb
stos
cs
aas
dec
dec
or
lret
cmp
xor
xor
cld
dec
push
outsl
pusha
movsb
fstl
cmp
sbb
cld
es
xchg
fadd
add
xchg
or
lahf
leave
int3
dec
aad
ret
cmp
sub
dec
idivl
pop
push
jecxz
pop
lods
rclb
test
ja
testb
mov
mov
pop
out
es
sub
xchg
daa
lahf
pop
dec
jl
inc
loop
pop
adc
jecxz
andl
xchg
mov
stos
jb
xchg
inc
mov
jecxz
aaa
imul
lds
shl
xchg
adcl
jp
jmp
or
stc
jno
or
loope
sbb
idivb
mov
int3
cmp
scas
fwait
mov
dec
inc
inc
in
stc
lret
movsb
sbb
adc
sub
pushf
cmp
mov
fidivs
filds
push
and
inc
call
push
bound
shl
mov
lods
fadds
add
mov
mov
inc
test
pop
lock
xor
repz
xchg
cmp
or
jmp
scas
cmp
inc
pop
push
lods
scas
movsb
fldl
or
nop
sti
or
repz
xlat
repnz
insb
sbbb
ja
xchg
mov
jnp
mov
fnstcw
testl
repz
arpl
pop
fs
loop
inc
mov
or
cwtl
iret
push
into
notl
out
lret
sahf
clc
cld
pop
and
mov
divb
gs
pop
pushf
or
nop
adc
rclb
pushw
testl
pop
popf
into
stc
call
nop
fdivl
cmpsl
sbb
gs
sub
fdivrs
ss
push
dec
in
sub
mov
popf
rorb
pop
mov
jbe
add
mov
adc
xchg
xchg
pop
pop
shlb
xlat
ret
pop
subb
cmpb
push
in
fwait
inc
ret
fimull
sub
in
fidivrl
pop
adc
out
sub
pop
or
adc
adc
jl
jne
ss
mov
mov
add
into
cltd
cmpsl
cwtl
inc
inc
test
push
test
pop
lds
fmul
divb
or
pop
push
movsb
xchg
leave
push
mov
sbb
pop
adc
scas
shll
sbb
iret
lcall
mov
cld
xor
out
jg
imul
in
out
dec
xor
pop
popf
add
inc
xchg
dec
xchg
mov
cmp
ljmp
add
stos
mov
aaa
out
scas
cmp
inc
jge
pusha
shrb
mov
sub
push
pop
bound
ds
push
int3
jo
add
sbb
popa
cmpsl
into
jl
push
sbb
iret
fstpt
sub
jmp
outsl
in
les
or
mov
mov
inc
cmp
and
add
roll
shlb
je
sub
mov
adc
lcall
adc
dec
mov
mov
or
xor
aam
and
js
inc
dec
enter
jl
sub
adc
dec
inc
inc
or
ljmp
lock
dec
or
mov
popa
mov
dec
pop
adc
xor
adc
lcall
rorl
out
and
outsb
cmpb
mov
sti
push
xor
sahf
add
add
sti
mov
mov
leave
jp
sub
xchg
out
gs
cmc
xor
cli
shll
stos
aad
arpl
xchg
popa
ja
xchg
ja
sbb
dec
dec
lret
loopne
int
rcrb
ds
pop
ljmp
xchg
faddl
jl
loopne
test
nop
pop
ds
xchg
dec
jae
mov
leave
andl
jnp
dec
sti
jo
stos
jnp
pop
or
inc
and
cld
icebp
decl
es
add
add
mov
aaa
enter
push
adc
ljmp
ja
testl
pop
fsubrl
pop
mov
enter
fcmovnbe
jp
jns
adc
imul
aad
pushl
xchg
inc
dec
loopne
int3
fistpll
mov
sbb
out
mov
stos
out
js
ret
test
pop
jmp
xor
add
sarl
std
loope
and
jecxz
xchg
pushl
xchg
popa
inc
ret
ret
xor
in
popa
sub
lahf
dec
mov
loopne,pn
sub
insb
test
pop
adc
push
jbe
cmp
mov
inc
xchg
push
sbb
mov
lea
js
push
jo
lcall
or
push
or
fdivp
movb
test
mov
adc
rcll
jbe
cli
adc
jmp
ret
xchg
lret
ret
nop
insb
pushf
xchg
mov
es
push
mov
or
or
adc
pop
into
aas
cbtw
dec
pushf
inc
sbb
rcl
inc
jle
fistps
pop
sbb
test
std
xor
mov
or
mov
mov
xchg
push
dec
and
cmp
aam
cmp
mov
mov
pop
or
std
xchg
dec
cmp
lahf
stos
dec
ja
pop
xchg
inc
fsts
iret
ss
fidivl
inc
into
in
sub
loop
testb
ja
pop
nop
lahf
and
popf
jp
addr16
mov
xor
leave
mov
fsub
adc
stos
sbb
int
sub
int3
push
rclb
shll
out
mov
jecxz
cmp
popa
cs
pop
mov
shlb
lret
cmp
sub
fdivrp
cmpsb
das
outsb
or
jbe
and
shr
and
pop
mov
ja
mov
dec
and
loop
xor
xor
add
sub
and
jg
push
adc
adc
js
add
stos
add
add
pop
jp
pop
in
in
aad
mov
xor
sbbl
pop
aas
sarl
popa
into
scas
arpl
jo
mov
data16
mov
sub
sbb
sub
andb
jg
fldl
sub
adc
daa
in
push
mov
int
fsubrs
aam
inc
wbinvd
dec
mov
daa
sub
mov
scas
insl
and
sbb
roll
lods
adc
cld
ss
pushf
lret
mov
in
xor
mov
pop
loop
xchg
push
push
pop
mov
dec
mov
in
xor
sub
jl
stos
mov
loopne
jno
fcompl
std
inc
jo
xlat
jl
push
test
sub
adc
cmp
xorb
or
mov
imul
or
inc
mov
iret
dec
jbe
outsl
fsts
lea
mov
ficoms
pop
push
cmp
pop
or
insb
mov
pop
lods
dec
pop
insl
pop
xorl
push
lock
sub
std
stos
fistpl
dec
sub
icebp
scas
fnstcw
cmc
pop
and
pushf
jb
sbb
je
mov
cltd
arpl
aas
lock
dec
pop
rorl
sub
mov
repnz
jne
sub
insl
jp
fincstp
dec
pop
xchg
jnp
test
push
lock
mov
pop
inc
mov
incb
shll
lds
lea
xor
in
mov
push
xchg
jne
rcr
pop
fstpt
cmp
mov
xchg
mov
imul
into
test
stos
xchg
pop
fadd
sbbl
fnstenv
clc
icebp
setg
mov
int3
pop
xlat
adc
xor
xchg
jg
pop
stc
xchg
in
push
add
sub
jge
xchg
dec
xchg
push
stos
scas
push
hlt
mov
mov
iret
outsb
pop
mov
add
mov
test
jge
xor
add
xchg
sub
push
std
mov
test
lods
push
mov
push
ficoml
or
fiaddl
gs
sub
pushf
aad
pop
xlat
scas
add
ret
js
sbb
dec
je
sub
push
sub
dec
xor
lds
pop
fldenv
lds
out
or
nop
mov
out
mov
push
adc
jne
or
cwtl
fisubrs
ret
insb
and
loop
nop
push
insb
cmp
cld
imull
push
jb
in
rolb
lcall
int
lock
xor
adc
ret
xor
cmc
pop
bound
bound
jnp
mov
add
data16
scas
pop
or
inc
rorl
aaa
mov
mov
inc
jb
in
push
mov
mov
lahf
adcl
movsl
movsb
jne
push
std
setns
insb
lods
push
loop
jl
jge
test
jge
cld
in
sbbl
inc
iret
xor
fisttpl
fs
cmp
add
push
jb
pop
mov
mov
push
sub
inc
movsb
xchg
cld
jg
add
out
aas
pop
jns
xchg
enter
xchg
imul
cwtl
imul
add
outsb
repnz
cwtl
out
mov
xor
adc
mov
fwait
sarl
add
loopne
cmp
mov
aaa
mov
icebp
add
stos
add
add
xchg
aas
rclb
adc
jmp
mov
adc
add
cmp
test
movsl
outsl
fidivs
cmp
stos
je
dec
mov
pop
mov
mov
rolb
push
jbe
pop
les
in
mov
adc
adc
cmp
push
stos
movsb
adc
cmp
aad
and
orb
dec
mov
test
mov
mov
lcall
cld
xchg
dec
lahf
lea
test
xor
jl
and
sbb
test
into
loopne
dec
ret
in
repnz
out
sarb
ja
mov
pop
mov
and
test
ret
push
mov
mov
inc
cmp
xchg
adc
mov
lds
rolb
les
adc
fldt
dec
xchg
jno
icebp
ficoms
addl
mov
cmp
daa
push
cmp
jo
jecxz,pn
add
sbbl
and
adc
sub
lock
and
jmp
mov
mov
imull
add
cmpsl
push
inc
cmp
addl
xchg
push
ret
bound
mov
sbb
push
in
test
sti
xchg
fwait
inc
push
xor
jl
sub
pushf
push
int
sbb
imul
movb
sahf
push
cvtpi2ps
sbb
int
lret
out
lcall
sar
shrl
jmp
scas
xchg
xchg
pop
gs
jae
xlat
inc
int3
int3
sbb
adc
popa
inc
or
adc
scas
sub
mov
jb
pushf
and
pop
pop
jecxz
jb
mov
push
jbe
sbbb
mov
int
lea
xchg
xor
popa
pop
add
xor
lret
jo
int3
mov
and
mov
loop
xchg
mov
rorl
pop
nop
test
cmpsb
addl
lods
int
sub
mov
sbb
push
push
jg
jae
sbb
xchg
gs
push
dec
jecxz
sbb
and
jb
dec
shll
movsb
xchg
test
clc
arpl
lods
ret
shl
or
sbb
xchg
outsb
nop
fwait
out
rcrb
push
cmp
movsl
mov
gs
cmp
mov
shrb
inc
jmp
je
in
adc
xchg
and
add
cmpsl
jg
lcall
mov
rcrl
cld
mov
es
mov
xchg
stc
enter
jmp
jb
mov
inc
pop
mov
iret
push
dec
bound
sbb
fnsave
mov
gs
in
adc
ror
and
dec
vpunpckhwd
push
mov
pop
jne
mov
and
das
enter
data16
xor
pop
add
and
neg
mov
adc
test
leave
lods
je
sbb
sarb
daa
fld
mov
in
cmc
xchg
fisttps
mov
xlat
mov
sbb
popa
add
scas
sub
push
jg
shrb
or
iret
sti
dec
fnstenv
insl
fcompl
push
pop
pop
pop
fimull
sbb
into
adc
test
imul
mov
mov
mov
mov
fbstp
mov
into
hlt
add
test
add
mov
and
mov
jbe
test
bnd
out
outsb
call
insl
mov
jb
in
fisttpll
inc
push
repz
sahf
cmpsl
push
mov
inc
movsl
push
and
add
daa
jg
iret
out
xchg
or
sub
sbb
inc
repnz
sub
insl
sbb
ret
mov
test
dec
xchg
lret
les
clc
or
xor
cmp
cmc
mov
add
mov
lahf
pmulhw
and
mov
test
mov
or
push
sub
push
popa
mov
mov
push
push
mov
sub
and
dec
adc
xcrypt-ctr
cmpsl
pop
int
xor
inc
mov
and
lea
call
pop
dec
lods
aad
ja
cwtl
sbb
int
fs
movsl
int3
enter
xchg
addr16
mov
ficoml
mov
pop
and
pop
cmpsl
fmuls
cwtl
dec
sarb
cmp
mov
and
dec
jae
mov
push
adc
inc
xchg
push
in
cmp
into
and
shrb
daa
sahf
lcall
mov
lods
sub
mov
stc
dec
call
pop
jae
loop
or
fidivrl
movsb
cmp
test
mov
dec
jbe
dec
lret
xchg
dec
imul
jl
pop
test
lock
mov
sub
adc
testl
jne
daa
out
insb
mov
cwtl
ror
mov
mov
mov
fcoml
dec
cwtl
and
sahf
in
dec
in
push
inc
lods
lret
jg
call
inc
cmpsl
mov
or
push
cld
xlat
xor
cmp
pop
xchg
and
shll
pop
faddl
sub
xchg
jne
lea
mov
nop
and
sbb
xchg
pusha
dec
pop
add
push
cli
add
fidivrl
out
les
mov
xchg
pop
push
movsb
and
fwait
mov
nop
out
data16
stos
shlb
sbb
dec
push
movsb
mov
or
loop
call
mov
lds
insl
xor
sub
mov
xor
arpl
push
cli
stc
mov
sets
cltd
popa
jbe
mov
push
cmpsb
sub
enter
fsubp
xchg
les
je
mov
cltd
pop
push
icebp
lcall
data16
int
mov
cwtl
adc
arpl
imull
or
push
inc
mov
pop
ja
jmp
push
aam
stos
lock
stos
xchg
lea
dec
cld
testl
pop
rolb
es
push
dec
cmp
daa
mov
out
mov
and
data16
add
mov
imul
or
test
and
add
cmpsb
movsb
inc
dec
insl
pop
arpl
leave
cmc
shrl
mov
jg
xchg
lds
mov
sbb
test
gs
cltd
data16
mov
data16
inc
inc
add
lds
push
dec
clc
stos
sbb
push
scas
xchg
roll
lods
xchg
pop
fstpl
sbb
or
lahf
pop
lahf
icebp
or
pop
lods
pop
jecxz
int
jb
rclb
