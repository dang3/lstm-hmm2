push
mov
sub
cmpl
jl
jmp
push
pushl
call
push
jmp
push
dec
xlat
sub
lods
shl
or
imul
dec
hlt
jmp
push
jmp
inc
xor
mov
daa
aaa
mov
dec
ds
and
fidivrs
xor
lds
shlb
and
dec
mov
leave
aas
aaa
movsl
roll
movsl
dec
cmp
mov
movsl
mov
dec
movsl
movsb
mov
inc
dec
rorl
iret
mov
ret
dec
sub
shlb
inc
leave
mov
aas
xor
lds
mov
xor
inc
mov
les
daa
mov
mov
ret
and
mov
push
xor
leave
mov
ds
ss
cmp
lds
daa
and
sub
mov
mov
xor
and
aaa
enter
dec
and
daa
daa
cmp
inc
mov
cmp
lret
leave
mov
mov
mov
mov
and
and
test
es
cmp
xor
xor
test
movsb
sarb
xor
push
xor
es
xor
and
test
dec
and
dec
inc
cmp
dec
mov
mov
inc
and
mov
inc
and
es
and
fisubs
dec
ds
dec
inc
movsb
inc
rolb
mov
xor
inc
mov
xor
inc
mov
mov
dec
and
inc
leave
push
mov
mov
ret
movsb
xor
iret
mov
and
mov
mov
and
and
inc
dec
and
dec
cmp
dec
movsl
aas
int
cmp
rorl
cmpsl
enter
cmpsl
leave
es
mov
mov
cmp
rol
les
and
daa
and
xor
les
and
iret
mov
inc
mov
lret
mov
xor
mov
mov
xor
les
mov
mov
mov
and
dec
mov
les
enter
cmp
inc
mov
mov
and
mov
dec
aaa
xor
and
xor
mov
inc
and
mov
mov
mov
xor
aas
xor
into
movsb
lret
and
and
cmp
int
mov
and
enter
mov
mov
dec
mov
into
mov
mov
movsl
mov
and
sub
enter
and
inc
aaa
daa
xor
xor
ss
iret
movsb
dec
mov
mov
ret
dec
mov
and
mov
dec
xor
mov
cmp
lret
fidivs
dec
leave
xor
mov
dec
inc
rol
and
mov
and
cmp
inc
xor
and
iret
cmp
rclb
vpmaxub
mov
dec
ss
mov
mov
and
inc
aas
iret
cmp
xor
daa
dec
inc
xor
ret
xor
lds
es
shlb
mov
fidivrs
daa
dec
mov
inc
int
inc
dec
xor
daa
mov
shlb
xor
sarl
dec
mov
inc
enter
xor
mov
and
mov
into
mov
les
inc
aas
es
mov
ss
mov
rol
mov
mov
inc
mov
mov
mov
ret
movsl
les
mov
push
movl
mov
mov
movl
jmp
test
xor
testb
call
push
jmp
leave
lds
test
cmp
cmpsl
mov
mov
mov
inc
mov
sub
into
iret
leave
dec
movsb
mov
dec
aas
dec
xor
mov
cmp
inc
shlb
rcl
cmp
mov
int
es
leave
inc
mov
dec
inc
mov
inc
cmpsl
daa
and
mov
mov
mov
mov
es
xor
movsb
xor
mov
mov
mov
ret
inc
aas
and
xor
mov
mov
mov
lret
rorl
dec
mov
and
mov
mov
daa
mov
mov
mov
dec
sarb
sub
cmp
enter
dec
dec
cmp
and
shlb
push
and
inc
and
aaa
mov
dec
mov
leave
and
sub
mov
iret
es
dec
mov
cmp
movsl
cmp
cmp
mov
mov
inc
mov
inc
mov
daa
mov
mov
and
leave
lds
dec
shlb
mov
ret
xor
iret
mov
mov
xor
mov
sub
mov
leave
and
mov
mov
daa
ds
int
shlb
xor
inc
mov
mov
mov
inc
and
lds
rorl
shll
xor
les
mov
inc
iret
and
mov
xor
rolb
and
mov
mov
aaa
dec
dec
mov
aas
xor
xor
mov
ret
mov
es
mov
xor
cmpsl
mov
mov
shlb
mov
cmp
dec
mov
inc
inc
mov
cmp
shlb
lret
enter
and
and
sub
xor
xor
inc
sub
dec
mov
lret
mov
mov
es
sarb
into
into
xor
test
mov
mov
dec
cmpsl
mov
cmp
mov
movsb
cmp
mov
mov
mov
mov
mov
sub
lret
int
mov
inc
xor
aaa
dec
es
aas
xor
mov
cmpsl
inc
xor
dec
mov
mov
sarl
sub
sarb
mov
dec
movsb
dec
into
and
mov
inc
xor
int
mov
mov
mov
cmp
movsl
es
shlb
inc
mov
mov
es
fisubs
dec
enter
rolb
dec
xor
mov
mov
mov
and
xor
iret
lret
mov
iret
inc
mov
daa
ss
fisubs
daa
mov
ret
mov
test
xor
fidivs
dec
fimuls
and
sarb
dec
iret
movsl
inc
inc
mov
inc
and
inc
movsb
cmp
lds
mov
mov
dec
dec
cmp
inc
int
leave
mov
ss
aas
mov
iret
and
movsl
mov
mov
mov
mov
push
rol
leave
leave
and
dec
ret
mov
mov
inc
mov
xor
mov
into
into
mov
mov
into
inc
dec
inc
into
mov
aaa
dec
mov
mov
and
mov
mov
inc
into
inc
ds
inc
fdivrl
cmpl
jge
jmp
push
call
mov
mov
mov
movzwl
mov
add
movzwl
xor
sbbl
jmp
jb
das
daa
mov
bound
jae
adc
idiv
jo
jmp
lds
int
and
sarb
dec
lret
dec
push
cmpsl
sarb
mov
dec
mov
mov
movsb
dec
dec
mov
cmpsl
inc
xor
and
mov
and
and
mov
mov
dec
mov
xor
cmp
mov
cmp
mov
mov
xor
cmp
mov
mov
mov
xor
xor
and
aaa
aas
dec
movsl
es
and
mov
dec
mov
leave
fisubs
aaa
aas
ror
les
aas
mov
xor
mov
and
mov
xor
leave
inc
mov
mov
lret
mov
es
ss
enter
mov
xor
es
mov
xor
shlb
rclb
test
xor
mov
and
aas
and
mov
mov
enter
movsl
mov
mov
dec
mov
xor
mov
cmpsl
aaa
mov
dec
ss
iret
cmp
xor
movsl
mov
fidivrs
xor
mov
shlb
mov
mov
mov
aas
cmp
mov
daa
aaa
xor
inc
mov
cmp
mov
dec
mov
ss
cmp
and
dec
and
mov
mov
mov
sub
lds
inc
and
daa
sub
cmp
ss
test
leave
into
cmpsl
cmp
and
dec
ds
and
ss
lret
iret
and
xor
mov
enter
ret
and
aaa
xor
iret
inc
dec
xor
sub
into
xor
rorl
and
lds
shlb
dec
and
into
mov
iret
cmp
xor
aas
mov
into
inc
dec
and
ds
and
daa
mov
lret
mov
inc
int
sub
ss
daa
xor
mov
dec
push
aaa
movsl
leave
mov
ret
mov
mov
mov
inc
daa
mov
mov
mov
mov
mov
fmulp
xor
mov
inc
and
fisubrs
mov
leave
mov
mov
mov
xor
cmp
xor
mov
inc
push
dec
mov
and
and
mov
shlb
iret
int
mov
mov
rcr
mov
cmp
iret
dec
mov
xor
enter
leave
movsb
iret
and
enter
ds
mov
and
dec
inc
mov
les
int
les
dec
dec
inc
into
mov
dec
cmp
and
inc
lret
sub
mov
xor
mov
inc
mov
enter
mov
fidivrs
mov
inc
mov
cmp
mov
int
mov
dec
xor
ss
lret
iret
mov
mov
test
and
aaa
dec
and
mov
mov
dec
inc
mov
lds
aaa
inc
xor
mov
sarb
dec
and
mov
push
cmp
inc
mov
mov
enter
ss
test
movsb
mov
and
and
push
mov
into
mov
xor
cmp
dec
inc
and
and
inc
movsb
fisubs
push
test
mov
dec
xor
mov
add
add
shrl
or
xor
inc
add
inc
clc
and
mov
mov
adc
mov
adcl
mov
mov
movl
mov
mov
addl
mov
subl
movzwl
andl
movzwl
subl
or
mov
addl
movzwl
sbbl
cltd
idiv
orl
mov
addl
and
subl
imul
movl
cmp
movl
je
addl
movb
addl
movb
movzbl
mov
imul
and
orl
mov
imul
movzbl
add
mov
and
mov
adc
sub
andl
mov
or
movb
and
movb
orl
movb
xor
or
sub
movb
mov
cmpl
ja
jmp
push
pushl
push
pushl
push
call
movzbl
mov
cltd
idiv
mov
sub
mov
sub
mov
xor
mov
movl
cmp
movl
je
movl
cmpl
jl
jmp
pushl
push
pushl
push
call
movl
movl
movl
movl
movl
mov
mov
mov
cmpl
jl
jmp
pushl
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
or
or
sub
mov
sbb
mov
add
jmp
mov
or
in
andb
push
add
jae
jmp
jmp
dec
enter
cmp
into
cmp
cmpsl
les
lret
dec
mov
mov
aas
mov
les
enter
and
and
xor
daa
enter
mov
enter
xor
aaa
dec
dec
inc
daa
mov
inc
and
dec
mov
dec
mov
movsb
test
sarl
and
mov
and
inc
push
ds
and
mov
mov
xor
cmp
and
and
mov
mov
sub
shlb
mov
iret
ds
and
inc
mov
push
iret
inc
push
mov
xor
test
and
xor
mov
dec
mov
mov
fimuls
and
mov
and
cmp
iret
test
lds
mov
fidivrs
sub
mov
and
movsb
sub
dec
inc
les
mov
mov
and
lret
test
mov
mov
cmp
test
lret
dec
xor
and
push
inc
fisubs
lds
daa
mov
cmp
mov
and
cmpsl
mov
push
les
enter
les
and
les
mov
into
dec
into
test
xor
into
mov
mov
inc
mov
mov
mov
cmpsl
sub
dec
cmpsl
sub
fidivs
inc
xor
mov
ret
fiadds
inc
movsl
dec
inc
cmp
mov
cmpsl
aaa
dec
dec
rol
rol
mov
daa
mov
mov
sarl
into
rorb
rol
and
dec
fisubs
cmpsl
mov
lret
lds
aas
inc
sub
mov
mov
mov
mov
dec
and
int
aas
ss
mov
cmp
push
mov
shlb
into
ret
movsl
mov
int
xor
mov
and
mov
ss
xor
mov
shlb
mov
push
mov
inc
cmp
xor
push
cmp
lds
mov
xor
mov
mov
push
ds
enter
into
mov
xor
iret
mov
and
inc
cmp
aas
ds
mov
xor
sub
inc
and
push
int
inc
xor
and
inc
aas
and
daa
movsl
xor
mov
test
dec
dec
mov
movsl
mov
mov
iret
xor
movsl
lds
xor
cmp
mov
dec
sarb
mov
dec
inc
mov
enter
leave
mov
cmpsl
and
mov
cmpsl
inc
and
and
mov
movsb
daa
dec
push
cmp
iret
xor
mov
inc
cmp
inc
mov
leave
and
leave
mov
ss
and
movsl
mov
and
mov
les
and
mov
movsb
mov
inc
ds
movsb
rorl
push
sub
mov
mov
cmp
xor
lds
xor
leave
mov
dec
mov
and
mov
cmpsl
and
rolb
mov
test
ror
and
cmp
dec
mov
movsb
test
cmp
mov
mov
shlb
aas
es
cmpsl
aas
ror
ret
ds
mov
mov
and
cmpsl
mov
fisubrs
cmp
and
mov
push
dec
mov
adc
or
or
xor
xor
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
not
in
shrb
sub
arpl
or
jmp
jmp
cmp
ret
and
cmp
into
mov
mov
movsb
xor
aas
mov
dec
int
dec
dec
mov
ds
lret
cmp
ret
dec
cmp
fisubs
inc
push
xor
mov
dec
xor
rol
mov
lds
mov
int
xor
iret
int
mov
and
aas
push
shll
and
xor
leave
movsb
cmp
inc
aas
lds
dec
les
dec
mov
ret
lret
sub
cmpsl
xor
lret
fidivs
shlb
mov
es
cmp
aaa
fidivrs
xor
enter
shlb
mov
and
xor
mov
dec
mov
cmp
xor
cmpsl
movsl
dec
aas
iret
dec
mov
shlb
lds
dec
aaa
fidivrs
mov
test
movsb
mov
cmpsl
mov
inc
les
aaa
mov
and
mov
push
xor
and
and
and
mov
xor
mov
aas
dec
xor
ds
daa
shll
int
movsl
mov
dec
mov
cmp
cmp
and
into
sub
mov
mov
ss
and
and
movsb
cmp
xor
inc
es
leave
test
mov
fidivrs
dec
xor
test
mov
mov
mov
xor
xor
xor
and
inc
dec
xor
and
cmp
xor
ds
xor
into
dec
and
into
and
mov
lds
xor
inc
mov
ss
rorb
mov
cmp
and
dec
mov
and
mov
dec
sarb
rol
and
mov
fidivrs
daa
inc
xor
mov
dec
es
xor
int
enter
xor
cmpsl
mov
movsb
ss
mov
shll
iret
mov
mov
and
rorl
dec
mov
daa
mov
mov
dec
xor
lds
fimuls
mov
xor
dec
mov
mov
rorb
and
mov
fiadds
inc
xor
aaa
rorb
ror
aas
push
mov
mov
iret
push
fisubs
aaa
xor
movsb
xor
movsl
cmp
mov
mov
cmp
mov
xor
mov
and
xor
ror
lds
and
dec
dec
mov
les
inc
dec
mov
lds
mov
xor
lret
mov
and
mov
mov
and
xor
mov
xor
dec
xor
mov
into
ret
mov
inc
aas
inc
lret
test
xor
dec
mov
enter
mov
mov
mov
test
and
leave
mov
movsb
and
and
shll
cmp
daa
rorb
dec
aas
xor
iret
leave
int
lret
xor
mov
mov
les
movsl
rolb
leave
mov
mov
xor
enter
movsl
dec
mov
and
cmp
enter
cmp
mov
cmpsl
mov
and
mov
xor
ss
mov
xor
enter
xor
inc
test
mov
iret
xor
dec
mov
test
cmpsl
mov
and
daa
xor
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
or
idivl
fs
data16
in
negl
push
jmp
mov
ret
and
push
xor
aaa
push
mov
cmp
mov
ss
cmpsl
mov
and
cmp
mov
and
mov
iret
enter
mov
mov
lds
mov
mov
movsl
lret
movsb
inc
mov
iret
rcl
dec
xor
mov
movsb
leave
iret
and
aaa
mov
push
xor
dec
movsb
movsl
inc
mov
inc
ds
sarb
cmp
cmp
mov
cmp
cmpsl
xor
test
aas
mov
dec
xor
dec
movsb
inc
fisubs
leave
iret
es
sub
cmp
mov
xor
cmp
mov
shlb
int
xor
inc
cmp
mov
push
inc
movl
mov
cmp
xor
mov
and
dec
ds
mov
xor
inc
enter
mov
mov
xor
mov
leave
movl
cmp
sub
mov
ret
inc
movsb
mov
dec
xor
mov
inc
dec
inc
aaa
mov
inc
mov
inc
inc
es
mov
cmp
into
and
mov
ret
mov
dec
dec
fisubs
inc
mov
inc
roll
mov
cmp
ror
movsl
dec
inc
dec
xor
cmp
and
dec
shll
int
and
mov
daa
ret
mov
es
enter
ret
mov
into
dec
cmp
push
mov
mov
cmp
xor
xor
aas
int
inc
cmp
mov
aas
mov
mov
test
aaa
iret
inc
and
ret
fidivs
mov
mov
and
cmp
sarb
xor
and
and
dec
and
xor
mov
aas
inc
mov
mov
movsb
movsl
dec
es
inc
mov
and
xor
push
mov
movsl
mov
ds
rorl
les
mov
inc
cmp
dec
push
dec
mov
movsb
lds
mov
inc
mov
xor
aaa
cmpsl
cmp
xor
mov
inc
mov
mov
aaa
leave
rolb
aas
iret
mov
lret
dec
xor
mov
and
ret
shlb
lret
rol
xor
ss
xor
ret
int
lret
shlb
dec
iret
enter
dec
and
ds
cmpsl
mov
leave
dec
sub
lds
es
xor
mov
xor
rclb
push
and
leave
enter
les
cmpsl
xor
aaa
mov
enter
mov
int
cmp
mov
rol
sub
mov
xor
mov
es
inc
cmp
mov
es
dec
xor
lret
mov
mov
inc
xor
aaa
mov
into
rorb
inc
cmp
dec
ret
sarl
dec
cmp
and
and
dec
mov
mov
dec
xor
enter
lds
movsb
mov
mov
mov
ss
leave
dec
inc
mov
mov
mov
mov
roll
inc
inc
iret
mov
mov
inc
aaa
shll
xor
xor
jmp
shrb
das
pop
xchg
pusha
orb
lods
pop
adcl
jmp
jmp
mov
and
iret
cmp
sub
es
xor
mov
mov
mov
inc
mov
xor
dec
cmp
rol
int
mov
aaa
dec
inc
dec
mov
iret
and
mov
iret
cmp
sub
ror
mov
ds
xor
enter
and
cmp
mov
push
les
xor
cmp
dec
mov
mov
push
cmp
inc
and
mov
shlb
mov
mov
mov
and
mov
mov
fisubs
aaa
and
iret
dec
cmpsl
mov
movsb
mov
dec
into
into
int
movsb
xor
xor
mov
dec
shlb
sarb
ss
cmp
ror
test
movsb
inc
xor
dec
mov
dec
iret
lds
xor
mov
mov
aas
mov
mov
aaa
cmp
leave
ret
xor
inc
daa
and
xor
leave
aaa
movsb
mov
xor
inc
xor
mov
mov
lret
daa
dec
mov
sub
xor
into
dec
and
mov
inc
movsl
dec
aaa
fisubs
dec
shlb
shrb
inc
inc
ret
xor
push
mov
cmp
rcl
mov
dec
xor
iret
ds
mov
inc
shlb
push
les
rol
and
movsb
movsl
mov
xor
inc
movsb
iret
mov
dec
mov
mov
daa
cmp
ds
ds
movsl
and
mov
movsb
mov
int
dec
push
and
xor
inc
and
mov
mov
and
xor
mov
xor
fisubs
iret
and
inc
cmp
and
xor
cmp
enter
es
mov
test
fisubs
mov
iret
shll
ret
mov
cmp
mov
and
movsl
sub
inc
mov
cmpsl
inc
mov
shll
and
int
and
mov
rol
cmpsl
mov
lret
aas
inc
sub
mov
cmp
sub
les
and
shll
cmp
mov
xor
mov
vmovmskps
xor
dec
mov
lret
mov
mov
xor
dec
inc
mov
inc
mov
and
cmpsl
mov
shlb
dec
les
dec
mov
cmp
xor
dec
es
lret
leave
xor
mov
daa
es
cmp
movsl
dec
mov
and
dec
mov
daa
mov
xor
movsb
lds
lret
sub
mov
dec
mov
xor
aaa
mov
aaa
int
inc
xor
mov
mov
sarb
mov
test
dec
mov
dec
mov
push
push
mov
mov
mov
iret
mov
cmp
ror
mov
mov
mov
les
les
xor
es
leave
xor
mov
into
aaa
dec
xor
test
iret
mov
and
aaa
and
leave
dec
and
les
cmp
int
and
cmpsl
inc
inc
cmpsl
les
dec
iret
mov
cmpsl
mov
shlb
test
aaa
mov
lret
dec
cmp
mov
mov
aas
into
mov
mov
xor
ret
rorb
or
mov
movl
movl
movl
mov
add
mov
shl
xor
div
xor
mov
sub
div
mov
mov
movl
jmp
adc
jl
xchg
cmp
orl
jae
jmp
jmp
mov
daa
dec
mov
leave
iret
cmp
xor
inc
into
dec
mov
and
mov
ss
cmp
xor
movsb
mov
xor
lret
xor
leave
mov
and
sarb
dec
inc
inc
dec
mov
lds
dec
aas
mov
sub
cmp
and
dec
ss
dec
mov
dec
aaa
inc
mov
movsl
mov
mov
shrb
int
inc
mov
cmp
cmp
mov
mov
fidivrs
and
ss
mov
cmp
inc
and
inc
aaa
inc
xor
xor
mov
and
iret
mov
movsb
dec
and
cmp
leave
mov
les
rorl
aaa
cmp
mov
xor
iret
movsl
leave
mov
mov
mov
test
enter
mov
dec
inc
inc
mov
rol
xor
ds
mov
aaa
mov
movsl
and
xor
and
mov
inc
sub
dec
iret
dec
mov
xor
dec
and
int
mov
inc
and
dec
xor
int
es
movsb
xor
push
cmpsl
mov
lds
mov
cmp
movsl
xor
mov
mov
mov
daa
cmp
mov
inc
mov
mov
aas
inc
shlb
daa
mov
xor
mov
int
aas
and
dec
xor
aas
iret
mov
es
dec
and
mov
mov
mov
dec
test
mov
ror
movsb
inc
mov
mov
ret
iret
aaa
and
mov
mov
cmp
int
aas
and
xor
and
mov
cmp
test
daa
xor
xor
mov
les
inc
mov
dec
lret
and
dec
cmp
aas
mov
mov
mov
sub
dec
mov
mov
inc
and
mov
mov
mov
rcr
xor
mov
rcr
and
dec
les
movsl
cmp
mov
cmp
mov
xor
xor
mov
mov
lds
iret
into
mov
mov
cmp
inc
mov
dec
into
test
xor
and
inc
sub
mov
inc
leave
test
inc
inc
sub
daa
xor
and
dec
mov
and
mov
mov
mov
xor
mov
int
cmp
lds
test
movsb
mov
mov
ds
cmp
xor
and
les
xor
rol
cmpsl
test
movsl
cmp
xor
daa
cmp
es
ss
xor
xor
rol
es
fisubs
movsl
and
sub
es
xor
mov
mov
mov
and
mov
inc
sub
mov
daa
mov
mov
dec
movsl
mov
dec
les
enter
xor
mov
mov
dec
mov
inc
dec
mov
iret
iret
xor
inc
and
into
mov
push
and
mov
dec
mov
xor
and
fidivs
lds
and
and
sarb
ss
shrl
xor
mov
in
loopne
add
movl
mov
mov
sub
and
jmp
xchg
clc
mov
push
mov
mov
pop
and
push
jmp
test
into
mov
and
dec
enter
mov
mov
mov
mov
and
cmp
cmp
ss
aaa
es
and
inc
xor
cmp
mov
int
shlb
ror
shll
sub
enter
inc
inc
inc
mov
push
mov
cmpsl
xor
ror
and
dec
dec
lds
into
dec
mov
cmp
mov
mov
mov
dec
lds
mov
leave
inc
push
mov
inc
xor
inc
dec
aas
leave
mov
and
mov
inc
leave
enter
test
mov
int
cmpsl
dec
inc
inc
xor
lret
cmp
int
inc
inc
mov
xor
dec
cmp
into
mov
sarb
mov
and
daa
inc
and
dec
mov
aaa
and
and
xor
fidivs
mov
and
dec
shlb
inc
and
daa
cmpsl
ds
xor
inc
dec
into
dec
mov
inc
shlb
dec
leave
mov
fimuls
inc
movsb
shlb
inc
mov
dec
iret
and
ret
inc
dec
iret
xor
into
shll
faddp
cmpsl
xor
ds
mov
movsl
cmpsl
aas
iret
les
mov
lds
movsl
mov
shll
test
ret
lret
ss
mov
push
xor
lret
fidivs
dec
mov
inc
rorb
int
enter
ror
ss
enter
ss
mov
ret
lds
iret
mov
mov
movsb
iret
daa
les
sarb
mov
mov
aaa
and
xor
mov
iret
xor
daa
dec
es
sarb
test
ret
inc
leave
lret
xor
mov
fidivs
lret
mov
cmp
cmpsl
push
push
enter
xor
ror
enter
les
mov
enter
xor
and
iret
es
movsl
inc
mov
lds
mov
xor
lret
and
cmpsl
mov
mov
leave
ret
movsb
inc
mov
inc
push
mov
es
mov
iret
test
and
rolb
ror
xor
mov
mov
mov
enter
mov
xor
xor
dec
and
shlb
mov
lret
movsb
mov
and
lret
roll
lds
xor
dec
mov
and
into
mov
mov
fidivrs
fidivs
sarl
dec
xor
shlb
and
mov
mov
mov
and
xor
cmp
mov
mov
daa
test
xor
push
es
mov
dec
fimuls
aaa
es
mov
xor
and
and
cmpsl
mov
xor
dec
xor
ss
test
lds
dec
mov
push
mov
aas
lds
aas
mov
leave
movsb
xor
xor
xor
cmp
aaa
movsb
mov
mov
mov
fidivrs
dec
xor
cmp
mov
and
mov
shll
mov
mov
xor
mov
fisubs
cmp
cmp
mov
mov
mov
cmp
inc
mov
lds
mov
mov
inc
hlt
mov
xor
div
mov
or
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
sub
lds
adc
jg
xchg
hlt
rcr
jmp
shll
leave
aas
shll
xor
mov
movsb
and
mov
inc
mov
lds
inc
mov
mov
enter
and
lret
and
leave
mov
mov
into
mov
xor
ror
test
movsl
mov
es
mov
and
inc
mov
cmp
inc
mov
dec
cmpsl
mov
mov
mov
and
dec
inc
mov
xor
dec
iret
and
ss
iret
lds
cmpsl
dec
leave
mov
xor
and
ds
dec
and
dec
mov
and
into
movsl
mov
ror
rcl
mov
mov
movsl
xor
lds
aaa
inc
inc
inc
push
mov
and
mov
iret
dec
iret
inc
inc
mov
mov
dec
mov
mov
shll
fmulp
dec
cmpsl
mov
fiadds
cmp
rol
aas
aas
mov
rcl
mov
rolb
fisubs
mov
rcr
inc
into
xor
dec
mov
mov
mov
and
cmp
cmp
mov
dec
movsb
daa
rolb
ds
and
dec
and
xor
mov
movsl
mov
mov
cmp
mov
push
inc
dec
ss
mov
dec
mov
sub
mov
es
dec
and
xor
mov
mov
xor
push
dec
shll
xor
cmpsl
xor
xor
mov
dec
daa
fisubs
inc
and
ds
mov
movsb
xor
dec
dec
aaa
test
xor
inc
inc
xor
enter
mov
inc
mov
mov
int
mov
mov
xor
mov
sub
test
cmpsl
mov
mov
mov
xor
cmp
shll
iret
and
cmp
push
xor
inc
dec
xor
inc
mov
inc
mov
mov
inc
inc
and
inc
inc
into
mov
mov
mov
test
xor
cmp
cmp
sarb
cmpsl
fmulp
dec
mov
ss
and
iret
into
iret
lret
mov
cmpsl
cmp
mov
mov
push
fisubs
push
inc
inc
inc
and
dec
rol
lret
mov
ss
inc
xor
test
mov
dec
xor
inc
mov
int
mov
mov
and
les
mov
rcr
mov
mov
mov
enter
mov
int
inc
into
and
sub
lret
xor
dec
cmp
and
lds
test
cmp
cmp
movsl
shrb
lds
mov
mov
int
xor
mov
aas
mov
dec
inc
inc
mov
mov
cmp
ret
les
xor
dec
shlb
leave
dec
mov
fisubs
xor
mov
and
leave
dec
shlb
lret
ss
mov
mov
inc
mov
into
movsb
mov
cmp
xor
mov
aas
xor
mov
cmp
into
and
cmp
and
dec
ss
enter
and
mov
enter
shl
or
jmp
testl
mov
cmpl
jmp
jmp
and
dec
mov
ret
cmp
dec
dec
aaa
mov
inc
cmpsl
mov
and
and
mov
cmpsl
daa
and
mov
shlb
cmp
inc
and
mov
sub
cmp
mov
inc
aaa
xor
mov
inc
daa
and
mov
dec
dec
inc
mov
ret
mov
push
cmp
rolb
and
ds
mov
mov
inc
shlb
movsb
mov
and
inc
cmp
xor
and
mov
mov
and
inc
mov
xor
mov
int
mov
movsl
les
ret
lds
aaa
and
dec
cmp
mov
and
mov
dec
enter
test
inc
leave
shlb
mov
dec
mov
mov
mov
int
daa
mov
aas
push
mov
dec
and
mov
leave
ret
int
mov
dec
into
test
ss
ret
inc
mov
rolb
movsl
sub
inc
xor
and
enter
ds
rol
mov
dec
cmp
dec
mov
ror
ret
dec
and
dec
lret
mov
aas
movsl
movsl
inc
movsb
xor
dec
xor
mov
dec
dec
mov
aas
inc
dec
es
shlb
dec
inc
sub
lret
lret
lret
movsb
mov
daa
mov
dec
mov
dec
inc
mov
ret
mov
mov
xor
mov
movsl
dec
movsl
inc
dec
inc
mov
ret
fisubs
aaa
mov
and
and
dec
inc
cmp
and
shlb
cmpsl
lret
test
ret
xor
into
xor
xor
xor
inc
movsl
cmpsl
cmpsl
lds
int
cmpsl
cmp
inc
mov
into
and
and
int
daa
mov
mov
mov
dec
fiadds
inc
inc
dec
dec
les
mov
les
sub
mov
movsb
faddp
cmp
movsl
test
cmp
xor
iret
leave
mov
xor
shlb
mov
mov
mov
ret
sub
into
ss
ret
mov
into
inc
sub
cmpsl
movsb
mov
mov
mov
cmpsl
dec
cmp
mov
mov
xor
and
mov
and
mov
and
movsb
aaa
mov
and
sarl
and
ret
cmp
shlb
and
mov
dec
mov
and
aas
xor
leave
es
cmp
mov
mov
lret
and
mov
dec
cmp
movsl
cmpsl
inc
xor
les
movsl
and
aas
inc
dec
dec
xor
and
dec
leave
xor
sub
and
cmp
iret
inc
leave
mov
daa
cmpsl
int
mov
xor
cmpsl
daa
cmp
cmpsl
xor
xor
xor
shlb
dec
sub
xor
ror
es
mov
les
ds
dec
ret
mov
push
mov
cmp
and
and
enter
xor
cmp
es
movsb
and
xor
xor
dec
xor
and
movsl
and
xor
enter
into
sub
and
mov
cmp
lret
fidivrs
and
mov
mov
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
movl
jae
orl
shrd
movl
shr
ret
xorl
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
mov
mov
andl
mov
jmp
test
out
data16
mov
xor
mov
fsubrp
jmp
lret
cmp
push
movsl
mov
dec
mov
lds
cmpsl
mov
mov
and
shlb
inc
xor
dec
leave
xor
dec
mov
enter
movsb
iret
mov
cmpsl
dec
fisubs
mov
and
xor
int
mov
inc
and
cmp
movsb
xor
and
and
rol
leave
shll
and
cmpsl
mov
and
dec
ror
xor
int
xor
mov
lret
dec
dec
and
dec
mov
les
into
movsb
mov
inc
xor
into
and
dec
dec
shlb
mov
movsb
mov
mov
fmulp
mov
int
push
mov
rorl
dec
ret
and
mov
mov
mov
and
mov
dec
mov
es
xor
cmp
xor
les
dec
dec
cmp
and
test
xor
lret
shlb
daa
aaa
dec
fimuls
cmp
mov
and
es
inc
ret
and
and
ror
mov
mov
and
mov
xor
mov
mov
movsb
dec
shlb
and
cmp
into
mov
daa
lds
aas
inc
lds
mov
cmp
and
dec
enter
dec
mov
inc
inc
mov
xor
xor
mov
mov
mov
mov
sub
cmp
inc
mov
es
inc
into
and
xor
aas
inc
daa
daa
xor
mov
ret
dec
mov
rorb
push
and
mov
sarl
xor
dec
test
lds
and
cmp
and
xor
iret
inc
and
cmp
mov
sub
mov
mov
iret
test
es
es
inc
cmp
mov
dec
cmp
xor
mov
test
mov
and
daa
xor
lret
dec
mov
rol
mov
and
mov
les
and
aas
movsl
mov
mov
enter
ret
add
dec
sub
add
mov
sbb
sbb
adc
mov
movl
orl
subl
orl
mov
mov
cmpl
jb
sbb
jmp
push
pushl
pushl
call
mov
mov
sub
mov
sbb
mov
movzwl
and
orl
cmpl
jg
jmp
pushl
pushl
call
orl
lea
jmp
out
sub
sahf
fs
add
fildl
jmp
shlb
leave
inc
shlb
cmp
cmp
sarb
cmp
inc
test
test
and
dec
enter
mov
dec
and
dec
ror
daa
mov
aas
daa
inc
ss
dec
push
xor
test
cmpsl
inc
lds
shlb
xor
movsb
enter
test
inc
daa
xor
and
push
mov
push
dec
mov
mov
xor
dec
lret
mov
inc
iret
dec
xor
xor
push
dec
cmp
mov
cmpsl
xor
aaa
dec
daa
movsb
mov
es
inc
lret
dec
inc
les
es
xor
dec
cmp
rol
cmp
inc
dec
and
dec
into
lds
movsb
dec
cmpsl
mov
aas
cmp
mov
and
inc
xor
roll
mov
enter
movsl
lret
ds
aas
push
xor
dec
dec
and
inc
dec
push
mov
mov
push
mov
dec
cmp
sarb
cmpsl
iret
mov
cmp
aas
cmp
dec
ret
cmp
mov
les
aaa
movsl
aas
into
enter
mov
and
sarl
and
mov
inc
push
ret
mov
ds
mov
inc
and
fidivs
mov
movsl
mov
mov
and
and
int
xor
push
dec
cmpsl
and
inc
inc
and
ds
inc
mov
movsl
into
inc
cmp
mov
ss
inc
inc
mov
inc
mov
inc
mov
rolb
mov
es
ds
movsb
cmp
mov
dec
fidivrs
daa
mov
xor
dec
mov
xor
xor
mov
ror
and
mov
shrb
mov
sub
mov
mov
movsl
inc
test
movsb
leave
mov
mov
mov
mov
mov
into
mov
xor
cmp
cmp
xor
mov
and
inc
hlt
mov
mov
mov
add
mov
mov
mov
mov
sub
imul
jmp
aas
cmp
addr16
adc
mov
inc
jmp
jmp
mov
aaa
and
dec
and
aas
test
cmpsl
mov
dec
mov
xor
dec
xor
mov
cmp
mov
and
lret
inc
mov
rcr
test
aas
mov
mov
xor
mov
dec
xor
xor
dec
xor
dec
mov
mov
xor
mov
mov
cmpsl
dec
leave
xor
inc
movsb
xor
into
and
movsl
mov
enter
cmp
shrl
mov
into
mov
ds
rol
sub
les
ret
mov
daa
ds
inc
xor
mov
and
shlb
mov
enter
and
cmp
mov
mov
leave
cmpsl
mov
ds
inc
mov
xor
aaa
ss
mov
mov
mov
and
inc
inc
mov
xor
mov
dec
lret
inc
dec
xor
ret
and
cmp
and
dec
mov
dec
ret
daa
inc
and
mov
mov
mov
int
dec
inc
dec
mov
and
dec
iret
mov
xor
mov
iret
movsl
int
dec
into
mov
push
mov
mov
and
ret
mov
mov
mov
daa
movsb
mov
and
shlb
cmp
mov
les
inc
test
ss
leave
mov
mov
movsl
aaa
fidivrs
sarb
lds
xor
inc
and
mov
cmp
inc
lret
mov
mov
xor
push
aaa
sarb
mov
inc
aaa
inc
mov
es
inc
mov
and
xor
mov
int
mov
mov
inc
xor
daa
rolb
push
and
cmp
cmp
lret
dec
xor
dec
mov
xor
int
es
and
rol
mov
sub
mov
ret
mov
iret
movsb
cmp
ds
inc
dec
mov
movl
dec
lds
cmp
mov
cmpsl
into
ret
mov
mov
mov
shrd
shr
adcl
mov
or
mov
xor
xor
andl
or
mov
sbb
mov
movl
xor
movl
movl
xor
add
or
mov
movl
sbb
movl
movl
movl
movl
movl
movl
add
movl
and
movl
movl
cmpl
jg
and
jmp
push
call
movl
jmp
popf
or
mov
subb
jae
mov
jmp
jmp
mov
xor
and
les
mov
xor
xor
xor
shlb
inc
es
iret
cmpsl
mov
test
mov
shll
mov
ss
xor
inc
inc
xor
inc
cmpsl
into
mov
sub
cmp
rolb
xor
mov
mov
cmp
mov
inc
dec
test
cmp
cmp
mov
xor
mov
xor
cmpsl
inc
mov
into
aaa
sub
dec
mov
cmpsl
mov
inc
ror
and
and
enter
mov
dec
dec
mov
xor
and
inc
ror
leave
es
mov
movsl
dec
test
xor
mov
mov
mov
mov
xor
ds
inc
mov
ror
rorb
cmpsl
mov
and
test
shrb
enter
movsb
lret
ss
xor
xor
lret
and
mov
dec
inc
dec
ds
inc
and
xor
mov
xor
cmp
mov
and
movsb
and
inc
mov
xor
mov
mov
xor
mov
xor
leave
es
mov
inc
mov
and
lds
cmp
daa
enter
mov
mov
lret
mov
mov
faddp
aas
aaa
sarl
enter
sarb
cmp
inc
test
movsl
shlb
push
shlb
es
mov
xor
cmp
into
enter
push
es
mov
xor
mov
aas
ss
dec
mov
leave
cmp
mov
mov
xor
mov
mov
dec
aas
inc
mov
xor
fidivs
mov
xor
cmp
xor
inc
inc
xor
lret
mov
ret
inc
mov
into
lds
movsl
and
and
vaddsubps
and
movsb
int
es
xor
movsb
lds
mov
mov
movl
movl
jmp
shl
cmp
push
in
lock
add
inc
jmp
jmp
movsl
mov
mov
ds
push
inc
cmp
mov
les
les
lret
xor
mov
dec
sub
test
inc
mov
dec
and
sub
sub
dec
inc
xor
movsb
mov
and
ret
mov
inc
cmp
mov
dec
mov
xor
ror
mov
and
mov
leave
ds
fmulp
sarl
xor
cmpsl
dec
mov
mov
and
xor
inc
inc
es
movsb
cmp
mov
push
inc
inc
shll
leave
leave
xor
inc
enter
cmp
xor
and
mov
cmp
enter
aaa
inc
mov
shll
xor
inc
xor
daa
movsl
inc
mov
mov
mov
ret
inc
ror
iret
mov
mov
mov
aaa
es
lret
lds
and
shlb
aas
xor
mov
inc
inc
lds
sub
sub
aaa
cmpsl
xor
mov
mov
leave
int
inc
aas
mov
inc
mov
shlb
mov
mov
enter
dec
sarb
leave
iret
mov
xor
leave
fisubrs
cmp
shrb
les
mov
cmp
cmp
dec
xor
inc
mov
and
ret
leave
mov
les
mov
mov
inc
xor
dec
sub
shlb
sarl
and
daa
mov
xor
fidivs
shll
mov
and
movsb
dec
xor
mov
ret
mov
mov
dec
mov
inc
movsb
rorl
cmp
dec
mov
dec
and
ss
dec
int
dec
es
lret
inc
dec
and
daa
mov
ss
cmp
ret
lret
int
faddp
push
dec
cmpsl
xor
es
dec
mov
inc
fidivs
lret
mov
int3
popf
pop
add
movl
movl
subl
movl
cmpl
jge
adc
add
jmp
push
call
movl
movl
mov
shl
mov
subl
push
movl
push
notl
push
push
addl
call
cmpl
ja
addl
or
jmp
push
push
push
push
call
mov
mov
xor
mov
mov
cmpl
jl
add
jmp
push
push
pushl
call
jmp
scas
dec
dec
stos
insb
xchg
dec
xor
adc
jmp
movsl
inc
xor
xor
cmpsl
and
daa
and
and
dec
inc
push
daa
mov
shlb
mov
cmp
and
mov
mov
xor
faddp
leave
and
movsb
cmp
dec
inc
inc
and
movsb
dec
mov
mov
enter
int
dec
enter
dec
and
sub
xor
inc
mov
into
mov
dec
and
sarb
and
mov
cmp
mov
into
lret
mov
xor
mov
cmp
mov
mov
mov
mov
inc
push
mov
xor
inc
inc
and
and
mov
mov
enter
mov
mov
sub
xor
dec
xor
push
sarb
daa
mov
mov
dec
es
ss
mov
and
sarb
movsl
into
mov
les
inc
test
inc
dec
int
mov
dec
mov
mov
lret
inc
mov
mov
inc
mov
xor
iret
leave
mov
mov
daa
xor
movsl
fmulp
into
inc
and
xor
mov
xor
cmp
mov
mov
mov
enter
inc
inc
rorl
mov
mov
xor
cmpsl
mov
dec
ret
cmp
into
into
cmp
fiadds
iret
and
inc
inc
xor
movsl
mov
sub
cmp
test
mov
movsl
xor
xor
lds
into
mov
xor
cmp
inc
mov
mov
sub
enter
and
daa
shll
and
xor
cmp
iret
into
mov
daa
inc
shll
xor
and
cmp
ret
mov
inc
mov
leave
inc
sarl
dec
mov
xor
mov
push
enter
fidivs
inc
inc
lret
mov
xor
into
mov
int
cmp
push
rcr
and
and
inc
es
xor
test
and
int
mov
mov
mov
lea
mov
mov
or
sbbl
and
movl
mov
adcl
or
xor
movl
cmp
movl
jne
subl
mov
add
mov
adc
shrd
shr
cmpl
jge
sbb
jmp
push
call
jmp
push
ret
sub
cmpsl
dec
addl
vpsubsw
ljmp
es
and
into
ret
mov
movsb
leave
sub
mov
xor
enter
inc
cmpsl
xor
and
dec
mov
cmp
shll
iret
mov
sarl
mov
fidivrs
cmp
cmp
mov
mov
aaa
dec
mov
dec
mov
mov
cmpsl
es
aaa
and
aas
cmp
sub
mov
mov
mov
inc
fidivrs
dec
mov
cmp
mov
ds
movsb
mov
dec
and
inc
mov
xor
fisubs
mov
movsb
shlb
les
mov
test
ss
ror
cmp
inc
lds
and
xor
cmp
iret
aaa
dec
mov
mov
rcl
dec
and
inc
push
dec
movsb
and
xor
ror
and
and
mov
inc
aas
leave
cmp
push
inc
inc
mov
into
ss
mov
rol
enter
sub
xor
int
ret
les
mov
mov
mov
mov
into
aas
mov
rorl
mov
lret
mov
mov
cmp
mov
lds
inc
cmp
xor
rol
cmp
daa
cmp
movsl
mov
mov
xor
xor
xor
ret
shll
dec
ret
vmovaps
cmp
dec
aas
mov
mov
mov
sarb
ds
and
mov
dec
movsb
iret
enter
mov
mov
cmp
mov
sarl
test
cmp
xor
sub
mov
cmp
ret
and
xor
xor
inc
ret
rcr
aaa
and
mov
aas
ror
mov
mov
mov
cmp
mov
sarb
dec
mov
cmp
int
and
shl
xor
xor
or
mov
mov
cmp
movl
jne
mov
mov
orl
xor
cmpl
jge
jmp
pushl
call
mov
mov
mov
jmp
in
mov
bound
je
das
scas
mov
aas
ljmp
push
into
xor
mov
movsb
mov
lds
movsb
mov
shlb
and
dec
movsl
movsb
mov
es
ret
ret
mov
int
into
mov
and
mov
mov
test
ss
leave
mov
mov
cmp
mov
daa
mov
mov
cmp
ds
mov
and
sarb
inc
mov
mov
mov
movsl
aas
and
inc
xor
mov
mov
cmp
into
mov
mov
mov
push
xor
inc
xor
mov
lret
sub
inc
xor
mov
movsl
les
fidivrs
inc
and
faddp
mov
inc
int
mov
rol
lds
inc
lret
xor
mov
aas
lret
shlb
into
mov
mov
movsl
lret
mov
int
shlb
inc
and
xor
and
inc
and
mov
mov
and
mov
into
mov
mov
sarb
leave
aaa
into
dec
mov
movsl
dec
and
lds
mov
mov
lret
mov
movsb
int
mov
xor
mov
movsb
mov
xor
cmp
and
shlb
and
enter
lds
mov
dec
lds
dec
xor
inc
dec
inc
mov
sub
dec
mov
mov
les
and
cmp
and
mov
ret
ss
inc
mov
leave
rcl
inc
and
xor
mov
mov
mov
inc
push
dec
and
shll
xor
test
iret
and
daa
iret
iret
mov
mov
lds
cmp
xor
movsl
mov
shrl
xor
mov
mov
xor
mov
push
and
shrd
mov
mov
xor
shr
adc
mov
xor
or
shl
movzbl
add
mov
sub
mov
cmpl
jle
add
jmp
push
push
call
mov
mov
add
mov
jmp
subl
xchg
jae
cmpsb
jae
dec
jmp
jmp
aas
aaa
enter
cmp
inc
mov
daa
aas
into
dec
into
ret
mov
mov
inc
dec
into
and
inc
es
xor
and
cmp
fmulp
mov
mov
iret
ret
xor
mov
mov
inc
ss
mov
movsb
daa
test
dec
ds
and
xor
dec
mov
into
aaa
mov
inc
shrb
lret
cmp
xor
inc
and
int
and
enter
mov
xor
daa
mov
aas
inc
cmpsl
mov
movsl
xor
es
sub
movsb
mov
sarb
mov
mov
enter
and
mov
mov
cmpsl
and
and
mov
xor
mov
inc
dec
mov
and
test
enter
mov
aaa
cmp
mov
inc
mov
test
inc
mov
leave
and
fisubs
daa
mov
shlb
mov
and
dec
leave
mov
int
xor
mov
es
xor
dec
aaa
and
dec
cmpsl
dec
sub
aas
dec
ss
dec
aas
mov
fidivs
and
ret
inc
mov
dec
shlb
int
ds
leave
dec
ret
movsb
es
inc
and
enter
mov
and
test
ss
dec
shll
inc
xor
sarl
cmpsl
ret
enter
daa
movsl
dec
iret
and
dec
and
mov
lret
push
mov
dec
movsb
xor
dec
ds
dec
movsb
xor
mov
mov
and
movsl
leave
inc
cmp
dec
movsl
mov
les
ds
and
mov
mov
cmpsl
mov
lds
ret
cmpsl
mov
inc
movsb
lds
cmp
shrl
cmpsl
mov
into
and
enter
inc
xor
movsl
push
fidivs
lds
cmpsl
fidivrs
fisubs
test
cmp
shll
mov
mov
and
mov
inc
shlb
xor
dec
cmp
inc
add
lods
roll
or
cmp
jl
add
sbb
daa
inc
jmp
out
pop
inc
out
iret
test
jmp
test
aaa
inc
fidivs
sub
mov
inc
cmp
ror
inc
mov
and
lret
and
into
xor
test
and
ret
mov
mov
mov
test
ret
inc
push
shlb
push
mov
and
ds
les
ret
dec
xor
inc
and
dec
mov
enter
mov
inc
shlb
aaa
mov
enter
aaa
rol
lret
and
movsb
xor
inc
inc
mov
movsl
movsl
and
cmpsl
inc
xor
and
daa
mov
lds
dec
sub
mov
mov
rcl
movsb
inc
into
mov
iret
xor
lret
inc
mov
xor
xor
cmp
mov
movsl
dec
xor
mov
and
int
xor
dec
and
dec
movsl
inc
into
inc
lds
inc
iret
mov
dec
ret
mov
xor
dec
mov
mov
mov
mov
ds
push
dec
enter
inc
movsb
les
cmp
cmp
cmp
mov
lds
mov
aaa
inc
cmp
les
mov
int
enter
mov
ret
sarb
mov
and
and
dec
mov
and
mov
and
int
lds
mov
mov
shlb
mov
inc
dec
into
mov
lds
and
mov
mov
dec
mov
es
mov
ret
and
dec
dec
mov
mov
mov
inc
mov
int
sarl
shll
dec
mov
sub
enter
xor
mov
inc
leave
and
ds
dec
mov
mov
mov
mov
aaa
and
dec
dec
inc
enter
test
inc
mov
and
mov
fmulp
cmp
daa
inc
mov
sarb
dec
sub
cmp
mov
ds
mov
inc
enter
mov
xorl
mov
xor
sub
shl
xor
or
movl
mov
not
mov
addl
shrd
xorl
shr
mov
and
mov
mov
xor
xor
or
shl
notl
lea
cmpl
ja
inc
sbb
jmp
push
pushl
push
call
mov
mov
shrd
shr
mov
mov
mov
not
xor
cmpl
jl
neg
jmp
push
push
push
call
mov
xor
or
shl
imul
mov
mov
shrd
addl
jmp
xchg
jbe
insb
insb
outsl
dec
or
cwtl
xchg
add
lret
aas
ljmp
aaa
into
xor
inc
ss
into
dec
mov
enter
and
mov
mov
leave
cmp
mov
and
mov
inc
lret
mov
sub
mov
enter
cmp
cmp
movsl
mov
xor
sarb
inc
lret
dec
inc
fisubs
mov
mov
lret
es
shlb
dec
dec
xor
mov
mov
xor
mov
cmp
sub
mov
mov
ror
test
xor
into
leave
inc
and
inc
dec
mov
mov
mov
and
mov
ds
fmulp
sub
ss
mov
mov
roll
ds
mov
es
and
mov
dec
xor
es
mov
mov
mov
mov
dec
inc
inc
and
mov
xor
inc
mov
mov
and
enter
fmulp
ds
mov
dec
aaa
mov
aas
ret
shlb
and
rcl
dec
mov
cmpsl
mov
into
ss
xor
mov
dec
mov
cmp
dec
leave
push
dec
ret
cmp
mov
xor
daa
mov
and
lret
sub
int
and
dec
inc
mov
xor
dec
cmp
dec
movsb
mov
int
xor
xor
and
sarl
and
dec
iret
movsl
dec
and
ds
int
sarb
mov
test
mov
mov
inc
iret
rorb
test
mov
dec
xor
dec
shlb
movsb
xor
mov
push
mov
cmp
mov
xor
mov
movsl
dec
es
int
ret
les
and
xor
xor
mov
iret
and
mov
rolb
and
cmpsl
mov
mov
and
dec
aaa
mov
inc
mov
xor
mov
inc
dec
xor
dec
in
cmp
add
lea
add
add
sbb
jmp
pushl
pushl
call
mov
xor
shr
mov
mov
xor
movl
or
shl
subl
jmp
adc
insb
dec
movsb
in
divl
repnz
add
iret
jmp
jmp
int
and
mov
and
dec
into
mov
and
and
cmp
aas
mov
mov
mov
iret
cmp
cmp
movsl
push
mov
lds
enter
test
mov
movsb
es
dec
cmp
and
mov
rcll
xor
dec
xor
iret
mov
leave
inc
and
cmpsl
ss
xor
and
cmp
aas
dec
fiadds
movsl
lret
push
dec
mov
cmpsl
test
mov
mov
xor
xor
cmpsl
dec
rol
enter
iret
sarb
xor
inc
mov
xor
inc
les
xor
movsb
leave
int
enter
push
xor
enter
mov
xor
mov
mov
iret
enter
mov
iret
xor
mov
movsl
ret
push
cmpsl
shlb
lret
inc
push
cmp
and
cmpsl
xor
and
inc
xor
and
mov
test
mov
into
cmp
mov
inc
test
mov
mov
mov
iret
ds
aaa
dec
and
and
and
mov
ret
mov
shlb
mov
lret
aaa
aas
dec
fmulp
and
inc
mov
mov
cmp
mov
inc
mov
and
and
xor
mov
inc
ret
shll
cmp
mov
iret
xor
ror
mov
aas
lret
fisubs
shll
mov
xor
inc
mov
movsl
mov
dec
push
shll
mov
mov
mov
mov
shlb
and
leave
dec
mov
movsb
mov
mov
mov
and
mov
mov
aas
shlb
aaa
mov
into
les
and
movsb
lret
mov
dec
mov
iret
dec
daa
mov
dec
mov
sub
mov
inc
shll
xor
cmpsl
test
mov
cmpsl
xor
push
inc
enter
aas
mov
daa
es
mov
mov
movl
cmp
mov
jg
cmpl
jle
and
jmp
push
push
pushl
pushl
push
pushl
call
mov
mov
shrd
mov
mov
xor
addl
shl
sbbl
xor
addl
or
addl
shr
mov
cmpl
jg
movzbl
add
jmp
push
push
call
mov
mov
mov
shrd
shr
mov
cmpl
jl
adc
jmp
pushl
call
mov
jmp
pop
icebp
push
loope
out
test
lods
jbe
addr16
jmp
inc
dec
enter
inc
leave
cmpsl
ss
fimuls
ds
and
and
inc
xor
inc
mov
mov
fisubs
mov
aas
mov
mov
xor
mov
dec
cmpsl
mov
xor
movsl
enter
aas
movsb
inc
rol
rorb
ds
mov
xor
cmpsl
es
mov
sub
xor
mov
mov
sarb
inc
sarb
xor
ret
inc
movsb
xor
mov
mov
mov
int
aas
mov
aas
cmpsl
movsl
mov
iret
into
mov
xor
aas
mov
shll
sub
dec
mov
mov
mov
ror
ds
inc
int
sub
xor
xor
mov
dec
dec
inc
mov
dec
xor
mov
dec
lds
shlb
into
inc
aaa
mov
inc
ds
inc
movsl
lret
lds
mov
aas
sarb
mov
movsl
lret
mov
es
mov
dec
xor
shll
int
mov
into
inc
movsb
ret
xor
inc
and
mov
mov
xor
dec
lret
shrb
dec
aaa
mov
mov
fisubs
dec
sub
mov
cmp
mov
faddp
into
cmpsl
mov
dec
leave
mov
xor
inc
and
xor
sub
rolb
ds
mov
mov
and
mov
and
xor
iret
push
mov
aaa
xor
enter
mov
xor
dec
dec
push
xor
xor
lret
iret
dec
inc
mov
mov
inc
daa
movsl
movsl
and
and
leave
xor
cmpsl
inc
inc
test
and
les
aaa
inc
mov
xor
xor
movsl
mov
ret
mov
movsb
ret
xor
leave
les
mov
leave
aaa
es
leave
sub
dec
xor
mov
aas
dec
into
mov
inc
mov
mov
mov
mov
inc
movsb
rorl
xor
or
shl
imul
xorl
sub
jmp
xorl
mov
mov
notl
shrd
mov
mov
orl
xor
andl
shl
xor
subl
or
negl
shr
cmpl
jle
movzbl
and
mov
jmp
pushl
pushl
call
mov
mov
mov
mov
shrd
subl
shr
xor
mov
jmp
ret
ljmp
pop
mov
and
dec
jmp
jmp
ret
mov
lret
xor
xor
xor
cmpsl
rorb
push
and
mov
movsl
lds
mov
mov
test
movsb
cmpsl
leave
les
mov
dec
mov
dec
cmp
and
mov
daa
mov
and
dec
movsl
ror
into
dec
mov
int
mov
fidivs
sarb
lds
les
xor
mov
mov
and
and
aas
mov
and
lret
xor
xor
lds
xor
and
inc
lds
xor
aas
and
ds
inc
and
and
inc
mov
into
xor
mov
and
ss
mov
mov
xor
push
mov
daa
mov
mov
ds
aas
dec
test
lret
enter
mov
mov
push
cmp
ss
and
dec
dec
inc
and
es
inc
mov
inc
xor
mov
inc
inc
inc
mov
dec
lret
inc
xor
sub
push
mov
cmp
inc
dec
mov
leave
into
mov
ss
movsl
les
cmp
dec
les
and
mov
and
aaa
daa
roll
cmp
mov
leave
movsb
lds
xor
inc
test
les
xor
sarl
es
inc
mov
and
aas
mov
ret
rol
xor
movsb
cmp
dec
shlb
xor
into
mov
cmp
aas
inc
lret
cmp
movsl
mov
mov
mov
xor
dec
mov
ds
xor
sub
mov
ds
inc
lds
and
and
mov
inc
mov
mov
xor
xor
rolb
inc
mov
test
fimuls
ss
int
xor
cmp
inc
shll
xor
into
and
cmp
mov
xor
addl
mov
xor
adcl
xor
or
shl
add
cmpl
jg
xorl
jmp
push
call
add
mov
mov
shrd
shr
mov
xor
add
or
mov
subl
xor
subl
shl
xor
mov
mov
and
or
andl
mov
add
movl
mov
mov
movl
and
mov
movl
movl
cmpl
jb
jmp
pushl
call
mov
jmp
fdivp
lret
sbb
fwait
jne
jae
dec
jne
mov
jmp
jmp
sub
dec
mov
xor
mov
mov
mov
movsl
mov
cmp
ret
lds
mov
les
mov
mov
dec
push
mov
mov
cmp
mov
xor
test
int
ror
aas
ret
daa
enter
inc
and
into
and
inc
and
cmp
lret
daa
mov
lret
dec
sarb
inc
mov
and
and
into
lret
dec
xor
ror
inc
xor
ss
inc
inc
ror
dec
cmp
push
mov
into
and
mov
and
xor
les
and
iret
mov
daa
test
cmpsl
mov
lret
faddp
xor
movsl
dec
and
lds
mov
mov
cmp
and
mov
shlb
push
mov
cmp
mov
and
xor
mov
xor
leave
daa
and
mov
dec
movsb
cmp
mov
mov
shll
inc
xor
mov
test
mov
sub
sub
mov
mov
mov
cmp
enter
iret
xor
and
iret
dec
enter
cmp
inc
aas
es
inc
lret
mov
mov
enter
and
mov
movl
cmp
sarl
dec
inc
mov
mov
es
xor
and
mov
les
cmpsl
and
lds
mov
cmp
mov
ret
xor
ror
into
mov
mov
mov
mov
es
xor
dec
fidivs
test
sub
dec
mov
dec
inc
int
xor
mov
enter
and
lret
and
lret
mov
push
leave
mov
push
cmp
mov
mov
mov
and
xor
ror
mov
mov
mov
inc
mov
mov
test
inc
movsb
mov
mov
shrd
shr
cmpl
jl
jmp
pushl
push
pushl
call
mov
mov
xor
shl
xor
or
lea
orl
mov
cmpl
jbe
jmp
push
pushl
call
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
addl
or
mov
mov
xor
cmpl
jbe
sub
jmp
push
pushl
push
call
mov
mov
shrd
shr
mov
mov
xor
subl
shl
xor
or
movl
lea
mov
mov
sbb
mov
and
mov
negl
shrd
shr
cmpl
jl
sub
jmp
pushl
call
mov
mov
shl
mov
jmp
clc
aaa
imul
jns
testl
mov
jmp
aas
inc
mov
push
mov
and
and
movsb
lret
inc
dec
cmpsl
int
mov
leave
mov
shll
dec
sarb
cmp
mov
cmp
mov
cmp
dec
inc
aaa
and
inc
mov
mov
aaa
rolb
iret
daa
ss
and
mov
xor
and
es
mov
cmp
mov
mov
fisubrs
mov
rclb
push
test
mov
inc
aaa
movsb
sub
shlb
mov
ret
lret
mov
mov
xor
mov
shll
inc
xor
xor
iret
aas
mov
shlb
iret
iret
inc
int
rolb
mov
dec
mov
leave
mov
movsb
xor
test
and
mov
and
fmulp
aaa
movsb
mov
xor
lds
mov
mov
push
dec
dec
rclb
fimuls
rcr
leave
inc
ss
shll
ret
leave
leave
leave
ds
enter
mov
sub
test
inc
xor
mov
iret
leave
dec
push
inc
dec
mov
shlb
es
xor
mov
mov
daa
mov
ss
lret
dec
dec
mov
ss
lret
inc
aas
dec
mov
aas
inc
int
dec
aas
inc
aaa
test
int
into
inc
es
dec
dec
mov
dec
mov
mov
xor
mov
mov
cmp
xor
daa
sarb
cmpsl
iret
mov
mov
mov
enter
mov
mov
inc
es
mov
mov
cmp
cmp
movsl
mov
into
sub
dec
mov
lds
cmp
test
fidivs
dec
mov
dec
iret
aaa
inc
mov
int
test
ret
dec
test
xor
mov
es
enter
mov
inc
aas
xor
ss
shll
lret
sub
movsb
and
and
xor
push
dec
iret
mov
mov
and
cmp
push
ret
xor
movsl
xor
xor
or
mov
sbb
mov
mov
inc
mov
negl
or
mov
cmpl
jb
and
and
jmp
pushl
push
call
mov
shrd
shr
mov
mov
addl
xor
sbbl
shl
xor
or
cmpl
jb
adc
adc
jmp
pushl
push
call
lea
mov
mov
mov
shrd
and
shr
cmpl
ja
jmp
push
call
mov
mov
xor
shl
mov
xor
or
mov
and
mov
mov
add
xor
add
mov
sub
or
mov
cmpl
jle
and
jmp
push
pushl
call
mov
shrd
shr
mov
mov
xor
subl
xor
orl
or
neg
lea
movl
mov
adc
jmp
pushf
adc
roll
lods
hlt
arpl
add
scas
mov
jmp
es
aaa
sarb
and
mov
xor
and
rol
mov
mov
xor
leave
int
inc
movsl
mov
mov
and
ret
lret
inc
mov
and
and
mov
mov
mov
inc
enter
ds
mov
mov
mov
xor
es
xor
mov
and
xor
inc
rol
sub
inc
xor
les
iret
and
aaa
mov
leave
mov
int
mov
xor
cmpsl
enter
movsb
push
inc
ss
and
mov
mov
mov
les
lds
sarl
and
xor
and
movsl
movsl
mov
mov
aaa
and
lret
mov
inc
lret
mov
inc
and
and
leave
aas
mov
dec
dec
sub
fimuls
aas
sub
leave
mov
inc
inc
cmp
dec
shlb
cmp
inc
xor
xor
cmp
mov
inc
and
xor
test
int
mov
sarb
shlb
les
dec
xor
xor
and
leave
dec
into
int
cmpsl
mov
dec
ret
mov
inc
mov
mov
inc
sub
xor
enter
lds
mov
ds
dec
mov
mov
ss
inc
dec
mov
inc
and
mov
and
mov
and
inc
rcr
and
es
xor
shlb
mov
iret
cmp
mov
dec
enter
test
mov
movsb
lret
xor
sub
mov
and
cmp
les
and
xor
aas
sarb
into
mov
cmp
shlb
movsb
mov
dec
mov
mov
inc
mov
mov
ret
test
int
push
dec
enter
xor
mov
mov
mov
xor
mov
dec
ds
enter
mov
dec
aas
xor
shl
add
mov
dec
shrd
cmpl
jl
jmp
pushl
call
shr
mov
mov
xor
xor
or
jmp
or
insb
insb
jns
lcall
mov
jmp
inc
mov
xor
shrl
test
push
mov
mov
ss
mov
into
inc
mov
and
and
movsl
movsb
iret
lret
mov
xor
mov
movsb
xor
mov
inc
and
and
xor
and
test
aaa
inc
shlb
mov
test
xor
dec
and
and
ss
mov
and
shlb
es
lds
ss
lret
dec
shlb
cmp
mov
xor
xor
leave
les
lret
mov
dec
inc
mov
xor
mov
dec
shlb
xor
xor
mov
inc
test
mov
mov
dec
and
mov
es
mov
mov
cmp
mov
and
mov
xor
inc
ret
mov
mov
inc
roll
leave
mov
mov
mov
and
dec
fisubs
inc
dec
xor
int
cmp
mov
inc
dec
mov
xor
inc
test
xor
dec
fisubs
and
aas
dec
test
aas
into
aaa
xor
and
movsl
mov
test
mov
cmp
movsb
shlb
mov
mov
mov
mov
mov
es
lret
lds
mov
mov
mov
mov
and
mov
xor
mov
dec
int
inc
mov
mov
lret
mov
xor
inc
cmp
aas
iret
cmpsl
shll
mov
ss
mov
mov
inc
mov
mov
and
and
xor
mov
ror
leave
sub
mov
ss
es
dec
mov
ret
lret
xor
mov
sub
inc
dec
dec
dec
enter
ret
leave
sub
xor
shlb
cmp
mov
cmpsl
lret
daa
push
enter
xor
rol
shlb
test
movsl
push
mov
cmp
movsb
inc
aaa
faddp
enter
dec
mov
mov
lds
push
sub
mov
subl
mov
mov
sub
mov
or
adc
mov
or
mov
jmp
mov
mov
mov
data16
stos
xchg
pop
pop
pop
cmc
mov
ljmp
mov
mov
leave
xor
mov
into
test
mov
and
ss
mov
sarb
cmpsl
inc
mov
lret
cmp
dec
mov
iret
mov
movsb
mov
mov
mov
rclb
mov
mov
mov
fisubs
and
and
mov
shlb
mov
and
inc
aas
cmp
les
inc
shll
mov
movsl
dec
aas
and
movsl
mov
mov
xor
push
mov
mov
movsl
inc
push
mov
movsl
ret
mov
les
xor
mov
aas
and
cmp
fimuls
daa
inc
lret
mov
ds
dec
xor
mov
dec
movsb
es
ror
mov
mov
dec
test
daa
rol
mov
test
push
mov
movsl
mov
mov
and
ret
les
dec
inc
ror
mov
cmp
mov
mov
and
mov
movsl
sub
lds
mov
enter
mov
mov
ret
cmp
mov
mov
dec
inc
cmp
dec
test
mov
les
shlb
cmp
int
iret
dec
mov
mov
sub
daa
cmpsl
xor
rorl
dec
mov
int
movsb
lds
inc
fisubs
xor
and
and
and
inc
xor
mov
dec
dec
dec
and
rcll
ss
mov
xor
cmp
iret
ret
ror
cmp
daa
and
rorl
mov
aas
shll
dec
xor
inc
daa
xor
shlb
enter
xor
and
inc
xor
cmp
mov
cmp
mov
movsb
dec
inc
inc
push
dec
xor
mov
sarl
inc
mov
cmp
dec
xor
mov
mov
enter
dec
and
rcl
push
shrd
addl
shl
shr
mov
subl
mov
cmpl
jb
jmp
push
pushl
push
pushl
push
call
xor
mov
xor
or
mov
dec
not
andl
and
sbbl
xor
cmpl
jbe
andl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
or
mov
mov
shrd
adc
shr
mov
mov
add
mov
mov
mov
xorl
jmp
icebp
mov
in
test
add
js
xor
jmp
shll
xor
lret
inc
mov
cmpsl
mov
and
mov
mov
sub
mov
lret
push
and
mov
inc
ss
cmp
inc
mov
and
mov
inc
and
mov
dec
enter
test
ds
mov
and
fidivs
mov
and
mov
and
cmp
xor
shll
and
cmp
xor
ficoms
es
into
xor
cmp
mov
mov
and
inc
dec
ds
sub
cmp
mov
mov
fimuls
mov
dec
xor
inc
movsb
mov
dec
shlb
movsl
mov
mov
and
aas
es
enter
mov
lds
test
aaa
cmp
into
rolb
rol
aaa
cmp
int
and
mov
cmpsl
dec
and
cmp
mov
mov
cmp
enter
xor
xor
mov
fidivrs
into
iret
sub
mov
mov
aas
mov
shlb
dec
xor
mov
mov
test
mov
mov
mov
and
xor
inc
xor
mov
cmp
mov
movsl
cmp
inc
cmp
mov
mov
mov
into
dec
mov
leave
inc
mov
ss
enter
dec
test
mov
mov
mov
mov
aaa
fidivs
test
and
les
and
ss
cmp
mov
movsb
ror
and
mov
and
and
into
mov
cmp
movsl
inc
mov
movsb
movsl
leave
and
mov
cmp
xor
mov
mov
xor
and
and
xor
cmp
ds
and
les
xor
dec
inc
dec
cmp
mov
mov
enter
dec
dec
sub
mov
int
es
mov
dec
les
mov
cmpl
jb
jmp
push
push
push
pushl
call
mov
xor
shl
jmp
sbb
or
or
mov
mov
jmp
mov
mov
and
mov
and
mov
mov
lds
rcr
xor
lret
xor
rol
fimuls
faddp
and
aas
cmp
dec
mov
mov
and
xor
and
int
mov
inc
ret
push
mov
ret
aaa
dec
inc
sub
test
cmp
dec
es
cmp
rol
mov
and
xor
into
aas
inc
and
cmp
ret
mov
fidivrs
mov
into
fidivs
leave
es
and
xor
sub
mov
ds
xor
push
leave
dec
mov
and
enter
into
mov
les
cmp
int
movsb
mov
dec
inc
iret
mov
mov
cmp
xor
inc
cmp
xor
inc
inc
dec
movsb
mov
cmp
cmp
push
mov
and
es
inc
lds
dec
dec
int
aas
inc
rol
mov
ss
lret
es
push
lds
lret
dec
mov
mov
and
movsb
test
dec
les
cmp
aas
les
cmp
shlb
and
inc
enter
movsl
and
xor
into
mov
mov
into
cmp
mov
lret
mov
leave
enter
mov
mov
lret
dec
mov
rolb
cmp
leave
mov
iret
mov
inc
push
mov
daa
cmpsl
enter
cmpsl
les
ret
cmp
and
mov
cmp
movsl
lret
leave
and
test
fidivs
xor
int
ds
leave
mov
inc
test
lds
inc
dec
mov
daa
sarb
les
roll
cmp
aaa
mov
mov
shll
and
mov
and
mov
mov
into
cmpsl
mov
mov
inc
xor
mov
mov
mov
dec
fidivrs
and
dec
shlb
xor
jl
add
mov
stc
xor
fs
pop
scas
or
movsl
mov
jmp
shll
mov
cmpsl
inc
dec
ds
cmp
and
cmp
mov
aaa
mov
cmp
inc
and
inc
shll
es
ror
mov
leave
mov
sub
cmpsl
cmpsl
fidivrs
mov
inc
xor
inc
mov
mov
cmp
inc
xor
ret
ret
mov
mov
mov
mov
rorl
mov
mov
cmp
lret
int
enter
inc
int
sub
and
mov
movsb
inc
and
into
cmp
mov
mov
mov
mov
inc
cmpsl
mov
inc
inc
dec
aas
ss
and
xor
leave
mov
xor
dec
rol
cmp
cmp
mov
xor
inc
dec
mov
inc
mov
sub
xor
xor
aas
cmp
mov
cmp
ss
mov
mov
xor
dec
inc
push
xor
shlb
mov
iret
inc
dec
test
dec
dec
rclb
aaa
aas
leave
cmp
cmp
mov
inc
inc
int
and
movsb
movsb
aaa
int
movsb
ds
and
faddp
cmpsl
dec
cmp
and
dec
mov
mov
rol
dec
lret
cmp
and
aaa
dec
rorb
and
xor
inc
mov
mov
mov
push
mov
movsb
dec
and
iret
mov
int
mov
mov
aaa
xor
inc
shlb
enter
inc
inc
ss
mov
shll
xor
inc
inc
rorb
cmp
sub
aaa
int
dec
and
rolb
leave
cmp
and
mov
and
mov
cmp
xor
movsb
mov
xor
mov
int
mov
xor
rcl
inc
mov
inc
xor
dec
mov
inc
daa
lds
lds
mov
mov
movsl
aaa
cmp
and
xor
sub
mov
mov
dec
mov
lret
mov
cmp
into
dec
mov
movsl
mov
inc
mov
xor
and
xor
and
mov
cmp
rorl
je
mov
sub
cmpl
jbe
adc
jmp
push
push
push
push
call
mov
mov
xor
xor
shrd
shr
mov
mov
and
mov
cmpl
jl
sub
jmp
push
pushl
push
call
mov
mov
jmp
sbb
mov
insb
subl
cmpsl
cwtl
pop
xor
pop
jnp
jmp
jmp
mov
xor
and
mov
dec
cmpsl
int
dec
movsl
xor
mov
ret
mov
movsb
push
test
enter
ret
aas
lds
xor
mov
sub
ss
ret
mov
mov
les
movsl
es
into
leave
xor
inc
push
mov
cmp
iret
cmp
mov
mov
dec
mov
fisubs
inc
dec
daa
mov
inc
mov
dec
xor
mov
mov
mov
mov
cmp
shlb
ror
xor
and
mov
into
inc
xor
dec
cmp
xor
push
mov
les
fidivs
mov
cmp
ss
fidivrs
dec
xor
xor
mov
ss
enter
sub
iret
mov
and
cmp
and
aas
daa
lds
mov
rorb
ret
and
mov
mov
mov
lret
and
mov
xor
and
into
ss
mov
mov
dec
inc
cmp
dec
mov
lret
xor
ss
shlb
mov
ror
mov
lds
mov
mov
into
mov
and
cmp
xor
mov
and
sub
cmpsl
and
dec
mov
ss
mov
inc
mov
fisubrs
mov
inc
cmp
mov
mov
shll
mov
inc
inc
mov
and
inc
dec
lds
inc
mov
mov
dec
xor
cmp
inc
inc
and
dec
leave
dec
and
movsl
sub
dec
sub
mov
mov
movsl
and
mov
ss
test
movsl
dec
ror
dec
xor
es
mov
rol
aaa
dec
dec
inc
movsb
cmpsl
mov
leave
lret
mov
xor
mov
shlb
xor
daa
sub
inc
and
es
xor
or
mov
or
mov
mov
xor
subl
xor
addl
mov
mov
mov
andl
shrd
addl
shl
xorl
xor
or
sbbl
mov
mov
mov
shll
xorl
mov
jmp
out
mov
addl
or
adc
jmp
ret
inc
mov
mov
enter
sub
int
sub
dec
int
xor
inc
into
mov
mov
shll
test
mov
mov
mov
mov
movsl
enter
fmulp
shll
dec
inc
cmp
dec
lret
and
daa
shlb
mov
mov
mov
dec
dec
mov
ds
cmp
shlb
cmp
test
aas
enter
mov
inc
mov
sarb
shlb
mov
sarb
mov
leave
cmp
dec
into
movsl
xor
ret
xor
inc
and
mov
mov
daa
ret
mov
ss
and
dec
les
test
leave
int
ror
les
enter
int
dec
aaa
mov
iret
lret
into
sarb
and
ret
push
cmp
cmp
sub
cmp
mov
shll
mov
mov
mov
inc
es
aas
sub
and
dec
xor
les
aaa
movsl
push
mov
and
inc
inc
test
mov
dec
rcl
mov
mov
mov
and
shll
shll
test
les
mov
cmp
mov
inc
mov
dec
mov
movsl
int
cmp
aaa
and
cmp
test
dec
mov
ds
ds
into
mov
cmp
mov
dec
mov
es
mov
and
movsb
and
movsl
int
movsl
cmp
mov
mov
mov
mov
test
mov
lret
leave
shlb
mov
xor
inc
mov
inc
test
mov
cmp
xor
mov
inc
xor
les
inc
dec
into
cmp
and
mov
ret
ds
cmpsl
es
les
and
movsl
movsb
and
xor
mov
int
mov
xor
xor
mov
add
mov
xorl
xor
subl
or
andl
shr
addl
or
movl
cmp
jne
movl
cmp
movl
je
jmp
andl
mov
sub
mov
xor
subl
xor
cmpl
jge
jmp
pushl
call
shrd
shr
mov
mov
mov
jmp
inc
test
jp
lods
mov
out
stc
add
fwait
adc
aas
jmp
jmp
aaa
and
into
inc
mov
push
inc
mov
mov
dec
ds
test
mov
dec
test
aaa
into
mov
es
daa
xor
xor
mov
lret
inc
enter
inc
iret
mov
mov
int
lret
xor
mov
and
sub
cmpsl
into
sub
sub
mov
iret
mov
mov
aaa
aaa
iret
test
les
sarb
mov
xor
mov
and
mov
and
xor
mov
fisubrs
sarb
sarb
int
es
cmp
xor
ds
ss
lds
rolb
iret
dec
mov
dec
and
es
inc
mov
xor
mov
inc
movsb
and
xor
inc
and
xor
inc
cmpsl
ret
inc
lret
inc
mov
lds
xor
and
mov
es
and
mov
rol
ret
mov
ret
ret
mov
and
es
aaa
and
inc
cmp
and
movsl
dec
mov
xor
mov
mov
cmp
mov
dec
dec
ss
inc
mov
inc
movsl
aas
shll
and
mov
sarl
and
mov
mov
mov
aaa
mov
ret
lret
aaa
ds
int
mov
cmp
mov
ret
dec
aas
dec
cmp
es
into
mov
les
xor
dec
lret
mov
mov
mov
xor
mov
mov
cmpsl
and
lds
inc
mov
cmpsl
daa
and
aas
daa
xor
dec
dec
leave
inc
dec
mov
daa
mov
mov
dec
lds
les
into
inc
mov
lret
leave
mov
push
mov
ss
mov
mov
mov
and
movl
roll
shlb
cmpsl
mov
and
dec
test
dec
lret
les
dec
and
cmp
ret
xor
xor
sbbl
or
adc
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
jmp
push
xor
daa
cld
out
and
inc
mov
add
jmp
jmp
mov
lret
inc
dec
ss
mov
inc
and
mov
mov
xor
dec
and
xor
mov
and
movsl
mov
es
inc
dec
cmpsl
cmp
shlb
mov
cmp
mov
push
leave
mov
es
fidivrs
and
mov
mov
cmpsl
shrb
dec
and
lret
roll
lds
fidivs
aas
mov
xor
test
movsl
dec
test
test
sarb
aas
es
xor
and
cmp
xor
mov
test
int
sub
daa
cmp
es
dec
aas
dec
xor
and
mov
mov
xor
inc
xor
mov
cmpsl
aas
mov
cmp
cmp
mov
les
mov
leave
mov
and
faddp
movsb
dec
test
enter
es
es
push
movsl
mov
es
iret
aaa
mov
and
xor
aaa
int
into
aas
aas
mov
xor
cmp
mov
mov
and
dec
mov
and
inc
shlb
mov
sub
mov
int
mov
mov
xor
mov
xor
xor
aas
cmp
cmpsl
iret
dec
sarb
roll
mov
mov
ds
test
xor
and
and
lds
xor
and
mov
mov
mov
es
mov
mov
mov
into
lret
inc
inc
aas
mov
iret
fidivs
push
fidivs
movsb
ss
leave
mov
mov
ss
inc
xor
xor
mov
cmp
inc
inc
movsb
and
xor
xor
xor
mov
and
lret
mov
fisubrs
mov
mov
enter
inc
lds
dec
mov
lds
movsl
lds
ss
fidivrs
dec
rolb
jne
add
add
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
push
fldt
ret
push
enter
mov
loope
jae
mov
jmp
cmp
int
sarb
shlb
roll
xor
shll
cmpsl
daa
inc
xor
cmpsl
xor
lret
cmp
mov
push
and
iret
mov
mov
inc
xor
mov
and
and
xor
and
ret
cmp
inc
xor
mov
inc
dec
daa
ficoms
cmp
mov
rorb
xor
int
ds
mov
inc
mov
inc
cmpsl
ss
leave
mov
xor
xor
and
lret
ss
and
xor
fmulp
cmpsl
mov
mov
lret
xor
daa
xor
xor
cmpsl
leave
mov
xor
and
movsl
into
lret
mov
and
and
push
fidivrs
mov
aas
inc
dec
and
ret
dec
cmp
mov
mov
lds
cmp
and
xor
mov
daa
cmpsl
mov
mov
and
dec
ds
xor
shll
mov
daa
mov
mov
mov
iret
sarl
shrb
lret
iret
iret
and
cmp
cmpsl
inc
mov
lret
daa
iret
movsb
fiadds
and
movsl
es
cmpsl
xor
and
mov
int
shlb
inc
xor
fidivrs
iret
mov
dec
aas
and
dec
dec
iret
and
mov
dec
aas
xor
cmp
ret
mov
dec
xor
dec
test
mov
mov
and
and
dec
and
roll
mov
mov
aaa
leave
inc
fisubs
mov
mov
iret
cmp
inc
mov
aas
les
into
lret
and
dec
cmp
dec
sarb
test
aas
inc
ret
leave
xor
movsb
mov
mov
cmp
dec
int
mov
shll
cmp
and
and
and
mov
inc
es
movsl
shlb
inc
mov
int
dec
es
inc
es
ret
mov
mov
cmp
cmpsl
mov
mov
jne,pt
jmp
cmp
mov
add
pop
jno
jmp
jmp
dec
dec
cmp
lret
movsb
mov
ret
movsb
xor
and
iret
push
xor
cmp
mov
sub
rol
dec
mov
cmp
movsb
mov
sub
mov
movsb
dec
mov
mov
mov
dec
inc
enter
and
and
mov
movsb
mov
mov
iret
shll
xor
cmp
int
xor
mov
and
mov
xor
push
int
inc
ret
inc
dec
push
test
mov
into
ds
mov
dec
mov
push
mov
es
and
mov
ss
mov
inc
rol
xor
inc
inc
mov
mov
sub
movsb
shrb
inc
xor
movsl
mov
mov
aaa
into
mov
mov
xor
mov
enter
daa
ds
inc
xor
and
into
ss
ret
into
mov
movsl
mov
enter
and
mov
movsb
cmpsl
aas
mov
inc
mov
daa
dec
and
xor
leave
and
and
xor
inc
inc
dec
cmpsl
and
cmp
xor
ds
shlb
xor
dec
mov
mov
and
test
fidivs
les
mov
push
sub
cmp
xor
xor
sub
mov
movsb
lret
dec
inc
xor
xor
inc
dec
enter
mov
dec
mov
mov
inc
and
mov
mov
enter
mov
xor
inc
mov
enter
rol
mov
movsb
test
and
and
cmpsl
xor
inc
movsl
xor
shlb
shlb
test
ret
mov
inc
xor
lret
aas
iret
dec
mov
test
dec
ret
xor
movsl
inc
xor
leave
and
xor
roll
and
ss
ret
mov
mov
lds
mov
mov
mov
ret
shlb
push
lds
pushf
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
jmp
fwait
mov
jnp
jl
sbb
jp
and
jmp
xor
inc
ds
mov
aas
cmpsl
leave
sub
xor
dec
movsl
mov
cmpsl
mov
iret
dec
test
lret
mov
mov
mov
inc
dec
mov
aaa
push
mov
mov
and
mov
xor
movsl
dec
mov
daa
lret
into
aas
xor
mov
sarb
rol
mov
mov
mov
mov
push
test
xor
and
shlb
mov
leave
mov
and
movsb
dec
daa
les
cmpsl
xor
inc
mov
dec
inc
shrb
and
mov
mov
shlb
mov
xor
ds
dec
push
inc
cmp
fidivs
lret
mov
mov
inc
inc
mov
sub
leave
dec
dec
mov
dec
inc
xor
es
leave
inc
inc
mov
sub
xor
aas
int
cmpsl
xor
leave
inc
lret
xor
mov
mov
lret
inc
roll
inc
xor
and
push
fisubrs
mov
rol
mov
mov
movsl
inc
mov
and
ret
fidivs
enter
mov
and
ds
les
movsl
xor
daa
dec
mov
mov
cmp
mov
movsl
leave
mov
shlb
dec
mov
int
les
aaa
mov
dec
xor
mov
mov
and
mov
dec
ss
mov
mov
mov
and
movsb
shlb
and
push
mov
xor
sub
xor
xor
xor
xor
inc
xor
dec
cmp
mov
movsl
cmp
movsl
mov
cmp
cmp
and
cmp
ret
mov
mov
and
mov
iret
push
fidivrs
ds
movsl
shlb
inc
xor
int
enter
movsb
mov
inc
mov
daa
mov
dec
es
es
cmpsl
and
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
cmpsb
mov
data16
insb
clc
pop
adcl
jmp
jmp
mov
rorb
cmp
dec
mov
xor
mov
movsl
es
sub
into
iret
xor
mov
inc
cmp
rol
mov
mov
and
ds
sub
inc
ds
ds
and
mov
faddp
mov
xor
inc
and
xor
and
test
movsl
test
xor
ret
mov
mov
mov
mov
movsb
shlb
shlb
ds
mov
mov
daa
xor
inc
inc
mov
ds
mov
dec
rorb
mov
mov
and
cmp
mov
ds
ret
mov
mov
inc
cmp
mov
cmpsl
test
push
inc
and
cmp
cmp
test
test
and
shlb
cmp
aaa
test
mov
dec
test
mov
into
es
dec
shll
mov
and
mov
xor
dec
int
mov
daa
xor
mov
xor
push
mov
into
dec
lds
inc
aas
sub
sub
sarl
dec
dec
fmulp
ror
shlb
cmpsl
ss
dec
shrb
cmp
inc
dec
iret
rol
shlb
ror
leave
cmp
ss
and
aaa
xor
and
xor
dec
cmp
shll
dec
test
cmp
xor
mov
sub
mov
xor
inc
leave
inc
lds
aas
xor
push
lret
inc
les
movsl
movsb
leave
dec
xor
xor
and
es
xor
mov
daa
inc
daa
inc
lret
daa
xor
push
xor
into
mov
mov
shlb
lds
xor
lret
push
movsl
cmpsl
movsl
dec
inc
iret
inc
cmp
ret
mov
dec
mov
rolb
ss
dec
mov
mov
and
cmpsl
xor
lds
into
mov
mov
mov
mov
ret
fisubs
fmulp
test
cmp
cmp
xor
and
mov
cmp
jne
mov
mov
mov
mov
xor
jmp
pop
inc
and
pushf
sub
pop
je
mov
or
aas
ljmp
movsl
sub
mov
push
inc
dec
xor
xor
sarb
and
inc
ror
inc
iret
dec
mov
mov
es
test
mov
xor
cmp
dec
les
mov
inc
shlb
mov
daa
and
and
inc
int
ret
mov
cmp
iret
dec
and
and
sub
mov
inc
mov
aas
movsb
xor
mov
daa
ss
xor
dec
mov
mov
mov
daa
mov
inc
aas
lds
shll
shll
mov
xor
mov
lret
xor
mov
mov
aas
cmp
cmp
xor
iret
mov
es
dec
xor
into
mov
inc
mov
dec
dec
push
mov
dec
fidivrs
into
mov
test
enter
mov
ds
dec
dec
mov
cmp
rolb
mov
xor
leave
test
ds
ds
and
inc
dec
mov
iret
test
xor
shlb
push
dec
les
enter
mov
and
cmp
mov
lds
mov
and
and
mov
mov
movsb
mov
dec
cmp
es
xor
xor
shll
ror
int
dec
movsb
dec
mov
movsl
dec
mov
cmp
mov
rorb
mov
enter
cmp
les
lret
les
and
cmp
mov
xor
and
cmpsl
mov
cmp
lret
and
inc
mov
lds
cmp
aaa
mov
mov
inc
movsb
inc
lret
dec
push
xor
sub
and
into
les
mov
xor
xor
xor
sub
inc
xor
es
mov
mov
aaa
inc
into
ss
cmp
inc
sarl
dec
mov
aaa
rorl
dec
movsb
dec
cmpsl
ret
and
movsb
mov
cmpsl
mov
cmp
shr
jl
add
push
test
xchg
rcrb
js
mov
jmp
jmp
push
mov
test
mov
es
mov
movsb
mov
aas
dec
cmpsl
xor
iret
rcl
inc
push
daa
mov
and
xor
iret
lds
and
movsb
sub
and
aaa
cmp
enter
mov
cmpsl
ds
rol
movsb
leave
mov
inc
and
xor
mov
mov
mov
sub
fidivs
inc
mov
ss
mov
shlb
shlb
inc
xor
mov
into
mov
and
mov
push
mov
mov
dec
mov
mov
mov
and
cmp
xor
mov
iret
mov
mov
into
inc
cmpsl
inc
ss
dec
cmp
inc
into
movsb
int
push
cmpsl
mov
cmp
lret
mov
inc
mov
leave
fidivs
and
dec
cmp
xor
into
enter
dec
mov
enter
es
mov
xor
ss
into
test
dec
into
into
daa
mov
movsb
mov
mov
mov
xor
mov
es
mov
dec
lds
push
roll
xor
cmp
lret
mov
dec
mov
and
daa
lret
mov
mov
mov
enter
daa
mov
test
int
and
into
xor
ds
shlb
enter
mov
aas
sarl
and
cmpsl
shlb
xor
mov
movsb
int
xor
movsb
movsl
mov
xor
mov
mov
into
cmp
inc
dec
cmp
cmp
inc
shlb
shlb
dec
fmulp
aaa
aas
movsb
mov
inc
and
movl
iret
cmp
sub
sarl
shlb
mov
shlb
aaa
mov
mov
cmpsl
mov
xor
and
mov
dec
mov
cmp
mov
xor
mov
aaa
cmpsl
sub
ror
mov
rclb
enter
ret
roll
call
jmp
jmp
push
or
test
sbb
js
test
jmp
xor
movsl
mov
daa
cmp
movsl
mov
mov
enter
mov
and
mov
mov
mov
mov
and
lds
leave
xor
mov
mov
sub
and
push
inc
cmp
ret
mov
and
cmp
movsl
mov
lds
inc
cmp
inc
fmulp
mov
xor
mov
inc
mov
inc
enter
shlb
mov
rolb
inc
dec
dec
inc
mov
xor
dec
cmpsl
leave
mov
cmp
dec
ss
mov
xor
aas
sub
ds
inc
cmp
and
mov
mov
mov
dec
aaa
dec
cmpsl
ss
dec
cmpsl
dec
lret
into
cmp
movsl
iret
cmp
dec
leave
xor
xor
mov
cmpsl
mov
cmp
inc
int
xor
lret
dec
inc
into
into
mov
dec
inc
inc
xor
iret
mov
dec
mov
enter
int
mov
mov
mov
cmp
lret
mov
and
mov
push
movsb
inc
cmpsl
es
les
shlb
movsl
enter
leave
ss
mov
test
xor
fisubs
mov
mov
mov
aas
mov
enter
mov
cmp
dec
dec
mov
daa
push
mov
mov
and
enter
inc
inc
mov
mov
inc
rolb
and
mov
mov
mov
cmp
roll
mov
mov
rorb
xor
shll
mov
push
dec
mov
mov
xor
and
cmp
test
daa
and
dec
xor
mov
enter
dec
mov
rorb
movsl
int
ds
mov
xor
mov
inc
xor
and
iret
and
mov
mov
dec
inc
mov
into
and
ds
mov
cmp
inc
mov
push
add
shlb
shr
add
add
and
mov
mov
or
aas
ljmp
dec
mov
mov
dec
mov
and
ss
xor
and
into
daa
and
mov
cmp
mov
cmp
into
cmpsl
mov
fidivs
xor
inc
ret
mov
sarb
inc
aaa
xor
aas
dec
dec
xor
dec
mov
mov
cmpsl
dec
movsl
aas
aas
dec
es
mov
ror
mov
inc
lret
inc
mov
mov
lds
movsb
dec
es
inc
mov
ror
cmpsl
mov
ret
lret
enter
dec
xor
inc
dec
inc
mov
mov
and
daa
sarl
dec
inc
aas
dec
ss
mov
dec
cmp
ret
enter
mov
inc
mov
cmpsl
test
dec
mov
push
ret
es
lret
inc
test
dec
xor
and
xor
inc
lret
lds
mov
xor
dec
iret
mov
mov
aas
mov
xor
movsb
ror
cmp
mov
inc
mov
mov
mov
cmpsl
dec
xor
mov
mov
mov
ret
into
movsb
mov
and
enter
movsl
mov
xor
mov
movsb
enter
mov
movsb
and
dec
daa
cmp
sub
xor
ret
aaa
mov
and
int
inc
test
mov
movsl
inc
aas
mov
mov
mov
and
dec
xor
mov
rorb
les
xor
mov
iret
xor
xor
es
mov
dec
mov
and
push
mov
dec
inc
enter
push
and
and
dec
aas
mov
mov
dec
mov
lret
dec
mov
aaa
mov
aaa
mov
inc
inc
shlb
and
ss
int
int
xor
aaa
and
sarl
mov
xor
es
xor
lret
mov
inc
xor
and
xor
dec
xor
lds
push
and
fisubrs
leave
mov
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
push
jbe
fs
cli
add
gs
xchg
sub
jmp
and
mov
and
mov
mov
int
dec
and
mov
mov
mov
inc
mov
mov
and
lret
mov
dec
leave
cmp
mov
inc
xor
cmp
ret
lret
leave
enter
and
dec
and
mov
dec
cmpsl
mov
mov
dec
dec
sarb
mov
sarb
rolb
xor
inc
xor
int
push
test
inc
enter
mov
cmp
es
xor
dec
fmulp
inc
xor
and
lret
int
inc
xor
aas
xor
mov
mov
dec
xor
and
test
dec
dec
shlb
movsl
xor
cmp
and
movsl
cmpsl
shlb
xor
mov
inc
mov
inc
faddp
test
and
cmp
rol
inc
sub
inc
int
int
and
ret
sub
xor
ss
movsb
daa
ds
cmp
faddp
into
cmp
push
movsl
sub
dec
enter
movsb
xor
movsb
inc
mov
mov
mov
cmp
inc
dec
xor
mov
dec
fiadds
dec
mov
cmpsl
cmpsl
enter
dec
mov
lret
lds
and
mov
test
and
into
iret
inc
fiadds
and
mov
mov
aaa
mov
and
int
shll
mov
inc
and
inc
xor
mov
ss
cmp
cmp
dec
rol
movsl
dec
xor
movsl
leave
cmp
inc
mov
and
dec
mov
cmp
sarl
mov
inc
int
and
xor
dec
mov
mov
mov
mov
cmp
enter
lret
cmp
mov
sarb
dec
mov
mov
lret
inc
inc
sarl
xor
mov
xor
cmp
mov
push
xor
cmp
test
cmpsl
aas
mov
and
movsl
mov
add
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
jmp
fidivrl
mov
cmpsl
jbe
mov
test
jmp
jmp
push
mov
sub
and
iret
mov
mov
inc
and
aaa
dec
movsl
inc
cmp
xor
and
dec
mov
xor
and
inc
mov
push
mov
xor
mov
cmp
ss
dec
movsb
aaa
mov
dec
dec
dec
int
and
and
es
mov
mov
fisubs
movsb
mov
inc
cmp
inc
mov
enter
mov
and
aas
into
mov
dec
leave
xor
mov
mov
dec
mov
and
xor
inc
cmpsl
movsb
ds
into
movsb
sub
daa
daa
and
xor
inc
mov
cmpsl
shlb
and
mov
and
inc
inc
xor
inc
dec
mov
dec
xor
cmp
cmp
sarb
and
dec
les
sarb
and
and
lds
dec
mov
push
xor
daa
mov
dec
mov
movsb
mov
dec
dec
inc
mov
xor
les
aaa
cmp
iret
sub
mov
inc
sarb
mov
mov
mov
mov
mov
and
xor
xor
ret
lret
inc
shlb
mov
and
and
lret
mov
lret
movsb
xor
lds
shlb
mov
movsb
xor
dec
mov
lds
and
rorl
ret
dec
dec
test
mov
cmpsl
and
dec
lds
sub
inc
inc
inc
inc
xor
inc
mov
ret
ss
shlb
dec
push
cmp
inc
mov
mov
xor
mov
mov
mov
ret
aaa
mov
xor
daa
inc
mov
ss
ret
leave
lret
inc
cmp
into
fidivrs
cmp
and
enter
xor
mov
dec
mov
daa
movsl
mov
enter
aas
mov
cmp
jl
add
xchg
pop
sub
test
imul
adc
test
jmp
aas
les
inc
rolb
int
iret
enter
mov
cmpsl
and
dec
dec
xor
es
mov
inc
mov
and
mov
daa
xor
inc
inc
mov
leave
dec
and
iret
movsl
mov
sub
mov
shlb
movsl
dec
inc
xor
ds
mov
inc
dec
test
dec
rolb
leave
mov
mov
daa
into
mov
xor
mov
iret
lds
mov
dec
mov
mov
mov
movsl
and
dec
mov
dec
movsb
and
into
xor
mov
mov
and
mov
mov
fidivs
push
cmp
inc
aaa
and
xor
mov
and
ret
mov
es
inc
mov
mov
ss
fimuls
dec
test
aaa
mov
mov
les
fimuls
mov
iret
ret
mov
xor
dec
dec
enter
lret
fisubs
mov
xor
mov
xor
dec
mov
es
mov
shlb
mov
cmp
daa
aaa
sub
mov
cmpsl
inc
lret
dec
xor
dec
cmpsl
inc
shlb
mov
xor
and
lret
mov
inc
ret
and
mov
mov
dec
movsb
mov
inc
into
sarb
cmp
inc
mov
xor
cmp
dec
movsb
cmp
mov
les
mov
movsb
mov
inc
cmp
mov
int
mov
inc
lret
mov
mov
mov
dec
inc
mov
cmp
aas
iret
mov
int
push
ret
cmp
mov
mov
rcll
lds
and
movsb
xor
into
mov
into
xor
ds
lds
mov
dec
leave
mov
movsb
cmpsl
mov
mov
mov
mov
ret
ss
cmpsl
dec
mov
mov
dec
cmp
ret
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
jmp
sub
out
jl
jl
cltd
sbb
test
jmp
fisubs
mov
and
mov
inc
shll
dec
iret
dec
test
xor
push
movsb
mov
mov
enter
dec
inc
iret
mov
and
cmp
and
mov
and
cmp
mov
fidivrs
mov
inc
les
mov
int
shlb
es
xor
mov
and
movsb
inc
and
aaa
dec
mov
cmp
xor
ror
inc
cmp
xor
enter
inc
xor
cmp
mov
xor
xor
movsl
dec
dec
shll
dec
mov
les
movsb
es
ss
xor
xor
dec
mov
and
lret
mov
dec
dec
into
iret
xor
mov
ds
mov
inc
mov
xor
and
and
mov
inc
mov
inc
int
fisubs
inc
and
cmp
mov
xor
mov
and
inc
movsl
xor
aas
xor
and
dec
cmp
and
mov
inc
and
cmp
mov
inc
and
xor
mov
lds
daa
xor
aas
enter
mov
sub
xor
xor
mov
aaa
fisubrs
aas
ss
mov
aas
lret
iret
mov
mov
mov
mov
shll
dec
movsl
test
cmpsl
mov
lds
sarl
sarb
xor
mov
dec
ror
dec
and
xor
mov
ds
movsl
inc
mov
sarl
ret
dec
daa
int
mov
cmpsl
and
mov
sub
cmp
lds
iret
xor
enter
and
ret
and
xor
faddp
movsl
xor
lret
and
shlb
xor
sarb
mov
cmp
mov
mov
sarb
xor
xor
sub
les
inc
mov
mov
movl
mov
mov
mov
shrd
jmp
in
iret
pop
sarb
int
js
push
mov
aas
ljmp
dec
ds
mov
leave
cmp
rol
sub
inc
xor
mov
mov
xor
aaa
mov
daa
aaa
into
fidivs
cmp
rorb
inc
and
and
xor
and
cmp
dec
les
and
mov
dec
inc
mov
ds
leave
lret
cmp
mov
and
sub
mov
iret
mov
inc
mov
cmp
fidivs
xor
inc
mov
iret
cmpsl
xor
cmpsl
xor
mov
xor
xor
shlb
and
inc
inc
dec
mov
iret
xor
mov
test
enter
mov
xor
and
les
and
mov
aas
dec
dec
inc
dec
xor
shlb
xor
les
cmpsl
mov
dec
inc
and
and
and
cmp
dec
cmp
ss
cmpsl
rolb
inc
and
xor
mov
xor
dec
and
fidivs
ds
les
and
mov
mov
mov
sub
mov
movsb
cmp
sub
rorb
and
dec
xor
mov
mov
mov
xor
mov
cmp
and
mov
movsb
xor
dec
enter
inc
mov
cmp
dec
mov
inc
xor
ds
inc
test
mov
cmp
dec
inc
sub
shlb
inc
mov
mov
shlb
inc
dec
int
xor
inc
and
mov
dec
xor
enter
inc
xor
xor
mov
mov
sub
mov
test
inc
leave
push
mov
aaa
push
test
and
daa
ds
into
movsl
inc
inc
shlb
mov
mov
iret
and
leave
les
inc
xor
into
mov
rorb
into
mov
mov
xor
xor
mov
jmp
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
jmp
mov
subb
data16
sub
jmp
xor
test
mov
rolb
ret
xor
lret
inc
dec
inc
fisubs
int
dec
mov
mov
es
inc
int
cmp
dec
movsl
inc
test
lret
and
inc
mov
int
fmulp
and
mov
shll
cmp
inc
movsl
mov
sub
cmp
shrb
mov
and
cmp
dec
lret
xor
iret
dec
dec
ds
inc
mov
mov
mov
dec
inc
and
and
enter
cmp
mov
mov
aaa
and
daa
into
daa
dec
mov
movsb
mov
into
daa
inc
ds
dec
inc
and
sub
ds
leave
mov
and
dec
xor
sarb
xor
aas
into
mov
shlb
mov
cmp
shlb
mov
inc
mov
mov
xor
cmp
inc
inc
mov
lret
movsb
and
movsl
test
inc
into
inc
cmp
ds
daa
leave
lds
dec
dec
inc
movsb
mov
es
ss
mov
es
mov
ss
mov
shlb
dec
cmp
aas
ss
into
and
cmp
mov
inc
cmp
lds
es
aaa
mov
and
xor
inc
movsb
fisubs
sub
into
and
movsl
dec
inc
dec
mov
mov
mov
dec
mov
fidivs
xor
xor
mov
xor
mov
aas
lds
les
cmp
mov
dec
mov
shlb
aas
and
inc
mov
inc
enter
cmp
into
ss
cmp
aas
mov
into
ret
fiadds
mov
inc
and
and
enter
xor
into
fidivs
enter
dec
sarb
mov
aaa
movsl
mov
xor
mov
aaa
rcr
cmp
dec
xor
xor
faddp
inc
inc
dec
xor
enter
mov
test
push
enter
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
jmp
xchg
pop
sub
test
mov
lret
pop
mov
cs
jmp
mov
mov
daa
mov
lds
inc
mov
cmp
inc
mov
mov
mov
xor
movsb
mov
aaa
movsl
and
int
leave
inc
and
ss
xor
leave
aas
ret
int
dec
lds
movsb
mov
and
mov
aas
aaa
les
movsl
sub
mov
xor
xor
fisubs
leave
mov
shlb
mov
leave
dec
and
shlb
mov
iret
dec
int
sub
mov
iret
test
test
test
lret
xor
mov
inc
sarl
ds
into
xor
mov
movsl
inc
cmp
mov
mov
cmp
shlb
mov
sub
dec
cmp
mov
mov
mov
mov
mov
inc
fimuls
lret
rorb
inc
inc
ss
enter
inc
mov
inc
faddp
mov
movsb
mov
xor
mov
leave
cmp
test
ss
shll
dec
iret
mov
cmp
es
test
test
mov
dec
inc
and
movsl
enter
dec
dec
and
enter
and
and
cmp
mov
inc
mov
and
mov
daa
dec
cmpsl
and
ret
mov
mov
mov
into
mov
xor
ret
and
les
and
ds
mov
sub
and
ret
leave
mov
iret
movsb
xor
and
mov
movsb
cmpsl
push
mov
dec
mov
and
inc
mov
xor
xor
ds
ds
sub
mov
mov
mov
cmp
cmpsl
mov
into
and
dec
and
and
int
mov
and
rol
dec
and
aas
xor
and
cmp
movsl
ss
xor
and
into
mov
cmpsl
cmpsl
and
and
mov
xor
dec
leave
mov
ss
ds
inc
adc
jge
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
xchg
xlat
jb
js
cwtl
mov
jge
pop
mov
jne
int
jmp
jmp
inc
daa
les
mov
lds
shlb
mov
mov
inc
mov
into
mov
dec
dec
and
and
enter
mov
mov
mov
inc
xor
lret
test
movsl
mov
movsl
inc
mov
fmulp
mov
ds
into
xor
and
lds
cmp
mov
mov
and
fiadds
inc
mov
inc
mov
enter
cmp
ret
int
cmp
dec
rorb
inc
cmp
xor
xor
iret
iret
and
inc
movsl
mov
cmp
movsl
rorl
inc
lret
cmp
xor
les
inc
mov
cmp
and
sarl
ds
leave
ret
xor
dec
cmp
mov
inc
mov
push
es
mov
es
es
xor
mov
and
leave
enter
inc
mov
rol
xor
dec
rol
and
mov
aaa
mov
mov
xor
xor
shrb
inc
mov
dec
xor
lret
movsl
sub
into
aaa
mov
mov
mov
mov
inc
and
mov
mov
xor
leave
and
iret
mov
inc
test
inc
inc
and
leave
and
shlb
dec
iret
mov
and
cmp
mov
mov
and
cmp
ret
fidivs
dec
inc
mov
aas
and
xor
dec
into
xor
xor
dec
aas
int
ret
mov
mov
mov
dec
into
mov
leave
mov
push
and
movsl
mov
mov
mov
mov
mov
dec
int
mov
mov
ss
aaa
mov
xor
ror
inc
xor
cmp
mov
mov
and
sarb
mov
mov
dec
mov
xor
mov
les
inc
les
dec
dec
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
jmp
nop
sbb
push
insb
inc
fs
sub
hlt
jo
jmp
jmp
mov
cmpsl
fidivs
cmpsl
inc
push
xor
mov
push
aaa
xor
test
enter
inc
cmpsl
int
inc
dec
dec
cmp
into
and
mov
dec
dec
xor
ss
and
daa
movsl
daa
movsb
inc
mov
and
cmp
iret
leave
shll
leave
inc
dec
xor
into
lds
and
iret
es
fidivrs
inc
lds
push
inc
dec
sub
test
lds
xor
inc
int
lret
enter
mov
inc
sub
shlb
mov
ds
mov
movsb
xor
inc
les
shlb
int
mov
lret
iret
dec
mov
lret
mov
cmp
mov
cmp
mov
and
ret
aas
mov
test
dec
and
es
movsb
xor
mov
xor
cmp
xor
mov
mov
mov
dec
dec
mov
mov
mov
mov
mov
mov
and
xor
mov
lds
mov
ds
and
int
mov
lds
push
lret
and
dec
enter
and
mov
mov
mov
mov
and
aas
mov
mov
dec
aas
sarb
xor
fidivrs
mov
mov
and
ret
movl
mov
inc
test
and
lds
aas
inc
xor
xor
cmpsl
mov
dec
cmp
cmpsl
mov
dec
and
push
push
dec
mov
ret
mov
test
es
fmulp
xor
inc
movsb
and
int
and
mov
cmpsl
and
shll
mov
ret
cmpsl
inc
mov
into
daa
mov
mov
cmpsl
aas
mov
mov
iret
mov
movsb
movsl
fidivrs
enter
les
int
movsl
cmp
ret
ds
int
rolb
cmp
fisubs
mov
mov
mov
xor
or
jmp
mov
push
add
sbb
rcll
jmp
jmp
mov
mov
lret
inc
cmp
sub
dec
inc
mov
aaa
iret
iret
xor
mov
iret
dec
xor
enter
shlb
aaa
inc
aaa
cmpsl
shll
mov
inc
mov
dec
enter
mov
xor
inc
int
mov
mov
dec
enter
leave
xor
int
dec
and
dec
inc
mov
shlb
ror
dec
dec
ret
shlb
mov
mov
and
mov
ror
iret
mov
xor
mov
cmp
dec
and
mov
cmp
xor
movsl
xor
mov
mov
inc
sub
mov
xor
int
int
push
xor
and
ds
mov
aas
iret
rol
into
mov
mov
fisubrs
mov
cmp
daa
mov
sub
aaa
dec
mov
cmpsl
inc
inc
mov
test
leave
mov
mov
xor
movsb
mov
fisubs
xor
ss
mov
dec
xor
lret
les
leave
dec
and
mov
lret
xor
leave
movsb
test
and
mov
cmp
movsl
enter
dec
aaa
dec
es
enter
into
lds
iret
mov
mov
movsb
leave
sub
es
mov
xor
lret
mov
mov
mov
mov
mov
into
test
iret
sub
movsl
mov
and
mov
cmp
and
xor
mov
mov
and
dec
movsl
xor
mov
mov
xor
dec
and
ss
mov
mov
aas
mov
ret
mov
xor
mov
mov
xor
movsb
into
mov
inc
aaa
movsl
faddp
dec
mov
mov
inc
dec
ss
mov
mov
sub
inc
mov
fimuls
mov
mov
lret
xor
mov
mov
push
int
xor
movsl
mov
dec
mov
movsl
ss
movsl
into
mov
leave
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
jmp
mov
mov
pop
jmp
out
cmpsl
pop
jmp
jmp
mov
iret
mov
and
mov
and
movsb
into
mov
mov
movsb
mov
cmp
and
iret
dec
and
leave
dec
and
inc
dec
mov
movsl
aas
inc
aas
mov
fisubs
xor
ret
sub
ss
es
leave
inc
shll
int
dec
dec
mov
shlb
push
mov
xor
aas
shlb
sub
es
xor
inc
cmp
mov
int
mov
mov
dec
inc
sub
mov
cmp
mov
push
dec
cmp
inc
ss
dec
mov
inc
cmp
mov
shlb
mov
and
shlb
es
cmp
and
and
shlb
mov
and
mov
sub
mov
inc
dec
inc
movsb
mov
leave
movsl
xor
mov
mov
lds
shlb
mov
mov
ret
xor
ss
and
ds
and
dec
inc
es
les
dec
mov
leave
inc
mov
and
inc
aas
int
and
daa
iret
ds
mov
xor
cmp
inc
mov
daa
movsl
aas
cmpsl
leave
and
es
and
and
test
mov
mov
les
mov
mov
and
inc
and
shrb
int
dec
and
int
rcll
mov
mov
test
cmpsl
cmp
leave
dec
mov
and
mov
daa
and
cmp
ss
push
and
dec
inc
xor
into
xor
mov
cmpsl
cmp
mov
inc
dec
aaa
int
fisubs
cmp
daa
iret
aaa
dec
cmp
sarb
mov
iret
rorb
mov
mov
and
movsl
inc
mov
fidivrs
mov
inc
aas
movsb
inc
inc
xor
mov
es
mov
push
call
shld
shl
mov
or
xor
or
xor
xor
jmp
pushf
mov
add
mov
cmc
in
pop
xorl
jmp
inc
push
xor
rolb
mov
lds
mov
mov
shll
lds
xor
and
movsl
cmpsl
mov
shrb
movsl
mov
inc
xor
ds
daa
and
cmp
and
cmp
leave
mov
mov
mov
and
cmp
and
enter
dec
lret
inc
sarb
mov
iret
shlb
xor
mov
mov
mov
lds
lret
mov
and
mov
and
mov
leave
shlb
ret
ds
dec
movsl
mov
inc
sarb
daa
mov
xor
dec
push
xor
mov
mov
inc
mov
mov
xor
mov
mov
inc
mov
mov
ss
inc
xor
mov
mov
mov
enter
leave
shlb
dec
cmp
mov
aaa
ds
cmp
lds
and
dec
push
int
daa
int
shlb
mov
int
dec
aas
mov
dec
les
inc
and
aaa
mov
cmp
mov
iret
aas
mov
mov
shlb
lds
les
mov
mov
inc
inc
cmp
dec
and
cmp
cmpsl
mov
ret
mov
mov
and
dec
inc
mov
mov
cmpsl
dec
mov
mov
enter
lret
int
dec
int
cmp
xor
and
into
mov
movsl
dec
daa
xor
mov
xor
ret
aas
xor
and
dec
fmulp
sub
inc
fidivs
and
cmp
aaa
xor
mov
int
dec
movsl
les
xor
lret
cmp
test
mov
aas
dec
leave
daa
xor
ds
ds
mov
ror
and
and
mov
movsb
movsb
mov
test
mov
xor
push
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
jmp
nop
pushf
mov
mov
inc
jae
leavew
in
lret
xchg
jmp
jmp
mov
enter
and
dec
shlb
inc
movsl
and
lds
ret
and
and
es
inc
sub
inc
daa
dec
ss
mov
rorb
and
mov
and
inc
mov
lds
inc
and
and
es
shll
daa
movsb
shlb
mov
movsb
aas
push
enter
and
daa
mov
inc
dec
push
inc
aaa
daa
shlb
sarb
xor
fisubs
into
inc
ror
fidivs
aaa
dec
xor
leave
sarl
les
enter
mov
cmp
cmp
into
mov
lds
mov
dec
sub
mov
and
and
ret
dec
mov
push
rorb
inc
and
xor
mov
aas
and
mov
mov
dec
fmulp
mov
ds
mov
sarl
cmp
aaa
enter
xor
mov
into
es
mov
mov
test
inc
mov
and
ds
mov
movsb
mov
mov
mov
inc
int
inc
sub
lret
dec
inc
cmp
inc
mov
mov
fisubs
mov
and
mov
sub
mov
dec
rorb
inc
les
dec
mov
mov
dec
dec
and
and
mov
shlb
iret
mov
cmp
mov
lds
sarb
test
lret
push
mov
es
and
mov
mov
mov
cmp
lret
push
enter
cmp
mov
inc
mov
xor
and
mov
dec
mov
iret
xor
dec
mov
cmpsl
es
leave
movsl
mov
and
lds
les
inc
inc
rclb
inc
mov
ss
ror
test
and
mov
mov
mov
and
xor
xor
mov
lds
les
xor
leave
mov
cmp
mov
xor
xor
shl
mov
mov
mov
jmp
pop
in
lods
mov
jae
pop
jmp
cltd
xchg
jmp
jmp
xor
ror
inc
es
dec
push
dec
and
dec
movsb
inc
mov
mov
xor
into
mov
cmp
movsb
ds
xor
mov
xor
into
shll
iret
test
enter
movsl
inc
mov
cmpsl
into
mov
xor
mov
cmp
cmp
xor
lret
iret
push
mov
xor
inc
inc
inc
dec
mov
and
xor
dec
daa
mov
xor
int
mov
aas
into
sub
shlb
shlb
iret
cmp
xor
aas
mov
inc
mov
enter
mov
and
inc
mov
inc
lret
mov
lret
mov
movsb
mov
sub
lds
aaa
and
movsl
mov
dec
xor
dec
dec
and
and
daa
test
movsb
and
cmp
iret
and
cmp
iret
shll
dec
cmp
daa
dec
shlb
movsb
enter
dec
mov
mov
mov
and
shll
daa
cmp
lret
mov
xor
xor
movsb
ss
lds
mov
mov
and
es
mov
inc
aaa
xor
dec
leave
ret
mov
mov
mov
mov
mov
lds
es
enter
mov
aas
mov
mov
and
xor
ret
mov
mov
mov
dec
mov
xor
inc
and
enter
and
inc
mov
push
leave
inc
leave
inc
fidivrs
lds
mov
mov
xor
test
cmp
xor
ret
daa
shlb
shlb
sub
and
and
inc
mov
cmpsl
les
mov
dec
ss
mov
movsb
mov
mov
dec
daa
mov
mov
shll
xor
les
sub
les
shlb
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
or
mov
imul
jmp
inc
mov
mov
lods
je
cmp
lea
sbb
jmp
mov
mov
xor
xor
movsl
ret
mov
into
rol
mov
mov
xor
enter
mov
fisubs
cmp
dec
int
lds
int
mov
es
dec
movsb
enter
mov
mov
mov
dec
xor
fiadds
xor
dec
mov
ds
mov
sub
and
mov
mov
aaa
mov
and
test
and
dec
ror
aas
les
mov
xor
sub
mov
cmp
shlb
cmp
aas
fiadds
rol
sub
mov
int
sub
rcl
sub
mov
xor
dec
sub
shll
mov
mov
aaa
mov
xor
es
cmp
mov
mov
aas
xor
push
and
xor
lret
mov
daa
mov
and
enter
mov
movsl
enter
inc
cmp
and
inc
xor
lds
ss
mov
inc
and
mov
mov
mov
iret
mov
cmp
les
cmp
mov
and
mov
enter
mov
dec
dec
dec
ss
cmp
ds
ss
leave
dec
mov
mov
enter
mov
inc
dec
int
lds
and
rol
dec
dec
mov
mov
dec
mov
xor
ret
and
dec
mov
push
aas
movsb
mov
dec
mov
mov
xor
mov
movsb
cmp
mov
cmpsl
inc
mov
faddp
mov
mov
mov
rol
dec
inc
enter
int
cmp
and
int
dec
inc
xor
mov
shlb
dec
and
and
mov
fidivs
ret
mov
mov
inc
lret
dec
enter
les
ss
mov
mov
fimuls
inc
mov
aas
xor
inc
mov
int
cmp
lds
leave
daa
leave
inc
and
fisubs
ret
shlb
mov
xor
leave
leave
les
cmpsl
ror
aas
dec
into
enter
fimuls
movsl
movsl
es
xor
mov
and
test
into
push
daa
mov
aaa
ret
mov
inc
and
inc
mov
movsb
cmp
push
mov
aaa
mov
push
mov
movsb
inc
cmp
shlb
aaa
mov
leave
movsb
rcll
les
mov
inc
mov
xor
mov
mov
les
lds
inc
mov
dec
daa
iret
test
mov
les
mov
ret
enter
mov
lret
sarl
mov
dec
dec
dec
and
inc
cmp
and
dec
and
lds
int
sub
test
xor
dec
and
and
xor
iret
cmp
xor
dec
aaa
shll
test
iret
mov
inc
into
xor
int
dec
ds
dec
mov
and
lret
inc
dec
cmp
cld
imul
and
mov
xor
mov
or
mov
sub
mov
add
imul
mov
jmp
movl
movl
jmp
out
outsb
xchg
adc
test
negl
cltd
jmp
jmp
mov
and
dec
enter
aas
aas
mov
mov
push
mov
and
inc
mov
cmp
sub
cmp
dec
fisubs
es
aas
dec
ret
mov
int
dec
lds
aaa
inc
mov
and
mov
lds
cmp
ss
ret
int
movsl
and
dec
movsb
fisubrs
les
cmpsl
mov
mov
mov
iret
mov
mov
cmp
dec
push
aaa
movsl
mov
enter
mov
mov
daa
mov
and
fisubs
mov
aaa
daa
ror
mov
enter
mov
leave
inc
mov
xor
mov
lds
dec
inc
mov
and
mov
inc
shlb
inc
movsl
movsl
xor
dec
mov
into
ret
ss
rol
and
and
cmpsl
aaa
mov
enter
mov
mov
iret
inc
dec
mov
mov
mov
shrb
cmp
cmp
inc
mov
ror
inc
mov
inc
movsb
and
cmpsl
mov
and
dec
dec
xor
iret
and
and
aas
and
inc
ficoms
and
movsb
mov
movsb
and
sarb
dec
ss
les
mov
inc
mov
aas
enter
mov
push
mov
mov
mov
mov
dec
lret
mov
mov
inc
mov
movsb
rol
es
dec
mov
xor
mov
dec
mov
aaa
dec
cmp
mov
sarb
mov
xor
inc
cmp
and
les
mov
and
mov
mov
mov
inc
movsl
sub
dec
and
dec
inc
sub
mov
mov
and
les
faddp
mov
lds
mov
cmp
movsb
mov
enter
leave
mov
shlb
leave
and
mov
test
mov
mov
movsb
mov
xor
leave
daa
mov
lds
int
leave
mov
ds
mov
mov
mov
daa
aaa
xor
mov
ss
and
dec
dec
dec
dec
mov
mov
dec
lret
into
inc
movsb
mov
rorl
mov
and
ret
mov
cmp
xor
faddp
mov
mov
dec
inc
mov
and
and
cmp
inc
mov
aaa
mov
inc
dec
mov
mov
cmp
lret
and
mov
xor
mov
mov
dec
mov
mov
movsb
cmp
mov
fidivrs
test
mov
into
aas
faddp
mov
test
and
xor
lds
sarl
sarb
leave
es
mov
dec
test
ret
les
cmp
mov
mov
mov
mov
ds
cmpsl
and
mov
and
dec
cmpsl
xor
inc
loopne
dec
add
mov
mov
or
xor
mov
sub
mov
mov
mov
shr
xor
and
sub
mov
mov
mov
mov
mov
or
mov
sub
imul
lea
mov
mov
imul
xor
mov
or
mov
sub
mov
imul
add
cmp
jne
movl
jmp
into
call
callw
adc
push
test
jmp
jmp
xor
mov
aaa
inc
aaa
dec
cmp
cmp
rorb
lret
movsl
inc
and
mov
mov
cmp
mov
mov
fidivrs
leave
dec
enter
ds
les
cmpsl
xor
xor
mov
mov
mov
cmp
sub
fmulp
mov
sarb
mov
test
dec
fidivs
mov
and
mov
aas
mov
mov
mov
dec
and
dec
mov
cmp
int
mov
mov
dec
sarb
and
and
sub
inc
dec
mov
cmp
dec
lds
inc
dec
cmp
les
xor
mov
inc
cmpsl
mov
mov
dec
mov
mov
dec
es
inc
inc
xor
dec
mov
cmp
xor
inc
cmp
and
xor
mov
dec
dec
and
mov
lret
mov
movsb
es
push
ss
xor
push
cmp
xor
mov
into
test
and
mov
aas
and
and
xor
dec
cmpsl
sub
cmp
mov
mov
faddp
dec
dec
daa
rol
xor
es
dec
mov
mov
cmp
xor
mov
mov
cmp
cmp
mov
mov
mov
and
mov
dec
inc
sarb
ret
xor
mov
dec
ss
shlb
mov
movsb
and
mov
aaa
into
xor
and
dec
xor
inc
dec
dec
cmp
xor
iret
sarb
cmp
xor
into
dec
cmp
xor
faddp
ret
rolb
sub
xor
cmp
mov
and
fisubs
fimuls
es
fidivrs
iret
rol
mov
rolb
into
sarb
test
xor
and
dec
mov
xor
inc
cmpsl
and
rorb
dec
and
mov
inc
mov
cmp
mov
mov
lds
sub
lret
push
xor
dec
cmp
inc
inc
mov
and
mov
mov
fidivs
fidivrs
enter
rol
leave
dec
mov
mov
mov
cmp
mov
inc
dec
cmpsl
xor
dec
dec
ret
mov
test
mov
lds
fidivrs
mov
and
and
xor
mov
movsb
movsl
enter
xor
dec
aaa
aas
dec
mov
ror
inc
xor
xor
inc
inc
cmp
les
dec
cmp
mov
ds
iret
mov
lret
cmp
enter
lret
inc
mov
mov
mov
movsl
dec
xor
mov
fisubs
mov
mov
xor
les
and
int
push
xor
sub
mov
aas
daa
xor
and
and
xor
into
mov
xor
inc
or
add
add
inc
hlt
mov
add
movl
movl
movl
xor
movl
mov
mov
div
mov
xor
imul
div
mov
or
add
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
xor
shr
imul
xor
div
jmp
fcompl
adc
mov
pushf
and
sub
idiv
sbb
jmp
ret
iret
mov
sub
inc
xor
cmpsl
test
aaa
daa
dec
mov
dec
and
ret
xor
fisubs
mov
shlb
rcl
and
enter
inc
aas
inc
and
mov
xor
mov
mov
iret
enter
mov
mov
lds
enter
inc
mov
iret
mov
aaa
leave
sarl
aaa
xor
mov
dec
mov
mov
movsb
xor
inc
dec
mov
inc
mov
cmp
and
movsl
leave
mov
xor
ret
ds
aaa
shrb
xor
rorb
and
les
ds
push
mov
mov
iret
movsb
daa
and
mov
into
enter
dec
cmp
aaa
enter
ret
aas
and
lds
ss
cmpsl
dec
dec
inc
cmp
movsl
aas
aaa
and
cmp
ret
shlb
mov
inc
mov
leave
mov
and
xor
inc
enter
lds
inc
push
es
mov
xor
int
into
xor
mov
lret
into
les
rorb
int
mov
and
mov
cmp
sub
inc
cmpsl
and
shlb
and
and
mov
and
and
inc
and
mov
inc
shlb
daa
inc
xor
mov
daa
sub
dec
ss
rorb
dec
xor
enter
inc
mov
fidivs
lds
enter
and
dec
ret
aaa
and
rorb
sub
movsl
rol
mov
cmpsl
mov
mov
inc
roll
mov
and
lds
int
sub
and
dec
xor
enter
ror
movsl
leave
mov
lret
and
aaa
lds
shlb
rol
xor
mov
mov
lret
push
mov
movsb
xor
xor
dec
ret
cmp
xor
mov
mov
mov
mov
movsb
mov
and
and
sub
movsb
inc
dec
ds
and
xor
leave
fidivs
mov
mov
cmp
fisubs
xor
dec
dec
cmp
mov
cmp
enter
dec
inc
mov
mov
dec
mov
dec
xor
movsb
lds
xor
ret
inc
dec
xor
iret
inc
sub
aas
dec
mov
faddp
aaa
dec
iret
mov
dec
int
cmp
mov
mov
mov
enter
es
rcl
sub
inc
mov
dec
aaa
mov
mov
aaa
mov
into
mov
sub
leave
push
xor
lret
rolb
and
and
mov
inc
mov
mov
mov
mov
leave
and
mov
inc
inc
lret
and
ds
mov
mov
sarl
mov
dec
push
fidivs
and
mov
mov
inc
inc
aaa
lret
into
and
mov
and
push
mov
aas
mov
xor
mov
mov
add
div
mov
imul
mov
imul
mov
add
mov
jmp
popa
mov
data16
mov
testl
add
jmp
inc
aas
iret
mov
fidivrs
cmpsl
es
ss
xor
and
ds
mov
and
and
movsl
mov
inc
mov
mov
dec
dec
and
xor
and
and
ss
cmp
and
mov
mov
xor
mov
and
mov
mov
mov
inc
xor
iret
and
and
xor
leave
dec
dec
shlb
movsb
mov
cmp
xor
enter
xor
cmp
shll
ret
ds
mov
dec
es
xor
cmp
dec
mov
test
cmpsl
movl
aaa
mov
inc
dec
ds
inc
ds
mov
fimuls
roll
cmp
dec
shlb
rolb
test
push
mov
aaa
mov
xor
and
mov
fidivrs
lds
xor
inc
cmpsl
mov
dec
mov
mov
xor
into
sub
mov
aaa
lret
iret
mov
inc
push
leave
push
lds
cmp
movsb
cmpsl
dec
mov
push
cmpsl
inc
mov
int
inc
inc
xor
mov
mov
ss
movsl
enter
mov
ror
cmpsl
xor
xor
mov
fisubs
inc
mov
mov
push
shll
mov
cmpsl
and
leave
ds
cmp
leave
into
daa
and
mov
mov
test
mov
mov
dec
mov
dec
xor
dec
shll
inc
lret
dec
enter
xor
daa
mov
cmpsl
inc
inc
push
mov
enter
enter
xor
cmp
mov
inc
push
mov
inc
and
mov
iret
test
cmp
les
xor
mov
lret
and
aas
inc
aaa
inc
sub
mov
mov
les
xor
into
mov
and
dec
cmp
ds
cmp
dec
ret
xor
and
lds
sarb
mov
movsl
and
mov
aaa
test
lds
cmp
and
push
cmpsl
lret
aaa
daa
mov
mov
mov
push
xor
dec
aas
int
cmpsl
ds
movsb
and
xor
ret
mov
inc
sub
and
inc
ret
mov
and
mov
xor
test
xor
dec
and
dec
cmp
cmpsl
mov
xor
push
and
dec
aaa
ds
mov
inc
inc
sarl
mov
mov
push
ret
cmp
inc
mov
dec
xor
mov
cmpsl
inc
lret
int
mov
cmpsl
inc
test
mov
mov
aaa
xor
aaa
dec
leave
aas
ror
les
dec
sarb
mov
mov
dec
int
fidivs
movsb
and
xor
cmp
sub
mov
test
cmpsl
leave
cmpsl
aaa
mov
mov
dec
dec
xor
mov
test
les
dec
movl
xor
enter
dec
les
cmp
decl
idiv
mov
mov
imul
xor
mov
or
imul
mov
sub
mov
and
add
mov
or
and
xor
jmp
adc
jge
xorl
in
sbb
pop
add
jmp
leave
mov
daa
mov
cmpsl
enter
daa
xor
xor
iret
xor
dec
leave
mov
mov
and
mov
inc
cmp
rol
movsl
ss
push
inc
mov
mov
and
mov
and
and
ds
ret
dec
mov
and
and
es
into
into
mov
mov
mov
mov
movsl
mov
mov
shlb
inc
int
mov
dec
inc
test
inc
and
mov
es
cmp
and
push
mov
dec
int
and
mov
mov
and
mov
and
inc
sub
movsl
inc
fisubs
movsb
xor
lret
ds
inc
es
inc
dec
dec
lret
es
mov
cmp
xor
and
test
and
mov
xor
leave
test
int
and
inc
inc
mov
and
inc
xor
iret
les
es
and
ds
and
mov
mov
cmp
shll
xor
rorl
inc
movsl
xor
and
dec
ds
mov
cmp
dec
mov
cmp
dec
dec
xor
leave
test
ror
mov
ds
mov
and
mov
push
es
mov
xor
movsb
dec
cmp
movsb
push
aas
les
test
mov
cmp
lret
ss
ret
inc
shll
iret
mov
daa
ss
rolb
ror
mov
fimuls
mov
inc
push
shlb
inc
mov
inc
inc
mov
push
inc
iret
inc
lds
ror
lds
mov
push
mov
iret
inc
inc
and
ds
lds
xor
mov
dec
aas
es
mov
dec
and
mov
sub
dec
inc
mov
xor
mov
mov
and
mov
dec
mov
sarb
sub
aaa
dec
fisubs
dec
daa
mov
xor
xor
mov
aas
and
lds
dec
mov
mov
mov
sub
mov
xor
int
aaa
and
ss
mov
faddp
daa
mov
xor
aas
and
inc
and
mov
and
inc
into
xor
mov
cmpsl
mov
cmp
inc
inc
es
and
ds
fiadds
les
fidivs
and
rol
aas
rcl
mov
cmpsl
mov
ds
dec
mov
inc
mov
fisubs
fimuls
ror
movsb
mov
mov
mov
inc
aaa
mov
mov
and
lret
cmp
aaa
and
dec
aaa
ss
inc
rol
inc
dec
and
mov
mov
iret
movsb
inc
inc
sub
mov
xor
dec
lds
mov
iret
movsl
inc
mov
ror
enter
es
dec
movl
ret
xor
into
movsb
mov
xor
mov
mov
and
mov
adc
inc
inc
int3
dec
dec
add
movl
movl
movl
movl
movl
mov
mov
xor
jmp
dec
jnp
add
jns
andl
jmp
aas
dec
es
int
cmpsl
mov
int
inc
dec
inc
iret
mov
xor
and
shlb
mov
dec
push
push
fiadds
xor
cmp
mov
cmpsl
les
iret
mov
inc
dec
sub
lds
mov
and
inc
mov
inc
mov
test
inc
mov
cmp
inc
mov
int
mov
leave
inc
and
shlb
mov
and
and
and
dec
xor
and
and
cmp
cmpsl
mov
cmp
enter
mov
inc
mov
xor
leave
lds
mov
movsb
lret
inc
movsb
movsl
les
dec
aaa
xor
xor
movsl
mov
mov
ss
inc
and
movsb
fidivs
mov
mov
xor
and
mov
push
mov
mov
sub
leave
iret
ds
dec
ss
lds
mov
aaa
cmp
mov
test
into
lret
and
and
es
xor
xor
movsb
inc
xor
mov
mov
mov
cmp
and
es
into
mov
mov
inc
mov
and
mov
xor
xor
lret
xor
mov
mov
and
mov
cmp
iret
and
mov
enter
inc
rolb
aaa
and
rol
les
xor
dec
xor
mov
ret
xor
es
mov
mov
mov
mov
shrb
shll
and
test
fidivrs
cmpsl
dec
mov
mov
inc
cmp
aaa
mov
movsl
push
les
into
leave
and
mov
mov
cmp
xor
and
mov
mov
enter
and
and
inc
mov
movsb
iret
inc
mov
and
cmp
dec
mov
push
shlb
mov
cmp
and
mov
mov
mov
sarl
and
inc
and
cmpsl
and
mov
mov
mov
mov
xor
push
and
ror
lret
and
push
mov
lret
xor
mov
mov
cmp
mov
dec
iret
into
inc
and
and
xor
aaa
shlb
int
dec
ret
mov
inc
mov
dec
int
mov
cmp
mov
lds
aaa
movsb
mov
mov
mov
xor
aaa
fisubs
shlb
mov
mov
mov
movsl
leave
xor
and
mov
cmpsl
inc
iret
into
mov
mov
mov
cmp
leave
mov
xor
mov
xor
enter
mov
mov
sub
cmp
into
es
mov
mov
ret
mov
mov
mov
inc
sarl
lret
inc
leave
and
cmp
cmp
dec
shll
inc
mov
ss
mov
xor
mov
dec
mov
dec
mov
test
mov
daa
sub
add
or
push
pop
div
mov
xor
or
sub
xor
add
div
mov
add
cmp
ja
push
movl
movl
movl
movl
movl
movl
movl
movl
jmp
andb
add
insb
insb
sub
jnp
xor
jmp
test
inc
dec
fisubs
movsb
enter
mov
aaa
es
mov
aas
sarl
mov
enter
xor
xor
movsl
ds
xor
inc
mov
inc
enter
push
cmpsl
cmpsl
leave
les
cmpsl
movsl
inc
dec
and
mov
dec
lds
ror
and
enter
aas
les
cmpsl
into
mov
shlb
mov
inc
cmp
dec
cmp
mov
inc
mov
ss
inc
shlb
ss
cmp
xor
mov
dec
movsb
inc
dec
dec
and
mov
and
mov
mov
rorb
cmp
shlb
into
sub
mov
movsb
mov
and
shlb
iret
movsb
ds
sub
mov
xor
cmpsl
xor
mov
cmpsl
aaa
test
and
dec
iret
mov
inc
mov
and
fmulp
and
dec
mov
xor
xor
mov
xor
int
ss
fisubs
mov
shlb
enter
xor
daa
fimuls
cmpsl
cmp
xor
and
xor
dec
movsb
cmp
xor
cmp
mov
ret
xor
sarb
cmp
mov
cmp
mov
xor
inc
rolb
int
cmpsl
ss
mov
sub
mov
inc
daa
mov
and
enter
dec
shll
shlb
dec
mov
mov
mov
inc
mov
push
int
cmpsl
and
and
mov
mov
inc
dec
xor
cmp
dec
shlb
inc
leave
mov
xor
xor
inc
xor
mov
mov
mov
inc
mov
rorl
lds
ret
mov
cmpsl
push
dec
dec
inc
ret
mov
and
xor
ret
fidivrs
mov
test
mov
and
xor
mov
and
enter
xor
mov
and
dec
xor
test
dec
cmp
dec
cmpsl
mov
mov
mov
mov
mov
into
and
mov
lds
mov
mov
les
mov
shlb
mov
inc
mov
xor
ds
iret
int
and
mov
enter
enter
es
mov
and
lret
aaa
rol
mov
sub
rorb
mov
mov
aas
push
ret
rol
fimuls
daa
inc
mov
mov
aas
and
xor
les
and
mov
mov
enter
cmp
mov
movsb
and
mov
mov
aaa
aaa
mov
mov
les
and
mov
inc
mov
ss
inc
enter
daa
movsl
es
inc
inc
movsl
and
movsb
dec
mov
inc
mov
enter
int
ror
int
leave
lds
aaa
mov
xor
cmp
push
pop
div
mov
xor
push
div
jmp
clc
xor
insb
fs
hlt
sbb
jg
arpl
jmp
jmp
lret
mov
inc
daa
mov
aaa
daa
cmpsl
mov
xor
dec
into
lret
int
daa
mov
daa
mov
cmp
mov
int
fmulp
mov
cmpsl
ret
mov
leave
inc
mov
mov
ds
movsl
cmp
iret
dec
cmp
xor
movsb
mov
and
mov
inc
shlb
mov
mov
test
mov
dec
movsl
enter
inc
xor
movsb
ss
iret
xor
enter
and
mov
mov
inc
and
daa
ror
dec
and
mov
les
daa
mov
lds
mov
sub
cmp
dec
xor
es
mov
inc
inc
mov
xor
cmp
mov
lds
ss
mov
iret
inc
mov
cmp
push
cmp
ret
and
ds
mov
mov
dec
aaa
mov
xor
mov
iret
dec
inc
rol
mov
mov
cmp
xor
into
daa
and
and
inc
mov
sub
cmp
and
inc
dec
daa
mov
inc
mov
mov
push
dec
mov
rclb
les
enter
inc
xor
mov
fisubrs
mov
dec
movsb
rolb
shll
xor
mov
aaa
leave
mov
dec
movl
mov
xor
enter
sub
leave
leave
xor
sub
enter
and
shll
cmp
dec
mov
ret
les
sub
mov
faddp
mov
es
iret
enter
movsl
xor
dec
and
leave
mov
shrb
ds
lds
mov
xor
movsl
shll
mov
inc
into
shll
daa
mov
mov
inc
enter
rolb
cmp
movsl
lret
test
dec
mov
mov
dec
mov
int
iret
cmpsl
push
enter
and
mov
push
ds
cmp
aas
xor
mov
mov
mov
dec
mov
mov
fmulp
mov
dec
xor
dec
mov
inc
dec
mov
mov
xor
sub
xor
ss
mov
inc
and
mov
daa
enter
enter
xor
dec
test
test
iret
sub
mov
mov
into
mov
into
inc
lds
mov
lds
rol
cmpsl
mov
mov
inc
mov
ret
and
dec
mov
mov
dec
inc
mov
and
test
dec
ret
dec
xor
lds
mov
inc
les
inc
sub
aaa
mov
and
xor
and
cmp
aas
xor
cmp
push
mov
mov
mov
dec
mov
movsl
enter
inc
ret
xor
movsl
push
es
and
mov
lret
and
mov
aaa
lds
dec
and
les
les
mov
shlb
mov
add
dec
adc
cmp
inc
sub
or
jmp
dec
es
ss
mov
mov
mov
mov
aas
cmp
xor
enter
and
ss
ror
cmpsl
and
ret
dec
movsb
and
inc
cmp
xor
test
les
ror
mov
mov
mov
int
fidivs
daa
mov
lds
cmpsl
dec
lds
inc
xor
test
shlb
inc
inc
xor
sarb
ss
mov
sub
mov
mov
inc
shlb
mov
inc
and
xor
mov
dec
int
lds
mov
inc
mov
xor
les
mov
movsl
int
mov
and
mov
mov
mov
dec
movsb
and
inc
mov
and
les
xor
mov
inc
int
inc
xor
ret
inc
dec
and
xor
aaa
inc
fiadds
es
rol
es
inc
push
mov
enter
and
lret
dec
xor
and
rcr
shlb
test
mov
inc
and
mov
dec
mov
shll
xor
int
dec
ss
mov
xor
xor
lds
mov
mov
cmp
into
xor
mov
xor
mov
cmp
cmp
es
enter
mov
dec
mov
cmp
and
and
dec
shlb
lds
mov
test
and
sarb
and
xor
mov
and
dec
mov
mov
inc
dec
daa
and
mov
aas
mov
xor
mov
xor
and
dec
xor
es
cmp
les
lret
int
xor
test
mov
enter
mov
test
cmp
cmp
mov
aaa
fisubs
and
les
mov
xor
ror
shlb
mov
inc
mov
cmp
mov
mov
mov
cmpsl
and
mov
mov
and
enter
sub
movsb
aas
enter
ss
cmp
inc
mov
mov
rorb
and
iret
dec
daa
lret
iret
rorl
ss
mov
push
cmp
lret
push
movsl
and
movsb
les
sub
iret
sub
mov
sub
mov
and
mov
cmp
inc
shrb
mov
test
enter
inc
inc
mov
and
movsl
xor
push
daa
mov
iret
cmp
iret
test
lret
cmpsl
xor
inc
mov
mov
movsb
xor
iret
leave
mov
mov
xor
aas
push
mov
iret
dec
shll
aaa
es
xor
mov
iret
mov
inc
dec
xor
inc
mov
dec
aaa
mov
movsb
aaa
inc
mov
ror
sarl
movsl
mov
dec
inc
mov
cmp
inc
mov
mov
int
enter
enter
cmpsl
mov
rorb
int
ss
movsb
rol
dec
mov
call
sub
mov
mov
imul
mov
or
xor
add
mov
xor
mov
add
jmp
cmp
dec
jb
jb
lahf
mov
mov
or
or
jmp
push
daa
inc
inc
dec
dec
leave
les
lds
cmp
iret
mov
mov
dec
cmp
daa
dec
xor
int
dec
cmp
xor
cmpsl
leave
cmp
lret
mov
mov
xor
inc
xor
mov
ss
dec
cmpsl
inc
mov
inc
mov
cmp
mov
dec
ds
shlb
sarb
mov
lret
int
sub
cmp
aas
iret
mov
test
cmp
ss
ds
mov
sub
cmpsl
ss
mov
dec
dec
xor
mov
movsl
aaa
into
xor
mov
mov
sub
and
mov
inc
mov
xor
xor
and
inc
mov
aas
xor
movsl
xor
mov
dec
into
test
test
and
aas
lds
es
and
and
xor
aaa
dec
ss
dec
xor
dec
lret
and
push
mov
mov
dec
mov
enter
mov
xor
xor
mov
movsb
mov
mov
dec
xor
daa
cmpsl
mov
and
fmulp
enter
dec
daa
mov
xor
inc
enter
xor
mov
mov
daa
leave
ds
movsb
cmp
mov
inc
leave
push
xor
xor
xor
aaa
xor
movsb
cmp
movsl
and
enter
mov
and
dec
mov
mov
mov
daa
fimuls
mov
ss
test
mov
dec
mov
mov
and
and
cmp
aaa
mov
cmpsl
xor
ss
mov
inc
inc
rol
xor
ds
leave
mov
faddp
les
and
mov
shlb
ret
mov
and
leave
mov
dec
les
dec
shrb
xor
inc
iret
mov
xor
dec
cmpsl
mov
aas
inc
mov
cmpsl
mov
movsb
ret
movsl
mov
mov
mov
xor
es
aaa
mov
mov
push
xor
dec
xor
daa
cmpsl
mov
int
aaa
mov
mov
mov
inc
movsl
xor
dec
and
dec
enter
mov
dec
mov
mov
xor
inc
leave
mov
aas
mov
inc
mov
cmp
shll
inc
and
mov
xor
int
mov
mov
mov
xor
cmp
aaa
inc
and
xor
shlb
ret
xor
mov
mov
inc
aaa
mov
mov
push
cmp
xor
aas
mov
push
and
cmp
movsb
mov
movsl
sarb
sarb
push
mov
dec
mov
inc
xor
ds
inc
dec
mov
inc
mov
into
enter
mov
dec
shll
mov
shlb
es
aas
test
mov
mov
sarb
lret
and
shlb
aaa
inc
inc
dec
movsl
xor
mov
push
leave
mov
mov
int
inc
and
and
aas
mov
mov
mov
mov
add
mov
xor
and
lea
mov
or
jmp
test
lret
mov
add
negb
mov
vpshaq
jmp
fisubs
and
cmp
into
enter
and
mov
mov
es
ret
dec
xor
and
and
mov
dec
mov
mov
dec
leave
xor
test
inc
iret
dec
ss
and
and
mov
rolb
cmpsl
movsb
xor
shll
mov
mov
inc
xor
dec
movsl
inc
mov
cmpsl
test
enter
movsb
mov
dec
cmpsl
iret
xor
xor
and
mov
mov
rorl
into
daa
enter
and
ds
inc
mov
iret
enter
dec
daa
and
push
inc
movsb
sub
les
dec
mov
daa
inc
mov
and
test
mov
ret
aaa
dec
and
dec
inc
iret
dec
mov
mov
sub
mov
int
leave
fidivs
cmpsl
cmp
mov
mov
into
and
mov
mov
inc
mov
dec
sarl
les
movsb
mov
sub
inc
mov
cmpsl
mov
dec
lds
enter
int
shll
aas
into
mov
daa
dec
xor
inc
ss
and
ss
int
mov
and
mov
xor
leave
mov
mov
mov
push
movsb
inc
cmpsl
mov
iret
and
movsb
into
leave
inc
daa
ss
es
dec
movsl
iret
movsl
lret
ret
iret
mov
mov
mov
push
mov
xor
mov
cmp
inc
mov
xor
movsl
mov
ret
inc
mov
xor
shlb
cmp
lret
inc
dec
mov
mov
dec
mov
xor
mov
inc
cmp
shlb
mov
ret
mov
lds
dec
dec
les
mov
cmpsl
dec
cmp
mov
aaa
cmp
and
dec
mov
mov
cmp
and
mov
mov
iret
and
mov
dec
ret
xor
cmp
fmulp
iret
xor
daa
mov
mov
mov
sub
dec
dec
rolb
test
and
sub
xor
mov
xor
xor
fidivs
mov
cmpsl
dec
leave
mov
leave
int
inc
inc
xor
xor
mov
mov
aaa
xor
inc
inc
cmp
inc
rol
into
xor
mov
shll
xor
dec
dec
inc
ss
mov
xor
lret
dec
mov
aaa
ror
cmp
mov
mov
mov
lret
mov
les
mov
dec
mov
dec
inc
lds
mov
xor
dec
cmp
lret
leave
xor
mov
into
movsb
inc
movsl
mov
daa
dec
test
es
into
mov
inc
rolb
xor
int
and
and
inc
mov
mov
and
cmpsl
and
dec
iret
mov
rorl
es
xor
dec
and
mov
lret
mov
cmp
rcrb
repz
xor
div
add
jmp
mov
push
dec
fs
cmpsb
jne
jl
iret
pop
jne
mov
push
jmp
es
dec
ss
mov
iret
and
inc
xor
mov
int
and
mov
dec
and
and
xor
rolb
into
cmpsl
mov
shlb
mov
and
mov
cmp
push
and
xor
mov
leave
iret
inc
cmpsl
dec
mov
and
mov
iret
mov
dec
and
enter
movsb
mov
and
leave
inc
enter
leave
dec
leave
movsb
and
and
aaa
mov
and
shlb
and
dec
test
xor
movsl
dec
and
mov
aas
ficoms
xor
xor
mov
mov
mov
shlb
mov
mov
mov
mov
xor
inc
cmp
inc
aas
mov
daa
mov
daa
and
cmpsl
leave
xor
cmp
leave
rorb
inc
mov
cmp
fisubs
and
dec
dec
mov
and
and
enter
es
dec
mov
mov
mov
xor
xor
mov
fidivrs
and
mov
test
movsl
test
lret
test
sarb
aas
mov
aaa
mov
and
leave
dec
xor
xor
mov
mov
into
ror
mov
int
and
dec
lds
mov
cmp
mov
ret
and
test
mov
inc
mov
mov
int
mov
inc
iret
rorb
les
mov
aas
inc
mov
xor
mov
ss
inc
mov
cmp
mov
and
les
leave
int
xor
sub
lret
aas
inc
lds
shlb
and
leave
xor
xor
xor
mov
daa
leave
inc
inc
cmp
cmpsl
mov
mov
and
movsb
xor
mov
dec
xor
lds
mov
dec
mov
iret
mov
int
iret
mov
mov
int
cmp
push
cmpsl
leave
ds
xor
aaa
test
and
dec
mov
lret
mov
cmp
cmp
mov
aaa
mov
ror
inc
inc
and
dec
enter
leave
sarb
mov
mov
mov
movsb
mov
int
dec
push
xor
dec
into
and
iret
mov
xor
lret
movsl
push
aas
test
mov
mov
dec
inc
mov
dec
mov
leave
fidivrs
cmp
sarb
aas
mov
xor
leave
test
sub
cmp
and
daa
daa
mov
mov
mov
dec
mov
enter
xor
sarb
dec
mov
movsb
shlb
mov
dec
int
mov
cmp
into
mov
inc
and
xor
inc
mov
dec
sub
enter
aas
mov
and
shlb
mov
leave
into
mov
and
lds
movsb
xor
lret
cmp
mov
inc
iret
ret
xor
rol
fidivrs
enter
call
pop
leave
ret
push
mov
sub
jmp
jns
adc
sbb
push
hlt
int3
jb
imul
repz
jmp
dec
dec
mov
mov
dec
cmpsl
dec
mov
xor
shll
push
xor
ds
cmpsl
inc
inc
movsl
inc
mov
inc
rorb
cmpsl
lret
xor
and
mov
dec
xor
inc
test
ss
fmulp
fmulp
sub
es
mov
sub
sub
mov
ds
and
cmp
cmp
rorb
mov
xor
cmpsl
lds
iret
xor
ds
cmpsl
aaa
movsl
mov
mov
inc
inc
inc
ds
mov
int
test
and
and
int
mov
mov
sub
dec
shlb
movsl
and
lret
and
fidivrs
mov
mov
mov
mov
dec
lret
shrb
movsl
ret
and
mov
aaa
inc
dec
movsb
leave
mov
mov
mov
and
inc
mov
cmp
dec
mov
mov
mov
ror
ret
mov
mov
inc
inc
test
les
and
mov
lret
and
xor
cmp
daa
mov
mov
mov
cmp
mov
cmp
xor
xor
lret
mov
ds
into
inc
xor
cmpsl
inc
fisubs
aaa
push
mov
cmp
inc
mov
cmp
inc
sarl
mov
test
mov
into
mov
inc
mov
es
ror
mov
shll
mov
inc
inc
mov
dec
lret
int
xor
inc
mov
lds
and
and
inc
mov
aaa
iret
cmp
and
cmpsl
fidivs
dec
dec
xor
dec
lds
and
mov
xor
mov
fidivrs
rcr
mov
mov
test
push
inc
cmp
test
mov
push
movl
movl
mov
mov
shr
sub
or
mov
and
lea
mov
movl
movl
movl
mov
mov
or
sub
mov
imul
xor
div
mov
xor
xor
inc
xor
lea
mov
movl
movl
movl
mov
mov
add
imul
mov
jmp
and
pushf
push
push
xor
inc
adc
xor
aaa
ljmp
mov
lret
mov
dec
dec
and
shll
xor
xor
cmp
shll
dec
movsl
ss
mov
into
sub
shrb
ret
dec
and
cmp
mov
mov
sub
mov
shll
mov
leave
inc
cmpsl
and
inc
xor
inc
dec
movsb
aaa
cmp
les
mov
mov
daa
inc
aaa
inc
enter
ret
cmp
aas
enter
cmpsl
mov
and
and
dec
movsb
test
xor
shlb
mov
es
inc
inc
rorb
mov
les
mov
inc
sub
inc
and
mov
cmp
iret
mov
ret
mov
mov
mov
mov
aas
daa
and
cmp
mov
xor
dec
dec
and
mov
mov
test
xor
inc
lret
inc
and
cmp
dec
inc
mov
mov
cmp
movsl
mov
mov
mov
dec
inc
shlb
mov
shll
and
dec
dec
and
rorb
mov
inc
rorb
and
sub
and
aas
inc
mov
xor
and
mov
sub
and
push
mov
mov
cmpsl
enter
inc
mov
mov
lds
enter
and
and
xor
mov
aas
xor
ret
dec
es
mov
leave
iret
ret
dec
inc
enter
ss
mov
into
lret
and
cmp
int
into
mov
mov
and
inc
xor
mov
xor
fidivs
leave
mov
fisubs
mov
ror
mov
and
mov
dec
mov
inc
mov
sub
and
xor
dec
movsl
les
lds
mov
mov
push
mov
mov
inc
and
shlb
and
mov
inc
lret
mov
cmp
xor
cmp
mov
and
test
mov
dec
ret
pop
add
div
xor
add
mov
movl
movl
movl
mov
mov
div
mov
xor
imul
and
xor
mov
movl
movl
mov
mov
xor
imul
xor
sub
mov
movl
mov
movl
mov
mov
add
div
mov
imul
sub
and
xor
mov
movl
movl
mov
mov
and
or
sub
sub
xor
mov
movl
mov
mov
movl
movl
jmp
push
and
scas
call
mov
mov
and
jmp
les
mov
lds
dec
xor
movsl
sub
and
xor
mov
mov
mov
es
dec
movsb
ds
mov
into
leave
aaa
movsb
mov
iret
movsl
inc
mov
movsl
mov
and
les
dec
mov
and
push
dec
inc
aas
cmp
xor
into
mov
dec
daa
rol
vcmppd
les
cmp
mov
movsb
lret
daa
rorb
inc
inc
xor
and
cmp
inc
mov
cmp
fimuls
mov
es
cmp
dec
es
cmp
into
cmpsl
lret
xor
lret
daa
mov
mov
push
leave
mov
dec
inc
dec
mov
mov
daa
inc
mov
lret
xor
int
iret
enter
mov
rol
mov
cmp
shlb
xor
enter
mov
movsb
and
push
ror
mov
inc
movsb
mov
mov
leave
dec
and
ret
mov
int
es
sub
aas
rorb
mov
and
xor
xor
rorb
dec
daa
cmp
xor
xor
enter
test
xor
inc
enter
enter
cmp
and
sub
mov
and
xor
mov
inc
mov
leave
mov
iret
rcl
dec
mov
into
cmp
dec
inc
into
test
inc
inc
xor
dec
mov
dec
cmp
enter
into
mov
push
sub
and
dec
dec
mov
and
mov
inc
xor
inc
cmpsl
mov
ds
dec
lret
mov
ret
cmp
mov
ss
mov
test
and
into
mov
test
xor
cmpsl
rcll
and
aas
fidivs
inc
mov
cmp
daa
mov
aaa
ret
aas
mov
mov
mov
mov
sub
mov
ror
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
push
add
push
adc
push
push
call
mov
mov
add
adc
xor
mov
xor
mov
movl
jmp
or
or
jne
hlt
and
hlt
out
jmp
jmp
inc
aaa
sub
mov
test
movsl
dec
leave
and
inc
dec
mov
movsl
mov
mov
les
ds
xor
mov
cmp
mov
fidivs
mov
es
and
mov
lds
sarb
ds
mov
shlb
mov
sub
xor
dec
mov
mov
xor
and
lret
mov
cmp
inc
movsl
inc
aas
mov
and
mov
fidivs
cmp
and
inc
inc
mov
enter
cmp
mov
into
ss
movsb
mov
mov
iret
cmp
mov
ror
mov
movsl
test
cmpsl
xor
cmp
mov
dec
mov
ror
xor
dec
and
shll
inc
ret
sub
mov
cmpsl
cmp
xor
mov
cmp
and
faddp
rolb
mov
mov
mov
lds
ds
ret
ds
ds
mov
and
and
lret
inc
inc
dec
int
mov
dec
mov
mov
inc
mov
shll
mov
iret
xor
int
enter
and
mov
mov
inc
xor
fidivrs
enter
mov
mov
and
cmpsl
shlb
inc
cmp
ss
inc
dec
les
les
aas
iret
and
movsl
mov
into
xor
movsb
shlb
dec
mov
sub
xor
lret
shlb
xor
mov
daa
and
inc
xor
shll
xor
mov
mov
mov
les
xor
cmpsl
ret
and
shlb
aas
movl
cmp
movsl
movsl
mov
dec
rcr
dec
daa
mov
iret
mov
mov
mov
dec
ret
dec
xor
inc
xor
aaa
mov
and
mov
leave
leave
rorb
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
imul
iret
testb
jae
in
xchg
add
clc
jmp
jmp
and
inc
dec
xor
dec
dec
xor
mov
es
cmp
mov
aas
aas
xor
movsb
sub
ret
iret
ret
movsb
cmp
ret
sub
dec
dec
cmp
aaa
mov
cmp
cmp
xor
xor
mov
enter
cmpsl
mov
and
into
inc
enter
daa
mov
inc
mov
cmpsl
mov
and
movsb
xor
cmpsl
mov
and
xor
inc
xor
mov
mov
dec
and
mov
cmpsl
es
ss
cmpsl
dec
mov
mov
es
int
lds
inc
mov
aaa
mov
cmp
xor
dec
dec
mov
and
push
mov
sub
sub
mov
and
movsl
leave
cmp
dec
inc
daa
leave
into
dec
int
dec
mov
rorb
dec
inc
ds
and
inc
rcl
dec
ret
into
ret
aaa
inc
inc
mov
and
ss
dec
xor
mov
mov
movsl
mov
mov
and
cmpsl
xor
movsb
mov
aas
and
and
aaa
dec
ss
mov
ds
xor
dec
daa
mov
aas
movsb
and
leave
aaa
mov
into
fisubrs
mov
movsb
dec
int
ds
and
mov
inc
shll
iret
lret
and
inc
shll
int
test
lret
fidivrs
and
mov
push
ror
es
and
lret
and
and
inc
dec
and
movsb
lret
mov
mov
mov
and
int
and
cmpsl
ror
dec
les
dec
mov
xor
cmpsl
mov
and
cmp
mov
aas
mov
xor
cmp
cmp
les
and
and
dec
ds
xor
lds
movsl
inc
mov
and
inc
movsb
rcr
movsl
dec
mov
and
inc
dec
inc
aaa
test
into
iret
cmp
xor
cmp
add
inc
mov
and
add
inc
test
inc
mov
movl
movl
jmp
push
out
sbb
mov
in
sbb
jmp
jmp
mov
mov
cmp
mov
sarb
into
xor
and
sub
inc
xor
roll
mov
dec
leave
mov
and
aaa
cmp
daa
inc
rolb
aas
les
ds
xor
rol
enter
inc
dec
mov
mov
cmp
cmp
sub
dec
lds
mov
inc
mov
push
inc
cmp
aas
xor
and
mov
test
fisubs
inc
inc
mov
mov
cmpsl
mov
dec
mov
cmp
rolb
enter
cmp
into
dec
xor
dec
mov
xor
daa
lds
cmp
cmp
and
mov
inc
mov
fidivrs
lret
inc
enter
into
cmpsl
rorl
mov
enter
leave
xor
dec
ret
and
mov
es
int
es
inc
inc
mov
mov
sub
shll
dec
test
mov
into
dec
mov
mov
mov
ror
xor
daa
fisubs
and
mov
enter
xor
xor
inc
xor
lds
xor
leave
mov
ret
dec
lds
mov
movsb
xor
ret
dec
cmpsl
dec
mov
mov
cmp
cmpsl
sub
mov
cmpsl
dec
cmpsl
mov
and
xor
inc
aas
inc
sub
inc
roll
xor
ds
int
lret
mov
mov
aas
sub
cmp
dec
mov
mov
aaa
mov
leave
int
lds
xor
mov
dec
ret
cmp
enter
shlb
mov
inc
lret
mov
mov
mov
enter
cmp
fisubrs
mov
mov
cmp
mov
cmp
inc
xor
dec
ds
lret
into
inc
aas
es
dec
enter
lret
mov
lds
mov
xor
add
inc
mov
movl
movl
movl
movl
movl
movl
mov
mov
jmp
loope
sbb
imul
js
push
jne
call
ljmp
mov
inc
mov
and
cmp
aas
mov
test
xor
xor
fimuls
dec
inc
inc
mov
daa
dec
sarl
push
push
xor
cmp
shlb
and
daa
lret
mov
dec
movsb
xor
cmpsl
cmpsl
rorl
fidivrs
les
inc
mov
sub
xor
mov
mov
xor
aas
dec
ss
movsl
dec
mov
push
mov
and
mov
sarl
daa
xor
shlb
dec
lret
sarb
dec
mov
mov
mov
dec
movsb
dec
and
test
mov
inc
cmp
aaa
mov
sub
iret
xor
dec
dec
mov
cmp
mov
ret
xor
leave
xor
mov
cmp
shlb
xor
aaa
daa
inc
and
dec
xor
ss
cmp
inc
mov
mov
fiadds
inc
mov
dec
mov
xor
push
mov
push
and
xor
ss
rol
xor
mov
inc
and
xor
inc
dec
inc
inc
inc
dec
les
xor
dec
mov
test
es
cmpsl
and
inc
aaa
enter
mov
inc
int
ficoms
dec
mov
and
lret
sub
int
mov
mov
mov
int
cmpsl
push
and
inc
mov
and
mov
and
mov
push
mov
movsb
dec
ficoms
mov
shll
dec
dec
les
es
and
rol
and
mov
lret
mov
mov
and
cmp
and
xor
xor
mov
into
ds
mov
mov
ds
int
xor
mov
shlb
mov
mov
mov
ss
inc
into
movsl
cmp
shlb
lret
test
lds
into
and
push
dec
add
sub
mov
lea
add
push
mov
mov
or
mov
sub
and
mov
push
sub
or
pop
sub
add
mov
push
mov
push
jmp
testl
dec
and
js
mov
jmp
ret
inc
mov
xor
les
mov
cmp
inc
mov
ss
movsl
test
enter
xor
iret
leave
movsl
xor
and
push
and
xor
iret
mov
and
push
xor
inc
and
movsl
leave
iret
cmp
mov
cmp
test
mov
mov
fisubs
xor
movsb
movsb
mov
shll
lds
inc
and
aas
mov
dec
ds
movsl
mov
rcr
sub
mov
mov
mov
and
mov
movsb
dec
mov
int
test
and
movsl
daa
inc
xor
cmp
ret
leave
faddp
fidivrs
mov
mov
and
aas
and
sub
cmp
mov
fisubs
mov
mov
cmp
dec
mov
mov
mov
inc
mov
mov
mov
fiadds
xor
daa
mov
cmp
aas
shlb
and
and
mov
into
ss
int
mov
cmp
into
ds
dec
iret
cmp
inc
daa
enter
mov
xor
dec
mov
enter
mov
ss
daa
mov
dec
movl
inc
into
daa
mov
cmp
mov
lds
xor
and
sub
int
movsl
inc
les
xor
sarb
dec
dec
leave
cmp
mov
movsb
ret
dec
lds
int
dec
lret
mov
inc
and
inc
les
cmp
and
dec
mov
mov
fisubrs
dec
iret
and
shlb
inc
ds
dec
xor
ds
dec
mov
cmp
ss
lds
mov
and
fidivrs
lds
fisubs
mov
cmp
and
ss
xor
daa
and
ds
and
rcr
shlb
cmpsl
and
inc
cmp
shlb
mov
ror
mov
sub
cmp
mov
mov
cmp
jbe
push
jmp
fs
push
mov
in
push
js
jl
jmp
leave
mov
mov
shlb
ret
sub
xor
dec
inc
test
enter
cmp
rclb
mov
xor
mov
mov
ds
inc
dec
shlb
aas
movsl
aaa
and
aaa
mov
cmpsl
and
mov
movsl
ds
mov
and
dec
mov
aaa
iret
mov
ror
and
and
xor
cmp
fidivrs
and
cmp
cmpsl
dec
mov
xor
mov
shll
into
and
mov
test
sarb
les
mov
shlb
leave
and
aaa
ds
sub
inc
xor
cmpsl
ret
push
es
mov
mov
ret
daa
and
int
ss
mov
movsb
cmp
sub
ds
cmpsl
movsb
lret
inc
shrb
mov
mov
dec
cmpsl
xor
movsb
fisubs
aaa
les
es
enter
mov
mov
movsl
xor
movsl
and
cmp
lret
into
and
and
mov
ror
mov
into
ret
shll
rolb
and
dec
inc
leave
mov
shlb
shll
inc
mov
mov
and
mov
and
inc
and
mov
dec
and
and
test
mov
ss
ror
inc
xor
xor
ds
movsl
mov
lret
mov
mov
sub
cmp
mov
int
xor
mov
les
and
inc
dec
xor
cmpsl
ret
mov
mov
movsl
mov
mov
dec
int
dec
inc
shlb
inc
dec
dec
mov
xor
cmpsl
daa
push
movsl
mov
dec
ror
mov
mov
dec
aas
shlb
dec
mov
inc
lret
cmp
and
dec
cmp
inc
mov
and
enter
xor
cmp
movsl
lret
mov
inc
mov
iret
leave
mov
mov
inc
inc
into
mov
add
mov
mov
sub
mov
mov
add
mov
mov
mov
xor
imul
lea
push
mov
xor
lea
call
mov
mov
and
mov
and
mov
and
mov
xor
sub
cmp
jmp
je
je
insb
data16
adc
xor
pop
loop
jmp
jmp
cmpsl
iret
cmp
lds
and
and
dec
mov
xor
aas
daa
shlb
xor
xor
mov
inc
int
push
mov
dec
mov
inc
xor
and
cmp
mov
inc
mov
xor
mov
inc
aas
rolb
inc
into
ss
aas
and
mov
mov
inc
mov
cmp
and
mov
dec
xor
xor
dec
mov
inc
cmp
mov
dec
xor
mov
xor
movsb
xor
mov
mov
es
iret
push
inc
dec
aas
mov
mov
ror
movsb
sub
dec
dec
inc
inc
and
and
dec
mov
inc
ss
movsb
mov
and
mov
xor
ret
dec
inc
mov
ret
push
mov
mov
cmp
ret
mov
fiadds
aaa
leave
xor
xor
into
xor
movsl
mov
ss
mov
mov
and
shlb
aaa
les
dec
lds
mov
iret
dec
aas
into
mov
mov
leave
mov
mov
mov
int
movsl
and
and
sarb
cmp
and
inc
leave
les
shlb
mov
xor
xor
sub
dec
dec
mov
ds
ss
movsb
cmpsl
shll
mov
mov
xor
xor
mov
mov
and
mov
and
inc
mov
into
les
dec
mov
inc
inc
cmp
iret
xor
ds
ds
cmp
and
movsb
xor
mov
cmp
mov
mov
fisubs
mov
sarb
and
mov
mov
cmpsl
mov
mov
mov
sub
xor
iret
mov
movsb
aaa
shlb
test
adc
add
subb
add
jmp
test
sub
js
in
jp
add
ret
test
aaa
ljmp
and
mov
sub
inc
dec
mov
xor
mov
mov
and
daa
mov
lret
mov
movl
and
sub
dec
mov
shlb
inc
dec
cmp
es
mov
les
mov
int
inc
test
daa
mov
dec
inc
xor
mov
mov
ret
mov
into
xor
xor
mov
dec
dec
cmp
dec
mov
xor
iret
mov
es
movsl
xor
ret
cmpsl
test
inc
inc
and
mov
xor
ds
aas
xor
dec
ret
int
xor
dec
les
lds
iret
mov
enter
inc
cmpsl
mov
sarb
cmpsl
mov
push
and
inc
and
mov
movsl
cmp
mov
mov
mov
inc
inc
mov
mov
mov
inc
sarb
mov
and
mov
rol
mov
movsb
shll
inc
inc
shrb
test
aaa
lret
and
dec
into
ds
fisubs
mov
cmp
inc
inc
movsb
ret
mov
enter
dec
dec
cmp
xor
dec
xor
into
mov
into
xor
cmpsl
test
xor
mov
mov
xor
and
leave
dec
into
xor
mov
mov
xor
inc
xor
cmp
aas
aaa
ds
es
es
dec
push
sub
xor
xor
inc
mov
dec
test
and
rorb
dec
mov
dec
movsb
ret
xor
ror
sub
movsb
mov
daa
mov
cmp
aas
inc
mov
mov
dec
dec
rolb
inc
and
inc
xor
mov
ss
xor
mov
mov
ds
test
inc
xor
les
dec
and
and
and
shlb
dec
and
cmpsl
inc
mov
rorl
add
xor
mov
xor
div
mov
sub
jmp
inc
mov
pop
insb
lds
notl
add
jmp
xor
mov
xor
cmp
sarb
les
int
sub
dec
cmpsl
enter
sub
sarl
mov
shrl
mov
xor
mov
and
xor
aas
dec
int
fisubrs
mov
mov
mov
cmp
mov
xor
and
mov
xor
daa
leave
shll
mov
sub
movsb
mov
cmp
movsb
push
movsb
cmpsl
leave
dec
mov
mov
cmp
inc
and
and
mov
dec
leave
mov
iret
test
shlb
lret
cmp
cmp
enter
mov
les
inc
dec
cmp
int
mov
inc
enter
dec
movsl
mov
mov
xor
mov
mov
mov
mov
shll
and
int
mov
mov
mov
iret
into
sub
mov
dec
inc
dec
cmp
mov
leave
mov
inc
mov
enter
dec
dec
aas
mov
leave
ror
mov
shlb
mov
xor
mov
iret
mov
mov
daa
cmp
dec
and
rol
cmpsl
cmp
aas
iret
rorb
ror
xor
dec
ret
xor
les
and
leave
mov
push
dec
cmpsl
xor
int
inc
dec
rcr
ret
xor
and
mov
and
cmp
shlb
int
mov
mov
lret
shll
mov
rol
leave
and
push
cmp
xor
dec
and
lret
inc
and
inc
and
mov
mov
mov
enter
dec
cmp
cmpsl
mov
inc
shll
sarb
dec
movsl
aas
dec
mov
mov
mov
mov
and
sub
mov
movsb
cmp
xor
dec
inc
dec
cmp
ret
inc
fisubrs
xor
lds
and
mov
daa
xor
xor
lea
push
mov
or
mov
jmp
call
mov
out
jbe
add
in
jmp
jmp
mov
and
dec
mov
xor
sarb
mov
mov
mov
dec
aas
sub
mov
shlb
iret
inc
xor
mov
inc
and
aaa
and
dec
inc
mov
lds
dec
cmpsl
and
mov
cmp
xor
lret
mov
inc
cmp
movsb
movsb
dec
mov
dec
inc
inc
xor
mov
fidivrs
es
cmp
int
dec
inc
lret
cmpsl
dec
lret
mov
xor
mov
dec
xor
and
leave
xor
mov
cmp
ret
xor
lret
inc
mov
dec
mov
ret
aas
mov
lds
mov
xor
xor
lds
xor
test
xor
ds
inc
sub
shlb
enter
shlb
ret
xor
and
rorb
enter
mov
shlb
and
dec
aas
movsl
mov
test
dec
movsb
mov
cmp
daa
int
inc
lds
lret
and
movsl
dec
inc
sub
and
mov
daa
mov
push
and
lret
iret
movsb
mov
xor
mov
mov
xor
test
xor
mov
dec
aaa
mov
daa
mov
iret
mov
lret
and
dec
fidivs
dec
fisubs
movsl
xor
inc
test
dec
les
mov
inc
mov
inc
and
mov
mov
xor
les
mov
mov
and
mov
dec
iret
xor
fmulp
leave
cmp
xor
enter
sub
test
push
cmp
and
mov
mov
xor
cmp
enter
mov
movsb
mov
xor
sarl
and
and
dec
dec
lret
mov
cs
push
mov
add
push
mov
mov
or
add
and
mov
mov
pushl
call
mov
mov
lea
mov
incl
jmp
pop
jge
push
insb
in
mov
dec
popf
js
mov
mov
jmp
jmp
movsb
dec
inc
shlb
mov
inc
iret
mov
mov
dec
mov
dec
enter
shlb
push
mov
xor
mov
mov
push
inc
xor
rolb
ror
mov
xor
iret
lds
inc
enter
daa
es
mov
lds
dec
sub
aas
sarb
cmp
inc
aas
inc
rol
movsl
movsb
sub
cmp
mov
dec
shlb
lret
les
shlb
inc
ss
ss
aaa
ret
ror
mov
mov
xor
xor
movsl
mov
dec
and
and
ret
aaa
ret
sarb
and
and
mov
mov
dec
mov
dec
ret
and
cmp
mov
mov
xor
sarb
mov
cmpsl
les
iret
mov
cmp
mov
and
inc
movsb
mov
aas
ret
and
cmpsl
and
test
mov
mov
movsl
iret
mov
mov
ss
daa
aaa
and
les
mov
test
cmp
dec
push
int
inc
xor
mov
mov
into
and
and
mov
cmp
movsl
xor
and
test
mov
and
mov
enter
es
enter
xor
mov
xor
cmp
cmp
movsl
and
push
inc
int
rcr
dec
inc
xor
inc
test
iret
dec
and
ret
mov
mov
xor
and
xor
mov
test
iret
mov
mov
cmpsl
es
iret
xor
ss
xor
mov
mov
and
mov
test
test
xor
test
movsl
sub
mov
mov
and
inc
mov
mov
mov
sub
and
mov
ss
dec
inc
ret
into
cmp
mov
mov
enter
ret
inc
mov
xor
mov
xor
jmp
pop
rorl
andl
aad
popa
popf
js
mov
jmp
jmp
mov
mov
xor
mov
xor
and
mov
enter
inc
test
daa
shlb
and
mov
inc
into
xor
sub
inc
push
int
sarl
and
inc
mov
mov
mov
and
lret
mov
lret
dec
inc
dec
leave
mov
lds
inc
cmpsl
rorl
mov
mov
and
and
ret
mov
mov
and
ds
cmpsl
cmpsl
inc
mov
and
mov
mov
mov
mov
inc
inc
iret
and
daa
and
leave
les
enter
ss
dec
inc
and
into
mov
lret
cmpsl
and
dec
es
enter
iret
inc
dec
dec
cmp
dec
sarb
iret
cmp
enter
movsl
into
fidivrs
movsl
mov
xor
movsl
dec
inc
inc
dec
and
enter
sub
mov
and
and
mov
shrb
mov
mov
mov
and
shlb
mov
inc
shlb
iret
mov
xor
cmp
inc
lds
les
inc
cmp
mov
daa
mov
es
lds
and
rclb
mov
les
dec
xor
mov
mov
xor
les
mov
ss
mov
mov
cmp
xor
sarb
inc
ds
mov
mov
push
fidivs
xor
shlb
mov
les
dec
cmpsl
push
mov
dec
dec
ret
inc
and
cmp
mov
into
movsb
push
rolb
mov
test
mov
mov
and
mov
mov
enter
lret
mov
and
leave
int
cmp
xor
mov
les
and
dec
sub
ss
aas
ret
dec
and
movsb
xor
push
ds
mov
and
aas
test
daa
sub
ret
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
jmp
adc
or
mov
xchg
add
fs
jmp
leave
sarl
movsl
dec
mov
rol
shlb
mov
mov
mov
sub
mov
mov
cmp
mov
enter
dec
inc
mov
rol
xor
dec
mov
mov
mov
mov
dec
mov
iret
dec
mov
mov
daa
inc
xor
xor
mov
mov
xor
aaa
int
lret
cmp
inc
lret
aaa
xor
test
inc
mov
leave
cmp
shll
inc
dec
and
dec
test
ss
int
dec
mov
mov
mov
mov
enter
mov
ret
movsb
mov
dec
lret
mov
test
les
and
inc
inc
dec
cmpsl
and
mov
xor
sarl
mov
enter
inc
mov
dec
mov
ret
and
xor
mov
ret
and
ret
xor
cmp
cmp
mov
mov
cmp
and
inc
shll
mov
movsb
and
mov
cmp
daa
inc
shlb
inc
and
movsl
xor
into
ret
mov
mov
movsl
mov
push
xor
mov
and
cmp
mov
leave
and
movsb
es
mov
test
cmp
aas
cmp
mov
les
mov
cmp
dec
xor
lds
and
inc
test
mov
mov
mov
movsb
enter
ds
xor
mov
mov
dec
sub
mov
mov
mov
movsl
movsl
movsl
cmp
ret
xor
cmpsl
enter
aaa
inc
leave
mov
cmp
cmp
mov
inc
ror
mov
mov
and
sub
mov
es
mov
into
mov
iret
mov
mov
lds
dec
shlb
cmp
mov
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
pushl
call
mov
push
add
jmp
inc
sbb
stos
in
stos
mov
data16
jae
int3
cmc
mov
jmp
cmp
mov
ss
dec
aaa
shll
aas
int
lds
shlb
lds
cmp
mov
cmp
ret
mov
cmp
dec
ret
cmpsl
daa
mov
mov
mov
ds
inc
xor
and
dec
cmp
mov
lds
mov
cmp
movsl
int
mov
cmp
mov
dec
mov
mov
aaa
lret
dec
and
dec
inc
cmp
mov
mov
mov
into
push
dec
inc
and
mov
rorl
les
lret
ror
mov
and
and
mov
dec
dec
and
dec
dec
aas
mov
cmp
xor
movsb
inc
dec
iret
mov
iret
les
and
mov
mov
enter
and
mov
mov
mov
mov
xor
mov
cmp
shll
lret
lret
dec
dec
lds
and
mov
ss
and
dec
dec
and
inc
and
aas
mov
mov
int
mov
and
dec
dec
and
lret
iret
push
cmpsl
push
inc
cmp
and
mov
fidivs
into
iret
iret
cmp
mov
shll
mov
mov
and
cmp
and
sub
cmp
mov
and
enter
shlb
mov
mov
inc
les
mov
xor
enter
mov
inc
mov
mov
cmp
and
and
and
mov
int
mov
dec
fisubs
mov
and
ss
aas
fisubrs
dec
xor
inc
mov
mov
xor
cmpsl
mov
cmp
xor
leave
mov
iret
fidivrs
ss
mov
dec
inc
rol
inc
mov
cmp
mov
cmpsl
mov
test
and
inc
movsb
into
push
push
call
jmp
pop
fidivrs
fbld
sahf
xor
sti
jae
movsb
cwtl
pop
adc
jmp
jmp
xor
lds
ret
rolb
mov
xor
cmp
ds
fidivrs
inc
xor
daa
roll
mov
mov
mov
mov
mov
and
dec
aas
xor
movsb
push
aaa
push
ret
mov
movsl
mov
test
push
fisubs
aaa
aas
inc
fisubs
mov
ret
and
mov
mov
and
mov
inc
dec
aaa
cmp
les
xor
dec
mov
mov
inc
mov
lret
xor
leave
rol
shlb
aaa
and
xor
push
mov
cmp
xor
mov
dec
shlb
dec
xor
and
dec
xor
enter
mov
rclb
les
inc
mov
dec
and
dec
mov
cmpsl
mov
movsb
ret
inc
inc
mov
cmpsl
and
mov
dec
dec
dec
aaa
daa
and
and
int
push
mov
mov
cmp
mov
leave
push
test
leave
xor
movsb
mov
and
movsl
mov
ds
inc
xor
into
es
lds
ds
push
lret
mov
sub
sub
mov
les
and
aaa
cmpsl
shlb
daa
lret
iret
into
enter
xor
enter
inc
rorl
into
mov
mov
and
cmp
inc
mov
mov
mov
leave
xor
xor
int
ds
inc
dec
movsb
into
shll
aaa
dec
shlb
cmp
and
dec
es
inc
mov
xor
xor
mov
enter
dec
daa
shlb
int
dec
cmpsl
and
xor
and
dec
ret
mov
leave
mov
aaa
mov
xor
mov
daa
test
rorl
mov
int
xor
fidivrs
mov
shlb
enter
mov
xor
and
xor
into
mov
sub
and
mov
push
cltd
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
jmp
loopne
call
sbb
in
imull
xor
jmp
jmp
les
inc
mov
mov
lret
mov
lret
daa
push
and
mov
dec
xor
cmp
mov
test
int
mov
mov
ds
cmpsl
mov
rorl
and
enter
test
dec
inc
xor
ficoms
aas
mov
inc
mov
shlb
mov
mov
rorb
enter
mov
mov
and
xor
xor
int
leave
inc
inc
inc
mov
fidivrs
movsl
mov
mov
mov
ds
dec
mov
shrb
inc
movsl
mov
iret
int
mov
mov
mov
mov
and
mov
inc
les
inc
dec
dec
and
movl
and
mov
xor
cmp
movsb
sub
mov
inc
enter
dec
mov
aaa
inc
iret
mov
xor
int
lret
daa
xor
mov
ds
ret
into
leave
lds
daa
xor
mov
leave
mov
cmp
xor
iret
mov
cmp
iret
mov
mov
mov
xor
push
xor
mov
and
mov
cmp
into
and
sarl
inc
cmp
es
dec
aaa
cmp
ss
shlb
int
cmp
ret
movsl
inc
es
mov
mov
mov
mov
mov
enter
mov
mov
dec
xor
es
dec
and
cmp
mov
mov
lds
mov
ss
movsb
sarl
mov
fmulp
push
mov
mov
cmpsl
mov
int
dec
mov
aas
es
and
cmp
mov
and
mov
aaa
cmp
mov
iret
movsl
mov
into
mov
mov
xor
ss
shll
daa
and
dec
aaa
mov
sub
mov
daa
and
xor
mov
mov
mov
mov
lds
cmp
mov
mov
dec
inc
inc
les
and
cmp
movsl
mov
dec
and
dec
rorb
daa
mov
and
inc
rol
dec
mov
mov
mov
movsl
mov
enter
movsl
mov
test
fidivrs
dec
sarb
mov
into
int
inc
mov
iret
inc
mov
xor
xor
dec
leave
inc
cmp
and
inc
shlb
movsl
mov
mov
ds
movsb
shlb
inc
mov
dec
int
test
and
and
fisubs
xor
inc
mov
mov
mov
ror
mov
les
xor
and
aas
and
inc
mov
jmp
xchg
mov
in
insb
in
pushf
cmpsb
mov
adc
sub
test
push
jmp
shlb
xor
test
cmp
and
dec
mov
xor
and
inc
leave
inc
sub
shll
lds
inc
les
dec
xor
xor
mov
movsl
mov
mov
sub
and
ds
dec
sub
les
cmp
cmpsl
shlb
mov
fidivrs
sarl
mov
movsb
and
dec
enter
mov
xor
cmp
enter
xor
mov
and
and
xor
xor
and
and
movsb
sub
into
fisubrs
mov
mov
dec
test
inc
push
dec
and
xor
iret
mov
mov
cmp
mov
dec
cmp
shlb
cmp
cmp
rolb
shrl
ror
mov
cmp
dec
xor
push
inc
inc
movsb
inc
mov
movsl
mov
xor
rolb
dec
cmp
inc
cmp
mov
daa
mov
dec
mov
cmpsl
dec
dec
mov
mov
ror
ss
les
mov
rol
dec
dec
inc
enter
leave
sub
mov
mov
fmulp
roll
xor
iret
cmp
ret
es
xor
lret
aaa
mov
mov
xor
dec
xor
lret
mov
movsb
mov
mov
rcll
xor
inc
and
dec
dec
inc
and
fimuls
xor
dec
and
inc
mov
lret
rol
fidivrs
mov
and
xor
xor
movsb
lret
rorl
movsb
mov
mov
mov
xor
leave
dec
and
and
iret
ret
mov
inc
and
and
ds
shlb
cmp
cmp
lret
mov
mov
cmp
inc
shlb
sarl
mov
and
dec
mov
ss
dec
and
iret
movsl
mov
inc
les
mov
mov
aas
movsb
mov
test
cmp
iret
and
dec
inc
dec
int
into
mov
into
inc
inc
cmp
and
xor
dec
enter
mov
mov
mov
and
lds
daa
xor
lds
cmp
dec
mov
inc
inc
into
mov
cmp
int
push
inc
xor
sub
mov
dec
mov
mov
ss
mov
sub
cmp
ss
push
mov
dec
into
iret
mov
ret
and
and
shlb
daa
and
aaa
movsb
mov
into
mov
xor
inc
xor
cmp
xor
mov
mov
inc
dec
int
enter
es
cmp
and
rolb
cmp
xor
sub
and
mov
mov
mov
shll
iret
mov
cmpsl
mov
shrb
ds
dec
enter
fidivs
cmp
lds
mov
mov
movl
movl
push
movl
mov
mov
push
push
push
call
push
push
push
jmp
mov
mov
add
dec
push
in
add
jmp
les
mov
inc
mov
mov
mov
aaa
fidivs
cmp
cmp
mov
ret
mov
lds
mov
mov
xor
mov
xor
inc
mov
rolb
inc
mov
inc
ss
cmp
movsb
mov
aaa
ret
dec
cmpsl
enter
and
mov
and
mov
inc
mov
leave
inc
rol
and
mov
mov
mov
fidivrs
iret
dec
shll
ds
mov
iret
dec
cmp
enter
movsl
and
mov
xor
into
mov
dec
es
push
and
faddp
xor
cmp
test
ret
dec
enter
mov
mov
into
xor
aas
rol
movsl
aas
dec
cmp
xor
test
cmpsl
mov
movsl
inc
and
mov
movsb
mov
inc
daa
ror
into
mov
mov
shlb
xor
inc
dec
enter
xor
lret
and
mov
aaa
mov
test
sub
push
dec
cmp
movsl
xor
mov
enter
mov
es
inc
xor
and
les
mov
lds
xor
test
cmpsl
ret
dec
dec
inc
xor
and
dec
mov
ss
into
leave
mov
leave
xor
inc
es
cmp
mov
xor
and
leave
dec
and
mov
xor
and
mov
inc
les
dec
and
lret
mov
and
test
xor
push
test
inc
int
les
xor
inc
mov
shll
push
enter
inc
faddp
mov
dec
lret
rorb
xor
dec
mov
ret
mov
cmpsl
lds
ss
enter
xor
xor
shlb
xor
daa
inc
mov
and
push
ds
shlb
mov
and
into
mov
int
cmp
mov
daa
xor
dec
mov
aaa
xor
movsl
mov
mov
dec
cmp
ret
inc
dec
inc
mov
iret
and
dec
aaa
dec
mov
xor
xor
aaa
int
aaa
int
daa
dec
mov
mov
daa
dec
dec
mov
mov
cmp
mov
fiadds
xor
mov
int
mov
cmp
xor
cmp
inc
cmpsl
mov
mov
ds
and
xor
cmp
mov
sub
xor
mov
ss
daa
and
and
dec
movsl
mov
cmp
aas
inc
and
mov
cmp
aas
movsb
mov
cmp
shlb
ret
and
and
ds
ds
cmp
xor
mov
and
movsl
int
and
dec
mov
mov
daa
mov
push
call
mov
mov
push
push
and
and
push
push
call
xor
sub
mov
movl
jmp
daa
out
inc
out
out
adc
div
js
xor
mov
imul
daa
lret
mov
mov
es
les
ret
dec
cmp
inc
iret
inc
mov
cmp
les
xor
xor
inc
sarl
ret
les
xor
movsb
inc
test
mov
ret
mov
mov
mov
and
and
dec
push
mov
shrl
dec
mov
push
mov
xor
mov
mov
push
dec
and
mov
cmp
and
dec
mov
cmp
mov
xor
mov
dec
ret
mov
inc
ret
mov
dec
and
aas
aaa
aaa
leave
les
into
es
and
mov
iret
mov
xor
mov
mov
mov
enter
aaa
xor
cmp
dec
xor
es
sub
mov
dec
mov
mov
sub
into
mov
mov
sarb
enter
mov
es
enter
ds
push
mov
ret
into
ds
cmp
and
mov
aaa
inc
mov
and
ret
mov
ss
mov
mov
and
dec
enter
movsb
inc
ror
aas
inc
fisubrs
mov
mov
mov
and
cmp
xor
movsb
movsb
fisubs
and
ret
dec
inc
movsb
cmpsl
and
aas
lret
inc
mov
inc
movsl
xor
cmpsl
dec
cmp
xor
lds
mov
mov
xor
mov
sub
xor
mov
mov
lds
mov
push
mov
cmp
lds
mov
les
xor
xor
dec
lret
dec
xor
sub
mov
iret
iret
int
mov
int
les
mov
les
dec
xor
dec
lret
les
xor
sub
iret
test
and
shlb
fimuls
mov
fisubs
inc
mov
into
push
dec
and
movsb
mov
cmp
iret
rol
mov
xor
shll
les
fisubrs
inc
dec
and
and
ret
and
inc
dec
inc
sarb
mov
mov
and
mov
inc
push
inc
inc
inc
mov
lret
cmpsl
mov
int
movsl
mov
mov
mov
inc
shlb
cmp
mov
cmp
inc
xor
cmpsl
mov
shlb
rclb
and
xor
leave
iret
lret
lret
mov
inc
dec
xor
movsb
shlb
cmp
mov
mov
inc
movsb
es
xor
lret
mov
lds
ss
sub
inc
mov
xor
dec
into
lret
es
and
mov
xor
mov
xor
inc
mov
mov
inc
mov
mov
test
dec
aaa
mov
inc
and
inc
iret
mov
lret
inc
aam
aas
add
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
mov
mov
and
mov
sub
mov
mov
sub
mov
imul
mov
sub
xor
div
add
mov
jmp
popa
jo
pop
insb
jecxz
jl
lods
addl
out
imul
inc
leave
daa
int
iret
mov
test
movsb
mov
xor
dec
sarb
lret
inc
ror
xor
dec
inc
xor
xor
rorl
xor
leave
shlb
lret
mov
daa
mov
and
movsb
mov
lds
aas
cmp
cmp
dec
and
movsl
and
into
ss
mov
aas
dec
and
mov
mov
xor
iret
into
and
lds
mov
int
lret
mov
xor
les
movsb
xor
mov
mov
dec
cmp
mov
mov
mov
push
inc
mov
inc
mov
mov
inc
aas
daa
aaa
mov
fiadds
mov
daa
ds
cmpsl
es
ret
int
dec
lds
daa
mov
movsb
mov
mov
xor
aas
sub
shlb
aaa
xor
inc
movsl
rol
test
xor
mov
cmp
inc
fidivs
dec
xor
es
cmp
mov
ds
dec
push
lds
ret
inc
mov
ret
fisubs
mov
xor
mov
aaa
mov
mov
movsl
dec
mov
inc
movsb
mov
push
int
dec
cmp
dec
mov
mov
xor
and
dec
leave
fisubs
mov
sub
xor
mov
inc
enter
and
and
mov
lret
test
xor
shrb
es
inc
mov
mov
leave
aas
int
inc
dec
xor
ret
es
mov
mov
aas
les
and
es
mov
ds
leave
cmpsl
mov
aaa
dec
into
dec
mov
fidivs
mov
xor
push
and
cmp
mov
inc
shlb
fidivrs
sub
mov
sarb
inc
and
mov
mov
inc
mov
iret
xor
xor
cmp
movsb
and
xor
and
and
dec
and
ret
lret
mov
into
cmp
mov
xor
and
mov
inc
ret
iret
mov
daa
aaa
inc
and
into
movsb
ss
xor
dec
and
mov
movsb
and
inc
mov
mov
xor
movsl
leave
xor
test
inc
xor
mov
mov
dec
inc
mov
into
enter
ds
mov
rol
cmp
mov
daa
and
iret
xor
aaa
and
shll
mov
mov
shll
mov
inc
test
mov
iret
cmp
daa
shll
mov
cmp
mov
sarb
enter
dec
aas
xor
into
and
inc
mov
fidivs
and
dec
mov
mov
es
dec
xor
fisubs
mov
push
mov
inc
inc
shlb
shrb
inc
sub
ret
xchg
inc
inc
clc
mov
add
movl
movl
mov
mov
xor
add
mov
imul
xor
mov
jmp
inc
aad
cmc
jle
push
sbb
jae
aam
add
jo
jmp
mov
mov
enter
mov
inc
mov
xor
cmp
aas
cmp
xor
and
push
mov
dec
mov
cmp
daa
mov
test
aas
lret
inc
roll
dec
push
mov
mov
test
inc
sarb
mov
mov
int
lds
mov
lret
mov
sarl
push
mov
and
cmpsl
iret
mov
shlb
and
dec
dec
leave
mov
cmp
inc
mov
inc
mov
iret
sarb
sub
mov
mov
lds
es
sarb
mov
mov
dec
and
mov
mov
shll
xor
cmp
mov
mov
mov
shlb
mov
mov
cmp
daa
push
inc
mov
fiadds
and
xor
mov
dec
mov
and
mov
cmp
mov
cmpsl
and
leave
rorb
cmp
mov
mov
inc
mov
cmp
ror
enter
rorb
mov
mov
and
test
mov
and
dec
fisubs
mov
aaa
fisubs
mov
cmp
mov
fmulp
and
rorb
mov
mov
enter
dec
dec
mov
xor
lret
iret
mov
iret
shlb
movsl
vcmpsd
int
inc
sarl
mov
mov
inc
es
into
and
mov
cmp
mov
iret
rcl
test
mov
sarb
xor
inc
mov
dec
sub
xor
xor
mov
aas
enter
and
mov
cmp
inc
mov
movsl
mov
test
and
mov
push
shlb
mov
push
test
cmpsl
mov
mov
mov
push
and
lds
xor
and
and
daa
dec
and
test
inc
mov
lds
mov
mov
test
mov
dec
fimuls
mov
cmp
cmpsl
xor
dec
dec
mov
mov
aaa
inc
cmp
enter
cmp
movsl
les
shlb
mov
mov
inc
cmp
into
mov
inc
mov
xor
push
ds
and
mov
cmp
and
cmpsl
iret
sarl
cmp
mov
and
daa
mov
rorb
mov
mov
and
cmp
dec
mov
inc
ds
cmp
mov
mov
mov
movsb
mov
test
lds
mov
mov
inc
xor
and
cmpsl
inc
mov
xor
movsb
mov
xor
ret
xor
mov
leave
inc
mov
sub
daa
dec
cmp
mov
mov
movl
mov
xor
jmp
xor
ljmp
jge
lret
jae
outsb
imul
mov
and
and
daa
dec
dec
sarb
aas
mov
inc
enter
inc
ret
iret
movsb
xor
movsb
inc
xor
iret
sarl
mov
inc
dec
mov
mov
mov
mov
and
xor
xor
es
mov
inc
xor
ret
ds
aas
iret
xor
movsl
into
mov
cmp
int
cmpsl
sub
inc
mov
inc
dec
cmp
lret
and
aas
mov
test
inc
dec
mov
push
enter
inc
movsb
es
mov
into
dec
leave
ret
aas
es
mov
cmp
lret
and
xor
test
cmp
into
and
and
aas
test
mov
and
mov
mov
and
mov
mov
inc
mov
mov
dec
iret
mov
and
and
and
fisubs
inc
push
mov
mov
iret
mov
inc
mov
mov
dec
cmp
es
ss
mov
cmp
daa
inc
mov
mov
sub
mov
iret
mov
mov
and
into
inc
dec
inc
cmp
mov
mov
mov
mov
mov
cmp
mov
shll
mov
mov
cmp
mov
fisubs
daa
leave
movsl
mov
mov
xor
mov
inc
ror
and
shlb
shlb
mov
movsl
mov
test
rolb
xor
mov
and
enter
cmp
rol
mov
push
mov
daa
dec
cmp
xor
enter
ds
es
int
and
sub
mov
mov
shlb
inc
dec
mov
into
ds
and
mov
cmp
iret
aaa
aas
shll
sub
int
inc
inc
enter
leave
movsb
xor
inc
and
mov
dec
dec
dec
aaa
mov
mov
lret
movsb
leave
into
movsl
xor
les
and
cmp
lret
xor
and
mov
test
cmp
mov
xor
mov
inc
lret
movsb
inc
mov
and
mov
inc
mov
and
and
inc
ret
inc
lret
dec
test
into
xor
mov
mov
iret
mov
inc
inc
mov
cmpsl
inc
inc
dec
inc
mov
mov
mov
xor
mov
mov
fisubrs
mov
shlb
mov
dec
mov
les
mov
into
and
shll
and
lret
xor
dec
leave
dec
cmpsl
dec
mov
dec
enter
push
movsb
enter
iret
mov
mov
ds
mov
cmp
leave
and
push
movsl
rolb
ss
ss
dec
inc
dec
mov
inc
iret
mov
insb
popf
add
jmp
cs
mov
test
out
add
push
nop
jae
push
imul
mov
mov
mov
es
dec
dec
shrb
mov
dec
sub
mov
mov
ds
and
dec
lret
aaa
mov
lret
lret
mov
mov
cmpsl
shll
xor
leave
inc
xor
shlb
ds
push
mov
mov
rorb
mov
inc
iret
cmp
mov
mov
aaa
inc
xor
dec
and
xor
dec
mov
xor
xor
aaa
es
test
daa
dec
mov
dec
xor
dec
mov
dec
mov
dec
inc
ss
cmp
iret
inc
aas
aas
movsl
fidivrs
dec
ds
and
xor
mov
faddp
mov
inc
inc
ds
mov
dec
ret
mov
mov
les
and
cmp
sub
xor
dec
inc
xor
rclb
cmp
dec
mov
inc
mov
mov
ror
inc
xor
xor
mov
and
mov
movsb
mov
enter
push
mov
inc
inc
sarb
movsl
cmp
mov
test
xor
and
and
xor
iret
enter
mov
movl
inc
les
dec
dec
and
xor
mov
mov
sub
xor
push
inc
and
cmp
dec
and
inc
into
ret
mov
iret
lds
cmp
mov
mov
mov
daa
mov
mov
xor
enter
inc
push
mov
into
ret
cmp
mov
movsb
mov
xor
mov
dec
and
cmp
sarb
cmpsl
and
mov
xor
and
movsb
movsl
inc
mov
rolb
mov
aaa
les
and
mov
mov
ret
aas
xor
mov
cmp
dec
inc
fidivrs
movsl
into
mov
movsl
movsl
rolb
mov
mov
aaa
ss
dec
mov
mov
xor
and
iret
dec
xor
cmp
inc
dec
and
fisubs
ret
xor
cmp
dec
and
and
xor
mov
and
ret
mov
mov
mov
daa
ds
mov
inc
mov
aaa
mov
ds
inc
and
daa
xor
sub
fidivrs
inc
mov
xor
and
cmp
ss
test
int
inc
and
lret
mov
mov
mov
les
dec
shlb
ret
dec
mov
rol
mov
into
and
ret
mov
leave
inc
shlb
aas
aas
into
cmp
mov
aaa
mov
xor
mov
ret
push
cmp
mov
fidivrs
dec
xor
mov
movl
movl
mov
mov
shr
add
and
mov
sub
mov
mov
movl
movl
movl
movl
mov
add
mov
imul
add
xor
jmp
iret
scas
adc
hlt
enter
dec
push
jae
shrl
mov
iret
mov
test
and
mov
cmp
rolb
mov
mov
mov
mov
mov
mov
sub
mov
rclb
push
and
mov
into
cmpsl
into
xor
enter
and
movsl
cmp
into
es
cmp
ss
mov
ret
xor
cmp
enter
mov
mov
and
inc
inc
xor
push
mov
push
aas
and
and
mov
mov
and
mov
xor
inc
mov
mov
push
fisubs
lds
mov
inc
mov
mov
and
lret
mov
mov
mov
inc
xor
leave
mov
and
shlb
int
ss
leave
and
les
inc
fisubs
xor
mov
and
mov
mov
cmp
aaa
mov
mov
mov
lret
mov
enter
cmp
lds
and
cmp
cmp
push
xor
mov
fidivrs
inc
mov
xor
rolb
inc
mov
cmp
inc
ds
mov
inc
test
mov
aaa
mov
cmp
es
mov
mov
and
inc
mov
aaa
mov
mov
dec
inc
inc
xor
mov
and
enter
cmp
ss
mov
les
cmp
mov
inc
ds
ret
lret
xor
mov
mov
xor
inc
and
dec
ret
fisubs
vmovaps
mov
movsl
push
mov
daa
mov
inc
aas
mov
xor
ret
cmp
mov
inc
xor
mov
inc
fmulp
mov
and
ss
ret
dec
mov
dec
mov
aas
inc
mov
cmpsl
xor
mov
xor
inc
mov
mov
cmp
and
inc
int
mov
dec
ret
inc
xor
inc
aaa
xor
dec
cmp
daa
mov
inc
inc
sub
dec
inc
es
and
dec
dec
into
iret
mov
ds
dec
dec
mov
mov
xor
mov
and
int
xor
aas
movsb
iret
and
mov
xor
int
shlb
sub
movsb
inc
into
test
mov
int
mov
aaa
xor
aas
mov
inc
int
mov
xor
dec
daa
inc
ss
test
mov
mov
iret
and
ss
inc
mov
and
int
mov
es
dec
fimuls
mov
mov
and
movsb
cmp
xor
xor
leave
lds
mov
and
sub
test
movsl
aas
push
cmp
aaa
es
aas
sub
mov
mov
mov
dec
fidivs
movsl
enter
into
mov
movsl
and
xor
dec
inc
xor
and
mov
xor
shll
cmpsl
fimuls
je
jecxz
pop
div
pop
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
test
in
insb
jns
cld
jb
add
jg
js
xlat
imul
mov
push
mov
dec
xor
and
cmp
movsl
inc
cmp
cmp
mov
ror
sub
mov
enter
daa
xor
ror
daa
ds
mov
mov
push
inc
lret
sub
daa
dec
into
and
push
cmpsl
mov
cmp
inc
and
dec
and
dec
push
inc
mov
and
mov
aas
aas
cmp
ror
dec
mov
mov
cmp
mov
cmpsl
dec
dec
mov
dec
inc
mov
mov
mov
ret
and
mov
shrl
and
test
dec
ss
inc
xor
inc
ret
sub
mov
mov
mov
mov
mov
mov
inc
dec
xor
into
cmp
cmp
dec
lret
xor
dec
inc
lds
iret
cmp
into
dec
dec
mov
mov
les
mov
lret
rolb
aas
inc
mov
aaa
inc
mov
shlb
mov
les
mov
cmp
mov
mov
mov
mov
aas
lret
mov
mov
int
mov
ds
xor
inc
dec
ret
aaa
and
and
les
inc
xor
and
mov
inc
mov
lret
and
aaa
mov
into
mov
int
dec
inc
rorb
xor
movsb
rol
mov
mov
into
xor
mov
mov
enter
mov
lds
cmpsl
mov
push
mov
inc
xor
and
aas
dec
enter
inc
mov
into
rorb
dec
inc
ret
mov
aas
sub
dec
mov
movsl
and
iret
and
shrb
ds
and
xor
and
leave
mov
vcmppd
mov
mov
mov
test
push
and
aas
xor
sub
mov
leave
xor
xor
dec
mov
es
movsl
enter
lds
push
mov
movsl
xor
fidivrs
xor
dec
dec
ret
fmulp
mov
mov
xor
sub
inc
loopne
pop
add
movl
movl
movl
movl
movl
movl
movl
jmp
fisubrs
enter
xchg
fnsave
push
push
imul
mov
cmp
lret
aaa
into
mov
inc
mov
xor
es
xor
iret
mov
fmulp
cmpsl
lds
mov
aaa
shll
mov
mov
mov
mov
dec
mov
shlb
lret
ds
leave
mov
mov
cmp
and
sarb
aaa
inc
xor
cmp
lds
ss
and
movsb
daa
xor
int
lret
daa
inc
dec
mov
dec
lds
sub
and
xor
aaa
and
and
leave
int
mov
cmp
aas
mov
aaa
and
and
dec
mov
cmp
cmp
mov
mov
mov
rorl
ret
dec
mov
xor
mov
mov
mov
inc
cmp
inc
ror
mov
xor
lds
mov
mov
mov
xor
mov
dec
and
cmp
movl
mov
dec
enter
inc
fidivrs
test
dec
mov
cmp
and
mov
leave
aaa
aas
and
cmp
xor
xor
mov
mov
mov
and
cmp
fisubs
mov
mov
xor
mov
aaa
fmulp
xor
mov
xor
dec
inc
test
int
and
movsb
aaa
mov
mov
xor
mov
dec
mov
inc
dec
and
movsb
and
cmpsl
les
fisubs
mov
mov
cmp
xor
sub
inc
es
mov
iret
rorl
lret
fisubs
mov
mov
aaa
mov
mov
cmp
dec
xor
dec
xor
mov
and
xor
mov
xor
mov
movsb
xor
fidivrs
dec
sub
inc
leave
aas
cmp
cmp
shlb
movsb
and
cmp
and
test
test
ds
xor
mov
mov
dec
xor
mov
mov
test
mov
mov
dec
mov
test
cmpsl
mov
mov
movsl
dec
mov
test
inc
aas
mov
dec
inc
ds
shlb
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
mov
mov
mov
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
and
jmp
push
jne
outsb
xchg
mov
jne
push
xchg
mov
jmp
push
mov
xor
mov
ds
movsb
mov
movsl
dec
inc
fidivs
es
xor
mov
mov
aas
les
mov
and
mov
mov
and
dec
dec
les
mov
movsb
sub
and
xor
inc
push
and
mov
enter
mov
mov
mov
mov
mov
shlb
mov
mov
inc
xor
mov
mov
test
and
mov
dec
rol
mov
mov
iret
cmp
les
mov
mov
shrb
dec
into
les
inc
mov
and
dec
inc
mov
mov
mov
dec
dec
aas
shll
leave
mov
leave
daa
and
shlb
xor
ret
enter
mov
xor
mov
mov
mov
dec
lds
enter
dec
mov
lds
lds
leave
xor
mov
daa
cmpsl
and
mov
sub
shlb
fidivrs
roll
xor
mov
into
dec
dec
inc
enter
mov
ds
mov
mov
xor
mov
mov
daa
mov
dec
mov
mov
fmulp
ss
cmp
mov
lds
mov
and
dec
xor
xor
ds
iret
shlb
cmp
xor
roll
ret
mov
into
mov
mov
int
ds
and
fidivrs
movsb
ret
ss
ror
dec
mov
push
mov
xor
xor
dec
mov
xor
daa
dec
mov
xor
mov
iret
enter
aaa
mov
es
xor
mov
lret
inc
mov
aas
mov
aaa
lret
sub
mov
mov
mov
es
shll
iret
rol
ss
mov
es
dec
push
int
es
shlb
daa
aas
cmpsl
inc
and
ret
dec
mov
mov
es
dec
inc
dec
dec
mov
inc
sub
and
fidivs
movsb
and
aaa
mov
movsl
lret
and
mov
mov
and
mov
push
push
xor
xor
push
push
call
mov
mov
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
sub
mov
xor
or
xor
mov
jmp
test
mov
bnd
xor
imul
mov
dec
push
mov
sarb
shll
movsb
mov
lret
movl
mov
cmp
dec
sub
and
inc
mov
xor
aas
mov
dec
lds
mov
into
inc
cmp
aaa
mov
cmp
iret
shlb
iret
movsl
lret
aaa
lret
mov
xor
and
inc
dec
leave
and
inc
inc
and
mov
sub
sarl
into
cmp
mov
test
mov
sub
les
dec
mov
sub
and
aas
aas
iret
mov
push
enter
test
movsb
cmpsl
ret
dec
shll
inc
int
mov
faddp
lds
es
dec
movl
mov
es
les
mov
mov
xor
mov
cmp
mov
cmp
es
cmp
dec
ss
test
xor
mov
dec
mov
fmulp
mov
movsl
ret
lret
mov
inc
shlb
movsb
lds
shlb
enter
mov
dec
and
mov
xor
inc
sub
aas
dec
dec
cmp
xor
lret
fisubs
shll
dec
mov
into
cmpsl
mov
lret
enter
and
ret
mov
xor
mov
mov
mov
mov
dec
mov
mov
dec
inc
mov
cmp
dec
lret
leave
xor
into
aas
dec
dec
cmp
cmp
aas
sarb
mov
lret
ss
inc
aaa
test
inc
inc
ror
movsb
xor
cmp
mov
inc
cmp
es
dec
movsb
dec
cmp
mov
and
and
xor
inc
mov
cmp
push
fidivrs
xor
inc
enter
and
mov
inc
les
cmp
sarb
iret
mov
lds
lds
lret
cmpsl
fisubs
and
cmp
mov
mov
cmpsl
and
shlb
movsb
mov
shlb
mov
daa
mov
and
cmp
xor
and
sub
mov
add
xor
mov
xor
push
jmp
inc
inc
and
cmp
sub
jbe
fistpl
jmp
cmp
mov
shrl
mov
and
movsl
movsb
mov
xor
mov
ds
inc
mov
mov
movsl
mov
dec
aaa
xor
mov
inc
mov
mov
ret
mov
sub
enter
xor
inc
test
and
mov
xor
xor
sub
daa
and
sarb
fisubs
movsl
cmp
movsl
iret
leave
and
aas
xor
sub
mov
lret
and
inc
leave
inc
mov
xor
daa
movsl
mov
mov
inc
xor
mov
xor
mov
int
and
dec
rcr
aaa
inc
mov
ss
cmp
dec
mov
cmp
dec
dec
mov
movsb
xor
es
dec
test
cmp
dec
xor
into
dec
mov
mov
dec
mov
inc
ss
sarb
and
and
and
mov
movsl
xor
and
movsl
enter
xor
cmp
mov
mov
rol
xor
mov
mov
enter
mov
int
dec
into
push
mov
mov
rcl
and
mov
iret
cmp
cmpsl
ss
daa
mov
ds
mov
mov
sub
mov
mov
xor
lret
dec
es
mov
mov
mov
mov
shlb
mov
cmp
dec
inc
mov
xor
inc
mov
cmp
int
aas
mov
test
xor
mov
mov
aaa
dec
enter
cmpsl
dec
mov
push
cmp
inc
fisubs
sarb
dec
shll
dec
mov
cmp
mov
enter
ss
mov
mov
dec
xor
inc
mov
cmpsl
dec
dec
mov
leave
mov
rol
iret
and
mov
and
aas
mov
mov
dec
enter
es
xor
sub
mov
inc
mov
leave
inc
and
mov
cmp
into
cmpsl
xor
movsb
sub
iret
mov
inc
ss
mov
mov
xor
shr
imul
mov
add
mov
mov
sub
add
mov
or
mov
mov
or
mov
and
lea
add
mov
mov
mov
mov
or
mov
or
jmp
fiaddl
mov
sub
and
pop
repz
imul
cmp
lds
xor
mov
xor
fidivrs
lds
mov
shrb
test
cmp
dec
dec
mov
mov
shrb
leave
shll
xor
mov
dec
inc
and
inc
xor
les
xor
enter
lret
mov
aaa
mov
daa
iret
test
mov
xor
and
into
daa
mov
mov
mov
mov
and
inc
inc
mov
mov
and
int
cmp
and
mov
mov
les
sub
mov
cmp
iret
aaa
xor
cmpsl
leave
movsl
inc
mov
ficoms
movsl
lret
mov
enter
dec
and
mov
dec
and
mov
mov
daa
mov
and
xor
xor
xor
dec
inc
xor
cmpsl
roll
inc
inc
test
iret
mov
dec
shlb
dec
inc
xor
les
mov
and
dec
leave
into
and
mov
enter
into
push
inc
ds
movsl
mov
cmp
and
movsb
xor
mov
lds
lds
push
mov
xor
mov
leave
mov
fisubs
inc
shlb
mov
inc
dec
ret
iret
mov
mov
sub
shlb
dec
lds
mov
sub
push
mov
xor
mov
test
inc
xor
fmulp
aas
int
mov
ss
shlb
shlb
mov
and
mov
inc
aaa
daa
mov
int
dec
cmp
cmp
les
lds
les
aas
es
es
fidivrs
xor
ss
xor
leave
xor
mov
sub
ret
roll
and
inc
mov
mov
fisubs
cmp
into
and
mov
leave
dec
mov
and
and
mov
ds
int
movsl
cmp
and
inc
daa
mov
xor
dec
and
mov
mov
dec
mov
int
into
xor
inc
int
inc
daa
inc
inc
and
dec
fisubs
lds
ds
dec
leave
dec
int
mov
mov
or
mov
jmp
mov
push
ds
mov
sub
call
jmp
and
mov
aas
iret
mov
mov
dec
push
test
enter
daa
movsl
inc
dec
lret
dec
dec
sub
dec
mov
sub
sub
lret
mov
ds
int
xor
inc
int
inc
iret
mov
into
mov
mov
and
and
mov
ss
sarb
mov
mov
inc
ss
enter
lds
ds
leave
inc
enter
mov
mov
cmp
xor
ret
xor
test
mov
and
leave
dec
mov
movsb
mov
inc
mov
xor
cmp
inc
cmp
es
shlb
xor
mov
dec
sarb
dec
inc
sub
and
test
leave
xor
iret
rcr
aas
int
iret
mov
cmp
sarb
es
mov
and
inc
movsl
mov
cmp
rcl
ds
mov
mov
daa
inc
inc
and
movsb
mov
inc
enter
dec
shlb
xor
and
mov
mov
mov
mov
shlb
ss
mov
lds
xor
shlb
inc
int
and
xor
mov
movsb
mov
mov
mov
fimuls
mov
mov
enter
iret
inc
leave
aas
and
daa
xor
dec
int
les
and
mov
iret
aas
and
movsl
dec
inc
cmpsl
ds
xor
mov
cmp
into
mov
cmp
xor
mov
mov
aaa
mov
and
and
mov
xor
mov
mov
mov
movsb
and
dec
xor
sarb
cmpsl
movsl
cmp
ror
mov
dec
xor
mov
shlb
xor
shll
enter
mov
inc
mov
dec
and
dec
mov
fidivs
dec
ds
int
mov
xor
mov
mov
dec
enter
dec
mov
xor
dec
aas
les
mov
ds
cmpsl
xor
and
xor
cmp
mov
cmp
rorb
ss
mov
mov
test
movsl
cmpsl
dec
int
cmp
inc
dec
daa
dec
and
fisubrs
mov
into
mov
xor
xor
add
mov
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
jmp
sbb
jl
insb
inc
pop
push
mov
adc
jmp
aaa
sub
mov
mov
es
int
aaa
xor
mov
and
les
mov
es
mov
movsb
mov
mov
lret
and
dec
xor
mov
and
movsb
lret
and
mov
mov
mov
ss
xor
and
and
sub
xor
inc
cmp
sub
movsl
rorb
xor
lret
cmp
movsb
mov
xor
xor
mov
iret
cmp
inc
xor
movsl
mov
daa
mov
dec
inc
mov
dec
mov
mov
rorb
enter
xor
inc
mov
leave
mov
mov
inc
mov
shlb
cmp
les
and
mov
faddp
mov
push
ror
iret
inc
and
mov
aaa
cmpsl
daa
cmp
iret
movsb
mov
mov
enter
shll
cmp
dec
leave
inc
cmp
lret
mov
ret
ret
dec
aaa
dec
lds
mov
mov
into
sarb
inc
dec
mov
aaa
inc
and
and
movl
inc
daa
int
mov
mov
es
mov
dec
and
enter
push
fidivs
mov
xor
mov
daa
cmp
inc
xor
dec
mov
mov
test
mov
mov
mov
sarl
rcl
mov
dec
xor
iret
xor
mov
mov
cmp
mov
dec
and
dec
xor
and
dec
cmpsl
mov
cmp
cmp
mov
inc
shrl
iret
movsb
ds
movl
mov
iret
test
cmp
int
mov
inc
and
cmpsl
iret
mov
movsb
xor
and
inc
xor
push
int
lds
xor
and
mov
xor
es
mov
xor
mov
and
fidivrs
mov
ret
inc
lret
mov
les
dec
cmpsl
mov
mov
mov
mov
mov
and
fisubs
dec
mov
cmpsl
mov
mov
dec
mov
mov
jmp
test
insb
fs
and
pop
imul
jae
pop
imul
and
mov
into
movsb
shll
dec
inc
movsb
ss
xor
movsb
mov
xor
dec
dec
test
movsl
aas
cmpsl
les
fidivs
cmp
mov
ret
movsl
aaa
mov
aaa
int
cmp
mov
enter
movsb
mov
inc
inc
mov
shlb
ret
into
inc
sub
int
xor
mov
cmp
xor
inc
cmp
mov
inc
ror
and
lds
mov
shll
mov
es
mov
dec
inc
inc
test
push
movl
enter
mov
and
movsb
sarb
and
mov
iret
xor
inc
push
sub
mov
mov
lds
inc
mov
cmp
inc
ret
into
sub
dec
mov
dec
dec
and
shlb
push
mov
mov
cmp
mov
mov
xor
xor
lret
dec
and
and
les
dec
sub
movsl
xor
into
and
leave
ret
roll
mov
mov
mov
enter
fisubs
xor
mov
mov
dec
mov
ret
inc
les
inc
mov
and
cmpsl
es
iret
and
xor
xor
mov
xor
test
xor
mov
into
mov
and
enter
mov
mov
and
mov
aaa
les
inc
movsl
inc
mov
sub
shlb
xor
xor
fidivs
and
movsl
lds
daa
aaa
xor
push
fmulp
and
leave
aas
inc
push
xor
and
dec
xor
xor
mov
cmp
mov
and
mov
int
cmpsl
mov
les
es
mov
inc
and
mov
int
mov
test
xor
dec
xor
mov
mov
dec
mov
into
mov
ss
and
leave
mov
int
and
test
push
sub
and
inc
and
fimuls
dec
dec
mov
dec
leave
mov
mov
mov
mov
xor
inc
cmpsl
mov
mov
mov
inc
and
dec
and
xor
or
xor
and
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
jmp
mov
mov
push
inc
cs
xor
sub
ljmp
mov
xor
xor
xor
mov
dec
push
mov
dec
movsb
int
cmp
cmp
ds
mov
into
dec
leave
fiadds
mov
mov
mov
mov
mov
inc
and
mov
dec
mov
inc
lret
xor
dec
dec
mov
and
movsl
dec
aas
mov
leave
les
mov
les
sarb
mov
inc
mov
xor
mov
ret
dec
ds
mov
iret
rorb
mov
dec
mov
enter
ds
cmp
dec
mov
sub
inc
leave
mov
inc
ds
push
lret
mov
mov
mov
dec
aaa
ss
mov
cmp
sub
lret
into
ds
xor
iret
mov
mov
ds
xor
mov
mov
lds
mov
mov
dec
ss
int
dec
push
ss
mov
mov
cmp
mov
mov
mov
mov
ret
ret
into
inc
mov
inc
mov
sub
mov
ss
fidivrs
rol
shll
mov
mov
xor
mov
mov
mov
ss
ror
inc
and
mov
mov
aaa
mov
test
mov
dec
fiadds
lds
and
and
test
dec
lret
and
xor
leave
mov
mov
dec
inc
test
and
movsl
mov
ret
dec
mov
cmp
cmp
dec
dec
mov
mov
daa
mov
dec
and
mov
iret
lret
mov
xor
ret
rclb
leave
xor
mov
shlb
push
and
test
shlb
mov
es
movl
movl
movl
jmp
pop
movsl
push
shrb
push
hlt
lahf
les
fucomi
jmp
sub
xor
lret
xor
ret
xor
mov
xor
cmp
xor
cmp
enter
mov
movsb
xor
inc
ror
shlb
mov
xor
mov
mov
mov
shlb
int
daa
and
and
mov
fisubrs
push
push
inc
mov
mov
sub
cmpsl
inc
cmp
mov
cmp
movsb
aas
xor
xor
inc
faddp
ds
cmp
inc
inc
int
xor
inc
mov
shlb
mov
and
cmp
mov
and
rorb
dec
cmpsl
and
and
cmpsl
mov
es
mov
push
dec
rol
mov
iret
lds
mov
test
inc
inc
leave
xor
dec
mov
fisubs
mov
mov
and
lret
and
movsl
mov
mov
mov
dec
inc
sub
fidivs
push
dec
movsl
faddp
test
ss
mov
movsl
rolb
mov
iret
fisubs
push
inc
dec
movsb
movsb
and
es
push
mov
mov
and
mov
and
movsl
cmp
cmp
int
shlb
and
and
and
test
cmp
mov
mov
cmpsl
sub
dec
lds
mov
mov
dec
daa
ret
mov
inc
cmpsl
mov
test
xor
mov
daa
sarb
cmp
int
xor
dec
ds
cmp
ror
test
xor
movsl
xor
cmpsl
xor
mov
mov
daa
into
dec
dec
xor
and
lret
mov
dec
test
and
mov
mov
movl
movl
movl
movl
movl
movl
jmp
aas
mov
imul
fidivrs
js
mov
imul
and
xor
iret
dec
dec
int
mov
aaa
mov
enter
cmpsl
rcl
and
inc
aas
and
shlb
movsb
dec
xor
mov
test
dec
leave
dec
inc
aaa
mov
cmpsl
xor
mov
iret
cmp
daa
inc
dec
into
mov
mov
ret
ror
dec
xor
cmp
and
cmpsl
lds
cmp
mov
mov
mov
mov
rorb
shrb
mov
mov
cmpsl
push
iret
inc
mov
mov
lds
iret
and
mov
daa
mov
and
inc
cmp
enter
aas
les
dec
fisubs
and
into
int
inc
mov
int
movsl
and
xor
and
sarb
mov
cmp
and
xor
xor
aas
xor
movsb
and
mov
inc
lds
mov
dec
inc
aas
les
cmp
int
into
and
and
lret
xor
cmp
shll
movsb
xor
inc
iret
ret
ret
mov
mov
mov
lret
rorb
mov
inc
inc
xor
mov
inc
enter
enter
dec
shlb
mov
and
xor
es
iret
mov
mov
xor
and
inc
cmp
mov
mov
dec
dec
xor
into
rcl
and
lret
and
aas
int
mov
mov
mov
leave
and
dec
mov
inc
inc
aas
mov
mov
cmpsl
mov
mov
aaa
lret
push
and
and
mov
mov
inc
inc
and
mov
and
mov
ror
leave
lds
mov
and
mov
test
cmp
daa
inc
shlb
inc
dec
mov
inc
shlb
orl
add
or
fs
stc
add
or
imul
inc
dec
sub
inc
mov
and
lret
enter
leave
int
movsb
inc
and
lret
xor
dec
mov
mov
xor
and
and
mov
iret
int
inc
ds
mov
dec
daa
cmp
dec
xor
cmpsl
enter
cmpsl
mov
dec
cmp
mov
enter
shlb
mov
and
leave
dec
enter
mov
sub
xor
sarb
xor
mov
cmpsl
mov
cmp
lret
cmp
iret
mov
mov
lds
mov
dec
aaa
mov
dec
lds
enter
xor
mov
xor
shrl
lret
dec
ds
lds
inc
cmpsl
mov
inc
int
mov
fimuls
aaa
mov
inc
dec
dec
lret
leave
inc
inc
cmp
enter
es
fisubs
cmp
cmp
sub
les
mov
les
cmp
push
enter
cmp
iret
mov
lret
cmp
sarb
mov
lds
ret
mov
xor
movsl
push
dec
inc
fidivs
ror
xor
leave
inc
int
aaa
inc
push
mov
movsb
movsl
inc
xor
test
inc
xor
and
mov
leave
dec
mov
mov
and
cmp
iret
xor
mov
and
enter
int
mov
xor
mov
fisubs
test
shlb
xor
enter
mov
mov
mov
mov
xor
aaa
xor
cmp
mov
inc
xor
daa
and
inc
cmp
shlb
movsl
mov
and
movsb
inc
push
inc
int
mov
and
inc
int3
rorl
add
xor
push
and
jns
sbb
lea
imul
sub
fimuls
mov
mov
ss
ret
inc
dec
fidivrs
xor
sub
xor
cmp
aas
leave
cmp
mov
mov
mov
test
aaa
cmp
movsb
mov
and
dec
and
leave
mov
xor
cmp
aas
and
mov
mov
mov
inc
sub
movsl
fidivs
mov
inc
inc
aas
xor
lds
and
lds
int
lret
mov
fmulp
mov
and
xor
and
dec
mov
leave
and
mov
fidivs
mov
xor
inc
lds
cmp
mov
aaa
inc
aas
mov
shll
fmulp
dec
mov
mov
mov
les
inc
mov
enter
movl
dec
dec
and
mov
mov
cmp
and
test
mov
into
xor
xor
iret
inc
dec
and
inc
mov
int
int
movsl
mov
dec
cmp
ss
dec
dec
sub
and
and
mov
iret
inc
mov
movsb
mov
mov
aas
inc
aas
inc
mov
mov
rorb
les
inc
xor
int
inc
ret
enter
mov
mov
mov
mov
sub
mov
cmpsl
ret
dec
iret
movsb
mov
and
dec
and
cmpsl
mov
mov
mov
xor
leave
mov
movsb
inc
rcll
mov
mov
xor
daa
mov
mov
cmp
cmp
inc
xor
mov
dec
xor
les
test
ret
leave
and
mov
fisubs
inc
call
movl
movl
movl
movl
mov
push
movl
mov
mov
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
add
push
cmp
dec
fwait
div
mov
imul
sub
mov
mov
shll
and
mov
inc
mov
xor
mov
into
mov
mov
mov
mov
int
shll
mov
cmp
rorl
mov
movsl
iret
test
iret
int
mov
sub
mov
inc
movsl
and
mov
mov
inc
dec
and
mov
les
and
cmp
xor
cmp
lret
sarb
mov
mov
inc
iret
dec
mov
inc
inc
sub
ret
mov
mov
mov
and
shlb
mov
and
dec
movsl
xor
daa
lret
rorb
push
cmpsl
cmp
inc
cmpsl
and
mov
fidivs
lds
xor
aaa
test
test
xor
dec
dec
ss
dec
and
shlb
movsl
mov
mov
mov
xor
push
push
shll
xor
xor
fidivrs
and
mov
dec
iret
lret
xor
lret
cmp
daa
shlb
shlb
and
mov
inc
mov
dec
inc
dec
dec
mov
mov
lds
int
dec
cmp
dec
mov
iret
dec
aas
ror
and
push
es
inc
cmp
xor
shll
test
iret
movsl
mov
mov
xor
mov
mov
lret
mov
dec
daa
xor
dec
sarl
cmpsl
inc
dec
xor
lret
sub
rolb
fidivrs
into
dec
ret
mov
movsl
cmp
leave
rol
mov
lret
mov
xor
rol
inc
aas
push
push
or
or
push
push
call
push
mov
sub
mov
pop
sbb
mov
push
push
mov
push
xor
push
shr
mov
call
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
push
mov
jmp
xor
cmp
cmp
sub
rorb
xor
inc
imul
mov
cmp
and
cmp
mov
inc
mov
mov
iret
enter
mov
leave
inc
es
xor
iret
enter
lds
and
mov
int
inc
and
sarl
mov
push
and
inc
enter
mov
xor
sub
shlb
xor
dec
movsl
xor
and
cmpsl
mov
xor
xor
inc
inc
mov
mov
daa
mov
aaa
and
inc
shll
shll
mov
and
test
movsl
mov
mov
lret
mov
mov
test
daa
iret
mov
movsl
dec
sarb
mov
and
cmp
es
sub
inc
ds
mov
mov
mov
mov
dec
enter
es
iret
leave
mov
mov
mov
mov
cmp
ds
int
inc
aas
movsl
cmp
and
inc
push
cmp
fisubs
inc
mov
mov
rcr
and
inc
mov
shrb
mov
les
xor
daa
daa
xor
ds
cmp
mov
mov
inc
and
mov
mov
dec
daa
mov
push
and
sarb
mov
xor
mov
dec
lret
into
mov
sarl
faddp
inc
mov
leave
xor
test
inc
xor
xor
mov
aas
aas
cmp
xor
xor
cmp
xor
xor
mov
mov
inc
mov
dec
inc
mov
and
mov
roll
mov
and
and
ret
lret
inc
and
cmp
enter
jmp
leave
cmpsl
in
jmp
cmpsl
mov
out
sbb
mov
imul
dec
int
sarl
mov
aaa
mov
fidivs
mov
xor
xor
mov
lret
and
iret
mov
cmpsl
mov
mov
and
into
les
mov
leave
movsl
mov
mov
mov
test
into
int
int
dec
cmp
mov
movsl
and
mov
cmpsl
mov
mov
daa
aaa
mov
mov
test
dec
and
mov
cmp
inc
mov
xor
cmp
dec
dec
and
lret
movsl
inc
dec
xor
aas
mov
mov
inc
and
mov
movsl
sarl
sarb
xor
mov
mov
mov
mov
xor
push
enter
mov
mov
mov
cmp
xor
ss
ror
ror
push
push
ret
inc
inc
dec
leave
ss
mov
rol
leave
es
iret
xor
dec
enter
dec
cmp
mov
ret
int
mov
mov
les
cmp
rorb
enter
mov
cmpsl
xor
xor
mov
mov
mov
and
dec
xor
mov
dec
dec
les
cmp
cmp
mov
mov
and
dec
iret
inc
faddp
les
dec
mov
inc
int
leave
int
daa
cmpsl
rolb
dec
xor
dec
ds
dec
and
cmp
mov
aas
cmpsl
movsb
inc
leave
daa
movl
iret
into
cmp
into
iret
mov
dec
leave
aaa
cmp
shll
ss
mov
cmpsl
movsl
inc
mov
xor
leave
mov
inc
aaa
mov
cmpsl
es
inc
cmp
mov
dec
dec
xor
dec
mov
and
mov
aas
cmpsl
mov
shl
or
jmp
scas
push
and
and
mov
mov
mov
and
fucomi
jmp
cmp
xor
mov
lret
enter
xor
les
daa
mov
ds
aas
xor
mov
dec
and
push
mov
mov
es
and
mov
inc
es
movsl
ds
movsl
mov
cmp
dec
mov
shlb
mov
inc
aaa
mov
mov
mov
faddp
dec
push
iret
and
cmp
cmp
cmp
mov
mov
dec
ret
sub
and
cmpsl
daa
mov
shlb
movsl
xor
cmp
dec
inc
mov
mov
mov
cmpsl
leave
and
mov
fisubs
dec
mov
lret
and
xor
cmp
xor
ds
mov
cmp
inc
cmp
and
mov
cmpsl
dec
int
inc
enter
and
les
es
xor
movsb
lds
mov
fisubs
movsl
inc
mov
mov
fisubs
aas
mov
cmpsl
xor
inc
xor
int
mov
mov
daa
aaa
and
mov
and
xor
mov
mov
and
shlb
dec
cmp
and
les
movsl
cmpsl
int
aaa
movsl
cmp
faddp
inc
ds
inc
mov
movsl
inc
test
inc
dec
push
mov
aas
cmp
dec
int
mov
and
inc
movsb
mov
inc
fisubs
mov
ror
dec
xor
inc
mov
mov
mov
inc
int
mov
mov
daa
mov
xor
inc
xor
inc
shll
xor
inc
movsb
xor
daa
dec
dec
inc
inc
mov
mov
dec
iret
mov
dec
mov
rorl
and
inc
xor
xor
sub
xor
xor
mov
mov
mov
mov
mov
sub
push
mov
push
sbb
push
push
call
push
add
push
adc
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
and
jmp
adc
inc
pusha
sub
adc
mov
xchg
dec
imul
les
cmp
push
int
mov
dec
mov
mov
mov
mov
xor
inc
inc
mov
ret
ss
inc
cmpsl
inc
dec
enter
and
dec
mov
mov
xor
dec
and
dec
xor
enter
ror
inc
mov
push
and
rol
mov
cmp
aaa
rorb
sarl
xor
mov
mov
push
mov
and
inc
mov
xor
and
aas
sub
lds
ret
cmpsl
cmp
cmp
daa
leave
and
sub
xor
leave
dec
leave
daa
movsl
mov
inc
cmp
iret
mov
les
lret
sub
dec
movsb
dec
mov
mov
movsb
xor
cmp
sub
lds
mov
cmp
dec
dec
mov
dec
movsb
xor
mov
xor
dec
xor
and
mov
aas
mov
iret
cmpsl
mov
into
dec
cmpsl
mov
cmp
mov
dec
and
daa
daa
mov
dec
cmp
mov
mov
inc
mov
leave
mov
movsl
mov
xor
daa
and
xor
movsl
movsb
cmp
mov
and
dec
aas
sub
and
mov
shlb
lret
shll
mov
xor
fidivs
daa
and
mov
mov
inc
mov
mov
and
mov
mov
mov
lret
cmp
fidivrs
xor
int
dec
dec
mov
and
inc
mov
mov
and
cmpsl
mov
mov
sub
dec
aaa
leave
dec
aaa
enter
dec
es
dec
fisubs
mov
cmp
mov
and
push
shlb
into
mov
push
push
jmp
mov
out
insb
cwtl
call
mov
fucomi
jmp
and
and
cmp
mov
mov
inc
mov
rolb
inc
cmp
ds
mov
cmpsl
into
mov
and
push
lret
dec
cmpsl
mov
aaa
xor
mov
mov
inc
mov
xor
into
mov
ror
sub
mov
mov
mov
mov
and
mov
xor
movsl
xor
and
inc
mov
and
sub
xor
xor
xor
mov
test
mov
mov
mov
and
ret
mov
xor
cmp
aaa
cmp
es
lret
daa
mov
les
and
into
aaa
fidivs
inc
inc
shlb
dec
mov
mov
movsb
mov
daa
movsb
and
cmp
and
cmp
mov
mov
aaa
mov
sub
ds
movsl
and
dec
mov
movsb
inc
xor
xor
ficoms
dec
mov
mov
and
es
sub
mov
inc
and
mov
int
mov
mov
movsl
mov
dec
mov
aaa
xor
mov
mov
and
enter
and
and
mov
leave
inc
enter
aas
mov
ds
dec
leave
movsl
and
mov
and
mov
mov
ds
xor
push
mov
into
dec
mov
dec
mov
xor
mov
iret
mov
leave
xor
into
and
xor
inc
and
and
mov
xor
cmp
mov
fmulp
leave
aaa
daa
cmp
es
aaa
dec
inc
mov
mov
inc
movl
int
ss
sub
call
push
push
xor
xor
jmp
jb
inc
ret
jl
mov
sub
jae
dec
imul
and
mov
movsb
mov
xor
dec
inc
and
cmp
into
mov
daa
inc
sub
dec
mov
leave
movsb
mov
movsb
shlb
cmp
and
daa
xor
and
les
mov
lds
sarb
daa
mov
mov
lds
and
ds
mov
fisubs
into
mov
and
and
cmp
inc
mov
inc
int
fidivs
lret
cmp
cmp
enter
mov
iret
mov
inc
sub
mov
mov
aaa
and
aaa
ror
mov
dec
mov
mov
and
xor
dec
xor
test
mov
xor
mov
mov
cmp
mov
shlb
daa
iret
daa
dec
inc
mov
iret
mov
mov
inc
inc
movsb
cmp
dec
int
test
mov
xor
les
inc
mov
inc
dec
mov
test
dec
xor
inc
mov
mov
mov
mov
leave
dec
inc
dec
mov
and
cmp
inc
into
mov
into
mov
sarb
cmp
rcl
dec
mov
xor
dec
inc
dec
inc
xor
dec
mov
push
mov
cmpsl
enter
xor
xor
fisubs
sarb
mov
and
dec
rol
mov
movsl
dec
mov
cmp
cmp
inc
test
and
lret
mov
ds
mov
xor
inc
and
cmp
mov
les
dec
dec
inc
mov
movsl
dec
mov
int
mov
mov
movsb
mov
cmp
mov
xor
xor
mov
mov
sub
inc
shll
fidivs
into
ss
push
mov
call
mov
mov
jmp
mov
mov
call
jo
sbb
fucomi
jmp
dec
dec
mov
and
mov
dec
mov
xor
mov
sarb
and
mov
lret
int
daa
iret
lds
dec
test
aas
and
les
mov
mov
dec
inc
faddp
mov
cmp
xor
sub
mov
lds
and
mov
mov
sub
mov
and
mov
lds
and
and
xor
dec
ds
aaa
movsb
mov
xor
inc
ss
faddp
test
iret
rorl
dec
mov
aaa
ret
ret
mov
ret
mov
rol
mov
rol
mov
cmpsl
dec
and
inc
xor
xor
inc
inc
inc
daa
mov
and
mov
mov
lret
xor
daa
daa
mov
and
cmp
mov
sub
mov
and
cmp
inc
es
mov
mov
cmp
inc
mov
enter
ret
rcr
mov
inc
cmp
mov
inc
xor
inc
mov
mov
and
and
movsb
aas
inc
daa
and
inc
fisubs
cmp
test
and
shll
ror
cmp
aaa
mov
and
ss
leave
mov
lret
mov
mov
daa
dec
inc
inc
inc
and
mov
inc
cmp
dec
and
sub
lds
xor
dec
mov
cmp
mov
mov
lds
cmpsl
cmp
dec
lret
mov
inc
dec
xor
ror
mov
xor
cmpsl
iret
xor
mov
inc
xor
and
xor
mov
lret
inc
sub
ss
inc
xor
xor
dec
into
mov
mov
xor
xor
push
add
xor
out
jge
data16
pop
loope
enter
imul
jmp
mov
xor
inc
xor
movsb
aas
inc
xor
fmulp
mov
iret
mov
mov
into
lret
lds
int
xor
and
sarl
xor
enter
mov
mov
xor
dec
dec
mov
sub
mov
and
and
es
xor
mov
mov
shlb
inc
xor
cmp
mov
mov
mov
mov
and
and
dec
and
movsl
mov
fisubs
inc
and
movsl
mov
mov
dec
sub
fidivs
dec
cmp
xor
mov
mov
mov
cmp
aas
dec
mov
sub
mov
and
mov
xor
and
and
xor
push
dec
mov
dec
and
ret
mov
daa
mov
and
ss
iret
aas
mov
and
mov
mov
dec
lret
inc
inc
lds
mov
mov
shll
dec
inc
inc
mov
and
inc
inc
cmpsl
mov
lds
mov
leave
mov
xor
cmp
inc
ss
iret
lds
mov
mov
mov
ds
mov
fisubs
mov
ss
mov
mov
and
and
test
ret
fisubrs
dec
cmp
aas
dec
mov
int
dec
mov
mov
into
aas
fimuls
inc
mov
sub
aas
ss
dec
xor
rolb
mov
xor
mov
ss
mov
mov
mov
inc
mov
fiadds
xor
xor
daa
aas
test
inc
inc
xor
fimuls
mov
es
xor
inc
les
mov
dec
movsb
cmpsl
and
out
mov
xor
xor
jmp
scas
xchg
cmpsb
cmpsb
insb
jg
stc
lret
pop
lock
fucomi
jmp
xor
xor
dec
dec
mov
and
iret
mov
mov
ret
enter
mov
shlb
inc
xor
xor
cmp
mov
xor
xor
inc
dec
cmp
mov
aaa
enter
ds
and
xor
mov
mov
cmp
and
cmp
lret
mov
sarb
ror
xor
mov
daa
mov
rolb
mov
aas
lret
and
rorb
inc
into
inc
mov
dec
les
mov
mov
mov
xor
xor
lret
mov
daa
int
mov
into
and
dec
es
and
xor
aas
dec
xor
iret
mov
sub
cmp
xor
xor
cmp
and
mov
ds
les
les
dec
leave
ret
xor
mov
mov
fidivs
cmp
test
lds
iret
mov
dec
lret
dec
and
int
sarb
mov
mov
mov
lret
les
mov
aaa
aaa
aaa
inc
mov
and
xor
xor
les
cmp
mov
and
lds
leave
mov
inc
xor
aaa
aas
les
and
into
inc
inc
movsb
enter
and
inc
inc
movsb
cmp
ds
iret
dec
inc
iret
movsb
fidivrs
cmp
es
dec
mov
mov
inc
cmp
and
mov
ds
mov
dec
shlb
cmp
cmpsl
lds
inc
mov
inc
mov
and
xor
aas
lds
and
mov
mov
fmulp
xor
call
add
mov
mov
adc
mov
mov
xor
xor
and
and
mov
mov
push
push
push
push
call
push
push
xor
xor
push
push
jmp
out
test
dec
jne
push
mov
jmp
inc
mov
and
mov
rol
inc
daa
dec
movsb
cmpsl
mov
iret
mov
ss
mov
mov
xor
xor
mov
mov
xor
ret
inc
mov
inc
and
shll
test
mov
shlb
inc
int
mov
shlb
cmp
and
iret
and
cmpsl
mov
test
int
cmpsl
shlb
dec
daa
mov
test
cmp
and
mov
mov
mov
lret
cmp
mov
iret
es
inc
and
xor
sub
cmp
test
leave
ret
aas
inc
mov
xor
and
mov
mov
daa
mov
xor
dec
inc
mov
mov
fiadds
mov
sub
inc
mov
int
cmp
test
aaa
dec
dec
int
xor
inc
sarl
mov
xor
aas
mov
movsl
xor
dec
xor
les
mov
enter
int
dec
enter
movsb
dec
mov
ds
and
leave
movsb
mov
shlb
ret
cmp
and
sub
es
inc
into
mov
aaa
test
ds
leave
mov
es
mov
test
inc
mov
mov
inc
int
es
iret
dec
ret
into
enter
and
into
inc
mov
cmpsl
shll
xor
daa
test
aaa
and
mov
sarb
movsb
dec
cmp
leave
dec
mov
movsl
leave
xor
les
and
xor
dec
movsl
mov
lds
inc
sub
and
aaa
daa
int
leave
xor
mov
push
mov
mov
movsl
sub
dec
inc
shlb
movl
rol
mov
leave
mov
call
xor
mov
mov
xor
add
adc
jmp
sbb
jbe
jbe
push
not
in
divl
ljmp
rol
dec
mov
inc
int
mov
enter
push
cmpsl
int
ds
shlb
cmpsl
mov
dec
dec
aaa
mov
ds
push
inc
xor
iret
sub
iret
enter
mov
xor
aas
mov
mov
lds
and
cmp
xor
enter
and
xor
dec
mov
sub
mov
ret
movsl
int
aaa
and
inc
dec
inc
lret
mov
dec
and
mov
les
mov
rol
dec
les
mov
ds
fmulp
and
into
push
cmpsl
aaa
mov
lret
dec
lret
sub
mov
inc
xor
cmp
mov
and
ds
fisubs
inc
mov
shlb
test
mov
cmp
daa
ss
mov
les
int
mov
and
lret
push
mov
push
and
ret
roll
and
and
les
mov
lret
cmp
mov
sub
movsl
les
and
and
xor
mov
ret
fiadds
aaa
test
ret
xor
and
cmp
shlb
mov
cmp
enter
mov
aaa
mov
test
mov
mov
daa
and
xor
int
shlb
leave
mov
xor
and
mov
mov
xor
cmp
push
cmp
xor
mov
inc
xor
inc
inc
mov
mov
mov
inc
shrb
inc
mov
sarl
shll
enter
les
lds
mov
mov
ss
inc
and
ds
shll
icebp
pop
test
repnz
lods
roll
or
mov
shr
or
mov
mov
mov
mov
jmp
or
in
gs
adc
imul
or
cmpsl
mov
jmp
and
shlb
mov
and
iret
cmp
aas
dec
and
cmpsl
lret
inc
lret
xor
rorl
mov
inc
mov
lret
mov
inc
aas
xor
cmp
mov
mov
cmpsl
aas
and
xor
shll
and
les
and
mov
inc
inc
mov
mov
aas
mov
ror
and
shlb
mov
movl
test
mov
xor
mov
rorl
dec
inc
int
enter
cmp
mov
xor
int
dec
cmp
inc
dec
mov
dec
mov
test
inc
iret
mov
fiadds
and
cmp
inc
and
mov
mov
movsb
dec
vpmaxub
mov
mov
push
cmp
mov
inc
dec
les
and
xor
xor
enter
cmpsl
cmp
es
sub
sub
mov
shlb
lds
mov
lret
and
movsb
ss
ret
mov
mov
les
enter
aaa
rorb
inc
cmp
ss
mov
mov
ss
mov
mov
cmp
cmp
xor
inc
inc
inc
ss
inc
and
mov
dec
mov
aas
dec
cmp
ss
xor
les
mov
lret
ss
dec
cmpsl
inc
shll
es
movsb
into
mov
xor
shlb
les
ret
dec
mov
ret
and
ror
xor
shll
movsl
es
dec
rol
mov
leave
lret
leave
dec
mov
xor
mov
inc
movsl
fisubs
mov
push
inc
sub
inc
fisubs
shlb
ret
sarl
lds
inc
inc
mov
ds
dec
movsl
cmp
inc
mov
mov
inc
mov
mov
xor
xor
sub
mov
sbb
mov
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
sub
mov
and
or
xor
mov
mov
and
xor
add
cmp
jne
mov
mov
mov
add
jmp
fsts
popf
movsl
jge
adc
dec
add
adc
jmp
iret
leave
test
mov
cmp
mov
movsb
faddp
ds
inc
inc
mov
xor
shrb
and
cmpsl
mov
cmp
and
xor
shlb
sarb
movsb
cmp
and
and
cmp
movsb
inc
movsb
and
fimuls
iret
and
xor
and
xor
sarl
movsl
rol
inc
movsb
inc
mov
cmp
shll
xor
inc
rolb
inc
push
mov
into
ret
mov
es
xor
lds
cmp
xor
xor
into
mov
dec
xor
dec
mov
xor
fmulp
mov
dec
mov
and
rorb
aaa
mov
cmp
and
fidivs
mov
dec
mov
sarb
ror
ror
mov
mov
xor
mov
dec
ror
and
ds
into
mov
daa
xor
sarb
mov
xor
rorb
cmp
les
inc
push
dec
ret
mov
mov
and
lds
cmpsl
and
inc
mov
shlb
mov
inc
dec
dec
inc
dec
dec
rol
push
push
dec
mov
ss
dec
mov
xor
mov
daa
cmpsl
mov
dec
ds
and
test
mov
enter
cmpsl
lds
movsb
fidivs
mov
mov
movsb
xor
roll
enter
dec
enter
dec
sub
int
xor
xor
fisubs
ret
dec
leave
and
dec
daa
cmpsl
shll
inc
les
aas
mov
xor
ss
sub
mov
mov
mov
mov
dec
mov
xor
inc
aas
and
mov
xor
shlb
cmp
aaa
inc
ds
and
mov
cmp
and
cmpsl
fidivrs
and
leave
shrb
cmpsl
inc
rorb
cmp
les
aas
xor
cmp
sub
cmp
cmp
mov
mov
aaa
mov
xor
mov
movsb
and
mov
xor
cmp
xor
cmpsl
xor
cmpsl
mov
xor
and
sub
ds
xor
mov
mov
mov
cmp
cmp
dec
and
dec
inc
mov
test
ds
lret
lret
aaa
mov
xor
ss
dec
dec
mov
es
xor
mov
mov
cmp
xor
mov
dec
cmp
ficoms
mov
mov
into
daa
cmp
aas
sarb
xor
and
and
mov
and
inc
mov
inc
ds
es
and
es
aaa
mov
xor
movl
movsl
mov
shll
ds
mov
enter
mov
sarb
and
inc
inc
cmp
mov
leave
xor
test
inc
xor
mov
mov
and
xor
xor
and
int
mov
xor
push
es
shlb
shlb
iret
cmp
lret
cld
add
mov
shr
or
mov
shl
mov
mov
lea
add
mov
mov
mov
imul
xor
div
jmp
xor
pop
mov
insb
cmpsl
pushf
or
jle
and
sbb
imul
mov
and
xor
movsb
ss
dec
aas
shlb
dec
rol
mov
and
xor
inc
mov
cmpsl
rol
inc
mov
mov
cmpsl
inc
aaa
and
xor
mov
inc
dec
xor
aas
dec
dec
and
cmp
mov
mov
lret
inc
cmp
test
dec
daa
into
mov
mov
dec
lret
rol
leave
movsl
les
cmp
shlb
lds
int
enter
enter
aas
ret
shll
mov
dec
aaa
mov
mov
rol
dec
ds
cmp
and
daa
cmpsl
inc
fidivrs
mov
dec
push
mov
mov
lret
dec
test
inc
dec
enter
mov
inc
and
mov
and
cmp
sub
xor
mov
mov
test
mov
movsl
cmpsl
ror
test
dec
int
xor
mov
mov
aaa
movsl
sarb
xor
into
fimuls
mov
inc
dec
cmp
les
and
and
daa
mov
xor
sarb
les
and
daa
les
mov
mov
movsb
and
mov
and
into
push
shll
cmp
inc
mov
dec
sarl
daa
mov
and
mov
es
and
lret
aaa
rolb
mov
dec
and
dec
aas
cmp
mov
dec
mov
ds
enter
aaa
mov
mov
sub
xor
cmp
xor
ret
aas
dec
fidivs
inc
mov
mov
dec
mov
sarl
and
mov
xor
mov
inc
movsb
mov
cmp
int
enter
shll
mov
xor
aaa
inc
inc
iret
dec
xor
mov
inc
aas
mov
cmp
aaa
mov
and
cmp
dec
test
and
ss
inc
int
mov
mov
mov
xor
mov
fisubs
and
inc
xor
inc
mov
mov
mov
dec
iret
ret
ret
daa
inc
inc
sarb
inc
xor
leave
mov
lds
xor
xor
mov
dec
mov
int
leave
and
mov
and
xor
test
lds
les
and
movsl
mov
shlb
fisubs
mov
les
movl
mov
ds
ss
ds
mov
xor
aaa
and
mov
cmp
inc
cmp
mov
mov
mov
mov
enter
mov
mov
lds
cmpsl
ret
dec
aaa
cmp
lds
dec
dec
mov
mov
inc
mov
lds
inc
sarb
aaa
mov
mov
shlb
cmp
mov
aas
lret
shlb
xor
mov
dec
dec
mov
xor
int
inc
cmp
aaa
movsb
mov
xor
and
cmp
je
mov
jmp
mov
add
xor
jmp
fbstp
fbld
add
push
cs
imul
dec
inc
inc
mov
into
mov
dec
mov
mov
mov
movsb
mov
int
dec
mov
movsl
daa
movsl
aas
cmp
and
mov
ret
shrb
inc
mov
fisubs
shlb
int
lret
mov
and
ret
fidivrs
mov
mov
daa
sarb
dec
mov
test
and
mov
mov
ss
mov
es
mov
mov
and
inc
int
inc
mov
mov
mov
and
aaa
xor
into
inc
mov
cmpsl
xor
and
mov
xor
sarl
dec
cmpsl
mov
les
es
xor
leave
into
cmp
movsb
mov
and
dec
es
xor
and
dec
shrb
es
mov
iret
xor
mov
inc
shlb
xor
mov
daa
mov
mov
inc
shll
mov
mov
daa
and
cmpsl
inc
rorb
inc
dec
and
xor
inc
and
ds
cmp
iret
rorb
xor
cmp
ret
test
xor
dec
xor
xor
mov
push
enter
mov
xor
mov
inc
xor
inc
int
xor
dec
rolb
lds
dec
cmp
aaa
cmp
mov
and
into
dec
cmp
mov
cmpsl
sub
inc
movsl
aas
mov
aaa
xor
and
mov
mov
mov
mov
cmp
leave
inc
fidivs
mov
iret
inc
inc
mov
rol
inc
inc
mov
cmpsl
xor
cmp
aaa
inc
xor
mov
rol
faddp
iret
movsl
mov
inc
iret
xor
mov
xor
inc
mov
into
shll
cmpsl
les
lds
xor
es
inc
aas
lret
mov
dec
aaa
xor
cmpsl
xor
xor
and
mov
dec
movsb
mov
aas
mov
cmp
xor
shll
xor
int
aaa
push
mov
mov
mov
daa
ror
dec
inc
dec
aas
mov
xor
push
mov
mov
mov
movsb
into
mov
movsl
dec
mov
inc
lret
dec
xor
dec
inc
cmp
into
shlb
rol
cmp
lds
mov
xor
mov
enter
inc
rolb
ret
inc
int
mov
xor
mov
shlb
mov
mov
and
lret
test
sub
ret
dec
dec
mov
push
sarb
inc
mov
mov
shlb
enter
cmp
and
mov
and
mov
lret
ss
movsl
mov
xor
test
xor
mov
inc
dec
mov
and
aas
xor
les
cmp
mov
xor
and
mov
cmp
daa
mov
inc
dec
shlb
and
inc
fsubrs
loop
add
xor
jmp
movl
movl
movl
jmp
lcall
xor
xor
cmp
jmp
dec
iret
cmp
daa
fidivrs
movl
cmp
xor
xor
xor
mov
mov
and
ss
mov
into
inc
sub
movsb
lret
and
and
xor
mov
iret
into
mov
into
and
push
inc
dec
xor
sarl
test
and
mov
mov
les
mov
ss
mov
aas
mov
mov
mov
mov
xor
dec
ret
xor
fimuls
mov
movsb
leave
cmpsl
push
dec
movsl
aas
ret
mov
ds
inc
mov
mov
mov
ds
inc
cmp
mov
shlb
ds
cmp
mov
and
int
cmp
mov
xor
push
inc
mov
dec
int
mov
ret
shlb
cmp
shlb
and
movsb
xor
mov
sarb
inc
iret
dec
dec
ret
cmpsl
shrl
leave
and
sub
ror
mov
xor
mov
dec
rol
rcl
mov
shll
and
mov
mov
dec
mov
mov
mov
mov
mov
and
fidivs
mov
cmpsl
inc
and
shlb
sub
iret
and
mov
inc
xor
mov
xor
xor
movsl
ds
ret
xor
mov
ret
inc
into
aaa
fisubs
xor
iret
iret
dec
mov
enter
dec
mov
dec
mov
mov
mov
ss
enter
mov
and
sarl
shll
sub
xor
inc
fiadds
sub
and
aas
mov
fidivs
push
and
xor
xor
es
mov
dec
mov
mov
mov
mov
mov
mov
into
xor
inc
mov
inc
dec
fisubs
mov
cmp
inc
inc
sarb
mov
int
mov
mov
and
lret
and
int
inc
mov
inc
dec
dec
enter
les
rolb
lret
ds
dec
iret
xor
mov
mov
sub
leave
inc
mov
leave
mov
mov
mov
xor
ret
inc
inc
mov
mov
enter
cmp
and
mov
dec
movsb
inc
enter
mov
dec
dec
xor
xor
xor
mov
xor
xor
xor
xor
shlb
xor
dec
into
and
and
ds
inc
mov
iret
push
inc
and
inc
mov
les
inc
xor
mov
push
cmp
and
ds
inc
dec
inc
xor
mov
inc
ds
mov
fidivs
xor
les
leave
inc
shlb
into
daa
inc
into
push
mov
inc
enter
es
daa
int
cmp
mov
movsb
ss
mov
mov
sub
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
addr16
push
cmpsb
inc
pop
xor
data16
mov
jmp
mov
aaa
mov
and
push
xor
lret
and
xor
inc
dec
inc
dec
cmp
xor
and
roll
mov
lret
inc
mov
mov
lret
ds
aas
int
movsl
xor
mov
mov
aas
xor
sub
inc
movsb
mov
inc
aaa
aaa
inc
aaa
cmpsl
and
xor
mov
mov
lds
inc
and
mov
leave
and
and
xor
mov
cmp
mov
cmpsl
dec
movsl
mov
movsb
movsl
cmp
movsb
dec
les
mov
leave
mov
mov
xor
xor
inc
les
and
and
cmp
cmpsl
daa
mov
and
lds
mov
enter
mov
dec
xor
dec
mov
mov
ret
cmp
and
and
inc
ds
enter
mov
sub
mov
mov
dec
dec
inc
and
dec
cmpsl
mov
lds
aas
and
mov
mov
aaa
daa
inc
mov
cmp
and
into
aas
ret
inc
shll
es
mov
daa
xor
movsb
int
and
mov
mov
mov
inc
inc
shll
mov
mov
mov
mov
leave
mov
dec
fidivrs
shll
daa
push
sub
sarl
mov
mov
mov
and
daa
mov
shlb
mov
mov
mov
mov
xor
mov
leave
dec
int
cmp
into
and
aaa
cmp
mov
mov
sub
sub
dec
enter
mov
xor
xor
ds
and
dec
xor
xor
mov
shlb
inc
cmp
lds
mov
mov
mov
dec
leave
xor
xor
and
shlb
daa
int
ds
mov
mov
inc
ror
inc
lds
int
mov
xor
cmpsl
test
ret
mov
mov
int
daa
mov
les
mov
mov
mov
and
enter
xor
cmp
sub
and
dec
test
fisubs
inc
into
mov
fiadds
xor
cmpsl
mov
and
aas
aas
aas
inc
aas
dec
into
inc
movl
and
mov
int
mov
iret
dec
and
movsb
int
ds
mov
movsl
ds
leave
mov
dec
iret
les
mov
daa
xor
shll
ss
enter
ret
mov
aaa
dec
enter
es
and
mov
xor
ret
mov
inc
aaa
dec
es
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
sub
mov
imul
mov
xor
div
push
mov
xor
jmp
fbld
das
jl
lods
mov
imul
jmp
mov
xor
shrl
mov
cmp
ss
aaa
inc
daa
int
mov
mov
dec
dec
movsb
mov
dec
test
inc
int
daa
ss
mov
into
and
mov
mov
lds
int
int
iret
int
aaa
leave
cmp
lret
mov
lds
mov
and
shlb
ret
mov
cmpsl
mov
shlb
lds
push
mov
cmp
es
aas
lret
mov
and
inc
cmp
dec
dec
mov
shlb
mov
into
dec
xor
aaa
xor
mov
rorb
es
xor
sarb
cmp
movsl
cmp
xor
movsb
inc
int
aas
mov
fisubs
mov
cmp
mov
xor
leave
dec
dec
mov
xor
xor
dec
mov
push
dec
rcr
dec
xor
and
test
mov
iret
mov
rorl
mov
and
cmp
and
leave
xor
aaa
ds
movl
xor
and
and
and
mov
ds
mov
iret
test
mov
push
mov
and
dec
and
and
mov
dec
into
enter
and
fimuls
mov
cmp
test
into
inc
dec
mov
dec
rorb
aas
mov
mov
xor
ror
and
mov
and
inc
les
mov
inc
xor
mov
mov
xor
mov
and
mov
xor
ror
aas
mov
and
daa
sub
mov
mov
rol
mov
and
dec
into
ret
dec
dec
lds
les
ret
mov
and
aas
int
inc
aaa
dec
mov
inc
mov
shlb
mov
lret
xor
mov
mov
inc
xor
into
cmp
mov
mov
test
cmp
inc
mov
mov
mov
cmp
xor
mov
xor
push
movsb
mov
leave
mov
mov
aaa
sub
test
ds
mov
daa
int
lds
and
mov
iret
mov
daa
mov
ret
lret
inc
ss
cmp
mov
shll
mov
inc
dec
and
mov
mov
lds
daa
dec
dec
mov
movsb
es
daa
mov
xor
xor
iret
lret
fisubs
sarb
iret
mov
cmp
mov
es
iret
fmulp
and
movsl
cmp
and
fidivs
movsb
cmp
ret
mov
mov
mov
dec
dec
mov
int
into
inc
enter
shlb
xor
sub
rcr
mov
iret
es
into
mov
mov
mov
mov
rorb
ds
fidivrs
and
test
mov
xor
inc
and
xor
cmpsl
mov
into
movl
movl
movl
mov
jmp
xchg
and
pushfw
imul
call
jmp
mov
xor
les
aaa
mov
and
inc
xor
mov
xor
xor
test
xor
mov
dec
mov
mov
and
mov
aaa
mov
leave
cmpsl
and
and
enter
leave
movsl
mov
les
mov
mov
sarb
rorb
es
xor
ret
ss
cmpsl
test
and
mov
mov
inc
sarb
mov
sarl
movsb
ds
shlb
dec
dec
dec
inc
mov
cmpsl
mov
mov
mov
mov
mov
cmp
xor
into
sarb
cmp
mov
dec
and
dec
and
and
lret
mov
daa
mov
es
mov
and
enter
fidivs
ror
dec
enter
and
mov
roll
cmp
mov
mov
mov
mov
and
xor
inc
rorb
inc
xor
mov
ror
mov
and
inc
inc
dec
xor
aaa
mov
mov
leave
and
mov
xor
aaa
mov
fisubs
xor
les
aaa
mov
ror
ss
mov
mov
mov
dec
xor
ds
movsl
test
mov
dec
mov
and
dec
mov
movsb
dec
ret
and
mov
mov
int
cmp
ds
vmovmskps
cmp
mov
ds
leave
push
cmp
movsl
cmpsl
xor
dec
inc
mov
leave
ds
xor
test
dec
push
push
movsl
and
movsb
enter
movsb
enter
xor
movsl
mov
mov
inc
mov
mov
daa
mov
movsb
cmp
fidivrs
into
mov
aas
cmp
ror
aas
xor
dec
aas
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
rol
cmpsl
mov
mov
movsl
inc
and
xor
and
cmp
inc
mov
dec
inc
daa
cmp
cmp
daa
dec
mov
mov
iret
int
dec
xor
and
inc
mov
les
daa
int
mov
xor
xor
movsl
shlb
dec
aas
and
aas
push
dec
mov
xor
shlb
es
leave
les
dec
cmp
movsl
lret
iret
shlb
mov
int
into
dec
mov
aaa
ss
mov
fidivs
mov
mov
test
mov
dec
xor
mov
and
mov
iret
enter
dec
mov
mov
and
mov
shlb
test
mov
and
shlb
rol
cmp
and
into
cmpsl
mov
mov
rclb
cmp
dec
mov
leave
dec
int
daa
inc
xor
dec
les
mov
and
and
mov
enter
dec
and
test
iret
mov
daa
movsl
push
fmulp
dec
movsl
dec
inc
rol
mov
shlb
ret
rorl
ss
and
fidivrs
mov
imul
sub
mov
imul
or
mov
or
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
imul
xor
push
pop
div
mov
xor
add
mov
sub
add
add
add
mov
imul
mov
sub
mov
mov
imul
mov
imul
xor
and
add
sub
cmp
jbe
pop
leave
ret
push
mov
sub
push
xor
jmp
inc
adc
xchg
in
insb
mov
nop
stc
add
inc
scas
hlt
andl
jmp
and
mov
mov
mov
inc
mov
dec
mov
mov
cmp
leave
inc
push
xor
dec
mov
inc
dec
mov
xor
movsb
mov
mov
into
xor
mov
mov
lret
mov
sarb
mov
inc
mov
ss
mov
enter
les
mov
mov
aaa
and
inc
xor
dec
int
ret
aaa
iret
mov
movsl
xor
mov
inc
cmpsl
mov
inc
es
lret
and
mov
and
inc
ds
mov
enter
push
mov
mov
and
enter
inc
aaa
dec
int
enter
movsb
mov
mov
xor
xor
mov
ror
leave
and
cmp
es
ret
mov
inc
dec
inc
cmpsl
xor
dec
test
sub
xor
mov
mov
cmp
mov
sub
iret
and
movsb
mov
mov
inc
mov
fidivrs
inc
sub
xor
daa
and
ds
xor
lds
aaa
inc
inc
inc
int
les
shll
es
mov
mov
and
iret
lds
inc
dec
dec
mov
inc
push
ss
inc
lds
ss
int
movsb
mov
cmp
fisubs
inc
aaa
mov
movsl
and
aaa
inc
mov
int
roll
cmp
and
cmp
les
mov
and
enter
mov
inc
inc
mov
mov
cmp
es
mov
mov
and
and
rcl
es
mov
add
inc
or
add
jbe
xor
add
jmp
push
push
call
mov
shrd
shr
mov
mov
mov
mov
sub
imul
xor
mov
mov
adc
mov
mov
xor
xor
sub
imul
xor
cmpl
jb
adc
jmp
push
call
or
mov
mov
shl
mov
shrd
adc
xor
movzwl
or
shr
mov
mov
sbb
xor
and
or
mov
cmpl
jb
adc
jmp
pushl
pushl
push
pushl
push
call
mov
mov
mov
jmp
aad
mov
mov
add
shl
pop
test
jmp
cmp
xor
leave
int
rorb
ret
mov
mov
mov
cmp
movsl
mov
xor
mov
ss
es
shlb
mov
mov
and
fisubs
cmp
dec
and
mov
dec
mov
inc
daa
mov
mov
mov
dec
xor
mov
dec
mov
mov
inc
inc
mov
mov
mov
movsb
fidivrs
xor
mov
cmp
mov
sub
mov
es
into
inc
mov
inc
mov
mov
mov
cmp
sarl
mov
mov
mov
dec
and
sub
test
inc
movsl
mov
dec
ror
sarb
mov
xor
ret
and
mov
leave
xor
dec
inc
inc
mov
sub
and
lds
push
inc
mov
dec
inc
ss
xor
test
dec
sarl
xor
rorl
ss
xor
sarl
mov
mov
xor
xor
leave
mov
cmp
ficoms
and
daa
mov
ss
inc
and
mov
xor
mov
ds
mov
xor
and
inc
mov
aas
fimuls
xor
dec
aas
xor
iret
dec
cmp
iret
es
into
ror
shlb
lds
dec
inc
mov
leave
mov
cmp
and
lret
sub
es
cmp
ret
leave
mov
dec
cmp
into
push
shlb
inc
add
add
mov
mov
mov
mov
sub
mov
sub
shl
cmpl
ja
and
negl
jmp
push
pushl
push
call
xor
shld
shl
mov
mov
subl
mov
mov
xor
xor
movl
movl
movl
movl
mov
cmp
movl
jmp
mov
insb
mov
hlt
pop
xor
imul
mov
ds
xor
and
ror
daa
and
mov
aaa
and
ds
shlb
lds
mov
movsb
cmp
aas
xor
lret
les
cmpsl
and
into
iret
mov
ss
aaa
mov
xor
dec
mov
movsb
lret
sub
mov
mov
int
es
mov
mov
sub
mov
fmulp
ret
shll
mov
mov
xor
dec
cmp
les
sarl
xor
dec
cmp
inc
cmp
mov
mov
mov
cmp
and
mov
inc
inc
les
cmpsl
cmp
enter
mov
dec
sub
inc
cmp
xor
push
mov
int
mov
shlb
dec
rol
iret
xor
cmpsl
dec
daa
mov
cmp
leave
lret
les
and
ds
iret
shlb
mov
dec
dec
leave
cmp
int
ror
xor
iret
and
and
mov
push
daa
inc
leave
mov
lds
mov
mov
aaa
and
xor
movsl
aaa
fidivrs
mov
aas
into
and
lret
inc
lds
daa
and
ret
and
fisubs
mov
cmp
mov
and
inc
mov
inc
ret
movsl
xor
and
and
enter
les
inc
mov
inc
daa
mov
dec
and
xor
daa
mov
mov
mov
leave
les
lret
and
enter
es
test
dec
xor
xor
ret
leave
test
inc
and
add
cmp
je
cmpl
jle
not
jmp
pushl
call
mov
mov
mov
xor
shld
shl
mov
mov
addl
xor
xor
mov
movl
cmp
jne
movl
cmp
movl
je
addl
mov
cmpl
jg
jmp
pushl
call
mov
push
pop
xor
jmp
adc
cld
in
data16
in
add
and
ljmp
mov
inc
xor
aaa
mov
xor
es
mov
push
dec
and
sub
les
test
aaa
movsl
dec
test
mov
mov
enter
leave
dec
mov
fimuls
and
mov
mov
and
enter
lret
xor
mov
movsl
cmp
fidivs
sarb
dec
inc
inc
and
cmpsl
ror
inc
mov
mov
mov
cmp
leave
mov
mov
es
enter
dec
inc
mov
and
inc
mov
mov
into
int
inc
cmpsl
mov
movsl
mov
shlb
movsl
xor
enter
mov
and
xor
mov
aas
mov
mov
mov
lret
test
shlb
mov
cmp
cmp
mov
mov
xor
xor
daa
xor
movsl
ss
roll
push
ret
xor
xor
and
les
ret
mov
xor
xor
fidivs
lret
xor
mov
daa
ss
mov
mov
cmp
movsb
mov
ret
aaa
daa
mov
mov
mov
enter
mov
test
and
and
and
mov
enter
mov
cmp
iret
mov
and
mov
cmp
push
xor
les
enter
int
int
and
shlb
inc
and
mov
push
aas
iret
inc
mov
xor
mov
mov
mov
and
and
shlb
iret
rorb
ret
ret
ss
leave
mov
sub
inc
mov
ds
inc
inc
iret
xor
mov
dec
and
loope
jmp
dec
adc
mov
imul
jg
orl
pop
xchg
imul
mov
mov
and
inc
into
cmpsl
mov
dec
mov
inc
inc
shlb
mov
dec
dec
inc
mov
movsl
test
and
cmp
mov
iret
aaa
sarl
inc
aaa
inc
cmpsl
and
mov
xor
leave
xor
xor
iret
movsb
xor
mov
mov
cmp
lds
aaa
sub
test
fimuls
aas
ss
mov
mov
les
mov
ds
xor
mov
int
mov
mov
inc
rol
ss
test
mov
dec
dec
mov
cmp
movl
and
xor
dec
inc
ss
mov
and
dec
fidivrs
movsl
mov
and
dec
mov
shll
shlb
ss
aas
inc
ss
inc
cmp
lds
ret
and
shll
mov
iret
and
ss
mov
ds
mov
push
mov
inc
sarb
enter
lds
and
aas
cmp
test
aas
mov
test
and
xor
xor
lret
mov
shlb
inc
aaa
into
mov
and
inc
xor
mov
mov
int
leave
inc
mov
lret
inc
aas
dec
leave
ret
into
aas
xor
mov
lret
dec
les
inc
and
mov
inc
mov
dec
mov
mov
mov
movsl
and
rolb
xor
dec
mov
movsb
and
xor
movsl
aas
and
les
mov
mov
enter
mov
inc
ret
dec
cmp
shlb
dec
mov
mov
dec
daa
sub
test
cmp
inc
enter
ds
inc
push
mov
xor
sbbl
shr
sbbl
or
cmpl
jb
and
jmp
push
pushl
push
call
mov
mov
mov
mov
mov
mov
cmpl
jb
adc
jmp
pushl
call
push
pop
sub
jmp
int
daa
and
mov
mov
mov
or
jmp
shrb
xor
mov
shlb
mov
mov
cmp
dec
mov
dec
mov
mov
lds
mov
mov
xor
es
fidivrs
and
iret
xor
ss
mov
mov
movsl
mov
dec
mov
mov
les
mov
mov
mov
cmp
rol
enter
sarb
mov
push
mov
mov
aas
and
xor
enter
cmp
inc
ss
mov
es
fidivs
mov
and
rorb
lret
mov
roll
movsl
xor
xor
mov
mov
dec
aas
mov
inc
inc
leave
mov
xor
aas
les
and
xor
daa
movsl
sub
push
inc
test
mov
push
ror
test
and
into
mov
dec
mov
and
mov
ret
dec
mov
inc
mov
iret
aas
mov
enter
shlb
mov
movsb
xor
dec
lds
test
mov
inc
mov
fidivs
and
mov
xor
dec
xor
test
xor
ror
and
movsb
ss
movsb
faddp
dec
inc
les
ds
aas
test
sub
cmp
inc
cmp
les
es
sarb
mov
test
push
ds
movsl
test
enter
movsl
xor
movsl
xor
dec
and
mov
xor
sarb
aas
sub
dec
mov
inc
ret
cmp
dec
ret
mov
push
mov
mov
and
and
mov
daa
and
inc
inc
aas
cmpsl
aas
mov
and
inc
rol
cmp
xor
fidivs
mov
ret
and
xor
and
test
inc
xor
dec
les
enter
cmpl
jg
mov
add
jmp
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
pushl
pushl
call
lea
mov
mov
mov
xor
sbbl
xor
shr
addl
shl
or
mov
and
jmp
je
push
gs
dec
add
xchg
add
lods
clc
addl
jmp
into
mov
mov
lds
inc
lds
faddp
iret
mov
movsb
and
aas
ror
inc
dec
aas
xor
mov
xor
inc
int
mov
cmp
lret
mov
mov
mov
sarb
xor
and
inc
mov
cmp
enter
movsb
cmp
and
into
dec
daa
enter
cmp
inc
and
lret
dec
and
mov
sub
mov
mov
mov
mov
and
lret
mov
leave
xor
xor
dec
cmp
xor
and
into
mov
mov
sub
mov
mov
mov
int
cmp
rorl
cmpsl
movsl
dec
and
mov
push
shrl
dec
mov
shlb
xor
inc
sub
dec
ror
mov
inc
rolb
mov
faddp
and
test
inc
lret
mov
cmp
shlb
mov
and
mov
xor
mov
les
mov
enter
mov
mov
mov
iret
and
inc
rorl
inc
xor
iret
fisubs
inc
mov
xor
mov
ret
mov
dec
mov
ret
les
ds
dec
movsb
fisubs
test
lds
movsl
lds
and
iret
mov
inc
and
sub
mov
push
les
mov
dec
ret
and
sarl
push
mov
mov
and
and
fidivrs
cmp
inc
mov
cmp
mov
xor
dec
mov
daa
dec
leave
aas
aaa
daa
mov
mov
enter
mov
call
xor
mov
cmpl
jge
adc
jmp
pushl
push
call
mov
xor
xor
shr
shl
or
push
lea
subl
push
lea
addl
push
jmp
sbb
adc
pop
add
jae
es
dec
cmp
push
xor
int
enter
xor
cmp
movsl
into
cmp
ret
and
leave
mov
mov
enter
lret
cmp
ds
dec
movsl
inc
inc
inc
cmpsl
xor
int
fisubs
mov
test
rolb
aas
leave
fiadds
enter
mov
into
mov
mov
mov
and
dec
mov
xor
mov
cmp
xor
ret
iret
rolb
inc
daa
inc
inc
inc
xor
mov
xor
fidivs
dec
into
xor
mov
mov
xor
cmpsl
ds
shrl
xor
mov
es
mov
mov
dec
mov
xor
mov
xor
cmp
movsb
dec
into
fidivrs
xor
inc
enter
cmpsl
ret
mov
mov
and
cmp
shlb
and
ds
into
mov
aaa
mov
cmp
into
sub
cmpsl
mov
es
lret
movsl
dec
iret
aaa
ror
and
enter
leave
rolb
mov
cmp
test
xor
and
dec
aas
mov
cmp
push
dec
cmp
cmp
movsl
mov
mov
mov
mov
mov
xor
mov
dec
dec
sarb
dec
daa
test
aaa
xor
dec
inc
mov
mov
into
ret
push
mov
iret
inc
inc
cmp
xor
ret
lret
mov
mov
mov
inc
inc
iret
cmpsl
and
dec
int
xor
les
test
mov
cmp
aaa
cmpsl
xor
inc
and
mov
shlb
cmpl
jl
dec
mov
mov
sub
imul
jmp
push
pushl
push
push
push
pushl
call
mov
mov
and
xor
cmpl
ja
movzwl
add
mov
xorl
jmp
pushl
push
push
call
xor
shr
jmp
or
cwtl
test
push
mov
aad
pop
mov
imul
mov
dec
dec
mov
mov
cmp
les
mov
daa
lret
cmpsl
movsb
xor
int
mov
mov
movsl
movsl
cmp
dec
sarb
movsb
mov
and
and
inc
xor
fidivs
ret
aaa
mov
and
inc
xor
leave
mov
and
and
cmp
mov
cmp
xor
shrl
rolb
mov
mov
les
dec
into
cmp
aas
mov
and
and
inc
ror
lret
aas
inc
mov
cmp
mov
mov
mov
xor
ss
xor
movsl
mov
xor
push
mov
mov
mov
mov
cmpsl
into
mov
cmpsl
mov
dec
inc
aas
inc
inc
mov
mov
enter
ds
inc
sub
ret
inc
mov
leave
and
cmp
cmp
mov
into
sub
sarb
dec
cmp
mov
mov
movl
and
xor
mov
mov
movsl
and
ret
mov
rclb
movl
xor
mov
cmp
iret
mov
ss
sub
cmp
inc
les
mov
movsb
shlb
xor
sub
movsb
inc
aas
aaa
mov
and
mov
xor
inc
mov
sub
mov
and
sub
les
dec
inc
test
mov
dec
inc
mov
aaa
inc
mov
ret
dec
test
mov
leave
shlb
inc
movsb
lds
shlb
inc
mov
test
leave
and
es
lds
push
xor
or
adc
push
lea
or
push
mov
mov
adc
shrd
sub
shr
mov
mov
sbbl
xor
xor
xorl
or
lea
jmp
shlb
mov
imul
imull
sub
jmp
inc
cmpsl
inc
ss
sub
mov
push
and
dec
enter
fisubs
xor
ss
dec
mov
iret
inc
xor
inc
leave
fidivrs
dec
mov
test
cmp
mov
cmp
mov
mov
mov
cmpsl
xor
movsb
daa
movsl
mov
mov
and
les
mov
rolb
shlb
es
shlb
cmp
and
rol
shll
xor
inc
leave
inc
mov
push
mov
mov
movsl
mov
shlb
mov
rol
mov
sub
sub
iret
and
cmp
cmp
mov
mov
shlb
inc
mov
xor
aaa
and
cmp
xor
mov
mov
leave
mov
mov
lret
and
xor
mov
and
les
roll
dec
sub
dec
cmpsl
cmp
mov
push
dec
enter
enter
cmp
dec
mov
into
lds
movsl
cmp
dec
xor
xor
movsb
xor
mov
dec
iret
mov
xor
dec
dec
aas
and
ds
mov
mov
xor
cmp
ret
xor
les
and
mov
xor
inc
movsl
aaa
mov
roll
mov
xor
into
dec
mov
movsb
xor
ss
mov
mov
xor
mov
xor
mov
xor
and
and
int
mov
push
mov
lds
inc
into
movsl
mov
dec
mov
mov
mov
mov
aaa
and
ret
push
test
mov
shl
call
cmpl
jle
jmp
push
pushl
call
jmp
test
mov
mov
push
push
sbb
mov
imul
dec
xor
cmp
mov
mov
cmp
cmpsl
push
mov
ret
and
xor
aas
lret
ret
mov
aaa
cmp
mov
mov
xor
xor
mov
cmp
and
inc
and
mov
aaa
mov
mov
and
iret
mov
mov
aaa
dec
shlb
mov
and
mov
mov
cmp
mov
mov
mov
xor
mov
daa
mov
dec
rolb
cmp
mov
and
ss
xor
dec
mov
and
xor
leave
mov
mov
shlb
xor
mov
leave
cmp
dec
es
mov
ss
ss
dec
leave
and
lret
inc
daa
mov
leave
xor
dec
xor
mov
mov
xor
mov
xor
mov
inc
lret
lds
movsb
movsb
dec
shrl
cmpsl
fisubs
daa
and
into
shlb
and
and
mov
dec
inc
mov
cmp
mov
mov
dec
cmp
mov
cmp
cmp
dec
xor
dec
push
mov
mov
dec
inc
mov
push
mov
dec
mov
mov
mov
inc
mov
and
rol
cmpsl
and
dec
ss
movsb
sub
and
inc
inc
int
into
inc
dec
into
mov
and
sub
and
dec
and
fiadds
mov
cmp
movsl
dec
movsb
ds
mov
cmp
enter
mov
mov
xor
mov
xor
inc
push
mov
and
mov
dec
enter
call
xor
shr
shl
or
push
cmpl
jb
jmp
push
call
lea
push
mov
mov
shrd
shr
mov
mov
subl
xor
addl
xor
or
lea
incl
push
sbbl
shl
movl
call
or
mov
mov
xor
or
add
xor
sbbl
xor
or
shl
and
shr
dec
or
jmp
adc
imul
dec
and
jo
jae
sub
ljmp
mov
inc
mov
sub
iret
rorb
mov
inc
mov
mov
mov
int
mov
mov
mov
inc
mov
aas
dec
shlb
int
and
daa
inc
inc
sub
inc
mov
mov
and
rol
mov
mov
movsl
ret
iret
leave
mov
mov
int
shlb
mov
mov
les
mov
dec
xor
sub
dec
inc
and
mov
leave
and
sub
leave
inc
mov
inc
inc
rcl
push
mov
mov
movsb
mov
ret
cmp
dec
and
movsl
shll
movsb
lds
leave
faddp
ret
mov
mov
and
mov
inc
push
inc
mov
cmpsl
ds
fidivs
inc
mov
aaa
shlb
lret
test
and
cmp
ror
es
and
aas
and
cmp
mov
ds
ds
int
mov
inc
mov
fisubrs
fidivrs
sarl
xor
mov
xor
mov
mov
mov
fidivrs
and
mov
mov
push
inc
iret
aaa
sub
xor
daa
mov
sub
fidivs
xor
xor
mov
test
shll
aaa
int
aas
and
dec
and
and
mov
inc
push
dec
mov
mov
into
movsb
mov
inc
dec
aaa
inc
mov
sarb
ret
mov
ret
mov
rorl
sub
mov
inc
mov
rcl
mov
push
lea
push
cmpl
ja
jmp
push
push
call
mov
jmp
fwait
repz
and
out
push
js
das
imul
daa
dec
leave
rorb
mov
cmpsl
inc
cmpsl
iret
and
inc
enter
inc
mov
shll
mov
rol
cmpsl
aaa
mov
mov
and
mov
aaa
fiadds
dec
movl
aas
mov
push
inc
and
mov
mov
and
xor
cmp
mov
and
aas
ds
mov
into
xor
and
mov
inc
dec
dec
and
ret
sub
sarb
dec
inc
sub
movsl
daa
sub
mov
xor
mov
inc
mov
sub
mov
aas
dec
leave
int
dec
dec
mov
ds
fisubs
ds
mov
inc
and
and
daa
daa
cmp
mov
ret
mov
cmp
mov
enter
dec
xor
movsl
mov
mov
and
iret
and
inc
xor
mov
shrl
mov
and
dec
mov
mov
mov
movsl
and
push
lds
xor
dec
inc
xor
les
sarb
dec
inc
and
mov
cmpsl
and
aaa
lret
and
aas
xor
enter
xor
mov
mov
mov
inc
inc
cmp
mov
inc
inc
dec
sarb
rol
mov
dec
cmpsl
xor
movsb
sarb
dec
ret
leave
cmp
xor
fimuls
and
xor
inc
mov
mov
cmp
ret
into
inc
test
mov
mov
mov
les
cmp
and
leave
dec
inc
movsl
cmp
leave
xor
daa
xor
les
mov
dec
mov
mov
sub
mov
and
mov
adc
lods
enter
add
adc
shlb
and
or
mov
mov
sub
add
shl
movzbl
or
mov
mov
adcl
shrd
adcl
shr
xor
mov
sbbl
mov
adcl
xor
adcl
xor
decl
or
add
subl
jmp
adc
lods
adc
xchg
jnp
jns
cs
nop
xor
ljmp
mov
ret
dec
fidivs
xor
mov
sarl
dec
mov
mov
les
mov
mov
inc
inc
and
into
fidivrs
mov
movsb
faddp
and
dec
enter
leave
roll
roll
and
xor
daa
and
inc
leave
dec
xor
cmp
int
mov
mov
int
mov
shll
lret
lds
inc
test
mov
mov
ss
fidivrs
iret
test
shll
mov
inc
xor
mov
inc
inc
les
sarl
mov
cmp
mov
int
mov
dec
aas
movsl
enter
sub
sub
and
mov
lds
xor
movsl
cmpsl
xor
dec
mov
dec
and
xor
mov
fisubs
xor
mov
shll
and
inc
ss
shlb
dec
mov
shll
inc
enter
mov
mov
int
ret
movsl
xor
daa
mov
dec
sub
inc
inc
mov
xor
mov
fidivrs
shlb
inc
int
test
mov
mov
xor
shll
dec
mov
dec
push
inc
mov
iret
xor
mov
mov
xor
inc
int
dec
dec
and
mov
enter
dec
inc
dec
and
rcr
mov
and
mov
mov
and
leave
inc
into
daa
daa
and
dec
inc
fidivrs
mov
leave
movsb
xor
shll
lds
int
shlb
mov
mov
mov
xor
mov
and
aaa
and
inc
push
mov
test
call
loop
xorl
call
mov
or
mov
xor
mov
xor
xor
sub
and
shl
xor
xorl
shr
or
or
push
mov
mov
sub
or
lea
movl
push
cmpl
jbe
jmp
pushl
pushl
call
mov
mov
jmp
lret
xor
int3
cmpsb
ficoml
pop
lea
jmp
lret
mov
into
iret
xor
mov
into
test
lret
mov
int
aas
dec
cmpsl
inc
cmp
movsl
shlb
aas
ret
lds
xor
mov
movsl
into
and
int
daa
shll
inc
mov
movsl
dec
sub
into
mov
and
and
iret
xor
inc
and
mov
dec
mov
mov
ret
xor
movsl
aas
shll
cmp
test
mov
xor
inc
ret
inc
xor
mov
mov
inc
aaa
fisubs
xor
mov
mov
inc
cmp
lds
cmpsl
cmp
mov
cmp
dec
fimuls
enter
and
xor
mov
inc
sarl
mov
mov
xor
es
inc
xor
int
enter
mov
mov
and
dec
lds
mov
sub
mov
mov
inc
mov
inc
int
mov
mov
mov
inc
les
rcl
ss
mov
inc
xor
xor
shlb
aaa
ret
mov
daa
enter
cmp
movsb
mov
daa
and
rolb
mov
aas
cmp
ss
iret
cmp
leave
mov
ret
mov
inc
dec
sub
inc
mov
movsb
mov
ss
leave
cmpsl
mov
aaa
and
xor
movsb
daa
es
cmp
xor
mov
into
mov
cmp
mov
and
lds
inc
rol
dec
xor
mov
xor
movsl
dec
and
enter
cmp
inc
xor
dec
mov
daa
mov
mov
movsb
shlb
ss
movsb
cmpsl
mov
lods
enter
add
adc
rol
add
mov
loope
mov
cmpl
ja
xor
mov
adc
mov
jmp
push
push
call
xor
or
mov
shrd
shr
mov
mov
subl
jmp
xchg
sbb
into
int3
fs
cmp
add
js
cs
and
mov
inc
aaa
cmp
dec
mov
int
sub
movsb
mov
dec
xor
and
cmpsl
shll
mov
and
and
and
push
dec
fidivrs
aas
rorb
ds
dec
and
xor
sub
es
shll
rorb
inc
mov
roll
mov
mov
mov
mov
cmp
and
xor
push
xor
mov
and
sarb
leave
dec
ret
into
mov
les
sub
mov
aas
ret
cmp
lret
dec
enter
and
inc
mov
mov
dec
daa
lret
dec
mov
mov
mov
aas
mov
mov
cmp
and
int
ret
inc
mov
mov
and
aaa
mov
and
mov
inc
iret
into
and
mov
push
cmp
daa
test
mov
movsl
shll
daa
movsl
movsl
dec
mov
lds
sub
push
xor
dec
int
rol
and
iret
aas
mov
iret
into
inc
mov
and
push
mov
inc
les
mov
into
ds
int
es
mov
es
mov
inc
xor
mov
mov
mov
cmp
cmp
mov
and
mov
ds
inc
and
mov
push
mov
mov
push
and
rolb
shll
mov
mov
int
ret
xor
inc
cmp
xor
xor
mov
mov
dec
mov
int
enter
dec
roll
iret
dec
dec
int
xor
into
adcl
xor
or
subl
shl
xor
add
adc
add
mov
subl
mov
shrd
shr
cmpl
jl
jmp
pushl
call
xor
mov
mov
xor
jmp
aad
inc
in
cmpsl
jl
cmpsb
adc
jae
adc
ljmp
and
dec
int
aas
test
lds
cmp
cmp
mov
lret
cmp
aas
xor
mov
dec
mov
shll
lret
and
test
les
lret
mov
enter
movsb
and
mov
push
dec
mov
daa
dec
inc
mov
mov
cmp
dec
mov
mov
mov
les
inc
and
mov
xor
inc
xor
mov
into
mov
xor
dec
ss
mov
push
mov
cmpsl
cmp
mov
xor
dec
cmp
sub
aas
dec
mov
cmp
into
xor
cmp
mov
mov
and
ror
mov
and
ret
inc
es
enter
iret
mov
dec
and
dec
enter
mov
dec
dec
movsb
mov
fimuls
mov
cmp
enter
mov
int
enter
and
mov
cmpsl
inc
and
inc
inc
mov
xor
test
mov
cmp
dec
dec
sub
dec
es
movsl
ret
mov
shll
cmp
mov
inc
leave
daa
ds
inc
cmp
and
mov
mov
mov
inc
mov
aaa
mov
test
and
mov
mov
movsb
inc
iret
mov
movsl
leave
rorb
mov
dec
fidivrs
daa
and
into
inc
dec
mov
les
lds
ror
fiadds
mov
mov
int
aaa
mov
inc
sub
xor
ss
fisubrs
and
push
into
mov
dec
cmp
inc
or
add
lea
push
orl
shl
orl
call
mov
mov
xor
add
sub
xor
xor
cmpl
jg
add
jmp
push
pushl
push
call
jmp
mov
loope
push
add
add
adc
jmp
xor
mov
mov
cmp
sarb
dec
and
iret
int
xor
and
mov
mov
mov
lret
daa
cmp
xor
mov
enter
leave
xor
mov
inc
mov
dec
dec
inc
cmpsl
inc
and
mov
dec
int
aas
inc
mov
and
aas
inc
aaa
ds
inc
dec
and
aas
cmp
shlb
mov
iret
mov
mov
mov
enter
push
movsb
and
mov
push
xor
inc
cmp
cmp
enter
inc
sub
leave
into
inc
iret
mov
int
mov
mov
dec
mov
and
mov
xor
mov
and
mov
mov
iret
and
inc
rorl
mov
cmp
enter
xor
lds
xor
xor
mov
dec
inc
mov
es
dec
dec
xor
aaa
leave
inc
mov
les
mov
rol
and
and
xor
mov
aas
mov
mov
lret
shlb
mov
and
dec
daa
xor
xor
mov
fidivs
xor
cmp
shll
dec
dec
mov
push
les
xor
and
leave
mov
and
mov
and
inc
mov
mov
and
movsl
dec
mov
cmp
mov
enter
mov
fisubrs
aas
and
dec
test
and
and
daa
ds
mov
inc
mov
inc
ret
lret
mov
aaa
inc
movsb
leave
cmpsl
sarb
and
and
and
mov
mov
and
mov
fidivs
rol
call
or
mov
lea
push
or
mov
cmpl
jb
subl
jmp
push
call
mov
shrd
shr
mov
mov
xor
xor
or
mov
and
jmp
mov
ja
call
inc
mov
jno
imul
dec
inc
mov
and
test
test
inc
and
mov
movsl
dec
and
mov
mov
and
mov
cmp
ror
mov
and
mov
shlb
into
and
xor
iret
xor
mov
inc
mov
inc
mov
mov
shlb
dec
cmp
cmp
aas
xor
mov
es
inc
mov
inc
dec
xor
movsb
cmpsl
iret
and
rcl
dec
cmp
inc
ror
dec
mov
xor
fimuls
cmpsl
inc
cmp
rorb
ret
rol
shlb
and
ret
mov
enter
movsb
shll
inc
cmp
xor
lret
inc
mov
lret
iret
inc
mov
int
inc
cmp
mov
ret
mov
mov
xor
xor
ss
and
mov
enter
aaa
mov
mov
les
les
enter
and
sarb
int
cmp
rol
mov
ret
mov
iret
mov
inc
inc
mov
iret
mov
cmp
es
mov
test
fidivs
leave
shlb
fisubs
inc
xor
mov
inc
mov
mov
cmp
and
mov
fidivs
cmp
lret
leave
lds
mov
fmulp
mov
movsl
mov
movsb
and
and
mov
and
mov
push
inc
cmpsl
mov
enter
and
aaa
cmpsl
les
mov
and
xor
dec
push
mov
xor
ror
movsb
shlb
inc
mov
inc
ds
push
enter
dec
aas
and
xor
or
adc
push
mov
cmpl
jb
jmp
pushl
pushl
call
mov
push
pushl
shl
call
jmp
out
cmp
in
lods
mov
js
dec
mov
jmp
aaa
mov
inc
lds
int
inc
rolb
and
ss
mov
daa
shrl
mov
mov
test
mov
mov
mov
into
aas
int
cmpsl
and
cmp
cmp
dec
les
and
mov
xor
xor
mov
push
cmp
and
fidivs
movsl
inc
dec
ror
cmp
xor
shll
dec
dec
les
xor
inc
int
cmpsl
mov
aaa
mov
test
cmp
mov
mov
xor
cmp
and
mov
dec
inc
les
xor
mov
leave
mov
mov
iret
xor
enter
xor
xor
aaa
mov
mov
mov
test
mov
dec
iret
mov
ds
mov
movsl
dec
and
ret
mov
lds
mov
mov
inc
int
xor
lret
sarb
int
aas
sarb
lret
mov
xor
mov
inc
es
mov
mov
mov
cmpsl
dec
enter
inc
iret
lds
aas
enter
push
inc
daa
cmp
dec
push
daa
les
fimuls
mov
cmp
dec
mov
es
dec
rol
sub
and
mov
mov
cmpsl
shll
mov
movsb
cmp
xor
mov
aas
dec
dec
inc
inc
mov
movsb
xor
mov
aaa
shll
mov
movsl
iret
enter
and
lds
lret
mov
dec
movsl
and
dec
rolb
mov
les
iret
lds
mov
mov
xor
inc
inc
rorb
mov
lea
push
xor
mov
xor
mov
cmpl
ja
xor
jmp
pushl
call
shrd
shr
mov
mov
xor
xor
movl
or
notl
push
cmpl
jg
sbb
jmp
pushl
push
pushl
call
jmp
adc
insb
mov
mov
popa
hlt
ja
imul
cmp
ss
mov
xor
inc
into
ds
inc
and
dec
dec
aas
aaa
ds
mov
mov
ds
and
movsb
ss
leave
mov
mov
iret
rol
push
cmpsl
xor
fisubs
sub
iret
cmp
mov
mov
mov
dec
aas
and
and
mov
mov
sub
xor
mov
leave
es
shll
and
mov
mov
sarb
mov
fimuls
and
push
lret
mov
cmp
ret
and
into
mov
into
mov
xor
lret
cmpsl
enter
movsb
mov
iret
inc
movsb
movsl
ret
mov
mov
xor
mov
movsb
xor
shlb
mov
inc
inc
shlb
cmp
push
mov
fidivs
cmpsl
lret
inc
mov
xor
mov
inc
mov
xor
xor
mov
xor
daa
inc
iret
cmp
mov
dec
fisubs
movsl
mov
inc
and
dec
inc
mov
dec
aaa
dec
push
inc
ss
cmp
mov
cmp
ret
xor
cmp
mov
mov
daa
mov
mov
mov
and
int
movsb
and
mov
inc
mov
dec
dec
aas
inc
mov
and
dec
inc
mov
sub
xor
mov
dec
dec
mov
ret
inc
enter
mov
mov
cmp
ret
mov
cmp
cmp
mov
dec
xor
mov
inc
xor
enter
dec
shlb
inc
lret
inc
test
dec
mov
sub
movsb
mov
int
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
movl
mov
movl
mov
movl
mov
xor
shld
shl
xor
mov
mov
mov
xor
inc
xor
mov
mov
jmp
mov
cmpsb
subb
cltd
mov
repz
jmp
test
inc
inc
and
mov
mov
dec
mov
mov
movsl
mov
mov
and
les
cmp
mov
les
and
dec
cmpsl
mov
inc
movsb
mov
inc
test
xor
ret
and
mov
ss
cmp
and
ror
xor
leave
inc
aaa
leave
fisubrs
into
xor
and
cmp
lret
mov
daa
xor
lret
mov
and
mov
xor
and
mov
dec
mov
mov
es
inc
and
daa
dec
into
aas
dec
mov
ret
and
daa
mov
enter
es
mov
and
mov
int
and
xor
cmp
ss
lret
xor
mov
xor
cmp
mov
mov
dec
mov
daa
mov
dec
cmp
cmp
sarb
mov
cmp
mov
movsl
inc
es
mov
dec
aaa
mov
movsl
dec
mov
int
mov
rol
cmpsl
movsb
iret
lret
mov
xor
lret
xor
mov
faddp
enter
mov
lret
mov
int
push
mov
cmp
lds
movsl
aas
mov
lret
rclb
cmp
iret
and
mov
mov
and
ds
dec
iret
and
fimuls
movsl
mov
mov
mov
cmpsl
lret
aaa
aas
xor
xor
ret
mov
lret
mov
les
mov
ret
mov
xor
test
inc
dec
iret
inc
mov
mov
dec
mov
cmp
and
into
push
mov
mov
inc
xor
mov
mov
cmp
mov
iret
cmp
into
mov
and
inc
in
movzwl
mov
cltd
jmp
add
fdivrl
mov
insb
cld
iret
mov
imul
adc
jmp
and
aaa
cmp
xor
inc
and
mov
inc
mov
fidivs
lret
xor
roll
mov
cmp
mov
shlb
inc
and
inc
iret
mov
mov
enter
daa
leave
mov
mov
cmp
mov
mov
inc
inc
test
mov
es
cmpsl
enter
shlb
mov
rol
ret
dec
dec
rclb
daa
iret
and
cmp
ds
mov
xor
ds
dec
and
mov
sarl
and
and
sarb
dec
mov
mov
test
xor
enter
les
inc
aaa
movsl
aas
xor
lret
cmp
ret
and
xor
int
dec
les
shlb
xor
ss
shll
dec
inc
inc
fidivrs
sub
dec
ss
and
dec
sub
push
cmpsl
ret
cmp
and
dec
movsl
and
mov
and
push
and
daa
mov
cmpsl
mov
mov
mov
cmp
mov
xor
cmp
mov
es
cmpsl
aas
int
mov
mov
mov
int
mov
cmp
mov
cmp
sub
cmp
mov
cmp
lret
leave
mov
mov
and
mov
inc
mov
int
mov
ret
xor
dec
sub
and
inc
enter
xor
lret
cmp
mov
inc
mov
les
mov
and
cmp
dec
dec
mov
aaa
daa
and
inc
ret
aaa
sub
dec
push
and
and
xchg
incb
add
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
shrd
shr
jmp
scas
sub
fmuls
cli
add
cs
jbe
imul
shrb
aas
mov
ds
and
ss
mov
xor
es
inc
fidivrs
cmp
leave
mov
ds
dec
xor
and
and
movsb
and
and
cmp
leave
and
ret
mov
lds
mov
shll
lret
cmp
aaa
xor
mov
xor
dec
dec
movsl
dec
cmpsl
dec
xor
iret
cmp
cmpsl
and
dec
and
lds
inc
xor
int
into
ret
aas
xor
xor
fisubrs
and
aaa
dec
mov
fisubs
mov
xor
dec
and
mov
xor
aaa
dec
mov
dec
shlb
rorl
cmp
push
test
dec
inc
test
cmp
cmp
leave
rcr
mov
dec
xor
and
leave
cmp
sub
push
mov
push
dec
ss
ss
iret
les
mov
inc
mov
mov
cmp
mov
iret
leave
leave
mov
mov
rorl
xor
and
mov
inc
aaa
aas
dec
movsb
cmp
mov
and
dec
ret
inc
test
rolb
and
dec
cmpsl
ret
lds
sarb
inc
xor
inc
sub
xor
les
and
mov
les
and
mov
ss
sub
lret
push
mov
rorl
mov
movsl
inc
xor
lret
mov
inc
aaa
and
mov
mov
mov
cmp
ret
movsb
dec
mov
dec
and
ret
les
aas
les
test
inc
mov
mov
push
mov
shlb
or
shl
mov
jmp
scas
xchg
and
or
js
cld
sub
sbb
ljmp
cmp
cmp
cmp
mov
cmp
rolb
cmp
les
mov
mov
mov
dec
aas
daa
cmp
enter
les
cmp
inc
movsl
and
mov
fmulp
mov
mov
mov
aas
xor
and
into
mov
sub
mov
lret
es
leave
mov
mov
cmpsl
shll
inc
ret
xor
int
and
es
test
dec
mov
inc
mov
mov
dec
push
mov
inc
mov
int
and
movsb
xor
movsl
and
roll
leave
dec
into
cmp
ds
shlb
into
mov
inc
iret
and
mov
shlb
mov
and
mov
daa
mov
mov
leave
iret
aaa
and
mov
cmpsl
cmp
and
cmp
aaa
mov
cmpsl
movsb
mov
ret
inc
movsb
aas
push
xor
es
ror
rorl
inc
inc
dec
xor
mov
movsl
and
inc
int
into
mov
daa
mov
xor
mov
and
cmpsl
mov
mov
mov
mov
cmp
inc
enter
and
leave
aaa
leave
dec
mov
shll
xor
inc
es
fimuls
inc
and
into
enter
leave
xor
mov
mov
xor
cmp
mov
mov
lret
mov
mov
les
int
les
mov
and
xor
dec
cmp
xor
mov
mov
dec
shlb
cmp
and
dec
xor
dec
int3
mov
mov
xor
xor
shrd
mov
shll
xorl
jmp
dec
inc
jae
jae
dec
data16
jle
dec
ret
jl
imul
mov
cmp
inc
mov
xor
mov
mov
mov
daa
mov
cmp
mov
lret
inc
and
dec
xor
ret
aas
cmp
mov
enter
lret
shlb
cmp
mov
xor
dec
es
mov
mov
movsb
and
cmpsl
sub
and
daa
mov
mov
dec
xor
lret
aaa
mov
shlb
ds
and
cmp
xor
mov
cmp
vmovaps
shlb
and
aas
mov
leave
rorb
and
mov
cmpsl
xor
xor
iret
lds
mov
cmp
mov
rorb
fmulp
mov
mov
iret
ss
sub
cmp
mov
inc
int
mov
sub
fisubrs
and
dec
les
and
xor
cmp
and
mov
cmp
cmpsl
inc
ds
mov
push
mov
dec
fidivrs
mov
inc
iret
xor
inc
cmpsl
rol
mov
int
dec
mov
xor
ss
xor
rorb
ss
mov
xor
enter
xor
inc
inc
lds
iret
sarl
xor
mov
and
inc
and
inc
aaa
aas
iret
mov
mov
cmp
aas
inc
ret
mov
cmpsl
inc
mov
dec
sarl
leave
ss
dec
cmp
mov
xor
cmp
inc
and
mov
mov
aaa
ds
mov
movsb
sub
iret
es
movsb
dec
mov
mov
sub
cmp
xor
inc
sub
cmp
mov
rol
xor
and
and
and
les
xor
xor
cmp
rorl
or
xor
jmp
fs
fs
int3
adc
add
xor
pop
jns
imul
mov
int
inc
lds
movsl
xor
movsb
movsb
aas
and
mov
daa
cmp
into
dec
ret
mov
mov
daa
and
xor
iret
mov
mov
shlb
cmp
mov
ds
cmp
enter
and
dec
aaa
test
and
movsl
ds
test
dec
xor
ss
xor
and
ds
les
mov
xor
inc
and
aaa
mov
inc
inc
aaa
mov
daa
es
rolb
and
mov
push
xor
sub
es
fidivs
mov
ret
ds
ror
sub
movsl
and
mov
ret
xor
mov
mov
mov
lret
rorb
cmp
mov
rolb
mov
ds
dec
mov
ds
mov
inc
mov
dec
mov
rcl
aaa
cmp
and
ds
iret
and
xor
mov
mov
leave
dec
lret
mov
mov
cmpsl
dec
dec
and
mov
ss
cmp
inc
mov
leave
mov
dec
dec
xor
dec
enter
dec
mov
inc
test
mov
fidivs
sub
mov
and
dec
aas
ret
cmpsl
mov
enter
movsb
enter
xor
xor
inc
mov
push
cmp
aaa
mov
ret
movsl
xor
dec
cmpsl
mov
mov
dec
mov
mov
ss
mov
xor
mov
mov
cmp
lret
mov
cmp
dec
leave
and
mov
jmp
inc
pop
test
xchg
lret
neg
inc
or
sbb
ljmp
mov
fisubs
mov
mov
inc
leave
int
dec
mov
mov
inc
mov
sarl
sarb
xor
mov
aas
shlb
mov
xor
shlb
movsl
and
mov
aas
ret
mov
iret
cmpsl
into
enter
lds
lret
fidivs
shlb
ret
cmpsl
dec
ret
xor
push
rclb
xor
xor
cmpsl
cmp
and
inc
mov
dec
test
mov
cmp
mov
cmp
mov
faddp
xor
dec
enter
mov
and
enter
leave
mov
mov
dec
fisubs
iret
leave
inc
xor
mov
inc
mov
mov
mov
sub
dec
xor
mov
inc
cmp
mov
cmp
dec
push
mov
movsb
movsb
mov
faddp
xor
inc
and
xor
movsl
shlb
les
ds
mov
cmpsl
inc
and
movsl
es
ss
es
test
mov
cmp
ret
mov
mov
push
mov
xor
mov
inc
dec
iret
inc
mov
cmpsl
and
inc
test
sub
dec
xor
cmp
inc
mov
push
xor
rol
int
mov
and
movsb
aas
mov
sarb
enter
mov
push
sub
mov
shlb
leave
dec
shlb
xor
test
xor
xor
cmp
lret
inc
cmp
sarb
xor
ret
mov
and
into
int
dec
and
test
into
inc
xor
mov
xor
movsb
dec
fimuls
mov
add
jae
jmp
dec
mov
add
into
push
daa
cmpl
jmp
mov
and
xor
and
lret
dec
mov
cmpsl
xor
and
inc
mov
xor
inc
xor
push
mov
xor
dec
cmp
and
and
fidivs
aas
dec
mov
inc
mov
fisubs
mov
inc
aaa
cmp
mov
inc
ret
mov
mov
lds
into
xor
cmp
xor
mov
push
dec
aaa
cmp
mov
mov
lret
mov
inc
mov
and
mov
test
es
int
mov
leave
mov
rolb
rol
and
mov
inc
lret
mov
mov
xor
mov
test
xor
sub
mov
xor
enter
mov
aaa
movsb
dec
inc
movsb
mov
push
aaa
inc
cmpsl
xor
shlb
mov
mov
cmp
xor
cmpsl
lret
shlb
mov
mov
test
inc
movl
cmp
cmp
and
into
ret
mov
dec
mov
movsb
and
cmp
dec
mov
mov
xor
xor
cmp
shlb
test
aaa
xor
xor
mov
mov
inc
and
dec
mov
inc
es
daa
mov
rolb
cmp
inc
mov
enter
inc
enter
cmp
ret
cmp
cmp
mov
int
mov
mov
mov
ror
sarb
and
fmulp
cmpsl
mov
mov
mov
roll
shlb
mov
xor
cmpsl
dec
inc
leave
fmulp
ss
test
ret
les
mov
lret
mov
xor
mov
add
jmp
es
dec
jecxz
imul
cmp
sub
and
ljmp
mov
xor
rol
mov
mov
into
into
cmp
inc
and
sub
mov
and
dec
sub
dec
movsb
xor
int
mov
mov
and
mov
mov
dec
and
ds
mov
dec
mov
and
and
ret
cmpsl
test
mov
lds
inc
and
mov
aaa
mov
rorl
cmp
mov
mov
mov
mov
xor
cmp
mov
aas
dec
mov
inc
and
rorb
ss
cmp
and
lret
and
mov
movsb
dec
and
mov
mov
les
mov
enter
sub
sub
rolb
cmp
xor
ss
xor
movsl
mov
mov
sarb
dec
leave
mov
mov
inc
ret
mov
and
roll
xor
int
xor
inc
dec
cmp
dec
ds
dec
dec
mov
mov
sub
and
cmp
mov
mov
inc
inc
mov
shlb
inc
and
sub
test
lret
mov
mov
dec
dec
xor
mov
rolb
dec
xor
fidivs
test
and
cmp
ret
mov
and
inc
sarb
cmp
inc
cmp
into
iret
and
mov
aaa
daa
and
cmp
mov
dec
enter
cmp
and
mov
mov
ror
enter
dec
xor
daa
ds
mov
mov
xor
mov
shll
fidivrs
aaa
les
and
add
inc
out
bnd
pusha
les
pushf
insb
subb
jb
jge
imul
mov
mov
push
dec
es
and
mov
test
aas
xor
aas
cmp
dec
aaa
inc
shlb
ss
mov
dec
lret
mov
iret
int
mov
aas
inc
push
aas
ret
mov
mov
cmp
sub
mov
mov
inc
push
shll
mov
sarb
and
and
mov
les
mov
mov
mov
xor
cmp
and
mov
xor
aaa
mov
inc
sarl
ror
mov
inc
xor
mov
enter
lds
inc
lret
faddp
inc
mov
xor
and
lret
lds
cmp
cmpsl
ror
mov
cmp
inc
inc
movsl
mov
inc
lds
cmp
movsb
movsl
rol
xor
and
cmp
sub
and
into
inc
ss
inc
lds
cmp
mov
and
mov
and
inc
leave
sarl
xor
and
inc
rorb
mov
xor
inc
and
ret
mov
xor
mov
mov
dec
dec
and
xor
inc
int
inc
leave
mov
mov
es
lret
mov
enter
dec
lret
mov
dec
test
and
cmpsl
inc
mov
and
ret
mov
and
mov
lds
dec
sub
and
dec
inc
push
into
xor
mov
daa
mov
inc
aas
inc
inc
xor
les
mov
dec
mov
sub
mov
lds
xor
cmp
movsl
lds
fidivs
es
ds
mov
shlb
ss
mov
inc
inc
int
mov
les
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
jmp
pop
xchg
int3
in
int3
in
ja
sbb
sahf
js
push
imul
lret
aaa
shlb
mov
mov
test
mov
cmp
les
aas
leave
test
lret
inc
les
inc
cmp
mov
mov
xor
mov
dec
int
inc
int
aas
sub
ds
leave
sarl
xor
cmp
xor
mov
xor
dec
ss
rol
mov
lds
aas
inc
shlb
dec
iret
mov
and
xor
leave
leave
mov
and
inc
cmp
and
lret
mov
movsl
mov
iret
inc
xor
mov
mov
inc
dec
mov
inc
mov
xor
dec
mov
dec
mov
sarb
mov
mov
leave
dec
ror
mov
enter
ds
and
dec
mov
mov
daa
shlb
shll
lds
and
lret
mov
mov
xor
aas
lds
aas
inc
mov
and
xor
lret
dec
xor
and
xor
mov
aaa
mov
int
rolb
and
rol
xor
sub
mov
cmpsl
dec
lret
daa
mov
cmpsl
mov
cmp
mov
inc
cmpsl
and
mov
movsb
dec
aaa
fidivrs
mov
movsl
ss
mov
sarb
inc
mov
inc
inc
inc
inc
inc
mov
inc
xor
xor
inc
aas
inc
and
inc
xor
and
dec
into
inc
mov
mov
roll
inc
ret
and
les
and
test
dec
es
inc
and
xor
dec
mov
mov
cmp
ss
jmp
adc
xchg
sbb
mov
das
iret
or
ljmp
and
mov
es
xor
inc
int
shlb
dec
mov
mov
mov
sub
dec
and
mov
int
inc
dec
dec
xor
dec
cmp
ss
lds
and
les
mov
mov
les
cmpsl
leave
mov
sub
es
test
ret
inc
lds
rorb
mov
inc
movsb
inc
ss
movsl
inc
mov
dec
leave
mov
shlb
ss
mov
dec
dec
shlb
mov
enter
xor
dec
mov
sub
mov
xor
leave
dec
xor
dec
mov
aas
inc
cmp
mov
mov
dec
es
iret
cmp
mov
xor
shll
inc
dec
inc
fmulp
and
mov
mov
ss
dec
mov
and
roll
daa
into
xor
inc
inc
leave
test
inc
dec
mov
inc
sarb
inc
and
mov
inc
mov
test
into
xor
aaa
mov
and
fmulp
movl
dec
ret
mov
rol
mov
lds
xor
ds
leave
into
xor
dec
mov
iret
and
xor
daa
rorb
mov
mov
mov
inc
mov
leave
int
dec
enter
and
aas
mov
ret
ret
sub
inc
mov
push
xor
inc
mov
inc
and
and
int
dec
mov
mov
dec
lret
movsb
and
mov
cmp
and
inc
mov
test
shll
cmp
dec
iret
int
inc
mov
int
movzbl
idiv
jmp
mov
js
test
outsb
jae
es
fs
jmp
sub
xor
enter
mov
mov
enter
cmp
sarl
inc
test
cmp
mov
dec
and
test
inc
sub
aas
mov
mov
mov
mov
and
enter
mov
dec
lret
mov
and
xor
mov
and
and
mov
aaa
shll
movsl
and
aaa
dec
xor
inc
sarb
mov
sub
cmp
inc
daa
inc
into
dec
fisubs
les
mov
ds
test
mov
and
movsl
push
cmp
cmp
dec
lds
cmp
enter
int
xor
test
fisubs
movsl
cmp
mov
mov
inc
xor
aaa
dec
inc
aaa
aas
es
movsl
cmp
inc
ret
lret
and
xor
faddp
mov
and
lds
cmp
xor
cmp
mov
xor
inc
mov
and
and
and
inc
xor
mov
test
cmp
and
fmulp
inc
cmp
iret
shlb
les
fidivs
and
mov
sarl
inc
rol
xor
xor
and
es
ret
inc
daa
movsl
sub
push
es
inc
cmp
mov
xor
push
es
aas
mov
movsb
mov
mov
and
sub
aaa
xor
dec
mov
shlb
movsl
ds
es
mov
aaa
lds
mov
mov
mov
dec
sub
movsb
and
dec
test
mov
mov
mov
sarb
and
inc
xor
movsl
xor
and
icebp
and
inc
stc
mov
mov
mov
xor
sub
mov
movzbl
movzbl
jmp
lahf
inc
sbb
jle
cmpl
add
ljmp
dec
cmp
dec
mov
int
mov
test
es
push
enter
mov
and
iret
cmp
inc
cmpsl
mov
sub
mov
ds
xor
fiadds
inc
inc
inc
mov
and
mov
and
and
mov
inc
xor
and
cmp
xor
mov
mov
ret
lret
mov
and
mov
mov
cmp
and
mov
enter
movsl
aas
xor
mov
into
inc
dec
xor
mov
leave
shll
cmpsl
lds
int
mov
dec
ror
aaa
and
inc
and
aas
mov
and
and
dec
test
and
mov
cmp
ss
ret
mov
mov
les
push
and
int
mov
ss
dec
xor
aas
aas
iret
mov
aas
dec
inc
cmp
leave
inc
inc
sub
les
xor
iret
and
cmpsl
les
shlb
ret
ret
mov
ds
test
dec
mov
xor
int
dec
dec
mov
mov
and
xor
mov
aaa
mov
aaa
cmpsl
mov
sub
shll
dec
rorl
cmp
mov
mov
inc
and
xor
inc
shll
mov
and
mov
dec
cmp
enter
dec
dec
xor
sarb
mov
iret
ret
shlb
mov
and
movsl
ret
cmp
sub
and
aaa
shrb
leave
aaa
ror
and
mov
inc
inc
mov
dec
int
mov
stc
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
jmp
stos
jb
xchg
imul
and
andl
jmp
daa
cmp
cmp
and
dec
ficoms
rolb
xor
mov
sub
and
aas
into
movsb
inc
and
cmp
daa
iret
shll
xor
mov
mov
inc
fisubs
cmp
es
movsl
cmp
aas
inc
mov
and
cmp
mov
movsb
test
mov
movsb
xor
inc
inc
ret
into
cmp
mov
ss
and
and
mov
mov
inc
mov
cmp
and
xor
mov
mov
iret
inc
inc
movsb
and
and
cmpsl
ret
aas
aas
ss
xor
ds
dec
mov
inc
push
shll
lret
push
fimuls
dec
movsb
and
dec
into
mov
shll
cmpsl
sarb
and
es
fisubs
shlb
sub
cmp
xor
leave
mov
lret
mov
and
daa
int
daa
movsb
mov
cmpsl
inc
aaa
iret
cmpsl
ror
and
movsb
mov
inc
cmp
test
rcl
mov
xor
inc
mov
and
dec
dec
cmp
movsl
mov
inc
fidivs
lds
enter
ret
and
daa
mov
sub
mov
push
dec
xor
sarb
int
and
movsl
and
mov
dec
dec
fidivrs
xor
movsb
mov
test
fidivrs
leave
and
sarb
inc
mov
and
into
mov
and
xor
mov
leave
xor
aas
into
fisubs
and
mov
ror
movsl
inc
movsb
mov
ss
mov
mov
sarl
into
and
and
xor
iret
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
or
push
adc
or
imul
cmpsl
sarl
int
mov
mov
dec
xor
leave
test
dec
and
les
cmp
cmp
test
test
movsl
and
iret
cmp
dec
mov
cmp
mov
dec
inc
dec
into
xor
inc
inc
and
and
mov
lds
mov
xor
les
and
inc
xor
cmp
and
mov
cmp
mov
into
and
test
rolb
xor
shll
mov
lret
mov
and
mov
aaa
mov
cmp
cmp
xor
mov
inc
sarb
mov
and
mov
dec
xor
and
sarl
dec
cmp
mov
rorb
leave
and
xor
mov
shlb
inc
lds
aaa
enter
dec
mov
mov
sub
inc
inc
mov
xor
and
aas
xor
enter
xor
mov
and
ret
mov
xor
ret
dec
cmp
cmp
mov
rorb
ror
inc
cmp
daa
shll
mov
les
cmp
dec
daa
mov
inc
int
aas
mov
and
mov
and
int
cmp
and
movsl
shll
mov
sub
aas
mov
test
xor
aas
cmp
rol
and
ss
lds
inc
and
cmp
mov
push
mov
les
rol
mov
lds
mov
and
iret
inc
ret
mov
les
lret
les
dec
aas
and
mov
cmpsl
dec
shll
add
mov
shl
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
jmp
xchg
sti
push
into
insb
mov
xchg
ljmp
push
ljmp
mov
mov
leave
dec
mov
lret
lds
and
inc
ds
and
mov
test
lds
dec
mov
int
ss
mov
mov
mov
sarb
dec
mov
mov
mov
leave
es
into
and
and
mov
sub
mov
into
iret
xor
inc
inc
leave
movsl
mov
sub
xor
and
mov
cmp
cmpsl
xor
ds
enter
lds
cmp
inc
inc
mov
mov
daa
lds
mov
inc
inc
mov
int
and
mov
and
mov
mov
and
push
enter
dec
dec
dec
cmp
mov
inc
xor
mov
int
xor
inc
test
sub
into
xor
dec
dec
ret
sub
movsb
mov
inc
cmp
mov
daa
dec
inc
dec
mov
mov
mov
xor
inc
aaa
inc
aas
iret
inc
dec
daa
cmp
inc
mov
movsl
aas
les
shlb
and
movl
dec
aaa
lds
aaa
and
and
mov
xor
xor
cmp
aaa
and
and
enter
xor
iret
push
dec
mov
mov
mov
aaa
test
aas
int
dec
mov
lds
enter
daa
cmpsl
sub
movsl
dec
mov
mov
dec
mov
mov
mov
mov
dec
cmpsl
les
inc
int
ss
mov
iret
movsb
xor
xor
cmp
mov
cmp
dec
dec
inc
and
and
mov
mov
rorb
mov
shr
or
xor
cmp
jb
ja
cmp
jb
decl
jne
mov
mov
mov
shrd
shr
jmp
inc
pop
leave
inc
shlb
or
gs
jmp
fidivrs
sub
iret
leave
cmp
daa
mov
mov
cmp
mov
mov
mov
mov
push
cmp
mov
ror
dec
movsl
ss
inc
and
lret
inc
mov
sub
mov
xor
mov
int
and
enter
and
test
leave
rorb
xor
daa
and
les
cmp
mov
daa
cmpsl
xor
mov
dec
int
and
enter
daa
and
leave
ret
leave
iret
movsb
mov
ss
mov
ss
movsl
mov
mov
cmp
inc
cmp
inc
ror
mov
enter
mov
xor
mov
and
inc
sarb
mov
mov
mov
mov
dec
and
es
les
mov
mov
dec
mov
inc
mov
cmpsl
cmp
aaa
mov
int
daa
mov
shlb
ds
ds
leave
mov
mov
sub
dec
lret
xor
shlb
daa
mov
int
lret
inc
dec
inc
aaa
and
inc
int
ss
fmulp
cmp
mov
mov
mov
xor
lds
daa
mov
and
and
leave
inc
dec
mov
mov
iret
movsl
and
inc
mov
mov
dec
mov
and
ds
mov
push
ss
and
and
mov
movsl
les
xor
inc
dec
and
mov
mov
xor
xor
daa
ds
test
xor
dec
cmp
push
mov
leave
aaa
xor
mov
mov
mov
xor
xor
or
push
jmp
ds
mov
jbe
xchg
cmp
pushw
imul
xor
and
xor
cmp
and
shlb
cmp
mov
int
mov
and
mov
mov
mov
dec
inc
int
lret
dec
mov
es
mov
movsl
mov
daa
xor
and
mov
xor
sub
movsl
mov
sub
cmp
mov
and
xor
movsl
dec
xor
and
movsb
enter
int
inc
xor
aas
movsb
ss
cmp
sub
and
cmpsl
daa
inc
mov
daa
dec
xor
lret
aas
les
mov
mov
cmp
inc
cmpsl
mov
test
lret
and
and
test
leave
mov
inc
cmp
sarl
movl
xor
xor
mov
and
mov
sub
dec
cmp
les
and
into
faddp
mov
shlb
dec
mov
cmp
mov
cmp
inc
movsl
push
mov
mov
dec
mov
movsb
dec
mov
mov
mov
dec
mov
mov
lds
inc
mov
xor
dec
and
xor
xor
ror
movsb
mov
movsl
mov
mov
daa
inc
iret
mov
rol
and
dec
lret
mov
inc
inc
shlb
cmp
aaa
test
lds
and
ss
ret
mov
mov
mov
mov
les
and
ds
mov
push
mov
and
shll
mov
dec
lds
inc
enter
leave
mov
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
jmp
rolb
insb
push
lahf
adc
fsub
pop
jae
or
ljmp
push
mov
and
lret
aas
inc
into
mov
cmp
shlb
iret
mov
fisubrs
leave
inc
shlb
and
daa
daa
dec
xor
xor
mov
mov
mov
mov
mov
mov
mov
and
mov
int
xor
shlb
mov
ss
mov
aas
and
daa
fidivrs
dec
mov
xor
mov
rol
inc
mov
dec
rclb
roll
and
mov
mov
inc
leave
fisubs
es
ds
inc
mov
inc
mov
sarb
fimuls
mov
lret
inc
dec
shll
shlb
enter
dec
shll
leave
mov
xor
daa
and
leave
cmp
shlb
inc
mov
mov
mov
xor
shlb
and
mov
rcr
xor
movsl
dec
test
lret
mov
shlb
inc
mov
mov
cmp
mov
inc
cmp
and
inc
ret
mov
push
cmp
mov
sub
dec
inc
mov
sub
leave
and
and
mov
dec
dec
mov
and
and
and
and
mov
mov
lret
and
inc
mov
cmpsl
cmpsl
dec
and
daa
and
inc
and
fimuls
mov
enter
dec
cmp
mov
mov
fidivs
mov
inc
xor
les
mov
faddp
and
ss
lds
cmp
enter
and
aaa
fimuls
mov
mov
mov
push
mov
inc
mov
xor
mov
lds
ss
xor
or
add
push
shl
jmp
lods
and
mov
test
imul
mov
cmp
and
dec
cmp
mov
cmpsl
sub
ret
daa
rcr
mov
leave
mov
shlb
dec
enter
int
les
cmp
mov
movsb
into
es
mov
inc
les
and
dec
mov
movl
mov
and
rolb
lret
dec
lds
rol
ror
xor
inc
inc
xor
int
cmp
lret
sub
movsl
inc
mov
int
xor
cmp
cmp
dec
xor
mov
les
movsl
sarb
mov
dec
sub
and
inc
iret
movsb
es
dec
mov
inc
inc
dec
cmp
xor
movsl
and
leave
movsl
inc
sub
dec
lret
mov
iret
mov
iret
sarb
ret
shlb
movsl
int
mov
mov
iret
mov
xor
ds
test
inc
iret
into
mov
dec
mov
movsb
mov
ror
xor
shrb
cmpsl
push
sarb
mov
inc
mov
dec
inc
enter
dec
test
push
dec
leave
movsb
shlb
mov
and
aaa
into
mov
into
shlb
dec
inc
push
mov
and
aaa
mov
and
xor
xor
mov
mov
sub
dec
push
xor
dec
fidivs
into
mov
ss
mov
enter
mov
dec
ret
dec
and
aaa
inc
xor
mov
cmp
xor
ds
aaa
daa
into
into
mov
fisubs
daa
mov
inc
mov
mov
cmp
es
cmpsl
daa
dec
xor
mov
test
movsl
mov
enter
mov
sub
int
call
push
lea
push
jmp
push
jbe
andl
insb
mov
sbb
jmp
into
mov
mov
mov
mov
xor
and
mov
xor
inc
xor
mov
dec
and
dec
mov
xor
sub
test
mov
mov
dec
xor
inc
xor
cmpsl
int
es
mov
mov
mov
push
mov
les
lds
inc
mov
iret
cmp
sarb
dec
mov
mov
sub
dec
aaa
mov
mov
int
int
mov
mov
cmp
mov
movsb
enter
mov
lret
mov
mov
and
inc
mov
mov
xor
dec
movsb
xor
xor
and
rorb
inc
xor
mov
mov
mov
and
cmpsl
ss
inc
rclb
and
and
es
lds
mov
mov
xor
dec
xor
mov
mov
les
mov
inc
inc
mov
roll
aaa
and
lds
mov
xor
enter
mov
push
mov
aas
mov
mov
dec
inc
mov
cmpsl
mov
and
and
xor
push
test
dec
and
int
ss
xor
movsl
int
mov
mov
shlb
into
mov
xor
enter
mov
mov
mov
mov
inc
and
ds
movsl
mov
dec
enter
and
mov
aas
movl
mov
cmp
mov
lret
lret
xor
and
into
xor
push
cmp
movsl
mov
lret
mov
dec
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
cmpl
ja
xor
jmp
pushl
push
call
mov
mov
or
mov
jmp
inc
cmp
imul
das
imul
sub
jmp
iret
int
inc
enter
mov
xor
xor
mov
xor
xor
aas
mov
sarb
xor
lret
iret
daa
mov
enter
rol
fidivrs
cmp
int
inc
movsl
and
xor
aas
cmp
xor
dec
fisubrs
and
shlb
shll
and
rolb
push
movsl
push
dec
inc
les
mov
shll
dec
mov
movsb
xor
movsb
fisubs
aas
xor
leave
daa
xor
into
shrb
dec
inc
leave
mov
mov
xor
movsl
inc
mov
rolb
dec
aas
cmp
mov
daa
ret
and
sub
cmp
ror
inc
xor
mov
mov
mov
mov
aas
aaa
cmp
dec
lds
mov
iret
ds
daa
enter
rorl
leave
shll
sub
xor
cmp
inc
movsb
sub
ret
mov
and
xor
mov
inc
es
and
es
cmp
into
aas
aaa
enter
mov
es
and
cmp
test
and
lds
sub
dec
inc
dec
dec
lret
enter
dec
mov
cmp
leave
ret
inc
test
mov
movl
dec
lret
ret
ret
mov
and
inc
xor
les
mov
inc
mov
iret
enter
daa
aas
ss
aas
mov
cmp
mov
mov
ret
mov
mov
mov
mov
mov
mov
test
into
inc
shlb
lret
mov
mov
test
es
xor
lds
mov
enter
inc
cmpsl
aaa
mov
dec
sarb
mov
mov
lds
ret
dec
inc
inc
inc
xor
int
mov
inc
inc
mov
dec
and
dec
cmp
dec
and
xor
test
mov
inc
mov
cmp
inc
mov
push
mov
into
and
rol
iret
mov
mov
movsb
les
int
mov
mov
mov
inc
aaa
cmp
mov
ret
and
mov
inc
lret
dec
mov
dec
cmpsl
push
mov
dec
movsl
cmp
mov
mov
aaa
shlb
mov
leave
dec
int
cmp
dec
ds
test
mov
mov
lds
xor
es
es
and
cmpsl
aas
test
mov
aas
ds
inc
inc
dec
and
dec
push
es
rolb
xor
shll
int
and
dec
mov
iret
int
mov
ret
test
daa
inc
movsl
inc
movsl
cmp
inc
les
mov
mov
and
daa
dec
mov
cmp
ss
rol
and
mov
ds
mov
shlb
mov
and
xor
and
inc
jne
mov
mul
ret
push
mul
mov
mov
sub
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
jmp
inc
push
pop
pusha
add
add
fwait
addl
adc
cmp
jmp
cmpsl
shlb
lds
mov
dec
push
ret
and
dec
mov
mov
rcr
int
les
into
les
xor
shll
mov
shll
es
mov
mov
dec
cmp
xor
xor
push
cmp
shll
inc
mov
xor
xor
and
mov
mov
sarb
ds
mov
inc
mov
and
and
aaa
inc
mov
ret
aas
inc
dec
cmp
mov
and
shll
dec
and
rclb
movsl
ds
cmpsl
lret
int
and
mov
and
mov
mov
aas
mov
and
aas
dec
inc
and
mov
xor
test
dec
dec
movsb
sarb
into
and
mov
mov
push
mov
into
xor
mov
sub
into
rorb
mov
inc
lret
ss
mov
cmpsl
ror
dec
mov
mov
mov
inc
test
inc
cmp
movsl
int
xor
cmp
ret
xor
and
cmp
es
xor
enter
mov
test
mov
mov
xor
push
dec
push
movsb
mov
mov
xor
xor
cmp
and
xor
dec
xor
and
lds
sub
inc
aas
and
and
and
cmp
and
inc
and
mov
push
mov
ret
cmp
leave
mov
enter
daa
mov
mov
mov
and
xor
mov
cmp
xor
aas
push
iret
rolb
lds
mov
xor
mov
mov
mov
and
mov
int
dec
mov
xor
xor
dec
sarb
dec
mov
aas
movsl
cmpsl
dec
push
and
shlb
sub
dec
aaa
dec
cmp
push
inc
mov
inc
daa
leave
mov
cmp
mov
and
add
add
push
pop
mov
mov
out
cwtl
lret
jnp
imul
and
lds
and
dec
inc
aaa
mov
mov
ss
mov
xor
xor
aaa
mov
xor
test
xor
es
into
dec
shll
mov
mov
sub
sub
aas
cmpsl
mov
sub
dec
daa
mov
inc
cmpsl
cmpsl
inc
ror
mov
push
inc
leave
mov
iret
roll
sub
mov
lret
and
mov
mov
inc
mov
and
movsl
push
and
aas
test
lret
inc
xor
mov
and
mov
movsb
mov
mov
shlb
mov
dec
mov
test
xor
test
mov
ss
fisubrs
and
mov
lret
inc
into
ss
dec
ret
aas
lds
inc
mov
faddp
movsl
and
into
mov
into
cmp
xor
inc
mov
dec
inc
dec
and
enter
into
inc
and
cmp
and
and
mov
xor
mov
mov
and
cmp
dec
mov
cmp
into
dec
into
mov
and
movsl
and
cmpsl
shll
mov
mov
mov
and
cmp
mov
dec
ss
cmpsl
leave
int
mov
mov
inc
mov
test
cmp
and
mov
cmp
rolb
into
mov
xor
enter
mov
into
mov
dec
and
cmp
xor
into
leave
and
dec
dec
xor
and
int
mov
inc
int
xor
mov
xor
mov
xor
cmp
mov
and
lret
dec
mov
inc
mov
and
mov
leave
mov
inc
cmp
aaa
and
inc
ret
mov
fidivrs
cmp
xor
inc
mov
movsl
and
cmp
xor
mov
cmp
mov
ror
shll
mov
hlt
jbe
add
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
jmp
pop
jecxz
push
jl
lahf
in
scas
inc
jg
cmp
jmp
xor
daa
ss
and
fisubs
dec
inc
inc
dec
dec
mov
dec
les
aas
dec
les
sub
inc
int
xor
inc
xor
dec
ret
dec
sub
movsl
ss
iret
ret
mov
and
aas
mov
cmp
mov
cmp
inc
xor
mov
dec
and
inc
enter
cmp
inc
inc
inc
sub
shlb
es
test
leave
and
ss
cmp
inc
mov
xor
fidivs
fidivrs
cmp
dec
xor
sarb
xor
shlb
lret
mov
enter
rolb
dec
ds
dec
xor
inc
iret
ds
xor
ret
xor
into
mov
inc
mov
xor
mov
inc
aas
fmulp
mov
mov
iret
mov
shlb
xor
shll
lds
les
test
and
mov
and
dec
mov
mov
xor
dec
mov
int
fisubs
mov
inc
shlb
mov
lds
vmovaps
ror
xor
dec
ret
mov
dec
aaa
dec
aaa
mov
dec
daa
xor
mov
mov
sub
aaa
mov
xor
mov
ret
mov
dec
push
mov
xor
inc
aaa
mov
dec
mov
xor
dec
lret
mov
shll
cmp
inc
xor
mov
dec
sarb
mov
mov
mov
dec
and
dec
iret
mov
mov
test
mov
inc
inc
xor
dec
aaa
inc
leave
mov
cmp
mov
inc
and
mov
enter
mov
leave
movsl
dec
and
and
cmp
int
and
enter
inc
enter
fisubs
mov
movsl
mov
mov
mov
mov
inc
dec
sarl
shlb
mov
mov
rol
mov
movl
mov
movl
movl
mov
mov
mov
xor
add
xor
imul
mov
div
xor
push
pop
xor
mov
mov
or
xor
mov
imul
or
mov
div
sub
mov
mov
mov
imul
xor
div
mov
jmp
or
adc
lods
xchg
int3
test
xchg
jae
jmp
push
aaa
xor
aaa
mov
iret
aas
dec
leave
mov
xor
mov
mov
iret
xor
inc
test
ds
es
mov
mov
iret
cmp
into
lret
mov
mov
cmp
dec
mov
mov
cmpsl
and
dec
mov
mov
xor
rol
mov
les
ret
mov
inc
and
iret
daa
mov
aas
lret
dec
les
shll
mov
iret
mov
inc
inc
and
aaa
cmp
inc
sarb
rolb
and
inc
lds
mov
test
mov
sub
mov
inc
inc
leave
and
dec
mov
dec
aaa
cmp
ss
shll
cmp
inc
shlb
and
aaa
mov
dec
inc
cmp
leave
dec
inc
into
cmp
aaa
mov
xor
mov
mov
ret
mov
mov
mov
inc
xor
inc
mov
enter
xor
mov
mov
mov
mov
cmp
inc
mov
and
dec
xor
enter
rcr
cmp
cmp
and
and
inc
movsl
xor
xor
inc
lds
xor
mov
dec
cmpsl
mov
leave
mov
mov
mov
and
aaa
dec
mov
sarb
inc
mov
mov
mov
and
daa
mov
mov
dec
mov
ror
and
and
leave
sarl
les
aaa
sub
xor
xor
and
xor
xor
mov
cmp
mov
int
dec
cmpsl
inc
xor
dec
ret
mov
xor
movsb
dec
dec
inc
mov
inc
mov
int
aaa
inc
mov
sub
and
cmpsl
shlb
mov
mov
and
mov
test
mov
mov
dec
enter
and
shrb
dec
ss
movsb
inc
mov
rol
sub
ror
xor
inc
xor
mov
sub
or
mov
and
mov
sub
sub
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
sub
xor
div
mov
push
pop
push
sub
mov
imul
lea
jmp
orl
imul
divl
nop
jae
je
jmp
xor
mov
xor
lret
and
fimuls
mov
mov
into
and
test
enter
lret
test
mov
into
and
sub
push
xor
movsl
movsb
ds
mov
aas
dec
int
mov
les
mov
cmp
xor
mov
fidivrs
xor
es
int
mov
ds
mov
les
movsl
leave
lds
enter
mov
mov
shlb
inc
mov
and
iret
leave
ds
cmpsl
and
mov
lret
xor
and
and
test
xor
dec
ss
mov
inc
cmpsl
movsl
mov
dec
mov
and
and
aaa
xor
and
ror
xor
dec
mov
xor
mov
mov
and
mov
dec
faddp
xor
dec
mov
xor
inc
dec
les
shlb
dec
mov
int
xor
mov
mov
shlb
and
xor
mov
mov
aaa
dec
lret
mov
dec
xor
and
sub
es
xor
aas
xor
and
mov
xor
aas
mov
xor
mov
xor
mov
and
xor
xor
inc
iret
xor
inc
int
ret
ret
mov
mov
cmpsl
mov
inc
mov
dec
into
aas
mov
shll
mov
sub
mov
int
mov
xor
dec
dec
test
xor
and
movsl
and
inc
mov
and
xor
xor
les
inc
int
cmp
and
leave
mov
into
test
cmp
ds
lds
inc
mov
movsl
mov
mov
int
mov
dec
iret
shrb
ret
rolb
dec
inc
cmp
ror
daa
aas
mov
dec
aaa
xor
and
lret
dec
enter
dec
and
inc
enter
dec
and
mov
inc
daa
mov
int3
mov
or
xor
div
mov
mov
sub
mov
xor
add
mov
mov
mov
xor
div
mov
mov
lea
xor
div
mov
xor
add
mov
div
xor
mov
mov
or
xor
mov
imul
or
mov
div
pop
sub
mov
mov
mov
imul
xor
div
mov
sub
or
mov
and
mov
jmp
mov
jnp
insb
insb
mov
js
in
xorl
jmp
ss
mov
mov
mov
mov
mov
mov
ss
movsl
xor
mov
cmp
into
and
xor
mov
cmpsl
and
dec
mov
cmp
inc
movsl
cmp
inc
shrb
and
cmp
dec
mov
rclb
lret
mov
sub
movsb
mov
aaa
and
push
mov
mov
and
mov
mov
push
les
and
sub
mov
mov
xor
xor
ror
dec
mov
mov
xor
cmp
mov
mov
mov
xor
and
dec
and
dec
int
test
cmp
mov
inc
mov
dec
leave
xor
leave
sub
and
mov
dec
cmp
inc
ds
dec
lret
and
mov
sarl
and
dec
lret
inc
mov
cmp
test
mov
ret
mov
xor
movsl
leave
mov
ret
test
and
and
and
dec
iret
cmp
aaa
fisubs
mov
les
leave
shlb
inc
and
mov
and
ds
and
vcmpps
push
mov
enter
cmp
xor
ret
cmp
and
inc
lret
cmp
inc
dec
lds
mov
dec
sarb
dec
into
cmp
rorb
movsl
daa
and
leave
sarl
xor
and
cmp
push
aaa
xor
les
rclb
mov
movsl
dec
lds
sub
mov
mov
int
aaa
ret
int
mov
xor
cmp
daa
mov
lret
inc
int
dec
dec
mov
mov
xor
dec
xor
mov
cmpsl
mov
xor
les
xor
dec
mov
rolb
inc
and
push
mov
inc
inc
mov
dec
cmp
shr
jbe
add
mov
stos
orl
xchg
loop
xor
jmp
dec
iret
dec
mov
mov
movsl
mov
mov
xor
inc
ret
mov
movsl
mov
mov
cmp
and
lret
mov
mov
and
movsb
mov
mov
roll
inc
cmpsl
lret
dec
and
mov
fimuls
and
mov
rorb
dec
mov
mov
les
dec
inc
xor
mov
into
xor
inc
lret
and
rol
movsl
and
ror
aas
mov
mov
daa
dec
xor
inc
les
and
mov
movsb
lret
and
aas
aaa
inc
aas
ror
dec
mov
mov
inc
mov
inc
dec
fidivrs
int
aas
into
mov
dec
dec
ret
mov
mov
enter
int
les
mov
dec
cmpsl
daa
cmp
push
and
into
inc
cmpsl
and
mov
mov
mov
mov
movsb
mov
ret
lret
inc
dec
dec
dec
ror
shll
dec
mov
xor
and
mov
xor
fisubs
and
dec
dec
xor
dec
xor
cmp
test
mov
and
aaa
and
movsl
dec
movsb
mov
fidivrs
ss
mov
dec
ror
and
xor
mov
xor
dec
movsb
mov
mov
mov
dec
shll
iret
cmpsl
mov
cmp
fisubs
mov
movsb
ds
dec
dec
into
mov
mov
and
leave
lds
xor
leave
xor
enter
movsl
mov
aaa
enter
mov
and
inc
int
shll
xor
mov
dec
mov
aas
sub
and
inc
iret
mov
mov
inc
ss
shlb
mov
mov
cmp
mov
ret
lret
enter
dec
inc
fimuls
dec
mov
mov
push
xor
mov
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
pushl
call
cmp
je
jmp
lods
mov
lods
xchg
jae
hlt
jle
xor
js
jmp
mov
xor
dec
cmp
inc
and
mov
mov
mov
sub
mov
cmp
mov
lret
mov
aas
leave
and
aaa
aas
movsb
lret
inc
rol
inc
cmp
and
les
mov
dec
aaa
movsb
mov
xor
and
daa
dec
fidivs
dec
inc
enter
and
les
les
mov
into
and
sub
xor
mov
mov
inc
mov
shlb
cmp
xor
xor
xor
xor
xor
inc
mov
les
cmp
dec
ret
mov
sarb
lds
test
and
mov
and
inc
sarb
and
dec
mov
xor
dec
es
mov
mov
mov
cmp
dec
inc
mov
mov
inc
cmpsl
shlb
xor
inc
mov
xor
and
ret
mov
shrb
mov
dec
push
mov
mov
dec
xor
cmpsl
shll
movsb
rol
ds
mov
mov
dec
dec
dec
mov
enter
push
mov
mov
and
xor
mov
lret
aaa
int
aas
mov
les
mov
mov
cmp
mov
mov
and
sub
inc
ss
and
aas
movsb
mov
and
movsl
xor
dec
xor
inc
xor
sub
shll
mov
test
enter
mov
cmpsl
mov
mov
iret
ror
inc
aas
push
mov
xor
mov
mov
inc
mov
movsb
aas
mov
mov
cmpsl
xor
ds
dec
aas
xor
iret
and
inc
movsb
into
mov
aas
mov
mov
dec
xor
mov
dec
inc
lret
inc
inc
mov
into
dec
inc
dec
and
mov
cmp
dec
inc
dec
iret
mov
iret
inc
aaa
push
mov
mov
into
mov
inc
mov
mov
dec
dec
push
movsb
dec
inc
xor
les
into
dec
enter
aas
es
mov
mov
shll
fiadds
enter
and
into
mov
dec
and
mov
ds
mov
daa
mov
leave
ror
inc
shlb
and
enter
and
daa
cmp
mov
leave
daa
sub
and
and
mov
inc
inc
mov
int
inc
mov
mov
lret
into
and
mov
cmp
inc
dec
cmp
rorl
dec
ss
sub
and
test
xor
movsb
inc
xor
mov
shlb
inc
inc
mov
xor
mov
mov
mov
into
and
shlb
aas
and
mov
cmpsl
aaa
dec
mov
mov
leave
aaa
and
iret
leave
dec
dec
mov
movsl
int
and
and
iret
movl
movl
jmp
aad
add
addr16
hlt
in
adc
jmp
dec
test
mov
roll
aaa
push
dec
daa
mov
xor
xor
dec
cmp
mov
cmp
daa
dec
lret
xor
mov
mov
iret
ss
mov
xor
mov
dec
mov
xor
sub
movsb
inc
xor
test
mov
mov
mov
and
fidivrs
xor
lds
inc
cmp
mov
xor
xor
inc
inc
mov
inc
ss
shlb
push
mov
lds
test
enter
sub
mov
mov
cmp
sub
dec
aas
dec
mov
mov
les
and
inc
inc
fmulp
mov
dec
mov
dec
mov
cmp
xor
mov
push
xor
dec
movsb
aas
mov
mov
xor
inc
and
ret
mov
iret
inc
dec
mov
and
dec
mov
and
dec
fisubrs
xor
es
dec
cmp
mov
lds
dec
cmp
inc
mov
lret
mov
lds
and
and
dec
lds
daa
dec
sub
rol
ds
mov
and
mov
mov
mov
mov
into
cmp
inc
aaa
aaa
push
inc
xor
sarb
xor
lret
aaa
mov
leave
mov
inc
int
mov
daa
mov
ds
xor
iret
lret
leave
xor
les
mov
les
mov
dec
mov
xor
mov
aaa
mov
inc
leave
les
dec
xor
dec
es
cmp
mov
inc
dec
dec
mov
movsb
inc
mov
ss
dec
and
mov
aas
mov
dec
iret
mov
mov
inc
ret
dec
fiadds
es
push
mov
inc
inc
dec
movsl
mov
cmp
cmpsl
sarb
mov
daa
xor
daa
and
lret
xor
mov
mov
mov
and
mov
sub
mov
mov
mov
inc
ret
into
and
lret
ret
mov
rorb
and
inc
aaa
iret
inc
ss
iret
dec
dec
dec
cmpsl
lret
inc
into
movsl
mov
ret
mov
mov
and
xor
leave
cmp
and
and
dec
inc
inc
leave
and
and
and
lret
mov
movsb
dec
xor
mov
cmp
mov
inc
sub
dec
lret
sub
movsb
inc
aas
and
lds
mov
mov
mov
inc
mov
mov
xor
and
dec
shlb
mov
mov
cmpsl
mov
aaa
sub
mov
mov
ret
shlb
dec
aas
mov
dec
dec
movsb
int
inc
dec
inc
mov
mov
sub
ror
dec
mov
dec
mov
test
movsb
into
lret
inc
fidivrs
mov
inc
inc
movsl
sub
into
es
mov
ds
cmpsl
and
sub
movsl
movl
mov
mov
sub
sbbl
and
mov
subl
sub
sub
mov
inc
movl
movl
movl
mov
mov
xorl
xor
sub
mov
subl
sub
cmpl
jbe
jmp
pushl
pushl
call
mov
xor
cmp
jbe
movl
movl
movl
addl
movl
mov
mov
subl
sub
mov
orl
or
mov
orl
imul
mov
adc
mov
addl
sub
notl
sub
addl
xor
andl
pushl
pushl
adcl
pushl
call
cmpl
jbe
xorl
jmp
push
call
movl
movl
movl
movl
movl
mov
mov
jmp
xor
movsb
jp
movsl
fs
loop
jno
frndint
imul
movsl
lret
daa
leave
dec
and
enter
mov
dec
mov
daa
and
lret
and
sarl
xor
and
lret
mov
mov
inc
iret
lret
mov
dec
shll
fidivrs
xor
and
xor
xor
inc
les
enter
movsl
daa
movsb
enter
and
daa
iret
mov
xor
and
les
ror
aas
mov
mov
dec
xor
int
mov
mov
and
iret
xor
ss
and
lret
movsb
dec
shlb
rorl
inc
dec
and
mov
mov
lds
ret
aas
les
xor
fiadds
dec
mov
daa
xor
dec
aas
inc
xor
mov
test
mov
mov
cmp
xor
sarb
xor
rcl
les
mov
aaa
mov
mov
mov
leave
and
mov
dec
sub
and
inc
rol
inc
and
inc
aas
les
cmpsl
xor
into
mov
xor
rorb
xor
daa
inc
mov
cmp
dec
mov
mov
dec
dec
mov
daa
sub
cmp
movsb
and
shlb
cmpsl
xor
dec
dec
mov
enter
dec
and
mov
mov
test
xor
inc
xor
lret
aas
test
dec
mov
mov
push
inc
inc
sub
and
mov
and
and
xor
xor
and
aas
mov
mov
aaa
mov
xor
mov
mov
inc
rolb
mov
dec
mov
movsl
mov
into
int
aas
and
dec
mov
inc
inc
mov
and
aaa
leave
sub
inc
mov
inc
mov
cmpsl
daa
inc
mov
cmp
movsl
int
ret
mov
xor
and
and
mov
cmpsl
inc
lds
mov
xor
into
xor
and
aas
rclb
xor
mov
dec
and
daa
int
rol
dec
mov
cmpsl
movsb
sarb
daa
rorb
dec
mov
ss
and
cmp
enter
mov
cmpsl
mov
inc
inc
and
mov
mov
cmpsl
xor
into
movsl
inc
lds
dec
test
fidivs
mov
mov
sub
xor
inc
dec
lds
cmp
ss
into
xor
fidivs
and
mov
mov
cmp
sarb
dec
mov
mov
inc
and
mov
cmpsl
mov
test
dec
leave
and
cmp
cmp
mov
xor
and
cmp
test
fisubs
inc
mov
enter
les
sub
dec
mov
sarb
movsl
and
mov
mov
push
mov
rorb
inc
cmp
and
int
cmpsl
and
mov
lds
and
or
addl
xor
subl
div
subl
mov
sub
adc
jmp
xor
mov
push
sbb
hlt
popf
jns
jmp
and
mov
mov
into
mov
cmp
mov
mov
xor
and
and
cmpsl
movsb
and
test
dec
mov
fidivrs
ds
mov
mov
lret
xor
and
les
mov
xor
mov
test
int
iret
leave
les
inc
mov
test
aas
push
xor
cmp
sub
mov
ss
xor
and
mov
cmp
mov
aas
and
and
fisubs
enter
cmp
mov
mov
mov
cmpsl
mov
inc
ret
movsb
mov
and
aas
enter
cmp
inc
dec
xor
ret
mov
roll
ror
mov
mov
dec
shll
and
mov
and
test
inc
es
xor
cmp
dec
and
dec
cmpsl
xor
cmpsl
aas
aaa
mov
test
mov
dec
xor
xor
cmp
cmp
mov
xor
ss
dec
lret
inc
int
les
dec
leave
lret
mov
daa
dec
movsb
sarb
mov
inc
cmpsl
mov
xor
mov
and
mov
mov
ss
push
mov
mov
rorb
sub
cmpsl
cmp
dec
mov
lret
shll
ret
dec
int
mov
movsl
movsb
inc
push
aas
enter
ret
aas
into
and
aas
movsb
fiadds
shrb
mov
into
cmp
xor
daa
mov
ret
enter
mov
movsl
sub
leave
xor
push
mov
mov
mov
test
xor
cmp
dec
sub
mov
and
and
mov
dec
int
xor
cmpsl
inc
shlb
mov
mov
cmpsl
sub
cmp
aas
movsb
ret
shlb
dec
ds
cmp
mov
xor
inc
xor
aaa
and
shlb
mov
mov
dec
xor
dec
inc
cmp
lret
mov
dec
cmp
leave
mov
inc
xor
ss
mov
mov
iret
aas
xor
dec
push
xor
dec
daa
mov
and
mov
cmp
cmp
inc
mov
xor
and
and
mov
int
xor
movsl
movsb
enter
fmulp
mov
shll
and
xor
cmpsl
and
and
cmp
dec
mov
shlb
mov
mov
int
leave
dec
les
mov
xor
fidivs
ret
mov
xor
sub
mov
dec
mov
shll
mov
daa
mov
dec
ret
aaa
inc
mov
mov
dec
dec
shll
mov
mov
mov
and
push
xor
inc
aaa
ss
ds
mov
inc
movsl
dec
into
mov
mov
es
mov
mov
inc
mov
mov
and
xor
es
adc
pushl
mov
mov
subl
pushl
jmp
xchg
testb
insb
jmp
jbe
orb
sarl
sub
push
dec
aaa
ret
mov
inc
and
mov
mov
and
mov
iret
rolb
mov
fiadds
aas
lret
and
mov
rorl
xor
es
dec
mov
movsl
xor
movsb
xor
mov
movsb
iret
xor
ror
mov
mov
sub
mov
mov
inc
xor
ror
fimuls
inc
push
into
aaa
dec
mov
and
mov
lds
dec
ror
fisubs
ss
inc
mov
fmulp
mov
aaa
mov
ss
movsl
xor
movsb
es
cmp
cmp
rcr
inc
mov
test
mov
lds
and
mov
sarb
leave
dec
xor
mov
cmp
mov
dec
dec
ret
mov
dec
dec
xor
es
inc
inc
and
mov
mov
dec
xor
xor
ret
dec
inc
iret
sub
and
cmp
int
rorl
inc
daa
mov
mov
lret
movsl
mov
faddp
and
inc
dec
movsb
xor
mov
aaa
ds
iret
mov
cmp
mov
mov
movsl
inc
mov
daa
dec
and
cmp
test
inc
cmp
les
dec
mov
xor
mov
mov
cmp
aas
mov
dec
inc
aas
inc
mov
les
mov
aaa
dec
xor
daa
mov
into
inc
and
leave
lds
mov
ror
into
sub
xor
test
and
dec
sub
ret
mov
cmp
cmpsl
mov
mov
dec
mov
ds
inc
dec
xor
movsb
and
inc
shlb
mov
es
test
enter
xor
test
fidivrs
mov
int
inc
push
cmp
cmp
mov
cmp
sarb
ss
shll
mov
cmpsl
ret
mov
push
mov
inc
push
into
lds
daa
mov
cmp
mov
iret
xor
mov
dec
leave
shll
shlb
test
les
ret
inc
dec
mov
dec
inc
leave
cmp
inc
and
and
mov
and
rorb
test
ds
mov
ret
dec
mov
int
and
inc
cmpsl
aas
leave
dec
xor
dec
rolb
mov
xor
leave
mov
rol
xor
mov
test
ret
es
mov
daa
mov
dec
and
dec
cmp
ds
dec
mov
mov
aaa
mov
mov
xor
dec
push
mov
fidivs
and
mov
shlb
inc
fimuls
sub
mov
lds
and
mov
mov
mov
and
dec
lret
inc
enter
xor
mov
aas
mov
xor
lds
mov
mov
dec
and
inc
mov
push
and
sbb
jo
inc
add
xor
adcl
imul
addl
pushl
and
xor
orl
pushl
adcl
pushl
movl
call
xorl
pushl
addl
call
mov
mov
xor
mov
mov
cmpl
jle
andl
dec
jmp
pushl
pushl
call
mov
mov
movl
mov
call
lea
or
mov
or
lea
addl
mov
mov
or
mov
cmpl
jb
jmp
push
call
mov
mov
xor
xor
shl
shr
or
and
mov
and
mov
sub
lea
subl
mov
mov
mov
or
mov
dec
shrd
mov
or
mov
shr
mov
and
mov
xorl
xor
andl
xor
xorl
or
movzwl
adc
mov
andl
push
adcl
pushl
lea
push
sbbl
shl
call
sbbl
lea
addl
push
mov
negl
mov
jmp
jae
hlt
test
test
insb
loopne
jg
lahf
push
xchg
pop
test
imul
and
fimuls
and
inc
sub
mov
movsb
mov
movsb
mov
enter
rol
mov
inc
dec
xor
cmp
mov
mov
mov
es
mov
sub
lret
mov
rcl
mov
mov
mov
xor
daa
shlb
mov
mov
dec
xor
lds
shlb
mov
int
dec
lds
cmp
lds
dec
inc
mov
cmp
aas
fisubs
cmpsl
xor
mov
dec
push
shlb
shrb
mov
inc
cmp
inc
mov
and
cmpsl
test
movsb
xor
mov
xor
sarb
mov
xor
into
sub
ret
and
int
inc
mov
mov
les
leave
aaa
mov
dec
enter
les
inc
mov
mov
and
shlb
xor
xor
mov
and
aaa
mov
sub
lds
faddp
mov
into
inc
dec
mov
and
dec
lret
aas
enter
mov
mov
les
cmpsl
and
and
aas
mov
dec
lds
inc
dec
push
and
mov
rorl
daa
mov
dec
mov
dec
dec
mov
and
dec
cmp
mov
mov
leave
int
into
les
dec
mov
mov
mov
and
ss
dec
mov
mov
mov
dec
ss
and
enter
aaa
xor
mov
int
ds
inc
mov
xor
and
dec
test
fidivrs
dec
xor
iret
lret
leave
cmp
mov
inc
movsb
mov
ss
mov
inc
mov
enter
mov
dec
mov
push
and
inc
les
movsl
daa
mov
mov
mov
inc
and
and
inc
xor
mov
inc
xor
aaa
ret
and
les
mov
test
mov
iret
and
mov
xor
mov
mov
aaa
xor
mov
ds
and
mov
movsb
mov
fisubs
es
xor
mov
cmpsl
rclb
les
dec
push
dec
into
and
mov
inc
ds
sub
inc
and
mov
ss
cmp
mov
shlb
inc
ss
mov
cmpsl
lret
enter
rol
mov
mov
inc
dec
mov
cmpsl
lret
xor
mov
and
xor
cmp
and
les
fidivrs
dec
and
mov
cmpsl
dec
xor
inc
cmp
mov
lret
mov
cmpsl
mov
mov
xor
xor
aas
and
xor
dec
and
enter
and
lds
les
enter
mov
mov
dec
xor
inc
mov
dec
lret
mov
mov
mov
cmpsl
les
daa
mov
mov
subl
lea
mov
mov
sbbl
mov
push
call
push
addl
push
pushl
call
or
mov
orl
mov
mov
mov
shr
shl
addl
or
mov
xor
mov
lea
mov
and
lea
mov
mov
adc
sub
and
lea
cmpl
jge
add
jmp
pushl
pushl
push
pushl
pushl
call
xor
movl
movl
movl
mov
sub
cmpl
jle
adc
jmp
push
pushl
pushl
push
pushl
push
pushl
call
mov
and
mov
sub
mov
movl
mov
mov
sub
sub
movl
and
movl
xor
mov
mov
xorl
xor
mov
sub
cmpl
jge
jmp
pushl
push
push
push
call
mov
xor
cmp
ja
jmp
bound
jnp
data16
mov
mov
jecxz
jmp
les
sub
dec
mov
mov
aaa
dec
iret
into
ds
xor
lret
inc
mov
xor
movsb
mov
and
rcl
mov
lds
int
cmp
into
test
es
rcl
dec
cmp
push
aas
xor
mov
cmpsl
enter
inc
into
mov
mov
dec
ret
xor
enter
es
iret
mov
lret
enter
and
leave
ret
mov
mov
mov
shll
mov
mov
es
daa
mov
dec
mov
leave
shlb
mov
mov
dec
mov
ss
inc
dec
dec
aaa
enter
inc
dec
xor
mov
inc
cmp
mov
mov
mov
inc
mov
mov
mov
cmp
fisubs
iret
mov
and
mov
into
and
mov
ss
mov
into
ror
shrl
cmp
les
cmpsl
cmp
mov
mov
leave
rolb
les
mov
movl
test
inc
dec
dec
sarb
inc
es
mov
sub
leave
dec
dec
and
cmpsl
xor
into
mov
mov
int
les
mov
ret
lret
ror
daa
inc
dec
cmpsl
cmp
cmp
les
and
ss
dec
mov
xor
and
ss
mov
xor
mov
dec
daa
mov
xor
mov
mov
xor
cmpsl
sarb
mov
into
xor
movsl
ss
and
mov
mov
int
les
int
and
mov
mov
and
xor
xor
enter
sub
lds
and
leave
mov
inc
fiadds
sub
dec
shlb
cmp
mov
sub
and
aaa
xor
mov
movsb
int
aas
mov
inc
xor
test
mov
lds
xor
inc
dec
daa
and
lret
leave
lds
xor
mov
mov
shlb
mov
and
aaa
enter
movsl
mov
leave
shrl
movsl
aas
dec
dec
leave
xor
push
ds
inc
mov
mov
cmp
fidivs
mov
cmpsl
mov
leave
movsb
daa
daa
xor
mov
mov
inc
xor
dec
int
inc
les
cmpsl
int
sub
dec
shlb
mov
mov
lds
int
mov
iret
mov
ss
and
mov
movsl
mov
mov
mov
lret
les
dec
mov
mov
iret
aas
and
aas
and
sub
mov
and
mov
xor
shll
daa
inc
shrl
fimuls
iret
cmp
and
aaa
lret
xor
push
xor
push
mov
daa
and
mov
leave
shll
mov
mov
orl
mov
cmpl
jbe
sbb
jmp
push
push
call
movzwl
mov
add
movzwl
or
sub
xorl
mov
orl
xor
inc
sbbl
jmp
repnz
inc
push
and
sub
pop
idiv
or
sub
mov
daa
inc
mov
into
xor
lret
mov
and
and
ds
dec
lret
daa
inc
mov
mov
ret
aas
fidivs
dec
inc
xor
cmp
inc
cmp
and
mov
fmulp
mov
mov
lds
and
mov
inc
cmp
mov
dec
mov
and
sub
mov
mov
enter
movl
es
mov
and
inc
movsl
mov
mov
mov
cmp
xor
mov
lret
es
ds
iret
dec
ds
enter
dec
mov
test
fimuls
inc
mov
test
aaa
mov
dec
mov
mov
ss
iret
xor
dec
inc
dec
dec
inc
aaa
mov
sub
lret
mov
enter
dec
lds
xor
xor
mov
mov
ret
aaa
and
lret
cmp
xor
into
cmpsl
and
mov
movsb
xor
and
mov
ret
enter
enter
and
sarb
mov
mov
enter
dec
xor
int
mov
and
and
lds
dec
inc
inc
xor
mov
leave
iret
mov
into
dec
iret
mov
aaa
mov
and
and
inc
ret
mov
dec
inc
mov
mov
mov
test
dec
mov
aaa
mov
mov
int
and
mov
and
dec
inc
lds
mov
lds
inc
xor
dec
int
aaa
mov
xor
fidivs
leave
cmp
xor
inc
fimuls
inc
shlb
inc
dec
mov
and
cmpsl
sub
mov
cmp
ret
dec
iret
mov
mov
mov
test
dec
test
and
dec
mov
push
iret
mov
mov
push
and
ds
into
test
dec
mov
inc
dec
and
leave
mov
fidivs
mov
mov
enter
xor
dec
movsl
mov
dec
cmp
xor
ds
mov
mov
mov
aas
es
lret
leave
mov
mov
cmpsl
mov
enter
ss
inc
aaa
xor
movsb
inc
inc
les
dec
daa
fisubs
movsb
mov
mov
iret
and
shlb
mov
mov
cmp
test
dec
dec
xor
mov
inc
daa
shll
into
dec
cmp
and
mov
and
mov
movsb
mov
mov
dec
movsl
and
ss
enter
dec
mov
and
inc
inc
xor
fidivs
mov
rol
inc
dec
movsb
iret
es
mov
xor
mov
mov
int
and
fidivs
sarb
dec
daa
inc
dec
mov
dec
inc
and
sub
xor
dec
inc
cmp
cmp
inc
and
or
mov
mov
mov
orl
mov
orl
mov
addl
mov
movzwl
orl
movzwl
orl
or
sbbl
jmp
mov
clc
mov
add
pop
sub
jmp
inc
inc
mov
int
mov
ds
ds
mov
mov
xor
mov
xor
mov
mov
mov
mov
dec
and
int
lds
mov
test
and
mov
mov
iret
cmp
leave
sub
sarb
cmp
and
es
cmpsl
inc
es
and
aas
aaa
aas
xor
cmpsl
enter
movsl
mov
xor
mov
ret
mov
test
mov
int
mov
xor
mov
sub
mov
mov
ror
mov
dec
xor
mov
mov
inc
and
and
inc
mov
es
cmp
and
mov
cmp
xor
mov
and
leave
inc
inc
iret
dec
es
and
mov
mov
xor
xor
mov
mov
ret
movsl
xor
inc
mov
mov
leave
xor
ret
int
cmpsl
mov
aas
and
and
inc
movsl
mov
inc
dec
inc
mov
aas
iret
mov
xor
dec
mov
xor
and
es
mov
aaa
aas
fimuls
int
sub
mov
dec
lds
and
inc
iret
inc
aas
mov
rolb
xor
mov
and
cmpsl
mov
cmp
ror
ds
mov
mov
inc
and
enter
mov
lret
mov
aas
dec
ret
inc
and
ds
xor
and
mov
movsb
cmp
inc
movsl
xor
ss
xor
movsb
inc
iret
xor
dec
cmp
lret
ds
aas
mov
rorl
aas
mov
mov
mov
mov
mov
dec
mov
dec
dec
xor
test
mov
sarb
mov
shlb
mov
mov
xor
aaa
mov
inc
rorl
daa
mov
dec
test
mov
mov
ret
inc
inc
mov
mov
mov
mov
dec
inc
lds
mov
cmp
xor
ret
les
daa
test
lds
and
inc
push
xor
mov
dec
mov
mov
rolb
dec
cmp
mov
and
mov
inc
inc
iret
mov
mov
xor
rorb
mov
sarb
ror
movsb
cmp
cmp
xor
xor
mov
cmp
inc
xor
fidivs
xor
inc
xor
dec
test
xor
mov
and
xor
cmp
fidivs
push
daa
cmpsl
push
sarb
mov
movsb
xor
iret
mov
and
push
into
and
mov
dec
and
aas
cmp
dec
inc
inc
mov
dec
movsb
inc
aas
shlb
mov
sub
and
mov
into
rcr
iret
cmp
int
mov
fisubrs
and
and
sbb
mov
cltd
idiv
adcl
mov
sbbl
and
andl
jmp
cwtl
sahf
mov
sahf
aam
jae
scas
cli
jp
jne
imul
sarb
xor
xor
sarl
into
inc
sarl
cmp
inc
cmp
cmpsl
mov
rol
enter
mov
mov
mov
inc
mov
mov
lret
push
mov
movsl
dec
enter
inc
daa
cmp
daa
fisubs
int
enter
daa
cmpsl
dec
dec
daa
lret
mov
mov
movsl
mov
xor
mov
mov
mov
rolb
aaa
xor
int
rcl
aaa
ds
dec
shrb
rol
cmp
inc
inc
aaa
cmpsl
mov
dec
mov
test
mov
dec
cmp
xor
cmpsl
xor
test
rolb
and
push
inc
mov
and
inc
dec
push
xor
leave
aas
cmp
ss
shlb
dec
enter
mov
daa
dec
dec
ds
rol
mov
int
int
inc
mov
push
aaa
mov
mov
mov
ss
daa
xor
cmp
dec
and
ss
movsl
fimuls
aas
sub
xor
dec
mov
and
mov
aas
aas
mov
cmp
inc
dec
mov
and
mov
lret
and
lret
es
leave
cmp
mov
shlb
mov
inc
dec
mov
cmpsl
int
dec
mov
test
cmpsl
dec
xor
sub
push
dec
and
inc
dec
mov
test
mov
mov
aaa
into
xor
mov
and
es
mov
and
and
cmp
inc
movl
mov
dec
ds
test
xor
inc
xor
mov
ss
lret
into
xor
cmp
mov
mov
xor
inc
aaa
xor
mov
xor
dec
mov
movsl
xor
dec
cmp
mov
mov
cmp
rorb
xor
mov
and
xor
ret
xor
dec
mov
cmpsl
mov
mov
dec
xor
dec
xor
cmpsl
mov
rorb
mov
mov
daa
mov
inc
mov
dec
xor
movsl
dec
into
mov
and
mov
leave
dec
dec
aaa
dec
iret
es
cmp
es
iret
and
and
dec
and
mov
and
dec
iret
mov
inc
mov
inc
ror
xor
enter
inc
sub
xor
mov
cmp
leave
inc
cmp
xor
and
lret
inc
dec
and
dec
dec
xor
dec
mov
mov
xor
enter
ror
and
lret
mov
mov
aas
movsb
sub
aaa
ret
mov
iret
ds
mov
mov
xor
into
cmp
xor
ds
es
inc
sub
mov
iret
dec
es
xor
dec
aaa
xor
mov
lret
mov
mov
int
and
push
mov
and
mov
xor
and
mov
xor
les
xor
dec
mov
int
rclb
add
enter
push
add
cmpl
jge
jmp
pushl
call
mov
mov
xor
shld
shl
mov
mov
xor
orl
xor
movl
mov
cmp
movl
jmp
or
jecxz
in
fs
inc
loop
pop
mov
hlt
mov
push
jmp
aas
rol
mov
dec
iret
fidivs
inc
xor
test
mov
dec
mov
iret
enter
push
aas
movsb
lds
mov
inc
mov
inc
fidivs
inc
into
and
rorb
enter
cmp
iret
mov
mov
faddp
int
inc
ret
cmpsl
xor
rorl
inc
dec
int
mov
sarl
mov
aas
shll
and
inc
xor
mov
daa
cmp
mov
ds
inc
dec
movsl
and
shrl
and
leave
leave
rorl
sub
mov
cmp
and
test
xor
mov
daa
mov
mov
xor
inc
mov
dec
xor
dec
mov
mov
and
xor
ds
cmp
faddp
iret
mov
rol
sarb
es
shlb
mov
cmp
inc
es
into
movl
cmp
mov
and
iret
and
sub
and
movsb
lret
test
mov
cmp
mov
inc
and
inc
es
xor
sub
fidivs
aas
mov
inc
mov
aas
mov
movsb
and
mov
mov
int
dec
lds
cmpsl
es
leave
and
cmpsl
and
mov
iret
mov
mov
dec
push
inc
mov
mov
shll
into
xor
aaa
movsl
inc
cmp
int
cmpsl
dec
ror
mov
es
mov
and
xor
fiadds
lds
mov
inc
movl
dec
ss
push
cmp
push
inc
and
dec
and
xor
inc
push
mov
inc
dec
mov
lret
ds
sub
sub
xor
and
lret
mov
into
inc
xor
and
mov
inc
fidivrs
into
shlb
inc
and
xor
dec
mov
fisubrs
mov
inc
dec
daa
xor
dec
xor
dec
cmp
mov
aas
aas
mov
movsb
leave
inc
mov
mov
daa
mov
movsl
iret
mov
cmpsl
xor
aaa
es
mov
cmp
lds
mov
lds
lret
xor
inc
into
mov
movsb
dec
xor
and
mov
cmp
inc
aaa
cmp
and
xor
and
mov
cmp
sarb
mov
dec
shrb
dec
leave
dec
lret
mov
mov
cmpsl
inc
mov
inc
mov
xor
shll
shlb
mov
push
ret
mov
and
aas
leave
dec
aas
mov
cmpsl
cmp
movl
mov
mov
mov
xor
mov
mov
shlb
dec
sarb
cmp
mov
ds
sarb
and
and
leave
aas
mov
inc
and
cmpsl
cmp
xor
dec
les
jne
cmp
je
mov
movl
cmp
je
adc
mov
dec
jmp
inc
push
cmp
in
jmp
push
and
scas
test
imul
push
jmp
les
dec
shlb
aas
lret
push
iret
xor
sub
dec
cmp
movsl
mov
mov
int
dec
xor
lret
into
dec
dec
aaa
and
mov
fmulp
cmp
mov
xor
fidivs
and
cmp
mov
inc
and
mov
dec
xor
mov
cmp
and
mov
mov
and
and
sarl
into
xor
and
inc
leave
xor
inc
mov
cmp
inc
and
rolb
xor
iret
rcl
iret
daa
xor
cmp
dec
cmp
inc
movsl
and
dec
and
mov
mov
mov
mov
sub
mov
inc
les
ds
enter
into
xor
mov
test
mov
mov
push
mov
mov
int
mov
inc
xor
mov
mov
xor
mov
and
dec
rol
aas
dec
mov
dec
ds
and
mov
mov
mov
sub
and
inc
mov
les
xor
aaa
dec
into
iret
mov
test
aaa
inc
mov
int
dec
and
cmp
dec
cmp
les
rol
xor
and
test
inc
mov
mov
and
xor
cmpsl
cmpsl
mov
inc
and
xor
les
mov
and
cmpsl
and
cmpsl
xor
enter
int
and
aas
mov
les
inc
dec
cmpsl
xor
cmp
mov
mov
leave
and
mov
and
dec
xor
mov
xor
inc
movsb
and
lret
xor
and
leave
mov
mov
sub
and
enter
leave
and
mov
les
and
and
aas
shll
and
inc
mov
lds
ror
mov
mov
inc
aaa
cmpsl
ret
dec
leave
xor
shll
cmp
inc
ret
dec
cmp
into
and
dec
shlb
push
cmp
dec
test
mov
iret
test
and
cmp
mov
int
fisubs
movsb
mov
movsl
mov
cmp
dec
int
enter
and
lds
int
cmp
cmp
dec
movsb
push
mov
mov
dec
mov
and
mov
and
inc
into
daa
mov
into
xor
ss
inc
aaa
mov
mov
inc
dec
and
lret
mov
xor
dec
dec
inc
and
mov
movsb
aaa
and
xor
into
mov
ret
mov
mov
inc
mov
inc
and
dec
mov
mov
mov
mov
mov
movsl
and
aaa
dec
movsl
mov
int
mov
mov
shl
xor
or
jmp
inc
outsb
mov
mov
mov
xor
imul
jmp
mov
ds
aaa
shlb
mov
iret
mov
mov
mov
mov
inc
inc
dec
mov
daa
mov
aaa
dec
sub
and
inc
mov
and
and
sub
and
ss
dec
movsb
ss
leave
shll
mov
mov
push
aaa
cmp
es
inc
mov
xor
mov
into
and
dec
dec
shlb
mov
inc
mov
mov
roll
mov
inc
and
mov
movsb
movsb
mov
fidivrs
rorb
shll
mov
leave
test
lds
fmulp
movl
mov
mov
mov
and
mov
aas
movsb
shrb
ss
enter
inc
aas
aas
cmp
inc
xor
xor
lds
and
leave
mov
dec
mov
movsb
xor
aas
mov
int
mov
ret
dec
int
enter
movsb
mov
mov
ret
ror
mov
mov
sarb
mov
dec
mov
ss
inc
ret
mov
mov
fidivs
enter
mov
cmp
into
movsl
mov
shlb
inc
lret
dec
lret
enter
mov
mov
mov
sarb
shlb
mov
and
push
cmp
and
mov
mov
ror
mov
fisubs
dec
mov
and
mov
cmpsl
sub
mov
and
aas
inc
inc
mov
and
inc
cmp
inc
lds
inc
shlb
mov
cmpsl
sub
leave
mov
fidivrs
inc
sub
mov
inc
mov
dec
cmp
and
xor
int
into
push
dec
mov
ss
dec
mov
and
cmp
mov
and
and
movsl
mov
mov
mov
and
ds
inc
and
mov
dec
ror
les
mov
mov
xor
sub
daa
sub
ret
sarl
xor
xor
and
and
cmpsl
sarb
mov
into
dec
test
lret
mov
mov
mov
ss
mov
ds
movsb
inc
mov
fisubs
shlb
and
inc
mov
mov
inc
and
aas
mov
into
mov
leave
xor
cmp
xor
mov
les
and
mov
shll
cmp
sarb
sub
lret
and
inc
dec
mov
and
mov
mov
dec
inc
dec
sub
faddp
xor
dec
mov
and
mov
ret
aas
movsl
iret
mov
and
xor
rol
dec
lds
sub
and
movsl
inc
enter
dec
les
mov
dec
ret
xor
dec
ret
int
mov
mov
ror
xor
mov
mov
mov
cmp
and
cmp
add
xchg
add
add
shr
adc
add
push
pushl
push
call
mov
mov
xor
xor
shrd
xor
sbbl
shr
xorl
or
subl
or
movzbl
mov
mov
movl
cltd
movl
cmp
jne
movl
cmp
jmp
mov
insb
cmpsb
xchg
in
call
hlt
gs
ljmp
inc
inc
test
inc
xor
and
int
mov
mov
mov
mov
and
dec
aas
cmpsl
les
shrb
ret
mov
mov
inc
mov
inc
ds
mov
test
mov
movsb
dec
mov
and
cmpsl
mov
es
mov
mov
mov
inc
xor
mov
xor
enter
mov
mov
mov
mov
inc
dec
movsl
mov
xor
enter
mov
leave
xor
lds
inc
mov
and
sarb
aas
shlb
rorb
sub
into
mov
fiadds
mov
cmp
mov
xor
mov
ss
ret
dec
xor
dec
and
mov
movsl
mov
dec
lret
mov
sub
mov
ret
es
into
mov
and
mov
dec
movsl
mov
movsl
sub
ds
mov
and
shlb
cmp
cmp
ds
shlb
test
mov
xor
mov
ds
movsl
dec
and
enter
fidivs
leave
es
mov
mov
mov
into
and
rol
ror
xor
mov
inc
mov
mov
mov
mov
cmp
daa
lret
and
mov
les
cmp
shlb
mov
dec
cmpsl
mov
dec
mov
iret
ss
and
cmp
test
iret
push
sub
cmp
daa
and
lret
mov
and
and
mov
test
cmp
mov
inc
enter
movsl
lret
dec
into
aas
int
es
mov
mov
sub
ret
inc
mov
fmulp
cmp
mov
dec
inc
xor
cmp
mov
es
push
mov
shlb
and
cmpsl
xor
lret
cmp
movsb
iret
xor
test
mov
mov
xor
dec
into
inc
lret
shlb
mov
and
leave
mov
xor
xor
cmp
inc
dec
mov
mov
and
rorl
inc
mov
inc
ror
xor
sub
xor
movsl
es
and
into
sub
es
mov
int
and
int
xor
xor
into
and
enter
xor
rol
into
fisubs
inc
fiadds
lds
and
and
xor
mov
mov
fidivs
leave
mov
lds
mov
daa
lret
dec
and
dec
mov
cmpsl
xor
dec
inc
into
mov
sub
dec
movsl
aas
iret
shll
dec
mov
sarl
fidivrs
inc
rorb
mov
shll
xor
xor
mov
les
xor
mov
aas
es
dec
ds
push
movsl
inc
inc
enter
xor
mov
jne
movl
mov
sub
mov
movl
sbb
mov
mov
or
mov
xorl
xor
subl
shld
shl
jmp
mov
insb
gs
sar
jae
xchg
repz
jmp
sarl
mov
ss
mov
es
inc
cmpsl
mov
ss
cmp
enter
mov
enter
xor
inc
mov
into
inc
xor
mov
aaa
mov
and
inc
xor
push
xor
dec
dec
movsl
ret
mov
les
faddp
inc
lret
xor
mov
mov
xor
movsb
inc
mov
cmp
xor
faddp
movsl
and
push
dec
shll
dec
int
and
mov
shlb
shrb
daa
movsl
and
dec
mov
enter
cmpsl
and
mov
dec
and
and
sub
iret
movsb
mov
mov
xor
dec
and
into
mov
shll
les
dec
leave
xor
lret
into
mov
leave
aaa
xor
shlb
and
mov
mov
movsl
ret
xor
xor
mov
inc
inc
push
mov
test
dec
mov
cmp
dec
xor
daa
mov
xor
test
inc
daa
ss
dec
mov
mov
xor
and
xor
mov
xor
mov
dec
ret
cmp
shll
and
and
xor
aas
mov
xor
mov
and
cmp
movsl
and
dec
inc
enter
int
mov
dec
sarb
xor
xor
and
sarl
ret
les
dec
mov
iret
leave
lret
lret
mov
or
mov
incl
xor
xor
mov
movl
cmp
movl
jne
movl
cmp
jne
xor
movl
cmpl
jg
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adcl
or
movl
mov
movl
mov
movl
cmp
movl
jne
movb
movb
cmpl
jg
jmp
push
call
movzbl
mov
imul
and
mov
imul
and
xor
or
or
sub
mov
adc
movb
adc
movb
adc
movb
movb
add
mov
subl
movzbl
and
mov
andl
cltd
idiv
mov
adcl
sub
mov
sub
addl
mov
xor
movl
mov
cmp
movl
je
or
movl
movl
and
movl
cmpl
jbe
jmp
push
call
mov
add
mov
xor
div
xor
mov
adcl
sub
xorl
div
movzbl
sbb
xor
cmpl
jg
jmp
push
call
mov
movl
movl
movl
movl
mov
mov
andl
sub
cmpl
ja
jmp
push
push
pushl
call
and
add
mov
div
mov
or
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movl
movl
mov
mov
and
sub
xor
and
mov
movl
movl
movl
mov
mov
add
or
xor
add
mov
cmp
jae
lea
push
lea
push
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
mov
or
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
push
push
push
push
call
mov
mov
and
mov
and
mov
push
push
push
push
call
mov
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
push
mov
add
movl
movzbl
sub
movl
sub
mov
add
and
and
cmpl
ja
mov
mov
sub
or
jmp
pushl
push
call
shr
add
imul
xor
mov
movl
cmpl
jl
mov
xor
jmp
pushl
pushl
pushl
call
movl
mov
xor
shr
and
mov
xor
and
sub
not
mov
mov
adc
mov
movl
cmpl
ja
mov
adc
jmp
push
push
push
call
movl
movl
movl
mov
or
sub
and
mov
sbb
xor
sbbl
xor
movzwl
or
mov
subl
and
adc
mov
subl
sub
cmpl
jl
or
orl
jmp
push
push
push
push
push
pushl
call
mov
mov
lea
mov
movl
or
movl
addl
mov
mov
or
mov
xor
push
pop
andl
div
cmpl
jl
adcl
adc
jmp
push
push
call
and
mov
imul
sub
mov
movl
mov
imul
andl
imul
cmpl
jge
xor
add
xor
jmp
pushl
call
xor
mov
div
mov
sub
mov
xor
movl
cmpl
ja
jmp
pushl
call
movl
movl
mov
mov
sub
imul
xor
sbb
mov
subl
div
cmpl
jb
jmp
pushl
call
mov
sub
sub
mov
movl
movl
mov
movzwl
sbb
mov
mov
movl
sub
adc
imul
xor
movl
imul
sbb
sub
sub
mov
movl
dec
mov
xor
or
adc
sub
sub
xor
sub
sub
mov
mov
xor
mov
movl
add
movl
cmpl
ja
movl
jmp
push
pushl
call
movl
movl
mov
sub
mov
xor
mov
adcl
xor
andl
div
not
mov
lea
cmpl
jg
andl
xor
jmp
pushl
pushl
call
mov
movl
movl
movl
movl
xor
add
or
movl
movl
and
mov
add
addl
mov
sub
and
mov
subl
sub
xor
mov
or
cmpl
jg
jmp
push
push
pushl
call
mov
lea
push
call
mov
xor
xor
xor
xor
add
mov
or
and
andl
lea
cmpl
jge
sub
jmp
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
and
movl
movl
sub
mov
mov
sub
mov
neg
or
sub
imul
movzbl
adc
mov
lea
cmpl
jbe
adc
jmp
pushl
call
mov
mov
mov
imul
or
imul
xor
xor
cmpl
jge
jmp
pushl
pushl
call
add
mov
movl
movl
movl
movl
mov
mov
mov
adcl
xor
addl
xor
orl
mov
call
mov
mov
mov
sub
mov
or
mov
addl
xor
xor
orl
mov
call
or
cmpl
jle
decl
jmp
pushl
push
call
or
mov
mov
xor
xor
mov
orl
call
mov
neg
mov
subl
mov
sbb
mov
xor
xor
andl
mov
adc
mov
cmpl
jbe
jmp
pushl
call
mov
mov
mov
call
mov
or
mov
adcl
or
adcl
push
adcl
push
subl
push
subl
push
addl
call
not
mov
cmp
jne
movzwl
and
mov
mov
mov
subl
xor
xor
mov
orl
call
mov
add
mov
mov
add
mov
xor
addl
xor
subl
mov
call
adcl
or
or
mov
sbbl
mov
xor
xor
mov
addl
call
or
mov
adcl
mov
adcl
mov
mov
xor
sbbl
xor
mov
mov
notl
mov
andl
call
xorl
or
mov
mov
and
mov
or
xorl
push
push
sbbl
push
sbbl
push
call
movl
mov
jmp
movl
jmp
cmpl
jbe
sbb
jmp
push
push
call
lea
mov
mov
movl
mov
xor
negl
shr
mov
movzbl
xor
mov
xor
shl
inc
or
mov
sbb
mov
cmpl
ja
and
jmp
push
call
mov
mov
mov
mov
xor
xor
mov
sbbl
call
mov
cmpl
ja
mov
xor
or
sub
and
jmp
push
push
push
pushl
push
call
mov
mov
andl
mov
xorl
xor
xor
adcl
mov
sbbl
call
or
or
mov
cmpl
jb
adc
jmp
pushl
pushl
push
push
pushl
pushl
pushl
call
mov
xor
xor
mov
call
mov
and
mov
mov
sbb
mov
xor
addl
xor
subl
mov
cmpl
jge
adcl
addl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
call
xor
mov
or
mov
incl
or
movl
push
sbbl
push
push
push
orl
call
movl
mov
movl
cmp
movl
je
mov
mov
sub
add
mov
mov
movl
xor
orl
xor
mov
adcl
call
mov
mov
cmpl
jb
sbb
jmp
pushl
push
call
mov
mov
xor
xor
mov
call
orl
or
add
or
mov
subl
imul
add
mov
mov
movl
mov
movl
jmp
movl
jmp
mov
and
mov
subl
xor
subl
xor
mov
sbbl
call
add
mov
mov
dec
mov
mov
xorl
xor
andl
xor
mov
orl
call
sbbl
or
xor
or
sbb
mov
adc
mov
xor
xor
mov
addl
call
mov
mov
cmpl
jl
jmp
pushl
push
pushl
call
mov
mov
xor
xor
mov
mov
mov
call
or
mov
sbbl
or
movl
push
orl
push
xorl
push
push
andl
call
movl
mov
movl
jmp
xor
mov
mov
orl
xor
xor
mov
andl
call
adc
mov
cmpl
jle
add
jmp
pushl
push
pushl
push
call
mov
mov
mov
xor
xor
mov
call
or
or
mov
movl
jmp
adc
mov
xor
mov
subl
xor
movl
xor
adcl
mov
call
mov
mov
sub
and
mov
adc
mov
cmpl
jle
jmp
pushl
call
mov
mov
xor
xor
mov
call
or
orl
or
mov
adc
mov
or
mov
xor
mov
xorl
or
sub
xor
add
mov
cmpl
jle
and
jmp
push
call
movl
movl
movl
movl
movl
movl
cmpl
jle
jmp
push
pushl
push
call
movl
movl
movl
mov
mov
sub
mov
xor
xor
div
sbb
or
cmpl
jge
neg
jmp
pushl
pushl
pushl
call
mov
lea
mov
add
mov
or
add
mov
xor
or
xor
adc
mov
and
sbb
imul
cmpl
ja
xor
jmp
push
call
add
xor
push
pop
div
mov
mov
add
lea
not
mov
cmpl
jg
jmp
pushl
call
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
imul
movl
cmpl
jb
jmp
push
push
push
call
movl
movl
movl
mov
mov
or
mov
and
add
mov
lea
mov
add
mov
imul
mov
imul
mov
or
mov
sub
mov
mov
xor
imul
mov
imul
mov
and
imul
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
and
mov
lea
mov
lea
mov
sub
mov
sub
xor
mov
mov
xor
mov
xor
add
mov
xor
div
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
or
push
and
mov
adcl
or
jne
xorl
mov
mov
xor
and
div
mov
sub
mov
div
mov
jmp
movzwl
sbb
mov
mov
cmpl
jbe
jmp
pushl
push
push
pushl
pushl
call
mov
mov
mov
shr
rcr
shr
rcr
xorl
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
notl
subl
movl
cmpl
movl
je
negl
add
movl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
decl
shld
movl
shl
ret
mov
andl
xor
and
shl
ret
xor
xor
ret
adc
add
es
add
mov
add
add
push
mov
add
add
outsb
mov
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
cmp
add
bound
add
jl
add
mov
add
scas
mov
add
mov
add
mov
add
xor
add
dec
mov
add
push
add
add
add
cmpb
add
add
add
add
add
jns
insl
outsl
pop
gs
push
ja
outsl
jns
push
outsl
ja
gs
outsl
add
add
jbe
insb
imul
imul
imul
imul
imul
add
test
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
lods
inc
add
scas
ret
mov
mov
loop
jle
xchg
mov
mov
mov
pusha
mov
mov
js
pop
mov
lods
xor
js
loop
jle
xchg
mov
mov
mov
pusha
mov
mov
js
pop
mov
int
ret
jbe
testb
mov
mov
pushf
mov
mov
in
xor
adc
adc
hlt
and
daa
jb
loopne
js
loopne
jo
pushf
mov
cli
mov
js
pusha
mov
or
adc
hlt
inc
testb
loopne
js
loopne
jo
pushf
mov
mov
js
pusha
mov
sub
adc
hlt
popa
mulb
mov
mov
nop
mov
cli
mov
cmpsb
mov
mov
xor
inc
adc
popa
cmc
xor
mov
nop
mov
hlt
mov
mov
push
js
outsb
mov
insl
xor
adcl
jb
aam
js
nop
mov
fmuls
insb
mov
mov
lea
adcl
adc
jb
aam
js
nop
mov
fimull
insb
mov
pusha
mov
lods
xor
cmc
loope
out
mov
mov
mov
jle
cwtl
mov
js
jb
xor
xor
adc
adc
pop
cmc
and
daa
jo
repnz
stos
mov
mov
sahf
mov
js
outsb
mov
or
adc
inc
jb
add
je
inc
add
lods
inc
add
scas
inc
add
add
inc
add
inc
add
add
scas
inc
add
inc
add
add
lods
inc
add
lods
inc
add
loope
sahf
test
add
inc
add
add
add
inc
add
lods
inc
add
lods
inc
add
inc
add
xchg
sahf
in
scas
ja
in
lods
inc
add
lods
inc
add
push
xchg
add
mov
push
fs
pop
inc
add
ja
mov
push
pop
popf
data16
xchg
js
inc
add
xchg
sahf
jle
xchg
sahf
jb
xchg
sahf
jbe
xchg
sahf
push
xchg
sahf
outsb
aaa
xchg
sahf
bound
xchg
sahf
data16
xchg
sahf
pop
aaa
xchg
sahf
pop
aaa
xchg
sahf
cmp
xchg
sahf
sub
addl
stos
inc
add
mov
imul
es
sahf
mov
stos
inc
add
scas
mov
and
add
ljmp
add
loope
inc
add
mov
mov
mov
js
add
mov
mov
stos
mov
mov
js
xchg
mov
mov
mov
js
add
sahf
mov
mov
mov
shr
rorb
shrb
rorb
outsl
rorl
shr
rorl
shrl
rorl
outsl
shrb
shl
shl
shl
shl
sar
sar
sar
sar
shl
shl
shl
shl
shr
mov
nop
out
jo
mov
mul
jbe
shl
dec
dec
test
cmp
ja
mov
aad
out
addr16
push
lock
mov
cmpsb
and
xchg
xorb
and
out
test
outsb
add
cmp
inc
add
outsl
arpl
inc
add
lods
inc
add
add
add
popa
jb
popa
ja
ja
addr16
imul
bound
inc
outsl
outsl
insb
outsb
gs
data16
outsl
je
jne
jne
insl
imul
imul
arpl
ja
jb
inc
gs
jns
outsl
jae
bound
jns
popa
jo
gs
insb
jae
outsl
outsl
insl
jae
popa
addr16
gs
popa
insl
jns
outsl
data16
popa
inc
insb
imul
ja
push
push
imul
add
jae
imul
add
jo
fs
popa
fs
push
outsb
addr16
insb
gs
outsb
je
outsl
ja
addr16
add
jae
js
gs
popa
insb
add
push
outsl
imul
addr16
fs
insl
jbe
insl
insb
popa
popa
ja
add
imul
insb
outsl
imul
gs
popa
insl
push
imul
gs
outsl
ja
outsb
jne
outsl
push
arpl
imul
popa
outsb
dec
imul
gs
jae
popa
outsb
inc
imul
add
je
fs
fs
je
outsb
insl
popa
add
add
jmp
ret
dec
add
add
add
add
incl
add
pop
pop
add
pop
pop
add
jns
ja
add
add
jmp
ret
dec
add
add
ljmp
add
add
add
scas
add
mov
scas
add
cld
scas
add
or
add
pop
mov
add
mov
add
add
add
add
add
data16
add
add
cmp
push
add
cmpsl
add
popa
ja
gs
popa
insl
imul
arpl
add
je
imul
inc
inc
xor
add
push
popa
insb
imul
js
inc
xor
add
je
outsl
imul
xor
inc
jb
gs
imul
add
jo
dec
popa
insl
gs
jb
imul
add
insb
gs
popa
insb
insl
gs
insl
imul
push
popa
outsl
add
addr16
popa
jbe
popa
bound
imul
arpl
jae
imul
je
addr16
popa
jo
add
popa
jns
popa
js
gs
insl
gs
outsb
jb
fs
jb
outsl
add
jae
fs
jne
bound
popa
outsb
jns
outsl
addr16
popa
gs
gs
imul
popa
add
jae
imul
jo
js
outsl
je
imul
add
fs
imul
popa
jne
jo
addr16
outsb
add
gs
jns
bound
push
gs
jae
outsb
data16
push
je
je
fs
push
bound
gs
inc
jne
gs
outsl
jo
popa
je
gs
push
jo
je
popa
add
jne
add
add
jne
bound
add
jns
popa
add
add
inc
add
bound
jae
add
jne
outsb
add
outsl
add
jae
outsl
add
popa
add
push
add
je
add
insb
add
jbe
push
add
jb
imul
imul
arpl
outsl
add
inc
add
outsl
add
push
outsl
add
popa
add
add
push
add
popa
add
bound
jne
add
insb
add
add
add
add
jne
jb
imul
imul
je
add
outsl
add
jb
popa
add
add
imul
add
je
add
inc
add
je
add
add
jne
add
jo
ja
outsl
add
jae
add
or
add
sbb
add
or
add
jne
add
arpl
add
adc
push
and
add
sub
add
push
adc
xchg
dec
adc
les
add
js
add
insb
adc
imul
sub
add
push
adc
movsb
sub
add
das
adc
out
adc
inc
xor
add
dec
adc
addr16
adc
push
jge
add
adc
and
adc
fwait
push
adc
movsl
push
adc
ret
add
movups
aad
adc
subb
out
sbb
add
xor
add
adc
leave
adc
adc
push
arpl
add
push
adc
pop
and
add
adc
imul
xchg
outsb
adc
movsl
and
adc
or
adc
mov
sub
add
adc
add
add
pop
adc
xor
adc
mov
sbb
add
pop
adc
pop
jne
add
and
add
pop
adc
fildll
add
adc
cmp
adc
sub
adc
cli
cmp
add
adc
dec
dec
adc
cmp
add
adc
add
push
adc
sub
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
cs
add
test
add
add
add
add
loop
add
cmp
add
fdivs
add
add
add
lock
add
add
fdivl
add
add
add
cld
mov
add
add
mov
add
add
jo
add
add
add
add
add
mov
add
nop
test
add
aam
add
pushf
test
add
adc
add
es
add
mov
add
add
push
mov
add
add
outsb
mov
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
cmp
add
bound
add
jl
add
mov
add
scas
mov
add
mov
add
mov
add
xor
add
dec
mov
add
push
add
add
add
cmpb
add
add
add
add
add
push
imul
outsl
arpl
add
add
dec
outsb
push
arpl
xchg
add
je
outsl
jns
arpl
add
imul
jae
popa
addr16
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
adc
gs
jae
inc
inc
add
push
gs
arpl
jo
jns
add
push
gs
popa
jae
inc
jb
outsl
jb
js
add
gs
jo
popa
je
push
outsb
add
sahf
add
push
arpl
jo
jns
filds
inc
js
je
imul
js
dec
add
je
outsb
jne
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
and
inc
gs
gs
je
je
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
je
arpl
gs
imul
add
popa
outsb
addr16
outsb
jne
add
arpl
outsl
jo
jo
outsb
jne
add
inc
push
xor
cs
insb
add
add
dec
outsl
arpl
gs
outsb
outsw
push
add
and
insl
push
gs
jne
arpl
jns
gs
add
lods
add
outsl
jae
dec
popa
outsb
fs
add
jo
jb
add
push
add
gs
jo
outsl
insl
insl
add
dec
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
jnp
push
outsb
insl
popa
jo
imul
insb
add
popa
je
dec
jne
gs
add
xor
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
popa
imul
outsb
je
dec
inc
push
dec
inc
dec
xor
cs
insb
add
arpl
jae
insb
gs
insb
add
xor
xor
fs
insb
add
adc
push
outsb
jb
popa
insb
imul
arpl
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
jb
je
push
add
add
jae
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
je
popa
jns
jne
add
je
imul
inc
inc
dec
xor
cs
insb
add
dec
insl
popa
addr16
imul
je
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
je
dec
jae
outsl
outsb
je
outsb
je
jns
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
or
rorb
shlb
xor
mov
pop
xchg
sbb
sub
adcl
in
push
repz
cmp
adc
fistps
pop
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
test
or
in
int
in
leave
and
xor
aas
adc
add
fistps
pop
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
add
mov
sub
andl
adc
add
fistps
pop
rorb
shlb
test
shl
mov
pop
xchg
sbb
push
in
add
lret
in
fistl
xchg
cmpsl
mov
pop
or
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
mov
or
in
sub
in
popa
mov
adc
mov
mov
es
or
fldenv
mov
popaw
call
ds
loopne
mov
out
cmp
std
fstp
fldcw
out
cmp
std
fstp
fnstcw
mov
out
dec
je
add
loop
pop
shl
or
cmp
pop
inc
or
cmp
pusha
jne
jae
lea
cmp
cmp
bound
pop
xorb
lahf
es
rorb
cmp
cmp
cmp
imul
push
and
sub
fistl
in
lret
pop
scas
mov
leave
lock
push
sub
pop
cmp
inc
cmp
cmp
cmp
jle
lahf
and
test
xorb
fs
mov
xlat
cmp
mov
rcll
out
popa
xchg
sbb
cmp
cmp
pop
xchg
in
jmp
outsl
mov
lea
cmp
cmp
popa
lock
push
out
popa
out
popa
mov
xchg
in
inc
adc
mov
xchg
mov
adc
sub
add
je
loopne
enter
push
enter
call
out
lock
cmp
fnstsw
mov
mov
fdivs
push
lea
cmp
cmp
cli
cmp
push
lea
cmp
call
cmp
adc
mov
mov
and
xchg
call
popa
cmp
aaa
mov
and
sub
cmp
cmp
lea
cmp
mov
in
out
cmp
popa
cmp
mov
in
int
call
rcl
fidivs
mov
iret
rcl
in
shr
iret
in
repnz
mov
mov
loop
leave
push
lret
xchg
lea
cmp
call
mov
sar
je
ret
pop
pop
dec
add
out
cmp
scas
popa
cmp
call
mov
sar
ret
ret
pop
aas
dec
add
repz
ret
inc
cmp
cmp
xlat
pop
je
add
cmp
popa
xlat
pop
out
xchg
cmp
out
xchg
mov
pop
out
add
out
mov
push
sar
je
add
add
aas
enter
cmp
cmp
rcl
rcl
iret
out
add
out
iret
popa
pusha
push
out
iret
cmp
out
pop
mov
cmp
je
mov
xchg
iret
lret
pusha
std
lret
rorb
add
push
add
cmp
pusha
iret
jge
std
adc
cmp
push
adc
mov
lea
lret
rorb
rol
add
cmp
mov
lea
popa
out
int
iret
pusha
push
mov
add
cmp
or
mov
pop
out
cmp
lahf
and
or
pushf
sub
cmpsl
divl
inc
xchg
xchg
rcrb
xchg
lahf
imull
cmp
je
pop
pop
es
mov
jbe
call
rorb
cmpsl
stc
mov
and
shrb
stos
outsb
cmp
je
add
in
mov
popa
adc
shll
mov
pop
xchg
call
or
sar
aaa
rorb
xchg
mov
xchg
add
roll
test
inc
lret
mov
push
pop
pop
or
je
pop
pop
or
mov
popa
mov
cmpsb
rol
jbe
xchg
shll
mov
shll
cmpsb
shll
movsl
es
or
fidivl
shll
jbe
insb
mov
mov
je
rcr
mov
inc
pop
pop
add
shll
jbe
out
mov
inc
out
popa
pop
pop
add
jmp
cmp
mov
mov
in
test
shlb
lea
in
mul
lea
dec
cmp
mov
fiaddl
xchg
cmp
stc
popa
cmp
dec
or
and
sub
rorb
mov
pop
mov
pop
psrld
ret
test
pushl
pushf
xor
rorl
push
mov
pop
mov
pop
test
pusha
sar
mov
rorb
mov
pop
mov
pop
test
pusha
sar
mov
rorb
mov
pop
mov
pop
test
pusha
sar
mov
rorb
pushf
daa
inc
dec
or
and
ret
inc
ret
rorb
rorb
ret
rorb
rorb
dec
or
enter
dec
or
or
cmp
mov
pop
mov
pop
test
cmp
pushl
stos
rorb
mov
pop
mov
pop
test
cmp
pushl
stos
rorb
dec
or
lock
cmp
std
cmpsb
cmp
cmp
pop
cmp
cmp
imul
cmp
in
cmp
into
cmp
cmp
call
call
call
pop
add
cmp
test
ss
mov
jb
rcl
cmp
xlat
pop
out
imul
xchg
rorl
jb
rcl
in
mov
cmp
cmp
or
mov
add
or
mov
dec
rorb
mov
sub
imul
cmp
cmp
rolb
popa
cmp
mov
sub
call
rolb
popa
cmp
lea
cmp
mov
pop
mov
pop
test
test
rcr
sar
mov
xchg
push
test
sub
sub
mov
mov
sub
mov
lret
mov
sub
pop
sub
cmp
cmp
mov
sub
mov
lret
cmp
cmp
add
cmp
loopne
fildll
call
or
cmp
out
out
cmp
cmp
mov
or
mov
add
cmp
repz
mov
jne
jne
test
or
cmp
out
out
cmp
cmp
mov
or
cmp
cmp
mov
stc
cmp
cmp
pop
mov
jne
jne
mov
sub
popa
cmp
dec
or
pop
out
xor
pop
test
and
pusha
repz
or
cmp
cmp
out
cmp
cmp
mov
or
cmp
cmp
cmp
sbb
or
cmp
cmp
or
cmp
cmp
out
cmp
cmp
mov
or
cmp
cmp
cmp
lds
cmp
pop
or
cmp
cmp
clc
clc
cmp
fnstenv
popa
cmp
cmp
lea
cmp
or
fnstenv
popa
cmp
mov
sub
inc
add
or
mov
push
popa
cmp
fmull
cmp
fnstenv
inc
call
mov
sbb
cmp
rorb
and
cmp
lea
push
cmp
fnstenv
or
mov
pop
test
jb
lea
shll
outsb
cmp
cmp
out
fisubrl
cmp
dec
or
cmp
cmp
cmp
sub
mov
xchg
cmp
fnstenv
popa
cmp
cmp
lea
cmp
mov
sub
shlb
or
mov
aaa
popa
cmp
out
cmp
push
mov
sub
mov
sub
popa
cmp
lea
shl
mov
sub
shlb
or
mov
sbb
cmp
sub
cmp
cmp
fnstenv
popa
cmp
cmp
cmp
sub
or
mov
sub
mov
sub
cmp
lea
cmp
fnstenv
popa
cmp
cmp
cmp
sub
popa
cmp
mov
sub
cmp
fdiv
cmp
fnstenv
popa
cmp
cmp
cmp
sub
aas
cmp
or
mov
aas
out
leave
out
jns
cmp
mov
or
ret
xchg
out
fstpl
stos
subl
call
mov
sbb
cmp
cmpsl
and
fnstenv
popa
cmp
cmp
cmp
sub
or
add
cmp
out
aas
repz
mov
pop
mov
pop
mov
sub
repnz
cmp
jb
rcrl
cmp
lea
mov
pop
mov
pop
mov
sub
cmp
jb
rcrl
cmp
lea
cmpsl
mov
pop
mov
pop
test
test
rcr
sar
mov
xchg
push
call
popa
cmp
cmp
test
ljmp
or
rorb
inc
out
mov
pop
mov
pop
test
cmp
jb
ror
in
or
mov
pop
mov
pop
test
test
lea
shll
cmp
push
xor
cmp
xchg
push
call
pop
or
rorb
add
or
mov
pop
mov
pop
test
out
ss
sar
mov
jns
ret
mov
pop
mov
pop
test
jb
lea
shll
dec
mov
cmp
test
jb
lea
shll
inc
mov
cmp
test
cmp
jb
roll
mov
pop
mov
pop
test
test
rcr
sar
mov
lret
xlat
and
and
or
mov
push
dec
or
and
dec
or
sub
mov
cmp
jb
fidivrl
rcl
addr16
cmp
or
std
jb
fidivrl
rcl
in
or
xchg
mov
or
mov
cmp
cmp
std
jb
shll
jnp
cmp
cmp
cmp
mov
test
rorl
push
mov
std
je
test
in
or
mov
xor
cmp
std
jb
shll
mov
xor
or
std
jb
fidivrl
rcl
in
or
mov
aaa
test
test
sar
rcr
mov
mov
in
mov
mov
cmp
or
fidivrl
std
jb
shll
stos
cmp
cmp
mov
addr16
dec
or
and
cmp
rorb
dec
or
adc
sbb
mov
in
xlat
in
in
or
std
jb
fidivrl
rcl
xchg
cmp
cmp
rcrb
or
pushf
xor
mov
mov
fidivs
or
std
jb
fidivrl
shll
xlat
cmp
or
mov
mov
fidivs
in
fidivrl
std
jb
shll
xlat
daa
mov
daa
test
jb
jecxz
mov
lret
xlat
cmp
mov
fnstcw
cmp
mov
fnstcw
cmp
test
test
sar
shl
mov
lret
fwait
xlat
icebp
test
xlat
icebp
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
cmp
inc
mov
fidivs
or
std
jb
fidivrl
shll
xlat
cmp
or
mov
mov
fidivs
std
jb
or
fidivrl
shll
xlat
aas
mov
aas
test
jb
jecxz
mov
lret
xlat
cmp
mov
movsl
cmp
cmp
test
test
sar
shl
mov
lret
fwait
xlat
icebp
test
xlat
icebp
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
cmp
inc
mov
sub
or
std
jb
shll
mov
jecxz
mov
test
ror
xchg
or
mov
xchg
xor
or
mov
aas
test
rcr
test
sar
mov
mov
test
shll
jb
shll
cmp
shll
fcmovnb
jecxz
test
into
mov
in
mov
in
test
sar
test
rcrl
mov
lret
pusha
lret
shlb
or
mov
in
test
test
sar
rcr
mov
lret
rorb
mov
in
mov
in
test
sar
test
rcr
mov
mov
std
je
mov
in
mov
in
test
test
shl
sar
mov
mov
addr16
stos
xchg
shrl
mov
pop
mov
pop
mov
and
cmp
mov
mov
sub
test
rcr
test
mov
sbb
cmp
pushl
into
fbstp
test
test
rcr
sar
mov
fbstp
test
test
rcr
sar
loop
into
fistpll
fnstcw
mov
pop
mov
pop
test
test
rcr
sar
mov
rorb
xchg
push
out
loop
sbb
cmp
and
cmp
mov
sub
popa
cmp
mov
inc
cmp
test
shl
out
shll
fneni(8087
mov
pop
test
mov
pop
out
ss
sar
mov
loopne
call
shr
push
ret
lahf
and
and
or
ret
test
je
out
mov
push
mov
sub
test
cmp
pushl
stos
mov
push
rolb
lret
dec
xchg
push
adc
mov
and
mov
push
mov
sub
test
cmp
pushl
stos
mov
push
rolb
lret
dec
xchg
push
adc
mov
push
mov
pop
rorb
mov
pop
test
test
sar
rcrl
mov
mov
pop
dec
or
aad
aad
dec
or
aad
aad
rorb
mov
test
rcl
std
rcll
std
jb
or
rcl
inc
push
inc
add
and
out
fwait
adc
pop
mov
pop
mov
pop
mov
pop
test
sar
test
rcr
mov
mov
aad
in
std
jb
or
test
lret
or
out
and
jmp
lret
fidivl
into
mov
inc
mov
rcl
aad
lock
xor
add
lahf
pop
mov
pop
test
test
rcrl
sar
mov
mov
pop
mov
pop
test
cmp
jb
rcll
cmp
dec
or
and
in
xor
in
mov
std
ret
inc
rorb
mov
sub
test
fcmovnb
jecxz
mov
fbstp
test
shl
mov
fbstp
test
jb
jecxz
mov
fbstp
test
test
rcr
sar
mov
fistpll
fnstcw
mov
mov
sub
test
shl
mov
fbstp
test
jb
jecxz
mov
fbstp
cmp
aaa
test
test
rcr
sar
mov
fistpll
fnstcw
rorb
xlat
pop
test
test
sar
rcr
mov
xchg
dec
test
stos
jae
cmp
test
test
sar
rcr
mov
xchg
or
test
jo
cmp
dec
or
sbb
adc
mov
aad
lea
icebp
inc
leave
mov
pop
mov
pop
rorl
popa
mov
das
mov
das
rorl
cmp
dec
data16
cmp
out
outsb
cmp
cmp
pop
or
cmp
fnstcw
call
cmp
cmp
call
cmp
dec
mov
push
out
repz
lea
cmp
rorb
mov
sub
mov
sbb
cmp
cmp
pushl
into
fbstp
test
jb
jecxz
mov
cmp
data16
inc
roll
and
shll
and
popa
cmp
mov
inc
call
loope
fidivrl
pushl
into
fbstp
test
jb
jecxz
mov
fistpll
call
mov
std
rorb
mov
aaa
rorb
add
rcr
sar
mov
fbstp
test
jb
jecxz
mov
fistpll
call
mov
and
or
mov
push
dec
or
and
dec
or
sub
mov
addr16
test
sar
rcr
mov
rorb
mov
addr16
addr16
test
sar
rcr
mov
rorb
dec
or
xchg
mov
or
mov
addr16
test
rcr
sar
mov
mov
xor
cmp
cmp
cmp
mov
cmp
cmp
jb
push
mov
xor
xchg
fstpl
or
mov
std
mov
std
test
test
rcr
sar
mov
mov
xchg
push
sbb
or
mov
std
test
test
sar
rcr
mov
rorb
mov
in
xlat
in
in
or
std
jb
fidivrl
shll
or
mov
addr16
addr16
test
rcr
sar
mov
mov
xchg
push
test
stos
cmp
cmp
mov
cmp
or
dec
or
and
cmp
rorb
pushf
xor
das
sbb
mov
aaa
mov
aaa
test
test
sar
rcr
mov
rorb
mov
fimull
popa
cmp
mov
dec
or
cmp
cmp
pushf
xor
dec
or
pushf
xor
mov
mov
fidivs
or
std
jb
fidivrl
shll
xlat
aas
push
sti
mov
mov
fidivs
in
fidivrl
std
jb
shll
xlat
aad
cmpsl
aad
mov
jecxz
mov
lret
xlat
aas
test
dec
sub
mov
sarl
cmp
test
test
sar
shl
mov
lret
fwait
xlat
sti
test
xlat
sti
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
aas
inc
add
or
mov
fiadds
jb
fidivrl
shll
xlat
aas
push
sti
mov
mov
fidivs
std
jb
or
fidivrl
shll
xlat
cmp
mov
jecxz
mov
lret
xlat
aas
test
dec
sub
mov
and
in
fcmovnb
std
jb
jecxz
mov
lret
fwait
xlat
sti
test
xlat
sti
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
aas
inc
add
or
mov
das
test
test
rcr
sar
mov
mov
cmp
mov
jecxz
mov
test
ror
xchg
or
mov
xchg
xor
or
mov
cmp
cmp
in
std
jb
shll
xlat
aaa
test
shll
cmp
shll
fcmovnb
jecxz
test
into
mov
in
mov
in
test
sar
test
rcrl
mov
lret
pusha
lret
shlb
or
mov
in
test
test
sar
rcr
mov
lret
rorb
mov
in
mov
in
test
sar
test
rcr
mov
mov
xor
or
mov
in
test
test
shl
sar
mov
mov
cmp
test
sbb
cmp
mov
sub
call
cmp
sub
mov
sub
cmp
mov
sub
cmp
cmp
and
call
cmp
rorb
mov
pop
mov
pop
test
jb
lea
shll
mov
sub
mov
sbb
cmp
cmp
pushl
into
fbstp
test
test
rcr
sar
mov
fistpll
call
repnz
adc
add
add
mov
mov
xor
cmp
cmpsb
cmp
cmp
xchg
test
cmp
cmp
or
pop
xchg
cmp
mov
inc
cmp
cmp
inc
test
push
cmp
cmp
inc
push
cmp
cmp
test
pop
cmp
cmp
jle
pop
pusha
cmp
cmp
out
sbb
mov
je
lret
mov
pop
test
and
pop
mov
cmp
pop
and
lea
cmp
mov
mov
imul
loope
fisubrs
mov
out
pop
sub
rcl
add
jns
xorl
test
popf
pop
test
out
dec
lret
je
popf
rcrb
mov
or
out
mov
pop
popa
outsb
leave
test
popf
pop
test
out
dec
cmp
out
and
lret
lahf
pop
adc
mov
lock
mov
add
or
out
sub
and
xlat
add
imul
mov
lea
mov
sbb
shrl
jmp
xlat
lea
sbb
cmp
xchg
test
add
inc
and
xchg
cmpsl
mov
mov
xor
cmp
je
insl
test
xor
cmp
xchg
xchg
out
jge
sbb
add
sbb
mov
outsb
mov
es
ds
lretw
lret
shr
and
and
adc
adc
sbb
in
mov
lock
hlt
pop
jle
mov
or
out
lret
rcrb
repz
dec
mov
pop
lret
and
sub
shlb
pop
out
mov
pop
movsb
rclb
pop
xchg
adc
adc
repnz
adc
add
add
psrld
rorb
dec
or
sub
mov
and
ret
sbb
mov
fidivrl
test
shll
or
xlat
lea
mov
and
mov
and
mov
and
aam
enter
and
mov
arpl
fidivrl
or
popa
cmp
xchg
mov
pop
sub
cmp
mov
and
sti
rcr
shll
or
cmp
mov
and
cmp
mov
and
sti
shl
shll
fistl
cmp
lret
rcl
fidivs
test
shl
shll
fcmovnbe
cmpsl
sbb
outsl
mov
and
in
pushl
lea
stos
mov
sbb
push
call
mov
and
jb
lea
stos
mov
sbb
push
repz
adc
cmp
mov
and
icebp
sar
roll
mov
mov
sbb
mov
repz
rcl
std
mov
and
jmp
fidivrl
pushl
into
mov
and
xlat
in
sub
xlat
pop
mov
and
jb
jecxz
mov
mov
pop
xchg
into
out
lret
rcl
in
xlat
and
jmp
fidivrl
pushl
into
lret
dec
or
or
rcl
add
lret
add
popa
cmp
fistpll
repz
dec
cmp
add
cmp
dec
dec
or
mov
add
sbb
and
jmp
fidivrl
pushl
into
rorb
xchg
push
call
mov
pop
test
test
sar
rorl
iret
mov
iret
test
test
in
mov
dec
mov
sbb
cmp
fidivrl
pusha
test
fneni(8087
cmp
es
and
ljmp
mov
xchg
or
call
mov
in
test
test
rorl
push
xchg
out
test
movsl
cmp
cmp
test
test
rorl
rcll
pop
mov
pop
test
test
rorl
shll
popa
cmp
dec
or
xor
add
dec
or
aam
inc
cmp
or
test
test
add
std
jb
in
fisubrl
cmp
test
test
rorl
rcl
add
test
test
rorl
rcl
imul
mov
fidivrl
push
mov
in
push
out
mov
sub
or
mov
sub
or
mov
and
jb
lea
shll
mov
and
in
jb
lea
shll
shl
mov
add
popa
cmp
test
adc
cmp
pop
cmp
sub
insl
mov
imul
sub
popa
cmp
out
cmp
cmp
pop
cmp
sub
or
mov
and
ljmp
mov
mov
imul
pop
call
ljmp
mov
popa
or
add
ljmp
lea
shll
xlat
std
rolb
mov
pop
test
test
rorl
ror
mov
and
in
jb
lea
shll
or
cmp
mov
sbb
jb
dec
pop
add
shll
inc
fcmove
and
cmp
test
test
rorl
sarl
call
mov
pop
add
mov
and
in
sar
rorl
adc
add
add
dec
or
and
sub
rorb
shlb
cmpsl
and
ss
test
and
loope
pushl
lea
stos
mov
sub
cmp
mov
sub
loop
cmpsl
imul
or
mov
pop
test
sar
test
rorl
and
roll
shl
mov
mov
imul
sbb
cmp
mov
imul
cmp
mov
sub
mov
and
mov
and
cmp
arpl
and
cmpsl
iret
xchg
jmp
pop
js
cmp
mov
and
ss
roll
mov
shlb
sbb
mov
and
cmp
push
jb
jmp
sbb
cmp
mov
and
test
mov
jecxz
mov
pop
mov
loope
out
cmp
cmp
pop
fldcw
shr
pop
test
insb
mov
cmp
cmpsl
add
call
jecxz
rorl
insb
shl
mov
inc
shr
add
cmpsl
lea
test
pop
ss
rorl
sub
cmpsl
add
test
pop
rorl
loope
call
jp
cmpsl
dec
mov
dec
test
pop
rorl
loope
call
sub
popa
dec
out
cmp
xlat
pop
test
cwtl
cmp
cmp
sbb
test
pop
rorl
loope
call
xchg
out
pop
mov
mov
and
jecxz
rorl
mov
add
add
mov
std
test
mov
std
out
repnz
or
test
mov
and
lea
shll
sub
cmpsl
mov
mov
cmp
and
pushf
xor
pop
sub
mov
and
loop
ss
pushf
xor
rorl
jb
rcl
std
mov
and
lea
into
sar
mov
rorb
mov
outsb
mov
add
or
mov
xor
imul
imul
inc
mov
sbb
or
mov
xor
pop
mov
pop
test
rorb
mov
daa
inc
dec
or
mov
inc
mov
sub
inc
test
jns
cmp
mov
dec
or
pop
adc
or
or
pop
push
jae
cmp
mov
sub
lea
icebp
scas
cmp
mov
popa
jae
cmp
test
rorl
jb
rcl
fidivs
mov
sub
mov
fnop
xlat
outsb
or
pop
ljmp
and
lfs
in
in
pop
rorl
in
rclb
in
or
mov
and
mov
mov
scas
lret
or
mov
and
mov
shlb
xorb
cmp
pop
cmpsl
std
loopne
cmpsl
imul
cmp
pushl
pusha
mov
dec
loopne
cltd
cmp
outsb
mov
dec
mov
movsl
mov
fnstenv
lret
int3
mov
cmp
popa
cmp
shlb
cltd
movsl
cmp
sub
lea
cmp
mov
scas
lret
mov
repz
mov
and
sbb
sar
rorl
sub
shlb
pop
push
cmp
cmp
test
out
ss
rorl
iret
mov
pop
mov
pop
out
ss
sar
rorl
sub
je
jge
iret
test
mov
xlat
out
sub
xlat
data16
mov
data16
cmpsb
mov
rorb
int
fisubs
or
add
stos
fnstenv
in
cmp
mov
data16
sub
xlat
in
mov
and
push
ss
sar
mov
jge
in
out
mov
sub
and
mov
add
lea
or
mov
pop
mov
pop
test
push
ss
test
popa
xlat
iret
mov
outsb
rorb
mov
pop
mov
pop
out
ss
sar
rorl
outsb
test
push
divb
xlat
iret
test
cmp
cmp
xchg
callw
xlat
sbb
pop
cmpsl
std
loopne
cmpsl
sbb
fidivrl
pushl
pusha
mov
dec
loopne
cltd
movsl
outsb
or
pop
jmp
cmp
mov
outsb
mov
in
popa
cmp
mov
mov
test
fidivrl
std
jb
push
test
xchg
popa
cmp
mov
and
sbb
rorl
rcl
lea
pop
and
rcl
aas
dec
or
stos
sbb
inc
dec
or
inc
sbb
inc
rorb
dec
or
and
movsl
pop
aaa
shl
mov
cmp
cmp
cmp
cmc
mov
rorb
movsl
cmp
cmp
or
or
rorb
pop
addl
inc
dec
or
cmp
cmp
sbb
inc
rcrb
cmp
cmp
sub
or
cmp
cmp
sbb
inc
dec
or
cmp
cmp
or
cmp
cmp
sbb
inc
dec
or
cmp
cmp
or
cmp
cmp
xor
sbb
or
cmp
cmp
inc
shlb
in
xor
inc
dec
or
sub
xor
sub
sbb
inc
dec
or
and
push
or
cmp
cmp
fidivrl
sbb
inc
push
jae
cmp
cmp
out
insb
adc
cmp
pop
pop
sarl
cmp
fistpll
flds
cmp
pop
sub
cmp
cmp
fnstcw
fildll
rorb
pop
or
fnstenv
cmp
mov
push
cmp
mov
and
sbb
rorl
rcl
mov
and
sbb
sar
rcr
mov
mov
lea
xchg
test
cmp
mov
lea
data16
das
popa
cmp
xchg
pop
call
popa
cmp
mov
xchg
pop
call
popa
cmp
mov
dec
mov
test
mov
pop
mov
pop
test
out
rorl
rcl
mov
outsb
loop
lea
cmp
or
pop
loope
cmp
cmp
outsb
mov
jge
or
pop
xchg
cmp
cmp
fisttpl
or
pop
mov
jge
or
pop
xor
cmp
mov
das
popa
cmp
xchg
callw
int3
sbb
cmp
std
fistpll
call
cmp
outsb
mov
in
popa
cmp
mov
mov
out
ss
sar
rorl
dec
or
and
xor
sub
rcr
mov
cmp
add
mov
jbe
xchg
rolb
dec
cmp
cmp
cmp
mov
repz
jbe
subl
xlat
jbe
orl
mov
divl
cmpl
jbe
dec
or
popa
cmp
cmp
lahf
fidivrs
call
xchg
xchg
add
inc
repnz
stos
outsb
cmp
fcomip
test
cmpl
pop
shrl
or
dec
pop
outsb
jns
adc
adc
in
sub
out
lret
adc
adc
inc
testl
repnz
adc
add
add
and
dec
or
sub
adc
sbb
inc
dec
or
sub
xor
fisubrs
sbb
inc
psrld
in
add
xor
lea
std
mov
imul
popa
test
test
rorl
loope
call
pop
in
cmp
mov
imul
rorl
loope
call
pop
mov
cmp
mov
imul
shl
rorl
in
cmpsl
imul
shl
rorl
fidivs
mov
iret
mov
pop
rcll
mov
rcrl
test
test
lahf
pop
fiaddl
cmp
cmp
mov
push
cmp
push
mov
es
cmp
mov
imul
roll
rcll
mov
mov
dec
xchg
ss
mov
sub
popf
mov
mov
iret
mov
iret
mov
push
cmp
push
mov
mov
in
mov
in
mov
push
cmp
push
mov
test
call
pop
lret
shr
sub
mov
push
cmp
push
mov
mov
in
mov
in
mov
push
cmp
push
mov
test
call
pop
lret
shr
and
mov
sub
inc
popa
cmp
mov
sbb
push
cmp
and
push
jb
call
mov
sbb
and
push
cmp
push
jb
call
mov
in
lahf
lea
shr
sub
mov
shr
and
mov
push
cmp
push
mov
cmp
mov
add
hlt
rorl
loope
call
shlb
cmpsl
imul
shl
rorl
add
cmpsl
add
shl
rorl
shlb
mov
faddp
jecxz
rorl
shlb
mov
pop
mov
sbb
mov
mov
mov
sbb
mov
mov
test
test
pushl
push
cmp
loope
call
test
roll
test
push
cmp
std
test
jle
mov
pop
mov
pop
test
test
sbb
pushl
jmp
lahf
sbb
hlt
rcrl
shll
and
lea
mov
cmp
sbb
loope
lfs
mov
sbb
mov
pop
mov
pop
test
fcmovnb
push
cmp
pushl
loope
call
test
and
push
cmp
push
jb
lea
cmp
fidivs
push
mov
imul
mov
add
or
sar
rorl
adc
add
add
mov
mov
mov
cmp
mov
or
or
xchg
shlb
xor
pusha
test
daa
cmp
cmp
and
ficomps
popa
add
mov
pop
mov
stos
mov
mov
cmp
rcrb
push
ss
mov
and
sbb
shl
mov
push
pop
scas
mov
mov
mov
inc
shlb
cmpsl
and
cmp
push
ss
mov
and
fnstcw
dec
mov
call
xchg
mov
xchg
out
mov
test
out
ss
sar
mov
pop
rcr
cmp
and
xchg
cmpsl
mov
shl
inc
and
or
xchg
mov
lea
cmp
and
out
sbb
and
test
pop
cmp
cmp
and
mov
pop
shlb
mov
sarl
test
out
aaa
mov
rcrb
sbb
sar
mov
and
sbb
rcr
mov
push
pop
scas
mov
mov
test
mov
test
rcl
and
xchg
and
ljmp
mov
and
and
out
hlt
lds
and
call
xchg
mov
xchg
out
mov
test
out
rcll
sar
mov
test
mov
and
xchg
cmpsl
mov
out
dec
psrad
imul
nop
xchg
shlb
xor
cmp
mov
stos
mov
mov
pusha
test
out
cmp
out
and
mov
add
mov
pop
mov
stos
mov
mov
cmp
rcrb
push
ss
mov
and
sbb
shl
mov
push
pop
scas
mov
mov
mov
inc
shlb
pushf
xor
and
cmp
push
ss
mov
and
fnstcw
dec
mov
call
or
xchg
out
test
add
inc
repnz
adc
in
shl
test
xchg
mov
inc
mov
mov
shr
and
je
mov
cmp
mov
mov
into
mov
test
mov
and
adc
add
dec
or
mov
cmp
dec
or
lret
cmp
std
clc
cmp
dec
or
xchg
repz
pop
cld
cmp
dec
or
inc
mov
cmp
in
dec
cmp
dec
or
lret
cmp
sarl
mov
cmp
dec
or
pop
cmp
mov
and
je
mov
pop
test
mov
mov
cmp
cmp
cmp
cmp
imul
cmp
dec
or
pushf
out
cmp
pop
inc
repz
mov
pop
mov
and
test
pusha
lret
dec
cmp
je
shlb
lret
mov
and
cmpsl
dec
push
or
mov
add
test
stos
mov
je
mov
pop
lret
adc
cmp
cmpsl
std
mov
iret
mov
repz
in
mov
cmp
or
mov
cmp
xchg
fstp
mov
fmulp
lahf
insl
cmp
fs
mov
je
mov
cmp
cmp
repnz
stos
dec
cmp
scas
dec
or
cmp
cmp
imul
cmp
pop
pushf
cld
cmp
dec
or
mov
pop
xchg
movsb
cmp
dec
or
dec
call
add
xchg
jb
cmp
push
movsb
fistpll
cmp
jo
cmp
dec
or
popa
fistpll
cmp
in
out
cmp
dec
or
loopne
cmp
dec
or
push
adc
pop
pop
cmp
cmp
shlb
cmp
mov
cmp
int
cmp
xchg
dec
or
jbe
cmp
pop
push
dec
cmp
mov
pop
mov
std
jae
jl
cmp
cmp
lahf
sub
xor
cmp
shlb
mov
in
pop
jecxz
cmpsl
in
stos
mov
std
jle
inc
add
mov
test
stos
mov
push
test
stos
mov
xchg
xchg
sub
and
fs
mov
imul
stos
lret
test
cmp
or
ja
ja
cmp
cmp
cmp
hlt
mov
lea
push
cmp
xchg
dec
test
cmp
and
adc
add
cmp
and
pushf
xor
or
sub
mov
and
inc
pushf
xor
repnz
sar
rorl
sub
xlat
and
pop
test
test
rorl
rcr
cmp
cmp
jb
lea
shll
mov
and
or
cmp
or
mov
dec
rorb
mov
and
ljmp
mov
rorb
mov
dec
jge
mov
mov
sub
or
out
sub
or
mov
sbb
cmp
rorb
mov
repz
pop
lea
cmp
mov
and
ljmp
mov
xchg
xchg
call
faddl
imul
sar
rorl
call
lea
xlat
and
jmp
fidivrl
pushl
into
xchg
shl
mov
dec
mov
rorb
mov
sub
xchg
push
test
mov
or
mov
and
cmp
jb
rcll
cmp
add
mov
out
repz
psrad
sub
cmp
cmp
test
shlb
sbb
xlat
and
xlat
sbb
mov
mov
dec
or
add
cmp
mov
mov
pusha
dec
mov
xlat
pop
pop
dec
sub
jge
cmp
jl
mov
mov
test
xlat
and
cmp
test
adc
mov
mov
push
mov
push
dec
or
repz
cmp
or
mov
mov
pusha
adc
inc
add
or
dec
or
pop
cmp
cmp
adc
test
cmpsb
dec
jo
jnp
or
out
imul
or
cmp
test
xchg
adc
sbb
push
test
xchg
mov
daa
inc
add
add
psrld
mov
mov
cmp
pop
jge
call
and
cmp
ret
call
cmp
pop
dec
jp
or
pop
dec
rcl
or
pop
dec
mov
int3
inc
cmp
cmp
or
pop
int3
inc
cmp
cmp
or
pop
int3
cmp
cmp
or
pop
int3
push
cmp
cmp
or
pop
int3
repz
cmp
rorb
pop
int3
dec
popa
cmp
rorb
pop
int3
movsl
popa
cmp
rorb
mov
aas
popa
cmp
loop
lahf
xor
fnstenv
cmp
lea
xor
cmp
call
shr
std
shr
pop
dec
or
xchg
and
mov
rcl
in
lahf
fidivs
in
call
mov
test
test
test
icebp
cmp
push
jb
fnstsw
cmp
inc
roll
mov
mov
mov
test
out
cmp
cmp
imul
mov
adc
pop
or
mov
fidivs
mov
in
out
test
sar
lret
cmp
cmp
pop
roll
mov
mov
out
cmp
fidivrs
shr
or
mov
in
mov
iret
out
mov
or
xor
rorb
std
adc
gs
mov
imul
std
movsb
push
adc
mov
mov
mov
fidivs
mov
in
inc
and
lea
pop
mov
roll
mov
test
sbb
call
mov
in
lahf
fidivs
xchg
mov
inc
mov
inc
roll
mov
mov
mov
test
or
cmp
mov
pop
or
pop
mov
cmp
mov
scas
mov
add
es
outsb
mov
jbe
repnz
or
mov
ds
loope
xlat
shlb
xchg
xchg
pushf
lret
imul
imul
mov
in
mov
data16
mov
mov
lods
lret
icebp
mov
sub
call
je
sub
or
shr
dec
or
mov
cmp
mov
and
mov
call
mov
add
mov
add
jae
or
shlb
or
out
and
pusha
mov
iret
mov
pop
add
or
xchg
or
adc
in
and
adc
add
sbb
cmp
aad
cmp
mov
sub
mov
shlb
testb
shll
lods
sub
shlb
cmp
pop
test
pusha
adc
cmp
in
test
pop
mov
test
mov
sub
xchg
loop
pop
mov
sub
push
test
add
sbb
and
out
sub
mov
push
and
call
mov
sub
dec
repnz
cmpsl
mov
out
ds
sub
sbb
pushf
xor
and
pushf
xor
psrld
or
dec
or
lock
xor
or
out
mov
and
pushf
xor
ljmp
push
cmp
sbb
xlat
sbb
jmp
fidivrl
pushl
into
test
sbb
push
cmp
cmp
test
sar
test
fidivrl
into
mov
and
sti
shl
shll
fisttpl
into
mov
pop
mov
pop
out
test
sar
test
shl
mov
mov
and
sti
rcr
shll
or
jecxz
xlat
add
sti
rcr
shll
or
sar
test
shl
mov
mov
and
sti
rcr
shll
or
jecxz
cmpsl
pop
mov
and
jmp
fidivrl
pushl
into
lret
xlat
imul
sar
rcr
mov
mov
and
sti
shll
jecxz
mov
je
xchg
sbb
mov
cmp
repnz
popa
mov
pop
xchg
adc
add
add
psrld
pop
and
imul
xor
pop
mov
pop
ret
pushf
xor
out
test
pushl
lea
stos
mov
sub
cmpsl
pop
test
lret
lret
test
pusha
sar
rorl
dec
xchg
fisubrs
cmp
mov
dec
mov
sub
fdivrp
int3
movsl
lods
test
sar
inc
xor
call
dec
pop
movsl
lods
shr
dec
or
repnz
movsl
lods
shr
xchg
xchg
pop
movsl
lods
test
rcl
std
shr
pop
rorb
cmpsl
iret
mov
mov
dec
test
in
cmp
lods
frstor
mov
andl
or
cmp
mov
rol
cmp
mov
and
cmp
mov
mov
dec
mov
mov
sub
mov
stos
mov
test
stos
mov
mov
cmpsl
pop
mov
add
cmp
mov
std
out
std
cmp
call
jmp
shl
mov
pop
test
or
mov
adc
iret
mov
in
mov
iret
test
xlat
std
test
test
pop
cmp
std
jb
cmp
cmp
add
into
mov
test
arpl
cmp
sub
cmp
mov
sbb
leave
push
push
in
cmp
or
pop
in
mov
test
or
push
push
test
cmpsl
and
test
stos
cmp
cmp
inc
and
or
in
ret
mul
or
inc
push
ret
sbb
pop
jecxz
cmpsl
and
popa
cmp
out
add
test
out
cmp
dec
or
loop
cmp
dec
or
iret
int
cmp
repz
idivb
cmp
sub
cmp
mov
sub
cmpsl
pop
lret
jle
cmp
test
stos
mov
pop
test
stos
subl
cmp
rorb
dec
or
mov
cmp
dec
or
in
cmp
dec
or
sbb
sub
cmp
test
stos
mov
pop
je
mov
pop
subl
cmp
cmp
and
xlat
test
daa
cmp
cmp
or
add
or
mul
or
sub
xlat
ret
es
push
cmp
push
inc
lods
test
adc
bound
cmp
or
jbe
or
mov
or
pop
push
ret
jle
clc
shrl
test
inc
test
adc
cmp
or
mov
in
aaa
push
cmp
fidivrl
xlat
fidivs
xchg
push
stos
testl
xlat
push
mov
test
sarl
cmp
or
mov
and
dec
xchg
sar
push
xchg
push
inc
or
push
mov
inc
mov
xchg
fidivrl
xlat
inc
mov
xchg
inc
jno
adc
lret
or
sar
mov
iret
mov
in
mov
iret
mov
lods
test
test
pop
cmp
std
jb
adc
cmp
cmp
add
into
mov
test
ja
cmp
test
jo
cmp
rol
xor
imul
rorl
roll
mov
pop
mov
pop
test
dec
sar
rorl
xchg
adc
add
cmp
sarb
rclb
sbb
and
pushf
xor
add
mov
pop
or
xchg
mov
sbb
pop
mov
test
rorl
rcl
pop
dec
or
lock
xor
in
out
dec
or
sub
cmp
mov
mov
and
jb
in
lea
shll
mov
pushl
into
test
roll
mov
imul
cmp
roll
pop
rorb
mov
pop
mov
imul
pop
in
and
cmp
test
test
rorl
ror
imul
imul
ljmp
lea
shll
mov
pushl
into
je
mov
imul
mov
pop
test
test
rorl
rcl
pop
dec
or
mov
xor
fisubl
cmp
cmp
test
std
jb
mov
fidivrl
push
mov
pop
fisttpl
or
push
push
pop
test
inc
test
rorb
mov
add
lea
ljmp
xlat
imul
or
and
cmp
or
mov
and
ljmp
mov
popa
or
mov
and
ljmp
mov
push
or
mov
sbb
in
jb
lea
shll
lcall
mov
pop
test
test
sar
rorl
xlat
pop
and
rcll
mov
out
out
or
and
xor
pop
mov
rorb
mov
ds
xor
cmp
shlb
popa
cmp
mov
lret
xlat
pop
mov
and
ss
and
dec
rorl
jb
rcl
in
mov
and
lea
or
jb
rcl
std
mov
pop
mov
lea
or
mov
pop
mov
cmpsb
mov
pop
and
or
out
mov
cmpsb
mov
pop
mov
movsl
and
mov
pop
mov
cmpsb
lret
lret
movsl
rorb
xlat
and
cmp
jb
rcl
ds
and
or
jb
lea
rcl
ds
and
dec
sar
rorl
repz
cmpsl
ds
or
adc
sbb
ret
inc
fcmove
idivb
cmp
test
or
lea
jb
rcl
std
mov
lret
rorb
call
lea
jecxz
cmp
or
dec
or
lock
xor
iret
mov
iret
test
or
lea
jb
rcr
or
mov
or
out
mov
iret
mov
iret
test
or
lea
jb
rcr
call
mov
in
rorb
mov
iret
mov
dec
je
rorb
mov
ds
ds
repz
mov
iret
xchg
push
adc
or
mov
dec
mov
ds
mov
iret
je
ficompl
and
dec
or
sub
adc
sbb
rorb
pop
or
rorb
pop
or
rorb
pop
or
rorb
mov
and
or
lea
jb
rcl
iret
fcmove
lret
mov
inc
test
dec
lret
ret
call
mov
pop
mov
pop
test
or
jb
lea
rcl
std
shr
in
lahf
in
or
rorl
jb
sbb
call
mov
pop
test
sar
test
lea
shll
ljmp
pushl
into
lret
xlat
iret
shr
aas
xchg
push
call
mov
pop
test
or
lea
jb
rcr
dec
pop
or
mov
and
or
jb
lea
shll
mov
and
or
lea
jb
rcr
dec
pop
or
mov
imul
test
test
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
sbb
cmp
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
ds
ds
mov
test
test
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
add
cmp
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
sbb
cmp
dec
rorl
jae
mov
imul
test
rcr
test
sar
mov
push
shll
ds
test
rcr
test
sar
mov
push
shll
imul
fidivrl
pushl
into
push
push
test
xor
or
mov
ds
mov
test
sar
test
lea
shrl
aad
xlat
sbb
add
ljmp
pushl
into
push
shll
add
cmp
fcmovnb
pushl
into
push
shll
sbb
rcr
sar
mov
push
push
test
imul
cmp
mov
mov
test
sar
test
lea
shrl
aad
xlat
ds
mov
ds
test
rcr
test
sar
mov
push
shll
imul
test
sar
mov
push
shll
ds
test
test
rcr
sar
mov
push
push
test
and
cmp
mov
add
cmp
dec
rorl
jae
mov
imul
test
rcr
test
sar
mov
push
shll
sbb
cmp
fcmovnb
pushl
into
push
shll
add
rcr
sar
mov
push
push
call
mov
cmp
and
dec
sar
rorl
std
mov
pop
mov
pop
mov
pop
mov
pop
test
test
std
jb
sbb
call
test
out
and
std
and
push
jb
push
mov
mov
inc
mov
and
dec
sar
rorl
std
xchg
push
test
insl
and
cmp
test
or
jb
lea
shll
mov
pop
mov
pop
test
or
lea
jb
rcr
popa
cmp
ret
sarb
call
mov
and
or
jb
lea
shll
mov
pop
mov
pop
test
or
jb
lea
shll
mov
pop
mov
pop
test
or
lea
jb
rcr
pop
or
mov
and
or
lea
jb
rcr
pop
or
mov
in
lret
or
cmp
inc
cmp
ds
xor
or
mov
and
or
jb
lea
shll
mov
pop
mov
pop
test
or
jb
lea
shll
mov
pop
mov
pop
test
lea
or
jb
rcr
call
lret
mov
and
lea
or
jb
rcr
call
lret
mov
repz
inc
popa
sub
rorb
xlat
pop
test
sar
test
lea
shll
xlat
and
fcmovnb
fidivrl
pushl
into
lret
xchg
shrl
mov
sub
and
adc
add
add
mov
es
xor
cmp
or
mov
sub
mov
dec
mov
test
sub
sti
cmp
or
rol
jb
pop
cmp
jns
imul
add
and
xchg
hlt
call
ss
mov
jmp
fiaddl
cmp
mov
sub
mov
dec
test
test
shr
imul
imul
imul
mov
imul
push
rclb
sbb
xchg
fucom
push
call
cmp
jbe
call
into
fnstsw
cmp
neg
inc
cmp
cmp
mov
sub
cmp
call
test
mov
mov
sbb
mov
roll
rorl
jb
push
mov
repz
mov
mov
sub
lods
test
in
cmp
xchg
roll
mov
mov
xchg
xchg
inc
xchg
sbb
add
push
inc
sub
push
cmp
inc
sub
sub
mov
dec
mov
sub
movsl
lods
test
ss
adc
std
jb
xchg
test
lret
cmp
cmp
sbb
mov
call
dec
mov
mov
add
orl
mov
repnz
adc
add
add
or
mov
dec
test
push
cmp
fidivrl
xlat
sub
jb
xlat
inc
inc
jno
adc
mov
shlb
or
mov
inc
popa
cmp
mov
mov
outsb
mov
inc
popa
cmp
mov
lret
mov
outsb
mov
sbb
cmp
cmp
cmp
cmp
fchs
cmp
leave
mov
sub
cmp
fidivrl
xlat
sub
test
test
and
and
loop
call
cmp
ds
repz
dec
cmp
sub
mov
sub
cmp
fidivrl
xlat
sub
xchg
sar
mov
mov
xchg
push
out
mov
repz
ds
push
cmp
fidivrl
xlat
repz
ds
test
xlat
data16
test
or
shlb
adc
add
psrld
cmp
loop
lahf
outsb
mov
xchg
ficomps
lods
adc
xchg
hlt
call
pop
stos
cmp
cmp
lods
call
pop
insl
cmp
cmp
lods
call
pop
in
cmp
cmp
lods
call
pop
bound
cmp
lods
call
pop
cmp
ss
movsl
lods
test
mov
cmp
xchg
fisubrs
cmp
daa
cmp
cmp
lods
call
pop
and
cmp
mov
lods
call
xlat
mov
lods
call
andl
call
pop
sub
mov
or
cmp
cmp
cmp
cmp
call
cmp
ds
repz
dec
cmp
sub
fidivl
cmp
mov
sub
fstl
aaa
sti
cmp
pushl
pop
roll
test
fnsave
adc
mov
mov
shr
repz
mov
stc
mov
repz
ds
sub
mov
dec
mov
sub
or
mov
lods
test
sti
cmp
add
std
jb
rol
jb
pusha
mov
test
fnsave
mov
mov
sub
movsl
lods
test
out
cmp
cmp
mov
lret
fidivs
mov
divl
pop
movsl
lods
mov
sub
test
sar
mov
roll
lret
cmp
cmp
xchg
lret
xlat
sub
mov
ds
fsubp
and
push
and
lods
mov
lods
shl
test
pop
xor
hlt
xor
ljmp
cmp
mov
sub
fstl
aaa
sti
cmp
pushl
pop
roll
test
fnsave
adc
ffree
fcmovnbe
call
mov
sub
mov
dec
test
mov
lods
test
sti
cmp
pushl
pop
test
add
fnsave
insl
cmpsl
ds
divl
mov
ds
repz
ds
repz
ds
mov
mull
lods
test
sti
cmp
pushl
pusha
roll
test
fnsave
std
jb
shll
sbb
pop
movsl
lods
mov
sub
test
mov
mov
repz
mov
lret
call
and
jecxz
test
sbb
pop
movsl
lods
mov
sub
adc
out
and
lods
mov
sub
outsb
ret
hlt
mov
lret
xor
mov
mov
lods
loopne
call
loop
call
cmp
repz
dec
cmp
sub
ror
mov
repnz
adc
add
add
mov
rcl
sbb
rorb
dec
or
repnz
movsl
lods
rorb
mov
sbb
push
cmp
push
cmp
call
fldenv
adc
jmp
cmpsl
and
cmp
dec
pop
or
cmp
sub
mov
cmp
dec
cmp
add
call
cmp
sbb
repnz
mov
and
stos
sub
cmpsl
mov
mov
cmp
test
or
pusha
xchg
fcmovne
dec
or
adc
sti
in
dec
or
out
pop
dec
inc
dec
or
dec
cmp
mov
gs
dec
or
mov
mov
mov
mov
test
mov
sarb
mov
or
int3
and
out
pop
sub
or
jmp
or
inc
shrl
fmuls
push
adc
dec
test
fwait
shll
out
lds
cmp
cmp
cmp
push
cmpsb
cmp
cmp
out
add
iret
test
jge
sub
cmp
push
call
mov
fwait
inc
test
pop
jae
cmp
cmp
xchg
mul
cmp
fwait
xchg
test
daa
jnp
cmp
cmp
cmpsl
cmp
and
cmp
mov
fwait
xchg
test
aas
jnp
cmp
cmp
xchg
add
test
xchg
test
daa
jnp
cmp
cmp
std
test
cmp
lret
std
test
xchg
call
lahf
dec
mov
shl
inc
ds
xchg
call
faddp
jecxz
inc
ds
xchg
call
jmp
add
sub
cmp
and
stos
dec
cmp
jg
popa
mov
pop
popa
ss
popa
mov
lea
inc
lret
xchg
cmpsl
mov
mov
cmp
mov
shl
dec
or
repnz
movsl
lods
rcl
pop
dec
or
xchg
pop
movsl
lods
rcl
sbb
pushf
xor
and
pushf
xor
fimuls
pop
movsl
lods
rcl
in
or
loop
movsl
lods
rcl
aas
mov
add
cmp
jecxz
mov
add
rolb
adc
mov
rorb
pop
or
rorb
mov
inc
pushf
xor
push
pop
movsl
lods
shlb
mov
and
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
rcrb
cmp
cmp
test
test
fidivrl
into
mov
lea
in
shl
shll
fcmovnbe
push
sub
cmp
cmp
cmpsl
and
test
test
shl
shll
fcmovnbe
push
sub
cmp
cmp
test
test
fidivrl
into
mov
and
or
test
shl
shll
lea
hlt
shll
xchg
lret
or
rclb
out
cmp
mov
ds
ss
test
rorl
and
test
fidivrl
into
mov
and
hlt
ss
shll
fcmovne
into
mov
and
hlt
shll
jecxz
mov
lret
pop
pop
out
cmp
pop
or
cmp
cmp
mov
and
test
test
rorl
rcr
or
pop
inc
inc
cmp
cmp
mov
aad
cmp
cmp
cmp
shlb
or
mov
pop
test
push
cmp
fidivrl
xlat
std
mov
pop
test
xchg
mov
loopne
call
cmp
stc
lea
or
mov
pop
test
push
cmp
fidivrl
xlat
std
mov
pop
test
xchg
mov
loopne
call
cmp
testl
xlat
and
in
lea
shll
mov
fidivrl
fcmovnb
pushl
into
lret
xlat
and
fidivrl
fcmovnb
pushl
into
lret
xlat
and
fidivrl
fcmovnb
pushl
into
lret
or
cmp
cmp
xlat
lea
fcmovnb
fidivrl
pushl
into
rolb
pop
out
cmp
mov
dec
mov
mov
and
fidivrl
add
test
sar
mov
rolb
pop
out
cmp
mov
data16
data16
sar
test
rorl
and
mov
pushl
fidivrl
into
mov
and
jecxz
out
shll
fcmovne
into
rolb
pop
out
cmp
mov
and
sar
test
rorl
and
test
fidivrl
into
lret
xlat
and
test
fidivrl
into
pop
sub
cmp
cmp
mov
and
loope
xlat
iret
rclb
out
cmp
mov
jbe
hlt
ss
shll
fistpl
push
cmp
cmp
loopne
cmp
cmp
xor
xlat
sbb
fidivrl
pusha
mov
mov
add
ljmp
mov
mov
xchg
sub
mov
jle
jle
cmp
adc
push
sub
test
push
cmp
fidivrl
xlat
imul
sar
mov
repz
lret
or
mov
xchg
push
fnop
xlat
repz
divb
mov
mov
lret
shlb
data16
lret
cmp
cmp
xlat
repz
mov
add
adc
shlb
lret
mov
add
xlat
mov
sbb
fidivrl
xlat
add
dec
sar
mov
rorb
mov
repz
popa
cmp
mov
add
cmp
fidivrl
xlat
add
mov
test
dec
out
pop
mov
pusha
ficoml
cmp
mov
repz
movsb
sub
adc
rcl
divl
test
sarl
cmp
or
mov
in
std
jb
or
test
test
or
cmp
or
mov
imul
out
push
roll
mov
pop
test
adc
jle
adc
xlat
pop
test
or
std
jb
or
rcr
mov
pop
test
sar
mov
jle
sti
mov
mov
es
int
xchg
shll
or
test
sarl
cmp
or
mov
in
std
jb
or
test
cmp
sbb
test
or
rcll
test
mov
test
sarl
cmp
xchg
pop
movsl
lods
test
jg
pop
movsl
lods
call
jno
cmp
xlat
repz
xlat
jle
scas
sub
out
mov
mov
repz
xlat
sub
or
mov
popa
sub
or
cmp
xlat
imull
cmp
jae
xor
or
popa
or
dec
or
enter
rclb
xchg
test
push
cmp
fidivrl
xlat
inc
mov
xchg
jb
xlat
dec
mov
test
dec
mov
pop
rol
pop
mov
stc
xchg
sub
lret
rorb
mov
add
or
mov
sbb
fidivrl
xlat
add
dec
mov
sar
jge
ds
nop
cmp
mov
and
fidivrl
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
mov
and
in
shl
shll
fcmovne
into
rcrb
cmp
cmp
mov
lea
cmp
arpl
fcmovnbe
push
sub
cmp
cmp
cmpsl
and
test
test
shl
shll
fcmovnbe
push
sub
cmp
cmp
test
sar
test
into
mov
and
or
test
shll
jecxz
mov
mov
and
lea
arpl
xchg
lret
push
sub
cmp
cmp
test
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
pop
cmpsl
iret
shlb
pop
out
cmp
pop
pop
sbb
cmp
fbstp
test
faddp
fidivrl
pushl
into
fistps
push
cmp
cmp
mov
aad
cmp
cmp
cmp
popa
cmp
rorb
mov
sub
xlat
dec
mov
imul
shl
mov
imul
jb
cmpsl
imul
test
push
cmp
push
cmp
call
test
test
fcmovne
into
mov
imul
jb
call
cmp
push
cmp
call
test
test
fcmovne
into
mov
imul
jb
call
cmp
push
cmp
call
lahf
pop
test
mov
lret
fnstcw
call
cmc
pop
cmp
mov
repnz
adc
add
add
psrld
test
or
xchg
pop
movsl
lods
cmp
rorb
dec
or
repnz
movsl
lods
rorb
dec
or
and
and
xor
sbb
pushf
xor
sbb
pushf
xor
pop
and
rorb
mov
data16
inc
popa
cmp
mov
data16
data16
xor
cmp
scas
mov
in
mov
das
popa
cmp
rcrb
test
xchg
sbb
lahf
in
mov
iret
mov
adc
jb
jge
fistl
shlb
mov
repz
dec
pop
cmpsl
std
loopne
call
cmp
pop
or
cmp
sub
call
cmp
add
pop
or
rorb
mov
data16
outsb
rolb
dec
cmp
cmp
cmp
rolb
mov
outsb
rolb
mov
outsb
rolb
dec
add
cmp
cmp
insl
mov
data16
data16
xor
cmp
mov
je
rorb
mov
and
and
adc
add
popa
cmp
psrld
jg
pushf
xor
push
cmp
mov
repz
pushf
xor
inc
push
cmp
dec
or
xchg
pop
movsl
lods
cmp
rorb
dec
or
repnz
movsl
lods
rorb
or
mov
imul
cmp
inc
mov
cmp
mov
inc
xchg
sarl
mov
cmp
pop
sbb
pop
out
mov
mov
mov
stos
push
shlb
mov
mov
dec
ds
popf
push
mov
rorb
mov
mov
shrb
add
cmp
out
add
cmp
pop
sbbl
cmp
out
pop
mov
cmp
pop
xor
cmp
cmp
inc
icebp
mov
cmp
mov
cmp
mov
mov
cmp
mov
add
cmp
fidivrl
xlat
add
cmpsl
adc
sar
mov
add
out
pop
mov
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
imul
inc
mov
add
cmp
fidivrl
xlat
add
xchg
sar
mov
add
out
and
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
leave
call
mov
sbb
fidivrl
xlat
add
xchg
sar
mov
add
pop
addr16
cmp
cmp
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
sub
mov
cmp
rorb
mov
pop
mov
shrb
mov
rcr
add
cmp
mov
lea
cmp
shr
lea
pushf
xor
test
jle
cmp
jge
lea
cmp
mov
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
mov
cmp
out
sub
cmp
cmp
mov
mov
cmp
out
stc
mov
cmp
pop
and
idivb
cmp
out
cld
mov
cmp
pop
and
push
cmp
cmp
cmp
cmp
add
pop
cmp
cmp
cmp
cmp
rorl
cmp
cmp
mov
mov
cmp
mov
repz
ss
mov
rorb
daa
cmp
mov
dec
mov
dec
test
rorl
jb
rorl
sub
cmp
cmp
daa
cmp
fnstenv
test
rorl
jb
rcr
or
cmp
fnstenv
popa
cmp
dec
or
cmp
adc
mov
ds
rorb
mov
pop
or
push
mov
cmp
mov
dec
mov
dec
ret
mov
test
sar
rcr
mov
mov
imul
push
test
xchg
jae
cmp
test
faddp
pushl
into
mov
imul
push
mov
dec
mov
dec
test
faddp
pushl
into
mov
imul
push
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
out
and
cmp
mov
mov
cmp
out
in
mov
cmp
mov
mov
cmp
out
inc
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
in
iret
out
dec
mov
pop
jle
cmp
out
cmp
cmp
cmp
or
cmp
in
sti
jmp
cmp
cmp
in
std
mov
cmp
cmp
in
and
or
mov
cmp
cmp
in
arpl
mov
repz
repz
cmp
pushl
into
add
lahf
repz
shl
test
push
jb
jmp
into
test
rcll
mov
repz
repz
shl
test
push
jb
jmp
lahf
pop
out
lds
cmp
sarl
mov
repz
repz
test
jb
jecxz
mov
mov
pop
lret
cmpsl
repz
repz
test
jecxz
roll
mov
out
sub
xlat
pop
xchg
into
adc
xlat
repz
repz
cmp
pushl
into
rcrb
cmp
mov
dec
mov
dec
test
jb
fidivrl
into
pop
cmpsl
iret
shlb
pop
sub
and
rcl
das
out
dec
mov
mov
and
rcrb
mov
and
mov
dec
jb
rcrb
rcrb
rcrb
rcrb
rcrb
rcrb
mov
dec
add
pop
and
out
jb
rcrb
aas
mov
or
xlat
dec
mov
dec
test
test
fidivrl
into
mov
dec
mov
dec
test
shl
pop
rcl
cmp
jmp
mov
rcrb
xlat
dec
mov
dec
test
cmp
pushl
into
mov
dec
pop
rcl
das
test
mov
dec
shl
test
push
jb
jmp
mov
rcrb
xlat
dec
mov
dec
test
sar
test
into
mov
dec
mov
dec
test
shl
test
push
jb
jmp
rclb
sbb
cmp
mov
dec
mov
dec
test
sar
test
into
mov
dec
mov
dec
test
shl
test
push
jb
jmp
rclb
cmp
mov
repz
repz
test
fidivrl
into
mov
repz
repz
test
jecxz
roll
mov
lret
pop
daa
cmp
mov
dec
mov
dec
mov
sub
cmp
pushl
into
pop
or
cmp
rolb
pop
sub
or
lea
out
cmp
mov
repz
repz
mov
test
rcr
sar
mov
rolb
pop
sub
or
mov
dec
test
rorl
jb
shl
pop
or
cmp
fnstenv
test
rorl
jb
rcr
or
cmp
fnstenv
fidivs
test
test
mov
sub
lea
jb
rcrl
cmp
rclb
sub
or
lea
xlat
repz
repz
push
ss
mov
rolb
pop
sub
inc
mov
cmp
repz
cmp
cmp
mov
cmp
cmp
mov
cmp
mov
mov
cmp
mov
mov
cmp
out
pushl
cmp
cmp
mov
cmp
out
pop
mov
cmp
pop
enter
pop
pop
cmp
cmp
cmp
cmp
icebp
mov
mov
cmp
pop
enter
pop
sbb
cmp
mov
cmp
out
pop
mov
mov
cmp
mov
mov
cmp
mov
cmp
mov
test
shrb
and
cmp
pop
mov
dec
or
cmp
cmp
mov
or
cmp
cmp
xchg
mov
shrb
mov
mov
repz
repz
in
test
sar
rorl
repz
test
sar
rcrl
mov
test
out
insb
ret
adc
inc
cmp
cmp
sub
cmp
mov
repz
repz
xchg
push
jb
ljmp
cmp
cmp
cmp
test
pop
shll
or
push
mov
cmp
cmp
pusha
sbb
repz
repz
pop
shll
or
push
mov
cmp
cmp
test
cmp
push
jb
ljmp
xlat
repz
test
sar
rcrl
mov
test
out
insb
ret
adc
mov
mov
cmp
cmp
inc
jno
adc
or
mov
sub
shlb
add
mov
xchg
cmp
fidivrl
xlat
xchg
xchg
mov
mov
imul
das
popa
cmp
fstps
imul
cmp
sar
lea
cmp
mov
add
cmp
fidivrl
xlat
add
mov
imul
cmp
mov
xchg
push
test
cmp
cmp
xchg
add
shlb
rclb
in
or
mov
in
xlat
in
test
push
cmp
fidivrl
xlat
in
cmpsl
in
test
xchg
mov
loopne
call
cmp
shr
cmp
mov
in
xlat
in
test
push
cmp
fidivrl
xlat
in
cmpsl
in
test
xchg
mov
loopne
fwait
inc
popa
cmp
sar
cmp
lea
mov
cmp
mov
mov
scas
lret
xlat
sub
test
sarl
cmp
or
mov
fiadds
inc
mov
mov
sub
push
out
mov
in
popa
cmp
dec
cmp
pushf
xor
dec
mov
repz
idivl
call
cmp
outsb
cmp
data16
lea
cmp
rorb
sbb
cmp
mov
mul
sbb
mov
mul
sbb
mov
sbb
cmp
mov
not
andl
cmp
imul
and
adc
add
pop
pop
out
stc
rorb
es
cmp
dec
shll
stc
cmp
cmp
pop
shll
repz
call
cmp
outsb
cmp
data16
ds
repz
dec
cmp
sub
mov
sub
shll
add
or
pop
sub
cmp
mov
es
or
pop
sarb
cmp
cmp
outsb
cmp
outsb
cmp
outsb
mov
add
fidivs
es
pop
or
rcl
sub
es
mov
es
mov
es
cmp
mov
mov
sub
jge
test
daa
popa
cmp
mov
mov
mov
scas
pop
movsl
inc
fnstenv
mov
sub
test
pushf
popa
cmp
mov
sub
je
lret
cmp
inc
popa
cmp
mov
es
or
or
popa
cmp
mov
es
cmp
mov
rcl
es
mov
es
cmp
mov
rcl
es
mov
es
cmp
mov
mov
rcl
es
mov
es
cmp
mov
mov
rcl
es
mov
es
mov
in
popa
cmp
mov
in
popa
cmp
mov
mov
inc
pushf
xor
out
rorl
push
rcl
es
dec
shll
sub
cmp
cmp
out
mov
es
cmp
mov
out
and
call
jbe
out
jbe
out
jbe
out
jbe
shll
jle
fiadds
adc
cmp
outsb
cmp
outsb
mov
add
fiadds
add
out
ds
idivl
fiadds
divb
rcl
sub
out
mov
es
cmp
sub
sub
iret
popa
cmp
shlb
shll
sub
pushf
xor
sub
out
ss
rorl
es
xchg
shr
mov
es
mov
iret
popa
cmp
cmp
and
popa
cmp
cmp
testl
rcl
es
mov
es
mov
es
cmp
mov
popa
sub
add
cmp
sub
lea
cmp
shll
add
cmp
mov
mov
popa
sub
cmc
adc
push
inc
push
sahf
mov
imul
xor
add
add
inc
cmp
outsb
outsb
imul
outsl
bound
imul
imul
addr16
outsb
gs
outsl
insl
jns
ja
data16
xor
outsl
jae
gs
push
jo
push
push
arpl
popa
gs
outsl
insl
jns
ja
data16
xor
jae
gs
jae
bound
popa
ja
outsl
inc
jb
jae
popa
imul
je
outsl
popa
ja
gs
popa
gs
push
ret
jnp
adc
ja
outsl
arpl
insb
outsb
outsl
je
insl
insl
je
outsl
dec
outsb
je
jae
push
gs
outsb
popa
jo
jo
gs
popa
gs
push
ret
jnp
adc
popa
ja
jb
outsl
jo
jb
inc
outsl
jae
outsl
outsb
je
gs
popa
fs
jne
popa
jb
insb
outsl
js
imul
ret
jnp
adc
bound
add
bound
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
push
and
add
add
addb
add
add
add
add
add
add
add
or
add
add
rcrb
add
add
in
add
inc
dec
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
les
popa
cmp
pop
rol
pop
rol
pop
rol
pop
rcrl
pop
les
les
insl
and
push
les
les
les
les
les
les
sub
inc
inc
test
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
les
les
les
repnz
xchg
les
les
les
es
push
ja
daa
les
les
les
ds
les
les
mov
sbb
add
rol
pop
sar
and
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
aaa
pusha
xor
pop
rol
pop
rol
pop
shll
mov
les
les
or
les
les
les
shrl
les
les
les
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
inc
pop
rol
pop
shll
imul
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shr
mov
les
jle
ja
pop
rol
pop
rol
pop
rol
pop
rcll
rol
pop
rol
pop
rcll
dec
les
les
les
les
inc
push
dec
les
add
pop
shll
rol
pop
shrl
aad
pop
rol
pop
rol
pop
rol
pop
rorl
in
les
loopne
or
pop
rol
pop
rol
pop
rol
pop
rol
pop
rcll
jge
les
inc
test
pop
js
pop
rol
pop
rol
pop
sarl
imul
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
mov
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rcr
push
dec
les
aam
lret
roll
rol
pop
rorl
push
shll
push
aad
ror
sbb
rol
pop
rol
pop
rol
pop
rol
pop
rcll
push
in
pop
les
les
les
les
les
les
les
les
les
les
les
les
les
les
stos
mov
les
les
les
les
les
les
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
shl
mov
loop
dec
dec
subl
les
les
les
les
les
les
les
adc
mov
stos
mov
inc
les
les
les
xorb
les
les
les
les
les
add
pop
rol
pop
rol
pop
rol
pop
rcll
xchg
jns
pop
rol
pop
rol
pop
roll
les
les
les
les
adc
pop
les
inc
inc
push
les
and
jnp
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
lods
bound
in
les
les
cli
repz
les
les
out
loopne
xchg
xchg
les
les
les
les
les
les
push
xchg
ret
rol
pop
rol
pop
rol
pop
roll
ret
rol
pop
rol
pop
rol
pop
rol
pop
shll
push
les
les
les
les
les
les
add
pop
rol
pop
rol
pop
sarl
dec
vmwrite
pop
rol
pop
rol
pop
rol
pop
shll
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
les
les
cltd
cmp
les
les
sahf
or
in
push
pop
rol
pop
rol
pop
rol
pop
shll
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
aas
les
inc
jnp
mov
jno
les
stos
mov
les
rclb
pop
push
sbb
out
pop
roll
lea
mov
jmp
pop
les
push
daa
mov
inc
les
les
les
xorb
les
les
les
les
les
les
les
les
mov
rcrl
push
xor
pop
rol
pop
rol
pop
rol
pop
rorl
les
test
xor
pop
rol
pop
rol
pop
rol
pop
rcll
imul
mov
les
les
les
les
les
les
les
out
fstpt
les
les
les
les
les
les
add
mov
jbe
les
and
inc
push
inc
in
pop
shrl
push
les
les
les
enter
pop
rol
pop
rol
jae
adc
inc
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
ror
push
les
fwait
bound
