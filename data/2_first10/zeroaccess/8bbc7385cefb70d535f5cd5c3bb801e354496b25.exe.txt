push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
in
pop
fisttpl
lds
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
dec
mov
idivl
in
enter
pop
pop
imul
sbb
jmp
xor
xchg
cmp
std
negl
sarb
inc
or
lds
xchg
daa
test
or
fmull
out
repnz
loope
repz
sbb
dec
pop
cmpsl
add
mov
sarl
mov
add
pop
sub
jmp
or
nop
movsl
mov
mov
cmpl
inc
mov
in
sbb
out
testb
xor
into
xor
out
les
inc
and
sub
pushf
fs
call
adc
sbb
push
loope
mov
jp
add
mov
shl
adc
shrb
lcall
dec
pusha
push
jp
out
pop
sar
jne
pushf
mov
cmp
in
sahf
dec
fnsave
in
test
clc
mov
jns
fs
jl
add
dec
ret
lcall
loop
sub
mov
sbb
xchg
cmp
fcomps
mov
sbb
addr16
pop
fcompl
lds
mov
add
sbb
jmp
pop
fisttpl
clc
inc
lock
imul
dec
cld
cli
push
ja
in
jns
push
shll
out
pop
in
aad
jbe
mov
test
sub
loopne
into
test
out
subb
repnz
jg
and
test
jecxz
aad
cli
push
lret
idiv
call
outsl
mov
cmc
pop
jns
sbb
mov
xchg
mov
repz
ds
add
jns
mov
lods
jl
push
sbb
in
pop
sbb
fistps
rolb
testl
div
mov
ds
lods
or
insb
dec
pop
mov
sub
scas
sti
or
aas
neg
je
stos
xchg
call
mov
mov
into
jl
insb
cs
push
lods
lret
mov
pop
adc
fdivrs
rol
stos
jmp
out
push
mov
mov
inc
loope
sbb
je
in
out
and
xor
or
dec
xor
push
mov
sti
pop
and
fs
dec
jge
aaa
mov
and
jnp
fs
mov
pop
pop
sub
in
or
inc
call
ret
les
dec
sub
nop
loopne
jno
daa
mov
mov
or
mov
inc
inc
pop
adc
xchg
scas
push
nop
sarb
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
pop
inc
loopne
adc
adc
adc
sub
cmpb
fnop
mov
sbb
add
lods
cld
das
cwtl
shlb
mov
jnp,pn
aam
ljmp
push
popa
fwait
adc
add
xchg
jbe
dec
in
movsl
sub
cmp
sbb
cmp
push
rcrl
fldcw
inc
in
scas
jp
pop
mov
loope
fwait
pusha
fcompl
orb
stc
stc
jne
add
stc
lods
cltd
adc
add
mov
int
jno
mov
shlb
fistps
out
call
loope
xchg
outsb
dec
pop
es
jnp
jns
aaa
jle
adc
inc
rcll
insb
sarb
push
pusha
push
scas
mov
mov
stos
aam
or
cmpb
sub
cmp
mov
and
mov
roll
mov
rolb
mov
aam
jl
mov
pop
pcmpgtw
popa
lea
adc
mov
stos
aaa
push
pop
sbb
pop
js
je
in
xchg
mov
repz
sub
cmpsl
mov
cwtl
and
sub
push
testl
jge
inc
xchg
fstp
inc
incb
in
push
push
jns
and
and
mov
jne
push
and
aas
sbb
negl
pop
outsl
cmp
sbb
filds
repz
mov
mov
sbb
mov
push
ret
andps
mov
test
adc
xchg
mov
test
cmp
test
mov
shlb
xor
clc
in
test
iret
xchg
or
mov
int
rol
sbbb
inc
int
jo
orl
pop
aad
push
js
nop
or
and
inc
xor
dec
pop
sbb
out
mov
xchg
out
mov
push
adc
mov
adc
loopne
fisubl
leave
mov
lcall
in
fdivs
ljmp
inc
push
insl
lea
lret
js
adc
pop
cmp
mov
jle
nop
mov
xor
xor
or
mov
rol
fcompl
xor
test
fucomp
mov
xchg
and
push
jo
and
jg
push
jns
fwait
lock
lret
insb
lock
sbb
jnp
jl
clc
sbb
mov
movsb
adc
cmp
movsb
jle
fcomip
mov
mov
aam
mov
movsl
fistl
jno
or
pop
sti
data16
sbb
mov
dec
xchg
enter
outsb
inc
test
in
lcallw
add
dec
jb
mov
pop
xchg
movsb
cmp
jne
and
push
lea
dec
rcll
fcmovb
das
nop
push
fisubl
or
mov
test
add
fcomip
add
adc
repz
jnp
inc
int
dec
pop
mov
dec
jp
dec
popa
leave
xor
pushf
movsb
add
arpl
cwtl
rorb
leave
inc
push
sub
icebp
push
push
scas
adc
ljmp
js
je
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
in
and
in
gs
xchg
loopne
mov
cmpxchg
lcall
out
mov
pop
shll
jl
or
in
cmc
aam
xor
dec
or
cmpsl
or
jle
aas
stc
or
or
out
mov
mov
shlb
dec
inc
sti
int3
mov
movsl
into
jns
iret
xchg
cmc
cmp
mov
xchg
add
adc
lea
call
cmp
in
fnstsw
xchg
inc
jb
mov
inc
xchg
pop
fs
insb
ss
push
gs
inc
scas
addb
lea
cltd
adcb
fyl2xp1
lahf
or
sbb
push
ffreep
xchg
es
push
ja
xlat
inc
in
push
pushf
jo
and
nop
pop
xor
test
xchg
push
pop
jle
div
dec
fldz
daa
push
ss
loopne
call
xorl
or
enter
cli
push
jbe
sub
adc
cli
cmp
ret
jmp
adc
std
lcall
cmp
jge
out
cli
cmp
js
dec
and
mov
cmp
mov
popf
adcl
imul
xchg
in
mov
pusha
mov
or
stos
inc
pushw
packuswb
lret
jle
imul
push
jno
lods
xchg
and
jbe
arpl
or
shrl
test
adc
movsl
jb
rcll
add
shrb
sub
fnstenv
out
and
and
push
add
xchg
outsl
mov
lahf
cmc
mov
or
es
cmc
pop
sbb
imul
cwtl
int
orb
xchg
mov
mov
imul
xchg
adc
das
jge
in
sbb
push
lcall
scas
out
mov
xlat
adc
xchg
sbb
pop
add
out
adc
jnp
mov
in
lret
sub
jecxz
mov
repz
je
or
pop
js
scas
push
psrlq
and
mov
iret
mov
jl
lret
xor
cmp
imul
cmp
arpl
ss
push
in
adc
call
scas
jl
aas
inc
or
push
mov
ja
xchg
sub
inc
xorl
mov
testb
stos
icebp
lods
xchg
mov
xor
cmpsl
int3
ljmp
lret
xchg
xchg
cwtl
call
or
jo
mov
mov
pop
cld
movsl
mov
pop
ljmp
popf
fnstsw
jno
mov
jecxz
std
popf
push
fsubrl
or
and
mov
lea
pushf
cli
pushf
push
fsts
add
iret
add
test
push
arpl
jg
in
sbb
sbbb
mov
xchg
jae
fimuls
out
push
imul
pop
adc
lret
xor
punpckhdq
mov
and
fs
cwtl
add
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
sbb
add
adc
adc
adc
ds
call
and
jo
jo
or
push
cmp
pushf
out
push
sbb
in
dec
jae
add
jle
dec
cmpsb
push
scas
cli
jecxz
inc
dec
js
in
gs
or
out
xor
fists
rcr
pop
add
sahf
jle
ret
xor
pop
nop
sbb
mov
fwait
imul
add
mov
clc
popa
in
inc
nop
movsb
pop
cmp
loope
inc
gs
cltd
rcrb
lods
jno
pop
add
or
mov
movsb
pop
and
sbb
nop
lea
mov
iret
movsb
pop
or
pop
xchg
ja
clc
out
mov
pop
cld
or
imul
or
push
push
add
fnstcw
cmp
ds
fcoms
gs
mov
add
push
mov
stc
dec
ret
jecxz
sarb
ret
mov
cmp
in
add
movsb
in
adc
scas
mov
adc
fdivrs
ret
adc
adc
aad
sub
add
jp
push
adc
cld
cmp
mov
aad
pop
sti
or
rcrl
dec
repz
dec
mov
and
ja
jb
dec
xor
unpckhps
in
pop
xchg
xchg
xchg
mov
xlat
jbe
inc
mov
mov
xchg
test
jbe
js
sub
cltd
lret
rolb
int3
pusha
jae
insl
aas
cli
fstpt
pop
gs
int3
push
inc
bswap
cmpsl
cmp
push
leave
std
test
jbe
push
push
cli
mov
lods
mov
incb
xchg
iret
pop
jb
int
shll
cmc
jb
mov
aad
pop
pushf
dec
jae
clc
pushl
xchg
jb
push
inc
test
sbb
ret
scas
fldenv
mov
mov
inc
adc
dec
cwtl
out
stc
mov
push
sbb
and
add
movsb
xor
jno
test
pop
loope
fcmovne
sbb
out
fistpll
ds
outsl
jno
in
jmp
or
mov
xchg
inc
test
aas
stc
mov
xchg
or
or
pop
dec
jnp
push
cmp
daa
pop
inc
sbb
mov
and
addr16
sti
daa
testb
hlt
mov
out
jbe
cmc
jae
cmp
ficoml
sbb
dec
adc
pop
mov
push
cmpl
push
xchg
dec
xlat
andb
push
int
jecxz
lret
aas
outsl
in
roll
cmpsb
mov
mov
pop
adc
push
push
mov
test
xchg
pop
lcall
sbb
dec
push
pop
outsl
das
lahf
sarl
jno
jne
fucomp
andl
xlat
adc
mov
aas
in
lret
add
sbb
mov
insl
sarl
outsl
fidivrl
nop
clc
pop
sub
mov
jp
ljmp
test
mov
adc
dec
leave
roll
inc
ljmp
sub
and
insb
add
pop
lea
sti
adc
adc
pop
lds
pop
mov
sub
ret
shll
sbb
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
jl
dec
mov
adc
adc
lahf
loopne
insl
popa
enter
mov
mov
xchg
scas
cmp
mov
push
push
sub
cmc
or
cmpb
leave
mov
adc
xlat
ficomps
adc
dec
xor
pop
addb
cmpsb
insb
lret
cmp
mull
push
xor
xor
stos
jge
pop
fsubr
pop
andl
outsl
lret
inc
les
jns,pt
mov
inc
mov
cwtl
xchg
and
dec
cmpsb
ljmp
imul
sbbl
divb
mov
jp
mov
lock
mov
mov
test
dec
push
pop
mov
repnz
pop
rorl
adc
jmp
jbe
jne
jae
jb
out
mov
daa
lret
dec
add
sbb
cmp
iret
andl
add
rcll
pop
imulb
xchg
cmp
mov
inc
sub
sbb
add
scas
mov
cmp
cs
cmpsb
mov
aaa
mov
in
lret
inc
sub
pop
rcll
je
orl
or
dec
rcrl
shrl
add
push
fildl
inc
pop
jle
lret
bound
out
mov
lods
test
inc
sahf
xchg
enter
inc
scas
insb
imul
ret
aad
jne
pop
test
xchg
pop
push
sub
outsl
sub
xchg
inc
lret
lds
mov
xchg
push
addr16
cs
test
arpl
jno
jl
push
add
arpl
pop
imul
jo
add
sti
inc
xchg
xchg
xor
pcmpeqw
dec
dec
push
sub
sarl
cmp
sbb
fwait
sub
cld
xor
stos
jecxz
sbb
mov
lods
popf
mov
in
cmpsb
fnstcw
and
xor
mov
mov
push
adc
and
pop
add
out
add
test
sub
sahf
jge
adc
or
pop
xchg
scas
mov
dec
in
jbe
jge
cmpsb
inc
aaa
popa
adc
cmc
lea
aaa
cmp
or
or
cli
push
js
enter
cli
les
out
outsl
xor
mov
scas
cmp
sub
pop
ds
pop
mov
aad
cmc
icebp
inc
into
mov
adc
inc
push
sub
outsl
popa
xor
mov
ficompl
ljmp
jne
push
rorb
sub
inc
fmuls
lahf
mov
mov
jmp
lock
or
mov
jo
sbbl
pop
je,pt
xor
sahf
out
inc
push
mov
mov
mov
std
mov
dec
sub
insb
xor
leave
push
dec
dec
bound
ljmp
mov
push
test
cmp
adc
cmp
mov
xchg
adc
and
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
insb
les
adc
adc
jnp
loop
popa
cmc
loope
shll
aad
cmp
loop
xchg
scas
sar
out
iret
jnp
addb
dec
pushf
out
add
and
lods
jae
sbb
xchg
leave
adc
or
lret
repz
clc
out
sti
adc
cmp
mov
jb
push
mov
sub
sbb
xor
decb
lahf
adc
mov
or
mov
out
imul
jno
cwtl
adc
int
rorl
mov
and
stos
cmp
shl
fisttpll
push
sbb
and
xchg
ds
mov
mov
scas
rcrb
cmpsb
fmuls
rep
add
jp
mov
out
cmp
divb
pusha
lock
in
aas
cmp
sbb
lds
popf
leave
inc
push
mov
dec
fsubp
rcrb
add
hlt
xor
rol
mov
dec
out
jmp
cmc
mov
sarb
lods
rclb
in
ljmp
lock
inc
dec
dec
push
in
popf
testb
fiaddl
xchg
jno
and
mov
or
fstpl
sbb
cmpsl
jo
xchg
mov
in
fidivl
fnstcw
or
insl
or
xor
or
mov
push
mov
inc
sub
aam
sti
loope
inc
sub
xchg
pop
or
test
mov
cmc
lea
cmp
xor
stc
jo
sub
inc
lock
outsl
loopne
sbb
cmp
mov
and
pop
shlb
push
out
or
ja
std
xchg
aas
inc
cmp
sub
push
push
jb
mov
xlat
fimuls
jp
xchg
and
std
clc
push
jmp
xor
xchg
cmp
push
mov
jle
and
aaa
mov
sub
sahf
scas
add
mov
sub
das
sbb
je
xor
fsub
push
test
divl
push
adc
xchg
fcomp
mov
pop
nop
push
cmp
mov
and
es
lea
leave
bound
outsb
push
popf
test
repz
rolb
add
sbb
ret
xchg
test
pushf
shll
cli
pop
cld
xor
outsl
push
hlt
sbb
outsb
sbb
fidivs
pushf
fimull
dec
sahf
iret
arpl
lgdtl
out
mov
flds
cmp
push
sbb
mov
das
movsl
mov
jno
stos
das
sub
and
sbb
sahf
outsb
or
das
test
lds
adc
pop
lret
and
lds
xchg
movsb
jp
lcall
lahf
xor
xchg
arpl
shlb
aaa
mov
adc
jne
xchg
pop
add
aaa
lret
inc
cmp
leave
sarl
fcomps
lock
movsw
pop
test
movsb
lock
test
aas
mov
jmp
lcall
cmp
jge
je
or
pusha
orl
mov
push
jl
lea
xor
clc
adc
test
mov
jne
add
xchg
cltd
bound
and
push
jo
pop
jle
jle
jmp
adc
adc
cmp
jp
mov
add
sbb
clc
sbb
or
mov
ss
ret
adc
mov
outsb
cltd
cmp
sub
mov
cld
rcll
add
iret
pop
icebp
mov
leave
cld
pusha
fisttpll
pop
lret
lods
aas
shr
cs
mov
jb
adc
adc
sub
add
das
incb
insl
repnz
ss
push
adc
cmp
push
scas
xchg
pop
push
push
mov
jmp
stos
in
pop
into
loop
inc
shr
loop
xlat
xchg
loope
mov
dec
fucomip
mov
xchg
or
mov
mov
mov
cmp
lods
mov
inc
xchg
sbb
dec
lcall
pop
cmc
pop
inc
test
jb
icebp
push
and
daa
mov
out
mov
push
ret
xor
xacquire
leave
xor
pop
mov
xchg
cmp
sub
add
xchg
xor
jae
insb
repnz
sub
or
cmp
fwait
jno
mov
lds
pop
loop
fwait
push
ret
popf
xchg
pop
aas
push
loopne
enter
push
pop
sub
mov
jg
clc
lods
pop
lret
loopne
add
nop
push
push
xchg
scas
push
cmpsl
lret
popa
fildl
mov
das
insb
sbb
adc
xchg
mov
jbe
xchg
sbb
or
stos
sub
dec
out
in
jae
mov
loope
in
es
pop
or
jo
mov
push
popf
adc
pop
fwait
or
mov
mov
adc
pop
scas
or
out
icebp
movsl
outsl
xchg
jne
iret
lods
fimull
sub
in
popl
jns
gs
push
jl
and
aad
call
sub
jmp
inc
push
sar
xor
mov
icebp
cmc
gs
inc
dec
and
clc
cmpsl
insb
out
mov
scas
pushf
sbb
in
push
xor
jnp
fstpt
push
pop
cmp
repnz
and
enter
add
decb
fadd
cmp
cmpsb
xchg
mov
cld
mov
lea
add
sbb
arpl
cs
sub
and
sub
fdivs
test
mov
fldcw
icebp
cmp
lret
inc
xchg
dec
sahf
mov
and
stos
ja
sub
fimull
stc
sar
repnz
jle
stos
sbb
or
xchg
pop
pop
inc
scas
pop
inc
lahf
add
mov
jo
imul
and
test
dec
bnd
and
push
push
sti
or
in
inc
cmpsl
and
je
pop
das
mov
jnp
sbb
jns
stos
or
mov
xchg
je
cld
sbb
fdivs
pop
inc
push
mov
subl
and
pushf
idivl
and
rorl
imul
cld
add
fidivs
mov
int3
mov
pushf
inc
test
pop
mov
pop
xlat
xor
lahf
lds
imul
inc
and
and
mov
lods
roll
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
cli
sbb
cmp
adc
adc
adc
iret
or
cmpsb
jo
pop
mov
imul
push
push
xchg
inc
pop
ds
lcall
inc
enter
fsubrl
fsubl
pop
mov
or
test
subl
jne
xorb
mov
sbb
push
sbb
cmp
pop
cmp
into
popf
es
mov
mov
fdivrl
repnz
mov
das
stos
sub
aam
mov
test
sub
mov
test
test
mov
dec
inc
jb
popf
out
add
dec
jb
mov
std
pop
int
cmp
mov
jg
jp
sub
and
mov
ret
loope
loopne
cli
mov
mov
fidivs
sti
cmc
mov
dec
pusha
inc
in
mov
ja
ret
lsl
fnstenv
fiaddl
data16
pop
aad
dec
dec
test
jmp
push
cld
rcll
ret
mov
and
sub
or
mov
push
cmpb
test
jmp
add
jno
push
cmc
clc
stos
fs
dec
push
mov
fmull
test
xor
sub
push
xchg
negl
test
jae
jae
fs
fmull
test
aam
mov
repnz
mov
mov
dec
xlat
cltd
xchg
push
adc
cmp
ror
lock
addr16
sbb
add
lcall
fldcw
out
xor
nop
rol
dec
xor
inc
sub
jbe
jnp
mov
add
dec
pushf
xlat
push
add
rcrl
loop
mov
inc
loopne
dec
cmpsb
loopne
out
xchg
mov
inc
das
sbb
cmp
popf
in
pop
jns
mov
aas
jo
dec
push
jbe
inc
dec
add
std
call
sbb
inc
push
or
mov
icebp
mov
jbe
mov
mov
inc
addr16
cmpsl
into
and
das
xor
sub
sub
lock
adc
mov
push
into
sub
add
aaa
pop
outsl
and
cmpb
stos
sub
jne
sub
pop
mov
push
add
cvtpi2ps
out
add
jmp
push
stc
aam
and
mov
dec
add
mov
pop
data16
es
or
cmp
jge
fdivrl
mov
push
push
rep
and
mov
cwtl
jg
popf
mov
mov
popf
out
add
rcl
popf
cwtl
cmp
jo
pop
lahf
arpl
cmpsl
xchg
cltd
or
sbb
dec
into
fstpl
daa
mov
and
push
adc
inc
jbe
fisubl
sbb
add
jmp
aas
mov
daa
jae
stos
cmc
test
pop
es
aad
pop
fucomip
adc
scas
ja
sbb
pop
rcrb
popf
cwtl
mov
int
out
mov
rol
pop
add
pop
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
xorb
and
adc
adc
adc
fs
xor
push
mov
aaa
jecxz
cmp
outsb
insl
adc
mov
sub
mov
inc
test
push
repnz
hlt
aaa
ror
imul
aas
xchg
dec
fwait
sbb
pop
push
xchg
adc
sub
jae
sbb
sbb
mov
cltd
mov
jnp
aad
popf
jno
adc
cmp
push
cmp
mov
movl
lret
or
pop
mov
push
rcrb
data16
test
dec
mov
pushf
into
push
mov
loop
sub
icebp
inc
xchg
jns
scas
xchg
fwait
repz
std
lea
cwtl
jmp
or
mov
push
es
push
mov
cmp
cmpsb
filds
jp
jb
mov
stos
add
push
out
mov
push
repz
or
pop
cmp
lret
inc
stos
mov
adc
sbb
pusha
mulb
mov
jbe
in
mov
leave
sbb
in
popa
inc
inc
dec
test
pop
push
mov
and
aad
push
ljmp
loop
lahf
mov
ret
inc
sti
mov
pushf
ret
xchg
sub
xchg
jnp
lods
clc
dec
insl
jnp
lea
daa
jnp
insl
xchg
aam
icebp
scas
je
cmovle
cmp
gs
and
push
int
bound
push
cvtps2pi
rorl
nop
pop
imul
rcrl
shlb
pop
add
add
jb
mov
xor
cmpsl
ljmp
sahf
sbb
mov
pop
mov
sub
xor
fsin
andb
xor
sub
sti
roll
mov
adcl
scas
pop
shl
dec
push
sti
clc
mov
stos
imul
xor
sarb
pop
and
lahf
jo
jae
jae
test
add
jecxz
and
mov
push
inc
or
daa
cmp
inc
add
add
adcb
pop
jl
lock
add
loopne
mov
push
or
ja
sbb
mov
iret
dec
notl
fadd
bound
mov
call
outsl
mov
jmp
and
mov
and
jae
je
jno
andb
cmp
xor
inc
outsb
imul
leave
sbb
sub
ds
mov
xchg
call
cmp
sub
leave
mov
xchg
out
call
pop
xchg
and
sar
bound
mov
outsl
mov
jg
loop
dec
mov
mov
add
mov
sbb
aas
nop
cli
sahf
loope
sahf
jl
clc
sub
add
xor
lret
stos
lea
cmp
ljmp
addb
rcr
xchg
mov
cmp
sahf
incl
add
lea
xchg
in
adc
sbb
aaa
pusha
adcb
hlt
ds
in
test
stos
test
mov
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
pop
xor
adc
adc
dec
jb
loopne
or
and
in
fistl
stc
xchg
or
sarb
inc
aad
mov
ret
cmp
aas
aas
rclb
adc
dec
dec
fdivs
aaa
adc
push
dec
jecxz
and
cmp
mov
test
jbe
loopne
mov
test
jno
push
in
jnp
xor
pop
sbb
mov
mov
addr16
into
clc
and
ret
rcr
sub
xchg
je
mov
pop
icebp
mov
leave
inc
test
jae
adc
int
inc
loope
add
data16
lcall
test
es
repz
and
pop
mov
test
jae
push
sarb
test
pop
ds
sub
mov
pusha
shr
jle
mov
std
shll
in
cltd
dec
mov
lcall
aaa
repnz
mov
lcall
fcoms
xchg
bound
mov
dec
stc
jg
or
mov
dec
mov
lahf
mov
nop
cmc
mov
pusha
es
test
sarb
in
add
cmp
imul
jno
push
stos
xor
subb
pushf
push
xchg
jo
enter
cli
xchg
add
outsl
push
pop
xchg
cmp
hlt
scas
jg
or
dec
xchg
sahf
push
or
mov
mov
pop
and
lock
add
ss
or
xchg
lahf
ljmp
xor
cmp
shrl
insl
dec
mov
sub
sti
popf
out
dec
cmp
test
aad
out
mov
cwtl
mov
cmp
push
jmp
and
stos
inc
sub
pushf
popa
mov
push
and
adc
sub
push
sbb
rclb
call
mov
xchg
fisubs
imul
mull
inc
push
push
xchg
xchg
pusha
fwait
or
movsl
stc
and
dec
ror
in
loope
inc
pop
add
or
lock
push
add
jl
ror
mov
jmp
loopne
imul
addr16
jno
ja
xor
aam
mov
jg
testl
cmp
inc
in
pop
repz
inc
sub
push
vhsubpd
test
cltd
dec
inc
movsb
pop
sbb
scas
call
outsl
dec
setge
mov
inc
mov
mov
mov
jno
js
std
out
dec
jl
or
scas
lods
xchg
int
jo
ss
jo
mov
mov
push
push
mov
jmp
push
test
cmp
cmp
xchg
dec
imul
ret
add
js
fidivrl
rclb
dec
xchg
repz
sub
dec
pop
xor
and
mov
push
mov
xchg
sbb
loope
or
or
jns
jno
mov
sub
cmp
fdivrl
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
push
inc
stos
and
adc
adc
adc
cmp
pop
jbe
ss
fstps
push
mov
scas
xlat
jecxz
push
sbb
mov
rclb
js
xchg
scas
dec
or
dec
inc
adc
mov
mov
cwtl
or
stos
pop
iret
fbld
inc
aas
negb
pop
call
mov
divb
out
and
fdivrs
xchg
cld
data16
sub
lahf
cmp
adc
pop
sets
shlb
jns
xor
out
mov
sub
sub
outsl
in
stos
imul
test
push
shr
mov
xchg
mov
sbb
cltd
test
push
sbb
xchg
add
fldl
add
int
inc
test
xlat
or
cmp
ja
dec
aam
loope
sbb
adc
js
jge
inc
aaa
cmp
add
call
adc
and
mov
mov
mov
clc
insl
nop
int
rorl
sub
nop
sbb
insl
mov
or
test
or
in
cmpsb
jo
in
test
mov
fcomps
scas
aaa
push
jp
or
sbb
cmp
cmc
imulb
lods
mov
jle
test
lods
in
cmp
icebp
xchg
mov
loope
sub
cmc
pop
test
ret
xchg
lods
fadd
fwait
ret
mov
cs
xchg
andb
lss
push
fstpt
pusha
mov
pusha
sub
cmp
aas
pop
ljmp
xchg
xor
lcall
pop
mov
cmpsb
push
mov
push
popa
sub
mov
or
jb
jp
aad
outsl
ret
dec
je
mov
div
fsubl
xor
jns
xor
testl
std
cmpsl
jno
and
out
add
push
adc
jne,pn
mov
xor
pop
fwait
mov
mov
adc
push
popa
xchg
aas
sahf
jecxz
adc
movsb
xchg
insl
dec
out
es
stos
inc
inc
jecxz,pn
ffree
xchg
jl
cmp
adc
rorl
negb
sbb
cmp
lods
inc
adc
jge
fldt
imul
xchg
mov
adc
jo
fwait
cmpsl
xchg
push
icebp
aaa
popa
lock
inc
cs
sub
jbe
mov
test
test
lahf
sub
mov
cmp
sub
xor
bound
rclb
adc
sub
mov
dec
push
sarl
xor
inc
cmc
out
mov
sti
mov
sbbb
ret
js
addr16
ss
jnp
shlb
xchg
std
int3
mov
inc
dec
add
shll
inc
mov
mull
push
inc
movsl
jge
jge
cmp
in
orl
inc
adc
stc
sti
cwtl
popf
dec
rcll
xchg
and
clc
add
cmpsl
sub
xchg
inc
cmp
mov
pop
test
xchg
les
in
out
push
mov
out
mov
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
shlb
jno
adc
adc
adc
ja
mov
notl
and
imul
idiv
jg
or
pop
and
sub
shlb
jecxz
stos
les
add
sub
mov
mov
jns
loope
cmp
dec
push
stc
and
mov
ljmp
sub
pop
addr16
pop
and
jbe
fwait
outsl
call
les
scas
movsb
pop
lock
enter
or
mov
shl
or
sub
ret
outsb
pop
daa
arpl
movsl
inc
mov
or
js
mov
rclb
jecxz
out
outsb
push
lret
addr16
bound
jl
push
xor
imul
adc
pop
test
and
loopne
icebp
test
xchg
and
jb
xchg
push
cmp
and
ljmp
mov
lcall
insb
inc
jnp
fisubl
in
pop
push
daa
xor
cld
addr16
fwait
out
cmpsl
movsb
xchg
mov
aas
cmp
popl
in
pop
scas
cmc
enter
jecxz
pop
sahf
lods
xchg
iret
sbb
stos
aas
cmp
pop
mov
test
loopne
or
xchg
cmp
jo
enter
cmp
jmp
sub
std
xchg
pop
cmp
int3
jge
mov
ret
les
push
out
mov
push
xchg
int
imulb
xchg
in
aaa
xor
pop
xchg
lods
push
mov
mov
and
xchg
mov
ljmp
or
hlt
xchg
aas
rcl
push
xchg
push
sbbb
cwtl
and
mov
push
xlat
add
add
push
fs
mov
cmpsl
int3
pop
jno
dec
lea
dec
add
cmp
dec
xor
or
adc
cld
jnp
jne
inc
inc
push
jb
or
push
cld
call
inc
or
dec
or
pop
xchg
fwait
imulb
jp
aad
mov
jo
fstpl
pop
ja
ja
icebp
mov
dec
das
sarb
cmp
push
test
add
adc
pop
lods
mov
cmp
add
xchg
popa
adcl
dec
int
xchg
int3
test
xchg
push
ljmp
inc
lcall
and
scas
out
sub
sub
movsl
xchg
xorl
and
mov
sub
push
nop
test
les
leave
xchg
repnz
shlb
adc
adc
mov
push
mov
sub
aad
pop
mov
sub
xchg
adc
scas
sub
pop
mov
jns
insb
test
mov
pop
int3
jnp
inc
lahf
mov
insl
out
cmc
data16
pop
xlat
out
push
movsl
lret
popa
mov
lahf
add
sbb
jp
ret
dec
inc
repnz
and
jle
lods
sub
cmp
imul
dec
jmp
inc
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
iret
out
outsb
insb
mov
adc
adc
imul
lds
idiv
notl
ss
pop
inc
int3
or
push
sahf
dec
daa
and
lcall
mov
sub
adc
jmp
ljmp
nop
jl
inc
pop
xchg
inc
cld
clc
sub
leave
push
mov
fdivl
xor
out
leave
aas
adc
jl
dec
subl
adc
sub
xor
xchg
mov
cld
cmp
xor
inc
sub
mov
jle
cli
shlb
push
inc
ljmp
lret
xor
scas
push
adcb
bound
xchg
push
subps
mov
addps
jno
cmp
vmovaps
mov
repz
aaa
pop
int
fbld
mov
jmp
or
sbb
adc
inc
push
push
shrb
push
dec
andb
mov
xchg
dec
aaa
addr16
frstor
add
scas
sbb
add
mov
cs
sub
test
mov
nop
and
push
pop
cld
sub
repnz
lcall
lret
cmp
mov
dec
inc
mov
mov
data16
ficoms
and
and
xchg
cs
add
in
stos
sub
mov
adc
stos
dec
mov
out
cmp
ss
sub
sbb
xchg
add
or
pop
sbb
mov
insb
faddl
jo
cmp
mov
ja
and
and
pop
outsl
jg
js
orb
pop
inc
mov
adc
rep
cli
popf
inc
shlb
repnz
jle
pop
inc
scas
mov
push
pop
movsl
into
lods
loopne
loopne
push
ret
repnz
outsb
stc
repnz
testb
pop
push
bound
push
scas
xchg
dec
test
or
jp
sbb
jbe
shlb
outsb
rcrl
insb
out
xadd
push
cmp
cmpsb
or
scas
shlb
sahf
es
dec
pop
jle
das
dec
arpl
mov
xchg
lcall
dec
jl
mov
in
lahf
sub
cmc
mov
insb
jmp
xchg
xchg
stc
and
cmp
adc
adc
cmp
test
mov
add
adc
sbb
jno
mov
add
sub
dec
sub
addr16
pop
cwtl
and
sub
push
or
mov
out
mov
mov
out
mov
dec
popl
ret
call
mov
stc
push
inc
jmp
sub
inc
loope
insb
out
bound
sbb
repnz
roll
nop
sbb
stc
leave
outsl
mov
jno
out
jg
cld
mov
mov
mov
mov
jg
push
mov
pop
cmpsl
xchg
imulb
rclb
ds
ja
adc
decb
outsl
popa
imul
push
xor
and
pop
xor
cmp
push
rcrl
push
into
xor
mov
adc
jp
rolb
test
sbb
jecxz
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
xchg
xor
sub
xchg
addl
imul
mov
lahf
xor
lods
inc
bound
push
dec
mov
cltd
mov
dec
loope
sub
or
mov
test
sti
clc
sub
jnp
xchg
stos
cltd
sub
imul
jmp
mov
adcl
ja
dec
addr16
enter
push
mov
idivb
lahf
call
icebp
js
inc
mov
ljmp
aas
pop
and
dec
cld
ss
into
lods
mov
scas
pop
pusha
daa
cmp
jns
ja
scas
mov
or
call
mov
sub
mov
lcall
rol
cmovb
xchg
and
add
das
or
ficompl
rcr
jp
jmp
je
mov
xor
and
ds
mov
push
in
bswap
call
sub
and
lea
je
or
stc
inc
xor
mov
into
into
frndint
lcall
inc
lcall
icebp
fidivl
sbb
idivb
push
xchg
push
imul
pop
xchg
test
test
pop
xor
pop
push
lahf
pop
sbb
sbb
pusha
scas
cmpsl
stos
dec
xlat
push
pop
movsl
outsl
mov
sub
pop
loop
mov
into
mov
jg
sub
stos
sbb
fs
test
shll
jl
lods
fistpl
lods
bound
mov
jo
jl
xor
stc
int3
dec
jnp
out
xchg
jmp
fcmovb
test
push
fwait
push
mov
mov
push
sbb
mov
pop
shll
mov
data16
fistps
int
pop
stos
jmp
add
push
movsb
out
jns
mov
test
cltd
add
fmulp
adc
sbb
cmp
mov
push
in
insl
int3
movl
jmp
ss
fwait
and
enter
ja
insl
sbb
cmp
sti
out
ss
repz
push
out
mov
jle
neg
xchg
movsb
mov
sub
xchg
imul
push
mov
jg
ja
out
movsb
xor
inc
sub
jg
inc
fmulp
pop
jp
gs
sbb
pushf
inc
pop
imul
cmovb
xchg
insl
xor
mov
fwait
pop
sub
push
leave
sbb
jbe
ljmp
movsb
test
push
push
xchg
and
xchg
dec
xchg
xlat
pop
movsl
sbb
xlat
mov
push
xchg
xchg
and
add
sahf
popf
clc
push
mov
insb
jb
sbb
out
and
adc
mov
lret
imul
or
push
cli
daa
xor
lods
cmp
and
inc
pop
adc
lret
pop
shlb
push
stos
inc
pop
popa
and
fmuls
out
pop
sub
inc
mov
mov
sbb
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
lods
push
mov
adc
xchg
sub
aam
jae
pop
and
mov
lds
add
sbb
cltd
dec
aam
lods
fnstenv
sbb
mov
int3
sbb
sahf
jmp
test
ljmp
out
push
pop
sahf
xor
aam
aam
fucomip
sub
pop
xor
mov
add
imul
sub
lahf
add
test
mov
call
pop
mov
sbb
test
mov
popf
add
lods
push
inc
push
adc
insb
in
xor
mov
push
mov
xchg
pushf
lock
mov
cld
jl,pn
or
mov
dec
or
test
cmpsb
or
test
ficompl
mov
inc
loop
cmpsb
cld
mov
push
iret
xchg
scas
mov
sar
mov
leave
fs
or
out
popa
iret
cmp
repz
mov
xchg
lock
xchg
cmp
and
out
jge
and
fucomi
hlt
jae
xchg
mov
aad
into
aas
cs
push
or
xorl
fsts
andl
test
and
xchg
mov
sub
mov
enter
dec
push
xchg
in
or
pop
sbb
mov
mov
and
mov
cli
add
dec
xchg
sarb
xor
bound
pop
jnp
nop
jo
mov
jns
shl
push
aad
iret
adc
std
cmp
cwtl
pop
sub
cwtl
aam
in
mov
jns
nop
lret
mov
or
out
mov
xchg
mov
shl
xchg
outsl
enter
out
xor
repnz
mov
insb
jp
lret
rcll
repnz
fldenv
xor
int3
sahf
fdiv
flds
xor
jmp
mov
daa
jae
xchg
mov
pop
inc
or
dec
je
jmp
scas
sbb
shrb
mov
ljmp
test
add
test
gs
add
adc
add
lret
sar
jg
in
bound
daa
repz
jno
jl
mov
mov
shl
jbe
mov
das
cmpsl
cmpsl
dec
je
cmp
mov
sub
cltd
aaa
sbb
popa
lret
mov
aaa
mov
xor
jb
sti
stc
das
ds
lret
cmp
int3
das
and
data16
orb
mov
pusha
pop
xchg
movsb
jmp
movsl
xchg
das
ds
es
push
pop
cltd
out
loopne
push
mov
mov
add
pop
add
and
mov
cwtl
and
aad
les
cltd
jg
sub
movl
loope
add
jae
add
shlb
in
movsl
nop
aam
sub
push
das
fs
xor
xlat
pop
sub
fistpll
sbb
cmp
in
insb
ss
cmc
adc
dec
mov
jnp
sti
xchg
pop
insb
sbb
bound
fidivrs
mov
rolb
int3
pushf
mov
ss
mov
or
repz
mov
and
xchg
add
stos
stc
sbb
roll
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
xchg
push
mov
adc
adc
or
push
jbe
lock
push
inc
xor
pop
dec
pop
push
pop
add
adc
and
rorb
mov
ljmp
pop
divl
push
jae
mov
int
imul
rcrl
jb
cltd
aad
xchg
lock
mov
rolb
adc
call
and
add
fcompl
pop
lock
pop
loope
mov
adc
xchg
push
mov
ss
shlb
decl
pushl
adc
push
xchg
xchg
dec
cmp
add
pop
xor
data16
je
adc
xor
dec
and
push
jg
mov
cmovg
xchg
sub
nop
push
leave
cwtl
mov
or
cmp
mov
or
enter
fimuls
xchg
or
mov
jge
xor
cmp
push
fwait
call
cwtl
jno
sub
je
test
jg
pop
mov
pop
jg
insl
jp
xchg
sbbl
adc
cld
mov
rorb
add
adc
jle
or
stc
wrmsr
pop
mov
sahf
push
test
fdivrs
lods
xchg
add
add
jnp
sub
lahf
rcr
outsl
cwtl
cld
in
mov
fnstsw
mov
adc
cs
xchg
sti
dec
mov
mov
xchg
mov
stos
fistpl
popl
lcall
and
or
pop
shrb
jnp
lds
aas
jnp
mov
lods
es
xchg
sbb
div
inc
je
jecxz
fs
jo
subl
and
mov
mov
sbb
mov
sbb
dec
dec
mov
loope
pop
jmp
cld
clc
mov
and
sub
out
ret
cmpsl
mov
int
push
pop
and
add
mov
jbe
sbb
ljmp
cmpsb
sti
adc
popf
sbb
in
push
pop
sbb
orb
ds
xchg
xor
dec
jo
inc
hlt
pop
sub
inc
scas
fnsave
fldcw
and
mov
lods
call
leave
in
ljmp
pusha
cmp
lds
mov
jo
repnz
jg
and
inc
in
js
mov
push
cmp
adc
adc
dec
push
mov
cmp
jo
cmpsb
mov
xor
int3
in
and
fildll
push
and
add
xchg
iret
rcl
inc
add
leave
fdivrl
inc
mov
subb
add
in
cmp
fbld
bound
pusha
push
cltd
jnp
stc
jbe,pt
xchg
sub
sahf
out
test
in
lret
clc
out
int3
inc
scas
sbb
and
cmc
pusha
pop
std
aad
mov
cmp
nop
push
arpl
adc
arpl
test
stos
popf
aas
jae
xor
out
daa
ljmp
arpl
mov
push
xchg
in
xchg
cltd
sub
sbb
movsl
mov
or
mov
push
xchg
mov
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
pop
jge
mov
adc
adc
shll
mov
leave
cmp
daa
in
ficompl
sbb
xor
addr16
cmpsb
imul
xlat
std
mov
adc
dec
cmpsb
int3
jne
mov
dec
ljmp
xor
adc
cltd
pop
add
lahf
push
cmc
mov
loopne
arpl
fcmovb
inc
xor
jecxz,pt
daa
nop
ficoms
fadds
hlt
dec
addr16
fs
inc
ret
cmp
inc
movsb
cwtl
push
sbb
xor
dec
mov
aam
shrl
mov
mov
cmpsb
xchg
iret
adc
inc
xor
adc
xor
add
std
cmpsb
lcall
push
shlb
lahf
stc
bts
xchg
fsubr
das
inc
sub
pushf
fwait
sub
xor
dec
popf
add
mov
fldt
mov
and
xor
mov
add
inc
or
daa
cmc
sbb
inc
jecxz
xor
fidivs
inc
inc
sbbb
movsb
xchg
xchg
pop
lldt
xchg
inc
arpl
cmc
push
ss
mov
xchg
sbb
xchg
mov
jmp
and
pushf
push
cs
mov
icebp
fsubrl
loopne
sarl
jnp
repz
dec
lods
rcrl
jno
lds
out
add
dec
stos
lock
jae
mov
cmp
lock
xor
mov
aaa
sub
leave
jnp
push
sbb
idiv
cmpsb
sti
cs
push
lea
mov
out
aas
or
stc
jnp
mov
lret
js
xlat
js,pt
mov
push
xor
lods
stos
test
loope
mov
adc
out
in
cmp
and
mov
adc
adc
jl
jne
bound
xor
gs
negl
out
fbstp
xchg
inc
or
and
adc
pop
sti
loop
push
pop
mov
decl
cmp
xor
xor
jmp
sbb
xor
push
jmp
int3
in
fwait
sub
xchg
inc
jmp
pop
movsl
mov
mov
daa
mov
nop
jg
dec
scas
and
clc
push
je
adc
inc
bound
push
mov
push
cmp
pop
sub
pop
xor
daa
call
adc
push
sub
push
xchg
fstps
mov
push
pop
inc
int
loope
bound
dec
test
cmpsb
xor
or
loopne
shll
roll
sub
shll
sarb
sbb
jmp
mov
jns
lret
xlat
ret
fadds
sbb
or
pop
movsb
popf
xchg
push
cmp
sahf
and
xchg
fucomi
lahf
imul
in
fwait
sub
or
outsl
pop
sub
loopne
jae
lods
sbb
je
ljmp
sub
inc
mov
adc
popa
aad
popa
push
push
lret
inc
push
sbb
inc
out
fstl
mov
lock
lock
pop
push
insb
xor
enter
lods
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
and
stos
inc
movsb
adc
adc
adc
sbb
sub
pushf
push
and
bound
push
dec
outsl
mulb
popa
pushf
inc
out
lret
pop
hlt
in
mov
mov
scas
in
fcoml
xchg
shrb
lock
xlat
mov
movsb
adc
pop
outsl
roll
repz
cmc
or
dec
ret
mov
aad
cmp
xor
in
loopne
dec
mov
outsb
std
mul
lods
incb
lds
scas
fnsave
xor
lea
movsb
dec
sahf
push
inc
or
lods
lds
jecxz
std
add
cmp
lods
lcall
addl
inc
sbbl
pop
inc
flds
cli
loope
ljmp
push
add
jne
gs
call
mov
jle
imulb
cmp
cmp
es
jle
jmp
sbb
and
mov
enter
pop
sub
jle
popa
dec
push
in
inc
sbb
inc
dec
adc
jp
jg
or
inc
arpl
leave
pop
dec
inc
and
sti
clc
mov
out
or
int
push
insl
or
mov
addl
rol
repz
lcall
inc
xchg
jmp
negl
xor
xor
xchg
mov
inc
testb
pusha
mov
sub
icebp
add
nop
rcrb
lret
xchg
mov
push
insl
enter
xorl
push
andl
dec
dec
cmp
orl
cmpsl
adc
add
insb
push
or
aaa
and
lcall
aad
and
inc
add
pop
and
sbb
xor
fs
jmp
jmp
fcompl
adc
mov
mov
jl
xor
xchg
jge
pop
xchg
push
and
push
push
dec
jge
insb
xchg
sarb
pop
lods
add
fidivrs
fnstsw
adc
pop
sbb
pop
cltd
ljmp
addr16
dec
repz
pop
mov
cmpsw
lcall
dec
mov
dec
ficomps
or
mov
push
in
inc
imul
sub
dec
cmp
ja
mov
adc
sub
sahf
test
push
in
cmc
inc
fcom
mov
mov
ftst
mov
out
shll
jecxz
xor
shlb
push
mov
jno
test
int
dec
aaa
test
bound
sub
lret
inc
sub
insb
ret
jbe
mov
jg
push
enter
fsubl
out
add
jbe
jle
outsl
andb
dec
xor
ja
out
scas
add
jp
out
fistl
test
int3
mov
mov
test
out
jbe
sbb
lret
andl
jl
sbb
mov
cmp
mov
out
les
movsl
jbe
and
sub
mov
cmp
dec
mov
imul
js
push
mov
sub
xor
adc
jo
pop
loop
xchg
adc
dec
pop
dec
add
cld
xchg
mov
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
adc
mov
nop
pushf
adc
adc
adc
in
loop
or
cmp
xchg
or
ffree
aam
lret
mov
adc
pop
add
dec
jbe
push
insb
pop
lret
inc
loope
adc
or
fwait
mov
add
aam
xchg
test
jnp
dec
in
pop
scas
add
xchg
mov
inc
sub
sub
fmuls
jae
sub
rcrb
mov
test
push
dec
adc
add
stos
xlat
mov
fcomps
push
mov
or
arpl
sub
sbb
mov
push
fs
mov
mov
cltd
and
insl
add
repz
ret
mov
sbb
hlt
inc
xchg
cmp
inc
popf
jne
bound
inc
ljmp
pop
pop
cld
push
and
cmp
lahf
xchg
jp
xor
addr16
mov
sub
push
or
ret
and
in
mov
arpl
pop
out
addr16
cmp
sub
pop
push
pop
mov
dec
adc
dec
test
pop
ret
pop
movsl
in
cmpb
adc
xchg
data16
jae
lcall
lea
in
test
xor
xor
pop
sub
cmp
daa
mov
cwtl
std
dec
std
scas
xor
std
mov
adc
inc
sub
lcall
mov
and
push
mov
shll
sbb
iret
add
iret
call
xlat
fcoml
sbb
insb
hlt
pmullw
adc
cmp
and
or
pop
pop
adc
imul
jbe
movsl
enter
outsb
rol
jge
sub
xor
dec
das
hlt
ret
inc
std
add
mov
pop
dec
jl
mov
jmp
cmp
xor
cltd
test
call
pop
add
int
inc
add
aaa
jbe
insl
in
in
loopne
sub
sbb
push
aaa
loope
ljmp
xlat
mov
mov
mov
cltd
add
aas
mov
add
rcrb
xchg
or
xlat
test
push
xor
shl
lock
sub
push
stc
pop
cmp
push
cmp
out
scas
pop
or
mov
repz
mov
adc
pop
arpl
ja
jp
cmp
ja
out
xchg
dec
mov
sbb
push
xchg
adc
jnp
jb
arpl
bound
test
inc
inc
push
or
push
aad
out
rcrl
dec
inc
cmp
or
lcall
insl
lahf
test
arpl
push
ret
jmp
pop
push
cmpsl
in
lahf
shl
ret
mov
rcrb
les
and
add
mov
popa
pop
stos
in
xlat
shll
in
xchg
lods
xchg
sbb
sub
popf
mov
xchg
in
mov
jnp
pop
cmp
mov
xor
cwtl
push
addr16
push
fbld
jno
lods
das
arpl
iret
dec
shll
mov
rclb
add
es
dec
xchg
shrl
inc
mov
lea
mov
sbb
idiv
xor
shl
xor
or
add
mov
jmp
xor
and
add
js
lcall
mov
xor
or
bound
and
adc
sbb
gs
les
enter
insb
outsl
inc
cmp
arpl
outsl
inc
xchg
in
add
imul
dec
lods
loope
dec
pusha
out
jbe
add
xor
fwait
push
jp
jecxz
mov
je
pop
repz
dec
xchg
dec
test
sbbl
js
add
lea
ret
stc
dec
dec
dec
in
outsl
hlt
lea
cmp
xchg
mov
cmp
sub
sub
lods
or
and
push
dec
test
adcl
push
sub
jp
out
in
push
fs
outsb
cwtl
mov
fcmove
mov
xchg
fstps
outsb
sbb
fcompl
dec
lret
repnz
inc
xchg
push
mov
mov
sub
jmp
fidivl
mov
jecxz
arpl
dec
sbb
push
dec
mov
jnp
lock
in
add
push
mov
push
inc
cmp
xor
jbe
arpl
jge
push
or
or
pop
sub
stc
repnz
inc
and
xchg
mov
cld
clc
sbb
xchg
or
dec
or
lahf
add
dec
mov
and
ret
out
and
jmp
mov
pop
pushf
clc
inc
mov
daa
movsb
push
sarl
fdivrp
cmp
mov
adc
sbbb
lods
add
insb
test
pop
js
movsb
push
adc
lahf
add
xchg
into
iret
js
stc
xchg
pop
jp
adc
lret
fldenv
gs
mov
test
fmulp
sbb
shl
jmp
cld
insb
push
jae
sbb
int3
xchg
cmp
xchg
inc
adc
inc
roll
pop
scas
xchg
mov
lret
test
mov
and
add
xchg
lds
es
enter
in
jnp
popf
inc
out
dec
bound
push
outsl
cmp
je
icebp
xlat
mov
mov
insl
outsb
dec
cmp
sti
push
and
repz
pop
in
sti
cltd
int3
movsb
mov
adc
fbld
mov
rorb
cmc
pushf
lret
cmpsb
lods
addr16
popa
mull
daa
push
inc
cmp
je
add
push
mov
xor
lcall
daa
cli
mov
pushf
cmp
add
push
scas
mov
mov
je
jnp
sti
and
or
fs
pop
lock
data16
and
xchg
call
test
pusha
sbb
or
cmc
mov
cmp
mov
aad
adc
enter
test
out
dec
mov
lahf
push
cltd
aas
jp
addr16
dec
sbb
test
xchg
in
repnz
and
push
lret
jle
jns
in
dec
lds
cs
ret
jnp
push
push
arpl
pop
dec
lret
aaa
loop
jp
leave
mov
dec
jge
sub
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
mov
jbe
sub
adc
enter
jg
cld
aad
sub
outsl
pop
je
xor
dec
fidivl
test
gs
out
or
insb
fadds
pop
jle
in
hlt
in
fstps
inc
fstpt
sbb
mov
lods
call
cli
mov
dec
dec
aaa
push
push
popf
cli
xor
mov
adc
xchg
jp
push
stos
call
jno
test
fists
cmp
aaa
out
or
lods
sbb
mov
pusha
mov
fldcw
cmp
imul
add
fdivrl
xchg
test
jmp
push
push
cmp
cmp
add
fisttps
andl
jb
xchg
lea
ss
push
faddl
cmc
pop
out
jbe
mov
push
push
imul
mov
adc
fildll
lret
sub
add
adc
insb
jnp
hlt
xor
shlb
xchg
mov
jnp
lods
cltd
ljmp
enter
shrb
jne
fcompl
pop
or
pop
mov
fistps
jne
push
mov
push
sub
xor
enter
test
mov
xchg
xor
jno
xor
xor
lret
adc
mov
call
out
push
dec
xor
iret
int3
push
bound
cmp
repz
cmp
mov
gs
push
push
pop
jl
lret
and
pop
cltd
leave
dec
into
jne
popf
fwait
and
addr16
stos
xor
inc
jae
enter
mov
adc
push
jnp
push
mov
sub
cmp
dec
incl
jmp
scas
push
mov
cld
adc
mov
mov
adc
gs
mov
xlat
mov
sti
pop
das
rolb
and
enter
movsb
nop
jno
test
movsl
xor
adc
and
nop
std
cld
pusha
movsl
mov
je
adc
adc
and
push
call
movl
add
push
dec
ja
cmp
push
addl
push
cltd
in
add
ss
lcall
push
sbbb
sbb
lods
inc
in
fnstsw
imul
shll
xchg
or
insl
pop
in
fadds
lahf
in
xor
imul
leave
mov
and
mov
dec
outsl
pop
xchg
aas
shrl
hlt
cmpb
cmp
lock
mov
mov
jo
ds
and
xchg
lret
cltd
mov
inc
data16
cld
lods
out
push
push
add
scas
sub
jb
push
les
jns
rcrb
cmpsl
mov
and
lret
sbb
popa
pop
enter
xchg
xor
lcall
pop
jns
add
mov
fcomps
cmp
scas
mov
dec
sub
sub
mov
outsb
hlt
mov
lcall
xor
fwait
or
ret
xlat
sbb
loope
ja
adc
pop
or
lcall
add
int
pop
incb
lret
test
dec
and
out
mov
rorb
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
scas
movsb
jle,pt
mov
adc
adc
push
nop
out
inc
pop
jl
add
icebp
push
fstpl
mov
or
sbb
jne
sti
xchg
loop
shll
popa
shrl
pop
inc
jp
rorl
xchg
cwtl
adc
aaa
mov
fnstsw
leave
push
gs
leave
mov
sbbb
les
mov
bound
mov
jmp
sbb
jg
loopne
enter
push
sub
outsl
les
sbb
fwait
mov
push
dec
or
sbb
out
imul
clc
sub
in
and
enter
cmp
jbe
sub
data16
cmpsl
jg
mov
jmp
mov
out
push
ds
push
movsl
pop
frstor
dec
or
stos
inc
push
push
adc
xchg
and
popa
insb
decl
sub
loope
ret
shrl
stc
fwait
add
pop
inc
or
xchg
jo
inc
inc
imul
cmp
inc
test
and
jbe
out
xor
add
jl
xor
or
fildll
in
mov
shlb
lds
aad
cmp
push
jmp
xchg
dec
push
push
mov
dec
rorl
es
das
jno
aam
sub
inc
ds
sub
cld
cltd
data16
mov
test
xor
inc
iret
and
rcr
jno
mov
int3
cmp
cmp
push
dec
test
jb
xchg
jne
jecxz
rcrl
or
incl
test
mov
js
mov
inc
repz
ljmp
clc
loopne
pop
add
out
shrb
ret
std
jge
js
inc
test
dec
push
pop
mov
jnp
rcrb
jge
sbb
mov
cmpsl
arpl
and
mov
shlb
push
in
xchg
sbbl
jmp
int
pop
sub
jecxz
lea
inc
test
pop
mov
aam
icebp
mov
cld
out
jle
mov
push
out
push
js
cld
cwtl
fcoms
mov
fwait
pop
je
fnsetpm(287
jmp
jmp
inc
jge
mov
adc
push
scas
pop
pop
out
and
push
and
xor
push
daa
aad
ds
je
lcall
cmpsb
ds
stos
jns
xor
mov
or
sahf
xchg
lods
xchg
aas
out
xor
lock
cwtl
fnstenv
je
cmp
jg
mov
ljmp
add
xchg
xor
loop
ja
mov
sub
lret
jnp
in
int
mov
mov
insl
sbb
in
xchg
xor
fistl
int
clc
mov
cmc
cmp
js
mov
jecxz
sub
inc
mov
aam
adc
adc
inc
outsb
out
je
inc
mov
out
xchg
jae
rcl
call
sbb
bound
std
cli
aad
xchg
sub
fimuls
pop
test
flds
stos
lock
dec
in
mov
xchg
inc
mov
pusha
add
and
fimull
mov
push
rolb
jb
mov
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
fs
rol
xor
push
mov
mov
add
jbe
sbb
pop
jle
jmp
and
xor
ret
mov
aaa
into
dec
sbb
inc
pop
test
fcoms
imul
inc
sbb
sbb
pusha
out
xor
lds
sbb
stos
clc
mov
inc
cmp
pusha
fcmovnbe
inc
and
je
scas
xchg
mov
jns
cmp
adc
jbe
push
xlat
mov
test
pusha
mov
add
jmp
mov
insl
dec
andb
loopne
int3
and
test
cli
movsb
fistpll
fldl
add
mov
fs
or
sbb
push
lods
das
cmpl
push
mov
mov
xlat
xchg
xor
or
dec
stos
pop
push
mov
das
jge
cwtl
out
pop
add
repz
imul
enter
or
sub
lds
sbb
mov
mov
push
cmpsb
insb
pop
jge
shl
icebp
icebp
mov
dec
punpcklbw
add
popa
and
cmpsl
fwait
or
mov
or
outsb
xor
stos
push
loop
mov
int
inc
ret
pusha
in
xchg
rcr
and
cmp
loopne
icebp
mov
ds
cmp
mov
xchg
outsl
scas
dec
and
test
lock
and
or
adc
xor
adc
cmp
fnsave
add
into
aad
pop
xchg
lret
test
jno
mov
aad
xor
adc
js
test
iret
sti
or
ret
push
loop
sbb
mov
jmp
psllw
and
jge
add
sti
xchg
idivb
stos
mov
shrl
sbb
xchg
ljmp
repnz
bound
mov
xor
push
scas
or
and
test
sbb
popf
cmp
jg
imul
xchg
xor
inc
mov
mov
add
mov
inc
call
imul
mov
in
sbb
aaa
jno
loop
xor
pop
flds
testb
mov
dec
inc
cld
adcl
mov
and
jg
mov
out
push
and
mov
cmpsb
js
xor
js
das
shr
mov
dec
popa
pop
fwait
or
movsl
shl
mov
xchg
daa
dec
inc
aaa
sarl
xor
dec
mov
decl
roll
xor
dec
and
out
ja
mov
mov
xchg
stos
and
pop
push
or
aam
fscale
push
fmuls
cmp
int
dec
rclb
xor
faddl
in
pop
xor
lock
push
add
mov
inc
dec
jbe
popf
sbb
outsl
xor
ljmp
jnp
imul
push
outsb
ret
cmc
push
daa
and
pop
and
aam
loop
xor
push
js
pop
add
ret
cs
loope
lret
ret
js
rcrb
adc
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
js
jl
adc
adc
push
pop
sbb
cmp
jle
or
jno
loopne
or
sahf
xor
xchg
stos
test
add
jmp
inc
loop
jno
mov
push
in
leave
dec
cmpb
sbb
fs
push
int
loope
pop
jns
sbb
out
clc
and
movsb
xchg
jb
mov
mov
loopne,pn
out
daa
cs
mov
data16
sbb
fisubrs
rcl
sub
sbb
push
cmc
in
jle
cmp
pop
stc
jb
xor
or
dec
and
sarb
test
jno
add
adc
call
fldenv
aas
les
mov
das
lret
ja
mov
lods
cmp
pop
pop
stos
je
pop
inc
sub
stos
bound
pop
sahf
negb
fdivs
dec
ss
out
ror
mov
inc
lods
ljmp
push
sbb
xlat
xor
jge
sarb
insl
mov
mov
jbe
sbb
shlb
sub
and
in
stos
jmp
push
push
insl
or
fsubrs
adcb
jae
cli
jns
pop
sbb
sbb
adc
sbb
insl
loop
cwtl
lods
adc
cmp
fldl
jo
push
stos
mov
fneni(8087
xor
adcb
pop
xchg
jg
setle
jg
cld
ja
rcrb
inc
xchg
cmp
xchg
and
mov
sub
out
addr16
scas
xor
decl
fmuls
fnsave
aaa
inc
shrb
push
jp
or
inc
jl
mov
push
mov
pop
mov
js
dec
and
dec
dec
cmp
stos
addr16
xor
push
mov
jmp
sub
inc
sbb
fwait
test
push
hlt
or
test
and
movsb
lret
test
lret
mov
ds
fisttpl
imul
jb
sub
test
pop
push
jo
sbb
mov
aad
imull
mov
sub
push
mov
jae
cwtl
sbb
mov
mov
push
mov
adc
sbbb
and
lods
inc
sahf
lds
dec
pop
stos
push
mov
jb
lock
in
mov
in
jo
sbb
cmpsb
aaa
mov
adc
mov
mul
fwait
dec
or
sub
mov
in
push
fnstsw
es
outsl
sbb
xchg
ret
stos
neg
lods
pop
in
dec
popa
lock
push
out
psrlw
jecxz
subb
movl
mov
rorb
xchg
pop
push
xchg
jmp
fcoml
or
das
dec
mov
insl
dec
test
mov
test
fbld
fdivs
mov
adc
mov
xchg
xor
pusha
fisubl
sbb
jmp
push
dec
push
cmp
adcb
aam
or
xchg
loope
andb
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
fldenv
jle
je
adc
adc
push
mov
jmp
jg
scas
xor
push
push
call
jl
aas
adc
imul
add
out
scas
cwtl
mov
cmpsl
mov
lahf
sub
call
pop
xchg
mov
cmp
js
push
add
sbb
andb
out
cmpsl
adc
push
fcoml
in
inc
adc
sbb
ret
arpl
in
pshufw
imul
cli
fscale
xor
adc
jno
xchg
outsl
add
in
movl
sbb
cli
and
sahf
sbb
sbb
scas
sub
bound
mov
dec
jb
stos
call
adc
xor
das
cld
imul
loop
xor
inc
scas
adc
sub
mov
mov
popf
addr16
fs
cwtl
ljmp
in
inc
sbb
es
xchg
mov
push
movsb
je
sub
popf
hlt
lret
lock
jl
sbb
addr16
xchg
in
mov
data16
stos
inc
in
insb
lods
cli
dec
loope
repnz
pusha
xor
sub
fisttpl
push
and
xor
dec
push
lret
pop
lods
jno
push
pop
fistps
cmp
stos
pop
es
mov
sarl
sub
sub
pop
xchg
sbb
out
pcmpgtw
mov
hlt
xor
adc
mov
sarb
repz
jg
mov
add
mov
add
lret
or
test
in
xchg
inc
mov
aaa
pop
sbb
pop
inc
js
aas
fistpl
lcall
test
jb
pop
push
into
js
out
jo
clc
dec
int
movsb
or
mov
adc
mov
xor
in
jp
insb
inc
sub
jnp
adc
stc
ds
mov
imul
jae
rorl
xchg
mov
movb
jmp
adc
and
jae
stc
mov
divl
cmp
sub
mov
pushf
dec
decl
hlt
jp
xor
das
out
jmp
sub
outsb
push
sbb
out
ret
sbb
rol
push
dec
xor
cmp
in
fimull
es
leave
or
pop
xor
xor
xor
mov
in
inc
out
lods
fimull
scas
xchg
es
mov
gs
lods
lret
lcall
xchg
lds
adcb
pop
push
negl
mov
jno
cmc
cmp
cmp
out
or
dec
adc
jnp
or
shll
dec
repz
fmull
dec
js
adc
addr16
std
test
mov
dec
pop
sbb
mov
pop
jae
out
cmpsb
inc
ficomps
and
cltd
push
or
js
mov
fisttps
fwait
dec
in
int
mov
out
pop
dec
pinsrw
mov
mov
hlt
jle
dec
xor
out
stos
fs
adc
jmp
ljmp
lcall
loop
xchg
into
enter
or
cmpsl
in
mull
jne
mov
xor
jnp
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
xchg
jl
stos
mov
adc
mov
mov
std
pop
pushf
mov
clc
fnstenv
mov
sbb
sub
les
loope
adc
inc
mov
push
fmull
in
ss
fsubl
mov
cmp
mov
sub
icebp
and
or
cmpsl
imul
cli
std
test
push
lods
mov
aam
nop
call
enter
aas
xchg
xor
xchg
scas
dec
lret
lret
cmp
scas
sub
push
cmp
jae
jmp
ljmp
push
add
fildl
iret
clc
xchg
sar
jmp
nop
negl
lods
push
jns
xor
out
push
lods
dec
push
lcall
nop
arpl
xlat
xchg
push
sbbl
pop
mov
jno
cmp
inc
sbb
jle
lahf
push
scas
mov
gs
mov
add
adc
flds
int
cmp
mov
cs
dec
mov
cmp
inc
or
inc
and
sub
inc
mov
dec
bound
insb
xlat
push
lahf
xlat
pslld
popf
pop
jl
push
adc
cld
clc
repnz
jg
push
mov
lret
cmpsb
jmp
cld
and
jbe
aad
mov
ljmp
inc
fisttpl
cmpsb
inc
hlt
rorb
xchg
rcrb
mov
cmp
stc
inc
scas
imul
or
scas
or
xchg
sbb
xchg
call
mov
adc
mov
xor
movsb
orb
cmp
xor
test
lock
and
xbegin
das
pop
cltd
inc
mov
cltd
frstor
out
cwtl
xlat
mov
ja
ror
cmp
leave
mov
pop
mov
mov
adc
movsl
or
adc
mov
out
jne
and
jg
mov
insl
xchg
ja
ret
or
cmp
loope
mov
and
aam
ja
pushf
in
jo
movsb
shrb
jnp
push
pop
sub
adc
jge
hlt
add
sub
pop
jno
aam
mov
xchg
mov
into
decl
pop
add
outsb
movsb
mov
pop
sub
push
mull
aas
orl
pop
repnz
fs
sub
rorl
sub
xchg
cmp
movsb
jo
imul
fwait
es
inc
push
adc
sbb
cmp
in
rcrb
das
loope
repnz
in
add
sub
punpckldq
out
lods
out
mov
jo
fcoms
ljmp
mov
inc
inc
in
add
dec
mov
into
ss
push
push
cmp
push
mov
pop
push
pop
push
xor
hlt
fistpl
xor
dec
lock
and
ficoms
popf
loope
xchg
inc
inc
aaa
and
mov
dec
imulb
sub
sahf
roll
in
jae
mov
pop
and
out
or
mov
inc
gs
adc
mov
lock
cmp
mov
leave
or
rcl
aas
dec
out
andl
nop
pop
sbb
pop
and
and
pusha
sub
clc
dec
pop
xor
lahf
dec
mov
insb
lcall
ja
test
mov
sbbl
outsb
push
cld
xchg
loop
mov
clc
ret
lret
adc
incb
and
cmp
xorps
or
loop
mov
dec
insl
push
sub
je
sub
insb
das
mov
aam
push
sub
and
call
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
or
pop
adc
jno
dec
pop
ret
xor
jp
sub
mov
pop
insl
mov
jmp
sbb
dec
iret
and
and
push
pop
mov
sti
jbe
push
mov
jl
cmpsb
ficomps
mov
sub
aaa
cmp
jno
rcrl
inc
add
or
in
or
push
ja
popa
popf
fistpll
jle
pop
add
xchg
cltd
jmp
or
lret
popf
push
sbb
or
aam
mov
adc
dec
dec
and
aaa
pop
mov
push
inc
inc
cmp
lret
pop
das
cmpb
test
lret
sbb
sarb
pop
ret
sub
mov
add
and
push
xor
jb
mov
push
cmp
jb
test
adc
push
sbb
daa
test
mov
cmp
cmp
dec
dec
xchg
dec
je
out
sbbl
insl
and
dec
sub
mov
xlat
call
outsl
sub
ljmp
call
jo
or
and
icebp
das
mov
inc
xor
subl
fimull
pop
xor
sbb
mov
cwtl
aam
push
in
mov
mov
call
sub
jmp
mov
loopne
cmp
xor
jmp
push
pop
in
jno
adc
or
xchg
lock
ja
xor
add
xchg
dec
enter
lods
mov
cli
icebp
sbb
imul
mov
cld
in
mov
mov
add
xchg
xchg
mov
mov
aaa
adc
xchg
pop
sahf
add
lahf
out
shl
popa
mov
inc
sbb
dec
sbb
stc
xor
xor
add
rcll
and
sub
mov
leave
es
arpl
add
rcll
or
das
dec
and
orps
cld
inc
setb
mov
mul
pop
aaa
sub
add
hlt
adc
cs
iret
cli
add
sahf
aam
sub
dec
adc
scas
rcl
stc
out
iret
int
test
jg
adc
je
aad
std
stos
dec
test
addb
add
dec
insb
xchg
mov
ljmp
ss
mov
cmpsb
push
rcrl
pop
lea
sub
jmp
bound
jg
pushf
pop
jecxz
mov
push
inc
outsb
mov
in
enter
movsb
cmova
mov
nop
out
stos
dec
aad
sub
outsl
jbe
jecxz
mov
jmp
repz
vmread
je
lret
jb
mov
leave
mov
cmpsl
adc
pop
jecxz
inc
xor
adc
jne
cmp
lock
sub
sbb
in
add
add
xchg
movsl
es
lock
stos
pop
pop
aas
pop
cmpl
adc
fwait
or
push
rclb
cmp
insb
addr16
clc
jbe
in
mov
repz
fneni(8087
popf
push
sub
cmpl
push
cwtl
pop
mov
dec
mov
push
popf
movsl
int3
pop
dec
out
aaa
inc
popf
and
pop
mov
add
cwtl
adc
js
jbe
inc
mov
std
jns
mov
out
ret
cmc
and
mov
sbbl
pop
or
sbb
or
das
ret
aad
mov
cmpsb
sub
outsb
cmp
xchg
lcall
jne
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
mov
mov
push
into
xor
mulb
push
push
lret
fldt
sub
and
inc
repz
mov
adc
outsb
jno
adc
push
push
cld
and
xchg
push
xchg
aad
sti
jp
pop
inc
add
in
mov
insl
or
ds
adc
cmp
in
mov
inc
lret
mov
jno
push
inc
ss
adc
and
jg
push
mov
lret
and
fbld
sub
test
cmp
sub
test
cmp
dec
pushf
shr
inc
adc
insl
negl
cmp
testl
fwait
rorb
jo
mov
push
sub
mov
jmp
sub
add
mov
cmp
shlb
pop
lds
loop
icebp
xchg
mov
push
adc
arpl
lahf
jo
sti
fwait
dec
sub
sub
sbb
lahf
sub
fcomi
fsubp
xchg
xchg
insb
dec
cwtl
mov
mov
dec
xor
xchg
or
xchg
xor
xchg
leave
push
fstpl
mov
fmuls
and
outsl
sbb
leave
imul
jl
pop
pop
vpunpcklwd
ret
or
mov
fcompl
jbe
adc
add
scas
stc
das
adc
xor
mov
push
lahf
pusha
stos
pop
je
sarl
adc
fucomp
push
jne
bound
fidivl
sbb
std
mov
mov
and
pop
flds
lcall
in
push
imul
xchg
push
cmp
mov
dec
icebp
jecxz,pn
cmp
jb
mov
fdivs
cltd
mov
ss
jmp
std
pop
shrb
mov
out
int3
jae
les
in
movsb
loope
xchg
lahf
xlat
push
in
out
dec
pop
xor
xchg
mov
and
mov
stos
and
sub
jns
loopne
ds
movsl
mov
sub
ds
mov
mov
shlb
das
data16
mov
in
cli
pop
or
in
jb
lods
push
je
out
bts
or
mov
push
out
into
sbb
mov
jb
inc
jnp
or
jae
lret
mov
and
mov
lds
dec
mov
jb
push
sbb
jecxz
arpl
and
jae
movsl
pop
dec
negl
dec
pop
hlt
call
sub
push
ss
xchg
pop
or
fwait
sbb
mov
lds
rol
xor
pop
pop
push
pop
mov
jge
cmpl
jmp
adc
add
pop
in
bound
outsl
call
adc
add
loop
cld
sahf
mov
xor
mov
scas
jg
pushf
loopne
shrb
pop
lds
jge
dec
xlat
es
pop
xchg
popaw
mov
ficomps
or
stos
dec
cmpsb
arpl
call
dec
imulb
xchg
or
insb
mov
sbb
lcall
mov
jmp
adc
mov
dec
and
sbb
push
inc
lahf
lret
daa
enter
loopne
add
fwait
and
mov
jecxz
and
xchg
mov
cli
lock
pop
stos
jp
rol
gs
sarl
addl
lods
es
loope
es
push
inc
pop
aaa
out
or
mov
xchg
sub
add
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
lods
gs
adc
mov
inc
dec
xor
push
xchg
ret
push
pop
sbb
ss
ja
push
mov
repnz
push
sbb
add
adc
and
push
jno
mov
mov
jmp
insl
arpl
adc
int3
mov
and
mov
inc
je
subl
daa
cmpl
sbb
add
pop
adc
dec
pop
lahf
out
pop
mov
xchg
dec
xor
adc
rcr
mov
jo
add
arpl
ficomps
mov
pop
mov
mov
cld
imul
pop
and
push
jno
loope
movsb
icebp
pop
push
jmp
mov
shll
je
aaa
fdivrs
xchg
push
add
mov
mov
sub
inc
xor
push
xchg
jb
jns
int3
insl
clc
std
sub
shlb
fidivl
scas
mov
jl
faddl
mov
and
push
mov
mov
inc
lods
int
mov
ds
mov
cmc
xchg
cld
cld
int3
mov
pusha
aas
xchg
jbe
dec
sbb
pop
inc
sahf
loopne
dec
int
push
mov
xchg
mov
fcom
push
fdivrp
test
ss
cmp
gs
paddsb
sbbl
std
push
push
arpl
hlt
js
push
rcl
xchg
add
push
pop
in
popa
mov
mov
sub
pop
outsl
xchg
xor
inc
aam
sti
mov
mov
fcmovnu
ja
dec
add
dec
loopne
xor
ret
popa
mov
xchg
jo
daa
xchg
notl
xchg
jge
pop
jp
jb
pusha
push
popf
fnstcw
sbb
jo
add
xchg
and
aad
in
shll
lea
adc
cmp
mov
add
push
push
daa
push
xor
mov
inc
sub
jbe
scas
adcb
or
repnz
mov
movsb
cmpsb
jns
mov
sub
ret
jns
sub
xchg
dec
iret
orb
les
cmpsl
adc
jmp
mov
orb
adc
mov
mov
les
subb
xchg
sub
cmovnp
push
add
mov
cmp
or
jg
cli
sub
sub
jo
cld
mov
adc
mov
jae
push
mov
into
je
jb
pop
jnp
sbb
popf
je
in
jne
xor
and
sarb
imul
sbb
mov
mov
add
xchg
and
mov
dec
nop
cmpsl
jmp
pop
pop
scas
mov
mov
add
pusha
scas
subl
sbb
pop
pop
ret
pop
inc
icebp
xchg
cs
sbb
and
pop
sbb
pop
sub
movsl
mov
jl
xchg
fiadds
and
pop
imul
inc
adc
scas
aas
mov
push
cld
jecxz
aam
shrb
lret
push
sbb
int
outsb
jnp
dec
inc
dec
sub
aas
stc
add
into
int3
push
test
adc
aam
lret
and
mov
cmp
jbe
rolb
jnp
add
outsl
aas
mov
xchg
clc
mov
rcll
xor
imul
or
loop
mov
sarl
sbb
inc
test
setge
jo
test
jecxz
lock
xchg
clc
repz
push
fdivs
repnz
push
les
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
cmpb
adc
adc
xchg
inc
push
and
sbb
arpl
pop
add
add
insb
adc
ret
incb
aam
inc
xor
add
dec
out
call
jp
dec
jns
int3
or
pop
sahf
push
clc
sub
push
pcmpeqw
xchg
jp
bnd
xor
es
lret
ljmp
mov
out
leave
jnp
xor
es
test
int
push
cmp
lret
pop
or
ret
fldenv
shl
imul
jmp
ret
movsl
cs
movsl
xchg
js
adc
push
sub
pop
adc
mov
xchg
push
flds
shrb
and
fisttpll
rclb
dec
push
mov
lret
xor
popa
sbb
negl
clc
dec
adc
and
arpl
fisubl
sub
mov
loop
mov
loop
pop
push
push
stos
cmp
mov
adc
pop
hlt
daa
sets
loopne
sarb
dec
pop
sarl
sub
lds
nop
add
and
fs
movsb
mov
xor
dec
insb
fcom
add
jg
mov
mov
mov
push
aaa
icebp
and
jmp
push
ljmp
insb
xchg
clc
loope
xchg
adc
imul
cmp
cmp
mov
sbb
mov
push
enter
nop
jmp
xor
divb
pushf
pop
mov
pop
mov
sbb
iret
cmpsl
in
mov
add
dec
and
ds
and
sahf
inc
daa
sbb
xchg
cmpsb
and
add
sti
cmp
cmp
ret
mov
mov
xchg
fbstp
adc
or
push
mov
int
sar
adc
iret
movzbl
inc
pop
dec
cli
cmp
mov
push
leave
push
out
dec
fsubs
adc
and
mov
push
js
lds
enter
dec
rorb
lea
movsl
out
push
fwait
in
loopne
mov
pop
inc
mov
xor
test
jbe
jp
aaa
nop
data16
scas
ss
js
andb
sbb
and
movsb
mov
outsb
lods
pusha
clc
movsl
ja
fnstsw
or
sbb
in
inc
nop
repz
push
mov
inc
xchg
inc
xchg
mov
gs
dec
or
inc
jmp
in
repnz
cli
repz
jmp
inc
and
or
inc
xchg
inc
cmp
sbb
lret
xor
enter
and
push
push
mov
loope
imull
adc
mov
aaa
cmpsl
int
hlt
mov
dec
loop
xchg
fidivl
mov
and
push
and
jmp
jg
movsb
int3
and
movups
push
mov
test
sub
add
cmpsl
movsb
inc
mov
jle
jecxz
das
xchg
xchg
mov
int3
and
inc
jo
es
mov
pop
fldenv
enter
sub
and
ljmp
fs
mov
mov
mov
mov
inc
leave
fwait
ds
xchg
arpl
jno
xor
gs
ret
jle
in
imull
xchg
cwtl
cmpb
movsl
mov
stos
push
lret
xchg
test
sbb
jmp
rorl
inc
lods
cs
test
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
insb
xchg
dec
adc
mov
adc
leave
imul
mov
and
test
lcall
mov
and
inc
repz
pop
cmp
pop
cmp
ss
mov
in
fwait
pushf
pop
dec
fucomi
or
ret
pop
pop
in
rorl
inc
mov
mov
je
dec
adc
pop
cltd
mov
rolb
xor
adc
dec
imul
adc
pushf
addb
inc
push
xor
inc
scas
call
mov
sub
cs
fbstp
lods
lea
push
jno
xchg
scas
scas
repz
mov
les
mov
lods
push
mov
cltd
dec
push
xchg
jmp
js
sti
lahf
out
cmc
pop
cld
mov
outsl
rcr
pop
pushf
fadds
stos
jne
push
stos
and
push
imul
out
ss
lods
ljmp
dec
cmpw
pop
popa
rclb
ss
xchg
push
jp
arpl
sbb
inc
into
and
cltd
sub
push
push
das
lret
out
inc
lahf
js
flds
add
add
fucomp
xchg
jg
xchg
xlat
das
std
clc
enter
mov
ljmp
jmp
stos
aas
shrl
ficompl
push
xor
rcll
mov
push
jno
inc
inc
pop
xor
imul
xlat
mov
mov
jp
scas
and
jecxz
xor
add
andl
jmp
rcrl
jno
sub
jo
inc
scas
push
pop
lock
jl
pop
inc
movsl
test
push
inc
mov
xchg
in
rclb
aas
xchg
push
jb
lcall
mov
jnp
and
in
adc
dec
xor
pusha
pop
jns
fldt
sbb
dec
ficompl
or
dec
jns
mov
js
repnz
pslld
or
test
stc
adc
cmp
lret
push
fs
jne
les
sti
cmp
sahf
fcomi
and
dec
mov
sub
push
mov
xlat
push
data16
outsb
mov
cltd
xor
lret
add
or
cmp
mov
jbe
lret
jge
dec
and
sub
pop
sbb
aad
ljmp
test
add
pop
mov
adc
pop
iret
enter
mov
pop
clc
insl
push
jns
popa
inc
lods
add
sbb
or
lahf
sysexit
push
outsl
and
cmpsb
bound
into
inc
test
jl
dec
out
xchg
add
fabs
xchg
test
jno
popa
in
add
inc
add
add
test
add
adc
shlb
or
icebp
or
xchg
adc
jae
inc
stos
addr16
dec
mov
sbb
cmpsb
sub
pop
mov
cltd
cmp
mov
nop
cli
arpl
push
addb
mov
add
test
push
jnp
add
xchg
pop
movsl
mov
std
pop
xor
pushf
nop
lods
jo
ljmp
ret
lock
shll
jno
xor
pop
adc
inc
mov
cs
stos
je
mov
lods
xchg
dec
ss
int3
xchg
push
js
and
jo
pop
into
xchg
aam
sbb
pop
jnp
mull
shlb
into
pop
sarl
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
das
mov
adc
mov
adc
push
sbb
pusha
adcb
outsl
jne
hlt
insb
outsb
mov
lret
dec
stc
pop
ss
sbb
inc
out
sub
jnp
stc
pop
xchg
or
push
les
insl
jnp
test
pop
fwait
jbe
ja
xchg
pop
mov
dec
mov
pop
lret
pusha
jg
add
jns
testl
or
sbb
je
ja
jl
push
shrl
insb
insl
adc
faddl
setp
cmp
and
jo
sub
xor
cmp
xchg
push
imul
clc
ds
pushw
int
xchg
stos
pop
jecxz
shrb
jbe
and
push
pushf
movaps
lods
xchg
lret
les
das
subl
dec
in
mov
mov
dec
hlt
sub
mov
fisubrs
xor
jo
push
dec
enter
cli
hlt
bound
xor
xor
push
push
cmpsl
rcr
pop
data16
test
movsb
movaps
mov
scas
jno
call
insb
dec
inc
sbb
mov
mov
xchg
adc
repnz
or
in
call
sub
xchg
push
xchg
mov
insl
jae
xor
pop
aad
pop
lea
mov
mov
loop
pop
das
btl
push
lahf
xchg
sub
popa
mov
dec
std
pushf
jne
lea
popf
or
daa
cmp
jns
call
add
cs
pop
push
push
xor
test
mov
aas
mov
test
js
fstpt
int3
sbb
aam
sub
pushf
push
adc
or
mov
pop
and
xor
ret
jae
iret
jg
lock
int
mov
add
push
mov
xor
cmp
leave
jg
arpl
fstpt
jge
cmp
cmp
fcmove
or
insb
nop
inc
in
lds
test
xchg
mov
lcall
bound
lcall
lahf
out
jp
mov
fs
push
int
lods
call
jae
add
in
lock
adc
imul
loop,pt
cmp
addr16
mov
pop
ffreep
add
stc
adc
xchg
mov
cltd
cmc
icebp
and
xor
rolb
sub
out
dec
jb
xlat
add
jae
adc
pop
xor
pop
add
fstpt
test
pop
inc
les
insl
cmp
jg
iret
scas
aas
sbb
daa
fcompl
inc
mov
mov
cmpsb
lods
mov
dec
jno
subb
xchg
xchg
in
sti
sar
notb
xchg
std
push
cwtl
pop
inc
into
sbb
or
mov
mov
mov
pop
mov
xor
rcl
mov
testl
and
xchg
data16
call
mov
ja
lret
imul
dec
icebp
lahf
push
rcrl
pop
movsb
enter
jns
or
jno
push
loope
mov
ret
addr16
inc
rsqrtps
mov
push
cmp
in
mov
jae
fsub
lahf
or
pop
cmpsb
inc
mov
es
in
lcall
sti
push
sub
push
ljmp
pop
in
mov
and
inc
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
insb
aad
adc
mov
adc
inc
aad
das
es
pushf
add
cmp
dec
jp
fcmovb
call
shrl
sbbl
push
jmp
fidivl
mov
dec
ret
mov
icebp
cmp
mov
fisubrl
add
xchg
mov
leave
addr16
inc
xor
push
jae
test
mov
je
sub
push
and
and
mov
add
into
jmp
jbe
jmp
push
mov
add
jbe
mov
ficoms
mov
fmuls
sarb
in
dec
scas
push
fdivrl
das
cmpsl
jbe
aaa
outsl
ds
pop
int3
or
jnp
test
xor
andl
cmp
call
push
ret
xchg
push
arpl
cmpsl
dec
out
adc
ficompl
push
fs
movsw
cmp
dec
mov
rcl
dec
gs
sahf
cmp
or
cmp
rcll
pop
adc
and
pop
shl
fs
aas
xchg
inc
xchg
or
push
jge
pusha
test
xchg
inc
cmp
mov
js
or
xchg
xchg
scas
ljmp
enter
push
adc
cmpsb
add
dec
push
out
ret
lods
dec
mov
push
scas
cwtl
stc
imul
or
dec
loope
rolb
rcrb
dec
dec
rolb
jne
scas
mov
jp
lcall
dec
loop
xchg
out
dec
imul
aas
data16
xchg
pop
shrl
xor
lea
out
aad
sbb
add
stc
jnp
test
scas
mov
ret
out
push
daa
sahf
in
push
lret
ret
add
mov
cmp
movsl
sarb
lahf
mov
sbb
push
call
push
cmp
mov
addr16
sahf
ss
xchg
std
cmp
int3
xchg
pop
fwait
iret
jg
pop
les
jne
sbb
int
jae
inc
pop
pop
and
ret
test
sub
fcoml
popa
not
or
pop
xchg
pop
rorb
pop
jne
sbb
add
jp
sub
cmc
std
and
mov
stc
sbb
push
jno
popf
push
mov
xchg
add
cmpsb
sub
add
mov
cmp
addl
int3
xchg
jle
pop
cmp
mov
push
jne
sbb
bound
sub
sub
test
xchg
je
shrb
xchg
xchg
jge
je
xchg
or
xchg
mov
mov
stos
sub
mov
lcall
mov
mov
ficomps
xchg
jge
mov
ja
outsb
xchg
in
loope
mov
shr
loopne
dec
je
mov
or
add
mov
jg
cmp
and
popf
sub
and
stos
sub
stos
loope
mov
xor
cmpsl
mov
inc
mov
mov
and
xchg
popl
mov
xchg
loope
mov
pushf
push
fwait
idivl
xchg
fstpl
xchg
rcrb
push
call
jo
pop
ret
mov
insl
rcll
mov
jl
dec
imulb
scas
xor
xor
sbb
inc
mov
mov
lods
addb
adc
ret
ret
arpl
jp
cli
rcr
jmp
mov
or
mov
in
mov
in
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
cli
cmp
jbe
adc
mov
adc
rcl
sbb
sub
add
ljmp
outsl
push
fadd
sbb
push
pop
adc
adc
jge
push
inc
mov
repnz
mov
lods
lret
jo
add
cmp
loop
leave
clc
and
pushf
aam
jp
int3
outsl
dec
add
add
pushf
enter
aad
pushf
push
mov
add
jp
push
aam
out
xor
mov
stos
or
sub
in
test
jae
push
sub
stos
loop
xor
pusha
pop
lahf
sub
out
xchg
add
cmp
jo
add
jecxz
jg
fadd
inc
loopne
daa
outsb
inc
add
pop
inc
push
or
lds
addr16
pop
scas
pop
mov
nop
xor
imul
inc
mov
and
xchg
sbb
cmpsb
rcrl
lret
imul
je
fdiv
rcll
dec
push
inc
xorb
mov
outsb
in
push
pop
and
stos
out
push
xchg
out
fldz
outsb
stos
pop
sub
push
shl
call
jae
scas
jge
xlat
emms
js
mov
xor
mov
enter
rcrb
shrl
pusha
push
sub
rcl
xchg
test
xor
shr
cmpsl
mov
popf
mov
or
dec
mov
fbstp
mov
lods
or
rcrl
add
out
hlt
pop
add
ret
push
jno
sbb
push
int3
inc
push
and
lcall
rcll
push
fidivrl
dec
sbb
pop
popf
pushf
imul
ficoms
add
dec
nop
fs
ficomps
mov
xor
add
inc
mov
jo
mov
jns
pop
nop
adcb
fidivl
mov
movsb
repnz
cmp
sbb
pop
push
fidivrl
xchg
jp
call
outsl
or
mov
mov
pop
jecxz
test
or
fcomps
rclb
cmp
rcrl
lds
mov
sahf
mov
push
clc
fwait
je
insb
pop
out
add
jl
aas
pop
daa
lret
sbb
insl
popa
movsl
iretw
xor
jmp
and
jb
sub
sbb
mov
xchg
cmp
mov
mov
in
outsl
fsub
idivb
sub
iret
xchg
dec
push
jge
add
scas
arpl
outsb
fnstenv
loopne
mov
push
mov
add
stos
dec
inc
jge
or
test
stc
loopne
sbbl
mulb
jns
add
xchg
fsts
lods
icebp
ja
dec
das
mov
stos
les
mov
loopne
lcall
jns
nop
jbe
mov
xor
imul
arpl
loop
cmp
sub
xchg
add
aaa
xorb
mov
sub
pusha
jg
aaa
fisttpll
add
test
cmp
pop
call
mov
xor
push
fcmove
sbb
test
sahf
push
fdivrs
mov
movq
sarb
mov
add
movsl
push
xor
enter
jl
icebp
dec
lds
lods
fldenv
mov
jnp
and
jb
or
mov
scas
mov
jmp
mov
cmp
mov
in
stos
mov
lcall
mov
sti
test
mov
cld
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
adc
adc
jo
sbb
pop
xchg
xchg
dec
jp
daa
mov
xchg
psllq
into
jg
movsb
bound
popa
in
pop
pop
push
ss
or
leave
xor
sti
fisttps
arpl
xorl
movsl
mov
pop
cmp
pop
and
test
xchg
sbb
sbb
js
insb
mov
sub
sub
and
mov
out
scas
cmp
sbb
aam
jecxz
push
imul
and
or
mov
jnp
jmp
ret
push
cli
gs
push
cmp
dec
or
dec
xchg
jecxz
mov
out
cs
xor
enter
fldenv
mov
mov
cmp
pusha
jo
or
int
cli
or
dec
mov
cs
shrb
fadd
scas
inc
test
clc
xchg
jo
aad
lahf
inc
inc
xor
cmc
mov
pop
call
cmp
pop
mov
jno
push
push
mov
sbb
sti
fidivrl
pushf
out
jae
mov
sbb
push
sbb
decb
andl
aad
pop
mov
stos
mov
xchg
fldenv
xor
les
rclb
ret
loopne
cmpsb
cmp
jnp
adc
and
addr16
xchg
xchg
inc
movsl
std
jno
or
cs
xchg
jnp
shl
mov
or
pop
pop
sbb
mov
scas
loopne
shll
rcrb
mov
push
xor
insb
fdivrl
dec
imul
mov
std
xchg
jns
xlat
xor
movsb
xchg
icebp
adc
xlat
mov
dec
dec
out
lahf
mov
xor
out
lds
fcmovu
xchg
insl
inc
daa
lds
test
mov
imul
inc
xchg
cmp
dec
pusha
fdivl
sbb
out
incb
repz
mov
std
mov
or
std
test
adc
mov
mov
cmp
mov
adc
pop
fiadds
pop
adc
repnz
ret
outsl
add
mov
int3
mov
fiadds
sub
dec
cmp
xchg
in
jbe
dec
in
xchg
sbb
jg
loope
cmp
adc
cltd
or
cmpsl
sub
in
test
xchg
mov
cmp
cli
stos
jbe
ja
adc
jbe
sbb
inc
lea
imul
cmp
sbb
add
mov
add
in
pop
mov
sub
and
xor
jg
or
repz
bound
dec
sub
int3
add
rcrl
xchg
das
outsl
int3
mov
push
bnd
cmp
jae
cmp
lahf
dec
repz
sub
xor
clc
add
jmp
jecxz
iret
popa
cmp
insl
jo
pop
pop
xchg
fcompl
lock
mov
cmpsb
ljmp
jecxz
popa
rol
and
shll
pop
lahf
and
jge
incb
scas
add
inc
out
mov
lods
shlb
push
or
aaa
pop
les
push
xchg
mov
gs
in
out
imul
dec
ret
add
test
sbb
adc
ja
gs
loop
mov
iret
jnp
mov
or
nop
popa
call
xchg
jmp
test
loope
pusha
stos
fsubs
mov
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
jecxz
idivl
and
adc
mov
add
jno
jbe
jb
cmp
inc
mov
stos
flds
jbe,pn
aad
cmp
inc
test
mov
pop
fcomi
mov
cltd
or
into
inc
xchg
mov
sub
stos
les
push
ja
dec
push
cmp
ret
pop
out
dec
push
in
int
imul
shll
cmpxchg
push
clc
ja
loop
mov
addb
pushf
pop
cmp
cwtl
inc
push
test
cltd
jns
mov
cmp
into
push
cmp
lcall
cmpsb
push
popa
lret
repz
cs
push
das
mov
jnp
push
jb
sub
jmp
mov
stos
rolb
mov
and
pop
test
lock
dec
lods
inc
mov
sbb
sbb
fisttps
daa
ds
in
mov
mov
sbb
jp
dec
pop
fidivrl
push
movsl
dec
cvtps2pi
or
jnp
ret
inc
mov
jnp
js
sub
faddp
mov
jbe
xchg
sbb
add
mov
sti
fs
mov
das
hlt
cmp
or
lds
inc
mov
leave
mov
aam
mov
and
aaa
mov
mov
dec
int
in
lcall
mov
xchg
mov
sub
mov
test
sub
mov
notl
cmp
xor
xor
pop
insl
adc
dec
inc
cli
pop
push
fldcw
jnp
cwtl
fbld
ljmp
stos
pop
ljmp
imul
cwtl
loopne
arpl
out
stc
push
outsb
inc
and
sarb
pop
aam
enter
xor
aaa
or
std
test
incl
aas
push
mov
adc
jecxz
imul
xor
xlat
and
jle
or
pop
pusha
out
xlat
push
xchg
jo
sbb
pop
dec
sbb
sub
aad
mov
in
mov
jmp
jmp
add
pop
push
or
dec
lods
sbb
dec
push
call
or
sbb
xchg
jge
je
sarb
and
jecxz
loop
and
lret
shlb
cmp
or
sub
mov
mov
fwait
pop
imul
lods
insl
cmp
ds
cli
aaa
lcall
jae
mov
mov
xor
shrb
in
push
mov
fs
fs
sbb
add
loop
and
sub
adc
dec
sub
repz
daa
loopne
jecxz
xor
push
sbb
add
ljmp
dec
jbe
xchg
mov
or
es
adc
cltd
dec
sub
cmp
enter
sub
or
ficompl
xor
fdivrl
cwtl
push
sbb
lods
dec
adc
je
dec
pop
mov
enter
repz
outsl
es
in
xchg
lods
pop
roll
xchg
add
add
in
sahf
push
mov
into
fwait
stos
push
insb
imul
mov
testl
add
lret
faddl
stc
push
call
out
frstor
cli
push
mov
lds
imul
loopne
mov
cmc
or
sub
out
cmp
loope
sti
pusha
inc
leave
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
sbb
jle,pn
sbb
adc
dec
shl
in
ret
mov
in
std
gs
movsl
aas
pop
call
jns
or
lock
and
fucom
pop
cltd
push
sub
mov
jmp
and
cmp
aas
mov
mov
dec
sbb
pop
add
push
pop
pop
clc
push
mov
mov
stc
push
test
dec
push
cltd
mov
fnsave
dec
mov
je
in
into
mov
in
mov
rorb
aaa
and
lds
mov
imul
addr16
lret
dec
cmpsb
sub
sub
popa
mov
addr16
jge
lret
mov
jmp
sub
pusha
lret
add
aam
lods
pop
pop
in
mov
pop
fbld
adc
stos
sbb
lret
movsl
push
sub
sbb
cmp
jno
push
xor
sub
mov
in
sub
or
adc
cmp
into
addl
aad
cmp
int3
jle
jb
xchg
or
push
sub
sahf
mov
sbb
lret
aaa
in
cmp
sbb
in
inc
js
lds
add
popf
inc
xchg
lods
sub
pop
into
aad
sbb
push
fidivrs
decl
dec
ljmp
outsb
jne
and
aaa
insl
mov
scas
repnz
lods
movsb
jmp
push
mov
push
inc
pop
daa
dec
stos
add
cld
push
jle
in
out
stos
push
sub
ret
lea
movsb
enter
mov
outsb
fcmovnbe
xchg
adc
cmpsb
out
sub
std
mov
fsubl
push
push
sub
adc
cltd
insb
movsb
and
xor
out
mov
out
dec
xchg
addb
rcll
test
inc
and
pop
and
jns
fldl2t
and
push
imul
fucom
es
leave
loopne
icebp
add
stc
dec
adc
into
push
push
cmpb
and
pop
cltd
movsl
mov
addr16
xchg
dec
pop
push
pop
push
lahf
sub
sub
jmp
aaa
dec
ficomps
inc
std
das
cwtl
mov
sar
pop
scas
jle
add
xchg
addr16
cwtl
add
pop
or
inc
or
bound
jnp
mov
iret
scas
andb
sbb
dec
enter
inc
out
fsubp
mov
es
dec
lods
bound
pop
cmp
das
ljmp
and
fdivl
inc
rcl
jae
mov
jle
jp
push
dec
xor
popf
pop
cmp
mov
xchg
push
repnz
rcr
xor
pop
jne
mov
pop
fcomps
stos
sub
out
add
jecxz
push
in
dec
cs
xchg
popa
sbb
out
icebp
cmpsl
sbb
pusha
fsubrl
int
fstl
loop
and
adc
push
pop
sbb
out
push
mov
popa
mov
ljmp
fs
jge
jle
in
sub
test
mov
cltd
pop
std
sti
inc
movsb
mov
and
mov
xor
xchg
pop
mov
jg
mov
cmc
mov
sub
insb
mov
pop
dec
pop
cmp
xchg
jmp
pop
mov
push
xor
mov
push
or
add
xor
test
mov
mov
mov
idivl
jo
inc
xchg
lds
loopne
popa
fsts
fs
imul
xor
and
clc
fnstsw
mov
and
and
pop
add
testb
addb
add
shrb
add
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
mov
call
ffreep
lock
xchg
or
or
cmp
repz
shll
repz
pop
test
out
jnp
push
ds
sub
xor
inc
hlt
push
insb
mov
stc
hlt
mov
adc
adc
int
out
jno
mov
inc
out
cmp
insb
or
dec
out
sbb
jae
mov
bound
leave
xchg
js
outsl
and
stc
ds
dec
xor
imul
decl
in
cmp
mov
jp
cmc
bound
push
out
add
dec
sbb
or
hlt
fs
and
mov
push
ret
loope
or
mov
in
shlb
icebp
sahf
in
xor
iret
sbb
inc
fwait
cmp
push
push
adc
push
xor
sbbb
adc
repnz
aas
mov
inc
out
mov
addr16
and
movsl
sbb
shl
xchg
mov
add
jne
fmulp
imul
arpl
inc
data16
xor
and
in
sub
arpl
fs
test
mov
int3
addb
push
in
pop
mov
cmp
cmp
mov
pop
and
fstpl
xor
mov
pop
jno,pt
out
mov
ds
cld
fdivs
adc
pop
jb
dec
dec
rol
push
push
insl
inc
popa
inc
or
xor
lea
sti
jmp
adc
inc
imul
aad
cmp
sub
jle
mov
push
sub
inc
lret
fimuls
addr16
jmp
hlt
in
notl
pop
int
and
icebp
sub
loop
imulb
rcrb
vpunpckhbw
adc
lcall
adc
cltd
or
xchg
outsl
shrl
or
pop
cmpsl
cmp
jl
out
adc
inc
rcrb
in
cmpsb
push
sub
movsb
ljmp
cmp
add
fcoms
js
lods
int3
push
ret
mov
sbb
jae
int3
aam
gs
dec
push
adc
shrl
ljmp
push
mov
daa
pop
xchg
mov
push
ss
jle
js
cmp
dec
fwait
push
inc
addb
xor
addb
push
cld
add
outsl
dec
out
ret
pop
or
add
inc
ret
push
test
jbe
pop
sbb
in
mov
add
sub
mov
sahf
inc
test
adc
sti
mov
inc
jmp
cmp
fstpl
jg
or
stos
push
or
movsl
jne
hlt
in
jle
fsubrl
dec
mov
inc
push
xor
gs
dec
xchg
add
in
imul
subl
iret
or
subb
xchg
xchg
jmp
jg
mov
inc
push
jno
sbb
push
xor
jecxz
jns
fdivrs
xor
movsb
jb
lcall
movsbl
addb
addr16
movsb
cmp
mov
lea
or
xchg
out
adc
add
nop
loopne
ja
xor
pop
es
repnz
cltd
iret
sahf
bt
cmp
pushf
or
lret
out
mov
in
loopne,pt
add
mov
and
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
jb
or
mov
adc
outsl
cmp
ljmp
xor
push
jae
frstor
sbbl
insb
cli
mov
movsl
ds
test
popf
ja
leave
sub
xchg
stos
shl
ret
cld
jmp
pop
ret
jo
cmp
jb
mov
xor
cmp
cli
or
sbb
push
stos
mov
push
xchg
imul
outsb
jecxz
dec
int3
pop
fwait
or
add
sbb
hlt
mov
pop
js
xchg
push
dec
fld
outsl
mov
stos
mov
popf
cmp
in
shl
xchg
adc
push
in
loope
xchg
ljmp
test
ret
sahf
xchg
es
das
mov
mov
call
out
jae
ja
iret
and
dec
mov
insl
sbb
enter
scas
mov
sub
sbb
cwtl
sbb
push
aam
pushf
push
sub
pop
lock
pop
push
iret
mov
jae
ret
insb
mov
mov
in
loope
ljmp
dec
sarb
scas
jo
jg
sahf
rorl
sub
or
data16
lcall
jns
lods
cld
jge
popa
je
cmp
pop
add
and
cld
push
mov
movb
mov
repz
jns
push
xchg
clc
inc
in
scas
jp
fprem1
js
lret
mov
pushl
add
dec
xor
add
and
fst
inc
movb
dec
xchg
push
dec
sub
mov
shrl
fadds
out
sub
popa
pop
mov
inc
into
lret
pop
pop
ds
repz
mov
cli
xchg
push
mulb
les
sub
cmpsb
jmp
push
mov
mov
scas
fdivrs
jg
cmp
mov
xchg
mov
and
fwait
xchg
nop
cmpsl
adc
jne
dec
mov
int
lods
into
sar
push
pop
or
repnz
scas
test
add
mov
mov
mov
add
cli
shll
ljmp
mov
adc
jnp
fdivrp
push
cli
scas
andb
mov
inc
cmp
mov
xchg
or
int3
push
lcall
dec
mov
add
xchg
outsb
push
sti
call
xchg
cmp
push
rcll
stos
xchg
mov
mov
sub
xor
std
xchg
jl
sub
cmp
mov
adc
les
pop
insl
jmp
jge
cwtl
lea
mov
push
xor
test
jmp
test
aad
inc
ret
mov
push
mov
pop
adc
mov
pop
xchg
dec
add
lea
inc
jo
or
jg
and
aas
arpl
mov
sbb
test
negb
add
adc
jbe
popf
call
add
cltd
scas
fmul
popa
cmp
jbe
mov
sub
push
and
push
ss
arpl
xchg
in
jmp
icebp
cmpsb
aam
loope
cmpsb
jmp
pop
mov
push
fsubr
lods
xchg
sarl
fwait
mov
movsb
sub
cmp
adc
lcall
movsl
mov
mov
fsts
je
je
lcall
pushf
dec
mov
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
xor
jle
or
adc
pop
lret
data16
mov
fs
inc
jb
das
arpl
fists
test
arpl
dec
push
call
nop
dec
and
addb
inc
movsb
sbb
sub
testb
in
sub
mov
push
ficoml
adc
cmp
mov
insb
push
cmpb
out
repnz
pop
popf
lock
pop
popf
je
jp
xor
sbb
mov
out
push
fadds
xchg
aam
call
call
fsubrs
xbegin
prefetchwt1
sbb
ljmp
xchg
lahf
cltd
sub
pop
mov
xchg
mov
jmp
fiaddl
cwtl
repz
mov
testl
mov
gs
add
mov
mov
sub
lret
js
dec
add
std
addr16
jno
jge
loop
and
das
inc
imul
test
or
push
test
and
sbb
fwait
leave
pushf
cwtl
add
xchg
imul
in
xor
nop
add
xchg
add
scas
push
add
sbb
adc
xchg
sti
mov
inc
ror
std
es
xchg
jo
lock
adc
ficoml
int
cwtl
jecxz
int
call
mov
or
pop
aam
jno
aas
iret
out
jae
lcall
mov
xchg
and
mulb
add
lahf
or
xor
mov
sbb
in
fists
repnz
fs
mov
arpl
test
pextrw
xor
push
mov
mov
mov
mov
in
pop
fcmove
inc
cmc
xchg
jnp
xor
jno
data16
insl
ret
clc
cmc
xchg
out
dec
movsb
in
loopne
call
add
mov
sti
pop
in
fs
dec
xchg
fnstenv
in
pop
push
stos
pop
aam
ret
dec
outsb
int3
and
adc
sti
sub
sub
inc
lock
push
xchg
into
sti
loopne
in
cmc
inc
mov
addr16
insl
fmull
or
cmp
jmp
lret
orb
jb
add
lea
pushf
imul
pop
testl
jecxz
pop
nop
xor
jmp
mov
mov
add
push
shl
xor
mov
fsubl
jo
fmuls
push
flds
popa
rcrl
jno
push
mov
cmc
das
je
mov
aaa
sub
in
in
mov
cmp
bound
outsb
cmp
push
leave
lods
adc
repnz
mov
jge
mov
mov
mov
or
daa
sbb
jle
jb
mov
fldcw
outsb
leave
and
scas
das
jno
inc
stos
stc
mov
push
repnz
mov
xorl
hlt
popf
or
or
mov
cmpsb
jbe
sahf
mov
push
add
mov
sbb
into
lock
adc
es
mov
shll
xor
into
cli
push
pop
aas
leave
mov
jmp
cltd
bound
loope
and
pop
shrl
or
jge
scas
or
sbb
addr16
aam
mov
pusha
bound
push
push
popa
insl
dec
movsl
aam
outsb
mov
aam
jmp
in
daa
xchg
inc
shrl
shll
xor
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
mov
mov
adc
enter
xchg
lods
arpl
fiadds
je
in
in
fwait
sub
sub
call
ja
mov
sub
bnd
es
imul
xor
movsb
push
dec
xchg
xlat
cmp
aad
mov
mov
gs
mov
push
push
dec
xlat
dec
inc
dec
mov
or
out
aas
jb
push
popa
lret
shrb
inc
sti
pop
ds
or
outsl
adc
es
jecxz
mov
ret
sahf
pop
sub
enter
test
aam
pop
fsubs
stc
out
inc
lock
pop
mov
sub
repnz
adc
andb
or
sub
and
loopne
lret
inc
jl
xchg
iret
or
dec
adc
add
sbb
fldl
sub
sub
cmp
loopne
xchg
push
sub
sub
mov
fwait
data16
inc
outsl
jcxz
inc
hlt
sub
test
push
cmp
arpl
pop
adc
imul
cld
hlt
adc
mov
ljmp
xchg
test
mov
sbbb
int
test
dec
push
xchg
movsb
cwtl
xchg
popa
shr
mov
cmp
cmc
dec
enter
mov
incl
sub
ljmp
sub
xor
mov
in
sbb
or
dec
and
xor
leave
jge
pop
cmpsb
mov
popa
push
xlat
inc
gs
out
add
push
inc
fcoms
pop
shlb
cmc
xchg
fldenv
int
fidivrs
jp
jne
push
jns
cmpsb
roll
jno
mov
dec
ret
pushf
push
xchg
fbld
jne
or
sub
jmp
std
mov
mov
sbbl
push
mov
roll
jo
or
jo
inc
sbb
outsb
push
shll
push
test
xor
arpl
adc
cld
mov
adc
push
push
mov
inc
scas
dec
xchg
sbb
ss
rcrb
dec
sbb
mov
lds
mov
pop
pop
push
jg
orl
bound
in
mov
repnz
jne
int
mov
repz
jp
subl
testb
clc
and
cs
pop
xchg
jl
xlat
test
loop
push
jp
mov
pop
or
dec
push
gs
inc
sahf
scas
mov
cltd
jb
xchg
test
pop
add
lea
inc
push
cmp
xor
es
cmp
into
mov
imul
or
inc
pusha
lods
add
jb
jecxz
sti
or
paddsw
xlat
push
sub
xlat
fldcw
inc
je
push
insb
aaa
and
jb
dec
jp
dec
movsl
dec
jle
pop
sub
dec
mov
xchg
frstor
je
test
cmpl
daa
mov
cltd
mov
enter
scas
push
xor
pop
aas
leave
mov
push
out
arpl
mov
stc
and
stos
cmpsl
push
test
in
jp
jne
pop
shll
mov
or
inc
or
xor
imul
dec
add
mov
jmp
pop
or
mov
repnz
je
mov
mov
push
cmpsb
and
mov
daa
adc
out
sti
dec
into
fwait
iret
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
pop
inc
repnz
sbbb
jo
scas
in
xchg
push
gs
stos
fwait
rcrb
xor
loop
in
mov
mov
cmpsb
push
shlb
mov
and
inc
xor
scas
cmpsl
fs
popf
add
sub
js
lea
dec
pop
fisttpll
out
stos
xchg
push
jae
test
mov
mov
cmp
cs
xor
inc
mov
mov
mov
and
rdtsc
clc
leave
sub
mov
mov
lahf
xchg
mov
adc
loope
out
xchg
push
push
rcrl
in
or
into
out
cli
xor
lods
sti
pop
jmp
mov
outsl
mov
fidivrl
outsl
out
hlt
and
movsb
sbb
jle
rcll
add
mov
enter
mov
ss
inc
lock
sbb
sbb
jns
sbb
pop
and
test
lods
adc
add
sarb
out
fnstenv
jnp
lret
sbb
pop
mov
add
xchg
out
sub
mov
je
dec
mov
or
sarb
jne
mov
sbb
or
js
stc
movsb
ss
push
cmp
sbb
mov
mov
lret
arpl
mov
xchg
test
jno
adc
mov
cltd
psubusb
scas
aam
mov
fwait
add
icebp
les
adc
idivl
stos
mov
and
push
push
in
push
adc
hlt
mov
aaa
mov
aas
mov
cltd
insl
mov
add
gs
add
cmpb
clc
int
push
cmpsl
int3
ret
rorb
xchg
cmp
mov
mov
je
bnd
aad
pusha
cmc
push
nop
mov
js
pop
mov
movsb
cmp
xlat
shrb
int
in
out
push
fisubrs
xchg
cmp
test
jae
shl
ret
in
sarb
ljmp
test
xchg
push
scas
xor
scas
push
cmp
shr
xchg
repz
dec
mov
and
fcompl
xchg
ffree
push
leave
sti
or
mov
setp
adc
icebp
cltd
xor
adc
xor
and
pop
push
lret
leave
xchg
daa
push
test
or
pop
jb
mov
dec
inc
movsl
dec
sbb
mov
in
out
mov
mov
inc
push
out
int
inc
push
loop
add
enter
xor
pop
dec
imul
xor
shlb
inc
arpl
mov
mov
and
add
shl
mull
dec
xchg
lock
out
loopne
jns
in
xchg
mov
cmc
cmpsl
mov
std
xchg
xor
lret
aas
aam
dec
flds
sub
aad
insb
insb
pop
shrb
into
das
sbb
xchg
fwait
mov
sbb
testl
sub
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
and
sbb
out
lock
adc
adc
roll
mov
xchg
outsb
es
mov
xchg
mov
and
push
pushf
add
rorb
xchg
mov
cmp
sbb
jle
jne
add
movsl
shrb
inc
push
mov
xor
cwtl
insb
iret
sysret
mov
xchg
jge
and
es
push
dec
or
mov
icebp
fists
cmp
cmpsl
daa
dec
xor
into
push
cmp
out
nop
and
mov
fucomi
mov
inc
sbb
cld
jge
mov
lret
mov
mov
into
std
dec
adc
in
jecxz
pop
imul
adc
xchg
daa
adc
dec
jle
push
leave
xor
orl
jle
lods
in
or
cmc
lods
mov
push
sbb
xchg
fsubr
insb
int3
cmp
cmpsb
adc
std
sub
inc
xchg
push
dec
repz
push
outsb
cmp
mov
jge
jb
shl
mov
xor
push
xchg
insb
daa
push
aas
sbb
pshufw
out
mov
idivl
mov
sbb
pop
mov
lret
sti
andl
arpl
pop
sahf
sub
daa
mov
add
std
dec
xchg
hlt
bound
jno
sbb
es
lds
scas
ds
jmp
mov
xchg
fdivrs
push
into
ds
or
jns
test
and
jb
inc
adc
jmp
fsubr
lahf
push
rcl
test
or
or
jbe
push
cmp
inc
outsb
and
outsl
push
sub
test
aas
xlat
or
or
rcll
mov
ja
mov
es
inc
mov
mov
jae
jg
iret
mov
mov
add
sbbb
xor
sub
repz
mov
sub
adc
xor
movsl
adc
adc
test
sub
mov
mov
xor
fdivr
pmullw
incb
and
xchg
pop
push
mov
cltd
clc
shll
fwait
call
nop
outsl
movsb
jae
ds
jl
add
push
movsb
les
pusha
mov
hlt
sub
push
push
or
mov
push
nop
rorl
lahf
mov
dec
scas
inc
je
mov
mov
cs
sub
shll
push
lds
jne
push
mov
sarl
mov
out
fwait
lret
mov
int
fists
push
movsl
movsl
imul
mov
test
pop
in
filds
inc
or
fbstp
xchg
dec
into
test
bound
cmovbe
jmp
aas
fildl
sarb
andb
pop
fcmovne
inc
cmp
pop
dec
mov
gs
pop
xchg
or
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
fnstenv
mov
adc
adc
mov
fdivrp
inc
pop
sti
sarl
int3
repz
dec
insl
jmp
mov
mov
lock
cmp
fwait
call
push
mov
leave
subl
pusha
leave
sub
aaa
push
add
inc
adc
mov
aas
lea
pop
insb
out
dec
insl
adc
and
insl
cmp
stc
inc
cmp
xor
rorl
jecxz
xchg
sub
andb
call
repnz
les
fildl
pop
rol
push
sub
push
mov
xchg
sbb
xchg
sbb
sbb
sbb
outsb
pop
jne
loop
loope
cltd
int
dec
pushw
xchg
dec
push
jns
and
scas
mov
pop
daa
pop
sahf
add
sahf
imul
or
sbb
xor
aas
orl
inc
es
mov
mov
aaa
inc
mov
insl
stos
and
jae
dec
aad
push
dec
stc
in
xor
movsb
xor
pop
jg
addr16
clc
cli
imul
lret
fistps
dec
add
inc
ja
jb
stc
jnp
or
mov
fsin
mov
push
xor
aas
imul
and
pusha
dec
jnp
mov
fs
xor
aam
sti
or
or
pushf
pop
loope
or
rolb
in
dec
xchg
add
dec
out
jae
xchg
push
mov
lcall
cmp
cwtl
push
rolb
es
cmp
andb
add
scas
aaa
inc
addr16
test
jno
push
push
clc
stc
add
imul
test
mov
aam
adc
lds
push
mov
lret
in
xor
sbb
dec
test
dec
dec
xor
testb
xchg
icebp
aas
mov
enter
bound
aas
orl
push
push
fbstp
fisttps
or
sbb
inc
iret
addb
stc
es
cmp
mov
pop
mov
pop
or
ds
sbb
mov
sub
xor
pop
mov
aaa
xor
xlat
nop
pushw
ds
sub
cmp
in
lock
fdivs
adcl
mov
add
gs
cmp
jnp
add
mov
leave
pop
pop
pop
xor
mov
loop
mov
mov
sti
imul
dec
rcll
add
inc
or
jbe
lods
xor
mov
in
daa
sbb
out
sub
orl
or
pop
push
or
popa
cld
dec
mov
mov
outsb
lock
pop
jmp
cs
int3
imul
mov
lret
mov
mov
cmp
sarb
lret
mov
xchg
xchg
inc
xchg
push
cmp
test
outsl
and
inc
xor
arpl
mov
or
lret
mov
xchg
mov
insl
mov
das
test
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
nop
mov
adc
adc
jb
push
xchg
sti
push
mov
ret
mov
loop
cld
dec
jmp
mov
mov
sbb
mov
sbb
inc
cmp
mov
daa
leave
inc
loope
sub
mov
or
lock
push
das
cmp
sub
jp
aad
mov
inc
call
mov
scas
add
xor
push
jne,pt
pop
mov
mov
xchg
lods
ds
mov
outsl
sahf
test
mov
cmp
data16
pushl
rcrb
jge
jecxz
lcall
lcall
sbb
pop
cwtl
pop
adc
ja
bound
iret
or
sub
mov
fwait
mov
push
loope
push
imul
mov
adc
sub
ficompl
or
ljmp
mov
int3
loop
xor
fiadds
mov
jecxz
add
dec
loope
xchg
fsubr
mov
pusha
ljmp
nop
inc
or
adc
push
push
clc
push
xchg
lahf
add
sbb
bnd
into
and
fincstp
mov
add
or
in
nop
js
out
data16
in
adc
testl
into
or
and
adcl
sub
push
fwait
lock
cld
fwait
stc
nop
add
fwait
cmp
lods
lods
jae
clc
jl
stos
mov
movsl
sbb
leave
outsb
dec
dec
ss
dec
data16
addr16
outsb
clc
shrb
pusha
push
jbe
or
icebp
and
cmp
pop
in
lock
adc
sahf
fists
mov
dec
jo
xlat
pop
pop
je
out
inc
cmp
mov
pop
pop
test
adc
sarl
add
mov
push
scas
pop
inc
sub
flds
push
jmp
lret
mov
test
cmp
mov
lods
mov
cli
inc
cmp
ret
stc
sub
lret
sub
mov
pop
gs
pushf
cmp
ret
fucomip
mov
cmp
jle
dec
in
dec
xchg
xchg
mov
xchg
pusha
jge
mov
in
dec
mov
lds
mov
pop
cmp
neg
sub
pop
mov
movd
push
sar
sbb
pushf
and
mov
mov
stc
pop
sbb
test
popf
fcompl
add
cld
add
pushf
lods
call
fwait
mov
sub
clc
shr
mov
pop
sub
mov
repz
test
fisubrs
test
mov
testb
mov
dec
pushf
fnstsw
mov
cmpsl
popf
mov
repnz
mov
enter
add
dec
subb
rcll
jno
andl
roll
stos
inc
fidivs
adc
adc
insb
add
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
ds
insb
loope
adc
adc
adc
fld
das
lahf
fs
lods
shrl
inc
jne
movsb
ja
inc
jns
xchg
jge
xchg
fisttps
or
cwtl
hlt
gs
push
mov
pushf
or
push
adc
stos
sbb
popa
sbb
mov
iret
push
lret
fwait
icebp
lock
lods
into
call
stos
ret
push
adc
in
call
scas
pop
push
insl
xor
and
test
hlt
xchg
dec
lods
xchg
rorl
cmp
xor
gs
mov
mov
cmp
aam
xchg
stos
scas
sahf
sarl
rcll
mov
mov
lds
xchg
jae
daa
fisubrs
mov
inc
or
mov
xchg
gs
pushf
clc
bound
rolb
daa
jge
cmpsb
popa
and
jns
push
pusha
mov
jne
mov
int
xorb
push
xchg
fwait
add
cmp
cs
cmp
cmp
pop
decl
inc
and
adc
jno
xor
std
sbb
sub
push
adc
pop
les
add
in
or
je
add
shll
xor
dec
inc
mov
sub
jl
sub
and
lahf
mov
dec
xor
or
mov
sub
fstpt
fisubl
pushf
mov
aas
daa
insl
stos
sbb
inc
push
fdiv
mov
cli
cmpsl
jmp
ljmp
adc
mov
xchg
and
mov
fwait
push
addl
push
pusha
cmp
ret
cmp
jg
jge
test
pusha
lcall
jge
push
inc
mov
jmp
enter
mov
cmp
mov
test
dec
cli
out
lock
movsb
popf
adc
push
pop
lods
inc
pop
and
sub
mov
mov
jl
decl
sbb
out
call
sbb
pushf
jo
fildl
jmp
jno
jbe
and
mov
mov
and
stc
push
repnz
fldt
sti
dec
pop
push
mov
jle
shlb
les
inc
loopne
cmp
repnz
ss
or
fstpl
mov
sbb
inc
clc
sbb
shlb
out
push
mov
adc
mov
in
sub
rcr
push
repnz
movsb
mov
sub
popa
sub
add
adc
popa
sarl
in
js
leave
mov
testl
cmpb
daa
sub
lods
addr16
xor
xchg
data16
orl
inc
adc
out
stc
insb
and
ja
cltd
lcall
sbb
lahf
dec
popa
es
push
shrb
add
jo
addr16
jbe
cld
sub
sub
arpl
imul
xchg
dec
decl
decl
jl
decl
ret
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
fwait
sbb
mov
jne
in
jno
js
lods
push
mov
push
xor
fs
int3
shll
les
cltd
add
ds
inc
shlb
test
and
fdivs
mov
jle
cltd
mov
xlat
sbb
icebp
insl
mov
aad
ret
jecxz
rorb
mov
dec
jmp
inc
outsl
insb
xchg
pop
jg
jb
loope
xchg
lods
jmp
imul
push
pop
mov
leave
push
iret
outsl
cwtl
les
xor
xor
mov
adcl
je
pop
sbb
mov
fisttpll
loopne
jnp
xchg
pop
dec
xlat
ss
nop
leave
loopne
es
push
jns
mov
cltd
and
pop
cmp
fwait
inc
adc
cmpsl
imul
pop
aas
test
cmpl
test
xchg
mov
pop
jne
xchg
cmp
shrl
adc
in
cmpsb
pop
shrb
je
ljmp
add
lahf
lea
jl
insb
add
aaa
nop
test
jo
cld
out
mov
les
js
pop
testl
cltd
imul
test
test
adc
mov
cmp
std
pusha
mov
mov
xchg
sub
add
cltd
xchg
pop
js
in
stos
mov
mov
inc
jg
leave
shrl
dec
push
cli
out
dec
adc
dec
repnz
ja
lret
mov
jb
pop
jnp
std
pop
setbe
repz
mov
push
pushf
loop
hlt
mov
sbb
je
jno
sbb
inc
std
pop
xchg
sbb
adc
sub
xlat
popa
pushf
mov
mov
xchg
movsl
enter
ficoml
cmp
cmp
std
adc
xor
js
ljmp
mov
push
lods
and
aad
or
xor
test
addl
adc
mov
orb
and
sub
jmp
pop
xlat
push
ds
ficoml
adc
lock
sahf
addr16
mov
push
sti
push
lret
mov
fs
into
push
sbb
divb
mov
in
shlb
jae
cld
push
add
inc
popa
inc
mov
fstps
test
xor
jne
decl
loop
xchg
jl
push
pushl
add
pop
test
inc
jo
jns
orb
cmp
cmp
jns
js
loopne
sbb
nop
push
xor
bound
inc
xchg
xor
adc
mov
push
loop
mov
mov
jmp
dec
ljmp
push
and
dec
in
xor
in
icebp
mov
roll
pop
lds
mov
or
push
mov
mov
aas
mov
cmp
mov
sarl
arpl
cmp
jo
lods
aaa
push
lcall
lods
test
jae
dec
sub
mov
pop
xor
frstor
mov
outsl
test
mov
imul
test
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
jae
insb
pop
aad
adc
adc
adc
xchg
data16
inc
stos
cmpl
mulb
aam
xchg
outsl
outsb
cmp
or
cmc
int3
sub
mov
fdivl
mov
insl
xchg
mov
pop
loope
ret
es
pop
ret
xor
cmp
or
add
adc
pop
hlt
popf
push
stos
push
lret
adc
mov
je,pn
rcrl
and
adc
orb
daa
pop
sbb
lods
test
pop
fucomp
dec
adc
pop
mov
pop
xchg
data16
cli
fcmove
je
stc
adc
or
cmp
inc
mov
mov
mov
and
in
test
roll
subl
push
pop
or
inc
pushf
push
lds
push
add
dec
push
fists
lcall
fwait
pop
cmc
push
jnp
das
call
mov
jmp
pop
sarl
aaa
cltd
int3
push
cmpsb
test
aam
add
add
push
outsb
mov
notb
sbb
pop
jae
dec
or
out
int
jns
inc
pop
fst
dec
add
sbb
stc
dec
jae
inc
sbb
ret
es
xor
xor
pop
cli
and
ror
lods
sub
in
xchg
dec
push
pop
mov
mov
lcall
push
xor
das
sbb
call
ja
sbb
test
pop
jle
repnz
push
fimull
addr16
clc
loope
push
push
lea
cld
mov
mov
cmc
neg
andb
ficoml
fisubrl
rcrb
call
insl
dec
xor
mov
or
or
cmpl
rclb
xor
mov
mov
mov
imul
adc
movsb
adc
stos
imul
add
insb
mov
outsb
mov
push
daa
push
vmaxpd
ret
jp
or
inc
fbstp
es
or
jecxz
push
cld
rcl
or
out
and
loope
out
inc
out
push
dec
sbb
cmp
iret
sub
mov
mov
mov
cli
test
push
das
xor
cmp
cvtps2pi
mov
pop
jae
dec
push
mov
push
adcb
xchg
lods
push
mov
popf
jno
pushf
mov
repz
adc
imul
and
mov
push
rolb
cld
fsubl
jmp
lods
push
mov
inc
mov
in
aad
lea
push
loopnew
jl
sub
sbb
ret
sub
call
mov
mov
out
mov
jne
xor
subl
je
inc
addr16
es
sahf
mulb
imull
iret
test
imul
xchg
push
cmp
jns
mov
adc
jae
bound
xchg
test
sbb
xor
and
cmp
mov
cmp
jp
xchg
lds
ret
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
xchg
jle
add
adc
xchg
movlps
ljmp
jl
sbb
cmp
push
filds
push
push
cmp
jmp
data16
mov
rorb
add
jae
in
rclb
insb
xorl
cmpsb
or
fwait
xchg
cld
mov
add
das
or
adc
mov
jmp
sub
xor
dec
add
add
xor
xchg
sahf
cmp
notb
or
add
lcall
push
mov
xchg
inc
xor
cmpsl
mov
lret
sbb
jbe
jmp
push
push
pop
pushf
push
push
in
dec
or
push
pop
pop
nop
sub
sub
mov
xor
inc
sbb
pushf
or
iret
out
xchg
cmc
and
leave
pop
lods
shl
punpckhwd
jae
andb
push
xchg
push
dec
cmp
sub
add
xorb
dec
or
int
nop
xchg
mov
adc
cmp
sarl
ret
sbb
add
testl
iret
jge
in
adc
nop
mov
fcompl
into
lret
je
gs
addr16
pop
rcll
rcll
sbb
pop
fs
leave
mov
mov
out
outsb
ljmp
stc
adc
lods
aam
ss
pop
push
or
xlat
cmp
push
and
adc
rcll
pop
xchg
sbb
cmc
arpl
pop
dec
dec
rcrl
fs
repnz
jb
loope
sbb
into
push
push
arpl
or
lds
in
add
add
mov
aaa
imul
in
lret
xor
add
dec
imul
repz
xlat
repz
jbe
int
cmp
test
cmp
sbb
jnp
mov
cmpsl
rcrl
jb
enter
ds
add
add
pop
inc
add
addb
mov
sub
or
cmp
or
pop
outsl
outsl
stc
call
push
in
xchg
push
arpl
xchg
add
addr16
fisubrl
stos
fwait
into
repz
mov
enter
jle
ret
mov
xor
inc
loopne
jge
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
test
xchg
movlps
adc
or
jnp
sbb
sub
cli
adc
std
out
pop
fdivrl
pop
xor
xchg
or
pop
mov
mov
pop
ret
cmp
jecxz
cmpsl
jle
popf
mov
enter
jge
lahf
mov
bound
pop
add
cmp
out
push
clc
pop
out
cmc
sti
test
mov
pushf
js
or
lret
pushf
aaa
sbb
aad
dec
and
xchg
popf
hlt
in
imul
movsb
push
popf
jns
mov
xchg
mov
sbb
aad
pop
jl
sub
cli
ret
loop
jecxz
or
push
sahf
jecxz
imul
out
bound
xor
inc
shll
mov
xchg
xchg
mov
daa
lret
mov
and
mov
add
sub
adc
or
adc
aad
inc
pusha
or
test
mov
xor
sbb
scas
xor
sahf
sbb
mov
sbb
in
and
sub
movsl
icebp
mov
sub
out
jo
dec
js
xchg
ljmp
dec
adc
and
into
cmp
push
pop
xchg
mov
sub
jge
cs
mov
lret
mov
insl
repnz
push
xchg
enter
and
outsb
xchg
push
mov
pop
orl
sahf
out
ljmp
jmp
out
mov
inc
ds
outsl
xor
cmp
dec
push
xor
out
jp
lret
fsubs
repz
and
icebp
call
jb
mov
in
cmp
mov
cmp
mov
push
in
adc
addr16
add
push
mov
add
ret
or
and
mov
and
inc
cmp
mov
jbe
or
es
push
pop
in
inc
xchg
loopne
mov
jne
inc
adc
sbb
dec
xor
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
mov
mov
movlps
jo
dec
xor
push
fcompl
out
jp
inc
cmpb
mov
cli
std
push
mov
sbb
xchg
inc
loopne
sub
add
cmc
loop
es
pop
addl
mov
ss
and
loop
sbb
hlt
adc
les
xchg
in
adc
aaa
sub
mov
icebp
lods
adc
mov
loopne
sbb
push
or
nop
adc
sub
mov
mov
cmp
mov
jmp
rcrb
in
xchg
test
imul
andl
jb
pop
aam
ficompl
add
lret
cmc
sbb
lock
pop
outsl
push
push
pop
add
sti
dec
sub
dec
ja
add
das
arpl
jecxz
loope
push
adc
fucomi
add
xchg
cmpsb
stos
or
repnz
jo
jl
sub
popa
mov
and
cmp
aam
push
pushf
push
inc
cld
or
xorl
add
inc
test
loopne
in
jb
popa
inc
push
or
or
movsb
mov
add
adc
pushf
jne
pop
push
movsb
cs
sbb
mov
pop
rcll
nop
xchg
xor
adc
xor
jno
mov
pop
out
loope
lret
lods
aad
dec
into
jecxz
adcl
sub
pop
cli
pop
push
dec
rcrb
xor
add
mov
data16
nop
mov
out
fxch
shrl
dec
inc
sub
out
mov
and
jno
cli
mov
jmp
inc
std
fnstenv
sub
xor
sub
hlt
mov
mov
sti
icebp
arpl
pop
adc
test
leave
aad
in
sub
push
inc
push
pushf
insl
in
adc
std
in
arpl
faddl
inc
das
mov
pop
cmp
and
cvtdq2ps
clc
push
and
inc
pop
adc
dec
push
rcrb
pop
adc
imul
call
lahf
xchg
orl
jecxz
jl
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
outsl
dec
rep
add
adc
test
mov
in
xor
xlat
cmpsb
xor
outsl
adc
sub
sbb
mov
xor
icebp
mov
lcall
test
xchg
rcr
cld
fcmovnu
loop
ja
outsl
daa
cmc
rorl
rolb
xchg
rcr
cmp
cmp
and
xlat
je
push
jne
clc
mov
pop
xor
push
dec
sbb
out
cmp
mov
add
outsl
divl
jl
push
pop
mov
cmc
push
sbb
aam
xchg
roll
pop
cwtl
inc
xor
mov
sbb
jge
js
inc
out
addb
out
mov
out
mov
imul
cmp
xor
inc
xor
movswl
ds
xor
mov
popl
ret
mov
mov
mov
lea
jb
jge
rcrl
scas
sbb
xchg
add
xor
add
cmpsw
das
push
stos
stos
scas
mov
mov
ljmp
inc
xchg
jne
fwait
pop
out
jle
int3
out
mov
std
xchg
aam
in
cmc
in
mov
loopne
or
pop
dec
mov
test
jne
mov
xchg
lret
cmp
popa
adc
lret
dec
enterw
inc
cs
mov
push
fnsave
cltd
jae
cltd
push
or
mov
rclb
test
mov
xor
cmpsl
mov
inc
jle
cmp
mov
jno
ret
roll
jb
jg
xor
push
lea
jne
add
cmp
adc
lcall
jnp
dec
push
push
mov
pop
xchg
adc
daa
jmp
xor
mov
sub
and
pop
jb
fs
mov
add
and
mov
mov
je
dec
sub
pop
adc
lds
cli
fsubrl
adc
lds
or
insb
out
fisubs
outsl
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
push
lods
mov
xchg
bound
mov
subl
into
adc
test
cmpsb
loopne
aad
mov
out
sub
clc
jnp
inc
jecxz
mov
inc
sbb
sahf
inc
xchg
stos
std
cmpsl
fildl
and
popa
ljmp
imul
into
jne
repz
dec
mov
mov
punpckhwd
repnz
imul
fcmovu
fdivs
bound
in
sbb
out
loopne
jle
scas
std
dec
mov
dec
imull
popf
inc
push
sub
fistpll
in
lds
lods
sbb
cltd
fidivrl
mov
pop
scas
fwait
rcpps
aad
shlb
jno
pop
cltd
jnp
in
adc
cmpsb
xor
pop
mov
xchg
xchg
mov
jbe
jns
icebp
dec
inc
scas
nop
ljmp
lds
cs
notb
mov
mov
cmpb
call
or
or
rolb
and
mov
xchg
pop
or
outsb
das
outsb
jbe
jnp,pt
pusha
pop
and
fcoms
out
push
mov
loope
popf
stos
adc
js
push
inc
lret
mov
jmp
iret
mov
scas
cmc
or
scas
cltd
adc
xlat
mov
or
test
lock
scas
cli
sub
ss
push
cmp
enter
sub
push
lock
dec
mov
outsb
sub
lar
or
xchg
flds
ficomps
out
jnp
cwtl
dec
push
test
sti
sbb
ds
pushf
or
test
push
xor
insl
mov
jecxz
lret
jbe
xorb
fdivl
mov
and
sarb
sarb
dec
punpcklbw
cmp
gs
mov
xor
leave
repz
sbbb
or
loop
lock
and
call
jg
or
ds
fwait
stos
les
jecxz
or
lahf
arpl
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
pop
sub
test
adc
dec
sub
out
ficompl
ret
push
dec
in
cmp
insl
adc
push
mov
ljmp
movsb
mov
rcrl
push
mov
mov
fldt
mov
pushf
dec
addb
dec
jl
movsb
xchg
xchg
xchg
fs
xchg
xor
ljmp
jecxz
mov
shrb
ljmp
add
push
mov
jbe
sub
push
cmpsl
push
add
xor
not
out
sub
jnp
cmp
icebp
call
stos
stos
mov
test
ja
fcompl
adc
cld
or
leave
inc
int3
cmpsb
cwtl
push
adc
jno
mov
addr16
jmp
scas
adc
jmp
leave
pop
jb
call
inc
mov
pop
fildl
enter
lea
nop
push
cli
sub
or
mov
jecxz
pop
or
sarb
pop
sub
cmp
jns
aad
sti
dec
outsb
ret
xor
push
cld
iret
add
cltd
or
xchg
shll
scas
dec
mov
gs
cmp
jb
int3
lods
push
ficoml
iret
add
shl
adc
cmp
mov
push
and
fdivrs
fmuls
or
test
pop
fstps
fdivr
and
adc
fs
mov
inc
bound
dec
cltd
repz
mov
fcmove
mov
cmp
push
adc
icebp
setbe
pop
fucomip
arpl
insl
pop
push
call
push
stc
lods
xchg
and
clc
pop
jno
cmpl
mov
mov
and
dec
gs
jo
iret
or
lods
adc
test
mov
mov
outsb
aas
adc
sbb
xor
in
jno
and
jb
or
shll
lahf
aad
mov
fnsave
add
stc
mov
cli
cmpsb
sbb
pop
sti
sub
out
xlat
add
sub
pusha
aaa
mov
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
cmc
stos
add
adc
add
adc
sbbb
fstpl
icebp
pop
enter
pop
fidivrs
rclb
out
xor
jge
in
or
push
xchg
adc
repz
jb
lret
repz
mov
push
pop
push
mov
mov
fiaddl
push
mov
mov
dec
pushf
stos
jnp
jns
pop
and
leave
movsl
in
lea
fdivrl
in
push
sub
das
xchg
lahf
fnstsw
ret
cltd
xlat
sub
fistps
cltd
jle
mov
dec
jbe
sti
in
shll
adc
mov
js
inc
or
xchg
test
loop
negl
fisttps
add
jo
test
rcl
push
jno
ja
inc
mov
icebp
push
fildl
pop
out
shll
xor
fdivr
mov
push
adc
inc
xor
cmp
jg
jmp
scas
xor
push
inc
push
arpl
sub
cmpsl
xor
pop
ja
mov
pop
pop
or
mov
push
fiadds
sbb
xor
or
adc
or
outsb
lds
or
leave
adc
mov
mov
sbb
sete
push
fwait
test
push
xchg
and
add
adc
movsb
mov
sub
les
adc
popa
xchg
mov
bound
mov
cmp
jg
xor
mov
adc
xor
inc
scas
ret
in
addr16
add
mov
mov
sub
mov
mov
mov
daa
sbb
cs
add
dec
sbb
lret
cmp
pop
ret
in
sbb
test
lods
or
xor
mov
in
pop
enter
cli
sbb
xlat
in
enter
or
popa
fucom
in
jns
mov
and
inc
or
push
imul
nop
xchg
push
loope
imul
fsubrl
dec
lods
lcall
xor
mov
push
add
add
clc
mull
jl
sub
outsl
inc
cmpsl
mov
cmpl
jle
scas
sub
or
popf
hlt
fsubl
in
cmpsl
inc
arpl
mov
jae
adc
mov
add
push
test
push
mov
cmp
loope
xchg
int3
dec
add
loopne
adc
daa
movsb
jp
mov
adc
outsb
daa
xchg
rcll
sbbl
pushf
push
xor
adc
and
xchg
pop
cmc
inc
gs
xchg
imul
call
mov
sub
push
cmp
fildll
dec
pop
or
add
test
push
xlat
sbb
and
std
pop
cmpsl
fistl
mov
shrb
mov
mov
sub
dec
xor
shrb
into
setg
insl
xchg
cmp
fwait
insb
mov
das
mov
jnp
rcl
adc
imul
ss
pop
mov
mov
or
into
inc
jl
mov
pop
addr16
sbb
lods
out
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
sbb
jle
cmpsl
adc
add
adc
sub
jns
movl
cmp
add
fistl
sbb
push
repz
adc
test
mov
inc
or
out
jbe
cmp
sbb
cmc
outsb
add
mov
insl
mov
inc
pop
jmp
into
popf
jp
sti
shrl
int3
pop
pushf
or
icebp
pusha
aad
fdivp
jb
jge
mov
push
mov
add
or
xor
jb
movsl
inc
maskmovq
je
fwait
icebp
cmp
lds
mov
xchg
adc
inc
out
xchg
idivl
mov
into
test
andb
adc
jecxz
xchg
rdpmc
dec
pusha
es
adc
rorb
mov
nop
or
shrb
pop
jbe
adc
rcrb
scas
sub
clc
into
jae
pusha
scas
mov
leave
jns
cltd
arpl
test
and
aaa
les
fimull
pop
jo
mov
or
aas
cmpsb
cmpsb
cmpsl
adc
inc
inc
cld
dec
lret
int
mov
repnz
sahf
jge
mov
lea
xor
push
pop
push
jg
cmpsl
aam
jle
jle
in
movsb
sbb
push
imul
int
xchg
or
lods
push
jle
je
push
cs
jns
cmp
data16
cmp
push
jb
xlat
pop
test
rcr
sub
mov
jl
sub
jp
push
scas
sti
mov
inc
xor
dec
jl
insl
pop
repnz
in
out
scas
or
cmpsl
ljmp
or
mov
scas
in
dec
jg
call
push
into
xor
iret
and
jle
adc
ret
mov
jg
loopne
bound
leave
dec
fdivr
dec
test
in
sub
or
jae
in
mov
xchg
dec
loope
into
push
push
mov
imul
lea
add
push
dec
out
in
mov
pop
mov
pop
sub
cwtl
xlat
push
enter
jmp
retw
pushf
mov
data16
stos
add
ja
adc
arpl
xor
xchg
sub
add
xor
out
dec
mov
mov
in
pop
iret
adc
ljmp
and
sbb
jb
add
dec
ret
jmp
pop
add
and
test
int
adc
test
sub
cmp
mov
fistps
stos
pop
push
aad
xlat
xchg
push
pop
stos
dec
push
mov
aaa
cmp
les
pop
ret
aad
mov
rorl
imul
jae
sub
cmp
stos
pop
rcrb
fmuls
nop
mov
hlt
jecxz
loope
push
inc
rorl
movsl
adc
or
icebp
mov
js
lds
ds
out
outsl
mov
imul
enter
andb
cld
mov
inc
sbb
cmp
clc
sbb
jecxz
test
sub
and
jne
adc
aam
inc
dec
mov
dec
pop
mov
mov
aam
rdpmc
mov
and
inc
repnz
adc
mov
mov
sbb
jl
push
cmp
mov
in
ss
std
lods
mov
lret
jo
jecxz
lahf
nop
sbb
add
sub
lock
push
or
add
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
fcmovne
lods
adc
ja
dec
xor
dec
fistps
and
mov
xor
pusha
inc
ret
pop
jge
out
shrd
jp
nop
ja
cmp
stos
insl
je
mov
cmpsl
inc
out
fdivr
arpl
sbb
lahf
arpl
movsl
and
lahf
mov
scas
push
xchg
xchg
pop
adc
push
jl
sbb
lds
rolb
mov
push
adc
pushf
aas
and
sbb
jno
mov
aas
mov
jg
pop
jmp
dec
dec
or
jns
adc
lods
cmp
sbb
pop
ret
xor
out
dec
and
insl
je
fisubs
xchg
push
leave
pop
mov
push
sbbl
ds
add
fs
outsb
inc
ret
rcll
xchg
inc
dec
cmpsb
sub
lea
cmp
jle
fmul
mov
ret
hlt
pop
testb
cltd
test
rcrb
jge,pt
aad
out
js
adc
outsl
outsb
divb
fistpl
insl
inc
imul
mov
mov
pop
mov
pop
sarb
mov
xchg
or
mov
ljmp
es
xorl
out
fs
dec
out
sarb
jns
repnz
xor
shlb
popa
pop
fidivrl
add
stos
jmp
jge
adc
adcb
mov
mov
pop
push
out
jae
mov
mov
add
mov
sbb
or
lods
or
pushl
mov
leave
xchg
add
fwait
add
outsb
stc
fsubs
aad
cmp
jmp
dec
enter
rcll
hlt
outsl
mov
lea
mov
clc
scas
cli
jp
je
and
lea
push
mov
or
mov
pop
lret
les
mov
mov
and
into
or
add
cmp
hlt
mov
addr16
add
rcll
andl
mul
int3
and
lock
pusha
mov
aaa
mov
pop
dec
add
or
ret
mov
ja
roll
cltd
fs
je
negl
lea
sub
iret
adc
lods
sbb
fld
into
mov
movl
xchg
out
inc
scas
add
pusha
imulb
mov
jle
jmp
dec
mov
sti
and
adc
repnz
imul
jns
dec
pop
jl
inc
std
aas
negl
out
or
js
dec
in
mov
bound
dec
mov
lds
cmp
aaa
out
jl
xchg
js
push
nop
mov
pop
jb
xchg
cmp
test
or
xchg
mov
leave
das
push
mov
aad
mov
in
flds
mov
and
add
je
dec
jno
out
fistpl
pop
jmp
out
loope
cwtl
pop
in
add
insb
jecxz
out
push
cmp
cmp
jno
add
jno
mov
push
xchg
dec
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
jg
or
jne
adc
cmpsl
xchg
aas
ljmp
adc
mov
pusha
or
stos
mov
repz
cmp
leave
shrb
push
adc
add
lret
mov
mov
push
fsubl
mov
inc
add
fnstsw
inc
dec
iret
out
scas
lock
or
jmp
aaa
mov
xchg
repz
mov
push
xchg
and
xchg
push
push
inc
lahf
cmp
dec
mov
sahf
mov
pop
push
pop
call
and
mov
cltd
daa
and
pop
xchg
dec
add
push
or
adc
dec
push
in
inc
ds
imul
inc
inc
cwtl
mov
sub
push
or
xchg
inc
dec
adc
fwait
dec
scas
jle
imul
mov
fdiv
jg
pop
mov
imul
sbb
mov
out
dec
cmp
adc
fldenv
or
int3
aas
iret
push
enter
mov
test
loope
mov
push
fmuls
movsb
jl
adc
push
xor
mov
mov
mov
push
jg
ds
sahf
sti
sbb
aaa
in
push
in
pop
out
pop
sbb
fidivrl
in
sarb
lods
int3
cs
scas
fwait
push
pop
add
ret
pop
icebp
fsub
pop
xor
jmp
mov
push
xchg
push
scas
popa
xor
push
or
int
push
push
inc
mov
out
pusha
ss
mov
pop
or
lods
mov
jl
cmpsb
push
jg
dec
mov
repz
mov
insb
test
inc
icebp
sub
or
push
movlps
xorb
hlt
aas
shl
cmc
mov
xchg
adc
cmc
cs
stos
arpl
mov
fstp
mov
fimuls
fiadds
pushf
into
cli
in
outsb
cmp
xchg
in
mov
pop
ljmp
mov
mov
sbb
sti
sti
mov
int3
jmp
add
xchg
fidivl
xor
mov
iret
and
or
mov
jle
shrl
mov
dec
inc
movsb
out
and
push
movsl
es
in
xchg
sbbl
pop
inc
inc
xchg
out
fadds
mov
xchg
jl
aas
iret
push
popa
pop
mov
aaa
fsubs
or
das
ret
jne
fbstp
pushf
lahf
loop
sub
pop
loopne,pt
pop
jbe
jle
jge
outsl
xor
inc
mov
leave
in
jno
stos
or
dec
mulb
push
xchg
sbb
push
orb
and
int
rcll
xchg
stc
das
jns
iret
jecxz
inc
and
into
frstor
stos
mov
hlt
adc
sub
push
loopne
xor
cmp
lea
addr16
in
fdivrs
or
sti
push
inc
fstps
mov
outsl
sub
add
lds
fs
ret
cmp
mov
xchg
aam
clc
mov
and
push
mov
aas
cmp
mov
popf
aas
ljmp
dec
loope
pop
add
rorl
sub
not
fadds
stc
push
add
dec
and
fs
jo
dec
cmc
dec
inc
dec
push
add
mov
pushf
lcall
add
lock
mov
jp
or
stos
push
in
pushf
mov
jmp
dec
ss
addl
mov
cmpsb
dec
sub
mov
sub
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
jmp
pop
lods
sub
adc
ja
cld
xor
mov
cltd
or
clc
sahf
popf
addr16
outsb
push
sti
neg
mov
pop
hlt
repnz
cltd
xor
and
insl
cli
cmp
bnd
mov
cmp
and
out
mov
xor
pop
mov
mov
push
imul
icebp
adc
push
jbe
mov
mov
insl
adc
push
dec
push
les
push
clc
leave
in
mov
jnp
jne
push
fsubrl
cli
fsub
sub
int
or
xor
xor
leave
pop
mov
adc
sbb
xrelease
faddl
and
mov
jns
pop
sub
addr16
fwait
mov
sbbl
and
imul
pushf
push
sbb
sbb
cmc
and
aad
rorl
cmpsl
cli
les
mov
cld
pop
popa
jns
push
std
je
sub
xchg
test
das
push
movb
mov
or
cmp
das
jb
dec
fwait
loope
loope
fcomps
xchg
fidivl
add
les
pop
stos
ret
aas
dec
pushf
ljmp
and
aaa
mov
es
or
or
subb
mov
mov
loope
and
ficompl
mov
jb
mov
add
push
rclb
add
cmp
sub
ds
ficomps
leave
rclb
in
lahf
hlt
push
adc
mov
subl
xchg
lret
jb
mov
pop
add
daa
enter
dec
jbe
push
mov
mov
xor
dec
mov
push
jno
push
stos
cmp
push
sbb
mov
xor
outsb
cmpsb
popf
adc
gs
daa
aas
dec
mov
pop
sub
fists
cmp
call
dec
jae
add
push
rsm
cmp
dec
inc
xor
cwtl
repz
loope
inc
shrb
dec
in
sub
and
arpl
sub
ds
xor
addl
cmp
jo
outsb
fdivs
mov
and
in
in
daa
xor
addb
lods
inc
movlhps
adc
aaa
clc
cld
push
mov
arpl
xchg
mov
push
jecxz
lret
scas
xchg
cli
cli
outsl
mov
sub
mov
fistpll
inc
sub
repz
jp
movsw
repz
and
dec
push
adc
das
iret
int
scas
push
test
jg
dec
xor
call
push
hlt
mov
mov
push
mov
movsb
inc
mov
cmp
add
inc
mov
data16
push
xor
fbstp
add
aam
inc
repz
movsb
push
jo
leave
lds
jns
sbb
dec
pop
mov
mov
xor
push
xor
testl
inc
cmp
push
add
xchg
fsubl
and
add
and
pop
mov
xorl
mov
xor
mov
add
in
cli
stos
pushf
sub
jno
aam
sbb
inc
jge
cmc
adc
cltd
in
pop
call
mov
out
pop
xchg
sub
sub
dec
dec
dec
mov
pop
push
adc
pop
ret
push
xchg
xorl
sbb
int
inc
fs
cmp
dec
jl
add
cli
or
ljmp
fwait
insb
mov
mov
dec
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
lcall
fimull
adc
enter
jns
movsl
mov
sub
testl
xor
pusha
cmp
cltd
add
inc
in
dec
test
inc
aas
ljmp
jbe
mov
jg
fdivr
xchg
sbb
ss
scas
sub
add
icebp
cmp
sub
add
imul
or
lcall
into
sub
and
xchg
lahf
mov
jnp
jbe
xchg
dec
imul
xor
inc
ret
std
and
mov
mov
sbb
lahf
xchg
dec
sbb
loopne
dec
bound
fsubrs
sti
orl
icebp
sbb
lea
ds
popf
jl
popa
xchg
lret
jns
pop
add
icebp
mov
dec
xchg
push
xor
cmpsl
and
inc
rcrl
inc
test
push
add
pop
loop
jmp
cld
cwtl
cmpsl
call
xchg
add
mov
xchg
add
and
xchg
sub
inc
test
mov
addr16
fs
loop
daa
add
aam
in
lret
scas
test
sbb
and
ss
call
not
or
jbe
mov
pop
aas
pop
xlat
push
addr16
ret
add
js
sbb
dec
dec
fisubrs
or
fs
add
call
sbb
das
leave
inc
pop
daa
inc
mov
mov
pop
cmp
movsl
lock
js
vminss
out
imul
rcll
sbb
mov
xor
enter
pop
es
cmpsb
and
in
hlt
adc
mov
jp
movsl
insb
mov
or
push
xchg
xchg
test
inc
out
scas
xlat
ret
imul
aam
mov
cmpsb
loope
lea
nop
fistpl
out
inc
out
scas
mov
ret
shll
cmp
addl
popa
fucom
out
push
ret
int
or
mov
scas
lahf
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
mov
insb
dec
xchg
adc
movlps
cmp
xor
test
pop
add
enter
mov
fcoms
cmp
pop
mov
inc
cmp
jmp
dec
pusha
jmp
dec
and
stos
andl
negb
lods
sbb
fcomi
roll
mov
rclb
data16
mov
clc
jmp
push
shrb
cmp
add
ds
imul
int
push
mov
out
push
popf
push
addl
ret
aas
fnstcw
pop
rcl
mov
adc
repnz
leave
lahf
xchg
xor
push
outsb
flds
add
clc
xor
and
stos
adc
rolb
mov
repnz
fistpll
adc
dec
push
jecxz
test
roll
xor
ljmp
mov
mov
imul
dec
jb
inc
je
lret
iret
push
pop
in
sub
dec
cltd
mov
xchg
sti
ss
out
pop
out
jb
add
mov
stos
sbb
cmp
test
pop
inc
pop
or
or
jno
mov
mov
bswap
ret
pop
xchg
mov
jmp
push
std
push
daa
and
cmp
popl
xchg
mov
cs
inc
fsubrs
mov
sbbl
add
pop
es
add
jns
pop
mov
mov
repnz
mov
jnp
lcall
or
mov
and
add
mov
fcomp
and
push
mov
fcoms
push
sbb
or
les
cmpsl
xor
cmp
stos
push
fwait
push
rcl
xchg
mov
cmp
push
nop
sub
cli
add
mov
shll
push
prefetch
push
int3
xchg
push
jle
xchg
fldenv
lret
mov
xchg
stos
out
loope
stos
inc
outsb
lahf
shrb
mov
lds
sub
mov
outsl
push
xchg
movsb
and
int3
adc
jle
and
fwait
mov
dec
xchg
lods
jecxz
mov
mov
aas
mov
out
and
inc
mov
je
sub
ficomps
test
je
xchg
adc
test
adc
xlat
xchg
sub
out
jecxz
mov
add
rol
pop
push
inc
add
test
add
add
cli
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
dec
mov
movlps
add
cmp
lcall
xor
aam
xor
pop
cmpsl
mov
icebp
call
negb
cvtps2pi
out
pop
movsb
or
fsubp
testb
bound
sub
cmp
jg
dec
bound
scas
add
nop
mov
cmpxchg
scas
fs
int3
test
xor
test
jbe
mov
mov
add
pop
or
push
and
or
fs
loopne
sbb
mov
jb
add
mov
xchg
dec
jne
fwait
push
xchg
cmp
ficoms
pop
sub
mov
call
lods
mov
and
adc
cmc
add
addb
mov
push
mov
sbb
xor
mov
lea
rolb
test
std
sbbl
jg,pn
jbe
ror
pop
xorb
arpl
mov
cmpl
jmp
je
jno
test
shl
sub
mov
inc
add
sbbb
adc
mov
inc
decb
push
add
int
pop
popa
push
jg
movsb
testb
addr16
pop
jmp
and
mov
lret
mov
outsb
cltd
and
push
mov
jle
pop
pop
test
leave
inc
xchg
cs
mov
push
fsts
mov
sub
aas
pop
fsubs
xchg
push
cmpsl
pop
and
lret
sahf
xchg
lods
in
insl
xor
jae
fiadds
mov
aam
xchg
xrelease
je
int
aad
jmp
sub
mov
jne
pop
mov
mov
jo
sbb
pslld
adc
inc
dec
sbb
out
rorb
push
fldcw
jmp
pushf
add
jmp
decb
int
mov
jle
sti
sbb
test
cmp
int3
jae
movsl
aas
in
dec
xor
lea
adc
inc
xchg
inc
xchg
frstpm(287
inc
outsb
sub
mov
fadds
fists
shll
jmp
xchg
add
mov
repnz
call
jno
push
and
push
rcrb
aad
jns
sbb
stc
xor
jbe
dec
addl
xchg
dec
cmp
scas
cmp
xlat
mov
movsl
loop
sub
xor
xorl
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
add
adc
movlps
loopne
jno
shlb
pop
int
sbb
sub
mov
xchg
fs
iret
ljmp
in
mov
fiaddl
jbe
mov
adc
shl
iret
lahf
pop
mov
lret
rolb
loope
ret
and
xlat
lahf
ret
and
push
xor
stos
xor
sbb
rorb
adc
xchg
or
xchg
ret
in
dec
adc
pusha
xchg
test
jae
xlat
inc
dec
and
xlat
and
sub
and
pop
or
sub
sub
insl
fisttps
sbb
cltd
mov
mov
aam
into
ret
mov
rcll
jb
clc
jae
adc
in
frstor
divb
xchg
sbb
jp
fldt
cwtl
icebp
lcall
paddq
negl
cmp
pop
popa
fsub
lret
loopne
das
rol
fwait
clc
push
inc
inc
enter
ret
imul
std
loop
inc
loope
outsb
push
cmp
adc
inc
pop
push
dec
aas
sub
cmpsb
jnp
jp
jns
or
jle
pop
cmp
cmp
sbb
push
dec
add
xchg
pop
sbb
scas
mov
mov
mov
lea
outsl
addl
add
pop
jae
jo
movsb
cli
lahf
ret
mov
xchg
rolb
inc
nop
pushf
shll
loope
mov
jbe
ret
test
sbb
xchg
les
shrl
inc
xchg
addl
push
cmp
xchg
mov
jbe
aad
or
fidivl
xchg
mov
xlat
push
cs
clc
jbe
arpl
cwtl
mov
mov
mov
add
hlt
insl
cmpl
jle
lea
mov
cltd
out
mov
mov
repz
push
cwtl
fisttpl
and
sbb
xor
testb
in
mov
icebp
xchg
xchg
mov
je
js
mov
sub
inc
mov
sub
xor
push
rcrb
lods
xor
sbb
xor
fistps
dec
outsb
aam
ja
push
or
mov
fwait
and
mov
in
fnstcw
ljmp
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
jle
insb
clc
ja
adc
movlps
adc
xorb
sahf
sub
test
enter
call
pop
xchg
add
jne
jl
adc
mov
icebp
mov
or
cmp
add
mov
pop
add
pushf
mov
and
push
stos
mov
mov
pusha
pop
push
pop
cld
mov
pushf
fsubrs
sub
fwait
test
lahf
cmpb
orl
mov
sbb
jb
movsb
inc
push
mov
aaa
ljmp
add
outsl
les
pop
stos
int
inc
stos
mov
push
mov
jg
lea
xchg
sub
out
ficoml
cltd
add
mov
out
cmpb
std
lods
arpl
push
xchg
jl
outsl
orb
sbb
ret
jmp
add
into
test
notb
jnp
jp
les
xor
filds
or
dec
mov
mov
push
cs
push
mov
dec
and
pop
mov
add
call
cld
xor
mov
fimuls
mov
call
xchg
fdivrl
lahf
sti
or
out
dec
sub
stos
mov
sbb
adc
add
popa
xchg
addr16
push
mov
or
xchg
and
dec
inc
and
popa
insl
shlb
pop
xchg
test
bound
dec
iret
xchg
inc
repz
rcrl
test
aas
ljmp
jmp
jle
push
jbe
test
jb
jne
sbb
and
jecxz
jmp
dec
push
lea
xchg
leave
fstpt
ja
lcall
sahf
popa
arpl
es
jg
out
repz
jg
fstpt
out
or
into
jnp
fdivrs
sbb
xlat
mov
cmpsl
les
leave
inc
sbb
ljmp
and
inc
fs
xor
shrl
std
jb
aam
std
test
enter
hlt
adc
out
xorb
loope
test
sbb
sbb
dec
fists
push
aad
jmp
push
mov
add
xchg
cltd
mov
fldt
fwait
rol
xor
dec
aaa
cmc
sub
adc
pop
into
adc
mov
mov
je
mov
push
scas
push
rcrb
push
push
add
jbe
mov
push
sahf
jle
ljmp
shl
call
mov
jmp
js
cmc
repz
sub
hlt
inc
loop
loop
adc
decb
adc
pop
or
sbb
jae
sbb
or
insb
shrb
push
dec
jo
xchg
mov
movsb
mov
mov
aaa
arpl
mov
xchg
stos
dec
jb
mov
dec
js
jns
xor
fs
dec
sahf
jmp
loope
out
out
pusha
pop
orb
cmpsb
mov
out
mov
loope
imul
cmp
xor
sbbb
jnp
pop
ss
add
mov
jb
cmp
dec
movsb
sub
jb
pop
mov
js
in
js
out
insb
push
lahf
int
scas
sarb
cltd
loopne
stos
ret
sbb
dec
std
add
loop
dec
mov
dec
mov
scas
xchg
adc
std
sbb
sbb
mov
pop
jge
nop
push
loopne
and
xor
rorl
cld
ljmp
mulb
cmpsl
sub
or
gs
jecxz
ffree
mov
mov
xchg
lea
add
inc
push
add
dec
inc
test
out
xor
mov
arpl
xchg
faddp
lss
bound
xor
mov
hlt
push
lds
out
inc
mov
dec
adcl
in
hlt
jmp
fs
lods
push
lcall
pusha
mov
cs
mov
adc
pop
call
in
pop
mov
push
mov
lea
arpl
rol
mov
fmul
hlt
add
aas
cmc
bnd
sub
inc
outsl
dec
mov
mov
adc
movsl
sub
push
movsl
imul
dec
shlb
int
xor
out
cmp
add
outsb
div
js
and
add
push
das
cld
sub
lea
pop
ja
adc
imul
test
popa
adc
xlat
lahf
pushf
ljmp
sbb
inc
fs
add
pop
out
lcall
mov
ljmp
sbb
pop
and
add
pop
cmp
dec
mov
sbb
xchg
popa
mov
cli
ret
scas
fstpt
stc
mov
xor
inc
or
pop
shll
mov
mov
sbb
test
in
addr16
fmul
inc
xlat
xchg
dec
pop
out
cmp
xor
mov
mov
repz
mov
jno
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
lods
ret
jno
adc
movlps
or
dec
xor
xor
stos
mov
lret
mov
pop
sbb
popf
pop
add
xchg
outsl
cmp
leave
ljmp
and
inc
in
in
sbb
cltd
idivl
adc
mov
pop
sbb
cltd
fwait
jecxz
cmc
aad
or
nop
mov
cwtl
push
adc
dec
fmuls
sub
iret
pop
sub
ficoml
sbb
ljmp
lcall
cmc
cmp
dec
sbb
jmp
sbb
data16
mov
dec
out
rcll
es
or
imul
enter
call
fnstenv
imul
mull
imul
loopne
popa
push
popa
lahf
xorb
fistl
add
jmp
lods
dec
adc
add
jne
push
or
scas
mov
mov
cmp
mov
inc
roll
dec
sub
pushf
mov
jle
cmpsb
shl
loopne
lds
test
ja
mov
mov
cld
sub
inc
pusha
sbb
add
push
jle
sub
mov
inc
movsb
int
outsb
pushf
out
mov
sbbb
xor
add
and
mov
outsl
mov
hlt
cmp
cltd
lret
repnz
or
inc
xchg
scas
decb
pop
dec
jo
mov
movsl
sbb
jne
das
add
sub
xor
mov
or
jecxz
pop
movsl
adc
push
inc
mov
int
xchg
faddl
xchg
xor
sub
mov
fs
sbb
mov
sub
jge
push
push
sub
xchg
in
mov
cmp
repnz
jge
adc
insl
mov
cltd
shlb
sub
es
mov
lahf
xchg
mov
mov
xchg
test
mov
mov
mov
pop
jge
xor
cwtl
adc
cmp
cmpsl
popl
push
jl
cld
push
jecxz
xor
inc
sbb
jl
lods
pop
xor
mov
mov
sbb
out
cmp
and
jge
fwait
mov
scas
popw
sub
stc
popf
js
test
push
lahf
orb
add
lods
repnz
in
sub
lcall
aad
popa
lcall
or
mov
inc
and
cmpb
rorl
loop
jmp
push
loopne
jo
jno
mov
pop
adc
adc
decb
adc
dec
loope
call
cli
jno
psubusb
sti
jbe
cmp
scas
dec
rep
add
movsb
insb
sbb
adc
mov
and
rcrb
mov
into
stc
popa
fnsave
stc
ss
test
insl
xchg
or
into
sub
xor
repnz
xor
fistps
dec
xor
pop
js
mov
mov
and
inc
aaa
aam
clc
sahf
inc
aam
jmp
xlat
jl
fists
out
jmp
lcall
xor
pushf
xchg
les
mov
adc
sbb
push
adc
ja
outsw
into
cli
test
dec
dec
jno
push
cmc
xchg
mov
lods
xchg
outsl
test
in
ds
inc
sub
add
popa
aaa
rcrl
aam
sub
iret
lret
sub
jo
add
lret
out
ret
or
xlat
ljmp
scas
cmp
mov
imul
sarb
repnz
or
nop
int3
push
out
sbb
xchg
mov
sbb
je
add
or
stos
sbb
cmp
xchg
insb
adc
loop
loopne
notl
cmp
scas
out
mov
jl
fldenv
inc
jle
int
pop
lods
sbb
pop
dec
je
add
jae
testl
cmpsl
loopne
and
je
pusha
pop
fwait
dec
mov
popa
lock
push
pushf
cltd
cwtl
in
aas
inc
shl
sbb
xor
pop
jge
cmp
push
lcall
xchg
mov
or
jno
or
sti
push
rcrl
fs
push
jle
cld
xchg
mov
or
cmp
jecxz
fucom
and
jae
mov
or
scas
mov
mov
pop
sarl
cld
mov
aad
sub
lahf
adc
pop
stos
jge
adc
mov
rcr
stos
filds
addr16
xchg
jecxz
sbb
mov
push
dec
popa
mov
sub
ds
or
push
incl
fdivs
fdivrl
jnp
arpl
and
dec
xchg
mov
cmp
jp
inc
dec
fmuls
xchg
scas
mov
movsb
aad
clc
loope
and
decl
clc
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
push
mov
movlps
fsubs
nop
push
mov
dec
stc
push
loop
fstpt
dec
jecxz
lea
pop
pop
pushw
cld
push
test
pushf
and
paddb
cltd
mov
adc
outsb
vmovss
adc
push
aas
cld
dec
push
jb
stos
or
jle
mov
mov
push
insl
test
sub
jne
or
mov
inc
dec
xlat
out
xorb
push
leave
fistpl
movsl
stos
xchg
pushf
test
into
mov
in
pop
jnp
xor
iret
jns
ret
pop
xor
ret
aam
dec
jae
int
ret
and
dec
mov
aas
jbe
jno
movsl
popa
cmp
imulb
daa
pop
jae
js
lock
jnp
mov
loope
jge
insl
mov
jbe
mov
in
or
pop
jg
mov
shl
and
xor
aaa
sub
add
out
pop
sbbl
dec
loopne
dec
into
insb
js
data16
add
xor
pop
mov
test
jae
nop
or
mov
sub
out
call
fsubrl
test
dec
pop
mov
mov
test
pop
insl
aam
xchg
subb
jno
cld
pop
stos
lea
into
mov
push
cmp
mull
push
push
stos
xchg
add
outsl
jae
xchg
insb
scas
subb
in
dec
popa
in
stos
mov
scas
adc
xor
dec
xor
pop
rorb
leave
repz
lret
mov
xor
icebp
adc
push
je
aas
dec
lcall
outsb
sub
lea
lock
cs
jne
mov
arpl
mov
push
cmp
insb
test
inc
inc
call
adc
icebp
push
sbb
pop
pusha
pusha
xor
adc
lahf
arpl
xchg
cmp
sbb
cli
movsl
inc
rcrb
popf
std
dec
mov
cmp
clc
xchg
sbb
lea
cmp
bound
push
ds
dec
lds
pop
add
pusha
fwait
imul
mov
mov
mov
loopne
loope
sbb
fs
je
jge
xchg
mov
scas
cmpsb
mov
push
mov
xor
shl
insb
and
mov
orb
jb
push
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
and
adc
movlps
subl
repz
mov
cwtl
cmc
sbb
fidivrl
pop
inc
fs
lock
mov
outsl
lcall
adc
clc
lret
js
test
test
scas
inc
sti
sarl
mov
mov
xchg
inc
mov
lcall
jnp
sbb
xor
jp
in
adc
rcrb
movsl
xchg
adc
lcall
lods
rcrl
dec
call
xchg
lea
faddl
scas
pop
xchg
sub
or
push
daa
clc
cwtl
mov
out
mov
xchg
cmp
imul
lods
or
lahf
adc
mov
jno
in
pusha
enter
xchg
outsb
mov
sbb
ds
call
add
adc
cli
jp
out
cld
mov
scas
push
adc
sar
imul
cs
cli
aaa
orb
inc
dec
dec
ret
rol
ss
das
push
int
sub
cmpsl
mov
cwtl
adc
fisubs
push
push
xchg
xorl
daa
pop
jmp
mov
sbbl
mov
and
xor
js
push
xchg
daa
scas
pop
add
popf
mov
out
mov
clc
inc
xchg
mov
fidivs
lret
imul
gs
mov
outsl
nop
xor
lret
aaa
scas
fnstcw
and
sub
jmp
test
dec
sti
insb
push
push
pop
lret
je
rcll
push
mov
leave
inc
fdivrl
movsb
sbb
or
cmpsb
out
jg
fdiv
pop
hlt
je
inc
rorl
outsl
sti
sbb
dec
dec
and
jne
dec
out
mov
inc
loope
push
push
adc
shlb
cmp
out
push
dec
notb
imul
fsub
mov
addr16
mov
stos
xor
iret
pop
xor
xor
mov
js
or
mov
push
adc
or
mov
adc
inc
pop
mov
mov
cwtl
loopne
cmpsb
loopne
jno
and
jp
iret
mov
ror
cli
xorb
xchg
jle
int
in
fmuls
sub
xor
stos
mov
and
scas
lcall
pop
xacquire
test
sbb
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
js
pop
adc
decb
adc
pop
mov
loope
dec
cld
fs
inc
cmc
pop
pop
leave
insl
pop
sub
inc
stos
sbb
and
in
stos
push
ds
dec
insl
scas
ss
mov
imul
xor
incb
test
or
add
mov
and
test
inc
inc
daa
and
mov
jns
push
jnp
mov
lcall
repz
adc
cmp
clc
adc
sbb
out
dec
mov
mov
notl
inc
jge
fwait
mov
outsl
mov
pop
notl
jecxz
mov
mov
pop
push
dec
or
sub
loop
mov
and
add
mov
cmp
pusha
jecxz
daa
jmp
add
sar
inc
std
pusha
mov
pop
nop
outsb
fnstcw
cmp
fsubl
or
in
jns
mov
sub
lock
cmpsb
add
pop
scas
cmp
xchg
fwait
ss
pop
int3
sbb
sub
xchg
imul
ret
dec
jg
cmp
rcll
iret
insb
xor
mov
sub
adc
das
popa
xchg
test
pusha
and
push
and
arpl
pop
pop
lahf
imul
loope
stos
stos
xorb
dec
pop
nop
fldcw
das
adc
xchg
mov
stos
inc
cwtl
addl
pushl
push
hlt
jmp
mov
test
pop
into
out
add
inc
out
orb
into
mov
push
sbb
sub
lahf
lea
pop
xchg
mov
clc
ljmp
dec
sbb
adc
dec
pop
scas
pusha
loop
mov
mov
cmp
hlt
bound
popa
lahf
cld
push
in
jmp
push
lods
adc
add
dec
mov
jmp
inc
mov
lds
fisubrs
and
sarb
and
das
xor
jns
ret
mov
or
and
pop
mov
cmp
xchg
xlat
std
jo
inc
out
inc
sbb
and
or
stos
mov
divb
adc
or
sub
sahf
outsb
addr16
imul
lahf
add
xor
test
mov
popf
mov
rolb
test
and
dec
decl
cmp
shr
add
add
bt
cmp
divb
adc
decb
adc
pop
insb
pop
xor
lods
arpl
or
inc
inc
mov
arpl
rcr
push
lods
sub
clc
imul
ret
xchg
aam
xchg
sub
addl
dec
push
lret
jecxz
xchg
mov
push
cmp
push
cmpsl
ja
sub
cmp
dec
mov
dec
sub
pop
fidivs
jb
aaa
shl
add
inc
daa
lahf
push
push
xchg
xchg
sarb
stc
inc
sahf
jl
imul
or
xor
mov
shlb
jl
and
xor
xchg
loop
fisubrl
cmp
push
dec
inc
inc
jo
pop
jo
ljmp
out
xor
mov
xor
inc
xchg
psrlw
stos
dec
sbb
and
dec
mov
and
les
test
sbbb
out
das
in
mov
pop
mov
enter
incl
test
and
xor
stos
loop
mov
pop
jmp
inc
sbb
mov
push
mov
ja
fnsave
jl
add
push
xlat
inc
sub
ds
dec
shrl
movsb
jmp
xchg
push
addr16
dec
jge
mov
in
call
repnz
mov
dec
jne
dec
addl
inc
sbb
pop
lds
jns
cmp
pop
shrb
mov
mov
insb
rol
cmpsl
mov
or
loopne
ljmp
mov
sub
xor
cmp
pop
shrb
popw
and
negl
mov
cmp
and
inc
and
stos
js
test
in
enter
imul
sbb
adc
mov
js
mov
test
pop
xchg
or
leave
mov
mov
mov
inc
xchg
push
pop
outsb
pop
dec
cmp
mov
loopne
xchg
push
mov
cld
add
rolb
lcall
pop
push
pop
int3
cmp
addr16
dec
xor
icebp
stos
aam
xchg
jge
or
sbb
xchg
cmp
je
add
jb
push
adc
filds
sub
xorl
test
rol
aaa
mov
jl
xchg
shll
push
lret
ficoml
imul
shll
lds
cmp
mov
push
adc
cmpb
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
aam
jle
dec
adc
decb
adc
add
enter
pop
fs
adc
xor
je
cmp
shrb
leave
xchg
push
dec
int3
sahf
mov
fs
inc
subl
movsl
push
push
outsb
outsb
jo
pop
sahf
divb
stos
out
arpl
dec
adc
mov
test
lods
sti
cmp
mov
lods
push
push
lods
add
bound
xchg
andb
mov
mov
jo
imul
aaa
xlat
adc
mov
xchg
xchg
mov
adc
lods
dec
das
aas
push
stos
jge
push
xor
adc
insl
mov
aas
sub
inc
cmp
cmp
or
rorb
outsb
sbb
icebp
cmp
mov
scas
imul
and
xor
xchg
std
loopne
cmp
imul
les
jp
dec
popf
jb
lods
loopne
insb
sub
xor
enter
inc
inc
push
jmp
mov
inc
insb
in
scas
rcrl
mov
xchg
push
add
adc
pop
pop
pop
fs
mov
pusha
inc
repnz
mov
scas
js
push
test
jecxz
lcall
adc
lahf
inc
lock
push
test
mov
sbb
mov
xchg
mov
mov
jmp
mov
std
ja
mov
push
mov
ljmp
std
pusha
rorl
push
fwait
mov
fs
popf
es
lea
pusha
icebp
add
lea
pop
mov
in
or
jno
out
sahf
jo
mov
sbb
inc
cld
xchg
loopne
jle
rorb
in
into
mov
mov
mov
out
push
lret
into
cmpsb
outsl
jne
lret
pop
popa
aam
adc
jbe
aad
shll
negb
mov
jno
std
fsubl
ljmp
imul
in
push
push
pop
cltd
mov
popf
rcrl
movsb
mul
lds
mulb
pop
mov
notl
or
daa
or
lret
sbb
je
aad
adc
push
jl
popf
sbb
repnz
int
dec
cltd
out
adc
out
mov
cmpsl
int
fwait
add
je,pt
cwtl
es
stc
push
push
adc
ret
add
out
sbb
leave
push
push
or
mov
popf
pop
xor
into
js
test
inc
or
push
dec
aad
pop
fcmovnu
mov
leave
xor
fadds
arpl
inc
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
jb
jle
dec
adc
decb
adc
mov
jmp
outsl
mov
add
push
sbb
jns
pop
push
mov
xor
pop
int
inc
sub
leave
inc
sub
dec
and
mov
je
and
imul
call
mov
in
lcall
daa
mov
sub
dec
mul
ljmp
mov
xchg
mov
das
fs
bound
fidivrs
dec
sbb
xchg
adc
pushf
mov
repnz
adc
xlat
flds
leave
lcall
cld
or
cld
jnp
push
int
jae
cmpl
std
lds
sub
mov
mov
mov
xchg
addb
pusha
and
xchg
mov
imulb
cmpps
js
mov
jae
mov
shl
or
fsubp
dec
ds
test
push
dec
and
sub
jge
mov
in
pop
or
inc
pop
jge
adc
jae
add
jp
inc
repnz
lcall
inc
test
lock
sti
nop
jns
add
jb
mov
ficomps
aam
out
lret
xchg
out
ds
in
mov
cmp
push
and
aad
shlb
pop
mov
mov
in
nop
sub
iret
jb
adc
and
mov
adc
fbstp
hlt
in
jne
repnz
xchg
fisubrl
sub
xor
mov
stos
es
pop
add
jbe
mov
cltd
fldenv
jno
ficompl
lds
adc
std
mov
cmp
mov
rcrl
stc
push
cli
adc
popa
push
inc
xchg
pushl
jmp
sub
inc
lahf
jno
xchg
jae
dec
cmp
add
mov
js
lret
mov
or
leave
mov
cli
push
cmp
sub
lods
mov
and
add
adc
dec
push
dec
popf
dec
cs
addl
loop
repz
jno
mov
rclb
mov
mov
dec
xlat
icebp
or
or
xchg
xchg
ss
sbb
jae
fidivrs
mov
dec
xor
mov
xlat
xor
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
out
add
in
or
dec
sahf
sub
popf
inc
inc
cwtl
and
pop
add
push
rclb
sub
mov
sub
setge
sti
or
lods
movsb
jne
push
aam
xchg
push
mov
dec
jl
xchg
icebp
lds
xlat
dec
sar
fistps
lods
sbb
jb
das
stc
fcompl
rorb
dec
push
pop
test
outsl
inc
cmpsb
mov
mov
gs
jle
outsb
jp
and
sahf
movsl
std
addr16
or
das
into
jl
sub
mov
js
ds
icebp
lcall
mov
jmp
mov
cmp
loopne
xchg
push
testl
jb
sub
daa
jl
or
mov
mov
xor
mov
jae
sbb
inc
push
popf
xchg
test
or
pop
push
stc
adc
or
inc
in
sub
mov
xchg
dec
pop
add
xchg
xchg
push
out
orl
cmpb
inc
add
aam
sub
iret
jnp
mov
inc
pop
xchg
div
jbe
jp
test
sub
jle
es
adc
sub
shlb
daa
xchg
aaa
pop
shlb
adc
or
adc
xchg
loope
mov
cmc
jbe,pt
and
call
movsb
jg
cmp
inc
adc
jp
daa
inc
and
ja
adc
pop
adc
cmp
jge
adc
adc
jne
lods
rorb
sbb
daa
push
pushf
mov
adc
jae
int3
mov
scas
xchg
cmpsb
jl
or
lret
jp
out
aad
push
or
dec
lahf
pusha
mov
or
in
aad
ffree
mov
mov
push
jp
sub
ret
lcall
dec
adc
pop
int3
or
adc
dec
push
ret
in
sbb
in
xchg
in
dec
shll
jno
inc
scas
xchg
pop
add
adc
fldl
xchg
sbbl
jbe
mov
int
bound
rclb
ja
adc
xor
inc
mov
test
mov
mov
inc
test
adc
cmpsl
scas
dec
push
je
inc
call
insb
ss
add
add
sahf
test
mov
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
popa
mull
loope
pop
or
cmp
scas
jo
arpl
and
cmp
push
rcll
jmp
or
push
test
sub
mov
mov
pmaxsw
sub
shr
fsubs
iret
filds
or
push
movhps
pop
mov
ret
jle
popf
inc
xchg
scas
vmovapd
movsl
out
pop
sub
test
xor
jge
test
loope
push
pusha
stos
icebp
in
dec
dec
mov
bound
pop
fdivs
out
cmpsb
jae
int3
fdiv
jp
cmp
lock
pop
imul
les
push
push
add
mov
xchg
xorl
or
push
push
sti
inc
fstps
dec
loopne
push
inc
mov
push
sub
dec
cmp
js
gs
inc
lret
popa
and
mov
and
mov
insl
aas
inc
dec
xchg
and
lcall
push
aad
jle
insb
faddl
dec
outsl
xchg
pop
dec
xor
jl
pop
int3
or
jnp,pn
in
pusha
dec
ret
insb
es
imul
push
hlt
dec
das
xchg
xor
mov
mov
jmp
add
mov
cmp
scas
insb
xor
cmp
pop
cmp
adc
loop
icebp
fdivrl
and
add
xchg
dec
pop
mov
and
in
cmp
or
mov
mov
pop
data16
pop
into
aad
cmpsb
pop
dec
or
rcll
sbb
repnz
enter
mov
add
cmpsb
into
ljmp
sti
enter
std
xchg
push
sbb
call
or
inc
popa
pusha
jp
sub
outsw
sbb
dec
mov
mov
cs
notb
xchg
pop
aad
jns
add
and
scas
or
adcb
pop
jge
int3
sar
push
jo
imul
push
and
jl
inc
je
leave
fidivrs
inc
negl
outsl
xchg
fiaddl
ds
in
outsl
xchg
stc
sqrtps
repnz
nop
aad
pushf
fcomps
inc
xor
cmpsb
fisubrs
xchg
test
push
stc
xchg
sbb
mov
cld
test
clc
adcb
lods
aad
cmp
and
sub
fstps
sbb
sbb
and
xor
cwtl
and
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
out
pop
lods
sarb
adc
add
inc
data16
shlb
jnp
in
out
jle
lds
mov
jns
mov
in
xor
dec
loopne
pop
jo
mov
data16
jmp
adc
fwait
outsb
aas
jle
pop
stc
mov
lcall
xchg
and
test
sbb
lods
pop
ret
xor
adc
andl
jge
ss
imul
jmp
jecxz
leave
sbb
push
lret
xchg
in
mov
lahf
fisubs
jecxz
push
xor
pushw
mov
inc
sahf
rcrl
aas
pop
std
mov
shr
call
pop
loop
cmp
and
ss
out
mov
and
out
pop
cld
bound
xchg
adc
or
jg
pop
pop
mov
repz
cltd
fiaddl
imul
push
lret
jbe
cmc
ds
repz
add
jns
gs
loopne
jo
aas
rcrl
add
jge
imul
je
pop
jo
xchg
sbb
pop
repnz
xor
imul
out
test
stos
shl
mov
fwait
cld
cmp
jl
sbb
xchg
or
jge
push
cmp
sbb
in
out
fists
popa
push
push
push
mov
sbb
clc
adc
mov
inc
nop
popa
jle
mov
inc
test
mov
pop
jns
xlat
lcall
lret
das
xchg
mov
loope
and
pop
jno
int
push
leave
pop
scas
lret
sbb
js
jno
cmp
xchg
aad
fucomip
pusha
insb
ret
add
cmp
bound
imul
in
insl
daa
mov
xchg
stos
popf
test
push
adc
mov
mov
rcrl
jnp
pushf
les
mov
adc
lods
or
movsl
imul
xchg
shll
in
cld
aas
jnp
jb
fwait
shrl
and
jle
gs
pop
push
mov
lahf
es
jecxz
and
pop
push
daa
sub
cmp
aaa
push
add
or
lds
lret
lds
dec
mov
mov
dec
stc
jne
pop
popf
pop
movsl
xorb
pusha
ljmp
mov
sub
mov
test
jbe
push
int
leave
and
xor
imulb
dec
in
out
mov
mov
loop
xor
push
movsl
ret
shlb
clc
sbb
pop
test
int3
jae
add
imul
hlt
xchg
ret
pusha
ret
es
mov
nop
push
or
ficoms
icebp
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
fsub
push
cmp
adc
dec
fistps
inc
cmp
repz
lret
push
dec
cmp
inc
push
sub
neg
leave
pop
sub
ds
stos
mov
dec
mov
lea
adc
or
outsl
aam
repnz
sbb
adc
cld
cmpsl
pop
xchg
xor
mov
mov
jp
mov
mov
mov
mov
sbb
jecxz
out
lret
pop
pop
inc
cmp
aad
cmp
or
call
mov
mov
ficoms
add
xor
maxps
mov
insl
pop
iret
aaa
iret
mov
pop
std
mov
fmuls
xchg
xchg
test
jnp
add
notb
test
cmp
cmp
out
sbb
stos
orl
daa
add
scas
mov
inc
xchg
mov
lret
bound
push
out
mov
xor
mov
test
xchg
loopne
and
pusha
mov
in
mov
push
pop
sub
cmp
jo
ja
andl
inc
dec
lcall
push
lds
in
pop
push
or
xchg
pop
push
addl
xor
pop
in
jne
adc
inc
sbb
and
push
fadds
and
rorb
push
or
popa
test
mov
jo
ljmp
sub
lahf
lsl
and
enter
sub
cmp
push
cltd
dec
repnz
mov
jo
mov
shr
mov
shll
cmp
sbb
cli
stos
cmp
dec
jbe
out
mov
repz
clc
or
mov
add
scas
mov
xchg
sbb
adc
or
mov
mov
xchg
sub
filds
adc
cmp
jnp
scas
sbb
movsl
xchg
mov
and
dec
in
push
xor
fs
cmpb
movb
jne
xorl
fsub
out
pop
sub
test
out
sbb
ficoms
and
stc
and
mov
pushf
xor
dec
or
dec
ret
pop
pop
jg
outsb
mov
pop
sub
push
pop
jle
rcll
add
jae
jae
push
test
int3
or
dec
mov
ret
sub
push
movsb
aas
mov
jns
xchg
daa
fisttpll
pop
fwait
adc
int3
nop
inc
xchg
cmp
cmp
outsl
mov
pandn
cs
fbld
xchg
xchg
jnp
and
icebp
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
ljmp
adc
lock
fbstp
fadd
sbb
mov
out
pop
lret
jo
outsl
mov
icebp
inc
sbb
mul
int3
aam
mov
stos
xchg
mov
daa
inc
jmp
fldl
or
and
nop
pop
popf
sbb
cmpsb
clc
cs
mov
call
sbb
and
hlt
cmp
xchg
neg
add
mov
jge
push
mov
scas
mov
jnp
lea
sbb
mov
movsl
and
test
insl
movsl
shll
xchg
mov
dec
cwtl
ds
push
sub
mov
add
mov
int3
push
mov
fcom
lretw
mov
mov
push
lret
pop
cmpsl
movsb
ret
fisubrl
popf
daa
cmp
xchg
pop
addl
pop
sub
das
mov
dec
fmuls
pop
les
xchg
xchg
fwait
sbb
movsb
repz
jae
sbb
cs
sub
adc
mov
mov
lods
sub
aas
les
rcl
loope
std
insb
push
cmp
push
push
xorl
push
jae
mov
sub
push
push
mov
pop
mov
pop
mov
bound
lret
ret
cmc
int3
clc
insb
insb
mov
fildll
dec
mov
and
jle
mov
or
loope
mov
pop
je
addr16
mov
subl
inc
inc
imul
fxch
out
ficoml
cmpsl
and
lods
fwait
outsb
imul
cmp
fisubrs
sbb
mov
out
jae
mov
xor
ret
js
mov
in
fstpl
loopne
dec
fwait
or
imul
mov
jmp
inc
sbb
rcr
push
pop
push
clc
inc
and
adc
pop
lods
iret
aas
rorl
mov
out
inc
jg
mov
add
stos
pop
and
test
push
subb
movsb
add
pop
inc
dec
jb
insl
sti
jp
cmp
cld
movsl
imul
jp
adc
xchg
movsl
pop
xor
push
leave
or
mov
sub
push
rorl
in
xchg
cli
divl
inc
or
mov
cwtl
addb
jns
jle
sbb
sbb
dec
pushl
frstor
xchg
xchg
inc
jl
sbb
fadd
push
mov
cmp
std
mov
cmp
clc
lock
stos
mov
xor
out
xchg
cmpsl
mov
mov
sub
test
incl
mov
sub
mov
pop
leave
mov
in
pop
sub
xor
ret
mov
popa
add
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
ja
adc
fisubs
into
addr16
adc
jge
or
xchg
cmp
mov
pushf
popl
jne
adc
xchg
jp
faddp
icebp
mov
inc
add
dec
das
mov
adc
lcall
fstpl
in
jmp
popa
lock
aaa
pop
mov
add
mov
dec
in
mov
in
or
mov
adc
data16
out
dec
mov
sub
repnz
insb
push
mov
mov
mov
push
daa
or
idivb
push
stc
lds
add
stc
je
jne
shlb
shrb
in
adc
lods
rclb
push
into
or
push
jnp
adc
pushf
xchg
dec
mov
adcl
inc
mov
cmp
fistpl
loope
scas
sub
or
scas
rorb
sbb
cmc
xchg
dec
aas
call
xor
shl
dec
mov
jb
jmp
arpl
cmp
add
lret
test
bound
lea
call
jge
cmp
fiadds
sar
dec
dec
mov
mov
test
lcall
inc
movsb
push
sbb
add
out
push
testb
cmp
pop
xchg
dec
sub
xchg
outsl
mov
pusha
or
fcmovu
movsl
push
leave
inc
or
jge
imul
dec
popa
les
push
mov
push
mov
fmull
hlt
jbe
repz
mov
fisubrs
mov
push
push
rcll
js
cmpsl
xchg
pcmpeqb
icebp
cmc
pop
mov
addr16
in
push
subl
ret
xchg
adc
sbb
flds
mov
add
pushf
xchg
push
jmp
pop
pop
mov
lods
aaa
ret
pop
add
int
div
icebp
jecxz
shl
adc
mov
xor
lret
mov
lret
jp
inc
int3
pop
jl
cmp
rolb
and
sbb
nop
inc
mov
jle
cmp
aas
sbb
adc
lds
fdivr
sub
add
dec
movsb
stc
push
inc
dec
mov
data16
sub
xor
mov
sub
stos
push
ljmp
das
xor
cmp
aaa
mov
shlb
dec
loope
xlat
dec
xchg
xchg
mov
mov
adc
jne
sbb
pop
insb
clc
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
xchg
xor
das
idiv
lea
or
push
popf
clc
leave
ret
push
cmp
push
jb
flds
fldl
dec
pushf
mov
jae
push
cld
inc
xor
outsb
adc
enter
mov
adc
mov
and
bound
jmp
sub
xchg
leave
outsb
mov
inc
add
mov
dec
insb
int3
jp
mov
and
stos
clc
lret
jo
int
mov
into
ret
aas
gs
rcl
leave
sbb
or
pop
and
add
xchg
fstpl
dec
inc
dec
roll
add
les
pop
cld
andb
push
popa
call
dec
sar
imul
push
push
push
jo
fdivl
leave
lds
lds
mov
inc
popa
shll
sbb
pop
sub
mov
and
and
ret
mov
sub
push
je
inc
jns
pop
mov
sti
bound
inc
outsl
and
jmp
mov
sahf
aam
push
push
test
jge
xchg
adc
sbb
xchg
or
ret
push
fucomip
cmp
or
add
push
fisttps
fadd
and
rcrl
pop
xchg
fistpll
leave
jo
inc
inc
dec
sbb
sub
push
push
jno
cwtl
mov
mov
repz
sahf
inc
xchg
or
and
ja
add
popf
les
adcl
or
insl
pop
daa
or
test
shrb
cmp
pop
mov
mov
push
or
jne
xor
lds
sbb
pop
xor
data16
ja
subl
sub
sti
popf
int3
arpl
dec
mov
movsl
pusha
mov
push
push
test
lea
shll
mov
out
adc
pop
faddl
mov
mov
test
lahf
or
ja
fwait
pusha
xchg
iret
imul
mov
push
sub
insb
mov
cli
sbb
pop
pop
push
in
lcall
ja
sub
xchg
and
fcmovnu
and
in
dec
dec
jbe
lods
repnz
in
rorb
mov
xchg
dec
cmpsl
insl
jb
scas
mov
mov
add
pop
rorb
or
xchg
imul
shll
idivl
loope
lock
sbb
add
das
loop
cmp
push
push
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
je
xchg
pop
adc
iret
movlps
das
cmpsb
cmpsl
loopne
jae
stc
or
lds
mov
in
cmp
cmpsl
loop
inc
iret
addr16
xchg
dec
enter
inc
mov
popa
movsb
push
mov
lods
and
add
push
out
mov
mov
loope
sub
inc
pop
cld
xchg
movsb
push
add
and
mov
dec
inc
mov
xchg
andb
pop
inc
dec
cltd
push
repnz
and
adc
add
dec
repnz
mov
fistps
pop
loop
mov
pop
scas
pop
xchg
daa
mov
push
lds
data16
inc
push
mov
mov
xchg
nop
and
repnz
inc
sub
ja
add
inc
dec
repz
add
jmp
adc
mov
loope,pn
xchg
and
loopne
sub
add
sbb
fdivrl
lock
sbb
and
int
push
sarb
icebp
stos
sub
insb
mov
xchg
incl
and
mov
stos
fists
not
popa
out
stos
xchg
cwtl
mov
out
mov
sbb
int
arpl
sub
fwait
jp
sti
sbb
repnz
sbb
dec
pop
cmp
roll
sbb
mov
xchg
insb
sti
imul
push
roll
pop
push
adc
xchg
test
mov
in
lods
add
and
add
and
add
xor
jb
sub
or
mov
fdivl
sub
mov
sbb
mov
push
pushf
shl
jge
jecxz
repnz
push
inc
push
cli
dec
sub
in
push
cmp
inc
mov
adc
test
adc
sti
cmp
dec
adc
lock
sbb
pop
push
adc
std
lcall
and
setnp
enter
jne
mov
mov
mov
lock
cs
inc
arpl
stc
lret
xor
loop
mov
enter
arpl
loopne
imul
in
and
or
rolb
and
test
movsb
cmpsb
add
je
pop
add
and
mov
insl
fistpll
inc
aad
push
int
paddusw
fimull
jg
insl
pop
divl
out
dec
test
adc
iret
sub
dec
xchg
or
or
jl
ds
aam
ds
add
push
sub
xchg
fs
arpl
pop
test
add
ret
lds
stos
clc
sbb
inc
dec
in
adc
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
test
mov
iret
movlps
xor
push
dec
mov
mov
cmp
add
sbb
push
ss
es
add
orb
push
out
stos
insb
into
mov
mov
sub
fbstp
mov
cmpb
into
js
dec
scas
scas
push
pop
pusha
add
ja
das
lds
xor
push
stos
lods
pop
inc
loop
pop
movsl
popf
xor
out
mov
js
mov
xchg
into
and
lock
into
cltd
push
stos
jg
loopne
inc
pop
xchg
mov
mov
mov
fcomps
jecxz
xchg
and
mov
fdivs
adc
cltd
push
lcall
orb
notl
lcall
mov
pusha
repnz
inc
inc
je
imul
jae
sti
jbe
stos
pop
into
push
and
aas
xchg
xchg
inc
push
cmp
fnsave
mov
sahf
push
iret
lcall
rcrb
leave
mov
mov
xchg
sbb
popf
insb
cmp
shr
mov
cmp
or
mov
cmp
xlat
xchg
pop
in
push
jae
sub
outsb
xor
jge
mov
fisubrl
scas
push
mov
shlb
jno
and
mov
sahf
lds
pop
filds
test
sbb
cmc
and
bound
jnp
cwtl
cltd
jo
mov
into
fs
mov
and
dec
imul
jns
jg
pop
lret
add
jno
push
in
xchg
mov
xchg
pop
dec
or
fnstsw
jno
push
pop
jbe
jl
popf
inc
aas
add
jns
push
pop
lret
notl
scas
mov
movsl
dec
xchg
push
or
hlt
fnstsw
popa
imul
inc
xchg
dec
sub
arpl
dec
setno
or
mov
xchg
popaw
sub
data16
xchg
mov
cmp
dec
push
mov
cmp
cltd
push
mov
and
dec
push
test
pop
sbb
scas
es
xchg
pop
aas
mov
xor
xor
mov
mov
popfw
sub
shlb
pop
scas
les
xor
jecxz
pop
mov
inc
cmp
pop
pop
iret
addl
push
pusha
pop
out
jnp
pop
movsb
lahf
xchg
jle
jb
xchg
mov
sbb
cmp
pop
dec
and
xchg
rorl
lock
loopne
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
push
mov
or
adc
adc
adc
xor
push
scas
and
push
lods
addr16
ror
cmpsb
lretw
sbb
dec
dec
inc
roll
dec
dec
jae
in
lret
inc
stc
dec
and
sti
dec
aaa
inc
cs
fdivrs
orb
add
push
aaa
push
or
insl
jg
and
cmp
xchg
imul
sahf
push
addr16
fcoml
sub
cmpsb
push
push
inc
aaa
call
rclb
test
xor
stos
popf
sub
lcall
mov
addl
addr16
jo
nop
adc
jnp
jo
adc
or
divl
movsl
jno
mov
and
call
ja
pop
mov
data16
or
test
leave
movsl
push
push
jmpw
adc
ja
pop
rcrl
out
xlat
mov
mov
cwtl
push
aaa
pop
aaa
mov
iret
aam
movsl
lods
outsb
sahf
push
jb
fisubl
popf
scas
xlat
xor
mov
addb
cmp
push
ss
mov
xor
or
jae
mov
out
cmp
add
sub
fs
mov
pop
call
inc
inc
fsubl
mov
mov
push
clc
out
daa
lock
ja
cltd
icebp
jb
cmp
jmp
push
xchg
popa
pop
addr16
repnz
stc
gs
loop
mov
cmp
mov
jmp
and
push
sbb
inc
pop
les
cld
in
std
fs
lret
fisttpl
fildll
mov
mov
pop
mov
movsb
out
mov
daa
xchg
pop
sub
inc
fildll
cmp
jno
aam
add
insl
dec
stos
jb
std
mov
ds
or
xchg
into
add
cmp
sub
push
andb
add
sbbb
xlat
imul
mov
ja
fdivrl
mov
jb
inc
sub
add
jno
bound
fsts
imul
jo
loop
jmp
cmp
fnstcw
fs
mov
fdivl
xchg
lahf
leave
sub
cli
jl
sahf
lds
shld
mov
in
daa
mov
out
mov
test
inc
jl
cmp
xor
xchg
mov
dec
inc
pop
stc
test
insl
rcr
or
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
ja
js
unpckhps
iret
movlps
icebp
leave
ss
and
pop
and
cs
cmp
fwait
and
scas
std
sub
enter
xlat
sbb
out
out
ret
sbb
je
pop
add
lahf
xor
jnp
jp
cld
arpl
clc
mov
add
ljmp
adc
mov
out
sub
add
inc
fldcw
movsl
rcll
xchg
shrl
test
mov
addb
testb
mov
divl
stc
call
ficoms
xchg
std
sub
dec
and
jbe
gs
jns
push
fstl
sub
cmc
movsb
xchg
xchg
test
adc
pop
cmpsl
sahf
fstps
es
cmp
lock
add
and
sub
icebp
cmp
jecxz
push
xchg
mov
pop
sub
xor
jl
xor
data16
mov
in
sti
or
sub
fidivs
mov
test
cmc
pop
rorb
aaa
ffreep
test
push
jge
pop
mov
xchg
xor
jmp
pop
fbld
in
shl
dec
xchg
enter
loope
jnp
push
lods
xor
insb
xor
or
test
and
or
iret
out
mov
aaa
and
xchg
stc
sub
cltd
push
add
fwait
imul
repnz
rorl
inc
xor
fsubrs
fisubrs
add
inc
mov
add
mov
jg
mov
sub
dec
inc
jno
mov
fisubrs
mov
popa
cli
daa
loopne
push
movsb
sar
jle
mov
adc
inc
jae
ljmp
or
inc
push
stc
xchg
fildll
jecxz
outsb
mov
fwait
or
xor
jae
mov
add
aad
push
pushf
test
test
add
mov
setle
iret
imul
dec
movsb
in
cmpsb
sub
and
cmp
mov
push
pop
xchg
addb
enter
push
cmp
add
lods
jae
test
ret
dec
pop
icebp
cmp
xchg
fstpl
nop
in
jmp
pop
push
xchg
frstor
xchg
cmp
xchg
int
sbb
jle
push
add
mov
mov
pop
adc
ror
mov
mov
call
fnstcw
adc
ljmp
xchg
dec
movsb
xchg
aas
push
insl
das
scas
push
push
or
or
jmp
dec
pop
imul
enter
xor
iret
movlps
mov
xor
mov
aam
push
sub
mov
cmp
clc
mov
loope
fwait
call
adc
pop
les
fildl
mov
mov
pop
xchg
or
mov
cltd
dec
std
sahf
xor
adc
sub
push
ljmp
addb
daa
outsb
dec
or
sbb
pop
lds
jle
aaa
les
push
cmpsb
mov
mov
adc
popf
mov
or
xor
push
rorl
sbb
movsl
popa
stos
vmread
fsubrp
add
fmul
lock
jmp
mov
aaa
loop
fwait
xchg
movsb
ja
dec
xor
cmp
insl
in
nop
std
jne
inc
jbe
xor
xlat
xchg
gs
mov
jl
mov
sub
dec
add
xchg
aas
inc
out
or
jge
les
lcall
or
inc
jo
mov
test
in
and
dec
mov
sbb
aas
xor
test
xor
adc
dec
mov
dec
xchg
sub
mov
or
cmp
mov
xorl
mov
sahf
and
out
mov
int
popa
and
sbb
dec
pusha
stc
scas
sbb
hlt
mov
mov
pop
lret
mov
fmull
ret
call
arpl
sub
rclb
or
mov
mov
jbe
adc
ds
cmp
dec
mov
or
loopne
sbb
mov
push
xchg
dec
push
dec
lahf
xor
fdivp
out
sub
jae
inc
jl
jmp
inc
dec
push
loopne
push
sarl
cmp
and
dec
push
andb
jmp
lods
xchg
pop
fstp
shl
dec
and
bound
leave
shrb
gs
out
or
and
push
fmul
xor
fistpl
cli
hlt
lods
push
pop
fstps
add
jns
data16
xlat
lcall
pop
sahf
mov
and
loopne
into
gs
cmp
ljmp
adc
incb
arpl
mov
lock
clc
test
mov
or
rcrb
add
repnz
call
stc
adc
add
ret
sti
imul
dec
sbb
fstp
jle
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
leave
das
aad
sbb
jns
bnd
cli
xchg
cwtl
out
fstpt
daa
xchg
mov
jne
mov
loop
shr
hlt
js
add
and
mov
and
lds
inc
mov
test
jns
push
movsb
and
push
sti
pop
mov
or
xchg
cmc
aaa
fistpll
std
mov
push
push
dec
hlt
mov
cli
pushf
fidivl
cmpl
ror
rcrl
pop
mov
jmp
aad
fisubrs
mov
popf
pushw
and
sarl
mov
in
icebp
jo
push
dec
cmpsb
jecxz
or
imul
daa
sub
lahf
add
mov
jecxz
and
xor
xchg
sub
test
insl
pop
mov
and
jo
shll
scas
pop
sbb
push
adc
mov
xlat
or
int3
and
push
aad
sti
lret
test
and
popa
sbb
lock
imul
cmp
loop
add
push
shlb
dec
and
push
mov
shll
lahf
mull
add
push
bound
sbb
cmp
aad
outsl
push
cmp
leave
movsl
in
outsb
add
scas
jecxz
xor
mov
mov
push
sbb
xchg
add
icebp
xchg
mov
pop
xor
into
clc
cltd
into
loopne
lods
xor
push
push
hlt
jle
and
rol
fidivrs
jp
cmpl
pop
jne
inc
inc
adc
pop
ja
loope
jl
pop
mov
dec
jo
lret
and
popf
rol
fst
lods
adc
fwait
jp
or
lcall
fucomip
dec
gs
insb
fdivrl
and
pop
mov
mov
das
or
or
filds
jle
jo
push
mov
or
bound
test
dec
repz
loop
aam
mov
and
movsl
cmpsb
aaa
xchg
or
or
icebp
mov
adc
out
call
es
test
mov
loopne
jae
fnsave
dec
lods
cmp
mov
jmp
inc
mov
xor
dec
inc
xchg
jecxz
add
in
addr16
sub
or
add
test
mov
fsubrl
push
xorl
stos
and
inc
xor
addl
inc
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
ds
js
call
adc
les
fistps
popf
ret
in
push
sub
nop
inc
imull
test
insb
push
add
and
cmp
aas
xchg
vcvtps2dq
call
fisubl
out
mov
insb
fs
inc
dec
adc
cmp
subb
pop
jns
andl
mov
mov
xchg
fs
mov
xlat
add
xchg
jns
int
insb
jae
mov
sub
mov
icebp
cs
test
fists
inc
push
inc
ss
pop
lods
and
fcmovnb
rorl
dec
pop
xchg
jl
inc
mov
mov
stc
call
cmp
push
test
rclb
mov
mov
push
push
in
or
push
pop
jnp
mov
in
mov
daa
nop
ss
mov
mov
stos
pop
shl
test
clc
fwait
mov
jo
int
mov
dec
or
push
push
out
xor
fbstp
fcomip
jno
int3
cmp
popa
mov
popf
std
std
pop
jbe
inc
push
fs
in
jle
xchg
add
push
cmp
inc
js
sarl
cmp
sub
call
cmpsl
mov
pusha
adc
dec
mov
clc
jl
mov
scas
test
fdivrl
xchg
scas
subb
xchg
xor
out
jge
cmp
out
not
nop
adc
adc
in
adc
push
and
shrl
sbb
jge
pop
cmc
loope
or
xor
sbb
es
push
xor
stos
adc
push
int
aaa
cmp
sahf
xor
daa
scas
and
fstpl
push
in
pop
les
repnz
pop
mov
ret
cltd
jmp
xor
jnp
imul
push
pop
cs
jg
cmp
imul
aam
adc
movsb
int
rclb
dec
bound
mov
and
sub
dec
je
scas
cmpsl
xchg
mov
lcall
les
loope
and
es
out
test
stos
jbe
sbb
sbb
clc
js
adc
cmp
into
inc
or
fnstenv
sbb
hlt
popa
dec
icebp
les
orl
pop
lods
sti
adc
pop
push
inc
mov
sahf
push
xchg
movsb
mov
sbb
push
xchg
dec
pop
test
mov
mov
adc
adcl
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
stc
xchg
sbb
dec
sbb
call
sub
out
into
das
movsb
test
push
or
jb
push
incl
leave
mov
mov
fiadds
sahf
jp
jno
popa
pop
jmp
das
fimuls
sbb
pop
inc
pop
faddl
sti
js
out
fldt
or
inc
rcr
mov
xlat
xor
add
lret
xlat
sub
movsb
movsb
push
fdivs
or
mov
sahf
orl
sbb
outsl
js
xor
pop
inc
cmpsb
js
add
enter
pop
mov
ss
iret
repz
icebp
into
mov
or
cmpsl
xor
xor
leave
inc
adc
repnz
and
jb
pop
aas
sub
nop
lret
xor
mov
aam
data16
mov
add
inc
push
mov
fwait
call
mov
stos
popf
int3
popa
or
test
push
mov
cmp
outsb
cli
xchg
iret
lahf
cltd
mov
and
ret
in
xor
dec
push
mov
jae
jnp
outsb
in
fsubl
sub
cmp
scas
std
jne
outsl
dec
pop
adc
push
test
sbb
dec
std
mov
fistps
cs
popa
outsb
ljmp
mov
in
jge
lods
arpl
mov
int
fisubl
shll
dec
sub
pop
lock
mov
inc
out
ret
pop
iret
sbb
mov
repnz
mov
test
mov
push
out
mov
test
std
fcomip
notb
rorb
push
jge
mov
mov
sti
lods
xor
push
cmpsl
outsl
dec
jle
jge
inc
frstor
repnz
clc
nop
or
cld
xor
mov
pop
jb
cmp
add
jnp
mov
in
bound
mov
stos
jns
jb
xchg
dec
sub
sbb
movb
fucom
and
pop
xchg
jmp
jecxz
leave
icebp
insb
pusha
mov
test
loopne
mov
lea
je
pop
or
stos
ljmp
insl
xor
and
sbb
movsb
push
jo
pop
or
gs
and
pushf
mov
ljmp
add
sarl
flds
pushf
sub
outsb
sbb
imul
fs
icebp
add
mov
jl
xor
enter
add
add
cli
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
cmp
stc
adc
adc
adc
xchg
jae
mov
loopne
icebp
cmpsb
cs
call
sub
jno
arpl
pop
inc
or
fidivl
jecxz
jno
and
xchg
mov
sbb
fcom
adc
jge
inc
cli
insb
jmp
or
cmp
dec
fs
mov
int3
pusha
jp
jbe
insl
dec
or
loopne
add
out
or
add
pop
cltd
retw
idivb
iret
in
xchg
dec
icebp
inc
in
leave
and
push
push
and
loop
lahf
mov
jl,pn
and
push
outsb
call
shrl
cmp
out
testl
stos
xchg
push
dec
loope
jp
mov
mov
testl
dec
jo
or
mov
fucomp
pop
aas
jmp
insb
sbb
inc
dec
sbb
cmc
mov
stc
sbb
xor
mov
mov
lea
mov
rol
push
stos
cltd
and
addb
sub
dec
fsubl
mov
arpl
insl
sbb
cmp
in
adc
adc
or
pop
xor
sarl
imull
daa
es
ret
dec
cmp
jecxz
sub
sub
xchg
inc
mov
testb
rorl
lahf
jbe
icebp
out
xchg
inc
and
mov
xor
mov
adc
lds
data16
mov
mov
mov
sub
xchg
popf
mov
sbb
in
out
popf
stos
insl
ret
jns
jo
inc
jp
sarl
xchg
aad
mov
rol
movsl
mov
or
inc
push
push
cli
movsb
jns
lcall
fmuls
dec
out
jmp
pop
push
xchg
ret
je
fidivl
into
pushf
filds
sbbl
sbb
xchg
adc
jecxz
shr
jae
ss
in
in
jae
stos
ja
xor
call
out
pop
loope
cmp
jge
lahf
adc
jo
jb
cmp
cli
idivl
shll
fistl
and
sbb
stc
adc
xchg
insl
xchg
mov
push
jmp
out
mov
mov
pop
inc
ljmp
sbb
inc
jl
mov
xor
xor
dec
addr16
mov
inc
jecxz
mov
lahf
and
inc
mov
add
push
jmp
mov
or
inc
and
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
popl
out
adc
adc
jmp
add
ss
and
push
fprem1
js
jbe
mov
pop
leave
call
popf
mov
xchg
test
add
test
test
or
adc
shld
popf
push
jmp
setp
aad
xor
mov
xor
and
aaa
fmull
sbb
push
and
nop
dec
jno
xor
scas
sarl
mov
rcrb
cltd
xchg
xor
inc
cmp
add
subb
stos
clc
pop
hlt
into
adc
mov
pop
xlat
add
cli
xor
mov
mov
pushf
push
cmp
jmp
mov
fistl
push
mov
or
js
shll
xchg
cmp
pop
push
loopne
in
sub
test
push
mov
and
xchg
pop
in
fucomi
in
cwtl
or
adc
icebp
jp
push
es
sub
pop
jo
sub
movsl
xor
lret
mov
lods
xor
push
clc
cmp
pushf
je
in
bound
xchg
xchg
stc
add
test
dec
addb
jae
mov
cmpsb
dec
sub
sbb
jmp
es
or
sub
cmpsl
and
or
adc
pop
pop
sub
mov
push
sbb
int
sbb
mov
add
sub
imul
in
adc
pop
jne
mov
in
out
xchg
xor
push
or
cmpl
xor
cltd
mov
int3
push
pop
insl
xlat
or
test
sbbl
std
jl
scas
insl
lods
cs
mov
fdivrl
aas
xchg
ja
imul
lods
and
lcall
aas
pop
outsb
idivl
cltd
push
add
mov
ljmp
adc
cmpsb
adc
cmovo
rcrl
sti
stc
imul
out
hlt
lcall
sarl
cmpsb
hlt
test
or
ret
repz
cli
pop
arpl
lods
repz
pop
inc
push
dec
pop
pop
add
xchg
mov
mov
popa
adc
scas
push
mov
popa
sub
or
mov
pushf
stos
cltd
test
adc
gs
push
mov
mov
or
lcall
fs
xchg
cltd
mov
in
sub
loope
stos
xchg
mov
ljmp
cmpsl
clc
cmpsl
popa
gs
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
outsb
insb
jmp
adc
adc
aad
add
xchg
cli
ljmp
push
ret
test
notl
cmc
jmp
jb
mov
adc
push
add
dec
mov
mov
mov
or
and
aam
out
push
sarl
jbe
imul
lock
push
or
xchg
imul
outsl
fmull
adc
pop
pop
lret
and
jbe
je
push
aaa
mov
gs
std
sub
test
orb
fsubr
inc
push
repnz
push
dec
inc
add
fcoml
test
leave
sahf
sbb
cmp
stos
out
lret
mov
ljmp
mov
and
mov
push
xor
and
pop
mov
pusha
ds
fs
insb
movsl
jne
mov
and
jmp
sbb
push
cli
xchg
pop
lea
adc
cli
cmp
clc
pop
xchg
inc
loope
mov
hlt
popa
ljmp
cmp
cwtl
ret
add
xor
pop
and
and
subl
adc
mov
lds
aad
push
into
lock
xchg
and
cwtl
inc
in
out
dec
fcomi
sub
jecxz
je
push
add
cmp
mov
pop
xchg
stos
sbb
cmpsl
ljmp
push
fs
ss
loopne
pop
adc
mov
aas
out
das
and
lahf
xchg
fisttps
lods
inc
or
cmp
inc
push
notb
and
adcl
iret
add
jmp
mov
xlat
sbb
xchg
insl
push
cmp
hlt
mov
jg
cltd
sarl
sbb
daa
out
cmp
les
imul
jo
jns
mov
push
addr16
sub
pop
scas
out
fs
lea
add
push
pop
sub
sub
mov
mov
cmp
dec
daa
shr
push
les
and
jae
mov
push
inc
imul
in
dec
fwait
lds
adc
scas
add
aad
jns
mov
sbb
add
fbstp
rclb
dec
jge
ret
outsl
push
mov
inc
popf
sub
in
push
xlat
ljmp
and
sahf
inc
idivb
repz
insl
mov
test
cli
in
fildll
mov
inc
shl
dec
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
or
sbb
jo
aad
das
outsb
repz
jns
and
lods
sub
addr16
and
dec
aaa
xor
xor
das
xor
or
ficoms
out
fisubs
mov
addr16
cltd
sti
mov
mov
dec
repnz
jns
adc
insb
arpl
mov
cld
jb
or
ja
cmpsl
test
nop
and
in
loope
adcl
repz
xchg
popa
cs
jmp
push
ret
dec
es
arpl
pop
je
les
int3
jnp
fst
lret
sbb
stos
test
sub
mov
fcmovnbe
sarb
loopne
cmp
add
cwtl
pop
outsl
jle
jg
sti
popa
jbe
aad
and
repz
xlat
mov
out
fmul
xor
das
sbb
sub
inc
pushf
test
addr16
in
lods
dec
dec
push
mov
pop
dec
daa
lods
inc
daa
push
mov
icebp
dec
cltd
dec
push
fwait
cs
subl
hlt
sbb
sbb
pop
shr
push
andb
cmp
adc
sbb
aam
mov
and
outsb
and
mov
mov
out
pop
mov
mov
xchg
or
mov
cmp
mov
bound
out
xor
mov
sbb
andl
mov
inc
jno
pop
push
push
jbe
inc
cs
push
movsl
jl
stc
push
pop
popa
jmp
or
test
je
xchg
sarl
lods
jno
lods
xchg
xor
add
adc
jmp
fdivr
cmp
pop
loope
scas
fwait
lock
pop
mov
fistpll
sub
out
leave
sahf
cld
bswap
movsl
xor
test
rclb
test
stos
inc
cmc
jne
cltd
je
repnz
imul
fsubr
and
mov
andnps
add
loop
mov
adcb
imul
sbbl
jge
or
test
les
jb
icebp
xchg
ja
sti
cmp
mov
sub
ss
fldt
cmp
addl
lods
mov
adc
aad
orb
icebp
jno
inc
aas
aaa
jp
sbb
add
stos
jne
orl
xor
lea
jb
or
rcrl
outsl
pop
xor
or
dec
xchg
aam
loop
sbb
arpl
mov
lahf
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
dec
mov
iret
movlps
mov
dec
call
mov
aaa
shrb
push
jo
mov
fidivs
mov
iret
cmp
scas
pop
xlat
push
mov
add
test
sarb
daa
adc
out
ror
or
cltd
add
xor
cmp
push
inc
stc
xchg
imul
cld
add
add
inc
add
sub
inc
inc
loopne
or
cmp
mov
lds
scas
xchg
pop
xor
pop
xchg
mov
push
cmp
mov
sbb
rcrb
inc
in
jno
add
sbb
xlat
inc
mov
cltd
int
inc
and
std
jbe
rorb
icebp
jl
add
in
pop
cmp
cld
enter
shlb
sbbb
mov
add
adc
jmp
fs
mov
fwait
sbb
mov
add
popf
call
nop
shl
lods
adc
push
sbb
dec
outsl
dec
mov
orl
scas
dec
fiadds
fistpl
les
test
xchg
je
call
xor
or
mov
movsl
adc
push
and
aaa
xchg
jmp
jmp
scas
xor
sub
pop
add
push
and
orb
call
lret
push
insl
jno
mov
jmp
add
cmc
or
jne
sub
jle
fistl
push
xlat
or
test
pushl
mov
pop
pop
inc
xor
or
mov
inc
mov
outsl
jne
adc
cmpsl
jo
lret
lock
jo
repnz
mov
popa
or
jmp
fwait
inc
mov
les
sub
jp
pop
pushl
xchg
fld
cmp
fwait
xor
icebp
mov
inc
mov
inc
sarb
and
out
mov
fcoms
dec
xorl
call
mov
cmp
js
mov
lahf
ficoms
inc
cmpsb
js
shll
ja
lods
mov
dec
sub
cli
and
sbb
fsts
sbb
dec
and
hlt
jnp
andl
daa
out
xor
out
fists
jle
popf
mov
push
cmp
adc
out
sub
inc
sbb
or
test
inc
pop
es
xchg
scas
in
jo
sbb
scas
and
out
jmp
or
dec
jmp
add
or
or
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
loop
stos
pop
fcoml
adc
xor
jg
sbb
stos
push
push
push
lods
mov
data16
rcll
xchg
pop
add
xor
rcr
enter
sub
push
xor
pop
das
scas
aam
xchg
or
scas
adc
mov
mov
jp
push
push
test
add
mov
add
testb
inc
lcall
mov
or
iret
and
fstps
inc
pop
fidivl
pop
lods
lods
dec
jmp
fwait
sub
pop
mov
repz
push
jo
mov
popa
adc
scas
shrb
sub
dec
cmp
dec
mov
ljmp
andl
movsl
fdivr
mov
bound
pop
out
rcl
jne
adc
or
lock
ror
xchg
jp
arpl
mov
daa
adc
sub
sub
fistpll
xor
pop
mov
and
fstpt
popa
jns
jge
mov
dec
inc
ficompl
inc
test
test
daa
push
aam
gs
xor
fistpll
jmp
das
sbb
push
aaa
sub
or
mov
xchg
adc
aam
push
scas
imul
js
mov
sarb
fcmovnbe
push
xor
sub
mov
out
pop
mov
and
in
or
test
xchg
fnstsw
fwait
add
pop
xchg
dec
dec
cmp
imul
ja
movsl
fwait
outsb
imul
push
push
bound
icebp
in
insl
xchg
jbe
sbb
dec
aas
adc
mov
es
sahf
imul
xchg
inc
jno
mov
int
pop
cwtl
fisttps
mov
or
mov
xor
and
add
outsl
push
pop
scas
push
pop
enter
into
lahf
inc
popf
cltd
enter
xchg
mov
pop
inc
sub
aad
push
addr16
sbb
sub
pop
mov
xchg
sbb
cmp
daa
ret
mov
imull
repnz
sti
les
loopne
leave
jb
xchg
shlb
es
push
cld
stos
jmp
in
push
test
pop
mov
loop
push
or
inc
mov
pop
mov
imull
sbb
lea
push
dec
jp
mov
add
add
inc
and
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
adc
iret
movlps
sbb
mov
inc
repz
notb
dec
jb
fs
pop
push
or
std
cmp
shlb
test
test
outsl
ss
sub
movsl
xor
lcall
jge
inc
xor
lret
cmpl
push
nop
push
fsubrs
aam
and
push
lea
push
push
xor
add
in
insl
in
jo
jno
jnp
aas
and
pushf
xchg
cli
push
cmp
lea
adc
xchg
popa
pop
xchg
nop
nop
cmp
jne
pop
mov
test
adc
mov
call
and
sbb
imul
stos
jbe
clc
mov
jns
lds
lcall
outsb
enter
sub
xchg
jbe
lret
call
xchg
sbbb
fstps
leave
pop
enter
movb
es
push
lret
ja
inc
hlt
sahf
push
insb
mov
or
or
xchg
jb
inc
add
push
movsl
xor
mov
or
push
shrb
adc
scas
outsl
lret
loop
leave
inc
movsl
sbb
repz
push
insb
test
push
add
bound
fists
lcall
popa
push
int
jge
xchg
fstpl
dec
and
adc
mov
loopne
into
outsl
orb
clc
popl
pop
lret
adc
jp
loop
repnz
mov
test
imul
or
pop
ret
dec
mov
fs
aas
mov
out
mov
jle
xor
inc
push
mov
lahf
sbb
adc
daa
adc
xchg
mov
movsl
xchg
jne
negl
pop
add
ljmp
jbe
xor
push
pushf
cs
xor
lret
loopne
ss
cmp
mov
imul
loope
rcll
in
test
rclb
jecxz
xchg
sar
mov
push
xor
and
mov
in
fxch
jae
sbb
mov
push
in
or
pop
and
clc
vrcpss
jmp
loopne
and
mov
jmp
hlt
xchg
aam
sbb
push
push
dec
dec
inc
popa
cmp
scas
jo
xor
push
mov
addr16
xor
bound
fimull
jbe
mov
xor
mov
cld
adc
fcom
hlt
fcmovbe
orb
cmc
or
mov
xor
sbb
lret
loope
loope
jbe
rorl
ss
loope
lcall
aas
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
stos
cwtl
rclb
adc
mov
push
imul
std
insb
jle
xchg
sub
push
test
test
icebp
xchg
stos
inc
popf
cwtl
js
outsb
lds
dec
ffree
icebp
popf
push
hlt
ficompl
mov
dec
jl
cwtl
mov
add
jb
addr16
xlat
cmpsb
xlat
ljmp
lahf
jmp
pusha
jae
xor
hlt
pop
fidivrs
inc
mov
jo
lock
bound
cs
jbe
or
cs
pop
sarw
dec
push
mov
out
push
sbb
ss
pop
sub
mov
pop
stos
cmp
adc
mov
push
and
sub
jns
les
lret
adcl
shl
imul
cs
aam
cld
inc
bound
inc
adc
lahf
rorl
pop
mov
push
shrl
shl
mov
or
js
cs
gs
cmpsb
fistps
push
push
lahf
xchg
mov
out
inc
xor
imul
sbb
sub
xchg
movsb
xchg
inc
icebp
and
xlat
cs
mov
es
pop
ret
xorl
inc
pop
push
in
mov
jmp
repz
adc
xchg
inc
push
insb
cmp
push
repnz
arpl
dec
pop
aam
mov
jno
mov
mov
int
inc
sub
cmp
daa
jne
jge
push
dec
lea
jb
std
test
push
sbb
test
das
push
movsb
scas
sub
cltd
and
mov
mov
push
and
das
xor
dec
sub
sbbl
nop
xchg
adc
icebp
and
rorl
test
push
jo
jp
and
push
ret
mov
add
mov
jmp
aaa
xchg
bound
adc
sbb
sbb
movsl
into
add
stc
or
test
xchg
sub
roll
leave
xor
push
inc
test
stos
or
test
sbb
mov
lcall
mov
shll
cmc
push
cli
adc
add
adc
mov
jbe
clc
or
mov
in
ljmp
aaa
nop
mov
jg
sub
jg
test
or
cld
pop
mov
jb
sbb
aas
fildll
sub
fcmovu
adc
out
sub
xor
mov
dec
and
std
inc
cmp
xor
dec
daa
jecxz
rorl
xlat
sbb
mov
xchg
cld
push
iret
imul
cmp
lods
xor
outsl
shlb
jg
sub
insb
xlat
jmp
adc
xchg
dec
lock
inc
jns
dec
xlat
dec
es
jae
add
fdivs
popf
jo
add
jae
stc
add
push
rorb
jge
ret
fstpl
out
nop
adc
insb
dec
mov
in
mov
sub
inc
andl
sub
inc
jnp,pn
push
inc
sarb
stos
jne
and
test
mov
fstpl
mov
shll
pop
add
testl
add
mov
xor
mov
jae
in
cmp
lods
sbb
jge
mov
cmp
mov
enter
fwait
inc
mov
sbb
imul
jne
sbb
ja
imul
mov
pop
and
add
add
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
pop
sub
into
adc
adc
dec
out
mov
subb
and
xor
andb
fdivp
je
fimull
mov
js
xchg
and
mov
mov
in
push
clc
mov
mov
imul
or
fsubs
mov
in
xchg
adc
mov
rcrl
fstl
push
cmp
loope
into
out
ss
adc
add
cmc
cs
inc
in
xor
or
dec
sahf
push
ljmp
sub
add
mov
fistpll
adc
xchg
xor
inc
das
insl
mov
mov
iret
and
mov
andb
sahf
fmull
add
pushf
mov
or
adc
mov
and
and
ja
mov
inc
jb
mov
mov
sub
rcrb
imul
sub
dec
scas
mov
or
nop
adc
and
jp
mov
jbe
mov
cmc
incl
push
out
into
xor
scas
enter
rcrl
aad
inc
push
daa
dec
push
lcall
and
or
cmpsl
cwtl
nop
sti
xchg
inc
jae
xchg
xor
mov
loope
andl
mov
fists
arpl
adc
and
lods
sar
lss
mov
negb
and
sbb
test
push
jecxz
je
fstl
fcomps
gs
mov
stc
dec
lock
nop
lcall
sbb
and
scas
test
cmp
inc
pop
push
xchg
int
outsb
test
mov
push
and
jmp
je
out
mov
daa
flds
aam
jns
ja
rcll
or
push
loop
mov
bound
cmp
jle
sub
popf
je
push
inc
shrb
cmc
pop
jp
loope
mov
push
cli
clc
sbb
roll
xchg
div
sbb
sbb
push
inc
cli
adc
call
dec
cmc
scas
test
xlat
mov
dec
inc
out
mov
int
cld
data16
or
add
sbb
xchg
push
pop
adc
push
pop
pop
xor
sarl
cmp
iret
xor
filds
inc
push
lods
mov
jmp
divl
inc
hlt
dec
mov
pmullw
jnp,pt
je
int
mov
mov
push
jbe
lcall
jl
and
add
xor
sbb
jmp
pop
repz
mov
cltd
loop
cmp
cmpsl
roll
test
cmpsb
lods
sub
jbe
sbb
jg
pusha
add
int
dec
lock
add
or
jnp
es
sbb
jg
xor
mov
xlat
sub
or
lods
xor
inc
dec
sbb
pop
movq
push
dec
jnp
divb
sbb
jbe
sahf
mov
push
sar
repz
fildll
add
aad
in
xchg
push
les
cltd
clc
push
sbb
mov
cmp
or
cmpsl
adc
push
pushf
cmc
inc
pusha
hlt
mov
repz
push
call
daa
cmpsl
pusha
lret
push
pop
mov
sbb
out
pop
and
seta
push
lret
mov
imul
inc
push
lods
sbb
pop
jne
cvtdq2ps
mov
sbb
mov
fldt
push
out
ret
sub
lret
push
xor
mov
cmpb
push
in
and
cmp
in
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
call
add
push
cmp
ret
jo
pop
imul
into
lcall
mov
jge
out
int
adc
xor
stc
mov
pop
mov
sub
xor
addr16
cmpsb
lods
lret
mov
loope
xchg
jb
ja
gs
or
pop
xchg
out
out
jb
xor
pop
out
sbb
xchg
and
gs
mov
add
sub
jne
fildll
push
rol
pop
ja
fcompl
loopne
ret
xlat
outsl
cmp
push
mov
sbb
mov
fcompl
pop
in
and
fucomip
cmc
xor
or
dec
pop
sbb
mov
push
lods
int3
xchg
or
ret
hlt
adc
frstor
ss
adc
push
and
jb
mov
andl
mov
push
jmp
cmp
mov
mov
cmc
or
mov
xchg
adc
add
xlat
xlat
in
mov
pop
shll
pop
sbb
push
repz
mov
pop
and
adc
xor
push
in
xchg
idivb
shll
fwait
rclb
loopne
mov
test
cmp
mov
shlb
xor
xorb
adc
xchg
push
ret
jns
das
mov
or
stos
pop
adc
in
mov
int3
sub
inc
jns
cmp
sarl
mov
adc
addb
sti
outsb
fldt
xor
pop
fldt
lods
rcrb
inc
stos
cs
or
test
inc
loopne
or
adcl
or
mov
js
fcoml
repnz
xchg
pop
sarl
outsl
stos
mov
pop
adc
stos
jle
lcall
xlat
jno
outsb
pop
cld
movsl
adc
push
mov
jnp
dec
dec
pop
and
mov
cmp
inc
jbe
mov
cltd
cmpsl
ret
push
sub
sbbb
add
xchg
cmpsb
xchg
dec
mov
and
or
inc
mov
add
pop
mov
xchg
ja
into
insl
adc
cmp
lahf
ljmp
inc
push
mov
ret
sbb
repnz
mov
movsl
je
push
std
sbb
aad
insb
rcl
cmpsl
add
data16
bound
rolb
stos
stc
adc
sbb
stos
cmpsl
sarb
adc
adc
ljmp
add
adc
outsb
pusha
mov
stos
push
jmp
aas
inc
add
orb
adc
lods
mov
int
leave
mov
mov
sub
movl
fnstenv
cmpl
lods
rorl
shl
push
mov
bound
dec
cmc
dec
cs
ss
and
push
or
sbb
ret
adcl
xchg
sbb
xor
push
in
pusha
xor
jle
mov
lret
lahf
cmpl
lock
mov
dec
adc
mov
lahf
sti
add
and
sub
leave
popa
mov
fisubs
mov
sub
lcall
xchg
sahf
xor
rorl
stos
lods
mov
insb
sbb
or
add
add
bound
fwait
xchg
inc
lahf
jb
ss
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
aaa
pop
lods
pusha
mov
adc
or
xor
or
and
jl
aad
add
mov
vmread
cmp
lahf
xor
or
inc
fistl
sbb
push
loope
clc
imul
mov
cld
rorb
popf
inc
das
sub
mov
xchg
and
ds
and
lds
mov
scas
popf
dec
mov
cmpsl
test
xchg
into
fldt
jae
loop
mov
sub
std
sbb
lcall
add
sbb
adc
frstor
inc
movsb
stos
gs
add
cmp
insl
add
int
ret
out
mov
icebp
mov
inc
pop
mov
sbb
sub
inc
mov
mov
das
sub
mov
imul
cmp
aam
xchg
inc
jae
test
insl
mov
and
jmp
arpl
cmpsl
test
and
sbbl
loope
cli
adc
pop
xor
push
jp
js
or
push
pushf
setb
mov
test
mov
xchg
jmp
iret
in
jle
lret
jne
rorl
int3
push
jnp
pop
aad
add
daa
ret
rclb
dec
jg
scas
das
lret
fcmovu
cmp
mov
add
cmp
xchg
clc
cltd
pop
mov
mov
fdivl
shl
sub
fldl
sub
pop
int3
test
test
sub
xor
les
pop
adc
movsb
pushl
cmpsb
es
ja
mov
insl
movsb
lods
adc
fstl
lock
pop
cmp
pop
aaa
rclb
cmp
repz
inc
lds
decb
and
mov
adc
push
push
cmp
test
sbb
mov
imul
cli
je
xchg
cli
cmpsl
fidivrl
or
das
cmp
rol
and
add
push
push
fdivr
aam
lcall
push
sub
je
inc
shr
leave
in
inc
inc
dec
dec
loopne
js
mov
lea
in
jecxz
add
push
mov
push
and
cli
xchg
in
adc
cmp
mov
hlt
test
pop
cld
sahf
andb
ljmp
rcrl
or
pop
inc
dec
and
jmp
mov
dec
adc
outsl
mov
andb
mov
and
sub
xchg
sub
popf
jecxz
fdivrs
test
mov
dec
call
dec
scas
add
push
or
or
sub
daa
jge
pop
icebp
repz
pop
inc
xor
pop
fptan
pop
xchg
mov
sahf
dec
xor
push
mov
shll
aad
inc
cmovl
outsl
and
cmp
jmp
mov
stos
dec
mov
xchg
mov
inc
add
sub
std
add
mov
sbb
fs
or
dec
cmp
mov
jno
adc
addr16
das
pop
pushf
pop
xor
cmp
pop
cmc
daa
rcl
rcl
mov
fs
pop
cs
mov
movsb
adc
or
mov
and
pop
xchg
fistps
aaa
pop
mov
jo
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
aas
or
adc
adc
lret
fiaddl
cmpsb
cmpps
nop
out
mov
shrl
sbb
mov
iret
negl
int3
repz
xor
xor
jb
adc
or
enter
out
rcrb
jb
lods
sti
xor
adc
sti
fisubl
jl
shll
jbe
mov
adcl
test
inc
or
hlt
stc
add
pop
or
fmulp
mov
lret
mov
and
icebp
popf
jne
mov
cltd
adc
push
xchg
fnstcw
dec
imul
add
shll
mov
sub
adc
add
pop
push
inc
sbb
cmc
fstl
mov
inc
sti
mov
fcoms
adcl
push
into
scas
pop
fs
mov
movsb
inc
xor
push
call
xchg
ficoms
in
outsl
fldt
pop
les
jns
aaa
xchg
addr16
mov
pusha
lds
push
ss
xchg
and
push
mov
lahf
hlt
in
dec
jns
mov
test
jnp
xor
out
shrl
cltd
cmp
dec
pop
dec
js
inc
pop
xchg
int
lock
shl
in
push
sub
data16
xor
xchg
cmp
scas
lahf
sub
inc
inc
jo
dec
pop
stos
and
dec
sbb
loopne
pop
icebp
test
les
lods
xchg
movsl
jmp
xchg
test
ret
cmp
incb
les
outsl
mov
loopne
pop
dec
stos
enter
aaa
cmp
in
inc
les
cmpsb
stc
add
push
test
stos
lea
and
add
std
jo
adc
hlt
jmp
lret
pop
mov
adc
cmp
push
inc
pusha
xor
cmp
xchg
push
fiaddl
and
jle
mov
mov
xor
mov
dec
or
inc
std
sbb
mov
fildll
lea
xchg
jl
scas
jge
adcb
aam
orl
cmp
rcrb
js
pop
pop
leave
adc
push
aam
mov
stos
leave
cmc
xchg
movzwl
sahf
jns
aam
jo
int
jo
xlat
xor
shlb
loope
inc
cs
adc
xor
negl
aad
push
das
fildl
cmc
dec
clc
sbb
orb
fwait
dec
sbb
arpl
icebp
movsb
mov
mov
ret
push
xchg
jecxz
sbbb
sti
xor
mov
push
xchg
inc
adc
xor
push
lret
sub
sub
ss
cs
jb
int
enter
inc
repz
push
leave
lock
cwtl
push
outsb
aaa
pop
fmulp
or
jnp
sahf
sbb
xor
cltd
cs
loope
in
pop
mov
mov
xor
fnstcw
insl
jmp
jl
inc
sub
pop
dec
lret
and
outsl
cld
cmpsb
cli
or
cmp
popa
testl
pop
push
inc
xor
jp
into
fildll
out
xor
leave
popa
inc
push
testl
xor
icebp
xor
pop
clc
jg
or
pop
mov
dec
imulb
icebp
stc
shll
and
cld
xor
out
adc
test
sbb
mov
push
and
push
mov
inc
sbb
sub
test
into
dec
loopne
inc
loopne
mov
sbb
adc
lods
fldenv
test
pushl
bound
add
add
jle
add
inc
test
insb
add
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
inc
and
mov
stos
adc
adc
out
in
pop
adc
cmp
repz
and
mov
ret
dec
rorl
ja
lods
cwtl
xlat
test
shl
stos
pop
xor
sub
int
notb
fsubl
andl
pusha
mov
nop
xor
xor
shlb
in
in
sahf
std
mov
and
pop
ja
iret
clc
clc
aad
add
add
or
sti
push
stc
icebp
xchg
daa
int
in
jg
cwtl
shr
jg
pop
push
inc
aam
rorb
dec
je
and
fists
inc
lods
das
ret
xchg
mov
arpl
mull
mov
or
leave
shl
std
fbstp
mov
mov
cwtl
xchg
adc
sub
jp
mov
inc
cmp
test
lods
jae
imul
fwait
into
fcomi
jbe
popa
sub
in
mov
test
movsb
push
aam
test
jns
sub
repz
mov
xor
add
adcb
out
adc
adc
cmpsb
popa
shlb
leave
repz
fidivs
lret
mov
ror
fisttps
push
scas
dec
jp
scas
fnsetpm(287
fs
push
cmp
mov
out
dec
pop
out
mov
fstpl
inc
je
cmpsb
fists
and
sub
mov
rolb
push
mov
js
into
push
dec
neg
nop
mov
inc
push
dec
mov
rclb
js
cmpsb
lods
int3
push
jo
sub
sub
imul
pop
xor
das
aaa
xlat
add
adcb
mov
imul
fsubp
jl
and
mov
popf
mov
scas
xchg
in
mov
push
push
cmp
xchg
fwait
dec
lds
xchg
pop
out
add
mov
fincstp
pop
pop
jb
popa
gs
pushf
pop
loopne
mov
js
mov
mov
in
repnz
leave
and
decl
imul
stos
inc
ficoms
add
fistpll
mov
and
jge
aaa
sub
push
mov
dec
push
je
stos
xor
pop
adc
xchg
and
mov
test
add
pop
test
adc
sahf
lds
push
in
std
mov
jnp
subl
addr16
or
mov
mov
mov
xor
mov
sbb
and
push
and
rcrl
in
in
ds
std
or
orl
adc
das
xor
jae
out
adc
add
sbb
push
adc
lret
mov
enter
data16
ret
cmpb
rcrb
sbb
mov
add
test
mov
sbb
mov
inc
xor
mov
sub
out
cmp
lret
mov
daa
pop
mov
mov
dec
shlb
cmp
jbe
in
add
mov
rcr
mov
out
inc
add
jle
icebp
scas
stc
pushf
cmp
cmp
push
cmp
lea
aam
pop
in
cmp
pop
cs
xor
lods
imul
push
xor
aaa
repz
mov
xchg
mov
add
mov
mov
xor
xor
jmp
or
mov
mov
mov
lods
mov
stos
sub
adc
jnp
xchg
pop
jecxz
pop
jecxz
mov
fisttps
jge
cmp
sahf
stos
inc
adc
and
aad
lods
inc
loop
pop
mov
jne
test
sbb
iret
sbb
es
lahf
jno
mov
subl
pop
xlat
hlt
cmc
cmpsl
ja
push
push
aad
pushf
add
cmp
add
lret
jp
add
pop
cmp
push
push
dec
sub
jge
dec
cli
jno
dec
jp
sbb
adc
push
je
gs
loope
loop
fimull
call
jno
in
arpl
aam
jns
mov
mov
icebp
int
sbb
dec
clc
sub
mov
stos
push
fildl
test
jbe
jae
movd
lahf
mov
sub
pop
jno
push
jo
rcrl
sub
rcrb
loop
outsb
mov
push
adc
xlat
cmp
test
mov
xchg
cmp
add
imul
fwait
mov
mov
and
testl
icebp
icebp
pop
out
sarb
pop
and
xor
dec
adc
lahf
daa
push
inc
das
in
push
adc
testb
or
cmp
cmp
and
xchg
push
pop
lret
mov
xchg
xchg
jnp
push
rcl
dec
adc
jle
dec
xor
rolb
ret
xchg
std
lahf
jns
arpl
pop
cwtl
push
lock
sbb
xor
or
jbe
push
sarl
jp
push
scas
imul
idivl
pop
adc
fisttps
gs
mov
or
push
enter
cwtl
jb
loope
out
mov
pop
iret
pop
jp
arpl
and
add
ss
test
pop
xchg
xchg
aaa
jno
mov
jl
stos
stos
jae
xor
addb
xchg
sti
mov
mov
adc
in
mov
inc
les
lock
jne
mov
jge
pop
roll
or
mov
dec
cmpsb
sub
mov
jnp
push
dec
and
mov
lret
shrl
je
jne
scas
inc
ja
js
out
shrl
cmp
shlb
out
inc
shll
xchg
mov
xchg
lods
push
aas
in
nop
out
mov
mov
push
fildll
inc
mov
popa
popf
ljmp
jo
stc
dec
jp
cmp
scas
add
push
adc
stos
sub
es
imul
pop
xchg
jns
cmp
stos
xor
mov
push
addr16
cmp
jge
jb
je
dec
enter
inc
and
repz
cmp
das
cltd
inc
mov
iret
push
mov
push
lds
or
mov
mov
les
pop
dec
pop
mov
add
ljmp
sbb
jg
pusha
std
cmovae
add
sub
pop
jl
push
mov
mov
adc
pop
cmpb
addb
sub
cmp
lahf
ds
orl
stos
xchg
outsl
inc
cli
add
aam
xchg
push
andb
cmpsl
lret
fs
popa
insl
add
mov
xchg
lock
je
add
test
orl
pop
aam
push
mov
adc
fcomi
jle
sbb
aaa
xor
rcll
cld
notb
xor
lret
bound
icebp
jnp
imul
push
lret
shlb
mov
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
mov
stos
adc
adc
adc
push
and
xor
inc
aaa
popf
inc
fldl
je
lods
loopne
push
push
test
in
call
xchg
lret
dec
add
lock
fcmovnu
mov
mov
jge
xor
aaa
sarb
mov
jg
enter
mov
xor
lods
mov
jbe
push
fidivs
xor
mov
stos
nop
mov
push
movb
lcall
dec
sub
notb
jge
stos
scas
mov
cmp
jmp
cmp
and
imul
add
int3
mov
mov
push
lret
adc
inc
cli
shrb
pop
cmp
jecxz
out
mov
sbb
push
call
dec
lahf
inc
jecxz
loopne
pop
ret
in
jmp
out
sub
test
sub
jno
pop
dec
rcll
movsb
dec
push
jbe
push
sbb
mov
out
push
xchg
in
mov
mov
xchg
mov
dec
add
mov
sub
inc
cld
xchg
mov
dec
loop
jnp
sub
sbb
mov
cmc
add
sbb
lret
cltd
loope
daa
lods
icebp
pop
mov
add
mov
cmp
jne
jnp
loop,pn
rcll
pop
mov
xchg
or
stos
sub
xchg
mov
out
scas
test
inc
xchg
inc
adc
fwait
cmp
inc
jnp
shlb
jnp
jecxz
mov
cmp
mov
and
mov
sarb
adc
cli
fadd
sub
add
adc
mov
dec
incb
std
nop
sahf
sub
add
enter
flds
inc
cmpsl
fistl
jne
je
ljmp
stos
or
into
fcmovb
pop
ret
sub
fadds
xor
movsl
sub
popa
lods
insb
lret
and
imul
imull
pop
in
rclb
sbb
jg
lret
js
adc
mov
push
out
cwtl
movsb
jg
pushf
cmp
mov
dec
push
aas
sti
xchg
das
mov
std
rorb
addr16
add
jne
cmovge
je
inc
push
bound
jmp
out
jae
mov
imul
mov
mov
mov
jge
mov
pop
push
and
jmp
sar
pop
cltd
jbe
ds
adc
jl
movsl
cmp
xor
incb
imul
add
xlat
mov
cltd
out
adc
add
xchg
adc
lcall
inc
repz
mov
mov
mov
sti
sahf
add
adc
xchg
ljmp
mov
fs
inc
lret
mov
xchg
mov
pop
ja
cmpsb
out
je
lret
push
xor
cld
pop
lcall
lods
mov
xchg
mov
sub
and
inc
dec
outsb
push
mov
icebp
dec
pusha
inc
movb
add
push
aaa
xor
cwtl
cmp
movsb
cltd
addb
and
xchg
cwtl
mov
pop
stos
int
mov
mov
xchg
lds
xchg
xor
cmpsl
cmpl
scas
icebp
push
daa
nop
fists
push
jae
inc
adc
notl
out
fisubs
aad
inc
jl
pop
test
jo
pop
sub
adc
push
jp
ds
pop
cmc
rolb
shlb
fstp
cwtl
pop
push
das
cld
sub
flds
push
shlb
pop
sti
push
jecxz
neg
mov
pushf
jmp
jge
jmp
cmp
mov
js
and
push
lcall
mov
jmp
cmp
mov
call
jmp
push
cmpb
lcall
mov
cli
outsl
push
das
pusha
daa
scas
xor
xor
in
adcl
sbb
icebp
lret
lock
pusha
xchg
icebp
cwtl
notl
aad
pop
les
sub
dec
push
jmp
or
cmp
xor
xchg
scas
in
or
bnd
sbb
int
mov
pop
icebp
aad
sbb
and
insl
jnp
cmpsl
ss
sbb
mov
mov
loop
push
fnstcw
mov
jmp
leave
in
lahf
gs
icebp
test
jo
push
push
out
inc
dec
es
hlt
nop
and
adc
mov
gs
pop
cmp
ds
in
out
dec
mov
push
test
shll
es
stos
into
dec
bnd
cli
aaa
dec
dec
add
push
xor
jg
das
les
scas
dec
jl
mov
cmp
pop
popf
add
shlb
imul
clc
fcoml
jmp
pop
daa
push
lock
mov
stc
push
mov
or
pop
mov
inc
mov
jae
sub
push
fsubs
inc
mov
sbb
and
vmread
pop
adc
xor
pusha
pop
jns
scas
mov
in
ja
mov
mov
and
inc
xchg
mov
mov
or
test
cmp
adc
sub
loop
scas
jle
cld
loope
in
xchg
add
sub
test
sbb
int
and
inc
jle
mov
pusha
add
clc
jbe
aas
inc
and
xchg
call
adc
imul
fildl
pop
and
mov
mov
pop
hlt
cmp
mov
cmpsl
mov
or
xchg
les
jmp
jb
xor
pop
and
push
xchg
call
cs
lret
or
jae
and
sbb
dec
mov
loope
inc
mov
mov
jbe
sbb
mov
inc
sbb
mov
pop
cld
mov
cmp
rorl
sub
xchg
sahf
scas
inc
cmpsl
mov
imul
in
pop
mov
push
add
or
sbb
popa
mov
cmp
sub
cltd
dec
lcall
sub
ja
mov
pushf
jle
sti
rcrl
cltd
jmp
and
mov
decl
dec
cmp
mov
divl
push
mov
dec
gs
data16
and
mov
jno
jl
pop
fcoml
fdivs
cmpsl
enter
sbb
pusha
jb
loope
fcom
mov
ficomps
jle
out
sub
adc
fimull
jb
pop
out
test
adc
xor
pop
push
inc
pop
pop
in
pop
push
cmp
mov
add
lahf
fistl
and
daa
ljmp
andb
lahf
jge
movsb
add
sbb
mov
xor
jb
dec
call
repnz
push
lea
sub
data16
aad
mov
jnp
lcall
add
sub
fdivr
jge
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
lret
xchg
adc
adc
cmpsb
inc
xor
test
jl
inc
mov
mov
shlb
out
adc
push
push
dec
pop
roll
push
loop
outsb
cmp
lea
cwtl
cmp
sub
cs
cmp
scas
insb
cmc
stc
cmp
add
jns
test
inc
add
or
repz
call
pop
cmp
rsm
cmp
add
push
ss
out
mov
mov
in
mov
ss
repz
adc
inc
sub
xor
dec
imul
cmpsb
jb
cltd
lods
fildll
add
scas
mov
jge
adc
xchg
insl
sub
enter
jae
and
cmc
push
jns
ds
psubsb
adc
nop
or
lret
or
xor
js
shlb
scas
mov
xchg
inc
pop
fisttpl
cmpsw
iret
add
or
int3
jge
in
jge
pop
arpl
insb
pushf
lret
inc
inc
pop
roll
mov
fadds
insb
das
lds
inc
mov
fidivl
add
xor
dec
dec
sub
jge
xor
popf
cmp
loopne
dec
iret
add
mov
pop
repz
ror
jg
adc
mov
nop
bswap
cmp
dec
ffree
test
adc
mov
test
adc
scas
cld
jnp
fs
pop
xor
rolb
imul
imul
push
xchg
pavgb
push
jl
and
mov
daa
lds
xchg
bound
mov
adc
or
pushf
test
scas
sti
adc
loope
add
std
int
mov
in
push
scas
dec
or
aad
push
ds
jge
xchg
call
mov
stos
mov
dec
fwait
pop
mov
les
inc
mov
fistl
mov
mov
mov
xor
pusha
lods
dec
mov
imul
fimull
add
into
ss
lret
dec
mov
insb
fsubrl
lahf
xor
std
mov
gs
pop
ja
das
adc
test
data16
aaa
and
dec
dec
in
sbb
aaa
pop
sub
fs
lds
push
add
xor
xchg
xchg
xor
xor
sbb
cwtl
lret
lock
loope
xchg
cmpsb
incl
hlt
std
cmp
sarl
sar
dec
popa
jmp
xchg
jle
jo
push
in
push
outsb
dec
inc
lock
dec
ss
insb
cwtl
imul
fldcw
daa
sbb
ret
xchg
clc
cmp
pop
xchg
icebp
aas
mov
daa
lods
jg
ret
inc
dec
enter
scas
sub
in
xchg
pop
pop
pushl
ss
sarb
out
and
mov
or
mov
push
cmpsb
inc
stos
jge
sub
aam
mov
shll
ja
imul
mov
lods
pop
push
pop
push
test
jecxz
fsubl
add
jge
adc
push
in
mov
cld
hlt
dec
sti
mov
cmp
push
push
push
sti
aas
sti
cmpb
xchg
lcall
sbb
jg
cs
add
mov
std
xchg
mov
shlb
mov
jmp
cmp
push
cmpsl
int
clc
fldl
cltd
ror
cmp
in
or
xor
mov
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
or
sbb
addl
adc
cmpsl
aaa
pop
mov
in
or
fstpt
int3
scas
xchg
mov
lahf
or
out
ljmp
mov
cmp
jle
outsl
add
inc
cmp
aas
rorb
jmp
cmp
adc
ret
xor
xchg
add
hlt
mov
mov
push
inc
dec
into
mov
mov
pop
mov
inc
rcrb
mov
out
inc
ljmp
aad
cmp
sbb
hlt
jl,pt
pop
test
arpl
adc
xchg
xor
jmp
jp
lahf
mov
jmp
cmp
inc
cs
xorl
push
mov
sbb
rclb
push
rolb
cli
mov
lahf
xor
pushf
sub
inc
test
dec
int
push
and
jg
dec
sub
add
jbe
mov
mov
add
xchg
add
xlat
stc
aas
int3
pop
add
test
pop
cmpsb
xchg
push
jne
jb
cmpsb
jbe
and
sub
das
out
inc
mov
pop
jge
adc
xchg
sub
jnp
and
ds
dec
cld
in
std
nop
mov
aas
jmp
xchg
aam
jno
into
jns
push
cltd
dec
and
cmp
jge
adc
push
mov
divl
out
popf
mov
dec
pop
aam
stos
sti
sbb
ds
out
and
lret
sbb
ds
in
aaa
mov
gs
das
arpl
inc
adcb
sbb
inc
nop
inc
xlat
mov
sub
cld
or
and
pushf
and
mov
push
flds
popa
inc
ret
int
stos
jbe
xlat
adc
cld
xchg
les
imul
mov
nop
jb
loopne,pn
xchg
ds
jns
js
sbb
and
fisttps
sahf
pop
ret
imul
pop
push
inc
mov
std
lock
leave
cmp
outsb
dec
or
pop
jp
sub
arpl
cltd
test
popf
lods
mov
cli
shrl
cmp
lock
std
repnz
push
adc
sub
jle
divl
std
lock
dec
inc
popa
lods
test
repz
and
mov
mov
pop
fisubrl
push
lahf
imulb
jge
mov
out
nop
add
inc
push
adc
je
xor
inc
cmp
mov
popa
movsl
adc
pop
mov
addl
jle
jae
aas
xchg
push
scas
int
shll
mov
rol
rolb
dec
je
fadd
add
cmc
xor
jge
aam
pop
add
xor
stos
movsl
testb
cmp
clc
jne
cwtl
pop
mov
sti
pop
cld
inc
fidivs
aad
xor
stos
ret
push
stc
pop
jnp
mov
lods
rcll
jg
xorl
sahf
stc
sbb
icebp
test
loope
sbb
inc
jg
rcrb
stos
push
imul
dec
test
inc
daa
sub
xor
loope
bound
and
xchg
jecxz
arpl
sub
xor
mov
jg
dec
test
adcl
xchg
jae,pn
dec
stc
inc
aad
mov
in
jo
mov
push
aaa
arpl
popa
mov
inc
push
std
fbld
push
dec
xchg
push
inc
jno
call
fbstp
dec
sbb
xor
subb
rorb
loop
and
mov
jg
je
in
cld
shrb
int
decl
lea
test
incl
lret
fmuls
fdivr
decl
jne
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
jle
pop
adcb
dec
jg
das
lock
pushf
out
stc
xor
jbe
sbb
add
sub
sub
es
xchg
mov
jl
addr16
add
arpl
add
xor
dec
sbb
fs
cmc
xchg
sbb
jecxz
testb
push
or
jo
andb
push
jno
dec
lea
imul
mov
xchg
or
loopne
pop
fists
outsl
shrl
inc
mov
add
call
or
push
pop
repz
aad
mov
cs
lods
lea
jg
dec
push
inc
in
jl
clc
loopne
inc
push
sub
shlb
mov
dec
xchg
jmp
rorb
push
mov
mov
xchg
loope
movsl
lds
push
inc
ss
mov
sbb
xor
in
dec
push
adc
or
aas
xorb
mov
lods
add
ret
xchg
adcb
hlt
pop
sbb
lret
or
mov
mov
xchg
jl
jge
int3
jns
add
sbb
mov
inc
scas
xchg
hlt
pop
fndisi(8087
pop
nop
loopne
adc
xlat
insb
push
ss
mov
incb
imul
lds
clc
pop
and
push
pop
aad
and
test
pop
cmp
scas
mov
orb
jae
mov
push
jmp
pop
pop
aaa
push
adc
sbb
dec
pop
pop
mov
mov
add
faddl
or
lock
pop
iret
mov
out
inc
clc
fldenv
shld
dec
and
xchg
out
push
stos
push
mov
ljmp
inc
xor
pop
sbb
fs
sub
sbb
dec
adc
jns
xchg
int3
dec
fwait
iret
movsl
cmp
sbb
inc
stos
in
addb
addb
xorl
test
pop
add
mov
cwtl
cmpl
xchg
nop
aam
ljmp
out
mov
movswl
pop
iret
inc
fldenv
imul
mov
dec
popa
add
adc
scas
cmp
jl
jle
addr16
xchg
repz
push
imul
repz
pop
inc
rorl
stos
sbb
in
adc
mov
mov
xor
lock
and
and
xchg
in
fstl
mov
icebp
lods
and
mov
mov
adc
push
fisubs
faddl
je
xchg
ret
cmp
mov
enter
sbb
fmull
push
loop
inc
dec
sbb
dec
jno
xchg
movsl
lret
adc
fidivrl
mov
sbb
or
push
pop
pop
mov
add
lret
cmp
bound
insb
rolb
shl
push
jmp
mov
nop
mov
add
and
ja
in
push
xor
pop
movsb
cmpl
mov
pop
in
sbb
inc
imul
inc
inc
push
cmp
insl
lock
add
std
ljmp
mov
movsb
arpl
add
jne
scas
sbb
aas
aam
out
aaa
jns
sar
or
in
sbb
inc
pop
inc
dec
dec
sar
cmp
push
lods
and
xchg
out
push
add
jmp
adc
sbb
adc
es
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
out
push
push
js
adc
insl
xor
adc
seta
sbb
dec
into
cld
and
and
dec
sar
push
shrb
lea
ret
sti
push
sub
scas
in
adc
push
or
fucomip
fsts
adc
leave
gs
sti
pop
sub
inc
pop
popf
cltd
jns
in
xchg
lret
pop
int
mov
jecxz
jno
aad
push
flds
dec
jmp
outsb
xchg
aaa
ja
xchg
aas
mov
mov
ljmp
add
cmpsb
sub
mov
imul
lret
in
cltd
inc
loop
mov
adc
jno
jns
cmp
mov
push
cmp
or
xchg
mov
icebp
loope
jmp
jl
sbb
mov
dec
sarl
adc
repnz
jle
sahf
insl
xchg
out
icebp
iret
rorb
rcrl
xchg
sbb
mov
loopne,pn
xor
xchg
xor
lock
rclb
mov
mov
push
inc
cmp
hlt
jecxz
rcll
repz
outsb
pop
fdiv
imul
fadds
mov
pop
inc
xchg
inc
jg
loopne
bound
lock
cmp
sbb
mov
jns
mov
test
push
jg
xor
lret
mov
add
xlat
dec
iret
mov
push
pop
cmp
cli
call
ds
pop
jp
and
lods
xchg
push
jl
jno
inc
mov
xchg
add
inc
imul
or
or
aad
adcb
sbb
lea
fisttpl
mov
pop
push
add
jge
jo
xor
or
dec
ss
loope
js
cmc
popf
hlt
scas
ret
and
movsl
dec
add
lock
mov
lret
and
and
and
cmc
dec
ss
inc
xor
mov
dec
loopne
and
xchg
rcl
mov
sbb
femms
and
jle
movsl
ret
xchg
icebp
dec
andl
into
sbb
test
cmp
cmc
roll
sbbb
sbb
xor
adc
xor
outsl
in
icebp
mul
cmp
cmpsb
dec
sub
jg
pop
sbb
mov
test
jnp
or
pop
sbb
dec
std
sub
xchg
es
es
push
xlat
in
mov
ljmp
js
imul
clc
adcb
decl
pop
mov
push
mov
lock
inc
mov
lods
hlt
adc
and
lock
shrb
push
adc
outsl
mov
ljmp
insl
es
pop
xor
outsl
dec
pop
mov
xchg
ss
sarl
ljmp
xor
popf
jb
dec
cli
dec
mov
xchg
sbb
clc
fs
jmp
jmp
or
rolb
push
xchg
fs
loopne
gs
mov
divb
push
lock
inc
sbb
jo
fdivp
cmp
and
js
jle
mov
and
in
repz
pop
sahf
icebp
xchg
lds
fimuls
sahf
notb
out
xchg
push
push
cmpb
outsl
mov
xor
push
xor
lahf
pop
add
add
lret
inc
mov
stos
sbb
mov
rcrl
decl
jmp
mov
clc
mov
sub
jle
test
stos
adc
adc
fwait
sub
ljmp
xor
into
dec
xor
into
lods
negl
ljmp
add
push
push
jecxz
xchg
adc
scas
fdivrs
ret
or
imul
push
test
xchg
pop
outsb
pop
sub
lods
es
jmp
andb
leave
aaa
pusha
out
push
gs
les
cli
ret
int3
cmp
movsl
test
sbb
dec
fmuls
fiaddl
testb
or
xchg
cmpsb
push
cmp
add
xchg
in
jmp
ljmp
sub
int
hlt
or
push
and
jle
pcmpeqw
mov
lock
mov
adc
scas
xchg
pushl
mov
mov
arpl
jg
ss
fsubrp
jge
pop
push
ret
shlb
sbb
pop
push
in
jbe
jns
inc
dec
fstpl
pop
add
fsubrl
lret
cmp
pop
dec
inc
dec
insb
mov
lea
aaa
lcall
lods
lcall
adc
mov
mov
inc
push
add
or
inc
icebp
xchg
jns
xorl
jge
dec
ds
pop
sbb
xchg
cmp
sub
push
cltd
pop
mov
outsl
frndint
repnz
aad
sub
pushf
xlat
jne
movsl
ret
sub
das
jno
cmp
xor
xchg
insl
push
test
jg
fdivl
int
int
imul
sub
mov
and
pushf
cmp
lea
mov
mov
and
or
jp
and
movsl
bound
inc
and
lcall
loopne
dec
lods
rcrl
dec
in
adc
or
xchg
push
mov
xor
enter
das
vlddqu
mov
xchg
adc
xor
or
adcl
sub
jbe
xlat
pop
int3
and
pop
push
cmp
jle
and
or
ljmp
add
push
loopne
in
outsb
icebp
sub
les
pop
sub
mov
mov
ffree
lods
cmpsl
insb
jmp
lds
and
in
xchg
adc
xchg
popa
fisttps
mov
mov
stc
push
lret
sub
ljmp
stos
xor
xor
adc
xchg
das
cmp
fisttps
sub
push
mov
or
adc
jae
stos
dec
outsb
mov
push
repnz
inc
outsl
xchg
sub
push
xchg
stos
and
push
dec
iret
out
xorb
jo
je
mov
jae
mov
ds
adc
call
push
xchg
pop
mov
inc
jp
add
leave
repz
stos
cld
gs
rolb
lock
shlb
mov
fwait
int
jo
outsl
rolb
test
xor
movsl
aas
cmpsb
pop
shll
scas
mov
or
cmp
inc
nop
dec
arpl
jns
addb
and
insl
add
add
push
rolb
xchg
test
push
adc
mov
xchg
sahf
stc
stos
je
xchg
iret
ret
insl
fwait
lcall
sub
cmp
mov
mov
addr16
movsl
push
and
outsl
sub
adc
xchg
xchg
pop
fs
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
fcmovbe
lods
insb
call
adc
adc
int3
xor
adc
cmpsl
mov
stos
nop
push
mov
scas
loope
adc
sbb
xchg
in
addr16
bound
es
gs
daa
jp
xor
sti
xor
dec
mov
in
shrl
es
cmpl
mov
cmpsl
ret
mov
xorb
adc
xor
sahf
pop
in
push
orb
sbb
mov
add
andl
pop
push
pop
push
mov
rcrl
fistpll
pop
fimull
rcrb
imul
push
std
pop
subb
mov
movsl
test
retw
bound
jno
add
sub
ljmp
fbstp
popa
jbe
sub
out
fldenv
mov
mov
repz
ret
cld
mov
and
push
adc
pop
aas
test
adc
scas
xor
push
mov
test
imull
mov
or
cmc
pop
dec
push
clc
xchg
sti
xchg
addb
lds
cs
xlat
mov
fdivrs
jl
inc
jg
movsl
xchg
xchg
add
push
mov
mov
cld
cmpl
lret
pop
loope
jecxz
push
aaa
in
jno
mov
cwtl
xor
ljmp
mov
testb
stc
inc
push
icebp
pushf
push
shlb
push
and
adc
and
xor
adc
cli
imul
jne
mov
pop
cltd
mov
repz
mov
mov
cmp
jl
dec
push
hlt
push
pushf
push
push
and
daa
xorl
out
insb
loope
xor
int
and
insb
fimull
sub
cltd
xchg
inc
jae
dec
sub
fwait
lret
mov
mov
jbe
cltd
adc
mov
movsl
adc
push
dec
cmpsb
add
pop
sub
fisttpl
sahf
jne
mov
and
jl
mov
sub
mov
sbb
adc
push
insl
test
scas
xor
mov
dec
es
nop
test
test
xchg
enter
mov
lret
lock
or
pushf
push
test
das
fisttpll
int3
mov
call
mov
xchg
inc
xchg
xor
sub
xor
xorl
cmp
add
adcb
add
aam
ret
inc
push
sbb
mov
ficoms
add
xor
cltd
and
dec
mov
repz
mov
add
xchg
lret
or
int3
mov
mov
pop
add
or
lcall
or
cmp
repnz
enter
mov
das
lods
add
push
jbe
lea
in
push
inc
arpl
dec
ror
cwtl
adc
and
cs
and
and
insl
sbb
cmp
add
push
push
stos
clc
movsl
push
mov
mov
aad
dec
mov
lods
sub
in
xor
mulb
xor
imul
mov
iret
dec
adc
lret
ret
les
mov
and
mov
fcmovne
mov
nopl
or
mov
loop
dec
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
mov
sub
outsb
jns
mov
movsl
jmp
jbe
imul
stos
rol
fsubrs
pushf
mov
mov
repnz
mov
adc
test
ljmp
cli
mov
cmp
sub
insb
xchg
adc
bound
cld
sbb
rorb
dec
jnp
xor
repz
je
or
sti
dec
fmuls
mov
es
or
inc
jmp
jne
popa
sub
pop
mov
push
dec
adc
andb
pop
cld
out
fiadds
push
int
mov
fistpl
mov
mov
bound
adcl
movsl
andl
push
inc
scas
xchg
xor
or
mov
test
fs
mov
cmp
out
adc
fdivl
or
pop
sbb
or
cli
jmp
je
dec
push
scas
mov
xor
dec
dec
and
daa
fbstp
insl
adc
and
cmp
pop
push
loop
and
insb
xor
loop
ljmp
mov
xchg
pop
arpl
sub
in
mov
lock
xor
jae
aaa
jg
push
lcall
push
jb
and
xchg
pop
ret
xlat
lret
lahf
and
and
pop
shlb
mov
push
ds
movsb
xchg
fstpt
push
mov
xor
scas
mov
loope
loope
inc
aas
adc
pop
mov
and
int
mov
cmp
or
xchg
sti
or
adc
mov
into
jle
pop
dec
jns
sub
pop
add
jno
dec
xchg
pop
jae
xchg
xchg
pop
and
xchg
aad
pop
or
inc
push
mov
js
lock
flds
and
mov
mov
loopne
fimull
cs
test
jo
repz
or
mov
popf
lds
gs
int3
push
sti
mov
test
in
add
rol
aam
mov
mov
insl
push
sub
xchg
adc
repz
inc
jo
into
sbb
cmpsb
lock
mov
test
mov
xchg
mov
dec
dec
mov
sbb
push
jle
jg
shlb
add
xchg
fwait
sub
out
inc
mov
fwait
and
mov
out
cld
xor
das
sub
data16
mov
mov
xchg
push
dec
hlt
icebp
jae
pop
and
pop
dec
lahf
fsubl
cmp
xchg
idivb
pop
insb
arpl
add
pusha
dec
mov
sub
xchg
pushf
gs
inc
adc
in
into
negb
out
aad
movsb
xchg
xor
pusha
sub
testb
cltd
mov
or
mov
or
repnz
in
dec
cmpsb
dec
cmp
int
push
add
outsl
push
mov
sub
inc
dec
in
push
lcall
std
aaa
jne
aas
xor
mov
pop
xor
loop
or
dec
sbb
push
test
fwait
or
push
xlat
nop
mov
idiv
ljmp
mov
testb
mov
cmp
push
shrl
mov
out
xor
ret
xor
push
mov
jno
mov
mov
mov
push
inc
insl
arpl
adc
movsb
jno
jo
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
bound
mov
stos
adc
adc
mov
loop
lods
cmc
or
fsubrl
sbb
sub
inc
xchg
ja
lods
sbb
mov
cmp
or
or
aas
fistps
add
and
mov
loope
cmp
pop
dec
push
mov
sbb
out
cmc
clc
mov
xchg
xchg
sbb
fistl
mov
adc
jp
jge
notb
fildl
sbb
aad
dec
frstor
insb
insl
movsb
cwtl
add
jl
out
imul
cmpsb
stc
lret
in
loope
cmp
aad
push
mov
adc
int
testl
scas
test
sbb
loopne
inc
shlb
lea
das
js
data16
mov
cli
sub
js
and
bound
mov
push
sbb
mov
incb
test
mov
cmp
hlt
repz
rorb
imul
sbb
add
sbbb
mov
mov
mov
jg
mov
and
gs
outsl
sbb
cli
les
movsl
outsb
xor
and
in
shrl
testl
std
jbe
outsl
rolb
or
pop
cmp
xor
cmp
pushf
cwtl
push
fs
mov
and
int3
mov
lret
sbb
xchg
daa
adc
cmpsl
inc
rolb
dec
int3
xor
cltd
dec
lahf
adc
orl
dec
pushf
or
andb
fdivrl
jg
ljmp
sbb
dec
es
cmp
xlat
push
pop
enter
push
mov
ss
dec
add
in
testl
in
addb
clc
cltd
mov
faddl
or
or
aad
jae
and
test
cmp
std
in
addr16
cli
add
clc
inc
cs
jnp
xor
fstpl
notb
popa
gs
mov
cmp
lcall
xchg
enter
ret
test
jl
or
cmp
xor
test
stc
jl
mov
stos
fwait
inc
mov
push
xchg
clc
mov
push
repnz
mov
lods
ja
popf
rorl
jo
dec
into
and
or
add
xchg
nop
mov
xchg
mov
cltd
fnstenv
pushf
mov
inc
xor
test
jecxz
lret
sbb
cmp
jg
pop
ret
imul
movsb
jne
notb
daa
mov
dec
or
dec
push
out
lds
adc
pop
sub
mov
jecxz
inc
popa
lcall
into
inc
xlat
jbe
stos
daa
cmpsb
add
cmp
sarl
cmp
and
mov
lcall
pop
loop
dec
xchg
in
leave
hlt
std
into
mov
out
ficompl
shrl
ret
cld
out
int
hlt
lea
mov
push
hlt
aad
enter
mov
popf
mov
cli
xchg
mov
cmpsb
xchg
insl
aas
inc
jge
cmp
mov
push
add
in
test
and
mov
imul
test
aaa
push
into
sbb
add
scas
je
out
xchg
leave
jecxz
das
jne
inc
mov
int3
loope
mov
push
orl
call
jbe
adc
sti
dec
push
inc
in
fwait
dec
inc
mov
cli
adc
push
jmp
inc
push
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
out
jnp
sti
je
sahf
fisubl
or
neg
cmp
out
and
mov
cmp
popa
in
push
mov
pop
aaa
jo
iret
cmpsb
cli
fcompl
adcl
hlt
add
cld
clc
ss
lods
mov
push
movsl
lods
ss
hlt
xor
outsl
xchg
pop
push
ret
or
push
rorb
fcmovb
cmp
push
les
push
adc
xlat
lods
lock
mov
dec
add
in
lahf
push
dec
idivb
pop
mov
cmp
movsl
aaa
lock
mov
or
fnsave
jae
stos
pop
add
push
int
sub
jo
loopne
movsb
cmovg
movsl
shll
sbb
or
mov
push
xor
dec
rcrl
xchg
out
nop
jg
loopne,pn
and
cwtl
out
adc
lret
fistpll
mov
cmp
mov
cmp
mov
cmp
loope
fs
push
mov
and
xor
pop
test
or
repz
xchg
jne
jmp
and
jb
inc
stos
xor
sub
or
and
cmp
dec
adc
pusha
jno
movsl
dec
add
dec
jge
and
hlt
ljmp
pushf
or
mov
in
pop
mov
mov
imul
mov
sub
sahf
into
mov
cmpsl
xor
arpl
sub
out
push
sub
jmp
mov
pop
push
mov
fmull
lahf
popa
push
sbb
cmc
jns
stos
sub
sbb
and
mov
xor
rcll
iret
lods
xchg
jge
jl
cltd
push
or
jmp
push
adc
into
pop
xor
mulb
jl
stos
inc
mov
and
ret
mov
push
or
pop
outsb
ficomps
enter
mov
jecxz
jecxz
loopne
pop
mov
mov
mov
daa
jnp
lret
xchg
and
adc
pop
push
fmull
loop
push
divl
stos
sti
add
pop
push
push
ret
pop
ja
fdivp
gs
add
addr16
cmp
xchg
jne
repnz
sbb
pop
mov
mov
add
jb
std
xchg
pushf
out
out
jg
and
and
jns
and
insl
pushf
push
frstor
fcmovnbe
rclb
mov
lea
sbb
sbb
jbe
push
mov
movsb
sti
cmc
mul
mov
inc
cld
lahf
cld
push
mov
pushf
in
sbb
jno
fwait
push
xlat
int
dec
jns
les
pop
add
mov
ret
cmp
nop
pop
outsl
mov
sub
mov
and
mov
das
mov
dec
pop
nop
sub
mov
adc
cmpl
cli
decb
movsl
xor
lock
sbb
mov
scas
rclb
add
push
pop
and
mov
xchg
add
dec
sbb
ss
cld
adc
jp
popf
and
xor
call
in
pushf
scas
fsubrl
xchg
rorb
ljmp
cltd
mov
sti
cmp
das
addr16
mov
or
fisttpl
push
mov
sub
stos
mov
sub
loopne
icebp
xor
jne
dec
mov
xor
add
sbb
jecxz
addl
dec
loope
scas
add
into
call
mov
sub
repz
iret
mov
mov
push
or
imul
stos
xchg
in
aas
xchg
out
or
fcoml
jp
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
pop
fdivrs
stos
adc
adc
dec
ljmp
in
pop
movsb
in
push
cmp
push
adc
imul
jns
int
rorb
outsl
and
jo
jne
scas
aas
adc
enter
sbb
add
gs
jp
lods
aad
lea
movsl
pop
jb
pop
inc
jb
xchg
fcomi
iret
adc
fcompl
sbb
pop
cli
loope
mov
add
pop
out
xchg
mov
xor
mov
inc
inc
stc
lret
outsb
imul
popf
xchg
inc
pop
popf
mov
scas
inc
leave
cmp
lds
popf
in
pushf
mov
shrb
inc
loopne
jp
push
dec
fs
jge
cmpsl
std
outsl
jp
jge
ret
or
outsl
stos
pop
rcll
xor
mov
pop
stc
mov
push
dec
jnp
jnp
jns
mov
loopne
cmp
mov
movsb
sub
lahf
push
sbb
mov
arpl
cld
sub
mov
fwait
xor
inc
jno
sbb
and
imul
xchg
sub
fmull
into
leave
fnstsw
dec
push
ss
call
and
cmp
mov
add
mov
inc
lret
stos
lods
ljmp
pushf
pop
es
xor
shrb
dec
mov
jae
pop
pop
xor
fwait
movsl
jp
aad
daa
push
push
and
add
insl
out
add
daa
ret
insb
or
cli
outsb
mov
dec
add
dec
and
add
sub
dec
mov
and
bound
mov
test
sub
and
outsb
push
jae
ret
das
ljmp
add
stos
sarb
add
push
sub
test
inc
test
sub
add
push
sbbb
sbb
aas
subl
xchg
decl
sbb
push
jbe
mov
jne
lea
or
inc
mov
imul
xchg
sub
paddusw
add
xchg
insb
mov
pop
shr
shl
leave
mov
rcl
sarb
mov
xchg
push
fidivrl
repnz
jge
mov
pop
ret
les
xor
push
repnz
jg
cmc
ljmp
adc
mov
pop
cli
pop
fwait
xchg
dec
bound
out
push
mov
insl
dec
arpl
roll
jae
testl
fstpl
insl
mov
dec
addr16
cmp
jns
dec
mov
cli
inc
or
ljmp
subl
push
int3
xchg
adc
repz
imul
arpl
das
cmpsl
cli
sti
push
dec
insb
stos
imul
mov
cmp
sbb
cmp
jl
jecxz
loope
mov
clc
ja
lcall
call
sbb
adcb
fmulp
cltd
lcall
mov
add
mov
push
jecxz
cmp
add
dec
jnp
cmpsl
add
cmp
jns
sbb
jmp
faddl
cmp
push
inc
add
dec
sbb
daa
ja
or
aad
leave
jg
sub
mov
jle
sbb
lods
dec
push
dec
aaa
mov
inc
or
sbb
ja
mov
in
dec
jg
outsl
call
mov
inc
pop
orl
mov
mov
stos
and
xor
movw
add
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
hlt
repnz
pop
fbstp
pop
mov
stos
cmpsl
mov
mov
pop
ret
arpl
or
mov
les
lock
lock
or
jns
cs
filds
cmp
movsl
mov
imul
fdivl
test
xchg
adcl
cmp
cmp
xor
dec
fxch
xchg
add
lods
insb
add
loopne
iret
and
pop
cmp
daa
cli
fldt
stos
xchg
xchg
test
fdivr
into
fldenv
dec
into
xchg
adc
outsl
dec
push
cmp
mov
bound
cmp
pusha
push
adc
nop
test
pop
push
sub
sbb
jge
cld
pop
out
loope
mov
test
and
insl
push
dec
outsl
mov
mov
xor
cmpsb
lahf
outsl
aas
neg
cs
sub
xchg
xchg
cld
push
rcrb
bound
jne
cs
sbb
es
cltd
pop
or
add
cmp
js
clc
popa
xor
repz
pusha
adc
insb
mov
int
pop
cmc
vpinsrw
push
sub
out
sbb
add
clc
out
out
push
push
repz
and
bound
cwtl
out
push
bswap
cmp
inc
ja
inc
mov
mov
mov
sub
adc
sub
or
push
pop
shll
mov
dec
cmp
sbb
push
test
mov
mov
and
add
push
testl
push
push
call
and
inc
dec
out
cmpsb
test
inc
testb
xor
fistpll
clc
jns
icebp
pop
test
js
dec
mov
mov
pop
out
add
xor
mov
mov
sbb
jae
add
push
outsl
mov
cwtl
add
jb
push
fisubrs
fidivrs
xchg
pop
incb
or
outsb
xor
mov
sbb
xchg
ja
inc
aad
mov
and
popf
fildll
ret
sbb
sbb
int
adc
repnz
xlat
jno
pop
lahf
mov
cmp
dec
out
add
inc
add
sbb
divl
into
repnz
imul
mov
ror
inc
mov
loop
jb
clc
rclb
in
leave
loope
push
mov
cmp
or
adc
enter
cld
ret
push
push
adc
mov
aam
inc
push
push
stc
mov
out
aaa
icebp
sub
add
cmp
dec
stos
in
stc
mov
lahf
push
stos
inc
lret
repz
mov
jae
stos
hlt
movsl
xchg
cmp
cmp
je
je
add
jo
dec
or
sbb
test
inc
dec
mov
lret
addr16
pop
daa
sub
mov
and
rolb
xchg
sub
sbb
pop
and
xor
mov
xchg
add
outsb
fsubs
mov
mov
xchg
stos
std
mov
sub
mov
out
pop
bnd
push
sub
int
pop
xor
xor
clc
fcos
int
scas
adc
mov
insb
mov
fs
les
push
add
push
sysret
mov
out
imul
or
imul
cmc
fwait
adc
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
jl
js
adc
adc
mov
mov
inc
inc
xor
xor
ds
cmc
popa
push
jl
xor
push
rcr
inc
and
ja
pop
xor
sahf
shrl
sbb
movl
mov
sbb
xor
pop
addl
cmpsl
hlt
mov
arpl
mov
loope
imul
add
mov
xchg
outsb
imul
add
jmp
cwtl
add
or
and
jns
cmp
fidivl
mov
movsb
xor
and
add
or
in
dec
std
inc
cld
push
popf
test
and
jmp
jb
aad
xchg
sti
mov
mov
pop
adc
in
test
xchg
out
bound
mov
test
mov
xor
fcoms
push
mov
sub
jb
xor
stos
leave
fcompl
jmp
mov
mov
imul
xor
mov
gs
in
xchg
rcll
notl
fcomi
mov
sarl
cmp
test
pop
sbb
aaa
in
jne
jecxz
push
and
mov
mov
imul
push
loope
xchg
leave
dec
adc
or
or
rcrb
aad
mov
inc
popa
stc
jnp
iret
test
cmpl
in
sbb
mov
dec
xor
stc
mov
iret
mov
shl
outsb
mov
jae
mov
cwtl
test
movsl
mov
jns
xor
mov
adc
dec
inc
jp
push
add
nop
sbb
loopne
fs
and
mov
pop
mov
push
pop
pop
pop
fbstp
out
cs
mov
inc
lods
xchg
push
dec
bnd
stos
add
pop
sbb
js
xlat
lds
repnz
xor
imul
in
aaa
jp
ljmp
daa
xchg
icebp
fs
pushf
jecxz
pop
sbb
icebp
aaa
dec
nop
pop
inc
call
sti
adc
repz
adc
xchg
jmp
push
pop
aaa
push
shlb
lahf
in
enter
rcl
fcmove
and
std
daa
mov
stc
in
pop
jg
pop
lea
in
push
lea
aam
into
ret
push
mov
push
movsl
add
add
cwtl
pop
mov
pop
jmp
sbb
pusha
into
add
xchg
xchg
test
enter
fs
pusha
inc
in
push
push
or
loope
daa
arpl
lods
enter
repz
es
repnz
and
xchg
cmpsl
pushf
cltd
jns
mov
and
stos
test
psubsw
sub
xchg
movsb
adc
jecxz
movl
dec
dec
jmp
sbbb
add
aaa
cmp
cwtl
sahf
test
std
cmpsb
xor
cmpsl
aad
jbe
stos
lahf
pop
out
in
cmp
dec
or
mov
ds
mov
cmpsb
xchg
loopne
outsl
bound
mov
push
xchg
fs
aaa
ret
jg
icebp
mov
xor
sbb
in
xor
mov
jp
adc
jae
gs
fsubr
sbb
jb
shrb
inc
mov
xchg
mov
outsb
add
je
ljmp
arpl
enter
xor
adc
clc
mov
push
cmp
xchg
and
mov
push
pop
arpl
xor
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
or
adc
adc
sub
aas
push
push
das
fadds
push
jno
ffree
iret
mov
sbb
pop
inc
lds
mov
sbb
mov
mov
incl
lods
inc
orps
mov
pcmpgtd
data16
add
sbb
inc
jge
jmp
repnz
or
shl
test
out
xchg
outsl
cmp
sub
fisubrs
push
out
push
cld
pop
out
pop
sahf
fldl
leave
jg
xchg
cmpsl
cmp
mov
in
xchg
in
inc
dec
add
and
imul
mov
mov
jns
inc
inc
inc
cld
push
jo
pop
and
pop
inc
shl
push
push
adc
jo
pop
jge
mov
out
sub
test
dec
adc
xor
hlt
cmp
clc
or
or
add
sub
push
pop
mov
std
stos
pop
xor
push
pusha
ljmp
cmc
push
pop
loopne
pushf
push
dec
sub
andb
mov
xlat
adc
insl
sub
jmp
lods
stos
jecxz
int
mov
psubsb
jne
push
cmp
add
or
cmc
test
loop
rorb
add
inc
sbb
xor
imul
lods
int
pop
xor
adcb
lds
sub
shll
out
jecxz
adc
jae
icebp
push
pop
sarb
or
xchg
fadds
push
mov
shrb
outsl
out
xlat
inc
dec
mov
dec
test
in
sarl
loope
fistpll
lret
pop
and
jno,pn
pusha
mov
mov
mov
sub
sub
mov
aad
pop
inc
cmp
out
ja
inc
xor
dec
scas
mov
push
cmpsb
dec
rcrb
mull
sub
fdivl
enter
stc
pop
icebp
sbb
mov
int
movsb
cld
das
cmp
lret
xchg
bound
pop
mov
lods
icebp
or
inc
xchg
sbb
and
mov
cmp
mov
inc
sbb
insb
outsb
cmp
add
push
cmp
test
fs
nop
cmp
mov
inc
in
inc
sub
fsub
dec
jnp
dec
mov
repnz
add
sarl
cmp
int3
into
sub
push
roll
clc
xor
add
adc
pop
arpl
cwtl
xor
push
inc
push
mull
aad
in
ja
pusha
dec
cmpsl
add
sub
rcll
dec
fisubl
xchg
fsubrs
sub
jle
xor
repz
sbb
ja
fcoml
push
push
int3
mov
and
sub
movsb
or
mov
cmpsl
sbb
push
int3
xor
adc
sub
aam
inc
gs
ret
mov
dec
hlt
bound
xchg
xchg
movsb
dec
add
mov
lea
or
scas
insb
into
sbb
push
fcmovbe
push
sub
div
xchg
sbb
outsb
xchg
int3
aaa
pop
and
push
popf
jle
pop
sub
pop
inc
xchg
add
inc
dec
fidivrl
fmull
addb
test
mov
pop
stos
shlb
sbb
and
xchg
dec
jle
mov
adc
paddq
ss
popf
test
pop
inc
js
stos
scas
cmpsb
or
cmp
sub
sarb
jo
in
add
pop
add
sub
or
mov
jle
aaa
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
mov
adc
adc
sub
add
mov
jp
cmp
add
cmp
push
adc
push
lahf
and
test
data16
jg
add
or
call
scas
sbb
mov
xor
leave
fbld
scas
xchg
xchg
shlb
dec
dec
xor
in
nop
xchg
sub
lcall
rcl
xor
pop
shlb
jne
sub
leave
aaa
idiv
jmp
stos
fcoms
sub
gs
inc
xchg
pop
mov
into
stc
mov
xor
adc
mov
outsb
test
repnz
cmpsl
inc
lods
xor
jl
jg
lahf
fs
test
mov
xlat
xchg
dec
pop
mov
decb
sub
ja
sub
addr16
adc
fcomps
jae
pop
mov
xor
mov
ss
scas
jp
inc
mov
push
outsl
push
repz
xchg
mov
xor
inc
lcall
rorb
fsubl
fisttps
gs
in
mov
adc
popw
ret
cltd
cmp
adc
test
jle
outsl
mov
ja
fmuls
je
dec
jne
dec
pop
loope
lahf
daa
pop
dec
lcall
xchg
shr
adc
xchg
lods
mov
inc
out
xor
aas
push
xchg
rcrl
cmp
sahf
out
sub
mov
test
iret
xchg
inc
in
dec
aas
stos
jb
mov
or
pop
xchg
stos
add
cmp
shll
iret
mov
and
cmp
mov
and
mov
push
add
xor
fstpl
in
cmp
fldt
mov
jb
push
push
enter
xchg
xor
push
divb
f2xm1
mov
push
mov
xchg
addr16
cmp
xchg
test
scas
inc
lods
sahf
and
fnstcw
pop
sub
mov
cmc
jmp
jb
popf
mov
jnp
dec
xchg
inc
mov
imul
psubb
dec
lock
rorl
insb
in
dec
mov
cmp
push
stc
xor
ficompl
imul
sub
jne
jb
and
or
enter
sub
mov
jg
icebp
into
pop
mov
add
inc
lret
adc
iret
dec
or
clc
lret
cmpsl
mov
mov
aam
int
push
pop
fisttps
jnp
xor
test
out
dec
jl
out
iret
pop
aas
mov
mov
test
fxch
or
and
lea
add
jmp
add
pop
dec
xchg
or
adc
mov
scas
cmp
push
jle
or
shll
dec
in
inc
test
icebp
addr16
test
inc
rorl
pop
out
orl
stos
and
imul
mov
sub
and
mov
push
inc
mov
adc
cmp
fcmovnb
fs
mov
adc
sub
mov
shrb
mov
out
out
adc
neg
and
call
mov
ret
xchg
add
aad
mov
incl
negl
xchg
pop
pop
out
pop
sarl
arpl
add
stos
ljmp
int3
push
adc
sbb
xchg
add
or
aad
sarb
std
in
imul
popf
popaw
mov
mov
pushf
fstps
iret
flds
mov
bswap
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
es
js
sub
adc
ret
fiaddl
sbb
mov
cmp
push
loopne
dec
mov
push
cmpsl
xchg
push
movl
pop
mov
hlt
xor
jle
in
and
dec
mov
xchg
push
mov
inc
in
pop
push
cs
js
cmp
movsb
ja
pop
push
jo
int
sub
adc
xchg
nop
add
movsl
adc
add
mov
mov
out
mov
dec
stos
or
inc
test
data16
mov
push
xchg
jle
shl
ficompl
mov
push
fists
or
or
int3
sbb
fsubrp
cli
or
in
pushf
mov
call
jns
jo
dec
add
mov
push
sbb
out
jmp
ss
xchg
ja
pop
jb
jne
adc
xchg
or
sbb
fs
mov
mov
or
mov
or
mov
add
rorb
adc
outsb
dec
andl
popf
lods
cli
jae
das
ljmp
rolb
stos
cli
ljmp
hlt
pop
hlt
and
or
enter
aad
mov
dec
cli
push
pop
push
addb
add
inc
inc
add
xchg
not
mov
mov
dec
mov
dec
mov
sbb
in
add
pop
xchg
clc
mov
cli
sbb
dec
mov
repnz
inc
push
cmp
push
test
sbb
movsb
inc
aad
roll
xor
mov
add
or
pop
stc
ds
sbb
repz
pop
fcmovnb
rorl
dec
jne
loope
in
sbb
push
js
into
outsl
cmc
jle
inc
pop
dec
in
xchg
add
cmp
dec
out
sub
push
pop
sbb
pusha
or
mov
add
dec
in
dec
sub
hlt
jl
das
icebp
and
mov
push
jns
pushaw
je
call
mov
fimull
fwait
stc
mov
popf
popf
fwait
or
push
push
mov
jge
jg
xchg
in
stc
sbb
xlat
lret
cwtl
fdiv
mov
add
adc
cwtl
or
xor
inc
and
int
loop
loope
and
fcompl
cmpsl
sub
addr16
adc
jbe
int
aam
push
int3
push
adc
arpl
cs
sub
pop
addr16
mov
lock
test
mov
push
fldenv
mov
cmp
xchg
push
xor
mov
inc
popf
bound
pushf
inc
neg
jl
mov
mov
inc
ret
mov
les
dec
test
out
popf
test
add
popa
lea
in
inc
out
add
inc
je
and
cli
add
shl
jo
rcrb
into
rorb
rcr
sub
mov
cltd
jnp
pop
fcomip
sbb
dec
cmp
sbb
cmpsl
arpl
sti
sub
xor
mov
mov
add
or
shl
mov
or
xlat
jl
and
mov
scas
outsb
cmp
imulb
sbb
loopne
xchg
inc
or
push
mov
das
push
lahf
fidivrs
pop
xchg
push
cmpsl
sub
pop
rclb
pusha
xor
cmpsb
xlat
fs
leave
sub
aam
ja,pn
aaa
outsb
fbstp
push
cmp
mov
repnz
lods
cmp
sub
pop
adc
add
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
test
in
imul
inc
push
xor
das
notb
std
lahf
scas
xchg
jmp
mov
lock
out
popa
xchg
jmp
or
xchg
mov
adc
ljmp
xchg
jno
into
incb
dec
data16
in
xchg
imul
xchg
test
aaa
cltd
mov
lahf
or
lret
xor
jno
jnp
repnz
and
fdivl
shlb
add
lcall
push
jb
dec
test
cmp
lahf
mov
loopne
sub
jae
aaa
mov
xchg
jmp
xchg
add
cmp
xchg
or
ret
call
jo
gs
testb
mov
aad
mov
mov
pop
iret
and
jmp
jg
fmull
pop
fptan
and
jl
stos
and
add
lret
aaa
outsl
in
mov
into
mov
pop
lret
test
andl
fidivrs
movsl
out
add
fs
jb
mov
ljmp
out
push
jg
repnz
jnp
pop
int
stc
ret
jae
test
xor
out
jge
xor
jns
or
add
mov
cmpsl
lea
inc
lret
cmpsl
jns
shll
mov
ljmp
sbb
adcl
inc
stos
jbe
jmp
jmp
mov
mov
ret
jmp
cmpsb
dec
add
push
aas
nop
sbb
mov
call
outsl
xor
movsb
mov
xchg
shrb
arpl
dec
push
repz
pusha
inc
out
repz
in
loope
popa
xchg
adc
push
fst
push
cmp
push
fistps
sbb
inc
jne
xor
pop
roll
sbb
and
rcrb
dec
ds
cmp
cli
adc
mov
push
ss
movsl
adc
into
cwtl
xor
jnp
pop
mov
jg
dec
pop
jo
adc
xor
std
rcrb
js
adc
gs
jge
dec
inc
jmp
xchg
ljmp
setge
mov
or
xchg
scas
es
sbb
or
test
push
arpl
js
push
pop
cltd
mov
push
je
mov
push
push
fstpt
nop
pop
loop
push
les
daa
cld
lcall
jnp
sub
push
out
lahf
mov
mov
mov
das
repnz
dec
pop
out
aad
sbbl
shrb
sti
xchg
adc
jns
insl
shr
xchg
sarb
das
mov
sahf
imul
xchg
fiaddl
dec
sbb
popa
repz
pusha
add
fs
push
cmp
stos
push
inc
inc
dec
popf
mov
test
dec
jae
movsl
mov
push
popf
cmp
add
jp
sti
and
leave
imul
movsl
icebp
out
xchg
incl
inc
loope
sbb
pop
xor
aas
mov
sbb
sub
movb
arpl
jl
fsubrl
jae
mov
icebp
dec
adc
out
cmp
and
test
mov
and
or
std
cs
test
jns
dec
mov
bound
lds
lods
dec
dec
push
loope
xor
mov
fsub
fildl
pop
insb
leave
cli
and
jp
add
mov
mov
mov
jmp
or
mov
adc
bound
outsl
sbb
adc
xor
cmp
in
das
shll
pushf
mov
or
adc
push
fsubs
popa
shrb
xor
sti
cmpsb
in
push
pop
nop
mov
adc
ret
das
bound
fiadds
lcall
inc
repz
enter
imul
lea
mov
mov
push
inc
sbb
cmpsl
decb
mov
lret
daa
adc
loope
jbe
aam
insl
loope
out
sbb
adc
push
jae
movsl
xorb
xchg
jge
add
ja
add
data16
jmp
pop
xor
inc
fstp
and
or
or
sbb
insb
sub
adc
lock
dec
and
lcall
scas
pop
jne
lcall
jo
fcompl
push
outsb
in
sub
aaa
adc
stos
shll
and
dec
adc
sti
cmp
aaa
push
xchg
cmp
fld
lock
cld
adc
inc
lock
xor
dec
jmp
adc
jmp
push
pusha
fldenv
push
out
outsb
mov
aas
imul
inc
aam
and
insl
in
cs
and
aam
dec
push
adc
cs
leave
pushaw
add
xchg
jb
push
push
in
leave
push
lret
or
movsl
push
push
jno
aad
sbb
arpl
push
loope
push
push
or
sub
aas
test
outsl
call
mov
mov
cltd
sub
das
popf
pop
shll
jnp
xchg
push
xor
popf
sbb
pop
dec
jb
inc
test
cmp
movsb
pop
std
fsubl
movsl
pushf
mov
insl
jae
adc
push
xchg
nop
mov
stc
and
pop
xlat
cmpsl
xchg
es
faddl
fldl
int
lods
imul
std
enter
inc
les
outsb
pop
mulb
repnz
lahf
mov
adc
insl
loope
insb
cmpsl
dec
loop
adc
rcr
add
mov
cmp
sbb
push
std
mov
add
hlt
cmpsb
ja
add
mull
xchg
cwtl
idivb
addb
xor
aaa
or
lret
loopne
popa
mov
ret
aam
dec
xchg
int3
sub
inc
and
xchg
mov
adc
call
cmp
sbb
divl
scas
out
loope
popa
mov
sub
aad
and
cli
xchg
push
jne
mov
push
jae
jno
adc
pop
nop
fistpl
dec
dec
pop
adc
mov
fwait
xor
mov
sub
jle
cmp
imul
jp
push
aad
rcr
cmpsl
jmp
sbb
cli
mov
cmp
ret
aaa
pop
sarl
jb
push
mov
icebp
je
xor
mov
lcall
xor
inc
fdivl
push
inc
adc
jns
pop
mov
jp
stos
inc
ss
int3
ss
popa
hlt
or
sub
pop
mov
or
andl
icebp
repnz
xchg
pusha
push
in
lods
mov
mov
or
push
and
mov
jecxz
in
add
call
dec
outsb
xchg
mov
fcmovnu
mov
mov
nop
or
xchg
sbb
ret
sub
pusha
mov
js
daa
stc
enter
repnz
mov
iret
mov
shlb
decl
lock
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
mov
jle
adc
adc
fs
sti
jle
xlat
xchg
ret
shrb
aaa
xor
jl
xlat
hlt
into
outsb
movsb
adc
mov
cmc
or
mov
movd
loopne
pushf
pushf
pushl
fsubl
push
mov
xor
mov
adc
aad
inc
mov
mov
sub
jg
push
lock
pop
pop
das
or
xchg
jno
and
or
stos
pop
cld
jle
push
es
lret
jg
shrb
cmp
inc
addb
pop
pop
push
push
push
push
and
mov
shr
mov
aas
mov
cmpsl
mov
jno
adc
fcmovne
int3
js
push
cwtl
dec
and
mov
jns
xor
dec
pop
pop
test
mov
dec
inc
dec
cmp
push
cmp
or
cmp
or
cmp
fbstp
xchg
push
dec
stos
xchg
fistpll
jns
ja
dec
inc
data16
or
aaa
cmp
nop
fs
jbe
xlat
mov
into
in
aaa
push
fs
cmc
cwtl
cltd
adc
mov
push
or
call
fucomi
cmp
aas
roll
sub
je
lret
scas
cmp
cmc
insb
mov
push
add
imul
xchg
cld
cbtw
jecxz
stos
lcall
ret
loopne
mov
sarb
xchg
inc
xchg
mov
data16
mov
jbe
mov
jg
sbb
outsb
scas
sbb
xor
mov
dec
inc
xchg
mov
aaa
push
dec
jnp
or
jns
adc
rcl
data16
repz
divl
push
mov
xor
xor
pop
movsb
cmp
push
shll
adc
clc
xor
jbe
shl
pop
mov
pop
shll
int3
adc
mov
mov
dec
loope
push
push
lret
das
cmpsl
mov
ret
pop
int
sub
mov
test
sub
push
lahf
pop
xor
cwtl
int3
mov
cmp
scas
dec
lea
andb
and
xor
sub
or
sbbb
ss
cld
lahf
loope
adc
and
rcl
shr
push
shrb
adc
icebp
outsb
test
popf
in
fcmovb
cmp
push
andb
int
xor
cmp
ficomps
cmp
jnp
fcmovnbe
sub
je
ficompl
sbbb
mov
adc
inc
cmp
imul
cwtl
aaa
jp
pop
rcrl
sbbb
dec
cmp
clc
and
test
push
dec
xchg
sahf
shlb
pusha
movsl
inc
mov
in
push
into
std
lds
jl
mov
faddl
jnp
push
js
nop
testb
adc
ret
inc
gs
fdiv
mov
divl
andb
mov
mov
sub
aam
loop
and
fdivs
sbbl
sub
ljmp
mov
push
push
mov
inc
pop
push
loop
pop
gs
cmpsl
rol
hlt
iret
cltd
jp
loope
and
rcll
rorb
cmp
lret
lcall
fwait
iret
popf
rcll
push
xchg
movsb
pushf
mov
aad
ds
in
negl
push
out
xlat
adc
cmp
int3
fcoms
dec
lea
and
and
push
cli
cmpsb
xorb
pop
mov
cltd
push
xchg
sub
lods
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
jns
fldl
dec
mov
mov
test
push
mov
enter
stc
add
shll
loope
mov
push
and
loopne
cld
mov
jg
ss
lret
inc
gs
xor
lods
push
jo
loope
nop
sbb
rorb
iret
push
adc
out
jecxz
test
inc
mov
stos
shlb
mov
data16
mov
adc
call
ja
pushw
dec
cmp
adc
or
test
and
inc
push
leave
sub
add
andl
pop
inc
push
xchg
mov
or
adc
insl
cmp
mov
sub
imul
out
les
rol
inc
cmp
sub
or
std
loopne
cmpsb
push
test
cmp
mov
lret
push
rcrl
mov
jno
jo
dec
movsb
xchg
jno
sbb
stos
das
mov
push
pop
xchg
lods
bound
ss
shlb
and
sub
fisttps
jecxz
shll
pushf
jp
mov
outsl
xchg
or
xor
mov
int3
cld
lods
cmp
aas
stos
jne
loop
push
xchg
xor
sub
push
cmc
arpl
mov
push
insl
fs
pusha
test
outsl
test
test
mov
push
call
cmc
data16
xor
push
jge
pop
jno
inc
and
in
push
xchg
cmp
data16
imul
inc
inc
or
es
or
jns
or
lock
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
