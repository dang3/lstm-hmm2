push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
sbb
sbb
adc
sbb
int3
mov
rorb
cs
adc
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
hlt
adc
mov
insb
xchg
cmp
add
inc
add
fistpll
pusha
shll
daa
in
scas
ret
xchg
in
je
shrl
xchg
aaa
adc
push
jecxz
mov
int3
stos
ficoms
jp
jnp
sub
test
loopne
inc
hlt
sub
and
and
cmp
adc
das
loop
arpl
pushf
ljmp
jo
pop
sbb
test
sbb
stos
jmp
lods
cmp
xchg
lea
xor
mov
xor
scas
fmull
loope
mov
in
scas
and
jne
div
inc
sbb
mov
and
sub
xchg
xor
sub
and
cmp
push
rcl
jle
cmp
psubusw
fidivrl
fists
mov
lea
mov
sbb
xchg
jnp
mov
push
cmp
movsl
insb
or
jnp
imul
arpl
popf
sub
sub
mov
fsts
or
sahf
add
or
add
mov
stc
xor
mov
cld
inc
ljmp
cld
adcl
jno
jg
lock
aaa
in
inc
cmp
push
sbb
adc
mov
mov
sbb
mull
lock
dec
pop
hlt
pushf
push
out
rolb
dec
pop
push
out
fpatan
mov
add
ffreep
pop
or
gs
insl
push
inc
xchg
cmp
jg
sahf
mov
cwtl
mov
sbb
orb
scas
leave
jns
int3
aad
jbe
sub
ret
enter
lahf
or
mov
or
fnsave
cmpl
push
pop
and
lea
push
adc
cmpb
sbb
mov
push
lret
mov
jp
subl
inc
mov
mov
out
sahf
xchg
loope
adc
mov
into
xor
pop
lds
adc
sub
lret
out
lahf
fistpl
adc
xchg
cmp
mov
adc
pop
out
insl
cs
jg
mov
outsb
cwtl
mov
call
inc
xchg
mov
fistps
pop
xchg
sub
test
call
lret
sbb
push
cmp
push
repz
inc
adc
xchg
out
or
addr16
adc
push
or
shrl
dec
sub
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
mov
repnz
rcrb
cmp
popa
je
pop
and
pop
or
pop
cltd
psrlw
xor
or
mov
les
pop
jae
xchg
push
add
cmp
imul
jbe
icebp
cmpsb
fidivrl
mov
dec
add
cmc
lds
mov
adc
lock
lret
out
mov
dec
js
outsl
and
and
pusha
push
mov
mov
lret
mov
jbe
dec
sub
fwait
cltd
pop
fiadds
cmc
nop
sbb
inc
xchg
call
lods
inc
mov
mov
out
test
and
enter
lret
push
mov
dec
mov
xchg
stos
movsl
cli
sahf
mov
adc
pop
adc
fsubrl
imul
aad
jnp
sarb
cmp
out
std
and
or
test
jbe
aaa
and
add
jecxz
and
hlt
jae
sbb
xchg
xchg
cwtl
test
lds
sbb
push
adc
js
add
mov
mov
pop
dec
xlat
sub
cwtl
out
mov
test
mov
mov
aaa
add
xor
lcall
mov
roll
subl
push
mov
push
ja
add
ret
inc
xchg
pop
test
adc
jo
fidivl
jl
xor
sti
fsubs
pop
mov
stos
das
mov
stos
repz
into
lock
xchg
mov
mov
jl
xor
sub
and
imul
imul
jge
and
jge
imul
imul
data16
ds
jns
cmp
add
call
int
pop
mov
inc
nop
lods
neg
cmp
fldcw
push
and
pop
enter
cmp
aaa
xor
jo
adc
mov
dec
sub
mov
xchg
mov
mov
fnsave
add
jbe
add
push
jmp
outsb
mov
xchg
inc
ret
and
ss
add
xor
mov
pop
cwtl
repnz
repz
jnp
xor
mov
aaa
sub
lods
mov
out
mov
cmp
dec
mov
inc
subb
mov
stos
pop
cli
ret
ds
push
and
incl
mov
rorl
jle
faddp
adc
adc
sub
mov
mov
push
inc
or
in
sarl
xor
mov
js
xchg
lea
xor
cmp
shll
add
xchg
add
cmp
sbb
jbe
mov
xorb
add
mov
inc
cmp
xor
out
rclb
jno
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
jbe
push
mov
sub
push
pop
shrb
push
jae
xchg
jmp
call
mov
and
mov
pop
pop
pop
mov
fmul
adc
mov
push
xchg
and
les
and
pop
arpl
push
in
jae
into
into
stos
aas
mov
add
lret
es
iret
scas
push
jle,pt
lock
push
add
rorb
lods
mov
xor
addb
insb
out
jnp
jb
inc
gs
jmp
xchg
test
test
in
shrl
sti
cwtl
mov
mulb
and
insl
gs
pop
mov
test
mov
pop
insb
pop
xchg
cmp
add
stos
pop
or
jp
loop
out
pop
daa
mov
lcall
jb
adc
popf
lea
mov
test
xlat
pushf
or
mov
mov
mul
jge
pop
sbb
mov
pop
adc
roll
inc
inc
dec
jnp
aad
lcall
sub
aaa
dec
loopne
inc
mov
mov
aaa
fidivs
sahf
push
adc
add
aas
out
mov
xchg
loopne
pop
cwtl
fbstp
int3
stos
jge
sbb
mov
pop
fnsetpm(287
adc
jle
fsubrl
cli
cmp
out
sub
jbe
ss
push
mov
lahf
call
repnz
mov
and
sahf
lcall
fistl
xor
jecxz
sbb
movb
lods
out
mov
sub
inc
mov
popl
jbe
lock
out
add
mov
jecxz
sbb
add
dec
ret
loope
pop
xor
xchg
jae
add
mov
mov
stos
push
daa
enter
adc
popf
jnp
cmp
jecxz
ficompl
outsl
into
and
pop
movsl
dec
enter
mov
inc
mov
sbb
add
outsl
je
adc
arpl
add
js
mov
mov
xlat
sbb
subb
mov
mov
add
mov
ret
je
mov
inc
hlt
mov
test
inc
cltd
jecxz
fpatan
imul
test
jae
mov
pop
cmp
sub
aad
xor
out
ljmp
movsb
dec
fisubl
loope
cwtl
add
fisttpll
outsl
push
mov
inc
repz
add
std
rorb
fnsave
in
jo
push
shr
mov
repnz
or
push
sub
repnz
jbe
push
into
sub
or
pushf
xchg
int
dec
jp
out
mov
add
ja
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
jno
mov
and
sbb
mov
hlt
sbb
ds
pop
xor
out
xchg
cmp
xchg
mov
mov
adc
rolb
cmc
jp
push
dec
push
outsl
cmp
popa
dec
sub
adc
or
mov
jae
cmpsb
push
jae
pop
arpl
in
sub
sbb
mov
sbb
jmp
ja
testl
add
movsl
or
and
mov
sub
cmp
outsl
pop
dec
lret
cmpl
sub
aad
leave
pop
test
cmp
push
ret
mov
fsubs
add
jmp
lods
mov
mov
ret
mov
das
jmp
js
test
mov
aam
insl
cmp
call
out
cwtl
aas
fwait
bound
or
daa
jecxz
cmp
jle
in
xor
and
push
mov
data16
and
inc
ds
cmpsl
ljmp
rolb
inc
in
cmpsb
sub
mov
mov
addb
fs
lcall
and
or
and
repnz
in
adc
mov
daa
mov
mov
jge
jecxz
repnz
lock
ds
xor
roll
xchg
iret
or
outsl
push
cwtl
fucomip
fadds
repnz
sbb
adc
pushf
call
enter
aad
pop
rol
scas
dec
mov
add
fmuls
je
mov
xor
lea
push
xchg
xchg
jp
roll
movsl
sbb
cmpsl
aaa
lea
lods
xchg
pop
xlat
sub
negl
mov
adc
jp
nop
xor
adc
stc
std
neg
rolb
mov
into
jl
aas
and
jbe
into
or
popf
mov
jbe
fwait
mov
xor
push
push
pop
cmpsb
sti
and
cltd
mov
adc
jno
jg
fcoms
icebp
mov
dec
add
sub
xchg
xor
out
mov
add
ja
jae
and
ret
fbstp
orb
out
and
mov
adc
scas
lahf
mov
push
data16
outsl
jp
cld
push
cmp
xchg
fistpll
adc
pop
or
and
or
push
mov
add
lods
mov
ss
or
test
out
cmc
rcl
mov
adc
cmpsb
stc
jecxz
pop
in
mov
or
push
mov
sub
sbb
inc
mov
iret
pop
xchg
mov
mov
dec
inc
pop
add
loope
dec
cmpsl
or
js
and
jno
mov
and
call
add
inc
icebp
xor
adc
in
repnz
mov
stos
addl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
outsl
call
sbb
and
sbb
sbb
inc
sub
int3
ljmp
xor
cmp
mov
or
repnz
aaa
jbe
shlb
mov
fwait
in
bound
stos
lods
popa
sbb
jns
lods
imul
dec
mov
les
divb
adc
push
mov
mov
jl
mov
jnp
fwait
cmpb
popf
pop
flds
addr16
in
in
loope
sub
dec
mov
loope
int3
add
xchg
adc
jo
stos
push
inc
xor
ret
das
lret
ret
cmp
push
xor
jecxz
xor
int
sub
mov
orb
and
js
jl
test
cmp
sbb
xchg
clc
xlat
mov
mov
bound
test
sbb
cli
push
arpl
sub
es
pop
mov
lock
divl
xlat
mov
jmp
pop
mov
sbb
arpl
jle
sbb
or
call
sbb
pop
inc
ret
mov
test
mov
inc
les
dec
ja
xchg
push
inc
lret
push
or
adc
add
into
sub
and
pop
cld
push
xor
mov
mov
xor
mov
add
ss
addb
add
and
and
pop
xor
lahf
xor
inc
in
inc
lret
jno
mull
hlt
popl
aad
popa
dec
leave
fsubrs
xchg
incb
sub
adc
clc
inc
jo
fldenv
dec
mov
inc
cwtl
xor
ror
xchg
push
xchg
jbe
iret
je
mov
pusha
and
popf
ret
lods
mov
mull
in
std
xlat
outsb
jne
push
loop
out
test
fldcw
cmpsb
sti
in
out
jmp
adc
xor
sbb
mov
mov
loop
pop
iret
mov
xchg
push
cmp
jecxz
sub
adc
jnp
adc
push
mov
mov
movsl
rcrl
addr16
sbb
popf
dec
out
jge
inc
mov
or
hlt
fisubl
jg
fcompl
movsb
into
daa
cmp
xor
pop
fs
pop
insb
bnd
aam
clc
adcl
mov
xlat
xorb
roll
and
popf
adc
push
test
xor
jb
mov
fisttps
pop
addr16
mov
int3
cltd
xlat
lea
xor
jne
pop
pop
shr
in
fadds
xor
stos
sbbl
and
fdivp
or
or
push
pusha
mov
pop
sysexit
stos
mov
loop
out
sti
inc
dec
ret
in
sub
mov
xor
loopne
add
aas
pushf
xor
addl
add
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
call
sbb
and
sbb
and
stc
test
jb
aad
dec
mov
sub
lret
xor
pop
fdivrs
or
mov
cmp
insl
in
xchg
ljmp
or
jl
and
jg
xchg
mov
insl
mov
pop
mov
push
and
add
dec
xor
add
call
push
ja
gs
xor
adc
test
pop
sub
lea
je
mov
testl
pop
daa
push
ret
cmpsl
pop
lods
xchg
rorl
outsl
lahf
cmp
mul
das
jno
cmp
jbe
stc
sub
sbb
mov
imul
out
cld
jp
mov
rcll
dec
cmp
out
andb
jb
push
push
cmc
test
add
jae
adc
jnp
mov
mov
orb
aam
leave
sbb
lods
pop
push
dec
add
or
xor
jno
push
cmc
sbb
decb
or
or
inc
pop
inc
push
xorl
mov
bound
inc
jbe
pop
mov
out
pushf
pop
imul
cmc
aaa
push
or
xchg
nop
in
jb
jle
ljmp
fwait
push
or
repnz
jae
mov
push
sbb
outsb
sbb
mov
cli
inc
les
icebp
sub
push
adc
repz
push
cmp
imul
fwait
out
inc
sbb
sti
pop
jge
push
dec
sub
xchg
push
xor
pop
rorl
in
mov
xor
sbb
dec
pushf
adc
jmp
sbb
mov
xor
add
lahf
int3
push
sbb
mov
sbb
mov
cs
pop
scas
cmpsl
mov
or
cmp
sahf
repnz
sbb
and
fstp
xchg
jns
push
cmp
imul
out
push
add
sub
ss
enter
mov
mov
insb
and
cs
cld
out
test
stc
cmp
lea
push
mov
add
jmp
call
scas
xchg
adc
pop
lods
cwtl
xchg
adc
mov
pusha
enter
iret
dec
into
stos
addr16
cltd
mov
movsl
mov
sub
adc
jns
shl
jl
pushf
sbb
test
ljmp
and
dec
cmpsb
and
aad
dec
call
push
jmp
cmp
dec
aam
aaa
push
cli
jg
push
pop
loop
aam
cmpsl
sarb
jne
nop
dec
cwtl
fisttpll
lret
or
jnp
fldln2
and
mov
into
xchg
cmp
mov
pop
imul
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
pop
inc
mov
and
sbb
loop
divb
fidivrl
pop
jnp
sub
pushf
mov
pop
inc
inc
aaa
pop
test
jno
and
iret
mov
int3
out
xchg
test
push
ja
push
lret
mov
lea
popf
xchg
xchg
dec
je
and
or
lods
fsubrl
mov
movsl
xchg
aam
loopne
push
daa
shlb
or
push
ret
adc
lds
aas
jno
or
or
pushf
xchg
xchg
sar
scas
and
stos
jecxz
inc
jne
cltd
es
sbb
nop
orw
cld
call
xchg
and
xor
pop
cmp
test
add
push
cmp
add
cli
and
xor
dec
cltd
mov
mov
testb
sbb
inc
out
insl
inc
les
xor
scas
push
xchg
sub
paddusw
adc
callw
rorl
negl
std
or
mov
fstps
divb
add
mov
push
push
dec
lods
sti
sub
add
scas
arpl
jbe
xchg
call
pop
xor
add
xor
addr16
ljmp
scas
and
iret
gs
push
call
in
mov
fdivl
add
insl
cmp
int3
push
aaa
es
fucom
pop
xchg
xchg
loopne
jg
add
sub
testl
push
test
mov
xor
mov
inc
or
out
ret
inc
push
mov
call
stos
cmp
pop
test
in
mov
aaa
pop
dec
data16
pop
jo
xchg
sub
add
xorb
inc
ljmp
cmpsl
xchg
inc
enter
xchg
or
lcall
push
jl
mov
clc
jg
xchg
cli
mov
mov
aam
mov
test
insb
cli
das
call
mov
sti
in
adc
sahf
mov
inc
or
std
cmpsb
mov
decb
pop
fadd
sub
pop
inc
sub
inc
cmp
mov
cmp
pop
mov
mov
cmp
das
in
or
xchg
testb
stos
mov
scas
addr16
pop
fnsave
ss
jmp
jg
xor
movsl
push
push
push
cld
mov
outsl
outsb
add
push
stos
fwait
or
imul
scas
push
cmp
ss
cmp
jmp
lods
and
and
jmp
notb
pop
lret
icebp
sub
cmp
sbb
mov
ljmp
jno
fadd
cmpsb
popa
lods
popa
test
adc
jo,pn
pop
xchg
push
mov
daa
or
inc
xchg
call
test
or
sbb
dec
sbb
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
stos
push
lock
and
sbb
std
daa
movsb
mov
rcr
scas
push
outsl
push
std
xchg
faddl
fistpl
add
and
push
adc
sbb
popa
dec
jno
or
add
xor
cltd
mov
rorl
jmp
sbb
ljmp
and
push
inc
and
sbb
rorl
sahf
outsl
data16
fmuls
pop
enter
xchg
lahf
mov
ror
push
in
insl
dec
flds
bound
dec
push
and
fisubrl
hlt
xlat
pop
daa
sub
inc
loop
insb
xorb
dec
jg
or
mov
movsb
fbld
sub
mov
push
fidivrl
inc
js
ljmp
push
jno
fdivp
jl
test
test
les
push
sti
adc
inc
push
mov
or
cmc
mov
mov
or
fnstsw
or
lea
std
lods
pop
lcall
lea
mov
lret
cmp
pop
mov
cltd
ja
out
mov
xchg
fcomps
fidivrs
outsl
mov
movsl
inc
movsb
push
mov
dec
mov
pop
pop
inc
out
jmp
add
insl
fstp
shlb
mov
mov
cmp
dec
and
mov
cmpsb
pop
mov
movsb
mov
pop
mov
mov
jecxz
stc
push
or
in
mov
or
int3
cmp
mov
cmp
aaa
or
repz
xchg
je
ror
in
dec
xor
fildll
add
add
xchg
adc
adc
mov
pop
mov
lret
or
adc
or
js
outsb
xchg
pop
in
inc
mov
rorb
testb
inc
cmp
or
jnp
sbb
mov
mov
push
mov
pop
popf
bound
mov
mov
jbe
sarl
adc
lds
adc
ljmp
pop
cmp
into
mov
lret
cli
cmp
jmp
imul
negb
sub
mov
push
push
jae
je
and
cmp
loop
and
and
add
xchg
mov
push
and
test
mov
xchg
xor
ret
pop
repz
scas
mov
nop
roll
clc
xchg
inc
and
cmpsb
les
inc
mov
popa
repz
cmpsb
in
dec
insl
jno
jle
mov
lahf
xor
dec
inc
xchg
data16
outsl
pop
loope
aas
aad
add
cltd
outsl
jecxz
popf
sahf
rcrl
ja
idivl
jp
mov
jg
push
nop
fcomi
ret
ja
dec
outsb
ja
out
repnz
mov
shrd
jmp
out
push
push
push
mov
ljmp
and
sbb
xchg
dec
fistps
inc
push
loope
xor
cld
adc
sub
sarl
xchg
push
or
jae
test
cmp
pop
aad
mov
add
insb
lret
in
int3
jge
inc
rorl
incl
xchg
mov
popf
sbb
mov
cmpsl
or
mov
pushf
sub
pusha
movsb
mov
cmp
mov
mov
fildll
dec
sbb
into
movsb
pop
sub
mov
push
xor
dec
fnstenv
js
or
sub
test
dec
fwait
jne
in
mov
pop
pop
and
jp
mov
mov
lcall
mov
and
cld
in
sub
ss
in
cwtl
mov
push
cs
xor
fidivl
call
pop
pop
bound
mov
jle
sbb
ljmp
add
mov
add
or
in
xor
arpl
popf
add
int
mov
jae
aaa
out
mov
fldcw
fstl
xchg
in
test
xor
cmp
mov
adc
mov
fdivrp
or
lret
pop
xlat
test
jae
jns
fildll
mov
outsl
in
lock
ja
xchg
imul
mov
cmpsl
and
pop
inc
pop
add
or
sti
jb
mov
and
es
mov
push
inc
pop
lods
fwait
imul
xor
lret
mov
push
jno
scas
out
push
imul
xor
inc
cmp
pop
ret
imul
cmp
imul
mov
mov
jmp
sub
fistpl
xchg
imulb
inc
or
push
jg
add
sbb
mov
clc
movsb
and
jne
jmp
xor
sub
fisttpl
enter
sbb
jb
ljmp
xor
sbb
stc
lock
adc
out
xchg
mov
or
pusha
dec
out
andl
mov
and
xor
lea
ret
mov
lret
push
popa
mov
into
stos
testl
ljmp
mov
faddl
scas
inc
inc
sbb
sub
mov
outsb
push
loopne
insl
mov
inc
mov
jns
jns
push
stos
repz
rclb
jns
cmp
movsb
pop
loop
jne
push
dec
aad
leave
sub
push
aam
inc
adc
fimull
scas
pmulhw
push
push
popa
stos
add
fwait
mov
dec
loopne
push
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
mov
jle
in
sbb
adc
sbb
xor
out
inc
cmpsl
dec
pop
sbb
test
sti
lods
jb
dec
push
jmp
mov
in
jle
sarb
pop
inc
mov
jbe
insl
jecxz
out
dec
popf
aaa
ret
and
and
loopne
sub
sub
sbb
push
imulb
fidivrl
insl
dec
jecxz
movsl
mov
xchg
lahf
push
pop
sub
xchg
mov
pmuludq
call
add
repz
mov
or
pusha
fadd
sub
scas
ljmp
bound
add
or
aad
test
enter
sub
jg
movl
mulb
ja
inc
shll
inc
outsb
pop
xchg
jbe
mov
enter
adc
shll
in
sti
mov
pop
push
pusha
test
xchg
test
shlb
dec
cld
aam
lret
cwtl
or
test
jecxz
pop
adc
pop
jge
push
sti
iret
mov
push
sbb
sbb
and
outsb
iret
cmpsb
dec
ficomps
iret
dec
or
orb
xor
xchg
jp
mov
mov
add
sub
and
arpl
or
test
outsb
mov
mov
adc
cmp
js
xchg
jge
cmp
xchg
das
pop
sbb
push
or
adc
push
loopne
pop
cwtl
lods
dec
push
mov
mov
add
cli
jl
or
pop
in
jmp
dec
add
imul
jmp
jecxz
nop
push
dec
dec
pop
outsl
mov
cld
add
xchg
lcall
or
jnp
scas
nop
rcll
dec
lds
push
jle
or
cli
jnp
or
stos
sbb
jae
adc
ret
xchg
dec
shl
adc
inc
or
mov
sbb
inc
scas
fsubrl
dec
pop
rcr
jns
jge
leave
and
stos
loope
test
out
add
pop
adc
scas
push
and
cmp
lea
inc
xchg
loope
jo
xorb
pop
ljmp
push
dec
jbe
adc
out
xor
cmp
jl
aas
mov
and
jg
addr16
insl
jl
sub
push
hlt
adc
mov
mov
cmpsl
mov
sub
in
jo
cmp
push
and
pop
arpl
sub
sbb
test
jmp
arpl
gs
scas
sbb
cmpsl
push
or
cli
push
in
push
add
jae
scas
cli
push
push
iret
push
jmp
xor
xchg
inc
pushf
lods
dec
push
clc
push
xor
adc
insb
shlb
mov
dec
cmpsb
mov
or
mov
test
mov
mov
fdiv
sbb
or
mov
jmp
nop
dec
nop
add
lock
xor
mov
sbb
and
sbb
iret
fdivrp
pop
insl
fidivrs
inc
stos
enter
clc
leave
xor
scas
scas
decl
in
icebp
mov
test
icebp
mov
leave
pop
leave
pop
inc
outsl
cld
mov
arpl
push
jecxz
push
or
lret
jno
lock
jb
mov
in
out
and
sahf
adc
icebp
inc
idivl
mov
aas
incb
and
jmp
aam
dec
in
sti
insl
add
outsb
cmc
mov
jp
push
push
or
repz
pop
cmc
rol
mov
jns
fadd
js
mov
ret
mov
mov
push
or
and
decl
lret
mov
jge
mov
pop
jno
inc
rolb
xchg
mov
inc
inc
ds
ds
add
es
lahf
aaa
into
bound
data16
xor
test
or
cmp
adc
int3
es
push
fwait
sbb
lock
mul
call
mov
data16
or
mov
cmp
sar
inc
fst
jb
faddl
out
mov
sub
mov
mov
lea
jno
fisubrl
mov
ss
in
jnp
mov
lods
jnp
jnp
iret
pop
dec
es
insl
in
insb
cli
mov
add
subl
loop
jns
add
push
les
xorb
call
push
out
dec
imul
sbb
gs
jb
lods
sub
pop
lahf
iret
test
push
enter
and
inc
xorl
jns
xchg
mov
lret
jb
out
shlb
call
loop
xor
repnz
fs
daa
inc
shl
aas
adc
ds
dec
les
mov
adc
sub
in
xchg
xor
mov
push
add
int3
jp
push
dec
test
push
gs
int
jp
movsb
addr16
loop
mov
jmp
push
lea
cmp
inc
ds
dec
sbb
add
and
loope
ret
xchg
lret
mov
aaa
add
add
in
xchg
and
loopne
mov
xor
dec
jns
enter
cmp
adc
mov
cmp
ss
sub
adc
sub
rclb
dec
add
int3
xor
pop
outsl
mov
xchg
jns
sub
adc
cmp
loopne
jge
ds
mov
mov
jl
mov
aad
dec
dec
mov
and
pop
lahf
call
roll
jbe
pop
loope
add
add
lods
test
shlb
decl
push
jg
leave
pusha
cs
jecxz
ljmp
fwait
adc
aam
repnz
notb
add
push
xchg
mov
aas
fdivrs
jbe
xlat
add
jns
fs
sub
insb
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
jne
popf
xor
sarl
push
sub
loopne
test
mov
cmp
push
inc
cld
clc
mov
int3
add
inc
dec
mov
xchg
fiadds
daa
stos
pop
stos
cmc
ret
mov
insb
data16
fistpl
setno
mov
add
cmpsl
leave
sbb
mov
test
mov
jae
int
out
mov
cli
cltd
pop
xor
idivl
or
mov
aad
sbb
dec
inc
sbb
outsb
jecxz
jg
hlt
cmp
rcrb
and
mov
inc
cmc
mov
or
jle
jb
mov
mov
nop
pop
push
sub
mov
xor
mov
jnp
and
ss
xor
shlb
push
dec
stc
mov
in
sti
lcall
mov
or
lret
cmp
pop
jo
cld
xchg
jecxz
mov
scas
aam
xchg
add
jle
jmp
push
out
push
push
and
mov
shrl
rcrl
adc
dec
xor
and
xchg
pop
outsb
cli
mov
out
pusha
adc
or
aas
push
cmpsl
in
popf
inc
pop
shll
dec
sbb
sbb
insl
push
pop
xor
sub
test
mov
data16
push
out
inc
push
add
xor
imul
stos
push
in
fwait
cmpsb
movl
sbb
or
add
stos
popf
adc
fwait
cld
dec
mov
jae
mov
sbb
imul
inc
idivl
push
xchg
movsb
lret
in
rorb
pop
gs
adc
cmp
push
push
pop
je
jne
push
pushf
sub
push
or
sub
out
mov
ljmp
jnp
mov
jecxz
fucomi
sahf
jg
sub
pop
pop
int
xchg
rcll
add
cwtl
adc
cmpsb
pop
and
js
cmpl
adc
mov
push
lods
shll
push
sub
je
inc
and
insb
push
lds
rcll
pushl
dec
loopne
imul
icebp
pop
lock
data16
push
push
adc
sub
jae
aas
cltd
mov
xlat
ja
cmp
push
fnop
xchg
dec
cmp
and
out
shr
xor
push
mov
into
inc
push
movsb
arpl
out
nop
xor
mov
rorb
mov
test
out
cmp
xlat
and
cmp
sbb
leave
repz
mov
lods
dec
sub
jno
bound
mov
out
cltd
repz
int
lret
inc
inc
pause
sti
xor
sub
mov
inc
nop
jg
cmpsl
mov
out
inc
rcrb
test
push
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
xchg
cmp
sbb
and
sbb
lret
jnp
push
repz
sbb
ljmp
cltd
test
push
scas
inc
leave
push
test
decb
xchg
out
sbb
out
inc
add
test
js
out
push
ja
popa
mov
push
scas
fisubrl
sbb
cli
cltd
ficoms
movsb
jmp
ja
push
aaa
jnp
in
subb
sub
in
ja
add
je
popa
popf
mov
and
test
sub
push
lcall
out
dec
imull
jecxz
and
sahf
jae
mov
pop
imul
stos
jns
shll
daa
pop
mov
and
das
in
xchg
mov
das
mov
add
xchg
es
insb
add
add
loop
call
testb
test
sub
mov
leave
dec
imul
and
pushf
out
dec
cmp
jg
mov
or
mov
dec
scas
sub
pushf
dec
sahf
pop
iret
iret
div
and
out
sbb
dec
les
inc
push
sahf
adc
xchg
idiv
xchg
lock
jno
cmc
sub
aas
into
add
popa
and
addl
out
or
std
xchg
sub
repz
shl
lcall
mov
cmp
popa
subb
xchg
pop
data16
sub
jmp
imul
pop
sbb
sub
imul
pop
add
mov
add
ljmp
sub
push
push
nop
pusha
stos
aaa
sahf
push
outsb
in
xchg
movsl
push
push
and
dec
sub
dec
js
and
push
js
xchg
jo
or
or
sbb
shlb
out
sbbl
inc
lret
and
cs
and
adc
movsb
or
mov
out
iret
pop
ds
dec
sub
mov
neg
push
mov
in
ret
cmp
daa
pop
mov
das
mov
cltd
jbe
addb
push
lock
add
mov
js
xchg
xchg
pop
push
loope
lahf
filds
lods
mov
dec
je
mov
fndisi(8087
mov
jp
jae
pop
cmpsl
jl
jbe
testb
ds
ret
int3
in
jno
in
rcl
mov
roll
mov
fistpll
mov
out
mov
xchg
clc
jae
xor
push
pusha
daa
adc
pop
data16
in
rorl
leave
es
inc
push
cmp
push
mov
mov
enter
imul
mov
cwtl
cld
jl
lock
insl
aam
jb
mov
or
mov
mov
adc
xchg
into
cli
jae
or
loopne
pop
lea
ja
jbe
lcall
test
push
imul
dec
cli
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
test
jl
int
sbb
adc
sbb
outsb
sbb
into
jnp
frstor
cwtl
nop
adc
xor
pop
loope
mov
mov
push
testl
andb
or
pop
loop
scas
les
or
popf
test
dec
fs
ljmp
cli
mov
pop
das
xchg
scas
pop
cli
lret
sbb
jbe
pop
cmc
cld
xchg
xor
arpl
sub
pusha
jmp
notl
jns
jg
cltd
pop
out
sbb
add
sub
adc
lock
or
pop
sbbb
lahf
fsub
inc
push
mov
std
mov
sub
jle
xchg
addr16
xchg
add
mov
test
pop
mov
scas
pusha
fnstsw
mov
cwtl
sub
or
sahf
jnp
dec
mov
mov
sub
out
mov
jle
xchg
popa
push
sub
lds
rcll
push
popa
shl
mov
ss
mov
fisttpl
xchg
pop
jle
push
jl
sub
dec
mov
mov
or
xchg
data16
sub
outsb
or
mov
cs
inc
xor
arpl
jmp
fidivl
das
dec
in
out
mov
push
xchg
mov
xor
aad
jno
mov
ds
mov
movsl
das
outsb
clc
rcr
add
test
fists
cwtl
and
adcl
ljmp
adc
add
int3
lret
dec
xor
dec
icebp
arpl
mov
mov
push
mov
or
push
ret
addr16
sub
add
mov
out
sub
fcomps
xor
lahf
je
dec
cmp
out
jp
stos
jge
inc
or
lcall
mov
lods
push
jecxz
cmp
cmpsb
aas
mov
dec
jnp
adcl
or
pop
and
movsl
inc
push
out
inc
cwtl
add
dec
bound
arpl
and
mov
dec
cmc
hlt
push
jbe
mov
sub
dec
xchg
cmovge
sbb
clc
sub
push
push
mov
clc
dec
mov
push
cmpsl
mov
jne
cmp
mov
adc
pop
or
imulb
mov
pop
push
fwait
das
mov
jge
inc
mov
mov
xor
inc
out
insb
mov
les
and
xchg
push
fstpt
xor
lock
data16
mov
push
dec
add
and
push
icebp
sarb
mov
and
addr16
into
cmp
ja
or
sub
stc
sahf
inc
sti
icebp
sbb
into
cwtl
dec
insl
xchg
inc
sbb
xor
lcall
lods
popa
jecxz
inc
iret
movsl
mov
sbb
xor
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
leave
jl
sbb
and
sbb
lret
jnp
dec
outsb
leave
in
int3
cmp
mov
pop
gs
test
lock
gs
cmp
add
push
insl
or
aaa
ss
mov
ret
lea
bnd
push
add
rolb
cmp
addr16
daa
aam
or
les
mov
jp
fimuls
lock
rorl
sub
or
push
xor
rclb
js
mov
jno
adc
das
pop
xor
dec
adc
lcall
jno
xor
push
add
cwtl
mov
pop
pop
and
lods
dec
and
stos
push
mov
imul
lds
jo
mov
dec
int3
xchg
call
test
mov
push
mov
push
mov
gs
movsb
sbbb
or
neg
pushf
xchg
sahf
or
and
push
xchg
dec
jns
jo
add
inc
inc
jmp
shld
mov
ja
sbb
mov
iret
int3
inc
lahf
dec
rolb
add
inc
jl
and
mov
daa
jg
lods
or
data16
dec
xorl
call
inc
leave
cltd
sbb
mov
adc
xor
test
nop
xchg
and
xchg
dec
imul
sti
out
rcrb
or
mov
ret
cwtl
lds
test
push
jp
mov
and
xor
int3
sub
or
sub
add
stc
out
push
cmp
sub
push
outsb
das
fstl
out
inc
push
sbb
fsubrs
mov
mov
cli
push
enter
incb
cwtl
or
mov
outsb
fildll
data16
adc
call
add
test
leave
pop
cmp
dec
push
xor
fbstp
aam
cmp
mov
aad
mov
dec
insb
jns
fistps
insb
inc
mov
push
inc
mov
aam
pop
loopne
cmp
jae
dec
sbb
fldl
or
ret
inc
in
leave
or
dec
mov
mov
inc
ja
pop
dec
bound
repz
ljmp
sbb
test
fimuls
cmpsl
jnp
jg
cmp
dec
add
sarb
push
xchg
dec
jbe
xor
sub
out
cmpl
insb
lea
test
push
push
call
fdivrs
or
inc
inc
xchg
mov
out
mov
and
adc
std
add
mov
lods
mov
inc
popa
push
push
insb
out
ffree
lret
mov
adc
jns
loope
jno
pushf
push
jp
gs
fisubl
insl
mov
xor
sbb
cwtl
xor
es
push
dec
movsb
pop
push
lcall
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
cmpsb
lods
mov
rcrl
and
sbb
movsl
inc
icebp
ret
jae
stc
pop
les
pop
leave
and
cmpsl
pop
testl
sti
push
sahf
les
xchg
sub
jns
mov
fwait
cmc
je
inc
push
daa
nop
jmp
mov
xchg
jl
mov
cmp
fsubl
loope
loope
fistps
int3
push
cmpl
mov
leave
xor
jne
imul
test
inc
add
jns
cmp
cmpsl
orb
shll
stos
imul
inc
push
sub
enter
push
cmc
addr16
cmpsl
push
adc
stos
loope
mov
movsb
aas
mov
out
popa
push
lock
incl
negb
cli
and
dec
mov
movb
mov
jp
std
inc
jb
fidivs
adc
jo
sub
and
or
lds
and
test
push
nop
fsts
jecxz
je
cmpsb
sub
cmc
adc
jg
imul
cld
daa
xchg
or
or
es
adcl
pop
scas
scas
out
inc
jge
stos
cmp
or
pop
stos
sub
jb
aas
push
cmp
orl
cmc
push
clc
fldt
clc
sbb
pop
inc
sbb
leave
ficoml
push
fs
jecxz
mov
lret
bound
lock
xor
cs
adc
jl
and
cli
mov
fcmovnbe
or
push
addr16
sub
pop
mov
stos
dec
sahf
jbe
lea
pop
repz
xor
adc
or
mov
fwait
pop
call
xor
gs
and
jmp
leave
inc
inc
push
repz
push
mov
add
ror
shlb
mov
mov
jno
mov
aas
pop
jns
fmul
dec
or
jecxz
sarl
call
pop
mov
fisubrs
sbb
cld
cmpsl
jno
mov
inc
dec
loope
rolb
in
push
dec
loope
push
xchg
sub
inc
cmp
dec
inc
or
das
xor
sub
sub
rorl
imul
stos
jb
lret
adcb
addr16
pusha
scas
mov
add
dec
mov
pop
pop
nop
inc
scas
ja
lods
cld
and
es
outsb
arpl
or
decb
test
inc
repnz
sbbb
in
scas
cmpsb
aam
cli
xor
outsb
jb
sti
shrb
in
lahf
xchg
pop
jne
in
push
pop
mov
mov
and
insl
imul
out
lods
test
repz
out
out
in
ret
push
cmp
cltd
xlat
xor
loop
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
jl
mov
sbb
push
mov
xchg
dec
iret
push
aam
mov
mov
popa
xor
fwait
stos
mov
icebp
shll
rol
cmp
andl
cli
test
or
ljmp
leave
sub
mov
jo
jbe
mov
jnp
inc
lret
dec
push
push
sub
xor
add
das
pop
out
ds
dec
jno
ret
inc
jecxz
push
mov
dec
mov
psubw
mov
jnp
cmc
jge
pop
std
inc
icebp
sarl
pushf
and
or
push
pop
ret
cmp
cld
pop
ret
cmp
jb
mov
movsl
mov
dec
outsb
stos
fldenv
mov
dec
pop
and
pusha
ds
mov
subps
sbb
stc
mov
push
pop
adc
bound
lock
mov
add
repz
or
jnp
push
pop
int
rol
dec
dec
push
stc
fs
test
xor
jmp
popl
mov
pop
imul
arpl
mov
sbb
clc
nop
aaa
jo
inc
adc
movsb
sbb
jno
insb
adc
inc
jle
mov
aaa
pop
lods
scas
cmp
mov
daa
pop
mov
cmp
dec
mov
pop
or
es
pop
rolb
es
rcrl
pusha
insl
mov
in
orb
dec
xor
inc
sahf
xor
ja
add
xor
test
mov
jae
test
loop
test
icebp
outsb
popl
jle
repnz
mov
sbb
nop
jnp
mov
inc
movsb
hlt
sbbb
test
push
ret
inc
mov
dec
push
add
cmp
mov
idiv
pusha
decb
ror
jns
test
in
in
push
ss
aad
das
mov
xchg
push
ds
and
xlat
repnz
in
in
mov
and
push
mov
pop
mov
push
push
sahf
adc
push
iret
dec
add
leave
mov
push
pop
and
mov
out
push
push
adc
rcll
mov
lea
inc
ja
fsubrl
aad
push
jnp
dec
and
out
shlb
leave
add
fsubrl
test
lahf
mov
stos
mov
mov
jecxz
icebp
push
add
std
and
ljmp
sti
rolb
mov
out
shlb
dec
int
pop
sub
mov
lret
rcll
dec
dec
ret
filds
ss
xchg
cld
mov
add
pop
arpl
imul
aad
ja
sbb
fwait
orb
btsl
fwait
pop
jne
adcl
cwtl
and
push
pop
adc
jmp
dec
out
inc
or
mov
mov
jne
inc
jne
sbb
sbb
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
or
push
mov
sbb
adc
sbb
lcall
cmp
pop
fdiv
inc
or
out
fimuls
xor
mov
or
cmp
stos
nop
andb
out
js,pt
or
mov
push
cs
daa
or
pop
or
sub
popa
mov
mov
xchg
outsl
cld
adc
test
sti
fildll
gs
cmpsl
cld
das
insb
in
sbb
adcb
mov
scas
fsubs
iret
xchg
mov
cmpsl
xchg
jge
iret
push
in
push
lods
mov
cmp
ret
adc
and
push
shll
mov
dec
addl
mov
push
push
jbe
push
sub
dec
inc
pop
jl
call
outsl
in
mov
sub
sub
xor
push
js
mov
test
movsb
sti
leave
add
pop
pop
mov
in
cmpsb
lods
add
jmp
xchg
cmc
das
add
test
mov
leave
inc
sub
out
mov
outsl
inc
mov
dec
jecxz
inc
pop
adc
addr16
data16
mov
inc
mov
push
inc
sbb
test
xor
inc
lret
out
and
fbld
mov
mov
inc
adc
add
subps
stos
mov
test
push
mov
sbb
mov
xchg
ljmp
int3
sbb
cmp
pop
aaa
cli
pop
xchg
loopne
loope
fwait
test
inc
into
repnz
int
xor
push
out
outsb
cs
out
arpl
xor
daa
push
sbb
add
pop
loop
pop
vaddss
ret
mov
mov
xchg
leave
add
ss
mov
aad
jae
les
andb
sub
test
cltd
mov
clc
push
mov
mov
lcall
jle
stos
mov
scas
scas
cmp
push
and
movsb
xor
and
bound
mov
rsm
dec
xor
add
jne
and
or
sarl
sarl
imul
scas
insl
test
in
in
dec
shll
lds
jne
cmp
inc
cmpsl
inc
jmp
shrb
jg
ret
js
stos
lea
scas
mov
sbb
adc
and
pop
fdivrl
jne
or
xlat
push
or
loop
out
push
push
arpl
es
aaa
repz
mov
jp
sti
lret
pop
pop
lds
inc
adc
imul
mov
xchg
xchg
or
lods
pop
setbe
adc
pop
flds
movsb
cmpsl
jo
sbb
lods
or
push
or
adc
push
or
mov
in
pop
out
inc
mov
test
pushf
mov
out
pop
and
loopne
mov
jp
test
xchg
cs
sbb
add
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
ret
fsubrl
xor
lret
dec
and
data16
mov
es
sub
inc
imul
lahf
push
gs
cli
orl
aaa
subl
int
lret
xchg
mov
or
pop
dec
insb
or
jns
jmp
mov
cmp
push
fidivs
test
dec
je
dec
fsubl
aaa
int3
divb
addr16
jl
cli
xor
insb
pop
mov
imul
inc
and
lret
movb
push
adc
adc
mov
adcl
xor
jecxz
xor
adc
in
add
cld
aas
sub
lds
pusha
cltd
sub
data16
push
fs
push
sbb
add
hlt
in
mov
mov
rcrl
out
loope
or
cmpsb
pop
sub
movsb
lcall
pop
pop
and
xchg
popf
mov
data16
mov
loop
mov
into
je
jl
scas
adc
pop
ss
sbb
sub
dec
ds
jle
push
mov
pop
xchg
cmp
dec
adc
xchg
jecxz
mov
inc
mov
test
test
cli
mull
mov
xchg
lods
jmp
mov
xlat
andb
test
hlt
insl
push
and
or
mov
sub
jp
mov
mov
mul
add
xor
aaa
cli
dec
movsl
ss
and
jg
jl,pn
mov
add
and
stc
mov
dec
rcl
mov
fmulp
std
cmp
lods
rorb
push
cli
lret
mov
xchg
push
sbb
lock
repz
fs
cmp
jge
test
testb
pop
pop
mov
loopne
sub
dec
clc
pop
mov
dec
imul
fs
das
pop
and
inc
lea
sub
xchg
movsl
sbb
push
and
and
push
in
jbe
mov
test
pop
adc
add
and
or
push
test
adc
std
fcompl
aad
add
sarb
xchg
lods
adc
cmp
stos
xchg
stos
repz
xchg
insb
add
lcall
cld
shll
mov
xchg
inc
cmp
jno
ret
cmpsl
popf
push
aas
scas
sub
adc
ss
pop
and
inc
xchg
call
cs
cwtl
rol
xchg
jg
in
ljmp
repnz
jecxz
xlat
push
adc
lcall
jmp
daa
sbb
fldl
dec
stos
jns
sbb
xor
rolb
xchg
push
xchg
les
sbb
cmp
push
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
xchg
mov
sbb
adc
sbb
out
xor
push
mov
pushf
stos
pop
test
pop
cs
sbb
notb
ds
mov
and
mov
inc
mov
pop
pop
into
adc
push
stos
or
cmpb
lcall
dec
and
fldenv
inc
pop
fwait
mov
cld
xchg
sbb
push
push
lahf
sub
pop
shlb
jecxz
push
pusha
dec
enter
call
dec
jmp
arpl
repz
mov
bnd
and
adc
inc
inc
push
fnsave
int3
aam
mov
inc
addr16
adc
imul
cmp
movsl
jge
fiadds
out
jbe
push
dec
push
mov
out
fwait
cmp
adc
in
xchg
js
sbb
hlt
mov
pop
insb
jns
iret
mov
jns
push
addl
dec
mov
outsl
jmp
test
push
or
out
push
repz
xchg
lahf
fistpll
pop
incb
stc
mov
jb
iret
das
inc
mull
fcoms
cmp
or
outsl
dec
es
int
repz
into
int
aad
lds
addb
pushf
dec
fsubs
lods
dec
xchg
add
decb
push
cwtl
add
cmp
pop
mov
push
jmp
jbe
in
lret
daa
adc
loop
inc
pop
mov
cwtl
shl
lods
and
xchg
je
ret
jle
daa
les
stc
arpl
mov
push
test
cmp
mov
std
int3
insb
dec
test
gs
mov
call
dec
add
cmc
mov
xor
sbb
pop
sbb
jmp
in
lods
xchg
into
iret
and
add
jl
icebp
jl
adc
pop
cs
mov
push
and
and
mov
mov
mov
pop
cmpsl
pop
aaa
inc
xchg
pop
mov
mov
fsub
cmpl
lock
test
popf
mov
mov
mov
test
xchg
adc
xchg
pop
pushl
mov
imul
push
adc
pop
mov
xchg
movq
pushf
arpl
push
sub
les
cli
xchg
mov
lret
inc
js
jnp
sahf
test
mov
cmpsl
inc
and
push
jb
ss
in
and
arpl
fildll
ret
insl
je
ljmp
inc
rolb
dec
popa
mov
push
xor
xchg
int
bound
lock
rcll
adc
cld
les
aaa
minps
push
lods
push
clc
icebp
fwait
and
adc
stos
mov
lods
xor
mov
out
mov
mov
xchg
pop
mov
insb
pop
adc
push
out
xor
call
shrb
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
addr16
and
sbb
test
mov
jbe
enter
sub
lahf
shrb
dec
mov
lahf
and
lock
xchg
out
adc
shrb
and
mov
xchg
push
das
or
lods
add
mov
push
loope
or
and
insl
in
ljmp
xchg
out
in
cmc
stc
jge
adc
sahf
xchg
imul
shll
outsl
loopne
loop
es
or
ljmp
xchg
xchg
mov
and
jl
arpl
push
lea
shlb
mov
cmp
sbbl
repnz
adc
push
push
and
addr16
dec
test
sti
jb
shlb
fcomps
pushf
xor
cmp
xchg
out
and
pop
movsl
es
pop
ret
inc
pop
sub
movsb
mov
in
aad
or
insb
out
sbbl
rorl
xor
and
daa
mul
lahf
lret
xor
push
inc
and
push
cmpsl
dec
shll
jnp
jo
or
adc
lahf
fnsave
repnz
push
jmp
jg
sub
loopne
dec
sahf
xchg
jge
jle
lock
mov
jp
mov
dec
decb
ljmp
xor
mov
stos
adc
in
cmp
fmull
sbb
insb
add
xchg
fdivrl
scas
or
cmp
popa
out
pop
shlb
mov
popf
mov
sbb
add
das
adc
xor
sahf
addr16
xor
cmp
mov
sub
pop
push
test
xor
je
idiv
xor
movsl
xchg
jmp
ffree
xor
push
dec
fsubs
lret
jne
mov
push
mov
push
inc
ss
dec
xor
arpl
mov
loop
imul
inc
jns
push
adc
ret
mov
and
jmp
push
xor
jns
dec
and
push
popa
popa
mov
jp
mov
cmc
pop
and
mov
insl
cli
mov
loop
xor
gs
sarb
icebp
fwait
xchg
notb
and
addr16
push
repnz
mov
int
fcomp
loop
imul
jle
insb
pusha
lds
repz
jne
lahf
out
cli
xor
cmp
clc
mov
pop
and
adc
or
jecxz
shl
xor
or
sbb
inc
mov
fwait
dec
push
mov
repz
movsl
sub
xchg
cmp
sub
pop
mov
mov
push
lods
test
mov
mov
scas
insb
ret
inc
cmp
stc
mov
sub
cmp
outsl
aam
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
jp
xor
popf
sbb
and
sbb
xchg
andb
add
mov
or
push
jl
insb
mov
mov
nop
fcomi
lret
std
lds
scas
cmc
push
jp
lock
mov
andl
dec
cwtl
je
les
inc
into
jge
add
mov
dec
les
pmaxub
mov
xor
adc
fisttps
pop
jns
cmc
lods
in
cli
push
in
ror
in
adc
rolb
inc
femms
sbb
jnp
notb
imul
adc
cld
fstpl
fildl
hlt
in
sti
loop
add
cmp
adc
pop
enter
loope
and
aas
out
xchg
xchg
mov
dec
mov
jo
imul
ja
mov
out
stos
mov
into
mov
cltd
into
enter
mov
xor
cmc
xchg
mov
mov
movsl
iret
int
enter
mov
push
sbbl
xchg
mov
fld
enter
push
shld
push
pop
xchg
pop
test
test
fisubl
lcall
lahf
in
jae
lds
or
sbb
stos
dec
sub
outsl
jecxz
mov
mov
aam
aas
out
mov
mov
sub
ds
add
ljmp
cmp
divl
adc
jg
jbe
push
ret
jns
dec
or
mov
ror
lcall
test
push
mov
shr
and
mov
cltd
jge
mov
in
sbb
mov
subl
inc
cmpsb
xor
sub
adc
jns
arpl
pop
lcall
dec
enter
out
push
movsb
add
cmpsl
push
addl
iret
js
shll
sbb
popa
push
push
jne
lahf
adc
lahf
cltd
in
scas
fcomip
repz
imul
push
xchg
sbbb
mov
jmp
and
imull
ret
into
lret
loope
sbb
jmp
leave
jmp
cmp
stos
push
xchg
xchg
test
pop
lcall
cmp
mov
jmp
inc
stc
sbb
data16
out
in
insl
scas
loopne
xchg
jmp
mov
loopne
push
dec
add
jmp
inc
sub
inc
xor
inc
xor
loope
sub
jne
leave
repz
sbb
mov
loope
enter
sbb
sbbl
mov
adc
int3
jecxz
out
into
jg
out
cmp
cltd
mov
fisubs
dec
sub
es
push
dec
adc
sbb
add
sub
ret
mov
xor
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jl
xchg
sbb
and
sbb
testl
adc
and
rorl
cmpsb
int3
mov
enter
dec
jnp
lahf
in
sbbb
mov
in
push
cmpsb
addr16
dec
js
pusha
movsl
mov
icebp
or
mov
vpmacsswd
popa
in
das
pop
mov
stos
cmc
outsb
pop
and
jne
aaa
call
lret
cmp
push
test
rorl
gs
push
cmp
or
aad
xlat
jno,pn
pushf
mov
add
movups
ljmp
fdivrl
xor
aaa
sub
leave
das
push
jmp
lock
mov
push
frstor
ret
rolb
rolb
cmp
repz
add
out
xlat
xor
push
pop
jno
and
add
jmp
jno
sbb
repnz
xor
mov
in
xor
out
pop
in
mov
sbbl
gs
test
fucom
pop
fists
mov
pop
in
and
leave
cltd
push
imul
add
inc
jbe
inc
in
lea
sub
imulb
or
in
push
xchg
cli
fxch
js
lahf
incl
cmp
je
inc
inc
imul
push
loopne
aad
sarb
into
lock
inc
imul
das
in
ja
pop
fnstcw
cmp
and
fninit
outsl
rclb
pop
mov
xchg
cs
or
xorl
dec
popa
rol
repnz
pop
movsl
adc
call
stc
andb
dec
jae
push
push
aad
lret
jp
pop
insb
and
xlat
xchg
add
filds
pop
int
xchg
cmp
in
xor
fidivrl
push
jno
push
xchg
xchg
pop
loope
addl
or
cld
cmp
inc
adc
add
jp
std
adc
pushf
and
add
in
gs
pop
mov
lds
add
neg
mov
add
push
loop
mov
xchg
adc
add
pop
test
fs
shl
push
mov
lock
pop
test
fstpl
out
rcrb
shrl
sahf
dec
mov
incb
js
xchg
mov
or
dec
iret
arpl
cmp
sti
mov
jl
fiaddl
pop
es
sub
jl
inc
out
gs
sar
popa
push
aaa
btc
daa
add
mov
add
mov
xchg
add
or
ret
pop
jo
lods
sbbb
adc
aaa
es
inc
and
cltd
pop
daa
inc
arpl
js
ja
dec
jae
inc
cmpsb
imul
cmp
mov
ss
fmull
shl
jmp
cmp
sbb
push
push
out
push
sub
sbb
and
sbb
lea
sbb
in
xchg
mov
cmp
sar
add
pop
stos
mov
rclb
mov
and
sti
lea
add
dec
mov
or
and
mov
in
bswap
pop
decl
mov
jns
mov
lea
lods
leave
mov
int3
ss
stos
aam
sub
pushf
and
push
scas
mov
jnp
je
or
sbb
pop
outsb
jbe
push
xchg
push
xorl
xchg
mull
sub
flds
aad
or
faddp
pop
jg
jp
aam
loope
xchg
leave
data16
mov
popf
sub
xchg
jl
jmp
jmp
jne
mov
pop
or
add
insb
ss
int
inc
pushf
ds
and
xor
jle
push
aad
decl
xchg
lahf
pop
adc
xchg
cmp
nop
mov
dec
jne
ficoml
loopne
ret
mov
fucom
mov
icebp
dec
out
push
cmp
test
pop
ret
pop
inc
fnstsw
pop
test
lea
nop
xchg
sbb
xlat
xchg
push
adc
dec
fbstp
in
pop
out
arpl
jo
dec
es
iret
adc
and
out
mov
lods
dec
bound
lcall
nop
stc
sub
imull
negl
add
inc
rep
int3
stc
shrl
cmp
iret
inc
xchg
sub
mov
and
dec
cld
ror
push
mov
push
je
int
or
andl
mov
je
lahf
vandps
add
jns
mulb
aaa
sbb
movsb
sbb
push
js
jo
jo
pop
je
mov
inc
scas
decb
sub
ljmp
scas
adc
data16
adc
data16
adc
jmpw
jge
addl
mov
dec
lds
loope
mov
popa
sbb
mov
jmp
lods
add
es
adc
inc
jge
repz
cmp
les
insb
or
call
push
sbb
inc
cmp
jne
popa
cmp
in
hlt
mov
insb
xor
scas
mov
fmuls
and
repnz
std
fistps
xchg
test
lds
mov
sbb
rorl
cmp
sarl
and
fsubrs
cmpsl
scas
out
aad
cmp
pop
aaa
or
adc
jle
cltd
pop
add
jle
fadds
mov
cmp
jge
adcb
pop
inc
test
pop
sub
and
cmp
pop
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
pop
ret
mov
sub
push
and
mov
xchg
jae
test
or
jp
xchg
jg
scas
xlat
in
stc
fs
or
push
hlt
mov
dec
fsub
ret
mov
mov
test
dec
push
addr16
cmpsb
cltd
movsl
xor
push
das
cmp
mov
hlt
adc
cltd
jae
fwait
adc
inc
inc
xchg
mov
mov
push
pop
call
pop
aam
into
imul
push
sub
and
in
ja
aad
mov
cmp
jo
cmp
pop
jge
int3
push
in
add
stos
repz
pop
cmc
xor
mov
sub
fiadds
inc
jmp
pusha
push
out
or
aam
call
lret
idivb
pop
mov
ljmp
dec
sbb
xchg
mov
push
fidivs
test
in
jl
jne
lahf
xor
push
inc
mov
add
popf
mov
mov
rol
ss
shll
lock
or
sahf
sbb
or
push
pop
pop
mov
mov
fs
dec
jmp
mov
cmpsb
test
xlat
mov
mov
lret
pushf
adc
sbb
hlt
loop
xchg
pop
outsl
popf
push
cmp
sub
pushf
mov
aam
pop
test
sahf
xor
pop
test
movsb
inc
push
call
in
jl
mov
cmc
xchg
sbb
lret
outsl
or
leave
inc
pusha
mov
arpl
js
insb
cld
adc
aam
cmp
imul
pop
stos
lret
ljmp
fisubl
imul
or
pusha
lahf
jae
aad
outsl
std
pop
sub
mov
cmp
clc
mov
jne
mov
xor
mov
push
jmp
cwtl
mov
outsl
mov
dec
pop
jg
cs
jle
xchg
mov
push
daa
sub
lods
cmpsb
mov
adcl
and
pop
add
cmp
add
push
in
or
cwtl
pop
or
iret
ret
xor
movsl
repnz
gs
aam
mov
cmp
push
inc
out
lods
leave
lret
xlat
in
in
xchg
mov
push
data16
jmp
xor
add
nop
cltd
mov
cmp
dec
hlt
in
cmp
cmpsb
iret
stos
push
shrl
test
movsl
pop
cmp
std
fmuls
out
push
jecxz
adc
fdivrs
add
jmp
cli
xchg
jecxz
add
mov
lea
sti
fs
movb
pop
aas
adc
fwait
sahf
mov
popa
xchg
fwait
inc
cmpsl
test
imul
mov
mov
cmp
xor
xor
xchg
mov
and
inc
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
jmp
sbb
and
sbb
push
mov
mov
enter
data16
nop
push
gs
in
bound
or
and
out
xor
stos
xor
cmp
dec
mov
int
inc
sbb
xor
stos
or
sub
icebp
jge
jmp
pushf
mov
movsb
adc
xchg
xor
leave
lods
or
rclb
movsb
int3
repnz
not
xchg
mov
cmp
cltd
les
in
xchg
jle
pop
sub
mov
jb
cltd
dec
sub
js
rorb
pop
fnstsw
push
adc
jecxz
cltd
out
inc
stc
les
inc
jo
mov
out
aam
test
cmc
and
sbb
and
stos
sarl
adc
mov
adcb
lahf
mov
jmp
mov
addr16
push
dec
sbb
add
inc
out
adc
adc
or
cwtl
mov
clc
adc
int
and
icebp
das
and
push
or
imul
in
xchg
sub
into
mov
hlt
push
dec
mov
jno
fnstenv
popf
mov
and
jae
pop
lret
arpl
fistl
imul
mov
xchg
sbb
cld
dec
scas
negl
xor
lahf
xlat
mov
lret
sbbb
jae
fistl
sbb
or
mov
xor
cmp
ret
nop
pop
xor
pop
push
add
in
out
sahf
dec
push
daa
bound
mov
test
pop
cmp
add
mov
das
fucomp
adc
movaps
mov
lea
pop
aas
mov
push
cwtl
test
jge
pop
cli
adc
pop
cmpsb
sub
outsl
pushf
or
popf
or
fwait
xchg
sbb
idivl
aam
call
shlb
and
fstp
inc
xor
pusha
lahf
mov
rcll
sbb
aad
aam
push
xchg
test
cmp
pop
ljmp
cmp
daa
xchg
stc
popf
hlt
and
mov
ja
push
mov
adc
icebp
sbb
frstor
and
jg
pop
push
mov
fs
outsl
rclb
test
mov
icebp
ret
inc
mov
movsb
inc
sub
ret
mov
sbb
pop
movsl
adc
std
add
or
out
clc
mov
cld
xchg
ds
adc
ret
lahf
leave
je
call
fsubl
inc
mov
scas
xchg
insb
and
push
mov
xchg
dec
push
sahf
sbb
fbld
roll
hlt
inc
or
cmp
push
xchg
xchg
lods
add
andb
sbb
arpl
inc
neg
lret
popa
addb
pop
jne
std
sbb
sub
push
mov
or
mov
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
push
jg
sbb
adc
sbb
mov
leave
rorb
jae
mov
out
loopne
add
push
add
aam
scas
div
jo
repz
adc
fstps
dec
jo
cmp
inc
ljmp
fs
adc
fbld
adc
mov
jg
outsl
lock
cwtl
push
shlb
sti
adc
std
std
loopne
out
and
fs
int3
fisttps
and
sbb
stos
adc
leave
inc
sub
mov
jmp
add
divl
pop
mov
out
or
mov
push
or
daa
xor
ss
sbb
mov
int
ret
cltd
repz
test
push
push
mov
xchg
pushf
jne
cltd
mov
push
or
pop
sub
stos
testl
nop
lock
xor
call
xor
adc
dec
inc
lds
or
cmp
lahf
xchg
into
std
mov
push
clc
dec
xchg
xchg
shrl
inc
in
addb
sbb
stc
pop
aas
mov
xor
push
int3
jp
test
xor
and
stos
rolb
jno
cmp
popa
into
or
into
ds
mov
inc
aas
popa
mov
insl
lods
test
xor
sarb
iret
cmpsl
dec
adc
ljmp
xor
push
mov
xor
imul
push
fadd
jl
imul
sub
test
sub
add
and
xchg
adc
popf
pop
subl
xchg
sub
mov
xchg
adc
xchg
stc
adc
clc
cli
pop
popa
or
fsts
or
cld
sbb
rorl
lcall
mov
xlat
cld
sbb
and
ja
push
mov
fsubrp
jb
out
jmp
jnp
inc
push
adc
out
addb
pop
dec
insb
xchg
mov
mov
cltd
ret
lods
xchg
jb
pop
into
mov
add
mov
inc
ljmp
ds
out
rcrl
scas
and
hlt
or
push
mov
mov
ret
cmp
inc
xchg
es
insl
xchg
nop
cmp
dec
cwtl
lret
rclb
add
push
or
cmpsb
push
lcall
mov
inc
inc
subb
or
pop
iret
testl
in
aaa
mov
cmpsl
das
fwait
jp
push
flds
pop
add
add
jae
lcall
shll
jnp
xchg
and
daa
or
dec
or
and
jb
adc
add
inc
insb
and
inc
sub
loope
or
ret
in
or
push
adc
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
stos
popa
jo
jns
sbb
adc
sbb
cltd
xor
flds
xor
lods
push
xchg
sbb
ret
enter
arpl
ja
ss
inc
push
daa
scas
adc
or
movsl
test
loop
push
icebp
dec
and
fs
leave
in
loop
jbe
test
mov
mov
and
add
jb
push
cmpsl
flds
mov
cmpsl
lods
int3
cmpsl
sub
sub
pop
jb
xchg
cmp
inc
sti
xorb
mov
addr16
push
out
outsb
inc
je
cmp
add
and
out
mov
inc
clc
daa
xchg
sbb
enter
repz
inc
push
add
call
popl
cmc
xlat
jg
insb
inc
add
dec
scas
ss
gs
mov
inc
push
shr
adc
nop
leave
ja
daa
sti
lcall
jns
hlt
sub
mov
sbb
fidivrs
shll
icebp
pop
jle
orb
imul
in
jg
push
xor
dec
dec
icebp
pop
sbb
stos
xchg
mov
int3
rclb
xor
mov
fisubrl
shr
movsb
mov
jbe,pt
or
pop
mov
cmpsl
cltd
insl
pop
arpl
sti
or
xor
and
rclb
sar
dec
out
sub
jno
and
out
push
or
stos
sub
jl
sahf
lret
clc
xor
inc
xchg
lods
ja
lds
lods
pusha
mov
sbb
int
pop
mov
or
repnz
mov
or
dec
loopne
push
ret
jne
lods
xchg
jns
mov
imul
pop
mov
xor
xchg
jbe
movb
in
sub
and
jecxz
enter
lods
sbb
outsl
pop
jg
and
or
iret
ds
xchg
and
lock
cmp
fimull
adc
xchg
repz
xor
adc
jp
mov
shrb
lahf
add
xor
adc
pushf
mov
xchg
loopne
adc
gs
cmpb
push
add
dec
add
insb
outsl
add
add
mov
lea
mov
or
aam
andb
lret
aam
daa
mov
aas
fwait
adcl
mov
adc
xor
fs
push
pop
or
push
repnz
inc
sbb
daa
sbb
nop
adc
leave
xchg
dec
and
mov
mov
dec
mull
jbe
jae
sbb
jecxz
mov
fisttpll
ds
test
scas
sub
and
push
mov
jmp
rclb
adc
cmp
mov
dec
out
push
sub
arpl
loop
popa
and
jg
and
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
cmp
shl
int3
ja
stos
push
xchg
cmpsl
rep
push
enter
mov
add
adc
sub
jl
mov
jg
fistps
in
pop
sti
test
pushf
jno
or
mov
mov
hlt
adc
mov
sub
inc
jg
test
ret
sub
dec
jo
incb
clc
mov
out
dec
fildll
loope
and
pop
cmpsb
stc
test
repz
sarb
stc
cld
mov
idivb
repnz
add
imul
es
xchg
stos
dec
int3
mov
adc
inc
fucomip
jno
cmp
push
lods
pop
enter
sbb
ret
data16
aas
or
mov
das
xchg
jbe
inc
mov
rorl
jbe
es
fisubl
ret
cmpsl
xchg
lcall
std
icebp
sub
jg
pusha
daa
std
imul
mov
push
jno
inc
and
fwait
hlt
mov
and
pop
pop
enter
lods
rcr
ficoml
sub
dec
jecxz
push
mov
fucomip
add
pop
mov
jl
mov
add
out
daa
int
cltd
jecxz
je
lods
mov
clc
or
and
push
mov
mov
orl
xor
insl
addr16
push
and
ret
mov
xchg
lret
xor
cmc
xor
cli
add
or
outsl
mov
arpl
mov
dec
mov
cmp
ds
pop
dec
jne
flds
jle
movsb
cmp
jmp
sub
or
fiadds
push
insl
out
mov
out
movsb
lcall
cmp
sahf
test
jne
test
cmp
in
xchg
mov
cmpsl
mov
mov
push
repz
enter
or
push
fxtract
imul
aaa
and
lods
pop
arpl
fxam
fcompl
xchg
jo
ja
clc
lret
jns
sub
cmp
into
adc
dec
lret
xchg
and
addr16
pusha
push
cmovp
push
push
roll
xchg
nop
jbe
test
hlt
and
daa
test
xor
xchg
adc
sti
push
jno
mov
mov
xchg
sahf
vpmaxub
cld
gs
out
sbbl
xchg
decl
cmp
cmc
push
pop
jb
js
out
mov
cmp
mov
adc
mov
xlat
xchg
mov
mov
fcom
test
cmp
mov
inc
inc
pusha
inc
mov
sahf
lea
sub
sub
mov
mov
loop
xchg
stos
cld
decl
pop
dec
in
aaa
lods
iret
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
mov
sbb
and
sbb
cmp
int3
or
jp
cmp
sub
pusha
push
dec
sbb
cld
mov
xor
mov
ds
loop
dec
add
xchg
les
inc
dec
ja
fstps
inc
fcmovnbe
mov
mov
fiadds
xlat
mov
jecxz
subl
xchg
xchg
div
xchg
das
popl
cmpsl
pop
cli
xchg
xor
cli
push
dec
into
dec
cltd
adc
test
mov
xor
pop
mov
xchg
add
pop
dec
mov
repz
add
pop
dec
and
das
imul
mov
jne
retw
insb
aaa
pop
inc
lods
stos
jmp
fnstsw
addr16
xchg
jmp
aaa
and
push
cmp
mov
inc
scas
dec
maxps
push
cmp
in
sub
les
cmc
inc
pop
xchg
push
xor
mov
in
push
add
cld
pop
inc
icebp
mov
cs
xchg
test
adc
dec
mov
or
push
scas
arpl
or
and
cmp
or
mov
add
xchg
sub
ret
xchg
mov
lea
je
dec
jmp
inc
adc
push
popf
or
aad
sub
pop
sbb
insl
nop
in
test
or
aad
mov
repnz
dec
mov
pop
dec
mov
jecxz
sub
jbe
sub
nop
or
shll
pop
sbb
ljmp
mov
fidivrs
xchg
insb
push
sub
jmp
pop
cwtl
add
sub
push
inc
je
shll
arpl
xchg
xor
nop
mov
and
out
sbb
ja
inc
xor
je
sub
daa
sbbl
jg
sbb
mov
pop
lret
mov
sub
add
fcmovu
testl
mov
fiaddl
scas
movsl
mov
and
sbb
aam
inc
hlt
inc
xchg
out
pushl
movsl
mov
dec
adc
xchg
test
push
dec
out
push
pusha
jnp
push
add
insl
aad
adcl
dec
add
jno
xchg
add
xor
test
lahf
call
or
in
test
pop
mov
lcall
mov
add
lret
sub
sarb
cmp
mov
dec
push
adcl
ja
and
jnp
xchg
cmpsl
dec
out
cmc
dec
sbb
mov
sbb
mov
jmp
xor
scas
pop
dec
jmp
ljmp
ret
into
fwait
mov
push
call
and
mov
fistps
jno
movsb
fdivrl
jecxz
sub
aaa
push
scas
jnp
or
je
add
push
mov
test
popf
hlt
div
dec
push
out
mov
push
fldenv
inc
sub
push
fstpt
jnp
mov
shr
shr
jmp
and
push
sbb
push
hlt
xlat
mov
and
sbb
adc
cmpsw
sub
push
inc
les
inc
mov
sti
sbb
sahf
repz
mov
daa
mov
jno
jbe
xchg
jne
push
push
mov
push
cmpsb
dec
mov
ljmp
jnp
adc
cmp
insb
aaa
repz
push
and
int3
inc
sub
jae
sbb
mov
aam
sub
rcl
mov
mov
pop
mov
cwtl
test
inc
jp
lods
cmp
jle
movb
sub
push
stc
ret
ds
pop
mov
xchg
lcall
arpl
dec
jg
mov
adc
fcmovne
pop
popf
sub
inc
mov
pop
cs
push
popf
xor
mov
jecxz
je
mov
push
jbe
shlb
into
lock
pop
scas
sti
js
sti
adc
push
jo
stos
nop
pop
je
divb
dec
sbb
insl
sbb
arpl
out
cltd
sbb
sub
cmpsl
movsb
sbb
lahf
std
cmc
out
out
dec
adc
mov
pop
push
dec
push
mov
in
gs
fsubl
mov
sbb
ss
rolb
pop
sbb
or
imul
shll
pop
cmp
mulb
aas
lds
and
lret
xlat
nop
sarb
sbb
aaa
add
xchg
add
inc
repnz
dec
push
dec
mov
add
cmp
popa
test
mov
iret
das
lods
xchg
pop
dec
mov
xchg
into
gs
test
or
cwtl
push
pop
mov
adc
out
scas
and
jmp
sub
daa
shlb
mov
add
shl
jl
mov
push
rcll
xchg
lds
pop
ss
push
sub
ffreep
popa
lock
or
sub
out
or
sar
or
mov
cmp
push
aas
call
lcall
sub
outsl
pushl
shl
or
mov
mov
jo
std
sbb
out
notl
cmp
popf
or
mov
dec
add
call
and
mov
and
leave
pop
imul
or
jbe
xchg
das
add
pusha
sbb
stos
dec
test
mov
in
arpl
cwtl
sub
inc
fiadds
shlb
std
dec
mov
pusha
outsb
sub
jg
repz
and
cmpsb
aas
adc
repz
addr16
out
sub
in
and
dec
jle
or
std
cmp
inc
in
pop
pop
enter
dec
push
mov
pusha
call
dec
das
mov
mov
dec
aam
sbb
jns
mov
push
cmp
inc
das
jns
das
insl
cmpsb
mov
sub
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
shll
popa
sbb
and
sbb
in
adc
movsb
leave
cmp
or
and
mov
dec
int
shll
sarb
stos
dec
xor
rclb
jmp
std
dec
pop
std
in
imulb
pop
mov
or
push
flds
xchg
mov
aas
jns
and
pop
aad
aas
dec
cmp
mov
cmpb
ja
inc
sub
or
xchg
push
inc
inc
add
int
shll
pushf
in
lcall
add
add
repz
xor
mov
movsl
pop
std
testb
cmp
stc
mov
je
push
jge
push
sbb
cmp
ja
mov
outsb
js
sbb
popa
cmc
xchg
ficoms
andl
es
mov
or
xor
popf
xor
xor
mov
inc
dec
mov
flds
adc
leave
xchg
lret
lods
imul
dec
test
pop
xchg
out
stos
or
negb
ds
add
inc
cmp
imul
xor
int
sub
fiadds
adc
gs
jge
jns
lods
push
repnz
pop
mov
in
stos
and
adc
mov
xor
mov
push
push
add
outsb
and
sub
xlat
xchg
or
repz
push
pop
dec
mov
xlat
test
das
cmp
insb
lods
ret
push
les
xchg
jbe
lcall
add
lcall
aas
sbb
loopne
pop
adc
testl
roll
mov
or
jmp
imul
sahf
iret
push
out
mov
and
dec
jnp
popa
rol
fcompl
inc
inc
movsb
popa
repnz
ficomps
int3
push
sub
les
adc
cwtl
ret
cwtl
inc
jae
mov
jl
jge
insl
cmpb
sbb
and
sarl
js
or
ret
xchg
dec
pop
sbb
iret
and
mov
sbb
mov
repz
repnz
jg
loopne
es
test
lahf
pop
adc
cmc
lods
addr16
jle
inc
inc
sub
stos
pop
je
pop
jle
mov
add
xor
outsl
sbb
and
sub
mov
sbb
aas
loop
neg
int
cltd
dec
fwait
push
push
pop
inc
mov
jae
popa
pop
pop
in
push
fs
mov
sbb
loopne
cmpsb
ja
pop
pop
push
in
test
add
push
jae
and
jnp
sub
cmp
mov
add
rorb
ljmp
notb
fdivrl
sbb
pop
cmp
enter
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
repnz
pop
sbb
and
sbb
in
xor
jae
js
cmp
mov
or
cmp
mov
pop
cs
mov
out
sbb
shlb
fsubs
dec
adc
fnsave
mov
js
cmpsb
sahf
pusha
sbbb
je
iret
orb
arpl
stos
xchg
pop
push
jno
ret
xchg
aam
pop
lahf
lods
mov
lahf
gs
popa
xchg
xchg
fcoml
mov
adc
and
dec
ss
sti
mov
pop
sahf
fldenv
xchg
in
hlt
aam
fs
mov
adc
stos
sub
aad
pop
insb
clc
es
adc
scas
and
cmpl
cmp
dec
ja
mov
push
add
fdivp
inc
ss
mov
and
sub
adc
mov
call
push
adc
mov
cltd
push
xor
cmc
shlb
pop
enter
and
mov
loope
xorl
and
sahf
out
add
cmpsb
lds
push
push
xchg
fistpll
daa
add
mov
mov
lcall
add
cmpsl
das
jg
xchg
fsubrs
cld
in
fsubs
mov
pushf
out
ljmp
cld
iret
insb
push
push
leave
cmp
mov
sbb
stos
add
adc
adc
xor
adc
inc
pop
enter
out
xchg
cmc
popf
movsl
mov
sub
sub
je
in
mov
popf
pop
add
fs
outsl
loopne
push
mov
pop
cmp
loop
in
inc
rcrb
shrl
fdivl
adc
sub
xor
fcompl
fnstenv
push
sar
xchg
push
cmpsb
sbbl
or
sub
aad
icebp
sti
sti
outsl
pusha
cmc
aas
hlt
dec
xchg
mov
cmp
dec
fcoms
notb
cmpsl
popf
xchg
mov
fnstsw
or
mov
jo
cmp
pop
inc
xor
stc
jmp
daa
test
pop
std
int
pop
insb
inc
es
or
add
stos
cmp
jns
out
push
lret
out
aad
in
adc
lcall
jge
in
lods
mov
xchg
lods
add
shlb
nop
and
adc
ficompl
dec
jp
iret
ss
pop
mov
dec
mov
imul
imul
push
ss
and
jns
scas
push
stos
sub
push
jl
cmp
adc
dec
test
addr16
adc
aas
subl
push
mov
ss
subb
pop
mov
int3
ret
push
pop
add
mov
add
lret
cmp
ret
daa
stos
push
subb
add
add
adc
ja
jns
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
test
or
xor
sub
sahf
jne
push
sbb
les
inc
mov
sbb
jno
test
push
or
addr16
daa
jmp
mov
mov
into
sub
testb
mov
popa
cmpsb
mov
adc
icebp
mov
out
in
xor
dec
sub
pop
push
rcll
xchg
jae
test
loope
outsb
ljmp
jl
mov
push
lods
sbb
jecxz
push
sub
es
sub
lea
jmp
pop
mov
lea
cli
lds
lcall
cmp
mov
cmpsl
add
fwait
or
push
pop
in
shlb
jmp
lret
andb
rolb
movsl
bswap
and
out
hlt
xlat
sbb
into
in
out
pop
loope
mov
out
inc
leave
insb
mov
cltd
mov
mov
mov
enter
arpl
cmpsl
jae
adc
mov
aaa
jg
mov
push
imul
loope
aam
std
dec
jecxz
fcoml
jbe
insl
mov
outsb
jnp
adc
mov
jne
pop
fstl
dec
test
lods
add
je
push
push
pop
fidivrs
pop
inc
sbb
push
or
sti
cmp
cmpsl
popf
int
ljmp
jmp
mov
mov
mov
push
mov
leave
sbb
fstpl
mov
mov
nop
dec
adc
mov
and
mov
dec
pop
icebp
sub
mov
fwait
mulb
xor
das
push
stos
insl
dec
xchg
jae
lret
adc
in
xchg
call
das
adcl
scas
adc
jae
sbb
jne
daa
flds
out
sahf
jo
jnp
sbb
fstps
jge
xor
sbb
cmp
pop
mov
loopne
adc
ret
lret
dec
pmaxsw
mov
ficoms
int3
dec
lds
fcomps
mov
cmpb
nop
loopne
xor
das
mov
jl
add
cld
arpl
divl
inc
lahf
das
jbe
ljmp
test
test
xor
mov
dec
mov
cltd
cmp
insb
sub
mov
mov
les
imul
call
mov
shrl
add
adc
pop
popf
xchg
push
ds
cld
push
int3
xchg
cmc
fsubrl
xor
out
popf
leave
addb
push
scas
xchg
cmp
and
sbb
push
adc
in
mov
fyl2x
mov
ss
jns
imul
jle
xchg
adcb
js
or
out
mov
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
mov
push
mov
imul
stc
xchg
mov
mov
sahf
inc
mov
jo
repnz
insl
sbb
add
lods
inc
adc
mov
leave
jns
jmp
mov
test
xor
dec
inc
adc
inc
test
imul
hlt
lds
or
push
movsl
inc
gs
addr16
incl
jp
mov
int
jno
mov
push
or
les
bound
sub
ror
add
sahf
imulb
jle
add
popa
in
xorb
imul
xchg
mov
jmp
pop
repnz
mov
out
lahf
lods
push
and
ret
scas
xchg
rcl
pusha
push
pop
mov
push
or
fwait
aas
cmp
pop
rep
sbb
daa
test
aas
cmpsb
push
xchg
rorl
sub
pop
pop
push
push
sub
aad
dec
xchg
icebp
jmp
hlt
cmpb
bound
cld
scas
stos
sarb
pop
xor
pusha
xchg
add
imul
test
mov
cmpsb
sub
pop
pop
icebp
cmc
sub
and
mov
mov
mov
aam
out
jne
dec
pusha
and
or
mov
inc
orl
jl
dec
fwait
scas
sub
mov
fildl
pushf
lea
fwait
imul
enter
fimuls
icebp
pop
lds
aaa
and
jo
xchg
jbe
test
int3
aad
ljmp
jp
test
call
ds
xchg
xor
outsb
popf
cmpsl
xchg
insb
xlat
fsubl
lock
int3
push
mov
sbb
hlt
inc
pop
dec
out
sbb
je
leave
push
enter
call
cmp
dec
fwait
xchg
les
sub
sub
push
push
nop
sti
into
inc
dec
jbe
lods
cltd
sub
sbb
cli
shrb
insb
subb
push
jmp
stos
adc
xor
push
aas
push
das
cmpb
sub
jns
xor
gs
cmp
and
stc
pop
stc
sbb
and
lds
pop
gs
and
cmp
mov
mov
loop
xchg
scas
js
mov
dec
or
test
outsb
push
dec
add
test
in
dec
or
pop
aaa
pop
jno
cmp
sbb
mov
sar
in
mov
pop
xor
jns
insb
jnp
mov
push
jl
out
icebp
mov
aaa
std
push
aaa
and
pop
fisubrl
idivl
pop
das
adc
push
ror
mov
loop
jnp
out
cmc
xchg
rcll
xor
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
inc
cld
mov
add
sbb
test
mov
jb
cmp
sti
xlat
fldenv
std
repnz
add
hlt
mov
jle
dec
mov
dec
repz
popa
push
pop
fildl
inc
pop
sub
hlt
fists
add
push
aam
or
cmp
jmp
dec
adc
aam
jge
jg
mov
lcall
les
mov
cmpsl
enter
and
add
pop
jle
push
lea
orl
jl
sub
mov
popa
mov
add
xlat
sbbb
mov
fcompl
or
mov
mov
pop
cmp
dec
out
sub
adc
data16
mov
mov
inc
cmpsb
mov
das
ljmp
mov
mov
mov
mov
jb
cwtl
lock
loope
sub
push
loopne
mov
aam
add
ljmp
imul
mov
xchg
out
adc
inc
out
add
xchg
sub
out
test
push
dec
ficompl
jl
inc
mov
nop
jecxz
mov
pop
mov
jbe
mov
aad
push
loopne
dec
call
mov
adc
adc
into
scas
cmc
repnz
mov
sbb
movsl
fisttps
cld
je
or
lods
push
sub
cmp
cmp
loopne
and
shll
pop
push
sbb
mov
mov
push
pop
into
lcall
ret
adc
and
pop
pop
faddl
mov
and
sub
sbb
sub
fistps
in
std
mov
pushf
movsb
push
daa
ret
or
mov
add
roll
outsb
dec
jne
subb
jno
fld
jmp
push
icebp
cmp
adc
and
rcrl
fs
and
pop
cmp
pop
add
into
shl
pop
inc
divb
jnp
push
stc
loopne
sbb
mov
fdivl
and
outsb
in
push
lods
sbb
sub
icebp
mov
push
mov
dec
dec
fildl
xchg
mov
dec
icebp
xchg
mov
pop
sub
ja
mov
pop
push
pop
lds
mov
or
fadds
cmp
enter
add
sub
out
adc
push
sub
imul
aaa
mov
shr
cld
aaa
lcall
sar
test
xor
inc
mov
cmp
fwait
jle
int3
xchg
xchg
inc
adc
jb
add
frstor
inc
mov
or
mov
lret
lret
push
dec
loop
loop
addr16
ljmp
call
in
dec
repz
mov
inc
int
loop
push
cmpsl
imul
out
into
sbb
sbb
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
movsl
or
sbb
adc
sbb
push
int3
dec
jle
shrb
dec
mov
mov
mov
push
jecxz
outsb
adc
and
and
mov
rorl
in
cltd
call
adc
fdivrs
jns
sbb
xorl
mov
mov
jae
sbb
roll
adc
add
mov
out
pop
xchg
cs
lcall
lcall
xor
repnz
mov
cmpsb
imul
jmp
repz
aam
std
add
jmp
fdivs
cmp
add
pop
dec
push
or
faddl
div
mov
or
pushf
fidivrl
inc
neg
iret
fsubs
adc
xchg
push
loope
bsf
imulw
xchg
scas
shrl
jns
in
jae
fldcw
leave
push
aam
jp
daa
int3
mov
jecxz
push
pop
xor
mov
sub
sahf
xchg
xlat
dec
mov
clc
adc
pushf
in
push
or
adc
cs
je
sbb
dec
ja
sub
pop
xchg
mov
jmp
into
mov
pop
push
xchg
pushf
es
mov
pop
mov
push
popa
sub
insl
stc
insb
stos
pop
mov
jle
xchg
movsl
add
push
push
jbe
imul
add
dec
mov
fidivrs
push
outsb
sbb
jp
das
js
ljmp
iret
testb
pop
mov
lods
add
mov
fistpll
rcl
clc
push
sub
mov
xchg
fpatan
or
sub
subb
mov
inc
out
inc
and
or
into
sub
xor
xchg
fmul
adc
ja
addr16
dec
jp
mov
inc
shlb
loope
popa
ljmp
std
out
jmp
xor
daa
jnp
pop
out
push
jle
fdivs
call
rclb
sub
push
jbe
aad
lods
leave
pop
repz
test
iret
lret
andb
pop
push
jbe
and
aaa
mov
iret
jg
loopne
inc
add
pop
iret
and
int3
shlb
and
out
imul
aad
fdivr
push
or
ja
mov
push
scas
dec
stos
jmp
mov
call
adc
daa
fwait
mov
adc
add
ds
jne
ja
push
pop
in
aaa
in
cmp
mov
icebp
xor
ret
fildll
push
data16
adcb
mov
xchg
push
sti
mov
scas
pop
out
jle
or
mov
push
add
pop
fsubrs
scas
sti
xchg
fdivs
sbb
js
gs
cld
outsl
mov
adc
pop
je
stc
xchg
or
mov
mov
add
adc
mov
cmp
inc
rorb
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
xchg
insl
mov
cmp
sbb
or
das
mov
scas
roll
adc
jecxz
pushf
xlat
pop
ret
ja
add
pop
push
fwait
stos
or
sbb
int3
sub
stc
ljmp
lahf
mov
insb
push
mov
or
inc
push
adc
xor
add
fs
mov
popa
fsubrl
sbb
xor
push
fs
or
or
inc
jmp
in
sahf
push
sub
pop
cmp
mov
push
pop
cmp
leave
sbb
call
data16
cmp
rolb
and
and
pushf
je
repz
mov
dec
stos
test
or
test
imul
movsl
faddl
lret
dec
inc
fstpl
cmp
jp
mov
fwait
outsl
pop
adc
and
subb
xor
push
xor
inc
mov
add
mov
inc
jbe
adc
and
mov
add
cmp
cwtl
icebp
mov
repnz
mov
loopne
and
test
sbb
sbb
cmp
mov
call
lret
add
lock
jno
jg
and
fwait
dec
xchg
or
lock
pop
xor
xor
mov
push
inc
dec
xchg
inc
mov
mov
cmc
mov
mov
scas
xor
jae
jo
adc
mov
clc
cmp
out
test
inc
inc
mov
adc
pop
pop
push
out
sbb
pop
add
push
out
jno
int3
cld
lods
sbb
mov
mov
cli
repnz
loop
xchg
jge
lds
fwait
cmp
fstpt
faddp
aas
mov
jge
adc
and
push
in
mov
jns
adc
fmull
cld
dec
outsb
test
pushf
pop
inc
sub
pop
jecxz
cli
mov
push
lret
imul
ficoml
fcompl
mov
xchg
inc
pop
xor
lods
sahf
xchg
sbb
mov
sbb
mov
jae
inc
out
mov
fmulp
scas
cli
dec
pop
sub
nop
mov
arpl
or
sti
scas
daa
push
fidivl
mov
mov
lods
adc
je
mov
dec
inc
rorb
scas
bound
sbb
leave
add
lods
mov
es
mov
daa
adc
xchg
lret
das
push
mov
negl
stos
or
jecxz
insb
jne
pop
inc
mov
idivl
adc
xlat
insl
sbbl
pop
jmp
cltd
and
je
dec
sbb
or
in
jmp
aas
lock
cmpl
add
insl
cmp
cli
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
adc
sbb
adc
sbb
and
mov
lods
repnz
mov
jns
xor
mov
inc
ds
gs
mov
mov
mov
sarl
bound
enter
pop
push
mov
into
or
lods
inc
sar
ljmp
adc
mov
adc
jle
test
or
pandn
sbb
sub
lds
sti
ret
adc
fisttpll
sub
mov
cmpsb
shll
outsl
sub
pop
dec
scas
cld
adc
arpl
jle
pop
roll
mov
rolb
ret
adc
sub
dec
push
outsl
push
lahf
adc
sbb
fcoms
dec
in
sbb
and
dec
cs
inc
mov
std
mov
sub
jg
cs
outsl
sub
ds
cmpsl
out
xchg
push
mov
lret
and
dec
add
cmpsl
fimuls
inc
sub
inc
push
jl
negb
add
or
ss
jnp
push
and
mov
jge
test
jl
clts
mov
mov
std
mov
inc
inc
add
cmpsb
jmp
jg
stos
pop
inc
pushf
cwtl
mov
cmpsl
imul
pop
mov
nop
jbe
push
mov
loope
push
call
or
cs
xor
sbb
lods
jl
mov
pop
rcrb
and
cmp
in
int
cmpsb
cmp
and
test
mov
pop
test
punpckhdq
fimuls
xchg
fdivl
sahf
mov
and
xor
daa
xor
ret
dec
ret
out
push
dec
jne
cmp
out
sahf
popa
sub
pop
pushf
cmpsl
js
jns
repnz
dec
dec
loope,pt
and
pop
jb
fisubs
into
fnsave
inc
jecxz
andl
insb
push
dec
inc
popa
pop
fs
jmp
or
cmp
xchg
push
sbb
pop
pop
pop
leave
sbb
movsl
xor
pusha
inc
outsb
xchg
fxch
jecxz
mov
and
xlat
in
pop
repz
or
dec
outsl
push
add
inc
test
call
inc
jo
imul
add
enter
cwtl
sbb
movsl
inc
jge
xchg
push
push
nop
out
push
repz
sub
xchg
into
inc
jecxz
loopne
push
jle
sub
jg
xor
jecxz
sbbb
jge
pop
stos
lods
lahf
mov
sub
iret
cld
pushf
sub
fimuls
mov
push
in
inc
into
and
cs
lock
cltd
pop
stos
cld
cmp
jae
popaw
xorb
test
loope
sub
xor
fwait
sbb
and
sbb
mov
xor
xor
rcll
adc
ret
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
push
jle
xor
sbb
adc
sbb
lods
idiv
push
dec
vpmacssww
mov
andl
push
push
inc
repnz
inc
push
and
mov
push
in
aas
loop
rclb
stos
dec
ljmp
xchg
cmp
pop
sub
or
insb
lods
mov
fwait
mov
mov
or
fs
call
jnp
and
or
pop
rcrb
dec
or
mov
cmp
jp
test
mov
rorl
dec
in
xor
pusha
cmpsb
mov
cmpb
nop
jns
cwtl
popf
iret
out
xor
test
dec
mov
xor
movsl
icebp
cmpsb
xor
cmp
imul
mov
icebp
push
and
int
mov
in
ja
insb
sar
shr
int3
xor
mov
call
cmp
xchg
mov
pop
mov
ja
and
out
addr16
nop
call
lock
or
mov
sar
sbb
cmc
outsl
push
mov
jno
movsb
jmp
ftst
or
adc
iret
pop
jmp
sbb
xchg
sbb
and
add
or
jno
and
sub
addl
mov
insl
inc
push
jbe
shlb
add
fstpl
cmp
mov
dec
imull
inc
pop
jb
stos
mov
mov
rcll
decl
cmp
mov
push
faddl
movsl
testb
xor
stos
xor
mov
lret
sbb
iret
cmc
sub
jp
add
je
js
adc
pop
cmp
adc
and
imul
outsl
cmpsl
arpl
inc
int
pop
jle
lcall
into
jge
shll
cwtl
inc
or
lea
scas
xchg
sub
xor
or
sbb
add
mov
mov
xor
pop
xchg
xchg
cmp
jno
popf
inc
jb
rclb
rclb
sti
add
clc
cmpsb
repnz
push
iret
cmp
leave
ds
push
pop
mov
std
add
sub
out
mov
rol
bound
je
xchg
sbb
push
rcrb
jno
insl
icebp
pop
lret
test
js
sub
sub
shll
inc
sub
cltd
mov
leave
shll
inc
jb
pop
leave
lret
pop
push
cmp
push
fs
mov
jp
popa
jb
push
out
std
jo
xor
push
push
xchg
lret
push
int
push
seta
cmpsl
dec
or
jg
cld
jge
push
in
sbb
sub
aaa
incb
fstp
notl
and
xchg
push
int
mov
call
rcrl
dec
pushf
stos
jbe
lods
notb
loope
inc
mov
pusha
mov
inc
mov
gs
test
leave
lcall
push
jmp
add
push
sbb
ja
mov
sub
sbb
adc
sbb
lods
mov
pop
rolb
mov
push
add
add
jg
sub
mov
inc
mov
into
rolb
push
inc
push
adc
fwait
cmpsb
cmp
bound
jg
inc
jmp
sbb
out
cwtl
adc
in
leave
sub
fnsave
xor
jno
dec
push
cli
pushf
adcl
mov
inc
daa
push
imul
es
inc
jg
xchg
mov
adc
shll
fidivl
ret
push
inc
jne
pop
mov
pop
and
andl
add
test
mov
mov
jb
aad
fisubrl
lcall
pusha
xchg
neg
std
imul
cmp
jge
xchg
sbb
and
test
popa
push
push
shll
lahf
inc
stc
gs
push
adc
dec
mov
dec
push
out
int3
sub
cmp
or
push
xor
xchg
sub
test
sbb
mov
jnp
xlat
aam
and
icebp
adc
jecxz
push
mov
loop
push
and
dec
enter
pop
pop
mov
xor
jl
mov
mov
nop
push
mov
aaa
int
jne
mov
inc
pusha
fldl
stos
mov
push
in
push
xchg
pop
push
les
fisubl
jp
pop
sbb
pop
nop
mov
xchg
loope
dec
pop
xchg
cld
and
cltd
rcrl
test
inc
cmp
xor
int3
mov
fstl
bswap
inc
scas
push
lods
jne
jo
les
aad
outsl
out
pop
or
scas
inc
cli
std
inc
adc
mov
jmpw
jg
pop
and
and
dec
xchg
je
xor
inc
inc
mov
out
sub
lret
pop
inc
shr
fdivr
sub
inc
inc
lcall
and
test
fidivl
fstpt
or
test
and
cmp
je
loopne
add
fwait
mov
rcl
xchg
and
fsubl
pusha
push
mov
push
cmp
pop
lea
xchg
movsl
scas
setns
sub
jmp
aam
arpl
pop
cwtl
outsl
fsubrl
aad
inc
fbld
mov
sar
xorl
nop
cwtl
or
push
pop
cmpsb
mov
arpl
addr16
jno
push
sbb
jno
xor
cltd
lods
stc
fcomi
inc
lds
fldl
in
dec
and
iret
xchg
cli
lretw
jno
adc
add
rclb
mov
jns
mov
mov
cltd
loop
out
push
roll
mov
icebp
nop
sahf
cmpsl
push
loope
lds
cmp
cmp
loope
int3
pushf
mov
imul
cmpsl
gs
jg
jle
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
std
push
stos
mov
adc
sbb
or
stos
dec
mov
test
mov
mov
mov
movsl
adc
xchg
jo
mov
inc
cmp
push
inc
jecxz
sbb
scas
cmp
dec
dec
ljmp
or
mov
ss
or
insb
sub
fsubl
add
ds
movsb
out
push
cwtl
ret
mov
mov
xchg
mov
pop
sahf
mov
loope
mov
bound
mov
arpl
sub
in
arpl
das
pop
stos
ret
js
icebp
xchg
lret
mov
aam
push
frstor
jmp
and
lock
mov
insb
gs
lret
aam
cmp
jg
sub
sbb
test
dec
loopne
xchg
idivl
push
aad
outsb
inc
addr16
and
jle
inc
test
xchg
dec
pop
inc
add
mov
add
cmp
pop
inc
sbb
hlt
rcr
scas
and
lods
daa
sub
xchg
dec
or
cwtl
xor
bound
test
xor
inc
sub
push
adc
movsb
in
stos
xor
jne
push
xchg
sbb
daa
adc
ficoml
mov
int3
mov
sub
js
repz
cwtl
mov
push
push
push
mov
and
nop
add
mov
cmp
add
cmpsl
mov
sarb
movsl
jl
jno
mov
aas
bound
adc
outsl
das
mov
inc
mov
hlt
mov
lea
lds
cmp
xchg
insl
insl
sub
dec
rcrl
int3
aad
xchg
adc
adc
shll
ljmp
sbb
jno
dec
scas
aam
andl
xchg
xchg
iret
push
cmp
jb
cs
rcl
fnsave
sbb
test
xor
int3
and
pop
insl
out
hlt
and
or
es
xchg
or
pop
jno
js
aam
push
push
test
dec
rorb
sarl
faddl
jb
or
sbb
inc
dec
dec
inc
xorb
xchg
fdivr
xchg
mov
mov
cwtl
fucomp
int
xchg
out
orl
jns
xor
and
xchg
daa
dec
sbb
xorb
cli
and
jb
data16
mov
xchg
or
out
adc
mov
jne
and
aas
sbb
imul
sbb
sahf
test
or
dec
mov
and
aam
pop
enter
sahf
and
and
repz
fnstsw
mov
add
mov
pop
popf
int
sub
shl
addl
add
xor
gs
fisttpl
adc
loop
fsubrs
lcall
faddl
int3
xchg
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
int
stos
mov
sbb
add
sbb
push
dec
adc
lods
test
cmp
or
mov
inc
mov
call
imul
add
xlat
mov
mov
jecxz
pop
cmp
enter
notb
adc
out
in
inc
push
lret
lock
push
in
dec
push
sbbb
test
lods
inc
mov
cmp
pop
xorl
cmpsb
faddl
adc
or
fcoms
jge
not
lret
ljmp
push
mov
sarb
in
xchg
and
xor
lret
mov
icebp
jmp
std
jns
orl
sub
xchg
jnp
sub
je
sub
imul
add
push
pop
lcall
jmp
add
jl
xchg
popa
xchg
mov
out
mov
sbb
js
push
roll
mov
loopne
jbe
popa
add
jb
mov
cmp
les
mov
mov
ror
stos
leave
loope
adc
xor
push
nop
bnd
mov
inc
mov
or
mul
pusha
or
subb
push
les
cmc
adc
adc
push
je
inc
movsb
movsb
xor
xor
fcmove
cmp
icebp
insb
fdivrs
mov
sub
sbbb
aad
add
cmp
xlat
pop
and
sbb
das
or
sub
adc
aad
test
sahf
push
cli
or
into
adc
adc
push
bound
dec
dec
and
xor
shl
fwait
or
add
sub
inc
cmp
sahf
jno
lret
inc
xchg
mov
in
jl
jbe
push
adc
in
daa
adc
pushfw
mull
jo
push
adc
sub
or
add
enter
lea
sub
sub
xchg
and
mov
movsl
insb
mov
mov
push
rolb
mov
outsb
cli
push
sub
jl
jo
and
add
adc
pop
rclb
rolb
shl
xchg
push
sti
rol
and
sbb
cmpsb
push
xchg
cmp
xor
or
mov
outsl
cmp
cs
xchg
ficompl
imul
jbe
bound
or
int3
fmulp
stos
pop
inc
icebp
push
xlat
inc
mov
add
mov
loope
xor
pop
imul
dec
sub
or
and
hlt
je
leave
jno
dec
lods
and
mov
jb
outsb
push
sub
pushf
add
das
pushl
or
mov
in
out
mov
pusha
sub
xchg
dec
lret
sub
pop
dec
mov
aad
aam
jp
loop
cli
jmp
mov
scas
mov
sub
xor
xchg
or
loop
lret
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
sbb
sbb
adc
sbb
mov
pop
insb
or
jns
lahf
movsb
dec
mov
jns
in
adc
mov
mov
incb
or
fistpll
cld
cmp
adc
stc
stc
out
push
cmp
mov
inc
out
jbe
scas
jns
push
inc
mov
mov
pushf
inc
pop
push
cmp
push
inc
shrl
or
out
movsb
lods
cmp
fstl
or
inc
and
adc
and
fwait
xor
arpl
loopne
repz
cmc
arpl
xchg
shll
inc
lea
mov
jne
das
jne
mov
shl
sti
add
call
lret
or
xor
ja
sub
repnz
cmp
pop
ja
pop
push
mov
loope,pt
adc
inc
and
cmc
sub
cwtl
add
mov
decb
icebp
dec
fidivl
lea
pop
push
sub
jae
pop
lahf
mov
push
aaa
push
push
mov
fnsave
aaa
mov
jecxz
rcrl
bound
jmp
pop
dec
lret
and
push
add
mov
popa
mov
fildl
fdivrp
test
add
sbb
cmpsl
lds
or
mov
cmp
cmc
adc
mov
ljmp
pop
seto
pop
push
mov
jecxz
hlt
je
dec
cmp
and
mov
cmp
test
pop
mov
or
pop
ja
push
les
cmpsl
push
cmpsb
push
inc
or
jl
mov
xchg
xor
sbb
or
arpl
fsts
sub
jb
es
mov
in
das
add
sti
in
aaa
leave
faddl
ss
mov
sahf
imul
movsb
out
mull
andb
call
sbb
movsl
imull
pop
mov
mov
ljmp
cmpsl
sbb
idivl
inc
loopne
xor
daa
aaa
arpl
in
push
mov
mul
ja
inc
push
mov
inc
push
adc
scas
iret
pop
sbb
es
jne
stos
icebp
mov
mov
fwait
jecxz
xchg
mov
mov
mov
mov
inc
aas
adcl
jge
idiv
and
leave
pop
ljmp
fisttps
mov
jmp
pop
sub
sti
pop
bound
test
sub
or
shlb
sbbb
es
sbb
push
push
lret
push
lock
sbb
xor
lret
iret
outsl
in
cmpl
inc
cmp
push
jecxz
and
pushl
dec
daa
out
pop
lret
add
xchg
mov
inc
rcrl
lods
sbb
sub
mov
jno
ds
stc
fbstp
xor
pop
sahf
xor
data16
imul
push
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
fsts
mov
add
sbb
shl
negb
test
andl
dec
jo
repnz
ja
cmp
loopne
repnz
mov
int
mov
sahf
adc
out
mov
gs
pop
xchg
cmpl
insb
pop
cmpsl
adc
mov
mov
mov
gs
int
sarb
cmpsb
sub
cmp
pop
stos
jmp
mov
push
dec
xchg
fdivl
xor
outsb
push
xchg
insb
cmp
shrl
flds
dec
fs
or
movsb
dec
bswap
ret
cltd
sti
mov
xchg
out
stos
pinsrw
pop
sarb
fildll
push
mov
pushf
mov
jbe
stc
insb
mull
cmp
jmp
cmc
in
cmp
cmp
push
ljmp
jg
fnsave
jge
jo
sahf
sub
cmp
pushfw
das
add
sbb
daa
inc
ret
notl
pop
lcall
aaa
outsb
xchg
daa
icebp
test
jo
ss
iret
mov
int3
xor
or
xchg
dec
sub
fstpl
pop
adc
orb
mov
neg
loop
mov
scas
int3
arpl
push
mov
mov
cld
inc
cmp
jbe
shrl
popf
dec
lods
pop
sub
xchg
inc
mov
cmpsb
pushf
jbe
call
cmp
sub
push
inc
mov
fs
cli
adc
mov
cld
or
or
dec
es
xchg
repz
shrl
enter
ss
jne
add
mov
inc
adc
iret
mov
dec
shlb
out
push
or
in
addr16
xor
fists
std
and
test
fists
hlt
or
sbb
popa
mov
inc
cmpsb
ljmp
dec
aas
dec
js
adc
inc
int3
insl
xor
in
jo
mov
push
sbb
push
fdivrl
lret
aam
mov
jns
enter
mov
stos
jmp
mov
lock
xor
fs
inc
adc
push
call
push
cmp
xor
lea
fsubrs
pop
int
jmp
jge
cmpsb
adc
lea
movb
js
aam
aam
add
push
push
jle
jle
cwtl
ret
loope
push
mov
inc
mov
das
jmp
aaa
and
dec
dec
xor
fisubrl
or
jp
std
xchg
sbb
enter
jnp
jns
sbb
xchg
js
adcl
mov
jno
pop
xor
mov
mov
sbb
inc
int
fisubl
push
xchg
clc
or
sub
sub
aad
cmp
in
inc
pop
fdivrs
setb
inc
mov
push
cld
dec
cmp
sbb
or
fisttpl
nop
sbb
fwait
cwtl
xchg
hlt
repz
andl
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
js
mov
or
sbb
dec
pop
cmpsl
das
jl
dec
mov
cmpsl
push
cwtl
arpl
out
in
sbb
inc
xchg
jbe
mov
outsb
push
mov
pop
jbe
ja
out
or
dec
mov
jle
dec
clc
mov
or
lcall
aaa
in
adcl
push
clc
into
mov
sub
inc
mov
mov
mov
rcrb
outsl
les
mov
sub
jmp
xor
sahf
aad
sbb
add
xor
cvtps2pi
outsl
fsubl
clc
sub
mov
sub
hlt
negl
xor
mov
jae
cmp
add
ret
cs
iret
daa
mov
sbb
aad
fnstenv
sub
ret
test
cmp
movsl
nop
into
mov
pushf
jo
push
sbb
fs
xlat
fists
and
clc
or
leave
jge
sub
cmp
jge
mov
adc
pop
jb
test
push
push
jnp
jnp
pop
dec
movsb
or
push
insl
jl
add
test
mov
adc
pop
pop
adc
cmp
jb
cmpsb
mov
xor
out
mov
mov
call
popa
and
insb
sbb
rcll
or
adcl
jmp
jge
inc
mov
test
cmp
lret
and
pusha
and
fdivp
cmp
das
pop
cmp
and
neg
insb
popf
mov
cwtl
mov
mov
movsb
add
inc
jb
jns
repnz
push
sbb
test
arpl
push
leave
and
mov
shlb
jg
out
lock
daa
sub
push
adc
out
dec
dec
or
xchg
xchg
cmpsl
sub
imul
dec
add
jp
outsl
cmp
and
sbb
jne
adc
stos
push
out
loope
shr
mov
xor
imul
xor
les
enter
test
xchg
stos
jnp
inc
pop
adc
aas
aaa
mov
xor
stc
adc
add
push
iret
fwait
adc
cmp
mov
call
sbbb
jmp
push
daa
dec
adc
sbb
jbe
jge
idivl
mov
clc
jne
push
nop
arpl
inc
loop
shlb
popf
push
sbb
test
adc
pusha
leave
lods
mov
mov
shr
dec
std
dec
fnsave
mov
jge
pusha
in
out
pusha
mov
out
mov
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
movsl
pop
stos
rolb
sbb
test
sbb
imul
ljmp
mov
sub
lcall
xor
scas
dec
inc
outsl
leave
imul
add
cmp
jecxz
cmp
dec
and
dec
and
jo
inc
das
test
adc
mov
fidivrl
daa
add
mov
jmp
arpl
dec
testl
and
inc
mov
aaa
jne
icebp
push
dec
push
push
das
pop
and
inc
sub
out
cmp
dec
and
mov
xchg
jecxz
in
cmp
adc
xchg
je
sub
dec
mov
addl
cli
sub
ss
lods
call
push
insl
jl
es
inc
and
xchg
pop
add
mov
cmp
or
ret
lods
dec
push
xchg
cmp
push
dec
fcoms
subb
gs
ds
sti
jb
outsl
fstl
test
nop
dec
pop
add
push
pop
pop
fisubl
lock
dec
je
stc
jno
push
mov
adc
mov
sbb
fildll
addl
mov
cmp
aam
in
sub
jae
cmp
push
mov
fcoms
mov
movsw
aad
daa
cmp
dec
cmp
cmpsb
mov
sub
sub
jbe
shr
arpl
jae
lahf
sbb
sbb
dec
and
mov
insl
mov
mov
mov
xchg
and
xchg
mull
fistl
inc
mov
sti
mov
dec
mov
cmp
cmpsb
imul
out
lds
out
in
and
pop
inc
fstpl
xlat
push
mov
adc
pop
jns
fldcw
pop
add
jecxz
cmpsl
cltd
movsl
cmp
incl
xor
mov
test
push
sti
push
stc
xlat
sbbb
fadds
mov
lods
outsl
mov
mov
loop
fcmovnu
paddb
inc
fldt
mov
cmp
cld
pop
fdivl
push
popa
fcmove
mov
fstpl
out
mov
sub
cmc
sbb
out
xor
ljmp
jb
insl
outsl
insb
das
xchg
lock
lret
sbb
loop
inc
je
outsl
xchg
adc
lret
test
mov
pop
mov
jns
das
lods
lock
adc
jp
pop
mov
dec
and
aam
inc
jo
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
fwait
imulb
add
sbb
push
xchg
sub
sub
das
cmp
cld
pop
xchg
pop
movsb
mov
push
lret
cmpsl
xor
repnz
popf
cmc
lods
xchg
mov
sub
pop
pushf
push
daa
push
imul
pushf
or
or
psrad
inc
aam
movsb
rorb
mov
lret
push
xor
cmp
cmp
test
inc
imul
push
inc
and
push
add
jo
cmp
xor
dec
bound
lretw
data16
and
mov
cmpl
lahf
stos
mov
jae
xchg
pop
loopne
push
xor
jmp
test
sub
cld
pop
xchg
mov
repz
ds
sbb
adc
jns
imul
lea
cltd
cli
sub
cli
je
daa
mov
inc
out
daa
push
pop
cmc
scas
les
stos
pop
cs
mov
in
fiadds
push
jmp
pushf
je
mov
sub
orl
add
insl
inc
movsl
push
aad
fistpl
enter
dec
cmp
mov
inc
cld
lcall
imul
in
cmp
lods
push
sbb
pop
add
test
dec
shl
cmp
pop
dec
cmp
loop
std
out
pushl
call
mov
pop
ficoml
fildl
sub
dec
aad
cmc
or
test
insl
and
mov
roll
popf
addr16
jno
js
jne
xor
and
lret
idiv
dec
jae
jnp
lret
lret
xor
mov
into
enter
in
xor
lock
adc
mov
lock
loop
inc
cmpl
add
or
dec
mov
aas
lret
sub
loopne
adc
inc
mov
push
adc
out
inc
and
in
leave
jle
cmp
add
xchg
or
aad
cmp
push
jo
jnp
jo
xor
sbb
push
out
xchg
mov
fmuls
xchg
icebp
mov
stos
lods
test
and
xor
jns
push
mov
iret
adc
loopne
sbb
pop
pop
fsts
mov
cwtl
loope
ret
les
and
cwtl
and
jo
sbb
mov
push
mov
repz
or
test
dec
out
mov
rcrl
repnz
lods
fwait
cmp
minps
fs
or
mov
cmpsl
mov
test
push
stos
mov
fmuls
scas
ret
or
add
sarb
lret
mov
ljmp
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
cltd
xchg
mov
test
sbb
popa
loopne
fistpll
sti
dec
imul
aad
iret
in
ret
mov
test
repnz
dec
jp
mov
add
int3
imul
cld
cli
in
inc
mov
stos
sahf
arpl
jno
mov
rcrb
pusha
cmp
repz
jb
dec
pushf
pop
mov
or
daa
lock
aaa
out
pop
movsb
lods
sub
popl
sbb
mov
inc
loope
mov
cmp
cmp
shlb
jge
outsb
push
repz
fistl
in
and
ficoms
xchg
add
pop
xchg
sbb
mov
jno
hlt
or
aas
jecxz
lods
ja
mov
out
mov
xor
cmp
fsts
cmpsl
xor
xlat
add
fldcw
gs
lea
shll
and
jl
insb
push
shr
mov
pop
pop
imul
push
cmp
nop
or
testb
out
stos
jmp
jb
xchg
push
sbb
mov
add
arpl
in
ljmp
sbb
hlt
clc
inc
mov
xor
pop
fwait
inc
arpl
outsb
ljmp
cmpsl
shll
mov
loopne
scas
or
test
jbe
mov
jl
mov
inc
sub
xor
jge
pop
xor
push
aas
pop
cmpsl
enter
mov
jmp
cmc
adc
xor
push
xchg
mov
dec
or
pop
adc
cmp
scas
xor
hlt
mov
push
xchg
or
fiaddl
jbe
js
movsb
or
jge
mov
adc
das
add
dec
movsl
sbb
daa
mov
call
sbb
jl
jecxz
inc
sub
xchg
xchg
sbb
jae
xchg
mov
mov
fildll
pop
xor
mov
je
cmpsl
imul
push
aas
lods
sbb
sub
mov
loop
scas
aas
nop
ret
sbb
pop
mov
or
sti
add
lds
sub
cmp
lods
sbb
mov
xchg
cmp
jno
pop
and
popa
xchg
pop
xor
cld
js
xor
rcr
lret
lods
iret
mov
stos
xor
cmpsb
and
sub
pusha
lods
call
xor
push
gs
int
ret
movl
mov
add
or
mov
pop
push
cmpsb
iret
xchg
pop
dec
bound
sarb
popa
inc
scas
pushf
std
jbe
fcoms
js
ret
es
inc
sub
rol
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
inc
es
stos
xor
sbb
daa
push
daa
xchg
repnz
addr16
sub
or
and
jns
mov
push
push
idivl
cmp
jl
and
in
push
push
movsb
test
and
faddl
xchg
pop
or
out
dec
and
push
sub
fstpl
and
xchg
aam
in
jle
jb
rolb
push
insl
add
pop
stc
mov
shll
ss
and
imul
data16
or
pop
push
jae
shlb
clc
aas
stc
subb
fidivl
or
xchg
enter
jnp
mov
xor
sbbl
out
mov
push
or
and
sub
in
mov
pusha
mov
xchg
adc
adcl
lret
push
fists
mov
xor
aas
xchg
adc
pusha
es
out
adc
xchg
mov
call
cli
pop
loope
cli
or
cmc
adc
push
jbe
dec
hlt
repz
repnz
out
sub
jnp
push
xchg
mov
push
xor
pop
dec
test
dec
and
push
hlt
mov
in
pop
jle
cmp
xchg
mov
int
fsts
xchg
sarl
mov
inc
nop
xchg
and
dec
call
adc
push
test
test
push
push
xchg
push
lock
movntq
insl
xchg
int3
jne
loopne
pushl
push
xor
xlat
daa
cmc
outsl
incl
and
pop
xchg
int
sub
in
mov
adc
outsb
ret
in
aaa
jno
out
or
mov
ljmp
push
pop
les
sub
jo
jmp
mov
sub
in
sub
sub
shll
inc
lahf
cld
xchg
pop
mov
add
enter
test
mov
and
test
aaa
iret
int3
pop
mov
mov
add
aam
test
jge
dec
sbb
mov
push
in
pop
inc
sbb
pop
sub
data16
clc
shr
adcb
pop
pop
jg
je
cmpsb
je
push
xchg
mov
pop
xlat
nop
mov
cmpsl
sub
xchg
mulb
sbb
mov
es
sbb
inc
or
aad
xor
cmp
add
mov
cs
repnz
inc
dec
or
aas
in
aas
ljmp
mov
dec
push
loop
sub
jg
mov
call
movl
jmp
aas
mov
mov
dec
mov
sbb
sbb
xor
divl
pop
push
enter
sub
mov
adc
dec
jbe
js
push
and
cli
loopne
lock
insb
lock
ds
xchg
ffreep
adcb
ret
bound
mov
lock
mov
xor
jo
sarl
cld
cld
das
cld
imul
xchg
push
add
in
or
enter
lret
vandps
mov
faddl
push
sub
bound
jmp
push
add
dec
mov
fwait
cmc
pop
pop
cmp
aaa
loopne
bound
cs
push
sbb
sbb
sub
or
or
xor
std
lods
ret
dec
inc
icebp
mov
mov
push
int3
xchg
movsb
stc
nop
or
test
lods
pop
mov
xchg
adc
add
jae
sub
push
mov
pop
pushf
jne
popa
push
into
xchg
outsb
mov
cmpsb
out
sub
jne
jmp
mov
daa
and
mov
sub
ljmp
imul
dec
int3
mov
mov
push
mov
jo
mov
push
push
cmp
push
stc
xor
mov
fists
stos
inc
inc
push
jne
xlat
scas
jge
sub
mov
lcall
sbb
mov
movsl
xor
or
lds
imul
or
push
loop
pop
sub
or
or
jmp
pop
adc
mov
scas
loop
and
clc
mov
push
and
add
push
sub
popf
dec
mov
stos
loopne
fcoml
sti
jbe
hlt
in
pop
mov
sbb
xchg
rolb
mov
xchg
mov
sahf
popf
xlat
lret
out
mov
push
dec
adcb
pop
out
in
and
mov
stos
pop
leave
jno
sbb
push
faddl
xchg
mov
jns
mov
in
fildll
push
mov
aas
sbb
push
fidivs
cmpsl
aas
push
stc
sbb
in
add
dec
mov
xchg
mov
mov
je
loopne
ret
dec
push
daa
cli
adc
ds
inc
scas
sub
ret
inc
std
jno
shrl
es
fwait
push
cmpsb
sbb
xchg
sbb
pop
or
or
test
out
in
dec
sub
leave
idiv
xchg
mov
outsb
xchg
lcall
jl
mov
scas
fistpl
inc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
out
mov
test
sbb
nop
and
loope
mov
shll
pop
filds
call
mov
and
add
lret
and
cmpsb
inc
inc
leave
shrb
jo
gs
mov
sahf
cltd
subl
mov
inc
inc
movb
xor
xor
rcll
out
loope
pop
clc
cmc
mov
imul
pop
sub
mov
fwait
cmpsb
push
ret
rcll
std
xlat
sti
shl
imul
flds
push
or
outsb
jge
fincstp
leave
add
mov
cmp
cmc
xor
ss
mov
push
mov
xor
mov
or
fisubrs
ss
jmp
in
dec
pop
inc
sahf
jae
or
test
mov
fadd
ror
repnz
and
pop
xor
cmp
push
lret
add
and
imul
or
andl
hlt
adc
cwtl
mov
test
pop
xchg
sbb
imul
popa
pop
adc
outsl
aaa
cli
mov
dec
xchg
xchg
sub
sti
jno
adc
push
ret
sub
je
arpl
xchg
aad
es
push
es
ret
xor
lods
fs
popa
dec
lret
mov
lds
out
or
jno
test
out
cmp
or
and
jle
inc
mov
ror
daa
push
and
stos
sub
mov
jle
rorl
mov
or
mov
mov
gs
stos
and
std
hlt
xor
hlt
shrb
lods
mov
lods
cmp
adc
jae
leave
jo
inc
out
add
repnz
sub
and
in
sbb
mov
adc
fstl
jo
out
out
mov
or
jmp
dec
shlb
cwtl
iret
and
lahf
jecxz
push
cmp
pop
cmp
shrl
mov
nop
and
dec
mov
and
jb
dec
lahf
ret
test
scas
icebp
and
adc
dec
adc
and
movsl
insl
fiaddl
and
mov
lahf
out
push
pop
ficoms
hlt
mov
leave
mov
into
add
out
adc
jno
dec
sub
xchg
stc
xor
mov
inc
sbb
mov
sub
imul
dec
or
cmp
ret
and
sbb
dec
pop
add
andl
mov
aam
inc
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
jb
mov
test
sbb
fnstenv
loope
sbb
pushf
cmpl
icebp
mov
xchg
outsl
jo
cmp
mov
mov
in
inc
in
scas
clc
insb
scas
stos
jns
das
xlat
inc
fwait
inc
pop
popf
stos
jg
in
mov
mov
sub
lret
test
subb
cmp
and
repnz
pop
mov
ljmp
hlt
out
sub
clc
cmpsl
lret
cs
in
testl
ja
jge
rclb
loop
push
test
inc
sub
fmul
xlat
cwtl
pop
dec
xchg
pop
ljmp
inc
nop
jo
repnz
inc
in
ror
add
or
test
adc
test
out
inc
loop
gs
clc
mov
dec
adc
std
mov
lods
daa
clc
rcll
push
fwait
xchg
js
sub
mov
xor
xor
lea
mov
inc
xchg
sub
xorl
xor
cs
scas
mov
xchg
sbb
adc
or
adc
xor
aam
or
jns
jge
notl
rcll
inc
popa
xchg
insb
nop
cmp
std
mov
mov
pop
imull
pop
orb
mov
fstpt
jle
mov
or
out
or
mov
cmpsl
jmp
cli
nop
pop
add
aad
nopl
lret
inc
jle
test
mov
xchg
into
arpl
mov
jg
inc
sbb
jge
xor
cmpsl
pushf
mov
aad
in
in
aad
out
repz
adc
addr16
cmc
mov
jp
mov
movsl
repz
test
cmp
adc
or
and
sbb
inc
lds
jle
dec
aam
out
cmp
and
xlat
faddl
ficomps
or
std
jecxz
stc
movsb
sub
ret
cmp
repnz
into
and
pop
inc
lods
jno
jmp
ja
icebp
bound
das
ror
and
icebp
jle
jle
fisubs
xor
jno
loopne
or
cmp
je
in
js
mov
push
add
in
in
sbb
testb
cmp
ds
aas
lret
mov
push
adc
dec
cmc
je
sub
lock
cmp
int
and
jl
repnz
push
rol
xchg
sbb
pop
jns
lods
nop
push
inc
popa
mov
stos
dec
test
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
stos
shl
sbb
test
outsb
and
mov
sub
out
loope
sbb
cmp
mov
inc
pushf
bound
test
mov
sahf
inc
sub
mov
and
mov
and
imul
jmp
fldlg2
mov
aaa
sbbl
push
aam
inc
cmp
imul
and
aam
or
mov
push
pushf
repz
mov
add
cs
nop
mov
push
push
or
or
stc
push
repz
pop
in
lods
test
insb
pop
adc
and
movsl
fadd
lods
insb
mov
push
aas
je
cltd
xor
mov
push
call
mov
mov
mov
xor
xor
inc
sbb
iret
scas
jecxz
arpl
ja
insb
sub
ja
mov
adc
jmp
mov
in
xchg
test
aas
sub
out
pop
mov
add
and
popa
lds
sbb
xlat
negb
xor
out
push
loope
mov
sbb
and
fwait
loopne
push
int3
rcll
mov
jmp
sahf
mov
mov
cltd
stos
in
add
mov
add
hlt
ja
and
push
sahf
cmpsb
mov
insb
adc
adc
xor
loop
pop
iret
sub
sub
orl
lcall
and
and
sbb
pop
inc
inc
sbb
dec
sub
test
mov
push
ljmpw
jb
mov
ja
imul
in
stos
inc
lds
mulps
in
and
add
and
in
push
pop
pop
fs
pushf
movsl
jae
cmp
jl
pop
add
mov
shrb
fsubrl
xchg
push
push
cmp
lret
sbb
test
loop
sub
loop
pop
jmp
pop
scas
insb
or
dec
fs
push
out
pop
hlt
xchg
clc
or
sub
xchg
mov
ret
gs
jbe
aaa
and
inc
jnp
arpl
ja
fcmovnu
jo
call
sub
adc
jae
xorl
rclb
xchg
sub
scas
icebp
inc
enter
pusha
cmp
jb
les
add
test
xor
in
push
in
sbbl
sub
xchg
sub
inc
repz
scas
mov
jp
bts
cli
push
xchg
push
dec
aaa
push
aam
sahf
pop
add
dec
jmp
jp
movsl
mov
xor
leave
fldl
inc
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
jmp
sbb
xor
sbb
nopl
sti
testl
repz
cltd
cmc
and
in
in
ljmp
in
sbb
sub
sti
imul
ds
addr16
mov
fsts
dec
xorb
and
movsl
xor
cwtl
sub
dec
imul
push
cmp
sahf
sar
in
xchg
add
lcall
cwtl
js
xor
inc
adc
inc
aaa
jg
in
pop
sub
cmp
dec
mov
int
sbb
pop
jne
lock
lret
jl
xor
fs
leave
outsl
pop
addr16
dec
fcmove
mov
movsl
leave
mov
rorl
cmpsb
jne
int
bound
pusha
jne
cld
inc
in
xchg
ja
lds
jne
gs
pop
xchg
popf
mov
mov
pop
movsb
xor
and
imul
mov
or
aaa
ljmp
jge
clc
mov
add
out
dec
add
je
shl
jo
loope
rcrb
mov
cmp
inc
sbb
cli
es
jae
les
sub
orl
or
push
ret
sbb
incl
fisubrs
ret
jg
sub
sbb
sub
inc
jae
subl
lret
or
aaa
rcll
jecxz
and
pop
sub
jns
jle
pop
mov
fs
ds
and
inc
cmp
insl
mov
nop
pop
push
or
lock
and
fcmove
loope
push
add
daa
cmp
or
xchg
gs
dec
sbb
leave
cmp
scas
lea
cmp
stos
scas
mov
cwtl
and
pushf
clc
push
popa
cld
push
jae
sub
or
das
pop
xor
lret
and
rclb
xor
inc
cmp
mov
ret
pop
adc
inc
ficompl
sbb
xor
mov
mov
cwtl
pop
dec
dec
fldcw
lahf
sbb
mov
sbb
or
nop
jl
and
cmp
mov
xchg
mov
shl
xchg
jl
movsb
dec
hlt
add
jb
enter
pusha
adc
in
pop
xor
cmp
std
jmp
cmp
test
push
xlat
xchg
ss
jno
sub
mov
inc
pusha
imul
insl
add
outsb
pusha
cmp
outsb
mov
push
sar
int
je
lods
add
rcr
hlt
jns
push
add
dec
shl
inc
daa
jmpw
loopne
xchg
je
mov
nop
int3
lods
pop
cmpsb
enter
sbb
mov
imul
xor
push
mov
pop
xchg
sub
and
notl
pop
mov
pop
shlb
mov
mov
mov
lcall
jmp
xchg
outsl
push
fcos
cmp
imul
jecxz
sahf
mov
pop
xchg
dec
fs
cltd
push
fsubl
lret
xchg
cltd
jecxz
mov
add
xor
or
lea
or
ja
ficoms
push
sqrtps
scas
adc
loope
adc
insl
mov
jle
call
adc
adc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
dec
cli
mov
xor
sbb
test
sbb
add
adc
imul
fwait
push
fildll
outsb
sti
frstor
adc
out
fwait
jne
imull
inc
mov
mov
xchg
sbb
mov
inc
mov
stos
push
movd
orb
mov
cmc
mov
jmp
lods
fwait
daa
ss
xorl
fs
mov
clc
xor
dec
adc
sub
push
and
xor
pop
cwtl
or
fisubl
mov
mov
sbb
outsb
add
and
and
lcall
pop
lods
push
sti
pop
inc
push
arpl
push
scas
push
sub
cmp
std
inc
add
mov
mov
dec
or
xor
lods
push
fistpll
movsb
jmp
es
aam
dec
mov
push
and
notb
dec
es
shl
mov
xchg
xor
jae
and
das
aas
lea
or
lock
mov
jno
mov
cltd
cwtl
scas
int
fnstcw
jno
xchg
dec
aad
mov
rolb
cmp
cmp
mov
inc
push
cmp
fcomps
in
es
sti
dec
push
xorl
xor
int3
mov
cld
mov
mov
aad
mov
loopne
adc
aaa
sarb
jne
sbb
sbb
push
push
std
add
xchg
out
aaa
mov
xchg
stos
ret
or
sub
int
sbb
daa
cmc
aaa
or
jne
dec
out
addl
in
insb
push
cmp
mov
push
cltd
xchg
and
or
sub
or
inc
push
pusha
sub
push
fimull
in
pop
in
lcall
sahf
mov
out
call
jg
mov
jge
bound
sub
mov
xchg
push
and
cmc
test
and
pop
xor
and
or
pop
shrb
iret
inc
das
jne
xor
arpl
pop
add
adc
orb
int3
outsb
out
fcomps
fstpt
adc
mov
lea
jp
jmp
lret
push
sub
lock
cmp
jmp
sahf
mov
pop
sub
es
and
mov
test
add
ljmp
enter
or
inc
sub
lret
cmp
lock
sbb
notl
mov
add
mov
xchg
add
xorl
iret
push
rcr
ss
push
sarb
inc
mov
jmp
mov
insl
or
sbb
push
inc
inc
push
gs
fnstsw
adc
cltd
sub
inc
or
push
int
mov
mov
dec
out
fcompl
data16
pop
sbb
push
stos
filds
scas
test
hlt
sbb
sub
js
add
imul
xor
mov
bound
push
sbb
or
xchg
repz
xchg
jns
je
add
jns
cld
ljmp
pop
push
add
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
nop
pusha
or
pop
imul
adc
jmp
add
pop
int3
dec
sbb
pop
sbb
call
pop
add
jecxz
imul
pusha
xlat
sbb
xor
mov
or
sub
dec
lcall
xchg
gs
adc
mov
repnz
movsb
fildl
mov
sub
xchg
lock
aas
ret
mov
cmp
lock
sub
mov
test
pop
or
mov
mov
add
or
sti
ss
lcall
mov
scas
and
icebp
orl
cmp
sti
loopne
jnp,pn
loop
xor
push
mov
push
sbb
cmpl
adc
push
sub
add
xchg
inc
stos
test
or
xchg
dec
cwtl
inc
cmp
dec
hlt
add
xor
roll
mov
pushf
sub
push
cmpsl
jecxz
push
fwait
adc
shlb
fsubl
lods
mov
xor
lods
ret
pop
jge
test
and
pop
stos
lcall
hlt
add
push
stos
mov
pop
in
insl
dec
mov
jp
xorl
inc
cmp
ficoms
ret
dec
push
xor
mov
and
xlat
mov
mov
xchg
mov
popf
fistpl
inc
test
sub
scas
mov
mov
mov
sub
test
inc
lcall
leave
aaa
pop
orl
js
add
data16
rolb
in
and
lret
popa
push
add
lret
and
daa
adc
lea
mov
lret
or
lods
mov
sarb
test
inc
push
xlat
fnop
sub
es
mov
jp
mov
cmpsb
xchg
enter
dec
push
fidivs
adc
push
pinsrw
dec
xor
mov
jp
fs
arpl
xor
mov
mov
hlt
add
popa
frstor
mov
lods
and
jg
or
ror
pop
jmp
insb
shl
dec
cwtl
dec
mov
mov
dec
scas
dec
push
adc
lret
fimull
test
pop
sub
rcrl
sbb
fiadds
add
sbb
or
adc
test
adc
adc
cmp
mov
push
or
stc
mov
inc
mov
mov
dec
ja
jns
push
shr
insl
push
add
xchg
pusha
mulb
jae
jae
das
data16
push
dec
ds
xchg
dec
inc
or
repnz
sub
and
mov
arpl
or
int3
sbb
or
cmp
mov
or
add
cld
xor
in
leave
sarl
jne
jno
inc
enter
das
add
addr16
mov
lock
out
add
outsl
in
add
mov
push
inc
add
adc
cltd
dec
mov
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
push
nop
add
cwtl
sbb
xor
sbb
xlat
mov
push
mov
lods
ds
dec
mov
ss
xchg
mov
push
xchg
outsb
cmp
shrl
add
sbb
pop
out
adc
add
sbb
out
sbb
or
jle
rclb
xchg
call
sbb
lret
add
dec
rcrl
adc
mov
adc
sbb
rolb
lock
cmp
jnp
mov
jp
jmp
fsub
cs
cmp
push
mov
dec
loopne
mov
fcomp
insl
icebp
push
lds
mov
pop
xor
mov
xor
lods
adc
shl
adc
cmp
fdivs
push
icebp
jo
jecxz
mov
mov
xor
mull
addb
sub
mov
pop
leave
push
mov
mov
fstl
sub
add
push
xchg
mov
cmpsl
hlt
daa
adc
js
aad
into
mov
nop
or
jg
mov
mov
lods
pop
inc
nop
and
pop
jmp
lods
jp
test
mov
inc
or
jnp
cmp
cmc
addl
insb
and
popf
push
cmp
clc
jo
jmp
shrb
mov
insb
push
mov
pop
adc
push
jp
sub
ret
loop
fdivrl
pusha
mov
xor
or
out
sub
popf
std
lahf
sub
push
mov
pusha
xor
pop
out
subb
outsb
adc
lods
mov
jmp
movsl
xchg
push
clc
pop
jmp
jp
inc
adc
sbb
fucomp
popf
xchg
mov
push
imul
mov
lea
or
int
scas
sbb
xor
cs
cmpl
shll
fsubrs
inc
dec
leave
test
sbb
out
add
lret
aas
sbb
and
lds
dec
test
inc
adc
fisttpl
cmpsl
push
inc
popf
dec
outsb
mov
push
in
ljmp
fwait
mov
push
add
dec
dec
mov
sbb
push
popa
ljmp
je
lods
mov
push
mov
jge
aad
bound
mov
out
fucom
les
in
in
mov
dec
jmp
push
std
or
iret
jbe
int
lods
sbb
push
adcl
dec
sarl
loop
mov
push
push
addl
lock
mov
push
lahf
push
cld
in
jno
in
ficompl
sbb
jmp
or
xorb
imul
dec
inc
out
pop
std
xchg
lock
push
sbb
ja
push
lock
test
stc
jnp
pusha
into
icebp
movsb
bound
mov
cmp
dec
fdivrp
xor
push
jns
sbb
addl
sahf
inc
loop
dec
pop
les
cmpl
inc
xor
xor
cmp
aaa
lret
pop
fidivs
movsb
xlat
push
push
mov
outsb
xor
outsl
inc
jge
push
sub
pusha
call
cld
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
out
jne
mov
sbb
xor
sbb
fimuls
xchg
cmp
cmp
and
cltd
sub
fistpl
mov
sub
sbb
js
in
inc
arpl
xor
fstpl
std
xchg
mov
adc
test
addr16
rorb
popf
inc
pop
sti
ljmp
outsl
test
push
loope
loope
aad
xor
clc
rcrl
add
fwait
gs
test
mov
dec
fstpl
fcomps
adc
adc
mov
pop
fcmove
add
into
dec
or
fisubl
aad
sti
xorb
repz
movsl
mov
insl
inc
out
shlb
jbe
lret
add
or
jge
mov
insl
popf
pop
pop
pop
hlt
idiv
loope
inc
sub
push
mov
mov
mov
jge
cli
cld
popf
sub
mov
call
out
sub
andb
pop
add
mov
pusha
aas
mov
les
aas
sub
push
push
xchg
and
xchg
jb
les
push
pusha
fidivrl
jo
and
push
iret
push
incb
or
push
enter
stos
cmpsb
fisubs
pushf
xor
mov
decb
aam
out
dec
cltd
test
lcall
gs
push
cmpsb
push
xchg
inc
cwtl
in
sub
cld
adc
into
inc
inc
lds
inc
shl
popf
popa
xchg
pop
and
in
jmp
sub
test
jns
ss
loopne
sub
adc
inc
repz
lock
mov
popf
imul
push
push
lret
or
sub
mov
add
adc
inc
dec
push
aaa
mov
fs
call
in
pusha
mov
cmp
add
out
jns
out
repz
cmp
xor
push
push
cmp
sahf
mov
movl
inc
and
sbb
test
enter
fidivs
fbld
push
rorb
sub
add
test
cltd
das
mov
je
push
daa
jbe
cmp
subb
pop
out
hlt
xchg
sbb
xor
dec
sbb
jle
dec
cmp
mov
sub
loope
cmpb
icebp
adc
cmc
les
mov
dec
mov
inc
rorl
cli
out
in
pushf
inc
loope
test
lds
rcrl
cltd
aas
jnp
insb
sub
cmp
into
push
mov
jl
add
cmpl
jmp
cmp
cmp
inc
inc
outsb
add
jmp
aad
lret
xchg
jae
mov
jne
add
into
jg
or
lds
fs
int3
xorl
lods
fidivrl
les
sub
pop
jmp
xor
push
adc
inc
jmp
gs
std
pop
xor
loope
and
lods
mov
mov
outsl
push
test
jne
movb
dec
sbb
or
pop
jae
jmp
pop
or
pop
jmp
cmp
xchg
pop
repnz
mov
mov
out
pop
dec
xor
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
add
stos
enter
xor
sbb
sbb
popa
cmp
cmpl
xchg
mov
inc
pop
xchg
shr
scas
dec
gs
lret
mov
cmpsb
sub
stos
push
push
lret
xor
adc
mov
mov
out
cmpsl
repnz
sahf
out
daa
push
cmc
gs
push
mov
mov
iret
jl
inc
push
fcom
test
aad
dec
sbb
inc
cwtl
push
arpl
cltd
mov
ror
push
push
mov
or
push
lret
or
aam
cmpb
int3
insb
push
mov
jmp
cmp
mov
cmp
ss
cmp
adc
ja
fidivl
sbb
enter
jp
jbe
sbb
sbbb
mov
xor
dec
adcl
or
pop
sarl
out
pop
stc
jp
push
lret
xchg
or
sub
mov
mov
cs
fs
shl
and
jo
cld
pop
jp
leave
mov
push
cltd
mov
mov
mov
pusha
jo
dec
dec
jp
xchg
out
jmp
cmpsl
gs
shrb
xorb
mov
mov
cltd
xor
and
and
in
cmc
add
pop
sbb
sbb
inc
inc
xor
dec
inc
push
inc
adc
jmp
repz
or
sbb
test
xchg
jge
lcall
imul
test
pushf
mov
call
rclb
int
iret
in
sub
into
je
leave
jmp
js
xor
pavgw
lret
loopne
imul
fbstp
dec
and
and
sub
dec
jl
sbb
inc
mov
sub
mov
adc
push
pop
xor
hlt
nop
je
xchg
mov
pop
xchg
push
cwtl
lahf
ja
es
mov
stos
pusha
mov
sub
cmc
pop
adc
iret
jge
add
add
mov
lods
and
sub
nop
jo
icebp
xor
mov
mov
jmp
and
pop
jb
push
lcall
and
dec
ljmp
jmp
popa
incl
ss
inc
inc
dec
iret
cmp
add
cld
daa
insl
pop
lds
mov
push
xchg
fisubrs
jmp
pushf
jb
imul
test
add
mov
or
mov
adc
hlt
in
mov
out
dec
inc
dec
in
xor
shrb
ret
xlat
jns
ljmp
jbe
je
and
add
add
pop
fdiv
add
xor
add
ret
aaa
repz
dec
shl
mov
clc
adc
inc
je
pop
sub
clc
fxch
dec
cmp
mov
and
jle
aas
mov
mov
sbb
dec
xchg
xor
loopne
in
sbb
pop
push
ss
lock
bound
pop
int3
fbstp
adc
mov
mov
fildl
std
xlat
pop
int
pushf
mov
add
mov
sub
mov
add
dec
mov
fcomps
loop
jmp
outsl
inc
pop
or
mov
pcmpgtw
out
hlt
lret
adc
mov
test
add
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
hlt
xlat
mov
xor
sbb
jno
adc
or
pop
jo
in
loopne
arpl
aaa
scas
push
sub
je
mov
sub
jmp
push
dec
xor
inc
cld
in
sub
loop
or
xchg
inc
mov
cs
outsl
xchg
imul
pushl
out
call
mov
jmp
xchg
jge
jmp
fists
and
js
cltd
call
fldenv
lret
mov
lcall
rclb
dec
mov
push
fcmovb
fsts
fistpll
jne
pop
mov
es
int3
xchg
mov
jecxz
sub
push
dec
mov
stc
inc
aas
xchg
adcl
sub
xlat
jmp
aam
push
and
lret
inc
fisubs
mov
ret
enter
fcomps
and
mov
mov
roll
adc
xlat
jg
jne
cmpsb
mov
pop
cwtl
loop
adc
sbb
cli
lret
scas
mov
sub
call
gs
in
xchg
lret
mov
xlat
mov
dec
pushf
mov
mov
mov
mov
lret
pop
jae
sbb
pop
mov
ret
adc
xor
inc
mov
mov
into
add
in
sti
xor
shll
iret
movsl
add
mov
fistpl
xchg
js
adc
into
addr16
adc
repz
mov
inc
stc
bound
mov
or
dec
inc
divb
xchg
adc
in
jl
mov
push
mov
jae
daa
das
les
jo
push
xchg
mov
pop
fistpl
or
out
ficompl
and
and
jns
hlt
dec
jmp
sti
push
add
xchg
lods
mov
dec
mov
dec
xor
mov
lds
insb
push
andl
test
rol
add
cmp
add
mov
testb
xor
out
xchg
sbb
lcall
push
negl
jno
add
jno
js
pop
mov
nop
std
adc
decb
fwait
and
ret
out
xlat
shlb
inc
jp
adc
fldenv
and
cmpl
mov
jmp
int
and
cld
sub
adc
popf
cmc
ds
sbb
imul
pop
mov
dec
dec
mov
aas
jns
in
pop
push
fucomi
push
cli
xchg
int
in
add
jmp
aaa
push
in
aad
dec
int
pop
sub
fsubs
popa
adc
mov
xchg
loopne
out
mov
jge
mov
bound
mov
test
pushf
pop
lahf
sbb
fisubrs
push
shlb
rol
mov
js
fistpl
aad
clc
imul
adc
mov
cmp
arpl
out
jmp
pop
adc
pop
mov
pop
xlat
xchg
bound
stos
xchg
adc
fadd
push
in
inc
loope
shrb
xchg
ret
pop
mov
add
fisubrl
out
adc
nop
or
jge
fstps
xchg
push
fpatan
xchg
enter
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
ja
sub
test
mov
mov
insl
mov
mov
lods
lds
jl
jb
push
push
mov
lahf
adc
add
test
dec
adcl
sbb
inc
sbb
lcall
imul
mov
add
push
xor
push
arpl
jmp
arpl
dec
clc
mov
sub
jmp
aad
xor
and
pushf
andl
and
and
xor
out
xchg
jmp
dec
cmp
data16
mov
xchg
or
push
xchg
inc
lods
jge
dec
push
pop
insb
push
mov
or
stos
and
adc
xchg
inc
fwait
ret
jg
sbb
adc
sub
push
sub
loope
sbb
pop
test
stc
jo
test
std
fdivs
add
lahf
cmp
dec
dec
je
sub
mov
lret
mov
mov
shrb
incl
in
insb
cmp
cmp
loop
fstl
test
lret
repnz
test
aaa
inc
add
and
mov
jg
adc
jns
and
jbe
outsb
movsb
enter
cmc
pop
mov
aas
aaa
xor
add
inc
in
mov
inc
aam
xchg
loop
cmpsb
aas
xchg
mov
xor
test
notl
fsub
ret
insl
dec
fwait
inc
ja
in
sub
pop
mov
fistpll
jo
leave
or
fcomp
or
rorl
lcall
lret
pop
loope
sub
adc
lock
iret
or
push
punpckldq
push
xchg
push
pop
sub
dec
jecxz
stc
xchg
cmpsb
fistl
jnp
notl
arpl
mov
in
mov
adc
dec
mov
rclb
lret
lret
and
test
push
xchg
lods
push
imul
out
fs
sub
xchg
stos
and
xchg
xchg
pop
stos
rcll
and
cs
fsubrp
or
push
cs
subb
add
shl
dec
sahf
xchg
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
rcl
adc
sti
mov
add
lds
jecxz
pop
test
mov
imul
cmc
imull
sub
jle
das
dec
scas
sub
mov
in
cmpsl
jae
cmp
lods
std
push
movsl
ss
bound
xchg
int
mov
lods
scas
push
xorl
xlat
mov
pop
xchg
mov
or
stos
es
or
push
int3
fucomp
add
sbbb
cli
sub
add
xor
or
adc
sub
cli
scas
inc
xchg
ja
add
mov
jg
xor
or
and
loope
js
push
jecxz
test
cmp
or
nop
imul
add
dec
add
std
xchg
ds
mov
jae
or
or
fstps
mov
push
std
orl
test
xor
jl
sub
mov
sub
mov
out
orb
incl
sarb
cmpsb
jge
xchg
mov
jae
mov
imul
jns
into
call
pop
sub
call
ja
xchg
pop
in
lahf
dec
or
xchg
sbb
jne
pop
adc
sbb
inc
mov
and
popf
mov
cmp
xchg
lods
mov
push
mov
and
inc
pop
mov
insl
mov
and
and
mov
roll
xchg
cli
push
mov
fmull
mov
xchg
dec
mov
repnz
inc
inc
xchg
add
mov
jno
pusha
xlat
es
or
inc
rolb
dec
loope
and
push
into
mov
push
sub
movsl
adc
pop
push
andb
inc
bound
dec
subb
mov
aam
fcoml
inc
jecxz
popa
loopne
ficoml
insl
cmp
rcll
mov
cmpb
xchg
and
pop
lret
hlt
insb
shrb
cli
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
jb
das
mov
test
out
jbe
pushl
pop
ret
bound
pop
cld
popa
mov
rolb
ss
add
mov
imul
mov
cmp
dec
ret
mov
pushf
out
xor
es
and
rorb
inc
cmpb
sti
add
inc
int3
aad
sbb
cmp
pop
mov
dec
scas
sbb
xchg
and
pop
leave
jns
leave
adc
or
call
stc
mov
gs
add
adcb
cmp
xchg
mov
xchg
sub
ret
popa
les
xor
rcrb
push
ret
aaa
jl
adc
push
pop
lcall
mov
cltd
push
ss
add
adc
pusha
cmpl
push
add
call
jg
je
pop
nop
push
test
pop
hlt
add
ds
cmpsl
pop
jne
das
daa
dec
inc
xor
out
xchg
data16
lret
dec
out
sbbb
mov
mov
clc
or
mov
cs
jge
repz
mov
lods
test
sub
mov
xor
xchg
in
jnp
in
pop
mov
icebp
das
add
mov
mov
int3
gs
xchg
mov
mov
ror
dec
inc
jl
push
xor
cltd
lods
cmc
xchg
ret
jns
push
dec
leave
mov
push
fisubs
add
repz
add
pop
test
lret
icebp
scas
sbb
and
cmp
imul
or
cli
mov
lds
lcall
ficoml
lret
jns
push
inc
fimull
les
das
sti
mov
in
mov
cmp
push
mov
notb
push
repz
inc
pushf
shll
push
lock
fmul
cmp
adc
push
or
cli
xor
mov
jns
and
cwtl
lret
ffreep
int
adc
mov
cmc
mov
les
idivl
cmp
lea
or
ljmp
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
addr16
sbb
and
xor
cs
cmp
imul
mov
mov
dec
dec
leave
sbb
stos
push
mov
pusha
and
inc
leave
sub
aaa
inc
sbb
add
jbe
xchg
pusha
insb
repnz
aaa
daa
add
xchg
jecxz
mov
fidivrl
xor
mov
test
popa
fstpt
sti
or
pop
cwtl
sbb
xor
dec
idiv
push
into
lret
jmp
xchg
insl
sub
sub
or
jge
dec
sub
outsl
jmp
xor
add
aas
xchg
and
jne
lahf
mov
in
mov
imul
sbb
inc
jle
sub
jo
negb
sub
sarl
jb
aad
pavgb
mov
jge
ret
pushf
jns
loopne
sbb
insl
sub
add
out
pop
dec
dec
stos
popa
inc
fstps
jg
mov
insb
lods
repnz
jb
add
push
insl
fsubl
test
hlt
xchg
sub
pushf
ja
jne
testl
imul
add
mov
sbb
rcrb
jbe
and
inc
and
and
out
fiaddl
out
jecxz
icebp
data16
in
mov
push
dec
pop
pop
xchg
stos
add
xchg
mov
iret
or
test
adc
inc
cmp
sbb
shlb
cmp
lds
std
add
fmuls
xchg
leave
add
mov
push
cld
pop
adc
dec
sub
adc
in
dec
jle
cmp
insb
mov
sti
pop
in
int3
pusha
gs
shl
pusha
mov
int3
add
jmp
add
add
insb
lods
lret
inc
mov
fwait
cmp
mov
xchg
dec
gs
cltd
sarl
mov
je
dec
push
jbe
sti
push
out
test
or
movsl
lcall
dec
push
fdivrl
mov
dec
xchg
inc
jns
jb
pop
movsl
mov
scas
scas
pop
repz
movsb
fs
arpl
cmp
fnstsw
xor
insb
adc
out
xor
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
stc
fwait
jo
cwtl
sbb
test
pusha
sub
popf
pop
lods
xor
lret
mov
bound
stos
sub
bound
lcall
scas
adc
mov
cmpsl
popf
test
mov
pop
or
mov
in
incl
push
pusha
into
movsb
std
pop
ss
mov
dec
hlt
jp
in
pop
sbb
add
test
mov
imul
sbb
inc
sbb
mov
lock
inc
imul
jbe
mov
mul
mov
mov
out
inc
int
in
gs
xor
or
adc
xchg
dec
jecxz
adc
mov
and
lcall
mov
outsl
xchg
lds
fistpll
bound
cmpl
sub
sbb
xchg
push
iret
dec
sbb
add
or
jno
dec
inc
ja
push
mov
and
pusha
rcll
push
aaa
sub
cmp
fistpll
and
adc
add
xchg
rcl
cmp
dec
add
ret
jmp
pop
cmpsl
push
inc
loope
push
icebp
or
jg
js
pop
rcll
push
push
or
mov
mov
pop
add
pop
push
dec
or
negl
aas
les
loopne
pop
xor
pop
jmp
cli
ret
lds
inc
fnstsw
jecxz
sarl
mov
xchg
or
or
push
push
daa
mov
jge
out
push
dec
ret
cwtl
xchg
mov
jg
cmp
and
adcl
ret
or
mov
bound
jne
aas
xchg
xchg
adc
out
adc
lahf
jge
pop
mov
leave
sbb
pop
xor
in
sbb
pushf
scas
sahf
iret
push
cmpsl
and
pop
dec
sbb
int
sahf
sbb
into
imul
fwait
mov
sbb
jns
mov
lret
insb
and
popf
sub
insb
push
shrl
or
lret
mov
movsl
mov
xlat
dec
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
aaa
or
cmpsl
cmp
mov
jge
rcr
sbb
add
outsb
dec
jb
orl
cmpsb
pop
cltd
and
in
pop
mov
mov
sahf
pop
mov
data16
push
insl
iret
xor
je
or
ds
cmp
add
clc
scas
xor
ret
push
rcl
in
cmp
test
nop
jl
loop
xor
stos
das
xchg
lods
mov
pop
adc
sub
in
aaa
aad
mov
arpl
bound
leave
jp
mov
subl
aad
mov
lahf
pop
fstp
cmp
stos
pushf
sub
mov
push
or
adc
push
pop
sbb
or
cmp
mov
jp
sub
fadd
bound
popf
sbb
jecxz
mov
ret
sbb
inc
scas
imul
ret
cli
insb
xorb
stos
fs
and
jbe
xchg
pop
repnz
pop
pop
fcomps
and
gs
sbb
pop
adc
adc
repnz
push
imul
mov
jnp
cld
call
dec
or
imul
mov
pushf
fiaddl
xor
sub
jno
aad
lcall
push
daa
hlt
pop
clc
leave
movsl
jecxz
push
insb
mov
sahf
jmp
adc
lret
addb
and
mov
xor
jne
lret
jo
ret
dec
enter
in
lea
mov
call
ret
adc
ret
iret
movl
add
scas
xchg
and
xchg
push
ret
or
inc
pop
mov
xchg
into
imul
popf
test
testb
out
sbb
push
push
xchg
fisttps
aaa
rol
lds
popf
fidivl
jno
xlat
cli
insl
adc
test
cmp
adc
ja
mov
push
pop
icebp
xchg
jmp
pop
inc
js
lret
nop
sti
mulb
leave
xchg
cmpsb
les
cmp
cmp
pop
std
loopne
div
mov
xor
or
jmp
push
and
mov
mov
nop
sbb
test
fisubrs
dec
aaa
clc
stos
push
mov
cmp
mov
sahf
stos
loope
and
movsw
sub
sahf
mov
rorb
iret
mov
mov
cmp
adc
dec
leave
mov
cmp
hlt
gs
out
scas
bound
stos
dec
push
not
cwtl
ss
mov
add
sarl
inc
out
loop
mov
xchg
roll
xor
cmp
xchg
mov
out
fidivrl
cmpsb
es
and
lea
hlt
addr16
jno
les
aas
cmp
sub
inc
test
jmp
ficompl
mov
push
mov
mov
clc
cmp
inc
popa
xor
outsl
fst
xchg
clc
mov
mov
call
das
std
ret
adcb
jmp
jmp
in
mov
inc
mov
mov
mov
mov
mov
jnp
fcompl
jb
addr16
test
cmp
jle
into
mov
dec
pushf
jecxz
or
rcr
dec
jno
jo
xor
loop
cld
pop
push
inc
mov
std
dec
pop
cmpsb
movsl
test
stc
and
lods
cmp
and
sarb
xchg
mov
push
jle
xor
rcrl
cld
jg
shrl
sub
push
and
mov
dec
data16
jbe
in
fucom
push
js
inc
fdivrs
jo
stc
adc
aad
or
je
sub
jns
jae
popf
xchg
dec
dec
movsb
imul
inc
push
jmp
xchg
push
movsl
movsl
and
imul
push
mov
jge
andl
fxch
sub
fldt
and
inc
push
sti
cltd
dec
scas
dec
scas
loop
add
loop
cmp
and
fcoml
xor
lret
add
jne
out
and
ret
dec
out
push
shll
mov
outsl
mov
add
dec
xor
pop
cmpl
or
cwtl
in
cli
aam
pop
push
pusha
and
mov
push
insb
dec
cwtl
ficompl
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
sbb
sbb
jmp
imul
and
dec
dec
les
lea
lods
fwait
inc
adc
cmc
mov
push
xor
imul
outsb
dec
repnz
jb
repnz
dec
mov
or
jne
dec
orb
lea
cmp
or
cmpb
addr16
sbb
xchg
add
jmp
rcrl
neg
jl
and
xchg
lahf
imul
xchg
or
cli
xchg
and
imul
cmp
and
iret
jle
dec
and
push
lahf
lret
inc
mov
inc
mov
pop
pop
cwtl
mov
or
jg
lret
mov
sub
aaa
sahf
inc
lea
pop
push
js
fs
lock
xlat
cmp
push
imul
mov
cmp
insb
out
insl
decl
rolb
cmp
sbb
cltd
jle
cmp
or
sbb
sub
cmp
push
push
xor
push
push
dec
xor
hlt
pusha
ljmp
and
lock
or
mov
loopne
inc
cwtl
lds
mov
gs
aaa
addr16
mov
cwtl
int
mov
sub
int
xchg
dec
test
test
test
sti
sub
jns
or
sbb
or
test
add
popf
lret
cld
cmp
js
pop
cld
pop
push
cmp
fdivl
pusha
cmpsl
fcompl
push
pop
pushf
insb
insb
rcll
js
imul
xchg
mov
or
and
std
xchg
xchg
cwtl
mov
dec
clc
pop
push
pop
addr16
cmpsb
jl
mov
xchg
arpl
fwait
and
cmpsl
test
test
pop
xor
xor
clc
sbb
lods
adc
inc
and
add
push
dec
faddl
divl
lret
xchg
cmp
aaa
xlat
add
push
pop
pop
ficomps
outsb
lock
push
cs
ret
scas
push
stc
mov
enter
mov
mov
shl
addr16
adc
test
mov
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
mov
jns
sbb
pop
pop
clc
call
arpl
cli
lock
dec
gs
add
ja
jl
push
cmp
jge
push
fidivl
dec
xchg
arpl
inc
clc
dec
pop
std
in
daa
mov
jmp
lar
mov
dec
xchg
xchg
shlb
dec
repnz
dec
adc
loop
fwait
jle
ror
cmp
in
scas
adc
negl
push
pop
push
xchg
push
pop
mov
shll
subb
ds
mov
and
push
pop
push
sub
addr16
jae
add
lcall
cmp
mov
pop
mov
call
push
out
cmpsb
hlt
addr16
outsl
or
cmpl
lds
sbb
jecxz
notl
cs
pusha
inc
cmpl
sub
xchg
daa
or
es
fcmovnbe
jmp
idivl
ja
incb
mov
aaa
imul
scas
lock
ja
jne
or
fstl
outsb
lods
mov
push
aas
repnz
xor
xchg
cmp
add
aam
cmp
inc
lahf
clc
xchg
mov
xor
orl
dec
pop
insl
xor
int3
mov
mov
cmp
lods
sub
mov
and
push
sbb
cmc
js
lcall
int
stos
call
xor
xchg
lea
mov
inc
outsb
fadds
out
inc
loopne
jecxz
xchg
daa
xor
jbe
out
push
vmread
scas
mov
notb
cs
cmp
adc
sub
ficoms
ja
xor
cmp
les
inc
lret
cmp
push
lds
xor
lret
std
int3
push
add
mov
push
fsubr
or
sub
cmp
ds
jbe
cltd
js
mov
imul
fucomp
xchg
lods
dec
xchg
insl
push
cmovb
loopne
adc
outsb
enter
add
inc
movsb
lret
sbb
adcb
xchg
out
rol
lods
outsb
mov
mov
mov
mov
or
stos
jge
ss
xor
add
push
test
or
repnz
xchg
aaa
xchg
sti
mov
cli
sbbb
sti
int
mov
pop
or
test
cmp
mov
clc
jge
les
add
lds
sub
call
jns
out
mov
mov
and
andb
imul
dec
jb
outsl
pop
lods
jbe
sub
push
push
mov
enter
xor
push
adc
mov
mov
aaa
shrb
cld
mov
js
xchg
jno
out
aad
xchg
test
push
dec
imul
lret
xor
les
lahf
xchg
outsl
je
push
int
jno
cwtl
mov
xchg
loop
cmpsl
mov
add
mov
sahf
jnp
xchg
push
popf
sub
cmp
sub
shrb
ja
xor
xor
insl
movl
jmp
into
jne
inc
sbb
pop
clc
push
leave
jl
sbbb
jns
sbb
ljmp
xor
push
test
inc
in
ret
xor
stc
mov
leave
lock
pop
push
and
lahf
js
mov
cmpsb
jne
out
sahf
xorl
pop
and
add
inc
or
mov
je
pop
mov
cwtl
test
mov
call
pop
cmp
adc
pop
popl
sub
mov
pop
mov
ja
push
std
int
clc
mov
in
hlt
cld
or
inc
aaa
outsl
mov
add
lcall
enter
push
stos
inc
cmp
shl
les
sbb
int3
sbb
and
dec
mov
fildl
dec
and
stos
and
fisttpl
dec
or
int3
cmpsb
mov
push
add
xchg
inc
cltd
jbe
dec
pop
data16
and
decb
cmp
jno
out
insb
into
insb
nop
jns
aam
mov
push
push
jns
fiaddl
out
xor
outsb
jmp
es
cmp
pop
push
pop
lods
repnz
pop
enter
rolb
xor
pop
and
loop
int3
out
fistpl
mov
mov
pop
mov
mov
aas
or
cmp
rcr
ljmp
mov
inc
imul
cmp
or
aas
jge
sub
mov
std
mov
jae
add
inc
test
scas
or
add
mov
sub
fistl
push
jae
das
pop
mov
inc
mov
jne
dec
loop
test
pop
cli
add
pop
mov
and
xchg
xor
fs
cmc
gs
add
push
dec
ret
xorb
enter
adc
xchg
icebp
xchg
and
cwtl
mov
pop
inc
mov
addb
in
cld
cmpsb
ds
pop
push
mov
pop
movl
bound
or
into
cmp
jge
int3
jmp
pop
dec
adc
inc
pop
sub
xchg
insl
sbb
mov
pop
dec
out
gs
pop
mov
outsl
test
and
mov
ret
out
push
and
sbbb
bswap
notl
dec
dec
sbb
mov
subb
sbb
mov
sub
adc
mov
stos
xchg
mov
xor
orb
pop
mov
cwtl
sbb
or
and
into
call
sbbb
adc
mov
ret
daa
sub
and
aas
inc
cmpl
jbe
in
push
sbb
cmc
cmp
sub
and
sub
scas
stc
mov
repnz
cmp
mov
int
cmp
inc
mov
iret
and
lds
testl
stc
pop
popf
sbb
sbb
inc
into
fisttps
testl
mov
hlt
inc
dec
leave
sub
push
jb
mov
aam
jl
sub
sub
push
mulb
add
adc
jmp
cmp
popa
iret
push
repnz
sbbb
hlt
pop
mov
mov
shlb
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
dec
call
and
xorb
adc
adc
mov
xchg
pop
test
or
fisubl
testl
negl
addr16
aad
xchg
dec
insl
out
add
mov
sbb
cltd
push
sub
gs
in
stos
push
push
or
jle
das
sbb
mov
gs
jb
cmp
mov
aaa
ret
sub
cmp
lods
out
dec
adc
insl
mov
je
in
mov
insl
push
cmp
cmpsl
ficomps
leave
mov
das
ss
movsl
mov
enter
fsubrl
adc
dec
push
ja
fwait
arpl
push
mov
pop
pop
cmpsl
mov
cmp
popf
push
fcoms
dec
stos
movl
xchg
mov
mov
jg
push
inc
push
pop
dec
jne
jecxz
inc
addb
ja
xlat
jge
xor
xor
dec
enter
sti
leave
je
and
xchg
repz
ds
xlat
out
outsb
fs
mov
lcall
data16
arpl
hlt
dec
mov
jb
mov
or
in
adc
cmp
testl
fcomip
xor
out
mov
or
inc
popf
pop
jmp
adc
loop
push
sti
push
sub
xchg
lret
inc
popf
add
and
js
fimuls
dec
cwtl
movsl
insb
gs
sbb
cli
inc
ss
sahf
push
test
test
ret
into
mov
sub
out
push
js
icebp
pushw
repnz
mov
pop
call
sahf
xor
mov
add
mov
test
sete
mov
inc
xor
dec
sub
jge
pop
ljmp
outsb
sbb
aaa
out
push
mov
test
stos
cmp
push
add
pop
scas
jae
mov
or
mov
push
and
push
std
imul
popf
jg
add
jo
outsl
sbb
inc
cmpsb
cwtl
add
inc
or
inc
enter
and
mov
mov
rdmsr
add
mov
inc
jo
fcmovnbe
int
adc
hlt
push
cwtl
or
ret
lds
jno
in
cmp
xor
js
loopne
es
add
test
xor
xchg
out
mov
lret
inc
out
mov
xchg
mov
iret
lahf
dec
cmp
mov
adc
jb
add
push
jmp
adc
dec
inc
data16
jp
push
sti
hlt
iret
addb
loopne
jecxz
shrb
push
gs
pusha
rcll
sub
jnp
xor
xor
scas
call
xchg
jle
stos
iret
pushf
cmp
mov
lea
loop
sbb
lock
xchg
dec
cmp
pushf
jecxz
test
les
adc
and
dec
ret
mov
sub
dec
sti
xor
les
imul
jae
dec
xor
fcmovnb
lret
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
xlat
and
es
push
mov
sbb
xor
ret
cmpb
clc
add
addr16
test
loop
pop
push
lret
les
mov
insb
mov
push
outsb
and
jmp
sbb
push
pop
mov
cld
push
fistpll
jbe
jge
inc
or
adc
inc
addr16
fidivs
or
mov
lret
adc
dec
adc
or
push
fld
not
mov
pop
or
gs
lret
ljmp
fchs
xchg
mov
mov
xchg
mov
adc
aam
into
leave
pop
jno
cmp
rcrb
int
dec
mov
dec
pop
into
in
inc
roll
pop
loopne
xchg
mul
pop
mov
mov
pop
mov
lods
shrl
shlb
push
push
xor
dec
jmp
push
rep
adc
add
cmp
out
je
fdiv
mov
or
sbb
sub
fnsave
cmp
xor
xchg
jnp
pop
movsl
push
cli
dec
mov
push
and
cmp
or
out
cmc
and
jmp
cs
and
mov
pop
mov
shrl
sub
pop
shrb
xchg
test
scas
sub
mov
pop
outsb
in
mov
outsb
mov
cltd
lret
dec
rcpps
lret
out
repz
nop
fs
add
in
and
inc
ret
lods
scas
cmp
adc
or
inc
movsb
xchg
movl
loopne
cwtl
sarl
push
cwtl
mov
cmc
sub
adc
push
push
lock
xchg
outsb
xor
movsl
ds
or
xchg
mov
test
insl
or
hlt
movsb
clc
iret
inc
mov
dec
int
into
push
movsb
xor
mov
sti
add
add
jb
mov
adc
add
push
cmpsb
push
stos
jg
and
add
int
insb
imul
hlt
sbb
fildll
lods
out
std
cmp
repz
mov
cmp
movsb
test
mov
add
jne
in
sbb
push
add
cmpsl
fucom
leave
inc
mov
or
xchg
pop
xlat
addb
stos
pop
sub
mov
stc
das
push
xor
xor
ja
int3
jb
cltd
fisubrl
cmp
imulb
repnz
ss
push
cli
push
loopne
into
data16
out
pop
gs
outsl
pusha
push
dec
xchg
mov
cwtl
mov
scas
mov
jp
mov
xor
into
rorb
sahf
bound
lods
das
mov
jg
leave
mov
or
or
sbb
adc
pop
jmp
les
and
jle
mov
movsl
push
jle
jo
loope
comiss
dec
jmp
loope
scas
les
push
sub
sub
fs
jl
dec
mov
xchg
cmp
push
inc
and
mov
or
not
rclb
xchg
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
ret
stc
insb
sbb
jns
sbb
pop
mov
cli
add
iret
pop
cmp
jne
ja
sub
shl
push
mov
xor
dec
push
push
std
dec
lcall
cld
push
out
inc
pusha
outsl
inc
sahf
pop
lret
fld
or
inc
jb
scas
in
pusha
mov
mov
int3
int3
or
nop
pusha
sbb
std
mov
shr
inc
mov
leave
sub
push
jp
pop
loope
call
lea
repnz
dec
nop
mov
scas
ljmp
sarb
sahf
or
cld
scas
xchg
and
fdivr
jo
and
call
xor
mov
fistl
int3
dec
mov
inc
push
andb
cli
jno
jns
pop
aad
inc
es
dec
jno
mov
adc
xchg
lods
jl
lock
cld
mov
sbb
jnp
lds
std
les
jno
xchg
andl
icebp
rcll
push
inc
mov
shlb
aas
jle
imul
inc
push
push
xchg
push
or
call
push
insb
int
mov
jae
cwtl
enter
adc
sbb
in
xchg
inc
aas
aam
out
sub
in
cwtl
je
xor
les
out
lods
das
cmpsb
adc
jbe
lods
push
popl
xchg
dec
scas
ja
push
mov
push
xchg
in
add
sbb
je
sub
sbb
push
jle
add
jb
lods
std
aam
mov
cs
loopne
std
mov
in
xchg
push
or
adc
push
sub
dec
xor
icebp
sarb
sub
mov
test
jg
add
cld
movsl
loopne
mov
jp
out
cmp
inc
call
scas
mov
mov
xlat
push
mov
sub
ret
mov
mov
in
adc
or
xchg
inc
cmp
leave
lock
pushf
jne
fiaddl
hlt
jnp
insl
jle
sbb
jl
mov
sub
sub
mov
lds
mov
cmp
or
mov
int
push
dec
inc
stos
sub
mov
dec
scas
cmp
int3
adc
cltd
adc
inc
adc
mov
mov
fucomi
mov
cmpsl
cwtl
or
or
ficomps
pop
lods
or
mov
das
mov
cmpsb
shlb
in
int3
lock
stc
jg
gs
fisubrl
out
adc
in
adc
jae
dec
sbb
lret
mov
jge
xchg
mov
mov
xor
fsts
adc
adc
inc
jmp
aad
mov
and
mov
loopne
stos
loop
cmp
scas
inc
mov
xchg
add
inc
push
pop
enter
pop
call
jmp
jmp
fists
dec
adc
repz
call
test
test
clc
cmc
inc
repz
fimull
dec
jo
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
mov
data16
jns
sbb
imulb
fisubrl
popf
pop
xlat
ret
xchg
je
push
sbb
mov
jo
or
xor
mov
pop
jl
xrelease
sbb
jbe
popf
sti
in
lcall
cmp
in
aad
movsl
push
popf
mov
scas
cmpsl
adc
nop
jl
sahf
push
icebp
xor
inc
jmp
lcall
mov
test
daa
jmp
scas
xchg
push
repz
pop
jge
xchg
cmpsl
sub
call
cs
mov
jae
insl
nop
outsl
push
test
loopne
clc
aaa
daa
pusha
loopne
movsl
aas
push
pop
in
push
or
adc
stos
jge
inc
sub
xchg
stc
mov
jns
arpl
lea
push
fwait
add
inc
inc
cwtl
sub
clc
lock
cmpb
sbb
push
xor
and
jmp
testl
loope
icebp
inc
inc
cmpsl
push
sti
aaa
sti
test
int3
test
xor
and
and
enter
bound
add
sti
push
mov
mov
mov
sbb
gs
add
addr16
xor
roll
xor
jle
dec
test
pushf
mov
jge
push
jl
fdivrl
cmc
inc
mov
or
add
test
jg
gs
shl
xlat
add
push
cmp
dec
xchg
xchg
sbb
inc
inc
aas
sbb
fs
stos
mov
dec
cmp
sbb
xchg
mov
ljmp
out
or
xor
push
addb
xchg
icebp
cmp
fldcw
mov
xchg
sub
jl
cwtl
dec
in
push
jnp
jae
ret
les
imul
push
inc
dec
repnz
mov
leave
mov
aaa
syscall
mov
dec
sti
mov
js
out
aad
lock
push
pop
out
popa
pop
inc
pushf
fwait
jecxz,pt
imul
out
and
dec
scas
outsb
cltd
into
jge
jge
xlat
mov
lahf
jg
cli
insl
mov
xchg
xchg
aas
movsb
push
mov
mov
jecxz
inc
out
stos
clc
adc
stos
xor
or
loope
adc
imul
aam
mov
divl
movsl
jle
push
bound
xchg
add
in
es
aad
pop
push
inc
and
jge
out
mov
adc
jl
inc
jnp
push
add
xorb
popa
into
pop
and
inc
movsl
add
pop
movsb
clc
and
ret
cmpl
inc
xchg
jecxz
xchg
mov
dec
inc
mov
jg
shrl
iret
pop
xchg
int
push
testw
push
push
xor
fildl
test
dec
jle
push
cmp
sarl
xchg
cs
lret
mov
fcomps
nop
pusha
inc
adc
call
movsb
push
push
xor
lds
inc
cld
adc
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
fidivrl
sbb
sbb
jbe
pop
cs
mov
mov
push
test
jecxz
xor
inc
out
sbbl
repnz
loope
loopne
shrl
cmp
jno
add
push
out
repnz
rcrb
out
lds
mov
add
add
bound
pop
xchg
mov
jl
mov
push
pop
mov
imul
xor
fcomps
rcrb
adc
push
inc
ffreep
sub
pushf
inc
jb
loopne
jge
cli
sub
jbe
data16
fistl
inc
pop
mull
pop
stc
adc
xor
push
or
popl
jno,pn
mov
int
je
fmuls
fstl
dec
push
popf
jne
rorl
je
mov
insl
repnz
outsb
fcomi
jecxz
mov
inc
fadd
xchg
push
cs
xor
mov
pop
dec
inc
mov
aam
enter
mov
inc
aad
lea
mov
insb
rcrb
adc
dec
push
ljmp
and
and
dec
outsb
outsl
rcrb
pop
lods
in
sbb
fsubrs
dec
adc
push
dec
adc
ret
fwait
add
pop
jns
cmpsl
mov
aas
cmp
aaa
negb
cmc
ret
repnz
bound
pushf
cmp
andl
or
mov
mov
pop
popa
test
ffree
jl
inc
push
cmpsl
pop
dec
xchg
mov
clc
jmp
lods
push
lahf
jl
mov
mov
jg
inc
jg
xorb
sub
or
push
clc
dec
mov
pop
mov
mov
jp
sbb
dec
push
pop
psubq
orl
jns
sbb
and
mov
gs
rcrl
mov
mov
inc
int
lods
xor
dec
xchg
inc
sub
xor
xchg
ja
push
xchg
movsb
fildl
mov
push
shll
mov
in
dec
fldl
push
shr
cmp
cmp
test
push
xor
jecxz
and
mov
pushf
jl
add
out
xchg
ret
add
ret
push
jbe
adc
int3
jecxz
mov
cwtl
movsb
or
pop
dec
outsl
stos
cs
scas
push
iret
sub
xchg
mov
sbb
movsb
mov
jnp
pushl
daa
cmp
or
shll
shrl
xor
mov
mov
ljmp
cmpsl
pop
pop
roll
cmpsl
xchg
push
adcb
subl
arpl
xchg
push
rol
scas
inc
mov
cmp
in
lock
push
dec
loop
orl
fsubl
mov
push
test
cmp
xchg
add
and
xor
pusha
jnp
sti
mov
fldl
and
xor
stos
xchg
mov
ficomps
int3
fst
aaa
gs
in
shrb
add
inc
data16
jns
movsl
adc
mov
sub
xor
jnp
insb
fxch
pushf
jae
mov
push
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
sub
mov
pop
sbb
je
sbb
push
xchg
sahf
xor
add
lret
lea
push
notb
push
mov
lret
je
mov
push
ss
sub
adc
mov
mov
mov
nop
out
lret
aas
sub
and
xlat
notl
jae
and
aam
leave
xchg
ret
mov
push
or
xor
and
cmpsl
subl
push
loopne
dec
pop
stos
hlt
out
jmp
sub
or
or
out
jbe
push
xchg
mov
out
sbb
orb
jb
dec
mov
fisttpl
in
and
dec
or
mov
jbe
mov
stc
inc
aad
mov
and
mov
mov
shll
mov
pop
mov
add
out
xchg
ljmp
sar
inc
or
push
popa
cltd
data16
push
and
or
xor
xor
stos
ret
movsl
mov
pusha
cmp
cwtl
adc
insb
sbb
scas
enter
mov
mov
xchg
rorb
stos
sarl
pushf
jecxz
fidivrl
scas
push
mov
pop
stos
sbb
mov
outsb
ds
aaa
push
push
sub
pop
mov
out
adc
xor
or
lcall
mov
mov
lcall
cmp
sbb
jbe
cmp
mov
shrl
loopne
aam
dec
pushl
mov
int3
xlat
cmp
xchg
js
mov
jle
scas
stc
out
cmp
xchg
cmp
and
sbb
sub
imul
pop
mov
jno
cmpsb
mov
js
addr16
std
lahf
dec
jae
nop
lcall
fwait
dec
xchg
mov
and
mov
popa
mov
cmp
mov
pusha
jne
lret
mulb
jns
push
sbb
lods
clc
in
mov
or
push
xchg
jp
pop
or
add
out
inc
out
loopne
add
aaa
inc
mov
mov
cmpsl
pop
sarl
fucomp
movaps
fyl2x
xor
into
sub
mov
or
sbb
scas
adc
xchg
sub
mov
pop
jb
rol
imul
stc
mov
lahf
jae
adc
inc
inc
dec
inc
xorl
or
loopne
and
mov
push
inc
add
xchg
js
mov
jecxz
lods
push
inc
mov
in
pop
je
adc
jge
addr16
xchg
nop
xchg
xor
pop
sbb
aam
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
in
mov
and
sbb
mov
ja
xchg
mov
xor
add
mov
clc
mov
lea
mov
mov
xchg
sub
inc
adc
dec
mov
xchg
or
sbbl
jmp
inc
and
xlat
mov
xor
mov
sbb
mov
ja
jp
mov
imulb
inc
mov
sub
clc
inc
sarl
gs
dec
bound
sbb
repnz
dec
icebp
orl
xchg
pop
in
insb
andl
push
mov
fcmovnb
mov
std
ss
cmpl
aas
or
jno
aaa
xchg
add
leave
fmuls
xchg
cmovno
pop
or
addr16
std
push
mov
arpl
jno
push
adc
pop
lock
jge
sub
and
aam
imul
ss
mov
inc
je
cmpsl
fstps
cmp
cmc
xor
lret
cli
push
sbb
jne
sbb
or
out
pop
test
js
inc
stos
out
and
cmpsl
mov
inc
push
pusha
push
jcxz
sbb
fsubl
jge
mov
les
xor
or
sub
int3
pop
enter
pop
inc
fwait
insb
lods
ljmp
je
nop
fildll
jmp
ljmp
stc
mov
mov
clc
iret
sub
in
pop
adc
cmp
lock
shll
outsb
jp
sub
cmp
fsts
or
xchg
xchg
add
pop
mov
shll
stos
sbb
mov
cmp
xor
push
dec
mov
xorb
lock
je
jbe
iret
int3
dec
jle
shlb
pop
test
ret
enter
jmp
push
add
and
xchg
aam
idivl
mov
and
fcmove
pop
filds
mov
shrb
mov
dec
faddl
jmp
push
add
sbb
dec
mov
add
jg
mov
jnp
mov
js
loopne
push
sti
push
add
rorb
xchg
aad
or
mov
dec
ret
adc
std
jo
dec
cmp
ljmp
js
mov
cld
sbb
inc
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
movsl
lahf
jo
dec
sbb
scas
adc
sbb
mov
test
dec
cmpb
mov
mov
lret
pop
cs
lcall
daa
sbb
xor
clc
xchg
fs
jb
ss
movsl
mov
ja
mov
xor
dec
std
add
lcall
push
fdivrs
pop
test
incb
repz
adcl
cltd
and
push
mov
outsb
or
and
std
arpl
mov
lods
jp
popa
inc
test
or
insb
jo
or
dec
pop
movsb
std
push
hlt
into
out
pop
sub
jnp
ret
sbb
xchg
sbbl
mov
mov
leave
rclb
shr
and
outsl
push
notb
movsb
aaa
mov
out
jg
es
jmp
cmc
cmp
pusha
imul
pop
mov
loope
and
stos
gs
sahf
inc
cmp
xchg
or
push
inc
inc
test
mov
sbb
jp
xor
imul
xchg
pop
dec
sbb
sbbb
jno
jno
mov
and
cmp
out
je
cmp
xor
ss
notl
stc
pop
rclb
in
mov
push
ror
or
flds
sub
mov
stos
lcall
stc
cmp
sub
imul
xchg
dec
jmp
or
aad
rorl
and
pop
lahf
cmp
cmp
xorb
mov
cltd
or
aam
cmp
lods
sbb
outsl
or
outsl
jle
cmp
xchg
aaa
sub
xchg
mov
ret
sub
dec
iret
sbb
std
push
cmc
dec
shlb
loop
cmc
test
popa
or
ss
insl
sbb
dec
in
je
jne
notl
cmp
shrb
xchg
and
mov
in
or
push
loopne
xchg
xcrypt-cbc
cmpsl
pop
nop
mov
rcl
mov
outsb
je,pn
js
stc
test
mov
dec
lcall
pop
leave
jno
out
scas
mov
loope
jp
inc
cld
dec
cs
sub
movsb
cli
or
fsubs
into
sub
aas
int
fcmovb
std
and
dec
sar
xchg
mov
loop
lret
lods
push
xchg
mov
mov
pop
lods
mov
shll
inc
nop
xchg
loop
sbb
mov
jg
add
cmp
dec
mov
adc
sbb
push
aaa
mov
sub
mov
pop
aaa
or
jo
add
xlat
fisubrs
xchg
aas
mov
cli
insl
sub
add
pop
jle
jns
movsb
xchg
les
aad
push
cmp
sbb
mov
mov
xchg
mov
add
and
add
mov
dec
or
or
hlt
mov
and
jl
push
jecxz
fwait
dec
sbb
sarb
xchg
aas
lea
fiaddl
sbb
pandn
scas
enter
push
adc
scas
sub
or
lods
rcll
je
mov
int3
push
and
push
popa
inc
jno
out
in
clc
jbe
ja
and
sbb
or
jno
test
cmp
xor
repz
pusha
lret
mov
and
cmp
push
jg
mov
add
xor
pop
aas
inc
cmc
cwtl
shr
incb
xchg
push
fnstsw
jge
mov
sbb
jnp
cld
gs
mov
inc
and
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
pop
mov
sbb
out
xor
sarb
loope
inc
stos
out
dec
mov
push
dec
test
gs
xchg
push
cmp
icebp
jo
xor
dec
test
scas
aas
scas
dec
push
push
push
cmp
popa
frstor
mov
mov
and
cmp
mov
mov
mov
or
bound
or
fiaddl
je
and
mov
fs
mov
out
lret
dec
pop
imul
xor
ljmp
decb
hlt
pop
ljmp
arpl
and
shll
jmp
cli
jl
lahf
cld
add
mov
shll
sub
aad
push
mov
jnp
dec
push
leave
cli
mov
stos
outsl
adc
cmp
out
mov
pop
aam
dec
js
lret
lcall
push
cltd
sbb
dec
mov
aad
stc
sub
lahf
in
jno
repz
fsub
int3
mov
xchg
js
out
ja
push
xor
jecxz
cmp
daa
pop
push
and
push
cmpsl
aas
dec
fwait
cs
xchg
stc
mov
sub
cltd
aas
jne
rcll
xchg
xor
inc
lret
add
sbb
mov
mov
in
push
mov
jl
in
add
inc
shrb
in
sbb
aaa
ja
inc
adcb
add
ret
dec
aas
in
in
lds
imul
fisubrl
jns
insb
insl
fs
add
add
inc
scas
test
ret
cmpsl
in
push
push
std
sbb
or
mov
gs
movb
sub
rclb
mov
sarl
orb
dec
or
cmc
ljmp
lock
divb
or
adc
ds
inc
add
fdivr
mov
mov
in
insb
lea
ja
sbb
or
sub
jo
and
and
gs
add
mov
out
pop
cmp
ljmp
jecxz
mov
dec
lds
fisttps
xor
xchg
push
repz
pop
fidivrl
sub
imul
cmp
and
cmpb
dec
pop
movlps
nop
pusha
inc
insb
sub
dec
aaa
arpl
out
sub
int
into
aas
jbe
and
test
sub
or
xchg
push
inc
aas
sbb
loop
and
subb
ljmpw
cmpsb
mov
mov
cmp
add
sahf
cmp
lea
mov
xchg
lcall
inc
push
xor
mov
rorl
adc
adc
js
push
mov
lock
inc
sub
iret
add
jg
cwtl
xchg
cwtl
jne
sarb
stos
loope
pop
cld
sub
cmc
jg
lock
jo
sarl
sub
jns
add
insb
gs
shrb
push
sbb
pop
xchg
jb
pusha
mov
out
mov
stos
xchg
lods
mov
ja
mov
lds
jbe
cmpsl
insb
inc
adc
xchg
push
in
push
mov
lret
fcomps
cmc
or
sbb
pop
cmp
pop
outsl
ja
inc
scas
pop
std
xchg
push
cmpl
aam
cmp
push
enter
lods
clc
add
xor
adc
gs
adcb
mov
mov
xlat
aad
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
sahf
cmpl
sbb
adc
sbb
mov
divb
add
imull
test
add
fmull
lods
mov
jmp
test
idiv
test
aam
shl
push
sbb
dec
int
add
pop
jmp
mov
sub
or
dec
idivb
lret
mov
add
loope
lods
jp
mov
add
push
sub
int3
outsb
mov
xor
pushf
push
pop
and
cld
lahf
mov
repz
and
jne
test
lcall
out
fsts
adc
stc
lods
inc
rcpps
xlat
lock
addr16
push
aad
cli
pop
adc
mov
iret
add
sub
sbb
dec
push
lock
xor
xchg
inc
cmc
mov
icebp
xchg
cmc
xchg
adc
jg
shr
out
jae
ret
jnp
xchg
fucomip
dec
fstl
shlb
xchg
sti
fwait
inc
jg
das
pop
or
daa
popf
inc
jbe
stc
ljmp
in
les
cmpsb
add
test
dec
mov
fisubrs
dec
rcrb
int3
pusha
cmp
rcrb
and
test
aad
call
cmp
sub
out
add
jb
adc
scas
jbe
fdivs
fyl2xp1
xor
lods
fbld
dec
adc
lds
pop
mov
xor
mov
mov
xor
xchg
and
lods
lahf
lea
lret
lret
xor
dec
divb
aas
inc
mov
push
fmul
lcall
aad
sbb
fucomp
jg
out
sbb
pop
mov
and
push
stos
xor
jl
cmp
popf
mov
push
xchg
mov
xlat
mov
jg
xchg
sahf
scas
dec
pushf
sub
into
or
xor
and
adc
pop
pop
mov
stos
dec
insl
xchg
sub
jmp
cmp
test
or
out
addb
inc
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
stos
scas
cli
mov
notb
sbb
mov
jle
ror
aad
mov
cmc
dec
push
dec
jmp
pop
pop
mov
xchg
lcall
test
add
test
inc
movsl
push
sub
lea
push
cmpsb
jno
movsl
iret
inc
lock
push
sub
pop
dec
sbb
push
loope
fisttps
cmc
dec
je
aam
mov
mov
pushf
test
sub
aad
and
sub
mov
fs
sbb
aaa
lock
movsb
in
jge
imul
push
push
dec
xor
sbbl
or
inc
lahf
insb
jmp
push
pop
int3
dec
popa
push
sbb
lods
lods
xchg
addr16
in
sahf
or
movsb
cli
mov
cld
pop
xor
fcmovu
enter
and
pop
pop
xor
xor
mov
loop
add
mov
in
fst
push
and
in
fcomi
fimuls
rcrl
and
mov
lds
testl
fucomip
lahf
ret
cmpsb
cmp
pushf
xchg
push
mov
push
fsub
mov
je
test
sbb
inc
mov
shlb
jno
sbb
out
push
push
enter
mov
xchg
jmp
mov
jp
xchg
shlb
jnp
cmc
or
scas
xchg
jne
inc
outsl
insl
xor
pusha
or
icebp
cltd
push
mov
movsb
sahf
pop
push
inc
or
test
cmp
sbb
push
pop
sbb
add
mov
outsl
push
cmpsl
push
cmp
call
add
enter
cmp
insb
cld
add
cs
js
adc
stos
imul
push
push
repnz
inc
fidivl
gs
mov
imul
aam
jl
xchg
mov
ja
mov
push
and
xchg
sub
enter
fnsave
pop
cld
xor
cmc
xlat
and
inc
or
xchg
xlat
idivl
cmp
mov
xor
cmp
sarb
rorb
ret
test
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
sbb
sub
sbb
adc
sbb
pusha
negb
xor
test
daa
lods
clc
sti
test
mov
insb
sub
outsb
push
cmp
cmp
pop
cmc
xchg
ljmp
xchg
and
mov
jge
xor
in
xchg
daa
ds
enter
inc
xchg
inc
cli
into
push
jg
push
and
imull
push
xchg
je
xchg
lods
or
movsl
addr16
pop
mov
jmp
add
push
cltd
cltd
jno
xor
cs
cmp
imul
stos
and
sub
add
push
in
imul
cmpsl
push
mov
mov
int
mov
outsl
idiv
mov
jnp
adcb
pop
addb
aaa
and
adcb
push
les
xchg
data16
mov
negb
popa
addr16
aaa
add
adc
jne
stc
jecxz
insb
jmp
cs
jns
dec
popf
and
mov
aaa
inc
xchg
pop
fisubrl
sub
arpl
into
les
push
in
mov
testb
push
dec
xlat
js
cwtl
pusha
jb
imul
popa
loopne
pusha
into
xchg
rcrl
insb
movd
cmp
or
jnp
inc
lods
sbb
negl
hlt
xor
cmpsb
adc
addl
xchg
mov
lret
out
pop
jno
sub
stos
rcll
jg
out
popf
lods
push
pop
std
or
pop
pop
push
fcoml
cmpsb
pusha
mov
insl
mov
cltd
outsb
sub
and
leave
call
xor
outsb
mov
push
cltd
xor
jo
sbb
prefetcht1
out
push
sbbb
lds
je
xchg
frstor
rorl
ret
cs
pusha
mov
enter
mov
out
sbbl
mov
in
mov
fnsave
push
cli
pop
loopne
cmp
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
xor
cmp
mov
dec
xchg
mov
pop
pop
adc
das
pop
in
inc
scas
sbb
ret
test
fwait
data16
sub
push
jno
btc
inc
lods
sbb
outsl
fdivl
xchg
inc
adc
sti
inc
pop
test
cmc
mov
pop
in
icebp
and
stos
std
xor
pop
mov
and
imul
and
xchg
insl
lcall
neg
out
dec
xor
jb
adc
out
cwtl
sbb
fdivs
or
xor
inc
or
mov
fnsave
movsl
inc
mov
mov
rcll
sub
mov
cmp
jmp
ret
jo
xchg
push
jno
scas
jp
inc
mov
cmp
faddl
xor
mov
push
mov
fldt
mov
testl
rcll
mov
lret
mov
scas
dec
shr
xchg
test
rolb
mov
push
adc
cmp
rclb
push
pushf
push
xor
out
cltd
mov
bound
gs
outsl
jmp
in
or
int3
mov
cmovo
or
int
pop
jle
popf
push
enter
lcall
loop
sbb
mov
neg
xor
ror
and
cmc
es
sub
aad
push
xor
sub
into
jns
jns
dec
daa
stc
jmp
add
jmp
jo
cmpsl
ds
and
jbe
cwtl
stos
jg
mov
pushf
jb
or
insb
je
repz
aas
or
cld
aam
lea
aad
pop
cmp
lea
pop
xor
jnp
mov
lcall
stos
dec
mov
cmp
sbbb
fcompl
rorb
mov
dec
rol
movsb
inc
fdivl
outsb
ljmp
cmp
pop
cmp
dec
mov
hlt
ret
popf
add
daa
and
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
sub
xor
mov
xchg
pushf
add
mov
jb
jnp
or
jo
mov
mov
shl
add
mov
dec
cmp
das
adc
into
divl
dec
fadds
mov
cmp
ret
mov
call
push
subl
push
add
fs
sub
adc
lods
add
add
dec
cld
mov
jge
les
mov
in
rcll
mov
je
or
add
pop
dec
sub
out
mov
and
int
cmc
mov
cmc
mov
aam
add
rclb
lret
add
insl
testb
or
cmp
mov
sbb
mov
mov
out
ret
jbe,pt
scas
orb
and
test
and
ja
jbe
xchg
jnp
gs
popl
icebp
xchg
or
or
adc
cld
fwait
in
movsl
pop
xlat
into
js
cmpsl
xchg
leave
int3
jae
lret
xor
cld
movsb
pop
mov
test
mov
lods
imul
mov
push
sub
pop
mov
push
or
cltd
test
in
and
enter
lea
test
pushf
outsb
lcall
or
push
pop
fsts
mov
xor
push
add
xchg
adc
mov
outsl
fwait
push
jb
adc
ret
mov
les
or
jae
rclb
loopne
sbb
stos
int3
out
pop
dec
scas
mov
cmc
and
dec
pop
cmp
sub
into
daa
sub
fcoms
dec
test
call
lret
or
shrl
and
jp
sbb
push
out
xchg
js
movsb
int
adc
test
ror
add
in
xor
pop
push
xchg
jp
arpl
pushf
pushf
je
lods
test
cmp
push
out
mov
xor
mov
mov
mov
mov
jmp
aaa
and
dec
mov
push
out
or
sub
sbb
adc
sbb
xor
inc
xchg
aam
les
pop
xchg
push
adc
jp
or
inc
jle
out
popa
mov
je
leave
mov
fnstenv
xchg
cwtl
into
mov
sti
into
dec
or
sub
add
jecxz
dec
sbb
ja
jecxz
mov
sbb
jnp
mov
arpl
push
lahf
das
xor
dec
rcrb
push
inc
dec
fbstp
pop
jnp
jnp
pop
shl
xor
mov
lea
mov
nop
cmp
cmp
add
cld
and
jg
xor
adc
addr16
out
xor
sbb
mov
in
mov
lret
mov
jle
decb
mov
push
leave
dec
lds
bound
stc
lea
lock
and
lods
add
loopne
push
push
gs
mov
ss
dec
sub
js
negl
sub
ljmp
adc
pop
ja
jecxz
inc
jne
nop
mov
mov
dec
sub
imul
stos
mov
in
insb
jo
and
dec
push
aaa
sbb
or
add
and
pop
loop
push
rorl
movsb
fs
notl
mov
scas
pop
test
sahf
aad
imul
mov
jl
popf
sbb
lret
adc
xchg
inc
pop
xor
xor
lret
fsub
dec
aas
test
mov
pop
jle
out
data16
jbe
mov
pop
int3
pop
pop
cmc
sti
int3
sbb
sub
xor
scas
add
clc
sub
cmp
cwtl
xchg
jmp
test
orl
movsl
pop
aaa
sub
cmpsl
das
mov
mov
js
mov
popa
aam
ja
imul
pop
sahf
outsb
inc
lcall
data16
dec
loop
insb
inc
xor
ds
clc
out
shll
imul
mov
loope
inc
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
idiv
sub
int
mov
xor
out
nop
sub
aas
inc
mov
add
mov
test
ret
orl
jno
mov
shl
int
sar
mov
pop
cli
and
ficoms
lods
in
sub
dec
movsw
inc
sbb
loope
add
aaa
sub
out
pushf
or
cs
xchg
or
xchg
sbb
pushf
mov
or
lret
push
insl
clc
fdivrs
mov
iret
hlt
add
cltd
data16
in
or
push
push
dec
aaa
jge
ljmp
scas
mov
and
or
in
int3
cltd
imul
or
mov
lods
mov
push
jg
lahf
add
cmpl
into
scas
and
fs
cmp
iret
es
stos
divl
mov
pusha
mov
test
fimuls
rorl
mov
arpl
je
in
xchg
or
adc
pop
popa
cltd
test
pop
orb
add
ds
cld
cltd
outsl
lret
xor
shrl
jmp
cld
nop
in
inc
cmc
clc
xor
pop
mov
or
mov
in
into
pop
arpl
movsl
imul
stc
xchg
xchg
jno
test
aam
enter
loopne
cmp
sti
mov
js
xchg
inc
popa
pop
jo
inc
jno
jmp
inc
push
jmp
inc
cmp
hlt
pusha
mov
cmpsb
push
jb
cmp
jbe
mov
scas
cmc
outsl
mov
test
rorl
push
mov
sub
std
xor
inc
out
cmpsb
nop
hlt
adc
fwait
sub
mov
xor
add
xor
cli
pop
sub
dec
inc
std
cld
ljmp
std
sbb
sbb
pop
ljmp
sbb
pop
insl
sub
repnz
repnz
sub
lret
in
jl
or
sbb
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
xor
stc
add
pop
add
lods
ret
movb
add
mov
inc
scas
fwait
scas
sbb
lret
sub
pop
jnp
test
js
jge
mov
repnz
jns
insl
mov
popa
push
mov
mov
out
mov
addr16
aas
lcall
xor
sahf
dec
sub
inc
mov
sub
add
sbb
dec
scas
pop
loop
int3
enter
inc
push
in
ljmp
rolb
pop
push
ds
les
mov
movsb
lahf
or
jecxz
mov
xor
dec
adc
enter
xorl
movsb
inc
test
dec
mov
lods
xchg
shrb
imul
adc
movsl
ficompl
pop
jne
fcmovnb
test
sarb
mov
pop
inc
das
xchg
pop
divl
pop
jo
aad
and
adc
mov
stos
daa
adc
int
adc
add
pop
dec
mov
inc
das
insb
setge
and
jns
pop
or
jae
inc
les
push
movsb
je
push
enter
mov
xchg
cmp
std
mov
daa
fucomi
hlt
adc
jnp
cmp
xor
arpl
jmp
xchg
cmp
mov
xchg
lods
jb
cmpsb
mov
dec
dec
cmp
push
scas
je
movsl
jne
cld
pop
sti
rep
dec
push
daa
cltd
adc
and
mov
push
nop
xorl
xchg
mov
les
cltd
in
mov
inc
push
in
imul
mov
movsb
adc
pop
arpl
push
mov
arpl
pop
pop
orl
xchg
xchg
cmp
fs
test
cmpsb
mov
int3
in
stos
xchg
lock
movsb
mov
in
pop
mov
outsl
push
outsl
andb
ret
sub
mov
ret
in
sbb
aam
lret
fmull
mov
out
loop
dec
in
loop
dec
into
and
push
cs
arpl
sub
xchg
pop
call
fadd
push
adcl
in
addr16
inc
andl
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
dec
dec
jle
sbb
sbb
sbb
daa
fwait
div
aam
testl
sub
es
rolb
add
xchg
inc
out
or
scas
in
adc
and
push
push
test
sub
lds
mov
push
imul
push
adc
cmpsl
or
mov
cmp
js
push
nop
in
xor
movsb
divl
jecxz,pn
test
outsb
and
lods
and
flds
clc
dec
icebp
aam
xchg
mov
loope
daa
subb
cmpsl
out
jmp
adc
sub
cmp
insl
mov
sbb
cltd
nop
movsb
loop
sub
xchg
outsl
pop
adcb
rolb
in
or
sub
cmpsl
cmovp
cmpsb
jo
les
pop
xor
sahf
ds
dec
push
xchg
cmp
ja
cli
fidivs
int
scas
xchg
sub
in
lea
aam
pop
sti
into
lea
mov
mov
sbb
movsb
aaa
fs
les
xchg
push
push
fs
bound
cli
aad
out
xor
mov
jl
addr16
cwtl
out
lds
pop
shlb
out
mov
dec
fxch
stos
sti
push
mov
dec
mov
ljmp
sbb
sub
push
es
repz
sarb
int
xor
fbstp
add
pop
movsb
push
pop
dec
jb
lea
xor
in
outsl
test
daa
add
notb
fistpl
inc
pop
mov
cli
dec
fcomps
es
fprem1
mov
xchg
in
cwtl
mov
fsub
mov
push
icebp
mov
cmp
mov
xchg
jnp
sbb
jg
mov
and
enter
inc
jl
dec
ret
ja
sub
add
fwait
ljmp
iret
test
pop
and
mov
mov
aaa
bnd
ss
inc
test
push
andl
stos
pop
addl
pop
mov
mov
xchg
test
fsubrp
pop
add
xor
adc
daa
sbb
sar
mov
stc
push
inc
sub
push
ret
sub
inc
inc
test
int3
imul
sbb
add
cmpsb
add
mov
dec
or
mov
cmp
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
jl
sbb
sbb
adc
sbb
mov
mov
jle
pusha
aam
cmp
enter
outsl
lea
in
ret
cmp
in
jns
cmpsb
js
sahf
mov
push
aam
ss
or
push
mov
mov
inc
pop
aad
adc
ret
es
dec
jne
andl
stos
lahf
jg
add
sbb
cmp
sub
mov
mov
or
push
mov
push
icebp
cmp
or
mov
jae
aas
sub
dec
cltd
mov
pause
cmp
xlat
mov
jge
vcvtpd2psx
mov
lahf
test
or
pop
popl
or
mov
push
das
xchg
and
adc
adcb
mov
push
outsl
dec
fnsave
fidivrs
jno
cmp
xchg
xchg
cmpsb
pop
inc
insl
or
mov
mov
lret
pop
into
jg
outsb
adc
mov
movsl
fisttpl
and
mov
pop
or
or
lock
adc
cmpsl
or
fbstp
das
mov
jmp
jnp
add
gs
mov
vpavgb
or
cli
add
mov
flds
int3
pop
imul
iret
cltd
rclb
test
push
push
pop
mov
aaa
or
xlat
popa
loopne
xchg
loop
mov
xchg
outsb
and
adc
jnp
add
loop
cmc
lds
adc
lock
jge
dec
out
xor
shll
nop
repnz
add
imul
je
out
popf
stos
aas
stos
andl
sub
loope
pop
push
mov
gs
jmp
push
mov
jmp
imul
mov
clc
xchg
les
and
mov
push
xchg
loop
aad
int
pop
repnz
movsl
bound
std
pop
scas
mov
sbb
inc
mov
enter
inc
popa
dec
pop
inc
xor
mov
or
cld
test
dec
add
popf
dec
and
mov
cmp
mov
rclb
int3
imul
pop
jg
mov
mov
xchg
mov
xchg
out
xchg
imull
cld
ljmp
repnz
pop
add
filds
daa
xor
aas
lcall
fs
aas
adc
sti
pushf
and
pop
sbb
inc
mov
xchg
xchg
jns
sub
and
pop
adc
mov
cmp
xchg
push
and
test
and
daa
mov
xchg
mov
cmpb
push
jnp
adc
or
lods
mov
sub
lock
fdivr
xlat
ss
testl
add
insl
insb
mov
insl
xchg
xlat
xor
xor
imul
std
pop
pop
dec
divps
ds
jb
dec
cmp
or
mov
in
imull
and
imul
sub
iret
pusha
clc
pop
jl
int3
pusha
mov
sbb
or
mov
or
in
dec
testb
and
out
xor
mov
enter
sub
sti
fdivs
cwtl
jl
jmp
aas
loop
adc
adc
mov
add
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
mov
adc
sbb
adc
sbb
lods
mov
inc
call
pop
lret
out
xor
ja
iret
or
pop
test
push
xor
out
mov
xlat
mov
cltd
add
es
aam
mov
lcall
inc
jns
testl
xchg
sub
jmp
aam
xchg
int
xchg
add
lret
mov
pop
and
fwait
into
aaa
cmp
sub
pop
sbb
stos
pop
imul
out
mov
shlb
inc
push
xor
std
sub
sub
push
aad
fildl
pop
int
idivb
test
imul
sti
add
insl
pop
push
inc
adc
gs
mov
nop
mov
xchg
inc
mov
push
xchg
adcl
repz
and
push
mov
mov
cld
das
and
dec
aaa
sub
push
roll
fcomps
xchg
rdpmc
aas
cmp
lock
mov
mov
fldenv
ret
jg
xchg
loop
mov
pop
adcl
mov
clc
xchg
lods
imul
mov
dec
decl
xchg
push
xor
sti
dec
outsl
es
push
sbb
mov
maxps
addr16
cmp
pop
dec
cmp
mov
lds
in
ret
lea
mov
andl
jb
iret
in
outsb
push
je
adc
adc
push
jge
dec
les
dec
push
mov
test
ds
stc
xor
idiv
in
shlb
dec
stos
dec
inc
out
cmpsb
scas
sahf
adc
inc
mov
iret
mov
push
pushf
mov
push
pop
loop
hlt
xchg
movsb
xchg
cmpl
test
cmp
leave
xchg
adc
popa
shll
sub
stc
and
adc
in
pop
inc
cmpl
xchg
or
pop
jns
rcrw
adc
jle
aam
nop
xor
xchg
push
mov
mov
clc
adc
sbb
jle
in
shl
dec
cmp
je
adc
pop
pop
test
add
adc
or
pop
push
jg
int
add
nop
daa
enter
mov
xor
cmp
stos
inc
das
mov
adc
push
jne
jne
cmp
pop
aam
or
and
bound
lahf
icebp
fisubrs
sub
adc
push
or
sbb
xchg
dec
bound
rorl
aas
or
jp
xor
push
out
inc
mov
in
lods
add
es
push
jns
xchg
xor
xor
fcmovne
imul
push
mov
dec
add
imul
icebp
cmpsl
mov
ret
lods
push
inc
mov
dec
ljmp
mov
lds
xchg
test
arpl
dec
pusha
push
stos
pop
mov
sub
sbb
cmp
in
imul
pusha
sbb
popa
ret
or
hlt
shlb
shrb
gs
mov
push
sub
mov
js
xlat
je
cwtl
cmp
lret
jp
in
sub
mov
insb
mov
mov
add
pop
jbe
dec
frstor
jne
push
cmpsl
inc
xchg
mov
je
and
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
lret
in
inc
or
sbb
adc
sbb
push
cmp
outsl
mov
pop
or
fisttps
test
add
outsl
ror
sub
aam
mov
or
fdivrp
stos
enter
or
in
pop
mov
in
testl
cmp
daa
xchg
ss
xorb
push
mov
lcall
and
rcrb
pusha
push
addr16
or
jo
xchg
in
adc
jge
mov
inc
in
adcb
inc
inc
jge
cs
int
insl
es
loop
xor
ficoms
je
dec
icebp
rcl
rcl
lcall
sbb
icebp
push
or
pop
aad
mov
jmp
or
sub
shrl
adc
lea
dec
push
xchg
mov
clc
push
jo
jg
daa
cli
xchg
les
ss
aad
xchg
scas
inc
adc
push
sbb
push
rcrl
push
mov
dec
sahf
stos
pop
inc
mov
and
mov
sbb
mov
lcall
clc
mov
rolb
inc
sarl
push
in
adc
jnp
and
aam
cmp
shl
mov
add
mov
lods
and
pop
xchg
out
lea
sbb
ds
sbb
dec
repnz
and
mov
dec
dec
leave
into
push
push
test
inc
and
mov
ss
push
sahf
inc
sub
loopne
cmp
scas
pop
or
xor
jle
scas
lcall
add
popf
repz
jl
sahf
bound
stos
sbbl
sub
imul
stos
xchg
cmpsb
sbbl
xlat
sti
mov
int
add
mov
or
rclb
or
pop
mov
sub
movsb
cli
fstpt
pop
sub
fldenv
pop
lahf
stc
add
scas
out
mov
shrl
adcl
leave
add
outsb
std
popa
lods
notb
mov
sbb
gs
dec
inc
out
lahf
mov
inc
test
jno
fldt
add
stos
addr16
imul
iret
pusha
and
push
cmp
add
jb
mov
aad
rcrl
cmp
repz
arpl
ds
cltd
pushf
shll
jnp
gs
mov
lods
dec
mov
test
mov
push
nop
add
loopne
in
lcall
lcall
int3
cmp
je
jb
icebp
gs
dec
mov
iret
xchg
push
aad
mov
xchg
stc
pop
adc
imul
sbb
test
sub
loop
dec
imul
cmpsb
fsub
adc
or
xchg
movsb
fsubrl
incl
repnz
fwait
push
lcall
repnz
xor
inc
xchg
pop
xor
sarl
shrb
imul
mov
orb
in
aaa
adc
inc
mov
outsl
scas
cli
es
or
outsb
xchg
ljmp
jno
sbbb
pop
in
jnp
mov
addr16
shlb
das
adc
pop
aas
sbbl
xchg
rcrb
iret
push
loopne
xor
call
dec
dec
mov
fisubs
cmpsl
stc
in
lds
scas
mov
subl
jmp
mov
push
in
xor
insb
addr16
sbb
sbb
pop
mov
bswap
outsb
pop
dec
dec
mov
sbb
jmp
sti
cmp
mov
mov
int
stos
mov
rcrl
das
lret
push
add
xchg
and
lret
jnp
mov
mov
pop
cmpsl
xor
xor
fadd
push
pop
cmp
add
jl
adc
cld
mov
and
enter
sbb
imul
fidivrs
xchg
jp
sub
sub
adc
xlat
inc
cmp
adc
inc
mov
mov
in
cmpsl
fldenv
cmpl
ds
jg
adc
fwait
mov
popf
jnp
stos
gs
push
xchg
jge
sbb
out
outsl
out
sub
inc
xor
jne
lods
mov
push
roll
fdivp
gs
stos
cmp
in
inc
movl
rcrl
mov
push
jo
add
mov
mov
movsb
jb
pop
mov
xchg
sbb
arpl
add
cmc
jp
hlt
test
jecxz
and
push
mov
arpl
fisttps
sbb
sub
mov
in
push
pop
jb
jbe
das
pop
test
xchg
mov
pop
sbbl
lea
jne
pop
iret
mov
jp
arpl
enter
dec
push
lds
cld
mov
out
dec
inc
cmp
sarl
lcall
test
imul
movsb
lahf
jae
mov
cld
fsubs
xchg
add
xchg
pop
jbe
arpl
mov
push
call
iret
lods
pop
push
sahf
rdmsr
add
push
or
lea
cs
dec
add
outsb
xchg
jg
push
mov
cld
or
or
add
pusha
pop
outsb
in
jb
stos
pop
lods
pop
mov
or
cmp
cs
push
pop
aad
out
cmpsb
out
push
mov
push
pop
xchg
jge
jae
sub
inc
iret
push
mov
notl
xor
sbb
sbb
lea
daa
cltd
push
xchg
dec
sahf
in
loope
lcall
stos
jg
popf
test
fldenv
mov
out
push
hlt
lds
inc
roll
push
sti
movsl
int
aaa
push
inc
aaa
cld
das
addr16
popa
add
jg
pop
mov
inc
lock
out
mov
call
cmpsl
not
mov
js
pop
jecxz
xor
sbb
insb
outsl
lea
fistpll
sub
imul
mov
jmp
clc
pop
imull
les
xor
cmp
jg
and
dec
sbb
mov
sbb
clc
mov
cmp
jl
xchg
xchg
cmpsb
sahf
ljmp
cmp
das
call
cmp
sbb
sub
push
jnp
dec
rcr
pop
add
jmp
not
repz
mov
aam
sub
daa
cmpsb
xor
mov
push
pop
insl
pop
repz
mov
stos
dec
dec
and
mov
cmp
jo
adc
xchg
push
cmpsb
jo
icebp
jle
pop
cmp
inc
mov
mov
jg
test
sarl
xchg
and
cmp
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
xchg
es
das
cs
sbb
fwait
aam
jge
jmp
mov
pop
xchg
jecxz
inc
cmp
adc
adc
je
push
inc
dec
inc
xlat
or
test
pop
ficoml
lods
adc
adc
cmp
ds
mov
dec
cmp
xor
jb
out
loopne
add
imul
insb
je
xor
stc
lahf
jmp
cmp
popa
stc
jp
push
mov
xchg
adc
cld
test
stos
jo
fmull
cmpl
pop
test
pop
les
test
xchg
test
aam
push
sub
std
out
ror
mov
mov
fsubrp
cs
push
enter
mov
or
in
or
and
pop
add
and
into
and
pop
pop
jnp
xchg
mov
shll
mov
gs
cmc
fnstenv
pusha
stos
mov
imul
nop
sbb
ja
jge
and
dec
xor
cmc
dec
or
leave
fwait
mov
ss
sbb
inc
or
mov
daa
jb
and
or
inc
mov
cli
es
movsb
aas
dec
mov
jae
iret
adc
popa
push
sub
xchg
repz
add
dec
aam
mov
jns
inc
mov
bound
mov
mov
cwtl
fsubl
adc
mov
cmp
int3
mov
test
outsb
das
lods
sti
neg
jbe
xchg
mov
add
in
jg
dec
pop
cmp
test
xor
pop
or
mov
mov
dec
negl
bnd
xor
sub
shl
add
mov
sub
mov
jnp
movsl
aaa
stos
test
sbb
pop
jecxz
fstl
test
movsb
sbb
xor
je
adc
insb
inc
jno
subl
sub
test
cmpsl
repz
mov
scas
and
jp
jp
adc
sbb
rcl
sub
movsl
push
mov
or
xchg
lds
cmp
out
arpl
or
loope
out
stc
aam
pop
arpl
push
imul
ficompl
scas
out
iret
scas
xchg
inc
and
cmp
mov
in
nop
cmc
sub
sub
mov
repz
xor
xor
jne
lds
lds
lahf
xor
inc
imul
lds
pop
xor
clc
xor
test
adc
icebp
mov
dec
aaa
in
loope
cmp
clc
pop
pop
inc
pop
xchg
cmp
pop
addl
call
loop
shl
scas
xchg
or
sub
aam
lea
jmp
xchg
cs
test
mov
js
jge
xchg
dec
add
jl
rorb
jb
movsb
xor
hlt
mov
mov
push
das
imul
daa
push
sbb
loop
sbb
sub
adc
and
and
dec
ss
cmpsb
xchg
add
scas
mov
pop
ljmp
jo
cld
mov
jge
xchg
sti
inc
aas
jecxz
dec
xorl
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
pop
aam
jo
notb
sbb
adc
sbb
loopne
fs
scas
jns
and
cmc
sub
into
pand
loope
pop
shll
dec
push
call
or
subl
xchg
push
imul
outsl
fbstp
sub
push
mov
mov
scas
cwtl
sahf
or
push
outsl
sub
cmp
sbb
outsl
out
das
inc
gs
loop
xor
mov
fstpl
in
fisubrl
add
bound
outsb
loop
mov
xor
jle
mov
daa
push
les
xchg
loope
std
and
inc
stc
iret
adc
out
fadd
cmp
out
fcomps
rolb
mov
sbb
loope
mov
cmp
xchg
sti
dec
jo
inc
or
outsl
out
lods
and
cs
mov
xor
xchg
cmp
jg
mov
aaa
repz
mov
shlb
dec
or
ja
in
fstpt
push
pop
mov
pop
lods
xchg
push
shrb
adc
test
push
test
lcall
or
pop
add
mov
pop
sti
pusha
dec
or
push
pop
bnd
test
in
sub
adc
or
out
fnsave
add
xor
lahf
push
jbe
adc
jge
loop
push
adc
jl
out
pop
or
cmp
out
dec
roll
aas
in
or
test
push
call
push
mov
mov
pop
pop
jae
and
jecxz
and
jmp
aas
fisttpll
cmpb
xor
or
push
push
icebp
lret
mov
hlt
scas
dec
imul
and
lds
mov
jns
mov
leave
add
dec
xlat
clc
cltd
or
dec
data16
das
inc
pop
decb
fstl
insb
mov
lods
sub
aas
jp
fsubrl
test
adc
hlt
mov
test
sbb
cltd
shll
mov
mov
dec
inc
inc
stc
loope
test
inc
jecxz
loopne
fisubs
lock
pop
dec
imul
out
jmp
jecxz
mov
ljmp
jbe
push
es
adc
pop
stos
xchg
nop
mov
iret
test
xchg
stc
push
jp
sbb
and
xchg
push
insl
mov
int
pop
das
popa
jge
jns
sbb
add
sahf
pop
add
pop
in
ds
sub
shr
outsb
xchg
cs
sub
mov
push
outsl
push
cmp
or
jp
lret
cs
sub
cmpsl
movsl
add
in
addr16
sbb
or
out
das
cmp
das
into
arpl
rorb
pop
pushf
xchg
or
mov
test
test
into
mov
mov
neg
inc
xor
icebp
out
int3
xor
push
mov
jno
inc
or
sbb
aad
inc
iret
mov
repz
sub
and
pop
ss
test
imul
xor
cltd
xchg
gs
shr
mov
cli
adc
cmpb
and
mov
in
xchg
shr
xchg
pusha
fiaddl
popf
dec
js
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
arpl
hlt
leave
ljmp
push
movsb
push
jg
out
repz
xor
adc
cltd
jne
sbb
neg
adc
adc
jns
insb
push
popf
mov
int3
jl
pop
stos
jmp
lret
idivb
adc
pop
mov
mov
rcll
cwtl
xor
inc
outsb
cmp
cltd
ljmp
mov
jecxz
mov
stos
sahf
sub
sbb
shll
mov
cld
mov
pusha
out
mov
aam
iret
sahf
fsts
mov
sub
inc
push
or
xchg
push
hlt
icebp
idivb
sub
xchg
jle
or
cs
xchg
inc
cmpsl
push
push
xchg
test
dec
lea
add
mov
das
stos
mov
ficoml
cmp
jmp
and
lret
jecxz
fiadds
rcrl
cmp
testb
cmc
dec
lret
sbb
jne
arpl
sbb
and
jg
dec
loope
repz
cltd
adcl
mov
jmp
jb
insl
ret
xchg
jnp
mov
xor
push
push
out
mov
bound
sub
push
mov
std
cwtl
lods
push
lods
lock
int3
cmp
pop
or
dec
cli
mov
adc
aaa
in
stos
mov
jecxz
dec
in
and
push
insb
push
mov
shrb
imul
xchg
push
sarb
rolb
dec
xchg
jnp
inc
fldl
shlb
or
lea
and
lcall
cli
je
call
dec
add
dec
inc
pop
dec
fwait
fwait
mov
xchg
mov
mov
leave
dec
sub
mov
insl
rorb
shlb
cld
add
pushf
mov
lahf
repnz
xchg
adcb
icebp
adcl
ss
gs
lods
lcall
cmp
adc
je
mov
xchg
stos
or
decb
ljmp
adc
jno
arpl
and
dec
jp
mov
and
cmpsb
cmp
fwait
xor
xor
mov
pop
sub
xlat
ljmp
mov
out
outsl
es
scas
fs
sub
sub
lahf
cltd
fildl
adc
test
dec
push
lcall
mov
lock
push
push
mov
mov
xorb
pop
sahf
sahf
lret
into
insb
imul
cs
pop
push
push
fs
jg
xor
jg
jle
mov
test
jo
sbb
repnz
pop
sub
enter
out
pop
fwait
sbb
xchg
sti
adc
xor
jbe
in
out
insl
mov
xchg
subl
jo
imul
gs
jb
sahf
pusha
clc
roll
sbb
mov
and
stc
les
addr16
daa
icebp
inc
push
add
jns
pop
cmovb
testl
inc
stos
ds
cmpsb
xor
fwait
push
shll
mov
and
lcall
mov
push
jne
shlb
inc
fmuls
add
xchg
xor
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
mov
jmp
sbb
aas
sub
negl
lods
jnp
adc
scas
dec
push
lods
cmpsl
outsb
imul
call
mov
ret
sbb
push
push
jnp
and
lods
and
cmp
adc
outsl
pop
scas
call
fisttps
mov
xchg
or
mov
sbb
fucomp
jg
in
aas
push
into
call
dec
ja
xor
xlat
insb
xchg
push
xchg
xchg
test
int3
addl
stc
jnp
std
in
and
movsl
mov
cltd
pop
ror
pop
out
fsubl
jns
dec
movsl
jge
fnstsw
test
pop
adc
je
divl
cmp
in
ss
insb
or
rcll
insl
pop
enter
mov
dec
test
sahf
pushf
data16
mov
push
ret
int
mov
pop
push
mov
add
sub
xchg
pop
mov
cmc
cmp
daa
ds
in
ret
sub
lods
movsl
pop
cmovno
mov
cmp
jge
test
xchg
cli
imul
stos
and
add
fdivrl
sahf
in
pusha
pop
fimuls
lock
push
vmovhpd
jne
fwait
mov
push
cwtl
pop
fidivrs
in
rcr
add
sub
mov
mov
scas
cmpsl
pop
inc
jl
sbb
mov
adcb
and
add
popf
pop
test
inc
mov
sbb
jge
dec
mov
adc
leave
bound
inc
loopne
or
imul
gs
inc
mov
jns
dec
ret
imul
xchg
push
dec
inc
daa
or
push
push
addr16
out
ret
lods
or
cli
loop,pt
leave
xchg
mov
inc
jecxz
mov
cmpsb
into
loope
sti
imul
sub
shl
mov
ret
mov
cmp
jae
ret
mov
and
dec
out
sbb
or
push
dec
addl
dec
mov
fisttps
push
mov
ljmp
adc
pop
mov
repz
pop
je
push
mov
jmp
mov
es
add
dec
and
sbb
jge
dec
xchg
sub
mov
jmp
iret
mov
mov
or
popf
shr
xchg
mov
lcall
sub
push
lret
jmp
adc
pop
es
adc
adc
stos
outsb
inc
cli
or
xor
sti
sbb
scas
jl
fildll
pop
mov
lret
mov
mov
mov
pop
mov
ja
call
lret
mov
mov
fdivl
xchg
ja
mov
mov
fcompl
push
jno
or
cmc
hlt
lcall
mov
xchg
outsb
rorb
xchg
outsl
mov
in
call
imul
sbb
gs
popf
mov
mov
leave
sbb
dec
cltd
outsl
sbb
pop
rorl
fldl
dec
pop
mov
shll
push
inc
jg
test
enter
sub
adc
bound
mov
in
and
add
add
xorl
jae
push
push
jae
repz
int3
cli
repnz
push
jmp
and
pop
jne
stc
mov
lock
div
data16
out
mov
pushf
xor
push
repz
shll
pop
cmp
movsl
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
cmp
sbb
sbb
mov
cld
add
addr16
out
insb
adc
jno
dec
sub
jbe
inc
repnz
mov
stc
or
sub
inc
arpl
cmp
or
rcrl
pop
mov
into
and
inc
testb
jns
fbld
or
or
fnstsw
mov
std
xchg
and
add
dec
inc
inc
jb
cmc
data16
sub
std
js
in
pop
stos
fistl
and
aas
outsl
enter
mov
dec
inc
xchg
adc
jge
pop
dec
aad
adc
push
dec
xchg
pop
mov
jne
or
sbb
fidivs
mov
push
pop
movb
xchg
push
faddl
xor
repnz
jle
stc
call
aaa
and
adc
jb
jno
test
xchg
test
or
sbb
xchg
lock
sub
push
and
dec
and
mov
sub
cli
test
clc
bnd
or
ret
xor
and
stos
add
lds
inc
add
mov
push
sbb
in
cmp
jno
leave
xchg
mov
add
mov
xor
imul
fstl
cmc
outsb
or
in
pop
jmp
mov
test
mov
fstp
pop
jb
aad
push
and
adcb
mov
xchg
ds
adc
mov
cmp
sub
mov
push
testb
sbb
and
pop
mov
call
sub
add
jmp
cld
cmp
orl
sbb
fsubl
pop
stos
pusha
pushf
mov
add
xor
sahf
jmp
push
ja
out
push
xlat
sbb
aaa
aad
or
or
mov
pushf
sarl
hlt
adc
fnstenv
loop
adc
lcall
pop
add
out
imul
imul
or
xchg
in
jns
inc
lret
scas
dec
ss
adc
call
dec
aam
jnp
dec
adc
test
sub
jle
adc
pop
outsb
mov
and
fstpt
aam
push
mov
shll
fisubs
mov
xor
hlt
pushf
imul
ret
and
or
repz
and
lock
insl
xor
lret
std
hlt
shl
and
dec
sub
mov
ss
pushl
add
fimull
mov
pushf
push
pop
movsb
dec
stos
sbb
lea
loopne
leave
int
pop
sbb
dec
icebp
aam
sbb
push
add
cmpsb
jge
or
divl
mov
lock
jmp
xchg
ror
push
dec
jb
inc
mov
hlt
jne
idiv
arpl
lods
sarb
xor
push
ret
inc
lods
pushl
pop
jbe
aad
adc
idivb
add
or
and
daa
inc
inc
adc
sbb
mov
xchg
jecxz
sub
outsb
and
jmp
sub
aas
mov
and
push
cmpsb
ret
lcall
xchg
aaa
out
jecxz
mov
xchg
mov
mov
stos
or
sub
adc
sub
cmp
add
dec
and
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
sbb
sbb
sbb
adc
sbb
repnz
pop
xchg
std
out
cmp
xchg
push
mov
dec
add
dec
aas
dec
sub
mov
pop
fwait
push
cmpsl
xor
cmc
sbb
push
dec
or
int
jbe
pop
leave
pop
dec
jmp
adc
cli
aad
bound
pop
cs
test
jl
test
imul
and
iret
cmc
dec
push
fadds
mov
mov
lahf
fnstenv
pop
xor
mov
sahf
adc
add
scas
outsb
hlt
popf
cwtl
cmpb
inc
add
cltd
outsb
mov
sbb
lea
lret
pop
pop
or
loope
or
adcb
mov
popf
jbe
push
ficompl
mov
stc
or
fsubrs
icebp
pop
aaa
cmpsl
dec
lahf
push
fwait
ret
push
sub
mov
adc
je
test
bound
testb
cmp
adcl
loop
pop
stos
mov
cmpsb
loope
mov
movsl
mov
lret
arpl
add
ljmp
mov
push
jmp
and
sarb
add
lock
pop
push
jb
mov
xchg
test
adc
sbb
sbb
xchg
mov
ds
int
test
xlat
jmp
sbb
adc
int3
cli
and
sbb
imul
pop
dec
lahf
mov
and
test
out
and
mov
lock
stos
sbb
rorl
inc
xor
or
or
call
lret
push
decl
inc
jne
jo
xorb
aam
and
inc
dec
insb
pop
mov
add
xchg
inc
or
dec
repz
testl
sub
adc
adc
push
in
stos
movsb
imul
mov
sbb
lds
popa
and
loope
popf
movsl
lds
movb
je
shl
dec
cmpl
pop
mov
inc
mov
pop
add
lahf
loop
fidivrs
dec
cli
sub
nop
mov
sbb
xor
mov
adc
mov
out
dec
push
mov
mov
shr
sahf
push
rcl
cmp
pop
lcall
test
cmpsl
mov
lcall
sub
loopne
jnp
sbb
jp
sbb
xorl
mov
inc
push
test
imull
jb
ret
dec
test
lds
aad
out
jge
sub
and
xchg
dec
loop
xchg
ficomps
insb
fmuls
les
mov
push
mov
pmuludq
fistpll
shlb
test
mov
int
insb
outsl
loopne
out
sbb
bound
gs
lahf
out
js
xchg
js
ret
push
lahf
cmc
adc
ret
loopne
mov
add
add
jle
mov
imul
sub
loop
xor
pop
mov
mov
adc
xchg
pushf
mov
mov
stos
test
jecxz
pop
js
pop
add
xor
sbb
inc
lret
xor
scas
or
jecxz
cltd
into
ja
jo
clc
pop
dec
pop
sbb
xor
mov
hlt
jbe
or
dec
jmp
je
cwtl
shr
inc
dec
clc
jo
mov
dec
dec
gs
rcll
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
push
gs
jl
rcll
sbb
adc
sbb
sub
loopne
add
push
mov
dec
jge
and
jbe
pop
adc
or
enter
push
push
int3
xor
xchg
notl
cmp
pop
adc
mov
cld
push
inc
mov
idivl
push
aaa
lea
xor
mov
insl
add
les
push
xchg
adc
or
jp
jp
gs
movsb
jnp
andl
push
dec
push
lret
pop
sbb
xorb
jns
repz
mov
mov
push
mov
movsl
leave
push
sub
xor
loop
insl
idivb
scas
mov
mov
mov
lds
pushf
fst
and
mov
rolb
mov
fdivrs
cmpsl
clc
push
jp
js
sbb
mov
jo
aaa
dec
lods
fdivs
xor
fcoml
nop
hlt
mov
pop
jnp
insb
cmpsb
xor
sbb
sbb
orl
outsl
dec
sub
cmp
test
loopw
push
pop
orps
and
lds
inc
or
jle
or
lahf
les
cmp
into
aas
notb
pop
in
push
sub
or
dec
int
out
mov
pop
add
shrb
shlb
gs
mov
fbstp
xchg
movsb
jg
fimull
inc
inc
ret
adc
aad
in
cmp
mov
mov
xor
mov
scas
inc
ret
mov
pushf
sahf
xchg
stos
dec
and
push
in
fidivrs
fsubrs
dec
pop
add
insb
push
inc
or
cli
or
stos
je
lret
sub
pushf
pop
je
shrb
add
repz
push
loopne
xchg
insb
push
pop
lret
sub
movb
jp
inc
jne
addb
loopne
addr16
mov
cld
in
movb
jae
loopne
sub
mov
pushf
and
lret
or
fcomip
add
mov
scas
mov
inc
add
adc
push
push
ret
cmpsl
fiadds
or
js
mov
add
fsubs
adc
dec
fstps
pop
jo
jp
adcl
xlat
fbstp
cld
popf
cmp
scas
mov
sbb
dec
movsl
mov
cmp
or
cmpsb
jnp
in
enter
ds
lds
jge
adc
xchg
sahf
mov
xor
push
cmpsl
sub
lods
inc
out
call
inc
icebp
mov
cmp
es
mov
insl
jo
adc
mov
shll
test
fadd
outsl
stos
out
mov
test
mov
xchg
fldcw
mov
dec
imull
sahf
add
adc
out
inc
cmpsl
xchg
cmp
and
pop
and
cwtl
je
push
jl
pop
add
push
call
cmp
pop
sub
adc
test
xchg
push
push
dec
mov
cmpb
inc
shll
mov
loope
fidivrl
out
fidivrl
pop
mov
jnp
and
dec
test
dec
leave
lds
and
ss
gs
mov
bound
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
and
jo
int
sbb
adc
sbb
repz
push
pusha
adc
jae
divb
jb
bound
xchg
sbb
lcall
cmpsb
mov
sub
or
ljmp
cld
stos
inc
mov
sti
adc
jae
push
sub
scas
mov
cmc
mov
scas
sbb
pop
sbb
mov
mov
and
sbb
sbb
jbe
fwait
or
pop
pop
mov
add
mov
shrd
cmp
scas
inc
jno
mov
jmpw
adc
int
ficoml
neg
pop
push
add
cld
inc
and
insb
inc
incb
out
pop
sub
aaa
cs
inc
xor
jb
xchg
xchg
sbb
cmp
inc
or
stos
adc
jg
ljmp
cmpsb
mov
dec
lcall
push
les
mov
mov
pop
ds
lods
lcall
test
lret
sahf
push
pop
mov
mov
fisubl
lret
jnp
sbb
mov
mov
ljmp
and
push
xor
mov
cmpsb
rsqrtps
dec
add
sbb
das
xor
sub
in
lret
lods
xor
pusha
mov
pushf
cmc
push
mov
inc
nop
scas
push
xchg
cmp
and
and
lods
popf
xchg
out
stos
test
adc
jl
xchg
mov
jae
mov
dec
add
adcl
mov
jmp
jle
xchg
mov
pop
mov
mov
sbb
inc
aas
xor
mov
mov
inc
cli
fwait
aas
fsincos
mov
and
push
rcrb
pop
mov
push
mov
mov
pop
pop
ret
xor
mov
loop
cld
jge
jp
push
mov
push
fistps
jmp
pop
sub
inc
mov
test
rcrl
add
xor
cld
sbb
or
mov
mov
hlt
sbb
fisubl
lret
adc
shrl
dec
or
mov
in
jecxz
into
int3
adc
stos
cmpsb
mov
adc
andnps
sahf
mov
inc
in
sti
loopne
div
std
sbb
mov
movsl
inc
stos
fstpl
sbb
aas
mov
sub
add
jmp
sub
pop
jp
or
or
aaa
jne
xchg
enter
push
mov
je
lods
pop
inc
inc
loop
push
ret
sbbb
and
inc
lock
sbb
mov
jo
push
dec
repz
xchg
outsl
sub
add
sahf
fs
mov
lahf
ljmp
icebp
fstpt
popf
sar
adc
movsl
arpl
outsb
mov
cmp
cmp
clc
cmc
xchg
fwait
sbb
in
push
cmp
adc
xor
inc
cmp
lock
lcall
sbbb
sbb
aam
xorb
cli
rcll
mov
inc
xchg
movsb
lods
push
cwtl
mov
xchg
mov
rol
scas
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
leave
inc
push
lds
sbb
adc
sbb
aam
loop
fsubs
call
dec
mov
lret
shlb
pop
jmp
and
adc
lahf
jge
insb
leave
pop
dec
sbb
inc
inc
mov
lods
icebp
mov
or
cmp
or
enter
mov
sar
ja
mov
push
or
push
xlat
inc
pop
shrl
subb
jns
out
jl
sti
cmp
gs
call
xorb
movsb
add
sti
mov
cltd
adc
rcll
aas
mov
lcall
bsr
adc
push
out
sub
test
mov
leave
or
push
ljmp
leave
lret
icebp
pop
mov
cmp
bound
fwait
pop
ret
fcoms
push
ret
jo
mov
lds
xlat
or
mov
arpl
aad
mov
xchg
negb
lods
repnz
aad
xor
inc
xor
push
mov
orb
lret
adc
and
fcompl
adcb
clc
push
xchg
cmp
mov
lcall
cmp
je
xchg
inc
pop
loopne
mov
test
cltd
flds
mov
popa
inc
lods
add
pop
mov
mov
jo
pusha
sub
in
push
xchg
imul
pop
sbbb
jg
fcompl
sub
mov
adc
fs
dec
and
push
shll
sub
std
fcmovne
ljmp
mov
mov
sub
pop
or
inc
adc
mov
lea
insl
ds
push
xor
imul
loopne
mov
and
inc
and
pop
sarl
mov
push
and
mov
fnstcw
adc
jmp
pop
push
sbb
test
cltd
rcrl
imulb
in
jae
pop
adc
daa
or
or
add
rep
push
xchg
mov
inc
and
add
sbb
dec
add
lret
nop
dec
adc
popf
outsb
ds
jb
mov
xor
pop
xchg
add
mov
ficoml
cmp
loope
mov
les
popf
into
nop
lahf
and
dec
test
in
je
cmc
inc
cmp
loope
test
xchg
pushf
jle
clc
xchg
add
scas
sub
fwait
cmp
mov
cmp
add
pop
or
sub
insl
fs
loope
add
xor
jno
mov
arpl
push
fldcw
ss
lahf
cmp
jmp
enter
dec
xchg
stos
inc
out
rcrb
mov
ljmp
in
aam
lods
mov
out
push
cs
scas
sahf
pop
pop
push
add
or
jnp
pop
sti
inc
imul
inc
lret
sub
imul
jge
shl
push
xor
std
ret
push
adc
outsb
aam
cmpsb
jo
xor
cwtl
jle
sub
cmp
push
pop
push
ret
xor
andl
mov
xchg
jno
push
lahf
out
test
add
add
fwait
scas
notl
adc
jnp
push
push
out
leave
pop
cmp
mov
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
stos
inc
mov
sbb
shll
daa
es
jge
or
mov
cmpsl
xchg
insl
cmp
out
pushf
fldcw
push
xor
aad
cli
fs
mov
push
mov
dec
jmp
push
scas
orl
push
es
mov
loope
incb
rcpps
imul
xchg
cmpsl
lock
frstor
insl
pusha
arpl
mov
xchg
out
push
and
cmp
outsl
loopne
sbb
mov
popa
and
pop
ficoml
and
and
pop
sbb
loope
arpl
inc
inc
and
push
cld
add
sbb
fwait
cwtl
mov
push
and
sub
loop
sub
outsb
inc
push
mov
fwait
adc
leave
jns
sbb
sub
xor
idiv
inc
repz
jg
xchg
jmp
or
inc
pop
sbb
pusha
adc
xchg
adc
sbb
adc
popa
jg
jno
mov
js
mov
adc
jnp
add
adc
mov
test
out
shr
pop
push
sbb
cmp
sbb
call
inc
aad
gs
pop
sbb
inc
and
fidivl
fwait
or
aam
sub
jecxz
lods
or
scas
mov
push
pop
jle
sub
push
jmp
in
lret
daa
push
xchg
lret
dec
shlb
mov
and
pop
mov
push
sbb
int3
out
loope
cmp
in
gs
pop
out
cmp
ljmp
sub
jbe
xchg
or
aam
lock
and
rcr
adc
pop
adc
xor
cmp
xorb
cmp
inc
xor
ss
jl
movsb
inc
adc
cld
insl
lahf
andb
aam
pop
or
xchg
in
dec
fxch
sbb
adc
inc
test
jnp
push
inc
imull
mov
xchg
data16
jne
aas
mov
lcall
xchg
push
cmc
shlb
lds
pop
mov
xchg
xchg
dec
xchg
xchg
iret
cli
jno
add
clc
fwait
mov
jg
inc
sbb
ffreep
lcall
das
aam
lds
adc
jmp
pop
sub
shlb
je
cmp
leave
ficoms
sub
cmp
sbb
sbb
icebp
aas
pop
incl
pop
rolb
sub
pop
cmp
loop
cmp
dec
jns
mov
sub
sbb
lods
movsl
ss
pop
insb
aas
lods
xchg
and
fisttps
cwtl
xchg
loop
stos
pop
add
data16
repnz
cmpsb
or
imul
jno
pop
pop
imul
jns
jg
jae
add
pusha
xor
push
inc
dec
adc
xchg
insb
add
dec
sbb
add
jns
add
mov
bnd
mov
xor
out
outsb
jns
dec
out
pop
xor
push
lret
sbb
sarb
sbb
mov
inc
addb
push
and
mov
movsb
jge
cwtl
mov
push
adc
and
mov
dec
out
dec
scas
sub
jp
pop
inc
lds
pop
jge
mov
push
jecxz
xchg
std
cmp
ja
sar
sti
jmp
push
mov
outsb
es
jo
hlt
push
mov
movsb
inc
mov
jb
pop
jg
in
push
repnz
dec
jge
sbb
mov
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
jno
es
gs
add
mov
adc
loop
imul
fidivrl
and
sahf
adc
test
add
mov
or
bound
jecxz
mov
and
jno
pop
out
inc
xor
je
lret
add
verr
xchg
push
push
pop
inc
leave
cmp
mov
dec
mov
xchg
sbb
cld
outsb
push
dec
pop
jo
jp
adc
shlb
pop
pop
pop
jge
pop
test
cmp
int
mov
in
nop
add
sar
mov
imul
xor
push
and
xlat
cmpsb
pusha
add
mov
daa
xchg
lret
loopne
cmp
push
dec
pop
mov
insl
pop
push
jecxz
test
inc
lods
push
sub
lods
pop
fisttpll
add
loopne
sbb
xrstor
insb
outsl
xchg
mov
xor
xor
pop
int3
pop
sub
outsb
int3
mov
ss
loope
cmpsb
leave
js
jg
adc
dec
imul
imul
fiaddl
daa
mov
mov
std
push
mov
pop
imul
in
in
int3
lds
ret
mov
mov
mov
nop
xchg
ret
and
inc
movsl
pop
inc
jae
jae
adc
in
inc
jmp
enter
call
outsb
es
cmp
or
faddp
jb
jb
out
xchg
or
scas
xchg
push
out
mov
stos
add
stos
xchg
cmp
stos
mov
push
int3
mov
mov
psllq
sub
push
xchg
fs
dec
jbe
adc
inc
ds
inc
mov
dec
jb
fidivrs
in
jns
divb
push
sbb
mulb
sbb
scas
test
lods
sub
inc
popf
stos
lods
lret
ja
fsubs
icebp
cwtl
arpl
fstpl
add
mov
mov
pusha
loope
cmp
rcrl
std
pop
cmpsl
xor
out
push
xchg
mov
es
int
jno
mov
repnz
mov
imul
sub
mov
dec
dec
cmp
mov
mov
sbb
pop
sub
add
les
test
pop
ljmp
icebp
xchg
clc
jg
in
push
es
loopne
hlt
sub
movsl
addb
mov
mov
addr16
std
mov
sbb
lea
push
dec
stc
jns
jmp
push
sub
pop
repz
sbb
push
repz
sti
sar
jl
inc
xchg
lods
out
imul
popa
mov
stos
mov
mov
fisttps
repz
inc
lods
imul
jp
cmpsl
xchg
pop
mov
sbb
movsl
imul
in
cs
je
mov
jle
mov
mov
add
or
push
inc
add
inc
adc
fcompl
pop
mov
add
and
insl
inc
test
or
mulb
mov
mov
cld
sub
dec
scas
shlb
lret
es
dec
pop
sarb
aam
sbb
mov
loopne
pop
aaa
or
iret
sub
aaa
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
cmp
lret
aas
nop
out
pop
jnp
movsl
cmpsb
xor
or
mov
shll
push
mov
mov
rcrl
lock
or
rcl
enter
adc
push
push
inc
es
sub
push
mov
mov
inc
pushf
jl
push
add
rorl
rolb
add
mov
lcall
mov
sbbl
stc
adc
cmp
imul
repz
add
movsb
jmp
jo
xor
mov
add
stos
fst
out
cmp
test
or
ds
mov
sbb
sbb
nop
std
cmp
repz
mov
pop
adc
bound
inc
fisubl
sbbl
dec
ret
imul
pop
stc
shrb
or
and
cs
cmpsl
jmp
das
rolb
cli
mov
pushf
jge
fidivrl
jae
fidivs
dec
aam
ljmp
sbb
adcl
cmpsl
imul
in
or
lcall
jecxz
out
push
sub
dec
call
inc
push
enter
sub
jg
dec
jno
lret
mov
xchg
icebp
loop
adc
xor
push
pop
ret
jnp
js
mov
lods
xchg
pop
pushf
add
dec
jns
push
cmc
inc
mov
sbb
mov
xchg
jns
xor
sub
pop
data16
and
nopl
lods
mov
xchg
jne
xchg
adc
hlt
inc
push
into
pop
cwtl
in
adc
add
inc
shlb
enter
cld
push
cmp
out
push
push
mov
mov
push
cmpsb
push
loopne
out
hlt
mov
aaa
shlb
cmp
scas
add
mov
std
ljmp
inc
das
frstor
je
and
icebp
cmp
adc
fwait
test
rclb
or
ds
mov
outsb
loopne
insl
jle
fsubs
mov
jno
pushf
sub
call
ret
jle
lds
cs
clc
mov
sbb
arpl
mov
inc
sahf
xchg
mov
jg
stos
lds
cwtl
movsb
icebp
mov
call
out
cmc
imul
jno
dec
jne
in
mov
cld
imul
and
mov
popa
pop
outsb
fisubl
sbb
leave
loopne
daa
movsl
fld
jmp
or
adc
jg
xorb
jmp
scas
aaa
add
lcall
test
xor
hlt
jl
xchg
jge
mov
clc
pop
hlt
push
fcom
fcmovne
xchg
mov
outsb
lods
fmul
popa
xchg
mov
js
mov
and
iret
adc
ljmp
ficomps
or
push
xlat
xor
pop
test
cld
shld
fcoms
and
xchg
ss
jmp
cmc
xor
lods
cmpb
mov
push
test
loopne
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
xor
adc
inc
test
sbb
pop
add
adc
shlb
orl
xor
test
and
sahf
push
push
lret
push
scas
mov
jle
andl
xchg
jns
mov
test
cmp
mov
dec
dec
xchg
packsswb
bound
hlt
fwait
test
jnp
gs
leave
rcr
negl
push
stos
cld
lock
cs
jge
hlt
aam
fsubrl
aad
mov
out
cmpsl
mov
mov
inc
aaa
ss
fmuls
inc
ret
fcomip
in
jo
adc
mov
or
dec
je
sub
ljmp
cmp
jl
daa
adc
shll
sub
mov
jo
int
fsubl
sbb
dec
inc
adc
sub
cmpsl
and
mov
and
sbb
std
sbbl
test
insl
push
pop
add
sub
fwait
jae
xor
pop
repz
in
xor
xchg
jne
addb
dec
xor
mov
jle
arpl
outsl
cmpsb
push
cmpsl
push
into
loop
and
daa
jno
repnz
dec
adc
xchg
pop
lods
sbb
mov
call
movsb
loope
jne
call
inc
sub
jnp
fistl
call
ret
cmp
fucom
mov
addl
xor
jbe
inc
inc
or
push
fs
int3
xchg
clc
push
leave
inc
nop
cmp
or
push
lods
ds
lret
cmp
mov
dec
xor
xor
push
stos
push
mov
jbe
stos
add
idivl
cmc
rclb
inc
jp
dec
data16
push
ret
sbb
data16
cmp
arpl
mov
jne
sbb
dec
out
lods
popf
push
stos
mov
stc
imul
fildll
dec
leave
xor
push
addr16
pushf
cs
mov
jmp
mov
sbb
lods
mov
idivb
cli
leave
xchg
and
inc
imulb
ficomps
insb
push
into
inc
lahf
repz
mov
sub
sar
les
add
fnstsw
mov
pop
pop
int
dec
sbb
arpl
add
xor
jns
out
pusha
ror
xchg
xchg
add
mov
das
push
mov
jns
cmp
and
pop
pop
mov
mov
jge
aas
adc
xchg
fsubrs
shl
fists
dec
out
xchg
shl
dec
cmp
cmp
or
stos
adc
xlat
or
dec
adc
cmp
lods
fstpt
inc
mov
lahf
or
addl
push
cmp
in
ret
jp
pop
inc
push
in
mov
rclb
push
jbe
nop
pop
mov
out
and
xor
lds
push
ret
adc
xor
cs
sbb
mov
add
sahf
cs
cmpsl
lods
xchg
call
and
push
mov
ss
ret
mov
out
adc
add
cs
faddl
addr16
je,pn
lret
imul
inc
mov
jnp
inc
cld
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
fistps
push
sbb
adc
sbb
int3
es
enter
cmp
cli
or
shlb
xchg
jmp
sti
movsl
lret
xorb
pop
and
jno
lds
repz
mov
popf
arpl
jecxz
into
ret
out
add
sub
mov
add
adc
mov
stc
ljmp
mov
cmp
xchg
cmp
add
push
cmp
jge
lahf
and
mov
mov
js
pop
pop
mov
xor
stos
lock
lret
adc
aad
ljmp
jnp
push
faddl
mov
pop
push
pop
push
test
std
sub
mov
xchg
add
jbe
leave
and
fs
pop
lea
sahf
adc
add
xor
repnz
inc
and
and
loope
mov
loopne
or
jmp
sub
test
xchg
cmp
popa
enter
or
dec
lcall
outsb
mov
and
mov
mov
ja
test
mov
jg
inc
sbb
leave
inc
test
sti
arpl
push
loope
adcl
outsb
popf
jl
pop
push
in
jge
call
lcall
jae
enter
or
cwtl
push
sahf
add
in
ret
sub
jg
in
adc
sbb
and
divb
inc
fucomip
add
or
xchg
mov
leave
or
fistps
mov
adc
xlat
mov
outsb
cmc
cmpsl
mov
xor
popf
mov
adc
stos
sbb
xor
add
negb
mov
ds
mov
int
xor
insl
mov
add
cmc
lods
sub
sub
inc
sub
pop
xor
aad
iret
jne
js
addr16
inc
std
xor
jb
dec
test
fwait
rclb
iret
fnstcw
popf
dec
in
cmp
jecxz
push
cmp
iret
sti
jge
cltd
dec
leave
ret
imul
les
lret
aas
sbb
mov
xchg
mov
addr16
inc
scas
add
mov
enter
mov
subl
rsqrtps
add
aas
stos
adc
xchg
mov
and
fs
jnp
mov
jecxz
sbb
mov
jae
scas
mov
pusha
xchg
test
pop
mov
pushf
ss
sub
or
mov
dec
and
aam
pop
add
repz
mov
jb
xchg
adc
pop
lret
fcmovne
adc
shlb
mov
into
mov
mov
dec
mov
scas
mov
addr16
cld
or
adc
adcb
es
popf
jmp
scas
stc
fwait
push
mov
fs
dec
mov
add
inc
adc
sub
cld
cmp
or
insl
sub
dec
ret
pop
stos
popa
jo
in
lret
bound
aad
adc
add
imul
fdivrs
leave
jbe
sub
mov
sarb
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
sub
push
sbb
adc
sbb
mov
or
psubsw
lret
sub
imul
add
pop
push
sbb
add
push
inc
rcll
fidivl
xchg
mov
sahf
cmp
mov
pushf
add
inc
inc
rcr
faddp
ret
or
mov
or
lcall
mov
int
es
adc
and
inc
repz
mov
in
lret
dec
jae
jecxz
aaa
fsubl
or
push
leave
push
push
arpl
pushf
in
cmpl
mov
sbb
js
stc
sbb
mov
pop
ret
or
mov
add
and
cltd
mov
out
es
bnd
pop
mov
test
mov
cmpsb
dec
pusha
sub
cmpsl
pop
or
or
mov
stos
sub
mov
mov
das
jl
add
dec
imul
and
mov
cmpl
pop
dec
les
cmp
test
xor
cli
fxch
mov
jl
inc
sub
mov
or
icebp
stos
jp
add
out
daa
iret
roll
ss
jecxz
lret
movsl
mov
adc
fistl
and
adc
push
arpl
or
stc
cmpsl
xor
inc
lcall
icebp
aaa
add
pop
cld
xchg
pop
mov
in
inc
cs
int
inc
hlt
nop
add
fcmovbe
adc
pop
out
xor
xlat
jmp
loop
idivb
mov
jecxz
aas
pop
adc
adc
pop
fdivs
add
pop
and
xor
aad
aas
cmp
stc
mov
fdivrl
repnz
jno
aas
pop
jecxz
inc
pop
push
xchg
sbb
rcll
xchg
lods
pop
push
cmp
dec
adc
cmp
loop
add
in
sarb
mov
xchg
les
sti
add
inc
lret
adc
sbb
aas
or
jb
repnz
clc
add
incl
xchg
dec
adc
xor
xor
jecxz
push
hlt
push
or
push
xchg
inc
addr16
lds
cmp
mov
add
or
aas
inc
jmp
jno
mov
mov
sti
xchg
adc
imul
sub
sarb
ja
subb
icebp
bound
test
inc
outsb
out
ret
push
and
mov
mov
stos
fisttpl
cld
inc
adc
xchg
out
in
lret
outsb
adc
imul
and
pop
cmp
aam
cmp
ret
pop
adc
rcrb
stos
adc
leave
jl
xchg
test
xchg
hlt
mov
mov
jno
mov
sbb
and
jae
gs
xchg
inc
and
pop
pop
paddsw
pop
sarl
mov
dec
xchg
and
popa
jae
ljmp
xor
xor
outsb
leave
xor
fdiv
icebp
aaa
pop
jnp
retw
sub
lods
lahf
imul
and
inc
mov
jb
jmp
fs
movsb
daa
shll
hlt
xchg
or
sub
repnz
popf
leave
gs
push
pop
sarb
loopne
dec
enter
or
jnp
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
jg
mov
xchg
push
sbb
adc
sbb
fwait
das
sub
mov
push
xchg
jle
pop
jmp
adc
inc
mov
xchg
je
or
pop
xor
rclb
xor
jne
cmp
rol
pop
pop
inc
push
mov
push
mov
aad
dec
or
jbe
shr
push
mov
icebp
js
adc
and
jnp
and
loopne
in
loopne
adc
dec
fwait
int3
add
xor
inc
lahf
add
nop
ret
add
pusha
cli
pusha
mov
les
cmp
add
jle
popa
std
pop
mov
or
xchg
fisubrl
shlb
imul
fnsave
and
and
add
mov
popa
call
add
adc
loopne
push
lods
fidivrl
dec
cmc
pop
aas
jae
bound
cmp
icebp
pop
leave
movsb
mov
push
xchg
adc
icebp
mov
dec
lock
push
push
mov
ja
mov
inc
push
push
push
insl
lret
in
addl
dec
xor
mov
jecxz
jnp
stc
test
dec
ror
cmc
in
dec
pop
xchg
adc
scas
inc
inc
sbbl
fisttpl
push
jecxz
mov
ret
mov
hlt
mov
cmpsl
in
out
sbb
lock
fwait
ja
push
fwait
int
mov
inc
jne
fsubl
movsb
out
flds
jge
call
das
pop
mov
pushf
sub
stc
hlt
push
inc
adc
scas
inc
push
pop
stc
lods
xlat
sarb
in
in
xchg
in
dec
xchg
fucomi
mov
clc
and
add
movl
lret
nop
mov
xor
arpl
cltd
jg
sti
das
es
lods
mov
movsb
push
leave
int3
loopne
and
in
push
pop
mov
add
xor
pusha
add
fcoml
lahf
mov
sahf
jge
jne
fidivrs
cmp
push
pop
push
incl
aas
mov
arpl
inc
ret
sarl
sbb
adc
call
ds
and
les
cld
out
or
iret
pop
dec
cmpsb
test
cmp
xlat
sub
mov
repz
push
xor
fs
loop
sub
cmpl
add
and
mov
or
lock
adc
or
movsl
in
xchg
es
and
dec
repnz
lods
subb
les
push
daa
aas
ds
out
aas
jbe
ret
movsb
mov
cmpsl
or
imul
sbb
scas
cmp
adc
push
stos
jb
push
mov
and
lret
leave
in
push
movsl
or
jecxz
shll
leave
xorl
test
loope
ret
sub
and
push
lea
jb
inc
xor
fmull
int3
out
decl
mov
jb
inc
inc
out
mov
cmp
test
test
popa
fidivs
sbb
fiaddl
cmovae
insl
sub
push
pop
sub
cmp
bound
fstl
push
or
xchg
xchg
cmp
lock
add
jno
out
inc
out
xor
mov
mov
stc
cltd
fcoms
and
movsb
pop
mov
fwait
jecxz
aas
mov
pop
mov
sub
lret
cld
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
lret
mov
lea
sbb
adc
sbb
aaa
xor
mov
inc
test
repnz
insb
aam
fldcw
push
out
cs
mov
jne
and
arpl
daa
ret
test
mov
in
shll
mov
out
inc
es
xchg
mov
jle
dec
jae
and
jp
xchg
push
pop
stc
push
push
leave
shr
sub
ljmp
mov
dec
jb
out
popa
ja
pop
repnz
cmpsb
sar
mov
lds
out
dec
popf
or
out
repz
pop
mov
and
mov
fmul
xor
and
xor
xchg
sub
adc
aad
pop
rorb
mov
pop
push
gs
sub
enter
and
or
sub
sahf
sbb
in
mov
jns
pop
lret
sub
sub
inc
ljmp
push
mov
loop
mov
insb
leave
stos
stos
or
clc
lcall
popl
insl
lahf
mov
stc
cvtps2pd
sbb
mov
jne
xor
nop
pop
mov
and
test
in
xor
and
xorb
jne
fnstsw
jp
fstp
ret
int3
jno
sbb
cwtl
cmp
lock
call
pop
and
test
inc
xchg
xchg
in
xchg
pop
add
arpl
adc
fwait
inc
push
pop
es
jmp
jbe
dec
push
je
sub
ret
subb
mov
inc
addr16
popa
ds
or
and
cld
scas
xchg
fistps
stc
mov
test
jl
call
lret
dec
syscall
sbb
sahf
and
jmp
pop
push
pop
int3
out
nop
clc
pop
push
shlb
cmc
mov
icebp
jb
movsb
ret
xorl
jb
push
add
or
mov
sub
out
bound
dec
clc
add
pop
mov
mov
dec
pop
ret
pop
daa
or
push
add
push
fcoms
xor
cli
aad
sub
cs
flds
mov
sbb
aam
fwait
into
cmc
fisubrl
or
dec
out
mov
outsb
sbb
inc
jne
shll
and
mov
jno
cmpl
bound
test
xchg
lock
cltd
mov
and
fwait
push
fldl
add
pop
xor
int
rcrl
adc
mov
es
xchg
xlat
push
cltd
incb
pop
mov
out
test
arpl
enter
shll
xchg
test
es
jo
push
sarb
push
nop
xor
pop
rolb
sbb
jp
cltd
xor
int
pop
pop
ret
mov
loopne
pop
add
lret
jnp
aaa
add
mov
jno
jb
fwait
mov
aas
sbb
dec
mov
adc
push
mov
arpl
xor
xor
mov
mov
ja
fistps
push
jne
sbb
mov
mov
push
cltd
adc
shlb
push
pop
jl
fisttpl
jo
push
stos
lods
or
add
stc
scas
rolb
sub
sbb
push
add
dec
pop
add
adc
iret
out
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
addr16
xor
and
sbb
mov
idiv
pop
repnz
and
and
pop
push
pop
test
sbbl
jae,pt
stc
sub
mov
into
ds
cmp
and
inc
push
aam
lret
call
cmpl
and
js
mov
and
xlat
cs
sar
fidivrs
adc
jp
ficompl
ja
test
ficompl
test
push
mov
std
lds
or
mov
in
bound
push
in
jns
data16
rcl
push
std
outsl
xchg
cmp
or
ror
aam
notl
jb
testl
out
mov
and
insb
cmp
into
rol
into
mov
sarl
jo
in
scas
je
das
xor
mov
mov
xchg
daa
jo
xor
cmp
mov
sar
cmc
mov
mov
outsl
les
shl
cli
xor
fwait
push
loope
mov
int
mov
cmpsb
sub
fiadds
bound
fbstp
dec
loop
hlt
pop
adc
cmp
ljmp
repz
movsb
outsb
sub
loopne
stos
inc
jmp
or
adc
and
dec
gs
or
sub
enter
int3
push
test
dec
jno
into
xor
sbb
add
fidivs
cli
hlt
jmp
mov
add
das
push
in
mulb
push
mov
enter
jae
jg
pop
mov
les
mov
mov
and
mov
shr
inc
mov
xlat
aad
test
addl
shll
or
mov
rol
notl
xchg
jge
push
push
icebp
or
push
mov
inc
inc
add
jg
xor
into
je
dec
adc
ret
icebp
push
loope
dec
jecxz
es
sbb
xchg
outsb
and
xchg
in
xchg
test
divb
cmc
subb
add
adc
mov
mov
xchg
xchg
mov
mov
fs
pause
imul
pop
stos
jae
adc
and
or
push
loope
push
jp
es
repnz
mov
pop
into
inc
sbb
js
mov
jno
jne
pop
push
pop
iret
arpl
in
pop
sahf
jl
jge
pop
mov
jge
cs
xchg
dec
cmpsl
daa
and
pop
sahf
test
inc
rorb
arpl
sbbb
cld
fildl
fs
cmp
jp
push
xchg
inc
sub
enter
imul
xorb
push
and
xchg
lahf
pop
test
xor
add
sbb
movsb
sbb
sbb
cmpsb
or
jae
jecxz
xchg
or
jb
repnz
push
incl
xchg
les
sub
xchg
and
push
push
cmp
adc
or
dec
pop
mov
loop
std
cmc
hlt
sbb
popf
cld
dec
jge
sub
adc
adc
int3
cmp
adc
cmp
shl
push
fisubrs
lret
mov
ljmp
test
inc
xor
jnp
out
pop
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
imulb
jg
sbb
adc
sbb
push
sbb
lods
fbstp
mov
mov
outsl
pop
sub
sub
or
aaa
jmpw
pop
pop
jb
xchg
cld
shrl
dec
push
sbb
das
test
mull
cmp
mov
push
inc
int3
test
xorb
mov
or
hlt
cmpsl
out
pop
cmp
dec
iret
xchg
inc
mov
aas
fstl
out
push
lcall
inc
mov
lcall
clc
insb
inc
lcall
xchg
dec
ficomps
in
subb
inc
mov
imul
movsb
xchg
mov
push
hlt
mov
mov
aas
jge
popa
into
jp
push
out
inc
or
mov
aam
imul
xlat
pop
pop
adc
call
orl
std
pop
sbbb
ret
stc
pop
xor
jl
int
mov
iret
lcall
out
outsb
sbb
daa
mov
lods
sub
popa
mov
outsl
push
add
or
or
rcll
test
cmp
pop
ja
jg
popf
int
dec
repz
sbb
push
sub
adc
adc
fcomp
sbb
sbb
arpl
sbb
pop
sub
add
or
std
mov
sarb
ja
fstpl
mov
fistl
movsb
or
mov
lea
adc
sub
rorl
ljmp
xchg
test
out
outsl
push
daa
xor
lahf
imull
pop
cmc
inc
sti
jbe
fcmovb
fsts
je
out
out
push
rcrb
push
dec
fidivs
xchg
cmp
mov
pusha
cmp
lods
adc
flds
shl
xchg
mov
test
movsl
rcrb
arpl
jbe
xchg
push
ds
mov
sub
enter
or
inc
fcomp
jl
push
lahf
stc
push
push
ds
add
jnp
cmc
or
inc
add
sbb
add
stc
sub
inc
xchg
or
adcb
jb
aad
popa
push
push
fstpl
cmp
push
fisubrs
jo
into
ss
ja
hlt
sub
adc
enter
popf
push
in
movsl
xor
cmp
scas
and
mov
stos
sub
adc
jo
mov
mov
subb
push
xor
and
fs
sub
stos
mov
in
xlat
addr16
into
fdivr
shld
push
shll
adc
out
in
lock
stc
or
inc
sbb
rorl
cmc
addr16
add
repz
cmp
mov
jmp
fisubl
sub
leave
inc
iret
push
lods
movsl
fistpl
icebp
adc
cmpsb
cmp
push
mov
sbb
jns
fcomi
mov
les
mov
stos
shlb
inc
jmp
lcall
mov
xor
addr16
loopne
clc
arpl
scas
mov
or
enter
repnz
cmp
xor
divl
xchg
and
cmp
ss
push
mov
push
or
inc
sub
mov
cmp
test
popf
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
xor
jns
sbb
adc
sbb
pop
stc
mov
sub
cli
mov
scas
jg
sbb
lret
add
imul
mov
shll
inc
jl
fcoms
adc
fisubl
rcll
mov
cmp
ficompl
mov
in
mov
adc
sbb
jbe
lea
cmpsb
imul
es
fnsetpm(287
or
lcall
xchg
inc
lods
shlb
jae
adc
in
cmp
inc
xchg
mov
jns
pop
out
cwtl
nop
addl
outsb
sub
fstpl
test
sub
adc
leave
dec
je
jno
mov
jge
xchg
test
inc
jl
mov
mov
mov
and
xchg
cli
sar
jg
mov
mov
pop
fs
lcall
or
cmp
cmpsl
fcoml
lret
mov
cmp
test
sub
rep
xlat
adc
mov
inc
js
add
mov
loop
call
clc
push
sub
add
sbb
mov
insb
pop
sub
cmp
cmp
cmp
adc
push
shl
and
or
mov
psubb
ss
shrd
call
push
sti
arpl
movl
mov
push
dec
out
or
movsl
dec
pop
jmp
lds
ret
js
in
sbb
in
call
addps
jo
cmpsb
popa
jbe
idivb
cs
lea
pop
push
dec
imul
dec
les
ja
jmp
push
mov
loope
insb
stos
pop
lea
jae
imul
cmp
insb
add
fbstp
repz
or
add
jne
montmul
cmpsb
add
jge
mov
outsl
ds
rorl
andb
mov
fstl
sub
test
pop
jle
fxch
mov
dec
xchg
push
sub
or
add
sahf
push
mov
ds
popf
adc
idivb
cmpsl
cli
iret
xor
pop
insb
push
pushf
cwtl
ret
push
or
imul
pop
add
sahf
jp
inc
sahf
imul
sbbb
push
insl
xchg
les
jns
hlt
or
fisttpl
arpl
jecxz
enter
lahf
pop
mov
int
sub
ljmp
xor
adc
and
idivl
mov
orl
dec
pop
and
cwtl
xchg
popf
sub
and
out
xor
sbb
cli
xor
mov
mov
sbb
imul
inc
ss
pop
fcoml
lds
pop
in
mov
fiaddl
aaa
xchg
jne
repnz
jae
pop
add
clc
mov
js
inc
out
outsb
dec
sbb
sbb
cmp
fwait
cld
push
sub
xchg
mov
fucomp
inc
add
dec
rcll
push
test
jmp
lods
mov
and
mov
outsb
pop
dec
cmp
scas
in
andb
in
push
jns
inc
xor
outsl
push
or
adc
lret
das
loopne
loopne
xor
insb
rolb
sbb
add
push
pop
xor
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
iret
push
jle
jno
sbb
adc
sbb
or
imull
add
or
pop
call
sbbb
aam
test
repz
mov
add
je
and
cmp
pop
dec
push
test
mov
jle
mov
iret
add
xor
inc
testl
or
inc
in
add
ds
lcall
inc
in
cmp
lcall
dec
push
push
mov
add
push
pop
rep
ljmp
iret
les
mov
aas
sahf
int3
ss
mov
push
mov
out
cmpsl
out
xor
loopne
dec
pushf
mov
hlt
adc
inc
pop
and
dec
sbb
fidivrs
test
and
pop
and
or
cltd
and
pop
sti
mov
hlt
in
inc
sub
dec
pop
sbb
jle
jg
aad
xchg
mov
xor
cmpsl
and
cmp
mov
jge
xchg
xlat
add
pop
inc
jno
add
ja
pop
std
mov
sbb
mov
stos
cs
enter
aam
or
jo
call
ja
fwait
inc
sbb
jmp
inc
adc
leave
sub
add
mov
xor
dec
inc
adcb
popf
or
leave
in
out
dec
xchg
mov
dec
aas
push
sbb
leave
dec
inc
pop
insb
hlt
adc
jge
scas
fldcw
pushf
iret
mov
into
int3
les
inc
adc
jns
mov
pop
mov
scas
enter
push
pop
mov
call
xchg
aas
fldt
sbb
scas
sub
fisttpll
int3
inc
push
bound
add
push
mov
lods
clc
outsb
fdivl
sbb
addb
jnp
pop
lea
sub
jge
negl
fistps
and
mov
jg
dec
dec
imul
mov
and
jo
xchg
cmp
into
jecxz
pop
je
mov
out
hlt
and
dec
cltd
out
in
call
push
or
inc
push
ficoml
and
int3
add
inc
cwtl
jp
jle
pop
mov
xchg
mov
mov
scas
pop
jno
adc
adc
lret
sarb
jbe
aas
xor
mov
fsubr
push
pop
xor
add
shlb
fsts
mov
mov
push
mov
notl
fimull
les
enter
mov
imul
jg
js
inc
mov
mov
dec
scas
fimuls
sub
push
push
mov
in
cli
data16
aaa
ret
mov
or
es
ds
and
push
sub
js
into
pushf
inc
sarb
add
into
in
aas
inc
pop
stos
add
adc
mov
cmp
mov
adc
or
scas
outsl
pop
dec
mov
es
xor
jns
iret
rorb
adc
xchg
cltd
jecxz
rclb
mov
or
jno
ds
repz
cmp
sub
jo
into
imul
adc
js
add
xchg
aas
cmpsb
push
lret
rcrl
adc
cltd
xchg
and
daa
outsl
jge
push
jl
xor
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
mov
jl
imul
and
sbb
fildll
loopne
and
cmp
mov
jge
fsts
daa
push
push
adc
cmpsl
fs
cmp
mov
in
pop
xor
je
lret
xchg
jle
pop
mov
xor
scas
xor
pushf
incl
stc
push
and
cmp
mov
and
inc
push
icebp
or
dec
sub
cld
fists
push
fsts
or
sub
sbb
xorb
lea
adc
push
loop
sbb
aad
fcoms
ja
push
cmp
les
push
outsl
sub
push
or
dec
cmp
int3
or
jbe
movsb
push
adc
lods
lods
or
xor
dec
jbe
imul
movsb
sbb
pop
inc
adc
push
and
sti
adc
push
lods
sbb
add
dec
jg
xchg
jge
xchg
int3
cltd
testl
sbb
rcrb
sub
ja
mov
pop
dec
mov
jg
outsl
jno
jo
add
jae
test
pop
loop
cmpsl
cmp
xchg
cmp
cltd
dec
movsl
add
mov
or
jle
fisttpl
and
mov
xchg
fldcw
jne
lock
pop
pop
mov
cld
hlt
out
mov
lahf
pop
xchg
in
xor
shll
xor
sbb
pop
pop
pop
mov
and
jmp
jge
ret
xchg
xlat
jnp
hlt
icebp
sahf
push
pop
int3
mov
fs
cmc
subb
mov
adc
or
adc
stos
shrb
sbb
add
mov
jmp
pop
int
out
sti
out
fcoms
add
sub
xor
or
lahf
pop
testb
mov
inc
inc
sub
sub
or
lret
mov
cltd
xorb
inc
jbe
pushf
mov
inc
push
shll
negb
pop
cmpl
fs
imul
cmp
icebp
out
in
clc
lods
insl
lret
stos
jge
push
mov
imul
testb
sub
mov
cltd
lahf
dec
add
out
popf
mulb
ret
cmp
mov
xchg
mov
cwtl
mov
lldt
add
sbb
mov
ljmp
movsl
mov
ds
nop
cli
mov
out
cwtl
adc
xchg
sbb
jge
mov
inc
cmpsb
daa
mov
adc
jmp
pop
out
das
inc
test
xchg
jno,pt
xor
shrb
mov
fimuls
negb
aas
fmull
inc
and
jp
push
cmpl
loopne,pt
sbb
int3
adc
ja
mov
lret
jecxz
ljmp
or
scas
inc
mov
into
jg,pn
xor
xor
mov
inc
shlb
mov
mov
push
cmp
arpl
xor
add
mov
out
mov
and
std
aas
xor
inc
dec
sub
xchg
xor
inc
add
jno
xchg
xchg
test
mov
test
lret
pop
cmp
jmp
jnp
jmp
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
nop
dec
xor
arpl
sbb
adc
sbb
push
mov
sub
out
or
aam
jb
cmc
dec
aas
adc
out
mov
xchg
dec
cld
jl
loopne
mov
cmc
cld
enter
mov
mov
xchg
cs
inc
mov
insb
leave
pop
xor
pop
leave
aaa
outsl
popa
mov
movsl
sub
out
cmp
das
leave
pop
pop
pop
movsb
push
bnd
mov
iret
cli
rclb
data16
dec
push
push
sub
gs
dec
aam
pop
mov
fidivrs
shll
xor
dec
aad
std
xor
cmp
mov
imul
lret
add
imul
add
or
xor
aaa
rclb
fistl
stos
rcll
mov
fstl
dec
pop
or
pop
scas
inc
mov
dec
adc
pop
pop
mov
pusha
sub
xor
jbe
subb
add
inc
dec
les
sbb
lock
mov
and
adc
add
dec
adc
push
out
pop
lahf
add
xchg
sbb
sbb
out
shrl
enter
push
xlat
mov
jo
adc
out
pop
xchg
mov
sub
fld
test
jnp
bound
fs
rcrb
push
mov
pusha
mov
jbe
mov
out
push
mov
int
js
lds
push
inc
or
cmp
sub
loop
jne
add
sub
stos
dec
push
mov
inc
jns
rcr
sub
add
into
out
jo
xor
aam
ret
popa
movsl
addr16
sub
or
jmp
je
or
pop
cmp
test
in
lcall
fdivrl
xorl
fmuls
test
call
mov
xor
mov
jns
into
ret
jl
push
sub
shr
out
cwtl
sbb
and
or
std
aad
ja
sbb
inc
pusha
or
ret
jno
jb
orl
mov
fdivs
mov
pop
xlat
adc
fsts
ror
cs
mov
negl
pop
dec
adcl
jecxz
and
add
jge
mov
aad
push
inc
xchg
ljmp
test
les
push
sbb
movsl
je
cmc
shll
cltd
aad
add
gs
das
js
ljmp
aas
daa
sbb
loop
nop
sbb
or
jge
in
push
sub
adc
mov
jns
sbb
aas
sarb
mov
jo
mov
movsl
adc
xor
dec
fcmovnbe
imul
xor
shl
sub
and
ffree
movsl
int3
mov
cltd
mov
in
add
rcr
scas
jne
xlat
xor
xlat
fmul
push
cmp
xchg
jnp
mov
dec
rep
inc
push
jmp
das
lds
mov
rcll
aas
js
stos
mov
and
dec
add
sub
xchg
mov
xlat
xchg
lret
pop
lahf
xor
cli
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
add
jl
pop
push
sbb
adc
sbb
xchg
fiadds
cmpsl
cmpsl
call
inc
pop
mov
ljmp
sbb
lods
test
mov
mov
daa
std
pop
mov
push
ds
stc
fcoml
inc
imul
test
mov
jnp
dec
push
in
dec
fnsave
nop
inc
scas
jne
push
mov
inc
daa
jnp
pop
insl
outsb
push
clc
push
inc
push
inc
mov
popa
mov
das
pusha
pop
and
cmp
adc
push
ret
cmp
imul
adc
sbb
divb
outsb
pop
xchg
ja
pop
or
add
dec
mov
out
adc
es
sbb
cmp
add
fisttps
and
xchg
scas
pop
push
repz
push
sbb
pop
into
js
pushl
lcall
inc
sub
mov
mov
loop
jo
mov
fdivrl
inc
lock
sub
ret
dec
push
cmp
xlat
es
ja
pop
ret
pusha
loopne
aam
dec
arpl
pop
mov
or
mov
outsl
sub
sub
dec
rclb
jns
lock
sub
push
ficoml
out
xchg
pushf
retw
cld
inc
jbe
cmp
sub
adc
fmul
adcl
in
xchg
aad
add
inc
or
add
in
jbe
xchg
sahf
cmpsl
sub
cmpsl
clc
push
loope
mov
mov
aaa
xchg
xchg
insb
sbb
fsub
mov
addr16
lahf
mov
dec
lea
inc
fwait
lods
lea
arpl
test
addr16
xor
fs
pop
in
mov
add
add
test
aaa
add
inc
arpl
les
sbb
dec
mov
mov
sbb
js
cmpsl
push
insl
xor
xchg
pop
aaa
in
mov
decl
dec
lret
dec
xor
popa
mov
mov
jg
inc
aad
movsb
hlt
push
stos
test
bound
lods
movsb
loop
xchg
clc
bound
jecxz
adc
addr16
stos
into
adc
and
dec
pushf
cmovo
test
lret
xlat
cmp
outsl
movsb
push
sarl
bound
mov
mov
cld
out
pop
and
lds
push
cmp
sahf
scas
jmp
dec
sub
dec
lock
xor
pop
sub
push
mov
add
orb
push
subl
dec
loop
test
inc
repz
xlat
std
push
fildl
mov
and
add
in
aam
aaa
mov
mov
shrb
arpl
pop
repz
dec
xor
sbb
adc
out
mov
imul
into
fcmovnbe
aad
pop
mov
clc
sub
rorl
push
xchg
loop
inc
loopne
popf
xchg
fdivrs
jp
aaa
out
and
andl
and
push
or
in
lcall
loope
iret
jecxz
xchg
imull
movsb
xlat
fyl2x
out
test
addr16
jecxz
cmp
add
jne
das
dec
std
shrl
cmp
aaa
mov
out
jp
leave
pop
mov
movsb
jo
jecxz
outsl
mov
jle
ficompl
or
shrb
rclb
roll
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
dec
xorl
or
stos
das
push
ja
jg
xchg
repnz
out
nop
jne
scas
out
sti
ja
sbb
mov
lock
jno
mov
mov
add
mov
add
lods
dec
xchg
sub
inc
faddl
xchg
jmp
push
stc
arpl
das
pop
lock
sub
sahf
adc
pop
stos
test
lahf
cwtl
leave
fs
icebp
std
pop
inc
fdivrp
jge
scas
pop
loope
mov
mov
and
xchg
cli
add
mov
loop
mov
cld
sbb
push
add
arpl
mov
notb
mov
sbb
sahf
jle
cmc
stc
xor
pop
out
cmp
sbb
and
jns
bound
fidivl
or
fwait
push
leave
or
push
les
sbb
mov
ja
and
jno
filds
lahf
into
jnp
out
loopne
ss
sar
scas
pusha
push
xchg
dec
pop
push
jg
jp
adc
insb
popa
das
mov
mov
mov
jns
movsl
subl
out
out
mov
push
loopne
lret
bound
xchg
sbb
push
push
mov
pop
mov
mov
cmp
dec
leave
bnd
lcall
scas
cmpsb
mov
cmp
cld
mov
jg
mov
mov
mov
ja
and
adc
mov
mov
sub
rcll
cmp
mov
jge
idivl
mov
cmc
add
iret
mov
mov
out
sbb
pop
dec
jae
lcall
jl
fwait
push
xchg
cli
cmp
jns
fwait
fs
mov
test
mov
outsb
movsl
nop
or
mov
jns
inc
cmp
add
icebp
mov
mov
inc
xchg
cltd
push
cmpsl
xchg
sbbl
xchg
xchg
in
imulb
lock
shrd
jno
mov
sub
add
pandn
popa
xor
addb
add
cli
jg
imul
lea
adc
mov
ds
sti
sub
cmpsb
add
stos
stc
icebp
dec
cmpsb
adc
sahf
mov
and
out
lds
cmp
xor
mov
daa
push
jl
cmp
ja
imul
push
rcrl
mov
push
lret
mov
mov
rcll
mov
and
cmpsl
or
scas
push
enter
inc
mov
lcall
adc
test
sub
pop
lret
jb
pop
bound
divl
mov
and
or
adc
pop
mull
sbb
add
bound
cmc
mov
insl
jne
shrl
mov
jge
dec
rcll
repnz
movsb
ljmp
dec
repz
pusha
mov
mov
add
in
jp
into
mov
mov
loope
sbb
mov
testl
add
pop
psubusw
add
inc
insb
xchg
in
jl
sbb
xor
dec
je
pusha
xchg
and
mov
push
push
pushl
mov
inc
pop
xor
jns
add
mov
xor
lea
xor
orb
jecxz
loop
inc
xor
push
idivl
imul
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
lcall
and
sbb
mov
test
xor
hlt
loope
push
sbbl
add
sbb
inc
faddl
dec
rcll
dec
push
mov
sub
movsl
ss
mov
push
sbb
inc
imul
dec
mov
jle
push
dec
notb
add
and
dec
es
cmp
xchg
stos
or
test
or
adc
jecxz
or
adcl
cmp
faddp
hlt
lret
mov
fildll
and
mov
call
inc
sub
xor
sbb
sub
push
or
shlb
wbinvd
cli
jecxz
push
push
sbb
jns
mov
add
mov
dec
enter
shll
mov
scas
adc
or
and
movl
imul
inc
mov
pop
xchg
mov
sub
lea
xor
popl
cmp
mov
fucomp
jl
lods
in
cmc
mov
leave
add
dec
insb
sbb
inc
bound
sub
xchg
or
bound
loope
inc
cmc
jbe
xchg
push
cmp
push
mov
mov
lods
and
loop
scas
inc
ret
dec
mov
idiv
jle
inc
add
ljmp
in
fwait
ss
dec
mov
lret
sti
ljmp
subl
in
and
push
pop
int3
inc
ret
iret
adc
push
ret
stos
push
or
jno
add
test
pop
jns
in
push
lock
and
push
scas
sub
pushw
push
jo
pop
in
pop
dec
rorb
repz
xchg
mov
add
lret
test
xchg
icebp
loop
add
xchg
push
inc
imul
and
mov
mov
jns
lret
add
sbb
dec
pop
pop
cltd
shrb
fsubr
add
clc
fdivs
movsl
mov
popf
mul
jno
jb
pop
pop
iret
sahf
sbb
xchg
repz
xor
mov
adc
dec
and
push
jbe
jg
aas
mov
std
test
cmc
js
jp
rcl
out
ljmp
fildll
pop
sub
jns
mov
dec
insb
cli
sahf
into
inc
cmp
sti
fwait
pop
loope
dec
int
lods
xor
cmp
jo
clc
fdivr
cmp
cmpsb
cmp
lahf
in
mov
dec
and
cmp
lds
inc
dec
push
and
fbld
push
inc
in
jno
sbb
mov
in
outsb
dec
js
lods
bound
ret
dec
fs
in
push
rcrl
cmc
xor
frstpm(287
push
mov
cmp
cmp
add
adc
xchg
and
dec
or
std
cwtl
int
inc
push
cmpsb
inc
or
xchg
cwtl
leave
enter
incb
pusha
dec
pop
lods
lea
sti
test
xlat
movsb
stc
dec
lret
push
xchg
stos
scas
xorl
pop
cmp
aam
mov
push
dec
and
ds
hlt
test
pop
jb
sbb
sbbl
xchg
loopne
fbstp
nop
and
hlt
jmp
sub
imul
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
mov
sbb
adc
sbb
sbb
xor
lret
jae
adc
cmp
jne
xchg
ficomps
dec
roll
xor
sbbb
jge
xchg
lock
es
inc
daa
jo
imul
fdivl
pop
xchg
iret
mov
xor
inc
outsb
sbb
xchg
in
sub
pop
shlb
cmp
sbb
mov
fisttpll
repz
loope
lea
enterw
mov
xchg
dec
mov
fmull
imul
cmc
sub
adc
mov
mov
in
dec
lret
ret
sbb
jo
pop
les
or
jbe
jmp
push
andnps
mov
jmp
movsl
mov
loope
inc
sub
and
aam
inc
mov
xor
arpl
xor
sti
sub
adc
fisubs
push
cmc
ficompl
out
pop
jp
pop
decb
lods
push
sub
daa
ja
pop
cmp
je
inc
pop
testb
mov
out
cmp
xchg
adc
push
adcb
fsubrl
sbb
sub
jle
xor
and
shlb
and
mov
ret
loop
cmp
cmc
add
mov
inc
add
jae
movsb
mov
mov
xlat
xchg
cli
repnz
jae
mov
imul
pop
jne
pop
inc
fldenv
shlb
dec
je
je
out
jge
inc
jnp
stos
pop
scas
fdivrp
les
stos
and
pop
jb
or
pop
stos
cmp
xor
jl
or
adc
or
movsb
pop
int3
mov
popf
dec
fucomip
mov
lock
gs
lret
data16
dec
sarb
inc
lret
in
int3
push
sbb
popa
sbb
aaa
adcb
lret
mov
outsb
jno
aaa
int3
repz
fs
cld
jmp
xor
xor
push
push
or
or
les
xor
mov
fisubrs
sbb
cmp
add
pusha
jb
pusha
xchg
or
pop
ljmp
enter
push
mov
cmpsl
popa
lds
lods
add
aas
xchg
lcall
stos
adc
mov
mov
sbb
dec
lcall
sub
es
or
sub
add
sub
pop
js
and
cmpl
es
lret
loop
sahf
push
xchg
sbb
dec
pop
imul
xchg
pusha
cmp
dec
push
xor
roll
shll
pop
xlat
nop
mov
mov
xlat
icebp
jmp
add
sub
sarb
push
daa
push
mov
fdivs
or
push
xor
push
push
cli
ss
jp
repnz
xchg
pushf
add
pusha
dec
or
jns
lret
adc
icebp
push
ret
push
shrl
inc
cli
aaa
out
jge
mov
dec
and
pop
adc
call
pop
and
popf
pushf
stos
pop
jecxz
mov
xchg
ret
andb
sub
mov
adcl
or
push
bound
lods
mov
mov
sbb
cwtl
loope
pushf
lods
dec
repz
and
mov
inc
mov
xchg
mov
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
repz
mov
xor
mov
push
pop
les
sub
popa
dec
ja
and
xchg
xor
xor
inc
flds
sub
test
adc
inc
adc
aas
push
push
sub
cmp
dec
pop
ljmp
js
outsl
inc
fs
lods
cmc
and
aam
jle
push
sbb
gs
incl
xlat
call
adc
jnp
jmp
mov
movsl
ret
or
push
je
pop
cmc
jmp
xchg
arpl
stos
mov
push
jecxz
aad
xlat
jecxz
add
in
lahf
jno
and
xlat
sub
out
jecxz
cmp
out
and
ja
shll
push
test
xchg
fistps
mov
aam
and
inc
mov
jb
bound
mov
push
mov
cmp
cmp
insl
jg
sub
mov
aam
inc
mov
daa
ljmp
sub
ss
cmp
fwait
jae
cli
adc
add
test
push
int3
xor
fs
fwait
or
sbb
ljmp
data16
add
fs
repnz
rcr
subb
test
ret
adc
jmp
xchg
sub
inc
nop
push
push
adc
outsl
lea
adc
or
and
lret
push
xchg
mov
cmp
leave
pop
notb
cld
ss
je
mov
pop
pop
and
ret
enter
mov
xor
adc
xchg
and
loop
mov
mov
andl
xchg
mov
xchg
add
out
jg
jbe
lahf
out
ljmp
aad
dec
mov
lret
mov
mov
subb
pop
xchg
mov
stos
dec
push
lahf
jl
das
mov
mov
mov
fcmovnb
stc
cli
xchg
lret
pop
fdiv
sbb
mov
mov
adc
or
addr16
popf
jae
bnd
adc
popf
dec
ljmp
cld
mov
es
dec
mov
xchg
shll
dec
push
cmc
dec
outsb
jp
leave
push
lock
xchg
loope
jbe
pop
nop
lret
btr
xor
scas
bound
lods
fisubl
hlt
xor
sbb
ja
push
shll
repz
jnp
pusha
or
mov
mov
pop
sbb
mov
cmpsl
rcll
mov
fwait
push
and
in
in
sub
xchg
shrb
push
jnp
notb
jno
popf
sub
mov
vpmacssdqh
dec
mov
xchg
insb
nop
xor
or
mov
negl
push
push
incl
xchg
and
push
imul
in
jnp
int3
xor
mov
cmp
pop
insl
xor
and
cmp
in
dec
roll
pushf
xchg
lods
push
orl
cwtl
add
mov
movb
ja
std
aas
and
enter
lds
adc
lods
loope
out
outsl
hlt
jbe
jmp
subb
pop
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
jo
cmp
sbb
adc
sbb
push
sub
pop
mov
in
sub
lret
pop
loopne
std
ret
dec
xor
rcrl
loop
jne
sahf
sbb
iret
mov
pop
add
inc
repz
xchg
imul
pop
mov
mov
pop
jns
in
and
cli
mov
test
mov
jge
and
push
outsb
pop
imul
add
inc
xlat
leave
test
mov
or
test
push
cmpl
adc
mov
inc
loope
inc
mov
mov
xor
daa
pop
sub
cmp
cmp
xchg
stos
push
fidivs
mov
jmp
xchg
dec
jle
lock
mov
shll
cltd
and
dec
inc
jle
fldl
rcrl
cwtl
jg
pop
or
es
gs
mov
scas
lcall
daa
mov
mov
adc
inc
ljmp
mov
imul
fisubs
adc
fidivrl
outsb
or
icebp
mov
dec
mov
pop
imul
jns
sbb
dec
inc
cmp
adc
fstps
scas
pop
loopne
mov
pop
int
fucomp
cli
pop
sub
push
pop
or
dec
fildl
dec
loopne
cmp
out
pop
hlt
mov
test
adc
mov
adc
fchs
sbb
js
les
add
es
adcb
popa
pop
loopne
cmp
adc
pop
jge
pop
dec
movsl
jne
cli
scas
push
es
inc
test
movsb
cmp
pop
xor
xchg
imul
leave
cli
mov
xor
adc
std
jbe
popa
in
pop
push
notb
xchg
imull
push
dec
sti
mov
xor
sti
or
mov
add
cmp
imul
lcall
repnz
push
sub
dec
iret
movsb
shrb
cmp
jg
shlb
mov
aaa
xchg
mov
jnp
je
xchg
dec
xchg
sub
sub
frstor
insl
push
cld
lock
inc
xchg
lret
dec
xor
jp
xchg
repnz
mov
inc
xchg
test
dec
scas
loop
fidivl
jl
in
fwait
dec
xor
daa
xor
shrl
scas
andl
adc
inc
pop
fcmovnu
push
xchg
outsb
icebp
jecxz
and
sbb
pusha
dec
mov
cmpsb
xlat
xchg
sbb
popf
popf
cmp
cs
push
cmp
cltd
mov
in
adc
aas
sbb
push
mov
bound
js
or
addr16
addr16
lahf
inc
mov
rcrl
mov
jl
or
jg
push
mov
jbe
sbb
push
cmc
jmp
xchg
insl
sahf
sbb
xor
js
mov
jns
add
inc
jp
fstpl
push
insl
add
mov
imulb
in
dec
ss
xacquire
ret
aad
or
fistps
xor
sbb
add
mov
ljmp
in
sbb
rclb
xchg
mov
das
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
test
jo
xor
sbb
adc
sbb
and
add
mov
outsb
mov
cmpsb
mov
push
sbb
negb
lea
mov
es
imul
daa
mov
cmp
jge
cs
aad
dec
mov
into
daa
mov
lods
mov
lods
pushf
jg
push
hlt
sbb
hlt
hlt
addr16
mov
pop
ja
fsubl
jno
adc
sbbb
negl
lea
cmpsl
xlat
pop
ja
jo
inc
dec
fdivrs
mov
mov
mov
xchg
pop
push
call
xchg
push
jle
imul
mov
pop
xor
cmpsl
imul
pop
testb
sbb
mov
xor
add
cltd
sti
mov
jb
push
sbb
xchg
xor
sub
pop
xchg
in
adc
ja
and
andb
shrb
hlt
jle
imul
cmp
mov
mov
lods
push
in
scas
pop
movsb
enter
xchg
aas
jno
clc
sub
inc
cmp
pusha
js
inc
or
mov
xchg
cmp
pop
push
push
dec
add
pushf
test
dec
insl
loope
mov
in
sahf
lret
jge
mov
adc
test
jnp
bound
dec
jnp
or
or
xchg
cld
jb
and
mov
mov
xchg
mov
rsqrtps
sub
xlat
aas
ret
pop
outsb
dec
cld
cmp
dec
aad
test
loope
pop
mov
jae
pop
icebp
adc
or
pushf
sbb
cmp
test
jns
mov
aaa
fistl
out
push
in
arpl
push
jmp
inc
lock
hlt
push
loopne
xor
movsl
mov
mov
lods
lret
scas
das
add
add
sub
dec
aaa
scas
subl
cmp
cmc
int
addr16
mov
pop
push
addr16
jmp
aam
dec
xchg
mov
je
leave
fadds
inc
sub
push
dec
sar
jmp
clc
jg
push
push
das
inc
mov
pushf
push
xorb
loopne
jp
add
dec
jo
nop
cmc
pushf
pop
lret
in
movsb
mov
add
sbb
js
mov
mov
mov
push
mov
or
pop
xor
and
fmulp
sbbl
sti
mov
fld
and
jae
pop
dec
frstor
mov
add
clc
mov
lods
ror
mov
add
outsb
inc
in
xor
push
outsb
lock
or
mov
and
mov
loopne
sbb
mov
clc
mov
pop
sub
dec
movsb
hlt
xorl
inc
or
scas
pop
push
jo
and
mov
test
sbb
xor
mov
mov
outsb
movsb
xchg
mov
push
stos
add
flds
ja
cmpl
mov
mov
fisubl
jns
sbb
cli
sbb
push
or
daa
pop
fdivrs
pop
imull
out
scas
imul
mov
push
add
mov
dec
cmpsb
fimuls
jns
out
fdivl
push
or
push
loope
mov
imul
mov
fcomi
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
inc
dec
jle
sub
sbb
adc
sbb
mov
divl
mull
repz
cmp
mov
cld
ds
jae
push
or
jbe
imul
mov
fstl
cmp
int3
mov
orb
xchg
into
sub
call
aad
div
sbb
icebp
mov
cmp
das
imul
cmpsb
sub
dec
inc
mov
cmpsl
roll
loope
and
inc
jb
or
mov
stc
adc
arpl
ret
mov
mov
jo
insb
mov
xchg
xchg
adc
jo
dec
in
push
ss
pushf
cs
mov
xchg
pop
cmpsb
loopne
and
les
scas
lods
into
inc
xor
pushf
jle
test
nop
mov
imul
lahf
sbb
add
mov
pop
testb
adc
push
inc
daa
jp
into
inc
adc
cmp
sbb
xor
pop
push
out
stc
arpl
mov
or
divb
push
jb
sub
mov
mov
mov
jmp
leave
lds
xor
movsb
mov
sub
pop
add
out
lock
mov
add
mov
pop
decb
pop
pop
in
adc
sub
mov
ljmp
ja
gs
mov
lods
scas
mov
sqrtps
idivb
out
pop
push
enter
scas
pushf
add
or
pusha
sub
xor
or
sbb
leave
shlb
or
jb
mov
push
cmp
cmp
inc
or
dec
pop
mov
add
pop
add
subl
add
addr16
and
cmp
mov
je
jecxz
mov
stos
vdivps
or
adc
shl
mov
sbbb
outsb
ss
lcall
fisubrl
dec
xor
rcr
dec
add
or
scas
adc
push
inc
mov
jle
xchg
adc
loope
rorl
push
adc
jno
inc
rol
dec
lea
insl
mov
lods
jbe
movl
jge
and
jo
dec
or
ret
jo
sub
jnp
inc
dec
out
out
xchg
jg
nop
cmp
add
out
mov
add
stos
cmp
mov
in
dec
lods
sahf
orb
call
ja
fsubr
adc
test
je
clc
add
cmp
fldt
and
enter
inc
adc
jl
pop
mov
outsb
sbb
cmp
jge
test
jnp
push
aam
ljmp
repz
push
mov
popa
and
dec
push
dec
xor
sti
pop
cltd
sub
popf
xor
push
ret
scas
sbb
repz
cs
ror
jmp
into
cld
add
arpl
mov
movsb
push
ss
jle
add
cli
lods
add
or
inc
inc
mov
sahf
pushf
adc
imul
outsl
or
xor
xor
stos
imul
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
sbb
and
sbb
xchg
pop
sbb
aad
adc
lock
daa
mov
cmpsb
jge
imul
bound
pop
out
orb
dec
push
fcompl
arpl
xor
push
cmp
rclb
ljmp
fsubrs
mov
dec
cli
loop
sbb
dec
cmp
add
jle
in
roll
sbb
cmp
sub
popa
sbb
mov
sub
movsb
mov
repz
xchg
pop
int3
bound
out
and
js
decb
add
std
in
cmc
aad
lahf
mov
adc
jmp
frstor
aad
and
das
jo
push
cmp
rorb
sti
push
daa
pushl
or
cmp
movsb
jo
stc
mov
jae
dec
js
adc
mov
lods
addr16
test
enter
cmp
jb
out
xlat
sti
test
scas
pop
inc
dec
repnz
lds
adc
jae
fisubs
repnz
sub
pop
pop
push
xlat
cmp
push
fsub
fdivr
mov
ss
push
pop
cmp
pop
lea
mov
out
mov
cmp
mov
jns
sub
mov
jle
addr16
pushf
cmp
test
negb
cmpsb
addb
dec
fs
add
or
sbb
mov
stc
into
mov
and
or
insl
cli
pop
shrb
iret
shlb
or
mov
rcrb
stc
inc
fstps
mov
aas
loopne
jo
loopne
pcmpgtd
mov
mov
test
imul
mov
cmpl
loopne
jnp
push
inc
loopne
mov
insb
test
imul
fisttpl
out
scas
loope
rorl
aad
xor
roll
in
cwtl
ja
sbb
fs
push
fwait
pop
jg
sub
int3
xor
mov
adc
cmp
repz
outsl
or
fcoms
popa
xchg
rclb
stos
mov
gs
popf
dec
push
divb
push
pushf
mov
xchg
test
cmpsl
lcall
mov
sub
iret
or
stc
lods
cli
aas
clc
or
lods
push
popf
leave
test
mov
sub
jb
fucomi
es
dec
jo
bound
mov
mov
cmp
sub
and
jmp
cmp
mov
add
dec
jg
inc
xchg
add
fiaddl
popa
addr16
lods
pushf
out
push
xchg
add
int3
mov
cli
inc
ljmp
push
scas
arpl
cmp
cs
or
lods
mov
fiaddl
push
or
adc
iret
movsb
cli
jge
cmpsl
xor
jnp
cld
xor
add
scas
add
into
or
push
mov
dec
jns
stos
or
ds
cmp
scas
outsb
daa
xor
sub
xchg
bswap
inc
loope
fsubs
dec
xchg
psrld
cmp
in
out
clc
cmp
push
inc
xchg
faddp
push
out
push
mov
jge
nop
sbb
faddl
sub
pop
cmpsl
dec
sbb
in
and
add
lds
mov
or
nop
cmc
cs
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
scas
mov
sbb
adc
sbb
xchg
inc
inc
movsl
adc
in
dec
pop
pop
mov
out
adc
out
sarb
mov
xchg
inc
imul
les
ret
mov
lods
popa
pushf
jae
cmc
and
lock
insl
int
push
lea
shrb
in
hlt
dec
repz
es
testb
inc
call
and
and
rcrl
mov
jae
fldl
rorb
lahf
dec
gs
or
mov
jmp
jg
mov
mov
mov
cmpsb
movsl
adc
jnp
inc
lock
mov
mov
sub
bound
xor
lock
jg
in
sbb
ror
out
mov
hlt
mov
or
ret
lret
jbe
cmp
jo
jmp
gs
test
dec
or
test
add
in
test
cmpsl
cli
pop
push
mov
andl
and
fistpl
mov
movsl
cmpsb
xchg
loopne
xchg
leave
out
mov
loopne
cmpsb
fsubrl
sub
mov
lods
fs
cmp
hlt
pop
arpl
fbstp
scas
mov
cmp
xor
jbe
in
inc
mov
xchg
mov
add
mov
dec
lahf
push
cld
jmp
out
dec
jae
cmp
jle
fdivrs
and
les
add
shrl
adc
jb
inc
xchg
inc
push
mulb
ficoms
jne
scas
dec
cmpsb
stc
mov
push
and
dec
xorb
or
xor
xchg
push
mov
mov
mov
jecxz
sub
lret
ss
mov
push
clc
push
cmpsl
adc
jmp
loopne
rcrl
mov
xchg
sbb
flds
loop
mov
popf
es
daa
popa
mov
push
or
xchg
jb
in
negl
repz
and
pop
aaa
dec
cs
sbb
push
inc
loop
movsl
cwtl
fstpl
sarb
jno
mov
push
jo
mov
sbb
mov
push
popf
or
leave
leave
pusha
icebp
push
pop
int3
addl
and
lds
xchg
mov
rcr
lret
jnp
xor
pushf
mov
pop
pop
movsb
leave
sbb
in
fs
call
lds
scas
or
aas
cli
cmpsl
lds
imul
jmp
sbb
shll
dec
or
xor
and
xchg
jne
mov
and
imul
movsb
push
scas
xchg
add
and
mov
xchg
cmp
mov
cmc
inc
push
mov
sbb
mov
negl
mov
and
pushf
imul
punpckhdq
ficoms
push
mov
ss
gs
fistl
int
call
cmc
sarl
cmc
inc
pop
iret
repnz
mov
imul
pop
aad
dec
dec
stos
das
inc
rclb
outsl
add
jmp
shl
fstl
pusha
adc
jg
jle
pusha
leave
out
stos
mov
and
inc
jne
cwtl
repnz
mov
in
lret
outsb
xchg
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
jl
pop
push
sbb
adc
sbb
sbb
popa
es
jp
gs
aaa
dec
shl
xchg
mov
xchg
cmp
cmp
mov
insb
arpl
loope
push
jecxz
cmc
popf
nop
sub
sbb
scas
testb
or
mov
cmp
or
addr16
cmp
jno
add
cli
inc
mov
rcl
je
xchg
mov
es
lret
das
lcall
sbb
out
cli
mov
xchg
lods
xchg
mov
fldt
or
pop
mov
enter
mov
xchg
stc
dec
outsb
cmp
jg
cs
je
cli
fnsave
add
xchg
out
fwait
or
jl
adc
loope
inc
lahf
leave
out
je
pusha
mov
fnstenv
pusha
imul
mov
out
shlb
imul
dec
out
rorl
pop
adcb
loopne
inc
cmp
adc
lods
lahf
negb
cmp
and
hlt
mov
pop
jnp
xchg
ss
aaa
lods
cmp
mov
aas
pop
out
clc
cmpsb
inc
mov
scas
movsb
fnstcw
inc
adcl
into
pushf
push
mov
addb
and
dec
movsb
cmp
movsl
xchg
outsl
mov
imul
xchg
mov
das
sar
lcall
std
stos
loop
and
xor
scas
add
in
hlt
push
dec
add
pop
push
cmp
xor
pop
fcoms
nop
mov
insb
ja
popa
xor
lods
bound
mov
fiadds
adc
jb
push
fmull
stos
enter
pop
insb
pop
test
mov
sub
inc
sub
mov
and
xchg
push
lret
jb
andl
sub
jmp
xchg
sub
out
pop
int3
ss
sbb
mov
repnz
and
jl
int3
push
das
iret
mov
pop
ss
dec
pop
movsl
idivl
sub
mov
push
lcall
dec
mov
push
mov
iret
cmp
push
into
adc
cltd
inc
rcrl
das
stos
xor
mov
sbbb
lcall
sub
jae
pop
in
add
repz
rolb
sub
add
mov
das
fs
repz
xchg
fisttps
jmp
mov
shlb
inc
stos
es
and
rcll
mov
ret
outsb
mov
jg
add
lret
jp
les
jbe
fwait
xchg
cmp
xchg
inc
aam
jmp
shrb
in
out
lahf
fists
cmp
or
add
xchg
pop
repnz
out
arpl
dec
jmp
leave
addr16
daa
or
and
mov
daa
mov
sub
insl
dec
pop
loopne
std
test
push
add
into
or
mov
negb
cmp
xor
xchg
xchg
pop
xor
mov
adc
jns
pop
loop
mov
adc
inc
push
jp
sub
xchg
mov
aad
ret
mov
ss
jmp
aad
inc
or
push
out
and
aaa
cmpsb
cltd
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
adc
push
sbb
icebp
dec
daa
rcrl
sub
jle
cs
rorb
pusha
test
cmp
outsl
push
push
cmp
jae
les
cmp
jle
pop
test
xor
sub
push
jae
fcoms
inc
inc
mov
jl
jp
mov
jo
test
xchg
mov
inc
sub
xchg
jp
insl
cwtl
shll
fnstcw
or
jl,pt
or
test
add
fs
sub
out
fnclex
orb
push
outsl
sahf
xchg
mov
mov
push
repz
fidivl
std
mov
decl
ss
or
adc
add
pop
aaa
push
and
das
lea
or
sbbl
adc
jmp
mov
cs
cmp
aas
mov
outsb
mov
jo
ret
das
lahf
cltd
pushf
push
or
inc
adc
and
jb
out
add
fucom
adc
sub
mov
rorb
lret
int
inc
xor
mov
mov
xchg
lods
push
enter
lret
iret
js
mov
dec
mov
push
jnp
pop
adc
idivb
cmpsb
sbbl
stc
lahf
push
sbb
aam
ja
ficoml
leave
mov
aaa
rcl
push
pushf
bnd
sub
test
mov
addl
push
add
aam
mov
inc
into
jg
addr16
prefetch
xchg
jo
icebp
mov
ds
and
pop
mov
push
adc
sub
inc
data16
test
lds
clc
lods
add
add
pop
add
fbstp
lods
push
pop
daa
out
arpl
jae
icebp
jnp
inc
mov
cld
cmp
lods
jg
int3
testl
imul
outsl
outsb
xchg
nop
push
mov
iret
dec
add
jnp
pop
cmpl
push
pop
jo
add
fdivrl
shll
push
lods
sbb
out
dec
cli
push
cmp
cmp
test
sbb
push
inc
out
ret
mov
push
pop
fsubl
jmp
shl
pop
sub
mov
mov
fcmovnu
jge
pop
ret
jo
test
nop
sbb
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
add
mov
add
add
add
add
nop
add
hlt
addl
movsb
xchg
add
add
addl
adc
add
int3
test
add
add
call
add
add
add
add
xchg
add
in
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
aam
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
in
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pop
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
insb
es
add
inc
add
daa
inc
add
inc
add
add
inc
add
es
add
inc
add
inc
out
aam
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
and
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
push
and
add
sub
add
add
scas
lcall
das
dec
add
dec
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
into
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
data16
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
add
add
jbe
add
mov
add
mov
add
mov
test
add
test
add
test
add
test
add
add
and
add
xor
add
dec
xchg
add
add
push
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
outsb
xchg
add
add
mov
add
movsb
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
mov
add
add
add
add
add
mov
add
scas
mov
add
add
fmull
add
add
add
sbb
add
mov
add
add
push
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
