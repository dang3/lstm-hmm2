push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
mov
dec
fadds
pop
addl
cmp
js,pn
je
xchg
jo
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
sbb
xchg
ret
ficoml
shll
dec
mov
push
lods
xchg
dec
mulb
add
out
repz
xor
mov
lcall
pusha
jae
xchg
movsb
push
add
int3
mov
jecxz
mov
mov
call
pop
push
fildl
mov
stos
inc
repnz
ficompl
ror
loopne
cwtl
fidivs
jmp
add
jnp
xor
mov
out
or
mov
inc
in
lds
sub
sub
push
sbbb
in
repnz
add
and
popf
aas
loopne
mov
inc
je
cmp
cwtl
mov
pusha
xor
into
inc
push
pop
cmc
sbb
lods
and
mov
out
imul
cmpsl
mov
testb
cmp
inc
cmp
and
insb
pop
imul
dec
mov
jne
pusha
fldl
js
test
add
mov
adc
xchg
addb
aad
popf
sub
test
mov
mov
inc
sub
cwtl
stos
xlat
or
pop
mov
cmp
cli
mov
mov
pop
cld
push
dec
sub
inc
add
xor
pop
cld
xchg
shll
xor
in
and
jns
and
lock
into
pop
dec
sub
inc
sub
mov
mov
add
fdivl
adc
test
notl
testb
leave
outsl
sub
aaa
mov
xchg
clc
and
pop
shll
push
decb
xchg
sub
xor
push
stos
in
mov
and
aaa
mov
dec
movsb
lret
mov
pop
testl
sbb
lcall
inc
test
mov
xor
dec
jl
int3
mov
add
movsb
pop
xchg
cltd
jno
int
jp
imul
rcrl
testb
or
push
pop
lcall
orl
lds
pop
mov
and
inc
pop
fdivrs
mov
in
out
rclb
js
shl
mov
in
xchg
and
pop
les
xchg
rcrl
mov
adc
arpl
jo
test
and
mov
jnp
jb
push
jae
mov
lods
fisubl
cs
inc
mov
sti
cmp
mov
mov
aas
sti
fmuls
push
fsubl
xchg
rorl
xchg
adc
dec
fcoms
mov
mov
imul
jge
push
enter
push
mov
in
lcall
jno
dec
ficoms
add
xorb
sbbl
pop
pop
js
pusha
pushf
fcompl
aaa
pop
stc
cli
xor
xorb
adc
jae
adc
cli
adc
adc
pop
sub
cmp
repz
fdivs
rcrb
jl
add
sub
xchg
out
jecxz
movsl
mov
fstpl
push
xor
adc
inc
notl
lret
addl
stos
xchg
insl
jg
xor
shll
insb
decl
clc
fsubs
test
popa
cmc
outsb
dec
mov
repz
test
test
and
sub
cmc
jmp
push
jmp
repz
xlat
inc
enter
out
mov
or
les
dec
mov
aaa
dec
push
rorl
lea
push
sbb
pop
cmp
mov
arpl
test
dec
mov
mov
dec
push
or
or
das
mov
mov
ret
xchg
test
shlb
mov
xor
push
hlt
xchg
addps
xor
in
or
aam
push
mov
xor
mov
mov
std
stos
jmp
xor
ja
iret
mov
aam
mov
arpl
sub
mov
into
dec
mov
fs
jbe
insb
sbb
test
out
cmpsb
movsl
xor
xlat
jbe
insb
and
jo
loop
jb
arpl
or
and
jo
cwtl
lcall
xor
fsubrl
cmp
lcall
stos
sub
add
pop
xor
mov
mov
shlb
ds
jbe
inc
add
mov
mov
dec
and
out
int3
sub
jno
or
dec
jbe
cld
sub
sbb
cltd
cli
lds
sub
pop
pusha
fsubrs
shll
cltd
adc
aad
push
shll
int3
cwtl
nop
inc
cmp
adcb
push
mov
mov
popa
pop
icebp
ror
jge
mov
ds
sbb
inc
mov
mov
lock
sub
insl
lret
movsb
addr16
xchg
fldl
jmp
addr16
test
out
popa
rcrl
lret
testb
mov
test
iret
xor
sub
xchg
sub
push
int3
in
mov
icebp
push
mov
cmc
les
jno
sbb
pop
inc
out
lret
dec
adc
add
jmp
fsubrl
stos
test
and
add
pop
inc
scas
mov
jmp
pushf
sbb
dec
jle
clc
push
dec
aad
jns
shlb
outsl
pop
and
jle
fnstcw
cmp
pop
sbb
pop
daa
add
adc
push
lea
mov
mov
lea
mov
loopne
inc
dec
push
fisubrl
add
mov
and
ret
sbb
into
push
pop
hlt
adc
dec
cmp
jne
mov
sbb
xchg
es
loopne
lods
cmp
iret
movsb
and
dec
lret
fsubs
bound
jo
addr16
and
mov
mov
popa
and
pop
pop
mov
stos
sub
bnd
lcall
and
out
js
movl
mov
in
xlat
addr16
xchg
leave
and
dec
ja
roll
inc
fisubl
loopne
iret
jmp
rorl
mov
xor
lcall
push
mov
jo
mov
ljmp
xchg
outsb
and
dec
and
mov
pop
fstps
inc
cmp
xchg
jnp
push
rolb
add
mov
pusha
lahf
cmp
std
cmp
and
push
ljmp
dec
cltd
inc
call
mov
pusha
sbb
shll
xor
or
test
stc
and
inc
mov
mov
repnz
clc
push
push
push
movsb
cmpsb
int3
and
push
aaa
adc
in
sub
je
mov
sahf
pop
test
xchg
dec
test
xlat
mul
leave
add
adc
jns
fs
jecxz
jle
mov
enter
aaa
sbb
jbe
fnstsw
sub
pop
fsubp
add
cmc
push
into
jle
mov
mov
mov
sbb
fsubr
push
xor
mov
pushf
repz
inc
xchg
lcall
inc
add
ss
pop
mov
movsl
mov
fmul
inc
inc
ljmp
in
jo
sti
xor
cwtl
jp
and
sub
aaa
mov
mov
sahf
sbb
fsubs
adc
fwait
push
ds
push
push
cltd
xor
scas
add
mov
sahf
or
lahf
jne
int
sets
jg
mov
ja
mov
jno
cld
push
shlb
sub
sbb
mov
dec
fmul
xorl
pop
in
mov
shlb
inc
fsub
xchg
testl
pop
pusha
mov
pusha
xor
jne
in
cmp
pop
jmp
sub
cmpsl
into
pushf
pop
repz
repnz
aam
pmaxub
mov
js
adc
cmp
loopne
addr16
jp
mov
rcrl
divl
dec
rcr
cmpsb
fdivs
blcic
mov
pop
add
ret
ja
addr16
addr16
jbe
push
jo
mov
mov
cmp
or
repnz
enter
shll
outsb
mov
adc
xchg
sub
jg
mov
ss
jno
push
pop
out
cmp
mov
in
adc
mov
push
mov
sub
mov
and
test
jbe
xor
cmp
sub
cmp
push
idivl
iret
adc
sbb
mov
lret
jnp
pop
sbb
divb
xchg
inc
add
jb
and
sarl
adc
adc
lods
repnz
xabort
cmp
lret
jle
mov
call
xchg
addb
fmuls
adc
jp
mov
jmp
jbe
fnstenv
xchg
clc
dec
aad
hlt
or
jno
movsb
lods
inc
sub
push
mov
aad
xlat
aad
incb
mov
in
pushf
in
popl
sbb
es
and
mov
push
shrb
loope
pop
mov
ds
stc
nop
jecxz
xor
ficoml
cmp
sarl
pusha
dec
mov
mov
inc
sub
aad
std
adc
lea
mov
aas
jae
cmp
push
inc
pop
push
rcrb
add
push
cmp
xlat
cltd
or
jb
les
push
lret
out
aaa
xlat
mov
cmp
adc
push
sbb
ljmp
sub
dec
movsb
xor
xchg
mov
insb
pop
xchg
negb
mov
mov
pushf
add
bound
dec
bound
dec
xchg
mov
imul
inc
pop
test
push
leave
aas
and
xchg
add
mov
idiv
sbb
or
mov
jae
jbe
insl
jle
lods
pushf
mov
roll
pop
inc
loop
push
cli
sub
inc
es
add
sbb
ljmp
mov
int
loop
cmp
aas
les
leave
in
mov
mov
jl
adc
and
dec
mov
adc
push
jae
test
subl
push
sbb
push
ret
int3
fcompl
push
push
loop
mov
xor
xchg
add
pop
popa
arpl
push
dec
ret
dec
mov
cmp
xor
fnstcw
pop
adc
cmc
mov
mov
aaa
and
push
stos
xor
xchg
lds
pusha
add
movsl
mov
add
jnp
in
ja
adc
inc
test
lret
test
aas
mov
sti
xchg
push
add
fucomip
jne
dec
std
xchg
aas
mov
xchg
add
pusha
adc
and
cmp
nop
testb
jns
adc
dec
inc
inc
in
fwait
nop
jle
xor
icebp
aam
dec
enter
fimuls
nop
sahf
push
mov
sub
push
outsb
mov
fs
sub
lcall
std
clc
dec
push
ret
rcr
lcall
cmp
and
into
cmp
and
gs
sub
adc
lods
add
hlt
xchg
cmc
dec
xlat
jno
add
sbb
fsts
inc
pop
aaa
add
mov
mov
cld
outsb
jb
fdivl
dec
dec
jo,pn
inc
div
add
clc
pop
cmp
xor
das
inc
data16
test
inc
pop
sarl
and
cmp
shrb
notl
pop
xchg
or
les
bnd
in
hlt
jg
fidivrl
xor
sub
add
pop
in
mov
repz
mov
push
iret
push
adc
add
fnstsw
sbb
inc
xchg
mov
and
mov
inc
dec
push
ficoml
bound
cmc
mov
push
pop
jb
incb
push
mov
sub
sub
or
rcrb
aad
pop
cli
sub
rcl
fucom
dec
inc
jb
aad
cmp
xor
dec
aam
lock
cmp
movsb
push
or
ficoml
push
jbe
daa
pop
pop
push
mov
adc
int3
pop
adc
inc
and
mov
mov
cmpsb
jmp
add
mov
cld
sbb
enter
mov
sub
ret
add
int3
in
xor
stc
rclb
pop
sbb
inc
sarl
jge
out
cld
mov
cmc
xchg
and
arpl
and
cltd
jne
loopne
dec
mov
int
push
sbb
pop
cmc
xchg
cmc
cmc
mov
add
dec
cmp
mov
xchg
adc
inc
push
jle
imul
xor
inc
dec
add
jb
push
cld
sbb
xlat
jecxz
dec
xor
stos
jo
sub
sbb
xor
icebp
pop
cmp
and
and
popf
jg
xor
xchg
cmp
cmp
cmpsl
lret
lret
xchg
movsb
mov
push
xor
push
adc
mov
push
adc
xorl
mov
sub
fwait
inc
sub
loope
sahf
xchg
ret
or
cmpsl
add
jbe
cmp
mov
mov
adc
lds
mov
xchg
adc
dec
cmc
gs
mov
enter
xlat
xchg
fldl
call
test
fidivl
fwait
push
test
sbb
xchg
sub
push
xchg
dec
mov
and
mov
inc
push
leave
jns
movsl
lret
mov
and
out
arpl
mov
fmull
cmp
jne
mov
daa
push
loop
cvtpi2ps
shlb
and
pop
jg
pop
push
testl
clc
push
jle
xor
repnz
xlat
daa
dec
ror
mov
cwtl
lret
jbe
pop
pop
sbb
fwait
pop
cmp
movsl
cmp
dec
inc
ja
mov
xor
adc
movups
xchg
aaa
xlat
int3
pop
or
lds
adc
jb
jle
adc
insl
gs
pop
sti
mov
push
jns
add
loope
sbb
xchg
inc
dec
out
lahf
cmp
hlt
xor
lcall
pop
add
jmp
loop
mov
xor
jne
in
xchg
xchg
inc
inc
andb
push
mov
sbb
shrb
les
outsb
loope
test
aad
movsb
es
sbb
daa
das
push
jbe
mov
lds
sub
jbe
mov
pop
push
mulb
inc
lock
in
cmp
add
cmp
sub
fstpl
jge
push
xor
sahf
mov
nop
cmp
mov
xlat
sbbl
cwtl
xor
mov
aad
lock
or
or
add
and
adc
sbb
sub
or
cmp
adc
cmpsl
cmpsb
jp
lret
xor
cwtl
lock
aas
in
sub
es
jg
repz
stos
mov
xlat
sub
push
fstl
insb
adc
scas
popa
push
les
cmpb
mov
lods
mov
and
lds
sahf
cmpb
cltd
test
in
and
ja
cwtl
fs
bound
push
add
and
sarl
loopne
loopne
jge
cs
sub
mov
int
cld
insb
jns
add
push
mov
pop
mov
bound
sbb
cmp
cmpb
adc
fs
fmull
aaa
nop
xor
jp
fldl
sbb
adc
mov
adc
mov
out
and
mov
sbb
shrl
xchg
out
outsl
mov
aam
dec
inc
xchg
nop
outsl
stc
outsb
ss
pop
iret
mov
mov
pop
and
cmp
jnp
fidivrl
movsl
pop
mov
imul
icebp
or
jnp
ds
mov
mov
sbbb
mov
shlb
imul
cmp
mov
xchg
or
pop
inc
orb
lods
pop
adc
sub
push
xchg
loopne
gs
cmp
lods
inc
aad
repnz
inc
out
mov
add
mov
in
ja
adc
cmpsb
push
fs
xchg
mov
sbb
jle
pushf
stos
adc
into
sub
cmp
outsb
imul
or
push
mov
mov
add
clc
mov
jae
sahf
mul
cmp
les
mov
mov
mov
jecxz
mov
add
jp
stc
mov
arpl
mov
jo
inc
inc
lock
ret
btrl
pop
daa
mov
jge
lods
adc
mov
push
xor
xor
ss
and
mov
xchg
clc
pushf
mov
push
sub
cmpsl
jmp
mov
out
sbb
pop
and
and
adc
clc
jnp
in
mov
cld
xor
push
aas
inc
or
add
movsb
test
pop
pop
mov
dec
sbb
testb
mov
mov
xchg
fstpl
ss
mov
cli
cvtpi2ps
rcll
and
jle
sahf
and
xchg
movsw
cmp
enter
push
mov
sbb
sub
sub
xlat
sbb
jae
xor
mov
mov
and
repnz
in
mov
jle
mov
pop
dec
sarb
stc
push
pop
push
fisubl
movsl
std
call
mov
loop
push
jne
adc
cmp
or
outsl
mov
jg
adc
outsw
mov
jp
es
push
add
lar
cltd
test
sbb
dec
lods
mov
pop
daa
fidivrs
fstps
adc
out
aad
mov
dec
ficomps
subb
fidivrl
cmc
mov
xor
push
faddl
push
or
lret
mov
pop
sbb
mov
out
mov
pusha
outsl
leave
stc
jp
xchg
fsubrs
adc
sarl
push
jne
mov
cmp
shrl
xchg
inc
xchg
bound
ret
xchg
imul
mov
xor
outsb
jnp
inc
outsl
jl
in
repnz
subl
les
mov
inc
and
xor
rolb
sahf
mov
imul
xor
push
and
mov
xchg
sbb
sub
movntq
out
out
clc
dec
outsb
in
fsubrl
and
jns
mov
andb
int
or
jbe
aam
shrb
mov
sbb
dec
pop
test
jne
sub
xor
lret
mov
xchg
js
dec
enter
xchg
in
pushf
mov
shr
dec
pop
pop
sbb
sbb
jno
push
lods
rclb
insb
cmp
push
loope
push
or
push
lret
in
jnp
mov
inc
and
fiadds
jl
xor
mov
jl
ljmp
popf
out
mov
shlb
shlb
cmp
add
xchg
mov
aad
mov
push
daa
cld
call
xor
jns
mov
cs
jg
sbb
mov
aaa
gs
push
adc
out
pop
xor
cmpsb
test
sub
push
lret
sbb
push
xor
lcall
addr16
push
add
stc
hlt
jle
push
ret
fidivrs
das
movsb
dec
dec
sbb
push
jns
add
sbb
push
scas
out
fldt
or
inc
jge
cmp
aam
roll
incl
lret
cli
dec
repnz
push
jecxz
xchg
movsb
mov
subb
mov
les
paddb
and
cmpsb
aas
testb
xchg
adc
inc
shr
mov
movsl
iret
push
add
cmp
push
loope
fs
movsl
mov
adcb
or
movsb
pop
add
mov
stos
xchg
mov
jno
out
ljmp
lods
in
push
dec
int3
arpl
pop
jbe
pop
push
rclb
jae
ret
shl
scas
rcr
xchg
or
adc
sbb
paddq
mov
sbb
mov
movsl
vshufps
add
movsb
movsb
out
repz
inc
mov
mov
sub
mov
jnp
xchg
sub
adc
sub
outsl
mov
jo
ret
push
pushw
cmpsl
movsb
rorb
shll
lock
sbb
pop
out
and
mov
adc
adc
test
fs
ret
fidivrs
clc
pop
cmpsl
mov
aaa
xlat
popf
inc
pop
aam
mov
std
xchg
xor
mov
mov
cmp
push
enter
xchg
mov
inc
jno
adc
jbe
and
mov
xchg
in
imul
aaa
inc
add
sub
cltd
mov
inc
mov
stos
and
dec
jb
jle
push
test
xor
fsubl
ja
outsl
push
roll
push
shr
rcll
sbb
bound
mov
loopne
sarb
lret
pop
jecxz
cli
or
movsb
das
xor
stos
rcrb
mov
sbb
adc
pop
mov
int3
fbstp
pop
cmp
inc
push
push
out
inc
cwtl
dec
enter
out
add
imul
mov
pop
mov
test
dec
lcall
shlb
jae
movsb
mov
lds
add
jns
or
push
xor
imul
sti
negl
leave
push
jns
or
or
int3
je
pop
rolb
adc
mov
pop
and
fsubs
sbb
cmp
adc
pusha
or
daa
xor
xchg
dec
inc
dec
adc
xor
jo
loope
or
int3
sub
stc
fs
mull
pop
pop
cmp
subb
push
pop
out
xlat
aad
popa
std
mov
dec
push
adc
xor
lea
imul
sbb
inc
test
mov
pinsrw
inc
adc
ret
and
lods
sarb
adc
icebp
pushf
sub
addl
mov
or
shlb
testl
push
daa
inc
ja
sbbb
cmp
ja
negb
add
cmp
jnp
mov
adc
jge
fisubrs
inc
nop
int
mov
cmp
pop
insb
xor
jns
stos
jl
mov
ret
daa
mov
enter
jns
adc
cli
scas
cwtl
mov
or
push
rorb
jo
mov
test
std
mov
scas
inc
inc
xor
adc
mov
push
xor
jg
push
insb
jb
cltd
pop
add
cmc
add
jb
cli
movsb
iret
sar
adc
leave
sbb
jge
inc
and
ds
or
pop
mov
bound
pop
add
in
xchg
jl
push
inc
jl
push
fcoml
stos
adc
jecxz
aas
dec
into
bound
push
pop
jb
or
push
jge
aas
stos
arpl
ficoms
mov
decb
aam
jle
scas
fcmovb
push
dec
cmp
outsl
push
jmp
pop
push
ljmp
lods
and
jne
rcr
jge
repz
stos
mov
xor
in
leave
and
setb
inc
je
push
fiadds
adc
test
xchg
sbb
sbb
shlb
mov
xchg
xchg
add
movq
ret
fs
loop
hlt
out
in
mov
inc
mov
add
ljmp
es
fcmovu
push
repnz
inc
test
adc
jl
add
mov
in
inc
dec
sbb
cwtl
sbb
mov
sub
xchg
loopne
lea
mov
adc
movsb
test
test
stos
ljmpw
jo
ss
cld
iret
jl
push
enter
cmp
sarb
fldenv
in
mov
mov
nop
es
ljmp
shlb
icebp
pop
or
inc
clc
test
and
cmp
dec
sbb
cmp
sub
cmpsb
mov
xchg
out
xchg
inc
inc
jmp
pop
sub
dec
iret
inc
pop
jg
jp
adc
mov
cmpl
sbb
pop
mov
nop
stc
xlat
sub
push
lds
cmpsl
addr16
lock
mov
clc
decl
push
les
and
jae
inc
adc
mov
xchg
mov
in
lods
jmp
cmpsl
sti
cmp
sub
adc
cmpsb
fcmovnbe
test
and
xchg
cmpsl
mov
repz
stos
enter
sti
mov
lcall
dec
call
sub
lcall
sub
mov
aad
dec
in
adc
ficoml
lods
lret
xchg
dec
jle
or
cmpsl
pop
scas
out
xchg
add
jbe
and
pusha
jle
clc
or
mov
adc
loopne
push
movsb
sbb
push
scas
inc
add
and
jne
ljmp
push
cmpsl
cmp
cmp
sub
sub
jo
pop
mov
push
or
inc
xchg
pop
fisttps
and
mov
inc
and
lock
and
xsavec
test
sbb
jmp
cmc
int
fdivp
dec
add
adc
or
fildl
rcr
ficoms
lret
add
jmp
mov
xchg
dec
stc
jne
mov
imul
push
sub
mov
pop
clc
inc
jp
subl
scas
push
mov
das
int3
dec
inc
out
xchg
std
pop
sbb
rorb
jno
add
adc
mov
popa
cmp
sbb
imul
mov
cs
fbld
repz
inc
mov
aad
xchg
pop
and
lahf
sahf
add
outsb
sub
aad
jmp
insl
pop
dec
pop
cmp
cmp
les
inc
adc
dec
and
inc
ja
adc
push
xlat
mov
je
xchg
test
adc
mov
loop
sub
mov
push
jmp
sub
adc
dec
pop
sub
adc
lcall
push
in
test
std
aaa
mov
cmp
cmp
fcomip
pop
pop
push
inc
dec
in
sbb
pop
push
jp
xorl
cmc
jns
sub
dec
mov
or
into
sbb
push
cmp
pop
sbb
jecxz
imul
add
dec
pop
pop
xchg
rcll
popf
mov
or
stc
jle
es
aad
lods
xchg
mov
pop
inc
fistps
jno
fcomps
icebp
test
lret
js
push
mov
pop
fsubl
jo
pop
mull
mov
cmc
cltd
int
les
cmp
jl
test
dec
cmp
clc
sub
cli
int3
adc
outsl
je
lcall
xchg
mov
inc
repz
cmc
loop
sti
cmc
pop
repnz
fbld
bound
jle
fadds
sbb
mov
jns
jb
dec
inc
push
mov
rorb
inc
into
push
fisttpll
push
int
mov
test
adc
pop
hlt
mov
cmp
fisttpl
out
ss
add
adc
pop
push
ficomps
mov
scas
mov
cltd
xchg
jp
mov
outsl
dec
arpl
scas
cs
mov
jb
adc
xor
cmp
iret
cltd
aad
out
xor
cmc
jecxz
and
xor
pop
shrl
movsl
jmp
and
sub
iret
test
mov
dec
mov
aas
pushf
add
nop
adc
fdivl
lods
icebp
mov
loop
jb
test
arpl
dec
sbb
repnz
dec
push
daa
xchg
mov
and
push
fs
adc
sub
add
lock
mov
push
cs
sub
push
cmc
add
push
ss
ja
sarl
cs
and
sub
or
cmp
mov
sbb
xor
cmp
enter
out
sub
xchg
pop
inc
movsl
xchg
ljmp
mov
dec
out
mov
loope
int
les
or
mov
cmp
cld
pop
scas
mov
xchg
ret
outsb
ljmp
cmp
test
shrb
adcb
sbb
jecxz
xchg
ja
cmp
enter
push
in
push
mov
sub
rolb
lods
fwait
loopne
xor
xor
dec
mov
in
outsb
xchg
jmp
adc
repz
jle
into
test
test
lcall
pushf
fwait
mov
xchg
fimull
add
jns
hlt
sub
fs
nop
cmpsl
xchg
data16
jnp
jg
sbbl
cmpsl
mov
rcl
lods
push
add
add
pop
jmp
inc
dec
setg
mov
or
dec
mov
mov
fldl
das
ljmp
dec
adc
aad
popa
pop
arpl
xor
xor
jae
aaa
mov
pop
xchg
and
enter
jne
mov
fimull
xor
stc
add
insl
mov
sub
mov
je
sbb
rorl
lcall
mov
daa
add
cmc
loopne
jbe
aam
stos
push
mov
mov
cs
cltd
aas
mov
push
add
add
lock
mov
hlt
aaa
cmp
into
mov
jne
xchg
jo
lret
or
enter
stos
inc
in
push
cli
lret
mov
mov
das
sahf
cmc
push
loop
push
jg
clc
push
clc
sbb
fadds
idiv
clc
add
jns
mov
inc
sub
dec
mov
sub
fldenv
pop
jecxz
fs
add
int3
pushf
xchg
repnz
je
xchg
ficoml
push
jne
clc
fstpl
and
and
fcomi
mov
jg
ficoms
pop
and
adc
push
add
inc
ret
dec
sub
movsl
lods
in
cltd
xchg
scas
cmp
test
loope
xchg
mov
int3
or
pusha
arpl
popf
dec
imul
and
add
push
out
mov
and
pop
push
aad
je
movsb
stos
or
les
or
aas
filds
out
andb
mov
or
lea
push
lods
call
xchg
add
int
cmp
adc
call
xchg
mov
add
xor
xor
clc
cmp
repnz
sbb
xchg
push
insl
cmp
pop
insl
icebp
xor
sbb
addl
push
sub
mov
ljmp
iret
mov
aad
sbb
cmc
aam
cmp
mov
and
cmpb
inc
ja
adc
arpl
int3
fidivrs
jl
call
out
in
and
push
js
outsb
sub
xchg
leave
mov
sbb
pop
xchg
test
dec
mov
out
push
push
cwtl
xor
iret
or
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
arpl
orl
and
adcl
leave
xchg
inc
dec
and
cli
push
jno
cld
bound
imul
xorb
lret
lahf
add
addr16
sti
lahf
adc
stos
mov
dec
dec
or
jge
cmp
xchg
or
mov
loope
dec
pop
xlat
mov
sti
lods
jno
cwtl
and
mov
les
insb
inc
out
sbb
or
xchg
inc
adc
xchg
xchg
jo
subl
into
aas
or
pop
int
fsubl
pushf
lahf
outsl
mov
mov
daa
es
cmp
xchg
mov
ret
loop
xchg
or
pushf
icebp
push
mov
jb
lods
repnz
pop
xor
jno
test
ljmp
mov
fldt
je
jg
int
dec
jle
cltd
leave
xchg
and
lods
es
mov
push
mov
pop
mov
in
jae
push
movsb
sub
mov
jo
outsl
sub
jns
jns
dec
loop,pn
repz
adc
imul
imul
dec
es
test
pop
pop
cmp
adc
sbb
ljmp
in
inc
in
js
and
jne
fstpl
dec
cmp
testb
mov
jl
icebp
les
iret
jl
test
out
mov
addr16
cmc
jmp
xor
xchg
jns
sub
pop
xor
jge
xchg
jno
outsl
push
mov
xor
mov
dec
lods
cmpsl
sub
cmp
jg
lods
pushl
bnd
inc
pop
xorb
mov
dec
ret
cs
test
icebp
shrb
xchg
in
int3
jne
jb
and
add
adc
ljmp
movsl
mov
inc
adc
mov
int
psrad
adc
pop
jge
mov
inc
fcmovnbe
pop
in
hlt
push
adc
cmp
inc
or
push
ds
cli
outsb
nop
cmp
and
sarb
aas
mov
xor
fbld
inc
jno
xchg
or
adc
outsb
pop
sbb
push
jle
or
xor
mov
pop
xchg
mov
or
sub
dec
xchg
push
or
in
pushf
cmpsl
in
mov
push
imul
pop
cmp
std
mov
xchg
jae
dec
mov
sbb
mul
dec
mov
jl
pop
lret
pop
jo
mov
mov
push
xchg
mov
dec
int
cmp
outsb
xchg
mov
fwait
sbb
ss
push
xchg
sub
fldenv
dec
push
mov
cs
icebp
loop
je
jl
mov
enter
mov
fisttps
dec
pop
cmpsl
mov
push
roll
pop
imul
push
lods
cltd
mov
mov
lahf
pop
popf
fnstenv
jns
icebp
fadd
pop
xchg
scas
daa
in
and
insl
sub
sbbl
mov
mov
shlb
mov
clc
out
jno
in
sub
mov
sbb
test
aas
in
ds
repz
sbb
fs
div
pop
leave
cmp
imul
xlat
and
mov
adc
sti
js
mov
stc
adc
inc
leave
stc
cltd
pop
fstpl
in
mov
lds
in
sub
and
xchg
mul
and
ja
jns
fsts
dec
iret
pusha
outsl
int
pop
push
xchg
xor
out
pop
mov
xchg
sub
in
xchg
inc
rclb
push
cmp
inc
btc
pop
insb
pop
or
sub
daa
or
dec
and
jg
cmp
push
test
nop
push
js
cli
jmp
pop
or
or
popf
or
call
out
or
ret
and
mov
dec
push
hlt
xchg
iret
ficoml
or
or
mov
jbe
lods
mov
sbb
cmc
rcr
sbb
imul
mulb
lcall
popa
add
hlt
cwtl
outsl
pop
add
test
dec
iret
jp
jmp
or
or
outsl
and
lock
or
sub
imul
cmp
mov
xchg
iret
lret
mov
xchg
mov
mov
popa
dec
lret
fiaddl
jne
sbb
in
or
cwtl
push
adc
cltd
pop
dec
loope
ds
loop
mov
jns
repz
fimull
pushf
push
lcall
adc
pop
jns
or
rcl
jmp
xchg
std
or
enter
scas
inc
int
cltd
xchg
adc
mov
movsl
pop
sub
pop
arpl
fnstenv
das
mov
inc
push
js
cmpsb
mov
xlat
icebp
xchg
fbstp
push
repnz
cmp
dec
js
cmp
inc
fisubrl
dec
nop
daa
xor
xchg
mov
lods
hlt
adc
jl
test
push
enter
out
fs
pop
and
cli
and
jo
ret
ja
inc
stos
orb
cmp
sbbl
and
cs
loopne
add
pop
cmp
mov
nop
and
leave
gs
mov
fnstcw
aaa
jno
iret
xor
sahf
sti
jb
mov
dec
pusha
cmp
dec
loop
xchg
shlb
mov
stc
ficomps
push
shll
jge
pop
xchg
ret
out
out
jb
fildl
mov
adc
cmp
cmp
jge
lcall
sbb
roll
fnstcw
ret
mov
fucom
fdivl
loope
xlat
enter
insl
into
add
fdivs
addr16
jno
add
sbb
ljmp
jge
lods
push
mov
cli
iret
or
insl
fcompl
in
std
roll
mov
xchg
sub
cmc
mov
dec
pop
sbb
js
xor
add
sub
sub
outsl
testb
mov
or
in
cmp
nop
in
ss
pop
std
outsb
xchg
xlat
movsl
jle
loop
xchg
xor
jle
shrl
loop
popf
ret
mov
lcall
jl
les
and
mov
xor
xchg
jne
sub
cmp
cmp
jp
push
mov
ds
out
in
push
gs
push
adc
fisttpll
aam
clc
push
inc
mov
ficompl
jecxz
xchg
adc
lods
jecxz
push
cmc
adc
adc
and
inc
loopne
push
aaa
dec
shrb
stos
les
xchg
pushf
rcl
xor
aaa
aaa
and
pop
dec
cmp
jg
jno
and
sbb
xlat
std
lret
or
ds
dec
out
cmpsb
pop
mov
ljmp
cmpsl
push
mov
aam
in
rorb
cmp
mov
jle
popa
xchg
test
cmp
mov
or
adc
jbe
xor
pop
mov
les
jae
ret
xchg
je
or
inc
mov
hlt
ds
xor
idivb
dec
sub
shlb
or
sub
push
lret
mov
clc
or
inc
inc
xchg
jnp
cmp
push
out
add
cmp
lods
mov
xchg
add
jp
into
inc
outsb
push
std
adc
dec
mov
mov
xchg
cmp
mov
sub
adc
nop
cli
rcrl
add
inc
mov
adc
imull
es
bound
and
into
iret
jg
testb
out
fwait
inc
inc
xchg
clc
jmp
mov
mov
enter
call
jle
mov
out
xorl
sbb
xchg
sbbl
mov
adc
mov
fcom
outsb
lds
stc
lods
insb
add
and
enter
loop
cmp
dec
jge
xor
dec
xor
mov
lcall
dec
lahf
mov
and
add
pop
fisubrl
pusha
cmp
aaa
mov
and
mov
cmp
loope
push
shl
pop
not
inc
popa
adc
jne
jle
jb
mov
popa
cmp
cmp
and
jmp
int
mov
jo
clts
imul
dec
push
xchg
sub
jno
loopne
pop
pop
sbb
popa
xlat
push
sub
cld
mov
lods
dec
mov
gs
push
rorl
testb
add
sub
xor
inc
jecxz
push
sbb
inc
rcrb
cmc
or
dec
in
push
cmp
push
push
ja
fdivr
sbb
jnp
jle
xorb
dec
dec
add
les
mov
xchg
sbb
push
pop
add
xor
out
push
pop
mov
adc
fsubs
jmp
mov
cltd
jg
jnp
ret
push
iret
pop
dec
inc
mov
mov
jb
xchg
pop
es
rorl
mov
xchg
or
mov
ss
popa
arpl
inc
cli
outsb
cli
test
sbb
xor
cli
xchg
inc
push
mov
or
inc
sub
movsl
daa
cmp
sarb
lahf
inc
pop
insb
cltd
in
std
pop
nop
inc
test
fwait
scas
pop
outsl
lock
cmp
pop
push
repnz
imul
add
mov
xchg
mov
cld
adc
bound
cwtl
das
mov
daa
pop
ret
sahf
xchg
push
xchg
ja
in
movsb
cmp
inc
sbb
cmp
mov
mov
xorl
cmp
mov
jecxz
push
fcmove
mov
jg
jg
stos
mov
push
insl
sub
pop
push
ljmp
pusha
dec
pop
sbb
or
mov
insl
mov
cltd
xchg
shl
mov
push
cwtl
push
pop
int3
dec
nop
data16
or
xchg
pop
scas
xchg
sti
sbb
movsl
add
stos
xlat
subb
add
adc
lds
jl
nop
mov
lods
je
lret
jbe
sti
fimull
fisubl
fisubrl
pop
mov
cmp
or
clc
test
pusha
shlb
imul
xor
pop
inc
enter
jb
cmp
daa
cld
push
pushf
jg,pt
lret
pop
pop
inc
push
mov
fcomp
stos
int
stc
in
iret
decl
push
push
repz
mov
add
cwtl
push
adc
cwtl
pushf
incl
subb
mov
call
mov
pop
ret
cmp
add
push
and
pop
mov
pop
mov
mov
xchg
lcall
pop
lretw
stos
xchg
daa
pushl
mov
xchg
push
daa
add
vaddpd
sub
iret
aas
xor
mov
incl
fcomps
rcr
mov
inc
test
lret
sahf
test
in
adc
jmp
cld
movsb
jbe
and
push
xchg
dec
aas
xchg
adc
fwait
mov
sub
loop
sub
out
xchg
sahf
rolb
xchg
mov
fnstsw
xchg
dec
cmp
dec
arpl
pop
mov
xlat
mov
or
mov
gs
shr
push
mov
orb
or
flds
mov
mov
cmp
stc
outsb
fbstp
sub
xchg
sub
shll
xor
pop
fildll
out
push
rcl
cltd
shl
cwtl
test
inc
mov
ja
mov
andl
push
cltd
bound
mov
in
loop
shrb
neg
fadds
cmp
mov
and
aam
xor
adc
scas
jo
mov
in
mov
dec
and
insb
cmpsl
stos
sub
test
or
test
pop
leave
lods
push
mov
ret
mov
dec
inc
out
movsl
loop
push
push
mov
mov
cwtl
xor
iret
jae
xor
lahf
push
push
into
cmp
fdivp
cmpsb
mulb
pop
mov
movsl
ret
call
mov
jge
jb
leave
dec
and
mov
fisttpl
jl
gs
and
mov
divb
cmp
mov
mov
nop
adc
pop
enter
mov
mov
jp
and
sub
sbb
inc
sub
dec
fldenv
clc
popf
inc
xlat
popf
push
jmp
xor
arpl
jae
xor
dec
pop
iret
mov
mov
adc
cmp
or
daa
leave
mov
leave
movsl
inc
cmpsl
mov
dec
sub
cmp
enter
and
out
xchg
test
push
ja
lgs
pop
cmp
fldl
lcall
test
das
rcr
or
mov
lock
inc
leave
negb
sti
fadds
jp
inc
int
movsb
lods
jg
mov
mov
or
sbb
pop
jb
dec
dec
mov
aad
movsl
xchg
fs
movb
repnz
jecxz
es
jns
fs
mov
add
add
int3
dec
cmpsb
adc
inc
mov
cmpsb
pop
rcr
jns
and
add
cmp
scas
inc
iret
mov
and
dec
pop
xchg
mov
mov
and
jbe
cwtl
ret
mov
fwait
fwait
sub
pop
xor
jo
pop
lahf
push
pushf
pop
mov
pop
hlt
ljmp
xlat
xor
xchg
push
push
mov
sahf
dec
data16
fistpll
xor
aaa
cmc
enter
cmp
fwait
sbb
sub
lods
adc
xchg
jge
notl
xor
sti
outsb
vmwrite
jmp
lret
nop
dec
scas
int3
push
or
push
call
sub
aad
aad
xlat
mov
add
ret
jmp
inc
cli
gs
add
pop
mov
loope
hlt
pop
jl
mov
and
push
mov
sbbl
or
fistps
mov
inc
enter
lahf
push
adc
adc
aaa
mov
mov
mov
inc
pop
fs
fldcw
and
mov
push
rorb
addr16
into
lods
pop
push
out
das
sti
cmp
hlt
mov
xchg
loope
aam
or
pop
fcmovnb
add
dec
arpl
xchg
mov
pop
cs
sub
lods
cli
sub
add
jge
push
out
test
mov
pop
jecxz
sub
add
cmp
imul
je
push
sbb
inc
cwtl
popa
xchg
xchg
adc
insb
popa
sub
mov
mov
loopne
mov
stos
ljmp
stos
data16
push
sbb
int3
xlat
loope
jbe
mov
sub
jo
push
or
inc
jns
mov
fdivl
shl
jnp
inc
inc
test
mov
scas
insl
es
adc
mov
pop
jno
fildll
lcall
sbbb
arpl
aaa
lcall
pusha
mov
sub
mov
xorl
mov
jmp
arpl
sub
stc
jecxz
push
js
lcall
mov
loope
or
dec
inc
cmp
popa
stos
pusha
jp
js
jecxz
dec
or
cs
xor
xchg
rcr
rcll
cmp
inc
xor
lret
or
cli
adc
mov
aaa
loope
pop
icebp
pop
and
ss
and
adc
rcrl
xchg
push
lock
test
leave
leave
rorl
mov
mov
sub
ret
pop
dec
sub
hlt
fiadds
push
fstps
insl
inc
fimuls
jg
mov
pop
dec
cmp
xor
mov
dec
das
xchg
dec
lahf
jmp
push
add
push
fisubrl
pop
or
jl
imul
in
addr16
sub
into
or
pop
aam
fists
pop
add
pushf
mov
xchg
jo
mov
mov
jecxz
fcomip
out
cmp
insb
leave
gs
test
fmull
pop
push
mov
sbb
stos
pop
add
fnstsw
testl
mov
test
jg
jb
xor
shlb
jmp
fwait
pop
enter
es
mov
and
or
aaa
jmp
cmp
sbb
dec
mov
nop
shll
mov
sahf
add
clc
xchg
inc
pushf
jle
in
mov
mov
cs
in
das
sbb
stos
cltd
xor
dec
xchg
pop
hlt
lods
mov
test
vshufps
or
mov
push
mov
mov
fwait
jmp
sbb
mov
es
loope
mov
inc
xor
sub
mov
fdivs
popf
lds
shll
in
loopne
imul
fbstp
xchg
mov
push
ss
js
adc
jbe
add
enter
jge
enter
enter
cmp
aad
jmp
adc
sbb
push
dec
jg
xchg
das
jle
sub
popa
test
iret
xor
jge
jae
mov
fsubrl
inc
gs
mov
sub
sti
mov
in
pop
movsb
sbb
pusha
scas
loope
xor
push
aas
leave
lret
mov
inc
mov
mov
scas
cld
call
mov
dec
mov
mov
xor
test
in
mov
out
sbb
in
addr16
lods
cmc
popf
jge
mov
das
mov
clc
outsb
xor
pushf
rcrl
aaa
and
stos
insl
mov
daa
lea
pop
dec
popf
adc
pop
xor
lret
dec
leave
cmp
push
mov
mov
cmp
std
fidivl
sbb
jne
pop
out
aam
movl
dec
inc
mov
std
inc
dec
sub
movsb
xchg
das
jg
arpl
enter
push
addb
popf
enter
rcll
jge
mov
add
xchg
in
xlat
pop
das
sti
nop
push
lret
mov
or
and
mov
mov
out
insb
test
add
adc
aad
xlat
push
aad
aaa
push
jne
lret
fs
mov
je
and
xchg
shll
cwtl
pop
pop
insb
dec
fstl
in
mov
xchg
adc
shl
std
xchg
ret
jo
rorb
dec
cmp
jge
xor
fs
push
scas
adc
xchg
dec
pop
imul
nop
shl
mov
je
int
dec
push
cwtl
das
dec
jmp
call
shlb
and
sub
mov
arpl
cli
push
ds
data16
cwtl
sub
in
add
lods
jbe
add
push
pop
xor
push
jae
pop
sub
adc
aaa
mov
mov
inc
test
jno
mov
dec
repnz
sbb
push
inc
ret
push
or
add
push
insb
arpl
notb
ss
jg
loope
push
mov
add
push
addr16
test
fwait
mov
insb
mov
cmc
scas
ljmp
xchg
push
cwtl
or
out
lods
lret
dec
movsb
cmp
imul
or
stos
sub
fwait
pop
pop
sub
jne
cmp
ret
subl
daa
jb
scas
mov
ds
push
dec
jns
loop
out
shll
aaa
add
sbb
lods
nop
jge
sbb
stos
cmp
pop
mov
in
out
adc
insb
jp
jp
jecxz
clc
adc
rcll
pop
inc
stc
pop
jns
in
sbb
mov
movsl
jl
cld
or
mov
pop
int
cwtl
call
push
lret
cli
add
xchg
xor
fldenv
in
pop
jno
xchg
js
popa
push
repnz
loope
test
ljmp
cmpsl
sbb
imul
ficompl
mov
int
mov
mov
inc
shl
mov
add
inc
in
pop
aad
xor
lds
popa
leave
rcl
mov
cld
inc
and
xchg
xlat
lahf
xchg
cwtl
sub
add
hlt
imul
sbb
movsb
cmp
cmpb
data16
and
ja
ss
jmp
push
sub
icebp
movsb
test
popa
mov
sarb
cmp
js
sub
in
add
popa
add
ds
adc
lret
mov
mov
popa
push
ja
ss
dec
outsb
cmp
add
adc
and
test
add
adcb
nop
cmpsb
js
fnstenv
scas
inc
ffreep
mov
testl
mov
and
sub
sti
pop
push
daa
xor
xchg
sub
and
icebp
pusha
mov
or
into
icebp
in
popa
inc
mov
sub
push
jae
add
and
rol
mov
test
out
leave
cs
sbb
pop
inc
stos
mov
xor
pop
imul
xor
sub
jnp
mov
es
xchg
pop
cld
ret
or
jnp
push
push
sarl
adc
and
and
sub
cmp
hlt
in
pop
js
arpl
jns
mov
and
jmp
leave
addr16
cld
xchg
mov
sub
shll
popf
shll
cwtl
dec
in
xchg
xchg
cmpb
outsb
xchg
jo
push
out
test
in
cltd
cld
pushf
scas
in
inc
jne
mov
jmp
add
mov
addr16
stos
cld
xor
clc
bound
jo
test
sub
pop
mov
push
movsb
iret
jae
jb
mov
push
push
mov
mov
xchg
movsb
aad
cld
lahf
adc
push
adc
xor
popa
jge
cld
int
mov
pusha
inc
inc
jno
push
pop
sbb
out
iret
xor
arpl
xchg
mov
pop
cmp
ds
test
mov
push
daa
dec
loopne
push
testl
sbb
cwtl
js
mov
insb
ja
xor
outsl
mov
jle
push
sub
aam
sub
out
test
jle
pusha
adc
add
in
in
push
rcrl
clc
inc
sti
push
cltd
and
lock
inc
pop
sbb
repnz
or
adc
sbb
fistl
loope
or
repnz
mov
arpl
adc
adc
or
scas
lea
cmc
mov
fnstsw
sub
jb
hlt
lock
bound
out
ds
aaa
add
bound
imul
mov
and
and
movb
cmpb
dec
out
je
dec
ss
or
pusha
adc
scas
mov
shll
sbb
cwtl
outsl
ds
icebp
fisubs
push
js
sti
xchg
cwtl
dec
data16
pop
arpl
cli
mov
mov
shrl
rorl
repnz
test
enter
jp
lds
xchg
test
jb
xchg
jge
add
bound
bound
js
jmp
outsb
pop
push
xor
notb
xor
out
inc
in
push
mov
imul
mov
mov
sub
add
fcmovne
aad
jge
nop
in
lret
test
inc
jle
cmp
sub
xor
arpl
cs
mov
xor
mov
mov
ret
cmp
push
cmp
nop
insb
sbb
cwtl
adc
movsl
lret
data16
js
or
mov
stos
loope
mov
fisubrs
iret
cmp
adc
xchg
ss
sbb
andb
loope
iret
jo
add
sub
dec
rolb
pop
fsts
nop
inc
ss
jmp
mov
dec
call
mov
gs
stc
sarl
push
cmc
mov
or
push
inc
jge
je
cmp
in
pop
outsb
repz
aaa
pop
test
or
mov
and
loope
js
push
mov
aad
lret
or
ret
mov
mov
xchg
outsb
sub
mov
push
mov
sahf
jmp
in
imul
outsl
cld
and
fstpl
shr
inc
sbb
mov
test
lods
shlb
test
lock
fcomps
rolb
inc
pop
les
fcompl
inc
test
sub
lahf
mov
rcrl
mov
js
loope
dec
outsb
ret
jbe
test
lods
inc
cmp
sahf
ret
xchg
loope
std
and
and
cmpsl
jg
popf
pop
adc
enter
or
call
std
cmp
inc
and
cwtl
les
divl
push
clc
loopne
pop
jns
popl
lods
imul
jb
jae
add
jecxz
idivb
lea
cwtl
xor
aam
fidivl
es
pusha
cld
test
pop
pop
push
aas
inc
xchg
nop
and
mov
les
dec
ret
subb
xor
fidivrl
nop
imul
stos
pop
or
inc
inc
sub
outsl
adc
mov
stos
sub
arpl
xchg
sbb
lcall
mov
push
aaa
ror
pop
lret
fucom
subl
fwait
mov
mull
pop
outsb
cld
adc
in
push
adc
dec
mov
loop
cld
fwait
xchg
imul
push
mov
into
cltd
aam
mov
sbb
cmpb
sar
icebp
shll
xchg
cmp
cmp
xchg
pop
jb
lods
mov
aam
fwait
int
mov
mov
push
xor
cmp
mov
loope
loopne
in
inc
push
mov
jle
xchg
push
xlat
pop
push
or
iret
stc
push
aad
add
cltd
pop
rcrl
adc
rcll
shrl
mov
hlt
mov
and
pop
pop
mov
adcb
stos
pusha
aad
pop
mov
sbb
or
or
cmp
sbb
aas
ljmp
lcall
icebp
dec
arpl
xchg
sbb
lret
jle
push
jno
sub
aas
icebp
out
xchg
pop
fdivl
std
in
das
es
cli
add
push
aaa
shl
jmp
in
mov
mov
jns
dec
in
sbbl
dec
push
xchg
fcomps
jp
fwait
test
mov
adc
adc
stos
lock
fstpt
js
push
pop
lret
jnp
xor
stos
lds
mov
les
sbb
sarb
ss
arpl
fcoml
add
pushf
cmp
ficoms
cmp
cmp
mov
jecxz
inc
xchg
inc
flds
pop
loopne
imul
sub
adc
jbe
loop
sti
pop
xchg
cmp
lahf
dec
xchg
add
out
out
adc
inc
sbb
insb
and
sahf
stc
das
add
movsl
xchg
pop
push
jo
sbb
pop
js
loop
mov
andl
pop
data16
aas
adc
js
insb
fisubs
aam
cmpsl
jbe
mov
xchg
mov
jmp
sub
jno
fwait
out
cltd
jle
shlb
stc
dec
mov
sti
gs
or
fbld
sbb
mov
mov
mov
adc
loop
iret
jno
mov
es
mov
mov
add
dec
or
fildl
shlb
push
xchg
sbbl
jp
hlt
mov
aam
push
sbb
mov
adc
jmp
jo
push
and
mov
adc
mov
inc
repnz
aas
lcall
pusha
and
aad
leave
iret
pop
rol
outsb
ret
sahf
fmull
dec
ss
add
insb
jecxz
adc
xor
fistpl
or
push
and
fdivs
test
int3
sti
mov
adc
ficoml
cmc
andb
stc
fists
adc
jne
add
xchg
inc
mov
inc
or
addr16
insb
cltd
sahf
mov
aaa
jge
aaa
mov
xor
dec
in
sbb
dec
rdpmc
jge
pop
dec
out
leave
cltd
inc
es
dec
adc
into
les
pop
fstps
and
sahf
xchg
xchg
jmp
mov
aad
lret
fildll
ds
insb
xchg
lcall
ljmp
or
mov
or
test
push
leave
gs
jg
leave
shr
mov
push
or
and
push
imull
sub
imul
loop
jge
loop
and
fstpt
add
cwtl
test
push
push
inc
movsb
push
bound
adc
lret
out
in
loop
data16
jmp
enter
mov
lea
movsl
xchg
fsubl
fldcw
out
sarb
pop
pushf
xchg
or
out
sbb
adcl
mov
test
sti
inc
jbe
stos
popa
mov
mov
data16
in
daa
adc
mov
pop
jge
dec
cld
lds
jmp
sbb
loop
push
cmp
pop
fsts
ljmp
mov
pop
lds
jb
jnp
jae
aas
jp
inc
popa
pop
cmp
clc
inc
mov
jmp
pop
jge
inc
xchg
insb
out
call
jle
sub
sub
fisttpl
shrb
outsb
inc
fldenv
mov
push
add
ret
and
inc
cltd
mov
xchg
mov
push
repz
ss
flds
mov
adc
insb
and
mov
xchg
jne
jb
enter
mov
stos
dec
outsb
icebp
or
sub
enter
call
aas
scas
bound
xchg
test
push
xor
pop
int
pop
cmp
xchg
data16
sub
inc
push
dec
dec
add
and
enter
scas
mov
rcll
sub
fstl
jo
push
mov
push
gs
xchg
sbb
mov
xchg
xor
cmp
into
lods
mov
popa
cmp
cmp
addr16
mov
enter
lods
mov
fistpl
mov
test
mov
cld
std
push
push
xchg
hlt
pop
icebp
xchg
sbb
pop
flds
pop
aas
fcmovne
push
das
ret
out
inc
jmp
pop
lods
out
push
fdivrl
and
mov
add
lcall
xchg
jecxz
jle
xor
addr16
and
or
cmpsb
mov
or
cltd
fadds
adc
dec
dec
movsb
daa
jp
and
lds
js
test
fs
jnp
nop
sbb
mov
bound
and
cmc
lock
lods
enter
adcb
fldt
xchg
mov
cs
and
xor
pop
cwtl
add
and
inc
mov
mov
cmp
pop
sbb
pushf
lahf
adc
addl
mov
sbb
in
aaa
inc
cli
or
clc
sbb
add
jbe
push
das
pop
fmul
icebp
sti
popf
jns
aam
mov
sub
or
adc
jo
addb
scas
arpl
fwait
mov
mov
les
xchg
stc
mov
scas
push
jno
xor
inc
ss
mov
pop
cli
cld
out
in
mov
push
push
pop
inc
pop
nop
call
or
leave
mov
enter
or
sbb
xor
xor
mov
mov
stos
cmp
arpl
in
outsb
ss
out
imul
into
push
sbb
pop
jbe
mov
mov
mov
cmpsl
loope
jae
mov
adc
pop
mov
dec
and
jo
cwtl
addr16
xor
mov
fstl
lds
cmp
lock
mov
ljmp
gs
loope
rorb
add
mov
insb
mov
add
sub
xchg
dec
arpl
sbb
xor
mov
xchg
xchg
in
dec
cltd
cmp
dec
cmp
sub
push
jb
mov
test
out
sub
ret
mov
out
inc
sub
rclb
pop
loope
mov
mov
mov
scas
mov
pop
or
cs
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
push
nop
loopne
adc
addl
mov
inc
scas
xor
ljmp
es
fidivl
inc
inc
dec
pop
pop
pop
pop
insl
fsub
je
cli
add
jb
mov
mov
dec
cs
dec
ret
addb
inc
push
inc
and
stos
mov
daa
push
divl
repnz
dec
sbb
pop
mov
push
mov
movsb
movsb
inc
cmc
fdivrp
push
adc
sbb
xor
pcmpgtb
jl
pop
jnp
jbe
cld
cmp
jmp
std
fs
jmp
lds
sbb
mov
sbb
inc
leave
popf
les
push
mov
mov
add
aas
sub
dec
dec
push
daa
cvtps2pd
pop
dec
sub
popl
sti
jge
in
mov
sbb
mov
es
jg
sbb
repz
cmp
mov
ret
or
cmp
dec
add
sbb
adcb
mov
xchg
pop
and
mov
inc
sti
push
movsl
lcall
fadds
imul
push
jge
test
leave
cld
jne
lret
jge
fbld
mov
insb
pop
push
pop
push
adc
cmp
shrl
repnz
push
scas
dec
dec
xchg
or
or
dec
push
pusha
ljmp
aam
in
ret
aas
adc
scas
xchg
ret
dec
test
xchg
xlat
das
fdivs
stos
mov
sbb
cmp
cmc
cmc
popa
lods
jo
pusha
lods
pop
xchg
mov
cmpsb
jno
push
xor
mov
dec
divl
fwait
lret
or
push
xchg
adc
inc
inc
stc
pop
xchg
jp
stos
pop
cmp
mulb
mov
xor
es
mov
into
movq
mov
mov
dec
rclb
out
or
sti
ffreep
data16
and
scas
jno
fwait
loope
adc
dec
push
mov
js,pt
loop
inc
test
int3
ljmp
add
pop
mov
mov
iret
call
mov
xor
adc
sbb
test
inc
jno
cli
or
negb
cmp
mov
adc
lahf
xor
or
inc
arpl
shll
pop
sbb
in
xchg
mov
dec
and
mov
or
dec
jae
cld
adc
mov
xor
or
out
dec
in
cltd
testl
cli
push
stos
aaa
jl
lods
int3
sbb
or
shl
mov
shl
pop
mov
mov
mov
loop
icebp
xchg
gs
outsb
repnz
insl
fidivrl
sbb
jp
ret
in
lods
test
ret
fstpt
sub
daa
adc
xor
les
xor
aas
xchg
sub
xorb
mov
fstpt
cmpsb
push
arpl
adc
xor
jl
in
and
xchg
mov
push
sarl
xlat
insb
movsl
pop
fadds
mov
sahf
xor
mov
lods
clc
xchg
lods
pop
pop
fldt
xor
push
ret
test
sub
int3
jecxz
in
loope
adc
mov
mov
dec
pop
mov
add
gs
lret
push
mul
pushl
sbb
dec
inc
or
popa
or
jne
mov
std
ret
cmpb
add
dec
insl
pop
fistl
xor
and
mov
leave
nop
mov
stos
lods
and
jno
mov
fwait
pop
daa
loopne
lret
lcall
sub
xchg
je
xchg
jge
mov
or
mov
inc
mov
dec
pop
fdivl
xor
xlat
xlat
sub
jg
lock
or
fldenv
pop
pusha
std
mov
adc
sbb
add
lret
mov
testl
loop
or
xchg
ljmp
fildll
pop
loopne
pop
sbb
and
cs
and
cli
inc
int
mov
rcrb
mov
clc
insl
int
pop
xor
arpl
mov
jb
call
lret
ljmp
imul
sar
rcrl
xlat
dec
loope
or
inc
xchg
adc
pop
pop
xchg
add
out
daa
lods
jno
ljmp
std
int
xchg
add
imulb
adc
cmp
dec
aad
movsl
iret
mov
fisubrs
movsl
xchg
pop
xchg
cmp
int3
aad
cmpsb
inc
xchg
out
jae
jle
sbb
shll
dec
or
inc
das
mov
inc
xlat
js
xchg
adc
cld
dec
cmpsb
cmp
nop
insb
popf
inc
mov
sbb
test
bound
xor
jno
negb
pop
frstor
xchg
xchg
call
push
add
cmp
pop
fscale
loopne
in
push
mov
mov
or
pop
cmp
push
jbe
je
ret
dec
ljmp
sarb
cmp
aad
lds
jnp
dec
addr16
loop
mov
stc
jle
xchg
lret
mov
dec
dec
dec
pushl
das
rclb
push
add
lea
adc
roll
mov
arpl
sahf
sbb
lret
sbb
mov
mov
xor
nop
stos
push
jle
cmpsl
stos
dec
ljmp
inc
inc
scas
mov
fcomp
cmpsb
das
or
out
jmp
rcrb
movsb
call
stc
mov
stc
mov
xchg
jp
es
mov
pushf
sti
sbbb
ljmp
stos
and
sbb
pop
stos
loopne
xor
jp
sub
loopne
xchg
mov
aad
sub
ret
mov
into
mov
jne
sti
into
punpckhwd
or
out
mov
into
xchg
test
xor
xchg
movsl
mov
xor
pop
std
mull
mov
adc
pop
cmp
repnz
sub
cmp
ret
dec
out
pop
xchg
xor
jg
jl
mov
pop
jecxz
std
and
mov
repnz
out
mov
add
pop
adc
mov
scas
mov
dec
inc
leave
pushf
into
fs
cmpsl
or
xor
adcb
sub
gs
dec
mov
loop
insb
jns
jmp
jae
sub
inc
cwtl
jae
int3
xchg
adc
fimull
insb
adc
dec
cs
mov
inc
mov
mov
jnp
movsb
popf
jge
xchg
pop
ret
popl
scas
xchg
gs
rolb
pop
inc
movsb
in
fcomps
shrl
lds
mov
int
rcrl
and
push
mov
sbb
sbb
and
ljmp
lds
ficompl
pusha
fwait
out
push
mov
sbb
test
aad
and
pusha
fucom
add
xchg
dec
enter
and
mov
add
or
jmp
pop
mov
inc
cs
lock
pushf
dec
inc
cwtl
aam
jae
je
fmuls
pop
ljmp
shrb
add
das
test
jge
adc
out
add
and
or
sahf
js
dec
repz
aad
push
xor
lea
sbb
fcomps
mov
sahf
inc
test
inc
xchg
push
xlat
in
aas
orb
jecxz
rclb
push
mov
mov
push
cs
es
xlat
jb
sub
dec
mov
fs
lds
sbb
inc
popa
mov
jmp
mov
test
jbe
mov
mov
adc
pop
xor
mov
arpl
dec
or
aas
ret
mov
jbe
mov
cmp
fdivs
add
mov
add
mov
mov
xchg
sbb
jl
int3
mov
add
and
test
mov
sub
movsb
cld
pop
lods
loopne
jns
mov
inc
xor
scas
cli
push
sub
jmp
ja
les
push
xchg
fsubs
pop
fldenv
ljmp
cmpsb
or
jg
nop
std
mulb
mov
es
mov
ds
add
dec
cmp
int
inc
and
lods
jmp
xchg
dec
xchg
cmp
or
mov
and
lret
dec
xorb
outsl
dec
push
in
arpl
std
jecxz
movsl
jle
sub
xchg
push
data16
jbe
je
fucomi
icebp
mov
aad
stc
pusha
jns
iret
jbe
loope
cmc
aaa
xor
ret
pop
jb
mov
divl
xlat
out
lcall
int3
popa
adc
or
inc
jb
es
test
test
pushl
cmp
into
daa
vorps
xchg
rolb
lret
mov
xchg
push
dec
or
mov
aad
push
scas
mov
and
aaa
lods
hlt
pop
je
dec
inc
push
mov
popf
inc
and
fisubrl
sub
inc
jae
in
cmc
add
dec
or
mov
push
aam
fimull
push
mov
pop
mov
lea
jl
adc
enter
outsb
adc
xor
ficomps
out
adc
mov
rorl
rol
in
cmpsl
push
enter
or
lea
sbb
or
movsb
dec
insl
aad
insb
lods
xor
inc
push
add
setnp
aas
decl
add
jae
out
ret
adc
or
mov
icebp
jbe
sub
jge,pt
cmp
mov
add
iret
mov
cli
iret
adc
pop
ficoms
ficoms
dec
and
dec
sub
xchg
mov
call
popf
dec
stos
xor
fadd
adc
mov
push
mov
adc
dec
sti
add
mov
pop
xchg
int
loop
inc
mov
stos
fcompl
sbb
sub
add
jae
sbb
sbb
out
stos
loop
das
dec
lret
adc
jle
loop
test
int3
jbe
arpl
in
icebp
sahf
mov
mov
pop
xor
fstpl
movsb
xchg
sbbb
into
in
imul
pushw
inc
jp
xchg
daa
dec
push
push
lds
mov
mov
and
push
rcrb
inc
cmpb
xor
call
test
dec
sbb
xor
pop
enter
jne
adc
push
stos
cltd
jp
xchg
adc
cmp
fbstp
lcall
mov
sti
imul
int3
inc
fnstsw
pop
xchg
loope
adc
clc
cmp
sub
inc
shrb
ja
push
or
push
rolb
xchg
daa
dec
lods
adc
inc
mov
incl
sbb
mov
jbe
push
and
mov
sub
xchg
push
xor
xchg
mov
dec
adc
xchg
lea
jge
push
jb
iret
mov
adc
adc
push
ret
pop
xchg
cmp
cltd
cmpsl
lds
sub
adc
pop
mov
dec
xchg
test
imul
inc
add
repz
jp
xchg
jmp
mov
fnstenv
inc
sub
xor
mov
ret
lcall
sbb
push
arpl
sbb
decb
push
cmpsb
icebp
xor
movsl
cld
insl
hlt
loope
add
jae
mov
in
dec
sbb
push
mov
and
std
dec
lahf
inc
in
inc
dec
mov
or
mov
fstp
cmp
xchg
mov
xchg
fistl
mov
orl
loop
jne
out
sub
je
stc
in
ds
shrb
cli
pop
fldcw
push
enter
call
mov
mov
rcrl
xchg
mov
fwait
scas
sub
fmuls
hlt
lcall
and
lret
fwait
jecxz
xchg
mov
aaa
cli
mov
sub
xlat
adc
xchg
pop
sub
and
push
mov
mov
dec
adc
adc
or
push
mov
bound
cmc
dec
jnp,pn
pop
imul
jns
ds
or
adc
cmp
movsl
movsb
xor
sbb
push
xorl
inc
push
cmpsl
pop
mov
add
mov
mov
out
jbe
dec
mov
jnp
dec
mov
dec
dec
push
or
sbb
out
or
and
andb
fsts
or
add
dec
inc
push
stc
fwait
jne
cli
and
adc
push
mov
jl
xchg
popf
mov
or
xor
shl
xor
lret
aam
iret
sbb
or
xchg
aas
scas
pop
mov
ja
mov
and
icebp
ja
xor
mov
ds
cs
jge
jle
aas
mov
add
or
jbe
hlt
shlb
xchg
popa
mov
fldt
sub
dec
sbb
sub
jns
adc
addb
movsl
pop
inc
adc
xchg
pop
sti
enter
jo
sub
out
fidivl
stos
cmp
in
dec
sti
add
mov
mov
mov
mov
jno
sub
fsubrl
arpl
push
mov
inc
dec
mov
fwait
push
xor
mov
enter
mov
out
mov
xlat
xchg
and
fcmovu
xchg
add
sub
xor
mov
jo
xlat
sbb
imul
sbb
int3
pop
das
sub
aam
dec
imulb
or
pop
call
and
ja
dec
es
jne
jmp
aad
lret
ljmp
mov
scas
xchg
pop
inc
ja
sar
incb
popa
fsubrs
xchg
jae
add
fsub
inc
je
jle
pop
xor
cmp
ljmp
js
mov
ret
sbb
cmp
push
mov
xchg
test
sarb
js
divl
inc
fidivs
test
imul
daa
es
icebp
aaa
and
xchg
dec
sbb
cmpsb
rcrb
push
dec
inc
daa
das
ja
add
push
aad
cmp
nop
xor
add
adc
jmp
sbb
push
lcall
mov
pop
addb
mov
adc
and
fmull
mov
ljmp
nop
enter
daa
int3
inc
or
xchg
cmpsl
iret
mov
negb
jg
out
xchg
add
add
jns
sar
push
fdivl
mov
lcall
in
sub
pop
stos
sbb
orl
mov
mov
adc
mov
fldl
push
enter
sub
scas
fidivl
test
mov
mov
ret
push
push
xorb
movl
insb
loope
jno
je
es
fisttpl
cltd
xor
push
insb
pop
loope
orl
mov
ret
fbstp
dec
pop
addr16
rcrl
push
xchg
mov
and
xchg
mov
mov
mov
cs
xchg
pop
pop
gs
mov
sbb
cmc
sub
push
cmpsl
test
inc
cmpsl
adc
jle
fwait
test
push
repz
adc
mov
pusha
dec
pushfw
xlat
push
add
enter
xlat
outsb
or
lret
fs
jp
jnp
jecxz
cmc
mov
mov
xor
subl
divb
pop
or
and
xor
and
and
outsl
add
inc
andl
ljmp
xor
push
jecxz
dec
add
rorl
mov
pop
int3
pop
sub
push
rcr
add
jecxz
pop
mov
cmpsl
mov
or
pushf
sbb
add
xchg
mov
jg
arpl
mov
jne
insl
mov
dec
insl
stc
loopne
inc
and
out
test
call
inc
and
sbb
push
mov
jecxz
cmp
cli
rorl
addb
movsl
call
rol
shrl
pop
ja
mov
xchg
adc
lea
pop
dec
cltd
ss
push
aas
add
mov
and
rcr
jle
sbb
sti
push
jne
mov
jns
adc
add
adc
clc
xchg
test
push
cmp
repz
dec
gs
je
jne
and
and
js
mov
lret
mov
mov
das
lret
inc
fistl
jmp
pop
pop
loopne
rcl
int3
pop
inc
in
and
cmpsb
sub
jnp
fnstenv
mov
push
lds
cmp
inc
pop
idivl
add
out
in
ss
inc
enter
jae
cs
movsw
xor
xchg
dec
nop
out
sbb
xor
adc
in
sbb
fdivrl
jmp
or
shrl
jns
js
xchg
flds
push
cmp
and
sbbb
cwtl
mov
mov
loopne
push
imul
into
subl
fisubs
out
jno
sbb
ljmp
adc
sub
inc
stos
inc
push
add
cmp
mov
push
mov
sub
pusha
xchg
cs
inc
loopne
mov
jle
scas
dec
jmp
inc
push
fdiv
icebp
clc
and
mov
jns
out
jo
cs
xchg
addr16
test
pop
ret
faddl
mov
jo
mov
jge
pop
imul
out
outsl
mov
mov
sbb
jbe
fwait
ljmp
adc
fldt
cwtl
mov
gs
aaa
add
mov
iret
add
mov
push
push
scas
int3
jno
int
adc
imul
out
xor
ret
inc
mov
lea
push
push
dec
adc
mov
pusha
pop
iret
inc
mov
lcallw
out
and
or
xor
add
cld
inc
push
hlt
sub
cld
push
sahf
jp
mov
inc
test
mov
scas
hlt
test
ja
mov
or
xor
mov
scas
sub
sub
push
jbe
in
cmp
aam
imul
fwait
loope
out
stos
jmp
fs
fcmovb
test
and
adc
sub
mov
into
sub
lock
cmp
jne
fistps
lret
adc
jns
fs
ret
add
lods
or
je
insb
jns
jp
xor
cmc
inc
xchg
sbb
mov
push
add
cltd
hlt
fisubl
rorl
test
push
es
fwait
adc
cltd
mov
mov
data16
add
jp
mov
out
popf
sub
call
outsl
clc
add
inc
xchg
cmp
inc
or
std
or
lcall
sbb
mov
mov
dec
mov
fistl
and
rcrl
outsb
sbb
xchg
cld
or
fwait
add
js
adc
ss
sub
xor
xor
mov
fcomps
bound
push
repnz
enter
rcll
repnz
mov
movsb
testb
popf
fldcw
pop
mov
cmp
sub
mov
cmp
xchg
or
pop
out
sub
rclb
lds
fistps
aaa
xor
insl
arpl
cmp
imul
dec
mov
enter
fs
mov
cwtl
dec
xor
xor
lret
mov
push
sub
push
pop
mov
pop
inc
lods
adc
xchg
push
shll
xchg
lock
pop
jae
push
mov
es
jmp
cld
cwtl
and
jle
les
lea
jg
mov
mov
push
inc
js
and
xchg
cmp
mov
xchg
mov
lock
nop
ret
aaa
xor
inc
es
loopne
jl
cmp
mov
and
jbe
or
mov
daa
push
cmp
fwait
je
jp
in
fstps
lock
or
aas
sti
inc
aaa
fwait
xor
lea
push
or
mov
xchg
fwait
cmp
cmp
xchg
xchg
cmp
jb
jne
pop
mov
stos
test
divb
clc
fs
xor
cmc
inc
fwait
stc
imul
adc
rolb
mov
adc
jecxz
cli
push
in
push
adc
xor
jg
cltd
insl
testl
insb
cmp
imul
xor
push
cmp
push
fcoml
mov
and
movsb
test
icebp
ja
adc
cltd
cmp
mov
pop
scas
imul
adc
dec
mov
lods
aam
sub
in
cli
nop
in
imul
push
mov
scas
mov
xor
je
push
inc
sti
mov
dec
aas
mov
sub
push
movsl
daa
cmp
xlat
lods
dec
cltd
mov
ljmp
cmpb
push
inc
imul
pop
mov
xor
test
leave
adcb
cmp
mov
pop
scas
jmp
dec
je
subl
xchg
xchg
bound
lds
icebp
jbe
sub
fs
ljmp
sbb
inc
or
fistl
jg
ss
je
mov
ficomps
or
into
test
lds
cli
adc
xchg
push
cmp
push
rcl
mov
xchg
add
stos
sub
jmp
cmp
jae
cmp
in
inc
addr16
add
fsubl
push
shlb
inc
sub
imul
jle
pop
lock
mov
test
cmpsl
push
sub
insl
jle
fs
das
jp
push
test
sbb
testl
lret
jl
cmc
ret
ret
dec
je
or
movsb
imul
fwait
sub
inc
mov
outsb
pop
cmc
sbb
dec
loope
pusha
jo
mov
push
mov
rcr
clc
cmp
adc
lods
lret
jp
xchg
sar
imul
int
sbb
pop
xchg
bound
xor
int3
pop
pop
outsb
jge
outsl
movsb
mov
sub
mov
add
mov
push
test
scas
insl
arpl
mov
sbb
test
pop
in
and
push
inc
lcall
mov
adc
cmpsb
test
rcll
push
xor
adc
sub
mov
jmp
push
mov
cmp
in
inc
dec
jmp
sbb
pop
dec
pop
fsubs
lock
imul
lock
and
jge
roll
ss
mov
pop
mov
ljmp
mov
fs
push
xor
bound
ja
rol
test
mov
xchg
sbb
and
in
mov
jae
and
dec
addl
lcall
pop
fcmovnbe
push
mov
shl
xor
push
jns
in
aam
jle
inc
mov
ja
icebp
adc
jle
mov
out
lea
iret
mov
xor
loop
enter
sub
fs
hlt
cmpsb
sbb
pop
lods
adc
push
push
push
jo
rcll
xor
sbb
rorb
std
mov
sahf
lea
fcomps
lahf
mov
lock
push
adc
in
jae
mov
push
jno
iret
jp
fldenv
call
pop
add
addr16
rcr
sbb
or
cwtl
out
sbb
mov
pop
repnz
dec
xchg
shlb
cmp
push
pop
sbb
jp
mov
ds
addr16
sub
pop
push
push
push
mov
inc
xchg
cmpb
jecxz
fimull
lods
dec
jo
movsb
mov
imul
jo
cli
and
stos
daa
xchg
imull
hlt
xor
jmp
push
jbe
xlat
enter
movsb
pushl
pop
push
mov
daa
gs
mov
test
xchg
push
adcl
xor
insb
sub
fwait
xor
inc
adc
in
xor
mov
clc
push
dec
sbb
stc
enter
mov
lcall
in
ljmp
pop
sar
negl
in
test
cmpsb
js
mov
mov
inc
cltd
sub
lods
in
mov
ret
mov
and
je
popa
mov
cmp
xchg
repnz
pop
scas
cwtl
and
mov
addb
xchg
in
and
cmp
add
xor
test
pop
aas
insl
sti
sub
xor
sbb
inc
loop
xchg
mov
jnp
scas
test
inc
das
mov
lds
dec
fwait
mov
fwait
daa
clc
fcmovne
mov
push
in
pop
std
stc
in
out
mov
mov
xor
add
xlat
hlt
inc
out
jbe
mov
adc
imul
or
xchg
lahf
mov
push
lds
xor
add
jmp
shl
or
sbb
shrl
xchg
adc
mov
jbe
pop
add
mov
sbb
sbb
and
cmpsl
xchg
cmpb
push
icebp
icebp
cs
int3
ret
fldcw
mov
add
and
addr16
xor
js
sbb
push
adc
sub
or
fdivs
lds
in
into
push
inc
or
xor
pop
test
pop
xchg
arpl
scas
push
mov
cmp
in
scas
jg
inc
cs
rcrl
push
out
cltd
test
sbb
jecxz
cmp
clc
push
xor
push
rcrl
outsl
insb
jae
ret
scas
mov
push
daa
scas
pushf
xorl
ja
enter
test
mov
pop
adc
inc
aaa
call
jp
sahf
sub
sbb
mov
shll
pop
push
push
stos
mov
or
inc
adc
stos
cmp
imul
shll
out
cld
insl
mov
fistps
inc
iret
movsl
repz
js
push
or
hlt
cwtl
jl
std
test
mov
or
dec
jp
out
cmp
pushf
fdivs
push
shll
movl
fsubs
int3
mov
js
inc
cld
xlat
insb
inc
int
jg
into
sub
pop
rolb
pushf
adc
add
sbb
xor
in
inc
in
pop
xchg
les
rcrb
repz
jb
mov
jg
jnp
mov
cmpsb
std
stc
pop
inc
lock
ja
adc
shr
xchg
mov
ret
fwait
adc
dec
rorl
out
mov
rorl
fldenv
rorl
push
sub
js
mov
dec
mov
and
or
fidivrl
aam
or
mov
js
sbb
test
nop
daa
and
mov
cmpsl
leave
imul
push
sarl
adc
lret
and
inc
dec
sbbb
sbb
sub
inc
or
pop
pop
jbe
mov
movsl
mov
negl
mov
and
nop
fwait
mov
pop
std
testb
out
pop
pop
mov
push
xor
andb
fidivs
pusha
push
out
cmc
jb
dec
mov
fildl
fwait
mov
lods
xchg
iret
imul
push
jne
jnp
subl
mov
fmuls
in
adc
int
in
ljmp
cmp
and
xchg
mov
adc
xor
arpl
mov
sbb
pop
or
rorb
adc
sahf
xchg
cmc
mov
popa
mov
xchg
dec
cltd
out
aaa
sub
ja
bound
insb
lds
les
fisttpl
fwait
cld
cmp
mov
or
sub
jo
pop
imul
cmp
enter
xor
lods
faddl
ffree
addb
sahf
xchg
or
or
push
and
push
pop
jl
push
testb
sub
aad
sub
push
push
popa
nop
loopne
pop
or
push
jp
push
lds
mov
jae
or
jg
xchg
and
xchg
jmp
loope
aas
dec
sub
stos
pusha
imul
xchg
stos
leave
adc
mov
stos
or
add
inc
imul
fdiv
sbb
jb
loop
xchg
cmc
cmc
rolb
test
adc
jge
je
stos
inc
jecxz
jne
jmp
or
fcompl
mov
push
sub
insl
ss
dec
aad
pusha
adc
and
lcall
negb
int
rcll
push
inc
lret
jns
pusha
cmovns
dec
leave
rcll
out
mov
insb
imul
out
pop
cmc
imul
iret
inc
mov
or
lods
mov
mov
movsl
and
mov
loopne
mov
les
xchg
fcoms
call
call
imul
pop
add
push
out
movsb
xchg
cmpsl
pop
mov
pop
cmp
lods
enter
movl
stc
stos
and
test
je
daa
cmpsl
and
dec
push
adc
xchg
jnp
sbb
shrb
cmpsl
dec
mov
dec
push
jmp
out
fdivs
dec
andb
push
mov
jg
add
mov
push
cmp
in
das
jmp
nop
lcall
mov
fsubrp
pop
push
cld
sub
pop
push
negl
push
xchg
shll
sub
push
xor
into
mov
filds
push
lret
dec
add
cli
push
insl
idiv
cmp
mov
mov
gs
das
rcll
popa
dec
and
pop
pop
cmpsl
and
add
mov
xor
or
mov
mov
cli
stos
fildl
add
clc
add
inc
call
rcrb
inc
inc
jae
sbb
scas
clc
pusha
pushf
xchg
mov
cmp
outsw
imul
jo
sub
adc
lea
add
icebp
add
shlb
jne
insl
mov
push
stos
lahf
push
notb
arpl
outsb
cli
bound
test
addb
cmpsl
jae
jl
mov
and
outsb
and
fimull
fildl
xor
push
stc
outsb
adc
pop
repnz
adc
push
mov
loopne
jecxz
rcl
lcall
xchg
jnp
out
push
sarb
pop
xchg
call
je
push
add
orl
mov
cmp
fidivs
out
cmpsb
gs
cmp
mov
mov
inc
dec
add
pop
or
xor
xchg
test
fcmovnbe
push
jge
mov
jbe
dec
dec
mov
ljmp
pusha
cmp
je
add
adc
add
outsl
push
lock
or
adc
insb
inc
enter
rcrl
les
or
push
cmp
xchg
sbb
jne
jmp
mov
es
stos
aam
cmp
cmp
push
inc
pmaddwd
sub
fistpl
push
cwtl
pop
jp
testl
xor
hlt
pop
xor
mov
lods
popf
xchg
pop
pop
lods
pop
mov
add
cmp
and
mov
dec
mov
aas
popf
out
or
push
aam
push
cltd
pop
das
mov
in
sbb
ret
sub
insl
xor
or
jb
add
hlt
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
mov
or
addl
adc
inc
mov
clc
mov
dec
popf
stos
insb
enter
outsl
mov
xchg
ja
lcall
lea
leave
stc
push
daa
mov
ss
push
mov
mov
cltd
popa
push
std
stos
jle
lds
mov
jb
jg
mov
das
mov
sub
jmp
xor
pop
movsl
pop
jbe
daa
mov
pop
pushf
pop
pushf
out
mov
add
xor
add
cs
fdivl
and
xor
lret
jp
pushf
jne
mov
int3
and
sub
xchg
push
fcoms
iret
les
cld
andl
imul
jne
shlb
sub
mov
repz
jnp
sbb
pushf
jnp
cmpsl
xchg
push
js
jne
icebp
xor
push
jmp
push
xor
outsl
mov
insl
push
aad
lret
or
loop
push
movsl
sub
sbb
mov
lea
jne
je
xchg
pop
push
sbb
inc
test
mov
mov
shrb
xchg
shl
imul
or
loop
mov
stos
insb
ja
adc
cmp
adc
inc
sub
movsl
cmpsl
cld
xchg
movsl
or
setle
cmc
jecxz
roll
push
jg
dec
jnp
lret
or
pop
mov
push
testb
jne
xchg
and
jmp
nop
mov
scas
data16
insl
test
mov
mov
cmp
clc
inc
xor
cs
pop
iret
aas
mov
mov
mov
cld
in
mov
cmp
inc
add
lea
sarb
pop
gs
xlat
shl
mov
xor
mov
lods
repnz
imul
mov
xor
xor
cmp
sub
xor
addl
outsb
pop
out
movsb
sbb
mov
jle
es
data16
cli
loop
pop
fcom
push
xchg
mov
jno
push
out
adc
imull
mov
mov
loopne
ret
jl
hlt
lods
rclb
mov
mov
add
adc
and
add
jb
outsl
std
scas
fisubrs
lock
jp
or
les
add
mov
dec
xchg
ret
in
mov
dec
int3
cmp
xor
idivb
or
push
add
xlat
cli
mov
je
lahf
leave
jbe
int3
ret
pop
out
or
les
jmp
or
nop
into
push
adc
sub
das
add
scas
jno
cmp
pushf
mov
jge
jnp
jle
mov
shl
mov
mov
mov
or
incl
shrl
ja
out
out
mov
xchg
and
cmc
in
inc
jbe
and
out
xor
pusha
lods
int
jo
lods
jbe
xor
leave
stc
inc
mov
clc
maxps
mov
insl
mov
fnstsw
jo
lea
dec
dec
adcl
mov
jecxz
fs
dec
or
popf
jno
jo
cmp
xchg
cmp
push
jnp
adc
mov
jbe
lahf
xor
inc
xorl
pop
ja
addr16
fs
and
jb
pop
fucom
cmp
push
cmp
fstps
or
lret
sbb
pop
dec
jle
jle
pop
ret
mov
pop
daa
loop
push
int
in
mov
push
and
cltd
fadd
stos
xchg
push
les
jl
mov
or
push
dec
inc
or
jne
push
addr16
adc
jne
add
or
daa
jg
cmpsl
push
push
movsb
lret
mov
lods
xor
sub
and
push
jnp
insl
or
inc
mov
jno
dec
push
adc
cmpsb
mov
std
jne
aaa
jecxz
je
inc
fisttps
pop
inc
mov
fdivl
sahf
loop
cwtl
or
rorb
mov
test
rcll
mov
fwait
mov
lea
dec
popf
lods
push
repnz
mov
int
std
mov
ljmp
rcrb
ret
xchg
sub
jne
popf
mov
rclb
sub
lock
insb
push
out
testl
adc
push
js
inc
push
jmp
sarl
jbe
outsl
mov
jl
jbe
adc
xor
jno
mov
sahf
inc
pop
inc
mov
inc
ret
mov
mov
inc
sub
push
jb
pop
cmp
push
into
mov
or
mov
nop
or
roll
dec
pop
stc
inc
mov
add
cli
lahf
aas
sub
loope
xchg
or
or
stc
call
cmp
mov
push
movsb
sbb
mov
in
mov
inc
sub
ja
cmpsb
mov
in
fsts
mov
xchg
rorb
add
fnstsw
and
or
rcrb
cwtl
jae
and
mov
mov
stos
cmpsl
push
call
std
jp
add
jmp
mov
xor
enter
jecxz
jae
insl
rorb
mov
jno
xchg
cwtl
cltd
inc
aam
push
psubb
cmp
sub
xor
std
imul
jb
cs
out
or
pop
jns
test
loop
cmpsl
test
shll
jg
xlat
dec
mov
xchg
call
add
or
sub
fwait
sub
dec
xchg
mov
pop
lahf
sbbb
in
and
push
fcoml
fstpt
lcall
inc
filds
jmp
jbe
shll
sbb
insb
fsubrs
xor
clc
in
dec
pop
push
adc
popa
dec
int
repz
icebp
and
scas
push
xor
and
hlt
or
xor
add
xchg
mov
sbb
lods
inc
and
sbb
call
sub
sbb
mov
cmp
jmp
mov
jbe
mov
add
es
fisubrs
mov
xor
sub
push
decl
jmp
int
popa
fisubs
ret
mov
out
jo
add
insl
js
cmp
pushf
mov
sbb
or
aam
and
adc
sbbb
push
jle
sub
fs
movsb
or
insl
insl
or
mov
in
or
rep
sbb
ret
push
mov
dec
test
test
push
pop
rol
jge
xchg
aam
loope
dec
mov
jbe
and
jae
sahf
mov
pop
cltd
push
pusha
pop
sub
add
fcoms
jmp
push
out
mov
adc
dec
and
scas
inc
mov
add
xchg
mov
loop
mov
jo
out
push
pop
data16
fisttpll
pop
lret
pushf
and
xor
jmp
cltd
lods
inc
jmp
xor
ss
or
enter
and
pop
addr16
sahf
aam
test
mov
xchg
push
das
push
cmp
mov
adc
push
mov
hlt
aas
mov
xor
dec
jle
mov
and
unpcklps
test
dec
jb
clc
xchg
pop
sarl
inc
and
arpl
divb
aaa
pop
jo
repz
scas
call
adc
imul
rclb
pop
ret
cmpsl
out
fsubrl
cmpsl
bndstx
lods
jp
dec
add
adc
fadd
sbb
sbb
in
lcall
jo
sub
test
dec
adc
inc
adc
mov
mov
add
roll
arpl
hlt
xchg
jnp
cmp
push
add
and
jg
les
pop
cmp
push
leave
mov
push
hlt
stos
mov
lahf
dec
sbb
test
dec
repnz
pop
insl
stc
adc
and
sbb
push
es
fisubs
pop
cli
push
push
inc
cmp
sbb
call
dec
or
out
loope
xchg
cmpsb
lahf
push
xor
sub
dec
adc
aad
and
add
and
and
inc
imul
insl
in
or
mov
push
stc
repz
and
mov
cmc
faddl
adc
jnp
adc
xchg
mov
jmp
jl
popl
pop
push
push
icebp
sub
add
inc
int
xor
push
fs
and
lds
dec
pop
enter
stos
inc
cmp
xor
xchg
or
pop
test
call
imul
adc
test
and
fdivp
inc
arpl
jle
jecxz
mov
mulb
nop
sahf
in
mov
push
jge
mov
mov
in
cmp
rol
call
jae
jns
fst
out
jb
pop
jmp
sub
sbb
fs
cwtl
or
inc
ret
mov
add
loopw
mov
add
adc
ljmp
cmpsb
push
lds
push
mov
addr16
lret
bnd
and
xor
push
and
pop
call
xor
rcl
ret
jbe
push
insb
pusha
sti
fsts
xchg
mov
inc
clc
push
vpandn
stos
inc
out
nop
mov
pop
mov
dec
ja,pn
push
clc
pusha
sbb
subb
iret
push
sbb
mov
test
mov
pusha
or
adc
inc
and
or
out
mov
and
jmp
je
and
mov
bound
jl
jecxz
mov
repnz
jo
mov
cltd
test
daa
dec
lea
dec
aad
dec
jae
push
ss
inc
or
std
jle
aam
in
in
add
and
dec
xor
pop
daa
out
sbb
xchg
jmp
in
fadd
mov
in
mov
adc
jl
int3
add
mov
imul
xchg
test
push
xor
adc
lock
pop
cli
inc
cmp
add
fdivrs
xor
test
inc
test
data16
fs
jge
ss
addr16
loope
mov
adc
arpl
dec
in
mov
inc
add
rcll
enter
ljmp
pop
sbb
gs
fcomi
jmp
dec
xchg
insl
jb
pop
push
xchg
fistl
or
imul
sub
jno
jmp
and
std
inc
repz
or
arpl
pop
call
cmpsb
and
popa
and
test
jnp
pop
andb
xor
test
pop
push
xor
sar
ss
imul
sbb
mov
xchg
adc
call
pop
lods
fidivs
js
jno
inc
mov
xchg
push
pop
flds
testl
mov
loope
add
mov
xor
stos
cmpsb
push
xlat
push
shrl
iret
int3
pop
lds
jae
push
push
or
xor
pop
sti
adc
lods
imul
es
les
push
fs
cwtl
adc
je
add
loop
pop
ja
xlat
sub
inc
subb
dec
mov
mov
dec
push
mull
bound
inc
mov
test
int
mov
dec
pop
or
cld
jp
or
sbb
add
and
inc
xchg
add
jp
mov
add
jl
rcrb
jne
push
addr16
inc
je
sbb
pop
xor
aad
add
int
mov
mov
sub
and
fs
pop
mov
leave
sub
pushl
push
mov
int
inc
and
loop
hlt
ja
dec
inc
dec
cmp
test
lahf
cmpb
push
or
xor
jecxz
xlat
enter
arpl
or
das
push
xchg
mov
test
push
fsubr
pop
fcoms
fsubrs
xor
aaa
or
addl
fdiv
xchg
ror
sbb
add
pop
sbb
adc
stos
mov
mov
andb
jbe
fucompp
rcll
jecxz
add
mov
jecxz
mov
int3
sbb
xor
or
sub
fsub
push
or
movsb
and
jo
sub
cmpb
and
cmpsb
lcall
das
adc
imul
cld
pop
ds
xor
pop
or
jb
icebp
mov
cwtl
mov
arpl
xchg
shlb
dec
sbb
bound
sti
clc
sahf
jg
jge
stos
xchg
sahf
dec
mov
ficomps
mov
ficoml
rcrl
or
dec
lret
inc
je
cli
xor
xor
push
pop
cmp
stos
fcompl
or
xchg
out
mov
popf
sbb
hlt
mov
inc
lret
push
aaa
inc
lcall
shr
pop
shrl
jb
loopne
xchg
xor
outsl
sarb
pop
stc
arpl
xor
cs
xor
aad
jp
sub
xor
cmp
lahf
sbb
fisubs
cs
ljmp
notb
dec
push
cwtl
xchg
dec
mov
iret
xchg
cmpb
mov
pushf
or
mov
sbb
jp
xchg
movsb
sbb
mov
dec
xchg
loop
fisttpll
xor
pop
lds
pop
adc
and
inc
cwtl
jo
cli
enter
ljmp
and
mov
out
mov
xchg
sub
sarl
fistpl
int
jo
push
ficomps
movsb
adc
mov
sbbb
cmp
int3
inc
xor
dec
pusha
xor
ljmp
jl
jl
pop
lret
and
in
dec
std
sub
inc
add
nop
iret
inc
hlt
rolb
or
aaa
test
cld
ja
pop
ss
lret
sbb
xchg
aas
and
lcall
cmp
pop
xor
cmpsl
push
or
fwait
add
add
push
lret
pushf
test
xor
mov
icebp
jg
orl
icebp
mov
sub
hlt
dec
inc
inc
push
jo
inc
int3
jbe
mov
lret
lahf
and
sub
push
loop
aad
repnz
mov
jae
dec
pop
pop
push
cli
sub
push
mov
notl
loope
addb
dec
push
cmp
push
jo
aas
nop
loope
adc
incl
insb
dec
inc
lea
add
inc
sub
xchg
in
cmp
or
sbb
out
lods
dec
addl
pop
popa
pusha
sub
cmp
rcl
out
push
sbb
pop
mov
test
pop
ret
mov
test
out
add
inc
ja
pop
pusha
xor
or
jl
dec
sub
push
cli
xchg
xor
jp
and
movsl
rorb
add
mov
push
data16
xor
jb
dec
adc
and
mov
or
xchg
das
mov
jno
ljmp
sbb
xor
xchg
sub
arpl
lret
and
dec
arpl
mov
dec
movsb
cmp
rolb
popf
adc
pop
mov
sbb
and
dec
jg
lcall
outsl
jge
jb
sarl
cmp
sahf
pusha
and
loope
fsubrp
xchg
lods
xlat
and
pushf
mov
sarl
sub
dec
test
pop
imul
and
fisttps
xchg
pushf
insb
ret
mov
jp
lret
sbb
cmp
pop
adc
call
out
mov
mov
mov
loopne
aas
pushf
and
jmp
pop
adc
movsl
xchg
add
sbb
test
cmp
lock
fs
push
and
and
sbb
dec
jecxz
rcrl
pop
dec
and
jb
fs
lea
xor
push
xchg
add
or
clc
xchg
pop
ss
jmp
out
nop
xchg
daa
inc
mov
jnp
dec
js
jmp
mov
loope
dec
movsb
add
adc
jnp
imul
or
sarb
lods
popa
out
push
mov
add
cvttps2pi
inc
push
jge
fcmovne
cmpsb
pop
inc
nop
pop
cmpsb
pop
arpl
fcoml
js
mov
xchg
xchg
mov
push
add
xchg
loop
andb
xchg
rol
cwtl
icebp
sbb
inc
orb
cmp
out
inc
stc
jl
and
out
push
push
sbb
dec
sbb
mov
dec
jnp
jns
dec
pop
nop
push
loope
dec
rclb
pop
jge
mov
repz
popa
jno
dec
pop
adc
sub
dec
outsb
push
movsb
in
stos
pop
or
dec
andb
fnstenv
lea
dec
push
shlb
mov
subl
inc
les
das
repnz
daa
sub
push
out
jns
mov
stos
in
add
cmp
ds
pop
mov
push
jo
imulb
or
shlb
mov
imul
out
rcrl
jle
jne
outsb
xchg
lahf
xor
mov
sahf
ds
orb
xor
scas
int
lcall
loop
ficoml
jmp
mov
clc
aas
int
pop
pushf
lahf
cmpxchg
movsl
ficoml
loopne
cmpsb
jecxz
adc
shrl
add
imul
cwtl
jb
out
out
fsts
clc
mov
inc
and
sahf
loope
push
lods
cwtl
inc
push
loopne
push
arpl
imulb
jge
mov
xchg
in
stos
sbb
inc
addr16
cmpl
pop
cmc
or
fildl
lods
sub
negl
mov
in
stc
mov
sub
mov
call
mov
cltd
sub
mov
cli
dec
xchg
out
xor
push
je
add
and
mov
mov
cmp
inc
inc
xchg
or
pop
and
adc
enter
lahf
pushf
sbb
mov
dec
test
or
sbb
and
int
mov
fsubrs
cmp
inc
enter
add
hlt
fstpl
mov
lret
cmpb
shr
aaa
loopne
pusha
dec
insl
lret
pop
addl
mov
pop
mov
in
nop
xlat
sbb
filds
inc
xchg
sub
fisttps
cmpl
xchg
lcall
jb
addr16
insl
push
cmp
filds
cmc
mov
xchg
cmp
pusha
jecxz
push
bound
outsb
or
cld
fadds
xchg
test
xchg
jp
inc
into
repnz
shr
gs
cmp
dec
mov
ss
sbb
pop
mov
dec
inc
adc
insb
lods
stc
mov
push
aad
dec
cmpsl
add
pop
push
cmpsl
and
dec
aas
lret
mov
shl
dec
mov
mov
xor
fdivs
in
ds
stos
pop
push
jb
sbb
stos
inc
loopne,pt
mov
dec
mov
loope
adc
scas
and
insl
mov
idivb
outsl
std
repnz
jnp
ljmp
fwait
mov
movsb
jp
and
lods
lock
pop
dec
imul
mov
daa
xor
test
jl
inc
xchg
enter
pop
dec
ror
adc
shl
and
in
or
mov
cmpsb
ja
pop
push
adc
inc
ljmp
aaa
pop
fisttpll
orb
and
sbb
pop
mov
mov
out
fwait
rorl
sbb
xchg
sub
jmp
mov
dec
jge
idiv
into
dec
sbb
lcall
push
mov
fisubrl
xchg
insb
int3
push
mov
addr16
push
push
ss
mov
inc
call
scas
pusha
cmpsl
mov
test
out
mov
xor
lods
addr16
addl
cmp
negb
cmp
add
and
add
ret
hlt
jge
jns
and
xor
sub
ljmp
xchg
adc
xchg
fidivrl
mov
cmpsl
cmpsl
jp
push
cmp
lret
add
and
call
movsl
aad
hlt
imul
subl
cmp
sbb
stos
dec
sub
and
inc
stos
lcall
push
mov
mov
sahf
addb
int3
jno
mov
xor
not
frstor
mov
adc
or
rorl
orl
and
inc
gs
dec
inc
outsb
out
dec
sbb
inc
mov
int3
sbb
xchg
cmpsb
jge
sbb
cld
hlt
dec
arpl
xchg
fldenv
jg
fs
daa
sbb
aas
sub
sbb
mov
out
dec
jl
push
jl
daa
lret
or
sbb
mull
mov
lret
cli
in
pushf
repz
fdivl
push
mov
sbb
test
mov
test
imul
add
dec
adc
sbb
into
cmp
in
pushf
push
outsl
inc
cmp
jae
stos
inc
js
sbb
fsts
imul
sub
leave
scas
and
jno
sbb
fcom
inc
ret
inc
lea
pop
bndldx
adc
or
ds
push
movsb
dec
test
xor
pop
mov
or
or
dec
out
and
mov
jle
mov
push
lret
ja
cli
dec
lret
pop
dec
scas
insl
inc
daa
xor
pop
inc
aam
imul
jle
or
inc
xor
mov
loop
adc
sub
fimuls
nop
insl
xchg
xchg
cmp
lock
lahf
call
xor
jbe
das
lahf
ret
sub
lea
pop
lods
mov
pusha
pop
cmp
adc
adc
popf
mulb
xorb
cli
aad
loopne
mov
fldcw
andl
sbb
fs
xor
data16
into
adc
pop
test
les
xchg
jo
add
xor
push
inc
xchg
outsb
lret
mov
dec
mov
jl
leave
repnz
and
pop
dec
push
push
sub
inc
or
mov
lock
mov
or
fsubp
dec
fiaddl
xor
test
push
popa
ror
sbb
mov
gs
dec
out
ds
scas
jge
add
iret
rcll
sti
leave
xor
dec
rcl
gs
lahf
fidivrl
mov
in
sbb
push
push
mov
push
xchg
addb
icebp
orb
cmp
sbb
add
scas
push
add
sbb
test
push
push
cli
inc
push
cmpsb
mov
push
push
xor
mov
push
fmul
mov
xor
in
mov
lahf
xchg
notb
sbb
cld
mov
ja
out
push
mov
jmp
outsl
push
ror
cmpsl
jns
jne
jnp
xor
cltd
out
or
cwtl
push
jmp
push
cld
enter
mov
leave
xchg
adcl
cmp
mov
shll
sub
ss
jle
jbe
int
inc
sbb
stos
push
cmp
mov
es
and
mov
mov
dec
ds
cmp
call
movsb
inc
lods
xchg
test
push
stos
push
popf
add
dec
fisttps
imulb
adc
lds
rcr
mov
ljmp
js
lahf
repz
inc
mov
lods
xor
gs
sar
outsb
pop
outsb
mov
fidivs
xor
inc
xor
and
and
mov
xchg
cmp
mov
rolb
sti
fs
jno
jbe
cwtl
fwait
pop
into
es
shll
jmp
xchg
lret
and
stc
out
jecxz
daa
mov
fcmovbe
outsl
cmp
test
addb
cmp
daa
clc
push
jp
in
pop
sub
cmpsl
mov
das
jmp
mov
imul
mov
sub
inc
adc
clc
movsl
enter
adc
mov
pop
repnz
cld
push
push
pusha
lahf
add
jb
cmpsl
and
push
sbb
sub
push
outsw
mov
fimull
xchg
fwait
push
push
pop
push
jle
rorb
je
fnsave
lods
es
mov
ja
jns
imul
push
iret
cld
lea
sbb
mov
stos
iret
push
inc
push
mov
fistpl
iret
push
into
push
lods
pop
mov
adc
mov
lock
loop
test
fcmove
repnz
pop
mov
in
mov
cltd
jae
sub
mov
outsb
push
mov
aad
scas
push
loopne
add
xlat
into
mov
push
cli
mov
ds
xor
pop
icebp
adc
sub
mov
cmp
outsl
in
push
pop
dec
cltd
testb
lret
sbb
in
jnp
xchg
lods
mov
or
pop
leave
sbb
pop
adc
mov
cs
scas
pop
push
mov
mov
jg
into
xchg
aad
ja
adc
es
lret
in
lock
inc
mov
iret
inc
push
mov
insb
jecxz
popf
flds
sbb
add
jnp
mov
dec
jg
sub
sbb
add
arpl
push
int3
fstps
enter
ret
je
ja
icebp
mov
jg
sub
andl
shll
ret
jne
add
sbb
adc
sahf
adc
std
sbb
jnp
mov
stc
mov
xchg
sahf
pop
rol
or
xor
mov
lods
insl
mov
sbb
in
stc
mov
pop
xor
hlt
pop
aad
xchg
inc
clc
repz
adc
inc
sub
ret
fcomp
pop
inc
xor
mov
lahf
xchg
sub
fwait
sbb
adc
mov
pop
jo
aas
lock
jo
push
cltd
dec
xchg
stc
icebp
rcr
int
dec
andl
or
push
jle
lock
arpl
cmc
mov
jo
addr16
sub
sub
and
xchg
inc
call
cmp
adc
stos
ja
lock
es
xor
out
fnsave
cmp
out
xlat
push
pop
lds
repz
movsl
dec
enter
js
out
int3
in
cmpsl
lea
stos
push
inc
fs
ret
xchg
into
lds
dec
iret
add
das
in
mov
sub
push
dec
inc
ret
xchg
movsl
pop
fwait
pop
mov
shr
movsl
call
sub
mov
mov
psubd
mov
sub
sbbl
mov
mov
xchg
ds
idiv
jg
push
fsubrs
push
fsubrp
fmull
jp
jg
scas
shl
fsubrl
mov
and
outsl
push
push
pop
inc
sbb
pop
jg
push
aaa
xchg
dec
loopne
scas
inc
addr16
push
jbe
mov
pop
shlb
es
popf
lods
cli
inc
pop
jp
mov
movsl
adc
jle
mov
sbbb
es
push
inc
or
call
jbe
mov
dec
ss
test
mov
fsubs
bound
xor
mov
sbb
sbb
lahf
pop
cs
jl
clc
cli
nop
loop
and
xchg
cmp
inc
inc
cmpsb
push
lods
cwtl
fildll
insl
loop
inc
js
xor
mov
in
jl
add
mov
arpl
nop
in
jmp
cmpsl
xlat
adc
inc
movsl
incl
push
adc
mov
and
lea
push
cmp
xchg
push
mov
xor
inc
insl
mov
and
jecxz
data16
pop
dec
inc
ret
int3
cmpsl
mov
jae
inc
lods
test
outsl
xchg
out
hlt
and
jmp
imul
stc
in
dec
sub
ret
push
int
add
bound
lods
notl
jp
cmp
mov
mov
and
xor
push
push
push
add
mov
scas
test
inc
xchg
cmp
aam
ret
inc
adcl
test
mov
enter
cmc
push
sub
pop
cmp
cmpsl
arpl
inc
mov
xchg
inc
scas
cmp
pop
js
scas
pop
movsb
fwait
mov
pop
inc
push
cwtl
pop
repnz
lods
test
inc
xchg
iret
pop
lods
mov
je
cmpsb
mov
inc
adcl
call
or
mov
loope
sub
or
imul
xor
dec
xchg
sti
pop
dec
aam
mov
ds
movsb
inc
push
mov
movsb
and
subb
jge
push
mov
pop
ficoms
enter
out
shl
sub
adc
lcall
cmpsl
addr16
jp
mov
sub
xchg
int3
and
pop
pop
lret
popl
loopne
mov
jns
fldenv
add
sub
cmp
loope
xor
lock
add
pop
xchg
loop
flds
movsb
lods
xlat
out
xchg
mov
pop
pop
or
inc
dec
idiv
or
and
ds
rcrl
loopne
mov
mov
mov
mov
mov
cs
je
dec
sub
out
lods
test
movsb
stos
loop
fistpl
insb
adc
test
mov
sbb
jne
or
daa
fadds
sbb
sub
mov
enter
mov
insb
lods
js
pop
fdivrs
xchg
ret
xor
lea
fwait
mov
aaa
jp
addr16
icebp
lret
pusha
jp
daa
inc
sub
mov
data16
mov
jge
or
out
call
xchg
inc
call
ss
stc
xor
jmp
inc
adc
mov
jmp
cltd
xchg
popf
mov
add
sub
inc
push
fucomip
ljmp
push
push
sahf
jb
arpl
out
fisttpl
mov
pop
jae
xor
and
mov
and
pop
cmp
push
lcall
cmp
insl
jg
jp
imul
pop
dec
sbb
outsl
sbbb
push
cld
sahf
mov
or
cmc
stos
sbb
clc
imul
jecxz
sbb
jmp
movsb
les
daa
outsl
sub
sahf
rorb
shr
stos
icebp
mov
in
outsb
pop
xchg
daa
outsb
lods
insl
inc
xor
repz
sub
inc
jno
std
divb
cwtl
sahf
jne
push
lock
inc
sub
fistpl
inc
outsb
out
jne
xor
inc
jbe
cmp
cmpsb
sahf
jp
rolb
pop
test
insb
jg
jns
addr16
sbb
fwait
hlt
negb
xchg
xchg
enter
push
sbb
cld
push
xchg
test
ds
push
sbb
mov
xchg
fidivs
xlat
pusha
cltd
xchg
outsl
in
xor
imul
adc
mov
push
xchg
lock
sub
pop
hlt
insb
mov
ret
xor
mov
lds
lcall
cmpsl
jb
sbb
jno
xor
mov
add
movsl
push
xchg
push
add
xor
vpunpckhdq
mov
dec
mov
mov
cmp
popa
outsl
lret
dec
int
inc
aaa
mov
and
sbb
stc
mov
fildll
xchg
sbb
mov
jmp
popf
cld
popf
popf
int3
in
lea
fldt
jnp
xlat
ret
pusha
aas
adc
adc
xor
pusha
in
sti
popf
inc
daa
cmp
push
mov
pushf
pop
leave
out
inc
or
cmp
cli
call
cld
dec
fcmovnu
seta
jbe
inc
cld
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
out
sub
addl
test
nop
push
pop
fiaddl
fs
mov
sub
je
cmp
cs
insb
push
jg
jae
rcrl
pop
add
aas
mov
popf
xchg
push
pop
cmp
cmpsl
jb
ftst
mov
jle
and
push
aas
and
sub
inc
lret
shr
jle
xchg
dec
test
xchg
jns
mov
aam
inc
dec
inc
sub
inc
es
nop
adcl
or
fstpl
sub
mov
test
iret
popa
sbb
add
in
repz
inc
shrl
cli
add
fmul
cwtl
or
roll
sub
or
stos
pop
jge
aaa
fsub
arpl
mov
adc
ret
mov
adc
mov
xchg
xchg
xchg
cmp
decb
push
pop
or
mov
rcl
add
adc
dec
ret
pop
fnstcw
push
loop
fs
xchg
mov
les
andl
cmc
add
dec
mov
into
lret
shlb
lock
jg
ds
jmp
scas
nop
aas
cmpsb
cmp
xor
dec
nop
popa
gs
pusha
mov
mov
lret
out
hlt
shr
negb
xorl
pop
das
cmp
adc
add
out
push
mov
dec
fdivrs
cmp
push
mov
sub
cmp
cmc
cmp
pop
jns
xchg
and
push
jno
fstl
and
mov
lret
add
addb
pop
sub
das
add
loope
fldl
inc
pushf
mov
aam
or
mov
add
test
mov
jmp
test
jae
or
pop
mov
mov
push
xchg
repz
cmpsb
cmc
inc
ja
sub
ljmp
and
call
cmpsb
scas
ret
add
imul
xchg
sub
pusha
ljmp
adcb
inc
pop
xchg
es
adcb
paddw
mov
push
push
mov
pop
in
or
cmp
movsl
nop
subb
mov
inc
pop
outsl
aas
dec
pop
es
dec
xor
inc
dec
imul
dec
jo
loop
dec
mov
xchg
push
shrb
loop
inc
lahf
mov
push
fmuls
out
std
sub
pop
sbb
out
add
sar
loop
adc
jns
bound
push
add
adc
jae
cli
fidivl
jno
in
push
adc
outsl
push
adc
jae
sahf
xchg
dec
adcb
inc
ret
jno
fsubrl
imul
adc
jne
jne
cld
adc
dec
movsl
pop
leave
sub
mov
stos
ffree
sbb
adc
test
mov
stos
mov
shrl
xchg
repz
int3
aam
xchg
push
int
testb
jns
pop
in
imul
or
push
std
stos
sbb
fistl
pop
jmp
xlat
call
ljmp
jmp
scas
mov
leave
mov
mov
jp
test
pop
jnp
mov
mov
leave
add
sub
add
nop
in
sti
mov
lahf
ds
pop
scas
mov
jmp
fisubs
mov
lods
test
or
aas
arpl
push
push
movsl
adc
sub
inc
popa
mov
es
xchg
lods
adc
pop
les
jno
or
aas
pop
jl
insl
inc
dec
inc
imul
sub
hlt
push
xchg
fidivs
push
shrb
notl
jns
add
scas
ror
out
mov
icebp
leave
lods
sub
cltd
jnp
xor
dec
jge
and
test
pop
cmp
pusha
inc
xchg
in
cltd
icebp
imul
enter
mov
popf
xor
mov
adc
pop
ss
rcr
sbb
shlb
lcall
jg
pushf
adc
jo
pcmpeqw
mov
mov
jmp
insb
dec
loope
pop
imul
rclb
mov
jg
lock
fimuls
mov
sub
and
xchg
cmp
add
xchg
ret
fcmovu
xor
pop
nop
jl
pop
jne
xor
and
dec
test
pop
jne
mov
adc
jno
ss
push
fcoml
lahf
xchg
pop
jl
lea
cmpps
dec
pop
and
sbbl
daa
movsb
or
int
mov
fs
mov
scas
pop
mov
or
or
pop
push
xor
xor
mov
popa
stos
add
fstl
sbb
sbb
xor
xchg
idivl
adc
outsb
lret
push
cs
les
cwtl
ljmp
adc
jge
jnp
push
int3
fildll
sbb
dec
insl
pop
xor
int3
imul
and
jp
gs
mov
or
ret
scas
xchg
into
into
and
lods
push
xchg
jno
dec
rcll
outsb
fnstcw
mov
inc
mov
sbb
sub
cmpsb
mov
add
jecxz
cld
insl
mov
mov
test
out
jg
and
loopne
clc
gs
dec
mov
sbb
jp
fildll
cs
cmp
lock
mov
fwait
movsb
mov
mov
popa
or
and
xchg
inc
mov
sti
pop
cmp
insb
insl
jb
pop
data16
inc
add
lea
dec
movsl
rcll
aaa
lods
ja
lcall
imul
ljmp
pop
inc
and
fwait
sbb
mov
ret
pop
rcll
inc
in
sarl
add
sub
orb
push
xchg
push
cltd
in
xchg
jbe
mov
cld
movsl
and
adc
iret
test
sbbl
insl
inc
mov
adcb
push
mov
pop
add
jp
push
fs
repnz
mov
sub
jge
pop
insb
dec
xlat
dec
ja
sbb
add
cmp
inc
dec
ffreep
in
jne
pop
test
mov
jmp
dec
jecxz
inc
test
sbb
cli
jmp
scas
adc
loopne
mov
lea
inc
lret
gs
hlt
sbb
aaa
xor
or
inc
pop
push
mov
jg
mov
loop
sti
fdivrp
movsl
and
or
inc
out
les
xlat
pop
mov
inc
in
cltd
jae
jle
cmp
mov
pop
dec
inc
lret
dec
xchg
arpl
push
push
inc
mov
sub
fiadds
mov
sub
push
cmp
dec
data16
test
xchg
push
and
data16
sub
jmp
pushf
loopne
arpl
push
sub
or
xor
popf
bound
add
pop
rorb
cmp
or
xchg
push
and
and
lahf
bound
rolb
lcall
xor
cltd
pop
std
iret
mov
and
sub
mov
adc
jmp
fbld
mov
inc
mov
push
fwait
and
and
repz
fdivl
pop
paddw
aad
rol
in
cli
xchg
ret
xchg
jns
xor
movsb
scas
push
cli
mov
jle
or
dec
cs
insb
shr
fdivp
push
jmp
lods
add
dec
jns
xor
rorl
ja
or
scas
ds
roll
sbb
push
xchg
and
push
repnz
out
adc
dec
mov
add
push
mov
push
in
push
ret
pusha
js
sub
insb
inc
sbb
inc
out
inc
call
mov
scas
inc
aad
add
xchg
adc
push
fs
ret
ret
daa
mov
dec
mov
adc
cmp
lcall
lret
sarl
mov
mov
or
sub
shlb
add
iret
cmc
mov
mov
cmp
lds
das
das
test
repnz
adc
and
cmpsl
repz
pop
js
xchg
gs
cmp
out
sbb
inc
jne
jmp
shlb
outsb
mov
pop
adc
fists
jmp
call
lcall
scas
mov
mov
out
jns
mov
sbb
pop
push
xchg
push
subb
cmpsl
sbb
pop
jno
sub
out
cld
pusha
aad
adc
leave
add
dec
icebp
jnp
add
and
bound
popa
jae
and
jmp
inc
sahf
mov
push
push
shl
inc
add
aad
ficoml
add
dec
mov
addr16
insl
inc
mov
ss
std
lret
inc
xor
mov
cmp
ljmp
xor
popl
shr
les
lods
std
xchg
mov
push
inc
adc
cmp
aas
push
rorl
popa
rolb
xchg
enter
loop
insb
fwait
in
push
push
jbe
out
mov
test
pop
jge
cmp
clc
fs
sarb
cltd
adc
pop
mov
not
pusha
cltd
jbe
cmp
add
add
xor
int3
negl
les
ljmp
mov
mulb
adc
pop
cmpsl
and
push
jb
lea
mov
rclb
mov
xchg
push
lods
dec
sub
xchg
imul
mov
cmp
jg
xchg
mov
push
mov
jp
inc
ja
push
icebp
jnp
les
ret
test
test
mov
daa
mov
in
xchg
jge
sbb
sbb
dec
xchg
ficoms
aad
movsb
int3
inc
cli
hlt
mov
enter
push
inc
cltd
mov
jmp
mov
xor
xchg
test
mov
test
sub
sbb
into
cld
aad
add
sub
ja
push
sbb
xor
sbb
aam
js
and
push
aas
cmp
hlt
lods
clc
dec
cwtl
negl
jmp
loop
mov
pslld
pop
fcmovnbe
add
push
mov
out
and
imul
or
cs
mov
xchg
push
out
sub
xchg
cmp
aaa
or
lods
xor
js
inc
inc
int3
imul
cmp
negb
push
adc
add
or
xchg
mov
inc
repnz
dec
js
les
int3
pop
bound
data16
sti
repnz
mov
andl
sub
xor
insb
rorb
in
add
push
shr
sub
data16
dec
push
mov
pop
mov
shrl
jo
add
movsb
loopne
inc
jo
pop
outsl
dec
addr16
js
jle
xchg
and
push
add
or
les
hlt
mov
inc
out
fisttpl
in
xchg
out
or
aaa
push
imul
xchg
xchg
xor
test
iret
testb
inc
or
xchg
lds
dec
pop
in
stc
mov
dec
push
out
imul
pop
lcall
lds
fbld
push
addr16
nop
mov
mov
jns
mov
or
das
mov
lea
bound
sbb
add
scas
bound
jns
xchg
repnz
jne
cmp
icebp
pop
dec
std
rolb
cltd
push
push
xchg
je
xchg
mov
mov
cwtl
mov
ss
sub
jp
cld
frstpm(287
test
in
xor
sub
aam
sub
popf
sahf
sub
push
jle
repnz
mov
dec
les
testl
je
sarl
or
scas
pop
out
out
test
cwtl
clc
add
and
mov
sbb
lcall
lcall
xchg
int3
inc
mov
dec
push
shl
dec
clc
mov
mov
insb
push
lret
loop
sub
xchg
add
mov
shlb
iret
ja
pushl
jecxz
outsl
lds
sti
pop
inc
hlt
add
js
jmp
out
push
out
sub
outsb
xor
and
mov
cmp
and
insl
cmp
lcall
add
and
dec
and
or
inc
jge
int3
xchg
orl
mov
hlt
sub
mov
mov
outsb
xchg
push
cmp
fidivrl
mov
or
xor
lock
jle
push
jmp
fnstsw
scas
and
ret
lcall
lods
and
push
les
cmp
in
fs
add
xchg
iret
pusha
sub
pop
dec
cmp
aad
scas
sbb
pop
das
pusha
fcmovnu
cmc
std
jo
sub
mov
inc
add
push
dec
aam
adc
cmpsl
push
lock
sub
mov
xor
sbb
aam
sub
dec
xor
pop
call
mov
xchg
data16
adc
mov
push
loop
mov
push
pushl
mov
pop
hlt
jge
sub
push
std
ds
pop
xor
pop
mov
mov
dec
pop
inc
mov
lret
adc
dec
inc
mov
jp
dec
sub
cmp
ljmp
xchg
cs
leave
sub
loopne
stos
rolb
mov
iret
xor
adc
fstpl
sbb
dec
out
outsb
icebp
adc
dec
mov
nop
jne
addr16
mov
mov
fisubl
insb
das
cmp
in
jbe
js
push
mov
out
sub
in
mov
pop
and
jle
pop
scas
fnstsw
or
lret
or
adc
jae
scas
fsubl
add
icebp
mov
clc
lods
or
mov
push
add
sub
pusha
adc
add
jo
pop
jmp
mov
repnz
and
inc
xchg
mov
mov
cmp
sub
clc
mov
xor
sbb
loope
lcall
fldcw
mov
adc
lods
dec
jp
xor
jmp
movsl
sarl
shlb
push
pop
sbb
or
pop
sbb
push
mov
ja
loope
fmul
cmc
jg
es
outsl
sbb
sarb
xor
xchg
sahf
sarb
sbb
pop
mov
ret
jne
cwtl
pop
enter
pop
jo
repz
popa
mov
xchg
inc
cmp
push
lret
dec
pop
int3
test
adc
xor
adc
adc
jbe
fcomip
fsubs
and
and
sbb
int3
jmp
mov
clc
mov
aad
dec
pop
fisubl
add
dec
push
and
mov
push
insb
fildl
stc
insl
outsb
dec
sub
push
notb
ss
aaa
push
movsb
icebp
sbb
mov
lods
xlat
cld
pusha
jge
jno
mov
xor
scas
push
mov
sbb
and
add
stos
jb
out
dec
dec
cmp
sbbb
mov
pop
jno
pop
leave
pop
push
lret
pop
push
adc
lock
ss
scas
fscale
ret
add
inc
mov
mov
pushl
and
sub
jp
call
sbb
lret
std
mov
rcrb
sbb
adc
cmp
xchg
and
mov
inc
repz
inc
jg
cltd
sarl
fldt
add
cmp
icebp
cmp
sub
pop
jbe
pop
cld
cli
mov
and
movsl
scas
xchg
mov
lods
push
and
mov
mov
das
or
out
push
mov
clc
ret
xlat
inc
mov
sub
xor
repnz
and
mov
mov
sub
adc
lcall
lods
and
inc
iret
adc
jnp
test
insb
or
mov
icebp
rcll
mov
cwtl
out
pushf
cwtl
xchg
js
mov
nop
and
out
shrl
std
loop
xchg
leave
inc
inc
sbb
call
push
mov
mov
cmpsb
jnp
pop
jne
mov
sbb
add
outsl
idivl
roll
mov
and
test
jmp
fsts
sub
test
in
fistpll
je
push
cmp
hlt
pushf
call
xchg
movsl
roll
xchg
jp
xchg
ret
dec
pop
pop
nop
push
orb
add
sub
dec
push
addl
out
jl
outsl
xor
vsubss
push
dec
dec
cmpsb
call
add
sbb
push
lods
iret
xor
pop
push
xor
aas
cmp
jnp
scas
xchg
mov
cwtl
pop
jl
pop
subl
fsubs
into
sbb
rolb
jl
or
xchg
add
cmp
cwtl
inc
dec
xor
sub
dec
insb
inc
xchg
movsl
fsubrs
rcll
and
mov
jle
xchg
cmp
ret
repz
test
mov
fistps
daa
cwtl
push
mov
jecxz
cmp
jl
jo
jbe
push
insl
out
jo
mov
cmpsl
xchg
inc
pop
scas
push
mov
imul
push
in
inc
mov
mov
das
pop
stc
mov
outsl
loop
push
ljmp
sti
in
push
into
aas
icebp
push
push
xor
pop
ret
jmp
sub
cmpsb
sti
pop
f2xm1
add
nop
icebp
xchg
stos
addr16
mov
aad
push
pop
inc
add
ljmp
inc
das
jno
ficompl
int
adc
cmp
jle
pushf
push
aaa
and
xchg
call
repz
into
push
cld
outsl
subl
jbe
push
and
mov
repz
jmp
and
popf
push
xchg
pop
fistpll
loopne
addl
jmp
cs
cmp
aaa
out
rcll
scas
inc
cmp
jg
mov
mov
sub
popa
add
xlat
jp
mov
cmpsl
jne
stos
inc
addr16
leave
out
addl
push
rcr
jl
jmp
lret
xor
es
cwtl
xchg
pop
pop
aaa
cmpl
repz
cwtl
xchg
stos
cltd
sahf
jmp
pop
jae
push
xor
and
xlat
push
mov
scas
arpl
loop
jmp
lea
cmp
adc
dec
jnp
dec
test
out
data16
jnp
call
inc
mov
sbb
xchg
jle
lods
jno
xor
adc
xor
pop
je
cmpsl
fsts
movsl
lea
clc
sahf
mov
mov
sti
test
lock
add
lea
mov
rorl
ljmp
neg
in
ror
xchg
pusha
adc
stos
mov
adc
inc
repnz
mov
js
rorl
ds
ret
adc
data16
pop
leave
xchg
ret
les
push
mov
dec
lahf
pop
rorb
cmpsl
rol
inc
mov
cmp
stos
inc
pushf
out
push
push
jg
outsb
push
adc
push
cltd
xchg
jne
ret
dec
xor
and
push
icebp
push
or
adc
fnstcw
andb
inc
xchg
add
fs
stc
popf
test
out
sbb
mov
inc
sti
add
es
inc
test
lret
scas
cmp
add
xchg
cltd
call
sar
ds
push
add
sub
mov
popa
lods
adc
push
call
mov
or
pop
sarl
push
mov
xor
cmc
pop
cmpsl
sub
orl
pop
mov
cltd
icebp
sub
cmpsl
or
mov
mov
push
aaa
pop
and
dec
cmp
inc
xchg
pop
ljmp
pop
aad
mov
jle
push
icebp
push
push
mov
lea
movsl
orl
xchg
push
loop
iret
pop
gs
pushf
sbb
jb
pop
cmpsl
nop
movsb
aad
imul
gs
test
nop
out
and
shl
cmp
mov
roll
test
push
and
ss
sub
vpmulhw
push
cwtl
dec
hlt
cltd
mov
cmp
flds
lret
cli
jmp
inc
imull
dec
lods
in
or
add
xchg
outsb
rorl
in
popf
sbb
fsubrl
and
sub
shll
jnp
mov
jno
xor
insb
shll
stc
adc
mov
mov
xor
scas
sbb
pop
nop
mov
sub
push
bound
daa
mov
cwtl
xor
jmp
mov
cld
cmp
sub
pop
ss
fimuls
aam
or
or
jle
cmpb
pushf
imul
fucom
loope
out
push
or
fwait
scas
and
fiadds
iret
outsl
das
es
push
iret
dec
sub
leave
jbe
add
cmpl
fiaddl
test
dec
mov
stos
sbb
lock
mov
add
fxsave
insb
mov
dec
popf
or
lcall
xor
les
cwtl
and
sub
lea
mov
fwait
dec
sarb
mov
aas
aad
cmp
imul
loop
sbb
mov
xchg
aam
int3
pop
test
popf
mov
xchg
push
mov
ret
inc
daa
enter
mov
hlt
aad
sti
cmp
mov
pop
out
jae
stc
sub
loop
dec
xchg
iret
jge
arpl
sub
inc
jecxz
mov
xchg
mov
jns
xor
xor
jae
popa
push
sbb
or
mov
mov
mov
mov
fwait
enter
aaa
test
int
shrl
jae
popf
test
das
inc
or
in
jmp
mov
hlt
int3
or
sbb
cmp
scas
mov
and
cs
dec
pop
jp
arpl
cmp
pushf
popw
addr16
imul
push
in
cmp
and
push
xchg
test
add
mov
leave
sbb
pop
inc
jne
jns
stos
in
mov
xor
sti
pop
adc
adc
call
jnp
shr
rolb
scas
adc
mov
add
lcall
cvtps2pi
call
inc
shll
and
cmpsl
scas
inc
loop
dec
pop
ror
push
mov
or
mov
mov
sbb
sbbb
cmp
sahf
inc
inc
mov
lcall
mov
js
sbb
mov
leave
ds
fdivp
lods
test
inc
pusha
shll
clc
lea
add
jae
dec
subb
in
repz
loope
mov
xchg
pop
imul
loop
in
or
rorl
inc
push
jecxz
push
mov
push
mov
in
and
jno
je
repz
adc
mov
pop
movsl
sbb
jne
push
enter
xchg
pop
ds
cmp
add
adcb
cwtl
mov
fistpll
call
adc
inc
cmp
pop
fsubr
es
ds
popa
sub
icebp
xor
xchg
add
or
mov
cmc
pop
outsl
sub
add
loop
lcall
in
sub
stos
je
mov
jmp
cli
adc
or
xor
or
clc
int
jne
or
mov
lds
sbb
imul
jp
mov
pop
mov
arpl
push
aam
xor
push
repz
sub
lea
cmp
cmc
jae
sbb
pop
aaa
addl
add
sbb
mov
inc
xor
mov
lret
imul
gs
enter
std
inc
rcl
xchg
sahf
inc
mov
out
subl
push
sahf
repnz
mov
mov
jo
add
push
mov
cmp
and
mov
jg
js
ret
stos
jnp
lret
adc
pop
inc
repz
and
pop
inc
test
push
outsl
out
push
nop
jae
mov
pop
cmp
adc
fildll
mov
xor
in
inc
ds
dec
lahf
and
adc
jp
shlb
xchg
stc
daa
daa
push
in
pop
testb
jp
mov
xor
pop
neg
nop
pop
push
test
xchg
lods
adc
xor
cwtl
in
pop
loop
or
xlat
push
jns
ss
dec
mov
sub
kunpckbw
pop
jb
rorl
leave
xchg
inc
movsb
sahf
push
ret
push
push
insl
sub
pushf
das
int
inc
push
add
mulps
xor
cwtl
jle
add
sbb
inc
in
popa
in
dec
xor
test
mov
xchg
jecxz
fsubl
in
mov
aam
push
mov
out
xor
adc
int
pop
lret
ret
push
push
add
jmp
fimull
push
das
cmp
rcr
xor
rcll
jp
add
js
outsb
add
mov
pop
imul
icebp
cmc
xor
jbe
pop
movsb
sbb
xor
sub
mov
add
jl
stc
pop
sbb
dec
sub
inc
shlb
rcll
mov
insb
push
adc
data16
lea
movsb
popa
pop
inc
push
sub
add
jns
xchg
cltd
jae
inc
pop
cmp
out
adc
mov
xor
jae
sbb
sti
shrl
dec
or
cmp
dec
jno
xor
mov
ljmp
rolb
inc
ss
dec
jp,pt
cmp
repnz
mov
fidivl
adc
mov
stc
pop
lret
xor
inc
hlt
dec
mov
adc
cld
sub
ss
xchg
mov
jmp
dec
dec
sbb
stos
add
ja
xchg
js
cmp
mov
out
dec
dec
pop
data16
or
mov
pop
or
adc
lock
out
dec
popa
cmp
push
sahf
jno
rorl
jl
xchg
fwait
sbb
in
shl
lds
dec
and
int3
loope
popl
jmp
test
pop
pop
cmp
ss
xchg
mov
fwait
mov
sbb
pusha
jge
mov
cwtl
pop
jl
push
int3
xor
rcll
and
fmull
stos
and
mov
sahf
pop
aam
ret
enter
sbb
add
imul
xchg
or
lods
or
jo
rol
push
mov
jmp
adc
fistpl
inc
pop
lods
and
clc
push
mov
adc
sub
mov
jmp
mov
les
cmp
fsubrl
out
idivl
shlb
cli
push
and
lock
sub
inc
imul
out
mov
add
sub
adc
data16
dec
xchg
out
pop
jo
mov
int
cmpsl
or
js
fdiv
fcompl
dec
mov
mov
stos
push
add
loope
add
dec
push
aaa
add
lods
push
enter
sub
insb
adc
repz
and
and
jecxz
push
pop
push
jnp
xlat
mov
adcb
lods
std
lods
push
mov
fs
mov
loope
sub
lcall
in
adc
das
pop
mov
sti
cmp
pop
mov
out
fstps
ds
addr16
aad
sub
or
inc
lret
shrl
orl
lcall
lret
or
pop
arpl
mov
aas
pop
xchg
or
and
loopne
lahf
inc
push
mov
push
imul
out
xor
xor
cmp
ret
outsl
popa
in
xor
xor
xchg
and
fs
adc
cmp
sbb
in
mov
add
sbb
in
pop
sahf
jno
xor
adc
mov
mov
adc
scas
sbb
sbb
adc
loope
imul
mov
inc
pop
xchg
stc
out
mov
and
inc
or
lret
subl
fcompl
mov
mov
inc
rep
nop
aaa
int3
outsl
std
imul
sub
icebp
cmp
sub
bnd
or
repnz
push
mov
push
add
pop
pop
jno
push
add
mov
f2xm1
lret
hlt
cmpsl
add
mov
inc
dec
inc
outsl
fwait
imulb
loop
aas
fwait
imul
pop
aam
jae
push
mov
stc
jno
xor
fistpl
cmp
sbb
xchg
push
inc
mov
and
movsb
push
pusha
xor
lahf
adc
dec
add
pop
iret
pop
and
dec
leave
inc
mov
xchg
dec
or
or
call
aas
pushf
sub
jp
sbb
cli
fsubrl
add
pop
aaa
int
fsubp
mov
test
test
cli
cli
mov
sub
cltd
enter
pop
in
sbb
adc
mov
daa
adc
ljmp
adc
sbb
jb
push
adc
mov
inc
jne
or
sub
inc
repz
adc
and
das
or
dec
cmp
push
aam
mov
mov
lret
test
sarb
jmp
adc
mov
add
icebp
bound
fcom
leave
push
sub
je
and
je
loop
inc
add
lock
outsl
sbb
cmp
mov
leave
jnp
jle
clc
mov
jbe
cs
mov
jg
mov
push
out
in
xor
push
arpl
inc
out
cwtl
incb
into
leave
cld
int3
stos
ja
xchg
push
fdivl
pop
sub
out
jge
and
pop
aas
jl
add
pop
mov
roll
xlat
push
push
mov
dec
push
fmull
fwait
cwtl
lods
sub
and
sbb
int3
add
adc
mov
shl
rorl
and
unpckhps
or
push
jno
out
dec
xor
jp
mov
mov
pop
in
jmp
insb
push
loopne
adc
cmp
or
mov
and
rorl
jmp
out
or
gs
jno
outsl
test
mov
mov
pop
sbb
xor
mov
lret
mov
cmp
bound
in
out
fldln2
pop
pop
push
push
sub
div
hlt
xchg
xchg
ret
adc
pushf
shl
insb
dec
in
arpl
inc
xchg
or
scas
leave
sub
movsl
mov
jp
sar
push
jo
add
rorl
inc
sub
mov
mov
dec
xlat
arpl
or
and
adc
stc
mov
sub
sub
daa
pop
xchg
xchg
sub
push
icebp
adc
iret
not
pop
fsubr
ja
loope
mov
push
cld
into
mov
mov
cmpsl
mov
xchg
push
push
and
jge
test
dec
jns
gs
and
lods
add
sub
das
sub
cmp
jmp
rcrb
leave
pop
mov
aam
pop
in
sub
cmp
jg
les
mov
xor
xchg
push
subb
repnz
mov
js
sbb
arpl
push
mov
lret
xchg
das
push
mov
orb
dec
cmc
repz
out
push
shlb
data16
call
dec
sti
insl
adc
sti
mov
or
push
stos
xchg
dec
mov
or
test
push
stc
push
xlat
imul
xchg
cmpl
xor
pop
stos
dec
aam
scas
ret
call
push
jo
xor
in
aam
sti
cmc
addl
add
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
mov
pop
cmpsl
mov
addl
insl
in
inc
jecxz
sbb
jl
add
lcall
data16
dec
sub
in
jl
std
push
push
jecxz
loopne
push
stos
in
sbb
pusha
dec
xchg
mov
and
insb
cld
push
sub
pushf
lahf
and
mov
adc
pop
xchg
push
dec
sub
sub
es
inc
cli
xor
int3
cwtl
push
sbb
xchg
jp
mov
lea
mov
xor
sti
lock
xchg
xchg
inc
xchg
sub
lea
sahf
popf
lcall
cmp
add
sbbl
push
push
mov
in
shll
sbb
xor
in
fwait
data16
add
pop
or
xor
das
lods
jge
cli
mov
je
push
inc
mov
xchg
mov
jp
mov
faddl
inc
or
jae
lahf
lret
cmp
inc
dec
xchg
mov
sbb
pop
mov
mov
shl
pop
movsb
insl
and
xchg
test
test
jmp
js,pn
pop
and
in
and
rep
cltd
and
cli
inc
lea
mov
lret
pusha
cmc
dec
lret
dec
push
push
stos
and
stos
mov
subps
sarl
sub
pop
and
add
jne
sbb
scas
dec
add
push
imul
imul
icebp
and
lcall
fnstcw
pop
cmc
mov
testb
adc
inc
sub
lahf
sub
aam
pushf
jae
add
sbb
pop
mov
fidivs
push
sbb
lock
cld
ds
lret
dec
xor
cli
ja
or
mov
cmp
jecxz
scas
std
mov
stos
xchg
fldt
jecxz
or
xor
push
or
inc
xchg
mov
push
ret
xchg
jno
into
repz
les
adc
xor
ja,pt
jl
mov
mov
mov
aas
insb
loope
fwait
add
lret
mov
ficomps
stc
inc
cmp
les
in
jl
push
xchg
frstor
stos
lret
nop
mov
and
push
cmp
mov
loop
int3
sub
aam
ss
subl
fstpl
push
inc
in
daa
inc
push
in
fldl
mov
fnstsw
sub
stos
fldcw
pop
mov
pop
mov
add
into
xchg
loop
andb
push
movsb
call
lahf
add
push
ret
stos
inc
add
xor
lahf
roll
or
sbb
xchg
inc
add
enter
jne
icebp
sub
xor
je
mov
dec
or
nop
fimull
fidivl
and
cld
xor
inc
in
sbb
jg
adc
jle
or
dec
dec
mov
rcrl
pop
inc
or
push
jbe
mov
jne
orl
jns
and
xor
mov
xor
in
das
lret
and
xchg
popa
fldl
jo
fldcw
dec
and
or
test
or
repnz
dec
adc
pop
stc
sbb
icebp
aas
jl
push
mov
push
mov
adc
jecxz
jecxz
pusha
cld
adc
call
and
xchg
sbb
ret
mov
iret
inc
mov
add
shll
lcall
orl
psrad
push
lock
int3
sbb
mov
mov
xchg
and
add
roll
pop
lret
test
or
xor
leave
cs
dec
mov
xor
cltd
add
and
mov
jl
lds
gs
sarb
daa
fisubrl
jo
mov
pop
scas
fiaddl
out
cltd
push
mov
repz
out
outsb
lods
repz
fs
arpl
outsl
out
inc
sbb
push
out
jo
je
or
mov
repz
push
jnp
aad
jnp
scas
xor
dec
pop
sbb
in
cmp
add
add
cltd
pop
loop
cmp
ss
cmpsl
and
jns,pt
adc
out
add
je
push
cli
mov
arpl
mov
pop
aam
jae
gs
push
xchg
pop
inc
adc
dec
mov
push
mov
sbb
jnp
or
adc
and
scas
pop
in
dec
bound
dec
and
xor
push
cmpb
dec
adc
xchg
dec
xchg
repz
or
test
leave
xor
mov
inc
lods
shlb
sbb
popf
mov
dec
or
xor
daa
or
sti
mov
out
idivl
in
adc
test
je
outsb
pop
xchg
je
fidivrl
lock
ret
movsb
cmp
xlat
data16
mov
cwtl
je
pop
mov
ficoml
mov
jno
ljmp
jge
pusha
add
addb
cmp
mov
or
pop
scas
push
repz
mov
notl
and
mov
cmpb
xor
jne
sbb
sbb
movsl
arpl
mov
pop
sti
mov
inc
jp
inc
or
les
scas
subb
out
sbb
or
mov
rcr
mov
addb
inc
addr16
movhps
jge
sub
popf
jl
enter
add
sarb
mov
pop
and
es
gs
pop
lods
sbb
aam
adc
arpl
lock
inc
cmp
lret
jo
test
ffreep
mov
adc
jno
mov
cmc
push
cmp
leave
inc
ljmp
ret
sahf
daa
sub
sub
aad
sahf
xor
sbb
mov
shlb
fmulp
mov
add
mov
or
sqrtps
mov
xor
xchg
or
cltd
pop
mov
aam
in
xchg
mov
or
scas
les
idivl
imul
dec
dec
das
shlb
xchg
jnp
push
cmpsl
movsb
or
test
in
mov
push
enter
cltd
pop
push
mov
cs
jno
sub
shr
inc
dec
cmp
divl
pop
ss
mull
pop
mov
out
in
jmp
mov
cmpsl
mov
mov
cld
je
ret
je
and
rcr
jecxz
sub
adc
push
jecxz
cmp
aam
cmpsl
les
fwait
popa
or
mov
or
ds
enter
inc
test
aas
fstpl
pop
in
stc
inc
inc
cmp
dec
roll
push
test
cwtl
std
pop
lds
int3
dec
mov
into
jg
mov
stos
call
test
iret
jge
popf
out
adc
les
mov
or
leave
test
jo
pop
ljmp
or
cmp
cmp
xor
movsl
xchg
push
daa
arpl
adc
mov
xor
das
mov
sub
test
testb
into
fldt
inc
jmp
outsl
mov
xor
pop
lods
jecxz
mov
adc
repnz
jecxz
mov
mov
faddp
sbb
push
or
pop
push
movsb
xor
cltd
repnz
mov
mov
imul
jl
imul
cmc
xchg
push
arpl
pushl
xor
out
or
test
cs
out
mov
mov
cmp
and
sub
pusha
rcrb
cmp
lock
mov
or
push
aas
mov
push
ds
ds
loopne
xchg
push
xchg
xchg
aas
mov
dec
pop
push
add
push
rcrl
fnstcw
decb
sbbl
ret
popa
xchg
jnp
cmp
popa
jle
sub
out
jp
mov
fistpll
shlb
in
jmp
push
outsl
pop
repz
push
out
mov
mov
dec
in
jge
mov
es
clc
sbb
lods
in
add
pushf
hlt
xchg
cmp
dec
push
repz
test
push
jmp
dec
pop
cmp
jnp
pusha
push
sub
lds
cld
push
in
or
or
mov
or
ficoml
push
cltd
lret
scas
add
addr16
mov
icebp
orl
xor
mov
cmp
dec
aaa
mov
adc
mov
fwait
or
leave
jl
push
jbe
dec
jno
inc
lods
and
sbbb
xlat
aas
add
xor
sahf
jle
jns
adc
mov
shlb
out
test
jmp
sub
mov
cwtl
xor
lret
xchg
inc
fcomps
mov
icebp
sub
xor
and
fcomps
int
jg
xchg
aaa
push
enter
test
dec
push
ret
repz
incl
lahf
dec
xor
movsb
dec
push
jb
cmp
jmp
scas
test
jo
lret
dec
scas
movsl
aad
mov
int
ljmp
dec
cs
int3
psubsb
lds
and
sub
dec
mov
movsb
fdivrl
imul
mov
mov
cs
mov
stc
pop
into
scas
jae
repz
inc
movsl
shlb
fnstcw
cmp
bts
enter
push
jno
rcrb
fidivl
pop
mov
icebp
mov
xor
adc
shrl
cmp
mov
cmp
jns
mov
out
cmpl
in
pop
adc
in
jmp
push
test
les
aaa
repz
mov
movsb
lods
rorl
push
nop
cmc
sub
les
xchg
mov
sti
ret
xchg
in
cmp
lock
repz
add
pop
xchg
aad
iret
std
dec
loope
insl
ljmp
icebp
ret
subb
aam
mov
in
pop
inc
xchg
popf
xchg
mov
ret
adc
jno
pop
inc
fildl
lds
xchg
mov
sub
int3
repnz
testb
fisubs
or
pop
test
fwait
mov
mov
mov
stc
fstpl
pop
fdiv
out
outsl
int
fldlg2
jbe
fiaddl
nop
stos
shl
pop
lret
inc
mov
dec
addr16
lods
xchg
and
xchg
maxps
pop
dec
push
loopne
sti
mov
mov
test
or
sub
mov
lea
jmp
inc
gs
rcll
icebp
and
add
bound
cld
jae
cmp
sarb
mov
lods
sbb
mov
das
cli
xchg
lret
aaa
cs
cmpb
jne
sub
push
mov
in
lea
inc
xchg
push
sbb
test
addr16
jge
in
push
cs
fists
add
roll
stc
adc
push
jns
jnp
std
cmpsl
cltd
inc
add
test
push
mov
fdivrl
adc
ss
pop
enter
lret
jne
sar
adc
scas
sbb
adc
lods
int
into
fidivrs
insb
shr
dec
ja
push
or
adc
push
leave
pop
xchg
sahf
adc
or
and
rolb
into
aam
sub
or
add
mov
mov
dec
xor
jae
popa
sbb
add
and
shll
lret
xor
mov
mov
jbe
or
xlat
cld
mov
push
pushf
imul
add
push
and
addr16
out
cmp
cmp
pop
mov
arpl
sub
cmpl
add
xor
push
cmc
fdiv
jge
sahf
pop
pop
and
jnp
push
lods
jo
jo
test
push
lahf
inc
aaa
popf
movsl
js
add
push
push
in
mov
call
push
fists
sub
mov
insb
rcrb
sahf
scas
into
jbe
adc
sbb
xchg
push
pop
hlt
xchg
or
push
add
shlb
clc
fadds
adc
jmp
shrl
stos
cmp
xlat
je
jmp
sub
stos
sbb
mov
or
pop
push
adc
das
call
stos
sarl
aad
lea
cmp
gs
cmpsl
mov
dec
scas
nop
push
mov
xchg
mov
jne
sub
outsl
dec
jo
cmovnp
leave
loope
cltd
jnp
pop
insb
ss
xchg
fwait
push
leave
mov
inc
adc
mov
sbb
icebp
inc
cmp
insl
pushf
lahf
xchg
dec
scas
andl
data16
jecxz
mov
xchg
xchg
and
nop
test
lods
icebp
inc
cmp
add
test
insb
pop
shll
shll
fdivrs
rorb
aam
xlat
and
jno
fisttpll
jmp
clc
repz
pop
call
int
inc
push
into
jnp
add
ja
sbb
pop
mov
cmp
xor
out
popl
jb
out
jecxz
mov
outsb
inc
das
inc
xor
xchg
daa
or
xlat
lock
into
add
xchg
out
cmp
and
push
inc
sbb
xchg
outsl
addl
xchg
mov
and
insl
inc
sub
add
fcompl
push
lds
js
xchg
xor
movsl
pop
jne
insb
ret
jnp
pop
aam
jp
clc
pop
mov
lret
xchg
iret
insb
shr
rcll
push
mov
or
andb
out
out
mov
mov
jmp
in
sbb
movsl
mov
mov
jmp
jl
mov
mov
sub
out
pop
sbb
jmp
pop
push
in
neg
jmp
sub
std
stc
ret
mov
sub
lret
mov
cs
jns
outsl
inc
jae
call
lcall
xchg
xchg
mov
xchg
imul
adc
inc
nop
int3
mov
cmp
mov
aam
icebp
lea
mov
xchg
stos
mov
rorb
mov
dec
xrelease
popf
and
or
jle
and
mov
jl
cmc
xor
xchg
mov
leave
pop
cmpsb
cmp
push
int3
lds
mov
and
mov
aaa
scas
cs
push
or
push
lret
imul
rcrb
out
pushl
hlt
outsl
xor
pop
inc
rcrb
pop
enter
daa
dec
test
xchg
xchg
mov
pop
push
hlt
inc
xchg
sbb
scas
push
scas
out
mov
cmpb
sahf
jle
shll
adc
int3
push
sahf
jbe
aam
mov
scas
lahf
jne
inc
mov
sbb
loopne
repz
leave
aad
ret
or
test
int
inc
push
cmp
xor
cmp
into
or
pop
out
imul
mov
icebp
mov
shrb
mov
inc
nop
test
push
mov
mov
and
sub
mov
sti
and
and
out
xchg
sub
ss
mov
lret
stc
and
inc
and
hlt
inc
fnstsw
xchg
es
adc
iret
sbb
mov
js
push
lret
add
or
jg
out
mov
add
flds
pop
mov
sahf
loop
mov
inc
enter
popf
out
sbb
and
shlb
add
lods
dec
sub
dec
imul
adc
push
enter
jne
or
cmpl
sub
rcr
ljmp
sbb
jmp
fidivrl
psubusb
dec
scas
jle
sar
fcompl
fwait
add
ror
sbb
test
dec
sub
orl
lock
fstpt
inc
fcoms
xchg
fs
fwait
cli
lock
ljmp
and
inc
lahf
jbe
hlt
xchg
outsb
js
jle
push
andl
call
or
push
adc
fisubs
ja
pushl
adc
sbb
in
cmpsl
aaa
pop
cs
scas
add
test
sarb
sbb
icebp
and
mov
sub
into
xchg
insb
pop
xchg
push
lret
nop
cmp
sarb
std
sub
in
pop
dec
es
addb
sbb
or
jecxz
fwait
mov
mov
dec
iret
aad
sbb
add
jle
pop
dec
add
cmp
in
out
pop
mov
lock
or
or
loop
jle
pushf
cmpsb
dec
cmp
jae
rorl
pop
ja
mov
cmp
or
popa
mov
inc
jge
sub
push
enter
js
jle
push
or
mov
shrl
dec
das
hlt
repz
cld
mov
lcall
inc
xchg
sbb
int3
frstor
dec
mov
push
lods
mov
cmp
ror
aam
inc
outsl
or
jecxz
insl
adc
insl
aam
and
jge
jl
out
rorb
adc
repnz
in
ss
scas
mov
ss
add
in
dec
sub
xchg
mov
cwtl
dec
rsqrtps
loope
gs
das
and
fiadds
cs
sbb
out
mov
inc
sub
mov
out
shlb
adc
or
sub
in
ja
jno
xchg
in
xchg
lret
add
clc
ficompl
lcall
cwtl
or
insb
xchg
sbb
insl
dec
mov
shll
sub
push
push
int3
mov
hlt
push
mov
xor
jns
xchg
add
lods
das
or
lock
mov
jb
data16
xchg
fcompl
push
mov
sbb
sti
test
iret
cltd
std
mov
das
dec
pop
cmp
rclb
inc
dec
mov
inc
addl
mov
jno
fwait
pusha
pop
push
dec
mov
lods
icebp
orb
add
cmpsl
lahf
cli
int3
dec
bound
movsb
scas
mov
jmp
and
test
cli
mov
mov
fsubrs
aaa
jge
movsl
xchg
mov
les
in
jl
cmp
cmp
leave
xchg
loopne
inc
and
ror
fiadds
jmp
mov
sbb
adc
cmpb
fmull
iret
mov
negb
sar
lea
sbb
in
ds
jmp
mov
rcl
stc
or
ret
lds
repz
mov
mov
scas
pop
lds
xor
adc
cmpsb
or
jns
cli
stc
test
add
xchg
inc
sbb
dec
inc
daa
cmp
and
sbb
cmp
mov
in
aad
inc
cltd
test
jae
ljmp
in
lods
int3
fmull
arpl
mov
lahf
xchg
ret
sbbl
dec
jl
mov
das
jge
int
add
cld
push
mov
push
pop
movsl
mov
test
sbb
sti
stos
xchg
xor
add
daa
mov
xchg
and
or
movsl
jne
push
pop
loopne
dec
mov
cltd
test
dec
xchg
popf
orl
mov
jmp
imulb
mov
repz
dec
data16
jb
cmp
stos
mov
and
adc
xchg
in
cmp
hlt
les
fiadds
lea
mov
xor
hlt
icebp
enter
fldcw
mov
xor
mov
add
pop
inc
clc
andb
ja
mov
mov
adc
iret
test
loope
or
xor
idivb
dec
scas
inc
fldcw
sbb
andb
inc
dec
and
test
cwtl
dec
pop
cmp
lahf
fbld
pop
dec
fdivs
jne
outsb
cmc
dec
cmpsl
lods
movsb
add
sbb
xlat
push
jge
aam
dec
loope
adc
mov
jns
mov
sbb
xchg
aas
jl
add
dec
xchg
mov
inc
mov
lods
adc
adc
xchg
aam
cmp
ja
out
gs
sub
jp
adc
in
push
scas
dec
sti
add
push
insl
fdivrs
nop
sub
adc
mov
pop
ss
bound
ret
pop
pop
out
ret
mov
pop
or
out
xchg
dec
pop
adc
call
sti
pop
mov
in
or
fldt
push
lcall
mov
test
mov
ret
into
and
fcoml
std
adc
mov
push
pushf
mov
ret
dec
add
pop
cmp
insl
mov
push
xchg
notb
push
jns
loopne
fisubrl
aam
pop
out
adc
cmp
fiadds
mov
fwait
enter
and
sti
pop
cmp
fildl
pop
sbb
jo
jnp
ret
and
sub
popa
pop
and
fstps
test
lock
push
nop
dec
dec
insb
subb
out
ss
jnp
sbb
ljmp
movsb
xor
xor
mov
test
jmp
ja
push
fcompl
cmc
push
dec
nop
add
jae
lret
jecxz
adc
mov
xor
mov
negl
lret
loopne
std
and
inc
adc
dec
xchg
iret
enter
and
sbb
dec
test
incl
sbb
fbstp
ds
movsl
in
nop
mov
cmp
inc
jae
cli
sub
std
pop
cwtl
shll
or
lds
inc
mov
cmpsl
add
arpl
push
jae
pop
and
sub
fmuls
mov
xchg
loop
jae
inc
pop
jo
cmc
int3
or
lock
leave
std
lds
dec
dec
dec
ja
icebp
aad
sbb
dec
fmuls
cwtl
adc
dec
jmp
out
push
in
mov
sbb
sub
in
adc
pop
inc
loope
mov
nop
mov
adc
xchg
test
sub
push
test
mov
or
jecxz
cltd
xchg
dec
and
adc
pushf
inc
push
cli
xchg
dec
xor
xor
mov
pop
jp
mov
add
or
fcoms
subl
int
jg
cmp
dec
repz
sub
ret
and
xor
pop
or
adc
jno
mov
imul
adc
sub
lret
mov
add
add
dec
ret
push
ret
jl
add
or
jg
pop
es
mov
push
push
ljmp
mov
lds
adc
xchg
xchg
aas
sahf
subb
ss
mov
mov
outsb
leave
mov
or
inc
and
adc
sbb
out
add
push
cmp
inc
std
pop
sbb
mov
sahf
mov
pop
sub
sub
mov
push
loop
xor
dec
adc
or
ret
orps
stos
shll
inc
jecxz
ficoms
ljmp
ficoml
jae
flds
push
cmpb
or
adc
lods
dec
sbb
jmp
xchg
xor
inc
or
xchg
xor
leave
clc
pushf
cmp
xchg
inc
jnp
insb
in
es
imull
cltd
cmp
outsb
jne
in
das
and
ja
cwtl
pop
xchg
lahf
xchg
hlt
mov
or
sbb
out
jbe
ret
or
pop
xchg
mov
jge
cld
adc
push
dec
xchg
add
pusha
cmp
popa
xor
lcall
cmc
sub
sarl
dec
cmc
lahf
pusha
test
jmp
mov
fstl
shlb
pop
xchg
insb
stc
ror
mov
bound
xlat
sub
push
add
je
jns
test
movsb
push
push
jbe
adc
jl
push
orl
das
loop
std
lcall
fidivrl
enter
xor
lret
mov
adcb
jnp
orl
sub
mov
jo
loope
fs
or
callw
pushf
out
outsl
cmp
shl
mov
jmp
inc
fxch
out
cmp
and
push
ja
scas
out
fisubrl
aam
cmpsb
data16
mov
lcall
adc
pop
jmp
mov
rcll
les
xor
cli
cs
ljmp
aaa
clc
mov
add
lret
sub
fsts
mov
testl
movsb
pop
or
push
jmp
mov
aaa
xlat
clc
xor
cmp
dec
js
into
jnp
cmc
cmp
sbb
push
mov
cmc
jle,pn
add
xchg
fisubrl
and
cmp
or
cmp
je
js
adc
outsl
subl
sbb
out
xchg
lret
loop
dec
icebp
ret
mov
sub
call
out
outsb
jmp
sub
dec
mov
out
cld
pop
in
loop
xor
push
mov
xor
mov
jg
cltd
add
and
rorb
iret
lods
adc
lods
out
and
outsb
hlt
pusha
inc
jmp
pop
jnp
call
ss
pushf
orb
repz
sbb
enter
loope
jo
cmp
xor
inc
pop
subb
js
push
sbb
cmp
insl
inc
pop
fildl
push
push
inc
inc
fldenv
jo
or
loope
sub
loopne
push
fnsave
stos
adc
insl
mov
jnp
xor
mov
xchg
ret
loope
adc
cmp
cmpsl
inc
sub
mov
adcb
add
push
in
imul
jne,pn
lock
cmc
jecxz
mov
stos
xchg
push
pop
adc
jecxz
popf
repz
jle
imul
cmc
lret
stos
stos
adc
dec
xor
icebp
lret
leave
dec
push
gs
pop
mov
pop
aad
std
cld
dec
ja
xchg
sub
ret
jbe
push
stc
mov
loope
gs
js
jns
mov
sub
sbb
mov
push
test
mov
lret
je
scas
xchg
adc
rcll
es
xchg
and
out
lock
scas
and
sarb
ret
imul
leave
xor
mov
push
push
pushf
scas
scas
push
repz
jl
movsb
sti
outsb
adc
or
xor
mov
imul
cmp
push
inc
adc
inc
sub
fwait
ja
jmp
fisttps
xchg
in
bound
scas
cli
add
fildl
int
sbb
fsubr
imul
rcr
inc
mov
or
adc
mov
inc
testb
pop
aam
push
out
je
or
movsb
add
mov
fstps
scas
gs
mov
pushf
push
or
inc
mov
push
into
push
add
das
cltd
test
je
loop
in
subb
xchg
stc
cmp
pop
xchg
mov
test
in
jo
incb
and
scas
repz
pop
push
cmp
ja
cld
mov
jb
mov
lret
adc
daa
leave
adc
adc
sub
sub
mov
xor
jmp
outsl
cltd
les
stc
int
cmp
dec
iret
lea
add
xor
scas
or
jne
fdivrs
add
pop
insl
sub
fwait
std
insb
pop
dec
inc
stc
std
in
aas
sti
lcall
jecxz
mov
enter
mov
pop
fbld
jecxz
push
mov
dec
mov
mov
out
push
inc
pop
mov
mov
jbe
pop
and
insb
test
mov
sub
or
ret
ret
repz
shl
adc
sarb
adcb
jg
testl
or
dec
pop
test
icebp
mov
add
shlb
inc
in
and
daa
fadds
fs
xor
les
or
xor
testb
dec
sub
add
sbb
jp
xor
jo
negb
and
xor
rorl
jb
cwtl
pusha
push
or
mov
pop
pop
mov
adc
decl
movsb
mov
test
fstpt
or
into
xchg
jp
and
dec
js
addr16
pop
adc
fmuls
andl
xor
add
shrb
movsb
daa
inc
jo
mov
mov
sarl
insb
mov
and
sbb
jns
pop
lcall
popa
mov
test
mov
cmp
push
lods
sbb
hlt
push
pop
out
push
lods
jns
xor
loop
or
jno
jae
mov
pop
add
sahf
sbb
xchg
inc
dec
lods
aaa
shrb
inc
in
sti
arpl
orl
cmpl
jecxz
stos
nop
rclb
mov
fdivr
lcall
in
int
ljmp
cmpsb
test
or
push
add
pop
jge
xor
mov
insb
or
loop
dec
jge
cmpxchg
add
mov
xchg
daa
adc
inc
sahf
mov
and
negl
push
aas
ds
ljmp
dec
or
mov
add
dec
sub
lods
cmp
mov
jbe
std
push
popf
xchg
stos
movsb
mov
xchg
shll
or
sbb
repnz
pop
call
and
jbe
add
mov
stc
cmc
in
xor
dec
shl
std
aam
pop
xchg
sbbl
or
pop
mov
arpl
insb
mov
pop
add
dec
fdivs
bound
fwait
push
push
push
inc
repnz
xor
fstl
adc
ss
cmp
sbb
shrb
jb
push
push
or
mov
rcrb
xorl
mov
pop
fwait
inc
xchg
cmp
sbbl
push
mov
jno
test
jg
fiaddl
sub
comiss
ret
or
push
lea
lcall
lds
pop
bnd
movsb
xchg
test
sub
fnstenv
pushl
insb
push
xchg
insb
test
sbb
iret
pop
adc
or
fs
pushf
add
and
mov
adc
mov
mov
js
mov
sub
cwtl
cmc
sub
lahf
lret
ret
jbe
cwtl
inc
aas
and
mov
dec
imulb
loopne
scas
add
js
inc
and
mov
jmp
es
xchg
sbbb
jl
test
outsl
sbb
xchg
push
lcall
xor
lods
aaa
sub
push
mov
mov
cmp
mov
popf
adc
cmpsb
mov
mov
mov
mov
dec
test
add
shrl
sbb
push
mov
nop
lock
out
das
pop
push
daa
mov
pop
cmc
das
push
xor
insl
lods
add
adc
dec
into
lret
dec
enter
in
aam
dec
pusha
testl
adc
mov
sub
add
jbe
dec
push
clc
stos
mov
imul
sbb
sub
add
lret
repnz
lahf
mov
outsb
cmp
icebp
ds
repz
mov
jae
bound
xor
jle
roll
das
push
dec
xchg
mov
es
mov
xor
call
xchg
xor
lahf
xchg
pop
test
push
popf
mov
es
pop
or
mov
lea
xchg
mov
xchg
xor
jno
push
sti
adc
dec
mov
and
repnz
mov
insl
push
xor
andl
addr16
jge
imul
movsb
int
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
xor
ds
addl
les
push
adc
shl
cltd
in
leave
xchg
sbb
inc
jne
add
push
sbb
mull
mov
shr
icebp
mov
outsb
xchg
jmp
mov
ficoml
adc
cmp
sbb
cltd
repnz
je
mov
std
hlt
lret
push
mov
out
daa
push
cmc
sbb
cs
popa
pop
mov
enter
pop
push
mov
insb
call
jo
pop
push
lret
addb
stos
dec
les
mov
dec
cmp
jno
lahf
ljmp
add
adc
and
or
sbb
mov
leave
scas
aad
or
mov
xchg
icebp
jecxz
aad
sbb
add
pusha
pop
xchg
rclb
roll
push
std
scas
adc
scas
insb
sahf
adc
add
inc
fisttpl
aam
cmp
dec
sub
rclb
insb
arpl
dec
loop
cltd
es
stos
movsb
adc
insb
movsl
pop
scas
negb
jg
hlt
daa
and
test
cmpsb
jo
pop
movsb
inc
imul
push
sub
mov
sbb
insb
mov
sbb
add
mov
xor
pop
mov
push
aas
push
stos
mov
sbb
push
cmc
push
loope
inc
lahf
inc
push
xchg
mov
push
push
pop
pop
insl
pushf
push
mov
mov
cmc
sti
cmp
mov
call
stos
add
xchg
inc
std
cmpsl
adc
mov
and
das
push
addr16
cwtl
push
push
mov
mov
sahf
add
inc
lock
sahf
push
add
cs
mov
add
dec
add
jo
lea
jmp
cld
arpl
iret
xorl
push
jg
cmp
cmp
mov
leave
gs
out
je
rol
scas
leave
cmp
mov
scas
stos
add
push
test
mov
or
in
cmp
stos
inc
jno
mov
adc
ret
push
lods
mov
fiaddl
in
add
adc
loop
into
mov
fnstsw
les
cmpsb
sbb
cwtl
pop
jg
fcmovne
add
push
das
fsubp
dec
sbbl
mov
das
arpl
jmp
aad
cs
nop
or
or
leave
xlat
xor
enter
pop
sbb
insb
or
mov
into
push
push
fptan
aad
push
xor
pop
les
int
cmp
mov
or
popf
daa
pusha
adc
or
les
sbb
fnstenv
jns
mov
shll
shlb
adc
adc
dec
pop
add
shl
rclb
inc
adc
dec
and
sarl
mov
jb
les
lcall
test
adcb
aam
es
push
mov
sbb
jmp
add
mov
push
mov
lcall
cmpsb
ljmp
jl
sbb
incb
jmp
adc
add
movsb
pop
cmp
pop
jge
pop
push
cli
xchg
popf
fimull
xchg
into
push
scas
out
in
or
mov
sub
push
stc
pop
xchg
aad
adc
inc
mov
jno
or
cmc
or
and
mov
jns
dec
stos
add
lahf
and
sbb
test
cmp
adc
lcall
sti
push
dec
adc
mov
cmp
push
sub
push
push
sbb
dec
popf
test
pop
inc
pop
sbb
add
stos
adc
mov
mov
repz
fs
xchg
daa
xor
lock
inc
or
jo
sbb
aam
loope
or
shr
test
cmp
fwait
or
push
enter
aaa
inc
bound
lret
sub
sub
and
dec
ja
jnp
popa
das
mov
cli
inc
lret
cmp
stos
fldenv
sti
cld
xchg
and
popa
cmp
loop
xor
imulb
pop
stos
test
insl
or
in
pushl
mov
or
lods
fsubp
rcrb
and
lock
mov
jno
roll
pop
or
sti
inc
cs
jno
pop
sub
mov
insl
repnz
into
add
testb
stc
ret
hlt
fcomp
xchg
push
inc
xchg
mov
cmc
shl
push
xor
es
out
add
mov
pop
ret
add
cmp
scas
popl
dec
pop
pop
jno
cmpsl
jae
dec
push
insl
pop
iret
and
dec
call
push
movsb
push
scas
pop
mov
sti
inc
fiaddl
test
mov
xchg
inc
add
push
lea
push
mov
xchg
mov
push
loope
lock
mov
jp
aad
jae
mov
das
pop
inc
and
add
dec
ds
ret
jne
xchg
sbb
in
xchg
xorl
jns
mov
test
inc
cmp
vpmulhw
sub
sbb
sahf
scas
adc
pextrw
not
dec
roll
push
push
cmpsb
inc
sbb
jge
pop
pop
jb
fidivl
jmp
imul
jo
add
insb
xchg
adc
sbb
imulb
dec
lock
repz
mov
inc
in
xor
inc
sub
jb
icebp
daa
rorl
mov
inc
mov
mov
add
and
clc
int3
add
and
dec
xchg
das
repz
dec
dec
add
aam
movsb
and
xchg
divl
cmp
cmpsl
cmpsl
sub
mov
push
filds
dec
push
cmpsb
dec
mov
inc
or
movsl
es
push
jl
xchg
add
js
add
mov
js
mov
push
sbb
dec
sub
ja
rol
popf
mov
out
enter
xchg
mov
bound
js
mov
cld
fwait
dec
test
sub
fcmovnbe
ret
test
int
not
cli
lea
lahf
mov
mov
adc
scas
loope
mov
inc
loop
testb
xchg
test
les
ret
fimull
inc
sub
cmp
outsb
xchg
inc
jmp
pop
pop
rorl
xchg
lods
hlt
xchg
cmp
inc
mov
outsl
mov
insb
insl
push
xlat
cmpb
outsb
pop
or
dec
mov
imul
xor
jl
cli
jmp
sbb
push
sbb
rorb
sti
pop
xchg
and
or
out
in
mov
mov
leave
jnp
pop
enter
mov
add
push
jb
cmp
sbb
adc
jl
cli
outsl
in
push
add
pop
pop
sbb
rorl
fscale
push
or
lods
xor
xlat
mov
int
mov
add
xchg
dec
out
pop
ret
jge
inc
add
pusha
pop
movsb
std
js
aam
insl
lea
xor
arpl
push
outsb
call
bnd
inc
adc
cld
cmp
in
adc
ljmp
into
sub
and
in
dec
cmp
xor
mov
sbb
js
and
lock
inc
inc
sub
and
sbbb
xchg
cmp
sbb
sbbl
add
ret
call
jle
sbb
cltd
jecxz
popf
lret
sbb
lods
fisubrs
into
ljmp
mov
mov
sti
xchg
popa
add
test
arpl
enter
jb
sub
add
andl
imul
jmp
idiv
fdivrl
les
jecxz
push
jae
jb
cs
mov
jge
xor
loop
mov
or
jmp
aam
mov
adc
mov
negl
je,pn
rol
ss
orb
sub
mov
sahf
scas
xor
sbb
and
and
mov
sti
jle
push
pop
jecxz
and
sbb
fidivl
fwait
mov
leave
stos
dec
scas
shrb
testl
lahf
mov
test
fidivrs
xchg
pushf
mov
jge
jns
shll
dec
pop
clc
out
lock
mov
bsr
xor
push
xchg
mov
hlt
jo
mov
dec
sahf
popa
dec
inc
mov
xor
or
loopne
es
add
jp
pop
repz
cmpsb
xchg
push
jae
jecxz
bound
das
pop
mov
dec
dec
adc
inc
jp
mov
ficoml
xchg
xchg
andl
jne
xchg
loope
shll
and
mov
mov
or
mov
cmp
push
adc
ret
xor
sbb
data16
data16
scas
mov
pusha
leave
inc
fsubs
and
mov
cmp
dec
repz
sbb
inc
cmp
xchg
subl
clc
mov
scas
test
mov
cmp
in
jl
test
cmpsb
dec
and
int3
imul
cs
repnz
call
push
xchg
xor
cmpb
adc
sbb
and
test
out
jge
arpl
dec
nop
pop
xor
or
sbb
mov
inc
ja
je
pop
mov
ljmp
test
sub
sub
jns
xchg
adc
jno
xor
insl
sti
push
lcall
fwait
sbb
mov
aad
std
or
je
mov
das
jne
jg
ret
inc
dec
xor
adc
push
imul
mov
xor
jp
xchg
aaa
push
or
lahf
pop
xchg
andb
out
adc
lods
mov
arpl
xor
ss
cmp
add
jecxz
xor
roll
fidivrs
mov
roll
fisttpll
cmp
push
push
jnp
out
fucomi
push
adc
mov
mov
push
aad
ja
adc
xchg
mov
je
cmpsl
xchg
cmp
enter
pop
cltd
dec
sbb
popf
mov
sbb
push
jae
pop
adc
xchg
inc
adc
xchg
shll
mov
movl
lret
mov
xchg
cmc
loope
movsl
iret
or
and
dec
orl
das
mov
repnz
xor
hlt
lods
fwait
int3
adc
adc
arpl
and
aas
fsts
lret
enter
cwtl
cwtl
lret
hlt
inc
icebp
mov
ds
jmp
jmp
jno
push
sbb
adc
mov
je
lcall
xchg
mov
leave
dec
dec
fmul
je
scas
test
pop
cmp
outsb
jo
rorl
push
add
cmpsl
sti
rep
pop
in
jl
add
push
jo
adc
lcall
cmp
in
sub
push
jbe
xor
aad
mov
xor
lods
iret
gs
xchg
loopne
inc
xor
xchg
mov
mov
dec
stos
into
and
out
and
fstl
xor
addr16
cltd
xor
lods
loop
enter
lret
cwtl
in
sbb
je
and
jmp
cmp
sbbb
pop
add
inc
push
cmp
out
adc
push
mov
stc
notl
sub
xchg
inc
mov
xchg
lcall
sti
test
in
shll
mov
aad
jecxz
fists
incb
int3
movsl
aaa
fs
push
mov
inc
outsb
adcb
pop
add
jo
pop
mov
inc
in
scas
dec
inc
jo
fdivrs
mov
sub
adc
cmc
xor
mov
scas
or
sbb
mov
fwait
push
or
test
stos
mov
xchg
fimull
mov
inc
pop
test
lcall
inc
jo
aas
lret
es
jmp
lock
icebp
out
adc
and
add
push
in
ret
lods
pop
ret
jl
addr16
xor
sbb
mov
jle
inc
lock
scas
mov
in
frstor
add
test
int
lcall
mov
test
gs
sub
xor
xchg
rcrb
test
inc
sbb
testl
in
ljmp
xchg
cli
jle
shr
test
lea
push
mov
pop
adc
mov
xor
lods
movsl
sub
xchg
test
push
mov
std
in
aam
pop
fsub
inc
xor
lret
addl
adc
pop
into
in
repz
fidivs
outsl
cs
pushf
lret
sbbl
in
mov
test
rclb
test
cmp
cmp
and
mov
cli
icebp
jg
xchg
sub
mov
and
push
sbb
in
repz
cld
outsb
call
inc
ljmp
inc
push
or
fcoms
push
cmc
ror
lret
dec
ds
pushf
fidivl
or
scas
jg
inc
ljmp
adc
add
scas
push
mov
repnz
repz
idivb
xor
add
jge
punpcklbw
sub
scas
adc
adcb
jo
test
dec
js
sti
sub
xor
adc
test
imul
cwtl
jecxz
in
mov
pop
inc
push
ja
das
lret
cs
rcrb
push
mov
mov
repz
sbb
sbb
mov
pop
test
jno
add
or
jne
into
faddp
jmp
test
inc
add
and
dec
stc
test
or
and
mov
mov
cs
pop
adc
inc
xchg
ds
out
ss
fmulp
daa
arpl
mov
pop
outsl
jns
xchg
sub
lret
mov
adc
xor
sbb
jae
pop
xchg
mov
sbb
leave
dec
dec
aam
loop
scas
in
fimull
imul
je
dec
dec
lock
in
sbb
jmp
push
push
mov
and
ja
sub
shll
stc
call
add
enter
dec
and
in
lahf
add
adc
xor
cwtl
jecxz
push
pop
out
cmp
mov
inc
rcrl
mov
mov
jecxz
dec
mov
mov
cmpsl
loop
repz
jmp
sub
orb
pop
xchg
xor
pop
or
jo
ret
lret
aas
sub
xor
sti
jbe
push
imul
int3
mov
lds
mov
inc
notb
out
mov
jp
faddp
iret
jle
cmc
dec
cmp
dec
aaa
aam
sbb
inc
jmp
pop
cltd
sti
pop
icebp
adc
cmp
fbstp
fsub
sbb
loop
fs
imul
stos
sub
movl
iret
sbb
negb
lea
push
into
mov
loop
sti
push
xchg
dec
mul
cmp
xchg
jmp
lods
loopne
inc
imul
jmp
nop
sub
sahf
lods
mov
push
out
test
leave
xchg
jmp
pop
icebp
cltd
je
adc
sbb
jae
addr16
repz
xor
push
lds
stc
cwtl
js
pop
cltd
into
movsl
js
jbe
cmpsb
push
mov
inc
xlat
add
fndisi(8087
loop
pushw
andb
cmp
push
andb
adc
ljmp
cmc
mov
push
pop
lea
adc
push
insl
out
movsl
xchg
jo
xor
cmp
sub
adc
je
subb
mov
jb
pop
dec
inc
sub
sub
jg
adc
xchg
cmp
mov
adc
rcll
into
lret
std
scas
sub
repnz
xchg
xor
mov
pop
dec
mov
sarl
jns
xor
fwait
mov
aaa
sbb
push
sbbl
out
cmp
incl
add
xor
fstps
push
aaa
xchg
popf
sbb
jb
add
xorb
incl
push
pop
dec
ficoml
mov
ss
dec
stc
and
imul
push
push
xor
icebp
push
push
iret
bound
or
cmpb
dec
mov
bound
mov
aaa
sub
lock
rcrb
cmp
jg
mov
sub
faddl
and
iret
mov
sub
adc
les
nop
inc
pop
outsl
jns
js
mov
fsub
cwtl
mov
fnsave
jbe
inc
xchg
sarl
push
add
add
je
jno
cmpb
cld
jo
scas
out
pushf
jge,pt
and
cmpsl
mov
dec
mov
in
jl
jmp
stc
gs
decl
mov
lock
arpl
mov
xor
aam
mov
sbb
pop
cmpsb
ja
xchg
sbbl
jmp
mov
mov
mov
jbe
sahf
gs
jecxz
xor
xchg
dec
nop
pop
hlt
cmp
adc
ficompl
mov
xor
jg
gs
repz
sarb
mov
insl
cmpb
sbb
adc
nop
js
test
lea
mov
movb
pop
pop
cwtl
in
orb
lea
cs
lret
inc
and
subl
mov
or
inc
xchg
outsb
test
movsl
or
dec
divb
dec
shrb
repnz
out
repz
dec
scas
je
xor
in
out
xor
outsb
repz
cmp
subps
fs
push
add
push
imull
std
jns
and
inc
push
loope
test
sahf
push
adc
push
ss
jns
jmp
sub
fsubrl
repnz
xlat
sub
test
jns
pop
pop
scas
jmp
adc
gs
xlat
outsl
int3
out
ds
loope
xlat
fs
jne
rcr
mov
dec
sti
sarb
sub
pop
hlt
loope
mov
and
sub
ja
popa
xor
lret
push
fimuls
or
sub
and
sbb
jns
dec
adc
ret
sbb
or
mov
fisttpll
in
out
jle
sarb
into
push
push
imul
xchg
das
or
addl
out
cmpsl
add
lret
add
shlb
mov
cmp
xchg
repnz
mov
cltd
pushf
bound
inc
movsb
mov
aad
cmpsb
cmp
xor
outsb
scas
data16
mov
inc
mov
clc
mov
into
jae
loopne
sbb
loopne
stc
mov
push
push
aad
scas
cli
jmp
jp
add
jecxz
dec
in
dec
jmp
xchg
testb
and
aaa
adc
ret
std
adc
add
call
mov
hlt
mov
hlt
push
stos
sub
or
dec
mov
mov
leave
jns
je
adc
add
mov
jge
testl
js
movsl
xor
aam
push
rol
mov
sarl
mov
or
xchg
stc
push
ret
into
aas
mov
sbb
pop
adc
notb
int3
pop
dec
es
test
dec
pop
and
stc
pop
mov
outsl
cmc
inc
adc
dec
pusha
cmp
mov
mov
sbb
push
push
cmc
arpl
ja
pop
inc
cmp
push
imul
push
in
cmp
xchg
jecxz
jno
addr16
data16
faddl
call
add
stos
test
enter
ja
and
pop
and
int3
jbe
sahf
jno
dec
scas
int
push
outsb
jo
jmp
das
enter
or
and
inc
test
ret
pop
or
fwait
mov
lock
mov
lods
jbe
inc
arpl
es
push
arpl
dec
push
bound
lret
bound
add
nop
es
data16
rorb
cmpsb
jne
push
dec
sbb
sub
or
jne
jno
ret
sub
cli
in
pop
mov
xchg
sbb
add
fs
push
jle
sbb
daa
out
js
jb
inc
shlb
push
insl
inc
inc
sub
mov
push
incl
out
int
jmp
je
pop
aad
fmulp
cmc
sub
outsb
pushl
into
cmpsb
call
imul
push
in
inc
or
and
mov
mov
fcompl
cli
push
insl
cmp
loopne
xchg
cmp
pop
ret
mov
test
aad
int3
cli
inc
push
leave
sarb
xor
sbb
sub
cli
cwtl
dec
lods
xchg
adc
cmpsb
adc
mov
in
adc
sub
xchg
push
ret
add
sahf
and
repz
testl
or
xlat
push
out
cmpsb
sub
hlt
addr16
inc
xor
dec
mov
nop
or
es
dec
mov
push
das
icebp
fimull
ds
popa
inc
lahf
or
loopne
mov
sahf
dec
pop
push
jb
or
into
call
loopne
and
subl
xor
js
cwtl
inc
rclb
xchg
mov
mov
dec
xor
fisttpll
or
dec
inc
mov
xchg
je
repz
int3
jne
rorb
jp
sbb
or
orb
imul
repnz
daa
iret
jge
push
ja
aas
mov
gs
ficomps
lea
in
inc
or
enter
icebp
sbb
sbb
pop
aaa
dec
xor
fwait
cmpb
pushf
lock
je
sub
subb
sbb
xlat
push
rol
pop
adc
repnz
jle
push
mov
dec
adc
pop
mov
fildll
test
pop
aaa
out
loopne
ret
xchg
lret
lds
nop
es
jmp
divb
cmc
sbb
dec
mov
mov
sbb
out
push
pop
stos
pop
ror
mov
mov
mov
push
out
cmpsl
mov
adc
push
js
xchg
jmp
sub
pop
cmp
or
mov
mov
mov
fstl
cmp
clc
jecxz
mov
mov
ret
xor
push
or
test
shrb
dec
std
xor
or
mov
mov
pop
jg
mov
xor
jecxz
popa
add
and
xor
loop
lods
jmp
mov
xchg
mov
fwait
xchg
adc
out
add
adc
je
hlt
lahf
push
cmp
push
mov
and
mov
push
mov
jmp
mov
enter
in
lret
and
push
add
mov
adc
sub
xchg
imul
xor
arpl
adc
idivl
sub
pop
mov
xor
jl
imul
jle
jns
stos
and
pop
mulb
mov
stos
stc
add
sbb
push
loope
mov
icebp
sti
mov
inc
mulb
dec
loope
mov
data16
loope
mov
out
in
js
lret
inc
fwait
pop
jns
js
movsb
mov
jge
inc
lds
or
bound
xchg
out
aad
dec
bound
stos
inc
pop
sbb
push
dec
fnsave
push
stos
jne
addr16
and
jo
jge
push
call
xor
iret
adc
aas
aam
add
pop
std
xchg
mov
xor
out
orb
cmp
add
inc
jnp
mov
jg
push
sub
fdivrl
and
shlb
xchg
out
pushf
mov
or
sbb
outsl
addr16
mov
mov
sub
repnz
mov
inc
sahf
cmp
mov
test
repnz
inc
out
lahf
adc
movsl
xchg
xor
mov
in
mov
mov
into
pop
push
dec
js
inc
idivl
lds
movsl
mov
pop
gs
inc
cli
xchg
in
scas
roll
cmp
fnstcw
mov
xor
adc
icebp
add
inc
xchg
push
push
mov
push
or
call
or
iret
inc
pop
andb
loop
lods
ljmp
push
es
dec
adc
test
insb
push
xchg
xchg
out
fsincos
add
mov
sbb
xchg
sbb
push
aad
aad
imul
fistps
adc
aas
inc
je
incb
push
push
push
into
inc
leave
push
cmpsl
jl
loop
arpl
int3
and
or
test
add
sbb
cli
arpl
xchg
dec
mov
test
xchg
mov
pop
sbb
mov
sarb
cmp
fwait
bound
xchg
stc
call
or
cmp
filds
dec
adc
cmp
or
xor
lahf
or
orl
add
inc
gs
xchg
movsl
test
outsb
mov
xchg
in
xchg
subb
cmpsl
lahf
test
push
mov
lcall
cmp
or
mov
fwait
jno
std
sub
push
int3
push
mov
aas
jnp
cli
adc
jle
lcall
xor
mov
aaa
rcrb
add
leave
jl
inc
in
lods
ljmp
addr16
sub
dec
fyl2x
loop
cmpb
inc
adc
mov
jmp
adc
sahf
cmp
jo
push
gs
clc
xchg
mov
in
inc
inc
cs
pop
leave
mulb
dec
push
pusha
xor
push
mov
lahf
bound
jns
and
aaa
sub
adc
dec
outsl
dec
enter
dec
fsub
and
addb
fiadds
mov
cwtl
jae
aam
mov
pop
fucom
adc
push
addr16
jbe
push
hlt
adc
xor
rorb
adc
loope
insl
loope
jnp
daa
cmp
mov
rcrb
in
push
add
adc
test
and
shlb
xadd
adc
pop
lret
out
jae
sbb
dec
loopne
je
out
mov
jmp
incb
mov
mov
sbb
dec
sub
jl
push
ds
mov
int
adc
insb
mov
dec
movsb
divb
push
aam
dec
push
inc
das
mov
cmp
mov
inc
stos
aaa
and
and
std
mov
push
add
sub
pusha
jge
loope
shl
inc
cli
cmp
or
inc
das
sbb
pop
sbb
inc
inc
test
out
jl
shl
mov
arpl
pop
aas
sub
js
mov
idivl
clc
or
add
enter
push
add
push
inc
push
and
stos
rcrl
mov
cmpsl
rolb
inc
pop
cltd
dec
add
lcall
loop
cwtl
adc
mov
outsl
pop
mov
xor
dec
jl
adc
jo
pop
fmull
sub
lahf
ss
loopne
push
mov
or
jnp
imul
fwait
dec
pop
movsl
adc
mov
mov
mov
xor
dec
push
icebp
and
jnp
je
mov
mov
cltd
pushf
fbstp
in
fldl
mov
and
in
test
faddl
gs
fs
repnz
ljmp
pushf
adcb
pop
pop
sub
dec
outsb
out
mov
iret
ret
adc
xchg
adc
imul
add
ljmp
mov
in
subl
pop
mov
adc
lret
jns
cmp
scas
call
mov
imul
pop
jp
fdiv
sbb
pop
jle
in
xchg
jecxz
in
xchg
xchg
arpl
in
lahf
inc
pop
add
sub
cmp
cli
test
mov
nop
dec
mov
sub
fidivrl
cmp
mov
lods
adc
out
jne
cmp
mov
in
lcall
push
adc
sar
in
xor
and
movsb
inc
inc
dec
imul
out
lret
sbb
sub
pop
sbb
cld
inc
inc
mov
imul
imul
ja
dec
out
fs
mov
pop
les
xorb
arpl
lahf
rclb
mov
aaa
cmpsb
mov
push
cmp
push
fdivp
cld
and
add
lds
mov
gs
fimull
into
push
mov
lds
nop
movsb
movsb
mov
into
fimull
pop
icebp
rol
push
push
mov
cmp
adc
clc
in
in
push
mov
lahf
xchg
popf
addr16
fsubp
mov
scas
stos
aaa
test
adc
xchg
mov
sahf
pop
and
addr16
pop
rcr
dec
inc
data16
les
mov
ucomiss
fbld
mov
mov
nop
xor
xlat
mov
push
outsb
cmp
loop
inc
xchg
cmpsb
adc
icebp
in
push
xchg
inc
sbbl
xchg
cmp
popa
inc
insb
and
imul
test
add
cmp
scas
xchg
insb
xchg
or
adc
adc
inc
out
arpl
sbb
mov
inc
inc
and
xlat
cmp
imul
ret
std
popf
jmp
or
push
jl
lods
sbb
iret
dec
insl
xchg
jo
dec
xor
aam
pop
lret
cmpsl
lods
call
sub
jnp
fwait
and
mov
sub
frstor
and
mov
mov
into
repz
cmp
dec
fidivl
adc
shll
daa
loop
divl
mov
push
mov
xchg
out
js
push
mov
fisubrs
fnstsw
int
mov
sub
adc
andb
cmp
xchg
add
sar
mov
lret
pcmpgtb
stos
adc
gs
sbb
ljmp
mov
pop
mov
imulb
fsts
mov
clc
les
pop
inc
mov
push
fisttpl
jno
dec
adc
pop
adc
mov
into
jl
hlt
test
xor
aad
xchg
movsb
sub
or
loope
testb
lcall
cli
insb
roll
sti
inc
adc
test
pusha
fwait
sahf
lea
adc
arpl
inc
or
cs
xor
or
mov
and
dec
jl
push
aas
stc
je
stos
inc
sbb
pusha
mov
aas
mov
mov
and
repz
lods
inc
push
lods
addr16
bound
dec
fisubs
dec
dec
pop
imul
inc
flds
inc
add
lea
or
ret
lds
mov
jp
pop
mov
dec
lret
aaa
dec
or
xor
lock
xchg
outsb
adc
vxorps
cs
add
xchg
dec
popl
push
dec
fs
and
add
cmp
sbb
cmp
sub
cwtl
jae
fsubrl
fmuls
sbb
cs
add
cli
xchg
mov
dec
adc
sbb
push
dec
dec
dec
mov
push
push
add
xchg
pop
std
push
div
xchg
jg
pop
aaa
outsb
gs
stc
out
push
mov
lahf
lods
jmp
jg
xorl
and
cmp
rclb
int3
out
pop
sbb
mov
pusha
cltd
inc
and
xchg
insb
xchg
xchg
aam
add
fidivs
jno
stos
out
enter
xchg
jbe
in
push
lret
mov
pop
arpl
jge
ficoml
xlat
leave
mov
int
jns
nop
lcall
and
aaa
fildl
call
sub
mov
iret
mov
out
inc
xchg
bound
cltd
lahf
loope
xchg
xchg
movsl
clc
add
arpl
out
int3
mov
dec
cmc
cs
shl
hlt
jae
fiaddl
arpl
cmc
cwtl
lods
jp
into
xchg
mov
popa
stos
jle
ja
outsb
pop
mov
imul
xchg
or
sub
ja
insb
and
lods
movsb
clc
arpl
sub
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
divb
push
scas
cli
mov
sbbl
and
es
subb
sub
insl
push
rcl
inc
mov
dec
xchg
popa
cltd
lods
push
lds
pop
test
xchg
mov
jge
mov
mov
insb
sbb
insb
jns
inc
xor
cmp
cmp
rcll
add
jbe
xor
add
sbb
pop
push
std
cmpsl
push
and
lock
jp
inc
rcr
and
xor
xchg
call
int3
ds
inc
loop
push
add
add
int3
dec
add
movsb
fldl2e
out
or
insl
xchg
cs
out
imul
xchg
pop
idiv
jb
aas
in
pop
inc
rep
bound
cmp
rol
insl
addr16
decb
jne
pusha
inc
mov
xchg
cmpsb
into
jo
pushf
jle
insb
inc
mov
dec
negl
scas
push
js
scas
daa
leave
inc
dec
sbb
popa
cs
addr16
fwait
mov
test
lea
in
fidivrs
jns
push
jecxz
pop
xchg
nop
jns
out
fucomi
jno
push
xor
and
push
stos
aam
push
sbb
cmp
cmp
adc
sub
daa
lret
cmp
mulb
je
sahf
xchg
stos
jge
inc
leave
fcmovb
add
push
jp
adc
mov
fsubrs
lcall
aad
cmp
xchg
popa
dec
cmp
cmc
aaa
ret
push
fiadds
decl
cmp
sub
pop
or
and
shlb
inc
add
imul
out
ds
ret
arpl
out
mov
mov
cmp
mov
repz
sarb
lret
pusha
stc
jl
sbb
stos
mov
mov
lea
test
jle
mov
es
test
mov
das
insl
xor
inc
sub
jecxz
mov
stos
lock
lock
add
sbb
ljmp
mov
push
aam
test
mov
inc
push
pop
aas
push
jg
aad
lcall
fxch
stos
jl
push
hlt
lahf
lods
leave
push
inc
jl
test
cmp
movsl
aaa
jo
jecxz
mov
mov
pusha
insl
jle
stos
sbb
pop
lds
jno
inc
in
jmp
or
jmp
test
lea
xor
mov
add
mov
inc
dec
jecxz
out
jg
push
or
pop
mov
sbb
test
inc
and
cmp
lret
push
movzwl
and
cmc
push
stos
sahf
mov
rcl
and
cmpsl
jmp
push
in
sub
xorb
xchg
jmp
lock
and
or
test
movsl
and
jne
jo
in
fiadds
pushf
jnp
scas
add
xchg
scas
sbb
adc
pop
out
inc
inc
outsl
shr
std
dec
xchg
arpl
shll
outsl
outsb
mov
mov
and
or
icebp
adcl
imulb
outsl
aaa
stos
test
cmpsl
repz
arpl
out
repnz
dec
mov
scas
pop
sub
ja
dec
sbb
shll
pop
subl
icebp
inc
and
je
push
mov
mov
sbb
mov
xchg
data16
stc
mov
mov
ret
or
pop
adc
xlat
fnstsw
mov
mov
inc
fidivrl
inc
daa
or
mov
mov
mov
pop
lahf
rcrl
push
push
aas
repz
test
into
cmp
cld
test
and
stos
out
mov
and
xchg
testl
mov
pushf
push
shll
push
sub
cmp
push
in
fiadds
mov
aad
cmp
lahf
pop
xchg
xchg
mov
fstpt
mov
enter
and
jno
fcompl
ljmp
pop
mov
inc
insl
lods
mov
jg
cmp
loopne
cmp
mov
repz
into
loope
les
sti
sub
lret
mov
or
mov
inc
jb
das
mov
mov
fsub
sub
pop
lods
inc
lret
dec
sbb
sbb
xchg
or
fs
inc
mov
ffree
push
ja
pop
or
stc
cltd
xchg
clc
lahf
fsubrl
inc
into
jnp
jbe
repz
pop
cmc
cld
push
add
xlat
jg
mov
sti
fldl
and
jnp
mov
mov
nop
mov
mov
add
iret
inc
je
inc
pop
pushf
pop
jns
xchg
lds
adc
dec
rorl
shrb
mov
stc
xchg
lret
inc
shrl
xor
push
jg
inc
cmpsl
pop
dec
test
inc
mull
xor
rclb
lods
ss
mov
icebp
inc
fdivr
shll
and
xchg
sti
and
idivl
shrb
lods
inc
sbb
push
js
dec
test
jg
ja
inc
lea
sbb
int3
mov
jae
mov
push
into
fcompl
mov
xor
push
in
bound
or
push
or
jg
pop
mov
std
loope
in
das
dec
xor
xor
mov
mov
push
pop
pop
lcall
xlat
js
xchg
dec
fsubs
pushw
addr16
inc
xchg
aad
scas
loop
mov
inc
fidivl
call
and
je
push
mov
out
test
fxtract
int3
scas
adc
xchg
in
out
movsl
push
icebp
adc
pushf
in
jle
dec
jge
repnz
cli
ret
mov
or
fs
xchg
add
sbb
je
insl
xchg
dec
clc
lods
ds
inc
jge
or
inc
stos
mov
or
pusha
adc
les
rcrl
sahf
mov
mov
mov
xchg
out
repz
add
imul
dec
pop
loope
cmp
in
imul
jb
es
dec
mov
jb
not
js
dec
push
adc
insl
pop
adc
rolb
add
sbbb
push
test
pusha
iret
jmp
or
insb
sbbb
sub
dec
faddl
movb
or
dec
repz
pop
or
cmp
jmp
pop
testb
test
cmpsl
int
mov
sub
iret
xor
pusha
stos
mov
jl
icebp
dec
jg
mov
call
fadd
mov
mov
repz
or
xor
add
insb
pop
pop
pop
inc
jae
xlat
jno
jns
and
sub
sub
cwtl
pop
adc
jns
addl
aad
adc
xor
das
jg
pop
int3
aad
out
or
dec
jmp
add
sarb
sbb
cld
sti
insb
cmp
ja
imul
mov
test
sub
cmc
adc
xchg
rorb
inc
adc
addl
xchg
mov
insl
test
mov
dec
mov
mov
mov
or
addr16
stos
jnp
sbb
sub
push
push
mov
ljmp
mov
data16
fs
sarb
addb
mov
je
in
add
mov
les
xchg
xchg
dec
stc
negl
mov
fisubs
lahf
or
fs
insl
jnp
lcall
test
dec
dec
into
mov
add
data16
mov
pusha
loopne
jl
sub
popa
sti
or
es
aas
mov
lds
inc
aad
inc
vmovlpd
and
mov
outsb
shl
mov
xor
incb
pushf
jle
stc
test
push
arpl
shrl
xlat
shr
mov
aam
push
outsl
mov
aam
mov
cmp
jb
mov
dec
xchg
inc
lods
in
repnz
adc
pop
jno
add
cmpsb
aad
jmp
sub
test
jp
into
lods
xor
loop
cmpl
mov
outsl
sbb
movsl
lods
imul
inc
repz
cmpsb
pop
scas
add
add
in
jae
pop
aad
mov
ja
mov
test
out
adc
lret
gs
add
fstpl
and
inc
pop
mov
sbb
enter
ljmp
clc
loopne
push
pop
push
dec
adc
dec
call
icebp
or
mov
cs
daa
movl
add
sahf
outsb
stc
sub
rorb
cmp
shr
addr16
out
fidivs
daa
add
or
mov
scas
ds
or
xor
pmulhuw
mov
push
imul
mov
mov
je
mov
idiv
jb
and
cmp
and
fwait
cmc
fstl
jmp
jecxz
cmp
lods
je
pushf
xchg
pop
xor
call
mov
out
xor
lds
sub
xlat
xchg
stos
push
cmpsl
mov
into
push
or
test
xor
ret
push
mov
out
call
push
jle
ja
js
lock
test
pop
loopne
mov
pushl
andb
add
pop
es
dec
ljmp
dec
and
scas
int3
jmp
aam
mov
inc
xor
mov
ret
mov
sub
xchg
insb
lcall
outsb
pusha
add
mov
lods
dec
je
shlb
rcrb
aad
ljmp
push
dec
add
repz
add
fldcw
enter
out
lds
push
cmp
pop
jne
repz
fwait
scas
out
sub
cmp
jb
push
cli
or
daa
jb
sbb
xor
stos
lret
scas
fldl
dec
push
std
addr16
or
and
cmp
aad
sub
cmp
imul
mull
dec
ja
sbb
roll
sahf
sbb
daa
push
out
je
push
in
cli
pop
loopne
mov
cmp
sub
xorl
cmc
lods
out
add
or
add
cmp
sub
jl
lea
pop
sub
fldt
dec
pusha
mov
xchg
jg
xor
movb
jbe
icebp
in
inc
mov
fs
adc
add
pop
fdivrs
mov
mov
in
cmp
adc
ljmp
std
daa
imul
sub
imul
pushf
jmp
xchg
dec
ss
sahf
insl
pop
testl
lcall
jb
in
mov
movl
jmp
or
nop
shrb
jle
movsl
jae
mov
ret
popf
cmp
in
and
sti
inc
scas
scas
mov
je
inc
push
sbb
lds
adc
sbb
mov
or
call
xor
jne
pop
cmpsb
ljmp
ret
jb
push
aam
rolb
mov
xchg
xlat
icebp
pop
cs
sub
xchg
fnstenv
cwtl
dec
sbb
fisubs
mov
cmpsl
fisttpl
or
mov
push
jno
call
popf
test
pop
or
sarl
loopne
pop
xchg
mov
dec
cmp
fwait
push
push
fcomps
insl
gs
pop
sub
xor
lahf
cmc
into
sbb
daa
cmpsb
inc
mov
movsl
leave
aam
bound
xlat
inc
lahf
stos
adc
jg
mov
dec
xchg
mov
jg
mov
inc
jae
cli
xor
push
cmp
push
push
das
or
daa
subl
xor
outsb
clc
nop
inc
les
or
xor
shl
mov
xor
xchg
das
ja
push
test
imul
pop
enter
xchg
ljmp
cwtl
ss
aas
mov
loopne
mov
mov
negb
dec
mov
pop
cltd
inc
pop
ja
jb
in
daa
mov
imul
or
jg
mov
sub
xor
dec
mov
jecxz
int
mov
jle
add
inc
jb
push
aas
pop
imulb
mov
or
mov
negl
les
xor
sbb
mov
xor
mov
outsl
and
and
mov
scas
repnz
or
lods
or
fs
jae
mov
push
cmp
sub
dec
or
xchg
dec
insl
and
add
out
or
sbb
push
xor
out
in
xor
std
push
sub
adcb
pushf
push
jg
inc
sbb
jns
cmp
push
leave
out
sarb
add
roll
into
arpl
mov
xor
lret
cmp
xchg
xchg
cwtl
or
jne
lcall
insb
enter
sahf
js
stc
clc
pushf
push
and
jecxz
inc
sbb
dec
push
imul
mov
pop
shl
ss
sub
outsb
add
rolb
cmp
mov
pop
stc
rclb
stos
pop
lock
sar
inc
fcmovnu
push
sub
aaa
loop
imul
xor
xchg
mov
and
lods
dec
out
and
leave
stos
aam
dec
push
push
pop
pushf
into
out
cmp
jo
sub
or
fstps
mov
mov
rorl
jp
pop
ljmp
nop
xchg
aam
jo
daa
jne
pop
bnd
adcb
jb
scas
mov
xorb
les
adc
imul
ret
push
fs
xrelease
cld
or
pop
out
scas
fstp
aaa
fwait
xlat
ret
insb
out
jg,pt
mov
outsl
or
jmp
insl
pop
mov
sub
or
mov
shlb
ljmp
add
rclb
sub
adc
mov
push
test
outsl
fdivs
mov
inc
pushf
xor
lock
pop
ficoms
fdivp
lahf
out
xor
inc
sti
jp
sbb
jge
dec
call
lods
aas
movb
int3
lock
stc
cld
pop
mov
mov
into
push
ljmp
pop
adc
lock
and
add
cmp
out
pop
pop
cmpsl
and
jae
push
jl
cwtl
fs
outsb
les
int3
cltd
cmp
sbbb
test
xor
mov
inc
inc
pop
pop
cmp
cmp
mov
cmpsl
push
enter
xchg
add
mov
adc
cmp
outsb
xlat
ja
add
dec
in
dec
test
out
sub
sbb
cmp
add
das
jns
pop
or
mov
push
popa
xchg
jmp
into
mov
xor
push
das
pop
int3
and
call
adcl
inc
dec
mov
cld
push
sub
mov
cmpsl
test
loopne
dec
loop
clc
add
jns
cli
cmp
das
and
imul
fistps
pop
into
mov
sbb
lds
push
inc
nop
test
sti
mov
push
or
popf
jno
dec
or
add
imul
scas
ljmp
fbld
out
jnp
stos
fcmove
cmp
decb
sbb
adc
pop
popa
jecxz
dec
and
jmp
sbb
dec
imull
mov
and
xchg
mov
stos
lods
fxch
jmp
in
xchg
int
sbb
mov
mov
xor
jae
xchg
test
sahf
lods
pop
aam
cltd
movsb
test
js
pushf
inc
mov
mov
out
les
call
repnz
jb
movsb
xor
jle
dec
jle
xor
xlat
in
mov
push
cmpsb
xchg
imul
mov
sub
xor
fidivs
repz
xor
or
jbe
pop
sbb
icebp
pop
sbb
and
mov
imul
mov
std
xor
aaa
loopne
push
fs
faddp
aam
mov
pop
les
jmp
out
aas
sub
mov
outsl
cwtl
xchg
xor
xchg
rcll
lds
xor
sub
roll
inc
xor
testb
jmp
imul
aaa
and
imull
jb
xchg
mov
mov
stos
mov
sub
lods
fwait
xchg
arpl
push
xchg
lcall
xchg
mov
cs
or
aaa
inc
test
cmp
push
imul
je
push
xchg
icebp
ja
sub
sbb
jb
das
cmp
jb
rep
shrl
aad
je
mov
mov
and
shll
dec
cmp
pop
push
xchg
scas
movsb
xchg
ljmp
mov
xor
push
push
cmpsb
lret
stos
push
sub
cwtl
js
sbb
pop
xor
mov
jmp
lea
sti
daa
dec
rorb
and
lcall
rcll
stos
sub
inc
call
out
cmpsl
clc
xchg
mov
lea
and
in
xchg
hlt
arpl
dec
mov
or
sti
clc
aad
mov
mov
imul
test
sbb
inc
mov
adc
or
scas
popa
jne
pop
int
lea
mov
int
int
mov
jne
les
cld
not
rol
bound
stos
inc
mov
leave
ja
scas
rcll
pop
cld
mov
daa
xor
push
dec
mov
test
or
das
dec
in
mov
mov
movsb
jns
lret
lret
sbb
inc
aaa
in
inc
es
fstl
cmp
mov
mov
rorl
call
or
adc
fldcw
mov
ss
out
mov
pushl
xor
ljmp
outsl
ja
xchg
das
adc
dec
scas
fcoms
dec
jne
pop
outsb
nop
lock
push
mov
cmp
aaa
push
or
or
test
fbld
in
gs
in
icebp
add
xchg
xchg
das
cwtl
pop
cmp
dec
add
xor
sub
xor
bound
mov
ret
adc
jg
pop
lock
xchg
in
or
icebp
insb
int3
cmp
adc
out
rorb
and
jg
int3
pop
cli
mov
or
inc
pop
imul
iret
rolb
sbb
das
sti
out
cmpsb
sbbb
rorl
mov
fistl
add
js
dec
out
inc
xor
imul
mov
jo
pop
ror
and
loop
sub
ret
dec
mov
dec
mov
stos
jno
call
push
sahf
sti
add
mov
inc
aas
loopne
push
rolb
call
pop
push
imul
jecxz
inc
sub
in
rolb
mov
into
lcall
pop
push
pushf
mov
xor
and
add
mov
dec
loopne
dec
jge
cmp
mov
fstps
pop
imull
push
hlt
add
rolb
mov
xchg
shll
dec
dec
in
dec
inc
ljmp
aam
andb
scas
lods
mov
push
mov
sbb
dec
inc
pop
mov
outsb
and
push
xor
movsb
ljmp
pop
int
pushl
xlat
jnp
push
int3
pop
mov
cmpsl
lds
enter
push
or
pop
xchg
cltd
rolb
bound
stos
push
je
lds
sub
or
les
mov
ljmp
fscale
mov
mov
xchg
adc
push
movsl
negl
mov
je
call
shll
int
das
and
cwtl
mov
repz
lods
test
insb
pop
add
jb
adc
or
orb
jo
or
jg
adc
fsubp
jbe
icebp
jle
mov
mov
in
repnz
in
cmp
dec
aad
shr
inc
lods
pop
push
loop
inc
and
in
cmp
sar
mov
inc
add
cs
lea
sub
in
bnd
addr16
jg
mov
lock
outsl
int3
and
js
inc
jno
lahf
lret
rcr
cmp
cld
mov
rolb
inc
call
mov
xor
fs
in
pop
jecxz
jecxz
lcall
and
and
adc
ret
mov
test
sahf
pop
dec
add
mov
inc
fyl2x
mov
subl
dec
and
lret
dec
movsl
pop
std
iret
cwtl
push
inc
ljmp
ror
scas
or
ret
les
lret
nop
or
int3
and
fcmove
lds
xchg
mov
and
lds
jnp
jmp
jno
jl
or
clc
mov
cmc
mov
repnz
push
sub
fistpl
xchg
jge
fiadds
shll
fisttps
inc
xor
lahf
push
or
push
xor
xor
sbb
call
je
test
mov
ja
xchg
out
push
mov
and
test
out
aaa
xchg
push
dec
imul
scas
into
jp
mov
pop
jb
fs
xor
sbb
jg
jnp
push
and
dec
push
mov
xor
sub
cmp
xor
int3
pop
push
decl
cmp
mov
inc
and
inc
jns
js
shrl
jp
sbb
xor
stc
push
sub
lea
cs
leave
stos
cwtl
cwtl
jbe
push
push
idivl
aad
ret
in
push
lods
xchg
sti
lret
mov
jmp
push
dec
push
inc
cmc
out
sbb
push
gs
sbb
test
jne
test
shl
shlb
push
std
repnz
imul
or
or
xchg
pop
lods
pop
fwait
jle
out
cld
inc
out
jmp
divb
jns
sbb
cmp
cmc
pushl
mov
loopne
aam
repz
loopne
sbb
adc
mov
jmp
or
fwait
cmpsl
sbb
pop
aad
ss
js
ret
movsb
cltd
aad
cwtl
cmp
in
lahf
mov
mov
cs
jnp
cmp
mov
sbb
clc
mov
and
sub
sub
incl
in
jbe
jne
rcll
in
add
mov
movsb
dec
in
les
push
mov
cmp
pop
stc
ljmp
mov
shlb
imul
xchg
fucom
bound
jae
mov
adc
xchg
mov
test
xchg
inc
pusha
inc
dec
jecxz
out
aaa
aam
fildll
jecxz
or
dec
cmpsl
xor
sti
bound
fsub
sti
pop
insb
ret
gs
pop
fidivs
cmpl
mov
cmp
ret
mov
ljmp
sbb
sbb
mov
movsl
movsl
cld
mov
popa
in
jbe
fidivs
or
in
out
push
fcmovnbe
inc
adc
pmaddwd
les
sub
insb
loopne
imul
enter
dec
mov
mov
jo
cmc
mov
jnp
lods
imul
fnsave
pop
out
and
jle
push
or
inc
les
jp
pop
and
add
mov
add
lahf
push
mov
movsl
jl
lods
je
je
jle
lret
std
les
add
jg
bound
jbe
mov
mov
in
mov
fs
stc
cmc
cmp
scas
adc
adc
cs
adc
xor
sbb
xchg
ss
sbb
and
mov
popa
pop
cwtl
fdivrl
or
sbb
in
cmp
stos
cmc
in
xor
adc
adc
adc
and
push
jecxz
mov
xor
mov
adc
or
add
mov
cmp
mov
jge
test
and
test
mov
pop
xchg
pusha
ret
inc
insb
mov
sbb
dec
and
movl
fsubrs
inc
scas
pop
adc
jge
ljmp
addl
mov
sub
jne
jae
xchg
jnp
cmp
loope
pop
dec
adc
std
jae
and
push
mov
and
and
adc
dec
sub
pop
out
xchg
push
xchg
mov
jnp
iret
cmp
jbe
lods
pop
push
cld
pop
ficompl
sar
sbb
inc
sub
cmp
loopne
ss
inc
mov
adc
mov
lcall
add
rcrb
sub
test
cmp
stc
imul
stc
inc
test
mov
inc
push
sub
pop
arpl
repnz
add
xchg
mov
mov
mov
adc
dec
mov
sbb
test
fidivl
mov
push
lods
cmp
mov
dec
push
jecxz
mov
mov
movsl
cli
shlb
dec
mov
add
pop
jecxz
bound
mov
xor
fwait
push
insl
dec
lahf
les
lret
inc
sbb
fstl
pusha
mov
mov
inc
xor
cmp
cmp
js
pop
lds
test
mov
test
push
pop
adc
adc
aaa
imul
cld
int3
jbe
int3
mov
adc
sti
rolb
std
stc
jnp
jge
cmpsb
push
data16
mov
dec
pop
mov
loop
jne
pop
or
add
sbb
in
inc
mov
adc
lahf
shrl
add
out
jb
sub
xchg
popf
ficomps
xchg
mov
and
arpl
outsl
daa
xor
das
mov
dec
push
incb
leave
cld
adc
imul
jg
xchg
notl
mov
loop
int3
gs
dec
mov
push
adc
mov
xor
mov
dec
std
push
inc
ja
lcall
jo
and
popf
ficompl
and
mov
push
push
jb
mov
sub
or
pop
and
int
jl
mov
lret
out
out
push
push
jecxz
out
enter
mov
bound
xchg
xchg
mov
mov
enter
mov
jecxz
sbb
fildll
push
sbb
data16
mov
loopne
mov
push
adc
push
decb
or
lea
pop
enter
frstor
push
sarb
pop
or
jnp
or
je
inc
out
ret
mov
push
mov
xor
popf
pop
insb
ret
cmpsb
std
adc
jp
leave
hlt
jmp
jo
mov
cmpsl
xor
mov
fwait
dec
enter
jne
lods
xchg
jmp
sbb
ss
mov
push
jl
push
sti
add
test
cs
pmaxsw
dec
mov
cmp
sub
ss
icebp
mov
in
mov
daa
imul
mov
cmpl
std
mov
das
jp
int
mov
cmp
scas
std
fmulp
and
scas
mov
cmp
mov
sahf
out
rcl
gs
insb
dec
ret
mov
mov
pop
enter
aam
shl
dec
test
inc
into
pop
bound
lods
pop
cmp
mov
dec
and
adc
cld
or
pop
hlt
rorl
dec
jne
dec
pushf
sahf
gs
adc
outsb
and
ja
pop
push
mov
push
inc
sub
xchg
repnz
pop
jb
or
outsl
xor
bound
add
fisubrl
lea
mov
inc
cmp
int3
or
notl
pop
outsb
or
push
add
adc
arpl
jo
ret
sub
mov
icebp
daa
aad
insl
lret
xchg
cwtl
push
dec
ret
fsubp
and
dec
sub
nop
mov
mov
add
test
sbb
fnsave
adc
mov
sub
scas
icebp
in
fcmovnu
jnp
stc
sub
ja
jp
or
out
dec
add
xchg
icebp
lahf
movsl
in
psrad
and
fildl
sbb
sub
jecxz
test
aad
in
mov
ret
or
mov
cmp
loopne
sbb
sbb
daa
lods
jns
mov
ficomps
mov
adc
ret
dec
sub
lods
dec
inc
int
inc
mov
cmp
push
jle
or
sub
mov
jp
cmpb
add
in
and
out
sbb
lea
fwait
push
mov
inc
xchg
or
xchg
insl
cwtl
dec
inc
sahf
pop
sbb
ret
mov
jbe
lock
cmpsb
adcb
mov
add
lea
loopne
notb
mov
daa
outsl
add
adc
mov
inc
std
and
pop
daa
mov
cwtl
mov
sbb
mov
mov
aaa
ficoml
add
mov
mov
out
iret
pop
inc
es
add
rcll
pop
xor
push
imull
dec
dec
sar
int3
cld
repnz
loopne
iret
jnp
push
aaa
int3
mov
rolb
out
je
jmp
jnp
lea
or
ds
dec
loope
pop
mov
sub
adc
jg
test
imul
xor
gs
jecxz
dec
fcomps
sbb
jmp
cmpsb
push
jp
sbb
pop
cmp
cli
repz
iret
xchg
cwtl
hlt
scas
inc
movsb
mov
fcoms
ret
mov
cmp
fildll
xchg
sub
bound
ds
mov
loope
inc
ret
xchg
jmp
xorl
lds
ss
dec
pop
loopne
mov
push
test
or
out
mov
inc
mov
mov
jg
testb
out
fwait
cmp
dec
enter
iret
jne
in
dec
mov
mov
mov
add
xlat
pop
loopne
mov
addb
pop
sub
xor
out
nop
pop
sbb
jg
xchg
int
mov
repnz
mov
push
sub
lock
out
iret
sub
push
imul
cmpsb
lods
rorl
dec
inc
movsl
mov
rorb
inc
sbb
mov
cmp
mov
dec
leave
lods
jae
push
sbb
into
or
out
pop
push
outsb
fnstsw
or
or
mov
decl
scas
cmp
ret
or
jnp
jmp
cmp
or
inc
nop
sub
lods
movsl
imulb
pop
js
cmp
pop
push
sti
in
imul
jno
or
out
rcll
int
nop
sti
jecxz
stos
ret
mov
les
push
fxrstor
lcall
ja
stos
jmp
popf
js
ret
test
xchg
shll
mov
rcll
cmp
clc
mov
rclb
mov
cmp
stos
bound
inc
inc
cmpsb
push
ds
ds
insl
data16
rcrb
xchg
fcmovu
pop
cld
xchg
rclb
push
scas
notl
sbb
int3
lds
lret
adc
std
add
test
mov
push
out
repnz
in
imul
mov
pop
cmp
push
ret
push
xchg
adc
stc
or
je
imulb
xor
test
popf
cwtl
xchg
push
in
pop
test
int
cltd
and
xchg
adc
push
pop
jbe
mov
jae
cmc
test
pop
leave
xchg
fnstenv
jb
cltd
xor
int
test
insl
xor
pushf
jle
mov
ret
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
pop
add
movnti
sbb
jno
dec
stos
or
popa
mov
test
bound
cltd
mov
out
pop
push
nop
rorb
fiaddl
neg
dec
jbe
ret
or
cmpsb
sbb
outsb
cli
imul
push
mov
or
sub
xor
xabort
lret
lock
cmc
sbb
les
push
sub
in
mov
xchg
jl
js
mov
fcomps
fidivl
bound
sarb
lahf
and
push
mov
mov
ja
jecxz
ljmp
arpl
lods
bound
dec
jo
adc
push
mov
ss
das
push
cmp
addb
sahf
shlb
mov
mov
in
push
xchg
popa
xchg
lods
enter
clc
jmp
mov
mov
xor
or
pop
dec
cpuid
fdivs
scas
leave
or
sahf
dec
in
inc
mov
push
addb
iret
addr16
xor
mov
pop
loop
inc
cmpsb
lock
clc
aaa
mov
dec
lcall
push
inc
mov
sbb
cwtl
or
dec
sub
cmp
decb
lock
cmc
jge
push
mov
dec
icebp
mov
dec
push
mov
pop
and
mov
fmul
inc
pop
roll
jno,pn
push
fdivrs
pop
outsb
xchg
enter
sub
lret
push
adcl
mov
jb
stos
mov
cmpsb
mov
adc
vpshld
icebp
sbbb
xchg
pushf
js
std
dec
xor
cli
clc
sub
and
push
dec
int3
in
mov
lcall
idivl
pop
gs
sbb
mov
fstl
int3
jl
imul
xor
pop
cmp
hlt
xor
xchg
sub
pop
pop
sub
stos
ja
leave
repnz
inc
test
popf
ljmp
mov
loop
in
addb
in
jb
sub
pop
mov
dec
inc
and
clc
xchg
lahf
push
mov
jge
gs
icebp
jbe
ja
jmp
into
xchg
inc
xchg
mov
xchg
fisttpl
loope
jecxz
call
or
test
or
push
cmpsl
inc
stos
xchg
and
dec
mov
xorb
int3
jg
jmp
or
lahf
dec
mov
xor
xor
insl
sbb
sbb
mov
cwtl
lahf
addb
xor
mov
mov
jmp
and
insb
loopne
sahf
xchg
mov
aam
inc
sub
add
inc
enter
iret
or
sub
mov
sub
mov
add
orb
fisubs
xchg
ljmp
into
jl
mov
dec
pop
or
insb
mov
add
or
pop
stos
sbb
shll
inc
sbb
test
pop
jo
nop
cmp
lahf
insl
lds
pop
out
test
ja
dec
mov
sbb
mov
jge
add
dec
lret
outsl
je
scas
test
mov
push
ror
movsl
or
ss
and
fcmovb
sbb
daa
push
jp
jne
ljmp
cmpsb
rcll
push
adc
les
xchg
movsl
sub
xchg
add
xchg
lea
ret
orb
jne
pop
cmp
mov
call
mov
insl
ss
or
lods
loope
add
in
aas
lods
es
cmc
popf
pop
pop
sarl
loope
dec
out
rcrl
jae
dec
js
ljmp
mov
rcrl
or
inc
loope
out
aaa
add
xor
mov
aas
std
stos
xchg
mov
call
subb
mov
xchg
dec
mov
xchg
cmp
jg
sbb
imul
enter
jmp
mov
ret
xor
mov
push
shrb
mov
cli
mov
xchg
cwtl
ljmp
in
push
scas
add
push
adc
into
and
test
add
mov
pop
mov
mov
test
mov
insb
jno
jl
movsl
loope
sahf
pop
dec
or
mov
lcall
ljmp
add
mov
mov
lock
or
xor
cld
insl
xchg
mov
test
cmp
lcall
adc
push
xchg
decl
inc
stos
cli
outsl
cmpsb
outsb
cmpsl
mov
int3
cltd
sub
pop
imull
hlt
lret
nop
sub
aam
sahf
fists
stos
sbb
jo
mov
mov
push
lcall
mov
lea
inc
movsl
clc
dec
lods
cwtl
imul
push
fdivrs
inc
iret
dec
mov
dec
inc
cmp
stos
pop
cmp
pop
xor
inc
xor
xchg
cli
mov
dec
shlb
movb
out
imul
xchg
jne
jns
push
jbe
or
xor
dec
sbb
pop
pop
add
aaa
push
mov
xchg
jbe
outsb
shll
iret
rcll
pop
add
mov
adc
cmp
movsl
test
movsb
shlb
cwtl
jno
in
or
fs
push
loop
outsl
xlat
iret
or
adc
mov
mov
pop
inc
lods
sbb
xor
mov
mov
sub
push
and
nop
cltd
xor
add
mov
fcmove
lods
pusha
or
or
jne
ljmp
mov
sbb
xchg
push
fisttps
cmp
int
cmpl
mov
adc
lret
mov
inc
mov
dec
mov
push
orb
dec
in
ret
call
or
mov
ficoml
jle
pushf
xchg
out
xor
sbb
in
jmp
mov
push
xlat
inc
test
cmp
leave
or
loope
faddl
xchg
add
mov
imul
mov
mov
jb
call
stos
jno
pushf
ds
stos
or
push
xchg
push
sbb
test
in
mov
cs
xchg
fstl
adcb
pop
es
jg
xor
adcl
jno
pop
lock
enter
push
mov
test
ja
fbld
popa
ret
push
adcl
addb
imul
mov
int3
clc
sub
pop
aad
xor
xchg
mov
and
xchg
addl
jnp
aaa
pop
mov
fdivrl
and
and
cmp
stos
cwtl
rcrb
repnz
or
mov
cli
dec
fidivl
adc
mov
mov
jle
jl
addr16
pop
mov
mov
push
fwait
dec
xor
mov
das
cmpsb
sahf
adc
xchg
out
xchg
pop
aam
mov
jae
fwait
or
sub
lcall
stos
cmp
sub
pusha
sub
add
ljmp
push
pop
inc
lea
pop
fsubr
sbb
rorb
aad
mov
lahf
sub
mov
dec
aaa
lahf
mov
mov
rcrl
into
dec
pusha
mov
das
or
fisttps
mov
xchg
adc
or
and
fcmovnb
and
sub
aas
jo
in
fisubrs
jp
xor
lock
arpl
push
and
stos
fnstenv
mov
or
or
pop
push
lret
fwait
shrl
sub
in
sbb
mov
stos
cmp
mov
inc
inc
lea
sub
jno
fistpl
push
aaa
mov
jb
cmpsl
jle
push
mov
in
fsubrl
or
rcrl
pop
test
mov
std
push
xor
in
dec
mov
mov
loope
jns
pop
adc
mov
push
test
xchg
addps
movsb
fidivl
in
add
je
pop
gs
xchg
adc
mov
push
mov
ficompl
push
scas
sub
das
call
or
mov
xchg
inc
fnsave
loopne
push
xchg
or
pop
jb
mov
stc
shrb
mov
jbe
leave
flds
in
loopne
mov
testl
mov
ret
in
jbe
pop
jmp
push
ss
dec
out
insb
inc
sub
xchg
jmp
cmp
sbb
and
jp
adc
call
sbb
fimuls
add
aaa
cmp
fldenv
sbb
and
add
aaa
popa
repz
ret
bound
popf
es
mov
shl
add
add
popf
and
test
sub
andb
addr16
aam
inc
pusha
ret
imul
jg
lds
or
pop
mov
xor
adc
sbbl
add
je
cmp
pop
jmp
call
cmp
mov
fdivl
inc
mov
ret
test
sub
fmul
adc
icebp
pop
mov
sub
mov
das
push
cwtl
xchg
fistpll
inc
push
repz
les
or
mov
cmc
loope
mov
jp
mov
ret
cmp
mov
shlb
add
in
scas
fisubl
xchg
sub
test
popf
loope
pop
out
cmc
cmpsb
xchg
loop
sbb
and
push
adc
pop
xor
mov
or
gs
shll
stos
cmp
dec
scas
popa
jbe
sbb
xchg
adc
push
mov
fdivl
dec
dec
movsb
inc
pop
int3
push
mov
push
loop
call
push
das
push
dec
cmp
add
xchg
leave
icebp
lods
inc
sbb
popa
jb
orl
mov
leave
dec
inc
xorl
xor
adc
js
sahf
aad
ds
daa
ja
adc
mov
xlat
adc
daa
jge
movsb
ret
rcrl
repz
or
leave
add
mov
sub
mov
mov
das
inc
cli
sub
aaa
inc
popf
jmp
pop
movsb
cmpsb
jnp
cmp
pop
push
fstl
test
scas
aam
das
es
push
inc
or
cmp
pop
movsl
push
mov
adc
mov
xor
std
or
pop
push
or
insl
nop
mov
sub
adc
fstpl
inc
fdivrl
pusha
les
lea
push
add
push
stos
fisttpl
xor
cmp
out
divb
dec
lahf
inc
imul
inc
in
adc
xchg
mov
movsb
and
sar
repz
xor
fisubl
cltd
push
imull
mov
repnz
sub
out
negl
pop
push
pop
mov
loope
jg
pusha
dec
inc
mov
dec
pop
inc
push
lahf
or
mov
out
or
sbb
jp
cmp
fadds
xlat
movsb
jno
cmpsb
adc
pusha
scas
jno
inc
push
adc
mov
jmp
jp
adc
cwtl
and
sbb
aaa
push
dec
incl
cmpb
movsl
and
inc
and
push
push
pushf
adc
xchg
cmp
popa
fistl
fidivrl
stos
fisttps
pop
pop
cmp
push
xchg
jbe
in
iret
pop
or
inc
inc
or
popa
and
cltd
inc
pop
dec
jne
mov
aam
pop
jne
cmpsl
push
jg
cld
lret
mov
test
push
pop
pop
aad
pop
mov
lahf
lret
sbb
popa
inc
xlat
sbb
add
pushf
sbbb
sub
add
or
icebp
repz
cmp
iret
js
xor
sbb
lods
out
xchg
leave
xchg
out
jbe
inc
daa
and
mov
out
xor
jnp,pt
pop
xchg
cmpsl
cmc
mov
rcll
inc
cwtl
out
clc
and
lahf
imul
xchg
lods
fxch
fistpl
push
jl
mov
pop
cmp
jp
int3
movsl
fs
cmp
push
push
cmp
inc
cwtl
mov
ret
bound
negb
fistpl
imul
push
cmp
sahf
jmp
pop
mov
mov
sub
dec
imul
sbb
popf
mov
mov
pop
xor
mov
and
sbb
movsl
cmp
push
lods
inc
fwait
add
mov
jg
push
lods
mov
push
mov
jl
xchg
stos
xchg
jo
pop
push
sbb
bnd
mov
out
lcall
dec
pop
stc
cmp
pop
adc
jb
leave
jle
fists
rorl
cmpsl
and
mov
xor
cwtl
mov
inc
cmpsb
dec
call
outsb
push
pop
ret
and
test
rcrl
aaa
xor
rolb
lock
int
aas
or
lcall
jecxz
cmc
or
enter
in
xor
pop
mov
cwtl
sub
adc
cmp
push
into
cmc
mov
mov
jp
dec
inc
dec
rcrb
and
les
daa
aad
mov
out
adc
jecxz
lods
push
push
add
jns
add
test
insl
in
inc
aad
mov
aad
mov
mov
test
imul
insl
mov
mov
jmp
mov
popf
cwtl
and
xor
xchg
outsb
jl
in
xor
jb
mov
and
push
fwait
sbb
pop
cmp
xchg
push
mov
dec
mov
sbb
xor
adc
add
scas
adc
ja
lcall
or
jbe
push
xchg
inc
cwtl
lods
test
add
pop
xchg
gs
cwtl
sub
frstor
add
xor
mov
and
filds
adc
daa
call
sub
jne
out
repz
in
into
std
pop
or
subl
outsl
or
lds
loopne
sub
push
and
aaa
lods
cmc
lret
cli
sbb
sbb
aaa
push
orl
sbb
loope
outsl
stos
inc
cmp
mov
lds
int3
sbb
les
mov
leave
shlb
and
push
xor
xlat
int3
mov
dec
leave
or
or
sbb
push
dec
mov
and
sub
adc
mov
out
pushf
xchg
mov
cmp
mov
shlb
pop
les
push
jae
jb
and
mov
dec
xchg
fcoms
aad
push
pop
cmp
mov
dec
sbb
push
pop
rorl
out
mov
and
push
andl
xor
add
out
cmp
jns
pop
fldenv
push
push
mov
cmpsb
ret
cmpsl
mov
jmp
ja
pop
std
sbb
dec
inc
inc
xchg
jno
adc
out
pop
xor
mov
jnp
mov
xchg
sbb
gs
xchg
es
arpl
pop
in
or
movsb
inc
mov
addb
mov
rclb
andb
jl
and
push
xchg
loopne
inc
idivl
scas
addl
or
mov
cmp
add
jp
out
push
into
xor
adc
enter
loopne
arpl
and
mov
pop
dec
test
mov
xor
shlb
xor
clc
mov
push
bound
call
nop
lea
mov
sti
insb
call
or
fistpll
push
sub
mov
jle
fs
sti
mov
jne
mov
imul
imul
pop
cmpsb
sub
es
jmp
mov
loop
inc
add
push
out
ljmp
dec
pop
test
dec
pop
insb
pop
adc
or
call
lock
inc
mov
push
repz
inc
jecxz
mov
fcmovnu
add
in
pop
add
sub
inc
testb
bound
test
cli
mov
loopne
pop
pop
gs
cld
in
push
adc
mov
dec
inc
fs
mov
and
lahf
mov
xchg
xchg
mov
in
insl
arpl
xchg
sbb
mov
jg
xor
xchg
das
insb
xchg
jg
push
enter
fdivs
xchg
mov
push
lock
dec
aad
inc
jns
mov
mov
push
jg
mov
sbb
popf
push
adc
mov
xor
out
call
psubb
fsub
cmpsb
jecxz
mov
call
dec
lods
add
mov
adcl
mov
xchg
sub
or
lea
mov
or
fidivrl
sbb
int3
cmp
mov
push
inc
int
xchg
int3
jne
dec
lods
jnp
sbb
dec
pop
push
jmp
cld
and
push
iret
cmc
ret
aas
or
jns
push
and
mov
addr16
inc
and
or
xchg
lods
or
dec
sbb
clc
pusha
cmp
cmpsb
lahf
das
xchg
lret
lcall
or
pop
inc
fs
jb
pop
int3
mov
jo
loopne
inc
cld
jns
into
pop
xchg
int
aad
xchg
add
iret
aam
cltd
mov
push
adc
push
push
in
ror
cmp
cmp
lods
or
adc
jge
mov
call
mov
mov
loop
xor
scas
in
sub
das
test
xchg
dec
mov
cwtl
int
sbb
data16
lret
jg
pop
mov
cmpsl
leave
adc
add
jno
pop
pop
cli
lret
add
mov
and
jno
stc
mov
jbe
out
iret
pushl
sbb
and
mov
mov
adc
pop
cmp
js
notl
mov
pop
sub
adc
out
rcr
push
xchg
add
sbb
mov
outsb
call
jmp
push
imul
mov
je
lcall
jecxz
inc
mov
xlat
push
push
bswap
mov
pushf
std
mov
and
adcl
out
sub
xlat
sbb
sub
mov
test
lret
push
cs
call
js
les
mov
adc
into
adc
stos
rcl
inc
mov
mov
pop
jmp
lcall
pop
xchg
dec
test
xor
loope
push
in
pop
out
mov
jecxz
xchg
sarl
add
pusha
cltd
sub
dec
repnz
adc
xchg
add
xor
fdivr
loopne
sbb
pusha
call
or
adc
sti
sahf
mov
xchg
sub
mov
in
push
scas
addr16
add
jp
and
lret
xor
or
aad
clc
fcmove
xor
cwtl
xor
mov
pop
cld
or
in
add
movsb
lret
arpl
and
fbld
stc
push
and
mov
jmp
add
in
fstps
in
into
inc
dec
cmpsb
and
aad
cltd
xchg
push
lret
push
daa
pop
mov
xchg
pop
pop
out
dec
mov
and
lods
stc
mov
gs
dec
leave
mov
popa
xor
or
inc
cmp
stc
mov
in
mulb
xor
mov
mov
enter
popa
or
fistpl
lret
mov
add
mov
mov
insb
and
pop
dec
xchg
xchg
sub
icebp
mov
adc
movsb
aaa
jecxz
and
push
aam
jp
fnstenv
dec
lcall
test
mov
pop
push
aaa
hlt
es
mov
and
arpl
sbb
mov
cmp
repnz
aas
dec
adc
inc
fisttps
jmp
xchg
jp
in
addl
pop
pushf
test
push
pop
leave
test
psrlq
shl
in
ja
in
mov
mov
sti
jp
je
mov
fmull
insl
test
ja
pop
scas
inc
test
jns
push
cmpb
sub
les
pop
fsts
or
arpl
subl
push
dec
inc
add
scas
or
adc
jbe
mov
out
outsb
idivb
jmp
loopne
inc
jbe
mov
loop
xchg
nop
incb
dec
xor
out
push
jecxz
push
lods
outsl
sub
xchg
mov
adc
pop
repz
stos
pop
stos
pop
sti
cmp
pusha
mov
push
mov
fisubrs
adc
xor
movl
xlat
cwtl
es
icebp
mov
cmp
jbe
jp
mov
sbb
adc
mul
adc
push
add
cli
cmc
test
mov
adc
rorl
xchg
cmp
les
dec
xchg
sti
das
cmp
nop
push
rcl
dec
push
cwtl
rclb
jae
pop
adc
mov
xor
mov
mov
out
iret
or
mov
jmp
add
mov
test
xor
mov
sub
add
or
adc
mov
mov
xchg
insl
lds
lea
imul
nop
fisubrl
fnstcw
dec
add
xchg
shlb
stos
mov
add
test
jl
std
or
scas
jp
mov
cmc
lcall
loopne
jl,pn
shl
cmc
jns
rorl
xchg
mov
insb
test
out
adc
or
sbb
out
lret
ja
mov
add
rcll
mov
pushf
out
dec
ss
or
dec
jns
or
sub
sbb
xor
pop
inc
stos
lcall
iret
je
mov
ljmp
bound
push
in
mov
in
call
test
mov
pop
sar
jl
jg
xchg
out
mov
out
jp
pop
cmpl
inc
ja
pop
insb
pop
add
shrb
stc
sub
rorb
inc
shrb
inc
arpl
addb
jae
and
pop
sti
lods
push
dec
jno
cmp
add
sub
inc
daa
mov
out
js
mov
lahf
sti
xchg
and
mov
and
mov
adc
out
cmp
push
add
daa
andb
aad
ret
sbb
outsb
jno
sub
jnp
adc
push
andb
cmpsl
cs
aas
ljmp
repz
loop
jne
sbb
or
pop
cmp
and
push
mov
adc
dec
cmpsb
and
icebp
push
xchg
repz
push
dec
cld
into
les
pop
pop
shlb
add
lods
aam
jmp
pop
leave
jecxz
pop
inc
js
inc
je
insl
mov
mull
pop
lock
sahf
adc
repz
inc
shrb
sarb
jmp
bound
fnstsw
add
iret
sbb
stc
insl
lahf
push
mov
in
adc
mov
jb
aad
cmp
inc
pop
lods
test
cmp
out
in
stos
jb
cmp
int
loop
lret
cli
or
xchg
mov
add
xchg
jno
aad
push
sbb
rclb
xchg
and
pop
cld
aam
in
pop
fwait
repnz
ss
lret
jns
dec
sub
in
xchg
pop
pop
cmp
lret
push
in
sbb
dec
mov
mov
xor
shlb
ffreep
sub
not
push
pop
in
and
ja
into
inc
xchg
xchg
mov
in
fbld
jle
mov
adc
mov
mov
and
add
mov
aad
pop
or
das
push
push
push
mov
aad
mov
mov
push
push
mov
mov
mov
adc
ret
sbb
in
sub
inc
fcoml
mov
sub
inc
loope
pop
loope
cmpsb
xlat
and
out
fs
ljmp
adc
dec
pop
fisubl
push
and
outsl
lods
syscall
lcall
ja
imul
jae
pop
aaa
inc
cmc
jo
ja
mov
ret
icebp
dec
jae
inc
gs
js
mov
popw
pop
lods
xorl
popa
loopne
push
cli
mov
loop
jo
mov
aas
lahf
pushf
pop
fs
push
loope
and
scas
std
lds
push
sub
inc
or
xchg
sub
lods
mov
cli
inc
in
cmpsl
push
iret
stos
and
loope
es
je
and
cmp
add
jg
jns
iret
aad
aad
int3
les
push
inc
fs
lret
fcompl
jae
jmp
or
mov
sbbb
cs
jle,pt
lods
imul
fs
cmpsl
pusha
xor
aas
sub
push
out
dec
loope
divb
sbb
and
jl
cmpsb
call
xchg
mov
inc
pop
out
adc
sub
test
test
adc
jecxz
and
push
or
sub
sbb
pop
mov
pushf
cs
xor
inc
pop
int3
es
dec
rorl
lret
and
mov
test
sbb
cmp
or
cli
sbb
pop
sub
pop
cld
mov
or
ficompl
jne
leave
shrl
pushf
dec
inc
add
lds
aad
into
outsl
out
idivl
sub
jl
sub
fisttpl
push
orb
adc
loopne
mov
push
or
ss
arpl
and
add
lcall
xchg
fwait
mov
dec
jp
test
lahf
or
sbb
sarb
xor
inc
out
inc
loop
aas
in
out
lret
xor
in
pop
cmp
cmc
push
leave
mov
cs
addl
sbbl
xor
cmp
mov
lds
jg
xor
push
jo
leave
icebp
xor
jecxz
lock
mov
mov
and
pop
popa
ffree
jb
add
mov
gs
cmpsl
xor
xlat
stos
mov
bound
sub
mov
xchg
inc
or
roll
imul
fnstcw
sub
mov
xor
pop
int3
fmuls
inc
popf
out
xorl
sub
add
mov
pop
xor
dec
dec
push
repz
jno
push
aad
dec
sbb
popf
push
cmp
push
or
xchg
and
les
in
jno
cmpsb
mov
sub
xchg
leave
mov
cmp
pushw
out
jno
dec
push
pop
into
mov
xchg
ljmp
test
inc
jb
mov
notb
mov
test
dec
pop
pop
fs
icebp
aam
xlat
mov
cmp
in
push
in
inc
hlt
fwait
xchg
scas
jmp
push
aas
xchg
aaa
push
out
cmc
into
rcll
mov
mov
sbb
adc
mov
pop
shll
lcall
cwtl
out
inc
mov
mov
lcall
lcall
inc
daa
mov
inc
xchg
daa
mov
mov
stc
xchg
pusha
xchg
scas
daa
pop
cmp
pusha
lret
adc
xchg
jl
sub
decb
pusha
mov
adc
call
add
fsts
cmpb
push
clc
and
xor
icebp
push
push
imul
out
iret
icebp
pop
jmp
or
sub
push
sar
out
push
add
je
or
inc
orl
adc
sub
dec
lods
xchg
or
or
aaa
repnz
stc
loop
fdivs
push
lret
adc
push
in
andl
push
sarb
mov
sahf
mov
popa
insb
popf
mov
cs
cmp
data16
adc
imul
mov
and
pop
or
jle
jae
lcall
in
lods
jmp
pop
jmp
lock
dec
rcrl
hlt
xor
xchg
aaa
xchg
loopne
pop
mov
int3
lcall
incl
cwtl
mov
sbb
push
test
push
mov
sahf
imul
scas
fwait
mov
imul
out
dec
sub
out
lea
adc
shll
push
pop
sub
mov
sbb
daa
sarl
loope
sub
xor
gs
fadds
loopne
arpl
lcall
movsl
je
pop
lea
cmovb
lea
mov
adc
sbb
mov
mov
xlat
idivl
clc
rorb
insl
aaa
arpl
mov
mov
fwait
arpl
repnz
dec
fs
ss
or
xor
aaa
xor
sbb
xchg
jbe
adc
cmpsb
repnz
call
push
inc
add
mov
push
inc
xor
in
aaa
xor
mov
enter
mov
mov
push
cmp
push
lods
jbe
push
leave
cltd
inc
xor
gs
inc
std
inc
jle
arpl
fnstenv
cmp
sti
pop
inc
jmp
pop
lods
addr16
pop
jbe
and
nop
fwait
sbb
add
xor
fsts
xor
jmp
or
xor
fs
rorb
adc
xlat
xor
pop
mov
sbb
out
xchg
sub
cmpsb
rorb
lcall
mov
int
into
jne
testl
aam
sub
push
sub
movsl
mov
lret
ss
pop
xorb
ss
cmpsl
out
insb
mov
shll
sub
pop
sbb
pop
mov
cwtl
aas
mov
into
int3
dec
enter
lock
push
jp
pop
arpl
pop
imul
and
jbe
shll
js
in
add
adc
insb
mov
mov
sbb
aaa
stos
ret
inc
rorl
or
icebp
ret
cmp
sbb
cmp
fwait
cli
jle
sub
out
ss
cmp
cmp
repz
mov
mov
xchg
in
test
adc
pop
out
incl
shl
add
pop
add
sahf
test
and
jmp
push
fsubrs
inc
out
ds
add
xor
push
cmpsb
mov
iret
imul
int
adc
dec
call
jmp
and
mov
pop
bound
sub
push
aaa
add
and
js
or
stos
lock
cmp
adc
outsl
in
adc
loop
scas
or
pop
adc
popa
sub
add
sbb
pop
cmp
scas
or
leave
xchg
jg
jg
and
orl
mov
cwtl
mov
sub
xchg
cmpl
lods
xor
fildl
lcall
das
pop
stos
fwait
movsl
dec
ds
shlb
notb
dec
sub
and
jl
repnz
pusha
jle
add
push
into
arpl
ficomps
cmp
in
mov
scas
and
add
in
aad
into
cltd
scas
jbe
jns
mov
scas
lods
xchg
cmp
out
pop
mov
in
mov
test
xorl
jmp
std
and
out
call
adc
addr16
push
cltd
and
xchg
cld
out
mov
cmp
es
or
mov
jbe
jecxz
mov
inc
jg
mov
aaa
in
test
xchg
and
out
dec
mov
lea
cmp
aas
sti
xor
add
sbb
xchg
icebp
or
push
icebp
add
mov
das
pop
sbb
addl
cmp
push
ret
xor
outsl
mov
cmp
or
xchg
rcr
pop
jno
push
dec
pusha
mov
pxor
daa
mov
fwait
hlt
xor
into
in
ljmp
fs
sub
mov
mov
pop
mov
in
stos
fidivrl
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
dec
jle
inc
addb
and
out
adc
bound
scas
sub
mov
pop
mov
lret
outsl
lcall
jo
jmp
enter
push
adc
push
pushf
mov
aaa
jl
adc
xchg
cmp
loop
sub
mov
pop
sub
and
mov
aas
je
inc
test
cmp
cmp
sbb
aam
mov
cmpsb
out
es
fiaddl
and
inc
cmc
dec
inc
xchg
call
dec
or
fistpll
aas
mov
cmp
aad
pop
fs
jne
popa
mov
ss
repz
outsl
std
xor
mov
stos
xchg
cwtl
jno
sub
test
mov
cmp
in
mov
shll
adc
mov
jb
popa
aas
jne
mov
imul
aaa
insl
in
cmp
mov
pop
push
cmp
cmp
mov
in
jae
lea
jmp
push
sbb
ja
lock
aam
faddp
push
sar
scas
hlt
fsubr
repz
jns
mov
int3
or
xlat
adc
loop
out
lock
jae
mov
mov
dec
ss
enter
mov
sbb
clc
dec
jle
fldenv
sub
loopne
xor
sbb
sbb
pusha
outsb
sub
nop
adc
push
mov
mov
mov
pop
sbb
pop
xlat
xor
push
aaa
adc
in
mov
mov
jl
std
mov
add
and
scas
fwait
jns
cli
or
jnp
jbe
jo
mov
sub
inc
xchg
icebp
popa
xlat
or
adc
pop
int3
or
mov
cmp
mov
push
xchg
mov
rcl
adc
xor
add
push
int
lds
or
js
and
sahf
mull
cli
mov
xchg
stc
mov
fs
adc
cmp
add
test
insl
scas
lret
xor
pop
dec
inc
pop
and
in
dec
mov
add
jp
mov
adc
stos
jo
stc
mov
pop
add
or
inc
mov
jbe
push
dec
adc
cmp
das
sub
cmp
ffree
dec
lret
loop
or
ror
aas
push
xchg
and
push
repz
das
sete
cmp
lods
shr
aas
inc
orb
mov
out
xor
ret
pop
jmp
push
inc
lods
sub
dec
mov
lods
adc
movsl
cmp
out
xor
jbe
into
js
test
mulb
or
adc
je
jg
push
cmp
and
sub
icebp
rorl
popf
push
insb
pop
and
mov
out
mov
cmp
addl
rorl
daa
sti
cmp
adc
dec
pop
stos
insb
jle
lods
xchg
mov
dec
mov
je
pop
cmp
xorl
inc
movl
fld
nop
lcall
pop
aas
mov
rcll
sti
sub
jb
jmp
and
js,pn
hlt
pop
dec
sub
stos
sub
rorb
adc
push
rcl
movsb
in
cmpsb
stos
jmp
test
sub
adc
dec
jge
push
lahf
je
push
push
mov
push
in
lret
in
push
xchg
mov
or
mov
cmpsb
add
mov
scas
sub
inc
sub
fdivr
std
into
pusha
idivl
rcr
dec
pop
repz
inc
or
inc
sub
addr16
inc
sbb
pop
cmpl
inc
mov
jnp
cld
das
mov
xchg
adc
mov
shll
int3
jmp
push
cmp
in
xchg
out
or
notl
pop
rcl
das
cmpb
fsubl
cwtl
jl
mov
jae
lods
movsl
in
add
mov
dec
push
sub
test
push
dec
mov
adc
ja
xor
push
mov
leave
xchg
pop
test
cmpb
xor
sbb
adc
roll
push
push
adc
cmp
adc
jmp
xorb
jno
jmp
ret
loope
xor
aas
dec
ret
cli
repz
xor
stos
cmpsb
cmpsb
jb
sub
std
aas
and
push
jge
sub
nop
fidivrs
fadds
aaa
mov
mov
xchg
inc
hlt
daa
call
xor
sbb
mov
push
test
addr16
and
lea
out
mov
jle
pop
scas
jb
dec
push
out
enter
fwait
add
push
hlt
test
subl
aaa
mov
cmp
xchg
and
push
enter
add
das
and
ds
jl
repnz
out
or
in
jbe
add
and
sarl
mov
mov
ficompl
inc
inc
sahf
aaa
sub
mov
xchg
and
cmp
mov
jbe
out
popf
push
pop
mov
cmpsb
ljmp
fimull
popa
push
mov
mov
in
mov
test
push
push
push
popa
imul
add
adcb
mov
or
repnz
arpl
sub
imul
sar
neg
mov
arpl
enter
xchg
flds
or
dec
xor
mov
add
xchg
test
add
enter
and
adc
addr16
pop
idivl
les
add
add
cwtl
insb
outsb
adc
dec
mov
push
pop
fwait
daa
inc
sub
sub
movsb
in
or
push
mov
adc
sbb
jmp
lock
xchg
iret
mov
sub
ficompl
cmpsl
arpl
and
shll
test
cs
mov
loope
in
pop
in
xchg
cmp
fldenv
push
imull
push
ljmp
add
inc
add
out
pop
add
clc
test
mov
push
aaa
dec
jl
add
sub
fstpl
sub
dec
stos
in
or
sbb
cmp
insb
jbe
in
pop
shrb
lret
roll
cmpsl
mov
jbe
inc
or
lret
xor
lds
inc
lret
cmpsl
adc
aas
test
jmp
jl
sub
stos
cs
mov
jno
mov
out
lock
pop
xor
cmpsl
test
inc
popa
add
into
inc
xlat
mov
adc
adc
and
add
lcall
js
sub
jbe
or
pop
adc
push
sbb
mov
stos
sbb
adc
pslld
mov
popa
jge
pop
mov
int3
fstpt
lcall
xchg
lret
add
push
xchg
xor
mov
inc
popf
das
outsl
sub
inc
adc
andb
repnz
inc
adc
lret
xchg
xor
in
cmp
and
js
fstpl
inc
sub
jnp
mov
rorb
mov
jbe
push
pop
and
repz
or
add
sbb
dec
and
xchg
xchg
repnz
das
or
sbb
adc
les
out
xor
lret
aas
fildl
stos
sub
repz
bnd
cltd
mov
lea
inc
pop
fmul
out
or
push
xchg
aam
outsl
in
xchg
out
pop
push
inc
leave
out
fs
lret
mov
dec
jbe
scas
out
stos
imul
push
lcall
jae
test
out
mov
incl
pop
lret
test
xchg
sub
push
mov
mov
and
fwait
fwait
xchg
mov
adc
pop
mov
push
je
mov
push
mov
shll
lcall
mov
pop
ret
jns
fs
push
and
xor
jae
cmp
pop
xor
in
pushf
imul
inc
xchg
sbb
xchg
out
ja
outsl
add
pop
out
mov
jl
lods
xor
dec
sbb
xor
pop
xchg
adc
jbe
ds
pusha
push
inc
lds
push
adc
inc
cmc
or
jmp
xchg
sahf
mov
sbb
mul
fidivrl
bound
clc
dec
jl
in
xor
and
dec
dec
cs
test
call
inc
movsb
je
loope
adc
out
inc
jb,pn
xchg
cwtl
not
mov
mov
jge
shlb
push
ljmpw
insl
in
push
mov
js
push
mov
sub
cmp
pop
push
mov
je
mov
adcb
pop
adc
mov
mov
sti
push
and
aaa
mov
add
insl
and
lret
jp
into
ja
mov
popf
lock
xchg
fwait
enter
stos
mov
mov
pop
mov
imul
xchg
jl
out
xchg
out
lret
xor
or
jmp
bswap
and
mov
out
sub
mov
push
xchg
and
jb
fs
idiv
scas
inc
mov
aad
mov
xchg
push
xchg
fmull
xchg
add
ss
dec
xor
int
insl
call
jle
out
xor
dec
popa
xchg
mov
mov
sbbl
mov
xor
movsb
xor
mov
cmpl
pop
jp
in
mov
mov
cwtl
repz
sbb
sub
jecxz
sbbb
call
and
aaa
cmp
roll
inc
cmc
mov
push
adc
fisttps
xchg
inc
xchg
or
ret
mov
imul
sbb
dec
push
in
test
ljmp
jl
je
das
cmp
push
daa
icebp
fisubrl
jecxz
sbb
push
jp
call
lahf
xor
lds
js
lods
rorl
jo
leave
loopne
es
mov
icebp
cmc
or
cmp
xchg
push
mov
inc
mov
sti
cmp
xchg
scas
add
inc
aas
xlat
and
fnsave
hlt
stc
and
jmp
movsb
ds
lcall
loopne
jbe
clc
xrelease
xchg
adc
cli
xor
mov
es
jb
pop
cmp
xchg
fldl
dec
jb
stc
add
aam
xchg
bound
sub
and
dec
hlt
popa
sbb
pop
xor
popf
pop
mov
mov
cmpsb
push
adc
sub
lock
in
enter
imul
xchg
pop
sub
adcb
add
mov
dec
sar
add
in
push
jmp
dec
insl
sub
push
loopne
out
mov
xor
fstpt
jne
pushf
jnp
call
in
mov
mov
jmp
ljmp
les
sbb
and
movsl
cs
sub
and
cmp
ss
mov
xchg
jmp
pop
aaa
xchg
mov
cmpsb
xchg
dec
or
mov
iret
xchg
aam
in
xor
fistpl
sub
mov
mov
es
sub
inc
fdivrs
jg
sbb
sbb
jecxz
cmp
jecxz
push
cmp
das
aad
jp
mov
push
jecxz
repnz
out
insl
xchg
sub
popf
int
cmp
push
mov
push
loop
in
inc
repz
cld
scas
roll
aam
xlat
ljmp
pop
push
and
cmp
repnz
call
adc
in
ss
xchg
mov
cmp
fnstsw
data16
dec
pop
pop
push
and
lret
adc
dec
jo
mov
mov
inc
cmp
cmp
faddl
mov
sti
mov
ds
adc
movsl
or
sub
test
into
inc
mov
mov
loop
aam
push
and
daa
pop
das
arpl
into
subb
sbb
xchg
xchg
in
lea
and
push
inc
scas
es
xor
push
xor
dec
inc
push
mov
addl
pop
lods
pop
push
mov
sbb
or
stos
xchg
or
cmp
mov
scas
inc
xchg
scas
bound
orb
jecxz
pop
loope
mov
dec
fs
in
bound
lret
nop
fdiv
push
mov
cmpsb
cmp
mov
cld
sub
push
jmp
incb
pop
jo
or
and
pop
fidivs
sbb
pop
adc
pop
mov
clc
lods
dec
and
insl
fdiv
xchg
cmp
std
shrb
pusha
xchg
jp
sbb
cmp
mov
mov
adc
sahf
or
add
int
das
hlt
pop
cmp
jo
mov
jmp
aaa
scas
bound
sub
push
fcompl
movsb
xor
notb
mov
outsb
cmp
xchg
sub
push
cmp
fistpl
push
loope
aam
pushf
rcll
fistpll
add
inc
pop
mov
inc
dec
cmp
sub
lret
rcl
mov
mov
lods
cld
cwtl
push
les
cli
out
hlt
mull
push
push
jae
push
mov
sbb
push
push
pusha
aam
shlb
pop
aas
sbbl
aad
sbb
mov
adc
shlb
mov
les
enter
ljmp
cwtl
lods
dec
sub
push
xchg
int
mov
lods
mov
jae
daa
in
dec
test
test
int3
pop
movsb
push
mov
addr16
das
mov
or
sub
int3
pop
aaa
mov
jnp
push
jo
jmp
hlt
stos
jne
dec
int
cwtl
mov
repz
push
jl
loope
andb
jbe
call
ja
cmc
cmp
or
popf
adc
adc
jmp
cwtl
ret
ja
push
cmp
clc
imul
cmp
shll
sub
inc
rcrl
and
call
cmp
push
out
dec
das
xchg
push
fdivrs
dec
mov
push
lret
push
iret
orl
cmpsb
loop
add
push
int3
pop
sbbb
jb
imul
xor
inc
rorl
adc
fidivl
jbe
and
dec
inc
jne
popa
outsb
pop
add
mov
rclb
sbb
or
and
lret
sahf
outsl
cli
push
les
adc
loope
xchg
and
shrl
ljmp
push
lahf
gs
jl
lret
mov
mov
cmp
mov
adc
jne
mov
pop
vrsqrtss
or
push
clc
pusha
pop
inc
or
xlat
mov
imulb
out
aam
mov
push
inc
gs
add
and
popa
and
xchg
dec
mov
pusha
adc
sub
or
jb
call
and
sahf
fsubrs
lret
inc
mov
pushf
mov
cmpsb
je
sub
or
cmp
sbb
jo
jnp
cli
xchg
push
in
pop
mov
dec
movsb
mulsd
mov
lea
mov
mov
outsb
das
mov
call
inc
push
nop
mov
out
xlat
out
imul
inc
jp
mov
xor
outsb
dec
fidivrl
cld
shrb
push
lcall
inc
push
mov
fnsave
cmp
popa
movsl
ljmp
jp
mov
or
fs
mov
subb
lods
movsb
xchg
stos
lds
and
fsubl
mov
adc
ror
mov
in
sub
bound
mov
mov
adc
cld
dec
sbb
pop
push
jb
jg
pop
add
xor
icebp
add
test
or
sbb
push
rcr
ss
add
push
pop
pushf
pop
cmp
fwait
test
inc
pop
ret
add
scas
adc
xchg
xchg
push
loopne
loope
adc
lcall
js
sahf
pop
inc
push
ret
cmp
popf
adc
pop
ror
or
dec
sbb
sub
in
out
pop
xor
dec
push
cmpsb
and
cld
cltd
xor
xor
movsb
pop
or
xchg
sub
mov
and
inc
das
and
jnp
fisttpll
and
cmp
or
mov
test
pop
xchg
jecxz
in
cmpsb
push
in
adc
jecxz
mov
sub
lods
xlat
in
mov
loopne
xchg
xchg
into
add
or
jne
adc
mov
push
pushf
mov
lods
xchg
sti
sbb
or
adc
xor
bound
dec
sbb
sarb
cmp
pop
loop
daa
sarb
adc
fimuls
mov
test
mov
pop
int
pushf
lcall
mov
jae
push
mov
lock
fs
loopne
scas
mov
dec
mov
mov
dec
add
pop
and
leave
sahf
out
or
iret
and
cld
mov
cmpsb
pop
inc
sar
xor
movsb
adc
mov
push
mov
test
jns
imul
movsl
cmp
inc
inc
dec
stos
add
int
mov
adc
bound
repnz
jne
dec
clc
ja
add
bound
movsl
shl
lods
mov
mov
movsl
or
sub
mov
xorb
add
or
jns
clc
in
jg
or
xchg
mov
in
rcll
pop
xchg
testl
mov
stc
sbb
and
subl
and
jmp
sub
sbb
test
jnp
sub
andb
mov
sbb
in
jl
sbb
xor
and
or
inc
sti
scas
add
lret
fidivs
scas
pop
mov
push
outsl
dec
ss
or
ja
dec
xor
inc
inc
add
cltd
push
fsubl
xchg
dec
push
decl
nop
cld
inc
push
and
aad
jo
enter
aam
cli
jg
das
inc
int3
mov
or
lret
subl
fistpl
icebp
cli
cwtl
std
cmpl
push
shrb
fstpt
xor
ror
mov
cmp
mov
in
inc
inc
stos
loop
rcr
inc
addr16
shr
lods
mov
sub
or
cs
outsb
ja
mov
push
xlat
lret
and
lock
sbb
cmp
fadds
fists
mov
fs
test
stos
ss
imul
push
cmp
lea
jnp
fcmovbe
adc
mov
adc
ja
jo
and
fwait
or
in
leave
loopne
cmpsl
adc
add
cmp
fwait
push
mov
inc
fldl2e
push
add
sti
jp
add
jecxz
jno
pushf
xor
jno
iret
arpl
loopne
add
xchg
adc
bnd
inc
out
aam
push
and
sub
sahf
xchg
in
shrb
sbb
hlt
jecxz
sub
or
ljmp
ljmp
add
clc
popa
jne
jp
add
test
fnstcw
sbb
and
enter
xor
xorb
les
in
gs
pop
push
lcall
aam
xor
cmp
adc
in
jbe
aaa
out
cmp
add
mov
mov
mov
cltd
push
xor
push
add
jnp
ljmp
neg
cltd
out
leave
inc
popf
xchg
inc
std
scas
xchg
fistpll
fdivrs
adc
mov
iret
fbld
out
decl
xchg
lahf
dec
imul
loopne
es
cli
or
nop
sub
mov
js
push
jbe
repnz
mov
pusha
and
mov
loop
mov
add
mov
dec
jns
xor
inc
sub
int
cmp
sbb
xchg
out
mov
mov
jno
inc
lods
mov
pop
mov
adc
movsl
fs
xorl
mov
dec
mulb
fucom
lahf
or
pop
in
repz
or
imul
xchg
push
test
sarb
inc
sbb
ja
daa
cmpsb
pop
push
dec
cmp
scas
ficompl
ja
adc
imul
fst
in
inc
inc
pop
scas
add
mov
fldcw
loop
push
mov
decb
ss
roll
aas
jnp
aas
and
cmp
xor
lea
xchg
aas
fistpl
aad
lods
or
into
push
test
adc
in
pushf
push
jbe
test
arpl
jns
lock
mov
cmp
push
aad
cmp
insb
sub
loope
push
shl
mov
mov
test
mov
dec
adc
pushf
xchg
add
inc
add
xchg
xchg
cmp
push
mov
movsl
das
int3
cld
add
jnp
dec
sbb
jno
clc
je
inc
sub
in
or
dec
cld
iret
das
cmp
fnstsw
loope
stos
pop
subb
test
jecxz
insl
sub
mov
inc
add
mov
subl
sbb
jns
mov
sub
or
cmp
xchg
xchg
bound
js
push
test
mov
and
cmp
jae
mov
push
nop
push
add
outsl
popf
cmpsb
fldl
xchg
adc
je
das
mov
testb
or
jmp
push
sbbl
mov
dec
pusha
iret
cmpsb
aad
sub
xchg
ljmp
xor
stos
div
inc
hlt
adc
rol
aam
shrb
dec
xor
push
dec
xlat
movsb
dec
fs
imulb
mov
enter
mov
hlt
repz
mov
iret
mov
jnp
mov
fisttpll
testb
jecxz
mov
ret
fists
or
int
dec
mov
cmp
loope
add
mov
pop
cmp
xor
arpl
outsl
sti
xchg
mov
repnz
out
jmp
pusha
rcll
cmp
int3
outsb
mov
push
mov
pop
inc
jbe
cmp
xchg
sahf
popa
pop
pop
xchg
xor
insb
push
das
notl
jnp
aam
mov
inc
xor
jbe
pop
rcl
or
xchg
hlt
push
inc
push
mov
ja
or
sbb
test
xor
cmpsl
repnz
adc
mov
mov
xchg
outsl
testl
aaa
jnp
das
js
mov
add
sub
lock
inc
mov
sub
inc
aam
addb
dec
insl
inc
mov
out
mov
out
std
hlt
mov
stc
mov
dec
mov
add
adc
xlat
sub
inc
inc
xchg
mov
fdivrl
rcrl
jns
mov
or
lock
aas
inc
dec
in
add
ret
lahf
jae
adc
fidivrl
lret
push
gs
add
in
std
mov
push
jg
andb
lret
popf
dec
mov
in
sbb
leave
outsl
aaa
loopne
adc
outsb
shlb
hlt
and
jecxz
and
push
cld
pushf
inc
pop
daa
cmc
push
jbe
out
sub
scas
lcall
xchg
movsb
jo
mov
sahf
test
fisttpll
xor
sub
xlat
pushf
push
lret
cmp
stc
pushf
xchg
pushf
xor
xchg
or
dec
lret
sub
bound
adc
cmp
pop
fmull
shrl
xor
jns
std
jp
sbb
pop
push
popf
leave
xor
clc
fldenv
inc
scas
push
testb
js
push
mov
xor
xor
dec
out
sub
cld
std
adc
or
sbb
dec
bound
movsb
clc
push
sub
adc
aad
rolb
adc
repnz
shll
sub
popf
jl
fs
xchg
sbb
mov
arpl
out
pop
jae
adc
ds
xchg
pop
std
cmp
aam
sub
mov
ss
idivl
fadd
sub
cmpsl
imul
lret
dec
xchg
js
cmp
leave
push
cltd
jns
inc
sub
rcrl
cmp
int
and
ss
pop
xor
dec
push
pop
dec
fadds
lret
cmc
in
cwtl
mov
out
jae
aaa
add
sbb
pop
jecxz
rcrl
jle
mov
aad
mov
and
lods
sbb
test
daa
arpl
adc
ret
or
jg
mov
inc
and
and
jmp
jge
hlt
test
dec
mov
dec
insb
shll
test
or
test
or
adc
test
push
pusha
mov
cmp
add
dec
bound
test
stos
push
xor
aad
std
pop
dec
mov
out
repnz
add
iret
sbb
mov
lea
push
hlt
pop
xacquire
sarb
cs
mov
adc
mov
jg
aad
push
loop
push
xor
aas
jbe
pop
cmp
and
mov
outsl
mov
push
add
notb
cld
sbb
cs
cwtl
int3
push
testb
dec
jp
xchg
mov
xchg
dec
pop
mov
sbb
cli
lock
mov
int3
sbb
daa
test
add
pop
dec
add
push
shll
mov
or
push
mov
push
nop
cmpl
pop
lret
inc
pop
adc
or
int
roll
push
sbb
pop
insb
adcl
in
loope
cli
xchg
int3
push
pop
mov
jecxz
push
xor
cwtl
imul
adc
nop
pop
mov
ficomps
or
xor
out
sub
dec
les
mov
aaa
cld
push
addb
push
dec
pop
jns
pop
inc
idivb
xchg
nop
xor
mov
xchg
ja
adc
mov
icebp
inc
movsl
dec
add
push
insb
stc
add
and
pop
scas
xchg
cmpsb
andb
push
adc
fidivl
out
jge
stos
negb
sub
adc
icebp
test
loopne
mov
adc
fsubr
pop
sub
loope
inc
insl
inc
popf
insb
inc
aam
push
jnp
shll
popa
daa
sbb
outsb
add
std
stos
hlt
jg
call
pop
cmp
jmp
pop
push
and
sahf
jnp
pop
mov
in
push
push
jnp
movsb
push
cwtl
scas
rolb
lds
push
rcrl
pop
in
cmp
xchg
das
stos
xchg
lgs
mov
ds
daa
sti
stc
fidivrs
sub
mov
sub
cmp
rcrl
jnp
rol
dec
push
push
jb
pop
xchg
addr16
std
icebp
cmp
jmp
out
shl
mov
es
jnp
jo
sub
js
jp
outsb
out
sbb
negb
inc
addr16
popa
popa
call
add
popf
inc
xchg
fidivs
xchg
mov
popf
inc
pop
in
or
cltd
sub
xchg
insl
xlat
clc
lea
inc
subl
mov
mov
cwtl
stos
ljmp
add
popf
jecxz
jecxz
inc
or
pop
jb
enter
sbb
cmc
jb
xlat
and
push
push
cmp
clc
out
pusha
shlb
nop
in
lock
xchg
jp
inc
cmpsl
shlb
dec
in
push
sbb
jb
add
adc
fmul
and
push
insl
repz
arpl
jb
test
int3
test
js
sahf
fwait
mov
out
mov
popf
int
repz
xchg
mov
xor
jb
ficomps
imul
jb
push
outsb
popa
mov
mov
cltd
mov
cmp
jle
mov
sbb
pop
xor
in
out
out
cmp
sub
loope
mov
rcl
das
cli
stos
push
iret
pop
adc
inc
jp
xor
into
xlat
push
pop
notl
aad
andl
sub
inc
mov
sub
and
stos
cmp
sbb
ljmp
cmpsb
xchg
fnsave
mov
add
xor
and
sbb
jno
lcall
mull
movb
hlt
jne
push
jno
adc
pop
mov
ds
and
loope
scas
aas
or
shrb
lcall
mov
mov
cli
rcll
insl
xchg
popf
data16
mov
icebp
jle,pt
loopne
add
pop
dec
adc
lcall
push
aam
mov
pop
clc
push
mov
sub
xorb
xchg
push
test
adc
mov
fs
xchg
fistpl
mov
outsb
mov
push
rol
in
sub
mov
loope
xchg
xor
testb
inc
mov
mov
inc
sub
mov
enter
dec
into
cld
sub
out
pop
mov
push
outsb
inc
es
lds
ret
push
xlat
jno
dec
daa
and
mov
add
aad
mov
xor
sub
sbb
or
jb
adc
js
xchg
mov
mov
mov
test
mov
mov
jno
rcr
push
xchg
into
or
or
sub
aas
clc
out
nop
add
dec
pop
dec
bnd
xchg
push
push
das
insl
mov
lahf
xchg
lcall
cmpsb
or
cld
adc
cli
into
mov
idiv
jmp
inc
or
fidivs
lds
outsl
jno
addr16
mov
gs
sub
cmp
lret
test
mov
push
and
es
aaa
push
lods
or
test
adc
cmp
lock
orl
jmp
nop
int3
dec
jg
repnz
pop
in
cli
mov
xchg
xor
inc
mov
cmpsl
dec
rcrl
sub
out
shll
add
out
outsb
jb
les
jnp
aad
divl
call
add
xchg
inc
std
mov
or
cltd
xchg
sbb
push
outsl
jmp
bound
nop
mov
push
xchg
adc
cvtps2pd
repnz
sbb
insb
out
push
sbb
sub
sarb
imul
xor
or
jg
add
mov
fldt
inc
int3
fs
aad
mov
repz
arpl
ljmp
sbb
or
sbb
mov
mov
shll
pop
repz
ds
dec
lds
xor
lds
dec
add
clc
test
pop
mov
jno
xchg
mov
mov
dec
dec
pop
dec
jg,pt
sub
pop
movsl
pusha
mov
and
fs
push
xor
push
xchg
leave
jle
pop
mov
pop
pop
mov
jmp
push
push
cli
loope
dec
dec
stos
movsl
ret
mov
xchg
pusha
sub
lret
imul
add
enter
cltd
dec
or
add
mov
ret
mov
das
or
sbb
mov
dec
or
test
sarb
and
pop
ret
stc
pop
inc
push
mov
cmp
jno
push
pop
pop
loopne
sub
and
and
pop
cmp
rolb
sahf
jge
loopne
ja
sarl
lods
dec
nop
lea
mov
pop
dec
int3
inc
mov
or
push
push
subb
pop
mov
mov
imul
lret
push
andl
adc
sbb
outsb
es
add
fisttps
sbb
imul
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
or
pushf
xor
addb
dec
dec
sub
mov
sar
xor
lcall
les
aas
xchg
pusha
das
stos
sbb
xchg
pop
adc
sbb
idiv
sbb
mov
jbe
fsubr
pop
mov
scas
in
faddl
adc
xchg
sbb
dec
ficomps
sbb
jp
add
jecxz
mov
add
fbld
lds
arpl
jb
cmp
jno
pop
sub
stos
jno
or
stc
sbb
sub
fildll
mov
mov
adc
xchg
push
xor
mov
je
loopne
daa
test
cmpsb
jmp
sti
popf
jne
jb
push
mov
repnz
test
in
daa
leave
loop
cmp
pusha
and
sub
cmp
sub
test
popf
rcrb
jno
mov
sub
js
fcompl
mov
mov
push
sbb
fnstenv
outsl
stc
dec
inc
fwait
not
inc
loop
rclb
cmp
mov
lcall
aam
xor
vaddpd
sub
pop
out
movsb
cmp
rolb
xor
loopne
xor
cmp
mov
ja
loopne
or
dec
pop
ret
pop
mov
dec
test
sti
out
pop
jmp
add
dec
sub
add
and
mov
sbb
jo
adc
flds
jnp
and
dec
add
out
out
pop
and
cwtl
ss
fstpt
push
cmp
push
ret
add
jne
mov
ret
mov
shrb
into
or
fwait
leave
or
mov
mov
bnd
out
std
mov
cld
imul
enter
ret
paddq
pop
movsl
sar
loope
mov
pop
mov
push
lods
sbb
test
and
mov
pop
mov
lret
sbb
pop
jl
stos
dec
mov
idiv
aad
or
cmpsb
dec
shr
and
jp
movsb
adc
popf
inc
pop
rcr
in
loop
dec
movsl
test
pop
and
sub
push
test
aas
mov
mov
add
jecxz
rcrb
xchg
aas
mov
and
mov
jg
das
in
fwait
adc
es
fiaddl
in
pop
dec
or
mov
or
push
ret
jae
push
notb
call
push
cmpsb
fidivrl
sbb
sub
ljmp
lret
jg
test
push
or
mov
lahf
enter
xor
cli
cmc
jo
in
loop
pusha
mov
clc
ret
push
mov
adc
add
fs
inc
push
sahf
std
popl
stos
js
mov
push
cli
mov
xchg
adc
loopne
mov
popa
stos
ret
shl
xchg
cmp
push
roll
ds
jae
jge
cmovg
push
xor
mov
cli
mulb
enter
pop
cs
and
flds
imulb
lock
outsb
pop
or
and
mov
or
mov
jge
cwtl
xor
dec
xchg
jmp
jle
add
sar
aas
data16
mov
adc
repz
pop
jle
cmp
sub
loopne
mov
clc
lret
ljmp
loope
movsb
sbb
mov
sub
insb
out
add
dec
mov
push
data16
mov
adc
lds
add
les
adc
ret
pushf
and
es
xchg
stos
test
mov
dec
js
cwtl
sub
push
shrb
mov
adc
das
xor
push
xchg
cli
out
dec
pop
pop
mov
cmp
mov
jns
imul
lds
mov
and
sbb
rolb
in
push
mulb
push
enter
pop
and
and
inc
sub
push
mov
xor
inc
inc
fiaddl
push
pop
push
mov
xchg
lock
push
cld
cli
jmp
pop
inc
push
cs
hlt
popa
in
sub
pop
dec
xor
imul
jb
fldl
jnp
arpl
shlb
lods
test
addl
inc
in
lret
dec
fdiv
mov
in
addr16
or
dec
add
aas
sbb
out
mov
and
sbb
mov
cmp
outsl
aam
xchg
fadds
fidivs
jp
or
push
cmp
int3
popa
xchg
test
scas
add
pusha
jnp
push
xlat
jbe
aam
jne
inc
iret
mov
icebp
jbe
mov
jne
cmc
sbb
test
in
jg
pop
pop
in
mov
stc
cmp
scas
or
repz
and
xorb
cmp
stos
mov
mov
jbe
das
jecxz
out
mov
xor
cld
cmp
or
push
aaa
or
cmpsb
shll
jae
and
je
xchg
sbb
movsl
inc
sbb
cmp
mov
sub
mov
sti
scas
repnz
sbb
mov
push
pop
xorl
cmc
pop
std
add
subb
jne
add
fiadds
jmp
test
xlat
push
adc
jo
xchg
stos
push
mov
loopne,pt
inc
mov
js
out
sub
inc
insl
in
scas
cmpsl
loopne
jae
jg
and
dec
mov
sbb
sbb
icebp
daa
das
jge
icebp
pop
inc
add
pop
ror
jg
jge
xchg
pop
xchg
and
pop
sub
xor
jl
adc
sbb
cmp
inc
mov
dec
sarl
fcomps
add
inc
lods
mov
gs
xor
test
repz
icebp
call
in
xor
mov
imulb
in
repnz
push
enter
das
or
je
xchg
in
sbb
movsl
repz
stos
out
subb
pop
or
test
in
fwait
push
ds
dec
push
pop
fs
jge
mulb
scas
out
ret
xor
les
sub
or
rcrb
mov
mov
jae
sbb
fstps
insb
jp
loop
cmc
leave
and
loope
mov
daa
xchg
inc
xorb
or
pop
cmp
mov
loopne
test
repnz
ljmp
fincstp
jae
inc
sbbb
xchg
out
mov
add
pop
mov
daa
fidivs
ljmp
jp
xor
cmp
sbb
ss
push
xchg
or
enter
xchg
dec
enter
das
iret
mov
fistpll
mov
mov
imul
fimuls
outsb
in
data16
or
lahf
test
sti
cmp
adc
arpl
mov
icebp
sub
ds
repz
mov
test
lahf
sbb
mov
punpckldq
nop
insb
push
loope
loope
xor
fcomps
les
cmc
push
xor
and
mov
push
inc
sub
dec
ret
jne
cmp
xchg
cmp
lods
inc
out
cmpsl
out
scas
pop
imul
mov
mov
sbb
cmp
nop
insl
cmp
fcoml
mov
out
in
std
daa
call
jle
mov
shrb
push
fstsw
mov
test
les
pop
pop
in
fstps
test
and
jle
adc
xchg
testb
lret
hlt
and
std
mov
xchg
ffreep
mov
dec
dec
pop
mov
cs
sarb
in
jns
adc
cltd
cmp
inc
pushf
push
pop
push
scas
sbb
stos
adc
jbe
dec
inc
xchg
cli
cmp
std
push
jmp
aad
push
sub
mov
jb
cwtl
andl
adc
testl
adc
sbb
push
push
xchg
test
mov
lock
push
pop
mov
sbb
jbe
stos
xor
or
aad
lds
shll
lea
data16
pop
mov
jmp
push
cmp
out
repnz
cltd
gs
cwtl
pop
insb
out
ljmp
or
int
fisttpll
xchg
xor
adcl
inc
sbb
jae
repnz
or
sbb
loopne
out
mov
int
xchg
les
jnp
pmaddwd
mov
test
inc
repz
adc
mov
fmuls
bound
jecxz
ficoms
and
popa
push
loope
loope
scas
mov
pushf
pop
and
outsb
stos
cmp
jge
add
mov
or
mov
jg
pop
dec
fisubl
inc
mov
mov
push
in
inc
and
testb
inc
in
dec
mov
xor
xchg
int
mov
js
inc
sbb
cli
fldt
adc
add
leave
jecxz
and
jl
and
xor
lods
dec
hlt
or
iret
call
xchg
push
jnp
add
inc
pop
stos
dec
ds
push
cmp
repz
ja
aaa
test
rcl
loope
xchg
aad
add
add
add
fwait
sbb
and
sub
and
pop
xchg
pop
mov
loop
mov
mov
jmp
cmp
in
mov
std
es
inc
test
or
repz
adc
dec
ret
es
inc
cmp
ds
jmp
pop
and
jle
aam
sub
cmp
pusha
and
sub
adc
push
dec
mov
mov
lods
sarb
insl
push
adc
inc
mov
xchg
pop
shrl
test
lods
push
shll
cld
or
roll
mov
cmpsl
mov
lret
idivb
leave
push
out
add
outsl
xchg
pushf
aam
dec
mov
stc
inc
push
adc
lock
xor
and
in
aad
addl
lahf
ljmp
mov
lods
xchg
pusha
sbb
loope
pop
add
ds
pop
sbb
mov
repz
sub
sbb
xor
testb
mov
xchg
push
fucomp
cwtl
push
sbb
lock
add
test
icebp
or
shrl
cmpsb
mov
xor
int
insl
mov
mov
into
pop
xchg
mov
int
xchg
popa
shrb
inc
or
subb
lds
arpl
fwait
loopne
inc
sbb
push
cmp
jo
adc
insb
daa
mov
inc
add
test
sub
xor
push
repnz
inc
movsb
repnz
sar
sub
cmp
rorl
and
sar
das
pop
lods
or
cmc
pop
push
xchg
outsl
mov
xorb
out
sbb
mov
int3
pop
inc
mov
imul
int3
xor
pop
dec
fstl
inc
dec
sub
rcrl
and
mov
fnstsw
xchg
add
sbb
lret
dec
xchg
cmp
fdivs
push
inc
cmpsl
fs
mov
outsl
pop
imul
xchg
dec
pop
xchg
jecxz
test
pop
dec
jp
sub
movsl
xchg
mov
out
inc
jp
icebp
push
ficoml
xchg
mov
or
and
lahf
xorb
sbb
fidivrs
push
je
ljmp
dec
mov
test
out
jne
xchg
xchg
dec
es
push
pop
jo
xchg
add
add
or
lods
or
sahf
push
xor
inc
sbb
pop
push
push
lahf
cmp
jne
xchg
or
out
adc
out
std
cmpsl
ret
sub
loopne
or
push
into
or
testb
lds
sbb
into
int3
mov
mov
inc
fmul
mov
lods
pop
jmp
sahf
or
aas
or
xchg
and
sti
xlat
fcoms
adc
shlb
out
xlat
xor
mov
pop
xchg
jns
sub
faddl
dec
inc
push
repnz
mov
fnstenv
cmp
and
out
xchg
cmp
add
aaa
jecxz
xchg
das
out
das
cmp
jmp
and
out
pushf
inc
mov
dec
pop
xor
xchg
adc
test
mov
cmp
addr16
data16
sbb
push
dec
imul
arpl
push
notl
mov
dec
or
iret
xor
add
bsf
fsubrl
pusha
mov
out
xchg
cmp
or
pop
in
shll
pop
mov
jmp
ret
push
repz
mov
xor
pop
daa
or
cs
mov
movsl
insl
aaa
iret
sbb
sti
arpl
add
cmp
fisubs
add
cmpb
scas
sub
push
mov
dec
mov
cld
aam
cli
dec
popf
push
mov
fiadds
test
cmp
mov
add
xchg
add
add
xchg
mov
jecxz
subl
jp
pop
rcr
fsubl
jmp
fs
cmpsb
mov
call
and
cmpsl
lea
mov
into
cltd
stc
mov
jp
leave
test
jb
jle
lods
sbb
addl
adcl
ja
mov
jl
adc
or
jmp
pusha
push
iret
xchg
out
sub
jnp
mov
fimuls
enter
test
jb
inc
lds
pop
jbe
repz
lods
cli
push
and
xlat
xchg
dec
inc
lds
int
sbb
rorl
fimuls
imul
dec
jl
push
and
stos
inc
sub
xor
inc
inc
inc
mov
dec
and
sub
fbld
adc
imul
out
jl
cltd
inc
aaa
lcall
repz
inc
pusha
mov
push
mov
mov
ja
adc
in
outsb
stc
mov
lods
sti
ja
xor
lock
cmp
test
clc
sahf
fs
fwait
inc
add
sub
cmovno
cmp
inc
loope
and
sbb
popa
out
dec
xchg
fadd
je
cmp
dec
inc
jae
and
ret
mov
pop
push
push
xchg
cs
cmp
add
jb
xchg
test
cmc
dec
xchg
push
sub
xchg
pop
arpl
mov
mov
cs
into
mov
call
xchg
mull
mov
cwtl
arpl
inc
mov
xchg
rorb
testl
inc
or
sti
mov
inc
pop
iret
aad
mov
jg
cmc
inc
mov
mov
int3
mov
add
mov
negb
lea
imull
mov
out
ret
je
mov
jg
lcall
je
add
mov
push
loopne
cmp
push
jae
ja
rcrl
sub
test
xchg
push
or
pop
jnp
jmp
push
sbb
sub
dec
add
data16
dec
test
test
xchg
or
xor
rcrb
cmpsb
je
sbb
pop
lret
test
xor
test
sbb
call
cld
lea
insl
inc
js
dec
xchg
mov
fwait
mov
es
mov
pop
repnz
push
lret
mov
or
dec
stc
idivb
and
sarl
inc
arpl
fst
lcall
dec
cmc
sub
mov
sub
adc
subb
cmp
push
mov
dec
cmp
cld
xchg
fstpl
es
test
mov
push
in
pop
jg
jno
pop
xchg
in
fdivl
pop
mov
adc
sar
or
inc
inc
je
mov
inc
push
adc
aas
xchg
loopne
jo
inc
xlat
repz
das
add
adc
sub
mov
leave
enter
pop
cmc
ret
inc
and
pop
cltd
in
mov
cmp
pop
pop
fwait
enter
cmp
jae
dec
jns
dec
push
and
enter
mov
push
adc
int
xchg
sahf
insb
aas
dec
pop
push
sub
mov
jae
mov
jge
mov
cmpsl
and
fcompl
jb
lds
dec
lods
mov
popf
push
int
outsb
mov
jo
mov
inc
movsb
sbb
imul
push
lods
sbb
out
jnp
test
push
fildl
cmp
outsl
mov
lods
push
ljmp
jg
jb
cltd
ja
push
jne
iret
ds
daa
popf
movsl
or
cmp
lods
push
mov
scas
inc
out
cmp
stos
addl
cmp
push
and
adc
fldcw
fildl
test
lea
or
or
jne
frstor
jmp
xchg
std
aad
and
es
mov
adc
inc
ret
dec
sbb
pop
fcmovu
adc
or
add
ljmp
stos
pop
in
xchg
ljmp
mov
scas
imul
cwtl
inc
pop
jp
or
into
test
rcrb
arpl
and
and
pop
sarl
test
cli
imul
jmp
pop
sbb
in
jmp
pop
loop
rclb
push
sub
ficoms
mov
or
sbb
cmp
adcl
xor
pop
and
mov
nop
je
sbbb
push
out
shl
cmc
pop
and
xchg
sbb
fistpl
and
cmp
stos
or
pop
adc
mov
mov
jnp
add
gs
es
jecxz
popa
cmpsl
and
push
ret
fisttps
movsl
aam
mov
push
into
jge
ror
addr16
jecxz
lods
jno
xchg
push
je
shrb
test
insl
enter
sub
jl
push
pop
inc
add
in
pop
mov
mov
fs
int3
and
outsb
sub
scas
test
enter
dec
adc
sarb
lock
stos
push
xchg
je
lods
push
add
popa
mov
aad
adc
pushf
push
movb
push
in
out
out
icebp
rcrb
cmp
push
ficoml
cmp
xor
dec
loopne
mov
sub
mov
lea
popf
es
or
sub
outsb
addr16
inc
pop
js
mov
or
or
cmp
dec
dec
pop
push
pushf
bound
push
push
lcall
and
sbb
rolb
mov
adc
lods
leave
incb
iret
cmp
popa
xor
jl
mov
push
out
ficoml
push
fstpt
push
fwait
lods
in
adc
push
into
jno
rclb
adc
push
out
hlt
jo
mov
and
por
loop
jo
js
mov
mov
fidivl
adc
popa
dec
fucomip
fsubrl
repnz
push
jecxz
daa
std
cmpsl
add
push
push
mov
xchg
inc
cmp
rolb
adc
mov
decb
ret
inc
repz
sarb
cmp
sbb
pop
addr16
scas
and
sub
icebp
insb
sbb
lcall
jo
add
push
xchg
pop
add
je
or
pushf
lret
xor
inc
lret
in
negl
pop
sbb
jo
fisubl
cmp
adc
movsl
clc
das
push
xchg
addb
pop
xor
outsb
or
mov
int3
push
clc
scas
mov
xchg
loop
test
lds
sbb
dec
mov
cmp
cmp
cmp
mov
and
fcomp
cmpl
xor
stos
pop
mov
fistps
sbb
and
xchg
out
mov
sub
push
out
inc
and
and
inc
in
movsl
nop
outsb
cli
aad
inc
loopne
fimuls
push
sub
jbe
icebp
push
adc
jecxz
mov
gs
cmp
fsubl
jmp
aam
xor
adc
in
mov
sbb
lods
jge
dec
fs
cwtl
sbb
loop
jne
cmp
es
test
pop
je
inc
or
idivb
xchg
mov
in
xchg
sarb
ja
sub
js,pt
xor
in
xchg
dec
add
popa
popf
and
ret
mov
xchg
aas
cltd
add
pop
data16
sbb
mov
icebp
pop
das
fisubrs
jp
sbb
xchg
sahf
rclb
das
test
lahf
mov
xchg
scas
jmp
inc
cmc
mov
cmp
jb
sub
cmp
add
out
jp
in
mov
xchg
icebp
shrb
ud1
xchg
fsub
lock
xchg
popf
sub
xchg
or
or
pop
inc
mov
aad
test
mov
cltd
insl
in
or
or
xchg
insl
les
and
test
xchg
inc
imul
xor
jecxz
stos
push
leave
insb
inc
lea
mov
mov
hlt
outsb
cltd
dec
jo
out
and
xor
xchg
inc
hlt
stos
push
movsl
scas
xor
sub
jle
imul
fadds
pop
sub
call
adc
stc
fwait
adc
js
out
jp
in
jle
xor
jno
jecxz
jg
xor
hlt
add
mov
lds
rcrb
lret
hlt
int3
sbb
dec
pop
lods
int3
xor
or
in
lods
dec
xchg
jns
stos
ljmp
insl
cmp
cmc
pop
ljmp
shll
outsl
jb
xchg
add
and
sub
mov
cli
pop
cmc
shll
pop
sub
idivb
daa
and
ljmp
xchg
fxch
and
jecxz
in
cltd
sub
ds
or
and
roll
jmp
cmp
movsl
arpl
sub
jno
out
ljmp
and
mov
fists
push
or
or
and
sbb
jb
xchg
int3
loope
subb
jmp
pop
sbb
sub
iret
dec
push
repz
leave
addr16
std
pop
xchg
outsb
mov
push
lret
pop
enter
fmulp
add
xor
sub
negb
popa
shrb
loopne
xor
cmp
fildll
enter
lock
sti
in
cmp
or
inc
jnp
mov
and
in
out
leave
sbb
or
pop
pop
mov
add
cld
cmc
adc
and
stc
cli
mov
or
enter
add
mov
xor
add
mov
push
icebp
sbb
mov
pop
cmc
inc
rcrl
jmp
xchg
cmpsb
xchg
jge
adc
jmp
xor
adcl
shlb
scas
fwait
mov
sbbl
mov
out
adc
push
iret
inc
loop
push
out
jbe
sti
xchg
arpl
pop
jmp
fadds
mov
cmp
dec
jecxz
xchg
jb
jno
sub
std
xchg
stc
sbb
push
inc
jno
pop
mov
std
sar
sub
fldcw
cmp
or
test
and
setne
mov
pop
leave
mov
in
pop
dec
and
and
sub
sbb
cld
fsubrp
test
sub
mov
mov
gs
mov
repz
es
cmpsl
jo
fsts
and
push
movsb
mov
xchg
adc
insl
outsl
push
fs
pop
xor
scas
fxch
inc
sarb
xchg
shlb
scas
fstpt
mov
leave
ret
jmp
sub
push
lock
adc
adc
and
sub
sub
add
loope
test
fld
push
xor
shl
jmp
cmc
aas
bound
sub
aam
inc
das
mov
das
int3
or
sbb
mov
lret
inc
sbb
mov
xor
jp
gs
pop
movswl
sub
push
lods
adc
xchg
dec
mov
in
inc
push
jmp
adc
mulb
inc
push
ja
sub
jecxz
add
pop
pushf
cltd
mov
call
clc
nop
movsl
xchg
mov
sub
fstps
imul
in
int3
dec
sub
dec
outsl
pop
push
adc
mov
aam
inc
jmp
xchg
fwait
aaa
sar
loop
loop
pusha
dec
cld
sbb
cld
or
cli
push
mov
jnp
jg
aaa
sbb
mov
adc
imul
jge
and
pop
pop
push
push
rcrb
cmp
xor
popa
movsb
leave
sub
or
repnz
inc
pushl
popa
test
mov
xor
test
scas
cmp
insb
cmp
cld
xor
in
xchg
push
xchg
mov
cmp
bound
xor
fmulp
loop
xor
push
cmpsb
div
in
xor
fnstcw
call
cmp
mov
or
xchg
cwtl
dec
fcmovbe
lahf
ljmp
dec
fdivs
ljmp
or
aaa
repz
cltd
inc
pusha
pop
fisubrs
shl
jg
sub
int3
add
mov
fisubs
add
jg
inc
and
cld
scas
test
lock
pushw
mov
pop
dec
or
lods
push
push
mov
and
mov
pop
jns
sub
pop
and
scas
inc
sti
push
xlat
mov
xchg
xchg
xchg
insb
aam
pop
add
cmpsl
fs
lods
jge
and
test
mov
or
mov
addr16
mov
sub
jge
dec
hlt
dec
sub
mov
add
mov
or
jae
adc
in
scas
jl
mov
jecxz
adc
scas
dec
aas
dec
lods
mov
in
imul
addr16
fimuls
lea
push
dec
add
outsb
xor
int3
rcrb
push
rcrb
or
in
xchg
adc
mov
inc
sbbl
xor
cli
aas
in
push
sbb
jmp
in
xchg
fsts
dec
jb
sbb
arpl
lcall
mov
shl
add
and
jg
leave
ds
mov
xor
cmp
into
and
jae
adc
icebp
stos
mov
cs
push
jecxz
or
hlt
fistps
pop
jne
jne
dec
mov
imull
mov
add
inc
cmp
sahf
stos
cltd
and
loope
mov
cmp
aaa
mov
fdivs
and
push
js
mov
rolb
loope
scas
push
movsl
pop
push
les
xchg
lret
loope
mov
bound
rorb
xchg
inc
cmp
in
scas
push
loop
dec
nop
and
test
scas
addl
xor
movsl
sarl
cmpsl
cld
mov
mov
inc
adc
inc
adc
incl
inc
or
and
stos
andb
jns
adc
mov
imul
or
dec
jecxz
push
push
or
rcrl
fisubrl
push
rcrl
cmp
lahf
inc
ja
js
cmp
sub
jo
lods
movsb
test
dec
cmp
cmp
iret
adc
pop
je
cwtl
scas
cwtl
movsl
ds
xchg
loopne
fsubrp
hlt
sbb
test
push
fcomip
fnstcw
int
jnp
sbb
lret
pop
mov
pop
sbb
lahf
aam
pusha
andb
cld
xchg
ror
roll
jle
shl
ret
add
mov
fadd
xchg
pop
pop
mov
test
or
push
lahf
sub
cli
arpl
aas
das
jo
dec
push
das
in
ds
cs
not
cmpb
movsb
es
add
mov
mov
ror
xor
jb
or
pop
dec
cmp
lods
mov
inc
lea
stc
inc
ret
sbb
jge
lock
mov
ss
mov
mov
pop
aad
lods
add
cmp
dec
xchg
fidivs
out
cmp
mov
out
icebp
out
push
mov
inc
jns
popf
aad
movsl
mov
ja
in
les
push
inc
imul
xor
sub
xlat
pop
sbb
lods
leave
fwait
loopne
push
int
jle
mov
into
fucomp
xchg
cltd
ficompl
inc
or
dec
add
mov
cli
iret
js
dec
mov
rcrl
adc
sahf
inc
push
adc
popa
xchg
pushf
jg
or
rcr
cwtl
mov
cmpsb
stos
jo
das
jne
fcmovnu
sub
mov
iret
cmc
cmp
add
xor
jne
jle
jno
add
fdivs
inc
xor
add
sti
mov
and
data16
aam
ret
push
sub
decb
daa
lods
cmpsl
sbb
insl
push
pop
shll
cmpsl
shl
ljmp
jbe
movsl
stc
ljmp
aaa
mov
mov
add
dec
push
mov
xor
fbstp
es
sbb
or
xor
mov
int3
sub
add
jo
rclb
jnp
out
pop
jns
flds
test
mov
and
sub
push
mov
adc
mov
mov
repz
xlat
cmpb
cs
mov
outsb
in
gs
repz
mov
mov
into
pop
fwait
into
push
mulps
and
or
xlat
dec
lahf
mov
iret
test
jae
fimull
adc
mov
scas
cmp
mov
pop
nop
andl
aas
addr16
dec
cmp
mov
jmp
inc
mov
sub
pop
add
mov
push
cmp
outsb
jno
call
pop
nop
jns
mov
lret
push
push
push
add
mov
shrb
lods
stos
loop
mov
jle
jge
inc
mov
das
jl
outsb
int
test
xchg
inc
adc
mov
lods
inc
cmpsb
pop
push
jle
jne
icebp
mov
xor
fldz
mov
ret
cwtl
mov
or
push
pop
pop
and
add
shr
insb
mov
aam
push
adc
add
mov
icebp
inc
shrb
lret
sbb
imul
pop
addr16
mov
pop
xchg
sbb
mov
and
incl
popa
fnstsw
xor
and
add
push
fs
or
sbb
pop
lods
adc
mov
push
pushf
or
fcos
insl
sbb
into
jmp
fsts
jns
imul
pop
mov
jns
xor
mov
ret
lds
and
xor
je
mov
sbb
jge
mov
push
ficoml
repz
jg
dec
lret
or
lahf
jns
add
jle
mov
into
out
adc
ret
sub
sub
repz
mov
and
push
das
into
push
pop
dec
fwait
scas
mov
aam
pop
insb
aad
adc
popf
test
jno
dec
es
sbb
and
mov
mov
repz
imul
jns
lods
rcll
enter
icebp
mov
movsl
rcl
add
mov
sti
cmp
xlat
div
mov
pop
and
insb
xlat
fdivl
adcb
leave
pop
fstpt
lret
movsl
aad
xchg
mov
mov
popa
adc
sub
xchg
das
popa
inc
jmp
hlt
outsb
mov
jae
jle
stos
push
es
jle
mov
add
bound
movsb
jl
inc
hlt
arpl
xor
cmp
sub
imul
rorl
mov
out
jno
or
lds
andb
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
adc
out
incl
addl
xorb
outsl
aam
mov
or
lea
jl
push
xchg
mov
insl
lods
dec
push
jns
mov
stos
adc
orb
popa
mov
rcll
lret
fs
mov
adcl
mov
adc
jmp
test
mov
and
out
pushf
das
inc
or
inc
decb
enter
or
divb
aaa
jge
mov
mov
pop
sbb
in
dec
xchg
cmovs
into
xorl
sub
pop
push
cld
pop
repnz
fldl
lcall
rcrb
mov
adc
and
cmpsb
jnp
add
sbb
cmp
xchg
jnp
sbb
lea
xor
cmp
xor
sub
or
cltd
push
insb
sbb
add
movsl
rcrb
add
loope
aaa
jl
pop
pop
out
subb
xor
xor
cmc
and
hlt
aam
les
fimuls
inc
paddusw
lds
mov
icebp
adc
insl
cwtl
lods
adc
jno
fbstp
sub
sbb
push
dec
pop
mov
inc
incl
lahf
jbe
push
jbe
sbb
dec
inc
adc
cmp
ljmp
push
sbb
sbb
jmp
xorl
sub
lods
ljmp
imul
push
mov
cmp
xor
xor
and
into
movsl
ror
adc
jmp
jbe
adc
adcl
mov
pop
leave
loopne
ljmp
adc
mov
sbb
mov
pushl
leave
sub
mov
fwait
mov
add
mov
lret
nop
shl
jbe
mov
xchg
or
daa
lods
sub
mov
xchg
arpl
arpl
sbb
divl
pop
into
popa
imull
inc
mov
xchg
test
xlat
out
out
push
arpl
lcall
adc
push
mov
fcmovu
and
push
fldcw
popf
clc
fimull
xor
dec
xchg
pop
sbbb
xchg
sub
add
arpl
fwait
sbb
jbe
jno
adc
sub
or
jmp
jne
test
test
and
mov
cmpsb
sahf
popf
lahf
pop
int
sub
pusha
xchg
cmpsl
jbe
sub
sbb
in
aas
fbstp
inc
xchg
jns
ds
aaa
add
nop
leave
mov
stos
in
sub
pop
or
ljmp
jmp
leave
xchg
ror
movsl
cmp
mov
pop
jle,pn
fdiv
pop
cmc
inc
xor
dec
shlb
jp,pn
push
push
pop
inc
or
mulb
scas
aam
ljmp
inc
push
mov
cli
les
dec
into
mov
repz
ficoml
pop
cmp
into
pop
pop
inc
out
fcomps
les
jo
or
out
sub
fwait
mov
icebp
adc
sbb
add
leave
inc
test
imul
and
sbb
call
inc
orl
shll
inc
xor
dec
or
xchg
testl
pusha
aaa
xchg
insl
or
lcall
inc
aaa
adc
push
lahf
ret
or
ljmp
pop
mov
rcr
mov
loopne
hlt
add
and
mov
bound
out
lret
sbb
mov
mov
inc
jnp
mov
add
xchg
and
cmp
cmp
jns
jle
cmpsl
cltd
jo
sahf
ljmp
lcall
andl
into
inc
or
scas
mov
mov
xor
jmp
push
out
mov
scas
mov
into
mov
dec
jne
outsb
ret
sti
sbb
sbb
pop
stos
lods
cli
scas
mov
jb
dec
cwtl
jg
aaa
push
push
push
out
es
bound
dec
dec
add
adc
and
fdivs
mov
mov
xor
aas
mov
xor
popf
movsl
andl
sub
ficomps
jle
push
sbb
xchg
lods
mov
loopne
add
out
cmp
pop
out
roll
mov
and
fwait
mov
or
cmpsl
ds
aaa
jle
sbb
adc
mov
iret
push
mov
or
cmp
mov
dec
dec
mov
push
rcl
jl
inc
in
ret
std
inc
sbbb
scas
rol
pop
and
test
aaa
stos
cs
dec
mov
ja
mov
insl
mov
or
loop
inc
jecxz
orl
pop
ja
int
je
add
sub
lahf
popf
add
ss
jne
das
je
hlt
fcomip
les
cmp
ret
sbb
mov
jmp
lret
pusha
int
add
das
sub
push
mov
ret
or
sub
mov
cmpsb
xor
push
incb
push
inc
jbe
gs
stos
andb
ffreep
in
adc
and
inc
xor
inc
mov
sbb
pop
inc
gs
pop
gs
stos
dec
xor
inc
mov
and
fs
bound
int
inc
jecxz
or
dec
jnp
or
ljmp
cmp
call
int
lea
ds
cld
push
scas
movsl
push
daa
jp
mov
dec
int
aad
cwtl
test
inc
inc
adc
or
push
gs
sub
cmp
pop
aaa
push
or
jne
in
or
ds
mov
add
sub
bound
adc
xchg
mov
push
ljmp
mov
adc
sub
jnp
mov
dec
adc
sar
fst
sbb
rorb
jbe
rcl
mov
xchg
loop
sub
fisttpl
test
popf
adc
pusha
jnp
mov
mov
das
adc
inc
mov
mov
loope
sbb
push
xchg
or
pusha
jns
fimull
movsl
popa
pop
dec
lahf
or
mov
push
inc
decl
push
data16
jo
mov
faddl
push
out
loop
xchg
jno
dec
gs
and
push
in
inc
lock
push
xor
lcall
lods
mov
inc
and
mov
or
pop
sub
loopne
lcall
cmc
in
or
outsb
popf
loop
and
push
adc
xchg
arpl
lock
jecxz
mov
xchg
pop
lods
xlat
pusha
cmc
sub
repz
jbe
cmp
inc
sbb
mov
adc
ret
xchg
cs
dec
push
pop
inc
cmpsb
sub
jns
stc
insl
mov
dec
and
cltd
fs
mov
outsl
sbb
dec
mov
sub
movsl
mov
xlat
inc
aaa
jne
int3
icebp
in
add
in
pop
xchg
pop
jns
push
xchg
mov
aad
jo
div
xor
out
inc
xor
jae
pop
push
mov
pop
imul
add
xor
fwait
mov
imul
jnp
push
sub
sbb
or
adc
xor
push
into
jp
jae
xor
in
ljmp
or
pop
in
aas
jo
in
or
je
mov
inc
sub
jmp
mov
mov
jnp
pop
xchg
and
sbb
insb
sbb
mov
adc
test
mov
add
xchg
xchg
int
jne
fldt
mov
pop
jns
inc
cli
jle
xor
repz
rcpps
add
push
imul
or
pop
xchg
adcl
jmp
push
inc
out
or
mov
test
pop
add
insl
cmp
adc
adc
sub
ljmp
push
std
dec
fldln2
push
pop
je
rorb
jecxz
add
mov
in
imul
inc
repz
or
jbe
int
dec
outsb
mov
andb
int
cmpsl
int
les
mov
inc
insl
js
adc
and
xor
or
sti
pop
pusha
adc
pop
xchg
rol
popf
ret
ret
ljmp
jb
cwtl
aaa
ljmp
mov
in
jns
add
adc
add
adcl
addr16
add
clc
sbb
and
cs
popa
imul
pop
sbb
aas
xchg
pop
mov
fs
fcmovb
inc
imul
mov
xchg
fnsave
xchg
sbb
lahf
mov
cmp
or
and
push
test
es
loopne
mov
jge
lahf
fwait
cltd
adc
push
sbb
xor
add
jp
dec
shll
aas
jae
pusha
hlt
nop
or
clc
pop
mov
fsubr
imul
jg
push
mov
call
pop
jno
rolb
adc
xchg
loopne
push
cmpsl
jnp
rclb
lahf
dec
int
addr16
adc
add
push
push
hlt
imul
arpl
jmp
aas
movsb
fisubrl
stos
rcrb
cmp
mov
call
out
arpl
pop
sbb
inc
mov
mov
mov
adc
scas
cmp
adc
int
and
cmp
xchg
shr
insl
repz
xor
aaa
mov
sti
inc
cmp
aaa
mov
and
dec
jmp
inc
add
ss
push
xchg
lods
sbb
daa
out
rcll
xor
notl
into
lock
mov
cmp
pop
cld
or
aam
add
pop
lods
rcrb
aas
add
sub
inc
dec
stos
push
mov
test
lea
dec
insb
push
xlat
sbb
mov
and
call
test
nop
test
adc
pop
sbb
jbe
sbb
jno
push
popf
ret
mov
dec
imul
mov
fdivl
mov
lds
dec
cmp
mov
jle
cmpl
fs
loop
imul
xor
mov
movsb
in
lods
rcrl
insl
mov
ret
ss
fstpt
inc
jle
sti
jge
push
mov
ljmp
cld
sbb
or
mov
stc
mov
les
stos
xchg
xor
stos
jns
mov
mov
iret
or
pop
repz
cmp
mov
xchg
adc
mov
es
mov
popf
testl
cmp
div
in
dec
push
hlt
call
hlt
adc
jle
or
adcl
roll
inc
adcb
dec
pop
imull
mov
push
cs
cltd
fcomps
push
inc
and
in
insl
ret
inc
sbb
xlat
dec
xor
jo
imul
cmc
call
in
sub
xchg
mov
adc
sub
decb
clc
insb
mov
inc
xadd
add
arpl
fnstenv
and
sub
mov
push
pop
jp
xchg
addr16
dec
call
xchg
inc
xlat
mov
jecxz
gs
pop
or
xchg
xchg
ret
push
iret
lock
daa
fldt
mov
ret
fucom
or
lahf
dec
adc
arpl
add
sbb
test
loope
idivb
fdiv
shlb
jmp
inc
pop
sbb
mov
jl
add
dec
test
daa
scas
cmp
sub
popf
mov
iret
xlat
sub
xchg
mov
mov
mov
repnz
adc
pop
je
jmp
notb
jg
test
inc
es
mov
sub
mov
push
add
sbb
mov
push
dec
js
pop
xchg
ljmp
js
mov
cld
adc
mov
push
xchg
mov
jmp
pop
and
cli
and
cld
or
xor
andb
fiadds
mov
out
cli
lock
in
dec
pop
adc
mov
in
inc
int
int3
fadd
inc
in
popa
mov
mov
jae
lds
xorl
sub
push
aas
rcll
out
add
rclb
aaa
aad
leave
sbb
inc
gs
jmp
subb
xor
ss
push
mov
jg
aaa
lahf
xchg
sahf
stos
sub
out
jle
sub
in
loop
cltd
push
or
jmp
sbb
dec
fwait
jo
imul
xchg
adc
and
or
push
imul
pop
shl
or
fdivs
pop
push
xchg
inc
repz
hlt
push
dec
mov
adc
pop
cmp
test
negl
outsl
mov
loopne
mov
loop
popa
sbb
ficompl
fcmovb
je
sbb
lods
push
push
and
jecxz
dec
xor
cs
stos
xor
loop
fiaddl
dec
ljmp
dec
adc
mov
enter
xor
cwtl
cmp
adc
dec
gs
dec
inc
cltd
jmp
dec
add
aad
adc
pop
mov
push
aad
pop
mov
jae
test
and
jp
pcmpgtw
mov
push
sub
add
adc
enter
gs
cs
js
fdivl
xchg
xor
shlb
fldl2e
xchg
xchg
jmp
imul
dec
fsub
inc
push
xchg
fcmovu
pop
daa
cmp
adc
repz
les
and
pop
insl
or
add
xor
jo
mov
je
addl
push
pop
mov
inc
adc
jp
pusha
stos
push
jbe
testb
dec
aad
lcall
fistpll
jo
mov
or
imul
sbb
and
pop
rcl
aam
scas
push
mov
loop
cmpb
loopne
mov
jge
cltd
and
cmp
call
shll
stc
add
add
mov
mov
ret
jmp
jmp
and
xchg
xor
xchg
testb
pop
cld
dec
xchg
popf
test
push
and
lods
dec
pop
mov
scas
int3
bound
add
movq
mov
mov
lods
xchg
push
outsl
sti
pop
mov
mov
repz
sub
aad
pop
sub
out
rcrl
gs
jne
adc
pusha
add
filds
push
mull
sbb
cmp
and
dec
xchg
or
ljmp
fbld
cmp
aad
pop
ss
jno
js
dec
xchg
lea
jns
jp
adc
mov
enter
stc
push
push
stos
push
add
mov
gs
scas
xchg
ret
repz
jmp
sbb
in
inc
xlat
ret
dec
popa
ljmp
sbb
sbb
mov
pcmpgtw
pop
orl
or
in
inc
xchg
out
adc
daa
dec
add
jl
cwtl
push
or
clc
dec
push
popa
jbe
dec
fcompl
jl
gs
test
mov
repz
xchg
scas
arpl
inc
mov
ja
jecxz
shl
jp
imul
add
add
push
test
ds
rcrb
fcompl
mov
mov
cmp
mov
mov
arpl
pop
or
lret
sbb
push
or
sbb
add
and
cmc
jnp
call
in
mov
push
test
or
aad
les
jo
pop
lret
imul
int3
adc
mov
add
mov
scas
in
scas
xor
mov
loopne
jns
jo
mov
fs
xor
mov
add
push
xor
mov
pop
mov
gs
sbb
xor
jge
mov
daa
push
enter
xor
ret
movsl
mov
shr
mov
add
xor
xchg
mov
mov
sbb
pop
mull
xchg
jbe
push
cmp
sbb
mov
mov
repz
pop
out
popa
jb
sub
insl
sbb
mov
lahf
xlat
or
loope
mov
jno
fcomps
mov
arpl
mov
mov
mov
xor
mov
mov
in
scas
push
sub
xor
lahf
cmc
pusha
imul
jns,pt
inc
lock
mov
cli
adc
jbe
sbb
push
xchg
add
fwait
loopne,pn
in
sub
fidivrs
lods
dec
stc
and
test
outsl
jle
adc
icebp
jp
adc
icebp
lea
stos
xor
jbe
pop
mov
cmp
sbb
and
jne
cmp
arpl
xor
aam
popf
lret
xor
cmpsb
jb
add
mov
cli
and
test
or
stos
and
mov
orl
push
jge
mov
jecxz
test
popf
add
mov
loopne
out
gs
jb
lret
ret
arpl
add
mov
xchg
mov
stos
fs
push
inc
stos
cld
cmpsl
lock
push
or
movsb
inc
outsb
pop
lock
push
rorl
loop
lahf
sahf
cli
int
xor
sub
jbe
or
je
movb
pop
inc
inc
pop
lret
iret
pop
mov
sub
pop
cwtl
insl
lcall
or
or
mov
pop
jp
aaa
inc
xchg
xchg
lret
xor
or
sbb
rcrl
enter
push
aam
imul
fwait
inc
xchg
xor
cmp
js
call
aad
shl
xchg
mov
or
mov
mov
mov
xchg
jp
in
mov
daa
ss
sti
sbb
inc
cli
nop
add
and
call
shll
mov
mov
push
pop
std
xchg
lcall
nop
rcl
sbb
repnz
insl
mov
fucom
sti
out
jne
ss
sub
sub
dec
hlt
mov
jmp
ret
pop
cltd
sbb
dec
or
test
adc
inc
fdivrl
gs
lock
dec
nop
fdivrl
mov
or
out
insb
pop
lods
mov
stos
adcl
fld
fisubrs
cs
js
rcrb
in
push
push
ljmp
xlat
fxch
fs
ds
inc
std
adc
aam
jle
cld
cmc
xchg
loope
scas
cli
xchg
sub
pop
mov
mov
jnp
movl
rolb
xor
movsb
lea
or
adc
stos
jbe
sbb
inc
int
lods
out
cmp
inc
jmp
aas
mov
push
in
shrb
lret
cmp
imul
pop
jmp
je
fs
xlat
jecxz
jmp
push
outsl
inc
outsb
pop
push
push
test
fistps
push
mov
ds
and
push
bound
hlt
arpl
mov
test
mov
add
cmp
add
cmp
loop
and
jmp
pop
test
movsb
inc
dec
inc
or
iret
sbb
fstl
push
and
or
bnd
jmp
mov
fistpll
cld
xchg
dec
ja,pn
ficompl
cmp
or
testl
test
cltd
dec
lock
cli
js
jp
mov
push
xchg
jbe
nop
mull
repz
popl
xor
xchg
mov
notb
push
cld
ret
out
jns
adc
pop
sar
jp
and
and
stc
mov
push
mov
mov
or
ja
leave
ljmp
gs
xor
mov
xchg
sub
rcrb
out
xchg
sub
loope
sar
mov
xchg
xchg
mov
cmpsl
iret
xchg
in
fwait
andb
pop
xchg
out
xlat
cmp
clc
ds
bound
jnp
popa
jmp
pop
xchg
add
cmp
jbe
jge
and
add
ja
and
and
daa
rorl
push
pop
out
jp
dec
jmp
cli
sti
out
pop
or
cmp
aam
out
dec
test
sbb
cld
mov
jle
lock
and
data16
jge
icebp
loopne
sub
lea
xor
mov
pop
not
push
jge
xor
loopne
sub
sbb
inc
shrb
mov
cmp
adc
adc
shll
cwtl
mov
xchg
pusha
lods
fwait
lret
lods
repz
dec
mov
in
and
fisubs
andl
xor
xchg
xchg
or
enter
jns
lahf
xlat
pop
mov
in
and
mov
es
fdivs
out
pop
std
xchg
or
adc
dec
je
inc
xor
dec
das
incl
mov
inc
fildll
adcl
push
xor
or
xchg
pop
test
sub
out
pusha
bound
ffreep
pop
andb
push
xor
pop
sti
inc
push
mov
push
adc
repnz
inc
and
es
dec
push
fidivl
jb
sbb
pop
rorb
add
cli
pop
jb
es
js
rorb
pop
fldt
fists
mov
leave
insl
mov
xchg
addr16
jae
xchg
push
movl
push
cwtl
call
add
fcomp
jge
adc
out
push
lret
fldt
cmpb
fnsave
push
mov
cmpsl
ret
iret
sarl
lret
xchg
jp
scas
jns
ret
or
sub
iret
fdivl
jno
insb
sub
pop
pushf
pop
push
push
int3
aad
mov
push
adc
dec
lds
pop
pop
lods
jmp
orl
dec
xchg
ret
xchg
sahf
pop
or
aam
fisttps
sbb
push
push
mov
arpl
jae
in
call
mov
lds
push
jne
lahf
sbb
fwait
jle
hlt
ret
jno
mov
clc
xor
sub
add
gs
pop
mov
add
push
mov
pop
fs
aad
adc
pop
pop
movsl
add
in
in
es
sub
icebp
mov
lret
jecxz
mov
stos
push
ljmp
mov
push
cmp
mov
fistps
ljmp
scas
in
popa
in
fcoms
popf
sub
out
dec
fs
fwait
cmpsl
adc
xor
and
jb
popa
xchg
sub
leave
int
push
test
xor
adc
inc
mov
in
jb
lods
lods
xchg
jp
push
inc
adc
cld
mov
sub
aad
sub
out
shrl
and
outsb
dec
lret
lock
inc
les
outsl
adc
shll
das
lret
pop
outsb
testb
outsb
xchg
loopne
sarb
aam
adc
dec
addl
dec
and
nop
pop
into
stos
imull
jecxz
sahf
in
cmp
mov
test
jge
jp
mov
sahf
push
aaa
push
lock
inc
movsb
sub
dec
adc
xor
jb
outsl
outsb
mov
adc
les
cli
in
mov
add
pop
test
inc
push
and
xor
jmp
out
mov
sub
sbb
cld
test
cmp
pop
movsb
arpl
push
int
hlt
mov
daa
arpl
sbb
shrb
fcompp
sti
out
testl
jle
lret
data16
sub
xor
repz
std
mov
ret
sub
repz
add
or
add
cld
push
mov
imulb
hlt
lods
push
mov
lret
out
js
stos
pop
jb
add
xor
pop
mov
pop
in
push
inc
sub
inc
sbb
sar
cmpsl
leave
daa
aad
in
rorb
lods
lds
in
int
lret
jo
cmp
lret
aas
sub
add
mov
shl
pusha
push
in
jne
cmpsl
push
int
sub
addb
jae
mov
push
pusha
mov
leave
mov
jb
dec
sbb
fs
lret
orl
lcall
ljmp
cmp
test
xchg
test
inc
les
in
xlat
inc
sub
push
jns
mov
sbb
add
test
loop
pop
add
test
push
insb
sbb
loope
orl
movsb
push
ss
pop
sub
sahf
loopne
xor
dec
out
js
scas
fs
pop
push
adc
mov
push
jecxz
add
jl
adc
push
jbe
dec
dec
push
mov
jg
xor
mov
adc
stos
in
lea
lock
push
jmp
lds
adc
fbstp
fisttpll
pop
aam
pop
jno
jl
jl
je
jo
adc
or
mov
mov
pop
call
cmp
fimull
cs
lcall
adc
out
inc
dec
loop
stos
push
mov
out
fadds
jecxz
jo
call
jg
push
pop
adc
push
jl
cltd
leave
xorl
outsl
outsb
sahf
adc
xchg
lret
imul
adc
adc
fnstcw
xchg
gs
push
mov
and
scas
call
hlt
xor
cmpsb
mov
lock
xor
xchg
jmp
insl
cmp
pop
shlb
int3
sbb
fldl
xchg
bound
pop
stos
pop
push
sbb
push
push
int3
ja
dec
mov
jae
out
jmp
fcmovu
sub
das
cmp
pop
push
pop
dec
sbb
test
push
rclb
jbe
rcl
add
fwait
lods
les
xchg
jp
xor
pop
and
xchg
jge
or
adc
sbb
or
push
mov
dec
mov
jb
sbb
aaa
mov
outsb
shlb
push
or
clc
cmp
pop
aas
and
imull
pop
vshufps
mov
call
add
jo
into
aad
inc
cmp
xchg
mov
std
mov
call
push
push
add
xor
mov
pop
shr
jbe
or
xorl
iret
call
pusha
mov
ficompl
sahf
call
mov
sbb
repnz
mov
cs
pop
xor
and
data16
xchg
popf
xor
push
jmp
stos
bound
fnsave
orl
fsubrp
es
or
das
out
ja
add
push
xorl
scas
adc
mov
cmpsb
clc
jle
popf
insb
pop
push
loopne
xchg
dec
out
cwtl
enter
dec
jo
insb
push
pop
xchg
dec
filds
mov
repz
fistps
fsub
js
inc
inc
mov
pop
aas
sahf
adc
mov
jl
movsl
or
or
pop
gs
lods
imul
sbb
stc
dec
inc
mov
dec
repz
pop
or
pop
bnd
gs
jl
je
fs
data16
out
mov
add
push
daa
adc
xchg
pushf
or
inc
adc
jae
mov
jnp
or
dec
les
into
or
and
adc
cmpsl
xor
and
xor
loop
jae
in
and
lods
cmp
mov
or
in
clc
out
push
cmpsb
push
push
push
or
std
leave
pushf
sti
xlat
lea
js
add
nop
movsl
addr16
sbb
bound
jns
jb
out
jae
nop
fistl
out
mov
mov
ds
add
xor
and
mov
sub
cmc
xchg
or
xor
jmp
xchg
push
aas
mov
sbb
mov
bnd
dec
inc
xchg
pop
jae
jge
or
cmp
stos
out
sub
hlt
mov
dec
cmp
xchg
xor
xchg
imul
movb
xchg
mov
push
fimull
jne
movb
and
sarl
xor
aas
fsubrs
mov
bound
lahf
adc
daa
mov
jns
xor
dec
outsb
in
jmp
or
and
jns
std
add
sarb
push
cmc
repnz
push
daa
dec
mov
out
sbb
pop
lret
mov
mov
sbb
dec
int3
popf
push
xorl
std
mov
in
int3
int
sub
dec
aam
or
mov
add
xchg
pushf
jbe
fs
fld1
inc
pop
sub
mov
fs
push
popa
les
cmp
xchg
out
pop
or
movsl
mov
sbb
push
adc
ljmp
sahf
cwtl
mov
cltd
jns
stc
jl
repz
push
and
jo
jp
add
insl
and
lods
xchg
bound
mov
push
bound
mov
outsl
push
lods
rclb
shll
push
xchg
pop
adc
sbb
mov
outsl
push
out
daa
dec
orb
sbbb
insl
in
sub
gs
icebp
xchg
test
mov
imul
fwait
cmpsl
xlat
lock
es
xor
test
xor
adc
imul
xor
scas
push
cmp
and
add
adc
mul
loopne
fsubrl
adc
cs
sti
cs
xorl
mov
push
pop
rcr
out
punpckhwd
popa
fwait
mov
imulb
and
xchg
pop
cmp
adc
popf
pusha
mov
jle
push
cmpsb
outsb
ljmp
mov
fidivrl
jmp
scas
sub
fmul
imul
and
cli
jne
movsl
mov
sbb
jb
dec
out
cmp
jo
add
mov
mov
add
jmp
dec
lahf
sub
scas
xchg
or
mov
mov
gs
ret
sub
cmpsl
xchg
sub
dec
mov
int
lahf
pop
insl
and
pop
pop
bnd
lods
and
loopne
jne
inc
or
test
cmc
cmpsl
mov
xor
fld
fcoms
mov
push
movb
popf
or
das
mov
out
test
jge
xor
hlt
nop
psllw
mov
mov
inc
cs
lds
cmp
stos
divl
cmp
dec
fcom
sub
cmc
loope
cli
aaa
or
sbb
pusha
mov
aaa
mov
cmpb
push
rcll
jcxz
lods
adc
icebp
fstpt
imul
in
mov
stos
xchg
pop
fisubrl
dec
scas
lock
ja
js
outsb
into
lods
jmp
jmp
jo
inc
rcrb
orl
lea
xor
cmp
push
jns
cmp
icebp
arpl
xchg
mov
pop
or
sahf
pop
xchg
aad
mov
or
inc
fiaddl
testb
pop
vmovntps
xchg
dec
mov
mov
dec
scas
xor
mov
add
jg
fdivrs
xchg
out
popa
test
aam
out
push
cmpsl
mov
mov
inc
das
daa
pop
add
jl
mov
shll
icebp
xor
test
sub
push
in
leave
pop
and
jle
pop
movb
or
push
mov
das
adc
push
loop
adc
and
ja
fstpt
insb
cli
inc
cmpsl
lods
jl
and
mov
into
pop
test
loopne
inc
and
pop
cmpsb
add
or
sbb
xchg
dec
xchg
adc
mov
movsb
stc
and
pop
ds
pop
vsqrtss
add
mov
mov
cwtl
mov
mov
test
shrb
push
add
xor
mov
cmp
andb
jl
mov
lahf
mov
test
mov
inc
and
mov
mov
mov
popf
insb
sbb
pop
sti
mov
inc
mov
or
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
mov
addb
scas
popf
ror
fists
push
cmp
mov
add
out
lods
mov
out
loopne
inc
sub
out
push
mov
movl
insb
push
mov
cmp
lds
stos
dec
ss
out
aaa
in
call
mov
push
loopne
imul
nop
test
ja
jge
nop
adc
push
jbe
cmpsl
xchg
push
clc
gs
mov
out
cmc
cmp
call
xchg
sub
notl
in
imul
dec
mov
int
into
mov
add
scas
add
push
or
cli
dec
push
and
inc
mov
stos
lea
push
roll
fadd
dec
pusha
sub
arpl
insl
mov
sahf
sbb
lods
pcmpgtb
cltd
and
sub
mov
aad
pop
or
andb
test
pop
outsl
pop
popf
out
fsubs
nop
mov
ss
mov
xchg
aam
xchg
ljmp
aam
jp
dec
das
in
dec
adc
pop
rcrl
xlat
std
ljmp
dec
push
outsl
pop
xor
loop
out
in
jp
mov
pop
cmpsl
rclb
shlb
testl
inc
mov
stos
push
jbe
mov
inc
jmp
inc
aas
out
aas
lods
xor
movsl
daa
inc
test
mov
push
ss
call
jns
dec
sub
imul
test
lea
sub
outsl
mov
es
lods
sub
adc
dec
pop
lods
fildll
sbb
shlb
push
cli
ljmp
lcall
dec
enter
inc
xor
mov
es
test
and
dec
mov
test
lods
inc
push
add
mov
imul
es
imul
xlat
test
je
fbld
psubsw
jne
insb
mov
popf
shll
push
loope
mov
je
jo
push
out
fistps
ds
dec
push
dec
testl
mov
push
lret
fmuls
pop
pop
xchg
pushf
push
sti
fnstsw
or
jns
push
xchg
mov
fildll
sarb
sub
icebp
repz
sbb
mov
xor
inc
inc
jp
ss
call
push
stos
jne
repz
inc
in
adc
out
in
mov
sbb
imul
hlt
xor
dec
fsubs
mov
mov
mov
rcrb
data16
out
in
incb
das
enter
mov
cmp
repnz
lret
cwtl
xchg
shlb
daa
mov
jno
pop
mov
xor
push
mov
lds
dec
sti
lret
imul
cmp
or
aaa
gs
mov
pop
dec
into
lods
aaa
ror
pop
clc
push
in
pop
or
rep
ja
xchg
add
popl
xor
mov
rol
incl
sbb
aaa
push
xor
adc
pop
ss
sbb
pop
scas
mov
ret
frstor
hlt
mov
xchg
ret
jno
push
mov
xor
jecxz
cmp
push
mov
ljmp
xchg
pop
cli
scas
mov
inc
call
or
daa
or
cmp
xor
ja
out
push
cld
push
pop
scas
xor
fmull
clc
cmp
xor
and
and
xor
push
cmpsb
shrb
pop
sbb
iret
es
push
or
in
cmc
mov
push
push
cmpsl
push
sbb
out
jmp
dec
fdivl
pop
shll
push
xchg
shlb
out
sub
mov
mov
and
bound
xor
sbbl
sahf
lret
jle
fstpl
pop
fadd
shl
loop
orl
and
mov
push
and
adc
jno
mov
aaa
js
xchg
mov
cmpsl
test
pusha
inc
pop
lret
adc
dec
push
shlb
xchg
js
shl
mov
lret
mov
insb
repz
mov
adc
add
jbe
shll
mov
sbb
push
das
jo
mov
dec
or
mov
pop
cmp
sub
addr16
out
and
inc
je
aam
iret
ljmp
add
ja
rclb
sbb
lret
dec
lds
adc
nop
shll
shll
into
sbb
out
lods
xchg
or
mov
mov
insb
sbb
daa
dec
dec
mov
mov
lock
inc
out
test
stc
mov
in
nop
test
fiaddl
add
mov
inc
push
mov
mov
out
stos
sbbb
jecxz
int3
mov
mov
mov
out
dec
out
ljmp
xchg
inc
jae
stc
adc
pop
test
add
push
hlt
xchg
js
lock
mov
lahf
rcrl
testl
aas
in
sub
popf
push
and
and
jecxz
cli
jcxz
mov
inc
je
out
sbb
ja
jecxz
cmp
or
insl
mov
popf
sub
jnp
xor
jb
lidtl
mov
out
push
mov
dec
xacquire
or
pop
popa
aaa
mov
mov
lret
out
movsb
or
jge
jnp
test
adc
pop
mov
jg
jle
xor
and
out
aaa
sti
mov
movsl
sbb
pop
in
inc
mov
xchg
out
mov
jge
lahf
clc
and
bound
clc
insl
sti
aaa
adc
dec
xchg
pop
mov
xlat
pop
pop
rcrb
popa
testl
repnz
pop
mov
mov
loope
mov
fidivrl
lret
movsb
notb
ret
pop
adc
lret
dec
cs
lods
inc
in
pop
stos
mov
enter
cmp
dec
mov
ret
std
xor
adc
clc
sti
adc
mov
cwtl
daa
das
bound
pusha
pop
mov
sbb
jo
xor
bound
das
dec
rorl
or
cltd
data16
scas
xor
outsl
mov
icebp
dec
lea
push
mov
xchg
in
mov
mov
ds
sub
lods
lds
lret
ds
outsb
aam
ud2
stos
mov
adc
jge
into
shll
jne
fwait
or
call
scas
fstps
xchg
jl
roll
xor
out
mov
movl
fs
mov
cmp
std
out
lcall
mov
test
push
bound
sbb
pusha
fsubs
rclb
movsl
arpl
cltd
xchg
adc
hlt
int
mov
lds
xchg
xchg
hlt
inc
adcb
push
dec
inc
add
test
daa
imul
xchg
push
mov
mov
dec
outsl
push
xchg
sbb
bound
ficomps
mov
xor
sub
and
cmp
icebp
jge
arpl
inc
cwtl
cmp
aas
sub
sub
test
xchg
ficoms
test
dec
xlat
mov
jmp
or
adc
mov
xor
adc
mov
into
xlat
mulps
inc
inc
and
aaa
mov
and
int3
es
sub
icebp
mov
push
aam
push
cmp
inc
fmull
ljmp
push
jbe
mov
rclb
fucom
push
inc
mov
inc
mov
js
out
mov
xchg
fidivrs
popa
insb
in
jg
add
pop
push
lods
mov
cmp
mov
pop
push
imul
dec
outsb
mov
jnp
shl
repnz
push
sub
es
cmp
mov
decb
fcmovnb
cmp
inc
loope
jmp
sahf
mov
icebp
push
mov
aaa
rclb
incb
nop
mov
sbb
xchg
gs
sub
dec
pop
sbb
mov
aam
stos
sahf
lret
push
inc
jns
cmp
rcrl
cmp
add
stos
loope
jno
scas
mov
mov
jle
pushf
pop
xchg
in
cld
bound
loope
push
movsb
cmp
test
into
or
enter
cmp
fwait
and
jecxz
fucom
andl
popa
pop
int3
pop
outsb
xchg
adc
mov
shll
jne
scas
test
cs
outsl
pusha
sahf
mov
inc
dec
sub
adc
idiv
dec
loope
or
in
in
rcl
pushf
cmp
jbe
aam
test
pop
lods
inc
xchg
repz
sahf
add
enter
pop
or
xchg
adc
and
sbb
fisttps
lret
add
movsl
jecxz
push
xchg
subb
addb
out
sbb
div
sub
aam
cld
jmp
cmp
push
pop
enter
and
sbb
dec
sub
pop
repnz
jne
xchg
mov
popf
lcall
fwait
scas
mov
xor
popa
lret
inc
xor
dec
cli
ret
cmpsb
pop
xchg
popa
int3
xor
sub
jp
idivb
jmp
popf
das
mov
fidivrl
jmp
sub
push
xor
fsubs
mov
mov
das
push
ret
js
and
cmp
outsb
outsl
dec
cs
pop
dec
xchg
hlt
xchg
scas
repz
xchg
adc
cmp
sbb
js
popa
clc
mov
imul
mov
push
jnp
loope
xor
and
pop
jecxz
cmc
popf
movsl
dec
cmp
inc
imul
dec
stos
dec
cmpsl
das
in
push
stc
xchg
std
pop
daa
mov
adc
ja
push
movsb
cmp
jg
adc
movsb
int3
je
push
scas
cli
cmpb
jb
js
jmp
into
ljmp
xchg
mov
sbb
in
sub
cltd
inc
pop
pusha
or
andb
negb
shlb
in
inc
test
hlt
adc
cmp
and
sahf
add
insl
in
popa
jb
hlt
push
mov
jmp
loope
dec
mov
adc
pop
rolb
sub
jbe
jns
inc
dec
clc
mov
cmp
lock
call
adc
cli
xor
orb
push
pop
lret
xor
jns
lods
nop
mov
mov
sbb
sbb
pop
sbbl
push
sbb
iret
push
mov
out
push
fldl
jne
or
notl
dec
es
int
and
outsb
xor
mov
push
mov
jnp
mov
xchg
mov
les
cmpsb
iret
test
xor
sti
sbb
pop
sub
cwtl
test
cltd
aaa
add
lcall
sti
adc
stos
push
adc
ljmp
dec
bnd
mov
pop
addr16
push
jl
clc
pushf
adc
in
movsl
cmpsl
in
int
aad
arpl
push
push
fldt
dec
stos
ret
popf
adc
mov
mov
push
xchg
test
cmpsb
add
adc
pop
adc
add
out
mov
jbe
push
daa
in
fcoms
push
pop
xchg
lods
out
mov
mov
aam
mov
mov
xchg
cmp
mov
mov
lcall
lret
mov
jge
loop
xchg
in
xchg
push
mov
push
or
movsb
imull
dec
repnz
int3
push
lods
loope
push
arpl
pop
mov
sbb
xlat
iret
aas
pop
mov
imul
mov
loopne
inc
cmp
test
lods
aas
sarl
adc
sub
movsl
sbb
arpl
xchg
dec
add
or
cmp
mov
jns
or
lods
inc
lds
call
jecxz
jno
lods
sbb
sub
mov
mov
or
subb
pop
pop
adc
in
cli
outsl
add
sub
lret
jg
xorl
ret
sbb
sbb
push
sub
bnd
push
inc
or
add
and
fisubl
dec
and
lcall
xchg
scas
sti
loope
jle
icebp
out
lret
fdivl
mov
sbb
repnz
scas
addr16
sub
inc
adc
cmpsb
mov
scas
ds
pop
xchg
or
add
jmp
and
movsl
fdivrs
or
pusha
and
mov
and
test
out
mov
xor
add
rol
out
lret
gs
sbb
fmull
dec
loop,pt
and
xchg
test
orb
sub
fwait
lods
cmp
cmp
mov
xchg
cmp
inc
push
call
push
mov
fst
sub
jge
shl
jg
fiadds
adcb
cmp
rcrb
jecxz
imul
mov
loopne
popa
movsl
xchg
aaa
pop
xor
pop
xor
pop
mov
fsub
shrb
jp
add
cmc
inc
in
fsubs
shlb
inc
push
cmp
decl
das
dec
stc
dec
in
add
or
add
aam
pop
in
cmp
pop
jmp
js
sbb
in
jno
push
dec
test
repnz
sub
sti
sbb
sub
inc
aad
iret
shlb
adc
fists
or
adc
and
xchg
add
inc
adc
push
inc
jae
shrb
dec
scas
sbb
jns
inc
sbb
mov
and
test
rcl
or
int
xor
adc
xor
insb
scas
sahf
sti
mov
xor
jns
dec
cltd
dec
cmp
and
mov
lcall
shrb
inc
cmpsl
adc
or
aas
mov
enter
lret
lcall
mov
jmp
jns
jp
cmpsl
fnstcw
fsubs
testb
or
nop
mov
mov
aad
ret
adc
sbb
dec
inc
sbb
mov
pusha
mov
lods
inc
rorb
push
popf
dec
pop
sti
pusha
sub
mov
int
mov
gs
cmc
dec
sub
mov
or
ret
sub
push
out
jl
stos
xchg
sahf
stos
arpl
enter
sahf
adc
xchg
dec
imull
fwait
andb
jmp
sub
pusha
fcmovnbe
adc
inc
fsub
mov
adc
fdivs
insb
rolb
jno
mov
jbe
push
adc
lods
adc
jns
ficoml
inc
mov
and
and
mov
jb
adcl
inc
push
sarl
jnp
fsubrs
adc
dec
xor
mov
pop
adc
inc
jo
cmp
in
mov
ds
out
cltd
addb
dec
mov
mov
fidivrs
and
adc
rcr
push
fcmovne
pop
loope
stc
push
mov
push
jnp
mov
clc
mov
mov
jecxz
icebp
into
sub
cwtl
and
mov
cmpsb
testl
add
rcl
cmp
mov
pop
push
gs
shrl
int3
mov
test
pop
or
rcl
outsb
std
stos
jge
add
xor
lret
andl
sub
xchg
and
enter
pop
add
inc
arpl
cmpl
pop
pop
icebp
aad
das
cmp
add
push
jg
out
cwtl
xchg
lea
shll
cmp
or
jge
mov
and
and
in
push
cmovae
push
cs
mov
inc
hlt
or
lret
movsl
push
and
and
sub
imul
test
loope
stos
movsb
jmp
jge
adc
imul
pop
inc
cld
orl
mov
adc
sbb
mov
lcall
add
xchg
jecxz
shlb
and
or
and
push
js
sub
add
jp
xor
push
cwtl
mov
cltd
and
fstl
pop
mov
push
jo
jb
jmp
cmp
mov
xor
test
jae
lahf
cmc
xor
mov
aad
xchg
jno
leave
lahf
in
call
add
js
mov
mov
fildll
movsl
xor
or
sbb
push
jne
pop
repz
jns
sub
fstpl
adc
lods
mov
push
xor
xor
lods
cmp
inc
mov
xor
aad
test
int
shlb
outsb
and
jns
cmpsb
pop
adc
cmc
mov
push
cltd
imul
lock
mov
xor
bound
popa
cmp
test
into
test
sbb
int3
push
fwait
imul
add
fistl
ja
adc
addr16
add
pop
jp
insl
mov
xchg
and
mov
shl
jne
mov
cmp
xor
imul
mov
cmpsb
das
cltd
pop
xchg
xlat
in
mov
cli
adc
sub
jecxz
mov
lret
jle
mov
mov
pop
mov
xchg
inc
jle
cmp
sub
mov
dec
xchg
push
call
shl
push
pop
testb
jae
fcompl
test
push
jb
aam
mov
pop
cmpb
ds
dec
push
mov
or
outsb
or
daa
adc
aas
movsb
push
pop
lret
and
pop
scas
cmpsb
fisttps
stc
inc
sbb
icebp
lds
dec
sbb
mov
lds
inc
lea
inc
jno
push
clc
jnp
rcrb
roll
rcr
mov
push
and
out
and
dec
sub
fnsave
ja
imul
jns
mov
sahf
jge
sub
xor
in
les
xchg
push
fs
sti
pop
sti
movsl
and
sub
push
dec
xchg
push
inc
xorb
fcomps
push
lcall
stc
cmp
jo
pop
add
outsb
pushf
ljmp
push
dec
sub
xor
pop
cwtl
stos
push
loopne
subb
sub
xchg
jne
insb
cmp
loope
inc
int3
xchg
mov
mov
sub
out
filds
sub
push
mov
inc
mov
and
adc
ficompl
sub
repnz
xchg
je
fsubrs
add
xor
gs
int
cmc
addr16
xor
out
outsb
cmp
add
and
je
lahf
xor
ds
fisubrl
sbb
cmc
clc
xchg
add
ficomps
cli
into
mov
cld
xchg
sbb
lock
mov
inc
shrb
stos
jns
sbb
cwtl
repz
xlat
mov
add
mov
xor
arpl
mulb
insb
jno
mov
outsl
xchg
out
push
add
push
dec
inc
je
inc
mov
addb
and
test
mov
push
jg
jae
cmpsb
jge
fcom
icebp
xchg
sub
push
je
movsl
or
arpl
ficomps
je
push
lret
jp,pt
push
mov
incl
std
pop
les
or
add
mov
push
dec
mov
jbe
addl
inc
jbe
out
nop
jmp
xor
mov
aaa
sub
fcoms
out
pushl
jmp
sub
fcmovnb
sbbb
rcrb
xchg
pushf
mov
xor
mov
out
dec
sarb
lods
or
jmp
lcall
jge
mov
mov
sbb
insl
mov
mov
inc
into
push
aas
xor
aaa
pop
ja
repz
dec
xchg
xchg
cmp
inc
clc
js
fiaddl
outsl
sti
cs
fstpl
cmpsl
mov
xor
add
mov
xchg
xchg
ja
mov
cld
mov
loopne
cmp
adc
pop
pcmpeqd
icebp
xor
cmp
cs
and
xchg
ret
jbe
jb
imul
movsb
inc
loop
fmul
icebp
je
lret
cli
pop
xlat
push
adc
das
rdmsr
mov
ss
push
sti
bound
push
jns
cmpsl
gs
scas
mov
lret
mov
dec
ja
into
dec
add
push
sbb
cmc
sbb
sbb
xor
fidivs
adc
dec
dec
fs
jge
xlat
lock
jbe
rcll
jb
ja
stos
xor
push
add
xchg
ja
or
aaa
mov
sbb
xlat
xor
daa
sub
push
dec
cmpsb
cmc
xchg
xchg
popa
or
xchg
test
cmpsl
notb
xor
cld
cmp
stc
inc
jne
sub
jmp
xchg
push
fcoml
sub
pop
mov
mov
ret
sti
sbb
cld
sbb
push
xchg
movsb
sbbb
imul
repnz
fisttps
rclb
or
mov
lcall
sbb
hlt
in
xor
imul
or
dec
dec
aad
stos
push
jmp
jb
dec
mov
mov
lret
stos
sarl
or
pop
adc
inc
rcrl
jmp
in
stc
adc
inc
jge
and
sub
or
popa
icebp
sub
out
pop
lea
test
hlt
ljmp
out
popa
and
mov
or
std
pop
and
add
sahf
repz
imul
mov
ficompl
and
or
sbb
repnz
dec
jmp
push
mov
lret
jl
imul
push
fidivrl
aaa
xor
lea
jp
out
jns
add
cld
fisubrs
fildl
jnp
jbe
mov
sub
push
jnp
pop
ja
je
in
push
mov
je
xchg
arpl
mov
push
lahf
pop
gs
jmp
test
pop
and
call
and
jp
fistpll
es
add
inc
nop
jle
dec
xchg
push
pop
lods
sbb
mov
mov
adc
movsl
addb
inc
inc
adc
inc
jge
cld
mov
and
push
push
out
bnd
fcoml
or
out
xchg
jo
dec
out
dec
cmp
lods
jle
out
and
ds
sahf
lods
jno
fcmovb
scas
xlat
push
mov
sub
push
mov
shll
pop
loopne
mov
xchg
sbb
mov
dec
cld
lahf
sbb
xchg
mov
pushf
pop
enter
stos
js
ja
icebp
stos
nop
loop
stc
gs
negb
aam
jle
jnp
push
es
movsb
int3
dec
mov
add
not
adc
into
xchg
movd
mov
in
lret
js
out
lods
inc
loopne
mov
mov
inc
roll
mov
imul
sbb
cmp
flds
imul
adc
cs
shlb
lods
adc
cltd
inc
dec
sbb
ljmp
dec
outsl
rep
ljmp
mov
jne
iret
jo
loope
shl
push
or
push
cmp
icebp
or
mov
call
xchg
imul
imul
in
dec
daa
sti
aas
ja
xor
movsb
mov
cmpsb
xchg
mov
xlat
inc
mov
sbb
add
adc
roll
pop
in
xchg
jg
cmpsb
in
mov
jne
cmpsb
mov
lahf
jge
mov
fsubl
aas
mov
mov
jo
out
push
dec
mov
xor
or
adc
into
ja
into
pop
ljmp
mov
jl
add
adc
push
ljmp
imul
dec
sbb
sti
push
sahf
idivl
or
imul
mov
out
fs
fimuls
mov
pop
sub
and
psubq
test
cltd
mov
jmp
mov
hlt
in
mov
lea
xor
aas
jo
cmpsb
push
rclb
xor
push
inc
push
and
loop
push
call
bound
nop
or
mov
mov
mov
xor
pop
sbbl
scas
daa
pop
jmp
in
andl
loop
adc
jl
mov
notb
aas
push
sub
lods
or
xor
hlt
imul
cmp
cmpsb
pusha
in
inc
sbb
xchg
int3
push
pand
xchg
jecxz
test
imul
int
pop
push
daa
push
test
push
xchg
sub
push
mov
les
ss
lock
sbb
cmc
pusha
add
dec
jnp
insb
xchg
fs
jle
dec
add
fs
daa
mov
xchg
out
icebp
lfs
in
add
stc
and
sbb
sub
mov
ret
frstor
out
xchg
fildll
rcrb
pop
cltd
inc
mov
or
xchg
sub
shl
mov
ss
sub
ror
mov
pop
jns
jo
add
push
rcl
jp
mov
fdivs
test
fwait
int
icebp
pop
adc
stos
movd
mov
int3
xchg
adc
mov
in
ret
add
loopne
and
inc
adc
jnp
ljmp
push
bound
pop
cmpsl
inc
scas
mov
imul
jno
pop
sbb
fsub
enter
test
inc
jo
add
jbe
ret
sahf
test
cltd
mov
add
in
test
inc
stc
dec
cmp
xchg
mov
fmuls
loope
insb
jns
fsub
sub
gs
dec
fadds
push
cmpsl
pop
mov
dec
adcl
push
orl
addr16
sti
shrb
or
pop
addr16
mov
cmc
stos
push
mov
and
sbb
adc
lds
jno
xchg
sbb
xlat
xchg
jmp
scas
out
or
sbb
dec
mov
or
lods
xchg
rorl
mov
add
lods
jg
fldcw
stos
in
dec
pop
data16
xchg
or
inc
mov
mov
sti
leavew
mov
cmp
jl
push
aaa
inc
dec
sub
mov
mov
ljmp
inc
pushf
call
pop
push
test
fmulp
jecxz
roll
add
push
jmp
mov
add
daa
lock
xchg
sbb
lret
aas
data16
ror
xor
cmp
push
inc
or
fcomps
inc
bound
xor
push
xchg
jb
xchg
add
frstor
lods
pop
lea
sub
sti
cmp
jmp
cmpsl
shll
ljmp
sbb
nop
xchg
mov
loop
adc
mov
arpl
or
jge
imul
mov
sub
aad
dec
clc
mov
and
int
inc
adc
cli
cmp
pop
cld
and
push
xor
stc
xchg
sub
xlat
lods
xor
sti
shld
pop
mov
mov
xlat
stos
pop
push
push
mov
mov
or
jge
jae
adc
push
aaa
les
jno
cmpb
je
mov
divl
ret
adc
pop
push
lret
cwtl
xsaves
jne
adc
faddl
movl
imul
add
push
loop
ror
scas
daa
mov
clc
or
sbb
add
mov
mov
test
out
lahf
loope
xchg
bound
ljmp
mov
and
call
inc
push
jns
xor
dec
jp
inc
xor
push
push
test
hlt
lods
std
andl
jp
push
pusha
movsb
in
jecxz
out
push
testl
lods
xchg
aas
cmp
pusha
xor
lret
lods
dec
jb
push
or
in
loop
xor
lds
pop
add
dec
push
and
shll
les
sahf
test
jne
jne
pop
pop
or
mov
scas
aam
and
push
hlt
add
mov
fst
in
mov
xor
shll
stos
mov
pop
mov
test
imul
fildl
jecxz
mov
fistl
outsb
insl
and
insl
shlb
pop
cmpl
fcmovnbe
je
ds
mov
pop
aam
loopne
xor
mov
cld
test
ret
cmp
jmp
adc
pop
fidivs
sbb
call
cmpsb
mov
mov
pop
imul
pop
rol
xchg
cmp
push
into
pop
sbb
mov
mov
pop
mov
out
push
in
push
aaa
ds
mov
adc
dec
pop
lods
aas
adc
cs
or
sahf
pop
xlat
movsl
cwtl
dec
cld
pop
pop
cltd
nop
stos
sahf
mov
jmp
pop
sti
pop
outsl
adc
outsb
cmp
mov
rorb
adc
lret
cmp
add
mov
stos
cmp
dec
lahf
test
adc
fldl2e
cli
pop
out
xchg
push
pop
mov
stos
push
or
push
pop
jbe
pushf
dec
pop
jg
and
push
jbe
out
lods
add
hlt
mov
lods
insb
int
xchg
lret
ret
lcall
inc
out
jb
mov
or
inc
inc
adc
push
mov
or
in
xchg
sbb
add
faddp
les
test
cwtl
loope
dec
dec
sarl
adc
stos
das
cmpsl
add
mov
dec
pop
mov
pop
and
lcall
insl
in
and
out
nop
mov
pop
in
pop
scas
cld
gs
pop
in
ss
jp
push
cwtl
pop
into
cmc
xchg
out
pop
sub
lock
push
jp
cmpsl
ja
cmp
inc
sti
cwtl
mov
sbb
add
outsl
xor
xchg
aad
mov
sar
iret
push
negb
mov
loope
rclb
lods
test
lock
push
pop
ljmp
mov
lds
popf
ja
js
in
aaa
orb
subl
out
fnstsw
xor
shll
es
pop
xor
cltd
ja
lcall
mov
jg
dec
inc
sub
mov
or
push
mov
or
adc
push
and
inc
dec
lret
dec
lret
nop
jnp
push
mov
aam
in
iret
sbb
lds
and
mov
in
sub
sbb
jg
push
inc
icebp
andb
xchg
push
loopne
and
dec
jns
sub
mov
pushl
jnp
stos
xchg
cwtl
adc
mov
ret
out
js
sti
push
jecxz
pop
and
mov
stos
inc
pop
pusha
push
inc
mov
cmp
cmp
icebp
dec
in
and
xor
mov
pushf
shlb
pop
mov
cmpsb
dec
mov
dec
out
dec
into
sub
jmp
cmc
jmp
inc
sahf
mov
repz
pop
test
dec
fstpt
pop
cmp
movsl
rolb
xchg
xor
fcmovb
and
sbb
jb
xchg
outsb
or
xor
xor
adc
mov
sbb
daa
jnp
sbb
jge
push
enter
pop
icebp
lods
mov
das
pushl
data16
push
xor
std
xlat
jge
xor
test
imul
insb
aad
iret
sub
mov
xchg
sub
jnp
rclb
fldt
test
and
jo
sub
xor
hlt
in
sub
jle
dec
sbb
lcall
or
lcall
sti
jmp
xorl
gs
fcmovnu
fs
cmp
scas
jne
inc
loop
mov
or
jnp
or
jp
in
ljmp
sub
push
push
in
xchg
rorl
insb
insl
xor
ja
mov
ret
leave
ja
xchg
in
fists
stos
pop
dec
into
push
repz
or
dec
scas
cmp
mov
cmp
dec
call
call
add
hlt
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
outsb
push
mov
orl
addl
adc
sub
sbb
sarl
pop
sbb
jb
pop
lahf
out
sti
cli
cmp
mov
xor
xor
sti
leave
cmp
xchg
les
add
cld
ficomps
out
dec
rcr
sub
in
mov
stos
loop
cmpsb
lcall
bound
mov
insl
mov
ljmp
dec
mov
xchg
or
cmp
test
out
testl
cmp
imul
cmp
jmp
stos
mov
je
cmp
xor
jge
inc
xchg
push
or
push
inc
push
xor
jmp
push
leave
adc
jnp
lea
ds
sub
mov
stos
jno
adc
ljmp
out
pop
adc
mov
sbb
dec
xor
jmp
push
ffree
jmp
mov
fwait
scas
repnz
stc
inc
push
jb
xlat
jp
faddl
lods
fld
insl
dec
dec
idivl
push
cmp
jae
int
jmp
outsl
and
stos
xor
shr
pop
ja
fcoml
je
pop
sub
xor
xor
xchg
addr16
enter
pop
inc
dec
mov
xchg
loope
pop
jg
xchg
test
cltd
adc
test
arpl
pop
imul
add
and
aas
and
imul
stc
push
add
subl
in
and
push
hlt
push
mov
mov
cmp
int3
inc
inc
inc
test
jecxz
mov
shll
xchg
ficompl
lcall
jnp
out
xor
jno
mov
sub
subl
pop
test
pop
and
pusha
scas
test
idiv
aad
dec
lods
cmp
jns
gs
rclb
lahf
sbb
dec
lret
mov
cmp
xlat
cmp
pop
jne
shll
fstps
xor
jbe
aam
or
dec
test
pop
and
je
xlat
or
mov
ss
ljmp
xor
int
movsb
insb
ja
push
inc
and
mov
dec
shl
subl
xchg
and
testb
sbb
pop
ss
mov
in
xor
cmp
xchg
push
cmp
in
in
aas
mov
jmp
pop
dec
xorl
xor
xchg
add
stos
pop
sub
sbb
dec
nop
and
push
lcall
dec
mov
mov
dec
and
loopne
call
in
repnz
hlt
mov
andb
mov
test
cmp
scas
add
lock
and
mov
push
cmpsb
mov
mov
insb
or
loop
inc
hlt
dec
movsl
mov
ds
ljmp
adc
dec
sbb
add
push
bound
and
push
cmp
sub
cmp
dec
repnz
adc
mov
pextrw
pop
lret
and
aas
add
sub
inc
mov
int
lea
and
inc
mov
add
or
add
or
pop
ja
fldenv
sbb
push
les
inc
pop
test
mov
xchg
aad
ds
cmc
int
sar
aad
xchg
push
popa
sbb
daa
mov
mov
inc
aas
add
adc
in
mov
repz
imul
loope
sbb
cmpb
ds
in
jg
cmpsl
aam
push
std
jecxz
lods
dec
jge
xchg
jp
push
out
push
outsb
xchg
shr
stc
cmp
ret
movsl
mov
jecxz
add
mov
sub
hlt
insb
lods
push
mov
dec
enter
jge
push
test
aaa
pop
ja
jl
cmp
pop
out
ficomps
mov
mov
ja
idivl
jecxz
and
lods
sub
sbb
dec
xor
push
scas
and
xchg
xchg
push
lret
sub
test
dec
jge
cmpl
addr16
rcr
out
cmp
adc
mov
pop
mov
or
dec
mov
insb
dec
test
int3
fldt
stos
push
xor
sub
outsb
pop
and
push
in
dec
fisubl
cli
int
sarb
jmp
inc
pop
or
lcall
push
icebp
in
sbb
xchg
popa
jmp
mov
pushf
mov
ja
pop
movsb
xchg
mov
mov
xchg
cmpsb
ret
mov
lahf
in
xchg
sbb
lcall
cmp
iret
cmp
xor
push
addr16
lds
loopne
or
mov
and
mov
add
jp
mov
ja
mov
sbb
stc
mov
into
shll
adc
and
push
xchg
pusha
sbb
repz
std
mov
or
push
arpl
push
je
lock
out
jbe
cld
inc
lret
or
gs
es
mov
add
pop
lea
add
cmp
adc
cld
jb
xor
bound
cwtl
sub
adc
in
sbb
add
jb
fsubrl
fsubr
in
jns
fdivs
imul
test
out
xchg
aad
std
imul
adc
xorb
xor
sbb
sbb
xchg
data16
lret
bound
dec
pop
mov
add
and
int
or
iret
xchg
aas
ljmp
test
int3
fimull
push
outsl
sar
test
xchg
mov
movaps
or
aam
aas
stos
out
cld
and
pop
out
test
mov
inc
jge
and
pop
push
xlat
cmp
addl
cmp
in
leave
adc
mov
sbb
adcb
mov
mov
bound
and
mov
dec
mov
icebp
jo
cltd
js
pop
addr16
cmp
push
repnz
adc
loopne
push
in
stos
jns
iret
sarb
xor
lods
add
xlat
adc
out
add
in
outsl
mov
subl
mov
out
jg
out
into
cmp
mov
call
pop
scas
fldl
pop
out
mov
xchg
mov
divl
dec
loope
jo
adc
sub
mov
cmp
outsb
cs
aaa
stos
scas
loope
xchg
push
scas
add
xchg
filds
in
mov
testl
inc
fisttps
cwtl
loopne
arpl
popf
daa
mov
sahf
in
loope
bswap
hlt
mov
mov
lock
inc
push
inc
xchg
inc
lahf
cmp
jae
fildl
and
sub
cmpsl
ja
imul
fsubr
fwait
push
repnz
cmp
imul
sbb
ss
pop
lods
push
fwait
mov
mov
fdivrl
dec
shrl
fwait
jne
push
lds
push
lods
jecxz
fidivrl
cmp
add
loop
xchg
dec
jecxz
insl
or
adc
in
cmp
lds
imul
jbe
sbb
jp
movsb
pop
push
jl
fildl
adc
clc
fisttpll
scas
add
rolb
popf
outsl
xor
jmp
cmpsb
in
push
pop
xor
das
adc
shrl
push
mov
xor
cmp
dec
fwait
mov
mov
mov
ret
xchg
aad
in
adc
ja
insl
mov
cmp
sti
and
jmp
mov
pop
push
mov
arpl
fcoml
sbb
sub
push
cmp
inc
sbb
inc
out
pop
addr16
mov
push
aam
aam
out
out
or
or
mov
push
out
jo
cmp
pcmpeqd
inc
sbb
fistps
in
nop
or
jae
rorl
in
addr16
fcomp
xchg
jo
sub
inc
je
add
dec
aaa
adc
std
push
cld
sbbl
test
xchg
in
out
and
lahf
xor
and
sub
mov
xchg
jnp
js
push
dec
and
stos
xlat
mov
pcmpgtb
mov
mov
test
shlb
sbb
mov
in
mov
inc
rclb
loope
fs
popa
int
push
in
cmp
mov
lret
mov
xorl
jg
das
xor
cs
sarl
in
popa
mov
ljmp
push
sar
pusha
jl
cmp
outsl
mov
and
adc
lea
cli
xor
clc
fcompl
push
addb
jbe
loop
icebp
push
inc
xor
ja
sahf
in
adc
push
mov
mov
inc
sub
rcrb
cwtl
xor
sbb
pop
xchg
gs
inc
dec
sbb
pushf
sbb
test
jmp
cs
and
fwait
jg
push
adc
jbe
rorb
xchg
jbe
fwait
mov
jae
out
mov
cmp
sub
hlt
mov
lret
inc
ret
xchg
pop
mov
daa
cli
sub
mov
cmp
dec
in
adc
dec
jmp
adc
adc
xor
jae
imul
jbe
roll
shlb
cmp
xchg
inc
sbbb
loope
fld
xlat
repnz
movsb
or
imul
int
movb
rolb
add
xchg
iret
or
ss
pop
dec
je
fcoms
nop
fists
sbb
mov
cmp
lcall
sub
movsb
add
call
leave
or
test
repz
pop
call
lret
jbe
jp
fnsave
ss
hlt
into
loope
cmp
and
dec
imul
cmpsb
mov
and
adc
fsubs
mov
mov
shlb
dec
popa
int3
aas
notb
inc
data16
push
cmp
repz
inc
cli
sbb
sbbl
push
cs
sub
stc
lds
fdivrl
push
mov
arpl
mov
and
imul
cmp
lret
jo
outsl
push
xchg
bound
in
jp
pop
adc
dec
mov
fldl
imul
sbb
lds
mov
mov
inc
hlt
and
leave
adc
mov
ja
rcll
cmp
or
insl
mov
cs
shrl
cmpsl
sub
shll
ret
add
insl
loope
inc
gs
scas
and
sbb
lret
je
imul
add
ret
pop
shrb
xchg
xchg
and
mov
inc
int3
sub
mov
out
inc
aad
js
xchg
insl
imul
cld
pop
fcoms
jb
push
jns
xlat
push
int
loop
in
mov
push
sbb
sub
inc
subb
mov
ja
inc
adc
inc
push
lahf
push
lret
mov
cmpsl
and
cmp
sbb
inc
pop
xchg
clc
jns
pop
stos
lods
data16
push
add
ljmp
cmp
nop
pushf
mov
stos
ja
lods
arpl
mov
push
xchg
pop
ljmp
movsb
cld
xor
pop
pop
in
shl
imul
cmp
cld
test
dec
sub
out
les
out
gs
push
decl
in
xor
out
sbb
xlat
and
mov
adc
das
arpl
mov
jmp
test
dec
jmp
or
mov
std
jnp
and
in
lcall
or
mov
adc
jecxz
inc
popf
pop
dec
stos
xorl
xchg
adc
lret
popa
aas
mov
lods
shlb
aad
std
mov
movsb
and
mov
repz
xor
push
mov
daa
dec
mov
loopne
push
sti
xchg
jb
sub
lahf
loopne
out
mov
loop
inc
xorl
std
mov
scas
cwtl
cmpsb
scas
cmp
mov
outsl
cld
lret
and
enter
mov
xor
mov
shl
push
aad
dec
faddp
xor
jae
xor
xor
stc
cmpsl
xor
addr16
push
sbb
dec
pop
imul
pushf
dec
mov
pop
loope
push
js
push
sub
dec
subb
std
ret
mov
into
jmp
insl
stos
inc
test
leave
cmpsl
mov
popf
in
outsl
addr16
xlat
sbb
test
iret
fwait
mov
aas
pavgb
cmc
push
aam
dec
insl
mov
scas
insb
xchg
and
aad
pop
clc
pusha
inc
xor
push
pushf
insb
cld
and
mov
cmp
fisubrl
mov
jae
arpl
sarb
ds
popa
xchg
push
ficoms
aad
wbinvd
ljmp
pop
push
add
sbb
inc
nop
push
outsb
aam
xorl
pop
es
lret
in
arpl
scas
lods
es
pushf
aad
mov
int3
into
out
sub
popf
aaa
hlt
popf
bound
mov
fcompl
into
and
adc
mov
fisubl
xor
fsubs
mov
pop
sbb
or
cs
xchg
and
jnp
mov
cmp
mov
mov
pop
xchg
in
jne
inc
fisttps
arpl
orb
lret
push
push
lret
pop
fsub
sub
xchg
add
dec
inc
jle
sub
cmp
loope
mov
in
and
pop
jbe
mov
dec
jp
adc
push
and
cmpsb
loop
sbb
and
adc
arpl
xor
adc
rcl
and
inc
inc
pop
nop
sbb
inc
mov
fldenv
stos
lods
cmp
movsb
clc
sub
psubsb
dec
push
das
ljmp
test
cmpsl
dec
cmp
mov
out
jne
xchg
jle
inc
and
std
inc
lock
addr16
fidivs
xchg
mov
cmp
setge
lods
cltd
push
dec
cmp
mov
mov
lds
or
inc
mov
incb
stos
xor
lcall
sbb
test
std
test
call
pushf
push
hlt
mov
xchg
outsb
inc
fmuls
adc
lcall
xchg
cmc
xchg
jbe
stos
jge
inc
out
push
xchg
dec
adc
mov
mov
clc
mov
or
aam
xchg
lock
sub
cmc
mov
dec
xor
rorl
xchg
or
call
daa
cmp
imul
jb
push
xor
xchg
mov
int3
or
adc
frstor
mov
addr16
mov
ret
adc
lfs
mov
mov
sbb
add
or
add
enter
subl
xor
cld
or
out
and
xor
cmpsl
cmc
cmp
pop
jle
mov
xchg
dec
sbb
inc
mov
pop
test
aam
sub
gs
jb
xlat
cld
adc
jbe
cld
mov
popf
jbe
mov
and
push
jne
gs
mov
jle
jo
push
push
popa
ja
pop
andb
fstpt
mov
outsl
out
mov
xchg
repnz
mov
test
loop
pop
cwtl
adc
xlat
insl
out
out
or
mov
sbb
roll
in
mov
mov
xlat
xchg
cmp
loope
mov
in
dec
ss
and
xchg
clc
cmpl
push
fidivrs
rcrb
int3
adc
cmpsb
xchg
jge
pop
xchg
push
dec
xorb
arpl
cmp
je
xchg
sub
jp
mov
fldcw
inc
sub
in
jbe
or
ffree
sub
cmp
mov
aas
dec
stc
lret
test
and
mov
movsb
nop
adc
inc
mov
cmpsb
jbe
xchg
mov
fisubl
cmc
cmp
xchg
hlt
or
mov
xchg
popa
push
aas
jne
popf
cmp
rcll
lcall
sbb
xchg
add
cld
nop
dec
jl
out
in
adc
xchg
adc
add
cmp
iret
arpl
mov
aas
cmp
or
iret
rcrb
adc
jmp
and
shll
lret
mov
lret
inc
mov
cld
mov
adc
mov
inc
mov
dec
cmpsb
js
imul
pop
push
add
iret
fcoms
pusha
ja
addb
test
loopne
jg
stc
test
xor
stos
aaa
sub
or
jne
jecxz
shl
cs
ja
adc
std
adc
cmp
and
jge
out
in
mov
shll
rol
sub
shll
pop
dec
mov
jnp
mov
imul
dec
addb
jae
dec
outsb
scas
inc
pop
xchg
popa
icebp
rol
xchg
out
in
mov
ds
mov
jbe
jl
call
pop
adc
cs
push
inc
jb
stos
xor
sbb
mov
fisttpll
aaa
aad
sbb
cmp
mov
into
cmpsl
jmp
push
insb
jno
xchg
andb
pushf
xchg
jo
xor
xchg
jbe
mov
and
pop
rcl
outsb
jle
jecxz
jp
push
mov
cld
cmp
pop
push
jp
icebp
mov
clc
roll
xchg
and
jmp
lock
mov
jno
clc
mov
xlat
dec
cmp
xor
roll
jbe
add
cmpb
incl
inc
mov
mov
test
pop
sub
sub
mov
mov
call
mov
movsb
dec
lret
sub
inc
push
jno
into
pop
push
or
stc
or
mov
xor
sub
mov
xchg
or
pop
fistl
test
push
mov
gs
divl
xor
push
roll
sbb
mov
or
sbb
sub
jno
popf
xchg
jo
das
and
ficomps
nop
mov
inc
add
dec
xchg
or
cmp
dec
enter
ss
mov
in
pop
cld
mov
jb
shrd
loop
fisttpl
mov
out
lret
push
jl
filds
fwait
lods
push
rol
push
out
arpl
add
lods
fisubrl
add
mov
mov
fs
inc
dec
sar
aas
or
sub
or
push
insl
lahf
mov
in
sub
dec
ret
rcrl
daa
pop
out
mov
or
pop
pop
inc
jae
popf
sub
daa
cmp
or
in
aas
mov
out
aas
es
jno
cmp
lcall
cli
cmp
dec
jg
je
insl
enter
imul
ja
xor
push
add
add
ret
jnp
lcall
mov
mov
push
dec
or
push
shl
lahf
movsb
mov
mov
dec
push
mov
out
dec
push
in
mov
mov
jle
nop
movsb
out
out
lahf
adc
dec
lret
mov
loope
add
mov
xor
or
pop
jbe
inc
in
jo
int
jno
xchg
and
fsubl
scas
gs
add
xchg
adc
iret
sbb
inc
cmp
pop
int3
dec
in
jl
jle
cmp
push
mov
outsl
jle
xchg
xor
pop
mov
stos
shlb
sti
ja
cmp
into
aad
jle
pop
xor
aam
adc
pop
cld
push
xchg
jnp
insl
les
inc
sbbl
ud1
fimuls
pop
pop
lret
std
pop
mov
call
or
je
jnp
lcall
jge
mov
pop
mov
cltd
pop
jno
repnz
lds
in
lods
inc
rclb
lock
enter
and
jns
cmp
rorb
jmp
addl
cld
sbb
bound
mov
insb
sbb
mov
or
mov
stc
mov
or
pushf
mov
cmpsb
je
cmp
inc
jmp
mov
inc
addr16
and
cltd
icebp
pusha
js
cmp
ljmp
xchg
arpl
sbb
sub
into
sub
out
xor
dec
mov
add
jbe
lret
movsl
xor
xlat
divl
dec
sbb
xchg
inc
nop
in
ret
xchg
imul
aas
fdivl
stos
mov
aas
xchg
xor
mov
enter
out
inc
mov
add
sbb
aam
idivl
ljmp
xchg
sarl
test
xlat
add
jb
test
xor
xor
xchg
cmpsl
jle
push
mov
or
and
aad
ffree
enter
mov
pop
ret
add
jbe
inc
nop
cwtl
in
in
imulb
mov
add
rorl
neg
test
cltd
mov
shlb
pusha
pop
adc
outsb
and
stc
stos
adc
pop
cmp
mov
cmp
sub
xchg
cld
push
dec
dec
cmp
mov
movsb
jo
lcall
push
push
cmpsl
cs
push
popf
out
test
mov
jnp
pop
imul
jl
rorl
xchg
into
inc
mov
pop
sub
xor
cltd
mov
and
lds
lahf
out
stos
imul
add
cltd
rol
sbb
jp
sbb
or
sub
push
push
sbb
push
sub
xchg
mov
add
pop
xchg
and
xchg
in
pop
pop
jge
push
stos
or
je
pop
mov
loopne
jno
arpl
push
cmc
aaa
push
dec
nop
outsb
adc
cld
iret
stos
addl
fists
loope
movsl
out
jns
jecxz
test
pop
push
es
js
pop
xlat
cmc
pop
push
push
cmpsl
orl
flds
pusha
lahf
in
movsl
clc
push
sub
inc
pop
bound
stc
sbb
xorb
jns
mov
insb
out
sbb
fldl
mov
popf
and
pop
fsubr
jecxz
mov
lds
leave
sub
cltd
int
mov
loopne
scas
movsl
mov
outsl
rol
fdivr
in
pop
jb
jae
pop
ja
mov
pop
adc
ret
pop
or
jecxz
add
inc
xorl
sub
mov
adc
mov
or
out
pop
xor
cmp
in
fwait
pop
dec
jne
pop
xor
jecxz
int
in
sub
dec
xchg
sub
pop
fsubr
add
stos
dec
rclb
cmp
jo,pt
sahf
ss
jo
repnz
mov
das
ja
xor
lret
int3
pop
xor
push
rcll
dec
and
sub
inc
mov
lods
fs
dec
stc
adc
cld
inc
aad
cmp
mov
add
ror
add
mov
lret
inc
dec
jb
push
aam
xchg
pop
imul
stos
cmp
rolb
addr16
stos
pushf
sbb
data16
ret
mov
and
sub
dec
push
dec
xor
cmp
sub
out
ret
xchg
mov
and
and
pop
push
jge
push
pop
loop
inc
pop
xchg
test
hlt
jae
mov
inc
jnp
pmuludq
inc
shlb
xchg
jmp
jne
outsl
xor
pop
xchg
repnz
xchg
out
outsb
imul
ret
popf
cmpsl
imul
inc
jmp
aam
sbb
sbb
dec
cmp
adc
sub
push
repz
loopne
jbe
mov
mov
mov
or
jmp
sbb
add
xchg
mov
mov
xor
dec
clc
das
in
in
fdiv
cmp
sbb
mov
imul
ja
lahf
push
out
fwait
mov
repz
jns
cmpsl
xchg
arpl
sub
iret
xlat
mov
dec
sti
mov
ficomps
cli
ljmp
enter
inc
fstl
and
ret
inc
aas
xchg
repz
iret
into
push
ljmp
pusha
dec
sbb
rolb
inc
and
addl
imul
aam
mov
add
xchg
andb
aaa
scas
gs
inc
test
jge
mov
xchg
pop
mov
push
jo
out
cmp
jl
in
lahf
push
hlt
insb
ret
aaa
mov
cmp
xchg
push
test
out
sarb
mov
push
xchg
dec
add
loop
cmp
push
roll
pop
add
mov
pop
aam
cmpsb
adc
and
mov
add
cld
enter
clc
xlat
add
xlat
loope
or
jae
fisubrl
orb
dec
mov
cmpsl
push
fisubs
arpl
inc
daa
xor
and
movsb
popf
lods
push
mov
vandps
add
cmp
push
mov
mov
iret
sub
aad
fsubrs
inc
or
or
add
push
mov
cmp
add
pop
in
mov
adc
mulb
test
push
jno
repnz
pop
cld
roll
and
pop
in
pop
pop
popf
inc
inc
xchg
inc
and
mov
jbe
inc
lods
push
add
or
icebp
adc
lods
test
inc
mov
lods
jp
adc
xlat
stos
push
cs
fs
hlt
adc
push
jecxz
lret
int
sbb
inc
mov
pusha
out
inc
push
adc
add
shrd
pop
or
inc
sbb
popa
cli
add
sbb
inc
or
lret
popw
clc
jb
mov
aad
lods
jne
pop
sub
jle
loopne
rcrl
xor
fs
pusha
rclb
adc
inc
jge
pop
push
je
sbb
repnz
fstl
lock
loop
add
add
mov
js
push
std
stos
inc
pop
sub
xlat
xchg
pushf
push
jg
out
push
adc
out
and
lret
hlt
lea
push
stos
sbbl
xor
inc
xchg
aad
or
add
pop
popa
dec
ss
adcl
mov
addl
ds
popf
mov
sub
insl
leave
mov
pushf
sub
data16
data16
push
lods
add
jmp
cmpsl
pop
and
mov
mov
mov
pop
inc
xchg
and
gs
std
mov
dec
pop
ds
fbld
insl
mov
icebp
andl
cltd
or
jge
aas
add
mov
push
rorl
sbb
ja
push
push
sub
sti
jbe
mov
mov
jns
inc
call
rorb
adc
or
fistpll
pop
mov
xchg
jb
das
add
sbb
sub
shll
ficoml
sbb
pusha
xchg
insl
pop
adc
repz
mov
pop
dec
pusha
sbb
jns
out
xor
xor
mov
ja
arpl
dec
insl
adc
leave
in
push
or
or
jbe
mov
test
and
sub
hlt
inc
std
in
xor
addr16
push
mov
jmp
ret
pop
jo
sub
mov
es
xchg
mull
jb
add
es
dec
repnz
cmp
cs
test
in
or
gs
sbb
int3
cmpsb
notb
nop
pop
mov
adc
push
push
inc
mov
cmc
fldt
and
test
inc
test
pop
test
sysret
popf
mov
repz
aaa
insb
cmp
dec
imul
xchg
mov
test
aam
lahf
mov
push
pop
lahf
push
fs
addb
es
cld
stos
loopne
dec
orl
sub
sub
notl
repz
mov
cltd
fstpt
jp
inc
int3
cltd
xchg
loope
and
adc
xlat
scas
call
cld
fstpt
cmc
xor
inc
loop
test
loopne
loopne
repnz
ret
ja
push
push
pop
leave
dec
fistl
cmc
and
lret
add
ds
shrl
sub
mov
mov
gs
ja
mov
pop
cltd
std
call
jge
aas
mov
adc
dec
mov
jle
stos
cmpsl
xchg
loop
xchg
push
jb
mov
pop
xor
pop
das
fstps
or
jae
xor
inc
pop
mov
insl
xchg
mov
xchg
xchg
xor
lcall
call
inc
mov
cmpsl
movsl
xchg
aam
iret
mov
xorl
jns
ret
add
ljmp
adc
jl
imul
scas
dec
xchg
or
fmul
jl
iret
jns
xchg
test
cld
dec
jb
int3
xchg
xorb
fadds
mov
push
out
clc
and
xor
negb
nop
mov
adc
imul
aad
inc
mov
jle
cmpsb
pusha
out
cwtl
repz
adc
lods
rcl
xchg
cmp
jno
outsl
xchg
scas
mov
add
cmp
popa
ljmp
cmp
scas
ljmp
pop
arpl
imul
lock
movsl
xlat
xchg
dec
add
push
xchg
add
xchg
inc
repz
push
jg
ss
push
ret
aam
jo
mov
xor
jle
add
popf
stc
clc
xorl
xchg
cs
xlat
inc
mov
cmp
mov
cld
xor
loop
iret
aam
cmp
push
cmp
outsb
repnz
shl
adc
sub
mov
jne
out
xor
int
jnp
push
lds
cmp
and
lcall
pop
test
jp
xlat
xchg
or
sub
outsb
movsl
adc
loop
movsb
lcall
movsl
insb
rclb
imul
sub
daa
fisubrs
test
or
dec
dec
icebp
sub
mov
xor
test
add
movsb
mov
sub
mov
rorl
leave
dec
cmp
in
stos
or
sub
cmp
dec
add
push
pop
sbb
xchg
fcompl
inc
ljmp
es
mov
movb
test
mov
or
sbb
and
mov
enter
into
pop
fwait
jnp
adc
sbbb
xlat
or
xor
movsb
dec
fdivrl
icebp
clc
cmp
xchg
gs
dec
sub
rcl
pop
cmc
loope
loopne
mov
add
add
icebp
cltd
sbb
jle
das
mov
fmull
adc
mov
dec
jbe
mov
mov
enter
aad
mov
dec
icebp
test
popa
daa
adc
into
test
stos
movl
and
xchg
cmp
sbb
ds
arpl
pop
out
in
and
addl
jg
adc
xchg
outsl
inc
andl
pop
pop
jb
dec
sub
add
cmp
scas
stos
es
jmp
imul
mov
pop
cmp
fs
les
add
mov
int3
adc
mov
aaa
push
adc
jae
cmpsb
cmpsl
or
sub
jl
push
xchg
cli
pop
pop
aam
js
jns,pt
outsl
repnz
sahf
dec
sbb
jb
add
xchg
inc
mov
shl
dec
dec
mov
jns
mov
arpl
inc
push
ss
fs
faddl
decl
pop
mov
mov
jmp
xor
data16
js
lcall
inc
jae
rclb
stos
ss
cmp
sub
mov
or
xchg
mov
stc
outsb
adc
fstpl
jne
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
sub
add
insb
addl
cmp
icebp
xor
fwait
call
mov
push
aad
inc
je
nop
xchg
ljmp
ficompl
push
fimuls
jb
inc
jp
fimuls
jp
les
xor
xor
js
mov
mov
repnz
mov
call
dec
jnp
mov
in
icebp
xchg
stos
rorl
mov
xchg
rclb
enter
sub
mov
mov
push
cltd
into
add
sahf
jle
mov
pop
push
jge
leave
dec
lcall
mov
lds
xchg
test
out
out
testl
jbe
cmp
dec
pop
es
pop
pop
xchg
insl
fldcw
mov
icebp
pop
loopne
addr16
cwtl
xlat
incb
xor
jmp
xlat
mov
ret
shl
xchg
shrb
ja
jb
out
xchg
cmpsl
sub
mov
add
test
cmpb
xchg
mov
push
add
cltd
fadd
movsb
dec
fwait
push
jp
jns
jb
lock
ret
nop
jb
lods
pop
jns
mov
inc
and
push
movsb
outsl
insl
xchg
leave
adc
and
nop
or
loope
jno
push
sbb
int
aam
and
pop
cmpsb
sub
xchg
mov
mov
lods
add
mov
jbe
test
aas
lret
dec
scas
stos
enter
test
fdivr
iret
lds
inc
push
into
jmp
push
insb
sub
ja
bound
xchg
fcompl
and
adc
mov
push
mov
popa
ja
idivl
sbb
adcb
mov
xlat
mov
inc
rcll
ljmp
add
movsb
cs
aad
inc
les
sub
inc
shlb
in
sbb
lahf
push
mov
fsubl
hlt
inc
ss
lret
dec
adc
push
cmp
es
ret
mov
xchg
test
and
inc
and
mov
lods
faddl
lock
and
adc
push
data16
mov
mov
mov
in
adcl
cs
lret
insb
mov
gs
inc
lock
rorb
jae
push
stos
mov
mov
in
enter
rclb
adcb
cmp
shll
push
sub
push
aas
cmp
scas
aas
push
add
or
sub
pusha
popf
es
in
pop
and
fs
lahf
aam
cltd
data16
mov
xor
nop
cmp
pop
insl
push
jnp
xchg
and
adc
push
mov
push
sbb
add
xlat
lret
cmpsb
fstl
faddl
aaa
aaa
into
mov
rorl
push
mov
ret
push
mov
aam
adc
add
push
dec
xor
cmpsl
xor
out
mov
repz
jp
or
sub
mov
dec
and
dec
pop
cmpb
xchg
sbb
or
or
fs
inc
xchg
xchg
and
xchg
rorb
pop
cmp
rorl
cli
fcmovnb
inc
jae
fmull
or
sbb
dec
xlat
mov
push
lret
fsub
imul
add
mov
jcxz
je
repnz
add
xchg
or
jl
push
call
je
dec
pop
jecxz
popa
pop
lret
or
dec
int3
add
add
mov
mov
cmpsb
push
inc
lods
pop
or
insb
pop
out
adc
add
insb
enter
in
fbstp
insl
movsb
lock
sahf
mov
repnz
xchg
loopne,pt
mov
loope
orb
in
cli
cltd
inc
fldl
loope
test
push
jbe
test
lock
negb
inc
call
movsl
pop
loope
jg
push
lods
movsb
push
arpl
ret
in
or
mov
xor
mov
pop
test
repz
jnp
sahf
sbb
std
pop
bound
shll
inc
call
jg
sahf
jnp
sbb
insb
mov
mov
lahf
lock
xlat
jnp
repz
and
mov
mov
icebp
adc
int
movlps
xor
cmp
test
and
cltd
push
jno
in
shrb
push
pop
xlat
sbbb
cmp
js
testl
loope
movsl
sahf
dec
aam
in
test
jne
les
jge
jb
cmc
pop
push
jns
xchg
sbb
xchg
push
out
repz
cmp
std
push
in
rcl
push
fwait
inc
pop
inc
cs
inc
icebp
pop
daa
cmp
pop
add
repz
jp
adc
iret
cmp
mov
and
lods
imul
rol
mov
enter
push
xor
rcrb
stos
and
or
or
enter
mov
sbb
fucom
cmp
lret
cwtl
std
ja
fistpl
adc
mov
jg
rcll
es
fsubrl
cwtl
nop
punpckhwd
outsl
repz
out
mov
cltd
mov
mov
ret
sub
cmp
mov
je
rcrl
nop
es
cwtl
add
xchg
ret
xchg
loopne
inc
xor
inc
orb
sbb
xchg
jno
cld
mov
cld
add
fnstcw
rclb
in
inc
rorl
idivl
push
cmp
jle
sub
and
mov
jg
dec
or
mov
xchg
xchg
test
scas
pop
push
xchg
mov
push
inc
mov
push
sbb
aam
mov
nop
mov
iret
aam
in
push
xorl
mov
pop
inc
mov
jle
in
fs
xor
in
mov
fistpll
and
lods
bound
dec
sub
mov
stos
cmpsl
cwtl
sub
push
push
jb
dec
mov
mov
inc
push
jb
mov
sub
out
pop
mov
push
push
js
int3
sub
push
lea
adc
fiadds
xor
or
inc
jnp
add
push
cld
test
les
push
pop
mov
ffree
stc
or
push
stc
int3
les
sahf
adcl
add
lahf
lret
cmp
cmpsb
sahf
fs
add
test
mov
fadds
xchg
pop
or
out
jle
add
test
xchg
xchg
dec
mov
les
in
cmpl
jb
mov
sub
or
xchg
mov
lods
movsb
out
mov
ljmp
pop
add
or
pop
inc
add
subl
idivb
add
jns
ss
pushf
dec
rcl
mov
imul
insb
test
mov
push
adc
insb
cmp
xchg
mov
repz
push
lret
jbe
adc
mov
push
xor
test
xor
adc
dec
in
inc
mov
sbb
pop
sub
cmp
cmp
test
adc
mov
mov
cmp
sub
sahf
test
mov
rcrb
inc
sub
into
adc
xor
int
lahf
jg
pop
imul
daa
fstp
dec
fmul
pop
rcrl
adc
jmp
ret
and
movb
lock
mov
dec
dec
aad
jmp
inc
jo
test
xchg
inc
dec
add
fidivrs
cmp
adc
mov
scas
sbb
jne
xor
test
jae
pop
ficompl
loop
add
cmp
out
xchg
lock
pushf
xchg
fcoml
mov
mov
incl
sbb
cld
pop
mov
xchg
out
imul
movsl
es
add
mov
sub
ret
sub
inc
mov
pop
add
nop
filds
push
adc
pushl
popa
sub
or
rep
mov
xor
xor
sbbl
jno
xchg
movaps
jno
fwait
dec
sub
es
xor
fcomp
xchg
cmp
sbb
and
mov
mov
daa
dec
scas
sub
popa
cld
lcall
mov
in
les
ret
stos
push
jecxz
jnp
ja
adc
xor
repz
in
fstps
mov
adc
push
xor
repz
adc
jnp
push
inc
xor
mov
mov
in
rclb
sbb
shl
bound
jno
iret
sub
mov
dec
stos
inc
fs
xchg
ss
xor
repnz
push
adcl
mov
mov
loop
fimull
sbb
gs
mov
jp
sbb
cmc
mov
test
lds
das
or
ja
push
clc
test
push
icebp
push
pand
jo,pn
arpl
pop
xchg
fildl
or
sub
out
xorb
call
in
pop
pushf
inc
shl
fnstenv
shll
std
int
sub
adc
jecxz
out
push
notb
adc
fs
out
loop
jle
dec
mov
sti
add
mov
lock
ror
lods
jbe
enter
lea
insb
push
mov
hlt
cmpsl
loop,pn
lods
cmc
lcall
mov
dec
popa
push
sub
pop
adc
or
or
out
scas
push
rcrl
add
lds
enter
pusha
xor
jp
xlat
xchg
scas
fcompl
aad
mov
imul
add
mov
ficomps
pop
sbb
jmp
addr16
lock
aas
lods
jmp
enter
adc
xor
setge
jns
test
push
xchg
xlat
outsl
fnstcw
ficoms
inc
push
shrb
sbb
lods
pop
mov
test
or
xchg
enter
add
and
outsl
sbb
hlt
xlat
scas
ficompl
mov
aas
out
std
clc
or
shr
pop
adc
std
rolb
sbb
mov
pusha
int3
mov
insb
outsb
fcomps
das
push
mov
lcall
sub
icebp
xchg
popf
jb
pop
or
test
cmpb
clc
out
push
jno
inc
xor
jb
sub
fld
sub
and
xchg
or
fstpt
out
mov
mov
mov
jmp
test
add
call
dec
data16
sub
ret
in
addr16
repz
out
inc
inc
iret
cmpsb
daa
cmp
out
out
lahf
jl
shrl
stos
cmp
xor
mov
inc
stos
orl
sti
fldl
jle
js
imul
adc
jne
cwtl
pop
fmulp
jb
or
ja
lds
xchg
in
mov
jnp
mov
xchg
lcall
scas
mov
pop
imul
push
add
ja
clc
mov
push
push
subl
and
inc
out
push
pop
ja
fstl
sar
dec
cmp
dec
fsubrl
mov
sub
push
and
mov
jg
mov
mov
pop
xchg
enter
std
out
hlt
out
jmp
pop
outsl
andb
mov
mov
adc
jle
mov
add
cmp
lds
push
pop
jbe
or
mov
rcl
push
mov
fdivr
mov
mov
fdivl
sbb
outsl
or
inc
stos
addb
mov
icebp
sub
sub
mov
out
sbb
ljmp
cwtl
and
jg
cs
mov
or
jae
popf
mov
js
sahf
in
rclb
pop
xor
add
fldcw
or
pushf
cmp
loop
mov
mov
dec
pushf
jge
ljmp
cmp
pop
mov
test
fwait
mulb
sti
dec
cmpsl
pop
pop
lcall
stc
cli
and
and
jg
and
pop
shlb
aam
in
mov
adc
cwtl
rcr
mov
or
rol
pop
clc
dec
mov
test
lods
sbb
mov
ret
inc
scas
inc
adc
in
scas
xchg
jbe
lcall
dec
cmp
adc
jno
in
pushf
or
lahf
sub
fists
mull
in
sbb
fwait
test
jp
sbb
dec
or
mov
xchg
imull
mov
jns
pop
inc
daa
or
aas
push
sbb
pop
nop
loop
jo
cltd
jae
mov
xor
cs
lahf
adc
call
ret
into
xor
repnz
adc
mov
push
mov
pop
movsl
or
movl
mov
xchg
push
jno
ljmp
mov
shrb
jecxz
imul
push
and
insb
sub
pushf
ja
stos
xor
lods
sbb
std
les
dec
das
mov
fcomip
jecxz
adc
sbb
gs
cltd
sub
mov
push
xchg
xchg
xor
sbb
push
arpl
inc
movb
fmuls
ljmp
mov
push
xor
xor
gs
pop
cli
or
pop
mov
dec
icebp
add
inc
lret
jge
jne
popf
xchg
scas
push
or
lock
xlat
mov
in
repnz
push
lds
jns
in
add
jae
sbb
mov
pop
imul
xchg
mulb
push
das
in
mov
arpl
or
and
pop
lret
ret
push
sbb
out
stos
and
jg
sub
scas
aas
hlt
shl
icebp
stc
xor
lret
clc
lcall
es
daa
ret
jae
mov
and
and
or
push
xor
mov
inc
ljmp
mov
jp
add
jne
jle
mov
sbb
les
mov
mov
jno
mov
leave
inc
daa
sub
jae
addl
pushf
cwtl
lods
out
loope
es
sbb
mov
test
iret
sub
sbb
outsl
inc
cmp
movsl
xchg
mov
popa
and
icebp
cmp
xor
mov
in
ds
into
jmp
push
dec
test
shrl
sbb
xor
stos
adc
in
dec
je
ficoml
cli
and
mov
jne
sarl
mov
pop
outsb
mov
dec
divl
jge
ja
nop
sbb
ret
je
js
lea
addl
test
inc
xchg
iret
loop
and
icebp
or
jnp
add
adc
add
fwait
pop
fidivs
xchg
outsl
mov
pop
mov
shlb
arpl
push
movl
sar
jns
loop
repnz
xorb
and
mov
ds
xor
lea
sub
mov
push
out
sub
stc
pop
call
cwtl
mov
or
movsb
lahf
jl
xor
adc
inc
cmp
scas
stc
jmp
jmp
and
scas
gs
add
adcb
inc
rolb
mov
adc
in
nop
xor
lret
jg
fmulp
jne
out
dec
ret
mov
jmp
mov
inc
sbbb
mov
sub
js
push
adc
repz
jg
cmp
loop
xor
lock
sti
fbld
mov
aaa
sub
hlt
sub
fs
test
aad
enter
xchg
xchg
mov
lods
inc
daa
push
aaa
adc
pop
in
xchg
data16
push
mov
cld
sub
popf
scas
or
cltd
movsl
jl
aas
lods
daa
mov
popa
sub
jo
push
inc
dec
hlt
sarl
lock
fwait
adc
inc
scas
mov
sub
shrb
cli
loope
daa
xchg
mov
dec
dec
test
into
lds
clc
mov
push
xor
imul
sbbl
mov
daa
stos
push
int
cmc
test
push
xchg
dec
cmp
imull
adc
jp
xchg
xor
into
adc
add
mov
loope
sbb
xchg
cwtl
aas
mov
or
stos
mov
or
mov
lock
imull
push
push
mov
push
xor
in
arpl
sbb
stc
rcrl
outsb
jl
pusha
jns
mov
pop
pop
jae
inc
test
inc
sub
das
int3
loope
xchg
ja
outsb
test
inc
add
cmp
lret
test
mov
mov
cmc
xchg
stos
std
out
cld
jge
and
nop
loope
and
pop
mov
shr
pop
arpl
ss
int3
arpl
sahf
xlat
pop
pop
mov
ja
mov
loopne
movsb
and
mov
fidivrl
or
dec
or
mov
cmp
icebp
push
imul
xchg
sub
sub
add
lahf
add
pop
mov
xor
daa
mov
or
insl
hlt
mov
cltd
daa
lret
add
add
jle
fdivl
xchg
push
jl
mov
fs
stos
dec
jl
xor
push
jae
les
jmp
pop
add
test
icebp
lret
xlat
or
push
rolb
sbb
outsl
sbb
mov
or
sub
loope
jno
out
lock
or
mov
movsb
ds
xor
imul
or
mov
in
cli
inc
xchg
dec
adc
dec
pop
imul
mul
dec
mov
and
in
push
loop
lea
outsb
push
inc
xchg
je
xchg
iret
xlat
xlat
and
subl
fcomip
pop
mov
jle
pop
mov
leave
inc
enter
mov
push
cmpsl
mov
out
pop
out
popa
enter
shlb
inc
dec
xor
pop
sub
add
ret
in
lods
les
pop
in
adc
xor
repz
push
sti
gs
pop
pop
mov
add
and
and
pushf
xlat
dec
cli
push
int3
sbb
adc
pushl
push
sti
or
pop
xchg
pusha
fstl
push
loopne
xor
mov
jns
lock
fdivrp
inc
xchg
push
pop
push
fadd
xchg
subl
in
cmp
sbb
mov
adc
scas
or
jns
stos
xchg
scas
outsb
push
call
xchg
in
xchg
push
arpl
mov
mov
loop
jb
cld
cmpsl
cs
dec
or
test
pop
js
mov
push
ljmp
sbb
das
insb
add
push
sbb
insb
lahf
inc
int3
adc
shlb
dec
add
add
hlt
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
cmp
dec
add
add
add
add
add
add
add
jo
add
add
add
push
push
inc
push
mov
pop
dec
xchg
ss
inc
movsb
lock
add
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
