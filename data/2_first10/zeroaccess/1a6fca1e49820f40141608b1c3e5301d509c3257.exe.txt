push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
and
mov
in
jo
rcl
aad
ror
rol
pop
push
add
insb
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
cmpsb
mov
in
imul
adc
lods
fildl
sbb
cmp
xchg
sbbl
iret
mov
xchg
jno
mov
and
sbb
scas
push
push
imul
jp
hlt
xchg
pusha
je
adc
cli
cli
imul
je
movsl
rolb
inc
test
inc
push
ror
mov
int3
mov
call
push
sarb
pop
out
loopne
call
stos
sub
mov
push
arpl
cmp
push
stos
xor
adc
pop
push
add
push
or
aas
sub
cmp
pop
inc
hlt
aaa
addr16
push
enter
shr
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
xor
and
jo
in
jo
repnz
add
cmpsb
pop
xchg
loop
mov
lds
int
gs
xchg
dec
fildl
push
outsl
jmp
mov
and
mov
repnz
pop
into
mov
inc
stc
fs
adc
adc
mov
lcall
out
and
orb
cmp
inc
or
cmp
loop
jo
fs
mov
xor
movsb
inc
aas
mov
daa
pushf
ret
push
mov
repz
into
fbld
xchg
adc
xchg
dec
movsb
push
sti
xor
jo
cwtl
pop
inc
je
inc
mov
xchg
loopne
mov
mov
adc
aas
push
jl
dec
push
nop
pop
test
mov
mov
in
and
int
xor
sbb
and
sbb
jbe
adc
jb
addr16
and
cmc
push
pop
cmp
adc
push
jle
aas
popf
bnd
jl
nop
pop
jg
jmp
ljmp
js
mov
es
leave
rcl
jb
je
dec
pusha
rol
popf
outsb
aas
mov
adc
popf
pop
fcmovnbe
mov
pop
pusha
lea
test
daa
mov
mov
outsb
cmp
inc
jg
pop
push
and
pause
cmp
push
add
add
pushf
sbb
pusha
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
jge
icebp
dec
jle
jo
jg
jo
outsb
ljmp
nop
and
rolb
inc
lret
adc
es
push
adc
mov
xor
sbb
mov
pop
insb
xlat
aad
lock
movsl
sbb
ds
movsl
pop
mov
dec
movsl
and
jle
in
fdivr
push
out
sbb
mov
dec
test
fistl
inc
sbb
sbb
mov
stos
int3
stos
add
stos
test
mov
jae
adc
cld
or
enter
inc
mov
push
or
sub
cmp
jl
push
rorb
les
jl
push
fsubrs
lret
cli
sbbl
rcr
lds
int
cmp
cmpsb
stos
mov
dec
add
data16
cmp
hlt
jmp
mov
sbb
sbb
das
imul
js
and
bound
cmc
xchg
inc
push
rol
and
pop
pop
loop
dec
lods
inc
fmuls
cmp
cmp
adc
sbb
icebp
popw
lods
add
loop
or
mov
jno
adc
sbb
gs
sub
mov
into
add
push
movsl
push
ljmp
pop
mov
lock
inc
mov
cmc
inc
mov
mov
jl
dec
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
xor
mov
in
jo
and
mov
leave
mov
xchg
sbb
stos
outsb
xchg
and
test
outsl
aaa
or
test
xor
orb
std
jnp
ret
push
movsb
or
fdivrs
add
enter
pop
push
dec
xchg
xchg
imul
lcall
enter
jns
shll
insl
nop
std
xor
jno
nop
popf
iret
adc
jae
ljmp
aam
loopne
cmp
sbb
addl
sbb
fnstcw
int
movsb
repnz
jge
lea
je
cmc
or
cmc
mov
lcall
aaa
and
pop
loope
imul
mov
adc
pop
inc
shlb
adc
sub
sub
rorl
mov
xchg
cwtl
xor
loope
dec
xor
push
or
add
std
dec
inc
cmp
mov
add
pop
sub
jns
cld
cmp
jns
bound
mov
stos
scas
sbb
lea
out
mov
or
fsubrl
adc
cmp
test
imul
into
sbb
test
call
dec
push
adc
xor
push
lret
test
ljmp
jne
pop
repz
cmp
stc
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
mov
jnp
jo
jge
jo
sbb
jmp
cmp
daa
or
mov
sub
fldcw
xor
into
mov
out
pusha
mov
aad
jl
mov
ds
data16
js
andb
sbb
les
cmpsb
cmp
rorb
jmp
pusha
add
push
cwtl
mov
fcomi
loopne
pop
imul
imul
jle
jmp
popf
mov
fimull
movsb
pop
xlat
jmp
mov
mov
js
call
mov
movsl
aam
cmpl
sub
add
mov
cli
pushf
sub
clc
jns
test
stos
push
adc
aas
push
sbb
pop
pop
jbe
xor
add
inc
jmp
jg
jp
leave
dec
or
addr16
inc
dec
mov
pop
dec
mov
enter
lods
cmp
pop
push
movsl
and
mov
or
jb
mov
xlat
popf
negb
sbb
and
and
stos
enter
xchg
xchg
and
fcoml
call
cmp
cmp
mov
lds
pop
call
jne
cmp
xor
xor
dec
mov
cmp
xchg
cmp
pop
call
xchg
add
cmpsb
fnstenv
ss
sub
dec
fcmovnb
out
dec
inc
jb
scas
ja
add
fldl
jmp
nop
xor
movsb
dec
and
shl
ficoml
outsl
imul
std
gs
adc
sbb
and
mov
scas
sti
sbb
flds
or
jp
mov
inc
mov
mov
mov
insb
imul
in
mov
popf
rol
aad
outsb
sub
mov
sub
dec
ja
notl
call
incl
sbb
insl
clc
mov
test
pushf
movsb
pop
dec
cmp
fs
push
sub
ss
inc
aaa
popf
mov
loope
fsubp
mov
les
cltd
mov
pop
aam
dec
lock
cmp
dec
pop
inc
lcall
jge
pop
scas
cmp
mov
out
inc
stos
pop
adc
pop
adc
dec
andl
imul
sbb
outsl
pop
ja
shlb
or
scas
cli
mov
roll
cmpsb
movsb
push
or
rolb
outsb
mov
mov
push
adc
inc
fs
leave
movsl
jbe
iret
dec
sbb
aas
subb
fcomps
lea
dec
xor
mov
pop
lret
sub
int3
pusha
xchg
shl
pop
push
repz
lret
xor
test
mov
dec
and
cltd
push
lahf
jo
jle
mov
cld
push
lea
test
inc
lds
mov
sbb
int3
push
or
xchg
es
push
jno
fsubp
pop
mov
inc
mov
xchg
fstps
lock
dec
ret
int3
jae
mov
ljmp
std
cs
mov
cmp
pop
mov
and
mov
inc
mov
shr
stos
cmp
mov
pop
ret
jo
inc
cld
jle,pn
inc
sub
ret
xor
inc
inc
lret
xor
popf
pushf
jnp
xor
in
or
addr16
decb
dec
les
ret
mov
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
into
sub
cmp
jo
xchg
jge
jo
enter
int
push
icebp
jo
fidivl
lret
outsl
stos
in
icebp
mov
xchg
and
fisubrl
testl
aam
call
and
push
shrl
push
negl
test
nop
pop
jns
mov
push
inc
xlat
adc
jae
pop
dec
mov
outsb
mov
mov
cltd
mov
data16
dec
mov
jecxz
mov
mov
mov
cmc
jmp
push
icebp
mov
imull
lods
push
inc
fcmovnbe
std
insl
shrl
in
mov
sub
popf
lret
lods
inc
jnp
fistpl
cltd
jecxz
test
pop
loop
mov
arpl
cmp
aam
imul
mov
inc
jmp
mov
dec
pop
inc
cmp
ret
add
jl
cmp
mov
stos
mov
xchg
gs
popa
dec
enter
mov
frstor
cli
cmpsl
les
aam
jo
rcr
ljmp
arpl
nop
rcr
clc
and
push
in
push
add
jnp
inc
insb
pop
jl
daa
jl
or
or
shrb
ficomps
cmp
pop
and
sbb
sbb
leave
jmp
dec
push
jo
pop
test
in
add
push
hlt
or
pop
imul
adcl
sub
xlat
lods
pop
pop
imul
jle
pop
cmp
fidivs
cmp
sbb
cld
mov
jae
add
sub
addr16
loope
cmp
mov
xor
cmp
loope
cwtl
jg
lahf
sub
enter
in
push
xchg
popf
push
enter
je
repz
xchg
and
in
rorl
adc
cld
sub
inc
int
xchg
xchg
lds
cmpsb
or
in
adc
aam
div
fmull
inc
mov
mov
je
xchg
mov
addr16
filds
ljmp
je
popa
sub
inc
dec
mov
mov
xchg
fcom
pop
bound
add
jns
adc
insb
rolb
in
sub
xlat
push
push
xor
mov
inc
add
fdivl
flds
mov
and
jmp
xchg
dec
inc
mov
push
cmc
stc
sub
push
mov
in
js
add
mov
subb
int3
sbb
pop
dec
jnp
aam
fs
sub
roll
pop
adc
in
jbe
xchg
and
mov
ss
jg
lea
push
hlt
push
jns
arpl
xor
not
stc
out
mov
jmp
js
pushf
sub
cli
cs
repnz
lods
push
sub
xchg
movsl
mov
jp
push
cmpsb
lods
out
cmp
dec
jo
dec
gs
xchg
enter
in
and
add
je
jae
andb
cmp
mov
daa
fdivr
cld
and
dec
cmp
pop
mov
jl
dec
aam
stos
mov
imul
and
cmpsb
cmp
sub
std
shlb
cmpsl
out
loop
sub
sub
test
push
push
cmpsb
es
or
jnp
pushf
sahf
andl
sbb
sbb
insb
xor
bswap
cmpl
pop
ljmp
cmp
arpl
iret
ljmp
sbb
movsl
adc
inc
cld
xor
dec
inc
inc
add
es
add
mov
add
in
lock
mov
push
scas
int3
cmpsl
lods
dec
mov
push
add
jo
jge
jo
pushf
xor
pop
arpl
or
mov
out
outsb
addb
popa
sub
mov
push
adc
fbstp
das
mov
or
leave
cwtl
xchg
and
inc
pop
aas
fs
sub
fchs
enter
and
pop
dec
or
addr16
lea
xor
push
jmp
leave
sub
int
xor
dec
popa
push
push
movsb
inc
push
cltd
mov
pop
outsl
sub
testb
aad
cltd
mov
out
pop
lcall
xchg
dec
out
into
sbb
roll
adc
xor
aam
enter
ud1
pop
daa
jecxz
sbb
push
inc
jmp
inc
jne
sub
gs
stc
mov
jg
xor
sar
inc
lock
bnd
jae
jae
xor
mov
les
in
mov
addr16
aad
sub
imul
xorb
in
or
mov
fs
cli
shll
add
mov
pop
mov
xlat
push
xor
inc
pop
mov
in
mov
push
jnp
mov
xchg
jp
jp
adc
pop
jmp
scas
adc
mov
xor
cs
mov
cmc
popa
xchg
pop
sbb
pop
aas
cmpsl
test
push
xchg
adc
data16
repz
clc
sub
add
pop
xadd
repnz
mov
jae
dec
inc
dec
addb
and
lods
xchg
mov
or
push
mov
lods
outsl
popf
jbe
imul
xchg
cwtl
inc
test
scas
jle
cmpsb
fstpl
sub
sbb
adc
xor
xchg
fadds
gs
mov
inc
sub
xchg
fdivr
inc
lods
movsb
jb
jno
or
inc
movsb
dec
gs
sbb
mov
ss
push
xor
push
fmul
adc
jmp
scas
stos
mov
popf
imul
or
mov
jbe
clc
rorb
scas
mov
jno
adc
cmpsb
pop
xor
jnp
hlt
aad
and
in
add
sbb
mov
sub
imulb
je
inc
jo
stc
pop
mov
jmp
imul
cmpsb
lret
xchg
and
fldenv
sub
ljmp
aaa
popa
out
jp
daa
mov
ret
loop
call
ljmp
pop
decb
loopne
pop
mov
sbb
cwtl
pop
mov
test
jo
mov
sub
out
pop
rcr
aam
jg
adc
adc
lods
in
in
jp
dec
clc
inc
fcmovbe
push
xor
or
sbb
jno
sarb
ss
pop
cmc
ret
ss
jb
aaa
hlt
nop
push
cmp
xchg
mov
jl
jne
mov
xchg
scas
xchg
dec
roll
or
push
into
in
push
add
inc
sub
push
cmp
inc
pop
je
rolb
leave
dec
jmp
fsub
psrlw
fs
sbb
iret
lods
repz
dec
daa
mov
insb
psubw
mov
jl
shrb
adc
push
jae
lret
fcoms
mov
rclb
ficoms
adc
mov
je
and
xor
cmc
xchg
das
jbe
jmp
clc
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
push
xchg
jmp
jge
jo
dec
jge
je,pn
out
sti
jl
push
scas
inc
xchg
lock
sub
mov
pop
xor
mov
dec
mov
sbb
xor
fwait
xor
jle
mov
add
xor
cwtl
mov
inc
int
out
lret
fstl
dec
cmc
in
sbb
loopne
sub
jecxz
jno
pop
test
bound
cs
adc
imul
inc
sar
mov
push
rcl
add
mov
xlat
sub
mov
pop
jmp
cmpsl
dec
inc
mov
out
dec
das
mov
cmp
push
adc
inc
movsb
jge
sbb
int3
stos
cld
data16
fldcw
inc
cld
adc
ds
outsl
icebp
dec
fwait
jno
divl
inc
xchg
lcall
inc
lahf
xor
mov
test
dec
sahf
mov
rcl
xchg
daa
fsubl
sub
movsb
aam
scas
cmpsb
icebp
imul
icebp
push
dec
stc
loop
rcl
mov
cmp
xchg
in
mov
mov
cmp
sub
repz
imul
mov
inc
dec
fs
sbb
mov
fcoms
adc
mov
sub
repz
rolb
cmpsl
xlat
add
pusha
aad
xor
out
add
iret
fistpll
and
ljmp
jns
fsts
push
or
lods
loope
jae
mov
insl
xchg
test
enter
dec
xchg
jg
xor
push
iret
inc
jb
arpl
dec
jle
cmp
xchg
inc
in
leave
test
out
ss
addr16
pop
mov
lock
adc
call
mov
mov
and
push
pop
pop
adc
and
out
lret
shr
mov
dec
adc
js
mov
inc
mov
lods
mov
loope
xchg
movsl
aad
xor
fistpl
popf
repz
add
mov
inc
cmp
mov
movsb
pop
psrlq
pop
js
xchg
inc
jmp
insl
lahf
cmp
mov
fwait
aas
test
adc
jns
pop
das
xchg
mov
push
xchg
hlt
data16
mov
inc
cmp
jbe
es
jle
ds
jg
sub
popf
pop
cmp
add
mov
push
test
in
cwtl
loopne
cmpsl
cmc
inc
add
xchg
pusha
test
popa
cmpsb
xchg
jle
repnz
repnz
lcall
push
in
or
stos
sub
loop
scas
push
and
xor
push
aas
add
out
pop
call
mov
push
ret
mov
mov
fsubrs
test
or
aaa
mov
popl
inc
dec
clc
add
mov
xchg
fs
in
fstp
in
retw
std
jo
push
cmovp
adc
ds
es
or
and
sahf
movsb
cmp
ss
cmp
inc
fwait
push
jg
add
aam
popa
lcall
xchg
mov
imul
ss
xchg
popa
test
sub
adc
jns
std
rcrb
mov
rcr
lods
stos
mov
push
mov
iret
and
pop
iret
mov
xchg
cmp
push
shll
fsubrs
and
pop
fbld
cmp
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
cmp
or
jo
jge
jo
daa
adcl
cwtl
arpl
mov
adc
imul
cmc
dec
jb
mov
imul
push
sub
pop
adc
mov
sub
das
bound
loope
mov
out
sbb
fstpl
jmp
fbld
orb
jb
mov
or
inc
cmpsl
mov
sub
mov
mov
add
xchg
xchg
mov
loope
xlat
arpl
adc
mov
pop
shll
sbb
sahf
sbb
push
and
mov
lret
lcall
popa
lods
ss
cmp
sub
dec
lahf
cltd
xor
scas
pushf
shr
jmp
cmp
outsl
test
xor
add
mov
int3
push
addr16
dec
aam
pop
out
les
cmpsl
subb
aas
or
leave
int
mov
aam
mov
xor
cwtl
mov
and
sbb
lret
jnp
xchg
mov
lds
dec
dec
pop
cmp
xchg
cwtl
dec
mov
cmpsb
and
dec
push
jecxz
mov
cmpsb
inc
mov
pushf
push
sub
stos
aaa
xchg
add
repz
insb
inc
rorb
mov
icebp
jp
decl
nop
adc
and
sbb
cmc
inc
in
lods
popf
pop
xchg
sub
pop
ljmp
xorl
dec
popa
dec
fisubl
push
enter
outsb
lahf
push
scas
enter
sub
faddl
inc
fcoms
pop
xor
lahf
cli
jg
pop
cmp
jmp
or
cli
fs
mov
mov
iret
in
ljmp
xchg
sbb
popa
cmpsb
rol
or
pop
imul
xchg
push
mov
mov
mov
add
and
hlt
cmpsb
xchg
push
rcrb
fs
sub
mov
in
xchg
xor
mov
jg
pop
push
icebp
mov
stos
jbe
dec
mov
inc
adc
and
sbb
loop
cmp
pop
in
xchg
aad
xor
pop
jne
ret
ficompl
insb
std
enter
xor
pop
mov
cltd
leave
aam
psubusb
add
sbb
sbb
mov
ja
xchg
nop
and
dec
push
lods
add
mov
push
sbb
aad
dec
jbe
dec
pop
pushf
push
mov
inc
pop
stc
inc
mov
jbe
pop
sub
jl
xchg
imul
cmp
dec
push
dec
mov
jmp
mov
sbb
dec
push
lcall
pop
frstor
xor
stos
and
mov
adcl
or
cli
std
push
dec
adc
xchg
test
pop
inc
into
adc
es
push
enter
adc
sub
ret
mov
das
and
jnp
sbb
stos
popa
dec
arpl
daa
push
push
rclb
inc
nop
cmp
xor
add
stos
scas
fnsave
stc
or
jle
lods
cmc
aad
test
pop
xor
mov
rcrb
imul
cwtl
xchg
inc
pushf
repnz
mov
leave
inc
ret
adc
xchg
aas
jo
jae
ds
inc
push
jg
xchg
add
cmc
aaa
cld
mov
jmp
cs
loopne
in
jnp
jmp
pop
je
mov
jge
jo
or
add
push
push
mov
jl
outsl
jb
xchg
xor
jecxz
icebp
negb
inc
pop
pop
mov
mov
mov
pushf
push
xor
mov
aad
int
aas
fldcw
fisubrs
outsb
andb
add
cmp
lret
sbb
inc
mov
sub
repz
daa
xor
adcl
imul
xchg
lods
loopne
lret
adc
mov
cwtl
les
call
cmpsl
jb
ret
and
cltd
adc
cmpb
sbbb
shr
lcall
ficompl
insb
imul
sahf
ja
or
xchg
inc
aaa
icebp
xchg
mov
ljmp
aam
lds
mov
xchg
pop
cmp
mov
dec
mov
adc
je
inc
push
or
pop
push
insb
in
jmp
aad
push
sbb
or
xchg
les
cmp
stos
xor
roll
jle
push
xchg
sarl
fdivrl
popf
mov
shll
jae
ja
insl
push
mov
jmp
outsl
cmp
jb
outsl
push
aas
repnz
jg
mov
mov
ja
mov
out
add
aam
and
add
gs
outsb
daa
mov
cmp
fwait
mov
dec
jmp
sub
popa
xor
call
jp
enter
dec
sub
in
dec
jb
test
pop
das
pop
call
loopne
dec
mov
push
or
xchg
mov
in
je
cld
gs
jb
sbb
jle
sbb
mov
sub
mov
fldenv
out
pop
ljmp
pop
addr16
pop
out
cwtl
and
mov
pop
lcall
mov
mov
clc
je
jbe
or
lds
fldl2t
negl
stos
push
mov
xchg
outsb
push
dec
into
or
fisttpl
dec
jb
add
xor
mov
lea
sahf
adc
call
scas
lods
scas
je
out
lret
pop
aas
mov
ss
sub
stos
fsubs
jne
push
xchg
loopne
push
rclb
sarl
out
add
adc
aam
push
icebp
mov
inc
js
sti
ss
imul
dec
inc
subl
cmp
orl
stos
scas
or
cmp
mov
pop
loop
jb
mov
jne
loope
sub
daa
jl
cmpsl
daa
imul
mov
mov
inc
das
xor
inc
sti
popa
fwait
imulb
jnp
lret
loope
hlt
iret
jne
cmpsl
in
hlt
jb
jecxz
js
and
push
jle
and
push
push
adc
adc
mov
rorl
shl
loopne
mov
cmp
mov
aas
xchg
lods
pop
test
pop
mov
lret
mov
jle
mov
sbb
inc
incl
jns
test
and
add
and
mov
andb
mov
push
andl
aas
mov
fidivl
fs
xchg
mov
lahf
movsb
movsl
cmp
sub
add
rdpmc
stc
jmp
data16
in
int3
jne
popa
jno
imul
pop
ds
jo
and
test
dec
fisubl
rclb
mov
cli
sbb
cld
jl
imul
add
inc
mov
sub
add
in
lret
mov
arpl
mov
into
push
out
fidivrs
repnz
jp
aad
test
xlat
lods
mov
shr
fadds
mov
mov
adcl
out
out
negl
pop
xor
in
outsb
adc
sbb
push
sbb
les
cmp
xchg
push
test
mov
pop
pop
lods
sub
lret
jb
pop
and
lods
das
pop
and
pop
sti
pop
cld
adc
enter
mov
les
mov
fbld
loop
jns
add
aad
js
lock
push
or
cmpsl
aad
mov
mov
cmp
lahf
js
inc
sbb
jp
mov
std
rolb
sbb
push
add
es
fstp
pushf
sub
repnz
push
jnp
jl
and
xchg
fildl
mov
xlat
sub
ret
mov
mov
insl
jo
pop
dec
xchg
jg
inc
push
add
mul
call
iret
shlb
es
lods
cmc
outsb
insb
add
mov
insl
ljmp
cmc
enter
dec
lret
dec
dec
pop
add
jne
inc
scas
mov
flds
scas
sti
in
test
pop
and
es
fcoms
and
aas
lahf
in
cmp
out
push
fs
pop
xchg
push
repnz
and
in
ds
cmc
xchg
mov
mov
xchg
icebp
adc
les
add
lods
jp
out
inc
movsl
mov
insl
addr16
inc
cmpl
inc
mov
aas
loopne
pop
leave
and
rorl
in
test
imul
add
push
in
addb
or
imul
sbb
fstp
fldenv
xor
repz
adc
outsl
mov
clc
or
ljmp
sub
xchg
pop
repz
jp
jnp
pop
adc
add
pop
stos
rorb
jnp
jb
mov
es
aas
ds
mov
cld
sti
test
mov
fcoms
call
sbb
jle
or
jns
insb
dec
mov
ret
loop
sti
inc
ficompl
pop
lret
or
and
push
icebp
fst
mov
dec
scas
xchg
rsm
popf
and
lock
jbe
jle
lahf
fs
pop
fiadds
aaa
fwait
jecxz
mov
lcall
and
aaa
sar
jp
imul
or
mov
add
ja
add
cmp
enter
in
call
int3
scas
and
pop
cld
inc
lahf
scas
loopne
js
xchg
out
dec
mov
cmp
add
rorl
push
icebp
add
inc
sub
and
sub
mov
xchg
push
in
sbb
or
pop
shlb
dec
scas
pop
int
pushf
mov
in
dec
fwait
sbb
sbb
aas
outsl
outsl
movsb
or
int
pop
sub
pop
push
jle
lods
and
xchg
cmp
push
cmp
mov
shrl
jne
imul
mov
jmp
jle
mov
xchg
icebp
repz
lods
xor
push
adc
xchg
jge
jo
mov
dec
mov
mov
xchg
xor
jmp
push
xor
jp
popf
sub
jp
fidivrl
pop
sti
mov
push
push
std
adc
dec
mov
ficoms
jge
lds
test
testb
push
pop
sub
cld
popa
test
inc
add
pop
ret
pop
push
and
push
cmc
mov
dec
mov
pop
dec
das
fstpt
scas
out
cli
jb
fwait
ss
jbe
jbe
push
lea
lods
sub
lock
push
mov
push
xor
movsl
mov
jbe
loopne
lret
add
in
mov
pop
mov
hlt
sbb
or
aaa
enter
enter
int3
mov
or
add
push
bound
popf
cmpsl
loope
jo
cmp
push
and
mov
pop
or
jp
or
sub
inc
pusha
and
aam
sbb
ljmp
loopne
adc
stos
ss
pop
push
pop
or
sub
pop
clc
jecxz
cmp
mov
test
in
mov
test
int
hlt
sbb
cmp
dec
pop
mov
pop
mov
out
imull
push
push
ret
popa
fmulp
xchg
jmp
push
jge
add
cmp
xor
pushf
cmp
in
mov
pushf
inc
jb
xchg
out
outsb
mov
fmuls
out
pop
inc
sbb
xchg
dec
cmp
adc
and
lea
sub
outsb
enter
mov
dec
push
fsts
lahf
stos
gs
or
push
repnz
rcll
in
les
out
movb
call
mov
sub
add
dec
xchg
decb
mov
sub
xchg
sahf
push
push
add
mov
or
push
or
cmc
nop
push
jge
push
xchg
jge
out
jmp
fiadds
lods
mov
sbb
or
data16
negl
clc
push
pop
dec
jb
lods
adc
out
icebp
outsl
stos
and
std
in
mov
test
and
leave
dec
ret
inc
les
test
dec
movsb
fmuls
outsb
push
pop
dec
add
or
call
rcrb
shl
cmp
ja
pop
push
push
cmp
pushf
imul
xorb
and
xor
jae
into
imul
adc
or
push
sbb
mov
lods
les
dec
js
rorb
pop
popf
or
rcr
mov
aam
push
sub
adc
test
stos
or
mov
jb
out
jnp
sbb
in
call
test
ds
adc
adc
push
mov
ss
jecxz
push
jae
icebp
xlat
leave
gs
mov
sbb
js
clc
test
mov
int3
clc
dec
push
out
inc
sarl
inc
dec
and
lods
dec
in
mov
je
sub
flds
lahf
std
movsl
mov
sub
enter
in
mov
lea
or
or
rol
push
mov
sub
adc
add
sahf
dec
mov
in
ljmp
mov
jmp
xor
or
fldcw
cmp
jae
mov
adc
mov
sbbl
and
pop
cwtl
pop
add
popf
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
jae
int
push
jo
sbb
jo
sub
or
mov
and
sbbl
mov
mov
cs
jge
and
or
aam
std
ficompl
out
adc
sbb
popa
cld
xchg
cld
ja
sti
mov
faddl
mov
jmp
aas
ret
aas
in
pop
loope
jne
jne
mov
xchg
cmp
fidivl
ljmp
shrb
xlat
adc
repnz
cmpsl
mov
dec
ja
std
sahf
mov
mov
into
stos
jge
loope
sbb
xchg
scas
int
outsb
mov
push
mov
sub
xchg
xchg
inc
mov
jmp
sub
sahf
in
lret
repz
add
repnz
jmp
gs
adc
or
adc
cmc
and
adc
repz
adc
andl
lret
in
adc
xchg
cmp
cs
in
inc
mov
or
sbb
pushf
jb
add
add
inc
inc
add
mov
sub
add
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
cmp
hlt
xchg
sbb
jo
lahf
cmpsb
mov
cmpsl
and
dec
lds
mov
jmp
jo
pop
mov
dec
test
dec
divb
jne
mov
mov
lods
jae
cmpsl
sarb
daa
scas
sbb
push
jl
adc
cmpl
sub
mov
aam
cwtl
xchg
mov
cmpsb
addr16
ds
arpl
mov
xchg
movsb
scas
ret
jbe
inc
addr16
cld
add
sub
jp
jo
mov
jae
dec
or
iret
pop
sbb
ja
pop
mov
or
in
adc
mov
jo
mov
xor
stc
cwtl
push
jns
clc
movsl
ljmp
test
jns
aad
test
inc
inc
mov
out
fnstenv
ljmp
data16
js
out
nop
test
scas
popa
cltd
in
das
sbb
add
imul
das
js
mov
xor
jp
test
jno
loopne
sub
mov
push
pop
mov
filds
scas
jl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
mov
adc
mov
jg
jo
fwait
push
test
fcomps
test
sub
aas
fildll
sbb
lret
xlat
dec
adc
jb
xor
push
shrl
ss
jne
aaa
into
xor
aas
sti
sbb
cmpsb
xchg
push
fs
cmpsb
pop
rcr
inc
pop
xchg
xlat
add
jbe
cli
or
dec
mov
into
jp
jp
lea
mov
std
in
loopne
leave
add
lcall
in
push
sub
popf
ret
xor
pop
jecxz
ljmp
je
push
outsl
fiadds
cli
and
dec
inc
pop
sub
cmp
jne
lret
pop
lahf
andl
imul
xchg
in
inc
out
scas
mov
dec
cmovns
cmp
jge
das
dec
fwait
xchg
std
dec
jns
popa
adc
mov
pusha
push
or
notb
cmp
adcb
and
imul
add
xchg
into
fbld
ljmp
arpl
sub
daa
lea
push
or
iret
or
pop
adc
movsb
lret
or
dec
ja
test
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
dec
sbb
fs
sbb
jo
pop
xor
fdivrs
push
lahf
inc
pop
jo
fprem
jno
sub
insl
popf
inc
std
cltd
sub
mov
outsl
shl
mov
data16
push
sbb
ss
les
mov
mov
cmp
int
inc
das
cmp
xchg
fwait
adc
xlat
shl
lods
repz
inc
push
daa
idivl
div
sub
adc
pop
iret
aas
sbb
mov
jl
rolb
sbb
xor
mov
enter
in
jg
popa
cmp
adc
bnd
cmp
enter
pop
push
sbb
sub
and
movsb
and
sub
loop
fisubrs
aad
xorb
fistpll
lods
and
mov
stos
push
mov
push
mov
add
outsb
sub
ds
or
fiaddl
add
ljmp
pop
ret
std
jno
dec
push
jl
repz
popf
dec
dec
leave
dec
pop
jno
outsl
cltd
push
xor
sti
add
js
lret
mov
std
pushf
cli
cmpsb
scas
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
inc
cmp
fisttpll
into
mov
mov
jnp
xchg
sahf
icebp
in
or
cmpsb
je
lds
ss
pop
sub
inc
or
xchg
aad
data16
jmp
xchg
addr16
decb
cmpsb
pop
mov
daa
repz
cmp
stc
cmpsb
addr16
mov
js
testl
pop
push
nop
sub
sub
movsl
sbb
push
xchg
mov
mov
js
cmp
push
ret
mov
xor
dec
fwait
js
xor
add
sbb
xchg
add
adc
add
out
cmp
xchg
into
stc
dec
pushf
adc
sub
inc
sub
stc
push
lods
add
pushf
test
enter
in
jns
sub
jno
imul
mov
push
pop
testb
stos
push
pop
cmpb
xchg
mov
or
cmp
loope
loop
sbb
out
arpl
scas
cmpb
repnz
pop
and
push
ljmp
dec
xor
in
pop
arpl
into
into
jne
roll
mov
mov
xor
add
jmp
ffree
adcb
mov
cmpsb
xor
jo
sbb
jo
cli
jp
fstpl
pop
ret
scas
jno
cmp
or
call
xchg
mov
test
cmpl
mov
popa
inc
lock
xchg
adc
jg
push
sub
xor
add
sbb
repnz
fcompl
repz
or
adc
in
adc
push
lcall
rcrl
and
clc
out
jo
cmp
or
xor
sbbl
lock
cmpsb
loopne
hlt
push
std
popf
daa
clc
cmp
adcl
and
mov
fs
cmp
icebp
xrelease
je
aad
dec
jo
in
lcall
adc
cmp
pop
mov
outsl
clc
cmp
mov
mov
cli
les
adc
add
sbb
mov
fcoml
jne
push
adc
hlt
mov
stos
insl
js
xor
xchg
inc
pushf
test
adc
scas
jbe
dec
cmp
aad
and
clc
sub
xor
cmp
or
push
cmp
je
mov
mov
jmp
scas
or
repz
test
rcll
inc
pop
fsubl
jo
sbb
jo
in
inc
push
cmp
pop
and
aaa
cmp
lahf
jp
enter
fucomi
adc
es
cmp
dec
cmp
lret
sub
lahf
jp
nop
cld
filds
jo
movsl
jno
pop
dec
je
shl
fstpl
popa
push
xchg
nop
mov
xor
movsl
lret
test
int3
in
in
fdivr
xor
ret
jg
ret
or
and
mov
orl
ds
jp,pn
loop
mov
cmpl
mov
xor
scas
decb
mov
jmp
inc
pushf
cmpsl
jbe
xlat
sub
cltd
xlat
pop
xchg
outsl
aam
cmc
arpl
mov
adc
pop
lret
sbb
push
adc
mov
xor
push
ds
sbb
adc
imul
ds
aad
sub
jmp
jnp
or
stos
addr16
nop
imul
adc
bound
cli
xchg
aad
jmp
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
sub
jo
jg
jo
sbb
outsl
bound
mov
pop
jb
xchg
or
mov
or
stos
jecxz
inc
push
idivb
mov
mov
idivb
inc
pop
sub
das
adc
js
xor
lea
arpl
xor
ficoml
pushf
test
lds
xchg
lea
orb
les
mov
cmp
mov
push
std
das
in
push
setne
pop
aam
sub
adc
add
stos
sub
lods
insb
imul
lret
push
leave
add
out
addr16
out
cmp
adc
push
adc
les
decb
jns
mov
push
push
stos
ret
sbb
jns
sahf
xor
hlt
fisubl
pop
mov
xchg
notb
xchg
jo
mov
cmp
xchg
xchg
push
ljmp
xchg
push
fnstcw
aam
adc
hlt
push
or
cmp
mov
pop
scas
mov
inc
repz
mov
je
data16
xchg
aaa
lods
xchg
insb
mov
sbb
add
adc
adc
roll
cmp
jmp
mov
gs
nop
sbb
jg
lods
and
jo
add
sub
out
xchg
and
dec
test
xchg
pop
les
dec
testl
mov
decl
dec
mov
int
movsb
xbegin
into
aaa
jmp
jb
out
push
enter
pop
inc
jl
jmp
leave
xor
add
pushf
inc
insb
stc
sarl
xchg
push
stos
cwtl
rclb
lret
sbb
add
stos
es
cmp
mov
push
es
lcall
fnstsw
mov
sbb
fisttps
sbb
lret
jl
fstp
outsl
test
shlb
cmpsl
jmp
mov
jbe
clc
scas
push
aam
pop
sub
out
add
sub
add
and
and
cmpsl
clc
dec
jp
les
imul
lret
xchg
ljmp
ja
jb
ja
sarb
out
cli
daa
out
sub
hlt
mov
imul
dec
cwtl
int
xchg
and
in
je
movl
jmp
aaa
dec
rcrl
jno
repz
enter
popf
cwtl
add
push
and
jo
jg
jo
xchg
cli
sub
fdivl
arpl
in
fimuls
mov
add
sti
xor
and
lods
push
cli
nop
mov
mov
repz
adc
xchg
lahf
cmp
dec
outsl
jne
xchg
xadd
arpl
out
lahf
sub
lret
sub
in
inc
or
imul
pushf
aad
cmp
mov
bound
push
lods
xor
notb
cmpsl
lret
pop
add
pop
test
lret
mov
cmc
fstpt
ret
mov
add
pop
jbe
shrb
mov
adc
bound
fwait
inc
cmpsl
add
adc
mov
cmp
push
mov
xor
rorl
cmc
jecxz
mov
mov
add
mov
push
stos
jecxz
pusha
pop
xlat
push
cmp
rcr
mov
popa
lret
cmp
in
xchg
cmp
inc
mov
movsl
fsqrt
xor
or
push
xchg
push
cmp
mov
out
pop
mov
push
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
lds
fstpl
mov
sbb
and
out
push
and
imul
int
dec
mov
std
adc
mov
sub
xchg
in
dec
icebp
xchg
lock
out
std
sahf
mov
cmp
shll
jg
dec
lods
mov
repnz
sub
add
cli
push
dec
mov
mov
sub
add
dec
aas
lcall
jbe
sbb
ja
stc
mov
in
fcompl
pop
cs
fs
cmpsl
out
sbb
add
sbb
mov
mov
mov
mov
movsl
lock
lea
sahf
sbbl
pop
cmp
loope
adc
loopne
adc
mov
fstpl
mov
and
xchg
lds
ja
daa
int3
sbb
adc
jne
imul
xor
adc
cmpsb
jbe
cwtl
add
add
mov
fucom
outsl
fld
push
in
insl
xchg
pop
les
lcall
and
into
ss
sub
call
inc
iret
and
sub
inc
or
ds
jmp
cmp
xor
sarl
cld
push
mov
add
and
sbb
jo
inc
call
adc
push
mov
adc
cmp
xor
stos
repnz
sub
pop
stos
int3
mov
pop
sub
jns
xchg
cltd
daa
cmp
shlb
and
add
dec
cld
lods
push
movl
mov
lret
jnp
mov
sbb
ud1
fs
shll
sub
dec
jge
inc
xchg
dec
sbb
cmp
int3
stos
fimuls
fstl
rcr
shlb
mov
mov
sbb
iret
cmpsb
xchg
cmp
and
jns
js
lea
dec
lea
xor
insb
or
pop
lods
push
call
aaa
xor
mov
jnp
enter
adc
jecxz
scas
or
fildl
in
or
fcomi
mov
cwtl
pop
cmp
sbb
jl
call
addr16
imul
dec
loopne
test
imul
pushf
xor
cs
aad
gs
stos
mov
insl
and
mov
lods
sub
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
movsl
dec
or
mov
mov
push
imul
xchg
push
pop
aas
mull
movsb
fdivl
fisubs
xchg
ret
or
mov
xor
mov
in
pushl
aam
out
dec
aas
add
leave
xchg
mov
jo
fs
xor
mov
out
das
mov
mov
pusha
push
pop
out
add
repnz
insb
in
repz
xor
fcomi
lds
adc
gs
pop
jbe
and
pop
jno
sbbb
gs
mov
loop
icebp
pushl
or
shrl
int3
clc
add
push
int
aad
test
pop
mov
lret
ret
loopne
push
jne
insl
fwait
ret
repz
dec
or
xor
add
out
inc
xchg
jbe
lds
ja
jno
imul
bound
imul
add
sarb
rorl
lds
aas
lea
addr16
push
push
in
insb
mov
out
push
lcall
std
data16
enter
add
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
in
std
hlt
das
jo
fnstcw
jo
inc
and
push
lock
jmp
mov
clc
xchg
int
pop
out
outsb
bound
sub
push
add
jle
ljmp
xor
and
sbb
gs
lods
mov
push
sub
jecxz
mov
and
ret
ret
sbb
subl
cmp
push
outsl
xchg
xchg
out
test
ret
or
push
imul
hlt
push
nop
out
add
pop
cmp
adc
sahf
mov
xor
pushf
jb
jmp
icebp
or
sub
mov
dec
jl
andb
pop
xchg
andl
or
imul
add
push
jmp
test
push
scas
sub
jmp
push
test
xchg
jno
adc
insb
into
jecxz
test
mov
test
ret
mov
mov
pop
mov
add
mov
sbb
leave
cmp
sbb
mov
test
sub
xchg
notl
dec
repz
dec
insl
hlt
sbb
stos
fistpl
ja
jmp
xchg
out
cmp
movsb
adc
cld
xchg
inc
jns
imul
lods
out
leave
mov
add
enter
push
mov
push
mov
mov
das
pop
pop
jmp
cli
nop
jb
jb
fisubrs
sbb
sbb
push
fcompl
push
jle
inc
push
mov
jae
mov
or
jecxz
pop
movsl
mov
nop
mov
adc
mov
imul
ss
out
ret
sahf
js
sbb
iret
out
mov
pop
sub
popa
mov
jg
sub
pop
fisubrl
sbb
aam
push
rorl
std
popa
lea
jb
outsl
and
xchg
stos
adc
mov
rolb
mov
cmp
push
mov
aas
mov
clc
pusha
leave
or
mov
insb
scas
fsubs
lfs
sbb
pop
jle
fmuls
cli
fidivrl
repz
dec
pop
xor
cmp
mov
mov
in
add
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
cwtl
aas
hlt
pop
sub
jo
cmpl
addr16
push
test
inc
sub
push
repnz
stos
add
cwtl
xchg
push
xchg
cmpsl
mov
adc
xchg
pusha
xor
rorb
fistps
mov
xchg
mov
dec
mov
ja
mov
orw
dec
pop
sub
ja
cmp
sbb
push
add
jp
cmp
out
sbb
adc
jl
popf
add
sarb
outsb
xor
push
dec
inc
xor
aas
mov
lret
jecxz
sbb
xchg
fisttpll
aad
push
pop
cli
mov
xor
out
cmpsl
adc
push
or
xchg
imul
pop
lret
lods
enter
cmpsb
nop
mov
bound
push
jle
mov
aam
jle
stos
inc
mov
rcrl
push
pop
out
aaa
mov
in
shrb
adcb
and
daa
mov
push
das
outsl
fcom
xor
jg
xor
repz
or
insl
fs
das
jae
add
push
in
cmp
repz
sbb
stc
add
or
pop
lahf
and
mov
cmp
loop
popa
sub
in
push
mov
mov
fnstsw
pop
cmp
xchg
in
aaa
add
xchg
jg
dec
cmpl
cld
mov
xchg
enter
cmp
cld
and
in
ss
fwait
lods
sbb
or
xchg
xlat
inc
lahf
jo
pop
cmpsb
gs
pop
pop
ror
pusha
adc
cs
mov
mov
daa
test
cmp
dec
out
adc
and
xor
jbe
cmpsl
cmp
loopne
mov
push
cmp
fcmovbe
cmc
or
dec
orb
mov
add
adc
cmp
mov
in
gs
sti
push
push
mov
sbb
dec
out
jg
mov
shll
pop
call
jp
dec
imul
push
mov
sub
cmpb
xchg
ret
mov
add
ret
push
mov
push
enter
jmp
iret
andb
out
insb
sub
into
jbe
fcompl
or
lahf
addr16
fdivs
test
loope
int3
push
loop
push
ja
xchg
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
test
sub
fnstcw
jo
inc
and
test
cmp
sub
clc
sbb
adc
dec
in
lcall
movsb
pop
fisttpll
call
xor
imul
pusha
enter
insb
jmp
pop
repz
sbb
popa
and
and
cmpb
arpl
add
xchg
dec
bnd
sahf
mov
stos
inc
fdivrl
faddl
cmc
out
mov
sbb
insl
inc
sbb
mov
push
int3
andb
iret
sbb
movsl
xchg
cmp
movsb
jle
add
fcompl
jns
lock
adc
inc
lds
adcl
adc
adc
sti
jnp
xchg
inc
push
pop
mov
mov
push
mov
add
fildl
and
aas
xchg
leave
mov
pop
mov
mov
xchg
mov
cmpsb
pop
xor
sbb
jecxz
scas
sti
xor
sti
inc
imull
or
aas
xchg
test
mov
out
and
xor
mov
dec
xchg
jbe
fnsave
mov
cmp
ss
stc
mov
sbb
adcb
ret
jno
jmp
aam
push
rcrl
divl
sub
adc
sub
aaa
inc
test
adc
imul
ficomps
xchg
rcr
out
test
xlat
ja
lcall
sub
dec
call
pop
cltd
test
icebp
add
aaa
movsb
icebp
lret
xor
jle
out
test
insb
jnp
sbb
add
sbb
push
xor
sbb
sub
mov
inc
sub
fistpll
sub
pop
hlt
mov
loopne
xchg
jb
pusha
xchg
in
jg
std
push
xchg
fucomip
out
fnsave
mov
fs
cmp
lea
fwait
out
dec
pop
lods
leave
in
xlat
ljmp
test
jp
add
jg
insb
jo
xchg
pop
or
jno
mov
lods
sub
mov
inc
push
pop
cmp
ficoms
mov
inc
xor
push
je
pop
sbb
aam
mov
push
adc
out
dec
push
mov
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
cmc
scas
sub
les
jo
cli
add
into
into
test
sbb
les
mov
inc
sbb
scas
or
and
or
dec
xchg
repnz
push
add
push
sub
push
fbld
sbb
aas
lret
imul
cwtl
arpl
es
cmp
push
mov
enter
js
sub
cmp
fstp
je
and
dec
cmp
mov
cwtl
push
loope
cmp
mov
leave
lcall
xlat
sar
cmp
mov
aad
lods
dec
outsb
cwtl
ret
jl
adc
hlt
lds
xchg
xor
push
and
aad
sbb
adc
cltd
xchg
dec
stc
fstps
jp
and
arpl
cmpsb
mov
push
imul
and
or
cmpb
cmpsl
jp
xor
dec
and
in
push
inc
and
in
pop
inc
sub
mov
pop
push
popf
out
mov
repnz
cwtl
lods
pushf
leave
jno
push
loope
sub
dec
mov
aaa
js
lods
ret
mov
insl
lahf
clc
fsubrs
inc
cmp
inc
jge
xor
lea
mov
les
cs
int3
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
add
jo
jg
jo
sbb
adc
and
outsl
fisubl
push
xchg
sahf
cmp
stos
leavew
sub
xor
pop
xchg
ffreep
push
dec
out
mul
test
mov
out
xchg
sbb
imul
stc
lahf
xor
pushf
movsb
xchg
adc
call
ljmp
jg
cli
subb
loopnew
stos
and
cltd
leave
subb
xchg
jecxz
fldl
aad
mov
lcall
add
dec
pop
mov
aaa
sbb
std
lcall
iret
addr16
ds
and
and
aas
je
cli
and
xchg
jbe
aaa
jecxz
xchg
push
mov
and
dec
adc
pusha
cli
lea
jp
jb
les
add
sbbb
pop
jbe
popa
inc
movsl
mov
inc
sbb
or
and
push
aaa
out
dec
bnd
lahf
je
pushl
bound
data16
jnp
mov
sbb
ret
pop
es
dec
mov
sbb
loope
xchg
jb
or
dec
mov
mov
fidivs
stos
jp
andl
sbb
cwtl
scas
xor
inc
or
roll
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
xor
les
jo
adc
inc
fs
rcll
mov
add
push
push
sahf
fstpl
cmp
into
orb
inc
js
xrelease
test
lahf
adc
mov
stos
sub
pop
jae
adc
push
sbb
xchg
xchg
dec
sub
loope
aam
jae
in
pop
xchg
dec
lods
mov
add
cmpsb
cmp
and
xor
fiadds
jns
add
int3
cmpsl
lcall
mov
inc
test
fst
mov
test
jbe
or
and
clc
out
jbe
outsb
mov
push
xchg
inc
inc
cmp
out
add
movsb
inc
jle
mov
int3
fisttps
outsl
jno
add
ds
fwait
pop
mov
mov
fcmove
in
leave
sub
aam
pusha
lods
adc
shl
fisubrs
inc
sub
pop
xchg
scas
clc
int
jecxz
or
push
cmpsb
and
mov
jbe
push
dec
dec
pusha
push
jecxz
out
in
or
pop
dec
lds
or
call
addr16
and
aas
les
in
xchg
sub
fisttpl
out
dec
ror
mov
inc
pop
mov
lret
nop
addr16
in
xchg
lock
pop
dec
inc
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
dec
or
mov
xor
jo
jge
jo
mov
mov
cmpsb
hlt
cmc
inc
lds
jnp
sbb
call
fcomip
or
or
push
fidivrl
xorb
mov
or
mov
andb
mov
leave
xchg
sub
xchg
repnz
cmp
mov
mov
jne
daa
stc
dec
and
jmp
add
fistpl
adc
test
jmp
fwait
inc
adc
jmp
mov
ret
pushf
xor
dec
scas
out
movsb
push
sbb
mov
dec
dec
push
inc
xchg
or
jns
xlat
test
mov
xor
inc
inc
xchg
xchg
mov
and
ficoml
call
jno
lock
lahf
push
jg
pop
aad
aad
ja
rcrl
jo
repz
test
loope
push
aad
inc
inc
cmpsb
mov
xchg
jnp
int
cmp
out
lret
push
and
xchg
inc
pop
push
push
insb
gs
in
xchg
pop
push
sbb
outsl
bound
pop
xchg
and
inc
icebp
test
adc
loope
push
mov
xor
movsb
inc
fimull
sarb
int3
pop
stos
xchg
add
popa
popa
nop
and
fimull
stos
daa
dec
sub
pop
lret
loope
cmp
dec
outsb
sub
xor
outsb
pop
inc
mov
xor
xor
cld
push
inc
xor
out
mov
movsb
push
sub
int
data16
jae
or
lock
dec
popf
popa
aad
inc
sbb
adc
and
mov
push
xlat
sbb
jge
xor
loope
jle,pn
jmp
lahf
adc
add
sub
or
mull
inc
ds
test
dec
das
roll
adc
roll
xchg
ja
jge
pop
nop
test
insb
mov
loope
in
test
subl
dec
bound
xchg
in
and
ljmp
cmp
xchg
aaa
test
dec
push
xor
mov
leave
lret
xor
jp
push
aam
push
push
jmp
xlat
mov
cltd
sub
sub
aas
shll
mov
icebp
sbb
inc
push
bound
sahf
sbb
gs
sarb
icebp
and
jg
sahf
dec
insb
movsb
sub
inc
aaa
loopne
out
bound
mov
push
addps
jp
cli
ljmp
adc
mov
ja
cmp
ja
fimull
inc
nop
mull
mov
neg
cmpsl
sub
jg
and
call
sahf
in
fnstsw
inc
sbb
outsb
das
pop
xor
add
es
pushf
lahf
loop
arpl
mov
imul
cmp
ja
dec
sub
xchg
in
clc
push
jb
dec
test
fildl
inc
dec
dec
fnstsw
testl
or
sti
inc
fldl2e
call
and
mov
movsb
and
aas
sbb
jp
cmp
and
ds
add
movb
mov
pushf
jb
add
add
add
add
jmp
xchg
test
xchg
jno
xchg
js
jp
or
mov
jge
jo
mov
jp
or
in
shll
mov
cld
cltd
xorl
dec
push
shlb
jne
in
or
push
repz
lods
fisubrl
adc
add
cmpsl
in
or
andb
jmp
cs
dec
mov
sbb
call
loopne
enter
jbe
loope
jmp
sbb
jmp
es
ficomps
lret
pushf
orl
xor
fldl
orl
xor
fprem
pushf
jnp
mov
mov
xchg
add
leave
loopne
adc
jns
mov
fnclex
gs
aas
add
mov
sub
aad
sub
cltd
xlat
popf
in
mov
inc
aas
xchg
fsubrp
xchg
add
loopne,pn
add
lea
pusha
mov
dec
mov
or
mov
push
xor
sbb
inc
xor
dec
add
dec
fsub
cmp
out
cmp
es
imul
outsl
pop
xchg
mov
dec
lahf
int
out
movsb
hlt
das
adc
jno
pop
xchg
nop
mov
lahf
or
jg
stos
dec
jge
mov
adc
pushf
lcall
and
ja
mov
push
bnd
jb
in
add
pusha
xchg
xchg
in
subb
mov
xchg
pop
inc
mov
xchg
scas
sahf
insl
push
mov
push
jae
mov
xorl
fs
repnz
pusha
mov
or
in
mov
pop
stc
mov
pop
test
inc
arpl
scas
inc
jmp
out
into
adcb
cld
xchg
loopne
xor
inc
push
xor
loope
jge
mov
inc
sbb
sub
loop
mov
imul
les
pop
mov
sbb
jne
and
mov
rcrb
sbb
and
scas
mov
pop
test
sbb
add
test
inc
fnstenv
add
aas
push
dec
push
or
in
add
orb
push
inc
xor
mov
mov
scas
in
xchg
mov
sbbl
xor
dec
outsl
stos
fnstenv
gs
addr16
sub
or
leave
pop
leave
and
and
ret
adc
cmp
cmp
xlat
and
loopne
sbb
shll
xor
cld
clc
lock
bound
mov
sti
mov
and
mov
insl
sbb
pop
jbe
loop
test
shl
ret
add
pop
xchg
loop
fdivrs
inc
lret
lret
cmp
mov
sbb
loope
lds
inc
pop
addb
mulb
xchg
xlat
sbb
jb
scas
sbb
fisttpll
cs
inc
jns
lret
push
inc
pop
mov
data16
movsl
xchg
dec
mov
adc
cmc
sbb
add
and
mov
push
mov
cmp
shll
mov
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fistps
in
inc
imul
jo
jge
jo
or
cli
jmp
fildll
xchg
adc
xchg
mov
or
mov
pop
jo
sbbl
jns
lock
mov
imul
out
add
cltd
cli
and
arpl
jnp
fimull
sub
insl
or
scas
adcl
aam
pop
cld
int
push
cmc
movsb
inc
insb
pop
adc
jo
pop
xorb
out
jbe
fsubr
inc
shlb
adc
nop
loopne
cmc
mov
shll
and
push
jno
adc
mov
dec
lcall
adc
imul
std
mov
cmc
push
or
xchg
lock
inc
out
nop
arpl
mov
push
adcb
jge
in
mov
push
pop
jl
shrl
fcmovb
or
mov
mov
shrl
mov
dec
jmp
ds
lret
or
sbb
sarl
cmpsl
test
adcl
xchg
out
arpl
bound
enter
jbe
test
add
push
pop
fwait
push
add
push
je
dec
mov
daa
jne
fdivs
ds
mov
into
cmp
jmp
cltd
push
js
fldt
scas
mov
hlt
push
xlat
lcall
cwtl
push
ror
inc
fwait
sub
repz
daa
imul
cs
ds
stc
add
aad
les
orl
mov
xor
jle
cld
pop
xlat
jmp
in
hlt
fdivs
dec
sbb
sbb
das
out
and
fs
sub
rcll
popf
data16
sbb
rolb
fsubp
out
dec
sbb
insl
sbb
add
pushf
dec
inc
pop
ja
inc
stos
out
jle
rorl
xchg
mov
cmp
test
mov
out
int
sbb
fwait
mov
jle
popf
pop
inc
lahf
mov
pop
into
mull
mov
or
daa
add
adc
mov
jle
test
or
outsl
iret
ret
aas
flds
movsb
outsb
mov
and
and
mov
mov
pop
imul
lret
xor
and
jge
pusha
push
cltd
les
pop
testl
loop
adc
jg
movb
test
mov
lods
mov
xor
cmp
insb
inc
fs
test
pop
iret
leave
mov
add
movsl
faddl
stc
lea
xor
push
aas
out
addb
inc
pushf
leave
add
bound
add
outsb
dec
mov
imul
mov
shr
es
adc
jne
out
hlt
sbb
enter
ficoms
test
xlat
cmp
es
repnz
inc
dec
inc
cli
je
add
jns
mov
mov
pop
daa
sub
loope
and
inc
inc
add
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
mov
jo
and
jo
jge
and
add
test
pop
sub
mov
enter
outsl
ljmp
xchg
in
sti
push
sub
dec
lcall
fs
cwtl
insb
dec
test
push
or
data16
dec
fdivl
push
xchg
cld
mov
and
cmpsb
jl
jmp
roll
push
lods
and
cmpsb
mov
sahf
ret
adc
scas
repnz
cmp
mov
cmp
aas
push
mov
fs
sub
aaa
inc
imul
int3
push
cs
cwtl
mov
jb
push
in
sbb
dec
sbb
cmpsl
lods
andl
sbbl
mov
jecxz
repz
sub
lock
sbb
mov
lcall
fisttpll
repnz
adc
insl
sbb
sbb
push
jecxz
mov
stc
and
in
iret
xchg
dec
xor
xchg
orl
sahf
or
popa
xchg
or
lock
mov
sbb
sbb
jae
sbb
cli
sbb
push
pop
cmpsb
into
aad
sarb
xchg
sub
pop
arpl
pop
cmp
xchg
and
fiadds
out
push
adc
fistl
cmp
add
push
mov
and
rcrl
stc
scas
cmp
test
xorb
mov
nop
leave
push
inc
idivl
rorl
addb
jecxz
jle
jge
and
xor
pop
loope
fdivl
cmp
pop
std
and
lret
out
mov
cmp
shr
jo
sub
pusha
sbbl
cmp
sti
fistpl
stc
and
pop
or
xchg
and
fstpl
sbb
rol
rorl
test
push
push
and
lock
ss
adc
xchg
fldl
ret
mov
or
rclb
aam
cmp
xor
jmp
push
out
cmp
outsl
js
aaa
incb
cmpsb
stos
dec
ret
mov
repz
push
fdivrp
rcrb
pop
rorb
iret
fs
addr16
movsl
ljmp
in
repnz
loopne
mov
lret
and
xor
hlt
mov
mov
inc
cli
insl
sahf
and
push
jbe
scas
testb
inc
mov
in
inc
pusha
mov
lds
push
sub
jbe
ss
lret
insb
inc
fsts
push
add
jl
mov
test
into
pop
dec
jno
pop
stos
mov
addr16
lcall
inc
dec
dec
adc
addr16
jb
and
pop
xor
fwait
out
mov
pusha
sbb
arpl
repz
push
mov
loop
je
xor
mov
dec
aam
outsb
scas
test
scas
push
sub
cmp
das
pop
fmull
push
sahf
adc
xor
jns
push
push
testl
stos
lcall
outsb
inc
xchg
pop
dec
imul
dec
fisubrl
stos
mov
jne
call
test
je
lea
jmp
enter
outsb
bound
adc
push
lret
jo
and
jo
ljmp
inc
adc
aam
and
sahf
loopne
lcall
aad
dec
pop
sti
pop
and
leave
sbb
ja
jmp
mov
sbb
movzbl
test
add
push
mov
fisttpll
addl
testb
cmp
mov
mov
addb
push
mov
repnz
and
push
jno
pop
mov
lcall
cwtl
hlt
sbb
mov
and
loop
es
test
sahf
ss
push
das
sub
imul
test
and
orl
pop
mov
mov
test
stos
rol
in
out
lcall
in
sbb
mov
bound
lea
mov
gs
test
sub
mov
cltd
mov
stc
shl
aam
frstor
test
xchg
icebp
nop
mov
pop
imul
add
mov
gs
and
xchg
iret
test
push
cs
cmp
mov
push
or
xor
jbe
fildl
mov
xchg
adc
xor
icebp
xchg
scas
sbb
inc
aaa
cmpsl
out
mov
fmul
in
cmpsl
cmp
ss
into
and
rcll
push
pop
jecxz
es
mulb
lock
mov
inc
rcrb
jno
fimull
mov
sub
xor
icebp
mov
loope
fdivl
stc
dec
or
stos
loop
mul
cmp
jb
xchg
in
push
pusha
sbb
pop
jnp
arpl
sbb
es
pop
imul
cs
jae,pn
xchg
or
cmpsb
push
imul
ret
in
sbb
ja
xchg
inc
cs
dec
int
fidivrl
xchg
lea
inc
jnp
mov
pop
in
aas
popa
mov
jle
mov
test
shlb
or
inc
jmp
ret
sti
call
xchg
aas
xchg
mov
lds
out
jge
test
jb
sbb
push
cld
fisttpll
sbb
xlat
and
out
sub
aad
sahf
adc
push
or
mov
inc
imul
es
cltd
rorl
push
mov
mov
bound
mov
xor
cmp
es
mov
mov
xchg
cmp
push
adc
aam
gs
pop
cli
dec
mov
mov
push
xor
or
fs
mov
into
js
lea
ljmp
int
ret
xor
or
push
call
aas
mov
or
incb
notb
imull
push
mov
in
lret
inc
mov
mov
mov
inc
xchg
xchg
test
int
xor
cmpsl
jp
and
pop
jb
mov
pop
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
shrb
mov
aas
call
insb
dec
pop
add
lcall
xor
leave
jecxz
pop
adc
adc
lods
movsb
cmc
rorl
das
inc
jp
imul
popf
stc
cld
cmp
out
fwait
inc
les
mov
pusha
adc
dec
or
loope
or
push
mov
mov
repz
mov
jecxz
pop
mull
pushf
cmp
sub
cmp
out
mov
push
loop
jae
int3
loopne
outsb
sub
dec
jae
mov
sbbl
cmpsb
test
lock
out
and
gs
mov
dec
sub
sbbl
pop
adc
pusha
daa
fs
bound
mov
pop
dec
fcom
and
addb
cmp
stc
filds
jle
call
dec
fisubrl
insb
adcl
lret
inc
out
push
outsl
and
xor
cmp
imul
mov
add
rorb
inc
sbb
add
xor
adc
mov
enter
cmp
mov
mov
jne
mov
or
lds
lahf
push
sub
dec
sbb
scas
ret
push
or
dec
das
push
or
rcl
mov
mov
and
push
cmpsb
lds
mov
cltd
movsb
pop
cmpsl
fbld
rorb
mov
daa
pop
popf
lret
in
int3
test
cmp
test
cs
int
repz
fistpl
dec
mov
aaa
mov
xchg
sbb
in
rclb
adc
xchg
cmp
dec
sbb
dec
pop
pop
leave
cmc
inc
out
push
xchg
xchg
xchg
jo
movsl
aam
mov
xchg
test
pop
xchg
adc
imul
mov
xchg
arpl
aad
sbb
or
popf
dec
jo
and
fnsave
adc
rolb
lcall
dec
dec
xor
pop
int3
jge
aas
jp
or
hlt
cli
mov
inc
scas
pop
add
add
cmp
mov
nop
jg
ret
dec
outsb
or
popl
jg
rorl
mov
popf
into
xchg
lahf
push
jns
movsb
mov
out
adc
sbb
repz
addl
std
xor
in
jge
cwtl
xor
outsl
ljmp
mov
fidivrs
or
jb
jg
pop
push
leave
mov
idiv
jbe
mov
jae
bound
mov
pop
notb
shrb
mov
and
xor
ljmp
das
inc
aas
dec
outsb
xorb
pop
xlat
sub
sbb
inc
cwtl
push
adc
push
push
fs
cmp
jno
mov
xlat
imull
add
xchg
dec
jns
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
iret
test
shrl
jo
dec
dec
sar
sub
into
stc
adc
loopne
gs
ljmp
cmc
jp
mov
movsb
lods
mov
or
lods
inc
jmp
mov
fldcw
cmp
xchg
mov
subb
mov
push
cmc
pop
inc
pop
mov
cmp
aam
jecxz
mov
in
add
and
sbb
jg
or
mov
cs
jle
pop
test
pop
xor
addr16
rcr
mov
movhlps
and
adc
push
mov
lock
adc
push
mov
js
cld
test
out
loop
or
lea
sbb
lods
ja
mov
mov
push
mov
and
icebp
das
orb
dec
or
pop
pop
lret
sbb
insb
pop
mov
repz
pop
outsl
popf
pop
inc
aas
repz
jno
or
sub
mov
sahf
dec
shll
fcomps
jmp
lret
sahf
mov
add
cmp
and
cmp
inc
hlt
pop
pop
jge
in
fimuls
enter
insl
sbb
shl
xor
mov
sahf
sub
shrb
pop
popa
call
mov
rclb
jnp
es
lds
stos
pop
test
enter
call
and
inc
pop
jge
or
loope
xchg
cmp
aaa
add
test
and
loope
add
ret
pop
lock
mov
and
sahf
jecxz
mov
cmp
jecxz
pop
dec
bound
xor
inc
mov
iret
xchg
and
or
pop
pop
jge
add
add
sbb
pop
lret
out
add
in
scas
popf
mov
lahf
insl
sbb
or
inc
out
repz
cld
add
sbb
inc
or
or
pop
outsl
or
rorl
ret
xor
cmpsb
and
arpl
aam
mov
ja
aas
add
mov
push
enter
fs
pop
dec
jp
das
or
iret
mov
lds
mov
xlat
jmp
divl
xor
push
add
rol
cld
push
rorl
test
addr16
xchg
xchg
lods
push
pop
mov
push
inc
movsb
and
cmc
pop
fmul
dec
imul
sub
jl
cltd
cwtl
fcmove
aad
push
das
cmp
add
loopne
sub
aad
or
cmc
clc
dec
inc
cmp
mov
out
sti
inc
mov
enter
jecxz
int3
cmp
push
and
mov
fldt
pop
push
pop
dec
fiaddl
out
pushf
pop
pop
and
loopne
cld
push
and
push
imul
dec
mov
sub
in
repnz
ss
cltd
mov
xchg
fdivrp
lods
mov
and
into
mov
jge
ret
popf
cmp
and
scas
insb
push
lret
sub
xor
test
shlb
push
mov
xorl
push
out
and
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
fistpl
xor
into
jo
imul
ds
push
xchg
sbb
pop
adc
addr16
outsb
insb
inc
lock
push
mov
daa
push
and
or
insl
lds
shrl
inc
mov
add
inc
int3
sbb
cmc
fs
inc
addb
ss
cmpsl
neg
jge
mov
mov
aas
xchg
daa
dec
sbb
popf
push
xor
sbb
xor
xor
jge
mov
cs
in
mov
andb
pop
mov
dec
sti
mov
mov
xchg
jnp
addr16
sub
cwtl
outsb
jae
mov
mov
insb
or
inc
push
jp
xchg
inc
mov
mov
adc
pop
aaa
ror
in
push
sub
pop
lret
mov
dec
cli
popa
insb
lret
in
mov
je
popf
fs
cmpl
dec
cld
cmpsb
fimuls
loope
popf
xchg
adc
push
or
repnz
nop
sbb
adc
or
cmpsl
push
xor
stos
mov
push
sbb
stos
lods
iret
cltd
xor
mov
push
dec
xchg
xchg
and
push
push
imul
outsb
in
lods
gs
aam
popa
dec
es
xchg
xlat
mov
rol
xlat
xchg
shr
das
movups
adc
sbb
xchg
cmp
sub
mov
movsb
clc
test
arpl
jne
hlt
movsb
test
pop
push
mov
xchg
or
jge
or
add
jle
jmp
sarl
mov
insb
xchg
dec
sbb
dec
outsl
sub
sub
sarl
pop
jnp
fiadds
sti
lods
cmp
or
cltd
pop
sbb
shlb
sub
xchg
imul
insb
dec
ds
sbb
xor
fildll
cmp
mov
mov
inc
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
ret
outsb
push
int3
jo
imul
fs
leave
mov
movsl
outsb
pop
fcmovnbe
and
pushf
movsb
inc
data16
mov
rcl
cltd
cmp
lret
cmp
test
aaa
stos
jae
pop
sub
testl
je
scas
imul
or
into
sar
xchg
icebp
test
sbb
dec
stos
es
hlt
jle
imul
push
jo
in
mov
aaa
pushf
pop
clc
cmp
cs
ret
fildl
mov
popa
push
lods
push
push
lock
sbb
push
pop
shlb
jno
push
call
dec
mov
cmp
sbb
in
cmpsl
push
aaa
mov
out
mov
adc
imul
add
popf
loope
or
daa
cmc
sbb
jns
and
jnp
inc
add
sbb
fdivrs
inc
lahf
mov
test
or
push
in
sub
and
fnstenv
xor
mov
lods
stos
and
subb
enter
or
out
xor
sarl
dec
inc
jae
mov
mov
nop
leave
push
aam
call
lret
xor
jg
xor
mov
pushf
aaa
icebp
sub
leave
xchg
sub
mov
repnz
push
inc
adc
jg
mov
adc
mov
pop
dec
and
sarl
push
not
sbb
add
mov
and
mov
sbb
arpl
xchg
cwtl
aas
enter
repz
ja
inc
imul
and
cwtl
in
cs
mov
out
scas
ds
and
roll
dec
mov
test
sub
jnp
add
test
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
lea
pushf
dec
lret
imul
mov
sub
cmp
xor
in
sub
movsl
pop
add
clc
shlb
pop
mov
loopne
push
push
addb
mov
cld
inc
and
dec
mov
or
sbb
dec
xchg
jne
repz
mov
xchg
outsb
int
and
pop
movsl
insb
and
mov
ds
ja
stos
ret
inc
in
mov
adc
mov
std
out
imul
movsb
mov
dec
and
add
aad
xchg
pop
or
movsb
mov
pop
or
iret
cmp
jo
sbb
jmp
lods
loopne
dec
lock
test
xchg
push
mov
js
arpl
insb
mov
jae
cmp
push
stc
in
cltd
sub
in
push
mov
adc
inc
adc
jne
test
les
add
jae
push
out
mov
inc
cmpsl
pop
pop
mov
adc
mov
in
jbe
enter
lea
xchg
enter
adc
cld
movsb
mov
mov
xchg
jae
arpl
stos
add
adc
repz
mov
out
pusha
and
popa
pop
push
dec
jo
mov
rol
sbb
test
add
mov
lods
lds
insl
into
icebp
cld
xchg
addr16
mov
mov
enter
cwtl
sub
decb
xchg
aaa
jo
das
mov
pop
out
push
mov
adc
data16
data16
add
out
clc
adc
mov
push
inc
mov
cs
out
add
fimuls
push
jo
mov
pop
mov
dec
ljmp
mov
sub
jg
and
adcl
xchg
xor
lea
jg
xchg
lds
adc
rcrl
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
ds
out
inc
enter
jg
jo
and
cmpsl
int3
gs
jmp
out
retw
adc
sub
test
sbb
imul
mov
les
into
dec
mov
ret
nop
popf
test
sub
mov
scas
and
cmc
mov
xor
adc
sub
outsl
stos
or
xor
mov
fidivrs
insl
push
inc
mov
int3
imul
jo
ja
dec
bound
test
push
ja
pop
push
pop
mov
sub
cmp
jno
jns
cmpb
adc
jne
xchg
xlat
push
dec
ret
mov
mov
jb
and
test
repnz
and
xor
psrld
sbb
test
cwtl
les
lods
popa
roll
mov
sub
cmp
ret
add
cld
mov
imul
sbb
scas
shlb
mov
lcall
inc
push
test
xchg
cmp
sahf
or
xor
and
sub
mov
arpl
or
loope
sbb
in
sbb
stc
fldenv
cltd
jl
rcll
jo
fists
aam
pop
inc
jmp
adc
mov
pop
inc
ljmp
or
ja
insb
pop
leavew
jl
xlat
mov
aam
add
xor
stos
addr16
inc
pop
xor
mov
mov
pop
add
mov
arpl
lret
leave
movsb
mov
xlat
push
leave
pop
stos
movsl
cli
gs
insb
pop
or
pop
cmp
jbe
jnp
hlt
dec
andb
and
imul
jp
cmpsb
pop
and
mov
pop
inc
mov
fstl
cli
mov
xor
mov
cmpsb
adc
xor
test
add
cmp
mov
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
or
push
insl
mov
jg
jo
jle
test
push
hlt
mov
inc
push
add
lods
adc
xor
sub
hlt
mov
push
xor
cmp
mov
xor
mov
jle
movsb
fisubs
xchg
or
cmp
mov
lods
xchg
sti
mov
xchg
dec
in
bound
mov
jns
mov
push
sbb
xor
push
repnz
in
jl
gs
andl
jmp
sub
inc
test
stos
out
out
jnp
inc
es
roll
inc
arpl
xchg
cmp
inc
inc
mov
fs
sar
sbb
pop
popf
jp
mov
mov
popa
jmp
xor
fs
mov
mov
loopnew
data16
nop
mov
fsubl
scas
jmp
pop
fmuls
push
outsb
pop
jo
mov
ss
shll
jp
jmp
sub
pop
pop
sub
push
xor
orb
lods
iret
pop
fstps
subb
cmp
cpuid
movsl
cmp
mov
inc
outsb
push
pop
xchg
pop
ret
pop
jmp
lods
mov
loop
add
imul
fs
jp
sbb
nop
mov
popa
pushf
fildll
in
adc
js
add
rcll
sbb
je
scas
sbb
or
dec
test
outsb
int
arpl
in
sarb
adc
lea
adc
adc
cmp
adc
arpl
jae
out
mov
mov
add
aad
insb
sbb
sbb
adc
jo
test
mov
out
mov
aas
scas
ret
pop
rclb
fdivrs
stos
adc
imul
or
sbb
lcall
sbb
add
lds
add
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
lds
sub
jg
jo
or
rorl
sbb
fbld
es
leave
xchg
lcall
push
outsb
out
mov
or
sarl
insl
jle
es
dec
aad
cmp
int
lea
mov
mov
fsubrs
pop
pop
sbbb
or
mov
sahf
sub
jmp
pop
rcrb
bound
dec
xchg
aaa
push
sahf
sbb
add
mov
je
adc
dec
mov
mov
test
and
idivb
push
jecxz
mov
pop
ljmp
or
xchg
push
and
sub
test
ret
dec
cmp
jnp
mov
jno
push
mov
cwtl
std
add
std
xor
daa
mov
xchg
pusha
pop
mov
xacquire
test
cmp
lret
les
lcall
or
jo
adc
push
int
push
push
adc
popf
push
add
or
stos
loopne
and
nop
lcall
int3
popf
ret
pop
push
mov
jge
or
push
pushf
cmp
test
in
and
bound
pop
ret
cs
rorl
mov
in
push
push
mov
dec
loop
movsb
mov
mov
dec
stos
popa
stos
pop
mov
mov
fnsave
ret
sbb
call
nop
sarb
mov
roll
cmpsb
aaa
adc
sub
inc
das
mov
data16
call
xor
pop
loope
mov
js
addr16
and
js
adc
cmc
fisubs
maskmovq
testl
movsb
cmpl
test
jne
insl
pop
sub
xor
add
arpl
jno
stc
sub
mov
fstpt
cld
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
and
jg
jo
sub
add
xchg
adc
sti
arpl
pushf
mov
inc
das
in
es
inc
inc
idivl
mov
xchg
sub
cmc
mov
loop
cmp
fld
scas
clc
pushf
and
xor
int
aas
out
xor
jns
or
xchg
fimull
dec
aam
gs
sahf
lea
xchg
mov
mov
dec
arpl
bound
mov
xor
cmp
mov
call
shll
pop
test
js
iret
sbb
dec
insb
xchg
loopne
or
mov
adc
stos
out
push
push
aas
mov
ret
xor
adc
int3
imul
xor
pop
addr16
lds
mov
lea
aas
pushf
sbb
aam
add
jp,pt
test
cmp
pop
mov
mov
jmp
out
push
ret
xchg
push
push
sbb
cltd
jge
jbe
cmp
test
pusha
dec
or
enter
mov
mov
arpl
xchg
popf
outsl
cmp
cld
push
sbb
mov
xor
add
pop
fldt
jmp
pop
push
xor
negb
pop
movsb
mov
aam
adc
arpl
cwtl
imulb
inc
and
test
dec
cmpsb
pusha
push
clc
push
lea
or
movzbl
adc
mov
sar
bound
mov
mov
inc
or
push
sub
and
sbb
jne
pop
ficoms
fldcw
cmc
jbe
pop
dec
jecxz
test
dec
jecxz
dec
fs
int
scas
in
adc
cltd
pop
sbb
testl
popf
clc
movsl
mov
adc
outsl
cwtl
or
or
into
or
pop
inc
cmp
nop
repnz
push
scas
mov
in
pop
xchg
push
sbb
fnstsw
or
gs
pop
adc
xchg
mov
leave
adc
stos
push
icebp
dec
jbe
add
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
push
or
ss
jo
adcb
ds
pop
and
add
adc
pop
ljmp
lds
lret
mov
sbb
push
int3
divb
cmpsl
ds
jae
idiv
fsubs
mov
push
xchg
xor
loopne
jg
cmp
mov
mov
sub
outsl
ds
iret
ljmp
arpl
aaa
popf
mov
pop
dec
fisubrs
iret
pop
scas
lock
jp
adc
cltd
cmp
stos
int3
ljmp
cwtl
pop
push
loopne
loopne
ljmp
test
pop
push
pop
add
cmp
sbb
fidivl
sbb
xchg
xchg
mov
or
adc
loope
xor
push
in
lock
push
or
mov
xor
clc
xchg
cs
adc
fbstp
mov
iret
sub
iret
fwait
loope
sarl
out
mov
fmulp
pop
insb
jns
outsl
cld
and
outsb
cmp
jne
cld
inc
add
jge
fcoms
popa
dec
cwtl
in
dec
les
xor
inc
shll
cmpsb
sub
push
add
mov
cmp
jp
push
mov
sbb
orb
cwtl
xchg
or
xchg
cmpsb
int3
cld
and
ss
pop
pop
cmovbe
jb
xor
loopne
into
mov
pusha
mov
rorl
mov
add
popf
test
xchg
lods
mov
push
cmp
add
ja
or
dec
or
mov
xchg
xorb
ss
mov
xor
cld
out
rcll
addr16
loope
or
jno
mov
xchg
hlt
decb
cmp
aas
out
pop
inc
or
push
inc
cmp
cltd
mov
mov
sub
mov
clc
mov
popf
lock
or
pop
inc
cmpl
dec
xchg
cwtl
pop
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
aaa
rorb
cmc
xchg
fidivs
imul
call
jb
fistpl
adc
jbe
sub
stc
inc
lahf
test
imul
into
lret
int3
test
imul
jmpw
clc
in
jne
jns
mov
add
aam
and
cli
push
pop
pop
push
xchg
or
jecxz
mov
lret
outsl
jge
cmpsb
rcll
mov
mov
push
cmc
nop
dec
add
dec
arpl
aaa
rorl
pop
add
sbb
or
call
mov
and
decb
int
mov
cmpsb
stos
push
pop
cmp
jb
xchg
sub
mov
repz
loop
ljmp
sub
push
jb
stos
mov
or
xchg
adc
sbb
mov
into
inc
cmp
js
rol
adc
mov
mov
add
in
outsb
mov
pop
inc
push
ficomps
repnz
jo
stos
jmp
aad
call
adc
cltd
inc
ret
inc
fwait
insb
mov
jecxz
mov
addb
xor
iret
add
mov
mov
inc
push
jecxz
mov
aam
fstpt
dec
xor
xchg
xor
sub
jl
xchg
push
lcall
jns
dec
addr16
int
enter
push
movsl
dec
add
and
test
xor
sub
mov
or
jg
aas
fstp
and
xor
sub
mov
inc
adc
mov
pop
out
aam
adc
or
into
test
in
out
mov
nop
popa
cmp
pop
sbb
scas
cmp
vphaddudq
jle
cld
or
scas
sub
xchg
cmpsb
popa
fsubrl
or
push
ficoml
aad
push
jmp
jo
ja
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
in
leave
xchg
push
fdivl
imul
loopne
fisubs
push
push
push
fidivl
mov
lea
aam
lock
aad
inc
lret
lahf
pop
test
jnp
ficoms
fucomi
xchg
inc
sbb
fadd
push
xchg
mov
decb
xchg
mov
add
cwtl
mov
test
xor
ja
adc
xlat
inc
pushl
mov
sub
sahf
dec
push
inc
leave
insl
sahf
call
xchg
mov
or
fldcw
jl
cmpsb
daa
and
jno
test
int3
movsb
or
or
out
lret
arpl
jnp
hlt
bswap
lds
inc
cli
mov
sub
leave
stos
mov
pop
cld
test
mov
imulb
push
ljmp
cmpsb
jp
subl
pushl
in
jbe
mov
gs
fistl
out
fs
or
sbb
icebp
mov
mov
imul
adc
fwait
pop
jne
bound
push
or
jnp
icebp
cmp
pop
insl
pop
cmc
lock
addb
xor
movsl
xor
and
mov
push
pop
adc
jne
mov
sbb
repnz
aam
out
cmp
add
out
scas
adc
or
cld
fisttps
lea
adc
xchg
mov
nop
cs
js
aad
scas
jmp
cmpsb
gs
mov
xor
push
icebp
or
cmp
push
insl
xchg
or
and
fcomps
inc
cltd
test
in
jbe
out
adc
sbb
ljmp
hlt
xor
xlat
fidivrl
fldenv
mov
pop
fisttpl
jno
cmp
jecxz
xchg
pushf
sub
test
popa
xchg
nop
clc
sub
stc
jmp
sbbb
cltd
js
mov
sub
add
test
jo
imul
adc
daa
out
arpl
xchg
cltd
adc
pushf
adc
adc
enter
popa
inc
loop
std
cmp
cmc
jae
xor
dec
ret
repz
push
popf
and
mov
or
loope
dec
pop
repnz
cltd
cmc
mov
sarl
inc
je
xchg
cmpsb
jb
testl
scas
or
out
mov
jns
inc
cwtl
or
dec
sub
mov
mov
xchg
xor
sbb
inc
int
aaa
adc
xor
sub
pop
pop
sbb
inc
loopne
sbb
push
mov
in
loop
inc
inc
clc
push
or
cli
or
push
cmc
xchg
mov
mov
xor
pop
mov
adcl
mov
jno
jo
or
clc
sahf
test
mov
pop
push
xor
cmpsb
fcoms
call
sbb
pusha
or
mov
lock
inc
fstpt
lods
out
leave
mov
into
cmc
dec
jne
sbb
jp
jecxz
jg
les
mov
adcb
jb
in
nop
or
jno
jle
addr16
into
and
iret
lret
loop
ss
xchg
int3
adc
iret
movsb
sub
mov
orl
inc
jl
sbb
pop
dec
idivl
int3
insb
insb
out
aas
xchg
jp
inc
pop
rcrl
adc
xchg
outsl
iret
add
jns
int
add
pop
inc
push
push
xor
add
cltd
andl
cld
mov
or
fdivr
cmc
or
clc
adc
ret
pop
mov
dec
gs
mov
out
xchg
xchg
sub
cmp
sub
push
sbb
mov
cmp
scas
call
xchg
dec
mov
inc
pop
stos
test
test
imul
jmp
clc
icebp
mov
icebp
ficompl
aam
fdivs
imul
cmp
stos
daa
cld
js
add
add
daa
addl
sub
shlb
and
sbb
jbe
jnp
jl,pt
push
aad
jbe
or
or
cwtl
inc
fwait
and
ljmp
repz
pop
sub
cmp
dec
adc
movb
add
jb
push
xor
or
adc
add
xor
cmpsb
wbinvd
push
jg
out
popf
scas
mov
and
rolb
add
push
sub
cld
aam
inc
inc
push
popf
scas
sbb
mov
inc
sbb
js
dec
setle
xchg
adc
xchg
xchg
fnsave
sub
sbb
add
pop
or
hlt
adc
gs
jecxz
test
rclb
mov
dec
jae
sbb
ljmp
fldl
cld
sbb
pop
jge
pop
loopne
sub
rcrb
int
jno
loope
pop
xor
popa
sahf
ret
jmp
lret
push
mov
jmp
or
je
test
mov
jne
xchg
pop
mov
sbb
push
mov
lods
fcoml
stos
pop
pop
mov
and
or
pushf
daa
or
mov
jns
scas
rclb
pop
pushf
pop
or
int
jle
nop
cmp
test
stc
jae
clc
jo
hlt
int3
adc
nop
out
test
lock
popa
ret
int3
add
out
arpl
ljmp
pop
inc
mov
xchg
jge
andl
cmp
xchg
push
cmpsb
sbb
fmuls
insl
mov
mov
inc
fdivp
xor
dec
jo
sub
aam
inc
mov
mov
fwait
inc
sub
orb
mov
cmc
scas
sub
and
bound
pop
jge
jg
push
sbbl
cmc
push
fs
call
outsb
mov
push
in
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
xchg
stos
add
jo
imul
or
xchg
je
or
mov
push
pop
popa
sub
mov
cwtl
shrl
lahf
push
jecxz
mov
jne
movsb
adc
jmp
in
sbb
out
cmp
inc
stos
cmpsl
push
cmpsl
push
add
lret
push
std
fdivr
dec
sub
xor
pop
pop
add
dec
mov
mov
cmpsl
lret
movsl
notb
push
lds
outsl
les
addr16
jecxz
rcr
jb
add
pop
cmc
scas
pop
ja
add
push
out
cmp
pushf
gs
xor
push
lcall
xchg
in
icebp
mov
loop
enter
fldcw
cmp
add
mov
jg
jne
pop
mov
sbb
divl
bound
or
enter
addl
push
ljmp
sbb
subb
es
jmp
inc
and
mov
push
lock
pop
loopne
ja
js
ret
outsb
cltd
call
sub
pop
clc
jp
lods
pop
mov
push
pop
xchg
in
out
pop
repz
mov
pop
and
pop
rcr
pop
fildll
jecxz
xlat
enter
mov
pop
pop
fimuls
jbe
mov
cs
shl
push
bound
add
and
mov
outsb
std
xchg
pop
inc
cmpl
out
sbb
and
in
insl
insb
mov
repnz
jb
mov
xchg
rorb
mov
js
fldl
xor
mov
popa
xor
inc
mov
out
adcl
dec
sbb
add
inc
ret
out
lea
xor
jb
inc
jmp
mov
sbb
jmp
iret
jp
jg
std
fcomps
addr16
testb
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
push
jae
loopne
jo
imul
jae
xor
xchg
bound
imull
push
je
lds
pop
cs
imul
add
and
adc
cli
addr16
mov
fmuls
pop
aaa
daa
dec
mov
mov
inc
xchg
fsubs
gs
les
cmp
pop
inc
in
mov
jg
push
cmp
movl
add
or
mov
sub
lea
mov
dec
sub
or
xchg
out
xor
movzbl
into
imul
shl
pop
popa
fnsave
addr16
orb
int
nop
and
sti
or
pop
jns
mov
scas
les
int3
mov
pop
inc
rol
loope
mov
insl
sbb
repz
rcrl
mov
xchg
sti
cmpl
xlat
jle
push
push
pandn
cwtl
mov
push
lods
lea
xor
ja
repz
mov
mov
fsubs
jno
pushf
mov
mov
lea
call
insl
jmp
inc
xor
ret
testl
pop
pop
loopne
mov
pop
cmp
add
iret
lcall
jg
imul
leave
sub
aaa
pop
mov
out
mov
xor
iret
sub
and
int
test
arpl
inc
aaa
js
xchg
ljmp
hlt
fistpl
mov
stos
rcrl
mov
sbb
ljmp
cmp
out
push
into
mov
mov
scas
xor
jg
lea
fbstp
stos
mov
test
mov
in
xchg
pop
in
in
cmp
xorb
sti
mov
inc
stc
cmp
jl
cltd
push
jae
test
mov
test
arpl
push
fdivl
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
adc
mov
loop
jo
jg
jo
ja
sub
jbe
dec
adc
aaa
mov
or
sub
ds
inc
add
xchg
sub
test
sub
out
popa
mov
mov
lret
add
push
testl
jg
pop
push
jp
push
and
mov
adc
xor
in
rcr
xchg
xor
lcall
fstp
insb
jne
cs
xchg
lret
pop
imul
xchg
mov
add
mov
outsl
loopne
daa
jne
jo
xor
cmpsb
lret
and
stos
add
jle
test
sbb
sbb
data16
adcl
add
fstl
in
pop
fcomps
add
je
sub
push
sti
inc
cwtl
pusha
xchg
add
mov
mov
lock
nop
icebp
imul
out
fisttpll
fsub
sub
jmp
sbb
jo
rorl
cs
leave
in
mov
lahf
ret
enter
or
cmp
cmp
add
les
and
xchg
daa
movsb
cmpsl
dec
test
xor
rcrb
cld
push
aam
lock
mov
pop
aas
xchg
sbb
dec
or
jno
addr16
jnp
aam
inc
shrb
xchg
or
and
lahf
push
sub
cmc
jno
jne
cli
cmpsb
rcrb
pop
faddl
xlat
adc
xchg
cmp
test
jecxz
push
les
mov
jno
dec
push
jnp
mov
xor
add
loop
push
notb
push
push
clc
sub
aam
lret
cmc
out
into
es
and
in
insl
outsl
ljmp
add
inc
xchg
dec
cmp
and
mov
push
sbb
mov
lods
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
inc
sub
adc
xchg
jg
jo
push
sbb
dec
pop
je
inc
pop
or
je
jb
dec
scas
jne
fidivrs
imul
movsb
mov
popa
int
adc
in
movsl
cmp
cld
aad
hlt
push
dec
mov
aad
push
cmp
fs
pop
sti
call
inc
mov
pop
stc
arpl
adc
out
repz
movsl
pop
repnz
jnp
jnp
sub
fwait
std
jge
jb
sbb
add
je
fs
fcomps
aaa
push
pop
lahf
add
fwait
cltd
ret
inc
and
pop
push
push
and
mov
jbe
cltd
sbb
adc
dec
enter
push
imul
test
add
sub
xchg
or
in
ja,pt
pusha
cmp
stos
jae
aaa
loope
fwait
sbb
dec
test
and
bound
rcrb
lcall
test
dec
and
sub
lock
pop
mov
pop
sbb
mov
push
mov
aas
cmc
pop
xor
sarl
mov
icebp
call
mov
sub
nop
and
in
dec
xor
fdivrl
aam
and
dec
cltd
push
in
repz
sti
push
mov
mov
adcb
push
mov
movsb
iret
out
lea
dec
sub
jle
pop
and
cmp
xchg
lea
mov
sbb
lods
push
pavgb
add
ljmp
imulb
out
loop
mov
xor
add
mov
jae
jno
mov
hlt
or
and
mov
jo
xchg
jg
jo
adc
mov
imul
jnp
lods
mov
or
pop
ss
inc
sti
hlt
add
shll
mov
cld
add
mov
test
popf
dec
fdivr
sbb
dec
popl
push
mov
test
int
test
popa
cmp
lahf
test
pop
insl
insl
mov
lods
lods
mov
loope
outsl
push
lcall
mov
mov
lcall
cmpsl
je
xchg
mov
pop
lds
cmpsb
daa
ljmp
int3
bound
push
pop
add
popa
xor
les
test
pop
inc
push
out
pop
jb
cmp
xor
mov
pop
hlt
call
mov
subl
gs
cs
xor
loopne
pop
rcrl
inc
lock
data16
mov
sbb
stc
push
mul
adc
mov
jmp
xor
lahf
and
mov
pushf
icebp
sarb
out
rclb
inc
lret
enter
repz
xchg
jp
repnz
or
pop
and
divb
pop
dec
int
rcrb
dec
cs
les
stos
cmp
ret
data16
cmp
test
ja
imulb
jbe
mov
les
loope
adc
je
push
cmp
xor
cmp
push
mov
cli
in
or
cmp
jne
mov
jmp
xchg
or
fcmovne
orb
mov
pushf
jb
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
lret
xor
mov
jo
xchg
jg
jo
and
xchg
ret
mov
mov
inc
sbb
divb
dec
roll
or
in
mov
mov
cwtl
shl
aam
fdiv
jns
mov
adc
xor
leave
fs
aaa
jne
sahf
or
stos
or
cmp
cmp
cmp
xor
in
mov
out
pop
ret
jae
fisubs
nop
ljmp
repz
jb
xor
pop
lock
adc
push
add
out
dec
les
xor
pop
arpl
pop
add
and
stos
dec
sti
inc
cltd
inc
and
stos
mov
dec
popa
xor
imul
and
imul
dec
inc
cmp
inc
loopne
xor
fisttpll
jmp
out
int
lods
je
ja
fwait
inc
shll
jnp
mov
repz
mov
xchg
xor
sub
movsb
xlat
sub
dec
sbb
sbbb
xchg
mov
mov
lcall
cwtl
imul
sub
xchg
js
jmp
dec
sahf
fwait
arpl
lret
or
or
push
fiaddl
push
sub
js
out
and
jne
pop
push
loope
inc
mov
ficompl
es
dec
movsb
xchg
pop
cmp
xchg
test
sub
ss
jl
movsl
jnp
pop
jnp
or
std
adc
xchg
xchg
mov
inc
lcall
xchg
out
mov
push
arpl
xor
inc
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
shlb
jo
xchg
jg
jo
push
into
movsb
fisubl
addr16
clc
mov
popf
jns
sbb
dec
aam
and
cmp
push
bound
xor
int3
mov
pop
stos
lret
aaa
adc
fsubrl
in
and
adc
rol
jnp
dec
pusha
fdivr
add
imul
inc
pop
es
in
das
sbb
jmp
test
and
ja
and
jbe
add
fsubs
ss
pop
adc
ljmp
fstpl
mov
mov
xchg
sub
outsb
cld
ds
in
cmp
mov
add
int
push
pushf
adc
mov
mov
jnp
sti
pop
test
cmpsl
cmp
ret
ret
pop
enter
dec
dec
xchg
sub
dec
mov
repz
jb
and
outsb
xor
dec
and
pop
movsb
cmpsb
push
ret
out
subl
add
jae
sarl
stos
pop
jecxz
and
stos
cmp
dec
sbb
cld
sub
mov
jp
test
jp
popf
xor
mov
sbb
dec
pop
inc
leave
push
insl
shlb
stc
vfrczsd
loopne
xchg
fstpl
xchg
fwait
push
ljmp
dec
push
fdivp
push
pushf
stos
aad
adc
in
pop
sbb
xchg
mov
test
xchg
sbb
sti
push
clc
mov
adc
lods
xorb
aam
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
sti
add
jo
jg
jo
adc
test
das
test
iret
shr
in
add
xchg
or
imul
or
jle
into
pusha
xchg
das
adc
lods
loope
xchg
cli
cmp
call
test
pop
adc
cmpsl
mov
adc
decb
mov
jmp
lock
sbb
cmpsb
and
stos
jecxz
jns
imul
jno
pop
fisttps
je
shll
mov
mov
and
adc
add
mov
jmp
dec
and
mov
adc
and
add
stos
hlt
adc
mov
scas
pop
out
xor
cmp
lcall
je
in
jb
or
jne
fnstsw
inc
outsl
std
pop
adc
and
pop
and
stc
xlat
int3
scas
jae
xor
fsts
outsb
inc
in
fs
loop
adc
sbb
pop
arpl
mov
rorl
and
fmull
adc
cltd
sbb
dec
xchg
and
daa
or
repnz
adc
lds
push
inc
xor
mov
sahf
pop
push
adc
pop
shrb
add
xchg
orb
in
arpl
jno
shrl
or
mov
push
inc
jl
cmp
add
dec
xor
adc
leave
mov
imul
jns
sub
adc
pop
sbb
mov
test
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
xchg
fcmovbe
fucomi
jo
xchg
jg
jo
pop
lea
xor
cmp
lds
in
lret
xchg
lods
in
lret
addr16
push
pop
lahf
cmp
repz
pop
and
sbb
pushl
insb
pop
xchg
push
stc
ja
xchg
xchg
adc
gs
cmp
shll
std
lods
dec
out
stos
pop
and
fsubrs
nop
dec
mov
jecxz
gs
rep
jne
inc
dec
das
xchg
testb
add
cld
jg
pop
adc
loope
mov
inc
gs
mov
jg
add
rcrb
sub
imul
jo
dec
xchg
lods
push
lahf
in
sarb
cmp
push
aaa
jmp
add
cs
fnstcw
mov
cmpsb
repz
push
sub
and
lahf
inc
call
xor
dec
cmp
test
jae
add
imul
jb
or
test
sbb
aas
sbb
js
test
xlat
test
testl
jecxz
fsts
xchg
stos
or
fildll
test
mov
lods
test
out
fstps
imul
andl
xor
gs
jg
nop
pushf
pop
mov
in
or
or
xor
cld
mov
mov
xor
fldl
std
cmc
pop
repz
mov
pop
adc
mov
add
mov
icebp
in
icebp
mov
push
cmp
icebp
jo
jo
xchg
jg
jo
icebp
in
ja
int3
sbb
outsb
mov
inc
test
mov
xor
stos
les
mov
xor
push
sti
into
adc
mov
das
inc
jb
xor
jns
iret
sbb
das
popa
adc
fistps
xor
cwtl
cmpsl
loope
fsubrl
push
and
das
dec
insb
outsb
push
mov
lds
dec
shll
aad
adc
and
xchg
adc
lock
mov
pushf
das
fnstenv
and
pop
jnp
mov
pushw
insl
shlb
movsl
lods
add
outsl
pusha
xchg
lahf
aad
inc
aaa
jo
sub
jecxz
dec
sahf
pusha
insb
pop
adcl
push
jo
pop
push
add
sbb
cmpsl
cmpb
je
les
pushf
cmp
push
int
bound
test
stos
push
pop
jae
cmp
lret
dec
stc
adc
sbb
pop
mov
test
shlb
jae
cmp
jecxz
fadds
mov
ja
jmp
lret
or
add
imul
xor
arpl
xchg
leave
rorl
cli
ds
adc
in
push
xchg
shl
mov
lods
testl
int3
loop
mov
adc
inc
mov
add
pop
outsl
and
daa
out
sub
mov
scas
shl
adc
mov
scas
shlb
adc
out
mov
mov
negb
dec
std
pushf
cld
test
dec
cs
jecxz
dec
orl
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
rcl
xchg
cmc
jo
xchg
jg
jo
push
jae
les
cmp
mov
jg
data16
fsubp
outsl
shlb
xor
clc
xchg
icebp
xchg
adc
dec
inc
daa
adc
mov
and
js
in
sbb
arpl
and
fucomi
imul
mov
es
mov
dec
jo
mov
add
jmp
pop
rcr
pop
repnz
jno
ds
cmpsl
mov
mov
ds
ja
movsb
loop
es
mov
adc
pop
daa
cmp
xor
jb
jl
fstpt
cs
sbb
push
loopne
pop
mov
xor
dec
push
loopne
hlt
fnstsw
mov
movsb
loope
pusha
cmp
inc
ficoml
and
sub
fsub
fidivs
lock
lcall
imul
xchg
mov
cmpsl
jle
jg
sar
mov
xor
jecxz
fcomps
pusha
faddl
negb
xchg
dec
cld
imul
fistps
nop
mov
sub
rorb
mov
pop
pusha
lahf
int
shlb
mov
es
xor
mov
push
mov
sub
pop
adc
lock
loop
or
lock
or
xchg
mov
adc
mov
int3
lock
inc
ret
faddl
push
mov
sub
push
mov
andb
add
and
mov
pop
fucomi
pusha
jns
xor
lock
out
sbb
xor
adc
pop
out
ja
adc
fistpll
mov
mov
jmp
frndint
std
imul
mov
xor
sbb
sbb
repz
xchg
jg
jo
xlat
pop
push
lcall
sbb
mov
xor
fnstcw
inc
dec
lods
adc
insl
pop
insl
xchg
add
std
dec
addr16
in
pop
pop
and
pop
jmp
add
into
mov
arpl
pop
xlat
test
rorl
dec
inc
stos
repz
adcl
xchg
and
movsl
inc
leave
mov
sbb
xchg
mov
xchg
add
sbb
xor
popf
fcoml
imul
push
lahf
std
dec
mov
fcoml
mov
out
mov
out
nop
xchg
sub
xchg
test
mov
out
stc
fsts
in
aam
addb
mov
and
jecxz
hlt
repz
popa
xchg
xchg
popf
neg
jno
sbb
inc
fst
loopne
in
mov
testl
loope
shrb
aas
push
aaa
or
faddl
dec
xor
xchg
pop
fadd
stc
mov
and
mov
pusha
ss
inc
xor
push
pop
shr
sub
pop
repz
pop
lret
iret
push
jl
mov
cmpb
arpl
fxch
mov
in
pusha
outsb
push
out
sub
leave
dec
cs
xchg
in
lret
jle
jecxz
daa
aas
lret
pop
and
data16
ja
xchg
push
add
aad
jl
out
jns
mov
cli
scas
rorb
mov
mov
add
jmp
hlt
sbb
rep
cmp
aaa
jne
mov
dec
bnd
xchg
jg
jo
add
jp
icebp
testb
push
repnz
adc
jecxz
pop
mov
add
mov
insb
sub
aas
icebp
pushf
and
fwait
sub
add
lahf
fiadds
jb
in
dec
in
jle
push
enter
sar
mov
sub
hlt
mov
lcall
sub
je
iret
fcmovnbe
sbb
pop
out
loop
inc
sbb
std
mov
and
ret
dec
arpl
mov
jnp
rcl
les
je
sub
adc
les
pop
ret
bound
fucomi
add
scas
sub
xchg
repz
xchg
stos
cmp
nop
fisttpl
out
arpl
shr
stos
xchg
pop
push
pushf
dec
jecxz
inc
aad
dec
pop
es
mov
pusha
add
jne
shlb
sbb
popf
and
std
ss
cmp
add
rorl
shrb
ret
mov
loopne
cld
out
sahf
into
push
mov
push
stos
les
cmp
mov
gs
push
ret
or
fcomps
ss
lods
js
jg
hlt
cmp
js
add
insb
fistl
adc
fs
mov
xchg
mov
cld
and
sbb
adcl
mov
aaa
imul
nop
int3
lahf
stos
popa
inc
push
jb
xchg
push
dec
movl
fsts
sbb
cmp
dec
push
imul
inc
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
pop
jo
xchg
jg
jo
xlat
mov
cmp
js
leave
sbb
inc
pop
mov
popf
lahf
lahf
jle
sarl
jge
sub
push
scas
add
push
cltd
fildll
insb
jge
push
jnp
jo
fmull
popf
xchg
add
clc
es
jns
in
inc
pop
push
push
mov
addr16
dec
cld
out
popa
dec
cli
rcrl
xor
inc
outsl
pop
repnz
xchg
stos
fisubs
adc
pusha
std
sub
xor
pop
jo
outsb
lods
pop
mov
mov
std
aas
ja
pop
js
test
xchg
mov
xchg
dec
xchg
sub
pushf
ret
ret
sti
nop
xchg
mov
xor
mov
jg
popa
test
fcomps
outsb
and
test
fwait
cwtl
call
scas
xchg
sbb
loop
das
jno
pop
pop
shrl
ljmp
outsb
xchg
leave
fwait
imul
movsl
pop
lock
pop
pop
outsb
enter
mov
imull
rcrb
mov
add
sbb
sub
mov
fbld
mov
fcom
cmovne
xchg
cltd
dec
inc
clc
mov
jb
push
adc
push
rorl
negl
sbbb
pop
dec
js
add
imul
test
add
mov
inc
mov
enter
jl
mov
mov
pushf
inc
hlt
je
add
jle
aas
adc
mov
cmp
cmp
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
mov
jl
or
mov
imul
popf
lahf
pop
lahf
ret
cmp
mov
testb
divl
gs
insb
adc
lea
loopne
mov
xchg
pop
divb
push
scas
xchg
stos
mov
fistpl
sarl
jo
pop
xchg
das
cmp
jl
int3
push
cwtl
jmp
in
mov
divl
sbb
scas
pushfw
aam
lret
push
in
lahf
fadd
ffree
mov
dec
cmc
loope
insb
mov
fistpll
mov
test
sbb
cmp
or
jbe
adc
in
push
fucomp
mov
fnstenv
adc
iret
xor
mov
xchg
and
and
cld
fstps
mov
insl
popa
data16
dec
rorl
pop
pop
out
jbe
dec
out
mov
imul
or
movsl
add
subb
adc
stos
jne
icebp
pushl
jb
mov
add
and
jle
lcall
mov
mov
test
sub
sahf
dec
cmpsb
pop
aas
mov
xor
sbb
jns
adc
inc
lock
icebp
xchg
adc
repnz
jo
or
movsb
sbb
mov
inc
push
dec
pop
dec
jae
testb
ret
pop
test
pop
sub
movsb
jmp
out
or
dec
aaa
insb
jp
cmpb
fst
xor
or
sub
mov
pushf
sbb
data16
jo
xchg
test
and
gs
jnp
cltd
add
and
in
or
pop
xchg
mov
inc
jg
or
push
in
or
push
and
movsl
adc
cli
jp
and
add
inc
add
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
cld
jo
jb
jo
psraw
inc
adc
cmp
and
sub
ss
pusha
loope
test
push
sarb
sbb
add
push
adc
scas
mov
xchg
sbb
cs
adc
aam
aaa
jl
shlb
enter
dec
dec
mov
add
scas
mov
dec
out
nop
popf
jp
out
and
pusha
pop
int3
fiaddl
movsb
roll
add
push
shrl
xchg
loope
jbe
hlt
pop
jg
jno
in
xchg
sub
push
in
repz
dec
test
jg
movb
lods
jnp
cld
fwait
xor
or
dec
adc
or
shrl
push
xor
test
inc
adc
sub
pop
mov
pop
push
enter
push
lcall
cmpsb
les
pusha
xchg
rolb
cltd
es
xchg
push
mov
mov
push
jbe
out
jecxz
aad
mov
mov
mov
fdiv
jne
mov
pop
fs
movsl
mov
fisubrl
mov
scas
hlt
lcall
lds
repnz
inc
mov
or
push
mulb
inc
sub
cli
inc
jle
jae
jecxz
frstor
sbb
xor
jle
push
sarb
and
dec
arpl
or
and
movsl
cmp
or
aad
hlt
mov
sbb
jb
add
rclb
mov
inc
and
imul
push
out
cmp
imul
in
shr
push
cltd
fbld
xchg
add
insb
fadd
roll
lcall
sarl
orl
add
out
jae
push
sub
pop
mov
jecxz
sbb
test
clc
xchg
and
xor
jge
sub
cld
jp
pusha
and
mov
out
xchg
push
fmuls
jb
add
shr
add
add
cmpsl
push
in
gs
arpl
mov
jo
jg
jo
mov
out
mov
sbb
xchg
loop
and
adc
fwait
ljmp
sbb
clc
xchg
mov
mov
movsb
mov
adc
dec
or
ljmp
icebp
jns,pn
ret
insl
movsb
sbb
adc
or
push
and
les
xor
sub
fsubp
in
jae
out
xchg
push
jl
xchg
les
sub
adc
push
mov
sahf
and
clc
add
test
js
xchg
ss
enter
sbb
clc
in
pushf
cmp
add
les
scas
shrd
xor
out
cmp
rcrl
or
mov
adc
std
jl
rclb
fwait
push
dec
adc
out
movsl
xchg
dec
pop
orb
pop
pop
dec
pushf
cli
testb
fnsave
repz
lods
leave
push
xchg
repnz
pop
pop
and
outsl
push
xor
gs
inc
push
test
out
mov
inc
inc
jle
dec
jb
adc
jge
scas
nop
push
popa
in
xor
stos
lahf
sub
cld
mov
xor
cmp
flds
xchg
or
adc
out
or
sub
push
aam
nop
lret
andb
stc
and
add
jno
shrb
das
cwtl
dec
out
mov
fdiv
lcall
das
jae
push
loope
iret
in
rcll
mov
add
and
mov
shl
stos
imul
into
sbb
addl
mov
push
ss
cmc
hlt
and
and
mov
lahf
ficomps
gs
push
lods
push
popl
aam
mov
push
xor
push
jae
rcrl
sub
dec
clc
sbb
adc
outsb
aas
sub
adc
test
xchg
add
aad
inc
mov
sbb
jo
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
xchg
cmp
jg
jo
cmp
int
pop
xchg
test
pop
cwtl
scas
lea
adc
stos
adc
inc
cli
testl
push
shrl
inc
cmp
xchg
out
xchg
or
add
add
inc
imulb
cmp
gs
movsl
adc
pop
push
add
push
jmp
fisttpll
cmp
cmp
jp
jns
inc
cmp
je
adc
push
xchg
addr16
add
inc
scas
push
jmp
mov
cmp
rcl
lds
xlat
mov
and
xor
orl
into
ds
xor
sbb
ret
or
pop
inc
mov
mov
xchg
xchg
rcrb
adc
pop
and
push
xchg
cld
push
cmp
sbb
cmc
jle
inc
rclb
imull
fldenv
cmp
xchg
sbb
jl
push
push
cld
push
inc
mov
and
dec
les
arpl
subl
dec
mov
push
lods
movsb
sti
sub
sbbl
dec
and
cmpsb
xor
pop
dec
cli
inc
push
or
jns
imul
mov
sbb
out
mov
mov
cltd
frstor
out
adc
test
and
pop
xor
fwait
or
js
adc
leave
lods
mov
inc
xor
inc
into
outsb
push
jne
push
les
mov
loope
add
stc
dec
jmp
adc
sti
icebp
addr16
sbb
pop
bound
push
push
inc
mov
insl
out
stc
ret
cmp
subb
pop
bound
mov
cmp
mov
push
test
movsb
xchg
cli
or
filds
or
jmp
jnp
xchg
les
sub
movsl
notl
in
xchg
jb
jo
out
in
add
loopne
in
rolb
cltd
shl
adc
jne
fsubrl
stos
int3
sar
lock
loop
call
data16
test
jno
shlb
fs
add
adc
inc
jo
push
das
lock
loopne
imul
sbb
sub
js
aam
dec
and
push
pop
mov
inc
scas
iret
add
out
jge
add
insb
cmp
subb
rorl
repz
mov
cmc
cltd
mov
push
adc
int
cmpsl
push
insb
or
sbb
fmul
cmp
movl
pop
push
gs
loop
cmpsl
loope
faddl
mov
cs
jmp
rcrb
mov
mov
jb
data16
enter
cmp
sub
lahf
mov
imul
pop
pop
ret
mov
cmp
push
sbb
subl
add
rcll
cwtl
sahf
push
aas
xchg
inc
jp
push
mov
lods
xchg
stos
lods
pop
inc
incl
cmp
xor
iret
fs
cwtl
and
rolb
test
fistps
pop
mov
int
pushf
rolb
bound
test
orl
lret
addr16
inc
pop
js
inc
adc
jmp
outsb
cmp
cld
js
mov
insl
pusha
and
cmc
mov
je
inc
or
jmp
or
xor
fs
add
sub
arpl
outsl
mov
jp
sub
fdivrp
jecxz
or
push
push
fnstenv
ljmp
inc
popa
mov
adc
in
ja
pop
mov
es
popf
pop
mov
xorb
out
xchg
mov
ret
pop
movsl
subl
fidivl
inc
mov
xor
and
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
roll
pop
jae
jo
leave
jle
jo
shlb
adc
sarw
pop
and
push
mov
test
xor
jns
fdivrl
scas
sub
insl
and
call
xor
jae
push
adc
dec
sbb
les
stos
or
hlt
les
out
out
mov
sbb
lock
test
lcall
fistpll
sub
mov
or
aaa
test
scas
out
xor
dec
pmuludq
cmp
es
stc
div
mov
jb
sub
arpl
mov
dec
pusha
outsb
sarl
cmpb
insl
mov
fistl
sbb
mov
add
imul
pop
imul
xchg
push
loopne
addr16
fstps
jmp
sub
out
jp
adc
pop
arpl
iret
popf
ret
jno
pop
push
adc
xor
movsl
scas
jns
xor
ret
stos
jmp
stos
sti
push
out
jge
sarl
push
aad
popa
shrl
fnstcw
xchg
fwait
dec
ja
xor
loop
nop
insl
push
insb
fisttpl
dec
sub
outsb
mov
push
push
push
mov
insb
js
mov
orl
shrb
pop
jmp
iret
pop
std
push
lock
shl
cld
repnz
jno
cmpsl
mov
les
test
pop
push
lret
jbe
dec
or
insl
push
and
xor
daa
call
jns
pop
aas
cld
push
dec
repnz
mov
xchg
mov
xorl
dec
inc
xlat
xchg
dec
mov
cmpsl
stos
and
mov
lds
imul
and
aam
pusha
fistl
xchg
mov
fsts
cmovl
and
into
jp
scas
xchg
xchg
les
add
es
or
popa
cmp
imul
js
in
aaa
cmpsw
les
data16
or
test
push
xor
jo
test
ljmp
jg
adc
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
adc
add
jo
jle
jo
shl
inc
push
sub
mov
mov
cwtl
xchg
fs
dec
rolb
enter
sub
ljmp
push
cmp
jb
jmp
scas
xor
sti
and
jp
enter
nop
xor
sarb
jle
imull
and
ljmp
ret
test
testl
adc
dec
or
bound
rorb
pushf
adc
shl
pop
movl
outsl
or
or
rcll
xlat
fisubrs
daa
xlat
daa
jbe
pop
js
inc
cmp
jp
and
jle
sub
loop
xlat
mov
leave
insb
ljmp
jge
sahf
or
std
dec
imul
dec
sub
mov
dec
sbbl
push
inc
orl
lcall
push
ret
in
loope
inc
inc
jno
jle
andl
sub
rcll
pop
jmp
addr16
jo,pn
cmpb
xchg
sarl
js
sub
inc
mov
add
dec
inc
add
xchg
mov
arpl
out
cmpsl
mov
fstpl
outsl
dec
ja
popl
imul
enter
xor
in
cli
fidivrl
xchg
test
out
mov
and
cmp
fmuls
xchg
xchg
dec
jle
aas
lods
sbb
sbb
decb
pop
mov
xor
sbb
in
cld
jmp
inc
push
mov
cmp
daa
and
insb
push
es
aam
iret
out
je
rcll
test
xchg
cmpsb
repz
addl
xor
mulb
data16
mov
fisttpl
orb
xor
mov
and
sub
fldcw
adc
pop
mov
imul
ror
push
rcl
fisttpl
mov
pop
sub
adc
adc
popf
iret
cmpb
arpl
mov
popf
fadds
xor
push
fsubrl
icebp
adc
mov
call
bound
ret
add
add
and
dec
xchg
mov
leave
jle
jo
mov
cmpsb
loop
cmp
icebp
and
cld
ja
mov
xchg
mov
movsl
adc
stos
or
ja
cmpsb
xor
cmp
cmp
call
repz
out
xor
movq
mov
popa
pushf
in
jg
inc
test
rolb
mov
idiv
lock
push
dec
fsubl
outsb
ja
sbb
mov
add
inc
adc
rcll
jg
stos
sub
sub
fwait
icebp
adc
sub
repz
lahf
add
xor
push
dec
stos
insl
jmp
stc
jae
test
adc
imul
aas
jl
cmp
mov
lcall
push
into
js
cld
mov
xor
mov
sub
lods
inc
mov
nopl
mov
jle
pop
daa
mov
jbe
dec
shl
push
dec
add
xchg
adc
add
jmp
shll
adc
pop
popa
data16
mov
stc
rorl
add
jg
sub
mov
lea
or
sub
inc
data16
lcall
sbb
xchg
into
in
push
or
rcr
inc
ljmp
test
sub
stc
fstl
xchg
js
ljmp
fisubrs
mov
push
jmp
add
inc
inc
mov
ss
push
mov
sub
lcall
mov
lods
jecxz
jno
ret
fcmovne
popa
mov
xchg
xchg
and
or
cltd
mov
mov
in
lods
cmp
cld
xchg
jg
pop
adc
dec
test
js
xchg
jno
adc
shlb
mov
pslld
jecxz
ret
addl
cmc
cmp
push
and
dec
cmp
mov
repz
pop
les
aam
loopne
mov
pop
sub
test
sub
jo
jbe
test
cmp
push
cmp
jns
push
inc
or
mov
push
in
or
inc
ficompl
pop
pop
inc
jae
cwtl
dec
or
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
imul
jo
jge
jo
xor
rol
outsb
jb
and
testl
jle
mov
cmpsb
or
data16
int3
iret
jo
jne
loope
sub
jns
add
cmc
call
and
xchg
push
lea
and
jl
cmp
ja
jl
inc
sti
xor
adc
or
das
dec
leave
pop
shr
movsb
xor
rclb
lahf
adc
push
mov
lcall
fnstenv
and
nop
dec
pop
pop
mov
cmc
stos
popf
sub
push
sbb
xchg
cld
ret
cld
pop
xchg
test
shlb
mov
jnp
xor
sub
jb
int
adc
cmpl
sarl
bswap
cmpsb
mov
mov
add
sbb
outsb
push
mov
cltd
sbb
adc
pop
xchg
dec
inc
shl
nop
push
mov
out
jmp
sbb
xor
pop
and
cmp
fidivl
leave
imul
push
fstps
addb
xor
pop
aam
mov
loopne
cmp
push
fmul
push
mov
pop
rcl
jge
adc
insb
jnp
gs
ja
and
mov
mov
sub
imul
pop
xchg
lods
or
cmp
int3
pop
fwait
jmp
mov
stos
mov
leave
loopne
cmp
rcll
pop
enter
mov
jg
mov
dec
sahf
cwtl
push
jle
negb
adcb
cmp
out
mov
fsubrl
leave
mov
loopne
loop
pop
sub
cwtl
imull
nop
out
aad
aas
scas
les
or
fwait
xchg
rorl
dec
test
xlat
xchg
mov
ja
arpl
dec
xor
mov
out
outsl
or
lds
xchg
jb
cmp
sub
fistpll
jp
push
xchg
sbb
clc
xchg
sub
stos
xchg
cmp
nop
mov
add
gs
xorb
xchg
shlb
xor
mov
loopne
or
shld
cld
scas
mov
push
cmp
imul
ljmp
mov
pop
xor
loopne
cmpsl
jl
mov
ja
cs
mov
shl
sub
ret
xor
inc
jge
test
js
dec
push
push
aas
mov
incw
dec
push
jle
test
in
movsb
jge
ss
scas
lock
gs
xlat
adc
sub
test
mov
mov
stc
inc
sahf
dec
mov
mov
pop
sub
push
pop
outsb
jo
xlat
cmc
repnz
test
xchg
xorl
xor
cmp
cltd
cmp
lods
fldl
dec
mov
leave
xor
sub
dec
stos
adc
sbb
into
js
add
adc
adc
push
pop
pop
xor
cmpb
int3
aas
bound
loope
adc
ret
pop
nop
mov
ret
mov
and
sub
xchg
test
dec
lea
pop
or
repz
xor
or
clc
xchg
mov
addl
fldenv
cld
and
mov
sahf
in
jne
dec
iret
adc
std
aad
xchg
xchg
fld
pop
jle
cmp
outsb
inc
or
nop
mov
lods
fiaddl
cmp
imul
jcxz
dec
dec
in
push
mov
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
adc
loop
mov
dec
jge
jo
enter
xor
adc
adc
mov
mov
and
adc
mov
lds
mov
movsb
jge
std
pop
sub
sub
pop
popa
adc
rorb
ljmp
stos
push
lcall
aad
inc
aam
jecxz
loope
int3
push
mov
in
inc
jecxz
cwtl
mov
inc
repz
pop
lea
or
and
pop
lods
stos
xor
fsubrl
jp
mov
add
fnstsw
test
addr16
mov
clc
fcmovbe
or
filds
jmp
push
dec
push
push
jbe
push
push
jge
xchg
jmp
rcrb
or
in
mov
jle
fcoms
xchg
nop
loope
mov
sbb
leave
xor
shlb
mov
jmp
inc
jno
sub
pop
lock
sub
inc
mov
push
lret
push
lret
mov
sub
mov
xor
test
mov
push
jb
jmp
sbb
outsb
inc
rcrb
scas
fnstcw
and
das
std
inc
scas
icebp
cld
pop
xor
xor
loope
mov
loopne
sub
data16
mov
sbb
loopne
cltd
xor
xor
in
subl
mov
jecxz
sub
dec
cli
test
mov
mov
lods
mov
in
sub
sbb
mov
daa
ss
fcoml
inc
or
mov
mov
loop
arpl
mov
xlat
in
xchg
aas
sbb
psubw
adc
push
lods
push
mov
mov
jns
push
xchg
aas
pop
aas
js
pushf
adc
mov
movsb
pop
push
mov
cmpsl
pop
sub
sbb
in
jne
push
cmpsl
push
lock
mov
sbb
aam
jno
mov
jb
dec
scas
mov
mov
xchg
aas
je
call
xchg
push
cltd
or
jne
lods
xlat
aad
mov
mov
sbb
pop
push
arpl
lock
dec
jmp
xchg
fwait
leave
call
push
out
gs
fists
inc
dec
push
pushf
test
or
and
pop
sbb
daa
jnp
xchg
jg
dec
dec
jle
pop
mov
fldl
push
sbb
in
sub
xchg
mov
subl
lea
cmpsl
stc
or
inc
arpl
cli
cwtl
sub
add
push
movsl
sbb
lret
jg
sti
mov
movsb
mov
mov
in
adc
es
push
add
push
jge
popa
xor
sub
leave
xchg
stos
insb
or
arpl
mov
mov
ljmp
inc
mov
and
mov
xchg
jg
cmp
and
fs
test
fistps
push
adc
aaa
sti
inc
sbb
xor
sbb
cmpsb
movsb
in
jns
mov
mov
add
mov
or
sbb
sub
xchg
and
out
mov
in
jl
xor
push
stos
jne
lahf
adc
ret
cmp
pop
mov
imul
jno
or
insl
imul
mov
imul
pushf
test
xor
xor
cltd
xor
and
andl
mov
in
sbb
mov
jmp
stos
data16
mov
frstor
cltd
mov
addl
insl
cmc
jns
js
jnp
movsb
mov
adc
fwait
mov
movhps
jb
ret
in
xchg
les
fdivs
mov
clc
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
push
imul
jo
dec
jge
jo
dec
int3
xchg
push
sti
stos
xor
fldenv
fsubs
cltd
je
fadds
sbb
add
into
or
nop
fldl
hlt
push
mov
out
sbb
pop
inc
lods
fadds
pushf
loopne
jnp
push
xchg
mov
dec
xchg
dec
fadds
mov
cmpsb
mov
stc
popa
cmp
out
mov
aam
and
imul
ljmp
or
inc
or
pushf
fidivrs
gs
xchg
mov
jno
sub
std
hlt
sub
loope
stos
cwtl
mov
mov
ror
loopne
xchg
inc
pshufw
cwtl
cmc
imul
sub
inc
outsl
in
je
pop
pop
or
dec
aad
addr16
xchg
jae
test
push
in
aad
stos
sahf
jnp
cmpsl
mov
or
repnz
scas
loop
sarb
loope
mull
les
push
sbb
jae
mov
jmp
cmp
enter
lds
enter
rorb
ja
pop
sbb
decl
mov
and
pop
and
push
inc
sbb
fstl
sub
mov
cld
xchg
add
cmp
orl
std
mov
cmp
aad
adc
pop
mov
mov
insb
in
aad
ja
pop
aad
push
push
jo
jns
or
mov
or
pop
pop
mov
pop
jecxz
ss
pop
dec
xchg
mov
add
pop
mov
mov
loope
adc
jp
scas
xchg
mov
sub
xor
jne
or
lock
dec
push
inc
pop
xlat
in
xor
sbb
pop
les
jb
daa
int3
pop
aas
push
pop
cmp
dec
sbb
lds
sub
sub
mov
iret
ret
clc
mov
mov
lock
mov
aam
insl
mov
cmpsl
roll
test
cmp
arpl
xchg
mov
sbb
scas
dec
lcall
bound
mov
ret
imul
or
stc
jl
pop
into
mov
xchg
int3
jecxz
fsubrs
ficoml
pop
mov
sbbl
adcb
inc
dec
aad
mov
sub
loope
shlb
jl
mov
jle
test
inc
andl
adc
out
and
and
dec
lret
xor
stc
inc
inc
add
loop
pop
icebp
jae
push
stc
cs
xor
fsubs
fidivrl
xchg
push
mov
xchg
mov
cli
xchg
sub
leave
mov
adc
movsb
mov
into
insb
adcb
adc
mov
and
cmp
or
mov
xchg
sbb
andl
mov
dec
inc
xchg
test
inc
or
pusha
and
pop
in
lea
mov
int
ret
jmp
or
mov
out
sbb
arpl
call
dec
test
xchg
push
popl
xor
mov
icebp
jle
addl
adc
hlt
sub
cmpsl
test
incb
lods
cli
mov
sbb
adc
inc
cld
lock
cmp
es
cmp
ljmp
cmp
jp
cltd
cmp
inc
stos
and
adc
pop
cmovge
mov
cmpb
cmpsb
fdivrs
das
cmc
mov
js
pop
mov
orb
xlat
subb
loope
aaa
test
mov
mov
mov
jmp
xlat
frstor
pop
testl
in
stc
xchg
jo
dec
jge
jo
or
dec
mov
shrl
add
js
loopne
fs
sub
out
pop
push
xchg
jmp
out
insb
pusha
test
lds
idivb
sub
push
popa
sub
push
rol
pop
or
xchg
gs
xor
pop
lock
cmpsb
mov
cwtl
and
mov
xchg
mov
movsb
cwtl
lret
dec
push
pop
push
jnp
add
into
cwtl
lods
push
movsb
cmp
and
imul
pop
popf
shr
fwait
jno
push
or
pushf
jne
mov
dec
sub
xchg
mov
fdivl
and
je
mov
insb
push
push
jbe
call
cmp
popa
inc
add
sbb
sub
pop
lods
leave
xor
or
test
xchg
dec
fstl
insl
xchg
xchg
into
in
test
inc
cld
xor
aaa
and
pop
repnz
cmp
dec
adc
xchg
push
subl
pop
or
and
test
mov
fwait
test
pop
aas
xchg
aaa
daa
jp
cmpsl
jns
fdivrl
adc
loopne
outsl
pop
xor
xchg
cmp
int
cli
call
hlt
shlb
xchg
jno
scas
popf
jmp
sahf
subl
push
inc
mov
int
inc
xor
dec
push
or
loope
loope
call
cmpsb
push
arpl
fdivrs
fdivrp
mov
fldcw
insl
dec
xchg
scas
jmp
std
or
scas
bound
scas
pushf
xor
ret
outsl
sbb
fldenv
mulb
lods
sbb
xor
imul
push
dec
xchg
jmp
and
divl
xchg
popf
xchg
test
pop
cmc
ficomps
loopne
inc
idivb
repnz
daa
out
inc
or
lock
stos
jl
or
cmp
in
xchg
dec
push
adc
inc
comiss
insb
and
push
inc
jp
scas
xor
cmp
mov
es
pop
outsb
pop
push
fs
addr16
pop
ja
xchg
movsl
je
scas
or
inc
add
fs
imul
sti
xor
cmp
loopew
scas
xor
lret
fimuls
jb
xchg
or
imul
jae
adcl
dec
out
das
test
mov
ds
dec
js
adc
divb
sbb
test
sbbb
pop
mov
sub
push
ds
imul
dec
lea
mov
das
push
jl
outsl
mov
sbb
mov
xor
push
push
inc
js
inc
sbbb
cmpsl
adc
or
leave
cmc
jno
mov
das
push
xchg
fs
sbb
ret
call
and
sub
xorl
mov
in
adc
sahf
jo
insb
mov
adc
stos
mov
or
jg
cmpsl
movsb
fldcw
sub
repnz
sar
call
incl
ss
movsl
cli
dec
mov
je
xor
lret
movsl
imul
jmp
in
fistps
jbe
dec
pop
mov
mov
loopne
imul
shll
mov
fisubs
in
or
sbb
lret
xchg
sub
dec
mov
jl
mov
mov
mov
daa
mov
cli
in
dec
ss
stos
test
lods
mov
adc
fcmovnu
mul
mov
inc
out
fldenv
adc
jl
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
sub
enter
jo
dec
jge
jo
inc
daa
sub
das
sub
popf
sahf
xchg
sbb
sarb
insl
or
fstps
pushw
xchg
sub
cmp
fistpl
and
pop
adc
rclb
jno
leave
jne
pop
jle
push
sbb
enter
pop
and
or
push
add
iret
roll
movsb
sbb
nop
jnp
cld
xchg
call
push
and
ret
mov
lcall
or
leave
test
sub
fnsave
mov
repz
mov
sub
js
pop
mov
pop
inc
xchg
sbb
xchg
xchg
mov
cld
fldl2t
sub
call
or
xor
ss
pusha
mull
pushf
test
int
and
popa
out
push
insl
adc
push
out
or
cmp
jge
adc
or
lea
outsb
ljmp
dec
outsl
inc
push
in
adc
lahf
divb
stos
jl
ret
push
jo
pop
sub
sahf
stos
or
add
loope
fsubrl
insb
lret
and
jp
adc
cs
push
mov
push
pop
rolb
xchg
ret
xor
jae
lret
pushf
push
lret
sbb
dec
arpl
xor
mov
incb
inc
lea
sbb
push
js
mov
pop
sbb
fisttpl
lods
push
xorl
dec
mov
and
testl
ret
cmp
sbb
pushf
ret
aaa
insb
sub
xchg
lods
sbb
sub
adc
mov
fstpl
add
push
cwtl
int
pop
out
mov
rcr
daa
lret
mov
xor
xchg
jns
out
jmp
mov
fcmovnu
mov
dec
xchg
mov
shl
shrb
sub
dec
push
jge
pop
add
inc
jg
sbb
xchg
adc
icebp
adc
fbstp
mov
arpl
cli
fstps
orps
or
xchg
repnz
in
stos
sub
cmp
loopne
add
fidivrs
pop
cmp
jbe
add
in
ret
mov
pop
lock
outsb
ljmp
loope
int
mov
dec
bnd
in
jge
sbb
inc
daa
in
cs
into
mov
inc
stc
mov
mov
push
mov
jne
lock
jb
jmp
in
dec
mov
scas
add
mov
sbb
xor
aad
dec
addr16
pusha
mov
push
stc
dec
dec
out
sbb
mov
sarb
scas
popf
sub
xor
mov
test
and
loop
mov
incl
xor
sub
pop
cmp
and
movsl
jle
or
push
push
out
sbb
inc
cmpb
cmp
fs
jp
cwtl
xor
nop
mov
adc
lahf
lods
inc
push
xor
rorl
inc
add
in
dec
popa
sub
fwait
repnz
pop
jmp
stc
jno
sahf
cld
push
and
addr16
mov
ds
mov
fs
in
cmp
test
xor
push
mov
pop
inc
test
push
mov
add
add
or
jecxz
cltd
sub
mov
sbb
lods
adc
out
xlat
movsb
fidivl
adc
xchg
xorb
xor
jbe
je
sub
sbb
out
sbb
sub
daa
mov
decl
push
inc
inc
add
inc
inc
add
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
lock
lcall
and
pop
outsl
stc
std
ret
mov
movb
js
pop
mov
in
and
mov
pusha
cmp
nop
xchg
dec
xchg
icebp
mov
jno
lods
call
fistl
divb
loop
inc
inc
or
push
jmp
fistpl
pop
out
lret
je
and
pop
adc
out
cmp
or
sub
inc
popf
jb
nop
jl
repz
or
loopne
imul
mov
movsl
sub
jno
push
stos
pop
adc
scas
movsl
scas
pop
add
push
adc
xor
xchg
jno
dec
outsl
dec
or
inc
inc
sbb
js,pt
or
jno
jnp
mov
sbb
fbstp
xchg
das
fwait
xchg
call
xchg
xchg
xchg
pop
enter
sbb
jnp
cld
flds
mov
sbb
mov
mov
jb
sti
xlat
fs
andl
rep
mov
and
push
jae
mov
imul
and
ret
lret
mov
fimull
mov
dec
loop
inc
xchg
xchg
jns
in
lds
push
pop
push
std
xchg
cmp
lret
pop
fstps
into
fstps
test
insb
adc
adcl
addr16
mov
xlat
sahf
repz
xor
jae
out
or
mov
xchg
inc
mov
loop
xchg
outsb
stc
out
mov
dec
sbb
loop
mov
add
xor
pop
adc
out
or
fdivs
inc
adc
inc
lock
or
int3
inc
lahf
cmp
xlat
push
popa
or
xor
sarl
cmpsb
outsb
and
or
inc
into
push
popf
mov
das
add
stc
popf
pop
adc
add
mov
movsb
daa
add
sub
inc
push
test
out
scas
testl
add
popa
leave
dec
and
mov
dec
neg
inc
enter
mov
icebp
and
shr
mov
adc
call
cmp
stos
mov
xchg
pop
or
and
fcmovu
fidivs
xor
es
lea
test
mov
inc
push
in
jp
cld
adc
inc
add
add
cmp
into
inc
jle
push
rorb
cmp
ret
mov
cmp
xor
jns
jnp
sbb
or
arpl
aaa
sub
ss
cmpsb
lds
cld
icebp
cltd
out
adc
mov
stos
cwtl
aad
lods
push
jbe
or
cwtl
clc
in
not
ja
sub
arpl
mov
xor
orl
es
inc
fwait
out
jl
fcompl
jns
icebp
inc
cli
pop
and
call
push
push
inc
mov
push
push
sbb
push
repz
lret
mov
gs
push
rcll
dec
mov
sarl
rorl
dec
pop
daa
mov
sti
cmp
pop
dec
push
lret
adc
insb
in
aas
aaa
stos
push
mov
mov
test
push
xor
nop
xor
test
mov
in
repnz
lods
fwait
lds
daa
in
ds
push
fsub
shll
mov
xchg
add
push
jo
add
and
or
inc
je
les
add
mov
sti
jecxz
pop
xchg
imul
xchg
xlat
cmpsb
dec
loopne
out
and
loope
xchg
fidivs
mov
in
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
insl
add
jo
dec
jge
jo
cmp
xchg
or
cmp
imul
pop
test
movsl
jbe
and
adc
in
and
and
call
fs
jns
int
jae
xchg
xchg
rorb
and
jl
hlt
xchg
out
icebp
outsb
mull
lock
xchg
dec
les
loop
inc
in
icebp
jno
pushf
dec
fs
dec
jp
repz
arpl
out
or
dec
aad
add
std
cmp
push
aad
in
dec
aas
inc
sub
loope
call
mov
mov
outsl
and
test
cmp
loop
iret
xchg
ficomps
in
outsb
lret
dec
and
adc
test
jne
lret
test
rcll
ds
loopne
das
jmp
or
addr16
addb
mov
add
mov
dec
xor
not
xor
xor
mul
mov
movsl
cld
xor
mov
cltd
adc
push
andb
dec
add
push
ljmp
nop
in
push
mov
lods
xchg
jnp
dec
jo
mov
sub
xchg
sub
arpl
mov
adc
or
sbb
jno
or
xchg
xor
cmpsl
add
or
test
lret
shlb
ret
in
pop
dec
test
repz
out
stos
out
mov
jmp
mov
arpl
pop
adc
push
dec
pop
push
xchg
ss
sbb
sbb
popf
loop
pushf
xchg
mov
daa
push
lret
test
outsl
pusha
cmp
mov
js
mov
mov
ret
jmp
xchg
daa
push
cmpl
inc
xchg
xor
lret
pop
xchg
and
lea
inc
mov
dec
adc
stos
jno
push
mov
imulb
sub
xor
lret
mull
jg
jb
movsb
loope
movsb
in
xchg
dec
xchg
insl
inc
ja
inc
movsb
nop
cmp
and
ljmp
lcall
push
repnz
mov
push
add
dec
push
gs
mov
jne
xchg
inc
and
add
cs
or
jne
inc
ret
sub
sub
pop
pushf
lds
xchg
dec
lea
out
into
les
popa
lods
add
ss
fsubs
mov
pop
add
xor
add
into
ret
inc
or
dec
pop
mov
inc
xlat
insb
leave
lea
adc
das
cmp
lods
rol
inc
dec
adc
mov
jnp
popa
sbb
arpl
mov
dec
enter
jns
icebp
into
cmp
or
inc
pop
aam
xor
jle
std
xor
std
jae
dec
cwtl
xlat
das
and
pop
popf
jecxz
sbb
sbb
stos
jne
dec
push
xlat
mov
mov
adc
push
popa
dec
dec
rclb
test
xor
push
push
sub
in
add
jp
cs
repnz
repz
dec
lret
dec
test
adc
into
fwait
and
mov
push
and
aas
out
jno
lods
dec
sbb
jp
dec
sub
imul
lds
call
sbb
push
popl
sub
les
in
dec
jbe
sub
jae
xor
xchg
dec
cmc
pop
ret
fmuls
lahf
add
scas
pop
mov
or
mov
push
stos
mov
push
int3
in
sbb
in
in
or
lds
ljmp
push
mov
pop
sbb
jno
add
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
fnsave
pop
mov
jo
mov
adc
dec
aas
loop
mov
sub
xchg
clc
dec
mov
aad
lea
out
xchg
inc
or
xchg
mov
xor
out
adc
test
inc
pop
mov
mov
or
xor
cmpsb
push
cmp
rol
xchg
punpcklbw
sahf
test
adc
enter
push
popf
clc
fxch
cmp
jne
jmp
shlb
stc
leave
push
add
inc
sbb
add
mov
and
in
outsl
aas
mov
sbb
mov
stos
mov
dec
lock
ret
sub
mov
lret
inc
mov
pop
ror
pushl
dec
inc
jl
xor
test
sti
mov
insl
sub
mov
and
cmp
cmpsb
lahf
add
cmp
test
jno
mov
adc
ret
or
pop
pop
cmp
sbb
inc
sbb
xor
shll
sbb
out
int
outsl
mov
or
push
out
inc
rcrl
pop
or
or
cmpsl
scas
addr16
lods
aam
out
sahf
pop
jg
pop
xchg
xchg
pop
icebp
jne
lret
idivl
inc
and
inc
xchg
xor
inc
and
sbb
out
sahf
mov
or
jecxz
in
jge
mov
lea
sbb
enter
jbe
xchg
loopne
push
mov
push
cwtl
sarl
push
leave
stos
inc
jmp
sbb
lret
testw
sbb
rorb
sub
push
aaa
imul
add
push
fmull
mov
push
mov
xor
sbb
adcl
ret
mov
stos
cmc
sub
out
xchg
xchg
dec
dec
enter
aas
inc
lods
push
cmpsb
cmpsl
out
inc
cmpsl
movsb
mov
cmc
out
stos
cli
adc
loope
aas
movsb
enter
in
dec
and
dec
repnz
jecxz
maskmovq
divl
sbb
lods
fisubl
mov
inc
xchg
cmp
mov
xorb
addr16
hlt
dec
out
ja
cmpsl
idivl
pop
fisubs
pop
jb
stc
jg
push
jo
sahf
nop
mov
cmp
insl
jle
and
adc
jmp
inc
mov
jns
aas
dec
ss
testl
fnstenv
jecxz
inc
mov
aas
xchg
jmp
fnsave
sub
loop
fdivp
push
mov
xlat
and
pop
inc
cs
fisubrs
inc
jge
pushf
push
lahf
movsb
jmp
shr
pop
dec
je
imul
repz
cmpps
aas
mov
es
fnsave
and
mov
lds
popf
loopne
and
or
pop
push
outsl
sub
mov
cmc
xchg
mov
not
inc
andl
add
sub
or
out
shll
pop
es
adc
push
mov
sub
scas
rorl
aas
inc
pop
repz
in
push
or
ficoml
in
and
pop
jmp
inc
int3
lahf
ret
push
mov
xor
jle
push
xor
je
or
pop
xchg
hlt
sub
jne
xchg
or
cmp
dec
adc
mov
insb
inc
aas
mov
lea
mov
inc
fistps
or
jge
aas
int
cmpsl
cmp
imul
pop
or
pop
insb
and
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
jne
mov
jo
dec
jge
jo
sub
jae
into
int
and
push
mulb
hlt
fistps
movsb
es
inc
int
cld
gs
push
out
popf
movsb
lea
shr
outsb
stos
in
neg
outsl
adc
mov
rcll
and
stos
iret
rcrl
pusha
xor
xor
insb
dec
stos
mov
adc
dec
sbb
push
lret
xor
sbb
std
pop
push
rcrl
out
xor
mov
mov
or
inc
sub
sub
leave
movsb
roll
aas
stc
dec
pusha
das
jbe
xchg
jg
testl
mov
and
shll
and
dec
push
mov
outsl
das
sahf
cmp
cmc
in
sub
pusha
xchg
les
fbstp
addr16
movsl
or
push
fwait
jno
std
and
lea
xchg
mov
imull
inc
int
xor
jo
cld
xchg
shrb
mov
cltd
and
mov
cltd
pop
aas
and
or
bound
outsb
arpl
jecxz
enter
inc
push
xacquire
shll
loopne
in
test
out
mov
call
ret
nop
or
leave
xor
stos
cmp
test
and
adc
push
mov
les
movsl
sbb
cmp
sti
xchg
push
cmp
mov
dec
pop
pop
xchg
pushf
pop
jmp
stc
ret
xlat
sub
lds
push
cmp
cwtl
in
stc
inc
orb
imul
in
aas
fisttpll
cli
jmp
push
mov
jae
mov
lea
mov
imul
repz
sarl
ja
sbb
iret
stos
xchg
shrl
jae
jne
jmp
scas
int3
sbb
cmpsb
pusha
cli
pusha
fdivr
test
aas
lds
dec
hlt
push
sbb
and
loope
clc
inc
insl
bound
push
out
arpl
sbb
fcoml
mov
shlb
es
bound
mov
std
push
lret
adc
xchg
outsl
jge
xor
jl
jno
cmp
imul
dec
in
inc
mov
mov
pop
lahf
gs
stos
bound
out
inc
repnz
add
push
sub
in
dec
es
mov
sub
jle
cmp
cmp
loope
bnd
stos
test
jecxz
sbb
mov
mov
or
into
xor
mul
scas
mov
lahf
lds
std
icebp
loope
mov
out
jo,pt
jo
aam
sbb
xchg
jno
mov
int
mov
add
mov
gs
data16
test
out
inc
test
sbb
add
adc
xor
xchg
sub
lret
jne
cmp
xchg
ljmp
xor
leave
sbb
cmpl
sbb
shll
subl
inc
pop
dec
and
imul
push
insl
dec
lods
mov
aad
aas
bound
xchg
xor
jnp
xchg
adc
jge
jns
sub
loope
les
mov
and
cmp
mov
out
lret
out
xor
ds
xchg
jge
jmp
nop
sbb
mov
test
addb
stos
fidivrs
in
sub
cmpl
fidivl
cmp
dec
or
or
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
stos
cmpsb
dec
in
stos
jo
dec
jge
jo
cmp
push
pop
mov
and
mov
loopne
inc
add
sarl
ret
fcompl
aad
in
ret
mov
imul
lea
cld
xor
cld
cmp
fildll
mov
into
mov
adc
push
movsb
pop
aaa
fistpl
loop
xchg
pop
aas
mov
xor
scas
scas
mov
cmp
mov
or
and
lock
and
xchg
cwtl
xor
cmpsl
lods
mov
shrb
xlat
push
add
or
and
loopne
or
dec
add
pop
and
or
repz
pop
lret
cltd
jl
cmpsl
mov
sub
jge
lock
add
fistl
push
pop
adc
add
fwait
sbbl
and
or
xchg
rcrl
les
in
int3
int
daa
pop
add
jl
mov
shrl
outsl
push
ja
rorl
inc
pop
dec
insl
inc
ss
adc
jge
movsb
pop
sub
hlt
mov
mov
scas
xor
or
inc
push
iret
jg
add
xor
mov
out
roll
ljmp
hlt
push
mov
fiaddl
mov
lret
dec
pop
leave
pushf
dec
outsb
jbe
push
subl
xor
addr16
mov
push
adc
mov
xor
in
xor
idivl
mov
inc
pop
cmpsb
enter
cmpsl
pop
call
jg
cld
or
inc
mov
or
lods
repnz
and
shrl
test
dec
out
cltd
mov
xchg
cmp
push
mov
sbb
sti
pop
push
ret
aas
xchg
sti
cmp
test
test
insb
push
cmpsb
out
pop
or
push
fisttpl
pop
sbb
bnd
inc
shrb
stc
mov
repnz
mov
loop
mov
xchg
dec
rolb
mov
pusha
xchg
shll
popf
push
sbb
mov
mov
sahf
pop
xchg
aaa
andl
push
cmp
outsl
hlt
lcall
mov
pusha
mov
push
cmp
sbb
icebp
sub
add
arpl
mov
inc
sti
scas
inc
ja
rclb
xchg
lock
in
mov
dec
xor
ja
lock
inc
dec
pop
sub
xchg
lea
inc
scas
fs
iret
inc
jmp
pop
cmpsl
adc
xchg
out
pop
or
into
xchg
mov
mov
add
cmpsb
or
cmp
dec
jae
dec
fucomip
repnz
xor
leave
cmpsb
in
subl
insl
or
pop
dec
ljmp
mov
fwait
xor
rcll
sub
sub
clc
test
lahf
cli
out
xchg
sahf
jg
jns
andl
sti
ret
clc
xchg
and
scas
aaa
add
mov
push
and
and
and
lds
xchg
mov
and
cld
xchg
and
insb
test
js
test
jno
fldcw
loope
mov
push
xchg
sbb
call
les
jle
push
enter
push
adc
xor
push
out
in
cld
xchg
cmp
inc
jne
or
or
out
adc
inc
adc
adc
cmpsl
lods
jmp
divl
xchg
pusha
lahf
int3
xor
sbbl
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
iret
sbb
jo
dec
jge
jo
loopne
hlt
cmp
in
jl
test
sahf
cltd
push
stos
sub
mov
sti
sahf
stos
arpl
out
aas
jge
xchg
mov
lods
jne
lods
call
jnp
cmpsl
iret
test
pusha
inc
stos
mov
mov
lods
or
fcoml
rclb
addr16
mov
mov
inc
lods
add
daa
push
jmp
jecxz
add
or
and
stc
push
pushf
pushf
jns
loope
int
xchg
loopne
fs
lods
xor
adc
popf
sub
repz
xchg
or
and
xchg
mov
jno
sbb
adcl
mov
cli
fisttpl
arpl
lahf
flds
mov
in
pop
movb
repnz
push
mov
xchg
in
or
daa
ficoms
ss
shr
cwtl
sub
shr
insl
les
mov
adc
lods
outsb
inc
mov
mov
loopne
xchg
add
xor
cmp
popa
and
test
out
push
frstor
push
cli
sub
xor
pop
sub
pop
gs
or
sbb
add
sti
mov
push
mov
push
adc
cmp
xor
push
rcrl
inc
or
movswl
adc
test
add
cmp
sahf
sarl
xchg
call
adc
xchg
out
push
jb
sub
lea
sbb
mov
dec
jae
jmp
mov
mov
pop
jle
jo
insb
rolb
shll
sub
stos
mov
lret
movsb
pusha
adc
shlb
xchg
xchg
cmp
stos
int
xor
jno
insl
inc
lcall
add
add
pop
push
lods
fdivrl
cld
inc
mov
cmp
dec
push
sbb
andb
pop
or
fstpt
xor
das
stos
movsb
bswap
fstl
sbb
ds
sub
mov
push
lea
fcoms
mov
pop
stc
mov
pop
mov
mov
in
dec
adcl
sbb
and
cmp
int3
lret
pop
push
pusha
push
jnp
cli
mov
ja
shrl
xor
jo
pop
icebp
xchg
daa
xor
xor
rorl
rcrl
lock
test
xchg
pop
mov
xor
cwtl
mov
and
jbe
addr16
in
aad
xchg
insb
mov
jnp
out
fmuls
cmp
adc
rolb
loope
push
or
int
ja
mov
jno
cmc
icebp
cld
fidivrs
std
inc
push
mov
sbb
or
scas
mov
loopne
lods
cmpl
and
and
cmp
movsb
addl
das
cmpsl
dec
and
jecxz
cmp
jb
fildll
sti
push
js
inc
xlat
outsl
dec
in
in
adc
jl
push
pop
addr16
fwait
inc
orl
hlt
sbb
adc
xchg
jbe
pop
inc
mov
mov
xor
cmc
stos
mov
sbb
jp
ljmp
scas
xchg
adc
xchg
in
stos
xor
sub
sbb
negl
cmp
inc
in
ret
sbb
mov
xor
out
ds
mov
out
mov
jno
pop
xchg
xor
scas
push
imul
leave
sarl
dec
lock
popf
push
mov
cli
push
jmp
add
or
push
mov
mov
dec
add
enter
add
add
or
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
sbb
jo
dec
jge
jo
addr16
in
mov
sti
adc
sbb
sbb
pop
in
add
inc
mov
decb
or
inc
cmpb
aas
xor
cltd
pop
mov
xchg
test
negl
movsl
xchg
movsb
sbb
imull
and
mov
cmp
shrb
mov
push
jp
je
stc
pop
enter
mov
jnp
or
ja
enter
sbb
mov
test
sbb
insl
std
inc
gs
pop
or
insl
dec
push
and
jno
pop
int3
clc
test
or
add
mov
je
popa
loope
stos
mov
pop
sbb
subb
xchg
xchg
pop
mov
mov
pop
xchg
fisubs
nop
jb
es
cld
jno
scas
into
sub
ror
andl
lret
push
mov
dec
test
lcall
inc
xchg
mull
mov
pop
das
mov
adcl
cli
jmp
xchg
or
xchg
aaa
and
mov
sbbb
cmp
and
push
mov
out
mov
dec
test
imul
std
shlb
mov
call
jmp
scas
push
sub
lret
and
push
lds
lods
xchg
packuswb
addb
sarb
nop
dec
sahf
and
push
pop
jns
negl
xor
inc
adc
sbb
ljmp
clc
sbb
xchg
dec
btc
sbb
loope
sbb
icebp
add
rcrl
inc
xchg
shr
xchg
out
into
int
jnp
cmp
mov
hlt
xor
outsl
mov
rorb
fwait
pop
mov
pop
mov
lret
jl
jg
rcrb
fwait
repz
push
pop
js
xchg
mov
inc
stos
mov
xor
out
pop
in
dec
test
jae
iret
scas
mov
push
pop
lahf
pop
jnp
pop
ret
aaa
out
ljmp
loope
dec
or
outsl
mov
pop
lahf
int3
adc
mov
lret
mov
ljmp
sti
scas
sbb
arpl
xchg
imul
cmc
arpl
cs
mov
jle
repnz
mov
lcall
xor
jle
inc
xchg
dec
jae
push
push
test
mov
xchg
xor
daa
cmp
push
push
lea
push
jg
pop
push
fstps
insb
dec
gs
push
loop
fwait
daa
fcoms
stc
mov
stos
sbb
movsl
outsb
fidivs
ljmp
out
insl
dec
push
mov
and
fs
popf
adc
and
cli
fcompl
sarb
insl
sbb
cmp
movsl
fldt
sarl
adc
xchg
mov
push
inc
shl
pop
popf
inc
cmpb
xchg
xor
xor
insl
notl
mov
fwait
dec
notb
inc
mov
into
lahf
insl
sbb
scas
dec
fisubrs
rcr
das
cli
jp
sbb
fisubs
and
or
iret
nop
jle
push
adc
xchg
imul
insb
shl
mov
addr16
xor
push
cmpsl
fisubl
les
and
add
cmp
bound
and
dec
xor
std
ss
pop
daa
or
inc
add
mov
in
mov
aam
mov
sbb
fildll
inc
push
idivb
push
daa
add
sbb
xchg
and
xlat
ficoml
stos
push
pop
ss
cld
pushf
push
in
lock
out
mov
mov
sub
addr16
jb
rorb
mov
add
add
add
out
pop
outsl
jne
data16
test
pushf
out
repz
insb
or
jo
mov
popa
mov
push
sub
add
sub
dec
push
pop
fucomip
stos
mov
sbb
lahf
sub
into
ss
lds
pop
dec
add
xchg
pop
mov
xlat
shrl
xlat
repnz
loope
jbe
fcoml
push
jg
mov
or
inc
outsb
or
fsubl
stos
push
cld
adc
scas
mov
dec
imul
sub
xlat
shll
add
inc
cwtl
aaa
xor
and
pop
rorl
mov
mov
xor
push
push
lcall
mov
mov
dec
jmp
pusha
loopne
pop
dec
jnp
push
xor
sti
and
cmp
or
in
test
cmpsl
mov
pop
and
mov
js
in
xor
and
insb
push
movsb
sahf
xor
dec
jecxz
pusha
push
icebp
mov
xchg
pop
sub
adc
cwtl
mulb
sub
pop
subl
or
lods
push
mov
dec
push
mov
stos
lret
jmp
pop
sarl
icebp
push
cmpsl
sub
push
pop
movsb
adc
loope
arpl
addr16
xlat
or
mov
xor
int
fiaddl
push
or
and
das
mov
cmp
shr
call
xor
fstpt
sbb
leave
lea
cmpsb
popa
int
into
ja
xor
mov
xchg
out
inc
sub
cmp
inc
mov
pusha
pushl
push
aam
mov
xchg
daa
sbb
popf
mov
enter
sbb
jnp
cltd
jnp
mov
enter
fcomi
cmp
sbb
jb
leave
dec
push
mov
mov
ret
sub
std
push
out
aas
sub
ds
pusha
pop
sub
das
xor
fs
js
leave
lods
fstpt
arpl
cwtl
adc
clc
xchg
and
cmpsl
inc
adcb
fisubrs
push
cmp
cmpsl
stos
dec
icebp
xor
loope
cmp
rorb
inc
jl
loopne
arpl
pop
push
btl
icebp
out
cmp
mov
mov
mov
jmp
lahf
repz
sbb
clc
mov
or
lret
sub
xor
jne
pop
popa
add
in
sbb
out
adc
sub
and
popf
or
mov
push
pop
cmp
jle
in
fnstcw
jmp
test
pshufw
push
fistpll
push
out
jecxz
ljmp
cs
sbb
sub
aam
mov
xchg
and
xchg
lea
xchg
movsl
fwait
in
xor
mov
lret
dec
sahf
in
lret
cmpsl
mov
lods
sub
adc
lret
stos
push
or
sbb
cwtl
cmc
sti
and
jne
push
pop
cmp
cmp
inc
mov
cmp
test
imul
jns
mov
lds
push
vaddss
mov
xor
cmp
sub
icebp
mov
js
sub
sub
mov
push
ss
sahf
dec
bound
sbb
sbb
push
lds
ja
cmp
lock
dec
or
add
xor
data16
adc
movsb
and
bound
icebp
xchg
nop
jbe
inc
in
add
jl
dec
test
mov
and
test
inc
into
scas
dec
xor
mov
setge
xlat
jl
xlat
jns
loope
arpl
mov
test
push
cmp
dec
sbb
sbb
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
in
mov
mov
jo
pop
lds
test
ss
inc
popa
daa
push
je
xchg
mov
ss
test
jae
cmp
and
xor
ljmp
stos
sbb
nop
dec
std
jb
in
hlt
xlat
and
and
sub
xchg
jmp
pop
clc
leave
mov
inc
out
aas
ds
mov
xchg
xchg
mov
in
clc
cmc
aaa
aaa
mov
mov
nop
fwait
std
adc
jnp
pop
or
cs
outsb
std
mov
lds
shl
dec
xchg
dec
adc
sahf
mov
add
jl
xchg
sbb
mov
lea
mov
mov
jnp
cmp
movsl
xchg
sub
hlt
cmpsl
cli
push
xor
imul
mov
jge
mov
fdivs
cwtl
pop
sub
xchg
mov
icebp
dec
hlt
add
je
mov
scas
push
movsl
inc
jne
mulb
enter
test
bound
ficoms
insl
dec
cltd
mov
sub
sub
stos
sub
jmp
daa
sub
push
out
jbe
lahf
adc
pop
daa
iret
mov
pop
adc
das
adc
ficoml
jae
sub
inc
xlat
add
scas
adc
hlt
add
pop
and
lea
cmp
ficompl
popa
jae
lea
adc
faddp
sbb
inc
jge
pop
cmp
mov
xchg
jnp
mov
xor
or
adc
ss
into
mov
mov
out
sbb
cmp
adc
cmpsl
insb
adc
scas
dec
into
or
pop
or
fdivr
mov
fwait
or
dec
in
mov
ret
jne
loopne
dec
add
jmp
xchg
and
sub
adc
lret
dec
inc
jno
lahf
cmpsb
dec
jecxz
cmp
outsb
pop
mov
adc
push
jecxz
aam
cmp
dec
pop
add
push
cmp
or
das
daa
or
outsb
jno
sub
out
outsl
jnp
inc
xchg
cmpsl
lcall
mov
psubsb
xchg
arpl
xchg
sub
lret
int3
iret
jb
aam
cmp
lahf
shll
mov
push
addr16
ja
jbe
or
fchs
or
das
jmp
xor
test
ret
mov
pop
test
xor
gs
incb
aaa
mov
clc
lret
and
xchg
jp
mov
cwtl
gs
push
adc
sub
int
aad
dec
mov
adcb
pusha
sub
stos
rclb
shl
inc
pop
push
pop
lahf
sbb
sub
xchg
sarl
daa
add
sbb
cwtl
pop
jp
imul
int
inc
popa
test
aas
push
std
ror
movsl
mov
ret
addr16
sbb
mov
mov
sbb
push
sbbb
push
fldt
bnd
and
inc
xchg
xlat
sub
or
loope
mov
xor
sub
aam
cli
inc
call
outsb
pop
add
test
enter
xor
mov
jge
fwait
jl
jl
cs
sbb
repnz
popa
adc
sbb
xchg
cld
and
mov
ret
nop
sbb
stc
or
in
fsubr
shlb
adc
out
cwtl
daa
in
or
fldl2e
push
fldenv
insb
pop
lahf
fs
pop
pop
dec
jo
sti
enter
dec
add
icebp
imul
daa
sti
jmp
dec
mov
pop
mov
out
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
vpsadbw
cmp
lock
out
rcr
mov
inc
xchg
pop
add
sti
add
xor
leave
out
imul
lret
mov
push
xor
das
mov
das
stos
mov
push
out
cli
or
inc
clc
popf
sbb
cmpsl
cmpsb
mov
out
add
and
cli
inc
adc
icebp
mov
out
in
and
fcoms
xchg
push
aam
pop
mov
mov
sysexit
div
clc
in
cli
mov
dec
dec
movsl
add
push
int3
repz
scas
push
sbb
push
clc
loopne
cmp
mov
sub
enter
cmc
repz
inc
sbb
hlt
insb
cmp
mov
sbbb
push
movsb
sub
lahf
mov
repnz
mov
in
ss
mov
inc
push
xchg
rclb
lock
repnz
mov
dec
das
lds
dec
shrl
xor
lret
add
mov
shlb
pop
out
scas
mov
js
addr16
pop
dec
jne
jnp
ljmp
les
mov
pop
sbb
mov
je
xchg
add
out
sbb
lds
enter
lock
loop
lret
add
ja
push
pop
push
pop
push
cmpsb
cmpsb
dec
cmpsb
idiv
xchg
xor
aas
jp
ss
xchg
pop
or
shlb
jg
pop
into
lock
jb
xor
inc
pop
dec
scas
cmp
lea
in
insl
mov
insb
sbb
inc
ss
fwait
inc
mov
addb
decl
push
aas
ss
btr
lret
xor
push
in
jg
loope
loopne
or
xor
mov
jb
cmp
pop
sarb
int
cld
xor
repz
sub
lods
sbb
mov
mov
mov
xchg
inc
and
lret
into
xchg
mov
movsb
pop
ja
push
push
jne
dec
int
mov
mov
out
or
push
adc
inc
fldl
and
xor
mov
and
jo
int
jb
mov
adc
in
pop
pop
repnz
ljmp
out
xchg
sbb
add
das
rol
out
rclb
lods
add
fidivl
js
or
movsl
push
add
xchg
xor
lret
xlat
outsb
xor
mov
sub
mov
dec
pop
clc
mov
adc
push
mov
jne
sbb
vmulsd
test
sub
outsl
stos
xchg
nop
fbstp
add
imul
cmc
jno
cmpl
nop
mov
lret
mov
sub
adc
cmp
ficomps
jae
and
sbb
adc
daa
pop
push
pop
jb
mov
fisubs
mov
inc
jno
xchg
test
lock
cmp
loop
cltd
scas
rorb
xchg
push
jo
add
lods
cmp
add
scas
adc
cltd
dec
clc
repnz
push
inc
push
das
stc
repnz
lcall
cmpsb
cmp
stos
popa
xchg
push
push
xchg
js
mov
and
pop
scas
xor
fidivrs
push
pop
ss
pop
dec
lea
cmpsl
mov
push
and
adc
add
shll
and
jnp
add
cltd
push
jb
lret
std
fs
mov
dec
adc
out
out
sti
fldl
rorl
add
call
add
jae
roll
test
inc
xchg
inc
jo
dec
jge
jo
mov
stos
cli
fisubrs
into
add
shlb
add
out
lods
fmuls
scas
lret
sub
jne
test
add
loope
jo
in
mov
xchg
sbb
adc
ret
int
sbb
xor
adc
es
fwait
outsl
add
test
int3
inc
in
sbb
jmp
xchg
xchg
fldcw
mov
mov
gs
push
dec
cltd
xchg
lock
jnp
std
lcall
inc
mov
xlat
xchg
iret
ljmp
pop
shrl
jecxz
xchg
mov
popa
push
add
cmp
and
scas
inc
mov
mov
popf
out
inc
add
scas
ret
add
xchg
mov
xlat
pop
fstl
or
pop
into
fisubl
pop
mov
mov
loop
and
sub
fdiv
out
shlb
xchg
incb
and
inc
mov
lcall
mov
push
popf
notb
cld
cmpsl
jne
sbb
sbb
mov
pop
into
pop
push
ror
xor
addl
sub
repnz
mov
repnz
add
orl
rcrl
pop
push
int3
mov
inc
aas
pop
out
out
fs
push
icebp
sbb
dec
xor
or
mov
addr16
stos
add
jl
xchg
push
sbb
mov
jb
in
insb
or
adc
cli
es
xor
mov
out
pop
adcb
ret
aad
pop
mov
int
es
mov
fwait
es
push
aad
lock
inc
inc
inc
out
outsb
test
sbbb
push
cmp
push
je
push
mov
lret
lcall
movsl
hlt
cmp
pop
mov
cmpsb
cmp
mov
test
xchg
mov
dec
cli
mov
push
pushf
aam
jmp
pusha
je
es
into
cld
mov
bound
movsl
jb
popa
xchg
xchg
scas
mov
popa
mov
mov
push
outsb
pushf
or
aam
test
lds
xchg
sub
test
ljmp
cli
push
inc
pusha
mov
js
mov
adc
das
jge
inc
push
jg
push
cli
rorb
ss
xchg
lea
mov
stos
clc
pop
into
push
mov
shlb
xchg
inc
jno
fidivs
lods
xchg
and
fidivrs
lret
lahf
jmp
jae
lea
icebp
mov
pop
pop
jg
xchg
shrb
sub
cmp
imul
inc
outsl
xor
and
call
inc
fwait
pop
mov
pushf
pop
mov
lods
repnz
orl
cltd
rcll
pop
push
pop
cs
aaa
das
jecxz
push
jns
shll
in
cmp
outsb
rcrb
aas
fisttpll
pop
out
insb
ss
pop
mov
lock
sub
sti
cwtl
and
xor
mov
ljmp
lea
mov
js,pn
jg
xchg
push
loope
inc
hlt
enter
test
addb
lods
jge
out
lock
sub
arpl
mov
xchg
mov
stos
adcl
mov
lret
sub
dec
iret
call
xchg
subb
inc
and
gs
adc
cmc
push
or
inc
call
add
sub
push
adc
roll
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
out
inc
jo
dec
jge
jo
imul
xchg
mov
iret
mov
lret
lods
nop
cli
push
sbb
pop
and
inc
adcl
and
sbb
mov
and
xor
mov
jl
insl
push
xchg
loopne
nop
cld
cmpsl
popf
in
ss
popa
std
cli
pushf
aaa
daa
gs
jnp
pop
or
push
xchg
cmp
fwait
pushf
sub
add
cmpsb
dec
mov
scas
or
jae
call
scas
addr16
mov
fadds
loope
rcr
sbb
mov
sbb
out
sbb
jo
lret
sbb
add
fcompp
or
add
lods
test
daa
pop
jge
pop
in
cmp
aad
notb
fmuls
adc
mov
int
adc
adc
hlt
dec
adc
rcll
mov
cmp
and
gs
pop
testb
fldlg2
lods
cld
and
and
insb
push
icebp
fcompl
out
mov
lea
push
xor
stos
xor
xor
push
dec
les
or
xor
repz
je
das
aam
inc
les
sbb
add
in
les
push
mov
std
sub
int
incl
jg
jl
pop
mov
xchg
mov
lea
xchg
dec
mov
cltd
pop
add
pop
xor
add
or
div
div
xlat
sub
sub
adc
shrl
push
test
sub
les
in
jns
hlt
lret
sar
and
dec
push
jae
dec
adc
test
std
pop
sub
pop
add
mov
mov
dec
in
cmc
xlat
bound
jbe
jge
lods
movb
test
rcrl
aam
sbb
sahf
out
jle
insl
lods
xor
and
dec
mov
sbb
pop
adc
bound
negb
loope
and
sub
push
test
jmp
cld
or
xor
jb
adc
cld
cld
out
out
dec
in
rolb
inc
mov
and
lcall
ljmp
xchg
arpl
sbb
stos
mov
or
pop
shlb
or
mov
gs
and
xor
sbb
pop
push
imul
pminub
or
fwait
ss
aas
pop
popf
test
lret
roll
aaa
dec
add
dec
xchg
bswap
pop
cli
sbb
pop
out
mov
mov
xchg
out
pop
aas
sarb
iret
test
daa
cmpsl
or
adc
cltd
push
ret
repnz
imul
xchg
cld
dec
ja
jbe
addr16
inc
xor
xchg
scas
pusha
fnstenv
inc
ret
loop
insw
js
and
dec
out
cmpsl
push
lods
xchg
mov
or
push
out
mov
or
dec
add
xchg
xor
enter
lods
jo
orl
loop
outsb
testl
mov
mov
ret
in
jmp
jp
push
fcoml
in
loopne
sbb
add
shr
jge
xchg
dec
imulb
bound
les
jbe
inc
inc
fwait
xchg
xor
test
mov
jo
iret
mov
repz
lea
push
dec
enter
cwtl
bound
pop
daa
mov
adc
push
dec
mov
imul
xlat
cmpsl
jge
inc
sbb
orb
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
popf
dec
jo
dec
jge
jo
pop
sbb
gs
mov
mov
mov
call
mov
xor
push
jno
das
push
mov
lods
and
es
dec
hlt
inc
roll
add
in
arpl
jnp
scas
mov
in
xchg
add
dec
ret
mov
fdivl
popf
pop
mov
cs
icebp
or
xchg
rol
xor
out
stos
mov
dec
leave
add
pop
mov
fs
mov
sbb
adc
sahf
and
mov
xchg
pop
jg
loope
stos
jmp
pop
mov
shr
sbb
ja
rorb
sbb
out
mov
dec
add
and
xchg
out
cmp
aaa
gs
sub
mov
mov
lcall
mov
push
jecxz
sahf
mov
inc
xchg
adc
mov
xor
dec
xor
fwait
sbb
inc
push
mov
in
adc
or
dec
in
ficoms
fisttps
repz
pop
in
mov
xchg
mov
or
jno
hlt
lea
sub
xchg
adc
stc
pop
ljmp
sti
loope
fmull
int3
loope
inc
xlat
cmp
loope
cmp
inc
nop
insb
leave
jb
lret
es
lock
mov
nop
clc
add
or
adc
sbb
icebp
xchg
int
pop
xchg
out
dec
adcl
pop
xor
hlt
fwait
push
data16
xor
negl
mov
push
sub
adc
sbb
incl
loop
jb
out
lahf
ds
xchg
ret
mov
test
clc
mov
jge,pt
mov
lahf
lods
add
push
sub
jns,pn
and
adc
push
nop
in
lea
cmpsb
out
mov
cmpsb
dec
sbbb
adc
jo
sub
dec
test
pop
mov
mov
popa
or
mov
inc
inc
sbb
dec
imulb
jae
push
jnp
or
mov
repnz
sub
fs
adc
mov
adc
es
ret
jmp
cld
and
lods
shl
push
ss
fwait
xchg
jg
cltd
pop
nop
xlat
mov
ss
fldcw
jb
or
and
es
insb
rol
inc
andl
xor
cmp
add
fidivrl
inc
mov
scas
stos
jge
movsb
sub
aad
jno
out
shrl
jae
or
stc
or
dec
xchg
sbb
mov
mov
popf
vpminsw
ret
cmp
mov
iret
pushf
or
stc
pshufw
jge
mov
test
or
lods
mov
iret
adc
fs
pop
mov
xchg
sub
mov
xchg
movsb
xor
cwtl
cld
fucomip
test
fidivrl
popa
cmp
cld
lret
xchg
sbb
adc
mov
mov
pop
scas
cmp
pop
add
sarb
test
addr16
cs
cltd
inc
jno
add
dec
pop
mov
popf
push
and
and
adc
test
aad
mov
fld1
pop
data16
aas
lock
and
hlt
push
push
adc
lods
and
out
repz
movsl
xchg
mov
xor
rorl
divl
fs
in
inc
mov
pop
aad
out
ss
cs
js
lret
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
aas
insb
repnz
dec
jo
dec
jge
jo
das
dec
sbb
inc
inc
test
cltd
or
int
and
inc
lods
pop
aas
lods
xor
sarl
insl
mov
push
sbbl
hlt
push
stos
int
push
cli
stos
into
movsb
jo
repz
inc
xor
add
mov
push
aaa
mov
mov
or
sbb
std
in
cmp
movsl
jecxz
pop
js
dec
sbb
out
pop
xor
dec
jo
xor
psubd
ds
cltd
dec
fildll
pop
mov
adc
push
pushf
cwtl
lret
cli
sar
popf
xlat
std
sti
mov
mov
or
add
aad
loopne
nop
sti
gs
add
iret
and
push
sbb
jns
or
push
ret
cmp
fdivp
sbb
bnd
xor
arpl
sar
sub
ret
nop
cmp
push
loopne
push
popa
or
mov
mov
loop
and
int3
cmp
sub
imul
testb
orl
into
sti
and
shlb
fs
push
inc
inc
add
ficoml
mov
popf
jbe
xchg
cmp
inc
and
call
and
cmc
push
lcall
popa
nop
inc
insl
push
jecxz
lods
jecxz
mov
pop
xchg
mov
shll
dec
jo
outsb
push
sbb
and
push
or
inc
cld
movsl
xchg
xlat
insb
mov
into
lea
or
in
xor
jae
adc
outsw
jle
lods
mov
jl
insb
or
adc
ljmp
add
mov
cli
das
cwtl
ss
lcall
add
scas
dec
es
xchg
out
or
faddl
mov
push
ud2
loope
add
aas
sahf
push
mov
in
test
popa
pop
jbe
pop
mov
sbb
lock
insb
jo
int
sbb
ror
callw
sbb
jge
test
dec
xchg
pop
sbb
cmp
faddl
cmp
scas
and
sbb
mov
stos
adc
sbb
jle
cmpb
test
nop
sbb
add
xchg
add
pop
and
cld
rorl
mov
and
mov
sbb
hlt
js
insl
inc
dec
dec
in
bound
pop
sbb
sub
push
inc
loope
cmp
scas
ljmp
sarb
inc
sbb
xchg
lods
loope
fildl
lcall
jg
lods
adc
jge
pop
out
jno
mov
adc
jnp
outsl
push
ss
int
xchg
shrl
push
jne
lds
jmp
push
lock
fstl
add
add
cld
add
add
enter
xor
jo
rcll
cwtl
xchg
lcall
inc
pop
lods
shll
push
adc
shlb
xor
in
pop
dec
jno
push
imul
add
cs
jb
scas
pop
jp
or
pop
outsl
sub
loopne
adc
pop
hlt
lods
cmpsl
sbb
cmp
leave
push
fs
pop
comiss
aaa
jp
imul
into
pop
mov
sbb
inc
xor
cmp
and
pop
rorl
and
adc
daa
mov
lret
mov
inc
sub
pop
dec
mov
or
or
xor
dec
jmp
es
into
notl
xchg
xchg
ret
gs
repz
mov
jae
dec
mov
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
