add
add
adc
cmp
add
add
adc
add
add
add
add
add
add
add
adc
add
add
xor
add
xor
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
add
add
mov
add
inc
and
or
mov
xorl
add
adc
movzwl
mov
mov
sub
mov
and
movb
sbb
lea
xor
xor
adc
mov
mov
mov
sub
mov
mov
xorl
xor
sub
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
push
sub
movl
and
mov
push
mov
xor
or
mov
andl
push
subl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbbl
mov
addl
xor
subl
add
jmp
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
orl
mov
sbbl
xor
xor
mov
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
neg
mov
movl
movzwl
xor
addl
add
movzbl
mov
mov
movl
inc
mov
mov
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
addl
xor
add
mov
xorl
mov
sbbl
xor
add
mov
movl
movl
movl
mov
movl
mov
movl
mov
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
negl
xor
xorl
xor
orl
sub
movzbl
adc
sub
xorl
xor
not
mov
addl
mov
mov
orl
lea
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
pushl
push
push
call
jmp
mov
mov
subl
lea
neg
mov
adc
mov
addl
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
mov
sbb
mov
xorl
mov
lea
xor
mov
mov
mov
adcl
lea
not
mov
mov
mov
lea
mov
dec
mov
xor
orl
add
movl
jne
movl
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
xor
sub
mov
xor
xor
addl
sub
movl
sub
xor
movl
mov
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
add
xchg
dec
xchg
in
sbbl
adc
mov
bound
sbb
bound
xor
cmp
jns
jne
imul
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
add
sub
mov
xchg
insl
ret
cld
inc
sub
xchg
push
mov
inc
push
cld
hlt
sbb
add
sub
stos
imul
cld
pushf
ljmp
mov
in
call
imul
nop
cs
jl
andb
sti
stos
jae
cmp
fs
mov
jbe
jns
sbb
xchg
insl
sti
inc
cmp
jg
in
ss
insb
and
lods
into
enter
mov
push
sbb
sbb
adc
sub
lcall
out
aas
arpl
jge
enter
mov
mov
push
inc
add
mov
push
xchg
fdivs
mov
push
cld
inc
jmp
jge
lods
dec
jae
inc
jp
jecxz
pop
cmp
xor
daa
cmpsb
xchg
xchg
xorl
wbinvd
adc
xchg
scas
push
sbb
fidivl
ljmp
cmpsl
cli
in
lods
in
mov
hlt
inc
jp
mov
and
and
jne
popa
sub
push
lcall
jno
pop
pushf
mov
adc
sub
jge
iret
in
repz
dec
mov
inc
and
pop
pop
popa
ss
jae
jl
pusha
xor
fldenv
add
aaa
sbb
jne
pop
stos
pop
fistpll
pop
mov
jecxz
lcall
push
dec
sbb
mov
gs
mov
push
dec
sahf
js
pop
add
fisubl
negl
mov
cmp
push
cld
mov
shll
xor
sub
push
lds
sbb
pop
outsl
movsl
in
loop
xor
in
test
mov
sub
dec
test
out
cmp
lock
mov
insb
lods
push
mov
divb
jns
mov
and
cld
loopne
nop
or
mov
and
cmp
sbb
out
sbb
push
dec
test
cmp
sbb
pop
stos
out
sub
icebp
loope
and
mov
call
xlat
mov
loop
mov
sbb
fadds
mov
or
popf
jecxz
pushf
icebp
or
pop
dec
adc
mov
je
je
push
mov
cmp
or
addr16
sub
mov
pop
inc
jne
adc
mov
sbb
fdivs
push
lahf
ret
xlat
cmp
xchg
jnp
mov
fcoml
xchg
mov
test
push
sahf
push
rorb
mov
jbe
int3
cmpsl
aam
fmuls
pusha
out
arpl
mov
imul
push
xchg
dec
shrb
xlat
jl
adc
pop
pop
fnsetpm(287
adc
push
mov
cmp
stc
dec
cmp
in
je
std
fildll
inc
shll
test
adc
jno
xlat
pop
mov
sub
test
ds
and
xor
sahf
adc
test
fimuls
cmp
inc
inc
sub
shlb
addr16
sub
mov
cmpsl
sti
mov
fstl
inc
aaa
jl
out
dec
or
adc
rcrb
in
dec
mov
sub
ss
pop
lea
lea
add
int
sbb
scas
or
xchg
mov
in
cmpsb
fisubrl
inc
xchg
mov
sub
cmp
decb
push
or
out
xchg
mov
popa
sbb
test
cmc
sbb
inc
js
jnp
inc
cmpsl
pop
jb
jo
call
dec
addr16
inc
gs
mov
xorb
and
or
lds
sub
mov
inc
push
and
lret
int3
popf
fdivrs
pop
adc
das
in
pop
or
dec
stos
push
pusha
cmp
pop
add
cmpsl
icebp
pop
sbb
stos
ss
into
int
nop
pop
xchg
aam
test
dec
mov
push
or
cmp
inc
adc
cmpsb
inc
sub
sub
jle
xchg
fwait
mov
xor
cltd
adc
fidivl
xlat
fldcw
in
push
incl
sub
or
fisubl
out
inc
cli
inc
loop
jmp
lock
lods
mov
ss
push
adc
outsl
pop
add
add
loopne
in
aas
mov
cld
lcall
xchg
cmp
cmp
push
sub
mov
repnz
push
dec
push
xor
shlb
mov
mov
push
loope
scas
xchg
push
inc
mov
xchg
xchg
fsubs
out
xchg
shl
scas
jno
sub
les
rep
fcomps
mov
popf
clc
add
sbb
add
pop
mov
dec
repnz
aas
mov
cmp
mov
dec
cmp
or
cld
dec
push
mov
sub
adc
lods
push
je
adc
mov
xor
dec
imul
lcall
lea
sub
hlt
jnp
cli
xorb
and
nop
xor
mov
aas
fs
pop
pop
inc
mov
mov
movsl
outsl
aas
mov
int3
jne
jns
roll
push
aad
adc
popa
xchg
jp
shl
stos
push
adc
std
mov
es
subl
fsubrs
std
fwait
mov
dec
push
inc
enter
jle
stos
lcall
out
inc
mov
inc
in
sahf
lods
stos
push
sbb
sbb
mov
mov
orb
ret
mov
push
pop
jle
push
push
dec
or
push
das
mov
gs
jle
scas
mov
dec
jnp
mov
push
and
xchg
cmp
fistpll
hlt
pop
out
xor
cld
push
inc
divb
jns
xchg
insb
mov
dec
mov
jg
test
imull
clc
cmp
leave
sub
cmpl
push
insb
pop
inc
mov
fsub
mov
sbb
dec
add
lahf
adc
push
mov
in
andb
cli
jle
jns
xchg
loop
cmp
push
aad
jmp
inc
out
jp
mov
or
sub
jns
mov
stc
mov
inc
lods
sti
pop
xchg
enter
xchg
xchg
push
xlat
addr16
jb
inc
or
xchg
sub
cmp
loop
xlat
xor
loopne
loope
mov
mov
cmp
es
add
sti
repz
inc
push
xchg
add
inc
out
lcall
add
lds
jecxz
dec
inc
pop
cmp
orb
fisubrs
mov
fsubrs
lea
xor
fwait
adc
jno
jl
in
test
mov
push
push
xchg
pop
mov
iret
inc
cwtl
jne
dec
and
mov
mov
xor
xchg
lcall
jecxz
mov
rclb
out
xchg
in
popf
test
push
aad
xchg
movsl
xchg
mov
repz
lret
jp
mov
jg
stos
fs
push
push
jns
pop
mov
negb
and
popf
test
es
pop
xchg
xor
jae
dec
and
fucom
cld
imul
add
movsl
lahf
lds
jl
mov
ds
ret
loopne
cmpsb
mov
inc
lret
xchg
or
sti
nop
movsl
sarl
psubsb
pop
xchg
mov
in
lods
cmpsb
int3
addr16
adc
xor
nop
js
xor
fyl2x
arpl
leave
push
invd
jno
insb
xchg
cltd
xor
push
fcmovu
cli
addr16
pop
add
xchg
orl
inc
pop
and
push
push
enter
sbb
test
pop
cli
daa
mov
aad
push
adcl
jmp
mov
xor
fstl
rcrb
sbb
in
lahf
cmp
sbb
lock
and
xor
mov
dec
loope
mov
in
clc
add
out
roll
stos
scas
mov
pop
and
push
mov
jp
xchg
testl
and
pop
gs
adc
sysret
loop
dec
mov
daa
adc
inc
sbb
test
popf
ds
or
in
pop
stos
lcall
xor
pop
jb
imul
outsl
inc
nop
iret
adc
shr
push
jl
enter
repnz
shll
fs
test
or
jecxz
loope
addr16
repnz
ds
mov
dec
jbe
and
outsl
pop
aam
jmp
addr16
xchg
lret
aas
in
stc
mov
pop
jl
faddl
pop
mov
inc
ljmp
mov
divl
add
int
mov
jno
insl
mov
inc
stos
mov
dec
test
lret
mov
xchg
or
loop
shlb
sub
fsubs
and
mov
repz
shrl
push
mov
push
rolb
andl
lods
inc
stos
dec
add
pushf
mov
xor
roll
and
jg
out
sub
cmp
push
push
jb
out
adc
shr
stos
sub
lcall
test
outsb
cmp
push
sub
push
xchg
pusha
cmp
jne
push
iret
mov
fimuls
jnp
xchg
rolb
cmp
test
cli
xchg
sub
ret
pop
aas
int
psubb
and
push
daa
sbb
in
push
and
test
orl
pop
aam
arpl
sbb
sti
bswap
push
xchg
cmpb
xorb
xlat
push
jbe
mov
xchg
int3
in
dec
sbb
add
cld
add
je
cli
imul
dec
cmc
inc
test
lret
pop
mov
shlb
pusha
dec
push
test
popa
jns
stc
jns
push
or
inc
divl
pop
push
mov
in
pop
int
dec
scas
mov
imul
push
and
addr16
scas
mov
lock
stos
rorl
popa
jns
cmovs
jle
mov
mov
mov
fcmovbe
jmp
insl
or
call
in
xchg
inc
ja
pop
test
xchg
pop
sahf
lahf
push
mov
adc
cmp
xchg
aaa
aad
sbb
push
sub
decb
add
call
cmp
sbb
dec
rcr
lods
jg
sbb
mov
dec
fldl
outsl
test
shr
xor
sbb
dec
push
adc
pop
jbe
aaa
pop
bound
push
test
cmc
sub
and
out
insl
jle
insb
pop
mov
cmp
dec
or
xorb
pop
pop
inc
mov
mov
jne
mov
inc
pushf
lret
aas
and
imul
sbb
fs
sahf
jmp
mov
aaa
pop
xor
mov
jne
incb
inc
xor
xchg
adc
jmp
xchg
or
lds
or
push
mov
mov
orl
in
sub
xor
movsl
sub
loope
and
jg
mov
cwtl
fwait
add
mov
or
fs
and
dec
sub
jbe
or
out
fs
movsb
mov
inc
pop
aaa
mov
jp
adc
cmp
std
fdivrs
xor
lcall
addr16
hlt
jge
idivl
mov
mov
cs
cmpsl
push
push
movsl
and
jno
mov
das
subb
xor
ret
jne
push
jb
dec
push
movsb
and
jae
xor
bound
sub
sar
jecxz
daa
sub
ljmp
dec
scas
xlat
lret
std
clc
test
incl
lock
loope
adc
inc
js
les
fidivrs
lods
subl
les
sahf
and
add
or
enter
in
adc
cmp
enter
orb
cwtl
movsb
mov
dec
xor
pop
cmpsl
push
sub
sbbl
andl
add
cmpl
jl
mov
xor
dec
mov
leave
gs
rcll
xor
cld
popa
lret
ret
or
or
loop
inc
add
pop
cmc
push
out
je
nop
ret
pop
ljmp
xchg
sub
mov
xchg
fisttpll
and
daa
decl
mov
inc
pop
xor
movsb
notb
pop
push
sahf
addr16
dec
das
and
cld
mov
push
sbb
int
sub
sub
stos
and
pop
mov
je
jge
pop
lds
cmc
lds
ljmp
sqrtps
jmp
jno
or
dec
mov
enter
adc
or
sub
lahf
xorl
push
push
imul
dec
dec
stos
pushf
jbe
mov
inc
add
jge
mov
insl
sbb
daa
cmc
orb
divl
xor
cld
mov
adc
push
outsb
cmpsl
call
adc
cmp
jecxz
adc
clc
stos
mov
lods
inc
adc
fcmovnb
bound
rcrb
mul
aad
and
je
addb
push
push
ljmp
or
jmp
push
fistps
dec
jge
add
sub
push
jo
push
sbb
push
jb
cmp
jnp
jae
or
cld
adc
dec
push
push
jle
leave
xlat
pop
cmpsl
and
or
dec
cltd
data16
inc
adc
push
and
mov
data16
xlat
lcall
cmpsb
sti
aas
and
jl
sub
fldenv
xor
out
clc
push
in
sub
push
dec
daa
nop
out
pop
insl
mov
jecxz
sbb
adc
in
mov
xchg
repnz
sti
sub
inc
imul
mov
ljmp
or
ss
pop
push
jbe
ret
in
add
mov
inc
dec
dec
or
sub
js
loope
and
adc
sahf
push
pop
fs
cwtl
pop
int3
dec
decb
mov
and
cld
xor
sub
out
cmp
cli
jne
mov
jl,pt
xchg
mov
jl
jns
push
add
aad
out
and
imul
cs
xlat
xchg
mov
out
rcrb
or
sbb
mov
pop
aaa
fiadds
inc
dec
sbbl
mov
lret
mov
cmp
adc
jae
lea
aam
dec
in
jne
into
and
xchg
je
nop
sahf
sub
or
mov
repz
xor
pop
pop
sbb
mov
fidivs
jle
fidivl
pop
pop
xchg
icebp
sbb
sub
xor
sti
rcl
xchg
in
scas
adcl
push
xor
sbb
imulb
xchg
outsl
cmp
sub
enter
and
sbb
pop
sbb
movsb
mov
addr16
flds
ds
xlat
sar
fstps
mov
cmp
mov
mov
inc
int
pop
shrb
loopne
subb
xor
add
mov
jns
adc
mov
inc
or
clc
int3
push
jae
leave
stos
movsb
fwait
imul
jns
xchg
or
hlt
test
sub
into
fimull
mov
pop
sub
popf
adcb
and
es
sub
sub
outsb
imul
push
adc
push
scas
mov
jge
pushf
lcall
into
inc
out
sub
sbbl
rcll
repnz
insb
adc
mov
loopne
rclb
inc
add
test
pop
adc
idivl
and
cmp
and
xlat
ficomps
inc
push
push
push
pushf
fsubr
mov
mov
ficomps
adc
mov
dec
inc
and
mov
clc
sub
mov
push
in
aad
and
xor
push
inc
loope
jecxz
sbb
push
push
pushf
pop
push
dec
pop
mov
xchg
arpl
data16
std
xchg
and
xor
out
cmc
ds
stos
pop
scas
fs
lock
dec
push
int
ss
cwtl
sub
fwait
cmp
stc
sbb
aaa
daa
jmp
cmc
out
mov
clc
cmp
jns
mov
loopne
in
xlat
notl
inc
mov
popf
xchg
adcl
fwait
cmp
imul
adc
mov
add
sub
test
jg
mov
daa
mov
push
ss
xchg
lret
sti
mov
test
push
ja
and
inc
aam
movsl
popf
or
inc
in
mov
mov
lahf
enter
ja
mov
xchg
xor
popa
mov
mov
sub
jmp
out
xor
clc
fwait
shrl
or
ss
xchg
shll
dec
fbstp
push
aas
in
jbe
addl
mov
push
jo
mov
mov
mov
repnz
loop
push
ss
inc
idivl
insb
lods
leave
cs
lea
in
mov
das
mull
jnp
adc
je
or
pusha
sbb
iret
dec
lock
movb
nop
mov
cmp
popf
cmp
mov
sub
mov
sub
nop
cmp
cmc
shrl
pop
pushf
add
enter
jmp
sub
or
sbb
out
inc
lods
insl
cmp
fistpll
icebp
aaa
pop
pop
call
inc
xorl
psubw
les
inc
ret
icebp
sti
mov
fmuls
outsl
leave
test
or
test
pop
test
mov
mov
aam
stos
int3
and
push
adcb
cmpsl
aad
fsubrs
and
sbb
add
mov
or
xchg
pop
nop
inc
fistl
movsb
xchg
lock
cmp
and
push
imulb
es
pop
mov
adc
dec
arpl
mov
push
ljmp
push
xchg
aas
push
mov
jae
hlt
adc
movsl
jbe
pop
adc
mov
jp
test
adc
mov
lahf
mov
mov
popa
enter
mov
jg
subb
pop
mov
mov
and
cmp
cld
js
push
faddl
cwtl
sti
mov
pusha
aam
dec
and
enter
dec
pop
push
mov
scas
jnp
lahf
cmp
fwait
aaa
cmp
adc
pusha
out
stc
incb
sahf
adc
pop
out
xorb
pop
xchg
push
cwtl
mov
push
push
mov
jnp
pop
lods
lret
mov
pop
mov
movsl
dec
popa
jle
gs
dec
xchg
push
lods
scas
push
rcr
sbb
je
xchg
pop
ss
mov
mov
in
and
or
aaa
adc
incl
insb
lea
or
data16
je
mov
dec
push
enter
xchg
test
xchg
sbb
xor
cs
push
mov
stos
gs
push
jecxz
mov
add
sub
aam
andl
std
jl
fnstsw
inc
add
or
icebp
in
sbb
pop
movaps
lret
pop
scas
xchg
sub
jbe
js
test
lret
xor
pop
mov
dec
push
lcall
jge
adc
mov
fstps
in
pop
fldl
sbb
gs
xor
jno
flds
pop
fstl
dec
push
loopne
fldt
xchg
dec
dec
adc
xlat
out
adc
adc
popf
cwtl
push
stos
sbb
outsb
out
inc
lret
xor
pop
pop
adc
popf
dec
push
xor
inc
mov
sbb
jg
inc
mov
fidivl
daa
mov
push
xchg
pop
sub
push
cmpsb
cmpsb
add
enter
movsb
sbb
mov
rorl
xchg
jl
dec
pop
mov
cmp
dec
addr16
cmp
adc
sbb
pop
imul
push
icebp
jmp
sub
adc
int3
insb
push
movsb
icebp
jg
push
jle
clc
pop
and
mov
fstpl
insb
jecxz
mov
adc
lds
in
das
mov
mov
add
and
fisubrl
mov
inc
mov
xchg
pop
or
test
mov
ds
jae
sahf
neg
in
outsl
les
lods
lret
mul
jmp
lahf
adc
lea
lret
idivb
mov
jmp
xchg
out
and
lcall
add
mov
inc
mov
mov
fcmovne
jp
int
xlat
decl
loop
inc
jae
int
lock
push
lcall
out
int3
cmp
pop
ret
insb
or
shrb
push
add
psraw
icebp
dec
vpsllw
inc
xor
shlb
jnp
xor
inc
dec
fwait
xor
xor
jp
add
stos
lods
mov
sub
mov
mov
insl
cmc
mov
mov
sub
subl
stc
inc
fsts
dec
jbe
xor
push
lods
mull
sub
je
les
jmp
jp
int3
xor
dec
push
or
inc
adc
cmp
sbb
notl
jo
cwtl
sub
mov
into
xor
loop
imul
stc
ret
into
ljmp
adc
rcrb
rcll
nop
lea
adc
ja
push
jecxz
in
cmpsb
clc
mov
test
add
mov
leave
mov
inc
test
cmp
fwait
mov
je
push
sub
cmp
ret
test
mov
leave
mov
lea
imul
fnstcw
cs
inc
mul
mov
loopne
push
ds
adc
idivl
push
inc
cmp
ljmp
pop
fimull
dec
stc
imul
popa
mov
mov
cmp
out
iret
mov
pop
lahf
jmp
rcr
loopne
rorb
lods
mov
repz
inc
xlat
sbb
ss
sbb
and
fsubrl
lea
popf
in
inc
adc
cmpl
xchg
in
cmp
pop
lahf
cwtl
xor
scas
jnp
xorb
movsb
inc
mov
std
sub
sahf
shll
mov
push
adc
jb
repz
fsubs
icebp
push
xchg
xchg
int3
push
mov
adc
jg
test
push
or
loop
insl
pop
pusha
sub
imul
cli
sbb
inc
popf
adc
push
add
adc
mov
and
dec
cltd
xchg
mov
les
or
xor
fcomi
scas
jns
fstl
push
and
fs
arpl
cld
shl
hlt
bound
scas
pusha
sbb
and
jnp
ljmp
sbb
jmp
dec
ret
bound
scas
mov
in
repnz
xchg
adc
loopne
lock
aas
test
in
ret
std
dec
inc
xor
rol
fisubrs
jo
push
push
lods
push
jno
fimuls
dec
les
push
xchg
mov
mov
daa
pusha
mov
and
jl
xor
out
shl
pop
in
fidivrl
add
mov
push
insb
lcall
incl
and
or
out
sub
pop
cmpsl
lods
or
mov
cmp
sbb
cmp
adc
movsb
mov
clc
imul
cltd
movl
nop
inc
je
xchg
mov
out
sub
xchg
push
mov
lahf
or
xchg
push
jmp
mov
fisttps
imul
dec
movl
lods
out
out
pop
cmpsl
jne
stc
cmp
adc
mov
sbb
pop
fmuls
in
into
add
enter
ret
lods
cltd
mov
jmp
push
xor
add
mov
xchg
add
dec
out
prefetch
mov
cmp
movsb
in
pushf
inc
int3
push
and
pushf
adc
pushf
mov
or
sbb
negl
lret
mov
insb
imul
cmp
loopne
cmp
dec
loopne
adc
cmp
mov
pusha
jae
arpl
ja
pusha
jnp
cmp
dec
into
nop
jmp
dec
lahf
and
xchg
sahf
iret
jbe
push
fsts
mov
dec
push
cmp
ss
xlat
mov
or
push
test
or
out
enter
add
adc
xlat
adc
dec
imul
daa
into
jge
push
in
lret
cld
loopne
mov
cmpsb
mov
icebp
pop
das
aad
into
adc
push
scas
addr16
fcomp
adc
lahf
dec
inc
rorl
pop
push
mov
jle
dec
sti
pop
mov
lahf
jmp
enter
xlat
out
es
jp
lods
pushf
pop
iret
xor
in
imul
es
and
jecxz
xlat
dec
into
xor
cmp
gs
add
dec
test
fdivl
push
test
jb
sbb
adc
pop
jae
ss
cltd
adc
fisttps
jnp
jmp
js
adc
shll
xchg
stos
xor
cltd
fisubs
xchg
ret
bound
mov
mov
ret
push
popa
fisttpll
imul
sbb
pop
gs
out
test
bound
lea
jl
push
pop
popa
in
adc
arpl
aam
jmp
imul
pop
cmp
jae
sbb
test
push
push
out
add
pushw
push
and
cmpsl
imul
push
inc
pop
stos
inc
scas
test
mov
repnz
xor
imul
movsb
xchg
bound
sbb
and
xchg
bound
imul
movsl
xchg
xor
ds
and
idivb
mov
repnz
lahf
xor
out
in
mov
lock
xchg
ss
jecxz
std
scas
nop
jecxz
add
in
pop
dec
arpl
cmpsl
jle
sub
push
dec
adc
ss
pop
inc
dec
xlat
pushf
lea
and
jnp
push
and
stc
daa
rcll
ret
pop
xchg
xchg
xchg
adc
sbb
push
cmp
jl
cmpsl
pop
loope
jecxz
sub
into
scas
cmp
push
adc
sub
adc
mov
lods
aas
in
mulb
add
mov
pusha
dec
jmp
jb
pop
pop
push
testl
xor
arpl
aaa
dec
inc
jge
dec
push
inc
outsl
adc
pop
sub
setb
pop
jmp
xor
sub
mov
jae
sub
pop
loope
lcall
or
inc
inc
call
jo
pop
jle
stos
inc
push
imul
popa
cli
cmp
xchg
mov
cwtl
dec
loope
faddl
gs
jle
in
jno
dec
mov
orl
not
mov
xor
call
xrelease
mov
mov
sub
adc
pusha
mov
int
dec
fs
sbb
rol
sbb
jmp
mov
pop
mov
lods
stc
mov
lock
rorl
outsl
mov
cmc
pusha
jne
add
jg
or
shll
into
dec
dec
fidivrs
jo
xor
imul
cld
and
sub
fsub
adc
movsl
cmp
xor
in
mov
and
cmp
aas
ds
xor
in
cmp
pop
cltd
jno
pushf
cmovae
xchg
fstl
pusha
bound
cmp
jo
mov
dec
js
jl
das
pop
movsb
or
call
cmp
addr16
sub
xor
mov
ja
mov
inc
add
cmpsl
push
dec
out
fisubl
lret
mov
mov
jp
xchg
sarb
loope
cld
je
cmpsb
into
cmp
pop
test
subl
xor
mov
xor
das
jg
xchg
sbb
gs
ret
pop
push
pop
fistps
in
and
inc
or
mov
xchg
add
inc
imul
enter
dec
int3
jb
je
movsb
sti
fadd
cmp
jne
push
dec
sub
cmp
lret
push
adc
sbb
adcb
mov
in
sarb
pop
test
mov
mov
fmul
inc
mov
test
sbb
mov
mov
repnz
sbb
stos
or
repnz
inc
push
scas
aas
cmp
addl
repnz
sbb
fucom
in
dec
stos
mov
jle
or
cmc
xor
xor
or
and
out
push
ja
pop
add
add
push
ds
out
or
mov
ja
xchg
out
xchg
leave
fistpl
lock
sbb
cltd
jge
mov
call
addl
jecxz
pop
das
ds
fstps
lcall
mov
outsb
shrb
mov
scas
jmp
into
hlt
or
push
out
mov
mov
fstpl
pop
push
jno
adc
popl
shr
sbb
pop
lock
dec
push
or
jbe
mov
mov
insb
cmp
cmp
pop
sbb
or
jb
mov
mov
sahf
sub
adc
pusha
dec
xchg
testb
push
das
pop
cmpsl
jle
fs
cmp
and
add
rcrb
adc
add
mov
and
in
or
mov
dec
mov
in
sbb
lahf
mov
mov
shl
xorl
inc
sub
sbb
cmp
ds
or
leave
pop
std
xchg
and
pushf
daa
xchg
xor
lret
add
sub
cli
sbb
mov
hlt
in
add
stc
inc
sbbl
cli
adc
cmp
mov
int3
cmpsl
adc
out
jb
pop
push
dec
lock
cmc
or
loopne
repnz
sub
insb
imul
scas
lods
fs
fcompl
outsl
imul
inc
loope
sub
mov
push
lahf
xlat
stos
imul
sbb
stos
aad
mov
push
pusha
out
stos
loopne
mov
cli
sbb
pop
jle
pop
or
fcoms
lret
js
jnp
xchg
mov
popf
xchg
popl
pmovmskb
xlat
ficompl
sahf
xor
adc
push
sub
xor
ljmp
ret
sub
pop
lret
je
sub
rclb
fcoms
es
mov
into
mov
mov
clc
cli
test
xchg
inc
mov
int
outsl
setb
push
add
outsb
adc
sbb
mov
push
dec
ss
js
mov
adc
inc
lods
cmp
out
jle
mov
mov
mov
push
lea
shlb
out
pop
in
pop
call
or
adc
xor
pop
sbb
mov
push
fs
je
or
mov
cwtl
jnp
into
cmpsl
sub
adc
inc
insb
and
sbb
in
jmp
ret
lea
stos
adc
rorl
or
dec
and
add
add
clc
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
jmp
pop
stos
sbb
gs
push
lds
dec
pushf
sbb
bound
pop
bound
cltd
or
jp
xchg
inc
notl
xchg
icebp
cmpsl
inc
jbe
jge
cli
shlb
sub
shl
cmp
mov
mov
mov
push
cltd
out
ja
mov
mov
sub
div
push
adc
mov
xlat
mov
rdtsc
fstpl
adc
or
cmp
push
leave
jge
aaa
sub
push
mov
into
adc
mov
lret
aaa
sbbl
xchg
iret
jecxz
jmp
jecxz
sbb
pop
jne
imul
dec
or
sub
test
cli
or
pop
jns
imul
mov
filds
cmpsl
out
stos
cwtl
sub
push
mov
inc
test
mov
popf
cmp
cmpsl
out
out
ds
pop
test
pop
and
repnz
fldl
das
jo
mov
xor
sahf
into
faddl
mov
fimuls
test
pop
mov
fbstp
scas
sub
inc
push
call
dec
cmp
or
mov
sub
shlb
insb
push
mov
daa
lods
in
ror
sbb
adc
pusha
out
cmpl
add
xor
sub
scas
mull
lahf
jbe
shrb
inc
das
mov
cmc
punpckldq
ret
loope
pusha
mov
cmp
call
xchg
iret
cmp
in
js
sub
cmc
push
imul
xchg
sti
leave
adcl
inc
ljmp
cs
stos
sahf
push
pusha
scas
xchg
inc
xchg
xchg
pusha
aas
adc
pushl
sub
add
or
movsl
scas
les
xor
call
mov
ds
push
ljmp
mov
add
mov
sbb
push
int
das
enter
pop
inc
adc
fistps
or
mov
pop
dec
les
lods
and
push
sbb
inc
sbb
or
jle
mov
xorl
pop
int3
and
sbb
push
jge
mov
push
jle
pop
js
adc
jp
icebp
sbb
push
pop
popf
inc
ret
or
xchg
push
mov
icebp
adcl
sbb
cmp
or
add
sub
out
xor
in
mov
mov
add
sub
xor
fwait
sub
ficoms
fwait
xchg
pusha
pop
addr16
pop
sub
shrl
adcl
int3
xchg
fsubrl
in
out
leave
addr16
cltd
mov
jnp
bound
jns
jbe
inc
ja
sub
sub
sub
sbb
push
lea
aam
jae
jge
xchg
aad
inc
inc
repz
movsl
inc
mov
mov
cmc
or
cmpsb
hlt
clc
xchg
outsb
xchg
adc
aas
in
xor
inc
cmpsb
sub
stc
mov
pop
and
xchg
addr16
fisubs
adcl
data16
mov
in
mov
imul
outsb
xor
mov
lahf
inc
sub
sub
adc
pop
xorb
insl
xchg
pop
loop
or
and
jb
rorb
ds
nop
add
test
inc
ljmp
pop
push
iret
mov
das
mov
inc
fistps
out
and
pmaxsw
insb
sbb
adc
pop
mov
cmp
leave
stc
xlat
repnz
jo
mov
push
jl
push
subl
arpl
dec
add
lods
mov
ss
jnp
jbe
mov
sbb
or
jns
add
fistpll
push
aam
pop
aad
jp
daa
cli
mov
push
dec
int
push
mov
movups
sarb
mov
mov
lret
and
test
mov
idivl
scas
sbbl
push
ljmp
test
xor
push
daa
and
daa
sub
and
loope
shll
in
call
cmpsl
lods
or
jecxz
stc
xchg
lret
iret
add
fstpt
ljmp
ds
out
xchg
xor
cmp
push
insl
inc
push
lea
lds
inc
xchg
and
mov
pop
jecxz
pop
gs
pop
and
mov
xlat
enter
inc
test
add
pop
clc
mov
sbb
sbb
mov
rolb
imul
test
fimuls
enter
sbb
pop
shll
fwait
mov
clc
mov
dec
bound
jbe
pop
sti
ret
gs
dec
outsl
bound
aam
movsl
subl
xor
jmp
and
leave
or
bound
or
aam
push
pop
js
out
sarl
mov
in
or
push
pushf
jmp
mov
daa
loop
cltd
daa
loop
mov
xchg
or
sbb
inc
std
fwait
pop
mov
jg
stos
mov
jae
mov
into
mov
sarb
xchg
nop
jmp
xchg
push
aad
hlt
fstl
xchg
fisubl
test
adc
arpl
dec
jmp
sub
add
fsubrs
xchg
movsl
pop
lret
fs
fwait
insb
shl
aad
cmpsb
mov
jne
and
nop
aaa
dec
popf
je
adc
sbb
test
jge
ret
data16
cmpsl
push
pop
adc
mov
iret
sub
lock
pop
test
jp
inc
adc
push
mov
adc
push
rcr
popa
pop
mov
mov
cmc
gs
push
jnp
dec
add
idiv
xor
aam
ja
mov
shl
scas
jp
or
gs
xor
shr
iret
imul
push
lds
daa
add
dec
or
out
or
and
int
sub
das
jne
pushf
jns
outsb
out
lret
cmpsb
mov
out
xor
mov
test
adcl
daa
adc
push
dec
out
xchg
shrl
pop
or
imul
mov
iret
daa
sub
mov
mov
jl
int3
divl
fmul
cltd
mov
mov
dec
xor
and
icebp
divb
adc
add
mov
jno
jae
xchg
jno
loopne
lods
in
add
add
or
bswap
mov
cmc
sub
adc
cmpsb
inc
xchg
cmp
cmp
das
movsl
or
xchg
jge
xchg
lds
loopne
movb
pop
arpl
pop
sbb
jae
jb
xor
dec
add
jnp
jno
in
jmp
pop
add
inc
jmp
and
adc
pop
lods
ja
fnsave
push
sar
pop
into
stc
xor
inc
sti
or
idivl
es
add
call
xchg
xor
loope
or
popf
in
inc
test
pop
sbb
pop
mov
mov
out
insb
scas
xor
sub
in
clc
jl
and
into
inc
and
outsl
push
and
add
mov
lds
push
mov
nop
xchg
push
mov
pop
cmp
hlt
xchg
les
xor
jbe
add
push
mov
jp
insb
pop
sbb
pop
mov
rcl
sbb
mov
pop
push
js
adc
es
insl
mov
in
ss
dec
stos
hlt
aas
sbb
lods
pop
aad
push
jg
adc
insl
dec
dec
inc
inc
js
mov
aaa
rclb
sbb
scas
push
ret
mov
sub
mov
aam
pop
mov
xlat
push
mov
mov
push
sub
or
aad
jmp
loope
mov
ficoms
and
push
cmp
sahf
pop
insb
imul
movsl
push
push
in
shlb
inc
addr16
test
add
int3
jb
stc
imul
mov
jne
xchg
cmpsl
inc
cs
add
outsb
flds
sbb
scas
idiv
test
push
mov
aaa
jmp
sbb
aad
insl
xor
aam
adcl
loop
je
push
jmp
loope
ljmp
mov
lret
pop
loop
cmp
jb
daa
scas
loop
aad
mov
jmp
and
andb
xchg
jnp
ljmp
cmp
mov
stos
cmp
loopne
cmp
lock
jne
call
jle
sbb
lds
push
pop
repz
pop
loope
cmpsl
sub
int3
xchg
cmp
mov
dec
scas
push
and
movsb
aad
out
mov
mov
and
movsl
xor
mov
sub
arpl
mov
out
cltd
movsl
shl
fisubl
jb
push
xchg
clc
leave
cmp
pop
sbb
ds
in
inc
add
adc
testl
imul
dec
fdivs
adc
sbb
adc
inc
fisubrs
inc
pop
outsl
lods
arpl
adc
adc
cli
cmp
icebp
and
ds
popl
mov
test
cli
jp
jp
add
mov
dec
and
sarl
jb
mov
push
and
adc
inc
test
xor
cmpsl
jg
jbe
mov
jmp
mov
adc
cmpsb
mov
mov
inc
mov
mov
mov
out
nop
xchg
fistps
pop
push
pop
sarb
push
fs
ret
fmuls
adc
sbb
into
cbtw
pop
push
jle
mov
mov
dec
lahf
lret
push
dec
pushl
scas
test
es
add
xchg
into
bound
push
mov
iret
pop
lcall
dec
aas
loope
lea
xchg
jle
mov
aad
pop
jae
sub
pop
leave
cwtl
mov
mov
notl
xchg
pop
aam
ror
inc
lods
mov
lret
icebp
push
xchg
inc
out
push
or
hlt
cmp
xor
mov
popf
cmp
loopne
lret
pop
sub
xchg
inc
loop
icebp
add
push
repz
and
lret
nop
sub
dec
mov
rclb
or
push
enter
testl
xchg
movsb
insl
dec
add
hlt
jnp
jp
inc
pop
sbb
out
ds
pusha
test
ret
in
out
mov
jl
mov
cmpsl
cli
pop
cmpsb
add
clc
mov
push
adc
xchg
jno
mov
cld
fwait
add
sbb
pop
je
dec
divl
icebp
shl
je
adc
jo
mov
rorb
fcomi
push
lock
orb
adc
jns
mov
xchg
inc
push
inc
xchg
shrl
out
sub
dec
lea
pop
dec
and
xchg
not
in
ret
mov
adc
stc
cli
sbb
and
mov
mov
pop
mov
in
pop
es
cmp
bound
mov
pop
fists
xor
mov
shll
fistpll
jnp
test
or
add
and
mov
mov
in
mov
pop
or
lods
mov
push
sub
mov
jae
hlt
lea
idiv
dec
mov
test
ljmp
sub
cmp
push
outsl
xchg
mov
std
fdivl
xchg
aas
cli
fcmovnbe
cmpsl
sbb
frstor
push
dec
mov
rclb
push
cmp
bound
call
ljmp
mov
in
test
mov
sub
rorw
mov
jl
repz
or
and
inc
inc
cmp
pop
rol
sbb
rcll
imul
cmpsl
push
imulb
ss
cmpsb
std
mov
pop
ja
in
mov
adc
dec
mov
jmp
aad
aaa
sub
fcomps
lcall
or
call
mov
inc
adcl
inc
fisubrs
int3
repz
and
xor
xchg
pop
mov
stos
sub
xchg
outsl
cmp
mov
jmp
adc
sbb
dec
mov
xor
xlat
xor
inc
adc
pop
lds
fstpl
push
inc
pop
repz
repnz
mov
or
add
push
setl
sub
sbb
pop
xor
sub
mov
pushf
xlat
leave
inc
imul
imul
cmpsb
lcall
insb
adc
lods
pop
push
in
inc
ret
dec
or
jne
lcall
repnz
test
flds
add
jne
push
jge
aam
test
insb
comiss
arpl
stos
sbb
out
jg
adc
cs
push
in
sbb
add
popf
or
pop
pop
test
andb
adc
es
mov
imul
enter
scas
xchg
jnp
adcb
jge
xchg
push
cmp
xchg
push
pop
jne
xchg
adc
lock
int3
pusha
mov
cwtl
and
mov
dec
aad
dec
popa
and
pop
pop
out
out
or
pop
dec
jl
cmpsl
rcrl
insl
dec
aam
xor
frstor
mov
mov
and
imul
aas
sub
loopne
or
push
fstpt
or
xor
cmp
mov
lods
lds
adcl
sbb
packssdw
dec
sub
fsubrs
js
popa
out
cld
fidivs
pop
cs
push
loop
into
scas
jne
filds
or
jbe
cwtl
xchg
mov
jns
xor
push
add
push
xor
push
lods
test
jo
push
mov
lods
insb
add
fistps
jns
test
frstor
or
rol
pop
pop
andb
loopne
push
jmp
cmp
jge
pop
dec
cs
subb
imul
stos
xlat
sbbb
dec
jmp
push
jge
push
shl
int3
rcrl
push
sub
mov
fninit
xor
push
sbb
dec
xchg
inc
xchg
test
fdivrl
mov
jns
sub
sahf
push
cmp
mov
jl
or
jne
xchg
xor
lods
jnp
jns
std
movsb
cmp
inc
add
push
mov
int3
pop
mov
xor
cmp
test
mov
lods
fmul
stos
ja
sbb
xchg
fwait
sar
cmc
pop
mov
adc
fs
ja
ljmp
cmpsl
push
dec
test
jecxz
and
in
jl
sbbl
xor
sbb
xchg
xor
lock
insl
sbb
dec
jl
sarl
cmc
loop
pop
add
out
jle
and
mov
nop
jns
fcmovnbe
fsubrl
sub
imul
sbb
mov
shr
js
cmp
dec
outsl
jl
sbb
insb
add
ret
cmp
xor
add
stos
adc
int3
mov
lahf
inc
stos
loopne
sub
scas
lret
iret
sub
dec
and
cmp
movsb
popa
pusha
adcb
lock
jg
arpl
jae
push
fldt
jmp
jge
aam
xor
mov
xchg
mov
test
pop
jecxz
dec
xor
pop
pushf
mov
mov
hlt
lret
jbe
imul
dec
rep
stc
jecxz
mov
or
jo
inc
cld
dec
add
in
add
icebp
outsl
enter
std
outsl
js
fnstenv
mov
movsl
cwtl
sub
fsubr
push
insl
stos
insl
and
insl
push
fdivl
push
dec
adc
cmpsl
dec
jns
jg
adcb
mov
mov
stc
xor
jns
in
mov
pusha
lods
in
inc
adc
cmp
mulb
inc
push
pop
xor
lahf
add
mov
leave
ja
sbb
int
dec
sbb
inc
ret
ret
pop
push
pop
xor
mov
cmc
inc
xchg
mov
xor
repnz
popf
add
fadd
push
inc
jge
in
hlt
rolb
cltd
push
or
cs
adc
shr
lcall
dec
and
insl
rcll
cmpsb
xchg
mov
fbstp
lcall
jmp
dec
test
and
cs
stos
cmp
imul
jmp
jmp
push
fisubl
movl
inc
mov
push
pusha
pop
pslld
fldl
fadd
cli
lahf
push
jmp
pop
div
loope
xchg
xor
pop
push
stos
pop
adc
cmp
mov
cltd
fisubrl
xchg
add
mov
dec
inc
cmpsl
cmp
leave
outsl
ret
fs
data16
ss
jg
xlat
mov
add
sub
adc
xor
sbb
rorb
popf
mov
stos
shlb
sub
push
in
sbb
cmc
fldt
int3
in
cmc
cmc
adc
dec
dec
cmp
xor
inc
jae
scas
adc
inc
paddsw
xor
push
test
pop
mov
adc
idivl
add
push
in
cmp
ret
xor
call
mov
adc
mov
outsl
fs
sub
xchg
mov
mov
call
xchg
inc
sub
imull
push
lcall
inc
lret
cmp
jmp
test
cmpsl
or
mov
add
sub
mov
pop
push
fidivs
jnp
neg
xchg
mov
lret
cmp
sub
nop
and
cmp
jnp
lahf
cli
sbb
mov
ret
and
mov
outsl
cmp
in
addl
out
cwtl
dec
cmp
movhps
repnz
mov
ljmp
test
mov
scas
mov
mov
rorl
cmc
mov
cmc
test
adc
sub
push
xchg
dec
jp
jl
std
dec
into
sbb
dec
outsl
dec
pop
jb
push
outsb
mov
outsl
data16
push
mov
mov
cmp
sub
jge
push
push
je
in
lahf
adc
lahf
add
js
sub
cmpsl
test
jbe
mov
arpl
mull
jge
mov
inc
mov
mov
pop
popa
mov
fsubrl
test
add
test
mov
movsl
inc
out
ljmp
xor
sub
add
js
or
push
movsb
jl
std
outsl
daa
xchg
add
out
sub
cmpsl
imul
push
test
icebp
mov
out
int3
cmp
inc
and
cmp
add
notb
out
aam
sub
xor
add
dec
stos
xor
cmp
push
das
mov
sbbb
xor
je
ficompl
mov
jecxz
xor
xor
push
aad
inc
fs
push
dec
add
loopne
jecxz
les
push
es
pop
lock
adc
hlt
dec
sub
lret
insb
insb
jo
sbb
sbb
std
or
mov
jp
jle
mov
cmp
sbb
pushf
jnp
add
dec
sub
pusha
iret
imul
push
jns
dec
in
or
push
and
push
pop
xchg
jbe
fs
in
daa
xlat
pushf
xchg
ret
cmpsb
sbb
push
jae
mov
or
jmp
pop
sub
cmpsl
rclb
outsl
movsb
imul
xlat
inc
rcrb
out
leave
inc
mov
inc
mov
pop
dec
cltd
push
jl
int3
cmp
gs
mov
mov
cmc
mov
cmp
lea
adc
inc
sub
add
jb
inc
test
cli
jp
stos
test
cmp
pop
insl
lret
cmp
pusha
add
jmp
cmp
push
testb
jmp
dec
pop
inc
adc
aaa
fistps
sub
lods
fsub
sarb
fimuls
sbb
xorl
pop
or
inc
and
inc
jge
pop
icebp
sti
pop
fwait
into
stc
cmpsl
adc
test
sub
movsb
dec
mov
adc
scas
pop
cmc
mov
mov
cli
fisttps
pushf
cwtl
mov
jae
push
scas
dec
or
popa
test
loopne
jae
in
sbb
or
push
jbe
testb
pop
xlat
push
xchg
jecxz
data16
rol
mov
pusha
or
out
mov
mov
pop
xchg
subl
jl
stos
aaa
pop
loop
inc
xchg
iret
mov
mov
pop
outsw
mov
xor
mov
dec
sbbb
movsl
cmpsl
xchg
xchg
dec
cmp
mov
jg
adc
stos
and
or
pusha
jle
pop
inc
mov
dec
xorb
mov
add
sbb
mov
push
movsb
test
mov
dec
out
icebp
adc
sub
xor
dec
lock
shlb
iret
mov
inc
sbb
pushf
pushf
rcll
and
jg
pop
and
pop
lods
adc
mov
test
stos
loope
jne
jbe
push
xchg
cltd
mov
dec
nop
jnp
repz
addl
sub
sub
ret
and
push
insl
into
fmuls
dec
frstor
orl
inc
pop
fisubs
in
stos
adc
jns
or
shl
lea
in
pop
push
test
dec
cmpsl
add
mov
test
mov
pusha
subb
fldcw
and
xchg
cmpsl
stos
icebp
inc
aas
sti
je
xchg
jle
fndisi(8087
add
jb
xor
push
mov
mov
inc
inc
sub
or
fwait
es
adc
jae
jmp
cmp
push
rclb
and
dec
mov
xchg
stc
adc
es
and
dec
push
cld
popa
xchg
and
fsubrl
xchg
ficoml
sbb
sub
adc
adc
and
mov
pop
xchg
sbb
call
rolb
xchg
je
loope
or
push
mov
mov
fucomp
sbb
inc
xchg
sub
and
or
addr16
inc
sbb
test
ss
loope
or
dec
add
outsl
outsl
lock
pop
push
lock
pop
test
lea
dec
xchg
mov
xor
cmp
sbb
cmpsl
mov
arpl
das
and
push
adc
or
inc
push
insl
decl
jb
mov
dec
test
cwtl
cmp
xor
sbb
cli
cmp
clc
stos
fimuls
mov
mov
xchg
lcall
jns
push
lret
mov
ficompl
cld
in
je
pop
nop
cld
cmp
into
mov
out
mov
or
gs
dec
add
sti
dec
push
sub
sub
cmp
xlat
mov
mov
aad
xor
iret
inc
inc
cmpsl
pop
jle
test
inc
cmpl
mov
pop
imulb
inc
fimuls
xorl
xlat
mov
ficoms
leave
int3
das
leave
enter
jge
xchg
fisubl
pop
dec
outsb
mov
cmc
sti
inc
lret
dec
jg
pop
es
add
adc
xor
xchg
lea
fimuls
push
stc
das
inc
cwtl
mov
sti
arpl
adc
cli
leave
popa
jns
lret
and
cli
jg
in
outsb
mov
cld
xor
das
sub
mov
dec
in
inc
cmpl
cmp
xor
aas
xor
fs
push
adc
jge
movq
mov
ljmp
push
stos
sub
cmpsl
cmp
xchg
or
dec
fwait
jmp
test
cmp
cmp
mov
rolb
sbb
cmp
or
jo
iret
xchg
inc
xor
enter
test
cmovl
ret
popf
and
xlat
add
mov
jmp
cmp
and
jbe
sbbl
pop
pop
test
fisubs
sub
clc
dec
sarl
add
std
push
daa
mov
mov
push
loope
xchg
stc
dec
pushf
and
inc
loope
or
pop
push
pop
iret
dec
cs
es
pop
xchg
aaa
pop
cmpsl
xlat
cmp
mov
mov
je
arpl
xor
dec
imul
push
fldt
and
mov
adc
push
pop
mov
rorl
ret
cmp
inc
call
or
fisttpl
arpl
mov
out
shl
repnz
dec
mov
jns
sarb
pop
sbbl
and
stos
and
je
and
movsb
dec
out
test
jmp
popf
pushf
movsl
mov
pop
movsb
pop
in
jp
cmp
sahf
pop
in
aas
dec
dec
aam
movsb
or
stos
push
sbb
adc
xchg
lds
sbbl
push
arpl
push
sub
fists
enter
call
push
cmp
or
iret
and
mov
or
xlat
add
xor
pop
sub
sub
loope
push
gs
mov
cli
pop
xchg
mov
subl
andb
xor
pop
inc
arpl
pop
mov
sbb
nop
imul
cs
push
adc
mov
jb
shlb
hlt
es
out
jmp
cmp
decl
ljmp
inc
jle
shl
daa
pop
or
jb
scas
outsl
fs
loop
or
cli
f2xm1
xor
pusha
mov
pushf
jno
fnstcw
sbb
lods
pop
sub
inc
mov
sub
orb
pop
or
lea
sbb
fldcw
pop
movsb
iret
stos
aad
lods
dec
mov
add
dec
fsubrs
mov
adc
xor
xor
into
inc
mov
cwtl
jne
jle
ficoms
cmp
xor
xchg
mov
out
add
addl
jo
outsl
pop
lods
mov
and
test
aas
inc
xchg
int3
cwtl
jnp
rorb
repz
cmp
xchg
aam
xchg
outsb
jb
pop
addl
sahf
xor
add
cmpsl
movsb
movaps
cmpsl
notb
inc
fwait
sbb
rolb
ljmp
xchg
mov
xchg
add
lods
aad
push
dec
mov
nop
mov
aaa
adc
ret
int
push
nop
sub
xlat
imul
inc
sbb
call
pop
cli
in
sub
jnp
and
pop
repz
or
mov
cs
xchg
imul
push
push
pop
sbb
xor
push
shl
push
jno
stos
ret
shlb
jnp
popf
sub
or
imul
jp
out
into
jns
jecxz
pop
or
mov
outsl
fs
pop
ja
mov
push
mov
les
sbb
rclb
stc
adc
mov
pop
cmc
iret
std
pop
gs
push
ret
push
or
mov
mov
test
fs
outsb
jecxz
pop
mov
test
jmp
addr16
adc
lods
or
ss
or
or
jno
adc
or
or
shll
repnz
xchg
xchg
mov
ds
ja
dec
sbb
sahf
add
test
lea
ret
lea
jno
dec
pop
in
loope
or
out
adc
dec
xor
push
imul
mov
mov
xor
ret
les
mov
lea
jo
divb
push
and
inc
xchg
pop
jb
out
in
das
ds
push
scas
sbb
dec
bound
imul
test
fst
pop
out
xchg
enter
or
xor
into
scas
imul
negb
mov
mov
repz
xorl
mov
mov
sub
xor
out
cmpsb
xchg
sbb
cmp
fidivrl
cli
fistpll
movsl
and
mov
xchg
out
pop
dec
cmp
jo
jns
cmp
ror
fisubrs
mov
jl
cmp
push
adc
push
pop
jge
nop
gs
das
stos
mov
cmpb
cmpsl
test
pop
push
idivb
xchg
mov
fbld
cmpsl
xor
adc
sub
bnd
int
or
test
std
test
ss
inc
inc
xlat
xchg
inc
mov
ficoms
lods
push
push
mulb
cmpsl
jl
add
xchg
or
pop
ja
test
je
shrl
loopne
lods
inc
push
mov
daa
sbb
jmp
dec
aad
inc
pop
cmc
mov
mov
jno
lcall
rcr
or
ja
jmp
xor
into
aam
mov
out
jne
push
test
loopne
cmp
fwait
lahf
in
xor
inc
inc
popf
das
xor
sahf
scas
push
cltd
sbb
xchg
mov
aaa
cmc
push
mov
ret
fldcw
insb
sahf
jecxz
repnz
sub
mov
xchg
orb
sarb
sbb
mov
andb
pusha
and
popa
adc
orb
cmpsb
mov
push
pop
outsb
push
popf
dec
nop
data16
dec
jge
jl
jge
mov
fadd
lock
shl
lret
ja
ds
mov
sub
hlt
mov
mov
add
sahf
inc
jmp
fnstsw
and
cmp
in
xor
adc
mov
dec
pop
mov
mov
and
rclb
lods
mov
imul
js
popa
xchg
lods
ljmpw
xchg
mov
int3
add
lret
lahf
mov
or
lcall
sub
int3
cmp
fxch
xchg
xor
xchg
cs
push
xchg
gs
dec
ja
jge
xchg
aaa
ret
int
jae
jmp
xchg
hlt
adc
push
fs
jl
sti
mov
add
mov
cmpl
mov
test
adc
cmc
sbb
xor
stos
add
insb
sub
cwtl
push
jno
dec
or
repnz
in
inc
pop
inc
int3
es
outsl
sbb
in
xchg
sbb
and
mov
push
ret
in
test
pop
cltd
push
xor
lea
xlat
mov
mov
dec
xor
addr16
jns
dec
mov
aad
imul
xlat
mov
les
xchg
adc
pop
js
mov
scas
dec
iret
adc
jb
cmp
and
or
test
or
inc
jo
cld
jns
out
rorl
pusha
sbb
jp
ljmp
loope
outsb
mov
or
cmp
jbe
sahf
cmp
mov
add
mov
xchg
sub
call
dec
ljmp
dec
xchg
or
call
imul
push
test
pusha
inc
sub
out
xorb
shr
lret
mov
out
mov
sbb
or
mov
xor
xor
dec
test
fs
lods
xchg
hlt
pop
rorl
push
pop
mov
mov
loop
and
sbb
jl
dec
pop
add
rorl
mov
cmp
mov
std
je
adc
das
xor
mov
repz
sti
jns
and
add
scas
cmp
xchg
cmpsb
call
outsb
cmp
ja
negl
test
aad
inc
add
insl
sbb
roll
and
in
pop
popa
aaa
push
shrl
addr16
js
dec
outsb
repnz
push
outsb
jo
xchg
sbb
and
scas
fsubrs
xchg
adc
xchg
cmp
test
mov
cmp
sbb
and
or
pop
push
cltd
jge
push
rcl
pop
decl
inc
mov
mov
xchg
adc
pop
inc
or
adc
fmuls
cltd
std
fiadds
inc
push
sti
mov
cmp
ret
mov
xchg
sbb
inc
mov
cmp
ret
test
push
aad
jecxz
vphadduwq
cmp
jl
cld
add
loop
jo
aaa
mov
scas
out
xchg
jb
into
dec
imul
imul
rorb
ds
or
rcr
mov
mov
rolb
inc
call
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
inc
push
add
imul
mov
bound
pop
bound
enter
sbb
insl
lods
ficoml
push
cvtps2pd
mov
push
shl
aaa
cltd
add
mov
push
mov
or
sbb
fisttps
sahf
xchg
mov
enter
out
add
sub
jbe
inc
enter
loope
lock
data16
push
sbb
pop
adc
mov
test
pop
adc
xchg
mov
scas
pop
mov
jo
pushf
repz
and
push
push
push
ficoms
xchg
mov
push
xor
mov
inc
ljmp
mov
or
enter
pop
ljmp
imulb
or
push
mov
cmpsw
mov
or
fchs
cmp
and
mov
test
jne
xchg
ret
inc
and
and
mov
aad
cld
test
ret
dec
out
jmp
xchg
adcb
jp
mov
test
shlb
lahf
sub
xchg
out
push
sbb
jge
mov
push
scas
inc
push
call
ljmp
sub
call
hlt
adc
js
push
mov
setns
adc
les
daa
cmp
sub
hlt
sub
popa
into
enter
mov
push
mov
loopne
jl
scas
cli
jne
and
es
cmp
mov
inc
cmp
pop
sbb
pop
nop
andps
loopne
mov
and
mov
mov
sbb
loop
sub
mul
mov
mov
arpl
loop
test
mov
mov
xor
xor
bound
jg
xchg
sti
aam
decb
push
scas
or
movsb
pushf
in
sbb
pop
ss
pop
mov
mov
jnp
addl
in
out
inc
adc
call
adc
out
in
jo
shr
mov
or
adc
ret
daa
call
bound
ret
lods
mov
fcompl
scas
inc
dec
int
test
cmp
lcall
mov
incb
out
push
or
pop
rcrb
dec
push
pop
dec
add
dec
push
daa
add
xor
mov
in
adc
xchg
cwtl
andl
in
in
or
push
lea
push
lods
xchg
jmp
pop
mov
mov
lods
je
jnp
jg
sti
sub
mov
xlat
cmp
sbb
pop
out
dec
cmp
ljmp
sbb
adc
dec
out
jmp
pop
ss
das
out
pop
add
push
in
xor
or
orl
sbb
cmc
mov
add
icebp
inc
sub
pop
dec
xchg
add
lret
bound
sbb
int3
xchg
jno
mov
ret
mov
dec
cmp
lea
mov
test
inc
sbb
notl
xor
iret
je
or
pushf
cmp
xchg
adc
mov
jle
ret
jno
mov
stos
jno
fbstp
push
push
sbb
xor
mulb
out
jnp
outsb
pop
andb
test
ficoml
or
sahf
mov
sub
jae
ud2
add
xor
jns
xor
push
lock
adc
xchg
aad
or
mov
ss
jae
ret
ja
xor
push
test
mov
iret
mov
push
popf
pop
shl
inc
inc
imul
push
cmp
adc
repnz
and
cld
cmpsb
and
lret
fdivs
adc
les
inc
loope
mov
ja
imul
pop
icebp
andl
nop
icebp
xchg
sbb
push
data16
scas
pop
inc
mov
bound
in
xor
push
pushf
out
iret
cli
aaa
xchg
in
out
popa
les
push
xchg
inc
jns
loopne
sahf
add
das
lds
dec
mov
loop
call
fildl
jae
fisubrl
pop
mov
std
push
mov
jg
daa
call
dec
mov
jle
ja
mov
adc
sub
push
jmp
stos
divl
adc
jae
cmp
push
ret
cmpsl
imul
sbb
xchg
ret
nop
or
stos
sub
jle
fildl
inc
fsubrl
andl
test
mov
lahf
pop
adc
fisubrl
xchg
pop
sbb
fs
jbe
icebp
lods
xchg
retw
imul
or
push
push
jbe
imul
enter
ds
jne
dec
sub
and
xchg
push
jnp
cmp
push
push
subb
pop
and
cmc
daa
xchg
fsub
in
cli
aam
enter
add
outsb
mov
adc
jecxz,pn
lahf
mov
imul
inc
pop
or
xor
xor
dec
test
icebp
mov
xor
cwtl
movsl
ret
stos
outsb
subb
or
push
inc
leave
mov
sbb
jno
ficoml
loop
jo
jg
inc
pop
in
loope
popf
mov
imul
sbb
mov
or
inc
popf
push
push
ret
dec
movb
addr16
mov
sub
pop
movl
or
push
lcall
inc
outsb
daa
sbb
ficomps
les
xchg
ljmp
hlt
fcompl
and
inc
jbe
xor
test
enter
xadd
clc
inc
inc
fcompl
jp
xchg
pop
push
ljmp
jo
negl
rcrl
sti
cli
jp
ss
mov
popa
mov
sub
enter
pop
enter
mov
lret
push
push
into
popf
dec
mov
mov
loopne
xchg
push
iret
addb
mov
sbb
and
dec
xchg
xchg
out
sbb
pop
popf
dec
popf
push
jb
adc
inc
pop
mov
aaa
cmp
xor
sti
rcl
or
ret
mov
iret
inc
add
aas
push
aad
sti
and
pop
stc
and
mov
mov
scas
enter
mov
inc
ja
fwait
pop
mov
in
ja
icebp
lret
jecxz
out
std
insb
js
cmc
mov
sub
push
das
or
sbb
fstps
sbb
or
cmpsb
in
jbe
xchg
fs
daa
sub
adc
jge
lcall
aad
out
loopne
mov
fstps
dec
fstl
sbb
cmc
mov
cld
xchg
enter
jb
int
fsubr
daa
dec
sbb
mov
outsl
addr16
xor
fsubl
dec
fstpt
mov
aam
lods
ret
xchg
mov
scas
xchg
into
push
jecxz
pop
jae
lret
pop
cmp
xchg
xor
outsl
xchg
cmpsb
push
repnz
add
sub
xchg
loope
lods
and
mov
add
mov
mov
jg
sub
adc
fstl
dec
shlb
and
xlat
inc
dec
repz
sbb
movsb
arpl
push
dec
push
sbb
loop
or
cltd
stos
cmc
insb
fcomip
arpl
cmp
mov
mov
sbb
push
lea
out
pop
mov
dec
stos
jo
jnp
or
imul
dec
addr16
loopne
jb
push
stc
fisttps
bound
mov
nop
icebp
ja
jae
cltd
jae
push
mov
mov
inc
adc
add
inc
rolb
sbb
push
and
sbb
int
pcmpgtd
js
out
inc
dec
mov
stc
sti
test
xchg
lds
fsts
jg
cwtl
sub
cltd
ret
jne
sub
test
xor
test
or
in
fcmovb
push
xchg
aad
mov
inc
lods
push
incb
aaa
push
iret
call
sbb
jo
jp
mov
pop
sub
cmpsb
insb
jae
lods
sbb
lea
in
into
ficomps
js
push
jo
movsb
jle
in
jg
push
push
sub
int3
iret
test
dec
sbb
arpl
mov
xchg
nop
cmpl
loope
xor
sub
and
fldenv
enter
lods
push
xchg
test
dec
test
jge
cmp
pop
lea
and
dec
icebp
fimuls
lret
fisttpl
je
pop
xchg
cs
hlt
mov
lret
dec
mov
std
ficoml
adc
xchg
je
scas
fcompl
jne
insl
adc
es
mov
sub
fcos
inc
insb
sbb
mov
or
xchg
mov
icebp
pop
lahf
dec
shlb
fisubs
out
mov
dec
fidivs
push
push
pop
std
aas
sub
and
xacquire
xlat
lret
cmp
pop
mov
sbb
fwait
sub
jne
mov
jne
out
mov
jmp
inc
adc
sbb
dec
js
testb
aam
add
les
pop
adcb
imul
int
bound
mov
push
clc
outsb
rcr
add
std
dec
adc
popa
push
scas
xchg
mov
pop
push
scas
xor
imul
test
xorb
mov
popa
cmc
movsl
xor
xorb
scas
ja
test
loope
aam
adc
or
adc
les
add
push
aam
add
jae
push
pop
or
pop
mov
ljmp
fnstsw
bound
mov
jecxz
rcll
add
xor
outsb
inc
sub
repnz
pop
call
fs
or
xor
lret
sbb
repz
dec
mov
sub
idivb
dec
inc
mov
sbb
xchg
and
dec
mov
data16
in
adc
mov
insl
mov
in
xchg
push
jle
movsb
lret
sarl
test
sub
xchg
cltd
mov
lcall
shll
jmp
daa
cmpsl
pushf
rcrb
mov
das
cld
mov
divb
addr16
sti
or
clc
imul
mov
push
mov
xchg
mov
scas
mov
mov
or
xchg
lock
test
imul
mov
pop
xchg
cmpsl
cmpsb
test
int
add
mov
addr16
stos
jo
gs
out
aas
es
daa
pop
out
mov
cmpb
and
sahf
mov
les
mov
add
nop
rcll
inc
aam
nop
in
cmp
pop
cmp
lahf
mov
bound
fmul
push
lret
xchg
out
add
scas
ret
arpl
rcl
push
shl
or
inc
pop
idiv
xlat
ret
subb
xchg
int3
icebp
pop
xchg
test
inc
stc
incl
mov
xor
je
push
int3
addl
daa
sti
adc
and
fidivrs
fcomps
or
bound
push
lods
dec
push
gs
dec
pop
jmp
mov
and
stos
pop
sub
std
mov
mov
gs
jne
jl
ljmp
scas
out
gs
testb
adc
sub
notl
pop
aas
sbb
inc
adc
mov
fisubl
ljmp
sbb
sbb
mov
out
inc
mov
mov
ss
stc
push
stos
pop
mov
shlb
jge
ds
ret
cmp
mov
jnp
insl
lahf
dec
fnstcw
ret
psrlq
add
jge
loopne
push
mov
outsb
stos
test
dec
repnz
fildll
loopne
mov
jecxz
cmpb
aas
adc
or
inc
push
cmp
adc
jl
pop
pop
hlt
push
cmp
pop
insl
std
mov
jge
jg
push
jne
fiaddl
add
lret
movsb
lock
dec
xchg
aas
test
leave
cmp
pop
stos
cld
jmp
cltd
sbb
je
and
push
fadds
mov
test
fwait
adc
mov
pop
mov
pop
jo
ds
nop
aaa
jmp
stos
add
mov
and
sbb
and
daa
mov
imul
mov
jmp
or
fisttpl
and
sbb
leave
es
mov
lock
mov
rcl
jp
scas
xchg
test
iret
adc
dec
jg
fmuls
in
add
xchg
push
xor
sub
mov
dec
cmp
xchg
sbb
iret
mov
push
pop
lret
int
or
jecxz
adc
dec
jnp
mov
dec
mov
roll
mov
cmpsl
add
xchg
sub
shrb
int3
sub
sbb
int3
rcrl
pop
or
popa
cltd
xlat
xchg
fsubr
in
pop
arpl
jae
fsubl
jno
call
inc
cmp
sub
lret
clc
xor
lds
mov
pusha
stos
push
mov
arpl
or
cmp
xchg
sbb
rorl
daa
out
lods
or
dec
mov
bound
and
push
cmp
xor
iret
xor
mov
add
addr16
push
popa
rclb
add
rorl
fisubrl
add
mov
jno
stos
and
sub
in
inc
xchg
aaa
cmp
sub
mov
pushf
mov
mov
jne
scas
mov
pusha
repz
sahf
sub
cmp
jle
fistl
in
xchg
les
adc
aas
fs
ss
fcomps
add
pop
bnd
sub
and
sbb
stc
fdivrp
repz
push
popf
lret
mov
mov
dec
faddl
cmp
out
jle
xor
into
xor
or
insl
cs
and
pop
push
test
sahf
iret
mov
mov
test
dec
dec
icebp
in
and
and
les
ljmp
jmp
fdivrs
aas
pop
test
sbb
rclb
inc
ds
and
inc
mov
jmp
dec
cltd
clc
stc
or
cli
aam
movsb
ja
mov
add
pop
orb
dec
push
mov
mov
ds
mov
lahf
sbb
cmpsl
xchg
lcall
shr
mov
fistl
jo
and
test
rcl
outsl
push
xor
mov
sub
cmp
lcall
cmc
cmc
pushf
xor
mov
test
cmp
mov
inc
mov
adc
lcall
jg
cmp
dec
fisubrl
mov
test
pop
sbb
add
imul
imul
sub
lcall
sbb
mov
mov
dec
jo
push
call
jmp
test
pop
in
cwtl
push
xchg
stos
sahf
mov
xchg
popa
sub
mov
xchg
out
addr16
push
movsl
xchg
jbe
lds
fstps
lcall
fistps
insl
jmp
adc
test
inc
fwait
insb
jmp
mov
fstl
psubsb
push
pushf
les
xlat
mov
das
push
dec
aaa
sahf
sahf
test
les
out
jae
mov
sbb
add
push
xchg
push
mov
dec
pop
push
dec
inc
xor
adc
jbe
xor
lods
push
int3
jae
lock
sbb
sbb
mov
mov
jl
push
xchg
jl
mov
push
imul
sbb
inc
imul
lcall
insl
sub
jnp
sub
test
lcall
sahf
inc
sar
adc
adc
xorl
mov
cmp
mov
mov
pushf
mov
arpl
mov
inc
gs
and
sub
mov
insl
aaa
negl
inc
xchg
cmp
ljmp
fs
dec
lcall
push
ss
and
push
mov
loope
clc
into
xor
pop
jge
pop
cmp
sarb
adc
mov
aad
in
mov
ret
movsb
leave
cli
dec
out
andl
cltd
jl
inc
inc
jne
cld
jb
mov
push
sbb
stos
ss
aaa
out
cld
fdivrl
xchg
xchg
and
imul
call
in
data16
cmpsl
movl
lods
outsb
sub
dec
lret
push
fcmovne
jae
push
sar
lods
cltd
loopne
lahf
fwait
add
lret
popa
sub
xchg
cmp
in
mov
es
mov
fwait
int
stos
shlb
push
push
std
xchg
aas
jl
cli
int
sbb
cltd
mov
mov
xchg
orl
stc
enter
cmp
add
fsubr
inc
mov
shll
popa
arpl
sbb
ret
sbb
orb
cmc
call
test
add
mov
call
inc
das
xchg
mov
inc
imul
push
cmp
add
xchg
outsl
aaa
enter
lea
xchg
xchg
rcrl
mov
stc
jl
lret
leave
cmp
xor
mov
aas
sbb
add
lret
dec
loop
dec
fiaddl
in
jb
in
popa
and
add
popa
adc
jno
or
lea
mov
call
jo
sub
shl
test
pop
cmp
lret
arpl
mov
leave
pushf
inc
imul
addr16
mov
dec
xchg
notb
xor
rorb
addb
mov
push
xlat
push
popa
bound
xchg
xor
mov
cmpsl
jmp
and
aaa
xchg
cmp
sbb
mov
or
repz
loope
mov
pop
js
popf
cmp
pusha
pushf
sbb
int3
mov
repz
lret
push
and
std
psllq
arpl
mov
push
stos
push
shll
pop
mov
fcmovnbe
cmp
enter
out
push
ss
push
into
push
sti
xchg
je
pusha
mov
inc
pop
mov
adc
repnz
mov
mov
data16
cmp
outsl
mov
lcall
pop
inc
das
inc
push
add
mov
hlt
pop
lcall
dec
pop
mul
loopne
fs
inc
into
lock
mov
push
push
pop
xor
mov
jmp
sbb
je
jbe
inc
sub
ret
movsl
lds
xchg
movsb
mulb
cld
mov
add
cmp
mov
popf
loope
xchg
pop
cmp
inc
jns
es
xchg
xor
dec
inc
das
jae
cli
pop
sbb
cs
cmp
inc
and
adc
xorb
jmp
cmc
inc
pop
lods
jnp
sub
add
test
imul
pop
loope
push
cmpsb
scas
icebp
mov
add
mov
cmp
daa
cmp
iret
pop
repz
sbbl
pushf
pop
xchg
mov
sub
push
test
gs
sub
xlat
sub
in
inc
out
jne
out
or
jae
dec
sti
push
push
add
out
xor
mov
jno
mov
adc
pop
inc
add
flds
push
call
mov
xor
adc
add
mov
lret
jns
and
fcmovnb
adc
dec
sub
repnz
rorb
outsl
add
dec
add
adc
xor
push
neg
inc
vzeroall
fsubrl
jne
pop
sbb
xor
sub
dec
loope
mov
or
push
jnp
cmc
aad
stc
fs
les
adc
push
mov
lods
es
es
loop
xor
es
out
pushf
test
aas
iret
cmp
adc
or
movsl
jno
fsubr
xchg
fisubs
mov
shrl
mov
pop
mov
xlat
xor
lret
and
cmpsl
push
mov
xor
jno
rolb
xor
or
pop
in
daa
xchg
lock
leave
aad
mov
stos
cld
mov
push
pop
ja
out
mov
xchg
xor
xlat
test
and
lods
fcmovu
add
cmpsb
sub
push
push
jmp
xor
fcmovne
repnz
cmpsl
test
cmovne
into
testb
add
mov
adc
mov
call
lods
iret
in
mov
insb
sub
dec
cli
jl
in
lea
sub
movsb
xchg
iret
cmpsl
in
push
push
mov
insb
cltd
gs
xor
sbb
mov
or
sahf
jl
mov
cld
xchg
add
rcrb
jns
in
mov
call
daa
mov
in
in
ror
ret
mov
add
mov
dec
leave
add
in
push
insl
std
jbe
jg
in
jmp
je
sbb
je
int
pop
sub
lahf
sub
aas
jbe
dec
repz
imul
cli
and
mov
jae
nop
mov
xor
dec
mov
push
call
icebp
ret
sub
jmp
sti
mov
sbb
mulb
lds
pop
mov
mov
out
aas
or
leave
jmp
inc
push
adc
icebp
pop
jbe
mov
or
sub
mov
jbe
loop
int3
mov
sbb
rol
lods
xchg
mov
xor
test
inc
std
out
mov
pop
fdiv
imul
in
push
fsubr
aaa
mov
adc
jmp
jle
mov
fimuls
and
sarl
lcall
out
mov
xchg
fcmovne
push
hlt
cmp
and
sbb
mov
call
sub
cld
xchg
push
mov
cmc
xlat
adc
push
lods
add
jne
out
or
lds
out
insb
pop
xchg
cmp
pop
stc
out
pop
ret
test
push
aam
mov
shlb
fmuls
jg
sbb
lea
lods
fisubl
pop
dec
pop
incb
cmpsb
mov
cmp
lds
cmp
jmp
inc
adc
xor
jno
add
ss
xchg
repz
jg
loop
pop
pop
sbb
pusha
inc
and
test
pop
mov
fsubrp
mov
inc
pop
ds
lock
loope
mov
outsl
les
adc
cmc
jecxz
outsl
shll
lahf
and
fidivrs
lea
jmp
mov
sbb
push
lcall
ljmp
cmc
mov
lret
xchg
adc
fnsave
or
cld
lods
push
xor
es
scas
sbb
ret
mov
dec
popf
pop
sbb
xor
sar
inc
std
fidivs
loop
sub
insl
popa
lock
and
fildl
sub
cs
or
test
in
jmp
pushf
rcll
add
push
pop
cmp
imul
ds
pop
fidivs
lea
daa
sub
adc
fs
in
xor
inc
xchg
mul
xor
clc
jge
xor
cld
cmpl
stos
rol
scas
test
jo
inc
mov
inc
clc
es
stos
jg
cld
lahf
cmc
outsb
sub
lods
push
in
loope
mov
lea
cmp
add
inc
mov
sub
sti
int
pop
sub
inc
xorl
hlt
cmp
mov
inc
pusha
and
xor
pop
jg
mov
outsl
fwait
xor
icebp
mov
mov
aaa
shl
test
into
out
arpl
jg
pop
and
stos
or
and
xchg
jno
mov
mov
pop
sbb
aas
jmp
mov
mov
jno
push
es
dec
lret
xchg
cmpsl
sbb
push
xor
sub
push
adc
pcmpeqw
fnstcw
mov
mov
sub
push
or
in
push
mov
xchg
dec
test
mov
mov
push
fisttps
mov
and
xchg
pop
mov
inc
jnp
sbb
cmpl
jae
imul
lcall
repnz
cmpsb
mov
adc
add
addr16
and
jae
adc
pop
pop
leave
cmpsl
pusha
add
mov
jne
imul
rolb
fwait
jmp
sub
or
sahf
mov
pop
push
push
loopne
shll
das
lret
lock
dec
xor
or
push
mov
test
mov
jns
push
sub
fmull
sbb
inc
sbb
mov
mov
jb
shrl
lahf
sub
mov
roll
push
jnp
ja
or
and
mov
fwait
iret
inc
sbb
sub
adc
sbb
xchg
rcl
adc
rcll
sarl
or
cmc
rcl
xor
fsubrl
add
ficomps
xor
clc
or
outsl
bound
popf
call
xchg
xchg
cmp
sub
outsl
loopne
adc
ret
rol
or
add
imul
jb
out
push
sub
mov
push
test
lock
out
xor
icebp
mov
push
imul
loop
dec
mov
mov
jae
in
inc
or
lret
add
push
xchg
xor
pop
cmp
std
rcrl
jg
mov
adc
lret
iret
icebp
mov
imul
mov
mov
add
pop
add
sahf
jnp
jp
push
fisubl
decl
dec
adc
addr16
cwtl
lcall
cmp
fadds
add
icebp
into
testl
lea
out
cs
popf
push
ret
or
pop
pop
loopne
into
dec
dec
insb
xor
mov
sbb
adc
std
insb
ret
xor
and
xchg
popf
ret
outsl
jns
ss
icebp
sbb
mov
push
in
add
mov
cmp
out
adc
gs
cmp
or
nop
jecxz
lahf
jnp
and
and
dec
pop
sti
dec
xchg
push
inc
xor
inc
inc
out
sub
add
lahf
in
into
or
insb
mov
int3
sbb
lahf
in
call
mov
imul
incb
mov
push
inc
jg
xchg
xor
add
sbb
test
mov
push
lea
xchg
outsl
lgs
or
mov
notb
add
out
cmp
jnp
incb
jnp
inc
pop
mov
fnstsw
aaa
addb
xor
and
xor
mov
sub
jmp
pop
lods
add
pop
cli
nop
stc
into
inc
xchg
out
adc
imul
test
out
add
sub
cli
jne
je
sarb
mov
test
jno
jb
lahf
popa
std
pushf
out
cmpsl
and
leave
push
loope
adc
fs
mov
cwtl
shrb
mov
pop
dec
ljmp
or
addl
loopne
outsl
cmc
sti
dec
lahf
nop
pop
out
inc
test
test
mov
fisubs
in
pop
pop
idiv
lret
and
push
xchg
dec
rorl
mov
mov
in
fstpt
outsb
mov
add
jns
push
or
stc
ror
jle
cld
cmc
push
scas
js
lds
push
mov
lret
pop
roll
jne
xor
cmc
dec
or
dec
cmpsl
int
xor
push
shll
rol
cmp
xchg
sbb
fdivs
cmp
dec
sub
bound
leave
jl
jp
scas
enter
pop
enter
not
xchg
ret
cmp
js
dec
dec
mov
stos
mov
int3
xchg
xchg
and
shll
dec
cmp
fildl
xchg
jmp
aam
cmp
adc
mov
ss
arpl
stc
aas
test
jae
stc
daa
test
xor
outsb
xchg
jae
fisubrs
imul
pop
sub
inc
mov
and
add
adc
mov
dec
aas
xlat
push
dec
jbe
fwait
vminpd
test
andl
cli
shrl
loopne
and
add
mov
add
inc
icebp
mov
cmp
nop
mov
leave
push
cmp
call
loopne
and
jnp
and
gs
push
inc
dec
xor
pop
mov
or
dec
mov
jle
clc
xor
andl
and
icebp
or
shll
inc
add
push
xlat
mov
mov
dec
cmp
fldenv
icebp
and
in
jbe
bound
aam
roll
in
jns
movb
add
aam
add
out
cs
imul
daa
lods
dec
sahf
loopne
nop
daa
mov
aam
movsb
mov
decl
test
sti
add
or
aad
inc
adc
add
scas
jno
notb
xchg
pop
fxch
ret
popf
and
cli
dec
jne
xlat
jmp
pop
jbe
sub
inc
mov
inc
mov
imul
add
cltd
push
pop
notb
jne
xchg
gs
sub
fwait
xlat
and
add
emms
jge
fs
mov
incl
and
addb
outsb
mov
loopne
scas
inc
in
cmp
xchg
mov
bound
or
dec
rolb
pop
pop
dec
sar
sbb
lahf
ss
out
outsb
mov
test
push
push
or
ja
in
push
icebp
dec
imull
xchg
mov
xor
dec
jmp
push
dec
adc
add
mov
mov
dec
sub
xchg
fstpt
imul
repz
nop
inc
add
pop
repnz
pusha
jge
ret
fcmovb
add
pop
xchg
stos
cld
out
jmp
or
in
and
hlt
xlat
insb
mov
and
inc
mov
cmp
iret
dec
xor
push
in
jnp
mov
xchg
cmc
mov
jmp
ret
inc
ret
inc
je
js
push
ss
inc
stos
mov
cmp
fsts
outsb
lods
mov
cld
movsl
mov
xor
setno
lea
xchg
mov
cwtl
jb
in
mov
aad
pop
xchg
jnp
lahf
clc
std
scas
popa
jle
loop
jg
mov
mov
xchg
fimull
pop
imul
sbb
pop
adcl
ja
sub
jb
mov
jmp
movsb
icebp
es
jp
pop
dec
outsl
in
mov
fucomi
xor
mov
xchg
ljmp
shll
push
int
int3
fwait
lock
dec
scas
push
cmp
out
fwait
out
fdivr
gs
repz
jb
repz
adc
and
sbb
lret
mov
sbb
xchg
cmpsb
inc
push
cwtl
push
push
pop
mov
lret
push
or
or
pop
mov
adc
mov
add
pop
dec
dec
orl
push
mov
cltd
insb
mov
mov
sahf
push
hlt
adc
push
inc
gs
mov
jnp
inc
pop
in
in
test
fwait
push
jns
xor
pop
or
mov
or
or
aad
das
mov
dec
lret
ljmp
mov
test
dec
scas
push
xorb
jb
mov
dec
xor
les
push
cmp
mov
and
mov
pop
enter
in
adc
subl
push
inc
and
jg
shrb
cmp
and
add
js
mov
add
adc
sbb
aas
stos
leave
sub
and
sahf
inc
mov
shlb
xchg
in
cmpsl
push
mov
into
xchg
cs
ja
arpl
fisubrs
xchg
mov
mov
push
arpl
iret
cltd
aaa
xor
pop
lahf
push
mov
dec
mov
or
mov
iret
add
xchg
adc
and
cli
xchg
cmp
dec
arpl
mov
stos
xchg
ret
stos
jae
ret
pop
notl
or
jbe
xchg
movsb
pop
mov
xchg
xchg
test
cld
xchg
cmpsl
aaa
lock
stos
pop
setno
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
orl
inc
ret
push
mov
sub
sbb
mov
mov
add
mov
dec
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
mov
movl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
dec
mov
xorl
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
orl
push
sbbl
push
push
andl
lea
push
notl
push
xorl
jmp
movsb
xchg
sub
out
arpl
arpl
push
sbb
cmp
bound
mov
out
or
loope
adc
repnz
jns
cmp
push
addr16
push
test
add
and
sub
pop
jne
aaa
pop
fstps
push
lret
ss
orl
outsb
gs
push
or
sub
xor
xchg
loop
push
out
inc
jno
lret
fwait
rol
addr16
mov
lock
jne
int3
in
in
push
rorb
add
out
scas
stos
pusha
imul
nop
xor
sahf
xchg
fsubl
pop
in
dec
pop
pop
mov
push
fsubrs
and
pusha
sahf
cld
pusha
or
std
add
subb
push
push
test
adc
push
in
test
jbe
dec
sbb
inc
in
pop
push
stos
dec
add
mov
cld
xchg
jo
aaa
stos
loop
and
cmp
lock
mov
out
cs
cmp
pusha
sub
and
jno
aad
int3
out
dec
add
add
lret
cmp
and
inc
int3
inc
pop
cmpsl
loope
test
ja
repz
fldcw
inc
jecxz
fstpl
push
ret
fwait
insl
outsb
popa
sub
ret
or
mov
push
mov
inc
lock
int3
cwtl
inc
push
mov
sbb
popa
adc
repz
gs
ljmp
icebp
push
inc
scas
les
pop
cmp
sbb
hlt
sbb
dec
idivb
or
xor
loope
sub
xor
xlat
push
xchg
and
xchg
rorb
outsl
cltd
mov
jmp
cmp
int
adc
pop
lcall
hlt
dec
enter
fdivrl
pop
pusha
stc
adc
cmp
lds
insl
mov
into
and
pop
xchg
xchg
mov
fimuls
push
xchg
popf
cli
roll
dec
sti
fidivrs
xchg
sub
jnp
leave
clc
xlat
pop
sub
lret
fldl
fidivl
insl
sbbl
push
pcmpeqb
sbb
jge
jl
jmp
andb
adc
mov
jp
mov
lret
add
in
sarb
sbb
push
es
pop
lods
loop
pop
ja
push
jmp
mov
jno
test
sbb
and
fs
push
xchg
cmp
xchg
inc
popf
or
push
pop
stos
pop
pop
rclb
xor
aad
rcrl
outsl
mov
sarl
subl
add
out
lret
add
vpunpckhdq
jmp
test
cmp
or
enter
fidivs
sbb
dec
push
cmpsl
pop
imul
jl
push
fbstp
sahf
add
or
test
mov
out
stos
aaa
mov
push
popa
mov
sub
jo
sub
cmp
lret
in
add
xchg
loop
insb
mov
clc
ljmp
bnd
adc
pop
mov
sub
je
scas
addr16
std
imul
fnstcw
cmp
dec
cs
orb
pop
dec
popa
sbb
popa
shlb
dec
call
fcoml
aaa
mov
push
xchg
repnz
push
dec
xchg
callw
jns
and
or
clc
aam
int
add
icebp
dec
adc
add
xchg
sahf
adc
and
ljmp
and
insb
jge
imulb
mov
push
mov
rorl
cld
cmp
sbb
xchg
adcb
mov
imul
stc
pop
inc
pushf
xor
mov
arpl
jns
inc
nop
lods
or
call
pop
nop
push
inc
aaa
add
movsl
movsl
pop
es
mov
addr16
hlt
clc
add
mov
push
cmp
cmp
test
out
dec
jge
enter
jge
das
cwtl
shlb
out
cld
adc
stc
mov
mov
lods
jg
add
xlat
and
loopne
fimull
adc
xor
xchg
fsqrt
mov
clc
dec
pop
movsb
jns
outsb
repnz
xchg
dec
jp
pusha
xchg
loopne
pop
bound
fstps
dec
lea
xor
rolb
imul
rcl
cwtl
xchg
jae
inc
mov
pop
test
adc
adc
fwait
jne
adc
jnp
push
mov
imul
sub
jle
dec
sub
scas
insl
cmp
je
lods
fidivrl
daa
leave
mov
inc
loopne
sbb
sub
aam
ss
clc
int
in
mov
add
cmpsb
mov
inc
mov
and
xor
sub
idiv
faddl
pop
xlat
mov
cld
push
out
das
cmp
aas
cwtl
push
in
pop
jne
jmp
pop
push
push
js
dec
lods
aas
mov
fiaddl
ljmp
mov
push
addr16
dec
gs
das
test
pop
mov
es
jle
jb
pop
in
xor
loope
inc
push
movsb
in
and
lds
jae
imul
lods
cmpsb
enter
imul
mov
inc
stc
pop
jmp
pop
mov
mov
fmul
and
cmp
gs
in
dec
leave
inc
jg
mov
aaa
xchg
mov
jl
mov
xor
aaa
add
js
mov
push
test
cmp
or
xchg
and
mov
push
lock
bound
adc
add
cmp
ss
bound
adc
orl
add
mov
add
in
push
cmp
cmpsb
jmp
imul
pusha
cmp
scas
fbld
mov
sbb
fisubrl
lods
mov
movsl
or
aad
jp
push
pusha
outsl
mov
or
int
push
xchg
fmuls
lea
inc
out
es
dec
or
rolb
jl
push
pop
fcmovnbe
clc
mov
xorb
add
cli
fcomp
pop
ss
ror
push
out
add
pop
loop
dec
fs
xor
adc
mov
push
mov
idivl
pop
sahf
jecxz
mov
push
out
cmp
data16
aad
hlt
xchg
stos
add
mov
pop
enter
loope
ret
sub
cld
pop
push
cmp
add
cmc
mov
cmpb
mov
arpl
mov
loope
sbb
rolb
or
mov
sub
enter
orb
inc
pop
jb
fwait
shrb
sbb
mov
leave
imull
xchg
cmc
adc
jae
std
xlat
sbbb
push
stc
fstl
add
push
dec
nop
lods
xor
pop
mov
js
adc
or
and
adc
push
mov
add
and
inc
data16
lcall
mov
xor
add
adc
out
mov
sahf
inc
jo
or
mov
cmp
inc
bound
movsb
jp
into
mov
in
pop
ss
fiaddl
cld
aaa
arpl
cmpsl
jne
shrl
push
mov
movsb
std
stc
int
out
push
int3
push
test
dec
test
aas
dec
push
cmp
sub
mov
loopne
imul
mov
test
add
js
popa
xchg
mov
in
comiss
fnstenv
inc
test
xchg
loop
add
jp
dec
push
and
add
cs
lods
or
aaa
pop
fdiv
and
or
cli
xchg
cld
and
or
movsl
pop
loop
or
pop
setbe
sub
repnz
insb
mov
sbb
xor
mov
lds
xor
xchg
push
fisttpll
int
xchg
pop
test
inc
dec
sbb
mov
aas
sub
adc
pop
fld
cmp
sub
out
stos
push
into
push
outsb
subl
loop
push
test
mov
inc
push
push
int3
sub
aam
and
imul
adc
jle
arpl
add
stos
add
movsb
loope
jae
push
repz
add
jnp
scas
aam
adc
adc
mov
cmp
mov
idivb
inc
out
inc
imul
adc
sub
clc
xchg
jb
dec
ret
lea
cltd
bound
ss
sub
sbb
or
or
cmpsl
iret
adc
jle
in
jle
fmull
xchg
pop
jl
sub
jnp
cmp
fs
pop
in
xchg
push
js
ds
adc
push
aad
or
rolb
sbb
and
test
mov
push
fisubrl
out
aad
aaa
call
fsubs
and
fst
or
xchg
push
dec
jne
shlb
cmp
subl
mov
or
and
fistps
adc
movsb
insl
or
out
ret
cmp
xchg
fistpll
test
imul
mov
loop
ret
out
call
stos
mov
test
fisttpll
in
das
int
cli
jb
cmpsb
inc
dec
loopne
mov
cs
xor
sub
loope
loope
into
and
jl
pop
push
jp
jb
jns
repnz
dec
subb
and
addr16
xchg
jl
movsl
dec
aas
pop
and
addr16
add
aas
jle
jo
push
test
rcr
mov
jmp
fisttpll
dec
gs
xlat
jb
sub
adc
mov
out
dec
push
xchg
xchg
mov
inc
ss
insl
test
jno
inc
xchg
outsl
dec
push
adc
push
aad
mov
repnz
nop
mov
xchg
adc
pop
aam
xor
xchg
fcoml
sub
push
adc
arpl
stos
adc
outsb
jle
or
dec
es
cmp
mov
in
jae
scas
lds
cmp
mov
movsl
mov
xorb
lret
call
add
dec
ljmp
sbbb
gs
mov
imul
ffreep
push
push
cmp
scas
addr16
clc
not
jl
sub
sarb
cld
scas
repz
clc
insb
dec
and
lds
in
xor
iret
cmpsb
push
mov
sbb
cld
push
add
xlat
cmpsb
ret
fcmovnbe
cmp
enter
fwait
push
test
xor
pop
jnp
aam
scas
fdivrp
cwtl
ja
mov
ja
and
mov
pop
fildl
aaa
inc
mov
xchg
test
xor
or
pushf
cmp
mov
int
in
mov
inc
stos
dec
inc
cld
xchg
push
out
sbb
jmp
lods
out
push
icebp
and
sub
sbb
lock
or
cmp
ljmp
fmul
add
sbb
pop
adc
jae
repz
and
movsl
mov
push
lret
xchg
jne
sub
ljmp
xchg
mov
push
xor
imul
cmpsl
mov
leave
add
test
dec
clc
inc
sti
pop
daa
sbb
cmp
mov
inc
jge
pop
and
push
pusha
fwait
xchg
and
xor
movsb
mov
sub
imul
popf
packsswb
adc
mov
pop
arpl
jle
int
test
lret
out
mov
cmp
mov
pushf
xchg
arpl
mov
cmc
pop
ss
mov
mov
ror
lret
insl
decb
lock
lahf
mov
dec
push
mov
mov
arpl
jg
pop
xchg
popl
fnstsw
add
add
stc
aad
pop
or
sbb
cwtl
ds
pop
cmp
xlat
aam
je
mov
pop
mov
adc
fistpll
cld
sub
jp
cmp
cmp
aas
push
push
push
xlat
sub
scas
loopne
sub
das
xlat
jae
cmp
push
fcmovb
cmp
and
fucom
sahf
add
dec
mov
repz
je
adc
dec
addr16
in
and
mov
scas
dec
orb
enter
push
loope
fbstp
mov
jle
aas
repz
dec
and
lret
xor
adc
lret
mov
jne
dec
loopne
out
dec
adc
sbb
lds
xor
test
inc
arpl
cmpxchg
mov
inc
mov
push
loop
push
jbe
mov
dec
mov
xchg
rcrl
jle
fs
xchg
rolb
sbb
movsl
xor
xor
insb
mov
popf
cmpsb
jne
test
xlat
pop
dec
iret
int
in
cld
out
popf
testl
shll
or
movsb
lret
icebp
aas
sbb
xchg
xchg
xor
jo
jmp
cltd
ja
out
dec
jnp
add
cmp
addr16
jle
scas
xchg
add
pop
mov
pop
adc
inc
mov
mov
mov
enter
pop
sar
jns
mov
xor
idivb
sarb
jb
or
mov
into
nop
mov
xorb
call
mov
push
fs
in
pop
cmp
and
repz
sub
rcll
pop
mov
lock
mov
adc
jg
pop
imul
jle
out
push
insl
jecxz
xor
mov
pusha
lock
pop
jle
and
outsl
lret
in
cmpsb
pop
je
bound
and
sub
fdivr
ret
mov
icebp
jl
cmpsb
imul
adc
out
rclb
mov
xchg
aaa
inc
popa
lock
sub
les
xchg
scas
sahf
test
js
inc
jmp
hlt
les
rcl
pop
lcall
cmpb
sub
jbe
and
adc
jecxz
ret
jg
shlb
and
nop
inc
jne
push
idiv
lea
pusha
push
jnp
addr16
xchg
mov
or
sbb
cmp
push
cmp
mov
fistl
subb
jle
out
inc
loopne
imul
int
aaa
fadd
xchg
mov
cmp
mov
cld
dec
sub
outsb
dec
out
fsts
insl
pop
iret
inc
and
sbb
cld
dec
outsb
cmp
push
inc
mov
mov
xor
mov
mov
jo
sbb
xchg
push
pop
loope
sbb
jnp
sub
mov
aaa
repnz
push
sub
repnz
rcrl
icebp
adc
sarb
mov
push
std
icebp
xor
cld
mov
ret
lock
sbb
icebp
gs
mov
mul
aas
mov
fdivrl
mov
xor
subl
inc
mov
mov
adc
mov
mov
xor
inc
mov
jb
add
mov
mov
into
movsb
and
ljmp
int3
sbb
mov
inc
xor
mov
xor
dec
pop
adc
repnz
iret
sub
fimuls
int3
mov
inc
fdivrs
mov
outsb
repnz
mov
mov
scas
fimuls
lret
scas
sub
or
in
inc
out
into
jmp
repz
sub
out
in
sti
sbb
fldcw
jo
cwtl
std
add
out
add
cltd
cltd
cmpsl
arpl
andl
subl
iret
sarl
sub
aas
mov
push
inc
das
push
loop
and
pushf
outsb
sbb
outsl
lahf
and
je
push
testl
lahf
sbb
push
jmp
in
push
jbe
mov
pop
mov
mov
fstl
xor
fimull
int
outsb
adc
pop
aaa
out
daa
sub
jmp
dec
pop
test
test
push
movsl
cmp
lahf
mov
pushf
add
adc
fwait
mov
pop
jns
xchg
and
mov
aas
inc
mov
sub
inc
pop
imul
orb
pop
cmpsl
test
mov
sbb
dec
fisttps
jl
fadds
or
push
ja
hlt
xchg
shrb
jno
xchg
icebp
icebp
sbb
aaa
dec
xchg
jno
cmp
and
in
xor
popf
mov
push
repz
outsb
dec
insl
movsl
adc
mov
loopne
movsl
ret
pop
xor
jmp
jp
int3
or
cwtl
test
and
jae
mov
cmp
pop
and
and
add
in
shrb
or
insl
xchg
fildll
repz
jae
dec
inc
cmp
xor
orl
lret
in
ljmp
daa
shll
mov
pop
xchg
sbb
mov
out
bound
sub
mov
add
daa
stc
mov
or
push
enter
jne
lahf
xor
sub
xchg
push
xor
or
and
cmpsl
pop
gs
cmp
mov
leave
jmp
add
test
loopne
dec
or
adc
add
outsl
xor
test
jne
push
mov
jns
pusha
and
mov
and
cld
les
adc
jb
add
daa
and
pop
pop
mov
jecxz
int
mov
ss
test
iret
in
mov
jbe
inc
xlat
push
and
mov
fimull
iret
hlt
mov
jnp
std
fsub
push
mov
cld
push
cmp
mov
dec
stos
int3
int3
sub
pop
jge
lea
bound
cmc
mov
stos
popl
or
pop
sbb
jns
mov
scas
jle
fidivrs
clc
ret
push
xchg
cmp
or
addr16
ljmp
sub
pop
jno
repnz
je
cmc
push
cmp
lahf
jecxz
inc
dec
sar
or
pop
jge
mov
push
sbb
in
push
jns
js
pop
sub
repnz
sbb
xchg
test
mov
sub
mov
or
xchg
pop
cmp
pushf
sti
xor
xor
inc
roll
xchg
fmull
sbb
jb
inc
insb
mov
test
xor
sub
add
sub
cmpsb
fs
and
sub
into
fdivr
pop
jge
mov
cmpsb
and
inc
out
aam
subl
jnp
dec
fs
push
pop
into
sub
dec
ja
push
push
xor
jnp
mov
adc
aas
pop
enter
out
inc
jbe
out
xchg
push
mov
into
hlt
or
xor
cltd
mov
mov
jb
cmp
stc
jmp
push
jp
add
dec
cmp
leave
lcall
in
adc
lods
cmp
fadd
daa
pop
xor
mov
push
roll
dec
push
push
in
mov
sbbl
sbb
or
cmc
mov
insl
pop
movsb
addr16
bound
mov
jb
inc
dec
cld
mov
xchg
das
inc
push
and
sar
xor
add
sbbl
andb
sti
xchg
pushf
popa
test
mov
rorb
repnz
addr16
fsts
aam
xchg
jnp
ja
lock
cmp
push
notb
roll
ja
iret
push
adc
test
into
fstp
inc
sbb
mov
mov
xchg
jecxz
addl
aam
out
push
outsb
inc
push
sbb
xor
dec
mov
pop
dec
adc
cmp
imul
pusha
rcrl
jae
or
sub
cmp
or
fsubs
iret
cmp
jo
dec
fs
jo
sbbb
dec
repnz
push
mov
mov
dec
gs
jne
mov
andl
icebp
xchg
int
jns
mov
sbbl
xor
sbb
jecxz
lret
or
jl
outsb
in
in
icebp
inc
out
inc
icebp
adc
inc
ss
sahf
je
sbb
fdiv
jno
sub
pop
iret
adc
sbb
sarb
test
mov
pop
sub
aad
ljmp
jae
mul
add
leave
mov
jns
insl
dec
and
mov
mov
push
call
aam
fidivrs
inc
adc
cld
jle
and
fstpl
push
cmpsb
inc
and
sbbb
lea
fs
push
mov
or
jmp
add
movsl
cmp
jne
push
inc
cmp
add
lds
aad
jns
inc
and
dec
add
sarl
xor
sub
mov
push
xor
clc
mov
ds
adc
les
stos
inc
in
adc
xchg
stos
or
imul
push
lahf
push
xchg
mov
notl
jle
cwtl
insl
pop
dec
std
adc
cmp
mov
add
inc
pop
jle
adc
popa
jle
lret
sub
leave
movsb
hlt
loopne
ss
daa
pusha
pop
call
cmpsb
sbb
mov
daa
ljmp
and
in
xor
mov
push
jmp
jmp
mov
xor
fcom
add
push
test
movsl
mov
sub
jne
nop
cld
jp
cmc
popf
dec
or
shlb
jns
adc
add
add
pop
nop
mulb
xchg
lods
mov
inc
leave
xchg
pop
sahf
repz
add
lret
leave
movsl
xchg
add
sbb
add
out
mov
add
std
mov
pushf
xchg
stos
shrl
fcoms
or
insb
cmc
mov
popa
push
loope
jno
jns
mov
std
jg
and
push
xchg
mov
xchg
ret
xchg
jo
ja
xchg
stos
daa
out
add
mov
mov
xchg
icebp
xor
push
out
sti
pop
inc
fwait
push
mov
jge
cwtl
nop
imul
mov
loopne
sbb
push
andb
ljmp
imul
cwtl
jecxz
int3
xchg
or
jae
scas
insl
mov
adc
scas
dec
dec
cli
mov
sub
push
mov
daa
sbb
fst
xchg
sahf
xchg
out
xor
testl
adc
jae
sbb
xchg
hlt
mov
xor
push
loopne
sahf
mov
sbb
xlat
and
test
stc
leave
daa
loop
call
mov
jno
bound
xlat
push
push
sub
ret
pop
mov
daa
pop
cmpsb
pop
or
cmp
push
inc
loopne
gs
das
cmp
jne
jmp
neg
aas
push
fistl
inc
pop
xor
mov
mov
popa
xchg
fsubp
cmp
mov
ret
scas
movsl
addr16
push
mov
pop
scas
xchg
sub
cld
popa
mov
in
mov
sub
lahf
sub
gs
bound
sarl
lods
dec
mov
add
inc
int
pop
xor
adc
dec
mov
sub
mov
mov
pushf
mov
fpatan
mov
jne
fwait
push
cmp
das
pop
push
inc
lods
rcrl
sbbb
andl
in
stc
adc
push
add
lea
cmp
xchg
add
xchg
or
dec
loope
xlat
lret
mov
push
jp
jbe
inc
mov
je
adc
lods
pop
dec
aam
adc
shlb
aas
sbb
fdivrs
jne
cmp
push
mov
scas
icebp
lahf
test
xchg
clc
pop
cmc
aas
jno
cmc
sahf
mov
bound
add
dec
scas
psubusw
dec
xchg
sbb
sub
sbb
cmp
push
lea
pusha
fs
push
xlat
push
insl
push
pop
leave
es
adc
insl
mov
or
jmp
sbb
pop
jecxz
outsl
sbb
mov
xchg
mull
mov
push
inc
rclb
js
insl
scas
in
or
and
cmp
push
xchg
les
pop
push
xchg
push
jno
jns
icebp
ret
pushf
pop
cmc
andb
and
add
test
jne
imul
ret
inc
movsl
or
stos
xlat
and
fcompl
fwait
aam
std
xchg
mov
cmp
cmp
repz
shrb
cmp
dec
std
adc
inc
out
fcomps
sbb
imul
inc
popf
mov
lods
push
je
mov
xor
pop
fcomi
pop
pop
in
scas
rep
jle
lds
xchg
sbb
lods
aas
mov
and
inc
xchg
rorb
or
mov
mov
jb
shrb
jb
and
push
sbb
push
fs
push
aad
out
xor
pusha
stc
push
aad
mov
cltd
fcmovnbe
faddl
fldt
jp
xchg
cmp
outsb
mov
in
into
cmp
push
in
incl
cltd
enter
aad
inc
lods
xchg
or
jo
rcrl
push
adc
mov
xchg
adc
pop
mov
lea
xorl
dec
sbb
lods
pop
mov
dec
xchg
jg
dec
jb
jg
xchg
dec
nop
mov
cmp
adc
or
loopne
bound
jae
loop
sbb
cmpsb
int3
xor
push
daa
dec
cmpsl
xor
mov
shrl
adc
dec
bswap
mov
xor
sbb
fs
clc
aas
inc
mov
mov
dec
sbb
mov
fisttpl
inc
mov
sbb
dec
loope
lock
stos
fisttps
adc
xchg
fimull
test
xlat
jecxz
push
lea
mov
fstps
pop
xchg
arpl
out
jmp
jno
jl
xchg
sarb
pop
daa
adc
dec
inc
push
out
pop
sbb
ss
mov
sub
mov
and
and
mov
push
hlt
mov
dec
lods
fisttpl
out
adc
inc
repnz
and
adc
aas
cmp
push
sbbb
sub
gs
sub
mov
enter
mov
mov
insl
sub
sub
cmp
int3
xor
or
pop
lods
push
std
test
fidivrl
lods
mov
stos
mov
faddl
or
je
pop
cmp
jl
pop
mov
fildll
mov
sub
and
xchg
dec
or
jp,pt
sbb
mov
mov
xor
jae
sbb
nop
ret
mov
jnp
stc
mov
and
jae
lret
xor
xor
push
popa
jne
dec
inc
or
jmp
sub
leave
aas
xor
add
cmp
lds
adc
xor
mov
and
cmp
data16
js
sahf
addr16
sub
sahf
lahf
in
popf
rclb
lds
cmp
out
mov
imul
mov
jge
stos
xor
scas
mov
push
mov
test
notl
mov
sbb
mov
pop
push
push
or
adc
movsb
imul
xor
mov
cwtl
aas
insb
xchg
popf
insb
adc
cmpb
pop
leavew
adc
pusha
in
pop
sub
mov
dec
and
xchg
push
arpl
adc
mov
push
push
pop
out
test
pop
fisttpll
pop
movl
or
fwait
mov
inc
mov
test
rclb
movd
mov
mov
mov
ds
mov
rclb
jmp
pop
cmpsl
pop
adcl
aas
aas
div
add
test
jecxz
lds
adc
adc
int
push
jo
or
mov
js
test
aas
fidivl
jnp
sti
jp
or
mov
jae
jmp
jmp
cmpl
imul
or
cli
jbe
push
int
mov
sub
dec
popa
sbb
movsb
jo
das
stc
mov
inc
es
ret
test
ljmp
jmp
or
adc
es
jp
mov
outsb
or
popa
movsl
lret
je
sub
xor
xchg
lret
test
cwtl
jb,pn
xor
sub
cld
mov
adc
scas
out
arpl
stos
inc
nop
aad
add
sub
clc
loopne
aam
mov
pushl
imulb
in
das
sbb
xchg
add
dec
jle
jno
inc
push
dec
pop
pop
stos
adc
xchg
pop
and
push
cld
stos
pop
popa
sub
adc
rorb
push
mov
push
xorb
scas
pop
stc
sub
insl
sub
cmp
or
sahf
push
les
out
jbe
xchg
sub
sbbb
out
mov
jle
outsb
insb
ret
dec
hlt
aaa
nop
xor
cmpsl
hlt
dec
mov
stos
les
xor
lds
outsb
or
add
sub
mov
mov
and
in
stos
mov
sbb
je
icebp
aaa
test
out
mov
insl
repnz
xlat
or
cli
insb
push
ficoms
jp
roll
push
gs
push
loop
fwait
mov
lcall
adc
shrb
sbb
mov
jno
adc
call
xchg
pop
scas
rclb
or
or
fmull
dec
arpl
push
lods
out
and
lret
jge
or
adcb
cld
arpl
shrb
arpl
dec
fcmovu
cld
jbe
pop
test
loope
inc
sarb
and
stc
mov
adc
mov
pop
js
sub
and
or
fsubrl
xchg
mov
sbb
mov
rcrb
ljmp
cmpsb
mov
or
pop
pop
push
pop
mov
adc
lods
mov
bound
cwtl
or
cld
jmp
mov
aas
test
lods
jbe
cmp
mov
pop
add
shrb
enter
sarl
sbb
out
pop
pop
cmpsb
sbb
mov
bound
cld
jl
lret
rcr
xor
xor
add
lock
ljmp
bound
mov
pop
cmpsb
enter
jmp
pop
je
pusha
outsb
ja
rclb
idiv
or
dec
fdivrl
xchg
fidivs
push
daa
notl
pop
jbe
and
sub
icebp
cmp
imul
daa
and
dec
jae
cmp
dec
andl
xchg
push
sti
rcrb
mov
push
mov
push
imul
jecxz
xlat
adc
sub
jnp
mov
dec
inc
fadds
stos
jp
jno
sub
stos
mov
jns
std
pop
add
add
mov
jl
aaa
xchg
add
out
jge
icebp
xor
adc
and
out
out
das
xchg
rcr
or
shlb
shrb
clc
jecxz
mov
aas
cld
fiaddl
imul
out
leave
inc
jb
and
out
cmpl
outsb
sub
out
test
ss
stc
out
mov
jne
pop
cmpsb
xlat
icebp
inc
shr
xchg
dec
sub
and
cmp
ja
lret
inc
into
cmp
or
ret
das
adc
inc
jge
clc
mov
ret
fiadds
aaa
add
cmp
sarl
pop
xor
stos
int
mov
and
add
mov
adc
sub
jmp
test
inc
mov
mov
cltd
je
xchg
mov
dec
xchg
mov
mov
inc
sub
push
dec
imul
aas
nop
imul
adc
push
orl
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
xor
movl
or
movl
mov
or
mov
xor
or
mov
or
xor
not
mov
orl
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
xor
xor
mov
sbb
mov
test
je
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
adc
mov
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
xchg
or
mov
movzbl
sbb
sub
mov
sbbl
xor
and
add
mov
movl
mov
add
xor
addl
add
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
adc
mov
xor
add
add
mov
or
mov
inc
xor
mov
mov
adc
add
mov
subl
sub
lea
xorl
xor
xor
movl
cmp
movl
je
sub
mov
andl
xor
addl
add
movl
cmp
movl
jne
pushl
call
mov
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
push
call
jmp
or
mov
add
movl
cmp
movl
je
subl
pushl
andl
pushl
decl
call
orl
mov
mov
sbbl
mov
xor
addl
add
movl
cmp
je
mov
mov
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
sub
mov
mov
inc
mov
add
mov
xor
mov
or
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
fidivl
jb
xor
ss
add
push
call
pop
bound
jne
fsubs
mov
dec
sub
sbb
data16
ds
xchg
adc
aam
cli
loop
jl
rorb
sbb
pop
dec
test
jl
rorb
xchg
aam
inc
mov
ror
lahf
pusha
xor
addr16
lods
add
sub
movsl
push
lcall
mov
sub
ret
mov
rcr
mov
mov
xor
adc
or
shlb
add
jmp
popf
subb
repnz
adc
jo
nop
sub
pop
sbb
pop
inc
push
sbb
js
jl
into
sub
or
xchg
leave
subl
push
stos
inc
mov
aas
sub
stos
out
outsb
pop
aam
adc
xchg
mov
add
cmp
mov
les
jmp
andl
outsl
lcall
cmp
xchg
lret
mov
mov
pop
cmp
and
or
les
divb
sbb
adc
rorl
mov
inc
aas
mov
es
and
mov
ljmp
xlat
clc
enter
shr
push
loopne
lods
imul
int
sub
dec
and
cmp
subl
gs
dec
mov
f2xm1
jle
push
ja
stos
das
sub
jmp
dec
cmp
ret
fbld
int3
xlat
lret
sub
das
and
mov
mov
mov
add
jmp
jmp
xlat
iret
mov
xchg
ret
add
and
test
mov
lcall
mov
stc
push
jl
xor
out
in
popf
push
lahf
adc
adc
movsb
lret
inc
adc
or
fists
je
mov
inc
inc
sbb
nop
sub
pop
movsl
push
ds
push
mov
pop
dec
xchg
pop
cwtl
cmpsl
mov
lahf
and
fwait
inc
push
jg
xchg
xchg
dec
js
and
mov
clc
incl
lret
test
pop
out
popf
iret
push
add
jl
jnp
stos
push
repz
ret
leave
cs
push
sub
lcall
jns
sbb
push
out
push
mov
test
sub
fst
dec
icebp
fnstenv
fisubl
pop
and
or
ret
pop
fcmovnu
in
mov
sahf
push
inc
fmull
xchg
in
add
movsb
cmp
popa
lea
scas
jg
into
pop
cmp
cwtl
fistpll
sbb
push
add
shlb
jl
pop
loope
or
or
or
pop
loopne
cmc
sahf
sbb
pop
cmp
cmp
outsl
adc
xor
sub
rcrl
in
inc
lcall
rorb
ljmp
shll
sbb
imul
sub
jp
xchg
add
and
mov
mov
xchg
jecxz
dec
cmc
cmp
mov
cltd
gs
sbb
incl
xor
mov
mov
lret
adc
pop
push
mov
test
fisubs
sbb
and
bound
xor
dec
in
rorb
test
sbb
ror
push
aam
repz
pop
out
loopne
hlt
inc
adcb
lock
and
mov
sbb
inc
cmpl
icebp
xor
or
jns
jb
jb
pop
cld
adc
push
xor
sub
jne
lock
mov
lret
dec
cld
push
sbb
fists
ror
psubsw
cmp
jp
mov
fists
jp
xchg
fs
and
roll
loop
add
pusha
pop
les
dec
dec
cmp
outsl
dec
sbb
mov
enter
sub
mov
xchg
stos
dec
push
lret
dec
je
lea
xchg
in
push
jo
mov
push
jno
dec
arpl
sbb
cltd
jno
push
dec
out
sub
xor
adc
iret
mov
daa
cmp
in
leave
adc
mov
stos
ffree
adc
xchg
mov
cld
imul
call
xchg
xorb
or
or
jl
jnp
into
cmp
scas
inc
loopne
lcall
push
pop
test
push
sub
cltd
cmc
xor
mov
lcall
sbb
jae
in
mov
nop
je
and
pop
jbe
sub
mov
push
int3
jae
cmpl
dec
jb
loope
dec
push
push
jo
add
daa
jge
arpl
lds
ret
idivl
ror
std
frstor
bound
xchg
stos
inc
xor
or
imul
in
cmpsl
xor
pushf
lret
pop
out
cmp
pop
aad
cmp
dec
push
out
ret
inc
xor
nop
sbbl
sbb
cli
add
jle
push
roll
xchg
gs
push
xor
add
mov
fnsave
push
mov
mov
add
pushf
test
inc
rorb
or
pop
int3
push
popf
sbbb
repz
scas
rclb
jb
mov
nop
out
mov
call
or
adc
inc
dec
repnz
mov
jno
xor
lret
fdivrl
testl
clc
sub
test
bound
pop
mov
data16
repz
jle
nop
std
js
mov
pop
mov
stos
orl
test
add
and
or
inc
add
push
dec
xor
loopne
mov
push
js
xlat
sbb
sbb
mov
imulb
or
inc
xorl
lea
xchg
popl
push
mov
mov
adc
jp
aas
insb
test
mov
ljmp
and
or
dec
fisubs
xchg
repz
xor
cmc
adc
inc
dec
push
sarl
std
nopl
and
or
push
sahf
cmp
imul
pop
or
jo
sahf
loopne
jge
shrb
mov
or
rcl
fstpt
addl
leave
mov
jmp
enter
ja
loope
stos
js
or
mov
faddp
sbb
lret
and
xchg
cmp
pushf
sbb
stos
clc
jmp
sub
mov
jle
in
pop
add
pop
iret
hlt
inc
pop
aas
sub
jmp
xchg
cmp
sub
aam
mov
aas
imul
rol
pop
scas
test
sub
fisubs
xchg
sti
imul
inc
inc
jecxz
addb
jns
aam
testb
andb
pop
int3
jns
lock
xchg
push
fsubs
scas
jg
out
xchg
icebp
adc
mov
out
jecxz
mov
mov
adc
mov
pop
push
fimuls
jg
hlt
mov
cmpsl
frstor
jo
push
push
loope
lods
popa
jp
cmp
fisttpll
pop
jbe
add
mov
outsb
ljmp
mov
sub
testl
mov
add
jb
pop
mov
fstpt
inc
out
mov
add
js
push
jl
jbe
cwtl
arpl
rcrb
mov
pop
pop
out
mov
mov
sbb
dec
adc
pushf
rol
ror
out
fisubl
ja
jns
mov
adc
je
xorb
push
mov
adc
xchg
pusha
js
cmp
or
out
movsl
or
outsb
and
inc
add
icebp
cmpsb
cmp
inc
dec
daa
out
addl
mov
enter
mov
xor
add
xor
nop
fcos
pop
push
addr16
call
and
mov
scas
inc
imul
mov
jecxz
dec
mov
add
popf
dec
stc
call
fisubl
jl
or
cmpsl
push
stc
push
xchg
aas
jo
and
dec
ret
js
jne
shll
lret
xor
test
push
loop
dec
rolb
test
push
cwtl
inc
psrad
inc
cmpsb
shll
or
es
xor
mov
into
movsb
popl
insb
adc
push
iret
or
push
push
cltd
inc
icebp
lret
lods
lea
inc
add
pop
test
das
in
jp
stos
add
ldmxcsr
pop
inc
xor
cli
xor
aaa
jns
orps
or
rcr
jns
inc
inc
add
mov
inc
ret
popf
ficoml
jl
and
push
ret
jge
in
xchg
rclb
in
lret
pop
xchg
data16
ret
lds
jae
arpl
and
add
push
test
mov
mov
dec
cmp
adc
sarb
cmp
cld
push
xor
out
in
cmpsb
popf
test
insb
push
aad
dec
ljmp
sub
mov
bound
stos
inc
mov
int3
push
insb
loope
cwtl
xchg
adc
nop
rolb
in
xchg
and
insl
repnz
sbb
pop
fcom
sub
or
test
jg
insl
mov
fstps
in
mov
dec
sub
notl
lret
mov
mov
lahf
and
iret
lods
add
out
mov
adc
std
out
adc
or
scas
mov
pop
push
push
mov
sti
push
out
testb
sar
movsl
nop
in
aaa
pop
push
std
and
in
fdivr
jecxz
loope
repz
and
xchg
xor
mov
adc
xor
lea
mov
jno
xchg
int
repz
push
ret
mov
out
push
mov
negl
and
popf
int3
push
movb
das
inc
sub
ss
xlat
push
dec
and
shrb
lret
out
in
les
mov
in
clc
fwait
inc
call
jne
add
shll
inc
cmp
pop
jle
lcall
pop
leave
movsb
pop
in
fs
fcoml
jnp
movsl
cmc
add
loopne
jae
outsl
sbb
cmpsl
jg
sbb
adc
out
push
mov
inc
ss
add
aam
jbe
out
ja
orb
mov
jne
maxps
dec
jp
or
xchg
out
dec
sub
jmp
rcrb
cltd
pop
in
ret
inc
xchg
div
cltd
ljmp
push
xchg
movsb
cmp
pop
lret
mov
adc
or
mov
in
fidivs
mov
pop
aaa
add
es
ja
and
inc
or
and
in
sahf
xchg
sbb
std
jg
ds
sub
and
insb
cmp
mov
daa
adc
test
mov
mov
pop
pop
sbb
aas
jno,pn
pop
leave
add
inc
lods
and
addr16
mov
cmpsl
push
cwtl
dec
mov
movl
adcb
cltd
rolb
mov
sbb
iret
sub
cmp
add
push
out
pop
adc
imul
rcrb
dec
test
outsl
and
in
ret
lcall
xchg
dec
push
mov
xor
adc
inc
lods
sti
sbb
roll
xchg
gs
pop
rolb
adc
add
xchg
jbe
sbb
sahf
lock
jnp
fisubl
mov
out
iret
sbb
jo
js
push
mov
stos
lahf
adc
fs
movsl
mov
pop
xchg
mov
repz
jne
and
push
cmp
loopne
dec
hlt
xlat
ds
orb
into
pop
sub
in
mov
adc
sbb
adc
ds
sti
mov
push
jbe
das
mov
mov
roll
jp
cmp
incl
lds
mov
mov
roll
xchg
dec
ds
movsl
push
sub
mov
push
inc
shlb
imul
inc
xor
push
xchg
mov
out
stos
sti
in
jne
mov
mov
add
mov
subb
out
lcall
call
cli
jo
and
dec
cmc
pop
jl
popa
stos
int
mov
pop
rcl
mov
add
je
outsl
ljmp
lea
inc
dec
les
test
dec
scas
and
push
insb
loopne
out
adc
ja
mov
rcrb
fldt
lods
orl
push
xchg
push
call
mov
dec
adc
pusha
and
push
out
cmp
icebp
mov
clc
jecxz
adc
inc
push
repz
cmp
jae
stos
scas
std
imul
ret
add
cmp
mov
shlb
push
shrl
cmp
sarl
jbe
test
ret
pop
xor
cmp
jmp
add
cmp
pusha
outsb
aam
inc
pop
mov
fisubs
adc
in
lcall
and
imul
aaa
aaa
aaa
ret
ljmp
mov
xchg
xorl
jge
mov
cmp
js
inc
sbb
push
imul
or
xlat
adc
jne
jb
lds
xlat
iret
out
sub
cmp
nop
leave
dec
lea
or
jnp
pushf
mov
test
push
xchg
jp
enter
dec
je
rorl
jne
xchg
xchg
lcallw
or
sub
mov
stc
fdivrs
lea
sbb
mov
xor
stc
shlb
xchg
add
cwtl
mov
enter
xor
sbb
mov
cmp
lea
mov
xchg
out
in
add
ljmp
mov
movsl
sbb
cmp
push
sub
or
cwtl
out
or
jb
fisubl
and
pop
aas
cli
jp
adc
scas
dec
xor
outsb
bound
outsl
pop
aad
mov
stos
mov
sub
enter
sbb
loop
xlat
and
fnstsw
ret
push
insl
jmp
ja
jge
cli
lods
adc
mov
shlb
xchg
rcll
cmp
jbe
add
int3
mov
pop
or
mov
dec
fdiv
insb
push
sub
ja
inc
repnz
fs
rcrl
cmpsb
loopne
inc
jnp
les
loop
jne
int3
nop
movsl
sub
movsl
test
fs
sbb
lcall
gs
pop
out
ficoms
mov
mov
repz
fs
mov
cwtl
outsl
mov
test
sub
out
scas
cmp
inc
lret
mov
jno
pop
push
int
adc
loop
cli
xlat
sub
stc
movsb
jbe
xchg
adc
cmp
orl
shr
int
lds
stos
push
arpl
inc
adc
add
loopne
push
imul
pop
test
push
pop
push
or
mov
push
sbb
fdivrs
pop
aad
in
das
pop
lret
push
pop
lahf
sub
clc
int3
outsb
xor
out
mov
cmpsl
pop
lcall
add
mov
popf
shrl
inc
or
repnz
adc
push
inc
sarb
and
sbb
das
pop
xor
lods
inc
dec
xchg
cltd
xsaveopt
movsl
bound
or
adc
push
hlt
mov
mov
push
xor
pusha
sub
push
xorl
pop
add
and
push
mov
ljmp
imul
inc
or
movsl
dec
out
into
inc
lods
nopl
push
cmpsl
push
cmp
jb
mov
and
js
lods
je
cld
cmp
mov
or
add
push
repnz
mov
pop
xchg
stos
cli
xchg
sbb
jno
pop
sbb
movsb
mov
fcomi
sub
jo
mov
inc
shlb
xchg
std
mov
inc
jle
add
adc
mov
ret
adc
and
stos
lds
aaa
xor
out
out
pop
out
push
lds
and
fldcw
fs
push
loopne
sbbl
mov
jo
inc
adc
ss
cwtl
dec
sahf
cli
jmp
clc
push
ret
imul
cmp
cmpsl
jp
cmp
mov
ret
scas
mov
mov
adc
or
mov
arpl
jmp
jp
orl
sbb
sbb
mov
sub
push
inc
notl
ret
adcb
dec
sub
pushf
xor
pop
or
leave
push
orl
push
mov
pop
daa
arpl
and
cltd
cmp
xor
shlb
jo
pop
mov
adc
push
stc
jl
cmpsl
addr16
mov
sub
aam
adc
mov
std
mov
jb
js
and
xor
xor
shll
mov
dec
cmp
pop
test
pop
pop
mov
loope
out
mov
push
xor
xor
mov
sbb
jnp
inc
cmp
mov
popf
nop
mov
lock
shrl
push
mov
repz
gs
jecxz
test
push
mov
loopne
clc
aas
lahf
add
or
lret
clc
or
push
imul
repnz
mov
test
pop
fcomip
fdivr
jg
pop
iret
addr16
stos
movsb
shrl
jno
and
loop
xor
pusha
push
cmp
mov
in
push
testl
test
aaa
jno,pn
dec
test
add
pop
push
mov
xor
cwtl
mov
fnstcw
push
fs
mov
pop
add
sbb
sub
adc
jo
arpl
out
push
pop
mov
sbb
add
cli
lcall
xchg
push
std
mov
int
mov
stos
stos
xchg
das
inc
pop
pop
and
push
and
sbb
adc
lea
mov
adc
xor
push
or
jne
inc
jae
fildll
push
mov
inc
jns
xchg
int3
fidivs
adc
mov
testl
inc
push
fbld
xor
fldt
movsl
add
jo
xchg
mov
or
movsl
aam
sbb
in
mov
mov
jne
fucom
and
pop
out
xchg
jmp
sbb
fisubl
pop
les
adc
out
dec
dec
fisubl
ljmp
cwtl
jecxz
ljmp
dec
in
rcrl
mov
pop
cld
rorl
cmp
xchg
popf
mov
inc
ja
sub
jb
push
and
cmp
add
nop
sbb
push
lahf
and
insl
icebp
and
cli
in
dec
inc
add
sub
lret
aaa
in
mov
jp
dec
push
hlt
jge
jmp
rcll
mov
add
adc
and
add
sbb
inc
xchg
mov
sub
jae
lcall
lods
jo
push
inc
fiaddl
lock
or
test
addb
nop
lret
sar
lret
daa
stos
cltd
or
cmc
int3
push
add
cld
mov
xor
cwtl
pop
pop
popa
in
dec
jo
add
inc
in
mov
sub
mov
cmp
je
cmp
ljmp
sarl
pop
pop
xchg
inc
stc
and
popf
or
mov
jo
stos
lret
adc
stos
pop
cmp
jo
mov
inc
or
aaa
cld
dec
adc
dec
mov
add
fdivr
jnp
popf
outsl
fsubrp
mov
nop
lret
inc
out
lcall
jp
nop
xor
mov
mov
mov
mov
jge
sub
stos
test
inc
daa
push
ss
aam
inc
int3
cmc
xor
or
test
mov
mov
packuswb
scas
fdivp
xor
loop
fcompl
sbb
gs
popf
shlb
out
sub
cmp
mov
cltd
mov
inc
andb
cld
jnp
pusha
add
data16
test
xchg
xchg
inc
fs
xor
jp
mov
stos
jno
fistps
aad
fdivrs
xchg
mov
xchg
mov
mov
out
pop
stc
sub
inc
addr16
rcll
imul
jmp
fsubp
outsl
mov
push
dec
add
je,pt
inc
ret
and
jl
dec
ja
mov
mov
xchg
push
fdivrp
test
mov
enter
pop
loopne
leave
lods
push
or
loopne
xor
xor
int3
jmp
xor
std
lods
add
ljmp
xor
xchg
stos
push
pop
std
mov
jecxz
mov
xchg
out
pop
cmpsb
pop
cs
int3
xlat
pushf
bound
push
xchg
fildl
push
shll
fildl
xor
push
daa
test
enterw
xlat
in
cmc
adc
jmp
test
inc
repnz
test
xor
cmovno
daa
int3
pop
push
inc
add
test
cmp
cld
stos
bound
mov
add
cwtl
clc
icebp
mov
lods
lcall
ds
mov
ds
in
call
and
into
adc
push
dec
and
inc
inc
inc
scas
bound
push
add
pop
pop
popa
out
les
clc
dec
hlt
mov
mov
ss
jb
loop
outsl
push
mov
lret
adc
mov
pop
test
pusha
scas
inc
fucom
mov
js
rcl
lds
or
or
stos
arpl
jns
mov
test
adc
mov
or
xchg
movsl
xchg
mov
shll
xor
iret
sub
dec
popf
push
and
sbb
imul
inc
loopne
xor
aaa
mov
lea
fbstp
cmp
aam
cmp
xorb
pop
xor
adc
sub
xchg
sbb
add
sbbl
xor
xor
nop
stos
mov
mov
cmp
ss
popa
xchg
xchg
arpl
mov
sbb
jge
cltd
rorl
ret
xor
push
dec
jmp
scas
push
ja
std
in
in
fisubrs
loop
fs
add
mov
pop
add
paddsw
sbb
jle
test
enter
push
lcall
cmpsb
in
repz
add
fnstsw
cmp
inc
adc
or
dec
adcl
pop
int3
mov
mov
stos
lea
out
bound
mov
sti
mov
jle
int
xchg
lret
ljmp
popa
or
cmp
inc
cmpsb
add
mov
jg
jno
lea
mov
mov
push
add
xchg
jne
das
jl
shrb
out
lret
cmpsb
pop
inc
repnz
aaa
lods
incb
test
mov
bnd
test
and
xor
ret
js
in
cmpsl
out
and
adcl
test
aam
loopne
call
je
mov
mov
xchg
in
js
iret
sti
fwait
jnp
jp
in
aam
or
out
andb
cmpsb
mov
or
inc
cmp
test
xchg
fwait
jns
inc
xchg
daa
pop
lock
cld
jle
jecxz
mov
lcall
xor
andb
push
sbb
sub
lods
shll
fldcw
imul
jae
jnp
out
inc
dec
inc
push
mov
ljmp
xchg
stos
rolb
mov
xchg
jae
pop
repz
jno
mov
cmpsl
iret
dec
adc
sahf
jns
outsl
sbb
mov
mov
xor
and
and
call
or
lret
ret
pop
cmp
loopne
iret
rcll
inc
xchg
push
inc
out
push
fdivl
rolb
das
inc
pop
sub
jno
xchg
jns
dec
imul
cmc
mov
and
lret
fcomps
jb
xchg
clc
dec
xor
push
push
sahf
inc
nop
pop
test
fstpl
out
fldt
mov
std
mov
aas
or
aaa
push
xchg
notb
mov
inc
out
adc
sbb
cmp
mov
mov
dec
mov
adc
dec
aad
dec
fdivs
fidivrl
xchg
mov
aas
repnz
mov
mov
insl
sbb
outsl
fistpll
dec
add
je
inc
mov
insb
or
test
add
dec
sarl
or
roll
mov
mov
or
mov
push
imul
pop
fisttps
icebp
shl
cli
push
mov
jmp
lock
lahf
call
sbb
dec
ljmp
shll
dec
insb
cmp
inc
lret
dec
mov
outsb
xchg
aaa
fwait
pop
adc
stos
in
std
stos
dec
popf
xor
or
testb
repnz
lds
dec
pushl
sti
fimull
dec
je
je
xchg
sub
in
movsb
iret
jg
inc
std
mov
xchg
xchg
adc
cmpsl
std
lret
scas
xor
pop
sbb
pop
dec
es
pop
dec
insb
shlb
mov
pop
cld
clc
inc
mov
dec
out
mov
movsl
mov
push
lea
outsb
stos
push
push
aad
paddsw
inc
repz
je
jne
sahf
fidivl
in
sbb
pusha
std
int
jmp
in
inc
mov
stos
xchg
outsb
bound
sar
leave
jbe
gs
orb
mov
fwait
test
cmp
fs
movsb
pop
loopne
mull
dec
add
std
mov
dec
mov
imul
pop
dec
das
push
je
pop
push
outsl
mov
pop
adc
lea
das
into
aas
add
add
imul
inc
sub
fistpl
xchg
lahf
cli
dec
rcl
pushl
or
clc
ljmp
mov
inc
adc
out
push
scas
mov
push
mov
and
jle
popf
js
and
sarl
push
mov
add
push
add
out
sub
dec
insb
xorb
insl
cmp
arpl
int3
rcll
es
mov
add
sub
mov
test
xchg
cld
icebp
outsb
xchg
push
push
mov
and
pop
lahf
and
mov
jmp
pop
mov
xchg
ja
add
es
pop
pop
and
les
enter
mov
or
movsl
fnsave
inc
sbb
inc
cs
leave
dec
jle
xor
mov
jno
popf
cmp
push
js
sbb
ss
push
pop
pushf
dec
mov
xor
xor
test
int
cmpl
pop
xchg
fwait
xor
dec
incb
adc
and
mov
dec
outsb
orl
jne
jp
ret
js
imul
xor
sbb
inc
mov
dec
xchg
push
inc
mov
sub
sbb
and
inc
neg
inc
ja
dec
repz
shl
xchg
cmp
sbb
fcomps
add
push
xor
lds
fwait
sub
xor
dec
ffreep
adc
scas
sbb
loopne
orl
sbbl
gs
rcrl
push
icebp
stc
push
sub
inc
mov
sub
cmp
outsb
jge
in
rcll
mov
sbb
outsb
rcrb
cmpsb
js
mov
mov
xor
xchg
jo
or
push
jnp
sub
sbb
adc
clc
imul
mov
sarl
sahf
sub
adc
inc
mov
adc
les
dec
cmp
xor
xor
cmp
loopne
js
push
sub
pusha
adc
movsl
jge
inc
mov
jbe
cmpsb
ds
add
daa
push
cs
test
cmp
sub
test
pushf
or
cmp
add
or
cmpsb
into
stos
xchg
jne
pop
dec
lea
jbe
mov
outsl
mov
std
xor
shl
insb
outsb
out
dec
xchg
jle
lret
rclb
repz
sbb
xchg
pop
cwtl
push
pop
adc
mov
setl
sbb
sbb
hlt
insb
push
cmp
lahf
or
cmp
xchg
cwtl
fs
movsb
lds
scas
xchg
sbb
mov
dec
repnz
cwtl
lods
frstor
lds
jo
push
imul
push
imul
xchg
ret
mov
mov
rcl
mov
stos
dec
frstor
or
test
mov
pop
jne
fisubs
mov
pop
dec
addr16
add
rorb
iret
xchg
sbb
xor
insb
sub
aaa
pop
cltd
cmp
pop
jg
movsl
add
cmpsb
xchg
icebp
filds
or
mov
cmp
shrl
jecxz
test
or
adc
xchg
jno
repnz
and
inc
cmp
pop
and
add
repz
pop
test
stc
cmpsl
sti
insb
testb
stc
call
in
mov
nop
lret
mov
or
enter
stos
xor
movsb
loop
mov
add
mov
ds
shrl
int3
mov
jns
js
xor
cli
js
repz
testl
lods
push
hlt
out
mov
ret
data16
pop
clc
mov
mov
pushf
push
rorb
imul
in
hlt
daa
addr16
roll
roll
je
sbb
sarl
push
lods
sbb
aam
inc
lcall
jle
ds
and
and
pushf
lock
jbe
popf
mov
call
adcb
idiv
jmp
xorb
cld
inc
cwtl
cld
pop
jne
in
insb
pop
ret
js
mov
pop
xchg
daa
mov
movsb
push
cli
pop
hlt
inc
lahf
mov
das
outsb
push
es
add
inc
jle
sbb
or
les
inc
ss
addr16
inc
les
xor
pop
sub
ret
cmp
lock
outsl
fdivs
lods
jne
andl
mov
dec
inc
xchg
lret
sti
mov
rcll
jnp
out
out
and
mov
int3
and
mov
adc
or
mov
and
push
sbb
jne
push
das
inc
scas
xor
arpl
mov
jb
push
cmp
clc
adc
aaa
lret
dec
push
push
je
mov
add
test
hlt
and
add
pop
rorb
aaa
test
cmp
add
pop
aaa
in
in
movsl
lahf
in
dec
lods
adc
les
aam
pushf
xor
lahf
adc
fisubl
cli
test
mov
addb
mov
lock
jno
fisubl
popl
xchg
das
sti
fldenv
out
inc
idivb
mov
lret
add
xor
es
loope
int
cmp
dec
mov
imul
xchg
daa
mov
cmp
cs
ficomps
test
push
loope
xor
ljmp
and
adc
cmpsb
ja
cli
rorl
xchg
loopne
push
and
test
sbb
sub
lock
lahf
sti
dec
out
ret
enter
in
jg
and
jb
in
test
sti
arpl
outsl
inc
jne
das
sub
push
jae
xchg
jno
lock
fadd
dec
inc
ljmp
dec
daa
sbb
lcall
jmp
std
rorl
in
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
jmp
jl
pop
call
andb
jnp
shlb
cmp
bound
insb
push
cmc
jmp
xchg
mov
mov
insl
add
shrl
repnz
pop
inc
cmpsb
push
push
popa
pop
lea
lock
mov
pop
fcomip
add
or
lcall
mov
inc
xchg
imul
push
inc
aad
adc
pop
and
das
test
ret
jae
pop
sub
push
gs
push
fcomi
sbb
test
lret
movb
out
add
das
cmp
jle
xchg
jp
enter
pop
shrb
sub
gs
pop
loop
cmp
ja
sbb
adc
jb
imul
jbe
pop
sarb
adc
push
lods
gs
mov
in
jle
rorb
jb
incl
push
jbe
or
mov
jo
inc
lds
test
pop
andl
jle
xor
sbb
ffreep
je
jno
dec
xchg
cmp
or
imulb
rclb
cmp
je
add
ret
pop
dec
mov
push
daa
imul
mov
and
xchg
jae
hlt
lret
sbb
add
add
add
sbb
mov
or
push
jno
addr16
mov
lds
in
test
mov
fisubl
mov
loope
xorl
cmpsb
and
fmul
and
int
jno
arpl
ret
cmpsl
push
aam
outsb
mov
imul
mov
call
xor
mov
add
jbe
add
popf
lods
add
push
sbb
pushf
adc
scas
inc
mov
pop
push
sbb
bound
jmp
imul
jno
xor
cmp
testl
and
decb
test
xor
outsb
sub
rcrl
sub
js
adcb
lcall
push
cmp
daa
iret
je
addb
ja,pt
jno
pop
cmc
sarb
cmc
pop
jg
inc
mov
into
push
subl
cmc
xchg
lea
cmp
inc
adc
popa
and
jmp
inc
push
sub
les
imul
jp
push
fadds
and
popf
inc
sahf
sahf
icebp
idivb
mov
pop
mov
stos
stos
xchg
in
adc
xchg
insb
cmp
xor
jmp
imul
mov
rorl
into
add
sub
xlat
daa
and
mov
push
scas
dec
outsl
cmp
cmp
adcb
stos
pop
xor
movsb
mov
xchg
sub
xchg
sub
andl
jecxz
and
inc
pop
and
ja
sub
push
jecxz
sub
jl
jnp
bound
outsl
inc
xchg
or
lods
add
pop
fdivl
jle
mov
ficoms
mov
daa
int3
int
or
add
inc
sbb
sub
push
mov
data16
stc
jecxz
cld
cmpl
xchg
cli
shlb
mov
lods
in
cmc
ds
hlt
fcoml
jmp
stos
add
cmp
mov
ret
flds
xor
mov
daa
and
mov
popf
or
dec
adc
mov
inc
repnz
mov
fsin
fimull
and
int
cmp
pop
push
xchg
cmp
mov
inc
popf
rorb
mov
cmp
sub
sahf
xlat
int3
xor
lret
shlb
in
rorb
mov
insb
negl
or
xchg
repz
xchg
pop
push
adc
mov
mov
push
ds
test
xor
addr16
or
or
cmpl
cltd
hlt
cmpsb
and
dec
sbb
mov
sahf
cmpsl
dec
popf
xchg
es
and
and
or
xchg
ljmp
inc
hlt
push
pop
mov
int
aas
adc
xchg
fildll
cmpsb
mov
xor
divl
sar
test
push
mov
xchg
or
pop
mov
inc
push
daa
nop
push
std
lret
mov
gs
add
sbb
add
leave
and
xlat
and
out
push
bndldx
rcll
push
rcll
lea
xchg
out
pop
mov
mov
aas
leave
jl
jo
adc
sbb
aad
aas
movsb
pushf
arpl
jns
mov
xor
dec
stos
repnz
imull
ljmp
js
push
sbb
loop
cltd
xchg
and
sbb
rorl
jmp
jbe
in
dec
push
aas
jae
out
outsl
lea
sbb
orl
xor
mov
mov
fmulp
xchg
pop
pop
int
sub
xor
jo
mov
cmpsb
sbb
repz
loop
add
pop
lods
ds
inc
xchg
push
sbb
rolb
call
dec
pop
shr
aas
arpl
push
mov
dec
mov
dec
jo
int3
sbb
lods
movsb
movnti
lret
xchg
lods
sarl
fs
js
mov
sub
int
lret
dec
ds
or
inc
xchg
inc
lret
pop
mov
xchg
jb
jae
mov
add
mov
rcl
lret
mov
sub
push
subb
lcall
addr16
call
cli
ss
and
adc
out
or
hlt
xor
rclb
pop
ds
loopne
jecxz
inc
gs
outsb
mov
rolb
add
push
adc
jnp
push
test
inc
or
inc
mov
sbb
mov
and
or
les
jno
or
out
push
dec
mov
lds
and
mov
adcl
rcrl
pop
xchg
ret
mov
pop
test
cwtl
mov
inc
shlb
add
into
pushf
fdivs
lds
inc
out
ja
mov
mov
in
inc
lcall
aam
test
jo
imul
add
push
jnp
adcl
leave
outsl
lret
dec
mov
es
lds
fs
jo
shll
iret
push
push
out
mov
pop
popf
mov
mov
xor
sub
testl
jmp
in
mov
push
jnp
xor
jb
xor
repz
test
sbbb
push
stos
adc
imul
or
or
jle
sbb
popa
mov
or
push
jmp
cltd
rcl
cmp
pop
or
fs
jnp
rolb
push
xchg
push
xchg
cmp
cmp
ja
mov
inc
sbb
pop
lock
sti
xor
cmp
cltd
sti
mov
xchg
jp
fadds
test
and
ljmp
test
pop
mov
or
jecxz
stos
icebp
insb
pop
adc
test
loopne
mov
call
fcmovu
jmp
cmp
cmp
or
insl
ja
mov
push
mov
std
mov
xchg
fnstsw
xchg
inc
cmp
cmp
sbbl
pusha
mov
fwait
mov
adc
enter
jle
or
lahf
popf
in
sbb
add
sub
and
lods
std
jle
pop
fiadds
fs
stos
das
imul
ffreep
repnz
cltd
dec
push
add
pop
fcoml
inc
imul
jecxz
scas
cwtl
adc
push
imul
pop
xor
loop
sub
cld
mov
cmp
adc
loop
push
loop
lock
cmc
adc
jnp
push
dec
test
xor
mov
jecxz
dec
or
pop
mov
jp
in
xchg
cltd
adc
repz
adc
lds
call
iret
mov
push
out
xchg
pop
sub
lret
clc
addb
gs
xchg
aam
out
mov
movsl
adc
sub
divb
fisubrl
in
sub
cmp
lahf
rolb
sub
jns
xchg
leave
xchg
jecxz
test
mov
mov
xchg
push
xor
dec
idiv
enter
mov
mov
test
xor
out
das
fnsave
push
or
push
sub
cld
lahf
push
shl
xchg
sub
out
xor
bound
push
mov
pusha
out
roll
jmp
cltd
out
jne
ja
sbb
jl
or
and
rcrb
repz
loop
sahf
add
loope
fistpll
pushf
ds
mov
jl
fisubrs
into
push
movsb
jp
or
hlt
mov
scas
inc
mov
daa
and
dec
or
ret
add
out
push
lods
repnz
xor
in
jle
idivb
rcll
and
sub
and
fmull
and
les
repnz
pusha
fld
fs
dec
inc
xor
lret
pushf
cmp
in
xchg
mov
loopne
dec
jb
push
fsub
xchg
sbb
nop
test
lret
sub
out
lods
mov
mov
or
aad
and
jbe
sbb
or
adc
ror
inc
mov
cmp
mov
cmpsl
pop
jo
pop
in
insl
orl
xor
daa
popa
popf
fidivs
xchg
rcrb
out
leave
outsl
fwait
mov
push
dec
mov
mov
imul
sub
popa
leave
std
dec
cmp
ret
lods
jae
cmp
cmc
fldt
push
int3
pop
fadd
push
xor
and
popa
out
sbb
push
push
bound
xchg
aam
or
adc
orb
jmp
mov
scas
cmpsb
mov
sub
repz
fnstcw
out
pop
jns
and
jns
mov
mov
leave
jmp
pop
xchg
testb
sarb
mov
jle
pop
push
xchg
in
insl
leave
push
jne
push
jle
cli
rorl
push
dec
sub
rcl
xchg
lcall
dec
test
lret
mov
dec
sahf
cmpsl
pop
sub
popf
dec
out
loope
jbe
add
sub
aaa
ds
sbb
int3
prefetch
ret
mov
fisttpl
mov
and
push
xchg
dec
jns
or
add
sbb
movsb
add
inc
dec
movsb
xchg
or
insl
stos
sub
mov
sbb
push
inc
push
fstps
jb
add
jb
adc
jns
fidivs
pushf
jnp
fdivs
inc
mov
fsubl
sub
lret
xchg
push
mov
call
ljmp
xchg
sub
dec
jl
sbb
outsb
rcrl
cmpsb
adc
sarl
loopne
or
mov
dec
push
xchg
popa
daa
stc
cltd
xchg
xchg
cmp
test
mov
mov
mov
xor
outsl
xor
mov
dec
fdivl
das
mov
ss
and
lods
jb
lock
adc
mov
ljmp
adc
or
adc
cmpsb
sti
jnp
jb
mov
pop
sahf
mov
lea
inc
and
lahf
jle
xchg
push
sti
xchg
mov
xchg
adc
shl
lock
add
sub
add
dec
sub
es
repz
cld
pushf
cmpsb
iret
cli
stos
and
inc
test
dec
fisubrl
int
loop
lcall
mov
dec
cmp
push
inc
cmp
lods
aad
je
adc
mov
sub
push
sbb
fistpl
imul
enter
repz
sub
lds
xor
dec
idivb
add
or
mov
bound
ljmp
sub
ja
sub
out
push
repz
pop
dec
insl
mov
imul
jno
imul
sarb
sbb
fwait
sub
push
rorb
push
or
dec
test
stos
aam
mov
cs
mov
jae
sub
data16
pop
loopne
xlat
test
sbb
mov
in
jecxz
pop
inc
popa
sbb
xor
pop
out
jno
fisubs
lock
mov
test
popf
or
lret
sahf
push
dec
outsl
mov
inc
dec
pop
bswap
mov
push
adc
sbb
sti
ljmp
movb
clc
push
inc
movsb
mov
insb
sbb
stc
mov
stos
pop
es
test
ret
cmp
cwtl
movsl
arpl
out
lods
lods
shl
xor
pop
iret
xor
cmp
fnsave
xchg
popf
push
xor
aas
ret
mov
jno
pop
popf
imul
cs
cmp
mov
add
jnp
int
ret
mov
pop
mov
jmp
jo
add
mov
repnz
lods
sub
sbb
push
mov
pop
or
and
dec
addr16
jmp
pop
out
or
out
pop
jb
adc
fsub
je
pop
stos
add
int3
mov
in
pop
push
jb
imul
fs
mov
jo
repz
enter
mov
sahf
gs
popa
pop
mov
rclb
push
aas
dec
pushf
push
mov
pop
sub
sbb
lods
jbe
insb
adc
sub
mov
frstor
cwtl
in
mov
std
sbb
sbbl
mov
stc
lret
adc
aam
mov
lcall
sub
cmp
test
add
imull
pop
scas
push
pushf
insb
cmp
call
jnp
jl
jb
movsb
xor
mov
cmc
cmp
xor
repnz
cltd
bound
mov
stos
xor
mov
scas
push
mov
cmp
jo
movsb
push
imull
push
xchg
xor
xchg
outsb
std
xor
cld
into
stos
xchg
lcall
inc
jne
mov
sub
push
out
gs
pop
xchg
push
call
jecxz
je
mov
aas
insl
mov
push
xchg
into
lret
pop
dec
fcompl
loop
inc
leave
int
mov
outsb
cmpsl
jo
loope
lcall
xor
int
stos
sub
insl
dec
notb
daa
push
jp
jne
repnz
cld
inc
xchg
dec
inc
repnz
cmc
pop
and
shrb
or
subb
dec
fldl
sub
pop
andb
outsl
pop
insb
lods
dec
movsb
fs
mov
mov
or
mov
cmp
ss
insl
or
xor
pop
inc
pop
les
or
xorl
test
in
pop
rcr
ret
lret
xlat
je
dec
dec
xchg
push
std
or
xchg
bound
test
sub
leave
jge
adc
fstps
je
hlt
sub
mov
aas
add
mov
cmp
call
mov
mov
pop
mov
adc
xor
or
sbb
rcrb
fadd
jae
int
sub
pop
mov
call
dec
aaa
roll
lcall
push
inc
cmp
jb
mov
aas
mov
mov
mov
movsb
mov
arpl
mov
inc
ficomps
jae
popa
jnp
xchg
lods
sahf
fdivl
in
mov
jno
cmpsl
mov
mov
iret
add
sub
std
xchg
push
lret
fldenv
jle
out
cld
inc
mov
ret
or
adc
mov
adc
mov
xchg
lcallw
pop
in
cmc
lahf
iret
lahf
pop
lcall
jne
push
cli
insb
nop
outsl
dec
pushf
mov
jmp
fxch
in
jg
dec
add
ljmp
pop
ror
adc
add
and
pop
mov
mov
dec
jg
add
lds
adc
out
cmp
inc
pop
ret
xchg
sub
fistps
or
jl
sub
ficompl
je
sub
cmp
cmpsb
repnz
xchg
adcl
scas
xor
add
xchg
pop
std
in
push
cwtl
fldcw
rclb
dec
jmp
sbb
mov
xchg
arpl
fsub
repnz
and
clc
sbbl
inc
add
sti
sahf
add
inc
push
lret
jg
mov
adc
into
or
cmp
jns
cwtl
lcall
jo
push
sarl
loop
outsl
lahf
shl
xor
jbe
cli
lods
les
lds
loopne
jp
mov
mov
pop
aaa
jne
cmp
jmp
fbld
cli
sbb
bound
and
xchg
add
xor
test
xor
lret
shlb
subb
jmp
pop
inc
xchg
fistpl
ds
mov
popf
pop
jae
sar
mov
test
stc
and
push
pop
sti
inc
incb
jp
dec
xor
aaa
aas
cmc
push
loopne
jbe
and
jo
sub
xor
in
push
sub
ret
cmc
adc
fldl
lods
stc
mov
and
inc
push
repnz
int
orb
roll
icebp
dec
lret
mov
fninit
into
sub
clc
popf
lret
test
dec
fildl
xor
pop
popa
aad
pop
stos
sbb
add
in
mov
or
adc
cmpps
inc
or
add
dec
inc
mov
js
xchg
xchg
in
sbb
pusha
int3
xchg
xor
push
mov
aad
out
idiv
push
pop
and
or
popa
sti
dec
xor
int3
mov
and
lret
or
outsb
mov
fdivl
cli
out
mov
ret
push
mov
stos
loopne
es
cmp
daa
mov
movsl
int3
mov
repnz
shl
xchg
adc
movsb
addl
ljmp
pop
lds
or
mov
popa
mov
fdivr
fdivl
aad
fildl
ja
mov
push
mov
pop
pop
push
aam
mov
fldt
es
fistpl
fidivrs
jae
xchg
js
or
mov
add
lea
andb
push
or
pop
gs
les
fdivl
out
xchg
jo
lahf
out
cmp
leave
fcompl
push
sbb
cli
pusha
mov
fisubrl
daa
lods
jecxz
aam
xor
add
stos
push
push
pop
inc
rorl
pop
pop
enter
mov
inc
pusha
call
mov
imul
and
fwait
dec
bound
jg
mov
sbb
push
and
pushf
jmp
fs
cmp
or
insb
lret
pop
insl
sbb
mov
aaa
push
scas
mov
mov
cmp
call
pop
movsl
sbb
adc
daa
ret
pop
xchg
lret
jbe
mov
fisubrl
test
jl
sub
movsl
mov
gs
int
sub
pop
shrl
lock
std
das
push
testl
insb
add
xor
push
leave
mov
jae
repz
inc
xor
fbstp
or
push
ss
pusha
js
and
test
cld
push
fldt
lods
scas
lcall
jno
or
outsb
or
pop
jno
dec
fldlg2
das
mov
aam
pop
ljmp
data16
int
pushf
leave
scas
sti
data16
dec
in
xor
cltd
jle
leave
adc
jb
pop
mov
xor
cmp
add
ret
rolb
push
push
addb
sbb
pop
popa
sub
fwait
push
lds
mov
add
les
stc
mov
cmpb
or
fimuls
add
out
jge
inc
hlt
aaa
pop
and
inc
fisubrs
movsl
sbb
adc
fisubl
lret
mov
sub
adc
add
ficomps
inc
pop
and
cmpb
into
mov
test
bound
mov
out
outsb
pop
inc
les
mov
mov
leave
mov
outsl
sub
les
push
xchg
ret
subl
fcom
aaa
pop
mov
imul
push
adcl
dec
aad
inc
sbb
mov
mov
gs
mull
ljmp
cli
and
xchg
or
insl
cli
lret
out
sub
sti
mov
mov
imul
ljmp
or
add
lods
repnz
dec
outsb
push
rcr
jne
inc
inc
xorl
shrl
push
dec
mov
lret
sbb
push
popa
jb
lret
push
pop
cli
imul
pop
mov
xchg
pop
ds
adc
les
mov
jp
clc
mov
lcall
mov
push
pushf
push
mov
xchg
fs
imul
cmp
popa
mov
nop
sub
stc
pop
cmp
in
cmp
ret
lds
mov
out
dec
call
cmp
out
cld
push
popf
loop
fldenv
mov
leave
cmpb
sbb
cmpsb
cmpsb
ljmp
cmpl
aam
cmp
cltd
aaa
adc
shll
cli
cmp
fstpl
js
loopne
and
pushl
and
movsl
xchg
popa
out
mov
jo
stos
jle
fdiv
or
jge
movsb
enter
and
add
dec
cmp
test
adc
adcl
das
fbstp
loope
pop
fcoml
cmp
in
xchg
sub
lea
insb
aaa
ss
jg
jmp
mov
mov
aam
cmpsl
jnp
rcl
ljmpw
cmp
xor
push
mov
daa
das
imul
sub
cmpsl
xchg
mov
jmp
mov
cltd
cltd
pushf
cmp
and
rcr
mov
out
in
ds
mov
push
clc
sti
mov
xchg
lahf
hlt
sahf
jl
mov
enterw
inc
jne
aaa
and
inc
icebp
push
int3
iret
ficompl
les
adc
leave
pop
inc
adc
fidivs
aaa
jbe
jae
push
movsb
inc
jne
jns
test
das
mov
xor
dec
sbb
popa
lds
ret
push
repz
mov
cmp
sub
inc
fs
mov
xor
dec
ret
aad
sub
pop
movsl
dec
hlt
fcmovbe
and
test
inc
push
pop
mov
pop
filds
and
mov
pop
push
mov
mov
dec
and
repz
inc
cmc
xor
push
adc
fisubl
dec
notb
push
xlat
into
shll
xchg
fadds
sbb
in
jmp
cli
call
mov
jg
push
aaa
iret
out
sbb
push
test
dec
push
lds
out
fisttpll
cs
lea
cmp
sahf
push
dec
cs
cltd
mov
mov
inc
test
test
outsl
pop
or
lret
int3
divl
jecxz
mov
inc
pop
and
cld
dec
mov
daa
xchg
inc
jmp
cmc
cmp
lods
test
out
or
jb
imul
jle
sbb
negl
cmpsl
ret
cmpl
cmpsb
repz
roll
dec
dec
out
fisttpl
inc
xor
jne
push
inc
mov
aad
adc
inc
xchg
out
das
in
loop
push
aaa
incl
push
mov
fsubrl
jg
imul
fistl
icebp
ds
std
xchg
imul
dec
cld
movsb
repnz
lds
cmpsl
insl
sub
out
sbb
push
adc
nop
in
shll
mov
scas
dec
sarl
je
xor
sbb
fdivp
cmpsb
cmp
mov
aaa
xor
jns
dec
dec
dec
jns
xchg
adc
negb
mov
ds
sahf
adc
cmpsl
enter
int3
cltd
add
rol
ss
icebp
scas
xchg
test
pop
cmp
fisttpll
mov
loopne
subb
adc
nop
mov
push
lock
adc
and
andl
inc
or
ja
lcall
mov
mov
lods
dec
push
sub
xchg
mov
lret
or
add
xor
cmc
leave
out
mov
and
jne
mov
cwtl
jbe
mov
lea
pop
cmp
out
fs
clc
dec
daa
sbb
mov
and
xchg
mov
bound
or
adc
out
decb
pop
jp
push
cmp
or
pop
mov
mov
mov
out
movsl
lods
mov
pusha
imul
jae
loop
add
icebp
nop
lods
gs
out
sti
jle
cmp
and
jl
out
jmp
mov
lds
push
into
add
dec
pop
flds
popf
cmp
sub
and
sahf
sub
popf
push
sub
or
sub
adc
jmp
cmp
cmc
fwait
mov
int
adc
sbb
cmp
jb,pn
dec
mov
pop
cmp
scas
dec
add
repnz
dec
subl
or
cmp
dec
lea
adc
aad
adc
inc
pop
into
adc
subl
gs
or
mov
stos
fdivs
ljmp
xchg
cmp
mov
adc
lcall
cmc
ss
xchg
in
sub
jbe
fwait
dec
iret
mov
sub
in
clc
xor
add
mov
dec
jae
mov
addr16
test
and
cmp
xchg
dec
dec
mov
stos
call
test
add
lock
aaa
inc
xorl
xchg
xchg
jno
and
pop
sbb
call
or
jg
mulb
inc
mov
ja
arpl
push
bound
ss
hlt
rcrb
repz
sbb
mov
inc
cmp
fldt
sahf
insl
fwait
popf
xlat
test
scas
sbb
and
sub
repz
int3
adcl
jnp
push
push
int3
mov
add
ret
pop
cmp
hlt
mov
mov
jmp
jne
decl
jg
push
movsb
outsb
cmpsb
sbb
pop
mov
in
jo
loop
adc
popa
ljmp
int3
loop
sbb
cwtl
fdivl
mov
ficoml
int3
inc
push
inc
jle
rcl
push
push
mov
mov
stos
nop
adc
inc
test
leave
movsb
imul
enter
mov
mov
imul
adc
xlat
inc
push
orl
in
cld
cmp
cli
outsb
push
mov
data16
imul
push
inc
and
out
daa
push
jne
cmp
ret
movsl
push
sti
and
pop
jl
cs
push
movsl
and
insb
add
pop
sub
imul
out
int3
inc
dec
cmp
pop
sbb
cmpb
fstpl
sub
popa
mov
add
inc
sbbl
ds
iret
mov
pop
roll
lods
pushf
movsb
sbb
movsb
cmp
fdivl
mov
out
fcmove
pop
sub
fneni(8087
lret
pop
push
dec
fwait
in
cmc
mov
cmpsb
das
in
push
mov
pop
cli
shlb
mov
mov
mov
xor
push
int
add
pop
adc
movsb
xchg
push
shr
aas
insl
push
inc
jne
push
daa
mov
repz
jno
div
and
loopne
xchg
arpl
ds
push
lods
leave
jnp
xchg
add
jne
mov
repnz
cmp
cmpsl
xorb
cmp
daa
adc
repnz
shrb
add
divb
cmp
dec
mov
mov
dec
shl
sbb
adc
data16
lea
das
aam
movsb
sbb
xchg
clc
arpl
add
sarl
jmp
cs
add
sbb
lods
lret
les
cld
cld
daa
dec
aas
cmp
sbb
xor
lods
ficomps
mov
xchg
and
sub
icebp
mov
sub
lcall
cmpsb
sub
and
xchg
pushf
jl
mov
movsb
push
adc
inc
js
fs
adc
or
jle
fistpl
sahf
lret
dec
or
test
ja
add
stc
xchg
je
mov
repz
dec
inc
sti
mov
js
aad
add
sub
divb
lahf
mov
insb
stos
cld
pop
cmp
test
in
fiadds
pusha
fbld
mov
fcoms
push
mov
imul
fwait
inc
inc
mov
cmp
out
rorb
movsl
out
cmp
loop
xor
data16
mov
mov
clc
push
or
mov
mov
fisttpll
icebp
add
jg
imul
inc
pushf
pop
jmp
outsl
push
cmp
mov
sub
out
push
xor
les
adc
lods
arpl
xchg
int
shrb
imul
shrb
fcmovnu
and
lcall
pop
add
mov
and
adc
ss
xor
add
and
inc
imul
push
out
push
or
xor
push
push
mull
xchg
sbb
mov
and
cmp
loope
mov
dec
cmp
jo
ljmp
jle
test
ret
add
jb
cltd
addr16
ja
dec
mov
jo
jo
outsb
add
inc
lahf
in
cmc
in
out
repz
cmc
mov
add
pop
and
add
add
lret
pushf
call
mov
and
xchg
mov
mov
pop
push
mov
push
or
or
or
or
lret
fdivr
and
aas
pop
cmp
sbb
filds
cwtl
fsub
cmp
pop
cmp
push
cli
sahf
sub
mov
lods
gs
jge
mov
mov
dec
lcall
adc
sub
shll
adc
mov
sub
fadd
push
pop
aam
jle
enter
lahf
out
push
outsb
jae
arpl
inc
xor
repnz
xor
jge
call
adcl
mov
imul
fildl
mov
mov
in
lcall
jns
adc
vpaddsb
in
and
adc
or
daa
and
cmp
adc
ds
fstps
xor
jmp
fmull
in
mov
inc
and
jne
xlat
orb
fs
push
out
cmc
pop
fcom
cmova
jo
push
pop
fld
cs
sbb
xchg
imul
pusha
inc
test
movb
dec
lods
pmaxub
cs
mov
mov
dec
gs
clc
jmp
in
add
imul
outsb
les
mov
adc
mov
xlat
xchg
mov
imul
test
cmp
inc
daa
pushf
inc
adc
fistpl
mov
xchg
aad
lods
ret
mov
cli
cmc
loopne
cmpsl
ret
xor
jecxz
and
ljmp
idivb
mov
imul
fstpl
inc
xchg
mov
adc
xchg
fisttpll
mov
add
and
pop
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
addl
mov
or
mov
mov
xor
andl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
mov
mov
movzbl
and
cltd
push
addl
mov
add
movl
adc
or
push
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
mov
movl
mov
andl
mov
xor
orl
xor
orl
xor
andl
add
adc
xor
orl
jmp
mov
arpl
jno
rcr
gs
popa
js
bound
pop
bound
xchg
out
pop
out
push
add
bound
mov
push
jb
xor
adc
sbb
bound
aas
xchg
cmp
inc
ds
stos
inc
in
popa
es
lea
mov
fs
lea
inc
add
cmp
sub
sbb
pop
ret
lock
jno
pop
push
lock
adc
sub
sbb
sub
inc
data16
loope
repnz
or
add
ja
sar
mov
cli
xor
or
cmp
pop
mov
push
sbb
out
mov
int
cmp
inc
in
sub
fiadds
call
xchg
movsb
or
sub
inc
cmp
push
mov
andl
jb
and
adc
mov
idiv
aam
dec
daa
ss
pop
shll
xor
xchg
fidivrs
mulb
inc
cmp
mov
into
xchg
sbb
subb
inc
sbb
adc
bound
mov
mov
jmp
ja
inc
shl
repz
cmpsb
mov
pushf
rcrb
imul
inc
sbb
lahf
and
dec
pop
adc
cs
aam
dec
test
push
mov
xor
daa
int3
xor
scas
jae
jno
in
mov
mov
fisubrs
mov
mov
pop
sbbb
cwtl
push
aas
sbb
into
es
les
cmp
pop
sti
jno
js
daa
and
add
repnz
mov
pop
dec
icebp
andl
test
and
cld
cmpsl
cmp
daa
js
subb
test
dec
mov
push
stos
jl
pop
aaa
add
stc
and
aad
lret
pop
push
jl
pop
pop
push
xchg
adc
or
iret
add
notl
shrl
xlat
test
xchg
fs
dec
pop
std
mov
add
mov
push
clc
lds
xor
sti
xor
jge
popf
xor
cs
dec
fistpl
in
jns
mov
mov
cmc
lods
pand
push
cli
jmp
mov
push
loopne
lcall
out
dec
aad
shl
fnsetpm(287
pop
pop
test
aas
dec
in
js
adc
jns
xor
test
nop
stc
ja
mov
xchg
xor
ja
test
sbb
pop
popa
mov
stc
arpl
lcall
fcoms
pop
addb
jmp
pop
mov
push
or
xchg
sbb
in
xchg
movsb
lock
xchg
mov
cmpsb
inc
sbbb
cwtl
xor
push
mov
or
call
mov
scas
das
setp
or
scas
inc
cmp
mov
mov
mov
jge
pop
sbb
dec
fistl
add
inc
push
push
aaa
lods
or
cwtl
rclb
fadd
or
push
push
sbb
lods
std
rcrb
or
loopne
out
ret
iret
mov
cmc
cmp
mov
fsubrl
stos
jp
jmp
push
mov
cmp
add
daa
int3
insb
push
and
jge
aam
xchg
xor
mov
mov
dec
xchg
inc
jb
dec
mov
rolb
mov
test
in
repz
sbb
push
cvtsd2ss
lret
cmp
test
xchg
mov
lret
clc
gs
adc
call
inc
jmp
mov
xchg
pop
addl
jmp
stc
xchg
pop
insl
inc
es
adc
adc
mov
imul
adc
or
out
cld
pushf
mov
lret
mov
dec
mov
xor
insl
clc
leave
rorl
fidivl
je
inc
cs
pop
and
clc
pushf
insb
xor
cmp
iret
pop
xchg
xlat
xchg
jo
adc
sub
mov
addr16
xor
sbb
les
inc
mov
xlat
rorb
push
or
rcl
add
sub
adc
mov
je
lahf
jge
dec
dec
or
xchg
push
xchg
loope
dec
jmp
cwtl
bound
mov
pop
in
add
xchg
ja
fstpt
adc
lret
cmp
push
fcom
stos
aam
add
ret
mov
xchg
push
add
test
int3
jb
fs
decb
jae
xchg
jge
inc
shrl
mov
fucomi
and
push
xor
inc
push
xchg
push
jge
sbb
dec
outsl
jbe
xor
or
out
fisttpl
test
add
add
lock
dec
divb
into
adc
das
mov
jl
cs
popl
mov
popa
pop
repnz
dec
sbb
mov
pop
pop
movhps
mov
fwait
popf
aad
pop
icebp
call
loopne
sub
cli
add
inc
or
int3
and
push
mov
rclw
aas
and
lods
and
adc
mov
clc
dec
mov
mov
jmp
mov
or
in
ljmp
or
or
loop
dec
mov
stos
pop
add
ficomps
aad
mov
dec
enter
pop
int3
lcall
cmpsb
cmp
adc
ja
jmp
add
repz
xor
pusha
dec
mov
sahf
sar
sbb
pop
jne
mov
call
out
lahf
dec
xorl
push
js
mov
outsb
out
push
mov
int3
loop
adc
movsl
pushf
inc
mov
fucomi
or
adc
sbbb
cmpsl
xchg
in
push
in
xchg
cmp
adc
jno
je
pop
in
mov
lods
add
push
xor
rcll
movsl
mov
fs
repz
xchg
cmpsl
lret
dec
cltd
and
fs
popf
jp
ret
cmc
filds
dec
in
push
out
cwtl
lahf
cmpsb
outsb
push
lods
inc
nop
pop
sarl
mov
mov
pop
hlt
mov
xor
icebp
xlat
jg
cmp
inc
int3
mov
lret
stos
cmp
cli
mov
dec
adc
and
lods
cmc
mov
xor
ja
in
movsl
mov
xchg
cmp
jo
cmpsb
imul
push
or
insl
mov
cmpsb
fwait
sbb
imul
push
or
sbb
ds
loopne
out
push
inc
in
push
pop
push
js
out
inc
hlt
mov
jne
std
sub
repz
jo
in
mov
insb
shll
cmp
adc
fcom
cld
pop
arpl
rcr
dec
mov
pop
les
in
aam
mov
pop
test
aad
jns
stos
enter
xchg
icebp
pushf
scas
mov
mov
testl
xor
call
push
mov
repnz
sbb
and
add
jbe
mov
cwtl
ss
mov
cmp
movsb
mov
lahf
inc
int
bound
sub
pop
pop
xchg
fdiv
scas
dec
lea
cs
mov
mov
xchg
fdivs
lea
jns
ret
repz
cwtl
mov
xchg
faddl
sub
filds
lds
ret
imul
ja
outsl
xor
das
or
imulb
loope
ljmp
iret
stos
inc
mov
mov
fistpl
push
in
cmc
in
mov
ja
push
stos
shll
data16
cmp
xor
pop
add
sub
lods
or
jnp
in
mov
xor
pop
aad
sbb
out
xchg
test
or
pop
inc
and
or
sbb
aam
or
addb
jge
data16
jb
push
idivl
adc
cmpb
jmp
push
xlat
jp
cmpsl
pop
adc
int3
imul
xchg
mov
inc
cltd
in
test
adc
jp
xchg
call
push
repnz
in
pop
push
lds
jmp
dec
inc
adc
jb
xor
and
adc
fmul
out
push
imulb
outsl
mov
sbb
mov
jg
xchg
ret
jg
loopne
call
push
aas
sbb
dec
xor
adc
cmp
mov
adcl
mov
ss
jecxz
dec
mov
loop
mov
and
rclb
bnd
decl
xchg
ds
inc
lods
fisubrs
stc
mov
dec
add
cmp
insl
sbb
jl
scas
xor
mov
xlat
push
cmpsb
xchg
sub
mov
dec
and
jecxz
dec
movsl
sub
mov
popa
adc
mov
bound
jb
fdivrl
out
dec
or
add
mov
pop
in
inc
add
sbb
in
test
leave
fs
adc
addl
adc
aam
and
xchg
int
inc
cmpsb
mov
or
ss
cmp
es
in
jl
je
ss
push
in
insb
push
cli
aam
mov
mov
stos
std
mov
adc
mov
jle
jae
ss
imul
das
test
lock
test
test
out
adc
mov
pusha
push
lods
int
lds
mov
adc
pop
loopne
or
mov
dec
xchg
cmp
loope
lock
xor
fs
push
xor
clc
xchg
jp
loop
pop
fisubrs
pop
out
mov
ss
push
lcall
out
inc
push
push
or
repnz
in
xchg
mov
cmpsb
adc
add
jb
jne
xor
adc
mov
mov
push
sub
bound
cmp
sub
repz
pusha
mov
repz
fbld
cld
dec
mov
push
xor
and
shll
push
xchg
fsub
pop
xor
adc
rclb
cld
stos
in
int3
andb
or
fwait
sub
adc
ficoms
push
push
sub
push
xor
ret
fwait
leave
mov
jbe
push
dec
aas
pop
pop
pop
xchg
lea
pushf
into
stos
cmp
xor
fwait
cwtl
pop
enter
sbb
das
mov
fistpll
lods
dec
scas
loopne
test
out
scas
cltd
rcll
jl
popa
aas
out
call
mov
push
out
ret
movsb
jno
mov
dec
pop
dec
mov
pop
cld
jmp
and
adc
les
jge
inc
sub
push
xchg
xchg
jne
out
xor
inc
aas
data16
scas
mov
popa
mov
test
es
cmp
cmp
and
xchg
arpl
fldenv
ret
mov
pusha
test
popf
inc
inc
jbe
mov
mov
push
or
or
xlat
jae
icebp
xchg
xor
mov
aad
loop
loope
cs
cmp
inc
movsw
adc
outsb
sub
cmp
fisttps
aas
push
mov
or
cmc
push
pop
aaa
jle
push
test
int
sbb
xor
mov
gs
div
push
repnz
xor
or
fbstp
pop
or
cld
pop
pop
sbb
imul
fldcw
jmp
bound
pop
mov
into
push
mov
call
xchg
cli
cs
hlt
xor
xchg
mov
xchg
cmp
sub
xchg
cmp
enter
movsb
popf
jg
sbb
mov
jns
fistl
mov
pop
or
stc
sbb
push
into
or
sub
inc
and
scas
xchg
mov
xchg
push
cmp
inc
fstps
lret
fsubs
dec
loop
inc
cltd
ror
xorl
adc
test
ss
aaa
decl
pop
push
mov
into
ds
in
mov
cli
sub
xacquire
cmp
popf
fnstcw
test
imul
or
lret
pop
adcb
fst
shlb
lahf
mov
fs
cmp
out
loop
in
and
aaa
xor
pop
jb
mov
aaa
fwait
dec
xchg
sub
stos
fildll
inc
test
cld
popf
shrb
mov
insb
loop
sub
imul
push
loop
insl
andb
stos
xor
sahf
out
adc
mov
push
push
test
adc
adc
movb
jns
aaa
xchg
adc
ficoms
mov
adc
push
mov
push
insb
xchg
add
xchg
scas
cmp
dec
add
orl
jmp
fdivrl
sub
outsl
aas
fmull
popf
in
cmp
std
ficompl
pop
repnz
mov
loopne
pop
out
movsl
sbb
push
xor
mov
jnp
movsb
addr16
pop
push
or
gs
sarl
popl
xchg
mov
leave
mov
insb
in
sbbb
sahf
adc
sub
pop
movsl
mov
movsl
lcall
cmp
sbbb
jg
sahf
xchg
in
mov
or
pop
mov
ljmp
sbb
mov
std
jecxz
test
cmp
push
cld
mov
mov
xchg
adc
mov
pop
clc
aaa
mov
sbb
das
mov
jno
mov
push
mov
xchg
pop
sub
fs
outsb
popa
jbe
outsb
mov
les
sahf
or
fiaddl
push
adc
out
popa
jg
repnz
mov
mov
push
push
imul
push
fnstenv
mov
dec
mov
or
sbb
into
push
movsb
xor
xorl
dec
enter
call
dec
sarl
test
rcrb
stos
movsb
out
loopne
cmp
xor
rcrl
xchg
hlt
enter
int3
sbb
mov
jae
arpl
adc
inc
fcoml
dec
mov
xor
sbb
repz
push
imul
pop
and
mov
mov
xchg
fnstenv
sbb
test
ljmp
rcr
dec
icebp
shl
adc
sbb
hlt
cld
inc
push
out
inc
mov
adc
dec
or
mov
and
inc
push
clc
lock
or
mov
leave
inc
fnsave
xchg
mov
test
fisubl
push
fldenv
add
cmovbe
xor
jp
lods
sbb
es
jmp
fs
lret
dec
cmp
insb
push
fwait
pop
sub
add
push
nop
shlb
popf
je
imul
dec
mov
add
or
mov
mov
data16
nop
dec
fdivs
mov
push
mov
inc
lcall
movsb
pop
xor
int
or
call
ljmp
xor
pusha
jnp
pop
notb
jbe
lcall
inc
sahf
out
xchg
or
jno
clc
fstps
out
pop
push
test
or
shl
in
movsb
sbb
clc
test
out
sub
ss
and
faddl
bnd
cmc
mov
xor
inc
lea
iret
xchg
or
push
cmpsl
cli
xor
test
out
and
repz
pop
ss
jg
or
xchg
inc
stos
es
and
mov
or
pop
cmp
push
pop
shll
add
mov
sbb
lock
cmpsl
mov
xchg
xor
jae
mov
divb
jmp
pusha
scas
sbb
inc
mov
cmpb
pop
sbb
movsb
xlat
add
pop
mov
popa
mov
iret
lahf
jp
scas
das
adc
push
rep
cli
mov
lret
xlat
push
lret
jmp
test
pop
das
ret
or
shrl
pop
aas
lret
mov
dec
sub
data16
mov
popf
dec
scas
movsb
popa
mov
jbe
js
inc
ret
test
ja
outsl
ffree
jb
insb
pushw
push
iret
loope
add
mov
add
dec
jle
popa
sti
sub
divl
pop
dec
adc
lcall
lret
inc
ret
clc
lods
mov
pop
mov
mov
sbb
pop
out
imulb
test
inc
bound
jle
pop
nop
rorb
sbb
xchg
mov
xor
jg
and
pop
mov
aam
xchg
jle
in
and
or
stos
lock
out
jmp
js
jne
push
xor
or
mov
push
inc
mov
mov
lretw
or
pop
lret
push
in
sub
or
retw
iret
js
xor
or
mov
fsub
mov
fwait
lret
sub
push
pop
call
xchg
rorb
sub
push
sub
out
sub
hlt
hlt
push
inc
adc
mov
sbb
cmp
lcall
pop
imul
pusha
inc
sbb
cs
push
ja
aad
adc
add
push
mov
mov
mov
add
adc
and
mov
icebp
mov
bound
mov
into
insl
push
sub
push
shll
xchg
lds
ljmp
xor
imul
jp
jnp
das
and
or
cmp
pop
xchg
test
xchg
nop
or
aad
lret
or
or
scas
mov
jge
or
insl
dec
test
pop
pop
cli
out
cltd
clc
adc
push
push
push
or
in
xlat
loope
scas
gs
xor
aam
out
jae
lods
cwtl
imul
dec
cli
out
pop
jne
lcall
xchg
cmp
out
jb
cmp
add
loopne
xchg
scas
mov
push
pop
or
jo
and
mov
arpl
sti
sub
ror
jno
out
int3
pop
fwait
mov
and
mov
int
xor
gs
lret
push
xor
dec
scas
lea
sub
adc
dec
lds
sbb
push
mov
adc
stos
inc
rcrb
rorl
aam
mov
std
mov
std
mov
sub
lret
jne
test
jb
xor
jne
mov
jno
fwait
lret
pop
jge
inc
hlt
jae
xchg
daa
imul
cmpl
dec
mov
inc
mov
cld
push
mov
pop
inc
orl
loop
sahf
clc
and
inc
sarb
cmpb
fsts
aad
xchg
jmp
daa
sub
mov
jb
pop
rcrb
outsb
or
jne
outsl
in
rcrb
push
popl
fldenv
lea
dec
adc
jp
leave
push
lods
hlt
rclb
orl
test
sbb
mov
mov
mov
aad
ja
inc
lret
sbb
adc
lcall
xor
add
jo
inc
jmp
popa
das
mov
jg
mov
inc
lods
bound
ss
enter
xchg
int
or
inc
loopne
lret
sbb
xchg
inc
adc
in
pop
lods
pop
shl
cmp
iret
arpl
bnd
gs
lret
popf
jmp
addr16
js
mov
cmp
pop
fnstsw
xor
adc
cmc
jno
pop
mov
es
lods
add
inc
adc
xor
stc
jmp
mov
bound
sti
push
lret
xor
insb
aas
stc
sbb
pop
dec
es
mov
jnp
jg
in
push
aas
cmc
das
test
or
adc
mov
fs
sub
cmp
or
js
test
insb
xchg
test
movsl
fidivl
jo
filds
pop
mov
pop
mov
sti
repnz
xchg
xorl
inc
cmp
push
sbb
shl
sahf
mov
sbb
add
sbb
pop
into
decb
mull
adc
clc
jb
mov
sar
scas
xchg
mov
add
sahf
xchg
aas
inc
cmp
fcom
mov
clc
ror
popf
push
insl
repz
outsl
add
inc
mov
jb
and
adc
sub
shll
xor
jbe
daa
adc
and
mov
dec
mov
lret
sub
repnz
mov
sti
push
outsl
int3
pop
jb
leave
lcall
lods
push
jmp
fnstenv
sbb
pop
cmpsl
cmp
ret
mov
or
mov
dec
in
push
mov
inc
out
and
dec
or
je
mov
sbb
out
sbbl
mov
sbb
mov
and
inc
repnz
jne
mov
xchg
mov
add
mov
inc
dec
xchg
leave
xchg
jl
iret
inc
mov
inc
sarl
push
push
rcrl
mov
and
jns
loopne
das
push
das
pop
in
xchg
jns
repz
sbb
pop
add
cs
pop
mov
scas
sbb
outsb
insb
imul
jle
cmp
mov
push
into
push
jl
xchg
in
fistl
adc
outsl
mov
push
outsb
xchg
xor
or
outsl
push
data16
and
and
das
inc
leave
mov
adc
xchg
sbb
sbb
mov
shr
dec
adc
inc
das
stos
adc
xchg
mov
jo
out
mov
mov
inc
lret
ds
pusha
pop
insl
stos
sbb
mov
std
xor
mov
cmp
ljmp
pop
jo
adc
fdivl
mov
frstor
adc
stc
mov
mov
das
xchg
jmp
pcmpeqd
ja
sbb
in
inc
cmp
mov
add
xchg
ss
out
add
adc
aam
sbb
mov
movsb
enter
test
and
gs
sub
jl
sbbb
pop
xchg
daa
pop
leave
les
push
int3
pop
mov
or
xor
sbb
test
push
xchg
daa
frstor
es
pop
xchg
stos
test
sub
icebp
bound
iret
cmpsl
out
pushf
pop
test
adc
pop
das
mov
adc
mov
rorl
xchg
pop
ja
jno
call
add
pop
mov
testl
mov
cmc
in
mov
popf
mov
jp
ficoml
cmpsl
rclb
xchg
or
movsl
sub
cmp
lods
sbb
jge
mov
ret
xchg
pop
add
sbb
popa
lret
or
sbb
sarb
insl
jl
daa
jno
pop
add
inc
cmpb
addr16
repz
or
cmp
push
mov
nop
dec
ret
fistpll
xor
insl
cs
sbbl
mov
leave
imul
dec
stos
jecxz
into
jno
mov
faddl
mov
and
cmp
testb
loopne
aam
jns
add
mov
mov
fimuls
std
push
dec
lds
lock
cmp
xchg
test
call
adc
stc
je
pop
mov
xor
cli
fmuls
sub
pop
movsl
add
xchg
dec
jae
adcb
aad
adc
push
and
jnp
or
pop
out
inc
jl
mov
jl
push
xor
inc
das
xchg
push
fucomi
mov
mov
dec
mov
int
test
pop
pop
cmc
sub
pop
fwait
inc
sub
or
push
rcrl
ret
adc
xor
addr16
mov
movsb
jecxz
into
pop
shl
std
xor
and
ds
fisttpll
and
loop
xor
lahf
cmp
lods
mov
ret
stos
es
and
das
sub
cmp
xor
out
xchg
cmpsb
xchg
sbbb
push
test
test
fisubl
lret
xchg
hlt
mov
push
sbb
cld
mov
ljmp
push
jg
mov
ret
lcall
imul
inc
add
push
pop
jp
xor
push
xor
repz
dec
mov
ss
sbb
dec
push
and
cmp
je
daa
dec
push
scas
mov
cs
fs
mov
cmpsl
insl
movsl
cmp
pop
dec
add
or
cs
fs
fisttpll
sti
sub
jae
and
mov
mov
jge
mov
into
sti
xor
sbb
movsb
out
int3
adc
out
orb
loopne
and
lds
sub
jp
aas
pushf
pop
inc
push
and
and
cld
xchg
xor
std
das
lret
stc
pop
imul
mov
outsb
dec
rorl
repnz
mov
imul
push
out
cs
xorb
ljmp
mov
pushf
xchg
xchg
push
pop
lahf
aas
push
cld
sub
mov
iret
sbb
sub
push
fadds
repnz
call
test
lods
insb
inc
test
call
inc
sbbb
mov
fdivrs
fsubrs
daa
mov
push
sbb
cmpsb
dec
sub
sbb
lret
dec
inc
cli
in
jbe
inc
jae
rclb
out
push
jne
dec
sbb
mov
out
lcall
cmp
mov
pop
add
xor
jne
dec
mov
inc
inc
xabort
gs
stc
orb
nop
outsb
dec
rcll
addr16
cmp
mov
pop
and
push
sahf
scas
add
in
insb
jae
leave
xchg
push
orl
in
bnd
dec
fnstsw
aaa
xor
and
lea
inc
das
adc
xchg
outsb
push
jge
xor
scas
push
lcall
jo
lea
shrb
or
cmp
sub
xchg
cmp
mov
icebp
cmpsl
insb
shlb
rol
test
adc
xchg
mov
push
repz
xchg
jg
push
hlt
jp
mov
aas
push
add
out
or
loopne
mov
fmuls
jecxz
leave
fs
push
jecxz
fists
mov
into
push
xor
or
mov
icebp
dec
and
pop
jecxz
cmpsl
sti
pop
test
cs
xor
aam
or
movsb
or
push
cmpl
rolb
pushf
and
call
jo
jmp
in
aas
fildll
cmp
dec
pop
clc
mov
cwtl
inc
pusha
mov
mov
or
std
lds
adc
dec
inc
add
jecxz
out
lock
call
sbb
sub
cmp
cltd
push
cmpb
jge
mov
sub
cmp
inc
push
adc
jb
scas
fdivrs
test
cmpb
addb
lret
bound
es
xor
adc
dec
push
cld
insl
pop
sti
and
lods
xor
movl
stos
pushl
fisttpll
mov
icebp
addr16
roll
js
lea
lcall
inc
push
mov
ja
cmp
xchg
js
push
inc
push
sbb
xchg
clc
aam
aaa
adc
or
rorb
cwtl
inc
cmp
jge
mov
int3
dec
xchg
sub
rcll
fidivrs
cmp
dec
jbe
movsl
loop
xchg
popa
jecxz
iret
lods
cmp
jle
inc
test
mov
inc
test
cmp
pop
les
js
xchg
cmc
fdivrl
push
jae
sbb
mov
adc
and
push
cmp
push
mov
jecxz
fdivs
and
push
jo
and
and
sarl
xor
subl
push
mov
scas
test
fnsave
mov
loope
fsubrs
sbb
loope
and
paddsb
pop
dec
inc
or
lret
xchg
inc
cmp
fistps
sub
adc
mov
mov
mov
insb
idivb
cmp
lcall
cmc
cmpl
imul
or
sbb
js
mov
sbb
pop
test
cmp
jne
pusha
aad
sar
mov
bound
mov
ficoms
mov
mov
stc
lds
xor
cmp
push
sti
dec
mov
in
stos
xor
or
xor
adc
jnp
or
lods
in
enter
lods
sub
scas
jne
and
adc
mov
xchg
bnd
fistpll
mov
sbb
cmp
mov
enter
out
popa
inc
leave
lret
popf
jp
xchg
mov
loop
iret
scas
mov
push
fcmovb
xor
cmc
and
test
lret
je
or
dec
sbb
pop
lock
mov
pop
inc
xlat
js
mov
imul
xchg
ret
mov
jbe
iret
pop
push
jo
xchg
cld
dec
xor
in
and
xchg
cmp
clc
xchg
aad
rcrl
adc
out
pop
inc
or
pop
mov
mov
mov
loop
and
mov
cmp
pop
iret
fsubrs
cmp
aad
clc
call
add
jne
xchg
xor
push
inc
xchg
scas
push
call
dec
dec
add
aas
dec
iret
cwtl
in
subl
mov
js
pop
test
push
in
push
and
jno
aaa
out
mov
xchg
mov
sub
and
icebp
adcl
xchg
inc
inc
jp
scas
push
insb
stc
mov
movsb
sbb
ds
push
adc
mov
addr16
and
fsts
mov
inc
sbb
lret
xchg
cmp
dec
pop
jge
sbb
and
pop
addr16
cmpsl
loopne
imul
mov
popa
inc
repnz
add
mov
pop
push
js
scas
and
pop
fiaddl
std
iret
shl
shll
dec
scas
or
sbb
cmp
inc
or
daa
dec
lds
and
jns
aam
ja
aaa
xor
jnp
inc
add
jecxz
mov
repnz
xor
cmp
int
pop
aam
xchg
fists
mov
movsb
jmp
or
push
fldt
pop
jecxz
mov
jno
sbb
jne
lea
cli
jge
pushl
out
push
xchg
jo
adc
xlat
inc
sub
loope
adc
xor
cmp
cs
clc
and
xchg
out
add
dec
add
aad
setns
or
loopne
outsb
scas
call
pop
sub
dec
xchg
mov
xor
test
sbb
mov
jae
and
dec
call
push
ljmp
cmp
mov
arpl
sbb
adc
fwait
cs
loope
mov
inc
into
or
push
push
dec
dec
xchg
mov
sbb
rclb
xor
stos
jnp
pop
mov
cld
hlt
frstor
jp
movsb
fs
adc
cmp
xchg
lods
cld
je
jecxz
cmp
mov
icebp
sub
pop
sub
adc
inc
push
jae
adc
and
sahf
fwait
xchg
loopne
ror
xlat
notb
mov
in
ds
test
ds
dec
divl
push
cmc
inc
push
lds
bound
nop
cmpb
data16
sti
testb
and
fwait
inc
push
or
stos
outsb
cmpsl
arpl
mov
push
hlt
cmp
aas
outsl
xor
bound
push
sub
jo
fimuls
pop
lock
pop
movsl
aas
pop
lods
mov
ret
adc
add
dec
mov
add
gs
push
add
fst
dec
mov
pop
sub
dec
or
mov
sub
and
sbb
cmp
sbb
lea
es
mov
mov
nop
mov
cmpsb
repnz
testb
and
inc
repnz
push
movsl
ja
out
inc
scas
fildl
and
jl,pt
cmp
enter
aam
pusha
insb
stc
cmc
es
adc
xchg
test
lds
outsl
in
int3
dec
inc
mov
mov
fcompl
mov
push
cmc
mov
sub
fnstsw
cmp
je
jns
jle
arpl
popf
adc
add
rorl
test
add
movl
cmp
movl
je
sub
mov
mov
mov
subl
xor
add
adc
xor
andl
xor
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
addl
push
xor
push
xor
mov
add
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
and
andl
xor
movl
movl
and
mov
mov
xor
xor
add
mov
orl
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sub
mov
sub
xor
mov
addl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
xor
xor
xor
sbb
mov
mov
mov
sub
imul
addl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
or
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
xor
mov
addl
sbb
mov
sub
mov
andl
xor
mov
mov
mov
dec
mov
andl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
jmp
test
icebp
arpl
scas
push
inc
fsts
imul
pop
bound
mov
mov
mov
mov
xchg
es
or
int3
imul
call
dec
inc
jp
mov
pop
fldenv
xor
lods
jb
adc
inc
xchg
mov
movsl
loop
sub
or
add
mov
push
or
xor
cmp
sarb
repnz
dec
pop
xor
inc
pop
mov
jno
xchg
mov
enter
jns
sahf
aaa
pop
addl
jecxz
sub
xchg
cmpsl
push
stc
int
imul
mov
fabs
lcall
pop
and
test
fisubrs
out
and
sarl
xor
cmpsb
in
loop
leave
call
xchg
cld
fildll
add
punpckhdq
inc
fstl
jo
or
sub
mov
out
fimull
push
push
mov
lods
scas
mov
adc
and
ss
mov
pop
je
and
loopne
andb
push
xor
jp
or
add
cmp
out
pusha
xor
fs
push
add
into
mov
mov
or
es
mov
bnd
dec
xchg
mov
xchg
sub
adc
ret
sbbl
push
arpl
pop
test
mov
ljmp
int
leave
inc
dec
rcrl
fdivr
lahf
xlat
mov
out
scas
pop
mov
jmp
loop
add
mov
push
lock
push
mov
lahf
mov
fmuls
mov
and
paddb
mov
and
gs
pop
inc
mov
scas
mov
xchg
and
lds
inc
cs
call
lods
inc
and
dec
jp
inc
sbb
add
fimuls
or
mov
popa
inc
dec
lods
outsb
sar
mov
push
imul
int3
push
call
subb
or
stos
xchg
inc
dec
add
stos
sub
subl
push
fsts
inc
imul
jmp
std
push
pop
js
ret
add
sub
mov
xchg
jmp
or
shrb
cmpsb
mov
mov
cmpsl
xlat
insb
sub
mov
pop
push
cwtl
mov
pop
int3
gs
cmp
addr16
mov
stos
out
int3
cwtl
cmpsb
outsb
mov
xchg
mov
dec
lock
scas
in
xor
stc
pop
sub
push
jae
adc
leave
push
scas
jp
cmp
out
sarl
xchg
mov
cmp
daa
inc
mov
inc
inc
stos
int
js
pop
pop
sub
hlt
mov
cmp
pop
push
dec
jl
popa
push
fstl
fs
sub
out
xor
stos
mov
fwait
cli
dec
lea
js
inc
ret
out
stos
cmp
popa
cli
test
push
push
pop
je
mov
xchg
lods
and
cmp
sbb
mov
test
ss
jp
cmp
into
xor
and
roll
in
pop
loop
call
and
rolb
dec
lahf
xchg
subl
dec
in
scas
test
cltd
inc
dec
sahf
push
call
inc
jnp
xchg
pop
lock
imul
das
pop
mov
into
push
mov
sub
lahf
sbb
insl
out
stc
out
icebp
push
push
mov
and
movl
and
dec
or
and
jno
sub
gs
insb
mov
clc
jmp
add
xchg
jno
adc
cmpsb
sbb
mov
in
xchg
xchg
inc
push
orl
mov
mov
ja
test
lock
nop
inc
insb
dec
and
fidivl
sbb
jecxz
insb
icebp
mov
enter
in
xchg
addb
mov
inc
mov
cmp
repz
inc
push
and
adc
lods
push
sbb
sub
mov
outsl
inc
sahf
bound
scas
jmp
adc
xchg
cmp
fcoml
jo
scas
or
lret
xor
fmull
gs
stc
add
mov
je
adc
test
cmp
scas
call
dec
mov
mov
inc
adc
mov
pop
ds
lods
stos
mov
pop
xchg
jb
jno
cmp
lret
es
stos
mov
gs
mov
add
sahf
popf
loopne
xor
leave
stos
inc
pop
sbb
mov
add
adc
inc
pop
xchg
insb
and
mov
ljmp
mov
inc
mull
lcallw
jmp
shl
jp
rcll
out
adc
and
push
dec
sub
push
jbe
mov
int
stos
mov
sub
into
adc
mov
idiv
int3
add
lods
fistpl
push
and
mov
in
enter
xchg
shlb
jle
mov
imul
scas
mov
inc
imul
inc
xchg
fstps
out
das
xchg
ljmpw
jbe
push
js
push
loope
call
movsl
cld
in
lcall
pop
adc
cmp
dec
xlat
push
decl
outsb
fwait
cli
jbe
xor
inc
in
mov
dec
mov
test
xor
mov
fsts
outsb
scas
lret
cwtl
frstor
dec
repz
mov
fildll
sbb
inc
icebp
out
js
jp
inc
movsl
push
inc
or
mov
push
adc
add
cmp
or
xor
mov
cmpsl
insl
dec
and
xor
jnp
sbb
lds
cmp
aam
mov
insb
pop
pop
mov
push
stos
fisttpl
and
and
xchg
test
mov
mov
cld
test
int
int
leave
push
jno
icebp
loop
inc
add
xor
mov
mov
in
cwtl
adc
stos
push
pop
add
jge
int3
lret
sqrtps
push
sahf
push
int
adc
aad
mov
testl
add
idivl
es
dec
jb
dec
shrb
imul
add
filds
sbbl
pop
aad
sbb
rcll
push
lea
popa
push
pop
jo
cltd
jo
mov
push
mov
negl
add
clc
repnz
add
icebp
dec
repnz
and
les
jns
push
arpl
js
jne
mov
sbb
iret
mov
les
ds
movsb
sbb
inc
shrb
out
sbb
lods
dec
popf
sub
pop
cmp
imull
jo
aam
loop
xchg
sbb
push
out
daa
xchg
add
cmp
imul
bound
jbe
clc
cmp
sub
sahf
test
ret
mov
orl
sahf
in
fnstenv
insl
das
dec
mov
mov
ljmp
and
out
xor
ret
jae
int
inc
mov
or
in
sub
xchg
lea
lahf
adc
push
in
inc
push
bound
sub
dec
aaa
out
nop
jne
ja
add
gs
cmpsl
mov
or
mov
mov
clc
js
mov
sub
fnstcw
pop
cmpsl
dec
ret
je
add
call
addr16
mov
adc
inc
mov
in
js
daa
mov
ja
lods
jmp
xlat
and
arpl
and
scas
xchg
push
popl
mov
add
in
cmp
mov
fildll
adc
repnz
mov
ret
sub
inc
and
nop
add
add
cmp
in
test
push
leave
add
cmp
and
cmp
add
test
je
iret
aam
ss
std
or
adc
ds
sahf
xchg
jne
jge
test
out
repnz
pop
cmc
push
xchg
imull
push
mov
push
loopne
inc
xor
cmpsb
and
arpl
addb
push
cwtl
push
jp
lock
xor
gs
pop
ret
jmp
popa
pusha
xchg
aam
push
add
or
push
js
push
push
mov
idivb
insl
sbb
cmp
pusha
clc
jbe
inc
pop
out
inc
jmp
sbb
add
ret
adc
fildl
push
call
in
das
sub
and
xchg
inc
nop
mov
out
test
cmpsl
push
test
push
push
add
dec
pop
sub
inc
xor
lahf
repz
cld
shl
mov
or
push
add
adc
push
and
scas
adc
popf
xor
mov
add
repnz
adc
fcoml
lods
jmp
into
push
fsubp
or
int3
out
cmp
lret
push
jno
jl
xchg
inc
xor
cli
add
nop
loopne
stos
test
jmp
push
push
leave
faddl
jg
jb
push
bound
movsl
push
mov
jns
ja
das
push
jp
mov
or
and
and
pop
ficoml
jmp
outsb
adc
jae
lcall
xor
shl
adc
or
insl
in
jo
xchg
jns
stos
push
addr16
out
inc
movsb
jmp
dec
cmpb
xchg
jle
mov
pusha
cmp
adc
push
ficoms
movsl
cltd
jo
adc
pop
mov
cltd
test
and
jle
mov
clc
std
mov
inc
xchg
xlat
int3
stos
adc
sbb
sbb
pop
jno
jno,pt
inc
and
or
xor
mov
shll
das
add
fsubl
xor
fstl
outsb
loop
adc
mov
lock
aas
pop
cmc
xchg
sub
subl
xchg
roll
mov
arpl
inc
adc
dec
pop
mov
dec
repz
stc
lods
inc
ljmp
jns
rcl
or
lods
sub
ja
popw
pop
mov
in
bound
cmp
mov
hlt
scas
xchg
add
push
rol
mov
mov
in
sbb
mov
mov
int3
outsl
add
add
mov
jl
dec
sub
sahf
xchg
or
jl
cmp
lods
rcr
lods
mov
jae
jl
test
add
out
js
mov
clc
fldl
js
jne
adc
pushf
jmp
enter
jl
xor
dec
cwtl
nop
or
sub
sbb
jbe
dec
mov
push
int
add
xadd
xchg
sub
pop
dec
push
inc
shll
dec
loop
mov
std
enter
stos
adc
sahf
lret
xchg
test
aam
mov
fcoms
in
out
xorl
insl
xor
pop
stos
icebp
call
inc
loopne
push
mov
sub
mov
sub
dec
hlt
push
mov
and
xor
sbb
call
jge
cmp
lods
daa
inc
stos
push
mov
jae
stos
dec
lods
xorl
pusha
mov
out
add
adcl
lods
sbbb
into
inc
sub
xchg
or
cmp
add
aas
mov
arpl
outsb
insl
mov
dec
inc
scas
inc
mov
das
cmp
pop
sahf
cmp
mov
add
nop
aam
cmc
or
imul
test
adc
dec
push
stc
sub
cltd
and
bound
lret
add
test
out
adc
out
xchg
dec
pop
pop
insb
es
cmp
aam
dec
insl
cs
cmp
popa
movsl
roll
pop
dec
pop
pop
jo
and
int3
mov
shl
loope
adc
mov
cli
ret
icebp
iret
cld
std
iret
loop
push
inc
or
adc
repz
cmc
hlt
adc
mov
les
daa
lods
fcoml
pop
or
sarl
adc
insb
cmp
out
adc
subl
mov
enter
pop
mov
jl
or
push
xchg
fldl
mov
inc
cmp
inc
out
dec
dec
repnz
in
cmp
ljmp
cwtl
mov
adc
mov
push
xchg
lret
cltd
pop
jnp
sbb
sub
mov
mov
gs
mov
and
xchg
mov
mov
jo
or
dec
adc
ss
rclb
inc
pop
ret
clc
nop
push
fiaddl
pop
inc
cltd
rol
ss
sbb
pop
mov
mov
sub
mov
ds
and
push
add
xchg
push
push
fistpl
pop
inc
xor
ficoml
jg,pt
mov
xchg
dec
mov
in
cwtl
adc
xor
add
lret
pop
arpl
cmp
dec
push
rcll
ds
movsl
in
shr
add
mov
sub
xor
aam
iret
jle
loope
sbb
daa
in
inc
add
cmp
lods
lret
js
add
pop
mov
add
mov
js
add
push
les
rorb
jnp
lcall
fs
mov
and
test
sub
das
push
imul
lods
shr
cmp
add
ret
insb
push
int
push
jecxz
lcall
inc
pop
call
stc
das
jle
rcl
or
dec
pop
push
pushf
jle
and
lods
and
clc
adc
sbb
push
inc
popa
in
or
adc
les
xchg
or
xchg
jecxz
jg
or
les
push
jns
jo
shlb
or
xor
mov
or
sbb
inc
lret
jno
enter
dec
nop
mov
or
imul
mov
cmp
mov
rcr
fiadds
cmp
add
xchg
adc
and
inc
sub
movsl
xor
jnp
pop
fsubs
mov
xchg
adc
mov
lahf
pop
mov
in
addr16
jecxz
les
pushf
cmpsb
sti
pop
cmp
ja
popf
repz
cmpsb
jl
mov
sub
fucomp
into
sub
cs
push
int
rolb
push
jg
jo
inc
push
scas
enter
out
lods
mov
cwtl
sub
mov
fcomip
lea
mov
aaa
mov
lcall
pop
in
xlat
mov
enter
rclb
jbe
xchg
sub
jl
xchg
mov
or
xor
xchg
add
aas
inc
je
bnd
push
je
cmc
mov
cmp
add
imul
pop
cmpsl
call
pop
pop
pop
cld
mov
mov
mov
lret
pusha
pop
ret
dec
int3
andl
int
icebp
xchg
ret
jno
pushf
mov
inc
adc
xchg
in
xchg
mov
ss
adc
add
mov
add
arpl
mov
jne
mov
insl
xchg
adc
daa
out
dec
iret
mov
pop
jg
call
push
jmp
mov
mov
xchg
das
ja
cmp
outsb
pop
dec
push
or
cwtl
push
push
and
std
fxch
mov
mov
shll
pop
pop
mov
sub
bound
push
lea
scas
in
arpl
out
data16
xchg
fnstcw
jg
inc
lahf
lods
les
fcomps
jmp
aaa
sub
sarb
cmp
sub
sbb
sbb
pusha
fucomip
movsl
push
inc
cld
and
dec
sbb
adc
mov
mov
std
mov
je
mov
cmp
pop
xor
test
test
cmp
sub
xor
in
frstor
xchg
mov
ficoms
and
ljmp
imul
iret
mov
mov
out
enter
loope
add
sbb
push
pushf
lods
inc
xchg
test
jne
sbb
cmp
adc
push
popl
or
gs
add
fnsave
leave
xor
jnp
pushf
ss
and
lret
insl
xchg
int
int3
addr16
sbb
daa
xchg
ss
je
in
mov
test
lds
pushf
cmpl
adc
sahf
int
pushl
std
add
icebp
inc
cmpsb
xchg
mov
dec
in
inc
xchg
push
fwait
aaa
push
scas
adc
and
cmp
inc
scas
int
arpl
mov
push
lcall
pusha
andl
add
rcll
insl
imul
pusha
in
pop
lret
adc
lahf
mov
repnz
sbb
scas
mov
sbb
inc
cmp
mov
stc
mov
push
adc
mov
lahf
sub
test
call
pop
adcb
push
sub
cmp
mov
out
xchg
mov
xchg
addr16
or
bound
push
pop
pop
dec
lods
or
mov
mov
add
arpl
data16
lds
or
or
inc
add
push
shrl
cmp
lock
sahf
mov
cltd
and
in
scas
dec
cmc
dec
push
fwait
scas
in
and
mov
or
cmp
inc
add
xchg
ljmp
jae
pop
cmpsb
push
mov
ja
xchg
repz
sub
cmp
inc
push
mov
rcr
aas
into
inc
cmpb
out
stos
es
cs
scas
scas
or
dec
repnz
xor
mov
pusha
insl
jg
mov
push
pushf
sbb
add
popf
out
add
fldl
cwtl
adc
push
iret
ret
and
pop
fs
xor
pushf
movsb
insl
sete
or
ficomps
rcl
stc
xchg
test
lock
into
cltd
mov
test
gs
cmpsb
xchg
xlat
test
add
iret
push
cmpsl
pop
adc
hlt
jl
mov
repnz
clts
mov
dec
inc
jecxz
insl
pop
popa
jo
lahf
sub
adc
shrb
pop
mov
test
mov
mov
cmp
repnz
or
mov
cwtl
cld
adc
mov
mov
loope
ljmp
xor
sub
xchg
mov
push
adc
ret
in
xor
mov
int3
pusha
pop
push
add
push
push
and
and
outsl
jne
mov
out
add
and
cltd
inc
and
jl
out
sbb
jl
rcl
adc
mov
daa
int
add
cmp
xlat
enter
out
xor
dec
mov
fnstsw
shll
inc
sahf
push
int
ja
dec
sub
sub
xor
ljmp
jg
xchg
cmp
push
dec
mov
test
jb
cld
dec
or
add
mov
cmp
mov
pop
notl
and
push
jb
cmp
mov
dec
push
push
mov
hlt
fmuls
and
adc
inc
jbe
popa
sub
jno
xchg
loope
addr16
rol
adc
cwtl
icebp
fldenv
jnp
mov
and
repz
mov
pop
mov
call
push
subb
cs
cltd
loopne
mov
fildll
lds
iret
jno
ret
inc
cmc
lret
push
jmp
fwait
sti
xchg
add
mov
loope
pop
ret
jp
dec
lods
xchg
repnz
mov
lret
sbb
push
cmpsl
cmp
or
test
das
scas
mov
loop
jle
popa
call
cmc
xor
in
mov
pop
cld
daa
or
lret
aaa
jo
ja
mov
and
test
push
shll
push
ficomps
lds
insb
mov
test
jbe
sti
cmpsb
or
repz
sub
popa
enter
dec
dec
pop
faddp
jg
or
shr
sub
imul
std
icebp
push
inc
mov
mov
mov
xchg
mov
negb
cmpb
xchg
rcrl
sbb
nop
iret
sahf
outsl
fisubrs
add
ss
sahf
push
dec
xchg
lcall
mov
jp
and
int3
xor
ss
inc
mov
pushf
jl
push
xchg
mov
mov
jecxz
call
mov
push
outsl
lds
xor
sti
std
movsb
mov
out
mov
dec
es
movsb
movsl
pop
fmul
xchg
js
jge
xchg
mov
test
xchg
sub
xlat
nop
test
pop
mov
mov
jecxz
mov
sti
xchg
jl
out
adc
mov
movsb
iret
sbbb
aam
das
sub
sbb
mov
lret
cmp
insb
mov
xor
shrl
or
lcall
pop
in
ss
mov
dec
dec
movsl
sbb
add
sbb
pop
mov
dec
fiaddl
roll
in
mov
inc
dec
pop
ret
repnz
xchg
loop
subl
iret
test
fisubrs
pop
int3
cmpsl
lock
ja
pop
dec
sub
mov
mov
xchg
sbb
inc
in
add
inc
push
mov
pusha
mov
enter
sub
push
adc
jp
pop
dec
pop
adc
mov
mov
test
jmp
jbe
dec
pushf
push
push
rorb
mov
shlb
call
into
jg
js
jno
popa
push
fnclex
imul
mov
inc
call
jl
xchg
jp
add
fcmove
js
cmpsl
jle
pop
out
test
cmp
dec
test
fucomi
mov
cld
mov
pop
imul
out
mov
jne
loop
and
inc
stos
lahf
xor
out
jl
xor
cmpb
jae
js
bound
dec
mov
jl
cli
test
mov
add
add
jmp
jno
movsl
fs
idivl
inc
int
lods
push
push
nop
js
lea
lret
das
xor
mov
sub
jge
data16
roll
arpl
xchg
daa
push
xchg
sbb
or
test
aam
testl
jae
and
dec
pushf
cli
mov
xor
jl
xor
add
mov
adc
push
divl
inc
sbb
xchg
xchg
pop
enter
mov
mov
imul
arpl
into
pop
in
ret
inc
xchg
incl
xor
inc
sbb
xor
imul
orb
lahf
xchg
aaa
test
or
cmp
lret
les
xchg
fbstp
inc
ficomps
and
mov
int
dec
inc
in
jno
cmpl
pop
fsub
das
clc
or
fwait
das
xlat
sub
call
mov
fidivrl
push
jb
adc
repnz
cmp
xchg
pusha
mov
pop
xchg
pop
movsl
sbb
cmpsb
push
movsl
aad
out
outsl
test
mov
scas
int
pop
out
into
push
dec
sbb
mov
pop
pop
dec
fwait
jnp
push
sub
sbb
hlt
and
dec
es
xor
sub
outsl
xchg
jg
jg
lret
cmc
outsb
inc
inc
sub
pop
imul
mov
cmp
or
cli
int
cmpsb
enter
jnp
sahf
or
xchg
out
into
or
shl
push
jmp
inc
sbb
push
andb
loopne
push
lea
mov
push
or
mov
xor
mov
xor
sbb
popa
jl
xchg
and
movsl
xchg
test
fimull
push
leave
mov
pop
jle
nop
clc
hlt
imul
pusha
sar
or
testb
add
push
mov
sahf
and
or
sub
jae
lds
data16
dec
fs
and
ret
mov
mov
add
adc
mov
adc
xlat
xchg
inc
jecxz
data16
sub
dec
sub
push
sbb
push
in
and
mov
mov
or
cmp
test
dec
inc
insl
pop
out
mov
iret
std
or
dec
lahf
out
xorl
push
stc
aad
loope
and
stc
push
xlat
xchg
adc
scas
ds
scas
inc
imul
in
adc
enter
cmp
xor
shr
rol
xor
test
cltd
mov
test
dec
test
cmp
cmp
inc
fucomi
les
out
pushf
jmp
insl
sar
mov
int
mov
xor
inc
dec
mov
cmpsb
sub
add
and
lea
jb
dec
adc
or
mov
xor
movsl
das
outsl
movd
xchg
dec
sub
mov
mov
cwtl
sbb
or
das
lahf
dec
lods
jae
xchg
pop
and
ds
shll
addr16
cmpsl
out
imul
jge
adc
mov
sub
add
pop
xor
cli
cltd
shl
jb
in
pop
les
jbe
mov
xchg
jle
jge
cmc
loope
mov
lods
mov
pop
dec
sbbb
adc
add
in
jp,pn
sbb
fists
mov
add
scas
dec
fnsave
ret
adc
push
pop
movsb
shl
inc
pushf
cltd
lcall
pop
adc
xor
out
push
add
fimull
test
xor
sahf
mov
or
in
aam
scas
arpl
movsb
enter
fisubl
rol
adc
adc
xchg
in
push
xor
out
arpl
xor
mov
icebp
pop
pop
pop
cmp
jae
inc
jmp
push
les
mov
xchg
lahf
clc
add
popa
fcmovne
jb
push
push
fs
mov
aam
ret
scas
call
add
mov
pusha
inc
in
sbb
rcrl
push
frndint
insb
mov
notb
in
sbb
daa
cmpsb
lcall
jne
dec
ja
ss
push
lods
test
imul
loop
daa
sub
nop
mov
stos
insb
cmpsb
ret
cmp
notl
pop
or
xchg
sbb
gs
xchg
lods
mov
maskmovq
idivl
mov
xchg
xchg
sbb
imul
iret
sahf
scas
dec
xchg
push
inc
outsl
test
in
insl
ljmp
daa
scas
add
clc
mov
pop
lret
push
pop
and
jne
xor
out
inc
sahf
es
out
mov
mov
mov
lods
pop
jmp
jae
pop
ret
adc
mov
push
aam
and
test
out
mov
push
sub
dec
fwait
xor
cmp
sets
pusha
add
push
rcrb
pop
in
mov
out
fisttpll
into
or
lcall
xchg
inc
cmc
dec
add
pop
add
sub
pushf
pop
xchg
jbe
cltd
stos
fndisi(8087
lahf
mov
mov
pop
jnp
xor
add
mov
cs
je
push
cmpsl
push
pop
lods
push
scas
mov
cmp
inc
push
dec
mov
in
cwtl
jnp
out
jle
fldcw
jae
rcrl
pusha
fs
aad
and
sub
fistps
mov
xor
or
sbb
loopne
mov
sub
dec
lret
push
into
loop
jnp
rcl
pop
xchg
push
sahf
out
cltd
or
mov
adc
jle
push
subb
shrb
inc
pop
sbbl
mov
push
or
jno
lods
fwait
mov
stos
ret
xchg
or
subl
mov
xlat
xor
add
dec
test
add
dec
jge
in
fs
test
push
mov
fcoml
es
ss
jne
mov
pop
sub
loopne
fstps
add
das
arpl
push
pusha
test
jecxz
mov
mov
les
dec
mov
adc
cld
add
inc
sahf
xchg
cmp
and
sub
popa
lods
cmp
fldcw
sbb
sbb
fsubrs
jae
out
mov
cmp
movsb
mov
fstl
mov
add
xchg
js
ret
iret
push
fcomp
cmc
stos
lahf
dec
mov
fisubrl
subl
enter
das
xchg
xchg
adc
test
pop
xchg
movl
sub
add
sub
add
repnz
adc
inc
mul
xchg
insb
pop
mov
cli
shlb
and
push
ss
lcall
add
sti
pop
pop
iret
mov
cmp
dec
lret
sti
sub
cli
das
pop
mov
aam
jo
xchg
rcll
pop
add
ljmp
sub
inc
popf
xchg
xor
enter
fadd
outsl
pusha
xchg
call
add
add
fidivs
push
add
pop
jne
leave
jle
xchg
lahf
int3
cmpsb
or
or
vmovntps
sub
ljmp
stos
and
xchg
aam
rclb
adc
pop
popf
dec
cwtl
adcl
ljmp
leave
ret
stc
pop
ljmp
fstpt
fs
das
mov
mov
sub
or
repnz
cmpsl
scas
out
in
push
out
ret
and
xlat
in
mov
leave
cmp
and
insb
push
ret
sub
aas
js
setle
sub
push
push
pop
shr
sbb
imul
stos
push
loopne
fdivl
jle
bound
popa
cld
pop
cmp
push
add
in
lds
mov
sub
je
sub
mov
jle
test
cmc
mov
inc
and
push
mov
repnz
sbbl
inc
adc
rorl
dec
lods
mov
mov
imul
fstpt
aad
out
push
popa
mov
jae
sub
in
sahf
mov
das
decb
test
daa
das
xchg
and
movsb
addr16
scas
daa
xlat
lds
bound
jl
dec
inc
adc
pop
fwait
xor
push
xchg
fldl
aaa
push
pusha
pop
mov
jns
adc
lods
push
sti
push
xchg
or
jnp
iret
movsb
mov
xchg
andl
mov
adc
mov
cmp
icebp
mov
xchg
ficoms
test
lahf
adc
xchg
xlat
mov
pop
xor
testl
mov
test
xor
add
in
dec
dec
xchg
outsl
fwait
push
pop
xor
pop
lods
or
mov
notb
jnp
or
xchg
dec
popa
xchg
scas
in
movsb
inc
sahf
xchg
das
loopne
or
xchg
mov
inc
mov
outsb
jmp
repnz
test
into
xchg
jnp
and
sbb
notb
repz
imul
sub
pop
mov
jg
xchg
mov
aad
outsl
daa
add
sub
adc
psubsw
mov
dec
roll
add
mov
int
imul
adc
es
jb
mov
and
push
sarl
enter
mov
adc
lods
pop
mov
mov
and
ret
or
mov
jno
cmp
mov
ja
xchg
int
push
adc
pop
lret
pop
xchg
repz
mov
pop
xchg
ror
push
in
fucom
inc
stc
and
addr16
divl
cmp
call
cli
fsubrs
dec
cld
call
mov
js
mov
mov
lret
cmp
xor
fdiv
jo
push
jae
jmp
or
mov
or
xchg
aam
and
das
cmp
sbb
aam
int3
push
mov
mov
test
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
jmp
jp
int
ret
add
pop
jg
push
loop
dec
popa
bound
bound
fdivl
dec
and
test
in
daa
lcall
ja
pushf
xchg
fsubl
sahf
or
push
pop
or
xchg
in
roll
clc
sbb
scas
in
les
test
and
jp
test
pop
nop
orl
mov
cmp
dec
sti
inc
jge
cltd
cmp
adc
jbe
mov
insl
stos
push
adc
dec
aam
and
xchg
mov
imul
mov
insb
sbb
mov
xchg
and
in
inc
xor
lahf
xor
inc
fistpll
mov
xchg
out
mov
pushf
fstps
lret
mov
jp
mov
int
pop
mov
jae
outsb
rcrl
xlat
cltd
mov
xor
mov
insl
mov
repz
lahf
dec
lret
push
cmp
dec
add
inc
push
jnp
daa
lcall
leave
inc
xor
test
das
cmp
adc
and
lock
cs
inc
or
xchg
stos
mov
dec
insl
lcall
insb
jae
pop
push
mov
pop
call
std
lcall
test
lods
insb
out
adc
and
mov
out
sbb
mov
adc
lods
andb
xor
daa
mov
rorl
das
pop
push
jae
mov
jb
inc
fld
mov
out
dec
xchg
push
insb
das
shll
inc
lret
push
pushf
add
scas
mov
jg
ljmp
outsb
adc
aad
cmc
pop
fmulp
jmp
xorb
mov
jp
loop
lcall
adc
xchg
jno
push
jne
pop
mov
jns
dec
out
cmp
or
add
test
sub
xchg
stos
jecxz
inc
pop
je
call
and
test
dec
dec
jo
fidivrl
in
sub
ret
rcll
mov
mov
mov
popa
test
xchg
out
jns
mov
add
insl
cmp
mov
mov
lret
jge
out
in
je
xchg
sbbl
jne
idiv
push
mov
push
arpl
insb
repnz
outsb
aaa
out
aaa
pop
mov
cmp
sub
sub
push
jo
mov
testl
imul
faddl
mov
adc
insb
lock
shlb
mov
pop
and
inc
lds
stc
out
inc
sti
pop
dec
scas
pusha
jne
add
test
out
push
insb
ds
enter
stc
mov
sub
xchg
cmp
push
pop
add
inc
and
out
jmp
std
adc
mov
enterw
lahf
xor
shrl
popf
cmp
mov
aam
cltd
cmpl
iret
pop
std
je
mov
cmp
inc
shlb
les
leave
inc
int
int
sub
test
das
ss
jae
ficoml
rolb
xchg
testl
mov
mov
lds
pop
pop
push
aad
call
jmp
mov
xchg
cmpl
mov
and
lea
push
mov
mov
adc
dec
lcall
add
aad
icebp
fsub
mov
lahf
out
jo
mov
call
cmc
cwtl
sbb
mov
dec
push
cwtl
in
fsubr
dec
add
pop
jno
sub
xor
out
test
mov
mov
cli
fdivrs
in
lahf
mov
out
or
aaa
or
push
lods
mov
push
push
clc
jnp
mov
das
push
push
push
cmp
bound
jp
cmpsb
rolb
out
dec
movsb
je
pop
dec
mov
mov
pushf
rclb
xorb
test
lods
pop
sbb
xchg
push
mov
popl
jno
push
xor
flds
jl
xor
dec
or
pop
jb
xor
in
ds
fbstp
ficomps
in
push
add
das
aaa
adc
mov
repnz
xor
sub
imul
out
pushf
div
adc
sub
ficomps
std
inc
shrd
xchg
xor
fcmovu
es
and
mov
xchg
cld
test
sub
in
mov
inc
lock
lds
insl
nop
and
lahf
repz
xorl
addl
jne
xchg
enter
les
push
dec
std
add
int
mov
jno
jecxz
repnz
jp
mov
sub
dec
popf
lret
ljmp
cmc
mov
inc
in
insb
mov
aaa
xor
pusha
inc
shll
cli
lock
push
lods
call
fwait
call
push
cmc
neg
mov
shll
aaa
test
sarl
sub
adc
sbb
fsubl
xchg
mov
fistpl
pop
in
xchg
pop
pop
sbb
test
pop
pop
push
lret
aad
jg,pn
jge
pop
push
cmpsb
popf
xchg
xchg
mov
out
ret
iret
aas
inc
sub
pop
xlat
pop
aaa
mov
dec
incb
mov
dec
cmp
test
push
ljmp
xor
jb
popf
out
vpshufhw
sti
dec
xor
sarb
fnstenv
inc
mov
lea
test
std
mov
xchg
std
stos
mov
cltd
rcrb
sbb
popa
cld
mov
sub
mov
adc
xchg
pop
insb
adc
cmc
mov
and
add
and
in
test
les
push
fidivrs
bound
add
cmp
inc
and
sub
lret
mov
das
in
inc
lret
repnz
jecxz
jg
popa
fiaddl
mov
dec
daa
inc
fsubrl
subb
cmc
or
lods
cli
cwtl
gs
je
mov
les
mov
sbbb
xor
test
mov
outsl
fistpl
dec
test
outsb
sub
mov
adc
pop
push
pusha
pop
add
fsubrs
das
aas
cmpb
inc
jg
imul
and
std
mov
cmp
pop
push
add
push
sub
cs
xor
imul
sbb
xchg
mov
lea
xor
mov
add
enter
sahf
or
or
lods
push
mov
mov
cmp
ds
jle
clc
ljmp
mov
nop
or
je,pn
testb
nop
and
pop
ret
cmp
lret
jmp
sub
jb
cmpsb
pop
cmp
mov
dec
lods
jae
sti
xor
inc
cmp
push
push
test
iret
push
outsb
cs
aam
clc
mov
cmpb
insb
test
jge
stc
pop
mov
mov
test
sub
or
sbb
or
sub
sbb
pop
inc
mov
push
addr16
sahf
ret
mov
or
lret
insl
dec
ss
ss
mov
popf
jecxz
shl
ds
push
xchg
add
hlt
mov
clc
mov
ds
cmc
sbb
das
jns
inc
je
sahf
arpl
out
ret
ljmp
push
jle
ficoms
xchg
sbb
cmpsb
push
sti
mov
mov
jecxz
dec
daa
cwtl
addl
fildll
dec
test
insl
or
arpl
dec
fdivl
adc
inc
cmp
adc
out
or
rcr
lds
dec
cli
mov
lock
xor
fwait
pop
fdivs
out
lahf
lcall
ja
cmpsb
jg
icebp
sbb
mov
repnz
faddp
icebp
sbb
pop
pop
aam
jle
dec
stc
into
mov
enter
add
rorl
mov
pop
int3
sti
pop
sbb
loopne
insl
jmp
loop
notl
addl
mov
mov
xchg
jno
in
sti
xor
clc
push
cmc
nop
out
ljmp
dec
fldl
aam
and
je
xchg
jae
mov
pop
and
ja
js
mov
push
outsl
ror
cmp
insl
cmpsb
pop
pusha
add
xlat
push
or
add
aam
xchg
xchg
std
mov
test
mov
xor
and
jnp,pt
pushf
sbb
push
and
test
xor
jne
shlb
sub
sub
inc
add
mov
ja
or
adc
xor
inc
or
lods
add
jbe
stos
stos
inc
shl
cmp
jmp
cmc
icebp
or
aas
mov
mov
insl
xchg
icebp
pop
scas
inc
ljmp
xchg
fisttps
pushf
imul
inc
jl
popf
pusha
lret
insl
push
ret
xor
in
out
and
pop
aam
je
jecxz
cmp
jle
decl
mov
int
xlat
push
sbb
flds
leave
dec
add
dec
sti
jle
es
mov
mov
xlat
mov
ret
test
lret
fs
push
je
lret
xlat
mov
sub
jae
out
ss
sub
loope
lcall
stc
adcb
xchg
fisubrl
cmp
fistps
hlt
popf
adc
stos
dec
data16
cmp
adc
and
pop
aaa
fidivl
imul
dec
adc
inc
mov
movsb
push
inc
test
dec
jg
outsb
adc
pop
test
daa
adc
or
test
sub
mov
jle
stc
push
inc
pop
xchg
inc
scas
mov
test
fidivrl
push
shl
push
mov
pop
mov
ret
push
pop
stos
scas
pop
cltd
mov
jb
lods
in
insb
out
repnz
mov
adc
lds
loopne
xchg
loope
jg
arpl
jnp
out
cmp
xchg
push
xchg
jecxz
jno
cld
or
cltd
in
mov
in
add
cmc
fdivr
test
add
jno
adc
les
mov
outsb
imul
imul
ret
sub
rcrb
mov
jae
lods
dec
repnz
lock
jl
xchg
add
dec
inc
cmp
seta
imul
push
out
aaa
andps
rolb
and
popf
and
mov
aad
pop
vmovups
mov
mov
cmp
lret
sarb
fcompl
rcr
mov
jns
in
cmp
repz
or
inc
push
mov
xor
bound
fsts
fs
lret
mov
pcmpeqw
fcmovnu
ds
test
cmp
cmpsb
push
jo
stos
mov
movsl
es
repz
lahf
cmpsl
nop
mov
inc
sub
xchg
orb
cli
pusha
jo
or
cs
dec
add
adc
ja
lret
test
mov
push
aad
jl
insl
lcall
aam
aad
adc
jg
dec
insb
stc
adc
pop
lods
cs
mov
iret
mov
ja
and
push
and
cmp
or
mov
fs
push
sbb
call
mov
out
movsl
mov
jge
sarl
sbb
mov
in
or
stos
aam
sbb
inc
cmpsb
enter
dec
lods
not
sub
or
mov
pop
mov
jae
in
insl
aaa
pop
insb
mov
ljmp
add
repz
and
mov
mov
scas
jbe
lea
mov
cmp
add
pop
out
push
inc
cmp
ret
adc
xchg
xchg
mov
cmpsb
push
pop
mov
and
lods
jnp
in
inc
aas
icebp
cmpsl
fs
pop
gs
js
imul
ljmp
test
dec
mov
aaa
sbb
stc
stc
adc
fistpl
insl
xchg
ja
ds
fwait
add
ds
loopne
fwait
jl
fisubs
dec
sub
aam
ficoms
xchg
ja
cmpsl
mov
cmp
movsb
scas
or
mov
stc
ss
push
int
and
pop
xor
dec
dec
call
mov
movsl
jb
pop
les
sti
sub
popa
imul
mov
out
sbb
jecxz
pop
fs
int3
cmp
mov
sbb
pop
in
push
add
cwtl
xchg
cwtl
imul
xchg
aam
sahf
add
cmp
test
sub
jge
jmp
in
test
mov
sbb
ljmp
call
test
cmc
inc
rclb
dec
movsl
sarl
xorb
cmp
push
test
mov
cld
inc
test
or
inc
lds
or
lret
rcrb
rolb
xor
hlt
sarb
insb
add
es
adc
mov
sub
and
enter
pop
xorl
mov
push
mov
lock
or
sub
int3
addr16
push
or
fldcw
pop
cmp
adc
js
out
jno
pop
aaa
pushf
mov
add
in
lret
pop
cli
fsts
imul
sarb
sub
movsb
insb
add
xchg
clc
add
inc
inc
sbbl
cmpsl
jbe
push
sbb
and
or
cwtl
lds
movsl
cld
insl
or
inc
ret
imul
sub
dec
repz
loope
dec
inc
cli
int3
lcall
lret
mov
jae
push
test
arpl
addl
sub
sbb
insl
xchg
rcrl
cmp
inc
ljmp
ret
inc
jbe
lds
mov
adc
js
jne
cmp
fisubrs
sbb
fidivrs
lret
pop
cltd
xorb
mov
fs
add
mov
es
push
cmc
popf
adc
cmp
mov
xor
xchg
ret
sbb
sti
mov
addb
cwtl
fwait
push
push
les
loopne
jg
adc
mov
cld
lods
test
dec
stc
cmp
out
mov
mov
mov
cmp
sahf
lock
int3
fdivrs
lock
or
mov
mov
push
stos
test
fdivrs
mov
movsb
push
lahf
xor
std
sub
std
and
into
loopne
and
mov
enter
dec
push
cmp
dec
cmpsb
out
inc
push
and
sbb
push
push
cli
movsl
outsl
pop
stos
adc
cmp
hlt
adc
sahf
sahf
outsl
lfs
aaa
ljmp
in
in
in
rcrb
insb
or
sub
rolb
into
scas
dec
sbb
and
cmp
add
iret
stos
xchg
outsl
enter
daa
push
movsl
test
push
test
add
push
adc
cltd
mov
push
adc
int3
in
daa
and
icebp
push
andl
xchg
cmp
out
mov
push
add
stc
push
dec
andl
ret
fld
dec
nop
and
fildl
push
out
sbb
jns
xor
mov
inc
adcl
rcl
add
dec
scas
xchg
aam
sti
gs
fdivrp
jl
repnz
mov
in
fsubrl
cmp
je
adc
cmpb
in
mov
je
fimull
push
cmpb
push
lea
hlt
andl
rorl
or
sbb
fcomp
adc
daa
and
or
add
mov
or
xorl
das
aad
cwtl
cmp
imul
sbb
xchg
mov
mov
mov
pop
sahf
ds
mov
sbb
cmpsl
movsl
mov
fildll
fadds
fisttpll
inc
cwtl
clc
fidivs
mov
mov
enter
mov
stos
es
cli
test
daa
dec
cmp
cli
dec
clc
es
pop
arpl
or
xchg
mov
int3
mov
loop
popa
lods
cwtl
js
jp
jp
inc
loopne
pop
hlt
push
pop
xchg
mov
jns
mov
testb
fsubs
out
shl
movsb
mov
jno
xor
dec
aam
pop
out
mov
and
imul
addr16
test
mov
jp
pop
mov
mov
lahf
test
mov
cmpsb
xchg
push
jnp
xor
ljmp
push
jae
fnstcw
sbbl
jnp
xor
mov
leave
sub
adc
inc
inc
xchg
rolb
pop
push
or
lds
adc
push
inc
or
mov
mov
nop
enter
jne
xor
xchg
mov
cmp
xor
outsb
xor
sbb
and
dec
sti
jae
imul
iret
fs
push
sub
add
out
adc
lds
mov
insb
pushf
mov
bound
lods
clc
out
pop
pusha
leave
roll
mov
dec
imul
outsl
rol
or
fdivrs
pop
mov
jp
ss
es
fsubp
scas
sub
push
pop
xor
xchg
sbbl
push
hlt
mov
sbb
or
sub
sub
shrb
jmp
mov
pop
sbb
mov
lods
and
add
jno
pusha
fsub
not
inc
ds
outsl
outsl
test
sti
lods
loop
sbb
push
sub
jle
inc
in
les
int3
test
lahf
xchg
shll
sub
mov
leave
sbb
xorb
xchg
iret
in
xor
push
arpl
xorl
dec
test
push
pop
adc
jmp
mov
push
insl
pop
mov
repnz
hlt
mov
test
xchg
cmpsl
bound
jno
mov
add
stos
jo
jecxz
cmp
sbbl
xchg
sub
jne
sbb
mov
lods
lret
test
imul
cmp
cltd
pop
rolb
pop
lods
xor
or
xchg
cmp
adc
mov
dec
sub
or
daa
cli
pop
dec
jb
sub
sarb
dec
xchg
or
fcmove
loope
lahf
or
ret
push
call
mov
lock
aad
fwait
dec
out
test
sti
cltd
cmpsl
push
jecxz
aaa
imul
adc
out
jl
icebp
fldt
jne
push
mov
aam
pushf
sub
call
jmp
jno
xchg
push
outsb
scas
adc
add
jb
pop
add
jno
mov
sub
int
xor
outsl
sub
xchg
add
ret
and
adc
pop
xor
imul
or
jbe
imul
and
adc
jmp
test
mov
fidivrs
setbe
mov
cwtl
in
xchg
arpl
xchg
or
mov
xor
mov
ljmp
ja
adc
andl
adc
ficompl
sbb
into
nop
in
rcl
aam
stos
out
push
push
rclb
mov
test
pop
jmp
cmp
imulb
pop
or
inc
xor
pop
xchg
dec
xor
loope
or
add
leave
cmp
test
cmp
mov
cld
adc
pop
fmull
inc
loopne
pop
es
lods
mov
in
dec
xchg
ja
lods
mov
ret
ja
test
push
adc
cmpsl
inc
movsb
xchg
mov
cmpsb
xchg
xchg
sub
sub
scas
cmpsl
xchg
sub
scas
mov
push
push
cmp
test
dec
sbb
dec
loope
add
mov
out
xlat
jae
cmp
cwtl
xor
js
or
jp
fnsave
mov
out
mov
movsl
test
into
imul
mov
nop
jp
add
cmpsb
mov
cmp
shll
sbb
jmp
sbb
pop
daa
xchg
cli
sub
mov
adc
aad
jle
cmpsl
cmp
stos
mov
sub
xchg
aaa
hlt
pop
testb
or
dec
pusha
int3
cltd
xchg
jbe
roll
cmp
adc
and
inc
xchg
jns
fwait
lret
push
arpl
and
and
sub
adc
movsb
mov
pop
test
sub
mov
adc
sbb
pop
mov
into
mov
ret
inc
push
push
iret
pop
in
cmp
xchg
sbb
insb
sbb
sbbb
cltd
and
push
xchg
mov
fnstsw
cmc
in
mov
push
inc
shrl
stos
pop
aad
xchg
sbb
xor
mov
jge
add
out
jno
xor
or
in
sub
xchg
mov
xor
or
or
std
or
sbb
pop
and
ja
fsubrl
pop
or
mov
stos
or
and
mov
push
loope
and
leave
enter
sbb
push
test
test
lret
cs
mov
fcomps
lods
lcall
lret
and
or
xor
sahf
jp
xchg
push
int
pusha
sub
dec
push
adc
mov
dec
enter
mov
and
sub
stc
shr
inc
into
add
add
or
or
mov
je
insb
bnd
push
int
call
xchg
fdivrl
mov
push
adc
testb
push
stos
dec
sahf
push
and
pop
nop
and
std
and
sti
dec
icebp
ja
out
test
ss
pop
stos
in
aam
data16
popa
ja
testl
lcall
jns
mov
scas
mov
loopne
pop
or
scas
es
pop
loopne
aaa
jle
pop
repnz
xor
xchg
xor
cmp
into
mov
xchg
or
mov
adc
push
dec
test
mov
enter
push
in
adc
aaa
loopne
iret
lock
jne
lods
loope
mov
pop
cmp
in
shr
adc
imul
xor
xchg
mov
addr16
sub
into
mov
popf
xor
icebp
push
bound
mov
inc
aaa
jnp
push
or
pop
xor
add
arpl
aas
adc
out
mov
outsb
cmp
stc
push
sbb
loopne
sbb
or
cs
fldt
imul
aas
in
cmpsb
xchg
fdivrs
mov
mov
test
shrl
mov
sub
subb
ss
mov
in
pop
lods
dec
in
inc
fadd
imul
ja
cli
or
mov
popf
or
pop
dec
add
cmpsb
mov
cltd
jo
mov
sbb
mov
jbe
xchg
shlb
mov
mov
cmp
lods
hlt
xor
daa
jmp
adc
lcall
dec
loop
sti
xor
mov
or
cltd
fucomp
or
in
push
sbb
cs
adc
jle
xchg
into
imul
mov
por
cmpsl
mov
int
sub
adc
xor
int
pop
jne
mov
mov
jge
call
inc
leave
mov
inc
jl
mov
imul
mov
neg
dec
add
or
leave
push
sub
int3
mov
pop
scas
jo
cwtl
leave
gs
push
pop
push
stos
xor
dec
pop
pop
or
add
outsb
sub
xchg
cmp
enter
aad
sti
lods
or
scas
fmuls
ljmp
xor
fs
mov
lds
insb
movsb
lods
hlt
ret
jns
adc
inc
fs
loope
pop
in
in
sub
lahf
sub
adc
add
push
inc
jns
cmp
cmc
sbb
fst
ret
imull
mov
das
xchg
push
icebp
push
jecxz
add
xor
fwait
push
iret
xorl
js
inc
jbe
fidivrs
pusha
xor
xor
or
push
out
out
jg
movsl
in
sub
cli
mov
adc
mov
xchg
int
sar
rorl
push
push
dec
gs
adc
daa
loop
xchg
jno
lods
inc
inc
cwtl
cld
neg
xchg
sbb
dec
cmp
in
add
jmp
mov
mov
call
adc
jbe
cmp
icebp
dec
hlt
sub
pop
lds
pop
pop
scas
pop
inc
lahf
lret
cwtl
rclb
cmp
stos
lcall
add
or
ljmp
xchg
xor
and
fwait
js
outsb
dec
pop
cmpsl
fsubr
mov
push
jmp
das
lret
nop
cmc
fstpl
ret
test
pop
dec
mov
test
scas
insb
imulb
sbb
lahf
jno
mov
mov
dec
leave
out
sti
push
fwait
ja
icebp
jge
push
jl
pop
cmp
jg
scas
fnsave
fstl
xor
jne
push
sub
push
popf
mov
xchg
mov
int3
pop
jg
fscale
stc
nop
inc
sub
jnp
scas
jnp
in
add
sub
jae
shll
pop
cmp
cwtl
into
int
popa
rcl
inc
repnz
hlt
sub
daa
xchg
fcoms
mov
in
add
ret
sub
dec
jb
jg
xor
fld
mov
push
add
iret
loopne
push
mov
push
scas
sub
mov
popf
dec
pop
int
pop
mov
mov
lret
cmp
imul
lea
jo
clc
or
fildll
xchg
inc
shl
aam
mov
ds
sarl
cli
cmp
outsb
mov
repnz
push
mov
push
inc
xchg
clc
sub
mov
subl
sub
jns
out
cmpsb
xchg
rcl
insb
or
mov
fistps
inc
jle
clc
jmp
push
fnsave
push
jge
cmp
andl
and
adc
inc
cltd
testb
add
push
sub
shlb
lret
or
xlat
adc
mov
fimull
pop
pop
mulb
popf
pop
mov
insl
mov
call
inc
adc
stos
sarb
dec
sub
xchg
and
push
fincstp
adcb
jge
popa
test
dec
jle
dec
std
and
inc
test
jbe
lret
divl
aam
cld
aad
popf
mov
fiadds
std
dec
add
shl
and
std
lret
xor
jo
inc
or
sub
xchg
stos
nop
inc
inc
xchg
cmp
inc
out
dec
fstp
enter
mov
push
cmp
movsl
xlat
mov
bound
sbb
sbb
std
outsb
add
fucomip
das
shrl
sti
ljmp
lds
jo
mov
mov
das
inc
lcall
loopew
pushf
add
push
inc
push
sbb
test
fistps
cmp
inc
add
movsb
arpl
add
in
or
jno
popf
add
or
dec
dec
mov
xor
fisubs
cmp
fcoms
imul
mov
mov
insl
jno
mov
lret
fcomps
lock
add
pop
cmpsb
je
and
das
mov
outsl
notl
xchg
sub
pop
jne
js
mov
sbb
mov
loop
cmc
sbb
outsl
in
fdivrp
jne
lahf
fsubrl
sub
inc
xchg
jg
push
sub
aad
test
stc
push
popa
or
daa
fldl
je
and
mov
sahf
or
xchg
cmp
sub
lret
pushl
pop
xchg
push
jno
jle
notb
cmp
nop
fcomps
pop
push
or
or
xchg
xlat
scas
inc
mulb
adc
jns
sbb
mov
ficoms
data16
dec
jns
lods
or
enter
jbe
mov
gs
cmc
add
mov
mov
pop
ret
mov
add
stos
pop
jmp
pop
xchg
xchg
push
fcmove
sbb
enter
movsl
xor
xchg
mov
sub
mov
test
mov
xchg
jbe
jle
cmp
inc
cld
enter
stos
je
stos
orl
jne
outsl
xor
adc
mov
sbb
sbb
pushf
and
mov
jne
ss
or
repz
xchg
out
cs
pop
clc
pop
loop
xchg
or
rclb
test
mov
jle
ss
pop
cmp
sbb
orl
stos
cld
lret
repz
icebp
rorb
cmpsb
mov
jb
stos
js
xchg
mov
sub
pop
and
xor
push
fisubrs
fwait
lods
jae
mov
loop
scas
adc
movsl
cmp
push
jle
call
mov
mov
addr16
fs
dec
outsb
lret
inc
push
test
cli
xor
mov
sub
mov
mov
and
dec
sbb
out
jle
in
es
push
dec
dec
pop
jge
dec
jbe
dec
es
jae
cmc
pushf
push
ds
inc
xor
or
cmp
inc
arpl
xchg
push
and
cmp
xor
xchg
int3
enter
rol
je
fnstcw
aam
push
push
add
sbb
rcll
xchg
je
xchg
mov
ds
or
dec
testb
stc
lahf
mov
sbb
xchg
enter
inc
daa
mov
adc
fcmovb
add
cld
push
popf
sbb
sbb
leave
and
push
aaa
xchg
jle
andb
xor
fistl
daa
mov
push
pop
mov
mov
push
jecxz
pop
sub
iret
imul
scas
sbb
push
out
loop
sbb
add
add
into
mov
outsl
sahf
lods
rcr
lock
sarb
loop
pop
scas
mov
push
and
fcomi
fstps
jl
dec
movsb
and
push
ljmp
sub
cmp
pushf
push
popf
icebp
add
sarb
jge
sub
cmp
pop
adc
lea
insb
sbb
xchg
popa
fstpl
pop
leave
or
es
jns
cmpsl
js
or
leave
inc
int3
pusha
rolb
inc
adc
inc
lret
adc
push
push
mov
std
inc
mov
mov
ret
sbbl
loope
inc
or
ret
jle
cltd
std
pop
push
lea
andl
adc
ljmp
sub
inc
gs
and
test
test
lock
jno
lock
cmc
push
sbb
idivl
sarl
ss
mov
int
jne
xor
jp
fcomip
mov
adc
into
sbb
paddusw
cmp
aam
xchg
in
bound
insb
or
pop
jge
call
popf
lahf
aam
subl
xchg
icebp
xchg
flds
je
dec
mov
ficoml
aam
jge
stc
pop
pop
idivb
dec
xchg
je
sub
mov
dec
cs
jecxz
enter
fdivrs
insl
lods
iret
and
xor
movsb
add
pusha
pop
enter
adc
sub
stos
fmuls
push
mov
lret
js
sub
test
inc
add
mov
mov
adc
call
lcall
cmpsl
ja
das
pop
mov
mov
int
add
in
push
std
jp
mov
pop
arpl
lret
loope
lret
test
popa
sti
inc
jo
sub
dec
sbb
and
loope
rorb
adc
lret
hlt
test
jbe
cmp
mov
push
ficomps
shrb
jle
push
js
and
xchg
in
pop
mov
adc
vpaddw
dec
or
test
mov
aam
xchg
push
jne
les
sub
xchg
ret
and
xor
or
mov
xor
adc
adc
clc
jmp
ret
jno
mov
lcall
xchg
test
sarb
lods
leave
jmp
inc
clc
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
sub
mov
and
push
sub
mov
sub
mov
orl
lea
subl
mov
add
mov
mov
adcl
mov
xor
subl
add
mov
mov
add
mov
mov
add
mov
subl
mov
add
add
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
mov
adc
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
adcl
mov
mov
mov
add
xor
or
jmp
paddsw
mov
inc
test
pop
bound
out
pusha
dec
inc
push
gs
jl
add
stos
add
test
dec
cs
push
adc
cmp
mov
inc
jno
insb
addr16
adc
ret
jl
mov
stc
xor
stos
push
popf
lahf
cwtl
mov
out
movsb
xchg
cmp
jmp
pop
lahf
sarb
pop
cmpsb
jge
mov
scas
cli
cmp
mov
or
arpl
pop
sti
xchg
cld
popa
sbb
int3
jnp
lcall
mov
jle
mov
fimull
adc
mov
pop
loope
ret
cmpsl
mov
mov
and
jle
dec
cwtl
fwait
rolb
pop
fs
jle
subb
add
pop
cld
sbb
dec
test
das
out
mov
sub
lock
add
xor
push
add
lahf
fistl
call
nop
sarl
inc
shll
cmp
push
sarl
adc
jae
sbb
and
bound
dec
insb
mov
dec
sub
bound
xchg
cs
andb
xor
iret
add
std
mov
loop
in
mov
dec
xchg
stos
xor
fcmovne
out
and
jnp
mov
insb
cld
mov
movsl
jo
pop
daa
mov
adc
in
lcall
inc
outsb
mov
fcompl
lahf
cltd
inc
mov
mov
ror
les
cmp
xlat
out
mov
xor
in
cmpb
mov
dec
je
or
enter
mov
jnp
pop
sbb
out
mov
lret
xor
push
pop
shrl
nop
scas
push
xchg
fucompp
scas
pusha
gs
mov
or
pop
inc
xor
lret
movl
push
imul
loopne
push
mov
and
dec
pop
mov
aaa
imul
mov
push
push
push
gs
push
outsb
ffreep
mov
mull
xchg
mov
mov
sub
je
fstl
lahf
pushf
cmp
ds
pop
pop
rolb
sbb
inc
or
pop
xchg
pop
es
push
mov
cltd
sbb
lret
push
addr16
mov
jecxz
jmp
pop
adc
sbb
psrlq
mov
xor
jno
jnp
int
test
mov
loopne
mov
jb
inc
push
test
iret
in
loop
cltd
das
xchg
or
jns
subb
xchg
inc
add
js
jb
and
push
lcall
mov
daa
in
xor
aad
fdiv
inc
in
cli
or
add
mov
push
mov
nop
js
xchg
pop
mov
cmp
je
and
dec
aas
call
add
fildl
sahf
dec
subb
je
mov
mov
xor
dec
icebp
outsb
lds
lret
push
fnstsw
pop
cli
pop
sti
icebp
daa
jne
xorl
fsubr
mov
jne
rcl
ja
adc
sub
int
jae
add
sbbb
add
pop
dec
fldenv
cmp
inc
pop
insl
push
scas
scas
mov
xchg
add
fsts
cwtl
jne
xor
pop
jl
inc
mov
sbb
add
cmp
mov
mov
xchg
xchg
mov
out
or
pop
jge
jle
cs
xchg
sub
sti
xchg
lods
jp
repnz
in
mov
mov
push
push
in
pop
sbb
sti
add
into
mov
jle
cmpsl
les
rclb
cli
cwtl
and
jle
mov
push
jae
das
dec
lock
in
scas
dec
mov
push
mov
cmp
sarb
xor
cmp
test
mov
lahf
push
add
jo
lret
out
clc
lods
mov
mov
in
push
push
icebp
loopne
lods
rclb
les
push
inc
mov
jo
inc
outsb
sbb
das
inc
jg
shll
mov
mov
out
mov
add
imul
inc
lcall
push
xchg
add
out
lea
push
pop
cmp
cltd
pop
outsb
pop
jmp
mov
or
notb
mov
cmp
mov
jp
outsb
icebp
or
sub
shll
mov
sub
sub
mov
bound
inc
pop
dec
jecxz
xchg
mov
insb
cld
clc
sbb
sub
leave
xchg
iret
or
pushf
bound
out
or
sbb
and
les
ljmp
jnp
pop
dec
call
call
les
popa
adc
mov
cld
pop
enter
xlat
cld
ffreep
mov
mov
xchg
push
mov
pop
fsubl
push
fwait
pop
pop
sub
xchg
aas
mov
xor
cmpsb
outsb
shll
out
sti
rcrb
in
ret
jmp
jo
and
mov
test
call
add
pop
loopne
or
fdivrl
xchg
ret
jecxz
leave
xchg
cmp
add
test
dec
push
dec
mov
mov
daa
in
js
fwait
jb
sbb
mov
lods
sbb
test
mov
sub
mov
imul
out
cmp
add
xchg
or
jae
lods
aas
jmp
jmp
enter
faddl
neg
sub
fstpl
jmp
daa
push
sub
aad
outsb
jns
push
sarb
sbb
movzwl
ds
xchg
add
jge
sub
jle
sub
shll
dec
and
cmp
lret
mov
outsb
mov
sar
xor
cmp
push
and
xchg
ja
cmc
xor
dec
sbb
test
xchg
mov
add
dec
dec
es
cs
leave
orb
outsl
mov
cli
es
imul
and
rcl
lods
nop
jl
mov
cmc
jo
inc
push
cwtl
clc
cmp
lds
jbe
mov
add
dec
jg
cmp
lods
xchg
imul
sub
push
cmp
notb
or
int3
pop
mov
in
or
lods
mul
and
push
xchg
mov
mov
fldenv
test
mov
imul
mov
icebp
push
sbb
xor
out
fsubl
cmpsb
insl
mov
mov
mov
rcl
and
dec
aam
outsb
dec
push
arpl
loopne
xorb
inc
add
repz
push
jge
mov
icebp
cmp
mov
mov
gs
mov
push
outsl
out
mov
pop
jno
xorl
outsb
add
pop
mov
pop
cld
dec
cmp
stc
sar
jb
cmp
mov
add
insl
jo
xchg
sbb
shlb
addr16
test
mov
in
cmp
dec
xchg
cmpsl
inc
sub
push
data16
aaa
fmuls
xor
jbe
cmpb
js
sti
inc
mov
fwait
cmpsb
stos
mov
jl
cli
daa
and
jg
aad
sbb
call
pop
imul
data16
sbbl
call
das
fiadds
dec
or
sub
mov
inc
sbb
loope
int
addr16
pop
sbb
mov
adc
iret
ljmp
fstpl
test
test
push
loopne
jb
int
xorb
mov
push
leave
jl
push
pop
repnz
ja
movsl
mov
jo
dec
mov
mov
inc
int
f2xm1
jle
mov
cmc
insb
out
out
sub
sbb
popf
daa
mov
push
push
scas
adc
mov
inc
push
add
int
add
test
scas
jbe
mov
push
bound
inc
stos
sub
mov
addl
jne
cwtl
mov
xchg
jg
jo
lret
jne
adc
out
pop
jne
xchg
add
fadds
jbe
dec
fsubl
mov
arpl
pop
stos
jne
mov
adc
loop
ret
fiadds
stos
jle
movb
fldz
push
add
add
out
insl
stos
stos
push
and
into
push
aam
ja
rorb
xor
dec
fisttpll
sub
lods
mov
jmp
stos
pop
insl
pop
jbe
cmp
sbb
push
push
xor
inc
push
ret
stos
ficomps
into
jg
imul
fistpl
cmp
lret
adc
mov
mov
leave
rolb
lahf
insl
push
dec
mov
mov
or
shlb
insb
push
popa
ja
fstpl
mov
in
inc
push
push
cmpsl
mov
in
jbe
jne
push
rclb
lcall
mov
dec
ja
push
movsl
jg
mov
repz
sti
rolb
add
lds
cmp
or
or
les
xor
cwtl
mov
sti
cmp
inc
xchg
lock
out
jl
shlb
jae
orl
dec
pusha
pop
andb
inc
xlat
sub
mov
pop
js
mov
sbb
pop
jecxz
imul
xor
pushf
jae
shlb
xor
pop
dec
repnz
sbb
aaa
jne
jo
adc
bnd
push
test
or
xchg
cmpsb
jmp
sub
jmp
popa
lock
mov
xchg
sti
mov
mov
lea
jle
aaa
lods
mov
or
scas
movsb
dec
sti
ljmp
adc
hlt
sub
xchg
shrl
xchg
popf
xor
mov
pop
mov
sbb
scas
jmp
mov
aaa
out
sub
out
jns
pop
jge
push
xchg
mov
or
gs
stc
lea
or
push
pushf
push
repz
aam
jge
xchg
push
push
jge
shll
shlb
lds
out
faddp
cwtl
cmp
fistps
and
push
inc
stc
dec
sti
addb
lock
mov
dec
fs
mov
dec
ret
mov
push
shrl
rcrb
test
push
cmp
addr16
lret
mov
scas
jbe
sbb
mov
push
dec
cmp
test
das
fadds
mov
xchg
adc
cmpsl
lret
test
sbb
inc
test
lcall
and
add
or
fisubs
sbb
out
in
xlat
arpl
dec
cmpsb
in
ret
push
mov
xchg
jo
mov
and
int
mov
mov
cmp
pop
pop
sub
or
pop
ds
adc
dec
push
xor
dec
add
leave
sbb
orb
xor
lea
inc
shl
ret
adc
or
in
dec
arpl
sub
inc
mov
cmp
mov
sahf
fsub
sbb
sbb
fadd
iret
push
aas
xor
fadds
inc
mov
into
jbe
jg
pop
jle
adc
es
sbb
out
dec
xor
movsl
pushf
hlt
fildl
cmc
pop
push
outsb
pop
shrb
pop
hlt
cmp
mov
lcall
push
shll
mov
cmpsl
cmp
stos
call
enter
lods
and
repnz
iret
or
mov
out
inc
mov
loope
pop
xor
xorw
and
sbb
or
push
xorb
repz
cmp
arpl
into
lret
mov
sbb
jle
outsl
mov
dec
pop
bound
adc
pop
test
into
imul
jno
aaa
lret
cs
ret
ds
flds
cs
fs
mov
fcomi
aas
xor
push
scas
adc
pop
movsb
push
daa
jae
ror
test
hlt
sbb
packuswb
pause
mov
cld
aad
dec
cmp
orl
movsl
iret
mov
orb
xor
push
jo
mov
es
mov
pushf
push
dec
std
cli
lcall
xchg
sbb
lcall
jbe
or
movsl
xchg
fldcw
in
lea
xchg
xor
adc
ljmp
pop
dec
nop
mov
lahf
pop
sbb
and
in
cli
push
push
mov
sub
mov
into
add
and
mov
shll
xchg
out
imul
negb
fs
mov
fists
add
movsl
insb
fcomi
jae
mov
dec
ljmp
cmp
dec
and
pop
push
sbbl
cmp
pop
push
shrb
lahf
test
dec
imul
xor
addl
xor
pop
js,pn
xor
or
pop
or
clc
sub
std
mov
aas
push
xchg
xlat
or
imul
xchg
std
mov
xor
loope
and
lea
lock
xor
fxrstor
inc
mov
int3
mov
push
and
call
mov
cmpsl
mov
pushl
sub
repz
or
mov
mov
mov
xor
pop
lcall
mov
xchg
pushf
sbb
adc
rcll
mov
adc
adc
jb
imul
cld
stos
or
sub
mov
add
daa
insl
mov
out
xchg
dec
or
mov
cmp
or
test
fists
and
test
mov
arpl
mov
cmp
pop
gs
lea
or
fnstsw
outsl
pop
mov
sar
scas
enter
pop
outsb
jp
push
mov
jg
imul
notb
inc
xorb
lcall
in
or
in
das
dec
sbbb
jae
fwait
jle
add
and
mov
outsl
pop
cld
loop
inc
lcall
test
shlb
js
mov
xor
pop
adc
inc
lods
cmpb
test
in
arpl
repz
add
sbb
sbb
hlt
rclb
jecxz
jg
dec
test
lods
ds
into
outsb
pushf
cld
shlb
jl
das
cmp
test
inc
dec
sti
xchg
insl
call
out
fs
lock
mov
in
and
dec
test
mov
addb
and
and
repnz
pusha
pusha
sbb
stc
imul
clc
fidivs
repz
mov
cmp
inc
lea
pop
adc
xchg
inc
adc
insl
shrb
cmpb
ss
data16
jg
sub
shll
arpl
push
inc
fs
lds
inc
gs
loop
jo
xchg
out
ds
incl
mov
dec
xor
push
xor
and
xor
mov
sbb
xchg
or
daa
rcr
cmp
out
or
orl
or
pop
jnp
sahf
mov
leave
add
inc
cmp
sbb
add
cmp
pop
inc
mov
push
mov
clc
ror
gs
fldcw
popf
xchg
sahf
aas
mov
sbb
imul
pop
out
mov
in
idivl
in
dec
sbb
mov
add
xlat
lret
mov
xchg
jmp
sti
gs
cs
outsl
or
jp
sbb
daa
test
aaa
imul
or
push
jecxz
sbbb
popa
and
aad
rorl
jge
mov
or
aam
sahf
push
xchg
into
into
xchg
repz
fbld
aaa
dec
push
call
inc
movsl
and
xchg
cmp
test
push
lock
dec
dec
mov
inc
negl
decl
jl
xchg
outsl
rcl
subl
clts
sbb
and
ljmp
mov
in
push
xchg
jmp
mov
pop
mov
jns
stos
cmp
mov
push
dec
jbe
jo
test
sub
pop
mov
jl
jnp
inc
jmp
and
les
daa
or
sbb
mov
push
stos
sti
ljmp
or
sub
cli
dec
arpl
inc
add
stos
push
leave
adc
xchg
pop
mov
and
and
sahf
sub
sub
pop
mov
iret
cmp
xchg
shrl
push
js
hlt
outsl
scas
push
rol
test
sahf
push
lea
mov
inc
call
adc
and
adc
lods
dec
ret
mov
aad
call
push
add
sub
scas
js
jge
push
and
pxor
mov
scas
cwtl
into
das
mov
sbb
popf
mov
mov
mov
mov
mov
ret
sub
movsb
mov
inc
test
mov
inc
clc
dec
xor
popf
jbe
out
cmp
pop
cld
xchg
xchg
rcll
ljmp
push
enter
lea
shlb
std
stos
jb
jae
ja
addl
iret
mov
stc
rcrl
stos
push
shlb
popa
ja
das
scas
sbb
rorb
cld
and
mov
or
rorb
cmp
or
lock
sub
pop
mov
jno
aam
or
leave
sbb
loopne
jo
push
add
test
mov
cmpsb
inc
iret
div
call
xor
sbb
or
enter
jp
mov
cmpsb
jge
test
lea
dec
or
sub
faddp
decb
nop
add
mov
pop
xor
push
cmpsl
cld
out
sbb
pop
pop
call
ret
dec
sub
xlat
mov
jo
pop
inc
sbb
cmc
filds
jp
mov
pop
push
clc
push
sub
std
cmp
xchg
stos
jno
mov
xor
xor
cmp
push
push
sbb
dec
sti
add
and
sbb
lock
insb
les
cli
push
mov
inc
pop
inc
push
jl
cli
adc
mov
add
inc
arpl
push
cltd
push
lds
pop
inc
xor
sti
repz
fadds
add
mov
mov
test
jae
and
ja
cmpsl
inc
pop
fistl
or
xor
jns
shrb
jl
test
or
inc
aam
mov
inc
cmp
pop
in
jb
and
test
int3
iret
cmpsb
pop
imul
shrb
inc
jbe
cli
jnp
xchg
stos
dec
push
stc
mov
popf
mov
jbe
cmc
inc
out
dec
jl
push
adc
mov
ret
mov
or
data16
and
mov
mov
add
stos
std
inc
jmp
pop
push
ds
push
lods
das
popf
cmp
stos
push
and
fmuls
je
xor
xor
mov
jl
sbb
test
stc
dec
and
dec
cmp
movsl
inc
xor
sub
dec
ss
mov
outsb
popa
push
mov
and
push
imul
add
pusha
xchg
popf
xor
pop
test
les
push
cmp
in
jnp
push
xor
mov
cwtl
lcall
cli
pop
xchg
rorl
call
dec
cmp
adc
push
ds
push
xchg
jae
lds
fincstp
scas
andl
mov
rorl
jmp
ss
xchg
loopne
and
arpl
insb
jmp
mov
into
mov
adc
add
and
data16
xor
ja
mov
jae
sar
das
into
repnz
je
divl
imul
xchg
test
movsb
xlat
into
mov
iret
not
inc
in
repnz
push
jno
gs
mov
sub
ss
and
stc
aad
stos
or
push
and
cmp
cmp
fidivrl
jg
xchg
xor
mov
repnz
stos
or
divl
je
scas
das
sbb
mov
xor
aas
shrb
shl
aas
ds
data16
rol
or
iret
out
test
cmp
cltd
dec
jg
xchg
jp
mov
stos
mov
jmp
arpl
xor
imul
and
pop
int
mov
ljmp
xor
mov
add
loop
adc
cli
movsb
sub
adc
mov
xorb
jne
mov
sub
fstpl
or
jno
add
outsl
dec
and
fs
jns
stos
fadds
mov
clc
sti
pop
jp
outsl
push
jge
sbb
daa
mov
lods
stc
movb
or
jge
inc
dec
fwait
cli
data16
sub
and
inc
les
repnz
cmpsb
jp
dec
jp
mov
insl
jmp
cmp
imul
loopne
mov
push
add
sarb
pop
daa
jge
inc
xchg
push
mov
inc
sbbb
mov
test
int3
loop
adc
stos
or
cmp
or
fmull
sub
xchg
mov
xor
sbb
sub
addr16
loopne
into
mov
scas
mov
inc
or
mov
lret
mul
add
loop
stos
mov
icebp
mov
sub
mov
loopne
cwtl
or
sbb
movsl
mov
add
imul
or
pop
test
outsl
xor
inc
push
mov
sahf
pusha
xor
adc
jle
lret
dec
mov
xchg
adc
and
xchg
sub
psrlq
jge,pt
lea
sarl
out
outsb
lods
sbb
mov
or
jne
insl
sbb
scas
add
sbb
sahf
bound
lcall
ja
jg
test
int
and
gs
sbb
or
mov
or
loope
cs
icebp
cli
fidivrl
add
sub
and
xor
push
adc
mov
mov
mov
shlb
test
mov
fwait
pop
jge
and
stos
mov
mov
sbb
fdivrl
stc
hlt
lock
or
pop
cmp
push
mov
pop
in
mov
out
sbb
mov
in
dec
in
xor
cwtl
iret
mov
and
xchg
test
iret
jge
xor
call
mov
bound
mov
push
les
push
imul
jnp
adc
and
jae
fbld
leave
sub
add
sub
sbb
adc
fwait
sahf
mov
sbb
fsts
mov
je
jb
jecxz
mov
mov
jo
mov
out
pop
stc
bnd
aam
jl
scas
icebp
inc
xor
outsl
fisttpll
iret
fildl
mov
dec
xchg
xchg
mov
lods
mull
and
loopne
mov
dec
pop
adc
add
int3
inc
sbbb
mov
adc
push
sub
gs
xlat
mov
mov
sar
pop
inc
jbe
mov
push
mov
rcl
roll
ret
push
std
sub
call
mov
lock
std
mov
test
inc
fildll
icebp
dec
aam
dec
stos
xchg
pop
das
das
test
shrb
mov
insl
sub
add
nop
movsl
rolb
pop
sbb
jl
adc
aam
jl
cmc
in
ret
decl
push
inc
in
sbb
xor
aad
sbb
js
sub
mov
inc
mov
fs
fcoml
mov
mov
lcall
stc
mov
insl
push
push
popf
xor
mov
das
jb
add
pushl
sbb
pop
sti
mov
xchg
jmp
cmp
push
test
out
xor
out
jbe
adc
push
fbstp
mov
add
sbb
ss
andb
xor
call
sub
sbb
push
lea
jmp
mov
push
jae
dec
cmpsl
jns
lock
insl
inc
clc
or
insl
inc
repnz
fmull
lret
xchg
xchg
dec
jg
adc
or
aam
pushf
sub
xor
jno
jecxz
xor
sbb
inc
imul
jb
mov
addb
or
outsb
lcall
or
cli
rorb
out
out
sbb
rcrl
inc
lahf
xor
push
sbb
pop
sbb
lret
loopne
xor
push
sbb
sub
stos
and
xor
fs
and
test
push
adc
mov
push
and
movsl
aas
jns
or
imul
jb
or
jecxz
dec
xor
adc
push
loopne
outsl
mov
out
movsl
arpl
or
les
pop
les
dec
out
test
add
icebp
lds
push
movsb
jae
mov
in
iret
xor
fwait
or
test
cmpsb
test
cld
add
ljmp
mov
insl
orl
push
fnstenv
mov
int
adcl
data16
test
mov
add
dec
imul
fisubs
dec
xlat
insl
and
xlat
ret
je
jle
jmp
in
jb
ja
inc
pop
jbe
jno
and
add
sub
ja
ffreep
sbb
dec
mov
xor
std
mov
dec
xchg
mov
lock
pushf
fbld
mov
lcall
dec
xchg
inc
xlat
adc
loopne
mov
out
nop
add
add
call
push
sti
sbbl
fcomi
or
mov
and
xor
shll
inc
pushf
lret
cwtl
xor
mov
cmp
cs
jbe
dec
sub
sbb
psubusb
pop
sub
aas
and
lea
xor
inc
xchg
jmp
imul
mov
inc
inc
movsb
fwait
push
jp
sub
mov
loope
mov
bound
push
mov
mov
xchg
pop
sbb
ror
dec
sub
aam
and
push
lods
push
sub
jg
xchg
mov
fsubrs
xor
testb
imul
inc
mov
iret
cmp
xchg
jae
shlb
enter
fldenv
xchg
or
stos
clc
xchg
and
xchg
mov
fcoml
mov
test
cmp
pusha
or
fwait
scas
xchg
sbb
sti
mov
and
jmp
rorb
ret
dec
mov
jns
sbb
ret
jmp
orl
dec
outsb
xlat
loope
clc
dec
lea
arpl
jo
push
lock
pop
add
add
sbb
or
stos
cmpsb
xchg
push
sarb
add
hlt
adc
push
lods
scas
pop
cmp
sub
lcall
movsl
loop
pop
and
fidivs
outsb
mov
sub
enter
mov
loop
arpl
push
sbb
pop
mov
aaa
jne
xchg
sub
push
lret
lret
fstl
push
imul
fisubrs
pop
jmp
scas
mov
out
in
andb
add
test
int
scas
stos
pop
loope
adc
and
outsb
data16
mov
and
xor
jne
push
in
cmp
cmp
and
fsubrp
or
adc
dec
inc
insl
sbb
mov
int3
xchg
test
dec
xchg
cld
fcmovnb
fisttps
mov
mov
fisttpl
jne
lcall
xor
scas
mov
pop
xchg
sub
lret
les
push
popf
stc
inc
sub
mov
cs
insb
pop
test
dec
pop
sbb
push
gs
test
fldcw
popf
insb
cmp
and
hlt
push
pop
faddl
dec
lcall
mov
dec
pusha
ja
sbb
push
and
pop
xor
jb
rcrl
add
aam
cmpsb
push
pop
xchg
mov
sbb
xchg
and
fcoms
jp
int
dec
xchg
xor
outsl
dec
jl
or
xchg
fdivrs
mov
push
xor
sub
jnp
test
sub
fldcw
mov
sub
call
pop
dec
sub
sub
and
lret
dec
movb
adc
cmp
adc
imul
adc
xlat
insl
push
lret
aad
fcompl
shl
push
out
dec
leave
nop
mov
loopne
xchg
ret
cmp
sbb
in
adc
fsubrl
xchg
pop
sbb
mov
xor
les
jns
xchg
mov
das
inc
pusha
fistpl
stos
jl
aam
out
sbb
cs
mov
xchg
and
sub
stos
dec
or
cli
mov
inc
adc
and
dec
clc
jno
test
mov
sub
ss
out
fs
add
imull
ja
sub
mov
mov
mov
mov
cmp
aas
inc
cmp
add
sbb
jbe,pn
and
pusha
hlt
mov
jae
or
sbb
pushf
xorl
jp
les
mov
mov
add
mov
lock
push
lret
aaa
jo
jmp
dec
push
cltd
jmp
clc
loopne
clc
lret
lods
lea
cmp
repz
cmp
xor
xor
out
cli
add
jmp
pop
int3
cwtl
adcl
pop
mov
in
movsb
jnp
dec
dec
shlb
stc
lret
scas
push
mov
xchg
cmp
cmpsl
jae
test
mov
or
xchg
push
adc
stc
and
loopne
push
add
push
lahf
jb
xchg
ljmp
jb
push
test
fstps
xchg
sub
push
or
xor
pop
cwtl
jae
punpckldq
fldln2
xchg
test
cmp
in
add
push
mov
aaa
inc
xchg
xchg
lock
sbbl
gs
int3
mov
jns
xchg
gs
popf
ja
push
add
add
add
imul
sub
and
mov
sub
pop
rorb
ds
dec
inc
loop
dec
pop
jge
add
xor
push
je
ror
fwait
inc
inc
mov
xchg
psubsw
pop
and
push
push
dec
xor
leave
leave
mov
mov
ljmp
cmp
mov
or
hlt
inc
push
pop
sti
inc
shrl
xchg
out
sub
insl
lods
out
lahf
out
dec
enter
outsb
sub
add
ljmp
sahf
push
in
shl
mov
push
les
subl
push
pop
loop
sbb
mov
push
dec
xchg
lahf
inc
cmp
test
imul
lods
mov
xlat
hlt
out
mov
stos
lret
mov
repz
ret
inc
nop
popf
call
lahf
pusha
mov
pop
lods
lods
jns
push
pop
test
fs
sbb
movl
bound
inc
popa
fsub
adc
rol
adc
dec
jae
jg
xchg
sbbl
int3
pop
xor
pop
scas
cwtl
stos
or
adc
sbb
mov
mov
cld
jecxz
test
inc
xchg
aam
pop
lcall
xor
enter
jnp
fwait
mov
test
xor
nop
les
mov
pop
sar
insl
dec
mov
mov
jae
ds
mov
popf
aam
testl
dec
add
sub
shll
sbb
mov
repnz
pop
or
pop
cli
adcb
lahf
mov
lock
mov
xchg
fists
adc
test
xchg
push
pop
lock
cltd
sbb
jle
xchg
pop
mov
les
xor
inc
jmp
add
scas
cmc
iret
adc
cli
outsb
adc
mov
inc
jle
sub
push
orb
add
fdivs
pop
xor
add
jae
pop
sub
int3
add
add
add
add
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xor
add
mov
and
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
negl
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
xor
incl
add
andl
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
jmp
dec
cmp
orl
push
mov
xchg
filds
popa
pop
bound
les
xchg
outsb
inc
aas
lods
and
je
pushf
cld
xchg
andb
adc
push
add
sbb
jo
push
cmp
out
add
pop
mov
lahf
push
jp
mov
mov
add
lods
push
push
push
push
and
fs
je
dec
mov
aad
outsl
outsl
pop
xchg
mov
scas
pop
cld
sub
dec
or
add
xchg
mov
outsl
fidivl
sti
sub
cmp
xor
stos
lret
push
mov
cmp
add
andb
mov
lods
xchg
sbb
testl
or
inc
enter
jo
mov
test
outsb
idivb
inc
or
pop
imul
orb
jg
xor
aad
xchg
incb
shll
xor
push
jns
pop
lock
aaa
std
xchg
clc
lahf
add
mov
push
adc
cltd
xchg
push
call
jns
or
lret
adc
inc
rorl
int3
rcl
leave
pop
leave
xchg
xchg
bound
dec
or
jecxz
stos
out
inc
ret
scas
pop
push
and
daa
xor
ja
dec
jbe
dec
inc
jmp
fwait
adc
ret
dec
push
jg
cmp
pop
sub
dec
fcompl
jl
mov
mov
stc
cmp
clc
lret
stc
adc
pop
xchg
xorl
jp
push
push
stc
pop
test
mov
sub
stc
mov
out
cmp
scas
push
ret
or
mov
pop
clc
mov
leave
push
or
xor
icebp
loope
adc
sbb
call
pop
js
xor
or
sub
ret
or
cmpsb
test
jb
adc
pmaddwd
leave
je
stos
aaa
ljmp
or
fwait
sbb
insb
and
jb
fdivl
inc
addr16
jp
das
notb
add
imul
xchg
subb
xchg
jo
shlb
mov
pushf
nop
ja
mov
inc
sub
adc
sahf
pop
inc
sbb
stos
sahf
sbb
and
out
lcall
inc
aaa
xchg
clc
push
push
out
dec
popa
cmp
scas
sub
leave
popa
fbld
inc
rcrl
push
and
lea
addr16
adc
jl
mov
popf
dec
leave
pop
test
push
pop
mov
mov
notb
mov
aas
out
mov
pop
xchg
xor
pop
dec
xor
and
dec
lcall
in
mov
sub
mov
jl
xor
rorl
scas
xchg
mov
pop
xor
lcall
sub
es
jmp
push
fcoms
or
pop
dec
push
repz
mov
adc
mov
jne
and
dec
test
in
cmp
cmpsl
test
push
aad
cwtl
sahf
mov
hlt
mov
movsb
jmp
cmp
and
jge
jp
into
xchg
imul
adc
mov
in
out
or
sbb
stos
push
jnp
mov
mov
xlat
decb
inc
into
aas
dec
pop
pusha
pop
out
mov
sub
cmp
xchg
fdivl
push
and
sbb
jns
xor
mov
pushf
or
pushf
aaa
outsb
dec
mov
js
inc
inc
fisubrl
fwait
xchg
mov
std
ret
sub
mov
cmpsb
push
adc
lret
jnp
in
sahf
int
push
int3
mov
scas
jge
mov
out
inc
pop
and
loope
add
push
xor
inc
in
cmp
mov
repnz
fs
dec
fstl
add
into
jg
xor
adc
pop
xchg
lock
icebp
adc
fsubl
test
dec
xchg
add
aad
loopne
adc
mov
pop
mov
popa
popa
push
divl
aam
fs
sbb
sub
sbb
fs
loop
mov
je
sahf
shl
lock
nop
xchg
pop
out
or
lret
cmp
pop
or
cs
cmp
jmp
movsl
shl
icebp
xlat
imul
popa
popf
push
sub
sbbl
and
es
xchg
push
pop
shl
lret
push
scas
inc
lcall
mov
shll
cltd
push
mov
sti
push
insb
push
lahf
sbb
inc
daa
jno
dec
push
push
mov
arpl
pushf
out
mov
push
inc
lds
xor
push
adc
or
mov
cmpsl
xchg
in
outsl
ja
lahf
outsb
jge
mov
pushf
cmp
cmpsl
cltd
inc
fwait
les
xlat
push
inc
mov
mov
mov
pushf
mov
and
dec
pop
add
mov
sub
scas
cli
adc
xchg
sub
iret
and
add
adc
or
popf
mov
in
outsl
fdivrl
ja
and
pushf
outsl
insb
imul
test
push
and
or
daa
ljmp
bound
pop
xchg
xlat
jo
or
push
push
pop
cli
jg
and
pop
insb
adc
mov
mov
mov
pop
int
mov
dec
mov
lret
lods
clc
lods
insb
ss
or
pop
pop
stos
gs
dec
adc
xchg
gs
test
push
cmp
mov
inc
dec
pop
add
pop
fstpt
pop
mov
testl
push
mov
les
jno
or
fsubrs
lahf
into
dec
pusha
ret
test
scas
mov
popa
fmuls
add
in
sbb
loop
push
sti
lods
push
sub
push
cli
and
fimuls
lods
shlb
cmc
imul
mov
jno
pop
repnz
dec
hlt
adc
dec
mov
jmp
dec
jg
jp
in
mov
cld
cs
lcall
iret
ficoms
xchg
pop
jg
mov
rclb
or
nop
in
test
jge
mov
mov
aas
and
cwtl
adc
push
lahf
mov
or
outsb
dec
mov
mov
imul
jp
xor
xchg
xor
es
xchg
cld
mov
xchg
ss
push
add
roll
mulb
cld
mov
push
jp
mov
cmp
notb
jbe
pop
or
sub
xor
cmp
and
shl
sti
push
mov
dec
ss
mov
scas
test
cmpsb
ja
and
inc
decl
and
jmp
or
cmovb
xor
sahf
dec
and
push
test
adcb
jbe
jmp
push
pop
leave
jecxz
call
mov
inc
mov
adcb
inc
cmpsl
shlb
jle
pop
ret
insl
das
addb
or
dec
ret
in
mov
mov
adc
insl
inc
test
jo
rcrb
add
std
jmp
xchg
cwtl
into
test
orl
jl
xor
cwtl
push
mov
xchg
sub
fwait
pop
adc
scas
fstp
inc
mov
mov
pop
outsl
pop
mov
and
jno
push
in
adc
jnp
jne
inc
pop
jae
push
addl
lds
hlt
ret
push
scas
adc
leave
in
jge
mov
out
insl
dec
jbe
pop
in
or
xor
outsb
outsl
out
shlb
repz
push
mov
sbb
xchg
sub
mov
gs
xor
sbb
pop
pop
test
imul
cmc
sub
pop
ss
sbb
mov
or
les
mov
add
ror
sbb
test
mov
sbb
ja
sbb
out
xor
mov
pop
test
cmp
adc
sbb
jle
mov
sahf
push
mov
arpl
aas
cmpsl
xchg
jp
addr16
mov
fnsave
pop
push
dec
cmp
inc
clc
lea
mov
jbe
inc
mov
das
fnstsw
cli
fimull
rol
popf
and
stos
cmp
xor
sahf
fistpl
cwtl
scas
inc
out
adc
out
xchg
lds
ds
in
sub
xchg
mov
out
imul
into
jne
push
cltd
xchg
outsl
jg
outsb
adc
fs
mov
add
cld
jge
fwait
imul
xchg
es
out
aam
mov
pop
pop
cmp
fdivl
adc
sahf
lret
push
test
fisttpll
pop
das
cmpsl
lods
dec
add
in
and
mov
dec
cld
popf
jecxz
jns
inc
ret
ds
pushf
movsl
imul
add
mov
int3
add
and
popa
push
sub
dec
testl
and
lcall
jns
in
icebp
sarb
add
adc
sbb
cli
loopne
add
xchg
add
pop
ljmp
mov
jl
lret
shrb
xchg
test
leave
jne
das
ds
push
mov
lea
jae
push
jge
cmp
gs
addb
cmp
mov
pop
mov
pop
inc
pop
and
jbe
leave
xchg
push
inc
in
shrl
pop
aad
in
mov
gs
xchg
push
outsl
inc
addb
clc
dec
sti
pop
dec
mov
hlt
mov
add
lock
mov
push
and
leave
or
sarl
sub
cmc
loope
pop
fidivrl
mov
shl
out
cmc
cli
sub
sub
mov
pop
orb
add
lret
jl
ficoms
jb
mov
mov
shll
lock
and
leave
inc
sub
xor
insl
cli
outsl
or
out
pop
pop
jle
stos
lea
ss
mov
loopne
adc
subl
popa
jno
jnp
mov
rcrb
leave
ret
repnz
cmp
and
lods
mov
fistpll
cmp
mov
cli
lock
or
test
and
insb
enter
jb
das
scas
lcall
aad
fisubl
ss
inc
into
adc
mov
xor
shll
mov
and
push
jae
dec
arpl
mov
scas
cmp
mov
and
pop
push
mov
test
icebp
enter
fs
js
push
gs
jp
push
iret
add
insb
stc
inc
pop
jge
pop
pop
or
outsb
leave
movsb
mov
movsl
add
dec
sbb
cmp
xchg
stc
lcall
out
inc
adc
push
popa
nop
inc
and
push
in
mov
out
push
mov
mov
cpuid
dec
rorb
out
shr
fmull
les
ja
cmp
mov
insb
fnstcw
sbb
jnp
cli
mov
imul
sub
iret
popa
xchg
mov
inc
stos
daa
jns
cmp
scas
iret
mov
gs
pop
stos
jl
pop
test
ffreep
push
subl
shrb
rcrb
cmp
push
mov
out
xchg
sti
mov
test
and
jno
loopne
lea
pop
adc
add
jo
imul
push
mov
loop
fdivl
xchg
cmc
mov
insl
cli
push
lret
xchg
mov
or
cli
sub
icebp
in
inc
cmpl
fwait
adc
sbb
mov
xchg
sbb
hlt
ljmp
cld
test
fdivrs
and
pop
cmp
adc
pop
lcall
inc
adc
jecxz
adc
push
jmp
js,pn
push
or
aad
js
js
push
or
ss
sarb
jnp
push
dec
cmp
ja
inc
jl
or
inc
test
rclb
push
test
push
cmp
jno
outsb
ror
aas
popa
sbb
clc
sub
rolb
int3
ljmp
sub
dec
sti
mov
jecxz
out
std
cmp
and
pop
xor
enter
xor
movl
sub
push
mov
xlat
fnstsw
jbe
sbb
dec
bound
push
movsl
mov
popf
fstpt
hlt
stos
dec
mov
or
inc
xchg
das
data16
in
push
mov
pop
and
sub
mov
punpckldq
out
mov
out
adc
jno
dec
jle
adc
cmp
je
xor
iret
adc
fs
loopne
out
popa
jp
int3
dec
or
jle
mov
inc
sbb
jns
xchg
pop
movsb
jge
sahf
sbb
fstp
nop
xor
shrl
adc
xlat
imul
jp
mov
pop
sbb
nop
lahf
pop
mov
insl
xchg
or
rcr
lret
or
adc
cli
and
sub
loopne
adc
xchg
sub
jmp
lock
mov
mov
test
clc
sbb
ss
sub
or
leave
sahf
pop
stos
call
out
shrb
pushf
sar
mov
xchg
and
mov
rcll
subl
fcmovu
stc
repnz
imul
push
out
mov
mov
es
or
test
dec
ficompl
sahf
outsb
pop
stos
add
jmp
or
xchg
jmp
pop
rcll
sub
sub
mov
jae
jle
push
inc
enter
cmp
int3
xchg
sarb
adc
ljmp
cmp
add
xchg
add
push
pop
cmpsb
test
sub
js
call
fisubl
cmp
jecxz
in
inc
cld
jg
sub
pop
or
sbbl
popf
and
repnz
pop
push
ja
test
and
call
or
hlt
movsb
shlb
xor
int
mov
repnz
xchg
push
mov
xor
cltd
les
stc
insb
imul
loop
jns
xchg
enter
mov
out
xchg
fbstp
sbb
mov
pusha
push
mov
dec
sbb
cs
push
repnz
or
xchg
es
stos
add
sub
lret
in
cmp
xchg
insl
dec
dec
add
imul
xlat
test
stos
pop
cmpsl
mov
dec
sub
pop
dec
mov
sub
fnstsw
mov
hlt
insl
lods
or
stos
mov
mov
add
or
sbb
dec
xor
mov
push
in
pusha
xchg
daa
xchg
fidivrl
dec
lods
mul
es
sbb
shlb
and
adc
add
sub
and
imul
pusha
cmp
cltd
lret
dec
sti
sub
cmp
dec
aas
enter
arpl
cli
enter
push
loope
lds
movsb
sub
add
icebp
dec
iret
push
loop
ret
xlat
call
aad
loope
mov
in
xor
pop
xchg
mov
mov
add
ret
mov
fdivr
pop
mov
call
push
xchg
push
int3
jb
jecxz
sahf
out
mov
cmpsb
xor
lods
push
xchg
jno
iret
mov
mov
sbb
js
push
pusha
jbe
and
push
xchg
push
dec
hlt
fildll
mov
insl
fnstsw
xor
cmp
clc
xchg
leave
repz
sbb
add
movsl
jno
adc
into
pop
and
movsb
mov
mov
push
pop
add
dec
fisubrl
in
rorb
fisubrl
mov
lret
sarb
xor
or
xchg
in
mov
int3
fidivrs
add
inc
arpl
and
adc
ds
cmp
jl
and
data16
cmp
rorl
add
outsb
and
cmp
lret
outsb
xchg
mov
int3
sub
pop
add
arpl
test
sub
jb
pop
loopne
insl
pop
loopne
mov
and
rcl
cltd
adcb
dec
les
inc
mov
sbb
movsb
sub
push
push
jle
add
test
jmp
data16
push
add
mov
test
sub
addl
or
clc
std
or
stos
jns
add
push
out
imul
call
test
xchg
dec
cmp
nop
and
out
jmp
enter
movsl
adc
sub
fs
or
ljmp
adcb
xchg
insl
and
mov
jae
mov
mov
int3
jns
dec
mov
push
test
loope
sbb
cmp
add
js
jmp
and
xchg
jno
leave
adc
sub
and
xorb
enter
fbld
fcompl
pmulhw
sub
into
mov
mov
dec
fldt
mov
jge
jmp
sub
dec
scas
add
out
xchg
jne
iret
enter
ja
sarl
call
mov
jg
xor
xor
jg
shr
pop
pusha
cmp
pop
mov
shll
dec
push
scas
pop
hlt
out
aaa
and
add
jo
dec
scas
sbb
inc
mov
mov
test
in
loopne
mov
cld
add
mov
rcrb
push
and
in
jbe
jl
arpl
push
scas
leave
mov
pop
data16
les
sbb
iret
stos
jl
mov
fcomps
jp
sbb
mov
fstpt
add
push
imul
stos
sbb
push
pop
mov
shll
inc
negl
je
imul
or
imul
or
mov
xchg
jle
inc
dec
ljmp
pop
into
cmpsb
xor
pop
jne
dec
rorl
dec
lods
adc
addb
cmp
test
or
xlat
or
in
push
fwait
mov
ja
out
sub
mov
test
adcl
daa
mov
xor
and
jle
sarb
or
push
data16
mov
pop
mov
mov
mov
hlt
cs
xlat
int
mov
out
imul
add
or
sbbl
lret
arpl
stc
sbb
popa
in
xlat
scas
jns
inc
iret
test
mov
gs
mov
sbb
dec
mov
or
mov
cmp
adc
std
pusha
inc
in
movsb
bnd
clc
sub
daa
xor
mov
and
daa
aaa
ljmp
xchg
jns
xchg
dec
movsb
mov
cmp
mov
out
cmp
ss
inc
mov
pop
mov
cmc
xchg
sbb
xlat
orb
int3
lods
mov
jg
fwait
cmpsb
mov
out
xchg
fldenv
mov
ss
mov
out
xor
pop
arpl
fldl
inc
test
jne
lods
dec
xchg
shll
mov
fsts
cmp
je
cld
movsl
adc
push
or
xor
insl
scas
iret
call
jp
shlb
pop
in
sbb
xchg
adc
in
loope
inc
inc
aad
jmp
xor
inc
lret
inc
jns
std
dec
repz
sub
cld
and
jo
inc
or
mov
and
sub
cmpsb
xchg
cmp
dec
dec
cmc
push
shlb
mov
outsb
push
pop
incl
push
jl
jmp
and
dec
fwait
fs
stc
repz
pop
pop
pop
mov
add
and
inc
jae
jae
fcomi
mov
jl
iret
int3
mov
clc
inc
xor
push
mov
les
test
outsb
dec
int
and
jl
mov
or
pop
ficoml
imul
out
mov
ss
jns
pushf
stos
mov
sbb
fsubs
or
out
dec
or
add
add
adc
xchg
mov
push
inc
xor
fstpl
das
call
xchg
iret
push
int
fs
xchg
das
push
test
fwait
jp
gs
and
stos
add
aad
jl
dec
scas
or
jge
ficomps
dec
xchg
mov
pop
jns
addb
adc
pop
addr16
mov
cltd
es
xor
imul
and
adc
wrmsr
int3
jbe
test
jns
adc
mov
ja
push
roll
arpl
ror
push
lahf
lret
xchg
out
mov
subb
jbe
jmp
sub
hlt
adc
fldcw
das
xchg
jae
shl
nop
xor
jge
cmp
andb
or
push
xor
dec
mov
rcrb
sub
mov
sbb
repz
shrb
movsb
divl
imul
stc
adc
loop
xchg
xor
push
pop
les
add
push
cmp
xor
sbb
leave
push
pop
cmpsb
mov
push
xchg
daa
daa
lods
fs
stc
adc
aad
gs
in
add
fnstcw
mov
enter
lahf
or
imul
orl
in
scas
sahf
popa
mov
mov
mov
lea
ret
push
mov
popa
pop
jl
cmc
pop
in
inc
mov
mov
ljmp
pushf
les
lahf
movsl
mov
push
cwtl
mov
daa
ficomps
ss
cmp
inc
pop
mov
fwait
cmp
les
cld
int3
movsb
jbe
cmp
or
mov
fisttpl
jmp
mov
push
jnp
xchg
sarl
ret
push
clc
stos
rcrl
test
sub
mov
mov
add
sub
nop
jmp
fdiv
xchg
mov
pop
mov
mov
xchg
and
repz
push
mov
fstp
dec
adc
js
daa
aas
push
pop
aaa
and
and
push
je
or
mov
sbb
shl
outsb
jmp
pusha
ror
inc
nop
sarl
mov
jnp
int3
shl
sbb
fisubs
xchg
jge
cmc
add
sub
jo
and
loopne
lock
nop
js
jg
std
sub
dec
movsb
dec
add
mov
shl
jno
test
and
push
xchg
sbb
mov
mov
popf
and
xor
jge
or
mov
mov
test
xorl
movsl
cltd
push
and
insl
sub
mov
fst
std
lret
xor
pop
stos
pop
jge
or
pop
ret
cmpsl
push
repnz
pop
pop
ss
and
mov
or
repnz
jmp
jbe
xor
sti
outsl
iret
or
ret
out
ret
and
push
jns
pop
lea
divl
mov
jl
mov
ljmp
sub
pop
inc
jl
imul
pop
ds
ja
and
add
pushf
rcl
push
mov
jecxz
push
or
and
aam
punpckhbw
mov
pop
adc
outsl
jmp
or
adcl
add
add
jb
les
fbstp
aad
push
mov
jnp
inc
mov
jmp
push
mov
ficoms
xchg
and
jge
int3
jmp
jmp
cli
push
mov
cmp
mov
insb
aas
push
xor
jns
inc
xchg
jmp
call
imul
std
arpl
dec
repz
div
jecxz
aam
repnz
das
loop
jmp
sbb
cmp
into
aas
aad
sbbl
mov
aad
jle
and
push
sub
mov
daa
and
enter
cld
addr16
and
mov
int3
mov
test
xlat
mov
addr16
inc
add
jb
add
cmpsb
mov
mov
das
stos
push
test
call
inc
xchg
fistps
or
jb
out
daa
sti
or
fsubrl
sahf
fisttps
mov
int
dec
sti
push
fidivrs
leave
inc
sub
and
xchg
push
jle
inc
jmp
rcr
push
fimull
xorl
stos
lods
jb
mov
xchg
dec
jne
add
jl
pop
pop
push
mov
mov
xchg
rcr
mov
xor
sub
mov
loopne
enter
xor
std
inc
mov
stos
dec
adc
or
pushf
ss
xchg
bound
pop
cltd
test
fidivl
dec
negl
pushf
ja
mov
cmp
rcrb
hlt
dec
pop
mov
in
jnp
rcrl
data16
xchg
aas
shl
mov
xor
xor
mov
xor
push
push
or
outsb
or
hlt
repz
call
or
adc
cli
cld
and
ror
inc
pop
push
lock
push
call
mov
test
pop
cmp
adcl
lcall
out
sub
inc
inc
out
in
mov
mov
sub
ds
push
mov
inc
cs
out
aaa
int
divb
jb
jg
pop
pop
pop
cli
mov
out
stos
pushf
sub
inc
and
out
xchg
sbb
inc
jecxz
lods
pop
jl
cmp
insb
pop
mov
loopne
xchg
popa
xchg
out
insb
in
and
add
jecxz
in
popf
addr16
ret
sub
aas
out
roll
lds
push
icebp
ss
push
leave
sti
or
push
xor
inc
inc
jmp
rol
sarl
pcmpeqd
and
mov
jno
jno
inc
imull
insb
mov
fidivs
fadd
shlb
daa
outsb
bound
or
imul
mov
cmp
push
xlat
ljmp
push
fwait
sub
and
sbb
push
push
test
cmp
js
dec
lock
pop
add
inc
xchg
mov
cs
or
cmc
pop
sbb
mov
jge
loopne
mov
inc
stos
pop
sbb
and
out
mov
sbb
aad
mov
sub
add
inc
cli
jne
mov
mov
aaa
arpl
dec
xchg
push
and
cmp
or
repz
jnp
sub
hlt
cwtl
jmp
cmpb
jbe
xor
pop
aas
lret
and
xlat
lods
or
loop
arpl
pop
inc
jge
mov
repz
lods
cmp
out
xor
jl
lods
and
rorl
mov
or
pop
cmp
insl
push
pop
push
mov
daa
cwtl
aad
loope
inc
sub
dec
scas
push
dec
lcall
add
mov
jb
dec
sahf
je
push
adc
fadds
aas
push
pusha
mov
dec
pushf
mov
sbb
leave
jno
pop
mov
mov
loop
bnd
ret
mov
insl
sbb
rcrb
fnstcw
or
adc
push
mov
push
mov
dec
xchg
lods
lock
aas
sub
cmpsl
pop
adc
faddl
roll
shrl
enter
push
sub
jne
cwtl
add
xchg
mov
xchg
mov
push
sub
adc
bound
add
add
add
cmpl
out
cmpsl
dec
es
sub
int
pop
jo
mov
cs
loop
shll
hlt
push
mov
sub
or
sbb
insl
loopne
aaa
fcmovb
sub
mov
fisttps
xorl
outsl
sbb
adc
xlat
push
or
sub
add
inc
and
sahf
push
jae
aas
or
inc
fsubs
xchg
pop
dec
fadds
je
cmp
mov
icebp
mov
mov
mov
mov
or
xchg
and
or
test
daa
jb
push
daa
xlat
pop
ret
inc
les
pop
icebp
ljmp
sahf
mov
movsl
dec
loopne
adc
dec
jmp
mov
repz
push
jb
mov
ficompl
sub
negl
adc
push
jne
jmp
adc
addr16
sub
rcll
mov
cmpsb
and
jmp
dec
adc
ja
or
sub
or
stos
hlt
sub
ds
dec
repnz
adc
or
xor
and
cmc
xchg
loopne
out
mov
adc
pop
or
roll
imul
and
mov
pushf
mov
dec
aam
lods
ds
push
inc
xchg
jae
sub
ja
jl
mov
pop
push
lds
xor
aad
xchg
sbb
testl
in
notl
cld
sub
aaa
int
lods
add
sub
es
out
mov
mov
adc
gs
pop
mov
pop
bound
push
lods
js
repnz
insl
add
cmpsw
das
cli
arpl
add
pop
mov
mov
jb
popl
add
out
call
jnp
xor
xor
pop
xlat
inc
int
mov
lds
das
pushf
dec
outsb
xchg
in
nop
pop
pop
pop
ss
mov
ljmp
out
rorl
jae
add
incb
lods
xchg
scas
push
jle
xchg
dec
arpl
shrb
shlb
pushf
in
xchg
mov
imul
xchg
insl
push
in
fmuls
jnp,pt
jns
out
xchg
out
filds
adc
sbb
adcl
lea
cmp
cmp
movsl
jbe
mov
daa
mov
or
sbb
sbb
adc
outsl
or
cmp
sbb
or
xchg
sti
and
test
fwait
popf
or
pcmpgtw
mov
subb
mov
je
aam
mov
fcmovb
outsb
out
loopne
mov
adc
sti
or
ret
inc
test
push
dec
sub
fdivrs
test
push
xchg
sbb
pop
sub
insl
or
scas
sbb
test
popf
mov
xchg
stos
adc
ja
cmp
aad
sub
lock
mov
push
cmp
movsl
call
push
je
mov
push
lds
mov
push
fistpl
int
sti
push
call
test
mov
dec
mov
sti
fdivl
in
jb
mov
mov
sbb
jle
mov
inc
insl
pop
mov
mov
dec
in
push
jno
sub
in
sti
into
sbb
fdivs
loopne
sbb
cmp
outsb
push
fnstenv
push
sbb
jl
dec
pop
mov
cs
lock
push
imul
mov
and
xor
sub
sub
iret
adcb
subb
comiss
mov
mov
mov
es
rclb
inc
ja
cmp
cmp
icebp
fucomi
mov
push
jne
aam
fldt
imul
roll
mov
daa
jno
test
mov
aam
jg
inc
or
sub
shrl
adc
dec
adcl
in
in
inc
cmp
xorps
dec
mov
iret
jl
adc
mov
mov
cwtl
rolb
xorb
and
lods
les
add
cmc
sbb
nop
mov
mov
jg
mov
xor
mov
mov
into
popa
fbld
pop
fstpl
sahf
and
lods
sub
xlat
jge
mov
bound
lahf
and
push
mov
inc
adc
pop
pop
repz
fs
es
jmp
jb
cmp
test
jmp
into
add
adc
jno
adc
cmp
ficoms
or
das
push
outsb
mov
repnz
jmp
mov
pop
inc
push
popf
mov
out
lret
dec
xor
test
fistpl
ret
ja
outsb
popf
mov
arpl
loope
pop
pop
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
movzbl
sub
push
adcl
push
xor
xor
mov
sub
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
pop
push
subl
call
adcl
push
xorl
push
addl
push
push
andl
push
andl
push
sbbl
push
subl
call
push
push
push
push
push
push
subl
call
xorl
dec
movl
jne
push
push
push
call
orl
test
je
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
imul
mov
not
mov
mov
mov
cmp
movl
jne
addl
movl
orl
pushl
pushl
pushl
call
adc
mov
mov
sbb
mov
mov
add
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movzbl
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
push
sbb
push
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
mov
xor
mov
mov
sub
sub
mov
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
jmp
icebp
push
inc
movsl
cmpsl
mov
aaa
and
jno
mov
push
pop
bound
imul
sub
and
stos
imul
pushf
leave
dec
pop
in
ror
out
push
mov
and
mov
les
out
sub
movsl
jnp
or
mov
lea
rcrb
rclb
fldl2e
or
pop
lock
jg
push
or
test
fisttps
xchg
cmp
leave
gs
js
mov
cs
add
jmp
mov
jmp
int
sub
test
in
mov
cmp
adc
jno
out
movsb
stc
ljmp
ja
scas
and
mov
andb
xlat
cltd
lea
ror
stc
mov
icebp
mov
icebp
pusha
ffree
adc
jno
dec
es
mov
inc
push
xchg
mul
fmuls
popf
push
jmp
popa
daa
cli
mov
mov
jnp
dec
daa
push
cmp
xor
in
adc
shlb
xchg
pop
sub
into
mov
test
test
pop
gs
inc
ss
jo
sub
jge
pop
ss
sbb
imul
cmp
fsts
in
sbb
mov
xchg
lods
loope
ds
in
incl
idivb
clc
add
lret
mov
push
mov
lret
mov
xor
std
stos
aas
jne
int
dec
fdivs
adc
mov
cmp
mov
cmp
popf
jge
pop
repz
dec
and
sbb
pop
mov
or
add
pusha
inc
mov
mov
je
pop
sbb
lea
sbb
xor
test
inc
xchg
inc
jl
scas
aas
inc
pop
sub
inc
or
out
add
jecxz
sub
addr16
js
cli
out
enter
xor
mov
mov
std
into
fmuls
mov
xchg
dec
jbe
inc
pop
xchg
xchg
xor
dec
add
lea
dec
enter
into
dec
mov
mov
xor
out
rclb
sbb
dec
sahf
push
dec
sbb
ret
mov
fisttpll
ljmp
shlb
fstpl
loope
inc
push
mov
bound
lret
and
xlat
aas
sbb
xchg
js
sbb
cs
dec
dec
cmp
shrl
icebp
das
push
loope
jmp
test
lcall
pop
add
pop
loopne
test
sub
sub
mov
jo
orb
mov
and
mov
and
pop
int
je
mov
test
test
push
mov
clc
cmpsb
repnz
into
in
int3
sub
push
cmpsb
lods
enter
mov
lcall
pop
das
add
loopne
adc
jecxz
xor
xchg
dec
mov
inc
mov
jno
push
sub
add
out
mov
orb
mov
cli
ret
cltd
mov
jp
pop
ljmp
rolb
das
fidivrl
xchg
xor
adc
pop
icebp
sahf
setno
aaa
sub
ret
into
sbb
call
jbe
je
aad
inc
insb
pop
sub
mov
stos
shlb
jbe
out
je
leave
lret
scas
push
out
stos
add
shlb
stc
rorb
mov
dec
into
les
xchg
clc
bound
popa
inc
nop
pop
push
xlat
aaa
jg
lahf
inc
adc
mov
fmuls
imul
std
imul
jae
pop
aam
into
add
jb
inc
shll
aas
push
add
test
jns
xlat
out
inc
das
xchg
jbe
push
cmp
js
int3
and
inc
sbb
stos
incl
js
clc
add
ret
mov
or
inc
xor
push
cltd
aad
adc
mov
out
shrl
out
mov
and
inc
repnz
mov
aad
mov
xlat
sub
fcmovu
into
jbe
arpl
jmp
cmc
aad
out
inc
lcall
jbe
xchg
divb
movsl
pusha
lahf
xchg
pop
int
outsb
ret
rcrb
or
pop
pmulhw
mov
and
enter
jns
and
arpl
push
pop
adc
push
mov
sti
int
je
popf
mov
cmpsb
jb
shl
mov
and
insb
xchg
leave
sub
daa
fmuls
pop
mov
xchg
pop
daa
stos
or
int
fstpl
mov
and
pop
je
xor
xchg
pop
addb
loope
push
clc
mov
je
adc
push
inc
mov
addr16
ljmp
ret
scas
rcl
loop
aad
or
mov
push
xchg
in
in
add
mov
pop
jl
mov
rcl
cmp
xchg
fisubl
aam
dec
sbb
xor
subl
popf
outsl
xchg
outsb
xchg
push
and
jg
test
and
mov
xchg
daa
stc
cmp
lcall
fcompl
cli
push
and
imul
cmp
push
clc
dec
cmp
aad
out
stos
inc
outsl
outsl
mov
sub
mov
add
add
sub
and
xchg
aad
mov
adc
push
jnp
dec
pop
rolb
add
and
je
xchg
pop
pusha
jbe
je
ljmp
cmpsl
xor
xchg
inc
inc
fisubs
push
stc
ja
repnz
xorl
jp
fidivs
pop
test
aam
dec
inc
mov
sarl
add
sahf
push
std
lds
cmp
xchg
ljmp
lahf
xchg
mov
dec
or
sbb
push
and
test
pop
cmp
mov
pop
pop
and
mov
fs
mov
out
pop
out
xchg
jae
stos
ljmp
aam
xchg
mov
xor
adc
test
pop
stos
push
jnp
stc
into
inc
stc
jmp
call
xor
cmp
fistpll
in
je
es
js
stos
sbbl
jo
out
rorl
lret
iret
call
fucomp
bound
dec
inc
mov
hlt
xor
cmp
je
les
sbb
jo
mov
repz
pushf
adc
add
xor
fldcw
repz
inc
cwtl
xchg
xor
mov
fbstp
push
push
in
and
add
mov
cli
mov
sbb
cmpsl
loop
ljmp
lea
lahf
mov
leave
imul
jl
ret
push
sub
xchg
pop
add
jne
mov
iret
sub
mov
xchg
and
test
mov
jle
lods
fiaddl
lcall
cmp
xor
sbb
loopne
fldcw
aam
jb
pop
mov
scas
xchg
mov
adc
rcrb
mov
dec
insb
cmp
fisubs
dec
stc
mov
ljmp
mov
nop
mov
dec
adc
sub
inc
rclb
aaa
push
in
stos
mov
mov
adc
pop
add
pop
filds
imul
ljmp
adc
aam
mov
in
es
cmp
xor
inc
xchg
in
or
xorb
popa
mov
adc
jns
loopne
dec
sbb
mov
shlb
xor
sub
and
xchg
pusha
mov
adc
sbb
mov
push
mov
or
pop
lock
jno
popf
sbb
shrb
mov
rorl
pushf
ret
and
leave
out
inc
xchg
scas
inc
dec
adc
cwtl
push
add
sti
das
push
cmp
jge
mov
fldenv
jmp
aaa
mov
inc
fmul
insb
popf
add
scas
test
and
cwtl
jnp
cmpsl
out
call
lods
adcb
dec
mov
cmp
cmpsl
push
or
cmp
sub
pop
mov
push
adc
xchg
cmpsl
cmp
mov
lret
sub
jg
fisttpl
lods
mov
jb
xor
xchg
lcall
popa
loop
rorl
cmpsb
clc
xor
pushf
push
or
aaa
incl
or
add
add
ret
sarl
mov
mov
and
pop
pop
in
inc
ret
push
or
fimuls
fistps
inc
ss
loopne
inc
xor
lds
pop
xorl
insl
inc
or
shlb
aas
sub
stos
hlt
mov
in
pop
mov
cmp
dec
sbb
and
or
jbe
sarl
push
and
sub
ret
and
jle
stos
lcall
push
lock
mov
fldenv
in
les
je
xor
ret
or
popa
xor
sub
aaa
repz
maskmovq
testl
repz
inc
int
inc
inc
ss
fcom
loope,pt
inc
dec
ret
movsb
mov
or
lret
pop
adc
adc
stc
pop
cwtl
add
mov
jnp
or
xchg
push
js
or
sbb
mov
outsl
cli
mov
lods
push
popf
in
push
lahf
lret
push
mov
gs
mov
xorb
xor
and
or
and
shl
leave
xchg
sub
pop
jmp
mov
loope
cmp
arpl
call
and
xor
outsb
add
bound
sti
inc
push
pop
pop
mov
in
inc
add
inc
divl
mov
xchg
sbb
pop
icebp
mov
cmp
jecxz
mov
pop
adc
stos
popa
add
xchg
pop
mov
mov
loop
sub
cmp
leave
dec
sub
sub
sahf
out
leave
dec
test
jecxz
jbe
push
insl
add
push
movsb
clc
arpl
dec
out
test
std
cmpl
test
adc
and
cmpsl
pop
mov
push
or
adc
es
xchg
arpl
mov
outsb
adcl
sub
or
pushl
add
test
jge
jmp
pop
cld
cmc
lahf
sarb
inc
and
or
push
xchg
out
sbb
mov
adc
aas
adc
mov
pop
push
cmpl
lods
xchg
inc
mov
mov
rclb
push
cmp
mov
imul
mov
sub
mov
pop
int
les
dec
imul
mov
push
cmpsb
loope
jg
xchg
cmp
xchg
push
adc
jge,pn
cmpb
push
insb
inc
push
push
push
adc
mov
xchg
sahf
xchg
stos
inc
mov
aaa
xchg
pop
xchg
push
ss
js
data16
pop
aas
or
add
mov
jnp
in
jp
or
imul
jns
mov
inc
adc
cmpsb
jae
lret
ds
lcall
lods
mov
jno
mov
sbb
sub
pop
ret
sti
push
cmpsb
pop
xchg
sbb
mov
icebp
aam
mov
lock
jg
inc
repz
pushf
mov
or
xor
cmp
mov
mov
mov
aad
outsb
lahf
xor
enter
es
iret
mov
or
sbb
je
out
mov
roll
sub
jmp
mov
outsb
inc
push
lret
cmp
pop
scas
mov
mov
aas
test
push
xor
add
sbbb
jae
gs
movsb
dec
loope
lahf
dec
je
mov
in
pop
add
and
shlb
loopne
mov
push
sahf
add
push
jge
adc
scas
cmpb
fsubs
shll
jle
jge
xchg
push
std
js
enter
mov
mov
lods
loope
cltd
adc
or
enter
inc
outsb
mov
shrl
pop
add
inc
sahf
push
push
xchg
sub
fmull
jns
dec
and
pop
push
pushf
arpl
xchg
mov
sub
aas
mov
sub
aas
adc
jbe
popa
cmp
dec
sbbl
jae
nop
fsubrp
or
xorb
pop
jge
mov
xchg
push
mov
movsl
and
loopne,pn
outsl
fsubrs
bound
push
into
nop
sub
pop
fs
inc
xor
arpl
push
mov
sbb
pop
and
out
call
nop
xchg
mov
add
add
aam
xchg
push
sbb
leave
test
jmp
movsb
xchg
dec
shl
mov
mov
imul
adcl
jne
push
adc
scas
test
sub
xor
pop
sbb
mov
fmul
fidivrl
cmpsb
and
shll
aaa
mov
pop
sbb
cmp
nop
rcrb
movsb
cltd
mov
adc
xchg
mov
mov
pmaxsw
sub
out
cmp
add
loopne
xor
addr16
popf
das
xchg
mov
sbb
in
jge
hlt
and
cwtl
movsl
shr
inc
jg
cmp
push
push
dec
cli
xor
std
sbb
inc
sbb
inc
dec
movsb
je
and
fisubrs
les
xor
xor
scas
jne
nop
mov
fdiv
adcb
xor
xchg
repnz
xor
jbe
cmp
pop
data16
jp
jo
in
jae
loop
fdivs
out
dec
out
cmp
inc
add
xchg
aad
in
pop
or
mov
shr
in
xchg
stos
inc
loope
cmpsl
loope
dec
out
pop
adc
mov
addr16
xchg
shlb
lods
stc
call
mov
ret
dec
or
ja
jno
pop
and
pop
dec
insb
sahf
inc
xchg
mov
test
push
js
cld
je
out
sbb
fmuls
add
ljmp
je
or
test
jecxz
and
mov
jno
mov
jecxz
mov
inc
lods
cmp
mov
test
les
out
out
shrb
scas
lret
stos
loope
cmpsl
out
cmpsl
lods
lret
repnz
adc
clc
mov
rcll
mov
addb
fmulp
outsl
fwait
mov
sbb
dec
or
call
adc
jmp
movsl
sub
stos
cmpsl
cmc
cli
jo
ljmp
iret
and
push
jo
cld
fwait
or
and
inc
xchg
fisubrs
cmpl
and
es
jge
add
in
iret
in
or
mov
add
pop
sub
pop
rcr
push
pop
push
in
xor
adc
dec
loope
js
clc
cmp
cmp
lahf
popf
jg
fidivs
rorl
dec
sbb
and
xlat
dec
push
test
cmp
mov
fistps
xchg
mov
xor
add
dec
jle
loop
loop
dec
repz
add
xchg
stc
sbb
pop
push
dec
ret
ret
cmp
cmp
ljmp
or
mov
popf
push
xorb
clc
xor
sahf
ret
xchg
outsl
mov
adc
jp
ficoms
push
push
addb
sub
cmp
sub
loope
xchg
jp
test
dec
dec
aam
int3
outsb
mov
jecxz
jbe
movsl
mov
jge
out
popa
les
add
jne
sbb
shlb
or
sti
dec
jnp
out
jo
aas
imulb
jmp
out
mov
int3
jnp
fisttps
xor
jl
fcomi
mov
pop
mov
or
lods
arpl
cs
pop
xor
jl
jge
mov
cli
icebp
es
mov
hlt
loope
shll
pop
adc
pushf
data16
jae
jg
stc
lock
insb
pop
jo
cmpl
insb
mulb
movsb
lcall
dec
mov
out
pop
rolb
push
lret
decb
and
pop
aas
insl
decl
stos
insb
fstl
repz
fisttps
mov
loopne
mov
out
mov
loopne
sub
in
jns
push
leave
inc
divl
adc
std
jbe
dec
iret
push
jnp
add
ret
jge
add
cli
ret
popa
andl
mov
cmp
push
sbbl
jbe
cmp
repnz
cmp
pusha
scas
fisttpll
pusha
stos
xlat
stos
das
das
dec
mov
sub
push
scas
les
xchg
xor
or
mov
dec
dec
outsb
or
or
add
lods
mull
pop
mov
mov
nop
mov
jmp
xchg
jle
cs
lds
hlt
mov
out
adc
jno
mov
lea
push
mov
orb
testl
ss
subl
mov
mov
jmp
pop
lods
mov
gs
adc
sbb
sbb
push
xor
enter
fs
adc
inc
popf
test
mov
mov
pop
or
or
rorl
xchg
push
mov
mov
sub
scas
pop
loope
xchg
lea
insb
fsub
jne
pop
cld
mov
mov
lcall
sbb
push
movsb
ljmp
adc
fsub
cmp
daa
outsl
add
out
pop
mov
fstl
xchg
sbb
inc
test
jae
cld
insb
je
inc
popa
sbb
xor
mov
cld
les
xor
mov
int
pop
push
lret
ljmp
and
mov
inc
mov
or
iret
jns
push
mov
pop
rolb
xor
test
xchg
xor
xchg
push
xchg
pop
je
adc
nop
addb
lods
push
cmp
mov
fldt
out
jge
addr16
dec
clc
mov
sub
fs
jle
data16
cmp
sbb
shlb
mov
mov
cmp
repz
fstpt
incb
es
cs
xchg
and
rcrl
sbb
arpl
cmp
daa
add
sbb
pop
std
add
cli
cmp
pop
adc
cli
hlt
add
push
test
dec
lea
mov
mov
in
imul
xchg
sub
mov
mov
stos
jb
jbe
addr16
mov
sahf
mov
adc
mov
adc
negb
jecxz
data16
loop
icebp
sbb
shl
xor
lahf
repz
call
xchg
loopne
xchg
or
aad
and
cli
aaa
out
frstor
lret
das
fwait
js
dec
jp
mov
shl
mov
lds
jl
adc
mov
xor
jp
mov
adc
jmp
add
cwtl
aad
scas
sbbl
stos
imul
divl
fptan
xor
ret
dec
jnp
jecxz
push
xchg
mov
xorb
mov
aad
gs
inc
sub
nop
inc
pop
cmp
cmp
aaa
cmp
or
pop
call
rorl
ja
xchg
ret
dec
fidivrl
jo
nop
ret
lods
jnp
mov
cmpsl
out
shll
add
lds
scas
imul
sbbl
pop
sbb
mov
jge
cltd
adc
mov
dec
cmp
sub
pop
adc
rcl
fnstenv
dec
insl
sub
xor
pushf
daa
dec
sub
cmp
or
pushf
inc
push
mov
data16
cld
cmp
add
movsl
mov
mov
lahf
lods
sub
push
xorb
ret
pop
cmc
pop
and
sbb
lcall
cmpsb
jl
pop
leave
sbb
rclb
dec
jmp
mov
hlt
jno
xchg
pop
loopne
lret
xchg
and
pusha
int
das
xor
mov
push
sbb
jecxz
sbbb
mov
cmpsl
add
sub
jo
mov
fsubr
add
or
aam
lret
or
and
jno
and
adc
fs
pop
outsl
add
pop
add
roll
cmp
adcb
aas
inc
stc
outsb
mov
out
jl
dec
inc
mov
pop
das
mov
inc
and
loope
mov
ja
pop
push
aas
out
sbb
push
out
sbbb
mov
or
jbe
add
mov
jne
xlat
aad
xlat
iret
xor
repz
mov
or
pop
addr16
andl
cld
mov
je
and
mov
pop
push
jno
or
aaa
inc
addr16
jmp
adc
push
xor
ss
jl
enter
int3
sub
aas
and
push
test
xchg
inc
mov
mov
inc
mov
sbb
jae
shl
adc
iret
sub
sahf
sbb
pop
pop
jns
stos
mov
cmp
cs
sub
and
es
rclb
in
sub
hlt
arpl
fprem
sbb
xchg
mov
or
mov
je
popa
js
or
inc
inc
cltd
pusha
fistpl
mov
xchg
jns
jns
push
pop
cmpsb
aaa
xchg
push
faddl
out
push
push
mov
pop
and
pop
push
call
dec
push
ds
sti
sbb
ret
out
popa
sub
fucom
adc
adc
mov
sbb
addr16
push
pop
int3
pop
outsl
mov
aad
mov
stos
lods
or
inc
ret
xchg
mov
or
mov
dec
mov
fwait
or
insl
mov
mov
mov
jl
insl
test
loope
xor
sub
in
das
xchg
std
cmp
js
orl
mov
jecxz
cmc
fmulp
mov
and
mov
scas
mov
dec
sub
ret
jno
mov
repnz
dec
push
fdivrl
int
in
xor
insb
lods
stc
jle
imul
popa
fbstp
addr16
mov
xor
dec
cmc
xor
dec
inc
popf
mov
lea
pop
add
and
mov
xlat
in
test
aas
dec
imulb
mov
pushf
shll
adc
arpl
insl
aad
add
addb
stos
jb
push
adc
sub
rclb
pop
push
xchg
sbb
es
xchg
jns
dec
pop
cltd
addr16
out
addl
push
cmp
in
xchg
rcrl
pop
mov
mov
in
out
lods
or
xchg
in
ja
ljmp
cmpsl
fsub
or
push
lock
or
pop
sub
push
dec
dec
mov
out
mov
xchg
out
dec
mov
mov
dec
dec
cli
xchg
xor
jnp
into
addr16
lret
jmp
sub
lret
test
pop
mov
fstpt
push
push
mov
iret
add
ja
push
rol
shll
stc
jmp
pop
lea
or
pop
pop
dec
sti
fs
push
add
push
add
push
out
adc
push
push
fcoml
cmp
push
movsl
push
int
jae
aaa
shlb
jae
test
addr16
pop
mov
jno
leave
pop
and
xor
jnp
jp
fisubs
jp
lock
repnz
pusha
or
mov
mov
mov
bound
out
out
sub
test
scas
push
js
jge
sbb
aaa
aad
and
mov
aad
aam
je
repnz
xchg
mov
repnz
or
push
push
and
fadds
xchg
test
ljmp
sbb
adc
nop
xchg
adcl
mov
fdivs
ror
sbb
push
idiv
dec
outsb
push
repz
jno
lods
cs
sbbl
cmc
das
add
dec
cli
out
test
addr16
rcrl
sub
xchg
stc
adc
das
inc
jnp
inc
pop
dec
insl
xor
lea
mov
dec
push
stc
mov
imul
dec
or
inc
repnz
roll
rcrl
jb
fisubs
adc
sbb
or
push
adcb
inc
mov
inc
jne
cwtl
mov
and
sahf
pop
pop
push
xchg
fcomps
push
inc
push
dec
repz
pop
push
fmull
add
dec
cmovnp
fdivrl
imull
mov
pop
jge
fdivl
dec
mov
mov
dec
insl
add
cmp
das
fdivp
jmp
dec
mov
push
or
adc
shl
jo
mov
cmpsl
mov
loop
xchg
xor
gs
xchg
pop
jns
popa
and
jecxz
in
sti
sub
or
daa
test
mov
idiv
mov
mov
sub
dec
std
stos
cltd
lea
fucomip
xor
loop
add
cmp
cwtl
insl
js
mov
sub
add
push
inc
cmc
sbb
mov
fsubrl
dec
bound
in
flds
sbb
sbbl
jl
loop
sbb
ds
xchg
in
cmc
inc
insl
in
mov
insb
shrl
add
xor
sub
jb
subb
adc
jg
cmp
jo
cs
dec
sub
stc
sub
adc
iret
fdivrp
aas
ret
xor
mov
push
movsl
flds
vminpd
mov
gs
in
jge
add
lret
loop
and
jecxz
pop
incl
arpl
or
lods
sub
stc
imul
push
in
add
and
fnstsw
in
sar
std
repnz
and
dec
inc
add
pushf
es
jle
xor
addb
test
xor
adcb
sahf
push
jmp
mov
mov
in
inc
cmpb
ret
sbb
xorl
out
push
mov
jg
aaa
aaa
add
xor
pop
ret
stc
testb
dec
lds
sbb
mov
fcomi
pop
mov
rcll
cmp
rcrl
sar
jns
mov
dec
sbb
xchg
cmc
jl
push
in
mov
call
sub
xor
aad
mov
sti
mov
push
add
daa
adc
jg
test
ret
jmp
popa
add
aaa
gs
and
lods
inc
insb
mov
xchg
jae
and
movsl
scas
pop
jmp
ja
sub
ret
xor
cmp
pop
in
push
loop
xchg
cmp
rclb
dec
fists
sub
dec
add
fdivl
and
push
xchg
cs
adcb
stc
xchg
jmp
loope
jnp
xchg
xchg
nop
lret
into
les
and
iret
idivl
pop
in
arpl
shrb
fstpt
ds
cltd
inc
inc
call
inc
pop
mov
mov
es
clc
ss
dec
push
clc
xor
dec
jne
pop
xor
imul
shll
mov
shlb
repnz
or
dec
sbb
push
notl
jecxz
in
pop
mov
pop
cmpsl
push
mov
adc
cmp
lret
in
xor
mov
pop
push
push
xor
xchg
jl
cmp
mov
push
xor
fldlg2
js
sbb
jo
mov
push
dec
call
inc
movq
fs
jl
int
mov
push
mov
in
cmpsb
imul
jo
fcomps
and
les
push
lret
cmp
sbb
xchg
jecxz
outsl
outsl
inc
shrl
popf
add
fxam
xor
js
shll
nop
les
pop
adc
push
frstor
in
mov
xor
push
lret
clc
int
test
cmp
mov
adc
mov
and
nop
ljmp
ret
inc
inc
mov
scas
xorl
adc
cmp
or
jp
pop
mov
cld
pop
mov
cltd
sbb
push
andl
push
lcall
mov
es
repnz
popa
aas
out
adc
jne
fs
rol
mov
adc
leave
xor
scas
jl
dec
pop
in
pop
loop
or
adc
push
js
int3
jcxz
push
jnp
int
jo
sarb
out
xchg
pushf
inc
lret
sbb
dec
and
sub
scas
add
inc
xor
cmp
adc
in
xor
mov
push
pop
rcrl
xchg
add
lea
push
jle
inc
add
add
gs
repz
mov
xchg
std
inc
shrl
js
push
push
scas
push
pop
jnp
pop
add
lcall
lods
pop
sub
push
push
cmp
cmp
sbb
jmp
fstl
out
or
xor
mov
enter
push
inc
push
cmc
repnz
ret
adc
jmp
lcall
mov
dec
insl
add
imul
lahf
js
and
es
sbb
add
push
lds
insb
lods
or
jae
xor
inc
sbb
push
and
ss
xlat
mov
mov
push
call
mov
pop
mov
out
andb
addr16
add
dec
int3
les
inc
ret
pushf
mov
in
pop
in
push
cld
mov
popa
and
ss
sti
xor
and
jmp
pop
lea
xlat
pop
stc
in
sbb
dec
or
loop
mov
cmc
cwtl
fs
or
arpl
push
popf
adc
push
or
mov
stc
lret
or
andb
adc
pop
push
out
call
in
jmp
dec
idivl
mov
mov
jns
loopne
in
jns
test
aam
push
and
ret
and
dec
loope
xor
outsl
inc
mov
push
mov
test
rorl
in
sbb
mov
jno
cli
xlat
lret
sub
jmp
jl
add
gs
mov
lods
aad
out
jns
fs
mov
sbb
out
lea
cltd
andl
int3
iret
jmp
mov
ror
pop
imul
mov
mov
dec
int3
fwait
nop
push
lds
jb
inc
das
push
push
scas
jmp
sahf
call
je
inc
out
out
xchg
adc
adc
orl
nop
jno
xchg
lock
test
xlat
jo
nop
jp
mov
push
aad
dec
rcrl
sbb
aaa
mov
enter
lock
push
mov
push
and
adc
sub
dec
mov
scas
pop
fdivp
out
sbb
and
mov
das
sarb
rcl
dec
xchg
out
mov
lahf
pop
dec
shr
pop
sbbl
jo
add
xor
push
cmp
add
shrb
push
dec
xchg
xchg
popf
mov
jle
aas
inc
sub
xchg
adc
inc
loopne
mov
aam
jmp
les
out
enter
adc
dec
sarl
mov
sbb
lods
mov
aas
aad
add
add
pop
push
rcrl
xorb
mov
sub
inc
gs
test
stos
adcb
inc
sbb
in
rcrl
shr
push
dec
add
lea
push
lock
aas
emms
mov
lahf
mov
mov
xor
add
pop
and
cmp
xchg
pushf
mov
popa
test
xor
inc
sti
sub
jmp
clc
or
xor
into
or
push
pop
push
fwait
or
fnsave
or
mov
lcall
and
push
or
inc
ret
add
dec
andb
test
or
add
xchg
scas
dec
sub
ja
pop
mov
inc
rorl
cmp
iret
mov
stos
and
dec
sub
sub
add
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
or
mov
mov
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
add
xorl
mov
mov
xor
mov
sbb
mov
sub
mov
mov
mov
push
not
pop
adcl
sub
add
mov
or
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
mov
andl
movl
mov
subl
mov
movl
mov
mov
sub
mov
addl
xor
add
orl
mov
xorl
lea
subl
mov
subl
mov
xor
subl
add
mov
andl
lea
sbbl
push
and
mov
subl
xor
add
sbbl
push
and
mov
adcl
push
andl
pushl
xorl
call
inc
mov
add
mov
mov
mov
xorl
xor
mov
xorl
add
jmp
adc
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
call
xor
add
dec
mov
jmp
and
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
sbbl
sub
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
jmp
iret
and
daa
mov
jle
movsb
in
adc
popa
bound
bound
or
mov
inc
ret
mov
pop
push
movsl
push
icebp
pop
outsb
mov
cmp
outsb
jns
sbb
push
sub
lahf
mov
push
cmc
pop
cmp
stos
cmc
lret
mov
cmp
stc
pop
push
xchg
dec
jecxz
incl
pop
xchg
inc
cmp
fadd
jae
sbb
push
clc
cwtl
sbb
mov
sbb
pop
pop
mov
dec
jns
xchg
icebp
xchg
ret
dec
icebp
mov
mov
sbb
fsubp
xor
in
das
inc
lret
lea
inc
sub
rclb
inc
pusha
xor
and
or
int3
fisubl
mov
ja
out
mov
repnz
mov
sub
int3
jae
cmp
pop
pop
cmp
sbb
jnp
movsl
fwait
push
faddl
popf
sbb
into
ret
addr16
rcll
cli
xchg
idiv
pop
cmpsl
lret
or
jnp
repz
or
jbe
sahf
xor
adc
adc
sub
cmp
cmp
outsb
in
push
andb
adcl
insb
xlat
out
mov
sahf
fldcw
jb
dec
sbb
addb
cltd
fcoml
sbb
jge
hlt
leave
xor
mov
das
imulb
mov
lahf
pop
cmc
push
mov
pop
pop
push
sbb
xor
int
outsl
adc
ss
cmp
pop
fwait
dec
sbb
loope
mov
hlt
repz
xchg
inc
mov
jl
test
es
cmpsb
and
xchg
sbb
bound
filds
aas
shrl
fiadds
mov
push
or
add
hlt
push
repz
cmp
push
mov
shrb
aam
int
out
outsb
movsb
jae
mov
and
fisubrl
cli
add
arpl
fcmovbe
cld
sbb
pushf
and
xorb
mov
lret
insl
jmp
scas
stc
ret
out
mov
lret
xchg
jmp
jecxz
jg
test
or
jb
in
add
jl
leave
fidivl
mov
push
stos
mov
inc
inc
jge
push
movsl
push
pop
ljmp
and
push
add
movsb
add
pop
add
sbb
mov
push
test
or
xlat
hlt
jp
adc
cmpsl
mov
push
mov
aas
andb
sub
aaa
jo
es
add
sbb
add
mov
adc
and
adc
adc
setle
inc
xchg
in
mov
lret
lea
in
sti
sbb
popf
mov
lret
inc
dec
adc
mov
push
xchg
dec
lcall
incl
sbb
jae
loop
or
ret
inc
lock
inc
mov
xchg
sbb
push
pop
sbb
out
or
stos
mov
sbb
in
jae
mov
xchg
xor
mov
add
out
mov
rol
gs
dec
aad
and
movsb
or
into
stc
adc
or
fld
icebp
fwait
push
fcomi
jbe
mov
idivl
sbb
push
push
lods
shll
fbld
sub
cmp
add
clc
lods
cmpsb
add
pop
fimuls
dec
dec
test
jmp
add
cmpsb
or
pop
mov
jp
inc
pop
fnsave
pop
push
lds
ret
hlt
and
jnp
aad
test
sbb
je
lods
and
mov
dec
into
mov
bswap
aam
loopne
ja
ja
jmp
cld
mov
mov
xor
sub
in
addb
xchg
mov
xchg
stc
iret
inc
clc
test
pop
stos
std
pushf
fildl
or
lods
mov
cmp
dec
out
aam
clc
cld
jbe
outsb
sbb
mov
cmp
popf
sahf
add
xchg
xchg
out
jle
arpl
or
aam
loop
out
cmp
call
sub
jae
mov
xchg
mov
add
lahf
mov
or
mov
and
sbb
cli
fcmovb
jne
xchg
add
test
repz
push
pop
aam
mov
out
lods
inc
xchg
adc
mov
cmp
or
pop
ret
imul
xchg
sbb
das
cmp
or
pushl
jge
insl
mov
xor
pop
pop
push
mov
pop
push
lds
adc
xchg
pusha
subb
jle
jae
adc
or
pop
mov
adc
jmp
mov
das
inc
add
outsb
lods
dec
fistps
pop
mov
negl
movsb
sub
mov
movsb
sbb
mov
dec
subb
and
sbb
push
out
rcrb
fnsave
mov
pusha
add
pop
push
cltd
sarl
or
xor
adc
jb
lea
fisubs
das
mov
lea
mov
mov
fwait
pop
xchg
outsb
dec
inc
add
mov
jo
xchg
imul
mulb
dec
fwait
lods
sarb
leave
sub
xchg
in
push
lds
xor
int3
dec
das
sub
jp
stc
push
add
add
dec
push
out
out
pop
mov
jns
add
xchg
je
inc
andl
jnp
sub
cmp
sbb
mov
and
std
sub
dec
xchg
pop
mov
add
enter
jle
sub
jbe
mov
xor
pop
cmp
lock
jg
into
sbb
aad
push
fwait
add
mov
pop
push
pop
xchg
scas
mov
std
jo
xlat
aam
stos
outsl
lods
into
mov
cmp
clc
mov
fnstcw
or
adc
addb
sbb
mov
in
mov
andl
sar
cwtl
push
ret
jg
xchg
frstor
dec
or
xchg
mov
jge
sub
insl
jbe
dec
mov
mov
lcall
pop
xor
xchg
not
rcr
fldenv
addr16
mov
xor
das
outsb
fisttpl
ret
call
inc
icebp
lahf
push
or
cld
mov
sbb
jns
xor
cmp
lret
loopne
lock
ficoms
scas
inc
int
xchg
jo
rol
mov
and
negb
jl
sub
mov
mov
frstor
fs
pop
mov
xchg
aaa
mov
push
pushl
ds
pop
cmc
iret
and
xor
setae
jp
add
add
stc
stos
lret
es
jecxz
adc
sub
lock
pop
mov
cld
ret
jb
leave
xchg
sahf
jbe
mov
push
cmp
xor
jl
scas
cmp
fdivs
mov
xor
mov
mov
sub
shl
das
or
sbb
sub
xchg
adc
into
or
bound
nop
mov
sub
mov
enter
add
outsb
test
cmp
repz
xor
mov
repnz
out
add
add
mov
add
lret
jge
mov
jb
stos
lods
fsubrs
movsl
dec
scas
test
outsl
inc
jb
xor
mov
mov
lods
pusha
icebp
sub
stos
mov
les
mov
fwait
and
xor
scas
lods
xor
jo
popf
mov
or
or
aaa
mov
sbb
push
out
sbb
sti
pop
jo
mov
and
mov
inc
mov
mov
or
mov
ss
movsb
mov
out
pop
mov
jne,pn
xor
aas
mov
iret
gs
addr16
sbb
gs
fdivs
in
jmp
cs
das
dec
and
loopne
cmc
mov
cltd
xlat
lods
inc
scas
ror
mov
or
lret
bound
bound
int
rcrl
xor
outsl
imul
jbe
jg
rorl
push
dec
inc
xchg
mov
icebp
arpl
inc
sbb
push
xor
cmp
xchg
ja
cmpsl
lock
mov
mov
push
cwtl
cwtl
jbe
cmp
adc
xor
adc
cwtl
data16
incl
orb
and
int
dec
jne
inc
dec
cmp
pop
into
bound
or
mov
repz
in
popf
int
adc
xchg
stc
aam
pop
pop
and
dec
rolb
dec
mov
add
ja
add
pop
inc
rcll
mov
cmc
pop
jle
in
jg
daa
pop
cltd
test
cmpsb
sahf
cmc
mov
mov
mov
fchs
pusha
stos
lock
incb
push
lcall
bswap
inc
stc
push
dec
jbe
outsb
imul
pop
mov
jbe
aad
enter
jb
hlt
mov
mov
pop
test
xlat
push
jo
cld
jb
push
icebp
xlat
out
xchg
movsb
add
push
xor
enter
gs
cmp
cmpsb
xor
or
into
sub
cs
jmp
scas
mov
and
sarl
movl
cmp
push
outsb
add
leave
jp
dec
aas
addr16
stc
dec
adc
popa
sbb
test
movsb
es
test
adc
xor
adc
jmp
lahf
aad
movsl
mov
cli
fwait
xchg
insb
inc
add
scas
and
push
shlb
fs
fcomip
cmp
ja
and
jge
lahf
jp
stos
stos
adc
arpl
daa
je
mov
or
or
bound
fwait
xchg
and
dec
lods
mov
mov
frstor
pop
fsubrl
iret
mov
sbb
out
mov
xlat
or
fwait
dec
jae
lret
movsb
lret
cs
xchg
enter
ds
jp
mov
lahf
dec
aam
add
or
xchg
cmp
or
sarb
mov
imul
mov
sbb
fwait
jo
sbb
aad
popf
mov
and
pop
sbb
ja
aam
loopne
scas
jb
xchg
sti
xchg
hlt
fwait
movsb
stos
aam
repz
hlt
pop
adc
xor
inc
push
imul
mov
cmp
ficoms
out
insb
in
xchg
nop
les
jns
sub
fimull
pop
stc
in
lods
lahf
shlb
out
stc
xlat
cwtl
xorb
xor
sub
call
ds
pusha
inc
inc
add
sub
lret
adc
icebp
shrl
mov
xchg
or
ljmp
jo
loopne
add
mov
mov
stc
pop
insb
imul
popa
pop
and
daa
pushf
push
sbb
mov
pop
test
push
mov
jo
push
in
in
xchg
call
mov
sahf
mov
and
call
adcl
and
clc
out
pop
ffree
or
test
cltd
mov
and
and
loop
sti
stc
jae
pop
xchg
pop
ficoml
aaa
mov
push
sbb
add
add
xchg
push
adc
dec
push
nop
mov
cmp
outsb
jae
out
and
jo
in
shrd
cmpsl
outsl
shlb
dec
lock
adc
cli
movb
dec
push
sahf
cltd
pop
or
cmp
lret
pop
int
jbe
icebp
rcrb
in
ljmp
call
xor
lods
sbb
sbb
fdivl
out
xor
arpl
push
mov
aaa
jno
pusha
xor
dec
adc
cs
pop
test
stc
adc
scas
sub
in
fldl2t
jge
xlat
add
scas
cmp
mov
add
adc
and
outsb
lret
stos
in
xor
into
xor
jmp
mov
mov
inc
xchg
inc
or
fdiv
test
sbb
push
in
in
leave
out
gs
bound
jns
mov
std
fdivs
or
nop
clc
roll
sbb
adc
cmpsl
jg
fcmovne
add
or
pop
pop
cmc
lods
aas
jl
push
mov
sbb
std
push
or
ds
jbe
sbb
pop
cmc
pop
pop
mov
movsb
pop
test
movsl
adc
rcl
ret
mov
movl
int
jne
call
xor
arpl
loop
push
dec
push
jns
push
stos
in
xchg
dec
fsubl
push
sub
inc
push
test
and
fs
or
lcall
cmp
and
pop
fidivrl
daa
add
dec
in
es
add
dec
stos
cmp
in
add
fnstcw
push
add
fsub
push
stc
mov
mov
and
lea
jg
js
or
mov
repnz
hlt
btc
scas
ret
and
cmp
test
and
mov
sbb
popf
push
xor
adc
push
dec
or
sahf
cli
fistl
cmpb
nop
adcl
lret
or
add
loopne
mov
imul
fsubrs
adc
popa
test
jns
gs
sbb
in
cmp
mov
pop
mov
jle
mov
push
mov
pop
jnp
loope
xor
inc
fs
call
cld
push
push
cs
push
jbe
ljmp
inc
push
cmp
sbb
or
leave
adc
and
push
cmp
test
push
sub
pop
testl
pop
and
or
jmp
jmp
push
sbb
sbb
xchg
mov
mov
mov
lock
inc
cmp
and
stos
cmc
bound
gs
or
out
stc
aas
dec
jp
cmc
js
fnstcw
fdivl
xor
test
adc
mov
std
scas
ss
mov
cmp
or
inc
out
movsl
inc
push
iret
les
cmp
cmp
outsb
sub
pop
rcll
jns
sarl
sbb
cltd
out
mov
stos
ljmp
push
mov
jmp
lahf
or
cmp
sbb
dec
mov
sub
push
adcl
xorb
sbb
push
mov
and
push
inc
in
sbb
push
xchg
mov
inc
or
jmp
adc
les
inc
sbb
mov
ja
hlt
jmp
mov
cmp
hlt
pop
in
fsubl
lods
mov
sarl
mov
cmp
gs
cmp
dec
xor
pop
inc
mov
pop
adc
daa
xchg
and
dec
xchg
rolb
jmp
xor
mov
test
cmpb
push
test
hlt
jns
jno
enter
cmp
jge
cmp
sbb
aad
or
mov
add
hlt
mov
xor
inc
das
data16
in
xlat
mov
pop
jb
dec
in
jl
mov
gs
push
cs
or
ja
mov
ret
mov
rcrb
mov
jo
jns
call
inc
addr16
test
out
fadd
icebp
leave
pop
outsb
leave
ljmp
testb
in
shl
setnp
iret
mov
jg
inc
or
xor
xchg
fstl
add
and
push
xor
push
push
fistl
inc
rorb
ret
inc
cmp
adc
add
sbb
mov
sbb
fbstp
push
test
xor
cmc
and
call
int3
cmp
test
sbb
adc
jbe
push
mov
imul
stc
enter
fcmovne
stos
setbe
std
add
insl
movsl
gs
daa
fs
mov
rcll
leave
lret
xor
jp
sub
jge
scas
mov
jo
sbb
cmp
nop
pop
xor
xor
pusha
inc
imul
add
and
sarb
loope
push
lret
xlat
scas
int3
mov
ljmp
in
pop
fsub
cmp
or
int
inc
mov
add
dec
jb
ljmp
cltd
pop
pop
mov
fsin
mov
leave
arpl
jmp
or
xlat
addb
mov
inc
mov
add
out
push
rcrl
nop
pop
jo
adc
jmp
stos
add
aad
pop
or
das
mov
orl
ljmp
sub
hlt
mov
ljmp
leave
mov
pusha
testb
jmp
mov
aad
push
inc
into
jle
aaa
fwait
outsb
aaa
test
cmpsb
loopne
push
enter
aaa
push
cs
add
pushf
stc
ret
outsb
daa
pop
xor
sbb
mov
and
jo
dec
test
std
cmp
lods
mov
rsqrtps
scas
out
scas
sub
sti
push
jnp
movsl
and
push
rcll
movb
fistps
mov
out
jl
jp
cmp
imul
or
daa
or
testb
in
mov
mov
std
mov
xor
cmpsb
popa
jns
xor
jns
add
jge
mov
or
lret
cmp
adc
xchg
jno
jecxz
rcrl
cmpl
sbb
xor
mov
popa
lds
popa
insl
lock
fnstcw
sub
inc
and
cmpsl
mov
inc
daa
sbb
loop
sub
fnstcw
stos
dec
adc
jl
lret
inc
add
mov
adc
dec
jne
mov
sub
mov
pushf
popf
mov
leave
sub
icebp
and
mov
xor
pop
add
cmc
dec
insb
aam
push
mov
call
mov
cmp
or
dec
loop
adc
leave
cmp
mov
push
xchg
test
mov
daa
push
mov
pusha
mov
adc
jae
jo
sbb
dec
repz
cli
cmpsl
and
push
aas
popa
xor
mov
jns
jmp
mov
xor
jl
dec
pop
sbb
nop
int3
mov
inc
mov
dec
aaa
lea
mov
outsl
jle
sub
inc
cld
mov
mov
dec
push
sub
inc
mov
sahf
cmp
in
dec
fcomi
dec
mov
lock
pop
and
push
pusha
test
fisubrs
mov
test
test
bswap
inc
mov
xchg
push
adcb
nop
rcrl
jbe
scas
outsl
int
jno
sti
sub
cltd
or
xchg
push
xchg
mov
pushf
adc
into
inc
mov
scas
test
push
add
loope
fmull
push
dec
adc
xor
xchg
fwait
push
aaa
xchg
xchg
loop
std
dec
sub
fldenv
sbb
adc
test
or
mov
dec
scas
cli
sub
mov
or
int
mov
test
add
push
mov
mov
out
into
push
mov
sbb
mov
pop
inc
addr16
movsl
lahf
push
sbb
lcall
lret
xor
pop
xchg
push
push
pop
dec
mov
xchg
mov
repnz
and
inc
div
push
add
inc
mov
push
jo
cbtw
sub
lods
mov
and
push
hlt
adc
es
test
or
xchg
pop
stos
clc
and
mov
xchg
push
shll
mov
inc
xor
and
test
les
jb
sarb
add
data16
push
cld
and
rorb
sti
mov
pop
daa
aad
adc
dec
adc
mov
ja
cs
or
in
movsl
xchg
xchg
sbb
jne
icebp
or
fldcw
fistpll
pop
add
cmpsl
ja
pop
imull
movsb
cs
mov
pop
daa
xchg
xchg
mov
mov
pop
sahf
jo
or
ljmp
adc
jmp
mov
mov
pop
dec
into
data16
mov
pop
push
mov
scas
xor
dec
decb
sbb
pop
cwtl
popa
pushfw
push
orb
cs
push
andb
loope
mov
inc
andl
mov
sub
xchg
xorl
outsl
cmp
cli
mov
outsb
test
test
pop
ret
push
xor
mov
sbb
inc
xchg
adc
mov
pusha
dec
fs
mov
andb
mov
and
pop
push
fstps
or
test
add
jo
pop
adc
outsl
mov
lea
cwtl
push
pop
mov
je
mov
rorl
ret
int
loope
add
popf
jo
sub
cs
mov
and
adc
insb
push
fdivs
xchg
lret
sub
out
mov
add
adc
mov
lea
jo
fwait
jg
gs
out
inc
data16
aad
repz
pop
jecxz
sbb
xchg
xchg
aad
divb
loop
jg
sub
jo
dec
or
ss
sub
sub
movsl
jns
cmp
pop
gs
je
test
ret
in
inc
mov
lods
push
inc
push
inc
cmpsb
jl
mov
in
cmpsb
icebp
out
test
lcall
int3
loopne
mov
scas
jns
je
mov
and
pop
cwtl
mov
es
ficoml
cmp
inc
xchg
outsl
dec
js
pop
or
inc
int3
or
inc
mov
pusha
popa
mov
mov
test
cmpsl
pop
xchg
mov
pop
stos
cmpsl
mov
push
add
out
inc
pusha
lods
js,pt
int3
lret
xor
das
sbb
mov
ja
out
mov
mov
out
push
lods
out
xchg
jp
test
xchg
dec
aas
loope
adc
movsl
mov
cltd
mov
test
dec
push
stc
arpl
ljmp
mov
jecxz
push
call
xchg
xchg
lahf
rorb
adc
push
pop
fisubl
pusha
sub
lock
pop
stc
push
add
cli
lods
mov
xor
and
mov
jno
pop
jecxz
jbe
push
jg
sub
cwtl
lret
mov
adc
push
adc
mov
scas
inc
cmpsb
dec
mov
or
inc
pop
mov
out
and
mov
inc
adc
stos
int3
lret
les
ss
mov
test
icebp
insb
icebp
pop
push
mov
adc
jbe
jle
sbb
into
je
mov
daa
push
dec
xor
mov
rol
hlt
nop
jecxz
jmp
mov
xor
mov
shrl
sub
mov
imul
stos
out
scas
sahf
pop
fisubs
or
pop
mov
jno
ja
aas
mov
mov
dec
ret
int3
mov
popa
xor
and
xchg
xchg
es
test
lahf
sub
mov
leave
push
adc
in
or
hlt
sub
mov
inc
mov
addr16
push
lods
push
insb
lahf
cltd
jge
ss
pop
or
fdivl
jae
fcomps
dec
mov
cs
aad
lods
test
addb
xchg
xorb
inc
fisubl
enter
enter
push
mov
jb
xor
es
loop
and
rcrl
sub
add
out
adc
mov
and
stc
mov
ret
xor
xor
mov
imul
and
stc
cmc
gs
or
ror
hlt
pop
push
cmp
out
inc
add
mov
popl
mov
test
mov
pop
mov
xor
into
push
push
mov
mov
lahf
push
push
cld
pop
cmp
test
bound
addr16
clc
cli
mov
repnz
ret
popf
movsb
sub
mov
and
and
das
push
push
jo
rcll
daa
and
lret
out
cmp
jmp
aas
and
and
push
dec
inc
ds
push
xor
out
outsb
lahf
adcl
test
mov
je
jno
and
clc
and
add
mov
or
jnp
push
push
addr16
jo
ds
clc
and
aas
dec
test
stos
mov
movups
jge
add
sub
inc
dec
dec
push
mul
fadds
scas
adc
loope
xchg
adc
imul
and
sbb
scas
inc
mov
cmpl
pop
sbb
add
out
sahf
xor
in
cwtl
fs
sbb
clc
jo
adc
sti
mov
js
std
movl
xor
in
xor
sbb
pusha
js
sbb
cli
lds
pop
xor
inc
je
lods
pop
das
mov
outsb
xchg
push
and
inc
aaa
xchg
inc
cmp
int
js
pop
jbe
popa
repz
lret
xor
shlb
push
xchg
mov
adcl
scas
shlb
pushf
push
adc
mov
ret
je
call
xchg
adc
push
sbb
cmp
sub
cmp
fistpll
dec
adc
mov
aam
fsubrs
dec
loopne
negb
mov
push
insl
jmp
lcall
ret
mov
push
jl
xchg
push
fsubr
sbb
leave
clc
add
sub
adc
scas
shl
jle
int
xor
pop
mov
fwait
inc
sbb
in
mov
lahf
push
lcall
aam
adc
lea
push
lods
push
dec
ss
andb
insb
sbb
leave
cld
ffreep
fmuls
fidivrs
and
or
mov
bound
mov
fidivl
fldenv
mov
and
adc
or
insl
add
xchg
adc
loope
cmp
out
fnstenv
movsb
jne
push
lds
inc
arpl
lea
aaa
mov
jns
scas
sub
xchg
cmpsb
stos
mov
fucomi
mov
insl
mov
push
or
or
pop
push
shl
lods
xchg
xor
mov
push
mov
xor
ja
sahf
jmp
sbb
bound
push
js
imull
cmp
push
inc
mov
pop
test
and
mov
inc
hlt
cmp
dec
mov
pop
repnz
or
int
mov
das
mov
xchg
xlat
nop
dec
mov
out
icebp
add
pop
jl
cmc
dec
aas
sti
jecxz
sub
push
orb
sbb
repz
sbbl
aas
int3
adc
call
fs
data16
ror
xlat
xor
jg
push
pusha
push
sbb
cmp
mov
clc
mov
loop
cmp
rorl
mov
in
aaa
int
scas
mov
repz
push
or
jge
fiadds
add
cmp
xchg
xor
stc
loopne
mov
test
arpl
mov
add
test
sub
lret
jmp
jle
add
sbb
inc
ret
lock
ret
fistps
movsl
mov
adc
sbb
hlt
mov
stos
scas
adc
dec
pop
sbb
push
adc
push
jg
fisubs
arpl
mov
mov
rclb
sub
or
or
cmp
jb
loop
inc
pop
mov
cmpsb
adc
mov
sbbl
cmp
test
cs
repz
shlb
push
insb
push
pop
js
mov
loopne
mov
inc
push
mov
loope
lcall
mov
loopne
int
scas
mov
inc
dec
out
pop
outsb
sbbl
xchg
cmpsb
aam
loopne
push
fsubs
stos
inc
xchg
fimuls
mov
ret
lea
sbb
jmp
repz
mov
in
add
jbe
push
out
addr16
mov
aam
arpl
adc
adc
push
stc
shrl
sbbb
mov
push
rcl
push
cli
pop
data16
notb
enter
xor
sbb
outsb
std
push
loope
lods
push
popf
aas
repz
inc
imul
leave
sbb
dec
xchg
jl
pop
inc
mov
movsl
add
jnp
jbe
or
push
test
sub
rorl
pop
push
shl
push
movsb
in
fldenv
or
cmc
divb
test
mov
xor
jno
inc
inc
mov
aaa
xor
sub
sub
dec
cli
insb
inc
sahf
inc
cmc
mov
push
dec
arpl
lea
out
repnz
sbb
push
dec
dec
cmc
xlat
fwait
lahf
push
xor
dec
jb
and
xorl
fwait
mov
mov
mov
mov
test
mov
xchg
cwtl
inc
adc
jmp
and
ret
ret
jno
call
pop
hlt
mov
mov
sub
sub
je
daa
in
sub
dec
pop
mov
pusha
inc
or
add
mov
shl
shll
pop
pop
and
sbb
pop
cmp
fisubrs
incl
mov
test
inc
or
mov
sbb
or
nop
fwait
rcrb
in
rol
fistpl
dec
push
leave
pop
je
and
push
xchg
adc
imul
fistpl
push
cmp
or
stos
movsb
add
xor
cmp
xor
test
loopne
or
sub
imul
mulb
aad
and
sbbl
pop
inc
in
xchg
adc
and
andb
lods
mov
fisubrs
push
addr16
addr16
or
mov
iret
or
ficompl
les
sahf
xchg
sarb
mov
dec
xor
packsswb
xchg
aas
rorb
adc
and
jne
nop
and
or
rclb
imul
cwtl
sbb
lahf
pop
sub
or
es
data16
mov
fwait
sub
rcll
pop
and
int
je
pop
jecxz
jnp
je
dec
cli
cld
into
jle
inc
repz
mov
push
jg
jbe
addr16
and
cmp
stos
enter
pop
pop
push
les
jecxz
jo
notl
fdivs
pop
shr
adc
andb
cmp
fistps
cmp
and
out
scas
adc
lods
pusha
add
ds
sarl
enter
call
adc
push
movsl
popf
fisttpl
test
sub
cmp
push
mov
sub
imul
pop
stc
std
dec
fldcw
mov
cltd
dec
clc
xor
js
jge
sbbl
scas
mov
ret
adc
mov
sub
shl
xor
xchg
sbb
mov
test
jp
mov
pop
inc
xor
inc
lret
mov
mov
or
mov
imul
jb
mov
jno
adc
sbb
pushf
popf
orb
fucomp
movsl
fwait
sbb
mov
jl
or
fstpt
rcll
test
ror
arpl
in
or
cmp
dec
call
jge
xor
dec
mov
pop
nop
movsb
mov
mov
jno
add
mov
mov
outsl
sbb
mov
jmp
sub
fsubl
jle
movsb
pop
xor
mov
bound
bound
ficoml
push
and
movsl
xchg
xor
xor
xor
dec
add
mov
popf
xchg
jl
dec
xor
mov
push
inc
mov
jecxz
mov
mull
incl
mov
jmp
xlat
out
and
dec
sbb
inc
pop
call
pslld
sahf
push
pop
push
pusha
enter
push
xchg
add
shrb
punpckhbw
test
in
mov
lods
inc
ja
cmp
cmp
outsb
sbb
clc
inc
jg
pslld
mov
mov
or
xor
jecxz
nop
pop
add
in
push
and
outsl
pusha
push
mov
shlb
cmp
in
fadds
xor
jno
mov
repz
jae
icebp
bound
mov
int3
xchg
iret
shll
test
movsb
sub
rcrb
cmp
ret
out
jno
addr16
mov
out
enter
out
push
jae
xchg
fists
loop
inc
dec
jns
mov
sub
xchg
xor
hlt
push
sbb
insl
clc
gs
push
in
pop
or
lock
jne
lods
ret
inc
je
and
mov
ljmp
dec
int
ret
mov
test
fiadds
test
into
inc
cmp
das
pusha
sbb
lea
aaa
xchg
push
in
int3
jmp
jb
ss
jno
mov
xchg
xorb
push
scas
sbb
stc
lods
shrb
stos
in
popa
and
mov
pop
fucomp
stc
jo
add
incl
pop
gs
sar
lea
sti
and
mov
cmp
cmp
push
jg
iret
lcall
add
sqrtps
dec
xor
push
hlt
jmp
add
insb
faddl
mov
mov
clc
jo
xchg
push
int3
sbb
subb
test
bound
cmp
adc
ss
testb
lock
stos
pop
xchg
les
ljmp
xor
fnstsw
cld
adc
fsubl
mov
jmp
test
sbb
test
mov
int
mov
adc
cmp
int3
movsl
aad
in
jne
inc
xchg
push
mov
sahf
sbb
imul
jnp
adc
sahf
ljmp
mov
and
cwtl
mov
or
test
sbb
std
push
aaa
push
pop
repnz
sbb
push
ss
outsl
insb
cmpsl
xchg
insl
ret
inc
inc
movsl
add
scas
mov
icebp
enter
add
push
mov
loopne
cs
cmp
jnp
or
stc
lock
out
test
cmpsl
mov
mov
pop
mov
in
mov
xor
ror
mov
movsl
adcl
sbbb
std
push
mov
xor
fcomip
sahf
mov
pop
mov
jge
stc
lea
mov
rolb
aad
out
insl
enter
xor
arpl
lret
sbb
xor
inc
imul
push
outsl
sbbl
out
push
push
mov
add
fdiv
mov
pop
cmpsb
je
cli
test
icebp
mov
dec
xor
movl
adc
adc
mov
cwtl
cld
out
jge
inc
cmp
popa
xchg
sahf
stos
nop
jmp
add
dec
imul
inc
sub
ja
pop
xchg
mov
inc
rolb
jecxz
sbb
or
push
pop
fwait
ret
pushf
arpl
mov
ja
cli
arpl
push
or
xor
mov
sarb
in
out
dec
das
xchg
mov
jae
push
mov
jle
add
pop
add
out
mov
sbb
sbb
addr16
mov
sub
inc
cmc
loop
and
sbb
insb
xchg
push
nop
std
movsl
inc
sbb
fdiv
insb
scas
push
cltd
mov
xor
sub
out
dec
ljmp
push
pop
mov
inc
sub
ds
push
xchg
repz
and
iret
test
aam
ja
hlt
lret
loopne
cmc
pop
cmp
and
pop
dec
mov
outsl
sub
bnd
mov
or
test
aam
hlt
lahf
adc
in
pop
ljmp
xchg
repnz
xor
lahf
sbb
pop
imul
and
push
imul
arpl
pop
inc
mov
movsb
mov
shl
adc
lahf
mov
push
and
dec
push
out
fwait
cmpsl
push
dec
std
pop
mov
fisttpl
jle
xchg
test
jge
jmp
ja
sub
xchg
cmp
mov
adc
xchg
mov
data16
mov
repz
inc
xchg
fsubrl
add
mov
out
jecxz
xor
sbb
push
and
dec
lods
int
xchg
stc
dec
inc
mov
filds
sbb
cmp
imul
mov
int
lods
ljmp
fs
repnz
in
es
xchg
and
mov
inc
xchg
call
pop
repnz
lcall
adc
sbb
stc
es
imul
or
adc
inc
cmpb
dec
inc
or
jae
sub
hlt
addr16
pushl
fsubrl
ret
fistpll
or
pushf
dec
test
shlb
nop
in
mov
dec
dec
lea
lret
add
pop
lret
push
outsl
push
jecxz
pop
mov
int3
push
test
mov
and
xor
jns
cltd
xchg
enter
sbb
das
push
jns
push
mov
iret
aad
sub
les
and
popa
xor
mov
adc
jnp
inc
rolb
push
ja
in
jbe
aad
fs
repnz
daa
mov
arpl
es
push
jmp
fisttps
stos
leave
ss
xchg
mov
push
inc
outsl
sbb
sub
out
ljmp
lods
fsubl
add
popa
cmp
js
sbb
repz
pop
pop
in
sbb
divb
out
clflush
hlt
into
dec
and
fidivl
into
and
lods
adc
out
cltd
loop
cli
xchg
orl
jnp
idivl
shlb
aad
jne
cwtl
inc
les
jo
negb
sbb
stos
mov
ret
iret
push
icebp
pop
test
dec
jg
push
pop
imul
js
inc
fnstcw
cmp
in
xchg
lock
sbb
sub
std
lahf
ds
lahf
sbb
sarl
mov
inc
mov
je
and
pop
sub
push
mov
subb
dec
mov
pop
xor
shrl
test
mov
ds
out
lods
sbbb
int3
mov
or
mov
ljmp
sbb
inc
xor
rsqrtps
rcl
shrl
dec
dec
xor
andl
mov
sbb
js
std
xor
es
add
push
int3
fwait
add
push
pop
or
repnz
push
sub
popa
adc
pop
jmp
into
xchg
pop
push
inc
sbb
adc
mov
movsl
ds
outsl
dec
scas
frndint
andnps
mov
movsl
pushl
aaa
stos
inc
cmpsb
test
push
ja
adc
insl
lret
popf
mov
dec
xchg
adc
cmp
add
cmp
lods
xchg
scas
daa
mov
xor
sbb
fwait
jbe
sub
ljmp
and
pop
ljmp
fisubrs
subl
xchg
mov
lods
insl
xchg
hlt
std
nop
ss
outsl
push
dec
dec
mov
mov
ret
into
add
hlt
shll
jge
sub
cmp
add
jnp,pt
mov
mov
daa
adc
and
jmp
js
pop
int
enter
shll
push
popa
mov
adc
das
push
mov
xchg
hlt
pop
inc
push
out
fildll
sub
sbb
testl
xchg
int
mov
lods
cwtl
or
mov
movsb
jmp
repnz
lret
add
pop
mov
cltd
mov
aad
cmp
xor
jl
jecxz
stos
punpckhwd
mov
or
mov
mov
sub
rcll
sub
fldenv
cltd
jmp
mov
xchg
sub
mov
sub
test
push
notb
das
repz
rcr
and
lock
insl
sbb
mov
add
aad
sub
push
sub
mov
jmp
mov
xorb
xor
xor
addr16
xor
dec
jnp
fcomps
sbb
pop
sar
push
push
xchg
mov
sub
lcall
push
xor
pop
clc
push
fdivs
jp
xor
cltd
or
mov
jb
das
cmpsl
icebp
insb
mov
pop
mull
lods
les
subl
loope
adc
jp
sub
pop
sbb
test
ds
sbb
and
adc
sahf
jp
cmp
shrl
aas
stc
xor
sbbl
xchg
push
xchg
inc
or
pop
push
xchg
cmc
test
int3
adc
mov
outsl
add
nop
stos
lcall
mov
pop
repnz
and
mov
mov
lret
mov
in
jg
sub
jl
or
dec
pop
add
and
testb
je
adc
daa
jecxz
stc
outsb
inc
adc
sub
xor
dec
dec
push
outsl
lds
rcll
xchg
pop
push
adc
sarl
lahf
imul
pushf
jbe
in
sub
pcmpgtd
add
and
daa
and
sub
lret
clc
mov
adc
pop
sub
mov
mov
sub
rcl
mov
mov
mov
cld
sbb
clc
sbb
jno
sbb
add
jae
in
push
test
adc
pop
ret
std
cltd
adc
fcoml
mov
mov
testl
call
pop
cltd
push
insl
add
mov
pop
bnd
fisubs
repz
sbb
inc
mov
pushf
std
filds
jg
dec
jo
lcall
popa
lds
push
fwait
add
data16
lcall
aam
pop
inc
jbe
aam
add
movsb
fidivl
xor
pop
and
test
lds
in
sub
add
adc
ljmp
leave
push
cli
push
sbb
add
rorl
es
push
ss
popa
leave
mov
xchg
out
jle
mov
dec
ja
push
jbe
dec
or
add
idivb
lcall
mov
pop
mov
push
push
push
dec
pop
mov
cmpsl
cmp
add
pop
int3
xchg
aas
rcl
movaps
into
add
inc
notl
test
inc
cltd
cmp
popf
daa
push
inc
shll
push
outsl
ret
scas
sub
mov
not
sbb
inc
or
or
xlat
jmp
push
and
jle
push
dec
pop
mov
fnclex
aaa
out
shlb
cld
pusha
dec
and
aad
pop
lods
xor
pusha
into
int
xor
and
dec
fs
adc
sbb
and
imul
dec
xchg
cmpsb
aam
es
cld
inc
sahf
lahf
cmp
fdivrl
dec
xchg
shlb
in
pop
sbb
jae
and
mov
sbb
dec
sbbb
xor
test
cmpsb
stc
movsl
leave
paddq
and
loope
or
bound
cmp
dec
repnz
insl
imul
cs
les
imulb
test
std
jnp
pop
mov
pop
xchg
imul
mov
mov
or
cmp
fimuls
stos
xchg
add
xchg
sub
shrb
sbb
xchg
in
out
sti
mov
sarl
fstpt
hlt
or
ret
sbb
pop
imul
mov
cmc
xor
pusha
sbb
daa
cmp
imul
movb
mov
or
in
ljmp
push
push
ljmp
pop
dec
sti
xchg
cmp
cld
or
xchg
cwtl
sarl
xchg
or
repz
or
jns
mov
jbe
imul
pop
ret
dec
xchg
xchg
sbb
dec
xor
icebp
push
movsb
nop
jl
xchg
sti
inc
mov
adc
mov
push
jg
aaa
mov
enter
aad
dec
sbb
mov
mov
mov
sarb
cmp
mov
sarb
adc
cli
in
js
dec
cmp
xchg
adc
pop
js
sub
hlt
pop
out
fnstsw
inc
fwait
cld
dec
push
jno
or
inc
push
outsl
pop
rcl
jne
cmp
and
scas
mov
push
cmp
popa
test
cmp
cltd
in
push
pop
pop
sbb
adcl
inc
jnp
rcrl
in
mov
mov
stos
testl
mov
outsb
in
int3
test
lods
ljmp
imulb
shl
shrb
push
inc
xchg
shll
je
and
push
out
sub
les
test
jecxz
add
in
push
int3
and
jg
jmp
inc
cli
pop
mov
pop
and
pop
int3
jbe
cwtl
pop
push
inc
aaa
xlat
cmp
pushf
or
outsb
int
jb
push
jp
mov
rorb
testl
push
aas
mov
inc
sub
mov
xchg
insb
fdiv
popl
hlt
shl
movsl
lret
and
mov
sub
lcall
push
popf
pop
pusha
pushf
or
xor
add
cmp
ficompl
pop
push
lock
out
imul
sbb
es
outsb
fbstp
sbb
sub
popa
sub
in
or
and
jp
scas
adc
inc
jl
dec
movsl
lea
outsl
pop
push
icebp
rcl
dec
xchg
call
xor
xchg
xchg
mov
imul
loopne
cltd
jg
out
scas
pusha
popa
aam
or
lds
xor
xchg
in
int3
jo
sub
xchg
repz
and
xchg
das
jae
cmpb
insl
movsb
cmp
shll
push
lock
sub
enter
jns
push
inc
or
jne
in
mov
call
and
add
testb
mov
rorl
jp
mov
iret
or
cmpsb
cmp
leave
adc
dec
imul
into
shll
xchg
sbb
ret
divb
push
std
pusha
adc
add
insl
push
aaa
jmp
adc
inc
jne
in
call
mov
jecxz
pop
and
repz
fists
and
add
pop
mov
cmp
aaa
add
rcll
mov
imul
mov
aam
ss
xchg
gs
sbb
in
pop
xor
and
testl
dec
xlat
insb
or
mov
int3
and
lds
mov
mov
jae
outsb
sub
addl
fwait
push
cmp
adc
cmc
enter
pop
scas
pop
pop
jnp
stc
imul
jmp
inc
mov
lahf
idivl
data16
inc
ds
sub
mov
or
mov
xchg
mov
gs
lock
or
in
mov
push
cmpsb
dec
jecxz
ret
cmpsb
jge
xchg
mov
das
xchg
mov
cld
sub
cwtl
xor
lret
mov
add
dec
andl
fdivs
xchg
jno
mov
loopne
cmp
repnz
add
test
fcmovne
jmp
push
dec
push
mov
cltd
adc
outsb
aam
push
rorb
mov
mov
xor
push
es
or
stos
rolb
or
dec
neg
adc
add
dec
jge
sbbb
jno
cs
pushf
mov
push
jl
jmp
and
test
lahf
jns
in
mov
lret
cmpsb
lea
aaa
lret
dec
lock
fisubrl
pop
add
push
push
pop
mov
sti
call
mov
mov
scas
add
sub
jno
xchg
mov
xchg
gs
mov
lock
mov
adc
xchg
mov
testb
mov
bound
fucomip
cmp
or
fiadds
divl
jle
out
push
or
mov
xor
xchg
pop
cmc
dec
subl
nop
and
push
cmp
push
sub
sbbb
sti
xchg
out
mov
fidivs
jp
adc
inc
negb
jae
cmp
inc
lcall
repnz
or
mov
inc
das
imul
pop
cmp
jnp
adc
cli
or
dec
push
pop
fs
int3
call
dec
mov
subl
mov
xlat
js
mov
mov
mov
sbb
movsb
in
incl
adc
sbb
mov
sahf
andl
dec
inc
fstpt
out
xchg
pop
push
mov
lret
push
mov
mov
jnp
cmp
push
dec
and
cmp
fs
sti
je
sbb
lret
sub
cld
hlt
mov
mov
notb
push
int
addb
xor
cmp
sbb
lret
clc
dec
mov
es
cld
mov
pop
pop
jge
add
dec
sbb
xor
dec
fwait
pop
in
int
push
inc
adc
or
mov
mov
cmp
jb
jle
xchg
and
xchg
mov
xor
adcb
add
xchg
cmp
in
push
test
js
and
push
loope
mov
imul
or
mov
sbb
push
xor
jmp
sub
ds
sub
test
frstor
pop
iret
mov
les
cmp
pop
sub
inc
movsb
xchg
sub
pop
nop
adc
nop
or
xor
leave
push
dec
test
jbe
jns
mov
iret
lods
sub
icebp
jne
lods
aaa
pushf
out
jle
pop
pop
and
mov
lcall
test
adc
jno
add
pop
aam
xlat
mov
roll
cmp
jecxz
lret
testb
lock
fstpl
jne
fwait
notl
loopne
aad
xor
xchg
mov
cmpb
in
mov
in
push
add
loopne
call
in
scas
lret
xor
mov
sub
insl
pop
imul
sbb
fucomp
mov
sub
rcll
out
aaa
adc
pop
or
movsl
or
inc
jge
lea
scas
or
sub
mov
cmovno
je
mov
or
inc
popf
push
cmpsb
fsub
inc
mov
sbb
mov
cmpsl
jnp
xor
aaa
pop
inc
sbb
bound
push
fsubs
inc
nop
mov
imul
les
test
xor
push
dec
inc
pop
push
push
pop
add
das
dec
xchg
test
sbb
jg
or
jp
adc
inc
sbb
adc
loop
jbe
dec
cmp
and
mov
push
repz
aaa
pop
pop
mov
data16
out
cwtl
fildll
cwtl
outsl
popa
adc
int3
dec
sbb
mov
mov
and
out
mov
cmp
pop
sbb
rol
dec
testl
mov
iret
sub
push
ja
test
sub
mov
ljmp
ja
sti
pop
adc
fcoml
sbb
push
test
xchg
sub
cli
sahf
test
add
leave
push
into
xchg
xchg
lret
lret
jae
movsb
or
pop
das
cld
ss
insb
shll
fs
std
adc
popf
out
sbb
outsl
out
push
pop
pop
cmpsb
dec
pop
xor
test
mov
movsb
mov
mov
stos
jne
cli
push
push
mov
or
pusha
sbb
rolb
pop
mov
mov
adc
outsl
xor
adc
pop
stos
push
loop
sahf
push
ret
ja
jne
xor
insb
or
cmp
cs
dec
inc
cld
test
loopne
data16
mov
rcrl
sub
popa
mov
xchg
mov
mov
fadd
aaa
cmc
and
or
push
jmp
lods
insb
stc
stc
je
xor
cmpsb
mov
xor
cli
iret
sti
subb
push
mov
jae
push
push
jb
cmpl
xchg
loopne
dec
incb
ss
xchg
jecxz
xchg
out
lods
sub
call
push
cld
inc
xlat
faddl
test
push
imul
sbb
mov
fs
jae
ficomps
pusha
and
das
out
int3
mov
lea
lods
fcmovb
xor
dec
sbbl
subb
call
repz
test
sub
jae
adc
push
nop
loopne
bsr
push
adcl
testl
test
jecxz
adc
jbe
mov
mov
arpl
mov
int
xchg
mov
popf
mov
or
cli
out
mov
shll
pusha
aad
call
imull
xor
sahf
fistpll
mov
fimuls
cli
xor
and
pusha
xor
mov
push
mov
push
mov
cmova
jp
mov
mov
cmp
lcall
xchg
aam
fsts
mov
icebp
or
popa
cmp
lods
inc
cmp
adc
scas
fdivr
aas
xchg
mov
mov
mov
cmpsb
pushf
test
imul
sbb
repnz
stc
sub
adc
mov
inc
xor
jmp
push
jge
test
sbb
out
cmpsl
inc
fwait
add
mov
pushf
xor
or
js
in
push
and
sub
cs
imul
cltd
mov
pop
fs
les
inc
and
mov
sub
sarl
or
aad
push
cmp
and
mov
jne
jmp
mov
cmc
mov
or
mov
sub
adc
mov
in
adc
outsb
std
jns
xor
cmpsb
mov
inc
data16
stos
or
inc
aam
sbb
mov
ret
aaa
mov
jae
das
push
push
clc
mov
sub
mov
lahf
adc
xchg
fimuls
cmpsl
or
gs
push
aas
cs
pop
dec
inc
outsl
push
stc
loop
sahf
gs
cmc
out
dec
rorb
sbb
js
push
sbb
dec
mov
aas
inc
popa
fimuls
arpl
inc
or
xor
or
and
iret
enter
sahf
xchg
stos
bound
out
adc
out
aad
das
insl
in
cwtl
faddl
or
repnz
popf
fs
pop
push
jbe
jle
mov
dec
imul
int
loope
or
mov
mov
test
test
imul
adc
mov
dec
push
and
pop
push
ss
ret
adc
mov
mov
imul
adc
add
jmp
jno
push
push
xor
mov
push
mov
rorl
dec
jmp
mov
jo
adcb
mov
sub
jne
cmp
mov
sti
jp
cmp
mov
js
cmp
adc
mov
gs
in
sub
popf
pop
je
xor
clc
daa
pop
scas
es
cmpsl
push
mov
insl
jmp
in
adc
mov
or
jb
lea
push
aad
jnp
mov
data16
stos
outsl
cmp
or
cld
pusha
das
rolb
sbb
pop
sub
icebp
scas
inc
push
imul
pop
xor
je
sahf
in
leave
enter
test
push
fldcw
adc
cwtl
sbb
ljmp
sbb
into
jp
push
jne
xchg
mov
mov
bound
inc
scas
push
aam
andb
and
push
mov
pop
lods
adc
test
je
mov
in
push
pop
jl
and
adc
not
xchg
enter
loopne
lret
inc
pop
xor
xchg
jg
mov
mov
and
adc
cmpsb
cmp
jl
insb
leave
scas
pushl
imul
cmpl
sub
and
mov
outsb
adc
or
sbb
xor
pushfw
popf
xchg
and
cmp
mov
aas
sbb
cmp
pop
test
movsl
int
daa
repnz
iret
mov
pop
mov
or
xchg
sub
loope
ret
js
lcall
fcomp
mov
jo
xor
es
testl
add
daa
add
fnsave
sbb
jo
inc
and
hlt
ds
ss
xor
add
int3
out
shlb
outsl
pop
mov
xchg
and
outsl
sbb
xchg
add
jle
push
xchg
mov
cmp
cmp
cmc
enter
add
pop
and
add
mov
outsl
and
jns
scas
cltd
dec
sbb
cli
mov
add
push
js
jne
aad
cld
fwait
push
fs
cld
or
pop
pop
out
jge
out
add
add
push
dec
mov
pushf
xchg
aaa
test
adcb
ljmp
or
inc
jle
in
cs
fstl
xor
movsl
into
xchg
push
xchg
int
xchg
pop
jmp
jg
subb
pop
xor
lahf
sub
bswap
cmpb
sub
xchg
fstpt
pop
mov
xchg
mov
loopne
jae
lds
pop
mov
decb
mov
cmp
and
pop
push
mov
stc
rcrb
pop
mov
inc
roll
pop
cli
jl
insl
pop
xor
aas
mov
test
in
xchg
stos
inc
mov
jecxz
scas
aad
jae
cltd
fdiv
sbb
lods
mov
jmp
mov
and
push
push
inc
ficompl
jl
aam
mov
clc
int
fcomps
xor
adc
dec
aas
push
std
adc
mov
cld
jno
insb
mov
fstpt
repnz
jmp
dec
fld
or
dec
lds
xor
enter
xchg
popf
imul
or
testl
fld
inc
outsb
cltd
jmp
pop
daa
andl
mov
repnz
andl
push
fimuls
pop
test
sub
add
scas
das
sahf
xchg
mov
sbb
mov
xchg
add
fucom
add
loope,pt
je
lods
sbb
xlat
lret
and
sbb
adc
ret
jg
jne
and
fdivr
addb
jno
pop
gs
or
das
cmc
mov
cld
inc
nop
adc
icebp
repz
movsb
iret
mov
in
fsubrl
pop
and
clc
inc
mov
or
repnz
lahf
pop
mov
cmc
xchg
arpl
out
xchg
fmul
fadds
out
xor
inc
mov
push
lret
mov
shrl
fdivr
fcomi
inc
jle
cs
les
sbb
minps
sbb
int3
mov
call
mov
movsb
fnstsw
inc
pop
gs
outsb
test
adc
ret
mov
lret
push
mov
es
stos
push
dec
stc
popf
ret
inc
dec
or
jno
aad
mov
push
cmpsl
mov
sbb
xlat
push
mov
aad
mov
int
add
dec
cwtl
push
pop
lret
mov
popf
loope
push
sti
push
dec
or
stos
inc
data16
jns
dec
scas
outsl
mov
mov
xor
mov
adc
mov
lret
sub
xor
sbb
cmp
push
pop
mov
cmp
push
and
inc
rorl
or
mov
fnstsw
fdivp
cmp
inc
or
xchg
inc
icebp
xchg
in
fimull
test
sub
popa
mov
aas
rorb
sbb
sahf
mov
ret
mov
and
leave
scas
jmp
pop
dec
les
lods
out
stc
mov
lcall
sahf
dec
test
sub
or
jnp
popf
pop
add
pop
idivl
je
jmp
cmp
push
popa
outsl
push
frstor
repnz
push
in
jo
push
ret
scas
pusha
or
mov
jge
jge
sbb
scas
stc
cmp
sbb
fldcw
push
jbe
pop
push
push
jns
das
out
repnz
in
dec
movsb
lea
mov
inc
add
jl
cli
mov
mov
into
inc
cwtl
pop
cltd
aaa
enter
mov
push
iret
lods
test
cmpsl
cmpsl
lods
add
popa
push
and
add
std
mov
notl
out
lods
xchg
add
ss
pop
and
push
lret
mov
test
dec
fsubs
lret
and
or
loope
push
int3
orb
sbb
shll
cli
dec
push
or
cmp
stc
mov
sbb
mov
sbb
mov
or
or
rorb
stos
lahf
dec
in
jno
les
fidivl
es
test
out
or
fcompl
xor
fwait
pop
jae
into
sbb
push
aam
ja
pop
xchg
pop
ret
mov
hlt
roll
add
leave
js
ja
pop
push
sub
popa
pop
out
xor
in
inc
into
lret
jbe
sbb
out
mov
ss
dec
xor
and
stc
int
xor
mov
mov
xor
pop
xchg
aam
test
adc
cmp
lret
jb
aad
pop
inc
movsl
movsb
dec
aaa
mov
xor
test
nop
popf
insl
and
mov
int
loop
bound
outsb
xor
dec
jnp
int3
sub
add
sbb
jb
lock
out
mov
mov
movsb
jne
inc
sbb
mov
pop
xorl
mov
mov
inc
fwait
xchg
call
add
lea
aaa
daa
mov
lock
mov
mov
ret
jp
push
test
stos
push
lea
clc
pop
popf
and
sbb
bound
mov
flds
xchg
dec
in
add
cmp
adc
cld
sub
test
mov
rolb
jae
mov
bound
add
mov
push
sbb
and
nop
aad
test
xor
adc
adc
xor
fcmovnu
jmp
inc
dec
mov
add
mov
push
jbe
in
hlt
cli
adc
in
cli
sub
movsb
mov
ss
dec
push
out
jle
inc
mov
rcrl
sbbl
aad
testb
mov
js
hlt
sbb
in
and
mov
push
jae
ljmp
inc
mov
push
call
cmpsb
shr
jno
enter
jb
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
jmp
mov
stos
arpl
jg
xchg
pop
push
mov
popa
bound
bound
or
add
pusha
add
cltd
pop
mov
lret
leave
sub
mov
ror
xor
mov
push
or
in
ret
je
sub
dec
enter
xchg
sub
dec
or
push
inc
repnz
shr
mov
popa
push
aas
lcall
insb
cmp
push
je
sbb
mov
mov
mov
sub
adc
imul
or
lea
popa
fldenv
mov
loope
fnstcw
push
div
cmp
dec
fiadds
add
mov
fs
pop
push
jb
or
push
or
fwait
inc
mov
xchg
or
pusha
aaa
or
dec
sbb
pushf
cld
leave
xchg
fiadds
xchg
rcr
enter
xchg
fwait
loop
fcoml
cmpsl
ss
and
lahf
vmovapd
sti
push
test
imul
sub
or
fstpt
int3
daa
mov
flds
cmp
adc
ds
jmp
or
mov
push
mov
xor
int3
mov
mov
clc
pop
ljmp
jl
push
mov
pop
add
adc
mov
or
cmp
fstl
add
test
mov
cmp
inc
fwait
adc
fstpt
jg
add
scas
icebp
in
imul
inc
in
jb
jmp
in
xchg
jecxz
lock
cmp
out
sub
jmp
aas
mov
pop
arpl
dec
jbe
mov
xlat
shrb
mov
mov
push
sbb
lods
fucom
cmp
and
outsl
mov
ljmp
or
sbb
test
or
jns
es
roll
sbb
dec
lahf
xlat
jae
inc
gs
dec
cmpsl
xor
or
outsl
pop
outsl
stos
lods
je
push
cmpsl
push
adc
rcr
xchg
cmpsl
push
mov
sbb
mov
inc
daa
cltd
pushf
push
xor
sub
mov
stos
mov
sbb
jb
outsb
xchg
xor
out
xchg
mov
sub
loope
int3
sub
lock
add
dec
jge
imul
sbb
aad
int3
and
or
aam
push
mov
xchg
push
icebp
sbb
xor
out
addr16
pushf
adc
cmpsl
xor
imul
repz
jle
push
inc
clc
push
les
repz
jne
mov
push
jge
rolb
ret
mov
fs
rcrl
sbb
xchg
cs
dec
jge
cmpsb
mov
stos
sti
cmp
cmp
or
dec
lds
sub
jo
jg
out
and
pop
xchg
push
jb
mov
push
pop
js
sub
sahf
imul
data16
in
dec
inc
je
in
addl
out
shl
aad
sbb
mov
orb
iret
rcrl
mov
mov
test
loopne
add
lods
mov
arpl
cmp
adc
push
or
test
jae
cmp
cwtl
xchg
pop
pop
jp,pt
das
in
mov
out
adc
fs
ret
sub
cmp
test
cmp
jle
popa
jge
cmpb
jo
jecxz
mov
dec
and
out
shl
push
mov
mov
cld
les
mov
push
xor
jne
adc
jmp
mov
mov
out
xchg
lods
pop
daa
adc
dec
adc
adc
xchg
and
and
push
xor
adc
clc
dec
sub
imulb
xor
in
int3
lcall
pop
icebp
int3
mov
mov
pop
jno
iret
fidivs
test
jge
ja
loop
data16
in
add
mov
ds
mov
sbb
mov
add
lahf
push
aad
adc
shr
xlat
jnp
das
adc
rcrl
fs
pop
inc
adc
ret
dec
stc
pop
push
xorb
cmp
repz
les
xchg
test
out
imulb
jno
push
cmpsl
push
js
xchg
leave
shll
fs
sbb
xchg
hlt
repnz
unpckhps
popf
mov
xor
movsb
push
pusha
add
pusha
arpl
lds
out
xchg
adcb
adc
aad
inc
or
test
ljmp
push
adc
les
movsl
lret
imul
movsl
cld
mov
sbb
scas
pop
push
mov
mov
movsl
je
les
loop
gs
ljmp
fimull
imul
inc
xchg
jmp
or
push
jg
mov
lods
rclb
mov
in
push
xchg
adc
and
arpl
sub
xor
daa
or
js
inc
and
mov
cmp
inc
sahf
out
or
es
std
insb
xor
dec
hlt
hlt
icebp
jp
repnz
lods
cs
pushf
incl
cmp
int
jge
clc
cmpsl
scas
sti
imul
lret
ss
popa
mov
add
insb
mov
sub
cmp
lds
xlat
stos
sub
xchg
inc
stos
popa
add
lahf
cmc
xor
sub
ret
mov
inc
sub
xchg
push
inc
jne
xchg
pop
out
cmpsb
and
loopne
pushl
sbb
leave
rcl
jae
or
jle
add
cltd
sahf
leave
dec
and
xor
sub
popf
cmp
xor
inc
les
jge
add
lea
loop
scas
xchg
adc
pop
sti
mov
sahf
xor
mov
lcall
mov
das
xchg
enter
enter
add
or
js
xor
ja
adcb
cmp
out
jmp
or
jmp
mov
test
leave
insb
add
add
inc
sbb
push
cmpsb
je
mov
out
cmp
add
addr16
adc
lret
cmpsl
sbb
ja
fwait
mov
stc
pop
mov
and
enter
in
fs
inc
xorl
xor
jo
xchg
outsb
cmp
push
enter
mov
scas
sbb
clc
adc
fsubrs
sub
dec
mov
dec
test
cmpb
in
nop
int3
cmp
out
xchg
cld
std
lret
in
xchg
mov
iret
mov
popl
imul
ret
cmp
jg
cld
arpl
cmp
mov
push
mov
lock
js
in
xchg
scas
xchg
fsts
sub
jno
jmp
push
shlb
mov
pop
out
dec
movsb
aas
arpl
sbb
imul
jp
push
stos
pop
loop
or
xor
adcb
movsl
clc
pusha
mov
and
insl
lods
pop
ds
and
xchg
ss
jmp
mov
popa
outsb
frstor
push
jmp
lods
mov
lea
ret
fisubl
sbb
and
mov
imul
gs
lock
xchg
mov
test
out
sbb
sub
pop
fisubl
into
shr
or
jmp
mov
lea
xor
arpl
daa
push
into
jmp
popa
xorb
ret
push
jns
insb
inc
push
inc
xor
or
das
mov
mov
cmpsl
hlt
roll
adc
or
mov
fcompl
mov
add
loop
jae
pop
dec
mov
add
sub
shll
cmp
imul
lret
out
sub
subl
sbb
lret
push
jg
enter
mov
aam
cli
adcb
into
adc
mov
popf
clc
push
ss
int
sub
and
ljmp
in
test
mov
sahf
negb
inc
in
sub
push
and
adc
push
cmp
pop
cmp
inc
cmc
jge
lret
iret
lock
ja
xor
and
dec
mov
push
shll
insl
imul
test
pushf
fsubrs
out
xchg
sub
test
mov
xchg
lock
mov
jp
adc
pop
inc
mov
ds
pusha
hlt
mov
and
out
pusha
sbb
dec
rorl
leave
jmp
cwtl
dec
ds
push
cmp
pop
js
dec
cmp
cs
cmp
add
ljmp
xchg
ds
pop
jb
sarb
mov
pop
add
mov
fnstcw
stos
xchg
inc
cmp
fisttpll
xchg
out
out
cs
scas
sub
or
sbb
push
and
jno
das
insl
pop
sub
sbbb
out
sub
xchg
sub
fnsave
jb
das
fnsave
enter
test
arpl
push
pop
les
cmp
popa
popf
enter
inc
pop
lds
mov
push
out
in
cwtl
lea
rolb
dec
push
lods
sahf
mov
ret
inc
push
push
sbb
pop
push
out
out
fcompl
in
adc
inc
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
xor
movl
mov
sbbl
mov
addl
add
xorl
xor
movl
cmp
movl
jne
mov
mov
or
mov
add
mov
adc
mov
mov
xor
adc
push
addl
mov
xor
xor
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
subl
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
pushl
pushl
call
jmp
movl
movl
dec
mov
add
push
mov
adc
mov
sbbl
xor
sbbl
xor
subl
mov
sbbl
add
movl
add
incl
imul
mov
movl
cmp
jne
and
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
insl
push
push
jo
addr16
pop
inc
push
jb
inc
je
gs
dec
js
inc
js
arpl
inc
push
jno
bound
add
inc
add
inc
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ds
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
ds
add
inc
inc
add
inc
inc
add
inc
add
or
sbb
sbb
orl
add
cmp
ds
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
in
add
ds
add
or
jl
inc
add
jne
je
jns
jb
addr16
imul
add
addr16
addr16
pushw
push
jle
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
add
add
cmc
enter
push
inc
add
jp
mov
inc
inc
add
in
adc
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
dec
bound
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
add
add
push
imul
push
je
push
jbe
jo
dec
dec
pop
jp
jbe
pop
jo
push
jbe
ja
js
jno
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
add
jae
dec
gs
insb
jp
add
fs
push
inc
inc
outsb
imul
push
push
push
pop
outsl
push
dec
je
jo
add
inc
dec
outsl
pop
inc
jb
jns
inc
pop
add
dec
dec
dec
inc
jno
jae
push
arpl
add
bound
dec
ja
dec
inc
inc
push
push
add
outsb
dec
jno
jbe
insb
inc
push
add
add
add
add
jbe
imul
insl
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
cmp
inc
aaa
dec
ss
xor
dec
add
xor
dec
inc
dec
xor
dec
xor
dec
inc
xor
dec
pop
xor
dec
pop
xor
pop
inc
push
aaa
xor
pop
cmp
xor
aaa
push
xor
pop
add
push
xor
dec
inc
add
xor
xor
inc
dec
cmp
xor
pop
pop
push
add
cmp
xor
add
dec
pop
push
inc
xor
inc
push
xor
dec
inc
xor
xor
push
cmp
pop
xor
aaa
pop
xor
push
add
push
pop
xor
inc
inc
ss
inc
dec
add
dec
pop
push
cmp
inc
add
pop
xor
pop
cmp
inc
dec
add
xor
pop
dec
inc
push
pop
push
add
dec
pop
xor
pop
push
inc
inc
dec
add
push
pop
inc
pop
xor
inc
dec
xor
push
xor
ss
xor
inc
pop
push
push
inc
pop
xor
add
dec
pop
inc
inc
push
dec
push
add
dec
pop
ss
xor
add
xor
add
dec
add
inc
add
add
push
add
add
pop
add
xor
dec
add
add
pop
add
add
add
dec
add
push
add
inc
add
xor
pop
add
push
add
pop
add
xor
inc
add
add
cmp
push
add
add
push
add
inc
add
add
pop
add
push
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
dec
add
xor
xor
add
pop
add
add
add
pop
add
dec
add
add
add
dec
add
add
xor
add
inc
add
inc
add
add
push
add
add
pop
add
add
add
add
aaa
add
add
push
add
add
pop
add
push
add
pop
add
add
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
