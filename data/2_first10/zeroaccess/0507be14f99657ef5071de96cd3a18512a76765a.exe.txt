push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
dec
adcb
cmp
lret
in
ljmp
cmp
popa
test
jns
dec
sbb
dec
out
outsl
outsl
pop
xchg
bound
add
and
sub
push
cmp
jp
out
add
adc
scas
xor
cltd
mov
add
or
and
cli
sar
jns
mov
xchg
fdivr
enter
lahf
ds
mov
jp
sub
xlat
aad
fld
push
mov
mov
add
imul
dec
ljmp
xor
jb
mov
stc
fwait
clc
cmp
aaa
fsubs
jle
mov
xchg
stos
adc
push
push
mov
ljmp
jge
adc
repz
mul
test
shlb
loope
push
inc
jae
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
inc
mov
ret
jle
cli
jg
jle
adc
mov
add
and
or
pop
cmp
cmpsl
fsubl
mov
push
repnz
es
sub
stos
dec
rcll
fwait
mov
push
pop
xchg
mov
dec
mov
mov
in
sub
data16
jae
jno
fidivl
or
mov
je
mov
jb
inc
out
add
cmpb
enter
sbb
ficoml
into
es
stc
sbb
pop
sub
pop
adc
jno
xor
push
jo
loope
sub
xchg
cmp
mov
push
cmp
js
imul
jb
push
hlt
pushf
out
cli
or
into
imul
pusha
outsl
push
int3
inc
mov
cs
and
mov
cwtl
jbe
mov
mov
sub
push
arpl
cmp
jb
jb
add
jge
add
daa
pop
mov
mov
adc
and
or
decl
jl
nop
or
scas
mov
sub
cmpsb
and
or
pop
jp
sbb
rcrb
adc
lret
sbb
push
sub
cmp
add
adc
and
ficoml
movsb
pop
mov
xchg
mov
dec
clc
cwtl
adc
or
mov
pop
push
xlat
lods
adc
outsb
int3
xor
dec
into
sub
inc
add
neg
jmp
cli
fcompl
jno
cmp
incl
jge
jle
jg
jle
sub
dec
vpshlw
les
xchg
xchg
xchg
lret
sub
call
and
inc
mov
insb
daa
bound
ret
rorb
aam
jl
and
fidivrl
jge
xchg
push
pop
data16
and
lock
loopne
mov
pop
les
pop
xor
pusha
add
sti
jl
lds
pop
pop
mov
dec
pop
inc
mov
push
mov
mov
add
cmc
or
hlt
sarl
cmp
lock
das
adc
cmp
xchg
dec
out
sub
test
lret
aad
lea
aam
es
mov
mov
mov
mov
jnp
add
bnd
mov
loop
xchg
jnp
xor
inc
dec
pop
pop
cmp
scas
iret
jb
cs
push
clc
xor
adc
stc
mov
or
test
push
testb
fs
cld
sahf
les
fdivs
inc
sbb
xchg
xchg
inc
insl
insl
cmp
inc
mov
pop
imulb
aaa
cmp
cmp
mov
arpl
mov
pop
ljmp
mov
jmp
sub
scas
aaa
inc
scas
adc
mov
mov
mov
inc
cmp
ljmp
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
dec
cmpb
cli
jg
jle
jmp
dec
hlt
pcmpeqw
out
push
mov
outsl
or
jle
adc
push
dec
pop
sub
bound
pusha
inc
push
pop
xchg
test
scas
pop
and
and
ljmp
add
cwtl
sbb
cmp
xchg
push
mov
mov
icebp
inc
add
lret
sub
leave
add
mov
inc
mov
adc
jo,pn
or
and
sbb
adc
insl
push
add
adc
iret
bound
out
imulb
shll
daa
sti
rcr
mov
fnstcw
aaa
mov
xchg
aas
fstpl
push
loop
inc
or
outsb
inc
jmp
cmc
cld
std
and
addr16
pop
lahf
jg
sub
gs
in
ljmp
dec
lods
dec
repz
xchg
jle
orb
mov
imul
js
pop
mov
mov
jb
mov
cmp
mov
std
sti
push
inc
sub
or
cmp
jecxz
hlt
test
inc
lcall
lods
bound
xlat
shl
sbb
pop
loope
fwait
adc
cmp
mov
dec
stc
jo
xchg
scas
dec
cli
jp
dec
jl
movsl
mov
mov
cli
pop
mov
fisttps
test
mov
je
pop
mov
pushf
add
add
jmp
push
dec
inc
pop
inc
nop
push
js
jle
jg
jle
cmpsb
adc
push
stc
xchg
mov
push
xlat
jmp
mov
ss
ret
enter
xchg
or
push
imul
sbb
jno
mov
jge
inc
sbb
addl
xchg
lods
jns
cmp
rcrl
scas
pop
test
hlt
mov
mov
fwait
out
iret
push
fcmovb
lods
cmc
cli
into
ja
add
lcall
pop
add
and
out
bsf
lret
jmp
rcrl
push
sub
dec
aas
mov
je
adc
loope
cld
mov
inc
add
out
push
lret
mov
in
jno
shl
mov
cld
add
or
movsb
test
adc
adc
inc
mov
mov
cmpsl
sahf
inc
dec
or
fidivrs
mov
je
push
cmp
scas
add
mov
jb
cs
cltd
int3
or
test
in
jae
loope
push
mov
pop
mov
shl
jp
pop
movsl
push
mov
push
sub
adc
lret
clc
mov
jecxz
xchg
decl
pop
xchg
je
addr16
imul
jle
xor
push
mov
out
addr16
lret
jmp
inc
xchg
mov
mov
pop
rcll
push
std
ret
inc
inc
aas
insl
and
mov
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
xlat
or
inc
mov
jle
jg
jle
icebp
pop
or
mov
dec
rorb
push
and
es
int
out
xchg
cltd
pop
orl
mov
fidivs
shll
mov
stc
cli
push
stos
xor
daa
das
mov
cmp
or
adc
loope
je
dec
sbb
inc
adcb
mov
xchg
out
sub
in
sbb
and
adc
notrack
movsb
or
mov
dec
and
cli
pmulhw
inc
movsb
jecxz
mov
cmp
mov
push
shlb
lock
mov
dec
in
sub
or
xor
mov
push
lock
add
mov
addb
dec
repz
gs
dec
sbb
je
mov
push
mov
cmp
and
mov
icebp
xor
add
push
push
cmp
xchg
fmull
sarl
adc
lea
lods
sub
fidivrl
and
nopl
sti
das
and
imull
sbb
mov
jne
les
xchg
cmpsb
cmpsb
ja
push
mov
cld
clc
insb
popf
jo
jp
and
cmp
lea
adc
or
in
lcall
push
test
mov
idivl
adc
popa
push
or
push
jno
add
lods
ret
shr
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
jmp
cli
jg
jle
pop
addr16
jl
shll
push
push
jae
sub
movb
xchg
addr16
lret
enter
rolb
fmuls
xor
mov
mov
in
stos
add
popa
or
js
mov
std
adc
dec
cmp
xchg
outsb
aaa
repnz
add
cmp
insl
in
outsb
stos
and
test
mov
push
mov
or
mov
jecxz
mov
jp
push
fidivl
sbb
aaa
and
sbb
pusha
xor
sub
adc
xor
pop
stc
dec
fiaddl
aad
inc
xchg
sub
mov
mov
loop
adc
jle
adc
cmpsb
cmp
push
cmp
push
jmp
int
lds
imul
push
sub
mov
pop
inc
push
xlat
mov
repz
mov
hlt
lock
mov
scas
lods
pop
pop
mov
ss
jecxz
pop
pop
fcomps
ficoml
adc
jp
or
push
cli
int
inc
xchg
add
cwtl
ja
mov
adc
jp
jmp
and
cmp
dec
inc
pop
fimuls
fildll
xchg
mov
sbb
outsb
mov
pushf
out
add
loope
popf
fsubl
or
int3
xor
and
mov
cmp
jle
cs
hlt
push
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
mov
dec
outsb
stos
mov
sbb
fsubl
incb
xor
incl
pop
jmp
pop
dec
aas
cmp
pushf
leave
js
lods
cmc
fcmovbe
cmc
cld
or
dec
iret
mov
arpl
shlb
shll
lret
ds
dec
jmp
lret
pop
incb
sbb
loop
rorb
xchg
ss
cmc
mov
xor
mov
nopl
aad
daa
gs
roll
cmp
jno
inc
mov
adc
adc
push
push
cmp
or
add
sub
xchg
mov
add
jl
test
xor
pop
pop
mov
iret
add
mov
and
ret
push
in
aam
mov
jns
cltd
push
loope
jno
pop
loop
adc
test
xor
push
sbb
or
mov
push
out
repz
push
lea
loope
mov
push
roll
aaa
data16
push
xchg
loope
cwtl
enter
stos
add
iret
cmp
fildl
hlt
xor
sbb
sti
popf
or
adc
lock
and
in
add
cmpsb
out
adc
lcall
cmp
std
ja
add
pop
inc
sti
roll
test
add
jmp
daa
stc
cmp
cli
mov
cwtl
out
movsb
int
inc
sub
cli
stos
aad
cmpsl
or
inc
call
add
pushf
add
add
dec
and
jno
push
mov
and
jle
cli
jg
jle
fidivs
aam
cmp
inc
jp
pop
inc
adc
nop
in
sub
sbb
lock
cld
mov
in
xchg
or
out
lea
sub
inc
push
mov
add
repnz
xchg
test
outsb
xchg
cmp
jle
jg
mov
pop
repnz
lock
clc
pushf
fisttps
inc
orb
adc
fistpll
lods
push
push
lock
adc
fsubrl
or
sbbl
dec
fwait
mov
ljmp
xchg
aad
jmp
mov
mov
xchg
outsl
roll
shlb
pop
fwait
mov
pop
ret
jecxz
xor
stos
aaa
fildll
dec
inc
jb
mov
inc
das
sti
lds
or
xchg
mov
addl
cmp
jne
je
xchg
loope
cld
xor
addl
shlb
insb
xor
std
cmp
mov
inc
add
adc
ja
or
and
pop
mov
and
es
mov
mov
adc
add
and
mov
andl
les
icebp
std
mov
mov
jne
cmp
std
cwtl
lcall
subb
push
ss
or
fstpt
fwait
sbb
insb
dec
sahf
push
cmpsl
sbb
jp
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
jnp
jmp
lcall
jle
sub
inc
pop
fwait
rcrb
mov
jnp
notb
mov
sbb
sub
push
lret
aaa
add
mov
or
dec
dec
aas
mov
lret
mov
lock
inc
lahf
lods
sub
xchg
mov
jno
aas
cmp
dec
dec
sub
adc
fstpt
sub
xchg
lods
mov
pop
cmpb
xor
out
dec
stos
add
and
cmp
test
ret
sub
scas
pop
xchg
insb
pop
xor
or
xchg
lods
shl
in
adc
ret
lods
iret
fdivrl
call
dec
or
das
mov
push
mov
sbb
loopne
pusha
xchg
int
call
in
sub
add
pop
insl
rcrl
pop
cli
int3
push
jmp
sbb
and
jg
or
es
in
and
sbb
dec
gs
lds
mov
gs
jo
test
pop
imul
jbe
mov
insw
mov
mov
cld
jl
aad
mov
loopne
mov
out
aad
pop
call
and
leave
add
xor
ret
loope
arpl
int
bound
lret
in
jae
int
into
adc
xchg
cmpsb
and
and
dec
aaa
icebp
cld
stc
aad
sub
ret
push
into
xchg
loope
pop
shrb
adc
adc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
xor
push
and
add
cli
jg
jle
mov
push
out
pop
aaa
movsb
call
mov
xchg
lahf
push
push
or
lods
popf
add
fs
rcrl
test
ds
xor
lret
inc
pop
jmp
les
xchg
push
sub
adc
in
stc
xchg
xchg
es
push
xchg
push
mov
xchg
adc
into
jmp
into
lods
lahf
lods
repz
sbb
enter
orb
pop
arpl
mov
jecxz
pop
fwait
add
pop
repz
sub
aas
test
insl
pop
push
je
mov
lods
cmpsl
jae
xchg
inc
call
dec
mov
movsb
jbe
dec
daa
lahf
call
xchg
rcl
xor
or
leave
cmp
sub
and
sti
fwait
or
hlt
and
scas
repz
xor
scas
sbb
int
outsl
lods
cmp
enter
mov
push
jg
jnp
pop
test
fcmovnu
mov
jne
cld
mov
pop
dec
test
dec
pop
aas
push
enter
jbe
sbb
icebp
pop
cmp
xchg
sbb
mov
pop
xor
dec
mov
ret
jge
scas
fistl
push
in
add
mov
sbb
add
cmp
test
cs
and
adc
sub
or
xchg
out
jmp
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
push
fptan
push
push
jle
cli
jg
jle
push
jb
call
mov
or
mov
xchg
jmp
repnz
lahf
fs
ljmp
pushf
ss
or
jge
idivl
pop
pop
pushf
jl
xor
shrb
push
or
daa
mov
push
and
lahf
pop
clc
stos
movsb
jb
rolb
inc
iret
repz
data16
mov
out
outsl
inc
rolb
inc
sub
adc
cli
jb
mov
jp
idivb
ds
ret
sub
es
out
mov
inc
push
mov
push
mov
xchg
xor
call
mov
cli
xchg
hlt
add
insl
les
or
in
shrb
xor
or
aam
les
rcll
fisttpl
add
mov
jmp
push
jmp
and
sub
add
fisttps
aas
es
jae
push
mov
mov
mov
pop
dec
xchg
data16
inc
clc
fnsave
cmpsl
test
pop
daa
jbe
mov
mov
and
sub
sar
push
adc
inc
rorl
xorl
in
push
into
lcall
cmp
test
shlb
adc
sub
push
rorb
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
add
or
cs
jle
jg
jle
adc
ja
add
add
adc
pop
sbb
push
pop
scas
add
push
mov
cmp
daa
sbb
sarl
sahf
in
nop
outsb
fdivp
dec
sbb
xor
aas
cltd
add
mov
addr16
jmp
mov
je
fadds
insb
pop
int
lahf
dec
sahf
mov
push
mov
test
lret
or
stos
in
sub
or
xchg
fidivrs
sbb
subl
loope
into
pop
xchg
inc
lds
jecxz
push
xchg
lcall
clc
stc
shll
sbb
sarl
sti
mov
jmp
mov
rorl
adc
add
xlat
popa
pop
popf
repz
jnp
push
jmp
mov
inc
pop
aam
fadd
insl
fwait
rolb
sbb
fs
idivl
xor
mov
inc
cli
stos
sbb
jecxz
fst
adc
mov
mov
sbb
sub
and
sbb
dec
sbb
adc
ret
inc
jnp
xchg
push
cmp
push
test
fstpl
pop
clc
sub
fldt
sub
outsl
fcomip
mov
add
into
sbb
sub
scas
out
cmpsl
in
int
sub
xor
push
mov
inc
mov
pop
jno
stos
fs
ret
test
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
mov
or
jle
and
mov
jb
jns
xchg
sti
je
negb
out
add
adc
xchg
and
cmp
shlb
jno
rcrl
movsl
dec
adc
add
adcb
fidivrs
clc
mov
or
jp
or
sub
clc
mov
movsb
iret
hlt
sub
dec
loop
jne
les
loope
fbld
fmuls
les
push
pop
int
test
outsl
cmp
pop
lock
jo
add
and
ljmp
sub
xchg
loopne
test
fs
xor
mov
lcall
add
ds
and
repz
test
or
cmpsl
stc
push
and
mov
call
test
jae
popa
pusha
xor
sub
test
xchg
or
pop
loopne
add
cmp
lock
mov
pusha
movsl
scas
loop
in
push
into
jl
xor
mov
in
je
and
mov
les
inc
scas
scas
mov
dec
clc
test
mov
jne
fs
or
or
fistpl
int
push
jcxz
xchg
jo
cmp
bound
je
add
bnd
pop
mov
aaa
xor
enter
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
nop
or
cli
jg
jle
lcall
mov
scas
lock
mov
xor
adcb
or
pop
std
mov
lock
xchg
push
popa
dec
sti
mov
cmp
pop
xor
xor
sahf
ds
cmc
and
shl
push
das
stos
addr16
jmp
fildl
push
adc
ficompl
xchg
push
int
sub
adc
or
ficomps
mov
shll
pushf
mov
fmul
hlt
incl
repnz
aam
mov
loop
mov
cld
mov
out
dec
stc
sbb
sbb
sub
push
xchg
push
inc
push
cmc
mov
lret
movsl
inc
scas
and
cmp
pop
inc
scas
js
les
sti
inc
xchg
xor
and
inc
cmp
xadd
fdivrs
aam
fwait
lcall
xchg
pop
xchg
mov
sub
cmc
inc
jbe
add
int3
mov
inc
xor
and
insb
outsl
xor
in
jbe
mov
jne
clc
mov
push
movsb
jns
dec
cmp
push
pop
clc
mov
mov
cld
mull
xor
out
xchg
xchg
int
negl
jl,pn
stc
inc
jle
aaa
pop
pop
jg
push
and
mov
mov
cli
xor
sti
add
test
pusha
ret
cmp
inc
mov
fistpl
mov
pop
out
mov
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
mov
cli
jg
jle
aaa
pop
lret
add
sbb
fdivl
and
sub
mov
mov
jo
xor
push
push
loop
pop
aaa
stos
mov
dec
mov
cwtl
push
inc
test
pushf
test
hlt
dec
adc
and
inc
je
sbb
mov
stos
aas
sarb
dec
subb
or
cmp
data16
mov
push
push
sbb
lahf
sbb
xchg
jne
cmpsb
rolb
icebp
das
inc
mov
popa
shll
ficoms
dec
mov
xor
and
lahf
scas
jmp
pushf
inc
es
shll
aas
fsubr
stos
getsec
add
pop
push
icebp
cmp
cmp
push
pushf
push
ljmp
in
xchg
inc
insl
ss
popa
mov
daa
loope
add
pusha
push
pop
or
mov
mov
push
loop
lock
xchg
jecxz
mov
cmp
rorl
sti
out
dec
lods
push
imul
push
inc
addr16
and
imul
mov
in
mov
fisubl
inc
notl
mov
ret
fucomip
lret
add
and
out
hlt
loope
mov
or
movsl
inc
mov
dec
pop
imul
test
mov
xchg
cmc
stos
in
mov
lret
and
jno
popf
packuswb
cli
push
ljmp
hlt
pop
fwait
sti
add
nop
es
inc
mov
pusha
ja
mov
in
repnz
or
or
inc
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
icebp
fnstcw
push
jle
cli
jg
jle
xchg
and
push
xor
mov
test
aam
mov
and
sbb
inc
je
test
daa
test
mov
ljmp
loope
jl
aam
dec
das
loopne
push
icebp
ds
push
fwait
pop
sub
xor
movsb
cli
fs
cmp
in
cmpsl
dec
addb
cli
cmp
call
or
mov
adc
out
mov
lods
outsl
insl
jle
divb
fstps
push
out
frstor
stc
pop
in
add
inc
fldcw
nop
xchg
jae
push
dec
jae
test
cmp
mov
sbb
xor
and
enter
inc
pop
popf
push
jmp
inc
aad
jns
aam
xchg
or
insl
sbb
pop
xor
sub
lock
or
mov
je
ja
or
rep
dec
in
jbe
ljmp
in
jae
pop
scas
pop
push
jge
cmpsl
fcomp
aas
in
jmp
dec
lcall
fistpll
outsb
mov
sub
xchg
sub
push
insl
lahf
movsl
inc
shrl
cs
leave
movsl
adc
sbb
add
push
aad
sti
mov
test
rolb
out
icebp
test
adc
andl
push
inc
das
ret
iret
frstor
sahf
out
cmp
sbbb
add
push
ror
push
inc
and
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
shll
lahf
mov
jg
jle
or
dec
loop
es
sub
lods
insb
roll
sti
fwait
xlat
pop
cltd
dec
mov
xchg
xlat
fbld
mov
hlt
mov
mov
cmc
add
jmp
cmpsb
xorb
mov
test
mov
out
pop
add
int3
mov
jmp
clc
ds
and
jo
je
inc
mov
dec
or
xor
outsl
stos
push
in
mov
aad
ret
cmpsb
or
in
push
sub
aaa
add
test
test
clc
pusha
dec
xor
data16
bound
repz
cmc
push
je
clc
and
mov
xchg
lock
xchg
popa
add
lods
pop
scas
jge
pand
and
cwtl
sahf
movsb
negl
sbb
inc
xor
lcall
repz
lret
jne
jnp
test
jmp
cmpsb
jo
cmp
mov
pop
imul
movsb
insl
into
fldenv
fnsave
repnz
adc
adc
jp
frstor
out
aad
push
insb
aaa
jmp
jo
aad
repz
cwtl
mov
dec
and
mov
sbb
cmp
cmp
push
jns
das
and
mov
xor
sbb
mov
inc
push
mov
outsb
icebp
lock
in
jg
loopne
aad
aam
fsubs
mov
test
shll
sbb
xchg
sbb
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
adc
adc
jle
inc
xacquire
push
rclb
sbb
out
loop
fdivrs
or
cltd
js
or
div
cmp
mov
test
scas
dec
dec
out
int3
stc
aas
adc
dec
es
cld
xor
les
stos
xchg
rclb
inc
add
in
cmp
jg
scas
pusha
adc
jge
lock
pop
shlb
push
out
dec
mov
jl
mov
out
lods
add
or
cmp
xchg
daa
sub
orb
xchg
mov
mov
cmpsl
sarb
sub
mov
mov
loop
push
cmp
xor
lods
push
in
jmp
roll
and
ret
xor
mov
lds
lock
in
outsb
mov
xchg
push
or
mov
sub
and
clc
arpl
leave
jns
cmc
mov
lods
arpl
push
pop
inc
out
jbe
scas
sub
aaa
pushf
rcll
and
sbb
data16
mov
cmc
or
add
xchg
mov
xor
in
aam
pusha
jno
inc
push
sub
ss
mov
loope
push
in
insl
int
dec
sub
js
arpl
ds
mov
jecxz
mov
lock
mov
cmp
outsb
mov
in
and
data16
mov
rcrb
jo
add
pop
int3
mov
andb
gs
and
pushf
sub
stos
test
in
xor
movsb
cld
test
jno
cmc
enter
gs
popf
xchg
push
je
inc
out
pushl
out
dec
xchg
mov
adc
pop
xor
ja
cltd
mov
in
clc
jb
fsts
xchg
ret
add
pop
in
out
inc
std
pop
aam
or
sahf
mov
hlt
mov
sub
mov
ftst
cmpsl
addr16
lahf
in
test
out
add
stos
icebp
sub
ja
push
into
pop
out
and
add
lock
cwtl
and
mov
and
mov
out
fcmove
shlb
popfw
dec
mov
iret
xor
insl
popf
sahf
sub
std
aas
jb
mov
out
jne
jb
pop
jge
inc
out
dec
add
stc
divb
mov
pop
jae
mov
insb
cmp
and
or
mov
pop
dec
imull
mov
dec
jno
jle
mov
cmp
cli
push
xor
lea
adcl
sbb
add
fiadds
cmp
or
outsb
dec
clc
mov
push
mov
and
mov
inc
les
test
inc
add
stos
ss
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
popf
inc
cmp
adc
pop
jl
jle
sub
xor
adc
fldcw
repz
inc
jnp
sbb
xchg
stos
ja
mov
or
lahf
xchg
mov
fs
mov
fldcw
test
mov
cmpsl
addr16
movsb
shlb
test
test
fs
stos
movb
push
adcl
mov
std
icebp
lret
push
adc
sub
mov
notl
idivb
mov
xor
adc
in
cmp
arpl
mov
push
adc
aam
sbb
nop
lock
mov
mov
xor
and
mov
pop
dec
add
push
and
push
ret
xorl
scas
jecxz
pop
cmp
pushf
ljmp
dec
icebp
add
mov
fiaddl
pop
push
push
xchg
mov
jb
loopne
add
dec
or
inc
jg
ja
push
shl
fld
shlb
leave
leave
nop
sbb
fwait
mov
rcr
dec
add
shl
sbb
pop
xor
pop
mov
fdiv
jo
and
xchg
push
ficoms
sbb
pop
mov
lcall
mov
je
inc
sbb
fdivl
scas
test
mov
push
into
push
in
pop
in
cltd
pop
popf
lods
pop
aad
mov
sbb
pop
push
nop
subl
xchg
add
push
dec
pop
mov
mov
in
pushf
fadds
sub
push
pop
lds
je
shl
inc
adc
sub
stc
inc
fsubp
inc
clc
or
sahf
jns
lcall
adcb
nop
iret
xchg
mov
movsl
jbe
sbb
movsl
mov
mov
inc
in
stos
dec
cmpsl
popf
cmp
sbbb
cs
pusha
xchg
jge
inc
fmull
sub
out
cmp
mov
pop
mov
cli
test
sti
push
cltd
cld
sbb
push
outsb
inc
add
orl
in
mov
dec
sub
fisubrl
dec
xchg
popf
cld
andb
pop
mov
push
aam
stos
pop
int
lret
rorb
or
inc
clc
cli
push
js
pop
adc
add
loop
jb
pop
je
fwait
hlt
rcrl
mov
mov
pop
loopne
out
je
fwait
push
inc
sbb
mov
scas
xchg
sub
xchg
dec
dec
loop
fwait
pop
pop
je
lds
xor
cmpsb
inc
push
sahf
and
push
jle
add
repz
mov
repz
js
push
cmpsl
pop
cld
stc
mov
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
mov
mov
pop
jl
jle
int3
xor
insb
nop
and
mov
inc
adc
repz
mov
jns
ds
xlat
stc
sub
and
cmpsb
filds
addr16
cwtl
popa
jnp
in
fcos
cwtl
fbstp
push
sahf
or
and
scas
fstpt
out
nop
mov
push
sti
xor
rcll
loope
inc
jo
pop
mov
out
xchg
popa
inc
ss
fsubs
dec
frstpm(287
cmc
pop
mov
insl
mov
mov
aaa
ret
loop
outsb
adc
pop
mov
inc
je
mov
xor
dec
lea
int3
lcall
or
sbb
in
sbb
pop
sarb
mov
dec
adc
movsb
xchg
lds
ja
or
repnz
test
gs
js
fcmovbe
imul
jns
sub
out
jle
leave
cmp
sbb
mov
lods
out
pop
cs
pop
dec
jne
leave
cmp
pusha
fcoms
dec
xor
push
pop
sbb
and
into
push
daa
lea
fldcw
jge
shrl
cltd
or
jmp
iret
sub
and
or
pop
xorl
std
pop
je
dec
sbb
pop
cmp
andl
ss
and
bound
int3
xchg
gs
sbb
or
aam
aas
addr16
daa
add
jae
push
cmp
push
fiaddl
dec
adc
out
pusha
mov
mov
imul
lods
pop
cmp
xor
dec
push
mov
pop
push
or
repz
xor
xchg
paddsb
fs
adc
cltd
mov
popa
xor
lret
sbb
inc
lods
adc
movsl
mov
sub
inc
mov
cmp
sahf
call
fmull
xchg
ror
popf
fs
inc
dec
in
roll
adc
imul
notb
sub
ds
adc
dec
mov
sub
cs
mov
rcrl
and
es
xchg
sub
js
push
fmulp
and
or
and
lock
push
jl
stos
add
jecxz
xor
pop
dec
dec
pop
shlb
push
std
sahf
push
lods
push
inc
mov
mov
xor
xchg
mov
xchg
xor
inc
das
hlt
lret
cltd
aam
jno
test
jmp
popa
iret
stos
repz
idivl
push
adc
pushf
movsl
shl
insb
leave
mov
mov
ficompl
cmc
adc
inc
aam
jnp
enter
ret
mov
test
dec
jl
movsl
add
lcall
cmp
mov
cli
adc
jp
sbb
popf
mov
and
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
mov
fwait
mov
arpl
dec
sbb
xchg
and
repz
adc
pop
sbb
sub
jecxz
outsl
xchg
or
int3
add
aas
imul
jae
dec
aad
test
call
xchg
cmp
add
pop
or
inc
cltd
mov
in
xchg
adc
add
in
test
pushf
movsl
outsb
movsb
incl
or
nop
jmp
ret
mov
mov
das
adc
jle
xchg
fistl
ds
cmp
sub
jbe
pushf
cbtw
js
test
jecxz
mov
mov
xlat
mov
test
xlat
push
enter
fsubr
ret
and
xor
loope
or
lock
test
fwait
or
fcoms
mov
pop
sbb
push
sbb
xchg
lret
mov
adc
popa
fbld
add
fdiv
xchg
xor
repnz
stos
push
mov
jmp
mov
fs
nop
or
lahf
arpl
push
lea
mov
push
jae
out
sub
and
movb
or
sub
add
dec
sbb
jp
jle
stos
mov
outsl
push
cli
add
jo
pusha
mov
add
mov
cmp
lds
fnstsw
shlb
sbb
ja
in
xor
lret
cltd
mov
in
fwait
icebp
mov
scas
test
hlt
aaa
push
lcall
or
inc
sbb
xchg
in
insl
mov
xor
xchg
stos
mov
and
dec
sub
inc
sbb
sbb
aas
push
jbe
lea
adc
sarl
xor
jnp
and
mov
clc
bound
sar
mov
aad
popa
movsb
xor
jl
call
push
imul
sti
clc
shl
jg
sub
or
sub
sub
pop
sub
xor
pop
jbe
mov
xor
popa
in
pop
jbe,pt
icebp
xchg
pop
out
xchg
add
push
mov
ds
fs
adc
icebp
dec
cmp
ds
stos
push
adc
ret
lea
cmpsb
repz
dec
mov
push
dec
fisttpl
roll
jmp
mov
rcll
xchg
sbb
jp
arpl
add
adc
out
fcmove
and
aas
call
xor
fisubs
in
leave
push
mov
lret
and
pop
sti
nop
hlt
jo
in
clc
jmp
add
dec
popa
jno
jne
xor
jle
xchg
jno
pop
sbb
pop
jl
jle
and
lahf
cld
out
dec
adc
jle
out
ja
push
and
fwait
out
cmp
dec
das
or
int
add
xor
mov
aad
js
fs
inc
inc
push
bound
call
fcompp
add
std
cmp
out
mov
test
push
dec
xchg
insl
arpl
mov
push
push
xchg
cs
fs
out
push
inc
lcall
dec
xchg
jne
ss
js
xchg
xchg
mov
mov
stos
arpl
mov
cltd
leave
jno
xacquire
mov
enter
rcrb
mov
jno
sub
inc
jmp
cld
pop
mov
cmp
ja
fisubrl
jne
cmpsb
push
cltd
sub
ljmp
outsb
and
loop
cmc
jle
sbb
xchg
cltd
add
in
mov
dec
mov
push
iret
iret
in
dec
jl
sub
popf
testl
and
arpl
ret
pushf
jb
aas
stos
movsb
jle
pop
popl
in
cltd
or
les
cltd
inc
hlt
subb
ret
test
repnz
fnsave
out
rorb
push
sub
popa
inc
daa
sbb
mov
fs
sub
add
mov
dec
or
clc
stos
sub
dec
cmp
ret
add
inc
inc
xor
pop
push
add
jnp
out
ja
scas
inc
cmc
inc
stc
pop
ret
xchg
loopne
push
mov
out
adc
clc
shrb
xor
inc
mov
mov
out
mov
sub
xor
aam
add
lds
sub
inc
fidivrs
dec
movsb
dec
leave
ficomps
add
cmp
jp
jp
pop
push
push
lret
dec
ljmp
xorb
daa
stos
xchg
pop
xchg
das
cmp
fistpl
ja
pop
add
xlat
stos
sub
clc
arpl
push
push
add
jle
iret
call
test
sti
pop
mov
in
loopne
push
inc
xchg
and
mov
mov
popa
adc
fadds
sbb
jmp
lret
sti
nop
rcrb
pop
xor
or
movsb
xchg
int
or
in
pop
mov
push
sbb
int3
insb
mov
pop
cmp
cltd
add
mov
roll
add
imul
lcall
and
mov
sub
adc
lock
flds
sub
dec
pop
or
push
out
cmp
jne
xor
sub
push
sbb
lods
adc
mov
hlt
nop
outsl
and
pop
pop
xchg
leave
clc
stc
cmpsb
jmp
mov
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
adcb
mov
jl
jle
movsl
cli
inc
fnsave
xlat
pop
scas
inc
stc
movsl
jno
fldenv
lret
ja
cwtl
mov
shlb
push
xchg
sbb
xchg
stos
lahf
pop
clc
mov
push
fimuls
outsl
mov
loopne
mov
push
js
xchg
xor
xor
shl
imulb
std
xor
mov
int
adcb
popf
or
or
sub
jecxz
mov
loope
enter
hlt
aad
ret
jl
inc
call
dec
aaa
or
mov
test
call
pop
inc
lret
loopne
in
imul
mov
fsubs
fsubs
rorb
popa
clc
push
add
xchg
mov
lcall
into
or
cmc
mov
sti
mov
push
or
xorb
lret
insb
mov
lods
jmp
mov
push
xchg
xor
mov
push
sbb
stos
xchg
ret
jp
push
xor
fdivp
jmp
rol
imul
call
out
fsubl
shlb
negb
insb
sbb
adc
lcall
ds
or
mov
adc
js
ds
fadd
mov
roll
dec
clc
xlat
test
cmp
adc
xchg
call
aaa
or
push
test
jo
xchg
dec
xchg
aad
dec
pop
in
add
mov
xor
jmp
movsl
loope
add
pop
cmp
jecxz
adc
add
xchg
loopne
fnsave
ja
mov
nop
push
movsb
movsb
mov
fs
call
mov
adcb
mov
movsb
arpl
enter
jns
xchg
inc
test
xor
data16
inc
out
cwtl
fisubrs
mov
fsubrs
aaa
mov
pop
stc
stos
pop
xchg
jecxz
inc
movsb
dec
mov
adc
lds
sti
dec
xor
icebp
arpl
cs
push
scas
add
pop
jno
mov
push
or
leave
das
jo
mov
cs
fisttpl
push
fidivs
sbb
test
sub
arpl
sbb
and
lea
mov
cmp
and
xacquire
dec
std
jno
xchg
xor
dec
shlb
mov
lret
push
insl
mov
mov
push
mov
and
adc
xchg
xchg
sub
mov
jo
mov
stc
pop
sti
popf
cmc
dec
cmp
popf
xor
iret
fwait
add
int
les
in
cmp
cmpsb
or
and
dec
cltd
mov
andb
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
lcall
pop
jl
jle
add
sarb
stos
orb
js
ds
addr16
and
test
in
or
fwait
insb
push
inc
push
sbb
std
push
test
mov
js
inc
inc
movsb
dec
push
adc
js
pop
ret
fwait
rcll
pop
dec
adc
bound
cmp
sbb
add
out
adc
dec
inc
push
and
ja
mov
cmc
in
aaa
je
xchg
test
push
sbb
xor
jle
adcb
sub
xchg
add
push
pop
pop
sbb
aas
fs
xlat
xchg
sysret
dec
mov
inc
mov
aas
pop
lret
or
inc
fisubl
xorl
add
les
dec
sti
les
adc
icebp
lock
pop
sbb
or
and
addb
cmp
adcl
mov
pop
test
enter
pop
mov
adc
lahf
stc
test
and
mov
adc
pusha
ljmp
xchg
ret
jg
stos
outsl
xor
jbe
inc
pop
sbb
push
adc
sti
sbb
fmul
push
mov
fbld
mov
repz
clc
xor
enter
xor
pop
icebp
ret
mov
xchg
fiaddl
loope
aas
add
into
outsb
sbb
and
daa
mov
pop
jb
aam
sub
mov
xor
push
mov
rcl
mov
aaa
sbb
xchg
push
dec
or
mov
push
mov
cmp
mov
pop
or
adc
and
inc
mov
xchg
outsl
dec
dec
sbb
xchg
jle
lea
mov
bound
inc
lret
lcall
or
scas
loopne
add
push
dec
jo
mov
jnp
leave
xchg
insb
incl
cltd
adc
xor
fimull
stos
out
inc
shrl
shl
aam
pop
sbb
inc
jge
or
fadds
sbb
mov
mov
add
pop
adc
add
ljmp
push
sbb
pop
loop
in
es
xor
sbb
scas
dec
mov
mov
mov
in
sub
cmp
addr16
cld
aaa
das
fs
dec
xchg
cs
pop
int3
sbb
icebp
add
mov
daa
dec
les
dec
jmp
std
xchg
aaa
aam
fstl
push
pop
xchg
pop
addr16
enter
or
rclb
pusha
out
xlat
nop
xchg
add
int
push
xor
mov
popf
xchg
push
push
or
rclb
pop
sub
cmp
or
push
mov
inc
jmp
jmp
mov
popa
shll
xchg
movsb
repz
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
inc
out
mov
jle
pop
jl
jle
jle
icebp
mov
jns
adc
mov
aaa
call
stos
sub
sti
lock
mov
fists
icebp
mov
dec
adc
ss
pusha
out
mov
addr16
js
pop
pop
stc
xchg
mov
mov
mov
test
mov
dec
fistps
insb
sbb
lock
out
dec
push
aaa
sahf
addl
add
mov
push
sbb
call
jge
add
lcall
inc
loope
aaa
add
and
pusha
push
ja
leave
cmp
mov
scas
sbb
stc
fimuls
movsl
lret
push
and
iret
clc
aam
xchg
sbb
xor
pop
insb
sub
idivb
push
cmpsl
cmp
aas
push
fcmovne
dec
cs
pop
dec
cmc
sub
mov
xchg
and
scas
fadd
sbb
adc
or
add
outsb
shufps
popa
cmp
mov
mov
adc
out
fidivrs
inc
cmp
out
push
inc
pop
cltd
push
xor
std
loopne
or
and
pop
and
mov
jge
scas
and
jl
xor
stos
mov
mov
adc
pop
mov
repnz
sti
push
jb
loope
sbbb
mov
xchg
std
pop
xlat
jge
pop
mov
pop
add
std
mov
inc
lcall
testb
pusha
pop
push
aam
lods
into
stc
push
push
subl
xchg
and
mov
inc
in
cmp
inc
mov
jle
xchg
test
mov
lods
add
mov
aaa
js
or
xor
lods
dec
lret
pop
mov
adc
jle
loopne
xchg
sub
adc
loop
ret
test
in
dec
loopne
lcall
inc
cmpsb
aaa
jmp
xor
push
sub
xor
int
test
repnz
loopne
inc
add
mov
mov
cmc
and
jge
and
push
in
out
and
mov
aaa
dec
outsb
sub
pop
out
pop
xor
push
pop
or
clc
std
outsb
ret
addl
aaa
ds
mov
loope
aaa
xor
loop
hlt
outsl
mov
stc
nop
cmp
or
imul
push
icebp
lods
out
pop
dec
ss
cmp
sub
insb
pop
adc
jl
mov
int3
sub
push
xor
cli
pop
cmpsl
insb
pop
xchg
flds
js
fldenv
mov
aam
jb
std
mov
das
fldlg2
scas
pushf
sub
jns
dec
je
push
js
add
cmp
ficoms
mov
sub
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
lret
loop
sub
jle
jl
jle
dec
insl
pop
cmp
jge
mov
sbb
dec
mov
gs
jbe,pt
sbb
dec
inc
mov
add
lea
repnz
out
ret
loopne
mov
rorb
add
adc
pop
lods
pop
outsb
mov
je
movsl
or
inc
xchg
shrl
xchg
out
jg
cmp
fbld
xchg
sub
and
insl
jg
hlt
push
rcl
mov
fwait
je
call
xchg
gs
fwait
loop
sahf
out
pop
lret
sub
lret
repnz
dec
in
shlb
ss
xor
cltd
or
fstpt
mov
scas
insb
jno
loopne
stos
jnp
mov
xorb
decb
daa
push
jnp
jno
inc
imul
jle
in
mov
push
shll
xor
mov
fsubr
push
pop
mov
cli
pop
ret
cs
fmul
or
adc
jp
mov
cmp
push
out
cmp
push
leave
pop
pop
and
lds
fsts
push
push
es
mov
jb
mov
pop
and
sar
mov
mov
sbb
fadd
mov
ja
or
dec
faddl
movl
loope
popa
adc
xor
mov
or
dec
arpl
gs
repnz
jl
inc
lret
adc
cmp
out
xor
or
loope
push
pop
arpl
frstor
stos
push
jnp
repz
iret
sub
data16
lahf
mov
pop
pop
out
ret
push
or
and
gs
push
pop
int
inc
pop
mov
push
mov
bound
lret
daa
data16
int
cmp
mov
add
adc
std
push
pop
out
movsb
or
mov
test
and
daa
shrb
pop
bound
xchg
mov
pop
push
xor
push
jns
adc
int3
jle
mov
add
jne
pop
jbe
ret
push
mov
shl
sbb
push
frstor
and
ret
dec
add
lds
pusha
adc
lds
cmp
jne
inc
sbb
imul
push
andb
or
dec
jle
push
mov
jns
and
sub
lods
cltd
adc
test
mov
push
mov
rolb
xor
jne
cli
dec
push
jne
pop
push
stos
cwtl
xchg
dec
popf
pop
push
lahf
xor
or
xor
mov
jle
mov
test
mov
push
xchg
sbb
cmpsb
jmp
or
push
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
sbb
jle
jl
jle
xchg
sub
jno
xchg
sub
jne
ret
ficompl
ja
dec
sub
jae
divb
cmp
xchg
jp
pushf
xor
mov
and
push
push
dec
inc
mov
mov
mov
add
sbb
jae,pn
int3
lea
adc
nop
addb
fwait
push
sbb
insl
loop
xor
mov
adc
insl
push
stc
jne
mov
or
dec
pop
or
fsubr
insl
insb
and
or
cld
in
mov
aaa
add
pop
mov
inc
inc
inc
push
cmp
or
inc
jge
dec
fcomi
and
in
jmp
dec
push
push
fwait
pushf
mov
das
mov
in
sbb
out
or
xlat
mov
push
xchg
adcl
adc
negl
and
sti
aad
mov
repnz
stc
jle
xchg
test
mov
mov
jbe
xlat
sub
or
sbb
fmull
inc
xchg
iret
jnp
popf
iret
loop
insb
js
xchg
add
js
pop
iret
cli
rclb
rcll
add
mov
rcr
inc
add
fldenv
into
xor
cmpsl
das
test
mov
jge
jbe
adc
dec
push
mov
test
out
push
data16
lea
add
pop
push
adc
jno
sub
dec
adc
jno
inc
add
push
pop
aaa
mov
dec
sbbl
cmp
in
pop
pop
fildl
cmp
or
xchg
mov
jp
push
mov
mov
adc
or
stos
xor
js
or
xchg
inc
mov
xor
pop
inc
imul
fsts
sub
sub
jecxz
cmpsl
mov
jg
xor
fsubrl
xchg
dec
mov
andl
push
stos
pop
mov
popf
xchg
sub
js
xor
stos
or
jne
loopne
in
fwait
mov
scas
shll
pop
popf
xor
xlat
mov
mov
mov
mov
push
and
mov
xor
ljmp
out
fidivrs
jb,pt
in
jno
ret
ss
pop
or
adcl
mov
push
test
dec
addl
out
aam
push
rcll
imul
test
and
mov
or
mov
adc
pop
add
xchg
sbb
inc
sbb
jmp
shrl
adc
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
sbb
jle
sub
jle
dec
testb
jg
loope
add
pop
push
push
push
sub
sub
inc
imul
pusha
ror
mov
test
inc
fisubs
in
mov
dec
cbtw
or
ret
pop
cmp
and
and
inc
ret
push
les
mov
mov
or
ja
aad
jns
pop
cmp
test
jle
ds
test
imul
lret
add
pop
push
ficompl
scas
pop
std
call
hlt
mov
out
mov
xchg
mov
test
xchg
subb
in
cmp
cli
pop
int3
push
not
push
pushf
jmp
add
mov
enter
in
js
cltd
mov
and
stos
or
fnstcw
test
inc
in
and
mov
into
mov
pop
xchg
adc
adc
xor
cwtl
jno
lods
orl
or
fidivrs
pop
mov
jb
xor
test
sub
dec
shlb
rcr
das
push
sub
lcall
cmp
fcomip
outsb
ss
ficomps
mov
xor
cmp
sub
int
movsl
fistps
push
dec
or
js
lods
mov
xor
popf
mov
push
mov
mov
jle
adc
push
loope
xchg
xorb
jbe
mov
dec
repnz
mov
in
aam
mov
sbb
adc
dec
or
xor
push
xor
mov
scas
nop
aam
jbe
outsl
movsb
jl
mov
psllw
adc
aas
gs
mov
ss
mov
pop
sahf
call
push
jle
sbb
movsb
push
pushf
aam
loope
out
add
inc
ret
js
ja
jbe
jmp
insb
loop
push
sub
add
xlat
jbe
pop
loope
pop
rcll
icebp
nop
js
gs
lods
push
je
cmp
sub
bound
mov
clc
cmc
ret
fbld
mov
pop
add
test
movsb
jb
cmp
push
cltd
imul
jno
cmp
jnp
cmp
mov
leave
pop
lock
fwait
popa
pop
test
xchg
xlat
pop
mov
leave
dec
add
bound
jnp
dec
nop
mov
xor
or
fcomps
ljmp
push
jno
pop
icebp
lahf
sbb
out
and
fildl
js
push
fidivrs
xor
pop
lods
inc
mov
scas
push
or
popf
dec
loopne
loope
insb
lea
mov
out
sub
cmp
adcb
icebp
adc
add
add
and
mov
fs
inc
sbb
addr16
loope
out
push
fwait
add
popf
xor
scas
xlat
jno
rep
mov
loope
pop
je
xchg
and
ds
jnp
jns
xchg
sbb
xchg
jnp
ss
icebp
cmp
xchg
push
jecxz
cld
insb
pop
js
cs
push
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
mov
popa
cmpsl
out
popf
push
lods
insb
add
std
add
sti
fstpt
xor
add
pushl
and
fstpl
push
rcrl
call
xor
cmp
jbe
mov
push
add
lret
xchg
les
mov
mov
dec
arpl
sar
add
rorl
aas
lahf
rorl
int
xor
xor
push
lea
xlat
jns
pop
into
cmp
jno
sub
sbb
data16
loop
test
and
xchg
add
mov
lret
mov
ficomps
mov
jp
dec
fldt
insl
mov
sub
out
jmp
mov
mov
mov
xor
mov
mov
add
lods
xor
xchg
mov
adc
pop
es
inc
stos
pop
in
inc
faddl
jmp
js
cmp
inc
or
cs
fs
jp
aaa
call
add
mov
outsl
sarb
and
iret
pop
xor
enter
stos
lea
das
inc
or
sub
add
jl
inc
add
jmp
jbe
jp
nop
mov
nop
in
jbe
call
lcall
xor
jg
rorl
repz
ds
xchg
dec
shll
mov
push
add
scas
int
xchg
xchg
cmpsl
jbe
cs
jo
inc
shll
insl
data16
push
jnp
push
xor
adc
fcomi
hlt
sub
cs
aaa
cmpsb
cmp
mov
xor
test
test
loopne
cmp
sbb
lret
mov
pop
sbb
jo
pop
test
push
mov
xor
in
test
dec
pushf
dec
sub
out
push
xchg
lahf
das
xorl
xchg
xchg
xlat
add
cmp
add
mov
jb
stos
jo
cmpb
push
jmp
test
jnp
int3
fldt
or
cmp
sbb
xor
mov
stos
sub
sbb
jb
pop
les
andb
pusha
mov
std
or
lods
jne
mov
jg
lret
jbe
es
pop
mov
je
xchg
jae
push
xchg
sahf
jo
cwtl
and
push
rcrb
jecxz
aas
xchg
repz
pushf
div
psubw
mov
inc
push
push
xor
mov
lods
fcmovne
popf
lds
rorl
pop
sbb
push
into
sar
pushf
movsl
fsubl
inc
loopne
mov
stos
and
icebp
cmpsb
push
int
push
ja
and
imul
dec
sbb
cmp
mov
ret
cmpsl
test
nop
cmp
aam
sub
inc
push
dec
adc
idivb
push
test
std
gs
neg
jmp
jne
sub
test
test
mov
lds
sub
jle
fwait
int
jecxz
imul
pop
scas
push
mov
mov
xchg
leave
pop
xor
pop
das
mov
test
lea
fsubrl
decl
dec
xor
sub
dec
pop
mov
or
inc
pushf
cli
int3
addr16
out
rclb
mov
mov
rorl
jge
test
and
add
jnp
popa
aas
sti
xchg
mov
fsub
mov
or
daa
ljmp
sub
push
pop
adc
clc
ljmp
in
rorb
inc
out
fwait
pop
rcr
xchg
repz
aas
out
repnz
mov
dec
pop
add
inc
mov
push
inc
hlt
dec
sbb
pop
cmpsb
add
adc
ds
sub
pop
inc
adc
mov
xchg
sub
movsl
mov
pop
into
adc
xlat
mov
imul
cs
sbb
mov
dec
sarb
pop
mov
enter
outsl
mov
fsts
sbb
mov
pop
push
repz
xor
negl
xor
repz
out
mov
mov
fwait
das
incl
mov
lds
cli
push
es
jae
adc
lods
movsb
pop
sti
je
push
sti
xor
mov
scas
xchg
cmpsl
in
jae
pop
sbb
mov
mov
xor
mov
xchg
or
lods
pop
pop
frstor
xorl
cli
and
sub
sbb
lock
ud0
xchg
test
sahf
xlat
in
fmuls
inc
test
ret
std
xchg
addr16
stc
repz
jecxz
xor
fstps
push
xchg
icebp
jecxz
mov
xor
rcl
je
pop
adc
nop
cmp
mov
cltd
rcr
pusha
lock
inc
popf
cmp
sbb
fs
inc
jg
pop
fs
stc
hlt
fyl2x
sub
xor
inc
xchg
in
pop
hlt
pop
add
ljmp
dec
add
jge
nop
outsb
cli
call
lea
mov
inc
lahf
pop
push
cmp
inc
les
into
sub
xorb
loopne
xchg
dec
mov
std
jle
mov
call
inc
sahf
add
cmpsl
jl
add
pop
sub
jle
js
cs
sub
push
jmp
hlt
cmp
xchg
push
mov
in
xor
xlat
ja
mov
xchg
inc
sbb
inc
and
call
test
es
notb
int3
jno
gs
xor
xor
pslld
push
stos
lods
dec
aaa
int3
sub
aad
faddp
lds
pop
mov
inc
pop
mov
add
xchg
or
insb
push
mov
cmp
push
mov
incl
mov
pop
mov
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
pop
es
push
aas
jle
sub
jle
pop
dec
lret
inc
data16
adc
sub
push
or
cmp
sub
add
adc
fnsave
outsl
add
lahf
jno
bound
jne
adc
subb
add
cmc
push
fbstp
rolb
fisubs
inc
or
pop
push
mov
xchg
data16
sbb
mov
ss
jge
xchg
addr16
push
jno
dec
jge
pop
mov
insb
or
add
pop
cmpsl
sahf
cmp
mov
lods
mov
shlb
cmpsl
gs
sbb
les
mov
leave
sbb
lds
loope
cld
aad
aad
cmp
adc
lea
lock
iret
mov
into
cmp
cmc
popa
dec
pop
in
hlt
cmc
fs
jge
pushf
dec
pushf
inc
scas
jns
lock
fcoms
lcall
adc
pop
dec
mov
out
sti
lret
aaa
mov
adc
frstor
jns
cs
push
sti
pop
stos
dec
cmpsl
adc
mov
pusha
xor
cmp
sub
pop
idivb
push
aas
pop
pop
push
cmp
jb
ljmp
je
test
cli
jno
and
jmp
hlt
dec
lea
mov
sub
xchg
push
popf
sahf
and
fwait
add
aad
inc
xor
cmp
fwait
push
lret
inc
jbe
imul
int3
jne
pop
and
test
dec
lods
xchg
cmpsb
testb
fwait
out
repnz
lret
jl
shr
orb
xor
pushf
shl
push
les
in
and
inc
dec
push
or
xchg
mov
and
jge
dec
pop
and
fsubr
or
mov
shlb
inc
cli
xchg
rol
sti
mov
aad
loope
out
rcrl
mov
lds
sub
mov
sbb
addr16
inc
out
sub
mov
ljmp
lahf
push
popa
cld
inc
sub
push
cld
dec
or
movsl
jmp
sbbb
adc
fbstp
xchg
int3
out
loope
sub
inc
testb
pop
fmuls
cmp
ficoml
fisubrl
mov
pusha
xor
dec
jg
and
mov
aad
mov
out
lret
loopne
mov
and
lret
cmp
jmp
cmpsb
mov
cmp
mov
mov
push
adc
movsl
dec
lea
js
adc
push
or
lret
les
jns
fst
jbe
push
fsubrs
in
and
sbb
push
sub
cmpsl
cli
cmp
jno
and
lock
mov
and
adc
jnp
push
in
jbe
sbb
fcmovbe
xchg
mov
sbb
dec
push
aam
xor
pop
bound
sti
fsubrs
cmp
add
loop
pop
jb
iret
jle
add
mov
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
data16
jle
mov
ret
stos
cmpsl
test
jno
xchg
je
imul
jno
test
in
mov
push
xlat
or
pop
adc
jl
stc
in
clc
movsb
jne
shlb
push
xchg
out
dec
adcl
aaa
mov
add
nop
xchg
and
pop
cmpsl
ljmp
std
lcall
movsl
rcrl
and
mov
pop
lds
cmc
cmc
test
faddp
adc
jl
lahf
add
push
jne
jp
or
int
loop
mov
je
mov
xchg
std
call
push
sarl
js
inc
notl
fldcw
lods
inc
mov
arpl
je
sub
lock
jecxz
push
jne
das
repz
jo
inc
outsb
pop
ja
clc
addl
adc
mov
mov
bound
fstl
adc
icebp
cmc
mov
popf
or
push
js
lcall
push
and
jecxz,pn
jno
fisubs
enter
xchg
sub
or
repz
repz
les
std
pop
inc
in
shll
pop
mov
movsl
aad
mov
sub
cmp
push
inc
ficoms
les
sbbl
jmp
pop
cmp
and
mov
gs
ss
sub
sub
lahf
in
test
daa
or
aad
add
orl
adc
adc
mov
insb
xor
pop
xchg
dec
sbb
js
out
push
idiv
loop
icebp
cwtl
push
xchg
jmp
scas
cmp
sti
fsts
test
sbb
lahf
test
pushf
inc
pop
mov
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
cmpsl
test
jle
jg
jle
outsl
and
push
loope
push
pop
dec
enter
sti
xchg
daa
pop
jns
inc
sar
call
dec
repz
push
lahf
fxch
call
std
jle
pop
adc
sub
nop
inc
mov
push
cmp
cmp
inc
hlt
in
dec
mov
out
mov
pop
int3
mov
dec
mov
pop
mov
aas
lret
or
mov
sbb
into
xor
insb
mov
dec
pop
rorb
cmpsl
clc
outsl
sarb
inc
cmp
orl
lahf
mov
sub
xchg
inc
outsl
or
imul
test
int3
and
orl
data16
jecxz
fidivrl
arpl
sbb
push
dec
aam
jae
popf
push
shrb
insb
loopne
cltd
xorl
sub
aam
aad
cmp
mov
loopne
out
mov
or
sub
cmpsl
aam
pusha
out
daa
inc
sbb
leave
push
jge
xchg
jno
std
lods
jae
js
scas
mov
pop
push
sbb
xchg
int
inc
mulb
jge
test
push
outsb
inc
mov
notl
inc
pop
lods
out
push
inc
lock
pop
repz
push
mov
enter
ja
lods
sarl
out
mov
imul
les
fs
mov
ret
movsl
mov
pushf
in
out
lcall
popa
dec
popa
mov
cmp
cmp
sbb
in
inc
dec
inc
pop
sub
xchg
pushl
mov
fxch
in
cltd
bound
xchg
cmp
push
shrl
dec
pop
les
push
insl
je
mov
in
adc
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
mov
push
xchg
cmc
fs
bound
push
das
push
sbb
adc
sbb
add
stc
mov
fwait
or
pusha
and
pop
in
stc
movsb
push
out
subb
notl
test
cld
repnz
dec
lock
stos
inc
push
inc
enter
and
inc
dec
mov
push
mov
xchg
lods
jae
lret
or
mov
pop
pop
dec
pusha
mov
sti
iret
push
add
push
or
sbb
pop
jp
aaa
ret
sub
mov
xchg
cmpsb
pop
imul
pop
insb
shl
or
imul
mov
xchg
jle
pop
push
push
xor
push
pusha
fsubp
or
cmp
push
xchg
mov
sbb
popa
loop
cmc
pop
nop
imul
sahf
and
inc
add
ficoms
sub
adc
in
fwait
jle
nop
adc
pop
and
fbld
sar
inc
fistps
add
ds
cmp
cmp
scas
scas
push
and
stos
in
adc
les
adcl
imul
pushf
cli
pushf
cwtl
loope
pop
pop
lret
push
and
ja
loope
inc
cmp
ja
lock
cmpb
cmc
std
or
add
mov
loope
movsl
inc
test
dec
sub
fidivrs
mov
fimull
xlat
mov
pop
fisttpl
into
push
call
sbb
movsb
xor
inc
mov
pop
cmp
dec
movsb
dec
les
cmpsl
jb
mov
lea
xchg
sar
or
jmp
add
test
jmp
and
in
popa
push
lret
xchg
test
push
cmpsl
int3
les
mov
cmp
mov
dec
adc
aam
int
arpl
xlat
and
test
movsb
shrl
repz
xchg
sbb
mov
loopne
cmp
sti
sbb
outsb
loope
sbb
xor
cmp
iret
inc
mov
cmc
call
and
pop
xor
pop
xlat
adc
inc
pop
pop
jmp
push
sbb
inc
dec
pop
mov
sub
cmp
fildl
test
aas
fisubrs
inc
std
pushl
xor
in
sub
cmc
pop
jmp
aas
jmp
xchg
jo
ja
popa
push
push
stc
imul
adc
mov
or
dec
popa
es
and
jae
push
sbb
sbb
or
dec
or
mov
test
aam
fistpll
std
in
push
in
mov
aam
lret
pusha
lock
loop
jne
or
js
int
rcl
sub
je
xchg
dec
cltd
loopne
outsl
and
mov
and
pop
add
mov
mov
mov
mov
sbb
aas
fstl
mov
sbb
in
mov
loope
jnp
inc
jg
jbe
xchg
jb
leave
inc
cmp
sbb
aam
adc
mov
test
add
imul
mov
ss
popf
mov
hlt
dec
xor
repnz
jo
cmp
push
jb
outsl
ss
aad
xor
stos
or
subl
bound
mov
sub
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
inc
leave
insb
or
jle
add
dec
scas
adc
mov
pop
test
push
dec
pop
jge
jecxz
rcrb
leave
stos
pop
sub
std
pop
or
hlt
cld
pop
cmp
jmp
jns
push
scas
cmp
mov
scas
fnstcw
dec
fwait
daa
std
inc
add
cmp
jg
adc
addr16
imul
dec
mov
test
xor
or
adc
pop
cmp
sbbb
mov
sbb
cli
xchg
mov
sub
xlat
cmp
mov
fs
fbld
aaa
pop
lcall
and
mov
enter
outsb
mov
insb
jl
pushf
and
into
int
jge
mov
mov
dec
scas
lods
jae
sti
sub
movsb
push
xorl
pop
in
aas
cli
sbb
inc
jge
outsb
xor
adc
inc
loope
mov
xchg
es
lds
mov
sbb
addl
dec
repz
out
out
jp
fidivrl
mov
mov
push
lahf
mov
out
xlat
hlt
jne
adcb
std
in
and
mov
pop
js
jnp
gs
inc
mov
xchg
xor
and
pop
addr16
xchg
inc
lret
mov
dec
adc
fstpl
loop
fdivr
adc
mov
push
movsl
xchg
sbb
dec
shll
cmp
cmc
adc
and
daa
movsb
lods
rclb
push
aas
outsl
xchg
mov
ja
cs
into
cmp
add
inc
cmc
push
outsb
cwtl
clc
add
pusha
lret
cmp
scas
outsb
sub
adc
lahf
inc
add
add
fcompl
mov
mov
cltd
int
mov
fs
cmp
push
pop
or
and
inc
add
sbb
pusha
inc
mov
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
int
sar
sarb
jl
jle
stos
push
push
outsb
sbb
movsb
push
mov
jg
push
out
dec
jge
lret
xchg
out
jnp
xchg
xor
pop
pusha
fidivrs
out
daa
jle
adcb
pop
pusha
jns
std
adc
mov
mov
mov
pop
aam
imul
ss
mov
icebp
arpl
mov
stos
adc
sub
pop
pop
cmpsl
cli
cld
xor
xor
push
pop
test
cmp
idivl
out
outsb
les
mov
pop
mov
fstpt
movsl
push
mov
cmpsl
int3
pushf
addr16
pop
loop
sub
jae
jmp
outsb
dec
aad
xchg
jmp
int3
lods
pop
hlt
sub
jmp
mov
fcompl
cmpsl
and
enter
sbb
imul
mov
jg
dec
ja
fstps
pop
fistpl
adc
aaa
jae
movsl
push
addr16
fisubrl
push
loop
out
mov
mov
add
cmp
add
adc
push
add
xor
mov
adc
mov
jecxz
mov
sbb
add
paddw
les
xor
fmulp
lret
mov
shlb
mov
in
push
jns
sbb
orb
xor
or
and
clc
pop
cmp
fmulp
testl
mov
lahf
push
std
das
outsb
outsb
jbe
dec
aad
icebp
and
mov
mov
jl
xchg
add
pop
or
xchg
fwait
add
sarl
inc
outsl
fcoms
aam
push
es
sub
mov
inc
xor
push
xor
mov
ss
xchg
add
and
nop
aam
pusha
dec
stos
pop
lds
aas
jge
aas
jg
add
jle
repnz
push
push
inc
mov
push
inc
mov
in
ss
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
cmpsb
adc
and
jle
add
rclb
test
imul
mov
mov
movsl
push
xor
std
into
sub
inc
pop
mov
in
je
cmp
arpl
mov
rcr
popa
adc
loope
jo
aas
mov
aam
icebp
outsb
mov
add
push
fucomip
jg
fs
leave
push
dec
push
addb
jns
sbb
movsb
xlat
fcomp
push
addl
push
sbb
pushf
cmp
ds
cli
movsl
inc
and
push
je
ljmp
mov
imul
mov
mov
sbbl
aaa
cmp
or
mov
adc
js
iret
icebp
dec
es
xchg
psubb
insl
xor
mov
ss
cmc
loop
adc
mov
adc
cmpl
xchg
ljmp
sbb
inc
cld
aam
dec
rcll
add
data16
inc
push
in
fstpt
or
mov
xor
dec
stos
jae
test
loop
mov
clc
xchg
movsb
call
inc
inc
jg
xchg
dec
adc
aam
inc
push
add
jno
sbb
imul
inc
pop
xchg
jo
push
add
mov
adc
xchg
mov
cmp
scas
insl
push
in
jecxz
data16
sub
ret
and
adc
sahf
rcl
xlat
enter
or
lds
pop
mov
aaa
rcr
xchg
inc
cmp
popa
fdivs
shrl
xchg
mov
ljmp
ficoml
add
mov
and
ret
loope
or
call
ror
mov
rcrl
sbb
or
iret
je
or
sar
cmp
int
dec
lahf
movl
adc
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
loop
aas
lcall
jle
int3
lods
je
inc
pop
shrl
in
and
cltd
push
mov
sahf
test
push
xchg
or
and
movsb
test
mov
outsb
imul
mov
xchg
mov
mov
xchg
sub
fildll
sti
sbb
in
xor
das
sub
fsubs
stos
outsl
sub
out
adc
push
or
xor
pop
orb
lock
and
fstl
and
lock
ljmp
adc
jae
mov
cmpsb
xor
add
or
dec
je
jle
bound
push
adc
adc
mov
pop
xchg
in
sub
cmpsb
push
push
dec
test
sbb
sbb
lahf
in
xor
push
addb
in
popf
mov
fstps
mov
pop
cwtl
int
or
jnp
inc
or
data16
fs
pop
movsb
aaa
mov
or
push
xor
movsb
daa
and
sub
aam
dec
adc
fisubrl
inc
xlat
test
jno
push
aam
cmp
clc
xor
jo
and
cwtl
sub
or
xchg
and
adc
insb
testb
mov
scas
mov
dec
test
mov
scas
arpl
arpl
sub
xor
fisubl
adcl
mov
xor
sub
fwait
push
xchg
mov
mov
stos
xor
mov
push
lcall
out
movsl
inc
ret
scas
push
and
push
test
adc
out
fists
mov
mov
out
push
mov
xchg
sarb
mov
mov
out
cmp
inc
leave
mov
inc
jmp
pusha
mov
negl
inc
sbb
mov
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
inc
ds
and
jle
cmp
or
add
jg
cwtl
mov
mov
push
fisubl
fistl
cmp
cmpsb
gs
fdivs
inc
mov
sarl
cmpsb
mov
mov
pop
cmpb
sbb
and
dec
std
mov
ss
ret
repnz
icebp
lods
imul
sub
les
mov
test
jns
in
ljmp
fimull
mov
aas
xor
repz
mov
mov
add
scas
xchg
pop
xor
sahf
cmp
fidivrl
int
inc
jl
js
xchg
lock
cwtl
xchg
lcall
das
enter
xchg
inc
add
dec
push
push
and
mov
in
lcall
xchg
rcrb
xor
inc
leave
loope
sub
test
add
fiadds
out
dec
ss
mov
cs
aam
mov
xchg
push
aas
mov
cmp
fstsw
cltd
sbb
lcall
iret
popf
mov
add
iret
aam
imul
jge
loope
test
ret
mov
sbb
push
js
outsb
push
mov
xor
add
sbbl
jnp
add
inc
in
jnp
mov
inc
lods
js
inc
mov
fisubs
mov
scas
bound
rcl
jp
mov
adc
insb
jg
or
pop
jns
add
mov
xor
cli
popf
xor
ljmp
mov
in
inc
scas
push
movsb
mov
cmc
das
imul
lret
inc
pop
mov
mov
cmc
aad
mov
cltd
push
daa
mov
lea
adc
mov
out
adc
movsb
jp
xchg
cmp
lock
imul
cmp
test
inc
push
sub
xor
fcmovb
loop
push
inc
pop
push
adc
mov
mov
cmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
mov
enter
jl
jle
mov
jns
scas
inc
loop
fldcw
mov
test
pushf
icebp
cmp
xchg
call
or
xchg
and
cmpsl
in
pop
in
ror
cltd
scas
inc
andl
sub
pop
ret
xor
jb
mov
clc
push
mov
sbb
popa
aaa
jecxz
pop
cmp
xchg
and
ljmp
js
pop
push
cs
pop
pop
int3
andl
imul
dec
xchg
and
fcomi
inc
xchg
loop
push
inc
rcrb
inc
dec
push
inc
mov
pop
mov
pop
adc
cmpsb
sbb
and
cmp
je
mov
out
mov
pop
push
dec
xchg
in
add
sahf
mov
and
movsl
inc
add
dec
fs
loopne
add
sbb
inc
cs
loopne
fidivl
mov
pop
push
dec
mov
xchg
push
outsl
mov
lods
pop
mov
rcl
inc
jge
pop
adc
mov
testl
stos
idivl
das
out
mov
cmp
fs
xchg
mov
or
mov
ja
push
adc
iret
xor
lods
inc
pop
and
adc
sbb
jmp
pop
pop
adc
or
mulb
jns
lds
frstpm(287
stos
cld
call
out
js
add
fstp
imul
out
pop
adc
outsl
inc
inc
icebp
pop
rcrb
add
lcall
push
jns
or
push
int3
cmp
sti
out
mov
and
cmpl
mov
mov
test
push
push
push
add
cmc
cwtl
push
icebp
cmp
shlb
lods
popa
mov
movsb
aas
btsl
jbe
out
jle
add
push
push
xchg
iret
insb
inc
fldcw
lcall
mov
add
xor
hlt
sbbl
jmp
pop
push
jg
xor
add
mov
and
jle
fnsave
inc
mov
push
lods
call
insb
xor
negl
xchg
inc
inc
fwait
add
ja
pop
add
lock
dec
stos
out
inc
cltd
rcll
pop
inc
jmp
out
std
negl
sbb
cltd
add
into
sbb
loop
add
inc
xor
sub
pop
push
sbb
inc
mov
pop
mov
mov
push
lds
mov
cltd
jne
push
mov
push
and
fsub
cltd
pop
push
pop
int
inc
leave
push
add
cltd
test
jnp
int
mov
inc
aas
jo
mov
mov
jbe
out
hlt
out
popa
movsb
add
cmpb
stos
aam
mov
dec
decl
mov
insb
mov
adc
sub
sar
shr
inc
mov
cmp
dec
fcom
push
xchg
repnz
testl
mov
push
push
aaa
lahf
pop
push
xor
xchg
mov
daa
ret
push
movsb
jge
aam
jle
inc
aad
mov
cmp
pop
add
les
int3
push
lcall
addr16
and
jae
sub
cmp
and
mov
inc
xlat
mov
or
pop
jb
popf
jne
mov
mov
bound
fadd
add
add
cmp
cmp
dec
and
sub
int
mov
mov
popf
jne
stos
pop
mov
lods
lret
repz
jle
lret
popf
pop
jbe
fimull
testb
mov
add
ret
movlps
fsubs
dec
sbb
inc
shrl
clc
xchg
inc
ret
jnp
jns
mov
mov
inc
mov
sbb
jae
mull
mov
pop
pop
ret
daa
xchg
push
cmp
sub
daa
icebp
scas
sub
test
das
out
lods
lock
dec
and
pusha
push
push
mov
dec
mov
cs
imul
and
add
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
cmpsl
mov
jle
and
jle
jmp
out
lods
rclb
fwait
xor
mov
sub
data16
aad
mov
imul
mov
repz
mov
loope
loop
mov
mov
test
xchg
shll
jecxz
fsubrl
popf
mov
pop
dec
sbb
xor
rorb
pop
jae
fwait
stos
pop
sahf
mov
or
std
cmc
inc
aam
sub
addb
pop
cltd
or
jmp
mov
test
enter
daa
or
jp
adc
in
adc
in
or
push
xor
dec
dec
push
fwait
cmp
pop
dec
jbe
pop
dec
sbbb
mov
add
jmp
push
push
fdivrs
out
sub
divl
mov
pusha
pop
js
inc
pusha
ss
mov
jnp
add
and
mov
test
outsb
mov
dec
xchg
and
xchg
add
iret
and
stc
xor
nop
pop
test
ljmp
adc
inc
iret
sti
movsl
mov
jae
hlt
in
dec
add
push
xchg
or
hlt
fidivs
pop
xchg
cmc
enter
xor
js
loope
mov
in
adc
insl
scas
insb
jp
jecxz
repz
call
fpatan
scas
jne
test
mov
dec
push
jo
cmp
cmp
jecxz
arpl
or
jns
push
icebp
add
or
xor
add
mov
clc
jmp
inc
pop
in
mov
adcl
subps
inc
je
or
pop
cli
mov
adc
popa
jl
pop
cld
dec
jg
jmp
jb
pop
mov
cltd
punpckhbw
pop
sub
sub
cmp
andl
stos
mov
rorl
cmp
in
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
rcll
data16
and
jle
cmp
push
xorb
inc
sbb
cmp
push
jns
jmp
cmp
enter
or
enter
pop
jae
add
jno
mov
lret
mov
in
repnz
js
cltd
pop
mov
push
add
lea
out
addr16
sahf
and
stos
lods
pop
push
jne
xor
jae
pop
push
pop
or
cmc
out
stos
fistps
push
loopne
jg
add
enter
les
dec
adc
pusha
aaa
pop
fdivrp
or
sub
xchg
mov
sub
mov
loope
dec
stos
jl
mov
push
or
bound
je
xchg
pop
adc
sub
cli
sti
mov
sbb
jecxz
push
inc
xor
mov
out
lods
nop
rorb
in
call
testb
pushf
mov
add
enter
lret
pusha
outsb
loopne
fists
sub
mov
and
mov
push
xchg
xchg
imul
outsb
or
pop
in
sbb
outsl
sbb
xor
mov
out
fnstcw
mov
xor
sub
xchg
std
xor
mov
not
test
imulb
imul
cmp
add
movsl
notb
imul
mov
mov
pop
cs
fldl
lods
shlb
mov
test
mov
sbb
or
cmp
outsb
stos
mov
mov
push
mov
dec
cmc
add
fsubs
cltd
push
push
int3
push
mov
adc
fbstp
pop
fwait
insb
stos
xor
mov
xchg
xlat
dec
cmp
loop
mov
lea
dec
mov
imul
jge
or
xor
dec
fdivrl
ret
ret
inc
sub
pop
jne
xchg
lret
and
mov
jp
outsb
pusha
sub
xor
andl
in
aad
aad
inc
push
mov
sub
ret
push
leave
cmp
loopne
mov
insb
xor
and
add
push
xlat
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
test
mov
dec
sahf
xchg
sbb
push
movsl
flds
dec
or
sub
mov
jle
mov
loope
imul
ret
push
es
jp
inc
jmp
out
stc
cmc
push
mov
fsts
movsb
cmpsb
pop
test
inc
adc
xchg
cmp
pop
fmulp
movsl
imul
xor
add
repz
cli
or
push
addr16
ss
adcl
fs
nop
ret
or
mov
movsb
addl
js
addb
sub
pop
mov
push
fistpll
loope
inc
pop
pushf
pop
fsubrl
mov
in
je
je
jo
jb
mov
sub
lcall
xchg
jbe
out
add
lret
fldt
decl
gs
xor
or
test
dec
mov
in
jmp
sbb
lds
or
daa
push
adc
sti
enter
das
fstl
int3
loopne
push
int
arpl
push
xchg
repnz
dec
jnp
les
notb
mov
out
out
les
pop
add
test
and
test
je
sub
aam
xchg
adc
xor
mov
aad
mov
add
mov
sbb
out
xchg
mov
popa
les
inc
pop
aam
or
xlat
mov
icebp
sbb
xorl
cli
sub
test
pop
in
loopne
adc
outsl
adc
pop
jns
icebp
pop
and
xchg
lret
in
jl
enter
mov
sbb
gs
adc
jae
lret
fstpl
das
inc
stos
xchg
jae
test
and
mov
add
mov
xchg
cmc
cmp
aas
imul
fisubs
call
sbb
dec
mov
or
incb
xor
add
xor
outsb
mov
pop
or
pop
repz
jo
and
dec
sub
add
out
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
jnp
mov
and
jle
pop
xchg
and
push
cmp
or
inc
movsl
cmp
sbb
mov
int
dec
cmpsb
lahf
push
xor
fistpll
xor
rcrb
jecxz
ret
mov
xor
and
ret
enter
mov
inc
pop
ljmp
mov
mov
lds
adc
mov
xor
sub
cmpsl
adc
jnp
sub
or
pcmpeqb
jg
data16
push
out
fildl
and
dec
jnp
jle
aad
lcall
lret
sub
hlt
andb
dec
or
stos
dec
movsb
adc
cwtl
xlat
mov
jb
int
push
lret
fwait
mov
imul
or
push
xchg
fisttps
push
adc
adc
cmp
lods
test
lret
mov
negb
mov
stc
and
dec
fdivrl
pop
jmp
movsb
jnp
loopne
add
sbb
ret
jne
mov
fdivr
inc
cmp
fdivp
into
xchg
adc
sub
sahf
xchg
mov
test
sti
int
xchg
and
add
ds
sub
outsl
pop
hlt
ss
outsl
push
cmpsb
push
call
lods
cmp
test
cmp
pop
outsb
divl
mov
pop
mov
inc
push
sub
jne
sbb
add
dec
repnz
popa
push
sbbb
sub
dec
mov
xor
popf
push
fmul
jbe,pn
or
cld
outsb
rorb
push
inc
lret
push
pop
sub
cld
pop
and
or
jns
jae
cmp
mov
repnz
loope
cmp
push
movsl
lock
iret
dec
jp
add
ljmp
test
in
mov
pop
add
fldt
xor
outsl
insb
outsb
or
mov
into
mov
jb
mov
rcl
dec
cmp
push
out
sub
mov
mov
or
or
jne
jmp
lods
mov
outsb
xorl
pop
lods
sub
jle
and
jle
mov
jle
ljmp
mov
loope
loopne
mov
jb
data16
jle
outsl
jns
dec
mov
aaa
ret
movsl
sbb
out
out
rcrl
sub
stos
pop
xsha1
cmpsb
mov
xlat
sbb
jns
out
jecxz
or
mov
xchg
imul
or
adc
icebp
pop
jmp
xor
pop
and
test
cli
or
sbb
xor
dec
push
lods
addl
pop
cs
mov
and
pop
rcl
mov
mov
shrb
fwait
mov
and
out
loop
adcb
mov
call
sbb
call
xor
mov
mov
add
fdivrs
pop
xorb
xlat
xchg
sbb
push
out
mov
mov
inc
sbb
or
jne
cwtl
sub
mov
aaa
pop
jp
pop
leave
adc
jl
lret
out
into
cmc
add
mov
movsb
jmp
fiaddl
push
ret
sub
fs
mov
push
movsb
pop
pop
jne
dec
cmp
jns
adc
xchg
dec
mov
push
loope
pop
ds
add
sbb
push
mov
sub
popa
outsb
pop
mov
push
push
mov
push
mov
or
mov
mov
cmp
int
fucompp
out
cmp
lret
stos
xlat
push
or
lea
inc
cs
lahf
mov
push
xchg
cltd
add
mov
mov
or
pop
pop
inc
xor
cld
add
cmp
cmp
sar
cltd
aad
add
mov
sbb
xor
jne
pop
and
pusha
lds
sub
cld
and
lds
dec
or
and
ljmp
nop
orb
mov
mov
cmp
scas
sti
sub
sti
jmp
arpl
or
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
cmp
cmpb
notl
inc
jns
repnz
out
and
pop
iret
jo
cmp
mov
push
sbb
xor
sbb
and
pop
push
inc
fiaddl
daa
xchg
and
pop
out
push
and
inc
jmp
jne
pushf
sub
xchg
push
pusha
dec
sub
int
mov
inc
inc
popa
sbb
dec
stc
pop
fldt
fwait
cmp
in
pusha
sbb
call
es
sbb
in
add
jecxz
imul
insb
xor
xchg
sti
testb
notl
mov
movsb
pop
cmp
fnstcw
xchg
out
pop
xchg
mov
adcb
lea
jp
leave
daa
out
push
jle
jo
sub
cmp
scas
mov
inc
add
test
in
jbe
notl
jnp
pop
je
pop
es
ror
rcr
sub
test
pop
data16
loop
xchg
arpl
push
push
sub
test
imulb
sbb
sbb
or
push
mov
aas
xchg
or
stos
lods
mov
sbbl
cli
jno
mov
and
add
sub
mov
jecxz
xchg
dec
sbb
ficoms
push
cmp
sbb
pop
pop
jnp
and
out
jmp
or
ret
stos
mov
add
cltd
out
xchg
rol
fbld
adc
mov
mov
push
dec
cmpsb
stos
sbb
es
js
pop
jg
loope
mov
divl
das
mov
mov
iret
std
ja
sti
adc
pop
shll
pop
rcll
std
pop
mov
jae
pop
inc
mov
jecxz
fstpt
nop
and
sbb
adc
sar
mov
stc
repz
mov
jo
ja
inc
imul
lahf
cld
bound
or
xor
pop
mov
sbb
shlb
das
ret
xchg
dec
sbb
popa
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
lret
or
jle
adc
xchg
xchg
in
xlat
into
out
jmp
stc
popf
cmp
mov
xor
inc
lock
ljmp
orl
jge
repnz
mov
fisubs
push
es
ret
mov
std
add
pop
or
mov
sarl
lcall
testb
ds
daa
hlt
xchg
push
sub
jmp
enter
jp
loopne
leave
xor
xor
jle
ds
or
xchg
inc
mov
xchg
pop
xchg
sub
push
loope
sti
out
xchg
mov
xchg
outsl
std
or
pop
and
jnp,pn
lea
aaa
outsb
add
xchg
sbb
jb
jge
cld
pop
aaa
lret
sub
or
adc
data16
test
xchg
lds
enter
jecxz
push
dec
or
mov
jns
mov
or
pop
adc
dec
and
subb
shlb
in
sub
inc
lcall
cmp
pop
mov
stos
hlt
add
cmpl
ret
cvtps2pi
les
dec
mov
xchg
imulb
shll
mov
push
icebp
sbb
adc
push
outsb
cmp
adc
iret
fnstsw
mov
sbb
shrb
push
mov
lcall
je
in
arpl
sub
push
dec
imul
lret
cmc
push
push
pop
mov
lods
stos
xor
cmc
movsb
adc
mov
jle
add
jns
jb
push
cmpsl
sub
pop
pushf
jnp
test
stos
cmp
xchg
pop
or
cmpsl
out
movsl
xor
iret
mov
movsb
cmp
shlb
dec
or
sub
pop
xchg
repz
insb
int
adc
dec
fwait
pop
push
pop
pop
push
ret
fwait
shll
fnstcw
jle
xchg
sbb
cmp
mov
and
cmp
mov
jg
and
lret
popf
cmpsb
xor
xor
addr16
outsl
nop
push
mov
mov
movsb
adc
sbbl
jmp
lds
popa
mov
fisttpll
jge
in
jle
jl
jle
hlt
repz
add
jae
adc
ja
mov
xor
nop
bound
out
icebp
bound
or
call
outsb
fnstsw
jge
inc
cmp
lret
cmp
sarb
adc
jmp
pop
out
hlt
xchg
sbb
pop
test
stos
ret
popa
mov
dec
movsl
pop
test
cld
sub
jns
movsl
aad
sti
add
lock
fsubrl
sbb
out
mov
test
nop
push
outsl
cmpl
jne
dec
jle
pop
fcomps
mov
push
jb
call
push
cwtl
gs
sbb
xor
xchg
and
dec
rol
cmp
jmp
cld
sbb
stos
xor
pop
push
sbb
sbb
pop
leave
ret
push
pop
or
stos
dec
jbe
loopne
xor
xor
or
loopne
adc
pop
aam
and
test
lds
jbe
in
and
mov
xchg
mov
out
dec
sbb
push
xor
dec
nop
aad
ss
in
andps
pushl
ret
xor
sbb
jo
les
mov
lods
icebp
xchg
mov
fimull
fwait
pop
cmpsb
je
fucom
fistl
out
cmp
es
mov
test
push
pop
fbld
dec
xor
mov
aaa
iret
add
adc
inc
push
jg
jp
push
data16
mov
jne
loopne
add
sub
sbb
popa
mov
adc
outsb
jg
mov
lock
inc
call
mov
mov
pop
xchg
add
push
popf
mov
hlt
and
mov
inc
dec
xchg
push
das
repnz
sahf
sbb
push
jge
in
aaa
or
push
or
xor
jg
mov
push
aad
sub
popa
shlb
leave
cwtl
adc
hlt
movsl
sbb
cmpsl
mov
out
cmp
in
int3
iret
repnz
sbbl
cmp
push
pop
push
inc
push
jne
sbb
pushf
int3
stos
repnz
xchg
jmp
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
xor
jle
cmp
out
adc
inc
shrb
test
or
sbb
inc
jp
mulb
push
mov
inc
inc
sub
outsl
popf
dec
mov
mov
nop
aad
fnstsw
push
mov
jb
adc
in
cli
arpl
sbbl
outsb
repnz
std
dec
pop
movb
bound
xchg
iret
out
cmc
pop
rclb
mov
pop
rol
or
lret
xchg
push
rorl
iret
sub
add
aad
hlt
popf
mov
sbb
dec
adcl
pop
int3
or
negb
imul
frstor
cmp
sub
adc
orb
xor
les
xchg
jle
stos
in
mov
or
add
scas
adc
mov
mov
aam
notl
mov
sub
or
call
addl
repz
cmp
mov
daa
int3
mov
mov
popf
cld
into
xchg
mov
inc
lds
add
cmp
cmpsl
mov
mov
push
les
xchg
and
pop
cmp
push
shl
rcrl
fcompl
push
fcom
xchg
cmp
jg
inc
popa
ret
sbb
fcoml
lea
faddl
mov
inc
andb
pop
idivl
decb
sbb
push
std
loope
inc
nop
add
leave
insb
inc
pop
jle
adc
xor
and
and
ljmp
xchg
out
int
data16
filds
mov
or
cmpsb
and
or
mov
and
fstp
mov
inc
sarl
sti
cmp
das
mov
ror
in
xor
pop
cmp
mov
pop
fucompp
out
shrl
pushf
or
call
enter
mov
sbb
call
or
or
ja
loope
sbb
push
xchg
jo
add
adc
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
cmp
and
jle
jl
jle
jne
cmp
jp
pop
jmp
outsb
clc
clc
mov
lret
or
popl
aad
vcmpge_oqsd
push
call
mov
add
mov
inc
and
leave
jns
jnp
xorb
jb
dec
movhps
mov
xchg
or
add
xlat
jae
mov
imul
cmp
mov
adc
jle
pusha
pushf
or
adc
sub
xor
jbe
ret
jbe
and
es
mov
je
and
sbb
cld
xlat
scas
xlat
cld
insl
add
out
mov
icebp
popa
pop
add
popf
cmp
dec
xor
rcrl
xchg
ret
gs
out
jle
adc
xchg
jmp
daa
insl
jg
mov
test
sahf
test
pop
sub
inc
adc
mov
xor
mov
inc
lcall
cmp
std
jns
cmpsb
jae
and
outsl
mov
jnp
jno
sti
loope
xchg
sub
pop
outsl
sub
jmp
xor
aaa
adc
punpckldq
pop
mov
lds
pop
pop
subb
add
xor
scas
roll
stos
mov
inc
lods
in
pop
mov
push
xchg
iret
out
mov
dec
aaa
xorl
push
mov
and
loop
mov
dec
mov
ficompl
jb
jle
push
les
repnz
in
jno
enter
lret
test
and
mov
sar
mov
jb
dec
sti
inc
xor
pop
imul
jnp
and
mov
call
push
cmp
sbb
cs
aad
fstp
int
or
adc
into
xor
mov
nop
or
cmp
mov
mov
jecxz
sbb
jo
repnz
xor
mov
sbb
jns
mov
enter
xor
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
repnz
sub
jle
jl
jle
push
arpl
add
gs
into
cs
in
jl
dec
mov
mov
hlt
mov
ret
sub
inc
es
leave
jb
cmp
pop
das
push
mov
notl
in
scas
pop
jmp
push
lds
mov
jo
adc
aam
rolb
sbb
subl
dec
inc
fisttpll
mov
rclb
jge
fistpl
mov
subb
aad
sub
sbb
xchg
out
mov
dec
or
rcr
lods
pop
clc
ja
iret
dec
fisttpl
std
inc
push
lods
mov
push
lar
ss
ret
mov
mov
out
fs
inc
movsl
fucomp
icebp
pop
aaa
sub
inc
xchg
mov
xor
lds
adc
stc
push
pop
mov
pop
sub
and
xchg
xchg
icebp
cmp
cmp
mov
mov
push
pop
inc
lcall
mov
xor
cmpl
pushf
xor
or
scas
cmpsl
lods
fsubrs
ja
into
and
or
pop
pop
pop
test
addr16
loope
dec
pop
shlb
push
jmp
cltd
dec
and
std
lcall
lahf
pop
push
mov
add
mov
adc
pop
aad
sbb
outsl
mov
sbb
mov
imul
dec
fistpl
push
iret
lock
enter
jecxz
and
int3
or
or
add
daa
int
outsb
mov
mov
mov
xor
jno
frstor
cli
cmp
fwait
pop
lahf
in
inc
hlt
xchg
xchg
into
lret
inc
lock
mov
ss
adc
shll
cmp
or
xchg
push
out
sbb
add
imul
call
arpl
cmpsl
movsb
xchg
mov
out
lcall
pop
mov
ret
pusha
daa
pusha
cmp
mov
in
mov
pop
stos
xor
and
push
ret
popa
pop
adcl
push
xchg
xor
inc
xchg
and
pop
mov
adc
repnz
sbb
imul
add
test
or
push
ss
add
or
add
jne
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
lods
push
in
jle
cmp
out
movsl
test
push
or
gs
sbb
lahf
pop
das
push
add
xchg
in
push
shll
out
adc
push
jns
push
mov
pusha
test
xor
scas
lret
mov
add
and
aaa
in
insb
jbe
inc
xor
dec
rolb
or
inc
push
scas
xchg
mov
inc
arpl
mul
sub
fwait
cwtl
scas
inc
or
in
out
push
xor
push
xchg
in
mov
sahf
lea
test
mov
dec
sub
and
cwtl
cltd
adc
jecxz
inc
xchg
fchs
outsl
mov
out
scas
mov
cmpsb
cmp
inc
sbb
adcb
fisubs
in
push
pop
mov
add
xchg
mov
stos
push
mov
mov
sbb
loop
ret
xchg
les
pop
clc
or
popf
shl
aad
popa
subl
add
fwait
mov
xor
xor
mov
scas
in
sbb
push
icebp
dec
lods
and
lea
xchg
mov
adc
jmp
pop
and
push
sar
pusha
test
xlat
inc
pop
sub
pop
ss
in
mov
rcl
pushf
outsb
test
rclb
cld
imul
out
dec
ss
lds
jae
sub
xchg
sbb
mov
arpl
xchg
loope
xor
ret
pop
pop
mov
inc
xor
stos
mov
ljmp
cs
nop
dec
adc
dec
push
and
loop
and
xchg
dec
sahf
lcall
sub
in
xor
lret
in
fld
inc
mov
xchg
pusha
adc
mov
test
lahf
adc
cmp
mov
push
mov
loopne
sbb
ret
outsl
insl
jbe
rclb
js
mov
test
filds
aam
insl
stos
cmpb
jo
jmp
pop
outsl
dec
fsubrp
fsubrs
fs
jp
and
pop
push
gs
dec
and
mov
repnz
pop
cwtl
pop
jp
add
push
stos
out
add
sbb
das
nop
dec
mov
rorb
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
cmp
jle
cmp
jo
cmp
cmc
lahf
mov
ja
pop
arpl
mov
xchg
cmp
pop
jo
in
jo
rcrb
jp
lret
mov
xor
cmp
sbb
and
cmp
mov
or
cmpsl
out
or
sarl
push
jbe
xchg
cmp
js
jns
outsl
ret
lcall
test
xchg
hlt
mov
int
and
adc
mov
push
ja
ss
add
mov
push
dec
xchg
jne
add
or
push
test
repnz
and
sbb
lock
lret
daa
outsb
fstps
jmp
movsb
sbb
cs
cmpsl
sub
xor
push
cmp
cmpsb
xchg
jle
scas
and
js
inc
fbstp
mov
mov
adc
and
imull
add
cmp
xor
in
mov
and
je
jns
mov
stos
outsl
insb
mov
sbb
mov
cwtl
sub
shl
mov
xchg
cmp
fidivs
push
je
or
sbb
and
aad
aas
in
gs
mov
push
in
inc
loope
data16
xchg
dec
lods
stc
cmp
jae
gs
stos
in
js,pt
cmc
or
pop
ja
mov
fwait
mov
dec
cmp
jnp
loopne
dec
adc
or
dec
mov
lds
push
or
cli
mov
leave
out
popa
jl
cld
mov
setae
std
xor
sti
out
or
test
loopne
push
push
mov
fistps
mov
xchg
sbb
or
dec
adc
inc
pop
into
pop
sub
test
ret
imul
lea
xchg
pop
icebp
adc
push
or
pop
daa
xchg
push
clc
cld
sbb
outsl
fstpl
cmp
xabort
adc
inc
adc
shll
mov
mov
insl
mov
mov
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
test
ds
xchg
and
mov
pop
xchg
fildl
xchg
push
jg
jmp
mov
repz
scas
scas
pop
push
in
inc
ss
mov
push
jns
imul
sti
out
pop
xchg
leave
push
pop
xchg
cltd
dec
jne,pt
cmc
mov
jo
repnz
inc
xchg
pop
mov
inc
bound
jno
jecxz
sbb
sub
xchg
int3
lret
sub
decl
pop
xchg
lret
inc
xchg
gs
popa
ret
mov
in
sub
pop
sbb
xor
arpl
or
mov
adc
jecxz
das
bound
xchg
push
lods
inc
das
sbb
xor
xor
inc
cwtl
int
jae
dec
fnsave
aaa
xchg
leave
xchg
in
push
mov
mov
xor
jo
or
and
rcrb
mov
dec
mov
pusha
inc
sub
sub
pop
dec
add
mov
mov
addr16
cmp
sub
iret
ret
sub
test
in
mov
movsl
and
mov
pop
lcall
adc
push
loope
incl
adc
add
cmpsb
dec
orl
fnstsw
dec
std
shld
jp
addl
xor
add
ret
aaa
lea
aas
xor
sbb
lahf
aaa
lods
xchg
clc
and
push
clc
scas
outsl
loope
dec
xor
sbb
mov
out
outsb
inc
push
xchg
mov
jmp
add
pushf
xor
jge
push
jle
xor
jecxz
fistpll
or
ds
dec
sbbl
test
jno
cld
cli
iret
xchg
loope
fs
xor
mov
subb
cwtl
pop
enter
adc
pop
xchg
mov
and
loop
push
cmp
jmp
in
jno
loope
scas
or
shl
cmp
std
cmp
or
pushf
lea
test
mov
cmp
cli
push
lcall
adc
xor
mov
lock
add
sub
sbb
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
decl
cmp
idivl
cmp
outsb
fs
mov
clc
das
or
lock
push
addr16
sti
mov
lahf
out
xchg
jbe
xor
jge
xchg
js
push
pop
xchg
mov
xor
xchg
std
es
xchg
xchg
pop
cmpsl
icebp
iret
push
aas
jo
aas
pop
loop
mov
sbb
cwtl
and
mov
sub
xchg
mov
inc
pop
loop
daa
loop
out
or
cwtl
loopne
fnstcw
int
js
xchg
call
pop
daa
xor
mov
ret
bound
add
mov
pop
pop
pop
xchg
pop
clc
pusha
xchg
mov
mov
pop
dec
sti
lds
in
xchg
fidivs
rol
int
and
sbb
jp
icebp
pop
icebp
or
pusha
push
push
adcl
xabort
int
ljmp
mov
out
imul
mov
add
ret
pop
stos
xchg
add
mov
inc
je
ror
sub
xor
pop
inc
pop
add
not
ret
or
inc
clc
xchg
inc
lods
mov
loop
repz
add
pop
sbb
mov
pushf
popa
loop
cwtl
mov
or
mov
sub
xchg
sbb
decb
je
mov
xchg
cli
jmp
push
lds
lea
sub
jp
xchg
imul
adc
loope
icebp
testb
jbe
inc
loop
pushf
dec
mov
les
mov
cli
xchg
scas
lock
rcrl
inc
xchg
ja
scas
je
xor
pop
sbb
mov
stc
inc
leave
pop
mov
fistl
mov
xor
pop
pop
xchg
aad
into
mov
pop
aaa
lahf
cmpsl
ja
and
or
sbb
ljmp
xchg
movsl
jge
cmp
les
sub
push
inc
dec
inc
jle
inc
add
mov
sahf
jo
mov
jnp
mov
adc
fwait
add
xchg
call
in
aad
mov
lahf
mov
mov
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
push
stc
scas
mov
bnd
cmp
nop
inc
notb
repz
or
xchg
scas
int3
lret
cltd
cmp
aas
mov
cmp
mov
mov
int3
lock
pop
cli
push
mov
sub
or
outsl
mov
shlb
mov
sbb
or
out
cli
pop
cmpsl
idiv
fcmove
gs
add
cmc
mov
add
inc
mov
xor
mov
leave
stos
add
std
and
push
xchg
inc
push
repz
jmp
cmp
int
sbbl
enter
push
push
ljmp
repz
xor
xor
repnz
daa
loope
adc
xchg
nop
xchg
aam
adc
xor
add
jle
lods
icebp
jp
std
xor
das
xchg
push
inc
sub
and
icebp
push
push
aaa
in
mov
jmp
push
lock
cmp
pop
lods
sub
mov
gs
bound
sbb
or
lahf
jno
popa
fsubrl
fldenv
lock
adc
mov
jge
xorl
add
inc
cli
push
jae
sub
sbb
xchg
call
jg
pop
jle
pop
jb
sbb
mov
lret
mov
dec
mov
add
sbb
cmp
dec
insb
lahf
mov
push
daa
xchg
lock
ret
inc
movsl
leave
sbb
jl
xchg
sbb
lea
inc
dec
adc
jle
das
xor
data16
and
jmp
add
inc
jno
xchg
mov
inc
repz
sub
sti
add
and
aam
adc
pop
addr16
push
sbb
lahf
push
xor
jge
sti
sub
xor
mov
and
imul
out
or
jp
std
mov
dec
push
out
cld
or
adc
testb
jle
pop
ljmp
fwait
pavgw
jbe,pn
sub
or
mov
test
test
push
jp
outsb
mov
cwtl
inc
jb
xchg
mov
data16
push
aaa
and
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
int3
add
pop
call
jl
jle
dec
nop
push
and
xor
adc
mov
push
xor
xchg
cwtl
in
pop
mov
pop
loopne
mov
xlat
dec
icebp
insb
negl
enter
movsb
shlb
test
mov
shrl
shlb
mov
movsb
fwait
lods
dec
mov
popf
fimuls
flds
push
iret
mov
inc
in
xchg
pop
mov
sub
cmpsb
add
lods
cli
mov
mov
or
mul
arpl
xchg
adc
adc
pushl
mov
sub
out
jle
fisubs
sbb
xor
lods
insb
mov
call
add
je
mov
mov
sbb
inc
cs
lahf
push
jg
sub
cmpsb
xchg
call
or
out
push
or
cwtl
out
mov
pop
or
lea
cltd
dec
push
dec
push
out
dec
cmp
add
movsl
stos
and
push
and
sub
out
mull
imul
pop
inc
es
inc
jb
push
aas
lahf
repnz
rorb
movsb
xchg
out
push
outsb
lds
mov
add
mov
mov
arpl
cmp
push
jno
cwtl
es
int
test
imul
sbb
repz
dec
push
add
xor
pop
in
fwait
sbb
int3
adc
and
test
xor
imul
insb
les
ds
in
aas
mov
imul
pop
pop
ret
adc
aad
aam
push
sub
add
xor
cmp
xor
mov
xor
sub
cmc
ss
mov
xor
mov
into
cmc
lahf
or
stc
and
xlat
es
mov
inc
or
lods
rclb
cmp
scas
imulb
loop
push
leave
std
bnd
sahf
popa
sbb
mov
jmp
xchg
imul
icebp
popf
jp
sti
jne
imul
or
scas
dec
add
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
je
ds
cmp
je
mov
ret
ljmp
or
nop
repz
or
cltd
sub
clc
push
ss
mov
jg
xchg
push
mov
add
cmpb
or
sahf
mov
xchg
dec
popf
mov
fbld
or
jb
scas
das
cmp
xchg
mov
popf
adc
es
or
pusha
roll
subb
iret
stos
loope
or
xor
and
into
push
int3
cmpsb
dec
popa
or
and
shll
inc
sub
cmp
inc
and
das
stos
hlt
movsb
pop
sbb
aas
xor
dec
cli
cld
cmp
sub
iret
cmp
push
hlt
scas
in
dec
fcmovu
sbb
sbb
jecxz
jg
jl
in
sub
lock
in
mov
dec
ret
les
mov
pop
shlb
lahf
ret
cmp
cli
xor
xchg
lods
cmc
push
adc
inc
adc
lea
adc
daa
and
and
sbb
out
and
out
out
fiaddl
jl,pt
inc
imul
addb
mov
jmp
cmp
jno
jae
jno
sub
jnp
cmp
xchg
inc
fidivrl
sub
mov
faddp
mov
push
cmp
shlb
mov
mov
mov
cli
sbb
push
pop
jns
mov
mov
mov
xchg
cmp
sbb
cmpsb
sub
pop
insb
xchg
xchg
add
and
lods
pop
pop
add
outsl
vpminub
cmp
sub
xor
sub
xchg
aas
cltd
and
lods
jl
mov
icebp
or
jo
sbb
push
push
cmpb
cmp
cmp
popf
xor
xor
sub
aaa
sub
arpl
jns
inc
jge
xchg
clc
push
cmp
push
jl,pn
repz
in
jle
cmp
fldt
cmc
mov
loop
movsl
push
sub
sbb
push
ljmp
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
cmpsb
inc
jl
jle
cmp
js
sbbb
xchg
icebp
lcall
outsl
scas
daa
mov
jge
sqrtps
mov
sub
in
das
in
pop
fdivs
sub
sbb
lea
mov
ds
loop
inc
cmpsb
fcoms
test
xor
mov
lea
jg
jle
push
xor
push
push
int
mov
fdiv
mov
fdiv
addr16
mov
sbb
movsb
cwtl
add
mov
sub
sub
pop
jnp
test
es
imul
lds
sbb
mov
pop
ljmp
pushl
adc
xlat
inc
push
daa
sahf
enter
cmp
and
aaa
or
pop
inc
int3
outsl
mov
out
xor
push
mul
lods
popf
inc
sti
das
fnstcw
adc
or
popf
xor
stos
cmc
adc
cmp
adc
outsl
js
popf
mov
idivb
and
sub
cltd
and
sbb
xchg
sub
xor
push
lret
insl
stos
xor
xor
ljmp
into
in
inc
inc
jle
ds
mov
pushf
psubusw
push
lcall
loopne
mov
imulb
sbb
jo
jl
sbb
adc
jae
pop
stc
aas
push
sbb
or
pop
imul
out
insb
rorb
or
ret
pop
sbb
sub
sub
iret
mov
lahf
mov
mov
xor
mov
jp
js
movsb
test
and
add
sub
insb
bound
adc
mov
scas
xorb
and
mov
ds
sbb
xchg
cmpsb
jb
std
pop
call
testl
sbb
gs
sub
sub
nop
pop
push
fstpt
pop
sbb
lret
popa
jg
dec
rcll
rcll
xlat
inc
xchg
lcall
fstps
pop
out
inc
cmp
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
sub
mov
sti
jle
cmp
xchg
push
loopne
inc
push
pop
mov
cmp
scas
inc
out
sarb
or
sub
lret
adc
mov
movsb
mov
outsl
mov
cli
sbb
aam
pop
push
repnz
aad
fwait
pusha
mov
in
cmpsb
pop
out
jge
push
int
fistps
push
push
scas
addb
mov
js
push
adc
add
pusha
sub
icebp
adc
mov
inc
pop
xor
and
and
xor
xchg
and
cltd
les
daa
scas
mov
cmp
jnp
pop
leave
test
adc
and
cmp
pop
shrb
inc
lods
cmp
lds
jg
and
pop
insl
mov
push
or
add
ret
fsub
sub
lods
popf
xchg
xor
jbe
cmp
int3
pop
inc
aad
inc
aaa
std
adc
jmp
jne
adc
jecxz
xorl
adc
xor
ja
out
pop
xor
pop
adc
lret
and
aad
popa
mov
xlat
dec
lgs
jmp
test
mov
xchg
inc
rep
mov
pop
add
add
adc
dec
jge
sti
stc
int3
xchg
adc
xor
sbb
into
pop
leave
add
push
pop
sarb
push
or
sub
pusha
pusha
sub
and
jne
into
fucomi
push
mov
sti
fsubs
or
push
popf
lds
adc
sbb
xchg
ss
shrb
lret
push
ds
fldenv
push
iret
jb
xor
fsubrp
mov
fwait
gs
gs
jmp
movnti
adc
test
inc
addr16
jnp
cmpb
into
les
cmp
ret
sbb
pop
outsl
sub
dec
xchg
popf
mov
ljmp
jl
or
rcrl
push
adc
fmull
mov
or
scas
adc
stos
mov
xor
inc
loopne
add
imul
lret
adc
lret
mov
adc
pop
mov
pop
roll
xchg
js
push
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
pushf
cmp
jle
jl
jle
mov
in
repnz
ss
pop
xor
inc
add
xor
ficoms
and
inc
jecxz
ljmp
cwtl
andb
dec
xor
jmp
adc
inc
mov
add
sbb
jl
fstpt
nop
das
rolb
test
push
int3
sbbb
cmp
rol
or
ret
jl
loopne
subb
arpl
test
mov
mov
daa
loop
inc
jns
rorb
pop
inc
lahf
inc
jecxz
pop
add
std
inc
cmp
iret
pusha
and
or
or
inc
add
jecxz
xchg
sahf
mov
idivb
aas
fs
jg
pop
test
and
sbb
outsb
lcall
mov
and
or
inc
pushf
leave
addr16
cmp
sbb
dec
xor
test
jle
or
ret
xchg
mov
fidivrs
out
push
add
int3
mov
pop
mov
fmul
icebp
push
rcll
add
jl
or
ljmp
addr16
mov
dec
cli
test
popf
clc
jmp
mov
arpl
insl
shrb
cmp
xor
insb
inc
mov
jl
in
les
out
dec
mov
jl
sahf
ss
xchg
leave
shlb
ret
mov
lahf
inc
dec
repnz
lret
mov
out
ja
adc
rol
or
cwtl
jmp
movsl
xchg
mov
push
xchg
push
gs
cmp
pop
lods
sub
shll
dec
jmp
mov
mov
sbb
pop
rorb
ficompl
in
int3
ret
mov
mov
xchg
cltd
leave
push
inc
aaa
iret
mov
pop
pusha
or
lods
out
test
pop
xchg
xchg
shlb
pusha
jne
jnp
in
dec
inc
stc
insl
adc
adc
sbb
dec
je
fmull
outsb
ret
and
push
and
pop
imul
add
dec
cmpsb
mov
test
pop
mov
das
or
dec
in
and
stc
dec
int
push
lahf
xor
lret
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
movsl
test
dec
xchg
cmp
popa
sub
pop
or
out
jle
pop
bound
xor
xchg
mov
cmp
pop
push
and
insl
lods
outsl
push
xor
inc
rdpmc
mov
ds
push
rorb
adc
jo
add
in
inc
jmp
add
stos
jbe
insl
pop
inc
movsb
es
pop
mov
xchg
or
enter
push
sub
or
inc
dec
push
incb
and
push
xchg
xor
mov
sarl
jg
es
mov
jb
orb
mov
fwait
sub
jecxz
adc
inc
inc
mov
test
add
bound
adc
je
lcall
out
mov
sub
and
ret
pop
jg
pop
mov
push
inc
sbb
mov
or
iret
js
clc
fildl
pop
jl
sbb
mov
push
xchg
divb
mov
outsl
das
negl
jno
inc
mov
arpl
sahf
es
push
out
or
cli
fisubrl
xlat
fldl
jns
scas
xchg
and
jo
out
xchg
movsl
cmp
xchg
lret
jo
and
xor
dec
xadd
adc
clc
scas
push
push
push
cmc
dec
xlat
xor
addr16
test
xchg
cld
loope
pop
push
in
test
xorb
mov
cmp
lret
leave
mov
mov
or
imul
out
sbb
test
and
sbb
inc
repz
adc
daa
pop
in
mov
mov
pop
jne
xchg
xor
ret
jno
mov
test
das
cmpsl
enter
aaa
jns
dec
mov
mov
mov
gs
mov
jae
xchg
push
test
dec
es
divl
aaa
dec
jno
roll
or
sbb
cmp
test
int
pop
mov
adc
lods
pop
in
insl
int
cmp
pushf
popf
push
dec
or
jg
and
nop
push
jbe
lods
fstpl
jge
push
cmp
push
js
xchg
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
mov
or
jle
cmp
pop
add
lock
sub
mov
pop
push
ret
fldt
fs
xor
mov
and
in
in
add
insl
fnclex
ljmp
cmp
mov
test
int3
loop
movsb
nop
mov
insl
nop
xchg
xor
mov
mov
ja
sarl
popf
mov
cmp
xorl
fdivrl
add
sbb
push
mov
fwait
cmc
les
repnz
sub
sub
test
das
icebp
inc
dec
inc
fsts
mov
popf
cli
inc
dec
jnp
and
leave
sahf
ret
xor
or
sti
adc
xchg
sub
mov
mov
push
adc
test
outsb
sub
int3
jns
aad
push
lret
in
pop
xchg
loopne
cwtl
negl
push
call
sti
dec
xor
push
mov
aad
push
out
jg
fucom
adc
imul
jge
subb
push
lret
das
pop
call
or
mov
and
test
fbstp
stos
rclb
jp
pop
inc
les
aam
popf
mov
mov
mov
xor
push
sbb
flds
mov
popf
int3
cmpl
pop
fcmovbe
jnp
add
addb
push
into
and
movsl
mov
push
pop
and
adc
daa
iret
shr
adc
mov
mov
out
jp
jae
add
xor
mov
push
jmp
pop
shl
testl
inc
insb
xchg
mov
dec
rolb
repz
lahf
push
or
insl
xor
cmp
xchg
mov
fdivs
mov
sbb
lcall
mov
lret
mov
inc
dec
sub
sub
lods
push
and
out
or
xor
das
mov
sbb
pop
arpl
xor
pop
jle
push
push
or
sub
xchg
xchg
mov
xor
insl
cmp
mov
adc
jb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
and
jle
cmp
jb
jae
cmpsb
roll
lock
or
xor
pop
mov
push
or
inc
push
lahf
aas
xchg
sahf
mov
rolb
mov
xor
test
jae
cmp
out
cmpsb
or
pop
or
popf
or
and
dec
mov
cld
vpinsrw
stos
mov
jno
cmp
xchg
sub
push
sarb
js
push
imul
jnp
int3
sub
repnz
mov
rolb
outsl
int3
orb
mov
out
lock
dec
cli
pop
cmp
out
repz
lahf
sbb
int3
inc
mov
sbb
jbe
adc
ljmp
dec
dec
test
fstpt
cli
lods
int3
popf
sbb
ss
mov
inc
cmp
ljmp
mov
jo
cmpsl
push
cwtl
dec
out
or
jbe
clc
xor
addr16
daa
popa
mov
push
sbb
dec
test
das
or
in
mov
andb
sahf
clc
add
dec
sub
xchg
xchg
mov
cmp
cmc
inc
lcall
lret
mov
cwtl
add
sbb
scas
jge
in
or
movsl
push
dec
add
popf
jge
mov
or
pop
dec
push
daa
adc
xlat
cld
lret
pop
pop
insb
insl
ret
lcall
aad
in
or
add
loope
push
sbb
out
movsb
xchg
push
andb
sbb
fldenv
test
sub
add
mov
data16
mov
pop
aas
sbb
or
sbb
stos
and
mov
lock
jnp
je
jge
fisubs
push
addr16
and
ret
cmp
fidivrl
xchg
xchg
jge
jecxz
mov
stos
loope
mov
adcb
mov
stc
imul
rclb
or
les
iret
cwtl
aam
push
cs
repnz
sbb
mov
jecxz
mov
inc
leave
mov
das
inc
insl
jbe
loopne
cwtl
testl
mov
aad
frstor
mov
inc
mov
pop
or
les
je
push
clc
xor
xchg
xor
les
leave
mov
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
or
jle
jl
jle
hlt
inc
sbb
cmpsb
pushf
push
xchg
pop
fsubs
push
add
inc
cs
jmp
fsincos
dec
popa
or
lock
or
and
push
lods
pop
in
xor
pop
mov
push
mov
jp
rcrb
mov
js
cld
mov
lret
dec
push
cmp
xor
mov
inc
sbb
out
ret
rcl
call
test
sbb
inc
std
xor
fs
dec
sti
scas
pop
lret
adc
out
mov
pop
enter
jmp
out
pop
mov
insb
dec
jge
xchg
fiadds
xorb
test
jbe
iret
xor
or
outsb
and
mov
mov
sbb
push
fsubrs
mov
mov
orl
dec
sbb
rcrb
pop
imul
dec
dec
ffreep
sub
dec
add
js
add
add
rclb
lcall
push
add
fsts
and
pop
sbb
mov
xor
lods
pushf
sub
pushf
jno
cli
sbb
cmc
rcl
sub
push
dec
std
mov
mov
or
lock
insl
scas
lods
jp
fnstenv
cmc
jp
js
cmp
fwait
push
fs
xor
bound
cmp
test
sub
imul
cmpsl
insb
pusha
xchg
lods
mov
mov
sbb
movsb
jns
ds
jmp
jne
mov
mov
add
xlat
in
cli
loopne
adc
dec
int3
fisttps
sbb
adc
and
mov
out
cmc
jp
adc
add
adc
jo
xchg
cmpsb
dec
pop
push
aas
xor
lock
loopne
int
jle
dec
and
add
xor
cmp
jno
subb
push
ljmp
stos
and
call
ficomps
xor
dec
rcll
sahf
in
dec
push
xchg
push
pop
mov
repnz
ja,pt
adc
dec
jb
inc
stc
mov
mov
sub
push
out
and
or
pop
jl
sub
movsb
lret
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
push
mov
bound
jle
xchg
add
jl
xchg
lret
pop
hlt
mov
pop
mov
cltd
das
cwtl
jge
dec
push
push
in
inc
repnz
adcl
mov
and
mov
xlat
sbb
ret
sub
mov
cmp
push
mov
loopne
subb
mov
xchg
add
add
popa
inc
mov
loopne
outsl
sub
jge
pop
mov
lods
inc
pop
push
mov
stc
popf
lret
inc
xchg
push
icebp
jge
insb
fcomps
dec
or
mov
jno
fstl
dec
stc
add
mov
sti
fistl
sub
ds
dec
mov
cmpsb
mov
inc
shll
stos
mov
pop
dec
sti
cmp
shrb
cld
xor
aam
pusha
repnz
cli
arpl
and
sub
int3
cmp
dec
cmc
ss
xlat
cmpsb
xor
or
js
and
orb
or
fdivr
push
outsl
push
cmp
test
adc
jp
jno
and
or
dec
iret
mov
sub
mov
xchg
mov
mov
jne
gs
dec
fstpl
sbb
mov
loopne
test
xchg
lods
adc
mov
xor
cmp
mov
inc
les
lret
inc
or
iret
aad
scas
fwait
jl
gs
xchg
call
push
imul
imul
incb
ja
lcall
rcr
mov
stos
jl
jnp
repnz
mov
jns
push
sbb
ficoms
push
jne
mov
cmpsb
repz
add
pop
icebp
or
add
popa
xchg
test
clc
lahf
jmp
cli
js
loope
add
fdivrl
jge
and
popf
pop
cmpsl
lock
mov
push
sub
mov
xor
jae
out
out
and
ret
jbe
jle
iret
pop
lret
test
lret
adc
iret
dec
mov
dec
lahf
in
pop
or
xchg
hlt
inc
inc
adcl
cmp
mov
sub
sbb
cmp
leave
je
fcmovne
mov
mov
jmp
push
std
dec
sahf
push
push
add
push
push
es
sub
jle
cmp
dec
nop
xchg
test
dec
jmp
das
pushf
out
adc
addr16
cmpsl
out
jae
enter
xchg
add
stos
mov
int3
inc
cli
repz
sub
jle
inc
in
jbe
mov
lret
jge
xorl
lret
cs
or
mov
gs
xchg
jl
adc
jp
js
push
lock
loopne
push
mov
test
cmp
cld
jge
out
add
in
ss
into
lock
inc
xchg
adc
jo
jb
push
add
fs
shrb
out
jge
inc
xor
xor
push
pop
fisttps
cmp
repz
or
cli
idivl
xor
mov
pusha
es
or
cltd
scas
int
les
dec
xor
icebp
dec
cld
jp
fs
test
mov
ljmp
mov
dec
mov
pop
sub
std
sbb
mov
movsb
push
push
cld
or
psrlq
cmp
cmc
jne
mov
mov
xchg
sbb
cmp
xor
jp
pop
xchg
sbb
cmpl
xchg
fisubl
xchg
xor
addr16
sub
cmpl
stos
mov
decb
pop
xor
arpl
stos
xchg
sub
jecxz
cmp
cmp
xchg
sbb
arpl
or
into
stc
lcall
cld
cmpsl
mov
push
int3
mov
shrl
inc
rcll
pop
mov
jp
mov
push
sbb
jne
pop
push
add
xchg
adc
xchg
inc
push
mov
cmc
shl
cmp
insl
cmp
daa
xor
add
jne
mov
repnz
cli
inc
cmpsl
mov
addr16
inc
addr16
or
sub
mov
jge
cmp
lcall
sbb
xlat
add
jo
xor
adc
in
mov
icebp
xchg
loopne
mov
mov
hlt
cwtl
adc
lods
cwtl
mov
pusha
mov
mov
adc
and
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
sub
mov
cmp
pop
mov
and
cwtl
add
push
pop
jg
ror
fstpt
sbb
je
jmp
inc
das
leave
in
inc
mov
imul
jp
insb
mov
sub
notrack
xabort
inc
xchg
mov
mov
testb
sbb
les
adc
xor
rolb
loop
mov
xchg
subb
inc
jmp
sbbl
xchg
in
xchg
pop
pop
sub
imul
test
andl
fistpl
cmpsb
pop
push
cld
push
push
daa
push
mov
lods
ja
int
ffreep
insl
lahf
cmpsl
outsb
fsubl
clc
out
xor
int
adc
sub
cmp
mov
ret
jmp
xor
ss
mov
mov
push
push
xchg
das
cmpb
pop
adc
push
jmp
and
rcrl
ja
cmovl
stos
sub
jno
andl
cmpsl
movsl
clc
jno
les
mov
cli
cwtl
push
pop
jbe
xorb
iret
movsl
and
lret
jo
lds
jb
ret
jg
xor
leave
jp
sbb
xchg
shr
adc
xorb
push
lock
jle
rcll
mov
loope
in
pop
mov
xor
xor
das
les
dec
mov
jae
xchg
adc
fiaddl
cld
cltd
and
in
xor
add
popa
dec
adcb
mov
add
dec
mov
sbb
aaa
loop
cmp
insl
inc
loop
rclb
scas
dec
xchg
fists
outsl
pop
sbb
push
out
or
popa
lcall
je
mov
jae
rcpps
test
cmp
adc
sub
cli
subb
push
out
xor
lcall
adc
pop
ret
pop
sbb
test
inc
data16
dec
inc
ds
cmp
sbb
jg
loope
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
hlt
fimuls
sub
jl
jle
bound
adc
xchg
and
cltd
call
sbbb
push
mov
xchg
stc
add
test
js
daa
add
adc
jle
mov
dec
stos
or
stc
sahf
or
adc
or
sbbl
sbb
mov
in
jnp
std
jmp
mov
mov
imul
add
adc
and
cmp
adc
movsb
arpl
ret
add
ljmp
in
stos
pop
mov
cltd
dec
jmp
aaa
add
mov
adc
cmp
lcall
mov
adc
jmp
sub
sbbb
les
sbb
out
loope
cs
test
add
fldl
pop
sahf
jg
int3
lahf
mov
outsl
test
das
imul
dec
andl
inc
out
enter
cs
test
cmpsb
pop
aad
test
int
scas
push
repnz
lock
sbb
andb
inc
xchg
fwait
mov
or
scas
iret
dec
ss
test
imul
mov
cmpsl
dec
or
and
daa
test
daa
cmc
shlb
cs
push
orl
lcall
cli
adc
jb
add
out
dec
sahf
sahf
cltd
lock
outsl
jmp
xor
sbb
aaa
pop
pop
or
cwtl
or
adc
in
cltd
out
jmp
cltd
mov
adc
cmp
xor
inc
out
faddp
in
ljmp
rolw
pop
cmpsb
pop
cmp
or
outsb
out
lret
aam
add
mov
or
push
cmp
fbld
cmp
pusha
adc
and
inc
inc
in
jnp
adc
addr16
repz
mov
cmpsl
dec
jecxz
int
fldl
cmp
sbb
xchg
pop
cli
inc
out
testb
inc
cmpl
xlat
cmp
mov
pop
jo
mov
sub
pop
imul
out
pop
pop
inc
je
ficoml
fnsave
pop
testl
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
push
test
jl
jle
lods
inc
pop
dec
ds
movsl
mov
cld
test
add
inc
test
sbb
adc
sbb
xchg
scas
mov
adc
cmp
jo
mov
fdivr
fwait
push
mov
fisubrs
shr
aas
andl
es
mov
sarb
add
pop
push
cmp
or
mov
mov
vmovntps
add
push
in
movsl
add
insl
stc
in
fsubl
dec
adc
and
mov
or
or
cmc
and
mov
xor
push
js
leave
les
ret
leave
dec
out
inc
or
loop
sub
xchg
clc
icebp
jo
sbb
add
xchg
arpl
adc
mov
loopne
mov
jle
push
xchg
push
mov
mov
xor
sub
arpl
shr
xchg
and
repnz
decb
cli
out
sarb
das
andb
test
inc
sbb
mov
cmp
xchg
shlb
jae
mov
sti
add
mov
xchg
loope
push
inc
int3
jecxz
icebp
scas
pusha
mov
insl
movsl
repz
sarl
mov
in
inc
mov
cmp
or
or
xchg
sbb
mov
sbb
jge
std
addb
jno
push
das
sbb
and
or
loope
ja
fldt
mov
outsl
jae
lcall
mov
inc
mov
mov
xlat
andl
jg
xchg
and
es
sbb
pop
sub
mov
lods
or
mov
cld
sbbb
inc
sub
inc
adc
es
cmc
inc
jecxz
mov
dec
out
xchg
cmp
dec
push
repnz
in
cmp
push
jno
mov
mov
push
out
push
xchg
add
pop
pop
mov
push
imul
cmpsl
xchg
lcall
shr
lods
rcrl
adc
xor
push
xor
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
cmpsl
cltd
push
cmp
jle
sahf
into
push
mov
mov
call
and
nop
jmp
pushf
push
dec
jmp
lahf
aad
cltd
leave
stos
sti
mov
idivl
sti
xor
jmp
add
iret
inc
xor
sub
cmp
outsb
sahf
mov
mov
cmp
lds
data16
push
jbe
hlt
hlt
jb
cmpsl
ret
jnp
mov
adc
ja
sub
pop
stos
in
inc
mov
pop
int
pop
inc
imull
sbb
xchg
shll
scas
adc
mov
push
jns
xchg
pop
test
xchg
push
jp
pop
mov
adc
ret
out
sbb
mov
xchg
loopne
push
mov
push
adc
mov
sub
cmpsb
mov
nop
jo
les
inc
pop
sub
cmp
add
push
xlat
and
or
dec
xchg
cmc
inc
or
ret
jg
jbe
mov
fs
lret
loope
nop
jns
cmp
pop
cmc
sbb
jae
clc
clc
imul
mov
pop
push
jg
pop
shl
xor
sub
jg
and
dec
inc
xchg
and
fs
mov
sarl
mov
inc
push
adcb
push
lods
fstps
xlat
iret
jns
and
loopne
lds
mov
mov
cmpsb
ficoml
dec
repnz
mov
pop
adc
popa
sbb
pop
sbb
mov
lret
ja
push
test
xor
and
ds
faddl
in
adc
stc
jecxz
loopne
out
inc
and
fstpl
dec
pushf
add
adc
pop
mov
cmpsl
xchg
pop
rorb
and
mov
mov
test
add
xor
in
sahf
sbb
and
mov
std
pop
xchg
jae
fists
or
xorl
inc
pop
stc
add
out
in
jbe
xchg
inc
mov
call
movsb
fisubs
cmc
jg
pushf
xchg
sub
inc
loope
mov
aam
add
repnz
xor
mov
mov
fsts
pop
push
sbb
cmp
shll
inc
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
out
mov
cmp
out
rolb
daa
sbb
mov
je
dec
shrl
repnz
mov
sub
ret
mov
mov
xchg
cwtl
icebp
bound
mov
aam
sub
jg
mov
push
xchg
decb
jb
xchg
push
out
out
jl
sub
lret
inc
jl
testb
dec
sub
lret
movsb
icebp
adc
hlt
push
lds
loopne
std
sub
popa
test
pop
xchg
and
js
and
inc
xchg
das
orl
mov
pop
loop
push
js
cli
imul
dec
jge
test
push
lds
sarl
xchg
das
jae
push
imul
les
inc
pop
std
sti
mov
xchg
jns
dec
testl
mov
imul
cmc
pop
pop
jge
stos
sub
inc
push
int
iret
and
jo
lods
inc
xchg
inc
and
scas
cli
stos
cld
jge
out
sbb
ds
lods
push
mov
xor
inc
hlt
xchg
adc
pop
mov
gs
jl
mov
out
rcll
jnp
loopne
cld
pop
or
pusha
inc
lock
out
add
or
leave
lock
in
add
shlb
cli
fsts
lret
xor
addb
and
adc
xchg
in
sbb
fsubr
xchg
push
sti
add
lods
push
cmp
fs
cmc
mov
ret
push
ret
lahf
daa
xchg
or
cld
cbtw
clc
repz
cmpsb
xor
xchg
mov
bound
xchg
cmpsb
loop
fdivrs
xchg
or
cld
scas
pop
jb
js
sbb
outsb
jg
mull
mov
push
into
in
adc
fdivl
cltd
mov
and
cwtl
out
push
notl
mov
inc
ficoms
call
sub
cld
rcll
popa
sti
icebp
add
std
xor
test
aam
loop
inc
and
sub
and
adc
pop
sub
ss
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
imul
push
jle
adc
jle
xchg
xor
xchg
mov
mov
cli
nop
ret
loope
subl
in
inc
rorl
in
out
int3
ret
and
dec
js
adc
jge
fdivl
int3
aaa
sub
adc
xlat
jnp
jp
xorl
shll
mov
into
mov
jnp
fcmovnb
adc
mov
andl
inc
out
aaa
movsl
dec
lds
cltd
sbb
jbe
xchg
andb
dec
pop
xchg
pop
mov
jg
out
ja
cmp
mov
lock
pop
icebp
xor
sar
mov
adc
mov
popf
clc
xor
dec
fcmovne
mov
movsb
and
movsb
hlt
sbb
dec
jge
push
fistpll
lods
pop
push
jecxz
mov
cltd
push
xorb
loope
or
les
add
and
push
jae
dec
push
lods
adc
rorl
hlt
mov
xchg
lret
fs
pop
icebp
sub
test
xchg
ss
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
lcall
jle
jg
jle
mov
xchg
lahf
jo
icebp
push
mov
lcall
sub
loope
xorb
into
pop
xchg
sub
aad
cmp
fwait
outsl
jmp
xchg
push
cmp
inc
mov
pop
into
sub
and
push
mov
fst
xor
out
push
push
and
daa
mov
ret
cmp
push
sub
add
inc
or
aad
jmp
mov
and
xchg
mov
xor
das
ficoml
fs
jnp
jb
lock
xor
inc
sbb
pop
fiadds
inc
inc
repnz
in
int3
or
cwtl
ja
push
inc
xchg
jo
mov
negb
sub
inc
pop
xchg
mov
cmpsb
lret
jle
mov
lahf
std
xor
push
cld
mov
filds
mov
pop
push
pop
ds
jl
aam
data16
clc
stos
dec
pop
push
or
hlt
insb
inc
or
sbbl
rorl
int
pop
insb
mov
cmp
mov
jbe
mov
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
sarb
jle
jg
jle
int
stc
cwtl
xchg
inc
and
jmp
mov
clc
leave
int
cmp
push
je
add
push
pop
cmpsb
out
loop
pop
sbb
xlat
imulb
mov
lock
mov
pop
ret
pop
es
sarb
mov
js
ja
int3
or
jnp
sub
arpl
movsb
push
sarb
jnp
test
pusha
push
xor
sbb
inc
push
jbe
lcallw
ds
lds
xor
shll
jg,pt
and
jns
les
es
and
push
rcrl
das
out
mov
scas
in
push
sbb
sub
lds
lahf
gs
hlt
jecxz
push
xchg
les
mov
pop
sub
push
dec
cmp
faddp
mov
scas
scas
out
mov
jns
mov
jge
pop
arpl
mov
xchg
and
and
pusha
in
push
pop
pusha
imul
xchg
mov
fwait
out
sbb
and
or
fildll
jns
dec
das
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
repnz
jle
adc
jle
das
mov
mov
aad
push
adc
lods
push
cmp
xchg
push
dec
sbb
sbb
andps
jge
addr16
pop
cmp
pop
jge
sahf
hlt
fwait
push
xchg
mov
jne
push
ret
test
mov
fisttpl
outsb
sub
mov
daa
insl
in
sub
in
mov
inc
jmp
bound
enter
lods
rorl
cmp
lret
adc
int
xor
or
dec
aam
jp
pop
xchg
cmp
cli
sbb
movb
jne
loopne
lret
xor
int3
loopne
push
push
aaa
add
shll
mov
test
stos
fstps
or
xor
mov
dec
cmp
mov
mov
aaa
lods
stos
call
sub
ja
jl
push
pop
rorl
adc
outsl
ds
xchg
jp
xchg
xchg
imul
pop
mov
xlat
cmc
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
xchg
and
sub
jle
out
pop
jl
jne
xchg
push
jbe
negb
cmp
jns
or
adc
aad
les
scas
mov
cltd
dec
push
mov
push
inc
xchg
out
aad
jle
jge
lock
inc
dec
fimuls
outsl
leave
cmpsb
out
xor
sub
xor
xor
pop
xor
mov
popf
add
pop
add
into
adc
inc
sub
ret
push
push
jne
testl
adc
lret
xor
ds
mov
sbbb
xor
ret
shrl
mov
adc
sub
pop
imul
mov
adc
adc
xorl
and
push
adc
xor
xchg
mov
mov
mov
mov
mov
mov
popl
jbe
repnz
add
imul
lcall
add
sbb
dec
cmc
mov
jl
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
xor
cli
push
inc
rcrb
subl
jp
and
mov
mov
pop
loop
mov
rcrl
jg,pn
sarl
adc
push
jl
xchg
insb
inc
push
dec
dec
enter
push
xlat
and
repnz
or
sbb
xchg
push
jecxz
push
add
pop
jmp
push
rol
loop
aad
and
dec
repnz
adc
and
pushf
dec
push
mov
adc
shrl
pop
in
outsb
loopne
mov
cmp
push
sahf
push
inc
rorl
in
inc
int3
adc
daa
xor
subb
adc
stc
ret
xchg
leave
cli
adc
addr16
add
dec
cmp
ja
jnp
dec
mov
fptan
call
push
icebp
cmp
out
xchg
push
dec
in
sarb
cmp
repnz
loope
xor
je
xchg
es
orb
or
out
arpl
insl
xor
push
je
mov
mov
inc
stc
mov
inc
mov
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
stos
hlt
and
cmpsl
jle
adc
jle
inc
mov
dec
mov
fwait
clc
cmp
and
fisttpll
mov
dec
test
push
push
call
nop
and
out
idivl
xchg
es
cli
xchg
mov
mov
pop
outsb
jge
dec
jge
pop
push
xor
push
jge
mov
into
cmpsl
xchg
adc
inc
mov
mov
jns
pop
shll
std
loopne
fldcw
push
out
out
lods
or
negb
cmpsl
stos
xor
sbbl
jo
push
adc
inc
mov
jle
push
jmp
daa
lock
cmp
popa
out
sti
loop
test
jae
pop
mov
pop
cvtps2pi
nop
xchg
and
pop
push
ds
xor
mov
and
push
jecxz
xor
dec
push
hlt
sahf
lret
repz
into
mov
shrb
rolb
xchg
lgs
pop
cmp
movsl
or
test
movsb
movsl
jmp
fimuls
test
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
into
xchg
jle
jnp
pusha
test
inc
push
or
test
ret
mov
cmpl
icebp
xor
fcompl
pop
in
inc
movb
outsb
cmp
pop
sahf
int3
lcall
loopne
into
inc
push
xor
movsb
xor
and
fstpl
les
mov
add
popa
popa
in
sahf
adc
outsb
xchg
mov
loopne
cmpsb
sbb
add
int
xchg
out
bnd
sub
repz
mov
and
add
mov
mov
cmp
out
mov
mov
cmpsw
stc
fwait
cmp
xorb
in
lock
inc
nop
test
or
jl
mov
insl
ret
xor
js
cmpsl
inc
pushw
sbb
fdivl
mov
fdivr
loop
push
cmpxchg
push
pusha
insl
mov
andb
cmp
and
test
dec
int
or
lea
insl
xor
aam
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
xchg
in
lret
jle
push
jg
jle
jns
addr16
mov
jle
lret
fwait
test
jecxz
xchg
sub
lahf
stos
outsl
xchg
fwait
and
jnp
pop
push
adc
sub
dec
call
pop
in
mov
shll
cld
xorb
std
popf
fucomip
shlb
xor
pushf
test
xchg
test
std
lret
jnp
pop
daa
dec
pop
aam
data16
sbb
sti
sbbl
sbb
aad
int
adc
mov
arpl
pop
mov
scas
sub
mov
lret
rorb
pop
dec
mov
dec
test
adc
push
or
clc
push
push
push
dec
xchg
sbb
pop
scas
aaa
notl
jp
bnd
loope
ret
cmp
outsb
sbb
fwait
jp
out
lods
add
clc
dec
imul
loope
mov
or
lea
or
jmp
xchg
xchg
sub
jne
add
adc
lret
push
aam
iret
shl
adcl
xor
inc
dec
xchg
or
mov
pop
mov
mov
es
lods
xchg
add
stos
dec
iret
and
aam
cltd
dec
adc
gs
std
shr
mov
xor
adc
and
in
data16
enter
adc
sbb
dec
mov
pop
lods
cmp
push
rorb
lret
jae
push
rcrl
lods
or
xchg
int3
sub
cltd
dec
jbe
jl
out
push
pop
sub
lea
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
cmp
push
repnz
dec
js
mov
popa
dec
lcall
daa
add
inc
pop
into
pop
mov
pop
mov
and
cmc
mov
pop
jmp
sbb
insl
and
mov
les
cmpl
mov
adc
jbe
mov
sti
or
ja
in
inc
mov
mov
pop
adc
test
mov
push
cmp
dec
xchg
push
mov
jns
pop
outsl
test
pop
or
xor
ds
in
mov
rolb
test
in
mov
and
in
mov
insb
jp
loopne
aas
loop
stc
popf
test
orl
inc
mov
dec
cli
mov
push
push
push
adc
adc
mov
dec
mov
bound
test
jl
mov
leave
fnsave
test
pop
xor
imul
adc
popa
and
shrb
adc
pop
mov
jbe
sub
mov
cmp
movsl
loope
add
push
daa
sbb
icebp
dec
or
fdivp
sub
add
mov
xlat
adc
stc
mov
jbe
arpl
cmpb
bound
test
stc
mov
mov
mov
jl
mov
inc
andb
sar
fdivr
dec
add
push
int
daa
outsl
mov
add
mov
dec
mov
push
xchg
ja
lods
mov
xor
scas
subb
aas
les
popa
mov
add
pop
jle
dec
mov
adc
cmpsb
repnz
xchg
je
mov
shr
aam
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
mov
mov
jle
add
sbb
adc
xchg
sbb
dec
add
test
mov
cmp
push
or
insl
ljmp
pop
cld
aam
adc
and
fldt
dec
dec
lds
ljmp
or
decl
xor
fidivs
clc
mov
aam
add
subl
push
mov
popf
iret
or
fsincos
sub
cld
dec
sub
fstl
xchg
pop
repnz
scas
outsb
int
push
ja,pt
outsb
fisttpll
add
int
add
outsl
xor
mov
cmp
notb
and
add
mov
test
mov
loop
push
xchg
repnz
test
int3
inc
in
je
mov
stos
push
popa
in
jae
inc
movsb
shlb
scas
addr16
test
mov
mov
adc
nop
ds
ja
push
jp
in
mov
xor
cmp
jp
mov
sahf
ss
dec
mov
rcl
scas
pushf
sbb
push
xchg
fwait
sub
xchg
cmp
cmp
dec
sbb
xchg
mov
imul
mov
push
popf
mov
jne
js
lret
inc
mov
xorb
rorl
popa
loop
xchg
lods
lods
repz
jbe
stc
mov
fcmovnu
add
inc
int3
add
lea
push
and
inc
aam
push
mov
dec
push
dec
sbb
mov
lock
push
fs
aad
aaa
mov
out
xor
or
bound
ja
inc
mov
mov
jl
pop
push
inc
mov
and
addr16
sub
fdivrl
iret
jecxz
popa
cmpsb
jge
mov
xor
lds
mov
lds
add
cmp
jge
fwait
aas
mov
xlat
jnp
adc
pop
sbb
mov
addl
push
out
test
jg
mov
lret
mov
sub
or
jmp
std
imul
push
leave
pop
jg
jbe
scas
imul
test
popa
shl
std
in
lods
lods
mov
and
cwtl
enter
jecxz
mov
fidivrl
and
popf
dec
cmp
adc
xorl
cmp
aad
lea
js
jb
movsl
push
mov
dec
mov
sub
sbb
js
and
jp
fs
imul
jmp
insl
cmpl
push
lock
jo
jg
bound
test
fiaddl
enter
insb
adc
loopne
or
enter
pop
aaa
addr16
fldcw
lock
mov
inc
faddl
inc
fcompl
xchg
pop
fisubs
lods
cs
hlt
mov
pushf
clc
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
out
lods
jle
jl
jle
jmp
adcb
adc
fs
jl
sbb
inc
sub
or
adcl
dec
jmp
push
push
inc
test
cmpb
mov
inc
addr16
pop
insb
outsl
in
rclb
cmpl
and
and
adc
addb
cs
in
negl
inc
xchg
pop
push
push
dec
jmp
negb
aaa
or
test
sbb
xor
mov
ret
pushf
jmp
push
jno
lods
bound
imul
pop
insl
in
sbb
lds
int
out
loop
sahf
loop
lock
adc
out
test
mov
dec
gs
imul
xor
pop
test
test
inc
sbb
inc
aas
and
mov
ret
sub
mov
cli
xchg
mov
xor
dec
add
mov
popa
jecxz
out
mov
out
and
int3
inc
fucomip
daa
dec
pop
mov
aaa
out
push
dec
adc
push
pusha
jns
xchg
sti
es
test
jne
out
push
xor
jnp
xchg
repnz
cmp
add
lea
fisttps
jnp
dec
popa
clc
xchg
test
or
dec
lcall
push
add
and
std
mulb
jo
pop
das
addb
mov
repz
in
stc
push
push
jp
insl
push
icebp
inc
movsb
aam
push
daa
or
or
cli
clc
xor
cmp
and
add
push
fs
push
stos
stos
imul
aad
in
adc
addr16
adc
rclb
divb
mov
inc
cld
mov
lahf
inc
cmp
cwtl
rorb
sub
into
mov
sbb
push
xchg
cmp
fwait
adc
ja
and
mov
mul
cmpsb
imul
hlt
dec
dec
lcall
mov
xchg
xchg
push
popf
jge
out
addr16
jle
in
jmp
cli
jns
dec
mulb
lcall
insb
dec
sub
mov
push
adc
dec
shll
cmp
int3
push
mov
frstor
xchg
out
cmp
stos
pop
adc
or
cmp
rorb
jbe
rcl
pop
xchg
dec
sbb
cmpsb
ret
lock
subb
aas
xor
xchg
test
sbb
enter
cmpb
lods
mov
add
shll
jecxz
xor
push
je
outsl
push
aam
pop
out
fs
hlt
por
push
dec
sbb
adc
adc
into
push
es
mov
shlb
pusha
add
or
jl
pop
mov
inc
xor
sbb
and
inc
push
lfs
dec
and
inc
orb
xorl
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
or
stos
jle
jl
jle
adc
inc
insl
cmp
movsb
adc
iret
stc
lret
push
lahf
fnstcw
push
cmc
xchg
data16
popf
scas
pop
mov
shlb
repnz
mov
dec
movl
sbb
inc
lock
shlb
clc
movsb
dec
jecxz
in
inc
lods
in
and
insb
push
dec
xchg
mov
jg
sti
imul
jecxz
not
adc
repnz
or
in
xor
jecxz
sub
mov
ficoml
leavew
jl
jno
rcrb
mov
popa
xorb
adc
test
sbb
jb
ret
out
sub
xor
dec
xor
ud0
jns
lds
or
fs
pusha
je
cs
dec
fwait
xor
sti
cli
outsw
push
pushf
decb
lret
push
sbb
lret
pop
xchg
xor
fsub
scas
lods
pusha
pop
add
pushf
or
sub
lods
mov
mov
mov
test
cmp
cmp
loopne
lret
pop
test
inc
aam
aaa
push
in
popf
mov
push
push
sub
cli
sub
push
jge
sub
hlt
roll
sbb
shrl
xchg
fidivs
push
mov
pop
rcrl
add
test
xchg
cmp
cmp
mov
aaa
fcoms
and
and
adc
xchg
fsubl
ret
inc
jmp
mov
push
push
or
sub
out
enter
rcr
xor
pop
in
aaa
pop
xchg
adc
js
insb
in
sbb
adc
in
test
out
cwtl
mov
dec
pop
mov
push
mov
xor
push
cmp
jg
jmp
xor
lock
movsl
cwtl
int
or
shll
ret
lea
jo
push
mov
fstl
pop
mov
pop
cmpb
cmp
pop
cld
mov
xchg
push
nop
pop
sbb
outsl
frstor
and
cltd
insl
sub
jmp
arpl
xchg
test
or
les
cs
popf
insb
dec
ljmp
pop
fs
lret
addr16
push
jg
xchg
icebp
push
adc
rorl
xchg
inc
in
jo
mov
or
sarb
xchg
lahf
clc
xor
dec
pushf
xchg
std
andb
lcall
mov
loope
dec
jne
dec
fwait
lods
push
pop
adc
pop
hlt
cmp
clc
jae
push
je
loop
sub
int
and
push
sub
scas
sbbl
insb
or
push
push
jle
add
mov
and
push
add
mov
scas
inc
das
xor
mov
aas
je
nop
xor
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
in
aaa
shlb
jle
sbb
mov
lods
push
mov
sub
sub
dec
pop
xchg
das
popa
jp
pop
mov
cld
test
inc
sarl
movsb
stc
mov
adc
popf
subb
push
cmp
mov
dec
xchg
xchg
push
rcll
js
test
fsubrl
fnstsw
lret
iret
push
dec
jne
ds
leave
mov
sbb
orl
cmc
dec
jbe
roll
pop
pusha
xlat
rcl
xchg
dec
andb
sbbb
mov
shr
movsb
movsb
dec
and
push
je
adc
jne
out
fucomp
jle
xor
pop
and
int3
icebp
inc
cmp
lds
aas
lea
jno
hlt
pop
pop
jnp
aam
sub
sbb
out
std
mov
das
sub
cld
xor
jb
mov
mov
xchg
stc
scas
add
inc
or
jnp
int3
and
mov
je
sbb
xchg
imulb
xchg
jg
mov
fldcw
sub
sub
mov
push
fs
lock
dec
lret
sbb
push
stos
push
data16
xchg
ret
test
cmpl
outsl
scas
aad
pop
mov
int
mov
cmp
lods
jbe
sahf
cmp
shrb
imul
fistpll
and
dec
outsl
mov
fcomps
and
test
es
cwtl
out
ljmp
adc
sbb
pop
subb
idivb
shll
pop
xchg
ja
mov
sub
mov
xchg
dec
jb
push
sbb
pop
add
outsl
shll
int3
lcall
cs
ja
imul
push
adc
jmp
cmc
loope
orl
scas
add
stc
mov
xlat
add
sub
adc
push
aas
xor
and
push
out
sti
sub
and
js
sbb
sarb
push
xchg
stc
or
inc
test
mov
or
sbb
mov
sbb
roll
sub
scas
repnz
sbb
mov
lock
pop
mov
inc
cmpsl
push
je
sub
push
xchg
aad
cmc
add
test
or
incl
pop
insl
xchg
test
jnp
dec
popa
cmp
incb
sub
mov
inc
call
test
xor
aad
or
jle
mov
sbb
sti
mov
lret
mov
js
xor
outsb
mov
adc
mov
sti
inc
push
aas
inc
vxorps
and
or
ljmp
aam
pop
lahf
push
repz
jmp
fiaddl
cmpsb
xchg
sar
mov
in
lahf
push
int3
jmp
mov
dec
mov
xor
mov
jmp
or
pop
jno
xchg
add
sub
fidivs
jle
add
add
pop
es
mov
push
jge
adc
push
push
adc
movsb
aam
nop
inc
ss
pop
adc
or
js
outsl
xchg
adc
sub
and
enter
jl
orl
dec
adc
leave
in
mov
sarl
mov
out
sub
lock
sub
mov
fwait
ja
mov
push
movsb
lods
testl
loopne
mov
dec
out
mov
cmp
out
xchg
push
push
sub
cmpsb
mov
or
rcrb
push
sar
or
cmp
adc
ljmp
test
lods
inc
sbbl
es
fisubrs
xchg
rolb
sub
and
and
stos
stc
cmp
les
xlat
test
dec
xchg
inc
push
pop
loope
inc
push
dec
repnz
out
mov
adc
jb
js
add
test
aam
xchg
pop
or
or
cli
arpl
outsl
cmpsl
xchg
mov
adc
xchg
mov
cmc
test
shrl
xlat
lret
or
dec
dec
xchg
movnti
sub
imul
mov
sbb
inc
out
nop
lret
xchg
cltd
adc
and
addr16
sahf
shrl
push
and
pop
fwait
jecxz
fcmovnu
sub
into
test
dec
rcl
xchg
xchg
sub
in
dec
cmp
je
or
int3
aaa
mov
into
inc
and
loop
daa
push
and
fs
push
aaa
sti
repnz
mov
and
decb
cs
out
jge
lods
cli
mov
inc
testb
xor
out
pop
insl
int
dec
sub
outsl
pop
push
jae
stos
mov
movsb
xor
dec
sbb
in
negb
mov
rcrl
inc
cli
arpl
cli
fisubs
stos
sti
xchg
pop
sub
cmp
or
xchg
jp
mov
mov
add
mov
jae
test
mov
or
jb
push
popf
into
and
call
test
aam
and
inc
loope
push
push
testb
mov
sti
lods
sbb
mov
inc
scas
mov
pop
pop
std
stc
paddsb
or
xchg
aaa
fcmovu
ja
sbb
cmp
mov
cmp
pushf
fwait
sbb
pop
xchg
cmp
add
xchg
add
push
sub
mov
jp
adc
lcall
cmp
pop
test
xor
lret
aaa
inc
mov
insb
mov
dec
xchg
std
dec
ss
pop
inc
mull
es
and
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
cs
sub
mov
jle
jl
jle
inc
cmc
mov
mov
sbbl
mov
mov
int
adc
nop
lock
xchg
add
pop
mov
mov
cmp
mov
xlat
cmpsl
adc
test
adc
jp
repnz
adc
cmp
lret
sub
and
dec
push
push
or
xchg
pop
or
ret
aaa
add
das
shrl
mov
bound
push
js
xchg
cli
stc
pop
mov
pop
dec
loopne
dec
xlat
sub
pop
inc
mov
int
das
xchg
mov
jbe
jge
lods
rorb
insl
mov
fisubrs
jo
loop
outsl
into
adc
and
dec
imul
test
xor
enter
xor
inc
addb
inc
pop
fwait
enter
xor
mov
adc
mov
int3
push
jle
mov
outsb
or
dec
std
xchg
leave
push
adc
dec
jo
push
sahf
mov
add
lahf
fidivrl
and
jnp
mov
movsl
dec
mov
add
and
inc
int
cmpsb
xchg
or
cwtl
inc
xchg
push
push
imul
lret
rcl
dec
aas
mov
dec
adc
adcl
cmpb
mov
xor
mov
mull
dec
shlw
push
sbb
shrl
xor
orb
pushf
aas
adc
cli
stc
lret
jge
in
adc
imul
and
or
inc
sahf
rcll
iret
fldcw
inc
es
lahf
scas
xchg
andb
int
pushf
fstl
add
dec
jb
into
sbb
mov
mov
xor
push
decb
push
xchg
fdivp
test
inc
mov
les
push
je
push
incl
xchg
aas
xchg
outsl
je
pop
mov
inc
in
sahf
leave
mov
or
mov
cmc
sahf
mov
test
movsl
leave
gs
fldt
sbb
dec
jnp
jae
stos
stc
sub
mov
jb
dec
mov
sub
inc
or
inc
insb
scas
pop
lret
sub
icebp
je
sarb
inc
pop
sbb
addr16
repz
ja
pop
pushf
data16
pop
mov
cmp
arpl
mov
movsl
fcomps
inc
inc
int3
xchg
addr16
int3
into
sbb
leave
jecxz
popa
cmp
cmp
pushf
lea
lahf
jg
dec
jb
sbb
add
add
pop
push
outsb
ret
fsts
js
cmp
icebp
sbb
cmpsl
test
push
mov
fnstenv
push
sbb
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
bound
pop
fldl
push
popf
or
sub
cmp
in
xor
pop
and
push
in
pop
repnz
jl
stos
adc
pop
jecxz
xchg
xchg
cmp
push
js
inc
popa
mov
loop
insb
fdivr
push
leave
addb
xchg
push
xchg
std
cld
lock
in
adc
fdivrl
push
inc
loopne
jl
stos
daa
add
xchg
test
pop
lds
cs
arpl
add
inc
and
xchg
std
dec
addr16
push
adc
jge
dec
fwait
je
lods
test
cwtl
int
sbb
dec
nop
aas
pop
mov
and
int
test
jl
mov
cmp
ds
sahf
xor
cmpsb
inc
mov
outsl
cmc
jbe
pop
pop
in
jns
dec
insl
mov
cld
arpl
mov
dec
or
cmpsl
push
rcl
xchg
jl
push
xor
jmp
jmp
std
lret
das
imul
xorb
sti
jnp
es
cmpsb
pusha
and
xchg
test
pop
add
ds
mov
ds
jbe
mov
adc
aam
push
fcmovne
mov
add
insb
insb
xor
pop
js
xchg
add
arpl
decl
imul
aaa
add
or
jb
imul
pop
and
pusha
arpl
add
repz
push
mov
xchg
cmp
fcomps
in
rol
scas
cmp
or
adc
scas
or
in
pop
or
cmp
bound
popa
ja
or
sbb
pop
inc
cmp
call
push
inc
add
mov
lods
fsubl
xchg
jmp
sbb
mov
fcom
pop
mov
ja
inc
test
ds
ljmp
mov
jp
mov
cmpsb
push
lret
push
mov
sub
xchg
cmpsb
mov
mov
std
fstl
arpl
inc
mov
mov
cmp
fdivl
ret
cli
popa
dec
or
sbb
xchg
nop
fstpt
fsubs
pop
bound
mov
jecxz
xor
enter
xor
xor
stc
cmp
sub
sarb
fiadds
stos
xchg
push
xchg
or
xchg
mov
or
mov
sti
mov
sbb
js
add
imul
sub
cwtl
mov
nop
aad
and
jb
mov
dec
adc
test
xor
or
and
and
sti
sub
dec
aad
jg
cmp
mov
dec
xchg
mov
cmp
incl
jmp
add
fdivl
lock
xchg
pop
xchg
sahf
enter
jle
scas
jl
jle
and
jle
pop
xor
push
or
mov
int
add
push
loope
mov
inc
mov
cmp
scas
pushf
sub
and
xor
cmp
pop
gs
and
and
add
pop
mov
sbb
xlat
repnz
push
sarl
roll
rolb
notl
loop
jno
sbb
adc
jno
mov
mov
sbb
and
ja
mov
ja
imul
and
pop
lret
stos
or
xor
xchg
test
outsb
test
shrb
mov
inc
das
jecxz
int
les
jno
mov
gs
cmpsb
xchg
dec
or
lret
jo
int3
xor
pop
gs
adc
not
mov
xchg
adc
stc
and
fistl
push
out
xor
into
stos
sub
pop
cwtl
push
push
imul
in
fldcw
inc
in
inc
imul
cld
jno
mov
lods
aas
cmp
dec
jb
mov
fimuls
or
mov
xor
add
pop
xchg
dec
icebp
jo
fchs
lods
fs
mov
or
mov
mov
jne
sbb
xchg
je
pop
xor
pop
jns
je
jb
xchg
loopne
dec
test
mov
popf
mov
mov
movsl
ret
add
fprem1
arpl
push
and
loope
outsb
cmpsb
add
or
fisttps
dec
cmp
mov
popl
jbe
scas
out
lds
mov
fwait
shrl
iret
mov
mov
movhps
cli
stos
xor
out
cmpsl
xchg
mov
mov
and
add
les
ljmp
xchg
mov
sub
add
dec
push
movsb
mov
mov
inc
jbe
add
xchg
add
int
in
rcrb
outsl
add
mov
ret
xchg
int
sub
mov
push
aam
daa
les
shr
jne
xlat
inc
sbb
daa
or
stos
jmp
mov
sbb
cs
add
xor
lods
fisttpl
mov
nop
dec
add
xchg
je
xor
push
xchg
mov
push
lahf
mov
test
subb
or
stos
add
mov
inc
jl
jmp
xchg
pop
cmpb
add
add
lea
mov
push
mov
aad
adc
jmp
je
push
push
lock
outsb
dec
mov
test
mov
jle
mov
arpl
or
push
jle
cmp
jl
iret
xor
mov
xor
es
inc
iret
and
sarb
popa
pop
inc
inc
std
sahf
aad
inc
mov
jp
xchg
inc
mov
or
fcoml
mov
in
jae
cmp
retw
xchg
cltd
cmp
mov
jno
mov
jle
adc
mov
jmp
mov
jl
popf
fdivrl
jl
fcomps
out
scas
mov
dec
out
gs
enter
imul
faddl
shlb
and
push
in
sahf
sub
in
cmpsb
pop
xor
sbb
or
stc
jmp
jno
mov
cwtl
lahf
pop
scas
inc
pop
lret
out
cmp
adc
ja
mov
adc
imul
ja
leave
xor
adc
stos
popa
cmp
push
shlb
add
popa
push
dec
outsl
pop
bswap
js
jmp
enter
loopne
xchg
sub
sbb
mov
add
jno
jge
cli
cwtl
jmp
or
fidivrl
outsl
lods
mov
arpl
divl
mov
pushf
rcll
inc
adc
pop
mov
push
addl
jecxz
scas
adc
and
lock
in
sbb
pop
in
sbb
cmp
xchg
mov
or
inc
xchg
hlt
dec
fs
repnz
sbb
inc
sbb
scas
push
lods
inc
pusha
adc
dec
add
pop
adc
lcall
xor
mov
cmp
push
loopne
imul
xor
mov
fsubrp
mov
mov
inc
leave
call
pop
std
xor
push
aam
scas
mov
and
dec
and
xchg
mov
cmp
popa
adc
xor
add
mov
push
mov
push
jle,pn
and
mov
push
cmp
clc
stos
xchg
popa
jg
outsb
push
ja
rclb
ljmp
inc
orl
or
loope
and
fistpl
outsb
cwtl
sbb
sbb
test
sar
sbbb
mov
add
out
or
fimuls
bound
push
adc
loopne
jle
push
stos
xchg
loop
jl
arpl
enter
and
push
and
jmp
loopne
push
mov
add
and
mov
popl
pop
clc
cmc
inc
push
jbe
shl
cmp
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
xchg
outsl
sbb
jle
jl
jle
push
cltd
cmp
outsl
xor
test
aaa
out
ret
and
cmpsb
jl
inc
out
xor
jae
mov
fsts
lods
and
sbb
mov
mov
icebp
and
push
sar
jp
iret
outsl
sub
or
arpl
test
push
sti
pop
ja
dec
aas
pop
ret
insl
imul
bound
push
testl
adc
les
cmp
sahf
push
daa
push
jp
pop
jmp
or
enter
inc
jle
mov
jmp
add
push
cltd
jbe
jae
rcrl
or
add
testb
fcompl
ror
inc
ss
jae
call
lds
sbbb
xchg
xchg
push
out
jl
outsl
ret
xlat
movsl
iret
mov
cmpl
iret
pop
stc
xchg
and
out
and
or
cmp
mov
cmc
out
in
stos
addr16
addl
pop
inc
and
adc
mov
and
xor
bound
lock
cmp
lahf
lds
push
sub
inc
pushf
sub
cmp
out
rcrl
jnp
inc
sub
jae
mov
and
pushaw
test
call
push
jge
aam
sub
aas
call
inc
insb
pop
pushf
xchg
scas
dec
aam
ljmp
xor
push
pop
cmpsl
into
fwait
xor
repz
into
loopne
mov
cltd
jno
cmp
sbb
jb
sbb
sbb
and
popf
aaa
int3
and
jmp
xchg
cmp
adc
lahf
fwait
add
int3
aad
aaa
mov
xchg
shlb
clc
mov
in
cltd
cltd
pusha
jl
sub
aaa
scas
push
pop
inc
cmp
add
cmp
lret
add
int
xchg
mov
inc
ss
push
pop
pop
mov
sbb
cwtl
test
out
jp
add
mov
insb
repz
cwtl
in
loope
fwait
fwait
incb
push
and
icebp
sbb
inc
xchg
dec
lds
adc
mov
test
insb
add
sub
or
push
add
and
dec
pop
xor
arpl
lds
cmpsb
pop
loopne
roll
out
inc
rolb
xchg
jge,pt
xor
leave
cmc
sbb
test
xlat
pop
iret
lret
lods
nop
adc
sub
push
out
dec
adc
push
jbe
das
fiadds
ljmp
sarl
and
lods
pop
in
aas
mov
faddl
cmpsb
dec
gs
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
pop
test
dec
inc
jle
scas
jl
jle
mov
dec
fiadds
mov
fnstcw
movsl
nop
stos
hlt
xchg
sbb
sbb
mov
dec
xchg
mov
mov
xchg
sub
sbb
rcll
mov
push
stc
sub
pusha
int3
lahf
inc
imul
lcall
and
dec
adc
xchg
xor
inc
pop
sbb
rclb
jb
pushf
and
mov
fwait
push
sub
sub
cmp
repnz
daa
jmp
loope
mov
xor
push
inc
xlat
pop
mov
mov
adc
fidivrs
lods
dec
adc
popa
stc
insl
repz
mov
pop
jp
pushf
loop
sbb
xchg
dec
and
dec
pop
or
fisubs
out
dec
mov
pop
popf
xchg
jg
cmpsl
cmp
frstor
nop
cltd
fwait
xor
sti
punpcklwd
aas
jns
leave
pop
rorl
adc
inc
or
fxch
into
mov
adc
inc
mov
out
aas
stos
shll
loop
add
sub
enter
pop
roll
test
mov
in
jmp
pop
mov
inc
rcrl
mov
addr16
jl
arpl
cmpsb
lea
iret
jecxz
dec
cmpb
push
inc
js
jnp
shrb
test
leave
inc
push
dec
and
scas
sbb
push
mov
push
jae
lea
jl
xchg
cmp
jno
int
ss
jmp
bound
ds
mov
push
gs
lret
andl
das
repnz
push
rol
jp
mov
adc
inc
mov
sti
lods
jo
xchg
flds
int
or
xor
jbe
je
xchg
pop
ret
fldenv
shl
sub
xor
sub
pop
imul
mov
mov
ss
iret
or
push
data16
mov
mov
ss
out
sub
jp
cli
mov
or
pop
dec
fcmovnbe
or
in
jge
repz
or
imul
or
push
mov
incb
dec
cmc
test
loopne
ja
mov
adc
inc
push
cmp
xchg
cmp
push
dec
out
add
mov
xchg
sub
insl
sub
out
mov
test
aaa
mov
shrb
int3
inc
xchg
jae
sbb
movsb
or
xor
push
or
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
xor
mov
inc
jle
movsb
jg
jle
or
inc
or
xor
outsb
cmp
and
or
imulb
les
inc
imul
imul
mov
pop
and
sti
push
std
jno
cmp
dec
cs
jne
xchg
mov
xchg
out
out
fnstsw
mov
push
pop
adc
shll
xchg
pop
outsb
cwtl
or
dec
sbb
mov
cltd
lret
mov
loopne
dec
mov
inc
dec
mov
mov
call
jp
dec
mov
repnz
and
or
hlt
out
add
loop
cmp
rcll
xchg
adc
xchg
cli
in
out
dec
inc
enter
xchg
jns
nop
cmp
lea
mov
mov
mov
adc
mov
sbb
imul
fisubl
dec
sub
jge
xchg
leave
adc
dec
mov
jno
mov
pushf
dec
jecxz
xor
lock
rolb
cmpsl
inc
mov
mov
sti
insb
ja
fcoml
pop
xor
mov
jge
mov
mov
or
fwait
in
cmp
mov
pop
lret
pop
addb
xor
cmp
jne
xor
xchg
call
loope
mov
bound
xchg
inc
in
cmpsl
ss
inc
xlat
cmp
lret
dec
sbb
clc
in
jle
pop
xlat
fcoml
mov
adc
shlb
in
lahf
outsl
popf
mov
mov
pop
push
push
lcall
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
and
jle
movsb
jg
jle
push
dec
adc
adc
push
xchg
mov
ret
in
inc
sbb
xlat
mov
incb
mov
mov
or
loop
cli
lret
cwtl
cmpsb
xchg
sbb
xor
not
pop
popa
cwtl
push
sti
jno
jb
push
movsl
dec
xchg
mov
xor
mov
stc
xchg
lahf
and
jmp
ljmp
inc
push
push
cld
push
mov
int
cltd
pop
pop
push
lcall
repz
into
xor
lahf
fisttpl
shrl
fnsave
dec
and
xchg
sbb
sub
movsl
xlat
push
lcall
movsl
inc
mov
out
inc
mov
outsb
mov
push
adc
mov
jo
call
jg
mov
xor
pop
enter
jb
andb
orl
dec
dec
iret
rcrl
mov
mov
clc
jne
and
dec
dec
mov
adc
repnz
scas
lahf
push
xchg
or
jo
cltd
lds
jmp
xor
push
sbb
lods
mov
test
stc
cld
mov
adc
pushf
movsb
dec
aaa
mov
mov
xchg
mov
js
ret
push
rcr
push
cmp
icebp
lret
sbb
mov
sub
and
repnz
dec
out
testl
test
cld
pushf
inc
popl
les
movsb
outsb
xchg
in
jecxz
out
mov
push
lock
shll
adc
jnp
and
sub
call
or
inc
cld
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
jp
or
add
decb
fldcw
sub
mov
fsubrl
movsb
repz
andb
lcall
ds
jns
jbe
push
test
dec
lret
addr16
mov
inc
out
mov
das
out
leave
nop
scas
ss
cmp
xor
hlt
mov
jecxz
and
imul
push
adc
push
push
pop
fucomip
mov
and
les
and
ret
cmp
mov
pop
sbbl
movsb
cmp
sarl
jl
add
and
mov
ja
popa
sbbl
popf
mov
mov
xchg
xor
insb
out
clc
inc
inc
mov
dec
mov
inc
add
inc
cmp
sub
jmp
or
mov
loope
inc
int3
les
mov
inc
sti
push
and
shlb
add
push
pusha
in
jle
lcall
dec
loope
add
add
inc
sbb
out
nop
scas
sbb
movsb
inc
shlb
popa
mov
inc
and
inc
test
repnz
and
adc
mov
jp
data16
dec
outsl
xor
push
jne
test
push
sub
test
jge,pn
adc
mov
sbb
rolb
nop
sar
das
pop
or
cmp
inc
bound
push
jle
and
fsubl
cmp
adc
pop
cs
out
pop
lock
mov
jbe
sub
push
or
popf
cld
push
push
jnp
jle
add
negb
jecxz
adc
add
data16
xchg
pop
push
mov
incl
and
icebp
sbb
testw
add
add
lahf
pop
cmp
shll
fcmovbe
jne
hlt
fwait
pop
pushf
push
sub
push
inc
cmp
xorl
xor
int3
cwtl
test
xor
mov
add
adc
mov
mov
push
out
out
roll
add
push
bound
jne
enter
in
mov
mov
lods
sub
idiv
xor
xlat
int3
mov
stos
movsb
bound
dec
inc
test
mov
xchg
xor
jle
cmp
xchg
bound
lock
cli
jbe
xchg
cvttps2pi
adcl
fisttps
aaa
cmp
and
out
and
mulb
pop
repnz
and
fs
in
lods
out
fcomps
mov
xor
shrl
and
fldcw
movsb
out
aaa
or
test
cmp
adc
adc
jo
out
orb
or
pop
xchg
orb
cld
shrb
mov
fdivr
clc
test
dec
push
add
fiadds
jo
stos
lret
pop
inc
pop
and
mov
mov
subl
inc
in
mov
lret
or
mov
push
adc
insb
lcall
add
add
subl
roll
pushf
mov
add
add
dec
aad
mov
ret
adc
fcomp
push
jge
outsb
cmp
out
xor
xchg
push
xor
jge
cmp
mov
lods
cmp
push
aam
cwtl
aas
push
cmp
xorl
push
jp
push
inc
icebp
adc
test
push
fcoms
shlb
mov
es
rorl
out
inc
mov
lret
adc
imul
add
mov
inc
push
cltd
push
push
loopne
or
jbe
mov
aad
add
pop
inc
mov
jo
int3
adc
mov
in
test
add
mov
xor
hlt
nopl
out
jae
fnclex
pop
jne
std
into
outsl
insl
adc
push
imul
push
ret
jns
dec
mov
call
xchg
out
les
push
inc
push
imul
mov
xlat
jl
bound
and
add
mov
inc
mov
jb
add
out
and
add
add
inc
or
pop
dec
or
test
add
add
xchg
aaa
pop
push
cmp
in
sbb
adc
jecxz
idivb
inc
add
mov
arpl
icebp
leave
mov
cmp
push
std
push
push
or
ss
pop
mov
sub
push
lahf
inc
push
cmp
inc
in
pop
sahf
or
clc
scas
add
outsl
dec
cbtw
jmp
xchg
push
aad
dec
fsubrl
aaa
orl
test
or
ja
mov
jmp
aas
call
xchg
andl
push
fisttpl
xchg
inc
xchg
ja
cmp
arpl
jmp
push
popf
insb
mov
fidivl
sbb
test
add
pushf
cmp
test
sti
mov
jns
adc
cltd
out
std
push
arpl
jae
imul
push
adc
adc
cmpl
jge
in
add
add
cmc
insl
cmc
out
lcall
enter
mov
add
add
adc
pop
add
adc
push
and
inc
loope
cli
ja
dec
xor
fimuls
orb
mov
fcoms
cmpl
xchg
push
aad
xor
cmp
mov
xchg
xor
std
test
fs
imul
loope
cmp
clc
pop
psrld
sub
loopw
and
movsl
mov
in
jge
aam
lods
and
xchg
les
cmp
adc
xlat
lea
es
sbb
pop
out
iret
insb
lods
cmp
and
pop
jmp
sbb
nop
inc
cmpsl
mov
cs
or
cltd
push
loop
xchg
movsb
mov
leave
mov
adc
stos
stc
leave
jecxz
sub
add
iret
cld
dec
sbb
cmpsb
cmp
rorl
jb
jo
mov
pop
lret
sahf
sub
jecxz
inc
data16
or
scas
fnstenv
mov
cmp
inc
adc
pushf
xchg
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
add
pop
jp
jp
stos
lds
inc
and
imul
outsl
ret
out
lahf
mov
jne
es
add
add
rolb
xchg
nop
repz
sub
push
fisubrs
ss
frstor
jp
insl
in
repz
mov
jecxz
xchg
cmp
sbbb
shrl
xchg
push
sbb
jl
stos
add
outsb
pop
out
cmpsb
mov
fldt
jg
or
xor
jb
mov
mov
inc
push
push
xor
push
in
jo,pt
dec
xchg
mov
out
inc
mov
cmpsb
cs
and
xchg
stos
push
dec
popa
cmp
cmp
shlb
push
jo
cmp
mov
cmp
sti
aas
sbb
mov
mov
or
jge
or
in
sbb
arpl
xor
outsl
lahf
cli
sub
add
mov
fadds
add
or
and
scas
sti
jle
pop
push
pop
cli
pop
jg
fadds
add
push
cwtl
repz
mov
int
cli
pushl
cmp
std
shl
aas
nop
jge
into
cwtl
push
les
sbb
mov
push
sub
xchg
xor
adc
mov
fsubrs
push
sbb
cmp
lock
arpl
xor
les
xchg
xchg
push
mov
imul
sbbb
cmpsl
dec
cmp
push
adc
cmp
xchg
incb
movsb
jne
jp
push
shll
add
pop
xchg
pushf
add
xacquire
jae
ds
xchg
push
stc
scas
lods
mov
or
dec
cmpsb
std
mov
mov
mov
loopne
ds
aas
dec
aam
mov
mov
je
pop
inc
lcall
add
pop
add
xchg
movsb
fisubs
dec
adc
in
inc
loopne
mov
dec
divb
pushf
nop
std
jg
loope
adc
mov
sahf
and
lds
add
add
negl
arpl
loop
push
add
add
add
scas
inc
or
shlb
lock
daa
push
aad
popa
pop
stos
jp
xor
jns
fimull
hlt
stos
int
std
fimull
test
stos
imul
stos
ja
vpunpcklbw
push
mov
cmp
dec
lods
divl
pop
in
dec
jmp
je
out
int3
shr
dec
or
adc
mov
popl
mov
inc
mov
js
add
loop
mov
sub
test
sbb
jg
daa
scas
lahf
mov
sahf
sar
adc
adc
and
lret
and
insl
xchg
mov
cwtl
cmp
movsb
clc
jno
stos
stc
mov
or
xchg
cmpsl
push
push
xor
and
inc
pop
inc
or
popa
mov
mov
xchg
test
and
gs
push
dec
sub
pop
push
inc
movsb
cmp
and
or
add
add
push
jl
jle
insb
out
adc
fildl
add
das
ret
mov
sbb
lcall
sub
clc
loopne
fadds
push
push
push
pushf
sbb
or
pop
fsts
fwait
mov
mov
mov
jmp
xor
pop
call
lret
pop
test
rep
idiv
pop
scas
cltd
cmp
movsl
ror
cmp
cmc
lds
mov
pop
iret
lods
out
mov
sbb
jp
div
decb
xchg
jmp
and
mov
pop
jno
jmp
lcall
hlt
inc
or
xchg
push
mov
jmp
test
push
in
insl
lcall
pop
lods
mov
sbb
clc
movsb
cmp
repnz
mov
jno
imul
loope
or
xchg
mov
cmp
sbb
sbb
inc
into
scas
mov
in
aad
cmp
cwtl
lcall
rcrb
pushf
cmp
add
add
fwait
mov
in
xor
adc
push
faddl
add
adc
mov
shlb
mov
out
push
push
inc
and
push
sbbb
lods
adc
loop
adc
inc
ss
mull
push
mov
adc
add
fistps
nop
and
stos
jno
inc
insb
add
into
nop
roll
addb
lea
in
mov
lock
shll
cld
cmp
fucomp
sub
sbb
xor
aas
nop
jg
jp
pop
nop
pop
lds
in
cwtl
jne
adcb
fdivrp
add
mov
push
popa
mov
clc
or
inc
sub
xlat
sti
popf
arpl
aas
bound
and
fs
in
jne
xchg
imul
out
pushf
pop
jmp
add
sub
jecxz
icebp
or
cmp
ljmp
pop
das
in
lock
arpl
sub
add
outsb
xchg
add
aaa
data16
jne
mov
lcall
add
add
mov
dec
mov
inc
stos
mov
xlat
jns
mov
push
fsubrp
leave
loope
xor
nop
loopne
sarb
push
push
out
cmp
push
out
scas
lcall
inc
push
push
bound
add
mov
gs
push
fidivrl
pop
test
mov
push
repnz
call
lds
ja
orl
push
dec
ljmp
push
cmpsl
pop
sub
lock
push
fs
dec
cwtl
rolb
sub
nop
and
pop
mov
add
fmull
xchg
data16
sbb
push
sbb
popa
xchg
add
daa
repz
xor
in
inc
lcall
cmp
adc
and
dec
mov
adc
int3
dec
push
test
ret
mov
aas
stc
mov
stos
data16
and
nop
lahf
dec
jb
sub
jb
mov
add
jnp
add
jnp
sti
xchg
lahf
mov
inc
scas
sbb
add
add
push
ret
and
cmpsl
hlt
inc
cmp
stos
fwait
lods
fdivr
shlb
cmp
inc
jae
xor
and
mov
out
inc
outsl
stc
lea
mov
shll
xchg
jmp
rol
out
int3
mov
mov
das
push
stc
push
aaa
test
out
xlat
push
inc
sub
mov
mov
xchg
cmp
lret
cmpl
add
stc
mov
test
mov
push
test
jnp
mov
adc
push
stos
fistpll
popf
inc
bound
and
std
mov
clc
lods
lahf
insb
push
lret
out
lods
sub
out
mov
mov
mov
sub
pop
outsb
inc
pop
pop
bnd
lahf
xchg
xchg
insl
sub
mov
mov
lods
movl
push
jge
mov
cmpsb
ucomiss
aam
cwtl
push
stc
add
add
pop
sarl
mov
add
add
add
mov
jge
scas
dec
mov
cmp
fs
xor
add
orl
pop
pop
call
imul
sbb
sbb
je
push
fwait
inc
adcb
lret
repz
mov
inc
sarb
and
stos
pushf
mov
mov
push
cld
xchg
xor
add
adc
push
mov
cs
push
js
int3
add
popf
cmpsb
add
mov
mov
sub
outsb
push
xlat
mov
adc
jbe
jle
jg
jns
aad
mov
aaa
push
insb
ret
aam
mov
xchg
rcrl
push
cmpsb
mov
fimull
lret
ja
or
inc
lock
ljmp
mov
rorb
mov
mov
inc
fldl
jl
out
js
aam
dec
cwtl
test
sbb
mov
mov
add
out
push
addr16
cmp
in
add
add
repz
std
repz
cmp
mov
loopne
add
pop
test
mov
shl
jmp
lods
mov
outsl
jbe
fiadds
inc
test
add
mov
mov
rorl
jecxz
xchg
divl
xor
pusha
test
mov
xchg
and
jns
in
imul
nop
repz
dec
xchg
fwait
push
mov
xor
inc
mulb
and
fcmovnbe
jae
add
iret
adcb
xchg
lret
or
jmp
xchg
outsb
or
aas
aad
movsb
ja
adc
rol
push
pop
repnz
sub
mov
test
andb
xlat
mov
mov
lret
push
pop
cld
lret
mov
mov
filds
mov
daa
push
mov
jl
dec
lret
and
imul
fidivs
in
gs
test
movsl
fidivrs
lock
inc
in
ret
or
ror
cmp
ficoms
jecxz
adcb
add
xchg
ds
in
sub
cmp
arpl
je
frstor
add
daa
push
push
jle
and
lahf
mov
and
sub
pop
mov
inc
ljmp
negl
iret
jle
pushf
lea
inc
into
cmc
mov
lock
sbb
stos
test
outsb
add
lock
aam
stc
test
mov
cmp
icebp
jns
loope
gs
sbb
insl
lahf
add
adc
add
add
adc
cmpsl
mov
and
mov
out
pop
jne
xchg
loopne
pop
movsb
movsb
sub
push
lret
inc
dec
or
push
cmpsl
addr16
and
push
xchg
pop
xlat
roll
mov
add
prefetchw
mov
push
loopne
outsl
adc
dec
test
iret
sbb
xchg
lcall
or
add
sub
imul
pop
scas
ljmp
loope
cmp
lcall
sub
in
add
insl
lcall
mov
inc
sub
push
and
sub
add
add
mov
adc
sub
cli
pop
lahf
jae
xchg
mov
lahf
pop
imul
xchg
xchg
push
add
mov
and
push
or
inc
mov
je
cmpsb
push
outsl
arpl
adc
lahf
out
cs
pop
gs
bound
adc
mov
or
sub
imul
cmp
xchg
inc
ja
push
jae
or
das
mulb
and
loopne
mov
dec
jnp
sub
cs
sbb
imul
or
pop
sub
cmc
dec
mov
lds
stc
loopne
jl
lahf
mov
lahf
cwtl
jmp
mov
cmp
push
mov
sub
jmp
aas
push
pushl
xchg
mov
and
push
jecxz
icebp
pop
xchg
mov
cmp
adc
push
mov
pop
dec
cmc
cwtl
dec
movsl
int3
mov
daa
xor
inc
jge
fsubrs
adc
pop
js
test
sarb
xchg
lods
add
add
xchg
in
mov
incl
rcr
cld
xlat
call
add
ret
and
sbb
lea
push
cmp
sti
dec
dec
push
mov
cld
xchg
add
jge
ret
jbe
push
fnsave
out
jno
push
adcb
js
test
lds
aas
fsub
ljmp
stc
adc
das
jo
xchg
push
popf
incl
out
jl
movsb
push
shll
mov
xor
adc
sbb
cli
dec
es
xor
adc
lret
mov
divl
decb
inc
out
dec
cmpsb
sahf
or
dec
nop
cltd
push
sbb
mov
xchg
sub
les
aas
out
ret
gs
int
dec
mov
mov
test
sub
or
dec
cmpb
ds
mov
mov
cmp
mov
sbb
jl
stc
adc
outsl
stos
aaa
cwtl
mov
out
subl
xchg
in
xchg
mov
xabort
std
in
shl
iret
loop
lods
fadd
dec
add
add
sub
in
negl
sub
movsb
in
jl
xor
add
sub
add
adc
into
mov
mov
xchg
cmp
or
mov
xchg
mov
mov
xor
inc
pop
mov
and
push
xor
adc
sub
out
xchg
pop
inc
sub
sar
scas
enter
cmc
std
jae
xlat
adc
jns
mov
aam
inc
cmp
jo
int3
idivl
xor
cmp
push
lds
mov
jle
mov
popf
fwait
out
add
mov
mov
sub
inc
shll
pop
jmp
sub
stos
clc
popa
imulb
dec
fldcw
or
add
sub
rorb
test
sub
mov
or
xchg
add
xor
push
xchg
dec
cmp
pop
push
imul
arpl
ja
adc
mov
pop
icebp
int3
das
push
inc
es
stc
stos
jno
dec
add
add
mov
stc
dec
push
fsubl
loope
in
add
popf
insb
add
out
fucomip
nop
jbe
add
dec
jae
xor
inc
xor
dec
dec
mov
jmp
cmp
fisubrs
loope
in
fmul
out
in
sbb
pop
cmp
jbe
cmp
pop
adc
xchg
jo
mov
sub
xor
loopne
or
cmp
mov
sub
shrl
cmp
bound
xor
sbb
iret
fs
xor
xlat
js
pop
jnp
xor
mov
or
aam
repz
enter
xchg
jg
test
sub
dec
ja
xor
mov
movsl
ret
jmp
addr16
adc
cld
dec
lahf
mov
cmc
inc
pushf
push
push
cmp
push
jecxz
cs
pop
shlb
mov
lds
sub
popf
les
mov
pop
adc
cmp
les
add
lods
fimuls
inc
in
loope
add
add
adc
push
push
push
mov
or
add
add
mov
push
jecxz
testl
out
mov
arpl
pop
mov
and
push
adc
rorb
jp
repnz
ljmp
stos
add
repz
sub
pop
ret
arpl
loope
sub
stc
cmp
loopne
dec
cmp
jmp
shl
push
mov
xor
and
negb
add
shll
fwait
mov
fisubrs
out
sbb
and
in
incl
sub
mov
jmp
out
mov
push
mov
adc
xchg
enter
mov
adc
or
in
inc
imul
cmp
sbb
inc
jl
fdivrs
xchg
ja
call
rcl
xchg
jns
dec
sbb
cli
je
mov
cmpsb
pop
jbe
cmp
mov
push
mov
test
mov
inc
es
dec
sub
inc
mov
into
jp
add
add
repnz
add
pop
lcall
les
bound
inc
out
add
cmp
xor
pushf
cs
push
sbb
cs
push
fs
or
movsl
fists
cltd
push
hlt
xchg
hlt
add
aaa
repnz
jmp
dec
int3
mov
adc
shrl
jae
cs
mov
adc
sarl
sub
movsb
roll
sub
leave
clc
xor
shl
lods
sub
sub
loop
sarl
mov
out
push
test
imul
sub
mov
fwait
out
adc
test
xchg
cwtl
or
push
xor
xchg
push
push
push
push
scas
mov
mov
roll
mov
mov
mov
cli
aad
mov
add
jle
jns
aaa
pushf
jno
aad
pop
sti
and
xor
pop
mov
jae
shlb
ja
sbb
dec
sub
aad
adc
adc
add
add
mov
push
decl
fbld
add
add
enter
test
push
xchg
push
ljmp
xor
push
arpl
pop
mull
add
push
xchg
out
dec
dec
popf
les
stos
push
lods
jno
xlat
dec
les
dec
inc
movsl
fucomi
mov
push
add
in
push
lock
test
cwtl
shrl
mov
idivl
lahf
int
xchg
and
sub
adc
sbb
cs
or
cmpsl
jg
pop
push
daa
mov
jle
fistl
rorb
adc
jno
loop
fimull
sub
outsb
push
inc
mov
add
gs
mov
cltd
popa
aad
gs
jle
inc
cltd
dec
insb
div
and
inc
push
or
sbb
mov
ds
xorl
sbb
sbb
cwtl
fdivr
test
ret
icebp
insb
mov
jp
psraw
ss
shrl
popa
in
mov
and
cmp
sti
fsubp
inc
push
sub
mov
add
test
insl
cmp
insl
mov
or
jno
or
dec
out
cld
fists
idivl
pusha
shlb
lods
mov
pushf
pop
xor
adc
jle
fnsave
dec
shrl
sbb
push
dec
pop
cmp
aaa
fiadds
adc
push
scas
enter
add
push
sub
jmp
and
sbb
daa
cld
or
and
in
cmpb
filds
clc
daa
xchg
fbstp
test
testl
and
popa
test
add
push
xchg
lods
popf
push
notl
mov
inc
call
or
xchg
in
leave
pusha
lods
jge
movsl
aam
fisttpll
ret
nop
inc
lcall
push
push
aaa
mov
push
ss
or
jg
arpl
outsb
or
std
mov
xlat
adc
mov
insl
xchg
dec
add
add
outsb
xor
mov
lcall
ljmp
cmp
lock
outsb
or
sub
popa
rcll
xor
sbbl
or
loope
rolb
sbb
jo
sbb
xchg
mov
outsb
insl
mov
sub
fbstp
fistps
mov
push
xchg
stc
mov
jo
rcrb
mov
sti
nop
ja
mov
jo
sub
add
arpl
fisubrs
fcompl
or
push
xchg
mov
lods
cmc
es
xor
pop
rorl
mov
popf
ret
fists
jl
sahf
clc
lods
push
dec
mov
xor
addr16
mov
mov
push
add
fldcw
cmp
push
rolb
adc
iret
cld
call
lods
push
iret
add
dec
jno
movsb
inc
aam
js
fstpt
lods
pusha
rcrb
inc
xchg
and
xor
fwait
daa
add
mov
jle
and
push
xchg
jmp
cld
add
add
inc
ror
lock
jnp
xor
xchg
out
xor
add
popa
jno
xchg
test
adc
pusha
jl
insl
push
or
mov
cmp
and
cmp
fldt
cwtl
push
sbb
aad
prefetch
and
xchg
mov
mov
inc
fcmove
and
jns
or
inc
push
dec
sbb
add
icebp
dec
gs
jbe
data16
dec
cltd
mov
jecxz
lret
es
arpl
mov
ja
push
aas
enter
fidivrs
pop
pop
fbstp
push
insl
pusha
jo
mov
cltd
mov
pop
shrb
mov
xchg
mov
sbb
xor
mov
iret
cli
lret
adc
cmp
pop
outsl
sbb
jnp
sub
cwtl
pop
repnz
and
xchg
popf
xor
sbb
out
mov
mov
mov
movb
fwait
jo
push
or
add
and
repz
fisubs
xor
add
add
xor
frstor
jns
and
sub
rcl
mov
add
add
and
push
stc
pop
ja
and
add
push
rorb
repz
xor
aas
lret
loope
es
push
push
popf
pop
xor
mov
mov
xor
shll
outsb
shrb
push
mov
popa
fadd
movsl
cmpsl
mov
enter
rcr
push
mov
popa
rorl
adc
adcl
mov
cmp
outsl
mov
cs
push
mov
in
leave
das
sbb
and
jne
sbb
mov
and
adc
cs
lods
push
pop
sahf
sub
mov
js
aam
aam
je
sbb
ljmp
stc
add
mov
insb
call
push
mov
jbe
pop
and
js
js
cs
or
lret
mov
fcmovu
sbb
jbe
inc
pop
stos
popl
add
out
sbb
nop
mov
mov
in
add
add
sub
fstpt
push
addb
test
pop
cmp
xor
adc
add
add
fistpll
lret
out
sub
jne
or
nop
mov
xchg
sub
xor
push
fildl
sub
imull
cmpsb
in
or
jmp
push
jecxz
les
adc
lret
mov
clc
jmp
xchg
inc
loop
sub
push
dec
jns
rorb
push
sub
jnp
fidivl
sub
stc
mov
add
pop
lds
mov
call
mov
fisttpl
inc
sub
and
pop
push
jl
dec
ret
dec
inc
lret
fidivrl
sub
fsubr
inc
dec
jae
lods
cli
iret
insb
dec
int
mov
loop
jecxz
xor
or
and
aad
daa
jge
sti
or
es
mov
jge
movsl
scas
cmpsb
xchg
ja
mulb
adc
add
shrl
cmc
scas
sub
mov
push
add
add
dec
inc
fcoml
mov
cmpsb
jae
add
aam
iret
pop
ret
jno
sub
inc
outsb
pop
in
adcb
add
test
pop
or
pop
movsb
push
ljmp
mov
jmp
or
push
or
fldt
or
add
pop
test
lea
pop
add
mov
mov
xor
pushl
lsl
iret
xor
adc
cld
add
jge
xchg
sahf
and
xor
add
mov
mov
add
push
hlt
shl
mov
pop
imul
sbb
int3
movb
push
sbb
mov
sbb
xchg
lahf
cltd
out
xchg
pop
cs
or
or
pushf
mov
loopne
push
insl
push
test
out
or
call
std
fsts
inc
cmp
cmp
daa
sar
insl
clc
add
add
pusha
rorb
cmpsb
mov
jle
insl
out
add
add
adc
push
sub
sbb
xchg
movsl
les
jnp
lcall
out
pop
sti
mov
xor
push
xlat
mov
add
cld
psubsw
into
lret
sub
or
in
pop
jne
jne
fldl
in
lahf
cli
or
or
mov
sub
emms
and
fwait
insl
sub
outsb
loopne
add
ds
test
jnp
enter
int
loopne
push
add
cmpsl
xor
push
into
pop
push
stos
lea
cld
pusha
mov
dec
clc
outsl
daa
and
call
mov
jecxz
mov
aaa
pop
add
or
scas
cmpsb
mov
sahf
cs
jo
add
test
mov
xchg
xchg
mov
sti
sbb
pop
bound
mov
dec
aad
fdivrl
or
cwtl
inc
sub
sub
add
add
gs
testl
adc
jb
add
add
inc
stos
jae
mov
in
cmp
mov
adc
test
xchg
push
lea
dec
sbb
add
ds
out
stos
push
imul
aam
sbb
mov
adc
rcrl
fists
testl
mov
add
cmp
push
or
xchg
xchg
pop
add
outsb
and
int3
add
xor
je
cltd
jb
cmp
jecxz
mov
push
or
xor
sub
sub
xor
arpl
and
sub
ret
inc
add
sbb
push
rcrb
movsb
adc
aad
out
mov
and
sbbb
jae
mov
sub
mov
sbb
and
inc
xlat
mov
push
or
pop
stos
mov
in
outsb
pushl
addr16
scas
sub
and
pop
jge
add
and
daa
lahf
mov
pop
das
fs
in
icebp
add
add
xchg
andl
in
cwtl
repnz
cmp
nop
push
mov
dec
adc
das
add
outsb
push
xchg
jbe
fsts
ja
dec
and
push
and
loope
and
psubd
imul
loope
cmpsl
adc
adc
and
popa
clc
lret
xor
push
mov
mov
scas
xor
rol
stos
stos
sbb
imul
push
test
jp
loope
lcall
jns
mov
ss
xor
inc
imul
stos
dec
xorl
cmp
xchg
mov
enter
int3
dec
xchg
aad
inc
bound
mov
pop
adc
pop
inc
inc
jmp
in
dec
data16
hlt
push
fldl2e
and
das
cld
testl
rorb
jle
cmpsb
mov
add
mov
fucomi
xor
dec
dec
jl
add
add
and
mov
bound
mov
fs
loop
mov
test
or
inc
clc
ss
jae
and
mov
decb
iret
push
cmovno
call
add
in
sbb
push
mov
pop
xchg
lods
mov
fsub
sarl
or
je
out
stos
add
add
std
or
push
jne
rcrb
insl
rolb
or
add
jle
adc
loopne
xor
push
jne
cmpsl
mov
imul
ficoml
call
mov
sti
fnsave
cmp
repz
xor
hlt
popf
in
js
mov
or
imul
pusha
sbbb
inc
leave
test
adc
gs
sbb
or
pop
mov
ds
jnp
rolb
imul
push
lret
dec
mov
push
dec
push
cmp
inc
sub
sti
add
add
push
inc
pop
jns
aas
loopne
sub
mov
add
jg
xlat
push
imul
push
scas
imull
dec
jl
fsubr
rcrl
jb
sbb
adc
pop
aaa
ja
rclb
xor
hlt
aam
loop
fisttpll
jae
adc
orl
stos
mov
jno
mov
mov
mov
xor
pop
mov
adc
add
mov
stc
pop
or
jmp
add
or
clc
sbb
cli
jge
insl
inc
push
sti
mov
aas
push
mov
scas
arpl
lods
dec
push
idiv
cmp
filds
mov
fsubrl
ja
cmpsl
out
adc
and
push
clc
subb
int3
cmpsb
enter
jmp
sub
sbb
int
stc
sbb
lret
fimull
out
ja
xchg
cmpsb
add
es
sub
adc
mov
mov
and
cmpsb
sbb
jnp
mov
xor
sahf
push
xchg
add
add
in
adc
out
mov
xchg
adc
lods
rcr
inc
fldcw
xchg
test
push
or
xor
fdivs
je
xchg
test
loopne
je
xchg
and
mov
push
cmp
add
and
test
cmp
pop
shll
push
incb
push
std
test
xor
fs
mov
das
mov
ror
cmpsl
cmpb
imul
imul
mov
ret
leave
and
cmp
xchg
jnp
ret
sub
leave
dec
leave
add
enter
clc
outsb
jp
nop
stos
jb
cs
sub
jo
arpl
stos
jns
int3
add
ljmp
sub
outsb
repnz
sbb
das
jbe
fidivl
shlb
ret
xchg
sbb
imul
dec
aad
ret
pop
pop
stos
pusha
mov
cs
sub
pop
jb
xlat
jecxz
add
add
xlat
pop
xlat
jg
mov
sar
dec
leave
mov
add
add
test
pop
dec
int3
inc
push
test
or
adc
inc
aaa
xchg
mov
cmp
fs
aaa
ds
or
cmpsb
loop
pop
mov
inc
orb
in
mov
dec
inc
arpl
in
cmpsl
xor
nop
les
fcmovb
cmpsl
pop
xor
and
js
gs
outsl
shll
add
jg
es
testl
cmp
or
cmp
imul
cmp
out
xchg
xor
aad
ss
pop
pop
push
mov
mov
sub
addps
mov
push
mov
jge
or
data16
mov
sti
jge
jl
test
sbb
test
lcall
cltd
lock
outsl
cltd
cld
xor
inc
ret
hlt
clc
cmp
fsts
jmp
xor
adc
add
add
fdiv
mov
pop
push
aas
jb
testb
add
sbb
movsl
inc
add
cld
xchg
mov
rorb
test
es
inc
and
mov
adc
inc
cld
jae
or
hlt
jmp
repz
pusha
push
cltd
pop
int
cli
cmp
cmc
jae
bound
xor
call
gs
repnz
cmpsb
cmp
add
scas
pop
mov
mov
jnp
adcl
or
lods
push
inc
adc
push
leave
mov
in
pushl
loope
adc
mov
and
jb
call
xchg
pop
insl
aad
mov
and
or
xlat
add
jno
jno
ds
shr
std
mov
pop
rol
data16
cmp
insb
lret
push
adc
mov
mov
and
and
mov
outsb
sbb
sbb
sbb
xor
mov
rcr
mov
or
xorl
add
test
mov
fiaddl
fcoms
add
add
mov
dec
icebp
push
pop
push
or
mov
or
loope
jb
fwait
sbb
pop
sbb
add
xchg
fnstenv
sbb
test
sbb
mov
ss
sub
inc
mov
aam
jecxz
ljmp
and
sub
imul
fstp
out
lock
inc
fwait
xchg
in
sbb
xor
adc
pop
ret
and
sub
lret
test
pop
dec
xor
pop
lds
ss
jae
out
ret
in
mov
sbb
xor
subb
imul
dec
and
xor
insb
and
mov
rolb
ret
fildll
xor
xchg
negl
popa
iret
or
insb
inc
es
mov
jecxz
mov
sub
jecxz
lods
push
cltd
gs
mov
testb
out
add
fildll
stos
loop
push
outsb
mov
daa
xchg
fisttps
push
aaa
pop
clc
addb
add
push
pop
push
jmp
shlb
clc
add
add
mov
cmpsb
jmp
scas
push
mov
pushf
mov
imul
jns
in
mov
hlt
in
in
mov
int3
and
in
cmpsb
and
xlat
jge
jmp
or
xor
imul
mov
in
aad
mov
roll
xchg
inc
pop
into
repnz
sub
mov
pop
pop
repz
arpl
movsb
cmpsl
xor
lcall
nop
push
in
ret
jmp
nop
hlt
ret
inc
aad
mov
or
repnz
out
xchg
adc
xchg
jl
push
ret
loop
ljmp
xor
inc
sbb
aad
bound
adc
cmovnp
cmp
sbb
add
dec
sub
mov
jecxz
arpl
cmp
inc
cmp
insb
cmp
shl
test
xor
lds
popf
insb
mov
mov
outsb
bnd
fld
ret
mov
xor
fdivrp
scas
popf
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
jno
pop
js
stc
add
add
aaa
inc
push
cli
jecxz
imull
mov
lret
jp
jno
fdivrl
xor
xor
pop
loopne
xchg
adcl
and
js
dec
iret
dec
lcall
inc
xchg
sub
push
mov
subb
inc
cwtl
sti
or
or
xchg
mov
xchg
in
loop
mov
bound
cld
insb
sbb
dec
and
mov
pusha
insb
out
shl
test
and
pop
test
lods
lcall
lods
gs
ja
mov
xor
adc
adc
inc
fsubrs
jb
xchg
mov
adc
dec
in
xchg
xorl
imul
and
push
ficompl
lea
mov
fstp
cld
clc
xlat
ret
movsl
inc
mov
popa
add
cld
sub
add
dec
push
add
test
jp
xorl
es
mov
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
mov
inc
jne
ljmp
jecxz
mov
dec
or
mov
mov
and
mov
icebp
dec
mov
loope
push
sub
lea
jns
xchg
ja
pop
pop
jmp
lods
push
sbb
mov
lcall
stos
mov
push
dec
dec
addl
mov
daa
icebp
and
in
sahf
out
aas
push
in
cs
or
push
cmp
dec
push
lret
dec
or
pop
js
sti
push
xlat
daa
imul
dec
mov
scas
sub
lods
xor
cs
cltd
fnstcw
pop
xor
inc
mov
notl
idivl
cmp
addl
outsb
stos
or
add
push
fsubl
lcall
xchg
fcmovbe
xchg
mov
shrl
out
sub
stc
cmp
outsl
stos
aaa
sub
aam
add
mov
nop
test
aam
int
aaa
das
aam
nop
sahf
and
add
add
sub
jle
xlat
mov
xchg
icebp
enter
lea
aas
mov
sti
mov
js
lds
pop
ss
rcr
jl
inc
inc
loope
mov
ret
ljmp
ja
push
daa
inc
xor
push
outsb
pop
push
testl
jmp
lret
pop
ljmp
test
mov
cmpsb
aam
lods
xor
mov
or
sti
fdivrl
push
xchg
xor
pop
dec
sub
scas
test
outsb
push
test
push
cmp
sbb
xchg
test
jge
sbb
push
adc
sbb
push
or
cmpsl
mov
stos
push
sbb
cmp
inc
sub
xchg
shl
in
and
scas
in
add
dec
and
imul
push
xchg
jl
jmp
out
xlat
sub
fldcw
aaa
cmpsl
lds
in
cld
fisubrl
nop
xchg
in
sar
ljmp
jo
adc
lods
js
add
add
arpl
addr16
sub
jno
es
scas
cld
add
add
flds
mov
push
push
jle
xor
movsb
mov
mov
imul
mov
leave
dec
lods
or
and
mov
mov
int
adc
into
cmpsb
or
enter
mov
push
sub
xchg
push
pop
mov
mov
inc
scas
mov
in
and
rcll
call
aas
mov
mov
fs
lret
icebp
and
shl
dec
lret
pop
cltd
bound
jbe
aaa
imull
pushf
cmp
std
mov
pop
mov
cmpsl
adc
add
cli
sbb
pop
add
testb
test
cmp
sub
mov
mov
fs
bound
stos
push
lcall
pop
pop
aas
in
mov
popa
add
mov
aad
push
mov
push
push
push
mov
ret
pop
xorl
push
fstp
insl
add
imul
add
out
out
pushl
xchg
xor
out
das
stc
pop
mov
add
add
and
mov
shl
rcrl
daa
fidivs
iret
insl
pop
or
push
out
daa
or
sbb
jg
lods
inc
dec
inc
test
stos
jg
negb
cmp
notl
imul
mov
push
lea
mov
mov
lcall
aaa
sub
into
adc
inc
stos
jnp
and
push
addr16
adc
ss
pusha
dec
jae
xchg
int
lods
std
mov
lods
mov
push
or
inc
cmp
sarl
mov
sarl
subb
xor
mov
add
scas
adc
mov
enter
ja
sub
or
out
sbb
stc
adc
push
stos
int3
iret
push
cltd
dec
ret
test
dec
stos
fsubp
je
mov
mov
inc
mov
js
cmp
outsb
xchg
sub
add
add
push
scas
mov
adc
add
add
xchg
mov
pop
mov
pop
jb
push
ja
mov
dec
mov
mov
push
and
sbb
mov
jb
sub
xchg
mov
sahf
adc
hlt
mov
dec
leave
jns
jo
xchg
scas
cld
pop
gs
jecxz
stos
pop
sahf
jae
mov
aaa
call
or
inc
ds
add
jae
sbb
sbb
xchg
movsb
mov
out
or
mov
and
sub
adc
mov
mov
lret
xchg
rcll
add
jge
add
push
sbb
cmp
inc
jnp
loope
mov
pop
pop
int3
xlat
adc
mov
mov
mov
insl
jne
inc
ja
inc
pop
pop
add
lret
jno
xchg
push
or
pop
repz
or
mov
push
sbb
cmpb
lcall
into
fcomip
ds
call
iret
adc
add
aaa
xchg
and
movsl
mov
mov
mov
push
cmp
add
add
inc
out
mov
and
adc
sbb
cmp
insl
adc
jg
loope
mov
cmp
outsl
sbb
aad
and
push
bound
repnz
adc
pusha
cwtl
icebp
jnp
push
mov
inc
insb
in
cltd
push
stos
popa
je
aam
inc
ljmp
ret
sahf
inc
test
inc
sub
pop
fs
push
mov
mov
cld
xor
gs
xchg
call
cli
cmp
cmp
test
outsb
es
outsl
lea
jecxz
xor
pop
popf
pop
je
clc
and
lcall
push
push
xor
xor
pop
scas
aas
sbb
adc
cmpsb
jb
jno
or
mov
sub
cmpsl
dec
pop
mov
pop
loopne
pusha
inc
out
dec
jge
stc
stc
jae
gs
or
je
xchg
lahf
in
add
fdivl
mov
mov
add
add
outsl
cmc
mov
int
ds
pop
int
lea
leave
test
pop
inc
push
les
hlt
pop
cmp
cmp
popa
pop
sbb
stos
aad
inc
cmc
and
mov
dec
hlt
xchg
aas
out
mov
mov
jbe
push
cmp
sahf
outsl
pushf
xchg
lock
adc
out
cmc
sahf
add
cmp
push
mov
popl
xor
jge
and
sub
std
adc
sbb
gs
sahf
mov
pop
push
nop
sbb
xor
hlt
pop
xchg
dec
push
mov
imul
repnz
test
pop
sbb
mov
mov
stc
xor
arpl
pop
xchg
clc
mov
xor
xchg
rorl
or
dec
mov
lods
lock
mov
daa
mov
xchg
loope
cli
mov
sbb
xchg
sbb
inc
fisubl
imul
mov
movsb
mov
lret
sub
lret
mov
inc
stc
mov
mov
lods
imul
mov
add
add
pop
cmp
loopne
pop
jmp
sbb
mov
in
js
mov
sbb
mov
xor
xchg
push
push
mov
xor
dec
and
mov
xchg
dec
pop
stos
jo
sarb
inc
out
lahf
test
jnp
mov
lret
int3
mov
jg
cmp
enter
xor
cli
lods
in
xorl
mov
adc
mov
fwait
cmp
out
inc
ficoms
pop
mov
ret
jbe
jecxz
pusha
insb
cmp
xchg
fstp
insl
mov
cmp
iret
cld
out
ficoml
jbe
dec
repz
sbb
push
jae
mov
cli
push
testb
cmp
mov
data16
ds
loope
mov
cmc
push
mov
repnz
or
aad
push
ds
mov
mov
js
cmp
sub
imul
xlat
jae
lods
or
or
cmpsl
mov
pop
add
add
mov
cmp
gs
jb
int3
add
add
je
mov
xchg
push
mov
push
js
out
add
and
popa
jns
enter
test
les
out
pop
adc
dec
jne
sub
shll
jge
sbb
cmp
mov
rorb
and
or
daa
cltd
add
addr16
inc
int3
ljmp
push
mov
and
adc
or
popf
jmp
inc
adc
aaa
cmp
pusha
push
shl
cld
adc
lock
jae
ljmp
or
xor
cmp
dec
sub
out
and
push
or
ds
lret
cltd
in
lahf
mov
ret
cmc
pop
out
add
push
ljmp
fdivr
lret
xchg
xchg
mov
xor
das
adc
push
mov
push
inc
pop
sti
pop
mov
fdivr
cli
add
in
test
add
add
hlt
fbld
add
roll
add
add
sbb
aas
insl
dec
outsb
sub
hlt
pop
pusha
aam
push
add
jns
outsl
fimuls
push
mov
ret
sbb
lcall
movsl
test
aad
or
in
xor
aas
ja
decb
adc
dec
jle
jp
into
scas
std
push
clc
repz
jbe
sbb
mov
in
sub
fsubrs
cmpsl
dec
inc
in
mov
inc
out
jle
lock
incl
sub
mov
mov
rcr
sahf
mov
xorl
nop
adc
cmpsl
xlat
mov
dec
pop
push
inc
jo
popf
mov
cmc
push
mov
mov
rcl
fdivs
cs
push
pop
xlat
fistpll
aad
mull
push
pushf
jge
fadds
add
jmp
rclb
add
into
out
jp
pop
jmp
pop
pop
mov
pop
fdiv
and
xchg
testl
push
pop
sbb
shll
mov
into
fwait
add
mov
daa
add
add
mov
stos
cmpsl
adc
mulb
rcr
ficomps
loope
xchg
push
js
and
jb
inc
mov
enter
das
sub
jp
outsl
xchg
lcall
mov
cmp
repz
mov
or
mov
mov
adc
pop
cmp
adc
add
add
pop
xor
xor
in
cmpl
jge
pop
jo
mov
lea
stc
xor
add
xchg
jns
fdiv
std
xor
bound
fildll
or
daa
adc
stos
xchg
jge
outsb
or
push
xor
pop
xchg
dec
sbb
add
xor
dec
scas
inc
in
mov
xchg
add
adc
cmpsl
mov
and
lea
sbb
adc
or
fisubl
mov
mov
mov
and
add
jl
test
out
mov
pop
sarb
in
ss
add
outsl
fistl
andb
sbb
mov
xor
mov
repnz
or
mov
inc
into
push
mov
push
xchg
lods
push
cwtl
lds
inc
jno
xchg
out
push
pop
lret
insl
jnp
pop
mov
mov
lret
adc
clc
adc
mov
in
std
lds
sub
xchg
fisttpl
stos
scas
cmp
adc
repz
jle
mov
xchg
push
mov
xchg
and
fimull
xlat
fimuls
inc
cltd
in
cmp
inc
inc
es
inc
lahf
pop
mov
movb
inc
aam
outsb
jl
jp
fnstcw
dec
mov
lret
cwtl
add
add
test
jl
mov
cmp
sbb
setbe
mov
jg
aaa
shr
lods
shl
dec
cwtl
xor
xchg
js
push
mov
sub
cmp
xchg
fistps
adc
cs
loopnew
scas
add
add
inc
out
aas
mov
rcl
aaa
dec
pop
loopne
add
add
rol
fisttpll
lret
add
ja
pop
dec
adc
mov
aam
xor
adc
fdiv
cmp
dec
ja
dec
and
lahf
push
or
push
push
mov
lock
sub
incb
test
lret
fcoms
mov
fs
cmc
cmp
xor
bound
dec
push
adc
movsb
outsl
mov
xchg
popl
xchg
xchg
jne
and
les
ljmp
fwait
in
aas
inc
lds
cli
hlt
cmc
dec
enter
jb
dec
lock
sahf
add
xor
mov
inc
jae
lods
sti
xor
pop
dec
lods
and
cmp
mov
and
inc
lods
cmpsb
cmp
lds
lret
pop
mov
insb
in
jo
aas
and
andb
gs
mov
jl
cmpl
outsl
add
push
xchg
add
add
bnd
dec
leave
and
icebp
cld
in
add
add
aad
cmpsb
dec
shlb
push
shr
mov
dec
mov
xchg
mov
fists
mov
jbe
ds
dec
aam
jne
jo
ja
notb
inc
rcl
or
frstor
mov
adc
cmp
test
shrl
subb
cmp
ljmp
in
inc
out
insb
rcll
insl
sti
push
push
cmpsb
cmp
std
icebp
dec
mov
rolb
aam
nop
repz
int3
idivl
mov
imul
hlt
add
test
rclb
sub
addr16
cltd
push
mov
outsl
jmp
inc
adc
push
sbb
clc
add
ja
outsl
push
add
pushf
pop
adc
in
repz
int
ss
ret
jge
jbe
mov
inc
cmp
sbb
sub
ds
mov
in
jmp
cmp
push
jp
sbb
outsl
lock
scas
in
test
movsl
and
dec
test
cmp
xchg
outsl
dec
push
add
add
in
out
ja
filds
shlb
ljmp
add
and
lea
jnp
in
lock
push
mov
inc
leave
xchg
ss
xchg
inc
jmp
mov
pusha
pop
lds
lea
sbb
push
jns
ret
xor
sub
sbbl
mov
inc
push
sti
adc
adc
push
movsb
movsb
jp
lret
arpl
and
fistpll
ljmp
enter
jns
movsl
sbb
cmp
addb
adc
or
div
adc
movsb
or
inc
mov
mov
in
mov
aas
vmovdqu
push
or
shlb
dec
out
xchg
jge
test
add
add
adc
ja
out
xchg
ja
jmp
cmp
mov
dec
mov
inc
pop
leave
loop
adc
js
lods
mov
mov
push
mov
jbe
inc
adc
mov
inc
xchg
xchg
add
add
pop
in
inc
push
or
or
add
lods
outsb
xchg
and
rcl
mov
cmp
movsl
push
adc
push
rorb
lods
lods
notl
and
push
mov
push
dec
xchg
dec
jmp
sub
cmp
mov
pop
mov
movsb
pop
sub
and
lds
inc
xor
sbb
mov
iret
jno
mov
repnz
pop
lahf
sbb
mov
cmp
es
jmp
mov
in
cwtl
clc
mov
cmp
push
xchg
jp
mov
lcall
pusha
insl
jmp
orl
sbb
js
cmovge
and
xor
ljmp
mov
cmpsl
data16
popf
lods
loop
mov
mov
mov
push
mov
xor
aas
mov
out
inc
jbe
in
xor
cmpb
cmpsl
sbb
jl
out
out
add
mov
jg
neg
pop
daa
inc
jns
jl
hlt
or
add
aas
fstpt
cmp
mov
fistps
push
fmuls
jl
adc
pop
or
negb
lock
rcrb
aam
xor
mov
in
sar
inc
mov
cwtl
push
inc
pop
sbb
cmp
jne
sbb
cmpb
inc
pop
add
push
ret
addl
shlb
test
pop
jg
std
push
jb
xor
into
mov
lods
out
xor
or
inc
sub
leave
dec
mov
shlb
and
arpl
ja
jns
test
fmull
dec
dec
pop
xlat
jnp
pop
jp
mov
sbb
push
jnp
cmp
pusha
out
mov
adc
pop
and
pop
lcall
or
iret
mov
lea
test
decb
jns
push
push
push
dec
aad
sarl
cwtl
mov
sub
daa
pushf
sub
in
cmpsl
pop
ror
jns
dec
cmp
sbb
add
add
sti
jg
cmp
je
leave
xor
loop
or
add
cmp
dec
push
add
mov
xchg
jp
xchg
ljmp
fstpl
add
addr16
bound
movsb
add
ja
and
lea
or
out
jecxz
push
notb
or
lret
adc
adc
xchg
mov
movsb
daa
dec
inc
mov
mov
mov
aaa
push
clc
and
and
mov
xor
push
enter
subb
dec
iret
lahf
pop
dec
pop
xchg
jl
lret
outsl
xchg
fs
pop
jo
or
sbb
sub
insb
daa
mov
test
xor
nop
les
adc
dec
pop
mov
xlat
int
xchg
iret
jb
mov
xchg
cltd
pop
dec
aad
push
pop
imul
outsb
and
leave
stc
fisubs
cld
inc
lods
mov
icebp
iret
inc
pop
sbb
mov
negl
addr16
add
scas
aam
jnp
fstp
fcompl
sub
cmpsb
xchg
decb
add
xor
mov
rcr
sbb
nop
insb
sub
mulps
push
data16
sub
in
xor
cmp
movsl
jle
loopne
pusha
fcoms
pop
aas
int3
jge
fstl
int3
cs
cs
jno
loopne
or
mov
push
mov
jmp
repz
or
sti
jbe
or
and
mov
and
rclb
cmc
xor
xorl
lock
cltd
inc
clc
das
call
jp
mov
adc
push
stc
out
dec
mov
sub
jns
sub
xorb
xchg
cli
sub
fwait
or
or
inc
mov
add
mov
fldt
add
mov
sbb
mov
sub
jno
dec
movsl
add
daa
dec
or
ret
xor
mov
mov
inc
cli
iret
push
add
add
outsl
mov
add
pop
cmp
add
add
add
or
push
cli
cmp
imul
fcoml
pop
mov
cmp
lret
int
fildll
dec
add
cltd
cltd
add
ja
or
into
lods
mov
mov
out
sahf
dec
sbb
inc
fs
push
sbb
out
xchg
pusha
mov
push
imul
xchg
lret
lret
int
push
shll
dec
stc
lock
ret
fsubl
jo
sti
fwait
ret
add
rorb
pop
xor
in
push
nop
push
jae
pop
xor
ret
or
inc
dec
cmp
mov
xlat
das
xor
add
arpl
notb
push
shl
adcl
sbb
lock
sub
sbb
sbb
xchg
sbb
rcrl
jg
inc
mov
dec
movsl
aam
xchg
push
fincstp
test
notb
or
and
shlb
pop
outsl
test
test
outsl
push
add
shrl
xchg
inc
add
add
jmp
jae
mov
sgdtl
add
outsl
iret
xchg
inc
pop
dec
sub
iret
inc
push
sub
fmul
or
fwait
sub
mov
in
xor
lea
insb
insb
jae
or
adcl
divb
jmp
notl
fidivrl
call
idivb
xor
lods
cmp
sarl
jae
mull
pushf
inc
fbstp
dec
add
dec
mov
into
fidivl
sbb
push
dec
push
repz
clc
mov
xorl
mov
sub
mov
ja
jge
cmpsl
add
xchg
mov
cmp
loopne
adc
inc
test
std
fadds
lea
mov
jecxz
mov
mov
shll
scas
pop
ljmp
push
or
pop
divps
pop
fwait
lret
movsl
pop
adc
and
lods
or
test
xchg
std
jbe
inc
outsb
cmovge
and
push
sub
add
add
xor
test
xchg
jmp
or
add
add
rcr
add
cmp
jmp
jge
dec
jne
cwtl
repz
bound
aas
cmp
mov
push
test
cmp
je
push
push
or
and
lcall
inc
inc
push
es
add
sbb
cmp
shrb
sbbb
in
jnp
fsubs
or
stos
bound
sahf
loopne
fsts
adc
std
dec
repnz
cmpsl
shll
mov
out
jo
les
push
notl
sahf
testl
enter
lret
and
mov
into
inc
and
data16
sub
and
leave
and
int
adc
sub
push
stos
dec
or
loopne
pusha
or
xor
add
out
push
rolb
shll
cmp
shll
xor
dec
push
or
cmp
gs
adc
gs
or
sub
pop
push
lds
add
dec
cli
inc
jg
int
xchg
lods
or
in
cld
adc
add
add
notb
push
sbb
inc
gs
mov
bnd
sub
rcrl
jg
xor
scas
lret
test
push
daa
gs
das
xchg
daa
cltd
inc
adc
or
ljmp
call
sub
lds
mov
fstps
call
jns
rcr
cs
push
leave
in
int3
test
add
inc
xor
adc
add
push
lcall
mov
clc
cmpsb
push
aad
pop
mov
popf
or
pop
push
cltd
jp
adc
adc
adc
mov
jge
xchg
adc
or
pop
fnstcw
shll
pop
repnz
and
movsb
ret
inc
or
cwtl
incb
xchg
test
jbe
xor
les
adc
fsubs
and
cmp
js
icebp
pop
pop
mov
fiadds
add
add
xchg
std
cmp
jle
fistpll
ss
pop
pop
and
adc
add
cmpsl
outsb
data16
pop
fistpll
std
jl
in
arpl
bound
xor
lods
sarl
inc
fneni(8087
out
mov
cmp
pop
dec
xchg
sbb
push
cmp
stos
jmp
call
jmp
stos
clc
test
repnz
push
push
jns
fwait
jmp
xchg
mov
ds
aad
bound
pop
out
scas
in
test
dec
push
rclb
imul
addr16
sbbb
out
lret
loope
cmp
sahf
shl
hlt
push
jns
pop
dec
sub
adc
cmp
mov
jge
rcll
pop
xchg
add
popf
xchg
jnp
loope
xor
je
mov
cmp
jp
mov
cmp
push
lods
fsubrs
into
fs
push
aaa
mov
jmp
jbe
bound
rcr
mov
js
sbb
ljmp
jo
jo
jo
push
and
add
iret
xlat
ficompl
inc
ljmp
add
cmp
mov
mov
mov
cwtl
pop
sti
imul
fists
xor
outsl
xlat
outsb
mov
push
mov
jns
xor
dec
push
xchg
stos
lods
icebp
jp
mov
push
sub
ffree
ja
pop
icebp
les
and
sti
outsl
mov
call
lds
and
pop
push
pop
fistps
sahf
inc
movsl
aad
and
xchg
xchg
jmp
cltd
jmp
mov
mov
mov
mov
and
mov
fwait
sub
test
inc
int3
jae
xor
add
mov
insl
inc
add
hlt
dec
and
push
xor
xchg
pop
mov
in
outsl
repnz
inc
pusha
xchg
mov
cmp
scas
cmp
repz
and
ficomps
imul
ljmp
into
dec
sub
pop
mov
lcall
fbld
adc
iret
ret
push
sbb
add
add
sub
iret
outsb
jmp
push
test
loop
or
adc
add
sarl
or
mov
lret
mov
or
inc
lods
sub
push
test
dec
add
cmpsl
mov
insb
add
cmp
aas
push
jbe
cltd
ficoms
pushf
xor
sbb
mov
inc
ja
dec
mov
leave
mov
xor
fildl
pusha
jae
inc
test
and
inc
in
xor
icebp
push
shrb
outsl
sub
adc
jl
lahf
call
and
leave
add
push
movups
stos
outsb
xchg
mov
dec
pop
sahf
xchg
or
xchg
lea
mov
scas
pop
ds
subb
std
inc
cli
lret
mov
xchg
pop
pop
cs
ret
sbb
adc
ja
sbb
add
push
lea
popa
loope
lods
fwait
mov
ss
mov
inc
sub
cmp
dec
sbb
jno
test
jle
out
enter
add
add
std
sbb
stc
cld
or
aam
out
es
add
jo
int3
pop
lret
push
xchg
call
mov
mov
fisubrl
out
and
mov
xchg
test
adcl
jmp
adc
js
arpl
inc
xchg
inc
adcl
test
aam
mov
mov
test
movsl
rorb
pusha
and
movsl
enter
lcall
inc
inc
fildll
or
push
and
cmp
sub
push
gs
inc
nop
bound
fcoml
test
lcall
mov
ret
dec
mov
dec
or
mov
sbb
cmpb
and
test
cld
xor
and
rorb
repz
sub
fs
adc
lcall
ret
shlb
or
adc
sti
jp
lret
jle
push
mov
xchg
push
dec
fldcw
mov
and
inc
mov
add
negl
adc
pop
xchg
cmpsb
je
pop
push
sub
add
add
je
push
or
outsl
scas
sbb
and
stc
sahf
mov
popf
cmp
xor
sbb
xor
cmpl
lcall
or
loopne
mov
xchg
out
jo
push
add
in
adc
dec
xor
lahf
push
or
xchg
ds
inc
sti
push
mov
inc
dec
jnp
or
stos
mov
fstp
pop
roll
pop
cmp
je
adc
mov
xchg
push
leave
pop
pop
xor
adc
in
sahf
or
and
loope
fdivrs
mov
jge
cltd
push
xchg
negl
fwait
outsb
xor
ss
cmp
xor
lahf
test
jl
outsb
ds
repz
push
sahf
in
pop
test
fyl2x
or
rorl
inc
cmp
inc
insl
cs
lods
add
mov
rclb
push
data16
jecxz
sbb
add
add
dec
pushl
jnp
test
xor
add
add
cli
adc
jne
cwtl
xchg
mov
sub
cmp
sub
pop
and
shlb
xchg
pop
mov
adc
outsb
std
mov
pop
out
push
or
popa
push
jns
add
lods
leave
jnp
mov
movb
cmp
loopne
pop
movsl
fs
repz
jl
adcl
xchg
xor
scas
or
xor
nop
stos
mov
adc
outsb
ret
into
test
dec
dec
push
into
mov
movsb
test
inc
out
jge
adcb
lcall
xor
or
in
fsubrl
push
adc
sbb
insb
imul
clc
leave
lret
xchg
push
xor
dec
test
les
inc
sub
sbb
push
adc
sbbl
movsb
cmp
popa
insb
inc
imul
ficoml
sar
das
adc
xchg
fwait
jp
push
addb
add
inc
ja
pop
aas
dec
push
adc
add
jbe
psubb
cmp
adc
es
mov
lock
cmp
and
jmp
repz
das
fnstsw
push
xchg
daa
pop
jnp
and
pop
xchg
push
push
lea
mov
xor
lods
jp
dec
mov
and
sbb
xchg
inc
mov
imul
rcrl
pop
inc
ds
leave
movhps
in
ss
je
jmp
xchg
mov
mov
aam
jb
lds
mov
adc
fildl
sub
sub
mov
adcb
stos
pop
fldl
pop
cs
cmpsl
adc
ss
es
push
mov
sbb
out
outsb
inc
adc
inc
push
sub
lcall
in
xlat
or
adcb
xlat
sub
pusha
sub
sub
in
mov
push
push
movsb
aam
and
int
xchg
or
insb
pusha
mov
jle
shll
add
repz
jae
ja
div
mov
xchg
xor
add
sahf
mov
inc
lods
push
mov
roll
mov
mov
mov
test
push
sub
inc
push
push
jno
icebp
push
fwait
shll
dec
mov
aam
mov
push
fistps
fisubl
adcb
leave
std
xor
adc
cld
jbe
jae
mov
test
ficompl
mov
xchg
arpl
xchg
aas
mov
rcrb
addr16
push
std
mov
mov
sbb
fldenv
imul
adc
xchg
cwtl
xchg
rcrb
sbb
clc
repnz
int3
lcall
je
movsl
hlt
and
in
mov
and
lcall
shlb
pop
in
and
and
je
scas
mov
inc
loopne
push
lock
leave
adc
aad
add
jp
push
test
cmpb
add
xor
cli
std
jg
push
pushf
dec
mov
sbb
add
xchg
ss
aaa
daa
ljmp
idiv
adc
jg
aad
test
mov
jne
inc
push
mov
outsl
and
insl
loopne
pop
jp
loope
movsb
stos
out
add
and
fldcw
jb
mov
pop
testl
jne
arpl
scas
mov
sarb
in
and
xchg
das
sbb
subl
pop
inc
lds
pop
icebp
gs
mov
jg
lret
jecxz
sbb
rol
test
repnz
repz
scas
add
sub
leave
into
xchg
sbb
mov
into
mov
int3
xor
push
jge
and
insb
sub
mov
jl
loop
sbb
fbstp
xor
je
xchg
pop
or
aam
inc
stos
push
jmp
pop
sbb
lcall
pop
dec
lret
pop
outsb
insl
loop
jb
addr16
movb
sub
add
inc
cld
dec
mov
mov
test
and
add
add
mov
std
incl
sbb
shl
mov
sbb
add
aas
push
into
dec
sub
inc
cmpsl
ficompl
scas
es
cmpsb
jmp
push
jno
mov
loop
push
mov
stos
push
sbbb
mov
pusha
lret
lret
enter
sub
fisttpl
xchg
fwait
ss
or
jmp
or
and
push
popf
sbb
cmp
adc
xor
mov
cs
ja
mov
sub
cmp
data16
pop
in
call
dec
shll
inc
inc
lods
test
mov
jo
mov
in
and
arpl
shr
adc
outsl
in
clc
sbb
aaa
ret
xchg
fstps
out
dec
pop
cmp
decb
xchg
scas
pop
not
fsubl
or
sub
and
les
xchg
shl
imul
repnz
add
add
es
jg
pop
or
xor
add
dec
sbb
add
sbb
call
fs
fstpl
mov
mov
jns
push
lock
insb
or
inc
sbb
sbb
lds
fisubl
repz
fadd
inc
je
loope
mov
scas
push
out
test
addr16
sub
pop
sbb
popf
into
rcll
test
or
push
rcr
std
adc
push
lret
mov
cmp
add
push
pushf
in
aas
push
cli
sub
pop
lahf
add
lcall
sbb
shrl
in
in
outsl
or
xchg
aaa
jmp
jmp
aad
out
scas
and
popf
or
popa
lods
xchg
dec
inc
ficomps
bound
sarb
fcoms
arpl
cmp
sahf
mov
je
popa
jmp
bound
add
and
dec
jg
pop
push
stos
push
outsl
pop
inc
pop
xchg
popf
cmc
cmp
pop
pop
pop
stos
cmp
xchg
rolb
int
in
mov
mov
subb
mov
push
clc
or
dec
push
cmp
sbb
add
sub
mov
jns
test
js
adc
xchg
test
nop
sarl
fimuls
or
add
push
and
jo
mov
fdivrs
movsb
xchg
jmp
and
xchg
cld
fisttpl
icebp
mov
inc
adc
repnz
insl
push
or
xor
push
add
gs
js
mov
fdivrl
movb
push
xchg
or
rorb
pop
xlat
ss
icebp
mov
ljmp
idivb
fucompp
jno
scas
es
cmpsl
dec
jg
adc
test
notl
cmp
mov
ret
xor
das
and
aad
out
bound
xor
rcr
fcmovb
jne
frstor
adc
dec
idivl
call
popf
out
rcr
nop
jb
push
jmp
rcr
shlb
loop
push
adc
xor
xorb
or
outsl
aaa
mov
cmp
repnz
add
stc
lods
xor
mov
sbb
add
add
push
adc
inc
sarl
dec
pop
clc
lahf
push
jle
inc
pusha
test
mov
sub
outsl
js
ss
bound
outsl
push
xchg
mov
xchg
xlat
js
dec
xchg
sti
test
pop
xor
xor
arpl
fisubl
fldt
or
std
aaa
cmc
inc
and
outsb
or
inc
pushf
cmp
mov
es
jp
sub
mov
pop
push
js
hlt
sub
cmp
or
in
lock
adc
stos
addr16
movsb
lods
in
das
pop
sahf
and
pop
es
mov
inc
pop
push
out
mov
orb
orb
mov
and
call
sbb
das
sbbl
unpckhps
cld
mov
aas
jl
hlt
les
into
jnp
cld
mov
pop
jae
add
fstl
aaa
push
test
or
add
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
jb
sahf
mov
push
jecxz
add
xor
in
jmp
cmpsl
frstor
push
xchg
mov
leave
outsb
gs
out
pop
jge
sub
sbb
jb
cli
mov
and
xchg
js
push
cmpsb
jecxz
aam
pop
shrl
mov
out
not
push
les
xor
xchg
out
sbb
adc
dec
inc
dec
xor
arpl
mov
imul
popl
xor
push
leavew
mov
test
scas
sub
dec
out
add
push
shrb
dec
cwtl
or
cmp
movb
sti
inc
mov
inc
dec
cmp
jg
int
aaa
outsb
fcmovbe
pop
int3
sub
sbb
dec
add
rcl
jne
sbb
inc
fwait
xor
mov
int
mov
idiv
xchg
sahf
xchg
leave
std
pushf
or
es
sbb
dec
ds
movsb
fadds
add
mov
out
stos
jge
or
and
add
pop
lret
mov
sbb
mov
push
test
jns,pn
jns
inc
mov
mov
lcall
addl
cmp
jp
pop
sbb
loope
jns
cwtl
lock
fmuls
lahf
popf
jmp
ret
mov
pop
scas
mov
pop
inc
mov
adc
psubw
jns
repz
mov
lret
adc
or
sbb
loope
pop
mov
sbbb
lds
mov
lds
rorb
push
mov
push
dec
or
test
outsb
push
lds
mov
stc
idivl
rcl
sarb
add
movsb
or
mov
idiv
mov
jmp
daa
add
rol
xchg
std
scas
jbe
xorl
int
and
mov
pop
cmc
add
add
sbb
out
xchg
iret
push
aas
adc
add
add
mov
out
lock
test
jno
pop
dec
or
cltd
push
or
and
push
or
inc
cmp
lds
jb
jecxz
mov
testb
adc
mov
add
mov
sbb
jae
pusha
movsl
clc
mov
jmp
aaa
ljmp
pop
push
push
cmp
push
xor
ret
rcrb
fisttpll
push
in
dec
sub
fsts
sbb
insb
pusha
xlat
inc
fildll
dec
mov
lods
das
lods
outsl
gs
pop
jnp
or
cltd
es
ss
mov
xor
mov
test
scas
into
popf
fisttpll
ds
cmp
shl
sbb
cmpsl
jecxz
xchg
imul
cmpsb
jecxz
pop
mov
dec
adc
mov
ror
lret
xchg
mov
push
test
in
add
aam
add
cmp
out
loope
jns
push
cltd
push
and
add
mov
cmpsl
pusha
fsts
pop
mov
mov
nop
into
xchg
in
cs
and
dec
sub
insb
iret
mov
xchg
cmpb
jae
pop
fistl
aam
hlt
xchg
test
push
jae
lea
and
or
ret
mov
pusha
push
test
adc
out
cmpsb
je
arpl
xor
inc
xchg
sub
add
inc
je
mov
or
sar
testl
je
adc
inc
inc
pop
test
push
dec
outsb
inc
cmp
in
pop
in
inc
pushf
dec
pusha
cwtl
sub
call
dec
push
bound
pop
loop
mov
shl
cmp
sar
mov
lret
fbstp
jbe
stc
jecxz
jnp
aas
xchg
imul
lock
jne
mov
mov
pop
adcb
enter
add
add
lods
jg
push
mov
push
mov
subl
add
inc
in
lds
sbb
adc
adc
mov
das
push
aad
into
outsl
outsb
xchg
sti
js
sub
icebp
mov
pop
mov
mov
in
mov
jns
xchg
jne
or
push
sub
jecxz
fnclex
les
out
movsl
stos
pop
push
cmp
dec
jo
loop
lcall
cmp
mov
movl
movsb
scas
xchg
xor
push
shll
xor
popf
inc
bound
mov
jmp
push
loop
push
mov
mov
or
insb
test
outsl
repnz
imul
inc
cmp
xor
jg
xchg
and
jecxz
andl
mov
iret
inc
bnd
or
sub
ss
out
add
cltd
call
loope
cmc
in
test
add
add
add
jg
cld
ret
add
mov
sti
jno
add
add
sub
hlt
mov
sub
notl
lods
std
testb
push
jp
int
aaa
das
jnp
scas
jnp
fwait
aad
popa
repnz
mov
nop
adc
in
mov
jae
adc
jne
gs
xor
clc
push
mov
call
xchg
adc
in
jae
push
clc
fstl
cmp
cmp
fcmovne
cmp
js
push
sub
adc
xchg
fwait
xor
fsubr
dec
push
sbb
adc
lret
pop
cmp
fsubl
int
mov
aam
cld
mov
jl
mov
into
cmp
sbb
push
scas
insl
sub
pop
mov
ret
test
xor
in
pop
pop
sub
dec
in
data16
add
dec
xchg
add
add
in
aaa
sahf
jg
mov
mov
pop
sub
pop
sbb
es
add
mov
mov
sbb
xchg
std
rcr
sbbb
add
mov
iret
mov
bound
sbb
add
lock
je
mov
adcl
mov
xchg
xlat
outsb
mov
sbb
jo
add
dec
movsl
popf
mov
and
in
add
ret
xchg
xor
cmpb
into
push
out
test
jne
push
daa
jns
or
cmp
xchg
and
or
dec
pop
jl
jnp
sub
out
std
pop
jg
iret
imul
or
adc
dec
add
mov
pop
loopne
and
cmp
test
enter
pusha
enter
xor
jb
mov
xchg
hlt
push
out
cmpsl
insb
sub
pop
inc
fucomip
paddusw
and
jo
mov
movl
add
cli
push
ds
jg
icebp
fisttpl
jae
je
xor
xchg
loopne
out
mov
jg
cvttps2pi
mov
add
or
jnp
xor
xlat
sahf
ffreep
enter
mov
sbb
add
add
mov
jg
arpl
push
mov
add
xchg
lcall
add
jl
andb
shr
lds
clc
push
stos
js
rclb
icebp
cmp
loope
or
and
inc
enter
jbe
mov
notl
sub
mov
in
mov
xor
mov
je
cmp
pop
or
iret
xor
fwait
cld
and
pop
pop
lahf
enter
mov
push
outsb
mov
fimuls
mov
mov
pop
sbb
sbb
int
clc
xor
jg
mov
in
sbb
inc
ljmp
or
cmp
dec
outsl
into
fsubp
mov
xor
int3
es
frstpm(287
xchg
jnp
xchg
cmp
sub
fsubs
lahf
out
push
add
jg
sahf
mov
mov
lret
test
cmp
xor
nop
movsb
in
aas
insb
mov
clc
outsb
add
jae
fimuls
pop
ljmp
add
xor
clc
cli
clc
sarb
sti
mov
andb
add
and
xor
out
scas
je
pop
enter
pop
fdivr
and
or
jmp
mov
popa
inc
sbb
xrelease
xchg
cltd
adc
loope
cli
lcall
dec
cmc
push
push
fwait
add
xor
or
sub
inc
repz
xchg
stc
xchg
cwtl
ret
lahf
mov
ret
push
xor
in
pop
outsl
dec
in
arpl
lcall
daa
cltd
shll
pop
sub
cltd
xor
loop
loope
pop
faddl
xchg
inc
add
rcrl
or
mov
push
ljmp
dec
scas
scas
adc
cmp
xor
jl
test
dec
pop
push
ret
mov
ja
jb
outsl
insl
xor
fsubs
mov
cmp
sti
mov
in
sbb
pusha
push
xchg
or
mov
int3
das
cmpsl
movsl
and
leave
mov
inc
xlat
pop
push
add
add
jnp
out
mov
psadbw
add
add
cmp
dec
loope
sub
inc
adc
push
ret
movsb
mov
pop
dec
repnz
push
cltd
xchg
mov
mov
sub
jno
cmpb
and
sub
inc
lods
loopne
xchg
jecxz
aaa
sbb
cmp
push
lret
and
cmp
std
adc
nop
inc
ljmp
pusha
mov
lea
dec
fnstcw
mov
cmp
pop
shrl
movsb
xor
std
and
jecxz
outsl
mov
jnp
loop
or
sub
mov
fs
fsubs
or
sbb
xor
dec
push
or
sub
cmp
nop
or
mov
xor
cmpsb
push
sbb
incb
daa
cmp
xchg
into
cmc
mov
enter
mov
gs
jb
jle
mov
push
stos
and
push
aad
add
add
es
data16
insb
daa
mov
dec
out
aas
mov
add
add
idivb
or
rep
fldcw
sub
fs
cmp
or
pop
sarl
imul
mov
std
lret
mov
push
push
out
test
movsl
lahf
outsl
scas
sub
testl
pop
jl
int3
lret
push
dec
mov
dec
sbb
and
or
adc
ja
sbb
or
mov
das
in
sahf
fisubrl
dec
sub
mov
mov
fsts
jp
cmp
in
dec
cltd
inc
ja
and
inc
xlat
lahf
scas
adc
add
aaa
pop
jecxz
or
add
cmc
insl
test
cwtl
xor
mov
sarb
dec
aad
popf
out
pop
jg
push
xor
mov
pop
aaa
lock
out
lret
pop
xor
inc
sbb
and
cmp
xchg
jnp
test
dec
fldenv
mov
imul
cmp
xor
add
add
add
dec
mov
imul
lods
add
sub
add
daa
leave
jo
imul
push
icebp
popf
lcall
cwtl
cwtl
loopne
inc
pop
daa
push
xor
imul
mov
lea
test
push
xor
dec
add
push
fmull
pop
scas
leave
pop
mov
sub
xchg
sahf
xor
jl
add
es
sbb
lret
inc
subb
cmp
xor
or
xchg
mov
lret
xchg
dec
fwait
jb
xor
int
add
xor
das
dec
cltd
adc
shll
fcomps
sbb
call
fucomi
dec
xchg
dec
loopne
stos
es
fisubrs
outsl
pop
sub
fdivrs
pop
test
das
stc
jbe
icebp
inc
sbb
inc
xor
test
shll
daa
les
or
mov
cmp
das
into
or
roll
das
mov
popa
add
add
and
push
sti
cmpsl
enter
stos
xor
mov
add
add
jns
or
imul
add
fidivrs
cmpsb
pop
cmpsb
in
in
add
push
mov
push
movsl
dec
mov
jns
jle
lods
in
scas
in
mov
and
jbe
push
pop
mov
push
sub
gs
cmpsb
dec
pushf
and
into
inc
push
push
ret
les
cmc
je
lock
inc
xor
test
test
data16
cltd
lea
ss
xlat
cmpsl
repnz
aas
loopne
cmpsl
sbb
cmpb
dec
mov
shl
pop
dec
nop
lods
test
or
loopne
mov
inc
jle
mov
dec
sbb
inc
lods
pop
jp
xchg
inc
pop
add
mov
outsb
ljmp
cli
popa
xchg
xchg
sub
jbe
sarb
aad
cltd
flds
lods
sbb
leave
jb
jp
icebp
in
dec
cmp
stc
and
dec
sub
fs
leave
dec
dec
repnz
sub
mov
add
push
and
std
mov
dec
push
out
push
int
sub
add
and
pop
cmp
or
jno
pop
incb
adc
mov
mov
mov
xchg
push
dec
dec
mov
xor
icebp
mov
out
mov
mov
add
xchg
int3
sbb
and
aad
js
cmp
mov
aad
inc
push
mov
mov
bound
cld
cltd
outsl
aas
movb
fstps
xlat
popa
pushf
lods
call
pushf
out
pop
movsl
in
dec
or
lea
jb
xlat
mov
pushf
inc
test
aam
sbb
inc
fiadds
jecxz
out
mov
inc
ret
mov
cmp
dec
dec
and
push
xor
ret
xor
fwait
pop
mov
mov
rol
fisubs
xchg
fildll
mov
push
adc
add
mov
adc
dec
mov
gs
inc
dec
xchg
fsubrs
sub
and
mov
lds
xchg
and
inc
and
lcall
add
add
ret
inc
inc
xchg
and
and
faddl
push
adc
stos
or
add
cmp
and
or
repz
imul
pushf
ss
add
mov
test
insl
xchg
mov
or
inc
inc
push
lret
xor
fwait
or
pop
jno
pusha
adcb
aaa
cmpsl
sub
add
xchg
shl
cli
cld
out
loope,pt
orb
and
sbb
adc
in
adc
lahf
sbbl
sub
das
popf
and
push
push
mov
stc
faddl
jbe
popa
jo
les
in
jp
mov
jns
ret
fistps
js
adc
cmpsb
cmp
pop
ret
dec
aam
push
test
inc
add
xchg
das
add
adc
popa
sbb
mov
jne
pop
cmp
arpl
add
add
xchg
ficomps
cmp
lahf
jecxz
loope
mov
add
add
add
push
inc
popa
mov
cmp
dec
mov
dec
xchg
pop
cmp
mov
mov
and
jge
and
loopne
clc
adc
cmp
lcall
jno
lods
sbb
cmp
clc
call
scas
push
xchg
jle
jnp
int
icebp
ss
cmp
xchg
lret
rclb
dec
movsb
cmp
cwtl
jns
pusha
inc
cmp
scas
or
mov
mov
scas
cs
into
pop
cmp
sub
out
bound
lds
pop
cmp
mov
adc
ret
jb
inc
arpl
jp
push
sbb
sub
bswap
dec
dec
aas
pop
pop
fsubrl
mov
and
movsl
pop
je
inc
lahf
fcom
mov
jbe
jns
insl
imul
in
jns
mov
and
shll
add
arpl
ja
sub
add
mov
add
add
testb
jne
repnz
or
scas
in
fildl
fsubrs
fwait
cli
mov
test
lds
inc
fidivrs
push
ret
pop
cld
push
jae
jb
cmpsl
rcrl
dec
test
ficoms
mov
aaa
mov
sbbl
mov
jmp
nop
in
int
xchg
ds
clc
cmpsl
aas
sub
pop
outsb
xchg
orb
adc
fdivr
jge
sub
and
ret
sbbb
dec
pop
inc
jmp
cs
ret
arpl
inc
fsubrl
sahf
mov
fildll
push
jb
outsl
pop
xlat
xchg
ljmp
jecxz
dec
fldl
cmp
ret
push
sahf
push
fiaddl
ret
xchg
sbb
dec
insl
mov
fdiv
pop
aas
lcall
sub
or
fst
push
xor
jl
sub
add
lret
mov
or
dec
jnp
bound
add
add
mov
insb
xor
push
lock
mov
mov
sub
fisttpll
in
mov
pushf
pop
xchg
loopne
cli
icebp
xchg
mov
leave
mov
xor
inc
in
mov
xchg
lea
loopne
int3
inc
std
out
or
clc
xchg
sti
in
and
scas
cltd
cmp
cli
mov
fcmovbe
xchg
xor
add
mov
subb
lods
and
pop
sub
mov
shll
movntps
jp
xlat
or
add
jb
aas
jbe
repz
mov
push
out
cld
push
and
or
jge
inc
fsub
aad
add
push
lds
mov
rcrb
cmp
aam
in
filds
je
enter
or
aaa
mov
nop
pop
dec
pop
pop
out
enter
divl
pop
xor
pop
popa
dec
add
add
sti
pop
jge
neg
hlt
add
pusha
mov
add
add
call
js
out
pusha
lret
scas
and
mov
inc
stos
mov
jne
mov
inc
add
jno
and
insb
adc
pushf
fstpl
inc
xor
fs
dec
inc
fbstp
test
jbe
sbb
fs
adc
jae
sbb
pop
out
pop
xchg
movsb
test
mov
daa
mov
pop
ret
call
lahf
xchg
inc
mov
mov
or
mov
insl
sbbb
ret
ds
test
sub
adc
into
add
loopne
call
xor
adc
addr16
rcrl
jmp
mov
mov
pop
inc
movsb
dec
inc
dec
xor
jg
cs
push
lds
xchg
out
sti
popa
cld
movsl
add
or
shlb
pop
jb
xor
push
cmp
std
add
aaa
cld
xor
insl
add
add
fsub
std
in
popf
in
stc
jmp
inc
push
mov
add
sbb
inc
bound
jno
mov
adc
mov
stc
sub
aaa
dec
inc
mov
sub
adc
imul
incl
pop
mov
jecxz
inc
or
out
pop
leave
push
into
and
xchg
fnstcw
lret
xchg
orb
sub
test
lods
push
sub
mov
lret
sbb
daa
adc
aaa
pop
leave
sbb
xor
cmpsl
aad
jmp
out
mov
out
cwtl
fsubl
xchg
int3
push
leave
pop
dec
in
stc
sbb
sub
add
and
cmp
shl
cli
inc
roll
add
adc
jle
add
pop
and
xor
cltd
or
insb
bound
lret
scas
inc
clc
clc
mov
cld
movb
sarb
jb
xchg
daa
xchg
push
inc
mov
inc
sub
ficoms
jb
cmp
frstor
loope
js
pop
ljmp
add
jp
jnp
sti
xchg
jle
jp
lods
std
cmpsb
notl
xor
add
mov
test
inc
addr16
flds
outsb
filds
add
cmp
test
outsl
xchg
popf
xchg
rclb
adc
shll
sub
jae
push
sub
int3
dec
mov
mov
cmp
jp
psllq
test
or
out
fldt
cmpsb
es
shll
pop
sub
inc
rcll
mov
push
add
pushf
mov
das
iret
testl
sbb
int3
xor
into
nop
fildl
cmp
mov
pop
cltd
or
sbb
ret
mov
fs
out
outsb
inc
fcmove
mov
addr16
cmp
mov
cwtl
popa
jb
adc
inc
mov
push
les
jns
and
add
and
sbb
xor
call
orb
xchg
icebp
sbb
and
jne
inc
data16
test
xor
hlt
pushf
pushf
mov
mov
pop
ret
xor
add
mov
push
sti
decb
mov
mov
xor
add
rcrb
adc
mov
or
in
inc
cmpsl
fbstp
bound
add
filds
add
add
mov
std
mov
xchg
cli
mov
xor
int3
scas
xchg
arpl
adc
xor
int3
popf
outsl
rclb
jbe
mov
push
mov
ret
std
bound
scas
jge
push
and
fists
fs
inc
or
std
xor
mov
addr16
or
adc
popa
and
out
jmp
jmp
jp
jl
lret
jmp
xchg
sbb
and
sbb
loop
push
push
pop
ljmp
insb
out
add
jae
push
movsb
adc
popa
in
into
pop
ss
or
scas
fadds
xchg
mov
push
pop
cltd
out
pop
add
stc
lods
mov
pop
push
sbbl
xor
es
lea
and
in
pop
test
and
add
add
cmp
xor
hlt
adcb
xor
add
pushf
int
leave
add
mov
push
adc
cmc
repnz
dec
mov
ret
jmp
lods
cmc
push
add
xor
int
sub
jmp
stos
pop
cs
test
call
test
cmpsl
orb
cmp
lea
push
adc
jbe
jp
mov
sete
iret
loop
es
iret
outsb
lods
repnz
inc
mov
sbb
mov
dec
lds
mov
stos
push
inc
or
jp
imul
lea
or
fs
dec
add
ss
pusha
push
xchg
pop
inc
fnstcw
sbb
jl
flds
sub
lcall
in
out
dec
dec
aad
imul
and
test
popa
cmp
popf
sub
xchg
movsl
popa
push
jg
or
pusha
jae
dec
lret
cmpsb
jb
roll
dec
sbb
loope
inc
fdivrl
out
fdivrs
fwait
lods
push
add
add
cmp
jge
stos
lea
shrb
dec
xchg
lret
add
add
xor
sub
pusha
dec
fadd
xchg
ret
mov
cmp
xor
inc
mov
xchg
popa
push
dec
xor
mov
lcall
xchg
xor
pop
or
movsl
sbb
outsb
leave
insb
and
gs
fwait
inc
mov
jno
mov
aaa
test
xchg
xchg
ds
rorb
add
sbb
jnp
push
xlat
push
add
fisubs
or
nop
setns
subl
jle
xchg
jmp
push
push
jl
arpl
stos
dec
in
push
push
lock
loope
push
jo
dec
loop
rclb
rolb
mov
cmpsl
mov
decl
sub
sbb
cmp
cmpsl
push
mov
es
sbb
int3
in
loope
insb
mov
or
imul
and
insl
mov
push
cmp
pop
and
lcall
neg
dec
std
dec
imul
xlat
push
adc
out
repnz
add
rclb
nop
lcall
aaa
add
add
add
add
mov
push
dec
cmp
ror
jnp
and
hlt
inc
pop
mov
mov
aad
sub
fdivl
cmpl
or
imul
pop
inc
ss
cld
cmp
or
sbb
scas
fdivs
sub
jg
int3
mov
lret
cld
std
test
inc
xor
icebp
push
sbb
sbb
pushf
cmp
test
into
xchg
dec
jne
mov
lret
popf
xor
aam
aad
add
and
leave
sahf
xchg
test
pop
out
loope
push
test
fbld
loop
jnp
mov
mov
in
push
sti
filds
mov
or
std
inc
mov
push
add
test
xor
pop
mov
cld
mov
fcompl
inc
sbb
loope
call
enter
add
add
jbe
idivl
or
fwait
sti
pmullw
add
add
push
idiv
push
xchg
test
test
xor
sub
mov
or
out
dec
imul
not
test
sbb
adc
pop
in
aam
pop
insb
sbb
mov
js
leave
jecxz
les
stc
bnd
push
int
mov
leave
jmp
cmp
xor
jmp
sub
gs
popf
test
adc
jmp
mov
inc
inc
sbbb
mov
xchg
inc
jecxz
jl
sbb
add
mov
sti
push
loopne
and
stos
addl
jp,pn
jl
out
jae
movsl
loope
cmp
sahf
xor
imull
inc
out
mov
mov
movq
pop
lcall
ljmp
lds
cmpb
in
jp
jg
adc
pop
ja
add
inc
data16
imul
mov
add
outsb
sub
stos
fs
jmp
leave
aas
cmpsl
push
scas
popf
fidivrl
add
add
popf
push
std
pop
popa
idivl
bound
xor
mov
sub
loop
addr16
pushf
cwtl
pop
les
add
xor
xlat
arpl
leave
mov
adc
push
pop
jne
mov
mov
push
andl
test
mov
repnz
dec
jl
imull
iret
mov
dec
rorl
jns
mov
adc
hlt
xlat
inc
enter
mov
and
add
add
xor
pushf
es
aaa
mov
xchg
push
data16
or
mov
pusha
pop
add
insl
dec
jecxz
mov
add
cld
jns
ljmp
repnz
mov
and
test
jp
add
inc
es
jmp
add
xor
insb
xchg
ss
jb
gs
cmp
and
popf
xor
mov
int3
les
add
les
scas
fistpll
outsl
gs
mov
add
add
in
mov
insb
outsb
imul
mov
mov
pop
in
and
sahf
jge
push
mov
bound
sub
lds
leave
mov
xchg
add
or
cmpl
insl
push
cmp
mov
sub
adc
xor
loope
cmp
cld
mov
enter
adc
clc
sbb
mov
rol
push
lcall
fwait
pop
xchg
minps
jl
jo
insb
cmp
daa
and
adc
sbb
loope
movsb
adc
mov
xor
out
lret
cld
jle
inc
mov
ds
test
mov
xor
inc
xchg
adc
dec
push
test
roll
cli
pusha
or
andb
push
shrb
sti
inc
shlb
cli
lods
push
mov
add
xchg
jo
cmp
mov
inc
stos
rcrb
add
sbb
jnp
jnp
cmp
movsb
push
sbb
roll
in
add
add
adc
imul
sahf
pop
and
fbstp
ss
ds
in
jns
xchg
js
xor
shlb
icebp
push
and
xor
cmpsl
jecxz
xchg
outsl
push
into
fwait
mov
jg
dec
lret
mov
dec
flds
inc
xor
pop
fildl
jne
lods
push
xchg
push
push
lock
movsb
aam
push
ljmp
enter
daa
rcr
in
jp
in
pop
sub
mov
aam
out
js
add
adc
cltd
adc
cmp
sub
sbb
bound
decl
push
xchg
sar
jg
test
dec
and
mov
lods
cmp
insl
aas
int
lea
adc
orb
bound
cld
repnz
mov
mov
stos
stc
lds
lods
xor
mov
test
xchg
loopne
add
add
adc
jmp
jno
jg
cmp
add
jns
stos
cmp
xchg
enter
insl
jo
pop
jae
ja,pn
xchg
rorl
loopne
mov
xchg
dec
jns
into
movsl
pushf
jbe
mov
and
dec
iret
pop
mov
adc
aaa
into
dec
test
xchg
scas
or
mov
add
xchg
std
movsb
dec
ja
adc
mov
subl
scas
pop
test
ss
jle
sub
pop
xchg
push
mov
push
jle
jp
stc
clc
cmpsb
mov
lds
orb
ss
arpl
mulb
sub
dec
jge
pop
imul
inc
mov
ds
mov
fs
movsl
std
test
and
hlt
xor
jbe
test
test
test
fs
addr16
inc
mov
jb
mov
lods
mov
xlat
leave
lods
mov
jle
pusha
subb
fs
jmp
pop
and
iret
in
jae
data16
add
add
repz
cmp
lods
repz
mov
push
shlb
out
cmp
add
imul
dec
push
icebp
xchg
push
and
icebp
jno
push
xor
ret
stc
pop
adc
popa
jne
or
insl
mov
movsl
push
push
std
cmc
pop
mov
mov
mov
or
jae
xchg
outsl
and
mov
jno
sub
shll
or
adc
clc
sub
mov
aaa
add
cli
sub
in
mov
sub
jmp
outsl
push
mov
fistpl
popa
ljmp
lret
lds
aam
push
ss
push
mov
pop
out
xlat
out
adcl
inc
imul
mov
insb
inc
mov
sarl
loope
or
das
inc
imul
push
sti
push
in
cmp
xchg
dec
movsl
and
leave
jg
fisubrl
ret
dec
xchg
dec
add
lret
pop
pop
jo
cltd
icebp
inc
mov
and
mov
and
add
add
daa
push
cld
push
std
jmp
dec
push
sub
repz
add
mov
push
xchg
aas
call
jecxz
ljmp
stos
pushf
lret
add
xor
xor
adc
pusha
stos
adc
jae
sbb
enter
lret
je
adc
imul
add
mov
cli
les
js
dec
sarl
rcrl
mov
mov
lea
inc
lods
mov
call
mov
jecxz
xchg
sbb
fisttpl
jnp
insl
insl
scas
cmpsl
mov
js
decl
jne
enter
sbbl
xchg
pop
sub
push
int
into
push
mov
out
xor
push
clc
xor
dec
ffreep
mov
fs
xor
inc
repnz
add
or
cmpsb
jns
mov
in
lcall
jg
cmp
push
push
fwait
lods
ret
dec
daa
mov
cmc
out
inc
inc
pop
jbe
pushf
mov
add
add
add
sbb
dec
push
out
aad
popf
inc
dec
adc
add
and
imul
lret
push
int3
push
sti
nop
daa
movsl
jecxz
push
push
lcall
movsb
mov
push
test
mov
fsubr
data16
sub
mov
ds
mov
mov
faddl
mov
dec
and
cli
std
fimuls
repnz
es
push
xchg
lods
je
mov
jg
pop
pop
les
push
pushf
jns
daa
cmp
and
or
in
das
dec
sbb
stc
jb
shl
rolb
push
xchg
dec
or
pop
xchg
sbb
rorl
in
inc
lea
jmp
inc
push
daa
or
xchg
dec
lds
mov
fcoml
stc
add
xchg
sub
mov
scas
mov
stos
mov
pop
aas
cmpsb
push
xchg
int
outsb
ss
test
dec
jae
mov
test
out
jp
fcomp
dec
lret
xor
and
nop
jl
add
stos
add
push
mov
or
add
std
inc
add
add
pop
inc
call
sarb
jl
cld
or
pop
push
adc
ret
xchg
int3
in
and
sbb
repnz
mov
dec
imul
ljmp
inc
xor
lock
adc
xor
push
dec
add
mov
cmp
dec
inc
das
scas
adc
pop
fcomps
in
xrelease
sbb
mov
cmp
cli
push
xor
test
mov
arpl
dec
aas
push
aad
inc
shrl
scas
sbb
or
inc
cmp
push
jno
stc
or
orb
inc
fdivrs
or
loope
xor
or
xchg
dec
aad
movsb
sbb
jb
jle
inc
rcrl
dec
test
andl
stos
arpl
sub
sub
in
add
push
mov
fucomi
roll
lahf
pushf
loopne
cmp
xchg
ficomps
mov
sub
andl
add
mov
ja
jg
xchg
orl
mov
add
into
and
sbb
push
test
adcl
mov
dec
cmc
incl
mov
push
pop
ss
fwait
inc
ss
aam
inc
dec
mov
repz
sbb
and
pop
sbb
test
jl
xor
xor
cltd
aam
enter
inc
sub
out
aad
push
rolb
gs
lret
xchg
sbb
fistpll
lods
pop
jecxz
sub
mov
jmp
xor
pop
add
push
cmp
inc
rclb
mov
jno
and
not
jmp
xorb
jbe
fwait
fstpl
jle
or
jae
mov
inc
fmull
int
shlb
jmp
pushf
dec
insb
aaa
or
push
lds
inc
cwtl
dec
outsl
jl
jmp
repz
data16
dec
mov
das
mov
dec
scas
xor
shll
xchg
adc
adc
lods
fwait
stos
inc
les
out
add
add
push
dec
lret
jmp
imul
aaa
je
add
pop
inc
add
add
andb
ret
sbb
je
ret
insl
ja
sub
arpl
push
mov
push
sahf
call
test
mov
push
lods
push
inc
push
cwtl
add
mov
cs
insl
ss
mov
pop
inc
sbb
pop
fisttps
sti
push
mov
scas
in
in
lock
imull
xor
fnsave
mov
lea
outsb
loope
push
jb
sub
inc
mov
scas
and
cmc
jmp
xchg
mov
aaa
inc
adcl
inc
mov
lret
mov
test
call
fxch
testl
push
xchg
xchg
xor
daa
adc
shlb
push
jns
push
jb
adc
mov
jecxz
xchg
xchg
test
cmp
in
shrl
popa
shlb
ljmp
bound
mov
and
inc
nop
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
popa
testb
add
pop
pop
neg
ss
rolb
sub
inc
xorl
ret
mov
rdmsr
out
divb
sbb
lock
xor
stos
adc
mov
stos
mov
pop
dec
test
inc
jmp
fcomp
xor
xchg
push
inc
fwait
mov
pop
stc
aaa
jg
and
stos
addr16
cli
and
outsb
mov
mov
rorl
loope
andb
sub
jns
sbb
ret
add
mov
jp
aad
dec
xchg
sub
xchg
xor
ret
mov
incl
dec
pop
lds
cs
pop
in
xor
pushw
pop
out
mov
mov
push
sti
or
cld
or
daa
into
mov
or
jmp
insl
and
ja
sbb
jecxz
je
je
scas
push
jmp
mov
jae
jb
test
add
sub
jns
xor
jg
jecxz
cmp
add
xchg
mov
jne
aam
insl
fdivl
inc
mov
sbb
int
pop
mov
push
ret
pop
add
mov
pop
xorl
je
fstl
add
adc
cmpsl
pushf
sub
push
mov
xchg
std
push
push
icebp
dec
push
in
sub
repz
sbb
popf
dec
ret
jmp
add
add
ja
mov
sub
pop
aaa
pop
lods
pop
push
dec
mov
pop
fmuls
mov
mov
adc
cmp
push
push
push
loop
push
fidivrl
or
mov
sarl
lods
and
loop
imul
nop
sarb
xor
adc
stos
xlat
jb
in
daa
jp
and
jecxz
in
jmp
lea
icebp
lcall
sub
ret
dec
inc
or
xlat
fcomi
push
pop
jl
aas
rolb
mov
push
setnp
and
js
ret
jg
decl
rol
push
pop
data16
push
inc
add
add
mov
into
xlat
insb
dec
inc
fimull
and
sbb
dec
mov
cmp
push
in
xchg
mov
sbb
in
shlb
nopl
mov
pushf
jle
leave
pop
cmp
adc
add
push
xchg
fnstenv
or
fmull
xchg
dec
pop
or
movl
sub
inc
shr
sarb
call
mov
jnp
loopne
test
add
xchg
cmp
and
es
dec
in
call
out
sub
sahf
test
sub
add
and
mov
or
repnz
insb
roll
and
mov
subl
cmp
push
mov
es
rcll
xchg
out
movsl
add
fldt
push
stc
inc
pop
cmp
jecxz
outsb
xor
aad
or
xor
mov
mov
inc
or
fwait
pop
mov
mov
incb
loopne
outsb
add
add
das
mov
out
aad
or
lret
add
add
mov
lock
xor
out
ss
clc
addl
and
int3
jmp
popl
into
jb
jg
xchg
aaa
push
js
out
or
mov
and
sub
adc
mov
nop
sub
jae
jmp
cmp
repz
add
sbbl
and
sbbb
cmc
and
sub
cmp
add
cmp
or
rcrb
clc
push
lods
mov
jno
or
sub
je,pt
xor
xchg
jmp
dec
stc
dec
mov
pop
lds
mov
ja
into
stos
in
mov
push
xchg
or
movsb
sbb
cmp
aaa
cmp
sbb
scas
lock
mov
int3
lock
push
cmp
scas
xchg
mov
dec
dec
popa
dec
xchg
pop
mov
cmp
je
pop
add
add
hlt
gs
dec
adc
push
mov
dec
add
add
push
test
rep
ret
jb
test
data16
sbb
xlat
or
dec
xor
xor
lret
push
dec
pusha
cwtl
shlb
dec
dec
pop
xchg
adc
nop
or
les
sub
dec
mov
and
js
repz
jns
push
stos
jbe
data16
cmp
sbb
popf
jge
sbb
cmp
sub
mov
outsb
sbb
lock
test
push
jecxz
inc
rcl
aas
pop
mov
pop
pop
rorb
sub
xchg
mov
mov
sbb
lock
cmc
pop
fisubrs
jmp
in
insl
rclb
inc
out
push
idivl
nop
lret
movsl
add
negl
sti
jmp
sub
loopne
adc
lahf
stc
dec
ljmp
cmp
and
loop
cmc
es
fs
lahf
and
inc
ret
add
add
aas
gs
pop
repnz
dec
add
add
mov
xor
sbb
cs
mov
insb
mov
in
xor
xor
inc
je
cmp
inc
aam
loop
jb
add
pop
xorl
daa
sti
stos
arpl
mov
or
sbb
mov
subl
sub
mov
sbb
or
imul
mov
roll
pop
lock
adc
lret
pop
pop
xor
adc
xorl
mov
cmp
test
pop
xchg
adc
bound
jb
push
rol
imul
push
cmpsl
jp
sub
add
mov
test
lret
cwtl
jle
inc
imul
inc
adc
inc
xchg
sti
and
cmpsl
mov
and
dec
loopne
cwtl
cmc
out
mov
test
jl
inc
add
aam
out
inc
pop
jns
or
test
ss
xchg
xor
inc
adc
add
add
out
fisttpll
lock
lods
out
sub
add
jae
test
adc
mov
ljmp
pop
and
sub
jno
sbb
out
stos
je
jo
jns
mov
cwtl
mov
mov
cmp
inc
arpl
lds
xchg
adc
mov
inc
sbb
daa
xchg
xchg
push
in
add
mov
aam
and
inc
mov
mov
icebp
mov
pushf
rcll
mov
mov
add
mov
daa
lahf
fdivs
mov
outsl
movsl
jne
lods
jl
loope
enter
aaa
xchg
hlt
push
xchg
dec
push
xchg
outsb
sub
push
icebp
xlat
dec
scas
pop
push
xchg
jge
sub
test
cmpb
clc
shlb
pop
mov
les
movsl
int3
aam
loop
push
or
pop
mov
sbb
or
cmc
sbb
ja
in
pusha
ror
push
xchg
push
jle
mov
clc
imul
add
mov
ljmp
add
add
mov
xchg
xlat
insl
jno
popf
loop
cmp
pop
xchg
cltd
fnstenv
sahf
pmulhuw
lea
in
lock
jg
jo
or
dec
insb
es
xchg
mov
inc
daa
sar
mov
imul
pop
push
mov
cmp
cmp
test
outsb
xchg
fisttps
shrb
inc
xchg
xchg
mov
and
add
jle
sub
js
sub
xor
mov
pop
std
add
sub
pop
rcll
adc
popa
loop
mov
cwtl
sbb
lds
cltd
scas
sbb
into
xor
adc
std
out
ds
dec
or
inc
pop
popf
cltd
sbb
pushf
dec
or
pop
xor
test
push
leave
or
push
jno
pop
mov
xchg
out
scas
sarl
xchg
movsb
cltd
add
add
jmp
out
aas
jo
sahf
jb
pop
stc
mov
dec
add
add
xchg
das
insb
xchg
dec
sub
clc
imul
jge
dec
loope
ror
push
shrb
or
pop
pop
push
pop
into
arpl
movsb
adc
std
js
cmc
rcrl
mov
out
inc
dec
je
sub
add
jle
jns
in
xlat
cmpsb
push
jno
pop
inc
sahf
ret
out
hlt
stos
jge
mov
or
popf
iret
jns
lahf
test
in
sbb
mov
pop
or
lret
mov
inc
add
xchg
cmp
icebp
dec
sub
sub
adcb
mov
rorl
test
add
dec
dec
and
mov
inc
sbb
push
inc
push
inc
mov
mov
adc
shlb
adc
xor
xchg
adc
sub
lahf
loop
mov
or
sub
push
mov
repz
inc
push
push
inc
dec
add
roll
ljmp
xchg
mov
add
cmp
imul
out
mov
mov
sub
cmp
add
dec
sub
xchg
mov
dec
mov
xlat
push
pop
push
movsb
ljmp
movsb
pop
rcrb
int3
loop
stos
xchg
testb
insl
les
outsl
sbb
sti
xchg
adc
out
in
sbb
mov
push
stc
out
cmp
add
mov
insb
sub
adc
cmpsb
shlb
mov
shll
pop
incl
dec
cltd
int3
out
sub
inc
or
and
mov
and
inc
pop
js
xor
lahf
gs
jb
je
outsb
push
addr16
pop
cmp
lea
adc
push
clc
imul
cwtl
sub
loopne
mulb
into
adc
into
add
mov
and
aaa
sub
iret
push
dec
in
pop
mov
out
lcall
shlb
adc
adc
int3
jle
gs
add
add
dec
stc
mov
ljmp
ds
add
add
and
addr16
divl
outsl
imul
mov
outsb
pop
lret
pop
gs
jnp
loop
push
cmp
and
push
inc
xchg
mov
cmpsl
inc
icebp
push
lds
dec
outsl
dec
xchg
fadds
jmp
inc
stos
icebp
mov
out
xor
popa
xor
push
test
daa
enter
insl
cmp
and
pop
push
call
aas
int
push
mov
lret
pop
shr
out
push
imul
cwtl
fcompl
neg
xchg
cmpsb
into
addr16
adc
imul
xchg
lods
pusha
xchg
jecxz
cltd
inc
ficoml
cli
loop
push
cwtl
jnp
push
arpl
cmp
lret
cmpsb
popf
shll
mov
addr16
push
shlb
mov
dec
and
add
mov
or
sbb
dec
data16
jge
ret
call
push
fstps
adc
clc
icebp
loopne
xchg
in
pop
popf
add
add
jg
cld
lcall
xchg
add
add
sub
stos
jbe
in
popf
inc
dec
xchg
xchg
mov
jns
movsb
lret
mov
push
push
adc
es
pop
xchg
mov
je
add
das
cmp
pop
mov
and
push
rclb
pop
push
in
fstpl
daa
out
dec
sub
mov
and
sbb
or
pop
popf
xchg
mov
xor
push
out
or
push
pop
sub
ror
push
push
push
or
dec
xchg
mov
dec
pop
and
pop
dec
mov
xchg
ljmp
xchg
xchg
pop
lahf
js
aam
push
test
decb
push
xchg
lret
jl
pop
xor
in
sub
add
push
or
mov
adcl
ret
sub
xor
push
adc
add
push
dec
sbb
cli
gs
imul
loope
and
cmp
adc
pop
sub
xor
add
mov
xchg
mov
pop
add
jne
push
add
add
loop
icebp
xor
ljmp
cmc
xchg
ja
repz
in
xor
in
lock
xchg
inc
jp
pop
xchg
adc
aas
aad
sahf
inc
jecxz
lods
cmp
dec
xor
incb
cmpsl
aas
mov
dec
inc
imul
call
add
pop
or
push
outsl
shrb
mov
stos
jns
in
aas
add
mov
rclb
adc
loopne
cmpsb
sub
imul
sahf
test
add
pop
sbb
xchg
je
inc
dec
or
push
fsubl
pop
out
xlat
int3
dec
mov
loopne
inc
xchg
clc
jmp
sub
mov
scas
mov
rolb
cli
jns
mov
pusha
cmpsb
repnz
lahf
mov
test
pop
sbb
cmp
leave
adc
sbb
xchg
inc
inc
pop
adc
mov
sbb
inc
ret
inc
xlat
repnz
add
or
mov
and
adc
dec
push
add
add
retw
loop
push
mov
mov
adc
mov
xchg
jl
sub
xchg
sub
ret
adc
mov
pop
pop
jo
bound
clc
clc
inc
loope
insb
mov
aas
pop
ljmp
je
fildl
leave
loope
cmp
add
in
jno
sub
or
xchg
xor
data16
push
icebp
add
or
sub
dec
push
and
add
push
sub
leave
pop
xchg
call
mov
and
clc
repz
stos
addl
and
cmc
xchg
pop
in
xor
cld
movsl
xchg
clc
push
stos
jnp
outsl
mov
outsb
in
add
pop
and
add
xchg
repz
dec
xor
pusha
and
outsb
fmul
aas
mov
ret
ljmp
inc
js
mov
xor
out
add
add
sub
cmp
ret
or
pop
lret
dec
push
push
add
add
jle
aas
mov
ljmp
xchg
movsb
ret
popa
insb
pop
cltd
pop
fsts
into
xlat
aad
push
mov
gs
bnd
mov
out
dec
dec
dec
jb
mov
arpl
lods
loopne
fmul
imul
xor
dec
or
lcall
popf
mov
sbb
in
mov
mov
sbb
je
jb
xchg
lret
inc
testb
aaa
aas
mov
jnp
stos
shl
subb
xor
xchg
and
clc
and
push
mov
jb
xchg
and
jne
or
std
iret
movsl
test
mov
mov
inc
sbb
stos
fwait
scas
test
repz
mov
iret
cwtl
inc
nop
fs
nop
adc
outsl
test
mov
fld1
fisubs
addr16
iret
cmp
jmp
ss
dec
push
lea
xor
adc
xor
xchg
and
pop
inc
mov
cmp
mov
add
add
push
shll
out
pop
pop
pushf
push
adc
mov
add
gs
push
idivl
nop
gs
rcl
xor
es
pop
fiaddl
xchg
dec
add
sbb
pop
or
pop
xchg
inc
xor
in
mov
lret
xor
pusha
jle
sbb
jl
dec
movsl
add
aas
sub
xor
mov
xchg
or
int
mov
xchg
jmp
sti
sti
cli
ficompl
sbb
popa
cmpsl
sti
call
bnd
sbbb
outsb
jae
push
lea
repnz
ret
fwait
adc
mov
or
lret
dec
add
xor
insb
out
mov
inc
lods
mov
push
ficompl
pop
xor
adc
xchg
outsb
out
fisubl
dec
leave
bound
rorl
shl
pop
int3
mov
mov
aaa
cmp
xor
repz
adc
in
xlat
xor
cs
push
add
pop
ret
ss
xchg
lds
add
add
out
lcall
hlt
mov
clc
jl
pop
push
add
add
outsl
add
ja
mov
shlb
pop
sub
sbbl
into
or
cmp
es
or
jmp
sbb
jo
add
xlat
lret
push
xchg
lret
nop
sbb
fistl
xor
pushl
adc
xchg
shl
pop
lahf
cmp
jo
jmp
mov
inc
test
lds
pushf
scas
shll
and
nop
cmp
lock
xchg
cltd
test
inc
mov
sti
inc
jmp
xchg
rcl
inc
mov
xchg
lret
cmpsb
rolb
or
outsb
insl
jnp
mov
addl
xchg
lcall
or
pop
inc
ljmp
loopne,pn
sbb
and
outsl
stos
cmpsl
pop
stc
mov
push
lahf
std
ja
arpl
push
xchg
pushf
lea
push
cmp
cmp
repz
add
add
jbe
idiv
imul
stos
in
lea
add
add
cld
sbb
push
push
cmp
addr16
xchg
lahf
call
std
adc
push
inc
shrb
fisubrs
lret
jge
inc
push
mov
ret
test
lods
fcos
mov
fcmovnu
dec
xchg
push
jo
adcl
popa
mov
insb
jge
or
movsb
inc
cmp
and
in
das
cmp
mov
pop
mov
rorl
xchg
lahf
push
sarl
sub
pop
push
lcall
push
mov
mov
out
dec
xor
pusha
add
mov
ljmp
and
pushf
inc
dec
stos
cli
push
jbe
fsubrl
cs
jb
pop
sub
aad
push
cmpsb
and
jmp
movsb
jle
popa
insb
push
negb
fcomps
mov
mov
adc
and
das
outsb
inc
outsb
mov
in
das
cwtl
pop
mov
add
jae
fwait
cmp
stos
sarb
push
add
add
mov
xchg
xor
pop
ss
and
aaa
fwait
xor
xchg
inc
dec
mov
mov
cmpb
xor
shrb
dec
mov
sub
mov
lret
adc
adc
ds
add
jmp
data16
mov
jl
sub
cmpsb
call
scas
inc
cwtl
mov
scas
adc
fdivs
xor
sub
dec
fisubrs
stc
lcall
mov
insb
or
inc
push
mov
cwtl
leave
or
xchg
nop
testb
sub
in
fists
mov
mov
or
sahf
movsl
push
ret
or
cmpsb
inc
shrl
dec
call
add
aam
sbb
fldcw
rcrl
repz
add
jnp
pop
inc
cmp
sub
inc
mov
sub
sub
jnp
xor
mov
add
add
clc
mov
and
hlt
sub
push
add
add
or
fsubp
mov
in
and
std
loope
sti
mov
dec
jnp
sbb
xchg
pop
lods
inc
pop
mov
sbb
fwait
outsl
and
jg
or
push
sbb
cmpl
jae
xlat
ds
aad
lret
push
push
xor
adc
jns
scas
lods
in
dec
jbe
sub
pop
sub
sbb
lods
out
pop
push
in
int
add
or
adc
xor
inc
push
in
sub
nop
xchg
cmp
bound
jo
ja,pt
out
mov
pop
xor
loop
sub
popf
pop
inc
call
fwait
cmc
add
aas
push
inc
mov
sub
rcrb
xor
test
xchg
inc
lcall
xor
cmpsb
in
in
and
mov
or
xlat
jne
addr16
mov
cmc
in
inc
jno
adc
jmp
mov
subb
sub
xor
imul
add
add
shr
mov
push
pop
push
movsb
jo
add
add
scas
stc
and
xchg
lcall
int3
movsl
aas
inc
outsb
and
loope
or
inc
data16
mov
xchg
xchg
cmpsl
lods
inc
daa
stc
xchg
stos
pop
pop
sub
cli
or
in
movsb
popf
sub
add
leave
test
cmpsb
sbb
inc
jnp
sbb
xchg
dec
and
mov
mov
cmpsl
xor
mov
ss
add
int3
or
cmp
fnsave
pop
jle
xchg
movsb
jnp
and
hlt
clc
sar
dec
cmp
shrb
lret
out
mov
push
cs
ds
dec
mov
iret
pushl
aad
push
xchg
stos
dec
dec
pop
mov
scas
pop
lret
fisubl
mov
fcomi
mov
pushf
xchg
ror
fs
xchg
subb
mov
iret
lock
and
xchg
pop
stc
scas
inc
in
lret
dec
enter
adc
sub
ret
ret
dec
pop
aam
sub
jle
sbb
add
add
mov
lds
aad
data16
clc
jne
add
add
inc
jae
or
lahf
xchg
jp
xchg
push
mov
cmp
pop
leave
cs
inc
push
mov
in
jns
xor
rol
xchg
lock
clc
push
out
loop
fwait
jb
pop
push
adc
outsb
and
mov
adc
jno
cs
aad
fwait
mov
push
aaa
add
inc
inc
push
jae
mov
cmp
lea
les
mov
mov
in
fimuls
imul
or
sarb
dec
adc
mov
mov
pop
lods
roll
rorl
dec
add
fldl
push
imull
in
repz
rcll
test
sub
loopne
adc
sbb
ffree
iret
xor
stos
mov
jne
jg
adc
xor
iret
loope
push
iret
jp
std
aaa
das
loope
aas
mov
stos
pop
sbbb
push
push
lods
dec
movl
gs
jle
lods
imul
add
mov
and
das
cmp
pusha
daa
sbb
and
add
xchg
inc
ds
test
mov
ficoml
cld
and
adc
sbb
into
fnstsw
xchg
cld
inc
shll
xor
dec
sarl
ja
icebp
mov
cmp
repnz
out
add
jno
cmp
inc
aad
mov
mull
out
inc
movsl
or
sbb
mov
mov
pop
leave
pushf
movsb
jl
ljmp
hlt
mov
lahf
cmp
jne
mov
dec
fldenv
mov
and
jnp
dec
adcb
or
pop
mov
scas
outsb
xchg
jb
jecxz
fcmovne
cmp
cmp
fldenv
pushf
fsubrp
cs
or
in
hlt
pop
pop
xchg
xchg
stos
call
xor
cmp
jo
sub
in
mov
jl
and
pop
dec
ja
loop
jg
daa
mov
adc
stc
lds
mov
in
and
add
add
movsb
jae
jnp
mov
ja
mov
rolb
add
adc
dec
mov
mov
adc
adc
push
dec
icebp
jne
and
out
test
fucomi
int
push
sti
lea
push
mov
lods
xlat
add
mov
and
xor
adc
push
rclb
cmpsl
cmpsb
ja
or
loope
js
adc
dec
sub
pop
mov
adc
add
ds
sub
mov
dec
cmpsb
movsb
mov
pop
pop
xor
jg
js
lcall
lds
dec
sbb
inc
pop
xchg
lods
lods
inc
cwtl
lock
jmp
adc
sbb
inc
add
dec
dec
inc
add
push
ret
jg
cmp
pop
cwtl
shl
orl
add
cld
mov
outsl
push
dec
enter
adc
jns
dec
ljmp
push
icebp
aaa
in
jno
mov
xchg
push
fbstp
scas
adc
lahf
xlat
out
cld
add
mov
add
push
lock
mov
jo
jmp
adc
cmp
fisubl
and
push
es
clc
jmp
out
jns
jl
jbe
jbe
push
xor
cwtl
out
out
popf
mov
rcrl
and
add
mov
xchg
inc
cltd
mov
les
push
push
arpl
ficoml
shrb
or
or
pop
subl
loop
cli
inc
mov
add
sahf
pop
imull
add
adc
lods
stos
mov
mov
add
or
xor
dec
shll
insb
test
ljmp
jge
sbb
sub
jmp
sbb
jmp
push
or
lahf
add
mov
icebp
gs
dec
cmp
dec
adc
xchg
fstpl
clc
sub
lret
push
movsb
xlat
sbb
clc
insl
jg
pop
sub
imul
cmp
add
add
mov
add
add
dec
mov
add
mov
out
movsb
sub
cmpsl
dec
cli
dec
out
fstps
out
mov
cli
aaa
or
cwtl
cmp
mov
pop
sub
pop
outsb
dec
cmp
inc
frstor
pop
mov
push
clc
jb
ds
ljmp
mov
ror
rcr
mov
xchg
push
fmuls
movsl
mov
stos
mov
sbb
xchg
pop
ljmp
inc
push
sbb
rorb
sub
fnstenv
mov
dec
mov
cs
push
mov
mov
dec
sub
jne
cwtl
dec
fwait
inc
sbb
fwait
cmp
jb
xor
cmpsb
xor
xor
notb
mov
outsb
or
pop
jae
and
mov
lret
inc
dec
lea
movl
fdivrl
jbe
int
cmp
pop
pop
hlt
cwtl
cltd
xchg
mov
and
out
shl
jno
add
out
into
push
push
inc
lahf
mov
mov
add
insb
jae
sbb
rcll
or
pop
dec
imulb
xlat
xor
loopne
sbb
mov
sbb
popa
add
cltd
add
cli
cs
adc
ret
orb
jb
sub
bound
lahf
addr16
add
or
xchg
adc
xchg
int3
mov
pop
stos
int
mov
add
or
mov
push
xorl
bound
lfs
subl
scas
xchg
lahf
lret
push
xor
enter
adc
cmp
test
rcll
nop
cwtl
push
enter
fcmovbe
cmc
push
push
or
adc
cmp
xchg
and
inc
rolb
insl
mov
push
ss
mov
test
jo
pop
loop
xchg
scas
sub
loopne
movb
mov
inc
push
adc
sub
in
aam
fldl
test
mov
push
js
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
fcmovne
jnp
sbbb
push
sub
int3
imul
cmpsb
and
data16
inc
jns
jnp
sbb
add
or
inc
mov
int3
or
std
fcoml
pusha
xchg
cmp
dec
sti
jg
jl
test
pop
rolb
xor
arpl
mov
push
mov
stc
leave
sbb
jp
xor
dec
adc
and
dec
jbe
shlb
push
lods
ret
lcall
insl
mov
rcrb
leave
dec
loopne
call
rorb
lds
lods
dec
fidivrs
insl
xchg
add
mov
popa
test
ror
sbb
sub
ja
xor
inc
xchg
jnp
mov
adc
arpl
sub
sbb
stos
test
adc
mov
lock
pop
adc
push
push
cli
pop
inc
bound
inc
leave
xlat
sbb
fs
add
dec
adc
add
add
lahf
pop
cmpsl
jne
mov
lcall
add
roll
pop
in
push
cmc
iret
lcall
dec
popf
ret
inc
loopne
rcll
ds
dec
cmp
pop
sti
jmp
dec
dec
pop
fistpl
jno
sbb
mov
mov
leave
in
mov
insb
ljmp
pop
aad
inc
and
scas
jnp
sbb
int
dec
cld
stos
test
je
and
and
sbb
cld
xchg
adc
sub
jb
mov
aas
push
push
lea
inc
mov
inc
mov
fisttpl
adc
xchg
jecxz
jecxz
in
sbb
mov
stos
dec
jne
jo,pn
leave
test
loope
fldl
mov
xor
fmuls
xor
add
or
test
icebp
sbb
test
cli
pop
push
rol
add
mov
or
push
ret
or
in
shl
ja
mov
add
add
idiv
jg
sub
mov
popf
popa
add
add
push
mov
jb
pop
jge
call
or
repnz
inc
int3
data16
subl
or
lods
mov
outsl
icebp
fcomps
add
std
jge
stc
xchg
push
mov
arpl
mov
mov
test
ret
stc
imul
mov
pop
xchg
outsl
cli
jo
xor
stos
and
push
lods
out
lahf
jae
repz
pop
cmpsb
mov
ret
pusha
lods
push
inc
adc
mov
lock
sbb
addr16
popa
data16
lods
mov
ljmp
xor
fwait
push
sbb
jg
xlat
cmp
not
test
aas
ss
cmp
jg
xor
dec
call
jmp
outsb
push
add
mov
repz
iret
sub
ss
inc
jb
aas
mov
jecxz
xchg
scas
dec
es
inc
leave
mov
dec
fildl
xor
mov
shr
mov
xor
add
inc
pop
mov
fstps
pop
fbld
add
add
and
std
ret
mov
dec
jae
mov
xchg
sbb
hlt
inc
and
cmp
xchg
dec
pop
cmc
lds
pop
xchg
mov
popaw
gs
outsb
movsl
gs
movsl
mov
sbb
push
cli
cwtl
jge
divl
xorl
movsb
xchg
fadd
addr16
out
xchg
in
add
test
repnz
mov
and
outsl
pushf
adc
outsl
xchg
iret
and
push
inc
jecxz
ret
cwtl
mov
addr16
ds
mov
inc
add
sub
enter
or
adc
dec
sbb
dec
jle
mov
ljmp
cmp
sbb
aaa
cmp
dec
push
xor
dec
or
cmp
jle
fbstp
stos
add
in
scas
popa
out
and
push
ficomps
mov
inc
call
push
add
add
repnz
movsb
jle
arpl
outsl
insb
cmpsl
arpl
add
or
mov
lea
lock
push
mov
pop
xor
inc
es
mov
subl
lahf
ret
sub
fwait
icebp
push
pop
dec
mov
cli
mov
xor
fs
stos
nop
sti
cwtl
mov
push
jle
je
stc
jge
out
js
mov
jbe
inc
cmc
jmp
push
xchg
in
insb
out
dec
dec
xchg
stc
inc
iret
addr16
mov
adc
push
cmc
ja
jg
adc
test
pop
sahf
pop
jbe
sub
test
sti
popa
lea
ja
jg
out
xchg
lret
rcrl
mov
adc
add
jp
inc
ret
js
cmpsb
xchg
notb
jae
leave
push
bound
cld
cmc
cmp
or
and
mov
jo
inc
xor
test
mov
push
fcmovbe
pop
adc
leave
aaa
jbe
jbe
das
jge
and
in
jb
hlt
lock
add
jmp
sub
rcrb
add
add
dec
lahf
jp
fwait
out
sub
adcb
jne
sbb
sub
mov
imul
jo
adc
popf
inc
cltd
jbe
nop
lcall
sbb
sbb
out
icebp
mov
out
add
or
sub
mov
sub
pop
std
mov
not
scas
xchg
jb
fbstp
fisttpl
lret
rolb
push
or
loope
add
fistl
add
lock
xchg
stos
pusha
decb
and
repnz
or
aaa
adc
imul
fistps
je
inc
add
push
sub
out
imul
sahf
push
loop
inc
rcrb
repz
outsl
push
mov
movsl
popa
adc
mov
sbb
shlb
pushf
call
fnstsw
push
inc
je
in
dec
inc
aad
push
aas
or
fdivs
int3
or
fs
jb
fwait
push
lock
xchg
add
shll
fnstenv
inc
arpl
add
testl
lods
mov
lret
dec
lock
pop
inc
fs
pop
addr16
dec
mov
push
add
imul
imul
ret
jl
shll
cmp
inc
aaa
inc
jg
or
in
pop
cmc
addl
jle
jb
lret
rcrl
push
popf
sub
xlat
popf
cltd
in
pop
xor
jg
xchg
jmp
xchg
jnp
lock
push
js
mov
fsts
in
add
xchg
scas
popf
add
test
lret
xchg
scas
test
sbb
jge
js
pushf
sub
cmp
mov
call
nop
cmpsl
cmp
negl
adc
inc
xchg
adc
ja
data16
pop
lcall
push
daa
loopne
scas
jp
jle
jnp
js
mov
jns
adc
xor
cmp
and
bound
lods
xchg
xchg
xchg
mov
pop
cli
xlat
push
movb
add
cld
je
jbe
jns
sbb
lock
jge
mov
add
add
lea
pusha
ljmp
lods
mov
xor
inc
pop
test
sti
xor
mov
xchg
and
sbb
xor
mov
or
or
js
sahf
lret
cmpsl
stos
xor
mov
push
pop
stc
adc
aam
cmp
sarl
stos
adc
mov
jo
out
and
sub
mov
and
xor
lcall
pop
mov
and
in
test
adc
je
push
xchg
rorl
rolb
nop
xchg
sar
adc
add
xor
into
aam
outsb
mull
xor
rcr
lret
sub
lahf
std
test
scas
cmc
push
out
loop
lock
sbb
mov
outsb
mov
adc
inc
xchg
fs
or
mov
dec
mov
insl
mov
add
push
cltd
jmp
fildl
or
add
add
dec
push
enter
in
xchg
dec
mov
sbb
adc
inc
push
xchg
fidivrs
dec
push
push
mov
dec
inc
or
sbb
rclb
cld
mov
aam
fsubs
addl
call
ss
pusha
pop
xchg
outsl
pop
test
pusha
ja
xchg
xchg
cmp
aaa
aad
push
sub
paddw
in
push
cmpsl
inc
xor
rorb
aas
loope
add
js
or
xor
dec
mov
xchg
push
push
stos
or
inc
subb
add
scas
jg
pop
dec
and
arpl
es
pop
lret
mov
ret
shlb
sahf
shlb
enter
das
add
popf
push
mov
jp
pop
adc
iret
mov
jl
jge
cli
dec
jae
jmp
js
in
push
out
ss
jmp
out
jmp
dec
andl
add
fimull
rolb
add
mov
mov
push
jg
dec
xchg
dec
test
mov
add
test
sbb
cmp
addb
out
pop
xor
cwtl
push
aam
pop
stos
mov
adc
mov
cmp
test
inc
rcl
cmp
loopne
lahf
test
mov
or
and
aas
mov
jmp
cmpsb
mov
in
mov
ja
lret
inc
xchg
push
mov
mov
cmpsb
mov
pop
dec
lcall
scas
pop
sub
test
xor
outsl
xchg
lea
pop
adc
push
mov
fdivrl
ss
cmp
pusha
mov
fcomp
jne
cmp
loope,pt
fwait
mov
xchg
lahf
mov
sbb
jo
aas
cld
leave
sahf
mov
lods
add
push
fldcw
adcl
xor
out
out
loop
mov
mov
loope
push
xor
pop
insb
mov
mov
add
adcb
test
clc
out
test
dec
or
push
arpl
cmc
sldt
add
mov
fucomip
push
insb
xor
fldl
xlat
scas
lds
add
sub
mov
ret
dec
mov
push
movsl
rcrl
push
clc
or
scas
test
mov
mov
mov
mov
addb
insb
leave
fistl
jmp
mov
sbb
push
ds
lods
and
pop
sbb
or
cmpsl
fdivrl
fcoml
imul
pop
or
data16
push
test
sbb
loope
dec
imull
int
out
test
or
psraw
nop
ret
xor
or
test
lret
cmp
in
std
lcall
enter
jns
outsl
nop
push
in
enter
out
loope
enter
loope
add
lahf
int
arpl
outsb
dec
and
sarl
inc
adc
movsl
mov
or
ret
fisttpl
sahf
inc
ljmp
adc
cld
add
add
add
dec
out
iret
jmp
aas
in
push
data16
adc
push
add
notb
push
inc
dec
sub
addb
lea
push
and
jne
leave
mov
cmp
dec
xchg
or
xlat
lcall
int3
fldl
xor
mov
sub
cmp
mov
in
std
pusha
fwait
push
cli
xor
and
jns
cmp
adc
das
dec
sbb
push
sti
lret
mov
orl
mov
mov
repnz
mov
sub
inc
jle
mov
mov
rcll
dec
xchg
scas
xchg
stos
add
jb
lret
cmc
ss
pop
xchg
pop
xor
xchg
xchg
lock
sbb
test
pusha
jge
out
mov
aam
inc
jmp
stos
pop
and
loop
mov
xor
inc
fisubs
fwait
les
and
xchg
mov
push
push
lcall
lahf
repz
pop
add
add
std
cmpsb
pop
dec
sub
sub
call
add
add
fistpll
out
in
loop
sbb
pop
add
inc
xcrypt-ofb
cmpsl
sub
loop
fdivl
sub
out
into
cltd
scas
adc
std
pop
sarl
movsl
and
mov
jmp
jp
fcoml
setb
sub
cmp
scas
pop
mov
cld
rolb
sar
int
mov
mov
jle
adc
shrl
xchg
hlt
aas
loope
xchg
aas
lods
pop
inc
jbe
dec
cld
or
pop
mov
jb
pop
push
or
adc
cmp
pop
inc
fwait
in
mov
cli
push
mov
dec
or
clc
mov
or
pop
data16
nop
jo
sbb
sbb
xchg
stos
sbb
push
sub
mov
subl
imul
mov
nop
jno
add
stos
repnz
inc
in
stos
dec
sub
repz
ficoml
and
push
add
add
neg
std
sub
dec
daa
pop
aam
add
add
stc
pushl
pop
movl
lret
addr16
fbld
enter
in
shrl
ja
loopne
fcoml
ljmp
stc
mov
fidivs
aam
bound
or
cld
xor
loop
mov
push
pop
loopne
adcl
sbb
bound
subb
mov
and
mov
adc
push
or
out
imul
sub
adc
out
inc
mov
fnstenv
add
mov
pop
movsl
cmp
and
cmp
mov
cmp
sbb
mov
dec
iret
cli
cltd
inc
dec
loopne
addr16
xchg
dec
in
out
cmp
fnstcw
lahf
xor
popf
cld
xchg
fcoml
jle
ja
int
pop
mov
mov
lds
mov
jecxz
hlt
stc
sub
movsb
cmp
lea
stos
repnz
addr16
rolb
add
add
cs
xor
cltd
adc
insl
add
add
add
jb
jns
mov
jge
clc
mov
dec
add
inc
iret
mov
and
add
and
outsl
jae
data16
data16
das
int
jbe
mov
clc
addb
popf
add
dec
or
js
test
aaa
push
inc
xchg
mov
adc
popf
xor
jmp
push
call
cmp
addr16
sbb
sbb
xchg
dec
mov
push
inc
cmpsl
sbb
and
mov
xchg
sbb
popa
inc
or
adc
bound
jl
or
sbb
lods
inc
jns
jge
arpl
pop
or
add
scas
sbbl
jle
add
arpl
adc
push
outsb
js
adc
dec
fstps
test
inc
cmc
in
and
les
mov
rclb
repnz
fucomi
test
fdivrs
iret
stc
imul
cwtl
xor
lcall
out
sbb
int
fisubrs
add
movsb
in
cmpsb
xor
fwait
arpl
int3
xor
pusha
mov
dec
pop
test
fsubl
cmp
add
les
sbb
or
in
out
jmp
divb
add
mull
jp
cmp
push
add
inc
pop
out
mov
out
sbb
and
into
jl
mov
mov
test
add
pop
mov
popf
lahf
dec
sbb
lods
xchg
mov
imul
adc
daa
sub
sub
into
cmp
daa
rcrl
push
aam
cmpsb
rorl
pop
loope
aas
jge
adc
xor
pop
add
and
xlat
xchg
xchg
in
aaa
dec
xchg
push
call
movsb
pop
xchg
xor
aad
pop
dec
jae
scas
mov
out
std
dec
jb
fucom
test
xchg
fwait
push
testl
inc
inc
jne
jae
mov
push
or
jp
in
xlat
sbb
add
daa
sub
ja
mov
int3
xor
add
add
sahf
push
mov
gs
aad
jmp
sbbl
test
xchg
inc
ret
cmp
std
cmp
jmp
cmp
popa
jo
test
mov
jl
xchg
mov
cmp
adc
in
sarl
ds
insl
lcall
mull
mov
mov
ja
push
test
xchg
test
outsb
fdivs
lret
push
stos
clc
push
mov
jecxz
sub
cmpsb
mov
popf
test
xchg
dec
or
int
dec
push
inc
inc
cmp
icebp
cmpsl
cmp
ja
and
inc
les
push
mov
push
ftst
cs
lahf
mov
inc
cmp
inc
mov
lret
push
fwait
pop
mov
inc
repz
mov
add
jmp
jo
int
jmp
sbb
xchg
out
mov
in
mov
cmp
addr16
dec
xchg
mov
nop
popf
or
add
add
cmp
jnp
outsl
cmpsb
loopne
lret
call
add
add
jp
repnz
push
in
rcr
xor
pusha
pop
adc
fdivrs
ror
push
mov
mov
mov
mov
jp
add
mov
and
lods
jae
int3
xor
movsb
sbb
lret
dec
call
mov
mov
sbb
pop
ret
jge
adc
push
push
int3
lods
cmp
ficomps
cmp
xchg
test
add
add
fisubs
lret
inc
inc
jno
cmp
and
adc
fs
mov
imull
cmp
xchg
loope
stos
mov
lret
daa
dec
xchg
sub
jae
xchg
in
cmc
lods
clc
sub
mov
ret
cld
mov
fs
in
iret
mov
and
out
xchg
cwtl
cmp
repnz
inc
cwtl
std
xor
mov
mov
loopne
xchg
inc
movsl
ja
dec
rcr
lods
lods
loope
jp
mov
js
jecxz
jns
dec
xchg
jno
mov
ret
leave
adc
add
xchg
push
mov
cli
xchg
jle
push
je
jp
addr16
jno
add
int
jne
push
out
shll
fistpll
jb
pop
or
mov
inc
cld
popf
out
or
jmp
aas
cmpsl
and
or
add
xchg
test
ret
sbb
cmpsl
mov
or
inc
xlat
push
xor
adc
xor
and
mov
stos
jae
js
xchg
dec
rclb
lcall
cmpsl
js
dec
mov
jge
in
adc
outsb
jg
aaa
orb
mov
cs
ret
and
pop
mov
or
mov
sub
rol
mov
push
popa
inc
test
les
push
lods
push
inc
mov
fildl
jl
enter
pop
test
pushf
out
inc
and
cld
or
leave
mov
scas
or
pusha
movsl
add
out
jno
push
popf
mov
adc
mov
pop
or
add
inc
aaa
dec
fwait
jnp
aad
sbb
loope
bnd
add
or
mov
lret
decb
js
sbb
mov
out
mov
enter
pop
adc
adc
push
xchg
mov
pop
jo
fnstcw
mov
cli
inc
xlat
lret
sbb
jne
or
adc
insl
sub
add
cmp
xchg
mov
push
mov
jno
cwtl
orb
mov
std
nop
pop
jne
loopne
pop
decb
out
int
mov
shrb
pop
jmp
and
testl
jg
mov
das
lcall
addl
push
inc
cmp
ret
cwtl
test
jb
jecxz
mov
pushf
cmp
push
stos
jb
nop
mov
rolb
mov
fwait
sbb
mov
fnsave
mov
and
xor
es
mov
pop
or
add
mov
dec
mov
pop
leave
lret
push
outsb
add
add
std
mov
sub
and
divl
add
add
xchg
sbb
movsb
jnp
sbb
sub
mov
cs
ja
jnp
fs
test
lods
test
mov
push
test
mov
dec
jmp
pop
mov
out
push
pop
cli
lcall
push
bound
imull
in
mov
or
cwtl
mov
inc
pop
movsb
into
and
or
js
cmp
dec
int3
hlt
pop
jb
or
enter
popa
fbstp
ds
push
and
xor
fisubl
cmp
add
pop
test
dec
lret
push
dec
lock
xor
mov
sub
dec
mov
imull
push
push
pop
xor
dec
mov
ror
pop
cld
test
das
faddl
fistpll
cmpb
xor
test
xchg
fisttpll
dec
das
ds
mov
xchg
int
ljmp
inc
push
push
xor
icebp
lds
add
fstl
lret
add
add
cmp
outsb
out
jbe
push
cli
and
pop
lret
gs
out
pop
sahf
pop
pop
ret
push
je
xor
mov
pop
sbb
pop
sub
add
lahf
mov
jmp
in
test
cs
into
cs
jp
cli
jbe
jo
sbb
iret
xchg
xor
jns
popa
bound
pop
icebp
je
mov
out
shll
in
jbe
add
mov
pop
in
add
add
aam
mov
stos
mov
jns
push
lods
xchg
add
cmp
pushf
ficoms
or
mov
ret
or
pop
cltd
ja
sub
mov
mov
aad
inc
xlat
pushf
iret
xchg
je
push
fldl
dec
or
jecxz
add
lahf
sti
ljmp
ret
lret
jge
dec
cmovb
pop
pop
push
xor
dec
das
test
inc
in
mov
mov
out
sub
sbb
jbe
add
pop
fcompl
lahf
lcall
nop
add
add
push
mov
sbb
mov
xor
sarl
xchg
ret
dec
and
dec
xor
sbb
pushl
lods
adc
inc
cmp
arpl
push
jb
inc
inc
add
xchg
push
mov
in
xchg
adc
xchg
popa
clc
push
xchg
hlt
iret
dec
jnp
and
xchg
jns
cmc
jl
hlt
enter
lea
loope
int3
cmp
dec
mov
stos
sbb
push
cmp
scas
fistps
jmp
xor
mov
scas
aas
push
insb
into
imul
sub
adc
mov
mov
test
cmp
mov
mov
aaa
or
test
loopne
fs
in
ljmp
xrelease
and
sub
mov
shll
pop
mov
dec
out
roll
add
divl
in
sub
push
ja
add
add
cmp
jle
mov
mov
and
mov
testb
cmp
insl
jle
data16
adc
ss
fwait
cwtl
mov
push
fdivl
scas
mov
adc
push
fcmovnb
sub
test
xor
testb
jo
cmc
push
pop
xor
mov
or
jo
arpl
testb
dec
inc
rcl
inc
jne
repnz
popa
cmp
jp
cwtl
sbb
dec
mov
pop
jp
call
pop
in
dec
push
seta
push
inc
imulb
cmp
sbb
sbb
mov
xor
mov
imul
clc
das
sbb
out
loop
add
in
sbb
les
cld
cmpb
pop
cmp
popf
cs
xor
pop
mov
mov
xchg
fistpll
mov
js
and
loopne
shrl
add
add
fisubs
mov
mov
sbb
or
add
push
or
jb
add
nop
mov
push
inc
inc
xchg
mov
cltd
push
fcmovnu
cmp
les
xor
jo
pop
cmp
cmp
push
xor
sbb
movsl
lahf
mov
stos
fs
cmpsl
mov
xor
mov
push
push
lahf
dec
pop
jmp
inc
mov
lea
jae
call
mov
or
outsb
aam
push
push
fsubl
push
jns
pusha
push
int
scas
out
jmp
and
lea
mov
pop
daa
xchg
cld
jns
call
imul
mov
mov
dec
cli
push
jecxz
jns
push
pcmpgtb
sub
add
sarl
push
fst
mov
and
insb
add
or
jmp
mov
jg
push
pop
jns
xchg
icebp
xor
mov
cmp
pop
sahf
shrl
mov
cmp
pop
lret
pushf
mov
inc
add
add
mov
outsl
jne
ljmp
das
les
jns
add
and
jmp
adcl
ljmp
adc
jne
fs
pop
sub
xorb
add
fdivrs
fwait
cmpl
lock
and
mov
add
add
loop
mov
inc
xchg
mov
cmpsl
stos
and
rep
jg
es
cwtl
xchg
and
push
lahf
scas
out
cmp
xchg
in
inc
xchg
mov
push
cmpsb
dec
mov
jecxz
cltd
lahf
out
faddl
sub
xchg
mov
sub
mov
mov
pop
jp
shlb
outsb
pop
mov
jecxz
aam
in
aas
xor
jg
scas
inc
aad
inc
and
jecxz
loop
add
dec
jae
fimull
sbb
and
out
xor
push
push
rcl
sti
and
jle
lods
dec
movsl
lcall
cltd
cwtl
push
pop
push
call
sub
lcall
add
testl
adc
add
add
mov
xchg
fcomp
sbb
pop
scas
or
or
shlb
push
jge
fmuls
jle
aas
sbb
loop
lods
inc
push
call
iret
lds
movsl
rcrb
les
rorl
fidivrl
push
stc
adc
push
mov
cmp
pop
or
data16
nop
cmp
repz
sub
cmp
mov
jecxz
and
push
inc
pop
pop
xchg
jp
imul
dec
push
lods
dec
adc
in
cs
or
rep
outsl
jae
push
and
je
and
aaa
push
sub
lahf
cmpsb
pop
mov
hlt
mov
mov
sub
imul
dec
insl
xor
movsl
cli
and
scas
inc
push
xor
pop
mov
leave
jne
daa
push
and
push
fdivrs
je
sbb
lods
jnp
bound
int3
and
idiv
hlt
jne
cltd
in
mov
mov
add
add
jo
ja
std
stos
sbb
ljmp
add
add
cmpsl
imul
mov
in
fidivs
nop
jle
rcl
inc
and
sub
or
add
out
outsb
pusha
imul
insl
daa
adcl
shlb
mov
dec
icebp
jmp
mov
sbb
lcall
orl
sub
out
jae
jg
ret
mov
lods
scas
mov
xor
and
sbb
jnp
cmp
inc
add
fwait
fwait
mov
adc
iret
test
jno
into
and
add
outsb
sub
mov
in
je
add
ljmp
dec
pop
add
xor
jmp
sub
rolb
sbb
add
inc
je
lods
sarb
pop
es
pop
and
popa
push
js
mov
sahf
push
push
insl
jne
pusha
jae
icebp
cld
aam
mov
pusha
fsubs
xorb
jge
xchg
test
mov
jecxz
pop
testl
add
mov
cmpsb
push
sbb
jae
pop
jl
add
sbb
mov
mov
fucomi
addr16
sub
adc
fwait
clc
pop
pop
shll
stos
push
xchg
jae
std
addr16
cltd
outsb
add
sub
test
aas
and
jne
in
sbb
inc
fidivrl
sbb
add
mov
lret
push
rcrl
add
xor
ljmp
jmp
aas
sbb
jmp
push
mov
out
in
loopne
mov
pop
dec
add
cltd
push
test
sarb
lret
out
mov
xchg
test
jle
xchg
int3
mov
mov
adc
clc
jle
addr16
push
cmp
arpl
out
adc
jb
popa
xchg
aas
add
mov
aas
out
nop
in
fbld
pop
mov
bound
enter
jl
sbb
mov
lahf
jg
adc
sbb
inc
ljmp
pusha
sub
cmp
dec
dec
mov
or
mov
add
cmp
cli
mov
test
jge
add
sub
gs
dec
scas
mov
shrb
fmuls
cwtl
fmuls
stc
aam
jno
push
repz
mov
outsl
sbb
mov
mov
ret
push
and
popa
das
lds
pop
and
dec
insb
adc
aas
push
icebp
sbb
pop
mov
adc
dec
xchg
cmp
outsb
sub
popa
fisubrs
pop
push
testb
add
dec
adcl
clc
pushf
or
push
push
adc
adc
pop
or
lds
and
orl
nop
cld
dec
lea
and
outsb
bswap
inc
adcl
roll
into
dec
int
mov
sbb
mov
movsl
lea
xor
jae
mov
lods
and
out
xchg
pop
arpl
shlb
lock
mov
inc
cmp
ret
and
add
add
test
lcall
add
sub
add
cmp
jmp
sbb
shlb
cmc
out
dec
pop
lret
and
shlb
dec
dec
out
fmull
inc
stos
and
fdivs
leave
xchg
mov
je
jb
fstpl
push
xchg
or
sbb
add
sub
and
add
fistl
xchg
jecxz
pushf
in
fnstcw
call
movsl
movsb
mov
stc
xchg
and
imul
leave
sbb
or
adc
mov
repnz
icebp
addl
xlat
mov
adc
add
push
lret
es
xchg
jne
mov
pusha
push
pop
minps
xchg
mov
inc
push
pop
ficoms
add
mov
cmpsb
in
cltd
dec
cmp
pop
dec
mov
outsb
aas
in
inc
or
xchg
aaa
int
pop
jecxz
sub
or
insl
addr16
pop
pop
cwtl
outsb
lods
fisubrl
lea
push
jmp
add
add
xchg
xchg
jns
jmp
mov
test
jg
add
ja
push
mov
fdiv
clc
pop
lret
jbe
mov
cmp
insl
adc
or
push
ret
test
xchg
and
dec
and
fs
lret
nop
pop
xor
inc
mov
inc
lret
roll
mov
pop
mov
cli
jo
xchg
mov
into
jp
testl
add
cmc
and
cmpsl
dec
test
leave
adc
stc
fidivrl
sub
inc
test
popa
sub
das
add
sub
add
sbb
aas
lcall
les
mov
lock
lret
orl
mov
xchg
mov
insb
cltd
jp
fdivrl
add
mov
adc
lds
xchg
in
push
test
rcrl
jle
pop
cmp
mov
jl
es
mov
mov
mov
pop
xor
mov
ds
aaa
fdivr
pop
push
add
add
lcall
mov
inc
mov
addb
add
das
cmp
sub
dec
dec
jo
cmpsl
pop
int
xchg
lahf
mov
jmp
pop
lea
addr16
into
add
mov
add
pusha
mov
inc
inc
xor
cmc
les
mov
pop
aad
add
xor
pop
daa
out
add
xor
xchg
sbb
xor
push
repz
xor
cmp
mov
clc
les
push
jnp
push
sbb
mov
test
mov
mov
mov
ret
mov
psubq
movsl
sbb
pushf
mov
mov
jecxz
dec
das
lcall
push
incl
jbe
test
dec
adc
repz
aam
jmp
leave
std
mov
jg
and
mov
mov
pop
inc
xchg
aad
xchg
sbb
jmp
cmp
ror
sbb
add
cs
in
push
xchg
mov
add
jl
cs
idiv
jne
iret
adc
addl
add
and
cmp
xor
mov
out
jnp
and
mov
mov
orb
jne
push
rcr
shrl
add
jns
xchg
dec
inc
into
cmc
int
fbld
sahf
cmpsb
in
and
cli
pop
jecxz
lds
jb
inc
pop
mov
push
jecxz
push
sbb
mov
les
pop
enter
daa
cmp
jecxz
cs
lods
add
push
add
mov
push
fidivs
jne
popf
pop
inc
jl
jg
loop
xchg
inc
ret
stos
shll
mov
cmp
and
in
inc
mul
insl
xlat
call
xorl
mov
mov
or
bound
adc
out
outsl
hlt
fidivl
xchg
add
push
jb
js
jg
cmp
push
orl
fwait
push
mov
fcompl
dec
insb
stos
jae
loope
mov
add
xchg
pushl
sub
insl
testl
add
cmp
daa
sub
jp
pop
cmp
pop
inc
daa
and
in
sbb
cli
inc
cmpsb
stc
mov
jle
in
dec
xchg
pop
lods
dec
lahf
mov
lcall
push
push
adc
ss
shl
daa
push
ljmp
cmc
popl
or
push
pop
and
sub
pushf
rorb
cs
pop
pop
sbb
mov
pushf
hlt
xchg
stc
or
add
cmp
inc
aam
sbb
imul
fdivs
ret
xor
in
push
mov
shll
jnp
int
mov
sbb
push
je
ljmp
aam
mov
andb
mov
mov
int
inc
inc
jo
lods
push
sub
xor
push
pushf
dec
aad
in
push
loopne
das
popf
data16
in
xchg
jge
out
push
les
dec
add
sbb
lods
jecxz
rcrb
add
add
sti
iret
ss
push
jno
sbb
add
fdiv
stos
push
pop
jmp
cli
sub
sbb
sub
jbe
jb,pn
aad
mov
sbb
mov
shl
fldcw
mov
inc
into
lahf
and
aaa
lahf
movsb
dec
sbb
idivl
cld
les
ret
mov
divl
and
xchg
push
jne
cmpsb
pop
in
sbb
outsl
jbe
jl
push
xchg
jbe
adc
ss
es
int
sub
lcall
notb
mov
addr16
adc
xor
aaa
cmpsl
stos
add
cmp
sub
pop
aas
push
cltd
out
nop
testl
xchg
pop
push
or
int3
mov
cli
push
or
inc
ja
push
aam
fwait
cmp
push
mov
sbb
sub
icebp
dec
dec
xchg
add
sub
mov
pop
or
dec
cltd
mov
imul
outsb
sub
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
mov
icebp
inc
test
add
ret
les
xor
outsb
movsl
fsub
adc
leave
enter
movsb
add
pop
add
lret
and
add
dec
mov
test
cmpsb
add
and
sub
mov
out
jne
lcall
sub
dec
jnp
pushf
imul
sub
loop
cmp
imul
jno
or
insl
movb
popa
popf
ret
push
xchg
dec
and
jmp
pop
xchg
cli
mov
xor
jge
cmp
test
and
inc
jl
enter
lods
cmp
mov
out
add
and
add
add
cld
dec
cmovae
mov
mov
cmp
xor
jnp
add
out
sbb
jge
pop
fbld
add
sarb
das
cmp
inc
cs
faddl
cs
add
add
mov
mov
movsl
sarl
test
add
outsl
push
divl
ss
mov
jg
test
xlat
mov
lods
arpl
scas
fcomip
or
mov
inc
jmp
mov
cli
xchg
and
add
xchg
stc
sub
mov
lret
cmp
lock
inc
shl
sbb
jecxz
sub
push
sub
loope
jge
int
jne
movsl
imul
sbb
jae
pop
mov
dec
mov
xchg
gs
imul
mov
aam
orl
gs
jne
iret
in
in
or
adc
sub
jbe
jns
rep
mov
jg
in
in
push
xor
fs
mov
fmulp
pop
xor
pop
and
dec
repz
imul
fldcw
adc
mov
les
ja
fdivrl
jmp
inc
ss
sbb
shll
lcall
mov
daa
jecxz
ret
inc
scas
cmp
and
add
add
pop
test
ljmp
lock
xchg
and
repz
xchg
add
aam
jmp
xchg
jo
mov
cmp
add
aam
sub
in
dec
outsb
jmp
xor
cmpsl
icebp
pop
test
enter
cmp
adc
mov
inc
jecxz
pop
ja
outsl
negl
daa
or
dec
push
xchg
xchg
call
and
int3
xor
loopne
ja
test
mov
fcoml
pop
mov
daa
jo
mov
jp
movsl
jp
pop
add
mov
ds
mov
adc
xchg
nop
fidivl
inc
bound
addl
and
call
jae
inc
push
les
mov
addr16
ja
jbe
add
inc
pop
mov
roll
jno
insl
mov
xchg
inc
out
cmp
mov
or
xor
jae
test
adc
sahf
inc
gs
mov
data16
imul
push
jnp
sbb
push
xor
xchg
xchg
push
push
xchg
add
mov
in
inc
xchg
insl
xchg
sbb
cs
shr
push
sbb
mov
arpl
repnz
std
or
aas
mov
shlb
icebp
dec
dec
inc
jp
loope
pushf
jl
add
dec
out
sbb
fldcw
jecxz
mov
fs
lods
lcall
pop
push
mov
int3
inc
out
add
adc
push
adc
jb
nop
xlat
in
clc
push
fimuls
mov
jno
stos
nop
or
mov
mov
scas
push
ds
fcmovnb
nop
mov
and
cmp
and
shlb
xchg
lods
in
mov
popf
jge
stos
fwait
add
jmp
ljmp
aam
adc
rcr
jge
xchg
out
pusha
das
sub
jb
arpl
sbb
mov
push
dec
xchg
inc
int
ffree
ficoml
add
aas
or
mov
ja
jle
pop
mov
add
xlat
test
rorb
test
fiaddl
jae
adc
out
lods
cwtl
and
mov
xchg
sbb
ljmp
in
loope
jle
mov
lods
fbld
mov
nop
rolb
mov
inc
gs
mov
sahf
in
add
sub
fistps
mov
mov
lcall
sti
jb
call
push
ja
fimull
add
and
out
leave
nop
ja
add
and
fwait
insl
incb
xchg
push
xor
cmp
push
div
test
xlat
repnz
lock
or
hlt
aas
aad
pop
int3
mov
in
jo
push
dec
dec
dec
fsubs
in
mov
fwait
and
test
push
cltd
dec
jno
adc
cmp
sbb
clc
jae
std
lret
mov
sti
mov
pop
sbb
jmp
or
add
add
push
outsb
fisubs
test
cli
inc
sub
pusha
mov
add
adcl
and
push
cmp
ret
sbb
push
out
dec
addr16
xlat
mov
imul
jle
fwait
daa
cmp
mov
daa
sub
sub
inc
inc
mul
and
xor
idivl
int
mov
mov
popf
and
sbb
add
cmp
loop
push
mov
data16
sub
or
jle
pop
xor
push
or
xchg
or
ret
popa
push
mov
movsl
add
and
sbbl
lea
mov
test
orl
dec
cmp
mov
lods
sub
int
and
imul
sbb
aaa
sbb
inc
data16
adc
xchg
int
sahf
das
addl
cmpsl
pop
shll
daa
rcr
push
mov
sub
imul
mov
in
bound
repnz
aaa
mov
mov
sub
int3
jae
in
stc
pushf
add
hlt
sub
and
lods
pop
mov
push
sbb
add
add
mov
jns
repz
add
add
repnz
and
jecxz
shlb
push
movsl
aas
mov
scas
fimull
aas
cmp
mov
xchg
mov
lock
add
mov
xchg
scas
fidivrs
sbb
jbe
ret
adc
lods
fisubs
push
dec
pop
ficompl
push
push
jnp
es
add
frstor
mov
push
pop
jge
lret
icebp
mov
push
jns
cli
mov
int3
fstl
cs
cmpsl
xor
fwait
mov
icebp
cmp
mov
xchg
popa
and
adc
dec
leave
or
add
popf
stos
int
mov
rcrb
lods
inc
push
daa
shr
mov
sub
sbb
movl
mov
jg
pop
icebp
sahf
jae
mov
mov
pusha
js
dec
ja
jg
jp
mov
test
sbbb
adc
xchg
or
inc
fldl
mov
das
add
add
int
fstp
iret
push
cmpsb
fadd
dec
add
add
add
lds
lcall
fidivl
sub
inc
xor
subb
pusha
fnstenv
nop
push
fcmovnb
inc
sbb
lea
das
in
jecxz
adc
call
std
adc
adcb
push
pop
lods
js
push
adc
sbb
jne
sahf
outsl
push
xor
ja
ss
mov
adc
cmp
in
fildll
popa
ljmp
adc
mov
mov
sbb
jle
jb
test
aaa
arpl
negb
jmp
xor
dec
test
shlb
leave
rorl
cltd
insb
xor
cltd
aad
lret
fs
mov
dec
or
xchg
cli
fcomip
add
xor
sbb
push
sub
fistps
lcall
rol
repz
push
inc
mov
out
shrb
cmp
add
push
ljmp
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
pop
xchg
int
adcl
mov
cmc
aad
mov
cmpsb
ljmp
inc
mov
lods
jne
or
add
adc
sub
add
pop
add
ja
pop
cmc
adc
scas
and
hlt
sahf
imul
lcall
cld
inc
int3
pop
popa
fstpt
push
imul
mov
into
out
movsl
leave
sahf
sbb
jbe
cltd
xchg
add
jge
pop
mov
into
fwait
lea
sahf
es
dec
xor
xchg
lea
movsb
ljmp
or
xlat
add
xchg
mov
cmp
loopne
das
mov
sarl
popf
dec
enter
and
pop
sub
fistl
loop
movsb
jo
lahf
ds
jmp
ja
les
jle
shlb
inc
xchg
pop
out
daa
jp
jno
jmp
loopne
lcall
clc
pop
xchg
adc
xor
add
mov
icebp
iret
inc
movsl
je
add
add
hlt
repnz
push
jne
pop
sti
cs
xor
daa
mov
jg
push
loopne
sbb
rcrb
adc
cs
xchg
inc
inc
cld
test
aaa
nop
add
mul
add
arpl
sub
enter
push
imul
je
xchg
test
neg
test
into
mov
adc
jb
inc
fisubs
outsl
insb
pop
cwtl
dec
dec
stos
push
sub
arpl
out
fists
fdivs
movsl
test
jg
les
mov
out
mov
out
stc
adc
gs
or
repnz
mov
dec
xchg
sub
jl
xchg
cmp
jne
ret
xchg
sub
lcall
cmp
ss
pop
or
add
jnp
xchg
xchg
lcall
xor
out
rol
icebp
mov
movsl
mov
add
push
test
add
add
les
fcomps
add
sti
std
or
add
add
xor
subb
xor
incb
push
xchg
inc
sti
pop
fisttpll
test
adc
sbb
mov
push
cmpsl
loop
lods
sbb
push
sahf
pushf
aas
or
push
jge
jbe
into
push
xorb
mov
and
movsb
xlat
xchg
or
jle
add
inc
add
into
ja
imul
cmp
dec
inc
adc
mov
jno
xor
daa
or
mov
sahf
cmp
push
sahf
cmp
mov
out
roll
pop
cmpsb
push
test
adc
je
dec
pop
call
xchg
jae
inc
or
dec
push
jae
add
mov
imul
dec
inc
fildl
iret
and
das
dec
test
lock
xchg
add
in
out
movsb
inc
je
jmp
das
dec
dec
cmp
arpl
aad
cmpsl
mov
jno
negl
lea
aad
sbb
mov
add
add
ljmp
dec
mov
and
jle
add
add
leave
test
lds
mov
out
lds
fildl
sub
sbb
es
push
sbb
pop
sbb
inc
cmp
and
jne
stc
cs
mov
sbb
aas
test
sub
fstp
std
mov
sub
js
aam
into
adc
nop
xchg
or
or
scas
rcll
popf
sbb
call
mov
xor
negl
push
or
mov
jle
mov
pop
lahf
dec
and
push
inc
bound
cli
orb
call
addr16
movsb
or
sub
mov
xor
mov
lret
fwait
and
cmp
mov
adc
jle
movsb
jno
repnz
pop
inc
mov
jge
scas
dec
mov
sub
sbb
ficomps
xrelease
push
pop
cmp
dec
add
add
aaa
shlb
cmc
div
testl
fadds
add
add
cmp
leave
xchg
ljmp
push
cmp
fists
mov
pop
and
mov
xchg
insb
stos
and
lods
and
cwtl
popl
leave
out
inc
sahf
das
mov
mov
gs
xchg
mov
pop
sub
inc
xchg
mov
sbb
int
mov
aas
xchg
idiv
fsub
rcrb
test
mov
filds
pop
mov
inc
popa
rcrb
mov
insb
cvtps2pd
insl
cltd
sub
push
loop
pop
jecxz
jl
test
mov
cltd
enter
adc
or
cmp
push
mov
mov
jb
fisttpll
adc
bound
mov
cli
cld
rcrl
cmpsl
dec
xchg
xchg
and
pop
xchg
out
mov
sti
fdivrs
jno
in
imul
add
push
sahf
rcr
pop
adcb
cmp
shll
add
sub
ja
pop
cltd
aam
outsl
pop
movsb
shll
jp
inc
mov
mov
xchg
lahf
xchg
xor
pop
lds
icebp
fbld
ss
and
or
es
test
cs
fwait
adc
out
inc
jno
pop
sbb
add
cmc
cmpb
sub
add
mov
popl
mov
sbb
fldt
pop
xchg
popl
push
aad
jb
jb
stos
fwait
pop
aam
adc
imul
inc
inc
push
xlat
aas
push
xchg
jbe
lods
pop
insl
test
fistl
mov
out
xchg
mov
push
notl
mov
or
iret
sub
stos
mov
iret
test
mov
xor
repnz
or
push
repz
cmpsb
stos
jae
mov
pop
fwait
cs
sub
inc
shll
shll
add
mov
rcl
adc
repnz
int3
inc
push
test
shll
cmpsb
jcxz
fimull
lea
add
lods
dec
icebp
rcl
cmpsl
push
ret
mov
js
jmp
pop
cwtl
adc
sahf
cmp
movsl
xorl
sbb
push
xchg
mov
jle
and
ret
pushf
cli
xor
fnstsw
dec
push
sysexit
add
dec
add
scas
sarl
push
and
pop
clc
int3
pop
jle
stos
shrb
adc
test
adc
cmpsb
loope
push
mov
inc
xor
ret
outsb
int3
push
lods
mov
int
insl
dec
xchg
scas
stos
lds
cli
xchg
lcall
mov
sub
pop
imul
addl
call
cwtl
mov
adc
sub
sbb
sbb
lahf
mov
call
jg
mov
jne
popf
scas
outsl
jo
add
pop
fdivr
or
in
add
clc
jnp
jg
in
cli
enter
or
cwtl
rclb
add
add
popa
add
add
add
and
jns
sub
cmp
mov
shl
xchg
xchg
popf
or
sbb
dec
popa
jno
push
loopne
loopne
push
out
push
fiaddl
pop
sub
ss
rcrl
push
or
xor
sbb
addr16
mov
in
dec
mov
arpl
fistpll
sbb
mov
xchg
repz
push
sbb
scas
pop
dec
repz
mov
fwait
test
outsl
xchg
sti
cmp
test
mov
in
mov
cmpsb
or
loope
bound
lret
cmp
es
nop
push
or
test
aaa
push
daa
or
fs
push
adc
jg
mov
mov
jp
jg
mov
rcrl
fistl
cmpsl
or
xchg
push
and
dec
repz
cmp
orb
push
into
enter
add
add
ljmp
cld
gs
mov
xchg
xchg
add
add
fimuls
int
mov
push
repz
adc
and
and
adc
mov
cmp
inc
pop
xchg
rcll
sbbl
dec
int
jbe
sub
and
jmp
push
push
leave
push
push
jns
ficoml
add
pop
mov
mov
sbb
and
pop
lock
jo
pop
mov
adc
jno
aad
out
pop
nop
push
leave
xlat
test
outsl
sub
jge
cli
js
outsb
stos
pop
xor
mov
cmc
pop
xor
dec
test
jle
jecxz
xchg
or
ljmp
cltd
sbbl
fst
mov
jb
nop
push
lcall
push
ret
sti
aaa
push
rcrb
or
or
inc
aas
cmp
shr
mov
ljmp
imul
scas
frstor
inc
and
ret
jle
addr16
sub
add
jl
sar
std
jle
pop
popf
scas
sbbl
add
inc
inc
test
je
xor
jle
cmp
in
jb
cmovo
lret
cmp
jp
xchg
test
sbb
xor
iret
ljmp
shrl
out
jne
test
cmp
add
and
fwait
rcrb
xchg
fistl
and
xor
movsb
jecxz
push
lret
mov
or
mov
clc
fiaddl
add
sbb
rol
jno
lea
and
xor
cmpsb
arpl
outsl
xchg
dec
sbb
addl
loope
pop
test
add
mov
outsb
jmp
hlt
pand
pushf
xor
push
call
cmp
aad
inc
loop
push
sbb
xchg
je
pop
xchg
mov
lods
add
jne
lcall
and
jecxz
lods
xor
jbe
adc
cs
push
icebp
mov
push
scas
outsl
and
nop
jmp
pop
pop
mov
les
add
cmp
cmp
in
sti
stos
xor
mov
add
add
js
cmp
xor
cltd
add
out
sub
add
addr16
push
in
adc
daa
bound
xchg
cmp
mov
jg
test
and
jmp
mov
and
dec
sbb
outsb
xchg
dec
in
sub
dec
jl
push
cmp
add
in
pop
sti
cmp
rcrl
out
push
lret
jbe
or
ucomiss
leave
jge
mov
and
cmp
divb
adc
loope
mov
lahf
mov
divl
xchg
push
movl
sarb
out
aas
or
mov
pop
clc
pop
xchg
into
inc
inc
insl
data16
pop
mov
lret
mov
inc
jg
cmp
push
add
sub
loop
mov
xchg
les
mov
and
inc
or
cwtl
push
inc
nop
and
popf
sbb
icebp
xor
add
add
outsl
sti
mov
mov
aas
cli
add
cmpsb
xchg
add
add
ss
imul
shlb
mov
or
pop
decb
mov
xor
in
add
dec
outsb
lods
cmc
sbb
leave
cs
adc
pop
mov
pop
bound
or
inc
aad
es
mov
decl
cmp
in
fnsave
popf
mov
lahf
xchg
add
call
je
push
and
add
sub
sahf
cmp
ret
jb
addr16
inc
arpl
jl
jmp
mov
notl
jae
cmpsl
push
and
insl
push
dec
jp
push
mov
hlt
mov
dec
adc
mov
push
cmp
jne
pop
mov
fs
mov
mov
fists
test
mov
jmp
jo
inc
rcrl
jbe
lret
sbb
pushf
inc
shrb
adc
aad
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
scas
cmp
mov
fists
into
add
xchg
inc
in
sub
mov
sub
mov
xchg
test
push
lcall
aad
filds
nop
dec
xchg
add
es
popa
push
dec
stos
mov
add
movsl
idiv
jne
bound
jle
pop
inc
sbb
les
and
mov
in
and
jge
push
pop
adc
adc
int3
cmp
cmp
movsb
repnz
pop
daa
xchg
scas
loopne
pop
lret
cmp
mov
adc
repnz
subb
arpl
cmp
gs
jmp
pop
in
push
rcrl
ljmp
mov
fistpll
lods
sub
push
int
jne
pop
dec
cmpsl
and
imul
adc
lock
cld
and
or
out
jle
cmp
adc
sub
in
jo
jae
clc
scas
into
mov
hlt
mov
rorb
adc
orl
imul
outsl
vmwrite
fnsave
add
add
je
das
pop
pop
sbb
jl
lods
cmpsb
adc
lret
daa
cli
iret
push
push
mov
movsl
rcrb
dec
shlb
imul
aam
es
xchg
ret
movsl
fistpll
add
iret
stos
arpl
jge
xor
aaa
xor
in
out
cmc
pushf
add
mov
inc
fmuls
xor
les
jno
decl
dec
out
sub
jecxz
xor
dec
mov
mov
lret
and
divl
repnz
mov
cmp
leave
jns
jb
add
inc
aas
cmc
add
mov
push
ljmp
ja
xchg
iret
fcompl
dec
mov
sbb
popa
popf
es
sbb
or
sbb
rcrb
xor
dec
dec
or
or
mov
lods
jne
fnstsw
sub
fs
mov
xchg
xchg
insl
mov
shl
sbb
mov
lods
add
cwtl
loopne
sti
lods
and
fimull
bnd
add
add
lret
sbbl
popl
test
mov
add
add
mov
jno
inc
cmp
movsl
into
iret
mov
lds
in
inc
enter
addr16
xchg
add
mov
dec
rcrl
sbb
or
mov
insb
cli
scas
lea
jmp
pop
adc
mov
adc
cmpsl
add
sahf
in
sbb
xchg
xchg
aad
mov
pop
pop
push
pop
sub
mov
xchg
xchg
mov
addr16
repnz
cld
sarb
scas
dec
mov
jno
fsubl
cmp
xchg
mov
daa
mov
jo
mov
adc
stos
xchg
xchg
mov
xor
mov
dec
sub
adc
neg
icebp
out
sub
stc
mov
into
dec
in
popf
dec
test
or
sub
pop
data16
xchg
and
push
mov
sbb
push
repz
fcomps
add
repz
insb
loopne
or
pop
push
sbb
mov
cs
pop
add
add
imul
movsb
and
mov
jg
mov
add
add
sbb
mov
pop
jns
cltd
jbe
sub
mov
stos
push
sub
cmp
inc
cmp
push
pop
scas
sub
inc
lea
das
pop
and
dec
jb
dec
xchg
loope
pop
hlt
jne
lods
xchg
test
bnd
out
push
mov
fldt
pop
mov
clc
push
xchg
and
mov
or
pop
mov
test
leave
sbb
lods
push
mov
movl
jl
mov
daa
sub
mov
push
pop
cld
cmp
dec
hlt
test
out
cmpsl
jb
cltd
int
add
push
out
fisubrs
pusha
inc
icebp
pop
fdivs
icebp
rclb
scas
pop
inc
jmp
ss
andl
sbb
insb
dec
jno
jns
xlat
xorl
cmp
test
pop
andb
arpl
insb
in
mov
sbb
sarb
pop
mov
cmp
add
mov
jge
jg
ljmp
in
lahf
mov
pushf
mov
pushf
add
add
xchg
andb
fiaddl
xor
or
outsb
pop
ljmp
aam
pop
dec
cmp
pop
fsubrp
adc
inc
lret
or
or
ret
push
or
push
cmc
dec
int
pop
mov
sbbl
cmp
mov
dec
xor
jae
push
and
jbe
sbb
mov
arpl
add
and
jne
dec
cmc
ret
add
lret
push
mov
cwtl
pop
jbe
out
in
pop
enter
mov
stos
incl
and
pop
jbe
jge
mov
shl
jno
in
sbb
pusha
sahf
fs
pop
add
popf
iret
jo
adc
stc
jns
and
mov
dec
cli
rorb
and
repnz
push
or
xor
jg
ja
addb
cmp
xchg
fldcw
cltd
sub
out
inc
sub
or
popa
push
add
adc
shrl
push
scas
bound
pop
push
ja
iret
gs
adc
jbe
xchg
imul
shl
jo
xchg
ds
mov
stos
push
adcb
cmp
lock
and
insl
jns
shlb
bound
adc
lcall
movsb
notb
enter
test
scas
mov
pop
sar
pusha
dec
fisubrl
fidivrs
xchg
data16
pop
int3
lret
ret
out
fwait
std
icebp
adcl
leave
mov
mov
and
es
mov
shl
xchg
cs
pop
mov
ret
pop
jae
int
mov
mov
pop
dec
lcall
inc
inc
push
getsec
icebp
data16
gs
rclb
or
aas
mov
inc
and
mov
and
lcall
mov
fdivr
inc
sub
mov
add
loop
test
mov
cld
mov
leave
sahf
add
add
cmp
mov
lahf
int3
mov
mov
adcb
fcmovu
mov
arpl
and
jg
jae
test
dec
lea
aam
fsubs
mov
xchg
sbb
fsubrl
xchg
jg
addr16
xor
push
stos
cli
xchg
sahf
xchg
xor
mov
hlt
jb
addb
push
mov
push
shl
out
mov
in
insl
test
daa
ljmp
lods
out
xchg
adc
push
cld
xor
icebp
xchg
mov
xor
aam
jmp
push
inc
or
repnz
xor
inc
rcrl
or
icebp
push
aad
lahf
mov
pop
icebp
cld
inc
inc
mov
adc
cmp
jecxz
scas
mov
inc
sbb
inc
mov
daa
hlt
or
inc
lret
mov
mov
pop
sbb
jge
add
shrb
sub
dec
xor
and
shll
scas
push
sub
fmull
mov
jae
jg
push
jp
add
or
lcall
clc
mov
into
lahf
add
add
mov
das
loop
lahf
lcall
pushl
xor
loopne
xlat
jnp
xchg
inc
cmp
pop
cmc
stos
fs
sub
add
fs
fistpl
push
cmp
cmpsb
jg
push
stc
add
jle
jle
push
xchg
push
cmpsb
mov
inc
popa
mov
sbb
repz
dec
or
fnstenv
jns
shlb
pop
push
sub
imul
clc
pop
or
dec
and
gs
cmp
mov
mov
dec
mov
mov
dec
arpl
ss
push
enter
arpl
mov
jno
sti
ljmp
and
cld
int
lret
sub
add
xchg
loopne
lret
jno
inc
pop
xchg
sbb
fsts
add
add
or
sub
popa
pop
and
bound
adc
outsb
lds
adc
inc
sub
and
test
sti
test
cmp
add
leave
mov
add
mov
inc
inc
add
mov
add
leave
mov
movl
xchg
lret
movsb
push
pop
push
mov
sbb
xor
pop
dec
pop
xchg
dec
daa
insb
mov
jno
sbb
pop
fistps
gs
ljmp
jmp
enter
rorb
xorl
xchg
ret
sarl
notb
xor
outsl
out
pop
mov
and
fistl
es
leave
subb
shrl
xchg
sbb
sub
aad
iret
adcl
mov
out
jb
mov
adc
mov
into
cmpsb
jmp
dec
sub
adc
mov
mull
or
pop
mov
sbb
cmpsb
push
shlb
lods
movsl
mov
jge
data16
inc
clc
xchg
mov
dec
rorb
xchg
cmc
inc
cmp
mov
xchg
and
jecxz
sti
jge
add
add
add
std
inc
mov
xchg
xchg
mov
add
jp
fstl
daa
icebp
or
xor
mov
sarb
imul
pop
push
shll
or
int3
cmpb
mov
and
jecxz
test
mov
out
iret
adc
outsb
add
cs
ljmp
cmp
out
and
jp
in
xor
sbb
stc
and
in
xchg
lahf
mov
jae
scas
ret
inc
and
lahf
lock
cmp
sbb
xor
pop
insl
movsb
and
rclb
iret
sbb
divl
sub
mov
pop
leave
add
and
sub
sub
js
movsb
dec
mov
loop
mov
cmpsl
or
lods
sub
xchg
lret
mov
or
sub
lods
dec
inc
rorb
pop
mov
fnsave
and
leave
push
mov
add
inc
fdivl
push
dec
mov
frstor
add
out
jnp
jl
mov
cmpsb
pop
xchg
sub
mov
jnp
out
cmp
push
pop
sbb
mov
lea
popa
insb
popf
pushf
push
and
sub
inc
pop
dec
pop
xchg
out
stos
cmpsl
xor
movsl
test
xlat
inc
jp
and
orl
add
push
sub
int3
and
movsb
mov
sub
sbb
and
push
rcr
jge
mov
dec
ret
loopne
inc
xchg
pop
jmp
mov
jne
pop
and
pop
add
enter
enter
sub
daa
dec
xor
rclb
push
stos
jle
inc
ret
mov
mov
dec
or
decl
fucomp
mov
dec
scas
push
call
cld
loopne
ret
cmp
or
add
jnp
jne
pop
jo
imull
mov
rcll
daa
ror
push
jae
add
adc
mov
sbb
cli
movsb
loop
add
add
imul
mov
mov
xchg
fistps
sbb
adc
and
inc
arpl
fcompl
mov
popa
cmp
lds
call
xor
jbe
and
dec
test
sbb
clc
push
xchg
bound
lahf
test
or
jbe
cs
outsb
cmpsl
xchg
scas
sub
fwait
bswap
imul
sbb
mov
fimuls
or
repz
mov
dec
and
lods
jle
bound
aas
xor
aas
std
lds
adc
push
sbb
xor
das
out
fcmovnu
and
leave
cld
cmp
adc
rorb
jne
cmp
sub
pop
inc
jns
inc
sbb
rcrb
mov
cmp
mov
sbb
jno
xor
mov
mov
int
test
dec
sub
test
xchg
add
pop
test
stos
hlt
jmp
cmp
jbe
inc
xlat
lea
add
loopne
negb
daa
int
sbb
test
or
es
or
insb
shlb
cmp
cmpsl
pusha
add
push
sub
pop
out
mov
sub
lcall
pop
ror
fs
and
cmpsb
xchg
js
fs
adc
xlat
imul
xchg
or
mov
push
imul
pushf
cs
and
mov
push
fisubrs
arpl
enter
xchg
je
popf
pop
mov
mov
pop
test
pop
in
pop
xor
cmp
xor
mov
cmp
push
inc
jge
pusha
js
adc
lods
jno
pop
rolb
test
xchg
lret
jmp
mov
imul
jae
xor
int3
fcoms
lds
fwait
pop
sti
push
xor
mov
sub
mov
orb
jns
mov
cltd
mov
add
add
push
nop
out
xlat
out
jg
in
xor
mov
movsl
add
add
and
lret
stos
popa
stos
pop
dec
sbb
jns
fcompl
and
xchg
jbe
repnz
xchg
loop
mov
stos
mov
sub
fnstenv
pop
add
stos
out
mov
shrl
jg
scas
lea
arpl
sbb
daa
or
cwtl
imul
fildl
and
movsl
sub
sbb
dec
jecxz
jns
enter
jmp
ret
pop
outsl
cmp
dec
inc
test
cmp
push
test
add
popf
out
shlb
nop
push
repnz
aam
loope
mov
xor
xchg
stc
pop
xchg
inc
pusha
jno
fnstcw
ss
sbb
arpl
xchg
sbb
into
xchg
bnd
xor
fs
out
in
xor
lcall
xchg
or
xchg
xchg
mov
mov
lods
shll
mov
inc
stos
je
or
fisttps
arpl
nop
cmp
pop
or
pop
add
add
mov
inc
fwait
lds
jo
fldl2e
xor
loop
icebp
cmpsb
add
add
jae
push
call
or
xchg
repnz
sbb
pop
popa
insb
aaa
mov
mov
xorb
xchg
cld
hlt
push
lds
mov
mov
and
movsb
lahf
adc
jno
xlat
movsb
fucomp
lds
mov
das
sbb
pusha
and
cli
mov
inc
mulb
jb
lret
sub
inc
push
xor
lock
cltd
cmp
stos
push
and
mov
scas
or
addb
mov
add
adc
lock
adc
pop
imulb
sub
ljmp
mov
add
in
mov
adc
jg
nop
iret
sub
cmp
pop
lods
or
xor
cmp
arpl
je
xor
leave
jle
js
mov
pop
test
ja
sub
jl
mov
lcall
je
pop
mov
hlt
sub
add
lcall
std
inc
jne
cmp
mov
mulb
add
push
jecxz
jo
sub
push
jecxz
sub
std
add
mov
in
pop
fxch
filds
shll
jnp
fimull
sahf
cmp
cmpsl
aad
int3
inc
xchg
cmp
mov
jo
repnz
push
mov
lcall
and
dec
or
xor
mov
mov
sub
int
test
mov
xchg
or
lods
gs
mov
nop
cltd
mov
push
push
jb
ljmp
rolb
pop
mov
ret
addr16
testl
pushf
xchg
mov
cli
ljmp
js
jnp
ja
clc
mov
sbb
push
lea
mov
ret
and
mov
out
movsb
jmp
cltd
cwtl
test
inc
xor
fildll
dec
ss
jle
into
sti
clc
je
loopne
test
hlt
mov
ljmp
add
lret
jnp
sti
jmp
push
mov
testb
pop
sti
test
add
xchg
dec
test
movsb
xlat
incb
rcll
xchg
test
pop
in
and
outsb
fdivrs
ss
ret
inc
out
ss
sbb
orl
cli
or
mov
loope
insb
push
mov
mov
addr16
out
lods
leave
mov
push
sbb
xchg
add
int3
rclb
fdecstp
rcr
fnstsw
add
sbb
jmp
and
mov
dec
mov
and
lcall
mov
xchg
je
cmp
pop
pop
cmp
std
sbb
and
jp
mov
and
into
mov
jne
fnstcw
and
sbb
shrb
mov
pop
xchg
imul
jno
inc
fcompl
mov
or
stc
sub
movsl
cmp
and
cmpl
add
jecxz
lock
cmp
add
add
push
mov
inc
adc
pop
inc
mov
push
jnp
rcll
mov
or
xlat
cwtl
pop
scas
push
imul
sbb
rcr
push
mov
mov
and
mov
shlb
push
cli
enter
test
mov
nop
and
int3
enter
mov
xor
lds
inc
pop
dec
std
adc
scas
add
push
xchg
mov
sarl
push
aaa
dec
rcrb
sahf
out
xchg
cmp
movsb
fstpl
inc
mov
inc
add
push
outsl
dec
push
insb
fidivrl
mov
cwtl
stc
scas
or
inc
mov
outsl
jne
mov
ficompl
xchg
stos
or
sar
pop
arpl
mov
orb
es
sbbb
mov
testl
loop
push
sarb
push
fdivrl
jns
sbb
mov
lcall
mov
add
or
out
mov
add
add
cld
mov
leave
cli
mov
aas
add
add
add
mov
out
jae
jno
insl
jecxz
fists
inc
popa
fsubrl
jno
mov
das
test
fistpl
mov
xlat
daa
rorb
iret
testl
cmpsl
div
lcall
inc
adc
push
loopne
mulb
movsl
cli
repnz
loope
jno
or
repnz
adc
arpl
jge
xchg
cld
nop
or
jecxz
out
out
sarb
mov
cwtl
mov
shr
pop
js
mov
fadd
adc
dec
ja
xchg
jne
icebp
das
fimull
sub
inc
cmc
sbb
push
popf
xchg
cmpl
jp
and
sbb
test
xor
xchg
and
jle
mov
sbb
mov
call
in
inc
dec
sbb
jae
mov
cmp
or
sahf
cli
js
jno
loop
add
add
add
out
cmc
mov
jg
fs
lods
add
add
imul
lret
xchg
adc
ss
andl
pop
iret
loope
call
addr16
jle
jnp
stos
scas
dec
call
pusha
les
lea
cltd
mov
pop
cmpl
rolb
mov
mov
repz
dec
xchg
aad
xor
cmp
pushf
aam
fildll
mov
or
dec
jle
mov
xchg
pop
fisttps
iret
add
fsubrl
mov
int
xchg
adc
cmpsl
insb
ljmp
sbb
jnp
pop
mov
push
and
out
pop
dec
adc
push
push
arpl
push
enter
scas
mov
and
mov
js
data16
lcall
push
stc
inc
aad
cmp
or
in
dec
roll
and
push
or
stos
test
sbb
jns
sub
call
cmpsl
adc
mov
sti
push
dec
aam
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
push
popa
imul
add
pop
adc
cmp
aas
rcl
test
aad
popa
xor
mov
into
and
push
dec
sbb
outsl
in
cmp
sbb
push
cmc
sub
rcrb
movsb
mov
and
mov
mov
popf
jno
jmp
addr16
lcall
or
and
jae
or
adc
ret
stos
sahf
lret
jbe
cmp
lcall
stos
sbb
ljmp
imul
fdivl
adc
mov
scas
imul
jecxz
inc
xor
das
sub
xor
scas
jae
push
andl
pop
test
lods
mov
push
ds
or
cmpsb
shlb
pop
pop
mov
cwtl
xor
push
lret
push
fisubs
out
push
cmp
pop
mov
sti
push
fsubrl
addl
div
push
cltd
jae
sub
sub
mov
sbb
and
inc
test
nop
push
add
dec
pop
xor
xchg
add
add
fidivs
loop
ljmp
dec
cs
jmp
add
cli
mov
lahf
scas
arpl
cmc
in
xchg
jbe
mov
aaa
push
fbld
enter
mov
add
xchg
xor
xor
aaa
mov
fadd
mov
std
mov
jb
cmpsb
loop
gs
mov
loop
lret
cmpsb
movsb
push
xchg
jb
dec
dec
sti
inc
add
stc
xchg
popf
jmp
nop
jno
hlt
rolb
and
or
aaa
imul
iret
ret
mov
push
xchg
xchg
mov
jb
fdivl
push
add
jno
addr16
sbb
ss
and
cli
movsl
mov
jl
testb
mov
jne
jmp
inc
push
pop
add
data16
testl
mov
add
xor
xor
and
dec
lods
imul
imul
ret
stos
shl
ds
iret
sar
cwtl
mov
add
mov
xchg
add
add
xchg
jg
jmp
std
mov
inc
jo
sbb
add
cltd
stc
jmp
push
jne
repz
or
xchg
jp
pop
add
shl
ja
and
pop
or
ss
hlt
out
mov
pop
pop
dec
xor
sti
out
gs
mov
add
dec
push
dec
or
leave
mov
jo
jno
pop
push
lea
pop
mov
pop
mov
xorl
aas
xor
daa
adc
and
and
rorb
xchg
xor
addr16
xor
scas
push
std
xchg
xor
pop
imul
adc
movsl
cmp
hlt
pushf
cmp
repz
in
sbb
push
outsb
iret
in
adcl
sbb
dec
imul
mov
inc
in
mov
in
xchg
dec
xchg
mov
mul
call
mov
std
shl
ss
movsb
mov
inc
and
xchg
pop
imul
mov
and
dec
sbb
cld
ret
inc
mov
push
divb
inc
mov
cs
mov
add
mov
cmp
jge
fcoms
and
push
idivl
push
pop
pusha
lock
mov
loopne
jg
fnsave
iret
lea
pop
xchg
push
xlat
out
push
lods
dec
mov
pop
cltd
cmp
xor
xchg
roll
adc
xchg
xlat
fidivs
adc
or
movsb
adc
inc
pop
pop
xor
inc
pop
jb
scas
lods
xchg
jbe
fdiv
or
mov
push
push
fiadds
jb
and
xchg
into
rorl
inc
filds
jae
call
pop
xor
mov
mov
orb
mov
cmpsl
dec
inc
jge
out
jg
pop
push
in
ds
xor
out
lret
push
and
mov
shrb
mov
js
jnp
outsl
loop
sti
lds
cld
adc
add
pop
push
dec
dec
jo
jb
pop
mov
lods
cmpsl
add
mov
add
push
pop
xor
cmp
inc
call
andl
add
add
jae
jg
xor
jo
cmp
push
pop
out
fwait
mov
sub
call
adc
and
cmpsb
push
dec
movsl
lahf
std
cmp
mov
rol
repz
repnz
ficoms
and
test
aas
xchg
je
and
and
das
or
jle
push
push
bound
loope
jmp
and
mov
cmc
outsl
push
cmp
fildll
or
push
insb
aam
sub
test
or
aad
pcmpgtb
repnz
or
jae
subb
mov
insl
mov
imulb
adc
rcr
adc
fidivl
out
orb
in
pop
mov
imul
or
and
pop
mov
aas
mov
and
or
push
mov
jl
cmp
in
ret
pop
push
sahf
push
pop
addr16
and
lahf
notw
dec
pusha
mov
sahf
imul
fsubs
cli
add
add
jp
les
mov
arpl
orl
add
add
mov
test
jbe
mov
mov
rcrb
movsl
cwtl
lods
divl
stos
shrb
mov
mov
stos
mov
pop
push
xlat
or
inc
mov
xchg
pop
jecxz
push
icebp
mov
ja
rclb
cmp
xor
es
push
pop
xchg
xchg
stos
add
cltd
ss
jnp
mov
stos
mov
outsl
xorb
aaa
loop
cmp
call
add
popa
xchg
out
flds
mov
xor
test
inc
xchg
or
mov
or
lret
sti
ljmp
sbb
cltd
xor
adc
or
xchg
xor
daa
push
push
sub
fwait
push
leave
cmp
sahf
out
in
into
jns
xchg
or
or
mov
int3
add
test
xor
adc
adc
cwtl
sub
cmp
add
add
clc
pop
stc
out
push
pop
bound
aam
mov
add
in
jo
xor
sub
pusha
call
cmp
in
push
ror
mov
xchg
push
dec
dec
sbb
pushf
mov
adc
aaa
mov
or
mov
out
loop
stos
inc
lcall
pop
sub
dec
and
pusha
sub
shrb
dec
dec
sarl
cmp
cmp
mov
jns
lea
ds
adc
cmpsb
and
xchg
sbb
fimull
cmp
mov
imul
not
nop
in
cmp
pop
popf
and
pop
aas
jg
xor
sbb
shll
fsub
stos
lock
lret
mov
pop
mov
daa
lret
int3
lcall
mov
in
xor
sbb
xchg
dec
ja
mov
cmpb
xchg
push
push
mov
jmp
lahf
data16
cmp
mov
popf
popa
xor
xorb
xor
bound
mov
add
lds
cli
lcall
push
xor
add
cld
clc
or
pop
add
js
aaa
or
adc
sub
xchg
addb
push
out
lret
test
arpl
push
cmp
jmp
stc
mov
add
inc
sub
pushf
lahf
lahf
outsl
scas
add
push
mov
push
out
leave
adc
push
out
leave
imul
lea
js
flds
mov
out
cld
jnp
push
mov
sub
mov
cmpb
sti
mov
dec
pop
push
fs
ds
and
sub
rcll
adc
dec
and
xchg
sbb
pop
cltd
dec
add
call
daa
mov
adc
int3
push
push
shl
cmp
add
pop
nop
shlb
or
lcall
rcll
jb
scas
push
xchg
orl
jbe
mov
call
and
lret
inc
fwait
and
xchg
xchg
dec
jns
and
xchg
outsb
sub
movsb
mov
ffree
cmp
mov
xorl
insb
lret
or
aaa
mov
add
push
sub
mov
arpl
outsb
ss
movsb
add
fdivrs
mov
xchg
mov
movsl
mov
rolb
popa
fucom
subb
es
sbb
mov
cs
roll
rolb
adc
popf
mov
cmpsl
sub
dec
cmpsb
or
sub
jp
push
in
les
out
aam
ret
mov
cmp
cmp
inc
pop
lods
fldenv
pop
lahf
sbb
adc
sbb
subb
jne
inc
mov
push
push
dec
adc
outsb
ja
outsb
add
jecxz
lods
mov
push
cmp
das
cmpsl
jns
je
imul
push
test
xor
jle
dec
sub
mov
repnz
clc
push
adc
jo
jb
in
call
push
insb
inc
mov
or
dec
jns
or
inc
icebp
add
add
pop
sbbl
fstp
rorl
cld
cmpsl
adc
add
add
out
repz
and
pusha
sbb
xor
push
xor
push
jb
adc
pop
jbe
cli
stc
movsl
test
ljmp
aas
mov
dec
stc
in
mov
adc
ss
inc
xor
and
iret
mov
out
sbb
sub
sub
mov
sbb
mov
adc
cmp
ss
ret
jecxz
mov
xchg
lcall
lods
xorl
je
cwtl
int
andl
sbb
mov
cltd
fwait
lods
cmp
push
sarl
js
loop
dec
int3
adcl
pop
add
in
clc
push
xchg
mov
add
imul
arpl
jmp
or
mov
dec
jmp
mov
add
or
sar
repz
fucomp
repz
lods
aam
sub
add
loope
mov
jecxz
out
mov
mov
add
add
cs
add
aas
cmp
mov
arpl
and
notl
inc
in
jno
outsl
orb
push
inc
movsb
jl
in
ja
dec
mov
fildl
push
ja
xor
movsl
mov
mov
insl
aaa
and
or
push
mov
jle
push
cld
cmpsb
adc
mov
lcall
cmp
js
mov
xchg
leave
cld
push
mov
loop
jbe
nop
out
in
xor
inc
scas
xchg
add
jo
mov
pop
jbe
xchg
addr16
mov
push
jne
lea
daa
dec
mov
dec
aad
mov
push
add
mov
sbb
dec
ffreep
cmp
mov
decb
sbb
mov
cmc
call
mov
xchg
ds
sahf
inc
xor
pop
dec
iret
xchg
xorb
pop
daa
add
add
std
test
jg
into
lret
orl
add
add
xor
ds
shrl
iret
inc
cs
jecxz
rcl
jmp
in
hlt
jnp
xchg
xchg
jle
shl
pop
and
sub
sarl
xchg
mov
adc
mov
imul
push
cmp
loope
cmp
jg
bound
sub
aas
andl
insb
jp
xchg
test
iret
and
test
and
std
cwtl
test
add
jb
mov
mulb
aas
jbe
fimuls
into
ljmp
sub
ret
xchg
es
iret
fwait
mov
jl
dec
addb
cmc
aam
fnstcw
and
lods
mov
popf
inc
nop
mov
or
incb
lods
and
xor
cltd
mov
fwait
daa
sbb
ljmp
jle
push
push
aam
loope
fnstsw
int3
pop
setle
nop
fcmovnu
xchg
adc
notb
cmp
bswap
and
add
lock
in
lcall
jae
dec
mov
add
add
add
out
jmp
push
lock
out
mov
adc
and
popa
test
lret
mov
mov
movsb
sbb
push
cmpsb
or
movsl
in
lcall
inc
fstl
mov
sbb
mov
dec
or
and
cmp
arpl
and
add
fcoml
lock
sub
jl
lods
and
lods
xchg
cmp
and
pop
cs
inc
test
inc
push
movsb
clc
insl
and
cmp
and
jnp
push
xchg
into
sbb
xor
jmp
jne
loop
outsb
aaa
sahf
cmp
jge
or
sub
cld
xlat
rcll
mov
call
mov
jne
lcall
out
cmpsb
mov
xchg
in
add
aaa
popa
fisubl
lock
jmp
call
ret
xlat
pop
or
add
add
sub
jg,pt
dec
arpl
xor
add
add
mov
jle
shrl
repnz
pop
mov
jnp
mov
mov
scas
or
cmpsl
mov
pop
shll
testl
inc
add
hlt
jle
dec
mov
push
cmpsl
rclb
xor
fisubl
add
scas
sub
in
int
pop
mov
enter
jmp
sar
or
mov
mov
cld
mov
jns
sbb
sbb
daa
adc
pop
fsubrs
in
jg
ljmp
insb
mov
ret
lods
mov
scas
xor
out
mov
testb
xchg
mov
jbe
sarb
add
scas
pop
rcll
fmull
sbb
mov
shl
or
mov
aam
in
int3
xchg
xchg
xchg
mov
stos
jne
push
jne
jecxz
dec
mov
adc
je
cli
scas
xchg
insb
jp
pop
cmp
xor
push
jge
add
insl
sbb
outsl
mov
mov
mov
add
fucom
cmpsb
fs
dec
std
fstpl
xlat
rorl
push
std
rcl
adc
push
and
pop
sub
sub
xchg
imul
stc
pop
push
movsb
bnd
hlt
gs
xchg
dec
mov
adc
push
xlat
sbb
adc
stos
addr16
lods
sbb
push
xchg
sti
sbb
in
je
cmp
cmpsl
lds
or
enter
pop
mov
push
or
out
jp
jbe
pop
sarl
mov
push
es
pop
imul
cli
iret
outsb
push
mov
aad
or
enter
jno
xchg
add
sub
xlat
add
mov
fcoml
les
addr16
dec
lods
sub
lds
lret
push
pop
mov
sub
negl
out
push
fadds
mov
and
dec
jmp
pop
les
ret
pop
jle
pop
shll
sahf
xor
lret
jmp
add
xor
mov
pop
sub
rcrl
add
xchg
jne
ljmp
adc
in
fmull
int
pushf
ret
or
push
out
pop
ljmp
mov
and
or
test
call
sbb
andb
jnp
sahf
repnz
std
jmp
leave
out
push
in
daa
js
push
fcoms
sbb
outsb
je
jg
addr16
dec
or
mov
cld
movsl
mov
sti
cmp
cmp
adc
bound
mov
and
scas
or
mov
dec
sbb
adc
mov
mov
cmc
out
ss
pop
push
mov
cmp
lret
pop
mov
mov
xor
ja
in
mov
mov
cmp
pop
mov
imul
ss
sbb
fisubrl
pop
ja,pt
and
jne
mov
data16
clc
sub
in
xchg
sahf
ret
movsl
jbe
stos
repz
push
popl
add
push
push
call
mov
mov
add
jp
sub
fists
sbb
rcrb
dec
adc
shr
mov
mov
into
movsl
fisttps
xor
fisubs
xchg
in
ficoml
add
pop
xchg
pop
push
or
repnz
lcall
pop
pushf
shlb
ret
sbb
sub
test
push
jno
sbb
pop
popf
sbb
mov
push
repz
mov
jns
outsl
mov
decb
sub
shr
int3
pop
sub
pop
cwtl
and
xchg
or
inc
xlat
lcall
ficoml
sub
fcoms
add
jno
stos
fsubp
adc
ficoml
dec
mov
xchg
pop
inc
mov
pop
out
lods
loop
mov
out
dec
scas
out
dec
movsl
mov
divl
es
adc
adc
ret
shlb
mov
loopne
or
loope
aas
xchg
leave
add
add
std
sti
leave
sti
iret
jmp
lahf
adc
add
scas
sbbl
xlat
adc
sub
lds
cmp
data16
adc
dec
popa
lds
mov
loopne
inc
movsl
dec
cli
rcrl
mov
dec
out
pop
outsb
mov
cmp
cmpb
inc
adc
outsl
push
shlb
loop
enter
mov
je
inc
scas
mov
movsb
sub
pop
or
test
mov
aad
popf
aad
bound
aaa
and
mov
adc
xor
jle
sub
jnp
outsl
jns
cmp
xor
std
inc
dec
call
cmp
adc
imul
imul
pop
push
push
fidivl
sbb
js
mov
xchg
lret
pusha
ljmp
pop
or
mov
push
mov
rcl
sti
jl
mov
leave
loop
test
push
jecxz
lds
add
loop
dec
std
in
ret
or
out
outsl
mov
ljmp
lcall
add
mov
xor
mov
add
add
cmp
cwtl
mov
pop
sti
xchg
push
mov
lock
pop
pop
xor
lret
in
aas
popa
sbb
jl
inc
inc
es
push
pop
into
mov
dec
push
mov
test
xchg
pop
dec
and
sbb
dec
mov
dec
cmpl
ja
in
adc
sbb
push
test
jp
icebp
inc
mov
jo
add
cld
dec
push
imul
lcall
fwait
cmpsl
xor
mov
je
cmc
fdivl
es
jge
add
jg
fs
cwtl
xchg
fcomip
or
jbe
nop
sbb
aam
mov
mov
dec
dec
loop
ss
xor
repnz
pop
or
ja
testl
add
out
jb
jbe
bound
lret
mov
loop
or
dec
pop
bound
lods
pop
mov
pop
cli
xchg
int3
loopne
sarb
hlt
adc
fmull
mov
xlat
popa
faddl
add
fwait
mov
or
jg
mov
sahf
loop
fsubr
data16
rolb
add
sub
mov
icebp
loop
inc
inc
popf
test
or
outsl
dec
test
insb
or
jecxz
jb
xchg
mov
mov
cmp
cli
call
icebp
rcr
aad
dec
and
adc
aad
les
mov
push
jle,pn
les
push
arpl
popf
inc
out
aaa
int
bswap
jae
aaa
or
aas
movsl
into
lahf
outsl
test
jb
imul
test
xchg
mov
sub
xchg
fcmove
or
fbstp
outsb
ret
test
mov
adc
or
xchg
push
add
mov
jnp
nop
shrb
mov
movsb
hlt
cmp
and
and
mov
outsl
loop
push
enter
adc
stos
xor
mov
int
xchg
jmp
aad
scas
adc
xchg
jns
mov
mov
fs
jecxz
add
add
inc
enter
pushl
cld
sbb
jae
add
add
test
push
in
push
mov
ficompl
add
mov
pop
xlat
push
stos
sbb
push
pop
cmp
xchg
sbb
pushf
lea
or
sbb
and
sahf
js
pop
dec
nop
ss
add
add
ret
ret
cmp
adc
inc
or
sub
loop
jo
rclb
lods
mov
aas
imul
jae
xchg
jl
dec
adc
leave
mov
lods
xor
xchg
enter
jae
jle
mov
adc
les
incl
jb
adc
cmc
cmpl
inc
lods
pop
sbb
cltd
rcl
repz
sbb
mov
icebp
lcall
cmp
out
jg
movsl
cli
adc
insb
stos
fdivl
inc
sub
imul
jnp
bound
adc
pop
hlt
push
ret
shll
mov
popa
icebp
sub
stc
adc
dec
add
add
pushf
shrb
lcall
cld
pop
cmp
js
add
add
arpl
hlt
sub
lret
ss
cli
shlb
lock
arpl
inc
imul
or
aas
pop
jle
cwtl
pop
icebp
inc
mov
jne
mov
outsb
xor
and
adc
xchg
xor
dec
mov
enter
pop
mov
jle
lea
jecxz
cmp
add
pop
psrld
iret
rcrb
lds
aaa
pop
mov
in
lock
or
bound
and
outsb
aaa
shll
int
dec
pop
cmp
js
mov
stc
scas
cmp
mov
orb
lds
imul
pusha
inc
bound
mov
inc
clc
adcl
adc
jo
inc
ds
pop
int3
mov
and
insb
imul
lret
push
movsl
ret
add
test
mov
aas
scas
fld
inc
xchg
loop
ret
add
add
mov
pop
cmc
gs
cld
push
pop
inc
in
mov
dec
xor
aam
iret
inc
imul
xchg
inc
ficomps
mov
les
lret
push
movsl
andb
popf
add
mov
adc
mov
and
inc
lods
into
int
mov
ds
test
mov
fbstp
xchg
adc
jl
push
dec
mov
jmp
hlt
mov
push
std
mov
push
sbb
mov
inc
mov
aad
ljmp
ss
shll
in
insb
ja
cwtl
cmp
push
scas
mov
pushf
xchg
add
dec
xchg
push
fxch
cmp
rclb
fstps
pop
fistl
pusha
and
xlat
or
push
add
sub
call
int
cmc
cmp
das
jecxz
sub
cmp
add
add
jne
jne
jg
loop
mov
in
add
add
cmp
adc
jg
mov
sub
in
psrad
push
call
repz
popf
les
leave
cmovge
loopne
rcrl
ret
and
js
and
in
and
ss
ret
pop
divb
jo
jne
dec
add
dec
stos
ret
cmpsb
mov
add
nop
jo
push
jne
shll
addr16
mov
xor
push
lahf
test
cmp
cld
stos
cmp
cwtl
and
jecxz
iret
mov
aaa
pop
adc
ja
test
lret
lods
add
int3
sarl
and
pusha
nop
dec
cmpsl
and
shrl
stos
cmp
mov
ljmp
mov
jmp
rolb
jmp
in
std
jmp
mov
mov
mov
jp
dec
dec
fistpll
rclb
sahf
jb
mov
sahf
sbb
iret
push
cmp
add
add
dec
pop
mov
cmc
mov
scas
xchg
add
add
mov
insl
push
cmc
popa
outsl
cmp
mov
pop
je
cmc
roll
and
and
mov
aad
adc
push
mov
cs
jns
bound
xor
push
dec
les
stos
jmp
aad
lock
roll
out
shlb
cmp
test
fwait
push
test
xchg
mov
popf
or
inc
scas
ret
ret
imul
pop
xchg
int3
mov
and
pop
mov
pop
inc
test
jb
inc
les
shrb
ds
nop
push
icebp
sbb
jecxz
scas
sbb
mov
dec
and
adc
mov
sub
and
lret
pop
dec
or
mov
xchg
xchg
mov
icebp
or
add
xor
add
fcmove
mov
lock
jl
movsb
aas
mov
add
add
outsb
jle
lods
testl
movb
add
pushf
stc
out
inc
add
mov
and
test
cmpsb
dec
scas
hlt
pop
ds
rcll
add
sub
mov
xchg
mov
inc
or
clc
popa
div
xchg
pop
dec
mov
mov
pop
sti
mov
movsb
jle
jl
int
mov
sub
push
repz
les
sub
sbb
aas
sbb
cmp
repz
int3
add
fcoms
and
dec
dec
push
and
add
es
and
inc
fwait
movsb
push
jmp
mov
enter
out
into
loopne
push
mov
jle
rcll
xor
aam
rcl
cmp
jne
sbb
xchg
push
pop
adc
fistps
or
sub
mov
push
das
fisubl
out
or
pop
ds
cwtl
mov
and
jmp
incl
scas
pop
add
add
mov
xchg
insb
sti
xchg
add
dec
enter
push
jbe
sbb
cwtl
clc
mov
cmpsl
push
push
into
lods
das
xchg
dec
es
cmp
movsb
jmp
test
and
into
aaa
pusha
pop
subb
sbb
push
andl
aaa
int
add
bnd
push
xchg
push
cwtl
cmpsl
mov
xor
pop
or
shrb
int3
sub
bound
cmpsb
push
xchg
iret
int3
mov
sub
push
rolb
mov
cmpsb
scas
adc
mov
mov
xchg
dec
push
mov
shlb
sub
idivw
out
subl
mov
bound
xlat
fdivr
stc
ret
lods
push
pop
and
cmp
cmp
push
ss
and
mov
push
js
or
int3
test
mov
fld
lret
stc
mov
daa
in
rcrb
test
cmpl
jb
fldl
xchg
mov
lock
add
test
sbb
xlat
in
aad
mov
addb
add
add
mov
fdivrs
out
jbe
xchg
test
cmp
jmp
cmp
adc
insb
dec
bnd
dec
mov
sbb
sahf
xor
stc
loop
dec
pop
sub
in
aad
int3
int3
cmp
push
int
sbb
xor
inc
push
or
nop
pop
lret
lods
inc
pop
cmp
test
movsb
jmp
icebp
int3
mov
mov
mov
inc
push
js
fsub
and
popf
add
into
cwtl
mov
data16
mov
int3
sbb
and
ror
test
or
mov
push
les
xchg
dec
or
fildl
mov
jl
jo
lahf
sbb
ds
jg
gs
jp
addr16
outsb
push
or
sti
insl
xchg
mov
cmp
daa
xorl
popl
lcall
dec
out
mov
das
andl
sub
outsb
cmp
add
add
push
sub
cmp
jg
and
mov
cmpsb
mov
add
add
sahf
or
daa
cmpsl
xchg
push
pop
fbstp
cmp
push
insb
leave
or
push
add
mov
or
push
push
push
fsubrl
cwtl
xchg
fucomip
pop
sbb
pusha
mov
test
sub
jo
das
sub
stc
push
and
fidivrs
movsb
pop
mov
fdivr
or
pop
mov
or
xor
ljmp
call
fcmovnbe
mov
sbb
sub
out
add
xchg
sbb
mov
sbb
sbb
sub
fcmovnbe
mov
fnsave
leave
shll
mov
jnp
pop
cld
add
insl
lret
dec
test
xor
fucomp
popf
cs
daa
ret
jbe
jmp
out
das
mov
sub
and
fistpl
addl
sub
mov
aam
xchg
fwait
test
in
add
add
xor
fistpll
out
repz
fcoms
xor
lret
add
inc
fbstp
mov
ljmp
lods
std
adc
inc
xor
mov
mov
addr16
mov
mul
jbe
je
fwait
cmpsb
fmuls
push
cli
loop
imul
cld
out
jne
in
repz
aad
mov
inc
xchg
xor
stos
fldt
inc
sub
nop
inc
sahf
lret
fisttpll
fwait
stos
add
jo
repz
xchg
jns
push
jne
or
pop
aaa
mov
es
dec
into
inc
int
imul
pushf
js
sbb
mov
fcoml
movsb
mov
hlt
add
je
mov
ret
cmpsl
push
sbb
aam
shrb
cli
cmc
cmpsb
mov
sti
inc
arpl
sub
repz
jmp
pop
dec
fsts
inc
les
jno
clc
lret
leave
or
imul
mov
les
js
xchg
lea
push
and
add
add
mov
mov
test
add
add
xor
cmp
cmc
je
add
dec
xchg
fbld
sub
pop
stos
ret
arpl
push
loopne
cli
cld
push
popa
pop
add
aam
mov
filds
pusha
inc
xor
add
mov
int
repnz
xor
test
inc
lcall
int3
out
inc
clc
cmp
xchg
nop
jge
call
dec
ret
xchg
rorl
call
push
in
out
adc
iret
ret
ret
mov
pop
xchg
movsb
add
cmc
cwtl
xor
mov
les
repz
inc
jno
jnp
jo
loop
adc
mov
xor
fs
dec
xchg
mov
ds
clc
popf
or
ljmp
xchg
xchg
aam
or
mov
xor
pop
lods
inc
push
xchg
cli
push
cmp
push
testl
inc
xchg
test
xor
sub
pop
fwait
sub
add
stc
enter
in
sbb
push
inc
ret
hlt
xlat
inc
stos
int3
add
add
jb
cmp
add
lock
lcall
ss
mov
into
shl
xor
jge
adc
or
dec
cmpsl
pusha
xor
sub
jle
int3
cmp
lods
jo
mov
test
sarl
insb
dec
sbbb
jl
stos
leave
ljmp
in
sub
xlat
inc
inc
movsl
lret
rclb
cltd
loopne
rorl
in
imul
decb
adc
lds
pop
es
mov
hlt
lret
inc
mov
pop
out
dec
cmp
clc
adc
cmc
aas
dec
mov
inc
inc
or
and
jb
test
and
cmpsb
inc
mov
mov
push
cs
xchg
insb
cmp
jecxz
es
sbb
icebp
out
sarl
cli
sub
inc
pop
add
push
sti
fistpll
xchg
je
outsl
shl
movsl
aas
or
sti
lea
ds
jp
mov
out
lods
push
pop
pop
xchg
cmp
sub
jne
imul
cmc
call
inc
push
popa
push
movsb
repnz
scas
int
add
mov
pop
inc
ja
adc
add
and
cmp
cmpsb
lret
jbe
inc
leave
or
das
nop
ret
out
in
loopne
ljmpw
lock
movsb
les
xchg
push
mov
adc
das
xorl
mov
ss
push
xchg
rclb
mov
fcoms
out
adc
xor
xchg
pop
push
xlat
or
clc
aam
mov
aaa
mov
nop
cmc
aas
push
mov
nop
orb
sub
fstps
jle
aas
lahf
test
pushf
jmp
ljmp
lds
or
adc
mov
in
inc
fstpt
fs
xchg
jnp
inc
fstpt
adc
mov
sti
andb
dec
popf
mov
lcall
mov
fdivr
dec
pushf
dec
and
and
icebp
call
jnp
setle
outsl
loope
orb
sub
pcmpgtb
add
movsl
mov
iret
sub
push
loop
mov
add
add
mov
mov
pop
and
out
jmp
jns
xchg
shrb
ljmp
jo
jecxz
int
lahf
lock
jo
cmp
ror
adc
inc
shl
dec
jo
adc
mov
or
fistps
push
lock
mov
inc
std
inc
ret
sahf
mov
sahf
sbb
add
add
test
daa
fmuls
out
nop
pop
xchg
fildl
cmp
bound
roll
dec
xor
inc
fnstcw
je
push
mov
into
dec
addr16
and
adc
subb
or
lock
js
mov
sbb
push
mov
adc
idivb
stos
leave
inc
mov
arpl
push
jl
mov
filds
pop
mov
test
icebp
ret
lods
jno
movsl
and
xchg
cmp
ficomps
inc
sub
and
jo
sahf
out
arpl
xchg
out
loop
add
add
out
into
gs
cld
test
cmpsb
out
mov
add
add
shll
fsubrs
cmp
in
scas
inc
mov
fistps
dec
and
or
scas
imul
inc
mov
fisttpll
call
adc
int3
mov
stc
aaa
mov
jecxz
or
mov
pop
sbb
lahf
fnsave
cmc
or
addb
sub
fcomps
aaa
jo
aam
or
pop
fimull
xorl
testb
mov
js
xor
cltd
or
pop
ja
ret
imul
mov
popa
and
push
testl
leave
icebp
dec
fdivrs
test
ret
cmp
xorl
outsb
jmp
mov
lods
push
cwtl
xchg
es
inc
inc
push
jbe
loop
outsb
aaa
cmp
insb
std
mov
mov
insl
in
mov
push
add
add
xchg
and
je
out
mov
cld
adc
sbb
add
nop
adcb
inc
or
in
jnp
xor
iret
dec
cs
cs
mov
sub
lret
in
add
or
sti
lahf
jp
in
inc
fs
lods
nop
pop
mov
push
cli
jl
push
in
lret
sbb
punpckldq
shrl
outsb
mov
in
sbb
dec
adc
out
push
cld
pop
lahf
pop
ss
rorb
pop
mov
inc
aad
xchg
shr
mov
pop
mov
std
or
addr16
fisubrl
pavgb
push
dec
inc
adc
pushf
cmpb
mov
sarb
rcll
das
icebp
push
daa
loop
dec
mov
gs
fdecstp
cwtl
cmpsl
jo
in
dec
cmp
out
fisubrs
push
xchg
movsl
cs
jg
sbb
or
adc
orl
hlt
testb
enter
lahf
push
add
add
dec
daa
dec
das
outsb
imul
push
xchg
lea
sarb
ret
roll
add
xor
aaa
xchg
in
cmp
pop
fs
dec
rcll
repnz
int
into
jmp
xor
cmc
jecxz
jno
inc
lret
xchg
out
xchg
dec
or
dec
fcom
or
mov
dec
xor
push
mov
adc
popa
test
repz
mov
cmp
test
jb
push
fstpt
inc
pop
das
ja
into
dec
subb
inc
jbe
imul
aad
sti
add
jl
pop
mov
mov
lds
das
bound
pop
add
lea
and
imulb
xchg
mov
pop
or
jbe
adc
mov
lock
push
push
movsl
mov
push
dec
xchg
adc
daa
cmpsb
pop
push
iret
fs
pop
pop
ja
std
mov
pusha
jo
cmpb
push
adc
movsl
repz
ds
mov
cmp
push
dec
ja
movsb
outsl
sub
lods
xchg
addb
add
popf
mov
lahf
ret
or
push
hlt
add
add
jb
out
sub
mov
ds
and
shlb
cmp
mov
jae
insl
rcrb
fmull
jg
gs
daa
pop
mov
in
inc
cld
inc
test
mov
test
mov
adc
mov
xchg
add
fisttps
or
std
mov
xor
test
xchg
bound
je
jae
ss
mov
push
les
cld
cmpl
shr
lret
sub
xchg
mov
arpl
pop
dec
stos
jl
rcll
rorl
mov
and
xchg
test
xchg
cltd
xor
mov
rorb
and
dec
add
jo
mov
stos
sahf
mov
xchg
das
or
sbb
push
mov
in
aas
or
mov
mov
stos
cmpsl
or
outsl
je
sarb
cli
test
jns
xchg
call
aam
iret
mov
xorb
add
add
neg
outsl
push
xchg
or
loop
inc
int
add
add
xlat
iret
out
mov
rcll
pop
std
scas
shll
outsl
test
iret
adc
lods
push
je
add
inc
gs
imul
loopne
mov
push
inc
cs
pusha
decl
mov
xchg
cmp
ss
jle
mov
push
sub
xchg
daa
push
std
movsb
mov
and
or
dec
sbb
inc
dec
xorl
je
aaa
xor
push
adc
cmpsl
push
xchg
mov
push
test
test
xchg
insb
jp
aas
jo
push
mov
stos
mov
sbb
mov
loopne
pop
test
dec
ret
outsb
add
ljmp
inc
inc
scas
xchg
ja
pop
call
pop
sbb
in
les
mov
add
les
cmp
jno
test
shrb
mov
or
imul
inc
mov
and
loopne
mov
or
lahf
bound
sbb
ds
mov
add
xor
add
sbb
sub
dec
out
and
add
add
cmp
cs
movsl
addl
xor
sbb
adc
and
mov
leave
push
pop
fstpl
in
dec
pop
std
push
jl
push
test
or
inc
dec
outsl
lds
add
mov
js
lea
nop
xchg
and
inc
and
aas
lods
mov
adc
insb
push
scas
cmp
xchg
sbb
fsubs
stc
inc
fdivrl
adc
lea
inc
lds
nop
into
xchg
outsb
push
mov
push
and
cmc
imulb
jns
into
pop
pop
mov
pushf
inc
sbb
cmp
aad
jmp
cmp
xchg
pop
imul
jno
popf
adc
sti
mov
push
mov
cld
or
fadds
sbb
sarl
std
jne
mov
lods
call
sub
or
movsl
jmp
jns
mov
mov
popa
cmp
mov
xor
add
add
ds
jae
loop
pop
xlat
aad
add
mov
adc
mov
clc
movsl
add
sbb
jl
inc
cmpsl
lret
xchg
mov
cmp
ljmp
sar
negl
xchg
loope
push
test
in
cltd
dec
loopne
adc
repnz
adc
add
adcb
sub
mov
movsl
and
jmp
sbb
mov
lea
and
lea
cmp
in
sub
repz
inc
jns
dec
xor
push
bound
dec
inc
jae
das
jmp
xorl
mov
jns
fcmovnu
add
fsub
into
inc
xor
pop
les
xor
jne
in
gs
stos
pop
je
sbb
out
inc
shlb
enter
sub
cmpsl
jnp
or
mov
lcall
mov
mov
mov
mov
and
add
add
add
lcall
jnp
push
cmp
add
add
es
roll
insl
and
sbb
mov
call
sbb
dec
dec
xor
or
mov
sbb
push
imul
adc
lahf
aas
add
fidivl
mov
cmp
inc
adc
mov
shr
push
xchg
dec
fidivrs
aaa
shrb
mov
and
stc
or
jp
xchg
inc
ds
jecxz
sub
add
inc
jmp
and
xchg
loope
jb
pop
sub
xchg
mov
xor
push
lods
sub
jb
xor
shr
ss
incb
adc
inc
add
mov
in
ss
shll
ja
daa
out
xor
insl
cmc
dec
stos
push
and
or
pop
je
mov
lods
mov
mov
mov
pop
cmp
xchg
mov
jmp
repz
fldcw
push
cld
bound
fisttpll
lret
inc
stos
or
nop
dec
adc
daa
mov
je
cmpsb
pop
test
add
cmp
jg
leave
or
insl
dec
es
add
add
jl
pusha
fcmovu
mov
pop
and
and
insl
notb
dec
scas
fcmove
mov
cmp
jo
gs
xchg
std
into
in
mov
mov
ss
jo
sub
jmp
rolb
stos
adc
aam
fldcw
xchg
xor
bound
mov
les
adc
inc
mov
rorb
pop
mov
test
addr16
xlat
mov
dec
or
push
jo
or
adc
adc
bound
sbb
lock
jnp
pop
mov
fwait
pop
mov
mov
outsb
iret
mov
subb
nop
or
sub
cwtl
and
pop
aam
and
mov
xchg
mov
mov
scas
cmp
sbb
adc
adc
jbe
mov
xor
loope
mov
add
int
out
out
imul
nop
xchg
movsb
sbb
fadds
add
int3
jno
stos
cmc
pushl
gs
loopne
iret
clc
clc
mov
pop
xor
pop
rcll
sub
jb
push
or
jecxz
add
xchg
and
cmp
mov
ja
shrl
cmpsl
pop
add
mov
jge
mov
mov
jbe
pop
jge
call
push
adc
fildl
push
dec
mov
pop
ss
pop
addr16
data16
in
fisubrs
lcall
fwait
dec
jge
test
inc
cmp
lods
jmp
mov
inc
add
cld
adc
sti
loopne
xchg
fmul
out
lds
sbb
aaa
pop
imul
enter
sub
add
sub
ret
insl
popa
mov
sbb
bound
insl
xchg
scas
imul
sub
mov
mov
cwtl
adc
mov
and
jmp
fadd
inc
jbe
pop
jae
cltd
pop
movsb
ret
pusha
xchg
cwtl
and
gs
sbb
lcall
out
fldcw
push
in
sub
loop
flds
add
jae,pn
mov
push
jecxz
dec
dec
sbb
imul
jnp
push
imul
aas
outsl
dec
fildl
jo
pop
sub
popf
or
jle
jg
add
mov
mov
stc
sahf
or
xchg
cwtl
inc
cltd
ja
jg
test
jbe
push
pop
xchg
mov
outsl
int3
outsb
push
dec
repz
imul
and
jp
dec
adc
ds
ss
inc
xchg
fcomi
iret
pop
in
sbb
mov
mov
sti
jb
mov
sub
sub
push
dec
cs
subb
lret
dec
sub
test
jne
into
popf
xchg
rolb
scas
sbb
cmc
jae
stc
sbb
leave
adc
addr16
scas
repz
leave
and
flds
es
daa
data16
out
call
gs
jnp
inc
dec
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
adc
lock
add
sbb
jo
jbe
mov
scas
cmp
cld
mov
mov
push
cmp
std
adc
loope
mov
adc
lcall
les
push
mov
sub
jle
negb
bound
push
cmovb
or
imul
sub
mov
into
adc
popf
fsubrl
cmp
lahf
clc
mov
out
jle
cmp
je
test
popf
pop
mov
enter
ljmp
cmp
pop
jnp
add
inc
add
ss
and
mov
or
loop
push
movsb
pusha
rcll
jge
adcb
clts
add
and
jg
xchg
jns
mov
outsl
insb
pop
cmpsb
ret
mov
pop
out
jae
or
sbb
sbb
pop
test
in
add
mov
pop
jg
xchg
add
add
jle
jg
std
fstpt
stos
arpl
cmc
fildl
add
push
add
repz
xchg
dec
lock
xor
dec
movsb
cmpsb
xchg
fistps
cmc
lahf
cmp
cmp
mov
int
rdpmc
push
mov
xchg
mov
jl
sub
push
or
pop
ja
jns
fsub
add
sub
or
popa
push
out
inc
not
adc
xor
jle
ret
xchg
popa
pop
adc
das
xor
push
jmp
mov
add
mov
aad
insb
imulb
sbb
mov
xorb
pop
lcall
jne
dec
xchg
bnd
arpl
pop
out
sub
push
pop
xchg
add
xchg
test
mov
addr16
sbb
jo
inc
sub
insl
mov
xchg
cld
aam
aam
stos
jae
test
push
xor
jmp
test
pop
lcall
movsb
cli
inc
aad
shll
test
xchg
mov
cmp
pop
cmpsb
push
test
mov
add
add
mov
sti
idiv
lods
pop
sbb
rcll
faddl
add
arpl
sbb
lret
add
xor
or
cmpps
mov
push
testl
stc
adc
in
mov
dec
pop
cmpb
pop
add
outsb
xor
clc
ds
add
jno
mov
iret
jno
mov
insl
test
pop
movsb
movsb
and
movl
fmull
mov
int
movsl
popa
jnp
pop
xchg
jmp
arpl
adc
inc
pop
jae
test
mov
pop
or
pushf
stos
in
aam
jae
fdivs
std
adc
push
inc
adc
pop
inc
sbb
stos
cmp
inc
fsubl
pop
and
add
dec
scas
insb
mov
xchg
mov
pop
jno
sbb
mov
ss
sub
or
xchg
cmp
mov
push
cs
out
rcrl
push
pop
arpl
mov
adc
ret
add
add
sbb
jmp
scas
inc
call
fldl
add
in
notb
mov
loopne
in
sub
push
xchg
imul
mov
mov
and
xor
mov
dec
push
inc
dec
xor
cmp
stc
mov
jne
adc
addr16
mov
jp
xor
aas
out
jg
lcall
or
or
orb
push
jno
jb
cmpsb
inc
and
sbbb
and
pop
outsb
inc
pop
xchg
call
and
ds
fistps
cmp
loop
xchg
popa
sahf
in
stos
int3
cmp
std
test
hlt
pop
cmp
jp
push
adc
fimuls
pop
cmp
repnz
insl
pop
dec
pop
mov
fs
jo
repnz
mov
push
js
mov
mov
pop
inc
jb
lcall
push
adc
stos
fcmovne
sub
pop
mov
or
cwtl
clc
popf
jbe
push
xor
and
mov
int
movsb
mov
in
adc
add
cmpsl
fimull
faddl
jno
add
add
add
and
incl
push
jecxz
pop
fld
xchg
xor
fwait
jle
or
mov
lea
pop
icebp
lea
xchg
cli
scas
call
mov
outsl
hlt
sahf
lahf
jnp
pop
sub
jmp
cltd
xor
pop
push
cwtl
jae
add
sbb
mov
loope
sbb
sbb
aam
outsl
mov
xchg
clc
test
cs
adc
aam
mov
enter
sub
mov
stc
out
and
ds
hlt
add
test
ret
jnp
scas
aam
mov
sbb
cld
subb
cs
in
dec
sti
hlt
pop
mov
jno
scas
leave
and
sahf
or
mov
pusha
shrl
int
vzeroupper
iretw
js
inc
cmp
xchg
mov
pop
xchg
arpl
cmp
stc
stos
out
adc
sbbl
into
sub
outsb
xchg
or
mov
pushf
xchg
jne
cwtl
sbb
sub
add
jg
mov
lcall
fisttps
or
or
add
add
pop
cmpsl
fxch
mov
jl
subb
jne
push
adc
jae
test
pusha
push
loopne
loopne
leave
sbb
ljmp
or
mov
xchg
loop
ja
rorb
xchg
push
es
pushl
das
repnz
rolb
or
add
pop
aas
lock
in
fldl
dec
pop
dec
testb
cmp
sub
arpl
jns
cmpsl
outsl
pcmpgtw
in
jo
aas
adc
ds
popa
add
push
push
subl
in
sbb
pop
fstps
lcall
and
icebp
sbb
jmp
andb
popf
ds
pop
frstor
aam
jge
mov
pop
adc
lcall
clc
mov
lret
add
adc
xchg
mov
dec
adc
addb
pop
test
add
iret
mov
add
mov
jns
xchg
xchg
mov
mov
dec
push
loope
add
icebp
mov
arpl
and
pop
in
adc
imul
lods
push
or
push
cmp
shrl
mov
pop
imul
sbb
mov
movsb
push
shl
es
sub
push
lcall
iret
pusha
cwtl
movsl
outsb
out
add
in
or
inc
inc
push
push
out
loopne
pop
xchg
jne
and
in
jbe
add
fisubrs
inc
icebp
cmp
or
movsb
movsl
jge
dec
cwtl
hlt
loope
in
xor
scas
in
jl
mov
cmp
jb
les
cmp
jecxz
adc
fstl
sti
mov
js
lcall
ficoms
jp
ja
and
inc
xchg
shr
popl
mov
dec
fsts
into
test
shl
shlb
inc
dec
jae
notb
mov
nop
xlat
mov
dec
dec
mov
add
add
fadd
fsubp
jnp
or
cld
les
push
adcl
add
add
cmp
fwait
cmpsl
iret
imulb
sahf
cltd
testl
sbbl
sub
rcrb
outsl
adc
dec
lret
cmp
cmp
jb
scas
jmp
daa
sub
xchg
shr
cltd
mov
adc
loopne
imul
pop
mov
arpl
jg
and
push
or
scas
addr16
out
stos
adc
shll
jno
dec
outsb
mov
and
lret
xchg
cmp
out
adc
inc
into
cmp
mov
ret
lods
movsl
lds
pushf
ja
jg
and
xor
lods
subb
pusha
jb
dec
mov
pop
xchg
push
out
repz
les
push
punpcklwd
stos
sbbb
dec
scas
cli
rolb
jnp
sub
js
or
pop
outsb
lahf
xchg
or
inc
shl
mov
sti
scas
jb
jl
mov
sub
dec
arpl
sahf
lret
scas
and
inc
lahf
or
mov
fnsave
shll
rcrb
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
push
aad
jecxz
add
nop
cmp
sub
dec
lret
lret
loope
jno,pt
add
pusha
pop
inc
xor
mov
std
jbe
push
add
xchg
cmc
outsl
jb
aam
call
dec
int
fbld
call
sahf
into
sahf
and
int
lds
push
mov
add
dec
pushf
jge
jg
jne
adc
inc
jnp
push
and
xchg
pusha
aam
push
dec
aam
cmp
xor
push
rcl
imul
leave
in
cld
shlb
shrb
ror
sbb
inc
inc
mov
mov
adc
imul
cmp
movsl
sub
fisubrl
fstpt
push
add
xchg
testl
push
xchg
dec
in
mov
data16
pop
dec
sbb
jo
sbb
jo
xlat
push
int3
fisttps
sbb
or
mov
loope
test
pop
nop
dec
jno
cmp
lea
pop
jbe
ja
sti
aaa
out
ja
add
add
add
rol
mov
sbb
nop
pop
mov
nop
sbb
fstpt
push
sbbl
cltd
jno
xchg
jl
push
and
push
push
imul
mov
out
push
hlt
or
bound
icebp
mov
cwtl
fdivr
rcrl
scas
movsb
sbb
and
loopne
stos
int3
std
gs
int3
mov
push
adc
inc
out
sub
xor
jg
ss
mov
adc
fdivr
adc
cli
sub
movsb
dec
jbe
inc
and
sbb
add
ret
cli
and
cmp
gs
cwtl
pop
xchg
inc
or
popf
sbb
mov
dec
sbb
clc
add
jmp
pop
dec
mov
test
sbb
xchg
jb
mov
nop
ljmp
push
mov
or
mov
mov
adc
push
pop
pop
fwait
xor
mov
in
pop
and
add
ror
cltd
outsl
mov
aaa
pushf
inc
pop
shll
in
add
fadds
add
out
jecxz
push
add
movsl
xor
dec
pop
dec
ret
sub
rcl
sbb
push
repz
dec
sub
cmp
aam
arpl
out
popf
add
lea
mov
xlat
mov
add
mov
cmp
and
inc
or
push
mov
ret
loopne
lock
jle
pop
pop
orl
aas
shl
fisubl
aam
cmpsb
leave
lds
mov
out
jg
je
cmpl
add
insl
sub
divb
fcompl
jae
jno
ja
xor
cmpsl
xor
adc
sti
xor
sarb
xchg
dec
inc
jo
pop
lods
stc
sti
shll
dec
push
leave
orl
pusha
pop
mov
sub
jno
popa
push
push
adc
mov
sub
inc
jb
xchg
sbb
lds
ret
sbb
mov
add
sub
cmp
add
add
ja
lcall
mov
test
out
add
inc
jmp
and
ret
test
shrl
jle
push
dec
pop
push
sub
add
bound
cmp
ss
insl
pop
xor
sarl
sbb
std
and
insb
fildl
mov
in
pop
jns
xchg
insb
sub
pop
daa
cmpb
or
cld
int
or
adc
inc
outsl
xor
and
lds
pusha
dec
test
mov
mov
mov
mov
aad
mov
sub
sbb
push
incw
rcrl
movsl
sub
ja
cltd
inc
jmp
add
jge
add
movsb
das
cmpl
aam
inc
xor
sbb
adc
test
and
sub
inc
sbb
in
or
cmc
jle
faddl
rorl
cmp
sahf
jb
repz
test
adc
cmp
ret
psubusw
jb
add
repz
lock
jg
in
and
xchg
pop
sub
add
lret
inc
into
mov
mov
or
dec
mov
shll
nop
addr16
mov
inc
mov
jae
xchg
pop
dec
movsb
jmp
lcall
mov
adc
cmpsb
mov
xor
lcall
sarb
dec
sbb
lahf
mov
cmp
cli
xchg
repnz
sbb
negb
jmpw
mov
push
enter
xchg
pop
pop
mov
lock
pop
mov
jl
dec
repz
and
fs
jnp
push
cmp
pop
jne
dec
aam
sbb
in
stos
neg
or
bound
iret
and
das
xchg
sbb
es
xchg
pop
push
mov
popl
add
sti
imul
inc
dec
imul
dec
mov
inc
xchg
push
inc
rolb
scas
sub
jnp
mov
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
es
xor
add
add
dec
push
fwait
mov
loope
xchg
clc
and
dec
xchg
and
repz
rcl
pop
mov
call
pop
mov
pop
push
ljmp
mov
cwtl
push
cwtl
pop
cltd
cmp
xor
pop
sbb
pop
mov
lea
push
daa
mov
in
or
xor
sarb
aam
pop
mov
rcll
clc
push
ret
dec
or
fucompp
dec
lea
cmc
add
js
mov
ret
fsubr
rol
sti
sbb
jae
mov
mov
repz
rorb
in
cmpb
testb
sub
clc
push
popf
lods
add
dec
data16
dec
push
push
push
andl
leave
jg
cli
addb
cmp
dec
and
mov
loopne
or
rcrl
add
sbb
addr16
ret
cs
cmp
pop
or
adc
add
add
mov
dec
js
stc
mov
dec
int
aad
xor
ss
add
inc
sbb
push
inc
cmp
sbb
pop
push
sbb
mov
or
insb
add
in
outsl
cmp
mov
mov
fcoml
pusha
xchg
add
jp
fsubr
or
xchg
scas
push
xchg
int
xchg
ret
ss
xor
bound
in
mov
adc
ror
xor
xor
mov
mov
mov
repz
sub
int3
dec
mov
inc
inc
mov
push
lds
mov
xchg
xor
and
sahf
mov
call
dec
js
fisubrl
scas
mov
mov
pop
cmp
imul
push
jae
jmp
push
push
adc
adcl
das
clc
out
imul
int3
lcall
jge
pop
adc
mov
inc
sbb
sti
mov
xor
or
pop
xor
int
outsb
pushf
sldt
add
insl
repz
fwait
jns
jns
dec
push
adc
add
insb
rep
in
dec
fwait
xor
jge
cmp
pop
fisttps
data16
cltd
pop
shlb
xchg
sbb
imul
dec
and
repnz
pop
leave
lret
je
out
sub
or
push
rcr
pop
cmpsl
aaa
scas
sub
lret
adc
stos
aas
pop
inc
jg
movsb
or
pusha
cmpl
push
jle
xchg
pop
js
out
sbb
sbb
dec
cltd
loop
in
pop
rcll
not
daa
ret
jo
scas
sar
sub
ljmp
cld
sbb
xchg
mov
imul
fiaddl
rolb
insb
es
ja
es
adc
or
in
movsb
push
xchg
subb
adc
int3
push
cmp
and
xor
loopne
xchg
stc
fnstenv
lods
mov
add
aad
cs
pushf
testl
xchg
xchg
push
push
pop
lcall
dec
inc
cmp
jnp
adc
jne
in
pop
test
add
xor
cmpb
pop
stos
fwait
sti
pusha
fcompl
fidivl
or
test
js
mov
sub
stc
test
lret
je
mov
sbb
stos
xor
imul
add
pop
leave
movsl
cmpsb
or
mov
dec
loopne
fsubrl
cmp
xchg
sbb
orb
xlat
fildl
add
mul
in
movsb
jl
lock
jnp
mov
iret
stc
sub
cli
push
popw
aas
jns
jecxz
push
xor
xchg
fdivrs
jmp
fwait
mov
adc
loope
pop
mov
or
pop
imul
xlat
mov
imul
or
ja
les
mov
aaa
decb
mov
adc
bound
pusha
mov
xchg
push
fld1
inc
sbb
add
add
subb
fistl
das
in
out
fs
in
add
add
imul
adc
test
mov
outsl
test
xor
mov
fwait
add
sub
cwtl
mov
popf
xor
jns
mov
jb
ljmp
cmpsb
int
sbb
scas
mov
adc
scas
cmp
scas
push
xchg
xor
xchg
jbe
daa
push
or
test
add
sti
mov
addr16
push
dec
mov
les
loopne
pop
mov
fwait
mov
cmc
mov
out
cmp
jnp
insl
jae
sub
jl
es
pop
pop
in
pushf
and
jge
dec
or
popf
je
cmp
inc
aam
repnz
xchg
stos
inc
mov
sbb
or
sti
and
cmp
leave
mov
cs
aad
aam
in
repnz
fdivs
mov
xchg
mov
leave
roll
cmc
scas
sub
or
add
add
jb
scas
decb
fisttps
or
in
add
add
mov
push
js
sti
adc
push
adc
lock
ss
adc
andps
or
icebp
mov
pop
sbb
mov
repnz
cmp
mov
adc
xor
xchg
sub
adc
sbb
cmp
lock
insl
leave
loopne
xlat
hlt
lcall
push
cltd
jmp
aas
das
mov
mov
icebp
cmp
cmpsb
rorb
out
fs
xchg
arpl
jns
inc
inc
roll
pop
mov
mov
fnstenv
pop
je
dec
xchg
and
pop
jno
clc
dec
lahf
mov
jecxz
push
xlat
loope
xchg
cmp
pop
jl
jmp
addr16
push
clc
je
fimull
sbb
adc
loope
sub
in
mov
mov
xchg
dec
out
mov
xor
pop
in
pushf
imul
roll
add
add
xlat
mov
xchg
and
adc
add
js
inc
je
inc
xor
mov
cld
xchg
mov
push
or
pop
push
mov
and
leave
or
fnsave
push
mov
mov
cmpb
adc
packssdw
cmp
dec
in
cmp
cwtl
fs
jne
shl
and
dec
test
mov
push
data16
push
mov
mov
xorb
nop
mov
movsb
inc
repnz
lret
rclb
repz
loopne
adc
aaa
clc
jg
je
adc
rclb
nop
cmpsb
mov
cmp
or
lahf
jno
adc
dec
and
clc
lret
sub
jmp
push
mov
ss
jecxz
ljmp
out
imul
rol
es
jge
test
jb
stos
push
jmp
repz
sbb
xor
loop
jns
or
push
pusha
popa
jns
mov
xchg
and
lea
sub
jecxz
les
add
add
add
mov
aas
mov
pop
es
add
mov
mov
mov
mov
lds
fsubr
imul
push
pop
js
gs
in
inc
pop
lret
mov
dec
out
push
outsl
mov
mov
xchg
sub
ret
pop
push
jg
movsb
sub
jno
inc
out
xchg
jg
cld
push
notb
int
in
in
jo
jns
cli
dec
sarl
sahf
nop
inc
aas
dec
imulb
scas
arpl
ja
and
xchg
add
in
push
jae
test
or
jnp
lret
dec
or
cwtl
subl
pop
lahf
scas
aaa
cli
mov
iret
arpl
scas
sbb
cwtl
cmp
test
iret
fistl
lods
repnz
dec
sub
fmulp
dec
cwtl
mov
push
push
push
cmpsb
faddp
aaa
and
cmp
jbe
mov
ja
fdivs
divb
cmpsl
jae
out
pop
mov
pop
cmpsb
lret
xchg
outsl
out
popf
cli
in
add
add
mov
sti
mov
lods
shlb
add
icebp
mov
jnp
out
pop
ss
out
pop
aad
in
incb
js
loop
add
shlb
xchg
dec
or
mov
sbb
sbbl
es
mov
addr16
dec
push
movsb
int
nop
cmpb
mov
push
sbb
pop
mov
inc
jge
mov
ds
adc
out
hlt
pop
aam
push
pusha
je
xchg
call
data16
mov
add
je
rorl
cltd
je
gs
push
dec
andb
add
idivb
inc
jecxz
and
dec
sub
or
inc
lds
mov
inc
call
dec
fs
aas
clc
cltd
xor
add
adc
pop
sub
aam
or
mov
or
mov
or
cmp
cwtl
cmp
in
sbb
fisubrl
icebp
sub
incl
popf
pusha
mov
or
add
push
cmp
adc
neg
jge
xchg
jns
inc
xor
inc
pop
icebp
add
add
or
xchg
sarl
adc
add
fcmovnb
cmp
fisubrs
pop
fisubrs
push
imul
xchg
mov
je
jb
push
out
inc
stos
adc
or
daa
push
rcr
test
xchg
out
cs
and
dec
add
jecxz
cmc
ret
dec
stc
and
jecxz
popf
xchg
xor
sbb
sbb
ficoml
rcr
inc
xchg
je
fwait
push
add
sub
dec
mov
test
mov
jb
popl
lea
test
ret
cli
adc
fdivrs
push
and
arpl
xchg
ficomps
fmuls
outsl
imul
push
repnz
cld
xor
test
pusha
scas
outsb
jnp
cmp
addr16
hlt
insb
adc
pop
fs
lock
lret
mov
stc
inc
xor
mov
roll
xchg
aas
icebp
inc
mov
xchg
adc
movsb
lret
add
dec
sub
sub
fidivrl
repnz
add
jmp
and
and
push
cmpsl
aam
imul
stos
dec
gs
xor
sbb
es
or
add
popa
push
and
push
ss
cmp
mov
incl
test
stos
mov
xchg
or
add
daa
push
lock
add
and
outsl
lcall
or
sub
popf
mov
fs
mov
fldcw
cmp
icebp
mov
mov
mov
imul
jno
js
lcall
jl
sub
aad
cli
jbe
push
aaa
popf
pushf
iret
loope
fsub
es
cltd
sbb
mov
fwait
and
movsb
outsb
dec
repz
lahf
arpl
push
mov
mov
in
jl
and
xchg
and
sub
sbb
aaa
sub
shrl
aaa
mov
pop
int
bound
add
add
ja
and
aaa
divl
push
repz
add
add
testl
stos
jns
imul
sbb
sbb
pop
les
dec
bnd
xchg
adc
inc
in
jmp
sahf
mov
mov
xor
dec
mov
push
mov
in
iret
and
push
jae
test
daa
and
mov
xlat
incb
daa
xor
xlat
sbbb
sarb
repnz
sbb
or
lcall
inc
sbb
cmp
movsl
jns
enter
sub
outsl
push
stc
adc
aam
fcomps
ja
outsb
push
dec
mov
cs
ljmp
cmp
sbb
popf
loopne
dec
out
cli
test
insb
arpl
dec
or
pop
test
pop
or
adc
bound
insl
mov
dec
sub
dec
arpl
mov
xchg
scas
dec
xchg
jno
test
cmp
push
add
add
movb
add
mov
cmc
mov
inc
sahf
add
insl
hlt
add
add
xor
in
lods
cltd
adc
imul
adc
push
push
add
jmp
cmp
in
movsb
addb
pop
adc
pop
mov
adc
je
mov
and
mov
xchg
outsb
stos
sbb
test
jae
push
adc
shlb
cmp
into
inc
int3
mov
rorb
movsl
adc
test
sub
xchg
in
ss
sti
lcall
add
xor
test
daa
jb
pop
mov
adcl
imul
push
cwtl
push
or
popf
mov
stc
sub
movsl
add
mov
insb
xchg
xchg
std
lret
outsb
adcb
scas
push
addr16
andb
xchg
nop
mov
es
test
lret
shlb
inc
daa
adc
adc
cmp
cwtl
pop
mov
pusha
sti
sahf
jmp
jle
jne
pusha
popf
pop
subl
add
add
push
popf
loopne
pushf
aas
int
push
pop
aas
sbb
stos
lret
jl
jb
mov
int3
clc
fisubs
shrb
mov
outsl
or
out
sbb
xor
gs
ds
jae
jne
dec
cld
fmull
and
xchg
popa
testb
xor
adc
adcb
dec
pop
call
lcall
cpuid
popf
fwait
push
xlat
fwait
lea
cmp
loop
xlat
xor
pop
divl
loop
aam
sub
cmpsb
mov
ret
and
xor
pop
xchg
out
inc
je
leave
jbe
push
addr16
mov
pop
pop
mov
mov
imul
ja
jnp
aam
fbstp
scas
test
idivb
in
shr
mov
icebp
out
xchg
aas
mov
ret
test
aas
fcmovnbe
cld
div
or
mov
cmp
lds
lret
std
test
xlat
and
add
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
xchg
push
stos
add
cwtl
sub
imul
popf
xchg
push
push
cmpsb
pop
inc
sbb
es
push
push
pusha
loopne
fdivl
mov
mov
fs
call
jne
popa
sarl
xor
cmp
stos
daa
rorb
fistps
jae
sti
arpl
and
popa
add
loope
inc
sarl
or
mov
decl
movsb
cltd
in
out
imul
pop
and
dec
and
inc
loope
test
add
mov
and
jmp
dec
fisubl
imul
shll
arpl
lods
cmp
sbb
pop
push
shlb
push
cwtl
mov
mov
mov
xor
sub
add
lods
and
daa
xchg
pop
int
ss
push
xor
adc
push
je
xchg
cmp
sahf
les
clc
shlb
add
add
add
xor
jb
jae
inc
js
add
add
or
rcrb
movaps
aaa
cmp
cmp
sbb
nop
adc
stc
pop
dec
or
dec
pop
mov
out
jo
jne
rcrl
aaa
inc
sbb
push
inc
in
sbb
add
insl
mov
sbb
add
imul
mov
mov
or
cmpsb
push
fdivl
and
or
icebp
fildl
jb
sbb
mov
dec
xor
ret
or
imul
test
das
or
mov
cmp
fmull
ja
pop
dec
jb
xor
fwait
pop
bound
aaa
cld
fidivl
fadd
test
mov
mov
sarb
adc
fidivrs
jmp
lods
pusha
xor
loopne
lock
mov
xor
int3
xchg
cs
ds
lock
jo
insb
fwait
iret
rcr
cmp
loopne
xor
test
add
add
ds
in
idivl
js
mov
lcall
add
test
and
movsb
dec
or
push
mov
inc
pop
push
adc
sub
dec
push
sub
out
xor
add
mov
pop
pcmpgtb
insl
aaa
in
pop
test
sbb
loopne
mov
jo
sub
xchg
add
add
ds
repz
and
test
ja
sbb
nop
sbb
fisubrl
or
or
add
jg
mov
add
push
repz
movsb
add
scas
ret
ffree
in
dec
push
repz
push
sub
iret
push
xchg
daa
sbb
out
and
mov
addl
dec
cmc
or
sahf
out
mov
inc
sahf
push
sbb
push
in
aaa
sbb
shr
sahf
es
into
rcrl
and
pop
add
insl
insl
aas
daa
sub
jp
test
jbe
add
add
jecxz
inc
cli
aas
into
lret
mov
stc
add
add
sub
das
xchg
rorb
ljmp
addb
mov
xor
mov
cmp
push
jecxz
int3
sbb
jl
and
iret
sbb
fisubs
adc
add
cmp
ret
loopne
pop
inc
inc
mov
xor
and
xchg
stc
pop
mov
aas
mov
push
pop
xchg
push
pop
or
out
inc
and
outsl
outsl
sbb
fiadds
xchg
pop
xor
mov
or
pop
insl
scas
push
insb
fsubp
add
jne
dec
mov
in
ret
ret
mov
xor
sub
ret
cmp
sbb
bound
fs
outsl
nop
loope
cmp
cli
cmp
rolb
test
pop
pop
out
ljmp
cltd
cwtl
jnp
mov
cs
xchg
outsb
mov
push
xor
inc
sub
add
mov
lcall
ss
pop
je
cli
add
add
movsl
xchg
js
adc
mov
insl
setle
inc
mov
sub
add
adc
mov
in
push
mov
lcall
cmpsl
mov
sarl
sub
out
pop
push
mov
fsubl
push
jg
push
fistpl
sub
mov
roll
test
sbbl
pop
dec
shr
pop
mov
nop
mov
lret
xor
adc
xchg
jl
pop
xchg
test
jns
cmp
test
xlat
sbb
inc
mov
push
xor
mov
fsubl
sbb
and
pop
mov
enter
imul
ss
call
imul
fcomps
pop
inc
and
adc
mov
das
imul
ret
jae
or
rolb
push
push
push
mov
sbb
jne
dec
mov
xchg
out
or
add
aaa
jae
cltd
dec
mov
jno
dec
sub
nop
sti
add
add
dec
push
mov
mov
cli
xchg
leave
add
sbb
insl
in
les
shrl
fidivs
cmp
pop
dec
jne
pop
iret
mov
push
in
dec
push
jns
out
jb
rolb
xchg
rep
imul
xor
pop
sbb
hlt
adc
aaa
mov
mov
mov
call
mov
cs
mov
mov
pop
mov
jge
xorl
ret
lods
test
sahf
ret
cmp
inc
inc
add
jbe
or
adc
pop
pop
cmpb
orb
sahf
push
jae
enter
sbb
mov
and
xlat
fimuls
icebp
dec
shld
dec
test
addr16
inc
push
outsl
push
call
addr16
pop
mov
repz
pop
jge
lods
pop
insl
sub
push
sbb
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
movl
add
jns
sbb
add
push
test
pop
xor
iret
call
leave
inc
lds
push
mul
mov
movsl
or
sahf
repz
fnstcw
cmp
popa
cwtl
jnp
cmp
sub
sub
or
cmp
xlat
test
jmp
ds
push
dec
xor
sub
dec
add
mov
xlat
fstps
jae
inc
daa
shlb
mov
xchg
sbb
push
pop
fstps
push
push
push
mov
and
or
pop
ljmp
sti
xchg
mov
daa
popa
out
xor
cld
sbb
adc
jmp
loope
pop
dec
and
test
das
insl
fists
and
sbb
popa
xchg
cmp
jne
scas
call
aad
jmp
shl
test
dec
mov
jl
fistpl
daa
jg
mov
mov
add
test
jg
push
pop
push
mov
lcall
add
cmp
xchg
sbb
sti
vmovdqu
push
jge
push
jmp
movsl
in
and
mov
shlb
adc
movsl
loopne
pop
out
xor
sbb
rorb
add
shr
rcl
fidivl
jmp
jg
jl
loope
push
popa
dec
and
jecxz
mov
lods
test
stos
shlb
inc
dec
std
insl
imul
pop
repz
lock
imul
iret
mov
dec
ja
in
jns
inc
adc
mov
leave
pop
mov
into
test
or
jne
in
inc
mov
cmp
cmp
adc
cmp
jo,pn
sub
cltd
push
dec
mov
outsb
jp
scas
out
dec
outsl
test
mov
out
nop
jmp
cli
jae
dec
ret
pop
ficoms
jl
adc
xchg
call
test
mov
or
adc
loope
sbb
cli
leave
jo
iret
add
add
movsb
push
in
cmc
jne
sbb
js
scas
adc
add
mov
sbb
lcall
push
pop
stos
push
ja
xchg
mov
cwtl
mov
mov
aad
fnstsw
pop
push
or
mov
mov
jmp
xor
je
cmp
int
test
dec
jp
test
lds
sbb
cmp
shr
cwtl
lock
cltd
mov
repz
incl
scas
push
inc
popa
lea
mov
xlat
jns
addb
jnp
or
mov
jecxz
push
pop
lock
jno
add
loope
arpl
and
movsl
pop
lds
incl
xchg
cs
jmp
push
inc
or
pop
push
sbb
clc
xchg
fwait
xchg
pop
outsb
data16
and
mov
arpl
sbb
std
mov
ret
pop
js
dec
lcall
push
fcoml
aas
cltd
pop
mov
pop
pop
push
lds
call
inc
lock
cmpsl
jg
out
pop
sbb
inc
cmpsl
insl
gs
xchg
imul
scas
add
add
out
shlb
aas
out
int3
mov
push
mov
add
add
xchg
movsb
ficoml
inc
outsb
ret
shll
cmpsl
jbe
pop
xchg
jmp
ret
cmpsb
xchg
mov
add
es
inc
sub
movl
lcall
fpatan
aad
xchg
push
lods
lea
daa
into
mov
int
stos
add
adc
add
arpl
ret
addr16
cmp
fstpt
inc
and
lfs
lea
iret
fwait
sti
out
pop
nop
lods
xlat
pop
cmp
cwtl
adc
push
imul
lea
sbb
push
idiv
xchg
test
cmp
pushf
mov
cmc
loopne
adcl
inc
rcr
and
test
sbb
imul
or
mov
mov
dec
lock
mov
repz
xor
xchg
imul
xchg
adc
shrl
fcoml
sub
sahf
dec
loope
decl
jns
popa
pop
inc
jnp
movsl
pop
rcrl
add
add
mov
lcall
or
add
add
ror
mov
inc
inc
ja
xchg
lcall
lret
outsl
adcb
iret
push
movsb
test
fcoml
add
mov
and
mov
rcll
ret
loope
rorl
in
xor
mov
aam
jno
cmp
scas
ss
ljmp
popa
xchg
pushf
dec
mov
nop
vpaddusb
inc
imul
sbb
bound
pop
sahf
sarl
cld
xor
or
das
ja
pushf
xor
jl
out
jecxz
ljmp
pop
cmpsb
lea
sahf
roll
cmp
stos
mov
fwait
push
jae
inc
cmp
stc
xchg
jne
xchg
sahf
cmp
jp
add
loope
loope
or
pop
mov
xor
test
push
rclb
xchg
popl
pop
add
push
mov
and
push
daa
inc
div
jp
lret
in
loope
add
sbb
add
add
ret
bnd
cmc
inc
stos
xrelease
insb
adc
add
add
cmpl
inc
inc
imul
push
stc
mov
adc
fwait
gs
jo
inc
mov
fdivrl
insb
imul
nop
in
cmp
mov
cmp
xlat
adc
jmp
lret
inc
sub
aas
orb
or
jg,pt
inc
dec
out
xchg
fdiv
sti
xor
mov
pop
push
icebp
and
push
fldcw
es
xchg
mov
push
sub
scas
cmp
rol
xchg
xor
xlat
outsb
stos
mov
xchg
ljmp
call
aad
mov
and
or
ret
jp
lods
imul
nop
push
sub
jmp
mov
popa
and
aas
jns
and
dec
mov
lock
fiaddl
es
cmp
movzbl
lods
jg
fadds
adc
cmpsl
lea
or
mov
or
je
in
add
in
movhps
add
add
std
aaa
mov
shll
loop
add
add
add
add
cmp
out
in
adc
xchg
and
sarl
lret
xlat
jo
das
dec
jne
and
mov
out
movsb
pop
push
stos
sub
dec
jmp
jp
sbb
sarl
jno
lods
pop
fldl
fwait
push
popf
lods
sbb
sbb
jp
sub
scas
and
xor
add
into
jae
ds
aaa
sbb
js
inc
lret
repnz
xor
or
test
or
lret
in
xchg
sub
adc
fst
push
adc
xor
inc
rcll
test
test
xchg
adc
and
std
jns
inc
add
sahf
xor
jecxz
jg
mov
test
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
popf
ficomps
dec
popf
fnstsw
scas
nop
add
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
