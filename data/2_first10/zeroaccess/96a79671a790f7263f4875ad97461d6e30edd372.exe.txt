push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
mov
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
xchg
test
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
jg
mov
test
test
lods
adc
arpl
sbb
jmp
cmp
sbb
mov
cmpsb
aas
popf
xrelease
insl
mov
stc
dec
xor
das
std
aas
pusha
add
dec
mov
sarb
sub
out
inc
enter
sbb
cltd
push
cld
cmp
insb
scas
mov
xchg
in
rcl
cmp
adc
mov
xor
mov
push
mov
iret
call
and
dec
hlt
dec
loope
imul
xor
pop
or
cmp
test
lock
aas
cmpsb
mov
stos
shrb
stos
nop
lret
popf
stc
adc
push
pop
shr
cmp
test
cwtl
out
or
lock
xchg
lret
add
xor
stos
ds
xchg
inc
dec
sbb
lea
mov
mov
jge
push
dec
inc
aaa
or
stos
pop
inc
and
jle
inc
lods
cmpsl
dec
bound
cmp
lcall
sub
adc
mov
cmc
rclb
add
sub
or
adc
inc
ret
aam
mov
aaa
add
out
stc
loopne
popa
push
fstps
stc
or
je
xchg
adc
out
or
inc
jp
dec
scas
arpl
rcll
les
cmp
add
pop
and
mull
and
lcall
push
aad
jmp
mov
xor
mov
sub
xor
ret
js
int
icebp
outsl
je
pushw
mov
mov
sti
jmp
data16
adc
push
clc
add
int
push
gs
push
jp
ret
mov
mov
es
add
into
xchg
aad
addb
pop
mov
and
dec
shll
dec
test
sub
lock
repnz
add
int3
scas
ficompl
popf
rcrl
aaa
adc
xchg
sbb
dec
sub
out
xchg
cmp
inc
jecxz
pushf
shl
ljmp
aaa
xor
stc
adc
xor
shlw
push
pop
fucomip
mov
jno
pushf
lahf
stos
mov
imul
jns
cmp
cld
insl
mov
cld
jns
pop
js
lds
insb
sub
push
sub
push
fisubrl
and
clc
adc
sub
lock
push
fisttps
call
enter
fs
adc
mov
lea
inc
and
or
pop
mov
imul
addr16
shlb
sbb
cmc
push
loop
adcb
push
ljmp
sub
insb
inc
aad
insl
out
popl
push
dec
mov
in
jp
dec
ds
fdivr
jne
fsubrl
iret
pop
dec
cs
outsl
dec
sub
cld
jp
rcl
ss
lock
fnstenv
lret
xchg
fcmove
pop
in
shll
or
lods
je
push
in
rclb
addw
sbb
je
ret
shl
in
nop
push
push
and
jne
xor
sti
out
inc
cmp
add
xchg
or
jge
ljmp
xchg
xchg
sub
pusha
dec
mov
mov
push
add
imul
inc
and
sbb
ficompl
sarl
add
pop
mov
pushf
lret
outsl
imul
ds
jge
jle
jo
or
sbb
or
mov
or
cmc
insl
dec
push
and
xor
pop
js
jp
aas
jb
es
cmc
xchg
xor
data16
jg
popf
ftst
roll
cmp
sub
xor
pop
mov
insb
xchg
ss
enter
push
mov
jl
and
dec
in
loop
dec
cltd
sti
rcl
movsl
sbbl
mov
outsb
xchg
xchg
sub
jns
bound
rcrb
mov
insl
xchg
mov
movsb
es
loopne,pt
push
push
aaa
rep
repz
mov
inc
rcrb
stc
sbb
xor
sbb
cmp
sub
or
dec
jnp
movsl
jg
xor
lea
sti
std
lcall
lds
lahf
jno
sbb
jb
add
mov
pop
loope
inc
dec
xchg
mov
popf
or
inc
es
lret
sbb
jecxz
movsl
loop
ss
cmpsl
fdiv
ds
mov
je
pop
or
mov
mov
fwait
push
xchg
cmpsb
les
fadd
push
mov
pop
ret
jns
mov
push
mov
roll
mov
inc
hlt
in
jb,pt
mov
xor
out
fisttps
fists
flds
aaa
jb
mov
sbb
xchg
repnz
lcall
mov
call
dec
jmpw
xchg
push
add
hlt
fldl
ret
rol
lock
mov
jmp
adc
mov
jecxz
stos
lods
xchg
jne
gs
test
pop
adc
jno
ds
cwtl
aad
adc
ss
loop
cmp
jle
data16
pop
xor
add
aas
cmp
xchg
add
repnz
cmpsb
sub
mov
xchg
and
inc
popf
xor
bound
push
and
cld
clc
aaa
mov
mov
in
dec
mov
mov
lea
jae
jmp
icebp
mov
pop
dec
test
cmp
cwtl
push
or
outsl
mov
insl
jne
loop
call
mov
stos
mov
mov
inc
xchg
sbb
popf
frstor
sbbb
leave
sahf
ret
push
xorb
jnp
pop
inc
sahf
mov
dec
movq
jecxz
mov
sbb
roll
popf
cwtl
xor
repz
and
popa
int
mov
xchg
lcall
or
out
jb
out
in
mov
adc
jae
sub
xchg
fidivrl
cli
ret
mov
stos
sbb
js
xor
sti
inc
mov
clc
jno
lds
cmp
into
or
cmp
lea
lds
pusha
mov
loopne
push
arpl
jmp
add
cmp
inc
bound
inc
mov
xchg
inc
imul
jp
cmp
xchg
ds
shlb
or
sub
int3
dec
sub
cmc
out
add
scas
loope
adc
mov
cmpsl
out
pop
and
or
loope
mov
ret
jae
in
out
and
push
jg
lret
mov
outsl
add
mov
push
xor
add
push
adc
inc
cmp
aas
push
lea
fildll
and
push
pusha
and
pop
fcoms
xchg
enter
std
out
inc
cld
test
int3
test
jmp
ja
cmpb
lret
push
push
pop
ss
das
inc
pop
lock
imul
jl
jno
sub
pop
jg
sub
ret
loope
scas
insl
clc
data16
sbb
sbb
push
cmc
roll
cmpsb
ss
decb
icebp
pop
cmp
movl
or
jns
jl
mov
hlt
mov
cmp
scas
sbb
popf
mov
mov
mov
add
jbe
fucom
sbb
or
cs
adc
imul
sub
sbb
lahf
xchg
out
dec
dec
or
out
add
pop
jecxz
push
add
mov
cmp
push
fisttps
jns
iret
xor
ss
loopne
sub
adc
imul
cmp
push
fidivs
ficoms
fsubr
add
mov
aaa
or
call
push
mov
fadd
xchg
push
addr16
das
cltd
rorl
daa
mov
fistps
std
dec
cmc
jns
test
adc
jne
lds
mov
xor
daa
ret
jge
ljmp
xchg
mov
and
hlt
ljmp
hlt
mov
adc
mov
sar
inc
pop
hlt
cmp
sbb
out
insb
repz
test
and
dec
jne
ficomps
loopne
jle
outsl
pop
adc
lahf
movsl
sub
sbb
popa
jmp
setle
imul
push
rcll
pop
in
pusha
gs
push
nop
out
lea
daa
adc
loop
cmc
sub
add
push
inc
push
lds
jae
mov
lods
mov
inc
call
dec
out
fst
ljmp
mov
push
xchg
mov
pop
movsl
jbe
dec
pop
lret
sti
push
ljmp
out
ret
fidivrl
pop
pop
inc
mov
jge
or
fwait
xchg
hlt
adc
movsl
xorl
lret
push
inc
or
adc
out
pop
adc
and
mov
int
ljmp
mov
push
ret
cld
push
cmp
syscall
mov
cli
cltd
cmc
xorb
adc
loop
xor
iret
push
aas
pop
mov
adc
mul
xor
ds
sti
cltd
pop
outsl
das
push
imul
adc
out
xor
std
mov
inc
add
jecxz
rcl
das
dec
jae
pop
mov
shrl
cmp
jo
cmp
adc
sub
mov
cmp
testb
inc
and
sub
sub
sub
add
sbb
mov
faddl
test
mov
outsb
mov
inc
add
inc
inc
cltd
mov
dec
jae
stos
leave
mov
repz
or
sub
sbb
jle
lods
push
or
movsl
pop
jo
std
aaa
sub
imul
movsb
dec
leave
xor
adc
sub
lds
cmp
fistps
sti
inc
lret
dec
cmc
push
fdivl
sub
int3
xchg
rolb
mov
add
mov
push
mov
pusha
cmp
fwait
sti
cmp
mov
lea
call
or
and
ljmp
pop
cmp
test
jle,pn
jg
sub
jle
aas
loop
cmc
mov
pop
jns
ror
in
sub
push
mov
in
jle
push
sub
or
loopne
cmc
ja
pop
xchg
nop
push
or
addb
sbbl
push
int3
das
mov
or
push
in
sti
stc
mov
aas
cmpsl
repz
lods
outsb
ror
popf
inc
shlb
test
xorb
icebp
dec
stc
clc
push
call
test
rsm
pop
jge
out
xor
jp
or
add
sbb
dec
mov
rolb
mov
xor
mov
stc
imul
dec
xchg
loopne
ja
insb
iret
shrb
ja
mov
xor
jns
xchg
adc
popa
and
mov
data16
cwtl
jecxz
out
stos
cmp
shrl
xlat
pop
scas
mov
ret
and
cmpb
dec
jo
dec
pop
in
mov
mov
lcall
mov
cmpsb
dec
dec
ljmp
outsl
out
fldl
iret
mov
mov
cmpb
lret
xor
scas
adc
jle
das
ficomps
stos
cs
std
lods
lods
cmp
cld
sarb
cmp
in
insb
loope
lret
cmpsb
popf
sahf
ror
aad
mov
cwtl
lock
dec
push
sahf
aad
push
dec
mov
add
imul
cs
into
and
xchg
push
mov
jl
sub
pop
cli
loope
mov
inc
or
lea
pop
push
popf
xchg
sub
in
notl
lock
jnp
call
sub
cmp
leave
pop
push
push
sbb
sub
loop
mov
cmp
test
jne
dec
loopne
icebp
pop
cmp
add
outsb
push
add
inc
movsb
icebp
bound
dec
jmp
les
movsl
dec
clc
or
xor
mov
xchg
pop
mov
xor
lods
stos
dec
mov
out
adc
test
test
mov
cwtl
andl
mov
mov
icebp
popa
mulb
mov
mov
ds
jnp
adc
xchg
dec
pusha
lea
mov
movsl
mov
push
xor
inc
push
in
pop
cs
sbb
ror
sbb
movsl
outsb
mov
mov
cmpsb
lcall
jp
xchg
inc
shl
xchg
jns
rorb
jmp
outsl
add
or
data16
add
add
pushf
out
or
stos
xchg
jge
incl
arpl
pushl
or
cmpsb
jmp
outsb
xchg
not
gs
int
and
outsl
fdivl
lock
arpl
fnstcw
mov
pop
inc
js
mov
rclb
push
mov
insb
cld
in
lret
fwait
adc
lods
adc
and
mov
out
push
mov
mov
push
jg
adc
addr16
push
sub
fs
push
pop
xchg
cwtl
loopne
pop
sub
pop
aad
aaa
mov
fisubrs
dec
jl
andl
jge
stos
inc
into
decb
sbb
movsl
xchg
mov
pop
mov
dec
repnz
cli
in
xor
shrl
aad
ss
and
filds
out
adc
por
cmc
insl
in
and
adc
fcoml
jp
push
mov
mov
jo
loop
insl
std
ret
test
stc
cwtl
in
ja
fistps
outsb
adcb
icebp
sbb
insl
sti
push
sub
lods
dec
mov
js
xchg
stos
leave
sbb
mov
lahf
mov
out
and
test
insl
movsb
pop
cli
aad
jne
es
push
pop
mov
lret
sbb
jb
out
sbb
iret
pop
push
popa
gs
jbe
popl
sbb
test
in
adc
xor
mov
jle
mov
pop
mov
pop
test
sub
push
or
jb
push
out
mov
sub
scas
std
jge
adc
xchg
repnz
imul
leave
shlb
shrb
jne
push
mov
dec
or
arpl
aad
lea
aaa
push
jecxz
insb
mov
inc
jo
in
addr16
xor
call
xor
shlb
popa
mov
cmp
test
mov
dec
cli
sbb
or
xlat
push
and
test
aas
clc
xlat
jmp
ds
xchg
insb
push
jl
push
inc
stos
and
dec
xchg
scas
pop
mov
imul
inc
add
push
inc
adc
out
in
inc
or
repnz
mov
jl
cmc
and
push
sar
or
jnp
mov
push
mov
iret
xor
divb
popf
notl
adc
loop
push
aad
mov
ss
insl
bound
cmp
ljmp
movsb
les
outsb
add
lcall
test
lea
repz
popa
aad
stos
cmp
ds
cmc
xchg
mov
jae
ds
or
lds
hlt
cli
pop
adc
pop
test
std
stos
sbb
call
xor
shlb
xchg
pop
mov
mov
sub
arpl
adc
data16
dec
les
in
loop
pop
add
out
cmpb
and
cld
push
xchg
xor
push
add
lods
popa
xor
inc
xchg
jae
les
cwtl
mov
mov
push
jl
lret
or
dec
or
aas
test
sub
int
rcr
sbb
add
pop
fdivl
cli
lods
das
mov
pop
and
jmp
lods
in
sbb
jmp
cmp
subl
xchg
cli
inc
jmp
cmp
xchg
fadds
push
jle
push
cmp
popa
jl
outsl
sub
cmp
pop
xor
lds
sub
sub
jnp
mov
pop
mov
mov
sbb
push
aad
sahf
leave
subb
push
nop
rcr
jl
xor
inc
les
lret
dec
cmc
jp
popa
sub
pop
movsb
add
iret
dec
into
and
xor
negl
mov
inc
jbe
shll
inc
out
mov
sub
aam
cmp
jns
and
dec
ja
sbb
mov
sbb
repnz
rolb
fs
push
jnp
mov
int
and
insl
movsl
mov
jge
icebp
loopne
push
leave
popf
mov
sbb
test
rcll
std
jle
push
enter
jg
pop
pop
sbb
xor
insl
adc
cmpsl
fbld
inc
inc
cmpsb
xchg
movsl
icebp
mov
add
pop
ret
sbb
addr16
dec
orb
leave
mov
and
push
pop
sbb
jge
enter
xchg
andl
pop
call
jns
cli
mov
fsubrp
ret
dec
adc
test
mov
pop
jp
ds
push
xchg
dec
sti
pop
mov
jno
aas
cmp
test
out
inc
adc
pop
movsl
mov
cmc
jne
stos
pop
addb
or
inc
or
sub
sub
mov
mov
mov
sub
pusha
or
pusha
shrl
cmpsb
push
mov
or
mov
or
repnz
cmc
mov
pop
xchg
cli
pop
push
into
or
xchg
nop
jbe
test
and
test
add
rcrb
dec
stos
mov
mov
dec
int
adc
icebp
cmp
jnp
mov
mov
imul
arpl
sbb
lret
jo
sub
inc
stos
psrlq
xchg
popl
cltd
cmp
pop
mov
stos
xchg
lahf
cmp
mov
movb
jo
js
mov
jae
dec
js
cmp
sub
aas
lcall
cmp
clc
cmpsl
jbe
sbb
fucom
fidivs
inc
sarb
xor
push
cwtl
sub
add
lods
enter
or
dec
mov
mov
mov
fcom
push
inc
dec
add
dec
icebp
jge
jle
mov
test
fildl
adc
fisubs
das
aaa
inc
cmp
xchg
push
dec
mov
loope
hlt
insb
pop
stc
jne
push
movsl
out
mov
mov
push
cmp
cmp
mov
bound
outsb
enter
push
sti
lret
xchg
cmc
popl
adc
test
or
mov
mov
fs
aas
push
repnz
lods
add
lcall
inc
mov
inc
xor
aad
inc
lret
sbb
add
sahf
mov
rdmsr
mov
and
in
inc
jnp
dec
or
test
and
roll
mov
and
xorl
cwtl
pop
pop
sub
pop
test
out
dec
cmpsl
arpl
insb
cmp
mov
aas
sub
ljmp
daa
pop
pop
inc
das
jb
in
lds
inc
add
iret
pusha
cmp
cltd
mov
icebp
mov
enter
pop
les
scas
dec
out
jno
mov
push
scas
data16
xchg
sbbl
push
flds
push
out
and
int
xchg
ja
inc
or
fstp
inc
cmp
mov
jno
mov
lahf
cs
push
add
scas
enter
rcr
push
test
pushf
push
xchg
out
test
inc
lods
pusha
ror
ljmp
sarb
mov
dec
mov
into
ret
js
stos
and
adcb
adc
ficoml
or
dec
or
cli
dec
cmp
test
cwtl
cmp
sub
push
or
mov
ljmp
shrl
push
gs
shll
inc
mov
inc
jle
ja
dec
xchg
pop
xor
pushf
fsubrs
mov
and
cmp
sbb
out
xchg
fistpl
or
pushf
shl
xor
pop
cld
ljmp
pop
inc
outsl
and
mov
mov
mov
jp
scas
in
int
xor
rcrl
jae
shll
aas
fs
cwtl
sahf
jl
lret
sbb
lret
mov
push
mov
xchg
scas
in
fimuls
xlat
xor
and
or
ljmp
fwait
adc
pop
lods
mov
out
mov
daa
cli
jns
sbb
es
fisubs
jb
adc
cmpb
jle
ljmp
lock
or
ret
nop
daa
lock
cmpsl
inc
xchg
arpl
flds
repz
jp
and
out
mov
scas
arpl
adc
in
out
lret
pop
cwtl
jbe
mov
sbb
jecxz
cmp
dec
mov
push
push
pop
mov
cli
sbb
adc
dec
jl
test
int
sahf
movsl
xchg
imul
sub
imul
test
mov
pushf
test
sbb
adc
inc
xchg
xor
fists
inc
pop
test
ja
outsb
sub
call
inc
enter
ret
jno
pop
xchg
in
icebp
pop
jnp
repz
mov
adc
push
xlat
std
xor
mov
test
dec
mov
push
or
rol
rclb
stos
in
xchg
cmp
scas
call
test
lea
xchg
and
popf
jg
pusha
test
push
xchg
das
rol
jae
push
sbb
cmp
int
setle
pop
mov
or
lahf
and
pop
dec
lds
sub
mov
aaa
sub
popf
inc
into
and
xor
cmpsb
mov
ds
lods
divb
dec
inc
divb
adc
bound
js
or
mov
stc
xchg
mov
nop
jo
roll
mov
jnp
add
push
popf
out
sarl
xchg
out
enter
insl
and
popa
pop
dec
jecxz
mov
jp
ret
mov
xor
inc
movsb
cmp
sub
pop
pop
addl
cmpsl
push
cmp
and
add
xchg
push
xorb
mov
hlt
jge
insl
xchg
cmp
xor
push
jmp
sub
dec
jmp
js
into
jp
data16
mov
sub
or
movb
fiadds
mov
mov
jnp
aad
jae
push
pop
loope
xor
cmp
stc
lret
shrl
adcb
nop
xchg
sub
cmp
scas
out
imul
sub
mov
mov
push
test
mov
sbb
push
inc
cmp
push
mov
data16
fistps
into
in
and
pop
addb
xlat
stc
sahf
mov
dec
cmp
outsb
adc
sbb
inc
lds
rolb
pop
xorps
cmp
std
push
cmp
fdivl
jo
in
scas
push
rclb
jp
sti
lahf
inc
sahf
inc
push
cwtl
ret
sarl
push
sub
xchg
pop
test
or
mov
cmp
cld
ret
sub
addr16
inc
fadds
bound
adc
or
aas
loopne
out
pop
dec
test
cld
and
mov
push
sbb
pop
xchg
cmp
mov
inc
cmc
lret
fadd
pop
cld
xor
in
add
sub
jo
dec
mov
pop
push
fsubrs
shrl
daa
or
push
fwait
jg
aad
sarl
idiv
leave
aam
add
pop
gs
mov
dec
ss
add
sbb
loope
int3
nop
nop
mov
cmpl
push
cmp
int
pop
mov
mov
aaa
out
push
cmp
and
pop
stc
or
setg
iret
or
icebp
ss
lods
xchg
cs
sub
arpl
std
mov
mov
lret
inc
gs
and
iret
pusha
dec
aas
jecxz
adc
rcl
sub
arpl
shl
aam
or
rcrl
mov
enter
rorl
repnz
movb
push
cmpsb
push
or
add
dec
and
or
into
mov
and
data16
sub
cmp
sbb
mov
nop
pop
jne
lods
pop
or
sbb
arpl
xlat
mov
and
fbstp
xchg
mov
dec
test
std
add
out
or
xchg
mov
cmpsb
sbb
imul
jmp
je
push
and
out
mov
mov
repz
xchg
jmp
nop
enter
cmp
pushf
insb
shll
jge
mov
clc
pop
pop
sti
shlb
rolb
and
mov
add
sbb
arpl
push
cltd
xchg
inc
jle
add
nop
test
fsubrs
sbb
cmpsb
or
cmp
ds
inc
jno
push
dec
jl
mov
shll
add
xchg
lock
cmp
inc
cli
xchg
lahf
imul
loopne
hlt
jg
lcall
push
int
cwtl
iret
xchg
loop
push
aaa
pop
addr16
data16
and
mov
clc
leave
mov
scas
mov
orl
mov
or
mov
jg
mov
pop
and
movsb
cmp
add
xchg
or
mull
xchg
sahf
push
sub
movzwl
insl
cmp
leave
mov
jno
js
cmp
adc
mov
jo
dec
dec
call
jge
call
iret
stos
xchg
outsl
mov
pop
xor
pop
imul
ja
push
adc
dec
popa
push
jecxz
inc
in
add
fsubrl
and
lcall
stos
pop
sahf
mov
and
mov
adcb
add
dec
dec
imul
adc
das
rcl
test
in
dec
call
push
mov
lods
cmp
in
out
mov
inc
sbb
adc
mov
mov
jns
add
adc
inc
ljmp
jle
pop
mov
or
pushf
repz
inc
imull
add
dec
dec
popa
insl
int3
xor
lods
popf
bound
jns
ret
lock
leave
dec
mov
shll
sbb
movsl
push
adc
cmp
out
jmp
les
ret
mov
inc
ss
aam
or
sub
sub
or
mov
adcl
cwtl
test
sub
out
xor
push
jle
call
fldl
movsl
gs
cmp
ja
aaa
test
pop
sbb
sahf
ja
pushf
mov
cli
add
scas
fs
fldl
dec
pushf
add
adc
sub
lahf
dec
and
inc
test
jae
popa
cmp
and
ret
fdivr
add
push
xchg
cmp
sbb
fisubrs
xlat
inc
stos
xor
dec
push
insl
push
pusha
add
jns
mov
adc
orl
nop
pop
daa
lret
push
pop
pop
js
pop
push
clc
adc
and
rcrb
mov
pop
pop
xchg
addb
dec
movsl
out
mov
mov
mov
cmp
jo
cmpsb
push
sub
mov
and
jno
nop
sbb
lea
mov
fcompl
mov
fcomip
or
lods
xor
out
xchg
in
sahf
jns
mov
xchg
inc
xchg
jae
jbe
gs
mov
lea
outsl
insl
mov
mov
lret
xchg
push
sbb
fcmovnu
jl
inc
movsl
jnp
dec
rcrb
mov
arpl
push
in
mov
push
and
pop
test
clc
mov
jg
or
and
sub
push
xchg
das
lock
mov
inc
mov
xchg
jmp
jnp
mov
fnstcw
cwtl
inc
fsubr
jb
cmp
adcb
cmp
imul
mov
dec
or
rorb
push
jbe
idivb
jns
cwtl
pop
ret
mov
out
mov
imul
mov
inc
cli
push
cmpsl
xchg
jecxz
in
xor
ss
repz
mov
repnz
ljmp
mov
inc
mov
hlt
dec
inc
mov
rcl
in
arpl
xchg
lret
jl
lods
stc
enter
and
fildl
lods
stc
mov
cmpsb
mov
xlat
fcomp
mov
test
jg
xor
lds
out
push
sbb
fcmovnb
sbb
lock
xor
xlat
cmpsl
psraw
cmp
testb
cmp
out
add
push
adc
ljmp
addl
test
cmp
inc
push
icebp
mov
mov
call
and
je
jne
and
lods
mov
push
in
jmp
jnp
fidivrl
inc
dec
loope
mov
in
push
mov
inc
push
dec
or
test
jg
loope
dec
lods
push
push
es
inc
int
jbe
sub
testl
pop
and
adc
cmp
outsb
pusha
pop
and
cmc
icebp
dec
cmpl
data16
push
jne
test
std
inc
xchg
sbb
fnstcw
fdivl
ret
inc
rcll
pop
push
icebp
xor
and
out
int3
push
cmp
mov
inc
and
test
in
xor
xor
icebp
xchg
inc
out
dec
mov
dec
push
repnz
push
insb
adc
das
gs
xchg
std
lds
iret
push
jecxz
sti
add
lea
movsb
bound
cmp
rorb
mov
dec
mov
dec
jg
stos
sarb
pop
mov
mov
xor
icebp
mov
jno
pop
xchg
mov
scas
in
aaa
add
std
mov
pop
in
decb
lods
inc
popa
mov
xchg
cld
and
and
cld
push
leave
and
mov
test
dec
imul
pop
sysexit
jo
dec
nop
dec
enter
stos
push
pop
push
movsb
scas
push
cld
push
in
cmpb
mov
icebp
cmp
push
out
jno
xor
pop
out
add
inc
pop
xchg
in
sbb
lahf
jnp
and
ss
push
std
dec
repnz
stos
xchg
subb
sub
clc
inc
mov
xchg
out
pop
jmp
cmp
add
cmp
mov
imul
fmull
fsubs
inc
es
hlt
mov
push
repz
mov
jno
mov
mov
pop
popf
jg
fistpl
clc
outsb
push
aad
mov
js
add
mov
mov
shrl
jmp
dec
adc
xchg
ss
mov
test
roll
inc
jecxz
pop
mov
pop
jns
xor
and
mov
insb
cwtl
popa
mov
outsb
mov
ret
sub
jne
iret
jmp
stc
adc
add
inc
mov
cmp
addr16
and
imul
xor
jle
push
pop
add
push
xchg
inc
jmp
or
lret
mov
orb
lret
sub
pop
shl
push
mov
pop
pop
fistpl
xlat
add
pop
repz
xchg
test
xchg
mov
mov
shlb
dec
mov
subl
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
mov
jnp
hlt
pushf
jnp
movsb
xchg
mov
scas
or
in
into
fs
aam
push
and
fisttpll
mov
sub
cmp
stos
add
or
and
pop
xor
imul
cs
les
ficomps
adc
sub
push
push
gs
in
fdivrl
stc
cmc
mov
lock
dec
in
adc
cmc
fs
loopne
ret
insl
jne
sbb
sub
and
mov
cmc
sarb
and
lret
lea
sbb
mov
add
jne
insb
sub
xchg
rcrb
or
in
fbld
in
test
pop
int
mov
cmp
and
cwtl
inc
lea
aad
push
inc
cmp
dec
dec
out
xor
jp
out
jl
pushf
dec
sub
xchg
out
or
mov
cmp
adc
movsb
mov
cmpsb
iret
mov
scas
xchg
es
adc
lahf
push
into
cmc
into
int
ja
sub
dec
repnz
add
sbb
dec
xchg
mov
and
cmp
loop
cmc
pop
jbe
mov
pmullw
mov
cli
iret
call
add
test
in
push
mov
fcomps
cmpsb
sti
sbb
sub
aas
cmpsb
fdivl
andb
rcll
or
add
mov
arpl
test
mov
loope
loopne
fdiv
inc
in
xchg
fcoml
cmp
xchg
sbb
jp
lods
test
ljmp
iret
pop
sbb
fildll
mov
addr16
dec
int
pop
adc
stc
jg
iret
push
hlt
mov
test
and
push
frstor
sub
mov
add
sbb
mov
aam
ss
icebp
xchg
loopne
popa
leave
ss
xlat
push
jae
inc
mov
shll
mov
adc
imul
xchg
xchg
cmp
cmc
xchg
xchg
sti
dec
in
enter
adc
aam
pop
add
dec
stos
loopne
vunpckhps
call
push
inc
mov
cmpsl
mov
jns
in
xor
js
cmpsb
jle
addr16
insb
cld
stos
outsl
and
shlb
jmp
filds
jno
stos
inc
movsl
idivb
aad
sub
jbe
sbb
lock
clc
rorl
add
mov
pop
lret
popf
imull
mov
adc
inc
rolb
adcb
sub
jecxz
scas
pop
sbbl
fnstenv
or
mov
jmp
scas
je
pop
push
cmc
into
bswap
adc
adc
leave
inc
or
xchg
adc
call
or
mov
lcall
or
mov
jg
mov
mov
mov
repz
orl
fbstp
dec
dec
push
inc
stc
out
cmc
jmp
into
lcall
pop
stos
fs
testl
push
jg
mov
lret
mov
cmp
mov
pop
mov
adc
std
rcr
dec
pop
movsl
xor
sti
xchg
mov
or
es
and
insl
lock
clc
test
aas
rcrb
shl
add
sub
ja
mov
iret
mov
jne
ficoml
pushf
fcmovnu
pop
stos
and
xor
rol
adc
call
nop
andl
out
sub
ret
add
pop
cmp
shrb
push
fiadds
mov
xchg
jp
mov
popa
rcrl
inc
mov
mov
add
pop
xor
add
loop
movsl
push
lock
inc
lods
xchg
mov
pop
aaa
cmp
loope
out
mov
xor
ss
xor
xchg
push
pop
add
inc
jle
pop
adc
dec
test
adc
cwtl
pop
xchg
and
daa
ret
jecxz
sub
mov
inc
jp
pop
adc
or
mov
xchg
mov
leave
js
jae
gs
and
cltd
mov
outsb
arpl
scas
fs
sub
adc
xchg
inc
dec
movsl
nop
arpl
inc
into
adc
fistpll
repz
xchg
lret
pop
pop
fwait
mull
pop
wrmsr
lret
adc
adc
imul
add
imul
mov
cmp
adc
dec
cmpsl
xchg
scas
andb
iret
pop
mov
mov
inc
loop
mov
xchg
mov
dec
or
pop
sarb
dec
pop
arpl
and
dec
dec
out
sahf
rcrl
inc
mov
push
inc
js
jae
xchg
test
sub
pop
test
push
inc
sub
dec
sub
add
fdivp
aas
shrl
aam
jle
cwtl
xchg
dec
shll
cmp
loop
or
and
dec
ljmp
gs
and
xor
push
loop
f2xm1
aad
outsb
mov
sbb
fcomp
ffree
inc
push
push
das
jle
loopne
sti
lds
ss
test
mov
rcrb
jns
je
into
mov
iret
jecxz
lods
sub
pop
test
and
jne
mov
ret
pushf
loop
cmp
push
sarb
cmpsb
add
int3
jmp
popf
jo
adc
pop
faddl
cmp
add
notb
cmpsb
fadd
rcrl
jb
je
fsubrl
mov
mov
test
out
call
and
repnz
add
push
out
jo
push
or
int
mov
pop
mov
int3
stos
insb
sub
mov
aas
xchg
sbb
cli
or
mov
sbb
mov
loope
cwtl
in
mov
xor
jg
cmp
xchg
mull
ds
inc
xor
into
shll
sbb
sar
leave
xor
and
pop
mov
inc
outsb
jbe
sbb
fdivr
outsb
or
fimull
icebp
or
dec
fldpi
and
adc
jb
loopne
mov
jg
arpl
mov
mov
popa
adc
add
push
ret
jo
jg
in
jle
or
cmp
mov
cmc
sub
mov
add
jg
lcall
add
les
out
jecxz
pop
cmp
and
inc
cwtl
mov
loop
jl
pushf
pop
rcrb
mov
movsl
icebp
inc
and
add
mov
mov
js
mov
mov
add
pop
lds
add
bound
lret
and
dec
ss
test
dec
in
nop
or
and
adc
jae
jb
out
push
inc
mov
add
fnsave
ja
lods
in
pop
sub
test
out
je
add
and
dec
xlat
push
arpl
fisubrs
pop
repz
stc
cmp
ss
enter
cmp
stos
cmp
and
je
sub
rcl
fildl
data16
mov
dec
dec
daa
fs
inc
lret
add
adcl
mov
fsubrs
mov
push
sti
loopne
add
shlb
mov
inc
or
add
adc
mov
test
add
gs
lcall
xchg
ljmp
rol
shlb
enter
subb
mov
movsb
and
lods
push
mov
ret
and
aas
adc
xor
mov
roll
std
aam
popf
pop
loop
jnp
push
sbb
aad
cmp
xchg
aas
pop
test
cmp
dec
clc
mov
aas
hlt
scas
xchg
push
and
cwtl
mov
gs
cltd
mov
pop
shll
cmp
jbe
lahf
mov
popa
and
fwait
jbe
sbb
popf
mov
fistpl
test
jbe
cmp
rcrl
ret
xlat
mov
xor
lock
mov
ror
mov
dec
icebp
dec
xor
call
inc
test
jnp
dec
dec
aaa
xor
sti
cltd
shrl
test
and
mov
loop
jge
lcall
cmp
mov
jecxz
push
inc
ljmp
mov
out
sbb
scas
jle
stc
outsl
ja
inc
push
hlt
jl
cmc
scas
bound
clc
mov
iret
out
loop
pop
clc
fiadds
sbb
lahf
mov
pop
push
mov
leave
adc
dec
test
sahf
movsl
jecxz
inc
mov
sahf
push
movsb
fsubl
push
inc
bound
or
mov
xor
fisubl
sbb
fmull
mov
mov
mov
inc
pushf
movsb
lock
icebp
or
push
aam
xchg
rol
push
mov
movl
insb
lret
xor
and
enter
movsl
and
les
push
sti
pushf
pop
mov
sahf
push
jp
add
adc
mov
insl
sti
jmp
and
mov
adc
jo
adc
mov
notb
mov
adcb
dec
loope
out
repz
pop
push
lahf
cmc
mov
addr16
pop
outsb
sub
icebp
dec
insb
mov
adc
das
inc
sub
xchg
push
mov
lods
dec
ret
add
sub
xchg
movsl
dec
outsb
dec
shrb
gs
xchg
nop
in
mov
fsubr
jno
push
jle
mov
cmp
or
out
pop
sbb
mov
shl
dec
mov
stc
test
out
sti
cld
imul
icebp
ljmp
cmp
movsb
sbb
mov
dec
or
or
pop
cmp
clc
sub
mov
pop
bound
pop
sbb
rcrb
stos
fnsave
jbe
inc
add
mov
mov
out
jmp
mov
out
mov
clc
push
out
loope
xlat
movsl
clc
popa
loop
lods
inc
dec
leave
lods
popa
sbb
mov
and
das
outsl
aad
in
mov
dec
das
mov
mov
mov
mov
negb
mov
js
scas
mov
xchg
scas
sahf
lods
fldl
inc
jae
mov
pop
and
inc
adc
pop
orb
imul
xchg
out
in
sub
jae
jecxz
jno
clc
push
sub
test
insl
fs
lret
clc
mov
sbb
enter
or
mov
popf
test
loop
dec
mov
push
push
adc
cmp
lret
cld
pop
mov
repnz
push
call
cmc
jge
fwait
stos
inc
orl
fstl
sub
mov
ret
adc
pop
cmp
mov
mov
addl
cs
xor
xor
stc
outsb
push
or
xor
outsb
jge
push
cmp
cli
jns
movsl
cs
sub
sbb
stc
xchg
add
push
lds
jl
mov
pop
js
xchg
jle
xor
inc
and
cmpsl
lea
jle
pop
inc
mov
in
sub
ss
jge
pusha
and
shl
test
xchg
loopne
lret
sub
and
lea
pop
sub
mov
inc
mov
sbb
cmpsb
lea
imul
sub
jg
fistpl
xchg
xor
lods
jge
xor
mov
orb
dec
dec
add
dec
xlat
inc
aam
pusha
roll
mov
lds
mov
pop
or
aas
or
add
lret
dec
rclb
push
mov
repnz
rolb
aad
jle
and
push
mov
mul
push
fnsave
aas
jno
jae
mov
insb
jae
rcl
bound
xchg
cld
fdivrs
lock
cld
push
jle
add
xor
sbb
add
cmp
ds
sub
adc
push
insl
into
inc
js
inc
push
adc
jp
mov
mov
mov
or
push
fistl
xor
jae
arpl
loope
sbb
roll
fst
push
sahf
adc
xor
xchg
xchg
icebp
mov
xchg
rolb
int
or
mov
lahf
enter
ss
jecxz
popa
adcb
xchg
jns
inc
test
hlt
mov
mov
ds
push
out
int3
insb
outsl
push
je
lds
mov
int3
lret
push
es
and
push
fsub
popa
mov
cltd
xor
cmp
iret
jle
lods
dec
mov
sub
push
leave
rorl
notb
shlb
sbb
outsb
adc
mov
dec
ret
and
push
fwait
nop
pop
arpl
or
xlat
jno
dec
and
stos
sbbl
in
stos
cwtl
mov
test
enter
ret
xor
fldcw
xchg
adc
insb
jle
fiaddl
mov
mov
sub
gs
cltd
mov
xchg
dec
rolb
jmp
pop
push
fbld
cmp
dec
scas
jbe
push
or
mov
fwait
jb
pushf
std
mov
imul
jne
fdivl
faddl
add
cmc
xor
mov
cmp
push
pop
enter
outsb
repnz
push
fildl
loope
push
movsl
dec
push
adc
dec
adcl
addr16
cmpsl
mov
outsl
and
pop
fucomip
pushfw
enter
js
ss
pop
dec
movsb
jae
enter
push
in
bnd
sub
fildll
mov
daa
sub
leave
or
outsl
pop
data16
mov
add
imul
add
sub
inc
mov
jle
mov
mov
in
aad
clc
sbb
stc
mov
rcrb
rolb
mov
mov
cmp
add
call
inc
imul
lock
outsl
ljmp
add
push
push
test
inc
fcomps
inc
jne
mov
shll
test
xorb
sarl
and
imul
push
fbstp
ficoms
add
jno
pusha
mov
mov
jns
jae
mov
in
lret
or
fwait
push
shrl
and
outsb
cmc
jbe
jmp
cmp
or
into
dec
loopne
xor
xchg
out
jecxz
add
movsb
inc
popf
int3
jne
add
insb
out
mov
jae
rol
nopl
xor
int
push
sahf
icebp
mov
jl
sub
in
cmpsl
stos
push
sub
xor
add
push
sub
lcall
and
sub
int3
stos
push
scas
loopne
imul
xchg
pop
push
enter
sbb
mov
outsb
fstl
stc
rclb
mov
push
insb
repnz
pop
sbb
add
dec
lret
adc
xor
jno
ficomps
mov
cmp
cmp
jns
mov
and
push
jnp
adc
mov
and
mov
or
xchg
dec
mov
out
fsts
push
popf
sub
inc
cmp
cmpsl
addr16
push
test
or
rclb
imul
sti
sbb
jp
pop
and
into
pop
std
mov
clc
push
dec
push
movsl
sbb
push
imul
out
dec
mov
dec
cmpsb
and
daa
dec
mov
cmp
sbb
jecxz
int
sahf
daa
mov
rcrb
iret
lret
mov
jne
cmc
dec
fistpl
inc
mov
std
adc
shlb
mov
cmp
pop
inc
cld
inc
add
mov
pop
adc
jl
dec
mov
jle
cmp
shll
sub
sbb
dec
clc
fdivl
movsl
add
rolb
loope
cs
mov
mov
adc
je
stos
push
jae
jge
or
sbb
mov
subb
gs
aam
loope
out
imul
push
sub
xor
adc
ljmp
push
pop
popa
js
or
cld
push
js
mov
or
push
pop
lods
loop
cltd
add
cmp
out
loope
mov
lock
mov
mov
inc
sbb
mov
fsubrl
cltd
mov
jp
add
sbb
lcall
aaa
loopne
imul
xor
lea
inc
insb
pop
sub
xor
popw
dec
xor
add
aaa
sti
scas
xchg
outsl
xlat
fisubl
aam
aam
jae
dec
test
adcl
jo
jb
and
inc
repnz
shll
inc
xchg
movsb
push
int3
xchg
das
xchg
mov
jnp
call
ljmp
in
push
mov
fwait
add
adc
inc
adc
stos
mov
idivl
push
mov
int3
fs
movsl
push
mov
jmp
nop
pop
addl
xor
cmpsl
shl
mov
outsl
dec
lods
pop
in
pop
sbb
sbb
ds
jg
out
dec
cld
in
mov
imul
mov
scas
insl
mov
inc
dec
mov
dec
adc
xchg
sub
mov
sub
push
out
fwait
test
xchg
mov
lea
inc
jo
call
inc
fsubrl
push
mov
inc
mov
movsb
imul
movsl
fndisi(8087
sbb
mov
rcr
pop
outsl
push
mov
jmp
repz
imul
sbb
cmpsl
out
hlt
mov
ss
or
jecxz
sarb
push
pop
jo
cli
pop
pop
ss
in
rcrl
sbb
ret
cwtl
mov
pop
cmp
lds
add
mov
pop
mov
arpl
lret
shrl
adc
sbbb
inc
sub
push
inc
adc
jg
scas
idivb
cmpsl
push
aad
mov
pop
rcrb
cmpsl
ret
movsb
in
je
shll
push
inc
scas
clc
sbb
mov
in
dec
push
aaa
insl
scas
or
pop
pop
inc
jp
loopne
cmp
mov
or
mov
adc
or
addr16
enter
xchg
xchg
push
xchg
loopne
out
jl
and
mov
stos
test
rcr
push
sbb
leave
adc
bound
ljmp
mov
xor
jmp
or
inc
in
cld
js,pn
mov
fisubrs
test
mov
repnz
push
mov
icebp
mov
push
jbe
test
dec
fstpl
add
les
repz
push
or
daa
imul
xor
xchg
dec
aas
sbb
lret
cmp
inc
push
sub
push
fcompl
add
mov
dec
sub
push
leave
jge
repz
mov
push
popa
or
rcr
xor
cmp
pushf
push
cmp
mov
inc
jns
mov
stc
push
push
add
xor
push
or
dec
jecxz
xor
mov
insl
jbe
add
repnz
data16
cmpsl
imul
shll
and
imul
stos
fdivl
cmpsl
outsb
xchg
bound
pop
lods
mov
add
fcoml
in
mov
repz
pop
je
aam
push
mov
jae
ret
mov
mov
cmp
cmc
mov
pop
addr16
add
or
pop
xchg
movsl
in
dec
xorl
xor
ds
iret
imul
shl
into
pop
bound
and
xor
inc
mov
stc
shrl
sarb
sbb
mov
es
push
xchg
insb
xor
add
adc
in
mov
sar
sti
jle
add
push
hlt
daa
sahf
mov
lcall
std
push
icebp
mov
sahf
inc
adc
and
filds
fistl
cmp
aas
int3
or
jae
cmpsb
stc
fwait
cwtl
js
or
mov
push
pop
outsb
mov
push
imul
int3
je
mov
rorl
and
mov
mov
pop
sbb
dec
loope
loop
jno
and
cli
frstor
dec
loope
jno
ret
push
loopne
ds
dec
adc
mov
and
push
cltd
pusha
aas
cmp
push
jne
rcll
imul
mov
loopne
test
push
lea
push
and
adc
in
pop
lea
in
stc
dec
sti
fimull
imul
sbb
pushf
out
lods
cmpsw
int
jb
jp
mov
sbb
xchg
mov
popf
and
cmpsb
cltd
sub
popf
testb
or
and
aad
les
or
and
outsb
hlt
std
push
jp
call
pop
pusha
pop
jae
mov
test
xchg
mov
sub
cmpsb
push
shrb
add
inc
and
sbb
dec
daa
out
icebp
pop
aaa
imul
pop
pushf
repnz
cmp
cmp
adc
cmp
sbb
xor
lods
xor
lods
add
movl
sbb
pop
add
and
mov
xor
and
dec
sub
cmc
loopne
jl
mov
movsl
mov
aaa
push
push
ss
inc
adc
adc
jge
mov
in
or
jae
arpl
daa
lsl
xlat
std
sub
fwait
loope
xor
inc
cmpsl
push
popa
out
out
push
mov
add
jecxz
mov
enter
loope
aaa
push
hlt
hlt
insb
bound
addr16
andl
sub
ficomps
jno
mov
push
pop
pop
pop
aad
stos
movsb
xchg
pop
loopne
in
sbb
outsl
hlt
cmpsl
es
scas
rep
sub
in
idivb
sbbb
ss
enter
aas
idivl
sbb
mov
lret
add
mov
pop
enter
and
jmp
insl
dec
mov
sbb
lret
jnp
stos
push
popf
mov
xchg
sub
pop
in
rorb
push
push
js
aam
dec
sub
popf
push
sbb
dec
cmp
jg
daa
js
xchg
jns
std
mov
stos
xchg
mov
insb
mov
pop
xchg
dec
sbb
pop
fbld
xor
stc
mov
add
xchg
imulb
push
lea
clc
dec
mov
lret
movsb
pop
adcb
sbb
test
popa
leave
jb
pop
adc
imul
jmp
icebp
dec
lea
pop
sub
fsubr
out
in
loop
fisubl
push
adc
push
adc
jl
jmp
dec
pop
pop
inc
add
lahf
mov
sbb
out
outsl
sti
push
fs
inc
sbb
dec
cld
jge
cmp
enter
xchg
or
rorb
loopne
imul
into
pop
sbb
arpl
shll
jne
or
mov
pusha
cmp
xchg
call
cs
xchg
aad
cmp
cmp
cltd
and
and
mov
push
lret
call
call
push
xchg
push
std
rclb
aad
dec
lea
mov
std
adc
ljmp
popf
inc
testb
sbbb
mov
xchg
bound
mov
pop
outsl
into
jmp
mov
sbb
fwait
dec
cmc
inc
xor
xchg
mov
gs
addr16
es
or
push
leave
sub
fs
dec
xchg
jbe
mov
je
movsb
jne
lods
push
sbb
dec
in
mov
push
jle
mov
fsts
or
mov
es
xor
dec
ret
xlat
inc
dec
fs
stc
sbb
in
jp
cmpsl
xchg
dec
sub
jbe
repz
xlat
scas
pusha
add
or
in
sub
push
repnz
out
pushf
lea
iret
or
loope
mov
hlt
cmp
fisubl
mov
mov
inc
fwait
orl
sbb
pop
shll
cli
sub
in
sbb
repnz
cwtl
mov
in
dec
pop
cmpsl
ljmp
cmp
ja
and
cwtl
clc
fwait
cmp
xlat
xor
xchg
pop
aad
jle
pop
push
xchg
sbb
call
lock
push
xchg
mov
push
pop
bound
xchg
mov
jno
test
into
aas
sub
insl
cmp
dec
in
inc
xor
pop
stos
lods
mov
and
sub
sarl
and
mov
and
xor
repz
inc
repz
sub
or
jle
jno
leave
pop
xchg
aas
lods
add
clc
sub
fsubrl
dec
popf
jp
push
test
jb
cwtl
pusha
int
lock
lret
movsb
push
and
out
adc
mov
fmulp
ds
pop
enter
fisttps
outsb
insl
push
jmp
pop
jnp
sbb
mov
adc
rcr
icebp
jb
push
lock
movsl
jns
or
outsb
mov
shlb
inc
push
ret
data16
call
pop
data16
test
fwait
jno
sbb
fwait
andb
sbb
incb
fldt
lods
sbb
cmpsb
std
cs
test
pop
lods
pop
in
aad
clc
dec
inc
mov
push
popf
mov
test
adc
out
dec
pushf
jo
push
jno
jg
add
and
jg
je
test
sbb
xchg
arpl
adc
and
push
jp
fisubs
lcall
add
mov
jl
pop
mov
xchg
aaa
inc
movsb
mov
stos
test
pushf
push
sbb
xlat
push
pusha
aam
mov
jo
dec
fcomps
push
sub
test
punpcklwd
xchg
sahf
out
sahf
popf
ja
push
pop
sub
cmp
inc
mov
in
cmp
aad
aas
out
clc
into
es
fstpt
popf
loope
or
jp
popf
push
ja
adc
or
daa
sbb
xrelease
ror
clc
push
cld
push
ss
popf
add
rcrl
dec
pop
adc
jnp
or
movsl
fs
sbb
jo
push
jl
xchg
adc
cmp
mov
sarb
cmp
jnp
in
add
add
push
mov
pop
push
fdivrl
out
fdivl
popa
rol
mov
or
add
or
pushf
jb
mov
enter
mov
mov
pop
adc
jbe
test
jnp
loopne
mov
sbb
lods
lahf
mov
xor
out
bound
negl
hlt
push
dec
nop
adc
out
or
mov
or
dec
mov
cmpb
repz
mov
sti
xchg
aas
in
add
ljmp
add
jl
and
mov
fidivl
xlat
mov
mov
sub
lds
iret
inc
shll
lods
push
loope
jo
aas
stos
push
mov
pop
add
icebp
xor
mov
imul
popf
xchg
test
jmp
ja
mov
xchg
dec
out
add
and
push
loopne
inc
and
push
movsb
xlat
mov
xor
pop
jb
sub
test
cmp
cmc
dec
ss
or
jle
push
pushf
xor
imul
pop
ljmp
pop
cltd
into
fmul
adc
into
mov
cmpsb
in
and
mov
push
cmpl
jp
inc
push
dec
ss
jecxz
xor
xor
xor
cmp
cmpsb
adc
in
dec
fisubs
sub
cmp
lret
addr16
pushf
ficoms
mov
int
daa
mov
add
add
mov
pop
inc
fwait
mov
fcoml
adc
add
das
shrb
fildll
leave
push
jns
insl
bound
xor
and
pop
call
adc
jns
push
xor
mov
pop
sbb
lcall
imul
cld
dec
push
sbb
pusha
imul
sub
mov
push
ja
mov
xor
aad
jl
enter
cmp
lods
or
icebp
mov
cwtl
cmp
push
sbb
shlb
push
add
stc
loop
and
sub
or
add
shr
xor
sbb
xor
sbb
adc
push
and
insb
sub
adc
mov
mov
inc
adc
imul
es
or
scas
inc
pop
loop
popf
pop
mov
adc
pusha
jno
xlat
sub
inc
sub
sbb
dec
jg
xlat
mov
out
sub
inc
mov
ret
lds
dec
popf
dec
push
les
jp
dec
xchg
sub
push
adc
cmpsb
ds
addr16
jns
cs
lahf
sti
xchg
rcr
inc
shll
iret
inc
jo
sub
pop
rolb
cmp
cld
in
movsb
xchg
add
jl
hlt
lret
popf
cmp
adc
loopne
jbe
addr16
fucomip
rol
iret
add
das
push
lret
pushf
pop
push
mov
shrb
sbb
fisubrs
xor
push
jecxz
and
outsl
add
cmp
ja
ss
test
repz
adc
sbb
xlat
adc
pop
popa
sti
into
je
xchg
push
outsl
movsl
test
pop
cmpsl
out
out
pop
iret
mov
movsb
push
pop
scas
push
das
cltd
add
stos
pop
and
mov
sub
xchg
sbb
adc
jae
stos
call
cmp
imul
popf
lret
adc
xchg
inc
data16
ret
xor
sub
xchg
cmp
mov
xchg
jp
pop
pop
sbb
mov
in
mov
icebp
popf
mov
test
jp
jnp
and
fisubl
xchg
scas
cmp
jo
inc
dec
mov
cmp
pop
aam
icebp
mov
addr16
fwait
outsl
xchg
mov
xor
push
jae
sahf
or
inc
adc
pop
xchg
push
jmp
dec
mov
ret
mov
lds
leave
xchg
adc
lcall
std
test
add
iret
out
add
lock
fidivs
push
adc
mov
out
inc
aas
insb
insl
add
cmpl
inc
or
movsl
hlt
imul
stos
pop
xor
aaa
je
lods
pop
and
lods
fcmovb
mov
pop
ret
lock
xor
sub
clc
xor
je
mov
jle
in
jle
pusha
add
sbb
stc
xor
pop
xchg
loop
jp
xorb
pusha
mov
out
mov
pop
mov
xor
sahf
mov
sahf
mov
cmp
jo
mov
gs
pop
leave
imul
push
aad
jae
push
cmp
movsb
xchg
jl
sub
addr16
jp
in
pop
gs
imul
stos
dec
sub
adc
cmpb
cmpsl
jno
scas
jmp
frstor
sbb
cltd
in
mov
aad
push
cmp
nop
sub
push
imul
sub
imul
push
mov
sbbl
cs
ds
push
es
add
dec
mov
sbb
push
cmp
fnsave
mov
or
sub
rorb
iret
push
jne
dec
pusha
aam
and
mov
add
rol
stos
pop
std
cmp
out
jmp
cmp
mov
mov
sbb
pop
call
mov
out
jecxz
push
cltd
in
mov
inc
dec
inc
push
adc
les
jbe
roll
or
xchg
sub
cwtl
clc
mov
addr16
and
jmp
adc
lret
fmull
test
jmp
xor
xchg
cltd
notl
bound
mov
pop
mov
mov
rclb
shll
and
sub
add
xchg
xor
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
cli
sub
addr16
jnp
hlt
pushf
jnp
inc
out
cmpl
sub
mov
outsl
or
push
add
push
rorl
and
push
fbld
cmp
enter
mov
lds
mov
sub
ret
cvtps2pi
inc
mov
push
jmp
in
iret
test
shll
dec
push
dec
xchg
adc
push
lea
into
roll
fs
insl
insl
dec
sbb
inc
add
or
in
mov
scas
jae
fdivrs
mov
pop
inc
call
insb
ja
mov
les
dec
mov
std
push
sbb
or
jb
in
push
mov
lea
cs
xchg
mov
mov
push
inc
and
js
adc
and
out
dec
push
dec
adcl
popf
arpl
mov
into
pop
leave
mov
add
or
out
add
and
movsb
and
out
jns
mov
rolb
xchg
into
int
push
cmpps
sbb
stos
fldcw
pop
dec
xchg
inc
es
mov
lret
mov
out
bound
lock
and
clc
out
mov
test
cmpl
push
in
mov
jl
daa
mov
lahf
and
insl
push
cmp
or
in
sub
imul
sarl
mov
leave
cmp
xchg
rclb
cmp
or
xlat
cmp
xor
lock
es
jge
arpl
pop
pop
push
cmp
es
dec
add
jmp
mov
or
push
adc
inc
lea
mov
xchg
jo
sti
stos
shll
mov
iret
jg
arpl
fistl
and
and
sarl
inc
fmul
lods
adc
call
in
and
inc
xchg
dec
mov
rorb
cld
imul
mov
jle
mov
inc
lcall
pop
in
sbbl
mov
xchg
pop
or
xchg
push
lock
pop
sbb
xchg
sbb
scas
xchg
jge
and
rclb
jno
rclb
add
in
ret
mov
fiadds
call
sbb
and
in
lods
dec
xchg
mov
in
cmc
leave
mov
into
add
in
imul
repnz
dec
hlt
mov
or
sti
sub
mul
mov
mov
mov
fs
aad
jae
xchg
leave
jmp
test
in
fimuls
jg
scas
xor
in
push
mov
push
mov
cmp
mov
cltd
shlb
popf
stos
mov
jge
pop
addr16
test
test
sti
sti
xchg
inc
nop
mov
and
out
in
xor
jns
lods
mov
push
cmc
push
adc
loope
loopne
adc
push
mov
fmuls
sub
adc
loop
sbb
loope
inc
popa
and
or
mov
les
jno
ja
xchg
xchg
adc
pop
pop
dec
ja
call
loop
inc
lock
neg
push
lret
loope
cmp
jmp
and
jge
aad
lahf
std
mov
mov
idivl
imul
imul
stc
sbb
push
push
fs
dec
add
mov
xor
pop
fbld
xor
push
ret
mov
jno
fisttpl
pop
sbb
icebp
mov
fsts
dec
jo
cmp
into
lods
stc
scas
loop
dec
insl
sbb
jns
push
loope
sbb
mov
hlt
xor
repnz
xor
xadd
sub
mov
add
pop
xchg
stc
mov
add
clc
jnp
aaa
push
call
jo
arpl
push
sub
out
cltd
or
iret
jg
test
and
and
jg
ljmp
loope
scas
mov
insl
mov
sbb
jmp
mov
xchg
xchg
popa
dec
lds
push
lds
sbb
inc
repz
jb
xlat
je
xlat
jno
mov
lock
jbe
xor
mov
mov
in
stc
lret
data16
cmp
fndisi(8087
inc
dec
ret
rcl
sbb
lock
or
add
jecxz
in
mov
imul
mov
div
mov
lahf
xchg
sbb
add
out
in
cmp
stos
mov
pop
fwait
jge
inc
fidivrs
addr16
dec
sub
adc
cld
jbe
aaa
int
jp
mov
incl
test
xchg
mov
movsb
cmp
test
inc
jo
push
bound
push
js
nop
xor
push
add
hlt
mov
and
insb
xor
clc
lds
mov
or
mov
stc
imul
dec
mov
lods
pusha
movsb
test
jnp
xchg
or
xor
stc
dec
js
jmp
mov
js
sub
mov
imul
mov
add
xchg
push
movsl
sub
and
stos
add
mul
sub
aas
insl
xchg
mov
cwtl
or
mov
inc
mov
sahf
dec
jne
push
inc
xchg
lcall
arpl
fsubs
sbb
lahf
aad
and
fnstsw
push
addr16
fisubrs
frstor
mov
dec
test
scas
pop
arpl
js
outsl
inc
in
test
xchg
pushf
rcll
jecxz
xchg
add
mov
int3
dec
adc
pop
rcr
mov
dec
ljmp
jnp
cmpl
push
stc
jb
push
xchg
mov
dec
xchg
mov
icebp
in
cld
pop
sub
or
sahf
add
push
lret
xchg
sbb
mov
mov
or
daa
adc
mov
lret
je
and
or
inc
sbb
push
cmp
jmp
int
shl
ss
mov
and
popf
sub
in
cmp
data16
push
aam
sti
sub
testl
out
xchg
mov
dec
sbbb
je
dec
test
clc
mov
clc
enter
dec
negl
imul
pusha
arpl
cmp
mov
and
sub
daa
push
and
outsb
mov
xor
sub
je
out
data16
xor
mov
int3
mov
ljmp
xchg
and
dec
fnstsw
ficoms
inc
jae
mov
enter
fstpl
js
mov
jo
pop
mov
in
imul
outsb
mov
scas
mov
pop
add
out
aaa
out
popl
sbb
decb
lretw
push
mov
test
fsts
push
and
in
fnstenv
or
adc
insb
push
test
mov
std
ja
pop
pop
call
rcr
dec
insb
aam
mov
sbbb
call
sti
inc
pusha
add
scas
lahf
in
outsl
je
sub
out
aad
pop
daa
aas
dec
sbb
enter
inc
cmp
adc
xor
fnsave
out
and
in
hlt
test
out
scas
lahf
xor
sub
mov
jno
mov
mov
xor
mov
inc
dec
xchg
push
mov
jge
in
dec
negl
mov
aad
jecxz
sbb
movsl
loopne
pop
orb
push
sub
lret
push
sub
jae
int
test
test
and
jmp
icebp
ss
jg
jae
and
jns
and
mov
or
stos
push
add
push
adc
inc
lds
cs
clc
or
pop
leave
mov
ror
mov
out
shlb
mov
lods
int3
testb
shrl
lods
lret
jle
pop
xor
mov
nop
shlb
mov
mov
pop
popf
data16
sub
adc
and
xor
movsb
lods
loope
jp
or
hlt
repz
data16
mov
fildll
mov
dec
xor
aaa
mov
sub
pusha
adc
add
jge
adc
push
test
add
stos
mov
negl
dec
jmp
add
stos
sbb
mov
mov
rcrb
inc
ret
push
cmp
cmp
and
push
dec
lcall
inc
ja
sbb
cwtl
dec
fstps
pop
cltd
lods
inc
dec
orl
add
rcrl
mov
dec
call
jl
lock
fdiv
push
push
xor
and
mov
lea
testl
inc
mov
jo
icebp
cltd
mov
sub
jp
xor
sbb
xchg
sub
xchg
mov
ss
dec
imul
and
loopne
sar
mov
jg
sub
sbb
test
das
pop
push
lods
popf
aas
or
loope
mov
sub
fsts
pop
sbb
push
cltd
bound
add
jns
ja
mov
adc
push
je
cli
sbb
inc
pop
adc
jl
movsl
xor
mov
xchg
ret
outsl
mov
push
out
jbe
outsl
das
lock
in
popf
xchg
mov
or
into
stos
out
xchg
sub
xchg
rcl
test
loope
ffree
fs
ret
inc
jmp
xor
into
aad
outsl
xor
mov
inc
imul
cmp
aas
sub
xchg
or
push
cmc
movsl
jbe
lea
jae
imul
outsb
sbb
outsb
in
cmp
stos
and
sub
out
inc
daa
rcrb
fidivrl
out
cs
push
hlt
xor
xor
sub
imul
cli
push
iret
mov
std
cmp
push
or
pop
ret
jbe
or
in
mov
mov
sbb
mov
sahf
test
insb
cmp
aas
popf
fadd
or
cmp
sbb
and
sbb
inc
lahf
dec
je
jbe
mov
lret
push
pop
fiaddl
jns
pop
test
and
pop
test
or
call
cmp
dec
add
repnz
inc
adc
pop
push
push
arpl
repnz
cmp
stc
rcrb
aad
and
shll
in
call
xchg
pop
int
xor
add
adc
in
js
xchg
jmp
inc
cmpsb
cld
xchg
js
xor
iret
mov
imull
xorb
subb
stc
and
clc
adc
cmp
sbb
push
out
add
loope
cld
jg
or
push
sbb
add
lock
and
pop
and
sbb
out
int3
fcompl
cwtl
push
mov
push
push
xchg
movsl
int3
insb
ja
jp
xor
iret
icebp
cltd
sub
fwait
xor
stos
cmp
out
dec
stos
dec
popl
push
aad
stos
or
adc
cli
mul
rclb
repz
sub
aad
dec
pushf
mov
xchg
push
test
push
call
and
dec
leave
inc
in
hlt
je
js
cmpsl
fs
scas
dec
lret
inc
lds
les
mov
push
inc
push
fcmovnu
jo
outsl
mov
cmp
out
mov
jg
aad
gs
sub
xlat
cli
xchg
push
shlb
ret
sbb
mov
add
xchg
or
push
insl
imul
jne
bound
xchg
push
fmull
lcall
xlat
call
mov
xchg
mov
lds
jge
scas
xchg
adc
push
dec
aad
clc
movsb
push
repz
dec
cmp
mov
std
cltd
mov
imul
scas
pop
add
dec
pop
div
hlt
add
add
lret
xchg
loopne
or
adc
out
jle
outsl
add
loop
pusha
stos
add
dec
and
push
inc
fadd
pop
dec
lret
pushf
cmp
or
mov
dec
sub
lds
cmp
mov
inc
push
out
rcrl
out
into
cmpsb
fisttpl
out
enter
and
xor
xor
and
sti
test
mov
ret
pop
xor
jl
dec
jne
and
fs
outsl
addr16
xchg
cli
leave
inc
fdivrl
sub
fldl
push
or
andb
add
push
cmp
push
mov
push
cmp
xchg
sti
mov
mov
dec
inc
inc
rcll
push
iret
clc
clc
inc
stos
mul
lock
jnp
dec
mov
mov
sahf
or
adc
dec
adc
xchg
inc
jno
xlat
xor
or
adcl
push
pop
or
sub
shl
in
icebp
jmp
add
fcmovbe
into
jl
cmp
and
push
mov
imul
pop
xor
loope
push
sub
sbb
test
add
add
outsl
outsb
xchg
dec
stc
jmp
lods
sbb
insb
fmul
int3
or
cmp
into
ss
je
push
adc
pop
or
sbb
push
negl
dec
ja
lods
push
add
mov
jle
rcl
mov
test
inc
das
fdivs
and
les
cwtl
test
inc
lock
orl
cmp
movsb
xor
popf
or
push
rorb
lea
dec
in
sbb
lcall
mov
and
lret
push
int3
mov
lahf
lret
push
dec
insl
push
mov
fidivrl
popa
mov
xor
sbb
shrd
aaa
mov
dec
aam
sbb
push
inc
hlt
xlat
nop
adc
inc
push
mov
mov
add
sbb
xchg
subl
aaa
pop
or
dec
add
outsb
jl
int3
push
into
in
push
inc
es
aas
adc
push
fucomip
dec
push
mov
adc
mov
das
imul
dec
loopne
hlt
pop
pop
pop
insl
ficoms
xchg
push
add
mov
shlb
ret
add
test
mov
adc
scas
bt
mov
mov
xchg
fsubrs
pop
pop
aas
adc
push
jg
sti
cmp
enter
shl
inc
sbb
or
adcb
or
test
pop
out
in
pop
into
test
movsl
test
push
adc
add
in
int
stos
jp
enter
popa
adc
testl
lret
ret
popl
sub
in
es
bound
movsb
xor
fistpl
jp
int
jmp
pop
cmp
sbb
pushf
jb
aas
loop
jae
jmp
cmp
fwait
cmp
pop
lds
jmp
inc
out
scas
fstl
mov
mov
in
mov
push
jae
inc
cltd
loop
sbb
imul
adc
leave
push
int
cli
push
sbb
fcompl
adc
cs
mov
aam
mov
push
test
popf
pop
and
ja
fidivrs
mov
pop
add
jmp
imul
ret
mov
gs
outsl
dec
adc
inc
mov
jo
sbb
pop
mov
or
cltd
and
adc
push
pop
scas
stc
imul
xchg
subl
xor
ret
out
add
adcl
sti
jb
or
dec
aaa
inc
sbb
mov
or
xchg
or
sbb
mov
mov
sbbl
clc
pop
mov
and
mov
xor
mov
insb
mov
lods
dec
xchg
inc
add
leave
adc
sub
sub
ret
and
sahf
push
in
push
cmpsl
xlat
or
daa
insl
pextrw
or
cmp
mov
pop
in
insb
sub
lods
pop
roll
aad
in
pop
lcall
push
adc
push
stc
rcrl
jecxz
jno
adc
or
mov
and
inc
dec
push
cmpsb
lret
repnz
jle
adc
xor
mov
inc
xlat
xchg
shlb
mov
jge
mov
jo
ja
inc
or
xchg
push
xchg
sub
das
cwtl
fldt
xchg
and
lret
mov
sbb
outsl
negb
dec
and
stc
insl
lcall
pop
jnp
rol
xor
cli
push
xchg
mov
push
mov
push
int
mov
mov
scas
dec
dec
mov
adc
mov
aad
inc
push
out
sarb
add
in
sbb
fdivrl
jo
xchg
gs
jmp
xchg
hlt
inc
ds
leave
jge
enter
call
rcr
push
inc
pop
push
mov
adc
push
xchg
loop
push
xor
add
andb
mov
test
mov
jbe
and
jbe
je
cwtl
push
mov
and
and
mov
jecxz
push
test
fs
push
or
data16
mov
jbe
pop
fsubrl
dec
fst
lahf
push
jmp
test
jmp
xor
inc
or
jge
leave
push
xchg
in
rdpmc
jne
pop
and
sbb
sbb
bound
outsl
je
pop
cltd
fnstenv
pop
in
fbld
outsb
add
lds
loop
jne
sbb
inc
jo
cltd
dec
cmp
lret
adc
sub
int
das
cld
dec
xchg
jecxz
mov
jmp
in
sbb
mov
and
xor
or
push
fstpt
cmpsl
bnd
mov
adc
xchg
pop
mov
into
mov
jp
pop
mov
pop
js
ret
out
std
aaa
movsb
dec
lock
in
frstor
jo
into
je
mov
mov
popf
mov
mov
or
jle
int3
xchg
pop
or
or
xor
and
push
subb
dec
xor
enter
or
les
jge
mov
mov
addr16
aad
inc
insb
ds
mov
mov
jne
dec
ds
pop
sti
ds
int
inc
xchg
lahf
add
cli
imul
adc
int
mov
and
testl
xchg
stos
cs
mov
or
fsts
xchg
adc
xchg
mov
fisttps
aas
scas
push
out
cmp
add
iret
or
inc
incl
leave
pushf
mov
test
xor
mov
mov
adc
sub
sbb
out
pop
sbb
add
loopne
and
or
sbb
aam
scas
and
push
ret
inc
dec
or
out
push
ja
push
pusha
std
movsb
sbb
mov
inc
lock
dec
dec
adc
ljmp
push
jecxz
jp
pop
mov
rcrb
xchg
push
mov
sub
jbe
mov
cmp
test
pop
enter
pop
cmpsb
scas
lret
mov
ficoms
mov
enter
cli
cmp
adc
inc
dec
push
jg
add
push
jne
adc
inc
in
pop
out
cmp
pop
jmp
scas
ret
stos
jmp
jmp
aam
cld
insl
stc
mov
pop
sub
inc
sahf
inc
pop
jg
fldenv
rolb
fnstcw
popa
inc
js
xor
cmpsl
cmp
inc
mov
shll
pop
add
cltd
aad
test
jle
popf
mov
xchg
mov
sbb
sbbb
pop
jp
xchg
rolb
lahf
int3
dec
push
push
jo
andl
sbb
test
inc
push
cltd
mov
test
push
clc
xchg
mov
jo
lahf
xchg
add
ds
xchg
arpl
popf
xor
mov
cmpsl
cmp
xchg
pushf
lea
ret
repz
inc
inc
pop
mov
xor
or
mov
scas
cltd
mov
shll
sub
push
cltd
call
inc
xchg
pop
enter
mov
and
sub
add
jg
jg
and
sarb
xor
loopne
popa
adc
arpl
mov
mov
pusha
dec
loopne
xchg
notb
mov
fnstcw
dec
add
push
pop
jns
lods
lods
sub
call
hlt
xchg
adcb
adc
xlat
shr
pop
inc
sbb
mov
inc
push
clc
inc
jle
add
mov
imul
mov
xchg
loop
dec
insl
rclb
push
sti
in
imul
push
arpl
cmp
jl
cmp
xor
inc
hlt
jge
sbb
ret
cmp
xlat
outsb
rolb
pop
dec
add
xchg
test
cld
daa
mov
popa
fdivp
stos
adc
push
sahf
fists
mov
or
lods
aad
out
mov
inc
xor
or
mov
sub
adc
jecxz
mov
mov
sbb
movsl
enter
in
jmp
sub
sub
sub
jnp
call
sub
inc
adc
arpl
jnp
popf
dec
xchg
jg
cmpsl
repnz
jo
into
cmp
add
xor
cmp
sarb
stos
test
je
dec
call
mov
dec
lret
sbb
pop
scas
jl
mov
jmp
xor
in
imul
sub
jecxz
daa
cmc
mov
cmc
jmp
sub
aas
jne
mov
jmp
and
mov
pop
sbb
hlt
fs
cmp
stc
mov
rcr
jl
pop
adcl
pop
movsb
cltd
arpl
pop
mov
fwait
push
fcmovbe
out
insl
gs
gs
ds
xor
dec
push
out
jl
mov
inc
not
adc
ret
xchg
lds
in
jmp
daa
add
cmp
adc
push
into
adc
sub
call
in
arpl
mov
mov
pop
cmp
mov
jbe
test
and
in
jmp
push
cmp
sub
add
mov
cmpsb
xchg
dec
in
aas
in
addl
push
adc
jne
insl
cld
pop
jnp
enter
pop
hlt
push
repz
dec
xlat
test
mov
jp
daa
pop
jecxz
xor
xor
cs
out
lds
mov
mov
ficompl
lods
jnp
push
inc
in
out
adc
mov
sbb
imul
out
jle
cmp
je
cmpsb
loopne
jl
divb
addb
push
adc
shll
cwtl
sti
mov
mov
inc
jl
xor
jp
pusha
mov
pop
aad
push
fld
cmc
adc
lcall
mov
adc
lods
jl
sub
lcall
icebp
xchg
outsb
inc
ja
cmp
sub
push
and
ljmp
arpl
inc
xchg
sbb
jns
aad
sbb
out
fxam
cld
mov
cmp
test
mov
enter
in
adc
adc
mov
rcrl
sbb
dec
imul
xchg
add
jnp
push
or
imul
negb
ret
test
mov
xchg
aas
fists
cmp
push
lahf
push
and
insb
sub
inc
xor
movsl
mov
out
dec
inc
inc
stos
int
idivl
loopne
jo
push
stc
fidivrl
jmp
pop
dec
leave
cmp
and
shrb
jp
cmp
imul
push
js
in
inc
jns
and
in
sub
pop
aam
cmp
pusha
adc
btr
aam
inc
sub
cmp
lods
jne
add
mov
xor
ja
sub
or
sbb
mov
jb
push
xchg
scas
fwait
jno
adc
add
push
xor
sub
and
inc
and
popf
sti
fsubrs
clc
xor
inc
aaa
mov
clc
movsl
xor
je
dec
pop
movsb
inc
dec
cmp
xchg
cmpsb
fsubrl
movsb
test
mov
jbe
xchg
mov
int
ss
in
adc
mov
cmp
shlb
ja
add
dec
popf
test
smsw
or
je
mov
sub
pop
movsb
lcall
sub
daa
insl
imul
xor
cmp
addr16
cld
lcall
add
addr16
lods
nop
out
lea
inc
add
test
sbb
xchg
sbb
stc
repz
notl
xlat
fdivs
jecxz
adc
xchg
lods
call
andb
insb
inc
loopne
sub
movsb
or
pusha
mov
xchg
je
loope
rcrl
xchg
and
nop
bound
push
or
mov
inc
int
and
add
jmp
clc
xlat
imul
or
in
mov
xorl
sbb
imul
lock
lahf
enter
shll
clc
mov
xchg
sub
out
lods
out
pusha
mov
popa
cmp
and
stos
push
sti
xchg
add
jbe
sub
mov
dec
in
nop
inc
fucomp
mov
rorl
pop
les
pop
adc
mov
mov
aas
movsl
add
arpl
cli
inc
pop
sti
in
nop
into
jo
mov
jmp
jns
mov
ficoms
push
loope
stos
loop
xchg
addl
jnp
aam
add
loope
inc
lret
notl
push
sti
outsb
and
pop
xorl
shll
dec
popf
mov
mov
mov
cmp
and
in
cmp
pop
inc
hlt
push
sub
jmp
cmp
stos
cltd
and
push
ficoms
jae
add
sub
movsb
inc
pop
or
lods
push
sub
int
lods
push
dec
mov
loop
lret
pop
arpl
jns
aad
std
mov
pop
xor
scas
mov
mov
mov
sbb
adc
fbld
ja
imul
repnz
sahf
inc
movsb
inc
lahf
mov
dec
test
or
and
adc
add
loope
add
mov
mov
jbe
xor
jnp
insb
sarl
xorl
inc
xchg
mov
sbb
push
cmp
cwtl
adc
fistps
aaa
and
cmp
test
stos
sub
or
in
push
inc
jecxz
cmp
out
rorl
repz
fwait
out
loop
fs
mov
mul
push
clc
pop
jecxz
fldt
shufps
inc
mov
xchg
xor
in
in
add
push
sbb
xchg
xchg
mov
add
mov
int
xor
idivb
lret
je
loopne
mov
out
lahf
mov
hlt
and
mov
movsl
scas
repnz
invd
fwait
stos
jmp
xor
and
dec
ss
iret
xor
mov
mov
sbb
pop
xor
adc
push
jno
rorl
push
je
les
ror
push
lret
adc
lcall
adc
push
add
xor
sub
fisubrs
orb
cmc
cmpsb
jno
ss
cmp
ljmp
rolb
aam
data16
jmp
push
sbb
inc
mov
lcall
xor
pop
insl
sub
jle
lods
shrl
add
sbb
mov
cmpsb
pop
mov
test
sti
je
into
aam
in
xchg
into
arpl
popf
sbb
pushf
aad
ja
jecxz
idivl
std
ffreep
jns
mov
in
and
jne
adc
fbstp
loopne
mov
mov
inc
push
ret
lcall
ficoml
sbb
fdivs
aaa
pop
enter
push
mov
ss
loope
adc
outsl
jl
jb
or
movsb
cmp
lahf
fs
push
xchg
aam
pop
outsl
jb
push
stc
xchg
push
mov
mov
add
or
test
enter
mov
push
fmulp
pop
out
dec
pop
les
sub
mov
xchg
fldt
jo
sbb
lahf
lea
je
rclb
mov
xor
bound
adc
ss
fs
lock
fdivrp
testb
aam
insl
decb
cmpsl
adc
lahf
ds
jbe
repz
sahf
add
sub
add
mov
inc
cmp
adc
fstps
xchg
repz
lahf
orl
out
outsb
add
push
aam
movsb
push
sub
cmc
mov
or
aad
movsl
add
or
xlat
or
jl
adc
test
test
rcl
mov
in
adc
mov
xchg
jg
icebp
lcall
scas
mov
or
lods
fnstenv
push
rcl
sub
mov
int
aaa
cwtl
or
mov
idiv
jns
loop
or
pusha
mov
sub
xchg
aam
insl
mul
and
ja
popa
and
ljmp
mov
mov
sub
fdivrs
repz
outsl
int3
push
test
sbbb
lcall
sbb
xor
and
xorl
insl
test
pop
fs
push
push
mov
jns
cmp
push
int
mov
mov
sub
xor
inc
mov
out
sbb
push
dec
inc
clc
fstp
xchg
pop
sbb
jmp
fistpll
push
mov
les
jno
fcompl
fsubs
pushf
dec
xor
loope
mov
sti
adc
fs
and
mov
push
js
or
mov
or
movsl
sar
jb
lea
mov
rcll
cmp
frstor
jae
lcall
js
inc
imul
ds
call
xor
mov
nop
sub
addb
lods
push
push
push
stos
popf
adc
popf
pop
pop
mov
push
jmp
lahf
cmp
mov
outsl
push
subb
jnp
inc
pop
in
xor
outsb
mov
or
jp
inc
adc
fwait
test
xor
add
lret
out
pop
lds
xor
lcall
not
cmp
dec
dec
mov
out
and
in
rcll
push
ret
adc
aad
stc
sub
add
mov
scas
jl
jmp
ret
outsl
push
ds
fisubl
sub
xchg
add
mov
repz
divl
inc
inc
sarb
push
mov
jo
dec
add
dec
add
xor
mov
leave
aam
jmp
mov
movb
mov
push
and
cwtl
shlb
sub
pop
out
adc
lock
ret
stos
mov
fcomip
lea
loop
mov
pop
pop
jl
inc
pop
pop
ret
sbb
mov
add
in
lcall
mov
lods
or
ljmp
lea
jb
mov
mov
inc
mov
sub
mov
stos
cmpl
push
imul
stos
jecxz
adc
aaa
dec
out
push
cmp
pop
xor
sbb
cwtl
dec
hlt
pop
incb
or
cltd
fdivrl
out
inc
jecxz
or
addr16
sub
pop
add
mov
mov
ja
push
mov
daa
mov
jne
mov
mov
loop
lods
fwait
fs
or
jns
ret
in
mov
jnp
mov
sub
out
test
sub
mov
pop
lods
sahf
scas
lock
push
fdivr
jge
cmp
ret
or
aam
mov
iret
add
loope
cltd
jl
out
mov
gs
cwtl
aas
test
pop
andb
inc
jg
cmp
sub
sub
cld
ret
or
mov
adc
add
push
popf
hlt
test
enter
insb
push
xchg
cmc
xor
out
leave
push
jle
in
call
mov
mov
iret
arpl
sbb
call
je
dec
js
lret
ret
out
pop
and
cmp
dec
movsb
push
ja
pop
mov
inc
ret
sub
xor
pusha
add
mov
in
adcl
test
mov
scas
xchg
pop
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
sarb
adc
cmc
xchg
jno
dec
ljmp
cmp
and
cmp
push
sub
sub
push
insl
fsts
sbb
mov
mov
mov
cmpsl
xchg
test
jo
mov
ljmp
aad
ja
std
sbb
mov
lret
lock
cmp
outsl
xor
cli
shl
and
add
stc
popf
push
push
sbb
push
ss
sub
test
mov
push
cmp
imul
sbb
in
xor
push
adc
hlt
fadd
xchg
leave
or
cmpsb
in
in
stos
xor
test
test
int
mov
sub
in
fldenv
leave
lock
ljmp
cmp
ret
dec
test
sbb
sti
sub
dec
lahf
lret
loope
dec
movsb
adc
xchg
cmpsl
xchg
jge
jmp
lahf
cmp
mov
test
jnp
leave
sub
pop
imul
lret
sbb
mov
xchg
icebp
jbe
cwtl
fstpt
sbb
push
cmc
js
or
pop
stos
lret
outsb
pop
out
pop
sub
dec
cmpb
xchg
or
in
dec
add
inc
jbe
and
out
ja
test
popf
shll
jg
out
xchg
int
insb
es
insb
test
subb
pop
jge
jecxz
xlat
mov
imul
repnz
lahf
sbb
ret
out
sbb
and
cmp
stos
rcrl
sbb
push
xchg
push
xor
jb
mov
mov
sbb
les
loopne
push
push
push
jle
jnp
sbb
mov
inc
cmp
dec
stos
adc
imul
insl
cmp
cld
add
icebp
add
adc
notl
sti
rcr
out
in
push
in
aad
mov
aas
aaa
and
movsb
fadds
pop
push
out
negb
xchg
xor
xchg
xchg
push
out
test
add
mov
call
push
mov
mov
and
adc
cltd
cmc
int3
mov
xchg
fs
mov
xchg
pop
ja
or
sbb
mov
lret
xlat
daa
clc
loope
lcall
jb
ret
loopne
xchg
sbb
mov
mov
and
adc
rorb
inc
add
xor
push
scas
sbb
xchg
xor
jp
fcmovnb
mov
repnz
aaa
mov
push
inc
test
popa
negl
pop
fdivrs
dec
mov
inc
scas
inc
aaa
cmp
inc
lahf
test
das
push
sub
and
cmpsl
icebp
push
fcomi
mov
mov
mov
scas
pop
dec
sub
fcomp
mov
inc
xor
mov
in
inc
inc
fisubrs
inc
stos
sbb
pop
subl
adc
shrb
xchg
mov
nop
mov
xchg
inc
clc
sub
loope
icebp
xor
in
push
js
inc
push
or
sbb
mov
sub
and
inc
aaa
cmpsl
or
and
add
scas
mov
push
aas
mov
aaa
sub
mov
xchg
enter
inc
lret
and
xor
mov
test
in
jge
movsl
lock
insb
xchg
fisttpll
jb
ljmp
hlt
inc
jno
in
jbe
and
jae
pop
and
in
loopne
jno
mov
jecxz
in
out
outsl
mov
movsl
mov
mov
inc
leave
push
das
mov
lret
fidivl
sub
pop
inc
shrl
pusha
push
fisttpl
in
xchg
mov
into
cmpl
and
mov
minps
inc
jnp
rolb
mov
xchg
cld
pusha
mov
sub
hlt
mov
es
jo
or
pop
orb
mov
push
les
les
xor
leave
mov
sub
int
fs
xchg
push
jecxz
xchg
loop
cmp
push
lret
fmuls
jno
insl
jl
sub
xchg
mov
mov
mov
xor
sti
add
sbb
mov
or
dec
fdivrl
mov
xor
inc
cli
xchg
out
ret
jbe
push
test
cwtl
sbb
cmp
mov
shl
arpl
mov
dec
shll
das
das
dec
add
int
xor
lea
bound
mov
int
test
aad
cmp
popa
adc
pop
addr16
and
ja
daa
mov
mov
xchg
sahf
mov
or
adc
inc
lea
je
push
xor
shrl
mov
shll
pop
sub
hlt
insb
lods
and
cmpsl
mov
inc
sub
add
pop
jmp
fadd
mov
in
mov
xor
out
aas
or
pop
mov
cmp
fmull
dec
and
push
rorb
leave
mov
sub
shlb
insl
int3
cld
shrb
daa
dec
sbb
fs
xchg
lret
lcall
mov
das
cltd
inc
mov
jmp
pop
adcl
jle
ds
fimull
mov
inc
repz
shrb
push
cmp
jnp
mov
mov
scas
adc
dec
xlat
jne
and
stos
cmp
out
ljmp
das
jmp
xchg
aad
and
imul
mulb
in
mov
stos
push
lret
loopne
fldl
fcoml
push
fdiv
mov
in
and
inc
push
mov
fldt
decl
dec
fidivrs
sbb
push
mov
add
cltd
jns
inc
lret
pop
mov
xlat
rolb
stos
mov
dec
je
xchg
cmp
lds
daa
push
lds
int
cmpsb
add
ret
adc
pop
inc
iret
in
sbb
adc
ja
mov
mov
adc
mov
or
mov
mov
cmpsl
daa
jbe
or
xor
mov
orl
cld
lock
stc
rorl
mov
adc
xchg
or
pop
jmp
jnp
jl
mov
mov
mov
dec
es
out
lret
dec
leave
cmpl
rol
into
mov
cmp
sbb
es
les
inc
into
divl
mov
dec
xchg
mov
iret
pop
sbb
fisubs
mov
jmp
xlat
lcall
inc
jbe
jl
push
jmp
and
dec
inc
push
and
pop
mov
bndstx
pop
fisttps
clc
outsl
aam
mov
add
sbb
outsb
test
cmp
lret
insl
pop
mov
clc
xchg
cmpps
pop
jl
mov
data16
mov
or
cmpb
adc
fnstenv
scas
cmc
sbbb
test
sub
cmp
cmpsb
xchg
inc
jne
dec
and
mov
add
add
or
jle
push
loope
orb
pop
in
dec
cmc
mov
push
xchg
push
adc
bound
aaa
gs
dec
js
bound
shlb
and
ja
sub
rolb
jmp
js
push
jb
fsubl
dec
fwait
dec
push
enter
xor
mov
fldl
pop
in
test
into
mov
cmpsl
mov
jl
push
mov
mov
scas
jle
pop
xor
stc
cmpsl
pop
push
jbe
mov
cmpsl
mov
lods
leave
subl
dec
sub
sbb
aam
ret
mov
aam
movd
loopne
sahf
outsl
or
xchg
sahf
loop
iret
in
jb
daa
and
aam
out
outsb
dec
aas
mov
daa
test
push
mov
and
rclb
jecxz
leave
pop
sbb
xchg
pop
inc
arpl
add
jmp
imull
cmp
dec
mov
xchg
mov
adc
movsb
xor
in
mov
fld
push
leave
aam
mov
inc
jecxz
and
pop
dec
jns
mov
lods
lcall
sbb
lret
pop
mov
sub
mov
cmp
lock
stc
dec
inc
xchg
mulb
xor
mov
sbb
mov
cld
cltd
ds
jne
xor
les
cmp
imul
mov
icebp
sahf
jns
mov
test
push
and
out
sub
dec
adc
iret
pop
sahf
js
or
jns
aas
icebp
and
mov
insb
sub
jns
addr16
out
mov
rol
testl
or
xchg
insb
bound
mov
imul
sub
imul
sub
sahf
push
iret
pop
push
stc
pop
pop
adc
mov
jmp
pop
add
jo,pt
mov
xchg
mov
jae
xchg
pop
sbb
nop
jmp
mov
aam
mov
movsb
cmp
sbb
push
push
fsts
les
ja
push
and
sub
test
and
rcll
loopne
fistpll
mov
jne
leave
leave
rcll
add
out
mov
adc
nop
lcall
jl
mov
inc
arpl
xchg
out
jg
jl
std
lret
pop
sbb
jns
imul
out
ret
jo
fucomp
insl
loope
les
sub
push
cmpsl
fs
lret
lods
mov
push
cmp
repnz
cmp
xchg
enter
mov
clc
or
add
cmp
jae
adc
xchg
sub
dec
push
and
leave
daa
jmp
ret
loopne
test
into
add
jmp
or
jnp
sbb
outsb
or
outsl
mov
cmp
addl
addr16
cmp
fwait
add
test
add
mov
addr16
add
pop
cmp
cs
in
fwait
or
and
add
inc
outsb
outsl
cmp
into
pop
mov
jle
or
int
and
scas
xor
sahf
jge
data16
lods
test
mov
mov
cld
mov
divl
ficomps
mov
jmp
mov
in
loopne
ja
fnsave
sbb
call
mov
lds
mov
movsb
jb
mov
xchg
sarb
ficomps
clc
dec
sub
pusha
shrb
addl
jecxz
sbb
add
jl
add
leave
or
xchg
xchg
movsl
aas
insb
cmp
nop
mov
or
bound
pop
sub
push
movsl
movsb
cmp
mov
mov
sbb
sub
pop
push
add
cli
aad
fstpl
scas
and
sub
aad
andl
pop
add
add
test
sub
jle
popa
xchg
mov
aas
in
pinsrw
xchg
hlt
mov
add
cmpsb
adc
xlat
pop
sbb
dec
daa
insl
dec
inc
and
lahf
xchg
push
imull
fists
sbb
inc
inc
cmp
pop
mov
add
ds
cmpsl
push
insb
cmc
imul
mov
out
push
leave
fstp
mov
addl
in
mov
dec
dec
push
pop
aam
cmc
mov
push
and
sub
jno
shll
je
imull
pop
enter
jne
cmp
sbb
adc
xchg
sub
je
call
push
pop
fisubs
mov
jno
pop
or
fdivrl
and
fdivrl
pop
fs
rcrb
cmpb
sub
cmp
in
mov
fists
icebp
jns
mov
xor
movsl
flds
ret
js
and
stc
lods
stos
ja
mov
fwait
lods
sbbb
out
outsb
lahf
adc
xor
xchg
rcrb
jp
xchg
push
test
inc
das
imul
add
mov
movq
ss
fdivrl
mov
lock
dec
push
pop
sbb
inc
pop
push
add
je
sub
fildll
int
aam
loope
out
cld
int
xor
ljmp
pop
ja
dec
les
pop
inc
fs
mov
mov
push
imul
popf
sbb
sub
int
icebp
push
movb
test
cld
cmpsl
sahf
shlb
adc
les
xchg
out
fcomip
fsubr
inc
mov
pop
aam
aas
mov
jnp
fcomps
in
dec
ficoms
pushf
jbe
or
fistl
sub
dec
popf
cmp
ror
jns,pn
stc
repnz
test
or
sbb
ss
imul
mov
addb
lret
sbb
cli
push
sub
adc
xchg
and
fstps
cwtl
add
inc
inc
jo
ret
push
inc
xlat
aaa
and
mov
mov
cs
mov
xchg
loop
add
aas
int3
or
xor
sub
fdivs
xor
push
cmc
and
and
inc
mov
cltd
ret
cwtl
in
jb
and
outsl
xor
sub
or
stc
or
repz
mov
cli
push
or
popa
cmpsb
xorb
lret
cmp
xchg
or
inc
push
fildll
sbbl
jge
stc
push
in
ljmp
iret
test
cli
movsl
mov
jne
pop
push
les
xor
jb
sub
ret
shll
popa
inc
popf
fstpl
mov
xchg
subb
mov
js
inc
mov
js
enter
outsb
jmp
push
clc
inc
pop
push
jle
ret
jl
nop
leave
jp
mov
je
mov
stos
and
int
je
mov
jb
adc
sbb
dec
mov
inc
dec
call
fdivrl
mov
push
int
popa
lds
jge
enter
repnz
shrb
add
in
addr16
or
negl
mov
les
add
bound
ds
mov
mov
insb
dec
or
cli
jb
cmp
dec
dec
cmc
test
mov
adc
inc
insl
push
add
sub
rorb
cs
inc
int
pop
jmp
in
push
cmovno
fdivp
fldenv
jnp
fdiv
cli
push
sbbb
nop
cmp
hlt
fdivr
xchg
or
jae
loop
mov
cmp
jae
mov
sbb
pop
fdiv
cmpsl
call
push
lock
inc
push
sti
dec
in
pop
mov
cmc
scas
xlat
aam
mov
push
jns
pop
add
subl
and
jl
mov
fldl
xor
inc
dec
jne
pop
es
ret
insl
push
mov
out
jne
les
xlat
pop
ja
outsl
push
adc
pusha
filds
mov
add
pushf
stos
xchg
mov
sub
inc
lea
mov
jecxz
sahf
shll
sub
cmp
inc
dec
ret
jb
dec
popf
pop
or
loope
dec
lds
cmp
jae
fldz
shll
mov
iret
repnz
mov
pop
and
lcall
xchg
outsb
mov
es
jno
jg
sbb
push
push
aam
or
add
cli
cmp
and
adc
and
clc
and
adc
repz
push
pop
pop
scas
out
dec
mov
sub
pop
dec
push
jae
sub
push
out
push
dec
rolb
add
or
mov
dec
cld
mov
push
call
cmp
enter
xchg
inc
loopne
cmp
fisttps
push
xchg
add
gs
lock
sar
adc
dec
xchg
cmp
push
pop
and
dec
or
jl
filds
icebp
pop
inc
lahf
and
mov
jne
into
loope
and
loopne
insl
push
sahf
xchg
roll
iret
inc
aaa
repnz
cs
lea
xor
mov
sti
enter
jecxz
mov
pop
or
daa
or
dec
shl
xor
xor
shll
out
mov
pushl
mov
sub
add
mov
sbb
cmp
into
mov
jge
mov
jmp
movsb
loope
ja
fidivl
push
sbb
rol
mov
scas
jmp
jge
andl
stos
mov
mov
daa
icebp
sub
cmp
ret
cld
rcrb
and
std
inc
sub
mov
push
xchg
aas
fadd
test
into
clc
and
imull
cld
repz
push
popa
stos
xor
inc
adc
mov
outsl
sbb
dec
mov
in
fists
ss
dec
repnz
cmpsl
daa
sub
filds
movsb
fs
repnz
aad
xor
mov
jmp
or
sbb
lods
mov
mov
pop
adc
scas
sti
les
mov
test
cmpsb
stos
call
sbb
push
mov
cmp
fmull
stos
xchg
lds
adc
test
push
loope
addr16
lods
lds
mov
cltd
xchg
jae
mov
push
adc
or
ja
dec
loopne
xchg
mov
movsl
jecxz
loope
dec
stc
and
xor
loop
test
push
fucompp
sbb
xchg
je
icebp
outsl
lods
leave
lea
mov
mov
fcompl
sub
xchg
mov
popf
lock
jmp
push
or
mov
or
cmp
pusha
rorb
leave
push
push
or
pop
fstpt
sahf
int3
pop
ret
mulps
and
sub
aas
mov
xchg
mov
mov
mov
stos
pusha
xor
push
dec
fstl
sahf
cmp
mov
add
loop
aas
push
adc
mov
and
mov
xor
lcall
test
mov
popa
add
push
frstor
inc
sbb
mov
adc
mov
int
lds
xor
add
pop
mov
cld
xor
daa
fisttpl
in
incl
rcrl
jb
and
mov
cmp
sub
jnp
dec
into
loop
gs
enter
cpuid
push
ljmp
mov
sbb
scas
mov
or
sti
mov
or
adc
adc
cmpsl
jecxz
sub
cmp
sub
and
pop
cli
mov
push
and
cmc
sbb
push
hlt
inc
repnz
inc
dec
xchg
repz
les
push
bnd
or
xchg
mov
out
and
sbb
sub
jl
add
push
mov
and
pop
cs
or
adc
das
and
jmp
xor
pop
faddp
xlat
pop
fwait
adc
mull
sbb
test
inc
pop
outsb
jb
imul
lds
sub
push
int
and
cmp
icebp
dec
pop
sub
out
cwtl
xchg
icebp
sub
ja
mov
leave
pop
sbb
or
jg
xor
xor
lcall
fcmovnb
push
adc
jmp
cmpsl
mov
enter
int
loope
addr16
pop
sub
rep
sub
pop
dec
daa
pop
or
in
push
lods
lcall
mov
inc
nop
and
mov
mov
ss
push
push
cmc
sahf
fsub
mov
pop
insl
std
test
dec
mov
adc
add
sbb
mov
jns
push
fld
enter
call
dec
nop
cmp
popf
or
outsb
and
arpl
rcl
push
or
int
push
xchg
or
in
loope
xchg
lods
jmp
inc
dec
mov
jae
cltd
lret
jnp
test
popa
sub
or
push
push
inc
jne
xchg
adc
sbb
repz
jne
mov
inc
jge
test
mov
mov
outsb
aad
push
or
pop
push
push
jbe
in
mov
and
test
sub
xchg
cld
inc
into
incl
sti
fildll
cs
popf
mov
adc
dec
push
xchg
sub
pop
or
loopne
sbb
xchg
fsubrl
enter
gs
stos
xchg
mov
icebp
mov
lea
icebp
or
xlat
or
xor
std
arpl
je
add
or
cmp
jns
loope
outsl
or
sub
fcmovb
ffreep
adc
push
jp
mov
divl
lea
add
sbb
das
fisttps
sub
xchg
shrb
pop
mov
jns
mov
jnp
mov
push
mov
fs
xchg
shlb
nop
pop
fcoms
add
add
cs
div
mov
add
mov
mov
inc
loope
push
clc
jae
stos
adc
psubusw
js
adc
das
lahf
xor
and
dec
imul
dec
in
jg
adc
inc
notb
add
jg
jle
pop
out
mov
test
into
icebp
addr16
fisubrl
add
jg
scas
mov
sub
rolb
mov
cwtl
shrb
loope
in
jnp
pop
pop
fcmove
push
adc
in
mov
mull
fs
push
push
lods
daa
or
sbb
icebp
lods
push
jl
pop
pop
sbb
iret
dec
adc
jns
fs
ss
into
lcall
pusha
scas
inc
adc
into
sbb
rcr
fsubs
or
sahf
jl
mov
mulb
leave
imul
and
or
dec
adc
hlt
add
mov
sub
or
cs
inc
xchg
pop
mov
sbbl
repz
ljmp
cmp
mov
add
mov
add
xchg
xlat
adc
sbb
mov
mov
xor
jns
leave
jle
mov
cmpsl
add
mov
pop
xchg
push
cld
mov
sti
dec
mov
jl
mov
dec
jns
int
lds
xor
adc
mov
movsb
dec
daa
adc
leave
fmulp
dec
cmpsb
cs
jle
popf
insl
pushf
loop
jbe
adc
shrb
in
cmp
xor
insb
imul
xlat
jnp
std
inc
mov
mov
popa
lret
int
rclb
aad
test
iret
adc
add
push
mov
leave
dec
pop
dec
sbb
and
stos
adc
xor
popf
stos
hlt
js
lods
add
stc
dec
test
push
dec
mov
or
adc
cmp
ret
das
push
outsl
jge
jl
xor
data16
xor
jne
scas
mov
sbb
add
out
adc
inc
loope
pop
mov
mov
pop
aam
push
sahf
push
dec
mov
lock
ja
cmp
pop
aaa
addl
sbb
pop
loope
in
dec
jns
mov
mov
sub
xchg
jmp
jbe
mov
sti
ja
pop
addr16
xlat
or
xchg
add
sub
cld
psubq
cli
push
xorb
fcmovnb
test
orl
and
cltd
jge
dec
scas
and
sub
or
int3
cmpsl
in
test
pop
aaa
ret
inc
in
fstl
imul
insb
push
push
leave
scas
sub
xor
int3
cmp
arpl
mov
ret
xor
xlat
jne
arpl
pop
push
pop
mov
cwtl
jae
popa
icebp
jne
add
repz
fwait
in
add
jmp
jg
aaa
leave
sbb
es
xchg
jg
mov
mov
les
subb
sub
cmpb
cltd
or
xor
ljmp
cmpsl
xor
divb
mov
popa
popa
cwtl
flds
rcr
movsb
mov
push
dec
jne
inc
stc
adc
jbe
push
push
sub
or
mov
xor
lcall
jmp
mov
push
sub
cwtl
nop
mov
lahf
dec
hlt
push
popa
mov
iret
daa
add
add
andb
fsubrs
lret
and
jae
orb
adc
xor
cmp
and
and
dec
xor
or
bound
mov
mov
push
ja
pop
aad
mov
imul
xchg
out
stos
pop
rcrb
jp
xchg
sub
or
mov
sbb
and
rclb
push
adc
inc
or
lds
inc
inc
mov
push
imul
divl
mov
xchg
scas
ret
pop
ret
mov
and
inc
xchg
xor
mov
sbb
fcmovu
inc
jb
incb
inc
push
mov
pop
cmpsb
pushf
add
sub
fmull
xor
outsb
ficoms
jg
jp
sbbl
arpl
cmc
jno
popf
inc
push
add
and
xor
hlt
and
sub
shll
popf
loop
loop
in
das
xchg
cld
inc
add
xchg
inc
xchg
decl
test
xchg
dec
sbb
mov
and
mov
push
scas
mov
lcall
mov
pushf
inc
in
push
xchg
xchg
dec
insb
or
aas
insl
xor
sub
ret
ror
out
mov
mov
dec
jbe
sub
pop
lcall
adc
les
cs
and
fwait
xchg
and
mov
xchg
pop
ret
ret
and
test
popa
pusha
fwait
in
fisubrs
pop
test
sub
out
insb
cltd
and
test
mov
ficomps
cmp
adc
mov
jae
mov
mov
and
push
stos
pop
pop
lcall
daa
xchg
nop
test
sbb
sahf
mov
cmp
cmp
push
in
jo
adc
xor
loop
push
ret
xor
pop
xor
test
cmp
inc
cmpsb
test
loope
push
shrl
xor
and
or
pop
out
mov
jp
push
or
jnp
push
mov
xadd
pop
sbb
cmpl
cld
inc
add
jmp
call
cmpsb
movsl
adc
imul
repz
sbb
mov
roll
mov
add
sub
sbb
les
pop
inc
jle
mov
imul
enter
enter
mov
pop
sub
and
out
nop
xchg
sub
or
or
icebp
scas
sbb
mov
daa
add
orl
daa
jl
movsl
pop
rorb
adc
in
insb
mov
pop
ss
jmp
xchg
out
cli
roll
fdivl
shll
pop
test
cs
xchg
cld
sub
mov
test
ret
out
push
pop
jnp
jno
jg
lea
pop
lds
dec
dec
inc
cs
in
add
pop
dec
out
sub
xor
sub
push
pushf
mull
pusha
jnp
or
sub
sub
mov
push
fimuls
aam
jo
repz
or
jmp
sub
dec
loop
mov
outsb
sbb
cmp
cli
adc
mov
mov
push
insb
cmpsb
gs
mov
push
cltd
outsb
stos
es
in
mov
pop
pusha
push
scas
test
mov
jecxz
out
lock
and
inc
add
lods
aaa
bound
jl
cmp
jle
cld
and
push
scas
push
mov
sarb
in
dec
mov
stos
adc
jo
sub
adcl
leave
or
sub
je
xchg
push
fistps
mov
cmp
jbe,pt
aad
pusha
mov
push
push
cmpl
ret
and
test
icebp
pop
adc
test
cmp
lods
subb
mov
mov
mov
ret
rorb
mov
in
mov
pop
sti
pop
push
mov
push
aam
dec
fsubrl
jp
inc
notl
lock
mov
push
test
push
cmpl
test
rol
mov
xchg
movsl
rorl
add
cli
sbb
xchg
push
dec
or
pop
fildl
in
ficomps
sbbl
or
data16
hlt
push
pop
shll
xchg
sub
dec
das
push
arpl
dec
add
popa
jne
out
jle
lea
out
xchg
jmp
test
and
fmul
adc
pushw
repz
notl
in
pop
rcrb
add
mov
adc
out
push
mov
and
mov
test
sub
bound
sub
fstl
sub
push
aam
inc
test
jns
adc
jbe
ss
xchg
popf
mov
mov
scas
mov
jge
jb
sbb
repnz
aas
mov
dec
xchg
dec
sarl
add
mov
les
push
jo
pop
sahf
adc
arpl
mov
push
popw
adc
add
inc
divb
cltd
pop
js
out
clc
mov
adc
add
inc
cmp
jecxz
pop
outsl
push
test
adc
ds
loop
fmull
into
rcrb
inc
jns
clc
dec
shll
aam
insb
fisubrs
notl
xor
sbb
mov
pop
pop
lods
push
xchg
jnp
pusha
imull
repnz
jb
or
sbb
scas
or
bnd
and
cmp
inc
push
js
aaa
mov
test
or
pop
adc
mov
mov
dec
sbb
stos
add
jl
jo
inc
lds
aaa
push
ret
push
paddusw
jecxz
movsl
inc
ds
push
clc
mov
mov
shrl
mov
andl
sub
xchg
popf
dec
bound
out
mov
jl
sbb
scas
add
and
cmp
add
lcall
mov
ret
mov
fs
or
sarb
movsb
cmp
or
les
and
sahf
mov
adc
int3
xor
pop
mov
out
shlb
and
inc
push
mov
out
mov
cs
test
psubb
xor
mov
jne
icebp
add
fwait
mov
mull
push
in
cs
and
cltd
jne
add
cmp
inc
cmc
xchg
pop
mov
idivl
xchg
jbe
mov
jecxz
stos
sbb
sbb
insl
lea
mov
dec
mov
addb
shlb
dec
bound
pop
cld
pop
mull
pop
mov
leave
pop
push
loopne
ds
outsl
stos
inc
mov
rorb
aaa
mov
push
sbb
lods
inc
testl
xchg
mov
adc
bound
mov
rclb
jne
subb
or
pop
mov
and
mov
aaa
and
xchg
dec
sarl
fsubr
inc
shll
jbe
inc
fxam
cld
mov
mov
sti
scas
mov
nop
xchg
xor
sahf
test
stos
cmpsb
nop
sbb
and
xlat
movsb
gs
daa
mov
sub
das
fsubrs
mov
test
aaa
mov
jmp
jae
lret
into
fs
xchg
mov
adc
fisttps
fsubl
ja
inc
and
jns
movl
fwait
cltd
sbbb
add
xor
and
into
sti
in
pop
loopne
xor
cwtl
gs
cwtl
test
lret
push
xchg
mov
daa
sub
fimuls
out
sub
or
ret
mov
not
into
sbb
sbb
mov
mov
sbb
pop
sbb
and
iret
inc
xor
dec
inc
fs
dec
addr16
loope
call
sbbl
cwtl
mov
loopne
sub
int
mov
pop
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
mov
jnp
pushf
jnp
mov
add
mov
dec
sub
sub
add
xchg
loope
into
jns
sbb
jb
dec
ret
sarb
ljmp
mov
mov
dec
adc
cmp
fcmovbe
inc
test
jns
dec
push
cltd
and
xor
add
jecxz
movsl
out
push
shlb
xchg
mov
xor
and
sarl
popf
aas
rclb
xor
hlt
or
roll
lock
ret
mov
call
cmp
test
insb
outsb
movsl
inc
or
sbb
dec
cmp
daa
or
xchg
mov
mov
cld
xor
push
mov
push
xor
bound
add
or
sbb
or
arpl
jp
pop
into
inc
je
or
mov
fldenv
call
dec
es
sub
cmc
mov
ja
xchg
xchg
mov
xchg
sbb
push
jle
ja
inc
stc
shll
in
pop
fsubrl
add
popa
cs
jle
gs
push
jbe
cltd
mov
push
pop
add
gs
mov
sub
sub
out
pop
repnz
fs
popa
jne
movsl
sub
mov
xchg
in
mov
sub
mov
and
arpl
mov
cmpsb
pop
std
and
pop
sub
sub
out
cmp
outsb
shrb
push
and
push
iret
mov
xchg
jbe
mov
cmp
and
int
jbe
sub
mov
outsl
stos
xor
insb
jb
out
sbb
pop
cmp
mov
jg
jecxz
iret
hlt
in
stos
or
mov
rcll
xchg
fisubs
xlat
and
jl
adc
dec
enter
mov
jecxz
mov
mov
add
xor
adc
mov
jl
inc
int
dec
data16
pop
cmp
into
cmp
dec
subl
push
rcrb
inc
jge
out
js
das
fcmovnbe
out
fisubs
push
outsb
mov
popa
clc
lcall
out
lcall
mov
mov
mov
pusha
les
add
outsb
inc
pop
stos
jb
lods
sub
ds
insl
pop
dec
fsubrs
mov
int3
movsb
mov
lret
mov
inc
sbb
add
out
orl
or
xor
pushf
rcrb
clc
inc
data16
sbb
dec
movsb
dec
push
inc
addr16
xchg
jnp
adcb
in
push
enter
add
lods
jo
fcoms
cmp
add
test
in
jmp
or
mov
js
add
cmp
aam
push
xchg
bound
movsl
jle
dec
dec
jmp
and
andl
and
mov
bound
popf
push
adc
lret
aas
lea
rorl
mov
je
cld
pop
sar
inc
das
and
popf
push
push
repz
pop
mov
push
in
mov
lret
test
mov
mov
lods
push
aas
fldenv
fbld
insb
mov
inc
aas
add
repnz
dec
mov
dec
mov
mov
leave
dec
jne
jmp
push
jle
shll
cmpsb
or
sbb
mov
push
adc
stos
lret
fwait
lret
jo
shrb
xchg
or
movsl
adc
pop
jo
jb
or
daa
imul
jle
hlt
sbb
mov
inc
cmp
jecxz
inc
xor
ljmp
in
fcom
inc
mov
or
push
addr16
lods
dec
imul
xor
loope
jno
mov
shll
pusha
mov
jp
mov
cmp
adc
jl
sub
out
std
cmc
xchg
mov
test
jb
inc
push
or
fimull
pop
ja
adc
add
inc
mov
fsubrs
cmp
mov
cmp
andb
movsl
lahf
dec
sub
pusha
push
gs
popa
fisttps
dec
lods
stos
xor
loope
ret
dec
pop
xchg
mov
push
mov
xchg
inc
dec
std
mov
mov
aam
lods
pusha
mov
add
dec
jg
test
mov
cmc
es
jns
fnsave
sub
jae
decb
mov
cmp
lds
aaa
lcall
sbb
fsincos
lds
xor
nop
out
repnz
cld
adc
rcrb
mov
push
int
lret
enter
call
sub
pushf
inc
lods
icebp
pop
jmp
mov
mov
sbb
gs
mov
jbe
sub
not
xchg
adc
mov
inc
inc
jne
cmp
adc
pop
jecxz
jg
imul
adc
mov
lea
dec
in
inc
or
push
lahf
dec
adc
dec
jp
into
aaa
lock
and
or
clc
inc
xor
cmp
xor
lea
add
adc
mov
xchg
gs
addl
mov
inc
aam
ljmp
pop
sub
ja
dec
jge
inc
xor
dec
or
lret
movsl
cmp
psubb
pop
sub
decl
or
adc
fs
cmpl
xchg
arpl
fisubrs
test
or
sahf
roll
in
jbe
jbe
push
mov
mov
orb
pop
xor
outsl
rorb
inc
sbb
dec
mov
daa
stos
pushf
lds
lahf
mov
push
loope
das
out
push
repnz
lret
ja
adc
dec
call
das
cmp
leave
xor
pop
sub
xorl
xor
jl
sub
das
push
mov
mov
test
dec
jbe
pusha
iret
daa
dec
in
scas
pop
fdivr
sbb
push
bound
das
nop
mov
mov
test
adc
mov
stos
loopne
fidivl
fnstenv
out
fstpl
xor
pop
push
xchg
fldl
fcmovb
mov
dec
push
sub
xchg
loopne
scas
pop
fisttpll
mov
insl
xchg
mov
mov
add
cmp
dec
cmp
inc
test
ja
repz
inc
dec
jno
shrl
cmp
rol
cmp
enter
jae
mov
test
scas
in
sbb
imul
sbb
xchg
jbe
imul
adc
inc
lcall
pop
icebp
jnp
mov
add
icebp
dec
adc
les
pusha
mov
iret
xorl
lahf
ja
push
xchg
andb
mov
stos
imul
pushf
popl
mov
xlat
scas
in
out
jge
xor
xchg
lock
adc
jp
or
gs
or
pop
stos
inc
pop
add
ret
sbb
pop
test
test
test
loopne
ret
mov
cltd
lods
jae
out
testl
lods
push
lea
xor
cli
mull
int3
mov
cmp
and
xor
aaa
jno
or
movsb
pop
cmp
outsb
pop
out
inc
rorb
xchg
push
mov
cmp
add
mov
pop
cld
lcall
test
sarl
mov
lret
hlt
loopne
xor
movsb
cmp
shlb
scas
adc
mov
lea
push
sbb
jecxz
das
cltd
mulb
stos
jg
dec
out
xchg
or
rol
je
ficoms
into
jl
and
dec
clc
insl
adc
cmpsb
pushf
stc
and
inc
mov
stos
push
mov
inc
mov
fsubr
aam
lods
rorb
aas
aad
cli
push
adc
mov
dec
jl
divb
stos
addr16
jmp
test
xchg
pop
lret
scas
mov
sub
movsb
jnp
out
std
xchg
or
lret
rorb
mov
and
dec
sahf
repnz
push
add
sbb
add
pop
add
push
jo
sub
popa
mov
das
pushf
in
xchg
js
imul
xchg
jecxz
dec
daa
aam
mov
pusha
mov
pop
xor
mov
stc
jmp
dec
imul
jae
rclb
clc
das
ret
push
sub
lret
or
mov
mov
push
adc
and
and
and
pop
jo
xor
mov
jge
dec
mov
cmp
stos
popa
lds
cmp
add
iret
xlat
and
dec
icebp
in
hlt
xchg
inc
sahf
lods
js
aam
or
sub
int
nop
lret
pop
jnp
test
insb
xor
push
adc
cld
xchg
mov
and
loope
ret
jge
nop
fildll
sbb
jle
push
mov
pusha
out
in
subl
cmp
and
aam
xchg
test
push
dec
nop
adc
mov
xchg
outsb
and
xorl
cmp
scas
push
std
aaa
jno
add
cmc
dec
rorl
loopne
enter
jo
in
insb
mov
add
and
lret
jbe
xchg
insb
pop
cltd
clc
sahf
add
pusha
xchg
and
cmp
jns
test
outsl
icebp
sub
mov
pop
adc
pusha
xor
xor
mov
push
inc
fsub
clc
jne
rol
or
iret
add
push
sbb
mov
dec
cli
add
jno
pop
inc
and
pop
aaa
push
mov
or
hlt
sarl
out
aam
sub
aam
dec
clc
jecxz
or
lcall
testl
or
lock
dec
and
xchg
sub
out
jl
lock
xchg
leave
mov
mov
bound
mov
push
mov
les
call
or
fisubl
rorb
mov
jp
xchg
enter
aaa
bnd
xor
push
fildl
lret
cs
imul
sahf
out
les
inc
lods
popa
movsb
pop
mov
mov
xor
rorb
xchg
adc
scas
imul
inc
mov
call
scas
leave
mov
enter
data16
jo
ljmp
push
imul
lods
fcmove
outsl
mov
popf
cwtl
mov
ret
mov
leave
fisubrs
rcrl
jbe
mov
fsub
imul
dec
mov
jns
lret
nop
sbb
cmpsl
dec
repnz
pop
xchg
pop
pop
lret
lahf
or
fs
pushf
cmp
pop
out
icebp
ret
xchg
test
loop
ret
in
lods
insb
shll
jb
daa
sbb
into
hlt
inc
shll
adc
addb
mov
push
in
xchg
pop
in
les
fisubl
cmpsl
fsubrl
mov
loop
in
shll
ss
or
lods
sbb
shl
lcall
adc
insb
mov
popf
pop
scas
jmp
sbb
rcrl
call
lods
mov
stos
outsl
push
pushf
orb
xchg
inc
lret
push
adc
cmp
xorl
fs
xor
idivb
cli
and
sbb
repnz
jae
insb
decl
xchg
xchg
cltd
hlt
in
jns
or
ds
pop
cltd
xchg
add
dec
stos
mov
fildl
xor
xchg
inc
sub
mov
scas
and
jae
sbb
das
mov
xor
fildll
mov
cmp
inc
in
rcl
inc
mov
and
push
mov
jae
lods
sbb
daa
imul
lods
fstps
mov
and
cli
push
xlat
stc
jmp
cmp
push
ficoms
jl
add
push
push
xchg
pushl
mov
fisubl
movsl
push
mov
and
mov
fldenv
cmp
cmp
push
dec
push
cmp
fildll
lcall
xor
push
imul
scas
jg
daa
cmpsl
aam
divl
push
jmp
add
loop
sub
scas
imul
mov
mov
outsb
push
mov
pop
sbb
iret
in
les
mov
xchg
lret
push
or
jnp
mov
aad
mov
repz
xchg
and
inc
test
jecxz
imul
mov
mov
sbb
mov
cmpb
ja
lods
inc
pop
jle
les
sub
aas
xor
jo
mov
cs
bound
loope
repz
inc
dec
cmp
shrb
mov
push
cmp
bound
lcall
xor
adc
xchg
mov
je
out
lea
mov
test
jg
push
or
dec
aaa
xchg
xchg
lcall
inc
or
mov
int
dec
test
mov
mov
push
arpl
shlb
int
outsb
es
pop
xchg
jp
cli
pop
mov
dec
xor
loop
cltd
and
jnp
enter
mov
mov
inc
mov
fimull
sbb
adc
pop
fs
xchg
xor
pop
lret
out
mov
mov
jmp
test
stc
and
and
out
lods
mov
imul
int3
jns
mov
sub
icebp
lods
or
nop
mov
cmc
or
testb
or
jp
inc
xor
call
nop
idivl
fcompl
sarl
dec
insb
fstpl
xor
mov
sahf
lods
repz
clc
mov
xchg
and
movsb
and
testl
in
jge
or
and
ljmp
call
jmp
inc
push
cmp
fcomps
sub
and
sbb
mov
inc
mov
add
jmp
mov
inc
clc
sahf
xchg
fxtract
inc
scas
push
cltd
inc
bound
aaa
outsl
xor
je
stos
xchg
xor
adc
lahf
daa
xor
adc
jle
adc
pop
inc
xchg
mov
pop
in
insl
fdivs
mov
xor
jns
hlt
adc
xchg
jecxz
pop
call
cmp
aas
aaa
push
sahf
inc
faddl
loopne
jo
push
sbb
sbb
mov
seta
xor
mov
jb
mov
pop
out
mov
adc
dec
or
sbb
fdivrs
mov
pop
insl
xlat
xlat
lret
cmp
xor
fs
daa
xor
push
jbe
adc
inc
dec
je
xchg
jo
in
xor
ss
mov
cmp
lock
and
mov
insl
mov
shll
test
daa
push
lods
lods
xchg
sbb
outsl
lcall
enter
fistpl
jmp
sub
jmp
xlat
dec
cmp
scas
mov
push
dec
repnz
lock
push
mov
aam
rcr
je
mov
ja
popa
decl
lahf
gs
mov
repz
or
push
mov
adcb
fadd
mov
adc
sbb
unpckhps
push
jbe
es
mov
jne
ss
xor
mov
inc
mov
lock
inc
std
pxor
mov
dec
sbb
pop
jecxz
jecxz
in
push
jnp
hlt
add
movsb
lods
js
push
mov
test
mov
sub
lret
fwait
sar
nop
sub
in
arpl
xchg
call
mov
test
inc
jmp
adc
push
push
xor
and
js
jo
outsl
push
mov
dec
lcall
mov
fs
in
sbb
scas
add
ret
inc
inc
stos
lret
sbb
sbb
out
jmp
ds
jg
push
add
xor
xor
adc
mov
cmp
ljmp
push
add
sbb
out
in
xchg
xchg
imull
xor
sbb
jb
rcrb
push
out
and
sub
ds
add
test
into
shl
mov
or
imul
push
jmp
fimuls
adc
jge
dec
movsb
xor
ja
lret
inc
fnstsw
inc
pushf
add
push
das
imul
lds
je
or
loop
roll
and
pop
rorb
and
or
pop
jno
and
dec
mov
mov
mov
cmp
add
fisubrs
in
cld
lods
ljmp
xchg
cld
orl
leave
popf
xor
xor
stc
stos
int3
mov
pushf
inc
sub
sbb
enter
xor
xchg
call
mov
mov
sbb
push
xor
mov
loope
xchg
cmpsb
dec
movsbl
cwtl
pop
cmpsb
sub
jnp
xor
inc
cmp
adc
mov
adc
adc
jne
mov
cmc
outsb
sti
cmpsl
sub
or
jae
dec
jg
cmp
or
popa
and
cmpsl
jecxz
jbe
loopne
mov
sbb
in
mov
inc
xchg
movsl
shr
test
add
aad
lea
iret
mov
cmpsb
ja
sarl
mov
push
mov
and
jecxz
and
add
cmc
jbe
hlt
sub
les
aad
sub
inc
xor
lahf
add
dec
mov
cmc
and
mov
pushf
addl
call
ret
push
and
xor
je
insb
cs
xor
cmpsl
jmp
sbb
pop
in
aam
mov
lret
cld
dec
test
mov
xor
cltd
pop
mov
push
ffree
jns
cmp
inc
enter
mov
mov
and
pop
fnsave
cmp
push
push
out
push
or
dec
imul
pop
jns
into
push
adc
fsubs
popf
jl
cwtl
inc
or
push
xchg
pop
cmpsl
das
sti
jge
leave
adc
push
push
and
cmpsb
in
cltd
hlt
adc
jmp
push
das
pop
out
fs
sarb
rorl
xorl
into
je
inc
test
lcall
jo
cltd
sub
in
cmp
mov
dec
in
roll
mov
sub
dec
movb
ja
test
add
sub
jp
in
cld
add
ffreep
cmc
xlat
dec
stc
xchg
xlat
in
push
cmp
jge
popf
mov
dec
xchg
push
call
dec
push
jg
mov
mov
sti
aam
hlt
jno
lahf
mov
in
xor
movsl
scas
inc
jmp
in
mov
repz
and
shrl
push
mov
orb
sub
testb
mov
test
or
dec
inc
jl
cwtl
test
fsubrs
pop
stc
lret
lahf
dec
sub
or
mov
add
cmpsb
das
push
or
lods
out
imul
xor
dec
mov
sub
mov
mov
fwait
xchg
sbb
cmp
mov
aaa
rol
pusha
insb
imulb
push
xor
scas
dec
test
inc
dec
adc
das
cmp
push
push
scas
xchg
in
jecxz
outsl
cmpsb
jecxz
testl
ret
out
test
push
imul
rcrb
movsb
dec
jns,pn
sbb
je
pop
das
mov
cmpsb
fbld
call
stc
cld
sub
fnstcw
xor
or
shrb
mov
movsl
movsb
mov
adc
mov
aam
dec
inc
jb
jp
mov
lods
out
cmp
cs
bound
mov
inc
push
out
mov
xor
or
sbb
nop
movb
negl
movsl
pop
inc
aaa
sub
mov
push
fwait
push
dec
aas
lret
mov
jbe
dec
repnz
daa
loope
cmp
inc
xchg
out
fcompl
int3
cmp
arpl
xchg
mov
push
loop
pop
push
add
fcompl
int3
sarb
xor
sbb
jo
lds
xchg
xor
push
sub
in
push
jecxz
test
or
fisubrs
dec
cmp
in
mov
push
test
in
push
sub
fsubrl
and
aas
scas
add
ficoml
push
pop
push
jp
sbb
loop
insl
insb
mul
jno
push
mov
adc
lds
jge
mov
mov
jne
dec
mov
xchg
out
rorl
or
dec
in
jb
movsl
cmp
push
jbe
cmp
cltd
inc
mov
push
xchg
dec
inc
hlt
xor
test
js
outsb
adcb
mov
rolb
lock
les
out
stos
fisttpl
sarl
hlt
mov
xchg
fadds
repz
inc
pushf
sbb
jo
push
sbb
leave
in
rol
shll
lcall
cmp
sbbl
and
lret
fcmovne
fsubr
pop
test
mov
cwtl
dec
pop
rolb
add
dec
push
mov
outsb
fnstenv
and
dec
add
dec
out
pop
cmc
cmp
cmp
lahf
sub
cmp
xchg
xchg
popf
pop
inc
fdivs
fstl
addr16
pop
adcl
fs
not
and
js
sub
cmpsb
mov
or
mov
enter
cwtl
push
cmpsl
outsl
xor
vaddpd
push
loop
or
mov
daa
movsl
scas
in
inc
lock
or
pushf
dec
xchg
icebp
sbb
pop
pop
inc
jno
pop
imul
ds
or
test
add
jle
std
cli
into
rcll
push
stos
cmpsb
notl
mov
and
lahf
mov
cmp
loop
movsl
mov
inc
insl
test
testl
popf
clc
ds
jle
pop
int3
push
cs
es
mov
call
mov
imull
sub
rcll
in
loopne
xor
gs
mov
das
outsl
shr
lahf
sub
out
xor
inc
lret
pop
xchg
jg
mov
jb
mov
mov
add
pop
nop
mov
xor
push
inc
movsl
ljmp
mov
out
stc
ret
jbe
iret
or
mov
test
test
push
addr16
loopne
sahf
dec
inc
xor
mov
fsubrp
pop
xchg
roll
loopne
clc
cmp
pop
mov
es
pusha
add
lods
dec
pop
lahf
push
xor
int3
pop
pop
or
sub
cmp
lods
pop
rclb
push
mov
xchg
icebp
xchg
mov
repz
pop
mov
xlat
jg
mov
sbb
ja
push
loope
pcmpgtd
aas
pop
jge
test
loopne
pushl
push
arpl
fnstenv
pusha
subb
pop
dec
cli
dec
fldl
xchg
fstps
pop
cli
or
mov
pop
pop
lea
mov
jecxz
mov
cmp
jae
cltd
in
cmp
stos
lock
jb
int
lods
jo
into
sbb
mov
cmpsb
mov
mov
adc
rol
sub
in
je
or
jg
in
mov
push
xchg
test
push
in
xor
and
dec
cmp
sbb
jnp
lods
imul
jg
cmpsb
rcrb
push
rol
jns
aad
loope
scas
mov
lahf
dec
sub
loop
into
test
and
lods
iret
or
adc
push
scas
and
gs
xor
mov
jo
or
lods
out
push
push
dec
movsl
lcall
or
std
insb
push
sub
mov
pop
pop
jecxz
xchg
insb
xor
adc
rcrb
cmp
lods
std
cld
sub
lock
jp
fs
int
enter
push
jmp
xchg
mov
data16
insl
adc
lds
ficoml
sbb
int
sub
pop
xor
movsb
dec
pop
cmpsb
daa
lock
data16
cld
aaa
mov
jnp
mov
dec
dec
movsb
dec
aam
shlb
stc
pop
cli
data16
dec
insl
popa
in
insb
popa
push
or
out
push
mov
es
jb
nop
pop
mov
dec
inc
es
filds
call
nop
orl
call
out
pop
cmp
std
xchg
mov
mov
fwait
inc
cli
jae
mov
fxam
pop
pop
xchg
add
sub
push
xor
leave
mov
test
or
rcll
push
adc
cmc
insb
lock
or
push
pop
xor
scas
sub
popf
xchg
push
icebp
sti
adc
mov
dec
push
ret
xor
fimuls
add
jp
mull
jl
sbb
jne
popf
pop
mov
adc
enter
sbb
fcomp
cwtl
sub
out
test
xchg
push
pop
mov
jns
push
mov
push
cmp
roll
push
ljmp
sub
sahf
pop
loopne
adc
inc
fwait
loope
xorb
adc
mov
dec
aam
xor
xchg
adc
or
jo
mov
outsl
mov
adc
cmp
test
xchg
push
out
aas
push
adc
aam
ljmp
rorb
fisubl
dec
mov
test
xor
mov
lret
dec
push
jp
insl
cmp
jnp
xchg
cmp
sub
or
es
mul
mov
mov
mov
cmpb
xor
fsubr
push
insb
lods
xchg
insl
or
addr16
pop
jo
xchg
insb
in
adc
inc
push
cli
dec
lock
cli
fmull
test
call
mov
jle
adc
dec
notl
push
fcomps
sbb
mov
sti
mov
lret
lock
xor
mov
lahf
lea
dec
jb
mov
lds
jge
push
movsl
adc
int3
bound
jae
jnp
sub
fidivrs
pop
fs
imul
fs
cmp
imul
sub
mov
rorl
ja
inc
pop
cmp
inc
ds
fs
sti
xor
mov
mov
fs
mul
outsl
aaa
inc
mov
fs
and
pop
pusha
xchg
pop
adc
sar
movsl
cltd
jge
das
add
push
addb
je
jb
shll
rcrl
and
mov
cmp
mov
jg
sbb
sbb
dec
dec
mov
mov
les
and
cmp
aam
cmp
cmp
mov
pop
fs
fbld
dec
pop
rol
jg
add
in
inc
adc
mov
inc
xchg
sub
insl
leave
lea
push
es
xchg
fs
pushf
sbb
push
addl
inc
rcr
pop
das
xchg
inc
cltd
out
dec
in
inc
popf
lock
aam
cmp
or
mov
dec
mov
pop
add
dec
inc
lret
sbb
xchg
dec
mov
xchg
std
pop
dec
je
cli
mov
lods
clc
jns
jge
mov
push
or
loope
cwtl
je
scas
rclb
fs
stos
sub
stc
cmp
or
and
xchg
stc
mov
imul
sahf
jmp
cmpsb
push
jg
push
cmp
test
push
or
pop
mov
pop
std
sti
push
rol
movsb
sbb
ret
jns
mov
mov
mov
div
mov
xor
es
mov
cmp
arpl
out
fcoms
enter
popa
inc
filds
pop
js
xchg
pop
push
jge
pop
inc
and
jp
decl
pop
cltd
clc
lcall
push
mov
arpl
xor
pop
or
pop
sbb
sub
cmp
subl
shl
sub
push
in
negb
in
daa
mov
adc
dec
push
xchg
hlt
jecxz
jl
push
mov
fstpl
inc
aas
mov
insl
jne
add
push
ret
pop
inc
jmp
dec
sub
push
test
shrl
repz
shld
mov
sbb
aad
mov
push
push
not
xchg
popa
adc
push
and
mov
out
and
cli
jge
test
and
cmp
pop
enter
xor
cmp
negl
dec
jae
popa
shll
out
push
lods
and
call
add
dec
push
mov
das
aaa
fnstenv
sbb
dec
mov
pop
push
jne
jne
mov
adc
iret
dec
into
imul
stos
mov
addl
int3
cs
movsl
mov
aas
cltd
out
ss
mov
adc
adc
sbb
jg
pop
push
adc
rorb
mov
inc
xor
arpl
aam
roll
cmp
pop
hlt
dec
out
std
lock
pop
xlat
push
inc
jb
and
test
pop
sbb
shlb
cmp
pop
ljmp
decb
out
rolb
push
sbb
cmp
jne
retw
dec
pop
mov
inc
push
cwtl
test
icebp
mov
cmp
insb
sbb
movsb
jp
xor
and
scas
inc
mov
shlb
or
mov
push
jbe
lods
adc
inc
sarb
jecxz
dec
or
push
push
enter
dec
mov
int3
imul
jecxz
mov
pusha
add
push
lods
or
into
lcall
xchg
addb
pop
dec
js
pop
iret
sub
cltd
or
jg
lret
and
aaa
dec
fistpl
stos
jae
call
inc
or
xlat
dec
inc
lea
outsb
push
or
jl
push
stos
dec
push
jecxz
jbe
xchg
loopne
mov
sbb
or
cli
lock
mov
xor
aaa
lea
out
push
loop
xchg
xor
leave
sub
lcall
stos
in
pop
cltd
aam
push
push
push
stos
icebp
movsl
jb
cmp
pop
rorb
test
mov
getsec
mov
inc
clc
test
mov
cmp
pop
outsl
loop
jg
cmp
pop
adc
mov
mov
js
mov
or
clc
push
dec
add
insl
ljmp
incb
in
push
mov
das
push
xchg
jne
cltd
sub
mov
dec
dec
adc
xchg
loop
jae
xchg
es
mov
or
inc
das
les
sbbl
pop
push
fcomip
div
mov
scas
fnsave
mov
lods
adc
ljmp
shlb
xor
pop
jbe
int3
outsl
jmp
imul
sarb
jmp
and
test
lods
pop
out
fisttpll
mov
cmp
cli
or
out
mov
mov
rcl
cmpsl
mov
stc
push
icebp
jne
or
mov
scas
mov
or
test
into
int
fwait
stc
or
imul
stos
adcl
push
aaa
push
sahf
pop
sbb
push
pop
mov
mov
clc
pop
aad
mov
pop
test
xchg
ret
div
and
mov
and
inc
gs
sar
sbb
cwtl
mov
es
shll
or
xchg
scas
out
scas
cmp
xchg
dec
add
jmp
outsl
mov
dec
xor
cmp
mov
push
mov
bound
sarl
dec
scas
jo
pop
mov
add
mov
sub
sbb
pop
sbb
mov
jo
sahf
out
push
and
int3
inc
mov
fmuls
mov
lahf
pop
adc
cmc
cli
shr
mov
mov
das
push
jle
mov
hlt
push
hlt
jnp
jno
jns
xor
cmpsl
add
jle
leave
mov
test
shll
mov
adc
fmuls
sbb
pop
out
cli
or
dec
jno
fiaddl
popf
sbb
dec
cwtl
pop
mov
enter
pop
push
push
add
jno
daa
shll
jp
mov
sbb
rcr
aaa
cli
pusha
xor
mov
add
aad
add
mov
jle
push
int
cmp
les
aaa
daa
cmp
inc
in
rorb
xchg
add
add
inc
loopne
add
add
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
sub
sbb
jnp
clc
pushf
jnp
std
cmpsb
sbb
out
sbb
xchg
clc
xlat
mov
mov
cli
dec
add
mov
cmpsb
pop
xchg
xor
repnz
jg
cwtl
imul
decl
dec
in
out
jecxz
inc
int3
fistpll
cltd
mov
leave
mov
test
cmpsl
fildl
or
rclw
popf
sub
loop
push
lret
adc
sub
sub
nop
out
int
cmc
ret
push
add
neg
and
jnp
pop
in
mov
xchg
bound
arpl
enter
test
adc
pop
mov
sbb
push
in
jns
cmpsl
rolb
pop
bound
adc
jne
mov
pop
add
dec
imul
dec
in
push
cs
call
dec
jns
decl
outsb
test
cltd
stos
xchg
cmpsl
movsl
pop
lods
les
subl
and
lock
dec
shlb
scas
aas
or
add
mov
inc
xor
pop
dec
xchg
inc
test
hlt
enter
pop
lods
loop
in
adc
jge
fmuls
lock
es
sbb
fisubl
mov
add
scas
cs
mov
xor
clc
lret
or
outsb
sub
imul
jae
pop
sti
outsb
in
xchg
sbb
arpl
pop
popa
out
test
jp
cwtl
iret
or
pop
push
leave
popf
jge
hlt
movsl
sahf
jne
jb
cmp
cmp
mov
push
subb
mov
jecxz
out
add
fmul
rcl
ljmp
in
outsl
loopne
je
and
or
lret
lods
jne
loop
sbb
mov
movsl
lods
clc
dec
mov
lods
pop
xchg
imul
mov
insb
stc
sbb
push
aad
add
push
xchg
fiadds
sub
pusha
std
xchg
ret
dec
jae
inc
mov
pop
sarb
cmp
loopne
jbe
lcall
nop
pushf
dec
sub
cs
fnclex
in
mov
mov
push
push
push
push
fcmovbe
cltd
cmp
pop
cmp
push
jbe
mov
cmp
mov
sti
jne
xorl
mov
xor
sub
mov
adc
clc
cmp
subl
mov
sbb
sub
les
icebp
jle
roll
jmp
jp
xchg
hlt
jecxz
addb
cmpsl
fucomip
sbb
push
xor
mov
daa
jnp
jnp
andl
and
mov
lods
sbbb
pop
rcrb
or
pop
pop
jne
dec
out
mov
or
jg
sbb
xorb
or
xchg
inc
adc
inc
and
xchg
test
jle
data16
outsl
leave
cmp
cltd
stos
jp
roll
icebp
dec
cmp
je
sbb
sub
cwtl
ret
imul
xor
aas
pop
clc
dec
int3
cmp
or
inc
fwait
addb
push
lea
cwtl
lahf
mov
jl
out
std
adc
xor
int
loope
mov
test
outsb
stos
or
xor
jne
test
fdiv
adc
mov
mov
repz
das
pop
mov
divl
pop
les
pop
gs
aam
inc
shll
pop
mov
leave
shlb
aas
push
pop
fsubp
and
insl
sub
movsl
shl
xchg
push
mov
and
andb
xor
push
mov
inc
shll
or
sub
xor
jnp
fimull
lea
and
sbb
int
jecxz
inc
dec
ficoml
inc
inc
jg
data16
dec
in
outsl
shlb
and
cmp
xor
xor
in
push
lods
lods
pop
movsb
test
loope
lds
dec
xor
mov
dec
arpl
push
or
shll
pop
and
sbb
lahf
aam
ljmp
shll
fcom
pop
jle
arpl
cmp
push
scas
stos
adc
cld
insl
sarb
xor
xor
inc
jbe
repz
cld
dec
jbe
fwait
loopne
das
shrb
lahf
push
push
les
cltd
sahf
test
or
mov
scas
andb
inc
test
dec
inc
mov
popa
dec
fcmovb
lea
push
mov
or
xchg
or
ss
mov
nop
or
jle
fcmovnb
pop
inc
xor
cli
dec
shll
mov
iret
sbb
push
jne
fisubl
pop
sub
lcall
xor
push
adc
je
pop
out
fcoms
dec
pop
cmp
dec
andb
add
cmp
or
sub
ret
insb
decl
fldenv
mov
xor
pop
out
and
cmp
aas
mov
icebp
jmp
cs
pop
loop
pop
loop
mov
pop
mov
rolb
call
ljmp
pop
rorb
mov
arpl
push
fcoml
rcl
call
in
aam
and
fsts
leave
scas
mov
sbb
xchg
mov
push
mov
push
add
inc
cmp
xchg
sbb
jbe
jle
ljmp
cmp
dec
and
or
jns
pop
pop
push
shll
shr
adc
movsb
jmp
je
adc
out
mov
cltd
xor
pop
outsl
mov
push
and
jno
add
ds
orl
pop
cmp
test
pop
ret
mov
into
icebp
dec
and
cmpsl
xorb
fistl
pop
or
add
dec
mov
sub
push
mov
adc
jbe
sbb
mov
icebp
pop
loopne
sub
adc
push
jno
lods
fidivrs
mov
rol
data16
fbstp
adcb
adc
adc
cmp
mov
lods
stos
cmpsb
pop
sbb
dec
out
mov
cmp
popa
xchg
ja
cwtl
add
repz
lods
sar
rcl
jmp
and
xchg
fcompl
adc
mov
adc
xchg
mov
dec
fstps
mov
addr16
push
movsl
loopne
rorb
xchg
pushf
mov
mov
xlat
mov
cmp
xchg
cmp
orb
add
fildll
pop
pop
jecxz
cmp
add
xor
jae
popa
mov
xchg
xorb
push
sub
adc
dec
movsb
jle
icebp
dec
adc
arpl
inc
mov
notl
sub
test
dec
dec
bound
xor
loop
jns
outsl
push
push
mov
xor
mov
std
ret
fst
ret
imul
mov
or
les
jne
pop
push
fidivrl
lahf
out
dec
push
ret
or
clc
adc
repz
and
fdivrl
rclb
mov
or
mov
daa
push
lods
enter
nop
xchg
mov
add
sbb
imulb
and
shrb
rcrb
mov
and
in
mov
pop
pop
ret
ficompl
mov
lods
xlat
mov
mov
cli
xchg
arpl
bound
inc
mov
fdivrs
rol
loop
stos
mov
pop
adc
lods
out
xchg
daa
mov
fidivl
xor
xor
jecxz
in
xchg
aas
xor
popf
scas
aas
sub
sbb
mov
or
enter
and
je
repz
dec
iret
cmp
ja
inc
je
jmp
xchg
push
sbb
loope
subb
mov
out
or
outsb
scas
aam
lret
jne
cmp
sbb
clc
insb
jb
fisubrs
xor
cltd
sbb
cmp
cmp
mov
adc
add
push
cmp
in
pop
xlat
cltd
mov
mov
repz
es
adc
mov
fwait
push
sbb
mov
rorl
rclb
push
and
mov
popa
int
shlb
sbb
adc
dec
stos
jo
sub
cmp
xchg
scas
fdivl
and
pop
lcall
cmp
aam
pop
pushf
test
loopne
xor
cmpsb
adc
jge
push
mov
test
pop
or
outsb
add
fsts
or
movsb
test
arpl
xor
push
aam
aaa
xchg
add
cmp
roll
shl
mov
lock
lcall
sub
xchg
xchg
xorl
out
sub
shl
dec
icebp
jp
cld
aaa
aaa
mov
ror
into
sbbl
nop
inc
adcb
pop
inc
les
lahf
jge
xchg
and
in
sub
pop
imul
scas
insl
div
sbb
pop
adc
push
lea
fadds
cmpsb
xor
push
sbb
sbbb
pop
aaa
cmp
inc
push
cmp
jg
scas
fisubrl
sarl
stos
add
pop
dec
mov
icebp
insl
arpl
xchg
and
dec
lret
pushf
ret
and
xor
js
or
mov
shrl
push
jl
cmp
int3
pop
jno
clc
sub
mov
mov
jb
pop
xchg
js
lret
aam
dec
add
xchg
jo
mov
mov
int
scas
inc
cld
outsb
leave
rolb
test
add
ds
sub
outsl
mov
lea
pop
fnsave
stos
add
clc
test
dec
jo
repz
mov
xchg
sbb
cmpsb
ret
push
inc
fadd
lock
data16
std
adc
shlb
push
jl
xchg
pusha
js
xor
fisttpll
movsb
popa
pop
inc
cmp
mov
pushf
lods
cmpb
push
inc
lea
and
dec
jo
insl
mov
mov
mov
enter
push
jbe
lea
divb
adcb
popf
dec
fstps
pop
xchg
ljmp
mov
ret
xor
in
test
mov
ja
xchg
sbb
das
stc
or
adc
jle
pushf
inc
jecxz
test
shll
dec
data16
mov
out
in
aas
pop
sub
jp
xchg
out
js
popa
mov
mov
lea
inc
sbb
nop
or
cmp
fidivrs
push
in
push
xorl
pusha
xchg
mov
out
xor
bound
mov
shl
mov
sub
out
mov
mov
add
jnp
aam
and
ret
xor
mov
sarb
push
out
hlt
and
ja
xor
fidivrs
aas
jbe
mov
lds
xorb
int
repnz
scas
adc
cltd
push
in
jg
dec
push
sub
lock
cmpsb
lcall
std
push
fmuls
add
push
inc
adc
mov
dec
nopw
es
cld
jmp
lcall
stc
addr16
scas
adcl
movsl
mov
cmc
push
pop
call
push
rorl
adc
sbb
bound
pop
popa
sbb
pop
adc
push
or
and
inc
mov
cmp
pushf
aad
push
pop
sub
sahf
sahf
rorl
or
cwtl
push
mov
xor
repz
adc
xlat
jge
gs
stos
dec
test
sbb
gs
cmpsb
scas
fldenv
sarb
pop
sbb
movsb
jg
test
mov
out
hlt
adc
cmpsb
jl
jb
repz
sbb
repz
jno
int3
lods
iret
or
adc
or
lods
sub
sub
enter
inc
ja
push
inc
into
fnstcw
out
daa
movsb
mov
fisubrl
mov
pop
lcall
xchg
out
rorl
ja
xchg
cli
mov
mov
xor
aas
jmp
mov
push
add
in
insb
out
out
cmpsl
mov
lea
push
and
xchg
std
popa
rorb
push
xchg
test
pop
adc
jae
push
pop
das
pop
int
adc
add
das
in
cli
jbe
pop
fdivl
lea
dec
sarb
imul
cmp
ja
lods
push
nop
ss
adc
mov
fs
pop
out
dec
pop
dec
mov
mov
int
inc
shrl
daa
push
popa
ljmp
inc
cmp
pop
ret
mov
mov
cmp
xor
inc
and
fwait
mov
shrl
pop
outsb
push
fcomp
push
fildll
ljmp
divl
sub
call
mov
arpl
clc
and
xchg
xchg
adc
adc
and
mov
nop
out
in
xor
lahf
or
rorl
pop
xchg
ficompl
aam
adc
daa
les
add
sbb
sbb
push
sub
sub
mov
stos
lock
xlat
dec
data16
pop
int
cld
ja
scas
adc
xchg
mov
ret
mov
xchg
jo
mov
outsl
imul
mov
dec
jge
and
ja
mov
and
test
push
int3
xchg
xchg
pop
mov
sbb
mov
test
push
jns
or
xchg
push
dec
pop
adc
push
fistpll
mov
sub
stos
mov
adc
pop
push
jns
test
pop
adc
insl
rolb
lret
iret
mov
les
popf
xchg
jecxz
adc
mov
push
adc
inc
adc
int3
arpl
nop
int3
push
pop
mov
stos
andl
fistpll
aaa
mov
xor
mov
xor
testl
jecxz
or
fsts
popf
mov
mov
hlt
add
mov
jl
shrl
dec
dec
movsl
mov
sub
sbb
xorb
jae
loope
xchg
pop
dec
xor
jge
imul
dec
test
orb
mov
rol
fdivs
cmp
jle
icebp
fwait
or
xor
fcoms
enter
cmc
xchg
loopne
mov
pop
fwait
adc
fstps
push
push
imul
add
mov
sbb
clc
imul
fldl
roll
daa
sub
jnp
rorl
jge
lea
gs
aad
sub
js
stos
imul
negb
pop
dec
sub
mov
ja
in
in
add
aam
add
cmp
mov
das
addr16
int
inc
lea
inc
outsb
adc
lret
xor
and
mov
sbb
mov
mov
mov
into
push
aad
enter
jle
stc
sub
jp
cmp
fwait
pop
or
push
adc
mov
cmp
rcl
mov
lods
cmc
cmpsb
pop
cmp
mov
shlb
arpl
pushf
int3
jmp
push
loopne
xor
in
pop
insb
imul
xchg
arpl
mov
sahf
daa
push
jge
incl
jecxz
xor
insb
xchg
scas
adc
mov
add
test
lock
lods
mov
dec
xchg
push
out
leave
jnp
mov
imul
pop
dec
cmp
sub
les
xor
jl
cwtl
fidivl
push
cmp
arpl
cwtl
clc
cmp
add
adc
mov
and
jge
addr16
pop
mov
out
jmp
xchg
sub
das
ja
adc
movsb
mov
addb
cmpsb
rcrb
rcrb
mov
and
fadds
or
js
xchg
adc
cmpb
clc
shrb
roll
scas
sbb
imul
xchg
les
adc
lea
shrl
sbb
xchg
push
mov
inc
pop
jge
xor
or
adc
and
rcl
mov
adc
push
cs
lret
ss
mov
in
mov
test
sahf
aas
sub
adc
push
call
cmpsl
mov
adc
dec
icebp
sbb
sbb
cltd
shll
test
xchg
lret
orb
addr16
jnp
mov
cmp
fdivrp
push
sub
in
shll
push
pop
xchg
dec
dec
mov
add
js
mov
push
fimuls
test
lods
insb
shrb
in
push
cmc
fmuls
xchg
cli
mov
movsl
imul
sub
gs
cmp
jo
pop
mov
jbe
adc
xlat
pop
daa
ds
lret
aad
leave
add
mov
les
dec
push
jge
lret
mov
push
stc
sbb
repz
stc
jns
popf
add
movsl
cmp
inc
xchg
push
sub
inc
sub
xchg
pop
pop
iret
fsubrl
movsl
pop
dec
push
mov
loopne
push
and
pop
outsl
aaa
jp
jb
shll
pop
notb
mov
pop
pop
in
cwtl
mov
mov
jle
shl
cmc
loopne
fs
inc
arpl
call
push
aaa
ds
mov
xchg
mov
adc
add
adc
pop
push
xchg
mull
or
pop
fs
in
lahf
and
loop
cmc
fcompl
dec
or
pop
dec
ss
fldl
fdivrl
push
jns
xchg
add
xor
out
pop
push
insl
mov
orb
push
fsubrp
push
leave
addr16
test
xchg
in
jbe
pusha
rcll
mov
movsl
xchg
loop
pop
movsl
aas
rcrb
pusha
xchg
loope
ret
dec
incb
mov
je
ja
xchg
loopne
into
adc
or
sub
inc
iret
or
fcomps
test
jns
or
mov
xchg
cmp
lret
add
je
or
add
inc
stos
jg
rcrl
dec
mov
push
cmp
sar
cld
test
sarb
jo
cmp
je
cli
insl
hlt
adc
jmp
xchg
and
divb
xor
fnsave
std
cli
fstps
pusha
mov
out
je
int
in
or
cmp
add
sbb
mov
iret
insb
hlt
sub
int3
lods
xor
mov
push
inc
xchg
aaa
and
cmp
inc
jecxz
loop
dec
ficompl
das
push
push
mov
sbb
xor
sahf
adc
add
out
push
mov
jae
enter
dec
xchg
pop
jecxz
rol
loop
xlat
mov
mov
pop
sti
lret
sbb
push
mov
movsl
popl
mov
decl
jae
sub
mov
add
outsb
jge
inc
xchg
out
pop
dec
adc
sbb
cltd
mov
push
cld
enter
adc
jb
sbb
cmp
outsl
and
imul
aas
lcall
imul
mov
pushf
lock
xor
sbb
pop
loope
xor
cmpsb
popf
ret
mov
pop
mov
or
xchg
mov
scas
add
mov
jns
shlb
dec
out
scas
jne
mov
imul
enter
cmp
stos
rcr
sbb
xchg
xchg
leave
test
pop
pusha
dec
mov
movb
gs
mov
inc
int3
jmp
xchg
aam
lock
enter
repz
ss
sbb
pop
fildll
or
and
push
sbb
mov
pop
test
lods
mov
outsb
rclb
cld
mov
xchg
test
rorl
add
dec
lds
fs
adc
fistps
add
inc
mov
les
xor
insb
sbb
sub
xlat
pop
sti
push
pop
inc
sub
dec
in
scas
adc
mov
xchg
arpl
inc
lea
mov
xor
push
add
inc
adc
or
mov
lcall
add
mov
mov
add
lcall
push
shlb
push
sub
lods
outsl
adc
sub
ret
jp
adc
aaa
inc
push
or
xor
inc
ret
and
jge
dec
or
mov
and
add
dec
pop
mov
iret
pop
pop
add
xorl
mov
jg
inc
jae
stos
cli
inc
imul
pop
out
pushf
mov
negl
cmp
sub
movsb
out
jle
in
or
sbb
or
xchg
push
or
push
mov
pop
inc
fbstp
fisubrs
int
cmp
cmp
push
add
xchg
in
outsb
pop
out
inc
iret
jle
sbb
clc
das
adc
dec
cmpsb
hlt
jns
es
fisubl
add
rcrl
adc
sub
sub
pop
imul
inc
in
mov
mov
stos
dec
ss
dec
mov
ja
scas
call
jl
jnp
insl
or
subl
jns
jle
ret
gs
sub
lcall
shr
fucomip
adc
popa
mov
or
test
inc
mov
dec
or
sub
xchg
xor
cmp
dec
hlt
dec
mov
je
add
insl
sbb
mov
cwtl
jmp
fwait
lods
xchg
add
mov
mov
mov
ja
push
xor
inc
gs
imul
mov
gs
add
add
aad
roll
in
testl
in
das
addb
test
mov
push
jmp
pop
icebp
lock
sarl
lcall
shl
pop
or
pusha
mov
jecxz
and
mov
iret
aam
cmpsb
xchg
mov
lock
sbb
mov
mov
dec
sub
jae
gs
lock
icebp
out
xchg
in
shlb
push
xchg
xor
cmpsl
popa
mov
stos
xchg
jo
data16
rolb
scas
out
or
pop
pminsw
dec
inc
mov
lret
fidivs
mul
mov
push
cmp
insl
push
sbb
sahf
imul
js
xor
mov
push
out
decl
dec
pop
and
insb
shrb
jno
push
fcom
add
ja
aam
dec
and
scas
cli
push
scas
shll
dec
inc
push
mov
enter
rcrl
roll
jl
lock
mov
in
pop
leave
idivb
test
movsl
jp
jp
mov
popf
pushf
insb
les
xchg
add
mov
adc
popa
push
cmp
test
pop
addb
jae
out
aad
jmp
jae
shl
mov
sub
sbb
inc
add
lcall
repnz
jp
cs
pop
or
jns
insl
xchg
cmp
repz
xchg
call
dec
jne
daa
xchg
lcall
add
sbb
popf
pop
clc
lret
inc
popf
fildll
jmp
fsts
jle
loop
popf
xor
push
xor
mov
mov
addr16
test
sbb
data16
adc
fisttpl
push
mov
inc
in
fwait
cmpb
mov
ja
orb
push
in
adc
pop
fdivl
outsl
cmp
imul
repnz
cmpl
in
mov
mov
adc
ss
sub
and
sub
mov
cmp
negb
mov
shrl
testl
inc
dec
adc
jecxz
subl
enter
dec
push
fldcw
loop
jp
pop
mov
adc
test
lods
movsb
popa
repz
mov
jle
pop
dec
fdivl
test
mov
addr16
xchg
sub
xor
mov
lcall
int3
push
mov
inc
inc
cmc
and
jno
jno
and
out
aam
xor
inc
sbbl
xchg
mov
jnp
sub
mov
rolb
jns
pop
addl
or
nop
mov
mov
inc
dec
mov
in
adc
and
dec
ljmp
dec
int3
cmp
adc
nop
push
ficompl
cmp
mov
loopne
jp
push
and
leave
adc
jl
mov
clc
mov
cmc
or
aam
fcomps
int
adc
hlt
test
xor
push
and
mov
shl
call
scas
sbb
imul
add
hlt
jae
jo
adc
add
lahf
jg
jns
iret
arpl
arpl
xor
mov
mov
push
mov
fsubrs
and
inc
test
jmp
iret
xor
addr16
ds
daa
sub
mov
lea
dec
dec
mov
and
inc
jmp
sub
hlt
sub
aad
jbe
fisubrs
jns
xor
jnp
sbb
notl
cmp
jmp
mov
adc
jecxz
and
ss
cmpsb
popa
inc
mov
push
mov
imul
mov
out
xor
xor
ljmp
test
cld
cmpsb
in
inc
ja
out
cmp
add
inc
or
incb
dec
popa
bound
cli
lret
cmp
lods
incl
shlb
jmp
imul
inc
dec
rcr
in
out
loopne
gs
out
cmp
mov
jg
insl
and
daa
mov
daa
xchg
popa
stos
xor
mov
xchg
test
mov
jmp
pushf
xchg
mov
je
loope
pop
in
mov
clc
mov
out
cmp
mov
sub
cwtl
dec
enter
negl
xchg
daa
mov
jle
std
sbb
sbb
jg
subb
or
and
rolb
jmp
mov
xchg
enter
sub
dec
mov
fcomp
stc
test
mov
xchg
mov
out
jl
mov
test
dec
mov
and
in
out
inc
cmp
pop
adc
imul
inc
lds
pusha
push
test
negb
cmp
dec
mov
in
insl
mov
add
xchg
jp
popa
xorb
gs
jmp
lods
jb
mov
sti
pop
fwait
add
jnp
jmp
cmp
in
mov
push
xchg
push
in
stc
fiaddl
cmp
push
mov
add
pop
mov
ret
jp
push
sub
lock
xchg
das
sbb
pushf
sbbb
xchg
inc
sub
jne
xchg
mov
lea
lods
jmp
xchg
data16
pop
jns
fsub
mov
xor
mov
fnstsw
hlt
xor
and
sub
aaa
sbb
xchg
sbb
jmp
mov
loope
cmp
fiaddl
adc
nop
mov
jo
js
sbb
nop
push
orl
iret
mov
jecxz
mov
cmp
in
pushf
out
lods
mov
or
std
jb
mov
in
test
incb
push
ja
mov
jmp
xorl
and
fmull
xor
in
les
leave
mov
xor
xchg
fstps
cmp
cmp
cli
js
cmp
cmp
xor
shl
ljmp
xchg
xor
or
push
and
outsl
ror
sub
mov
dec
inc
jo
mov
ja
ret
les
and
fiaddl
xor
adc
or
cli
jae
inc
daa
jnp
push
lods
lret
pop
leave
jne
mov
jmp
add
int3
outsl
and
fs
mov
mov
push
adc
adc
cmp
and
push
inc
jae
or
adc
ret
pop
sub
inc
jmp
aam
cmpsl
hlt
inc
std
add
and
nop
into
xor
outsb
xor
pop
js
adc
sbb
ror
mov
std
xor
cmp
and
sub
push
jl
std
fucom
jbe
mov
shl
loop
adcl
xchg
dec
lret
xchg
cmp
mov
shll
mov
out
popf
mov
pop
daa
adc
stc
lahf
pop
mov
or
es
cmp
leave
cmp
mov
cmc
enter
and
int3
adc
mov
cmpsl
stc
lock
in
xor
dec
out
adc
or
push
and
lcall
or
mov
pminub
mov
jns
xor
ja
out
sub
das
jno
add
nop
test
cli
mov
jl
subl
or
imul
adc
and
aad
shl
dec
mov
in
arpl
cli
xorb
cmpsl
mov
jno
pop
dec
cli
mov
xchg
imul
inc
sbb
cmp
push
cmovp
mov
int
mov
movsb
lret
mov
or
popa
cld
aam
lods
aaa
xor
xchg
cmpsl
inc
hlt
cs
mov
and
sbb
fs
jb
pop
negb
jl
sbb
xchg
repz
mov
rcll
mov
in
popf
lods
xor
mov
fdivrp
icebp
loopne
mov
push
cld
or
push
pshufw
lcall
inc
mov
outsl
imul
dec
jl
push
inc
sahf
clc
loop
aaa
pop
xchg
jnp
cwtl
push
push
out
inc
pop
cmpsl
push
push
jbe
shl
xchg
push
ss
test
xchg
sub
add
fisttpl
in
insb
jns
lahf
int
pusha
xor
mov
sahf
mov
int3
push
jg
outsb
or
pusha
movb
sub
xchg
inc
loope
incb
testb
hlt
and
mov
jne
cmp
test
subb
push
push
scas
mov
std
aam
pop
add
bound
cmpsb
mov
jae
adc
mov
mov
inc
xor
dec
jns
xor
scas
xchg
rcr
repz
repz
jbe
cmp
pop
rorb
push
jbe
or
mov
inc
fidivrl
out
stos
push
and
ss
test
in
addr16
inc
cli
hlt
sub
push
push
hlt
iret
cwtl
xor
ja
dec
jl
xchg
orb
pop
in
out
cwtl
sub
cmp
mov
ja
scas
int
jecxz
sub
dec
pop
fistps
rolb
shlb
popf
movsb
test
fldl
mov
mov
iret
mov
jo
jae
xchg
mov
test
ljmp
pop
mov
and
sahf
ror
lds
stos
cmc
gs
lret
xor
add
jmp
notb
add
cmpsl
inc
enter
xor
ficoms
jnp
out
xchg
sub
aam
push
mov
jbe
and
mov
shll
test
icebp
roll
aad
dec
enter
and
inc
push
sbb
adc
mov
sub
push
cld
lea
and
mov
push
pop
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
les
cmp
out
push
inc
mov
xchg
ss
addr16
mov
sbb
mov
les
enter
ret
xchg
out
sub
bound
push
sub
sub
push
lret
cmp
push
mov
cs
push
fisubrl
mov
and
shrl
int
or
xlat
pop
lcall
call
push
mov
test
fwait
add
push
fcompl
mov
jge,pn
out
jae
lods
add
popf
pop
add
jmp
jg
mov
mov
pop
bound
push
in
popf
jmp
and
hlt
or
lahf
push
outsb
daa
inc
mov
inc
xchg
int3
insl
mov
push
ja
xor
add
push
lds
xchg
push
jns
xchg
sahf
std
xor
fisttpll
xor
outsb
jge
jle
bound
popa
sahf
inc
pop
or
out
and
mov
ja
out
mov
rol
cld
mov
repz
in
repz
mov
cmc
dec
sbb
nop
mov
sub
jne
out
into
mov
mov
outsl
sbb
icebp
dec
push
lods
adcl
cltd
add
mov
xor
gs
mov
mov
fsts
push
addb
jp
mul
fdivs
jne
adc
and
mov
nop
sub
xchg
fsub
es
mov
inc
fdivl
ret
and
in
or
jg
arpl
arpl
lds
test
gs
scas
sub
dec
inc
push
enter
push
mov
cmp
mov
mov
les
mov
sub
push
mov
pop
sbb
data16
test
push
mov
lods
pop
and
inc
jbe
mov
push
sub
movl
cmp
sbb
bound
push
imul
fcoml
arpl
pop
pusha
ret
and
imul
mov
in
insb
mov
inc
xchg
in
scas
mov
sub
xor
jl
dec
ja
push
pop
lds
rclb
sbb
mov
pop
push
add
and
xor
dec
inc
push
leave
xchg
les
in
dec
movsl
pop
push
sarb
sub
insb
lea
sbb
or
xor
inc
sub
loop
movsb
stos
fs
xchg
mov
sub
xchg
lahf
push
sbb
movsb
mov
std
dec
enter
test
call
shl
es
test
mov
mov
jmp
scas
dec
add
daa
adc
rcrb
dec
push
cltd
xlat
ss
lcall
std
jmp
push
inc
sar
mov
mov
or
loope
jmp
inc
mov
or
outsl
shrl
xor
xchg
inc
aad
dec
popa
out
push
test
mov
jb
int
mov
jne
adc
cmp
sbb
lret
xchg
mov
mov
mov
jb
mov
js
aam
mov
pop
ljmp
cltd
rol
leave
mov
mov
inc
or
xchg
pop
neg
sbb
jne
mov
add
lods
add
dec
add
rcl
sbb
fidivrs
in
jmp
or
stos
les
lds
jl
cmp
xchg
je
add
pop
lcall
sbb
or
and
in
push
mov
add
add
andl
mov
cmp
mov
bound
inc
adc
in
xor
add
aaa
adc
xor
jge
and
xor
jp
sbb
outsb
lods
lods
dec
xchg
push
rolb
sbb
push
fwait
int
sbb
les
out
pop
mov
adc
insl
sub
lock
cmp
pop
outsb
pop
sti
jmp
cmp
xchg
sbb
pop
xlat
in
in
mov
sub
sub
adc
loopne
into
imulb
loope
shll
lods
loope
jns
mov
xchg
mov
push
hlt
mov
sbb
push
inc
jnp
mov
insl
fstpl
in
cmpsl
mov
aam
push
mov
loopne
mov
mov
mov
xlat
fnstenv
or
xchg
popf
and
jle
fst
mov
inc
push
mov
sbb
sbb
loop
mov
scas
inc
or
mulb
jae
inc
mov
popa
out
push
jo
lea
test
popa
les
inc
pop
mov
lret
inc
mov
and
sbb
sbb
fcoml
xor
xlat
jno
add
sbb
sbb
fstpt
pop
movsl
pop
mov
popf
xchg
std
or
sqrtps
mov
les
xchg
femms
sbb
fistpll
cltd
xor
cmc
mov
daa
xor
sub
cwtl
ret
pushf
aam
add
stos
clc
call
add
jmp
ficompl
clc
es
gs
pop
xchg
pop
cmp
ficoml
xlat
mov
cmpsl
dec
add
loope
out
fmul
sub
xchg
pushf
dec
enter
lds
push
adc
daa
sarl
push
clc
les
imul
xorl
mov
mov
imul
push
push
addr16
gs
mov
mov
push
adc
aas
repz
sbbl
dec
rorb
pop
sbb
jecxz
rorb
push
sar
pop
mov
call
mov
stos
popa
adc
shlb
jg
jecxz
add
lret
sub
das
rcrb
mov
dec
jbe
pushf
sub
loopne
outsl
pop
int3
mov
xchg
int3
pop
jmp
pop
inc
adc
cmp
add
repnz
rep
and
ja
push
fstps
or
inc
sbb
mov
inc
cli
adc
cwtl
popf
jp
call
sbb
aaa
jmp
lfs
dec
ss
add
cld
daa
mov
pop
mov
mov
mull
das
mov
cmp
mov
xchg
call
icebp
sarb
cld
hlt
or
jb
cmpsb
jg
mov
pop
faddl
sbb
push
movsb
fadds
ljmp
sbb
call
dec
out
mov
into
pop
sub
dec
shll
pop
or
add
add
mov
stos
sub
mov
sub
icebp
test
mov
repz
sarb
int3
imul
xlat
cmpsl
mov
pop
cmc
inc
or
mov
xor
or
sahf
mov
xor
in
in
cmpsl
fnsave
xchg
nop
jp
repz
sti
push
lret
jbe
std
test
push
fwait
lods
xchg
or
pop
or
lahf
or
dec
daa
scas
xor
adc
stc
cmpsl
cmc
stos
jge
dec
fidivs
xchg
mov
lcall
push
or
fs
xchg
mov
xor
cmp
add
shlb
popa
cmpsb
xor
dec
imul
cmp
lcall
das
xchg
repz
cld
xchg
in
movsl
lahf
sub
jecxz
mov
fidivl
jg
fstpl
jbe
pop
int3
movsb
pop
sahf
test
mov
sub
jae
add
mov
and
cli
adc
insb
hlt
mov
mov
repnz
sub
pop
bound
push
inc
decb
in
push
push
mov
jge
shll
repnz
aad
aad
ljmp
fnstcw
jle
jae
mov
mulb
lret
xchg
and
jo
out
out
jg
jns
adc
pop
or
xor
inc
in
lret
test
out
dec
xchg
repnz
addb
cmp
xchg
mov
mov
pop
add
pop
mov
or
pop
and
iret
pop
xchg
jae
add
cmp
pop
int
or
jb
jns
subb
xchg
in
fbstp
push
xor
mov
iret
outsb
push
add
clc
xchg
mov
inc
popl
data16
lea
stos
and
rol
sar
imulb
rcrb
pusha
out
cmpsl
or
adc
mov
sar
adc
jle
mov
cltd
fdivr
dec
ret
mov
rcrb
fmull
scas
outsb
fwait
sahf
jmp
dec
mov
cltd
popf
pop
pop
lcall
pop
mov
mov
add
leave
test
mov
or
mov
lret
stos
out
rcr
insb
sbb
or
and
cmpsb
mov
aaa
out
push
fstl
scas
fbld
icebp
pop
fsubrs
cmp
ficoml
movsb
jl
shll
add
adc
scas
dec
fldenv
and
test
test
or
and
pop
stos
dec
xchg
mov
loop
mov
je
stos
clc
sbb
add
jecxz
scas
icebp
and
jbe
out
out
or
jo
rcrl
or
lret
dec
test
test
pushf
cld
mov
fstps
xchg
int
dec
rcr
lret
cltd
push
lret
js
xchg
or
loope
pop
cmp
lock
sbbb
mov
shlb
dec
notb
jmp
aad
aaa
movl
imul
cmpsl
fnsave
adc
lahf
aas
cmp
rol
aas
jmp
fwait
jno
sti
call
inc
jno
mov
out
out
and
lea
push
nop
popf
das
les
scas
push
ret
stos
sbb
int
pusha
inc
jmp
insb
add
sub
push
and
in
push
sti
cmp
mov
push
imul
ror
cmp
insb
dec
sahf
outsl
les
test
adc
pop
and
adc
dec
xchg
cmc
sbb
jp
inc
adc
xchg
and
xor
aam
jns
xor
mov
and
imul
pop
enter
js
sahf
fsubrs
aad
pusha
out
xchg
mov
stos
in
adc
xchg
dec
add
xchg
std
and
jno
cld
push
add
mov
into
aas
pop
inc
and
bound
je
test
jp
cli
pop
mov
sti
mov
sarl
lock
cmc
xor
aaa
cmp
dec
mov
scas
and
push
mov
cld
xchg
int3
aas
xchg
in
adc
jl
push
pop
jl
pop
insl
out
shrb
lahf
pop
cmpsb
test
cli
int
xor
fidivrs
xlat
sub
mov
iret
xchg
sahf
lds
mov
and
aad
xor
fs
aam
xlat
enter
xlat
dec
loope
and
cmp
in
mov
sti
lods
jmp
sub
mov
mov
rorb
mov
xor
icebp
and
or
sti
pop
sub
aam
notl
mov
outsb
shl
jmp
js
fisttpl
int3
push
movsb
out
jl
dec
lcall
pop
cmp
int
push
mov
or
cmp
inc
jnp
out
loop
fwait
lea
dec
pop
add
sub
mov
xchg
aaa
out
jo
push
roll
and
cmp
shlb
stos
pusha
xchg
loopne
xchg
jno
sbb
mov
das
scas
push
loop
dec
adc
fstpt
dec
sub
shrl
pop
jb
pop
iret
adc
in
imul
daa
leave
mov
dec
ds
or
or
daa
jno
pop
cmp
std
and
inc
mov
xchg
scas
out
fs
dec
mov
ja
dec
inc
das
je
fdivrl
popa
add
sbb
mov
in
xchg
add
mov
fstps
js
dec
hlt
lcall
repz
das
xchg
mov
or
pop
notl
xor
xchg
cmc
push
pop
and
jmp
ja
jmp
nop
push
adc
xchg
sahf
jae
das
xchg
jo
out
dec
adc
sbb
loop
sub
fmuls
subl
add
leave
and
rcrl
push
add
lods
mov
inc
repz
subb
out
pop
imul
or
mov
add
fwait
call
cli
aaa
lock
mov
xlat
loope
jb
and
mov
and
outsl
in
mov
jg
ja
sbb
adc
adc
xor
mov
repz
inc
jne
xchg
fwait
sbb
inc
loopne
sbb
pop
sbb
in
fstpt
dec
xchg
sbb
sbb
mov
rcrb
stos
pop
orl
inc
jnp
xchg
aaa
mov
inc
mov
jg
jecxz
jae
lods
mov
clc
mov
jp
pop
test
inc
jg,pn
push
xor
dec
imul
inc
test
lods
xchg
xchg
xchg
xchg
xchg
arpl
adc
xorl
insb
jle
sub
filds
ror
pop
inc
gs
mov
loop
dec
faddl
sbb
enter
and
and
push
aas
lret
xchg
addr16
sub
add
push
sub
xchg
inc
dec
mov
sahf
pop
or
and
iret
stos
jecxz
daa
ja
pop
into
lret
xor
or
add
std
shrb
jg
test
sub
inc
add
inc
cld
mov
mov
lret
mov
popa
cmp
aas
xchg
pushf
daa
xchg
xchg
jge
mov
mov
and
jne
jecxz
std
jo
push
push
xchg
jno
or
add
leave
pushf
loopne,pn
mov
push
test
shrb
cmp
jecxz
mov
adc
push
jg
je
adcl
or
mov
dec
xchg
sub
sub
test
xchg
adc
scas
cmp
inc
pushf
lret
mov
insl
iret
imull
mov
xor
mov
pop
cmp
xchg
mov
out
loop
cld
clc
mov
jmp
cmpsb
pop
pop
pop
pop
and
xchg
ds
iret
pop
je
dec
addr16
push
aaa
inc
repnz
adc
leave
fsubrl
sbb
inc
fadd
movsb
test
mov
ret
das
ljmp
stos
cmp
sbb
inc
jmp
adc
repz
add
cltd
sbb
insl
xor
mov
aas
xor
mov
jae
fs
xor
loopne
daa
push
shlb
cmp
std
dec
std
pop
outsb
dec
sbb
pop
stc
adc
stc
popf
lret
sbb
lahf
in
xchg
rcrl
mov
jecxz
add
pop
adc
jecxz
cmpsl
lods
inc
pop
aam
in
mov
adcb
or
pop
adc
mov
xor
hlt
cli
into
jns
mov
insb
mov
pop
jo
xor
jle
and
sub
jno
dec
loopne
inc
or
mov
push
shlb
scas
xlat
fs
pop
sahf
push
pusha
cmpsl
mov
mov
imul
jmp
sub
test
cmp
push
cld
mov
mov
cs
jae
jo
jecxz
outsb
and
enter
or
adc
jmp
pop
xor
mov
mov
jecxz
sahf
pop
lea
adc
movsl
xor
jbe
mov
movsl
cli
repz
dec
mov
mov
movsl
push
pop
ficompl
adc
lds
sub
shl
pop
push
stos
xchg
push
pop
and
mov
les
stc
inc
pop
pop
repnz
pop
push
dec
mov
jo
push
test
cmp
out
jne
in
rol
mov
add
pop
push
sbbb
mov
cmpsb
pop
sub
dec
andl
roll
inc
or
scas
mov
add
clc
fs
sub
xor
aad
xchg
jbe
hlt
andl
cli
cmpsb
push
test
addr16
stos
pusha
in
sti
jo
or
inc
xchg
iret
aad
lods
xlat
lock
test
sahf
cmc
mov
test
adc
adc
enter
cmp
in
addr16
stos
fs
jecxz
xor
movsb
repz
jbe
lods
loop
movsl
out
int3
dec
xor
dec
sbbl
jle
and
into
test
and
and
shl
jmp
iret
mov
loop
inc
jp
add
adc
cld
mov
fists
shll
push
in
icebp
stos
scas
test
in
add
leave
inc
stos
clc
sbb
out
arpl
dec
sti
inc
out
mov
loop
out
xchg
aaa
test
test
push
stc
and
inc
repnz
repz
stos
gs
ds
cs
mov
fldenv
mov
jne
inc
add
mov
in
rcrl
push
orps
mov
and
cmp
rcl
sub
lret
xchg
out
and
out
stos
mov
enter
sbb
jbe
mov
add
jl
push
in
sbb
pop
inc
sub
mov
shrl
jns
xchg
outsb
cmp
cmp
jno
mov
lods
pop
cmpxchg
adc
add
jl
add
pop
iret
fwait
mov
shrb
into
mov
rcrb
cmp
add
push
es
pop
mov
addl
jg
das
movsb
movsb
sbbb
push
jg
jne
sub
gs
mov
ffree
push
cltd
std
mov
inc
jp
mov
inc
testb
push
shll
pop
xor
adc
pop
lahf
dec
mov
pusha
clc
xchg
inc
mov
xbegin
clc
push
xrelease
cmpsl
imul
es
call
jno
adc
sti
xchg
mov
lea
mov
mov
xchg
call
mov
jnp
jg
scas
and
ja
rcrl
push
adc
lods
jmp
adc
adc
jmp
ficompl
dec
into
add
jbe
dec
std
sarl
loop
cwtl
xor
lock
popa
loope
in
sub
jl
push
xor
jns
sub
pusha
rorb
pushf
stos
popf
push
out
cmpsl
cwtl
ret
push
mov
outsl
jns
iret
das
ja
xchg
pushf
mov
es
idivb
shll
xor
inc
pushl
sub
stos
loopne
push
nop
pop
imul
aad
sbb
test
cmpsl
xorl
into
lods
lahf
nop
sahf
add
push
cmp
pop
and
push
pop
sub
and
call
ljmp
mov
bnd
xor
fisttpll
scas
jp
push
push
shlb
pop
mov
add
pushf
cmpsl
mov
aas
aad
cmp
in
xor
mov
insb
xchg
and
push
in
pop
lea
pop
sarl
xchg
stos
jno
das
jne
inc
jnp
jmp
and
leave
out
pop
test
mov
push
inc
add
imul
xchg
leave
add
dec
nop
adc
lods
call
xchg
lcall
and
jae
stos
aam
mov
leave
sar
jge
rcll
mov
std
in
ret
cmp
jns
xor
lret
pop
mov
outsl
imul
enter
adc
gs
xrelease
or
mov
cs
pop
xor
jle
repnz
outsb
dec
imul
and
cltd
adc
pop
and
shl
or
xchg
dec
add
stc
lahf
gs
pop
daa
int
and
jecxz
xchg
adc
push
xchg
les
test
sub
dec
jmp
out
out
ljmp
in
sub
cwtl
or
mov
leave
outsb
cmp
repz
fiadds
stos
pop
leave
icebp
or
sbb
shll
cs
xchg
hlt
mov
jb
xchg
add
dec
subl
fdivrl
jg
pop
jnp
bound
lahf
mov
jge
mov
pop
push
push
jge
cmp
lods
fistpl
or
mov
iret
in
ss
bound
xor
mov
movsl
push
fimull
jns
push
xchg
xchg
mov
shlb
cmp
popf
loopne
dec
inc
push
popa
add
jp
int3
inc
in
addr16
and
xchg
pop
js
into
ret
icebp
push
inc
stos
xlat
jle
lods
xor
aaa
sbb
sbb
or
pop
cmpsb
cltd
add
cmp
or
out
push
lods
call
int
lea
cltd
ja
dec
rolb
dec
inc
cmp
mov
pusha
fists
or
xlat
mov
enter
outsb
popf
jns
xchg
jb
pop
arpl
es
inc
std
outsl
jg
mov
jl
mov
or
xlat
notb
and
scas
or
xchg
xor
out
pop
sahf
cmpsb
push
and
push
icebp
call
mov
jl
add
dec
call
inc
fcoms
jecxz
mov
adc
mov
movsb
cwtl
jp
push
push
rcll
mov
das
lods
movsl
add
mov
jl
popf
push
addr16
je
cmpsl
or
jb
sbb
or
mov
rcrl
adc
out
xchg
add
ret
mov
scas
mov
fstpl
shll
pop
add
inc
mov
addr16
sbbb
cmpl
aaa
rcll
mov
or
or
xor
imulb
jl
mov
inc
cmpsl
cmp
movsb
mov
sub
add
jecxz
xlat
ret
add
pop
jmp
cmpsl
xchg
xchg
inc
shll
pop
ret
mov
cmpsl
orb
pop
dec
js
sti
stos
orl
dec
lar
push
repz
andl
sbb
pop
lods
or
jnp
push
lcall
out
jo
jle
push
cmp
stos
cltd
testb
fdivrl
push
adc
nop
sbb
lea
add
mov
fcompl
aad
xor
adc
mov
inc
jne
mov
push
mov
pop
mov
stos
or
movsb
in
jle
xor
aaa
mov
in
mov
sarb
mov
jo
jns
sub
mov
jp
mov
add
stos
mov
cwtl
sbb
js
test
fwait
lcall
addr16
jns
xor
movsb
neg
jg
add
cmc
pop
in
fwait
pusha
repz
cmc
jbe
cmp
gs
mov
jle
cmp
adc
xlat
cli
insb
push
jo
push
or
loopne
enter
and
xor
out
mov
adc
cmpsl
push
mov
addl
sahf
push
ds
jae
repz
out
nop
iret
adc
repnz
mov
inc
jb
ficomps
enter
inc
xchg
frstor
cmp
xchg
cmp
or
std
jl
cld
push
mov
sbb
movsl
cmp
gs
sar
sbb
fnstenv
xor
mov
fildl
sub
jge
negb
rorl
add
fcomps
mov
movsb
loope
mov
int
adc
xor
push
cltd
repz
dec
mov
ljmp
mov
or
pop
sub
xlat
arpl
gs
jl
push
clc
or
mov
jecxz
adc
test
and
dec
xorb
jb
repz
test
adc
ljmp
daa
xor
jo
pop
pop
mov
stc
dec
mov
cmp
int3
or
es
jns
ss
shrl
mov
jns
mov
inc
cmpsl
aas
scas
xor
test
dec
movsb
sbb
push
inc
inc
cs
sbb
dec
mov
jo
cmp
ja
ror
jno
jo
jb
lret
movsl
push
repz
or
cmpsl
mov
jle
mov
shll
adc
jnp
dec
in
in
call
pop
push
aaa
faddl
jne
sbb
dec
pop
setg
mov
movsb
lahf
scas
sti
in
jne
sbb
cwtl
ljmp
jg
mov
daa
sbb
aam
test
push
lret
inc
adc
xchg
mov
in
mov
lock
sbb
xchg
mov
lahf
sbb
pop
scas
es
cwtl
es
subl
sub
mov
call
adc
cmp
mov
cmpsl
lret
hlt
es
dec
inc
pop
insw
outsb
push
inc
add
mov
outsb
in
mov
jl
sbb
mov
fwait
push
icebp
cli
sub
les
add
mov
mov
sbb
mov
icebp
gs
xchg
mov
push
and
and
sti
fidivl
bound
push
push
sub
or
adc
into
imul
cmp
aaa
mov
pop
mull
cmp
scas
mov
mov
or
mov
bound
and
imul
sbb
mov
scas
xlat
pop
xchg
data16
mov
lahf
push
test
clc
or
mov
repz
cmpsb
push
mov
pop
into
dec
jge
jp
cmp
jl
mov
inc
enter
imul
pop
sbb
fldenv
pop
mov
sti
jge
stc
mov
cmp
mov
stos
lret
aaa
xchg
aam
call
sbb
jo
mov
sub
cwtl
jg
xorb
push
into
leave
fimuls
rorb
jmp
sbb
data16
faddl
imul
push
aaa
fstl
pushf
add
stos
fsubrs
lcall
data16
js
pop
outsb
test
lods
fcoms
pop
es
outsb
mov
sbbb
imul
mov
inc
xchg
adc
lcall
orb
pop
cmp
and
gs
sarb
out
out
lods
cmp
aaa
das
mov
dec
lret
out
nop
int
adc
int
cmpsl
ss
inc
out
push
loope
popa
push
ret
fwait
sti
cltd
sbb
jl
dec
sub
sub
popf
xchg
mov
ret
cmpsb
imul
ret
add
es
arpl
or
cltd
into
sbb
enter
ljmp
dec
add
nop
pushf
aaa
adc
and
loop
lods
push
jge
in
dec
or
inc
and
and
inc
enter
clc
call
fstpt
sbb
sub
movsl
mov
pop
mov
aas
jae
cmc
jns
popf
mov
movsb
push
insl
data16
pop
hlt
xor
scas
mov
sub
add
sub
repnz
and
inc
jbe
jno
push
lret
pop
call
and
fiadds
cmc
test
mov
add
inc
subl
cltd
subl
test
sti
pop
dec
xor
ss
adc
or
inc
dec
mov
inc
js
jge
cli
addr16
inc
and
shlb
xlat
jl
cmp
cld
aam
add
cmp
pop
std
sub
out
cmp
mov
cmpsl
insb
in
repnz
mov
jae
repnz
inc
push
sub
lret
cmp
movsl
cld
xor
push
leave
mov
repnz
mov
push
ret
xor
jo
das
jmp
insl
cmp
push
jecxz
sbb
scas
xchg
and
rclb
fmuls
adc
out
jg
das
arpl
in
inc
cmp
mov
push
sub
aas
and
mov
fstps
cltd
adc
cmp
int
int3
fcmovnbe
sbb
xchg
mov
mov
jns
imul
fs
mov
mov
xlat
dec
outsb
push
adc
jmp
cmp
es
mov
pop
movsl
or
add
out
or
imulb
push
insb
pop
mov
call
imul
mov
lahf
psllw
inc
scas
repz
sub
lods
out
loope
mov
inc
pop
and
test
cltd
and
and
sbb
cmc
ret
stc
dec
test
sti
xchg
xchg
pop
jg
pop
cmc
punpckhdq
mov
fcoml
sarb
xchg
mov
add
jmp
cmp
jmp
jne
enter
cmp
nop
dec
nop
push
jb
nopl
mov
test
or
pop
push
call
test
mov
fstps
insl
push
test
mov
adc
gs
push
icebp
movsb
jnp
push
dec
mov
jmp
insb
sub
jns
jle
add
fisttps
iret
mov
inc
pushaw
push
fcoms
stos
stc
dec
sub
mov
fwait
push
pop
mov
cli
lcall
mov
jo
out
dec
test
loop
rcrl
jecxz
xchg
pusha
sub
inc
hlt
shl
sub
and
pop
adc
nop
cmp
dec
aas
je
mov
xchg
movsl
pop
xchg
outsl
loop
cmpsb
pop
jbe
and
icebp
mov
loopne
es
or
sbb
maskmovq
mov
not
jl
test
nop
out
adc
xchg
movsl
test
cmp
pop
mov
xor
cltd
fimuls
or
adc
sub
cmp
mov
je
push
rorb
es
fs
push
pop
jl
inc
or
stc
std
cmc
lods
mov
dec
pop
fistpll
mov
xor
pusha
pop
inc
mov
fidivrs
add
fmuls
out
and
mov
loopne
sub
adc
and
scas
mov
aam
ljmp
orl
inc
imul
add
movsl
outsb
movsb
or
or
sub
hlt
in
jl
and
addb
cmp
arpl
in
add
dec
js
out
sbb
aaa
fisttpll
cmc
mov
adc
fsubrs
decb
sub
adc
imul
rcr
leave
daa
pop
sub
pop
pop
xchg
or
lds
push
int3
jbe
sti
jns
mov
es
push
sbb
push
jg
movsb
gs
jp
push
dec
xchg
ja
pop
fcomps
loop
xor
xlat
xchg
fadd
xor
scas
testl
pushf
stos
jp
inc
fnsave
repz
fcoms
in
mov
gs
dec
out
sub
test
and
adc
notb
mov
xor
arpl
std
fcompl
in
dec
xchg
int
cmp
fcmovne
jo
mov
imul
aaa
cmp
cmp
clc
sbb
cmpsl
xchg
loop
sub
or
dec
jbe
jb
inc
mov
inc
orb
sti
dec
mov
cmp
pop
repnz
insl
fimuls
mov
nop
mov
scas
sub
pop
adc
shrl
xchg
xchg
mov
lret
jl
fnstcw
xchg
ret
mov
sbb
push
add
fwait
push
jno
push
aas
xor
es
fidivrl
mov
jg
and
or
ds
inc
xchg
pop
cmpb
mov
addr16
jle
mov
rolb
inc
inc
int3
mov
or
ret
or
sbb
sti
insb
inc
cld
cmp
sub
pop
dec
push
cwtl
push
shrl
dec
or
lds
cmpsb
jl
mov
mov
jne
test
inc
mov
pop
lds
xor
mov
lock
inc
popa
mov
shll
mov
cmp
ret
xchg
mov
xor
les
xchg
cs
outsl
shll
jle
and
fdivr
xor
fwait
mov
xor
jne
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
aam
sbb
jnp
pushf
jnp
repz
jnp
mov
cmp
sbb
lret
cs
sub
out
cltd
andb
or
mov
stc
dec
inc
loop
cltd
sbb
mov
sub
sub
outsl
cmp
add
fidivrs
js
mov
jns
push
test
add
or
pop
adc
pop
xor
sub
xchg
xchg
scas
icebp
inc
cli
pop
adc
inc
pop
hlt
lods
mov
das
sub
cltd
mov
sub
mov
or
jp
sahf
push
inc
cld
jg
mov
sub
cmpsl
in
stc
or
inc
inc
adcl
mov
ljmp
adc
mov
scas
pop
jl
mov
enter
das
push
push
int
cmp
in
loopne
add
inc
mov
push
mov
dec
and
push
nop
cwtl
adc
and
adc
jnp
fldl
inc
movsl
xor
leave
inc
cmp
mov
lods
notb
in
sub
roll
pop
mov
lret
fistps
pop
sbb
add
fdivr
jg
pop
mov
dec
add
mov
insl
scas
jg
add
adcb
test
lock
clc
ret
out
or
add
or
ret
je
cmpsb
xchg
mov
das
push
loop
sub
in
pusha
in
adc
js
out
mov
xlat
outsl
sub
fadds
cltd
inc
pop
jecxz
mov
add
out
popf
inc
stos
sbb
fiaddl
pusha
xchg
enter
pop
or
xchg
jne
sbb
fsubrl
js
fildll
pop
dec
negb
incl
popf
jecxz
in
push
mov
clc
icebp
leave
mov
repz
pop
push
out
in
test
mov
sar
shlb
lret
jnp
scas
std
cmpsl
mov
movb
shlb
fidivrs
nop
hlt
insl
stc
push
fldenv
dec
mov
daa
mov
xor
xchg
mov
sub
test
adc
xor
adc
call
stc
push
in
ja
push
ds
imul
pusha
mov
xor
mov
push
lret
mov
loop
icebp
mov
cmpb
mov
in
xchg
rol
imul
int3
cmp
xorl
pop
pop
rcrb
repz
popa
jb
jb
sbb
sub
int3
xorb
mov
dec
sub
push
xchg
push
jmp
inc
add
rcr
icebp
jmp
lret
imul
xchg
push
mov
mov
orb
adc
fists
insl
jmp
loop
or
sbb
pop
fucom
repnz
dec
mov
jecxz
data16
mov
xlat
cmpsb
or
mov
xchg
mov
adc
ret
insb
push
mov
xchg
cmp
call
popa
mov
pop
stc
dec
and
fisttpl
pushf
push
hlt
test
sub
lods
cli
pop
xchg
xor
lock
jno
sarb
popf
mov
cmc
outsb
adc
aam
cmpsb
pop
xlat
pop
sbb
adc
ret
lods
test
cmp
pop
push
inc
inc
dec
scas
sbb
fsts
sub
mov
insb
fstp
pop
ja
adc
inc
inc
dec
lret
or
mov
test
push
fbstp
popa
push
pop
lods
fisubrs
pop
or
mov
enter
sbb
xlat
mov
rcrl
jmp
or
mov
xor
lret
cmpsb
fbld
scas
sti
lods
repnz
movsb
mov
nop
decb
jns
mov
push
repnz
and
popa
adc
in
fimuls
mov
jg
jnp
ljmp
sub
frstors
icebp
lahf
jmp
mov
add
das
stc
pop
or
leave
or
cmp
fmuls
and
or
imul
xchg
or
test
icebp
xchg
rorl
aaa
and
push
gs
pushf
ljmp
jge
mov
jnp
orl
popf
xor
adc
ret
outsb
add
lahf
push
mov
sub
fs
cmp
and
sbb
lahf
lret
in
mov
adc
in
pop
or
or
nop
and
cmpsb
shlb
pop
pop
jmp
pusha
and
xchg
or
pop
lret
hlt
leave
mov
mov
ret
cs
cmp
xchg
xor
xchg
pop
insb
sub
pop
mov
sbb
adc
into
jl
mov
add
mov
jns
lea
jbe
mov
cmp
es
sbb
xchg
lods
mov
fld
fstpl
xor
ds
adc
mov
xor
adc
icebp
adc
cli
dec
fwait
in
adc
stc
xchg
je
sbb
mov
das
fstps
cmp
sub
push
push
int3
pop
into
imul
mov
outsb
sbbl
xor
imul
fcompl
inc
ret
and
xchg
mov
scas
xchg
and
std
int
push
push
rep
sti
adc
pop
lar
test
imul
xor
test
adc
lcall
out
flds
loope
xchg
stc
xor
das
ds
loop
cmp
cmp
sbb
push
cmp
xor
cmp
xchg
dec
lahf
cli
fst
sub
xchg
pop
cmp
es
out
mov
iret
pop
jns
js
pop
or
xor
or
jle
add
nop
lahf
dec
sub
adc
cmp
pop
in
dec
pop
es
add
insl
mov
mov
adc
je
mov
add
inc
mov
or
hlt
jle
push
xchg
stos
inc
ss
call
inc
mov
pop
test
jnp
aam
dec
enter
push
pop
jae
cmpb
jecxz
pop
sbb
inc
or
inc
ror
aad
outsl
inc
pusha
xchg
in
and
sahf
or
cld
das
add
movq
jb
jmp
ror
xor
cli
stc
into
mov
pop
xor
mov
push
mov
jp
insb
clc
fisttpl
jg
pop
mov
mov
jno
call
mov
fidivrs
mov
pop
mov
jecxz
mov
je
lahf
or
in
dec
xadd
lea
idivb
xor
xchg
pop
lods
dec
xor
mov
andl
inc
cmp
adc
jb
aas
idivb
pop
adc
lcall
push
add
cltd
nop
cs
push
xor
es
sti
outsb
sti
mov
icebp
cmc
push
xchg
std
icebp
and
mov
xor
dec
insb
repnz
push
stc
ret
inc
dec
mov
idivb
dec
xchg
arpl
inc
iret
sub
add
repz
mov
push
repnz
pushl
ret
mov
fwait
aas
push
xchg
xor
inc
or
lods
push
mov
jl
into
data16
hlt
pop
jae
sbb
aas
popa
mov
stos
lret
cmp
adc
scas
or
push
push
sahf
addr16
xchg
jbe
mov
andl
or
push
les
scas
arpl
push
mov
xchg
push
js
sbb
fsubs
pop
pop
sbb
xor
stos
cmp
insb
mov
xor
scas
cmpl
ss
mov
add
push
arpl
jg
sub
mov
cmp
out
lret
cli
gs
std
in
jl
or
inc
push
icebp
sub
inc
mov
adc
fwait
mov
push
scas
stos
mulb
orb
xor
pop
jp
push
loope
adc
movsl
dec
das
mov
test
aas
repnz
out
jmp
fcompl
sbb
cmp
cld
insl
pop
cwtl
adc
jb
add
loopne
jl
fwait
push
add
cmpl
push
mov
inc
jo
inc
test
imull
push
sub
cmp
shrb
lds
sbb
sbb
popa
nop
cmp
xchg
push
enter
xor
pushf
gs
lret
mov
popf
pop
lea
sub
mov
sub
int3
test
test
das
fistl
js
mov
xchg
sarb
bound
push
ret
movsb
sbbl
popf
insb
inc
scas
test
jne
test
shlb
jae
mov
cmp
or
rorl
push
mov
dec
movsl
mov
pop
sub
or
cltd
inc
lea
cmp
clc
into
mov
cmc
cmp
xor
inc
cmp
lret
jge
push
push
mov
inc
cmp
js
mov
pop
shll
cltd
inc
pop
and
in
in
pushf
in
mov
or
or
outsb
mov
push
dec
mov
jns
push
jle
push
mov
enter
mov
es
mov
jae
scas
imul
push
in
ja
outsb
xor
xor
add
je
out
je
or
push
lret
fnstcw
sbb
xchg
sahf
inc
mov
adc
or
es
sub
xchg
xor
stc
test
and
test
mov
repz
int3
cmp
lret
pop
or
incb
cmpsb
cmp
mov
or
cmp
call
cwtl
adc
in
fsubrl
data16
cmc
dec
adc
decb
mov
cmp
clc
cmp
adc
ja
fisubl
data16
nop
xor
cmp
adc
fidivl
xlat
add
jae
inc
pop
xlat
jno
or
pop
jb
dec
xor
out
stos
movsl
fildl
ret
call
adc
idivb
stos
es
shll
icebp
daa
xchg
mov
fldt
dec
pop
ret
out
mov
add
rcr
xchg
dec
xrelease
movsb
inc
sub
and
lods
mov
clc
jbe
lea
xchg
rcrl
faddl
mov
push
cmp
stos
xor
jnp
jp
xor
mov
mov
push
sbbb
stc
pop
dec
cltd
add
fbld
sbb
jnp
cmpsb
mov
lret
pop
test
pop
push
sbb
movsl
xor
call
movsl
push
xor
jecxz
jb
inc
arpl
sub
fdivp
mov
push
jno
loope
push
push
adc
xor
out
pop
test
push
pop
cmp
repz
push
push
fwait
in
std
mov
xor
scas
aaa
xchg
push
in
out
nop
mov
test
sti
push
fwait
inc
push
into
pop
inc
loope
sbb
mov
enter
inc
shl
adc
rcll
sbb
out
pop
lds
daa
imul
adc
push
pause
or
and
ret
or
cs
pop
sub
sbb
pop
jno
pop
jmp
add
orb
push
jmp
dec
stos
rcrb
sub
xor
ljmp
imul
lods
fwait
insb
and
jno
add
nop
mov
arpl
roll
jecxz
hlt
or
push
ret
add
push
test
mov
lods
jae
imul
decb
lock
cmpsb
nop
rorb
jns
js
xchg
mov
pop
cld
repz
jl
xor
mov
daa
dec
in
popa
inc
or
and
inc
or
push
cmp
mov
push
pusha
aaa
add
sbb
adc
fs
push
sbb
test
cmp
addb
lods
stos
lds
push
xchg
and
xchg
add
xor
jmp
sub
and
xlat
aas
cwtl
mov
sub
mov
outsl
push
pop
cmp
enter
sbbl
into
rorl
mov
in
pop
pop
push
lods
popl
mov
jo
repnz
aad
inc
xchg
dec
lods
cmp
mov
inc
leave
cld
xlat
dec
cltd
mov
or
push
jecxz
es
push
and
mov
into
mov
pushl
sbbb
sub
int3
cmp
and
stos
loope
xor
loop
cmpsb
mov
jb
or
xchg
jp
or
mov
sub
sarl
std
xorl
sbb
stos
or
fists
mov
aam
cwtl
inc
mov
clc
test
fidivs
push
cmp
jg
adc
mov
loopne
call
jp
add
pushf
inc
cmc
ja
cli
add
aad
imull
push
repz
outsb
sahf
adc
pop
leave
out
fistl
and
shll
in
cmp
mov
inc
or
call
dec
stos
pushw
mov
lret
push
add
mov
rcrb
icebp
int
adc
movl
cmc
cmp
loop
adc
inc
jl
data16
loop
and
lret
aas
rcrl
stc
adc
push
sbb
xor
xor
sbb
cs
into
dec
repz
sub
sbb
mov
jl
nop
std
orb
xor
test
add
sahf
jecxz
rorb
lods
add
add
xor
add
xor
insl
lods
sub
adc
jmp
xor
mov
jp
femms
lock
push
mov
cmpsl
sub
cmp
inc
lcall
add
sub
rcrl
les
sbb
jb
hlt
aad
lock
cmp
repz
inc
sti
stc
stos
and
insb
jae
insb
test
inc
and
or
jno
jne
cwtl
sub
adc
sbb
scas
fcompl
int
xor
mov
jg
ljmp
adc
movsb
shrb
test
adc
xor
push
mov
aaa
dec
mov
cmc
xchg
inc
mov
or
outsl
sbb
jnp
mov
mov
in
xchg
dec
sbb
scas
xor
ljmp
cmp
pop
pop
leave
and
sub
and
pop
jb
in
sahf
cmp
or
pusha
pop
mov
stos
push
mov
jno
cmp
dec
out
push
imull
xchg
pushf
dec
mov
incl
mov
repz
divl
popf
push
or
pextrw
xlat
lds
mov
lret
outsb
es
cltd
and
lcall
ja
mov
outsb
imul
push
inc
and
lea
mov
pop
xchg
cmp
data16
repz
cmpsl
push
out
inc
adc
push
mov
xchg
jae
lret
in
rorb
sahf
jmp
repz
aam
icebp
adc
in
or
clc
aad
shlb
cmp
and
inc
sbbb
psraw
mov
mov
dec
xlat
or
mov
incl
add
mov
adc
fiadds
fcmovnu
mov
cltd
shll
ds
cwtl
mov
sbb
ds
stos
testb
mov
jmp
cmp
inc
pushf
lods
pusha
je
data16
and
imul
sbbb
mov
mov
out
lea
pop
push
mov
imul
outsl
mov
cmpsb
ud0
pop
outsb
mov
fistpll
or
scas
mov
sbb
sbb
dec
push
dec
fsubs
imul
add
sub
nop
bound
loop
ds
mov
dec
xor
sbb
ljmp
xchg
lods
int
jnp
adc
int
mov
call
adc
xchg
add
mov
or
lock
pop
inc
in
leave
iret
ja
rol
dec
sahf
push
xlat
leave
in
in
xor
das
outsb
push
dec
cld
inc
cmp
dec
rcrb
movsl
cwtl
iret
lcall
test
cmp
mov
mov
pop
cmp
test
fwait
jbe
popa
and
clc
clc
jno
add
jl
aas
sbb
mov
pop
or
xlat
mov
daa
jbe
jns
xchg
fidivrl
push
adc
dec
xchg
es
mov
lahf
xor
xchg
loop
sbb
mov
pop
cmp
lcall
dec
pop
push
xchg
aad
sub
lods
adc
mov
sub
add
jno
mov
cmp
shr
fstpt
jge
fdivp
dec
mov
lods
jno
js
das
enter
and
pusha
jns
adc
jg
jb
push
push
mov
add
popf
pushw
ret
mull
adc
xor
lcall
mov
arpl
imul
or
scas
aaa
xchg
mov
popa
jg
adc
mov
shrb
push
daa
inc
mov
pushf
ss
push
shrb
fbld
scas
orl
aam
dec
xor
mov
mov
xchg
or
mov
mov
mov
xor
and
mov
mov
pusha
repz
ljmp
mov
pop
dec
mov
shrl
imul
or
out
mov
cmp
std
pushf
ret
enter
ret
call
and
xchg
sti
fcoml
fcmovnbe
inc
aad
mov
dec
int
inc
pop
mov
mov
xlat
aad
cmp
insl
inc
mov
xor
mov
pop
cltd
xor
stc
adc
mov
sub
cs
out
fwait
test
addr16
mov
call
jbe
jmp
les
or
cmpsb
mov
loope
push
push
xor
xchg
stc
inc
xor
scas
mov
clc
lods
cmpsb
or
adc
out
and
mov
lds
xchg
sbb
shr
scas
push
sbb
push
lret
inc
cmp
push
movsl
pop
sbb
and
hlt
out
shrl
aaa
movsb
and
dec
sbb
sub
xor
dec
mov
xchg
into
push
es
add
movsb
nop
ss
push
scas
mul
inc
xchg
lods
lahf
ljmp
xchg
gs
cltd
mov
subb
out
loop
pop
jp
test
ja
in
fcmovne
sbb
push
jle
movsl
addr16
push
push
dec
int
adc
push
xchg
or
dec
fisubl
rclb
push
push
sbb
ds
lods
repz
aaa
sahf
jl
sub
mov
adc
rorb
pop
xlat
mov
pop
and
xor
iret
cmp
pusha
xchg
adcl
cmpsl
mov
test
mov
pop
adc
add
icebp
out
mov
pushf
lods
xchg
inc
jge
and
loopne
je
adc
xchg
mov
jo
jl
push
inc
or
sub
rcr
xchg
mov
andl
xchg
jnp
sbb
das
jp
jg
out
xchg
in
sbb
insl
and
test
mov
inc
jle
mov
xlat
out
mulb
push
fdivl
xlat
nop
pop
das
out
xor
test
inc
jl
dec
push
mov
inc
das
clc
sub
push
outsb
aad
pop
rcl
push
stc
sub
adc
pusha
mov
pop
pop
or
imul
inc
and
ret
sbbl
lcall
lods
negl
dec
lret
sub
jmp
rcrl
jl
cwtl
vmwrite
add
es
enter
popf
dec
lret
ja
rclb
cmp
or
scas
aaa
sti
icebp
mov
dec
inc
push
or
add
sub
cmp
mov
outsb
inc
insl
cli
loope
ds
call
push
push
mov
push
je
mov
mov
xchg
fstps
push
pop
dec
bound
mov
push
arpl
insl
in
cmp
add
cmc
push
clc
mov
jne
ror
push
xchg
mov
andb
cmp
mov
cmp
out
dec
adc
pop
or
sub
jne
cmp
test
aam
ret
or
jo
lret
jmp
not
inc
mov
xchg
sti
sti
sub
sub
mov
aaa
fmul
xor
lahf
repz
lahf
int
add
adc
test
movsl
inc
insb
mov
negb
std
mov
lds
cmpsl
xchg
leave
rorl
pop
mov
dec
loopne
or
mov
fcoml
xlat
cmpsl
add
int3
lcall
jge
sbb
outsb
ficomps
in
mov
inc
and
add
add
sub
sub
xchg
lret
out
pop
scas
data16
dec
mov
push
push
mov
pop
cbtw
mov
fwait
jmp
sub
push
and
add
adc
rcll
inc
notb
jo
sbb
cmc
jmp
inc
stos
sbb
cmp
pop
test
mov
fisubrs
shrb
out
imul
dec
pushf
adc
cmp
cmp
jb
jge
xchg
jle
and
das
jno
mov
sti
scas
jle
subl
filds
sti
jo
push
pop
pop
in
sub
cmp
je
xor
pop
insl
cmpsl
jp
adc
ficoml
push
fs
andl
incl
sbb
sbb
out
neg
loopne
jnp
lock
andb
test
flds
loopne
mov
pushf
cltd
mov
dec
adc
xor
in
movsl
adc
ds
push
sub
inc
gs
mov
rcl
or
xchg
and
or
or
dec
shlb
pop
jne
outsb
dec
sub
push
push
test
pushf
cli
jb
sub
int3
add
imul
movsb
sbb
test
les
xor
es
mov
test
repz
sub
je
aaa
jo
dec
xchg
and
inc
mov
pop
pushf
lret
lods
scas
sti
scas
fsubrs
shll
stos
fadds
cmp
dec
xor
cli
hlt
xchg
sbb
pop
popf
mov
daa
mov
loop
addl
stos
cltd
mov
sub
popf
xor
aaa
je
sbb
lcall
pop
xor
pushf
mov
pop
out
pop
sub
adc
and
pop
aad
xor
adc
pop
call
fdivs
sbb
popa
xchg
or
mov
xlat
cltd
xchg
dec
jmp
repnz
andb
sub
add
dec
lods
jns
xchg
rorl
dec
rcr
jge
xor
jnp
push
adc
mov
loop
mov
inc
mov
out
int3
nop
mov
or
cmpsl
js
mov
and
xchg
shrd
scas
sub
sub
insb
icebp
dec
out
cmp
subb
xorl
mov
lock
das
push
push
in
fcmovne
mov
popf
jle
sbb
mov
push
sahf
cmp
rorb
sahf
push
adc
add
jae
push
jp
add
shlb
enter
jb
mov
loope
dec
xchg
mov
jle
sahf
or
nop
stc
loope
jbe
addb
ficomps
push
jp
aas
ja
jnp
pop
mov
add
cmp
fidivrl
xor
loop
mov
cwtl
sbb
cmp
idivl
out
das
jle
adc
ret
sahf
test
ret
sbb
les
movsb
fdivl
or
mov
je
into
mov
sbb
arpl
mov
rorl
lret
pop
fwait
mov
add
cltd
jae
jns
andb
push
cmp
data16
adc
jp
sbb
fwait
aam
cwtl
sub
sbb
pop
loope
loop
add
das
cmc
iret
push
dec
jecxz
cmpsl
sbb
ret
adc
aam
lock
dec
out
stos
fstl
cwtl
pop
and
add
xchg
in
mov
enter
xchg
nop
fbstp
mov
jo
rclb
int
daa
leave
es
test
push
outsb
orl
mov
jp
mov
xor
arpl
repnz
push
sub
fiadds
std
es
icebp
push
cmp
ret
mov
mov
es
dec
std
repz
call
and
stos
hlt
cmp
mov
xor
outsb
cmp
jb
ljmp
sbb
xor
pusha
mov
out
inc
repnz
adc
or
or
jne
inc
mov
dec
jmp
cli
or
xchg
in
mov
inc
cwtl
neg
dec
inc
sti
sti
add
mov
sub
cmp
arpl
shrb
or
lahf
icebp
dec
inc
add
and
jge
jp
scas
push
dec
clc
xor
shlb
adc
incb
fildl
xor
insb
xchg
mov
add
in
cmp
pop
sti
dec
dec
and
gs
test
repz
fwait
lods
push
test
lret
mov
xchg
repnz
push
in
add
push
push
lds
popf
mov
pop
pop
lret
dec
mov
popf
lock
sbb
mov
outsb
pop
mov
lahf
cld
mov
les
cmpsb
shl
out
xchg
xchg
mov
jae
adc
insb
ret
fadds
xorb
imul
mov
cli
test
dec
inc
jbe
jl
mov
inc
cvtps2pd
inc
fsubrp
dec
loopne
popa
movsl
sub
push
add
adc
enter
out
rclb
push
out
sahf
mov
rol
jl
mov
xorb
sarb
sbb
inc
imul
sub
cmc
mov
int3
mov
int3
xchg
adc
loope
xchg
mov
shlb
push
clc
push
popa
or
test
cld
pop
xlat
stc
cmp
cmpl
enter
out
ficoms
push
int3
aaa
adc
mov
ds
xchg
imul
mov
nop
ja
or
out
cmpsl
push
mov
das
ficoms
mov
cmc
dec
adc
inc
dec
add
dec
jmp
sbb
mov
jp
mov
dec
jns
inc
pop
fwait
xor
add
scas
inc
inc
cmp
ss
mov
add
cmp
mov
adc
mov
pop
in
xor
pop
mov
xchg
mov
fsub
insl
xor
push
mov
adc
ljmp
icebp
mov
lods
push
xchg
fsts
gs
lcall
adc
dec
shr
xorb
mov
mov
pushf
in
test
pop
inc
int3
in
cmp
push
xchg
ret
popf
sub
xor
pop
in
inc
adc
in
enter
lock
dec
pop
in
push
test
push
xor
dec
jno
cmp
scas
pop
pushw
ret
jo
cltd
adc
shll
dec
or
sar
xor
mov
xor
mov
jmp
xchg
out
jne
lods
mov
push
out
subb
dec
jbe
jbe
out
jecxz
cld
pop
lret
jno
lcall
push
hlt
pop
call
in
xchg
sbb
js
ret
xor
icebp
push
cmp
xor
fwait
jbe
inc
or
inc
or
pop
jecxz
outsb
les
scas
shll
sbb
icebp
dec
mov
out
clc
pop
cmpsb
pop
and
int3
loope
add
fadds
clc
test
jno
imul
inc
jbe
pusha
mov
lret
and
mov
or
outsl
stos
dec
jmp
sub
mov
fmuls
xchg
dec
xchg
sub
sub
cltd
jp
mov
pop
xor
or
enter
and
jl
mov
and
sub
xchg
or
ds
jle
sarb
scas
inc
jge
rcrl
push
fmuls
sbb
cmp
cli
xchg
inc
xchg
les
push
adc
stos
jno
out
adcl
dec
xor
mov
movsb
xchg
mov
jo
mov
mov
inc
xorb
cli
push
aaa
xor
push
mov
lret
and
push
fmull
jg
cmp
mov
or
mov
cmpsl
sbb
sub
movsb
repz
sahf
mov
out
js
les
sbb
aad
or
jmp
xor
sbb
call
mov
les
xor
icebp
pop
sbb
sti
imul
insb
cmp
lock
and
repnz
jb
shrl
add
dec
mov
add
popl
vsqrtpd
out
or
dec
mov
mov
mov
mov
faddl
aam
and
int
xchg
pop
lds
mov
fidivrl
enter
or
hlt
push
mov
or
jb
test
push
aad
and
push
inc
sub
mov
dec
stc
adc
sub
ss
xor
mov
sbb
loope
lds
mov
mov
push
das
xlat
dec
shr
mov
aam
aas
cmp
clc
gs
adc
add
and
out
aad
mov
imul
jne
sub
and
or
imul
das
xchg
mov
add
mov
cs
cmp
pop
adc
cmp
fldl
dec
orl
dec
mov
cli
cmp
mov
jmp
adc
mov
or
std
pop
testl
loope
insb
pop
inc
push
add
ficomps
cmc
or
jg,pn
xchg
inc
pop
flds
mov
mov
es
dec
aam
sub
imul
inc
cmp
jb
or
lods
add
bound
mov
pusha
mov
dec
hlt
push
push
ss
pop
pop
push
jae
or
jl
mov
aaa
outsl
int
insb
shl
pusha
test
pushf
test
loope
xchg
inc
cwtl
sahf
pop
loope
sbb
xchg
lcall
lret
movsl
enter
and
push
daa
jle
lahf
neg
outsb
das
mov
imul
xchg
jge
fsubl
cmp
pop
fdiv
loopne
cmp
xchg
or
sub
dec
fwait
jns
int3
repz
xor
fwait
dec
fs
dec
or
out
adc
fidivrl
inc
cmc
or
push
dec
rcrl
fmul
mov
pushf
mov
nop
mov
and
out
jg
scas
jl
inc
jle
scas
mov
movaps
xchg
fisubrl
lahf
sbb
sub
stos
hlt
jmp
movsl
clc
sahf
js
pop
into
repz
pop
test
int
adc
jno
cmovno
je
or
jns
ds
mov
rorl
rcll
popa
fwait
std
or
ja
pop
adc
jl
push
stc
jge
rcll
or
cmp
stos
mov
je
mov
andb
repnz
adc
pxor
ds
dec
insl
loop
aad
mov
icebp
pop
lods
sub
sbb
daa
mov
mov
adc
cmpsb
repz
aam
fmull
sub
cmp
jmp
inc
or
jno
fildl
iret
mov
cwtl
pusha
shrl
and
mov
jo
imul
int3
xchg
cmp
mov
fdivs
ss
mov
sub
pop
es
aas
js
adc
mov
out
lods
in
loope
jbe
adc
cmp
dec
incl
insb
fisubl
icebp
stc
mov
add
mov
cmp
orl
pop
or
out
or
xchg
push
insl
and
inc
cmp
push
xor
fnsave
push
sbb
dec
cmpsl
imul
xor
dec
xor
xchg
adc
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
mov
jnp
pushf
jnp
mov
and
or
sub
stc
lahf
dec
cltd
hlt
xchg
sbb
mov
mov
cmp
outsl
sbb
js
insb
xchg
fwait
std
test
cmp
iret
in
cli
sbbb
mov
repz
cmp
push
sahf
in
cmp
mov
or
jo
insl
push
push
stos
mov
push
out
je
xchg
inc
pop
mov
mov
sub
es
sbb
xor
rcll
cmp
mov
fistl
cmp
cwtl
in
adc
decb
jb
loope
xchg
pop
hlt
cmp
xchg
fnstcw
cmp
dec
push
mov
inc
test
add
cmp
jno
cmp
jns
movsl
lret
fcmovnbe
or
xchg
inc
lods
das
out
std
mov
cli
ret
popa
jbe
pop
xchg
icebp
ret
jg
sbb
stc
testl
xchg
mov
push
mov
xor
xchg
out
inc
scas
sti
shlb
addb
cmp
mov
fwait
push
push
rclb
out
xchg
nop
fildl
pushf
and
cmp
out
pop
or
pop
rol
enter
mov
rolb
inc
shll
and
outsl
and
cld
or
adc
adc
ret
cwtl
sub
sbb
jns
call
sarl
out
push
cmp
jmp
fstpt
cmpsl
pop
dec
out
notb
sub
orb
repz
sbb
pop
xchg
cltd
jl
dec
scas
pop
inc
loope
repnz
popa
mov
adc
icebp
cli
fidivs
pop
lods
cmp
jb
and
fbld
in
pop
ret
xchg
cmc
lret
loope
adc
push
jl
sub
xchg
push
and
or
in
ficompl
xchg
rcll
inc
pop
sti
addr16
jmp
test
clc
test
dec
imul
dec
call
arpl
or
iret
mov
pushf
outsb
les
jmp
xchg
in
jno
push
adc
sbb
js
inc
mov
jge
pop
fcmovnbe
mov
push
mov
imul
data16
lods
inc
fucomi
jno
fiaddl
xor
mov
sbb
add
faddp
sub
fwait
les
in
add
scas
mov
dec
imul
dec
dec
bound
loopne
in
out
fistpll
xchg
addb
cwtd
push
mov
stc
mov
inc
addl
mov
fwait
jg
push
cli
xchg
hlt
ss
sub
movsl
add
fldenv
mov
aam
sti
mov
or
leave
mov
jl
in
test
fstp
hlt
rorb
andl
js
inc
mov
mov
js
loop
mov
or
mov
in
xorb
adc
lahf
je
leave
cmp
aaa
ret
or
cltd
push
xor
jmp
jae
je
jg
out
hlt
jmp
jb
cmp
jp
add
sub
mov
fstpl
mov
imul
xor
mov
outsl
cmp
xchg
sbb
je
or
sarb
pop
or
aaa
add
xchg
jae
sub
dec
push
sbb
fdivr
loopne
lods
or
adcb
inc
shl
and
movsl
fwait
je
xor
ror
ret
bound
test
jecxz
mov
push
dec
sub
es
xor
pop
jne
sub
sub
mov
repz
cli
push
scas
movsl
and
sub
fxch
pop
pop
jb
push
xchg
dec
sahf
or
xor
out
sbb
fiaddl
arpl
mov
cltd
js
jmp
sub
fldl
outsl
push
ds
mov
and
cmp
daa
xchg
inc
inc
inc
in
pop
dec
into
lret
hlt
push
loop
jge
xchg
outsl
or
inc
out
jp
cs
stos
or
mov
jns
aas
xchg
push
dec
push
leave
dec
xor
out
xchg
cs
sbb
jb
cmp
sbb
popf
push
stos
mov
sahf
sub
fistl
clc
mov
and
aas
into
std
dec
lcall
test
add
leave
pop
and
sub
mov
mov
imul
add
ljmp
adc
leave
stc
imul
test
lds
mov
mov
push
das
jp
mov
inc
jb
decb
pop
leave
push
addl
fiadds
js
fcoms
insl
mov
jp
or
inc
imul
xor
outsl
push
test
add
add
mov
test
lret
sub
les
dec
outsl
mov
mov
xor
push
cwtl
insl
cli
push
xchg
aad
adc
scas
mov
mov
push
sbb
fwait
fs
xchg
jge
mov
lea
addb
mov
daa
and
sbb
dec
add
notb
ret
popa
mov
jnp
lea
je
mov
nop
jle
dec
pop
dec
xchg
call
xchg
mov
lahf
sti
ret
loop
xor
xlat
add
cmpsl
add
popf
shll
xchg
mov
test
xchg
mov
roll
push
arpl
dec
inc
imul
pop
xchg
test
popa
sahf
mov
gs
mov
and
loop
mov
mov
mov
loope
lods
shrb
pop
mov
dec
movsl
xor
fldcw
dec
sub
add
dec
iret
aam
inc
roll
push
lods
sbb
cs
push
cld
dec
add
mov
sbb
mov
push
cld
lret
movsb
scas
iret
mov
jge
pop
es
xor
andl
sbbb
repnz
data16
mov
jge
lods
rcll
shlb
add
addr16
in
pop
ss
inc
mov
imul
icebp
test
lret
ljmp
mov
sti
jnp
divb
push
inc
inc
jmp
fcomi
scas
sti
jne
jne
leave
xchg
xlat
xor
movsl
popf
loopne
scas
rol
out
punpckhbw
test
mov
lock
xor
out
pop
gs
inc
xchg
jne
sti
cmp
and
out
mov
sub
push
xchg
cmpsl
push
mov
mov
outsb
pop
jns
rol
pop
cwtl
imul
nop
jb
ret
test
mov
fidivs
dec
xlat
cwtl
pop
fimull
hlt
pop
mov
cld
fstps
sahf
loop
test
repnz
movsb
jmp
xchg
mov
mov
repz
pop
mov
sbb
mov
sarb
push
mov
fcmovnu
mov
stos
add
ficomps
sbb
jle
data16
lock
mov
and
call
cmp
mov
or
or
out
add
pop
add
sub
pop
aam
pop
and
mov
orps
xor
hlt
adc
mov
adcb
lcall
mov
add
in
stos
push
push
mov
mulb
sbb
bound
lds
lock
orl
mov
jg
dec
stos
call
or
and
ret
loope
ss
mov
jecxz
xchg
sar
push
xchg
add
aas
xor
xchg
add
out
sbb
frstor
jae
aas
dec
aam
popf
pusha
sub
scas
pop
mov
sbb
pop
stos
xor
adc
shlb
lods
cmp
int3
push
leave
jecxz
cmp
jp
push
mov
les
lock
out
xor
adc
dec
push
xor
sbb
lret
adc
jmp
sub
leave
imul
mov
mov
enter
lcall
mov
jb
mov
inc
jns
scas
cmp
call
fdivr
xchg
jae
jnp
jecxz
ficoml
jp
das
adc
sub
icebp
movsl
adc
or
jbe
out
mov
mov
or
add
roll
loopne
in
fwait
andl
and
push
test
rcpps
jno
cltd
cmpsb
hlt
decl
push
lcall
aas
setns
outsl
mov
mov
andl
loopne
shlb
ja
les
sub
mov
jecxz
in
jl
cmpsl
adc
pop
cmp
adc
pop
pop
xlat
xchg
hlt
out
xchg
into
mov
push
sub
inc
insl
sub
push
ret
hlt
subb
lea
mov
es
scas
out
repz
sbb
xchg
cmpb
push
mov
popf
in
inc
call
mov
fsubrs
mov
out
imul
cwtl
inc
pop
repz
out
test
cld
add
add
push
xchg
mov
pop
imul
xor
scas
outsb
dec
scas
inc
jne
cli
int
out
and
nop
movsl
and
pop
test
arpl
je
jg
leave
cmpsb
push
clc
cltd
add
sbbl
enter
xlat
stos
mov
jns
mov
js
cmp
jmp
jmp
xchg
lock
sub
cli
and
pop
lcall
xor
daa
orb
add
ja
ret
push
xchg
xchg
push
or
flds
xor
inc
rclb
pop
inc
in
addr16
mov
adc
and
cmpb
dec
lock
cmp
adc
jmp
and
test
xor
cmp
jnp
pop
xor
stos
fisubs
fsubs
xchg
jl
pop
jns
outsl
adc
sbb
sbb
jp
stos
es
imul
push
and
mov
repnz
or
add
and
inc
fidivl
aaa
ret
mov
dec
add
or
jne
or
add
dec
les
rcrb
pop
push
jmp
pushf
cmp
std
cld
add
jo
icebp
es
clc
adc
mov
test
sbb
push
mov
fs
mov
lock
or
cmp
outsl
mov
inc
mov
mov
aaa
fisubl
adc
mov
jge
cli
or
mov
test
movsb
xor
jge
pop
dec
and
outsl
and
outsb
call
adcl
jg
and
mov
mov
xor
pop
push
mov
ret
dec
daa
add
les
or
and
or
xchg
jmp
mov
xchg
movsb
inc
xlat
fs
in
leave
das
jmp
lahf
enter
or
cmc
add
nop
jl
imul
repnz
ja
pushf
mov
bound
jbe
cmp
mov
jo
and
test
xor
jle
or
call
bound
pop
inc
data16
outsb
movsl
shlb
pop
hlt
pop
shrb
mov
out
dec
or
push
and
jns
cmp
aas
lock
pop
adc
dec
leave
jo
lock
js
mov
testb
sub
loopne
or
sub
fwait
imul
out
or
fisubs
ds
pop
inc
mov
stos
sub
int
xchg
and
inc
bound
or
push
test
scas
jle
sar
xchg
sbb
xor
scas
andb
jg
pop
jl
imul
aad
sahf
mov
enter
and
int3
insl
mov
xor
sbb
mov
dec
outsl
and
dec
or
rorb
ja
cwtl
xchg
add
stc
imul
dec
mov
insl
es
rorb
sub
and
lret
inc
xchg
sub
out
mov
es
nop
xor
hlt
and
add
xchg
inc
imul
inc
rol
es
dec
lods
dec
lea
jnp
push
rcrl
fstpl
jmp
and
push
paddd
arpl
mov
add
add
mov
fiadds
jns
and
test
rclb
aas
mul
xchg
xlat
lock
or
nop
fsubl
or
pop
loopne
mov
rol
aad
inc
inc
sbb
xor
pop
mov
mov
leave
rolb
and
popf
cli
enter
mov
and
sbb
jecxz
xchg
rcrb
cmp
xor
fidivs
addr16
stc
sub
xchg
cmp
cmp
rcr
pop
sub
mov
mov
out
or
jbe
lret
sub
dec
cwtl
mov
jle
out
and
loop
inc
push
and
push
push
or
pop
in
lods
mov
loop
inc
jae
xlat
fisttpl
cli
and
ja
cmp
adc
dec
aaa
fmulp
adc
jb
push
pop
repnz
sbb
inc
jg
jae
mov
popa
add
imul
aaa
ja
lds
les
daa
pop
ljmp
xchg
pop
mov
sbb
shll
pop
sub
and
mov
int3
loope
lret
fimull
sbb
add
movsbl
cmpl
js
sub
sbb
mov
mov
dec
rcrl
outsl
icebp
ja
and
inc
popf
fmull
mov
jl
mov
pop
cmp
ljmp
cmp
mov
testl
mov
mov
inc
stos
cmp
pop
loop
dec
pop
xlat
sbb
inc
push
xchg
fbstp
jg
in
jbe
lods
cmc
sub
dec
call
sub
push
jo
or
adc
inc
mov
pop
daa
mov
int
and
cmc
jo
shlb
mov
enter
leave
inc
or
push
dec
sub
fnstcw
pop
sbb
jl
cmp
roll
iret
push
add
cli
push
dec
cli
call
xor
push
lahf
pop
xchg
mov
adc
outsb
mov
jae
adc
rorl
rclb
add
sub
or
cmp
ficompl
jae
sub
push
call
adc
into
in
cld
jne
xor
sbb
or
stos
mov
mov
loopne
jae
adc
xchg
jno
aas
sar
rcrl
aam
aam
lahf
sbb
pop
rcll
fsts
sub
cltd
mov
push
movl
aam
enter
enter
lret
push
cmp
dec
sbb
xor
notb
push
push
mov
je
adc
jmp
xor
add
pop
fdivrl
xor
pop
fwait
es
xchg
int
fstpl
jno
mov
cs
xchg
data16
and
not
fcompl
stos
pop
lret
into
loopne
adc
jnp
jl
cmc
test
mov
jecxz
jmp
xchg
rcrb
xchg
fwait
movsb
mov
jo
iret
push
bound
push
cmc
mov
test
mov
call
orb
aas
xchg
push
out
mov
pop
xchg
and
pop
mov
pushf
mov
sbb
fadd
or
sbb
push
mov
dec
sub
dec
fsubs
and
es
iret
ds
pop
jge
adc
sbb
cmp
push
es
or
sarb
in
fldt
cwtl
jmp
dec
lods
inc
call
out
rcrl
xchg
jmp
inc
and
or
sub
icebp
mov
push
out
push
xor
ret
jl
and
lret
repnz
add
leave
xchg
cmp
in
lret
mov
cld
shr
pusha
push
sub
push
mov
les
push
add
inc
xchg
jmp
mov
outsl
pop
pop
jb
dec
mov
andl
cli
xchg
xor
int3
cmp
leave
or
adc
out
test
lcall
cmp
dec
push
fs
sub
imul
and
add
mov
subl
imul
ret
jmp
sbb
lds
and
push
arpl
cld
gs
pop
sub
test
inc
jle
jle
inc
pop
test
push
out
dec
sub
jae
sbb
arpl
inc
ljmp
mov
test
mov
push
fwait
and
inc
test
xor
ret
jmp
add
xlat
add
inc
or
pushf
pop
fwait
jbe
and
mov
cs
or
xor
push
xchg
int
popa
imul
icebp
or
mov
popa
fs
cmp
pop
xor
sub
decl
out
push
outsb
ljmp
sti
and
mov
fsubrl
xchg
dec
pop
aam
push
js
dec
push
pusha
push
lods
cs
nop
stc
aaa
add
and
mov
lcall
nop
into
jns
fstpt
add
mov
pop
mov
mov
vpcmov
pop
dec
dec
mov
ss
xchg
sbb
or
mov
jg
mov
jo
jg
xor
cli
lds
jo
es
xor
enter
pop
and
enter
and
mov
lods
shrl
add
or
movsb
jmp
mov
aam
push
and
cmp
inc
mov
nop
notl
hlt
xchg
mov
bound
jne
or
adc
pop
scas
push
xor
sbb
es
ffreep
popa
or
hlt
lea
jge
fcomps
addr16
mov
cmp
mov
dec
lds
sbb
out
add
js
scas
scas
xchg
sahf
and
inc
je
js
test
or
scas
push
and
mov
sbb
test
fisttpll
xchg
sbb
mov
jmp
add
pop
inc
and
das
ret
mov
mov
stos
and
cmc
add
lods
mov
sub
cwtl
dec
scas
rcll
xor
adc
fmuls
pusha
movsl
popa
iret
push
aad
out
push
lret
jae
xchg
dec
repz
pop
mov
leave
sub
cwtl
and
in
subb
cs
std
add
push
stc
sub
je
sub
push
and
adc
mov
push
dec
add
xor
je
cwtl
inc
add
lcall
push
popa
add
sub
scas
or
and
cwtl
std
add
or
into
push
xor
cmp
out
xchg
mov
fdivl
jge
and
insl
mov
mov
cmp
add
jb
cmpsl
into
xchg
test
push
mov
or
and
and
add
jnp
je
lret
fiaddl
mov
or
ficoml
and
mul
into
mov
clc
imul
iret
xchg
mov
mov
push
loop
outsl
jo
lret
das
out
lea
hlt
adc
out
mov
test
xchg
icebp
lock
and
das
nop
int
mov
pop
pop
lea
sub
outsl
jae
icebp
aas
pop
lea
xchg
test
mov
pusha
or
push
and
sub
sub
mov
dec
pop
and
arpl
enter
inc
xchg
inc
ror
lock
xor
ds
clc
cmp
xor
inc
pop
int
pop
call
or
je
dec
cmp
dec
mov
push
test
push
repz
cmp
int
aaa
mov
sahf
cmp
dec
jne
fldl
and
ljmp
js
mov
cmp
push
mov
aaa
in
inc
rorb
xchg
adc
add
sbb
imul
jl
popa
or
fs
push
jns
mov
mov
negl
and
int3
fsubrs
jmp
daa
aam
arpl
mov
mov
lods
adc
xchg
inc
shrl
push
aad
ss
aas
out
push
jecxz
pop
dec
testb
pop
push
mov
dec
adc
les
mov
xlat
hlt
pop
sub
data16
jo
inc
push
sbb
pop
divl
add
cmp
and
adc
jne
cmp
std
arpl
mov
sub
xchg
xor
pop
pop
pop
sbb
enter
mov
and
fs
into
iret
stos
jno
fldl
inc
push
xorl
pop
add
and
inc
push
int3
jg
jbe
lock
cmp
stos
aaa
ds
and
xor
sahf
xchg
movsl
cmp
sub
mov
and
jg
jg
outsl
cld
jnp
and
arpl
jl
nop
addl
dec
dec
inc
lods
xchg
mov
in
ret
in
jge
ds
or
sbb
xchg
xor
push
test
jg
inc
mov
std
adc
xchg
dec
int3
popa
in
into
fwait
add
inc
mov
push
push
loopne
aad
out
cmpsb
sub
ljmp
mov
xlat
cltd
aaa
in
icebp
iret
or
mov
mov
add
sub
cmp
popf
cs
int
shl
shrl
mov
jns
loop
lret
mov
or
cmpsl
sub
xor
pop
ret
inc
adc
ss
cli
arpl
pop
mov
xchg
jo
xchg
aas
push
push
mov
push
adcl
pop
in
cmp
divb
push
xor
bound
scas
xor
idivb
mov
pop
mov
shll
xor
cmpsl
jecxz
add
leave
mov
cmp
xchg
pop
or
arpl
jno
pop
cltd
int
addl
lret
cmp
insl
mov
mov
lds
bound
addl
in
cmp
sbb
test
out
loope
and
cld
pop
cli
fcomps
jecxz
imul
or
sar
ss
jp
xor
pop
xchg
mov
dec
cli
fs
mov
and
pop
sub
jbe
xor
stos
push
push
mov
lret
cmp
mov
insl
iret
xorb
mov
and
rcrb
mov
ds
rcr
fisttpll
icebp
in
scas
mov
loopne
cmpsb
lods
sbb
fwait
jmp
inc
imul
cmp
inc
xchg
lcall
dec
or
out
test
cmpsb
and
pop
adc
jbe
scas
xchg
jns
mov
or
xlat
fcmovne
stos
xor
push
lahf
shrb
mov
cmp
fwait
js
push
lcall
add
adc
icebp
dec
gs
scas
add
dec
mov
mov
xor
inc
push
arpl
movd
adc
insb
lock
mov
dec
xor
jnp
and
xchg
mov
sub
pusha
leave
adc
outsl
in
cmp
mov
fdivl
test
out
jle
push
add
jg
pusha
mov
cwtl
xchg
push
mov
stc
adc
and
fstps
sub
xor
cli
xor
daa
notl
add
sub
lret
pop
test
dec
fisubs
add
jl
gs
xchg
ret
lods
mov
cmc
and
dec
cltd
out
loope
dec
addb
push
mov
ljmp
sbb
xchg
pop
test
mov
adc
push
pop
sti
in
mov
cwtl
sub
adc
jg
pop
stos
or
lods
bnd
icebp
and
pop
movsb
sub
dec
adc
in
inc
inc
pop
ror
jae
sub
pusha
push
jl
cmpsb
or
and
dec
xorb
push
int
xorl
out
jge
sbb
mov
xlat
jl
je
les
mov
xchg
data16
les
mov
arpl
in
push
fstpl
jo
mov
dec
lock
pop
xlat
xchg
shll
adc
or
dec
sarl
pop
sub
sbb
ret
or
push
les
stc
insb
and
inc
pop
or
stos
sarb
adc
inc
sub
shr
mov
movsb
in
lock
push
loop
outsl
jle
push
repnz
imul
jecxz
xor
jmp
pop
inc
mov
lret
lahf
out
mov
xchg
aam
or
jle
into
inc
mov
mov
sbb
dec
jno
adcb
sub
and
or
pop
and
sub
cli
jo
or
jmp
add
loopne
lods
sahf
lds
popf
push
cmp
out
pusha
into
push
xor
push
and
ss
loop
push
or
dec
adc
repz
ret
fistps
pop
pusha
sub
push
or
fsubs
call
cld
mull
dec
mov
aad
outsb
cmpsb
xor
jbe
push
lret
sahf
push
iret
ret
push
cmp
mov
mov
mov
push
shlb
pop
in
lahf
sub
cltd
mov
test
mov
pop
xchg
out
out
pop
gs
mov
cmpsl
mov
mov
and
fidivrl
xlat
pop
mov
leave
or
inc
ret
movsb
std
inc
inc
xlat
das
mov
rorb
lock
mov
jbe
pop
push
pop
jnp
push
or
movb
mov
mov
aaa
cmp
pop
ret
in
out
fiadds
out
push
mov
cmp
mov
lcall
aam
xor
jl
push
cmp
dec
mov
cmp
cmpl
sahf
hlt
sbb
push
lret
popa
jge
mov
int
mov
lods
xchg
test
pushf
xchg
sub
aad
test
fucomip
push
mov
out
test
or
into
ret
jno
roll
jnp
lods
fs
or
add
or
push
add
test
scas
fldl
mov
add
movb
pusha
add
xchg
add
in
and
mov
outsl
mov
pop
and
aaa
push
push
xchg
sub
push
and
and
loopne
outsb
bound
and
cmc
cmc
pop
enter
lret
xor
mov
push
sbb
jl
in
fisttpll
sbb
jb
dec
mov
jbe
pop
lock
mov
ss
xchg
and
imulb
in
xchg
adc
push
mov
cwtl
mov
fcoms
inc
jne
das
adc
int3
push
mov
pop
xchg
xchg
out
insl
fistps
jbe
int3
xchg
nop
loope
stos
icebp
sub
ja
movsl
and
ret
sub
pop
lods
outsl
in
shrb
sbb
mov
push
rclb
das
sbb
push
andl
push
inc
mov
repnz
cmp
gs
or
dec
xchg
sub
les
sub
xchg
push
sub
pop
xchg
shll
xchg
sbb
ja
pop
rorl
jl
cmpsl
mov
pop
adc
aaa
sbb
mov
roll
mov
dec
lock
or
fisubrl
out
aam
cmp
sbb
mov
adc
cmp
mov
push
andb
or
les
dec
mov
int
jne
les
or
icebp
dec
mov
divl
mov
inc
in
cld
les
inc
push
insb
leave
sub
movsb
insb
xor
mov
mov
push
sbb
jbe
std
in
inc
push
xchg
cmpsb
movl
inc
pop
out
js
cmpsb
rclb
inc
aas
cld
dec
mov
inc
xchg
insl
in
mov
pop
enter
std
out
mov
popl
in
pop
jl
inc
cmp
push
xor
inc
out
out
fcomps
dec
ficoml
jp
adc
pop
xchg
idivl
sbb
jo
imul
int3
sti
xor
je
cs
xor
xchg
inc
inc
daa
imul
dec
and
inc
cltd
sbb
sub
ljmp
adc
imulb
adc
push
or
mov
xchg
mov
flds
and
fsts
cmp
cltd
dec
movsb
iret
daa
mov
sub
icebp
cmp
pop
fidivrl
pop
ljmp
mov
fdivrs
xchg
xchg
xchg
jle
mov
faddl
out
xor
fdivr
jno
inc
mov
into
cmp
arpl
mov
adc
popf
push
pop
nop
push
ja
lods
call
dec
and
mov
in
jg
loop
mov
in
push
enter
loope
adc
adc
scas
adc
sub
lahf
xchg
jle
push
adc
or
dec
xchg
gs
xchg
mov
add
mov
dec
fsts
imull
or
cmp
sbb
mov
pop
jnp
shll
fidivl
outsl
sbb
loop
ss
daa
jle
sbb
xchg
jg
fdivl
cli
xor
test
mov
test
mulb
push
sub
stc
jge
cmp
mov
jp
mov
cmp
pop
mov
mov
mov
aam
aad
adc
loopne
dec
and
mul
xor
jnp
xor
pop
pop
adc
pop
arpl
sub
js
lahf
iret
adc
orl
je
lea
jbe
bound
or
mov
mov
cli
fisubrs
push
filds
fs
dec
negl
dec
insb
or
fstpt
dec
insb
in
xchg
or
xor
out
mov
stos
aas
and
lea
enter
js
mov
push
mov
jbe
dec
mov
imul
sub
and
inc
inc
mov
jecxz
or
xchg
adc
add
sub
xchg
aam
xorb
sbbb
dec
push
jmp
or
lcall
push
ret
add
shlb
add
sbb
fcoms
pop
jecxz
xchg
sbb
sub
mov
sub
mov
push
adc
andl
add
inc
aas
stos
mov
daa
addl
test
cmpsb
pop
xchg
inc
sahf
pop
dec
mov
lods
sub
stos
dec
rcrl
adc
dec
sub
and
and
mov
mov
mov
in
mov
inc
mov
push
push
pop
in
pop
out
dec
jno
pop
lods
pop
mov
add
and
mov
je
pusha
dec
sbb
mov
aam
mov
fs
or
mov
out
jl
fldl
call
dec
adc
sbb
repz
dec
das
mov
loopne
push
mov
mov
mov
add
scas
push
popa
or
xor
rol
push
lret
and
clc
scas
ja
mov
and
mov
mov
nop
sbb
fiadds
sbb
int
popf
and
loope
lea
rorb
xchg
xor
scas
movsl
pop
jb
inc
mov
mov
lods
adc
lods
lods
repnz
and
rcrb
inc
insl
jl
jbe
mov
add
mov
mov
mov
xchg
cmc
in
scas
sub
inc
movsb
xchg
nop
rcl
push
test
sbb
in
std
fsubrp
sbb
stc
mov
and
outsl
stos
stc
imul
sbb
das
push
imul
cmc
jge
sti
popf
fwait
aam
mov
jle
dec
adc
cmpsl
rol
fsubrs
lret
or
jg
loope
inc
cmp
dec
push
leave
xor
dec
mov
testl
add
fsubl
mov
repnz
ds
and
adc
ficomps
jmp
jge
or
jne
lods
mov
iret
sub
jg
loopne
mov
loope
fmull
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
mov
jnp
sbb
inc
jne
int
imul
pop
sub
or
dec
mov
in
dec
loope
aas
dec
dec
mov
pop
in
push
xlat
sub
int
out
loope
mov
pop
scas
sub
sbb
jg
mov
sub
in
bound
or
sub
mov
enter
mov
dec
es
loope
cmp
sti
add
jbe
out
or
jle
lret
shrl
loop
adc
sbbl
xor
cld
mov
aam
inc
into
stos
lea
je
pop
push
pop
mov
mov
fisttps
ljmp
add
mov
lods
dec
and
addr16
inc
inc
add
jp
aam
pop
stc
in
xchg
jb
jg
addr16
out
pavgw
push
sub
cmc
mov
lcall
repz
cs
lock
and
sub
adc
js
xchg
icebp
mov
xlat
mov
out
bound
stc
enter
pop
das
jge
in
lock
clc
inc
repnz
aaa
nop
insl
int3
inc
das
jo
cmp
pop
gs
add
mov
lods
dec
scas
add
mov
cmp
neg
pop
popa
lcall
shlb
or
iret
lock
mov
mov
fcmovne
dec
ja
xchg
dec
shl
repnz
mov
dec
xor
sbb
mov
cmpsb
test
sub
xor
dec
dec
ja
js
dec
or
les
xchg
jge
xchg
lcall
lret
outsb
sti
andl
inc
dec
mov
pop
sbb
mov
and
jbe
mov
jmp
arpl
lds
inc
add
sub
nop
aaa
roll
push
out
lock
dec
jo
add
ljmp
and
jl
mov
push
mov
cmp
js
sub
xor
fdivs
mov
addr16
cmp
out
call
and
add
mov
data16
adcb
xchg
mov
dec
es
enter
lcall
cli
cmc
cli
cmpsb
clc
xchg
mov
jns
arpl
aas
dec
les
xor
movsl
movsb
sbb
cmp
mov
lods
test
rorl
or
sbb
dec
es
lea
movsb
dec
enter
stc
add
inc
xorb
sbb
dec
mov
rclb
push
pop
jg
or
add
mov
xchg
pop
test
rorl
mov
loopne
inc
cld
loope
fwait
mov
add
pushf
test
mov
testl
and
fwait
or
sub
movsl
sub
and
inc
arpl
int
mov
pop
push
or
imulb
test
mov
or
sbb
xchg
push
popf
jp
aad
cld
push
xchg
jle
pusha
int3
stos
inc
and
jp
dec
rcl
loope
out
cmp
xchg
mov
scas
lret
std
push
and
inc
cwtl
mov
fdivrl
mov
faddp
jbe
jge
mov
lcallw
loop
dec
xor
mov
sbb
aam
mov
sbb
hlt
dec
popa
bound
lret
inc
sub
ret
lret
adc
dec
push
mov
push
jne
mov
push
inc
icebp
dec
mov
ljmp
inc
lods
cwtl
insl
xchg
jbe,pt
mov
roll
clc
push
xchg
test
stc
loopne
inc
cmp
pop
xchg
imul
jbe
negb
dec
adc
sbb
sub
addr16
mov
xchg
jae
cmp
fcomps
je
mov
ljmp
dec
fdecstp
mov
sub
ljmp
cmp
xor
add
adc
jle
and
mov
sbb
mov
in
cmc
cltd
dec
rolb
sbb
lret
rclb
mov
push
int3
int
in
pushf
pop
adc
inc
adc
sub
xor
hlt
roll
test
dec
aad
pop
pop
rcrb
sti
lret
and
icebp
jns
fcoms
mov
mov
cmpsl
call
inc
rorb
push
aam
sbbl
outsb
xchg
pop
fs
out
pusha
xor
pop
pushf
inc
mov
sbb
jg
addr16
adc
mov
or
sub
roll
push
lret
push
xorb
xor
lret
or
shrl
adc
in
addb
mov
jle
sahf
test
enter
xor
sbb
daa
dec
pop
rcrb
push
mov
add
out
sub
jmp
imul
mov
dec
test
pop
cld
mov
sub
sub
cmpsb
sbbb
fmulp
pop
flds
and
mov
enter
das
lods
insb
sar
sbb
push
fidivs
ret
psllq
mov
adc
add
test
gs
add
nop
arpl
mov
jmpw
repnz
sqrtps
je
adc
imul
push
xchg
push
mov
mov
pop
jmp
or
cwtl
ljmp
and
xchg
loop
dec
test
and
sub
adc
mov
sbb
or
cs
pop
imul
inc
fdivr
and
sbb
jne
dec
mov
data16
andl
fdivr
push
adc
popa
xor
fwait
add
pop
xchg
xor
cli
mov
mov
arpl
sbb
xor
inc
outsl
data16
in
xchg
jl
mov
shll
and
push
fsubp
cs
adc
notl
hlt
xchg
mov
jmp
sbb
ja
push
test
test
mov
mov
jge
xlat
aad
xlat
int3
cmp
sub
jl
adc
pop
push
jnp
out
push
int
xchg
loop,pn
cwtl
xchg
loopne
shlb
push
cwtl
repnz
xchg
fmulp
std
push
cmp
inc
inc
xor
movsb
add
hlt
add
lea
xchg
movsb
cmp
int
pop
icebp
js
shlb
mov
mov
js
jp
fstps
enter
rcpps
cmp
sti
shr
pop
cld
cmp
stc
sub
push
xor
fldcw
sub
push
and
sbb
dec
or
dec
call
mov
push
xlat
shr
in
rolb
jne
push
sbb
unpcklps
sbb
sbb
loopne
mov
mov
xor
fcmovu
dec
stos
fmuls
push
pop
loop
iret
pop
ds
and
loopne
lods
pop
das
sarl
inc
jge
je
mov
imul
push
in
cld
repnz
les
cli
xchg
inc
cmp
add
mov
lea
fdivrp
ds
cmp
pop
in
pusha
cld
xor
or
popf
inc
dec
shll
and
adc
sbb
mov
repnz
lahf
pop
push
mov
bound
frstor
push
mov
mov
inc
cmp
in
or
rcrl
shrb
movb
and
lea
test
and
aam
lods
nop
push
sub
dec
inc
mov
repz
cmp
mov
cli
sbb
sub
sub
add
gs
cmp
jne
test
jle
push
mov
loope
jp
or
roll
popa
fbstp
cmp
bnd
push
out
fadds
std
mov
ficoml
push
mov
adc
xchg
ficoms
add
cli
mov
lahf
popf
push
dec
jno
xor
int3
enter
dec
or
das
test
add
sub
icebp
push
orb
dec
pop
dec
mov
lock
xchg
lret
outsb
inc
pushf
pop
mov
xor
leave
dec
bound
orb
cmp
adc
xchg
and
jb
jmp
and
cs
icebp
hlt
clc
sti
nop
loope
mov
jo
lock
sub
push
dec
dec
aas
or
cmpsb
push
inc
sahf
dec
bound
xor
pusha
arpl
shl
mov
cld
cmp
imul
out
and
add
push
ret
daa
cmp
lcall
in
dec
pop
sti
or
jmp
inc
call
mov
mov
pop
cltd
mov
pusha
fcoml
std
lds
loop
xor
pushf
imul
cmc
std
pop
jo
inc
mov
lods
cld
cmp
jns
mov
cmc
outsb
inc
iret
nop
fwait
dec
or
cmp
iret
push
shll
mov
push
mov
cmp
inc
mov
xchg
jp
lods
cli
push
sub
add
out
or
outsb
cmpsb
test
inc
push
pop
mov
sbb
xchg
push
data16
and
dec
xchg
jmp
jb
lea
dec
or
es
enter
cmp
in
jne
push
xchg
roll
pop
xchg
in
add
push
sbb
mov
divb
sbb
lods
add
lcall
and
test
es
in
cltd
mov
mov
into
ret
pusha
cwtl
fnstsw
insl
sbb
lret
fsts
sbb
push
push
int
movsb
aam
icebp
jmp
loop
jmp
iret
fnstenv
mov
inc
mov
outsl
and
es
loopne
loope
mov
incb
jns
mov
pop
mov
cmp
pop
dec
sbb
les
ficoml
inc
adc
es
call
outsl
pushf
ljmp
cmp
jp
mov
inc
stos
add
gs
or
dec
pop
inc
repz
xor
hlt
rorb
fstpl
lcall
imul
mov
sbb
mov
mov
jbe
sub
aam
dec
mov
xor
mov
dec
mov
stc
fistps
jns
mov
sbb
sbb
test
imull
aaa
sub
cmp
ret
daa
push
jp
fistpl
xchg
test
xchg
or
push
repnz
dec
adc
adc
xchg
dec
inc
imul
push
fucomip
xor
push
sub
mov
lcall
fistl
fdiv
and
mov
in
imul
aam
sbb
loop
aad
mov
out
cmp
add
xchg
je
jecxz
mov
sbb
stos
mov
mov
push
ficompl
das
rcrb
bound
dec
out
pop
rcll
mov
mov
push
dec
jo
dec
jp
jbe
stos
out
stos
test
insb
add
loopne
mov
ljmp
enterw
fwait
push
xor
movsb
inc
push
sbb
stc
sub
enter
xchg
mov
sub
sbb
cmp
sti
test
out
popf
movsb
es
cmp
ljmp
mov
in
push
loope
jnp
sub
hlt
hlt
xchg
lods
pop
push
inc
adc
outsl
mov
in
jo
lea
ds
imul
adc
addr16
xor
inc
cmp
jmp
push
mov
jo
mov
notb
push
mov
cmp
repz
ret
sarl
out
out
jae
push
mov
push
push
fisubrl
sub
pop
in
xchg
ror
inc
arpl
adc
mov
jle
ja
sarb
pop
stos
and
inc
jp
fwait
test
mov
push
mov
add
or
push
fwait
inc
push
pop
mov
xchg
mov
fiaddl
push
pop
repnz
xchg
pop
mov
adc
movsl
outsl
sub
out
imul
das
xchg
aam
out
loop
rcrl
lods
shll
and
out
sti
inc
add
cmp
mov
xor
inc
fimuls
jae
cltd
movsb
outsb
inc
ffree
fcomps
scas
xchg
add
das
js
push
xor
insb
sahf
xchg
push
es
fs
cmp
outsb
dec
stos
test
in
jae
add
mov
mov
enter
shr
sbb
int
jle
sub
mov
sbb
pushf
pop
cwtl
fisttpl
pop
movsb
mov
test
xor
cmp
repz
pusha
scas
cld
xor
cli
adc
or
adc
dec
cwtl
cmp
xchg
xchg
notl
insl
ret
repz
push
movsb
scas
mul
push
pop
aam
inc
jo
ret
adc
lcall
int3
incb
out
ss
mov
mov
pop
pop
inc
rcll
mov
xchg
shll
push
mov
cmpsb
jge
sbb
loopne
sbb
addl
mov
push
ret
mov
pusha
aad
cmovo
idivb
inc
loopne
lcall
incb
sub
fsts
mov
imul
aam
mov
xor
test
mov
adc
addr16
insb
mov
divl
xor
mov
int
mov
sbb
incl
or
ds
ret
cmp
arpl
mov
push
mov
aad
push
mov
dec
lock
sbb
sbb
xorb
or
jno
cmp
jg
mov
dec
std
es
add
out
ljmp
mov
shll
fdivrp
orb
adc
popa
ret
fwait
daa
push
push
mov
jmp
stos
int3
andl
xchg
cmp
lahf
outsb
lods
in
inc
data16
lods
sbb
sub
push
mov
jb
push
cmove
ret
shlb
pop
xchg
inc
imul
mov
in
dec
cltd
test
arpl
sbb
arpl
or
sub
dec
mov
sahf
popa
xchg
into
ud1
mov
cs
dec
shll
int3
jno
push
imul
mov
into
sbb
pop
inc
xor
mov
sbb
push
dec
push
or
push
mov
adc
out
call
inc
sub
xor
sub
mov
lock
xchg
mov
ljmp
push
data16
arpl
jbe
outsl
xchg
ds
into
gs
arpl
jecxz
cmpsl
xchg
sub
jmp
sbb
cmpsb
and
sub
imul
add
adc
mov
sahf
pop
hlt
arpl
push
xchg
xlat
push
subl
inc
jge
and
push
cltd
add
xor
push
mov
mov
popa
test
sti
xor
or
cmpsb
and
xor
mov
adc
push
cli
jae
cmc
push
add
lahf
popa
cwtl
mov
in
fistps
pop
je
lea
ret
add
sbb
testl
and
or
push
fcmovu
add
dec
and
push
push
xchg
jo
mov
or
jbe
fcom
inc
cmove
into
clc
filds
mov
mov
cwtl
mov
rolb
dec
mov
push
dec
xor
sbb
xchg
jg
dec
xor
cmp
aam
loope
mov
cmpl
mov
shl
adc
dec
in
pop
pop
fs
mulb
pop
mov
jno
push
xchg
imul
lods
sbb
pop
es
shr
outsb
cmc
data16
in
xor
cmp
and
xchg
pushf
inc
xchg
fisubs
mov
rcrb
fldcw
dec
mov
outsl
push
icebp
dec
test
inc
jno
enter
daa
xor
je
mov
mov
in
int
ljmp
jno
mov
jmp
and
or
out
testl
sbb
dec
aad
pop
fbld
ret
jecxz
mov
pop
into
fs
jne
sub
dec
mov
push
sub
xchg
push
nop
sub
ljmp
aaa
mov
repz
push
sub
pop
jo
shrb
jne
in
jns
jle
push
out
push
and
jl
adc
shlb
je
push
das
xchg
dec
mov
call
jnp
mov
out
push
dec
cmp
int3
popa
and
loope
cmp
xor
pop
rolb
into
leave
mov
sbb
insb
cmp
in
jns
mov
jo
push
xchg
jg
jno
xor
sti
std
xchg
and
jmp
add
pop
cmp
daa
add
hlt
rorb
test
pop
cli
add
dec
push
push
pop
out
xchg
sub
aas
mov
lahf
popa
aad
pop
and
dec
sbb
int3
sti
jle
jae
cmpsl
fs
adc
dec
push
mov
es
popf
adc
or
mov
jnp
or
jle
push
jnp
lock
dec
aam
lahf
sbb
xor
mov
insb
xchg
in
lret
and
or
cld
aam
cmp
sbb
dec
push
xor
hlt
loope
inc
jge
xchg
stos
icebp
popa
cmp
dec
adc
enter
xchg
in
xor
mov
xor
es
push
lcall
es
mov
cwtl
lods
ret
idivl
mov
sbb
arpl
cld
add
sahf
je
imul
inc
ds
leave
mov
je
movb
add
pop
lret
inc
mov
sbb
mov
pop
xchg
ret
inc
sysexit
push
inc
jbe
mov
jg
inc
lcall
inc
icebp
inc
lcall
mov
movl
mov
xchg
cmp
jae
xor
inc
fwait
int
test
test
adc
or
clc
mov
and
mov
sbbb
or
insb
push
idivl
fwait
cmp
add
xor
cmpsl
xchg
push
push
test
push
pop
fcomps
jg
subb
adc
xorl
fs
sbb
bound
add
sub
sub
mov
dec
loop
repnz
clc
pusha
cli
mov
ja
jnp
fistpll
add
cld
push
push
jg
insb
mov
mov
enter
inc
mov
pop
push
pop
adc
adc
cmpsb
inc
push
idivl
and
mov
pop
mov
loope
movsb
jae
shrl
fcoml
fidivrl
jbe
aad
jge
nop
popf
outsb
inc
jnp
mov
inc
pop
add
cmpsb
push
mov
mov
adc
pushf
xor
je
add
lret
shlb
std
orb
les
in
mov
xchg
add
cwtl
inc
and
xor
test
jnp
ljmp
mov
jne
gs
out
mov
int3
mov
adc
enter
call
adc
pop
and
push
pop
sbb
cmp
and
or
lret
adc
adc
insl
cmp
push
ja
fistpl
ljmp
mov
xchg
mov
ret
push
fwait
push
loope
mov
fistps
int
arpl
push
lds
icebp
imul
fdivrs
outsl
daa
dec
xor
mov
aam
call
scas
stos
test
sub
or
jae
inc
cli
xor
lret
inc
jmp
cmp
int3
inc
mov
call
lret
stos
or
push
push
push
mov
loope
fadd
inc
xchg
rol
jbe
add
decl
sub
jb
loop
pushf
lods
scas
lret
rorl
imul
push
inc
mov
mov
inc
cmp
rcrb
ljmp
data16
shrb
xor
dec
mov
fsubrs
adc
stos
sbb
and
insb
lahf
fadd
lea
or
out
xchg
fstl
imul
cmp
divb
sbb
jae
mov
jg
sub
imul
shrb
cmpsl
lea
mov
push
jbe
sbb
iret
insl
rcll
pop
sub
push
pop
imul
pusha
adc
sbb
sbb
cmp
fdiv
pop
pop
insb
mov
inc
push
es
loope
mov
mov
mov
mov
lahf
mov
rorl
lods
mov
int
jmp
add
stos
int
xchg
mov
pop
sbb
rclb
mull
insb
push
jle
sti
clc
lods
mov
cmp
addr16
lods
push
lock
push
dec
xchg
cli
shlb
test
or
mov
imul
in
xchg
inc
push
mov
icebp
inc
xor
or
in
adc
push
imul
push
push
xchg
xor
in
fsubrl
arpl
cmp
mov
test
rcrb
arpl
out
adc
rcl
bswap
pop
sti
das
dec
rcrb
or
add
sbb
test
rcr
testb
lret
and
mov
xor
bound
mov
mov
les
mov
dec
mov
leave
sbb
push
nop
shll
xchg
out
sub
sbb
dec
ss
addr16
sahf
push
push
push
xor
sbb
push
les
xchg
pop
jns
pop
loope
imul
jns
push
ret
xchg
adc
mov
jnp
cmp
mov
mov
mov
mov
dec
jne
and
mov
xorl
and
pushf
mov
jno
pop
push
xlat
mov
dec
mov
scas
divb
ds
cmp
sub
add
mov
movsb
sub
rorl
mov
sbb
add
stos
cs
ljmp
mov
data16
out
lds
dec
jmp
jmp
push
ja
xchg
push
je
insl
scas
mov
out
icebp
ja
iret
imul
cli
int
ja
cmpsl
add
mov
mov
xor
add
lds
push
or
hlt
rcl
mov
mov
aas
loopne
dec
xchg
test
push
add
mov
ja
cmp
scas
push
push
insb
push
and
mov
fcmovnb
loope
insl
movsb
and
mov
pop
addr16
cli
pop
es
bound
sbbb
jnp
mov
xchg
daa
pop
rcrb
sbb
dec
outsl
fstps
xchg
pushf
fisubrl
pop
lcall
outsl
cmp
pop
adc
jl
decl
push
outsl
inc
inc
jo
lds
cli
mov
mov
ljmp
arpl
fbstp
fdivrs
inc
loopne
negb
incb
test
movsl
dec
scas
clc
and
pop
aas
cs
cmp
pushf
mov
cmp
jne
xchg
or
test
lret
aam
and
jge
pusha
les
inc
mov
inc
test
mov
add
jp
pop
pop
and
fisubs
inc
cmp
sbbb
sti
or
push
mov
mov
mov
addr16
out
sub
mov
add
sbb
lcall
lock
xor
mov
mov
int3
pop
ficoms
fcomi
adc
loop
lock
in
xchg
aaa
pushl
shrb
mov
std
xchg
int
jl
testl
iret
jnp
test
xchg
je
ret
or
push
pop
mov
mov
jg
jle
jne
or
cwtl
call
leave
and
out
jp
stos
cmp
lcall
test
sub
mov
mov
popf
ret
into
pop
xchg
stos
dec
enter
jp
push
or
scas
pop
mov
in
sti
xor
push
xor
ret
cmp
sub
ja
fisttpl
inc
int
fs
cmp
in
jp
aaa
and
lret
sbb
bound
movsl
cmp
test
pop
push
dec
jno
inc
icebp
push
test
rcr
xchg
jge
dec
in
mov
repz
sti
clc
add
mov
pusha
loop
jmp
mov
jge
add
sub
jns
rcll
aas
arpl
in
jle
lcall
hlt
test
std
adc
loop
pop
aaa
shr
pop
leave
cwtl
sbb
sbb
pop
jno
insb
or
cli
xchg
out
loop
fdivrs
hlt
leave
out
sbb
into
cmp
push
jmp
xchg
mov
mov
stos
out
sahf
xchg
mov
js
sbb
push
mov
jno
jg
insl
ja
out
insl
sbb
imul
ds
int3
sub
pop
fistl
pop
inc
ss
int
mov
sub
adcl
aad
rclb
out
test
ret
xor
jle
arpl
xchg
mov
test
or
aam
pushf
mov
adc
je
xor
cltd
push
inc
popa
jno
mov
lahf
adc
push
into
jecxz
or
add
jno
push
dec
cmp
push
xchg
push
lock
loop
aam
adc
gs
cmp
cmc
xchg
pop
imul
cs
test
sub
test
adc
jg
lods
stos
add
adc
rcr
xchg
adc
pop
dec
dec
cld
sub
inc
lret
sbb
inc
idiv
cs
adc
mov
push
arpl
je
pusha
push
adc
int3
mov
addr16
inc
pop
cmp
adc
dec
out
sahf
add
add
or
aas
inc
sahf
add
insb
arpl
insl
rclb
jae
fbld
push
pushf
mov
das
inc
push
cmc
xchg
enter
mov
addr16
cli
test
test
jge
cmpsl
fnsave
fisubl
sub
mov
jne
mov
fcoml
imul
aam
sub
jae
ret
jmp
mov
push
xchg
aaa
outsl
xchg
inc
mov
stos
es
mov
mov
test
lock
dec
mov
jge
aaa
sub
xchg
scas
adc
mov
jmp
jno
xchg
sti
add
jns
arpl
popf
movsl
ficompl
fcompl
icebp
ja
notb
xor
int3
enter
sub
xchg
lock
je
jnp
sahf
rolb
std
shlb
push
daa
cld
mov
inc
push
fmull
jno
xor
jmp
xor
pop
sub
inc
sarb
xchg
push
mov
mov
xchg
fs
mov
cli
xor
outsb
cmpsb
sub
cmp
ficompl
adc
outsl
mov
call
xorl
and
test
mov
test
arpl
je
fs
dec
testb
hlt
sbb
inc
mov
or
or
xchg
add
xor
aad
orb
test
mov
mov
xchg
call
jnp,pn
das
int
mov
lret
mov
cmc
out
in
sub
adcb
adc
sub
mov
adc
cmp
rclb
popa
pop
mov
sbb
icebp
pop
push
mov
and
cld
repnz
je
das
in
lcall
fstps
and
sbb
loope
bound
rol
add
in
push
arpl
xchg
adcb
inc
je
inc
icebp
jno
out
das
cmpsb
inc
stos
push
loop
jp
mov
pop
and
xchg
jne
iret
imul
push
fdivs
andb
orb
test
out
xchg
push
and
mov
inc
insb
cmp
or
jl
cmp
leave
pushf
sub
pop
dec
mov
jge
test
jne
loope
push
dec
jae
and
mov
pop
sbb
adc
inc
addr16
mov
or
sar
mov
icebp
je
mov
push
mov
mov
ret
dec
lret
sub
push
push
xchg
pushf
out
rorl
jb
popa
in
out
pop
in
sarb
faddp
jmp
pop
aam
cmp
push
iret
mov
xor
and
or
fidivl
cs
mov
out
pop
scas
pushl
xchg
out
ss
sahf
out
jbe
lods
ljmp
push
push
xor
inc
fnstenv
and
mov
jbe
test
std
cmpsl
add
fsubl
jle
add
push
cmp
inc
jecxz
push
addl
xor
out
fwait
jo
fiaddl
pop
push
dec
sarl
pop
xor
xchg
insl
js
inc
and
xchg
jne
cmp
inc
push
add
and
mov
xchg
xor
cltd
stos
aaa
mov
jne
mov
fsubl
mov
les
pop
xor
mov
add
xchg
dec
push
mov
es
js
ret
int3
push
repz
pop
push
dec
jne
jmp
sub
loop
xor
pushf
icebp
subl
mov
cmp
hlt
shrb
pop
mov
sub
stos
xor
pop
leave
mov
mov
cld
out
loope
mov
or
cmp
dec
mov
arpl
and
mov
hlt
clc
adc
mov
in
xchg
mov
add
xchg
mov
sub
daa
push
sub
das
lret
insb
cs
movsb
lods
jbe
mov
addr16
jno
mov
lret
xchg
push
insb
cld
jo
lds
in
stos
or
das
iret
mov
xor
fcomp
in
scas
pop
in
add
pop
jb
loopne
pop
mov
push
cmp
test
push
mov
lods
dec
mov
fisttpll
faddl
adc
jge
lods
jne
xchg
sbb
pop
insb
mov
mov
push
add
mov
adcb
dec
mov
xor
loope
xchg
das
pop
popa
bound
mov
push
fwait
je,pn
lcall
pop
mov
bound
jb
lds
into
test
aam
fwait
mov
adc
xor
mov
add
add
cmp
and
in
xchg
insb
cmp
add
pop
pop
mov
les
aam
ss
inc
in
mov
loope
les
call
loope
xor
jbe
stos
in
int3
int3
aad
cltd
xor
xor
jo
shrb
fldl
cmpsl
jb
mov
inc
mov
add
std
push
push
pop
mov
adc
lret
or
ljmp
imul
fwait
movsb
jbe
fidivrl
xchg
jl
adc
and
in
and
out
dec
dec
mov
jo
leave
jae
popf
in
push
or
jae
pop
adc
xchg
ret
test
imul
xchg
xor
hlt
cltd
pop
fsubs
cld
or
loope
cmp
and
ljmp
cmpsb
jns
or
xlat
jge
push
rol
test
mov
fchs
jno
or
jbe
mov
outsb
xlat
std
push
mov
out
dec
ficompl
aad
cli
fstps
adc
sub
xchg
ljmpw
aas
aas
das
sbb
loop
in
enter
cmp
rolb
pop
xchg
test
and
or
inc
jl
enter
mov
iret
xor
mov
in
mov
pop
fmuls
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
mov
mov
jnp
pushf
jnp
movsb
fimull
pushl
nop
mov
ret
and
mov
cmpsb
xlat
jmp
out
mov
dec
daa
mov
fs
dec
inc
gs
movb
sbb
call
cmc
enter
loope
in
test
dec
sbb
aas
stc
enter
xchg
push
inc
sbb
test
negl
push
jg
pop
jae
xor
mov
outsb
mov
mov
jmp
push
cwtl
cmp
sahf
dec
pop
cmpsb
inc
test
cmpsl
push
push
push
fwait
mov
out
mov
pop
nop
call
push
mov
cs
add
loopne
ret
loop
loope
cmp
xchg
popf
lret
mov
pop
andl
loop
cmp
in
adc
and
mov
add
push
xor
imul
fdivrl
xor
lret
jbe
or
into
jae
decb
sub
gs
out
xor
sbb
mov
addr16
js
xor
push
mov
xchg
adc
lods
fiaddl
outsb
pop
loopne
pop
pop
pop
subl
outsl
xor
in
jmp
push
mov
fs
fisttpl
cmp
stos
sahf
add
jg
xor
shrl
insb
push
jmp
std
sahf
ret
cmp
shlb
rol
ficomps
insb
pop
movsl
clc
insb
mov
sub
lods
test
pop
les
mov
mov
clc
pop
dec
or
loope
push
or
xchg
push
stc
das
shr
arpl
out
xor
pop
fwait
sub
xchg
addl
mov
incb
inc
insb
jbe
sbb
icebp
cmp
orb
jp
cmp
pop
insl
shll
das
cli
test
mov
sub
xor
test
outsb
adc
das
mov
repz
jg
jle
pushf
loope
mov
test
mulb
imul
ret
push
mov
loope
push
jno
sub
leave
js
pop
adc
loop
push
aad
cmp
push
or
xchg
add
mov
pop
inc
dec
mov
xorb
pop
cmpsb
aad
ficompl
jmp
pop
mov
dec
push
cmc
cmpsl
stc
dec
ljmp
push
jb
adc
jge
sahf
jae
fsubl
shl
loope
aad
ja
xchg
adc
test
or
ret
jae
xchg
enter
mov
jge
insb
add
mov
cmpsb
repnz
cmp
imul
lods
and
inc
je
or
sub
mov
xchg
pop
lea
lret
daa
adc
lods
insb
sbb
dec
sub
cmp
cmpb
sbb
or
inc
mov
xor
adcb
cvtdq2ps
cmc
mov
inc
ljmp
mov
je
mov
push
les
push
sbb
sbb
shlb
fisttpll
sub
jg
les
loop
adc
sbb
adc
leave
into
adc
outsb
push
stos
cs
fidivl
incb
add
lock
fidivl
std
sbb
mov
mov
daa
add
cmp
and
iret
insl
add
sub
enter
repz
or
mov
adc
and
adc
jno
fwait
inc
mov
icebp
je
stos
add
adc
add
data16
cmp
xchg
lock
lds
mov
mov
negl
push
insb
adc
scas
lahf
mov
and
pop
xor
jp
mov
scas
and
or
icebp
mov
mov
cmpsl
add
mov
movl
mov
xchg
lret
lods
icebp
daa
mov
sub
fcoms
xor
adc
xchg
in
jecxz
add
xlat
test
add
or
jp
fnstsw
sub
sub
push
call
in
sub
push
push
loopne
adc
push
dec
and
mov
push
stos
mov
pop
popa
in
cmc
loop
dec
lods
pop
jae
cltd
mov
xor
mov
add
xlat
ljmp
mov
add
psubusw
popa
sub
fstpl
jae
in
nop
arpl
scas
inc
jne
xor
inc
mov
ss
jns
jbe
pop
pop
out
jl
mov
adc
mov
mov
fwait
or
icebp
stos
popf
mov
pusha
mov
and
inc
push
mov
jmp
mov
sub
mov
xchg
dec
jb
dec
inc
xlat
jae,pn
add
aas
dec
mov
imul
inc
adc
out
orl
xor
sbb
js
jbe
sbb
test
inc
aas
stos
xchg
lds
pushf
dec
adc
add
pusha
and
pop
pop
loop
je
fiaddl
adc
or
stos
or
es
dec
sbb
cmp
out
enter
jnp
cmp
sbb
jns
rolb
cmp
int
decb
mov
shlb
add
mov
pop
pop
int3
push
out
sbb
or
cmpsb
pop
jns
xor
pop
sti
jg
adc
shrl
mov
push
xlat
pop
ja
and
lods
or
insb
adc
pop
mov
stc
cmp
jnp
xchg
pop
nop
inc
ss
stos
adc
lsl
jnp
sarl
mov
push
fldcw
xchg
or
cmp
out
fldl2e
loopne
outsb
int
add
fbld
movb
mov
sti
dec
sub
jmp
cwtl
xor
std
xor
add
or
orb
nop
cs
push
xor
out
pop
in
test
stos
mov
mov
jno
cld
add
ja
lcall
and
or
int
mov
lahf
loop
inc
orb
imul
ds
jno
or
lods
and
xor
sar
es
sbb
and
cmpsl
jp
ja
aaa
js
in
sbb
push
jmp
movsl
and
sub
xor
or
enter
loopne
cmp
cmc
test
xchg
xlat
ljmp
jecxz
fdivr
jg
cmpsb
xor
mov
movl
jbe
inc
popf
cwtl
dec
nop
pop
dec
xchg
das
jl
inc
sub
jae
test
movsb
ds
testl
mov
pop
jmp
jno
stc
lods
push
fstp
out
test
cmp
push
mov
stos
mov
xor
adc
pop
xor
dec
push
jbe
lahf
ss
jne
jno
add
leave
dec
dec
push
push
mov
xchg
add
scas
ja
mov
or
cmp
outsl
ljmp
jne
mov
mov
cmpsb
push
data16
sub
jns
mov
pop
in
sbb
push
lahf
sub
mov
dec
pop
imul
cltd
and
push
jecxz
and
das
dec
jecxz
rolb
repnz
outsl
stc
lock
push
jg
pcmpeqd
pop
scas
lcall
mov
movsb
cld
int3
std
pop
into
int3
inc
dec
js
fisttpl
mov
push
repnz
jle
pop
cld
shl
lahf
iret
push
adc
cld
js
xchg
js
cli
leave
test
nop
or
push
and
and
adc
aas
daa
pop
push
sbb
cmp
out
rcll
icebp
imul
cmc
jmp
lcall
nop
pop
and
adc
inc
clc
out
xor
or
adc
cmp
ret
ror
adc
stc
clc
pop
add
mov
or
adc
mov
leave
imul
push
popf
aas
addr16
add
movsb
jne
cmp
in
sbb
aam
sbb
sbbb
xchg
inc
repz
xchg
sub
stos
loop
fs
or
repnz
loop
cmp
adc
ss
mov
cmc
in
test
ret
pop
mov
lock
gs
std
das
add
cmp
dec
inc
and
pushf
push
jb
xchg
xchg
inc
inc
sub
psrad
or
fwait
pop
sbb
sub
mov
cmp
jno
cmp
dec
popa
or
jg
dec
imul
std
inc
mov
mov
scas
cld
dec
or
inc
lea
and
jle
xchg
fucomip
test
cld
mov
xor
int
cmp
pusha
add
fsubl
lret
outsl
add
and
mov
imul
repz
mov
pop
jb
out
mov
dec
outsl
pop
popa
and
push
sub
nop
push
pushf
in
in
push
sbb
mov
cli
xchg
stos
sbb
mov
fcoml
pop
ret
shll
ret
pop
add
cltd
pop
add
mov
mov
mov
insb
lods
pushf
das
les
stos
cmp
xorb
sbb
push
into
les
loopne
add
lret
lret
jmp
ret
insb
stc
lock
xchg
cmp
cs
pushf
out
pop
jbe
sbbb
call
jmp
js
adc
push
mov
cmp
int3
xlat
imul
imul
aam
xchg
rcr
lods
mov
xor
xchg
movsb
inc
inc
std
mov
cmp
adc
notl
mov
psrad
mov
enter
out
leave
sbb
in
iret
sbb
pusha
cmp
push
test
testb
mulb
roll
push
mov
dec
pop
ja
out
cmpsl
dec
jns
push
mov
inc
lret
pushf
push
in
out
insl
popl
cli
inc
and
imul
cmc
lds
outsb
sbb
cs
sarl
stos
mov
je
movsl
mov
fstpl
aas
es
cltd
inc
dec
inc
sbb
pop
negb
add
in
bound
mov
push
xchg
cmp
adc
imul
ret
push
mov
xor
pop
icebp
sub
dec
mov
push
addl
lock
xchg
iret
add
and
daa
es
lock
stos
les
push
and
out
xchg
mov
std
addr16
into
lret
popl
aam
jecxz
ja
ret
xor
or
sbb
dec
rcl
pop
sub
loope
fcoms
pop
fptan
or
repnz
add
jmp
loop
movsl
or
cmpb
ret
aam
and
inc
loopne
test
mov
and
push
cmpsb
rclb
testl
das
mov
push
pop
or
add
push
push
jmp
in
add
imul
outsb
cld
mov
incb
roll
mov
lods
outsl
fs
sub
and
stc
jg
int3
mov
test
movsb
sbb
add
sti
mov
jg
mov
cmp
mov
cmp
push
lret
mov
scas
jnp
mov
imul
sub
inc
and
pop
gs
or
inc
push
cli
outsl
mov
and
xlat
pop
xchg
fdivrs
or
add
out
inc
cmp
dec
gs
mov
rcrb
inc
icebp
test
or
dec
sbb
sbb
leave
sahf
add
stos
int3
mov
adc
mov
ret
repnz
sub
in
imul
idivl
mov
cs
dec
into
aaa
loopne
push
and
icebp
adc
mov
cltd
add
je
xchg
cmc
pmaddwd
push
xchg
cmpsb
add
ffreep
sbb
push
sbb
sahf
jns
lret
jbe
sar
pop
jo
adc
mov
in
dec
mov
aam
inc
cld
dec
ret
push
mov
out
outsl
push
sbb
popa
lret
neg
cmp
lods
sbb
cmc
ljmp
adc
les
jle
and
and
and
pop
aas
mov
decl
xchg
lods
push
popf
jnp
mov
jno
bound
pop
push
or
loop
mov
cld
lock
int3
add
pop
adc
inc
mov
sbb
sub
cltd
adcl
add
hlt
add
leave
popf
aaa
iret
dec
aas
stc
mov
enter
pushf
fistl
cld
fnsave
dec
push
adc
sbb
rolb
scas
stos
dec
dec
pop
mov
sbb
lret
mov
mov
jecxz
inc
loop
scas
sbb
aaa
pop
xor
mov
inc
jo
pop
adc
iret
xor
data16
push
mov
or
jo
movsl
pop
mov
xor
test
xor
mov
rorb
loop
gs
iret
and
mov
loop
cltd
rcl
out
and
lret
xchg
push
jl
xor
test
xchg
jmp
iret
fmulp
or
lret
les
jno
jo
or
push
or
push
and
lret
lcall
pop
sub
aas
fxch
mov
inc
mov
jne
xchg
insb
jle
pusha
inc
mov
daa
adc
in
mov
pop
add
or
sub
jb
cmpsb
pop
inc
adc
stos
xchg
jnp
pop
sub
xchg
inc
cltd
add
clc
ret
mov
inc
pop
mov
dec
xchg
pop
push
push
sub
fbld
insb
dec
fmulp
xorl
int
sar
fidivs
repnz
mov
fmull
dec
gs
out
xchg
popf
push
in
jno
out
and
xchg
and
mov
mov
push
jle
jbe
inc
dec
out
xor
fcompp
mov
cltd
es
mov
jbe
repz
sbb
jle
aad
xor
jno
mov
pop
mov
push
push
jge
cmp
sahf
cltd
incl
push
imul
insl
cs
adc
cmp
sahf
xchg
or
aam
and
add
in
push
orb
mov
xchg
fistl
mov
push
xchg
and
out
rcrl
adc
stc
dec
pop
rol
adc
inc
test
iret
mov
xchg
mov
or
push
push
addr16
mov
ja
andl
fdiv
sbb
aas
sbb
mov
or
adc
fildll
outsl
mov
add
mov
mov
add
loopne
mov
push
mov
scas
out
insl
lea
leavew
pushf
push
jae
dec
xchg
jmp
push
cmpsl
mov
into
jb
cld
xchg
push
stos
testl
pop
push
into
test
sbb
ja
xor
mov
adc
mov
scas
add
loope
push
jp
sub
jnp
jno
sahf
mov
movsl
inc
loope
jo
int
cltd
stc
add
cwtl
lods
rcr
ja
mov
pop
pushf
das
jecxz
jmp
out
inc
xor
pushf
inc
jecxz
pop
fmul
out
pop
shld
jnp
ss
inc
adc
pop
leave
insb
ret
pop
xchg
adc
mov
xor
sub
fdivr
rclb
popf
pop
sbb
cmp
fildl
scas
add
outsb
gs
adc
pop
test
data16
push
popa
arpl
or
xchg
aam
sbb
loop
sbb
sbb
sub
sti
fwait
gs
adc
mov
lret
adc
mov
or
mov
sti
repnz
aad
pop
movsl
aad
xor
push
cmp
add
in
xor
cmp
inc
mov
popf
inc
loope
inc
fcoms
in
daa
push
xchg
das
js
xchg
cmpsl
push
mov
jecxz
mov
mov
pop
or
imul
inc
dec
or
scas
pop
adc
dec
jmp
out
and
ljmp
jl
repnz
lock
fsubs
adc
mov
leave
lds
jae
mov
subb
pop
ss
xchg
out
repz
pushf
jae
imul
dec
ss
jl
into
inc
les
jecxz
mov
and
jne
fidivl
mov
dec
out
add
cmp
xchg
add
cmp
mov
in
pop
dec
sub
sub
mov
mov
mov
adc
adc
mov
dec
mov
mov
adc
lods
mov
mov
add
clc
mov
pop
lods
push
es
dec
push
mov
leave
mov
js
or
inc
adc
movb
insl
jecxz
add
mov
popf
out
jnp
enter
mov
pusha
aas
fcomi
imulb
pop
add
xor
mov
push
in
dec
call
lods
out
xor
mov
xchg
rclb
xor
push
mov
sti
sbb
or
and
jmp
and
test
and
test
add
mov
fwait
mov
into
mov
mov
sub
pop
imul
add
xchg
shrd
sbb
int3
xor
cmp
in
jge
scas
xchg
leave
ss
add
inc
js
dec
add
pslld
adc
adc
aam
cmp
loop
mov
add
leave
fidivrs
mov
add
mov
xor
lock
int
push
mov
mov
jmp
xor
cmp
xor
enter
xor
mov
incl
testl
cmpsb
pusha
pop
adc
rolb
arpl
cld
pushl
and
outsb
lock
and
shrb
mov
mov
stos
sbb
shr
subb
pop
lss
rcrl
jmp
ret
jecxz
mov
and
adc
push
paddusw
stos
insb
repz
movsb
movsl
mov
inc
mov
pop
ret
jae
test
cld
ret
in
aad
cmp
xchg
mov
mov
cmpsb
push
and
cltd
cs
sbb
into
daa
fistl
sbb
mov
add
out
adc
in
cmpsb
pop
iret
pop
mov
pop
mov
repz
pop
aad
outsl
push
cmp
iret
and
ret
dec
mov
or
sahf
cs
mov
sub
cwtl
jae
out
push
clc
cmc
cmp
mov
sti
fistps
jge
popf
xor
jno
fs
push
loope
dec
xlat
lcall
inc
jge
idiv
mov
mov
xchg
mov
push
ret
dec
or
mov
dec
ret
jb
fs
sahf
or
sti
pop
mov
xchg
pop
test
mov
repz
les
sbb
outsb
gs
adc
xchg
sbb
sub
cs
sbb
and
lret
mov
in
out
repz
pusha
jns
fildll
xor
cmc
add
shr
sub
and
or
ret
aam
fmulp
push
mov
mov
test
out
repz
add
movsb
push
push
adc
movsb
mov
jae
scas
ds
push
sti
call
jmp
push
jbe
adc
mov
push
rolb
rorb
adc
insl
mull
adc
movsl
xchg
mov
fldcw
outsb
add
lods
andb
setb
adc
mov
xchg
cmp
and
adc
call
icebp
out
dec
mov
inc
jmp
pop
imul
stos
or
imul
out
push
and
insl
adc
push
pop
sub
mov
push
aaa
fwait
jo
xor
push
fisttpll
cmp
mov
orb
inc
into
push
sub
or
aam
push
push
and
mov
lods
mov
mov
aas
xchg
dec
inc
cmp
push
and
mov
jns
and
and
test
nop
cmp
scas
loop
iret
dec
in
sub
bound
cs
sbb
push
xorl
mov
cltd
mov
paddusw
in
out
cmp
setge
mov
and
loope
push
stc
repz
jbe
xlat
adc
jo
cmp
ljmp
sbb
mov
cwtl
mov
sbb
notb
or
lcall
pop
loopne
adc
xchg
add
cmc
xchg
int
lahf
mov
inc
push
and
icebp
pop
sbb
push
ss
movsl
inc
jnp
xchg
call
dec
pop
into
mov
xchg
sti
dec
pop
xor
pusha
into
sbbb
pushf
jle
insb
repnz
push
cmc
sti
iret
push
decl
fucomp
lods
clc
adcb
xor
insl
inc
jg
jmp
xchg
pop
cld
mov
daa
sub
pop
out
push
nop
jbe
movsb
push
enter
jl
mov
and
mov
push
in
call
or
mov
push
dec
das
ret
jbe
out
dec
xchg
jmp
add
incl
loop
push
pop
ret
ret
inc
pop
xchg
sti
dec
xor
cltd
cmp
pop
jno
popf
jmp
pop
mov
lcall
cmp
and
adc
xor
mov
dec
jnp
mov
add
das
mov
ret
int
xlat
repz
mov
loopne
adc
insb
sub
mov
sub
pop
dec
jg
add
or
cmp
sti
mov
jmp
subb
into
cltd
mov
sbb
sub
cmp
mov
movsb
scas
or
out
outsb
rclb
lret
loopne
sbb
dec
mov
add
or
mov
fwait
imul
adc
incl
inc
mov
aam
jmp
jb
adc
pop
and
sub
roll
inc
aaa
jle
sub
add
jbe
call
xor
inc
push
mov
and
mov
mov
push
lret
xorl
cs
test
scas
in
fistpl
xchg
push
test
jbe
mov
cmc
add
pop
inc
leave
mulb
add
mov
lret
loop
daa
stc
lods
pop
int3
dec
ret
fcmovnu
pop
out
scas
arpl
adc
ss
movsl
xchg
cmp
loop
cmpsl
pop
mov
sub
ja
imul
sub
in
jbe
gs
or
cmp
andl
dec
or
xor
inc
into
das
dec
aaa
movsb
mov
sahf
outsb
dec
mov
jne
stos
pop
leave
push
jae
lahf
call
sub
xchg
lods
jne
aad
xor
sbbb
ljmp
cmp
and
cvttps2pi
push
jecxz
and
inc
pop
aas
aas
popa
sub
and
sbb
sub
sbb
ret
adc
dec
aas
jbe
in
sbb
sub
mov
pop
out
mov
adcb
push
xor
add
pop
push
inc
jge
pop
sbb
mov
cmp
sub
je
into
mov
or
stos
jl
mov
shrb
adc
cmp
push
sbbb
cmpsl
push
xor
mov
data16
clc
clc
xchg
test
inc
pop
xchg
add
rcrb
ja
dec
cmc
sbb
pop
out
stc
js
dec
ficoms
cmp
out
sbb
push
mov
adc
insl
je
aas
out
lret
cmp
mov
or
add
lods
lret
mov
out
shlb
insb
dec
add
mov
push
ficompl
lea
mov
jae
sti
out
inc
adc
mov
movsl
mov
jo
jnp
add
inc
push
ljmp
adc
mov
pushf
jb
fldcw
mov
dec
xor
aam
sbb
movsl
mov
fs
or
mov
jp
lea
into
inc
mov
lods
in
test
icebp
fstpl
xchg
jns
or
loop
aam
inc
dec
outsl
stos
ficomps
test
scas
repnz
push
push
pop
fidivl
jbe
testb
fildll
mov
mov
aam
dec
mov
je
sbb
jl
xor
push
xor
fisttps
into
mov
jnp
adc
rolb
mov
push
cld
nop
mov
mov
std
mov
xchg
adc
sahf
das
mov
inc
adc
jmp
insl
scas
jbe
out
int
mov
pop
xlat
scas
cli
sub
mov
test
out
sti
lods
pop
xchg
daa
mov
add
mov
sbb
xchg
pop
cmp
insl
sub
dec
xchg
or
nop
lea
xchg
sub
adc
adc
leave
shlb
push
sarb
mov
mov
mov
push
pusha
cmp
and
xor
push
pop
adc
repz
and
jmp
xor
movaps
inc
pop
mov
mov
dec
inc
push
mov
popa
and
pushl
loope
aaa
mov
iret
mov
jno
addr16
cmp
nop
test
outsl
dec
jnp
movl
jl
stos
and
xchg
fwait
lds
sub
and
in
sub
stos
push
cmp
adc
mov
in
mov
fidivs
ljmp
fildl
pop
jno
lods
jp
repnz
movsb
imul
lret
jns
mov
adc
sub
mov
inc
add
rcrb
lahf
test
in
mov
xchg
add
sarl
cmpsl
jecxz
sbb
push
stos
aas
push
call
divl
add
cmp
mov
mov
jmp
outsb
adcl
adc
popa
sub
xchg
in
data16
sbb
or
cmp
dec
fcoms
sahf
outsl
or
mov
mov
cmp
mov
clc
fists
add
subb
and
into
mov
cli
dec
dec
test
pop
cmpl
ljmp
fsubs
insl
ljmp
push
sub
xor
mov
cmp
jae
sbb
pushf
cld
mov
xchg
imul
xchg
aas
cs
cmp
cwtl
xor
cli
out
cmp
outsl
xchg
or
jp
bound
sub
imul
pop
enter
inc
cld
fadds
jno
dec
fstps
iret
movsl
mov
lds
mov
lea
xor
ds
mov
mov
sub
rol
dec
jmp
test
sub
sub
pusha
imul
repz
popf
dec
faddp
inc
cmp
push
add
imul
popf
sbb
or
imul
xchg
inc
mov
shr
pop
repnz
mov
aad
jmp
pop
xchg
scas
dec
xor
dec
repz
mov
inc
sarl
pop
ds
cmp
insb
jge
hlt
aaa
aas
gs
sbb
pop
jl
sub
mov
inc
mov
pop
lock
imul
adc
clc
pop
fscale
outsl
lods
xchg
les
cmp
fstpl
xchg
mov
rep
xor
mov
and
push
sbb
jbe
add
addr16
shr
cmp
sbb
mov
push
push
and
cmpsb
aad
fwait
and
jle
mulb
dec
sub
pop
rorb
jp
dec
mov
shll
call
push
sbb
mov
mov
add
test
and
cmp
insb
loopne
push
or
xchg
jne
es
mov
gs
mov
add
cs
stos
mov
aaa
pop
jge
loopne
call
cmp
xchg
mov
mov
addb
push
mov
out
mov
push
test
adc
je
jns
lahf
adc
int3
les
loope
pop
push
mov
xchg
xchg
mov
push
mov
sbb
xor
stos
leave
clc
dec
ds
inc
sbb
cmp
ds
inc
sbb
inc
sbb
into
jp
shl
cmp
sti
jg
jg
es
xor
adcl
dec
test
sub
pop
mov
inc
ja
je
xchg
push
pushw
cli
or
cmovle
pop
and
jno
xor
sub
imul
jecxz
add
pop
jne
mov
popa
inc
stos
out
pop
pop
adc
out
aaa
sbb
mov
les
addr16
and
or
xchg
insb
pop
outsb
jnp
rclb
mov
jp
in
mov
dec
ds
dec
les
inc
or
movsb
inc
out
fisttpll
inc
push
shlb
inc
xor
nop
and
lret
jne
sbb
in
push
inc
mov
ret
int
mov
sub
test
das
cmp
lret
inc
or
adc
sbb
or
lahf
xlat
rcll
xchg
push
imul
roll
mov
out
mov
loope
daa
cmp
dec
dec
jp
sbb
ret
mov
pusha
addl
test
jge
lret
data16
push
sub
test
jp
arpl
or
out
loopne
sbb
mov
pusha
cmp
out
aad
xchg
bound
test
sbb
xor
out
sahf
fwait
inc
sti
pop
std
mov
xchg
int3
aas
dec
pop
sbb
pop
adcl
stos
rcrb
adc
cltd
mov
mov
sbb
mov
sub
jae
push
jo
mov
fwait
das
inc
fildl
pop
sub
lds
push
mov
rorl
xor
or
sbb
rcrb
iret
fwait
sub
rcl
or
fcoms
addl
frstor
repnz
or
inc
int3
sti
dec
xor
and
shl
aaa
lret
insb
movsb
sbb
int3
and
mov
fsubrl
stc
dec
dec
jne
xor
mov
sbb
add
xor
mov
jb
push
lds
inc
inc
and
stos
std
mov
incl
stos
rclb
jne
push
add
js
fidivl
into
jb
sti
or
and
dec
imul
test
test
inc
leave
dec
add
cld
sub
add
ds
negb
ret
jo
repz
cmp
ja
xchg
xchg
pop
adc
dec
bound
sbb
jo
jae
jg
fld
in
psrad
fiadds
inc
adc
push
popf
inc
inc
cmpsl
fistpl
and
mov
or
scas
stc
cmp
rorl
pop
sbb
in
ds
and
ss
int
sahf
imul
faddp
adc
jge
jns
mov
in
sbb
lock
clc
inc
xchg
mov
mov
adc
ret
or
lock
xchg
inc
or
frstor
clc
push
xor
je
mov
inc
adc
leave
fdivs
icebp
mov
ret
inc
jne
aad
pop
idivb
cmp
add
xchg
xor
bnd
int3
repnz
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
jp
rcrl
mov
fld
rcrb
in
ret
pop
cmp
aam
mov
xchg
or
int
dec
cli
and
xor
mov
lods
bound
push
jg
dec
nop
movsl
bound
or
cmp
add
loopne
adc
cmpb
jl
int
aad
fidivrl
aaa
sub
mov
test
stos
lahf
je
insb
lds
cwtl
mov
inc
jecxz
subl
call
cmpsb
add
je
movsb
insb
mov
or
jnp
in
std
jl
lret
dec
sub
cmpsl
or
mov
aas
and
lods
pop
and
gs
push
cmp
mov
repnz
dec
push
test
out
push
lret
push
pop
leave
xor
mov
rorb
lods
pop
fisubrl
mov
sbb
adc
ds
sub
fcoml
adc
or
sbb
pop
outsb
inc
stos
ds
pusha
adc
insb
pop
stos
jmp
jp
sbb
es
pop
loope
out
out
rorl
fnstsw
insb
imul
jns
sbb
add
popf
jge
pop
and
gs
jmp
cli
or
movsl
adc
mov
stos
sub
adc
mov
push
lods
xchg
fisttpl
or
mov
mov
rcr
pop
mov
leave
dec
adc
xlat
mov
loop
inc
xchg
iret
test
test
mov
movsb
test
mov
imul
sar
sbb
movl
cmp
push
leave
lahf
mov
loop
add
adc
xor
cmpsb
xchg
cmp
fxch
lret
lods
or
sbb
icebp
push
int3
sub
add
or
les
cwtl
loope
leave
mov
outsl
arpl
stc
icebp
sbb
push
cmp
int
mov
imul
sub
repnz
add
out
outsl
in
sub
cmp
ljmp
xor
dec
mov
mov
xor
push
inc
push
das
pusha
sti
test
out
adc
xor
pop
cmpsb
adc
push
stc
inc
xchg
int
fcoms
jnp
pop
sbb
idiv
jno
xchg
out
pop
test
sub
xchg
cmp
or
inc
sbb
and
push
clc
je
jnp
divb
pop
repnz
cmp
xchg
push
loope
mov
into
pop
cltd
pop
pop
gs
sti
sbb
push
jns
push
jl
and
mov
rep
dec
js
repnz
xchg
gs
in
xor
cmpsl
insl
adc
and
fiadds
pushl
negl
les
mov
call
stos
movsl
xchg
pushl
jne
adc
cld
outsb
mov
mov
mov
jp
adc
mov
push
cmpsb
xchg
mov
clc
fcmovbe
es
cltd
jae
fiaddl
inc
sub
fcoml
inc
ficompl
adc
cmp
jae
cwtl
pop
fnstcw
icebp
mov
test
fists
lret
jecxz
hlt
imull
or
mov
xor
out
jae
and
in
lret
pop
inc
insl
shll
lret
xor
callw
adc
dec
mov
outsb
outsb
or
mov
sub
int
cld
test
movsb
dec
jmp
add
mov
out
jbe
jb
push
sub
xor
cmp
jl
mov
ljmp
jecxz
arpl
outsb
popf
sahf
add
fcoml
mov
mov
mov
push
bound
dec
ja
ljmp
adc
xor
cmpsl
rolb
into
fcmovnb
or
loop
cmc
inc
subl
ss
mov
cld
push
loop
xchg
pop
push
int3
mov
rcrl
aad
lret
mov
gs
in
pop
lret
movsb
pop
add
mov
xchg
nop
inc
inc
pop
mov
movsb
push
mov
dec
sub
sbb
sub
add
in
int3
adc
mov
clc
and
add
or
jb
into
mov
out
pop
dec
outsb
pop
add
push
bnd
and
cli
mov
dec
cmpsl
jmp
add
jae
mov
xlat
dec
xlat
mov
cwtl
jb
jge
test
fidivl
lods
or
xchg
mov
xlat
sbb
adc
mov
and
sahf
in
dec
mov
push
and
insb
cmp
repz
lods
sbb
jge
cs
xor
fcompl
add
hlt
xor
cmpb
jp
fidivrl
das
pop
push
clc
js
outsl
jnp
mov
mov
scas
push
aas
bswap
divb
push
sub
lret
xor
ret
or
cmpsb
fsts
jb
ds
data16
jbe
mov
out
add
pop
arpl
pusha
dec
je
out
fs
inc
jl
jno
int3
xchg
cmpsl
jge
push
jnp
lcall
jbe
loop
pop
xchg
mov
xor
add
arpl
int3
dec
dec
lods
dec
je
aaa
cli
data16
mov
add
out
sahf
xchg
ljmp
and
test
popa
xchg
imul
mov
mov
xchg
fisubs
aad
push
rcrb
xor
ret
add
insb
js
loope
dec
jl
shl
cmp
cmp
lods
sbb
jl
dec
sub
add
dec
xor
jo
and
xchg
push
adc
mov
and
push
movsl
or
repnz
mov
out
popa
mov
clc
ret
or
mov
or
fs
adc
mov
push
fwait
rcrl
ja
clc
nop
mov
inc
out
jge
faddl
bound
int3
nop
outsl
xlat
and
pushf
jecxz
and
dec
pusha
cmp
xchg
test
sub
test
lods
ljmp
popf
sub
push
or
xchg
dec
mov
daa
adc
das
jl
sbb
and
cld
add
xchg
cmc
hlt
shll
into
xor
dec
cli
xlat
or
jbe
sbb
jp
daa
hlt
call
sbb
dec
roll
add
xor
adc
in
fsubr
mov
sti
shl
ret
lods
xchg
add
push
xchg
mov
push
xchg
mov
fcmovnu
out
inc
pop
add
aad
pop
stc
ljmp
imul
hlt
sahf
ss
insl
out
cwtl
mov
lea
outsb
imul
jle
mov
mov
xchg
fadds
xchg
lds
and
xlat
pop
frstor
push
push
add
push
mov
fwait
pop
jb
push
mov
mov
dec
sub
add
mov
out
inc
ss
test
push
aad
mov
inc
xchg
add
scas
xor
mov
mov
adc
push
sub
hlt
jmp
inc
sbb
shll
imul
cmpsl
dec
xor
jbe
hlt
in
ljmp
adc
push
pop
xor
xchg
pop
lret
jne
cmovs
sbb
sbb
inc
aam
fwait
in
test
jne
jb
push
popa
mov
or
sub
inc
xor
adc
xchg
repz
jl
fldenv
es
sub
xchg
sti
cmp
jg
roll
bnd
out
adc
or
mov
pop
push
push
rorl
mov
rorb
jne
dec
ficoms
movsl
cs
push
adc
enter
xor
je
push
fdivrs
lcall
sub
add
xchg
mov
sahf
popa
mov
mov
xchg
scas
les
imul
into
push
das
adcb
test
mov
pop
and
ljmp
xchg
xchg
ret
fdivrl
jg
xor
inc
outsl
fwait
repz
jno
sahf
xchg
test
mov
inc
push
inc
mov
push
movsl
add
sub
dec
loop
or
pop
frstor
mov
aam
aam
inc
dec
xchg
xchg
popf
add
mov
aad
pop
mov
mov
lods
push
packuswb
dec
jle
rep
loopne
xchg
into
out
push
or
cmc
les
push
sti
or
mov
jmp
jecxz
sbb
sahf
insl
lods
test
daa
push
adc
lods
vpsignb
inc
xchg
movsl
les
popa
je
imul
add
imul
popa
mov
push
shlb
xchg
jbe
and
jo
jns
cmp
cmpl
push
mov
aad
xchg
or
sbbb
cmpsl
dec
rorb
cmp
push
cmc
int3
xchg
pop
lods
jo
mov
aad
push
mov
imul
pop
add
mov
pushl
popa
icebp
inc
adc
jp
pop
in
in
lret
loope
or
rcll
cmp
dec
cmp
dec
pop
subb
cmc
pop
or
mov
push
push
mov
aad
test
inc
iret
or
sbb
fildl
sub
jle
dec
cmp
sub
sub
lea
jns
das
testl
sbb
jo
mov
fstl
inc
lea
sub
push
ret
outsb
dec
nop
jmp
movsl
push
nopl
jp
cwtl
out
pusha
mov
mov
cmp
movsl
scas
jae
arpl
shll
aas
cmp
in
nop
idivl
rcrb
sbbl
fldcw
imul
test
out
pop
sbb
xchg
or
and
lock
xchg
fcoml
and
arpl
jnp
repnz
inc
inc
pushf
addl
adc
int
loope
out
insb
pop
rorb
push
or
jne
mov
je
iret
adc
mov
int
fdivp
adc
pop
mov
sar
adc
jecxz
dec
inc
sbb
xchg
xorb
gs
push
test
stos
shlb
cmp
or
not
dec
push
push
and
add
push
iret
adc
xchg
data16
xor
mov
xor
fs
cs
scas
out
pusha
int3
jmp
mov
rcrl
dec
jno
cmp
add
jle
sbb
pop
addr16
in
iret
sarb
fwait
sub
cmpsb
loop
pop
movsb
mov
dec
pop
test
test
dec
inc
pop
mov
mulb
aad
popa
lahf
add
mov
shlb
jae
add
mov
mov
in
jp
lock
push
or
pushf
and
bound
daa
pop
add
push
mov
xlat
dec
sti
push
int
into
adc
jmp
idivl
pop
pushf
and
pop
xchg
lret
cmc
cli
mov
dec
mov
and
mov
jge
mov
adc
pop
aaa
lcall
sbb
inc
loop
jecxz
out
adc
ret
sbb
dec
cmp
cmp
inc
push
js
in
mov
or
add
int
shll
imul
inc
mov
leave
cmpsb
js
sti
xchg
out
je
lahf
jmp
xor
push
imul
sbb
ret
mov
out
daa
or
std
fists
daa
rol
fs
xchg
loopne
imul
dec
mov
ret
in
ss
xchg
arpl
pop
std
lea
sbbb
sbb
outsl
int
loopne
fcmovnb
jb
adc
dec
cmp
jae
loopne
mov
or
jb
out
dec
jp
icebp
push
cli
push
scas
or
fs
mov
adc
or
ds
fisttpll
inc
inc
push
shll
xchg
cmc
bnd
xorb
je
jo
dec
cmp
das
ja
lods
cmp
stos
add
mov
add
dec
popa
mov
ds
jmp
dec
shlb
dec
das
cmpsb
mov
sub
jg
dec
ret
rol
in
daa
rcrb
mov
in
out
lcall
into
mov
or
cmp
inc
and
sahf
into
fidivrl
js
shll
cltd
adc
xchg
or
cmp
arpl
mov
repnz
icebp
flds
testb
adc
or
test
mov
mov
int3
stc
out
addr16
repz
and
dec
pop
das
adc
inc
pop
push
xchg
pop
dec
outsl
aad
mov
xchg
insb
push
xchg
mov
adc
insl
push
adc
push
mov
mov
pop
adc
add
lcall
sarb
jb
dec
je
rep
popa
decb
mov
sub
mov
pop
icebp
lcall
pop
testl
je
out
xor
mov
data16
add
in
inc
jae
test
call
dec
pop
sub
adc
fs
inc
in
push
mov
lret
leave
ror
mov
sub
dec
scas
fwait
inc
fisubrl
clc
xchg
into
dec
mov
inc
scas
int
test
lret
hlt
dec
dec
sub
add
repnz
outsl
lock
mov
sub
fwait
cli
daa
add
pop
negb
test
in
ss
aas
lcall
test
inc
mov
enter
into
mov
sub
jmp
out
push
jne
test
iret
scas
push
outsb
movsb
jno
jo
dec
or
lea
insb
push
js
ljmp
pop
mov
addr16
sbb
ror
sbb
sub
push
jnp
push
shrl
sub
icebp
adc
mov
cmp
mov
sub
test
das
sbb
out
inc
repnz
mov
or
insl
sub
push
aaa
jl
mov
inc
jg
push
iret
push
and
lcall
hlt
fiadds
fsubrl
test
mov
cmpsl
cld
cmp
out
lret
out
jg
dec
sbb
dec
jno
xchg
pop
cmpsl
andl
fisubrs
scas
mov
roll
pop
fwait
adc
movsl
sar
stc
fstps
sub
aaa
lret
inc
jb
push
dec
into
fsubl
xchg
cmp
das
sbb
fwait
cmpsl
dec
mov
cmp
cmp
xor
cmpl
pop
pop
push
mov
mov
sub
cmp
add
movsb
sbb
sahf
in
jle
or
mov
daa
lea
mull
or
xor
xor
pop
pop
mov
push
jmp
sub
push
fwait
inc
lcall
or
lret
adc
pop
and
out
xchg
shlb
ss
mov
js
es
test
scas
data16
xor
mov
in
aas
mov
ljmp
bound
jbe
mov
push
xor
add
in
in
or
in
cli
xchg
inc
add
rcrl
fxch
add
mov
mov
sbb
xchg
in
outsb
arpl
add
xor
out
shll
xchg
inc
subl
shll
mov
cmp
dec
xchg
inc
popf
cmpsl
mov
out
push
add
jns
mov
loopne
data16
mov
dec
pop
xor
ljmp
mov
mov
inc
sbb
cmp
aad
notl
shl
ret
push
fmuls
mov
xchg
push
xchg
add
and
xchg
adc
scas
dec
sbb
outsl
jnp
mov
mov
and
adcl
pop
sahf
jae
sub
mov
mov
test
mov
pusha
jne
call
dec
dec
xor
fnsave
imull
movq
fidivl
adc
inc
adc
add
fnstenv
in
and
lcall
rcl
iret
addl
inc
xor
cmp
mov
dec
jecxz
and
jecxz
in
nopl
ja
xchg
sub
adc
sub
and
push
mov
mov
or
loopne
in
mov
adc
rorl
pop
fwait
jns
xchg
loope
or
pop
std
repz
add
scas
lret
xor
pop
fnstenv
adc
mov
push
mov
mov
sbb
mov
adc
jg
and
jecxz
int
or
and
sub
stc
jbe
xchg
sub
adc
push
pushf
and
ja
lods
jle
push
dec
ljmp
std
add
outsl
cwtl
mov
test
lretw
xchg
push
insb
mov
add
adc
or
cmp
roll
in
lret
and
cmp
ret
inc
mov
sarb
pusha
sbb
in
pop
or
addl
mov
js
mov
mov
sub
call
out
repnz
lret
inc
jge
mov
incl
fildl
push
in
sub
add
mov
ret
sub
fdivrp
push
sub
cwtl
or
movsb
lcall
call
xor
mov
pop
cmpsb
fldenv
ret
ja
sbbl
cltd
sub
pop
test
push
nop
pop
mov
pusha
lret
xchg
xchg
dec
push
fldt
mov
imul
inc
add
inc
aas
mov
pop
shl
pushf
sarb
ret
xchg
xor
mov
cmc
sbb
xchg
jo
add
ljmp
push
jae
sahf
cld
jmp
jl
fs
mov
dec
push
pop
scas
mov
xchg
fadds
movsl
cmp
jecxz
dec
cmpb
mov
arpl
mov
pop
xchg
adc
inc
fsubl
or
pop
call
and
outsb
orb
adc
mov
arpl
mov
stos
mov
lods
dec
dec
jg
cmp
adc
lock
rcl
test
sub
sbb
fdivrp
pop
movsl
add
xchg
in
stos
sbb
in
mov
lods
mov
lret
push
pop
je
cmpsb
scas
out
xlat
push
push
out
out
movsb
outsb
xor
rclb
cmp
or
bound
pop
pop
scas
cmpsl
nop
andb
xchg
fidivl
or
idivb
sbb
daa
hlt
mov
adcl
cld
sub
stos
enter
scas
cmp
inc
int3
jl
mov
mov
test
lods
fwait
out
jl
xchg
ja
popf
mov
imul
jno
mov
imul
rcll
mov
xor
js
arpl
xchg
jb
xor
cmp
sarb
cmpb
std
xor
inc
leave
fcomp
jb
cmc
test
push
jge
xchg
xlat
mov
adc
rcll
out
aas
jo
shrl
mov
fs
adc
xchg
ret
shlb
or
ret
jg
or
test
test
cmp
mov
mov
gs
mov
or
lods
mov
cmp
mov
add
xor
outsb
add
arpl
sbb
fmuls
and
insl
pop
and
xorb
lods
lea
dec
outsl
cmpb
pop
das
pop
push
in
sti
mov
push
out
into
daa
jle
jne
outsb
rorb
pop
dec
sbb
stos
stos
cltd
fwait
out
dec
lds
roll
mov
int
je
mov
jb
sbb
insl
mov
xchg
mov
lcall
push
dec
gs
out
ljmp
push
popa
cmp
bswap
int
dec
xor
test
push
and
gs
pop
outsb
dec
gs
and
movb
dec
sysexit
pop
data16
in
sub
scas
cmp
test
out
mov
fnstcw
mov
sbbl
adc
sbb
mov
cmp
push
and
push
lahf
fiaddl
xchg
mov
mov
je
sbb
dec
jp
insl
inc
in
jmp
sti
mov
enter
dec
push
fsubrs
cmp
inc
in
rcr
rcrl
hlt
add
add
sub
jp
inc
test
ds
fwait
arpl
mov
outsl
movsl
out
add
push
adc
lret
subl
sub
stos
add
popf
mov
jl
jbe
int3
sbb
shlb
pop
jmp
fwait
ret
jp
cmp
mov
push
es
pop
xchg
mov
jmp
andl
lahf
mov
cli
pop
lret
sbb
push
les
addr16
xor
or
inc
sbb
dec
mov
arpl
inc
add
mov
faddl
pop
push
sbb
enter
dec
cwtl
sti
mov
fmul
test
shl
imull
dec
add
iret
out
inc
and
es
insb
and
jbe
sar
outsb
pop
pop
add
in
xlat
and
adc
xchg
sbb
fstps
push
and
pop
lods
mov
shl
jb
sub
xchg
out
sub
mov
xchg
dec
xor
and
xchg
fwait
and
sub
or
cmp
push
push
cltd
ret
es
xchg
hlt
stos
and
xlat
ja
cmp
sub
dec
mov
push
push
add
mov
and
push
jmp
push
jae
mov
icebp
cwtl
jnp
fwait
xor
out
pop
subb
xchg
xchg
mov
xchg
outsb
cltd
jp
loop
jo
mov
or
cmp
call
aad
mov
and
sarl
ss
loop
das
and
sbbb
and
cmp
mov
outsl
sbbb
sbb
fdivl
add
mov
mov
ja
add
cli
scas
pop
enter
xor
cmp
cmp
and
jge
sbb
dec
and
stc
pop
flds
repz
and
or
aas
sarb
rcrl
sarb
and
insl
and
lret
loop
popf
xchg
imul
lods
outsl
fstps
push
fiaddl
rolb
out
push
das
bound
cltd
or
push
cmp
int
xchg
out
aam
fmuls
je
mov
out
lret
jg
push
pop
mov
mov
mov
xchg
std
loope
mov
sbb
movsl
mov
aas
call
popa
pop
test
push
sbb
pop
enter
cmc
fcmove
mov
push
repnz
lea
lret
fsts
pop
bound
int
cli
pop
out
sub
arpl
inc
fiaddl
mov
jnp
shll
lret
fdivs
mov
call
mov
pop
sub
mov
mov
imul
sbb
push
inc
rcrb
pop
aam
xbegin
mov
fmuls
and
out
mov
jl
mov
push
cmpb
mov
or
notl
jge
adc
sbb
frndint
and
dec
xor
sub
mov
repz
sbb
insl
sbb
addr16
notb
cmpsl
lcall
int
mov
movsb
int
imul
fsubrs
faddl
mov
cs
addb
mov
jge
das
mov
jns
sub
cmp
pop
jl
mov
xchg
jne
fstps
sub
push
mov
test
mov
and
enter
sti
push
fdivrp
bound
push
mov
or
push
push
in
mov
dec
or
xlat
aaa
test
push
shrl
sbb
inc
jns
les
add
or
cmpsb
pop
stos
dec
inc
inc
add
sub
or
mov
inc
cmc
xchg
adc
jbe
push
dec
test
jns
and
lds
popf
dec
xchg
int3
mov
add
orl
sbb
out
testl
cmp
mov
repnz
shll
filds
and
lods
jl
lahf
outsw
pop
cwtl
pop
repz
and
cmp
mov
cli
test
fsub
popl
fmul
and
jmp
add
daa
inc
dec
pop
xchg
cs
into
subb
push
les
in
xchg
movsl
cmc
mov
sub
sbb
dec
loop
lea
aad
das
sti
mov
push
jbe
shrb
mov
xchg
data16
fsub
adc
mov
and
orl
popf
ljmp
sub
sub
add
outsb
cs
lds
mov
adc
push
inc
fstl
ja
imul
push
add
push
fwait
or
pop
jmp
test
cmp
les
add
int3
movsl
lock
xor
aam
rcrl
vaddpd
inc
mov
inc
or
clc
xor
sbb
lods
mov
jne
pop
dec
jae
sbb
add
leave
sub
scas
xchg
mov
roll
and
mov
test
jae
insb
xor
sub
cmpsb
dec
push
sbb
fldl
std
rcrb
cmp
lods
stos
adc
rcll
outsb
out
push
push
sbb
add
dec
in
pusha
mov
lcall
pop
mov
repz
test
xchg
out
jno,pt
sbbb
jp
gs
out
cmp
pop
bound
mov
pop
pop
mov
negl
xor
push
gs
cltd
movsb
pmullw
and
adc
fisubrl
loop
pop
cld
int
dec
mov
sbbb
mov
push
jecxz
xor
pop
aam
sub
cmp
sbb
mov
cmp
mov
ret
cmp
inc
jae
push
push
lods
pop
xchg
jb
cmp
dec
fistl
pop
fidivs
aaa
rclb
sbb
xchg
es
jge
pop
add
movb
es
push
imulb
or
push
and
mov
repz
sub
movsb
cmp
mov
cwtl
dec
mov
fstl
loop
jnp
cmc
shrl
pop
aaa
stc
inc
push
dec
and
push
mov
mov
pop
mov
das
xchg
cmp
popf
sub
xchg
jbe
add
sbb
sti
fcoml
addr16
or
push
dec
pushf
ffreep
les
lds
inc
in
jl
xchg
rolb
jae
es
enter
xlat
and
adc
xor
stos
jb
pop
sub
push
dec
inc
loop
jae
pop
xchg
xor
adc
ljmp
cmp
outsl
popa
pop
jmp
ljmp
loop
into
rcrb
sbb
out
xchg
xor
sbb
xchg
xchg
xor
loop
sub
popa
aam
inc
sbb
lods
out
addr16
or
movsb
inc
jecxz
xchg
in
push
add
add
and
jns
mov
popa
xchg
outsb
sbb
js
aaa
js
iret
outsl
pop
inc
bound
or
and
jne
mov
mov
out
ja
rorb
and
outsl
fwait
pushf
cmp
pop
aas
out
sahf
pop
testb
stos
mov
and
inc
scas
jns
xchg
xor
ss
xlat
scas
sub
adc
push
adc
lods
jb
test
in
dec
jmp
adc
cmp
mov
outsl
test
ss
sub
push
lds
push
xor
mov
jmp
or
sub
loop
xor
test
fcompl
cmp
pop
nop
repnz
xor
shl
inc
arpl
pop
push
cmp
xchg
cwtl
sbb
pcmpeqb
pop
pop
mov
adc
mov
pop
mov
shl
xor
pusha
mov
inc
addr16
push
push
int3
push
bound
pop
mov
test
push
dec
pop
jbe
cmc
mov
add
imul
lea
test
adc
sub
je
xchg
int
jae
push
int3
adc
mov
ficompl
das
popf
ss
mov
mov
push
adc
adc
mov
jne
and
test
repz
jmp
scas
lea
dec
or
and
xchg
xchg
or
xor
je
pop
js
push
jg,pt
add
jecxz
js
nop
push
jb
scas
pop
es
fstl
sub
ret
xchg
cld
push
inc
add
cmp
fwait
lods
and
or
cmp
inc
pop
fcoms
xchg
inc
fnstenv
pusha
dec
push
sahf
out
inc
movsb
inc
lahf
ss
xchg
sahf
pop
xlat
movsl
push
push
test
and
dec
add
mov
lahf
lods
sub
cmp
scas
cmp
pop
lods
lcall
jae
inc
pop
int
lret
aas
jae
inc
jmp
movlps
jecxz
pop
mov
leave
nop
jle
hlt
push
pop
or
ljmp
and
dec
pop
cmpsb
scas
subb
push
in
mov
xor
sub
imul
mov
sbb
movsl
sub
xor
inc
xor
and
ret
xor
stc
or
cmp
leave
xlat
xchg
mov
lock
loopne
or
lcall
add
adcl
loope
jmp
inc
xlat
sub
xor
mov
aad
fstpt
pop
jp
adc
pop
sub
mov
fisubl
stc
and
aam
scas
mov
xor
mov
out
lods
lock
add
and
add
clc
push
and
dec
pop
sub
out
lea
leave
adc
daa
add
rorb
dec
in
jmp
sbb
push
lret
loopne
imul
cmp
dec
rcll
daa
and
dec
pop
mov
xor
inc
shlb
jae
adc
inc
cltd
push
xor
pop
cmpb
xor
shlb
xchg
cmp
movsl
and
dec
fwait
xchg
xchg
fnstcw
sbb
jno
sub
dec
ret
xorb
dec
fiadds
lahf
daa
xor
mov
sbb
cwtl
xchg
mov
in
lahf
inc
dec
push
int3
mov
in
pop
lods
jb
shrb
fwait
les
jne
cs
js
cmpsl
aad
jno
jl
insl
mov
js
sbb
push
sahf
daa
inc
pop
jne
ds
je
cld
add
sub
dec
fadds
cld
in
mov
aaa
adc
xor
inc
push
pop
sub
pop
shrl
dec
mov
push
jmp
jns
xchg
ficoms
movsl
das
out
ja
arpl
ja
sbb
add
jno
das
xlat
mov
sub
out
sti
or
lcall
outsl
repz
xchg
push
push
xchg
jo
jl
arpl
js
idivl
lret
out
sbb
adc
mov
sbb
es
ljmp
insl
dec
popl
cmp
inc
pop
out
xor
dec
movb
outsl
cmp
sbb
add
add
add
in
mov
pop
xor
jmp
out
lock
ds
mov
cmpl
mov
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
pop
loope
flds
add
aaa
cmpsb
or
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
