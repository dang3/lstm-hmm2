push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
lds
sbb
sbb
sahf
adc
sbb
lods
cld
sub
mov
mov
clc
out
or
mov
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
or
add
insb
xor
imul
daa
mov
popa
test
imul
stos
div
mov
test
movsl
and
or
xor
pusha
pop
xchg
push
and
add
mov
int3
out
gs
pushf
dec
xchg
jl
mov
popl
outsb
hlt
mov
mov
rorb
xchg
ret
sub
mov
mov
ret
stos
fisubs
ficomps
push
test
test
test
xchg
xchg
int3
arpl
test
ss
or
mov
scas
mov
or
or
insl
push
lods
xchg
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
mov
adc
sbb
push
mov
ljmp
cmp
pop
stos
ds
cmpsb
adc
call
push
scas
inc
pop
stos
fisttpl
or
inc
pop
lret
aaa
cs
fidivrs
sub
adc
les
aam
xor
in
ret
fisubs
fcompl
mov
int3
xor
inc
push
in
xor
push
iret
mov
mov
outsb
jns
fisttpl
mov
shl
lock
sub
cld
mov
daa
push
sub
out
xchg
mov
cmpsl
xchg
adc
pop
addr16
mov
fisttpl
fwait
mov
xor
jg
sbb
shl
scas
add
and
push
loopne
sbb
test
dec
dec
icebp
es
push
xchg
imul
filds
adc
inc
setne
cmpb
jg
adc
scas
mov
fmuls
pop
push
inc
movsb
dec
cmp
mov
or
ror
sbb
jp
out
repz
or
and
stc
adc
pop
mov
jno
push
adc
push
in
mov
xor
gs
jae
xchg
mov
pop
rclb
mov
mov
mov
lret
jge
cmp
mov
aas
push
sbb
mov
aaa
clc
inc
sub
test
xlat
inc
test
cmpsb
jae
fcomps
movsb
loope
push
sbb
sub
fisubs
mov
xchg
loope
xchg
xchg
out
lahf
dec
sub
icebp
lret
frstor
pop
and
adc
cld
dec
mov
jp
subb
inc
pop
rcrb
out
dec
int
aad
ret
inc
dec
xlat
and
push
push
aaa
dec
repz
popa
insl
add
test
sub
xor
pop
stos
int
insl
lock
push
dec
xor
inc
adc
mov
jno
inc
aaa
adc
cmc
add
pop
add
cli
enter
subl
cmpl
shll
adc
fwait
aad
mov
dec
popf
pcmpeqw
ja
out
cmp
js
add
ljmp
jl
cmc
cmp
jle
test
insb
jmp
ljmp
mov
mov
dec
xor
jge
out
int
rorb
jns
add
cli
mov
rcll
cli
ja
jmp
iret
mov
es
jle
dec
mov
popf
jg
and
or
std
cld
jle
adc
lods
out
adc
je
xor
jl
cs
inc
jle
and
arpl
dec
iret
outsl
ja
fldl
inc
les
cmp
stos
cwtl
aas
add
pop
pusha
ret
xchg
ss
push
testb
sbb
gs
xor
les
data16
add
lahf
ljmp
repz
sbb
cwtl
ud0
popa
sbb
in
shlb
sarl
adc
loopne
aad
xchg
popa
je
leave
xor
ds
dec
lcall
or
xchg
loope
es
dec
test
imul
ret
int3
leave
jno
ds
mov
jl
jne
outsl
dec
pop
dec
icebp
jge
ret
stc
sbb
fmul
cmp
lahf
ljmp
inc
fidivl
dec
jae
ret
fstps
add
fwait
and
jmp
stos
pusha
clc
orl
lds
sub
or
inc
outsl
sbb
xchg
sbb
lods
pop
jnp
cld
mov
cmp
insb
pop
test
lods
out
in
xlat
jp
js
sbb
cmp
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
lods
cltd
mov
sahf
adc
sbb
or
add
fwait
xchg
xor
pop
jge
inc
sarl
adc
cmp
sub
jle
lret
sub
adc
pop
xchg
adc
fcmovne
sub
enter
add
add
adc
fistps
cmc
pop
or
push
cmp
add
mov
hlt
in
or
mov
pop
mov
insl
xchg
mov
sbb
popa
mov
mov
jecxz
hlt
jo
fsubr
and
decl
mov
std
imul
add
pusha
or
je
pop
xchg
pop
ret
jo
sub
out
or
add
inc
rcr
pop
rclb
xlat
out
out
sbb
movsl
push
add
xchg
sbb
xlat
bound
dec
js
shlb
loope
out
movl
mov
mov
rcr
bound
push
jle
mov
jmp
leave
push
cmpsl
sahf
xor
insl
pop
push
ficompl
pushf
ja
hlt
sbb
call
mov
pop
lcall
jae
sub
jae
in
mov
jne
lock
pop
jb
and
mov
inc
call
subl
or
sbb
call
sbb
mov
add
in
push
js
iret
movsb
test
push
data16
pop
mov
mov
pop
xlat
mov
out
cmp
pop
mov
push
test
dec
xlat
pop
sub
hlt
cltd
jp
aas
sub
sub
into
sub
std
outsl
and
fcomps
inc
adc
inc
adc
les
vpandn
xor
in
fdivr
lcall
push
mull
lea
sub
cmc
out
sti
mov
jae
inc
pop
lret
into
cmp
les
ret
dec
push
push
mov
and
fucomip
mov
jg
leave
and
sahf
cmpsl
pop
pushf
jl
ret
loop
movsb
loopne
std
loop
int
mov
mov
fcoms
call
cmc
fbld
mov
cld
adc
loope
mov
notb
mov
add
xchg
push
iret
hlt
jmp
sbb
repz
jecxz
push
in
lea
insl
xor
aam
cmp
cs
call
cld
or
sub
or
mov
addr16
inc
addr16
sub
pop
repz
xor
mov
outsl
rorb
popf
adc
sbb
jnp
sub
xchg
int
popf
lods
loope
and
push
dec
and
rolb
pop
jg
out
arpl
popa
jb
push
pop
sbb
pop
fldcw
cmpb
fcomps
loop
les
pop
out
loope
mov
scas
push
stc
std
cmp
rclb
test
pop
mov
roll
adc
jp
orl
add
pop
dec
inc
pusha
lock
lcall
inc
imul
mov
jne
mulps
adc
adc
mov
sbb
dec
push
fnstsw
jns
xchg
xchg
movsl
in
mov
imull
sbb
div
jne
mov
fbstp
add
mov
es
cmp
adc
repnz
leave
dec
dec
mov
nop
push
sub
add
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
sub
fbstp
sbb
es
mov
scas
in
stos
cmc
test
movsl
lea
ret
mov
mov
repz
inc
repz
or
inc
jecxz
gs
shll
or
push
mov
adc
pop
sub
add
sbb
or
add
add
inc
loop
or
ret
inc
mov
arpl
mov
push
add
jno
nop
dec
push
dec
fnstcw
dec
call
xchg
in
das
cs
mov
fiadds
addl
jbe
sub
insl
pop
faddl
xchg
jmp
test
push
cltd
imul
into
pop
popf
stc
sub
je
and
xchg
loope,pt
cld
insb
lods
test
jecxz
or
lods
sarb
xor
sub
mulb
aad
inc
pushf
out
adc
cli
stc
dec
out
push
dec
sbb
fistl
outsl
jns
daa
int
int
aad
xor
and
sti
jb
inc
mov
mov
lock
lea
filds
pop
repnz
jo
push
cs
mov
bswap
dec
daa
mov
jbe
inc
int3
or
push
imul
std
or
cmp
sarb
and
push
faddl
lods
and
ficompl
test
sub
adc
mov
cmp
aaa
mov
out
inc
push
adc
dec
and
jge
push
inc
cmp
or
add
mov
jle
dec
inc
jl
pop
in
add
jb
xorl
outsl
mov
loopne
loopne,pn
push
mov
hlt
cmp
ficoms
in
mov
jle
xchg
inc
adc
or
cmp
repz
mov
pop
ret
cli
leave
adc
pop
or
fwait
mov
cltd
jns
jo
push
mov
shr
rcrb
sbb
sarb
mov
loopne
pop
inc
cs
mov
push
cs
sub
add
cmp
fnstenv
xchg
sbb
sbb
daa
stos
ret
shrb
mov
es
outsb
fcoms
clc
mov
dec
popf
cmp
sbb
sub
jp
mov
jbe
jl
jle
pushf
roll
stc
rolb
psubb
push
xor
push
or
add
aaa
mov
js
cwtl
rcr
scas
scas
dec
mov
outsb
mov
je
dec
pop
clc
fidivs
dec
mov
mov
cmp
aad
adc
jb
cli
push
ja
aam
xchg
or
mov
and
popf
scas
int3
loope
jl
pop
mov
fdivrs
mov
out
jle
jmp
dec
testl
dec
les
ja
fldenv
jmp
and
inc
outsb
mov
cmpsl
adc
xchg
add
ja
xchg
fildll
pop
int3
gs
loopne
xor
adc
mov
fstpl
push
jecxz
cmc
out
xchg
xor
lds
js
ret
push
data16
push
jno
rcll
push
rorl
adc
push
sbbl
out
addr16
or
inc
pop
xchg
dec
pop
or
cmp
xlat
sub
test
ja
mov
adc
arpl
mov
sbb
int
cmpsb
adc
roll
mov
jmp
psubd
scas
dec
rolb
addb
xchg
sub
out
ljmp
scas
push
sbb
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
es
movsl
jmp
sub
lods
push
mov
and
cmp
mov
push
dec
lods
out
in
inc
mov
shlb
rcll
rcr
push
mov
inc
adc
cltd
orl
push
pop
pop
xchg
loop
mov
stos
shlb
sbb
mov
sub
subb
in
icebp
mov
cmp
out
mov
fs
sbb
stc
xor
stos
xor
popa
cmp
pop
stos
pushf
lods
mov
js
rcrb
out
push
test
lea
sbb
jbe
leave
ret
int
movsb
orl
sbb
in
mov
fcompl
cmp
jno
arpl
inc
mov
add
push
adc
xchg
cmp
adc
fdiv
fisttpl
pop
lds
mov
ret
fldcw
mov
loope
rcrb
adc
sub
add
jb
aaa
iret
push
and
cmp
test
jmp
mov
pop
jae
cmp
movl
cltd
sbb
pop
fs
test
loope
sub
scas
es
popf
jg
sub
call
lret
insb
jae
rcll
mov
lahf
ds
sub
mov
jl
inc
add
int3
push
sub
in
sti
imul
js
push
repnz
adc
add
int3
jns
push
loopne
mov
stos
sti
ret
or
sub
clc
shl
aaa
mov
popa
lahf
orb
pushf
cmp
push
add
jnp
adc
stos
cmp
mov
pop
dec
sub
sarb
inc
sub
repnz
add
out
xchg
push
sarb
shll
cmp
js
mov
sti
pop
sbb
lcall
cltd
mov
lods
insb
inc
jb
jbe
not
jae
lgs
xchg
fmuls
ds
fidivl
pop
lock
sbb
scas
test
inc
cmp
sub
jnp
popa
mov
xor
jns
outsl
mov
shll
push
insl
jmp
aaa
cwtl
mov
lods
mov
cli
or
lds
jnp
jge
mov
mov
bound
ds
xchg
sbb
jge
xchg
cmp
sbb
mov
xchg
jmp
and
int
stos
fldenv
roll
cmpsl
es
into
lcall
mov
jge
int
xchg
test
loope
mov
nop
push
jae
popf
mov
mov
cmc
arpl
movsb
mov
test
sbb
jp
jl
in
rcl
orb
outsl
adc
jecxz
xchg
pop
mov
adc
mov
jae
mov
jl
mov
mov
dec
push
push
es
aas
into
lret
sub
cli
push
ror
xchg
sbb
sahf
std
sub
push
cwtl
push
sub
and
jae
out
stos
add
xor
mov
scas
inc
popf
mov
adc
pusha
pushf
jo
cmp
pop
sub
in
out
mov
pop
test
push
call
mov
fwait
bound
jbe
cmpsb
or
loope
dec
mov
mov
iret
sub
jb
std
pop
sbb
sahf
hlt
pop
loope
sahf
in
sbb
mov
add
mov
mov
dec
int3
popf
int3
mov
testb
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jo
hlt
sbb
sahf
adc
sbb
adc
xor
jg
xchg
fs
lcall
or
cwtl
push
or
mov
hlt
in
lahf
int3
cmp
insb
fstpl
idivl
xlat
pop
loop
push
mov
inc
cmpsb
or
popa
xor
sub
adc
sbb
jo
hlt
les
or
orl
push
aas
cmp
mov
mov
jnp
mov
icebp
adcb
pushf
inc
inc
aas
movsl
das
push
leave
mov
test
dec
jge
mov
sti
andb
mov
bound
call
call
adc
xchg
mov
cmp
mov
lock
push
ja
adc
dec
or
adc
clc
pop
and
test
xchg
adc
movsl
push
clc
jp
and
fwait
lock
cmp
inc
mov
sub
xchg
sbbl
jae
loop
pop
fs
outsb
aam
jl
and
int3
mov
mov
les
out
push
mov
push
in
out
and
add
fdivl
jmp
stos
adc
lock
fwait
mov
push
xchg
pop
bnd
testb
add
cmpsb
mov
fsubrl
sub
mov
inc
bound
sub
cld
pop
inc
push
mov
test
jo
pop
fnsave
cmp
ljmp
mov
inc
mov
std
dec
imul
cs
cli
out
adc
sbb
push
xor
mov
shlb
sub
nop
mov
enter
in
in
in
and
stos
dec
cmp
or
push
into
and
cli
xchg
sub
scas
rep
mov
stos
push
or
jmp
mov
loopne
sub
ss
ljmp
xorl
push
push
cmp
lret
int3
mov
stc
pop
mov
xor
jns
out
daa
cmp
xchg
or
cs
and
pop
aam
je
repnz
scas
sbb
mov
in
pop
jno
jnp
pusha
pop
mov
ss
aaa
add
xor
push
iret
xchg
stc
mov
cmp
fcmovnbe
hlt
xchg
pusha
std
add
cmp
or
fistpl
movsb
jae
negl
out
push
jmp
aad
push
pop
and
cli
or
jnp
addb
push
shrl
jl,pt
cmp
insl
add
icebp
out
adc
mov
aas
out
push
jo
stos
sub
fildl
aas
mov
push
xor
xor
lods
lcall
cwtl
das
loop
mov
ret
enter
ret
jne
movl
mov
out
pop
dec
loop
cli
jge
cmp
cs
outsl
lock
push
testb
xlat
stos
cmovo
jl
mov
ret
mov
test
pop
dec
sub
jp
fidivl
lods
push
push
dec
pusha
pop
cli
adc
pop
mov
dec
xchg
stos
mov
in
adcb
shll
inc
jns
mov
push
push
jecxz
js
sub
outsb
or
add
mov
sub
pop
test
je
in
sbb
imul
sbb
jbe
and
lret
arpl
add
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
or
sbb
mov
pop
cs
ror
xchg
xchg
imul
fstps
fidivs
decb
xor
and
fisubs
pop
sarb
sbb
inc
daa
jmp
xor
mov
adc
hlt
test
aas
sti
xor
aam
push
mov
rolb
xchg
and
sbb
dec
aas
xor
rorl
adc
loope
sbb
jge
pop
inc
lea
adc
orl
adc
pop
dec
gs
lahf
stos
dec
lods
movsb
push
clc
jnp
fisttpll
adcb
xchg
mov
popa
loop
xchg
xchg
xor
inc
xchg
jne
mov
ret
cld
shrl
les
push
push
cld
test
ret
mov
push
stos
movsl
xor
xor
int
push
xchg
push
sub
ja
fstpl
cmpsb
pop
rep
popa
and
je
pop
dec
mov
adc
mov
test
pop
push
and
mov
fsubrl
dec
js
inc
push
xchg
jns
push
imul
es
lods
ljmp
xchg
loop
xchg
adc
jecxz
mov
lret
adc
andb
add
fisubs
mov
insb
gs
add
mov
sub
and
pop
addr16
adc
int
fs
cmc
subl
add
loope
mov
ja
cld
fdivs
xor
adc
dec
mov
or
icebp
stos
inc
fstl
xor
adc
enter
outsl
adc
xor
push
hlt
es
sbb
jecxz
lret
das
mov
cmp
adc
aad
xchg
xchg
je
push
test
xchg
mov
jge
test
inc
sbb
xor
xchg
and
sbb
testl
pop
mov
or
or
and
ss
and
xor
jle
adc
sub
aaa
js
jae
pop
outsb
add
aad
mov
mov
cmp
mov
mov
sub
mov
pop
out
jne
add
and
decb
cmp
dec
sbb
js
cmp
push
jge
inc
in
fidivrl
jne
inc
mov
push
sub
xor
mov
jl
std
and
inc
shr
adc
xor
lcall
testb
in
imull
aaa
leave
ljmp
push
inc
sar
pop
adc
jbe,pt
enter
cmp
fsubrs
cmp
jnp
cmp
push
lods
shr
arpl
cmp
push
jbe
inc
dec
dec
lret
xchg
enter
mov
jnp
cld
or
das
int3
cmpsb
ljmp
mov
test
scas
fdivl
scas
cmpsl
jp
push
imul
push
push
xchg
adc
or
push
cmp
inc
je
call
es
xlat
jmp
shld
les
xor
out
pop
mov
add
cli
dec
jne
nop
in
scas
inc
lds
pop
mul
loope
das
jle
das
xor
dec
bound
dec
fsts
loop
imul
mov
mov
mov
inc
stos
rorl
xor
sub
inc
aas
sbb
xor
or
pop
jle
jae
imul
add
cmc
jmp
aaa
sbb
mov
arpl
sti
jae
xchg
pushf
push
and
jle
or
andl
or
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
test
sbb
stos
sahf
test
int3
mov
cltd
aad
xor
dec
mov
into
sub
or
mov
mov
jmp
in
add
mov
adcb
pop
push
dec
inc
mov
jp
and
cmp
lock
and
sbb
das
call
mov
sub
sahf
call
repz
dec
cltd
fcom
lods
popa
dec
movsl
addr16
mov
cmp
lret
mov
lret
arpl
ljmp
push
stos
mov
rorb
pop
mov
lds
or
dec
or
jnp
mov
mov
lods
inc
adc
fcomi
add
add
lock
pop
xorl
or
scas
jle
daa
add
lock
adc
jo
pavgw
mov
fimull
mov
bound
jp
dec
jnp
jg
dec
popa
dec
sbb
movsl
loop
jmp
jbe
xor
sbb
inc
notb
fsts
or
int3
sub
add
outsb
or
push
loopne
dec
fdivrl
ss
or
sbb
cmp
add
fcomi
add
sbb
hlt
in
xchg
jmp
daa
and
inc
popa
sub
and
enter
adc
or
jle
or
mov
jne
cmpb
pushf
loop
dec
cmp
adcl
xchg
fadd
pop
shlb
int
aam
mov
ss
lock
jne
shl
icebp
jno
ret
mov
std
scas
sti
pop
sub
sti
fnstenv
lds
scas
and
cmp
in
hlt
sar
mov
pop
in
fcoms
dec
mov
cli
cmp
iret
xor
std
cli
sahf
data16
nop
aas
mov
lods
idivb
insb
stc
movsb
mov
inc
es
xchg
loop
loopne
cld
stos
pop
and
repnz
cmp
in
jb
sahf
rcr
push
loop
dec
sbb
sub
inc
mov
ljmp
push
aas
or
pop
daa
adc
sub
push
lods
test
in
cmp
ror
sub
fisttpl
leave
cs
jo
jecxz
in
popf
xor
and
or
adc
or
test
pushl
mov
sbb
cmc
sbb
lret
test
scas
stc
sbb
xchg
push
mov
and
mov
cmp
add
mov
shl
movsl
jge
dec
jno
sub
xor
test
xor
or
xor
push
sbb
cld
nop
lret
add
cmp
aaa
arpl
push
test
adc
adc
push
data16
xchg
pushf
int3
mov
sbb
push
xchg
mov
movsb
je
inc
mov
rorl
adc
out
cmp
dec
mov
mov
out
push
push
adc
add
rorl
fstpt
xchg
add
fneni(8087
mov
push
andl
dec
mov
cltd
movsb
dec
lock
jno
mov
je
test
rclb
sbb
test
mov
add
sarl
mov
inc
insl
popf
mov
pop
leave
aaa
mov
sti
pop
dec
and
dec
and
jle
in
call
add
mov
hlt
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
adc
in
test
insl
repnz
pop
int
mov
mov
adc
rcl
int3
push
notb
loope
cli
adc
push
sub
cld
xor
and
jnp
inc
pop
scas
inc
push
int3
xor
pop
data16
xor
sbb
cmc
cmpb
adc
jmp
or
lods
fldcw
mov
jmp
xchg
push
pop
push
mov
lea
imul
sahf
inc
into
andl
dec
xor
das
mov
into
or
dec
push
ficompl
add
xchg
and
adc
aam
and
cmpsl
outsl
loop
out
sbb
jg
inc
in
fptan
jmp
dec
loope
movsl
aad
pop
inc
cmc
inc
adc
jmp
push
mov
ret
adc
cmp
push
mov
adc
pushf
inc
pushf
pop
mov
in
and
stos
jl
sbb
pop
in
jmp
push
fs
shrl
adc
test
pop
in
scas
sub
and
fcoml
xchg
jg
jbe
iret
xchg
xor
fildll
int
sbb
adc
pop
xchg
and
xchg
xchg
int3
outsb
mov
mov
sub
inc
movb
leave
cmp
cltd
xchg
jo
stc
jbe
insb
pop
and
std
jge
sbb
add
out
or
scas
addr16
movb
leave
mov
aas
dec
shll
popa
cmc
mov
pop
sbb
dec
mov
adc
into
popf
sub
or
pop
aam
pop
inc
inc
dec
in
lds
fstps
ja
jns
aaa
pop
jo
cmp
sarb
insl
adc
adc
pop
clc
sbb
cli
sub
pop
std
outsl
je
jl
jle
cmp
jle
adc
loopne
mov
push
xor
lock
inc
dec
dec
sbb
cmpsb
adc
mov
je
scas
outsb
sbb
xchg
adc
mov
addr16
pop
nop
clc
sub
mov
cmp
sub
push
adc
mov
mov
cld
dec
loop
xchg
pop
mov
and
sub
fdivs
fsubrs
xor
adc
cmpsl
lcall
xlat
inc
mov
imul
push
out
and
mov
pop
inc
pop
data16
test
mov
cmp
xchg
stos
adc
popa
lahf
jl
cmpsb
ss
rcr
test
inc
push
in
stc
xorb
in
xor
and
jns
fld
push
xchg
mov
mov
inc
inc
std
in
cmp
sbb
xchg
fildll
mov
mov
into
dec
mov
push
push
insb
mov
aad
psubusb
xor
and
inc
jle
xlat
adc
out
mov
sarl
jae
fisttpl
sub
das
mov
sahf
adc
jns
pushf
scas
test
xor
lock
addr16
adc
mov
pusha
iret
push
mov
mov
inc
pop
adc
adc
jnp
adc
imul
into
iret
mov
push
ljmp
and
andb
push
lods
repnz
es
push
adc
sub
enter
adc
into
decb
sbb
xchg
dec
cmp
sub
adc
ja
fcmovne
fdiv
mov
pop
and
cwtl
dec
addb
cli
mov
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
push
fistpll
push
fwait
repnz
movsb
push
push
or
addl
inc
iret
in
hlt
pop
xor
push
sbb
sub
out
out
mov
sti
test
fwait
adc
or
push
lds
mov
dec
aaa
xor
mov
jb
int3
test
and
dec
pop
bound
inc
cmp
lar
test
lods
or
aas
inc
fsubr
es
adc
adc
jno
call
inc
and
xor
or
jns
pop
xchg
jne
or
fmull
ds
or
xchg
inc
sbb
insl
out
sbb
push
xchg
data16
in
enter
call
sub
jbe
and
xchg
les
pushf
xchg
mov
insl
rorb
push
adc
xchg
mov
mov
shrl
xor
jbe
and
outsl
add
dec
xchg
adc
mov
xor
mov
into
add
jmp
out
fnsave
add
loope
pusha
rorl
and
mov
xlat
pop
pop
push
scas
jp
std
jo
in
outsb
popf
pop
dec
fs
hlt
xor
cmpsl
pop
repz
cs
mov
pop
es
fimull
and
jmp
mov
jne
or
xchg
lods
pop
mov
adc
stc
xchg
in
cmp
cs
mov
sub
ret
pop
gs
and
jge
loop
mov
mov
mov
cld
sbb
imul
call
ret
and
fists
addb
lods
ss
aaa
scas
int
mov
push
cwtl
pop
out
pop
and
jle
out
sahf
cmpsl
add
lret
scas
fiaddl
pop
push
fildll
dec
push
add
and
mov
loope
gs
out
fidivs
mov
lahf
iretw
lea
xor
popa
nop
xchg
xchg
mov
push
mov
sbb
mov
out
inc
dec
mov
int3
ss
mov
sub
or
scas
add
inc
test
dec
lock
inc
scas
insb
jl
pop
enter
lods
clc
dec
mov
sbb
cltd
dec
pop
lea
sarl
xor
clc
lahf
cwtl
je
fcompl
xchg
jae
lahf
aaa
mov
pop
stos
sbb
leave
inc
jmp
push
sti
scas
les
int3
mov
out
push
mov
data16
loopne
gs
fisttps
cmp
mov
inc
ds
xchg
dec
dec
orl
sub
mov
ret
inc
cmpsl
add
nop
cmp
mov
jle
cmpsb
lea
imul
and
and
xchg
or
fs
xchg
or
xchg
loope
std
xor
test
shl
arpl
pop
mov
lcall
subl
push
data16
and
pop
sub
cld
dec
mov
lret
pop
push
or
rcrl
icebp
scas
jnp
inc
jl
sub
pop
xor
sbb
mov
movsl
movl
cwtl
lds
test
fnsave
dec
insb
imul
sub
pop
icebp
sbb
jl
iret
in
add
xchg
imulb
push
or
mov
js
addr16
das
fsubrs
mov
mov
jmp
stos
inc
inc
jmp
cmpsl
les
adc
mov
dec
aad
int3
mov
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
fwait
dec
xchg
sbb
sahf
adc
sbb
rcr
push
cmp
jmp
xchg
inc
inc
xchg
popf
mov
lret
cmp
sbb
sbb
xchg
or
insl
push
and
inc
jne
adc
inc
std
jecxz
jae
mov
xor
rclb
lahf
in
call
in
leave
sub
mov
cmp
fisubrs
mov
fisttpll
movsb
and
stc
add
mov
cmp
mov
cwtl
mov
jae
or
or
jecxz
test
rolb
mov
inc
mov
lods
test
xor
mov
jge
fildl
sub
jg,pn
enter
mov
ret
jmp
and
xchg
mov
test
dec
lock
cli
xchg
mov
pop
mov
gs
cs
cmpsb
in
or
mov
or
das
shrl
cmpsb
loop
movsb
movsl
cmp
jl
stc
push
mov
push
subl
int3
scas
pusha
icebp
xchg
test
cli
loope
test
mov
mov
cmp
mov
sub
test
xor
out
leave
add
mov
add
repnz
inc
or
pop
mov
push
int
mov
jecxz
aas
in
stos
popf
or
pop
addr16
jno
dec
mov
iret
cmp
pop
push
aas
fidivl
lods
add
xchg
mov
and
sub
fs
imul
movsb
adcl
mov
imul
shrb
adc
add
mov
movsb
xor
cmp
outsl
jbe
movsl
add
mov
aam
sti
or
sub
ja
mov
lock
push
repnz
test
cmp
imul
push
int3
and
test
push
mov
insl
int3
mov
push
in
push
adc
push
mov
jo
mov
fwait
movsl
nop
insl
pushf
jb
lds
or
xor
std
xlat
filds
jns
cld
mov
leave
adc
jg
lods
add
mov
icebp
sub
cmpsb
leave
sti
push
vsubpd
aam
lcall
pop
adc
pop
push
or
and
fistps
dec
dec
adc
mov
outsb
push
ret
add
cmp
loopne
in
dec
int
xchg
outsb
pushf
or
adc
push
sbb
push
and
dec
inc
daa
mov
cmp
das
jno
lds
pop
push
int
lcall
mov
pop
lods
dec
stos
xchg
sti
imul
xor
shr
and
and
pop
fistps
xchg
mov
xchg
xor
and
lret
add
test
rorb
sbb
inc
cwtl
cli
jecxz
lcall
push
inc
adc
jne
aad
aad
xor
dec
xchg
pop
insb
les
pop
xchg
sub
arpl
dec
xor
push
jnp
scas
leave
add
std
mov
sub
mov
adc
fists
jne
fiaddl
push
test
out
push
or
data16
ret
negl
icebp
mov
sub
fldt
push
push
xor
or
cmp
pop
scas
pop
add
cmp
add
cmp
sub
jb
ds
add
mov
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
loope,pt
hlt
es
loop
jns
cmp
gs
cmp
mov
incl
adc
xor
or
cmp
fwait
adc
push
push
jp
cmp
dec
rolb
adc
jle
out
jae
mov
cld
push
ficompl
dec
xchg
daa
adc
scas
push
adc
mov
inc
insl
push
lret
inc
rolb
mov
scas
jb
bnd
clc
xchg
lret
rorb
cs
sbb
or
lock
jg
les
push
imul
inc
or
pop
and
push
mov
adc
popa
rclb
ficoml
sbb
movb
cmp
mov
pop
int
mov
push
subl
push
dec
adc
inc
shrb
xchg
sbb
or
aaa
pop
lods
jp
ljmp
loop
xchg
sbb
sbb
jno
cmove
idivl
das
pushf
das
push
fwait
xchg
mov
dec
aad
jmp
or
out
adc
sub
lods
sbb
inc
bound
fisttps
les
xor
cmp
in
cmp
test
mov
rorl
jmp
testb
adc
mov
pop
arpl
mov
mov
dec
clc
sarb
push
aad
movsb
push
je
outsb
test
fimull
mov
adc
in
outsl
mov
and
push
jo
or
cmc
and
add
mov
pop
lahf
aam
imul
popf
insl
jg
xor
push
dec
sbb
rorl
jge
ja
and
and
repz
or
lahf
dec
icebp
mov
or
push
mov
test
clc
mov
imul
fcomps
or
xchg
data16
dec
push
push
jnp
shlb
rcrb
out
bound
sub
cmp
das
push
scas
cmp
or
sub
cld
and
es
xchg
cmc
clc
dec
push
xchg
movsb
std
xchg
pop
pop
test
jae
pop
mov
sub
and
out
mov
xor
arpl
mov
cltd
xchg
inc
subb
movl
xchg
icebp
lahf
fwait
mov
hlt
xchg
dec
inc
insl
inc
mov
or
cmpsb
xor
mov
fcomp
lods
adc
jns
stos
cli
adc
mov
dec
add
dec
sbb
mov
mov
fsincos
pop
push
mov
xlat
stos
and
push
stc
cli
sti
ds
cmc
xchg
mov
cmp
sbb
pop
lods
mov
push
push
jne
mov
push
cld
jle
push
mul
and
icebp
dec
rorl
test
cmpsl
jmp
mov
popf
mov
imul
sub
rolb
push
inc
mov
mov
cmp
dec
clc
jno
cltd
cmpsb
fs
sbb
mov
adc
int3
dec
pop
std
sbb
add
mov
test
sbb
repnz
mov
adc
xchg
adc
xchg
jo
xor
lret
push
sub
test
mov
pop
and
outsl
rorb
adc
cmp
in
adc
push
adc
insb
ds
aas
lahf
dec
repz
repnz
xabort
sub
push
add
jg
or
sti
rolb
fs
cmc
fistpll
pop
pusha
add
jl
jnp
leave
pusha
sahf
fnsave
xor
in
cmpsb
loopne
outsl
dec
xor
xchg
mov
mov
xor
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
das
add
sahf
adc
sbb
jecxz
clc
jb
outsl
jno
push
fs
repz
mov
mov
push
test
jno
mov
dec
sbb
push
and
mov
inc
adc
pop
xchg
push
adc
shl
negl
hlt
ja
adc
pop
aad
cmp
add
jb
subb
out
scas
add
inc
xor
pop
leave
pop
or
rorl
mov
lds
inc
pop
pop
ss
xor
lahf
stos
xchg
pop
cmpsl
shrl
mov
pushl
dec
mov
gs
jae
daa
mov
adc
pop
fisttps
jns
xchg
jb
icebp
mov
ficomps
mov
push
mov
push
xor
aaa
stos
mov
dec
push
adc
mov
cs
das
subb
mov
xorl
cli
pop
test
xchg
mov
lods
push
fwait
loope
notl
addl
cmpl
dec
lds
sbb
mov
push
mov
imul
stc
movsl
and
xchg
sub
cli
dec
pushf
aam
repnz
sti
and
add
fmuls
roll
shl
aas
pop
cmpsb
mov
popf
insl
add
in
xchg
fists
adcb
fildll
sub
in
mov
lods
leave
jns
mov
clc
cmp
pusha
add
gs
mov
and
loopne
out
fadds
popa
sub
ror
sbb
push
xor
gs
lahf
mov
cmpsl
pop
outsl
dec
stos
negb
fistps
jp
xorb
stos
sub
out
or
dec
xor
mov
loopne
cmp
add
mov
aas
fisttpl
push
mov
fists
ljmp
fwait
mov
inc
push
stos
fldenv
fmul
or
mov
or
pop
cmp
fcmovnbe
lods
sbb
mov
push
fisttpll
xor
xchg
and
ja
xchg
xlat
push
pop
cli
pop
aad
stos
sbb
pop
dec
or
fs
movsl
mov
insb
into
outsb
pop
sub
push
jle
dec
mov
ja
adc
pop
cwtl
sub
or
pusha
and
mov
xorb
popf
notb
add
add
int3
mov
mov
pcmpgtd
aam
xlat
in
xchg
icebp
adc
sbb
arpl
mov
int
dec
inc
fdivs
sub
mov
shll
imul
inc
scas
popa
cwtl
stos
add
test
mov
xor
push
cmp
sbb
pop
test
cmp
jecxz
xor
push
dec
add
push
movsb
idivb
push
and
mov
cmpsl
jge
sbb
mov
insl
rcrb
sub
mov
and
jmp
outsb
inc
lds
popf
icebp
inc
push
fisttps
lea
push
mov
add
arpl
ljmp
dec
dec
popl
mov
sub
arpl
icebp
scas
inc
pop
sbb
outsb
jle
cli
push
into
push
mov
jno
mov
ss
je
and
adc
lahf
and
mov
jg
mov
sbb
mov
decl
xor
pop
and
jno
push
scas
jns
ljmp
mov
inc
cltd
cmp
sbb
xchg
mov
fucomip
sarl
or
sbbl
shl
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
stos
cmp
sbb
sahf
adc
sbb
int
cs
and
xchg
xchg
mov
fdivs
cli
xchg
push
mov
or
jecxz
mov
gs
repz
inc
aaa
xchg
xor
ficompl
mov
push
lock
cmp
xchg
daa
inc
jb
add
xor
outsb
cmp
push
pop
rolb
jle
sbb
std
ljmpw
lret
sti
pusha
sub
mov
sbb
pushl
pop
pop
xor
adc
mov
iret
dec
sbb
or
sub
fstpt
iret
push
dec
out
cmp
pop
hlt
movsb
je
push
push
mov
inc
sbb
push
faddl
sub
outsb
out
xor
inc
cmp
lea
sti
jns
mov
adc
lea
out
dec
cli
inc
lods
stos
lds
aad
aam
pop
push
push
out
addr16
ret
test
and
fstl
test
mov
xchg
pop
lds
pop
adc
hlt
cltd
lock
add
jo
push
fnstenv
stos
xchg
xor
pushf
aas
fwait
adc
dec
push
push
movsl
dec
mov
push
daa
pop
xchg
rcrb
daa
lcall
testl
cmc
mul
out
fcoms
mov
mov
or
jb
mov
push
inc
repnz
jle
into
jmp
mov
add
fistpl
arpl
adc
lcall
in
enter
add
push
or
icebp
sarl
das
mov
in
clc
loopne
or
jmp
dec
mov
sbb
into
adc
add
loop
nop
sbbb
stos
into
sarl
xor
sub
jnp
sbb
cltd
icebp
cmc
pusha
adc
inc
pop
outsb
push
sarb
rcrl
pop
loopne
repnz
sbb
xor
push
mov
xlat
mov
leave
lcall
shlb
stc
xor
repnz
loope
les
pop
sti
and
pop
xchg
mov
orb
in
test
insl
mov
popa
push
fists
sbb
jmp
dec
xchg
or
or
add
test
add
pop
out
ljmp
add
fcoms
ret
es
pop
flds
inc
fsub
cltd
test
cmp
mov
das
or
jbe
mov
cs
ljmp
add
loop
out
sub
pop
xchg
in
mov
movsb
les
fmuls
xor
add
aam
aas
dec
scas
sub
fdivs
push
add
sub
pop
pushl
mov
mulb
xchg
xor
pop
loopne
mov
inc
das
push
xor
mov
push
imul
adc
negb
cmpsl
shrl
inc
insl
std
into
imul
mov
les
fdivs
bound
xor
int3
lret
leave
pop
rolb
dec
mov
das
das
mov
stc
pop
jns
movsl
js
mov
jecxz
test
cmp
jmp
mov
sub
int
insb
jno
cmp
mov
popf
cwtl
xlat
aam
dec
scas
mov
push
sub
mov
rolb
or
cwtl
mov
insl
psllq
push
sub
in
pop
popf
jno
sub
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
lret
imul
adc
sbb
push
gs
xor
movsb
cs
das
jnp
pop
jle
mov
lret
lcall
xchg
inc
lods
popa
lret
jecxz
jmp
ret
push
les
imul
mov
cmp
filds
dec
sub
popa
add
shr
fdivl
lcall
jle
test
xchg
ret
xchg
cmp
test
les
push
data16
xor
shll
loopne
out
addr16
xchg
or
into
test
sub
xchg
sbb
sbb
out
dec
sbb
les
loop
sbbb
sub
insb
pushf
testl
mov
push
add
stos
out
les
and
fucom
cs
neg
add
std
cld
stos
test
sbb
sahf
adc
icebp
idiv
or
fmulp
jns
push
push
fldenv
adc
loope
out
and
idivl
cmp
jp
mov
lret
adc
cltd
push
rol
xor
add
scas
sub
jno
jne
adc
lret
cld
jne
jle
daa
test
mov
int
lods
sub
xor
nop
pop
outsb
inc
inc
nop
sti
pusha
repz
mov
das
pop
push
ja
cmc
jb
sub
lods
cs
sbb
hlt
or
add
jne
scas
inc
adc
sbb
arpl
fisttpll
jmp
in
mov
das
subl
test
sbb
shr
call
js
cmc
fsubr
bound
xchg
hlt
sub
jns
leave
jno
jae
push
pusha
sbb
jo
push
clc
movsb
jmp
jl
pop
inc
stc
pop
xor
mov
pop
push
push
ds
lods
jne
pop
jnp
movsb
mov
and
mov
xchg
pop
rcrl
xchg
dec
test
lret
addr16
and
jae
loopne
pop
push
rcl
roll
dec
daa
test
ret
bswap
pushf
sbb
das
dec
out
dec
jae
mov
test
test
fidivrs
xchg
sbb
dec
std
add
in
insb
fidivs
mov
decb
pusha
fdecstp
jp
cs
dec
sti
jmp
xchg
sub
xchg
shl
popa
mov
dec
sbb
ret
or
inc
das
in
inc
jbe
jb
pop
inc
mov
scas
push
cmp
adc
inc
cmpl
cmp
mov
ds
xchg
cltd
or
push
pop
arpl
iret
stos
pop
insl
sbb
xor
addr16
cmp
scas
jb
inc
mov
pop
insl
mov
mov
mov
inc
iret
lret
test
cmpsb
pushf
ja
popa
rcll
clc
jb
cmp
shll
imulb
popf
dec
scas
mov
push
stos
jge
rorb
test
out
pushf
jmp
add
dec
or
dec
inc
inc
sbb
sahf
sub
fildl
mov
xlat
mov
pusha
idiv
dec
cltd
and
xor
xlat
ja
or
inc
aaa
inc
movsl
das
dec
ficoml
mov
sbb
test
scas
test
movsl
loop
cmp
jle
lock
fld
sub
mov
xorb
sub
in
push
jnp
in
aas
dec
mov
test
bound
ja
mov
in
scas
adc
xor
xchg
das
adc
or
je
scas
ljmp
pop
gs
sub
call
xor
iret
rolb
decb
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
mov
mov
test
sbb
xchg
arpl
push
push
daa
pop
jge
pop
add
pop
arpl
jg
pop
repnz
mov
and
leave
sbb
mov
orb
fdivs
dec
mov
out
into
leave
pop
inc
repz
add
mov
ja
lods
or
or
jecxz
std
insl
inc
dec
jne
call
or
iret
sub
and
cmp
cltd
gs
xor
xchg
xchg
cmp
testl
mov
sub
fwait
dec
lods
mov
hlt
jnp
or
and
arpl
test
adcb
psllw
adc
dec
cli
xchg
sub
adc
cmc
out
cs
sub
push
pop
xchg
or
insl
sbb
xchg
lret
in
mov
sub
or
rol
xchg
xor
pushl
sub
push
mov
icebp
mov
outsb
fmull
int
cmpb
xchg
call
stos
pop
imul
int
fsubs
aaa
jno
cwtl
push
cltd
lret
fadd
add
mov
sub
pop
out
das
pop
lret
repz
cmp
jg
pop
dec
adc
repz
cs
leave
int3
int
call
inc
pop
push
push
dec
or
xor
idivl
xchg
or
push
adc
xchg
xchg
xlat
ja
aaa
or
mov
adc
out
push
xor
das
sub
jnp
lds
fwait
push
xchg
xor
jmp
cmp
addr16
sub
mov
cmovnp
dec
stc
xor
jno
mov
and
call
cmc
inc
mov
flds
sub
outsb
cwtl
cwtl
jo
sti
fbstp
notb
push
mov
sbb
and
je
test
jle
and
mov
pop
mov
push
pop
lcall
cwtl
int
inc
dec
rcll
jns
pusha
xor
stos
jns
outsl
rol
xchg
loope
and
popa
outsl
mov
mov
cmp
jo
repz
lds
sbb
rcr
std
mov
in
or
add
cltd
xchg
or
loopne
and
daa
mov
sahf
sbb
testb
push
or
pop
jl
xor
inc
andl
out
sub
sub
stos
shlb
and
push
jmp
inc
add
adc
inc
jns
and
in
out
int3
stos
popa
lods
jp
popf
lods
sbbl
mov
imul
mov
mov
ja
adc
pop
push
mov
adc
and
das
sub
and
pop
inc
stos
pop
ja
pop
push
pop
ljmp
fwait
dec
cmp
cld
lods
clc
mov
dec
repz
clc
jb
or
pop
xchg
loopne
les
cs
mov
pushf
pop
mov
or
push
jle
mov
fndisi(8087
jbe
movsl
add
and
push
cmpsl
sarl
push
icebp
mov
cmp
repz
popf
sub
xor
push
inc
mov
cmpsb
mov
sub
pop
sti
mov
fidivl
in
and
fxch
scas
push
cltd
xchg
inc
sub
mov
jg
sub
cltd
inc
dec
pushf
push
mov
shll
leave
push
xchg
gs
and
lahf
xor
dec
cmp
gs
mov
xchg
or
jmp
int
dec
dec
jp
cld
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
repnz
mov
sbb
movsb
movsb
xor
fildll
aam
adc
movsb
sahf
push
test
movsb
out
hlt
or
les
add
test
mov
mov
cs
iret
push
ja
test
pop
jo
arpl
mov
test
pop
jne
cli
icebp
push
mov
pop
xlat
pop
outsl
xchg
ja
rclb
mov
les
pop
out
stc
sub
clc
push
sbb
es
sbbl
push
cmp
rolb
mov
adc
stc
popa
dec
popf
mov
xchg
push
in
repnz
sub
into
outsb
filds
xchg
xchg
jno
cmp
popf
les
mov
xchg
clc
fstpl
in
in
push
jae
lahf
mov
jl
daa
aas
inc
or
dec
sub
insl
jl
mov
push
scas
out
mov
and
aas
hlt
je
in
xchg
stos
sub
loope
pop
mov
pop
leave
pushf
fiadds
ja
test
or
cmpsb
into
jno
and
rorl
cli
pop
adc
stos
lods
scas
or
inc
nop
mov
cmp
lcall
dec
pusha
shr
or
lods
leave
es
cmp
sarb
imul
push
rolb
fdivs
mov
ret
mov
mov
ja
and
mov
cmp
mov
xchg
sbb
sub
pxor
and
fwait
sbb
jae
mov
xor
mov
cmp
or
ud0
addl
lods
mov
or
cmpsb
out
cmp
xor
test
std
pop
mov
mov
aas
icebp
push
ss
jl
ss
lds
andl
jae
mov
mov
bound
outsb
test
fwait
iret
dec
mov
jl
loop
les
fadds
inc
insl
jns
js
movsl
stc
dec
cmp
mov
inc
sub
mov
movsl
pop
and
xor
sub
xchg
push
or
jmp
sbb
rolb
lock
in
jecxz
lea
fadd
out
mov
jecxz
xor
leave
test
pop
test
cltd
ljmp
sbb
data16
xorl
out
shrl
lods
jb
call
dec
sbb
or
sub
pop
loop
jno
mov
jp
sbb
cltd
lds
movsb
fdivr
loope
cmp
push
cmp
sbb
dec
roll
and
push
mov
fcomip
nop
sub
sub
push
cmp
data16
sbb
cmp
pop
stc
adc
jno
js
adc
imul
pop
les
test
fbstp
sub
pop
sahf
out
push
mov
mov
rolb
sbb
or
mov
mov
lret
int
mov
pop
pop
xchg
ret
sbb
fsubs
and
dec
adc
lds
rcr
out
gs
adc
out
fsubs
lds
cwtl
ss
insb
fiadds
in
movsb
cld
popa
movsb
add
xchg
repz
test
sbb
bound
subb
dec
mov
jb
sub
lock
stos
ret
sub
push
push
pop
sub
call
push
scas
add
cmpsb
mov
adc
adc
xlat
xor
adc
xor
movsb
lret
jmp
adc
jnp
jno
cmpsl
sbbb
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
cwtl
idiv
daa
scas
loopne
xor
mov
adc
xor
sub
dec
pop
push
mov
fcmovnbe
xchg
pop
pusha
rcl
cmp
mov
pushf
xchg
add
fs
out
cmp
lods
js
scas
inc
pop
iret
push
mov
ss
mov
cmp
dec
int3
and
pop
inc
cmp
ret
or
daa
push
adc
in
push
dec
push
xchg
inc
mov
ret
inc
repnz
cmp
inc
mov
push
mov
data16
cli
mov
into
cmp
jp
nop
sbb
int3
jg
ret
adc
xchg
add
lret
mov
pop
movsl
cs
and
in
push
mov
mov
outsb
push
shll
mov
lret
in
fisubrs
mov
xchg
mov
jl
sahf
sub
cmpsl
arpl
cmp
cmp
cmp
scas
out
dec
fnsave
jmp
lret
jl
adc
sub
ret
test
jle
mov
sbb
jbe
les
jmp
xor
lret
xchg
adc
jle
push
sbb
push
test
push
mov
addr16
xor
ja
xor
dec
je
fs
cmpsl
adc
push
pop
inc
lods
nop
sub
xor
test
mov
or
mov
add
xchg
pusha
and
outsb
push
insl
cmp
lcall
sbb
adc
test
imul
mov
pop
xchg
fidivrs
stos
pop
jns
faddl
cld
push
jge
and
ds
pop
pop
inc
sub
and
bound
loope
ja
movsl
add
lret
scas
push
xlat
jno
scas
xor
sbb
enter
icebp
jns
fnstsw
sub
testb
movsb
dec
leave
mov
cld
sub
adc
pop
popa
enter
push
cmpsl
xchg
mov
lahf
stos
das
fmull
xchg
gs
mov
sub
sarb
movsb
mov
aad
xor
pop
jne
arpl
repnz
fiaddl
adc
adc
mov
cwtl
gs
sub
cmp
lret
aam
add
push
outsl
dec
push
pop
testb
sub
xchg
out
ficomps
leave
sbb
mov
andl
push
ret
loopne
mov
mov
and
pushf
mov
xor
ss
fstps
fcoml
out
ficompl
mov
movsb
lods
xor
ljmp
gs
or
call
addl
jl
shll
mov
call
scas
adc
scas
push
shll
fmulp
xchg
mov
mov
fists
movl
xchg
dec
cld
and
clc
fnstcw
out
out
mov
jge
or
sub
push
les
cmpsb
cld
stc
lcall
push
mov
push
out
cli
sbb
push
xchg
es
xchg
hlt
jge
mov
add
dec
mov
addr16
adc
ficoml
shrl
out
and
imul
adc
xchg
mov
pop
lcall
roll
scas
fs
fstl
add
adc
clc
add
jo
rolb
cmc
pop
es
clc
test
inc
sub
test
sbb
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
inc
sub
stos
jno
adc
fists
cmp
insb
pop
mov
dec
outsl
nop
lahf
add
push
jne
stos
repnz
aaa
test
mov
lcall
xlat
mov
int3
popl
xor
mov
js
cmp
mov
cld
cmp
jo
push
scas
mov
cmp
fdivr
out
sti
out
fisttps
sub
jl
outsl
ja
add
mov
sub
jne
shlb
shlb
mov
in
xchg
xchg
loope
ret
pop
stc
xchg
insl
hlt
pop
cmpsb
pop
pushw
sub
mov
cld
xchg
adc
sub
mov
in
fcompl
jnp
push
add
loop
mov
push
pop
movsl
jg
sub
adc
sahf
jnp
pop
push
fs
ljmp
jbe
ljmp
js
mov
sahf
cwtl
loop
jg
shlb
out
nop
pusha
cmp
xchg
aad
bound
lds
int3
lods
push
cmp
inc
fwait
insb
lahf
lahf
aad
insl
add
movl
add
popf
insl
int
sub
xchg
aad
push
rcll
sbb
xchg
xor
jae
sub
rolb
cs
test
push
ljmp
mov
notb
dec
rclb
jae
loope
mov
ds
lds
insl
sub
mov
lret
jnp
in
xchg
xchg
sub
movsl
sub
rcrb
rclb
lcall
test
and
testl
jns
xor
or
inc
adc
cmc
es
xor
and
push
mov
add
mov
xchg
ljmp
int
std
es
aad
lods
mov
repnz
push
je
mov
sub
push
xchg
add
inc
int
dec
movsb
lods
jl
repnz
cltd
jecxz
xchg
fisttps
xchg
sub
movsb
mov
sub
dec
and
xor
aad
xchg
adc
aam
popf
fwait
jp
test
adc
fwait
push
arpl
push
push
inc
gs
add
ja
aas
xchg
outsl
fcompl
mov
mov
ret
push
cmp
ds
jbe
inc
es
rcrb
sbb
sbb
mov
push
pusha
loopne
cmp
clc
or
mov
ret
mov
push
mov
lea
ds
push
clc
adc
dec
stc
ret
nop
ljmp
lods
dec
aas
xor
xchg
push
pushf
xchg
xor
hlt
fcoms
test
icebp
push
mov
lods
hlt
aam
or
enter
add
sub
pop
decl
cwtl
into
clc
push
aas
mov
mov
push
mov
hlt
jnp
adc
xlat
std
adc
incb
clc
fidivrs
fwait
add
fwait
jecxz
je
hlt
int
xchg
ror
dec
cmp
pop
fdivrl
shlb
mov
push
subb
push
popa
fstl
shll
leave
push
mov
mov
lods
add
push
mov
mov
fiaddl
shl
mov
pop
xor
nop
ja
mov
adc
gs
xchg
mov
std
mov
and
lea
jno
ds
repz
pop
add
push
jno
xor
xchg
pusha
inc
push
xorl
add
int
test
jle
xchg
pop
mov
dec
in
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
pop
mov
sbb
add
mov
cltd
clc
mov
and
fsin
popf
mov
push
fs
inc
xchg
or
push
imul
ja
mov
sub
jns
in
fiaddl
ja
mov
inc
roll
insb
pop
pop
fidivrl
mov
or
or
mov
mov
sbb
mov
faddl
xchg
scas
mov
inc
mov
mov
fimull
clc
xor
je
scas
pop
ficomps
mov
js
mov
sbb
push
lret
adc
fcomps
mov
push
std
xchg
imul
bound
fs
sbb
test
fsubrs
jge
push
movsb
call
mov
jg
mov
adc
dec
cmp
neg
inc
movsl
xchg
flds
fwait
ja
test
lcall
aaa
ss
add
xchg
jg
xchg
clc
mov
sub
lahf
clc
sti
xchg
fists
lods
jg
out
fsubl
std
cli
xor
sub
fistps
adc
jnp
ja
roll
push
pop
out
jle
mov
jne
test
xor
xchg
testl
shrl
mov
jnp
jecxz
xor
imul
mov
in
fimull
sbb
or
lret
loop
lds
add
mov
pushf
imul
mov
and
in
jge
jb
cld
or
inc
xor
mov
adc
jmp
daa
lods
sbb
scas
popa
mov
icebp
fimull
fmuls
xchg
imul
inc
mov
xchg
mov
sub
sti
in
mov
out
mov
xchg
out
loope
pop
test
and
stc
dec
or
xor
rolb
aam
dec
arpl
int3
add
clc
cmp
and
popf
sbb
mov
ret
cmpsb
xor
fbld
or
pop
mov
adc
inc
mov
cmp
sub
mov
ror
mov
insl
cmp
and
and
test
lock
cli
mov
xchg
adc
mov
mov
stos
mov
aam
stos
add
xchg
dec
test
cmpl
xor
sub
push
popf
clc
xchg
jp
fsubs
push
test
lods
fcompl
jno
adc
xchg
and
mov
jp
test
aaa
xchg
xchg
sbb
aaa
push
jb
insb
mov
sub
loop
xchg
inc
repnz
aad
stc
sub
push
ret
addl
pusha
in
push
inc
nop
ja
sub
icebp
clc
mov
add
jmp
pop
push
or
dec
sbb
xchg
cld
xchg
dec
mov
pop
out
inc
enter
mov
jo
jge
dec
and
pushf
cli
pop
mov
fcmovu
mov
mov
and
pop
js
xchg
sub
mov
loope
mov
xchg
push
test
mov
lds
jae
push
push
test
xorb
lret
mov
loopne,pn
imul
pop
fiadds
stc
xchg
xchg
mov
xor
notl
lods
roll
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
sbb
test
sbb
inc
aad
push
dec
pop
fwait
push
outsb
push
sbb
sbb
dec
pop
arpl
inc
or
ret
cs
push
cmp
xor
mov
pop
sbb
insl
cmp
add
sub
mov
sub
fdiv
cvtps2pi
sti
lds
dec
mov
and
std
fs
lret
xor
je
inc
mov
fs
adc
push
mov
into
jecxz
fdivr
cmpsl
clc
pop
in
mov
inc
movsb
dec
dec
hlt
mov
push
xchg
push
sub
cmp
dec
mov
or
push
pop
adc
jl
lret
xchg
lods
adcl
adc
pop
setg
loopne,pt
add
inc
inc
adc
enter
mov
out
rclb
std
or
mov
push
ret
push
lcall
pop
dec
inc
pop
cmp
jb
push
mov
shlb
push
je
jno
fsub
jo
inc
cld
sbb
sbb
loope
loope
xor
in
int
sbb
insb
sti
int3
and
pop
lds
fidivrs
lret
cmp
incb
and
mov
push
push
aad
mov
sbb
or
or
pop
pop
shrl
or
mov
lret
stc
cmp
test
sbb
std
adc
adc
mov
add
jl
sub
lods
and
mov
test
popf
sbb
add
cld
and
fs
mov
scas
fwait
xor
sahf
cmp
loope
xlat
dec
add
arpl
and
addr16
xchg
mov
dec
xchg
sub
out
cld
das
int3
mov
lea
lahf
mov
addr16
jns
stos
lods
faddl
daa
aam
or
xchg
fists
adc
add
push
pop
je
push
dec
test
and
gs
sbb
mov
sub
xlat
inc
mov
xor
add
inc
xor
adc
test
push
mov
add
and
int
movl
push
fsub
mov
push
xchg
jle
mov
sub
ficomps
mov
into
pop
pop
jo
fmull
pop
out
and
xor
mov
jg
test
add
mov
jne
dec
xchg
nop
imul
lea
scas
jbe
dec
pusha
test
int3
xrelease
push
sub
shrl
push
inc
push
inc
xchg
stos
cwtl
daa
insl
or
js
insb
adc
mov
mov
push
stc
in
sub
xchg
insb
hlt
js
out
mov
lret
lods
xchg
arpl
add
ljmp
in
imul
or
aas
mov
pop
movsl
jb
sbbl
xchg
out
cltd
mov
lea
pop
mov
cmp
das
lods
cs
push
js
xor
scas
jbe
test
ret
inc
jl
or
ja
incl
repz
pushf
jns
and
jmp
mov
jo
es
lahf
add
enter
sahf
mov
mov
ss
pop
mov
mov
test
out
jge
sub
sbb
sbb
lret
mov
lods
pushf
enter
sbbl
std
inc
inc
pop
jnp
cltd
push
loope
pushf
jns
pushf
cli
ljmp
in
mov
add
mov
dec
mov
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
cmc
jmp
pop
jge
sbb
outsb
imul
scas
mov
fcomp
adc
push
mov
loopne
xor
movsb
out
call
cmp
pop
adc
and
popf
xor
lods
mov
fs
sahf
pop
pop
adc
movsl
mov
pop
push
leave
fdivl
mov
cld
cmp
pop
in
fisubrl
out
sbb
adc
lds
jb
cmp
cmc
testb
push
int
testl
pop
negl
xchg
push
add
rolb
sahf
mov
add
sbb
scas
loopne
push
in
sbb
inc
fwait
mov
lods
ficoml
test
xor
adc
mov
lcall
sbb
jbe
sahf
rorb
in
xor
jb
lret
cld
loop
xor
ret
daa
xor
leave
outsb
dec
lret
push
testb
fldl
ret
fnstcw
insb
shll
xlat
enter
xchg
cmp
pop
mov
cmp
or
sbb
inc
in
adc
add
test
sub
cs
dec
decb
into
aad
dec
fdivrs
and
movsl
inc
shlb
sub
dec
xor
nop
sub
lods
add
jle
test
sbb
xchg
lcall
imull
mov
and
or
sub
lds
add
test
sbb
xor
movsb
mov
pop
das
cmpsl
clc
cmp
fsubp
fisubs
popf
xor
push
pop
and
xlat
in
rorl
lcall
rep
xor
adc
adc
repz
dec
shr
lods
dec
sbb
inc
hlt
in
insb
jnp
jb
cli
xor
cmpsl
sub
pop
fiaddl
mul
fwait
jnp
pushf
adc
cmp
dec
out
cmpsb
out
sub
mov
push
stc
mov
mov
lret
mov
mull
rcrl
mov
shrl
push
jle
mov
leave
and
mov
pop
jg
jp
dec
arpl
xchg
outsl
cmp
mov
xchg
fdivl
std
adc
mov
mov
frstor
or
mov
adc
in
subl
and
pushf
ret
mov
mov
inc
in
sub
scas
stos
shrb
insl
decb
cmp
dec
inc
shr
not
loop
and
inc
jo
fs
jmp
je
lahf
push
lods
mov
leave
cmp
sub
cld
dec
out
scas
pop
cmp
pop
mov
es
clc
es
rol
lock
dec
pop
push
jge
es
movsl
pop
ret
sbb
iret
movsl
sbb
sahf
add
inc
jg,pt
push
cmp
out
sbb
andb
lea
lds
mov
icebp
push
decb
adc
mov
cmc
std
sbb
repnz
insb
aad
out
dec
xor
loopne
shl
jmp
add
lock
xchg
inc
enter
mov
xchg
mov
mov
xchg
push
popf
sub
cwtl
orl
loopne
jo
mov
add
pop
inc
push
into
jg
cmp
loopne
jg
iret
daa
jo
cmp
cwtl
sub
in
push
shll
push
inc
xor
or
jae
jge
hlt
mov
loopne
inc
mov
int3
ficomps
mov
pop
out
pop
push
fs
imul
sbb
mov
fsubr
lock
mov
jmp
repnz
jmp
imul
pushf
pop
jle
push
inc
push
jne
sbb
repnz
es
mov
dec
xchg
loop
inc
dec
xchg
in
adc
mov
dec
fldenv
test
popa
sub
or
inc
lcall
mov
daa
and
mov
sub
fisttps
mov
and
fidivl
rcl
mov
xchg
lcall
fisttpll
xchg
stos
dec
push
cmp
aas
mov
mov
pop
das
push
sub
std
mov
scas
cmp
jge
sub
xor
mov
pop
in
push
adc
mov
jmp
lds
loope
xor
loopne
mov
stc
bound
es
popf
mov
cwtl
mov
pop
ret
sar
or
bound
out
data16
push
push
ljmp
or
sarl
dec
lods
aaa
xchg
pop
shlb
pop
mov
ss
xorb
pop
pop
mov
pusha
lea
imul
inc
add
inc
push
out
loop
dec
lods
push
popf
lret
pop
frstor
test
xchg
stos
data16
and
sbb
inc
xchg
outsl
scas
sbb
and
sbb
lock
pop
inc
mov
mov
dec
pop
test
mov
cltd
pop
loopne
gs
jbe
xor
pop
rorb
mov
jb
pusha
popa
ljmp
fidivrs
mov
aam
push
je
add
in
sub
or
mov
shll
or
sub
mov
aas
add
into
lea
xchg
outsl
sub
mov
sti
aad
dec
testl
out
jge
sub
fmuls
mov
pop
insb
mov
fucompp
addr16
test
loope
pushf
cmpsb
push
enter
test
shll
sbb
and
xor
jecxz
fs
fsubrs
iret
add
ret
push
xor
mov
and
jl
pop
testl
or
fnstsw
ljmp
lcall
pop
jmp
sarb
loope
cltd
pop
push
pop
xor
in
jmp
mov
lds
sbb
mov
std
dec
jg
js
call
pop
inc
pop
test
xchg
jne
inc
xchg
xor
push
pushf
sbb
jne
dec
push
aam
ret
test
mov
cmpsb
sub
pop
dec
and
mov
push
jno
test
mov
int
xchg
das
repnz
nop
divl
xchg
ret
movsb
notb
arpl
or
xor
jo
mov
and
in
in
dec
mov
jmp
jmp
ljmp
sbb
adc
std
pusha
jae
mov
js
xchg
pop
xor
xchg
xchg
cmp
cs
in
imul
add
jle
dec
cmpsb
jae
dec
push
sub
addr16
and
sbb
sub
or
inc
cltd
icebp
jl
xchg
push
es
aad
scas
test
out
pop
jge
fs
adc
pop
repnz
mov
mov
scas
jno
xchg
data16
jge
jno
mov
cmpsl
ret
mov
push
imul
mov
int3
adc
outsl
pop
sub
inc
cmp
mov
out
cs
aaa
xchg
lret
mov
dec
loop
stos
fwait
bound
xchg
lock
mov
insl
arpl
mov
je
push
hlt
inc
subb
inc
push
pop
loope
cli
es
cmc
push
push
mov
xchg
xchg
push
cmp
int3
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
outsl
sbb
sahf
adc
sbb
insb
xor
sarl
cli
push
xchg
clc
ret
push
push
clc
or
pop
out
xchg
addb
or
cmp
inc
pop
pop
jl
arpl
adc
mov
jmp
pop
popf
test
adc
jmp
sub
adc
push
arpl
sbb
or
sti
jo
xor
ljmp
jecxz
sarb
mov
not
stc
lahf
insb
push
shrl
fidivrl
out
pop
faddp
outsb
adc
aad
in
leave
add
jecxz
insb
sti
inc
std
push
outsl
and
and
addr16
push
fcoml
xchg
enter
adc
jmp
repnz
jnp
adc
cmpsl
addr16
sub
jae
sbb
push
jb
pop
add
cmp
xor
or
lods
dec
jp
in
ja
pushf
loopne
push
sbb
pop
adc
inc
jno
std
fdivrl
cwtl
mov
sarb
test
shrb
pushf
xor
scas
imul
push
lock
mov
and
and
cs
into
in
jo
stos
inc
data16
arpl
cmp
arpl
xor
in
mov
sbb
cltd
inc
movsb
mov
aas
xchg
std
lret
or
bound
pop
movsl
xor
or
ror
push
insb
jo
dec
ror
movsl
mov
jb
daa
imul
lods
cmp
cld
movsl
fidivl
xchg
sub
sti
adc
pop
inc
jle
sub
pop
push
sbb
inc
sub
lret
and
sbb
pop
mov
inc
pop
inc
xor
stc
push
dec
adc
xchg
sarl
mov
sbb
push
adc
pop
mov
pop
cwtl
aad
mov
inc
add
stc
mov
fimuls
int3
stos
lock
mov
xor
cmpsl
dec
test
cmp
sub
out
pop
imul
out
stos
pop
ret
lods
dec
adc
cs
dec
jge
and
in
push
bound
and
jne
test
mov
cmc
pop
mov
clc
push
popf
sub
inc
test
or
dec
mov
sub
sbb
cmpsl
lret
jp
clc
pusha
pop
cmp
mov
mov
xchg
jle
out
mov
sbb
std
xor
nop
cmp
pop
or
lds
decb
insl
pushf
xor
cmp
push
scas
inc
aas
pop
data16
push
xlat
mov
mov
inc
in
cmpsb
fsubrs
icebp
or
fsubs
sbb
cltd
sbb
push
lret
ror
sub
hlt
mov
inc
mov
inc
push
jno
adc
jns
stos
lods
lods
in
and
inc
out
xor
jl
xor
or
xor
mov
lods
test
xchg
syscall
int3
dec
add
sbb
pop
xchg
xor
shlb
jnp
repnz
and
repz
loopne
inc
jns
dec
push
jns
mov
or
into
fwait
pop
push
sti
iret
inc
cmp
add
cmp
sub
ss
xor
movsl
cmp
imul
pop
xor
lahf
aam
push
pop
mov
ficomps
jno
sub
or
and
xor
xor
sub
in
xor
popa
dec
lods
std
out
hlt
dec
cwtl
mov
das
out
push
mov
cli
mov
mov
data16
jg
inc
add
jbe
and
inc
xchg
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
scas
mov
sbb
sahf
adc
sbb
inc
jbe
in
sub
loope
lock
xchg
neg
xor
idiv
jnp
push
xor
sbb
pop
push
in
mov
arpl
inc
sbb
fstl
inc
jg
imul
movsb
add
xchg
inc
push
fadds
aad
std
fsubrp
cmp
mov
xor
xor
iret
lcall
lods
lcall
icebp
lret
movsl
xor
mov
jne
ljmp
in
sub
adc
adc
dec
push
cmpsl
in
cmp
imul
addr16
xchg
popa
test
mov
pop
test
push
fisubrl
lret
add
enter
push
dec
sub
mov
sub
leave
adc
cmp
mov
mov
sbb
and
ds
shll
decb
add
shlb
scas
test
lahf
inc
dec
rolb
ljmp
push
jae
inc
xorl
and
int
pop
andl
mov
lds
add
mov
es
and
cmp
test
sarl
scas
inc
bound
xor
sub
jmp
dec
inc
xchg
cmp
cltd
lods
neg
and
sete
mov
and
xor
stos
in
bnd
cmp
sbbl
scas
loop
cli
dec
fsts
add
ss
jmp
or
pop
add
fdivrl
xor
sub
inc
pop
cmpsb
dec
test
mov
int
push
cs
nop
push
mov
sub
jnp
mov
loop
xor
loopne
sub
ror
xchg
insl
movsb
mov
mov
cmc
loop
jae
aas
fists
inc
mov
add
or
pop
mov
sub
cmp
and
int3
or
pop
mov
es
and
in
xor
std
cmp
jmp
std
loop
xor
xchg
lret
pop
push
stc
jno
inc
jl
cmpsl
out
fdivl
push
inc
lahf
lds
push
hlt
into
sbb
pop
push
sbb
push
out
mov
shlb
repnz
rolb
xchg
push
in
scas
jns
adcl
xor
ljmp
addr16
dec
loope
fsubs
add
mov
mov
fcomi
mov
cmp
sbb
out
inc
jge
arpl
mov
jae
imul
out
out
dec
mov
dec
xchg
stos
pusha
adc
pop
cmp
xor
mov
cltd
out
xchg
jbe
inc
ljmp
hlt
inc
mov
add
cmp
lcall
pop
mov
inc
sbb
xchg
jne
cmp
sbb
mov
inc
pop
push
xchg
je
shlb
cmovb
inc
add
shll
cmp
shrb
nop
inc
cld
xor
ficoms
repz
notl
inc
std
jge
sbb
les
shll
orl
sbb
xchg
fwait
lahf
clc
out
int3
mov
cltd
shr
lock
iret
sbb
clc
ds
push
push
sbb
test
xchg
xchg
stos
push
mov
das
mov
inc
dec
loop
iret
mov
and
or
mov
mov
mov
adc
xor
and
aam
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
orb
stos
shr
jne
xchg
mov
shll
push
xor
test
jo
in
loope
cli
out
mov
aad
dec
xor
mov
xchg
mov
jp
or
push
mov
and
jg
cmpsl
adcl
fidivrs
inc
jmp
sbb
imul
movsl
push
ja
inc
or
push
cmpsb
std
std
and
fmull
push
sub
loopne
call
sub
cwtl
sbb
int3
sbb
pop
cmp
fsubrl
fmuls
mov
mov
ret
xchg
adc
subl
cwtl
imul
sub
imul
movl
mov
into
ret
push
scas
in
lret
cmp
xchg
gs
sahf
jae
add
scas
fldt
aad
xor
test
xor
xchg
dec
xchg
shlb
jle
dec
aad
adc
cwtl
sbb
mov
call
mov
jmp
cmp
jmp
stos
sbb
or
mov
pop
fs
rcrl
sbb
ja
cmpsl
push
push
ja
enter
shll
hlt
int3
int3
adc
and
cmp
push
adc
fcom
cmpsl
mov
inc
jge
push
outsl
cmp
enter
or
imul
les
and
fdiv
imul
or
push
shlb
lcall
pop
mov
sub
inc
rcr
stos
fildl
inc
jo
mov
dec
scas
add
or
inc
out
jp
inc
bound
daa
pop
push
clc
out
xor
insb
pusha
jae
pusha
pushf
sahf
cli
leave
fsubr
insl
int3
int3
jl
cmp
popa
and
sub
adc
pop
mov
xlat
inc
fsubrp
stos
dec
subb
inc
ljmp
test
pop
pop
and
faddl
mov
ss
mov
jmp
stos
sbb
fs
dec
or
and
xor
clc
cmpsb
movsl
and
push
cmp
lock
push
adc
movsl
inc
clc
push
test
mov
dec
icebp
pop
add
mov
sub
xchg
inc
movsl
mov
xor
in
cmpsl
add
mov
dec
cltd
xchg
js
and
pop
inc
mov
cmp
add
jl
data16
ret
movb
insb
jne
scas
xchg
hlt
jnp
decb
test
xchg
pop
lods
and
pop
adc
ret
inc
sub
cmp
orb
pop
and
cmpsl
push
addr16
es
clc
mov
pop
cld
stc
jo
inc
movsl
mov
int3
fcoml
ja
sbb
cmpl
sbb
jg
fldl
ja
and
data16
mov
inc
outsl
sbb
sbb
out
shlb
shrb
xor
pop
scas
xor
repz
push
loopne
inc
jb
cmp
icebp
stc
inc
pop
mov
and
lret
cmp
or
inc
repz
sbb
push
lret
push
or
scas
xchg
dec
cmp
lds
pop
add
or
das
in
or
push
sbb
or
add
mov
mov
stos
lcall
push
sarb
jmp
popa
push
arpl
stos
movsb
push
sbb
das
inc
pop
cmp
pop
or
inc
ljmp
add
movsl
inc
mov
mov
jmp
pop
jno
mov
xchg
das
lods
mov
sbb
mov
mov
push
fisubs
mov
or
xor
lods
dec
or
ds
add
jnp
lds
sahf
push
pop
mov
out
jns
cmp
fwait
in
pop
jl
lcall
jp
rol
xor
and
mov
sar
xchg
pop
cwtl
addr16
ljmp
fwait
lock
pop
mov
loope
mov
neg
mov
vxorps
daa
cmc
lock
incl
push
decl
sbb
push
jp
test
push
add
ds
inc
push
inc
in
xchg
pop
lea
imul
lods
fcomp
insl
push
dec
iret
dec
imul
cmp
rcl
lods
or
sarl
cmp
dec
cs
pusha
leave
dec
sti
xor
scas
jns
mov
mov
xchg
sub
jecxz
lret
popa
in
or
mov
push
sbb
mov
cs
mov
aad
fcomip
test
outsb
stos
ret
pop
imul
in
arpl
sub
sbb
cwtl
sub
pop
or
aad
fldt
ficoms
imul
xchg
fwait
jmp
je
test
bound
idiv
insl
aad
mov
add
push
add
push
in
push
mov
mov
sarl
scas
sbb
gs
add
mov
les
lea
ret
add
add
out
and
mov
fimuls
lods
xchg
lea
sbbl
in
mov
outsl
out
addr16
js
jecxz
aaa
pushf
push
ret
loop
aam
mov
xchg
movsb
or
inc
hlt
adc
pop
inc
out
aam
sbb
mov
cmp
pushf
xor
dec
adc
mov
cmp
xor
cmpsb
add
fisubs
push
sbb
leave
test
movb
pop
push
dec
jle
xor
mov
xor
jbe
sub
inc
xor
scas
lret
and
mov
cmp
push
inc
popf
mov
sbb
out
pusha
pop
add
cmc
in
bound
sarb
lods
out
aaa
pop
ss
outsl
ss
push
ss
mov
ss
adc
pusha
adc
imul
mov
pop
pushf
mov
jg
lahf
repz
push
push
pop
aaa
mov
mov
xchg
lcall
pop
or
shlb
mov
stos
xchg
push
xchg
in
daa
push
and
hlt
out
outsl
out
dec
sub
aad
adcl
adc
xor
inc
dec
mov
xchg
inc
aad
mov
icebp
inc
inc
das
inc
je
movsl
mov
and
iret
mov
xchg
jne
pop
call
sbb
xor
or
jp
sub
imul
push
stos
mov
mov
cvtdq2ps
out
notl
sbb
enter
mov
add
lods
leave
xchg
in
xor
adc
int
fadd
scas
sub
ret
add
jmp
dec
mov
out
xor
testl
adc
push
adc
and
cld
cwtl
mov
xchg
cmp
daa
push
pop
push
or
imul
inc
jl
cs
mov
mov
add
sbb
testb
sti
mov
jecxz
fcmovu
jno
mov
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
push
push
push
push
push
sbb
sahf
adc
sbb
repnz
mov
adc
popf
sub
scas
pop
ljmp
pusha
sub
add
cwtl
pop
add
fwait
push
or
movsb
fs
sbb
inc
push
xchg
lret
push
imul
repnz
popf
or
inc
test
inc
xchg
sub
in
push
or
enter
int3
sbb
jl
inc
cmp
test
push
or
push
adc
loopne
add
ljmp
fwait
push
imul
movsb
je
jns
push
addr16
fwait
cmp
push
add
sbb
loop
xchg
and
lods
push
mov
stos
int
mov
notl
call
mov
mov
popf
sbb
mov
sbb
sbb
push
push
cmc
xor
xchg
in
inc
bswap
jo
pop
add
andl
dec
mov
push
inc
mov
mov
lcall
pop
fisttpl
sub
lods
imul
push
fnstcw
sbb
mov
lods
ljmp
call
lret
leave
inc
pop
cmc
into
push
iret
push
scas
fsubp
das
or
xchg
ret
sub
dec
cmc
testb
sub
jnp
rcr
popa
outsb
scas
les
repnz
fnstenv
xchg
adc
cmpsl
push
int3
inc
imul
inc
cltd
sub
and
test
test
test
pop
sbb
sbb
in
xor
mov
xor
pop
cwtl
inc
mov
lcall
andb
daa
mov
ja
imul
movsl
jo
leave
loop,pn
xor
sbb
or
int3
push
or
out
inc
repnz
fisubs
repnz
lcall
mov
out
sti
nop
sbb
add
ret
ljmp
xor
mov
aaa
mov
outsl
aaa
rcrl
fwait
sub
cltd
jne,pn
mov
sub
pop
loope
add
lahf
mov
test
dec
fdivl
sbb
sub
mov
ss
lods
test
lahf
fisubs
into
and
iret
mov
or
fstps
jnp
mov
cmp
and
sahf
jnp
push
mov
cmpsl
and
fisubs
scas
mov
sub
mov
pop
ds
adc
or
pop
inc
sbb
dec
mov
ret
int3
insl
imul
insl
xchg
loope
in
pop
xlat
rorb
rcrl
dec
cld
pop
cmp
push
fcomp
lret
outsb
das
fisubrl
cwtl
lods
ret
fistps
inc
rolb
in
stc
fwait
stos
dec
jno
jnp
xor
add
lds
cmp
gs
test
add
out
in
sub
sub
dec
mov
or
nop
and
adc
movsl
insb
fidivl
mov
cmp
mov
in
or
pop
or
dec
xchg
int3
dec
lret
into
mov
inc
fs
inc
cmp
jns
jl
sarb
push
adcb
mov
xchg
cmp
lahf
mov
lock
sub
bound
jae
mov
xchg
cmp
mov
repnz
push
clc
sbb
dec
adc
mov
fwait
push
sbbl
cli
add
loop
clc
xor
xor
shld
xor
mov
jmp
loop
es
mov
mov
dec
sbb
sahf
adc
sbb
push
shr
pop
push
pop
jmp
xorl
adc
xchg
jp
movsl
jg
fdivs
int
jmp
shlb
push
pusha
push
inc
push
dec
mov
inc
mov
xor
xchg
pop
sbb
mov
fndisi(8087
cmp
sbb
pop
sbb
push
sbb
loopne
pop
out
inc
xor
getsec
mov
mov
and
or
into
push
pslld
arpl
test
sub
jne
filds
aad
flds
add
xchg
pop
and
push
inc
loop,pt
jge
push
dec
pop
dec
xor
jp
adc
int
inc
addr16
lahf
aad
jns
pop
movsb
mul
scas
push
insb
xor
cmp
fnstenv
faddl
int
fdivrp
xchg
out
out
jae
sbb
aam
fdivr
xor
sahf
mov
movsb
cmc
jge
sbb
mov
mov
hlt
shlb
mov
imul
arpl
ds
fstpt
movsb
inc
inc
fwait
push
out
loopne
mov
pop
dec
cmp
mov
popa
call
lcall
out
xchg
in
or
dec
push
inc
pop
shll
repnz
add
mov
pop
adc
movsl
popf
adc
sbb
std
std
mov
gs
and
arpl
hlt
mov
sbb
mov
mov
fisttps
mov
test
test
je
scas
loope
cmp
adc
pushf
leave
mov
clc
push
cmp
lock
add
je
xor
pushl
mov
push
xor
push
fs
leave
dec
out
xor
movsb
je
sbb
push
xor
and
imul
xchg
icebp
inc
jl
dec
xor
lods
icebp
int
outsb
daa
pop
jb
aaa
hlt
sarb
mov
mov
xlat
sub
xchg
data16
stos
add
push
lock
mov
stos
test
sarl
stc
jg
cwtl
sub
fsubrs
pop
inc
mov
movsl
pusha
subb
sahf
xchg
sub
xor
inc
stos
dec
out
sbb
adc
jecxz
ret
jo
stos
cmp
mov
mov
les
or
inc
aas
ljmp
lret
mov
sbb
mov
jno
ret
and
xor
imul
and
std
push
dec
insl
pop
shl
loopne
adc
adc
jnp
in
and
out
jmp
outsb
fnstenv
sbb
mov
lods
xor
sub
popa
cld
fadds
arpl
imul
jp
lods
insl
cmc
dec
ficoms
adc
xchg
subb
push
sbb
mov
cmpsl
iret
rorl
dec
cmp
stos
sbb
mov
test
mov
inc
rorl
xor
pushf
scas
add
inc
and
push
int
add
dec
add
lock
rcrb
dec
mov
sbb
xchg
fwait
cmp
xchg
dec
decb
sti
mov
xchg
lahf
inc
jne
fstl
rorl
out
push
lods
fidivl
scas
sub
dec
lea
add
cmp
dec
and
xchg
popl
mov
test
ss
or
out
mov
push
xchg
push
xor
mov
add
mov
mov
in
push
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
push
iret
jo
inc
sbb
sahf
adc
sbb
divl
jo
test
mov
pop
fimull
insb
stos
adc
gs
mov
and
in
in
jo
pop
inc
call
test
sahf
ret
jmp
or
insb
out
xchg
aas
js
inc
mov
les
add
cmp
dec
inc
clc
arpl
out
imulb
mov
mov
xchg
fwait
lahf
mov
cli
xor
sahf
adc
out
dec
dec
rcrl
pop
xchg
sub
inc
test
jns
push
testl
add
notb
popl
aaa
mov
ja
jne
cmp
lahf
or
pop
dec
lods
jmp
imul
negb
scas
nop
bound
cli
mov
mov
bound
jle
xchg
add
xor
cs
mov
ds
pop
mov
dec
push
out
sub
andl
push
lret
in
mov
fsubl
add
sbbb
cld
in
xor
gs
cwtl
sahf
xor
lret
or
mov
ljmp
int
cld
add
push
movsb
mov
jp
or
notb
xor
xchg
push
cmp
int3
gs
popa
jecxz
ret
cltd
lret
adc
into
dec
push
movsl
sub
mov
mov
scas
cmp
sahf
mov
mov
test
pushf
mov
jp
stos
insb
sub
mov
mov
sarb
adc
cmp
mov
cltd
mov
dec
adc
out
cmp
lods
mov
pushf
sub
outsl
inc
insb
mov
sub
push
xchg
pop
insb
and
add
imul
sub
sbb
mov
sbb
test
adc
inc
loop
pop
fsubrs
xchg
xor
cmp
sarl
xor
not
ret
loope
div
test
lds
stc
mov
adc
test
scas
fbld
pushf
lret
insb
xchg
jno
adc
cmp
sub
fisubrl
mov
push
add
out
sbb
mov
test
or
cmp
sub
add
pushf
orl
out
and
pop
xor
orb
add
mov
sub
insb
dec
pop
push
js
out
adc
lcall
or
cs
inc
jne
push
dec
lahf
xchg
mov
iret
adc
sarb
jbe
icebp
ds
pushf
in
sub
lea
adc
xorb
jmp
sub
in
cwtl
inc
incl
int
or
mov
mov
mov
jne
mov
cmpsl
xchg
mov
pushw
xchg
adc
mov
mov
fnstenv
arpl
gs
xor
adc
or
xchg
pop
add
popf
adc
lcall
push
xchg
sbb
js
dec
fs
insl
scas
cmp
lea
ffree
sti
jno
enter
push
and
mov
dec
test
sarl
push
or
lret
cmp
mov
jne
fnsave
or
jae
jmp
dec
jg
lock
movsb
push
test
or
pop
jne
fimull
cwtl
pop
mov
cmp
lods
scas
or
dec
sub
xchg
leave
pop
dec
xlat
sub
or
mov
shrb
xchg
lods
push
mov
cli
mov
andl
mov
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
mov
sahf
adc
sbb
sbb
xchg
dec
cmp
outsl
pop
lock
push
mov
cmp
mov
rorl
adc
mov
insb
mov
lods
std
cmp
or
sub
push
push
adc
int3
cmp
out
mov
loopne
les
dec
js
nop
lods
fsub
push
mov
inc
sbb
popf
in
icebp
cmc
pop
mov
add
inc
xlat
ds
insl
xor
je
out
xor
adc
sbb
or
test
xchg
xchg
arpl
sbb
daa
push
lret
dec
rcrb
addl
sbb
mov
sub
mov
test
sub
jns
xchg
test
push
mov
adc
mov
xchg
mov
mov
stc
mov
adc
sbb
adc
adc
mov
inc
jns
insl
pop
loopne
scas
mov
insl
or
cmp
jb
into
inc
pusha
mov
and
sub
outsb
jnp
xchg
sub
pop
jp
adc
mov
xorl
cmp
lods
jmp
jl
push
xchg
test
je
in
mov
push
inc
or
lods
jle
shll
xchg
ret
dec
sbb
and
xor
pop
xchg
shl
lock
je
mov
sbb
jecxz
or
mov
adc
loope
js
mov
inc
in
paddd
sbb
test
mov
or
cmp
push
inc
shl
or
rorl
std
roll
push
push
jg
ret
inc
push
adc
movsl
cli
ss
xor
js
jnp
out
fs
test
mov
lret
in
push
mov
std
pop
push
fwait
cs
sahf
aas
xor
push
ret
out
jnp
jge
lea
and
push
jo
push
pop
cmp
sub
mov
inc
jle
adc
test
sbb
cli
fs
sbb
push
pop
and
rorl
out
inc
jnp
pop
dec
dec
out
jl
mov
daa
sub
mov
or
or
aam
xchg
jecxz
out
aad
add
cmpb
sbb
sbb
cli
mov
add
andb
mov
adc
pop
fists
mov
cmp
andl
inc
or
push
fs
ficomps
xchg
mov
mov
mov
lret
pop
mov
leave
jmp
dec
or
sbb
sub
or
aaa
or
shr
hlt
cmpsb
mov
popa
pop
or
cs
je
inc
test
xor
lahf
lock
xchg
insl
xchg
mov
dec
int3
or
add
xchg
cmp
fs
cmp
and
out
push
ds
add
mov
inc
aad
xor
leave
mov
sbbb
sbb
jbe
sub
stos
xor
xchg
ds
xlat
call
loope
test
push
pop
push
psubusw
push
jnp
pop
push
out
bound
out
adc
push
jecxz
cli
stos
xlat
lods
sti
add
lret
xlat
scas
ret
stc
push
sbbl
pop
xchg
lcall
jo
imul
xchg
jne
mov
out
or
pop
popf
call
test
mov
push
jmp
inc
cwtl
xchg
cltd
orl
psrld
int
fwait
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
jae
mov
push
xor
sbb
loop
loopne
adc
pop
pop
imul
ss
xchg
sbb
orl
push
nop
ss
push
fxch
pop
xchg
jecxz
or
lea
mov
jl
jle
sbbl
xchg
or
inc
push
out
in
popf
aas
push
jnp
mov
jmp
addr16
sub
ret
mov
scas
xchg
jne
lods
call
mov
inc
cmp
pop
repz
adc
cmp
dec
insb
adc
mov
pushf
outsl
push
mov
inc
pop
aad
mov
mov
loopne
aaa
inc
hlt
pushf
fxsave
imul
ja
mov
jecxz
mov
iret
jae
test
jnp
mov
dec
in
shll
inc
clc
push
mov
cmp
rep
shrl
jl
cmp
cmp
and
int
iret
fiaddl
ds
testl
psubsw
lcall
jmp
mov
lea
out
sub
cmp
andb
ljmp
ret
das
pop
subb
outsl
cmpl
call
dec
and
das
pop
aaa
jmp
rcll
ja
jecxz
push
jl
addr16
jmp
pop
and
add
das
jne
aad
xor
cmp
mov
xchg
xchg
movb
ret
or
push
xor
cld
leave
fs
inc
xlat
pop
mov
sub
leave
outsb
inc
es
mov
cmpsl
mov
xchg
int3
xchg
call
push
int
js
arpl
pop
jbe
repnz
lods
out
mov
popf
jp
daa
inc
xchg
nop
std
hlt
cmp
loopne
int
jmp
and
cmp
jo
and
push
add
cmp
lret
mov
loop
fs
push
mov
mov
pminsw
inc
push
pop
mov
push
and
cwtl
mov
add
push
mov
std
dec
add
cmp
gs
in
inc
adc
add
mov
dec
out
push
xlat
cmpsl
sub
arpl
mov
and
or
xchg
inc
push
mov
in
jne
arpl
or
in
sub
jno
dec
mov
mov
shrb
dec
jg
xchg
cld
or
std
sub
jo
pop
jecxz
imul
sbb
pop
aam
lcall
vcvtss2si
add
xchg
xchg
xchg
xor
mov
clc
push
jno
clc
jae
js
mov
sbb
pop
mov
push
lock
push
pop
data16
mov
mov
jb
xchg
mov
xor
daa
das
cmpsb
add
outsb
scas
test
fsubrl
sbb
iret
fs
mov
adc
lcall
pop
fmull
pop
popa
and
sub
jg
fwait
mov
sbb
pusha
jbe
inc
aam
icebp
inc
out
lds
mov
js
call
fstp
adc
repz
add
pop
or
and
sbb
daa
and
je
sbb
rcl
sbb
xchg
mov
vmovq
xchg
mov
xorb
jns
addl
push
pop
rol
movsl
ja,pt
xchg
aaa
sub
sti
insl
sub
jl
pop
adc
adcb
aad
fstpl
xor
push
mov
jae
rorl
hlt
push
or
add
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
mov
sbb
sahf
adc
sbb
iret
mov
inc
mov
jns
cmp
insl
ja
testb
std
push
inc
insl
je
ss
dec
push
daa
daa
xor
xchg
mov
pop
jmp
mov
imul
xchg
leave
out
add
cmpsb
nop
stc
ja
push
dec
aam
loop
mov
ret
inc
dec
jecxz
fwait
dec
xchg
std
cmp
pop
sbb
sub
inc
in
and
pop
push
inc
jo,pt
sahf
push
or
enter
dec
pcmpeqd
xor
fsubr
icebp
mov
gs
mov
xchg
cwtl
jnp
xor
dec
imul
es
jne
and
fisubrs
cli
loop
stos
xchg
xchg
scas
mov
mov
inc
mov
into
adc
insb
popf
out
dec
iret
or
pop
sub
shlb
jns
pop
pushf
fnstenv
sbb
pop
push
out
sbb
popa
xor
sub
fisubrs
pop
movsl
mov
push
or
sub
imul
sub
xorb
push
das
mov
adc
push
popa
sub
jmp
mov
mov
stc
icebp
jnp
cs
cmc
orb
jo
out
ret
dec
in
inc
xchg
adc
cmp
pop
xor
and
sbb
xchg
adc
inc
in
adc
mov
lahf
xlat
and
andl
push
inc
fnsave
mov
push
inc
sub
or
lods
gs
cmpsl
cwtl
je
test
js
loope
lcall
xlat
push
jb
aad
repz
xor
xor
sub
inc
mov
mov
or
xor
data16
inc
cmc
rcl
or
std
leave
bound
jge,pn
dec
lea
frstor
mov
sub
bound
xchg
xor
xor
notl
jl
xor
insl
dec
fmul
cmp
add
lds
outsb
loope
inc
enter
test
je
jno
mov
lahf
jae
dec
shl
xchg
pop
jnp
inc
scas
pop
insb
jb
mov
fdivrl
insb
lcall
outsb
or
and
mov
pushf
jp
lret
js
test
adc
pop
push
mov
mov
xchg
arpl
daa
jb
sub
aad
insb
fcoml
and
daa
cmpsl
pop
in
push
in
mov
aam
icebp
movsb
push
aad
xchg
lcall
stos
pop
add
out
cmpsl
dec
inc
push
shlb
clc
push
add
iret
add
sub
aaa
pop
ficoml
subl
add
incl
lahf
notb
and
xchg
add
mov
pushf
addr16
repnz
shlb
lcall
mov
inc
imul
fwait
and
into
push
and
js
movsb
mov
fists
pusha
mov
out
pop
les
fisttpll
sub
fstps
xlat
jge
cmp
and
into
cld
adc
push
mov
sti
aas
mov
mov
sub
pop
and
mov
in
jp
jno
jne
movsl
es
adcl
movsl
dec
test
popa
popa
in
nop
aas
mov
in
dec
and
mov
jo
lods
mov
les
pushf
test
inc
je
lds
push
shlb
shlb
stos
test
xor
adc
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
shlb
stos
pop
and
sbb
sbb
cwtl
hlt
dec
daa
addl
push
outsl
mov
adc
aaa
mov
lea
lcall
pop
mov
in
and
mov
stc
adc
add
and
push
fidivl
test
rolb
mov
inc
add
xchg
sahf
jno
push
pop
out
ret
pop
mov
scas
adc
jmp
cli
cmpsb
cmp
andb
dec
lcall
jmp
jns
nop
push
es
or
dec
test
xchg
dec
xchg
rcll
inc
sub
orb
add
incl
lret
sub
add
bound
inc
jbe
push
jno
xlat
mov
ret
jns
jmpw
ja
sbb
ficoms
loop
daa
cmc
sbb
jae
xor
pop
clc
fcompl
push
cmp
sub
jnp
cmp
xor
adc
arpl
push
push
sarl
mov
xchg
cwtl
fbld
test
or
jmp
lret
shlb
cmpsb
push
jl
sub
cltd
stos
jbe
stos
cwtl
sub
push
mov
add
popa
lock
lods
jnp
mov
movsl
sbb
mov
xchg
xchg
sub
push
push
dec
lret
test
xlat
pop
shlb
xor
mov
xchg
stos
sub
loope
mov
cmp
lock
push
rcll
into
subl
mov
adc
cmp
fadds
fwait
mov
and
push
or
fnsave
xor
mov
and
push
sub
fidivrs
inc
mov
pop
jl
test
out
inc
adcl
adc
ja
lcall
shrl
sub
jbe
add
mov
adc
jmp
dec
or
lret
mov
add
sti
mov
lcall
jnp
adc
jbe
inc
cltd
pop
pop
mov
and
iret
mov
out
jns
gs
in
mov
xchg
nop
jne
and
movsb
sub
mov
arpl
pop
inc
aad
xchg
jae
sub
movsb
scas
xor
test
test
jge
xchg
ss
movsb
push
cmp
push
pop
push
mov
pusha
ds
pop
icebp
dec
lret
test
movsb
mov
ljmp
mov
pop
scas
mov
mov
ss
dec
add
dec
and
les
aad
pop
ret
xor
jbe
movsl
push
mov
dec
sbb
std
shlb
mov
or
xor
lods
push
pop
push
push
dec
lock
inc
cs
mov
mov
push
mov
pop
scas
xchg
jmp
nop
push
pop
stc
dec
test
stc
pop
fcoms
cmpb
test
mov
stos
cmp
and
test
icebp
inc
inc
inc
and
xlat
xchg
sbb
js
out
pusha
jge
mov
xor
pop
adc
lods
lods
je
in
fdiv
cmpb
roll
ljmp
in
loop
xor
xchg
xor
mov
iret
jo
cld
mov
cmp
add
pop
cmp
dec
repnz
mov
inc
icebp
sbb
outsl
out
shlb
and
dec
inc
lahf
cmp
push
xchg
shrb
faddl
sahf
inc
sub
adc
cli
dec
cmp
jo
int
dec
sbb
inc
jge
inc
mov
or
cmp
cmp
adcl
inc
jns
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
jge
inc
push
sbb
sbb
sbb
out
jecxz
es
test
cli
xchg
leave
mov
xor
push
xchg
insb
loope
adc
mov
in
imul
pop
bound
pushf
ret
jb
iret
in
mov
por
fdivrs
dec
xchg
mov
test
enter
imul
xchg
into
insl
cld
mov
shl
movd
fsubrs
ror
mov
push
test
push
xor
lahf
and
jbe
int3
aas
jno
icebp
enter
mov
call
loop
and
jecxz
pop
and
data16
loopne
mov
rolb
jp
iret
xor
test
leave
pop
enter
popa
mov
add
adc
mov
pop
in
adc
add
jl
int
sub
add
jle
xchg
jnp
aam
jl
imul
loop
adc
insb
add
ffreep
mov
jecxz
pop
xor
pop
mov
ret
sahf
int
jbe
adc
arpl
aaa
ljmp
rcll
jns
rcrl
cmpsl
dec
test
mov
dec
ret
andb
rorb
inc
or
inc
movsb
mov
addr16
mov
push
test
or
xchg
jnp
mov
out
in
stc
aad
popf
and
xchg
sbb
xor
jp
shlb
lcall
stos
push
leave
dec
push
add
fisttpll
arpl
inc
loopne
fistps
pusha
and
outsb
cwtl
lods
arpl
call
ret
or
out
mov
hlt
movsl
enter
dec
dec
pushf
test
shl
mov
jno
jnp
bnd
or
pop
push
jecxz
push
sub
cli
pop
pop
outsb
mov
stos
es
pop
insl
aas
push
adc
nop
je
push
gs
jp
sub
call
dec
add
or
adcw
into
mov
lods
or
sbb
addr16
stos
mov
adc
aad
shlb
stos
stc
cld
sbb
sbb
iret
push
mov
jmp
pop
leave
aam
adc
sub
stos
xchg
push
ds
inc
xchg
cli
lods
imul
jnp
fcoms
sub
out
imul
jmp
divb
pop
rorl
dec
and
out
inc
and
aad
jne
mov
loope
sbbb
pop
inc
mov
dec
sub
pop
dec
loope
mov
jge
ja
push
cmp
stos
mov
xchg
int
aad
and
mov
and
into
rcrl
xor
das
lret
push
test
pushf
arpl
iret
push
mul
mov
icebp
imul
fstpl
repnz
loopne
dec
push
add
push
cli
push
and
mov
daa
adc
aam
cmpsb
gs
push
and
fsubrl
sbbb
push
scas
mov
sub
xor
or
push
jp
fsubr
jle
sbb
lock
nop
out
es
and
stc
sub
std
fwait
repnz
sarb
add
fcom
int
mov
idivb
adc
xchg
movsb
mov
dec
repz
call
inc
mov
lcall
adc
mov
jno
jmp
popf
jbe
adc
loope
sub
js
mov
movsb
out
lods
cmp
popf
pop
lods
and
mov
aaa
cli
jge
mov
or
mov
mov
pop
pop
stos
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
mulb
sbb
sbb
push
fs
mov
xchg
or
inc
dec
adc
scas
pop
push
push
out
and
mov
lahf
jecxz
mov
lcall
ljmp
mov
sbb
xlat
int
int
fdivl
sahf
push
shrl
inc
pop
test
cmc
inc
push
insb
inc
push
cmpsb
pop
inc
les
mov
jne
sbb
xor
arpl
jge
mov
scas
insl
enter
push
lahf
add
clc
xor
or
das
mov
adc
stos
test
loope
mov
dec
ljmp
cmp
outsl
lods
stc
and
insl
cld
mov
popa
aas
test
mov
xchg
inc
outsb
pop
movsb
inc
test
filds
lret
cmp
and
xchg
mov
stc
negl
mov
call
fwait
pop
fsincos
lret
inc
cmpl
ret
fsubl
mov
xor
sub
add
test
movsl
jmp
rolb
aaa
aad
inc
out
out
xchg
xor
mov
adc
cli
mov
jg
push
scas
dec
mov
adc
pop
insl
sbb
ds
arpl
and
insb
sbb
int3
movsl
xor
js
inc
das
cmp
pop
mov
pop
std
jp
xor
icebp
int3
push
js
hlt
cwtl
subl
xchg
lcall
int3
push
mov
shrl
in
push
cmp
das
push
shl
add
sbb
mov
pop
lea
sub
cmp
into
imul
loop
sbb
jmp
lret
pop
scas
pusha
out
lret
in
push
inc
call
insl
ds
push
mov
les
test
shrb
test
sub
fwait
rcr
fcom
inc
mov
cld
cwtl
pop
sub
sub
adc
pop
fisttpl
std
jle
pushf
jo
roll
lock
jl
xlat
jb
add
aam
nop
adc
andl
mov
aam
xor
ret
dec
add
mov
lcall
fidivs
in
ss
push
jns
mov
fs
repz
and
or
fistpll
in
cmp
pushf
scas
outsl
push
xor
fiadds
out
js
push
lret
sahf
pop
imul
shl
sbb
or
push
es
imull
and
push
pop
mov
fld
dec
mov
dec
xor
jb
cmc
xchg
inc
idivb
jb
lret
push
in
jmp
movsb
in
mov
dec
lret
push
mov
dec
or
mov
dec
xchg
insb
outsl
enter
push
jbe
scas
js
mov
popa
jmp
ret
pop
sub
cmp
fst
add
clc
add
cli
cltd
arpl
mov
in
fs
lods
fidivrl
jge
subl
test
fistpll
dec
rcl
in
popf
sbbl
dec
arpl
lods
arpl
out
repnz
xchg
xor
mov
xchg
jmp
std
cmp
push
pop
sti
xor
add
mov
mov
or
jo
push
rcrl
pop
outsl
pusha
in
cwtl
mov
into
sbb
mov
sbb
hlt
push
mov
sub
pusha
bound
imul
add
jno
je
dec
mov
mov
jbe
call
stos
aam
jg
xchg
ljmp
dec
insb
imul
mov
movsb
outsb
jae
movsl
popl
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
icebp
dec
mov
sbb
outsb
adc
sbb
mov
push
cmp
cmp
lods
mov
fbstp
pop
lcall
aam
sub
lret
push
aaa
dec
adc
dec
scas
rcrb
xor
movsb
pop
xor
sub
pop
add
push
push
imul
insl
inc
fisttps
imul
pusha
sub
sub
ret
fdivl
fstl
pop
es
das
ror
inc
fsub
inc
xor
fucomip
mov
lahf
stc
mov
or
mov
roll
push
mov
shl
insb
in
fstpt
test
pop
and
loope
pushf
sarl
mov
fisttpll
mov
hlt
inc
and
mov
xor
sbb
cmc
push
in
sub
out
shrb
xor
mov
ds
in
fisubs
jl
and
xchg
addb
pusha
inc
iret
mov
idivl
adc
ret
shl
test
sahf
aaa
aad
mov
cmpl
jo
fimull
add
daa
faddl
imul
test
mov
xor
xchg
mov
daa
add
cmp
jns
pop
add
xchg
dec
pop
jns
or
and
jecxz
mov
jae
xlat
stos
jae
jae
scas
xchg
jae
mov
or
jno
es
fisubl
add
repnz
sub
jl
in
int
xor
adc
inc
sti
fistpl
rcr
movsl
push
and
sub
je
pop
dec
and
bound
xchg
andl
inc
mov
mov
iret
into
jle
sbb
jmp
mov
lcall
pop
js
lahf
aam
inc
cmp
mov
mov
aam
or
mov
movsl
fucomip
cmpb
repz
sti
loopne
jns
ret
push
negl
outsb
leave
cmp
push
cmpsb
outsb
fadds
ss
mov
mov
ja
xchg
test
faddl
mov
dec
adcl
inc
mov
sbb
lret
imul
enter
adc
push
leave
lods
and
leave
sbb
mov
pusha
std
dec
jg
add
daa
in
add
lret
je,pt
cmpsb
mov
lock
add
cmp
sahf
js
ds
inc
lret
movsb
fdivl
add
or
popa
lods
cmp
in
daa
or
mov
xchg
sbb
xor
lea
jns
and
iret
adc
rcrb
loope
incb
push
cmp
hlt
jns
jo
sti
push
mov
fstl
jge
fistps
into
clc
leave
loop
dec
jmp
jbe
jl
pop
lock
iret
lods
mov
sbb
fidivs
testl
je
mov
mov
fcmovbe
in
shlb
cmpsb
mov
divl
pop
adc
mov
sub
mov
cmp
or
push
push
push
idiv
inc
es
mov
repz
les
sub
add
or
jp
mov
loop
sub
and
inc
fisubs
adc
mov
inc
inc
mov
and
mov
jo
and
push
call
or
mov
movl
rcrb
jle
enter
repz
mov
mov
mov
xchg
dec
mov
popf
inc
movsb
xor
rcl
sub
pop
mov
jbe
jae
and
jne
scas
test
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
xchg
in
mov
sbb
outsb
adc
sbb
pop
outsb
movsb
push
in
ja
popf
inc
imul
lods
lret
loopne
gs
mov
fsubs
push
xor
mov
mov
rclb
mov
and
imul
push
inc
dec
mov
pop
repz
mov
pusha
xor
mov
rcr
fstps
push
mov
push
in
mov
inc
mov
jo
in
popa
mov
pop
rorb
pop
pusha
pop
sti
jbe
and
mov
push
fwait
mov
adc
lock
lock
and
jno
inc
push
jg
dec
arpl
fisubrl
in
imul
jb
jno
ds
scas
jae
xor
xor
ss
add
jp
insb
xchg
push
mov
xchg
xchg
stos
push
or
xchg
pushf
cmp
xchg
mov
adc
mov
sbb
xchg
push
cmp
fisttps
cmp
sbb
sahf
test
popa
imul
out
or
mov
dec
in
or
push
imul
xor
xor
aam
divb
pop
test
test
xchg
data16
in
xor
lcall
clc
xchg
mov
ss
mov
add
add
popa
dec
jae
lods
test
jo
push
fwait
mov
imul
jae
add
cwtl
or
loopne
jl
pop
push
leave
lods
lds
lret
ficoml
inc
inc
sarl
mov
jns
xor
inc
mov
insl
dec
cmp
xlat
or
cltd
and
push
sub
repnz
adc
cltd
idivl
stos
mov
mov
aad
jecxz
aam
xor
mov
lods
jge
sahf
pop
out
inc
pop
dec
out
lcall
mov
add
or
add
data16
popa
or
sarb
sbb
leave
mov
inc
xchg
or
fisttpl
lea
aad
inc
mov
sbb
movsb
enter
mov
outsb
xchg
mov
shrb
jne
inc
in
and
popl
ss
mov
lret
adc
imul
mov
push
pop
pop
mov
das
pmuludq
leave
sub
xchg
andl
dec
outsl
in
sahf
test
add
or
xchg
pop
mov
cmc
and
inc
cmp
nop
pop
adc
mov
iret
lds
cmp
subl
aad
jno
gs
xor
leave
insb
cs
fld
pop
shrl
mov
outsb
cmp
sbb
enter
jecxz
jp
lods
cmpsl
or
cmpb
xchg
push
int
jg
inc
or
aaa
push
xchg
in
ret
in
jbe
daa
out
cmpsl
pop
add
dec
jle
js
icebp
pop
xchg
push
push
hlt
iret
sub
les
addr16
jl
push
push
and
iret
andb
jne
xchg
jp
mov
rcrl
xor
shrl
iret
fs
in
adc
mov
mov
mov
pop
pop
shlb
in
ret
jns
jno
or
jecxz
add
int
mov
mov
sub
dec
dec
inc
popf
out
ret
cmpsl
lcall
fisttps
mov
sub
rolb
mov
fistps
adc
ret
sub
paddq
sbb
pop
popa
adc
stos
pop
add
adc
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
cmc
jb
jl
std
sbb
outsb
adc
sbb
iret
ficomps
mov
cmc
sbb
lods
stos
push
xchg
fs
loope
sub
xor
cwtl
jae
pop
jecxz
les
stc
push
test
les
sbb
pop
pop
clc
jge
push
pop
mov
in
cmp
andl
inc
sbb
je
add
sub
inc
or
mov
in
inc
fists
fnstcw
pop
imul
pop
add
mov
or
jmp
je
sbb
adcb
fmull
inc
cld
push
stos
leavew
push
mov
adc
int3
add
movsl
mov
ror
xchg
mov
loope
sub
lods
in
push
jp
pop
into
cwtl
pop
push
cld
mov
dec
mov
fs
in
aad
mov
addb
scas
jmp
lock
and
xor
rcrb
les
xchg
jecxz
or
sarb
jae
fiaddl
jne
adcb
mov
arpl
add
ja
aam
aas
jmp
push
jmp
dec
push
inc
mov
sbb
mov
add
jae
icebp
sub
test
mov
xchg
adc
pusha
in
sbb
or
imul
or
int3
loopne
mov
ljmp
repz
fs
mov
push
jl
mov
sub
jg
fldt
popf
ret
or
aad
or
adc
mov
out
lcall
pop
stos
sub
mov
scas
je
xchg
xchg
xchg
add
pop
stos
iret
push
inc
adc
jae
add
lret
add
push
iret
dec
pop
sarl
dec
pop
mov
int
adc
and
pop
and
xchg
out
testb
stos
and
dec
fistl
and
jle
std
jmp
xchg
add
orb
push
insl
idivl
cmc
mov
imul
add
sbb
xchg
adc
fwait
mov
or
out
cmp
mov
jg
and
xchg
fistps
mov
lcall
push
pop
repnz
xor
jne
les
jae
es
fisubs
push
xchg
mov
push
lret
pop
inc
inc
sbb
icebp
sbb
js
dec
lret
sub
mov
int
sub
repz
fs
adc
mov
imul
fcomip
mov
xorb
scas
aaa
sbb
sbb
aam
or
add
in
ret
dec
pop
imul
xchg
add
out
cmp
jp
jmp
pusha
lods
mov
leave
shlb
inc
mov
outsb
stos
in
je
outsl
clc
add
lea
xchg
test
scas
cli
jae
outsb
mov
gs
jo
push
add
pop
insl
pop
shlb
inc
clc
int
or
lret
inc
fs
adc
push
sub
in
xor
adc
or
xor
out
push
lahf
xor
out
ja
popf
mov
lret
out
mov
fs
cld
mov
out
xor
shrb
xchg
shll
inc
call
cmc
lds
mov
in
mov
inc
push
sub
mov
imul
inc
add
sub
pop
int3
outsl
sbb
lock
bound
shufps
scas
fstps
popf
aaa
popa
sbbl
inc
push
adc
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
mov
outsb
adc
sbb
sbb
jge
or
lods
pop
lahf
inc
enter
mov
test
loop
push
mov
out
or
mov
dec
mov
adc
add
sbb
push
rolb
outsl
xor
or
push
jmp
lahf
jl
xchg
std
sbb
mov
inc
out
sbb
push
push
int3
data16
add
fisubl
pop
in
add
adc
push
sbb
xor
ja
mov
pop
sti
and
xor
cmp
popf
mov
in
sub
bswap
add
ret
je
adc
shlb
push
aad
daa
add
enter
lds
cmp
xchg
cltd
or
sub
xchg
fstps
repnz
loope
xchg
add
cmp
or
mov
or
mov
test
repnz
mov
rorl
lahf
rep
push
inc
pop
nop
daa
pop
mov
xlat
adc
nop
enter
add
jg
arpl
mov
dec
cmp
pop
cmc
js
fmul
testb
sbb
xchg
lret
cs
jne
xchg
xchg
popf
in
arpl
or
dec
popa
cmpsb
popa
push
jns
pop
sub
jnp
push
mov
aam
clc
xor
fldt
or
aaa
cmc
out
neg
shlb
sarb
push
bound
movsl
inc
icebp
push
cli
aaa
mov
fcoms
mov
pop
push
in
aam
ror
loopnew
aad
fisttps
jno
pop
lret
cmp
jne
sbb
inc
call
arpl
cltd
xchg
jg
push
add
fcoml
loop
and
outsl
pop
xor
adc
leave
popa
pusha
shlb
aam
enter
in
inc
mov
in
and
sbb
add
inc
repnz
inc
shll
mov
inc
sbb
ds
sbb
sahf
adc
adc
sub
dec
pusha
add
mov
jae
sub
inc
jmp
mov
pop
mov
test
xchg
int3
dec
jmp
pop
mov
cmp
jbe
roll
add
rolb
and
bound
hlt
push
fldenv
cmp
sahf
or
push
movsl
test
outsl
mov
jno
fwait
add
push
daa
inc
cmp
push
sbb
dec
xchg
sbb
sbb
insl
adc
mov
dec
stos
dec
cmpsb
mov
jp
add
adc
xchg
push
sbb
int3
push
movl
ret
lret
inc
gs
pop
jb
dec
mov
scas
cli
in
push
out
xchg
jmp
imul
sbb
cltd
int3
sub
ret
aam
cmc
mov
dec
imul
mov
daa
adc
jmp
push
outsl
pop
scas
mov
mov
sub
icebp
sub
stos
pusha
lahf
inc
pop
and
push
push
inc
xor
adc
gs
and
loop
push
out
jmp
xchg
fcoml
jle
popf
xchg
jg
jo
adc
lea
into
xor
mov
xchg
clc
jne
sub
adc
cs
test
shlb
mov
xor
std
fiaddl
es
dec
jg
fidivrs
push
popa
leave
mov
loope
add
xchg
imul
ja
cmpsb
jecxz
in
out
xchg
sbb
and
adc
xor
cmc
jbe
jle
scas
bound
and
out
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
or
mov
scas
sahf
test
js
xor
cmp
cmp
in
lret
xor
add
or
mov
jne
icebp
inc
repnz
icebp
decl
fldenv
jns
lcall
xor
cltd
imul
pop
xchg
push
adc
sahf
aaa
in
pop
adcb
movsl
push
shll
sbb
mov
cmp
stos
push
repz
jo
dec
roll
das
loop
lret
stc
je
in
mov
std
inc
shll
addr16
xchg
dec
test
xor
xchg
sub
aad
fnstenv
jbe
xor
sahf
cmp
fs
pop
xchg
int
mov
mov
or
std
mov
mov
movsl
loop
mov
xchg
idivb
mov
je
mov
lret
pop
jmp
ss
xor
ret
or
jle
idiv
pusha
dec
cmp
into
andb
push
jae
cmpsb
out
and
out
call
mov
sbb
das
mov
push
cltd
and
mov
shld
xchg
jae
push
dec
aaa
sub
jno
jnp
ss
lods
cmp
push
in
fimull
in
test
cmp
movb
push
lods
jmp
loop
ret
mov
stos
ljmp
cmp
lret
cmp
es
fsubrl
iret
push
dec
in
or
push
sbb
insl
in
cmpsl
lea
jne
sbb
aaa
dec
test
insb
and
pop
lods
mov
sbb
sub
fnstcw
lea
imul
and
dec
jae
fcom
fwait
add
sahf
sbb
cmp
or
test
mov
push
mov
mov
hlt
js
aad
lock
push
shlb
test
lds
lock
test
pushl
mov
push
int3
cmp
not
rolb
mov
shrl
aam
addl
mov
xchg
mov
test
cmc
dec
imul
pop
fstps
jecxz
int
sub
shrb
dec
mov
inc
enter
mov
sbb
stc
leave
sub
inc
sbb
outsl
cltd
test
xchg
xchg
aas
aaa
ds
ret
xchg
iret
sbb
andl
sar
arpl
lea
push
outsb
cmc
pause
popa
push
sysret
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
push
stos
jb
sbb
rclb
sbb
inc
sbb
jns
lea
and
ja
decb
je
sbb
and
sbb
inc
sbb
mov
imull
stc
adc
fsubrl
fcompl
lods
xor
push
sahf
movb
sarl
dec
ja
push
sub
dec
ficomps
cmpsl
std
dec
push
jbe
cmc
cld
into
imul
orb
sub
push
adc
pop
cltd
pusha
adcb
jp
loopne
inc
aaa
mov
test
sub
aam
xchg
xchg
test
das
out
jne
cmp
jg
dec
mov
mov
and
int3
orb
adc
int
cmp
loope
xor
and
or
or
insb
xor
jmp
adc
lcall
adc
push
aas
cmp
push
fildl
test
inc
push
push
adc
rorl
ss
fidivrl
lea
lods
inc
aam
xor
sub
test
xchg
out
pop
jnp
out
push
or
sub
inc
add
mov
punpcklwd
cmc
out
pop
inc
mov
ljmp
popf
jecxz
jno
sbb
out
imul
push
mov
xchg
pop
movsl
lret
jecxz
outsb
cmp
fbstp
mov
test
push
outsl
mov
jge
or
or
xor
sbb
imul
in
pop
shlb
cmp
and
pop
or
and
cmp
shr
adc
pop
sub
ret
nop
jge
movsl
push
bound
add
xchg
bound
xor
xor
ds
xchg
arpl
mov
rcr
jle
data16
ss
adc
mov
dec
leave
adc
fnstenv
jecxz
fstp
pop
rcr
add
pop
sub
rolb
enter
lret
pop
dec
cld
sbb
rcr
sbb
fcoml
dec
xor
scas
jge
push
mov
sub
shr
lret
iret
pop
mov
mov
xchg
fadd
fstl
scas
adc
das
adc
mov
pop
in
mov
sub
leave
lss
shrb
sbb
or
incl
pop
add
cmp
sbb
inc
rcrb
imull
hlt
lahf
insl
insl
mov
in
les
pop
movsl
xchg
mov
test
sbb
cld
mov
int3
mov
les
sub
add
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
add
loop
sbb
adc
sbb
nop
lods
xor
in
pop
cmp
xchg
loopne
xchg
mov
clc
insl
sti
and
jmp
clc
push
and
daa
cmp
fstpt
mov
jne
and
test
mov
clc
push
xor
scas
clc
jl
stos
rorl
test
dec
movsb
pop
dec
fiadds
cmpsl
or
dec
test
mov
sbb
sub
inc
or
fdivp
fpatan
aas
fs
cmp
test
lea
adc
test
and
add
cmpsl
adc
fsubs
lods
or
int
lcall
sub
cmpsl
cmovo
and
mov
inc
cmpsl
lds
xor
mov
jp
xchg
loopne
push
lahf
xchg
insl
xorb
cwtl
rorl
dec
add
in
pop
lahf
inc
gs
cmp
vphaddbq
adc
lods
and
mov
mov
int
mov
repnz
jo
push
adc
insl
test
orb
pop
shl
mov
or
xor
push
imulb
xor
jbe
loope
lods
jae
xchg
stc
mov
adc
sub
mov
and
out
mov
mov
cmp
adcl
lds
xchg
mov
inc
aam
mov
rcrl
xchg
or
xor
dec
iret
or
add
xor
dec
int
and
js
fnstsw
push
and
scas
es
add
inc
mov
cld
fiadds
and
adc
push
in
insb
sbb
dec
popa
xchg
cmp
mov
add
mov
cmp
repz
sub
pop
enter
fidivl
lds
or
dec
gs
sbb
mov
clc
in
pop
test
test
ret
fcmovb
clc
jl
cmpsl
mov
mov
xor
mov
mov
xlat
mov
sbb
fdivr
mov
hlt
popa
cmpsb
dec
mov
outsl
cs
fmull
scas
fwait
data16
das
inc
loopew
fxch
adc
testl
repnz
out
cmp
sbb
incl
mov
cs
loopne
pop
xor
jecxz
pusha
imul
std
mov
dec
orl
xchg
cs
not
jbe
sub
in
or
stos
fcmovnbe
das
inc
imul
inc
push
aaa
add
rclb
push
lcall
push
adc
loopne
shr
mov
fdivs
sbb
pop
into
sbb
jae
out
dec
jle
fcompl
sbb
adc
sbb
mov
mov
pushf
and
lret
out
cmc
in
push
in
lods
aaa
aas
cwtl
and
lods
test
cmpl
add
inc
xchg
rclb
pop
pop
dec
jp
or
pusha
stos
lods
lea
insb
push
out
push
jg
adc
sahf
inc
stc
cwtl
rolb
cmp
das
imul
add
add
push
ss
cwtl
or
xchg
fists
fidivrl
lea
shlb
pop
sbb
adc
sub
pop
or
sub
stc
jl
in
xlat
fsts
pop
int
sub
push
bswap
call
ret
pextrw
xchg
out
cmp
std
sahf
sub
add
mov
aam
and
jnp
movsb
test
pop
sub
pop
xchg
jmp
and
push
cmp
aas
dec
inc
icebp
pop
inc
sbb
pop
in
test
mov
xchg
shl
divl
insl
test
push
ja
stc
mov
dec
popa
push
test
jmp
mov
mulb
fiadds
ja
sub
pop
sbb
jp
inc
push
in
push
cmpsb
cmp
jle
shl
test
rolb
sub
pop
xor
dec
fsub
loope
adc
cmpsb
cltd
pop
shrb
ds
outsl
xchg
enter
pop
outsl
jbe
cmp
data16
sub
loop
mov
jmp
fmull
cmp
lods
xor
jns
cmp
add
inc
jge
jp
sbb
mov
sub
loopne
or
sti
aad
jno
push
add
inc
arpl
popf
push
sub
aam
das
adc
outsb
lods
jo
aad
mov
mov
push
cmp
sbb
mov
ja
xchg
sbb
jne
lcall
sbb
cmp
sbb
cmp
xor
and
and
adcl
pop
icebp
daa
pop
cmpsl
sbb
cld
lret
into
cmp
adc
sub
add
into
lds
hlt
notb
jle
adc
dec
add
stos
jle
les
push
xchg
repz
push
mov
push
mov
xor
repnz
pop
mov
jb
xor
or
popf
mov
mov
hlt
cltd
push
adc
and
mov
fadd
bound
cmp
cli
imul
xlat
mov
add
aaa
push
push
mov
dec
stos
les
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
jle
fcomps
sbb
adc
sbb
fistps
lods
loop
jle
cmpsl
cmpsb
add
cmp
mov
jo
mov
mov
and
lret
cmpsl
enter
xchg
jb
or
xor
add
jecxz
stos
rolb
in
jecxz
sbb
bound
pop
lcall
push
out
mov
sarl
call
pop
mov
dec
movsb
dec
stc
out
test
sti
mov
add
lcall
jge
inc
test
cmp
or
xor
std
enter
paddsw
mov
xor
insl
adc
add
int3
loopne
out
loop
adc
jp
ret
test
leave
jmp
inc
mov
out
repnz
push
mov
shlb
jb
popa
sbb
inc
rcll
mov
loope
mov
mov
inc
ja
mov
mov
jne
jle
cli
int3
inc
jg
pop
fldenv
mov
or
add
ss
insl
test
popf
jl
adc
out
int3
imul
les
mov
mov
popa
xor
repnz
lods
push
xor
test
cmpl
into
pop
lods
push
inc
int3
mov
imul
inc
in
orb
mov
fdivrl
adc
adc
dec
mov
sbb
pop
or
hlt
jbe
out
pop
push
mov
fdivl
jecxz
sub
cwtl
add
mov
push
and
inc
push
sbb
push
dec
addl
jae
sbb
inc
dec
lods
and
mov
pop
ret
data16
and
aas
loop
and
int3
mov
hlt
add
dec
and
push
rorb
mov
mov
dec
push
cwtl
shrb
push
push
push
sub
mov
and
or
cmpsb
add
add
insb
rclb
cmpsb
push
xchg
jp
stos
jns
xchg
cli
ja
dec
pop
frstor
sbb
mov
push
jns
test
cld
hlt
lods
ljmp
insb
xchg
mov
mov
push
fistpl
sub
jno
pop
lods
jl
dec
movsb
dec
adc
lods
add
sbb
adc
push
pop
lahf
jne
cs
addb
fldenv
testb
add
mov
pop
add
jnp
adc
test
int3
idivb
leave
add
add
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
fsts
sbb
adc
sbb
in
cs
test
sti
popf
add
jne
aaa
jle
mov
push
repz
add
je
sub
lret
int
fcoms
mov
stc
dec
and
repz
mov
insb
lret
jecxz
add
call
jns
jnp
outsl
repnz
jle
pushf
out
stos
push
mov
lods
dec
mov
dec
into
outsb
ss
sbb
cmp
in
cmpb
and
push
int
xor
push
push
push
xchg
lahf
mov
push
mov
xor
dec
and
push
adc
mov
adc
or
mov
dec
insb
rcrl
stos
pusha
cmc
jae
inc
adc
jecxz
inc
insl
popw
and
shrl
frstor
int
mov
pop
cmp
mov
jnp
add
sub
xor
adc
dec
lret
xchg
push
mov
mov
fmuls
mov
cmp
jl
repz
movsb
loope
jbe
bound
jae
pop
sub
aad
dec
jg
dec
and
out
rcr
sub
add
or
xchg
lret
push
and
pop
cmp
inc
and
jo
cmp
xorb
xor
les
shrl
adc
jg
mov
add
ret
mov
jb
ds
or
mov
pop
imul
shrb
pop
sub
mov
cmp
sub
sti
gs
and
lods
cwtl
cld
cmp
pop
movsl
ljmp
idiv
jecxz
jns
js
jmp
xor
xor
pop
xor
cli
mov
dec
enter
sub
mov
in
pop
and
lods
mov
jne
lods
repz
cmp
rorl
adc
lahf
xlat
scas
push
mov
shlb
dec
mov
cmpsl
cmc
lods
fstpl
iret
subl
outsl
lock
sbb
sub
into
jno
mov
adc
jge
repz
fildll
outsb
ja
cltd
ret
nop
pusha
cmpsb
pop
jo
adc
imul
int3
mov
call
cs
xor
jo
add
inc
xchg
cli
cld
add
xchg
call
mov
push
leave
push
test
cmpsb
mov
push
das
push
addl
fcompl
rcl
out
dec
sbb
fs
adc
mov
sub
in
movsl
out
fwait
mov
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
sub
sbb
adc
sbb
ret
fsubrp
jo
fimull
out
xchg
add
mov
or
add
sbb
mov
add
loope
push
jb
lret
js
adc
pop
xchg
int3
jne
pop
sub
cmp
fs
sub
push
repnz
xor
scas
or
jge
cli
clc
push
xor
mov
jp
cmp
jns
dec
loop
sbb
pop
mov
jle
sbb
arpl
xlat
push
cmp
sub
inc
shlb
dec
addr16
mov
repz
cli
pop
xchg
push
int3
shr
jl
rcll
lods
inc
adc
mov
mov
addb
andl
gs
sub
jns
pop
mov
inc
cmp
lret
inc
lahf
xor
jle
roll
insl
inc
mov
and
std
test
fsubs
sub
out
imul
mov
out
inc
mov
sbb
xchg
and
xor
sahf
mov
pop
add
jecxz
fdiv
ret
enter
mov
mov
xchg
pop
push
in
cs
xor
stos
and
or
or
test
bound
and
pusha
nop
cmp
mov
sarl
icebp
jmp
sbb
mov
iret
leave
pop
push
adc
ss
jno
mov
sar
sbb
call
leave
loop
daa
mov
scas
or
sti
push
out
rorl
jmp
dec
push
sti
mov
pop
in
cmc
and
mov
repz
pop
and
mov
imul
lods
sbb
outsb
std
mov
test
pop
aas
jl
mov
lret
in
sub
pop
faddl
insb
mov
testb
addr16
add
mov
and
cwtl
mov
movsb
sub
or
adc
out
shlb
dec
jp
push
or
jle
lods
mov
inc
shlb
or
add
add
pushf
sub
xchg
mov
mov
jmp
jns
pop
and
in
daa
and
push
xor
pop
sub
xor
pop
testb
imul
test
cmp
jno
adc
mov
inc
push
roll
mov
xchg
sbb
out
adcl
shlb
mov
mov
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
mov
sbb
rclb
sbb
movsl
clc
imul
icebp
sub
fs
mov
add
dec
gs
pop
fiaddl
dec
dec
out
sub
pusha
sub
out
ljmp
lods
jno
jle
push
pusha
je
push
int3
ja
add
or
sbb
mov
xor
jbe,pt
orl
leave
imul
loopne
aaa
mov
add
dec
aad
rorl
mov
mov
int3
jb
aad
xor
jns
lods
jae
adc
loopne
scas
push
ja
push
ret
sbb
cmp
and
sub
sti
xchg
sti
scas
inc
sbb
test
add
mov
adc
and
sarb
sbb
push
sbb
mov
cwtl
das
mov
mov
mov
js
out
adc
pop
push
arpl
mov
lods
cmp
aas
push
or
das
stos
lock
adc
cmpsl
outsb
cwtl
cmpsb
pop
adc
dec
lret
enter
into
mov
stc
mov
push
addr16
out
push
fmull
cmp
xor
sub
lock
jo
jg
pop
icebp
sbb
dec
fwait
xor
pop
inc
xchg
mov
inc
stc
sahf
out
callw
incl
jno
pop
js
push
testl
daa
in
pusha
inc
jle
and
test
add
adc
js
inc
inc
dec
pop
addr16
movsl
adc
adc
dec
outsb
mov
inc
out
jb
jl
dec
int3
test
or
stos
mov
or
xchg
mov
std
mov
data16
and
push
out
dec
add
sbb
jecxz
xor
mov
ja
and
test
mov
shlb
rolb
adc
mov
mov
jl
sbb
fmull
push
add
rcr
sbb
mov
mov
shll
lock
mov
int
cwtl
fisubrl
inc
cmp
mov
mov
andl
inc
bound
and
inc
push
lock
mov
lret
xor
cmp
inc
daa
pop
mov
dec
jnp
cmpsl
jmp
in
mov
repz
sbb
xor
cmp
jecxz
mov
xor
cmp
arpl
push
sub
mov
iret
subb
adc
ljmp
insl
add
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
ljmp
aam
mov
loop
sub
fisttps
pop
sbb
xlat
jbe
ret
mov
out
stos
es
ss
or
mov
jno
sbb
std
dec
pop
int3
jo
push
push
and
or
jl
adc
adcb
cmp
aam
sbb
in
ja
flds
inc
lock
adc
aaa
sbbl
insl
mov
mov
push
mov
inc
lods
popa
jno
test
and
ret
sub
into
mov
add
inc
xchg
imulb
mov
add
das
out
rorb
mov
out
xchg
ret
mov
sbb
rcrb
cmp
jmp
xor
jl
data16
mov
mov
xchg
adc
xchg
ja
sbb
mov
cmc
testl
mov
mov
mov
movsl
insl
movsl
add
fs
pop
mov
das
das
xor
inc
insl
mov
shrl
push
push
scas
mov
lods
pop
dec
xchg
and
jl
mov
xorl
sbb
shl
mov
popa
sub
icebp
aam
cmp
push
shll
aam
adc
shll
mov
pop
int
cmpsl
test
or
push
pop
iret
es
faddl
sub
enter
cmp
xor
mov
xor
push
jne
or
repz
and
out
mov
cmp
xor
pop
dec
adc
inc
rol
dec
add
ret
sarb
dec
sbb
je
loope
cli
cmp
stos
add
ds
into
fsubl
xchg
das
xchg
mov
stos
loop
mov
push
sbb
xor
pop
xor
push
std
push
push
xchg
pushf
lods
lods
mov
mov
lss
divb
adc
call
lock
jg
std
adc
inc
jbe
dec
add
data16
add
imul
mov
aaa
push
fmuls
inc
jp
arpl
jb
icebp
mov
push
je
add
scas
out
dec
push
mov
inc
insb
xchg
xor
sub
pushf
iret
je
loop
and
sbb
imul
fcoml
popa
pop
cltd
in
pop
stos
aam
ss
jb
inc
cli
push
ds
jmp
shl
and
out
and
movsl
movsb
jmp
jp
dec
hlt
jmp
mov
or
or
add
inc
or
pop
loopne
inc
fmull
inc
fmul
popa
add
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
xor
sbb
rclb
sbb
out
dec
loope
insl
add
and
daa
popf
imul
jecxz
or
jmp
call
enter
inc
mov
add
inc
mov
adc
inc
push
xchg
adc
scas
mov
rcll
mov
and
dec
and
inc
sub
insb
pop
testl
mov
xorl
test
jae
pop
cltd
loope
add
cltd
xor
xor
jnp
adc
xlat
outsb
mov
cmp
sbb
fwait
sbb
add
pop
stc
ret
xchg
mov
push
fs
sbb
add
and
test
jno
pop
leave
jno
es
cmp
jg
mov
cwtl
data16
and
inc
jg,pn
lcall
dec
lret
call
pop
nop
mov
mov
lcall
sbb
mov
or
inc
mov
mov
or
add
jae
jne
jb
cmp
sub
dec
xchg
imul
add
dec
pop
xlat
ljmp
inc
push
stos
fdivs
sahf
mov
push
aad
pop
inc
xor
mov
sahf
sbb
je
add
or
inc
lret
and
or
pusha
js
in
xchg
sub
add
pop
sbb
mul
popa
popl
dec
fistps
imul
stos
add
les
pop
push
adc
scas
mov
out
adc
mov
cmpsb
stos
lret
pop
push
mov
and
sub
stc
stos
push
das
hlt
imul
pop
pushf
rorb
jns
sbb
scas
inc
negl
fbld
mov
stc
xor
imul
aam
or
ret
xchg
testb
test
or
or
xchg
popa
xor
lret
jg
add
cld
pop
cmp
testl
cld
sbb
inc
push
adc
shlb
popa
insb
adc
lret
jae
pop
sub
xor
dec
adc
les
mov
aaa
cmp
adc
dec
movsl
mov
mov
pushf
xorl
xlat
out
int
mov
push
fsubp
cmpsb
mov
sar
mov
mov
iret
leave
inc
scas
fsubr
lods
jle
into
dec
adc
ss
inc
xor
roll
ds
sub
test
sub
and
js
add
pusha
pop
rorb
sub
cmp
icebp
xor
and
addr16
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
and
std
mov
sbb
cmpl
mov
into
pop
shrb
ds
movl
jmp
movsb
les
mov
pop
pushf
movsl
xor
fidivs
insb
lret
fimull
cmpsb
cwtl
aaa
leave
cmp
and
test
sbb
lret
inc
or
add
jge
inc
cs
popa
ret
jmp
int3
cmp
lcall
lea
xchg
cs
lea
ret
cmpl
push
daa
xchg
xchg
roll
xor
cld
pop
sbb
or
rolb
lds
or
or
scas
push
sbb
enter
test
pop
in
ret
inc
in
in
jne
xchg
push
pop
lahf
cwtl
pushf
mov
inc
or
cmp
addr16
dec
dec
mov
int3
inc
push
idivb
call
int3
pop
push
arpl
xorl
jmp
test
jae
scas
xchg
stc
enter
jge
femms
or
sbb
ss
mov
fldcw
pop
aas
xor
ljmp
ss
cmpsl
xorps
cmp
aas
pop
outsl
jg
mov
or
adc
out
jle
or
push
push
and
addb
mov
ljmp
outsl
inc
outsl
lds
fadds
cmp
outsl
cmp
ljmp
pop
push
xor
pop
data16
repz
sbb
aad
and
xchg
pop
adc
xor
inc
pop
repz
push
cs
dec
mov
cmpsl
xchg
sbb
into
lcall
sub
mov
repz
xor
addl
or
push
pop
and
aaa
xor
xchg
shr
ja
mov
dec
or
mov
adc
cs
or
insb
xchg
dec
lods
inc
fldl
or
dec
aad
outsl
out
out
lods
mov
push
mov
and
or
loope
sarl
mul
cmpsl
cmpl
inc
pop
test
sbb
mov
roll
cmp
gs
shl
enter
add
lahf
push
lcall
or
dec
jg
push
loop
fdivs
fildl
pop
mov
pop
mov
or
or
bound
inc
test
jnp
jecxz
hlt
test
or
in
adc
sbb
mov
add
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
push
popa
jo
mov
sbb
adc
sbb
sub
das
mov
push
fsubrs
lret
loope
adc
in
sbb
add
stc
mov
push
int3
inc
daa
pop
mov
xchg
pop
mov
pushf
rcrb
dec
ljmp
and
lret
sbb
dec
ljmp
add
testl
jbe
push
nop
lods
pop
loop
mov
js
sbb
inc
mov
rcl
in
inc
xor
ljmp
lds
je
in
adc
inc
mov
aam
lcall
xchg
sbb
sub
mov
aaa
iret
gs
push
xchg
mov
roll
testl
iret
xchg
and
cmp
and
mov
movsl
repnz
add
and
lods
es
inc
inc
lret
jl
ret
push
dec
pop
jmp
or
cwtl
icebp
sub
and
ljmp
std
aam
push
xchg
sub
cmp
addr16
aaa
inc
sub
lret
imul
xchg
pop
imul
in
out
loop
xchg
and
push
repz
call
jns
stos
repz
dec
pop
pusha
lds
in
add
xlat
rclb
pavgb
add
add
loopne
inc
mov
mov
filds
push
aas
out
out
sarl
sub
cmp
shlb
jo
pop
inc
fucomi
scas
push
sbb
call
jb
mov
dec
push
jp
inc
and
ret
loope
or
insb
push
andl
jb
outsl
sbb
sahf
push
arpl
out
dec
mov
pop
jl
jnp
jno
iret
les
fsubs
xchg
sub
inc
subb
xor
inc
sahf
dec
dec
push
and
sub
or
fcmovnb
leave
test
jns
ret
adc
nop
jge
sbb
mov
gs
jmp
xor
sbb
push
cmp
into
or
aas
imul
js
addr16
lret
add
push
stc
lret
jge
or
xor
add
push
arpl
ds
ja
dec
aam
or
xlat
pushf
in
mov
addr16
pop
pop
cmp
call
aas
andl
push
dec
loop
sarl
fmull
xor
mov
mov
fsubrs
lods
dec
leave
cmpsl
mov
or
lcall
mov
mov
inc
lcall
imulb
scas
sbb
rclb
sbb
or
sub
xchg
into
daa
loopne
imul
cltd
add
mov
fmul
ja
sub
into
xor
add
cmp
pusha
es
pop
jb
mov
hlt
call
stc
xor
leave
push
xor
rorl
or
and
mov
daa
subl
mov
and
ljmp
gs
insl
out
add
lcall
aam
mov
cmpsl
jecxz
shlb
daa
jle
sub
call
inc
and
sbb
out
push
sbb
pop
es
lods
add
stos
rcll
jnp
out
add
lds
xchg
dec
arpl
sub
repnz
sbb
jno
stos
mov
js
iret
lock
int3
sub
testl
pusha
mov
cmp
jmp
insb
inc
inc
pop
fildl
ja
xor
clc
in
adc
hlt
in
sbb
sbb
mov
aaa
in
lods
enter
hlt
xchg
insb
js
push
ret
in
aam
fwait
fwait
daa
inc
xchg
add
sbb
sub
adc
ficoml
sub
in
in
push
psrlw
out
outsl
jp
scas
jae
shr
cs
jb
cmp
cmp
aaa
cmc
gs
pop
imul
sub
pop
test
xor
mov
xor
in
xor
inc
popf
and
dec
fimuls
sbb
mov
mov
loop
jno
xchg
jae
outsb
and
cltd
insl
adc
add
push
xor
mov
loop
dec
push
xor
jne
pushf
out
add
push
push
cli
pop
in
push
inc
push
xlat
or
test
push
xchg
and
aad
out
mov
rolb
out
xchg
arpl
push
jle
adc
lods
cmp
add
into
fstpt
insl
jle
pop
dec
xchg
mov
or
insl
or
iret
scas
sub
daa
lcall
adc
arpl
mov
outsb
xor
inc
ret
and
adc
or
and
daa
mov
sub
jno
in
mov
inc
loope
insb
mov
lea
pop
ds
out
jno
jbe
stos
and
imul
add
xor
insb
clc
ljmp
cwtl
jno
mov
in
mov
sub
xor
shrb
fs
je
cmpsl
stc
push
and
jmp
cmp
mov
pop
add
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
cmpsl
pop
stos
sub
sbb
popa
and
arpl
js
cli
aas
push
cld
clc
mov
into
popa
repnz
inc
add
sub
xchg
shll
push
mov
jno
scas
mov
xor
orl
sub
lods
add
js
mov
es
pushf
out
pop
push
aas
nop
aaa
dec
mov
mov
es
aas
stc
add
push
jae
lret
xchg
sti
cmp
ja
lcall
sbb
inc
fcoml
imul
ja
mov
mov
push
shl
icebp
repnz
cmc
and
or
dec
sbb
lods
cli
cmp
mov
mov
repnz
popa
adc
in
push
ja
xchg
shrl
aas
jge
roll
fwait
mov
cmp
das
mov
enter
mov
int
lret
nopl
mov
fildl
mov
adc
mov
mov
in
inc
scas
lds
xchg
xchg
or
dec
sbb
pop
jae
or
data16
push
xor
push
push
pushf
notl
arpl
lods
mov
add
mov
loopne
or
jae
add
or
xchg
xchg
sbb
cmp
and
pop
push
mov
mov
add
and
adc
ror
dec
cmp
mov
enter
idivl
jne
pop
inc
inc
dec
sbb
push
fmuls
fildl
mov
mov
mov
or
mov
push
imul
pop
xchg
out
jge
arpl
sbb
mov
adc
push
jne
ret
push
shll
ss
or
idiv
call
or
in
in
pop
jnp
mov
outsl
cmp
es
or
out
lods
subl
push
xor
loope
ljmp
fcmovnbe
dec
push
lock
mov
mov
sbb
lret
fwait
xor
dec
bound
inc
sub
dec
push
push
pop
adcl
imul
sti
cmp
xor
dec
add
add
shrl
dec
add
push
push
push
fs
dec
xor
fnsave
inc
js
mov
jecxz
int
sub
dec
cmp
sti
push
in
ja
daa
out
daa
sahf
cmp
jno
ss
dec
or
pop
leave
mov
add
fldt
cmp
iret
jbe
out
xchg
xchg
xor
repnz
add
rcrl
mov
dec
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
neg
in
xor
cmpsb
roll
inc
mov
nop
movsl
daa
push
fsubp
loopne
movl
mov
mov
lahf
sub
fs
mov
mov
nop
mov
sbb
xlat
int
sbbb
add
lea
repnz
inc
jne
fisttpl
loop
sarl
pusha
enter
cli
cmp
mov
cmp
mov
nop
or
vphaddbq
pushf
int
inc
sbb
orb
mov
mov
cmp
pop
jbe
mov
jge
inc
push
cli
push
pop
aad
outsb
popf
insl
pop
das
push
sahf
loop
xchg
add
mov
fmul
inc
gs
xor
movsb
mov
and
fadds
xlat
push
dec
sub
push
cmp
push
in
and
push
xchg
ja
jmp
jne
fildl
lret
lods
lret
or
mov
aaa
and
mov
xchg
test
adc
mov
lea
aas
and
cld
lret
push
xor
mov
mov
stos
pop
in
es
out
lods
setae
mulb
pop
sub
repz
dec
sbb
or
mov
mov
inc
test
mov
jae
push
jg
outsb
jnp
cmc
xor
add
xchg
movsb
or
adc
cltd
mov
scas
push
mov
jnp
inc
sbb
out
inc
add
dec
cwtl
adc
pop
call
mov
lret
mov
lods
dec
mov
inc
jg
xor
jae
inc
add
jecxz
jg
aaa
jp
adc
sti
xchg
or
test
pop
orb
jmp
cltd
aas
jmp
cmpsl
inc
xchg
cmc
add
push
clc
pop
add
out
mov
push
stc
or
or
add
std
sub
shlb
je
out
inc
rcr
test
sbb
mov
add
in
inc
and
ret
mov
dec
adc
pop
out
sub
idivl
int3
dec
inc
pushf
in
inc
jmp
mov
data16
jp
bound
rolb
jno
mov
int
sub
sbb
mov
es
ret
fs
lea
mov
imul
lds
push
mov
ret
imul
dec
rcll
stos
ficompl
movsb
cld
pop
inc
stos
fstpt
or
repz
mov
pop
sub
or
lret
jg
lret
test
jmp
shll
inc
test
inc
in
mov
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
jle
sahf
sbb
mov
inc
xor
in
mov
data16
jnp
cmp
and
out
subl
fbstp
cmpsb
add
sbb
in
or
aad
add
mov
jne
xor
xchg
cmpsb
jmp
push
not
enter
shlb
xor
bound
lahf
add
push
add
in
lods
popa
push
stos
xchg
out
ja
sbb
adc
andb
popf
aas
xor
pop
repnz
ds
es
cmp
pop
div
inc
fs
mov
sub
pop
sbb
add
sbb
adc
adc
ret
scas
lds
sbb
aad
push
xor
xchg
sahf
xchg
rorb
dec
jb
gs
fisttpll
popf
mov
ss
jae
inc
ds
jb
pusha
cmp
das
mov
or
addr16
loope
or
or
lock
popf
addr16
out
sub
popf
call
lock
sub
or
fldt
mov
daa
out
rcl
int3
pop
jl
adc
loope
cmp
adc
insb
int3
cmp
insb
or
dec
je
or
mov
or
addr16
mov
jno
xor
mov
daa
out
or
cli
stos
xor
pop
push
xor
jns
jp
scas
xchg
push
call
xchg
mov
mul
enter
repz
jp
jno
enter
scas
xchg
movsb
insl
sub
shll
data16
inc
and
nop
clc
incb
adc
repz
pop
mov
push
xchg
mov
lahf
push
lods
nop
jmp
mov
js
movsb
movsb
ffree
enter
int
inc
or
sbb
aaa
mov
mov
call
mov
cmpsl
push
fwait
outsb
dec
popa
xor
push
jnp
mov
repnz
lods
loope
or
imul
pop
jns
jb
inc
sub
movsb
out
mov
adc
pop
push
cmc
sbb
icebp
in
jo
push
ret
cmp
jle
repz
mov
or
xchg
or
mov
xor
leave
mov
lods
and
and
dec
mov
push
jp
push
adc
movsb
repnz
sub
xchg
inc
into
or
cltd
test
and
mov
lods
les
mov
add
lds
ss
scas
jle
lods
mov
cmp
push
mov
stos
push
push
ss
push
or
out
popa
cmp
or
std
push
pusha
sub
mov
cmp
add
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
sbb
sbb
adc
sbb
es
repz
pop
pmuludq
lretw
mov
sub
xor
popa
jg
mov
add
std
push
mov
add
xchg
shlb
fcomp
mov
or
outsb
test
jmp
and
lds
lret
ljmp
fadds
pop
sbb
push
daa
je
dec
cmpsl
or
cmp
rcll
fidivrl
or
ss
stos
fisttpll
ljmp
repnz
das
xor
xchg
and
push
or
dec
cmpsb
jbe
cmc
bound
test
ja
xor
and
or
pop
xchg
and
sti
mov
push
adc
jmp
jge
dec
jl
sbb
fistpll
fcomi
adc
jo
fs
stos
lret
popa
xchg
sub
sahf
adc
bound
adc
sahf
mov
adc
jg
icebp
iret
pop
sbb
leave
jbe
mov
movb
mov
sub
ljmp
adc
je
int3
pop
fcompl
adc
jns
mov
pop
cmpsb
pop
xchg
jecxz
inc
nop
inc
sbb
imul
test
icebp
addr16
decb
in
test
out
mov
lret
mov
push
int
dec
in
sbb
andl
lahf
data16
call
mov
inc
push
inc
mov
js
pop
or
sub
push
movsl
ret
sarb
fs
jecxz
pop
xor
insb
mov
mov
insw
repnz
fistpl
xchg
mov
push
xlat
gs
cmc
test
push
add
imul
and
inc
pop
rcrb
js
push
enter
mov
cmpb
inc
dec
out
lods
movsb
push
mov
xchg
jne
pop
jne
jecxz,pt
rcrb
dec
subl
dec
clc
dec
mov
fiaddl
add
dec
cmp
cmp
jge
shl
push
or
popf
mov
nop
imul
cmp
adc
sahf
push
inc
or
cld
cmpsl
mov
lret
jns
stos
popl
pop
ljmp
cmpb
pop
adc
ja
lea
lret
push
hlt
add
push
leave
out
ss
push
imul
adc
sub
inc
ljmp
fistl
mov
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
sub
xor
mov
xchg
jo
pop
out
push
call
dec
add
cmc
lds
cmp
test
pop
subb
lret
fwait
lahf
pop
mov
ds
jo
mov
cmp
lahf
mov
jmp
mov
out
and
mov
pop
jno
insb
pop
dec
pushf
leave
dec
inc
mov
mov
jle
push
into
repz
loop
xor
mov
adc
aaa
cmp
bound
ret
mov
dec
cmp
je
fists
sub
imul
sbb
jg
jns
adc
scas
dec
pushf
inc
lods
fdivrp
pop
out
xor
push
out
lcall
jno
fwait
repz
filds
jp
in
es
in
push
hlt
inc
mov
cmp
es
loopne
cmpsb
out
repnz
ja
adc
add
pop
inc
and
bound
in
jl
xchg
je
data16
movsb
mov
push
pop
pop
inc
ds
push
push
mov
jno
add
adc
and
adc
push
ret
inc
add
add
jne
dec
xchg
insl
push
mov
sub
mov
fs
or
pop
cld
test
lock
stc
inc
xchg
pop
dec
movsb
mov
sbb
int3
out
mov
jecxz,pn
add
je
jg
xor
sub
xorb
pushf
out
out
inc
cli
and
pop
cmpsl
test
jmp
mov
dec
jnp
sub
mov
sbb
movsb
push
cmc
xor
lret
xor
xchg
mov
mov
enter
mov
cmp
adc
cmp
lods
data16
enter
sbb
stos
lock
pop
aaa
std
int3
lcall
mov
sub
in
mov
outsb
cmp
push
cli
xor
cli
test
in
mov
pop
lods
pop
sub
js
ja
movsb
mov
cmc
jecxz
inc
dec
dec
push
and
ja
lea
pop
fisttpll
rorl
push
and
xor
jo
je
mov
shl
rcl
or
fdivrs
pop
sbb
jnp
movsl
scas
or
dec
stc
cmp
scas
xchg
jae
inc
leave
in
push
and
int3
sbb
xchg
cmp
ret
add
push
stc
xor
inc
mov
push
add
and
inc
cmp
test
je
xor
mov
push
sbb
testb
dec
sub
sub
adc
dec
sub
sti
in
leave
adc
xchg
inc
pop
rcll
es
jl
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
and
sbb
lcall
sub
int3
inc
add
hlt
mov
int3
xchg
pop
outsb
repz
movsb
xor
pop
outsl
jge
adc
int
out
lret
rcrl
mov
test
add
out
insl
daa
inc
cmp
enter
jecxz
inc
mov
out
cld
movsl
xor
push
jmp
xchg
sub
out
cltd
xor
out
jo
push
sub
mov
mov
push
outsb
movsl
aad
mov
or
dec
fcmovu
int3
push
sbb
cs
bnd
inc
hlt
xor
shlb
push
sub
pop
or
pop
sub
xchg
xchg
push
int
lret
jae
sbb
fimuls
pop
add
pop
xor
repz
sbb
stos
and
es
data16
loopne
sbb
loopne
jbe
mov
mov
int3
inc
jmp
xchg
icebp
es
or
push
mov
mov
sbb
jle
and
data16
sbb
das
aaa
notl
push
push
xchg
inc
push
notl
pop
sbb
in
movntq
sub
shll
cmpsb
jae
and
and
mov
push
ja
in
shl
jg
ret
mov
xchg
and
cwtl
mov
dec
das
cmp
loop
repnz
out
aad
jp
std
sbb
mov
int
mov
loop
rorb
popa
mov
dec
pop
dec
jge
scas
into
test
fwait
lcall
insl
cmp
rolb
roll
push
nop
icebp
push
cmc
daa
mov
inc
arpl
mov
ss
cmp
sub
inc
imul
xor
arpl
dec
mov
lcall
insb
mov
stos
sbb
out
loopne
jg
stc
outsl
add
and
js
mov
fadds
dec
xchg
std
test
jmp
push
ret
in
jbe
mov
ret
fidivl
sbb
cmpb
test
jle
push
mov
mulb
inc
cmc
cli
outsb
call
sbb
ds
jae
push
push
addr16
enter
rol
outsb
in
adc
mov
mov
cmp
es
lcall
adc
lds
int3
mul
push
mov
mov
push
add
inc
push
jmp
loop
test
cwtl
lcall
dec
call
sbb
lcall
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
pusha
sub
and
cmp
cmp
dec
sarb
mov
adcb
cld
xlat
insl
dec
lret
push
daa
test
xchg
stos
sbb
push
leave
stos
inc
subb
stc
and
lahf
push
ljmpw
imul
frstor
adc
repz
jmp
xchg
cltd
mov
int3
or
lahf
shl
movsb
adc
inc
lcall
cmp
pop
sbb
sbb
dec
pop
inc
jb,pt
push
in
pop
xor
in
add
test
mov
push
mov
cmp
stos
mov
data16
cld
or
addl
cmpsb
in
inc
inc
mov
psrld
lods
add
jo
icebp
test
inc
fs
enter
mov
jne
xchg
test
push
adc
mov
cmpsl
in
sub
and
push
loope
cli
sbb
aad
dec
out
scas
xlat
nop
xchg
dec
dec
push
inc
aad
xchg
xorb
inc
xlat
mov
rcll
inc
mov
rorl
fsubs
negl
mov
inc
add
stc
sbb
mov
int
nop
out
out
mov
ds
pop
xchg
add
repnz
rolb
inc
cmp
push
or
rcr
and
incl
das
jp
inc
fldcw
jle
int3
adc
mov
mov
and
mov
shl
mov
movsl
sahf
xor
adc
inc
aam
and
mov
pop
xchg
sub
cltd
mov
popa
or
lea
setne
dec
sub
mov
push
gs
stos
push
movsb
dec
dec
inc
push
rolb
mov
sti
mov
cltd
or
ja
scas
pop
fimuls
in
mov
sub
repnz
shr
int
aam
mov
test
enter
xchg
dec
adc
test
in
sub
insl
adc
push
inc
movsl
or
and
adc
xchg
add
sahf
cmp
pusha
test
adc
out
lret
xlat
popl
popf
mov
cmp
fucomp
dec
cwtl
lcall
cmp
sub
in
aas
fnsave
dec
mov
stos
xchg
xchg
cld
lahf
fucom
xor
je
jp
pop
mov
adc
cmpsl
clc
xchg
mov
pop
push
jl
divb
push
es
sbb
sbb
jnp
mov
aaa
jl
xchg
add
mov
es
dec
adc
lock
imul
out
loop
pop
xor
xchg
sbb
mov
jge
movl
mov
mov
sub
jmp
test
mov
push
pushf
mov
sbb
dec
xor
adc
dec
dec
jge
loop
cmp
js
mov
fdivs
add
sbb
pand
push
pop
dec
pop
sbb
mov
jmp
mov
jle
mov
mov
pop
mov
fistpll
cmpsb
cld
dec
inc
sbb
xchg
mov
cmp
fisubl
mov
push
negl
rorb
dec
mov
push
lret
out
je
movsl
cmp
pop
orl
jno
loop
add
bound
insl
cltd
cwtl
mov
shrb
sti
sub
js
jg
insl
xor
mov
mov
mov
inc
mov
add
sub
xor
shrl
aam
ss
repz
push
das
sub
cmp
sbb
rcrb
sbb
rcrl
mov
add
jno
shr
popa
mov
pop
mov
xor
mov
fildll
mov
sub
std
jl
int3
mov
mov
clc
cli
mov
cmp
insb
sti
mov
sbb
jge
or
fsubl
dec
clc
inc
mov
imul
into
jo
add
lret
in
inc
lods
add
arpl
jg
push
in
jnp
dec
in
fstpt
sub
xorb
pop
push
cmp
cmp
repz
mov
mov
cmp
jle
jb
hlt
mov
sbb
fsubl
sub
ret
in
outsl
sbb
ss
or
jnp
std
js
pop
jb
cmpsb
jecxz
xchg
neg
xor
notl
pop
lea
es
in
pushf
fmull
mov
cs
mov
icebp
arpl
ret
addr16
push
pop
xor
aaa
dec
push
test
movsb
gs
xchg
jge
pop
ss
sar
pushf
leave
aam
or
repz
not
pop
xor
mov
jl
aad
cmp
out
pop
repz
add
xor
cld
mov
pop
mov
jle
lock
jl
aas
mov
pop
mov
addr16
insb
add
or
sub
sti
stos
lcall
mov
adc
cmp
jbe
sub
stos
mov
jb
push
push
in
sti
scas
out
rorb
cld
in
mov
mov
imul
push
arpl
lcall
or
fildll
into
mov
testl
rorl
fs
dec
pop
mov
subl
into
xchg
xchg
clc
or
inc
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
leave
jg
out
jl
sbb
sbb
xor
sbb
and
adc
or
jp
fistps
movsl
es
cwtl
xor
and
cmp
bound
inc
add
or
xchg
sub
push
movsl
fildl
jl
add
jns
loope
popf
xchg
fs
test
dec
in
lea
push
lret
pushf
das
scas
pop
mov
test
lock
aam
lods
cmc
cltd
mov
cmp
dec
std
push
dec
xchg
lds
sub
jnp
loopne
js
negb
or
faddl
or
xchg
adc
jne
rcl
shl
sbbl
pop
cli
xchg
cli
imull
mov
mov
add
cmc
push
adc
idiv
cmp
xorps
push
cmp
hlt
add
xor
je
or
push
fsubp
xchg
dec
test
aad
cs
icebp
mov
dec
dec
mov
push
mov
loopne
mov
ja
push
dec
repz
shll
sbb
fiaddl
rcl
push
fsubs
fcmovne
inc
and
jecxz
ss
and
out
inc
ja
aas
xlat
or
xchg
nop
or
mov
xor
lods
cmp
subl
mov
mov
bound
dec
daa
inc
sub
imulb
xorb
cmp
shl
pop
and
bound
mov
rclb
out
inc
pop
xchg
lret
lock
xchg
in
jmp
mov
js
lods
fdivl
add
inc
sub
lahf
jo
cmp
push
xchg
jno
js
inc
ljmp
fwait
shlb
push
push
or
addr16
cmp
ss
xor
mov
orb
jp
adcb
jne
mov
xorl
sub
stc
jbe
adc
xorl
and
jns,pn
inc
cwtl
cmp
sbb
outsb
fs
clc
xor
mov
add
add
and
mov
ret
push
adc
pop
xor
mov
in
daa
test
cltd
mov
pop
or
test
cmpsl
cwtl
stos
pop
and
push
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
mov
sbb
sbb
mov
cmp
sub
in
xor
repnz
mov
sbb
jb
jmp
movsb
adcl
lea
add
sub
movsl
sbb
js
jns
scas
pop
and
adc
jo
sbb
ja
out
jnp
cmp
rclb
lods
in
push
mov
jg
inc
cwtl
sti
lret
scas
sbb
lds
inc
out
lahf
xchg
cmp
ficomps
xchg
insb
out
repnz
jg
adc
sbb
pop
mov
cmp
jo
xchg
loop
xchg
jp
sbb
or
fbld
xchg
adc
push
cmc
cwtl
in
jg
push
mov
inc
adc
cmpsl
pop
xor
jnp
xor
mov
mov
jmp
jle
dec
mov
xor
arpl
or
test
xor
sub
mov
sarl
jno
xor
xor
lods
shll
call
and
movsb
adc
arpl
sti
or
xchg
sub
daa
push
xlat
xor
xchg
das
outsl
xchg
lret
pop
rorb
in
inc
es
outsl
cmpsb
jne
xor
pop
outsl
mov
jle
sbb
out
push
enter
pop
mov
add
and
ficompl
cmp
xchg
push
or
or
mov
imul
out
hlt
addb
add
push
xchg
dec
rorl
insl
std
adcb
call
mull
or
mov
in
cmp
dec
lret
mov
gs
ja
pop
jmp
or
aam
in
rcrl
cltd
and
clc
sub
in
je
mov
cli
push
pop
sbb
mov
add
mov
sarb
ret
loop
xor
mov
imul
push
ss
add
fsubr
clc
jl
insl
rcll
imul
xor
call
xchg
pushf
data16
cmp
into
fadd
insb
cli
out
shr
lods
push
mov
mov
mov
cmp
inc
outsl
fisubl
cmpsb
bound
inc
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
jmp
sahf
je
sbb
sbb
xor
gs
and
mov
test
xchg
dec
jmp
ss
and
mov
add
addr16
inc
cltd
and
xchg
inc
mov
repz
ja
lcall
xor
lret
movsb
arpl
imul
sbb
das
lret
mov
flds
fstl
in
stos
add
std
mov
je
out
lea
pop
jo
adc
xchg
cmp
popa
add
inc
jmp
inc
bound
xchg
sub
and
pop
shrl
add
sub
mov
mov
jae
scas
jmp
push
sbb
jmp
icebp
iret
ja
popa
aam
shrl
jno
mov
mov
loopne
jmp
pusha
mov
push
mov
std
sti
xor
xchg
sbb
cwtl
icebp
stos
inc
add
mov
add
jnp
and
test
imulb
lcall
in
sbb
add
adc
jle
push
int3
xchg
popf
decb
xchg
jmp
movsl
int3
add
xchg
fwait
shlb
lea
ljmp
shl
stos
fdivl
in
aaa
sub
jp
cmp
test
inc
cli
rorb
xlat
loop
imull
xchg
push
out
mov
push
and
xchg
and
dec
inc
dec
jp
test
jo
mov
or
mov
pusha
pop
cmpsl
fnstsw
push
jnp
les
mov
pop
inc
xchg
outsl
ja
les
lret
mov
in
add
pusha
lods
add
cs
pushf
pop
in
add
push
shl
inc
sbb
push
jbe
cwtl
cmp
mov
push
les
fwait
add
push
pushl
insl
outsb
cmpsw
xchg
fs
adc
addr16
data16
imul
xchg
mov
lds
dec
adcb
ss
mov
adc
xorl
sti
daa
mov
repz
in
and
test
call
xlat
xor
xor
sbb
pop
jb
and
push
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
cmpsb
mov
loopne
sbb
scas
sub
fcomi
push
jecxz
stos
mov
mov
pop
bound
dec
nop
movsl
or
iret
and
mov
mov
or
shll
mov
adc
cli
stos
xchg
cmp
mov
fcoml
ss
les
xor
fwait
mov
shll
dec
mov
test
in
push
or
mov
inc
jg
nop
xchg
push
in
push
and
popa
test
mov
add
mov
mov
cmp
int
outsb
push
movsb
into
shr
push
fldcw
cli
in
push
pop
data16
fadds
mov
xor
sbb
xchg
loope
adc
repnz
test
inc
sbb
daa
sub
clc
das
jge
push
cmpsl
loop
mov
mov
or
gs
es
cmpsb
mov
ss
hlt
and
sub
pop
or
fstps
mov
out
mov
pop
adc
roll
add
lds
push
inc
test
jecxz
xchg
jle
push
loopne
ss
xlat
adc
pop
push
mov
and
push
jg
or
negl
ja
scas
push
and
or
mov
sub
int
cmpsb
xchg
andl
int3
sub
in
lahf
add
mov
sbbl
mov
shr
add
in
negl
std
fisubl
jno
xor
insl
call
lea
dec
aas
push
jge
dec
ss
loopne,pn
or
dec
fisubrs
push
push
icebp
xchg
xor
icebp
adc
lods
inc
jecxz
inc
push
cmpsl
pushf
imul
xlat
das
add
clc
mov
nop
mov
hlt
push
adc
or
jbe
pushf
and
ja
nop
xchg
and
stos
xor
sub
test
inc
shlb
arpl
rcr
and
in
xor
push
mov
outsl
mov
out
faddl
xchg
je
jg
cli
pop
mov
dec
or
stos
clc
mov
rclb
fwait
pop
adc
xor
mov
push
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
aas
mov
jno
sbb
xor
mov
sbb
mulb
xchg
sbbb
push
jmp
iret
pop
add
or
cltd
notb
xor
xchg
popa
mov
cmc
xor
mov
mov
or
xchg
jecxz
mov
outsl
adc
jbe
jb
dec
movsl
push
push
insl
fldt
test
test
notb
add
lods
test
inc
xlat
mov
cmpsl
mov
inc
test
mov
xchg
pop
stos
add
pop
lock
out
mov
mov
xchg
push
stos
es
mov
pop
cmp
cwtl
lret
or
shrb
insb
jl
inc
lods
decb
test
call
xchg
fdiv
mulb
adc
jmp
pop
cmp
rolb
js
xchg
outsl
add
xor
inc
loop
inc
call
push
into
xchg
mov
jno
lahf
jo
jne
xor
fnstenv
int3
cwtl
mov
jo
and
fdiv
push
iret
fadds
outsl
cmp
cld
repz
mov
mov
cmpsb
call
xor
mov
xchg
or
or
and
dec
clc
sub
data16
daa
mov
pop
test
hlt
jae
and
add
int3
scas
lea
dec
cltd
mov
pop
ret
adc
cmp
les
mov
icebp
add
iret
cmpsl
inc
pop
cmp
pop
jae
xor
aam
mov
mov
xlat
fstpt
ficoms
push
inc
rorl
int
stc
cmpl
pop
ja
add
and
add
test
ja
bound
cwtl
sbb
push
hlt
dec
cmp
cmp
push
out
mov
add
call
mov
inc
es
roll
scas
test
xor
stos
xor
inc
inc
push
icebp
add
dec
xor
scas
stos
daa
jecxz
mov
out
mov
js
or
jg
cmpsb
popa
xor
lcall
cli
imul
test
stos
mov
dec
roll
or
clc
ficompl
jmp
xor
jne
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
xor
movsl
mov
jno
sbb
push
outsb
inc
loope
pop
inc
aad
mov
push
nop
std
rol
or
sbb
loop
mov
addl
jp
je
mov
jbe
push
cltd
xchg
arpl
aad
cmp
out
or
push
adc
mov
insb
fistpl
rorl
sub
enter
negl
push
sbb
and
bound
jmp
mov
inc
push
pusha
push
cmp
fbld
sbb
and
jmp
mov
add
in
inc
xchg
pop
scas
cld
push
mov
lret
pusha
lcall
out
mov
pop
mov
ljmp
loope
cmc
fildll
jmp
test
xchg
negb
and
je
mov
std
cld
cltd
push
jo
loope
loop
stc
rcrb
mov
sti
add
out
pop
icebp
sub
xchg
dec
int
imul
int3
mov
call
add
push
dec
jnp
mov
sbb
mov
popa
sbb
mov
xchg
adc
pop
xor
cmp
aad
adc
dec
sub
ret
cmp
sbb
sbb
mov
ja
outsl
add
inc
push
push
clc
cmpsl
fisubrs
cmpl
and
jle
addr16
and
cmp
gs
cmp
xchg
xlat
sbb
pop
cmpsl
jmp
out
out
and
mov
adc
js
aad
adc
loopne
xor
test
outsl
push
dec
mov
push
mov
cmp
push
test
push
dec
ds
mov
shrl
lcall
inc
sbbl
and
std
sbb
cltd
js
divb
fcomi
ja,pt
fwait
mov
mov
adc
clc
xchg
mov
xor
push
maskmovq
imull
scas
outsl
stos
and
pop
mov
int3
andl
xchg
and
ficoms
xor
mov
inc
jae
and
add
push
rclb
in
xor
jp
pop
std
test
push
roll
cld
in
inc
adc
dec
adc
lods
fidivs
add
jmp
pop
ds
pop
jno
pop
lods
sti
cmpsl
and
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
mov
pusha
sbb
jno
sbb
pop
xchg
xchg
sub
pop
std
outsb
fwait
mov
fiadds
lods
jne
mov
negb
stc
sbb
out
sbb
lock
xchg
sbb
sbb
faddl
outsb
lahf
in
mov
jmp
into
rcrl
push
mov
bnd
lock
mov
hlt
push
cmpb
ret
adc
lods
mov
xchg
sub
pop
hlt
mov
and
stos
test
pop
faddp
jbe
je
cs
pop
dec
mov
mov
std
clc
cmp
cmc
mov
gs
les
test
mov
xlat
pop
xorb
je
loop
push
insl
jo
mov
loopnew
movsl
movsb
dec
and
mov
dec
movsl
jo
xor
inc
mov
or
pop
push
or
sar
test
imul
sbb
notl
sbb
inc
js
pusha
add
sbb
adc
stos
mov
jno
out
test
sub
mov
jg
mov
jns
dec
jp
xor
ret
je
scas
shll
fcmovnu
clc
repz
ficoms
aad
cld
filds
imul
in
pushf
decl
sarb
mov
nop
test
sti
dec
popl
insb
inc
rol
cli
repz
or
xor
mov
sbb
lds
xchg
test
and
int
test
aas
rclb
xor
mov
xor
mov
gs
add
adc
loop
pop
enter
or
inc
mov
pop
int
iret
movsb
shl
popf
movsl
pop
ror
cwtl
mov
mov
orl
lods
movsb
inc
cmc
pop
test
or
xor
insl
in
loopne
negb
int
sbb
mov
adc
ds
scas
xchg
cmp
jecxz
iret
outsl
or
pop
dec
jp
sti
cli
mov
das
test
loopne
lods
in
mul
stos
jmp
push
jne
das
pop
ret
lret
and
negl
mov
inc
pushf
pop
sub
xchg
xchg
icebp
add
mov
mov
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
sub
sbb
sbb
dec
mov
ss
lods
and
imul
adc
xor
shl
faddl
mov
stos
movsl
push
pop
cmp
mov
cwtl
mov
cmpsb
and
cmp
push
data16
xchg
pop
xchg
sub
movsb
xor
xchg
inc
pop
lds
pushf
pop
pop
imul
fisubrs
sub
push
sti
in
xchg
lahf
js
mov
push
or
testb
cs
push
pusha
jmp
dec
pop
data16
or
scas
leave
jmp
or
clc
xor
adc
out
dec
sub
xchg
and
pop
add
adc
xor
sub
xor
movsl
clc
adc
xchg
out
sbb
loope
xor
xchg
pop
adc
hlt
add
ds
inc
into
test
aam
mov
sbb
loope
xchg
pop
inc
test
lods
cwtl
btcl
pop
jbe
adc
push
cmp
js
xchg
xchg
mov
insb
push
mov
push
adc
lret
hlt
popf
subl
xor
dec
mov
dec
imul
or
lahf
loop
push
pop
ja
push
add
mov
sbb
mov
andb
in
leave
sahf
icebp
mov
lcall
in
daa
push
push
ljmp
mov
jge
mov
mov
andl
cmpb
loope
add
and
mov
adc
push
shl
fstpl
mov
shl
nop
or
cmp
jecxz
aaa
stos
cmp
sub
daa
dec
imul
fwait
push
dec
jb
sarl
clc
sbb
nop
cmp
push
mov
mov
lods
clc
mov
add
dec
in
pop
scas
mov
out
ljmp
sbb
mov
dec
push
icebp
jne
outsb
fwait
adc
and
sub
mov
shll
lods
gs
lods
je
movsb
inc
test
push
daa
or
xor
and
fldenv
mov
mov
jl
pop
mov
adc
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
push
xchg
es
inc
cmp
mov
mov
iret
sbb
fldt
bound
or
cli
nop
jb
jae
dec
cmp
and
lds
aas
lock
addb
inc
enter
jns
adc
add
cmp
pop
aam
pop
dec
lods
cli
in
pop
movsl
push
xchg
inc
sub
popa
dec
and
inc
or
xchg
test
sub
mov
pop
sbb
adc
cs
ss
cmp
or
in
push
stos
sbb
cmp
mov
rorl
iret
sub
pop
test
jns,pn
jg
lock
mov
rolb
sub
bound
xchg
push
lcall
popa
into
xor
sub
sub
mov
in
pop
ljmp
mov
sbb
stos
clc
push
mov
and
dec
ds
mov
and
xor
push
call
cmc
xor
dec
push
out
lods
scas
loope
push
out
int3
sahf
arpl
push
xor
shll
jp
mov
jmp
push
orl
mov
sbb
xchg
xlat
or
ds
out
test
adc
sub
mov
cmp
and
loope
mov
aas
inc
adcb
or
loope
cmp
or
mov
add
hlt
push
imul
dec
mov
out
mov
pop
jmp
cmp
mov
rorb
inc
test
aaa
xchg
fwait
cmc
jecxz
jmp
repz
mov
dec
je
es
mov
iret
xor
and
xchg
add
pop
arpl
mov
mov
call
fistps
cmc
add
push
stc
jp
call
shl
or
sub
loope
std
in
pop
outsb
sbb
push
push
mov
jmp
mov
addr16
inc
aad
cmpsl
cli
inc
loope
mov
leave
decl
cmp
xchg
dec
ljmp
cmp
in
fistpl
mov
fisubs
pop
ret
mov
pop
imul
fistps
xorl
popa
xchg
pop
inc
sub
xor
push
inc
insl
out
jb
fimull
sub
in
dec
int3
push
in
jle
popf
cltd
and
cltd
into
push
add
cmp
cs
scas
push
mov
and
jge
arpl
lcall
ljmp
or
aam
and
cmc
ret
dec
xchg
push
mov
push
mov
mov
mov
adc
loopne
jge,pt
dec
pop
pop
add
xor
pop
xor
cmp
std
xor
jnp
jb
aad
mov
jbe
sbb
arpl
cmp
push
sub
cwtl
popa
xlat
lea
cmp
std
pushf
cli
faddl
jecxz
add
fwait
in
shlb
test
jnp
push
fwait
mov
add
mov
jp
mov
mov
shl
push
adc
fucomi
jmp
fwait
xchg
orb
out
mov
dec
mov
les
scas
or
adc
dec
and
out
xor
adc
pushf
cmc
and
mov
adc
xchg
and
sub
or
clc
jge
rolb
fucomp
add
inc
mov
pushf
sahf
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
arpl
or
cmp
or
rorb
cltd
push
mov
cld
pop
aad
add
jp
push
arpl
out
mov
sbb
cmp
add
dec
mov
adc
pusha
fwait
outsl
sbb
bnd
shr
push
int3
inc
pusha
xchg
lods
mov
js
lock
push
lods
mov
jge
outsl
hlt
clc
stc
js
insl
popf
inc
je
pop
adc
bound
push
push
xchg
sub
jmp
mov
or
icebp
test
push
mov
inc
mov
pop
repnz
fstps
jge
and
pop
or
fwait
jp
icebp
sub
jecxz
adc
push
sbb
mov
fisubrl
or
sbb
jg
add
push
cmp
xchg
and
aam
pop
xor
incl
ja
cmpsl
mov
mov
sarb
movsb
lods
xchg
adc
mov
lods
lcall
or
xchg
jg
int
xor
xchg
jp
setno
loope
in
mov
or
popl
fidivl
scas
rcrl
loope
pop
movsb
popf
mov
les
aad
sbbl
es
daa
loope
xchg
adc
loop
cmp
fidivs
push
cwtl
movsl
inc
ljmp
pop
inc
aam
pop
idivl
dec
in
fidivrl
mov
fs
xchg
faddp
lock
lret
xchg
mov
jle
pop
mov
adcl
testb
or
inc
sbb
scas
push
or
pop
mov
loope
lret
int
mov
scas
je
into
imul
xchg
aad
dec
cmp
and
xchg
and
addb
sbb
insl
mov
xor
or
outsl
pop
mov
fistpl
movsb
in
lods
movsl
cmp
xor
mov
bound
xor
cld
xor
fbstp
cmp
adc
sub
sbb
mov
imul
iret
push
lods
sbbl
mov
xlat
lret
mov
repz
inc
xchg
push
mov
mov
fidivrs
sub
mov
dec
xchg
adc
mov
sub
movsb
out
add
stos
mov
mov
jno
dec
imul
and
xor
imul
and
nop
xchg
fldenv
sub
inc
and
adc
push
push
cwtl
add
sub
fdivp
fadd
rcrb
mov
pop
jbe
pop
js
or
jle
sbb
mov
jecxz
test
xchg
out
adc
xchg
adc
icebp
lock
pop
out
and
pusha
jns
std
nop
push
and
jp
push
sti
gs
cld
imul
dec
jnp
scas
loop
add
arpl
aam
pop
cs
sub
push
push
popa
push
loope
and
or
lret
or
aad
lahf
outsl
and
mov
xor
inc
xchg
sbb
and
xor
loope
cmp
popl
lds
pop
cmp
adc
mov
mov
sbb
push
inc
loopne
sub
add
ds
jecxz
lret
sub
and
lret
jge
dec
scas
inc
inc
jns
jns
xorb
pop
popf
xorl
mov
inc
mov
imul
sbb
iret
xchg
inc
mov
push
or
in
and
adcl
add
in
lret
and
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
pop
jle
dec
sbb
stos
adc
sbb
cltd
xor
xchg
jns
das
gs
jae
inc
xchg
inc
icebp
mov
sbb
test
mov
push
ss
adc
pop
jmp
out
adcl
sbb
push
push
push
les
ja
les
int3
sbb
in
xchg
and
jno
fiaddl
xor
rcr
pop
pop
ljmp
xor
mov
sahf
mov
popa
dec
scas
jns
pop
sub
and
push
call
aas
pop
andb
push
jae
pop
or
rcr
adc
test
out
mov
loope
subl
fidivrl
mov
lcall
dec
and
xchg
mov
cmc
push
sbb
out
test
mov
je
add
xchg
xor
enter
jne
mov
or
stos
push
fisubrl
outsl
aaa
jmp
or
rcr
pop
push
adc
xchg
cltd
je
mov
push
fiaddl
mov
fidivrl
jno
mov
jae
std
add
mov
mov
les
or
mov
and
rolb
cmp
int3
mov
roll
cs
push
jmp
bound
xchg
mov
inc
rorb
in
sub
add
sarl
idivl
call
or
xlat
mov
push
adc
push
shlb
mov
iret
mov
std
arpl
daa
lret
mov
or
mov
push
lahf
fs
ja
xchg
sub
push
sbb
imul
sti
add
enter
cs
rcr
pushl
sbb
imul
mov
jl
xor
lret
shrl
repnz
cli
adc
push
dec
adc
insb
sar
das
mov
out
add
gs
nop
dec
mov
std
jmp
dec
orl
and
sub
mov
fidivrl
ja
adc
or
pusha
lahf
mov
es
dec
arpl
xor
ss
jmp
xor
push
ljmp
dec
in
sbb
pop
stc
xchg
inc
push
mov
shrl
jae
iret
lock
sub
je
dec
jno
push
adc
leave
dec
orl
cwtl
inc
inc
scas
nop
jo
xor
test
jne
insb
dec
pop
into
xchg
mov
aam
push
repz
aam
mov
cmc
xchg
fwait
mov
fisubs
sahf
es
dec
sub
ficoms
push
and
dec
outsb
xchg
pop
fisttps
push
aad
jno
or
je
test
mov
dec
mov
lret
repz
adc
mov
in
mov
arpl
xor
outsl
cmp
push
mov
fs
enter
sbb
addr16
popf
insl
mov
inc
fadds
ja
sub
iret
cmp
sbb
pop
loopne
in
pop
mov
pop
mov
cld
sbb
cs
std
iret
xchg
mov
and
dec
cmp
loopne
sarl
add
sub
jnp
shlb
test
rorb
pop
dec
xlat
fnstenv
add
es
adc
dec
xor
lahf
mov
fs
int3
and
push
cmp
push
cwtl
xchg
ret
adc
inc
das
fisubrl
add
cmp
adc
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
jo
inc
sbb
stos
adc
sbb
clc
cs
neg
cmp
mov
mov
jmp
xchg
in
push
cmp
adc
in
jg
mov
xchg
shrb
pop
insl
pop
push
repz
cmpsl
es
loope
push
out
test
rcl
sarl
adc
out
insl
xchg
test
into
adc
mov
push
jmp
test
test
shll
mov
cmp
sbb
pop
ret
addr16
movsb
orb
jnp
repz
cltd
cmp
mov
inc
scas
xor
lret
push
mov
pop
daa
dec
push
clc
aam
call
jns
cmp
mov
push
inc
xchg
bound
filds
mov
xchg
dec
negl
xor
push
add
adc
adc
mov
sub
cld
add
fldcw
pusha
mov
into
cwtl
nop
fstpt
scas
xchg
test
push
jnp
sub
dec
pop
and
sbb
cmpsl
pop
cmp
ljmp
fadd
jg
loope
insb
cmpsb
jb
and
scas
xchg
jmp
pop
jns
test
mov
sub
fsqrt
flds
xchg
idivl
cmp
add
out
lods
jbe
pop
aam
call
lods
in
lock
xor
cmp
mov
adc
pusha
pop
insb
daa
pop
push
aad
sbb
std
mov
pop
xchg
inc
inc
cmpsl
cmpsb
mov
loope
adc
sbb
lea
rcrb
pop
lds
rcll
mov
lds
cmp
inc
and
mov
inc
xor
stos
sub
mov
hlt
xchg
cmc
clc
mov
add
fildll
push
dec
cmp
dec
xchg
inc
loopne
inc
dec
push
jnp
mov
int3
in
in
test
dec
fwait
add
add
sub
fildl
dec
and
shrb
push
ja
call
mov
adc
add
dec
loope
sub
shrb
pop
ret
or
xor
push
aas
jmp
out
je
xchg
movsl
xorl
xor
lahf
push
mov
inc
cmpsl
clc
sbb
mov
fiaddl
dec
loope
addr16
pop
fwait
nop
cmp
stos
rclb
xor
ja
mov
dec
mov
lret
dec
pusha
divl
ret
fisttpll
xchg
daa
pusha
pushf
hlt
lods
adc
cli
es
pushf
mov
sbb
cs
sub
int3
fnstenv
add
lret
sub
leave
mov
xchg
je
arpl
in
cld
jg
push
push
popf
ds
add
icebp
inc
lods
jp
xor
lret
push
sbb
dec
adc
stos
or
sbb
scas
aaa
movsb
lds
xchg
and
mov
insl
sbb
stos
in
push
add
dec
pusha
lods
loop
in
dec
shl
add
cmp
pop
fsubrs
repz
lock
sarl
cmpsl
in
mov
mov
loop
xchg
test
rclb
pop
std
dec
or
cmpsb
jb
call
leave
pushf
dec
inc
insb
dec
sbb
and
jo
mov
into
dec
pushf
xchg
popa
iret
out
mov
jae
and
xchg
mov
mov
push
and
mov
mov
outsb
addr16
sub
int
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
lret
idivl
sbb
stos
adc
sbb
push
mov
and
pop
mov
ja
fs
leave
rcrb
xor
mov
mov
sbb
call
aaa
push
pop
inc
aaa
xchg
sub
out
aad
cld
sub
and
imul
pushf
jge
mov
pop
ret
sbb
out
cld
shlb
lock
out
mov
lcall
inc
sub
cmp
adc
jmp
jno
adc
inc
xchg
and
pop
mov
mov
add
pop
das
and
fidivs
mov
mov
xlat
add
push
ud0
cli
outsb
sub
mov
pop
aad
inc
jb
add
psubusw
jmp
cmp
mov
or
loopne
and
fstl
enter
call
iret
out
mov
sub
ds
mov
adc
test
mov
xlat
push
pop
call
lds
pop
push
das
sbb
fstpl
pop
movsb
leave
or
jl
out
shll
mov
inc
mov
mov
sbb
push
into
in
xchg
jle
mulb
pop
sbb
shrl
lcall
jecxz
adc
sar
mov
mov
or
mov
repnz
jecxz
adc
push
jle
hlt
mov
mov
inc
out
push
stc
sub
mov
adc
rcl
and
and
out
in
xchg
jnp
add
shll
xchg
adcl
cs
imul
mov
stc
pop
lahf
sti
aad
dec
xchg
nop
dec
cmp
pusha
xlat
ds
mov
test
fwait
inc
test
or
xchg
push
lahf
push
and
jmp
loop
dec
jnp
cs
ret
cmp
jno
ljmp
mov
in
pop
pop
jne
sub
es
repz
daa
mov
mov
mov
bswap
std
cmp
adc
in
icebp
push
cli
movsl
cmp
xchg
xor
add
mov
jmp
test
sbb
cmp
dec
test
dec
cmp
and
or
stos
cmp
dec
lcall
push
shll
loopne
push
or
sbb
mov
mov
insb
shrl
add
out
add
xor
data16
mov
scas
addl
adc
inc
clc
lods
out
mov
stos
sub
testb
stos
adc
je
push
or
scas
push
jl
insb
arpl
xchg
sub
mov
push
cmp
jl
mov
aad
xlat
mov
stos
mov
xchg
pop
fstp
jne
xor
mov
dec
outsl
inc
jae
add
fistpl
int3
insb
mov
in
adc
mov
add
and
popa
fadd
movsl
mov
push
fcoms
ds
sar
mov
push
cwtl
xchg
inc
pop
lret
xchg
in
fsubrp
cmp
push
mov
push
bound
aad
pop
adc
aaa
dec
xor
fsub
xchg
aad
fs
lods
das
shlb
stos
adc
mov
out
fidivs
out
arpl
mov
adc
dec
arpl
hlt
xor
sbb
mov
sub
or
mov
aaa
jbe
xor
xor
pusha
sbb
mov
std
dec
mov
pop
outsl
inc
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
ja
sarl
adc
sbb
add
aam
test
movsb
loope
xor
jne
out
xchg
js
inc
mov
sub
shlb
or
lods
jb
jb
repz
cmpl
negb
mov
iret
gs
mov
and
fiaddl
push
mov
sub
lret
loopne
ds
shl
fdivs
dec
push
sub
xchg
cwtl
sub
out
pop
cmp
out
cmp
pushf
int
dec
mov
push
add
jmp
dec
sti
movsb
enter
jmp
or
cmpl
xor
adc
cmc
cwtl
dec
xchg
out
pop
loop
cmpsl
test
cmp
fnstenv
cmp
mov
mov
stos
dec
add
jne
push
bound
xor
jnp
stos
in
dec
push
pop
ja
jno
popa
nop
cmc
push
fbstp
push
add
cmp
mov
mov
xor
sub
mov
frstor
push
pop
repnz
ja
ret
aam
inc
xlat
mov
xchg
mov
dec
mov
fstp
mov
js
sbb
jmp
repnz
loop
push
ja
lods
aaa
xchg
test
jae
inc
add
inc
adc
inc
cmpsb
fidivs
mov
or
popa
jno
popa
mov
sub
mov
pop
push
mov
nop
jns
and
xchg
lock
pop
jge
jnp
rcrb
jge
test
das
test
and
mov
cltd
push
cmp
arpl
pop
jb
cmp
jle
movsb
mov
insb
mov
sub
mov
movsb
mov
call
pop
sub
jg
cmpsl
dec
sub
pop
inc
minps
pop
mov
xchg
jmp
les
cwtl
adc
sti
dec
nop
push
clc
mov
inc
fstpl
sti
pop
pop
push
cmpsb
in
adc
add
aaa
pusha
or
or
aaa
sub
inc
xor
bound
rclb
mov
hlt
out
xchg
mov
iret
rcl
push
mov
mov
jmp
fisubrl
fyl2xp1
xchg
jp
xor
xchg
inc
sahf
mov
in
loopne
out
lock
inc
out
popf
ret
mov
jmp
fwait
lcall
adc
adc
test
gs
negl
dec
mov
clc
data16
push
jl
sbb
dec
push
or
fldt
ss
mov
fnstcw
fdivrl
mov
mov
in
imulb
dec
iret
divb
xchg
insb
xchg
clc
and
xchg
adc
push
push
dec
inc
xlat
pop
push
je
pop
mov
mov
add
xorb
stos
xchg
mov
stos
adcl
add
add
rol
fisttpll
sbb
jecxz
dec
xchg
cmp
pushf
out
loope
cmp
filds
subl
lret
hlt
daa
rcl
xor
lea
pusha
push
in
pop
push
in
xor
mov
inc
inc
dec
xlat
sub
enter
lods
jno
fcoms
and
pusha
hlt
mov
push
inc
push
mov
add
xor
jg
or
ret
sub
jno
test
in
aas
push
mov
js
mov
stc
mov
mov
cmp
dec
aam
mov
cmp
idivb
scas
cwtl
popf
cmp
xor
pop
fcomip
or
xchg
js
fstpl
pop
stc
decb
sbbb
inc
mov
roll
scas
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
shll
sub
sbb
adc
sbb
in
xor
pop
sub
negb
xor
je
sti
outsl
xchg
sti
mov
mov
or
adc
push
ret
jno
xor
pushf
cmp
outsl
adc
push
shl
sub
inc
xlat
xchg
cmpsb
negb
cld
and
sbb
js
pop
mov
int3
inc
and
or
adc
sbbl
jns
scas
sbb
popf
insb
push
std
inc
mov
imul
xchg
popf
sub
and
inc
je
pusha
inc
inc
lods
dec
cmc
ret
cld
test
add
mov
inc
ja
push
cmp
dec
mov
jnp
aam
adc
outsl
mov
cmp
mov
sub
jle
xor
mov
lds
jns
out
xchg
jo
push
pop
mov
in
sub
lahf
rcrb
mov
jb
cmp
js
pop
cmp
shlb
inc
xchg
fcomp
hlt
pop
sub
push
loope
mov
idiv
mov
data16
cmp
ss
xor
outsb
xchg
pop
jge
inc
adc
fistl
test
xchg
popa
cld
add
or
mov
jmp
jns
ss
cmp
lret
or
xor
sahf
xor
fstpl
xchg
lods
test
xchg
adc
ror
aam
lods
enter
mov
scas
out
add
xchg
mov
add
cmp
mov
fwait
test
into
mov
lret
xor
inc
push
roll
pop
popa
xor
xchg
addb
sbb
insl
sub
jmp
popf
jle
daa
mov
rcl
mov
dec
mov
cltd
and
inc
lcall
incb
cmpsb
in
jns
mov
dec
cmc
add
pop
sbb
push
mov
mov
adc
shlb
lcall
ret
mov
ss
mov
sub
leave
mov
xchg
movsl
adc
push
je
mov
mov
dec
arpl
leave
xor
xchg
mov
movsl
add
test
sahf
sbb
popl
test
xor
dec
mov
xor
mov
sbb
add
mov
jb
and
cltd
mov
enter
dec
popf
mov
and
test
and
jne
clc
push
int3
loop
xchg
push
fdivs
cwtl
rep
xchg
and
xchg
mov
or
adc
lahf
mov
push
inc
mov
cs
push
dec
imul
orb
pop
inc
mov
jnp
movsl
push
pusha
in
arpl
scas
sbb
repz
imul
ss
lock
mov
ss
jbe
jbe
dec
sbb
loop
and
add
gs
xchg
mov
jl
cmp
jp
dec
cmp
add
ret
push
pop
test
rclb
adc
mov
rcrb
fstpl
imul
inc
push
cmp
sbb
xchg
dec
push
je
cmp
adc
icebp
cmp
jl
lea
enter
cmp
test
test
popf
insb
mov
sar
fdivr
aas
xor
sub
in
cmpl
xchg
dec
pusha
sub
pop
mov
xchg
out
sbb
sbb
xlat
sub
arpl
pop
mov
push
jae
popf
roll
iret
push
sbb
aam
orl
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
push
and
and
sbb
adc
sbb
sub
test
mov
sbb
add
push
int
loopne
or
and
jne
out
pop
js
mov
into
push
ret
cmc
neg
out
inc
pusha
cwtl
in
jns
rcrl
test
dec
cmp
and
or
pop
loop
xlat
cmp
mov
cltd
jmp
xchg
lods
add
in
xchg
adc
pop
test
push
ljmp
jge
leave
stc
mov
xor
mov
rorb
inc
insb
aam
or
jne
ja
dec
js
jo
mov
aad
mov
ret
std
call
xor
out
jmp
arpl
cmp
cmp
cs
fadd
out
dec
dec
lret
dec
xchg
push
fistpl
xchg
in
pop
pushf
or
aam
mov
data16
pop
popf
push
sbb
pop
mov
cld
repnz
pusha
cmp
aam
fcomip
add
jmp
pop
mov
and
arpl
pop
shlb
jecxz
cmpsb
and
adc
sbb
das
xchg
push
rolb
push
imul
adc
push
mov
dec
shrb
dec
jo,pn
pop
hlt
in
jns
jbe
ret
outsl
jge
in
add
movb
adc
nop
pcmpgtb
test
test
les
cmpsb
sub
mov
mov
iret
out
push
pop
mov
cmp
mov
jo
or
sarb
das
xchg
and
fisubl
pop
addr16
cmpsl
pop
mov
mov
mov
imul
fisubrs
mov
adc
push
idiv
lcall
mov
pop
mov
int3
std
mov
xor
adc
mov
loope
popl
dec
in
mov
pusha
addr16
data16
es
cmp
inc
loopne
jbe
xor
aam
push
or
xlat
cltd
lods
and
jno
movsl
fst
dec
stos
and
push
push
pop
mov
sub
ja
jb
xchg
adc
jns
cmpsb
les
out
lcall
leave
rcll
iret
cld
fstl
sbb
sub
movsl
push
cmp
mov
mov
outsl
dec
inc
jne
and
xor
dec
add
lock
ret
mull
aaa
arpl
push
fsubr
leave
mov
jbe
fprem1
xor
adc
fs
popa
stos
iret
stos
andl
mov
nop
mov
fildll
xchg
cmp
popa
mov
imul
push
scas
and
pop
movl
push
mov
cwtl
push
sub
push
ficomps
lods
aas
stc
into
call
enter
mov
mov
loop
xchg
add
popa
adc
mov
ret
and
push
xchg
rcll
xchg
dec
jne
mov
cld
pop
insl
xor
push
push
repnz
jle
jecxz
add
dec
xorl
sub
jae
inc
or
lret
outsb
leave
pop
add
jecxz
lods
test
lods
mov
adc
mov
jp
nop
aam
adc
movsb
mov
push
test
jnp
pop
mov
cmp
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
sahf
mov
mov
sbb
adc
sbb
inc
and
sub
lods
iret
sbb
lret
int
xchg
stc
xchg
enter
fidivl
jnp
je
std
sbb
repnz
inc
dec
les
popf
into
stos
pop
cmpb
push
sahf
inc
data16
xlat
js
lret
fbld
into
stc
push
sub
loope
jbe
and
push
mov
hlt
sub
dec
dec
xchg
inc
push
cld
adc
or
pop
jae
add
mov
and
test
xchg
push
pop
adc
jo
mov
cmp
ja
xlat
cmpsb
in
mov
js
roll
mov
ds
fwait
mov
rorb
fdivr
les
aaa
int3
cltd
sbb
or
movsl
inc
xor
inc
adc
mov
cli
fmuls
cmp
push
gs
movsl
fs
mov
push
fwait
xchg
sub
push
jmp
and
add
gs
call
inc
mov
sub
sub
push
popf
mul
mov
fwait
jns
dec
ljmp
xchg
stos
and
ret
lahf
dec
dec
shlb
bound
push
inc
test
jecxz
xor
in
jno
or
xor
jl
mov
mov
sbb
jae
xor
cmp
add
sub
imul
mov
cmpsb
pop
jae
in
leave
call
stc
loopne
imul
scas
fucomip
mov
test
adc
jmp
dec
imull
pop
stos
leave
movsl
cld
xchg
pmulhw
dec
push
aas
add
inc
lret
inc
push
les
pop
pop
sbb
sub
cld
jbe
xchg
stos
cmc
adc
jmp
loopne
out
jp
imul
fsub
aad
jg
call
jbe
mov
push
push
loop
jl
stc
enterw
mov
out
push
subb
and
cmpsl
ljmp
jg
push
xchg
sbb
notl
gs
popf
push
cmpl
dec
lods
in
icebp
into
outsb
cmp
adc
push
adc
arpl
push
and
loopne
nop
lds
mov
jp
push
dec
lret
loope
mov
das
jns
fcomps
dec
adc
mov
roll
xor
loopne
fwait
inc
mov
jp
aas
cld
or
cmp
xchg
sbb
fxch
sarb
sbb
and
add
ja
mov
fisubs
or
dec
std
call
test
cld
arpl
pop
pusha
or
mov
lds
jmpw
jb
xchg
mov
mov
enter
aas
cld
jne
mov
push
ds
sub
fsubr
xchg
xor
adc
mov
inc
dec
js
pop
add
jle
jecxz
popf
mov
or
dec
dec
idiv
push
and
movsb
push
imulb
test
out
adc
add
mov
test
cs
jbe
or
movsl
mov
hlt
sub
in
sbb
jb
mov
lods
and
fstpl
test
inc
loope
nop
jmp
das
fadds
or
shlb
mov
in
sahf
and
imul
dec
lock
jnp
add
test
add
addl
push
sub
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
add
push
push
push
sbb
mov
sub
adc
aam
or
and
wbinvd
stos
mov
pop
jno
mov
push
stc
test
aaa
mov
addr16
inc
xchg
dec
mov
test
or
cmp
xchg
popa
pop
mov
stc
xchg
add
lds
into
mov
or
es
cmpsb
nop
pushl
mov
js
fdivp
cli
cmc
cmpsl
imul
mov
pop
stos
push
and
sbb
push
sub
mov
mov
jge
and
in
ljmp
fucomip
sub
xchg
xchg
mov
mov
mov
leave
sub
fistps
pop
or
adc
adc
inc
jnp
push
cmp
fisubrs
add
add
add
inc
ja
jbe
mov
inc
dec
mov
cmpsl
cli
sub
pop
push
jg
addr16
lods
jg
sbb
les
add
int
inc
mov
sbb
jg
or
rorl
sub
jge
movsb
mov
addr16
pop
and
and
dec
push
push
aad
cmc
fisttpl
jecxz
xor
scas
push
popf
jl
jns
push
jmp
into
sbb
adcb
adcb
sub
push
int
or
xchg
sub
xlat
ljmp
add
xor
sub
and
xchg
fs
faddl
popa
mov
repnz
sahf
sbb
aaa
xchg
fdiv
push
mov
and
outsl
loop
xchg
xchg
cli
cs
cmc
fs
data16
int3
push
es
movsb
addr16
mov
adc
cmp
mov
imul
add
imull
daa
aad
addr16
fistpl
ljmp
incb
pop
gs
push
mov
cmp
inc
aad
mov
stos
cltd
sub
cmp
cmp
mov
cmpsb
push
push
negl
add
pusha
cmp
cmpsb
jl
xchg
scas
aam
cwtl
daa
and
sarl
add
pop
lahf
add
fiaddl
cld
in
add
sti
jg
out
pushl
lods
pop
imul
nop
shr
add
in
fidivl
sub
mov
push
mov
lahf
dec
cmp
or
mov
fdivl
xchg
inc
fcmovb
lock
mov
enter
mov
out
lahf
mov
repnz
movsl
mov
xchg
mov
cli
imul
call
insl
add
gs
jnp
call
mov
cli
sti
cs
scas
scas
stc
hlt
and
ret
sbb
rcr
pop
cli
push
sbb
or
lock
pop
aad
pushf
mov
pop
mov
and
sub
pop
out
scas
mov
sahf
scas
xchg
push
ljmp
mov
call
icebp
es
negb
pop
sbb
xor
mov
insl
in
hlt
jnp
mov
into
xchg
sub
lea
xadd
fnstenv
sub
sahf
jle
mov
mov
pop
mov
xchg
jmp
add
pusha
arpl
int
or
data16
icebp
mov
and
adc
jo
in
jl
jnp
mov
push
xchg
push
mov
clc
sbb
clc
mov
lods
fdivs
mov
imul
lret
sbb
lret
icebp
xor
sbb
push
mov
or
or
push
add
inc
and
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
cmc
pop
jo
push
push
sbb
push
cs
jnp
mov
mov
popa
and
xorb
or
data16
enter
xchg
fisttpll
cmpsl
test
sti
or
and
das
cmp
ficompl
cs
imul
mov
mov
and
push
movsb
push
pop
popfw
adc
add
mov
rorl
dec
es
push
cmp
sbb
inc
iret
inc
or
xchg
pop
push
lret
pop
pop
or
ret
fidivl
jnp
pop
shll
adc
and
lds
mov
inc
xchg
test
fistpl
jmp
fcmovu
adc
nop
out
mov
std
sti
insl
in
or
hlt
sbb
stos
test
xor
leave
add
and
mov
inc
lret
shlb
xorl
gs
adc
mov
cmpsl
fstl
or
test
cmc
enter
jo
mov
scas
dec
outsb
les
sub
jbe
daa
mov
repz
leave
adc
js
into
push
test
push
cmpl
add
mov
cmp
fisubrl
jns
inc
out
adc
xor
xchg
mov
aam
pop
lods
js
xor
outsl
popa
inc
sarb
test
fbld
mov
rcrl
jne
lods
mov
leave
mov
inc
aad
ficoml
mov
std
mov
pop
mov
and
cmp
jecxz
adc
pop
aas
lds
leave
call
mov
jbe
pop
addr16
out
incb
mov
xchg
sbb
mov
sbbl
std
xor
mulb
ss
stos
pop
lds
mov
imull
inc
roll
hlt
inc
mov
inc
xchg
xchg
mov
push
inc
jo
xchg
imul
cltd
outsb
and
repnz
inc
mov
in
inc
sbb
cmpsb
add
push
inc
xor
cmp
loop
mov
xor
jl
xchg
ret
inc
insb
inc
lods
mov
sbb
mov
mov
jne
movsb
pop
push
push
repnz
ret
mov
fwait
pop
cmp
jge
lock
gs
jp
push
pop
loopne
or
xchg
push
and
cmp
push
lret
push
xchg
sbb
inc
in
cmp
inc
inc
inc
fldt
jge
jne
into
inc
mov
mov
sbb
xchg
clc
mov
sbb
rcrb
xor
pop
sub
inc
jge
mov
sbb
sbb
jnp
fwait
mov
dec
pop
test
inc
sbb
jl
test
pop
cmp
pusha
fidivrl
movsb
or
lock
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
jno
pop
or
sbb
mov
cmpb
lds
cmp
dec
adc
and
int3
icebp
test
orb
in
fwait
es
xchg
mov
mov
sbb
in
xor
popl
inc
or
enter
jg
xchg
mov
mov
movsb
and
rorl
add
into
mov
iret
xchg
mov
push
nop
xor
jl
mov
mov
nop
or
sbb
cmp
push
lods
filds
add
jle
subb
imul
ja
adc
repnz
push
scas
sahf
pushf
icebp
and
ds
jbe
pop
dec
popa
jle
xchg
ds
lods
sarb
cmp
js
in
add
dec
loop
or
ret
es
jns
or
jbe
push
and
or
pop
lahf
inc
add
in
mov
in
lods
pop
int3
mov
shll
js
jnp
pusha
or
sbb
ds
jl
push
rorb
xchg
push
mov
xor
mov
xchg
jmp
rorb
fbstp
out
mov
cld
cmp
out
fwait
inc
xchg
sbb
mov
bound
add
addr16
fisubrl
dec
ds
push
adc
mov
outsb
outsl
adc
fists
leave
ss
or
mov
or
dec
and
outsl
push
jb
push
outsb
xchg
loopne
rcr
xchg
js
stos
cmp
mov
sub
pushf
mov
xor
mov
int
cli
sub
fmull
add
into
dec
and
jno
dec
sub
jecxz
pop
push
or
mov
imul
pop
sti
test
cmpsl
cmp
pop
mov
cli
and
lods
in
clc
inc
mov
pop
pop
cmp
push
rclb
enter
jp
jle
xchg
xlat
jp
clc
mov
xorb
pslld
push
inc
dec
xor
aam
roll
arpl
das
shrb
pop
xchg
jg
and
loopne
or
and
fidivs
pop
push
cltd
jo
cmp
adc
inc
mov
mov
scas
xor
mov
mov
mov
pop
cld
rorb
cltd
in
aaa
ret
into
push
dec
jp
sbb
ja
fnstenv
sbbb
push
push
and
xchg
mov
std
shrb
imul
adc
mov
ljmp
adc
out
and
test
dec
mov
mov
or
cs
out
adc
pop
jge
psubsw
ja
js
fcomp
cmp
pop
jbe
xorb
xchg
sbb
aas
cmp
imul
push
cmpsb
test
push
call
pusha
sub
cmpl
mov
cli
iret
int3
and
rorb
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
add
add
sbb
leave
jb
xchg
jg
add
push
xchg
and
add
sub
cld
bnd
mov
enter
loopne
daa
or
adc
pop
out
dec
pop
leave
rorb
aad
lahf
mov
inc
out
adc
xchg
mov
or
fwait
xchg
subl
cmp
inc
enter
sahf
sbb
cld
shll
xlat
sbb
dec
push
cld
lds
arpl
push
mov
pusha
sarb
and
mov
test
inc
daa
addr16
repz
pusha
gs
jmp
enter
stos
aaa
add
pop
stos
mov
popf
int
jb
and
and
lds
call
inc
sub
fs
rcl
xor
lret
lods
movsb
stc
cmp
and
cmp
fwait
aas
xchg
mov
jmp
jno
das
into
pop
daa
ja
pop
sbb
ret
enter
jbe
pop
lea
je
jmp
insl
stc
test
xor
mov
pusha
inc
push
ret
pop
dec
fcoml
repz
or
jne
xchg
add
jae
loop
scas
fsub
es
xchg
add
push
mov
insb
sbb
pop
dec
cmp
jecxz
push
pop
mov
mov
icebp
cs
fwait
andb
int
dec
pop
mov
push
pop
xchg
cmp
xchg
mov
aad
scas
adc
or
andb
test
ja
sbb
jae
shrl
sbb
pop
xchg
test
leave
roll
insl
pop
out
and
loope
pmovmskb
pop
pushf
insb
ja
and
lods
mov
js
cmc
sbb
cmpsb
cmp
icebp
rcll
jg
sbb
add
jnp
mov
cmpsb
and
insb
roll
jbe
sbb
loope
pushf
pop
pop
or
movsb
dec
lock
add
inc
mov
lcall
call
xor
push
inc
repz
inc
jl
push
int
fiadds
pop
mov
adc
arpl
dec
out
loopne
enter
pop
xor
lcall
lret
rdpmc
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
cld
push
sbb
movsb
mov
lds
movl
xchg
imul
fs
test
inc
or
push
pop
pop
loopne
mov
and
movzwl
dec
jbe
or
mov
ffree
lret
push
xlat
lds
mov
ret
mov
sbb
out
mov
adc
push
jno
mov
sahf
or
sbb
shr
xor
divb
lds
xchg
cli
inc
mov
and
cwtl
out
push
jne
ds
sub
and
xor
xchg
push
jns
repz
xchg
mov
in
bound
pop
test
lret
xor
xor
mov
ret
mov
arpl
dec
mov
pop
pop
sub
adc
nop
int3
mov
fwait
test
aad
add
xor
fldenv
jmp
sub
adc
pop
fwait
adc
ja
mov
outsb
mull
imul
pop
xchg
addl
into
lock
sbb
jne
jno
pop
data16
cltd
popf
xchg
push
cmpsb
lods
js
ds
movsb
inc
xchg
call
push
sub
jnp
xor
lock
jb
jge
nop
or
mov
adc
daa
cwtl
sahf
pop
dec
pop
stc
fisttpll
add
jb
ret
dec
add
mov
mov
cmp
jmp
lahf
rcrl
std
les
loopne
imul
aas
pop
pop
inc
mov
xchg
jmp
mov
xchg
lret
or
in
inc
sub
cmp
jns
pop
sarb
loop
pop
sbb
repnz
arpl
mov
repz
int3
in
mov
out
ds
inc
and
sbb
add
xchg
sahf
dec
adc
xchg
bound
icebp
jl
or
jmp
test
dec
jmp
sub
call
faddl
add
cld
push
ja
shrl
mov
xor
dec
out
in
or
in
lds
loope
daa
mov
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
je
xor
push
cmp
xchg
mov
xor
mov
xchg
ret
test
and
call
add
add
sub
sbb
mov
xor
push
movsb
popf
test
mov
and
fisubl
jg
ret
hlt
scas
xchg
and
dec
add
roll
mov
push
imulb
aaa
lret
inc
xchg
xchg
sbb
aas
cmpsl
adc
add
lods
ljmp
out
flds
aam
cmp
add
adc
mov
jl
imul
pop
cmp
out
inc
cmp
in
add
arpl
pop
aaa
xlat
lret
inc
shr
call
bound
xchg
sbb
dec
movsl
and
add
mov
xor
outsl
push
pop
int
dec
es
aad
out
ret
jg
xor
sbb
andl
iret
in
xlat
mov
jne
popf
push
rcr
mov
outsl
jecxz
ja
cli
imul
test
mov
add
cmp
sub
dec
jecxz
fimull
daa
cmpsl
cmpsl
lcall
mov
lahf
inc
sbb
mov
es
lock
or
pop
xchg
jle
or
or
rorb
or
jle
in
rep
sub
xlat
rcrb
mov
pop
roll
and
add
out
sbb
pop
fstpl
sbb
cmp
cmp
push
dec
in
fs
push
jp
pop
popa
lock
lahf
pop
pop
psubw
add
subl
testl
mov
adc
iret
push
loope
test
add
call
je
imul
mov
gs
rcr
cmpsl
jl
xor
xor
sahf
rolb
cli
push
mov
shlb
movsl
sub
pushf
cmp
mov
add
ja
inc
push
xlat
lock
out
pop
hlt
mov
bswap
add
cltd
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
ljmp
loope
sbb
cmp
aas
mov
push
xor
adc
dec
sub
stos
push
or
sbb
xchg
mov
inc
fs
push
sub
sti
mov
fdivr
mulb
scas
mov
dec
sub
sahf
dec
pushl
inc
ret
stos
mov
out
sbb
xlat
dec
pslld
sti
out
dec
jns
xor
xchg
ret
or
mov
das
cmp
mov
insl
inc
out
and
js
sub
add
push
fadd
or
xchg
and
fpatan
fwait
mov
fwait
out
push
jb
xor
sub
rorl
xor
fnstcw
pop
lret
into
rcrb
lret
js
sub
push
add
inc
ljmp
mov
mov
dec
mov
loope
sub
imul
xchg
jns
xchg
pushf
xchg
out
movsl
push
fimuls
push
pop
mov
mov
ret
popa
in
roll
pop
flds
sahf
mov
clc
rcrb
leave
adc
rclb
shrl
sub
and
frstor
and
stos
and
mov
cmp
insb
dec
imul
lock
cmp
jge
mov
or
sbb
inc
fisubrs
bswap
add
sbb
push
xchg
sbb
push
mov
test
xorl
loope
lret
scas
pop
adcl
or
stos
in
int3
nop
cmp
xor
push
mov
repz
add
lcall
mov
xor
xor
scas
jmp
sarl
ja
mov
xchg
mov
or
rclb
dec
mov
inc
into
roll
scas
mov
bound
rcl
pop
cmpsb
inc
imul
push
jg
cwtl
inc
push
xchg
push
inc
sahf
dec
push
and
shlb
test
push
ss
xor
icebp
arpl
xor
cmpsb
jl
jecxz
mov
in
js
icebp
test
rolb
js
push
push
cmc
outsl
cs
xchg
movl
inc
outsl
out
ss
subb
and
sbb
inc
nop
adcl
dec
push
mov
sub
push
mov
rorl
outsb
stos
lcall
sub
sub
int
fisttpl
inc
jno
xchg
jg
or
push
loopne
std
fisubl
mov
test
jge
jb
das
add
mov
lea
xchg
mov
xchg
mov
mov
jb
jno
push
lock
push
adc
mov
jg
add
lret
out
mov
lock
in
inc
add
movsb
bound
dec
hlt
into
jg
cmpsb
cmp
cs
icebp
popf
inc
push
xor
and
into
dec
adc
pop
decb
jg
in
out
xchg
add
and
outsl
jge
push
pusha
jp
ret
fs
pop
ror
leave
imul
fidivrs
adc
dec
in
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
inc
shrl
mov
fidivrs
movsb
dec
mov
lahf
js
push
adc
cmpsl
fstpl
sarl
lea
dec
lret
loop
sbbl
jo
mov
dec
jge
cmc
icebp
sti
cs
sbb
xor
gs
je
mov
push
jmp
stos
xchg
out
sub
hlt
icebp
loopne
aam
and
pop
xchg
mov
sahf
pop
add
jmp
mov
ss
mov
shr
cmp
fdivrl
arpl
and
cwtl
jp
cmp
jecxz
ss
mov
pusha
push
icebp
outsb
cmp
or
cmp
scas
sbb
test
sub
es
jbe
jge
gs
push
rolb
jge
lret
xor
scas
mov
imul
xchg
cs
push
imull
pop
notl
pop
mov
or
and
loop,pt
mov
bndldx
pop
jp
dec
lods
mov
push
fwait
pop
bound
fpatan
pop
mov
lret
add
jp
jbe
sub
rclb
mov
and
nop
les
pop
test
cmpsb
mov
cmpsl
aas
sbb
rcll
and
xor
mov
arpl
mov
and
pop
cwtl
fldl
inc
inc
cmp
arpl
jmp
and
push
es
sbb
mov
in
fs
lret
push
sbb
sar
lods
icebp
loopne
jle
lahf
xchg
or
cs
jp
movsl
popa
jo
push
clc
inc
mov
jne
and
fildll
fwait
icebp
call
out
rolb
std
mov
xchg
pop
mov
fstpl
insl
fwait
popf
dec
sub
nop
mov
add
and
or
inc
dec
or
xor
and
mov
repz
xchg
xor
xor
fxch
mov
mov
xchg
das
ss
int
jp
pop
xor
xchg
sub
adc
pop
roll
mov
dec
pop
fs
push
add
inc
jne
dec
jae
or
mov
mov
dec
pop
mov
aaa
test
cld
lock
sub
movsb
pop
aas
and
scas
lods
sbb
push
mov
jno
arpl
push
ds
ljmp
or
lods
call
or
outsl
mov
mov
xlat
es
mov
imul
int3
loopne
mov
fwait
sub
pop
popf
das
xchg
mov
pop
ficoml
jo
jg
subb
test
cmp
xor
lret
lret
mov
ljmp
fildll
dec
cmc
bound
out
add
mov
adc
movsb
fisubl
nop
sub
xchg
jae
jmp
negb
dec
and
add
jp
xchg
xchg
jno
pop
and
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
std
daa
shlb
cmc
inc
sbb
mov
sub
lcall
mov
pop
cmp
ds
rcpps
inc
sahf
aam
push
dec
daa
sub
jns
sub
xchg
int3
icebp
jge
pop
push
push
xchg
cmc
pusha
jne
mov
popa
inc
pop
and
fstl
cmpsl
sahf
fisubrs
int
and
sbb
outsl
lret
decl
in
inc
push
push
icebp
mov
dec
inc
out
lods
fsubl
leave
orl
cmp
jno
xor
push
lret
xchg
add
loop
call
jno
pop
mov
mov
ljmp
repz
jbe
cmp
mov
std
dec
sub
insl
jno
shll
cmp
cmpsb
subb
inc
sub
push
xor
add
inc
and
pop
fstps
xor
xchg
jno
cmpb
sub
aaa
adc
imul
cmp
lods
iret
and
fldt
and
pop
sbb
lods
lea
xor
jg
inc
cmpsb
add
mov
pop
sub
enter
or
cmp
mov
jp
push
mov
jecxz
mov
inc
jmp
push
push
adc
push
ljmp
jg
mov
fimuls
xlat
repz
out
cmc
orb
pop
sub
dec
js
jns
jle
jae
adc
rolb
mov
into
cli
inc
lock
cmp
imul
addb
inc
sarb
xor
popa
mov
ret
mov
daa
add
daa
dec
pusha
mov
adc
or
in
fiaddl
xor
aam
sbb
movsb
inc
mov
sbb
fisubrs
dec
fcoms
dec
push
jns
sbbb
or
inc
cmp
jge
cwtl
scas
sbb
aam
xor
jmp
out
cmp
sub
je
fcoml
mov
push
icebp
out
sub
pop
lcall
adc
pop
and
or
ret
cmpsl
test
lcall
insl
ds
jecxz
rorb
hlt
xor
ds
mov
jb
das
sub
xchg
popf
in
xor
push
pop
push
adcb
les
add
data16
xchg
mov
inc
mov
popa
push
mov
inc
loope
test
std
stos
inc
and
cli
adc
roll
imul
jge
in
enter
lcall
rcr
scas
sti
in
and
mulb
mov
pop
das
cmc
icebp
pop
ljmp
jno
adc
xchg
sbb
xchg
pop
xor
cmp
adc
sbb
xor
push
jmp
jge
cmp
in
xor
dec
and
ds
cmp
fucomp
mov
js
pusha
or
adc
lods
mov
std
mov
push
int
pushf
ds
jb
push
inc
push
lret
push
into
cmp
cmpsb
pusha
xor
lds
inc
add
aaa
ficoms
sbb
lea
push
loope
cmp
iret
add
jecxz
in
xchg
dec
je
xchg
mov
inc
jp
mov
push
jae
push
addr16
and
cmpsl
addb
outsl
add
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
xor
mov
ljmp
mov
jbe
add
pop
iret
sub
pop
iret
cld
xor
jo
pusha
imul
lcall
mov
mov
faddl
and
jo
mov
push
test
pop
sbb
call
pop
jne
in
adc
sahf
test
and
fdivrs
mov
dec
or
shrb
push
arpl
cld
cmc
decb
or
mov
je,pt
cmc
sub
push
cmp
inc
pop
aam
out
cwtl
fidivrs
dec
das
shlb
mov
mov
jne
ret
repz
fidivs
jp
loopne
dec
mov
cmp
lds
jl
test
gs
aas
xor
in
or
testl
xor
xchg
sub
loopne
jns
dec
push
fiaddl
or
loope
mov
add
mov
xor
div
add
mov
mov
mov
cmp
add
inc
pop
xchg
sub
sbb
mov
lcall
or
int3
sarl
aas
test
add
mov
or
mov
lahf
add
mov
and
fadds
orl
test
icebp
push
cmpsl
jnp
pop
mov
and
movsb
dec
adc
nop
icebp
lea
div
and
rolb
adc
ret
or
ficoms
repz
xchg
rolb
xchg
pop
ret
jnp
movsl
add
pop
xchg
nop
jmp
sbb
pop
jne
push
loopne
imul
rclb
mov
pop
mov
fisttpl
mov
xchg
insb
and
sub
pop
sbbl
andl
fwait
lds
fs
sbb
imul
out
cld
or
xor
fcomi
aas
orb
pop
insb
mov
pusha
fadd
pop
sbb
adc
dec
cli
mov
out
not
popf
rcrb
mov
imul
daa
dec
mov
and
inc
je
cmp
int
mov
imul
jmp
mov
mov
xor
pop
gs
shl
test
adc
mov
xor
mov
jb
lcall
incb
aam
push
jb
lahf
shll
sub
jmp
pop
cmpsl
push
pop
popa
pop
push
push
pop
push
cwtl
sub
jne
push
mov
int3
jecxz
mov
jb
cmp
fadds
jmp
enter
and
enter
add
ret
bswap
inc
aas
out
bound
xlat
shlb
rcrb
add
sti
mov
ror
ja
imul
aaa
push
out
inc
or
insb
pop
mov
mov
jl
orl
xchg
sub
daa
mov
jl
stc
shr
mov
pusha
popa
pushf
push
xrelease
cltd
pusha
mov
mov
js
out
insl
int
jbe
icebp
cli
out
inc
ds
jns
cwtl
jns
pop
push
hlt
mov
sub
jae
adc
loop
adc
mov
mov
je
out
gs
jae
es
in
sub
or
adc
jp
sbb
loop
push
mov
fs
ds
jmp
mov
into
mov
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
aam
jle
fsts
sbb
clc
stc
cli
sar
lods
jp
push
test
fcoms
jg
inc
movsl
fistpll
or
iret
xor
bnd
sbb
adc
and
ret
ja
pushf
and
jnp
lret
add
add
jnp
adc
adc
arpl
mov
push
icebp
dec
lret
dec
fsub
idivl
sub
jmp
insl
in
sbb
dec
mov
nop
mov
add
cmp
enter
mov
sub
pop
sahf
ja
pop
xchg
lods
mov
out
stos
mov
mov
xchg
xchg
ds
sbb
xchg
ljmp
cmc
mov
or
jle
loop
cwtl
cmp
push
pop
cmp
jo
leave
dec
xorb
add
clc
imul
adc
pop
push
inc
stc
lret
dec
mov
fistpl
pop
call
add
cmp
xchg
adc
xchg
icebp
fwait
mov
push
scas
cwtl
xor
xchg
inc
mov
repz
dec
mov
ljmp
push
iret
nop
iret
xchg
pop
and
vpandn
sub
arpl
repnz
out
inc
divl
inc
xor
cmp
xor
cwtl
aad
mov
and
arpl
popa
mov
and
cwtl
inc
mov
ljmp
inc
cwtl
adc
in
scas
idivb
test
rolb
mov
push
push
pop
dec
rclb
in
mov
data16
sbb
into
xchg
in
movsb
push
dec
adc
test
enter
pop
ret
inc
xor
pop
cmpsl
outsb
sbb
mulb
inc
push
bound
add
jl
mov
mov
xchg
mov
cmp
sbbb
vpcmpgtb
rcr
xchg
pushf
push
test
fldenv
jns
dec
out
adc
test
es
mov
jae
mov
rcr
imul
in
int3
xchg
fisubl
push
in
jp
sub
mov
mov
jp
add
add
lea
jp
test
inc
pop
stos
imul
jg
and
out
repz
inc
xchg
rcrb
or
adc
add
pusha
pushf
call
cmpsl
jp
mov
sub
jns
call
push
dec
sub
mov
and
loope
and
ret
mov
es
jp
hlt
pop
test
mov
mov
lahf
sahf
movsl
shll
or
sbb
loope
inc
int3
push
shll
jnp
pop
mov
dec
xchg
js
mov
inc
aad
pop
jne
inc
mov
decb
sbb
loope,pt
out
mov
jne
cmpsb
sub
rclb
movsl
xchg
decb
ljmp
jcxz
stc
rcrl
xor
pop
adc
leave
push
push
test
lea
mov
aaa
mov
lret
scas
cmpsb
in
push
rcrl
cld
sahf
lahf
push
push
add
jp
sub
or
stos
cmp
sub
imulb
pop
ffreep
jb
xor
bound
ds
sti
xchg
push
mov
xlat
test
lcall
pop
add
into
lds
mov
dec
sub
xchg
dec
fimull
jo
gs
test
inc
fdivr
shlb
sar
jnp
and
add
push
mov
mov
pop
outsb
mov
dec
mov
cmp
xor
test
pop
pushl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
sbb
sbb
fildll
xchg
push
pmaxsw
push
stos
andl
sahf
pusha
imul
lcall
aam
push
test
movl
jb
add
cmp
inc
dec
mov
and
jg
pop
mov
xchg
mov
in
scas
adc
bound
push
pop
outsl
push
inc
xchg
stos
mov
je
pop
loop
pop
mov
xchg
sbb
mov
test
sbb
je
mov
pop
adc
incl
mov
inc
nop
mov
pop
inc
fmul
jbe
fwait
jg
inc
rorb
fwait
loop
icebp
pop
adc
pop
aas
mov
lret
inc
loopne
roll
pop
mov
daa
mov
adc
aas
shl
and
pop
mov
mov
mov
inc
mov
and
push
flds
loope
and
adc
pop
call
xchg
negb
in
and
lods
or
idiv
xor
pop
pop
enter
and
movsl
movsb
jmp
dec
mov
mov
mov
mov
mov
add
iret
push
stos
or
and
xor
int3
xchg
push
push
jnp
imul
daa
mov
or
mov
call
call
cmc
in
rcrl
cmpsl
and
in
gs
das
jne
sub
out
mov
mov
sub
gs
in
or
xor
faddl
dec
and
inc
in
call
notl
jnp
add
iret
pushf
dec
aam
cmp
dec
rolb
lahf
xor
jl
cs
pusha
and
cltd
leave
xor
jno
iret
arpl
xor
cwtl
mov
shr
fcomps
mov
xchg
mov
cmpsb
jl
mull
sub
adc
in
pop
pop
jmp
jns
push
push
js
sub
dec
mov
cwtl
orl
dec
icebp
jmp
jg
dec
movsb
sub
jle
arpl
mov
movsl
idivl
rcrl
sarl
inc
inc
testb
popf
pop
fcomps
and
inc
jl
imul
ljmp
dec
mov
lds
pop
fists
mov
pop
mov
mov
in
inc
cmp
mov
push
je
outsl
jp
test
mov
xor
xchg
dec
pop
mov
int
aas
push
sbbb
jecxz
iret
push
lret
in
aas
push
ret
test
lods
or
jp
hlt
cwtl
imulb
lods
push
or
std
mov
pop
cmc
add
mul
and
lods
sub
aas
movsb
gs
sub
out
popf
push
pop
cmpsb
or
pop
lods
jp
pop
cmpsb
loop
ret
mov
stos
add
cs
scas
mov
add
and
cld
jmp
fsubp
xor
jecxz
cltd
out
jg
popf
dec
movsl
and
mov
popa
inc
push
or
add
stc
rorb
out
bound
repz
inc
mov
lods
ja
cmp
adc
and
outsl
movsl
xchg
add
mov
or
loopne
sub
nop
mov
sbb
add
mov
push
daa
roll
outsb
in
pop
sbb
and
inc
jle
jo
inc
sarl
rcr
push
and
pop
jmp
mov
mov
mov
cmp
cmp
clc
mov
and
jmp
jge
push
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
dec
mov
sbb
lcall
test
push
repnz
add
and
jg
pushf
mov
or
ss
jne
in
pop
cmp
mov
push
lea
fldl
inc
jle
pop
imul
jb
ja
and
and
mov
nop
xchg
jecxz
jae
xor
sub
les
add
xchg
add
xchg
adc
mov
mov
imul
popa
mov
push
cmp
sub
or
stos
dec
aaa
lret
push
sbb
push
xchg
mov
xchg
pop
outsl
push
rorl
add
or
cmp
loope
int3
das
cmpsl
sub
cld
stos
jno
push
ja
int
out
rcr
enter
fmulp
jl
aad
ss
movsb
jnp
pop
or
mov
xchg
cmc
sbb
jecxz
ret
xor
aaa
push
push
pop
mov
cmpsb
ret
nop
xlat
pop
xor
pop
std
dec
rorl
out
test
cwtl
gs
orb
clc
insb
out
sub
mov
push
imul
push
mov
repz
or
add
push
sub
sub
test
jecxz
out
repnz
add
test
pushw
mov
aad
xchg
lds
xor
jle
push
je
gs
inc
outsb
push
mov
sahf
ja
xor
lods
sti
mov
and
mov
or
adc
sbb
mov
or
loop
xchg
sti
jmp
inc
arpl
mov
pop
sbb
xor
lock
mov
pushf
push
setno
mov
call
xor
pusha
cmp
popa
test
push
cmp
ljmp
pop
push
mov
fwait
cmp
in
int3
and
adc
mov
mov
inc
cmp
mov
ret
enter
xchg
adc
mov
test
faddl
mov
jecxz
xorl
pop
mov
iret
inc
mov
aam
sbb
cmp
and
dec
int3
xchg
and
pop
fidivrs
xor
daa
repnz
mov
jo
mov
and
inc
je
inc
jg
insl
add
sbb
push
mov
ds
out
ds
push
pop
lcall
rcrb
loope
cmp
jl
mov
dec
stos
push
in
jbe
into
inc
add
and
scas
push
out
lahf
test
mov
cld
rcr
int
movlps
hlt
push
push
sub
gs
cmc
hlt
stos
sub
lea
test
sbb
pop
dec
push
push
test
scas
sahf
or
jle
pop
ret
pop
jno
dec
xchg
push
adc
pop
cli
xor
sbb
sub
xchg
ret
fsubs
mov
add
or
bound
dec
out
ja
mov
and
xor
push
jg
pop
mov
popa
mov
insb
stos
mov
mov
mov
dec
movb
ds
dec
arpl
mov
or
mov
jmp
les
addl
cmp
mov
push
push
sti
shll
leave
out
xorl
insl
fnsave
ficoml
out
movsb
push
dec
dec
iret
arpl
push
loop
cmc
or
icebp
pop
push
and
jp
push
add
xlat
jb
lret
mov
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
cmp
mov
mov
int
loope
jne
xchg
fldenv
mov
ss
or
int3
pop
insb
lea
dec
loope
inc
or
mov
js
sti
inc
pop
imul
push
xchg
push
negl
inc
loop
adc
rorl
adc
sub
mov
in
cs
push
mov
ja
mov
aaa
xchg
pop
popa
stc
outsb
jo
jbe
xor
adc
clc
hlt
mov
subl
cwtl
mov
enter
xor
dec
das
jmp
mov
jmp
out
lcall
and
xchg
into
insl
das
cwtl
cmpb
and
cltd
insl
hlt
data16
insl
addl
mov
mov
fnsave
cmp
inc
insl
xchg
sarl
and
insl
cwtl
insl
dec
sbb
sub
mov
lock
repz
pop
addr16
lds
push
sahf
adc
xchg
mov
adcb
mov
lret
sbb
sub
or
push
pop
push
dec
jnp
push
push
arpl
cmp
fxch
cmc
push
jl
mov
cmp
std
loop
stos
adc
addr16
xor
jmp
pop
aaa
xchg
fildll
push
inc
iret
jne
out
xor
loope
xor
mov
push
mov
mov
sub
jmp
sub
or
pop
push
mov
mov
pop
cmp
ret
cmp
adc
scas
xor
cmp
xchg
dec
mov
es
jg
rcl
mov
pusha
cs
sahf
scas
sub
and
adc
loopne
rclb
xor
rorl
fidivrs
sbb
cwtl
and
xorl
cli
add
test
scas
cmpsb
inc
int3
pop
mov
push
shlb
inc
or
pop
mov
dec
mov
push
lcall
into
pop
je
stc
insb
movsb
push
add
lds
jbe
cltd
jno
mov
rcl
lock
jnp
cwtl
inc
push
ljmp
cmp
jecxz
les
fs
ret
hlt
and
sub
xor
xor
pop
lahf
dec
jo
xchg
adc
loopne
push
sub
dec
sub
shll
xor
mov
push
aas
sub
dec
add
or
out
loope
mov
push
add
add
sbb
mov
dec
adc
mov
cmp
stos
fistpll
lret
out
pop
mov
cwtl
inc
add
outsb
sbbb
adc
pop
xor
jge
aam
outsw
fcom
mov
xlat
xchg
xor
push
lret
mov
sub
and
inc
mov
in
xchg
sbb
aaa
and
idivb
jl
push
outsb
push
scas
sub
cmp
stos
cmp
pushf
jae
mov
inc
or
std
divl
inc
mov
fcom
outsl
xchg
and
mov
je
int3
ds
push
xor
fiadds
adc
mov
jecxz
push
and
scas
add
and
xchg
or
mov
push
les
or
bound
cmpsb
jg
mov
jae
push
pop
imul
aaa
and
mov
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
jg
jo
mov
sbb
out
jecxz
jo
cwtl
call
mov
cmp
movsl
mov
xchg
adc
xchg
in
pop
test
xor
lods
dec
mov
pushf
sbb
movsb
mov
cwtl
push
pop
lods
enter
mov
push
aas
pusha
push
stos
in
movsl
ja
pop
pop
sbb
nop
loopne
int
sub
push
pop
mov
ret
and
push
cmc
cli
xor
in
scas
mov
adc
in
call
xchg
or
lret
xor
mov
inc
loop
cs
or
das
call
mov
clc
sar
and
scas
mov
mov
flds
adc
cltd
pop
sub
xor
insb
loopne
add
lret
subl
cld
jp
adc
push
and
or
inc
mov
mov
pop
cld
call
xchg
pop
rorb
ret
fsubl
sbb
push
mov
mov
pop
cld
cwtl
mov
in
or
xchg
sub
inc
mov
sahf
arpl
rorb
and
dec
ja
clc
mov
push
andl
in
sub
repnz
cmpsb
or
inc
dec
dec
cld
mov
data16
enter
fiadds
jecxz
sbb
cs
cmp
into
push
sarl
fidivrl
cmp
sahf
mov
leave
aas
pop
jno
and
movsb
stos
aaa
repz
mulb
shll
into
jo
mov
mov
fldt
xchg
inc
xchg
mov
adc
sub
or
hlt
and
mov
jecxz
add
jbe
pop
jl
test
xor
hlt
aad
xchg
pop
pop
cmpsl
arpl
hlt
mov
es
push
stos
stos
stc
push
jecxz
and
daa
mov
test
dec
daa
inc
insb
cmp
xchg
mulb
inc
lahf
cltd
adc
loopne
les
and
sbb
sub
mov
sbb
xchg
xchg
repnz
ja
cmp
std
lods
divl
cmp
jg
mov
mov
sar
xor
xor
xor
ljmp
xchg
fistl
push
popa
leave
fildl
add
push
cltd
sar
adc
enter
sub
sbb
rcll
pop
daa
inc
test
mov
sbb
fidivs
les
push
inc
jno
popf
popf
jne
aad
fwait
pusha
push
jo
loop
push
mov
icebp
hlt
movsl
adc
sbb
mov
xor
lods
gs
sbb
shrb
and
sub
insb
fwait
test
mov
jle
out
test
scas
in
cs
xchg
divl
lea
mov
test
xor
and
or
mov
jmp
pop
sub
test
dec
mul
xor
cmp
sub
clc
insb
lods
stos
std
sub
fisttpll
or
jno
add
ss
cmp
cmp
pop
aam
and
push
mov
xor
movsb
aaa
adc
sbbl
loop
add
push
sub
add
imul
jge
pop
mov
icebp
loope
arpl
pop
dec
mov
sti
jge
iret
dec
addr16
test
cli
and
dec
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
mov
sub
inc
pop
test
jle
xor
mov
and
dec
inc
insl
jmp
std
adc
test
repz
dec
cmp
xor
clc
cltd
xchg
popf
enter
pop
fs
pusha
or
sub
dec
mov
xchg
jno
repz
mov
add
sub
fwait
mull
sbb
mov
mov
aas
es
inc
mov
push
leave
les
jle
add
sub
add
fucomi
scas
rcll
pop
xchg
fidivs
lods
push
ret
xchg
pop
js
sbb
cmc
in
shlb
lods
mov
mov
orl
inc
xor
repnz
sbb
je
adcb
fwait
add
mov
aaa
das
adcl
mov
pop
daa
notb
std
mov
add
jo
dec
loopne
jo
adcl
test
lock
loopne
pop
dec
test
push
loope
mov
popf
sub
test
push
jl
stos
sti
jne
or
shrl
push
hlt
or
aam
push
jg
sbb
clc
out
jno
ficomps
dec
adc
imul
jbe
dec
adc
sbb
imul
pop
cmp
sub
cmp
daa
mov
xchg
sub
clc
mov
ret
clc
dec
cmp
dec
mov
test
sti
push
or
and
fildll
mov
scas
mov
daa
inc
std
mov
repz
scas
incb
push
lock
bound
loope
rorl
test
push
mov
stos
dec
adc
adc
in
fisttps
inc
sbb
inc
test
jne
inc
mov
push
cmp
hlt
in
fldcw
xchg
fisubrs
bound
lds
cmp
push
mov
loopne
pop
or
push
jp
cmpsb
or
push
xor
fisubl
aas
xchg
out
fidivs
idivl
xor
mov
pop
dec
enter
jb
repnz
arpl
test
test
and
adc
les
js
outsl
mov
lahf
sub
push
push
xor
sub
into
ffree
cld
into
mov
mov
adc
pop
adc
push
and
sahf
and
xchg
xlat
imul
or
add
pop
lods
mov
icebp
sbb
cmp
xor
push
and
lret
dec
cmp
mov
pop
push
ret
std
ja
xchg
popa
sub
inc
imul
testb
in
sbb
dec
adc
imul
jno
adc
inc
and
cmp
call
movsb
cs
mov
mov
pop
lea
mov
nop
shl
jo
xor
push
lahf
scas
lock
xchg
aad
popa
adc
data16
inc
pop
clc
cwtl
rcll
mov
inc
or
data16
cld
jbe
stos
lds
je
icebp
mov
js
pop
sahf
ds
loopne
push
cli
xlat
sahf
mov
aad
cwtl
cli
cmp
test
mov
xchg
ret
adc
push
push
scas
mov
xchg
add
mov
xchg
inc
loop
daa
push
shrb
inc
adc
cmp
add
imul
lret
pushf
push
rcrl
enter
jge
mov
mov
lods
dec
ja
imul
xchg
mov
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
push
jle
mov
mov
les
test
mov
bound
inc
hlt
dec
mov
and
popf
mov
add
out
push
scas
mov
and
dec
mov
xchg
mov
inc
hlt
push
cmp
gs
out
icebp
test
lea
nop
pushf
cmpb
add
lea
dec
mov
mov
out
loope
insl
cmp
gs
mov
popf
xor
imul
cwtl
fldcw
rcll
mov
mov
mov
int3
and
cli
cwtl
inc
int
and
int3
fbstp
xor
jp
insb
sub
je
jno
js
jle
hlt
inc
into
add
outsb
cli
rolb
fs
mov
aas
mov
out
add
cld
fcmove
xlat
movsb
imul
jle
cli
aaa
dec
jp
mov
lods
add
cmpsb
jo
outsb
pop
imulb
movsb
bnd
jne
mov
xlat
pusha
push
inc
sti
stos
dec
inc
inc
es
mov
xchg
push
xchg
stos
pop
fwait
aas
and
leave
sub
xchg
call
add
jmp
cmc
hlt
or
fcoml
outsl
sbb
mov
bnd
pop
rolb
inc
ljmp
movsb
int3
sbb
stc
dec
xchg
loopne
ficoml
inc
arpl
pop
int3
popa
insl
push
rcll
push
loop
pop
insl
jle
cli
mov
cmc
dec
jmp
xchg
test
into
mov
push
push
ffree
cmovge
adc
dec
xchg
mov
scas
and
test
inc
ds
out
mov
dec
gs
call
inc
mov
sbb
hlt
adc
lahf
incl
bound
popf
push
movsb
ljmp
inc
out
jmp
scas
or
shll
cmpsl
clc
jne
push
or
scas
pop
dec
mov
sub
out
xchg
gs
outsb
or
xchg
outsb
dec
stc
stos
in
or
mov
data16
cmp
mov
decl
cmp
ljmp
jnp
adc
pusha
cmp
or
pusha
jl
pusha
jmp
leave
or
add
xchg
fwait
xor
cmp
pop
cmp
xchg
fistps
cli
cli
aas
popf
fcmovbe
or
push
enter
ds
xor
sti
lock
push
cmpsl
testl
cltd
pop
jecxz
or
into
mov
je
cwtl
xchg
xlat
jnp
lahf
cs
shl
inc
stos
mov
or
aam
sub
pop
dec
gs
sahf
fcomi
and
xchg
xor
popf
push
aam
into
ja
sbb
ret
jle
xor
int
mov
in
mov
fsts
mov
xor
inc
imul
stc
testb
in
clc
jl
push
test
cli
int3
in
nop
lock
std
stc
scas
rcrl
movsb
xor
in
insl
jns
daa
xorl
test
stos
int
addr16
and
jg
bound
adc
shl
arpl
add
mov
mov
outsl
fistl
adc
aad
pop
dec
jecxz
cmpsb
fnclex
movsb
jle
cmp
and
push
xchg
ret
pop
ja
sbb
pop
fdivl
jle
dec
jnp
movsb
icebp
das
daa
in
bound
js
es
lret
jno
inc
push
sub
sti
push
sub
lea
inc
pop
xchg
and
lds
jl
push
add
ret
cld
mov
call
dec
and
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
jae
push
jle
movsl
push
sbb
hlt
stc
push
xchg
lods
pop
jae
xorb
es
cmpsb
das
sub
xchg
add
mov
mov
int
or
xor
test
stos
dec
push
jne
fldcw
sub
lahf
hlt
jae
rorb
mov
lds
push
rolb
out
popw
adc
xchg
rolb
dec
maxps
jnp
test
push
mov
ret
mov
roll
mov
lea
add
data16
fsubr
dec
cld
daa
les
push
dec
ljmp
stos
pusha
push
mov
mov
jns
lea
pop
mov
and
xchg
in
xor
fistl
mov
xorl
sub
mov
lret
addb
xor
and
xor
cwtl
je
mov
adcl
aas
shl
jg
scas
dec
dec
or
movsl
sti
adc
mov
out
pop
out
jne
xor
xchg
fmull
daa
ret
and
test
mov
push
test
es
push
pop
pop
sbb
addb
push
push
test
adc
xlat
xchg
add
js
mov
repz
push
mulb
imulb
in
xchg
xlat
adc
dec
add
fdiv
imul
hlt
or
loope
icebp
mov
cmpsb
pop
sbb
test
mov
aam
rorl
jae
mov
jne
or
je
mov
mov
es
fs
sub
je
mov
mov
mov
sub
add
add
mov
xchg
notl
fldt
adc
sti
dec
scas
xchg
stos
push
aas
mov
or
mov
mov
inc
and
hlt
push
out
xor
cmp
rolb
push
lds
iret
xchg
adc
testb
or
cmp
sahf
filds
add
pop
aam
and
pop
and
cmp
test
lahf
mov
jg
pop
inc
dec
add
popa
loop
test
adc
and
xchg
in
call
out
jge
aad
pusha
push
sub
add
lahf
fistl
pop
fisubrl
mov
fdivrs
popa
sub
sbb
stos
je
nop
loopne
add
fldt
mov
and
loop
mov
in
addb
mov
mov
or
aam
cmpsb
lods
mov
jnp
arpl
popf
sub
pand
cld
mov
add
out
sarb
mov
in
pusha
inc
push
or
jle
test
mov
push
mov
mov
cli
test
andb
aas
push
in
dec
ret
rolb
pop
ljmp
sbb
mov
stc
cld
ss
das
int
dec
or
sub
jne
mov
test
sarb
push
jecxz
daa
gs
cmp
xchg
stc
into
fsubrs
scas
repz
lock
sub
sbb
push
jle
cmp
pop
lcall
repnz
pop
cmp
sub
adc
add
orb
movsb
sub
out
ja
cmp
test
mov
les
in
xchg
fidivs
sbb
add
add
mov
mov
out
mov
pusha
leave
inc
mov
sbb
jle
mov
sahf
jo
movsb
aaa
jmp
and
cli
add
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
cmp
mov
in
pusha
iret
repz
jge
lret
lahf
loop
and
jne
push
mov
mov
push
mov
jmp
push
sub
fsubl
dec
mov
xchg
ret
cltd
mov
mov
jo,pt
int
push
mov
ds
pop
cwtl
loope
mov
fistpl
jle
ret
and
ret
sub
pop
gs
add
dec
lcall
sub
adc
push
dec
je
cld
xchg
cmpb
rol
stos
inc
daa
mov
stos
or
mov
scas
and
inc
out
les
shlb
add
push
ss
rcl
dec
adc
in
lods
popf
andb
push
movsb
insb
add
into
scas
notb
or
inc
dec
aam
scas
sub
push
sbb
aad
xor
mov
insb
imul
fisubrl
addb
jecxz
xchg
sub
pop
bound
cmpsl
insl
popa
outsl
xchg
fnstcw
lock
add
dec
aad
aad
orl
sbb
mov
test
push
xchg
popf
sbb
cmpsb
daa
push
jl
xor
data16
xchg
test
mov
pop
or
push
lods
incb
pop
rcrb
mov
das
int3
rclb
mov
fwait
loopne
ljmpw
cmc
xrelease
mov
push
scas
shr
xlat
out
lea
jecxz
pop
int
or
test
in
repz
xchg
out
call
insb
cs
imul
rclb
cmpl
mov
jbe
cmp
ja
xor
lds
icebp
xchg
bound
xor
adcl
xor
mov
andb
lock
fwait
xor
or
fstpl
shlb
les
adc
push
test
loopne
inc
add
mov
int
jmp
xor
mov
mov
rcr
cltd
dec
jno
dec
cmove
test
fstp
xor
push
insb
or
jmp
pop
inc
pop
inc
cmp
negb
dec
xor
je
cmp
cmp
call
mov
cmp
cmp
xlat
sbb
mov
jg
mov
rcll
cmpsl
push
cmpsl
in
sbb
fdivl
outsb
pushf
cmp
push
lods
pushf
sbb
push
adc
imul
lods
jg
jae
or
sahf
sti
lret
std
xor
push
movsl
dec
or
lret
pushf
cmp
in
std
and
jg
mov
repnz
sbb
sbb
jle
out
mov
insl
mov
cmp
rcl
mov
inc
and
or
scas
inc
mov
scas
pop
mov
and
js
mov
movsb
or
pop
push
ret
popa
incl
stos
push
sub
dec
call
xlat
into
stos
in
pop
xor
es
call
hlt
jmp
pop
and
test
push
mov
int3
mov
loopne
mov
lcall
push
dec
rcll
pop
lock
mov
dec
sbb
scas
push
test
add
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
mov
push
sbb
sub
dec
dec
push
int3
scas
test
add
push
push
sub
jne
fisubl
push
rolb
push
into
push
cli
jo
inc
xchg
fisubl
movsb
pushf
xchg
aad
popa
mov
jle
mov
stos
icebp
push
push
inc
inc
dec
enter
cmp
push
add
xor
stos
rcll
jae
aad
mov
xchg
daa
fbld
adc
shl
and
sbb
mov
ret
or
cwtl
xor
dec
addr16
push
movsl
cli
cmp
xor
pop
lahf
out
mov
mov
add
sbbb
push
enter
add
jae
stc
call
out
mov
xor
out
cmc
aaa
lods
pop
and
insl
dec
insb
jle
jno
ficoms
test
pop
mov
jmp
mov
add
inc
cmp
or
mov
fistpll
cmp
push
xchg
cmp
jecxz
and
cs
dec
test
xchg
adc
loopne
pop
jns
sbb
xor
lcall
inc
jge
or
inc
lahf
sub
pop
cmp
pop
dec
mov
dec
in
cmc
adc
lods
push
mov
jl
or
jb
mov
pop
lret
mov
fnstsw
jno
jo
ja
shll
lods
and
test
mov
test
loop
jmp
mov
jmp
push
arpl
arpl
aad
jp
mov
jge
add
dec
mov
jns
fdivrl
aam
cs
cld
outsl
enter
sahf
fcoml
repnz
mov
push
jg
push
push
push
jbe
dec
sar
es
aaa
ja
push
pop
ljmp
cmpsl
inc
pop
mov
divb
mov
xor
dec
lods
test
mov
xchg
sub
mov
fdivl
and
pop
push
pop
xor
cmp
lahf
int
lret
outsl
adc
and
dec
imul
mov
jl
sti
fstl
scas
scas
cld
jmp
adc
xorl
in
pop
and
cld
outsl
push
cltd
nop
sbb
lds
mov
and
leave
inc
jne
pop
mov
shll
mov
lcall
add
test
xor
push
sbb
ljmp
int3
testb
jge
add
jnp
dec
in
fistps
fdivl
ja
fstpt
int3
int3
outsb
push
lods
jmp
stc
adc
out
out
mov
mov
adc
jbe
loop
mov
stos
dec
outsl
mov
fildl
cmp
xlat
sub
loopne
lahf
in
push
sbbb
jle
cmp
lcall
inc
repz
repnz
pop
add
stos
mov
xor
add
test
rolb
fldenv
arpl
cmp
inc
dec
lahf
jno
and
movl
pop
popa
imul
dec
fisubs
push
int
inc
pushf
cmpsl
rcr
repz
xchg
stos
mov
enter
or
lds
je
xor
xor
jp
or
into
or
push
sbb
jle
hlt
pop
test
and
arpl
ljmp
repz
scas
inc
fmulp
leave
arpl
pusha
or
cld
inc
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
andb
sbb
nop
loopne
xchg
lcall
or
std
fadds
int3
jnp
outsl
int
and
popa
adc
jecxz
push
hlt
pop
outsl
rcll
test
dec
scas
lds
and
mov
xchg
jg
imul
xchg
adc
push
pop
jle
cmpsb
fists
ds
push
jno
add
jle
and
std
ljmp
mov
movsl
dec
mov
jecxz
push
mov
aas
mov
lods
adc
leave
add
adc
insb
dec
push
sbb
jge
out
mov
mov
or
popa
or
push
push
xchg
add
in
mov
inc
and
push
pusha
cmpl
loopne
movsb
stos
ret
sbb
call
jp
xchg
test
nop
pop
mov
sub
imul
inc
out
pop
jge
cld
sub
out
xchg
imul
pop
xchg
bound
daa
cmpsb
pop
push
sti
repnz
sti
inc
xchg
jno
add
std
sbb
xor
loop
sbb
test
xorl
ja
jne
test
mov
push
ror
arpl
xchg
pop
mov
mov
fsts
jmp
movb
jnp
xchg
fs
fwait
test
xchg
test
out
sub
dec
mov
pop
fcom
aam
sub
inc
and
pop
or
adc
cmp
pop
adc
lret
mov
mov
push
mov
mov
xor
jns
dec
xor
pop
pusha
test
cmc
mov
ds
dec
xchg
mov
mov
xchg
add
add
ja
popa
push
sbb
and
lea
sbb
mov
enter
or
mov
mov
lcall
cmp
pop
insb
outsb
push
xchg
cmp
xchg
mov
loope
fcomps
ja
lcall
inc
inc
mov
lahf
mov
pop
inc
orl
icebp
add
sbb
pop
sahf
lret
xchg
inc
xor
mov
or
pop
mov
or
out
sbb
mov
popa
push
sub
sub
inc
pusha
stos
push
sub
pop
push
in
xchg
ret
mov
stc
loope
xchg
sarl
xor
shll
sti
jmp
call
fdivs
jg
cmp
push
dec
bsr
stc
dec
mov
jmp
jo
dec
push
daa
jp
sbbl
inc
sbb
in
mov
loopne
shlb
jl
ficoms
sub
mov
xor
lahf
shl
add
xor
jmp
jo
cmc
fidivrs
dec
xchg
inc
out
pushf
xor
inc
or
pop
mov
xchg
in
aas
inc
lea
push
fs
xor
add
cmp
mov
std
inc
mov
add
nop
inc
dec
pop
dec
add
pop
stos
sub
pop
xchg
rolb
clc
cmc
jle
dec
push
mov
pop
jno
and
push
and
inc
adc
mov
xchg
and
push
lods
lock
nop
add
mov
pop
xchg
dec
in
leave
inc
cmp
mov
mov
jnp
lcall
mov
fiaddl
add
mov
pop
cltd
cmpsb
lock
addr16
lds
mov
mov
cmpsb
mov
push
jnp
loopne
xchg
movsl
lret
push
sbb
or
sarl
jg
loopne
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
xchg
jg
pop
mov
sbb
mov
cmp
js
outsb
mov
frstor
lcall
add
es
fucomp
xchg
mov
adc
xchg
xchg
js
lret
add
repz
call
sbb
jge
mov
inc
dec
and
mov
push
sub
pop
or
insb
clc
daa
cmp
jae
lods
imul
nop
xchg
sarl
call
and
mov
pop
mov
pop
addb
andl
jb
rcrb
sub
lcall
nop
or
dec
clc
sub
mov
test
mov
add
lea
ss
dec
or
dec
data16
sbb
push
rolb
xchg
insb
test
cmpsb
imul
aaa
jne
xlat
jb
shl
jae
adc
sbb
mov
mov
xchg
mov
dec
fwait
stc
mov
repnz
push
rolb
pop
outsl
ret
xor
stc
jno
out
xchg
dec
int3
imul
jp
test
loopne
out
mov
in
testl
cmc
pop
adc
push
sbb
mov
pop
clc
dec
aam
test
cmp
xchg
jne
mov
xor
pop
sub
pusha
pop
xchg
inc
dec
nop
mov
jo
dec
jp
or
fnstenv
shrl
jmp
mov
addr16
push
out
test
rcrb
cmpsl
adc
mov
jae
push
lret
and
inc
mov
mov
dec
jne
ljmp
psllw
xorl
sub
addb
aam
shlb
jp
sbb
sbb
clc
ds
xchg
xchg
or
cmp
add
int3
mov
and
sub
icebp
jmp
arpl
push
je
push
mov
push
out
inc
jns
add
jbe
sbb
add
or
cmp
fistpl
int3
mov
cmpsb
mov
fiadds
loopne
cmpsl
sbb
fldt
adc
andb
leave
push
mov
mov
inc
pop
pop
ds
adc
fwait
push
inc
into
jle
jae
cld
stc
fwait
jp
jmp
and
jae
mov
xchg
lcall
mov
sub
push
sbb
sbb
idiv
dec
jmp
mov
cs
cwtl
lds
xchg
inc
orl
or
push
dec
jp
xchg
lea
testl
cmp
jo
add
and
jb
mov
push
add
pop
jb
or
stos
xor
test
xchg
pop
test
pop
loopne
test
xchg
outsb
mov
jmp
andl
and
xor
fstps
add
pop
pop
fbld
add
xchg
xchg
pop
xor
shll
fistpll
movsb
sbbl
pop
add
ret
test
in
sub
mov
lods
ja
xchg
cmp
pop
mov
call
pushf
dec
push
sahf
lret
jg
pop
mov
xchg
adc
filds
lcall
in
pop
mov
mov
rorl
xchg
lret
dec
xchg
pop
leave
mov
lret
shr
popa
xchg
mov
jmp
out
shll
ret
jno
imul
arpl
cltd
jl
inc
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
push
jno
push
adcl
sbb
jp
sub
insl
sarl
cmpb
mov
test
jp
jecxz
inc
cmpsl
inc
cld
push
dec
insl
nop
jg
mov
lret
fstpl
mov
sub
rcrb
xchg
push
in
loopne
cmpsl
mov
xor
and
add
dec
xchg
mov
rorl
xchg
jge
inc
inc
mov
jne
inc
push
fsub
pop
inc
aaa
lahf
inc
jge
in
dec
sub
pop
loopne
cmp
out
sbb
lods
iret
scas
push
push
mov
pop
jae
sahf
std
mov
daa
into
test
fnstenv
dec
jg
cmp
pop
loope
cwtl
adc
jg
pop
xchg
ret
push
pop
adc
aas
jae
adc
sarl
pop
scas
test
mov
and
mov
or
xor
cmp
subb
fmull
notb
and
or
xor
fs
pop
lods
call
push
pop
sti
mov
out
mov
lea
sbb
adc
or
jo
xchg
and
dec
in
sub
fwait
in
dec
shlb
mov
mov
mov
shll
jne
pop
std
push
sarb
rorb
roll
cmp
xchg
test
push
mov
seto
mov
mov
mov
mov
test
test
popa
cmp
les
in
in
lret
arpl
mov
rcrb
loop
cmp
and
adc
pop
cmp
push
fmull
xor
xlat
dec
push
lods
stos
xor
decb
shrl
sbb
iret
cmp
loope
out
cmp
test
mov
push
mov
repnz
adc
xchg
stos
inc
pushf
fcom
mov
pop
and
push
cmp
js
aad
fcmovb
cmpsb
mov
xor
xchg
push
loopne
rcrb
sub
test
das
fsub
sbb
mov
inc
pop
ja
fbstp
es
repnz
data16
lods
mov
out
cmpsl
fsubs
jno
stc
push
sbb
mov
cmpsl
leave
clc
pop
sti
repnz
jge
outsb
test
movsb
sbb
nop
mov
mov
dec
sub
push
movzbl
mov
in
cli
jne
and
sbb
xor
mov
add
shl
movsb
mov
mov
dec
add
mov
xor
inc
das
aaa
pop
in
cmp
insb
outsb
xchg
mov
pop
fsubs
andl
das
push
sbb
scas
shrb
testl
jne
mov
lds
pop
pop
dec
imul
dec
pop
mov
add
sbb
cmc
xor
jl
or
fdivrp
in
aaa
mov
add
call
popl
and
dec
push
fsts
loopne
add
sub
cs
notb
pop
sbb
adc
movsb
int
cmp
mov
loope
daa
pop
xchg
mov
sub
sarb
or
fcomp
add
dec
push
xor
mov
in
in
js
dec
xchg
in
shl
into
ja
pop
lods
popf
xor
fwait
sub
dec
xchg
cmpsb
mov
cmp
xor
add
xor
dec
call
aam
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
pop
mov
cmpsl
jns
sbb
lahf
das
sbb
inc
push
pusha
ljmp
sub
stos
or
insl
add
jo
add
pop
scas
mov
jb
or
inc
xor
cmpsb
js
cmp
push
loopne
call
add
rolb
mov
xchg
rcrl
dec
ljmp
pop
pop
dec
mov
cmp
push
out
imul
incb
cmpsl
or
add
pop
mov
iret
popf
clc
lret
stc
push
insl
inc
pop
lock
insb
in
pop
adc
push
or
idivl
dec
mov
xor
sbb
xchg
roll
jo
dec
negb
or
jo
repnz
and
xor
shll
es
scas
decb
out
pop
sub
idivl
dec
test
xorb
add
test
jae
cltd
addr16
dec
cs
inc
ljmp
sub
sub
movsl
mov
jp
xchg
rolb
lret
pop
push
lods
loopne
das
mov
push
adcl
lahf
ljmp
cld
aad
cltd
stc
mov
daa
int3
sar
dec
mov
dec
leave
mov
and
inc
fadds
mov
mov
es
inc
out
insb
js
mov
inc
mov
aad
mov
inc
into
arpl
pop
test
dec
stc
inc
test
jmp
inc
movb
fbld
out
jb
call
dec
int3
fdivrs
xchg
push
jno
sub
add
mov
stos
xor
pop
pop
mov
std
sub
sub
pop
xchg
dec
inc
inc
int
mov
push
inc
xchg
mov
stos
add
out
mov
mov
or
dec
push
clc
xor
shlb
sub
loope
sub
leave
pop
or
and
aam
sarl
stos
and
dec
mov
je
out
pushl
hlt
lds
adc
xor
sbb
push
mov
inc
js
add
iret
mov
xor
add
dec
push
in
maskmovq
ret
add
scas
not
adc
imul
cmp
cmpsb
cmp
or
fdivrs
mov
ss
lret
or
inc
mov
cmp
aam
mov
sbb
testl
iret
loop
push
das
loope
jmp
and
hlt
sub
mov
xor
inc
scas
rol
sbb
cmpsl
push
mov
les
lds
adc
dec
subb
aaa
sbb
outsl
aad
in
mov
sub
cmpsl
xchg
jns
add
in
or
push
enter
push
cmp
hlt
add
xchg
ss
pop
mov
aam
mov
gs
shl
cmp
inc
mov
or
aam
lods
jno
push
jecxz
jle
lcall
inc
mov
xchg
lock
int
add
shrl
xlat
shrl
movsl
lods
in
add
int
pop
xchg
pop
pop
out
fdivr
orb
imul
clc
outsb
push
pop
mov
xor
mov
imul
sarb
xor
mov
mov
call
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
mov
push
sbb
andb
aad
jae
jb
xchg
mov
popa
xchg
sarl
nop
adc
insb
push
fiadds
es
mov
mov
popa
push
or
leave
sub
pushf
stos
push
pop
out
ds
loope
cmp
les
adc
mov
and
xor
cs
mov
jl
fs
jle
pop
jl
xor
test
out
add
cmc
pushf
mov
dec
fisttpll
bound
cmc
nop
mov
jne
rorb
mov
pop
je
sub
pop
jmp
movsb
or
dec
scas
call
sbb
fs
aad
xchg
jmp
jp
dec
std
jno
into
leave
lock
inc
dec
daa
or
pop
xor
mov
pop
add
push
ss
pushf
dec
mov
loopne
adc
mov
xlat
daa
jo
mov
arpl
fidivl
out
mov
ja
dec
xchg
cltd
fmull
mov
ds
ja
leave
mov
pop
xlat
xchg
icebp
pop
lret
or
out
lcall
push
mov
pop
pop
inc
lock
lods
insb
xchg
mov
cmpsb
loop
xchg
imul
repz
popf
jnp
adc
enter
push
xchg
jne
andl
les
adcl
jae
rorl
icebp
loopne
mov
inc
dec
test
popf
mov
icebp
push
cmp
std
inc
push
mov
pop
mov
cmpsb
adcl
xchg
push
mov
dec
es
mov
mov
push
jne
inc
mov
sub
xchg
xchg
lcall
push
mov
dec
inc
lret
fdivl
push
and
adc
xchg
es
mov
sahf
movsb
and
ficoml
push
sbb
pop
mov
ret
lcall
insb
loope
pop
fisubrs
pop
lods
loopne
mov
push
bswap
add
jmp
std
mov
push
or
xor
jl
ljmp
pop
addr16
mov
outsl
cwtl
jae
push
adc
push
jl
pop
bound
filds
mov
fildll
scas
insb
addr16
xor
dec
test
rorb
mov
sbb
das
xorb
js
mov
pushf
dec
xorl
fistps
dec
push
mov
add
push
inc
cmp
xor
sbbl
xchg
les
dec
jecxz
vmovupd
clc
les
or
test
inc
xor
decb
jle
dec
jecxz
dec
stos
push
adc
pop
mov
push
std
jbe
mov
rcll
dec
call
push
in
add
jp
adc
cmp
and
sub
frstor
dec
xchg
test
push
rol
and
sub
outsl
into
fld
adc
sub
sti
int3
adc
push
lock
pop
jp
fwait
movsb
imul
mov
pop
jl
cmc
jle
ret
mov
mov
inc
cs
cmp
mov
fimull
lods
xor
sub
sub
into
jle
fbstp
jmp
sbb
fdivrl
jne
lret
jnp
std
mov
dec
xor
dec
shl
sub
shlb
out
pop
sbb
and
mov
movsb
jle
int
mov
fsubrs
or
rclb
mov
xor
test
je
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
ja
jg
out
imul
mov
ljmp
mov
aam
push
sbb
in
testb
cwtl
add
mov
dec
jnp
sbb
xchg
sub
out
pop
push
sbb
test
cli
dec
mov
fidivl
call
pop
mov
scas
cmp
cltd
rcrl
nop
xchg
popa
jg
cli
cmpsb
push
loope
jp
jae
sti
lahf
jp
hlt
sub
int
mov
leave
and
xchg
loop
jns
cmp
scas
cltd
mov
fucom
scas
pop
add
jmp
push
xor
lock
push
xchg
fmuls
xor
arpl
dec
pushf
adc
jb
ret
movsl
ds
mov
jae
xor
mov
adc
sahf
or
js
lahf
stc
push
or
push
inc
and
xchg
mov
data16
add
enter
push
insb
jbe
adc
mov
daa
cmp
xchg
adc
mov
inc
aam
cmp
sarl
and
pop
sbb
int3
jbe
sub
movsl
in
stos
add
aaa
icebp
divb
faddl
cli
mov
mov
push
popa
ds
leave
lret
popa
bound
test
inc
xor
push
outsb
and
aas
sub
mov
nop
ror
mov
inc
cmpsl
out
jecxz
jno
dec
das
jmp
or
arpl
mov
cmp
lea
clc
inc
aaa
inc
ret
push
dec
xchg
xor
sbb
int
and
cmpb
or
add
jo
jmp
push
into
xor
push
data16
popf
push
inc
test
mov
mov
pop
xorb
lds
lods
out
in
andl
cmpsl
out
jecxz
pop
sub
sub
aad
add
mov
test
xchg
mov
sub
shl
scas
mov
fsubrs
ret
jb
add
movsl
movsb
mov
adc
ss
xchg
lcall
repnz
cmp
jo
enter
inc
mov
mov
or
jl
popa
lods
fwait
mov
fidivs
insl
lds
shrl
mov
or
imul
ret
pop
out
and
and
insl
int
sti
adc
push
cwtl
lds
pop
jecxz
daa
sahf
fldenv
in
lods
insb
push
inc
push
subl
xchg
xchg
sub
cld
cs
sbb
nop
dec
fwait
adc
jmp
inc
int3
adc
cmc
and
mov
or
dec
test
push
xchg
cld
adc
jmp
jo
pop
cmp
nop
notl
mov
mov
sti
jle
pop
fwait
mov
popf
cltd
mov
mov
pop
cmpsb
iret
and
adc
aad
add
sub
stos
xor
pop
add
inc
mov
rclb
add
sbb
in
insl
pop
lcall
int3
jmp
faddl
movsl
rclb
bound
jae
push
mov
pusha
dec
mov
push
cmc
mov
sbb
pop
cmp
stos
loopne
dec
inc
xchg
push
mov
pushf
fsts
loop
iret
test
mov
inc
push
lret
daa
or
stos
ja
icebp
mov
mov
jecxz
std
aam
push
ljmp
xor
dec
mov
add
hlt
sub
push
popa
mov
or
lds
mov
mov
sbb
rorl
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
inc
sub
dec
adc
loope
sarl
pop
jns
ror
out
dec
cmp
lods
jo
mov
cwtl
mov
scas
fs
fcom
mov
lar
inc
add
sub
xor
cmp
mov
jge
xchg
jo
insl
cmp
arpl
mov
or
scas
adc
mov
inc
dec
push
nop
cmpsb
pop
fnsave
lods
arpl
cmp
scas
push
testb
mov
fs
sti
mov
ss
mov
jl
psadbw
ror
in
jns
cmp
cmp
sbb
fidivs
cmpsb
xchg
push
sbb
popf
adc
inc
jae
fdivs
add
xchg
or
adc
mov
inc
and
mov
mov
or
rol
movsl
iret
lret
ss
jle
je
pop
or
xlat
jl
idiv
rcl
pusha
fcmovbe
outsl
sbb
sbb
mov
pop
aad
cmpb
inc
not
adc
inc
clc
std
xchg
push
xchg
jmp
ret
xor
fwait
repnz
jg
shlb
pushf
gs
sbb
jns
push
shlb
icebp
sub
orl
into
lea
inc
addb
iret
test
lret
add
ret
add
call
push
jp
push
notl
lock
adc
xlat
std
cwtl
stos
mov
mov
mov
pop
mov
xchg
xlat
das
fistpl
cli
mov
fdivrs
mov
daa
dec
or
lock
and
mov
insl
add
lahf
adc
std
pop
sbb
loopne
data16
push
cli
adc
pop
jmp
add
aaa
inc
dec
notl
pop
inc
adc
int
or
sub
jp
out
cld
cld
std
dec
inc
and
cmp
nop
popa
adc
xchg
sub
push
lahf
iret
data16
dec
gs
shlb
pop
xchg
orb
fsubrp
stc
lods
enter
pop
dec
icebp
fbld
sub
rcll
pop
push
dec
jecxz
mov
fimull
dec
nop
fsubrs
adcb
pop
xor
and
sbb
jl
jo
push
mov
scas
mov
sub
jl
or
sbb
inc
jns
shrl
xor
pop
mov
bound
pop
jge
pop
stos
iret
or
cmp
mov
mov
jnp
and
repz
lret
xchg
adc
dec
lds
test
push
fisubrs
xchg
add
les
xor
jo
iret
aas
in
push
movsb
lcall
push
push
imul
xchg
push
movsb
push
push
and
jns
sub
mov
cmc
aas
jle
push
xchg
into
jp
jmp
rclb
sarl
xchg
jne
mov
and
daa
ss
inc
mov
ja
scas
sbb
pop
or
out
lock
lret
push
pop
jle
push
jmp
xchg
out
and
jae
xchg
mov
pop
dec
sbb
inc
loop
rcll
stos
outsl
and
push
imul
dec
test
addl
mov
pusha
push
mov
in
xchg
add
jle
mov
loop
push
int
xor
cmp
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
cmp
stos
ss
push
sbb
inc
sub
jle
test
incl
stc
inc
mov
mov
jl
cmp
in
das
xchg
dec
lret
jmp
xlat
ud1
and
cmp
and
xchg
int
ja
loopne
das
xor
rcrl
push
insb
cltd
or
cmp
pop
dec
outsb
push
push
mov
outsb
mov
sub
mov
lahf
push
loope
mov
push
fstpl
sub
arpl
lods
mov
cmp
div
aas
repnz
mov
dec
dec
in
cmp
das
fisttpl
cmpsb
ret
insb
or
add
add
inc
jp
ret
sub
jae
idiv
lods
popf
xor
fsubs
in
or
repnz
jb
addl
add
pop
idivl
insl
and
mov
in
fbld
sbb
lcall
int
push
cmp
repz
add
dec
pop
dec
testl
push
sbb
jl
ljmp
mov
jae
dec
jbe
xlat
inc
push
cmpsb
sub
lret
daa
imul
test
add
or
push
mov
test
pop
call
mov
test
int3
inc
mov
inc
shl
xor
rcr
sub
rcrl
sbb
inc
inc
fsubr
nop
mov
mov
data16
loopne
clc
inc
out
jo
jp
data16
adc
inc
dec
test
sti
fnstenv
dec
adc
inc
daa
and
jp
pop
outsl
jge
and
addr16
into
sbb
push
inc
pop
inc
mov
jno
das
xorb
pusha
in
loop
or
xlat
imul
ret
xor
inc
lods
sub
ljmp
add
cmpsb
mov
dec
xor
aas
push
aad
lahf
push
lds
lret
sub
ja
call
or
sub
and
cmp
adc
sub
pushf
ljmp
cmp
push
testl
push
shll
mov
or
xchg
dec
into
or
mov
jo
sbb
loop
push
fildl
sub
sub
in
dec
fmuls
add
dec
out
clc
dec
icebp
and
scas
mov
pop
xlat
or
xchg
push
es
imul
cld
stos
push
xchg
xchg
push
cld
push
sub
dec
sub
dec
xchg
stos
sub
pop
xchg
inc
divb
inc
pushf
and
movsb
into
lret
dec
or
fucomi
dec
insl
mov
xchg
xor
jl
dec
aas
pop
inc
mov
or
stos
roll
lcall
push
rcl
xchg
add
jo
adc
dec
hlt
out
aad
or
mov
xchg
outsb
lods
test
stos
fldenv
sub
xchg
xor
nop
mov
into
fwait
add
add
loopne
xor
sti
mov
jmp
leave
xchg
xor
mov
jg
paddusb
adc
popf
and
repz
mov
add
cmpsb
xchg
sub
push
mov
lock
imul
sahf
push
subl
fidivrl
out
fwait
lahf
cmp
mov
movsl
lods
push
mulb
shrl
sbb
jge
bound
adc
jge
jge
or
push
or
bound
adc
ljmp
and
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
shll
push
push
push
sbb
xchg
es
in
lock
jmp
xchg
fst
mov
aaa
fdivrl
mov
cltd
mov
adc
adcl
dec
daa
insb
fadds
jg
sarl
dec
add
out
push
ja
rcrb
cmp
mov
dec
inc
push
test
insl
push
ds
cmp
xor
mov
inc
add
jb
mov
jno
repnz
ljmp
imul
xor
add
or
sbb
xchg
jno
pusha
inc
insb
mov
sub
aam
daa
cmp
dec
out
dec
les
add
mov
adc
lods
add
insl
mov
pop
std
xchg
mov
movsb
dec
add
jns
in
fisubs
dec
cmp
mov
outsl
dec
push
and
push
mull
insb
movsb
into
push
mov
stos
int3
dec
xor
pop
jbe
cmp
xor
sbb
or
and
mov
js
fistpl
mov
push
mov
sti
dec
std
xchg
leave
and
push
xor
cmpsb
orb
scas
dec
xor
jp
mov
js
jmp
das
add
lcall
push
inc
mov
fidivrl
loope
xchg
pop
lret
pop
lds
out
or
adc
pop
xchg
loope
sarb
ret
pop
mov
add
and
inc
fisttps
or
clc
into
das
int3
insb
repz
out
cmp
shrl
cli
mov
add
je
icebp
mov
int3
mov
mov
mov
and
jge
ss
es
adc
fidivrl
pop
push
mov
sbb
jmp
out
pop
cmp
pop
jbe
or
mov
mov
ljmp
rol
adc
mov
in
out
lcall
push
xchg
xchg
fstpt
stc
lods
in
sub
popf
cwtl
jae
mov
sarb
mov
mov
cmp
inc
pop
push
repnz
insl
or
clc
mov
sbb
adc
add
dec
xor
push
sub
out
imul
cmpb
lret
inc
sub
cmp
enter
divb
xchg
pop
mov
xor
insl
cmpb
aam
rcll
mov
push
scas
pop
je
fistl
lcall
jbe
mov
arpl
xor
pop
push
add
iret
xchg
loop
xor
or
ljmp
add
int
push
imul
sarb
shlb
into
add
xchg
adc
xor
scas
cmpsl
test
test
adcb
xor
pusha
inc
fnstenv
aam
into
sbbb
add
xchg
cmp
pop
pop
into
pop
xchg
xor
adc
lods
fcmovnb
inc
hlt
cwtl
stos
add
ss
cmp
push
pop
cmp
sbb
inc
adc
pop
xchg
cmp
imul
jnp
add
dec
out
lahf
mov
aad
test
stos
add
inc
adc
or
add
out
push
mov
arpl
loope
push
das
mov
jmp
mov
ja
aad
int3
and
cmc
dec
arpl
xchg
mov
and
lret
jmp
lcall
insl
push
pushw
pop
or
xchg
cmp
stos
adc
jge
xor
pop
out
fadds
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
mov
dec
push
sbb
jae
lret
repnz
add
les
or
sub
xor
adc
fistpll
fxch
xchg
jg
dec
pusha
push
jge
cmpb
mov
push
or
jne
push
mov
mov
cmpsb
push
scas
xchg
loop
xchg
jecxz
subl
lock
sub
jno
sub
push
pop
lea
xchg
aam
fs
lods
xorl
adc
fldenv
test
push
test
outsb
sub
mov
test
xchg
jmp
call
sbb
je
jl
or
loopne
cltd
dec
fists
cld
push
mov
rorl
and
daa
mul
in
cmp
faddl
sarl
mov
mov
icebp
add
sbb
test
dec
dec
clc
push
sub
cmpsb
pop
les
call
dec
or
push
dec
cmp
sbb
push
icebp
add
sbb
and
jno
flds
fs
add
js
jmp
xchg
adc
adc
ss
imul
inc
and
sbb
xchg
sub
push
fists
add
les
jns
jno
cli
adc
inc
test
dec
cmpsl
xor
or
dec
inc
dec
lods
pop
das
sub
cmp
jl
xor
xchg
or
leave
sbbb
pop
hlt
test
std
nop
xlat
push
add
mov
xchg
call
or
popa
and
adc
ds
cmp
sarl
std
and
xor
add
fwait
out
push
leave
das
pop
nop
mov
bound
mov
out
sub
pop
test
lods
or
repz
dec
pop
orb
xor
pop
aas
dec
lcall
sbb
popl
out
fnsave
pop
pop
and
mov
test
das
fidivs
inc
pop
test
pop
daa
imul
in
enter
imul
mov
stos
ret
mov
and
mov
outsb
movsl
enter
xchg
mov
cmp
dec
lret
mov
data16
inc
fs
out
insl
loope
sbb
dec
or
lds
sbb
pop
insb
mov
out
ljmp
mov
mov
stc
jmp
inc
imul
fs
je
push
fiaddl
aas
xchg
xchg
mov
ss
scas
xchg
rcll
add
xlat
pop
sbb
sbb
and
pop
les
sbb
imulb
mov
mov
orl
mov
mov
daa
pop
insb
icebp
dec
aam
outsb
ss
fbld
mov
cli
mov
arpl
inc
lock
pop
cmp
es
sub
cwtl
dec
outsl
cmp
sbb
aam
jp
test
ret
test
jecxz
mov
dec
fsubs
and
xchg
lss
incl
test
pop
add
jno
mov
xor
xchg
push
in
and
pop
and
outsb
adc
mov
mov
pop
jbe
cwtl
test
xlat
and
rcrb
jb
cwtl
ljmp
add
aas
shll
inc
mov
int3
sub
fwait
gs
shll
movsl
xor
ret
les
cltd
lret
fsubl
push
or
in
test
fbstp
jne
aad
xchg
popf
out
in
enter
sti
aas
dec
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
add
push
sbb
imul
add
jno
popf
jb
and
sti
mov
aad
fwait
inc
add
jne
mov
xor
scas
mov
stos
add
and
arpl
push
dec
movb
into
dec
jns
test
int3
mov
pop
test
pop
lret
dec
mov
addr16
pop
ret
je
int
fnstenv
xor
xor
jg
loope
pushf
xor
push
mov
pop
out
adc
mov
mov
jge
add
loop
adc
mov
loopne
cli
jecxz
sahf
mov
or
xchg
ljmp
sbb
mov
int
outsb
and
mov
xchg
lods
mov
loope
push
scas
add
lret
adc
xor
lret
insb
adc
sbb
ret
outsb
sbb
mov
xchg
aad
mov
stos
out
arpl
inc
incl
shrb
or
imul
dec
aas
sub
bound
pushf
mov
or
mov
aam
pop
dec
int
xor
stos
data16
add
adc
subl
mov
nop
clc
cli
dec
mov
jecxz
mov
outsl
mov
jecxz
test
fists
sti
adc
fldcw
xor
dec
mov
fld
dec
fmuls
jmp
out
pop
pop
mov
or
ffree
iret
inc
fwait
sub
dec
test
ret
hlt
and
mov
out
pop
mov
scas
fmull
add
je
sub
cmp
dec
test
repz
cli
test
jecxz
adc
std
in
mov
jno
cmp
in
fldenv
lds
mov
sbb
xchg
out
test
mov
stos
mov
mov
and
sahf
mov
mov
cmp
xchg
sub
cmp
xchg
lret
mov
and
mov
in
and
push
lcall
inc
inc
lahf
and
shl
jo
sub
jo
mov
push
mov
rcl
repnz
pop
inc
nop
push
out
or
lds
sarb
inc
int
sbb
sub
adc
cmc
jle
ret
adc
adc
mov
jns
xor
dec
mov
mov
pop
pop
les
negl
aaa
mov
xchg
push
ret
outsb
cmp
jle
cmovg
mov
into
mov
sbb
xor
out
ret
jns
mov
mov
cs
pop
sti
sahf
inc
ss
pop
jno
insl
cld
inc
fisubrl
repz
xchg
addl
add
mov
mov
imul
loop
fistpll
jo
or
mov
push
mov
dec
mov
add
test
xchg
shlb
add
adc
sysenter
subl
push
jb
repnz
out
ret
jne
pop
arpl
inc
pop
sub
cmc
pop
or
pop
mov
stc
mov
loope
clc
adc
fmuls
mov
xor
loopne
nop
idiv
loope
popf
mov
fisubrs
xor
add
lds
and
test
or
inc
and
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
xlat
sbb
mov
mov
fsubl
jno
push
cmp
and
loope
repnz
imul
int
jmp
jo
add
gs
fnstcw
lods
adc
sbb
outsb
dec
lods
shlb
xchg
stos
xor
hlt
test
or
inc
scas
outsb
cmp
divb
mov
dec
movsb
ljmp
jae
jns
push
lock
ds
jecxz
sub
in
rcrb
inc
pusha
lods
xor
cwtl
pop
addr16
sub
add
cltd
outsl
aas
mov
push
cwtl
call
jnp
mov
add
add
out
sahf
push
pop
pop
test
test
xchg
orb
stc
scas
cmp
es
pop
addb
dec
mov
add
jg
pop
pop
cmpl
xchg
pop
jae
into
fucomip
jno
push
inc
dec
jns
in
je
clc
stos
or
push
gs
ljmp
cmp
sti
sub
xchg
test
sti
test
jp
push
test
push
fsts
rcrl
xor
pusha
out
push
inc
insb
xchg
lock
stc
dec
inc
xchg
fwait
mov
pop
fiadds
aas
addr16
in
call
and
xchg
mov
mov
lret
add
sarl
aad
addr16
std
rcr
addb
fucomi
jbe
mov
cli
std
repnz
mov
icebp
add
xchg
sub
in
loop
mov
js
orl
add
subps
sub
xor
adc
ljmp
push
lock
outsb
hlt
inc
mov
stos
mov
test
mov
cltd
clc
lea
sti
mov
enter
andl
mov
aas
imul
in
xor
xchg
jo
repz
xchg
in
push
rcrb
mov
mov
cmpsb
mov
sbb
sti
mov
das
pop
test
je
mov
lods
jmp
scas
or
pop
inc
and
rolb
and
js
gs
cmp
lea
jnp
iret
pop
call
lahf
mov
popa
mov
push
cs
pop
pop
mov
xor
movsb
mov
aad
or
jo
fsts
stos
inc
xchg
mov
pop
mov
lahf
sbb
xchg
dec
mov
hlt
mov
mov
jbe
orb
int
jo
fnstenv
inc
arpl
sbb
test
sub
dec
lds
xchg
int
pop
fwait
adc
aas
or
push
imul
mov
xchg
mov
clc
inc
pop
pop
cmp
and
aas
into
aam
arpl
es
je
icebp
js
inc
or
clc
mov
es
mov
push
cmc
dec
inc
mov
enter
cli
adc
mov
dec
pop
add
adc
cmp
jno
xchg
or
roll
jne
sbb
adc
sub
icebp
int
aas
jl
xchg
fdivr
mov
xchg
sbb
pop
cmp
adc
arpl
stos
mov
add
je
fxch
or
cmpsb
push
pop
xchg
and
call
mov
jno
xchg
or
ljmp
push
scas
ljmp
leave
loope
insb
in
inc
xchg
pusha
mov
dec
subl
cs
shl
or
jmp
test
nop
lahf
jp
and
xor
ljmp
mov
xchg
add
jne
in
push
int
mov
xorl
adc
mov
sbb
adc
sub
pop
mov
imul
push
loopne
mov
ficompl
scas
pop
add
mov
cltd
loop
testl
test
mov
shll
and
cmp
lret
addr16
or
data16
in
mov
xchg
sbb
lods
leave
mov
fwait
pop
fs
jb
movsb
roll
xor
movq
xor
mov
hlt
sub
pop
les
test
movsl
test
xchg
mov
sbb
jecxz
add
scas
dec
mov
xlat
inc
loop
stos
aad
adc
shll
fwait
rcll
ljmp
mov
adc
or
out
xchg
leave
cmpsb
sub
mov
add
xorb
jg
loopne
adc
outsb
pop
dec
fnstcw
lret
inc
lcall
jo
inc
xchg
sub
mov
rcr
decl
mov
movsl
lock
xchg
fs
or
add
cwtl
jno
dec
adc
push
inc
lret
repz
sub
lods
xchg
sbb
lret
out
pusha
aad
ficomps
into
cmp
xchg
sub
leave
inc
xchg
adc
jo
cs
inc
pop
push
mov
rol
addb
int
addl
test
xchg
or
xor
dec
int
iret
pop
xchg
add
inc
pop
sbb
mov
dec
mov
ret
xchg
pop
imul
jno
outsl
adcl
mov
out
lds
and
add
mov
inc
sbb
lret
lea
push
adc
jae
adc
int
mov
mov
mov
aaa
imul
scas
xor
inc
test
insl
addb
cmp
and
shll
xchg
jle
dec
or
mov
jae
addb
mov
xchg
cmp
out
mov
jmp
scas
jno
sub
pop
sub
mov
cmc
push
aad
out
cmp
notl
jae
sub
pop
dec
and
push
loope
jmp
frstor
add
mov
std
mov
inc
in
movsb
mov
sahf
add
dec
lret
jp
inc
push
push
add
or
idivl
sub
out
iret
jl
inc
cli
cwtl
ret
loop
enter
and
and
push
out
inc
repnz
data16
mov
push
movsl
es
lock
jae
xchg
fnstsw
dec
int3
repnz
mov
fwait
imul
adc
pop
test
stc
iret
test
jp
xchg
aas
lcall
cmc
cwtl
dec
pop
sub
aas
in
fstl
in
in
push
lret
jae
test
loop
clc
daa
mov
or
mov
movsl
sub
mov
cmp
jnp
lock
out
xlat
fwait
mov
test
outsb
xorl
sarl
dec
mov
movsb
xchg
negb
sbb
cli
jmp
push
and
repz
das
shlb
stos
xor
push
push
dec
sti
rolb
in
ljmp
and
sarl
sub
xchg
mov
outsl
sahf
sbb
lret
and
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
or
push
sbb
daa
lahf
adc
imul
sarl
imul
adc
repnz
sbb
sub
inc
lods
pop
push
movsb
jno
cwtl
adc
in
outsl
imul
test
jp
ja
jns
push
outsl
arpl
js
movsl
sub
inc
aas
dec
mov
xchg
mov
gs
jg
mov
cmp
adcb
je
mull
mov
sub
incl
loop
push
xchg
or
cmp
add
cld
cmpsl
push
in
jb
jl
andl
jl
mov
loop
xchg
cli
lock
das
stos
mov
mov
cmp
sbb
mov
fmul
cmc
outsl
mov
pop
mov
pushf
and
aas
push
and
rcrb
daa
mov
dec
jns
les
dec
cltd
cmp
mov
adc
push
jbe
fimull
dec
bound
xor
incb
lods
sbb
aas
dec
cmp
push
xchg
push
lds
xlat
pop
hlt
js
mov
loope
testl
rolb
dec
out
adc
xchg
in
movsb
push
in
fistps
cmpsb
sbb
sub
rcl
pop
mov
frstor
and
out
outsb
fwait
imul
icebp
fmul
fs
data16
cmc
subb
inc
cmp
pusha
loop
into
and
mov
bound
adc
pop
push
in
insl
xor
xor
lret
sar
and
push
xor
sub
mov
mov
add
push
cwtl
add
scas
sub
pushl
stos
dec
in
scas
jmp
push
dec
or
mov
je
cmp
or
out
dec
sub
push
mov
ds
sub
adc
cmp
inc
mov
dec
add
push
mul
imul
dec
cmc
dec
out
shl
mov
test
jmp
lock
jl
or
stos
mov
mov
inc
and
lret
mov
add
popf
mov
pop
xor
insl
mov
or
jae
push
mov
and
cmpb
push
jl
xchg
sbb
lahf
pop
jge
and
dec
lds
jge
adc
push
cld
movsl
mov
jb
mov
arpl
pop
xchg
jnp
mov
fxch
push
test
sbb
add
sbb
ss
jmp
inc
and
dec
jp
hlt
loop
cwtl
push
dec
sbb
or
subl
sqrtps
pop
add
jl
loop
inc
pop
sahf
ja
lcall
ret
inc
mov
or
enter
out
mov
lds
jne
ficoms
mov
adc
int3
jne
jge
out
aas
push
je
cmp
lret
or
stc
addl
pop
xor
lds
enter
xchg
idivb
dec
cs
jo
test
inc
mov
adcl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
mov
mov
idivl
leave
cmpsl
icebp
sbb
mov
shlb
test
jecxz
pop
sub
pop
fldenv
pop
or
jl
inc
jae
scas
inc
push
scas
jns
and
ror
sub
mov
cmp
insb
mov
jno
mov
jns
pop
xor
int3
xor
addr16
cmp
or
inc
enter
xchg
jmp
outsb
mov
into
mul
jne
pop
pop
popa
cld
imul
jae
outsb
cwtl
subl
mov
dec
jp
fs
xchg
inc
sbb
flds
stos
pop
mov
pop
pusha
addr16
and
popl
sbb
or
ss
add
pop
insb
mov
inc
bnd
mul
icebp
loope
add
sub
das
imul
pop
fsubrp
repz
mov
rolb
xchg
and
fs
mov
stos
cmp
mov
inc
mov
xchg
cmp
js
xchg
pop
flds
push
adc
or
in
jge
pop
jg
gs
jo
or
movsl
cmp
cmp
or
pop
insl
push
mov
adc
mov
leave
lods
test
stos
jge
lods
out
imul
and
repnz
mov
inc
loopne
lds
hlt
and
in
mov
xor
add
adcl
and
cld
cmc
nop
add
jecxz
inc
sub
iret
push
mov
dec
stos
cmpsl
xor
daa
mov
mov
dec
xchg
xchg
or
pop
xchg
add
sbb
push
cwtl
xor
pop
rorl
loopne
or
cmp
push
leave
outsb
aad
scas
sub
jecxz
mov
mov
lods
jo
rcrl
sahf
ss
inc
xor
loopne
cld
lret
mov
jbe
arpl
inc
pop
cwtl
roll
and
sbb
aam
pop
out
sub
sub
and
ds
jb
inc
arpl
rcr
jns
cltd
movsl
and
scas
js
and
xchg
popf
or
jecxz
push
dec
test
pusha
and
mov
mov
sbb
scas
pop
mov
or
push
dec
xchg
jno
repz
fwait
loope
sbb
cmp
push
sub
adc
lea
sti
das
call
mov
xchg
or
inc
repnz
or
shll
xchg
dec
pop
fsubl
stos
test
cmp
jbe
cmp
lret
add
xchg
loope
cmpsl
repnz
cmp
xlat
mov
and
jne
mov
cmp
je
jmp
pop
mov
es
std
or
divb
mov
pop
sub
js
xor
les
in
call
mov
pop
aas
xchg
js
dec
xor
jbe
mov
dec
pop
out
scas
mov
inc
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
faddl
sbb
dec
mov
jecxz
mov
pop
sbb
sbb
or
fistpl
and
fdivrl
shll
arpl
xor
sbb
es
push
fsubrs
loope
sti
push
rcl
out
ficoml
push
dec
stos
cwtl
loop
nop
cmc
xchg
mov
nop
xchg
add
cwtl
iretw
sub
scas
pop
or
loop
shrl
stos
mov
add
out
inc
in
leave
inc
outsb
push
pop
ffree
cmc
mov
gs
and
mov
imul
push
dec
jno
inc
je
or
add
fimuls
jg
jp
frstor
push
insb
leave
add
insl
ja
stos
ljmp
xchg
push
nop
adc
pusha
insl
jmp
pop
cmp
out
mov
js
sbb
and
dec
dec
add
ss
rclb
test
sbb
dec
sub
popf
jp
cmp
div
push
inc
hlt
mov
leave
pusha
or
adc
or
imul
arpl
sub
jb
mov
insl
nop
and
shrl
push
lds
repz
sub
into
aaa
xchg
test
dec
cmp
gs
cmp
xchg
inc
mov
xchg
cmpsb
mov
rcrb
mov
cwtl
adc
adc
jae
roll
ds
sbb
xlat
jp
cld
pop
int3
ret
fbld
insb
jns
lea
push
jnp
sub
jg
fsubs
cmpl
jecxz
in
jnp
xor
mov
lods
mov
repnz
mov
scas
mov
clc
mov
sarb
dec
push
push
mov
pop
and
xor
push
popa
push
sarb
mov
in
in
mov
in
testb
and
jns
inc
lret
lods
jnp
jp
shl
jl
add
lods
fdivrl
push
inc
imul
call
sbb
push
dec
test
pop
lahf
or
stc
lods
mov
rol
inc
jae
jle
cwtl
add
mov
idivb
stc
lds
ljmp
adc
insb
mov
jecxz
aad
stos
xchg
mov
lret
jns
xor
js
gs
test
out
insl
inc
loop,pn
shll
push
movsb
pop
adc
lods
fmuls
pop
leave
dec
pop
inc
imul
int
push
js
in
and
aad
notl
mov
push
adc
dec
out
mov
lods
inc
aam
aad
xorl
or
dec
mov
jle
repnz
jno
pop
pop
dec
mov
pusha
xor
popf
in
cli
in
repnz
or
cltd
push
and
sahf
jnp
xchg
adc
jno
mov
xor
and
insb
fistps
decb
sub
mov
jae
loop
ret
cmpsb
icebp
xor
push
notl
mov
xor
in
incl
add
addl
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
cltd
inc
sarl
adc
sbb
mov
loope
loop
adc
mov
enter
enter
add
shll
iret
mov
mov
xchg
test
add
pop
neg
addr16
shr
adc
lcall
xlat
inc
sub
ret
call
sarl
mov
sbb
xchg
mov
and
add
adc
inc
iret
sbb
sub
insl
mov
cmp
int
cwtl
fwait
pushw
and
or
pop
loope
pop
aad
or
aas
sbb
inc
out
lcall
loop
sub
inc
out
push
pop
ficoms
dec
mov
push
and
pop
push
out
mov
in
mov
test
mov
jl
adc
xor
sti
xor
jmp
insl
jle
sbb
imul
sbbl
popa
lea
cmp
ja
outsl
gs
pop
xor
push
or
jb
int
mov
xorl
jmp
lds
stc
push
mov
cmpsl
leave
sub
mov
xchg
dec
shlb
mov
test
imul
movsl
call
push
gs
and
dec
inc
in
cmpsl
cmp
cwtl
jmp
cwtl
flds
cmp
stos
or
stos
stos
js
enter
scas
in
push
xchg
nop
mov
std
data16
sub
xchg
sti
negl
inc
loop
outsb
cmp
cmpsl
loopne
inc
or
push
sbb
fldl
xchg
pop
dec
in
jp
insb
pop
dec
cmp
xor
lock
loope
mov
add
test
in
sbb
mov
mov
and
pop
jae
dec
into
add
fwait
xchg
dec
je
xchg
jg
jbe
jmp
and
pop
mov
test
push
movsb
fs
or
sbb
aam
add
mov
scas
out
dec
fs
mov
xchg
mov
in
cmc
js
in
mov
xchg
pop
push
jno
xor
and
jb
sti
stos
daa
andl
mov
std
popa
out
ret
cmc
out
int
shlb
sbb
pop
push
and
aas
pandn
and
das
aas
add
sub
sub
pop
inc
xlat
sbbl
imul
dec
je
xor
inc
ja
sub
ljmp
sbb
fisubs
mov
adc
sbb
sbb
shlb
mov
fwait
xchg
adc
push
in
adc
out
cld
cmc
mov
add
std
mov
enter
cmp
loope
sub
dec
pop
inc
inc
add
jns,pn
pop
dec
cli
mov
sub
mov
ja
xor
and
imul
push
jo
sbb
mov
out
mov
mov
xor
stos
in
in
sbb
ror
add
mov
gs
loopne
ljmp
out
shlb
daa
add
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
adc
push
sbb
icebp
inc
loope
jmp
daa
shrb
shrl
addr16
dec
popf
mov
xchg
daa
insb
push
sbb
dec
int
and
pushf
dec
add
jnp
lods
and
inc
sarl
sub
insl
cmp
mov
test
and
push
insl
jb
push
xchg
imul
ss
fs
inc
movsl
cli
jp
and
and
pop
jg
sub
movl
es
les
mov
in
dec
jne
repz
jle
jecxz
imul
push
aam
popa
mov
mov
out
inc
out
lods
sbb
loop
mov
mov
xlat
and
push
in
push
ja
lahf
or
sub
sub
push
out
jns
xor
lods
stc
or
xor
sub
fwait
xchg
iret
jnp
push
test
std
cs
dec
push
adc
adc
loopne
scas
cmp
jmp
cmp
push
insl
mov
jmp
loop
xor
insl
xchg
mov
out
movsl
push
cltd
mov
sbb
cmp
adcl
mov
mov
sahf
mov
arpl
fs
inc
push
addr16
iret
sub
scas
and
lea
mov
or
mov
rcrl
call
popa
push
cmp
popf
inc
test
arpl
out
mov
mov
shll
stos
xlat
mov
aam
sarb
bswap
jmp
dec
xlat
and
cmp
cmp
in
cmp
movsl
xor
mov
jmp
xchg
push
pop
add
mov
cmp
jg
lret
leave
roll
inc
dec
inc
out
notb
push
add
pop
jnp
outsl
cmp
xchg
mov
stos
call
loope
fcmovnb
push
jbe
rcl
test
pop
jno
inc
in
dec
ja
xor
fdivp
cld
pop
xor
jnp
jp
add
add
bound
cmp
or
jo
insb
fimull
nop
repnz
iret
inc
lret
repz
ret
jb
xchg
mov
out
mov
inc
dec
pop
push
cli
inc
imul
sbbb
shlb
jmp
pop
push
ret
sbb
inc
lods
lahf
mov
sub
loop
xchg
int3
fldt
imul
adc
mov
lea
decl
jb
cmp
cld
mov
enter
sub
lods
pop
repz
movsl
mov
adc
and
cmp
ja
sub
pop
fidivs
repnz
aam
cmp
add
add
enter
dec
cmc
and
mov
inc
adc
int3
pop
sub
es
sbb
jg
pop
mov
cmp
cmpsb
idivb
xor
test
push
push
stos
stos
or
pop
and
int
inc
es
dec
mov
insl
push
sbb
xor
mov
fwait
cmp
mov
xor
js
fwait
and
ljmp
fwait
addl
inc
add
scas
rolb
add
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
or
mov
in
adc
sbb
mov
pop
mov
dec
jne
mov
sahf
repz
arpl
cmp
cwtl
int
shll
insl
inc
xchg
and
mov
add
cltd
xchg
push
cmpsl
loop
pop
mov
fistl
movsb
fidivrl
pop
pop
loope
inc
inc
les
jno
ret
and
push
xor
dec
dec
popf
scas
xor
pop
xor
pusha
fdivrp
xor
adc
jne
cmp
mov
out
aad
jg
ss
sti
cmc
sbb
cmp
jp
pop
cmp
push
out
cmp
leave
frstor
pop
add
jge
scas
pop
push
cmc
or
xor
addr16
jbe
fsubr
fiadds
mov
xchg
and
int
leave
aas
sbb
cmp
xchg
dec
push
add
imul
sbb
adc
xlat
push
mov
aas
sub
negb
inc
mov
adc
mov
jo
int
clc
out
loopne
jp
mov
ret
xor
xor
rorl
inc
aaa
in
add
sub
jmp
in
xor
mov
outsb
shl
call
insl
add
mov
jl
orl
jge
ja,pn
push
imul
fnstcw
cmovo
jnp
pop
iret
out
pop
movb
or
test
test
jmp
adc
mov
in
aas
sbb
fists
je,pn
xor
pusha
mov
mov
in
mov
add
jo
xchg
mov
mov
jl
jo
or
sub
adc
test
std
test
adc
gs
add
xchg
in
jge
push
mov
shl
inc
sbb
add
mov
jg
mov
nop
dec
call
pusha
pusha
jmp
mov
in
xlat
mov
mov
mov
movsl
stos
adc
xor
test
cmp
lea
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
cmp
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
les
inc
add
daa
inc
add
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
lock
cld
and
inc
add
inc
add
es
add
inc
add
jle
add
es
add
add
and
inc
add
inc
add
add
push
movsb
scas
or
movsb
add
inc
add
es
add
es
add
es
add
es
add
and
pop
es
add
inc
add
lcall
push
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
fistpll
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
in
inc
add
sub
pop
loop
js
lcall
and
add
loopne
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
inc
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
and
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
popl
inc
add
addl
mov
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
pusha
lea
add
add
add
add
add
add
add
lea
add
add
inc
lea
add
test
add
add
xchg
add
xchg
add
add
xchg
add
add
add
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
mov
add
add
dec
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
push
mov
add
add
jb
add
jle
add
mov
add
mov
add
mov
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
js
add
mov
add
mov
add
les
add
loop
add
repnz
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
stos
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
add
push
mov
add
add
jle
add
xchg
mov
add
add
les
add
mov
add
mov
add
lea
add
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
imul
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
add
xchg
add
xchg
add
add
xchg
add
add
add
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
mov
add
add
dec
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
push
mov
add
add
jb
add
jle
add
mov
add
mov
add
mov
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
js
add
mov
add
mov
add
les
add
loop
add
repnz
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
stos
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
add
push
mov
add
add
jle
add
xchg
mov
add
add
les
add
mov
add
mov
add
lea
add
lea
add
add
