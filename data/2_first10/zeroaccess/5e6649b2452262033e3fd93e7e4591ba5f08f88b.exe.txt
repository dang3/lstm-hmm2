push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
mov
jl
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
push
xchg
and
mov
lods
or
lahf
jne
cmpsl
les
or
pushf
ljmp
movsb
les
or
sub
inc
pusha
lods
xchg
inc
dec
lret
daa
pop
lods
cmp
fldl
adc
xor
popa
mov
xchg
pop
aam
mov
sub
cltd
mov
daa
cmc
xchg
jg
scas
jnp
jb
es
push
sub
int
sub
test
sub
ret
fdivs
gs
loop
mov
mov
insb
mov
lock
dec
inc
push
or
popf
andl
dec
clc
add
outsl
jle
cmp
mov
jp
cmpsb
out
test
sub
add
lret
jbe
adc
pop
out
push
mov
fadds
repz
cmp
iret
xor
mov
fnsave
sbb
xchg
mov
jno
pushf
pusha
add
push
mov
inc
test
sarl
xor
mov
mov
mov
dec
aad
fwait
mov
jb
addr16
sub
out
push
inc
aaa
subb
lods
divb
xor
scas
andb
add
jg
mov
sub
mov
jmp
and
imul
cmp
cmp
aam
mov
jg
call
xor
inc
mov
test
sahf
cmpsb
jmp
lods
inc
xchg
jnp
jp
pushf
xor
or
stos
mov
jb
and
cltd
pop
test
stc
mov
fists
sbb
push
lret
decl
iret
jnp
pop
lds
xchg
and
or
dec
pop
aad
push
push
iret
mov
adc
enter
mov
adc
add
lret
in
and
arpl
cmp
ret
pop
aaa
pop
cld
push
fxch
mov
dec
rclb
adc
mov
mov
mov
sarl
xchg
inc
inc
or
int
rcrl
mov
and
mov
popa
ljmp
jl
push
xor
clc
sub
add
lret
cwtl
xor
mov
adc
lock
xor
lds
gs
push
pop
sub
fmuls
lea
xor
push
inc
ffreep
add
push
add
idivb
icebp
in
cmp
pushf
mov
leave
add
push
into
fisttpll
pop
mov
sub
mov
das
shlb
xchg
xchg
push
pop
pop
icebp
xor
push
leave
jbe
add
stc
ljmp
repz
pusha
jp
ss
sbb
mov
sbb
sub
pop
sbb
mov
loopne
ds
sbb
gs
xchg
pop
pop
add
or
cwtl
adc
xorb
js
cltd
insl
pop
jge
mov
div
fcomps
mov
push
fistl
sti
mov
add
jae
out
shlb
xor
comiss
mov
std
mov
inc
insb
mov
mov
mov
pop
sub
fildl
mov
stos
push
insl
xor
imul
or
sub
cmp
mov
or
dec
mov
mov
inc
pop
sbb
xor
mov
push
push
adcl
mov
sbb
lret
add
adc
mov
lods
sub
add
adc
dec
lods
lahf
push
cmpsl
idivb
mov
and
out
iret
jns
cmp
or
repnz
inc
cmp
and
mov
lods
mov
cli
insl
gs
sub
out
sub
adc
adc
mov
mov
nop
pop
stc
leave
sub
jmp
mov
rol
lods
pushf
out
lret
mov
xor
lods
cmp
mov
dec
arpl
aas
xchg
ficompl
adc
mov
xor
out
mov
jmp
jl
fldcw
out
push
add
xchg
cs
pop
rolb
push
lods
imul
lds
cmc
xor
mov
stos
push
jnp
loop
fdivl
lahf
fisubs
jo
repz
jmp
xor
inc
or
shlw
insl
test
arpl
adc
push
or
in
mov
fildll
shl
push
push
fwait
aas
mov
out
cmc
add
outsb
outsl
and
adc
int
mov
filds
mov
jo
xchg
inc
mov
jle
and
std
insb
jb
aam
rcll
mov
push
and
xlat
pop
push
cmp
dec
sub
jle
shll
mov
add
mov
mov
lea
jmp
dec
fldcw
sbb
xor
fstpt
clc
sub
in
add
push
scas
out
mov
punpckldq
clc
popf
add
pop
xchg
push
sti
das
imul
stos
jnp
or
movsl
nopl
sub
sbbb
sti
sbb
or
test
negb
pop
mov
pusha
out
rcrl
movl
fstpt
xchg
dec
pop
es
ret
sahf
std
and
jns
dec
jmp
aas
cli
int3
fildll
shll
imul
cmpsl
aas
jnp
popa
cmp
push
cltd
mov
xor
shl
data16
call
out
push
iret
mov
cld
push
push
xchg
pop
pop
loope
rep
clc
and
pop
mov
in
loopne
int
mov
shll
xchg
les
bts
arpl
or
je
das
fbld
jne
cmp
sub
jns
pushf
popf
inc
gs
adc
mov
lock
xor
loopne
pushf
hlt
ja
and
cmpl
mulb
imul
sar
imul
cwtl
sbb
push
inc
dec
pop
cmp
mov
jno
and
sbb
pop
loopne
sbb
cld
jb
rcrl
xchg
daa
adc
adc
add
jmp
sub
xlat
pop
shll
push
out
inc
aad
and
nop
dec
nop
xor
sub
xor
bswap
cmp
pop
ss
ja
mov
cmpsl
sub
sahf
out
sub
cmc
hlt
inc
xchg
hlt
ss
push
rol
roll
insl
inc
arpl
dec
push
nop
add
cltd
or
cwtl
mov
jno
fiaddl
dec
jo
rcl
or
psubusw
pushf
sbb
adc
stos
mov
in
cmp
fcomi
bound
dec
add
dec
outsl
shl
inc
clc
nop
pop
shll
mov
jl
aad
mov
cld
mov
ficompl
cli
fdivrp
dec
inc
mov
repz
hlt
pusha
or
enter
mov
clc
jo
faddl
xchg
push
lcall
dec
das
shll
inc
into
les
sub
xor
inc
sbbl
cmp
push
inc
icebp
sbb
shlb
fcoml
push
rcrb
sahf
sahf
mov
jle
add
fldcw
int3
insl
push
cli
mov
loop
cmp
cltd
lods
shlb
adc
mov
mov
aas
test
or
push
inc
xchg
repnz
sub
leave
ljmp
xor
dec
mov
and
daa
ds
out
xor
sbb
add
clc
stos
insb
mov
pop
out
push
cmp
push
mov
outsl
mov
add
add
add
mov
pop
pop
dec
fiaddl
cmp
cmpsl
imul
push
sbb
jecxz
lock
mov
jb
ret
inc
inc
mov
xchg
movsl
sbb
pusha
insb
dec
jl
mov
in
push
add
add
mov
and
or
mov
fsts
lcall
in
adc
pop
js
add
or
notl
stos
adc
mov
out
cld
lret
lods
xchg
daa
sbb
mov
sbb
xchg
jmp
mov
mov
das
out
fs
sub
jbe
jle
pop
out
lods
std
inc
mov
pextrw
mov
xor
ret
ret
push
dec
mov
jg
aaa
xchg
xchg
hlt
sub
dec
cs
outsl
jae
mov
mov
mov
dec
pop
std
stc
hlt
lret
cltd
enter
mov
pop
in
xchg
aas
jge
dec
dec
lods
xor
fsubr
jne
or
jp
ss
push
cmp
insl
mov
je
stc
fnsave
repz
and
xchg
mov
mov
and
loopne
or
sbb
out
xor
sub
xor
es
xchg
iret
outsb
adc
xchg
ja
jo
or
mov
test
lret
xchg
test
push
sub
push
idivb
adc
out
push
data16
mov
inc
push
clc
push
push
and
sbb
push
out
lret
inc
inc
call
lret
in
cmpsb
arpl
in
int3
push
out
xor
enter
mov
arpl
stos
imul
jno
ds
and
jo
adc
aaa
leave
jo
aam
pushf
ss
push
call
nop
dec
lahf
bound
fmuls
scas
jl
mov
stc
sahf
enter
pop
pop
outsb
fimull
leave
push
pop
push
jae
test
mov
push
and
adcb
out
lock
add
dec
test
and
jp
scas
insb
push
test
or
popa
adc
mov
scas
movsl
cmp
in
in
icebp
fsubp
sti
or
xor
adc
mov
adc
popa
aaa
in
adc
inc
les
xchg
test
xor
pusha
xchg
std
enter
inc
stos
xor
mov
and
jge
mov
into
xor
pushf
out
orl
imul
insl
jge
int
pop
push
xchg
mov
mov
cltd
jge
cmp
xlat
sbb
imul
aaa
push
popa
cmc
imul
xor
cmp
pop
cmc
ss
jge
inc
stc
pop
adc
lods
bound
mov
sbb
daa
popa
mov
or
insl
shr
cmp
aam
sbb
shlb
fsubl
mov
mov
aad
jns
add
frstor
add
push
imul
sub
sub
push
adc
scas
out
dec
jmp
mov
cmp
adc
cld
call
mov
subl
sbb
loope
mov
and
fs
inc
rorl
movsl
cmp
jl
mov
in
in
cmp
btr
inc
lods
jg
push
aad
and
out
fstpt
mov
in
daa
into
scas
aaa
js
mov
cwtl
dec
testb
ret
mov
ret
cltd
int
sbb
loopne
push
hlt
aas
and
or
pop
sub
cmp
xchg
add
xchg
bound
shll
mov
mov
jmp
adc
mov
jge
and
test
bound
mov
dec
jle
mov
fmull
rorb
jl
std
testl
lcall
xchg
xchg
add
or
repnz
mov
add
xor
dec
xchg
jns
loop
mov
sub
inc
movsl
xor
mov
add
loopne
cmpsl
cmpsb
and
fs
sbb
cmpsl
jg
ss
cmpl
push
xchg
xor
mov
adc
add
mov
arpl
out
xchg
mov
mov
jb
or
dec
xchg
jns
pop
dec
jne
push
cmp
push
movsb
insb
arpl
cmp
sub
insl
icebp
sub
mov
inc
int3
shll
sub
xlat
cmp
js
rol
add
adc
aad
cmp
xor
mov
es
cltd
sti
mov
and
iret
mov
xchg
sarb
clc
shrl
jbe
mov
sbb
pop
pop
addr16
xchg
cwtl
aas
ret
aam
jp
add
bound
out
sub
leave
pop
pusha
popa
adc
jo
inc
pop
dec
js
xchg
in
jno
cli
lods
mov
aas
xor
mov
in
pop
pop
sub
or
das
fdivrl
mulb
mov
mov
cmp
popf
inc
jecxz
bound
loopne
fs
popa
xor
pop
dec
push
lret
inc
xlat
xchg
incb
mov
mov
leave
and
loopne
mov
rolb
mov
sbb
jb
or
dec
pop
cwtl
test
and
hlt
jmp
aad
push
rcrb
sub
leave
shlb
hlt
cli
scas
test
mov
adc
movsb
mov
xchg
lcall
jp
das
out
mulb
in
sbb
jecxz
repz
ljmp
shll
fxam
les
sbb
in
sarb
in
mov
or
mov
lds
loop
decl
fsubr
cmp
mov
fsubl
push
fcomip
mov
sbb
lods
iret
add
or
push
xchg
pop
mov
orl
and
mov
call
mov
mov
xchg
cmpsl
stos
fists
dec
xchg
rclb
fimuls
bswap
and
out
adc
jno
or
xchg
lcall
or
test
ficoml
sti
ret
stos
xchg
push
mov
pop
or
pop
fisubs
mov
pushf
fbstp
pushf
fnstsw
dec
adc
cmp
mov
and
push
mov
pushf
pop
add
outsb
mov
add
xchg
mov
jnp
push
rcrl
xchg
xor
pushf
jnp
loope
adc
dec
rorl
sub
lock
jmp
jnp
pop
movsb
daa
or
pop
popf
and
mov
fnstsw
idiv
call
iret
mov
push
fdiv
adc
mov
lods
iret
out
rcrb
jecxz
fwait
ljmp
cs
bnd
fwait
jo
jno
call
push
jp
cmpsl
mov
cmpsl
inc
inc
mov
cld
xchg
popl
adc
sub
inc
js
xor
lcall
dec
repz
or
iret
jp
test
lock
pop
or
sbb
jo
inc
ss
test
inc
adc
scas
test
pop
adc
sub
adc
into
mov
ret
pop
clc
jl
fldl2e
stc
xor
sbb
test
hlt
loop
call
xor
mov
int3
cwtl
mov
loop
test
mov
sbb
push
shr
push
loop
jg
divb
jl
inc
xchg
sbb
push
cmp
mov
sbb
lods
addb
pop
push
loope
sbb
mov
jb
aas
fcomip
push
mov
mov
out
leave
dec
mov
std
mov
or
dec
add
jmp
add
pop
pop
mov
mov
push
fisubs
cmp
test
sub
fwait
xchg
mov
pop
pop
fs
cmp
dec
add
daa
sti
lock
ret
or
sub
xchg
sbb
jecxz
cltd
sub
mov
in
pop
add
sahf
movsb
gs
xor
ret
inc
pop
adc
xor
and
mov
push
sbb
aas
mov
cli
sub
dec
mov
or
and
leave
xor
push
cmc
jb
cmpsl
adc
mov
movsl
loope
popf
pop
mov
sub
pop
test
scas
xor
inc
scas
lock
adc
rol
push
leave
xchg
insl
or
jb
bound
mov
pop
cld
and
sub
out
negb
mov
add
lea
std
imul
mov
hlt
push
gs
sbb
sub
loope
mov
jmp
sahf
sub
mov
aas
int3
sahf
jp
push
fdivr
mov
mov
pop
not
cmpsb
mov
sub
int
test
lret
adc
pop
adc
push
loope
push
push
mov
aas
stos
push
ds
jns
jnp
jns
inc
xor
inc
inc
xchg
loop
jbe
inc
gs
cli
xor
sub
jb
mov
push
adc
lods
and
cmp
adc
add
xor
xchg
pop
lea
mov
sbbl
arpl
inc
pushf
dec
jle
sbb
call
pushf
loope
sbb
mov
addl
xchg
mov
add
jmp
sbb
mov
mov
loopne
pop
fwait
into
bound
sub
inc
push
movsb
xchg
inc
xor
and
inc
dec
mov
and
dec
movq
dec
shll
jge
leave
in
jns
dec
ja
aam
push
xchg
ret
adc
sub
inc
sub
cmp
popf
iret
add
call
push
dec
lea
loope
je
mov
outsb
push
sahf
or
stc
scas
ret
xchg
out
sub
dec
sub
and
cli
out
mov
adc
xchg
les
xchg
push
sub
mov
lret
int
and
xchg
movsb
xor
mov
iret
std
push
bound
xchg
cwtl
enter
push
outsl
xlat
dec
xchg
pop
popa
pop
test
dec
sub
aaa
out
mov
movsl
pop
inc
in
dec
inc
pushf
dec
cmp
mov
push
cli
or
push
sahf
jp
pop
push
xchg
mov
js
push
sub
add
jbe
dec
lds
icebp
out
ljmp
cwtl
jne
or
add
out
jo
cmp
fnsave
aam
addl
and
sub
adc
mov
int
leave
int3
int
jne
and
loop
cmp
adcl
mov
mov
lret
dec
jge
xchg
sub
push
sarb
sub
pop
fmuls
bound
daa
test
push
push
xchg
mov
jecxz
pop
clc
repz
fisubs
jl
inc
cs
sarb
sub
xchg
fidivrs
shll
out
mov
cmp
inc
and
push
push
adc
mov
int3
stos
push
mov
in
jecxz
lahf
and
arpl
and
lock
inc
cmp
pop
shlb
test
dec
daa
or
mov
pop
dec
pusha
repnz
stos
mov
sub
mov
inc
push
xchg
fwait
in
adc
dec
sub
getsec
dec
lret
std
in
lock
ret
hlt
inc
aas
test
pushl
inc
popa
loope
scas
mov
add
shll
sbbl
and
sbb
sbb
les
outsb
pop
xor
xor
dec
xor
dec
popa
mov
enter
xchg
add
push
add
in
ret
sti
inc
push
lahf
in
out
add
orl
sub
int
das
cmpsb
nop
repnz
push
movsb
inc
mov
int3
sbb
jp
pop
dec
lret
cmp
bound
je
pop
inc
mov
jno
into
nop
jg
inc
add
xchg
aad
sbb
out
loope,pt
and
push
push
into
imul
mov
adc
mov
ds
movsl
jae
popa
call
aam
shlb
loope
and
fsubs
jae
mov
gs
jmp
push
out
ds
mov
stc
lods
and
mov
inc
cltd
aam
ds
mov
jmp
dec
fadds
cmpsl
xorl
and
mov
lcall
insb
in
mov
pop
rolb
add
ja
or
dec
dec
jb
pop
push
and
xchg
mov
lcall
add
mov
sbb
scas
pmullw
cmp
pop
add
imul
sbb
out
arpl
dec
and
xor
mov
outsb
stos
sbb
sub
mov
outsl
pusha
xchg
mov
or
lret
pop
repnz
das
stc
add
gs
mov
icebp
fidivrl
and
xor
jae
shlb
repnz
pop
arpl
sub
mov
dec
inc
xchg
adc
cmp
mov
fimuls
inc
pop
js
jno
xor
fdivrs
xchg
xor
xor
ljmp
cmpsb
fstpt
dec
jge
jle
and
jge
jmp
pop
jns
fwait
lcall
cmp
outsb
test
push
les
inc
adc
movsb
pusha
jge
jp
in
inc
adc
jae
leave
jecxz
inc
movsl
ss
adc
insb
xchg
jp
sbb
cmp
jl
sbb
bound
push
pop
xchg
push
inc
mov
or
dec
test
aaa
ret
test
lahf
push
popa
and
push
popf
je
dec
stc
mov
mov
lcall
data16
push
or
andl
lea
out
adc
imul
test
push
add
repnz
push
out
negb
xchg
sub
xlat
mov
xchg
mov
mov
xor
fs
inc
lods
aas
nop
cmc
mov
enter
rcll
out
insl
jmp
mov
mov
pop
add
mov
inc
outsb
rolb
add
int3
shrb
pop
int
iret
push
inc
outsl
fcomps
pop
rorl
das
or
sub
dec
ljmp
psrlw
jns
jge
outsb
hlt
icebp
dec
test
divb
out
inc
mov
push
fadds
dec
dec
mov
nop
push
imul
repnz
push
in
insb
jle
pop
and
ja
sbb
sbb
push
push
fisubs
jmp
repz
mov
cmpsb
pop
fneni(8087
popf
rolb
mov
aad
or
pop
es
jb
iret
js
jbe
jg
std
sbb
mov
mov
or
addl
and
cltd
xchg
or
stos
mov
lcall
xor
ljmp
mov
movsl
dec
add
or
and
xchg
clc
push
test
cmp
repnz
std
sub
add
jecxz
hlt
cmp
aad
insb
mov
xor
mov
xchg
cwtl
shl
push
mov
int
jg
jnp
inc
shrb
or
cwtl
mov
pushf
lock
jmp
or
mov
shll
mov
lods
das
scas
push
jnp
call
and
push
mov
imul
jne
rcrl
dec
and
rcr
popf
and
push
xchg
sbb
xor
rolb
and
dec
mov
mov
prefetcht1
out
mov
lods
int3
inc
mov
scas
pop
jbe
sbb
add
and
jecxz
std
xchg
push
data16
adc
insb
mov
pop
and
sub
push
shrb
aad
adc
scas
mov
or
pushf
iret
xor
dec
fstl
into
xor
mov
mov
clc
mov
sbbb
jle
imul
adc
jnp
js
mov
and
lods
mov
lret
sub
or
jmp
and
pop
xchg
xor
pop
dec
mov
push
out
dec
out
sub
cmovne
mov
push
xorb
das
adc
jb
fmul
into
cmc
add
pop
sti
lcall
adc
push
mov
std
jl
sbb
mov
or
sbb
mov
leave
xchg
ret
push
daa
dec
pop
pop
mov
push
mulb
out
pop
in
push
mov
loopne
inc
pop
add
lret
out
push
mov
mov
out
dec
lds
jmp
inc
orb
or
int3
jl
mov
cmpsl
push
push
push
cmp
add
imul
test
decw
mov
divb
aas
mov
xchg
mov
adc
sub
cmp
stc
mov
dec
jg
daa
nop
sbb
loope
mov
and
je
stc
cltd
movsb
mov
in
clc
push
imul
push
subb
outsl
in
push
dec
xchg
cltd
and
xor
cs
fidivrs
adc
cmc
pusha
inc
outsl
cmc
fsub
call
jbe
xlat
pusha
outsb
xchg
imul
jne
mov
icebp
inc
cltd
data16
aam
pop
push
aad
hlt
dec
cltd
add
and
popf
xchg
and
insl
data16
mov
inc
cmpsb
hlt
in
aam
loopne
mov
sbb
dec
xor
gs
int3
ja
sub
inc
add
ja
inc
mov
lret
pop
jp
in
mov
das
pop
lock
lock
popf
loope
sub
leave
xchg
sub
int
lret
or
mov
or
cwtl
repz
xor
fmulp
rcrb
and
xchg
mov
into
and
mov
push
cmpsb
mov
mov
xor
test
mov
lret
dec
inc
adc
mov
dec
pushf
sahf
rol
adc
sub
jle
mov
xor
inc
sbb
push
jp
push
push
test
sti
test
enter
sarb
jne
pushf
dec
stos
and
sbb
paddb
fs
lods
das
addr16
inc
mov
aam
fnsave
push
xor
fists
mov
mov
clc
loope
cmpsl
fwait
mov
sub
filds
fcmovnu
pop
mov
sub
or
push
inc
cmp
mov
scas
js
ljmp
fildl
or
aam
add
lcall
das
lods
out
imul
idivl
sbb
add
clc
dec
lods
or
xor
js
cmp
int
jbe
xchg
mov
xor
adc
pop
dec
jnp
rcrl
out
xchg
pop
test
inc
test
mov
pushf
push
cs
xor
push
cmp
sub
push
aaa
imul
and
int3
fdivrs
das
jg
mov
int3
push
js
pop
dec
add
dec
int3
push
cmp
into
push
xchg
call
mov
lods
mov
mov
lea
adc
ss
jmp
mov
or
add
xor
ret
shll
scas
sub
dec
stc
es
sbb
adc
fsubp
sbb
fisttps
or
push
sbb
sti
cmp
jl
cmp
mov
repz
das
pushf
outsb
fsubr
xor
cmp
xor
icebp
jne
fisttpll
and
nop
push
outsb
xor
mov
lcall
cmp
ret
cmp
sbb
in
dec
cwtl
popa
xchg
test
test
jp
jp
out
push
shlb
cld
cmp
adc
xchg
push
adc
jp
mov
aam
iret
mov
mov
pop
scas
push
andl
loope
aam
mov
push
aad
dec
xor
mov
jbe
add
movmskps
push
xchg
or
sub
add
pushf
pop
es
mov
jns
test
dec
ret
pop
cmp
sbb
lret
pop
in
mov
test
popa
fnstenv
jp
jmp
mov
cld
adc
shrl
imul
mov
cmp
xchg
into
mov
aad
or
shrb
cmp
dec
xchg
mov
inc
sub
jp
in
js
data16
mov
pop
and
mov
jp
aas
push
loope
fcompl
xchg
out
test
push
add
and
in
add
xchg
pop
or
orb
or
sub
les
push
shll
sub
sbb
mov
pop
inc
scas
pop
sbb
fs
leave
shll
cmpl
loope
adcl
es
mov
pop
xchg
in
mov
insb
aad
jns
or
mov
sub
add
jnp
cld
sub
notb
add
and
mov
dec
adcb
out
sub
push
lret
fsubp
stos
xchg
out
inc
iret
andl
xchg
ret
push
xchg
popf
mov
fsts
out
pushf
movsl
mov
mov
jmp
bound
iret
mov
mov
inc
pop
jg
dec
xchg
scas
push
loopne
imul
jge
push
sub
and
test
cmc
ds
and
clc
push
inc
hlt
jmp
popf
loopne
push
imul
push
leave
dec
loop
shlb
mov
mov
add
dec
sahf
aam
add
arpl
lds
movsl
pop
add
cltd
in
mov
adc
cs
inc
xchg
inc
pop
fstps
xor
push
icebp
loop
scas
add
mov
sbb
sub
imul
test
fldl
inc
repz
push
rolb
xchg
bound
push
jecxz
out
test
mov
pop
popa
cmp
seta
dec
fcoml
enter
andl
mov
aad
jns
subb
jmp
mov
or
lds
jp
jp
in
inc
movsl
xor
sbb
pop
xor
xor
jbe
or
xchg
jne
jns
push
testb
scas
mov
mov
adc
and
cmpsb
lock
repnz
movsl
adc
jle
or
mov
mov
jbe
jo
aad
call
and
jl
fdivrp
sub
jge
and
mov
ret
push
insl
das
leave
shlb
adc
lret
repnz
sub
inc
adc
leave
out
imul
mov
jae
jb
cs
dec
or
cli
inc
sbb
fistps
mov
mov
jmp
xorb
mov
lcall
in
dec
addr16
fstps
mov
jp
popf
es
push
cmp
mov
jnp
pop
es
ds
dec
push
cmp
cmp
mov
dec
jle
in
pushf
fldl
mov
sbb
mov
or
fidivl
or
pop
mov
into
xchg
mov
in
jnp
test
pop
dec
mov
lock
inc
ja
inc
push
lret
fld1
sub
arpl
lods
aaa
xchg
scas
ret
or
pushf
xchg
outsl
clc
sbb
dec
sbb
push
or
stos
or
das
test
imul
ja
pop
mov
push
lods
dec
sub
mov
xchg
insb
xchg
jg
insb
jns
adc
std
ljmp
jns
stc
add
mulb
test
or
jmp
lea
ja
jbe
xchg
subb
pop
mov
xor
sub
sti
dec
add
or
pop
sub
mov
nop
or
cld
pushl
add
adc
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
dec
mov
pop
jl
dec
pop
jl
mov
or
cmp
addb
mov
or
mov
popa
mov
or
das
inc
repnz
or
loope
sbb
iret
test
lods
test
jl
insb
lret
push
pusha
xchg
xlat
fwait
data16
mov
cmp
jne
jns
mov
jecxz
jmp
sahf
fmuls
adc
bound
mov
jnp
fdivrl
push
jbe
xor
sbb
addr16
sbb
movsl
inc
outsb
mov
add
popa
mov
xchg
shll
mov
rcr
or
pusha
push
clc
scas
cmp
mov
dec
jmp
mov
pushf
xchg
test
fidivs
adc
pop
cmpsl
loopne
je
jle
les
call
push
pushf
movsb
pop
in
call
xlat
gs
mov
fs
cmp
xorl
cmc
dec
mov
sub
inc
add
mov
pusha
sar
or
loopne
out
fcom
leave
aam
std
call
hlt
cltd
cmp
and
pop
in
xchg
and
jae
and
dec
xchg
cld
aas
or
push
push
out
repnz
lods
aam
inc
cmp
fstpl
in
pop
inc
mov
inc
adc
lods
jb
mov
dec
ror
or
add
push
mov
dec
jmp
dec
lods
les
xor
movsl
xchg
cmp
mov
out
jae
sub
cmp
shl
inc
int
fimull
sti
cmp
movsl
arpl
or
pop
inc
jns
lret
jecxz
daa
xchg
fmull
sbb
cmp
aaa
loop
and
and
scas
xchg
imul
mov
movsb
js
jb
xchg
in
sbb
inc
test
stos
loopne
ja
outsb
pop
push
lods
mov
cwtl
adc
dec
sub
sbb
aaa
lret
add
fwait
dec
xchg
test
pop
mov
cmc
sahf
das
mov
rorb
sub
jns
aas
js
sbb
xchg
jmp
or
mov
sbb
cmp
push
mov
mov
and
sahf
jmp
push
rcrb
mov
nop
test
adc
addb
mov
lock
mov
ds
inc
push
cli
arpl
xor
in
push
scas
outsl
jnp
les
ljmp
gs
jmp
notb
adc
inc
lock
cmp
pop
inc
xor
in
stos
push
mov
gs
aam
mov
mov
xchg
mov
fs
cmpl
add
pop
ffreep
hlt
jns
outsl
push
dec
push
cmpb
sbb
dec
add
mov
lret
xchg
loopne
pop
cmp
enter
lock
int
xchg
jl
outsl
mov
test
pop
nop
xor
xchg
or
mov
inc
pop
fmull
lcall
stos
dec
sbb
jno
aam
and
inc
push
sahf
push
push
cmp
mov
sbb
cld
dec
mov
jmp
test
jp
mov
xchg
aad
xchg
scas
aad
shr
and
cmpsb
mov
loope
fisubl
pusha
je
push
outsl
xchg
cltd
jg
sub
in
lcall
insl
scas
mov
jge
les
pop
inc
sahf
push
push
sbb
scas
in
mov
insb
xor
mov
jmp
jecxz
push
dec
adc
adc
imul
insl
cmp
filds
mov
es
data16
insl
cmp
xchg
mov
stos
movsb
cmp
cmp
ja
push
adc
imul
jae
sbbb
push
adc
sub
and
push
loopne
stc
std
dec
lcall
or
outsb
fildll
lret
pop
push
push
dec
ja
mov
mov
jecxz
jno
mov
pop
call
pop
ja
jp
scas
insl
pop
inc
cmp
mov
dec
adc
inc
loopne
push
inc
lret
imul
dec
lret
mov
adc
add
mov
sbb
xchg
js
jge
lds
add
push
mov
jle
out
mov
cld
jmp
repz
pop
loope
daa
adc
arpl
sarl
jecxz
push
jmp
test
inc
xchg
jnp
call
mov
cmp
add
int
cmpsl
nop
shlb
test
push
js
cld
dec
and
add
pop
push
stos
push
sub
scas
in
push
pusha
ljmp
mov
incb
adc
lods
dec
pop
bound
sbb
xchg
and
add
dec
mov
idivl
mov
gs
testb
dec
loope
sub
jns
mov
and
add
out
push
and
sub
or
int3
add
lds
aaa
int3
jo
sub
icebp
sub
shrl
cld
bound
mov
jae
testb
mul
hlt
cmpsb
jno
xchg
daa
xor
add
std
lock
popf
repnz
pop
daa
lea
repnz
enter
js
sbb
cmpsb
jecxz
jo
mov
inc
xchg
cwtl
imul
dec
push
int
jg
mov
js
jle
sbb
cwtl
scas
dec
and
faddp
inc
jmp
push
sub
rcl
cli
xor
xor
push
inc
in
mov
dec
cmpsl
or
sub
push
mov
scas
dec
fcmovne
dec
add
in
sbb
mov
jg
sub
sbb
mov
mov
and
push
adc
pop
cmp
int
pop
inc
in
insl
stos
mov
pop
movsb
data16
jge
adc
cmp
xor
lock
pop
add
mov
sub
jecxz
mov
cli
inc
inc
pop
popf
insl
test
ss
or
icebp
in
mov
and
pop
sub
mov
add
in
xor
sbb
loop
daa
dec
les
nop
sbb
xor
push
jnp
xor
clc
adc
mov
loope
sub
int3
cwtl
adc
mov
test
mov
out
dec
fs
outsl
cmc
push
mov
adc
mov
or
out
pop
daa
repz
jle
pop
jae
mov
push
add
jmp
insb
loope
or
jae
cltd
outsb
cltd
dec
lea
pop
lock
dec
test
adc
fldt
and
ja
mov
rcr
push
xchg
div
mov
pop
mov
xchg
cmp
mov
cmp
jp
enter
fisubrl
outsl
xchg
xor
sub
ljmp
xor
stc
jne
movsb
cmp
sar
cmpb
test
js
inc
mov
jecxz
rcr
lcall
xor
sub
mov
iret
cwtl
imul
enter
inc
ficoms
cld
fidivl
mov
dec
fwait
cwtl
test
rcrb
outsb
lret
sub
adc
movsl
inc
jb
jo
mov
jae
dec
jmp
stos
scas
cmp
fwait
dec
das
jecxz
rorb
jne
jp
cli
cmp
push
xchg
add
cld
enter
jb
int
pop
jp
xor
push
insb
and
cmp
mov
aas
cmp
ret
cmc
mov
mov
nop
xchg
or
pop
pop
add
in
lcall
stc
int3
jae
mov
adc
outsb
cmp
push
xchg
mov
les
cmp
rclb
mov
rcr
adc
and
or
push
push
pop
adc
mov
add
mov
mov
loop
dec
pop
lahf
or
cmpsl
inc
pop
inc
push
push
in
mov
push
xchg
lds
aas
push
xchg
jb,pn
push
pusha
xchg
jg
cli
push
jno
cltd
mov
dec
xchg
mov
mov
cld
fldl
push
fmul
test
data16
imul
dec
pop
jle
mov
aaa
rorl
sahf
xchg
decb
push
les
sbb
aaa
mov
and
dec
mov
pop
xchg
add
adc
push
mov
test
iret
or
dec
fisubs
cmp
push
movl
or
fisttpll
pusha
out
bound
mov
xchg
inc
outsl
fidivs
push
sarb
mov
popa
xchg
lock
cwtl
pop
lahf
movsl
aas
stos
lea
cmp
jb
dec
add
sbb
stc
out
je
xchg
and
jae
lahf
popf
cmpsb
sub
das
jbe
and
daa
subb
out
test
loope
shl
sub
xor
scas
int3
gs
pop
pushf
sbbb
xchg
jmp
push
bound
outsl
ja
loope
xchg
cltd
or
insb
notb
mov
jp
cmp
test
addr16
adc
leave
ds
xor
insb
pop
pop
mov
aas
sub
dec
mov
sti
mov
rorb
test
add
sub
call
xor
rorb
shl
loopne
cmp
push
bound
cmpsl
cmp
call
insl
pop
push
out
add
in
dec
mov
das
out
jne
gs
mov
dec
jb
je
mov
aas
icebp
cmp
loope
xor
adc
loop
cmp
lcall
and
sar
cmp
push
mov
mov
lcall
pop
loopne
icebp
cld
scas
stos
jns
sub
xchg
addr16
cltd
aaa
or
arpl
cmp
mov
fcmovu
sub
movb
ret
sub
adc
sbb
mov
test
nop
je
repnz
mov
jle
inc
xor
test
xchg
das
lock
jns
sbb
mov
aad
add
lcall
aaa
aad
cltd
dec
stc
or
hlt
push
pop
sti
mov
fs
lock
jbe
cmpsb
xchg
pop
mov
sub
lret
inc
xchg
or
fcomps
mov
cmc
in
mov
xchg
fisubl
int
cmp
jbe
popa
xorl
sbb
mov
lock
mov
lahf
sub
cmc
jecxz
arpl
test
cld
cld
push
repz
add
mov
or
xor
das
imulb
cwtl
stos
adc
repnz
jg
loop
scas
xchg
push
sbb
sbb
push
mov
jg
push
lods
test
lret
rclb
add
arpl
popf
ss
jno
int3
xor
mov
lret
pop
data16
cmp
fs
mov
daa
jnp
fnstenv
es
in
and
out
test
mov
adc
xor
movsb
rcll
xchg
cli
in
mov
insb
out
lret
ss
mov
sbb
and
es
jl
shl
sahf
out
push
push
popf
push
jb
dec
aad
pop
ljmp
shll
jnp
lret
inc
mov
repnz
stos
jo
lock
xor
aam
or
out
push
into
aad
adcl
outsb
fcoms
or
xlat
mov
fstp
fisubs
lahf
shr
lret
inc
xor
xchg
dec
ss
mov
fucomp
inc
xor
sub
sub
add
xchg
adc
leave
sub
popf
clc
iret
js
xor
icebp
sahf
sub
dec
jo
jmp
loope
mov
xchg
das
or
out
cmp
sbb
js
and
adc
popa
push
pop
arpl
mov
jo
adc
fwait
mov
add
push
in
mov
and
cmp
xor
xchg
or
and
roll
sub
rcl
dec
jo
fs
jae
call
addr16
jo
andl
push
dec
sub
ds
shrl
fs
mov
mov
int3
or
jbe
jns
push
ss
ret
adc
int
lods
sbb
add
daa
and
mov
int
push
mov
mov
cmp
jecxz
scas
cmpb
xor
mov
adc
sub
or
dec
shrl
fildll
fnstsw
lods
stc
loop
dec
add
test
ss
dec
push
cmp
test
orl
hlt
sbb
out
hlt
dec
lcall
fchs
std
stos
push
sub
pop
test
bound
popf
mov
outsl
pop
ret
lods
int3
sub
adc
mov
pop
icebp
test
sub
xor
cmp
cmpsb
ljmp
out
mov
shr
ljmp
or
pop
and
adc
mov
xchg
fists
js
andb
xor
shlb
sub
inc
mov
hlt
mov
test
int3
sub
xchg
jnp
aaa
jb
cmp
lods
pop
out
jo
add
dec
mov
jecxz
fsubr
inc
mov
vmaskmovdqu
shl
push
pop
outsb
pushf
aam
hlt
mov
push
mov
adc
pop
je
mov
sub
out
mov
mov
pop
lock
negb
mov
xor
fbstp
shrb
ss
repnz
ljmp
jb
pusha
pop
sub
xchg
fdivrl
mov
pop
sub
jns
rcrl
xor
arpl
push
mov
mov
fsubrs
cs
cmp
or
jp
hlt
add
cmp
jae
pop
out
fnstcw
xlat
bound
xchg
mov
sub
xor
push
in
repz
sbb
inc
pushf
mov
ss
xchg
movsl
ljmp
and
fadd
pop
dec
xchg
and
ja
popa
stos
push
cmpsl
mov
arpl
mov
aas
aad
es
js
loop
jae
pop
jecxz
movsb
adc
dec
cmp
cmp
xor
test
aam
fsubrl
rcrb
xchg
add
out
iret
adc
leave
fldcw
ret
or
bound
pop
or
stos
repz
mov
rolb
xlat
push
int3
add
cwtl
push
jmp
cmp
sbb
decl
into
pop
xor
jo
adc
fs
mov
mov
and
mov
int3
fs
ja
adcl
dec
sbb
addb
mov
pop
cmp
les
or
mov
dec
inc
push
mov
notb
inc
dec
stos
push
std
mov
stc
sti
push
push
lds
dec
mov
adc
push
pusha
cwtl
or
or
mov
mov
sub
cmp
or
jae
push
insl
mov
sub
inc
xor
mov
adc
xorl
arpl
jo
mov
popf
mov
xor
fimull
aam
push
ret
mov
push
add
imul
jns
int
ljmp
cmpsb
mov
aaa
ret
sub
mov
mov
mov
cmpsb
mov
adc
rcll
cs
insl
es
mov
jmp
out
xchg
cmpl
rcl
cmp
mov
push
mov
ds
push
ljmp
sbbl
xor
xchg
les
notl
push
xchg
mov
adc
into
pop
pop
sub
dec
adc
mov
scas
sub
stos
adc
cmpsb
lret
ljmp
lods
hlt
adc
sub
dec
decb
pop
in
jne
adc
xchg
sbb
push
inc
sahf
xorb
idivb
mov
mov
add
hlt
fldenv
shl
mov
test
mov
and
jb
add
rcr
jno
sub
imul
test
push
mov
cmp
pop
lret
jmp
imull
call
mov
pop
shl
pop
enter
outsb
jbe
out
test
ljmp
call
ds
ss
mov
mov
mov
cltd
popf
lock
pop
je
mov
jnp
and
mov
outsl
dec
popf
sbb
or
rcrb
stos
fildll
mov
adc
sub
dec
lcall
pop
mov
arpl
pop
xchg
aaa
sahf
push
inc
std
ret
jne
add
inc
mov
xchg
fmuls
insl
xchg
jbe
adc
adcl
mov
pop
js
push
pop
mov
mov
imul
pusha
pop
insb
jnp
or
adc
cli
sub
leave
xchg
inc
pop
bound
adc
out
dec
push
xor
insb
mov
xchg
xchg
dec
xchg
imul
mov
mov
jb
rcrl
jne
jo
push
xchg
es
int
jmp
popf
sti
jmp
lret
mov
jmp
loope
sbb
cld
mov
ret
pop
inc
inc
cmpsl
dec
aad
pop
xchg
js
stc
sbb
lret
js
fdivs
dec
mov
int3
gs
push
pop
sti
xor
pop
adc
shll
pop
popf
add
fdivrl
in
mov
mov
or
mov
js
out
ds
or
jp
stos
inc
or
insl
jbe
jg
rcll
mov
outsb
jmp
or
jmp
jmp
test
inc
aaa
iret
repnz
leave
test
sub
sbb
pop
lcall
and
call
into
xor
sbb
adc
out
mov
add
cs
cmp
hlt
cwtl
test
xchg
fists
arpl
and
sub
xchg
xchg
push
xor
jp
or
mov
mov
add
sbbl
sub
mov
out
dec
mov
inc
push
sub
ja
lods
and
add
and
enter
into
mov
inc
cmp
or
or
add
adc
data16
mov
mov
test
rcrl
xacquire
lahf
pop
cwtl
pop
adcb
and
out
push
jmp
lahf
cmp
aaa
aaa
in
push
fadds
int3
in
mov
mov
and
addb
xorl
aaa
hlt
xchg
dec
pop
xor
cmp
xor
cmpb
int
lea
fdivs
and
fwait
ja
movsb
lret
mov
jno
popf
sbb
push
sbb
cli
test
mov
dec
popa
mov
pop
jb
fwait
stc
mov
push
xor
or
test
lcall
or
mov
jnp
cmpb
cli
movsl
call
jns
repnz
cmp
addb
mov
sub
fistps
fildll
cltd
and
fistps
ds
xchg
cs
sbb
sub
jb
pop
negl
jl
jg
jb
arpl
insb
pop
mov
cli
mov
fisttpl
mov
sahf
jmp
push
in
mov
mov
cmp
push
ds
mov
jo
adc
pop
or
leave
xor
leave
movsl
mov
sbb
es
rorb
adc
ret
pop
xchg
jmp
stos
scas
scas
sbb
ss
push
pop
or
xchg
imul
aaa
cld
push
insb
mov
mov
nop
mov
rolb
inc
xlat
rcll
dec
mov
movsb
push
js
bound
mov
mov
inc
jg
rcll
ret
stc
push
lahf
not
mov
andb
mov
cmp
push
jbe
stos
js
cmc
jg
rclb
inc
sbb
ja
mov
das
xor
pop
pop
addr16
push
mov
cmpsl
sub
inc
lahf
hlt
or
sub
sub
imul
mov
ret
xor
mov
pop
jns
arpl
xchg
test
cmc
out
cmpsl
sub
int
jmp
lods
push
ja
mov
mov
jecxz
insl
cwtl
stc
js
lret
inc
popf
fwait
push
or
js
into
dec
aas
mov
cld
inc
int3
jb
jmp
js
xchg
mov
sbb
mov
lock
add
ja
xor
dec
sub
cmp
outsl
push
fwait
dec
leave
mov
mov
pop
scas
sti
fwait
push
adc
sbb
jns
movsb
add
ds
or
xor
mov
ds
pop
jo
sahf
add
sub
negb
stc
adc
mov
mov
push
lret
dec
imul
lcall
insb
stc
loope
fdiv
xor
fbstp
dec
mov
mov
cmpsl
mov
xchg
sub
push
lret
rorb
push
subl
sbb
sbb
and
mov
out
in
push
cmp
cltd
pop
loopne
mov
nop
lods
stc
push
nop
xchg
and
dec
ret
insl
fldt
pop
mov
push
test
dec
adc
sahf
dec
jmp
loopne
dec
mov
outsl
inc
inc
xchg
test
fsubr
mov
mov
fwait
test
sub
inc
std
mov
sbb
jo
or
xchg
icebp
and
mov
mov
xchg
insl
leave
mov
nop
xchg
movsb
out
cmpsb
sub
sbb
leave
test
cmpsb
enter
or
dec
mov
push
cmp
inc
inc
call
rclb
jp
xchg
add
jno
scas
dec
fmull
mov
je
das
push
out
jbe
pop
xchg
jecxz
loop
xor
icebp
or
mov
inc
shlb
rorl
popf
out
jl
gs
xor
test
fneni(8087
insl
fnstcw
das
hlt
imul
inc
scas
xchg
mov
cmc
fwait
lods
aas
test
rcrb
filds
pop
or
outsb
pop
mov
out
int
fldcw
mov
push
or
mov
fcoml
pop
dec
iret
test
in
ja
outsb
fwait
and
inc
aaa
add
push
pop
scas
out
adc
mov
inc
movsb
adc
jne
add
sti
or
add
and
nop
pop
test
inc
lods
sahf
adcl
mov
sbb
out
jne
pusha
mov
xor
je
dec
test
lahf
mov
jl
out
sub
ss
gs
mov
cmp
ja
dec
addb
xor
jmp
repz
pop
cltd
push
decl
jp
fcomps
outsb
adc
inc
mov
and
lock
in
jle
mov
jl
negl
mov
add
xor
mov
loope
lods
sbb
iret
ljmp
add
sub
jmp
lds
roll
mov
push
mov
cmpsb
lea
dec
in
aaa
cltd
jae
rcrl
dec
daa
jo
inc
fwait
and
add
shr
sbb
aaa
and
mov
adc
shr
jmp
mov
mov
jbe
xchg
imul
mov
xchg
mov
loop
fidivs
lret
call
jge
rolb
jle
sub
xor
jnp
mov
pop
mov
mov
sub
adc
movsl
fldt
stos
lds
aam
lods
js
or
and
and
outsl
aaa
sbb
jp
stc
fstl
mov
xchg
or
cmp
add
adc
js
fwait
inc
push
inc
xor
out
mov
in
push
inc
inc
fldt
mov
mov
sarl
jo
jmp
mov
adc
subl
push
push
and
addr16
xlat
enter
inc
mov
xor
jo
push
pop
push
test
imul
stos
stos
popa
cmc
mov
jnp
xchg
sbb
flds
js
xchg
in
mov
cli
les
cwtl
dec
pop
jl
jge
sarb
pusha
fistl
out
repnz
iret
gs
stos
call
call
jnp
nop
mov
cmp
mov
pop
aad
test
rcl
ret
stos
aaa
xchg
cmp
ret
cltd
rcrl
jmp
mov
fiaddl
cmp
pop
arpl
rorl
mov
push
sbb
adc
aas
pop
push
jle
cmpl
das
push
rol
mov
push
call
fs
jecxz
inc
dec
repnz
sbb
sahf
int3
sahf
sub
loop,pn
sbb
xor
jge
pop
nop
hlt
inc
xchg
repz
and
sub
arpl
push
xchg
ja
cli
les
mov
inc
jg
mov
sub
shrb
mov
mov
cmp
mov
out
int3
push
aam
push
outsl
inc
add
inc
test
and
sub
movsb
mov
cmpb
pop
push
mov
addr16
push
pop
inc
xor
mov
xor
loop
or
rcl
pop
subb
ret
lsl
shl
out
out
cmc
cmp
fsubr
pop
out
mov
jge
shrb
int3
mov
cmova
sub
push
mov
test
sub
in
dec
nop
pushf
xchg
rorb
imul
adc
sub
sbbl
xchg
mov
scas
adc
xor
mov
addr16
fldt
push
mov
add
call
cmp
sub
push
mov
lea
lea
movsb
into
ljmp
adc
imul
sar
pop
cwtl
inc
shl
imul
hlt
cs
fdivl
push
adc
test
aad
loop
inc
std
loop
inc
pop
mov
pop
movsl
mov
push
pop
cwtl
enter
lcall
xchg
adc
sahf
es
inc
adc
mov
ja
sub
pop
icebp
sbb
dec
lea
mov
add
rcr
push
add
out
bound
lods
add
scas
test
lods
sub
mov
sbb
je
cli
xor
sahf
das
sub
pushf
dec
mov
push
aam
jne
jno
pop
mov
fcmovnb
cmp
mov
xor
adc
xchg
or
jb
adc
out
lock
pop
xchg
popf
arpl
repz
movsl
jmp
repz
fwait
inc
into
mov
aad
cs
mov
inc
cmp
test
pop
ja
inc
mov
fiaddl
div
push
orl
jmp
cmp
pusha
jmp
imul
dec
shrb
cmp
cs
add
mov
dec
ja
jmp
cli
jle
cli
test
sub
inc
xchg
enter
stos
jne
jl
jno
dec
dec
sub
sarb
and
test
cmpsb
cwtl
fwait
inc
push
push
fs
test
adc
sbb
jmp
mov
sbb
lahf
dec
scas
nop
out
in
mov
iret
stc
xchg
fldcw
jge,pt
push
shll
nop
adc
lret
sbb
sbb
jg
sbb
ret
aas
and
jns
sti
add
adc
jmp
xchg
loopne
adc
sti
aas
adc
inc
data16
pop
jae
leave
push
in
and
jb
aas
push
sbb
cli
mov
les
sbb
fs
xor
cmpsw
jno
sub
adc
jo
xchg
sarb
xchg
enter
aad
imul
in
push
jle
push
pop
fmuls
mov
fdivrl
mov
xor
jno
push
cmp
jl
scas
xchg
and
cs
or
sbb
sbb
or
fisttpll
test
out
mov
jae
test
imul
jl
imulb
int3
aad
adc
loop
ljmpw
sub
test
or
cmp
jp
hlt
pop
inc
into
mov
pop
xor
leave
mov
dec
lcall
cmp
add
xchg
enter
adc
je
xor
icebp
test
mov
repnz
mov
push
jg
pop
ss
and
inc
and
shll
sub
scas
stc
testb
sub
mov
xor
and
sub
shrb
loope
fwait
ljmp
test
test
gs
ficompl
aaa
icebp
inc
mov
mov
xchg
mov
fnstsw
loope
shrl
sbb
jle
les
push
fnstenv
or
lock
stc
cmp
sub
push
testb
mov
orb
into
mov
sbb
inc
and
int3
ja
pop
hlt
mov
idivl
in
xorb
js
outsl
mov
xor
inc
sub
dec
cmpsl
mov
loop
pop
inc
insb
and
cwtl
aas
mov
cmp
pop
mov
fistps
roll
mov
outsl
lahf
lock
sbb
push
and
psraw
jmp
aad
sub
pop
das
insl
add
into
dec
das
lods
lret
xor
ficomps
and
cmc
jae
in
lock
xchg
in
jg
mov
popf
dec
add
sbb
xor
fistpl
ds
in
loopne
clc
cli
arpl
cwtl
or
outsb
xchg
and
adc
cs
arpl
lea
test
sub
cmp
and
insb
and
xchg
shl
lret
shl
fnop
sbbb
mul
out
test
xor
jae
xlat
push
pop
xor
rclb
xchg
int3
fwait
mov
test
shrb
mov
xor
add
dec
sub
sbb
mov
repz
xor
cwtl
loopne
jmp
mov
add
xchg
pop
dec
cmp
xor
jne
inc
push
cmp
lods
jb
inc
push
jnp
outsb
sbb
cs
jns
shll
push
out
popf
sub
arpl
sbb
les
xchg
fsubl
cmpsl
jl
sbb
pop
aaa
jmp
das
sbb
jmp
repnz
dec
shl
mov
or
call
ret
xor
jmp
insl
mov
pop
jb
movsl
cltd
repnz
imul
mov
call
dec
xchg
jmp
out
adc
inc
jno
fsubrs
xor
cwtl
sti
xchg
lds
decb
daa
cmpsb
xchg
sub
jo
daa
mov
loopne
adc
stc
sub
sbb
rol
dec
jo
cmp
xor
cmp
sbb
dec
fsub
mov
jmp
cwtl
dec
cltd
cmp
mov
pop
mov
add
push
mov
mov
xchg
rclb
adc
pop
rcll
lret
add
jmp
and
and
rcrb
pop
or
sbb
aas
push
nop
xor
adc
inc
inc
shlb
adc
dec
cmpsb
add
mov
test
fisttpll
add
sub
sbb
push
add
xor
out
mov
lods
fwait
or
sub
sti
aas
push
mov
push
push
ljmp
outsb
mov
sar
adcb
adc
fstpt
push
sbb
insl
sbb
pushf
and
stos
cs
and
pop
jns
rcrl
loop
je
shll
jecxz
test
xor
ds
mov
loope
out
hlt
xor
push
xchg
xchg
mov
pop
leave
jo
push
push
fs
icebp
fs
xor
pushf
aam
sub
jmp
or
push
inc
add
adc
jb
sub
xor
je
sbb
push
and
pop
push
std
cmp
inc
or
pop
mov
push
popa
add
adc
call
lods
repnz
arpl
loope
push
adc
rcl
cwtl
cmp
ds
pop
inc
cwtl
xor
cmpsb
sbb
idivl
test
dec
fdivrl
cs
push
inc
out
test
or
ficompl
dec
and
jae
out
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
into
mov
and
pop
jl
lahf
popa
sbbb
mov
or
push
jge
lcall
int3
cmp
lahf
jl
and
inc
fdivl
out
push
and
fdivrs
cmp
in
outsb
add
adc
je
idivb
sbb
stc
push
popf
xchg
rol
mov
sub
inc
int3
andb
pop
div
push
loopne
lods
loope
stos
sub
lea
fcmovne
lcall
shrl
push
icebp
dec
mov
adc
out
bound
pop
adc
mov
shll
fdiv
sbb
dec
and
inc
xlat
push
stc
dec
inc
inc
into
jns
cmp
fistpl
or
and
aad
lds
mov
daa
push
mov
fstps
lret
mov
jnp
mov
mov
movsl
ret
loope
inc
test
add
pop
out
pop
lahf
and
dec
inc
fldcw
jmp
cli
adc
stos
cmp
adc
gs
fnstenv
inc
inc
shll
jbe
cmp
xchg
cmp
aad
jge
push
mov
and
fnstcw
adc
iret
mov
bound
adc
in
cmc
add
fimull
fmull
push
inc
mov
inc
inc
sbb
add
insb
aad
fbld
adc
mov
dec
adcl
pop
mov
jecxz
aam
fsubs
loop
fstpt
fnstenv
mov
add
cs
mov
push
gs
jbe
sbb
sub
jp
jne
adc
das
xchg
and
in
cmpsb
loop
adc
repnz
add
in
ret
xor
adc
pop
loope
mov
inc
sbb
or
out
add
bound
dec
or
and
or
adc
jecxz
aam
lret
or
add
rorl
lds
jl
sahf
jno
adc
inc
sahf
into
test
dec
lods
scas
sub
sub
and
dec
adc
fs
push
sahf
fcomps
xor
pusha
push
mov
push
jnp
add
lock
aam
movsl
jbe
dec
cmp
and
xor
mov
adc
push
or
sbb
adc
jg
stos
push
push
xchg
out
sbb
xor
mov
das
or
movsb
xchg
mov
into
es
pop
cmp
int
cmpl
loopne
jecxz
jae
pop
fs
mov
andl
cld
sti
adc
subl
sbb
xor
adc
sub
lahf
lcall
in
loope
fmuls
cmc
orb
jg
movb
xor
adcb
shll
mov
dec
or
and
daa
sbb
jle
pop
lods
push
and
in
test
add
xor
xor
push
dec
lds
jo
jge
bound
inc
subl
and
jae
dec
jo
sub
dec
cmc
pop
out
pop
sub
fildl
xchg
dec
inc
xchg
jge
insb
imul
inc
hlt
sti
ds
or
out
or
or
insl
xchg
push
in
aad
dec
jns
xor
sub
jl
gs
int
cmpb
cld
pop
xchg
ret
not
mov
pop
hlt
iret
and
pop
jmp
fisubs
bound
jge
push
jg
das
mov
jmp
daa
call
es
dec
cmp
addb
dec
jmp
in
push
daa
add
sbb
cmp
jecxz
push
push
in
shrl
enter
sub
enter
lret
dec
out
mov
scas
imul
leave
fbstp
mov
mov
cs
cmp
repz
xor
repnz
bound
mov
inc
enter
popa
pusha
cmp
mov
xchg
dec
test
jge
mov
scas
adc
push
call
and
testb
xchg
cmp
int3
mov
pop
mov
sub
icebp
adc
pop
imul
pop
add
inc
cmp
scas
ficoms
mov
imul
js
ret
sub
loope
pop
sbb
push
aaa
sub
jmp
cmp
std
xor
sbb
push
sub
leave
mov
mov
sub
mov
data16
sub
sarb
cmp
int3
daa
and
push
popf
jbe
sbb
je
popl
andb
int3
add
outsl
out
daa
fsubrp
jbe
incb
out
mov
mov
and
aad
repnz
sbb
dec
mov
jl
push
fists
js
cmp
lds
sbb
insb
test
aad
sub
xchg
out
test
or
or
rclb
or
and
adc
movsb
inc
sub
mov
in
push
out
sbb
mov
lods
push
sub
xchg
andb
and
cld
aad
lret
in
mov
and
ja
dec
stc
imul
leave
out
mov
pop
addr16
inc
dec
cmp
jp
icebp
shl
jl
or
in
push
fcomp
dec
inc
push
xchg
loopne
adc
andb
jns
sti
mov
sub
in
in
cmp
mov
pop
pushf
push
and
xchg
loope
mov
xor
addl
lea
call
stos
jge
test
notb
mov
lahf
faddl
cmp
ret
pop
aaa
sub
movsb
pop
xchg
cmp
ficomps
nop
and
rcrb
mov
jge
outsl
or
push
dec
iret
lods
xor
dec
sub
aas
mov
nop
mov
imul
enter
xchg
test
xor
xlat
imul
mov
mov
repz
jns
test
xchg
std
mov
cmp
fmull
xor
jmp
and
inc
jae
test
or
lock
sub
lret
mov
adc
cmpsb
jnp
leave
dec
cmc
or
cwtl
repnz
fstps
push
aad
add
inc
cs
out
sub
loope
ret
stos
mov
icebp
loopne
add
mov
std
xchg
lea
cwtl
gs
adc
sbb
cwtl
xor
idivb
sahf
add
shrl
dec
orb
jecxz
xchg
add
lea
imul
rcr
ja
push
dec
jae
idivl
dec
mov
push
inc
ret
inc
js
sti
pop
push
ss
push
jbe
fwait
or
leave
aam
pop
fcompl
movb
rcrl
fsts
mov
push
out
mov
adc
cmp
out
cli
stos
cmc
mov
aam
sub
jg
pushf
fstp
jecxz
mov
jg
ljmp
add
mov
or
sbb
pop
js
gs
test
stos
add
movsb
xlat
lods
inc
sbb
jno
movsb
lds
push
fidivl
jecxz
sub
loope
pop
mov
cmpsl
and
cmp
dec
sub
imul
jg
mov
sbb
jae
dec
ret
aam
push
popf
loopne
in
pop
mov
push
fmuls
cmpsb
minps
cmp
lahf
sub
sbb
mov
cmc
std
fnstcw
and
adc
cmpsl
int3
push
sbb
add
fnstcw
or
push
repnz
jbe
loope
leave
andb
orl
lret
clc
stos
cmp
clc
and
adc
stc
sub
out
sbb
xchg
mov
jnp
jnp
subb
adc
jg
jg
xchg
je
inc
mov
jp
add
cld
xchg
mov
push
lret
movsl
pop
adc
jb
cmpsb
shll
jns
adc
add
fcoml
aad
daa
sub
cld
inc
sarl
in
jbe
sbb
mov
test
mov
clc
push
stos
scas
inc
cmp
jp
shll
mov
add
push
lret
and
out
pop
outsl
mov
or
divl
pop
das
adc
shrl
leave
cwtl
pop
push
add
popf
and
dec
repnz
sti
adc
cmpsl
hlt
sub
mov
mov
outsb
mov
lcall
sub
imull
cmp
dec
stos
sahf
mov
add
cmpsb
mov
popa
test
push
mov
js
shlb
jp
scas
and
xor
or
jb
cmp
sub
xlat
push
push
aas
pop
inc
mov
clc
fildll
or
pop
xchg
mov
mov
mov
inc
scas
sub
push
bound
jp
rclb
ljmp
and
stos
cmpsb
sub
inc
sarl
xor
test
push
loopne
cli
mov
mov
scas
test
pop
jg
pop
out
jge
push
aad
mov
mov
out
cmp
ss
add
cmpsl
mov
andb
push
fidivrl
xor
pushf
sbb
insb
int3
dec
outsb
data16
movl
sub
mov
jg
gs
xchg
jmp
xor
push
push
cld
jle
jle
jmp
sub
cmp
mov
aam
inc
enter
cmpb
iret
xor
push
jl
stc
mov
fdivrs
xorl
push
xchg
mov
rolb
dec
dec
or
das
jmp
add
add
adc
dec
mov
iret
imul
cmp
or
cmp
mov
out
nop
xchg
mov
fisttpl
incb
rcll
ret
movl
rolb
sbb
fwait
xor
inc
mov
inc
daa
lods
jmp
movsb
pop
sarl
xor
adc
fidivrs
int3
leave
imul
pop
stos
dec
popf
shll
ret
rcll
outsb
sub
inc
outsb
jae
mov
ds
jp
aas
repz
push
rcrl
inc
lahf
cmp
pop
lret
cmp
mov
sbb
lea
xor
out
cmp
je
imul
loopne
fcmovnu
in
jbe
xchg
xor
lcall
gs
mov
fdivl
shll
test
xor
loop
and
add
sbbb
xchg
les
pop
sbb
lods
jmp
inc
push
in
mov
mov
popf
sbb
fwait
aaa
inc
xchg
push
repnz
aad
pop
cmp
sbb
mov
adc
jno
pop
in
out
mov
xchg
loop
test
insb
hlt
sbb
cmpb
lret
adc
leave
pusha
clc
and
fcmovb
clc
xchg
dec
pop
sbb
xchg
add
lret
je
sbb
out
add
jnp
into
je
addl
into
push
add
cs
sbb
xchg
sub
repz
lods
inc
mov
push
orl
jle
sbb
push
dec
xchg
push
sbb
lea
inc
mov
push
xchg
sub
mov
mov
pop
gs
dec
push
dec
call
nop
jecxz
mov
cmp
cwtl
mov
push
shlb
xchg
lods
int
inc
lds
adc
add
xchg
mov
shl
mov
mov
shrb
cmpsl
aad
sbb
pcmpeqb
pop
xor
popa
lea
enter
nop
mov
push
cltd
xchg
lds
insb
ss
fcompl
stos
fldcw
ds
andl
dec
push
push
pop
mov
mov
inc
mov
push
inc
les
add
push
cwtl
xchg
jmp
push
into
fdivrp
xchg
cwtl
and
jmp
add
push
std
roll
xor
dec
cmpsl
xor
cld
xor
add
fsubs
xchg
push
pop
cmp
xlat
xlat
lock
mov
adc
hlt
rcll
inc
jg
stos
mov
jae
or
dec
inc
lret
cmpsl
repnz
mov
das
shll
xor
orl
xchg
rcr
push
roll
shll
mov
cld
dec
jnp
push
cli
or
and
js
cmc
mov
cmpsb
sub
xchg
testb
push
xor
dec
jo
popa
hlt
dec
push
dec
or
jae
ret
inc
lcall
je
ja
mov
stos
cmp
mov
sbb
adc
cld
pop
fwait
sub
rorl
out
mov
inc
lret
xchg
sbb
scas
lcall
fists
xor
sbb
xlat
popf
leave
lods
lret
ss
pop
push
lods
inc
sahf
mov
flds
data16
test
in
xor
add
loope
loope
loopne
jbe
add
pop
rcrb
ja
sbb
jbe
dec
mov
lret
jne
ret
std
lds
lods
sub
dec
push
jnp
dec
cs
test
popf
add
sub
adc
loopne
cvtpi2ps
fistl
popf
test
imul
in
inc
nop
add
push
jle
fcomps
lahf
xchg
and
gs
lods
rol
inc
dec
imul
in
mov
test
mov
clc
dec
xorl
fistps
xor
add
popa
rorl
outsb
shlb
mov
adc
or
mov
adc
mov
inc
push
clc
frstor
push
nop
ficomps
mov
fsubs
rorb
mov
arpl
xchg
dec
shrb
icebp
fcomps
in
mov
mov
mov
push
sbb
cwtl
pop
mov
jp
inc
popa
mov
push
andnps
jbe
enter
cmp
mov
clc
shlb
jns
inc
mov
jae
xchg
jmp
psllq
xor
mov
cmp
loope
adc
adc
into
gs
mov
out
fs
outsb
lret
mov
push
cli
hlt
mov
push
ret
jnp
xor
lock
and
sbb
cmp
ds
jno
push
ret
or
hlt
sbb
shlb
nop
sbb
lret
sbb
xor
add
stos
add
xchg
or
xchg
inc
cltd
adcb
data16
ret
cmp
xchg
cmc
xchg
loope
dec
sbb
mov
jecxz
fsubl
push
or
sub
xchg
stos
out
sbb
lret
in
xor
jp
or
je
inc
mov
rorl
pop
loopne
cmp
jae
jge
aad
repz
lcall
xor
pop
cwtl
in
es
cmpsb
xchg
test
aam
mov
cld
in
std
push
jns
add
cmp
rcrb
push
mov
mov
dec
call
adc
sbb
fldl
or
cltd
add
add
xor
les
pop
and
es
and
add
pop
jo
pop
or
lock
in
cwtl
popa
dec
out
cli
gs
mov
ret
fsubrl
scas
and
paddsb
inc
push
or
xchg
jae
pop
push
jbe
sub
mov
jbe
jno
daa
cmp
dec
jae
out
out
cmp
repnz
jbe
cmp
lret
dec
mov
stos
mov
or
sbb
ss
pop
fwait
jne
rclb
xchg
loopne
push
iret
gs
cmpsl
mov
mov
ds
test
scas
cmp
gs
add
jne
xchg
aad
push
cmp
pop
ja
mov
shrl
icebp
sbbl
mov
dec
or
pop
mov
stc
and
xor
sub
lahf
fmul
sbb
out
or
push
adc
add
loop
ss
adc
jge
push
lret
imul
je
dec
movsl
inc
cmpl
xchg
int
popf
sub
push
hlt
inc
rol
fwait
shlb
mov
pop
stos
mov
xchg
jno
add
sti
call
bound
jl
adc
mov
inc
jl
mov
inc
push
push
xchg
int3
ret
inc
leave
repz
sti
es
insb
adcl
lods
dec
popfw
rorl
jge
bound
arpl
adc
test
and
push
add
or
xchg
fbld
and
in
pop
pop
pop
add
les
pop
sbb
testl
mov
jbe
pushf
out
or
push
jns
add
mov
push
pop
outsl
ret
or
add
repz
mov
inc
cmp
cwtl
pusha
outsb
add
sub
cmp
addb
fsubs
shll
and
insl
int3
bound
cli
mov
notb
arpl
jb
stos
lods
jne
sub
mov
insb
xor
fwait
mov
pusha
mov
xchg
js
adc
pusha
jmp
aam
xor
fcmovne
sti
dec
push
movsb
scas
dec
mov
jne
cmpb
lock
mov
aam
cwtl
sub
or
mov
and
cmovae
imul
or
js
jmp
xlat
mov
test
aaa
cld
pushf
push
out
push
sbb
sub
clc
sbb
add
pop
adc
and
lret
mov
incb
fldt
adc
clc
fwait
repz
in
movb
sahf
xor
int3
test
lahf
xor
movl
pusha
ja
xor
add
loope
mov
jecxz
out
or
out
scas
es
mov
test
popa
fdiv
xchg
movsb
fs
add
mov
pop
fwait
stc
fildll
in
xchg
outsb
sub
xor
out
stos
in
fisttpll
xchg
push
ret
dec
stos
add
shlb
dec
mov
cs
mov
cmp
inc
call
lock
kandb
ud2
clc
or
scas
and
ret
mov
repnz
jno
inc
test
and
sbb
loope
sbb
and
cwtl
lods
push
aad
push
lods
sbb
xor
mov
mov
cmp
xor
lods
leave
sub
negl
xchg
inc
pop
in
stos
das
push
cmpsl
fidivs
enter
or
sbb
gs
addr16
fs
lds
repz
je
jle
cltd
sub
les
pop
jo
jecxz
js
pop
inc
popf
cmpsb
loope
in
and
xchg
jne
jge
sub
ja
popf
mov
enter
imul
aad
sbb
std
jnp
inc
sti
lcall
xorl
inc
roll
popf
add
add
mov
or
xchg
dec
push
mov
and
cmp
jb,pt
movsb
add
pop
sub
jae
repz
loopne
sub
cmp
into
rclb
sbb
adc
pop
pop
add
mov
arpl
nop
push
mov
jns
aad
cwtl
lahf
xor
in
rcrb
adc
std
xchg
addr16
jb
sub
in
push
iret
clc
push
mov
rcrl
movsb
into
push
call
xchg
into
in
cmpsl
inc
loop
rcl
fadds
mov
cwtl
cld
loopne
dec
out
bound
rclb
mov
push
mov
movsb
adc
xchg
inc
or
sbb
mov
cwtl
jp
es
xor
popa
and
cmp
loop
dec
xchg
lret
out
pop
mov
mov
pop
fsubs
jbe
repz
push
popa
stos
lret
int
add
pop
loopne
pop
lods
mov
loope
add
imul
sub
fwait
push
test
cmpsl
insl
dec
xchg
shl
inc
dec
dec
push
call
cmp
insb
popf
insl
pop
push
cltd
sbb
loopne
hlt
push
push
dec
cmpsb
loop
xchg
ficoms
fdivl
and
cmpsl
out
int
and
add
gs
daa
lret
fnsave
and
mov
les
xor
lods
subl
mov
fistpll
pop
loope
test
clc
insb
shr
int
ret
jne
and
cltd
in
jl
jp
mov
mov
enter
sub
xlat
push
stos
fimuls
es
popa
iret
or
mul
mov
jo
test
int3
loope
aam
adc
popf
jnp
pop
stos
dec
mov
adc
cmp
adc
in
cmp
les
mov
jmp
out
sbb
adc
test
inc
adc
ret
cmpsb
out
jmp
add
into
mov
sahf
xor
fwait
push
add
popf
sub
adc
scas
outsl
or
or
mull
adc
int3
lcall
cs
fs
insb
dec
mov
push
adc
sub
clc
insl
add
rolb
lcall
in
clc
fildll
jnp
adc
mov
cmp
mov
push
inc
mov
mov
mov
pop
mov
pop
inc
andb
cmpsb
inc
and
dec
std
hlt
popf
test
pop
sub
outsb
dec
loop
jl
ds
arpl
sub
add
mov
inc
lcall
pop
push
clc
fbld
cmp
and
ret
add
push
ret
add
sub
dec
adcl
insb
ds
xor
mov
mov
pop
stos
or
lret
shlb
mov
nop
movsl
xchg
sub
mov
mov
mov
pusha
clc
fcompl
adc
xor
dec
jmp
out
mov
int
and
in
and
cmp
pop
in
stc
aam
mov
sti
es
xchg
adc
adc
mov
cmp
outsl
ret
push
aas
aad
push
pop
fcmovnu
ret
mov
popa
push
mov
lcall
ds
aas
xchg
or
stos
lea
sbb
nop
imul
clc
xlat
sbb
mov
negl
push
pop
in
adc
adc
mov
mov
lock
add
inc
sub
out
fucomi
adc
out
imul
and
loope
pop
fsts
fwait
pop
pop
inc
popf
sbb
cmp
aaa
fimull
psrlw
leave
cbtw
sub
cmp
ret
mov
push
cmp
or
repz
loopne
ret
pop
in
enter
push
cmc
out
jbe
loopne
int3
and
add
sbb
pop
movsl
inc
out
mov
push
mov
sbb
lcall
loope
mov
mov
mov
cmp
sub
out
fwait
sbbb
push
fnstcw
cmp
inc
imul
rcll
scas
xchg
data16
and
inc
cmp
icebp
loope
push
pcmpeqw
jg
testl
mov
lock
jecxz
popf
xlat
mov
xlat
push
idivl
and
stos
imul
movsb
push
mov
fldt
movsl
lods
or
out
enter
mov
jbe
adc
and
mov
sbb
mov
xor
cmp
xor
or
paddusb
test
xor
div
push
flds
xchg
and
mov
sbb
cmp
es
cmpsb
test
in
jge
cld
cmp
mov
lea
lods
mov
or
in
addl
add
sub
add
or
fcoml
fldt
xor
pop
fdivrs
xchg
lock
int
jne
jbe
dec
jns
add
lahf
fxch
outsb
daa
push
imul
and
mov
nop
cmc
test
sub
enter
arpl
mov
push
shrb
popf
inc
adc
inc
mov
inc
rorb
and
sbb
pusha
shlb
sub
cmp
ret
cmpsb
push
xor
je
jl
adc
mov
cli
fimull
cmp
je
ret
jecxz
dec
shl
push
mov
fnsave
xchg
inc
pop
in
xor
sbb
fsts
push
cmp
push
testb
rcrb
dec
je
mov
jp
loope
into
or
std
daa
jecxz
cmp
jecxz
xor
xchg
mulb
push
sub
shl
cli
loopne
imul
adc
mov
push
pop
xchg
add
fwait
popw
push
scas
popf
inc
testb
dec
lcall
fiaddl
scas
lret
aaa
cmpsl
aam
not
stos
mov
cli
test
adc
mov
sbb
scas
pop
sub
cmp
adc
inc
mov
xchg
sti
xor
mov
fisubs
cmp
decb
iret
testb
hlt
fmuls
jne
in
mov
dec
sahf
enter
hlt
jl
inc
push
jmp
shll
cld
adcl
xlat
test
ja
lds
pop
inc
cmp
movsb
or
ja
in
fcmovnu
mov
dec
mov
aas
mov
aaa
call
out
pop
out
enter
out
stos
lret
aad
jl
orb
mov
mov
lea
jge
push
xor
dec
sarl
lock
adc
imul
jbe
je
fwait
cmp
stc
aaa
pop
jmp
je
std
lret
and
xorl
shrb
push
popl
and
pop
enter
sub
ljmp
flds
mov
lret
jne
int
cmp
repnz
pop
lahf
loopne
mov
or
out
cmp
cli
mov
mov
scas
sbb
mov
push
movsb
dec
shrl
daa
cmp
js
ja
clc
out
scas
and
popf
lea
in
rcrl
movsb
mov
jb
fldt
mov
push
mov
inc
add
inc
fiaddl
lods
xchg
repnz
cmpsb
sub
test
loop
out
mov
add
fnstsw
sub
aam
mov
push
mov
mov
push
rolb
leave
fisubrl
jecxz
mov
stos
mov
imul
push
or
les
jle
ljmp
imul
je
dec
sub
andb
ss
mov
xchg
pusha
mov
iret
repnz
mov
mov
cli
lcall
sbb
and
movsl
mov
aad
je
mov
mov
loope
jo
fimull
fidivs
pusha
adc
mov
das
jae
cmc
ftst
stos
idiv
xor
pop
inc
pop
sub
pop
in
daa
mov
mov
cmpsb
pop
mov
and
ficomps
or
mov
in
and
or
inc
je
or
dec
dec
cld
xor
inc
and
ljmp
clc
fistpll
popf
insb
xchg
cli
imul
gs
adc
sub
gs
pop
rcrl
xor
sbb
xchg
jg
mov
fistps
inc
fildll
add
sahf
aas
pop
lock
movsl
fsubrs
mov
into
xor
inc
mov
in
out
xchg
arpl
int3
in
mov
es
repnz
aam
sub
mov
addb
aad
fidivs
xchg
push
inc
mov
cwtl
subl
dec
pop
cmp
ss
mov
or
add
mov
or
mov
add
arpl
pop
adc
inc
pop
mov
inc
scas
jo
inc
mov
sub
jbe
jnp
pop
xor
idiv
mull
push
fildl
mov
je
dec
mov
sarb
sti
ds
inc
and
addr16
dec
pop
fidivs
add
pushf
lcall
imul
inc
mov
adc
or
outsl
hlt
loope
cltd
fs
xchg
leave
test
cld
pushf
test
push
jns
mov
lcall
add
pop
lcall
mov
or
lock
insb
repz
sub
xor
loopne
mov
or
push
fstl
jne
es
dec
jns
loop
add
cmp
jno
sti
xchg
popa
inc
gs
push
scas
mov
faddl
xor
inc
sbb
popf
pushf
in
sub
pop
fsubl
mov
xchg
sub
lock
pop
push
lock
popa
or
out
jne
daa
sbb
je
mov
sahf
cld
int
pop
fwait
in
cmp
or
sbb
sahf
test
dec
test
imul
push
test
insb
stos
aam
xor
dec
out
cmc
lcall
cmp
push
int
lods
add
sbb
jmp
inc
sub
jbe
int3
iret
rorl
inc
xor
cmp
dec
aaa
xchg
and
arpl
mov
pop
xchg
nop
fnstsw
jl,pn
adc
push
scas
ds
sbbl
test
push
iret
iret
sbb
out
xor
and
inc
dec
ss
aas
rcrb
add
xchg
push
dec
jg
fidivrl
aad
push
cmp
vpextrw
lds
jp
or
or
pop
push
push
xchg
jns
and
lret
adc
adc
inc
sbb
shll
xlat
push
rcll
xchg
mov
xrstor
or
sbb
sbb
jg
loop
fadds
sarb
repnz
jmp
imul
cld
and
pop
adc
nop
adc
jnp
mov
sbb
dec
fchs
mov
pop
xchg
das
jmp
enter
nop
fiaddl
add
lea
jno
jp
mov
push
or
mov
jg
jecxz
xchg
xor
out
in
push
mov
mov
adc
pop
mov
stos
and
aad
xchg
xchg
enter
in
push
jnp
pop
imul
push
mov
cli
dec
mov
stos
jecxz
mov
mov
push
daa
sbb
inc
pop
int
push
jmp
add
mov
movsl
aaa
imul
mov
addr16
ret
cli
xchg
jmp
add
cmp
clc
test
dec
rcr
shll
jp
fsubrp
sbb
aam
arpl
mov
subb
sub
xor
fwait
cltd
scas
lea
pop
sub
mov
mov
cltd
jmp
and
inc
inc
das
iret
mov
or
fistpll
out
mov
inc
sub
scas
jge
fistps
sbb
cmp
and
cld
lahf
div
sbb
pop
sbb
sub
mov
fsubl
push
pop
pop
aam
ret
or
jmp
std
xor
ret
clc
xor
ljmp
lea
in
adc
jo
negb
push
pop
mov
es
mov
jnp
push
ja
repz
or
push
inc
outsb
push
mov
xor
jns
adc
pop
xchg
pop
ja
adc
ret
js
enter
test
sahf
mov
cs
loop
xor
mov
fldl
cli
xchg
gs
stc
xorb
jecxz
fmulp
jmp
cmpsb
dec
fildll
xchg
push
xchg
pop
addr16
jmp
daa
jmp
xchg
fs
ret
out
jns
scas
sbb
sbb
pop
xchg
xchg
aad
stos
push
cmp
xor
push
cmp
aam
outsl
dec
repz
gs
xor
fwait
cmp
mov
pushf
mov
inc
jmp
or
inc
imulb
icebp
cmp
clc
lea
andl
cli
push
in
pop
dec
xlat
and
sub
cmp
xchg
mov
xchg
and
jl
jnp
rclb
dec
ret
pop
ds
xor
sub
push
sbb
int
mov
in
xor
out
cmp
sbb
inc
xchg
fisttpll
sub
xor
xor
mov
cmp
lock
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
cmc
sarb
pop
pop
jl
dec
cmc
popa
nop
inc
ljmp
jns
adc
jnp
cmp
lea
mov
push
sbb
shrl
into
cli
add
lock
in
dec
or
dec
out
add
sbb
sbb
pop
mov
jno
orb
push
sbb
sub
test
pop
lahf
test
js
dec
lret
sbb
xchg
xor
mov
sbb
sbb
rclb
or
mov
adc
loopne
negl
mov
in
movsl
rol
je
bound
mov
jp
push
rorb
pop
push
loop
test
push
mov
mov
mov
pop
sbb
ja
xchg
loop
push
out
sub
mov
add
dec
data16
aas
fildl
in
fstps
pop
int
jmp
aaa
mov
cmp
cmp
xor
repz
jle
cmpsb
jno
je
jnp
sbb
popa
cs
es
sti
xor
rcll
fs
iret
lock
jge
outsl
jg
inc
in
jne
sub
inc
ret
enter
fisttpll
aas
stos
out
mov
or
jge
leave
sub
fs
arpl
and
mov
loop
inc
inc
orl
push
dec
daa
test
add
loop
xchg
mov
xlat
insl
and
jecxz
lahf
adc
xchg
cmc
insl
cli
fstpl
fimuls
pop
mov
sahf
pop
in
dec
and
or
ret
fidivs
sti
pop
icebp
jl
iret
push
push
loopne
aas
test
gs
ljmp
lock
ret
in
jns
pop
xor
mov
aas
and
movsl
jmp
inc
mov
addr16
stos
mov
rclb
repz
cmp
push
addb
pop
mov
daa
test
rcr
scas
mov
jecxz
mov
stc
xchg
stos
inc
leave
push
insb
repnz
rorl
cwtl
clc
or
lcall
adc
scas
repnz
pop
adc
adc
ja
fstpl
lods
shll
cmp
xor
mov
aaa
xchg
inc
push
pop
sub
fs
push
add
mov
jo
jns
push
push
sahf
int
xchg
aam
inc
jne
mov
inc
ja
or
adc
mov
stos
rcrl
outsb
adc
fstps
xlat
adc
mov
pop
cld
rcrb
mov
push
pop
cld
mov
mov
and
pusha
and
cmpsl
dec
jl
sub
aaa
fdivrl
cli
shrl
test
vpshlw
mov
dec
pushf
dec
out
mov
pop
mov
mov
test
outsb
dec
jp
mov
subl
int3
mov
jne
lret
push
out
add
jge
fs
xor
jp
add
pop
jecxz
lods
sbb
test
sub
into
push
mov
mov
dec
pop
lea
lds
out
xchg
sbb
subb
lods
cmp
push
xchg
dec
mov
pop
imul
shrb
mov
mov
mov
pop
xchg
fdivs
inc
pop
cwtl
pcmpgtw
cmp
and
inc
inc
mov
test
sbb
mov
mov
scas
scas
test
pop
loopne
fistpl
pop
sub
sbb
xor
clc
xor
shll
aam
pop
mov
addb
fsubrs
movsb
mov
jp
int3
into
adc
sub
xchg
xchg
nop
fcmovne
repz
push
pop
jge
mov
xor
mov
inc
dec
push
adc
mov
push
shlb
addr16
inc
add
ljmp
jo
mov
adc
or
inc
mov
fisttps
cmp
in
shll
xor
mov
in
jnp
rcrb
mov
test
and
test
push
jne
push
cmp
mov
push
cmp
cmp
das
jg
ss
mov
cmp
outsl
in
ror
pop
clc
dec
in
das
out
sbb
xchg
jb
add
push
mov
shlb
test
rcrb
mov
movsb
sub
sub
jb
inc
lds
sub
hlt
and
push
in
popf
mov
mov
dec
stos
sbb
dec
sbb
loop
and
jnp
das
cmc
fxch
add
pop
xchg
test
aad
rcrl
out
ljmp
repnz
leave
inc
cmp
xor
call
negb
and
movsl
lahf
cmp
stos
push
popa
sahf
push
xchg
sub
push
loopne
push
pop
fcomip
xchg
and
in
push
fnstcw
inc
orl
push
js
pop
lods
out
jl
repnz
xchg
lea
ljmp
popa
repz
inc
pop
add
fistpll
int
mov
cmp
fcomi
push
pop
mov
xor
ds
insb
fdivr
loop
inc
push
inc
inc
jge
jp
aaa
popa
je
das
cltd
cld
lods
aas
pop
cwtl
fcoms
mov
mov
sub
fsubrl
jl
adc
jle
in
addr16
mov
xor
cmp
cli
mov
mov
xchg
in
inc
dec
and
push
and
rorb
xor
je
call
ret
mov
int
mov
movsb
sbb
lds
shlb
outsb
das
mov
add
jnp
int3
or
out
mov
aad
inc
stc
test
arpl
jnp
icebp
xchg
sti
out
incb
shl
dec
pop
mov
jbe
lahf
addl
push
icebp
jnp
xor
adc
xchg
cmp
pop
or
enter
inc
jns
stos
inc
aas
push
ret
and
mov
out
jle
or
aas
and
jbe
pop
pop
xlat
loop
or
iret
dec
mov
mov
stc
hlt
sbb
fsubl
iret
pushf
mov
rclb
std
sub
and
adc
icebp
cmc
xor
sbb
dec
and
dec
pop
lods
sub
sub
stos
fldcw
xchg
hlt
or
leave
pop
ja
add
inc
mov
stos
ds
pop
cmp
int
mov
popf
push
shrl
dec
push
imul
and
adc
dec
call
int
jns
aaa
stc
ret
fsubrs
out
stc
arpl
pushf
cmpsl
xchg
push
andl
xchg
xchg
jge
add
pop
xchg
mov
out
fbld
xchg
jno
cmpsl
sub
lret
mov
ss
adcl
mov
or
or
fisubs
lods
ret
pop
adc
in
or
pushf
xchg
sbb
pop
in
and
in
frstor
fnstenv
jo
inc
cmpb
pop
outsl
jbe
in
ss
inc
icebp
imul
cmp
mov
and
add
sub
push
es
ljmp
inc
push
cwtl
pop
jbe
test
cmpsl
insb
inc
and
or
push
daa
outsb
cmc
or
js
dec
roll
pop
jge
adc
push
or
sub
fs
adc
add
inc
imul
jmp
cmp
gs
and
push
dec
frstor
and
into
dec
inc
adc
add
and
sbb
jge
fbstp
lret
mov
pop
jecxz
icebp
xor
ss
xor
testl
mov
or
mov
jecxz
or
adc
ret
loopne
sub
xor
loope
push
rorl
or
and
loop
push
ja
cs
sub
dec
mov
xor
ret
and
mov
imul
out
jp
pop
lahf
dec
out
fdivrl
sbb
loopne
aas
gs
lods
cmp
sahf
and
dec
rcrb
stos
dec
and
mov
adc
ret
xchg
cli
lock
mov
arpl
inc
mov
push
sbbb
xchg
inc
hlt
aaa
aam
or
jmp
mov
pop
xchg
dec
les
inc
or
leave
mov
insb
jge
nop
test
hlt
or
push
xor
sarb
add
jns
bnd
popf
mov
out
out
rcr
xor
add
jo
push
popf
stos
sbb
rcrl
pop
jne
push
or
je
add
mov
xor
mov
mov
lahf
mov
sub
pusha
pusha
daa
psraw
ret
mov
xchg
adc
aaa
xorl
adc
jp
push
jmp
and
mov
cmp
xor
xchg
jp
jno
or
or
das
pop
andl
cmp
lcall
testl
into
push
test
mov
mov
cs
cmp
out
push
xchg
pop
push
fisttpll
lret
mov
enter
addr16
cmpsb
jge
xchg
and
xchg
pop
fisttpl
mov
or
sub
push
into
int3
xor
ret
inc
mov
lret
cmpl
and
mov
cmp
ficompl
ja
pop
and
adc
addl
xor
mov
adc
cmp
xchg
xchg
test
cmpl
or
mov
cli
std
int
inc
xchg
mov
adc
xchg
sbb
xor
add
xchg
add
inc
jp
push
mov
fstpl
mov
enter
or
jno
lret
mov
test
aad
mov
dec
mov
lods
repz
adc
push
add
mov
lcall
mov
fmull
jle
lret
push
xlat
cltd
mov
icebp
xchg
aam
xor
dec
jnp
xchg
fnstsw
inc
add
and
and
mov
inc
cmp
enter
mov
scas
repnz
adc
and
js
icebp
mov
jg
fbld
fwait
adc
jge
sub
loopne
sbb
pop
xor
mov
fiaddl
ss
cs
mov
xor
cld
test
into
loope
mov
add
sbb
ljmp
test
in
jns
movsb
or
pop
out
scas
mov
inc
or
adc
andb
mov
xorb
add
inc
sub
stos
imul
lods
fistps
icebp
lahf
and
test
push
ret
mov
dec
cmpsb
adc
sub
ja
pop
mov
sahf
mov
cwtl
dec
ds
fwait
xor
mov
cmc
add
ss
jbe
push
push
test
movsb
sbb
sub
icebp
and
nop
and
leave
xchg
lret
sarb
push
xchg
or
jp
mov
int3
jecxz
sbb
jnp
icebp
popf
pop
push
loop
test
jmp
lds
xlat
fs
push
outsb
mov
mov
movsl
loope
push
jge
xchg
push
es
dec
in
mov
jae
mov
int3
andl
bound
out
hlt
jmp
cmp
ret
jo
cmp
xchg
xchg
push
and
jmp
pop
lcall
fwait
movsl
jmp
movsl
push
xchg
and
jno
outsl
jmp
lea
lds
ja
sub
push
pop
adc
adc
leave
xlat
cmp
ret
dec
mov
pop
in
les
mov
xchg
mov
inc
xor
jae
mov
dec
dec
pusha
shr
test
out
push
inc
outsb
outsb
mov
popf
sub
mov
repz
dec
dec
hlt
aad
gs
les
xor
mov
sub
fbld
aam
sti
lock
jmp
push
daa
jmp
sbb
xchg
lock
push
out
movsl
loop
mov
xor
fwait
outsb
not
mov
rcr
jmp
rolb
gs
xor
mov
xchg
pop
cmp
xor
repz
push
add
mov
fsincos
bound
dec
inc
aaa
aad
inc
clc
cmpl
jnp
push
inc
outsl
mov
arpl
add
pop
out
push
fwait
aad
insl
sbb
les
imul
cltd
jb
jg
xchg
sbb
sar
fisttps
add
loope
out
ds
inc
pop
xchg
pop
test
mov
shrl
lahf
inc
mov
and
lods
push
mov
mov
mov
and
xor
cmp
mov
mov
xchg
adc
dec
inc
push
mov
rcrb
jns
mov
in
movsl
fs
ret
rorl
ja
js
sbb
call
sbb
mov
movsl
inc
arpl
adc
adc
sub
lods
mov
or
ss
sbbl
xchg
or
imul
inc
add
sbb
shlb
loopne
loopne
mov
gs
adc
mov
icebp
inc
aad
dec
inc
xor
sbb
in
push
movsl
sbb
out
dec
call
leave
pslld
out
in
cmp
fldt
adc
int
mov
dec
loope
add
or
pop
adc
jg
in
xor
or
push
jle
std
loope
jne
ds
nop
dec
xchg
out
inc
sub
sub
inc
cwtl
inc
sbb
or
sbb
dec
cmp
sahf
ret
jb
push
inc
sbb
in
add
aam
add
sub
dec
jecxz
cmpsl
push
dec
cld
lock
xchg
xor
data16
mov
pop
aad
dec
sbb
xor
jns
aas
lret
sub
jge
dec
into
add
cmc
or
rol
push
xchg
out
adc
mov
pop
inc
mov
arpl
arpl
and
push
aam
mov
cwtl
adc
aaa
aad
cwtl
mov
jbe,pn
or
int
icebp
cmc
add
sub
dec
out
xchg
xchg
flds
cmp
loop
loop
add
pop
ss
xorl
aad
clc
push
add
pop
push
xchg
mov
clc
sub
dec
jle
pop
mov
xor
mov
scas
lret
and
stos
push
sub
fnstenv
pop
cmp
das
call
jge
dec
fsub
ret
lret
insb
jl
xchg
sbb
mov
inc
cld
js
stos
jl
pop
mov
cmp
fs
ret
ss
mov
int
push
out
and
cwtl
scas
movsl
mov
loop
dec
lods
out
loopne
es
sbb
fisttps
dec
imul
pop
inc
mov
insl
int
mov
fimull
sbb
pop
fwait
inc
pusha
dec
pusha
xchg
sti
out
fmul
adc
out
fdivp
popf
mov
push
ljmp
lock
test
sub
not
bound
imul
ret
mov
sub
mov
add
mov
push
sbb
enter
mov
lds
std
adc
shlb
das
xchg
fs
lahf
mov
rclb
pop
sub
mov
or
nop
jnp
sub
cmp
adc
or
adc
lock
jnp
push
push
inc
mov
arpl
bound
push
xchg
lea
xchg
gs
mov
shl
or
sarb
pop
sub
dec
inc
mov
cmp
mov
jmp
or
fcomp
arpl
mov
push
out
cltd
xchg
xchg
pop
and
rep
lock
inc
and
lret
mov
std
xchg
jae
push
cli
aad
in
mov
push
and
test
sub
roll
bound
sbb
mov
std
imul
outsb
mov
loopne
aad
aad
push
les
and
xchg
push
inc
inc
push
sub
cmp
and
and
movsb
addl
jg
ffreep
or
loope
lea
cmpsb
pop
xchg
arpl
inc
popa
outsl
inc
xor
mov
outsl
lods
test
pushf
mov
data16
inc
push
lret
cltd
dec
add
dec
stc
and
clc
push
cmp
xchg
fs
addr16
movl
rorl
adc
xchg
popf
pop
or
mov
lock
aaa
mov
shlb
jp
sahf
inc
jmp
loope
sbb
leave
test
add
mov
enter
pop
loopne
or
mov
aaa
fimuls
fs
fistl
jbe
movsb
cmp
xlat
jecxz
inc
pop
js
jnp
dec
add
sbb
test
or
les
jge
sub
ss
dec
jnp
inc
xchg
cmc
ret
sub
mov
lods
mov
in
movl
or
push
mov
push
pop
push
add
clc
bound
js
je
cmc
jge
fwait
rcrb
mov
sub
xor
sahf
pop
add
jbe
cmp
dec
movsb
push
jns
mov
add
inc
push
push
cli
xor
pop
cmp
fs
push
loope
arpl
jl
mov
movaps
out
lret
movsb
sub
mov
inc
gs
cmp
inc
mov
mov
pop
lds
mov
insl
lahf
mov
repz
pop
inc
cmpl
adc
adc
int
leave
jle
mov
push
cmp
jbe
daa
enter
jmp
mov
or
das
rcll
ds
mov
push
repnz
push
orb
mov
rol
fildll
mov
in
pop
push
add
push
test
push
adc
add
and
lock
sub
and
push
pusha
cmp
shll
out
sarl
test
pop
xchg
lock
mov
push
push
push
test
pop
inc
std
cwtl
dec
mov
cwtl
sub
inc
and
pop
test
sahf
ret
add
sub
lods
push
aam
imul
ret
aaa
xchg
sub
fists
jne
mov
xor
cmp
mov
xchg
push
ljmp
sbb
pop
adc
sub
xchg
mov
sub
add
pop
popa
cmp
pusha
sbb
aas
mov
fs
sub
stos
add
aam
pop
sarb
out
orb
jg
sbb
pop
cmpsl
out
pop
and
jo
movq
xorl
lret
lea
push
sub
sub
xchg
mov
mov
sub
push
add
imul
test
das
push
mov
pop
ret
xchg
int3
cmpsl
dec
add
popf
lods
cmp
jb
push
lcall
jbe
sub
data16
push
imul
jae
mov
pop
dec
inc
xchg
test
ljmp
add
pop
incb
dec
in
mov
sub
mov
out
mov
inc
ficoml
in
icebp
jmp
mov
fnstsw
rcrb
jns
scas
mov
pop
jmp
imul
ds
js
add
mov
and
subl
and
jp
scas
jae
lahf
imul
dec
sti
xchg
sbb
xchg
fcomp
xchg
jbe
sub
xchg
je
jmp
lock
inc
jge
xor
cmp
mov
add
call
xchg
insb
lods
and
dec
jmp
mov
dec
cwtl
or
xchg
js
out
test
sub
jg
add
inc
xor
mov
cmp
ret
sbb
icebp
notb
inc
out
mov
pushf
mov
dec
jmp
sub
jp
cmp
xchg
scas
das
pop
mov
or
fldcw
or
dec
jo
out
lds
add
call
add
push
sarl
mov
xchg
mov
jle
sub
movsl
cwtl
xor
xchg
call
test
mov
sub
mov
dec
cli
aad
pop
dec
flds
pop
lods
push
je
testb
lea
out
or
pop
pop
xchg
imul
sbb
aam
stos
sbb
aaa
and
sti
and
push
frstor
mov
xlat
stos
nop
mov
push
js
push
stos
inc
inc
xchg
mov
cmp
cmp
sub
popa
adc
or
imul
int
shlb
xor
mov
cli
stos
pop
lahf
or
and
das
das
addb
jmp
out
jecxz
pop
stos
fdivp
and
inc
push
add
jge
xlat
mov
aam
pusha
sbb
jge
leave
add
xor
bound
xchg
sub
cld
es
icebp
jns
sbb
test
push
pushf
daa
lcall
popf
cmpsb
jne
roll
cmpsb
popf
mov
add
repnz
test
mov
dec
icebp
add
loopne
push
fnstsw
pop
in
or
push
popf
dec
fisttpl
scas
xchg
mov
pop
pop
jl
sub
mov
inc
cmp
sub
movsb
mov
xchg
in
push
mov
insb
inc
scas
inc
mov
insl
int
es
mov
sub
and
scas
add
cmp
adc
jp
sub
int
ja
arpl
clc
pop
iret
roll
dec
sbbl
adc
jmp
dec
push
mov
jmp
and
mov
xor
popa
mov
sbb
out
sti
pop
push
arpl
andb
scas
cmpl
sti
pop
jb
pop
add
lods
scas
xchg
jne
fwait
lret
push
inc
daa
insb
and
xchg
mov
and
out
insl
cmp
shrl
jbe
fbstp
sahf
xchg
and
in
pop
imulb
mov
lods
sub
ljmp
jle
das
fcmovnb
mov
in
and
inc
sub
pushf
je
popf
jo
cs
mov
add
mov
push
add
pushf
ja
mov
or
mov
jnp
pusha
ret
cmp
push
xor
push
fs
gs
jb
mov
or
lret
cmpsl
pop
xchg
xchg
mov
cmp
push
sbb
imul
pop
data16
dec
jns
repz
sti
add
in
mov
out
test
neg
pop
inc
mov
adc
mov
dec
std
jmp
addr16
push
stos
mov
divb
jl
cmpsl
jl
adc
ja
loopne
fs
mov
mov
pop
or
and
mov
add
shll
mov
pop
gs
and
sub
mov
adc
push
addl
std
addr16
xchg
adc
push
cmp
jo
popa
in
mov
lret
dec
enter
cmp
mov
inc
mov
shll
sbb
shrb
push
push
mov
dec
div
or
rolb
scas
cli
out
lret
shlb
je
xor
pop
or
lret
dec
mov
in
xchg
dec
pcmpgtw
adc
rcr
pop
inc
or
cmp
dec
pusha
push
sbb
fidivrl
xchg
adc
sbb
xchg
inc
or
inc
jno
mov
cmp
dec
clc
push
loope
test
pop
xchg
jge
mov
inc
cmp
mov
pop
xchg
dec
aaa
mov
aam
pop
mov
lahf
inc
cmpsl
pop
stos
dec
popa
add
mov
inc
mov
divb
bound
cmpsb
dec
jg
mov
data16
test
sbb
push
stc
cmpsl
xor
mov
adc
stos
or
repz
jp
inc
fstpl
rcl
shlb
cmp
out
dec
arpl
dec
xchg
xchg
test
fsubl
in
pop
pop
mov
rcrb
fbld
in
pop
dec
xor
daa
mov
jae
int
adc
mov
xchg
stc
dec
imul
mov
ret
lods
shll
or
cwtl
xor
mov
and
jle
stos
xlat
or
js
cli
fdivs
insl
stos
xor
mov
mov
pop
movsb
mov
std
mov
jne
xchg
dec
mov
lret
out
cmpsl
fisubs
sbb
fs
xchg
repz
sub
push
jns
lods
fists
mov
jb
sbb
jno
shr
sbb
and
addr16
mov
lock
xchg
pop
push
aam
jecxz
movsbl
xorb
push
ds
popa
aam
shlb
lret
imul
xor
test
stc
xchg
mov
in
aas
call
mov
je
scas
mov
cmpsb
mov
call
cld
aad
mov
gs
xor
dec
or
jl
pop
cwtl
mov
push
adc
mov
push
lods
cmp
aad
mov
gs
and
sub
add
adc
int
pop
xchg
xchg
pop
and
test
imul
std
mov
dec
mov
ds
aad
stc
push
mov
mov
add
scas
cmp
aam
jmp
lea
cmp
push
arpl
lds
pushl
pushf
ffreep
jns
imul
inc
mov
push
inc
jb
cmp
cmpsb
sub
jbe
dec
push
jge
and
jge
fdivrs
push
sub
bound
fsubr
icebp
xchg
out
sbb
cmp
sbb
cmp
fiaddl
pop
add
or
pop
xor
lret
push
subb
test
or
xchg
mov
and
pop
rorl
dec
leave
jo
outsb
out
inc
repnz
imul
add
sub
jbe
lock
int3
mov
stc
shll
lods
mov
jnp
push
stos
int3
xor
ja
add
jo
jmp
cs
orl
fwait
inc
test
push
ficoms
or
pop
pop
movsb
inc
movl
dec
push
mov
pop
rcl
sub
sbb
adc
mov
push
out
sbb
add
cli
mov
pusha
stos
clc
cmp
lea
push
jg
outsb
cmp
fidivs
int
push
gs
adcb
in
push
sarb
insb
ljmp
jae
cmp
mov
inc
pop
flds
inc
rol
jge
jge
mov
fiadds
xor
mov
pop
int3
les
inc
int
inc
mov
cmpb
push
ret
cld
les
push
out
xlat
push
and
add
cmp
adc
callw
dec
lods
cld
cli
fisttps
out
in
xchg
sbb
sbb
movsb
dec
cltd
mov
pop
fsubrs
push
cmpl
je
pop
pop
mov
insl
out
xchg
jg,pt
out
dec
scas
inc
xchg
pop
jecxz
adc
ss
and
shll
movsb
cwtl
inc
cmp
pop
pop
mov
sbb
xchg
xchg
dec
shll
xor
adc
imul
jnp
ljmp
roll
sbb
sbb
mov
seto
push
dec
out
imul
iret
mov
xor
push
jg
in
push
xchg
jl
lret
cmp
push
dec
outsl
scas
sarb
push
jl
int3
mov
pop
add
pushf
loop
das
dec
repnz
out
cmp
insb
ret
shr
adc
sub
push
data16
cmp
rol
and
outsb
ret
adc
scas
pop
add
inc
jnp
mov
aam
leave
xchg
sub
xor
mov
jne
loope
les
adc
imul
mov
or
lret
push
iret
jno
inc
push
imul
sbb
inc
test
icebp
cmp
xorb
xchg
fnstcw
mov
jecxz
clc
xchg
and
push
jge
in
mov
inc
aaa
shr
xchg
jl
lods
fimull
popa
popf
dec
mov
jmp
arpl
movsb
push
mov
pop
dec
nop
add
cmc
pop
shll
daa
icebp
out
mov
pop
xor
pop
jns
loopne
test
leave
and
jae
iret
daa
lahf
ffree
dec
dec
cmp
into
inc
das
lods
and
add
ljmp
and
dec
jne
adc
dec
or
jge
push
jl
clc
repz
sbb
dec
movsb
dec
sub
pop
push
inc
or
mov
mov
adc
cmp
rcll
mov
and
cmp
adc
inc
lods
fiadds
mov
inc
and
js
lcall
cld
push
test
loope
push
add
pop
inc
xor
jmp
cmp
lock
xchg
inc
adc
xor
mov
fs
out
data16
inc
xor
andl
aad
adc
inc
pop
cmp
scas
push
jbe
sbbb
imul
cmp
ljmp
jns
test
inc
lahf
fwait
leave
stos
inc
in
sub
xchg
mov
xlat
pop
rcll
add
pop
loope
mov
dec
sbb
fsubs
stos
xchg
mov
andl
rclb
fwait
mov
insb
xchg
push
je
in
sti
fidivs
into
xor
push
addr16
pop
mov
cmp
add
fsubrl
ds
rorb
out
fpatan
imul
ret
in
ljmp
lret
mov
mov
lea
lret
xchg
jne
inc
lds
repz
hlt
loop
push
scas
jno
pop
test
int3
xorb
pop
loop
ds
xor
xor
in
fnstsw
add
stc
iret
or
orl
mov
pusha
sub
js
sub
xchg
jo
mov
mulb
inc
sub
or
mov
inc
adc
add
cmpsl
jge
inc
xor
hlt
mov
das
dec
add
fndisi(8087
popf
fsts
cmp
jne
push
jle
mov
lahf
or
test
addr16
pushf
les
or
jbe
cmc
jle
push
xchg
pop
outsl
in
xor
aaa
lret
pop
jbe
test
loope
or
sbbl
lcall
aad
mov
xor
mov
leave
mov
adc
add
push
inc
repnz
cli
jo
pop
mov
fcoml
add
int3
ja
inc
cmp
mov
mov
xchg
popa
push
test
cmp
sbb
cmp
ficompl
scas
test
pop
sti
dec
test
adc
cmc
xor
jbe
std
ljmp
fbstp
test
mov
imul
cli
push
sarb
or
shll
je
fnstcw
or
dec
and
adcb
iret
add
mov
xchg
pop
test
aam
lock
mov
mov
ret
cmp
test
jb
fdivrl
stc
sub
xchg
scas
sti
jle
mov
mov
test
add
adc
xor
aaa
xchg
dec
jg
test
xchg
lahf
in
or
jmp
push
inc
out
mov
mov
pusha
test
cmp
push
push
xlat
stos
les
sbb
data16
repz
add
mov
mov
push
call
shll
sbb
cmp
jb
inc
aaa
mov
push
jmp
fcomip
or
push
call
mov
in
repnz
scas
jnp
mov
jne
mov
dec
jns
pop
dec
pop
bound
sub
sub
xor
push
pop
cmpsb
xchg
add
cmp
lods
gs
loope
outsl
jnp
daa
test
cltd
leave
test
xchg
fnsaves
je
rolb
fists
push
icebp
fwait
nopl
dec
repnz
mov
insl
ret
push
pop
pop
pop
adc
pop
jmp
mov
mov
stos
sub
clc
lcall
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
shlb
pop
jl
and
test
lods
jno
loopne
mov
add
popa
xor
in
add
mov
sub
es
int3
enter
cmp
jl
mov
xchg
or
adc
in
adc
adc
pop
xchg
sub
fimull
inc
pop
xor
jg
int
xchg
mov
fistl
pop
sub
test
sbb
xchg
sub
jno
xor
lret
inc
mov
adc
mov
cld
xchg
sar
imul
cmc
push
nop
jns
je
jnp
xor
add
dec
push
sub
cmp
xchg
out
stos
jp
repnz
aad
subl
push
jg
mov
jge
dec
fldcw
stos
add
movsl
push
sbb
loop
xchg
rol
add
addr16
jmp
cmp
loop
loopne
mov
int3
pop
mov
mov
int3
fadds
sbb
ret
dec
ret
out
inc
fldl
roll
jns
inc
cmp
xor
aad
rcr
cmp
in
je
popf
inc
xchg
jo
push
or
sub
lcall
xor
dec
mov
mov
push
cli
dec
call
ja
fucomi
jbe
jnp
jo
or
cli
pop
insl
stc
lret
xlat
inc
int
or
rcll
adc
arpl
xor
add
fldcw
push
hlt
push
mov
hlt
cmp
xor
insb
and
out
ljmp
adc
lock
and
fisubrl
push
or
cmp
sbb
in
mov
sbb
test
xchg
rolb
ljmp
ljmp
jmp
fistpll
cmpsl
scas
sbbb
mov
ja
pushf
sub
outsb
mov
xlat
mov
data16
lea
push
arpl
push
and
jae
jns
xchg
jg
insl
test
adc
iret
pop
add
mov
xor
push
inc
bound
mov
aaa
pop
das
pop
push
sbb
cmc
inc
ds
sarl
pop
dec
mov
jmp
add
mov
lds
hlt
and
cmpl
jmp
jecxz
sahf
push
xor
or
pop
jnp
xchg
daa
icebp
out
mov
jae
call
cmc
push
add
xchg
cmp
daa
mov
xchg
dec
shlb
mov
arpl
scas
stos
sbb
je
push
lcall
add
int
push
adc
inc
cmp
and
nop
pop
dec
out
add
mov
jne
jl
imul
shll
dec
mov
lcall
leave
push
lods
movsl
outsl
xchg
jb
sbb
mov
mov
mov
inc
fldt
sub
xor
mov
push
sar
jo
pop
jae
inc
mov
test
scas
outsb
xchg
adc
lods
mov
loop
shlb
aam
mov
and
jb
ljmp
xor
cmpsl
aam
mov
jne
jg
xor
cmpsb
add
fbld
and
mov
fmull
outsb
jecxz
and
pop
adc
dec
pop
fs
add
aaa
dec
inc
ja
mov
pop
dec
dec
mov
jae
mov
mov
inc
and
mov
frstor
out
loop
in
lret
pop
imul
fistl
mov
adc
orl
daa
psllq
loopne
mov
shll
and
jb
jno
push
jecxz
xor
sahf
adc
fdivrl
mov
fsubrs
dec
add
aad
lods
ljmp
movsb
xchg
push
add
lods
mov
out
mov
enter
push
adc
jns
jecxz
fnstenv
out
xor
out
and
fwait
pop
iret
jo
adc
cmp
movsl
sarl
mov
pop
dec
sub
pop
adc
imul
mov
pushf
outsl
pop
push
addr16
dec
or
dec
pop
sbb
pop
sub
dec
jns
cmp
lret
call
add
ffree
cld
sub
ret
cwtl
hlt
or
bound
ja,pt
lcall
inc
push
xchg
mulb
outsl
cmp
mov
outsl
fimull
scas
sub
and
out
mov
xchg
jl
lret
dec
adc
xchg
addr16
sti
aas
dec
or
xchg
or
sub
xchg
leave
lods
adc
adc
cmp
mov
mov
rcrl
hlt
loopne
inc
inc
insb
jge
test
mov
lds
dec
inc
into
jle
icebp
mov
jl
dec
cs
loopne
or
lds
sub
jge
xchg
std
cmp
xchg
sbb
mov
orl
adcl
pop
xchg
xlat
inc
pusha
sbb
lods
scas
adc
fldt
jge,pn
data16
xorb
xchg
inc
cmc
mov
shlb
ret
jae
push
fstpt
cmpsb
out
dec
fwait
lret
sarl
data16
rcrb
out
add
aas
sbb
jbe
stc
repnz
ljmp
inc
push
and
jnp
movsb
xlat
psrlq
nop
sub
in
xchg
push
pop
outsl
xor
dec
inc
xchg
sub
outsl
xchg
adc
orl
push
sar
xchg
or
jns
inc
inc
adc
xor
insl
lcall
sub
add
into
les
ja
sub
and
cmpsl
add
ja
cmpsb
add
xchg
mov
lods
test
fcmovbe
mov
fnstenv
pop
loop
mov
push
pop
jge
jmp
out
mov
lock
test
mov
push
lea
sbb
push
and
inc
xlat
and
and
xchg
es
push
mov
sahf
sub
pop
into
stos
in
push
std
jge
jge
xchg
jp
sahf
add
mov
test
push
insl
in
fwait
sbb
add
cmc
jne
orb
gs
xchg
mov
fcmove
lcall
imull
inc
mov
lret
mov
xor
mov
fcomi
push
addl
or
nop
daa
or
sbb
and
int3
fildl
adc
or
cmp
les
pop
arpl
jecxz
mov
mov
inc
xor
cmpsb
adc
pop
sti
stos
mov
mov
test
push
out
sub
daa
jl
sti
mov
pop
add
rcll
or
cmp
inc
push
mov
or
insb
test
aam
jnp
push
mov
fildl
cltd
or
lret
out
pop
sub
inc
stc
aaa
int
cmp
and
xlat
mov
es
pop
lods
mov
aas
in
es
outsl
xlat
fwait
loop
ret
or
adc
out
sub
int
xor
fstpl
mov
mov
mov
xchg
mov
outsl
add
mov
int
stos
xchg
adc
stos
int
push
stos
jle
cmp
sub
repnz
stos
stos
scas
mov
fs
add
pushf
mov
pop
jo
push
cmp
mov
mov
add
xchg
push
movsl
push
adc
dec
adc
rcrb
mov
push
int3
mov
mov
sbb
lret
lahf
and
mov
shrb
jle
stos
and
call
fdiv
cwtl
or
cmpb
mov
enter
repz
inc
cmp
jp
loope
lea
jle
jns
iret
xchg
fwait
les
adc
xor
mov
push
xor
into
negl
popf
insb
out
cmp
jle
cmpl
repnz
lds
addr16
mov
icebp
dec
in
ficompl
pop
shr
pop
bound
push
inc
jg
ljmp
cmp
fsubl
int
call
mov
push
mov
cmpl
insl
enter
inc
mov
inc
push
ret
repz
push
scas
nop
out
bound
jo
xor
mov
ret
imul
adc
jp
jg
sub
or
cmp
inc
pop
cmp
mov
dec
movl
sbb
xlat
mov
sub
mov
cld
pop
dec
add
lods
mov
jg
and
orl
loop
sti
mov
ja
sub
out
popa
popf
popl
jl
rcrl
sub
outsb
jl
pop
xchg
sub
pop
lcall
and
mov
stos
mov
dec
mov
jmp
inc
mov
inc
lcall
lret
pop
cmc
push
mov
fnsave
mov
xor
jae
cli
dec
cmp
jb
jno
mov
dec
xor
adcb
in
add
stc
test
aaa
mov
popa
popf
xor
cld
imul
clc
mov
push
std
xor
subl
dec
jg
sub
push
jne
pop
aas
add
call
or
lock
arpl
mov
pop
jle
and
in
roll
mov
adc
jl
movsb
pop
repnz
jge
imul
mov
mov
push
mov
xor
test
pop
push
jl
bound
jmp
and
xchg
lods
pop
pop
outsl
std
out
sbb
call
push
or
dec
xchg
clc
test
xchg
or
xlat
sarl
and
cmpsl
daa
lret
leave
push
shlb
add
cmp
into
dec
test
add
aas
nop
ret
dec
lds
jae
imull
xor
adc
push
add
mov
xchg
les
xchg
stos
pop
xor
sbb
stos
and
add
mov
inc
mov
jb
jp
pop
mov
push
mov
dec
sub
xchg
mov
stos
addr16
mov
ds
mov
adc
nop
in
cmpsl
iret
sbb
sbb
pop
pop
pop
jne
xchg
rcll
push
sbb
filds
xlat
pop
inc
lret
mov
movsb
in
cwtl
lea
inc
or
mov
mov
es
mulb
push
repz
sbb
mov
sbb
fadds
cmp
hlt
and
dec
and
inc
pop
insb
lcall
or
add
stos
adc
aad
std
sub
jno
iret
inc
es
or
shll
movsb
pop
mov
arpl
imul
mov
repz
ja
adc
mov
mov
in
jecxz
inc
cmp
sub
sub
cmc
bnd
jae
push
mov
mov
popa
push
cmpsb
lds
sbb
jg
bound
jns
and
int
mov
ljmp
aaa
pop
mov
lods
sti
std
xchg
cli
lret
mov
int3
ss
ja
sbb
push
and
jle
cld
pop
scas
pop
dec
jge
iret
mov
push
push
ljmp
arpl
pop
movsl
ja
xor
mov
sub
sbb
pop
mov
xlat
sub
and
dec
int
outsb
push
pop
ret
nop
mov
test
inc
cmp
test
xor
mov
daa
or
loope
stos
int
fsub
push
jle
nop
out
gs
cmp
sbb
pop
rcrb
inc
jg
xchg
jmp
lret
xor
enter
adc
mov
jns
lret
mov
pop
stc
dec
push
stos
mov
bound
pop
adc
mov
or
pop
ret
rorb
add
pop
mov
sbb
mul
and
dec
push
addr16
pushf
loope
fdivs
decb
sbb
or
cs
pop
mov
xor
push
jecxz
push
test
out
sahf
stos
adc
mov
lods
aaa
in
je
adc
jno
push
lods
and
cltd
jge
dec
pop
add
ss
adcl
mov
sbb
sbb
pop
lea
mov
enter
ret
es
and
fistps
cmpsb
mov
in
lods
ret
popf
adc
dec
andl
lea
mov
cld
xchg
sbb
loope
imul
push
test
pop
dec
jno
and
adc
xchg
int3
fmull
pop
xchg
mov
shlb
jno
dec
inc
ficompl
fcoml
pop
dec
adcl
adcb
daa
sahf
ficoml
mov
jle
inc
out
mov
xchg
popa
lds
jl
lock
pop
sub
fs
xchg
xorl
mov
mov
out
mov
lahf
ret
inc
faddl
lret
inc
pop
dec
fldcw
fsts
movsb
jns
jne
pop
hlt
xor
xor
add
mov
sub
int
sbb
xor
movsb
and
shlb
mov
sbb
push
dec
mov
ret
jns
sub
mov
push
adc
icebp
or
rcrb
mov
mov
andb
adc
mov
cmp
cmc
jl
aam
push
mov
aas
mov
lea
addl
aas
stos
mov
adc
enter
dec
cmp
adcl
fmuls
cwtl
sbb
pop
pop
mov
les
push
inc
or
jo
ret
add
in
lea
divb
mov
sbb
mov
in
aam
jmp
ret
test
push
mov
movsl
cmp
sub
cmpsb
ss
fistps
ljmp
out
shl
fimull
das
or
pop
cmp
lcall
push
or
mov
xor
push
jnp
push
pop
int
push
test
xlat
popf
mov
insl
aas
cmp
sub
loop
adcl
insl
add
or
jae
insl
addl
mov
and
roll
aam
movsl
jae
ficompl
xor
adc
lds
jle
movsb
mov
icebp
iret
jne
leave
jecxz
adc
sti
xlat
repz
dec
sbb
or
cmp
fcomi
out
gs
lock
lcall
mov
pop
scas
inc
imul
jno
jmp
loop
inc
ljmp
mov
fimull
iret
cld
addb
fcmovb
pusha
push
fsts
inc
mov
dec
push
pop
movsb
xchg
mov
addb
int
xor
pusha
movsb
mov
adc
mul
inc
fsubrs
jge
test
xor
sti
scas
ja
hlt
inc
jno
mov
ljmp
pushf
and
iret
mov
mov
je
repz
imul
and
or
mov
test
cs
inc
test
push
xchg
mov
pop
das
add
dec
subl
cmc
jo
imul
inc
ss
pop
dec
in
ret
test
xor
pusha
out
mov
mov
dec
scas
fdivl
xor
and
dec
nopl
in
cmp
shlb
ja
cmp
mov
xchg
lock
call
test
movsl
cmp
or
ss
cwtl
iret
aas
xchg
mov
andb
xlat
adc
out
daa
lret
call
and
dec
aad
fcompl
xchg
pop
test
sub
xchg
outsb
hlt
xor
xchg
jne
xchg
mov
jp
or
cmc
ja
movsb
es
or
cmpsl
push
in
mov
jp
push
and
aam
ret
xor
subb
aad
push
scas
in
ret
mov
enter
mov
xchg
popa
mov
adc
int3
aaa
lahf
mov
sub
aad
adc
cmp
or
push
xor
add
push
fidivl
pop
sbb
cmpsb
mov
mov
das
inc
bound
icebp
pop
xchg
aaa
jnp
jle
out
popf
xchg
push
or
inc
cld
outsb
xorb
mov
xchg
jp
fwait
hlt
stos
out
or
pop
stos
inc
lahf
push
cltd
out
mov
mov
sub
mov
ljmp
adc
daa
xor
sti
dec
pop
jnp
in
sub
idivl
icebp
pop
iret
cli
pop
gs
xchg
dec
jmp
enter
lea
imul
popl
fadd
bound
xchg
push
add
iret
xor
sbb
jecxz
mov
cltd
or
inc
shrl
push
dec
or
jge
and
or
cmpsl
sub
jb
ret
ret
es
mov
mov
xorb
sub
xchg
mov
invd
xor
cwtl
popf
inc
icebp
add
and
test
fwait
jo
icebp
add
lods
mov
push
test
mov
in
add
sti
mov
clc
mov
fisubs
mov
rol
push
lods
push
dec
sbb
lods
sub
aas
cmp
push
adc
mov
ja
imul
je
sub
std
xchg
mov
mov
adc
cmp
std
ret
pop
aad
test
jle
push
cmpl
adc
arpl
mov
pop
dec
jl
call
jne
mov
adc
es
sahf
push
mov
push
mov
clc
fstpt
jle
mov
test
or
adc
movsl
dec
addr16
cwtl
xchg
lods
rorb
adc
pushf
xchg
jg
mov
jae
pushf
lcall
xchg
or
ss
pop
xchg
sarl
iret
inc
insb
mov
in
adc
dec
cs
pop
iret
jle
jne
and
outsb
inc
test
dec
outsb
lds
cmc
lds
dec
cld
addr16
and
xor
push
call
ja
daa
push
je
inc
push
mov
mov
fwait
in
pop
xor
mov
popa
mov
mov
in
add
jle
addr16
cmp
mov
inc
fdivrs
popa
repnz
sbb
push
xchg
loop
popa
aad
cmp
mov
leave
add
sub
mov
mov
push
mov
xlat
push
mov
inc
inc
mov
cmp
cmp
outsl
mov
jge
push
push
jne
data16
sub
aam
loop
xchg
xchg
cmpsb
jg
pop
xor
sub
cltd
movsl
mov
push
jmp
incb
ret
or
scas
jl
push
push
mov
sub
push
cmpsl
mov
test
add
aam
or
adc
loope
aam
cwtl
in
jcxz
shlb
xor
push
aad
xor
dec
or
sbb
rorl
lods
pop
pop
je
inc
lds
inc
int
dec
ficomps
sub
or
inc
inc
inc
add
leave
jo
add
dec
adc
sbb
jns
dec
xchg
add
jno
sub
aam
dec
orb
adc
and
mov
ret
aam
inc
adc
pop
in
push
sti
dec
lcall
scas
cmc
xor
or
sub
mov
and
rcrl
ret
loopne
pop
mov
and
das
jmp
sbb
pop
in
pop
icebp
add
in
in
popf
fstl
dec
lock
jecxz
xchg
push
xor
lods
sub
stc
test
insb
xor
jo
push
push
fwait
and
mov
inc
or
js
jno
mov
jne
outsl
popf
daa
add
and
leave
xchg
dec
jg
lock
push
mov
out
out
stc
cwtl
das
movb
aad
jl
and
enter
push
enter
and
or
pop
rolb
ret
adc
notb
pop
jne
xchg
pop
aam
inc
cmp
cmp
out
ficoml
cmp
xor
out
pop
test
popa
lock
pop
dec
adc
inc
test
inc
insb
test
ds
push
in
insb
adc
fstps
xchg
xchg
jb
jne
ds
aaa
xor
jb
pop
cmpsb
push
test
push
int
cmpsl
cmp
lahf
stos
xchg
jge
movsl
jb
add
test
popa
aaa
dec
les
loope
push
sarb
jb
movb
sub
push
gs
imull
imul
ret
sub
negl
shlb
test
test
mov
insl
imul
cmc
jb
iret
cmpsl
cmp
mov
mull
inc
cwtl
xor
add
mov
and
and
mov
jb
mov
fbstp
movsb
inc
divb
rcrl
in
xlat
gs
jne
mov
adc
lcall
jo
lea
arpl
push
std
in
cmp
out
ret
in
and
daa
push
mov
aaa
mov
dec
xlat
cmp
addb
pop
mov
push
mov
pushf
insb
sarb
mov
insl
ja
gs
and
cmp
xchg
push
outsl
xor
xchg
mov
ret
outsb
addl
data16
rorb
and
pop
sbb
cmp
cmp
cmpsb
jne
sbb
in
insl
bound
jmp
int
push
inc
push
cmc
adc
and
imul
ret
icebp
nop
rorw
imul
xchg
test
clc
inc
bound
shlb
cmp
cmc
movsb
dec
adc
xchg
add
aad
pop
jae
inc
xor
hlt
mov
lret
cmp
cmp
mov
out
xchg
mov
xor
es
sub
ljmp
sbb
cmp
or
out
xor
mov
test
inc
push
xchg
cs
loopne
pop
insb
js
lcall
int
dec
adc
aad
pop
cmp
jo
push
outsb
subl
xlat
insb
lds
repz
hlt
jg
and
popf
sbb
and
pop
add
mov
mov
and
ret
rcll
cmp
inc
fidivs
sbb
jbe
xchg
mov
mov
or
pop
mov
pop
out
mov
mov
sbb
jo
or
mov
mov
adcb
xchg
orb
pop
sub
push
inc
nop
add
outsl
push
bound
jle
pop
push
js
out
stc
mov
icebp
mov
imul
mov
mov
dec
xchg
imul
arpl
inc
int3
xor
loopne
out
xor
push
or
fidivs
xchg
push
arpl
cmpsb
inc
cmp
es
out
mov
ds
cmp
sub
xorl
pushw
mull
mov
inc
and
icebp
cld
das
jno
popf
mov
jmp
and
inc
sbb
xchg
mov
sti
adc
xchg
fidivrs
in
dec
repz
das
add
sbb
cmpsb
push
ljmp
jbe
mov
pop
fistpl
xchg
or
aam
mov
jge
fbstp
cs
cmp
es
outsb
push
jb
ja
enter
dec
mov
adc
xlat
addr16
jbe
mov
or
and
data16
inc
sbb
or
int3
jbe
push
scas
xchg
shlb
or
add
add
lock
xchg
pop
enter
push
mov
cs
dec
rcrl
mov
xor
outsl
ljmp
push
xor
loop
or
mov
or
and
fsubrp
mov
rcrb
dec
inc
or
mov
or
sub
jne
imul
sbb
jl
mov
mov
pop
js
es
inc
adc
imul
inc
pop
lods
fmull
arpl
mov
loopne
iret
les
rcll
pop
mov
cmpsb
add
sub
and
mov
scas
loope
xchg
cmpsl
add
lods
jo,pt
faddl
mov
inc
nop
or
inc
xor
cli
call
jp
jnp
mov
dec
inc
pushf
pause
push
jle
shlb
push
sbb
push
pop
cmp
sub
pop
testl
jmp
sbb
mov
cmpsb
add
daa
or
shrl
adc
xchg
and
push
lcall
ljmpw
xor
push
mov
loopne
sub
sub
jmp
bound
mov
lahf
cwtl
test
pop
ss
add
mov
mov
test
imul
cmp
aam
sbb
daa
and
xchg
fcoms
filds
cmovns
xor
xacquire
xchg
mov
xor
jmp
cwtl
daa
fwait
mov
andb
and
xchg
pop
jmp
data16
pop
dec
stos
dec
setns
mov
pop
push
mov
in
mov
pop
aam
les
xchg
adc
sbb
mov
sub
jl
push
aad
rclb
add
pushf
popf
shll
mov
out
bswap
add
and
jbe
or
inc
fisubrl
imul
ljmp
adc
mov
in
mov
scas
ja
stos
pop
movsb
lahf
push
xchg
or
sub
dec
leave
xchg
sti
cmpb
mov
adc
jge
jae
mov
mov
xor
ss
les
bound
jge
pushf
fisubl
sub
xor
mov
adc
push
movsl
out
sbb
jae
mov
inc
movsl
popf
jnp
sarl
popf
repz
mov
jns
mov
cmp
sbb
lds
popa
ljmp
lods
imul
pop
inc
mov
adc
mov
data16
and
ds
and
dec
out
sbb
test
pop
rorb
cmpsl
hlt
ret
fidivs
mov
push
cmp
test
inc
int3
xchg
dec
dec
sub
lahf
call
idiv
or
jbe
mov
nop
ret
out
cli
push
adc
ljmp
xor
out
and
add
or
lahf
dec
sbb
imul
sub
es
cmc
adc
mov
mov
adc
sbb
popl
aam
imul
pop
add
lds
sub
leave
pop
fucomp
mov
and
andb
fnstcw
bound
add
pop
dec
insl
and
call
xor
inc
dec
imul
loopne
orl
ret
mov
and
fimuls
xchg
aam
jno
sub
xchg
stos
pop
scas
mov
idivb
int3
pop
or
outsl
ss
arpl
movsl
mov
jmp
fsts
jb
fsubr
incb
ret
jo
inc
lret
or
lahf
cwtl
sbb
dec
je
pop
mov
or
and
jmp
inc
jmp
pop
xchg
pushf
ss
cld
pushf
cli
and
repz
arpl
add
mov
and
aam
inc
jo
das
out
out
pop
mov
push
sbb
das
or
cli
stc
xchg
mov
sbb
xor
cs
bound
stos
or
outsl
out
movsb
or
or
adc
test
xchg
scas
mov
push
pop
cs
pop
addr16
sbb
shr
mov
test
inc
negl
test
leave
pop
push
pop
mov
out
jg
inc
je
enter
loopne
rcrb
mov
jge
add
fsubs
loop
scas
test
lock
adc
or
arpl
dec
adc
pop
inc
test
std
pop
shrl
in
mov
lret
pop
shlb
xchg
ret
pushl
int
xlat
ret
xor
and
fldt
push
sub
ja
and
mov
insb
inc
mov
sub
outsb
cmc
aam
aaa
add
loopne
scas
test
sbb
mov
arpl
push
mov
sub
mov
in
test
in
fidivl
into
shrb
xchg
cs
xchg
in
stos
movnti
push
arpl
les
mov
mov
test
in
add
and
dec
lret
notl
or
leave
mov
jae
loop
ja
inc
lock
hlt
nop
cmp
jmp
cmp
xor
dec
test
movups
xor
jae
das
push
xor
lret
data16
jecxz
push
out
lret
inc
arpl
push
jbe
and
es
arpl
fwait
test
out
rolb
shll
sub
adc
repnz
inc
mov
fsts
mov
jmp
mov
jne
out
aas
jmp
or
inc
pusha
jae
xor
or
mov
jg
push
call
shll
pop
fdiv
int3
cs
ss
or
out
push
push
shrl
sbb
push
mov
rolb
inc
push
in
cmp
repz
xchg
mov
rolb
xchg
mov
imul
ss
repz
sub
pop
push
test
xchg
fcoms
and
int
jno
insb
shl
fwait
mov
dec
daa
fadd
cmp
mov
inc
notb
cmpb
cmp
mov
lds
ret
std
repnz
ljmp
insl
mov
add
jb
push
insl
out
push
cltd
push
ja
popf
add
cmpsl
sub
ja
in
icebp
jne
cli
sahf
int3
andl
pushf
mov
adc
arpl
outsb
push
in
sbb
mov
movhps
ffree
int
jmp
stc
inc
pop
daa
add
xchg
lock
push
jmp
push
inc
jge
xchg
sub
mov
sbb
cmpsb
push
hlt
sahf
inc
dec
out
mov
adc
mov
adc
lock
xchg
lret
inc
cmpsb
popf
mov
mov
subl
sbb
dec
mov
inc
push
mov
mov
aas
xchg
sub
imul
mov
cmp
frstor
or
dec
lret
cwtl
adc
sub
pop
cmp
rclb
jmpw
imul
dec
xor
movsl
imul
test
push
and
ds
or
gs
push
insl
sbb
dec
and
push
mov
and
sti
call
push
cwtl
xchg
loopne
sub
icebp
adc
in
jno
or
gs
filds
repz
inc
push
lret
popa
and
xor
daa
lcall
shl
pushf
stos
lcall
mov
xchg
int
test
sub
cmp
addr16
in
into
mov
mov
out
jmp
inc
mov
imul
fidivrs
add
movsb
lret
stos
and
add
adc
add
pop
inc
add
loope
mov
add
push
and
xchg
dec
bsr
push
dec
and
cs
test
imul
jmp
cmp
xchg
inc
mov
sub
inc
lret
inc
mov
ja
shl
add
data16
in
mov
test
push
mov
fstpt
dec
xchg
in
sbb
sarl
pop
icebp
xchg
mov
jg
cmp
popa
cmp
pop
mov
loopne
ds
pusha
adc
mov
inc
adc
push
push
in
rolb
pop
mov
cli
test
add
and
mov
push
ret
mov
adc
inc
and
fnstsw
sbb
shl
shl
or
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
das
repnz
data16
je
cmp
add
sub
cmp
roll
push
pop
out
jbe
rorl
stos
es
aas
shrb
lods
gs
sub
lret
cmpsl
and
pop
jge
shll
jns
sbb
vfrczps
mov
loopne
xchg
pop
push
add
insl
pop
jnp
xchg
cmpsb
fiadds
int
mov
xchg
mov
xor
lret
cmp
lret
add
sbb
inc
fstl
adc
dec
sub
push
sub
cmpsb
or
push
daa
in
and
sahf
rorl
push
pop
sub
scas
sti
enter
adc
cltd
out
fmul
movsb
sbb
rclb
xchg
rcrl
xor
xchg
repz
lret
std
test
dec
out
pop
int3
gs
fmulp
fst
mov
in
dec
mov
mov
cld
sub
js
xchg
xor
mov
cmp
add
jae
scas
adc
jecxz
fcos
xchg
insb
adc
lods
stos
pop
ljmp
out
xchg
and
mov
popf
hlt
pop
pop
lea
stos
xor
jmp
es
lea
add
inc
fcompl
and
int3
jns
cmp
shrl
mov
hlt
adc
xchg
dec
mov
mov
xor
rclb
and
adc
addr16
leave
popa
mov
jge
push
and
ret
inc
ss
pop
imul
mov
ss
mov
sarb
loop
rcrb
ljmp
pop
cmp
stos
jl
and
lods
sarl
pop
ja
mov
or
ror
out
sbb
lods
cs
push
mov
outsb
mov
push
dec
pop
and
rolb
les
pop
repnz
mov
pop
pop
jo
int3
mov
xor
sbb
mov
sub
imul
int
in
or
push
cwtl
fdivl
push
xor
dec
xchg
aam
add
fnstenv
test
mov
xchg
aas
push
xor
inc
test
pop
jb
pushl
dec
xchg
ja
add
cmp
aaa
xor
xor
fnstsw
stos
xchg
shlb
adc
sub
es
or
mov
lcall
xorb
nop
cli
out
push
fimull
sub
cmc
add
pop
imul
sti
ret
fidivrl
and
adc
fdivrl
mov
ss
leave
add
fcoms
aad
pop
adc
mov
inc
sbb
add
fldenv
mov
cmp
push
movsl
inc
es
sub
lret
mov
and
jge
mov
sub
in
into
sub
scas
push
fbld
pop
inc
lret
popa
mov
jecxz
sub
dec
and
dec
dec
pop
cmp
xor
mov
popf
inc
rclb
push
jmp
pop
mov
loope
lods
sbb
dec
sahf
outsb
loope
inc
int3
and
jno
push
orl
sbb
mov
and
je
cmp
lock
sub
mov
sahf
fsubs
cltd
cmp
push
inc
sbb
pop
daa
jo
push
sub
jge
out
scas
test
cmp
pushf
fstps
pop
pop
inc
add
dec
and
and
inc
icebp
shlb
or
adc
je
cmp
cwtl
pop
or
in
xchg
add
mov
jecxz
jnp
aaa
out
xchg
lock
add
adc
pop
add
inc
test
add
ss
fdivrl
xchg
imul
mov
push
xchg
and
sbb
sbb
outsb
push
mov
xchg
out
xchg
mov
mov
add
hlt
and
movsb
sbb
inc
addr16
fnstenv
cs
xor
xlat
aaa
cs
pop
mov
clc
cmpsl
mov
cmpb
mov
addr16
dec
xchg
daa
and
xor
xor
sbb
hlt
call
or
mov
mov
in
jle,pn
jg
xchg
rorl
sbb
lods
clc
call
in
sub
subl
jmp
js
mov
int3
aam
dec
cmpsb
movsl
add
push
nop
das
xor
movsl
cmp
pop
mov
adc
inc
stos
xor
ja
push
jmp
add
xlat
mov
mov
arpl
add
cld
sub
mov
fiadds
lds
xor
push
pop
xor
pop
jmp
es
xchg
cltd
out
or
les
mov
stos
lcall
pusha
mov
rcrb
mov
jle
lods
in
mov
mov
or
push
inc
push
jle
xor
inc
aaa
mov
lods
lods
dec
movsb
clc
xchg
iret
dec
roll
cmp
push
mov
inc
stos
push
or
xchg
and
in
inc
and
lods
cmp
add
int
int3
mov
mov
sub
scas
mov
pop
mov
stos
pop
scas
add
mov
dec
inc
xchg
pushf
aad
inc
sub
add
dec
ffreep
hlt
or
daa
ret
pop
jle
jb
sub
push
mov
movsl
cmp
pop
mov
dec
pop
aad
outsb
stc
scas
cmp
in
xor
inc
adc
mov
jp
inc
out
out
mov
shrb
dec
imul
xchg
or
pop
push
adc
mov
xchg
pop
lock
nop
add
shll
xor
sar
lods
sub
dec
leave
fcoms
leave
jmp
adc
cmpsb
jle
ret
mov
pushf
pushf
or
xchg
imull
and
enter
movsl
lahf
dec
sbb
sub
dec
loopne
stos
mov
push
xor
or
aad
les
dec
sub
mov
test
aam
sarl
lea
ja
add
insb
cmpsl
ret
cmc
aas
notl
xor
dec
jnp
xchg
mov
pusha
hlt
xchg
gs
xlat
xor
mov
icebp
pop
and
adcb
and
sbb
and
xor
jmp
call
push
jne
orl
cmc
js
aaa
dec
test
ja
sti
xchg
adc
fs
imul
inc
mov
sbb
or
aam
cmpsb
lock
stc
fsubs
or
ja
cmp
adc
rcrl
shlb
roll
dec
in
pushf
hlt
push
lret
out
or
cmp
dec
jne
int3
dec
cmpsb
xchg
dec
pop
roll
and
push
dec
loope
pop
fdiv
sbb
push
sub
pop
adcb
and
mov
daa
ficomps
mov
jp
push
outsl
push
loope
cmp
popa
pop
pop
adc
dec
stos
rcll
loope
mov
daa
fwait
testl
aad
and
inc
sahf
cmp
scas
mov
and
movl
addl
dec
cmp
dec
out
mov
cmp
popa
loopne
jg
adc
jge
mov
push
shrb
stos
test
jbe
add
lahf
out
sbb
popl
outsb
arpl
or
jno
enter
mov
sub
push
lds
icebp
or
push
push
int3
jne
scas
das
ret
faddl
in
dec
imul
sbb
insb
adc
mov
dec
icebp
jns
ror
rcrb
xchg
leave
enter
nop
xchg
ss
push
jno
mov
jge
daa
rcll
add
rcrl
mov
inc
xchg
into
xchg
lret
fwait
das
in
les
push
mov
lret
mov
pop
int
div
and
xchg
divl
sahf
sub
pop
loop
rcrb
fwait
push
rcr
dec
add
and
es
int3
sbb
int3
insb
cmp
mov
mov
lret
lret
and
roll
fidivrl
out
mov
push
cmp
dec
cmp
add
repnz
cmpsb
jae
pop
scas
fldt
mov
jne
sub
dec
xor
roll
cmp
daa
je
lds
lds
and
mov
xchg
jbe
test
test
or
inc
das
inc
ja
dec
add
push
mov
outsl
jl
lods
xorb
fcom
outsl
jle
mov
ret
popa
or
rol
lods
lret
adc
cld
dec
push
add
xchg
bound
js
push
fistl
adc
cmpsb
jo
xor
jns
cmp
leave
push
mov
add
xchg
adc
push
pusha
cltd
mov
xlat
xchg
lahf
bound
nop
xchg
adc
jg
sbb
fsubr
sub
js
test
dec
shr
push
adcl
enter
mov
xorb
into
fs
fsts
fld
call
cmpsl
cs
sub
fwait
popa
mull
jge
xor
outsl
push
aaa
mov
in
xchg
and
outsb
aas
icebp
lock
adc
test
sahf
je
fwait
sbb
lahf
repnz
pop
cmp
not
xchg
movsl
xchg
repz
cwtl
and
push
fmuls
xchg
sarl
ja
stos
addl
lods
mov
push
testb
adc
je
xchg
bound
fs
xor
jo
cmpsl
mov
cmp
mov
cmc
sahf
pop
cmpsb
out
cmpsb
push
mov
ljmp
sbb
in
mov
sbb
cli
add
mov
or
out
mov
lock
lods
pushf
xor
sbb
xor
jge
cltd
xchg
mov
test
and
arpl
mov
lea
add
xor
scas
jecxz
xchg
imul
loop
push
mov
push
fucom
cmc
fistl
xor
and
arpl
xorl
repnz
xchg
shl
std
mov
jno
inc
out
pop
xlat
push
push
mov
or
xchg
xchg
pop
cmp
xor
into
adc
xor
inc
cmp
mov
jp
push
rorb
xchg
call
daa
or
sub
int
test
sbb
cwtl
push
mov
int3
jo
mov
inc
jae
mov
dec
out
fwait
xchg
xchg
popa
into
int3
adc
adc
dec
inc
cmp
int3
fwait
loop
addr16
iret
sar
jb
pop
sbb
dec
xor
push
xlat
fwait
call
pop
and
fidivrs
fwait
js
pop
out
mov
mov
aam
decb
aaa
mov
aaa
leave
push
lock
push
pop
mov
pop
inc
lods
dec
movl
idivl
movsb
mov
mov
sbb
addb
pop
cmc
jno
fisubrs
fwait
adc
pop
int3
push
aad
lahf
cmp
jnp
in
dec
lret
repz
mov
aas
mov
out
add
sub
pop
jmp
popf
insb
mov
jge
mov
sbbl
cmc
mov
mov
mov
adc
push
dec
cmp
sarl
fcmovnu
mov
sbb
in
dec
pop
test
jp
inc
js
push
xchg
pop
sub
outsb
test
sub
aam
cmp
pop
push
xor
push
adc
dec
adc
inc
fcomi
and
sbb
enter
cld
cmpsl
mov
lods
xor
sub
xor
mov
addr16
push
fs
fdivs
sbb
daa
pop
fiaddl
cmpsl
scas
fbld
sbb
daa
hlt
sbb
lds
fisubl
imull
mov
add
dec
out
cmp
psadbw
inc
test
or
jnp
jbe
in
lock
fstps
push
mov
inc
jle
dec
jmp
popa
jge
in
std
jno
rcl
mov
clc
pop
in
insb
sbb
pop
pop
fisubrs
mov
lcall
xchg
mov
push
aad
fcmovbe
fsubl
sbb
pop
pop
inc
in
jl
ljmp
xchg
into
jno
in
out
mov
es
pop
aad
out
pop
and
inc
das
subl
cmpsl
push
adc
adc
push
mov
adc
int
mul
pop
mov
push
dec
jns
cmp
sbb
sub
mov
repnz
insb
inc
test
and
mov
adc
in
or
jmp
roll
sbb
mov
jl
out
mov
mov
and
les
cwtl
popf
mov
dec
add
js
aas
inc
xchg
ds
mov
daa
cmpsb
dec
mov
sub
sbb
mov
incl
jl
shll
cmp
cmpsl
pop
add
pop
or
arpl
dec
pop
push
push
push
and
cmpsb
andb
mov
test
mov
adc
xchg
sbb
dec
out
mov
arpl
pop
mov
std
jle
cmp
xor
mov
idivb
and
sbb
sbb
jns
orl
cmp
andl
lcall
cmp
sub
push
adc
mov
sub
cmp
cs
repnz
dec
lock
mov
sub
pushf
mov
es
aas
fildll
imul
pop
mov
fsub
mov
test
lret
outsb
mov
pop
mov
push
adc
in
adc
fcompp
insl
push
xchg
xor
xchg
push
lret
sahf
and
shl
pop
addl
pusha
jne
mov
fistl
mov
outsb
add
mov
mov
inc
dec
adc
push
xor
jbe
sbb
aaa
imul
arpl
adc
push
cwtl
adc
cmp
push
cmpb
and
pusha
repnz
jmp
adc
xlat
and
jo
pop
loope
jle
fbstp
add
in
xor
fmull
mov
mov
inc
call
sub
aam
mov
mov
jl
xor
sbb
loope
pop
mov
xorl
ds
mov
fiadds
outsb
push
out
negl
ja
icebp
mov
nop
inc
inc
shlb
fadd
pushl
ljmp
mov
fisubs
xchg
ficompl
jp
xchg
das
test
dec
mov
push
sahf
outsl
dec
popa
fsubrs
mov
adc
movsb
adc
sub
repz
mov
lea
cmpsb
mov
repz
aaa
inc
imul
pop
push
xchg
leave
mov
arpl
adc
in
lret
jmp
imul
aas
ret
cmpsb
pushf
sub
jg
leave
xor
xchg
xchg
mov
in
imul
lods
mov
into
out
mov
pop
add
pop
cmp
cld
sarb
in
pop
push
leave
aad
cmp
push
xlat
or
jge
inc
mov
xor
fwait
nop
fnsave
dec
xor
icebp
movsb
out
outsl
cmpsb
sahf
and
cmpsl
mov
les
dec
in
dec
dec
sbb
mov
push
or
or
mov
sub
pop
fnstcw
stos
sub
stos
dec
int
xor
sbb
stc
insb
sub
ret
cmp
push
aad
mov
fdiv
adc
jno
inc
dec
cmp
push
mov
movsb
mov
lds
stc
sbb
test
in
enter
fwait
xor
insb
push
movsb
mov
push
insb
ror
mov
xor
mov
push
shl
adc
add
or
xchg
imul
loop
cmpsb
mov
xchg
jb
movsl
xchg
popf
dec
addr16
mov
mov
bound
or
fildl
sahf
sbb
add
mov
xor
cmc
mov
arpl
test
cmp
mov
inc
and
por
push
icebp
cwtl
add
or
lea
fsubs
rcll
and
lock
adc
popa
jbe
ss
mov
notl
lret
cmpsl
push
ret
push
mov
scas
fstps
add
insb
jg
sahf
push
call
inc
jb
jne
cltd
push
cmp
xorl
inc
inc
loopne
in
popa
lahf
add
inc
ljmp
jnp
inc
mov
testl
cld
adc
pop
aas
pop
mov
or
rorb
adc
std
sbb
add
add
cmp
pop
push
ljmp
cmp
inc
loopne
sub
jecxz
shl
movsb
out
lods
sub
mov
push
pushf
adc
shrb
jle
pop
or
decl
mov
fsubrl
sti
stos
inc
repnz
xor
lds
push
cmpsl
sub
imul
icebp
jl
in
aam
lock
testl
dec
aas
sub
std
push
xor
es
xor
fwait
std
add
cmp
add
in
add
arpl
rorb
or
xor
js
pop
inc
mov
adc
jb
je
in
scas
or
adc
sbb
and
lret
shld
jmp
adc
push
cmp
pop
or
or
jno
mov
push
inc
jnp
cmp
cmp
cwtl
mov
ror
jo
scas
outsl
sbb
mov
stos
pop
sub
rorl
mov
mov
xlat
rcll
push
cmp
test
hlt
inc
mov
in
inc
cmp
mov
push
jmp
pop
mov
pop
sbb
scas
pop
imul
and
and
clc
adc
dec
cmp
cwtl
in
xchg
movsl
int
add
adc
and
mov
xlat
cld
subb
pop
fs
outsb
int3
cmpl
and
mov
adc
jmp
mov
and
outsb
and
inc
ds
lahf
jne
imul
test
mull
sub
inc
mov
dec
imul
out
rclb
add
imul
movsl
movl
ljmp
inc
inc
fmulp
mov
popf
popf
leave
cmp
dec
inc
push
insb
jbe
or
and
faddp
push
lret
outsl
or
xor
xor
mov
icebp
andb
popf
fsubrs
mov
xor
mov
fdivl
push
pusha
insl
out
imul
ficoml
mov
jge
ret
adc
inc
pop
scas
cmp
and
out
and
in
cmovl
or
or
je
insl
scas
cmp
mov
outsb
inc
idiv
push
ds
pop
in
or
mov
int3
out
push
mov
clc
add
rolb
push
out
add
mov
adc
in
shlb
sub
cmc
cmc
adc
sbb
mov
in
pop
inc
push
jl
pop
mov
out
and
jmp
dec
int3
rclb
dec
int
fstpl
or
add
mov
mov
inc
imul
fiaddl
adcb
xchg
cmp
mov
sti
mov
add
push
shll
mov
and
jge
inc
mov
inc
pusha
je
adc
push
cs
clc
loope
sarl
jbe
out
out
adc
fsubs
mov
or
push
inc
inc
cmp
hlt
js
scas
je
xor
mov
and
adc
add
mov
sbb
push
aad
mov
jle
aad
mov
outsb
inc
cwtl
adc
xorb
add
aad
add
iret
and
push
add
adc
dec
xchg
adc
sub
or
pop
je
push
sub
inc
cmpsl
ret
or
cmp
mov
adc
and
scas
movsl
nop
sahf
inc
add
dec
inc
push
icebp
pushf
cmpsb
pop
lock
sbb
lea
stc
outsl
test
popf
shlb
xchg
out
fwait
push
test
shrl
mov
aam
test
out
xchg
lret
nop
cmpsb
pop
push
in
cmc
loope
into
sbb
mov
orb
repz
out
fmuls
pusha
jnp
and
mov
movsb
lea
xor
xorb
add
push
push
cld
mov
sub
jl
xchg
fisubrs
scas
out
dec
loope
sbb
loop
adc
arpl
dec
or
icebp
int3
or
cwtl
loope
mov
mov
insb
or
push
sub
mov
pxor
xor
outsl
in
cmpsb
aad
xchg
repnz
mov
or
adc
push
and
test
push
dec
stos
mov
scas
mov
sti
cmpsl
in
movsl
fists
push
and
push
adc
mov
xchg
mov
loope
in
in
jns
mov
loope
mov
adc
mov
xor
xchg
pop
fwait
stos
leave
add
lret
ljmp
fnstsw
int3
insb
push
jae
icebp
inc
push
icebp
popf
cld
sbb
decl
push
mov
jnp
test
xlat
repnz
push
jns
into
imul
sbb
add
and
mov
inc
mov
std
pop
xchg
jmp
sar
dec
push
xor
xchg
add
cmp
jno
pop
cld
cwtl
jge
xchg
jp
or
and
test
adc
push
mov
out
popa
imul
pop
sub
push
ret
test
sti
push
fcmovb
push
cld
cld
outsb
lods
sbb
shll
xor
in
mov
lret
sti
fs
out
loop
dec
or
jmp
xchg
mov
xchg
inc
pop
pop
mov
cmp
lods
fildll
int3
insl
idivb
jb
out
aaa
adc
sub
xor
push
arpl
notl
pushf
das
mov
js
shrl
mov
ljmp
mov
addb
data16
mov
push
mov
xchg
stc
in
jb
sub
int
cmp
test
imul
sub
pusha
add
std
xchg
data16
ljmp
je
mov
in
dec
add
mov
cltd
adc
enter
divb
fistps
in
push
mov
jg
cmp
cmp
mov
cmp
xchg
pusha
shrl
push
add
fisubrs
or
xchg
xor
aaa
add
xchg
sbb
cld
dec
ss
pop
cmpsl
movsb
int
xor
mov
fwait
jns
xchg
and
repnz
add
in
iret
sbb
negl
mov
xchg
xchg
and
pop
arpl
mov
mov
sub
out
mov
aaa
ja
cli
scas
mov
sbb
push
fiadds
rorb
fstpl
pop
mov
adc
push
cmpsb
in
inc
and
adc
jno
aaa
or
mov
jbe
outsl
repnz
jp
and
loope
inc
adc
fisttpll
xchg
lea
scas
lds
pop
int3
mov
xchg
outsl
or
rorl
cmp
idivl
inc
leave
sub
mov
fisubrl
xlat
push
or
dec
push
and
mov
add
cmp
pop
std
test
mov
js
add
pop
jo
sbb
sbb
and
iret
sbb
pop
and
dec
mov
dec
out
es
rcl
cmp
lret
mov
or
xchg
lods
jmp
xchg
fidivs
scas
cmpl
repnz
mov
push
cltd
cmp
sahf
ret
fucomp
callw
lods
outsb
push
adc
inc
pop
out
in
xor
jno
xchg
cmp
adc
or
decl
xchg
in
aam
xchg
mov
xchg
or
call
lret
push
call
jno
sbb
gs
test
sub
icebp
outsl
out
push
das
xor
push
mov
pusha
push
push
push
push
popa
mov
cmp
imul
rcrb
xor
cltd
sub
stos
or
push
push
popa
dec
xor
mov
mov
out
xchg
jae
cld
sbb
or
es
xor
push
inc
cmp
cwtl
fdivr
aam
in
xchg
in
pop
movsl
mov
mov
xor
pop
fisttps
rclb
mov
adc
sub
push
and
inc
cmp
cmc
mov
jne
ret
sar
js
pop
mov
movsl
out
push
xor
dec
push
xchg
icebp
adc
mov
push
push
lcall
jl
dec
and
push
inc
das
push
push
data16
push
pop
in
orb
xor
dec
xchg
sbb
jmp
pushf
lret
mov
dec
adc
outsb
dec
test
sbbb
jl
mov
mov
sbb
dec
aam
lahf
mov
jb
testl
adc
mov
cmpsb
sbb
pop
ss
aaa
dec
sub
mov
loope
int3
sarl
push
sub
push
call
sub
jb
testb
inc
xor
jnp
stos
pop
cwtl
inc
sub
mov
add
push
mov
scas
lods
int
clc
test
or
popa
sub
adc
imul
int
es
test
out
pop
xchg
inc
push
adc
xorl
cld
es
shrb
jp
xchg
cwtl
pop
ja
push
push
nop
icebp
fdivrl
pop
iret
clc
fcoml
push
push
loope
mov
push
les
lret
in
inc
test
out
in
aas
movsl
xchg
pop
fdivrs
imul
nop
sbb
and
jae
push
lock
cmp
ret
loop
mov
out
outsb
cs
inc
pushf
in
and
pop
add
imul
stos
or
cmpsb
pop
lods
dec
fsubp
dec
mov
dec
mov
je
je
mov
imul
cmp
mov
and
dec
jo
cmp
and
pop
inc
out
insl
mov
clc
cmp
jle
divb
outsl
out
out
in
sbb
sub
sbbl
jmp
cmpsl
pop
out
mov
cs
jnp
es
mov
loopne
aas
or
xlat
push
inc
dec
jg
push
in
adc
fxch
call
cmp
aaa
mov
aad
lahf
mov
movsb
in
push
hlt
aad
stc
popa
loope
lcall
lahf
mov
out
adc
sbb
lods
sbbl
lahf
outsl
add
or
sbbb
fmuls
adc
out
outsl
out
aas
js
orb
test
leave
add
ljmp
stc
int
mov
add
push
incl
les
hlt
test
scas
loope
movsb
ja
sbb
push
xlat
ret
fst
out
ljmp
lock
fstpl
pop
dec
shrl
dec
cmpsl
mov
insb
cld
sbb
lret
mov
sti
mov
int
mov
aaa
fs
pop
mov
push
cltd
movsb
mov
repnz
out
rorl
cmp
vshufps
sub
jl
and
jb
push
mov
dec
xchg
cmp
mov
mov
mov
sub
icebp
xchg
ja
sar
out
push
fidivrs
pop
jl
imul
shr
jo
add
mov
xor
push
dec
sbb
mov
lcall
mov
les
xchg
fdivrp
add
out
sub
out
pop
mov
pop
pop
sub
cld
fiadds
mov
inc
sbb
in
cwtl
and
repz
cmpsb
push
mov
gs
std
mov
cmp
mov
push
mov
pop
shlb
push
cmpsb
ret
pushf
mov
scas
dec
cmpsl
cmpsb
jb
cmp
mov
stos
pop
fwait
clc
popl
adc
ss
inc
jle
std
and
or
scas
into
in
inc
outsl
jb
xchg
cs
nop
pop
pusha
pop
adc
cmc
xchg
pop
je
mov
add
pop
cltd
pushf
fnstcw
ret
sub
jmp
outsl
into
arpl
enter
inc
sbb
daa
shr
or
ljmp
jne
inc
pop
xor
icebp
stc
pop
mov
jns
aam
ficomps
push
sbb
jnp
cmp
pop
aaa
das
xchg
lcall
dec
shr
push
and
fnsave
or
xchg
js
rclb
xchg
cmp
mov
fldcw
push
das
movsl
scas
add
hlt
jp
lods
push
or
call
scas
push
mov
sbb
popf
sub
xchg
jge
jne
mov
test
sub
imul
push
xchg
cmp
sub
dec
and
outsl
fwait
aaa
and
xor
int3
testb
out
out
mov
int3
test
clc
mov
fcomip
ja
inc
or
popa
mov
jo
stos
ds
adc
xchg
movsb
mov
das
adc
xlat
in
mov
sti
and
xlat
dec
inc
dec
inc
mov
js
cld
mov
sub
stos
repz
fdivrp
movsb
stos
mov
mov
stos
xchg
mov
rcrl
xor
mov
call
adc
mov
test
rclb
hlt
cmp
xor
xor
call
cmp
pop
pop
mov
and
mov
mov
xchg
insb
mov
jl
lds
mov
xchg
lret
sahf
and
adc
outsl
mov
mov
clc
loop
mov
jle
sub
add
fisttps
mov
dec
pop
clc
xorl
adc
call
pop
test
add
sbb
dec
xchg
cs
imul
loop
imul
mov
cs
imul
add
add
push
mov
inc
pushf
xor
lds
lret
movq
push
mov
pop
sahf
hlt
mov
jg
pop
rcrl
aas
insl
mov
xchg
out
loope
xor
xor
xchg
jnp
aam
clc
inc
push
das
dec
xchg
enter
inc
dec
or
xchg
fnstcw
fnstsw
ljmp
scas
cmp
into
fwait
popf
sbb
scas
icebp
fcmove
stos
or
gs
mov
ret
inc
push
loope
shl
and
rol
mov
push
lret
cmpsb
rcr
adc
mov
jp
and
add
jl
into
mov
jmp
int3
pop
fwait
xchg
jno
je
aad
andl
pop
sub
fisubs
jmp
mov
lahf
bnd
pushf
push
sbb
outsl
adc
dec
test
popa
lahf
outsb
push
mov
cmp
nop
push
mov
pop
mov
mov
iret
mov
push
popa
call
mov
add
es
lret
clc
jne
xor
cwtl
or
popf
in
and
aam
lods
mov
xchg
jne
orl
mov
inc
pop
cmp
stc
ja
push
or
testl
in
cli
imul
mov
sub
in
sub
dec
mov
jmp
dec
mov
push
cli
inc
test
fdivl
and
mov
test
mov
jne
add
lea
adc
push
mov
push
cmpsb
imul
cmp
lahf
addr16
add
dec
xchg
pop
mov
and
ret
dec
dec
out
push
movsb
cmpsb
mov
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
sbb
arpl
call
pop
jl
cmp
jno
mov
or
push
push
test
xor
repnz
sub
aas
in
pushf
icebp
ds
push
push
inc
es
adc
arpl
jnp
das
inc
dec
sti
cmp
adc
mov
dec
push
ss
mov
push
lret
clc
stos
push
sbb
or
inc
imul
and
ds
pop
and
mov
sarb
pop
push
ds
lcall
lahf
xchg
xchg
xor
fbstp
ja
test
add
jmp
cmpsl
inc
push
stc
arpl
lcall
roll
push
mov
push
or
loop
dec
xchg
mov
ljmp
andl
testb
add
push
dec
cmp
adc
jg
jmp
scas
push
xorl
test
xor
stc
push
adc
mov
xchg
xchg
push
pop
es
rol
out
lahf
call
dec
cmp
mov
cmpsb
cmp
mov
add
lret
push
adc
sarl
fadds
mov
push
fucomp
sbb
xchg
pop
or
sarl
loopne
les
mov
sahf
xor
ret
ja
pop
sub
repnz
fs
and
stos
dec
in
sarb
inc
inc
xor
lea
mov
aam
lret
stc
or
in
add
xor
adc
aas
add
and
dec
or
and
push
xor
fisubrs
and
mov
ljmp
imul
imul
cs
mov
sub
jno
jno
mov
lds
xor
mov
hlt
mov
jp
out
add
xlat
dec
xor
mov
repnz
jge
jae
dec
inc
or
xchg
cmc
pop
fstps
les
icebp
adc
or
push
aam
ljmp
add
cmc
inc
dec
into
xchg
and
and
int
rol
aas
dec
pop
push
pop
mov
and
leave
out
xor
mov
popa
or
xor
fisubl
mov
push
or
jge
push
push
xchg
loopne
mov
ss
jmp
bound
aaa
lcall
dec
fmuls
icebp
cmovb
add
dec
xor
sbbl
pop
cmp
clc
inc
pop
xchg
add
sub
push
scas
jnp
je
pop
scas
inc
xchg
subl
add
test
rcll
sub
dec
adc
add
enter
fldl
push
ss
cmp
pop
xchg
jp
enter
scas
mov
test
idivb
cmp
dec
loop
in
inc
or
in
or
lret
fwait
mov
ljmp
and
dec
ljmp
push
sahf
jg
mov
dec
inc
ja
stos
in
addr16
js
scas
pop
adc
repz
aaa
xlat
shll
or
aas
test
push
sbb
dec
push
popf
cmp
or
pop
repz
out
aam
dec
fs
push
cmp
daa
pop
movsl
xchg
pop
adc
mov
ret
lock
inc
fldcw
push
pop
imul
test
cs
lods
jl
xlat
adc
xor
xor
sahf
or
inc
aam
mov
mov
mov
adc
inc
mov
dec
push
jle
jg
mov
xor
cmpl
loopne
enter
xor
inc
inc
loopne
push
test
push
push
inc
addl
pop
cmp
ret
pop
ficoms
pop
adc
pushf
mov
mov
push
and
push
popa
test
and
es
cli
jae
mov
push
in
lock
iret
sub
popf
decb
xchg
mov
mov
sbb
xchg
outsl
mov
inc
cmp
xchg
jl
test
adc
xchg
in
adc
fwait
pop
pop
out
mov
dec
or
pop
sbb
mov
lret
xchg
das
mov
aad
aam
cmp
subl
cmp
cmp
hlt
aad
scas
cmp
add
pop
leave
fnstsw
fs
ljmp
inc
dec
pop
mov
lea
jg
gs
jmp
xchg
and
scas
jl
mov
jb
add
jnp
jb
inc
sbbl
inc
mov
testb
push
imul
insl
idiv
pop
inc
xchg
jmp
je
test
push
jmp
cld
pop
xchg
dec
popa
out
pop
scas
sub
repz
stos
leave
mov
nop
dec
aam
in
and
js
sti
inc
fs
insb
call
sbb
outsb
icebp
mov
mov
jae
in
test
mov
in
adc
and
divl
push
dec
rolb
pop
imul
stos
or
stos
enter
mov
lret
xor
ljmp
loopne
incl
loope
cmc
testl
pop
lods
cltd
mov
adc
add
loopne
data16
push
test
adc
fwait
jge
mov
pop
push
and
pop
cmpsl
jmp
ljmp
adc
lds
shl
cltd
pop
cmpsb
or
mov
mov
sti
dec
mov
bound
iret
mov
std
test
sub
out
adc
stos
xchg
mov
push
add
sub
xor
sbb
test
lea
and
jae
les
stos
popf
int3
cmp
xor
ljmp
fmull
inc
pop
mov
sbb
jge
jge
mov
cmpsb
add
mov
jnp
lods
addl
in
sbb
mov
scas
xchg
lcall
int3
push
jge
fwait
cmp
pop
sarl
test
adc
mov
pop
cmp
pop
pop
mov
dec
sbb
cli
fisubrs
add
dec
mov
xchg
movsb
lahf
mov
sbb
fisttpl
cmp
shrl
cmp
push
cmp
call
cmp
push
cld
mov
test
daa
sbb
aaa
dec
pop
idivl
pusha
lahf
jo
and
jecxz
std
testl
pop
test
in
mov
lods
fwait
sbb
movsb
jne
loop
fwait
nop
lret
and
bswap
cltd
jp
add
jno
dec
loopne
popa
mov
aad
lods
push
mov
loop
test
and
push
mov
cmp
adc
mov
lea
jb
sarb
shlb
outsl
neg
and
je
fcmovnu
ljmp
ret
in
sbb
aam
repz
sahf
pop
out
jl
jl
mov
xor
mov
ja
jp
es
inc
inc
jl
and
cmp
jns
bound
sti
mov
pop
cmp
cli
or
and
ds
movsb
scas
int
push
shrl
enter
outsb
and
adc
and
dec
cltd
ja
jo
cmpsl
mov
xor
xchg
and
psubusb
push
leave
scas
int3
xchg
js
xor
dec
jle
push
push
rcll
cwtl
adc
jbe
mov
inc
into
movsl
mov
call
sbb
jb
and
xor
adc
sbb
jbe
mov
fsubrl
shll
ljmp
out
push
lock
jg
out
mov
mov
sub
and
and
mov
inc
sbb
rcrb
jnp
insb
pop
sbb
sub
sbb
xchg
out
repnz
sbb
jg
loopne
outsl
jmp
push
mov
jmp
push
dec
std
jns
inc
pop
push
mov
jecxz
jg
pop
mov
cmp
jp
mov
pop
mov
jae
pop
mov
add
mov
int3
jl
sbb
add
call
ret
sahf
movsb
cwtl
xor
push
jle
lret
xchg
insb
icebp
lods
dec
int3
call
jge
inc
ljmp
pop
out
push
insb
imul
or
mov
sub
pop
xchg
notl
cmp
mov
xchg
test
lods
aas
cwtl
dec
scas
dec
rdpmc
mov
clc
jl
jno
cs
mov
in
or
aam
fwait
xchg
out
xchg
and
movsb
test
in
inc
jmp
fwait
daa
dec
inc
mov
pop
and
jp
addr16
or
ror
or
outsl
sbb
push
dec
outsb
adc
jns
pop
mov
insb
push
and
push
jmp
mov
lods
sti
aad
and
call
rcrl
sub
jg
inc
cmc
push
insl
in
add
xor
fimull
pop
push
rorb
leave
js
stc
adc
loop
out
ret
jno
outsb
sub
xchg
add
loope
xchg
pop
aaa
pop
movsl
mov
pusha
stc
sub
imul
mov
fmull
adcl
mov
push
mov
xchg
shrl
mov
test
xchg
in
repnz
and
xchg
add
cmpsb
sbb
pop
shll
jecxz
cmp
xlat
jecxz
test
subb
dec
jle
icebp
mov
icebp
pop
loop
clc
adc
cmpsl
pop
scas
je
or
int3
dec
outsb
inc
insl
or
dec
adc
iret
jcxz
push
pop
inc
fstpt
add
fmull
ret
jmp
out
xchg
cmp
imul
xor
dec
icebp
and
push
jecxz
orl
dec
inc
and
les
push
adcb
sbb
mov
loope
mov
xor
data16
and
les
test
test
in
std
mov
cmpl
inc
pop
mov
shrb
mov
and
xlat
cli
inc
sbb
sub
xchg
and
ja
addr16
shrl
add
cs
jl
es
pop
or
pop
aam
pop
sti
shll
push
lds
aaa
mov
xlat
sub
dec
adcb
test
mov
pop
inc
daa
loopne
xor
sub
cmpsb
dec
ret
push
rolb
popa
sub
xchg
adc
test
stc
in
sarb
or
lret
xchg
xchg
test
gs
test
mov
insb
mov
js
icebp
clc
in
jmp
sbb
jb
fs
cmp
xchg
fnstenv
popf
loop
pop
stc
cmp
adc
cmc
mov
jmp
std
push
mov
ret
jmp
sub
jae
imull
and
inc
in
ret
adc
int3
pop
inc
stos
lds
aad
xchg
insb
je
jbe
rcll
fwait
outsl
push
shl
mov
push
cmp
sbb
not
add
sub
fxtract
loopne
mov
xchg
arpl
pushf
aad
cmc
and
push
cmp
or
mov
dec
or
jl
sti
sbbl
push
repz
dec
into
imul
mov
fwait
or
inc
jmp
mov
xlat
faddl
movsl
rorb
rorb
mov
and
repnz
jns
inc
je
pop
mov
pop
or
push
lock
sub
and
sahf
test
aas
dec
dec
roll
aas
sbb
add
xor
dec
mov
in
xchg
sub
pop
cmp
repz
jb
ss
xor
insl
lret
inc
and
mov
call
mov
ds
cmpsl
dec
ret
test
push
dec
insl
push
xchg
stos
and
stc
jmp
imul
jbe
lcall
or
gs
aaa
xchg
pop
ret
pop
hlt
jnp
xchg
jle
mov
mov
cmp
sub
sub
popl
xchg
cli
rcrl
jo
pusha
mov
jecxz
out
call
or
pop
pushf
pop
cli
das
fucom
sbb
mov
cmp
mov
push
xchg
stc
lods
rcrb
mov
sahf
pop
sbb
inc
xchg
mov
xchg
adc
ret
push
aas
cmp
push
int3
call
enter
xlat
xor
pop
cmp
or
lods
bound
push
int
data16
adc
mov
inc
mov
xlat
jge
cmp
inc
in
sbb
mov
or
pop
push
mov
std
stc
rcr
inc
xchg
mov
mov
leave
adc
outsl
aam
inc
stos
int
and
pop
dec
mov
pushl
leave
pop
test
push
or
popa
gs
xor
ja
lahf
shlb
out
push
inc
dec
fiaddl
mov
adc
dec
mov
les
jns
les
sbb
jbe
fs
xchg
jae
andb
push
mov
lret
gs
push
xor
push
shrl
in
sbb
jecxz
flds
loopne
sti
test
xor
fcoms
mov
dec
mov
adc
outsb
fiadds
push
pop
push
xor
sub
mov
test
ret
ret
push
pop
in
lret
arpl
das
jbe
ret
cwtl
pop
xchg
ret
sub
movsb
mov
dec
in
pop
sub
jmp
dec
iret
mov
mov
test
mov
push
aaa
imul
and
xchg
mov
jge
pop
stos
int
aaa
sub
mov
mov
jmp
pusha
loop
cmc
sbb
add
sahf
aaa
pop
sbb
scas
sysexit
out
push
xor
mov
ret
xchg
sub
sbb
pop
cmpsl
add
or
std
mov
stos
lret
ja
aad
jmp
adc
and
dec
jo
popa
dec
leave
fstps
pop
es
xorl
ja
cmpl
cmp
cmpsl
and
cmp
push
int3
xor
mov
ss
push
in
lret
ss
jl
stc
xor
out
add
cmpsb
bswap
jbe
inc
notb
jns
dec
add
scas
jle
mov
repnz
cmp
leave
ror
lahf
inc
fcomps
mov
and
outsl
imul
loop
dec
test
inc
dec
aas
int3
and
cmpsb
xchg
pushf
hlt
in
xor
loope
xor
dec
out
pushf
xorl
stos
or
adc
out
mov
sti
push
mov
loopne
bound
loop
movsb
popa
dec
aas
outsb
movsbl
sub
loop
enter
sbb
rcl
sbb
xchg
sub
bound
push
mov
int
xorb
test
in
jno
icebp
and
aam
addl
adc
cmp
inc
push
mov
or
cmc
mov
mov
hlt
push
push
popa
sub
outsl
or
es
mov
cmpsl
mov
jno
pop
cmpsl
dec
inc
pop
inc
sub
sub
bound
movsb
dec
jns
sub
int3
pop
bnd
or
pop
jnp
mov
faddl
mov
arpl
or
pop
dec
pusha
push
in
shlb
push
outsb
insl
loopne
pop
mov
and
jecxz
or
ja
sbb
push
dec
fidivrl
xor
sub
loope
pop
pop
les
loope
scas
imulb
push
movsb
lcall
or
aaa
fldenv
imul
adc
dec
aaa
and
cmp
jns
lock
rcrb
cmp
cld
mov
imul
lret
sbb
inc
sbb
jb
push
sub
out
dec
rclb
pop
sbb
lock
mov
stos
sete
fs
icebp
stos
sbb
adc
test
add
xchg
stos
cltd
ja
push
jno
push
fiaddl
mov
fstps
sub
sbb
call
add
clc
xchg
imul
fdivs
adc
xchg
inc
fwait
mov
fsub
pop
bound
or
xor
test
ss
shll
loope
dec
jl
cwtl
fnsave
fistpll
mov
mov
jae
inc
mov
call
inc
pop
js
mov
das
ror
dec
sub
ljmp
outsb
sub
pusha
lods
imul
mov
pop
xlat
add
push
pop
cmp
jle
xchg
outsb
cmp
adc
inc
cmpl
xchg
push
cmpsl
xorb
shll
lcall
in
dec
lea
and
jne
and
insb
scas
popf
jg
pop
dec
cmc
inc
repz
sub
ret
xorl
xchg
jg
push
sbb
leave
arpl
pop
movsb
gs
jecxz
outsb
adc
outsb
out
sub
fs
fdivs
pop
inc
or
imul
insl
les
shl
sub
orb
arpl
inc
rep
cmp
mov
test
adc
dec
push
roll
fildl
jmp
sbb
in
clc
stos
sub
and
mov
fwait
mov
sbb
lods
outsb
sub
pushl
xor
clc
push
adc
sarb
lods
adc
sub
ds
data16
outsl
xchg
mov
popa
cmpsl
daa
in
push
inc
or
push
mov
or
inc
out
loopne
jmp
loopne
movsl
shrl
into
and
cs
lods
sbb
lock
cmc
pop
pop
xlat
jg
push
sbb
les
rolb
int
fnstenv
loop
xchg
test
jp
sub
or
cmp
mov
lods
adc
fcmovne
dec
mov
dec
ja
cld
xchg
aad
cmp
cmp
xor
push
test
and
ja
add
gs
fadd
adc
lret
cmp
bound
pop
inc
mov
mov
mov
into
rorb
jnp
ss
fiaddl
inc
push
out
mov
cmp
dec
or
mov
lsl
mov
jmp
shrb
cmp
leave
mov
push
js
stc
clc
int
inc
push
push
sarb
movsl
adcl
xchg
call
mov
jmp
sub
sbb
jo
inc
mov
or
pop
xor
shlb
push
pop
adc
lahf
xor
aam
sub
lret
lret
xchg
jbe
dec
idivb
jg
andb
repz
dec
mov
or
push
or
sub
or
shll
mov
mov
sub
jnp
push
setl
pop
xor
jecxz
cmp
pop
pop
jb
out
or
cmpsb
imul
stos
subl
cmp
pop
imul
cmp
fadd
repnz
lods
das
fnsave
jge
jo
add
cmc
bound
popa
inc
outsl
lcall
xchg
and
mov
sbbl
aad
or
cmp
inc
std
icebp
add
mov
adc
inc
jecxz
dec
shlb
mov
pop
push
or
int3
int
cmp
into
push
aaa
les
mov
outsb
int3
push
add
and
adc
gs
mov
mov
fcoms
xchg
clc
popa
sub
mov
out
dec
adcl
and
mov
inc
rcr
pop
fists
loope
or
les
loope
jno
data16
xor
jno
pop
push
jo
jns
and
inc
lahf
or
xchg
imul
jb
cmp
test
push
mov
push
shrl
mov
pop
roll
fdivr
out
test
cmpsl
aas
jge
add
mov
inc
mov
sti
ret
test
xchg
aad
inc
push
sbb
cmc
cs
mov
imulb
scas
scas
mov
add
xor
mov
mov
adc
mov
lock
lods
pop
iret
les
ja
xor
sub
sbb
jecxz
jbe
sub
cltd
jle
xchg
fsubrs
leave
add
icebp
leave
and
or
mov
je
xchg
icebp
sbb
mov
mov
mov
xchg
mov
ror
pop
nop
xlat
in
loope
lods
mov
movsl
lcall
sub
loop
fdivrs
lret
ljmp
arpl
cmp
movsl
xchg
sub
and
jns
add
mov
mov
jg
jp
cmp
mov
out
add
int3
pop
cmpsl
stos
or
loope
fidivrl
aaa
lea
sbb
mov
pop
aas
push
add
xchg
mov
in
cmpb
das
dec
xchg
popa
sub
push
mov
or
in
test
roll
sbb
rorb
inc
cmp
shll
ljmp
loope
mov
lret
jge
inc
adc
push
and
and
or
rcll
and
sbbb
das
lock
insb
xchg
shr
xor
aam
sbb
call
jle
mov
mov
negl
rep
sub
daa
and
das
cld
pop
push
lods
mov
jb
imul
lods
repnz
test
test
dec
cmpb
dec
movl
mull
popf
add
shlb
out
loopne
clc
enter
xlat
push
fldl
cmpsl
cwtl
sbb
xchg
inc
fidivs
sbb
fistpl
shlb
jp
sbb
ffree
arpl
mov
mov
push
xchg
out
loop
xlat
addb
sar
xchg
mov
and
pop
xchg
scas
repz
push
fwait
mov
push
cmp
fbstp
gs
jecxz
stc
pop
sbb
outsl
mov
popf
inc
clc
ja
mov
xchg
outsl
jmp
out
test
xchg
jl
cmc
inc
or
mov
adc
das
fldl
and
xchg
push
jecxz
lahf
mov
add
cmpsl
mov
pusha
fwait
push
pop
sub
sti
jle
fwait
mov
pusha
sahf
or
jnp
mov
out
andl
push
lcall
xor
xchg
rcll
or
xor
insb
inc
inc
sub
and
pusha
and
xor
lock
loop
mov
scas
pop
nop
mov
iret
lock
pop
dec
inc
stos
xchg
call
andb
rolb
pop
jg
push
cmp
stos
jo
lahf
push
mov
es
loope
push
xchg
xchg
or
lahf
jne
xor
flds
push
insl
in
add
in
xor
or
ja
int3
std
mov
push
inc
lock
bound
mov
sub
sbb
lcall
or
loop
lds
add
or
lock
pop
mov
push
je
out
push
sub
inc
sahf
sub
mov
ljmp
repz
dec
lret
jg
repnz
sub
push
xor
push
inc
jmp
std
stc
mov
scas
loope
cmpsb
lcall
xor
sahf
pop
lcall
jns
pop
push
cmp
mov
mov
adc
imul
pop
int3
mov
mov
cmp
pop
inc
add
rcr
call
aad
mov
inc
imul
xchg
or
mov
sbbl
test
mov
in
test
add
nop
sbb
mov
int
in
leave
scas
mov
sbb
sahf
inc
popf
jnp
sti
out
mov
mov
pop
dec
or
add
pop
lea
xchg
pop
inc
push
mov
lcall
xchg
lock
mov
cmc
sarb
cltd
cmp
mov
jno
adc
jbe
push
leave
xchg
push
outsl
cmpsl
adc
movsb
and
mov
mov
cltd
or
and
sbb
mov
ror
and
repnz
xor
aam
out
sbb
cmp
lods
mov
addr16
mov
jmp
cmpsl
jo
mov
icebp
ljmp
jns
arpl
jne
shlb
push
add
mov
jmp
hlt
jecxz
inc
mov
push
adc
out
mov
cmp
dec
fs
cmpsl
adcl
adc
les
jb
push
push
je
in
insl
mov
inc
sbb
jnp
jo
enter
gs
sbb
mov
imul
stc
fdivrp
mov
shlb
fs
xchg
je
add
add
mov
add
sub
inc
mov
enter
shrl
inc
mov
fsubrl
push
enter
inc
mov
cmpsl
mov
out
jb
inc
imul
aaa
adc
insb
ja
sbb
adc
int
pop
sub
stc
push
mov
mov
cmp
cmpsl
xor
or
cmp
sub
xchg
lods
popa
sub
ret
gs
mov
cltd
add
inc
aaa
mov
cmpb
mov
xor
iret
ds
lods
sub
xchg
pop
and
out
iret
js
fs
pop
aaa
push
xor
dec
aam
fisubrs
mov
jecxz
out
std
inc
in
idivl
je
fcoml
into
flds
aad
cs
rorb
xor
imul
mov
ret
bound
mov
sub
inc
dec
rcrb
std
sub
dec
cli
aaa
inc
cmp
pop
fstps
test
inc
fldt
sub
jp
mov
sub
in
shlb
pop
cld
fbld
adc
pop
pop
cmc
enter
push
cmp
sub
mov
out
and
inc
pop
in
aad
decl
inc
mov
xchg
out
mov
out
stos
dec
pop
fmull
and
int
push
inc
jbe
mov
rorl
inc
addr16
jo
pop
aas
mov
xchg
mov
es
jg
lcall
sub
psubd
in
icebp
stos
lcall
sti
pop
xchg
stc
clc
sbb
mov
add
xchg
or
faddl
sarl
outsl
loopne
xor
test
lods
hlt
mov
clc
cmpsb
lcall
je
jp
ret
mov
push
lds
pop
xchg
data16
shrl
out
loopne
pop
or
out
stc
jb
pop
cmc
test
push
popa
cmp
xchg
test
mov
push
insb
sbb
sbb
movsb
call
out
fst
add
lcall
sub
testl
adc
xchg
sti
xor
jp
cmp
adc
addr16
or
or
inc
lret
in
imul
popa
pushf
cmpsb
add
lret
incl
stos
lahf
rcl
push
add
or
xlat
in
xadd
xchg
or
stos
jne
sub
in
jno
cmp
mov
and
mov
xor
lret
xor
fwait
subb
decl
fwait
data16
jge
imul
mov
jno
sarb
hlt
xor
in
aam
jp
sub
ret
test
addr16
jecxz
aas
jo
test
mov
dec
clc
or
pop
and
into
inc
push
jnp
xchg
jbe
or
jns
mov
in
subl
inc
dec
in
push
xor
xchg
daa
jae
fadd
sbb
push
cld
jns
mov
push
inc
data16
lcall
test
in
pushf
sub
repz
push
scas
push
push
pop
jp
test
shrb
dec
pop
lods
xor
incl
push
mov
mov
loope
test
sbb
push
shrb
fsubrl
out
mov
jmp
cli
mov
imul
jmp
aas
mov
sub
movsl
ror
sbb
push
fstps
adc
pop
jmp
cmpsl
inc
das
out
push
cmp
je
jb
repz
mov
cwtl
adc
popf
sbb
rcrb
cmp
daa
xor
pop
test
fldenv
inc
adc
lods
in
cs
pusha
sub
mov
sbb
popa
aaa
enter
aam
std
inc
xchg
xor
outsb
adc
fwait
imul
pop
ja
das
xchg
pushf
and
and
push
adc
mov
and
jle
test
addr16
orl
lret
dec
test
lock
lret
ljmp
arpl
jp
rcll
cmp
push
leave
cmpsb
sbb
scas
push
jmp
sti
dec
movsb
lods
add
iret
test
addr16
cld
xlat
mov
lea
xchg
or
sbb
decb
jge
mov
xchg
das
fcoms
gs
decl
push
lods
pop
out
xchg
mov
push
cmp
dec
in
aaa
cmp
fildl
jnp
push
lock
std
dec
mov
inc
sbb
ss
inc
ds
cli
cmpsb
lods
enter
pusha
fs
push
mov
stos
fimuls
push
add
cmp
hlt
add
out
mov
dec
dec
push
imul
cmpsb
and
xor
int3
scas
test
xchg
sub
push
adc
jb
enter
ds
insb
push
andl
or
inc
pop
outsb
push
mov
out
and
fidivl
test
sub
test
add
leave
or
xor
jnp
scas
out
mov
jmp
dec
mov
mov
fdivs
daa
jb
pop
adc
cmp
push
mov
and
mulps
negl
das
xchg
push
lods
sub
lcall
popa
xlat
fdivp
cmp
jp
js
or
shlb
and
inc
pop
mov
outsb
add
inc
sub
pop
or
mov
ja
mov
arpl
gs
addr16
test
test
pushf
inc
or
imul
gs
pop
or
sub
hlt
ja
es
pop
in
cmp
shufps
adcl
ljmp
lret
pop
lds
push
mov
mov
pop
sbb
mov
xor
xchg
hlt
or
lods
ljmp
and
xchg
push
jg
mov
mov
xor
push
shrl
push
lcall
int
stc
pop
and
mov
lea
pushf
imul
call
mov
shlb
cmpsb
roll
enter
mov
es
inc
and
sarb
mov
cmp
sub
jne
out
js
ret
aaa
ficoml
in
mov
adc
cmpsl
mov
inc
loope
mov
inc
lret
jge
popa
cwtl
fistps
push
xor
mov
lods
cmp
inc
xchg
int
cld
sub
jmp
xchg
ret
adc
pop
ljmp
mov
test
popf
adc
jne
jge
imul
or
movsl
xchg
stos
ja
fwait
pop
or
sub
add
ficompl
and
daa
jecxz
hlt
daa
jbe
pop
sbb
dec
enter
imul
jmp
mov
je
in
das
test
xchg
and
daa
cmpsb
fdivs
outsb
inc
push
and
sbb
add
ljmp
cmc
mov
stc
mov
push
add
roll
adc
mov
and
test
lods
jmp
pop
jg
aad
je
call
inc
and
pop
or
mov
mov
cmpsb
dec
imul
pop
add
or
jns
andl
adc
je
and
xchg
push
enter
cld
xchg
pop
xchg
xchg
push
jmp
jl
and
mov
out
fs
mov
aas
xor
pop
fucompp
mov
test
fisttpl
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
in
div
pushf
hlt
jle
dec
mov
add
sub
xchg
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
