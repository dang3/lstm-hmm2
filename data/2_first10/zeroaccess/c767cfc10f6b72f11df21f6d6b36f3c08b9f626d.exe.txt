push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
sbb
mov
adc
movlps
cmp
dec
mov
mov
mov
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
js
pop
xlat
push
imul
mov
dec
pop
jge
xchg
notb
and
rcll
mov
fildl
and
sub
add
dec
cwtl
cltd
fldl
xchg
fstp
outsb
cmp
les
testl
shrl
xchg
sub
inc
out
shrb
insb
leave
popa
sbb
decb
ja
test
test
and
jmp
adc
out
cwtl
aad
cld
arpl
std
cmp
xlat
push
pop
push
dec
or
adc
or
cmp
loop
fstl
and
testb
cwtl
and
add
add
add
loopne
push
add
mov
mov
sub
iret
scas
push
xchg
clc
jmp
mov
or
pop
jo
rcrb
les
mov
xor
arpl
ja
push
std
jmp
push
pop
movsl
mov
iret
mov
iret
jno
inc
aam
out
xchg
mov
jecxz
sbb
inc
or
pusha
data16
out
ja
pusha
bound
xchg
sub
mov
push
les
push
pop
cmp
ficompl
pop
arpl
mov
ljmp
aas
pop
inc
sub
xchg
and
mov
inc
inc
adc
test
movl
add
shr
push
add
add
push
mov
push
xchg
mov
movlps
movlps
fcoms
loopnew
in
imul
add
mov
shrl
mov
dec
mov
roll
inc
xor
xchg
cli
cmp
mov
lds
fnsave
frstpm(287
clc
ss
xor
mov
sbbl
stos
pop
clc
inc
mov
out
xchg
ds
jae
jle
inc
jb
scas
test
pusha
adc
das
xor
fistpll
sub
dec
stc
fs
outsl
lahf
mov
mov
and
pop
insl
inc
sbb
mov
das
popf
js
push
ss
in
popf
push
mov
adc
lds
jbe
cmp
aaa
jp
cmp
xchg
lahf
sub
into
pop
adc
xchg
addr16
or
pop
or
imul
push
insb
pop
jle
repz
mov
mov
adc
inc
sbb
cmpb
add
and
push
xor
repnz
aad
fs
loope
inc
pop
cmp
scas
cld
cmp
dec
push
into
push
push
fcomi
test
data16
cmp
stos
jle
mov
bound
pusha
lods
push
and
dec
cmpsl
int3
push
pop
stos
inc
xor
push
in
pop
fists
jmp
jo
fbstp
in
stc
out
clc
jge
les
mov
adc
divl
pop
sub
lcall
and
out
push
push
push
fwait
int
test
shr
cmp
data16
pushf
mov
cmpsl
out
je
fistpll
mov
scas
lahf
dec
xor
and
mov
sbb
xor
jae
leave
fistpll
or
lret
xchg
sub
js
fwait
or
cwtl
addr16
loop
mov
js
cmpsl
pop
cmpl
and
movsb
inc
out
jae
sbb
xor
in
mov
cmp
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
adcb
movlps
stc
mov
fisttps
add
inc
lock
aas
xor
loopne
je
push
add
adc
mull
pusha
das
add
xchg
lods
pop
test
bound
jp
in
or
push
mov
inc
sub
jns
popf
lret
and
xchg
ds
adc
lret
icebp
dec
paddw
outsl
cmpl
imul
add
jmp
in
jecxz
xor
daa
loope
push
test
shll
push
pop
notb
push
xchg
in
and
xchg
sub
xor
test
pop
sbb
push
fstpt
push
mov
aaa
icebp
popa
lods
or
out
mov
aaa
aad
mov
test
cwtl
stc
into
mov
sbb
and
dec
lret
mov
leave
cmpsb
aas
fneni(8087
mov
enter
add
jb
mov
imul
out
stos
cmp
pop
and
sbb
inc
lcall
fimull
xor
nop
sbb
outsl
shlb
nop
push
push
out
mov
sbb
or
stos
xchg
jbe
mov
adc
mov
dec
ret
stos
sub
js
xor
cmp
cmpsb
insb
jo
aam
test
stos
jnp
mov
adc
adcb
imull
rcr
mov
and
lds
lret
aaa
mov
dec
dec
add
lock
sti
dec
xchg
dec
push
xchg
imul
mov
orb
shl
into
xor
mov
out
dec
jp
mov
mov
mov
inc
mov
mov
test
loope,pn
mov
mov
mov
adc
jno
movl
adc
push
mov
cmp
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
and
mov
adc
movlps
xor
aam
repz
xchg
stos
repz
mov
inc
jp
insl
add
mov
inc
lret
add
cmp
jmp
scas
in
jne
outsl
xchg
loopne
rcrb
adc
mov
xor
inc
xor
into
jl
negl
stos
mov
push
loopne
sub
jp
ret
pop
ds
lcall
sub
cmp
xchg
ja
mov
dec
jmp
fadd
in
aaa
inc
xchg
add
cld
sub
das
cmp
je
xchg
test
popf
mov
out
jecxz
das
jmp
out
pushf
xor
jle
push
cmc
xor
hlt
cmpsb
xchg
pop
out
fnstsw
shlb
and
dec
pop
repz
push
mov
jl
cmc
add
sub
mov
add
adc
fisubl
mov
adc
es
sbb
xchg
scas
in
and
iret
leave
push
decl
je
aam
add
push
and
cmp
int3
and
ret
adc
fnsave
clc
insb
jo
inc
xchg
insb
test
int
xor
adc
cwtl
inc
and
cmp
aad
out
pmaxub
push
call
cmpsb
movsl
hlt
call
xor
or
mov
rcrb
xor
mov
cld
aad
adcl
outsb
mov
and
pop
pslld
adc
and
or
je
std
adc
fiadds
cmp
mov
cwtl
sub
insb
scas
sub
mov
add
adc
fnstenv
mov
adc
adc
movsb
sub
jg
cmp
cmp
aad
test
add
mov
mov
sub
sahf
push
mov
shll
xchg
aam
or
outsb
hlt
add
repnz
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
jle
add
adc
movlps
or
jmp
ret
jnp
dec
jmp
in
xor
in
mov
gs
idivb
push
sub
jmp
and
inc
hlt
pushf
icebp
sub
and
test
jecxz
out
xchg
or
lret
dec
sub
and
mov
xchg
ljmp
cwtl
in
js
mov
int
push
cmc
lods
mov
int3
mov
addr16
movl
or
xchg
adc
stos
adc
imul
mov
mov
sub
aam
sbb
out
mov
mov
loop
xchg
loop
xor
or
cmp
sub
sbb
pop
pop
ret
insl
adc
inc
inc
dec
jne
js
in
or
les
out
cmp
bswap
fdivrl
mov
sub
xlat
sahf
dec
lods
mov
std
test
ret
bound
mov
loope
cmc
inc
mov
popf
jmp
push
push
pop
cmp
inc
out
and
mov
mov
mov
shrb
ret
pop
pop
leave
jl
xchg
out
push
scas
adc
lret
scas
dec
and
test
adc
push
out
push
dec
mov
cmp
lahf
mov
mov
and
test
add
xchg
into
clc
fsub
mov
xor
xor
fucomip
xchg
cmp
mov
ja
mov
or
add
xor
jecxz
sub
xlat
and
sbb
sarb
sbb
mov
mov
mov
enter
call
in
aad
popf
aam
aaa
fs
lret
xor
inc
out
push
mov
int3
sahf
lods
fsubrl
and
imull
leavew
mov
adc
sbb
adc
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
insb
call
adc
movlps
jno
into
xor
ja
dec
jp
xor
dec
push
push
sbbl
fcomps
jecxz
pop
pop
push
and
cmpl
adc
fcmovbe
fnstcw
mov
daa
xor
test
mov
pop
cmp
sbb
das
out
in
push
int3
dec
fldl
jp
sbb
fsubs
cmpsb
lods
fwait
insb
in
je
adc
dec
dec
dec
ja
push
int3
xchg
mov
lods
mov
repz
mov
fcmovbe
pop
mov
cli
loope
mov
addb
orb
xchg
int
pop
xlat
cmp
jae
aas
movsl
aaa
stos
enter
mov
test
cmp
fwait
add
jmp
out
out
dec
rcrb
inc
insb
mov
fidivrl
or
mov
lods
jb
jnp
or
pushf
clc
cmp
lret
add
idivl
cs
mov
rorl
and
mov
and
dec
stc
inc
shlb
sahf
sub
cs
arpl
mov
add
aam
adc
cli
outsl
xchg
cmp
mov
cmp
js
pop
data16
jne
push
sbb
or
sub
adc
repnz
leave
repnz
or
fiadds
inc
movsb
sub
sbb
inc
or
pop
mov
dec
cmp
adc
mov
or
cmp
movsb
add
or
ja
stos
pop
ror
outsl
pop
shlb
pop
xchg
cmp
jecxz
push
popa
xchg
cmp
pop
mov
int
jns
pop
jae
xor
or
mov
jmp
popf
mov
inc
push
je
insl
xchg
inc
dec
mov
sbb
loopne
ds
push
mov
xchg
sub
jecxz
push
and
cmp
xchg
fs
adc
xchg
mov
movb
sub
fsubl
out
inc
sbb
mov
mov
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
incb
sti
sti
adc
movlps
das
lds
add
testb
and
ret
stc
pop
fistpll
rol
inc
and
out
les
cmp
sahf
loope
ret
and
fsubr
testl
cmpsl
xchg
or
push
data16
jno
inc
les
rcr
cmpsb
xlat
inc
or
ss
mov
and
lcall
sbb
rol
ffreep
push
jae
jae
mov
push
stos
lcall
imul
insb
mov
jg
mov
dec
mov
lds
les
shr
stos
cld
fistps
fs
inc
push
add
ja
testl
add
subl
adc
push
std
pop
out
and
loope
push
loop
mov
out
mov
pop
es
push
and
int3
jo
inc
fistps
loop
jbe
cmp
and
icebp
fcompl
sub
ret
inc
loope
xor
and
push
int
mov
in
add
pop
and
andb
jnp
cmp
pop
mov
xor
jno
and
dec
cs
dec
and
in
and
leave
pop
sarl
mov
mov
inc
inc
inc
mov
or
add
testb
inc
scas
mov
es
mov
repz
dec
jmp
add
lcall
incl
cmp
fdivrl
jns
and
pushf
movsl
mov
mov
outsb
dec
rcll
dec
xchg
sar
into
fwait
jp
mul
pop
clts
out
ljmp
lock
jmp
sub
sti
cmovno
sbb
jge
pushl
cmp
inc
movsb
mov
jmp
loope
rolb
xchg
jecxz
mov
add
cmp
inc
add
jge
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
ss
div
adc
movlps
pop
out
mov
mov
popf
std
cmpsl
fmull
in
adc
loop
or
inc
out
scas
ret
mov
sbb
clc
push
push
push
addb
test
lds
sbb
cmc
push
scas
push
or
mov
inc
out
imul
test
stos
data16
ucomiss
dec
repnz
mov
lcall
lods
pop
sbb
push
fnstcw
sub
stc
mov
sbb
stos
push
push
adc
or
pop
pop
xchg
jle
shrb
or
push
mov
cld
xor
mov
jg
clc
ficompl
lea
mov
mov
jb
or
xor
inc
in
enter
out
xor
xor
push
push
out
pop
sub
dec
jno
hlt
push
push
ds
clc
popa
xorl
adc
and
sbb
cmp
or
push
outsb
iret
shll
push
std
in
sbb
shrl
je
xor
inc
movsb
rorb
scas
imul
enter
sub
sti
xchg
sbb
pop
insl
jo
test
in
sbbb
xor
inc
jl
iret
cmp
xchg
pop
xchg
mov
jecxz
mov
clc
les
fadd
pop
inc
rol
push
add
test
mov
jg
mov
repz
cld
insb
test
inc
xor
mov
xor
out
inc
xor
movsl
push
jg
dec
lods
and
lret
push
mov
les
sti
push
aam
xchg
xor
mov
scas
jbe
push
mov
std
movsb
stos
loop
mull
in
mov
jge
out
outsl
sbb
daa
xorb
gs
inc
hlt
add
daa
xchg
xor
call
test
insl
lds
push
push
cmpb
mov
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
das
dec
mov
movlps
out
ds
push
jle
lcall
jl
jnp
lods
mov
cld
arpl
ror
inc
mov
push
movsb
sbbl
cmp
adc
pop
xchg
jge
in
cmpsb
lds
mov
ss
push
jg
das
push
dec
cmp
inc
and
xchg
push
cmp
lret
aam
jne
adcb
pop
popf
outsb
jg
push
mov
dec
or
xor
sub
sbb
adc
or
adc
cs
shll
mov
fcomp
sub
mull
pusha
add
jne
pop
pop
push
sub
out
imul
inc
lock
shrb
arpl
mov
rcr
js
or
addl
mov
fisttpll
mov
cmp
push
dec
cltd
xlat
leave
mov
or
mov
nop
mov
leave
dec
fiaddl
in
mov
test
mov
xchg
and
mov
push
xchg
add
ja
leave
jmp
shll
fs
aad
mov
mov
outsl
mov
shrl
push
lods
sbb
inc
fdivp
pop
jle
fwait
mov
xor
cltd
inc
rcr
ficoml
fidivrs
jle
movq
mov
mov
cmc
sub
cmp
push
enter
mov
loopne
and
inc
inc
jbe
inc
aad
push
push
mov
cmp
icebp
cmc
xor
mov
fwait
inc
mov
mov
int
dec
jbe
adc
dec
pop
inc
adc
lock
into
sub
mov
cmp
lea
mov
int3
inc
inc
adc
push
mov
xor
sub
dec
ja
outsl
cmp
sub
xchg
or
cmp
adc
insb
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
xchg
fbld
out
out
adc
movlps
fldcw
jg
sub
jae
mov
mov
lahf
mov
lcall
shll
sbb
movb
jmp
push
xchg
decl
inc
jmp
xchg
leave
shrl
cld
dec
lds
sbbl
mov
pop
xchg
push
xor
mov
stc
insb
iret
push
aam
sbb
inc
add
mov
scas
xor
icebp
mov
dec
jge
adcl
sbb
out
jno,pt
fimull
cs
cmpsb
aam
shlb
test
out
shrb
sub
pop
lea
inc
mov
add
les
fcoml
out
xchg
je
aas
add
outsl
and
xor
pop
add
mov
xchg
out
mov
mov
arpl
int3
jo
jnp
popf
pop
xchg
add
sbb
ja
xor
test
pop
jns
loop
scas
cli
out
xchg
jb
mov
std
scas
mov
xchg
lret
loope
fcompl
mov
ret
cltd
lods
add
pop
jge
fbstp
push
xchg
sub
out
insl
shl
mov
stos
add
or
sbb
subps
mov
mull
mov
stos
fistl
test
sahf
test
dec
xchg
test
pop
out
cmp
aad
lds
jl
inc
sub
enter
aam
and
xor
and
aad
sbb
in
mov
pop
in
or
lds
aaa
dec
sbb
loop
sub
gs
std
mov
jb
cmp
gs
or
jecxz
or
insl
aam
inc
mov
popf
lods
push
add
mov
pop
fs
sbb
ret
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
xchg
pop
lods
jmp
adc
movlps
dec
dec
add
mov
xor
inc
or
pop
sub
test
mov
lods
jge
cmp
sub
aam
mov
xor
adc
sbb
mov
andb
mov
lret
movsl
in
imul
cmp
mov
inc
outsl
sbb
scas
loope
lea
dec
dec
or
fisubrs
mov
iret
mov
popa
fwait
xchg
out
les
sbb
dec
cmc
adc
mov
or
dec
or
sarb
dec
andb
push
xor
jle
and
xlat
loope
mov
jge
push
jbe
imul
dec
movl
addr16
fsubl
stos
push
jns
insl
fadds
retw
mov
dec
xor
out
xchg
dec
adc
mov
xor
xchg
pushl
cwtl
push
shlb
push
sbb
pop
and
in
stos
pop
rclb
andb
fisttpll
and
ds
rorl
adc
xor
xchg
into
jge
repz
scas
scas
popf
mov
add
fucomi
fimull
cmc
sbb
fucomp
in
xchg
ds
iret
xor
ss
movsl
inc
push
pop
jle
loop
inc
dec
cltd
stc
or
inc
xor
push
aam
push
test
pop
or
mov
lods
xchg
loope
inc
mov
stos
mov
pop
sub
fistps
sbb
cltd
xchg
jl
cmp
mov
insl
repz
sub
mov
jmp
push
sbb
hlt
nop
bound
inc
adc
xchg
jge
cwtl
mov
jmp
jecxz
sub
jns
push
lds
dec
pop
mov
xor
sub
js
roll
jmp
pushf
inc
sbbl
xchg
je
mov
mov
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
push
call
adc
jno
sbb
in
or
pop
mov
outsb
test
push
fwait
xlat
push
cli
pop
mov
cmp
inc
dec
add
aaa
jo
push
xor
jns
into
dec
pushf
xchg
out
inc
shlb
inc
pop
and
jecxz
clc
jbe
pop
mov
movsl
fildll
ret
mov
mov
adc
jo
out
repnz
aad
dec
sub
rcrb
lods
jmp
das
xchg
jnp
sti
shl
mov
xor
lock
rol
inc
popa
or
out
mov
sub
sbbb
add
popf
scas
js
sub
test
push
popf
loop
ret
and
shl
and
scas
add
dec
ljmp
and
je
pop
push
imul
xchg
xchg
dec
jnp
mov
rol
sub
or
cmp
or
pop
xchg
inc
cmc
sbb
out
cld
sub
and
lods
into
xchg
push
ret
mov
inc
xor
mov
les
dec
cli
stc
dec
sbb
sub
call
dec
imul
sbb
jp
adc
pusha
jbe
int
inc
dec
xor
loopne
mov
aam
sbb
xor
sub
das
aad
add
fisubl
fistpll
mov
rcrl
adc
repz
shr
mov
cmp
imul
iret
out
adc
je
pop
leave
mov
sub
dec
lods
xchg
sub
mov
cwtl
int
cmpsl
in
and
mov
push
mov
ret
mov
push
xchg
popa
sbb
mov
inc
xor
jl
loopne
jne
cmp
int
push
bnd
xchg
add
insb
mov
ficompl
loope
fdiv
push
or
call
mov
icebp
push
sbb
icebp
sub
hlt
cmpsl
call
sbb
xchg
jmp
int
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
jb
cmpsb
js
in
adc
movlps
jno
icebp
loope
and
inc
inc
push
js
pop
push
or
fwait
icebp
push
jbe
pop
add
jle
in
sbb
fists
push
cmp
mov
push
xor
push
lret
std
inc
repz
lcall
pop
or
ljmp
and
xchg
cld
insb
mov
pop
and
xor
mov
inc
imul
cld
adc
or
cltd
or
mov
das
insb
add
mov
ds
popf
aaa
or
mov
xlat
pushf
cmpb
push
out
jne
jno
sub
sbb
pop
pop
out
jl
loop
iret
or
and
or
lcall
test
dec
push
sahf
xor
pop
add
sbb
adc
sub
test
sbb
stos
pop
movsl
jns
jl
nop
jns
addr16
orb
sub
mov
push
inc
cltd
daa
notl
ds
mov
xor
hlt
sbbl
les
lahf
add
out
lea
sbb
dec
fiaddl
sub
pushf
pop
iret
jg
xchg
in
scas
lret
xchg
mov
xchg
shrb
lds
cmpsb
sub
and
adc
pop
pop
adc
pop
les
sub
mov
hlt
adc
movsl
cmp
mov
cmp
rcll
jmp
outsl
cld
mov
sti
jno
int
sbb
mov
push
mov
jno
pop
hlt
ljmp
ror
out
scas
pop
ss
xchg
scas
std
js
test
sub
ret
ljmp
int
call
push
ror
adcl
cmp
dec
andl
dec
movsl
dec
pop
loope
pop
cld
insb
rcrl
xchg
xor
aaa
xor
sti
xor
inc
das
pop
call
mov
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
pop
adc
loopne
adc
movlps
adc
sbb
adc
xchg
movsl
xor
xor
mov
and
scas
xchg
mov
pop
mov
daa
jle
fnstsw
and
cmp
and
pushf
lock
lcall
leave
push
pop
test
repz
cltd
aam
dec
mov
jecxz
sbb
mov
xchg
sbb
data16
loopne
mov
cmp
sub
lret
xchg
fnstenv
in
std
sub
loopne
or
imul
lcall
fucomip
inc
je
rcll
roll
and
cmp
ret
stos
mov
dec
outsl
sbb
dec
jp
lret
jmp
scas
adc
nop
insl
inc
fisubrl
pop
sub
test
stos
dec
inc
mov
fistpll
and
outsb
cmc
insb
pop
fildl
inc
dec
mov
ret
jns
jecxz
arpl
xchg
imul
fwait
push
push
xor
mov
out
or
dec
ljmp
movq
pop
loope
push
xchg
or
out
xchg
dec
insb
addb
inc
pop
mov
mov
test
mov
add
int3
mov
push
xchg
add
sbb
xchg
repnz
adc
xor
sbb
pusha
sub
pop
xor
mov
xchg
repnz
sbb
arpl
aam
movsl
out
test
dec
and
es
push
popf
or
sub
fnsave
mov
sahf
aaa
xor
add
jno
jge
push
cmp
push
jl
orb
jns
popa
mov
pop
insl
cmpsl
inc
xchg
inc
das
mov
and
mov
nop
sarl
in
cltd
mov
out
push
les
test
iret
and
mov
outsb
je
cli
inc
dec
cmp
cli
fsubl
mov
mov
sbb
pop
mov
or
mov
sub
inc
nop
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
jl
fidivrl
movlps
mov
push
ljmp
clc
cmp
shlb
dec
sub
mov
mov
sbb
and
lret
jl
push
hlt
sub
clc
lea
in
dec
cwtl
jmp
leave
icebp
lret
jno
dec
and
nop
loop
sub
pop
ss
iret
das
das
aam
mov
shll
push
scas
jbe
push
sub
xchg
les
daa
cld
inc
dec
shll
stos
mov
mov
cmp
mov
les
push
cmp
xchg
daa
jl
jns
lods
dec
cmpsl
mov
outsb
hlt
dec
and
mov
jle
lock
sub
inc
push
or
xchg
out
cmp
jle
aas
cmpsl
popf
xchg
sbb
sar
sbb
loopne
mov
bound
adc
push
pop
cmp
dec
subl
mov
pop
fs
xchg
aaa
daa
push
cmc
push
mov
jbe
ja
inc
shlb
adcb
inc
or
test
cmp
push
jae
fisubrs
pop
fucomp
pop
aaa
jl
rcrb
in
inc
inc
outsl
stos
lds
ss
insl
xchg
dec
lea
and
ljmp
mov
hlt
pop
fldenv
xchg
adc
sub
ds
cmp
mov
shll
push
mov
sti
jo
adc
ljmp
pusha
ja
inc
add
mov
in
lret
jbe
rclb
adc
jb
fcompl
xchg
push
adc
and
xor
pop
cmp
and
hlt
ja
jbe
xchg
aas
mov
dec
jg
fcomps
iret
mov
jg
xor
loope
movsl
cmp
test
call
sarl
mov
nop
push
inc
out
popa
mov
xchg
push
lock
lods
pusha
adc
pop
pushf
add
aas
insb
dec
mov
js
push
mov
lahf
xor
daa
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
sbb
mov
movlps
push
adc
mov
sbb
aad
xchg
mov
orl
mov
pusha
imul
xor
jecxz
add
jl
inc
pushl
arpl
imul
xor
jo
fs
out
aas
adc
shlb
cmpsb
push
addr16
fnstcw
push
test
lods
add
push
xor
icebp
dec
xor
xor
fisttpl
popa
cmp
jo
loopne
and
cmp
dec
es
je
sbbb
mov
outsb
int
xchg
push
in
je
xchg
mov
pop
cmp
pop
je
push
mov
mov
adc
xchg
movsb
mov
jae
dec
jle
in
call
jns
adc
aad
mov
sbb
jns
ja
imulb
or
cmp
push
jb
dec
std
fimuls
call
cs
ret
hlt
mov
xchg
cld
imul
pop
dec
xchg
pop
lock
inc
ja
pop
push
fisubrl
mov
push
cmp
mulb
lahf
shr
push
mov
mov
sub
stos
arpl
hlt
pop
or
int
mov
xchg
aam
and
loop
pushf
mov
in
adc
mov
or
xchg
mov
xchg
icebp
out
and
daa
adc
in
in
adc
fists
mov
movsb
ss
mov
nop
push
mov
hlt
cmp
push
jg
fistpll
push
or
sbb
out
mov
mov
sti
insb
sti
xor
das
lahf
fcmovnu
adc
movsb
aam
loopne
add
adc
add
sub
pop
mov
leave
fs
ret
sarl
xchg
mov
pop
std
cltd
dec
pop
mov
mov
js
loopne
cmpl
adc
push
add
add
fstpt
xchg
aam
adc
movlps
xchg
mov
xchg
cld
hlt
cmpb
bnd
clc
push
sbb
arpl
sbb
jecxz
rcrb
mov
bound
jae
sbb
sub
lea
inc
std
sbb
add
data16
mov
pop
add
stos
mov
in
push
mov
sub
cmp
adc
mov
cld
insb
jl
add
mov
mov
ljmp
add
sbb
fsubrp
push
outsl
pop
and
outsl
jo
sbb
pop
flds
or
cmpb
xchg
mov
xchg
fdivrl
pusha
ret
imul
mov
or
std
std
negb
daa
aas
push
test
lcall
sub
mov
ss
and
lea
inc
push
inc
and
subl
adc
adc
sbb
xchg
fdivl
fsts
inc
jb
mov
insl
jmp
or
popa
push
ror
jns
addl
inc
in
jp
inc
dec
mov
and
ret
sub
push
bound
in
inc
js
aas
shl
je
stos
out
jno
stos
push
ret
push
leave
test
push
push
pop
mov
jecxz
push
jb
push
movsb
mov
pop
mov
cltd
mov
lea
cmpsb
adc
cs
adc
pop
jle
test
push
stos
cmp
mov
test
mov
and
mov
out
ljmp
leave
cli
lods
imul
and
test
sbb
cmp
sub
mov
mov
cltd
xchg
mov
rorl
mov
inc
jmp
jecxz
inc
dec
gs
out
fstp
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
aam
jle
rclb
adc
movlps
stos
fidivl
mov
stos
movsb
xchg
scas
aam
mov
ret
inc
and
mov
adc
adc
and
xchg
in
mov
xor
xchg
cli
pop
bound
lea
xchg
xchg
pop
insl
fistps
enter
ja
dec
sub
or
cmp
mov
and
mov
mov
aas
sub
andb
cwtl
cmc
adc
sbb
arpl
push
mov
cs
mov
out
pushf
or
in
adc
ret
xchg
dec
punpckhbw
popf
mov
ret
fnstenv
dec
std
sub
jne
cmpsl
add
jmp
sub
movsb
xor
enter
ret
outsb
adcb
mov
sbb
pusha
lret
arpl
cmpl
popf
pop
mov
push
fimuls
fadds
mov
inc
ret
mov
push
pop
cmp
arpl
mov
add
jmp
insb
out
aam
loopne
decl
jmp
in
mov
fwait
mov
xor
leave
stc
and
test
or
xor
jns
or
jp
lret
shll
insl
aad
aam
stos
pop
pusha
and
or
inc
sbb
pusha
cmpsb
jbe
bound
rcll
and
xchg
cltd
and
aad
adc
std
jecxz
aas
jnp
in
fstps
dec
test
jbe
fistps
int
aas
sbb
push
bound
out
mov
jo
dec
call
push
sub
cmp
cs
rcrb
adc
or
mov
xor
mov
mov
jno
enter
or
add
cmp
pop
mov
mov
and
mov
cmp
jns
mov
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
js
mov
movlps
aas
mov
fstl
orb
sarb
std
filds
out
mov
mov
lods
jmp
cli
jl
das
fbstp
stos
loope
xor
jbe
add
pop
in
jne
fbstp
sahf
mov
pop
fwait
repnz
pop
mov
xchg
pusha
aas
add
fdivrs
dec
inc
leave
inc
jl
mov
call
in
pop
mov
ret
jl
mov
xchg
daa
subb
cmp
add
xchg
aam
cmc
insb
add
mov
and
inc
scas
lock
cwtl
mov
data16
add
shlb
push
outsl
in
stc
jno
fcomip
jo
push
ljmp
and
fsubrs
ret
dec
andb
xchg
cli
and
inc
and
and
add
shl
gs
mov
mov
xor
rcrb
sub
in
adc
add
sbbl
add
inc
idivb
mov
or
fdivr
aad
js
stos
add
adc
int3
jecxz
in
inc
cmp
inc
sub
pop
add
add
jecxz
in
lods
sbb
mov
inc
adc
cli
scas
adc
mov
out
nop
xchg
inc
sub
pushf
aad
imul
or
fbstp
roll
pusha
jmp
sbb
inc
pop
push
mov
test
js
jbe
jecxz
push
push
scas
cmc
insl
or
sbb
xlat
push
hlt
orl
movsb
add
jmp
adc
pushf
cmovae
out
stos
insl
xchg
in
and
lods
sub
cs
adc
jmp
mov
into
add
pop
sbb
clc
fsts
pop
xlat
in
jnp
xor
sub
mov
jg
or
pop
or
mov
mov
inc
stos
mov
add
push
mov
dec
lea
mov
sub
cmp
gs
inc
or
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
push
push
enter
movlps
jmp
add
mov
les
lods
xchg
imul
movsb
push
xchg
sbb
jns
or
sbb
push
scas
cvtdq2ps
mulb
mov
aas
enter
add
push
mov
adc
repnz
out
test
in
push
add
daa
dec
push
mov
add
sub
aas
ja
iret
dec
sbb
aam
mov
cli
mov
sub
outsb
mov
es
test
popa
mov
mov
pop
jns
fisubs
mov
mov
xchg
add
sub
adc
add
neg
mov
sub
sti
cmc
stos
stos
shlb
mov
push
iret
sub
inc
adc
fwait
mov
pop
pushf
jl
fs
imul
adc
pop
and
sbb
add
insl
push
popa
lret
pop
pop
jae
jbe
mov
aad
mov
jnp
insl
mov
sbb
jle
xorb
lret
adc
or
add
jnp
pop
xchg
pop
add
adc
mov
nop
out
mov
cmpsb
outsl
push
inc
mov
and
push
outsl
xchg
scas
xor
scas
xor
mov
aaa
sub
jnp
ret
adc
add
mov
sti
mov
adc
or
push
mov
es
add
inc
inc
imul
mov
int3
mov
int3
mov
insl
mov
je
dec
mov
bound
add
xchg
lret
lcall
je
and
leave
cmp
stos
lods
inc
shl
cwtl
stc
xor
pop
and
div
shrb
cmp
sub
cmp
jno
push
xchg
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
movsl
aam
les
adc
movlps
loope
sub
pop
inc
push
add
and
mov
push
mov
outsl
enter
add
notb
pop
lods
idivb
mov
movsb
pop
jge
ret
ret
dec
imul
mov
cmp
repz
clc
testb
or
data16
aas
push
push
js
pop
sub
aaa
movsl
movl
adc
pop
cld
inc
in
sti
ss
xchg
loope
ja
out
clc
inc
mov
lods
dec
xor
dec
ja
mov
jge
rcrb
dec
mov
cmc
sbbb
test
loope
shl
mov
xor
dec
xchg
cmp
cmp
fs
push
loopne
and
push
data16
je
sbb
sbb
mov
add
pushf
rcrb
loope
or
pop
fimuls
test
rcrl
gs
cltd
ret
push
insb
mov
pop
sbb
addl
or
mov
loope
adc
jmp
push
dec
jg
or
or
inc
push
inc
mov
stos
and
jb
xchg
cmp
sub
sub
sub
into
hlt
dec
cmp
cmc
popf
push
mov
xchg
pop
xchg
and
pop
sbb
test
rcrb
push
jae
stc
or
add
movsl
sarb
cmp
sub
sbb
adc
les
fisttpll
push
add
jb
clc
mov
enter
rorl
dec
mov
inc
in
xor
or
and
pop
jle
das
cmpsb
fdiv
orps
pushf
push
div
ss
ret
fadds
mov
loopne
mov
inc
fcomip
sahf
xchg
shrl
das
fisubl
push
fildl
inc
inc
scas
loopne
or
xchg
call
jmp
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
sub
jmp
rol
adc
movlps
mov
fnstcw
mov
add
rolb
inc
outsb
cmpsl
add
xor
leave
xchg
mov
or
inc
dec
xchg
adc
stc
into
jno
and
lahf
lahf
sti
lret
add
jnp
inc
sub
cwtl
shl
lahf
adc
iret
push
sti
xchg
ret
test
jl
dec
jns
inc
loop
movsl
inc
cld
sbb
pusha
pop
jnp
sahf
push
mov
adc
fisttpl
repnz
imul
mov
gs
pop
push
out
movntq
addb
daa
loopne
div
mov
mov
mov
test
pop
fldcw
xchg
mov
push
loop
mov
mov
pop
adc
jp
cs
out
jg
xchg
movb
or
pop
or
sahf
and
sub
test
adc
aad
sahf
addl
sbb
push
test
cmp
mov
cmp
dec
sbb
mov
inc
scas
repz
mov
cmp
dec
cmc
mov
jge
xchg
pop
mov
gs
sub
ret
repz
enter
outsl
mov
scas
or
nop
pop
mov
and
adc
sbb
inc
mov
dec
sarl
dec
jbe
sbb
mov
xchg
shl
cmp
test
and
call
es
aad
shr
dec
mov
mov
out
mov
ficomps
in
dec
je
aam
cmpsb
out
in
andb
cmc
out
or
insl
jecxz
pop
dec
testl
rcll
mov
lods
pop
pushf
xchg
xchg
pop
pop
sub
stos
dec
movsb
add
imul
js
clc
lds
jnp
mov
mov
decl
adc
inc
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
inc
cmc
scas
insb
mov
movlps
mov
push
out
mov
push
push
xchg
scas
inc
cld
nop
in
push
or
mov
xchg
adc
push
mov
push
and
in
and
inc
xchg
fmull
xchg
sbb
ljmp
lret
cwtl
insl
cmp
lahf
pop
enter
incl
push
in
popa
fcmove
in
adc
push
iret
pop
into
jo
jp
jg
bound
sbb
fcmovu
mov
ja
into
ljmp
das
or
jns
rcrb
lahf
shrl
pop
add
imul
xchg
pop
or
bound
push
in
nop
aam
fwait
rorb
andl
jle
cli
xchg
lods
pushf
sbb
or
fsubrp
dec
pop
arpl
lcall
sahf
or
or
mov
je
stos
cmc
cmpsl
mov
or
fidivl
sub
sub
call
imul
cmp
jl
pop
or
mov
jmp
in
or
dec
sub
out
int
rclb
movsw
lea
inc
or
xor
rolb
shr
mov
ffree
ret
int3
das
jne
lret
adcl
imul
and
daa
mov
aam
pcmpgtw
cmp
test
cmp
sbb
jecxz
inc
sar
jae
xchg
xchg
xor
jmp
or
mov
ljmp
jno
mov
outsb
pop
xlat
cmp
repnz
shrb
xor
add
ret
mov
ja
jo
mov
add
mov
pushl
sbb
stos
inc
pop
ds
or
fists
sub
movsb
and
dec
es
mov
je
xchg
hlt
add
adc
mov
cld
in
dec
inc
mov
mov
call
es
jbe
or
loop
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
sti
aam
insb
mov
movlps
mov
dec
bound
lcall
mov
sub
mov
popa
pusha
mov
or
push
fwait
pushf
push
in
jle
mov
sbbb
cmp
fsubs
daa
dec
xchg
lods
xorb
inc
enter
dec
pop
fcompl
insl
rclb
ljmp
cmp
jl
mov
fldt
push
xlat
pushf
push
jb
or
dec
jns
shlb
mov
inc
or
pop
inc
lds
pusha
cmp
pushf
push
sub
inc
mov
shlb
xchg
adc
mov
icebp
cmpsb
mov
mov
in
jno
adc
frstor
nop
rcrb
sbbb
mov
push
shl
mov
push
mov
ljmp
xchg
into
outsb
dec
arpl
sbb
push
xchg
sub
sub
push
mov
pop
pop
movsb
mov
cmp
sti
hlt
xlat
ss
and
dec
out
sti
aas
cmpsb
push
addb
outsl
jle
data16
pusha
jmp
pop
push
ja
js
xchg
mov
incl
enter
mov
push
mov
or
scas
jmp
adc
dec
pop
xor
cmpsb
popa
xor
popf
orl
or
add
mov
and
xchg
nop
mov
in
pop
cmp
mov
and
xor
icebp
call
cmp
stos
lea
outsb
shr
repnz
out
pushf
jp
push
lods
dec
and
dec
rcrl
decb
mov
orb
gs
imul
shlb
xlat
aaa
xchg
gs
add
fldcw
into
pop
or
int3
push
push
push
ljmp
sbbl
faddl
cmp
cmp
repnz
movsl
cmpsb
jne
ret
sbb
xchg
sbb
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
inc
mov
call
dec
cmp
mov
insb
data16
push
or
cmp
sahf
popa
mov
xor
nop
dec
mov
add
push
sub
filds
xor
mov
mov
jno
xchg
call
dec
inc
jle
jmp
mov
xor
daa
mov
adcl
idivl
mov
pop
and
sub
adc
jo
lods
and
dec
dec
nop
push
das
xlat
push
sbb
xlat
dec
ret
out
mov
mov
push
cmp
push
int
cli
imul
ja
arpl
insl
cltd
fidivrl
add
pop
shl
repz
dec
or
lea
cmp
je
and
stos
pop
inc
clc
mov
int3
test
repz
adc
cmp
in
jns
cmp
and
jns
pop
mov
xor
push
sarb
aad
das
mov
mov
cmp
adc
bound
ret
repnz
js
imul
mov
je
pop
and
fwait
out
pop
sub
aaa
push
inc
lock
repz
lcall
jg
mov
or
repnz
movsl
pop
add
or
fadds
jg
sbb
es
nop
jb
imul
cltd
xchg
daa
dec
mov
xor
add
push
aam
cmpsl
adc
jnp
mov
ja
pop
add
add
pushf
sub
inc
xor
jno
test
mov
dec
daa
in
bound
shr
subl
repnz
pop
ljmp
xor
lcall
mov
sbb
jecxz
cmp
jle
jg
or
cmc
adc
lcall
arpl
pop
xchg
mov
rcrb
stos
jns
add
xor
inc
xchg
fwait
mulb
push
cmp
rolb
in
xchg
pushl
pushw
fs
fstpt
insl
lcall
sbbl
addr16
cmpb
xchg
out
dec
push
xchg
cmc
stos
sarb
xor
inc
push
add
je
jno
mov
daa
add
inc
jge
mov
sub
aam
test
mov
push
fstl
pop
sub
dec
imul
inc
pusha
mov
pop
mov
pop
pop
xchg
pusha
dec
add
fsubs
sbb
push
insb
push
in
adc
dec
pop
frstor
lahf
test
sub
mov
jae
dec
into
add
sti
jns
fbstp
lods
add
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
mov
mov
adc
out
fstpl
cmpsb
jbe
sub
cs
bound
jo
sbb
mov
cltd
fldenv
xchg
pop
ss
inc
leave
inc
jg
sub
adc
inc
inc
pop
into
imul
mov
and
enter
or
push
adc
dec
sbb
and
test
leave
pop
inc
push
jge
xlat
icebp
addb
inc
add
addr16
cmp
ljmp
lret
loopne
lret
out
stos
sub
xor
ja
ss
test
cmp
add
xchg
mov
mov
dec
jbe
cwtl
cmp
lcall
or
and
and
add
data16
leave
or
loop
cld
jle
ja
and
jg
loop
mov
das
lcall
lahf
jecxz
pushf
stos
xchg
and
pop
repz
add
mov
rorb
push
ja
jle
mov
ss
inc
push
movsb
xchg
sub
sarb
and
xchg
mov
fnstcw
xor
test
add
sub
pop
dec
xchg
dec
sub
mov
and
fisubrs
mov
jns
cld
adc
cmp
pop
or
lock
add
add
pop
adc
pop
js
xchg
fadd
xor
mov
loop
pop
jge
int
or
dec
outsb
daa
js
in
xchg
xchg
jecxz
pop
cmpsl
mov
insl
aad
shll
push
shrb
sub
call
xchg
mov
xchg
jns
mov
sub
adc
add
scas
push
popa
jb
mov
std
mov
push
les
int
enter
pop
lahf
fistl
mov
sub
enter
mov
push
adc
dec
or
arpl
adc
cmp
push
pusha
std
jl
dec
mov
rcr
dec
out
cli
push
push
fcoms
popf
jecxz
ret
sub
sarl
cmp
xor
dec
imul
stos
repnz
fwait
lods
loope
pop
xchg
xor
xchg
aas
hlt
fdiv
push
xor
pop
adc
sub
jo
sub
cmp
aam
add
aas
pop
jbe
into
fnstenv
jo
jno
mov
lcall
scas
fimull
pop
jp
cli
pop
sbb
insb
push
mov
pop
jg
add
aas
inc
mov
jmp
std
sbb
outsb
aad
cmp
mov
pusha
jo
fsubrs
idivl
xor
and
jge
lcall
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
leave
xor
and
inc
loop
pop
mov
insl
pop
andl
pop
push
es
and
insb
ljmp
movsb
fcomps
mov
push
in
icebp
mov
stc
sub
data16
jno
sbb
mov
xlat
dec
mov
movsb
xor
popa
inc
sahf
xor
in
cmpb
negl
push
mov
cmc
hlt
or
dec
dec
jne
xchg
sbb
pop
push
movl
xor
mov
xor
and
and
imul
or
mov
adc
lret
mov
int
jle
lods
and
sub
rclb
jae
push
addr16
ret
mov
xchg
faddl
lcall
inc
cwtl
jns
shll
mov
xchg
nop
inc
mov
mov
inc
dec
xor
mov
pop
pop
pusha
test
mov
lea
pop
rcl
cmp
and
mov
mov
and
dec
lcall
cwtl
xchg
mov
shr
lods
mov
pushf
or
stos
fwait
push
push
jl
imulb
adcl
pop
jae
mov
ds
cmp
rcrb
cmpsl
jle
repz
pop
mov
les
loop
mov
push
out
std
in
mov
dec
lds
push
les
and
mov
imul
in
in
or
or
icebp
lret
imul
sbb
das
jmp
arpl
mov
scas
and
mov
in
ret
adc
push
rorb
pop
int3
ret
mov
sbb
pop
outsb
xchg
pusha
xor
add
lods
in
mov
loopne
mov
pop
or
and
pop
orb
mov
xchg
push
adc
cmp
pop
sbb
sbb
ljmp
xchg
sub
push
sbbb
pop
lret
sti
lds
xor
movsl
fstpl
inc
pop
cwtl
rcll
rol
xor
sub
mov
insb
out
jmp
jge
lods
das
rorb
mov
fstp
jecxz
inc
mov
sub
adc
dec
jecxz
mov
roll
adc
les
cmp
sub
and
inc
pop
dec
xchg
outsb
es
push
icebp
nop
in
fsubs
icebp
adc
cmp
or
sahf
ret
adc
add
add
ret
lock
jmp
addl
scas
sbb
pop
add
rcrb
adc
lahf
movlps
out
inc
jo
xchg
mov
out
addr16
jecxz
lcall
das
adc
je
scas
jbe
lahf
orl
ja
imul
and
lret
push
aad
push
jmp
pop
add
std
jmp
popa
inc
push
xor
cmp
rep
or
rorb
xor
jo
and
ss
rcll
lock
adcl
mov
cld
add
pop
das
jmp
dec
or
adc
and
sbb
jne
cmp
and
push
mov
addr16
xchg
shll
orb
push
jge
flds
add
js
stos
adc
and
pop
push
xor
outsb
sub
dec
lret
pop
test
movsl
lods
hlt
inc
aam
sub
jnp
popf
les
add
mov
shlb
xor
cmc
dec
mov
jle
sbb
fcoms
xchg
dec
adcl
cmpsl
cli
mov
inc
xor
jbe
icebp
jnp
xchg
add
stos
xchg
enter
mov
mov
xor
mov
lods
fldcw
push
jp
dec
xor
in
inc
test
xchg
push
dec
mov
mov
addb
imul
jmp
outsl
jmp
cltd
jecxz
ret
int
fidivrs
fmuls
inc
mov
inc
out
movsl
cmp
movsb
iret
out
pop
add
cmp
and
movsb
dec
aas
xchg
push
and
mov
push
cmp
call
lods
fs
ret
jmp
jb
sbb
daa
in
test
push
jmp
mov
mov
pop
sbb
push
dec
subl
outsb
cmp
orb
sbb
in
mov
mov
mov
adc
xlat
imull
es
xchg
cmp
push
sahf
push
inc
pop
popf
xor
and
mov
pop
sbb
popa
cmp
push
sahf
adc
clc
sbb
out
mov
in
lahf
js
call
inc
adc
push
mov
repnz
cmpsl
pop
push
in
push
fsts
sbb
test
rolb
lret
xchg
lds
gs
ds
insl
aad
repnz
leave
lods
dec
sbb
test
rolb
stc
fdivrs
jmp
hlt
mov
xor
mov
nop
aaa
pop
xchg
mov
mov
dec
es
out
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
insb
in
adc
lahf
movlps
fisubrl
fsts
sbb
lds
push
out
je
lret
or
lcall
hlt
and
pop
and
testb
inc
cltd
sub
aam
int3
pop
sahf
jbe
ja
popf
sub
aad
pushf
adc
lahf
xchg
cmpsb
es
add
xchg
inc
std
lcall
mov
in
roll
dec
jb
or
test
adc
orl
push
cmpsb
push
jbe
sahf
bound
cs
mov
push
cmc
das
dec
add
jo
mov
inc
mov
ja
push
das
fisttps
out
nop
push
std
rclb
rol
mov
andb
jns
xchg
mov
jnp
mov
add
xlat
aad
push
jo
mov
enter
addl
mov
out
mov
fsubrs
push
adc
xchg
imul
in
addr16
cmp
mov
pop
lock
fldenv
fimull
jae
or
pusha
push
adc
pop
imul
and
or
mov
aad
adc
mov
out
loope
loopne
in
mov
loope
xor
std
jl
ss
jmp
mov
xchg
mov
stc
idivl
cmp
sub
lds
cli
mov
and
xor
scas
jnp
jbe
ljmp
inc
into
sub
insb
xlat
in
mov
cmc
mov
cmpl
in
scas
jns
push
stc
mov
push
cmpsl
lods
movsl
test
ss
das
mov
and
stc
hlt
and
subl
repnz
or
xor
cmp
ficoms
mov
aaa
pop
pushl
arpl
mov
mov
aad
sti
je
jae
out
pop
mov
mov
repnz
jbe
xchg
cmp
jae
shrl
mov
not
or
sub
pusha
loop
fnstenv
cmp
pop
paddq
add
inc
jb
xchg
xor
mov
xchg
sub
add
add
lret
mov
cmc
iret
xchg
inc
mov
push
inc
stc
fists
int3
xchg
cmc
dec
dec
lock
adc
arpl
in
adc
push
popf
dec
cmpsl
and
clc
sti
mov
pusha
dec
mov
out
lea
lods
adc
cmp
xchg
lock
lods
and
xchg
and
mov
mov
push
mov
imul
push
sbb
shlb
mov
fdivrs
sub
cltd
pop
push
pop
jle
fsts
incl
repnz
test
inc
or
xchg
mov
stos
enter
inc
rclb
add
add
pop
add
rcll
push
bound
imul
outsl
sahf
adc
lahf
movlps
mov
loope
js
fisubs
clc
fsub
int
dec
repnz
fsubrs
dec
and
sbb
jmp
add
outsb
cmp
push
mov
les
add
xor
fidivrl
fidivrs
addr16
xor
aam
mov
xchg
mov
jp
into
cmp
stc
loopne
xchg
lods
xchg
adc
xchg
jb
cmp
lret
lcall
sbb
lock
xchg
xor
rcll
mov
inc
or
inc
imul
mov
pop
mov
mov
xlat
addr16
jno
mov
out
mov
pop
scas
add
push
inc
sbb
sbb
loopne
lahf
xorl
test
adc
push
ja
push
pop
mov
push
or
sbb
rorl
sti
mov
jle
sub
cmpsl
push
icebp
mov
or
jecxz
xchg
ret
movsb
jge
and
cs
or
xchg
jbe
cs
xchg
cli
push
adc
ret
pop
jecxz
insl
jno
scas
mov
hlt
add
mov
sbb
or
xor
inc
push
icebp
in
js
jge
mov
cmp
loop
mov
jl
push
pop
mov
in
sub
and
inc
pop
xor
dec
add
and
xor
ret
inc
es
mov
pop
mov
cwtl
mov
stos
cmp
int3
mov
push
mov
ret
add
fimuls
mov
outsl
and
sar
test
sbb
int3
mov
push
in
imul
test
pop
mov
lcall
dec
jne
out
xor
sbb
add
mov
imul
es
lea
jbe
in
push
bound
arpl
dec
es
cltd
pop
stos
xor
push
cwtl
je
mov
rclb
pop
sbb
fs
pop
ja
arpl
push
mov
gs
cmovg
xchg
mov
stos
and
sub
adc
cmp
int
je,pt
fistl
mov
sub
rclb
push
cld
loopw
inc
int
push
jns
es
pushf
je
adc
mov
outsb
dec
mov
sbb
icebp
icebp
cmp
cmp
jmp
pop
or
xchg
push
adc
aam
mov
fildl
add
sbb
mov
int3
sub
cli
xor
jb
inc
fwait
jb
pusha
inc
xor
fsubl
adc
push
mov
add
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
mov
cld
xchg
adc
lahf
movlps
daa
add
in
push
pop
dec
inc
test
ljmp
add
popf
add
add
ror
inc
push
aad
daa
jp
mov
sbb
xor
jge
shrb
adc
push
mov
mov
mov
or
mul
test
inc
pop
sub
imul
dec
testb
xchg
sbb
cld
cltd
mov
test
imul
in
cmpsl
lret
pop
lods
mov
sub
in
dec
test
push
bound
inc
pop
outsb
push
mov
dec
xor
mov
fists
pop
jle
push
imul
clts
push
xor
loope
pop
cmp
fldenv
cmp
push
addr16
lods
pop
cs
mov
and
adc
sti
ret
cltd
sub
roll
aad
sbb
push
push
fmull
add
jno
adc
dec
cmp
ljmp
test
jnp
jno
cmpsb
cli
lods
cmpsb
mov
call
mov
popa
and
and
daa
jae
movsl
lods
inc
mov
fadds
popa
jg
arpl
sub
stos
into
pop
test
sub
stos
adc
xchg
mov
subb
fidivrs
andb
and
scas
mov
push
in
adcl
sbb
scas
jnp
mov
cwtl
shll
fisubrl
lret
ficomps
out
push
jo
subl
mov
push
sbb
xor
popf
pop
sub
dec
cmp
cmp
ja
cmc
push
push
divb
push
inc
rcll
icebp
cmp
sbb
outsl
aad
sub
mov
jb
out
push
fs
push
daa
cmp
xor
bound
xor
clc
fs
fstl
repnz
mov
outsb
pop
lods
sub
pop
clc
mov
jnp
lock
mov
dec
push
loope
pop
xchg
inc
mov
iret
sub
clc
xchg
or
cwtl
pop
inc
shlb
les
repnz
ficoms
test
mov
lods
shl
mov
jl
fxch
push
insl
dec
ljmp
push
sub
repz
push
mov
push
andb
cli
mov
dec
repz
fisubrl
cmp
lods
jne
dec
inc
shl
repnz
mov
mov
in
dec
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
dec
punpckhdq
movlps
cmp
sbb
sub
les
sbb
jbe
loope
mov
mov
out
pusha
sbb
mov
push
es
or
adcb
cld
push
or
mov
and
jns
push
push
dec
add
popa
dec
push
jae
out
pushf
roll
gs
mov
mov
sbb
and
add
testl
ljmp
movsl
inc
aaa
and
mov
cmp
mov
insl
jle
mov
in
out
fwait
pop
push
jg
hlt
mov
adc
cwtl
xchg
or
inc
sub
ss
cmp
outsl
inc
aad
pop
mov
es
roll
sub
xchg
les
ret
out
iret
popf
shl
test
dec
jge
or
or
repnz
mov
push
pusha
and
and
ljmp
repnz
lret
mov
ret
popf
faddp
enter
or
movsb
btl
mov
sbb
mov
mov
push
hlt
sub
das
ret
jmp
fidivs
ds
add
mov
inc
mov
lock
dec
add
out
int
xchg
pop
xor
in
lods
dec
push
ja
scas
push
lahf
sbb
outsb
mov
pop
xchg
push
movsl
mov
in
sub
int3
xor
movsb
cmp
adc
adc
test
and
hlt
mov
bound
shl
insb
mov
inc
pop
sub
ljmp
sub
pusha
and
sub
mov
pop
test
and
pop
hlt
lods
fcmovbe
in
dec
xchg
xchg
out
mov
jp
xchg
filds
enter
stos
nop
test
mov
fs
jnp
adc
mov
jnp
mov
jb
popf
cmp
fbstp
mov
stos
adc
fadds
jmp
and
jecxz
xchg
xor
into
sbb
xchg
dec
pushf
rorl
mov
inc
outsl
cld
pop
inc
in
decl
pop
imul
lods
pop
cmpsb
stos
or
jne
mov
and
inc
jmp
jp
mov
inc
call
push
add
mov
lock
mov
clc
dec
xchg
aaa
mulb
fisubrl
cltd
add
and
mov
adc
xchg
jns
dec
nop
adc
and
mov
aad
into
dec
idivl
movsl
mov
rcrl
pop
test
test
mov
pop
sbb
cmpsb
sub
cli
imul
ret
outsl
inc
add
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
rolb
pop
mov
pop
movlps
call
movsl
clc
imul
mov
pop
jae
ljmp
jb
pusha
xchg
fcoml
hlt
dec
mov
mov
addr16
cmp
mov
add
gs
mov
stos
ja
jmp
and
push
inc
lahf
mov
mov
sbb
mov
mov
sti
aas
pop
sub
insb
insl
mov
xor
lods
icebp
push
jbe
bound
inc
ja
fs
push
mov
js
fs
scas
cmp
fwait
ret
inc
and
jl
cmpsl
loop
inc
mov
add
cwtl
iret
inc
lahf
stos
rcll
push
fmull
sub
lea
dec
mov
stc
nop
sahf
jg
cvttps2pi
push
mov
cltd
je
sub
jo
out
fs
xchg
std
dec
mov
lahf
xchg
mov
fstp
mov
sbbl
sbb
jge
loop
inc
popa
pusha
dec
fldl
sti
bound
test
jl
lock
and
outsb
sbb
mov
inc
sub
pop
shrb
push
rol
dec
cld
sbb
mov
pop
rcll
inc
loop
push
xlat
xor
mov
das
popa
sub
inc
adc
pusha
pop
or
lea
jno
out
sub
add
js
xsha1
cmpsb
dec
push
cltd
jnp
loopne
test
sub
jns
sub
imull
xor
dec
out
mov
les
call
xchg
push
mov
mov
iret
mov
das
inc
jg
iret
jmp
cmp
aad
fidivs
push
das
sti
rcrl
std
or
and
insl
je
aaa
movl
sub
mov
jo
cmp
adc
push
xor
mov
out
mov
in
int
insl
insb
incb
jecxz
inc
push
xor
mov
lret
fcmovu
das
mov
sbb
pop
xor
add
add
dec
imul
out
out
jmp
inc
xchg
cli
les
out
mov
mov
lds
gs
fnstenv
leave
mov
mov
rcrl
dec
cmpb
xchg
inc
lods
mov
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
call
adc
pop
movlps
mov
in
ljmp
stc
xlat
into
mov
pop
jno
popf
inc
in
add
inc
dec
cmpsb
test
xor
cwtl
inc
jle
psrlq
add
je
mov
test
jge
scas
inc
inc
xor
cmc
cmp
aad
inc
jge
push
test
inc
outsb
sbb
or
pop
fsub
lods
push
pop
stos
push
mov
dec
push
mov
outsl
pop
sub
imul
je
sub
ret
pop
fwait
and
addr16
dec
jo
adc
addr16
push
mov
test
mov
icebp
in
fldl
inc
mov
out
fs
pop
mov
xchg
sub
jae
fucom
mov
xor
mov
in
xorl
pop
ret
and
mov
xor
call
movsb
out
insl
cli
fiaddl
push
jno
xor
imul
mov
imul
sbb
adc
mov
mov
aad
push
ds
mov
in
cmp
add
lods
sbb
cmp
inc
mov
add
or
sub
das
xor
cmp
push
gs
in
mov
fwait
iret
notb
push
filds
xchg
add
ror
dec
xchg
outsb
loopne
inc
adc
repz
push
xchg
xlat
and
insb
xchg
push
les
or
xchg
out
sub
adc
or
pop
mov
jmp
repz
and
sub
fdivrl
jle
and
jg
psadbw
mov
inc
das
addr16
aam
repz
inc
push
fistpll
inc
shll
in
stos
aas
adc
and
adc
or
insl
xchg
in
pop
sub
sbb
fucomip
mov
pop
popa
cmc
gs
cmp
adc
xchg
ja
jb
faddl
pop
sub
pop
mov
insb
int3
test
jb
cmp
pop
mov
or
mov
out
mov
out
push
jmp
mov
pop
and
adc
int
aam
std
test
pop
popa
mov
mov
jmp
fdivl
fnstcw
sbb
push
lret
lahf
adcb
pop
movlps
ja
jo
mov
mov
adc
rorl
lea
mov
mov
and
jecxz
lock
and
js
sahf
pop
imul
or
mov
sub
outsb
jle
pop
sbb
outsl
lea
cwtl
and
lahf
dec
inc
pop
sub
dec
cmp
push
adc
dec
cld
ret
xor
int3
jb
cmp
lock
jecxz
arpl
mov
mov
xchg
xchg
mov
sbb
adc
mov
jg
inc
jbe
add
or
and
repnz
jg
addr16
sub
sub
push
mov
or
xor
sub
xchg
in
push
pop
add
sbbb
pop
dec
into
mov
sub
push
dec
ja
in
inc
xor
fbld
jg
hlt
mov
mov
stc
popf
lret
sahf
cmp
daa
testb
aas
sar
sub
outsl
push
push
repz
icebp
lock
add
pop
mov
inc
jae
lret
sub
mov
xchg
jmp
xchg
mov
add
sbb
inc
push
sbb
cmpsl
js
gs
jbe
jp
test
dec
clc
lret
jbe
fs
rcrb
insb
or
sbb
add
and
iret
sub
xchg
xor
shlb
push
add
pop
jl
negl
cmc
sub
sbb
loope
jecxz
cld
sub
je
xchg
adcb
mov
mov
or
push
add
jo
shll
test
movsb
lcall
push
mov
arpl
in
loope
jmp
adc
mov
jg
imul
ds
cld
outsb
sub
and
add
inc
pop
xchg
rorb
cmp
loop
int3
jb
cmp
inc
pextrw
stos
and
aam
push
mov
ret
push
mov
leave
pop
xchg
stos
sbb
sub
leave
lods
xchg
and
les
stc
ret
cmp
push
or
xchg
pop
fcmovu
movsb
andl
xor
push
shlb
jbe
xchg
mov
mov
add
mov
hlt
or
mov
std
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
pop
sahf
lods
ljmp
adc
or
xor
and
sbb
mov
into
loope
lret
xchg
fwait
mov
dec
js
mov
loopne
pop
mov
xchg
xor
sub
int3
or
loope
enter
jns
inc
loopne
aad
test
jo
xchg
lcall
jbe
pop
in
mov
test
adc
out
mov
sub
fs
sub
jle
ljmp
xor
mov
pop
movsl
mov
aaa
sub
push
adc
je
dec
xor
add
cmp
aam
dec
ja
sub
inc
iret
adc
and
lods
test
repnz
mov
and
insb
and
dec
lret
mov
cli
inc
or
add
lahf
int3
arpl
pushf
jno
int3
mov
sarl
jne
jbe
push
mov
xchg
xchg
push
inc
mov
leave
xchg
test
sbb
out
bound
popa
ja
test
lock
movsb
loop
aas
mov
popf
xchg
pop
mov
add
inc
push
push
pop
sbb
out
dec
movsl
xchg
scas
repnz
jge
mov
mov
ljmp
cmpl
and
jnp
and
mov
pop
mov
mov
jg
xor
in
mov
dec
adc
movsb
scas
ret
dec
arpl
ss
mov
test
xchg
mov
pop
jge
cmpsl
rclb
packuswb
add
movsb
cmp
hlt
cmp
adc
jle
cmp
aam
jno
dec
add
outsl
pushf
fists
popa
cld
leave
fmuls
loop
push
jge,pt
faddp
ss
jp
arpl
into
inc
das
fwait
xlat
sbb
mov
out
loop
sbbl
les
sbb
jns
sbb
cli
cmp
icebp
jg
mov
lods
mov
xchg
or
push
mov
inc
xor
aam
jle
loop
shlb
ret
arpl
and
les
push
or
add
adc
ret
pop
add
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
pop
sbb
sub
adc
ficoms
adc
pop
or
call
pop
jne
inc
leave
sbbb
xor
mov
xor
dec
aaa
rcrb
jle
sahf
mov
sub
mov
inc
int3
subb
ficoms
mov
push
sbb
xor
pop
mov
or
inc
scas
jns
sub
fistpll
es
fsts
cmp
add
and
je
sbbl
scas
sbb
sbb
iret
jnp
sbb
test
stc
adc
mov
push
cmp
push
add
push
xchg
fadd
das
je
push
lcall
inc
xchg
mov
mov
add
jge
dec
sahf
xor
hlt
lcall
jbe
in
inc
mov
pop
inc
stos
add
loop
xor
xorl
mov
mov
mov
outsb
mov
xor
dec
sti
push
aad
dec
adc
mov
push
xchg
jno
lods
or
std
arpl
push
je
mov
inc
xor
and
gs
enter
lret
inc
mov
test
fisubrs
dec
pop
cltd
inc
mov
push
mov
movsb
xchg
inc
adc
or
sub
lcall
xchg
orl
push
in
pop
sbb
daa
aam
nop
cmp
add
test
adc
scas
or
iret
test
jnp
fdivs
and
sbb
repz
rol
jle
xor
cwtl
shrb
test
pushf
adc
dec
insl
jae
mov
sbb
adc
push
or
stos
push
lcall
daa
mov
insb
inc
sahf
lods
xchg
dec
aad
push
test
inc
nop
sub
mov
inc
jp
adc
cmp
jmp
aam
outsl
or
or
adc
mov
and
or
mov
mov
mov
and
cwtl
and
popl
mov
aam
sbb
mov
icebp
fnstsw
bnd
repz
nop
ljmp
test
loope
ficoml
sbb
add
cli
in
and
mov
sbb
sub
pop
fisttpll
mov
lret
hlt
fs
push
call
fistpll
shll
aad
sbb
pop
pop
sbb
mov
popf
lods
xchg
rcrl
cmpsb
and
call
xchg
and
pop
insl
rclb
jmp
mov
add
fsubr
aas
mov
mov
or
lret
pop
jge
xor
cs
test
enter
push
xchg
cwtl
ret
dec
xchg
pop
jae
dec
inc
jns
dec
sbb
xor
movsl
gs
jbe
or
iret
repz
pusha
push
push
mov
cwtl
mov
pop
stos
cli
dec
lea
inc
lcall
push
and
hlt
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
je
fidivrl
ficoms
adc
push
jb
ljmp
add
push
mov
pushf
movsl
in
xlat
pusha
and
pop
dec
loopne
mov
shll
shl
add
imul
xchg
mov
cmp
std
pop
ja
pop
and
and
add
jbe
test
xchg
cli
add
outsl
pop
mov
xor
nop
nop
loope
stos
rclb
lock
xor
fdiv
push
xchg
mov
and
popf
mov
es
test
lods
stc
scas
stos
mov
rcl
outsb
dec
cld
cmpb
mov
inc
fistpl
push
sub
jmp
aad
test
rcrl
shrl
pop
jne
or
mov
movb
fldlg2
loopne
sbb
test
bound
or
stc
movsb
daa
pushl
push
movq
test
icebp
push
cmp
sbb
pop
repnz
fsubl
and
outsb
arpl
icebp
test
push
jle
push
repz
cli
cmp
push
aad
dec
inc
adc
jne
cmp
bound
andl
shrl
in
cmpsb
fs
jb
arpl
out
aas
rorl
hlt
pushf
ss
pop
dec
pop
xor
mov
push
mov
push
jl
push
test
mov
mov
out
cmpsl
mov
or
addl
sarl
mov
popf
xchg
inc
enter
mov
pop
push
sbb
xchg
mov
fs
idiv
add
popa
jb
fs
scas
sub
inc
push
popf
inc
mov
jg
sbb
rcrb
cmpsb
sbb
ds
movsl
ss
leave
pop
add
xor
push
xchg
je
into
lahf
push
dec
xor
inc
add
stos
mov
sbb
jnp
lcall
or
jo
roll
sbb
adc
fwait
mov
add
xchg
mov
jae
mov
adc
jmp
and
xchg
ss
les
ret
lret
jg
out
shlb
xor
and
or
jno
jbe
cmp
ss
mov
inc
jnp
rolb
sar
fdivl
movsl
pop
jle
sub
call
dec
dec
cmc
out
cmpsb
cld
mov
xchg
js
repnz
sbb
sub
mov
jno
cmpsb
add
sbb
jmp
sbb
mov
jbe
xchg
mov
push
out
jge
push
dec
mov
inc
jl
pop
loop
ss
in
adc
sahf
sbb
add
idivl
xchg
and
pushf
int
jmp
jg
inc
xor
mov
and
hlt
xlat
xlat
int3
lahf
mov
mov
sarl
enter
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
stos
mov
adc
ficoms
adc
lock
mov
sub
or
int3
movl
inc
scas
popa
xchg
mov
add
dec
mov
mov
test
ja
mov
ret
push
in
mov
les
cmp
jg
jnp
pop
inc
mov
mov
cmovp
xchg
in
pop
mov
mov
and
xlat
sbb
iret
pop
ja
cmpl
fldcw
xchg
add
enter
in
insb
pop
das
pop
xor
add
cmp
fs
mov
je
mov
ja
inc
push
dec
push
pop
std
mov
icebp
add
ficoml
mov
shlb
add
xor
das
adc
jl
inc
sub
or
mull
jb
jp
push
adc
mov
insl
fmuls
clc
cmp
pop
mov
clc
daa
scas
nop
adc
imul
inc
out
push
lret
test
adc
jo
xor
insl
int
shll
xchg
aas
jecxz
cli
pop
cmp
scas
jo
sub
jne
test
mov
dec
pushf
push
outsl
les
cmp
xchg
mov
xlat
movsb
mov
out
add
dec
ja
inc
inc
pop
add
test
xchg
scas
cld
jae
jl
pop
sbb
cli
push
mov
push
aad
in
adc
mov
mov
rorb
ja
cmp
adcl
xchg
sbb
test
mov
inc
jg
mov
sbbb
jne
mov
std
mov
rolb
test
data16
push
pushf
jle
in
fimull
loop
cmp
inc
clc
or
data16
jecxz
sub
lret
cmc
xchg
xchg
ret
and
push
add
out
call
cmp
push
add
push
push
jbe
sbb
jle
add
into
rcl
xchg
cmp
cmp
pop
adc
leave
nop
xorl
adc
or
aaa
and
xchg
ss
jbe
cmpsb
push
jle
jnp
ds
push
xchg
scas
and
shrb
insl
dec
push
mov
jp
mov
fildl
loopne
test
repnz
add
in
push
dec
sbb
xor
or
xchg
jae
sub
push
sub
scas
rol
push
sub
push
lret
mov
dec
pop
mov
push
loopne
lea
stos
or
jnp
push
dec
int3
into
insb
add
test
jmp
clc
ss
fsubrl
ret
pop
fistl
push
test
jnp
xor
aam
adc
scas
mov
pop
into
pop
pop
dec
pop
jecxz
aad
mov
sub
pop
loopne
xchg
pop
mov
pushf
mov
clc
lea
cmp
jae
out
or
or
sbb
mov
leave
les
jns
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
cmp
adc
ficoms
adc
shrb
ret
inc
out
stos
pusha
push
jecxz
mov
dec
scas
inc
insb
push
push
push
mov
and
push
rol
jne
sbb
push
push
add
pop
pop
push
test
out
mov
push
sbb
inc
in
jl
fldcw
sti
repnz
pop
repnz
fs
fistpll
xchg
xchg
imul
mov
clc
les
test
jmp
xchg
test
cmp
data16
scas
js
jb
lods
pushl
adc
rol
sbb
fbld
jmp
push
cmpsl
sbb
jmp
cmp
fimull
ret
and
adc
adc
sub
aaa
jb
shll
out
mov
aas
sbb
in
adc
aaa
sub
xchg
stc
adc
iret
pop
outsb
decb
push
lock
loop
sti
push
and
push
mov
in
fsubl
mov
loope
insl
scas
sbb
jo
jle
mov
shlb
mov
out
mov
cmp
out
pop
push
outsl
fsts
cld
mov
dec
dec
in
das
mov
inc
addr16
into
sbb
pop
cmp
jnp
insb
ret
mov
insb
jl
fwait
mov
push
mov
xor
cmp
jg
adc
mov
mov
dec
sbb
adc
push
test
jnp
lret
aam
xlat
push
rcl
test
jno
jmp
mov
sbb
iret
ret
cmp
pop
mov
test
aas
pop
std
test
enter
or
addr16
jo
pop
xchg
inc
cmp
sbb
pop
push
aaa
in
jne
lds
or
sti
mov
inc
pop
push
xchg
cmp
aam
xchg
popa
pop
and
xor
mov
cwtl
mov
push
xchg
jecxz
pop
sbb
mulb
ss
cwtl
out
cld
sarb
pop
stos
dec
aas
cmc
add
and
inc
mov
push
mov
inc
fs
mov
mov
and
pushw
jmp
inc
enter
mov
mov
out
dec
xchg
dec
scas
mov
je
andl
leave
add
xor
xor
loopne
mov
nop
in
xchg
in
test
dec
inc
in
pop
es
into
out
clc
jno
std
jnp
xchg
or
adc
inc
lods
cmp
mov
jbe
mov
dec
lds
daa
lods
sbb
mov
adcl
adc
scas
pop
jmp
lcall
jns
pop
xor
ficompl
jno
arpl
xchg
adc
inc
mov
call
pop
jg
sbb
ds
lea
cltd
and
mov
cmp
pop
push
lock
mov
sbb
cmp
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
outsl
pop
fdivrl
ficoms
adc
addr16
xor
dec
aas
shr
xchg
jbe
lret
push
insl
jecxz
jmp
pusha
pop
shlb
test
cmp
ljmp
sbb
orl
push
mov
mov
notb
int3
loopne
jae
inc
je
add
fcmove
stos
aaa
out
mov
in
xchg
mov
cli
pop
xor
push
mov
rorb
adc
cld
add
jmp
xor
or
mov
and
mov
lea
repz
xor
pop
mov
call
jne,pn
int
push
sbb
adc
jo
xlat
push
testb
mov
jmp
jae
pop
out
cmp
mov
or
mov
sub
xchg
int
xchg
cmp
setne
scas
mov
enter
or
inc
scas
lods
idiv
push
sbb
stc
or
adc
push
in
fdiv
lret
push
adc
test
sar
push
stos
xor
cmpsb
adc
in
push
js
push
push
decl
inc
pop
sbb
aas
mov
les
sbb
pop
sbb
jno
jp
fnsave
insb
scas
pusha
jmp
aaa
xchg
mov
or
fbld
adc
or
jle
out
or
les
lahf
sbb
pop
add
cmpsl
cvtps2pi
xor
mov
mov
pop
in
mov
dec
stos
xlat
js
xchg
mov
dec
rcr
pop
dec
push
mov
push
mov
push
loope
adc
out
jle
es
insl
mov
cmp
push
ret
adcb
fsubl
cmp
inc
push
dec
jae
mov
jl
lock
inc
icebp
dec
mov
je
int
lea
cltd
adc
add
lret
loopne
push
or
mov
mov
xchg
lea
filds
mov
pop
or
inc
fiadds
sbb
cmp
dec
xor
push
cmp
cmp
inc
popa
sub
ficomps
xor
adcb
lcall
mov
mov
pushf
cli
mov
jg
xor
xchg
sbb
std
loop
mov
jo
in
stc
sub
mov
shlb
mov
in
iret
in
mov
sub
sbb
ret
int3
cmpb
jge
push
or
pusha
jmp
scas
fsubrs
in
repnz
mov
aas
add
out
push
and
ds
subps
push
inc
arpl
gs
dec
fcompl
mov
sbb
sub
sbb
push
mov
aas
ja
testl
add
adc
popf
cmp
and
leave
cs
or
adc
scas
arpl
sub
cltd
sub
orl
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
cmc
stos
or
movlps
push
fidivl
sbb
and
aas
sbb
mov
mov
arpl
aad
cmc
sub
xchg
jle
lahf
dec
pop
xor
jb
jbe
pop
or
and
sub
rolb
call
pop
sbb
pop
sub
lahf
mov
jle
dec
inc
or
mov
or
popf
push
ja
aam
jecxz
stos
sbb
add
sti
inc
dec
mov
push
and
jp
cmc
or
icebp
adc
sarb
icebp
xchg
inc
sbb
rolb
jns
dec
jmp
pop
mov
or
or
pop
out
jo
inc
pop
cmp
inc
mov
and
xor
xor
sbb
out
mov
pop
ss
mov
jle
call
arpl
or
xchg
sti
add
xlat
xchg
and
and
divb
scas
push
xor
insl
push
or
repnz
mov
jmp
xchg
and
jmp
mov
sub
fisubrl
dec
aad
push
in
push
lods
push
inc
fsubrl
daa
push
sub
test
test
sub
sahf
roll
or
es
pop
rolb
pop
adc
lcall
je
mov
cmp
ffree
push
iret
fistps
outsb
cmpl
sahf
cwtl
cmp
scas
xor
imul
adc
push
fadd
inc
dec
arpl
jb
push
pusha
or
out
lea
push
pushf
mov
rcrb
adc
and
imul
xor
adc
insb
dec
jno
loope
dec
lock
mov
popa
sbb
loopne
inc
push
adc
adc
mov
and
aaa
hlt
fsubr
push
dec
inc
and
fsts
bound
test
loop
and
out
fldenv
xor
adc
mov
outsb
and
icebp
mov
imul
imul
repnz
xor
repnz
jnp
mov
fwait
push
mov
cmpsl
inc
call
dec
das
mov
insl
stos
dec
jmp
outsl
jnp
mov
fwait
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
fdivrs
sub
adc
movlps
out
mov
ja
xchg
bt
ss
pop
dec
push
xchg
lret
jmp
aad
es
mov
pop
push
push
pop
lahf
data16
mov
bound
jle
or
addb
add
cmc
test
mov
stos
cmp
test
cmp
xor
lods
cmp
cmpsl
cmpsl
jne
jo
aam
push
push
inc
or
or
shlb
inc
out
dec
jne
inc
adc
ror
inc
sub
mov
jmp
add
mov
in
repnz
lods
jle
cmp
popa
and
mov
movsl
push
jle
pop
aas
sti
mov
jno
rolb
cli
add
add
or
stc
ds
insb
sub
les
mov
pop
mov
jp
call
push
sarl
daa
inc
push
cmc
cmpsl
repnz
rorb
lret
adc
cld
js
jg
cmpsl
out
jb,pn
adc
sub
out
ret
xchg
shlb
and
xchg
lods
add
sbb
je
ljmp
adc
inc
and
testb
inc
or
xor
pushf
icebp
mov
jns
cs
repz
xchg
loopne
dec
insl
popf
cltd
push
push
fnstsw
sbb
mov
repz
cmp
lcall
fistpll
in
movsl
lock
lcall
fisttpll
sbbl
mov
or
sbb
or
mov
mov
je
es
sbb
repnz
mov
jle
notb
in
rcrb
mov
jo
mov
out
mov
cwtl
cld
stos
inc
into
jae
data16
inc
adc
xor
pop
frstor
push
ja
ret
add
repz
jno
mov
outsl
cmpb
mov
jg
jmp
adc
adc
inc
testl
testl
fisubrl
add
fidivrs
dec
dec
jmp
sub
arpl
mov
push
inc
bnd
iret
adc
sbb
jb
dec
jno
shll
jns
push
loop
add
or
inc
in
push
cmp
aad
adc
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
aam
cmp
inc
push
adc
push
adc
adc
mov
xor
inc
dec
xchg
jp
nop
pop
mov
jns
dec
movsb
or
or
call
call
cmp
rcrl
pop
lret
mov
cmpsb
sbb
repz
push
sbb
lock
push
jno
stos
jl
jp
pop
rorl
test
and
jne
jg
pusha
jmp
push
jae
xor
loop
shlb
rorl
push
inc
or
jmp
cltd
scas
int3
jge
ret
int3
jb
pop
sub
sub
push
mov
push
xlat
add
push
adc
mov
fstps
das
jbe
shr
jl
movsb
xchg
inc
sbb
sar
sarw
es
std
jnp
pop
cmp
movsb
mov
mov
mov
dec
ret
dec
lods
hlt
adc
insb
in
fs
lods
cmpsb
push
and
cmpsb
repz
aad
lahf
inc
or
outsl
jge
sub
imul
sahf
js
xchg
shrb
loop
pop
fstl
pop
inc
cmpsb
mov
ja
pop
data16
nop
test
cmp
add
stos
shlb
leave
std
pop
and
adc
aaa
pop
mov
pop
lods
and
push
sub
cmp
test
jg
lret
test
loop
ss
inc
in
pop
sbb
xchg
testl
pop
jle
inc
out
and
jns
insb
enter
shll
cld
push
push
mov
movsb
mov
mov
sbb
ret
adcb
adc
js
or
mov
mov
aad
pop
call
sbb
jns
sbb
pusha
jp
cwtl
sub
mov
outsb
mov
push
and
mov
leave
pushf
mov
addb
cmp
sub
add
mov
mov
adc
xchg
fnsave
lods
mov
and
pop
popf
jns
fisttpl
in
mov
sub
push
or
lods
push
fistl
pop
dec
das
mov
out
loop
pop
sahf
push
lock
mov
mov
mov
sahf
cld
pop
imul
mov
sti
loopne
lcall
into
mov
les
push
mov
iret
fdivrl
lea
loop
cmp
dec
sti
rorb
in
xor
add
cltd
mov
mov
jb
addr16
popa
lahf
dec
push
cmp
into
test
hlt
arpl
outsb
movl
dec
jle
xchg
pop
movsl
inc
xor
das
or
cmp
rorb
and
sub
stc
rol
in
in
cli
dec
arpl
lods
stos
andl
sbb
dec
ret
scas
ret
push
pop
dec
aad
push
nop
shrl
test
fwait
mov
lods
out
pop
or
inc
sbb
imul
sub
mov
out
rorb
outsl
iret
cmc
sub
push
jmp
mov
out
mov
sub
mov
xor
ljmp
int
jmp
popa
pop
fsts
sar
arpl
test
push
hlt
inc
fld
pop
fsubrs
mov
pop
jle
adc
pop
sbb
insb
cltd
cli
sbb
and
pop
xchg
cmc
add
add
or
jle
add
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
ret
push
push
dec
adc
push
adc
adc
pushf
and
mov
push
sbbb
lds
dec
fdivp
add
mov
xchg
iret
jmp
mov
fiadds
pop
mov
test
mov
cmpsl
add
addl
ds
adc
icebp
lcall
xchg
xchg
xchg
cmp
xlat
jecxz
sbb
enter
andl
out
outsb
mov
mov
jecxz
mov
ss
jns
or
stos
xchg
shrl
imul
cmovns
xchg
push
jle
cli
das
int3
test
jmp
mov
jae
arpl
pop
jle
adc
xor
stos
jmp
cmp
cmp
sub
dec
pop
xor
adc
test
add
into
arpl
mov
pop
rcll
add
jcxz
mov
pop
add
lods
pop
xlat
mov
clc
mov
in
jae
lds
lret
clc
xchg
out
jae
popf
sbb
imul
popa
cli
lea
jg
push
test
push
adc
mov
pop
orb
lret
test
in
jecxz
mov
dec
dec
je
fxam
pop
fnstenv
push
lds
mov
ss
add
pop
mov
pop
lret
pop
mov
mov
fiadds
add
push
push
std
jge
jle
or
sbb
pmaddwd
scas
cld
icebp
cmp
clc
mov
int3
jne
inc
sbb
aaa
hlt
add
inc
jbe
popf
leave
aaa
ffreep
es
stos
or
mov
xchg
stos
mov
and
enter
push
cmpsl
xchg
cmpsb
icebp
sub
dec
inc
push
outsl
or
jmp
add
loopne
rcl
sbb
mov
repz
stc
int
push
lret
popa
call
mulb
fisubrs
jbe
cmp
inc
push
sub
sbb
push
mov
sub
ficompl
mov
int3
xchg
stc
pop
lock
jnp
ds
adc
adc
mov
dec
jns
xorb
mov
xor
xor
push
loop
aaa
push
shlb
jo
pop
or
inc
sub
cltd
or
fs
dec
lds
test
mov
push
rorl
js
nop
arpl
mov
push
dec
js
inc
sub
xchg
fstpt
sbb
inc
xor
fiaddl
cltd
stc
ds
xchg
inc
cli
inc
xor
fidivrs
bound
or
call
jne
push
les
lock
add
adc
in
cwtl
int3
dec
xchg
adc
pop
inc
jp
fistps
imul
inc
pop
enter
mov
out
dec
incl
out
stos
arpl
stos
cmpsb
lea
xorb
scas
pop
push
mov
sbb
pop
clc
stos
adc
aam
push
dec
push
inc
mov
dec
cmc
mov
lahf
data16
int3
mov
dec
xorl
addb
push
sbb
mov
imul
je,pn
les
ss
add
addr16
in
outsb
iret
push
fld1
pusha
fdivs
gs
pop
outsl
or
lcall
and
push
cmpsb
movsl
negb
loopne
inc
mov
mov
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
outsl
xor
and
adc
adc
adc
ljmp
inc
mov
adc
jo
sti
cmp
mov
mov
adc
ret
cmp
out
mov
dec
pop
mov
mov
and
sahf
sub
shrb
dec
jns
fstps
icebp
mov
inc
mov
dec
mov
cmpl
insl
mov
les
divl
arpl
mov
mov
roll
lods
sub
jp
out
insl
rcl
jecxz
je
sahf
sbb
sbb
shrb
cld
sbbl
add
sahf
cld
pop
mov
jbe
scas
mov
cs
or
lcall
mov
jle
aaa
insl
mov
mov
aas
dec
or
pop
mov
repnz
jo
outsl
sbb
xlat
pop
ja
xchg
mov
ljmp
pushf
jp
xchg
int3
flds
mov
cltd
pop
jmp
int
xor
xchg
ss
mov
mov
ret
add
sti
add
popf
mov
dec
or
enter
test
adcl
add
sub
ljmp
rolb
inc
lods
or
and
mov
int3
shlb
mov
and
or
loopne
fdivs
stos
test
lcall
xchg
aad
loop
lret
jg
pusha
repz
and
es
jl
sub
fisttps
rorb
frstor
push
popf
or
push
std
jp
add
inc
inc
push
xchg
dec
xchg
insl
divl
or
sub
jecxz
fs
out
mov
mov
shrb
lahf
mov
cld
ljmp
add
jae
mov
dec
xchg
clc
into
jmp
and
sbb
mov
stos
repnz
adc
cmpsl
and
ja
cwtl
in
xchg
sbb
cs
pop
repz
je
test
movsb
xorl
ret
fidivs
fwait
sbb
mov
jge
lret
inc
insl
nop
inc
mov
cmpsl
int
fcomps
cwtl
or
pop
insb
pop
adc
add
jnp,pn
xchg
cli
or
mov
lret
mov
stos
aaa
pop
shrb
push
mov
mov
add
jnp
clc
call
mov
xor
mov
lock
dec
mov
shlb
data16
xchg
cmpsl
or
mov
cltd
data16
mov
daa
cmp
es
and
fldt
loop
and
hlt
cwtl
xorl
or
stos
mov
popa
movsb
push
scas
dec
dec
push
popf
fs
les
mov
pop
nop
mov
dec
sub
clc
or
cmp
add
xor
mov
and
dec
xchg
mov
mov
js
and
mov
notl
xchg
pushf
mov
mov
je
pop
pop
pop
ja
iret
add
jecxz
in
ret
das
aad
clc
repnz
xchg
mov
mov
or
outsb
test
imul
sbb
cmp
xlat
icebp
adc
inc
lret
push
ret
push
rolb
cmp
ret
into
adc
xchg
ja
inc
inc
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
call
cmp
adc
adc
adc
ss
jne
adc
enter
ljmp
test
movsl
movsb
loop
stos
inc
loop
xchg
mov
icebp
es
call
push
jno
int3
jge
sbb
imul
pop
pop
and
leave
adc
loop
js
pusha
rol
outsl
scas
call
dec
xchg
imul
sbb
test
xchg
sub
and
add
clc
scas
add
add
sahf
xchg
mov
mov
sbb
mov
and
mov
lret
clc
inc
push
mov
addr16
cmc
cltd
insb
pop
sub
mov
inc
stc
cld
xchg
cltd
xlat
andl
cmp
xchg
xor
lcall
dec
mov
cmp
fucom
aaa
push
int3
mov
and
iret
lea
fwait
testb
jl
outsl
movsb
jno
adc
inc
lods
mov
adc
aam
inc
adc
addr16
or
xchg
jne
cmp
bound
add
jg
push
push
ja
movsb
out
pop
mov
cmp
dec
pop
sub
push
fidivl
out
mov
xchg
das
frstor
aaa
jg
punpckhbw
push
sub
adc
mov
gs
dec
lcall
cmpb
aad
sub
test
in
mov
in
xchg
insb
dec
and
jns
pop
xchg
add
cli
sahf
test
xchg
sbb
out
adc
lret
xor
mov
mov
jbe
mov
xchg
in
push
cmp
loope
mov
scas
dec
jg
lret
pop
xchg
sub
mov
cmp
pop
mov
cmp
imul
pop
xchg
js
outsb
aaa
mov
gs
and
xchg
dec
lret
xor
push
lcall
insl
js
cmpl
add
mov
mov
and
jo
adc
std
and
fwait
push
enter
bound
mov
inc
in
xchg
out
pop
adc
dec
mov
leave
push
arpl
js
cmp
jae
add
stc
fidivrs
aad
xchg
call
or
push
fsubrs
rcll
lahf
loopne
arpl
add
dec
movl
ja
shlb
pop
adc
pop
aad
or
mov
mov
add
loope
gs
cmp
rorb
outsb
mov
xchg
xor
ret
mov
dec
inc
shrb
imul
xchg
cwtl
test
and
xor
add
popl
pop
pusha
loope
xchg
or
or
pop
push
add
pop
shll
das
jmp
pop
mov
call
lock
ret
frstor
sti
addr16
push
sbb
mov
fistl
std
mov
sbb
adc
jno,pt
lret
push
jns
pop
js
xor
inc
jno
mov
cmp
mov
mov
hlt
repz
loope
pop
xchg
jecxz
hlt
popa
push
pop
es
aaa
mov
je
mov
mov
inc
shrb
pop
nop
add
imul
out
and
adc
cmpsb
jecxz
rorb
lock
dec
stos
sbb
add
cmc
insb
fsubs
jns
data16
leave
loopne
or
xor
lcall
push
das
sbb
sub
push
loope
mov
mov
add
jmp
insb
ror
shlb
insb
daa
ret
mov
cmp
push
xor
adc
adc
adc
adc
sbb
jmp
insb
pop
inc
mov
dec
push
cwtl
cld
push
clc
je
xor
xor
push
jmp
lahf
int
fdivrl
mov
int
mov
xchg
jno
icebp
aad
clc
sub
sbb
or
push
adc
stos
mov
push
testb
jbe
enter
sbb
cmp
leave
inc
push
jge
repnz
mov
cld
push
mov
cltd
cmc
push
adc
rcr
xor
clc
cmpl
jbe
ror
test
ja
pusha
aaa
and
mov
jae
sbb
add
rcrb
mov
cmpsl
sub
mov
dec
and
and
ja
insb
data16
xor
fdivs
mov
hlt
jne
ret
inc
popf
ljmp
adc
push
loopne
popf
stos
inc
outsb
mov
xchg
adc
adc
inc
mov
popf
notb
xorl
or
pop
movsl
pop
add
mov
imul
or
jnp
xorl
and
sti
subb
ja
sbb
sub
and
mov
jno
xchg
ja
fdivrp
jne
pop
into
mov
xchg
aad
push
lahf
pop
and
lcall
testl
inc
push
cmp
dec
test
jecxz
sbb
jge
pop
dec
mov
iret
test
mov
mov
cld
jns
daa
push
repnz
cmc
or
je
mov
sbb
xor
sar
xchg
xchg
es
fildll
jmp
sbb
dec
inc
mov
cmc
out
test
outsl
mov
outsb
cmp
mov
xor
add
sub
jecxz
rol
insb
jno
leave
lcall
add
out
xchg
test
shl
mov
mov
fimuls
cmpsl
das
or
cmpsb
adc
jmp
cmp
std
scas
push
inc
push
adc
sub
jle
mov
and
add
or
daa
out
out
imul
fs
jbe
repz
shrl
jnp
fisubrs
jb
cmpsl
adc
addb
mov
stos
adc
sbb
call
lret
jns
push
ja
mov
stc
adc
jnp
mov
cmp
push
int3
imul
in
shr
adc
cmc
xchg
lds
ficompl
movsl
repnz
insb
xlat
loope
std
push
pushf
aas
popf
pop
lea
jns
dec
das
lcall
mov
fwait
stc
mov
push
rorl
jl
push
pusha
and
xor
mov
dec
lret
in
sub
sahf
filds
leave
scas
mov
mov
rcr
push
xchg
dec
test
lods
std
jge
or
js
mov
push
add
xchg
sarl
outsb
sahf
js
sub
in
adc
cld
inc
cli
pop
pop
pop
dec
mov
push
out
push
loop
and
call
mov
stc
jecxz
dec
aas
daa
inc
nop
sub
loop
mov
push
xchg
dec
mov
mov
or
sbb
mov
lcall
mov
scas
andb
xor
in
pop
fcoms
and
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
out
loop
fildl
mov
and
push
xor
or
fisttpl
sub
fisubrs
in
inc
aam
fcomp
std
rcll
stc
mov
fldt
ret
out
jp
mov
arpl
lock
lock
and
mov
mov
push
call
test
pusha
sbb
dec
add
xchg
cmpb
pop
dec
cmpsb
sub
icebp
jecxz
or
adc
inc
jb
push
popf
dec
das
dec
pop
lahf
leave
cmpsb
loopne
or
fisubrs
sub
sbb
and
cmp
jnp
inc
adc
push
cld
stos
shl
in
mov
jp
dec
out
inc
ret
pop
ss
dec
or
stc
dec
or
push
xor
fcompl
outsl
xlat
adc
aad
int
push
dec
lahf
outsl
enter
push
sbb
shrb
and
pop
mov
repz
push
mov
cmp
mov
bound
adc
dec
add
add
dec
xor
pop
xchg
push
mov
in
aas
popa
scas
addr16
jno
inc
int
mov
test
mov
aaa
push
mov
xor
out
mov
sahf
repnz
outsl
fwait
pop
ret
mov
sti
and
mov
xchg
xlat
mov
lea
mov
mov
add
ss
cs
jnp
lret
jne
incb
mov
jnp
cltd
xor
mov
inc
inc
popa
jl
scas
mov
dec
adc
sbb
sbb
push
bound
mov
mov
loope
in
and
cmp
cmp
adc
xchg
cmp
adc
scas
scas
jno
jo
xor
sti
outsb
lahf
mov
test
cli
dec
in
outsb
xchg
adc
and
push
leave
outsb
cmp
xor
into
mov
and
mov
cmpsb
out
ja
adc
pushf
and
pop
mov
pop
test
js
cmpsb
ds
push
ss
jle
sbb
loope
adc
add
loopne
in
std
fdivp
pop
enter
add
cmp
lock
xchg
dec
testb
adcl
mov
sarb
adc
fists
pop
jae
lods
push
sbb
rol
imul
push
subb
cld
subl
pop
inc
mov
inc
stc
fistps
add
fcompl
inc
push
outsb
pop
outsb
int3
cld
mov
jbe
lods
lds
cli
loopne
aam
inc
dec
xchg
cwtl
repnz
fcompl
cmp
jns
jnp
filds
xchg
mov
cmp
adc
mov
jg
dec
adc
movsb
mov
std
cmp
repnz
pop
add
ret
jl
cld
sbb
dec
fldt
je
hlt
sbb
shll
xchg
sbb
es
and
jne
mov
lods
je
mov
pop
les
mov
and
mov
iret
not
andb
popf
push
inc
dec
xor
sub
push
daa
mov
xchg
inc
repz
jmp
das
inc
fiadds
xchg
in
adc
mov
cli
xchg
gs
sub
nop
and
sbb
pop
mov
arpl
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
push
pop
mov
push
adc
adc
cmp
inc
ss
fcompl
push
inc
mov
pop
jg
pop
fisubrl
push
je
ljmp
lock
and
dec
sub
lret
leave
cmpsl
dec
sub
and
mov
xchg
cmpsl
test
xchg
ds
test
add
aas
lahf
sub
add
xor
sbb
xchg
add
pop
lods
jl
adc
mov
lock
xchg
mov
add
mov
sub
sti
fldt
sub
mov
xchg
push
inc
leave
mov
iret
out
mov
insb
push
xchg
ljmp
inc
ds
enter
aas
jge
punpckhbw
roll
pop
jmp
xorl
sti
push
pop
mov
ss
sbb
mov
dec
dec
sbb
shlb
stos
sub
pop
push
aas
stos
or
lods
and
adc
popa
push
loope
sub
push
push
loop
ss
jle
mov
negb
insb
outsb
scas
int
aas
int3
test
gs
inc
adc
push
or
arpl
mov
aad
insl
or
jmp
ret
jns
fmulp
rol
ds
hlt
xchg
std
xchg
and
jg
movsl
aaa
repz
nop
dec
push
je
xchg
pop
es
cli
rolb
jno
shll
stc
jno
pop
xor
cmp
xchg
jo
cmpsb
or
xor
sbb
xchg
pop
lock
fnsave
adc
push
or
xor
jne
js
insb
dec
xchg
xor
adc
xchg
push
gs
scas
push
xor
lods
addb
data16
in
mov
and
mov
sti
daa
bound
sbb
add
add
jmp
fnstcw
push
jae
pushf
out
dec
mov
aam
push
xor
fwait
sbbb
jo
sti
cmp
add
fldenv
jns
rcrb
test
inc
and
sahf
mov
in
or
ja
mov
je
cmpsl
lock
out
xchg
inc
sahf
xchg
lods
sahf
push
mov
xorb
xorl
xchg
fmuls
out
nop
cli
cmp
call
insb
mov
dec
call
lcall
cmp
adc
cmp
fisubrs
push
xchg
cmp
mov
in
sbb
or
and
insl
mov
sub
push
jl
int
clc
jnp
movsb
addb
loope
fld
aad
push
dec
je
sbb
mov
movsb
or
cmp
in
imul
sub
sbb
sbb
jo
movsl
ljmp
jae
dec
cmp
cld
xchg
sbb
scas
and
in
js
dec
test
xor
xor
insb
sub
fdivrl
xlat
sbb
and
inc
test
ret
into
call
cmpsl
sbb
pop
pop
test
or
outsl
sbb
jmp
test
push
std
cmp
cmp
call
cmpl
loope
leave
mov
mov
lock
xchg
lret
lcall
push
and
cld
and
push
push
aas
cmc
xor
add
lret
cmp
pop
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
pushf
sarb
sbb
adc
movlps
jmp
je
std
push
shlb
mov
or
sub
stc
pop
cld
and
xchg
pop
push
sub
or
mov
test
test
push
pop
ss
dec
inc
daa
pop
or
nop
inc
pop
inc
outsl
cs
daa
sub
push
sbb
mov
stos
fdiv
xchg
push
jns
mov
xor
dec
sub
sbb
stos
fwait
aaa
xchg
or
adc
iret
fldt
mov
sbb
pop
adc
pushf
pop
pop
add
jnp
imul
lock
xchg
and
or
das
inc
mov
cmpsl
call
mov
aaa
cld
sub
mov
pop
and
push
add
xchg
push
mov
sbbb
rcrb
stos
xor
sbb
or
pop
imul
insl
stos
mov
jmp
or
outsb
adc
push
pop
pusha
inc
lods
mov
or
outsb
pop
loopne
test
mov
push
sahf
mov
mov
cmpsb
mov
test
movsl
ret
scas
mov
sub
jp
out
or
sbb
pop
pop
daa
mov
push
push
xchg
xchg
dec
mov
pop
or
xchg
jecxz
es
mov
rcr
jns
test
mov
jne
fists
or
rcrb
mov
orb
imull
inc
inc
dec
aas
aad
ljmp
cmpsl
inc
xor
pushf
add
mov
jmp
and
ss
ret
and
imul
inc
imul
sub
xor
pop
outsb
cmp
pop
mov
js
lods
dec
sbb
lret
mov
fwait
mov
add
jnp
repz
sbb
cmp
icebp
out
or
fwait
scas
dec
fdivs
imul
pushf
sbb
push
leave
ret
push
dec
dec
out
and
imul
bound
jne
test
stos
int3
mov
ror
or
xor
sbb
sbb
push
cmc
cmp
scas
sarb
popa
js
jnp
loopne
sahf
mov
inc
cld
mov
aam
in
movsl
setns
jb
test
inc
ja
pop
xor
jne
subb
add
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
xchg
bound
sbb
adc
movlps
push
loope
fbld
or
pop
in
xor
sbb
pop
push
clc
or
mov
test
bound
je
and
data16
add
mov
call
pop
insb
jnp
push
icebp
xchg
ret
fnstsw
repz
out
sub
int
xor
nop
out
cld
mov
iret
inc
push
mov
pop
insb
pop
adc
popf
cli
scas
push
test
mov
mov
or
sbb
in
mov
fs
scas
lcall
ret
fwait
test
data16
popf
jle
mov
xlat
fisubrs
cli
pop
cmpl
rclb
loope
orw
and
cmp
jl
jmp
push
push
inc
lds
jge
cli
sub
sbb
mov
or
or
mov
arpl
inc
adc
add
jns
adc
gs
movsl
mov
outsl
adc
xor
xor
add
pop
scas
cs
xchg
je
test
mov
pusha
pop
imul
jle
loope
sarb
and
mov
lea
and
and
popf
dec
adc
sti
xor
shrb
rcll
je
mov
sbb
dec
addr16
sbb
test
mov
xor
mov
xchg
clc
jmp
inc
dec
push
push
cwtl
fiaddl
and
lea
jle
scas
scas
gs
insl
inc
jae
ficomps
pushf
or
das
and
mov
sbbl
fnstcw
sub
aaa
setb
xor
leave
cmp
add
mov
in
push
out
push
jnp
xchg
adc
cmpl
inc
test
push
cmp
mov
xchg
dec
pop
jecxz
fidivs
xchg
clc
xacquire
jb
sbb
push
stc
aad
sbb
inc
push
inc
push
add
dec
adc
das
scas
pop
aaa
cmp
pop
repnz
int
or
stos
div
jmp
cld
mov
inc
arpl
cmp
dec
jae
adc
ret
ficompl
movsb
mov
js
aaa
adc
shll
es
bound
stos
push
jecxz
lcall
sbb
cmp
mov
add
mov
sub
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
sti
and
push
adc
decb
adc
sub
daa
or
inc
stc
imul
push
aas
and
jg
dec
into
fwait
pop
and
bound
mov
fstpt
addl
xchg
mov
jb
hlt
dec
outsb
notl
fildll
cmovne
scas
je
inc
fcmovnb
pop
negl
mov
cwtl
test
ficomps
bound
add
gs
orb
mov
cmpb
leave
vpsubusb
arpl
push
shlb
push
aad
stc
fmuls
adc
lods
in
inc
dec
push
fcmovbe
inc
outsb
outsb
fcmove
jno
adc
sbb
dec
insb
mov
push
cs
fnstsw
xor
mov
xchg
mov
cli
mov
lea
mov
mov
in
jno
mov
stos
jmp
jnp
imul
adc
iret
cmpl
jg
mov
shlb
inc
mulb
test
xor
nop
push
cmpsb
sbb
cmpsl
jne
enter
sub
mov
sbb
jb
and
fimuls
sub
mov
push
repz
mul
enter
xor
add
cld
dec
or
fs
xchg
subb
into
dec
int
pop
daa
imulb
scas
jecxz
dec
daa
push
xor
je
add
mul
test
fists
int3
jecxz
or
lret
xor
inc
dec
pusha
stos
mov
addr16
call
lds
insb
push
xchg
or
lods
pop
mov
adc
xchg
lea
sahf
lods
jnp
jle
push
and
mov
jns
push
jno
xchg
negb
out
add
shlb
nop
mov
inc
dec
aam
xorb
dec
sbb
or
pop
loope
push
scas
pop
les
call
idiv
mov
xor
notb
sbb
xchg
lret
cmp
stos
mov
dec
into
mov
decb
incb
jp
pusha
xor
cmpb
stos
xor
in
pop
push
popf
ljmp
mov
dec
cmp
inc
xor
sub
movsb
pusha
adc
insl
loope
dec
mov
jnp
xchg
and
jns
mov
mov
imul
fcmovnu
mov
mov
rorb
dec
add
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
in
mov
movlps
pop
pushf
inc
xor
add
leave
data16
int
pop
pop
cmpsb
pop
jg
loop
mov
xor
pop
test
lahf
mov
ja
std
mov
jne
leave
sub
adc
pop
cltd
iret
xor
cmp
add
mov
scas
or
stos
rcrb
mov
lahf
outsl
mov
push
push
cmp
add
int3
cmp
mull
lcall
jg
inc
fsubr
xchg
adc
mov
aad
iret
sub
pop
popa
subb
loopne
inc
rcrb
lods
pop
adc
inc
fs
inc
fdivp
movsb
adc
add
jnp
out
xchg
mov
push
test
pop
and
fucom
out
xlat
cmp
mov
jae
xor
pop
adc
cmp
dec
mov
out
int
mov
and
lock
out
clc
data16
in
jbe
inc
adc
sarl
dec
or
imul
push
test
enter
pusha
pop
push
pop
xor
or
lret
test
push
imulb
jnp
inc
movsl
dec
inc
push
aam
outsb
cwtl
cmpsb
sub
imul
test
pop
scas
xchg
mov
pop
cltd
pop
call
adc
bound
andb
rcll
mov
xchg
fs
leave
sub
repz
mov
sahf
cwtl
aaa
les
or
mov
into
sub
enter
fdiv
leave
xlat
jmp
ret
clc
dec
pop
stc
mov
adc
lret
lret
mov
sarl
mov
int
xor
andb
xor
fldenv
ret
cmp
cmc
call
scas
mov
mov
dec
lds
out
sbb
sub
jp
iret
jg
inc
mov
or
mov
mov
fistl
jg
loope
xchg
loopne
into
jne
or
push
dec
dec
mov
dec
int
mov
jle
jnp
mov
movsl
lret
xchg
inc
xchg
test
and
les
inc
std
in
sub
dec
xchg
sub
push
inc
loopne
imul
xlat
cmp
je
nop
pop
xor
jo
testb
sbb
jge
repnz
inc
mov
or
cltd
lahf
sub
sub
loope
and
lea
add
add
decb
icebp
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
adc
or
adc
movlps
loope
jns
outsb
cmp
imull
mov
arpl
mov
rorl
and
dec
cmpsl
pop
mov
test
jne
out
and
sbb
mov
push
pop
mov
mov
lea
je
ret
inc
adc
in
icebp
pusha
inc
xor
mov
lret
inc
and
clc
dec
movsl
arpl
cmpsb
mov
push
fwait
stc
pop
push
stc
std
ljmp
popf
pop
ja
and
daa
fisubrl
enter
cmpsl
mov
mov
bound
in
imul
sbb
cwtl
fildll
in
sarl
inc
pop
sbb
cltd
lret
xchg
hlt
push
es
and
push
lcall
xchg
jge
jp
jae
or
push
add
es
int
cmp
enter
kaddb
push
cmp
aad
jbe
ljmp
fstpl
cli
aam
mull
mov
inc
in
gs
push
inc
incl
popa
mov
popf
pop
jecxz
fisubrs
testl
xor
mov
lock
in
cmp
in
rolb
rcll
leave
sbb
loopne
xchg
loopne
jp
cld
add
js
sbb
fcoml
adc
mov
and
stc
jb
cmp
jmp
pop
into
ja
or
imul
dec
idiv
pop
add
adc
pop
inc
cltd
sbb
mov
xlat
es
outsb
mov
or
das
xchg
daa
xor
xor
mov
rol
jbe
pop
push
imul
jns
fiaddl
dec
add
repz
addl
push
jg
sti
adc
adc
insb
cs
mov
stc
dec
sub
mov
cli
popa
aad
popa
loopne
sbb
xchg
pusha
test
xchg
cltd
scas
mov
xchg
inc
mov
rclb
fsubr
jne
xor
cmpsl
mov
mov
enter
pop
and
push
sub
rcrl
jne
test
in
cli
sub
xchg
int3
cmc
rol
cmp
cmp
or
dec
repz
push
xchg
mov
sti
dec
push
hlt
call
ljmp
xor
rol
jp
dec
dec
dec
aam
mov
sub
sub
sub
jo
fsts
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
loop
mov
cwtl
push
xchg
arpl
cmp
js
inc
push
pop
mov
cmp
shll
out
push
push
cmp
sub
outsl
lret
cmp
movsb
lods
add
inc
aam
icebp
inc
cmp
and
mov
mov
mov
dec
mov
mov
push
mov
pop
fisttpll
xorb
movsb
into
mov
or
jmp
call
push
movsb
jo
dec
rorl
inc
stc
sbb
pop
cmpsb
inc
push
xor
adc
jl
lods
push
pop
loope
adc
fbstp
xchg
push
aad
ljmp
lock
lock
das
and
aad
xorl
je
scas
jge
fadd
jecxz
pop
into
mov
into
cmpsl
sahf
sub
pop
in
imul
fs
sub
ljmp
or
xchg
pop
sbb
addr16
roll
xor
repnz
or
mov
ficoml
cmovns
or
adc
out
xchg
jecxz
adc
or
pop
flds
xchg
ljmp
sub
cs
pop
shll
fwait
xchg
sbb
and
or
hlt
xchg
insb
add
jecxz
pushf
jl
inc
test
repz
mov
cli
shl
adc
sub
pop
cmp
cmp
and
add
mov
jns
pop
add
mov
xchg
or
cmp
add
popa
cld
and
fstl
outsb
dec
insb
dec
movsl
jle
lahf
fmull
fisubl
or
orl
mov
dec
jne
adc
fisubl
insb
cld
inc
mov
sub
push
sub
and
stc
jne
imul
inc
mov
xor
mov
xchg
adc
test
xchg
pop
in
xchg
or
or
mov
push
pop
cmp
out
lret
or
scas
push
jne
loopne
cs
sub
in
adc
mov
cs
push
fidivrs
icebp
mov
inc
or
fisubl
ljmp
push
das
notb
out
pop
mov
cmpsb
mov
insl
xor
int3
outsb
dec
fdivp
ret
aad
in
mov
lds
inc
pop
orl
loopne
aam
xor
iret
lods
pop
or
push
leave
scas
jne
jecxz
adc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
dec
fdivrs
popa
movlps
pop
adc
ljmp
inc
cmpsl
jge
and
mov
push
fwait
sub
mov
loop
fwait
jle
les
lret
out
aas
add
sbb
xchg
mov
adc
pop
cmp
xor
push
sbb
xor
loope
scas
fnstsw
mov
mov
mov
pop
jmp
aad
sbb
adc
push
test
dec
iret
aas
pop
cwtl
paddw
iret
pop
inc
sub
push
adc
rcrl
aam
pop
jne
lea
xchg
out
insl
les
arpl
xchg
fstpt
int3
push
movsl
mov
test
cltd
mov
stos
xor
jb
fidivrl
mov
clc
and
add
dec
loopne
xor
mov
mov
mov
fldcw
xor
test
movsb
xor
mov
jno
lahf
aas
cmp
call
sub
fiaddl
xor
cmp
xor
lods
cmp
test
mov
outsb
mov
and
mov
roll
and
pop
pop
shl
dec
test
mov
pop
cmp
or
std
xor
cmp
nop
and
test
imul
pop
popa
test
dec
pop
jnp
insb
fstps
mov
xchg
adc
push
inc
std
hlt
fcmovne
cld
das
enter
jl
pop
pop
dec
push
or
xchg
sahf
jne
mov
fcom
call
movsl
or
sub
sub
les
subl
notb
fisttpl
sbb
push
test
out
cmp
xchg
xor
xor
loope
add
or
bound
push
xchg
or
mov
decl
mov
dec
add
push
lods
test
pop
pop
add
fiadds
sbb
mov
sub
mov
popf
adc
mov
out
repnz
dec
aam
mov
pop
pop
cwtl
enter
add
jae
adc
nop
push
sub
lret
imul
inc
aad
xor
mov
fsubrp
mov
int
or
inc
bound
into
dec
aas
data16
adc
jp
jge
mov
mov
cli
cltd
pop
add
push
sub
inc
jmp
pop
test
inc
dec
repz
inc
adc
dec
cmp
xor
std
sbb
cmpsb
inc
xchg
cmp
in
xor
mov
cbtw
iret
divb
inc
mov
inc
mov
test
pop
sub
mov
ret
pop
popl
loop
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
fdivs
adc
popa
movlps
dec
pop
repz
jb
mov
inc
enter
jne
pand
jge
xchg
inc
orl
xchg
xchg
into
mov
jae
jae
xchg
or
jno
xor
lret
gs
scas
xchg
popf
rorl
pushf
xchg
sbb
sub
mov
repz
mov
mov
jne
mov
mov
lds
shll
xchg
out
neg
out
xchg
cmp
loop
shl
inc
mov
ja
lea
lea
aas
ja
inc
inc
jge
mov
adc
aad
xor
mov
inc
and
fisttps
pop
clc
mov
jo
jmp
jne
sub
and
js,pt
test
ds
or
orl
das
sbb
fdiv
dec
mov
ds
dec
cmp
nop
pushf
jo
and
push
rorl
mov
jo
cmpsl
js
add
imul
in
or
cmpsb
imul
subb
inc
mov
lods
daa
lret
pop
cmp
or
add
lds
mov
test
vpmacsww
xchg
pop
pop
cli
das
cwtl
mov
pop
inc
dec
add
pop
or
aad
cld
mov
mov
add
pop
pop
mov
sbb
jb
dec
jno
test
lea
insl
je
unpcklps
jp
insb
js
bound
stos
out
aad
in
insl
push
cwtl
dec
push
cmp
sti
mov
sub
push
push
fwait
in
clc
cli
sbb
xor
test
sbb
jno
sub
mov
repz
mov
movsl
sti
add
pop
inc
outsl
xchg
hlt
je
xor
stc
xlat
inc
xor
fidivrl
or
dec
out
bound
shll
out
out
pop
jnp
lods
sub
add
sbb
adc
xchg
fldt
sbb
push
pop
mov
out
xor
movsl
or
sahf
adc
xor
mov
xchg
or
insl
xchg
and
push
fldt
or
out
jmp
rcrb
xchg
xor
push
dec
in
fldenv
cs
xor
pop
fdivrs
test
insb
es
sub
push
iret
adc
out
xchg
xchg
mov
jecxz
sub
cmpb
sbb
rcl
mov
jg
andl
sbb
ror
or
and
scas
repz
cltd
scas
sub
inc
shrb
jno
and
dec
or
shll
and
inc
jle
mov
outsl
mov
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
sti
sub
mov
popa
movlps
mov
or
mov
sbb
arpl
or
or
xor
adc
fists
inc
lcall
pushl
test
inc
lret
sbb
roll
nop
jb
dec
das
push
mov
jl
aad
dec
inc
mov
jae
adc
lods
repnz
cmpsb
sub
popf
sub
lds
aad
roll
ss
lcall
push
call
outsl
js
mov
pop
sub
out
dec
icebp
xor
xor
mov
pop
push
jbe
xchg
rcr
lret
int
push
lea
fsubrl
jmp
sbb
addl
pop
outsl
mov
cmpb
fwait
mov
add
lods
js
xchg
ja
pop
movsl
ja
mov
adc
xchg
lahf
aam
pop
jge
sub
sbb
cmp
mov
sahf
mov
in
jle
cmp
jl
push
outsb
mov
cmp
adc
push
subl
sbb
adc
das
lds
adc
enter
dec
dec
aam
xor
jg
leave
clc
jno
lret
inc
sbb
inc
mov
mov
comiss
sub
mov
sbb
lock
jno
imul
cmc
or
cmpl
mov
sub
jg
push
into
mov
sti
add
mov
cwtl
sub
jecxz
repz
mov
adc
xchg
push
mov
jnp
pop
out
rcrl
aas
dec
dec
sub
pop
lcall
push
xchg
fistpll
mov
xchg
ret
pop
jae
lods
inc
test
and
adc
and
imul
sbb
push
out
xchg
dec
jp
sub
pop
push
dec
or
push
xlat
pop
sub
and
cmpsl
jp
push
mov
sbb
cmpsl
pop
sbb
cmpsb
push
inc
das
fistps
ja
mov
lock
jmp
jbe
call
js
test
jbe
stos
sti
stc
and
mov
inc
or
add
insl
push
xchg
loopne
imul
out
out
dec
outsb
or
jo
sub
dec
pop
stos
aad
xchg
mov
mov
xchg
outsl
test
hlt
mov
inc
and
add
insl
push
das
inc
xor
ret
inc
jmp
fwait
add
push
cli
popa
fucomi
lahf
fdivrl
xlat
addr16
pop
test
ljmp
cmp
xchg
outsl
add
jmp
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
dec
mov
mov
popa
movlps
pop
bound
xchg
mov
xchg
dec
mov
sbb
out
jge
test
bndldx
mov
es
bound
notb
add
pop
insb
js
cli
inc
xor
xor
lret
push
repnz
mov
out
imul
cmpsl
push
lock
adc
and
lods
pop
sti
ret
popa
mov
adc
int
mov
or
lcall
ss
in
add
jbe
sbb
sbb
jl
ret
in
lea
and
push
sbb
xlat
stc
movsl
inc
outsb
dec
jae
push
mov
clc
inc
insl
call
stos
jg
push
dec
mov
mov
or
jbe
pushf
imull
out
mov
fbld
scas
push
pop
xchg
push
cmp
jns
sub
add
sbb
dec
xor
mov
xchg
sub
mov
stos
jnp
push
xchg
adc
lret
in
xchg
inc
pop
in
adc
imulb
loopne
mov
dec
push
add
sub
dec
jle
mov
in
mov
cmpsb
cmpsl
xlat
mov
data16
inc
ret
pop
adc
in
adc
int
mov
fstp
inc
inc
test
dec
cld
push
ljmp
rol
nop
out
jecxz
add
xor
sbb
aad
shlb
mov
mov
sti
jne
pop
xchg
mov
dec
fldcw
jge
out
xchg
push
loop
jecxz
pop
cmp
jp
bound
and
mov
lods
stc
dec
or
mov
push
inc
addl
add
aam
xor
xor
mov
leave
repz
and
xlat
pop
ljmp
ret
loop
mov
int
in
popa
mov
jge
ja
pop
mov
lret
inc
roll
adc
pop
fldenv
fcmovu
mov
bound
xor
jge
mov
push
push
sbb
sub
outsb
xor
jne
pop
out
insl
popa
jo
daa
mov
les
iret
dec
sub
jmp
aad
xor
gs
inc
cmpsl
push
mov
bsf
sahf
jb
push
sti
pop
sbb
or
pop
dec
push
fsubrp
ss
xchg
jp
imul
xchg
sahf
mov
pop
mov
js,pn
or
outsb
mov
rcll
and
lock
pop
data16
std
test
das
sub
inc
xchg
rcrb
repnz
sarb
jp
movsb
pop
add
sub
loope
xor
imul
and
mov
rorb
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
cmp
jle,pt
jmp
adc
mov
sbb
sub
jo
push
jle
ret
fcoml
xchg
dec
orl
in
ret
in
add
rolb
shrl
ss
xlat
leave
movl
dec
sti
filds
dec
in
out
sub
sub
xchg
inc
cmp
mov
add
mov
xchg
mov
lock
icebp
int3
cltd
mov
or
dec
les
cmp
pop
xor
in
cmp
enter
jb
bound
mov
aam
in
fadds
mov
adc
hlt
out
mov
dec
movsl
mov
loop
jnp
fdivrl
cld
lods
cmp
inc
xchg
dec
out
fcompl
pop
jns
and
and
dec
inc
bnd
aas
mov
pop
test
cld
fnsave
and
pop
dec
arpl
iret
lods
mov
xor
and
repnz
into
fnstsw
outsl
in
push
sarl
and
push
ss
add
cmc
sub
add
jp
hlt
outsb
insl
loop
dec
pushf
cwtl
test
mov
push
xchg
pop
fildll
data16
insb
aaa
push
ds
xlat
mov
xchg
push
fwait
mov
aaa
subl
test
lods
loope
scas
sahf
sbb
pop
mov
outsb
loopne
andl
dec
pop
stos
pusha
adc
inc
pop
std
cmp
popa
push
add
xchg
inc
in
scas
sub
pop
andl
orb
dec
call
add
mov
mov
and
dec
sbbl
sahf
mov
mov
sbb
or
fcoms
testb
repz
push
fists
dec
faddl
movsb
outsb
movsb
cmp
rcrl
jmp
and
dec
xchg
jbe
popf
fs
repz
inc
in
dec
mov
sbb
mov
cli
add
push
add
push
js
jno
out
and
loope
popf
push
mov
insl
ret
dec
push
mov
adc
cmp
aaa
sahf
fidivrs
jo
popl
test
push
inc
jmp
in
and
shl
pop
cmp
scas
lds
mov
pop
cmpsb
sbb
pop
dec
adc
adc
outsb
inc
stos
lock
rcr
aaa
mov
sub
mov
pop
mov
cwtl
dec
jo
xchg
ss
sub
aad
sbb
dec
ret
out
xor
movl
xor
sub
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
xlat
enter
adc
xchg
movlps
lock
cmp
sub
arpl
or
outsl
clc
ds
jae
xchg
cli
jb
jo
mov
divb
lahf
adc
dec
or
imul
leave
or
xlat
inc
adc
enter
outsb
dec
lret
repnz
int3
or
mov
movsl
mov
mov
mov
rclb
jl
inc
das
mov
mov
or
jno
pop
movsl
sti
pop
std
andl
or
and
xor
dec
out
xchg
lds
cmp
xchg
fcompl
das
repnz
in
fildll
sbb
loopne
push
inc
push
jbe
outsl
int3
pop
push
jnp
mov
push
jg
dec
push
sbb
loopne
orl
and
out
gs
mov
rcll
fdivr
jge
cld
xor
xchg
push
fldt
pop
xor
fiadds
mov
repnz
sbbb
dec
loopne
out
inc
movsl
sub
pusha
xchg
jne
xchg
adc
stc
fcom
sbb
sbb
xorl
aad
jge
mov
rcr
cmpsb
cltd
pop
dec
outsl
outsb
jecxz
xor
out
in
adc
dec
push
ljmp
ss
sub
ss
mov
push
inc
jecxz
daa
mov
sub
vpmacssdqh
cld
push
test
std
sub
mov
cmp
outsb
dec
fildl
ljmp
lret
add
dec
mov
rolb
pop
iret
mov
lahf
std
add
in
or
jle
pop
pop
fists
int3
adc
in
stc
mov
mov
sar
adcl
lahf
cmp
popl
mov
cltd
aas
fldt
dec
add
push
cmpsl
xchg
inc
hlt
rcrl
mov
cmc
out
shll
jno
mull
mov
out
dec
add
mov
adc
push
push
cmpsl
es
push
leave
repz
in
and
sub
cli
sub
ljmp
sub
add
lahf
mov
jmp
inc
sub
and
sub
test
sti
push
movsl
daa
jg
int
xchg
or
cmp
xor
mov
fmuls
push
cmp
push
push
aam
shll
call
test
gs
push
addr16
cli
subb
sbb
jo
fbstp
push
mov
test
jmp
hlt
jo
gs
mov
loopne
pusha
neg
xchg
xlat
test
push
mov
sub
xor
call
pop
sbb
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
loope
das
fs
out
push
rorl
xchg
cltd
push
sub
in
mov
mov
aad
into
icebp
mov
cmp
sub
cltd
lret
or
adc
push
pop
mov
fmuls
es
xchg
and
dec
sub
pop
pusha
xlat
dec
or
jl
mov
pop
ja
jecxz
bound
mov
pushf
mov
mov
fimull
in
or
js
in
push
sarb
inc
inc
jge
jne
xor
fstps
sub
loopne
xchg
push
sub
out
jbe
daa
add
push
int
rcll
insb
mov
pop
je
js
cs
sub
adc
leave
lret
testb
pop
jge
pop
mov
aad
scas
adc
xor
xchg
add
cltd
test
jle
popf
and
xor
adc
test
in
lcall
xor
sarb
nop
fisubs
lds
adc
add
aas
les
jmp
xchg
fimuls
repz
and
ret
aad
sti
add
mov
cltd
pop
and
test
out
js
sub
sahf
in
aas
je
adc
test
xor
cmp
mov
xor
fs
push
jbe
xor
mov
sub
scas
stos
test
inc
stos
leave
pop
shrl
dec
ror
movsl
ret
movsl
pop
cld
adc
sub
and
repnz
test
xor
aaa
pop
paddb
ret
inc
pop
sarb
cmp
cwtl
dec
and
iret
mov
adc
mov
and
aam
ds
fadd
xchg
jb
xor
cmp
sarl
dec
pop
jo
pushf
in
jns
cmp
iret
or
sahf
adc
bound
jl
mov
inc
sti
push
xchg
cmp
sub
inc
in
das
xchg
and
pusha
sub
mov
push
mov
inc
aas
xor
inc
icebp
stos
mov
dec
pop
fisubl
sub
mov
jns
add
xor
sarl
jl
adcl
inc
inc
push
clc
xchg
and
ret
pop
adc
pop
pop
adc
call
sub
fists
push
jns
or
lea
pop
or
out
pop
push
hlt
fiaddl
cmpsl
jne
lcall
xchg
dec
lods
add
sti
push
add
jmp
in
bound
add
movsl
popfw
add
out
outsb
into
jmp
andl
jmp
sub
sbbl
pop
js
lods
test
adc
xchg
movlps
cltd
mov
jmp
js,pt
test
gs
push
jae
fidivs
mov
cltd
addr16
arpl
sbb
stos
inc
test
cmp
repnz
aam
stos
arpl
out
push
aas
call
mov
bound
mov
mov
xor
add
dec
mov
xchg
xlat
push
lods
imul
sub
sarl
scas
xchg
jns
push
pop
cltd
outsb
jmp
lret
add
je
loope
mov
in
cli
cmp
aam
jg
cmc
rorl
jne,pn
lret
dec
sti
mov
pushf
sbb
inc
add
xlat
addr16
clc
dec
in
xchg
in
std
iret
adc
out
int3
out
jmp
bound
loopne
fistps
cmc
clc
lcall
stos
inc
adc
fwait
dec
cmc
add
and
repnz
test
sbb
push
xorl
stos
pop
shll
fnstsw
shrl
in
js
sub
mov
loope
add
cltd
cmpsl
mov
int
adc
repz
cli
mov
repnz
xchg
pop
rcl
pop
xchg
inc
sub
fldcw
inc
adc
sub
jnp
ds
dec
mov
push
bound
xor
arpl
scas
mov
mov
lea
mov
or
mov
movsl
in
push
mov
push
cmc
pop
ljmp
scas
repz
sahf
out
add
hlt
int
pop
pushf
jg
adc
clc
clc
inc
pop
imul
in
cmpsb
push
pop
mov
xchg
push
dec
or
in
insl
out
movsl
cmc
js
jne
push
addl
pop
push
das
or
out
lods
fiadds
pop
jecxz
loop
add
bswap
hlt
and
push
sbb
push
push
pop
xchg
inc
cmpsb
jnp
imul
inc
sub
shlb
movsb
mov
in
shll
add
sub
cmp
mov
pusha
pop
push
push
dec
sbb
or
jmp
int3
jle
out
stos
push
ret
pop
pop
popa
dec
cmp
add
aad
mov
adc
push
insl
pusha
mov
incl
jnp
sub
std
or
addr16
imul
cmp
imul
je
daa
dec
jg
sub
adc
loop
jb
stc
outsl
test
add
test
jno
hlt
xor
rcll
inc
fimuls
jo
pop
shr
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
mov
mov
inc
cmp
jb
cmpsb
fdivs
int3
jno
out
push
xchg
icebp
xor
jmp
mov
push
sbb
inc
test
mov
shlb
inc
or
jg
outsl
es
lret
les
mov
or
sub
adc
insl
and
jg
xchg
jecxz
in
ja
cld
xor
iret
jmp
ljmp
sbb
or
jns
xor
es
pop
movsl
inc
ja
sbb
add
jns
scas
shlb
xor
pushf
mov
fnstsw
sarl
sub
arpl
sahf
push
jg
into
ss
orl
out
fidivrl
aaa
daa
cwtl
adc
movsl
loop
sub
jp
pop
add
dec
and
test
ret
jns
mov
rclb
pop
xchg
loopne
bound
cmpsl
mov
mov
inc
jg
dec
lret
flds
repz
nop
aaa
pop
xchg
inc
dec
bound
mov
in
inc
xchg
mov
shrl
out
loopne
mov
mov
mov
mov
jle
adc
mov
pop
pushf
lock
xor
mov
in
andb
mov
sub
loopne
adc
ss
jecxz
dec
lds
lds
pop
ret
popf
mov
sahf
arpl
lock
mov
sbb
fsubl
jmp
pop
mov
mov
xchg
or
fxch
inc
hlt
adc
les
inc
ljmp
pop
js
lret
incb
jnp
adc
jmp
cli
cmp
loopne
xchg
nop
test
and
cli
jmp
mov
ljmp
outsb
pop
mov
aas
int3
mov
lock
jns
in
xchg
and
mov
or
xor
adc
add
add
out
fsubrl
dec
gs
in
aam
jno
add
jbe
push
push
sti
fdivl
push
xor
fisttpl
popf
push
sarb
repnz
rcrb
insl
push
aad
dec
dec
pop
pop
push
inc
clc
or
jbe
scas
aam
ja
out
cld
mov
andl
fiaddl
in
xor
push
mov
push
mov
mov
dec
jecxz
cwtl
jo
add
aaa
testl
filds
sbb
sub
cmpsl
inc
adc
xor
mov
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
lods
dec
xchg
js
int
adc
rdtsc
filds
outsb
daa
lods
push
fincstp
sub
push
outsl
orb
adc
mov
add
jns
push
jbe
fstpt
fwait
dec
xchg
inc
xchg
imul
cmp
sarl
fdiv
pop
sbb
pop
loop
sub
gs
mul
inc
mov
xchg
cmp
dec
jmp
adc
mov
dec
mov
lods
push
pinsrw
leave
dec
in
fs
iret
or
dec
xor
and
cltd
data16
mov
fnstcw
push
and
leave
xchg
les
jecxz
cmp
adc
jo
lahf
add
mov
mov
inc
jl
cmc
sbb
adc
xchg
or
clc
jbe
in
cmp
sbb
mov
jmp
pop
add
lock
popf
mov
lahf
sarb
mov
fsub
mov
or
push
rcll
insl
pop
adc
cmpsb
fsqrt
xor
add
sub
mov
pusha
ds
sub
jmp
sti
push
mov
scas
inc
pop
pop
arpl
rclb
sarl
mov
mov
dec
insl
xor
dec
stos
push
xchg
sbb
ja
int3
sbb
ja
test
mov
fcoml
nop
cmpsb
sub
mov
shll
scas
xor
dec
pop
pop
xor
in
mov
lods
out
jle
xchg
dec
fucom
cmp
pop
jbe
mov
mov
fucomi
daa
sub
mov
push
les
ror
in
test
test
and
test
dec
fdivs
and
jp
mov
inc
adc
rolb
sub
xchg
jle
inc
popa
icebp
adc
pop
mov
scas
cmp
sbb
sbb
fbld
movl
mov
das
test
test
and
data16
push
mov
dec
cltd
aaa
xor
and
sub
cli
mov
test
push
mov
fistps
mov
icebp
shlb
mov
jle
cmp
cmp
mov
pop
cld
jl
pusha
mov
iret
push
dec
fisttpl
cmpb
pop
test
popa
pop
fs
sub
scas
sub
pop
dec
xor
jno
aam
add
fisubl
test
test
aas
dec
lret
cwtl
adc
test
jle
or
lds
push
ljmp
fmul
dec
in
dec
and
in
dec
xchg
std
loopne
mov
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
outsl
shlb
and
adc
xchg
movlps
imul
frstor
sub
mov
test
sbb
sub
cmc
fwait
add
lock
jmp
clc
inc
inc
roll
dec
push
add
subb
xchg
xchg
fwait
ds
adc
outsb
and
xor
push
xor
call
out
jle
mov
filds
iret
shlb
adc
sbb
cwtl
cmpsl
dec
jne
in
fsubrl
out
enter
adc
scas
test
rolb
push
sbb
pop
imull
cmpsl
mul
test
fwait
xor
inc
or
in
mov
outsb
cs
rcr
dec
imul
cmp
mov
mov
cmp
or
stos
xchg
in
icebp
and
bound
shrb
hlt
xchg
rol
test
jge
test
mov
sbb
dec
ljmp
aas
mov
loope
outsl
movsb
aas
add
xor
mov
iret
outsb
jno
xor
dec
insb
cmpsl
jge
lods
inc
lret
rorb
les
xlat
ret
outsb
pusha
sub
lea
addr16
enter
fcomi
cli
sub
in
xchg
mov
mov
cmp
mov
adc
mov
mov
sbb
jecxz
xlat
jmp
jmp
adc
xor
xchg
in
jl
xor
pop
in
enter
xchg
dec
push
in
popf
lahf
xchg
pusha
pop
movsl
jmp
ret
pop
pushf
pop
rdmsr
adc
lcall
add
jge
je
iret
or
stc
mov
cmpsb
pcmpeqb
pushf
push
pop
fwait
jnp
iret
jecxz
std
and
jle
sub
das
vmovq
add
mov
aad
pop
rolb
jmp
cmp
adc
clc
jae
mov
pop
mov
roll
lahf
addr16
mov
stc
repnz
xor
fsubr
jb,pn
adcl
aam
push
pop
push
jmp
pop
insl
xor
mov
push
push
movsb
jecxz
orl
mov
notb
xchg
xchg
jge
sti
adc
shlb
mov
out
sub
icebp
xchg
mov
lds
aas
jg
sahf
lea
ficoml
adc
loopne
loop
lock
xchg
inc
pop
sbb
adcb
cmp
es
lods
popl
stos
jnp
xchg
jae
fimuls
inc
jl
sbb
ret
jbe
lods
xor
sub
cmp
jno
call
lahf
movsb
pop
into
decb
dec
inc
and
sub
ja
andl
inc
test
pop
aad
decl
mov
movl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
mov
mov
inc
shlb
fidivrl
mov
out
inc
adc
shrb
adc
push
ds
mov
add
xor
fisttpll
fucomi
aad
out
xchg
inc
lret
inc
xor
shl
pushf
iret
push
pop
mov
sbbl
lock
mov
pop
ss
cld
cltd
and
pop
mov
fiadds
push
roll
clc
sub
andb
adc
mov
mov
into
push
dec
int
mov
dec
rol
hlt
jo
xchg
repz
cwtl
mov
jl
xlat
testb
dec
mov
add
cmp
xor
lods
xchg
mov
push
lock
test
push
loopne
lock
mov
sbb
stos
cld
test
sbb
rcrb
fwait
dec
test
mov
shlb
pop
cmpb
or
insb
movl
mov
mov
rcl
inc
push
xchg
idivb
test
loop
cmc
ret
jnp
pushf
mov
or
mov
sti
mov
stos
sbb
jle
pusha
mov
adc
mov
sbb
cmpsb
pop
mov
adc
test
jge
xlat
pop
xorl
add
lret
jo
fsts
cmp
pop
mov
out
daa
mov
das
js
xor
xor
xchg
flds
dec
std
out
outsl
mov
mov
sbb
fidivs
shll
fisubrl
sti
mov
gs
add
testb
mov
xor
mov
sbb
inc
inc
ficoml
add
xchg
lods
push
loop
ficoms
cwtl
jp
push
sbb
pop
jnp
out
fisubrs
mov
fsubrs
in
dec
cwtl
outsl
cmp
dec
arpl
mull
fcomps
fadd
fwait
mov
add
mov
sub
leave
add
test
js
cld
jns
nop
out
inc
dec
pop
xor
push
fwait
stc
pop
add
fisubrl
je
out
mov
push
sub
mov
scas
mov
fildl
jb
jecxz
sbb
sub
mov
sti
imul
pop
add
jnp
xchg
loopne
scas
dec
loope
pop
xor
out
jb
pop
pusha
mov
aam
or
xor
jbe
mov
ret
clc
mov
jb
mov
scas
pop
movsb
fadds
mov
jb
shlb
idiv
sti
andl
leave
or
in
mov
mov
dec
pusha
sbb
aaa
xchg
inc
das
les
xchg
push
fists
inc
es
and
pushl
shl
call
jmp
imul
cltd
sbb
imul
mov
adc
ret
xchg
xor
int3
jecxz
mov
push
mov
push
jmp
xchg
fwait
scas
sbb
xchg
adc
arpl
popa
insl
notb
push
jns
jle
mov
notl
cmp
loop
int
mov
xchg
sub
add
jno
dec
test
or
idivb
adc
sbb
inc
dec
xchg
push
adc
hlt
mov
jmp
pop
inc
push
test
fnsave
lock
xor
mov
jg
dec
push
fldt
mov
scas
arpl
dec
mov
test
add
sub
mov
fwait
scas
pop
pop
nop
out
fimuls
lcall
movsl
pop
cmpsl
and
clc
xchg
mov
leave
push
xor
jmp
xor
add
dec
xchg
inc
insl
hlt
adc
movsl
xchg
mov
add
repz
cmpb
stc
ds
xchg
xchg
xor
sbb
dec
add
xchg
mov
aam
mov
movsb
test
sbb
pop
add
into
fisubrs
pop
inc
shll
orl
pusha
bound
and
pop
or
pop
scas
test
xchg
aas
sbb
cmp
sub
mov
mov
lret
iret
jns
sti
mov
dec
enter
sub
ds
jge
ret
jp
fidivrl
cmp
inc
lds
adc
lea
mov
test
cmp
lret
push
dec
mov
andb
dec
aam
sub
pop
cld
ret
xor
test
fwait
mov
rorb
and
inc
lods
mov
jns
dec
dec
xchg
stos
jne
pop
pop
mov
iret
cmp
mov
les
js
cmp
test
cmpsl
movsl
cmc
mov
mov
outsl
mov
popf
and
mov
rolb
push
fs
or
mov
insl
aad
cmp
xchg
int
fisttpll
pop
test
add
mov
push
mov
push
cmp
sbbb
js
outsb
push
aaa
jno
sub
push
cmp
pop
sbb
jno
adc
clc
or
mov
pop
xchg
scas
dec
scas
movsb
sub
dec
aas
xlat
dec
sub
mov
push
mov
test
xor
sbb
cmp
pushf
fsubl
jo
ss
or
pop
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
mov
test
cwtl
mov
adc
mov
pop
jno
pushf
cmova
cmc
sub
push
lods
rolb
dec
ss
push
xor
inc
ljmp
repnz
push
mov
iret
xlat
jge
adc
idivb
or
sbb
sub
and
mov
cmp
testb
pop
ljmp
pushf
subl
sbb
movsb
jae
adc
mov
xor
in
aad
shll
aas
inc
inc
bound
add
jmp
cld
or
aad
pop
and
stos
add
insb
add
daa
mov
cli
jmp
add
shrb
dec
js
lods
mov
mov
pop
xchg
lret
popf
testb
xor
test
sbb
push
pop
test
cltd
xchg
adc
out
cmp
test
inc
lods
popa
cld
jecxz
rol
cmp
jmp
insb
jge
enter
aam
lret
jge
jl
incb
mov
xchg
push
push
jnp
ror
xchg
xchg
cmp
push
push
dec
jne
dec
cmp
add
arpl
cmpb
cmp
push
jp
daa
xchg
mov
pop
jns
ret
cmp
mov
jo
rcrl
sbb
repnz
jmp
jl
sbb
inc
daa
fldt
xchg
in
adc
movsb
mov
pop
fwait
das
in
shrb
xchg
test
pushf
pop
lret
add
ficomps
dec
dec
and
jle
sbb
xchg
cmpsb
cmpsb
in
and
pushf
xchg
xor
adc
push
dec
and
dec
push
movsl
xchg
mov
and
jl
insl
and
clc
sbb
int
jae
adc
jmp
push
cmpsb
popa
jl
jno
mov
enter
mov
sub
aad
pop
xor
ljmp
loop
xorb
and
dec
inc
cmp
hlt
xchg
jnp
in
add
addr16
xor
shrb
xchg
dec
outsb
sub
xchg
fstpt
sub
jl
mov
lea
lahf
lret
repnz
aam
enter
shr
rcrl
sbb
push
inc
hlt
mov
xor
xor
add
cltd
loope
push
dec
clc
mov
fadds
inc
ret
sbb
cli
cmp
inc
pop
call
popf
xlat
dec
enter
int
pusha
xor
jle
mov
stos
mov
sub
daa
jecxz
fistl
addr16
scas
and
aad
test
inc
xchg
or
dec
or
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
insb
sbb
adc
test
je
in
fimuls
aad
sub
cmp
sahf
adc
lock
out
push
data16
outsl
cltd
loopne
mov
mov
leave
fists
pop
or
mov
cmp
js
dec
sub
add
and
cltd
outsb
outsl
jmp
or
mov
ret
rolb
sub
push
push
jns
mov
sbb
pop
sti
lahf
xor
pop
add
les
pop
sub
jge
es
test
aaa
push
mov
das
mov
pop
int
sbb
push
dec
adc
xchg
arpl
daa
cs
call
loopne
or
leave
sub
xchg
jle
lret
dec
daa
test
popf
xor
or
add
fcomi
mov
ss
imul
repnz
mov
mov
ljmp
push
pop
jmp
add
test
pop
daa
jmp
arpl
lods
int3
cmp
jnp
in
js
xchg
popa
inc
notb
ss
int
stos
into
cmpsl
sub
in
daa
pop
sub
xchg
adc
insl
or
inc
cs
in
lock
jmp
dec
dec
pop
fidivrl
jbe
jmp
ret
inc
xchg
ja
out
mov
imul
cmpsb
adc
pop
mov
xlat
fcomi
push
pop
mov
xor
int
aad
cltd
hlt
mov
shll
lods
pop
sbb
cwtl
dec
sub
aaa
xchg
xchg
pop
orb
cs
popf
cs
cmpsl
sub
out
adc
sbb
repz
repz
sbb
out
cmp
test
or
lods
test
jae
mov
adc
pop
push
pop
jno
xchg
fwait
cld
jns
sbb
jbe
push
iret
xchg
sar
jne
in
in
insl
mov
cmpsb
mov
mov
rorl
or
and
inc
ljmp
pop
hlt
dec
cwtl
fdivrp
add
push
add
push
call
mov
cmp
xchg
mov
dec
mov
cli
out
mov
lods
sbbl
lock
repz
leave
xchg
dec
dec
pop
sahf
pop
fisttpll
xor
sbb
cmpsl
inc
xlat
sti
mov
xchg
enter
or
mov
pop
mov
test
adc
mov
es
push
js
in
xchg
mov
ljmp
popa
jp
cmp
lods
gs
repnz
je
idivb
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
aaa
adc
push
lods
adc
xchg
movlps
lret
sbb
xchg
sbb
mov
cmp
pop
scas
aam
inc
sbb
sub
mov
cmp
out
jmp
aam
sbb
push
test
jb
mov
sbb
cmc
in
pusha
cmp
ss
ja,pt
cltd
add
addr16
dec
lret
outsb
xchg
fwait
jno
shll
movsl
xorb
and
and
push
in
pop
aaa
fists
dec
ret
jnp
lsl
out
iret
pop
jae
or
test
imul
stc
xchg
mov
scas
insb
lcall
mov
shlb
bound
push
and
mov
imul
fcompl
inc
cli
push
js
scas
jge
mov
mul
push
stc
bound
add
stc
sbb
mov
decl
jg
addl
stos
xor
mov
nop
dec
scas
sub
lret
fldl
xor
jmp
das
push
inc
test
ffreep
icebp
sub
inc
mov
mov
sub
pop
adc
iret
stc
and
mov
das
mov
pushf
jecxz
push
add
inc
xor
and
imul
mov
mov
and
das
add
jp
sti
dec
or
popf
adc
dec
cmp
sbb
sbb
dec
enter
xor
xchg
arpl
out
mov
scas
push
push
xchg
push
jo
mov
rorb
outsl
js
push
popf
or
sti
movsb
mov
hlt
lcall
push
sti
pop
xchg
or
or
shlb
movl
ds
and
and
js
jbe
test
mull
clc
dec
jo,pn
loope
fs
xor
pop
mov
jle
push
lds
pop
bound
in
scas
add
fisubrl
mov
clc
cmc
and
mov
loop
add
add
jecxz
loop
jl,pn
gs
mov
loop
mov
fs
cmp
push
addr16
dec
mov
scas
mov
cmp
push
cwtl
mov
cmc
arpl
inc
in
jae
inc
mov
pop
ss
add
fidivl
dec
xchg
jae
outsb
and
mov
leave
call
push
jl
popw
push
adc
js
xor
aam
mov
xchg
rcll
movsl
sbb
xchg
push
cmp
out
push
jnp
jg
lds
in
add
dec
mov
cmpl
lods
jno
ret
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
mov
adc
mov
sbb
loope
outsl
ror
aas
sub
or
xlat
fpatan
mov
lahf
dec
mov
mov
lea
dec
aas
add
and
add
aad
mov
clc
mov
jge
cmpl
rorl
ss
ss
jns
je
xor
add
cmpsb
outsb
push
jl
mov
es
cmpsl
mov
xchg
adc
clc
int3
xchg
pop
mov
jae
pusha
pop
lret
data16
cltd
jne
inc
je
add
loope
push
lods
mov
and
clc
and
cli
sub
cmp
ret
in
imul
xchg
jle
cwtl
fstpt
fsubrl
stc
sbb
xchg
jbe
mov
imulb
movsb
outsl
and
cltd
xchg
cmp
adc
rolb
pop
xchg
mov
jae
mov
ljmp
pop
in
rorl
jl
mov
imul
mov
popa
mov
outsl
mov
add
push
xchg
adcl
popa
add
fwait
inc
cld
jmp
bound
mov
mov
pop
sub
rolb
pop
jmp
xchg
push
push
mov
inc
arpl
inc
dec
stos
std
sub
stc
mov
out
inc
je
loope
mov
and
out
cmp
add
cmpsl
movsl
addr16
iret
ljmp
sub
fdiv
pop
inc
mov
fisubrs
in
push
roll
movsb
fstl
orb
mov
and
bound
lock
inc
mov
test
xchg
jae
pop
stos
and
push
test
repz
cmp
pop
pop
jg
mov
fdivl
jne
movsl
leave
mov
cld
negb
gs
mov
fs
dec
ss
inc
mov
mov
adc
mov
push
xchg
jno
adc
sti
push
fidivl
mov
mov
mov
bound
cmp
pop
pop
mov
lret
dec
xchg
and
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
insl
mov
adc
sbb
pop
and
in
xlat
mov
pop
icebp
adc
push
push
jns
cmp
notb
movb
mov
mov
gs
ret
adc
roll
push
xor
dec
sti
dec
sarl
pop
jae
iret
sbb
cmp
data16
loopne
push
jecxz
scas
adc
addb
iret
jg
inc
adc
sbb
addr16
out
sti
or
xchg
or
sarl
sahf
loop,pn
das
pop
push
sbb
int3
je
add
test
or
add
jne
adc
rcrl
mov
mov
adc
test
cmc
push
sbb
cmp
push
movsl
in
ret
testb
cwtl
jl
outsl
and
cltd
aas
jnp
or
je
xchg
adcl
aam
mov
add
loopne
mov
mov
enter
adc
cs
arpl
mov
xor
inc
cmpb
mov
loope
and
xor
push
fimull
mov
sbb
mov
mov
sbb
nop
insl
add
call
sbb
cmp
and
outsl
out
pop
into
popa
inc
lret
pop
jmp
lods
lahf
jp
arpl
mov
sbb
stos
stos
mov
or
outsb
out
popa
push
dec
psrad
push
xchg
mov
hlt
je
mov
iret
loope
bound
pop
cltd
push
or
idivl
jle
stc
sbb
movsb
fs
add
repnz
fcoml
adc
aam
sbbb
cmp
ret
push
cmp
in
scas
bound
in
sub
xlat
addl
aam
mov
aam
fsts
lea
incb
inc
nop
jg
adcb
mov
fwait
lea
pcmpgtw
icebp
out
jb
mov
add
push
cmp
xlat
xor
xchg
and
push
aas
xor
jno
les
ja
cmp
xor
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
inc
jo
pop
fwait
adc
mov
loop
loopne
lahf
faddl
jg
push
cmpb
stc
xchg
popa
inc
sbb
aas
cmp
int3
adc
lods
sbb
dec
pop
mov
xor
sub
out
or
add
out
xchg
mov
pop
subl
add
lods
jo
jnp
adc
jg
loope
jbe
inc
add
repz
mov
cmp
setb
xor
out
push
push
repz
push
in
mov
mov
subl
sahf
mov
dec
pop
or
adc
das
mov
xchg
cmp
nop
movsl
lret
cs
insb
enter
test
mov
mov
popa
aad
cwtl
mov
push
test
clc
shll
shll
fistpll
adc
knotw
sub
movsl
add
adc
dec
shl
rcr
js
leave
dec
adc
insb
fcom
or
sbb
jno
cmp
cmpsb
fnstsw
jg
inc
add
pop
jne
dec
shlb
pop
fistl
in
jbe
fsubs
mov
xchg
xchg
cbtw
push
popa
test
xor
out
ja
push
push
cmp
lahf
mov
sub
push
add
mov
add
sub
and
sub
shlb
adcl
rcpps
inc
lea
push
or
push
xor
dec
inc
sub
push
das
ljmp
mov
mov
sarl
and
mov
out
cli
stos
cmpsb
into
mov
push
rolb
ja
dec
dec
push
je
push
add
fs
orb
jbe
push
ljmp
xchg
pop
jge
inc
mov
stos
incb
pop
test
mov
cmp
shrl
xlat
mov
decl
pop
inc
inc
and
and
popf
lds
mov
sbb
inc
aam
stos
in
das
lret
and
int
aaa
inc
bound
xchg
inc
sub
pop
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
inc
stos
negl
adc
test
insb
sbb
cmp
call
mov
mov
sbb
mov
cmp
push
pop
push
sbb
test
mov
cmpl
adc
cmp
xchg
mov
push
adc
xor
jmp
out
iret
mov
cwtl
aam
jae
jmp
sbb
add
or
inc
iret
cltd
stos
sbb
fistpl
fld1
dec
xor
jl
stos
sub
jg
inc
adc
xor
xor
or
in
cmp
xchg
es
loop
in
in
in
call
popf
xor
cmp
loopne
pop
sub
into
popf
bnd
xchg
xlat
mov
mov
add
jo
add
sub
add
push
stos
jo
mov
xor
sub
mov
mov
or
xchg
or
les
sarb
inc
in
mov
pop
add
sbb
push
in
push
jae
pop
std
sub
stos
pop
clc
mov
in
adc
pushf
insb
insb
cmpsl
fiaddl
mov
xor
push
in
std
mov
mov
pop
arpl
movsb
es
cmp
adc
fs
xchg
lock
test
aaa
leave
int
sub
ds
jl
addr16
push
pushf
xchg
push
repz
mov
xchg
jae
dec
aad
icebp
push
hlt
mov
das
or
cmp
pop
jnp
jae
sub
jnp
js
mov
add
cld
mov
push
sub
jnp
ret
test
dec
in
movsb
mov
cmp
and
inc
movsb
pushf
jns
out
ja
int3
mov
insl
stos
pop
jmp
mov
mov
xor
shrl
rcl
pop
dec
movsb
dec
test
jle
inc
push
mov
out
test
sub
int3
adc
ss
mov
loope
jge
int3
cmp
or
insl
pushf
dec
xor
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
lea
push
sahf
xchg
adc
pop
adc
adc
idivb
mov
mov
lahf
into
aad
pop
sbb
jmp
scas
jle
jecxz
add
cltd
bound
ja
pushf
loop
and
push
out
enter
sub
xchg
inc
in
push
lea
outsb
add
push
popa
add
sbb
shlb
inc
mov
add
idivl
jno
push
ret
xchg
or
push
dec
xchg
out
inc
es
data16
add
in
push
fdivrl
mov
sbb
in
xchg
imul
in
mov
pop
fisubl
sarl
push
xchg
cmp
stc
add
push
or
movsb
cmp
or
mov
cs
cmc
adc
add
inc
test
leave
xchg
dec
sub
push
add
loope
ret
leave
cltd
int
or
add
push
pop
xor
push
out
aas
movsb
outsl
fidivrl
cmp
aaa
and
push
dec
sahf
call
lret
testb
cmp
jnp
mov
sbb
movb
xchg
mov
rcl
outsl
out
sahf
out
or
mov
inc
xchg
push
mov
int3
hlt
mov
sub
add
and
loop
lock
mov
dec
mov
sbb
sbb
jmp
cli
or
or
or
pop
inc
outsl
mov
call
fistpll
fs
mov
test
subb
push
fisttpl
mov
lahf
test
jle
sub
mov
xchg
cwtl
mov
and
mov
sub
xorl
out
es
cmp
insb
scas
xor
and
repz
dec
and
fisttpll
sbb
data16
jp
aas
fcmovnbe
mov
jbe
sub
idivb
mov
and
aam
sarl
pop
bound
clc
push
adc
outsb
or
loop
cmp
mov
mov
adc
jl
dec
mov
pop
test
jnp
add
loope
mov
lcall
jp
push
mov
data16
scas
mov
ret
jno
vpsubusb
imul
and
aaa
sbb
xor
adc
dec
xchg
cli
sub
jno
sbb
sbb
fsubrl
mov
push
aas
jne
insb
mov
cmpsl
dec
sti
sarl
xchg
icebp
mov
push
flds
dec
xchg
mov
inc
dec
xor
push
inc
arpl
xorb
and
cmp
jb
mov
inc
push
jno
cmp
pop
cmc
in
out
jp
sub
hlt
mov
int3
mov
dec
xor
cmpsb
fnstenv
xchg
shll
fs
mov
clc
rcr
push
sahf
mov
inc
fstpt
sub
cmp
imul
mov
dec
lods
push
lret
ljmp
mov
add
jb
or
addb
loop
sbb
mov
mov
leave
sbb
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
cmp
adc
pop
adc
adc
insl
add
and
mov
lock
roll
push
int3
nop
mov
rolb
es
sbb
dec
aad
pop
push
mov
sbb
les
mov
enter
sbbl
test
jo
mov
sub
and
out
test
dec
subl
test
out
adc
sub
or
cmp
in
xor
imull
xchg
cmp
add
inc
in
pop
jae
and
jmp
or
cli
shll
dec
popf
adc
test
fnstcw
mov
xchg
data16
addr16
sbb
loopne
rol
lret
and
enter
data16
mov
dec
mov
push
sub
jmp
mov
push
jbe
dec
test
cmp
push
adc
test
jmp
adc
mov
jb
shrl
mov
ss
mov
ds
fimuls
jecxz
das
jnp
xchg
cwtl
bound
mov
scas
sbb
xchg
shl
cmp
cmp
out
mov
sbb
inc
adc
fisubs
dec
jne
jns
repnz
push
js
inc
ljmp
mov
out
shll
jb
aad
std
xchg
sub
adc
ficoml
mov
cltd
push
movsl
stos
inc
sbb
arpl
loop
cmp
jg
mulb
iret
pop
scas
mov
adc
sub
pop
outsl
adc
leave
sbb
dec
lret
dec
or
arpl
push
sub
push
lret
aaa
cmp
mull
pop
cli
mov
sub
and
sub
mov
xor
fdivr
pop
mov
xor
xchg
inc
cmp
push
sub
jecxz
cmpb
mov
sbb
mov
pusha
sbb
cmp
or
lds
jne
cmp
add
cmpsb
cmp
cld
mov
push
rol
imul
sub
imul
mov
inc
sub
scas
pop
mov
jmp
jno
cwtl
adc
shlb
add
sub
std
adc
stc
fidivrl
imul
sub
ret
out
push
sub
sub
jns
negl
and
mov
movhps
es
cwtl
sub
ja
sub
sti
adc
or
xchg
cmc
out
push
out
jbe
out
mov
mov
fstps
cmc
gs
sbb
xchg
loope
out
push
cmpl
cmp
lret
das
fdivr
outsl
nop
lretw
enter
jb
xchg
or
lcall
push
dec
movsb
je
cmpsl
xor
add
sub
dec
cmovl
sub
cltd
int
inc
sbb
push
les
hlt
push
mov
push
mov
je
dec
outsl
nop
dec
push
and
fistpl
ljmp
jns
test
sub
loopne
insb
mov
nop
fisttpll
fiadds
pop
mov
pushf
jae
les
inc
adc
or
sahf
jl
mov
repz
mov
mov
ja
cwtl
js
aam
cmp
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
fs
adc
adc
xor
jne
or
insl
gs
out
jns
shl
jno
and
data16
and
cmp
inc
loopne
in
cli
pop
add
pop
mov
hlt
push
pop
scas
add
jnp
clc
fnstsw
in
xchg
jb
adc
push
das
stos
std
jbe
add
add
popa
sub
lock
dec
inc
jno
adc
mov
adc
pop
clc
cwtl
das
adc
dec
dec
incb
mov
ss
out
mov
pop
in
fs
loop
cwtl
cmpsl
sub
das
or
arpl
mov
adc
pusha
roll
cmc
aam
dec
sahf
push
imul
jl
xor
pop
sbb
imul
ds
icebp
sbb
xchg
mov
shl
pop
cltd
sub
sub
push
inc
lods
subb
push
lret
jbe
dec
add
jnp
test
or
insl
jmp
fcmovnu
inc
add
sub
arpl
mov
scas
rcl
mov
mov
mov
add
pushf
dec
push
fbld
call
mov
jp
fstpl
or
or
pop
in
dec
lahf
adc
je
test
es
or
add
data16
dec
pushf
jae
das
pop
ss
dec
movsb
cmpsl
idiv
and
arpl
inc
adc
and
aam
cmpl
inc
and
pop
fistl
fsub
inc
pop
xchg
and
pop
fmull
sub
push
mov
lods
aad
ja
lods
das
add
cmpsb
iret
mov
jmp
cmp
sub
aas
lret
push
icebp
stos
pop
dec
clc
cmpsl
mov
dec
popa
stos
dec
pop
jno
xchg
cmp
out
ss
cli
jne
rol
and
or
test
aam
inc
je
adc
or
mov
jg
les
adc
and
cmp
inc
outsl
jb
rolb
cli
arpl
popf
mov
out
test
cmpsb
xchg
bound
mov
shlb
int
pop
xchg
out
hlt
movsl
test
jo
fwait
into
fstl
push
xor
and
leave
mov
sahf
les
jge
repnz
push
fcompl
xlat
jnp
ja
mov
push
out
push
in
xchg
jecxz
inc
sbb
pop
jns,pt
add
sarb
fldl
repz
xor
mov
sbb
xor
jbe
inc
xchg
fdivp
fwait
scas
jmp
add
push
adc
nop
xorb
sbb
jp
mov
pop
sub
sub
xor
sti
mov
mov
movsb
pop
mov
decb
mov
shl
mov
imul
cwtl
dec
movsb
data16
xor
pop
xchg
inc
movsb
xor
ds
xchg
pop
xchg
mov
cltd
jp
dec
movsb
scas
adcl
imul
xchg
pushl
cmp
es
fildl
fistps
xchg
xor
adc
in
cmpsl
rclb
ficomps
lcall
int3
jne
xor
inc
push
adc
pop
and
ss
repz
adc
sub
add
js
mov
mov
decl
cmp
add
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
mov
pop
adc
adc
mov
and
jns
add
ret
sbb
adc
inc
mov
rcrl
add
jmp
dec
mov
xor
stos
mov
aad
pop
jno
aaa
lea
cltd
js
loop
fwait
sbb
sbb
lock
fwait
lods
loope
dec
lods
cmp
out
cld
shr
mov
push
or
rcll
cmp
xchg
les
jno
pop
in
pusha
sub
mov
in
inc
cmp
iret
insb
fsubrs
daa
dec
mov
mov
ljmp
cmp
aam
mov
fisubl
sbb
faddl
std
fsubs
xchg
divb
push
jno
dec
imul
mov
into
jle
and
fsubs
bound
scas
push
icebp
popa
dec
cli
jae
mov
pop
int3
mov
mov
mov
push
inc
mov
lods
sbb
andl
cmpsb
in
bnd
mov
lahf
push
pinsrw
push
sbb
movsl
shl
sub
mov
mov
mov
push
mov
ja
test
notb
sub
sub
pop
jae
push
push
sub
cltd
mov
xor
add
shll
jmp
adc
sbb
dec
mov
xchg
clc
fnstcw
inc
jmp
test
stc
js
add
lcall
adc
add
enter
jb
dec
aas
aad
cltd
jb
pusha
enter
mov
sbb
cmp
jmp
mov
in
push
xor
imul
cmp
sub
andl
gs
sbbl
dec
movsl
adc
outsb
pop
cltd
jecxz
xchg
adc
mov
cmpsl
pop
ja
repnz
loope
push
fidivs
dec
mov
outsl
les
das
dec
sbb
xor
mov
jae
pop
jno
mov
shll
outsb
shll
mov
push
insl
mov
mov
inc
rcl
movsl
pop
cmp
fwait
pop
xor
ret
scas
sub
push
pop
jmp
movl
push
add
dec
pop
popf
rclb
pop
cmc
jns
cwtl
das
xlat
and
stc
repnz
push
cltd
mov
push
ljmpw
mov
xchg
pop
pop
inc
fimull
cltd
or
mov
jmp
or
pop
jmp
jmp
insl
dec
rorb
mov
repz
js
subb
cmp
ret
add
adc
jo
test
pop
ret
sbb
outsl
jle
or
faddl
shlb
dec
aaa
push
jae
test
fwait
xchg
mov
push
int3
ja
lds
fadds
dec
stc
jo
lret
and
inc
dec
dec
rcrl
insl
in
les
jl
cli
pushf
das
dec
pop
cltd
fmuls
std
daa
pop
ss
sub
push
std
jecxz
adc
nop
dec
sub
dec
and
xor
scas
cs
out
mov
jl
push
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
sarb
adc
adc
inc
pop
loop
icebp
loop
and
fbld
inc
push
or
out
mov
dec
jecxz
rcr
rcr
cmp
in
test
pop
dec
movsl
pop
lods
ja
jno
push
jae
out
cmpsb
aas
dec
mov
jecxz
push
adc
mov
pop
adc
outsl
cmp
mov
and
mov
cmp
insl
xchg
jmp
rolb
inc
outsb
sub
mov
sbb
xor
lret
pop
mov
sub
mov
icebp
mov
mov
mov
popa
jnp
inc
pop
out
cmp
dec
stos
inc
mov
jnp
loopne,pt
and
fmul
in
dec
jmp
outsl
clc
mov
test
pop
lods
sti
mov
adc
xchg
imul
fisubl
adc
jmp
movsb
mov
imul
test
push
jecxz
call
mov
cmc
lock
sbb
add
lahf
aaa
jg
pop
rdmsr
and
adcb
das
in
lods
xor
push
arpl
jo
popa
jle
outsb
inc
aas
push
sarb
add
jmp
fwait
xlat
out
fcom
aas
lods
dec
push
movsl
pusha
lods
es
mov
add
test
xor
sub
mov
sbb
adc
pop
cmp
push
xor
lret
out
adc
out
inc
mov
minps
sbb
and
mov
mov
jnp
mov
aaa
fstpt
mov
daa
scas
js
iret
cwtl
push
xchg
and
hlt
adc
mov
cmpsl
mov
cld
int3
ret
jae
rcrb
add
xchg
lret
mov
int
in
movsb
xchg
jae
pop
jo
mov
lock
lahf
lea
repz
and
in
idivb
out
inc
dec
and
es
leave
lret
mov
sub
aam
cs
mov
jnp
or
mov
add
sub
mov
push
push
push
fisubrs
mov
inc
sbb
movsl
loopne
bswap
sbb
sub
cmp
addr16
out
and
int3
push
out
xor
or
test
adc
push
rorl
popf
mov
adc
add
sub
popf
cwtl
mov
jge
aam
mov
adc
mov
and
xchg
mov
cmp
pusha
shrb
lret
adc
mov
jmp
int3
lahf
mov
stc
mov
jmp
push
add
movsw
in
push
loope
adc
test
out
sbb
sbb
movsb
ret
les
sbb
in
mov
sbb
std
jne
and
pop
icebp
sahf
pop
adc
cmp
add
lret
xchg
dec
jge
inc
pushf
fcomps
jno
jbe
insb
aad
dec
xor
jne
dec
sub
lret
lret
push
test
iret
xchg
mov
push
inc
and
jle
cmpps
add
sbb
cmpsb
fistpl
ret
dec
daa
xor
ret
dec
or
mov
roll
leave
adc
push
sahf
push
dec
sub
cmp
js
fisttps
aad
mov
in
inc
add
add
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
inc
lcall
pop
adc
adc
lds
test
jne
sbb
icebp
jnp
or
call
cmp
data16
xor
xchg
cld
add
lret
movsb
dec
std
xor
std
jae
pop
aad
inc
adc
add
and
fwait
push
pop
nop
inc
jge,pt
mov
mov
add
dec
mov
dec
das
xchg
stos
out
insb
loopne
cmp
mov
sbb
or
cmp
jb
in
out
jl
and
jae
inc
push
pop
orb
leave
clc
loop
and
sub
fsubs
mov
ficompl
loope
ss
sbb
movsb
bound
into
es
add
pop
in
ret
imulb
ja
adcb
mov
cmp
cmc
test
add
pop
jmp
je
pop
sub
jle
add
sbb
std
mov
iret
jno
jle
inc
popa
mov
jg
push
cwtl
inc
test
push
repz
fldl
icebp
sub
sub
jmp
loope
orl
mov
mov
aas
test
int3
jmp
sbb
insb
aaa
cmpsl
ljmp
testb
addr16
lret
add
or
push
enter
mov
adc
sub
gs
ljmp
push
jle
push
push
lods
jb
sub
sub
sti
out
sbb
add
je
andl
or
add
adc
or
scas
cmpsl
jmp
xchg
vucomisd
cli
dec
nop
adc
mov
mov
in
add
js
or
xchg
sbb
and
sub
movsl
dec
mov
mov
scas
shr
cmp
pop
pop
fcomps
fadds
adc
bound
call
mov
lea
lock
dec
xlat
iret
inc
cwtl
fcompl
inc
out
push
shll
std
sbb
scas
push
loopne
fistl
int
and
je
mov
pushf
xor
cmp
dec
rcr
inc
inc
decl
mov
sbb
or
leave
adc
cmp
stos
jne
mov
ffree
inc
jecxz
jecxz
je
mov
cmp
adc
stos
int
aam
sahf
cmc
cmp
into
xor
mov
xchg
mov
sbb
mov
cwtl
rorl
xor
xor
mov
call
mov
cmpb
mov
addr16
or
jo
adc
sbb
lret
add
push
xor
push
outsb
cmp
jge
pop
mov
jo
repnz
xchg
loope
mov
les
in
add
ds
add
insb
dec
xor
mov
mov
into
cmp
or
loop
mov
push
sarb
mov
jbe
enter
mov
or
mov
sbb
jnp
push
je
aam
jne
pop
test
int
popa
sbb
lfs
sub
cmpb
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
push
xor
mov
xlat
das
inc
mov
fmul
data16
sub
adc
or
pop
push
xchg
stos
mov
sbb
jbe
xchg
or
pop
xchg
mov
mov
pop
push
and
and
scas
xchg
int3
mov
cli
out
xchg
sbb
aad
sbbl
test
imul
lds
stc
es
rclb
lds
xchg
cltd
cmpsb
push
mov
push
dec
cmp
les
jmp
xchg
out
clc
push
cmp
push
loop
push
jge
push
sahf
shr
xchg
add
sti
push
jnp
dec
or
scas
mov
fisttps
daa
sti
fnstsw
ljmp
fdivr
bound
clc
lcall
subl
imul
mov
ds
stc
pop
sbb
jg
daa
stos
gs
push
sub
sahf
pop
outsb
xor
adcl
dec
gs
outsb
pop
jne
repz
loopne
push
and
int3
adc
jns
fidivrl
leave
dec
push
cli
mov
jne
out
dec
cmc
pop
das
pop
aas
mov
mov
aaa
pop
dec
pop
fisubrs
dec
in
mov
fsubp
rcl
dec
mov
sub
pop
jbe
push
cmp
cmovge
xor
cmc
clc
xor
sahf
popa
xor
fnstsw
sbb
ljmp
les
imull
xchg
test
push
clc
mov
adc
jmp
imul
int3
js
sub
popf
push
mov
movsb
in
lret
scas
and
pop
xor
lahf
mov
imul
scas
push
into
add
popa
enter
addr16
dec
insl
ja
dec
out
xchg
jns
fisubrs
cmp
fst
aaa
enterw
xchg
mov
mov
cli
rcll
lcall
lahf
add
fiadds
aas
cmp
jmp
xor
ds
loop
nop
inc
mov
sub
negl
int3
cmp
stc
fsts
in
sub
lock
adc
in
ss
jl
or
loope
movsl
lea
jae
xchg
and
fmull
push
adc
jl
xor
sahf
lods
cmc
movsb
jnp
js
mov
mov
pop
add
xor
sbb
pop
cmp
shrl
ficompl
mov
pop
inc
nop
add
mov
push
imul
dec
fs
inc
pop
int
jne
cmp
and
movsb
je
inc
in
dec
lcall
mov
sub
scas
sbb
ja
pop
sbb
and
dec
add
data16
jecxz
test
cmp
scas
jae
push
test
dec
add
daa
add
iret
mov
pop
cmp
fldcw
shl
repnz
test
out
pushf
push
sbbl
pushf
push
sbb
push
push
jge
jmp
xor
cli
adc
jne
sbb
lcall
loope
cwtl
mov
inc
test
leave
int
repnz
cmp
popf
sbb
sbb
inc
sub
pop
scas
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
xor
adc
pop
adc
adc
data16
cmp
mov
mov
pop
imul
push
mov
mov
call
cwtl
sbb
dec
addr16
mov
fcmovnbe
push
loope
push
mov
jg
or
mov
in
push
push
out
pop
idivb
addb
jns
adc
or
out
mov
sub
das
scas
and
popf
out
mov
iret
and
add
inc
dec
jns
jecxz
popf
and
incl
dec
daa
mov
in
enter
push
xor
imul
shl
mov
inc
in
mov
out
sbb
pushf
inc
dec
jge
pop
arpl
cmp
cmp
xor
in
mov
mov
hlt
fcomp
cli
ret
sbbb
xor
dec
jge
dec
in
adc
lock
repnz
xchg
loopne
cmp
pop
shrb
cltd
xor
fldcw
cmpsb
insl
cwtl
sahf
outsb
popf
mov
or
jle
or
sbb
add
dec
or
movsb
movsb
inc
std
sub
mov
jbe
ljmp
and
fs
dec
xor
dec
stc
out
lcall
mov
out
jae
adc
ret
hlt
movsb
cmp
pop
sub
jmp
test
cmpsb
jmp
mov
clc
push
ret
test
jl
sub
mov
push
xor
cmc
xor
or
stos
imul
hlt
inc
cmpsb
test
jle
or
pop
fs
jle
mov
add
repz
sbb
xchg
adc
mov
xchg
push
shll
mov
sub
outsb
or
xlat
popa
mov
or
ds
inc
xchg
dec
mov
lcall
icebp
mov
mov
push
mov
cmp
and
shlb
sub
add
inc
xchg
jecxz
cli
iret
lcall
ret
mov
and
lock
and
sbbb
lock
aad
stos
sbb
test
jae
das
mov
adc
mov
jnp
cmc
or
in
pop
repz
lods
insb
and
sub
pusha
cmp
jno
sub
xchg
xlat
inc
neg
add
std
cmp
negl
cmp
fnstenv
cmpsb
jne
out
insb
shll
fwait
xchg
rorl
dec
cmp
stos
dec
fstps
aam
or
das
adc
mov
into
jecxz
std
push
dec
inc
fisubl
repnz
test
dec
mov
sbb
outsb
lret
insb
jns
hlt
and
inc
dec
cmpsl
xor
cmc
mov
ds
jecxz
dec
and
rorl
scas
std
jp
dec
xchg
scas
fisttpl
insl
jae
lods
scas
xchg
pushf
mov
or
test
adc
mov
rorl
or
leave
into
mov
sbb
mov
stc
jge
test
sbb
imul
repz
and
repnz
cmp
xchg
scas
incb
dec
fdivrl
jno
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
leave
call
adc
pop
adc
adc
mov
and
add
enter
cld
push
cmp
test
adc
sti
dec
mov
daa
jmp
inc
icebp
pop
repnz
adc
sub
sub
repz
xor
or
jmp
lcall
addl
inc
jle
dec
adc
loopne
adc
xchg
and
jb
add
int
ds
jno
inc
loop
rorb
scas
repnz
divl
sbb
push
ret
jl
stos
pushf
rcll
mov
mov
daa
aas
loopne
mov
push
out
xor
jno
mov
push
mov
sbb
add
xor
iret
loopne
jo
jb
out
and
push
pop
mov
jecxz
sub
or
outsb
xchg
xor
leave
imul
dec
adcb
int3
dec
pop
imul
pop
sbb
sbb
mov
fistps
insl
pop
loope
shl
popa
or
popf
lock
imul
inc
into
insl
inc
gs
test
icebp
jne
inc
jo
adc
ss
cs
lret
in
cmp
mov
cmp
ja
sub
xor
js
test
std
push
outsb
add
es
es
cmp
insb
cwtl
dec
ja
adcl
lahf
pop
inc
fnstcw
push
fnsave
fdivl
adc
sub
xchg
test
xchg
sub
rolb
dec
jno
nop
xor
mov
std
mov
mov
lahf
sub
scas
in
outsl
addb
bndldx
imul
inc
in
clc
sbb
sar
xorb
lret
mov
pop
popf
lock
mov
int
in
push
jae
insb
xlat
mov
pop
jbe
and
or
xchg
or
mov
push
inc
mov
pop
mov
sub
mov
adc
imul
rorl
adc
stos
int3
xchg
mov
pop
add
repnz
mov
sbb
shll
in
inc
js
mov
add
cmpsl
stos
dec
or
sbb
mov
ja
mov
test
or
adc
xchg
dec
dec
cli
jmp
lods
mov
jecxz
fisttpl
lahf
adc
mov
out
out
mov
mov
mov
cmpsb
andl
lret
cmp
mov
loopne
repnz
in
repnz
pop
fnstsw
xor
pop
pop
xor
mov
jmp
lret
outsl
int
lret
dec
lock
lds
and
mov
nop
adc
jle
enter
sti
xor
or
je
out
jns
sub
out
cmc
ljmp
sub
daa
xchg
in
pusha
test
jbe
add
loopne
rol
std
data16
divl
hlt
sbb
shl
les
sarb
int3
cmp
repz
push
sbb
mov
and
mov
in
out
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
xchg
push
adc
pop
adc
adc
loope
insl
lret
test
mov
aaa
test
xor
inc
lret
mov
mov
loopne
add
nop
xor
inc
movsl
sbb
sub
push
out
and
loope
cli
mov
imul
push
sub
sub
jno
mov
les
xchg
sub
mov
mov
push
and
jno
or
sahf
fisttpl
mov
add
push
js
leave
les
les
mov
fists
pop
jbe
cmp
cmp
mov
rclb
inc
aad
fcompl
fcomps
xor
cli
daa
mov
xchg
xchg
shll
lahf
pop
cli
nop
daa
lods
push
aad
adc
sbbb
fcmovnbe
fucom
imul
stos
or
mov
loope
fidivrs
mov
insl
or
cmc
inc
dec
lret
xor
mov
ret
push
mov
lret
mov
idiv
arpl
add
mov
lcall
xchg
cmpsb
adc
mov
aam
fs
sub
xchg
stc
shll
bound
dec
sti
push
dec
mov
mov
jge
push
push
mov
sub
loop
outsl
fsubr
cmp
nop
sub
out
rorl
ss
inc
icebp
cmp
popa
gs
adc
ja
cmp
mov
and
enter
xchg
and
push
stos
loop
fsts
fs
testl
js
cmp
cmp
pushl
dec
sbb
mov
push
jg
cwtl
dec
ret
and
push
or
icebp
fwait
push
cmc
xor
stos
mov
es
in
in
mov
dec
push
xor
outsl
sub
jae
movsb
es
mov
sbb
js
mov
cmovnp
or
movsl
sbb
out
jge
lfs
sub
add
scas
lods
std
mov
movsl
int3
jbe
std
lods
fimuls
loopne
das
loop
mov
and
xor
sub
ficompl
nop
cmpsb
mov
cmpsl
push
pop
insb
subb
aam
cld
imull
add
jns
addl
call
cltd
xor
push
xor
jnp
leave
aam
mov
test
dec
ficompl
insl
in
fsubrl
xchg
fs
bnd
cmp
popa
mov
push
fcompl
fisubrs
jl
jmp
sbb
das
aam
add
pop
or
push
xchg
cwtl
imul
jl
out
xlat
fistpl
cmp
pop
mov
in
cli
inc
xchg
mov
pop
mov
test
pop
test
js
push
mov
mov
cmp
pop
sbb
call
fdiv
jb
js
cmp
jbe
loopne
movl
xor
rcll
pop
jne
sahf
push
cmp
pop
push
popf
in
jge
adc
adc
push
add
sti
jbe
xchg
inc
arpl
cmc
push
movsl
or
shrb
repnz
aas
jge
or
xchg
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
cwtl
lods
insl
dec
adc
pop
adc
adc
stc
xor
loopne
mov
cmpsb
repnz
test
das
jecxz
jbe
mov
subl
adc
daa
addr16
adc
push
xlat
add
int3
sub
aad
mov
xchg
push
and
cmpsb
movsb
xchg
mov
mov
xor
cmp
lods
cli
push
sub
pop
and
add
dec
cli
lcall
sbb
stos
jno
dec
adc
cmpsl
loop
inc
push
pop
inc
fstpl
inc
insl
or
mov
xchg
cmpl
dec
cmp
pop
sub
push
es
ret
jl
in
push
fwait
int
add
in
add
ds
mov
icebp
and
dec
scas
iret
jmp
push
pop
xor
add
dec
sarl
loop
and
bound
sub
jg
pop
ficoms
xchg
insb
jge
mov
scas
les
dec
mov
repz
mov
icebp
xor
mov
rep
jp
popa
mull
mov
add
sbb
aas
mov
jns
adc
cs
jmp
dec
sub
mov
cld
jns
or
cmc
es
fs
mov
pop
insl
pop
mov
jnp
iret
adc
je
mov
fidivl
pushf
cmp
sub
stc
and
pop
pusha
sub
aam
ljmpw
xor
mov
bound
inc
push
repnz
fmull
stos
add
sub
movsb
idivl
gs
icebp
and
test
mov
mull
sbb
stos
sarb
scas
pop
pop
or
sbb
xor
adc
jle
adc
mov
movsb
dec
inc
and
lds
and
mov
testl
in
sbb
icebp
xchg
les
mov
jecxz
pop
lahf
push
addr16
inc
pop
or
rorl
mov
push
inc
xchg
mov
push
or
and
adc
in
pop
jne
out
or
mov
xor
iret
and
movsl
inc
and
push
stos
rep
lahf
and
cli
sub
mov
dec
aaa
popa
aam
aaa
mov
cli
test
xor
dec
arpl
or
shr
mov
push
insl
mov
push
adc
iret
xchg
mov
addl
push
lock
gs
pop
push
mov
add
push
push
inc
bound
inc
ret
outsl
push
outsb
ret
jge
pop
mov
repnz
stos
sahf
in
jo
mov
push
loop
pop
out
and
jnp
pop
inc
addr16
bound
popf
push
sub
call
orb
out
sub
add
jo
mov
xor
pop
and
int3
es
gs
icebp
movsbl
div
jg
add
adc
into
movsl
adc
or
or
test
xchg
and
sbb
lods
dec
dec
movb
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
loopne
mov
adc
pop
adc
adc
dec
push
dec
orl
mov
xorl
in
sub
aad
dec
in
fldt
call
ret
into
adc
std
fs
push
bnd
repnz
stos
cmp
fsqrt
sbb
push
and
loopne
pop
jecxz
cmp
dec
sbb
pop
sub
mov
pop
mov
pop
testl
push
dec
aas
jecxz
nop
and
lcall
mov
cltd
adc
pop
jno
icebp
sub
adc
jmp
add
push
mov
or
fidivl
dec
inc
cmp
mov
pop
inc
stc
jge
jmp
ljmp
fs
adc
and
cmpsb
out
adc
testl
clc
jmp
sub
xlat
lods
loop
ljmp
daa
mov
mov
push
mov
pusha
jp
inc
pop
cmp
int
inc
lahf
adc
mov
loopne
sbb
adc
xor
cltd
mov
out
out
out
xlat
jmp
enter
mov
lds
and
std
les
lds
xor
xlat
cmp
dec
mov
outsl
jns
jg
add
out
scas
sbb
xlat
pop
paddq
add
push
adc
mov
bound
je
pop
xor
xchg
int
inc
arpl
fsubr
and
inc
mov
xor
fiadds
or
add
call
push
add
pop
repnz
and
test
add
adc
out
xchg
fsin
xchg
daa
cwtl
or
inc
mov
add
out
testl
std
push
mov
dec
insb
cmc
mov
add
mov
shl
mov
dec
call
or
aad
bnd
and
dec
sarb
loop
mov
mov
push
lahf
cmpl
jmp
push
scas
pop
mov
shll
adc
inc
cmp
pop
push
adc
mov
idiv
and
rcl
inc
mov
test
sub
mov
loopne
mov
arpl
cmp
fidivs
or
cmpsl
insl
or
mov
imul
jb
movsl
cs
xchg
xor
pop
mov
fistpll
dec
fsubl
rcrb
sarb
push
mov
outsb
sbb
ss
fdivrl
lea
lods
mov
lcall
or
imul
cmp
push
jae
mov
xchg
iret
mov
mov
cmp
sbb
cmc
and
sbb
adc
dec
sbb
jno
lret
rorl
orl
pop
test
sahf
or
xor
add
add
sti
scas
cmp
mov
pop
and
xchg
and
ret
push
xchg
and
push
hlt
test
std
cli
test
arpl
out
inc
addr16
sbb
sub
sub
pushf
cmpsb
arpl
movzbl
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
pop
enter
inc
adc
pop
adc
adc
pop
push
call
clc
clc
dec
lock
stos
jae
xor
mov
push
pop
stos
jno
sub
or
mov
xor
pop
lds
dec
ljmp
mov
imul
movsl
adc
rclb
movsl
sbb
nop
in
jo
add
sub
fs
imul
jl
and
pop
inc
inc
sub
not
repnz
pop
adc
inc
or
mov
xchg
pop
dec
rorb
out
jmp
movsl
adc
mov
shrl
fwait
pop
jae
into
sbb
shl
stos
call
outsl
outsb
aas
jno
out
cmp
add
or
add
xchg
mov
test
mov
clc
lcall
xor
or
rcrl
das
es
sbb
sub
pop
enter
aad
ja
xchg
loop
mov
xlat
xchg
scas
stos
xchg
pop
and
inc
or
jecxz
and
mov
insl
mov
fcomi
or
enter
jbe
pop
adc
pop
or
mov
add
ds
clc
scas
clc
in
sub
push
push
mov
mov
jle
pop
loope
adc
xor
rcr
xor
jnp
dec
outsb
xchg
pop
fldenv
cltd
sti
pop
mov
pop
mov
jae
jnp
dec
loopne
or
mov
mov
mov
sahf
push
adc
std
mov
dec
mov
cmp
lcall
icebp
testb
pop
or
adc
mov
mov
mov
sbb
pop
rorb
xor
dec
inc
outsl
jmp
lahf
jnp
xor
dec
xchg
and
add
in
push
mov
mov
cmp
mov
cmp
mov
lods
cmp
sbb
lock
xchg
loop
dec
sti
pusha
adc
add
cltd
or
je
sbb
out
jp
push
jmp
lret
jbe
push
dec
mov
push
cmpsl
adc
xor
mov
mov
mov
scas
orl
push
lock
fmull
mov
add
imul
mov
pop
ja
cmp
pop
fwait
lods
pusha
adc
in
les
push
cmpsl
mov
pop
test
pop
or
cmp
jp
mov
dec
stos
cmp
xchg
mov
nop
push
mov
addr16
ret
out
sahf
mov
inc
into
dec
push
inc
test
jecxz
xchg
scas
scas
bound
mov
inc
outsb
out
xor
xor
lea
push
lods
lock
arpl
push
ror
ljmp
int
ja
cmpsb
int
xor
sbb
leave
mov
jnp
icebp
dec
add
cmp
mov
daa
mov
lock
jne
jo
jb
cmp
inc
lcall
mov
pop
call
inc
arpl
adcb
outsb
mov
mov
mov
hlt
hlt
ret
adc
or
sbb
lods
loopne
push
xor
xchg
pop
dec
jno
loope
jecxz
inc
mov
dec
jns
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
cld
ljmp
lret
out
and
mov
cmp
ss
mov
or
jbe
std
and
or
push
iret
mov
lea
call
dec
mov
pop
gs
fs
sub
mov
mov
cmp
stos
sbb
sti
adc
loop
pushf
lds
or
push
mov
add
lods
out
sbbl
frstor
lret
dec
ret
or
xlat
fdivrl
repz
inc
and
fld
sbb
nopl
hlt
in
popa
adc
test
push
inc
fidivs
fdivrs
cld
popa
ficompl
mov
lcall
cmpsl
or
ficoml
push
aaa
pop
fists
test
adc
je
push
xchg
or
dec
addb
iret
inc
and
loopne
movsl
mov
popa
into
ja
fwait
movsl
jno
ret
in
dec
loop
aaa
push
les
jg
push
les
repz
ds
sub
pop
push
pop
dec
inc
mov
jne
push
pop
sti
mov
xchg
subb
push
add
jg
xor
repz
dec
xchg
ss
cli
loop
mov
mov
inc
aaa
out
dec
or
inc
xor
push
popf
imul
add
or
adc
or
mov
jge
inc
push
xchg
sub
outsb
jge
aad
cs
idivb
cmpsl
lcall
cmpb
lds
rolb
out
adc
test
lahf
xchg
adc
or
sarl
or
cwtl
push
int
cmpsl
pop
mov
xchg
push
xor
cmpsb
cmpsb
inc
inc
xor
pinsrw
pop
dec
orw
movsb
xor
hlt
mov
mov
fsubrl
add
mov
and
lret
mov
inc
repnz
loopne
les
scas
fildl
xor
leave
adc
inc
filds
add
orb
inc
jbe
repz
bound
fsubl
inc
xchg
in
dec
add
inc
rolb
fwait
enter
inc
mov
dec
lock
jmp
jmp
dec
fwait
outsb
daa
mov
js
jo
pop
imul
pop
mov
or
aam
push
push
add
mov
mov
jo
pop
adc
shlb
sbb
subl
je
xchg
jle
xchg
mov
dec
testb
xchg
or
ss
lods
cmpsl
jae
out
loopne
nop
pop
enter
and
jbe
add
xchg
add
ss
jl
add
test
loopne
mov
in
fldt
rcr
pop
and
push
cmp
lea
sbb
add
test
dec
pop
cmp
sub
in
sbb
inc
mov
mov
inc
and
sbb
lea
sbb
mov
mov
add
jne
imulb
cmp
and
movsb
or
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
imul
mov
sub
loopne
aas
pushl
push
dec
add
xchg
inc
lock
mov
mov
movsb
js
xlat
sbb
sub
idiv
cld
mov
cltd
cmp
movsl
dec
in
mov
add
xchg
push
pop
mov
and
out
jl
into
enter
cmc
ret
lret
fcmove
pop
or
scas
mov
fwait
ss
push
mov
cli
cs
jge
and
add
enter
leave
cwtl
pop
cmc
ret
lret
cmpsl
movsl
sti
cli
bnd
repz
mov
xchg
les
fsubl
in
cmp
imul
mov
rclb
outsl
enter
mov
das
mov
mov
fdivp
arpl
loop
insb
bound
mov
mov
negb
stos
stos
sbb
fdivl
xchg
sbb
dec
aam
scas
int3
jbe
cwtl
mov
es
cmp
mov
add
jp
movsl
pop
subl
cmp
pop
jge
mov
jmp
out
mov
mov
and
sar
out
push
push
test
sub
and
and
push
mov
lea
inc
popf
test
jecxz
ret
adc
xor
test
fsub
xchg
adc
xchg
or
fisubrs
mov
imul
or
das
negb
ljmp
mov
sub
inc
pop
inc
pop
add
pop
mov
inc
aad
gs
mov
dec
cmp
lods
push
adc
mov
sbb
jne
mov
dec
add
test
mov
fcomi
lahf
jl
add
fiaddl
out
xchg
sarl
ret
cmp
jmp
or
push
mov
sbb
sbb
pop
pop
cli
stos
fwait
loopne
mov
pushf
ja
fcoms
mov
xchg
fwait
push
sub
cltd
push
ds
lcall
cltd
cmp
dec
add
aaa
cmpsb
jmp
xor
jge
fcoms
mov
cmp
xor
fisttps
jge
or
fcompl
insb
sbb
cmp
push
shl
stc
das
fcomps
jno
ljmp
push
jge
lea
and
out
xchg
icebp
call
cmp
aad
xlat
or
daa
and
adc
jge
adc
ss
inc
stos
fildl
push
ja
and
daa
addr16
and
adc
mov
inc
sbb
sub
xor
jmp
or
insb
jns
cld
mov
stos
adc
andl
sub
cmovs
inc
and
mov
cli
fsubs
adc
fidivs
fcom
jmp
sub
incb
mov
xor
cmp
pop
test
and
es
mov
out
scas
sub
mov
push
leave
xor
cmp
pop
sahf
and
mov
adc
fwait
xor
adc
adc
cmp
mov
pop
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
lret
jle
xor
adc
adc
lock
add
dec
xor
je
add
jmp
add
push
popa
cld
mov
sbb
lret
aaa
in
imul
iret
mov
or
cld
push
icebp
je
mov
es
aad
lds
adc
jnp
pop
shlb
jp
sbb
push
movsl
test
mov
xchg
inc
imul
dec
in
add
test
int3
mov
aaa
dec
mov
lea
stos
cmp
inc
bound
insl
pop
rclb
mov
repnz
xchg
cmp
lock
cmp
int
cmp
and
popf
mov
cmp
add
jne
adcl
testl
popf
adc
rcr
out
sahf
pop
sbbb
xchg
push
sbb
push
inc
hlt
dec
jae
jp
mov
nopl
jns
dec
add
stos
mov
clc
test
jmp
sbb
or
dec
mov
test
and
pop
jbe
lahf
cld
push
inc
mov
sbb
xor
loopne
pop
xor
mov
rolb
mov
popa
jecxz
jns
xchg
testl
dec
pop
repnz
je
into
divl
pop
aad
mov
push
subb
movsb
xchg
jns
insl
out
addr16
push
jno
pushf
subl
inc
leave
clc
sub
popa
pop
push
dec
mov
adc
or
rcrl
xchg
pop
sbb
add
les
inc
and
adc
mov
cmp
sub
add
insb
sub
sbb
mov
cmpsb
mov
mov
and
sub
lds
jae
cli
fstl
aad
mov
clc
jg
xchg
fisubs
js
mov
aad
dec
xlat
pop
jb
inc
pop
and
sub
or
into
mov
cmp
cmpsb
ret
nop
pop
ficomps
into
and
mov
xchg
xor
mov
jbe
sub
cs
push
dec
adc
int
adc
leave
pusha
lods
sub
sti
or
cmp
fbld
push
jg
neg
mov
es
and
iret
mov
dec
dec
push
out
pop
pop
cs
mov
fcompl
push
sbb
int
jns
in
xchg
sub
xor
and
mov
ret
inc
mov
sbb
call
sbb
or
repnz
in
push
and
popf
sub
sub
fnsave
popf
sahf
fsubl
cmp
mov
sarl
stos
pushf
adc
or
ja
adc
push
mov
xchg
mov
ret
das
xor
adc
and
out
mov
mov
imulb
sbb
cli
push
out
jmp
enter
ror
cli
dec
sbb
test
mov
clc
les
jp
bound
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
insl
and
adc
int3
movlps
jg
push
xor
mov
or
aaa
mov
mov
scas
add
mov
popf
cmp
aaa
xchg
lods
repnz
mov
cmp
out
xorb
cmp
cs
call
out
push
pop
and
fimuls
decb
insb
jae
faddp
push
mov
push
aaa
cmp
mov
repz
insb
mov
or
repnz
push
sub
je
cmp
ret
lret
mov
loopne
mov
fiadds
pop
not
bound
out
and
test
bound
pop
out
or
push
mov
jp
dec
loope
and
int3
out
mov
mov
shl
xchg
mov
push
int
adc
cmp
mov
loop
cmpsb
jo
mov
inc
xor
inc
inc
inc
adc
fdivp
push
dec
mov
clc
mov
cltd
pop
mov
pop
cmp
xor
xlat
pusha
adc
dec
sahf
sub
stc
jbe
jnp
adc
xor
inc
movsb
add
aas
pop
sbb
push
cmp
test
dec
push
mov
ss
cmpsb
mov
add
mov
and
popf
icebp
ss
scas
stc
in
xchg
jne
push
mov
fstpt
sub
add
xchg
mov
mov
fstl
mov
aam
lds
mov
inc
js
mov
dec
outsb
inc
xchg
adc
mov
movsb
bound
stos
mov
and
repnz
jge
or
cmc
cmpsl
dec
cld
insb
dec
lea
shrb
push
mov
add
sbb
sbb
push
or
xchg
jbe
popf
cmc
pop
dec
cmp
pop
clc
mov
icebp
scas
aam
inc
inc
in
xor
jns
jmp
call
adc
or
lods
pop
mov
in
jge
call
lret
mov
xlat
adc
sub
and
leave
mov
push
adc
jmp
jb
dec
adc
jb
cmp
and
adc
ret
fbld
sbb
mov
fcomp
inc
shlb
dec
xor
sbb
pop
loope
xor
xchg
icebp
stos
into
mov
cli
pop
inc
xchg
aam
xor
xchg
fs
mov
and
mov
mov
push
roll
addr16
adc
cmc
mov
xchg
xchg
jae
int
popf
arpl
lcall
push
repnz
mov
sub
stos
jnp
sbb
push
adcl
jns
ds
pushf
sahf
jg
jge
and
sti
stc
pushf
jb
dec
or
test
mov
mov
not
dec
repnz
dec
into
pop
iret
cmc
cli
xsavec
arpl
aam
gs
xor
jbe
and
andl
lahf
test
sub
mov
test
jecxz
call
jo
pop
icebp
mov
popf
iret
mov
stc
sub
xchg
xchg
lret
rolb
into
cmp
mov
pusha
pushf
insl
add
jl
mov
nop
popf
pusha
fwait
ret
insb
or
xchg
pusha
mov
jns
mov
lock
xor
mov
mov
cmp
sti
cmpsb
xorl
cmc
push
jg
imul
fldt
mov
sub
push
cld
outsb
aam
and
into
es
mov
insb
inc
addr16
pusha
jno
int3
test
xchg
repz
xorl
fidivl
cmpsl
sbb
inc
or
ret
mov
or
add
sub
shl
xchg
fistps
xchg
movsl
outsb
sub
inc
push
cmp
inc
cmp
sub
lods
fdivr
movsb
pop
mov
jg
sub
xor
outsb
imul
inc
arpl
xor
mov
mov
icebp
cltd
fidivl
or
pop
sbb
in
icebp
jo
xchg
cmp
pusha
mov
sub
inc
movb
fsubr
add
or
pop
adc
xor
or
xchg
add
je
loopne
popf
jmp
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
stos
outsb
in
jle
and
adc
movlps
xchg
jg
jmp
sbb
enter
dec
pop
mov
jb
sbbl
jne
jae
push
pop
lock
mov
jo
cmpsb
pop
scas
sub
dec
jne
ds
jae
pop
out
outsb
cmc
mov
in
mov
adc
js
stc
adc
adc
sbb
and
aad
jg
addr16
sbb
jecxz
sbb
cmc
jae
mov
data16
and
add
icebp
cmp
xchg
push
imul
cmpsb
dec
call
je
jne
sbb
in
pop
fisubl
sbb
ljmp
xchg
dec
ds
xchg
mov
iret
mov
cwtl
pop
pop
mov
aam
mov
fsubrs
aas
dec
icebp
xchg
mov
xor
push
je
dec
pushf
push
xor
and
pop
mov
js
movsb
rolb
mov
push
pop
cmp
sub
aas
push
add
test
push
cmpsb
push
dec
aas
sub
or
cltd
in
or
clc
inc
test
pop
into
cmp
ror
dec
je
jmp
xor
pop
push
push
lcall
inc
push
mov
mov
lock
dec
negb
repnz
lods
popa
pop
or
inc
pop
pop
mov
enter
mov
imul
cmp
fcmovnb
ljmp
lret
jl
mov
add
cmp
arpl
xchg
mov
mov
inc
dec
dec
xchg
rcll
cs
clc
inc
add
out
loope
das
jae
pop
add
dec
cli
or
fld
and
sub
sub
stos
decl
test
jg
rol
insb
test
addr16
dec
lods
xchg
rorl
scas
sbb
outsb
push
push
dec
sbb
mov
xchg
add
sub
xchg
or
out
adc
pop
pop
and
lods
ja
cld
addr16
rorl
cld
adc
sub
or
ret
bound
js
sub
sub
adc
cmp
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
rolb
mov
jg
pop
sbb
aam
repz
xchg
lods
mov
test
xor
mov
jns
pop
cmp
jb
jp
or
jl
arpl
jae
xchg
jge
cli
hlt
inc
test
xor
inc
icebp
cmp
adc
mov
fldcw
movsl
push
jmp
mov
in
push
shrl
clc
pop
int
push
pop
sub
call
inc
outsl
cs
cltd
push
out
inc
daa
jp
xchg
or
jp
cmp
sbb
daa
adc
movsb
jmp
out
hlt
xchg
cs
in
lret
lods
cmp
dec
test
rol
in
inc
sbb
and
lods
lret
push
jg
jno
mov
shl
sti
in
sbb
xchg
shl
pusha
add
loope
cmp
inc
jle
xchg
sub
ljmp
cs
and
outsb
in
pop
lahf
sub
push
xor
inc
push
pushf
insb
xchg
jmp
cmp
movsb
std
cwtl
es
js
dec
scas
in
testb
xchg
outsb
adc
xchg
addr16
push
fadds
imul
jge
fs
jle
sub
add
sbb
imul
lock
test
subl
jnp
in
jle
outsl
inc
xor
add
pop
mov
pop
adc
push
testl
xchg
shl
mov
cmc
daa
call
xor
in
fiaddl
mov
nopl
xlat
add
lock
ret
loop
push
cmpsl
fildl
ret
leave
add
push
in
pop
xchg
test
lds
cmp
imulb
mov
push
lea
nop
insl
add
and
test
imul
adc
or
testb
loope
repz
repnz
mov
mov
in
mov
bound
scas
imul
or
push
lds
fmuls
out
mov
push
in
lea
xor
mov
test
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
cmc
stos
sbb
adc
movlps
pop
and
pop
mov
shlb
fcom
cltd
pop
cli
pop
xchg
inc
int
out
xor
dec
in
cmp
pop
xor
ret
fwait
mov
call
or
cmc
in
add
push
xchg
mov
shr
lods
mov
in
std
jb
sbb
nop
push
sub
sub
inc
sbb
into
int3
xchg
enter
mov
ja
mov
fisttpll
xchg
jae
cmp
inc
cmp
sbb
lret
roll
jmp
insl
xor
push
inc
sahf
pop
stos
ret
ret
dec
mov
adcb
popf
sub
adc
pop
arpl
adc
rclb
imul
fwait
dec
mov
xchg
sti
dec
scas
dec
jg
pop
inc
pop
lcall
imul
xorl
add
es
and
and
jo
cmp
adc
sbb
imul
inc
jge
pop
pop
mov
cmp
das
lods
je
inc
sub
xchg
fcompl
mov
mov
out
out
adc
test
push
adc
xor
lock
push
test
pop
inc
jmp
jmp
test
gs
loope
add
subl
hlt
jns
add
and
fnstenv
add
mov
jecxz
dec
testl
aas
test
pop
adc
add
insb
rcrb
clc
loope
test
inc
xor
das
and
sbb
out
cmp
mov
mov
movsl
das
mov
leave
mov
ljmp
es
push
mov
fdivrs
sbb
in
ret
dec
xor
movsl
or
into
dec
jae
in
push
les
jle
add
pop
lcall
incl
add
pop
add
cltd
icebp
mov
out
jno,pn
dec
cld
fcmovnu
cmp
test
incl
add
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
mov
adc
adc
aam
sbb
sub
loopne
lahf
loope
into
mov
ljmp
xor
lret
in
adc
lds
pop
mov
das
test
push
sbb
addr16
cltd
xchg
mov
divl
sahf
dec
andps
fists
mov
int
lahf
inc
jns
loop
test
dec
outsl
mov
repz
or
orb
cmp
aam
xlat
dec
xchg
push
sbb
dec
mov
repz
jge
mov
fstpt
jae
dec
and
sbb
xor
aad
faddl
sub
dec
imul
addr16
dec
mov
lods
or
xchg
repz
xorb
or
sbb
fmul
les
mov
negb
stc
and
xchg
inc
int
cmp
cmc
mov
divb
mov
xlat
pop
pop
int3
inc
or
outsl
mov
ja
xchg
mov
pop
jne
push
std
sahf
mov
imulb
or
xchg
rorl
in
std
lahf
inc
push
ret
clc
lret
scas
aas
iret
mov
fimull
outsl
scas
test
cld
in
shl
scas
xchg
aam
test
gs
cmp
das
xchg
into
push
decb
fdivrl
loopne
push
outsl
xchg
mov
sbb
pop
add
subb
ret
inc
or
insl
cld
cmp
push
je
fmull
dec
ss
imul
xchg
jp
adc
push
in
and
out
pop
mov
subb
jne
bound
fnstenv
jbe
add
sbb
inc
aas
sub
xor
jmp
xchg
cmp
lret
jecxz
pop
cmpsb
jle
test
fcompl
cld
mov
xor
sub
sub
rcrl
xlat
pop
sarb
xlat
rclb
test
push
shrl
icebp
inc
push
loop
inc
pop
loopne
adc
and
dec
mov
addl
or
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
cmp
sub
adc
adc
pop
mov
testl
xlat
mov
push
push
daa
out
jl
dec
jge
shll
add
lods
sub
in
sbb
lahf
mov
mov
adc
mov
cwtl
clc
pop
das
sbb
adc
inc
rclb
xchg
push
outsb
cmp
cs
adc
add
pop
add
pop
hlt
out
adc
mov
pop
mov
ds
dec
out
xchg
pushf
lock
mov
int3
imul
pop
enter
fisttpll
fwait
fwait
or
inc
rcrb
lret
xchg
cmpsl
mov
xor
sub
out
fsubrl
std
dec
ret
cld
adc
lret
daa
mov
xor
insb
inc
pushf
mov
es
mov
jg
stos
addr16
jae
adc
loope
cmc
xor
aam
mov
pop
std
mov
mov
popa
lret
add
ss
jbe
sub
mov
out
loope
lret
jnp
mov
xor
punpckhwd
mov
call
outsb
cli
shlb
inc
fsubl
in
pop
mov
push
pop
push
add
jle
btr
dec
xchg
sbb
test
insl
jb
fwait
or
pop
pushf
jmp
pop
pop
dec
mov
jae
iret
inc
and
scas
mov
pop
jle
test
or
jbe
hlt
bound
fnstcw
jge
leave
rcl
inc
push
gs
inc
imul
push
mov
xor
inc
mov
ret
xor
sub
dec
lret
sbb
and
inc
sub
inc
shrl
lds
push
stc
testl
or
mov
fidivrs
push
sub
jmp
pop
xchg
and
pop
fcmovb
test
mov
fnstcw
xchg
outsl
shrb
pop
and
out
pushf
xor
mov
cmpsl
enter
dec
adcl
jno
inc
shl
xchg
jb
xor
mov
mov
inc
sub
out
xlat
repz
roll
call
rolb
add
sub
add
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
mov
movlps
rclb
dec
xor
lret
sub
bswap
test
aaa
jmp
sbb
and
in
sub
movsb
cmp
jecxz
sbb
lock
jns
fcmovb
push
fwait
xchg
int
in
or
scas
fisttpl
fs
mov
cmp
jb
push
loopne
sbb
lret
xchg
insb
pusha
sub
sbbl
out
inc
rcll
pop
in
bound
push
fst
jo
cmp
outsl
lods
out
inc
add
inc
out
add
pop
cmp
outsl
mov
dec
nop
mov
in
mov
cwtl
movsb
cmp
loope
cld
notb
mov
adc
mov
mov
cmp
mov
and
lods
adc
cmp
cld
xchg
fildl
mov
add
jne
das
sub
mov
sbb
in
mov
mov
notl
mov
jnp
sbb
je
jb
popa
sbbl
cmp
jle
jp
fidivrs
jae
enter
dec
xor
pop
icebp
outsb
or
mov
lret
orb
lret
jmp
dec
cld
nop
pop
dec
push
jl
test
pop
imul
and
arpl
pusha
movb
ljmp
gs
rclb
rolb
lcall
jns
hlt
ljmp
cmpsb
aam
jo
jnp
aad
insb
sarl
push
ss
in
aam
popf
and
repz
sbbb
leave
or
dec
fisubs
pop
adc
out
sahf
and
dec
pop
xor
cmpb
add
push
out
inc
xchg
push
in
loopne
jle
int
adc
das
out
xchg
fldcw
outsb
mov
or
pop
mov
jbe
adc
mov
gs
adc
fsubs
out
cmp
sti
mov
cmp
mov
push
sahf
and
push
xchg
jne
js
icebp
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
pop
mov
adc
adc
and
cmp
out
enter
das
js
ja
addr16
movl
mov
mov
and
ljmp
inc
incb
jmp
dec
out
xchg
out
adc
mov
adc
into
fiadds
inc
daa
lret
rolb
iret
lcall
pop
aas
sub
test
adc
dec
frstor
jmp
adc
in
or
jl
push
scas
cmpsl
xchg
pop
sbb
push
or
mov
inc
push
xor
or
cmp
xor
sbb
ja
mov
cmp
movsl
mov
xor
xlat
sbb
mov
xlat
aad
shlb
negb
subb
mov
hlt
cmp
shrl
cmp
call
mov
add
push
and
push
imull
jle
mov
jl
mov
sub
fistpll
sbb
sbb
fwait
or
xchg
icebp
aam
and
pop
xchg
mov
push
or
jg
pop
popl
add
or
push
cmp
push
mov
in
fstpt
or
fimuls
pop
fnsave
pop
data16
jg
js
insl
inc
dec
inc
pop
mov
mov
les
push
push
jae
jl
bound
leave
stc
rcl
mov
andb
cltd
mov
push
cmp
fists
andl
loop
dec
cmp
in
out
pop
test
or
fimuls
out
test
bound
mov
pop
mov
test
xchg
push
jne
lea
jbe
cmpl
into
and
jp
cltd
js
test
xlat
cmp
mov
jp
in
pop
adc
jns
rorb
push
in
mov
pushf
dec
in
mov
lret
aas
add
mov
nop
cltd
inc
stos
into
inc
loop
dec
iret
lea
dec
adc
mov
push
pop
or
pop
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
shlb
push
out
lods
je
movsl
dec
push
outsl
jbe
rcrb
push
cmp
fnclex
inc
gs
dec
popa
ret
sub
cmpsb
sub
lock
push
pop
or
jecxz
cmc
xchg
lea
xchg
dec
cli
es
or
jecxz
inc
push
cltd
hlt
inc
mov
inc
jmp
xchg
sbb
mov
mov
and
jle
sub
repz
pop
mov
das
gs
dec
sub
dec
aad
hlt
fsubrl
hlt
ja
sub
in
or
sub
push
icebp
pop
add
pop
les
scas
xchg
push
adc
mov
fistps
push
aas
xchg
loope
leave
xor
gs
clc
test
mov
sub
int
js
push
push
cmp
out
call
jg
sub
lea
fldl2e
xor
push
cli
pop
or
lods
adc
sub
sub
xor
inc
push
daa
mov
xor
aad
into
xchg
outsb
fmuls
mov
cs
jno
or
std
outsl
add
dec
fnstsw
sub
out
pop
leave
test
or
dec
push
test
mov
dec
mov
mov
xchg
dec
lods
xchg
fsts
dec
adc
push
push
pop
test
fisttpll
or
fsubp
arpl
pop
jmp
rol
inc
dec
or
shll
or
int3
nop
jns
sbb
dec
fldenv
rolb
or
mov
aas
rcrl
mov
lods
lds
mov
idivb
or
sbb
aaa
lret
sbb
xchg
xchg
int
cmc
cmpl
mov
mov
test
jae
pop
sbbb
sub
xchg
adc
daa
test
mov
xchg
leave
mov
ds
sbb
filds
lods
inc
in
test
je
imul
or
incl
add
lret
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
and
sti
adc
adc
fmulp
jmp
ljmp
popf
or
mov
lret
int3
jno
leave
daa
out
dec
leave
mov
xchg
das
mov
movsl
jg
shrl
sbb
or
mov
cld
fstps
mov
gs
push
push
aad
add
fs
adc
sbb
hlt
les
and
mov
pop
fistl
mov
adc
popa
pop
cli
mov
outsb
cmc
push
loopne
add
test
fstps
mov
cmp
adc
in
mov
or
xchg
repnz
jb
sub
and
call
lock
cmpsl
mov
mov
add
jle
das
subl
lcall
scas
mov
aas
dec
mov
popf
or
jmp
pmuludq
or
add
inc
push
sub
rolb
rcrb
in
inc
pop
ss
xor
aas
scas
inc
sub
mov
xor
mov
idivl
pop
fistpll
inc
jae
into
inc
jle
xor
xorl
leave
idivb
stos
push
inc
dec
mov
mov
fxch
pop
sub
int
pop
push
jno
in
add
adc
jmp
enter
rcrb
inc
sbb
sbb
jmp
dec
pushf
cmp
xor
mov
jo
or
sbb
cmc
repz
xorl
pop
les
sub
outsl
aas
leave
pop
jne
in
add
cmovle
popa
inc
dec
int
mov
cmpb
in
shll
mov
xchg
enter
dec
adc
and
jne
or
mov
mov
cmp
stos
xchg
and
addl
stos
into
fidivl
push
inc
daa
scas
xor
test
lock
stos
rorl
or
insl
inc
cmp
es
sbb
nop
jne
rcll
sbb
sbb
test
std
decl
ret
add
add
add
js
inc
js
push
notl
adc
jns
lret
inc
or
push
scas
mov
ret
cmp
inc
or
inc
sbb
cmp
xor
inc
and
jo
jns
movb
repnz
and
push
out
sub
hlt
ret
rep
mov
loope
xor
mov
out
ljmp
clc
dec
jns
fwait
xchg
mov
imul
sbb
xchg
fwait
clc
mov
sbb
push
and
mov
push
and
movsb
in
xor
push
inc
sbb
es
cmpsl
mov
inc
dec
cwtl
mov
mov
aam
push
scas
push
addr16
mov
add
bound
push
xor
jmp
aas
iret
dec
inc
pop
pop
ja
into
adc
aam
ljmp
scas
sub
call
aam
add
mov
jp
jp
xchg
sbb
out
arpl
dec
std
add
dec
jb
mov
jp
xchg
ret
nop
lock
jb
mov
out
repz
jecxz
jge
mov
and
pop
sbb
xchg
dec
push
mov
repnz
inc
in
bound
dec
int
pop
sbb
cmpsl
ror
pop
test
mov
cwtl
shrb
adc
mov
lods
subl
jl
dec
into
push
je
add
sti
aas
mov
and
ret
xchg
movd
popa
insl
mov
ljmp
mov
pop
sub
mov
xor
in
stos
je
pop
jl
mov
mov
scas
jae
sarl
or
hlt
pop
xor
mov
push
aam
bound
es
xchg
mov
cmp
sbb
lods
push
sahf
cmp
pop
mov
gs
adc
lret
add
adcb
dec
stc
stos
mov
or
ret
mov
add
mov
xor
fwait
xor
test
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
or
or
jnp
sub
cld
sbb
mov
stos
fmuls
jns
mov
mov
jbe
push
pop
frstor
adc
xor
ud0
xorb
hlt
test
sub
pushf
cmp
insl
mov
pop
pop
mov
inc
cmp
lcall
and
dec
inc
lcall
mov
mov
jmp
fdivrs
push
cmc
or
js
loopne
adc
movsl
das
aaa
cli
mov
mov
mov
mov
enter
xchg
rorl
lret
adc
outsb
aad
andb
mov
sbb
fstpt
sub
sbb
mov
outsl
arpl
shll
fcmovb
sub
or
std
pop
mov
ffreep
xchg
xor
sbb
lahf
add
pop
push
push
xor
xchg
shl
iret
loopne
lret
repz
and
lret
fiadds
jns
sbb
xchg
cmp
inc
je
loope
leave
xchg
add
cmpsl
les
fs
fucom
fstps
xor
arpl
enter
icebp
mov
xchg
mov
pop
mov
outsl
movsl
test
cmp
pop
or
cmp
cli
insb
adc
dec
add
add
out
nop
jbe
loopne
jb
jae
mov
pop
mov
mov
pushl
inc
pushf
insb
mov
jle
dec
mov
or
jg
mov
fcomps
lods
insl
ljmp
fimull
mov
xor
mov
sbb
or
mov
enter
hlt
mov
sub
push
dec
cmp
fstl
pop
dec
inc
mov
xchg
iret
xchg
pop
push
mov
loopne
dec
and
mov
add
sbb
movaps
xor
inc
pop
mov
or
ss
add
subb
cmp
in
scas
stos
test
add
sahf
lcall
inc
add
add
pop
sbb
sbb
ss
cmp
js
cmp
insb
jne
adc
adc
mov
mov
jae
fwait
sub
lret
jae
fisubrs
jp
stos
fcmovb
dec
push
enter
push
fcmovnb
es
mov
or
xchg
ja
ljmp
dec
rcrl
pop
int
add
push
lock
xchg
sub
sti
repz
rcl
inc
jne
ljmp
xor
cli
das
test
imul
cwtl
push
and
mov
cli
movb
jecxz
popf
inc
pop
movsl
jne
pop
adc
mov
push
mov
and
adc
sub
mov
test
push
mov
push
pop
xchg
pop
in
add
cmc
into
rcrl
and
jecxz
call
push
push
cs
push
cmc
and
loop
aad
addr16
ret
inc
sub
and
dec
std
rcr
inc
jl
mov
add
mov
lds
aad
mov
movsl
mov
inc
mov
sub
shll
or
sub
sub
xchg
push
sub
and
mov
fdivr
out
lret
xor
push
mov
fists
stos
xor
pop
and
push
sti
cmp
mov
push
cld
inc
dec
das
push
shrl
ret
adc
clc
js
int3
adc
inc
push
ret
add
stos
pop
pushf
test
xor
lock
push
mov
sbb
add
shll
mov
rol
daa
xor
mov
mov
mov
lret
xor
test
repnz
mov
cmpsb
jge
insl
int
add
dec
pop
pop
daa
inc
sub
push
das
adc
test
xchg
imul
mov
xor
loope
mov
adc
jg
in
xlat
std
jg
jb
and
xchg
mov
sub
mov
retw
data16
mov
imull
aad
and
insb
mov
pop
andb
aad
or
daa
imul
sub
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
mov
rep
lret
repz
jge
ret
out
fnstsw
pop
arpl
fildll
popf
lret
mov
loopne
sbbb
mov
xchg
pop
in
add
mov
dec
push
ljmp
rclb
stos
aaa
ret
mov
sub
push
test
out
je
popa
push
call
loope
mov
cmc
jmp
test
push
inc
push
cmp
mov
inc
loope
jae
pop
filds
cmpsb
scas
cld
jne
xor
push
ss
filds
hlt
and
dec
mov
out
outsl
notl
xor
xor
movsl
cld
xchg
cltd
and
or
ret
addb
clc
outsl
and
mov
outsb
push
lahf
fdivrl
adc
inc
sahf
sti
scas
mov
int
inc
add
aas
decb
clc
ja
mov
xor
mov
jne
scas
add
outsb
lahf
mov
add
add
into
aas
lds
add
mov
ret
repnz
pop
mov
dec
fst
pop
fldt
jg
gs
sub
inc
scas
mov
and
int
jp
aam
in
rolb
mov
lea
test
loope
cli
mov
dec
int
cmp
leave
add
mov
sbb
int
cltd
insl
inc
adc
xchg
add
and
mov
out
lcall
addr16
xchg
push
dec
xor
jmp
jle
push
add
cmp
ret
insb
and
je
in
pop
xchg
das
pop
dec
aad
lods
jae
dec
jbe
add
into
int
lahf
sbb
mov
mov
sub
pop
jne
mov
cwtl
dec
pop
roll
jge
inc
mov
inc
mov
xchg
fdivl
pusha
push
jns
movsb
sub
out
xor
sarb
mov
mov
jl
push
jnp
inc
mov
jmp
mov
mov
jmp
xor
fisttpll
and
rcrb
js
ljmp
add
sub
inc
add
in
test
testb
add
mov
push
mov
lods
jl
jmp
pushf
sub
ror
xchg
cld
mull
notb
xor
incl
es
sar
test
sbb
movsb
loop
call
ds
sbb
cmp
xor
mov
jno
scas
addr16
sarl
dec
cltd
inc
getsec
add
arpl
and
dec
xor
cltd
xor
rcl
test
es
in
loopne
gs
shrl
flds
lcall
jb
loope
incl
out
dec
adc
imul
fiadds
popf
ljmp
out
test
sbb
fisubl
adc
addr16
jecxz
sub
movsl
stos
adc
fisttpll
les
aaa
test
stos
dec
jb
mov
fidivrl
xor
das
cmpsl
lock
andb
sbb
fldl
pop
dec
xchg
adc
pop
decl
testb
fsubl
inc
mov
xor
fs
int3
add
dec
cwtl
and
pop
sub
cmp
lret
and
sbb
out
mov
cmpb
cmp
adc
sbb
sub
push
push
jae
inc
add
and
mov
shrb
hlt
push
pop
test
lret
cmpsb
xor
inc
popa
rcr
pop
bound
push
sbb
mov
push
es
mov
adc
adc
push
ret
or
out
pusha
xchg
sbb
xorb
xchg
ljmp
add
cli
popa
aad
mov
push
mov
pop
shll
sbb
jne
push
iret
pop
lods
aaa
mov
cmc
punpckhdq
mov
xchg
das
test
sahf
jae
je
and
gs
xor
bound
std
ret
xor
adc
test
fmul
cmp
shll
popa
aaa
stos
ja
ficoml
je
imul
or
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
mov
inc
ljmp
mov
pop
and
int
icebp
aaa
popa
fwait
ret
sub
pop
mov
jge
push
adc
or
jo
sbb
daa
inc
inc
push
outsb
adc
int3
xor
stos
sbb
add
add
mov
dec
or
outsb
push
rclb
ja
test
mov
xchg
inc
or
aaa
std
fs
adc
cmp
mov
icebp
pop
or
popf
mov
loope
insl
scas
adcl
pop
test
inc
push
inc
xorl
jmp
pop
push
sub
add
xchg
cmc
pusha
xchg
sti
sub
ja
arpl
jne
push
test
fs
ss
mov
aam
neg
xchg
pop
fcompl
ja
outsl
push
sbb
pop
into
and
je
clc
and
pushf
cmp
xor
sarl
push
push
and
jecxz
mov
pushf
stc
gs
and
push
cmpsl
int
sub
pop
test
repnz
mov
aaa
mov
cld
shrl
int
je
sub
dec
ret
fiaddl
xlat
xchg
sbb
cmp
jg
pop
in
fisubs
pop
pop
das
xchg
ds
adc
dec
xor
mov
push
lcall
add
test
lret
mov
lret
cmp
add
sub
cmp
rorl
subb
movswl
je
push
mov
insl
xchg
popa
stos
call
test
push
ljmp
ret
xchg
and
ficomps
mov
in
mov
sbb
add
loope
lock
rolb
and
call
inc
fwait
enter
pop
lret
xchg
lret
popa
movsb
jmp
repz
movsb
out
dec
inc
push
cmp
clc
jno
xchg
mov
imul
and
inc
mov
xchg
cmp
outsb
push
leave
jp
adc
jp
sbb
jmp
jge
dec
inc
stos
inc
jp
and
mov
das
mov
mov
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
sub
lods
push
loop
adc
movlps
js
add
je
shlb
in
lgdtl
ds
je
cmp
inc
dec
mov
jnp
adc
loop
aam
or
imul
cmp
mov
cmovs
insb
loop
sbb
sub
sub
jns
sub
or
sub
ficoms
pop
adc
cs
loop
jae
xchg
test
inc
dec
je
pop
call
push
test
xchg
mov
aas
adc
outsb
stos
dec
mov
das
test
and
mov
leave
lods
subl
mov
cmp
scas
xor
test
je
cmp
stos
into
jecxz
dec
adc
inc
cli
push
mov
dec
inc
push
insb
sbb
xor
dec
xor
daa
mov
jmp
add
mov
add
repz
or
adc
sahf
outsl
inc
sbb
outsb
mov
jns
out
icebp
call
mov
or
aaa
sbbb
test
push
and
addr16
xchg
ja
lock
and
cmpsb
dec
cmc
jp
aad
lea
mov
fdivl
add
mov
ja
jo
mov
xlat
outsl
and
in
add
mov
push
imul
adc
sarl
hlt
adc
add
inc
jae
enter
adc
cltd
adc
jg
xchg
mov
fwait
adc
sbb
inc
and
cltd
jae
sub
add
pop
mov
sub
add
push
dec
mov
pop
xor
and
fimull
out
jl
mulb
nop
mov
mov
fadds
clc
inc
xchg
push
sub
addl
out
xor
xlat
sti
xchg
mov
mov
pop
jns
fidivrl
jp
fsubrs
ror
loop
push
adc
lods
adc
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
mov
adc
adc
sti
call
pop
inc
in
dec
mov
xchg
mov
dec
arpl
aaa
imul
xchg
sbb
mov
jns
pop
mov
mov
cltd
dec
pop
cmp
loop
out
fs
mov
adc
int
lods
cli
shlb
dec
mov
pop
jne
sbb
je
mov
sub
insl
mov
sub
addr16
jbe
cmp
xor
xor
ja
xchg
fstp
pop
fwait
push
mov
cmp
sbb
xchg
pushf
stos
add
call
inc
outsb
arpl
jbe
mov
out
jb
adc
mov
and
mov
inc
xor
mov
xor
and
mov
sbb
inc
cmpsb
adc
fwait
or
repz
jmp
jle
pop
sub
mov
les
push
nop
outsb
sub
stos
pop
mov
and
stc
add
fiaddl
and
mov
dec
sbb
sbb
shll
faddl
xchg
test
mov
leave
mov
clc
in
dec
dec
aad
dec
mov
fwait
fwait
rcrl
bound
xchg
arpl
cwtl
les
mov
push
jno
pushf
and
jo
and
sub
stc
and
vpacksswb
xor
rorl
out
cmc
test
mov
inc
lods
test
ss
bound
xchg
dec
pop
pop
pop
clc
jmp
pushf
in
pop
pushf
lea
xor
mov
push
les
andl
lods
mov
sti
shlb
add
stos
pop
mov
push
arpl
jae
mov
or
testl
sbb
bound
xchg
adc
rorb
inc
mov
jb
int
mov
in
xchg
sub
mov
test
or
fwait
leave
push
mov
idivl
jg
popa
mov
cmp
xchg
xchg
fidivl
rcll
lcall
mov
cmp
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
mov
adc
adc
nop
out
js
sbb
jp
jo
cs
orb
cmpsl
iret
push
cmp
mov
cltd
adc
push
lret
insb
adc
pop
out
mov
out
cmpsl
cmp
push
mov
gs
mov
les
stc
lret
sbb
popa
fidivl
popa
jg
mov
mov
movsl
lods
mov
mov
sub
xchg
or
inc
incl
arpl
outsb
sub
or
or
sbb
add
nop
popf
dec
setb
inc
aad
add
je
add
fs
arpl
dec
jne
jnp
jae
jbe
push
mov
push
das
movsl
xchg
lret
pushf
test
mov
popl
pop
jl
push
or
stc
in
inc
mov
gs
mov
daa
stos
cmp
jnp
mov
push
inc
jl
and
cmp
out
das
out
lret
in
loopne
je
int3
fisttpl
movsb
test
mov
adc
jo
adc
fidivs
aaa
int
movsl
add
iret
pop
popf
xchg
sub
outsb
inc
mov
shlb
inc
lock
scas
popa
add
cld
in
test
aam
jnp
jcxz
icebp
mov
add
stos
cmc
dec
or
mov
ds
out
or
test
inc
aaa
in
lds
je
xlat
scas
dec
cmp
dec
adc
outsl
pop
push
daa
or
jle
adc
jl
pop
jmp
and
cmp
sub
dec
cmp
lahf
pop
addr16
rorl
push
pop
pop
xchg
mov
std
add
lret
lds
sbb
arpl
push
mov
mov
aas
enter
cwtl
clc
sbb
push
mov
andl
sbb
and
int
mov
and
xchg
lret
dec
xchg
cmp
dec
mov
push
cltd
dec
pop
pop
dec
es
adc
add
xor
fsubrp
enter
adc
aam
cld
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
dec
mov
jge
adc
adc
xchg
sbb
stc
addb
and
in
int
aas
fsubrl
xor
pop
dec
loop
mov
repnz
sub
or
loope
push
inc
pop
js
jo
cmp
js
and
cmp
lods
mov
mov
iret
movaps
xorl
jl
dec
pop
outsb
lea
popa
jbe
mov
pop
push
mov
inc
pop
out
les
fldenv
xchg
inc
mov
sub
pop
dec
adc
adc
adc
aam
mov
loope
pusha
inc
repnz
shlb
inc
fidivrs
xchg
jl
dec
pcmpgtw
jb
xor
in
xor
out
in
cld
jge
push
xchg
dec
test
jle
sarb
sub
xchg
inc
xchg
popf
mov
adc
incb
jecxz
lcall
out
stos
call
sbb
sti
popa
jbe
add
aam
pop
push
mov
xchg
lret
jne
rorl
jae
in
lret
ret
lret
aaa
push
mov
push
lds
jp
fistpl
mov
mov
inc
insl
and
adc
ficomps
es
aaa
pop
insb
pop
mov
hlt
fsubs
xchg
mov
ljmp
xor
adc
sarb
daa
adc
rclb
addr16
mov
cmp
test
xchg
cmp
es
mov
out
add
rcrl
lahf
push
sahf
pop
dec
out
pop
fsts
pop
cmp
movb
es
inc
jp
sbb
push
push
aaa
fimull
insb
push
lret
shl
lods
inc
inc
cmpsb
add
jecxz
call
xchg
or
mov
pop
cmp
pop
mov
fdivr
roll
inc
adc
test
fs
dec
jge
inc
stos
mov
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
dec
dec
xor
int3
movlps
testl
or
ret
cmp
pop
rol
aad
popf
sbb
sub
movsb
in
pop
loopne
lea
xchg
xchg
stos
and
and
sub
pop
add
iret
jne
xorb
pop
jbe
push
mov
div
pusha
clc
jecxz
fnstcw
pop
mov
fwait
nop
pop
scas
in
das
int
mov
int
jns
mov
lock
fcoms
stos
sbb
mov
movsl
mov
mov
pop
lods
loop
andl
add
sti
mov
loopne
sub
or
xor
inc
add
es
nop
test
mov
sub
mov
out
lcall
adc
mov
jns
jle
sbb
fs
cmp
jmp
leave
lahf
arpl
loop
and
popa
xchg
push
iret
es
cs
lock
shr
repz
fcmove
or
pushf
outsb
sub
jmp
jbe
scas
cmp
xchg
loopne
jmp
repnz
sahf
xchg
into
test
mov
sbb
sbb
adc
mov
cltd
dec
outsl
and
ja
add
movsl
fdivl
cltd
stos
mov
shll
lret
or
rclb
or
mov
xor
daa
mov
dec
fnsave
sub
lret
daa
dec
sbb
pop
jns
push
push
cltd
cmp
dec
or
adc
xchg
inc
repz
or
incl
in
cmp
arpl
movsb
std
dec
fsts
pop
push
sar
add
xchg
push
fisttpll
pop
pop
cmpsb
push
scas
ss
icebp
sarb
and
fmul
fildll
adc
mov
adc
inc
push
jbe
insb
ljmp
inc
adc
stos
arpl
ljmp
xchg
mov
and
sarb
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
js
enter
movlps
loop
ljmp
cs
xor
add
dec
jecxz
or
pop
pop
push
add
jg
and
xchg
push
and
andb
scas
mov
out
outsb
out
or
xor
adc
cmpsl
shll
cmc
push
inc
push
jns
shl
aas
jmp
jae
into
mov
jo
xchg
mov
push
nop
xchg
scas
xor
jmp
pop
mov
add
mov
adc
scas
cmpsl
scas
and
sahf
ljmp
pop
adcl
popa
ret
pop
insb
inc
fisubrs
fsts
inc
sub
aad
pusha
mov
in
insb
int
cmp
negl
jl
dec
testl
jge
mov
stc
aaa
adc
fisttpll
icebp
and
fs
js
cmp
add
addb
cmp
loopne
das
andb
sarb
fildll
dec
test
pop
push
pop
cmc
mov
pop
dec
adc
sbb
mov
and
aad
shll
ficoml
testb
xor
or
push
rcr
inc
dec
adc
cmpsl
insb
jp
mov
stc
xchg
in
cmc
cs
outsb
jmp
inc
jns
out
sub
or
cmp
test
add
out
mov
shl
cmp
into
mov
lcall
push
sbb
jmp
scas
stc
sti
ljmp
ja
dec
cmpsb
xchg
and
shr
xor
sbb
fld
fildll
fisttpl
mov
jg
stc
cmp
outsl
jno
xchg
mov
pop
jae
pop
add
sbb
pop
andl
lahf
sbb
test
popf
mov
lahf
shl
call
out
pop
lcall
cld
mov
xchg
jg
sbb
mov
mov
or
std
adcb
and
popa
cld
cld
rcr
or
jne
jmp
sbb
movb
ljmp
dec
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
or
insb
insb
cmpsb
les
adc
jg
das
lret
and
push
shlb
adc
aad
push
xchg
jg
stos
jg
cmp
out
mov
test
aad
stc
xchg
daa
pop
stos
or
out
pop
add
mov
ret
cld
mov
xor
popa
inc
cmp
add
sub
in
jno
out
addr16
mov
cld
in
loop
fnsave
cmp
rorb
data16
fsubrs
jae
in
jg
and
fdivs
jnp
lret
insb
aas
loope
jne
daa
cli
push
loope
enter
xor
cmp
jp
xchg
dec
lret
mov
inc
pop
imul
mov
sbb
popa
mov
push
aas
dec
and
aaa
icebp
dec
mov
in
gs
add
jo
or
xorl
jle
and
cld
mov
ljmp
sub
add
jecxz
idivl
or
inc
out
jae
stos
loope
outsl
and
scas
movsb
sbb
push
push
outsb
ret
cmpsl
xchg
sbb
cmc
xchg
loop
stos
sub
mov
and
adc
mov
mov
repz
mov
cmp
scas
pushf
repnz
pop
jo
or
lds
mov
in
test
mov
jae
mov
mov
mov
rclb
sub
mov
data16
jns
cltd
movsb
and
das
jnp
mov
cmp
loope
inc
or
add
mov
adc
cmp
xlat
jecxz
xchg
fildl
cld
sub
jmp
loop
loop
popa
ss
or
adc
popa
mov
in
or
xorps
cltd
lcall
mov
xchg
sbb
repz
jmp
fistpl
sub
fstpl
lahf
insl
fnstcw
btc
push
or
loopne
int
xchg
pop
inc
jo
fucomip
movsl
and
fdivl
lahf
test
xor
mov
jb
jno
lahf
xchg
xchg
loopne
icebp
lods
and
cld
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
cld
cmp
pop
rclb
loope
mov
mov
adc
outsl
jnp
sub
xor
jp
xor
lock
cmp
insb
or
inc
stc
gs
jnp
lock
sbb
mov
arpl
inc
adc
or
adc
add
repnz
mov
push
xlat
cmp
sbb
sub
mov
sbb
in
jno
inc
inc
jl
roll
xor
aad
das
negb
pop
insl
push
push
and
inc
test
push
iret
xchg
adcb
rcr
push
in
ret
jmp
jno
sub
movsb
adc
inc
shll
aaa
mov
bound
xchg
pop
shlb
ret
adc
loope
test
subb
ljmp
loope
xor
leave
jl
dec
enter
or
pop
mov
subl
lods
mov
mov
sbb
enter
sub
out
test
in
push
push
fcos
or
cmc
inc
imul
test
mov
push
pop
dec
iret
or
and
ret
mov
out
mov
adc
and
dec
mov
mov
pop
lock
pop
xchg
mov
push
rdtsc
pop
cmpsl
inc
jns
push
sub
xor
imul
adc
cmpsb
aad
jg
xchg
xor
inc
dec
and
push
hlt
xchg
xor
add
out
mov
xchg
sti
shl
xlat
test
ss
inc
push
and
lds
sbb
push
mov
imul
xchg
out
test
pop
scas
call
cwtl
push
iret
pop
out
pop
shll
jne
pop
out
dec
outsb
popa
sbb
dec
out
or
sbb
in
repz
jecxz
pop
and
pushf
xlat
sub
sub
mov
push
out
out
sbb
lret
or
cmc
add
or
sub
lds
cmp
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
insb
push
push
mov
adc
bound
pop
popa
rcrb
adc
xchg
repz
dec
cmc
lods
shll
out
lods
ss
call
dec
sub
mov
insb
jae
scas
sbb
add
int3
xor
dec
ror
test
mov
outsl
pop
dec
sub
add
daa
sbb
rcll
mov
xchg
mov
fwait
push
scas
dec
xor
repz
sbb
arpl
mov
cmpsb
add
and
jp
movsb
push
lock
shll
xchg
aam
ljmp
jnp
and
xchg
imul
push
mov
and
xor
inc
inc
inc
fsubr
pop
and
sub
sbb
or
cli
or
stc
inc
xor
adc
out
daa
in
aas
xchg
test
rorb
adc
or
or
dec
out
int3
sub
push
mov
cmp
shr
xlat
or
mov
imul
jnp
adc
jnp
lahf
and
aas
ret
xchg
je
bsr
mov
idiv
out
outsb
data16
inc
pop
cmp
and
je
std
xor
subb
repnz
das
outsl
std
enter
inc
cmp
lret
imul
mov
cmp
mov
xchg
stc
add
jl
pushf
addr16
fmulp
mov
pop
sub
xor
bound
adc
loop
mov
dec
js
scas
or
ljmp
push
mov
fucom
push
mov
mov
push
jnp
subps
andb
dec
jge
inc
aad
sub
lea
incl
and
sub
daa
ret
pop
icebp
and
xorl
lods
xchg
mov
rorb
and
mov
dec
inc
mov
mov
loopne
out
add
das
xor
jmp
enter
adc
mov
pop
lock
daa
out
out
test
sti
xchg
adc
jp
stos
sbb
movsb
icebp
mov
movsl
fsubr
and
ret
rorb
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
aas
ret
mov
adc
pop
test
loop
leave
out
mov
and
in
pop
adc
cmp
xor
pop
or
push
in
leave
lahf
xor
mov
jo
outsb
or
aam
imul
js
das
cmp
adc
dec
and
lcall
sub
pop
sahf
fsubrs
in
stos
rorb
push
dec
enter
adc
xchg
or
ljmp
jg
add
outsb
lret
xor
mov
lock
mov
push
pop
or
xchg
test
push
ljmp
or
or
add
sub
sbb
in
scas
rclb
pop
lods
sbb
xor
sbb
and
sub
sub
inc
imulb
or
daa
pop
fwait
imul
jb
push
jmp
sbb
push
into
dec
sub
xchg
xchg
rorb
or
rcrb
incl
movsb
xchg
arpl
loope
testl
and
and
imul
fbstp
xchg
in
inc
and
add
dec
pop
rdtsc
lock
sub
js
xor
std
leave
pop
imul
lds
mov
and
cmp
cmpsl
inc
xchg
iret
xchg
cmp
aad
dec
jno
cmpsb
in
movsl
in
or
aaa
jg
mov
sub
inc
sub
cli
cwtl
sbb
cli
int3
jno
xlat
mov
jns
push
lea
mov
add
lods
jbe
mov
sahf
ja
out
iret
inc
sbb
add
sub
jae
arpl
sub
test
sub
leave
out
ljmp
push
fldt
out
lahf
fisubs
fldcw
cld
pop
adc
sbbb
add
cmc
in
cmp
mov
xor
test
jp
mov
or
outsb
rcl
aad
cmp
xor
xchg
mov
roll
hlt
std
decl
mov
mov
add
mov
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
sub
rolb
int3
lea
lcall
shrl
mov
insb
mov
cmp
leave
push
ss
mov
adc
dec
mov
sbbb
scas
gs
adc
imul
add
adc
sub
pop
adc
push
ret
stc
xor
cs
subl
leave
pusha
mov
es
add
fisubs
jno
iret
loope
lret
test
xchg
in
les
jl
insb
bound
sub
repnz
jo
sbb
jge
shlb
jl
gs
mov
test
stc
cmp
fisubs
pushf
popf
mov
shr
pop
scas
xchg
mov
ljmp
int3
movups
mov
mov
outsl
stc
outsb
jb
pop
in
js
push
call
mov
shlb
stc
iret
pop
xor
and
jle
mov
push
ficoms
cltd
ret
dec
in
outsb
out
inc
pop
xor
test
dec
jns
jbe
cmp
jbe
add
adc
repz
lock
jge
xchg
fwait
sub
out
xchg
xor
jo
add
dec
inc
cs
mov
xor
or
daa
lret
call
dec
ss
xor
cmp
cmpsl
out
push
inc
sbb
and
mov
sbb
shlb
or
into
shll
mov
ss
jle
pop
shll
xchg
ret
or
inc
pop
movsb
jbe
xlat
or
add
aad
imul
xor
stc
outsl
call
adc
int3
sbb
xor
addb
pop
les
mulb
mov
mov
pop
push
push
aaa
mov
pop
jl
cli
push
mov
testb
mov
jae
pop
rcl
pop
or
jle
dec
and
scas
jg
test
pop
jb
cmp
jnp
mov
xorl
loope
mov
add
out
mov
call
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
sarb
movlps
dec
pop
loop
mov
mov
push
popa
xor
pop
dec
jbe
pop
mov
and
fcmovnu
mov
mov
sbb
popa
mov
outsl
nop
mov
icebp
cmp
out
fcoml
xchg
xchg
push
je
cmp
scas
dec
pop
fldenv
fwait
in
push
pop
outsb
or
jecxz
pop
sub
dec
repz
push
inc
mov
xchg
xchg
mov
xchg
dec
js
add
sbb
jmp
xlat
pop
test
loop
dec
push
dec
push
push
cwtl
mov
push
enter
jp
jno
movsl
xor
dec
or
xchg
das
imul
cmp
jno
pushf
cmp
xor
cwtl
popa
loope
hlt
and
adc
in
test
jb
pusha
jb
pop
jmp
or
scas
and
xor
sbb
adc
imul
jg
add
pop
inc
pop
lahf
test
loopne
loope
loopne
hlt
fcomps
sub
aaa
sbb
sub
lret
nop
aas
fdiv
das
test
adc
fimuls
jb
push
jo
xor
arpl
inc
fcompl
push
or
inc
mov
shl
es
sbb
push
cli
int3
and
addr16
dec
mov
mov
dec
jg
outsl
lcall
sarl
or
call
call
mov
push
popa
divl
push
or
imulb
popf
call
lea
pop
cltd
rolb
cmp
aad
fld
mov
add
jl
or
xchg
lea
pop
lcall
ds
addb
rorl
xchg
fldenv
popa
and
shll
cmp
je
jo
mov
popa
push
push
inc
in
dec
fldl
mov
movsl
ds
fsubr
push
inc
pop
mov
sarb
sbb
pop
push
mov
std
or
dec
std
out
fcomps
adc
sbb
je
imul
or
decl
test
decl
jmp
sub
sbb
sbb
cs
icebp
mov
les
int3
movlps
call
mov
in
pop
mov
inc
xor
roll
jnp
cmpsb
mov
in
mov
mov
movsl
in
and
pop
jg
and
cmp
cmp
cmpb
jae
inc
addb
sbb
lds
ret
sub
sub
sti
and
jo
out
or
push
and
mov
jle
mov
dec
rol
mov
xor
sbb
xlat
lea
pop
int
mov
sahf
jno
push
push
loope
std
ljmp
adc
dec
fcomps
jecxz
cmc
test
push
pop
mov
and
add
bound
mov
cmc
pop
test
push
dec
stos
mov
icebp
repnz
xor
into
jne
push
add
sti
imul
cmc
repz
add
dec
sbb
or
faddl
int
repnz
and
push
adc
data16
bound
in
fidivrl
adc
stos
cwtl
pop
mov
scas
sub
cmp
mov
cmp
scas
cmpsl
mov
pop
xor
xor
arpl
or
mov
mov
add
sbb
xchg
ljmp
in
inc
mov
shll
ficompl
cs
push
pop
test
scas
dec
fdivl
arpl
lcall
sub
mov
iret
pop
cltd
cmp
pop
and
or
inc
outsl
aad
ss
mov
andb
cmp
fwait
mov
enter
and
push
mov
repnz
sbb
add
inc
pop
gs
out
sbb
movsb
sub
cli
adc
push
push
jecxz
mov
jmp
mov
bound
icebp
xor
out
mov
je
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
mov
int3
movlps
cmp
dec
test
loop
arpl
mov
scas
xchg
adc
pop
in
loopne
mov
mul
scas
push
test
scas
fsubrp
cmp
or
or
push
and
cmp
xchg
or
es
pop
add
adc
xor
pushl
shrl
outsb
and
sbb
xchg
jo
mov
nop
aam
repz
es
jle
mov
in
es
or
shrb
repz
jae
loope
mov
mov
dec
ficoml
enter
xor
jno
dec
mov
mov
sub
xor
addl
popa
stc
inc
out
jns
add
repnz
jle
sub
cmp
xchg
std
mov
or
jmp
lock
or
lret
sbb
ja
sbb
dec
dec
mov
jo
loop
sub
sub
push
cmp
mov
std
fcompl
ror
inc
mov
adc
rcr
cmp
ljmp
sbbb
mov
jg
ja
inc
sub
imul
cmpsl
add
mov
std
fstp
ja
ja
aas
icebp
jne
aas
sbb
gs
lock
inc
xor
lcall
mov
rorb
dec
aam
mov
lock
sbb
or
js
popa
push
cmp
cli
or
and
popl
mov
idivl
roll
jbe
ret
lret
lret
xchg
inc
popa
pushf
add
sub
xor
mov
add
sbb
insb
lret
shl
fldt
xor
adc
cli
ret
js
xlat
or
mov
in
arpl
push
mov
dec
test
cld
out
stc
xor
or
sub
dec
repnz
mov
mov
cmpsl
nop
incl
jbe
sub
push
sbb
jo
pslld
adc
add
fimuls
xchg
pop
fdivl
shlb
decl
lock
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
pushf
lods
data16
adc
adc
in
test
insb
add
sarb
jns
or
add
xchg
mov
loopne
pop
jno
inc
andl
sub
rcl
movsl
xchg
jns
inc
aad
aad
addb
mov
stos
xor
hlt
jns
jmp
pop
inc
out
loopne
jno
fisubrs
in
dec
outsl
cwtl
dec
mov
cltd
dec
stos
ljmp
pop
insl
sub
cmp
pusha
pop
and
daa
or
inc
sarl
negl
daa
scas
mov
sti
inc
adc
lcall
insl
and
repz
pushf
enter
loopne
pop
lret
jb
adc
or
int
insb
cld
sub
xor
cltd
sbb
and
loope
iret
shll
ja
inc
loop
mov
sti
shlb
mov
in
sbb
loope
inc
das
push
sbb
sub
aaa
pop
sbb
jns
jno
jns
fldenv
mov
lret
shl
adc
mov
jp
imul
mov
sbb
sub
nop
iret
repz
pop
arpl
xchg
mov
insb
inc
fs
sbb
and
inc
jno
mov
jo
shlb
sbb
hlt
fists
movnti
inc
out
add
mov
bound
dec
repz
dec
int3
jno
aad
xor
shr
lret
fucompp
push
loope
mov
push
inc
loope
lahf
mov
dec
mov
call
js
loop
mov
das
aas
xchg
stos
sbb
fisubrl
imul
push
out
dec
dec
lock
mov
add
and
in
mov
adc
popf
add
nop
icebp
lods
cmc
mul
or
mov
push
xchg
xor
adc
pusha
popf
jnp
mov
int3
test
test
add
scas
popf
adc
adc
ret
sbb
mov
dec
add
add
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
lock
push
mov
adc
imul
jecxz
jns
cwtl
or
fdivs
movsb
outsb
std
idivb
jmp
cltd
mov
sub
mov
jae
push
xor
daa
ret
addl
xchg
cmpsl
sbb
mov
mov
sub
fcoml
mov
insb
jmp
aam
sbb
dec
mov
sub
push
cmp
roll
test
je
adc
stc
lea
pop
xor
inc
int
inc
jp,pn
loop
lods
movsl
movsb
sub
stos
jg
dec
int3
lods
lock
pop
dec
xchg
push
cmp
ficomps
in
andl
movsl
and
out
das
jmp
sbb
dec
orl
inc
dec
outsb
xor
jae
sub
jge
lret
sbb
xchg
cmp
jmp
xchg
imul
ret
lock
jmp
push
mov
push
mov
jl
sbb
or
mov
xor
into
fmuls
mov
add
mov
cs
rcrb
out
shrb
out
jns
sbb
data16
mov
xchg
aaa
inc
aas
push
lods
mov
jge
roll
mov
movsb
popa
pusha
cmp
lock
pop
mov
jmp
or
outsl
mov
sub
mov
xchg
ret
cmp
in
fidivrs
pop
push
lods
mov
add
addl
inc
add
cmc
scas
pop
push
xor
xor
rorb
enter
scas
fistpl
ret
ficoml
cmc
cmp
iret
mul
imul
in
pop
aad
aas
or
into
xchg
lea
andb
cmp
adc
dec
sub
lods
std
xchg
jns
in
dec
and
inc
repnz
les
fucomi
clc
movsb
roll
sbb
sahf
mov
sbb
or
mov
icebp
ficomps
popa
dec
dec
push
movsl
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
cmp
adc
sahf
adc
adc
icebp
mov
jecxz
mov
jns
int3
mov
fwait
or
int3
mov
xor
nop
adc
cmp
pushf
out
inc
lds
xchg
push
jo
in
je
or
imul
xor
cmp
jnp
adc
xchg
leave
pop
into
lock
and
jl
pop
cli
dec
dec
pop
jnp
jmp
test
fs
push
dec
stos
mov
clc
in
fistps
movsl
push
repnz
lret
cs
pusha
mov
xchg
mov
mov
cmc
or
lret
jmp
mov
insl
cltd
mov
push
mov
cmp
aas
jae
imull
push
xlat
jno
cmpsb
mov
hlt
sbb
iret
in
insb
push
dec
aad
mov
jge
loope
in
test
mov
enter
pusha
jle
int3
popa
pop
shll
ds
push
and
in
add
mov
add
mov
enter
cwtl
fwait
clc
fwait
cmp
sbb
sub
fs
and
mov
clc
adc
or
cmpsl
notl
lcall
push
sahf
mov
lahf
mov
cmp
sub
xor
sub
int
jmp
imul
idivb
nop
pop
cmp
or
dec
ret
push
stc
fisubrs
pop
notl
imul
fmulp
mov
imulb
xor
adc
fsubrs
push
pop
mov
sub
fs
in
fdivrs
sarb
xor
in
jbe
and
test
jb
cs
pop
stc
dec
fisubl
xor
and
xchg
jae
xor
call
add
int
outsb
inc
jb
mov
subb
lods
pusha
lea
jmp
mov
inc
jl
dec
cmp
pop
rcr
jno
mov
xor
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
cmp
js
lcall
mov
xor
ret
pop
push
xor
enter
out
xor
je
or
stos
or
cmpsb
and
push
inc
popa
popa
insl
or
les
mov
loopne
popa
pop
xlat
adc
push
ljmp
push
mov
dec
push
mov
or
push
roll
mov
out
or
scas
and
sub
aam
add
lret
mov
fwait
imul
mov
les
pop
in
sbb
pop
cld
ds
mov
push
mov
add
and
xor
leave
pushf
xor
pop
ret
sub
xor
push
pop
push
jae
ljmp
test
mov
xchg
and
fistpll
mov
mov
test
pop
jbe
sahf
icebp
fwait
mov
mov
in
xor
mov
addl
jno
pop
and
xchg
xlat
leave
ds
fimuls
or
loop
xchg
mov
and
dec
pop
js
sub
test
outsb
jns
push
push
and
dec
or
adc
add
fdivp
je
into
stos
pop
push
or
imul
into
pusha
sub
aam
fists
inc
xchg
popf
xchg
ja
add
pop
psubusb
pop
js
cmpsl
jb
out
fdivrl
repnz
leave
mov
dec
push
mov
xchg
daa
fldcw
pop
outsb
and
add
adc
cltd
pusha
ret
mov
cmp
pop
jno
xchg
leave
loop
clc
adc
lcall
stos
mov
or
push
or
repnz
dec
cmpl
add
lea
mov
and
xchg
cmp
xor
shl
pop
movsb
jg
or
inc
mov
push
dec
sbb
lret
pop
test
fstps
and
jecxz
int3
pop
push
or
jbe
xor
call
mov
leave
cmp
push
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
insb
inc
xchg
adc
adc
add
fiadds
lret
sbb
inc
cltd
and
bound
cld
sub
inc
imul
jecxz
les
lods
ljmp
or
cmp
aaa
iret
in
and
dec
and
push
or
sub
inc
ljmp
in
sbbb
dec
xor
in
xor
int
int3
mov
nop
or
int3
push
mov
push
jp
clc
mov
roll
or
repnz
loopne
movsb
aas
mov
mov
mov
add
rclb
test
je
repz
cmpsb
push
cmp
pop
and
sbb
push
xor
int3
dec
addr16
cmc
push
push
out
fwait
sub
imul
cmp
repnz
daa
jl
in
mov
and
pop
add
dec
gs
outsl
adc
cwtl
loop
sbb
fwait
mov
dec
std
std
punpckldq
mov
and
fwait
pop
bound
or
ds
dec
lahf
lahf
mov
fs
lret
iret
pop
dec
push
cmp
push
mov
out
xor
aas
pop
dec
dec
iret
inc
jmp
mov
jge
mov
or
push
mov
call
or
mov
mov
iret
iret
movsl
sbb
scas
test
mov
adc
xchg
shlb
cmp
pop
fs
int
sbb
cmp
jl
into
clc
pop
clc
imul
push
jae
mov
inc
adc
lcall
cli
fbld
call
xor
or
push
in
cmp
adc
add
xchg
and
sahf
mov
pop
xlat
cli
mov
iret
mov
sbb
xchg
clc
lods
inc
imul
iret
xlat
ljmp
mov
fnstsw
arpl
repz
rolb
sbb
inc
cld
les
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
or
rep
std
mov
adc
andl
xor
lcall
stos
cltd
push
into
pop
cmpb
xor
jp
in
mov
mov
push
aas
xchg
into
cs
sub
lds
outsl
cmp
psraw
mov
leave
dec
int
xor
mov
xchg
jno
dec
imul
xor
mov
jg
jmp
jecxz
shl
pop
stos
call
lds
cmp
jecxz
sahf
jge
bound
sub
pop
cli
adc
daa
outsb
out
loop
sub
mov
mov
outsl
mov
dec
pushf
xchg
das
or
inc
push
inc
aaa
jne
push
in
cld
jecxz
xchg
pop
cmp
mov
callw
add
es
dec
sbb
sti
in
stos
or
sbb
sbb
jae
sti
out
jbe
mov
pop
push
add
pop
jo
push
cwtl
movsl
xchg
mov
aad
ds
jl
insl
lock
in
fsubrl
test
mov
push
fnstcw
cld
push
mov
call
jbe
or
cmpsl
sar
dec
iret
roll
cmpl
cs
rcll
inc
stos
dec
out
mov
movsl
movsb
aam
jno
inc
test
mov
stc
test
mov
ret
xchg
out
in
xchg
popf
xchg
xor
sahf
int3
xor
sbb
hlt
test
jg
mov
pushf
push
mov
cmp
arpl
shrl
adc
movsl
xacquire
mov
inc
push
dec
cmp
pop
mov
sub
push
push
xchg
jp,pt
sbb
jecxz
sbb
adc
dec
mov
test
out
sbb
movsb
int3
mov
dec
mov
scas
fidivs
lcall
inc
cmpl
fwait
lock
mov
push
dec
loop
sbb
jno
adc
pop
lret
test
scas
push
jmp
mov
in
sub
andl
cmpsb
push
pop
xor
and
loope
test
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
popf
and
mov
adc
inc
in
aam
fwait
mov
add
fildl
and
into
sub
adcb
stc
pop
inc
sub
xchg
mov
mov
repz
popf
je
xorb
pop
ficompl
push
or
js
push
subl
or
call
inc
aad
pop
sbb
insl
mov
mov
push
mov
push
outsl
std
sahf
into
enter
jge
ucomiss
pop
std
sub
cltd
aam
jecxz
push
iret
inc
push
inc
stos
aas
je
cmp
out
scas
or
mov
xchg
push
into
in
rorb
in
mov
lods
jne
inc
mov
pop
adc
dec
addr16
mov
out
dec
or
es
imul
cmp
in
xchg
jp
pop
icebp
jecxz
pop
pop
insb
jp
jp
stos
outsl
pop
into
aam
add
jno
lea
lods
add
pop
adc
and
rcrl
je
xorb
mov
rcr
adc
jns
push
mov
or
stos
test
pushl
and
mov
mov
lcall
mov
psllq
clc
je
push
jmp
mov
push
nop
inc
push
xor
decl
cmc
sbb
leave
pop
cmpsl
scas
and
fnstsw
call
pop
jmp
in
lcall
cmp
ja
push
mov
imul
mov
and
in
or
sbb
in
jmp
and
test
jecxz
cmp
ficoms
cmp
int
dec
dec
sub
popa
and
fs
cmp
adc
mov
xor
jnp
sbb
xchg
add
shll
pusha
in
cmpsl
mov
and
jle
or
aaa
jecxz
and
xchg
sahf
xchg
aam
inc
inc
pusha
sbb
push
jmp
orb
lret
inc
and
inc
aad
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
int
js
test
adc
cmpsl
mov
stc
out
push
mov
pop
sub
stc
scas
or
mov
push
sub
rcll
pop
sub
xor
ja
ret
push
add
mov
in
ja
je
imul
gs
ss
ficoms
leave
cs
xor
push
adc
bound
and
aam
pop
push
adc
aas
mov
jle
cmp
fisubl
add
mov
idivl
fimuls
pop
and
xlat
dec
andb
jo
xor
mulb
lods
adc
movsl
jb
xor
adc
xor
scas
mov
mov
insl
stc
jle
xchg
loopne
push
sbb
daa
lcall
push
jnp
adc
mov
add
in
stos
xor
cwtl
mov
int
imul
fistl
lret
jle
cmp
or
add
int
out
jge
xchg
pushf
pop
cmpsb
and
mov
pop
lret
add
mov
xchg
adc
fcoms
fimuls
in
add
test
jecxz
dec
adc
add
sti
loop
push
jnp
and
jmp
push
jbe
ret
mov
or
scas
hlt
xor
mov
mov
adc
jbe
test
xlat
inc
cmp
lret
loop
push
pop
add
xchg
or
aas
stc
cmpsl
sub
adc
jo
sti
jmp
or
and
mov
xchg
fs
jmp
mov
adc
movb
or
call
outsb
notb
sbb
ret
push
xchg
mov
js
pop
mov
cltd
and
pop
xor
dec
sbb
sub
aam
sub
add
scas
mov
popf
pop
or
daa
stos
test
mov
fnsave
aaa
fwait
add
and
test
and
dec
mov
inc
xlat
imul
out
icebp
out
shl
jns
xchg
lret
push
sub
mov
loope
in
pop
or
call
xchg
push
adc
pop
out
xchg
jno
mov
mov
adc
cli
into
or
pop
jae
mov
cwtl
pop
xchg
jl
adc
fs
clc
and
dec
icebp
inc
cmpsl
scas
in
pusha
dec
jmp
stos
inc
mov
fucomip
mov
ljmp
mov
mov
fwait
add
xchg
aam
jns
pop
cmpsb
xor
jo
pop
lahf
loop
inc
mov
nop
jle
ss
dec
sbb
dec
jae
sbb
cmpsl
fmuls
mov
push
roll
mov
loop
call
in
iret
cmpsl
inc
pop
repz
addr16
push
jge
mov
stos
adc
and
jne
loope
push
jno
ja
pslld
nop
add
dec
xor
jne
inc
data16
cs
test
lret
iret
jmp
lret
out
aas
mov
fsts
adcl
or
cs
dec
imul
dec
xlat
jle
inc
es
shrb
mov
ja
mov
imul
aad
sub
sbb
cwtl
mov
sub
repz
jecxz
dec
inc
inc
test
push
repz
xor
push
mov
cmpb
push
sar
fs
jmp
les
jno
sbb
and
lret
push
inc
stos
insb
adcb
push
adc
adc
mov
xor
jne
mov
daa
xor
cmp
ja
mov
jno
dec
xor
es
sub
inc
int
aas
filds
imul
mov
aad
je
bound
pop
dec
mov
andl
cmp
jbe
test
into
insl
cwtl
stos
out
and
pusha
fs
xor
add
add
mov
aas
movsb
xor
cmp
cmp
jae
cmc
mov
sahf
ret
lods
and
cmp
cmp
inc
xchg
inc
cmp
subl
test
jge
insb
or
mov
fs
pop
fdivs
test
inc
ret
test
mov
dec
jae
hlt
stos
clc
arpl
aaa
push
loopne
in
imul
push
iret
xor
movsb
and
lcall
dec
sti
adc
arpl
jnp
stos
in
aam
ss
mov
in
jmp
stc
addr16
push
mov
or
cmp
sbb
push
sar
jecxz
mov
out
jae
dec
inc
clc
xor
push
mov
add
push
test
inc
xchg
sbb
sarl
dec
iret
shl
add
mov
out
cmc
ss
xorl
mov
in
mov
icebp
movsb
push
ljmp
pop
fisttps
test
sbb
dec
jae
dec
adc
outsb
sarb
jp
mov
test
daa
jg
movsl
mov
sub
leave
inc
dec
cmp
add
cs
add
pop
sbb
cmp
mov
inc
rcrl
fdivp
add
aam
iret
or
mov
imul
ret
sahf
add
call
jne
pop
mov
jge
fnstcw
add
in
cmp
inc
mov
mov
xchg
push
push
xor
xchg
sub
sub
mov
imul
fistps
imul
adc
jge
pop
push
addr16
inc
nopl
adc
or
ret
add
xor
shll
dec
cmp
gs
call
jmp
mov
cltd
push
int3
nop
movb
stos
mov
shlb
into
addb
xchg
sbb
es
push
add
xor
repnz
xor
imul
int
xchg
inc
fisubs
mov
mov
and
mov
popa
adc
scas
pop
fcoml
fsubrs
insb
mov
loop
mov
in
scas
or
fs
xchg
mov
pop
mov
adc
mov
loop
pop
scas
sub
stc
rolb
cmpsl
jp
inc
cmp
mov
mov
icebp
jle
mov
fs
xorb
sbb
test
xchg
fs
mov
pop
nop
dec
sti
or
adcb
cld
ss
stos
repz
lret
dec
xor
adc
lret
clc
repz
add
add
sub
sub
test
add
mov
mov
xchg
bound
pop
fildll
mov
jle
test
mov
push
inc
es
cli
ficomps
or
dec
sbb
scas
jnp
jns
clc
shll
imull
jnp
enter
movsb
dec
rcl
pusha
mov
fcmovnbe
ljmp
dec
cld
push
repz
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
