push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
mov
inc
mov
and
cmp
mov
pusha
nop
lods
mov
les
dec
inc
jns
dec
pop
pop
xchg
arpl
loopne
jmp
cli
xor
push
jg
insb
leave
movb
pushf
subl
nop
sub
int3
dec
pop
push
rcr
ss
xbegin
stc
mov
pop
mov
stc
add
push
cli
rclb
cmp
dec
ficomps
mov
outsl
mov
sub
loopne
cwtl
sub
nop
xchg
cmp
or
sahf
std
scas
mov
pop
xchg
and
mov
xchg
pop
test
in
sub
jmp
push
mov
fbld
call
mov
enter
mov
jno
xchg
cmpsl
lcall
scas
pop
sbb
jge
inc
nop
es
data16
xor
jecxz
lret
fsincos
push
testb
test
xor
pop
ret
cmpsb
pop
xchg
jmp
mov
scas
in
fs
cmp
icebp
push
jns
push
aam
cwtl
testl
xchg
loopne
cmpsl
adc
ss
adcb
popf
push
mov
std
aam
fstp
cmc
xchg
jne
xchg
xor
mov
or
push
pop
sub
fsubr
xchg
cmp
dec
or
push
dec
jp
add
sbb
push
sub
faddl
push
inc
mov
loop
mov
addr16
fld
stos
loope
ffreep
in
lret
push
mov
std
dec
int
jb,pn
xor
push
adc
adc
rcrb
ret
sar
and
mov
dec
fldcw
cmp
into
inc
daa
fs
sbb
or
int3
lret
mov
xchg
pop
mov
int
daa
repz
in
test
test
inc
jne
mov
lods
jp
mov
int3
inc
loopne
fdivrl
push
inc
dec
jge
sbb
test
and
jb
cs
mov
dec
cmc
mov
cmpsb
and
jge
pop
lds
les
dec
pop
adc
int3
clc
mov
push
gs
loop
out
shlb
mov
inc
xchg
sahf
fdivr
cltd
aam
inc
pop
inc
sub
popa
and
mov
lea
jp
sbb
jle
or
sti
imul
mov
adc
lahf
jg
adc
inc
push
ljmp
mov
push
sub
pop
sub
or
dec
sbb
cmpsb
stc
push
out
popa
fiaddl
push
jbe
jne
ljmp
xchg
add
mov
adc
xchg
cmpsl
movsl
xchg
mov
and
push
pushf
test
push
cli
outsb
xchg
mov
insb
pop
pop
call
mov
pop
outsl
push
test
adc
int
rcrb
jp
mov
adc
mov
xlat
lahf
adc
jmp
mov
push
outsl
push
sbb
cmp
fwait
sbb
aad
push
nop
xchg
nop
adc
data16
add
push
bound
insb
add
js
mov
dec
out
ds
rcl
sbb
aam
xlat
sbb
testl
clc
cmpsl
cld
out
rcrb
pop
sub
stc
push
jnp
mov
cmpsl
out
fwait
jbe
mov
inc
xor
push
dec
jmp
lock
loope
nop
subl
mov
data16
jle
sbb
cmp
aad
pop
ja
mov
mov
mov
fiadds
in
mov
jnp
rorl
daa
in
jmp
or
pop
jno
inc
fisttpll
cmp
xorb
mov
mov
dec
dec
rcll
arpl
cmp
sub
dec
insb
jmp
aaa
pop
pop
push
adc
shrl
arpl
dec
jnp
and
loopne
inc
cmc
cmc
call
aam
cld
mov
push
je
mov
leave
or
sbb
or
fildl
in
lds
mov
cmc
cltd
stc
insl
fwait
ret
jo
imul
aad
inc
decb
das
lock
lcall
inc
cmp
nop
gs
scas
sahf
jno
int
mov
mov
pop
shlb
cmp
xchg
and
cmp
daa
inc
mov
bound
jecxz
ljmp
rcll
sbb
test
jle
xchg
cmp
xchg
icebp
pop
insb
out
out
pop
mov
inc
xchg
pop
leave
outsb
inc
loope
cltd
pop
and
dec
xor
push
adc
add
stos
xchg
jg
andl
mov
stc
pushf
dec
push
fwait
nop
jg
jo
adc
les
rorb
inc
push
or
addb
push
add
or
cltd
data16
pusha
pop
pop
shl
adc
fwait
or
jno
mov
pop
addr16
cmc
inc
xor
test
divl
mov
js
push
pushf
add
or
out
pop
ss
movd
push
into
mov
and
lods
push
sub
nop
pop
cmp
stc
test
mov
inc
mov
inc
sbb
movsb
js
les
iret
bound
dec
inc
insb
dec
loopne
std
sbb
cmpsl
iret
inc
sti
pop
inc
scas
rcrl
std
sbb
jecxz
movsb
inc
icebp
dec
xchg
cmp
mov
fstpl
cs
dec
repnz
mov
insl
xor
pop
dec
js
gs
addr16
mov
add
sbb
jo
insb
movsl
popa
es
add
add
and
mov
push
xchg
push
lfs
test
in
sahf
add
fcoml
inc
inc
push
cli
jmp
or
xchg
dec
arpl
sub
pop
push
pop
nop
xchg
dec
sbb
xchg
test
sbb
mov
je
fldt
fdivs
sti
mov
mov
inc
mov
in
xor
dec
pop
mov
repnz
push
push
xor
push
dec
xchg
xchg
movsl
mov
xchg
dec
into
fs
lock
std
lock
andb
adcb
mov
popa
sbb
mov
popf
jmp
mov
xor
sub
jge
adc
inc
ljmp
psrlq
out
push
test
repz
in
sub
xor
xlat
jns
push
xor
pop
mov
mov
xchg
push
lcall
push
test
and
hlt
mov
push
xchg
mov
js
adc
aas
pop
mov
stos
adc
sub
fidivrs
jecxz
insb
cmp
rcl
adc
push
into
xchg
lea
test
and
adc
inc
and
mov
add
cmpsb
and
inc
sub
cmp
jge
movups
int3
jp
inc
dec
fldt
sub
cmp
pop
xchg
iret
xor
cltd
pop
pop
cmp
mov
xchg
push
push
adc
mov
and
jecxz
js
jns
or
jno
jg
mov
inc
add
cs
and
inc
jecxz
sub
push
pop
jmp
roll
mov
adc
mov
pop
xor
in
popf
adcl
fsts
cmp
ret
lea
sub
mov
inc
movsb
pushf
cmpsb
adc
je
jb
pop
or
cmp
cmpb
adc
rcrb
xchg
xchg
in
sub
lahf
mov
sbb
and
mov
aad
aaa
adc
mov
add
int3
sub
inc
xchg
mov
rorl
shrl
cwtl
sti
shrd
clc
outsl
loope
aam
xorb
and
addb
push
inc
cmp
jno
das
in
mov
jg
int3
out
mov
mov
cltd
leave
push
sarl
stos
push
mov
call
repnz
push
pop
mov
pusha
lret
lds
inc
clc
mov
adc
ss
mov
ret
ljmp
addr16
pop
pushf
jnp
jecxz
sti
and
testb
add
gs
pushf
inc
xchg
pop
sahf
jbe
repz
add
enter
pop
cmp
sbb
data16
inc
imulb
cmp
pusha
ds
sbb
xchg
add
jae
je
shr
cli
push
dec
lret
mov
rcl
cli
cmc
rorb
sbb
test
mov
js
outsl
cltd
sbb
lahf
orb
push
add
inc
orl
fimuls
pop
mov
test
iret
push
test
sub
jmp
popa
stos
mov
push
inc
mov
pop
fcompl
add
xor
and
jnp
xor
pop
cltd
or
mov
push
mov
adc
inc
in
jmp
nop
ret
push
scas
iret
js
clc
cmp
ja
fcmove
movsb
int
add
bound
push
inc
jg
pop
testl
flds
popf
sub
push
or
cmpsb
test
lahf
pop
movsl
fcmovu
loop
nop
xchg
push
xor
shlb
cmp
gs
popf
dec
and
xchg
cmp
call
sub
adc
int
ss
sarl
pop
int
adc
outsb
popa
inc
sub
cwtl
xorb
jne
inc
jne
call
nop
aam
repnz
lods
mov
or
adc
sbb
nop
and
mov
ret
xchg
rol
jo
pop
jae
into
dec
inc
cmpsb
scas
mov
jae
fistpl
sarl
or
and
ret
imul
imul
ret
push
add
mov
ja
mov
repnz
fisttpl
jle
mov
add
xor
mov
lds
cmp
and
push
xchg
or
aad
into
loope
mov
loop
fs
outsl
inc
mov
cmpsb
clc
movsb
adc
lods
mov
popa
push
out
cmp
insl
lcall
shl
adc
push
ret
mov
loope
xchg
movsl
pop
jl
push
mov
int3
mov
pushf
sbb
adc
dec
insl
adc
int
mov
mov
fwait
pop
jp
xchg
jg
xchg
cmp
adc
in
and
fmuls
fchs
stc
lock
fcoms
ds
cmpsl
out
jno
sti
cmpsl
mov
repz
jo
cltd
xchg
outsb
shrb
dec
loopne
test
je
dec
sbb
ret
cwtl
adc
fisubl
mov
add
pop
aaa
outsl
stc
push
js
in
cmpl
pop
xchg
push
test
dec
ret
int
loope
stc
jns
arpl
push
mov
add
out
dec
mov
push
insb
adc
in
ficoml
pusha
mov
cwtl
dec
arpl
cltd
aad
jnp
imul
es
sbb
cmc
dec
mov
cmpb
mov
mov
lea
jle
cmp
scas
mov
fmull
inc
sbb
pop
aam
in
movsl
repz
lods
stc
nop
iret
hlt
popf
lahf
das
jp
xlat
dec
cmp
xchg
jle
jmp
xrelease
xchg
fwait
rorb
addr16
dec
das
push
cmp
or
test
rolb
jb
shr
jl
lock
scas
stos
mov
mov
push
push
mov
push
test
xchg
push
mov
lret
cmp
pop
adc
xorb
pop
rol
into
or
jmp
inc
cld
insl
in
adc
nop
int3
mov
push
dec
mov
xchg
mov
xor
sub
adc
fbld
loop
mov
pop
scas
gs
cs
dec
push
cmc
jb
andl
subl
into
pop
fs
inc
cld
mov
adc
loope
push
push
xorb
aas
push
ror
lock
sub
daa
sti
mov
xchg
dec
jns
cmp
push
jle
lock
loop
jg
dec
popa
repz
nop
scas
cmp
pushf
adc
push
mov
lods
repz
jmp
jmp
call
outsb
bound
pop
movsb
lahf
popa
add
dec
inc
int3
rol
sbb
fisttpl
pusha
sbb
lcall
shlb
mov
sbb
push
into
add
cltd
sbb
mov
mov
or
bound
imul
rep
jno
std
and
mov
movsl
cmpl
mov
jbe
xchg
sub
insb
das
addl
lcall
adc
push
jns
out
sub
xor
mov
pop
arpl
bswap
shr
shll
or
xor
cmp
mov
rorl
in
call
inc
sbb
sbb
mov
pop
mov
shrb
fs
shlb
and
fnstenv
negl
and
dec
das
fisubrl
cli
sub
lea
and
daa
mov
push
lds
pop
mov
mov
in
or
bound
cltd
mov
sub
jp
xchg
fldcw
insb
in
icebp
xacquire
mov
mov
ljmp
scas
inc
jbe
mov
ljmp
mov
mov
dec
outsb
out
mov
and
imul
xor
clc
cmc
dec
addr16
push
out
in
dec
sub
xchg
mov
and
xchg
sub
out
adc
xchg
pop
fwait
icebp
decb
std
cltd
in
imul
cld
fistpl
outsl
stc
movsl
xchg
test
or
test
jmp
jmp
sub
lods
fildll
outsb
mov
or
mov
jecxz
push
fsubl
xchg
enter
repz
aad
inc
add
das
xchg
add
pop
hlt
adc
jbe
jno
xchg
mov
pusha
pop
call
adc
outsb
in
in
pop
xchg
sbb
cs
cmc
cli
xor
dec
jl
sub
mov
dec
ljmp
outsb
sub
outsl
inc
pop
dec
mov
push
mov
in
rcl
scas
mov
hlt
sub
pop
lea
les
insl
out
mov
inc
jnp
cmp
mov
xchg
mov
jb
sti
jg
mov
cmp
lods
into
decb
mov
adc
and
adcb
fwait
xor
xchg
out
mov
xchg
addb
xchg
xchg
ja
sub
push
xchg
or
pop
push
out
repnz
pop
inc
mov
out
test
cwtl
hlt
inc
stos
lret
pop
repnz
inc
xchg
push
sbb
sub
scas
sarl
mov
xorb
add
fmulp
sub
fcom
imul
stos
add
loopne
add
jb
and
call
ret
rorl
dec
mov
cltd
cmpsl
jns
xchg
xor
enter
cmp
cmpsb
jp,pn
movsb
sub
or
andb
subb
fstpl
fdivl
in
sbb
jb
mov
ljmp
mov
inc
loopne
aas
adc
mov
rol
stc
mov
shlb
jp
scas
push
leave
push
xorl
sbb
dec
addr16
dec
pop
mov
outsl
and
sub
xchg
add
sbb
shlb
mov
dec
scas
or
out
push
cmpsl
and
xor
jb
inc
lock
jbe
jbe
iret
scas
xchg
push
push
aam
out
sub
lret
add
lock
sub
mov
sub
cmp
jo
inc
mov
das
adc
fsts
add
push
cmp
jbe
xor
jl
fsts
xor
wrmsr
adc
std
jecxz
mov
cmp
scas
sarl
jmp
jnp
adc
fisttps
dec
add
and
ss
cmp
jecxz
stos
push
icebp
mov
outsb
push
cmpsl
aas
cli
fsts
xchg
xchg
psubusw
mov
mov
sub
data16
mov
jb
addr16
dec
fnsave
sbb
or
pusha
dec
inc
add
sub
jae
push
mov
bound
insb
cmpsb
mov
add
pop
mov
cmp
cmp
mov
xor
into
outsl
andb
arpl
shr
movzwl
pop
rorb
lahf
pop
fstl
cmp
cmpsb
inc
aam
pop
cli
xor
sub
int
cld
dec
sti
jp
and
ljmp
mov
mov
cmp
addr16
sbb
xchg
push
mov
cmpb
mov
cmpsl
xor
mov
pop
lods
adc
sub
xlat
push
push
pop
or
pop
xor
jne
lret
inc
lea
pop
les
inc
cmp
addr16
in
push
pop
into
adc
cmp
cmpsl
cwtl
outsb
movsb
out
std
cmp
sbb
cmp
out
test
push
or
das
push
out
pop
insb
jg
jns
jmp
ja
test
pop
dec
mov
sub
mov
daa
adc
sbb
repnz
jns
test
inc
inc
xor
push
ja
jne
push
or
sti
mov
insb
jbe
adc
pop
sbb
push
dec
push
sbb
scas
sub
add
xlat
test
pop
push
lock
je
mov
daa
inc
pushf
incl
adc
lahf
sub
inc
inc
add
fs
mov
scas
pop
les
subb
inc
adc
push
lret
xor
repz
aad
stos
arpl
inc
inc
in
dec
cs
or
inc
sar
adcb
clc
pusha
dec
movl
cmp
push
rorb
or
hlt
pop
push
movsb
push
adc
xchg
ja
ss
seto
dec
repnz
pop
jp
orl
add
sahf
and
mov
sub
in
scas
loopne
inc
jle
sub
pop
imul
imul
sbb
loopne
filds
dec
mov
mov
mov
xchg
orb
mov
inc
xchg
repz
fmulp
and
cmp
jg
push
cli
arpl
inc
gs
call
mov
lock
inc
sbb
jnp
mov
das
gs
popl
xor
es
xchg
ljmp
rcrl
ss
mov
repnz
popa
jnp
adc
sub
iret
jmp
stc
lret
mov
aam
mul
and
ja
dec
xchg
push
or
push
sub
cmc
lahf
push
shll
jg
mov
pop
lret
adc
pop
dec
repnz
adc
jmp
cmpsb
ja
sub
inc
flds
xchg
sbbb
pop
pop
outsb
dec
aad
push
mov
sbbb
dec
sub
inc
fisubrs
inc
lahf
ficoms
out
push
iret
pushf
mov
cs
repz
addl
xor
mov
dec
pop
or
inc
rorb
mov
mov
scas
mov
or
sahf
xchg
push
sub
mov
and
cld
ds
and
jbe
lea
shrb
mov
fdivp
xchg
fs
lahf
pop
test
lahf
mov
push
xchg
rcll
repnz
jge
adc
lcall
in
lahf
or
adc
cmp
outsb
shrl
push
in
mov
les
adc
lds
mov
lods
insl
add
adc
rcrb
jbe
dec
out
push
add
rorl
sbb
icebp
orl
mov
inc
mov
adc
jb
cmc
js
repz
popa
and
imul
xchg
daa
cmp
pop
fiadds
les
scas
mov
fisttpl
test
pop
jb
xchg
call
jne
dec
call
std
mov
aaa
adc
adc
inc
popf
pop
pop
push
loope
adc
test
jnp
int3
jecxz
stos
or
mov
sbb
ljmp
ljmp
dec
and
pop
inc
mov
call
movl
jns
cmc
jae
stc
lcall
mov
adc
inc
shrb
cmpsl
in
test
xchg
addr16
lret
sub
movsl
daa
and
cs
orl
pop
mov
jg
sbb
jl
jns
mov
mov
add
dec
shr
in
sub
scas
icebp
push
ljmp
decb
dec
mov
and
push
lods
dec
or
aas
cmp
sub
adc
fstpt
cmp
dec
jo
testl
push
xchg
popa
dec
sbb
xchg
dec
int
stos
cmp
loope
pushf
test
adc
adc
sub
or
cmpsl
inc
inc
out
addl
jno
jl
jp
push
out
testb
sbb
push
jbe
mov
and
mov
into
es
cmp
pop
add
jae
jmp
mov
std
in
push
cmp
push
popf
cltd
ja
or
jmp
sub
jo
xchg
or
in
ds
enter
stos
call
mov
mov
mov
mov
push
sub
je
ret
xor
dec
mov
imul
clc
insb
mov
mov
mov
jb
mov
and
cmpsb
xor
mov
pop
push
out
push
pop
ljmp
idiv
push
sbb
cmp
cmpl
add
mov
insb
push
xchg
jge
test
push
rcrb
pop
mov
pusha
inc
dec
xchg
and
stos
rcl
push
or
lock
or
xorl
and
bnd
jge
ja
ljmp
rcrb
jge
pop
pushf
or
enter
sbb
xchg
stc
shlb
xchg
xchg
sarb
sbb
xchg
xor
xor
ficomps
push
or
mov
frstor
lret
mov
and
push
inc
pop
test
or
pop
and
mov
mov
mov
cs
push
xlat
ja
xchg
scas
xchg
pop
iret
adc
mov
fsubl
scas
mov
lods
cmp
ret
sahf
sub
pushf
ss
sub
mov
or
das
jnp
cmp
mov
jns
cmpsl
dec
cli
add
xor
pop
inc
aaa
sahf
mov
push
rcr
popa
xchg
pushl
fnsave
lahf
ficoml
push
aas
adc
inc
adc
lcall
add
jno
movsb
jno
cltd
mov
jg
cmpsl
insb
xor
shll
push
mov
jbe
xchg
adc
jae
cld
test
pop
add
pxor
lods
les
pop
jns
lods
lods
call
stc
rcrb
in
cmpsl
mov
xor
arpl
sbb
addr16
push
xor
aad
pop
aaa
std
out
pop
xchg
adc
arpl
cmc
xchg
mov
xchg
incl
inc
test
aad
xchg
ljmp
cmp
or
mov
add
in
add
ljmp
scas
mov
pop
push
jbe
inc
mov
adc
lret
inc
daa
xor
std
sahf
dec
fwait
rol
loopne
cmp
fmull
lret
jp
cmp
mov
xchg
adc
insl
in
mov
xor
aaa
mov
jl
sbbb
clc
loop
pop
pop
shll
push
ss
dec
inc
xchg
in
stos
sti
ret
jo
mov
aam
jb
lods
repnz
mov
cwtl
pop
imul
jl
push
and
or
push
sub
sbb
mov
popa
hlt
insb
insb
lret
bound
cmp
leave
lret
movsb
inc
jne
adc
pop
inc
sbb
fs
mov
mov
inc
mov
out
jae
adc
mov
mov
xor
clc
xchg
ljmp
imul
jno
outsb
subb
cli
out
std
in
pop
sti
sub
cli
add
mov
fdivl
add
xor
jae
inc
test
xchg
push
decl
and
dec
mov
xor
enter
push
arpl
ljmp
test
cmc
jg
mov
dec
push
jecxz
dec
pop
ret
mov
pushf
xlat
cmp
sub
loopne
push
xor
mov
xlat
inc
imul
jns
mov
shll
mov
mov
sarl
test
cmp
js
or
lods
or
lea
scas
pop
xorb
fwait
dec
pop
sub
in
ror
stc
xchg
ret
xor
dec
popf
mov
adc
push
push
jge
jecxz
outsb
add
push
xacquire
mov
fildl
and
mov
pop
out
inc
aaa
and
pop
mov
dec
dec
pop
bound
xchg
int
out
cmpb
lret
popa
xchg
mov
push
add
lcall
out
adc
into
and
xchg
je
das
mov
and
sbb
cmpl
inc
cld
scas
push
xchg
inc
arpl
repz
sbb
in
fadds
sub
test
int
ss
or
mov
clc
add
iret
and
test
sbb
icebp
mov
aaa
idiv
jno
xchg
fistps
xchg
icebp
fstps
std
sbb
xlat
shll
imul
mov
push
jl
aam
jb
dec
jp
jns
xchg
jl
and
ljmp
sbb
lea
imul
fisttpll
loope
add
sbb
or
out
imulb
insb
mov
stc
rolb
jmp
loop
imul
push
faddp
ret
sbb
mov
dec
shll
mulb
push
je
into
cmp
inc
imul
mov
mov
lret
insl
jae
inc
fwait
lds
test
fmuls
add
sbb
and
pop
push
ds
shlb
xor
stos
lcall
fists
int
aad
addr16
out
jns
fistps
pop
mov
cmp
dec
cwtl
daa
jo
cmpsb
out
cli
and
cmp
ja
push
sbb
push
cmc
not
mov
hlt
dec
push
push
mov
data16
mov
cs
fimull
inc
scas
sbb
orl
pop
ret
pop
or
out
vcomiss
addr16
aam
mov
xchg
jmp
fmull
popa
dec
out
mov
daa
adc
and
dec
push
daa
stc
fnstsw
psubusw
rcrl
hlt
xchg
mov
pop
lahf
mov
jae
mov
xchg
scas
cmc
pop
int
in
inc
sahf
cld
fbld
add
xlat
pop
xchg
in
lcall
loopne
adc
aas
inc
loope
mov
mov
test
ss
ds
add
inc
imul
cmp
pop
stos
insb
es
out
rorl
cmc
pop
sarb
mov
cli
mov
or
cltd
lds
dec
movb
test
mov
cmpb
mov
lea
mov
pop
iret
mov
adc
fistpll
fwait
xlat
dec
adc
lods
or
mov
push
in
int
mov
ja
stos
pop
mul
adc
fldcw
inc
push
ljmp
xor
inc
lock
add
lds
and
sub
jo
movsb
in
mov
and
fs
lret
dec
in
cmpsb
cmp
iret
sub
iret
aam
add
sub
cmpsb
inc
or
sbb
sbb
push
aam
or
xor
xchg
inc
icebp
das
les
insb
mov
dec
pushf
xchg
fldt
pushl
test
pop
cmp
cltd
inc
fwait
das
pop
outsl
sub
sub
and
cmpb
loope
xchg
mov
cmc
fwait
xchg
repnz
jmp
test
pop
pop
popa
rclb
mov
pop
cmpsb
push
cmp
add
cld
mov
frstor
stos
rolb
rclb
scas
and
pop
das
stos
sahf
and
push
pop
adc
das
aaa
mov
push
scas
cwtl
loope
idivl
loopne
nop
leave
loopne
scas
sahf
sbb
rcrb
cmpsl
cld
roll
xor
sahf
adc
into
out
shl
sbb
or
mov
imul
jmp
push
arpl
lret
adc
xlat
mov
mov
mov
inc
cmp
and
xchg
lods
sbb
pushf
les
and
stc
push
pop
adc
sub
sti
lods
xchg
xchg
dec
repz
pushf
inc
jbe
enter
or
xor
xor
cmp
mov
ret
test
jne
ja
mov
mov
pop
push
or
cmp
mov
pop
cmp
sbb
mov
pop
shlb
rorl
dec
cli
sub
push
addb
ds
cmc
fldcw
xchg
js
sub
bound
add
pop
push
dec
pop
adc
andb
dec
jp
mov
inc
sahf
add
mov
mov
pop
pop
pop
aas
mov
sub
sub
pop
sbbb
leave
push
xlat
das
xor
imul
push
loopne
lahf
ljmp
enter
fistpll
rcr
mov
mov
fiadds
rcrl
push
lret
mov
and
cmp
loopne
loope
dec
vxorps
das
lods
movsb
das
adc
stc
pop
mov
jge
mov
out
mov
xchg
fstpt
xor
clc
push
mov
cmp
inc
xchg
jge
push
dec
shrb
cmpb
dec
ds
inc
push
cli
mov
mov
popf
iret
test
push
in
adc
push
std
loop
xor
and
jg
sbb
cmp
pop
es
inc
dec
or
and
ret
inc
sub
arpl
xor
test
cmp
pop
cwtl
inc
dec
imul
push
ljmp
lock
inc
xor
daa
loope
sub
pop
lods
js
xchg
xchg
inc
jne
aad
stos
scas
inc
sub
add
and
enter
xchg
into
cwtl
mov
and
into
in
lods
mov
lcall
mov
push
mov
cmpsl
loop
repnz
or
pop
outsl
repnz
xchg
xchg
adc
dec
test
mov
iret
jno
out
push
xor
mov
add
ficoms
cmp
sbb
inc
xchg
sub
push
xor
test
and
inc
push
test
and
stc
pop
or
pushf
mov
xor
xchg
rorl
adc
cmp
jb
mov
xchg
das
stos
push
ret
adc
ret
lock
bound
int
sub
shrl
in
jle
leave
iret
pop
icebp
std
mov
xchg
push
enter
xchg
jmp
fwait
ljmp
mov
pop
jp
stos
add
ret
adcb
lods
xlat
jmp
pop
adc
xchg
cmp
jecxz
adc
add
repnz
movsb
inc
hlt
adc
xor
inc
std
sbb
cmc
pop
xor
or
pop
in
das
shl
lcall
in
mov
inc
lcall
pop
addl
sub
gs
xchg
mov
movsb
into
rcrl
sub
dec
push
mov
stos
ljmp
insb
notb
inc
out
mov
push
inc
clc
loop
repnz
out
inc
sub
std
out
cmpsb
add
ljmp
loop
inc
push
insl
loop
pop
xchg
lret
shrb
fdivs
test
ror
push
mov
or
adc
les
mov
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
inc
sbb
pop
jl
dec
pop
jl
ljmp
dec
cmp
rol
inc
cmp
jns
inc
fdivrs
popa
pop
pop
push
inc
in
jb
dec
data16
mov
mov
pusha
sbb
aas
mov
sbb
repnz
cmc
fsubs
test
cltd
xchg
clc
lret
ret
test
xchg
inc
fnstenv
add
movsb
cmpsl
mov
jl
out
mov
push
cmp
rorl
shr
push
xor
sub
pushw
cmc
push
nop
pop
enter
mov
pushf
push
movsl
sbb
cmp
lea
in
std
cmp
mov
and
xor
enter
dec
subb
dec
out
xor
and
and
sbb
mov
out
not
icebp
or
cld
sub
enter
push
xorl
imul
in
pop
out
mov
mov
fcomps
fsubs
inc
xor
pop
jecxz
push
loopne
mov
imul
imul
aad
nop
ss
fs
popa
mov
sahf
sbb
fwait
cmp
inc
add
pop
mov
std
adc
mov
xchg
pusha
rolb
clc
into
mov
shll
dec
jge
xchg
mov
push
repz
jae
jp
xchg
jecxz
xchg
cmp
lret
int3
inc
mov
jecxz
add
sbb
repz
adc
call
push
decl
sub
mov
andl
pusha
adc
xchg
pushf
cmp
ret
jae
dec
lods
xchg
cwtl
or
in
sub
sub
scas
mov
out
add
xchg
push
adc
ficomps
or
sti
pop
xchg
stc
jecxz
or
push
inc
cmovne
test
cvtdq2ps
scas
jno
inc
or
jle
pop
inc
popa
sbb
mov
cmp
add
pop
xchg
or
adc
mov
and
inc
ja
sbbl
cmp
cmp
test
scas
mov
outsl
inc
loop
dec
data16
call
mov
mov
cmp
xchg
mov
in
inc
cltd
lahf
sbb
cs
xor
movsl
jmp
je
in
inc
pop
data16
mov
push
sarb
and
xor
insl
pop
inc
cwtl
dec
lahf
sbb
adcb
fadds
push
jb
popf
sub
sbb
test
out
sub
xchg
adcb
cltd
cmp
mov
cmpsb
lea
and
fdivrs
adc
mov
cmc
jecxz
inc
popf
lock
popf
push
pop
mov
movl
sahf
fdivl
push
sub
pop
dec
insb
jle
inc
jne
fwait
sbb
bound
inc
xor
loope
mov
adc
fdivr
jno
or
mov
fidivrs
ljmp
int
mov
xchg
and
andb
movsb
aas
or
mov
ds
shrb
mov
sarl
stos
mov
bound
mov
lods
or
test
jno
dec
xchg
aam
scas
xor
hlt
xor
push
icebp
dec
sbb
inc
pop
cmp
rcrb
xchg
mov
mov
sar
or
jno
mov
mov
jg
push
inc
int
loope
or
stc
cmp
insl
mov
aas
and
ja
leave
xchg
jns
pusha
jecxz
test
ljmp
mov
loope
xchg
xchg
call
push
push
dec
adc
cmpsb
inc
iret
rorl
mov
jno
cld
aam
mov
add
in
or
cmp
adc
jmp
sbb
test
push
adc
pop
pop
cmp
or
lahf
xchg
mov
inc
lret
jne
sub
stos
insl
xchg
mov
mov
inc
test
pop
push
arpl
xor
mov
dec
adc
int
push
xor
jne
and
push
add
and
les
xchg
ds
sbb
dec
rolb
jp
xor
inc
xchg
push
fldenv
fs
jge
roll
sub
cmc
in
or
insl
push
nop
jns
iret
jle
cmpsb
outsb
gs
pop
jl
mov
sar
pop
inc
sub
pop
mov
sbb
div
xchg
les
or
movaps
push
mov
divb
ljmp
and
fidivrl
sti
jp
or
scas
sbb
pop
and
cmp
lret
pusha
clc
icebp
dec
mov
aaa
inc
cwtl
mov
or
sub
mov
rorb
xchg
adc
xor
push
mov
std
insl
sti
or
roll
mov
daa
fnstsw
sbb
adc
mov
movsl
test
and
pop
pop
adc
mov
movsl
call
aad
or
clc
bound
out
cli
loopne
and
dec
xchg
xchg
pop
arpl
ss
push
rorl
cld
and
pop
xchg
iret
sub
jg
jle
loopne
cltd
pop
and
and
mov
jg
cld
out
nop
mov
adc
fptan
adc
cmp
daa
inc
loop
call
sub
nop
das
pop
out
add
divl
mov
inc
loop
aam
rol
jo
and
hlt
je
sub
add
dec
fldpi
stc
cld
movsb
scas
mov
shrb
push
popa
sub
or
pop
push
ss
mov
inc
cmpsl
rclb
adc
daa
fadd
push
pop
adc
sbb
push
mov
inc
mov
xor
mov
lea
cld
inc
adc
subl
cmp
clc
xor
loopne
push
push
adc
sub
mov
jno
mov
call
or
cmp
jo
daa
push
lret
adc
pop
imul
out
sub
popa
and
or
clc
pop
in
lea
fadds
stc
insl
insb
sub
add
mov
fsubr
repnz
orb
movsl
in
js
lock
jmp
sub
xchg
ja
xchg
mov
ds
loop
or
dec
mov
repz
das
add
and
mov
jne
out
ficoml
or
cld
xor
fidivl
and
fiadds
push
ljmp
in
cmp
into
sahf
xchg
xchg
fnsave
mov
movl
dec
loopne
inc
mov
loopne
popf
fwait
cmp
in
fidivs
dec
mov
pop
sub
sbb
pop
push
pop
pop
aad
xchg
lods
mov
out
pop
in
mov
sarl
out
and
imul
movsl
inc
jo
mov
mov
mov
ds
dec
sbb
test
out
or
jle
shlb
adc
cmpsl
add
xor
mov
mov
fisubrs
jbe
test
lahf
out
je
mov
mov
sub
jb
mov
cmpsb
shr
ficomps
iret
xchg
mov
lret
into
bound
dec
inc
lods
ficomps
jno
mov
mov
ret
jl
cli
jae
out
pop
loopne
jp
sub
sbb
or
stc
pop
cmp
lret
hlt
pop
xchg
outsb
xchg
dec
pop
in
xor
xor
popa
sbb
and
repz
lretw
into
fidivl
mov
xchg
add
test
push
cmpsb
imul
add
adc
xlat
and
push
or
pusha
jne
ds
and
or
hlt
stos
inc
lock
sub
add
add
imul
dec
dec
and
xor
pusha
das
inc
xchg
push
lret
push
jmp
aam
lock
js
mov
shrl
lds
push
lods
and
mov
in
jo
jmp
inc
mov
mov
in
mov
xlat
push
dec
cs
mov
add
xor
cmp
icebp
stos
pop
sub
xor
cmc
jmp
add
mov
arpl
in
outsl
lods
cmp
inc
rcrl
sub
aas
mov
dec
lds
cmp
fbld
mov
add
outsl
and
xlat
sub
mov
or
jnp
xchg
and
mov
xorb
in
dec
cmc
dec
adc
or
fisttpl
roll
rorb
sub
in
fisubrs
adcl
adc
decb
mov
jl
addr16
cmpsb
and
les
dec
pcmpgtw
cmp
movsl
out
sub
mov
cli
push
iret
push
popw
mov
fstps
adc
push
test
add
and
ds
dec
fistps
dec
cwtl
pop
jg
jbe
push
mov
add
push
fimuls
and
xchg
xor
pop
or
push
push
mov
imul
or
xchg
ss
in
fcomps
out
push
mov
pop
cmc
lahf
aas
or
jnp
cmc
cmp
mov
pop
inc
inc
repz
xor
and
pop
jne
addr16
jl
lahf
mov
jp
aam
call
pop
sbb
xchg
cwtl
std
adc
lcall
je
fs
cmc
add
push
mov
pop
push
pop
insb
mov
xor
cmp
fs
pusha
pop
adc
xchg
mov
mov
stos
push
sbb
mov
andb
jae
ja
dec
andl
adc
cmp
mov
mov
inc
adc
jo
ljmp
nop
adc
leave
imulb
pop
push
push
or
add
jns
test
lcall
push
adc
aaa
insb
aad
rolb
shl
in
and
add
jnp
sub
clc
mov
push
xchg
insb
sub
lds
ror
ret
push
xchg
inc
stos
into
xor
sub
mov
xchg
or
mov
movsb
jnp
movsl
test
cmp
pop
dec
cmp
clc
xchg
ljmp
test
into
jae
push
mov
cwtl
imul
jne
cld
jle
mov
pop
xor
adc
push
jne
popf
cmp
cmp
jnp
idiv
out
inc
insb
movsb
mov
push
and
mov
ja
mov
and
xor
out
xchg
decl
inc
mov
sub
push
fsubrl
aad
xorl
sbb
sbb
mov
orb
cmpsb
sarb
push
pop
mov
je
cmpsb
in
push
push
push
xor
movsb
mov
adc
sarl
mov
mov
cmp
xorl
lret
jge
push
fistps
mov
popa
das
mov
inc
cli
mov
push
dec
movsb
mov
out
cmp
sbb
inc
mov
mov
sbb
sti
push
or
pop
test
adc
adc
or
lret
fisubs
jl
mov
in
cmpsl
push
xchg
sbb
movsl
sarb
lahf
dec
push
call
aad
insl
mov
inc
or
scas
fidivrl
cli
pop
pop
insl
adc
sbb
out
stos
lods
mov
dec
stos
shrb
test
cmp
add
lods
add
adcl
adc
xor
fsubrs
lcall
aas
std
jle
adc
test
mov
mov
mov
fmul
cmc
add
les
sub
ret
mov
jmp
loopne
mov
sbb
out
dec
dec
dec
movsl
cmpl
js
jle
xchg
shr
push
in
cmp
cmp
push
in
xor
in
jp
jno
movl
pop
mov
xor
cmc
jbe
and
dec
jno
push
fstl
adc
adc
std
push
dec
ret
jmp
test
push
sub
lock
push
push
inc
fnstenv
mov
test
test
xor
loope
lret
mov
mov
cmp
cltd
ret
push
mov
and
jo
mov
inc
adc
dec
jle
paddw
xor
cmpsl
mov
loop
je
adc
push
or
add
movsl
add
mov
test
je
movsb
or
in
pop
icebp
mov
dec
and
mov
push
add
popl
push
jecxz
adc
cli
xchg
mov
scas
cmpsl
lahf
dec
popf
xchg
out
out
daa
lea
inc
dec
in
xlat
or
xor
and
loopne
jmp
ficompl
mov
jle
mov
add
push
sub
adc
sbb
mov
in
adc
pop
fbstp
outsl
lret
add
fstpt
loope
outsl
sbb
ret
cwtl
push
dec
repz
pushf
cmp
mov
aas
cmp
mov
inc
jno
xchg
call
test
cmp
mov
pop
and
or
es
jecxz
push
cmp
pop
loope
out
mov
aaa
and
dec
jno
repz
pop
push
cmpl
scas
cld
shll
add
fdiv
imul
lods
dec
cmc
shrb
push
push
inc
xchg
xchg
addr16
inc
adc
lret
lea
int3
jle
mov
xor
jns
push
pop
or
jg
cmp
in
or
sarl
mov
test
pop
fs
and
adc
out
das
mov
ja
mov
mov
fcomp
or
adc
aad
in
mov
iret
cli
repnz
xchg
repnz
call
ror
or
lods
es
add
pop
fildl
mov
xor
rorb
mov
or
jp
mov
fstp
scas
mov
push
jp
cmove
cli
lret
mov
xor
fcoms
ret
clc
dec
cmp
out
je
dec
dec
call
xor
insb
xor
rol
mov
out
fs
dec
and
xchg
xchg
dec
std
mov
inc
pop
lret
inc
into
adc
jne
icebp
or
int
dec
ficompl
movsb
jno
cmp
out
pop
xchg
lret
cmp
scas
sbb
shr
pop
sbb
sub
leave
pop
clc
mov
cmp
or
out
int
pop
mov
dec
push
or
iret
imul
and
sti
inc
mov
fists
in
scas
sub
lret
dec
jl
icebp
adc
adc
pop
imull
jbe
jmp
push
jle
sahf
ret
aam
mov
hlt
push
mov
jp
push
cmpsl
push
pop
pop
es
or
loop
sub
daa
les
xchg
jbe
sub
xchg
sub
jecxz
cmpsl
enter
aaa
add
adc
inc
mov
inc
in
inc
push
and
popf
inc
and
pop
mov
push
out
mov
adc
loope
cmc
push
pusha
roll
movsb
jle
cmpsb
push
insl
jl
and
jl
addr16
ds
subb
cld
mov
push
sub
xchg
push
sub
mov
inc
mov
test
cmpsl
mov
rcr
mov
sti
cmp
insb
mov
popa
pop
andb
inc
xor
mov
adc
nop
sub
and
xor
inc
movsl
outsb
stos
sub
mov
test
js
movsl
in
aad
jl
sti
jo
cli
jns
sbb
sub
jns
dec
push
insl
rorl
and
xor
jmp
mov
call
sbb
jae
jmp
jp
mov
or
pop
mov
mov
mov
pop
lds
xor
sub
scas
inc
in
push
cmp
xchg
adc
and
aaa
fcmovnb
and
test
loope
addl
rclb
enter
push
lcall
lods
dec
in
divb
inc
jg
dec
pop
rorl
mov
xchg
aas
pop
dec
movsl
enter
shll
mov
jae
stos
rcll
adc
xchg
add
aaa
or
sets
shll
orb
imul
xchg
fs
fists
movsb
std
repnz
push
push
popf
inc
pop
add
sbb
cmp
outsl
pushf
in
cmp
loope
test
outsb
dec
cmp
add
cli
sub
lods
add
mov
cmp
push
mov
pop
cld
add
mov
pop
dec
js
pushf
mov
popa
mov
out
or
push
cmpsl
push
fiaddl
mov
in
ret
cmp
sub
or
pop
gs
fs
sub
lods
stc
xchg
adc
subl
mov
push
xor
pop
stos
or
add
inc
popf
rclb
les
ficoml
dec
ja
mov
scas
xor
divl
rolb
mov
sbb
dec
xor
movsl
add
icebp
mov
aam
or
insb
sub
pop
out
js
sub
jle
loop
inc
pop
stc
cwtl
ss
jmp
cmpsb
dec
sub
jp
push
mov
inc
imul
mov
mov
dec
add
insl
leave
in
add
pop
pop
lret
mov
lret
das
imul
jmp
sbb
inc
stc
inc
xchg
adc
inc
sar
in
je
or
jl
xor
push
in
fsts
test
enter
xor
adc
push
lret
std
adc
xchg
lret
or
push
sarb
cs
and
pop
cmc
pop
jb
lahf
xor
cmp
stc
jb
adc
push
outsb
push
sbb
sub
jns
sub
popf
mov
inc
xchg
jge
arpl
mov
xor
pop
sahf
sub
adc
iret
inc
out
push
jne
fistpll
or
xchg
shrl
xchg
cmp
and
or
cmp
push
lret
adc
jmp
xlat
rcrl
push
ds
aas
pop
xchg
sub
sbb
cltd
pushf
pop
and
or
jle
mov
cmp
repnz
or
dec
cmc
xchg
stos
cld
xchg
mov
or
je
dec
push
sub
pop
sbb
add
movsb
cld
ja
std
in
inc
push
and
xchg
mov
inc
inc
mov
push
clc
push
pop
imul
mov
dec
pop
mov
and
aam
mov
sbb
test
sbb
es
and
sub
std
xor
repnz
in
adc
fbld
jne
stc
call
outsb
int
ret
sahf
adc
push
add
push
push
jecxz
sbb
jbe
test
mov
cmp
pop
ss
faddl
adc
decl
lea
push
sbb
out
das
mov
jo
xchg
imul
xor
jmp
add
mov
dec
icebp
loop
sbb
sub
mov
cmp
xchg
push
adc
outsb
push
inc
lcall
sub
aam
xchg
decl
lret
cmp
xchg
mov
mov
cmpsl
or
or
jl
add
sbb
cs
jle
or
lahf
pop
in
fisubrs
imul
jg
int
lahf
and
icebp
adc
inc
cld
pop
aam
test
stc
inc
shll
aad
mov
jns
and
sub
and
add
jge
ret
jns
les
scas
xor
adc
xor
popf
mov
mov
mov
push
pop
mov
add
icebp
pop
jne
mov
ljmp
int3
cs
sbbl
xchg
adc
mov
pop
add
or
cmpsl
adc
les
mov
in
lcall
sub
leave
int3
mov
sbb
pop
mov
mov
ss
pop
or
push
je
insl
sub
inc
and
addb
outsb
gs
or
cmp
in
ret
jns
xchg
xchg
mov
xchg
out
mov
mov
push
push
mov
push
mov
clc
push
jb
mov
int3
sub
dec
sarl
ss
xor
popa
xor
icebp
adc
test
andb
inc
jp
stc
and
push
or
mov
xchg
add
and
clc
je
rorl
scas
or
pusha
rcrb
movsb
jg
push
inc
pop
das
bound
mov
lret
insb
in
or
push
pusha
jns
in
test
cmp
xchg
lret
popa
dec
inc
imul
fwait
xchg
fnstenv
mov
repnz
mov
push
xadd
repz
pop
xchg
pop
add
mov
iret
testb
pop
pop
add
mov
mov
int
mov
mov
mov
dec
inc
and
xchg
and
sub
das
fcomip
sub
cs
mov
lods
jo
std
addps
add
lret
and
ljmp
hlt
pminsw
inc
fstps
into
xlat
movsl
pusha
push
cmp
mov
sub
push
push
icebp
dec
clc
aam
adc
das
jge
scas
xor
out
out
lea
bound
push
lret
sub
jae
outsb
add
fcoml
cmp
xchg
test
push
xor
pop
mov
repnz
stos
das
jmp
adc
fs
mov
cwtl
pushf
push
xchg
and
pushf
adcb
mov
push
add
mov
or
push
sbb
mov
pop
mov
and
push
cmp
add
loope
inc
sti
idivb
xor
rorb
mov
outsl
aam
push
mov
cs
stos
dec
adc
cmp
xor
lret
call
adc
call
pop
cld
sub
dec
xchg
rcrl
aad
imul
shrl
push
dec
xchg
mov
test
mov
cld
int
xor
inc
lcall
insb
jp
ds
mov
cmp
outsl
xor
mov
xchg
inc
sahf
loopne
or
out
pop
fnstcw
mov
in
jne
and
lcall
sub
add
aaa
or
mov
loop
pop
aaa
mov
xchg
outsl
jae
jge
cmc
lods
pop
test
lock
cmp
mov
cmp
lock
push
sbb
fldenv
push
aaa
loope
xchg
fnstcw
sti
fldpi
in
shll
mov
call
adc
into
xor
mov
xor
lcall
lcall
sbb
push
in
ror
fnstsw
popa
arpl
jecxz
and
hlt
out
mov
xchg
and
cmp
jne
xchg
imull
jle
dec
inc
push
fcmovne
in
icebp
push
cmp
add
push
fldt
push
xchg
adc
push
sbbl
movsl
clc
sbbl
mov
sbb
mov
mov
lods
test
stos
insl
subb
mov
ret
arpl
jg
std
fsubr
iret
ss
pop
cld
add
sub
ss
int3
push
inc
stc
ja
popf
add
orl
inc
and
aad
fsubs
das
push
popf
rclb
stos
ficoml
jecxz
leave
mov
fbld
push
cmpsl
mov
ja
xchg
movsl
aas
mov
icebp
repz
xchg
sbb
test
nop
fisubs
push
cs
mov
mov
adc
xchg
cmp
mov
repz
inc
lock
add
in
pop
mov
ja
mov
push
es
loop
inc
push
or
pop
bound
jg
shlb
mov
in
adc
and
and
push
mov
lock
into
mov
adc
dec
mov
jp
repz
stos
data16
stc
pop
in
push
mov
movsl
xchg
mov
jmp
adc
clc
dec
into
push
cmp
jmp
jecxz
ret
js
addr16
insl
mov
or
sbb
ret
ss
loopne
iret
xor
jge
js
and
pop
aas
xchg
fwait
icebp
add
mov
sub
je
enter
lods
movsl
test
mov
mov
pop
out
enter
dec
imul
jmp
add
dec
jne
push
mov
mov
cltd
adc
xchg
cmp
mov
mov
cwtl
loop
mov
xchg
add
sub
cmp
cmp
xor
sub
mov
aad
jge
mov
icebp
addr16
adc
xchg
iret
popl
xor
ret
pop
imul
into
jbe
movsl
arpl
xchg
sbb
outsl
in
mov
add
aam
push
loope
fldcw
pop
mov
in
in
xor
or
xorb
jbe
aaa
or
addr16
leave
and
movb
push
inc
fsubrl
into
push
lods
inc
sbbl
push
lcall
sti
nop
imul
and
adc
les
mov
mov
xorl
test
pushfw
jns
out
nop
dec
cmp
adcb
mov
mov
mov
cmpsb
mov
dec
divl
cs
jge
gs
and
xor
test
jne
jbe
jp
movsl
inc
jg
xlat
jp
lea
xchg
cld
mov
sub
pminub
cli
add
shll
dec
xlat
sub
sbb
xlat
lcall
in
jne
push
testl
pop
sbb
ds
lds
jbe
into
stc
lahf
cmpsb
and
jecxz
xchg
sub
cmp
mov
add
xchg
inc
push
ds
int3
insb
testb
jae
or
mov
std
jmp
pusha
inc
add
or
aas
fadd
int3
sub
sbb
or
xchg
lret
ffreep
push
add
push
xchg
test
nopl
fadds
mov
lods
jmp
loope
sbb
pop
ret
or
push
xlat
push
mov
cmp
pop
or
sub
jle
fdiv
out
sbb
pop
xor
fdiv
cwtl
aas
xchg
xchg
js
mov
push
cmc
pop
mov
xor
daa
mov
jae
movsb
mov
sbb
lods
jno
lods
xchg
push
cld
mov
jno
test
push
roll
sub
test
in
sub
imul
mov
sahf
add
and
mov
ljmp
sbbb
shll
jb
or
pushf
popa
inc
adc
adc
lods
push
push
scas
filds
imul
movsb
cli
ret
mov
addr16
xchg
mov
cwtl
sbb
lds
xchg
test
cwtl
jp
jl
js
int3
fidivrl
xor
sub
mov
and
loope
jb
cmp
jge
mov
insl
sub
inc
cmpsb
lea
test
lds
add
ret
insb
or
cwtl
sahf
fcom
dec
popa
jo
xor
jno
je
push
in
or
or
sti
mov
or
xchg
pop
decb
or
mov
stos
dec
pop
ljmp
in
cmpsb
push
adc
sub
sub
mov
cmp
cltd
push
jno
insb
js
out
sub
bound
fiaddl
mov
loope
jg
dec
xor
pop
and
and
hlt
inc
std
out
xchg
imul
jns
rorb
pop
and
pop
ret
mov
or
ret
cmp
out
push
jns
addr16
fbstp
idivb
pop
int
push
jne
pusha
xor
arpl
ror
sysexit
xchg
call
xchg
xchg
popa
jo
sub
fucomip
sub
sub
push
xchg
mov
int3
loope
sar
add
xor
jbe
mov
add
sub
xchg
cmp
cld
imul
mov
pop
sti
mov
fsubs
or
jge
pop
push
lods
cld
inc
test
out
clc
into
sbb
inc
push
mov
call
add
jge
cs
fidivs
or
mov
and
rolb
ret
mov
rcll
jno
popf
or
es
lock
lret
jl
std
aam
cmp
dec
mov
leave
pop
scas
cmpsb
insb
jg
jp
sbb
adc
pop
push
test
adc
jmp
add
push
movl
mov
mov
jnp
es
addr16
adc
je
pop
scas
or
insl
add
mov
push
or
add
aaa
aaa
movsb
xchg
je
mov
scas
sbb
and
adc
test
or
jb
lods
xchg
xor
into
out
mov
mov
test
mov
pop
adc
mov
xor
dec
cmc
insb
std
add
push
pusha
inc
movsb
inc
imul
pop
scas
test
rorl
fcoms
or
mov
push
cmp
out
inc
inc
fldenv
or
insl
xorl
lods
imul
dec
jge
or
cmpsb
push
xchg
cs
push
pusha
ja
mov
jb
xor
xor
lods
pushf
int
adc
jle
repz
data16
cmp
dec
and
clc
jmp
add
or
lahf
sub
repz
jle
mov
and
sbb
push
add
rolb
pop
ljmp
ret
ret
add
shlw
inc
lock
fdivrs
and
sub
cmp
stos
xchg
inc
dec
xchg
pop
stos
in
mov
mov
lret
ja
xchg
add
test
xchg
ficompl
scas
push
loopne
jecxz
in
xor
in
sbb
sarb
add
push
sub
roll
xchg
sub
pop
aaa
xchg
mov
in
and
jo
imul
dec
lods
repnz
scas
mov
testb
aad
mov
rcrw
and
in
push
mov
lds
scas
orb
push
mul
xor
sbb
out
lcall
pusha
adc
xor
es
negb
stos
stos
xchg
sbbb
rcrl
push
inc
jmp
ficoms
push
pusha
ret
and
sub
sub
mov
out
inc
mov
add
jle
popf
lret
arpl
jbe
mov
inc
pusha
jnp
sti
jnp
es
push
mull
jl
cmp
cmp
and
dec
movsb
mov
adc
inc
cltd
in
dec
mov
mov
mov
xor
out
sub
mov
adc
jg
das
dec
enter
and
in
stos
cmp
movsb
fisubrs
cmpsb
iret
and
xchg
bnd
popa
or
sti
cmc
dec
int3
bound
mov
iret
fs
outsb
aaa
fnstenv
sbb
ja
lods
sub
pop
xchg
cli
pop
cmp
fdivp
aad
lods
stc
xor
fisubs
add
fstp
pop
jge
repz
mov
rol
cmp
rorb
fsubrl
jmp
cmp
ffreep
out
push
sbb
fdivrs
or
cltd
or
push
stos
pushf
ret
int3
pop
jl
sbb
jle
mov
sub
xchg
add
leave
add
ret
fwait
xchg
sub
push
mov
into
add
xor
adc
mov
cmp
push
shl
dec
scas
lret
xor
lock
test
sbb
fisubs
jle
jle
shrb
jle
pop
test
and
loop
mov
and
stos
ret
stos
enter
mov
xchg
mov
rcrl
arpl
ds
mov
mov
or
outsb
pop
sub
jmp
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
xchg
mov
and
pop
jl
pop
mov
or
cwtl
jl
jno
leave
flds
push
icebp
xchg
ret
lds
gs
mov
xorl
push
les
fmul
inc
nop
jle
mov
jb
lret
sbb
imul
stos
xchg
fldl
inc
xor
call
add
dec
int
rolb
or
out
xchg
sar
add
mov
sarl
stc
mov
stos
mov
hlt
scas
jae
and
or
inc
lahf
sbb
pushf
mov
rolb
fists
cmp
movsl
mov
je
pushf
pop
stos
lods
fwait
fs
dec
xor
orl
mov
aam
xor
xor
pop
imul
in
ret
and
subb
hlt
sbb
sub
and
mov
and
loop
cmp
xor
enter
mov
jbe
in
ret
mov
and
inc
inc
xor
push
sarl
sbb
push
cmp
or
nop
jbe
rcll
dec
dec
clc
lds
aas
sbb
adc
push
xchg
mov
jmp
mov
sub
cs
lahf
xor
daa
fwait
xchg
add
cmp
sti
sub
and
pop
and
or
inc
sti
shlb
fnstenv
mov
push
loopne
xchg
mov
iret
jne
testl
cmpsl
cmp
rcrb
in
in
xchg
iret
jp
inc
lcall
shrl
jge
cmp
sbbb
inc
pop
mov
loop
push
in
xchg
repnz
dec
jmp
push
mov
jae
std
pop
testl
mov
scas
fwait
mov
cmpsl
aas
divl
pop
movsl
mov
pop
test
jb
daa
lock
stos
lock
mov
jnp
test
sbb
dec
sub
dec
out
stc
mov
lret
andl
rol
xchg
pop
add
jne
and
out
mov
jo
xchg
insl
movsl
xchg
xlat
mov
mov
mov
jns
mov
repz
mov
mov
jne
xor
popa
sub
xchg
push
sahf
sbb
out
add
pop
lea
arpl
push
jl
cmp
scas
jns
clc
aaa
sub
push
jmp
sti
jbe
lds
and
add
and
inc
insb
fcomps
add
xor
sub
jno
test
dec
jne
aam
lods
je
cmpsl
push
arpl
jg
sub
cltd
sbb
push
call
lea
lcall
or
or
icebp
mov
push
test
aam
add
cwtl
xchg
mov
mov
das
push
jl
hlt
out
sbb
adcl
pusha
lods
mov
xchg
mov
pop
dec
xor
imul
inc
fisttpl
sub
enter
loope
jne
xchg
mov
dec
je
push
leave
loop
xlat
sub
adc
xor
xor
xor
lods
jle
jae
pop
pop
push
inc
fcoms
sbb
add
inc
pop
repz
push
arpl
adc
dec
push
daa
xchg
adc
mov
push
mov
mov
mov
jnp
pushf
mov
jmp
push
cmpsl
add
out
jne
mov
pop
scas
test
div
mov
addr16
push
loopne
mov
pusha
inc
push
mov
sbb
mov
adc
movb
dec
in
call
adc
inc
push
test
call
ror
lods
das
push
adcb
fstpl
gs
or
stos
pusha
or
pop
sbb
push
test
sti
jnp
repz
filds
xor
cmp
ja
ljmp
popf
push
cld
cltd
pop
dec
imul
pop
sub
test
stos
sub
inc
and
pushf
adc
xor
cmp
lods
fs
clc
scas
or
repz
xor
jge
fdivrp
or
cmp
dec
dec
or
push
push
and
and
loopne
lret
push
push
fwait
ds
jne
jge
aas
out
cmp
cwtl
out
pop
jle
pop
xchg
ret
mov
fcmovb
mov
lods
stos
mov
cs
lock
pop
fadds
loop
mov
lret
js
ljmp
mov
mov
push
arpl
mov
addr16
rol
push
push
stos
push
sub
jae
jne
push
nop
mov
fistl
jne
lods
jns
loope
cmpsb
in
aam
mov
cmp
jo
repz
and
nop
rcll
mov
jge
mov
pop
pop
imul
insb
jg
movsb
pop
int
pop
cmp
daa
repz
jb
mov
adc
lahf
add
outsl
adc
jnp
adc
lods
mov
aam
push
mov
rcrl
adc
jb
lret
pop
fldcw
pusha
rclb
shlb
sbb
mov
dec
paddusw
addr16
das
ds
and
mov
stos
push
add
mov
push
adc
outsb
and
fists
mov
mov
movsb
mov
pop
jecxz
les
je
pop
std
xchg
lock
jmp
xchg
ja
dec
ljmp
ficompl
and
ficomps
das
out
adc
out
fnstcw
dec
repz
hlt
xchg
xchg
sbb
jl
push
sub
cmp
pop
rorl
jecxz
push
mov
iret
out
ja
sub
and
loop
push
aaa
inc
jge
xchg
dec
adc
and
data16
add
xor
andb
fdivrl
sub
stos
add
dec
xor
sub
pop
scas
pop
sti
scas
xchg
ljmp
ss
outsb
inc
int3
jne
xor
decb
dec
mov
shl
xchg
stc
inc
and
cmp
repnz
nop
les
sub
hlt
cmp
jb
mov
mov
pop
push
xchg
or
jl
push
pop
ror
pusha
inc
or
cmpl
les
or
inc
mov
jle
mov
in
hlt
cmpsl
cmp
mov
mov
jb
pop
movsl
fcmovnbe
add
xchg
dec
dec
fidivl
adc
inc
push
inc
dec
jge
pop
xor
leave
jecxz
jecxz
rcr
das
cmpsb
mov
inc
out
aas
ds
sub
sti
add
inc
aaa
inc
xor
sbb
mov
mov
jae
push
pop
jge
outsb
jno
or
incb
or
bnd
sbb
rclb
and
xlat
mov
push
add
sub
add
cmc
bound
mov
cmp
and
out
pop
out
js
addr16
nop
ljmp
arpl
dec
loop
test
lret
xchg
sbb
lret
enter
push
mov
lds
inc
lock
sbb
jbe
push
loope
das
push
lods
xchg
push
xchg
inc
sbb
pop
sbb
loope
leave
rcr
inc
push
aas
xlat
mov
dec
decl
cmpsb
hlt
and
sub
xchg
mov
xcrypt-cfb
cmpsl
out
or
stos
and
int3
xor
inc
jmp
xor
mov
ja
aad
pusha
daa
aad
imul
xor
inc
mov
and
mov
dec
add
dec
jecxz
jbe
sub
aad
or
inc
ficomps
dec
xlat
scas
subl
sbb
lahf
mov
adcl
cmpsb
incl
mov
mov
clc
cld
add
rcrb
mov
add
cld
pop
jmp
sar
xchg
lret
ret
sub
in
jns
out
mov
mov
sbb
ds
mov
xor
loope
sub
lds
adc
shlb
sti
mov
shlb
push
nop
mov
pusha
iret
push
inc
adc
aam
iret
in
fdivrl
pop
movsl
xchg
rorb
cmp
push
lods
mov
stc
les
dec
lds
pusha
in
les
es
fdivs
es
leave
lods
lahf
pop
popf
int3
shr
sbb
xorl
mov
frstor
ja
ljmp
xor
adcb
scas
addb
enter
sbb
jbe
xchg
xchg
jle
xchg
cmp
in
fmuls
sub
inc
je
rorb
push
pop
dec
push
xor
inc
cltd
js
clc
push
mov
sub
shll
decl
inc
inc
xchg
cmc
jns
mov
loope
mov
mov
mov
jmp
loop
dec
ja
mov
xchg
xor
add
sub
insb
cltd
fstpt
push
jl
jg
add
testb
test
and
push
into
jmp
sbb
in
jp
mov
jg
xchg
jne
pop
mov
xor
test
jle
addl
pop
shr
imul
mov
mov
sbb
cmpsb
or
adc
mov
jmp
xor
pop
fldl
xchg
mov
jo
fldl
mov
scas
imul
sbb
ret
lret
jp
fwait
leave
dec
test
ljmp
test
xchg
jl
dec
imul
out
movsb
jmp
arpl
in
dec
ret
cmc
sub
inc
push
sbb
push
sbb
ljmp
outsl
lcall
dec
adc
mov
fcompl
inc
leave
aam
out
jmp
fs
mov
pushf
xor
aas
xor
mov
pop
ret
mov
in
push
mov
nop
out
je
sub
aas
cld
ret
push
jecxz
jns
loope
or
jp
insb
mov
mov
ljmp
out
in
xchg
inc
sbb
push
and
pop
and
loop
aad
adc
mov
or
ja
in
shl
cld
cmp
cmpsl
sub
cwtl
jge
jl
xchg
lret
and
or
mov
xor
jne
add
cmp
jg
ljmp
sahf
jg
jp
cmp
cmp
cmp
xchg
out
adc
push
fldt
outsl
xchg
jmp
mov
ret
rolb
mov
rsqrtps
dec
pop
negb
lret
sbb
mov
dec
out
fnstsw
mov
mov
std
fs
rolb
mov
cmp
movsl
jl
daa
inc
push
push
arpl
les
les
adc
jp
outsb
mov
lock
mov
cmc
in
xchg
in
cwtl
into
jo
jmp
imul
inc
das
dec
fadd
ja
shrb
cmp
insb
xlat
insb
dec
mov
fwait
and
mov
push
push
xchg
inc
dec
in
push
and
dec
stc
add
movsl
adc
pop
ss
mov
jge
data16
lock
rcr
push
or
loop
mov
and
xchg
lods
mov
out
push
icebp
push
nop
mov
add
and
push
add
shl
aad
push
stos
loop
and
cmp
inc
lcall
loop
pop
fistpll
in
xabort
push
xlat
test
outsl
int
sub
into
cmp
lea
sbb
cmc
dec
arpl
ret
and
jbe
jl
mov
sbb
addr16
dec
sbb
xchg
test
lret
jp
push
xor
bndstx
shrb
lahf
xchg
pop
mov
dec
pop
inc
inc
mov
aad
adc
sbb
inc
pminsw
loope
repnz
mov
mov
dec
and
into
adc
inc
sbb
jbe
scas
iret
xchg
push
xchg
sahf
negl
xchg
aaa
lea
push
aad
icebp
cmp
cmpsl
push
fdivrl
dec
std
xor
cmp
dec
arpl
jae
adc
cmp
lea
shrb
hlt
push
add
adc
std
mov
clc
insb
std
jno
movsb
in
fimull
inc
mov
mov
pop
sub
scas
repnz
push
lret
imul
lahf
in
sub
mov
inc
inc
imul
aam
aam
into
cs
shld
pop
sub
ret
outsb
xor
add
jno
mov
push
popf
adc
js
pop
pushf
int
mov
cltd
mov
das
push
negb
mov
sbb
mov
mov
cmpl
or
popa
cmp
pop
adc
push
inc
mov
repnz
xor
pop
xchg
rcl
bound
push
jmp
lock
sbb
adc
mov
xor
xlat
imul
mov
lods
iret
jecxz
in
ss
and
inc
jge
pusha
inc
dec
in
sahf
push
cmp
clc
xchg
or
arpl
xchg
pop
and
andl
inc
mov
mov
movsb
pop
inc
xor
sarb
push
and
add
scas
mov
nop
push
insb
dec
inc
cltd
or
aas
mov
outsl
cs
pop
les
test
aam
nop
fdivrl
out
aaa
movsl
xchg
adc
iret
xchg
mov
pop
sbb
insb
mov
xlat
in
mov
outsl
pop
out
pop
stc
cmp
push
xor
test
outsl
jbe
loopne
fbld
push
adc
and
cmp
push
mov
gs
cmp
scas
lcall
jnp
pop
and
sarl
sbb
fs
movsl
cmp
movlhps
xchg
sbb
aas
mov
push
sub
and
sbb
and
dec
adc
lods
iret
dec
std
mov
inc
sub
mov
adc
cld
call
jle
fimuls
jecxz
orb
arpl
cs
push
adc
gs
cli
out
enter
cmp
mov
dec
shr
js
inc
jmp
das
sbb
jns
sbb
aas
insb
dec
xchg
insb
jg
bound
cmp
sub
lea
pop
and
loope
inc
sbb
lock
in
cmpsl
dec
jmp
and
jle
aam
or
inc
inc
test
sub
ficoms
add
jecxz
mov
push
es
loopne
cs
stc
jmp
pop
inc
sbb
inc
xor
leave
adc
mov
lcall
push
xor
xchg
pop
addr16
stos
add
test
scas
daa
push
lcall
ds
adc
test
pop
jg
repnz
cmc
inc
xchg
sub
out
lock
push
inc
outsl
mov
pusha
xor
add
push
aad
or
push
adc
test
out
sub
push
inc
push
jp
aas
mov
insl
test
leave
mov
stos
sahf
hlt
sub
repz
and
outsb
xor
pop
dec
push
aas
jnp
pop
ds
pop
inc
mov
insl
bound
in
dec
inc
adc
icebp
cli
sbb
adc
lock
mov
out
iret
mov
fistl
test
dec
es
mov
sbb
idivl
ljmp
shrl
clc
repz
sarl
mov
push
inc
imul
cmp
dec
push
les
fstpl
rclb
enter
mov
enter
int3
imul
jb
arpl
std
sub
ret
movsl
pop
enter
mov
or
push
push
testl
mov
ja
cmp
les
dec
inc
cli
pop
push
int3
adc
rclb
pop
and
pop
pop
sub
xor
cmp
gs
mov
shl
cmp
push
xchg
mov
addb
pop
jle
cs
inc
fidivrs
lret
repz
push
arpl
loope
testb
movsl
pusha
dec
push
sbb
lret
sar
outsb
jp
loop
jbe
popa
jno
xor
push
push
test
push
imul
inc
cmp
rorl
mov
xchg
out
fs
sub
les
mov
dec
or
loopne
cmpsl
adc
jl
insl
add
pushf
mov
lret
mov
dec
cmp
movsb
add
cld
xchg
jge
hlt
ja
scas
popf
sub
or
jge
outsb
aad
icebp
sar
xchg
push
xchg
push
mov
sahf
and
ljmp
dec
sub
popf
lret
std
adc
idiv
or
dec
mov
push
add
cld
sub
push
xchg
add
xchg
push
push
inc
roll
hlt
imul
xchg
iret
out
and
out
cld
lea
pop
lds
mov
push
lahf
push
test
push
xchg
orl
xchg
int
test
call
push
call
xchg
arpl
pop
mov
or
jb
or
popa
xchg
xchg
jmp
dec
shlb
pop
add
aas
fsubs
sub
xchg
pop
dec
call
sub
mov
insb
push
lret
arpl
mov
daa
enter
mov
stc
mov
sub
int3
xor
lock
in
test
arpl
adc
add
dec
rcrb
flds
xchg
jbe
add
or
ret
iret
jp
cmp
ficompl
dec
push
jnp
movsl
jle
pop
mov
nop
cmpsb
mov
push
and
aas
cmpsb
outsb
jns
in
xor
xor
or
pop
adc
sub
mov
add
adc
js
xchg
jae,pn
stos
imul
repnz
push
adc
xchg
jecxz,pn
lods
sti
mov
les
in
lds
outsl
cmpsl
idiv
ds
and
jns
inc
test
lret
in
adc
sbb
dec
nop
xor
addr16
fnstcw
aad
pop
into
push
negb
sbb
mov
mov
mov
ljmp
mov
dec
clc
bound
je
out
jbe
jmp
mov
pop
outsb
pop
in
adc
mov
fs
insb
aaa
push
pushf
pop
clc
cltd
arpl
in
mov
inc
dec
or
mov
fwait
adc
jp
adc
sahf
xchg
xchg
lret
sbb
insl
insl
cmpsl
lret
out
inc
ja
jne
movsl
sub
sbb
outsb
or
rcll
push
mov
call
xor
pushf
rcll
xchg
or
mov
xchg
pop
mov
fs
sub
xchg
lods
xchg
jl
jmp
jecxz
cmp
shlb
das
movsb
subl
xor
jmp
lret
jge
popa
xchg
test
adc
out
test
cmc
xchg
or
out
mov
js
fldl
stos
enter
push
cmp
aas
pop
add
loopne
lret
aad
into
aas
dec
stc
sub
imul
jo
dec
or
cmp
in
enter
lds
mov
jns,pn
pop
cmp
jno
and
inc
sub
iret
fcmovu
outsb
sub
lret
adcb
push
cmpsl
inc
mov
into
dec
pop
cmp
aam
and
shr
data16
and
push
aaa
cwtl
xchg
or
imul
mov
cld
insb
jecxz
rcll
mov
adc
inc
pop
out
cmp
das
xchg
jb
in
push
das
mov
outsl
or
sub
inc
subl
cmp
sub
adc
sbb
sub
test
mov
xor
insb
les
add
insb
outsl
setle
jbe
jmp
jge
mov
roll
popf
cli
pushw
lods
jno
jecxz
cmp
push
test
adc
or
push
and
jne
mov
outsl
inc
push
lahf
orl
jno
push
aad
cmp
jp
int3
cmpsb
rcr
arpl
shll
jle
xor
sub
lock
es
push
imul
cmp
xor
inc
test
and
xchg
mov
out
rorl
int
mov
das
ret
xchg
daa
jb
into
mov
mov
sub
xchg
mov
jmp
int3
xlat
mov
daa
aam
rolb
mov
or
sub
adc
pop
iret
test
test
mov
mov
bound
jecxz
leave
pop
and
in
mov
sbb
mov
stc
hlt
push
pop
shl
lock
leave
jecxz
decb
daa
test
popa
fidivl
cltd
push
mov
xchg
leave
add
dec
mov
pop
and
mov
push
mov
mov
aaa
idivl
cwtl
mov
fimull
test
dec
mov
xchg
sti
out
mov
in
add
pop
outsl
add
bound
sbb
cld
xor
mov
dec
ret
in
or
fldl
mov
loop
xchg
inc
jmp
out
repnz
in
ljmp
lods
cld
pop
es
jg
inc
xor
mov
mov
pop
mov
and
inc
xlat
pop
add
sti
and
push
aas
pop
cmp
out
loop
add
sete
aam
roll
lock
mov
or
cmp
loopne
push
fimuls
dec
inc
mov
and
add
lahf
push
movsl
inc
inc
cltd
ss
xchg
lret
arpl
mov
pop
mov
sbb
mov
test
aam
pmaxub
roll
jae
in
cmp
imul
or
das
jmp
mov
icebp
lods
adc
pop
jge
test
into
out
leave
ss
dec
push
outsl
push
fwait
or
jmp
xlat
mov
dec
xor
mov
out
shr
mov
and
xor
pop
arpl
test
cmp
pop
jl
xor
testl
fimuls
lods
loopne
jg
mov
je
xchg
sbbl
adc
cld
xor
mov
es
dec
cmp
mov
lock
dec
xchg
sbb
sbb
ljmp
out
xchg
insb
ds
arpl
daa
jnp
pushf
aam
dec
add
addb
mov
mov
ret
pushf
rolb
fsubs
xlat
mov
cli
ljmp
add
jo
pushl
imul
xchg
movsb
popa
add
addr16
mov
cwtl
push
dec
mov
pop
push
dec
mov
cltd
outsl
adc
outsl
mov
cli
xchg
push
dec
adc
sub
cmpsb
inc
test
pushf
jae
bound
data16
fwait
xlat
jg
into
lea
loop
push
push
mulb
jo
lahf
pop
int3
dec
and
das
test
push
mov
mov
pop
jge
add
pop
sbb
dec
lods
stos
jg
das
in
dec
xlat
fmul
pushf
inc
ret
sbb
mov
mov
push
ret
mov
outsb
mov
push
mov
mov
push
pop
sahf
pop
shlb
xchg
or
adc
mov
mov
jecxz
icebp
fwait
jo
cmp
sti
nop
sbb
negl
cmp
push
nop
out
test
out
jnp
mov
dec
repz
jns
je
test
dec
in
ret
mov
cwtl
adc
adc
jo
sub
loope
mov
xorl
dec
inc
fimull
sbb
nop
jp
or
pop
sub
gs
xchg
shll
mov
adc
test
ja
scas
jns
scas
sahf
xor
iret
cld
and
and
insl
lea
enter
daa
jp
and
cli
icebp
push
lret
cmpsb
cs
cmp
fisubs
inc
ss
imul
xchg
push
test
pop
lret
insl
in
imul
scas
jecxz
repnz
or
pop
loope
ret
cli
push
scas
adc
insb
icebp
sub
push
and
cli
jae
hlt
jge
iret
js
cwtl
mov
push
loope
jle
sbb
sbb
int
arpl
xchg
dec
popf
jp
adc
jp
addb
lret
adc
ss
stos
fsubs
sub
stos
fidivs
xor
cmpsb
and
add
sbb
mov
cmpsb
loop
jnp,pt
mov
fwait
mov
sub
fsubrs
dec
push
inc
cld
test
adc
push
push
jne,pt
xor
gs
add
icebp
or
mov
incb
call
jecxz
test
jo
shlb
fiaddl
mov
fldt
jno
push
aaa
clc
push
jp
dec
push
xchg
or
sahf
dec
test
in
dec
push
mov
mov
mov
cmp
cmp
pop
mov
mov
in
inc
lret
in
lret
rorb
mov
sbb
mov
nop
mov
cmp
dec
and
test
mov
movsb
cmp
inc
xor
mov
testl
jb
fiaddl
add
inc
fwait
push
subl
pop
mov
ficomps
int3
shlb
xchg
aaa
nop
lret
pop
repz
aam
ljmp
idivl
jno
xchg
push
addr16
ds
jp
les
loopne
mov
push
pop
push
inc
and
jg
sbb
loopne
dec
xchg
out
dec
and
jb
adc
xor
cmp
jecxz
pop
pop
sti
or
and
dec
fnstsw
loope
insb
sbb
or
das
dec
or
mov
lcall
mov
dec
fdivrl
ret
jge
inc
xchg
sbb
xchg
stos
and
xchg
aad
adc
sahf
cs
sbbl
mov
sub
sahf
cli
int3
insb
inc
or
adc
dec
cmp
outsl
mov
jo
rol
pop
pop
xor
bound
cmp
test
mov
or
mov
lret
xchg
sbb
inc
xchg
pop
mov
jo
mov
or
or
int
in
inc
aad
stos
mov
jbe
jb
pop
sbb
popa
cmp
xor
or
in
dec
pushf
push
repz
dec
loop
ljmp
or
xchg
in
shll
xchg
sbb
es
insb
xor
xchg
mov
test
mov
and
std
sub
jg
mov
pop
xor
test
arpl
andb
add
daa
ss
cwtl
out
mov
sbb
xchg
rcrl
mov
ja
xor
rorb
sub
push
repnz
push
fstp
lock
sahf
out
mov
and
push
xor
adc
into
add
pop
jle
les
jae
lds
daa
add
jae
adc
and
lods
xor
sahf
mov
lds
inc
push
std
aad
cld
adc
adc
mov
mov
jne
into
out
fs
pop
into
add
shrb
and
fsubrl
push
mov
das
xchg
or
mov
dec
pop
pusha
and
or
xor
jne
popa
insb
int3
stos
mull
subl
cmc
pushf
lock
scas
mov
ljmp
mov
ret
push
out
cltd
stc
jle
cmpsb
pop
imul
nop
movsb
pop
push
inc
cmp
mov
mov
clc
xchg
inc
push
cmp
push
outsl
mov
lcall
movb
fmuls
pop
stos
jle
or
dec
and
add
dec
jne
insl
in
mov
adc
xchg
xchg
push
out
outsl
mov
dec
pop
cwtl
test
push
insl
out
repnz
fdivl
stos
mov
cmp
inc
push
dec
mov
jnp
mov
mov
pop
test
loope
mov
ret
inc
dec
es
and
sqrtps
mov
mov
je
addr16
repnz
inc
cwtl
xor
cmp
stc
jo
lahf
in
cld
jnp
dec
fstpl
int3
xchg
sub
mov
repz
sub
jb
int
xor
pop
adc
push
out
push
xor
sbb
mov
out
mov
xor
pop
clc
pop
inc
push
inc
cmc
sti
mov
sub
pop
adc
or
loop
adc
or
cwtl
imulb
sub
jae
pop
mov
jne
fadds
mov
pop
test
jnp
push
int3
lods
js
mov
xor
cmc
mov
sahf
cmp
dec
sub
and
fbld
aad
cmp
xor
mov
fs
add
popa
and
pop
push
mov
lret
je
push
or
lods
in
inc
loope
sbb
mov
paddw
sub
pop
dec
sarb
mov
jne
push
cli
int3
stos
inc
jno
sub
jnp
std
sbb
mov
call
repz
push
arpl
lea
stos
add
cmp
inc
imul
or
and
pop
jecxz
ret
and
cmpsb
dec
jg
jno
les
sbb
imul
iret
and
sbb
sub
mov
out
psadbw
fs
repnz
loop
cs
jl
js
in
sub
cmp
push
flds
inc
mov
and
test
cmp
pop
dec
mov
ja
in
clc
pushl
or
cli
fwait
xchg
jb
jno
add
sub
scas
inc
shrb
mov
xor
loope
negl
xchg
jns
xchg
shrb
rclb
mov
fwait
test
into
cmp
jmp
push
add
mov
out
jmp
cltd
jb
std
xchg
aad
and
mov
push
lea
aaa
mov
js
sbb
mov
dec
push
iret
mov
push
scas
test
cmp
push
mov
imul
bound
stos
dec
jg
fcoms
test
push
add
nop
pop
test
inc
sub
test
jns
into
xchg
loop
mov
xchg
outsl
mov
fwait
adc
in
ss
xor
mov
jp
shrb
xchg
xchg
loop
test
insb
popa
ljmp
sub
cltd
dec
jo
js
nop
or
push
int3
xor
pushf
xor
push
xchg
push
add
ljmp
lret
xchg
push
mov
movmskps
mov
fidivl
stos
cld
pop
pop
push
sbb
movb
cmp
dec
dec
and
enter
and
mov
jb
inc
mov
lods
dec
cmc
repnz
and
xor
mov
pop
or
popf
and
adc
add
dec
movsl
jle
xor
or
lret
and
mov
and
sbb
and
roll
jnp
orb
xchg
in
mov
sbb
pop
xchg
das
and
jb
adc
ds
inc
popf
or
inc
popf
fsubr
mov
dec
pushf
mov
mov
or
ret
cmp
test
mov
push
jp
xchg
lret
push
jnp
push
lret
xor
in
data16
mov
pusha
loope
out
ljmp
xchg
pop
fdivrs
mov
pop
jmp
fcmovnbe
or
cmp
mov
bound
mov
pop
out
mov
test
inc
pop
int3
add
paddd
and
pusha
sub
cmp
xchg
xor
repz
insb
repnz
mov
mov
insl
xchg
stc
cmp
and
shlb
cmc
push
out
movsl
call
mov
mov
std
sub
push
scas
sbb
scas
cli
jle
inc
call
cli
and
sub
ret
movb
pop
sbb
pop
gs
fisttpl
shl
adcb
jg
cmp
sub
les
popf
cmp
pop
or
sbb
rorl
or
lea
jne
loope
mov
nop
test
jbe
fcoml
add
mov
jmp
pop
inc
repnz
xchg
sub
shlb
mov
clc
sti
lock
sbb
adc
cmpb
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
mov
in
sti
daa
push
jl
pop
pop
jl
xchg
fcoml
fcomps
inc
bound
test
arpl
js
test
jge
xchg
inc
pop
pop
aaa
fdiv
inc
mov
pop
sbb
xchg
stos
es
lret
iret
mov
ss
imul
push
mov
loope
sub
xor
jg
and
push
ss
sbb
inc
movq
sub
cld
mov
test
out
es
lods
je
or
or
sub
dec
cld
pop
xchg
mov
mov
lret
js
test
stc
pop
mov
shrl
sbb
or
fbstp
mov
jmp
clc
add
lods
dec
pop
shl
insl
pop
mov
mov
mov
inc
out
dec
and
jp
and
pop
out
std
lds
mov
jno
xlat
xchg
fsubrs
inc
xchg
inc
lahf
pusha
xchg
sbb
dec
push
mov
movsb
cmp
sbb
and
pop
shrb
jmp
xor
push
mov
fisttpll
jp
mov
pop
adc
xor
std
xchg
and
out
nop
dec
shl
or
sub
int
adc
and
adc
dec
fdivrl
mov
ret
das
add
mov
cmp
cmp
xchg
and
daa
pushf
shll
dec
push
test
ficoml
mov
mov
into
jp
jecxz
daa
push
jp
nop
jmp
push
in
or
in
dec
mov
shlb
lahf
insl
or
pop
aaa
insb
sub
das
jmp
loope
addr16
loopne
add
stos
add
je
mov
es
cld
scas
repz
pop
mov
fcoms
dec
mov
cmp
jp
pop
dec
aad
lcall
nop
sub
push
loope
mov
add
js
add
xchg
xchg
mov
xor
mov
push
lods
adc
ds
jb
cmp
mov
aas
mov
std
mov
push
jp
xchg
adc
dec
in
add
cld
push
mov
cmp
or
ljmp
xlat
push
mov
pop
cmc
jno
adc
mov
dec
aas
xlat
mov
in
popf
inc
mov
cmp
rolb
insb
int
repnz
add
mov
enter
jno
dec
call
std
xchg
push
loopne
push
data16
ljmp
jecxz
fsubr
mov
imul
dec
mov
imul
mov
pop
scas
sub
into
mov
rorb
in
jnp
outsl
mov
call
inc
icebp
add
pushf
adc
fimull
iret
testb
jns
jg
and
xchg
inc
cmp
ljmp
inc
movsb
imulb
dec
jae
pop
test
mov
push
sbb
rolb
inc
into
mov
mov
pusha
jmp
inc
lods
jg
dec
xchg
push
dec
aad
or
fcoms
push
push
sbb
pushl
es
inc
xchg
cmp
jmp
sahf
xor
shl
adc
outsl
mov
xchg
lret
mov
xor
repnz
pop
bound
loope
push
cmp
out
int
ja
stc
sar
mov
imul
dec
inc
inc
loop
repnz
fmull
inc
jl
ja
es
movb
pushl
jmp
arpl
xchg
imul
adc
inc
mov
pop
adc
outsb
andl
clc
fcompl
in
stos
dec
cs
mov
cmp
fidivl
dec
fsubrl
mov
cwtl
mov
mov
std
in
pop
imul
fcoml
in
push
adc
icebp
jecxz
push
data16
xchg
xor
out
imul
dec
jb
inc
and
add
sub
cmp
jg
push
icebp
pushf
xchg
loopne
jmp
cmp
push
cmc
add
mov
mov
ret
imul
je
push
cmpb
lds
andb
xchg
data16
xchg
jne
stos
mov
rcrl
mov
sbbl
push
fcmovnb
leave
dec
rorl
in
xchg
mov
sbb
scas
push
pop
pop
or
imul
lock
push
lock
fwait
cs
in
or
and
clc
test
fsubl
dec
cmp
add
aam
arpl
sub
outsb
gs
clc
clc
scas
add
jnp
out
repz
sbb
xor
ficompl
jns
movsb
arpl
sub
movsb
out
dec
or
icebp
dec
jecxz
cmp
pop
jo
mov
bound
jecxz
negl
push
push
xchg
loop
pop
inc
fcompl
inc
cltd
dec
inc
sbb
fwait
add
cmc
imul
js
and
mov
stos
mov
call
mov
movsl
aam
lods
mov
arpl
cmp
dec
push
mov
insl
movsb
fcos
adc
cmp
mov
out
cltd
jg
mov
in
shll
ret
scas
mov
or
push
and
xchg
mov
jl
mov
es
sti
fmull
pop
mov
stos
les
repz
mov
iret
mov
aas
int3
mov
adc
sti
sbb
jne
les
cmc
pop
sbb
fs
or
adc
rcll
inc
push
cld
add
daa
mov
cmpsb
movsb
call
push
pop
je
mov
lret
mov
push
pop
lss
ret
cltd
stos
cld
jo
in
in
out
leave
idiv
xchg
ret
and
fstps
lock
jmp
xchg
and
mov
mov
push
cmp
adc
cmc
mov
dec
cs
push
mov
in
enter
add
in
cmp
ss
sub
sbb
lret
add
repz
push
add
js
orb
mov
lcall
cs
cmp
std
int3
loopne
inc
loope
add
cli
push
jecxz
jbe
mov
xchg
push
in
xchg
mov
mov
test
adc
inc
sbb
dec
mov
pop
jbe
fcmovu
xor
fnsave
scas
and
cmp
and
xchg
dec
in
das
jge
cli
cltd
subl
and
fcoms
stos
shlb
xor
add
lcall
sub
aas
xchg
cltd
and
std
scas
mov
mov
negl
adc
jbe
inc
sbb
sbb
aas
jo
mov
mov
rorl
mov
icebp
pop
addl
mov
and
dec
and
inc
and
out
into
xchg
test
cs
rolb
lret
add
pop
push
mov
orl
in
mov
jl
ds
adc
out
sub
adc
leave
lds
pop
xor
addr16
add
push
rclb
in
lret
leave
or
dec
xchg
jl
adc
lock
add
adc
cmp
push
xlat
sub
mov
sbb
orb
repz
inc
cmp
icebp
push
push
push
stos
sbb
scas
call
push
push
lahf
xor
pop
mov
pop
and
rol
out
sbb
push
push
and
shll
addr16
lock
out
mov
inc
dec
mov
loop
aas
fidivs
daa
push
subl
jns
mov
dec
leave
add
jno
xchg
fldenv
inc
and
mov
pop
cld
xchg
sub
sbb
ja
clc
mov
data16
fnstenv
jno
fwait
cmp
les
add
or
adc
adc
push
mov
xchg
fcoms
and
int3
call
push
cmpsb
pop
dec
les
int
xor
xchg
fs
xchg
push
sbb
mov
inc
or
jg
in
mov
lcall
mov
test
out
jmp
scas
rcl
jne
push
lea
xchg
adc
ljmp
test
jns
repz
push
shrl
dec
scas
inc
mov
cwtl
insb
lds
push
leave
sbb
stc
jp
pushf
dec
mov
and
push
js
mov
imul
and
jne
daa
sub
mov
sbb
jle
movsl
or
lret
sti
push
loop
lahf
xchg
sub
cmpsb
loop
mov
aam
cli
arpl
sahf
leave
jne
mov
rcl
in
push
in
test
push
xchg
imul
mov
in
adc
dec
push
test
dec
xor
lea
add
xor
dec
add
fst
sbb
test
xchg
xor
adc
loopne
test
cwtl
or
xlat
dec
pushf
shlb
mov
mov
fstpt
pop
sarb
sbb
add
xchg
and
sbb
push
jbe
adc
mov
sbb
aad
mov
shrl
loop
leave
je
lahf
outsl
clc
jae
mov
sub
inc
orb
dec
sbb
loope
sbb
into
mov
imul
fsts
mov
inc
mov
das
nop
push
pusha
outsl
push
stc
or
pop
dec
pushf
xchg
or
or
imul
cld
sub
shlb
fidivrs
add
push
sbbb
jg
dec
frstor
out
cmc
xchg
and
push
push
adc
sub
inc
mov
mov
pop
xchg
data16
or
lods
jnp
mov
add
mov
rcrb
cli
adc
sub
and
fisttpll
popa
lods
popa
stos
and
mov
fs
jne
and
inc
add
int
or
jg
fisttpl
push
jle
xor
sub
cld
jp
mov
aam
mov
sub
jno
pop
rcl
add
mov
mov
sbbl
jg
xor
xchg
cltd
cli
fidivs
cmpsb
lods
mov
push
jns
in
cmp
mov
mov
xchg
cmp
icebp
scas
cld
fmuls
stos
ljmp
gs
je
stos
inc
aad
cli
gs
mov
sti
add
mov
scas
aam
in
test
xor
das
in
pushf
icebp
into
mov
pop
and
lret
cltd
sti
xor
loope
cmp
pop
jno
decb
je
shlb
popf
push
fisubl
int3
mov
or
jbe
mov
lcall
dec
jge
imul
gs
inc
jecxz
ljmp
in
xchg
sbbl
inc
add
insb
mov
repnz
sbb
cld
jl
sahf
bound
sub
mov
loope
jmp
shr
mov
scas
jp
popa
xor
xchg
out
cmc
insb
in
jle
pop
es
testb
cli
mov
pop
mov
jecxz
rol
jno
lods
add
stos
xor
leave
mov
xchg
cmp
push
rcrb
mov
mov
test
sub
cld
jns
ljmp
pop
in
or
stos
out
pop
jge
sbb
jne
push
insl
mov
push
pop
js
shrb
out
mov
mov
push
fst
dec
and
pop
into
lret
fcmove
nop
mov
stos
mov
pop
faddl
mov
pop
xlat
and
movsb
test
cmpsb
pop
arpl
add
inc
repz
push
xchg
cmpsb
adc
mov
and
jp
cmp
out
sub
test
jo
out
xchg
mov
dec
adc
xchg
mov
adcl
mov
lock
xor
flds
sbb
cli
lcall
dec
pop
sbb
or
movsb
test
dec
push
add
sub
and
pop
shl
idiv
inc
je
fs
sar
imul
insb
push
lods
mov
add
loope
cmp
jecxz
push
mov
push
mov
sub
sub
mov
xchg
pop
fwait
loope
sti
punpckhdq
clc
xchg
push
xor
or
and
ja
bound
inc
xor
inc
dec
jae
cmp
add
dec
pop
scas
ss
pop
iret
mov
stc
add
push
shl
lds
dec
fadds
iret
mov
fsubrl
shlb
test
es
loope
rol
imul
iret
push
sbb
les
cli
repz
cmp
mov
cmp
cmp
mov
mov
sub
mov
outsl
sub
dec
stc
jo
adc
push
mov
push
popf
sbb
dec
sbb
add
lcall
cld
je
sub
or
and
mov
push
jecxz
dec
push
or
inc
lret
mov
scas
add
pusha
push
jg
iret
add
test
pop
sub
xchg
pop
xchg
loop
xor
insb
add
cwtl
inc
cli
cmpsl
loopne
jge
mov
inc
sti
pmullw
lret
rorb
test
push
mov
xlat
xor
popf
cli
scas
mov
mov
sub
rorb
xchg
lds
push
pusha
push
imul
fidivrs
outsb
les
inc
inc
das
pop
sbb
jb
insl
xorl
imul
jb
lret
aad
and
dec
sahf
pushf
mov
popa
arpl
arpl
bound
call
or
xor
mov
shrl
pusha
popl
jecxz
gs
paddb
mov
push
xchg
inc
mov
inc
or
jb
out
insl
lock
push
mov
cwtl
movsl
fcmovnbe
xlat
xchg
sub
scas
je
sub
or
cmp
mov
xor
pop
sbb
jns
mov
sub
inc
sahf
jl
cmp
stos
ret
pop
cmpsb
mov
into
je
adc
faddl
addb
jo
fucomip
lods
inc
int
call
aaa
aaa
fwait
test
shll
jle
xchg
scas
push
test
jne
adc
or
shlb
cmp
xchg
mov
in
push
adc
and
fnstenv
jo
jno
inc
mov
lret
mov
insl
dec
popa
adc
sbb
or
jns
mov
loopne
dec
js
or
test
in
bound
xor
adc
orb
popf
cmpsb
push
xor
jp
jo
sti
jno
dec
int3
cmp
cli
movsb
sbb
movaps
rcll
jge
mov
loopne
das
mov
imul
fnsave
xor
out
movsl
xlat
and
xchg
jecxz
inc
lods
aad
popf
das
dec
stc
popf
mov
sbb
and
loopne
dec
in
jp
xor
push
stos
add
mov
pop
test
out
mov
scas
ret
pop
out
xchg
xor
aas
notb
mov
pop
js
imul
push
inc
mov
pop
test
xlat
std
in
pusha
rorl
cld
ret
je
pop
or
push
inc
test
cmc
adc
mov
lock
push
stos
les
clc
aaa
dec
ljmp
xchg
mov
popa
inc
pop
adc
xor
xor
roll
mov
cmc
push
lahf
and
add
fidivrl
inc
add
bound
pushf
mov
imul
js
sbb
out
jmp
leave
cmpsl
test
insb
cmp
cwtl
je
cmpsl
inc
jns
jl
scas
aad
mov
aaa
cmp
mov
repnz
pusha
cwtl
cld
dec
jb
push
repz
inc
test
and
movsb
mov
and
test
js
rclb
push
cmp
pop
mov
or
decl
push
cmp
sbb
mov
lret
xchg
inc
mov
ss
pop
outsb
adc
sysenter
mov
test
mov
aam
push
pop
pop
mov
jbe
adc
idivl
push
jbe
pop
ljmp
xor
rcl
lahf
inc
popf
and
out
jo
lret
out
mov
mov
test
emms
add
loop
xor
adc
push
fwait
ret
sarb
mov
ljmp
idivl
sub
loope
push
inc
mov
or
sahf
mov
cmc
out
cmpsl
lds
xor
test
and
out
mov
mov
push
and
xor
dec
cmp
test
xchg
decb
and
mov
mov
test
inc
fcoml
lret
push
divb
fsubl
mov
ss
test
mov
and
jmp
ret
adc
dec
mov
add
xor
mov
cmp
ja
aad
mov
aam
jle
imul
dec
adc
mov
inc
or
adc
push
ret
dec
sti
pop
cmc
test
imul
loop
xlat
pop
in
add
insl
ja
outsb
fcomps
push
addb
adc
add
std
pusha
andb
push
or
mov
dec
popf
aas
mov
mov
mov
lods
inc
adc
lahf
cmpsl
push
cmp
push
mov
insb
rorb
xor
fs
dec
push
xor
in
and
cld
cmp
dec
jns
ja
movsb
inc
push
test
lahf
jmp
mov
pop
mov
rcrl
sub
test
sbb
sbb
arpl
cli
lods
lea
or
xchg
rcrb
out
cmp
lret
cmpsl
repnz
daa
fcmove
pop
sub
das
sub
xchg
mov
mov
adc
push
lcall
ret
jne
pop
shlb
ficomps
or
popa
xor
sub
mov
cmpsl
inc
les
mov
movsl
or
and
dec
and
jno
enter
arpl
jnp
cltd
jns
pop
sub
or
iret
roll
cs
mov
pop
xchg
mov
fldcw
outsb
movsb
xchg
clc
mov
in
pop
lods
dec
dec
push
arpl
test
lods
mov
mov
sub
mov
scas
std
and
mov
jp
je
sbb
shrb
mov
lret
stc
sub
popf
sub
push
cld
test
ja
push
lock
fs
inc
push
adc
in
addr16
cwtl
adc
fs
mov
lds
mov
es
jecxz
push
fistps
jns
les
mov
repz
sbb
sbb
dec
jle
cmp
or
jnp
jno
jg
je,pn
dec
and
in
xlat
jmp
or
jmp
xlat
cmp
out
pop
inc
and
xchg
jecxz
cmp
or
arpl
outsb
cmp
sub
inc
cli
push
iret
mov
jmp
test
sahf
pop
aam
lret
mov
xor
mov
pop
push
out
adc
and
pop
inc
scas
repnz
mov
stos
jbe
movb
add
bound
push
sbb
insb
mov
xlat
pushf
mov
xor
mov
jbe
mov
sub
mov
ret
test
sbb
fwait
pop
jle
push
ljmp
or
xor
mov
fcomps
mov
dec
xlat
gs
pop
sarl
jne
pop
rcrl
testl
les
mov
sub
xchg
and
sub
jb
cmp
push
mov
shlb
mov
cwtl
add
push
movsb
in
aad
mov
sbb
cmc
mov
jp
or
xchg
rcll
and
daa
mov
dec
lea
xchg
inc
xor
mov
leave
movl
hlt
xchg
mov
movsb
mov
movsb
pop
and
fstps
ljmp
pop
call
hlt
inc
lret
jp
or
in
xor
hlt
cmc
cld
and
cmpsl
stos
mov
xchg
lock
jle
jne
sub
xor
test
fisttps
jb
push
or
push
popf
sbb
movsl
pop
push
out
push
sbb
scas
test
adc
push
pop
icebp
mov
fdivs
mov
lock
rcrb
sub
jno
stc
fisubl
popa
cmove
out
adc
or
xchg
pop
int3
mov
dec
imul
cli
lret
inc
roll
cld
clc
push
popf
in
fld
addr16
sub
lds
and
test
jl
mov
int3
jle
inc
mov
mov
fmulp
es
mov
test
xor
insl
xchg
push
jg
ss
lods
push
adc
sbb
inc
sub
pushl
fstpt
in
adcb
jne
outsl
scas
and
or
mov
stos
out
popf
dec
adc
sbb
mov
push
xor
pop
xchg
dec
and
clc
jnp
pusha
out
jno
sbb
movsl
adc
xor
inc
adc
jg
adc
and
ja
dec
xchg
push
bound
imul
test
or
or
inc
xor
cmpsb
cwtl
cld
clc
addr16
mov
repz
loope
fisubrs
xlat
xor
rcr
nop
dec
iret
pop
sbb
loopne
jnp
imul
das
inc
in
sub
stos
jle
mov
cmp
xor
xchg
mov
dec
lret
xor
je
outsl
insb
jg
jno
lods
sbb
xor
cltd
or
inc
negb
fisubrs
pop
lret
sbb
fcompl
jge
cmp
adc
sbb
pop
cli
push
fwait
mov
cmp
int
xor
leave
xchg
push
dec
fcmovnu
and
dec
mov
lcall
in
mov
jmp
mov
pop
xor
jo
jecxz
pop
gs
loopne
loopne
jg
dec
push
push
jb
mov
lock
mov
xor
push
scas
movsl
hlt
and
insb
mov
inc
xor
mov
filds
and
sub
xor
mov
mov
sub
arpl
sbb
add
mov
cmc
xor
cwtl
add
inc
ret
jo
out
lret
and
push
loop
or
push
mov
mov
stos
imull
or
roll
pusha
iret
push
sub
aaa
xor
pop
sarb
adc
insl
fisttpl
ss
mov
and
mov
dec
cmp
inc
cwtl
pop
cmc
xor
jnp
rcrb
je
test
jbe
add
int3
int3
rcr
rcrb
adc
sarb
jl
mov
aam
ret
mov
fisubrs
imull
cs
lcall
push
mov
movsl
out
test
mov
cwtl
or
divb
sbb
cli
mov
inc
jl
call
movsl
jge
pop
in
out
iret
sahf
mov
mov
js
mov
dec
fnsave
lret
cmp
ljmp
push
daa
imul
sbb
mov
jmp
lods
inc
insl
adc
or
xor
push
out
aas
ret
inc
scas
into
dec
xchg
ljmp
lock
xchg
sub
subl
dec
repnz
fsts
pop
xchg
popf
inc
cs
ret
loop
sub
push
mov
stos
mov
adc
sub
loope
cmpsb
imul
mov
enter
mov
clc
imulb
sbb
sub
addr16
aaa
fdiv
dec
add
jne
mov
mov
or
sbb
pushl
mov
sarb
xchg
das
push
inc
sbb
sbb
adc
cmpsb
insb
inc
push
dec
adc
clc
and
and
fsubs
clc
pop
mov
jp
lea
insb
pop
or
imul
andb
sti
mov
jno
cmpsb
push
int
push
and
insb
adc
and
fwait
push
lret
jmp
jne
in
add
js
adc
imul
or
cmp
pop
mov
xor
fbstp
es
or
mov
mov
stos
cli
cltd
adc
ficomps
sub
add
inc
loop
fistpl
and
and
xchg
sbb
inc
je
outsl
in
lods
dec
mov
cmp
xchg
dec
cmpsl
pusha
rcrb
subb
adc
xor
pop
pop
jp
adc
dec
clc
add
mov
and
mov
out
add
sub
push
ret
negb
pop
ret
and
mov
aas
mov
pushf
inc
fistps
movsl
mov
inc
inc
lcall
jns
add
xchg
enter
insl
pop
iret
call
push
cmp
vpsrld
add
mov
mov
or
sbb
inc
les
fsubrl
adc
sbb
adc
out
inc
cmpsl
idivb
mov
adcl
pop
and
mov
adc
jge
sub
cmc
arpl
enter
mov
pop
pop
pop
or
enter
jnp
in
mov
pop
jg
lcall
arpl
and
push
inc
jbe
bound
movsl
mov
xchg
sub
adc
les
clc
ja
repz
xchg
xor
gs
in
sub
xlat
cmc
pushl
adc
popaw
sarl
sub
xor
mov
mov
add
sbb
loop
sub
and
pop
cmpb
xor
mov
test
jl
mov
loop
jae
xchg
mov
and
jge
mov
pop
jecxz
jo
or
pop
and
push
testl
mov
lahf
popa
stos
test
or
jns
mov
or
pop
pop
xchg
loope
cwtl
jl
push
pop
ret
idivb
mov
shll
insb
cmp
insb
lahf
push
sbb
pop
mov
loop
in
movsl
mov
push
data16
sbb
fadd
xchg
sbb
popa
stos
das
xor
mov
or
dec
push
xor
enter
ret
fwait
ret
xchg
push
shld
pop
lret
sub
sti
inc
imul
add
push
pop
mov
sub
sub
ret
or
xchg
fdivs
jno
xchg
das
pop
cmpsb
outsb
mov
stc
add
cmpsb
popf
add
lea
cltd
jmp
jo
sti
rol
test
xor
ficomps
fdivs
push
xchg
mov
dec
pop
sbb
cld
xor
and
cld
sub
jb
pop
je
jge
insb
dec
cli
xchg
ja
xor
clc
push
mov
les
lods
dec
insl
icebp
adc
aaa
ficoml
push
sub
xchg
gs
mov
fnstsw
daa
shrl
sub
mov
pop
mov
pusha
xchg
dec
int3
movsl
sti
arpl
cmp
insl
out
fcmovbe
dec
adc
daa
sti
add
mov
movb
rclb
sbb
fs
jle
pop
push
dec
test
divl
mov
or
mov
or
cmp
sti
dec
popf
mov
loopne
mov
dec
mov
es
shlb
dec
repnz
mov
xor
insb
add
jo
in
mov
bound
pop
imul
clc
or
pop
shl
mov
loope
adc
les
cld
push
loopne
inc
add
fbstp
mov
rclb
sub
test
outsl
push
jecxz
ds
mov
pop
gs
xor
jnp
adc
leave
scas
fs
dec
dec
jae
xchg
fbstp
xchg
pop
push
mov
jecxz
scas
and
jne
sbb
ja
jg
xor
xlat
out
jg
enter
or
sahf
cmpsb
pusha
mov
jp
push
cmp
xchg
xor
sub
jb
movsb
cmp
xor
mov
jae
sub
adc
loop
dec
or
nop
pop
pop
loop
test
les
cmp
imul
cmp
or
fbld
inc
xor
out
les
cld
adc
aad
ds
in
cs
dec
mov
adc
pop
mov
clc
mov
mov
mov
xchg
sub
negl
push
das
sub
scas
mov
pop
sub
adc
imul
movaps
movsb
rorl
fwait
mov
push
mov
inc
leave
and
sub
cld
addl
or
sbb
mov
push
add
int
cltd
jne
movsl
dec
test
stos
mov
mov
push
inc
clc
pop
imul
sub
cmpsb
mov
add
cmp
outsl
jl
iret
dec
adc
xor
adc
cmp
inc
test
and
jl
pushf
into
adc
inc
pop
pop
adc
cmc
xor
dec
add
ficoms
iret
sbb
xchg
pusha
outsb
test
daa
add
test
in
mov
out
push
cltd
stos
dec
push
xchg
jnp
es
testl
aaa
ds
lcall
dec
mov
pop
xor
lahf
fldl
or
js
mov
jae
icebp
pop
or
es
cli
xchg
pop
repz
sub
dec
inc
mulb
out
mov
js
xchg
or
rcll
pushf
decb
stc
fdivl
jno
in
xor
add
cmp
je
insb
loope
hlt
push
xor
inc
lret
push
cmp
push
jg
mov
cmp
int
fnstsw
outsl
inc
push
pop
dec
add
js
pop
cmp
xor
mov
jae,pn
notb
xchg
jmp
xor
aad
test
xchg
insl
div
lock
dec
and
jne
adc
ljmp
hlt
in
aad
pop
mov
jae
fistpll
subl
mov
in
repnz
pop
cmpsl
and
xchg
xor
or
mov
cmp
jno
das
jp
scas
insb
dec
loopne
ror
test
movsb
adc
pop
mov
in
jmp
add
jns
jns
or
das
loop
out
scas
stc
inc
dec
mov
push
jecxz
xchg
inc
sub
xor
fwait
mov
ret
arpl
cld
or
faddp
jp
xchg
rorb
pop
sbb
in
test
xor
xor
jle
ds
mov
aas
movsl
sub
test
lret
push
addr16
pop
pushf
cli
inc
loop
pop
mov
insb
push
pusha
jbe
jae
xor
ljmp
inc
inc
inc
jb
pop
cmpsl
popa
sbb
mov
cmp
inc
and
popa
popf
or
imul
data16
mov
adc
pop
in
cmpsb
inc
popf
jb
inc
mov
movsb
jae
inc
fists
mov
xlat
jge
ja
and
test
and
loopne
inc
pop
push
lcall
test
sbb
and
or
scas
pop
mov
shr
mov
je
repz
into
push
or
and
fistl
in
mov
mov
lods
mov
jno
imul
mov
xchg
pop
jecxz
jp
aaa
sahf
lods
popf
adc
add
cmp
sbb
lock
xchg
daa
in
rolb
pop
andnps
jecxz
les
add
jbe
das
jae
iret
pop
pop
movsl
pop
lret
mov
ja
push
cld
lcall
xchg
jns
inc
lret
dec
xchg
insb
mul
jge
aaa
negl
cmp
jo
jne
mov
xchg
or
fistps
or
push
pop
push
sub
imul
es
jp
lret
jmp
sbb
and
popa
cli
clc
jbe
pop
xor
repz
out
jecxz
bts
mov
test
jge
out
push
mov
lods
xchg
icebp
mov
pop
pop
mov
ja
mov
imull
or
fcompl
test
sbb
push
push
xlat
stc
add
in
adc
cwtl
insl
test
imul
or
jo
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
mov
pop
pop
jl
stc
xchg
ret
mov
sub
mov
xor
icebp
mov
lds
jle
dec
out
mov
inc
sub
mov
in
lods
jbe
js
punpckldq
and
mov
xchg
iret
mov
stos
and
lret
aaa
insb
cmp
bound
fimull
iret
xchg
pop
push
pop
repnz
jge
enter
adc
out
mov
cmpsb
mov
jb
push
jae
xlat
insl
mov
les
nop
sbb
in
xor
xchg
jle
hlt
dec
dec
dec
xor
fdivs
push
xchg
ljmp
push
cwtl
add
in
pop
lcall
add
adc
ss
popf
pop
dec
fwait
pop
ljmp
out
adc
xor
popl
aad
shrb
xchg
orl
pop
mulw
cmc
pusha
sbb
aad
mov
xchg
es
and
pop
xchg
pop
inc
adc
cmp
xor
mov
pop
or
sub
subb
test
pop
add
shlb
repnz
jo
dec
push
gs
inc
jecxz
stos
sub
pop
pop
push
pop
aad
jnp
pop
cmp
ret
lock
test
in
sarl
stos
push
repz
nop
subb
push
xlat
xor
lret
cwtl
jg
mov
pop
jns
jmp
push
xchg
jge
jnp
push
xchg
cltd
mov
add
pop
add
sbb
xchg
mov
push
sbb
js
add
out
shrb
dec
xor
xchg
jbe
icebp
fnsave
faddp
and
mov
pop
mov
pop
xor
lods
in
fistpll
aad
je
xchg
lods
sub
movsb
adcl
dec
out
adc
xchg
adc
rorb
mov
mov
jo
dec
insl
dec
and
mov
jg
mov
pop
test
pop
aad
sbb
test
mov
lods
stc
cli
stos
mov
loope
cmpsl
repz
repnz
mov
je
popf
pusha
sbb
and
popa
xor
and
mov
or
mov
ja
dec
jae
sbb
pop
stc
insl
pop
in
sub
inc
jl
stc
fidivl
icebp
out
cmp
sbb
pop
mov
jecxz
sbb
or
push
jge
cmp
loope
xchg
iret
mov
mov
push
or
push
inc
jno
mov
nop
pop
cs
cs
repnz
mov
fisttps
je
fcompl
lret
mov
sarl
aam
outsl
dec
sbbb
aas
into
pop
fnstcw
mov
stos
sbbb
sbb
loope
scas
jecxz
into
push
mov
lds
stc
jl
sub
bound
inc
and
into
sahf
ds
adc
insl
xlat
insl
pushf
adc
mull
loopne
mov
and
es
test
ss
aas
cwtl
adc
and
cli
mov
cmp
std
sahf
adc
or
arpl
jnp,pt
decb
pop
inc
cli
jmp
push
push
mov
pop
jmp
fs
jnp
cmpsb
pop
dec
cmp
fdivrs
inc
push
jecxz
mov
scas
xor
dec
addr16
outsb
xor
dec
lcall
pop
jg
push
and
enter
lret
push
mov
cwtl
aas
pop
inc
and
push
add
je
cmpsb
into
cmp
xchg
aam
mov
jg
fcmovnbe
int
das
js
push
mov
ffree
sbb
pop
dec
lahf
outsl
xor
xor
mov
sub
add
add
arpl
dec
iret
test
mov
jle
or
sub
arpl
cmpsb
clc
cwtl
fcompl
into
push
cwtl
lcall
sbb
cwtl
into
pop
outsb
cmp
mov
push
popf
in
fsubp
fisubl
out
pop
lcall
cld
pop
cltd
aaa
inc
lock
cltd
aad
jl
jne
add
or
jne
add
out
pushf
pop
std
mov
ds
ja
mov
aaa
jnp
lock
test
jns
sbb
inc
pusha
popf
int
in
data16
cmp
cmp
sbb
ja
pop
mov
mov
adc
adc
push
fsubs
sbb
mov
cwtl
pop
dec
incb
outsb
rclb
mov
mov
xchg
cmp
push
inc
popa
jno
inc
es
jmp
sar
sbb
cmp
xchg
mov
ret
push
cmpsb
jbe
ror
inc
sbb
xor
daa
push
mov
fptan
imulb
ja
xchg
imull
adc
cmc
dec
pop
mov
mov
cmp
mov
nop
jbe
fwait
mov
xchg
inc
loopne
stos
sub
popf
test
shlb
imul
jae
xchg
xlat
mov
dec
ljmp
loope
les
jnp
pop
jae
pop
cmc
xor
jmp
stos
xor
lcall
xor
inc
int
cmc
in
popl
mov
into
mov
rolb
dec
testl
add
mov
scas
dec
xor
sbb
adc
and
push
and
inc
jmp
jbe
xchg
mov
repz
mov
inc
gs
and
subl
mov
jae
inc
fstpl
jmp
repz
rorl
pusha
fnsave
bound
and
repz
cltd
jle
fidivl
sbb
lds
aas
stos
adc
aam
mov
dec
out
pop
fcmovnbe
push
loop
test
and
addl
leave
scas
push
jecxz
push
les
sbb
mov
bndstx
or
cmp
popf
mov
jle
push
dec
fistl
cmpsb
jae
sub
add
lret
xchg
mov
lods
and
mov
mov
fnsave
out
mov
bound
xchg
add
jl
pop
in
test
push
pusha
xlat
lods
or
push
jge
lret
sbb
aad
push
dec
sub
icebp
insb
aas
push
leave
repnz
xchg
mov
daa
stos
inc
add
sbb
pop
out
adc
in
add
adc
or
hlt
push
xchg
mov
adc
loope
or
cmp
xor
push
xor
sbb
add
mov
stos
dec
dec
add
icebp
fwait
inc
lcall
shll
push
push
popf
es
xchg
sub
xchg
shll
je
dec
lock
inc
cmp
mov
jnp
pop
jp
push
jbe
sbb
repz
and
scas
xchg
fistpll
dec
pop
negb
andb
aaa
fistl
xor
inc
loop
cmp
or
shll
sub
mov
cmpsb
enter
movmskps
and
or
add
lcall
imul
imul
loop
cltd
cmpsb
outsl
and
mov
push
pop
pop
mov
jno
adcl
cmpsb
pop
jbe
popf
out
sbb
lret
lock
pop
loop
xchg
clc
ficoms
pop
pop
test
das
sub
mov
arpl
jl
jg
mov
ja
adc
fstl
inc
mov
mov
cmp
mov
xlat
js
pop
aaa
repz
adc
int
dec
lret
bound
ror
cmp
jle
lcall
inc
dec
mov
int
xchg
push
jmp
push
pop
mov
pop
insb
mov
notb
bound
lret
mulb
xchg
cmp
aad
in
scas
mov
ja
xchg
lock
leave
cli
je
pop
pop
not
nop
loopne
rcl
es
mov
jp
add
add
jb
mov
lret
loope
adc
mov
icebp
push
sbb
vmread
jmp
push
push
dec
push
push
test
mov
sbbl
popa
out
pop
inc
push
test
and
pop
fcmovne
sbb
lahf
repz
mov
dec
xchg
push
sahf
add
arpl
std
inc
inc
adc
jmp
mov
pop
ror
dec
inc
dec
push
jge
stos
popa
mov
push
dec
cmp
cmp
jnp
out
rcrb
cmpsb
ret
imul
cmp
jg
mov
push
push
subl
sbb
fistpll
pop
jo
dec
push
adc
lret
insl
xchg
leave
gs
lret
mov
mov
xchg
fucomip
in
or
jo
jg
push
cltd
cmp
fadd
cli
leave
pushf
js
pop
hlt
mov
dec
daa
data16
sbb
fmul
in
lcall
aaa
sbb
in
and
roll
dec
or
xchg
fisttps
jg
lcall
dec
outsl
dec
movsl
push
sahf
lods
xchg
and
xlat
ja
mov
xchg
stos
sbb
mov
sbb
std
jle
es
int3
adc
xor
mov
cltd
or
inc
cmp
and
dec
test
sbb
jp
test
xchg
sbb
lea
aaa
popa
dec
inc
fisttpl
jl
mov
lock
and
daa
cs
sahf
out
out
pop
or
add
push
aad
jnp
xchg
xlat
pop
stc
dec
jle
les
roll
sbb
dec
jle
adc
adc
mov
or
rorl
inc
movl
sbb
push
push
fldenv
mov
mov
test
je
push
xor
lock
fdivp
pusha
mov
xchg
jg
ljmp
cmp
sub
cmp
mov
ja
cs
dec
add
xor
les
adc
jb
in
adc
loop
cwtl
mov
ficoml
dec
pop
sub
das
aad
cmp
cmp
fiadds
adc
jmp
lcall
pop
xor
pusha
clc
jne
mov
and
mov
subl
ret
test
mov
cmp
mov
mov
in
mov
cli
popa
sar
push
jns
inc
out
jns
mov
push
xchg
sub
or
lret
mov
xchg
shll
mov
js
shlb
xchg
dec
mov
mov
rorb
aas
stos
pushf
jp
fs
sub
add
push
rolw
mov
cmp
fldcw
arpl
add
push
adc
imul
pop
fcomps
adc
push
icebp
jbe
pop
and
fwait
scas
jns
add
sub
lds
dec
call
je
sub
dec
shl
add
insb
roll
dec
orb
movb
into
xor
mov
incb
jp
sub
mov
cmpsb
aad
mov
lcall
lahf
lods
lret
inc
sarl
mov
push
test
mov
lret
mov
inc
adc
repz
in
or
or
mov
aad
sub
enter
or
mov
mov
in
jge
xchg
fistps
jg
inc
enter
pop
push
cmc
push
daa
sar
xchg
mov
cmp
loope
jp
fisubrs
inc
shrb
pop
cmc
pop
mov
jl
cld
mov
jnp
mov
negl
cli
add
push
dec
popa
mov
inc
add
mov
outsb
push
mov
push
add
das
aas
mov
sub
sub
sbb
jmp
popf
pusha
inc
pop
jns
movsl
jnp
out
pop
mov
clc
int
in
mov
pop
dec
add
jo
jle
or
sbb
dec
adc
leave
cmp
mov
insb
aam
call
jns
jle
xchg
loop
dec
aaa
or
test
in
into
pop
push
push
js
mov
jge
mov
add
int3
mov
mov
int3
jnp
out
iret
inc
adc
and
mov
int3
push
and
mov
pop
shl
gs
aam
dec
shrb
jne
loope
in
subl
js
xor
mov
pop
addr16
test
mov
jae
mov
popa
lock
inc
adcb
cld
push
enter
sbb
and
mov
jne
and
jecxz
add
mov
push
lods
scas
sbb
sbbl
or
leave
shll
scas
inc
cmp
lea
cmp
xchg
repz
jge
lea
mov
xor
subl
pop
mov
push
out
notl
loope
mov
test
aas
leave
jl
jmp
or
std
xor
loope
sbb
insl
jmp
pop
jp
push
aaa
shrb
lret
gs
pop
jo
adcl
rcll
fwait
xchg
fucomip
in
je
lods
pop
xchg
dec
daa
mov
aam
in
mov
mov
sub
enter
into
orb
test
dec
aaa
pusha
ret
jp
sbb
mov
jmp
icebp
lret
jnp
or
push
mov
dec
pusha
es
jle
or
xchg
sbb
lcall
aas
test
in
add
loope
cmp
cmp
iret
add
mov
packuswb
jb
add
mov
stos
jmp
lds
pop
adc
ja
ret
lds
call
mov
sub
pop
cwtl
xor
adc
test
dec
iret
xlat
bound
add
inc
int
sbb
in
pop
sbb
jl
andl
mov
and
aad
movl
pop
rcrl
addl
mov
lds
int3
mov
ss
push
std
xchg
outsl
loop
dec
fbld
mull
pushf
shlb
int3
mov
in
adc
je
mov
sbb
pop
mov
cmpsb
ret
mov
nop
test
lea
jnp
cmp
mov
shr
fadds
mov
and
push
mov
adc
cmpsb
cmp
jecxz
repz
add
xor
mov
add
lcall
in
scas
sbb
xor
sub
fsubrs
pop
jnp
cltd
xor
pop
mov
cmp
fnsave
das
ljmp
pop
loope
js
pop
mov
jno
cwtl
sub
push
mov
pop
xchg
jns
aas
xlat
lcall
das
push
stos
out
mov
pop
cmpsl
addr16
hlt
jbe
xchg
int
and
pop
mov
out
mov
iret
out
sub
sbb
ljmp
ficompl
imul
adc
sahf
lock
sbb
mov
gs
adc
xor
jns
pop
push
sahf
lahf
imul
in
mov
push
int3
test
fsubl
aas
mov
cmp
xchg
fwait
jo
xchg
mov
test
lret
or
leave
popf
imul
fistps
dec
sbb
sub
inc
jp
mov
adc
stc
rclb
jb
push
inc
dec
out
daa
mov
mov
rclb
stc
lods
scas
popa
jg
pop
out
pop
inc
out
xchg
cmp
call
fcoms
mov
xor
sbb
outsb
roll
int3
arpl
and
lock
cmp
test
inc
cmpl
iret
cmc
cmpsb
push
out
sbb
bound
xor
rep
loop
js
pop
jp
xor
push
cltd
adc
cmp
iret
mov
mov
in
cltd
dec
jne
mov
push
stos
loop
test
and
sub
dec
dec
mov
popf
pop
rcll
sti
add
std
neg
jno
lret
js
enter
hlt
fmul
mov
shll
jge
pushf
xchg
push
pop
loopew
ficompl
test
stc
stos
dec
sbb
xchg
inc
sbb
sub
pushf
dec
cmp
sbb
sub
sbb
int3
lret
mov
pop
push
int
jno
pusha
dec
jno
in
lds
dec
ds
xor
inc
jbe
pop
and
push
leave
push
adc
jp
mov
xchg
clc
or
loopne
nop
aad
loope
fmuls
call
fcompl
cli
jmp
sub
lea
ss
sbb
out
lods
push
imul
in
jp
xchg
divl
inc
mov
push
and
jns
push
xchg
xchg
adc
rorl
inc
mov
cmp
dec
xchg
lcall
jecxz
in
cmp
movsl
out
cwtl
das
mov
add
inc
imul
dec
or
sbb
fs
lcall
jae
adc
aam
push
sbb
push
and
cmpsb
mov
les
sarl
add
pop
in
lds
outsb
icebp
pop
sbb
xchg
xchg
and
lds
hlt
in
and
out
dec
mov
push
hlt
mov
sarl
xchg
mov
mov
cmp
cmp
lahf
stos
or
xor
out
cwtl
push
mov
mov
rol
push
cwtl
or
mov
cmpsb
pop
loope
cwtl
pop
lahf
test
dec
mov
adc
outsl
mov
push
sbb
mov
inc
xchg
mov
inc
mov
movsl
fsubrs
jmp
sub
das
dec
in
jmp
cvtdq2ps
aad
or
adc
test
xor
inc
lahf
ja
shlb
mov
cmp
aam
push
ja
cmp
mov
mov
dec
jnp
int3
orl
out
pop
jle
jge
cmp
jmp
and
ret
loop
ficoms
lds
sbb
mov
xlat
pop
mov
push
mov
leave
movsb
and
imul
adc
scas
add
sarb
inc
mov
xor
push
sbb
adc
stos
int3
mov
sti
das
pop
mov
adc
xor
shll
sbb
xchg
cmpsl
inc
pushf
inc
cmp
xchg
out
lods
test
out
mov
or
fwait
xchg
dec
mov
mov
andl
pusha
cmp
push
sub
inc
mov
add
pop
mov
xor
cmpsb
or
push
pusha
gs
scas
outsl
insb
shl
int
jp
lock
mov
mov
adc
xchg
push
fs
pop
cmpb
cmp
je
mov
ret
das
pop
push
out
cmc
inc
daa
mull
xor
stos
xor
stos
negl
out
roll
mov
jp
popa
pop
lret
sbb
and
aaa
test
jge
inc
dec
aam
bound
adc
jnp
sub
loop
xchg
fcoms
or
mov
int
ret
cmpsl
lcall
lahf
gs
fldt
mov
nop
pop
fidivl
dec
pop
popf
mov
mov
sbb
fstpl
pop
test
test
add
mov
loop
push
dec
jne
lods
ss
jnp
test
jl
icebp
or
cwtl
cmp
fcomps
cmp
adc
ss
cmpsb
mov
or
in
das
cmp
and
data16
push
loope
arpl
fnstcw
adc
subb
adc
xchg
enter
test
xorl
loop
hlt
or
mov
mov
pop
aam
xor
inc
cmp
jno
leave
inc
sbb
cltd
dec
cld
aam
mov
imul
mov
dec
lret
js
push
adc
xchg
shl
aad
out
pop
or
sbb
mov
mov
jmp
push
ljmp
stos
clc
loope
pop
fld
bound
fisttps
push
int
cmp
mov
sbb
mov
adc
mov
inc
push
adc
dec
bound
cld
jae
mov
andl
xchg
ret
cmp
mov
pop
popf
lret
ret
cmpsl
les
mov
sub
adc
in
jmp
or
cmp
and
lock
fcompl
mov
std
cmp
or
fcompl
xchg
ret
inc
movsb
fmul
push
loop
cmp
stos
jb
dec
push
mov
repnz
sub
lret
jle
push
and
ret
jnp
dec
sbb
xor
ret
jno
mov
fst
xlat
xchg
sbb
jp
cmp
mov
sti
imul
or
sbb
insl
ret
sub
and
inc
movsl
ljmp
jle
jbe
cmpb
repnz
cmc
in
xor
fwait
inc
ret
aam
idivl
inc
push
push
or
sbb
and
sub
out
bound
lock
sbb
jb
aam
and
xlat
push
lock
lret
pop
lock
lds
repnz
mov
dec
sahf
inc
es
inc
je
es
aam
push
in
bound
sbb
ja
push
pop
push
rcr
xor
mov
lock
jno
sub
cmp
mov
jbe
sub
incl
xor
push
adc
dec
push
fstp
lods
imul
dec
sub
jne
mov
lret
sbb
xor
or
or
cmp
fs
cmp
rorb
pop
and
pop
inc
mov
scas
call
dec
xor
xor
mov
mov
mov
test
xchg
stos
sub
cmp
pop
or
jl
push
mov
xchg
jae
mov
test
mov
jne
mov
xor
or
inc
cmp
fwait
xchg
and
lea
push
push
movsb
pop
xor
ret
adc
and
mov
cwtl
jecxz
insl
mov
iret
or
setl
dec
das
or
gs
jge
iret
aas
out
cmpl
pop
xorl
sub
aaa
std
xor
inc
int3
scas
gs
scas
mov
push
jne
out
pop
aam
mov
test
dec
ret
xchg
mov
sub
iret
mov
test
push
sub
insb
sbb
ljmp
pushf
pusha
int3
fwait
sbb
shlb
stos
push
or
xchg
insl
mov
pop
rcrb
imul
add
cmp
out
push
xor
xchg
inc
pop
insb
in
insl
outsb
push
cmp
cmpsl
or
lahf
and
rcrb
out
jo
fcompl
xchg
out
xchg
mov
mov
aam
jae
aas
sahf
arpl
xor
js
fst
mov
fmull
or
mov
rorb
or
das
xor
pop
jns
or
mov
push
inc
mov
push
gs
sub
dec
rcrb
pop
lock
jae
roll
jnp
mov
mov
popa
jge
cli
cmc
rorl
data16
sarl
pop
cmp
and
dec
lahf
es
mov
clc
cmpsl
fisttpll
or
add
jge
xchg
sub
xchg
xchg
dec
filds
ud2
jnp
jmp
mov
inc
mov
ss
mov
das
add
stos
bound
sub
arpl
xor
mov
jle
loopne
ret
dec
mov
je
and
inc
shr
pop
inc
sbb
inc
sahf
iret
scas
inc
lret
pusha
push
dec
icebp
adc
test
testl
int3
cmpsl
enter
jne
enter
js
push
in
add
xchg
xchg
das
out
jl
shll
into
sub
jp
jno
xchg
bound
or
shll
mov
push
repnz
movsb
xlat
mov
add
mov
adc
andb
stos
inc
xchg
jbe
in
bound
add
imul
enter
and
outsb
hlt
aaa
ror
and
fcomps
mov
inc
in
cmp
jmp
shlb
lret
outsl
mov
mov
pop
addr16
jb
add
dec
ret
scas
cli
fsubl
pop
xor
out
pop
pop
ror
int3
jbe
daa
or
add
fnstsw
push
fs
mov
mov
or
xchg
push
aad
std
adc
enter
out
divb
xchg
imul
push
addl
in
lea
jnp
dec
fisubrs
mov
arpl
push
aad
adc
mov
lahf
out
aam
loopne
ret
inc
mov
rorb
add
aas
nop
jge
jnp
and
pop
stos
xor
push
lds
adc
or
xchg
jbe
add
cmpsb
pop
aas
or
ror
and
push
fists
push
cmpsb
jle
mov
push
mov
jge
pusha
sub
daa
mov
decl
aas
call
scas
mov
sub
lahf
shll
subl
addb
inc
xchg
and
dec
and
in
mov
stos
cld
inc
jnp
adc
bound
decl
mov
add
insb
xrelease
and
flds
loopne
xor
cld
jmp
lret
pop
loopne
rorb
fiadds
les
fisttps
jmp
fwait
scas
nop
sub
les
mov
xor
into
pop
in
std
inc
xchg
lods
mov
xor
aam
inc
jb
cld
xor
std
xchg
jge
es
push
movnti
mov
repnz
adc
jg
lods
stos
push
cmc
ret
push
mov
aam
aam
jg
gs
call
mov
jge
lods
imul
or
clc
xor
dec
clc
mov
jl
shll
repz
mov
sub
cmp
test
sub
insb
daa
nop
int3
popa
cmp
pop
dec
rorl
adc
mov
pop
mov
sub
xorl
xchg
pop
xchg
enter
push
popa
ss
out
subb
push
inc
adc
imul
aaa
jnp
call
adc
sbb
andl
hlt
pop
int
addr16
rcrb
mov
xor
pusha
gs
insl
sub
in
enter
xchg
sti
fistps
scas
push
push
rcll
out
rorl
dec
inc
mov
or
insb
nop
mov
push
in
add
pushf
cwtl
mov
out
daa
sarb
adc
iret
mov
xor
scas
ja
scas
xchg
ret
es
test
inc
mov
adc
sbb
popa
mov
sbb
imul
jns
mov
scas
icebp
jae
out
mov
pushw
daa
push
sub
push
mov
jecxz
push
pop
jne
xchg
sub
lahf
cmp
xchg
and
imul
ja
push
mov
cwtl
fdivr
xchg
aam
inc
push
xor
scas
push
and
cmp
cmp
gs
pop
sub
dec
in
cmp
imul
xlat
loope
mov
add
push
mov
test
inc
pop
or
cmpsl
push
xor
rcll
push
shll
cmp
jp
in
or
jno
test
and
inc
sbb
or
dec
mov
test
stos
sub
pop
roll
out
fmul
jl
xor
sbb
les
push
lods
enter
sub
pop
jle
repnz
push
lock
pusha
sarb
insl
adc
inc
stos
bnd
or
popa
push
mov
pop
and
and
ss
inc
push
stos
jl
rclb
les
jbe
popf
xor
int
xchg
inc
fldl
fsts
and
inc
adc
out
and
cmp
push
int3
sbb
sti
hlt
jno
call
loopne
insl
inc
popf
ljmp
mov
loopne
movb
mov
push
inc
arpl
mov
mov
clc
loope
add
dec
loope
adc
adc
xchg
jbe
dec
pushf
or
dec
aaa
rorb
lds
cwtl
mov
rcrl
test
das
dec
xchg
pop
lcall
adc
inc
dec
pusha
add
push
add
adc
inc
gs
fcmovnu
fwait
scas
out
int3
std
lret
pop
mov
mov
dec
fwait
and
adc
mov
jo
mov
pop
jne
rclb
mov
mov
cmp
pop
cmp
ror
lret
jnp
push
mov
jnp
subl
rclb
hlt
pop
dec
sub
les
lods
or
scas
into
pop
insb
gs
mov
push
test
mov
add
les
push
rcrb
repz
push
test
cmp
or
leave
dec
jecxz
lret
push
add
fbld
push
mov
je
shll
cmp
mov
hlt
mov
sbb
dec
hlt
and
daa
fnstenv
fstps
movl
xchg
sub
inc
ret
jnp
orl
popa
cli
xor
inc
cli
popf
mov
clc
adc
jns
ja
xchg
cmp
pop
push
jg
addr16
fidivl
jno
xchg
inc
push
pop
dec
lea
stos
dec
daa
call
cwtl
add
push
jne
cld
jle
xchg
xor
mov
jnp
popf
dec
push
movsb
out
dec
fistl
pop
sbb
xchg
ss
and
dec
sub
and
adc
sti
push
push
xchg
out
xchg
add
iret
mov
fsubp
mov
inc
fdivs
and
add
mov
test
lods
pop
inc
mov
xor
add
test
jbe
test
dec
xchg
and
add
mov
clc
cmp
jnp
cmpsl
fsub
mov
ljmp
je
or
cmpsb
or
sti
clc
xchg
push
sub
pop
rolb
mov
pushf
jo
fisubrs
nop
insb
andb
movsb
sub
cmpsb
mov
loopne
fbstp
jle
test
dec
bound
xchg
enter
dec
add
push
mov
pop
cltd
cmp
mov
aas
inc
pop
adc
or
imul
in
pop
jp
test
aad
adc
cmp
mov
sbb
xchg
test
sahf
dec
jle
mov
push
faddl
cmp
adc
fcomps
cmp
ja
pop
bound
dec
xlat
je
pop
pop
addr16
hlt
insb
fwait
stos
fldcw
inc
addl
xchg
scas
femms
add
es
das
jmp
xor
xchg
imul
rclb
push
jp
mov
pop
add
test
movsb
jle
jmp
ljmp
clc
outsl
out
pop
adc
mov
arpl
in
inc
mov
lods
mov
mov
lret
aad
push
adc
inc
sub
or
stos
insl
mov
adc
add
push
pop
pop
sahf
push
bound
and
loopne
lds
fists
pushf
mov
push
xchg
enter
test
push
sub
push
jg
add
mov
sbb
jmp
aam
dec
ret
aas
inc
jmp
stos
lret
dec
xor
mov
xchg
fwait
jecxz
ljmp
mov
pop
dec
mov
sahf
outsl
jl
pop
loop
xor
orb
leave
pop
cli
cltd
lods
push
stos
in
pop
mov
add
dec
jno
mov
jae
lock
xor
mov
pop
push
and
scas
cld
shlb
addr16
adc
pop
inc
ret
or
clc
lahf
flds
and
pushf
inc
inc
push
add
or
mov
cli
loop
add
sbb
aad
pop
sub
jp
adc
pusha
cmp
xchg
jo
mov
add
sbb
dec
xchg
mov
in
hlt
xor
jo
or
sub
jmp
mov
cmp
rcrb
arpl
push
inc
dec
hlt
and
leave
je
push
mov
fnsave
inc
pop
push
push
adc
stos
mov
dec
pop
ljmp
stc
sbbb
push
adc
lds
mov
adc
stc
and
loop
js
push
popa
add
sbb
fdivs
jbe
sub
jno
rcll
or
aam
inc
lret
stos
jge
or
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
daa
adc
pop
ret
adc
jo
mov
jnp
daa
xlat
sub
xchg
mov
hlt
pop
clc
jne
sub
sti
and
scas
dec
xor
sub
sbb
lock
nop
add
mov
pushf
nop
and
or
jecxz
rcll
dec
mov
cmpsl
in
dec
and
push
movsl
adc
in
and
or
fistps
mov
fwait
arpl
mov
lahf
sub
jecxz
fadd
aaa
and
lea
out
mov
and
sub
push
icebp
sub
adc
mov
adc
jecxz
xchg
loopne
lods
mov
push
xchg
adc
mov
xchg
dec
jae
xchg
mov
out
mov
dec
ficompl
out
dec
das
ljmp
sub
xlat
pop
nop
andl
mov
pop
jb
pop
andb
hlt
out
repnz
jo
jmp
insb
lds
sbb
mov
mov
jle
xor
sub
inc
cmp
add
scas
es
xchg
in
mov
and
popf
adc
sub
mov
adc
ret
jl
sti
sbb
add
aam
fldt
push
or
inc
xchg
cwtl
pop
sub
mov
jp
das
cld
fists
leave
mov
fs
cmc
in
inc
sarl
test
int3
fstps
pushf
adc
pmuludq
dec
lods
push
xchg
aad
in
xchg
xchg
mov
push
push
mov
pop
sti
jecxz
mov
shlb
sbb
jne
dec
stos
or
jae
mov
ret
xchg
mov
sub
push
xlat
mov
mov
xchg
sti
ret
mov
movsb
or
inc
stos
lods
and
js
xor
pusha
cmc
mov
and
cltd
jmp
aam
and
and
int3
pop
lea
push
cwtl
daa
test
pop
vmovups
icebp
push
lret
pop
enter
test
sbb
push
out
push
test
jl
clc
ret
adc
jo
pop
nop
flds
ljmp
push
jae
insb
fucom
or
repz
icebp
mov
mov
mov
scas
inc
addr16
mov
push
gs
insb
mov
mov
dec
cmpsb
mov
xchg
and
jge
mov
enter
leave
lods
fists
adc
lret
push
sub
xor
inc
sti
test
mov
xchg
xchg
and
or
loop
fwait
daa
ret
dec
sub
and
jle
nop
roll
push
ds
mov
lcall
xor
shrb
arpl
dec
or
fs
scas
push
push
dec
call
xchg
inc
stos
cmpb
dec
div
cmp
mov
shl
inc
dec
loope
shlb
pop
xlat
adcb
jle
adc
add
cmp
enter
mov
xlat
sahf
push
inc
inc
cld
out
jmp
data16
mov
lods
add
pusha
mov
inc
adc
sar
lods
sub
xor
es
lods
cmc
aaa
cwtl
rorl
ja
fnsave
iret
in
movsb
and
stos
pop
mov
add
xchg
out
in
xlat
lock
xchg
out
cld
mov
sbbb
arpl
insl
cmp
or
inc
nop
or
mov
xchg
mov
mov
cmpsb
in
call
mov
scas
ss
shll
inc
outsb
jns
adc
outsl
push
add
je
push
mov
andb
jmp
push
dec
int
xchg
mov
xlat
addr16
xlat
setge
push
inc
inc
fs
dec
icebp
int
les
call
in
test
or
pop
stos
lock
cwtl
in
mov
addr16
loop
jmp
mov
pop
push
hlt
test
loopne
mov
movsb
push
jne
add
clc
jmp
add
scas
xor
out
cmpsl
inc
sbb
rol
daa
cs
mov
sbb
jne
jne
push
cwtl
add
mov
cmp
jns
rolb
xchg
pusha
pop
enter
mov
hlt
inc
fsubl
lret
mov
je
add
stos
cmpsb
out
ja
cld
mull
test
pushf
cmpsl
ljmp
outsb
add
fcompl
xchg
push
push
adc
mov
mov
xor
or
xor
fistpll
add
xchg
ss
mov
call
and
sub
or
xchg
or
repnz
inc
mov
testb
inc
xor
jge
or
mov
jp
icebp
pop
dec
jo
rolb
inc
xor
push
out
test
std
mov
iret
and
sbb
test
call
outsb
clc
add
insl
jae
sub
add
sahf
addr16
push
pop
dec
dec
inc
xor
push
inc
push
push
movsb
cmc
mov
int3
jge
mov
stos
cmp
sbbl
inc
out
hlt
push
xor
pop
mov
push
fs
inc
lock
cmp
jge
aaa
jge
into
mov
loope
sub
dec
and
push
clc
neg
out
cmc
xchg
sbb
add
jne
mov
lahf
sub
lcall
sbb
adc
mov
or
push
icebp
push
test
and
faddl
lock
mov
jno
cmpsl
scas
pop
nop
sbb
mov
int
dec
xchg
cmp
xchg
push
gs
call
mov
xor
cmpsl
les
lret
and
cli
lret
clc
xor
cmp
call
sub
iret
sub
push
cmpl
inc
es
mov
lods
fcomp
cltd
pop
jo
xchg
in
ljmp
fiaddl
pop
add
push
mov
fs
cltd
jne
pushf
jae
out
sarl
sbb
and
xchg
mov
dec
mov
popa
dec
js
icebp
test
sub
fcompl
cmpsl
mov
sub
addr16
lahf
sbb
stos
rcll
cwtl
daa
enter
sar
mov
pop
mov
xor
loope
ja
adc
inc
inc
fdiv
das
xor
sti
jnp
push
aas
movsb
shlb
inc
dec
lods
add
mov
fldcw
or
filds
popa
call
or
add
aaa
or
call
sub
scas
push
pop
test
mov
stos
mov
pop
out
mov
mov
or
jb
lea
ljmp
cmpl
sbb
cmp
sar
push
arpl
mov
rolb
push
dec
sub
fsubrl
fdivrs
pop
jo
stc
into
lcall
jecxz
and
std
jnp
jno
lret
mov
clc
and
and
repnz
or
out
fimuls
xor
decb
pushf
mov
inc
inc
jbe
inc
sub
mov
mov
call
and
mov
push
jge
sub
mov
arpl
mov
inc
adc
jno
dec
fwait
mov
pusha
pop
icebp
cmc
xlat
insl
imul
mov
adc
mov
sarl
into
pop
cli
push
sub
adc
push
pushf
dec
xchg
mov
push
xor
movsb
mov
adc
sbb
xor
push
bnd
or
mov
mov
lret
mov
adc
mov
cmp
add
push
jmp
sar
jb
and
lahf
imul
fwait
pop
mov
mov
mov
rcl
cld
negb
mov
jp
clc
sti
lcall
xchg
cmp
pop
js
jecxz
aad
sub
adc
mov
aas
mov
es
nop
mov
fdivrl
add
loopne
sub
icebp
in
xlat
push
mov
add
mov
jns
aam
insl
mov
dec
mov
insl
out
loopne
adcb
xchg
mov
pop
test
jo
cmp
leave
shlb
fldenv
cmp
push
push
lea
inc
sub
iret
push
out
push
add
dec
pusha
cmc
add
cmp
push
jo
push
and
into
and
jo
push
mov
or
xchg
pop
imul
pop
rcpps
push
fldenv
popf
and
dec
push
mov
or
rcll
ror
jmp
ljmp
das
dec
mov
xchg
jb
xor
popf
xchg
stos
shlb
inc
stos
push
roll
pop
add
dec
bound
mov
and
cmp
fnstcw
mov
bnd
negl
arpl
xor
daa
inc
jg
out
lret
xchg
push
out
add
shll
xchg
lods
enter
shl
mov
fsubl
mov
adc
mov
bound
push
into
daa
rcl
andl
xchg
xchg
cmpb
fnsave
and
fbstp
add
mov
mov
lret
sbb
xor
cmp
add
sbb
lcall
cwtl
hlt
movsl
pop
xchg
xchg
cwtl
xor
sbb
into
and
cmpsl
scas
jnp
lds
sbb
ret
daa
jno
sub
jle
dec
or
adc
jp
test
xchg
mov
mov
popf
mov
dec
or
xchg
or
sub
mov
jb
add
cld
es
cmpsl
out
fbld
shll
gs
mov
mov
jmp
xchg
pop
cmpsl
mov
cltd
les
andl
shlb
pop
pushl
out
inc
stos
cltd
std
sbb
scas
inc
ljmp
arpl
pop
out
cmpsl
ret
xor
les
mov
mov
sub
sub
cmp
cli
sbb
pusha
dec
jbe
test
into
mov
shrb
test
mov
mov
movsb
pop
popf
mov
xchg
loop
xchg
mov
pusha
xlat
subl
pusha
ss
dec
sub
dec
pusha
leave
out
jno
pushf
in
jbe
sub
rclb
mov
dec
repnz
pop
in
clc
mov
cmpsb
jnp
fsubp
sub
cmp
xchg
sbb
inc
fbld
arpl
rcrl
lcall
cmpb
repz
pop
outsl
jbe
cmc
cmp
sarb
jb
cwtl
or
mov
push
fsts
dec
push
mov
in
leave
cmp
cmp
sub
and
cwtl
testb
mov
repnz
jl
adc
fisubrl
pop
fildll
jo
push
nop
xchg
inc
sbb
jecxz
mov
dec
aas
xorb
xor
lret
jnp
movsb
fchs
gs
divb
or
push
popa
pop
mov
xlat
in
mov
pop
sub
gs
xor
loopne
lock
mov
sub
arpl
sbb
push
cli
add
mov
adc
daa
sbb
sarl
lcall
cs
cwtl
idivl
aaa
js
fstl
cmp
mov
or
arpl
dec
pop
xor
adc
stc
cmp
mov
sub
lock
mov
or
call
sahf
fimuls
inc
xchg
add
mov
mov
in
hlt
xor
adc
adc
andb
mov
ficompl
sti
les
mov
jns
dec
addr16
sub
add
addr16
mov
out
ja
cmp
cmc
jge
sahf
jl
scas
rcr
dec
lods
sub
mov
add
pop
adc
fldt
ja
or
fdivrl
pop
jecxz
in
enter
inc
rol
jecxz
xchg
cli
cmp
aas
or
sbb
fsubrl
and
mov
jmp
xorl
pop
hlt
jl
add
flds
push
pop
pop
dec
jo
mov
xchg
push
adc
add
inc
mov
rorb
test
mov
scas
pop
popa
dec
rorb
sub
jecxz
push
lods
insb
pop
push
imul
es
fmull
out
hlt
push
sub
cmpsl
into
mov
xor
jecxz
push
sbb
cmp
fmuls
pop
add
fst
ds
pop
jo
test
stos
push
inc
jge
push
lret
lods
inc
mov
or
dec
add
push
pop
inc
inc
push
push
sbb
out
arpl
lds
hlt
xor
xchg
xchg
push
out
leave
pop
push
in
ja
mov
test
mov
mov
fnstcw
mov
fsts
gs
cli
or
mov
pop
pop
sub
xor
dec
cmp
xchg
push
mov
sbb
or
out
xchg
xchg
cwtl
cli
shll
out
hlt
cmp
cmp
aas
jne
xor
adc
xchg
jmp
mov
shll
mov
lret
fsubp
mov
hlt
data16
lea
inc
pusha
lret
xchg
dec
xor
inc
fcmovbe
subb
pop
cwtl
adc
push
sub
in
idiv
aam
cs
xor
subb
cli
out
insl
inc
addb
cmp
in
lods
arpl
pushf
xor
sub
or
aam
jecxz
out
cld
inc
add
pop
xor
pop
mov
inc
in
and
xor
adc
dec
dec
xor
fwait
inc
sbb
jl
dec
jo
std
push
or
iret
sbb
loop
fidivrs
lcall
pop
mov
and
fdivrs
imul
xchg
pop
pop
sub
sbb
mov
push
rcrl
mov
sbb
add
leave
mov
pusha
das
mov
cltd
je
add
ret
adc
mov
mov
sub
test
stc
dec
mov
dec
cmp
hlt
enter
aam
jno
cmp
add
mov
sbb
and
imul
inc
xchg
outsb
stos
sbb
shll
mov
mov
push
aaa
faddl
shll
outsb
push
test
into
xchg
jg
lds
jmp
int
add
mov
lock
jp
mov
stos
loop
icebp
sub
sbbb
mov
cmp
sar
adc
lret
jle
andl
cmp
loopne
leave
pop
mov
push
shll
jl
imul
xor
cld
xlat
push
push
stos
and
xlat
fisttps
cmp
sub
xchg
sub
xchg
mov
test
mov
test
test
je
iret
js
sub
lcall
cmpsb
jge
mov
cld
es
dec
neg
adc
stc
es
jle
imul
bound
lods
sbb
pop
add
leave
jge
xchg
add
or
movb
adc
xor
or
pop
sub
lds
push
jno
jbe
icebp
inc
add
mov
incb
cmp
mov
pop
sub
cmp
jp
stc
adc
push
push
jle
mov
ljmp
adc
sub
or
inc
std
test
add
cltd
mov
ret
decl
icebp
shrb
out
xchg
stc
add
or
adc
sub
addr16
lods
push
push
xor
ficomps
jno
popa
lahf
sub
pop
not
rcl
nop
mov
aad
add
dec
pop
push
aaa
lods
sarl
pop
ljmp
dec
lret
bnd
mov
fldenv
push
sub
cvtps2pi
sar
sbb
push
push
xchg
cmp
cmp
stc
mov
ds
ret
adcl
test
fldenv
std
mov
fwait
xchg
jp
jmp
inc
mov
dec
push
sub
divb
imul
dec
pop
sub
xor
hlt
mov
aam
push
jnp
adc
pop
decl
mov
and
cmpsb
fldt
enter
push
mov
push
cmp
cmp
lods
jb
stc
idivl
adc
fisubrl
ss
rcrl
xor
jno
dec
in
add
pop
adc
pop
lods
pop
inc
xor
adc
mov
xchg
xor
test
lock
pop
dec
std
mov
mov
outsl
xor
mov
sbb
xor
cmc
es
lcall
out
xor
jle
mov
insb
test
mov
out
int3
mov
xor
test
shr
int
iret
mov
dec
sub
push
cmp
imul
pop
adc
bound
popa
mov
shll
xchg
pop
outsb
es
push
popl
or
dec
pop
iret
cmp
cmp
xor
sahf
add
xchg
xor
dec
or
rcrb
loope
and
adc
lods
shl
pop
xlat
jnp
push
inc
jns
xor
neg
or
cmpsl
ret
add
adc
push
sahf
inc
xchg
adc
scas
or
mov
es
inc
or
push
ret
and
iret
jne
sub
pop
sub
mov
cmp
adc
inc
mov
cmp
imul
pop
fs
cltd
and
mov
mov
pop
mov
test
inc
cmpsb
rcll
and
jle
cmpsl
scas
or
leave
aas
mov
jne
and
dec
fistl
pusha
notl
pop
mov
xor
hlt
xor
inc
mov
push
dec
adc
mov
mov
mov
enter
jb
mov
mov
or
pusha
mov
dec
push
fnsave
add
mov
fidivl
je
and
imul
popa
in
jno
out
rclb
push
pushf
in
push
js
mov
pop
loop
push
movsb
cmpsl
ss
pusha
ja
and
adc
adc
cmp
iret
and
cmp
pop
pop
push
movsl
push
xchg
outsb
loope
lea
ret
inc
js
push
xor
les
and
xchg
inc
aam
pop
mov
sbb
xchg
shlb
inc
and
mov
pop
test
mov
inc
pushf
movsl
mov
adc
stos
adc
sbb
pusha
adc
sbb
call
fptan
mov
addb
mov
insb
test
in
add
add
rcll
loope
cwtl
cltd
mov
add
mov
adcl
in
mov
pop
jns
shr
xchg
xor
std
xor
jns
cs
es
and
sub
test
fdivl
dec
or
inc
lcall
or
pop
xchg
jns
add
pop
and
add
loope
cltd
push
test
aad
dec
pop
push
loopne
cmp
mov
repz
popf
test
add
push
pop
sub
inc
and
test
mov
test
adc
popf
mov
xchg
popa
stos
add
mov
jnp
les
lret
sar
xchg
test
mov
xor
mov
push
cld
push
adc
in
fdiv
inc
lds
mov
repnz
out
out
aaa
mov
inc
cwtl
fstps
mov
xor
insb
in
pop
cmpsb
cwtl
fisubrl
pop
sub
sbb
cmp
call
adc
push
inc
mov
cmp
jmp
out
cmpsb
pop
aas
lahf
cmova
dec
daa
repnz
or
out
cmp
dec
iret
add
xchg
imul
enter
mov
dec
pop
leave
sarl
sub
and
sub
fsubrl
xchg
pushw
cli
or
arpl
pop
inc
gs
add
ret
xrelease
cli
add
mov
pop
sahf
sbb
inc
xlat
lcall
push
mov
sub
jl
insl
inc
mov
xchg
or
xchg
in
out
sub
adc
cs
scas
andl
mov
jmp
xchg
adc
or
popa
incl
dec
lret
cmp
repnz
cmp
imul
or
into
imul
jns
jp
jge
sti
stc
repnz
movsl
iret
xor
push
jge
adc
std
movsb
aas
ljmp
subl
mov
loope
xor
fwait
rcll
std
sub
xor
push
add
sbb
jns
xchg
push
fldenv
test
or
in
fisubl
stos
mov
xchg
inc
mov
lahf
das
sub
and
pop
jmp
mov
inc
insb
pop
inc
mov
jbe
iret
pop
scas
pop
insl
add
fadds
inc
mov
test
and
je
mov
out
pop
pop
icebp
cmp
loopne
aam
clc
jecxz
loopne
sti
stc
fsubl
cmp
mov
sbb
add
mov
sub
ret
xlat
sbb
xchg
outsl
jp
cli
xchg
xadd
xor
mov
jbe
jmp
es
ror
stos
rolb
lds
fnstcw
ja
jge
dec
or
jg
mov
push
and
jno
push
mov
pop
rcrl
nop
js
mov
sbb
pop
push
push
loope
pop
pop
jge
inc
out
mov
std
dec
mov
pop
popf
div
cmc
or
cli
scas
es
dec
cmp
fisubs
pop
xor
lret
mov
cmp
pop
sbb
push
inc
lods
lods
xchg
sbb
dec
and
fstps
es
mov
inc
sbb
cs
jb
fsubrs
roll
cmp
push
lock
pop
adc
hlt
cmpsl
fiadds
ret
mov
scas
push
sub
cmp
repnz
aaa
dec
xor
mov
add
aas
lcall
mov
mov
add
scas
popa
xchg
daa
jmp
jae
adc
adc
mov
pop
inc
adc
cmpsb
in
out
jns
sbb
dec
call
leave
mov
pop
daa
mov
xorl
inc
xor
sbb
pop
and
lods
mov
fsubl
mov
iret
mov
call
cmpsl
or
int
iret
repz
mov
jg
add
int
popf
lahf
push
jecxz
fwait
lods
dec
sub
push
push
or
psubusw
mov
inc
idivl
jg
sbbb
popa
inc
mov
mov
cltd
fistpl
scas
bound
mov
filds
repz
and
and
ret
push
jp
std
cmp
or
incb
xchg
jne
repnz
iret
hlt
clc
and
inc
sbb
rorl
mov
inc
pop
adc
aas
out
mov
fiaddl
movsb
out
add
sub
aad
jecxz
xchg
push
gs
sub
ret
ret
ss
test
push
xchg
popf
dec
mov
push
mov
std
sbb
pop
push
jl
ljmp
dec
jle
lock
mov
pushf
popa
xlat
and
jns
lret
mov
mov
add
inc
xor
pop
xchg
adc
xchg
push
xor
cmp
out
out
out
pop
mov
cwtl
movsl
cmp
jmp
adc
add
mov
xchg
outsl
xor
repnz
cmp
pop
bound
in
lds
sbb
ret
hlt
cmp
pop
mov
fcoml
pop
ss
lcall
sbb
ja
jne
cmp
sarl
push
idiv
jmp
or
das
ljmp
rolb
inc
jg
insb
cmpb
inc
sarb
pop
jp
addr16
inc
inc
in
jp
and
and
mov
iret
daa
jp
sbb
lds
or
cmp
ds
not
push
scas
arpl
enter
mov
jne
mov
fdiv
xchg
ret
mov
sub
sbb
push
fcoml
mov
jno
jp
lcall
pop
adc
xchg
insb
hlt
imulb
std
filds
das
lds
sar
xorb
andl
inc
cs
inc
pop
jns
in
popa
jl
cmp
pop
or
pop
cmp
lock
rolb
jne
orl
dec
lret
pop
or
mov
push
mov
xchg
push
int3
lahf
rorl
loopne
mov
icebp
xchg
movsl
adc
cmc
cmpsl
lahf
push
mov
lock
pop
mov
mov
inc
stos
ds
mov
and
cmpsb
xchg
inc
jne
lock
jg
loope
xor
cmc
inc
pop
mov
mov
fnstenv
mov
xchg
inc
dec
pop
test
push
pop
dec
inc
int3
xchg
mov
push
mov
sub
mov
mov
xor
nop
stos
rolb
ret
ljmp
sarl
cwtl
clc
mov
and
outsb
cmp
xchg
or
out
outsl
out
dec
adcl
add
imul
gs
add
lock
popa
movsl
ret
js
mov
mov
jge
aaa
add
push
push
movsb
xchg
ret
mov
cs
ljmp
mov
mov
add
cmp
cld
xchg
jae
leave
shrb
hlt
test
or
stos
daa
jae
jbe
mov
popa
lods
push
shlb
dec
gs
inc
sbb
pop
ss
mov
mov
stos
test
lret
rcrl
add
outsb
int
add
jnp
imul
sbb
push
movsl
inc
inc
add
adc
sbb
shr
stos
pop
lahf
clc
into
push
and
fsubrs
insb
sub
sbb
mov
xchg
adc
fadd
ss
popa
mov
ljmp
jl
inc
cmp
stos
daa
loopne
adc
daa
pop
gs
mov
int
hlt
jmp
cmpl
idivb
das
push
fcompl
mov
cmp
jl
in
leave
push
lods
mov
jnp
rcr
and
adc
pop
adc
add
movsb
push
xchg
pop
popa
sbb
aaa
or
sbb
int3
mov
xchg
cmpsb
adc
or
mov
cmpb
sti
out
cmc
cmp
cmp
dec
xchg
mov
pop
pop
insl
xor
xor
inc
mov
or
cmp
dec
scas
shlb
add
cltd
cld
js
mov
aad
push
push
bound
jecxz
lock
rorl
cmp
jnp
jnp
xor
mov
lahf
enter
mov
div
mov
das
inc
and
push
push
loopne
adc
icebp
rorl
mov
hlt
mov
inc
cmc
and
xor
pop
mov
jg
sbb
loope
sbbb
xlat
testl
xchg
stos
push
and
pop
aad
push
in
ja
add
orb
in
and
imul
jle
mov
repnz
jp
dec
enter
scas
adc
mov
mov
cmp
mov
xor
cmp
fistpll
cmp
xchg
out
cmp
and
jo
or
and
lcall
pop
xchg
cmpsl
push
test
lret
rorl
bound
mov
fcomps
sbb
jmp
mov
jmp
pop
push
or
lds
scas
idivl
test
sub
mov
ljmp
lods
and
mov
insb
into
lods
inc
pop
lds
or
test
and
rclb
stc
xchg
push
pushf
mov
xorl
xlat
xchg
sti
cmp
nop
adcl
push
mov
mov
lds
mov
cmp
pop
or
js
xor
test
sti
jo
inc
fdivrl
cltd
fcmovb
ret
push
test
pop
add
test
xor
push
xor
mov
loope
rcrl
mov
data16
xchg
out
mov
xchg
push
xor
leave
enter
loop
cli
aad
popf
add
adc
aaa
repz
pop
sub
pop
dec
inc
loopne
push
jo
jge
or
hlt
inc
add
jl
jl
fldl
fscale
and
dec
sbb
or
leave
add
sub
push
nop
and
sub
adc
sub
pusha
and
cmp
push
test
adc
add
jle
fwait
jmp
insb
inc
pop
xor
xor
pusha
outsb
gs
data16
popl
pop
push
idivl
push
into
pop
fcmovu
int3
iret
sti
and
aam
lret
cli
push
xchg
inc
mov
subb
aad
pop
jno
ljmp
adc
xor
jecxz
aam
nop
cmc
imul
mov
gs
jns
mov
inc
pushf
xor
adc
xor
mov
in
sarl
jns
es
outsl
push
out
bound
push
orb
js
mov
jp
cli
arpl
test
fldl
push
outsl
adc
pop
cli
push
xor
pop
scas
or
mov
addl
mov
nop
mov
inc
aaa
imul
rcll
inc
sub
push
imul
jle
fisttps
push
bound
inc
inc
loopne
lods
jmp
xchg
fs
call
mov
inc
xchg
imul
inc
pop
xor
cltd
sbb
cmp
inc
mov
fisttpll
push
lds
add
imul
pusha
in
andb
xchg
lea
xlat
mov
cli
dec
iret
test
repz
dec
and
fbld
add
sqrtps
mov
mov
push
pop
xlat
mov
rclb
repnz
and
inc
xor
imul
addr16
fildl
fxch
ja
push
or
mov
dec
dec
popa
sub
xor
test
mov
scas
jecxz
xor
jg
cmc
sub
or
movsb
push
jne
sub
mov
lret
lret
pusha
adc
dec
sub
repz
test
dec
jbe
shlb
sbb
mov
mov
repnz
outsl
jp
cmp
jbe
js
inc
sbb
adc
nop
cmpsl
pop
push
mov
xchg
addr16
pop
lea
repnz
sbb
pop
mov
repz
nop
mov
xor
cli
bound
mov
cld
test
jl
mov
nop
test
fsub
test
pop
jge
jbe
or
mov
cmc
sarb
cmpsl
inc
cmp
in
sti
add
jecxz
daa
sub
addr16
add
mov
sarl
rcrl
pop
cmpsb
add
dec
repz
dec
loopne
xchg
cld
jb
punpckhwd
and
push
mov
test
jno
ja
push
mov
fisttpl
push
push
xchg
mov
sub
shl
hlt
jecxz
push
xchg
test
nop
iret
shll
mov
je
leave
jb
sbbl
lret
jne
mov
or
in
sahf
xor
call
pop
sub
fcompp
mov
fbld
imul
je
mov
add
mov
mov
push
loop
cld
fs
dec
mov
incl
popa
and
cs
sub
cmp
outsl
cmpsb
fisttpll
repz
daa
cmp
outsl
test
sub
frstor
xchg
push
pop
in
push
add
jp
movsl
pop
lock
int3
mov
push
inc
ds
mov
shrb
ffree
xchg
xchg
sarl
cltd
test
pop
lret
xor
das
jp
xchg
into
xlat
cwtl
mov
pop
push
rcl
sub
cmp
and
movsb
mov
out
and
loope
add
sahf
into
adc
push
movsb
mov
shrl
pushf
xchg
jge
stos
inc
push
push
and
cli
cltd
mov
popf
mov
outsb
mov
rolb
in
dec
ficompl
test
test
aas
mov
inc
fstl
dec
in
xchg
iret
cli
sbb
bound
jge
scas
lret
add
jae
dec
mov
rolb
ljmp
or
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
mov
inc
shr
jl
pop
pop
jl
cmp
ds
inc
enter
mov
inc
cs
daa
pause
andl
lahf
call
mov
lcall
imulb
js
mov
fnsave
sbb
mov
xor
cmp
lds
mov
loop
test
out
sbb
sti
xor
cltd
fs
xchg
out
pop
and
movsl
or
xchg
fdivrs
pop
aam
jl
dec
xlat
xchg
adc
mov
inc
adcb
adc
fdivp
mov
adc
shrb
ret
mov
rclb
xor
jne
imul
jecxz
xchg
scas
add
cmc
push
jb
scas
sti
ret
aaa
test
decb
out
clc
jo
mov
mov
adc
pop
sbb
shlb
js
mov
xchg
push
mov
jge
add
sar
lcall
sahf
push
outsb
loop
test
xchg
pop
fildl
mov
dec
jecxz
xchg
gs
add
or
sbb
cli
imul
xor
lcall
inc
push
insb
test
cmp
or
fcoml
shrb
mov
in
lock
pop
dec
add
mov
and
fdivrs
test
inc
inc
and
sahf
dec
pop
and
push
pop
jle
add
and
movsl
jb
push
xor
mov
jmp
sub
call
xlat
jge
cmc
int3
fwait
dec
sar
mov
add
mov
xor
test
in
mov
push
outsb
adc
pop
daa
push
call
xchg
jo
jle
imul
sahf
push
push
cmp
dec
mov
stc
cltd
lods
imul
xlat
cmp
mov
adc
dec
test
fwait
stos
nop
push
adc
in
adc
xor
lock
fsub
fdivrl
mov
cmp
adc
test
and
or
inc
cltd
mov
mov
imul
test
add
sub
cmp
cmp
xor
dec
popa
stc
jns
enter
inc
xorl
pop
adc
fwait
cmpb
loopne
adc
jmp
hlt
cmpsl
pop
ds
bound
inc
push
aad
adc
loopne
xchg
mov
ljmp
dec
jne
xchg
ja
popl
pop
dec
inc
adc
mov
out
js
mov
fildll
xchg
outsb
xchg
adc
lahf
mov
xchg
mov
arpl
into
add
shl
in
imul
push
jbe
sub
icebp
and
cmp
add
cltd
jl
pusha
test
or
and
sti
xor
out
nop
icebp
adc
in
add
dec
das
lock
fistps
push
cld
push
out
negl
push
push
dec
xor
dec
cltd
in
xor
jno
aaa
in
and
rol
push
mov
fidivs
jns
push
jmp
and
sbb
pop
sub
cmp
adc
dec
push
inc
lahf
shlb
cmpsb
xor
cli
add
loope
enter
mov
test
jmp
fwait
push
adc
aam
jp
js
pop
daa
mov
and
cmp
outsl
ret
shlb
jno
or
shrl
pop
rcrb
or
mov
jno
imul
sbb
or
push
nop
xchg
push
ja
push
ja
das
and
xchg
lods
test
adc
sub
scas
sub
mov
ret
test
icebp
inc
psllq
mov
clc
push
test
mov
jle
sbb
fadds
push
addl
jae
push
rolb
neg
cli
xchg
dec
int3
lock
lret
sub
push
mov
inc
mov
or
stc
lock
inc
cmpsb
dec
jmp
inc
jl
mov
mov
loopne
outsb
insb
add
pop
xchg
push
mov
pop
mov
xor
in
in
ja
jg
dec
adc
or
jb
push
xchg
adc
push
mov
pop
loopne
daa
movsl
pushf
add
es
push
aam
sbb
add
cs
ret
sbb
imul
cld
dec
inc
into
mov
mov
xchg
clc
push
adc
insb
int3
mov
test
or
and
cld
sub
xchg
outsl
dec
cltd
insl
dec
push
sub
jecxz
add
inc
add
out
mov
inc
pop
inc
jle
jp
orb
nop
jmp
addr16
rcr
loope
lods
jae
pop
and
push
jne
add
je
mov
add
push
inc
ja
mov
dec
sbb
mov
aad
jmp
xchg
cmpsl
arpl
subl
ss
aaa
mov
jmp
in
xchg
lds
pushf
push
aad
aas
hlt
loop
loope
pop
dec
xor
fimull
std
aam
fcompl
mov
and
mov
add
xor
sub
mov
shll
jnp
sub
shll
push
push
notl
std
hlt
push
int3
aaa
fmul
pop
push
xor
sahf
inc
inc
mov
mov
cli
into
sti
mov
xor
pop
xchg
cmp
fs
addr16
lretw
mov
movsb
xor
sbb
fbstp
das
repz
aad
lods
jae
sub
sbb
rol
xchg
fadd
add
mov
push
test
repz
aad
jno
push
je
xchg
push
push
or
add
arpl
jbe
sbb
aaa
push
jb
cmp
stos
or
xchg
inc
and
or
push
inc
mov
push
xchg
nop
or
pop
stos
pop
and
dec
clc
loop
xor
popa
scas
cmpsb
sub
or
lcall
jg
cmc
or
cli
lret
sbb
push
cmp
loop
scas
mov
lret
push
cmp
nop
sub
jle
aas
push
test
in
lods
xchg
push
mov
sub
and
sarb
mov
cs
and
mov
or
add
or
add
lea
push
fisubrs
cmpsb
rorb
mov
jbe
fs
ja
fs
sbb
jmp
mov
cld
add
sarb
imull
int
xor
xor
push
outsl
sti
ret
jns
imul
xor
mov
jmp
sub
dec
stos
and
xacquire
rdmsr
or
inc
jnp
add
scas
mov
inc
jne
jp
mov
push
mov
jbe
add
call
scas
jnp
and
fcoml
jecxz
or
subb
cmpsb
mov
push
jne
mov
inc
sbb
repnz
adc
and
jmp
mov
lahf
out
sub
cmp
push
jns
dec
xchg
dec
jmp
cmc
xor
jmp
xchg
inc
rcl
cmp
fbstp
lock
test
or
outsb
inc
aad
xchg
mov
sbb
push
jp
test
sbb
mov
fbld
out
das
cmp
repnz
xor
adc
lret
in
push
cmpsl
out
leave
stc
push
iret
icebp
or
sub
leave
addb
test
jbe
xchg
or
mov
push
in
add
xchg
insb
sub
mov
pop
mov
dec
hlt
lret
jb
add
add
test
sar
add
cmp
pop
mov
xchg
mov
imul
out
ret
pop
shlb
sub
sti
or
xchg
xchg
ljmp
hlt
scas
xchg
lods
push
ret
pop
insb
lods
lock
push
dec
inc
popa
or
xor
push
inc
lcall
lock
loope
out
sub
jg
inc
sbb
jmp
test
daa
or
sub
je
mov
push
lds
imul
or
xor
not
hlt
xor
sbb
push
rclb
mov
test
ds
xchg
xchg
shlb
mov
stos
jle
dec
adc
xor
stos
loop
xchg
aaa
pop
les
push
scas
xor
pop
add
call
push
sbb
lds
pop
ret
mov
leave
scas
mov
push
pop
pop
lret
dec
jb
sahf
rcll
in
sub
xchg
inc
dec
fistl
xchg
mov
xchg
sahf
lret
mov
outsl
std
pop
adc
mov
cmpsl
call
insb
repnz
ds
push
sbb
fisubrs
fldt
inc
jp
add
aam
inc
in
pop
add
sarl
and
daa
dec
mov
cwtl
xor
into
xor
jbe
or
ret
sbb
xchg
cltd
mov
dec
ss
inc
jbe
bound
xchg
dec
xchg
mov
nop
shlb
aaa
sbb
mov
cmc
pop
xchg
mov
lds
cmp
push
shlb
or
pop
adc
jle
in
popa
mov
pop
add
gs
shll
sub
inc
ret
mov
lret
mulb
jnp
xor
test
jg
xor
mov
sub
jl
mov
jge
lcall
sbb
push
rcr
fcmovbe
cmc
in
aam
jns
ret
ret
mov
jmp
xchg
add
jp
jecxz
mov
adc
pusha
mov
lods
ret
in
les
sbb
int3
out
mov
mov
mov
sbbb
or
ret
inc
notl
sbb
in
sbb
dec
push
out
cld
sbb
mov
inc
popf
dec
cltd
jecxz
or
int3
mulb
push
daa
xor
inc
or
data16
or
rol
sub
or
mov
pop
les
rcr
inc
sub
stos
lcall
imul
movsb
mov
aas
jl
cmp
add
inc
mov
jb
mov
or
data16
sub
xchg
rdpmc
mov
fstpt
and
and
push
cmc
jmp
fiaddl
add
sub
xor
and
or
mov
ljmp
mov
push
in
pop
xchg
adcb
shrl
jbe
add
fcom
idivb
cmp
mov
push
leave
ret
outsb
sahf
dec
enter
mov
cli
imul
popa
bound
aas
lock
ficoms
je
pop
insb
rorl
mov
pop
dec
sub
mov
jge
cmpsb
jns
aas
mov
xor
iret
popf
xor
pusha
outsb
sub
jbe
cwtl
push
cmc
jo
add
cs
faddl
cli
xor
mov
sub
pop
iret
push
pop
and
imul
std
xchg
push
scas
fistpll
and
cmp
mov
mov
call
rcrb
shlb
pop
ret
lock
mov
aas
jmp
or
insb
out
addr16
inc
pushf
push
xchg
mov
push
ds
rcrb
push
adc
lods
and
mov
test
loopne
in
push
cmp
adc
sahf
faddl
add
xchg
outsb
lock
in
jbe
sarl
xchg
in
mov
pop
cmp
jmp
gs
mov
enter
in
out
add
and
imul
cmp
out
call
sub
add
cmpsl
push
mov
lea
push
test
cwtl
aam
jae
sbb
les
dec
or
repz
lods
test
adc
dec
rclb
sub
dec
fdivrl
nop
or
sub
pop
movsb
aad
and
cmovp
imul
push
jecxz
cwtl
fwait
or
es
lds
or
and
sub
cmp
popa
inc
add
add
or
cmp
pusha
cld
xchg
jb
xchg
dec
orl
jp
xorb
jb
addr16
dec
das
inc
sub
pushf
add
adc
test
inc
and
idivl
lods
jl
pop
inc
arpl
faddl
shll
add
out
rcl
dec
mov
addr16
repnz
cld
mov
test
jp
stos
rorb
adc
adc
xlat
adc
add
adc
in
add
inc
adc
jl
sahf
repnz
push
xor
jb
pop
xor
cmp
or
repnz
cmp
dec
adc
jae,pn
push
push
mov
ficomps
cmp
jmp
cmpsl
xor
xor
imul
and
add
imul
test
insl
mov
cmp
add
sbb
lock
jmp
das
hlt
sub
pusha
and
dec
clc
mov
sub
enter
push
rcl
int3
push
aas
je
les
inc
sub
test
mov
xor
aaa
dec
mov
jne
dec
push
inc
dec
aam
cmp
into
lea
or
sub
jmp
add
adcl
push
mov
adc
andl
push
jmp
in
cmp
mov
out
popa
js
ss
push
test
hlt
xor
hlt
test
adc
adc
cmp
imul
cmc
inc
clc
test
mov
movsb
aas
cmpsl
xrelease
mov
mov
notl
gs
lea
ss
push
mov
lock
lret
mov
inc
inc
roll
and
inc
mov
shlb
jl
mov
adc
cmpsl
xor
xlat
loope
add
xchg
je
push
out
cli
dec
rol
inc
fistpll
sbb
mov
push
std
lock
dec
mov
push
imull
bound
adc
push
add
lods
fcmove
inc
jns
fstpl
and
insb
mov
idiv
push
push
fucom
or
jae
ror
xor
mov
add
iret
pushf
ret
xor
mov
mov
shl
movsl
cmpsl
inc
jnp
push
aam
cmpsb
push
scas
out
ja
lea
xchg
sbb
dec
or
fwait
xchg
mov
dec
cltd
mov
int3
inc
clc
mov
addl
lock
mov
cmp
mov
mov
pop
test
inc
inc
js
adc
mov
push
mov
negb
push
js
adc
adc
std
mov
dec
js
or
push
mov
addr16
and
cli
lret
popf
dec
cmpsb
xchg
jbe
mov
pop
jl
fwait
inc
rcrl
std
lea
xor
lods
movsl
adc
testb
mov
cmc
fcoml
adc
xchg
orb
add
cmp
shlb
pop
lahf
mov
lcall
movsb
mov
push
out
sbb
inc
sbbl
lods
xchg
mov
lcall
ds
mov
mov
ret
aad
adc
popf
arpl
repnz
stos
xor
je
outsl
inc
aaa
clc
mov
lods
add
jmp
mov
cmp
jns
and
in
mov
fwait
dec
mov
dec
sti
lahf
sarb
xchg
jp
dec
inc
loope
or
push
mov
mov
fbld
fidivrs
lahf
cmpb
push
xchg
in
mov
stos
push
loope
je
inc
mov
inc
mov
and
cwtl
cmp
mov
push
inc
decl
mov
mov
and
add
mov
rorl
mov
pop
cmpsl
jbe
jb
aam
pop
sbb
jle
push
fcoml
adc
mov
into
push
adc
out
or
ja
call
out
pop
out
adc
aas
lds
mov
mov
insl
sahf
rcr
mov
testb
mov
and
and
stos
dec
xchg
lds
inc
adc
shl
pop
mov
cmp
mov
clc
loop
adc
outsb
ss
sbb
daa
imul
call
xchg
repz
pop
lods
stos
or
pusha
xor
daa
in
xchg
cld
insb
jmp
sub
aaa
mov
dec
adc
movsl
fadds
hlt
inc
movsl
movl
xchg
popa
jae
stc
add
in
test
rol
aam
idivl
mov
js
fcmovb
outsb
dec
icebp
notb
jg
xor
lods
or
inc
or
cmp
mov
dec
sbb
cmpsl
pop
push
and
lahf
fcoms
sbb
dec
and
cmp
inc
in
jne
push
push
ficoms
stos
popf
push
or
adc
inc
fisubs
out
xor
add
movsl
inc
imul
clc
clc
inc
dec
cmp
insl
and
negl
adc
xchg
add
jg
rclb
stc
insb
pop
sub
lea
out
xchg
add
cmc
xor
js
popa
ljmp
cmpl
js
lods
jmp
push
xchg
icebp
inc
lods
js
mov
psubw
loopne
loopne
loopne
subl
sbb
scas
lds
push
xchg
xor
rcll
dec
rclb
cmpsl
addr16
in
push
and
mov
dec
cmp
insb
rcrb
sti
inc
pop
xlat
mov
pop
push
cmp
inc
mov
cld
arpl
jns
add
shll
lods
bound
lods
sub
jecxz
lds
pop
mov
lcall
cli
bound
xchg
inc
xchg
sbb
loop
mov
cld
fisubrs
lcall
mov
fwait
xor
aaa
sub
jmp
mov
repz
sbb
jns
jp
in
mov
mov
ss
lods
rorb
lahf
imul
mov
inc
inc
xor
cmp
and
out
in
js
mov
push
inc
insb
repz
push
ret
repz
ret
sub
push
sub
sub
adc
loopne
stos
iret
cmc
int
data16
ss
push
gs
sbb
mov
push
test
and
xor
lods
xchg
pop
inc
push
hlt
js
mov
clc
xchg
repnz
mov
int3
and
xor
push
cmp
mov
and
ds
dec
and
add
pop
nop
in
mov
sub
xchg
sub
push
cltd
imul
in
outsb
sbb
test
and
out
fbstp
les
out
insb
bound
xchg
push
aaa
xor
vmread
arpl
cli
ljmp
daa
mov
sti
in
push
shll
mov
rcr
loopne
roll
dec
push
jg
dec
das
adc
mov
cwtl
lea
in
xor
loop
sbb
cld
cmpsb
jle
loopne
test
lds
jl
je
push
jg
sbb
xchg
sbb
aaa
adc
mov
xchg
dec
pop
daa
cmc
jecxz
les
stos
imul
pop
and
xchg
jbe
pop
stc
dec
popa
aaa
subb
mov
lods
push
out
fidivs
mov
push
fwait
icebp
sub
test
push
mov
andb
jb
jbe
cli
pushf
or
xchg
mov
push
cmp
mov
xchg
sahf
mov
push
out
loop
pushf
fistps
push
mov
outsb
pop
movsl
and
insb
dec
xor
gs
jg
shr
push
mov
pop
cmp
jno
inc
sbb
pop
daa
push
pusha
add
or
sub
pushf
pop
andb
push
fstpt
push
xlat
mov
dec
mov
push
push
addr16
inc
cmpsb
sbb
nop
xchg
les
inc
outsb
cwtl
xor
lods
dec
push
call
mov
and
aam
jge
jne
lods
sbb
leave
test
lds
push
lods
mov
jnp
add
adc
fildll
pop
in
in
out
stos
out
mov
and
mov
fidivrs
push
movsl
jmp
fldenv
aam
dec
dec
push
movsb
jnp
jb
dec
add
fdivrs
sbb
imul
sahf
xchg
movsl
dec
pop
leave
sub
push
push
pop
hlt
and
or
sbb
add
add
mov
jo
in
jl
mov
cld
jle
aam
push
cmpsl
sbb
loopne
stos
popa
bound
inc
push
ja
js
mov
das
mov
in
in
adc
or
adc
push
adc
scas
sbb
fldcw
dec
push
test
push
mov
outsl
xchg
push
jbe
xchg
jo
adc
push
xchg
iret
jl
adc
aad
movb
adc
jl
enter
add
cmp
or
mov
pop
push
dec
sub
dec
fwait
sbb
test
fstl
sub
lret
fs
pop
cmp
gs
out
loop
xlat
cltd
xchg
hlt
cwtl
xor
arpl
into
ret
aad
repz
out
sub
ljmp
push
jge
fistl
push
inc
xchg
out
cltd
pop
clc
daa
cwtl
push
scas
xchg
lcall
sub
mov
fisubs
push
call
ret
push
inc
or
lock
dec
pop
mov
mov
cmp
jb
test
pop
scas
xchg
mov
add
jbe
push
das
imul
push
or
fldcw
lds
fidivrl
xor
add
dec
loope
and
dec
aam
dec
popf
ja
pop
dec
lahf
push
leave
dec
sbb
imul
mov
cmp
cmp
xchg
dec
adc
sbb
in
outsl
jne
pop
dec
call
jge
imul
xchg
or
and
dec
inc
mov
cmp
pusha
mov
inc
mov
adc
push
and
movsl
add
xchg
ret
pop
mov
stos
aam
push
pop
outsl
add
xor
sbbl
or
fdivs
jg
inc
jo
roll
out
mov
xchg
cmp
lods
xchg
lcall
icebp
inc
lds
lret
jge
or
jns
lret
outsl
js
cs
and
jmp
icebp
addl
xor
push
enter
insb
pop
fstp
mov
fnsave
pop
jo
test
push
sub
inc
sbb
enter
outsl
movsl
lods
test
pop
clc
cmp
and
add
cmp
dec
cli
sbb
sarb
dec
pop
int3
pop
sti
add
aam
xor
sub
push
imul
pop
lods
repnz
inc
or
lods
xor
mov
mov
in
and
mov
rcll
pop
dec
mov
push
xchg
mov
push
insl
push
cmc
ret
mov
outsl
imul
or
loop
xor
push
pop
xchg
sar
mov
movsl
sub
out
sti
push
xor
sub
shl
add
cs
cmp
rcr
xor
jg
jbe
je
jb
mov
add
cmp
jne
xor
add
dec
imul
pop
pop
push
stc
mov
push
push
bound
jg
repnz
pop
push
dec
int
dec
cmp
fcomps
xchg
mov
enter
jp
push
dec
cmpsb
mov
ja
mov
mov
js
and
mov
sahf
pop
mov
push
lods
cmpsb
adc
sahf
mov
sub
pop
cmpsb
jg
inc
pop
lcall
movsb
pushf
dec
ret
inc
jnp
push
gs
ja
fimuls
sbb
sbb
int3
sub
std
lret
and
jg
jne
insb
sbb
cltd
xchg
xchg
and
imul
dec
push
cli
sub
dec
cmpsb
fisttpl
and
jmp
ret
rclb
push
inc
add
sbb
push
add
sbb
sbb
pop
mov
push
popa
push
mov
ja
mov
fwait
sbb
outsb
lods
mov
sbb
fst
mov
jg
mov
mov
sub
scas
fdivrl
mov
pop
mov
lods
jecxz
xor
push
jbe
sahf
les
or
nop
dec
mov
xchg
mov
xor
adc
push
fisubrs
mov
mov
mov
xchg
xchg
sub
sbb
data16
add
mov
mov
cmpsl
sub
rcrb
dec
aad
cld
je
insb
pop
cltd
test
or
cmp
or
lods
and
pusha
mov
inc
sbb
push
cmp
dec
push
out
xchg
jnp
pop
jb
push
in
ret
mov
dec
xor
out
xchg
ljmp
ud1
adc
subl
pop
jo
xchg
insb
dec
icebp
mov
push
sbb
iret
and
dec
jae
pusha
aaa
cld
xlat
les
and
push
push
and
jg
repz
int3
jl
movsl
in
pusha
loopne
data16
mov
lock
mov
inc
mov
inc
popa
andb
push
or
dec
dec
leave
mov
insb
ficompl
or
or
lock
add
and
es
sarb
test
shl
insl
pusha
hlt
lea
jne
cs
or
mov
cwtl
pop
and
xor
imul
imul
pop
sub
jge
adc
xor
popf
mov
inc
inc
xchg
sbb
popf
aad
push
jno
mov
test
jl
fsubrp
hlt
cltd
push
pusha
jle
loopne
in
aas
jae
lods
or
scas
push
dec
mov
arpl
mov
dec
pop
xchg
in
icebp
jg
jbe
int3
lcall
movsb
stos
movsb
and
fs
faddl
xor
cmp
mov
mov
cmp
vdivss
xchg
loopne
pop
ret
mov
mov
adcl
test
enter
adc
fnstenv
lds
shlb
and
hlt
cmp
outsl
jnp
mov
and
mov
xchg
xchg
jle
jb
pop
aad
pop
ja
cmp
loope
lcall
push
cmc
sbb
and
inc
fwait
add
mov
lds
int
pop
ljmp
cs
mov
scas
xchg
adc
out
jno
dec
push
lods
lret
das
sbb
cmp
pushf
xor
clc
shl
jmp
out
mov
sub
into
daa
sub
pop
daa
cltd
jae
cmp
lcall
in
cwtl
xor
mov
stc
pop
adc
mov
mov
bound
push
jecxz
adc
dec
sbb
movsl
insb
xorb
jo
popa
push
repnz
mov
mov
jl
imul
dec
nop
push
bound
aaa
imull
inc
aaa
xlat
lret
push
mov
jg
and
movsb
leave
adc
xchg
mov
scas
fwait
mov
gs
mov
mov
jns
mov
daa
fldt
dec
xchg
hlt
push
ror
mov
scas
adc
mov
sbb
out
test
jno
daa
xchg
inc
lcall
out
sub
sbb
or
imul
pop
jl
pop
mov
cltd
jecxz
mov
mov
pop
aaa
bnd
sub
jge
mov
jne
in
mov
fstps
add
or
leave
mov
push
and
incl
daa
dec
insb
push
seta
inc
push
jo
out
shll
sahf
movsb
out
sbb
sbb
repz
mov
push
and
dec
fs
pop
daa
xorb
call
aam
int3
pop
je
dec
xor
xor
in
jnp
inc
jl
xor
push
cmp
mov
jg
xchg
dec
push
push
cmp
int3
cmove
mov
out
push
rcll
xchg
je
lret
mov
bound
dec
outsb
sbbl
xor
push
jae
jge,pt
and
mov
and
mov
inc
or
or
mov
push
cmpsl
pushf
jecxz
mov
ja
imul
dec
pusha
mov
fucom
adc
lds
dec
sbb
pop
adc
test
jmp
add
fcmovbe
in
jae
mov
call
sub
push
in
mov
movsl
lahf
cmp
sbb
ja
shrb
fiadds
sub
or
cld
pop
out
xchg
stos
fadds
xchg
loopne
jge
add
daa
aaa
xor
push
lcall
cmp
xchg
in
arpl
dec
out
test
xchg
pop
fmuls
xchg
xor
loopne
in
daa
fldt
mov
in
sbb
lds
mov
jo
push
shl
scas
mov
stc
daa
xchg
xor
mov
mov
je
shlb
jmp
dec
pop
mov
mov
adc
lret
mov
sub
sbb
gs
cld
loopne
aas
push
add
inc
adc
mov
cmp
xchg
std
pop
xor
cltd
adc
cmp
inc
sti
rcrl
int
loopne
aaa
adc
dec
push
daa
fs
pop
xor
sar
insb
inc
and
mov
push
jg
pop
jl
call
arpl
add
int
mov
and
pop
mov
xchg
fnstsw
mov
fcmovnu
inc
je
into
movsl
and
icebp
gs
ret
loopne
xchg
popf
repnz
imul
mov
sub
cmp
inc
inc
pushf
sub
repz
je
cmpsb
test
mov
mov
adc
out
ljmp
or
movsl
inc
cmp
mov
iret
loop
mov
cmp
mov
aaa
and
inc
adc
xor
xor
addr16
xor
repz
in
test
sahf
or
jae
imul
pop
int3
adc
stc
movsb
dec
lods
xchg
aas
and
mov
add
inc
mov
ret
jecxz
xor
rclb
jbe
icebp
pop
push
mov
fnsave
test
cmpsl
xlat
cwtl
insb
xchg
mov
push
lock
cmpsb
dec
mov
xor
out
sub
fistl
arpl
xchg
es
cs
roll
adc
adc
lret
je
and
lods
std
leave
inc
sub
lock
rcll
xchg
fmulp
movsb
add
cs
addl
add
adc
push
shll
mov
les
movsl
and
int3
cmp
out
lea
and
scas
shlb
mov
xor
ret
pop
push
push
xchg
jge
and
inc
rcll
xchg
gs
sbb
fisttpll
add
and
jmp
pop
dec
sbbb
add
int3
jns
insl
mov
jp
out
cvttps2pi
clc
fwait
jnp
test
pop
jbe
mov
int3
test
test
scas
aam
jmp
cmp
cmp
in
dec
hlt
ret
in
add
pop
sbb
hlt
xchg
lods
ret
ja
push
mov
arpl
pop
or
dec
iret
mov
lock
jnp
andl
mov
xchg
sub
push
xchg
sti
push
out
pusha
into
in
cli
mov
mov
mov
inc
inc
sub
jle
adc
jg
mov
les
or
lds
and
gs
movsb
fbld
mov
ret
test
insl
dec
push
icebp
sbb
cs
fcoms
imul
or
xor
push
inc
cli
divl
and
cwtl
lcall
or
testb
lods
and
jge
bound
adc
int
pop
enter
jle,pn
in
sbb
stos
xor
divb
enter
in
clc
repnz
aam
pop
aad
pop
xchg
push
mov
sbb
mov
loopne
and
and
xor
imul
add
or
pop
out
lea
dec
adc
sbb
lea
out
fucompp
and
loop
orb
dec
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
dec
adc
and
stos
inc
cmp
popl
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
