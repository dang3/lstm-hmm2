push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
push
enter
jl
jl
pop
jl
adc
and
popa
pusha
test
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
adc
outsb
push
adc
loope
mov
add
xor
mov
push
je
cltd
mov
inc
xorb
mov
mov
leave
mov
push
mov
and
cmp
pushf
lods
xchg
cmp
xchg
sub
cmpsb
mov
inc
in
aad
jno
pop
enter
lds
movsb
dec
sbb
lcall
pop
jmp
pop
in
jnp
pop
stc
pushf
inc
in
push
mov
fmull
outsb
pop
mov
xor
mov
fsubrp
inc
jnp
loopne
and
das
stc
push
es
filds
aaa
adc
lret
imul
mov
push
mov
aaa
xchg
mov
mov
and
not
mov
push
mov
jge
test
mov
mov
nop
xchg
lds
or
cmpsl
daa
mov
sbb
push
lods
repnz
sub
mov
push
dec
stos
push
nop
out
pushf
dec
por
imul
and
les
add
cmpsb
loope
push
xchg
cmc
xor
ret
sub
loopne
adc
add
inc
inc
jnp
pop
sub
push
jbe
xorb
pop
and
clc
push
xchg
add
adc
shrl
mov
xor
sub
in
dec
push
js
push
xor
loop
xlat
sbb
pop
jae
mov
add
push
xchg
pop
in
cmp
dec
inc
lods
inc
push
test
pop
jle
or
pop
and
inc
dec
lock
fdivrs
or
jne
sub
push
cltd
rclb
hlt
add
iret
insl
inc
out
xchg
leave
adc
or
fcompl
inc
pop
aam
jp
in
push
jp
insl
and
mov
in
pop
stc
nop
sub
loope
je
and
movsl
dec
lea
out
inc
mov
aam
mov
dec
adc
jecxz
pop
ss
push
dec
daa
out
push
mov
repz
jp
lock
test
frstor
imul
jns
mov
stos
repz
in
mov
jae
std
movsl
and
inc
cmpsl
mov
scas
adc
daa
and
sub
aaa
or
jecxz
cld
stc
add
mov
cwtl
and
repnz
test
push
notl
pop
add
mov
push
daa
cmp
xor
stc
mov
cmp
cmp
sbb
pop
imul
xor
cmpsl
inc
push
cmp
sub
inc
fists
sbb
nop
lahf
jo
or
nop
or
and
fbstp
or
std
and
aad
lcall
ds
shlb
xchg
stos
out
icebp
and
xor
dec
inc
pop
and
mov
mov
pop
ret
popa
dec
leave
xor
cmp
call
sbb
inc
out
fadds
mov
bound
stos
dec
aam
mov
inc
imul
jns
xor
por
mov
xchg
iret
xorb
dec
cmp
cld
cs
jg
sub
push
pop
movsb
xlat
aad
inc
aaa
mov
lods
imul
rol
xchg
test
rclb
std
pop
fs
and
xchg
mov
mov
or
fimull
jb
push
fisubl
outsl
or
aas
add
pop
mov
lock
sbb
jne
insl
pop
xchg
notl
orb
out
cmpsb
jb
test
rcrb
lock
add
scas
insb
pop
jb
and
std
loope
loopne
repz
xchg
movsb
into
dec
sbb
fstpt
xchg
xchg
call
sbbl
xlat
mov
sbbb
xor
dec
jnp
test
or
popf
shll
iret
jmp
arpl
popf
or
nop
cld
or
jns
lds
sbb
scas
out
sub
push
std
pop
leave
into
add
rorb
rcl
xor
mov
xchg
mov
add
cmc
and
dec
cmp
sub
loope
xchg
mov
push
int3
or
add
fwait
insb
jo
jb
dec
inc
jmp
cmp
and
sbb
xlat
and
enter
out
adc
mov
xchg
push
pop
push
rolb
mov
push
pop
add
xlat
xchg
lret
lcall
clc
nop
popa
sbb
roll
insb
lret
xor
sub
shrb
fildll
je
std
pop
inc
mov
cli
mov
or
in
sar
repnz
enter
test
adc
jmp
les
and
xchg
add
adc
orl
mov
dec
add
test
inc
jecxz
out
inc
inc
sbb
fwait
ret
adc
mov
push
aaa
jns
ss
faddl
fsqrt
std
jnp
add
mov
fisttpl
repnz
mov
cmp
gs
insb
xchg
push
std
xchg
sti
pop
dec
sbb
xor
inc
pop
xlat
push
daa
or
jbe
sbb
int
shr
cmc
movsl
dec
push
ljmp
add
dec
bswap
inc
cld
ror
jns
xchg
jae
in
adcl
lret
subl
mov
add
push
xchg
push
xchg
adc
fiaddl
xchg
popf
movsl
fdivr
enter
and
out
lret
inc
sbb
adc
arpl
lods
and
push
popa
inc
xchg
mov
pop
shll
fprem
push
cmp
imul
pop
inc
lock
sarl
shrl
mov
decb
xor
sub
stc
mov
rclb
int
or
jp
sahf
andb
enter
lret
inc
and
add
sub
inc
adc
enter
jecxz
jb
popf
cmp
mov
test
mov
jp
push
icebp
push
mov
fsubl
test
fwait
std
inc
sbbl
andb
stc
in
lds
xor
xchg
in
xor
xor
push
inc
mov
jge
and
push
lock
cmp
imul
or
push
subl
mulb
mov
pushf
xchg
pop
in
xchg
lds
lahf
or
std
call
jno
cld
fisubs
imul
cwtl
adc
leave
subl
sub
inc
pop
idivl
dec
lods
mov
add
movsb
shr
cwtl
cmpsb
popf
orl
sub
cltd
bound
fnstsw
and
xchg
mov
lods
insl
vcmpfalsesd
lods
pop
outsl
cmc
mov
jb
mov
pop
int3
aam
insb
xor
js
mov
cmc
or
push
orb
push
mov
out
aad
icebp
sub
mov
cmp
inc
xchg
test
fnstsw
add
mov
adc
pop
pop
mov
fiadds
jno
incl
imul
push
mov
fnstenv
dec
pop
add
or
cmp
sbb
xchg
fnstenv
mov
cmpsb
pop
xchg
popa
ja
shl
scas
sbb
push
mov
mov
pop
icebp
xchg
jle
mov
pop
mov
xor
cmp
pop
mov
push
dec
test
clc
iret
lock
xchg
mov
jnp
testl
scas
mov
shlb
lods
jecxz
and
call
jg
sbb
jmp
loop
dec
lahf
mov
xchg
sbbl
std
test
fiaddl
sub
cld
fldenv
and
pop
jo
add
subb
pop
fwait
jmp
xor
roll
std
decb
xchg
into
or
arpl
push
pop
insb
cld
clc
testb
fadds
decl
loop
int
pop
mov
sbb
jb
push
push
push
rcr
into
repz
call
ja
add
adc
or
pop
les
dec
mov
push
jbe
lret
in
jb
sub
aad
dec
xchg
rcrl
ret
push
lahf
add
test
outsb
inc
cmpsb
popf
push
inc
sbb
sub
and
inc
add
jne
aad
add
test
xor
push
and
mov
loope
imul
filds
pop
incb
push
or
pushf
lods
out
dec
jae
inc
fistpll
sahf
pop
dec
sbb
pop
lds
stc
cld
ret
push
adc
dec
pop
push
dec
cmp
test
or
push
jb
movsl
insb
data16
out
fcmovnb
addr16
les
str
insl
jl
xchg
jnp
push
pop
shr
int
fs
call
jge
xchg
push
inc
dec
ja
lret
cltd
cmc
jnp
mov
popa
cmp
pop
sbb
jecxz
test
or
xor
add
out
fnstsw
bound
pop
lahf
jmp
aam
pop
adc
mov
cmp
out
daa
jo
inc
mov
call
enter
shr
cmp
add
push
dec
push
into
sbb
nop
pop
pop
and
mov
adc
mov
add
outsl
adc
push
pop
out
loope
mov
subl
or
and
mov
sarl
sahf
lret
sub
orl
imul
in
sbb
xchg
or
inc
dec
and
mov
clc
push
jo
xchg
add
insl
mov
or
in
dec
fsubrs
pop
dec
fdivl
sahf
push
cmpsl
lret
clc
sbb
js
xchg
and
sub
jmp
pop
inc
xchg
insb
dec
and
ljmp
jl
pop
mov
mov
jne
ret
dec
push
shll
xchg
cmp
push
in
jnp
xchg
xlat
outsb
jmp
push
sub
adc
mov
jle
xor
lock
and
push
inc
jo
pushf
dec
iret
into
jb
cmp
mov
sbb
movsl
outsl
gs
dec
add
push
mov
jbe
xchg
sbb
inc
outsb
cmpsb
fsubl
cmp
aam
sub
mov
add
ret
xor
shl
push
or
fmuls
stc
test
jmp
xchg
out
js
xchg
add
ficomps
push
and
fadds
iret
xchg
mov
adc
ret
xchg
icebp
insl
and
inc
mov
repnz
mov
or
arpl
mov
lret
roll
mov
sub
daa
jmp
lods
scas
cmpsl
cmp
mov
sub
inc
mov
pop
sbb
jbe
rcr
sbb
out
fsubrs
mov
movsl
add
sub
shlb
mov
inc
xchg
das
lret
addb
push
aaa
fbstp
sub
mov
in
jne
mov
gs
dec
sub
mov
loopne
xchg
jno
test
movsl
xchg
add
call
popa
mov
or
test
add
int
scas
xlat
mov
mov
fidivl
test
jmp
rclb
pop
imul
pop
ret
imul
fldl
gs
cmp
jno
lret
push
and
inc
ficomps
cli
sbb
scas
movsl
inc
in
lds
or
es
dec
loop
aam
les
xor
shld
insb
add
test
es
xchg
add
jnp
shlb
xor
clc
xchg
ljmp
leave
lret
mov
pop
in
xchg
pop
cmp
fucomi
loopne
push
cltd
mov
xchg
jmp
addr16
pop
jp
jg
jp
sbb
in
and
cmpsb
loopne
sahf
cmpsl
scas
mov
add
into
gs
push
in
pop
mov
jae
inc
dec
mov
mov
mov
stos
cmpsl
jnp
ss
loop
push
mov
pusha
lret
mov
jae
mov
and
jb
fidivrl
xchg
call
mov
js
adc
mov
push
pop
mov
leave
xlat
cmp
aas
repnz
ds
lret
and
pop
fdivrp
aam
cmc
push
imul
outsb
sub
pop
int3
jmp
cmp
sub
sbb
imul
or
adc
sbb
dec
and
repnz
adc
push
insb
inc
int3
xchg
in
adc
inc
mov
push
push
aas
push
cltd
scas
adc
jl
mov
jno
mov
test
and
push
test
mov
adc
out
in
cmp
mov
scas
mov
xchg
inc
inc
addr16
nop
adc
jp
cmp
mov
sbb
adc
jle
icebp
xor
pop
test
add
iret
out
fucomp
xlat
push
sbb
hlt
pop
mov
lret
adc
jl
jle
ss
dec
or
mov
pop
addr16
cmp
xchg
jmp
dec
inc
jge
popa
adc
ret
fstps
aam
sub
xor
gs
jl
add
into
cmpsb
rcrl
jle
imul
mov
movsl
aaa
push
cmpsb
mov
loopne
cmp
movsl
mov
push
xchg
stos
leave
mov
fwait
dec
test
jg
mov
imul
and
xor
add
sbb
andb
stc
enter
jmp
jno
in
inc
mov
stos
in
sub
shr
sub
xor
insb
popf
xor
sub
inc
push
scas
jmp
and
and
jbe
popa
dec
enter
lods
xchg
push
dec
xor
lods
sbb
enter
sub
jno
hlt
xchg
and
sbb
pop
mov
mull
sahf
icebp
pop
mov
push
adc
xor
or
adc
or
dec
sbb
cwtl
or
arpl
iret
mov
lea
mov
or
das
jl
fiaddl
jb
pop
mov
dec
in
push
popaw
lds
xchg
ffreep
inc
mov
xchg
cld
sbb
mov
xor
js
fstpt
mov
adc
xor
ds
pusha
xchg
inc
out
xor
cs
dec
test
mov
add
adc
mov
adc
xchg
rclb
push
das
mov
mov
addb
xchg
in
aas
test
sub
inc
sub
xchg
push
lock
sub
and
scas
loopne
cmp
cli
cmp
ret
outsl
lods
sbb
rcrb
jle
xchg
popa
and
pushf
sub
jmp
and
mov
dec
xchg
fists
test
mov
fnstcw
outsb
aad
cmpl
daa
out
jo
jo
stc
out
adc
mov
dec
loope
sbb
add
jp
push
movsb
shlb
rorl
in
aam
lds
jmp
xchg
sub
pop
push
mov
shlb
cmp
dec
rorl
pop
mov
jle
pop
cmp
loopne
test
sub
mov
cmp
pop
push
push
push
fnsave
mov
call
aad
adc
jmp
sbb
lods
bound
ret
adc
xor
mov
add
popf
lret
and
lock
loopne
xchg
in
adc
mov
iret
ja
mov
insb
pop
js
dec
or
imul
fbld
insl
mov
mov
xchg
push
jnp
push
jle
movsl
push
jp
and
push
fwait
cmpsb
inc
test
insb
add
mov
mov
jae
ret
dec
and
and
push
nop
test
jmp
and
adc
or
cmp
jns
test
imul
sub
add
sub
aam
dec
enter
lods
insb
xor
pop
add
in
out
jbe
enter
mov
push
das
int3
mov
imul
add
or
push
es
jne
pop
aad
imul
cltd
incl
test
or
sbb
lret
sub
cmc
loop
mov
nop
mov
cmp
push
push
or
jno
lcall
add
push
dec
add
inc
inc
divb
sbb
adc
and
mov
scas
lock
outsb
inc
sub
fdivr
test
stos
jne
mov
ror
scas
jge
jbe
rcrb
push
in
lock
push
dec
fwait
mov
out
mov
movsb
int3
xor
stos
sbb
not
xlat
jmp
aad
inc
pop
fwait
xchg
xchg
sbb
insl
xor
divb
cmp
cmpsb
dec
decb
add
and
jb
insb
push
pop
dec
or
push
adc
adcb
ss
push
mov
dec
loop
popl
sbb
ja
adc
xor
es
mull
push
fsubrl
or
pop
xor
fisubl
scas
pop
sbb
jae
pop
fsubrl
mov
fisubs
data16
inc
mov
dec
adc
xchg
cmp
cmp
sbb
cmpsl
mov
lea
stos
addr16
fsubrl
inc
jae
jae
add
mov
in
popf
jg
pop
outsl
jg
loop
pop
xchg
cmc
mov
fidivs
push
cmc
lea
inc
bound
aas
add
push
cmp
mov
sbb
adc
cmc
add
xchg
int3
xor
cltd
xor
fwait
pop
pop
mov
or
pusha
ds
mov
js
adc
or
dec
cmp
mov
mov
clc
stc
dec
or
faddl
cmp
dec
push
pushf
jb
roll
jo
inc
jbe
mov
cltd
sub
xchg
add
jl
xor
mov
cmpl
sub
inc
sbb
adc
arpl
sub
push
fisubs
pop
call
scas
jno
imul
andl
pop
cmp
lods
sbb
push
lcall
sub
int3
mov
lcall
popa
pop
cmpsb
mov
aas
fisubrl
sbb
sub
mov
inc
push
mov
xchg
iret
out
push
jb
loope
xor
and
push
pop
in
repnz
lock
inc
jnp
aas
push
aas
aaa
pop
push
aam
mov
cmp
decb
stos
fs
pop
pushf
insl
je
or
lock
push
jo
mov
test
add
out
enter
and
fidivs
and
dec
push
xor
and
out
sbb
jg
cmp
adc
or
addb
divl
shlb
mov
outsl
les
sub
movsb
aam
adc
mov
xchg
loopne
stos
push
push
pop
jg
leave
mov
jle
mov
dec
sub
andb
inc
sub
ja
mov
in
cs
add
lods
int3
add
adc
inc
mov
jbe
mov
jo
xchg
loop
in
mov
add
subl
mov
lret
gs
into
or
dec
add
inc
sub
test
sbb
push
pusha
int
xchg
es
push
jb
push
add
inc
jns
add
xchg
cmp
cmp
outsb
add
std
loop
adc
rorw
and
pusha
insl
scas
cwtl
pop
mov
gs
or
mov
xor
call
movsl
or
jne
pop
dec
sub
call
xchg
call
or
cmpsl
adc
adc
cmpb
stos
mov
add
sub
fidivrl
popa
aas
scas
arpl
test
inc
jp
in
push
sbb
adc
les
xor
or
and
and
cmp
adc
insl
and
push
xor
lods
repz
ret
jno
push
sar
xor
stc
loope
add
xor
fdivs
xor
popa
push
push
movl
stc
or
mov
out
adc
stos
jae
push
cmpsl
mov
andb
es
or
loopne
add
arpl
fsubs
fildll
xlat
rcl
sti
jne
je
inc
dec
jge
inc
mov
pop
jge
pushf
push
add
adc
les
jns
movsl
or
xor
imul
pop
and
mov
push
mov
daa
fsubs
jge
outsb
leave
add
les
sahf
sub
gs
and
and
loop
lret
sub
in
out
push
outsl
mov
inc
mov
sahf
insl
jecxz
rcrb
sub
cmc
push
ret
push
lret
add
jae
testl
and
push
mov
pop
in
sbb
adc
adc
lahf
mov
std
dec
lahf
cmpsl
xor
ds
cmp
fdiv
cli
mov
imul
cmpsb
out
fs
cmp
cmpsl
mov
and
mov
sub
sar
out
xchg
ss
push
mov
xchg
in
mov
popa
fimuls
mov
dec
imul
xchg
pop
loop
dec
and
dec
push
loope
pusha
mov
sti
mov
repz
lea
les
pop
mov
pop
sub
push
xor
mov
out
or
sub
stos
clc
add
dec
ljmp
lcall
push
dec
xor
loope
jmp
cwtl
cmp
es
inc
xchg
dec
pop
xor
add
jp
mov
push
mov
mov
test
jno
mov
rclb
push
xor
aaa
add
dec
ja
mov
sub
add
data16
xchg
testl
ds
xor
sub
movsb
rorb
fnstenv
pop
loope
xchg
cmp
aaa
sbb
lret
adc
dec
mov
cmpsl
aam
lods
mov
clc
push
xchg
mov
jno
lret
pop
jp
xor
shrb
push
sti
pop
out
xor
jg
cmp
ja
mov
mov
xchg
data16
sub
push
movsb
jl
fisttps
adc
ds
in
aaa
cli
mov
pop
gs
push
add
das
push
out
cmp
scas
addr16
sti
and
imul
cmp
test
mov
mov
pop
mov
lret
adc
mov
mov
cmp
mov
movsl
mov
into
in
mov
sub
adc
fmul
ss
cs
outsl
cmp
movsl
mov
or
push
xchg
sub
ljmp
or
out
mov
xor
sahf
leave
call
pop
ret
cld
xchg
cmp
nop
inc
xor
shl
imul
sub
lret
add
pop
xor
dec
jb
in
dec
stos
pop
xchg
jae
out
sbb
pushf
mov
dec
gs
mov
inc
je
lret
mov
lahf
push
push
cmpsb
cmp
xchg
fnsave
cmp
rcrl
rcll
xchg
fsincos
daa
aam
push
adcl
jns
outsl
in
push
mov
cmp
pusha
je
pop
push
sub
insb
cli
mov
outsb
stos
sbb
jecxz
movsb
test
mov
mov
and
insl
in
int
or
fwait
cwtl
es
fs
repz
and
fldt
lret
sbb
sbb
shrl
mov
jb
fcoml
pop
ljmp
movsb
sub
sbb
mov
push
cmp
cmpsb
cmp
mov
mov
shl
jge
lock
inc
outsl
dec
outsb
adc
aam
loop
mov
inc
mov
push
lods
cs
aas
jae
fwait
sub
adc
rorl
es
clc
repnz
xchg
imul
lcall
mov
or
sub
jae
sbb
mov
aad
aam
aam
es
out
sub
loop
mov
push
sarl
mov
in
sbb
or
sub
sub
push
sub
cld
shrl
xor
add
and
std
add
mov
mov
jb
daa
outsb
fxch
out
jo
das
pop
fwait
aaa
out
fldcw
mov
mov
push
lods
mov
outsb
lret
aad
add
shll
cs
sbb
fcomip
aad
icebp
movsl
xchg
adc
mov
into
insb
cmp
cmpsb
or
int
mov
iret
mov
fdivrl
es
je
jge
or
mov
mov
paddw
push
aad
xchg
inc
or
cmp
or
mov
sub
dec
mov
mov
aad
dec
mov
andb
sbb
pop
icebp
nop
or
xchg
xor
dec
fistps
lods
cltd
out
inc
inc
xor
dec
dec
jg
jmp
mov
int3
ret
jno
inc
jmp
in
pop
xor
mov
sbb
loop
pop
out
aam
ret
inc
push
test
xchg
mov
inc
repz
rolb
insl
addb
sub
adc
popa
enter
xor
inc
popa
xor
or
ret
scas
xor
and
push
pop
or
addl
cli
and
ficoms
outsb
xchg
adc
ja
nop
dec
pop
test
enter
dec
ret
mov
xchg
and
push
cmp
dec
les
pop
pop
pop
call
hlt
outsl
xor
mov
or
ds
push
push
int
ljmp
mov
loop
and
int3
sub
cld
ret
push
shll
or
cmp
or
mov
insb
pop
aas
lds
add
dec
sub
xor
stos
or
push
push
ret
xchg
jae
loopne
enter
xchg
in
pop
mov
push
cmp
adc
stc
xchg
xchg
add
test
aaa
push
mov
jnp
sahf
xchg
icebp
rorb
xchg
add
scas
neg
lods
or
fs
dec
ja
mov
mov
xor
out
add
outsl
push
mov
sub
cmpsb
jmp
add
fwait
lods
jno
movb
in
sub
jno
fmulp
bsr
addl
and
sub
pop
fstpt
notl
inc
inc
push
imul
repnz
pop
cmpb
inc
cli
fsubs
inc
pop
fwait
mov
push
in
fbstp
stos
test
jae
jno
jnp
mov
aaa
insl
inc
fcmovb
push
in
test
pop
out
cmp
cwtl
in
inc
in
cli
mov
adc
into
xor
mov
paddd
imul
pop
mov
inc
inc
aam
lret
xor
movsl
scas
mov
retw
imul
mov
xor
and
push
mov
sub
lds
shlb
fstpl
mov
jp
mov
test
lds
lret
pop
icebp
fadds
scas
outsb
xchg
and
push
add
sbb
xchg
xchg
add
cmc
pop
fildl
ds
addr16
cmpsl
scas
jge
xor
and
jae
dec
repnz
xor
test
jnp
loop
push
sbb
pop
fsubrl
or
add
mov
shlb
lcall
push
int
pushf
adc
sbb
lods
pop
sbb
xchg
bound
sbb
xor
in
into
and
cmp
dec
out
mov
fs
stc
dec
inc
xor
xor
gs
mov
icebp
fcmovnu
mov
dec
and
nop
xchg
test
sbb
ja
fwait
inc
hlt
ja
or
sub
dec
imul
sbb
inc
xor
sbb
icebp
mov
jge
ds
leave
sbb
inc
jbe
push
add
push
int
inc
mov
in
ljmp
ds
rorl
aas
fdivl
dec
pusha
xor
xor
mov
in
inc
xor
mov
adc
loopne
jns
mov
mov
das
cmp
loop
pusha
in
pushf
push
jb
mov
data16
ror
data16
iret
or
adc
rorl
lret
push
call
enter
jns
std
push
lcall
jg
mov
cmp
cld
xor
mov
mov
js
mov
aam
mov
sahf
cmp
rclb
daa
or
adc
push
pop
popf
push
stos
rorb
and
je
adc
xchg
dec
sbb
push
dec
sbb
popa
shrb
aam
dec
lahf
cmpsb
addb
or
popa
cmc
mov
in
mov
or
push
movsb
push
pop
mov
shll
mov
jnp
cwtl
outsb
cmp
jmp
call
les
xchg
mov
jl
jae
test
mov
lods
push
sub
mov
mov
or
lahf
lods
pushl
jb
imul
sub
jecxz
and
xchg
xchg
push
loopne
jg
jbe
enter
jmp
cs
lock
adc
mov
mov
sbbb
ja
sahf
inc
xchg
lret
cmp
adc
push
les
test
jecxz
xor
inc
dec
dec
jae
mov
dec
test
sbb
jp
enter
cmp
xchg
push
imul
fsubs
or
sbb
pop
cmp
jo
roll
lahf
pop
mull
push
lods
or
sbb
pop
ja
test
movsb
mov
mov
jo
or
out
cmp
movsl
adc
out
loopne
dec
mov
jb
fdivr
in
in
shr
out
arpl
mov
xchg
cmc
mov
movsb
mov
pop
mov
cmp
sub
data16
mov
jo
jae
xchg
jge
push
pop
stos
mov
and
pop
xchg
adc
xor
pop
and
sbb
adc
jge
pop
jne
shrl
adc
jmp
inc
jge
adc
push
fs
in
fistps
ss
or
stos
and
imul
shll
or
pop
sbb
jecxz
jne
adcb
mov
mov
add
xchg
nop
dec
pop
int
pop
lds
int
inc
or
pop
dec
and
insb
pushf
fwait
mov
fisttps
jno,pn
sub
daa
lret
js
xchg
lods
sbbl
bound
pop
sbb
xlat
into
mov
xor
inc
dec
jns
test
or
mov
pop
xlat
and
movsl
scas
fwait
insb
add
mov
pop
cltd
sbb
lcall
movsb
shrb
aad
mov
mov
in
lock
cmp
and
aam
and
push
mov
dec
inc
divb
lea
rorb
push
jb
jb
xchg
mov
jns
stos
mov
cmp
sbb
out
jno
mov
lahf
inc
popa
sbb
adc
pushf
adc
mov
ficompl
mov
cmp
loop
cltd
cltd
push
cmp
jmp
jno
pop
out
pop
mov
add
std
xlat
lods
scas
lcall
in
xor
push
dec
and
xlat
outsl
aas
sub
push
lcall
loop
and
cwtl
aad
test
mov
sbb
lcall
shll
or
inc
call
ret
mov
inc
push
xor
mov
push
sub
push
test
pusha
cmp
jg
cmp
push
mov
pop
enter
test
add
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
jl
dec
pop
jl
and
fwait
out
int3
sbb
bound
adc
and
sahf
das
push
mov
mov
xor
rolb
adc
out
mov
cmpsb
jo
push
mov
adc
ds
dec
sahf
jo
sbb
aas
nop
or
in
aas
int3
mov
popa
adc
and
mov
xchg
lods
lcall
sbb
and
inc
xchg
cmp
cmp
pop
and
enter
stos
sub
add
lods
test
push
addr16
fsts
mov
lods
or
repz
push
ss
cli
xor
mov
xchg
adc
xchg
and
dec
add
out
add
loopne
idivb
aaa
xchg
test
mov
pop
sbb
pusha
data16
push
mov
enter
jle
adc
sub
loopne
pop
out
popf
fadds
lea
jmp
xchg
inc
jb
jbe
xchg
sbbb
insl
jnp
in
push
xor
outsl
push
pop
in
add
add
test
xchg
cmpb
fcmovne
cmp
ror
sbb
mov
push
pop
xchg
pop
or
sub
aas
lds
pop
shlb
mov
cmp
loopne
or
ret
imul
dec
adc
shrb
push
push
cmp
movsl
cs
jge
daa
inc
loopne
xor
jecxz
push
mov
icebp
arpl
mov
add
mov
mov
insb
and
xor
into
or
sahf
jge
xlat
sub
hlt
mov
inc
movsl
fidivs
mov
cmpsl
aam
cmp
ja
mov
dec
lcall
xor
fstpt
test
cmp
xor
inc
jp
out
scas
inc
in
popa
lret
cmpsl
dec
test
pop
int3
nop
incl
add
add
call
jle
or
ds
xchg
mov
push
test
mov
sub
inc
cld
lret
dec
sub
cmp
mov
daa
cmp
push
out
add
mov
adcl
push
add
addr16
mov
or
or
or
shrl
sub
xchg
jno
out
fdiv
pop
sub
xor
in
in
clc
cmp
inc
pop
pop
mov
in
add
xor
pop
mov
call
fstpl
lea
mov
xchg
sahf
dec
or
ja
ret
mov
sbb
xchg
mov
and
shll
cmp
xchg
push
adc
loope
mov
dec
movsb
insl
mov
dec
mov
pop
imul
in
es
push
lcall
mov
sbbl
clc
inc
test
scas
cmp
fcoml
lahf
add
insb
or
jg
sub
dec
lcall
sarb
sarb
mov
cmp
push
jb
repnz
add
out
lea
fdivr
jnp
js
in
fwait
or
cmp
push
adc
inc
sbbl
shll
add
jae
cs
mov
repnz
mov
ret
lods
pushf
arpl
mov
xor
fbstp
cmp
jo
negb
adc
popa
dec
sbb
fmul
stos
dec
out
mov
out
imul
int
dec
xchg
or
aaa
arpl
shlb
dec
pop
aad
push
dec
mov
and
sti
test
pop
mov
xor
in
or
or
xchg
hlt
fldcw
push
xchg
mov
in
pop
cmp
pop
cli
test
sahf
pushf
incl
gs
lcall
arpl
les
cmpsl
ret
mov
jg
idivb
mov
adc
jge
jge
xchg
mov
cmp
scas
lds
mov
ds
sbb
add
inc
cwtl
or
pop
adc
clc
mov
inc
and
std
sarb
jp
cmpsl
jmp
imul
pusha
addb
aas
aaa
loopne
jl
repz
push
jno
mov
fidivl
and
or
cmpb
addb
fstps
mov
test
mov
xchg
add
stc
sbb
out
pop
jp
cmp
push
mov
sbb
sub
pop
adc
push
mov
cmp
sarl
ja
cmpl
xchg
push
mov
or
jge
out
sti
jne
push
jnp
daa
push
pop
and
cld
pop
and
popf
in
cmp
jae,pt
mov
or
jbe
ret
ds
lock
add
add
xor
mov
lcall
mov
adc
out
xchg
dec
call
imul
and
insl
repz
inc
adc
sbb
sti
insb
push
in
mov
and
scas
pop
mov
rolb
sar
psubusb
out
fucomi
jl
xor
loop
mov
ja
xlat
imul
bound
lods
or
adc
xchg
mov
add
or
ss
call
in
in
cmp
push
jnp
adc
mov
or
mov
or
cltd
pusha
lahf
xchg
xchg
fwait
pop
cmp
sub
test
adc
loopne
jno
pop
sub
lea
stos
jmp
in
les
push
mov
jae
fmul
fwait
in
int
xor
push
lods
test
jb
fcoml
jp
fiadds
dec
ljmp
jp
je
insb
bound
stos
and
mov
add
out
mov
push
test
out
add
dec
pop
and
leave
sub
cwtl
out
jl
mov
fists
push
mov
repnz
cmpsb
fsts
xchg
shlb
cmp
push
jl
fs
cmp
icebp
jne
pop
push
rcrl
incb
pop
int3
sub
jl
xchg
scas
xchg
icebp
test
mov
mov
idivl
inc
jno
mov
nopl
aaa
fcomps
out
cmc
lea
inc
mov
cmpsb
mov
inc
sbb
fwait
sbb
sbb
ficompl
daa
mov
fwait
jne
sahf
jmp
sbb
scas
or
add
push
testl
std
aad
sarb
mov
sarl
add
jge
mov
jns
mov
mov
push
sbb
push
mov
lret
jbe
jae
inc
mov
jnp
add
inc
mov
pop
cwtl
sub
xor
fcmovnu
push
dec
cwtl
jmp
inc
and
push
std
or
fdivrs
dec
mov
mov
sbb
xchg
xor
aas
sbb
add
mov
push
nop
int
cld
pop
dec
or
mov
sbb
lds
mov
lods
shlb
mov
movsl
mov
cmp
imul
lret
adc
pop
push
lahf
mov
in
hlt
inc
mov
xor
ret
cmp
movsl
mov
in
jne
inc
orl
stos
andl
stos
mov
loope
push
sub
mov
arpl
fbld
das
sbb
dec
mov
in
xchg
test
fstpl
mov
test
mov
lcall
dec
clc
mov
iret
mov
scas
ret
ss
pop
fucom
mov
pop
xchg
data16
nop
xor
xchg
repnz
movsb
xlat
lahf
stos
bound
ret
mov
cli
cmp
in
sbbl
rcr
jl
and
pushf
cmpsb
cmpsb
and
mov
sbb
or
sub
out
mov
sti
or
cmp
testb
or
pop
nop
add
mov
arpl
aad
js
or
dec
pop
jle
mov
mov
lods
bound
out
jnp
inc
outsl
pop
push
push
pusha
sub
push
arpl
or
test
and
stos
and
ret
and
clc
aad
int3
push
jl
lret
dec
shlb
lock
test
xchg
js
or
sti
dec
loop
jl
movsl
ret
cmpsb
repz
out
mov
loopne
pop
xchg
lods
shrl
push
call
insl
push
ret
inc
push
mov
pop
arpl
popf
cltd
sub
js
dec
fucomip
testb
divl
shl
fyl2xp1
push
sub
in
add
incb
jmp
pop
cmpsl
inc
cmp
adc
scas
sbb
mov
xchg
pop
dec
jnp
dec
mov
pop
dec
data16
adc
dec
pop
jbe
cmpsb
aaa
cmp
mov
fs
insl
dec
pusha
sti
mov
repnz
push
mov
lahf
jp
add
jno
pop
in
jns
loopne
subl
fisubrl
fdivp
loopne
push
insl
enter
std
test
test
or
inc
inc
dec
sti
int3
imul
push
lahf
xchg
sub
addb
faddl
es
and
and
mov
loope
out
xchg
mov
push
xor
call
in
fs
sbb
sbb
bndstx
inc
pop
inc
daa
fisttpll
xor
fldenv
imul
cld
cmp
push
xlat
lret
sbb
inc
xor
mov
and
test
jmp
cld
add
cmpsl
adc
mov
xor
mov
or
mov
ss
jnp
movsb
enter
loope
out
out
rcrl
mov
fidivl
mov
mov
shlb
dec
insl
pusha
or
push
xchg
out
aam
sbb
out
mov
xor
pop
daa
cmpsl
xchg
pushf
xor
cli
fisubrl
xor
dec
incl
je
popa
mov
pop
insb
je
jp
lea
jge
sub
or
popf
arpl
xor
xchg
or
or
aam
sbb
aaa
cld
aad
push
xchg
out
or
stc
or
sub
fcmovnu
inc
sub
lods
or
data16
adc
mov
inc
inc
test
les
mov
xchg
mov
mov
cmp
jg
mov
repz
mov
rorb
push
dec
xor
fsubrl
add
mov
aas
add
in
outsl
mov
cltd
ficoml
je
push
or
jno
insb
aad
icebp
fcomps
jns
cmpsl
jmp
sub
jmp
mov
loopne
or
std
sub
pop
bound
clc
and
jg
sbb
jp
into
clc
nop
jmp
cmp
scas
dec
and
stos
mov
data16
cmp
sbb
inc
add
aad
bound
repz
or
clc
jo
mov
daa
lcall
test
xor
jb
outsl
inc
ljmp
add
mov
inc
leave
mov
stc
pop
mov
jecxz
out
push
adc
cmp
movsb
sbb
or
stos
sub
icebp
jl
insb
xlat
dec
out
sahf
fsts
fs
cs
cmp
pop
lret
cmp
das
pslld
test
cmpsb
notb
jmp
cmp
jo
cmpsb
into
dec
sub
loop
int
sub
mov
xchg
push
add
fidivrs
bound
push
testl
mov
mov
pusha
les
push
and
loop
pop
rolb
mov
adc
fidivl
xor
lds
mov
and
inc
mov
mov
in
test
push
sbb
into
or
mov
lods
sbb
xchg
nop
and
sbb
in
push
dec
ret
fsub
lea
call
adc
in
cmp
mov
mov
enter
push
loopne
jae
pop
cmc
sahf
scas
cli
movsb
lods
cmpsb
mov
adc
call
or
cmc
inc
sub
cld
dec
xchg
fsts
cmp
stc
pop
ja
shlb
inc
arpl
lea
sub
xchg
test
xlat
testl
xchg
out
les
and
sub
sbb
jns
std
out
neg
lods
and
cmpsl
sbb
sub
xchg
lods
int
cmpsb
dec
enter
jl
shlb
in
fcoms
add
push
mov
fwait
xlat
loope
pop
adcl
test
pushf
movsl
mov
insl
stc
les
mov
aaa
jl
pop
jnp
repnz
fadd
pop
icebp
lahf
lea
xor
push
mov
insl
xor
les
inc
push
sub
popf
stos
jno
pop
cmp
imul
roll
mov
jecxz
cwtl
add
mov
jo
cmc
mov
pop
jno
push
les
fstpl
cmp
jae
mov
cmp
lcall
jecxz
xorb
icebp
jp
rorl
or
xchg
pop
add
in
mov
pop
add
loope
mov
push
popf
cmp
pusha
mov
lock
and
insl
xor
into
outsb
sbb
ffree
xchg
dec
pop
jb
pop
out
xchg
fs
xor
cwtl
mov
inc
adc
jge
mov
jge
loop
fdivrs
das
add
dec
cmp
pop
test
jns
mov
mov
and
daa
fsubrs
lock
xor
shl
jno
imul
lods
mov
scas
roll
imul
inc
fisttpl
cmovb
cltd
adc
ror
push
daa
cmpsb
enter
mov
mov
mov
pop
outsb
test
int3
cmp
sbb
rcll
leave
outsl
dec
xlat
arpl
shll
inc
adc
and
inc
pusha
ja
jmp
fsubrs
jg
call
mov
ror
adc
in
cmpsl
in
jge
das
fwait
pop
or
ja
addr16
insl
les
insb
sar
stos
dec
inc
pop
js
stos
pop
jne
xor
aad
ret
fisttps
outsl
sbb
in
fildl
aas
mov
sbb
addb
push
inc
push
pop
cld
and
inc
dec
out
fidivrs
mov
int3
ss
or
orl
push
mov
imul
les
fisttps
popf
jnp
ds
mov
dec
mov
xchg
jl
mov
aaa
mov
and
xchg
insb
mov
loopne
popa
lcall
sub
lods
pushl
popa
sub
iret
cmp
adc
or
add
sbb
dec
inc
rcrb
inc
and
or
or
dec
addr16
repnz
imul
sub
stos
lock
test
sarb
ficoms
pushf
dec
repnz
push
hlt
push
loop
inc
out
mov
mov
fisubrs
add
decl
inc
sbb
in
es
jge
gs
jecxz
insl
stc
jnp
ja
push
rclb
mov
das
or
push
sbb
scas
xchg
adc
add
std
test
pop
push
push
cltd
in
xchg
jl
add
pop
xor
andb
call
mov
jg
inc
dec
enter
mov
cmp
xchg
stc
in
cmp
jge
sbb
mov
push
xor
push
xor
mov
push
movsl
add
pop
call
pop
mov
imul
cmpsl
repnz
push
fnstenv
or
xchg
clc
aam
dec
fcmovne
push
clc
mov
loopne
sbb
dec
sub
shlb
or
cmp
jle
or
xchg
and
mov
inc
negl
popa
popf
and
mov
xchg
jle
cli
sbb
stc
dec
jae
ret
loopne
xchg
or
push
inc
cmpsl
push
clc
mov
mov
sub
inc
aam
dec
xor
shl
lcall
rclb
push
add
cmc
mov
jbe
not
inc
push
scas
stc
shrb
icebp
jb
stos
cmp
out
fsubr
push
mov
mov
fwait
mov
cmp
adc
clc
outsl
incb
mov
xchg
les
lcall
mov
bound
push
pop
shrl
dec
les
add
xchg
sarb
mov
cs
cmc
push
adc
jae
cltd
sbb
lahf
jno
xor
sbb
or
dec
xor
in
fsubrs
fbstp
push
sub
std
aad
inc
repz
insb
dec
shl
dec
mov
das
push
cltd
scas
hlt
call
sbb
call
inc
movsl
xchg
pusha
sub
xchg
loop
shlb
xchg
addl
xchg
stos
pop
add
mov
sbb
call
lods
dec
scas
push
lods
sub
pop
lahf
icebp
jno
sbb
add
xchg
fbstp
mov
stos
cmp
mov
mov
push
jecxz
xchg
mov
push
out
jecxz
push
push
fs
je
dec
mov
dec
lods
std
sbb
push
bound
mov
js
ljmp
and
pusha
ret
cmp
loop
adcl
ljmp
stos
xor
stc
ja
out
ja
jae
sub
outsl
loopne
stos
ret
sbb
sbb
inc
mov
inc
mov
mov
inc
mov
gs
jg
std
and
adc
inc
popf
mov
mov
push
out
les
sbb
in
mov
sub
mov
jp
fidivs
or
push
jp
adc
mov
mov
aam
out
or
cmp
jbe
scas
jle
jg
aas
push
lea
cs
aam
inc
dec
add
call
jp
or
push
pusha
fwait
ljmp
popl
ficoms
mov
cmpsl
rcr
adc
mov
rep
mov
repnz
cmp
pop
rcr
adc
sbb
xlat
imul
adc
neg
pop
xor
xchg
cwtl
out
dec
dec
test
loop
xchg
out
aam
in
popa
xor
les
outsb
adc
push
jmp
sbb
imul
xchg
out
arpl
test
mov
xchg
lods
push
lahf
push
in
xchg
xor
sub
cmp
cld
inc
test
jg
xor
cmp
mov
inc
jge
pop
sub
mov
loopne
andl
push
sbb
out
rcll
cli
pop
std
loop
mov
mov
and
les
sbb
mov
popl
cmpsb
push
add
and
lods
mov
fiaddl
jbe
loop
adc
movsb
js
jp
push
mov
sub
loop
xor
or
and
lret
xor
mov
inc
lods
scas
push
and
cmc
inc
into
jmp
enter
dec
loope
mov
adc
iret
pop
cmp
pusha
iret
fcomp
dec
jb
outsl
shll
cmp
dec
popf
flds
adc
aas
pop
fistps
rcrl
or
stos
hlt
sub
push
icebp
sub
inc
int
arpl
imul
ja
lods
adc
gs
fwait
aaa
lret
add
jbe
mov
hlt
shrb
jle
jl
mov
aaa
sub
xor
pusha
mov
out
push
pop
mov
mov
test
lahf
jcxz
inc
mov
and
cmp
rorb
mov
aas
loopne
adc
xlat
sahf
or
dec
sbb
xchg
outsl
and
cwtl
in
push
jl
and
adc
adc
dec
sub
loop
in
data16
mov
mov
inc
sub
insb
rolb
xchg
inc
das
xchg
in
jnp
loop
jns
sub
add
pop
rol
cwtl
addr16
movl
sub
jecxz
sub
test
out
rcrb
ret
dec
das
mov
shlb
test
push
pop
pop
xor
pop
dec
xor
ds
sub
pushf
cmp
dec
add
pushf
lods
or
lret
mov
scas
fldenv
leave
sahf
hlt
inc
mov
fs
data16
xorl
mov
push
jp
addr16
add
test
fucomip
jae
adcl
pop
and
push
test
imul
inc
lret
adc
pop
call
mov
cmp
cwtl
mov
sub
adc
mov
rclb
dec
inc
shrl
jns
out
xor
nop
adc
sarl
mov
ret
jbe
neg
lods
enter
xor
je
dec
inc
pop
adc
pop
ficomps
out
in
push
and
sub
jae
je
test
ret
sbb
out
into
add
mov
cmp
fiaddl
pop
dec
cltd
add
xchg
fnstsw
push
hlt
jl
repz
mov
mov
sub
scas
test
inc
cli
ljmp
xchg
lret
loope
je
test
int3
push
fs
std
adc
cmc
ljmp
outsl
inc
jno
std
mov
mov
mov
push
push
je
jecxz
outsl
movsl
sbb
sahf
in
mov
dec
xchg
incb
das
sahf
mov
fistps
xor
mov
insb
xor
jae
cs
add
ja
fwait
inc
cmpl
mov
popa
movsl
ss
add
mov
je
rcrb
outsl
aaa
jecxz
pop
cmp
and
nop
inc
in
xchg
fsubrp
push
ficomps
pushf
add
clc
cvtps2pi
jl
ja
push
test
jo
fcoml
pushl
int
jmp
mov
cltd
dec
call
out
outsb
push
pushf
lahf
xor
and
xchg
dec
mov
add
pusha
enter
sahf
mov
push
pop
sbb
repnz
mov
insl
lds
test
ljmp
test
xor
or
lock
jno
test
popf
shl
cld
je
mov
icebp
dec
push
mov
mov
xor
mov
int
bound
add
pop
negl
mov
lods
movsl
loope
sub
jge
sub
loope
sub
fisubs
das
enter
xchg
std
jecxz
dec
or
popf
lds
jg
inc
insb
fmulp
outsl
mov
inc
fsts
jnp
cs
mov
je
lods
or
loope
lds
push
cwtl
push
mov
xchg
in
pop
cli
pop
mov
mov
mov
imul
push
pusha
fcoml
test
stc
xorb
cmpsb
inc
mov
icebp
xchg
pop
cltd
lods
outsb
aad
pop
test
pop
push
popf
adc
push
outsl
mov
in
ja
mov
loop
iret
rep
loope
add
push
pop
cmp
adc
mov
ss
in
jae
cli
repnz
push
dec
dec
jecxz
into
cmpsb
push
out
es
pusha
cmpsb
hlt
cmp
xlat
adc
jae
sub
pop
fists
jle
jb
jns
xchg
idivb
test
or
push
inc
pushf
xchg
ret
inc
loope
add
mov
mov
jne
imul
sbbl
cmp
lods
adc
push
mov
inc
jnp
mov
xchg
jmp
int3
ds
lock
mov
aas
shufps
test
xchg
cwtl
int3
ret
inc
in
push
push
fwait
cmc
xchg
xlat
cld
mov
and
jl
cmp
cmp
inc
push
adc
mov
mov
pop
xchg
sub
xchg
outsl
das
adc
sub
add
addr16
cmp
mov
pop
rolb
imul
testb
daa
fnstenv
jge
adc
popa
pop
cli
jo
jns
push
cmp
lds
sbb
cmp
sbb
adc
inc
testl
js
inc
pop
adc
dec
push
out
popf
es
jecxz
dec
xbegin
pop
mov
mov
mov
addb
push
out
xor
mov
gs
pushf
xchg
sub
lret
out
insl
add
inc
mov
scas
arpl
movsb
lock
xor
mov
pop
or
push
into
dec
dec
push
je
and
mov
cs
cmp
mov
stos
mov
gs
sbb
popa
dec
jecxz
mov
les
mov
stos
popa
sbb
gs
pop
sub
push
xchg
add
add
cmp
xchg
or
xor
aaa
lret
cmpsl
clc
addr16
adc
stc
mov
scas
insb
or
sbb
mov
mov
ss
push
sub
lea
adc
dec
cmp
clc
ljmp
lods
mov
inc
dec
js
sbb
test
mov
ja
mov
cmp
in
outsb
in
jne
dec
xor
test
jae
popf
pop
add
push
ficoml
sahf
or
jge
cmp
mov
add
lret
xchg
shrb
test
test
iret
test
mov
out
inc
dec
cmp
cmp
int3
pop
jno
aad
pop
shrb
mov
sarl
jno
mov
int
in
push
and
insb
nop
mov
push
mov
jnp
mov
mov
in
sbb
jo
cs
lret
mov
or
mov
mov
mov
mov
or
orl
fisubrs
jb
mov
ljmp
cwtl
pop
mov
out
pop
xchg
popf
xor
or
test
std
or
push
fstl
out
sarl
mov
mov
xor
dec
add
test
aam
inc
movsl
daa
mov
addr16
je
and
add
rcrb
jmp
outsl
cmp
mov
imul
or
mov
aas
pop
mov
mov
movsl
cmp
jge
mov
and
pop
in
push
sub
lock
push
outsl
test
push
scas
jecxz
mov
sbb
push
inc
jmp
inc
inc
cltd
and
test
sbb
pop
mov
add
psubsw
movsb
pop
out
inc
jg
fs
sbb
popa
es
jp
cmp
fimull
repz
in
aad
subl
sarl
addr16
pop
pop
dec
push
lcall
int3
ds
xlat
sbbl
xor
cmpsb
jno
push
sahf
aas
jae
xor
add
push
pop
fdivrs
xchg
jns
scas
mov
popf
cmp
sub
lock
push
mov
imul
out
rorl
jle
dec
mov
mov
sub
in
jb
and
xchg
lods
mov
add
push
aaa
pop
stos
pop
xor
add
dec
gs
xor
pop
xchg
mov
dec
sub
mov
aam
loope
push
or
pushf
pop
jbe
inc
pop
xchg
sub
insl
ja
push
out
imul
int3
roll
push
mov
xor
adc
or
fcoml
and
cwtl
mov
push
loop
es
adc
jbe
fidivrs
xchg
addl
inc
push
enter
pop
movsl
pop
faddl
xor
push
xchg
xor
cmpsl
cwtl
sub
sbb
aaa
cmp
add
add
jne
ret
leave
jp
and
cmp
sbbb
pop
mov
addr16
out
jmp
iret
inc
lock
push
fstl
jecxz
xor
inc
mov
dec
leave
pop
lcall
sbbw
mov
sbb
andl
and
and
addr16
mov
fisubrs
push
fidivs
mov
mov
xchg
cmp
pusha
cwtl
lcall
xor
jl
outsb
or
das
repz
mov
sub
push
icebp
fcmovu
arpl
dec
pop
loopne
inc
outsb
cmp
pushf
add
push
pop
scas
mov
mov
and
adcb
lret
push
push
cwtl
mov
lahf
inc
push
sbb
xor
and
out
mov
push
test
imul
mov
fimull
adc
fbld
mov
or
outsb
or
add
stos
pop
ffreep
push
or
fidivs
popa
stc
adc
jg
inc
jge
out
cmp
cmp
mov
jae
pop
fsubrp
mov
push
jns
sub
cmpsb
jne
xorb
sbb
int
push
mov
fistpl
hlt
mov
std
stc
sub
pop
push
insl
push
push
push
mov
icebp
xchg
sbb
int
mov
sbb
xlat
mov
pop
popf
imul
cmc
mov
jnp
stos
lea
xchg
aam
mov
xor
xchg
fldcw
push
decl
mov
arpl
divl
sahf
lcall
jecxz
mov
rorb
inc
jae
dec
rolb
mov
xchg
mov
dec
mov
rcrl
xchg
bnd
out
into
imul
mov
loopne
mov
xor
fidivrs
jmp
mov
sub
fmuls
and
test
cmp
testb
inc
test
sbb
push
xor
add
out
mov
cltd
push
xor
test
cmpsb
pop
jb
aas
frstor
mov
jecxz
lods
push
and
daa
cmp
adc
xor
stc
mov
cmp
xorl
inc
pop
push
lret
mov
sbb
andb
in
jb
xor
mov
in
outsl
push
jnp
dec
push
mov
cmpsb
ret
inc
std
jb
pop
add
adc
cli
ljmp
add
cwtl
cmpl
sbb
je
out
mov
pop
cmp
imul
jae
stos
shr
es
loope
data16
mov
cmp
lret
or
fs
xlat
in
jb
lods
enter
scas
or
fwait
aaa
pop
into
aam
adc
mov
jle
outsl
stc
lods
lods
repz
enter
in
sahf
out
cli
test
out
or
add
xor
xchg
lret
gs
jo
push
notb
lahf
add
xchg
jo
add
pop
xchg
xchg
xor
adc
mov
imul
cmp
push
test
xchg
xchg
or
xchg
fadd
jp
pushf
jl
out
fs
addl
jae
data16
cmp
stc
xchg
loop
orl
mov
mov
mov
out
test
or
push
push
popa
outsl
movsl
ds
xchg
jne
sbb
hlt
jecxz
sahf
pushf
xor
sub
or
push
push
repz
cld
cmpsb
repnz
jns
daa
inc
in
sbb
jno
mov
adc
subl
mov
dec
mov
mov
xchg
pop
test
jge
jno
lock
pop
daa
popf
mov
mov
std
fcmovbe
fwait
sahf
jnp
shl
fcoml
je
stos
ljmp
call
add
out
mov
lods
inc
jle
jnp
cmp
xor
out
dec
xchg
je
adc
cmp
pop
movsb
and
out
in
mov
je
add
sub
mov
adc
pop
xchg
xlat
jbe
mov
mov
iret
push
ljmp
jge
and
mov
or
push
sti
inc
xchg
dec
ljmp
mov
inc
pusha
xchg
sbb
xor
sub
nop
adc
push
add
mov
idivb
push
stc
mov
cmp
loope
xor
icebp
jecxz
cmpsb
out
pop
dec
lea
popa
push
and
fisubs
iret
sub
loop
shll
loopne
pusha
je
or
scas
mov
enter
jl
push
adc
pop
dec
dec
add
call
clc
in
mov
inc
add
dec
and
add
mov
sbb
mov
cmp
pop
jl
dec
jnp
cmp
dec
pop
js
sbb
loopne
sbb
jle
dec
lahf
pushf
cmc
xorl
push
sub
aad
outsb
jnp
jnp
cmp
ret
push
push
test
test
loop
cs
mov
xor
jge
fstpl
mov
mov
mov
bound
sbb
jae
mov
adc
lcall
sbb
insb
jge
sti
aad
add
test
bswap
pop
xchg
cli
pop
sarb
mov
lahf
lret
xor
gs
dec
push
xchg
or
inc
inc
cwtl
out
push
shl
and
adc
pushf
cmp
sub
mov
repnz
mov
mov
add
ss
mov
out
xlat
sbbl
pop
and
pusha
sub
stc
sbb
cli
sbbl
clc
hlt
popa
mov
add
out
aam
in
fisttpll
pop
stos
inc
sbb
fwait
or
mov
mov
prefetchnta
and
into
scas
xlat
mov
mov
pop
test
cmpsb
lods
adc
cli
sub
mov
divb
push
fcomip
enter
inc
mov
push
cwtl
arpl
mov
je
pop
inc
lcall
sbb
insl
dec
addl
rorb
pop
xchg
mov
jecxz
xlat
or
cmc
dec
inc
repnz
push
push
mov
or
pop
push
addr16
mov
inc
push
mov
pop
cmp
popf
add
dec
shll
add
popa
xchg
cs
icebp
and
les
push
les
or
lret
mov
rorl
sub
mov
xchg
adc
mov
jns
loopne
dec
leave
loopne
scas
sbb
push
and
xor
arpl
mov
xchg
fwait
int3
pop
test
arpl
dec
cmpsl
jb
outsl
dec
mov
sbb
mov
shl
sahf
pop
test
jne
aas
add
sub
dec
cld
sub
imul
inc
fildll
scas
mov
pop
test
adc
int3
adc
jbe
into
incb
movsb
or
and
fcmovnu
push
scas
out
ss
mov
mov
cli
and
xchg
insb
movsl
stos
test
mov
imul
pop
in
loop
out
xor
dec
adc
pop
pop
xor
testl
xchg
shr
leave
fisubl
and
mov
pop
xchg
push
xor
xchg
sub
enter
mov
mov
adc
mov
sbb
cmp
jl
gs
jmp
enter
stc
jo
fbstp
inc
pop
pop
or
add
dec
push
loope
push
sub
pop
inc
pop
or
mov
push
popf
icebp
ljmp
xchg
jne
dec
mov
jbe
pusha
hlt
jbe
test
pop
sahf
xchg
mov
push
popa
std
filds
pop
sti
ja
popf
xchg
mov
sub
imul
hlt
loope
xor
ret
mov
inc
bound
or
lahf
rol
xchg
push
mov
fnsave
icebp
clc
ljmp
fcmove
aam
fldenv
aas
xor
xlat
std
inc
mov
jg
add
dec
dec
fists
push
jne
mov
lods
mov
dec
and
test
pop
std
sti
jl
mov
push
jo
inc
pop
mov
push
iret
inc
mov
jne
leave
into
inc
pop
jmp
adc
mov
adc
int
xor
adc
add
outsl
insb
mov
xchg
inc
mov
dec
fcoml
sbb
iret
mov
xor
push
inc
mulb
mov
ret
scas
xlat
rcll
inc
movsb
mov
shrl
inc
call
pop
cmp
dec
divb
movsb
popa
jno
cmpsb
push
lcall
test
divl
and
sarb
xchg
mov
jns
shrl
cltd
jmp
nop
mov
push
push
mov
leave
and
mov
cwtl
xor
mov
sbbb
add
scas
adc
out
popa
iret
jno
lahf
cmp
pop
sbb
scas
dec
aas
cs
sarb
push
les
outsl
and
or
lds
xor
ds
int3
subb
cmp
or
dec
mov
push
bound
sbb
mov
shll
add
pop
mov
mov
dec
sbb
pop
push
cld
ja
in
xor
clc
ja
pop
add
arpl
imul
add
and
jb
xlat
enter
jno
mov
and
or
js
sahf
sahf
xor
push
push
outsb
pop
ja
xchg
in
fs
shll
stos
xchg
leave
dec
push
jb
addr16
movsb
outsb
pusha
pop
and
xor
into
add
insb
outsl
enter
inc
xlat
mov
ljmp
lds
mov
dec
cmp
pop
jl
in
sub
hlt
pop
lock
icebp
test
add
sub
neg
push
cmp
hlt
mov
les
hlt
leave
sub
jne
lret
sbb
sbb
push
scas
ret
ret
push
sbb
lahf
sbb
pop
sub
cmpsb
xor
das
cmp
insb
pop
scas
roll
xchg
adc
bsf
sbbl
out
mov
xchg
hlt
jbe
pop
mov
push
mov
scas
in
loope
jne
adc
fnstenv
pushf
mov
imull
adc
dec
call
sbb
push
mov
inc
xchg
movsl
mov
or
push
adc
pop
or
mov
push
enter
xchg
shrl
test
leave
test
mov
aaa
xchg
movsl
ret
add
lea
hlt
out
cwtl
cltd
insl
jns
inc
mov
imul
popf
add
aam
jnp
xchg
divl
fcoms
mov
xacquire
insb
bound
adc
push
or
in
pop
scas
mull
cli
mov
mov
ss
pop
mov
mov
shlb
jo
cmp
cwtl
mov
enter
dec
lea
inc
cli
ja
xchg
fildl
or
xchg
je
fildl
sbb
fs
shlb
xor
cli
cmp
xchg
push
cs
jp
mov
ss
add
daa
ret
push
popf
xchg
xor
loop
jmp
ds
inc
cwtl
and
dec
out
xchg
mov
inc
mov
jns
lock
stc
js
sub
xchg
dec
and
pushf
pushf
xchg
jmp
push
mov
out
mov
fistpll
pop
jmp
dec
stos
movzwl
mov
mov
fcmovnb
cltd
call
imul
sahf
jns
test
lahf
add
fwait
xchg
mov
xor
or
xor
or
cltd
fxch
cmpsl
xor
add
test
and
int
cltd
adc
xor
dec
xchg
inc
popa
lods
sbb
stos
cmp
leave
cmp
in
add
xchg
je
adc
fdiv
ss
jns
inc
cmc
adc
jmp
add
lock
aas
sub
sbb
jp
push
enter
push
popaw
add
sbb
lods
scas
sub
addr16
or
lret
inc
mov
push
fwait
inc
movsl
ja
mov
pop
or
repz
call
insb
int3
push
mov
jmp
mov
jp
ja
mov
sbb
jo
push
mov
lea
std
repnz
int3
xchg
clc
push
nop
adc
rcrb
push
std
adc
lahf
imul
out
or
rcl
sbb
iret
loop
push
and
repnz
dec
pop
shl
push
popl
jecxz
dec
shr
dec
xor
ljmp
xlat
aaa
repz
outsb
lcall
adc
arpl
and
pop
ret
push
fiadds
sub
xchg
jbe
and
and
icebp
shrl
xor
pop
inc
cmpsl
mov
dec
jecxz
cwtl
pop
hlt
jge
mov
mov
mov
fmuls
aam
push
shrl
pop
cmp
sbb
repz
lock
xor
insb
jmp
xchg
mulb
lods
mov
push
stos
and
aad
jge
leave
xchg
lods
cvtps2pd
jns
or
frstor
in
dec
inc
loope
jno
jb
pop
mov
arpl
mov
repz
jp
clc
dec
popa
sub
push
push
sti
cli
sbb
insb
ret
leave
adcl
adc
mov
pop
add
inc
aaa
push
test
push
adc
mov
xchg
mov
fwait
push
mov
into
aas
jmp
push
outsl
mov
sbb
xchg
shl
cmp
xchg
cmc
xchg
sahf
and
sahf
adc
add
iret
jmp
add
mov
inc
bound
or
lods
sti
inc
out
jmp
dec
push
jecxz
add
lods
push
out
and
cmp
dec
lods
out
mov
xchg
data16
push
ss
stos
pop
cmp
in
and
ja
iret
arpl
push
xchg
stos
dec
xlat
ljmp
mov
pop
out
addr16
fcmovnu
scas
mov
add
xchg
daa
xchg
cmpsb
data16
inc
lods
call
mov
inc
mov
add
mov
std
cld
lea
hlt
call
inc
int3
iret
sub
mov
pop
mov
daa
addb
cmp
jb
cmpl
adc
ljmp
mov
sbbl
adc
pop
cmpsb
rcll
shlb
sbb
je
int
or
and
testb
insl
ror
mov
jno
in
jbe
bound
mov
loope
sub
sti
adc
xchg
mov
push
push
dec
in
ljmp
xchg
sti
roll
add
cmp
das
test
add
leave
iret
shlb
repz
testb
add
mov
sbb
push
push
out
cmpsl
lret
sarb
frstor
clc
adc
cmpsb
ret
ret
mov
vmovss
mov
jnp
mov
rorb
mov
push
mov
cs
pop
lahf
mov
jge
in
enter
xor
ds
into
inc
sbb
mov
es
mov
aas
pop
add
out
jmp
mov
sub
test
test
cmpsl
push
mulb
movsl
pop
inc
and
in
or
rcrb
gs
xchg
sub
roll
jecxz
sahf
push
lcall
outsl
mov
int3
fisubrl
ret
or
jns
daa
jnp
jecxz
lds
add
cli
adc
dec
inc
fstpl
mov
mov
sub
mov
loop
mov
inc
sarb
push
jbe
add
shll
push
xchg
or
retw
pusha
enter
cmp
mov
sbb
ds
push
fs
mov
sahf
dec
xor
pop
mov
int
and
pop
aam
lret
push
pushf
jo
mov
or
or
les
rclb
xor
cmp
jmp
lods
idiv
dec
in
test
lcall
add
add
jmp
test
loope
enter
jmp
stc
pusha
fmull
bound
js
popf
sarl
inc
fwait
jl
pop
hlt
sbb
sbb
and
fwait
push
mov
lahf
ss
jne
xlat
jne
rorb
cld
stos
mov
fdivrs
leave
inc
movl
cli
sub
out
sbb
lods
xchg
xor
popf
dec
xchg
xor
fstps
test
fildl
shrb
call
cmp
and
divl
or
lret
dec
dec
bnd
aas
or
nop
stos
cmp
xorl
ret
into
cmpsl
xchg
inc
in
pop
cltd
loop
jb
pop
int3
ficoms
adc
pop
inc
jecxz
mov
mov
pop
lahf
repnz
pop
arpl
scas
pop
rolb
mov
outsl
fcompl
lods
pop
push
push
repz
adc
test
shlb
frstpm(287
adc
cmp
inc
mov
dec
and
xor
loope
sub
pop
std
xor
xchg
mov
jo
gs
pop
xchg
cmp
sbb
cmc
outsl
dec
clc
leave
add
jmp
sbb
add
or
xchg
orb
cmp
loop
inc
psraw
push
hlt
sub
aam
fldl
cli
cmc
cli
push
xchg
sbb
cwtl
push
add
outsb
adc
fmull
dec
add
mov
das
adc
cmp
xchg
mov
xor
ds
insl
jno
cmpsb
test
aam
mov
movsb
roll
arpl
xchg
mov
imull
cmpsl
jl
mov
cmp
xchg
cli
inc
in
addr16
jnp
sti
jo
mov
sbb
lods
jmp
xchg
mov
int3
jo
loop
fimuls
mov
shr
lcall
pop
pop
ret
push
inc
cmp
addb
cld
lock
rol
ss
dec
test
scas
bnd
cmp
icebp
mov
cmp
xchg
cmpsb
and
std
leave
or
pop
push
dec
xor
movsl
mov
sub
xchg
test
xchg
ljmp
loopne
jecxz
cltd
add
nop
mov
xchg
scas
paddd
fiadds
es
sub
adc
std
sbb
jl
loope
mov
dec
xor
fcom
xchg
push
inc
int
inc
mov
sbb
jae
inc
pop
push
test
dec
arpl
sbb
shlb
cmc
scas
jne
shl
sahf
pop
jnp
sbb
jl
in
fs
test
test
test
rcrl
fildll
xchg
inc
cmpsl
loop
in
fists
pushf
mov
jecxz
jnp
fnstsw
imul
ret
jb
jle
jl
inc
fs
sub
pop
daa
cmp
out
mov
add
icebp
push
outsb
dec
and
insb
lock
imul
jecxz
enter
in
sbb
dec
sbb
test
rcll
lods
fdivs
pop
lret
jo
js
movsb
rdpmc
cwtl
jb
mov
xchg
roll
mov
out
and
add
fldl
jmp
aas
push
dec
int
leave
mov
pop
fcom
in
mov
adc
dec
sub
adc
xchg
cmpsl
mov
fs
das
std
outsl
inc
loope
mov
adc
xchg
imulb
idivb
loop
fstps
or
or
mov
mov
add
jp
std
cli
mov
scas
xchg
lret
mov
mov
in
gs
dec
inc
lahf
fstpt
and
pop
pop
popa
pop
andl
xor
lods
cwtl
or
xor
mov
push
add
lods
fmull
mov
cli
mov
xor
fwait
cmp
dec
mov
test
xchg
scas
lret
cs
shll
std
data16
jns
add
mov
adc
xchg
arpl
out
cmpsl
movsb
add
push
popf
mov
mov
cld
sarl
mov
and
mov
dec
sub
push
insl
arpl
xchg
jmp
inc
xchg
cmp
in
fwait
xchg
inc
mov
push
jmp
lods
xchg
cs
je
mov
sub
icebp
lods
mov
lahf
or
in
mov
cmpsb
repnz
outsl
dec
and
insb
popf
cmc
stc
jne
je
out
andb
xor
xchg
mov
js
in
stos
out
loopne
or
stc
in
jecxz
add
add
fwait
test
int
in
and
jne
mov
mov
xchg
mov
jl
add
jmp
mov
pop
outsb
dec
sbb
daa
lock
xor
sbb
fnstsw
idivl
negb
sub
mov
ja
jle
pop
mov
scas
add
insl
mov
pop
insb
inc
lock
enter
push
in
xor
into
clc
ljmp
jmp
and
stos
ret
out
xor
push
add
push
push
aam
xchg
aam
mov
or
mov
lret
cmc
subb
scas
dec
and
lcall
iret
loop
stos
call
lcall
mov
es
cmp
and
jb
insl
inc
clc
insl
hlt
sub
push
in
mov
and
mov
mov
xchg
lahf
dec
in
test
and
xchg
in
cmp
sub
dec
shlb
call
pop
and
in
jle
xlat
jmp
add
sub
ss
add
xchg
mov
adc
rcrb
mov
and
jno
xor
ss
ss
and
push
pop
loop
out
shll
insl
inc
cmp
fmuls
pushf
push
adc
icebp
sbb
dec
add
into
mov
js
mov
stos
fcmovnbe
cmp
test
sub
daa
xlat
fnstcw
xchg
inc
sub
push
cmp
sbb
sbb
dec
in
mov
mov
fwait
jge
push
xchg
push
dec
xor
mov
pop
std
test
jnp
lea
dec
outsl
jno
mov
push
cmp
xor
jbe
mov
mov
cmp
cli
ljmp
jne
les
mov
adc
push
dec
inc
jmp
aas
mov
jnp
sbb
test
push
jmp
xchg
loop
cmpsl
popf
sub
int3
jno
loop
mov
inc
stc
imul
mov
scas
je
xchg
cmpsl
outsb
stos
add
out
loope
ljmp
cwtl
aad
xor
movsl
out
push
stos
sub
mov
sub
pop
dec
outsb
sbb
fstpt
and
xchg
loopne
cmpsl
arpl
mov
lahf
sbb
add
out
xor
sub
in
pop
pop
sbb
push
gs
ja
and
dec
cs
sub
or
mov
sbb
scas
les
adc
loope
dec
cmc
cmpsl
loope
vpmacssdqh
cli
ficoms
sub
jmp
or
push
mov
sbb
xor
movsl
pop
jbe
int3
int3
inc
add
and
and
getsec
adc
mov
sub
mov
rcrl
lahf
data16
mulb
or
xchg
sbb
mov
xchg
test
push
fsts
push
jmp
jo
insl
icebp
stc
xchg
push
cwtl
std
mov
imul
push
sti
sub
push
xchg
arpl
bound
xchg
or
rorl
cli
push
sub
lcall
dec
xchg
sub
or
sub
inc
cmp
aam
mov
addr16
lret
iret
scas
mov
sbb
push
shl
mov
mov
pop
dec
pushf
add
push
call
jbe
cld
xor
adc
aas
push
sahf
aad
pushf
sub
in
out
inc
and
mov
fsubrl
jmp
xchg
xor
sbb
std
adc
out
inc
insl
loop
shr
insl
pop
pop
jmp
loope
cmc
out
mov
lock
mov
xchg
fisubrs
mov
xchg
jmp
cmp
push
jecxz
mov
in
rclb
or
sbb
aas
adcl
cli
out
mov
cltd
mov
fwait
aam
jecxz
stos
cmc
iret
dec
in
cmp
cli
add
rol
in
inc
cmp
and
and
push
inc
ja
icebp
xchg
addr16
inc
push
jl
lcall
cli
in
idivl
addr16
jne
popa
sub
ljmp
ss
dec
sub
fists
and
cld
lret
scas
push
ret
push
hlt
int
push
and
loop
jne
rolb
test
inc
addr16
push
ss
pushf
xchg
out
pop
sub
cmp
stc
out
test
es
inc
outsl
pop
aad
sti
out
shll
fdivrs
add
dec
stos
sbb
arpl
jbe
mov
dec
add
mov
pop
test
je
mov
or
pop
cmp
ret
sbb
xor
xchg
lcall
cmc
mov
stos
jmp
cs
andl
push
mov
popa
jno
rcrl
jo
mov
int
mov
mov
loop
xor
mov
addr16
jno
icebp
pop
ret
mov
test
scas
sub
adc
lods
inc
push
outsb
adc
icebp
jae
push
mov
xchg
mov
movsb
test
push
lea
dec
negb
push
or
add
cld
cli
and
cmpsl
mov
xchg
sub
jne
cwtl
ret
test
lret
inc
loope
fadds
inc
in
push
dec
roll
popa
cmp
mov
inc
push
test
xchg
aam
lahf
jae
lods
xorb
add
sub
adc
test
cltd
loopne
dec
jmp
push
inc
dec
mov
jns
test
vandps
test
mov
inc
pop
cvtps2pd
decl
cmpsl
mov
add
out
bnd
jecxz
daa
and
xor
mov
sub
xor
loop
ja
xchg
inc
ja
gs
jb
insb
dec
or
lret
lea
add
sbb
or
cs
lret
in
iret
in
mov
inc
cmp
lods
lods
sub
push
and
gs
orl
mov
add
and
push
outsb
jge
push
add
inc
negb
push
aaa
pop
push
popa
jns
sub
add
imul
xor
cmpsb
jg
out
sub
inc
jne
inc
or
stc
negb
shl
filds
mov
dec
imul
rcll
pop
out
loopne
je
dec
pop
push
xchg
cmpsb
cmp
sbb
ficoms
shll
inc
arpl
sbb
outsb
jae
rolb
aad
add
stos
mov
mov
sub
cwtl
pop
outsb
js
mov
pop
mov
jnp
mov
mov
add
jo
out
jg
stos
mov
cmp
jl
push
sub
push
popl
shld
sahf
jne
rorl
mov
inc
and
xor
dec
jmp
adc
movsb
ret
jno
add
sub
pop
push
je
aam
aaa
and
fcoml
jg
lods
cmp
mov
fwait
movsl
int3
adc
fadds
jmp
test
inc
cld
jnp
ja
pop
shrl
mov
call
sbb
inc
test
dec
sub
popf
jl
xchg
xor
push
idivb
mov
lahf
inc
jno
fldt
mov
pushl
cmp
loope
ss
mov
jl
mov
pop
adc
inc
divl
jns
mov
aas
insb
fsubrs
cmp
bound
mov
out
push
cwtl
movsb
mov
call
dec
push
pop
mov
lea
pushl
jae
jno
or
into
sahf
xchg
stc
call
imul
out
push
outsb
lea
inc
dec
out
pop
pop
push
cmp
cmpsb
lods
sbb
and
sbb
das
fs
mov
arpl
sahf
dec
test
in
pop
aas
adc
xorb
dec
inc
popf
add
adc
jmp
push
sub
xchg
cmpsl
mov
sbb
in
out
sub
popf
push
cmp
pop
jp
jl
mov
and
outsl
rclb
jge
int
fcompl
fildl
sbb
or
arpl
pop
in
mov
and
sarl
cmp
rolb
negl
pop
jno
fisubrl
dec
pop
dec
pop
sub
mov
daa
push
mov
out
loopne
jle
adc
mov
mov
xlat
pop
stos
lods
sbb
arpl
pop
out
insb
sti
sbb
mov
shll
pop
into
jno
aas
inc
push
sarl
pop
adc
adc
or
pop
out
fisubs
push
int3
movzbl
xchg
cmc
js
cmp
pop
add
movsl
mov
jne
push
add
movb
cmp
inc
in
sbb
pop
cmc
sub
sbb
fsubl
fldenv
rcrl
push
jg
mov
push
add
sub
jge
daa
lods
fcomps
fs
adc
mov
xchg
pop
in
cmpsb
in
adc
fistpl
fwait
cmc
pushf
push
das
or
push
push
sti
iret
sbb
fwait
xchg
push
sbb
int3
dec
lock
mov
xchg
inc
cmp
std
and
std
jne
mov
js
cmp
notl
xor
mov
js
fninit
jge
test
push
cmp
pop
mov
pushf
and
lcall
pushf
in
sbb
add
pop
std
sbb
fwait
push
xchg
inc
xchg
mov
push
lahf
bound
fnstsw
dec
data16
jbe
fmul
and
add
jbe
bound
sub
fadd
cli
or
xchg
inc
sbb
inc
call
pop
cs
xor
out
xchg
ret
shll
sub
mov
xor
xorb
data16
jmp
out
push
mov
cmp
sbb
jg
add
nop
mov
pop
fcmovne
stos
arpl
leave
in
movsl
daa
push
sub
lods
iret
push
xchg
mov
sar
mov
ficoml
and
aam
add
outsb
or
pop
jae
enter
mov
sbb
and
cmp
or
movsb
sub
jne
cmpsb
xor
cs
inc
xchg
gs
hlt
or
fdivrl
jae
push
into
push
pop
add
dec
pop
mov
fnstenv
jle
mov
aam
sub
pop
leave
inc
mov
xor
jecxz
dec
jb
dec
aam
enter
fisubrl
cmp
sysenter
mov
adc
outsb
enter
ja
cmp
cltd
fwait
jp
sub
or
je
xlat
movsb
insb
fsubl
mov
dec
ret
or
mov
mov
leave
fs
pusha
mov
cmp
mov
stc
addr16
xor
out
pop
cld
cltd
int
push
cmp
enter
mov
mov
xchg
js
scas
dec
jne
stc
sub
mov
push
and
mov
cmp
jmp
movsb
and
pop
lcall
into
and
loope
push
test
cwtl
js
and
mov
nop
jns
jnp
movsb
out
mov
sub
pusha
cs
sub
inc
mov
add
xchg
and
mov
adcb
into
dec
inc
out
xchg
inc
imul
stc
cmc
xchg
mov
fidivrs
xchg
cltd
sahf
mov
out
pusha
pusha
orb
push
leave
mov
inc
and
ret
mov
test
call
ds
dec
inc
fcmove
sub
jp
inc
jne
adc
cltd
fs
test
lret
bound
je
das
ret
mov
or
sbb
sub
lods
stc
pop
mov
adc
add
dec
aam
nop
jnp
jecxz
and
mov
mov
cmpsb
lods
jns
and
cs
mov
and
add
sub
mov
movsl
lret
jp
adc
adc
out
push
sub
or
outsb
loop
movsl
les
sub
sbb
xchg
add
pop
aas
push
stc
push
jl
push
ds
rcll
and
xor
mov
lcall
sbb
jg
cmp
mov
ret
xor
pop
int
xchg
push
jb
sbb
cmp
dec
out
xchg
int3
xor
scas
fidivrl
popa
fstpt
push
repnz
imul
daa
imul
xchg
das
js
push
jns
xchg
inc
pop
mov
daa
jb
sub
movsl
push
movsb
or
test
fmuls
cs
mov
repz
add
lock
lret
rclb
jle
in
ss
push
call
pop
ficompl
into
inc
inc
and
adc
xlat
cmpsl
in
add
mov
mov
mov
pop
leave
xor
mov
mov
ds
andb
sub
adc
clc
mov
xchg
addr16
sub
cmp
cmp
lcall
jecxz
push
mov
jae
pop
pop
cmp
cmp
sbb
add
xchg
mov
mov
ja
cld
jg
cltd
cmp
test
jae
xchg
call
xchg
lods
insl
push
cwtl
stc
das
add
cmp
hlt
mov
lods
nop
fistl
in
lea
jno
mov
adc
adc
push
cltd
sub
leave
das
lods
mov
in
mov
aad
outsb
jb
ljmp
mov
mov
push
pop
cmc
aas
add
mov
fcomps
adc
test
std
cbtw
pop
xlat
push
mov
sbb
adc
ja
cmp
dec
cmp
cwtl
dec
mov
mull
xlat
push
loop
jge
out
movsb
int
sbb
adc
inc
lock
lds
rcrl
sti
cmp
mov
out
icebp
cltd
dec
push
ds
std
push
ja
daa
jmp
dec
dec
mov
mov
cmp
cwtl
add
lea
mov
jb
jbe
sahf
test
push
je
loope
lret
lods
sbb
ret
ljmp
arpl
push
xchg
and
mov
out
mov
xchg
pop
mov
das
leave
sarl
mov
movsb
sbb
sbb
dec
ja
push
mov
mov
aad
dec
cmpsl
sub
sbb
adc
cwtl
xchg
cmc
mov
push
js
or
mov
xlat
fldt
fwait
sub
stos
jb
adc
pop
js
imul
je
cmp
xchg
or
js
in
mov
xlat
cmp
aas
pop
pop
xchg
jle
ret
xor
add
lods
test
insl
nop
xchg
bound
mov
jnp
bts
mov
pop
jl
lea
mov
scas
movsb
sub
cmp
xchg
xchg
dec
enter
stos
inc
mov
aas
lods
aad
push
push
or
push
xchg
test
arpl
lret
and
dec
stos
jle
ror
arpl
sub
xchg
mov
test
inc
ds
pop
xchg
cmp
jne
inc
leave
jle
arpl
inc
and
mov
and
xor
das
int3
mov
lahf
jbe
test
xor
addb
insl
mov
or
push
add
inc
gs
add
mov
or
out
lods
repnz
clc
mov
add
lea
lods
and
sbb
add
shll
sub
xor
fs
cmp
shrl
movsb
ds
or
imulb
sbb
mov
hlt
nop
data16
mov
sub
test
inc
movl
inc
sub
fcomps
add
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
popa
mov
dec
pop
jl
lds
or
and
xchg
xchg
add
xchg
and
idiv
push
movsb
ds
cs
mov
ret
push
shl
adc
data16
sub
in
add
xchg
movsl
es
addl
imulb
dec
es
mov
jb
jp
stos
es
sub
fdivl
jno
lods
jo
icebp
cmp
mov
in
inc
nop
dec
stos
jae
hlt
mov
jecxz
fdivl
jecxz
cmp
push
cmp
push
mov
dec
cmpb
lcall
mov
or
xchg
cmp
push
aam
test
push
xchg
and
inc
push
and
outsl
js
loope
out
sub
dec
in
decb
movsl
or
loop
push
aam
jp
xor
ja
std
dec
pop
outsb
outsl
mov
shrl
pop
arpl
push
addl
sbb
jl
loopne
rol
cmp
sbb
dec
fucomip
xchg
or
rorb
or
sbb
js
adc
xor
dec
push
mov
jg
lea
icebp
mov
mov
cmp
push
mov
ds
xlat
pop
loop
xor
lock
imul
cmpsb
inc
mov
fisttpl
sbb
dec
enter
inc
push
jge
add
loop
icebp
clc
test
mulb
mov
dec
cs
xor
lret
in
push
mov
inc
jno
cmp
inc
sahf
push
and
in
sbb
xor
andl
fldl
sbb
sub
pop
and
xlat
pop
shlb
lock
pop
dec
stos
dec
jg
push
pusha
mov
cmp
dec
cld
cmp
sub
pop
js
fwait
pop
lret
fucomip
inc
sub
mov
push
xor
adc
inc
out
cmp
mov
push
xchg
mov
into
xchg
pop
cmpsb
add
cld
nop
pop
jmp
dec
jno
decl
in
aaa
stc
nop
out
cwtl
pop
inc
cmp
push
imul
inc
mov
loop
dec
or
lea
dec
cmp
add
inc
xor
dec
inc
sub
ja
in
push
das
insb
mov
mov
pop
sbb
ljmp
inc
lock
pop
adc
dec
addr16
das
mov
jge
jge
dec
jnp
dec
popf
popl
mov
dec
js
movsl
mov
dec
ficompl
xor
mov
popf
dec
adc
rol
add
push
cmp
movl
sbbb
in
jmp
xchg
cli
lds
stos
loopne
cli
cs
ret
push
jnp
arpl
movsb
mov
es
mov
fistl
adc
or
pop
shrl
test
dec
jle
clc
sahf
lods
lods
movsb
cmc
mov
test
lods
stos
inc
aad
push
nop
imul
jnp
adc
mov
les
mov
sbbl
sti
mov
xchg
mov
add
mov
xchg
cmp
mov
loop
addr16
cli
paddsb
dec
lahf
pop
imul
push
lret
push
push
cmp
or
rclb
lea
mov
adc
je
xchg
rorb
cmp
dec
loope
imul
inc
dec
mov
dec
hlt
je
or
test
mov
mov
or
daa
jl
sahf
popf
paddsw
or
cmp
clc
adc
push
dec
int
inc
rorl
and
stos
lret
orb
mov
fs
xor
xor
mov
cmp
in
das
cmpb
add
mov
daa
pop
sbb
mov
in
jge
push
mov
mov
shll
stos
les
mov
jecxz
inc
mov
or
xor
rcll
andb
dec
addb
out
xor
mov
pop
pusha
lret
gs
inc
inc
ljmp
jmp
scas
xchg
mov
and
mov
cmp
mov
das
shlb
iret
mov
push
mov
pop
sbb
test
push
mov
cmpsl
stos
sub
fimull
fstps
jbe
rcl
in
iret
jecxz
outsb
or
adc
xchg
sbb
xchg
adc
in
fstpl
xor
rcll
push
push
addr16
sbbb
mov
insb
popa
push
sbb
sub
mov
xor
jno
adc
sbb
pop
xchg
push
pop
dec
xchg
fsubl
scas
mov
mov
jno
outsl
xchg
outsb
push
mov
and
cs
ficomps
or
push
stos
xor
stc
shlb
insl
nop
js
dec
das
mov
xor
pusha
pop
xor
fists
fnsave
mov
mov
movsb
test
and
stos
xchg
add
mov
and
test
dec
lcall
cmp
stos
das
push
inc
out
add
push
or
add
cmp
bound
fcmove
repnz
rcrb
pop
push
xchg
jg
mov
inc
pop
in
push
cmp
mov
cltd
les
notl
mov
dec
fists
dec
rclb
lret
xchg
dec
sub
out
push
nop
into
aaa
jne
repnz
inc
jb
fstps
dec
xchg
sar
call
divb
cmc
pop
dec
inc
push
cmp
in
sub
pushf
pop
pop
icebp
inc
sbb
push
pop
sbb
fdivs
xchg
mov
pop
sub
adc
push
dec
jns
jno
popa
add
aam
mov
pop
gs
pop
mov
sub
xchg
js
mov
ret
aaa
dec
jle
jge
mov
fildl
test
cmp
push
jmp
ret
cmp
out
cmp
data16
in
mov
inc
pop
gs
mov
insb
pop
and
dec
mov
out
test
mov
divb
rolb
stos
in
testl
outsb
scas
loop
bound
fimull
lcall
and
rcrb
es
fistl
pop
jo
fstpl
jp
jnp
ljmp
test
out
or
dec
xor
ljmp
cmp
test
lock
fsubr
sub
dec
sub
test
or
mov
loopne
cs
xor
es
mov
cld
or
loope
push
xor
shl
inc
dec
push
into
leave
xchg
subl
lds
mov
push
inc
jmp
and
fldenv
xchg
push
das
iret
add
xor
gs
rcr
dec
cmpsl
and
inc
push
jmp
sub
mulb
test
shl
inc
xchg
enter
and
cltd
cmp
pusha
jno
shrl
outsl
inc
stos
inc
es
jnp
mov
inc
mov
ficomps
fucomi
xchg
sbb
fdivrl
or
pop
mov
cmp
pop
sbb
out
jecxz
ja
and
fsub
aad
out
fincstp
loopne
pop
mov
lahf
and
xor
dec
and
mov
xchg
mov
inc
test
popf
shlb
bound
mov
cli
repz
cmp
mov
cmp
push
test
inc
das
rcrb
pop
popa
jne
mov
dec
jno
mov
push
jle
sub
sbb
cmp
sub
fsubrs
add
loope
loop
jl
mov
stc
mov
enter
xchg
pop
movsl
lock
xor
push
dec
xchg
sbb
push
cmp
xlat
pop
ds
xchg
and
fidivs
and
jb
or
sti
out
add
jl
scas
lahf
mov
mov
mov
mov
fwait
mov
hlt
jecxz
add
mov
cwtl
cmp
popf
mov
mov
sbb
or
enter
leave
jne
or
ss
int
int3
daa
je
aad
mov
mull
daa
rolb
dec
fwait
cwtl
fisttpl
add
cs
xchg
inc
lock
in
add
cmpsl
orb
inc
lds
or
push
lret
add
mov
lret
es
loope
add
xor
jmp
mov
dec
cmp
int3
pop
add
testl
out
notb
jge
cli
add
jle
add
aad
jno
std
outsb
fnstsw
xor
movl
cmp
test
ja
pop
or
lods
test
cmp
call
mov
mov
pushf
outsl
loop
aas
out
mov
movsl
jle
cmpsl
mov
adc
stc
cltd
inc
xor
cmpsl
sub
aas
and
mov
iret
int
push
std
test
and
add
shll
mov
aaa
cs
xchg
arpl
jae
sub
mov
dec
insb
out
inc
aaa
xchg
mov
jno,pn
divl
scas
sub
stos
cli
mov
fldl
sbb
mov
push
fwait
out
cmpl
insl
test
adc
mov
cmpsb
inc
icebp
add
dec
mov
mov
mov
mov
inc
lcall
xchg
cwtl
out
sbbb
xchg
xchg
pop
fistps
andl
push
mov
lret
je
jno
inc
mov
test
in
gs
jge
cmovbe
cmc
ja
repnz
outsb
int
call
les
outsb
sbb
sbb
icebp
and
lods
or
daa
mov
iret
stc
loop
test
sti
lret
mov
sti
imul
jns
in
fnstsw
mov
cwtl
int3
xchg
mov
andb
cld
cmpsb
cmc
push
jl
lods
aaa
dec
jle
js
movl
loopne
nop
xor
ss
jnp
loopne
sub
adc
adc
inc
lods
push
ss
jb
outsb
outsl
scas
cmp
scas
repnz
mov
imull
es
jl
lahf
cmp
dec
add
xchg
out
mov
ret
xlat
lret
mov
xchg
xor
aam
negl
popf
test
js
mov
adc
cmp
jecxz
std
iret
or
rcrl
sbb
xor
cmp
jnp
andl
lret
xchg
add
sub
push
das
mov
push
dec
enter
les
sub
mov
and
movsb
inc
bound
mov
mov
iret
or
je
inc
cmc
xor
xchg
ljmp
xlat
loope
xor
or
push
arpl
add
sub
xor
ljmp
sbb
jg
jl
sub
pop
cmove
cld
test
lods
shll
por
ja
hlt
pop
xor
jmp
mov
push
push
and
or
rorl
movsl
ljmp
imul
lret
adc
sub
movsl
aam
cmp
mov
inc
int3
xchg
and
popa
std
das
add
cli
fucomp
notl
xchg
popf
jle
push
mov
pop
lcall
xchg
xchg
sub
in
imul
aam
inc
adc
test
pushf
add
jl
jnp
xchg
inc
xchg
je
stc
cmp
bound
repz
jg
adc
loope
es
dec
lahf
mov
push
jne
push
push
jg
mov
orl
ds
cmpb
pop
pop
int
inc
push
sbb
repnz
mov
push
outsl
dec
pop
pushf
push
gs
into
xor
and
rorl
ds
rcr
fwait
pushf
or
fidivs
icebp
cmpsb
mov
jecxz
jl
lods
jbe
cs
push
sbb
lods
inc
lods
mov
in
pop
fdivrl
pusha
mov
ljmp
jp
fdivl
jle
rcl
jno
push
inc
xchg
out
jmp
push
rol
push
lods
jmp
or
push
jo
or
mov
xor
inc
fcoml
jmp
cmpsl
pop
scas
mov
insb
jns
mov
cmp
iret
sbb
dec
jg
daa
ss
mov
pop
sub
jae
mov
mov
cmovne
fmull
pop
pop
push
jo
jno
in
lods
mov
add
xchg
push
into
mov
sub
and
fisubl
add
push
cs
das
inc
add
dec
cmp
cmp
cmp
sti
bound
sbb
daa
cs
rcrl
aaa
add
jp
lods
std
cmpsb
cmpsb
es
test
arpl
xor
mov
xchg
call
imul
cwtl
sbb
inc
int
pusha
shlb
lret
xchg
pop
cmpsl
adc
cmpsb
cmc
and
daa
jo
and
push
fwait
mov
push
mov
lds
mov
pusha
and
mov
or
mov
pop
xchg
xor
inc
bound
mov
push
xor
adc
cmpsb
sub
jno
stos
inc
push
sti
xchg
jae
sub
iret
mov
insl
aam
scas
mov
sub
or
dec
inc
xlat
push
jge
pushf
aaa
xor
fcos
push
in
dec
jns
push
jno
push
add
xchg
pop
dec
in
lret
xor
sbb
sbb
pop
add
or
leave
push
aaa
or
mov
mov
in
sahf
add
pop
dec
dec
arpl
pop
cmpsb
out
pop
sbb
mov
lock
lret
mov
sub
push
jp
leave
and
xchg
xor
sub
sub
cmp
in
ds
test
loope
xchg
outsb
or
dec
sub
arpl
insb
vsqrtpd
nop
mov
dec
dec
lret
add
xlat
pop
mov
ret
in
popa
cli
cltd
lcall
ret
jno
lret
sub
jno
add
add
pop
adc
mov
ret
jns
xchg
pop
ss
sbb
lahf
inc
cmp
in
out
xchg
int
pusha
push
sub
push
mov
aaa
add
mov
mov
inc
push
or
mov
imul
sbb
in
mulb
push
test
pop
jmp
ljmpw
push
frndint
push
hlt
iret
mov
or
into
lret
dec
mov
sysexit
pop
outsl
and
rorb
fwait
in
aam
and
les
xor
cmpsl
lock
inc
sub
gs
push
aaa
sub
aas
mov
lods
jnp,pt
in
addb
adc
jbe
lods
mov
push
pusha
or
jge
mov
mov
js
mov
jo,pt
mov
adc
xchg
cmc
fiaddl
dec
add
mov
mov
pop
sbb
ds
jg
mov
fxch
mov
aad
jmp
rolb
jns
sbb
in
adc
mov
cli
cmp
imul
or
dec
out
push
aaa
pop
cmc
cwtl
aaa
je
outsl
adc
jge
mov
xor
inc
xchg
xchg
ds
inc
sub
sar
and
pushf
shlw
pop
std
inc
sbb
in
and
neg
mov
ret
dec
test
mov
pop
xchg
mov
add
adc
or
loop
out
jmp
loop
mov
sbb
mov
decb
add
stos
fmuls
jns
pop
sbb
xor
imul
cmc
cmp
movsb
rorl
dec
sahf
les
aad
loope
insb
or
push
inc
and
inc
jp
fmul
pop
ljmp
cmp
cmp
jbe
add
out
adc
mov
dec
out
pop
outsl
lods
add
insb
xchg
inc
dec
jecxz
out
nop
push
add
inc
loope
stc
rcl
pop
aad
cmc
or
and
lahf
out
aas
adc
and
in
pop
inc
iret
aam
icebp
lahf
in
mov
push
inc
scas
pop
sbb
std
or
pop
pop
or
sbb
or
cli
lock
arpl
mov
popf
cmpsl
inc
stc
mov
jnp
ljmp
push
and
sahf
shl
loope
loopne
push
scas
jnp
jno
pop
dec
or
adc
inc
sahf
pusha
sti
mov
lahf
adc
cmp
and
negb
mov
mov
xor
hlt
add
dec
fildll
jne
sti
dec
pushf
jno
sbb
mov
es
pushf
lods
cmpsl
hlt
lahf
into
xor
xchg
add
xchg
jno
push
and
addr16
mov
push
cmp
push
test
mov
in
addb
popl
jle
icebp
add
ja
repnz
push
dec
jb
cmpsb
into
cwtl
push
jp
cmp
cmp
pop
daa
add
cmp
hlt
mov
loop
in
mov
out
bound
inc
cmp
mov
test
push
cli
mulb
add
sbb
mov
fcmove
rcll
inc
xchg
popa
stc
mov
gs
pop
jecxz
sti
pop
adc
push
jge
jno
sub
ja
rorb
add
lret
pop
std
test
scas
inc
pop
aaa
mov
mov
dec
incl
dec
mov
xor
or
vsqrtss
rcr
sub
movsb
lret
cmp
or
adc
je
cmp
pop
mov
mov
in
pusha
in
std
jge
xor
jb
adc
sbb
loopne
jnp
ret
enter
ss
dec
cli
or
rorl
xlat
inc
bound
jno
xor
sbb
ja
cmp
mov
mov
dec
adc
xchg
mov
sbb
dec
jecxz
aaa
lret
sbb
cmp
test
mov
ljmp
or
sub
shlb
pop
cmp
iret
mov
fistps
pop
je
insb
sbbb
cld
fsincos
add
sbb
cmpsb
sarl
sbb
add
xchg
jl
pop
ljmp
stc
xor
cmp
mov
and
ret
aas
loopne
scas
push
je
outsl
mov
xorl
sub
lcall
push
les
push
fs
imul
repnz
mov
in
ljmp
sub
orl
insb
out
ret
fbstp
scas
ja
lock
sub
dec
jg
pop
mul
or
xchg
fwait
xchg
push
loope
sub
push
outsb
or
outsb
fnstenv
jb
adc
mov
pop
jnp
ljmp
or
or
fildl
arpl
push
sub
int3
jge
inc
pusha
mov
push
mov
rorb
inc
adc
cmp
lret
out
lea
insl
mov
test
daa
cwtl
add
int
cmp
out
sbb
lods
aam
sub
lods
lret
and
jno
lcall
add
jns
loop
sbb
xor
icebp
mov
mov
push
int
bound
pop
xor
ja
hlt
es
adc
mov
mov
mov
lret
gs
leave
iret
sbb
cld
pop
dec
lds
outsb
jbe
jg
pop
mov
cmp
jle
lea
ds
lock
aas
out
rcll
repz
push
and
xlat
fs
adc
and
mov
lds
lcall
push
mov
push
xchg
mov
xchg
cmp
or
mov
adc
or
ds
fidivs
and
lret
in
jmp
dec
pusha
and
out
fwait
rorb
xor
pop
adc
inc
xor
mov
jmp
cmpsl
es
push
stos
ja
out
mov
jp
jp
sbb
dec
add
out
enter
pop
lock
std
insb
hlt
imul
jge
sar
loopne
xchg
xchg
or
mov
ret
lods
or
dec
jb
test
dec
loope
jbe
mov
sub
sbb
push
in
mov
push
mov
aam
xchg
sub
xor
hlt
inc
test
xchg
mov
push
stos
arpl
push
aaa
push
xchg
pop
sbb
test
sbb
jbe
pop
rolb
jne
pop
dec
jnp
mov
and
dec
rorl
ret
mov
pushf
and
in
ljmp
add
and
lods
or
mulb
fldt
cmc
pop
out
sbb
loop
ret
mov
inc
repnz
adc
jle
xchg
xor
andb
jns
sbb
aad
out
jp
xchg
add
xchg
test
scas
cmp
loop
inc
cmpsb
ret
sbb
data16
dec
aas
add
dec
cmp
or
fs
adc
or
xchg
addr16
and
out
push
or
cmp
in
cmpsl
mov
adc
xor
xchg
jne
sbb
aad
push
lock
loopne
xchg
adc
adc
adc
loope
pop
and
and
ret
adc
jno
mov
rcr
movsb
ja
cmp
adc
mov
mov
imul
dec
das
xor
and
adc
movsb
aaa
repnz
scas
pop
rcll
mov
sub
cld
lea
loop
mov
jae
mov
cmp
pop
adc
push
inc
inc
in
mov
pop
pushf
lret
scas
jmp
mov
inc
ds
jmp
rorb
pop
cmc
icebp
and
xchg
pop
adc
shll
xor
sahf
mov
psllq
inc
push
sbb
je
sub
jnp
sbbb
jge
insb
cmpl
mov
sbb
add
out
push
sub
repz
push
das
lcall
jne
adc
inc
fwait
xor
imul
push
insl
scas
dec
jecxz
addl
lds
subb
xchg
jp
movsl
adc
inc
loop
xchg
cld
mov
xor
fs
insl
or
xchg
jp
sbb
sbb
xor
mov
mov
andl
xor
imul
jle
stc
sub
aas
mov
out
inc
and
lret
sbb
xchg
cmpsb
movsb
push
push
fsts
les
test
add
jle
cwtl
mov
xorl
push
in
imull
and
pop
and
inc
xchg
hlt
xchg
add
cmp
test
xchg
cmc
lea
mov
mov
inc
inc
xlat
cmc
outsb
mov
lea
push
sub
pop
xchg
or
inc
mov
mov
and
dec
mov
out
sbb
pop
mov
mov
imul
push
xchg
sbb
mov
dec
or
jmp
arpl
mov
fisubl
cmp
and
add
xor
scas
jecxz
push
std
insl
sarl
jle
adcl
mov
inc
xor
aad
cltd
pop
and
cmp
int3
lods
cmp
loopne
push
insl
xorb
icebp
sub
shlb
mul
mov
pop
shrb
sub
push
loopne
push
loop
sbb
xchg
call
or
adc
lds
dec
ret
fdivr
std
or
pop
jmp
data16
out
mov
shrb
lods
lcall
jle
dec
aas
addr16
pop
daa
movsl
jg
add
dec
aas
sbbl
out
test
shlb
pusha
dec
mov
mov
xchg
in
das
mov
or
ret
pop
mov
into
sub
fldt
mov
sub
and
rcrl
xchg
in
and
xchg
adc
aam
imul
inc
sar
cmp
xchg
and
cld
sbb
cld
jp
sub
sbb
mov
sub
push
push
mov
jl
loop
mov
lret
add
loope
rcll
and
ja
or
add
pop
cmp
jno
aam
in
aam
lock
div
jno
sub
incb
fmuls
sahf
adc
xor
sbb
addr16
sub
dec
enter
arpl
add
push
dec
xor
push
gs
adc
adc
mov
pop
out
leave
xorb
inc
roll
fcoms
cmp
dec
test
aas
dec
leave
push
xlat
lcall
cmpsl
in
dec
in
insb
mov
ljmp
mov
inc
pushf
sub
inc
xchg
fstpl
adc
dec
cmp
ja
pop
lea
pop
in
sahf
jns
fisubl
jae
mov
vpmacssdd
pop
mov
sbb
fdivs
std
insl
dec
cmp
out
cli
std
mov
iret
dec
inc
pop
into
es
push
scas
jo
push
mov
xor
hlt
shlb
cli
and
adc
jp
cmp
loop
mov
add
add
cmp
stos
cmp
aad
pushl
test
push
into
inc
inc
xchg
int3
or
mov
lods
cmc
sbb
fcmovb
cmp
test
xchg
dec
insl
loopne
sub
rcr
out
jp
shr
mov
pop
arpl
cmp
test
hlt
cli
mov
cmpsb
and
lods
loope
out
xor
test
sahf
mov
jg
lret
test
imul
xor
popf
or
aad
xchg
loop
xor
pop
cmpsl
cmpsl
mov
outsl
scas
bound
adc
dec
mov
mov
call
insl
movsb
jmp
push
sub
pop
xchg
and
xlat
add
pop
pop
jb
mov
mov
jbe
lret
loopne
xchg
repnz
push
sbb
rcrl
hlt
cmp
dec
jge
jmp
addr16
sarb
pop
ljmp
ja
push
cmp
mov
push
cld
movsb
stc
or
fsub
adc
mov
sbb
dec
repnz
inc
test
insb
lods
add
xchg
hlt
stos
sahf
add
cmp
mov
cmp
cmp
xchg
in
xchg
ret
adc
shrl
sub
add
jb
bound
repz
mov
push
and
fisubrs
xor
mov
jg
lret
mov
mov
je
pop
ret
inc
test
jns
bts
dec
scas
jae
mov
jmp
jae
or
rol
movsl
scas
inc
pop
mov
cmp
sub
add
ret
jbe
lods
mov
psadbw
lcall
gs
pop
add
jne
mov
mov
icebp
fldcw
je
test
dec
enter
jae
iret
mov
addl
ret
test
insl
cmpsl
or
int3
adc
les
in
stos
leave
out
ss
sbb
push
ljmp
inc
loop
add
test
jl
dec
mov
popf
pusha
ret
inc
icebp
pop
fdivrs
inc
cmp
in
adc
xchg
dec
sbb
rclb
xor
fmul
je
stc
push
inc
test
pop
jae
push
push
mov
or
scas
pop
mov
dec
or
lret
or
jbe
or
lcall
jnp
pop
jns
inc
jg
fiadds
inc
in
cmp
test
push
adc
dec
jne
cmc
addl
ret
push
js
enter
arpl
lret
outsl
inc
ror
xchg
xor
adc
lea
mov
mov
insb
inc
movsb
inc
out
js
lock
dec
push
mov
jge
jno
aaa
or
or
or
lds
psubsw
push
push
mov
pop
jno
les
imul
pop
sub
les
jecxz
adc
les
icebp
std
in
sbb
mov
inc
mov
add
xchg
jne
push
dec
scas
jge
xor
sbb
cmpsb
std
cmp
clc
mov
lods
aam
jl
mov
mov
push
cmp
in
sub
mov
pushf
push
cs
push
cmp
cmp
sub
jb
mov
jbe
sti
pop
popf
int
in
jge
xchg
push
jecxz
int3
cld
repz
sub
js
imul
pusha
push
fisttps
push
push
dec
inc
dec
lods
in
and
mov
push
test
movsb
ljmp
in
int
adc
outsl
popa
outsl
in
daa
jmp
xchg
aaa
insl
ret
and
mov
pop
arpl
ss
mov
and
mov
sbb
rcrl
xor
nop
stos
aam
inc
inc
mov
jmp
adc
pop
das
test
mov
loop
movsl
xchg
aaa
test
xor
es
mov
lret
rcrl
pop
cli
aam
cmc
lahf
pop
imulb
pavgw
test
pop
pop
xor
xlat
enter
call
subl
mov
jno
xor
jle
adc
pop
sbb
xor
push
jl
inc
mov
aam
mov
insl
jne
fwait
and
mov
xchg
test
int
push
dec
push
lods
or
fdivs
movsl
setl
dec
popf
daa
repnz
add
mov
movsl
int3
sub
in
aam
mov
aam
jge
rolb
sub
xchg
lea
inc
mov
in
cli
cwtl
aas
jl
iret
pop
dec
roll
outsb
loopne
dec
in
scas
mov
mov
shrb
jne
cmp
mov
outsb
aas
jo
addr16
je
pop
pop
sub
repz
out
jmp
test
test
fbstp
or
mov
nop
dec
cmc
sbb
cwtl
jno
scas
dec
jae
movsl
mov
stc
jno
pop
sbb
xchg
add
xor
mov
sarb
lods
sbbl
xor
jae
in
jl
cli
jecxz
cld
or
mov
test
sub
andb
sbb
dec
shrb
xchg
adc
jge
cmpl
loope
lret
inc
mov
mov
loopne
data16
jle
inc
push
out
lods
mov
mov
lahf
mov
insb
mov
ds
sbb
push
adc
idivl
cmc
push
clc
dec
add
xchg
add
popa
xlat
mov
mov
adc
cmp
rol
push
in
pop
sub
xchg
out
movsb
rcrl
push
dec
add
sahf
std
xchg
dec
in
daa
bound
adc
movsb
dec
jecxz
mov
dec
icebp
jns
xchg
shlb
cmp
dec
and
mov
shll
stos
xchg
repz
repz
fcoms
xchg
scas
cmp
leave
sub
push
sbb
lods
in
mov
adc
in
les
ljmp
sub
push
rcll
push
lds
pop
ss
jo
popf
or
cmp
shll
decb
adc
jnp
stc
pop
aas
adc
pushf
xchg
jp
sti
fisttpl
mov
inc
scas
adc
shld
jno
jae
inc
xor
adc
push
in
lods
out
push
adc
sbb
push
cmp
inc
hlt
add
paddsb
int3
shll
jle
push
shll
mov
rorl
mov
scas
into
popf
scas
pop
push
popf
insb
push
out
sbb
test
dec
popf
std
loop
fimull
add
ret
or
js
fidivrl
shl
stos
je
es
loopne
pop
arpl
jge
add
rclb
pop
jg
push
stos
lret
pop
sbb
lcall
outsb
push
mov
addr16
loope
ret
mov
cmp
pop
xor
cmp
push
nop
mov
adc
fwait
mov
repz
push
lods
js
scas
out
inc
es
adc
in
imul
movsb
sub
imul
dec
stc
xchg
xor
imul
xor
jmp
lfs
and
fs
mov
in
jg
mov
xchg
xchg
push
jns
test
jns
inc
pop
xchg
mov
popa
push
jecxz
iret
adc
ljmp
sub
add
or
sub
loope
and
push
push
clc
push
scas
cmp
mov
or
call
clc
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
xchg
fistpl
pop
jl
sub
data16
dec
test
pop
mov
cmp
sub
mov
aam
cli
jne
adc
dec
daa
lds
jns
cmp
xor
add
adc
jmp
bnd
lods
cmp
mov
cmp
jmp
fxam
jae
fisttpll
sub
pop
push
pop
hlt
cwtl
xchg
fwait
pop
xchg
clc
inc
addr16
popa
insl
out
mov
or
shll
mov
sbb
push
and
int
jg
idivl
leave
dec
mov
jo
out
push
shrl
mov
rol
xchg
mov
mov
popa
mov
cltd
aad
xor
xchg
nop
ss
insb
jl
popa
pop
sbb
or
pushf
push
ljmp
stc
xchg
fisttpl
adc
ljmp
pop
adc
popf
test
mul
add
dec
out
mov
gs
jge
dec
es
or
sbb
push
in
or
mov
inc
ss
aad
mov
sarl
js
sub
sarl
xor
scas
iret
fwait
adc
or
fs
push
mov
int
sbb
test
sub
dec
stos
mov
mov
sub
mov
int3
jge
xchg
mov
sbb
xchg
sub
inc
stos
in
notl
mov
pop
push
lds
add
movsl
mov
or
lret
xor
popf
add
xchg
int3
cwtl
ret
lods
add
xchg
lods
fwait
sarb
in
movsl
pop
xchg
xor
push
loopne
inc
xchg
out
adcb
cmpsb
fcoml
sbb
push
insl
fidivs
push
lret
stc
cmp
daa
mov
inc
fimuls
sub
pop
xor
lods
call
in
xor
adc
dec
rol
fcoml
mov
movsl
ret
dec
scas
in
adc
int
fbld
int3
adc
orb
stos
xchg
mov
clc
cmp
mov
mov
ljmp
outsb
dec
lods
xor
xchg
dec
insb
cmc
adc
add
outsb
nop
or
loopne
push
aaa
push
addl
aam
es
ret
push
mov
ficomps
fsubrs
inc
push
or
mov
or
loope
scas
loopne
sahf
or
push
cli
sti
push
lret
inc
push
repz
fiadds
nop
cmp
jmp
jmp
in
mov
xor
icebp
popa
ret
adc
xor
divl
adc
clc
ja
popa
cld
bound
mov
cmp
cmpsl
and
lret
adc
cli
ficoml
mov
icebp
xchg
in
clc
mov
inc
mov
shr
sub
push
fdiv
xor
mov
and
xor
aas
sahf
dec
repnz
call
cli
push
lea
sub
pop
jns
jecxz
int3
pop
fiadds
pop
scas
insb
daa
sbb
ja
inc
pop
pop
fnstsw
sub
shlb
addb
mov
je
sub
mov
push
mov
cld
mov
sub
inc
mov
jmp
test
cmp
mov
cwtl
clc
add
xchg
lock
ja
mov
movsl
dec
mov
inc
xor
lahf
hlt
push
sbb
aam
data16
rcll
jo
sub
mov
loop
mov
pushf
dec
sbb
movsb
repz
hlt
dec
shl
lret
cmpsl
xor
call
test
outsl
mov
lds
jg
dec
nop
sbb
fldcw
jns
dec
dec
hlt
icebp
jl
sub
inc
rcrl
mov
jae
inc
or
push
je
adc
scas
in
pop
mov
mov
loope
sbb
mov
in
mov
stos
daa
pop
test
mov
push
ja
add
or
scas
nop
mov
stc
mov
mov
movsl
iret
or
movb
ljmp
scas
sti
mov
inc
sbb
xor
sarb
inc
push
push
xor
inc
inc
mov
push
rcl
cmp
mov
enter
jbe
jbe
xchg
sub
fcompl
pop
mov
mov
xchg
aad
adc
dec
movsb
adc
inc
mov
xchg
outsl
sahf
out
das
mov
pop
xor
mov
aad
jns
daa
int
and
xchg
xor
test
cmp
and
xchg
icebp
lods
pop
nop
cmp
pop
scas
lahf
inc
mov
fbld
aad
add
sub
sub
cmc
pop
pop
add
les
out
scas
push
pop
sti
out
sub
dec
dec
xor
mov
inc
insb
movsl
in
out
stos
in
jecxz
addr16
mov
cltd
rorb
xchg
fimull
sbb
arpl
fistpll
cli
repz
sub
aam
scas
shlb
iret
divb
mov
scas
movsb
fstps
jmp
lods
inc
imul
add
cmpsb
jb
pusha
lahf
fstl
leave
xor
adc
jl
xchg
sahf
dec
mov
and
in
sub
rcrl
aaa
adc
fisubrl
scas
daa
fwait
cmp
inc
cwtl
push
sub
xchg
and
call
inc
jbe
fstpt
xchg
adc
int
mov
xchg
loope
cwtl
subl
dec
scas
dec
push
xor
cld
lahf
cmpsb
mov
jo
out
xchg
fisttpl
sub
mov
sbb
mov
shrl
incb
or
inc
adc
mov
outsl
jle
stos
fldenv
pop
or
ds
pushf
lret
pop
scas
in
xor
arpl
lcall
adc
call
idivl
sub
scas
cwtl
ret
fildl
mov
pop
ljmp
and
mov
pop
aam
mov
mov
fstl
bound
lcall
sub
dec
ret
mov
aad
outsl
push
adc
roll
and
out
in
add
fcmovnb
nop
enter
xor
mov
int
or
mov
sbb
mov
or
adc
inc
push
into
sub
or
sbb
sub
stc
dec
mov
aas
outsl
imul
xchg
sahf
fsubrs
and
fidivl
bound
leave
daa
bound
nop
and
mov
mov
fsubrl
inc
lret
adc
mov
mov
xchg
cmp
movsb
mov
cmp
xchg
pop
pop
and
add
xchg
fnstsw
loope
mov
lret
mov
inc
push
insl
movsl
cmp
lods
add
cwtl
sahf
and
lods
jge
pop
js
sbb
xchg
fwait
sahf
mov
xor
clc
xor
add
inc
dec
jne
adc
inc
pop
leave
cmp
rol
cmp
movl
mov
push
inc
negb
enter
rclb
repnz
mov
inc
xchg
cmp
cmpsb
out
pushw
dec
loop
or
js
lret
inc
cmp
jo
mov
mov
and
mov
cmp
and
ds
xchg
aad
movsl
cmc
pop
cmp
or
aam
inc
fcomip
mov
xor
or
cmc
mov
jmp
icebp
jmp
test
cmp
push
pop
add
adc
adc
jmp
sbb
fistpl
shll
mov
lods
paddusb
into
xchg
pop
out
cmp
and
sar
dec
negl
gs
clc
xchg
sbb
xor
dec
inc
sub
testb
dec
out
std
xor
rclb
mov
cmp
addr16
xchg
lods
xor
push
mov
stos
pushf
mov
cltd
pop
pusha
inc
mov
sti
mov
pop
or
inc
ret
mov
pop
aas
loopne
enter
xchg
pop
jbe
jl
or
shll
sub
xor
pop
or
out
cmpsl
add
pop
xchg
lahf
push
scas
adc
icebp
xlat
call
jp
outsl
push
mov
in
nop
lea
and
lahf
lret
mov
cmpsb
sub
repz
fwait
push
lahf
subb
rorl
cmpsl
int
push
stos
push
mov
adc
sarb
shrl
nop
pop
inc
pusha
mov
in
pop
pop
subl
aam
in
push
jle
int
adc
push
shrl
xor
sbb
imul
jecxz
stos
jge
andb
jb
sub
lods
mov
cmp
jno
jg
pop
mov
stos
lcall
sub
mov
xchg
sti
or
out
and
or
arpl
sub
mov
xchg
lock
adc
addr16
mov
icebp
sub
adc
mov
mov
fsubrs
cmpsb
adc
xor
imulb
int3
leave
push
cmpb
mov
jg
les
pop
ja
test
rcr
inc
aad
inc
and
movb
ss
out
scas
out
mov
movsl
lret
lds
fbstp
sahf
lods
aas
push
nop
aas
fldl
mov
mov
pop
divl
xchg
xor
cld
cwtl
mov
push
cmpsl
std
loop
push
sti
jp
jno
call
jb
dec
xor
xchg
push
jecxz
push
pop
push
pop
loopne
sti
xchg
sbb
aad
movsb
shll
cwtl
in
pop
xor
push
adc
roll
xchg
sbb
outsl
fldt
jmp
iret
xchg
stos
ror
push
insb
xchg
lds
xor
mov
adc
outsb
pop
inc
in
jne
dec
xchg
cwtl
rclb
jecxz
ret
add
inc
test
adc
fcoms
std
mov
cld
or
push
in
xchg
add
jne
push
std
push
xchg
mov
lods
sub
cld
ret
scas
mov
pop
aad
insl
test
pushf
push
pop
jo
cmpsb
mov
enter
push
stos
mov
stos
and
enter
orb
jno
sbb
jp
lahf
push
adc
mov
pop
jo
dec
cmp
cwtl
addl
aad
shr
adc
fcmovnbe
adc
xchg
jae
test
mov
or
out
xor
sti
fneni(8087
out
push
jecxz
shrl
mov
cmp
cmp
imulb
test
mov
ljmp
add
mov
dec
stos
add
pop
cmp
sbb
or
cmp
pop
mov
cli
aaa
mov
jb
mov
cmp
mov
stc
cmp
or
jb
pop
movsb
xchg
jne
movsb
leave
mov
int
movsb
jmp
push
xor
pop
jp
sbb
andl
inc
sub
cltd
std
dec
arpl
leave
inc
adcb
adc
lock
mov
test
push
testl
push
inc
adcb
test
push
lock
mov
test
pop
mov
mov
push
and
cs
jle
xchg
xchg
push
imul
aam
iret
fisubs
out
test
and
loop
clc
imul
out
or
push
test
adc
push
mov
add
mov
insl
sbb
mov
mov
scas
test
insl
out
pusha
jae
fsubs
stc
jb
cmp
fidivrl
mov
jecxz
and
stos
pop
adc
lret
andl
xor
shl
mov
sbb
sbb
push
add
jae
sbbl
jo,pt
lods
xchg
rolb
or
jb
dec
pushf
and
cwtl
enter
sbb
pop
xchg
pop
leave
xchg
push
mov
movsl
push
sub
ficompl
adc
out
xor
inc
pop
push
mov
cmpsb
test
pop
cmpb
idivb
inc
push
xchg
ja
fstpt
sarb
inc
fcoml
sti
fistpll
lds
test
mov
gs
inc
mov
sub
ss
into
test
jns
inc
mov
push
dec
shrb
mov
dec
pusha
inc
stc
lcall
mov
xchg
sub
mov
xchg
push
pop
cli
mov
les
cmp
shl
mov
jecxz
ret
pop
jbe
xor
inc
xorl
pushf
mov
add
aas
mov
lods
test
sub
or
ja
and
addr16
dec
loope
jecxz
nop
je
cltd
sbb
push
mov
cmp
rclb
cmpsb
mov
aam
and
cmp
inc
adc
pop
scas
lcall
mov
pop
xchg
je
add
or
mov
add
imul
fdivr
sub
mov
xor
mov
ss
cmpsl
cmp
and
xor
repz
jnp
sub
mov
mov
sbbl
mov
movsl
cmp
ja
adcb
mov
frstor
xchg
jne
xchg
jmp
jbe
lcall
cwtl
mov
mov
cmp
push
jae
insb
ds
jo
gs
in
jne
scas
jb
push
adc
sub
seto
mov
fidivs
sarl
addr16
sub
popl
xor
rcl
mov
mov
ljmp
mov
mov
jp
cmp
push
dec
mov
push
scas
push
xor
das
jg
arpl
xor
aad
pop
pop
dec
in
inc
push
mov
roll
jns
sbb
insb
lea
mov
cmc
push
pop
lods
mov
mov
pop
jmp
push
xchg
adc
mov
mov
adc
stos
mov
mov
pop
das
inc
cld
add
repnz
sbb
test
adcl
push
sub
dec
into
fidivl
or
imul
xchg
and
aaa
cmp
sarl
fs
cmp
jmp
sub
push
and
lds
mov
and
mov
rolb
pop
xchg
xchg
loopne
cmp
imul
dec
inc
xchg
push
sbb
dec
add
or
mulb
pop
inc
mov
mov
push
fisubrl
mov
mov
sbbl
gs
nop
dec
pop
or
in
or
jg
push
lea
fmull
sti
dec
xor
cld
pop
aam
insl
into
mov
pop
inc
ret
stos
dec
cld
mov
cmpsb
or
jne
push
adc
ret
popa
mov
lods
jnp
lods
adc
addr16
leave
leave
mov
xor
ss
push
or
fistl
mov
sbb
flds
inc
lock
and
push
push
adc
mov
add
notl
inc
lock
out
add
pop
dec
rorl
aas
or
mov
push
fstps
je
cmp
pop
or
jne
ds
cmpsl
stos
cmp
sub
push
je
jg
pushf
sub
out
sti
mov
cld
fwait
shlb
and
popa
gs
mov
push
mov
jns
sti
sub
es
mov
cmp
adc
xchg
fdivrl
shll
add
pop
es
test
ret
cwtl
sbb
inc
addr16
out
push
faddl
imul
lahf
test
icebp
sbb
lret
xchg
int
stos
jae
add
pop
xchg
mov
test
addr16
and
jge
push
xchg
lock
fstpt
pop
ss
jnp
js
fxch
out
rclb
aad
mov
lods
or
ret
pop
mull
inc
jge
cmp
andb
xchg
push
sub
sub
add
adc
clc
xor
sub
dec
scas
cmp
cmp
jb
je
jno
ret
imul
sbb
sub
xchg
sub
pop
lods
cmc
fmull
push
pop
adc
iret
mov
cld
jns
idivl
fucom
pushf
mov
fmul
ljmp
cmc
jg
shll
xor
orb
int
adc
inc
mov
mov
jnp
hlt
sbb
and
mov
dec
cmp
and
scas
dec
subb
data16
dec
shll
repnz
sti
rolb
sarb
int
rcl
xchg
fisubrl
pop
push
rcrb
ret
inc
notl
daa
jnp
call
cmp
xor
in
dec
loop
sti
xorl
mov
or
je
inc
std
mov
jne
xchg
and
xchg
pusha
sbb
mov
test
nop
enter
sbb
add
fidivs
addb
mov
adc
push
cmp
cld
movsb
xchg
inc
dec
jne
mov
xchg
push
mov
pop
cmp
loope
sbb
nop
and
mov
fsubrl
sbb
xchg
out
stos
dec
jl
cmp
test
push
jl
push
xor
mov
scas
or
add
push
xchg
stos
aam
fsubrs
shrl
fstpt
out
hlt
add
inc
push
dec
add
stos
dec
dec
cwtl
sbb
sbb
call
fdivrp
es
jae
pop
push
lret
mov
lods
push
jae
mov
jae
lcall
or
imul
into
jg
dec
mov
in
out
xor
andb
loope
stos
fmul
les
int3
pop
out
xor
test
cwtl
ret
mov
fs
stos
mov
and
dec
push
mov
movsb
adc
cld
jae
and
sub
push
icebp
cwtl
xchg
loopne
adcl
push
sbb
xchg
push
or
lods
aad
pop
and
imul
dec
add
loopne
jg
sub
clc
dec
fisubs
dec
inc
arpl
xor
mov
push
add
push
xchg
add
sub
pop
insl
mov
dec
push
shl
mov
xchg
jp
mov
inc
and
repz
loopne
mov
shll
add
call
outsb
xor
xor
imulb
mov
mov
push
mov
in
xor
sub
aaa
sbb
cld
mov
aas
and
mov
mov
aaa
xchg
pop
lret
push
shlb
js
dec
or
jle
adc
insb
sbb
shrb
cs
jl
add
mov
ss
cmpl
lea
dec
add
jecxz
imul
xchg
out
xchg
arpl
pop
ror
pop
test
test
andl
addr16
pop
jne
test
add
rolb
data16
xlat
aam
xor
xor
pusha
lods
push
mov
sub
shll
sub
xor
mov
std
pusha
scas
inc
pop
sbbl
pop
add
jg
stos
mov
adc
in
lret
xor
ljmp
add
arpl
mov
push
fisubrl
add
inc
sub
mull
mov
fsts
leave
cmp
mul
push
ds
in
test
mov
sub
pop
cs
pop
push
mov
inc
mov
push
push
push
push
enter
adc
mov
xchg
dec
pop
test
jg
or
cmp
inc
add
shl
push
ljmp
jnp
ret
mov
je
fs
mov
mov
xor
pop
xor
fistpl
mov
adc
out
repz
cld
mov
into
jb
shrl
mov
or
lcall
or
mov
sub
fs
mov
jmp
xor
cmp
cwtl
push
mov
scas
and
stos
pop
repnz
jmp
cwtl
scas
movsl
enter
xor
fisubrl
imul
lret
mov
mov
das
shl
push
fxch
je
ja
xorb
cld
lret
xor
sub
ret
mov
cmpsl
dec
add
push
sub
lock
das
fwait
pushl
icebp
repz
inc
sub
xor
dec
sbb
fdivs
mov
push
out
push
test
imul
add
xchg
popa
ret
pop
sbb
addb
fidivrs
fidivs
arpl
jo
js
mov
pop
ja
mov
inc
push
mov
int
pop
inc
popf
ret
mov
icebp
bound
pop
sbb
ja
jmp
cmp
xor
xchg
adc
xor
jl
push
pop
idivl
xor
mov
cli
pop
jo
pop
xor
out
ds
xchg
in
mov
imul
xchg
xchg
test
fnstenv
xlat
lcall
xor
int3
fdivrl
sub
lods
sahf
xchg
mov
mov
cmc
adc
inc
mov
mov
mov
sbb
sbb
jle
mov
nop
jle
mov
dec
ret
mov
mov
fimull
sahf
pop
movsb
ja
into
add
bnd
sub
lcall
mov
fwait
cmpsl
pop
push
inc
cltd
jnp
insb
xor
sbb
sub
enter
jo
mov
xor
imul
dec
cmc
inc
call
cmp
and
ljmp
jp
or
aad
mov
and
xor
popf
sbb
scas
mov
sub
psubq
stos
mov
adc
or
mov
lock
out
adc
insl
imull
test
mov
shlb
cmpxchg
mov
adc
imulb
icebp
push
mov
pop
cld
mov
repz
cwtl
adc
ret
push
mov
into
int
inc
out
into
lcall
ja
xchg
movsb
mov
sub
into
push
dec
das
inc
js
add
bswap
jle
push
jmp
aam
imulb
xor
jb
inc
lea
add
inc
jg
lret
pushf
dec
cmp
pop
aad
mov
aad
pop
aas
cmpsl
sti
push
xchg
in
push
fdivs
push
mov
movl
jp
xchg
mov
aad
xchg
sbb
and
fmull
dec
pop
mov
dec
fisubs
xchg
cmc
shrb
std
add
fs
cltd
enter
insl
fwait
aam
xorb
cwtl
enter
call
test
mov
stc
jo
addr16
sbb
call
imul
push
cmp
sarl
add
sub
fs
jo
cmp
xchg
fisubs
xor
or
mov
fstpl
outsl
mov
mov
dec
xchg
xchg
and
aad
push
cmp
xchg
ret
sub
in
jecxz
dec
or
out
xchg
xchg
movb
xchg
sbb
mov
hlt
imul
repz
test
into
loope
xchg
cld
push
sub
imul
in
push
mov
inc
push
mov
mov
jbe
push
sbb
aam
nop
pop
push
not
push
push
push
inc
push
in
pop
aas
into
cmpsl
inc
jge
add
xchg
test
sbb
cmp
pop
aaa
cld
dec
adc
mov
popa
jge
repz
lret
inc
in
jl
adc
xorl
stos
mov
cmp
jl
aas
ds
loopne
and
or
popa
xchg
and
mov
cmp
scas
stos
jl
or
xchg
push
adc
xor
dec
bound
pop
lret
xchg
lret
mov
out
out
mov
lock
jo
pop
int3
push
out
ljmp
sbb
fildl
icebp
testb
mov
pop
pusha
mov
bound
xchg
jno
enter
inc
mov
xchg
mov
repz
ss
or
les
push
aam
arpl
test
adcb
or
mov
mov
cmp
lods
icebp
xchg
pop
xchg
jle
sti
inc
test
push
push
dec
sub
addr16
addr16
sti
mov
mov
mov
jle
sub
ljmp
insl
or
add
les
mov
jae
mov
add
add
jo
cmp
pop
jg
inc
jecxz
je
push
lods
mov
push
shrb
push
inc
jge
int
xor
insb
loope
push
cmp
loope
cmp
fcompl
inc
jg
lock
add
fiadds
sbb
mov
mov
aaa
and
imul
push
out
push
stos
rcrb
jns
and
xchg
lods
fs
mov
xchg
inc
mov
sbb
adc
push
fs
call
and
push
mov
test
out
dec
insb
and
aaa
fs
rclb
jno
ja
les
xchg
jmp
gs
cmp
roll
std
sub
pop
mov
cmpsb
arpl
in
outsl
jecxz
inc
or
mov
js
mov
addps
inc
jg
pop
out
popa
mov
mov
mov
sub
or
push
and
xchg
out
or
adc
cmp
sbb
rclb
jmp
shrl
push
mov
mov
mov
ds
data16
cmp
js
stos
mov
jp
stc
sbb
loope
add
lods
jbe
aad
and
cmpl
mov
cmpsb
adc
pop
inc
jecxz
jmp
inc
xchg
mov
int
cmpsl
cld
sbb
nop
push
and
add
mov
std
lock
push
add
cwtl
in
inc
lods
sub
lods
or
jnp
inc
xor
jne
add
imul
xchg
mov
dec
adc
sbb
mov
xor
test
adc
out
pop
rcrl
add
int3
sbb
lock
lock
sti
fisttps
mov
bound
mov
or
lret
mov
rolb
out
push
repnz
loopne
jg
orb
sub
stos
xchg
call
leave
decb
ljmp
into
lret
cmpsb
jle
aad
outsl
mov
out
jbe
sbb
mov
mov
dec
adc
mov
fyl2x
popf
adc
pop
sbb
push
sbb
ret
adc
jle
outsb
ret
in
out
push
xchg
repz
sub
leave
stos
push
test
push
jg
or
pusha
jecxz
adc
xchg
dec
dec
das
lcall
loope
rcr
mov
adc
repnz
push
nop
jg
imul
xor
jae
pop
sub
push
je
hlt
add
or
cld
mov
fnstenv
ja
test
scas
call
sub
imul
shl
inc
add
push
pop
or
mov
call
cli
shr
loope
inc
xorl
cmp
mov
pusha
loop
mov
inc
xchg
jno
sub
enter
cmp
push
repnz
inc
movsl
inc
fists
rcrb
push
test
pop
hlt
in
aam
into
mov
mov
mov
jge
add
and
sub
mov
faddl
addr16
pop
push
xchg
xchg
or
or
and
inc
add
sbbl
adc
mov
js
jmp
cmp
sahf
out
aas
negl
push
inc
std
in
push
outsb
inc
bound
cwtl
test
push
popf
xchg
add
push
mov
and
sbb
out
and
push
test
fidivs
popf
and
jge
fwait
sti
stos
shl
aam
subb
dec
cmp
pop
aam
xchg
lret
push
mov
cs
imul
cli
movsl
js
scas
fcmovne
cmp
aaa
or
inc
lock
mov
jg
jle
xchg
shlb
push
in
cmp
inc
mov
arpl
decb
xchg
ds
les
bnd
movsb
cli
push
and
aas
xchg
push
scas
stos
xor
out
incb
lahf
jmp
insw
stos
adc
stc
or
jecxz
mov
insl
and
jne
adc
or
sub
fcoms
cmp
xor
lret
push
adc
push
or
pop
daa
fbld
ret
pop
mov
dec
cmp
sbb
push
adc
aaa
push
rcll
jbe
rol
add
add
pusha
inc
call
dec
roll
push
inc
nop
or
xchg
je
insb
mov
in
and
push
std
test
scas
jmp
cltd
inc
push
fs
mov
xchg
testl
test
out
cmp
rcl
xchg
mov
sti
xchg
xchg
adc
inc
daa
pop
addr16
fsubrp
or
ljmp
push
call
jmp
mov
sub
ret
cwtl
dec
in
ja
cs
jl
mov
adc
adc
ret
clc
or
jno
je
mov
aaa
mov
mov
dec
frstor
test
adc
add
pop
cmpsl
push
repnz
or
imul
cmp
repz
xchg
xor
adc
mov
pop
jne
mov
adc
cltd
ds
xor
mov
ds
mov
addr16
sbb
int3
lcall
nop
jb
outsb
pop
xor
fs
pop
inc
mov
inc
nop
pop
les
orl
xchg
in
add
add
adc
mov
pushaw
pop
aas
mov
dec
xchg
add
shr
pop
cmpsl
lods
xchg
pop
jle
jns
xor
aad
cltd
test
xchg
rclb
nop
jecxz
test
idivl
xor
jg
incb
push
pop
dec
jge
ret
scas
int3
fdivs
lds
xchg
add
inc
fld
sub
mov
lods
cmpsb
fbld
les
insb
jecxz
adc
jnp
sbb
jbe
loop
rclb
stos
xchg
mov
insl
pop
sbb
loop
sbb
int3
mov
pop
cmc
leave
jns
scas
ret
mov
inc
test
pop
mov
inc
and
mov
mov
pop
aad
cmp
or
lret
sub
das
and
cmp
mov
mov
icebp
or
push
hlt
xchg
mov
aam
je
push
and
mov
add
jg
inc
imul
and
pop
lds
nop
arpl
sti
lock
pop
aaa
jbe
mov
fsubp
or
rcr
push
adc
test
leave
lods
fwait
mov
mov
pop
fwait
adc
movsl
stc
daa
clc
dec
push
push
adc
jmp
call
cmpsb
adc
xchg
popa
dec
cli
sbb
dec
jbe
in
sbb
and
popf
dec
inc
adc
xorb
or
rol
inc
movsb
out
mov
mov
xorl
xor
sub
jmp
pop
shlb
mov
mov
stos
mov
mov
push
xor
mov
mov
adc
les
sahf
jne
nop
int3
mov
sub
adc
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
add
inc
dec
jl
jl
inc
pop
jl
loope
insl
fwait
ret
jno
nop
inc
push
pop
movsb
mov
jnp
add
leave
and
push
inc
inc
arpl
sbb
lock
ficoml
js
cvtpi2ps
inc
jnp
popa
push
mov
lret
pop
pop
mov
shrl
stc
jp
lcall
mov
xchg
mov
mov
dec
xlat
jp
rep
cmpsb
fcom
cmpsb
jge
andl
sbb
movsb
sti
or
dec
pusha
pop
xchg
inc
push
sbb
adc
sbb
in
clc
inc
in
imul
or
aaa
pop
pop
in
shll
outsb
xor
xorb
imulb
movsl
jg
repnz
jp
mov
dec
arpl
jo
cltd
sti
repz
push
or
adc
xor
mov
testb
fbstp
or
outsb
cmp
mov
sub
adc
fstpt
mov
lahf
aad
pop
test
xchg
movsb
arpl
out
mov
or
lds
xchg
hlt
shlb
dec
cltd
and
inc
out
mov
hlt
iret
iret
icebp
jle
stos
movsb
int
adc
push
inc
into
and
decl
repnz
adc
das
test
lret
sbb
inc
mov
or
inc
rolb
xchg
cs
nop
scas
xor
or
add
addl
lods
lret
popf
push
xor
cmp
insb
lea
add
mov
dec
movsb
inc
lcall
mov
icebp
adcl
lods
sti
ljmp
mov
inc
mov
mov
mov
rorl
mov
push
mov
and
imull
aam
mov
arpl
adcb
les
dec
mov
jns
jns
and
call
adc
icebp
cld
scas
pop
cwtl
push
out
xor
sti
mov
dec
xlat
sub
mov
pop
pop
jo
add
cwtl
mov
lret
jp
mov
cmp
pop
sbb
sbb
push
xor
sub
pop
mov
int
sar
loopne
dec
jno
and
shlb
lcall
ret
push
xchg
sbb
loopne
lret
mov
cmp
sub
lahf
fbstp
subl
jg
xchg
pop
mov
int
mov
pop
stc
bound
jb
cmpsl
mov
int
rclb
xchg
inc
mov
inc
xlat
int3
jmp
fwait
into
push
int3
into
pop
aaa
fucom
out
cmp
mov
pop
sub
sub
aaa
aam
mov
jbe
out
pushl
jl
arpl
and
jb
aaa
add
rcr
xchg
aas
shrl
les
adc
sbb
in
xor
test
cmp
cmp
ss
mov
mov
jge
lods
cmp
scas
call
stos
xor
cmpsl
add
push
shlb
pop
add
subl
sbb
pop
clc
ljmp
dec
sub
jo
inc
rorl
shlb
movsl
mov
sub
add
fistpl
std
lds
jmp
out
stc
cwtl
lock
cltd
or
shlb
sbb
daa
lea
aaa
xchg
xchg
outsb
jne
lret
mov
xchg
outsb
dec
inc
sbb
shlb
adc
dec
je
insl
push
sbb
mov
cmp
push
mov
jae
sbb
mov
adc
sbb
sub
xor
xchg
and
imul
or
push
push
daa
mov
jle
inc
mov
cmpsb
pop
mov
cmpsb
mull
cmp
es
or
push
js
jmp
jl
push
jb
jp
inc
leave
pop
sub
push
xchg
out
or
pop
insb
adc
push
mov
cmp
icebp
pop
mov
cli
mov
pop
and
lahf
mov
repnz
xchg
scas
or
cmp
daa
mov
xchg
or
xor
sbb
jp
add
ret
jecxz
or
aas
lcall
shr
push
pop
inc
mov
cwtl
lock
test
cmp
cmp
xor
jge
test
cmp
cmc
xchg
into
fildl
mov
sbb
stos
sahf
orb
mov
cmp
subl
pushf
pop
mov
cmp
jo
insb
xchg
cmp
push
push
cmpsl
push
mov
fld
pop
adcl
or
add
sub
test
add
push
mov
loope
push
leave
out
sbb
mov
push
sti
int3
add
insl
fcoml
rorb
ljmp
pop
mov
roll
ficoml
movntq
out
mov
loope
int3
mov
in
clc
inc
in
das
push
test
jns
stos
stc
ret
cmp
mov
or
cmp
ret
pop
vrsqrtss
jle
aam
sahf
inc
aam
inc
icebp
int
jo
or
jmp
push
mov
aam
sti
pop
push
enter
test
mov
jge
into
movsb
shrb
xlat
mov
enter
jp
cmp
lcall
mov
into
loopne
iret
lods
pop
rorl
test
aaa
jle
pop
mov
mov
push
dec
and
fdivs
pop
pushf
xchg
cld
jg
aad
and
ljmp
jb
push
bound
movsb
jmp
cmpsb
ljmp
mov
imul
cmc
data16
cltd
arpl
imul
and
leave
dec
pop
mov
sub
outsb
mov
and
push
inc
mov
sbb
loopne
inc
jnp
into
xchg
insb
jmp
divb
add
ljmp
test
add
lods
arpl
mov
data16
mov
pop
xchg
push
mov
sarl
sbb
mov
cs
mov
andl
mov
jbe
xchg
imul
icebp
fisttps
dec
cmp
cmpsb
mov
add
sbb
ficoms
sti
test
outsl
jl
add
add
out
repz
adc
lret
dec
subl
rcl
jae
clc
fbstp
mov
push
outsb
jle
or
into
jecxz
jmp
out
in
xor
scas
ljmp
xchg
adc
fistpll
enter
push
das
inc
and
dec
cltd
inc
push
cltd
ret
int
mov
insb
in
je
out
hlt
jle
popf
dec
inc
aam
hlt
sbb
shlb
testb
cli
sub
mov
mov
fs
xchg
nop
push
test
mov
in
dec
mov
dec
push
or
mov
subl
stos
out
imul
negl
jg
or
add
push
fbld
mov
dec
inc
adc
lret
icebp
mov
aam
cmp
mov
scas
popa
inc
popf
loop
mov
pusha
push
inc
stos
dec
mov
popa
add
mov
jno
pop
popa
dec
bound
push
dec
xor
imul
inc
xchg
push
push
fadd
pop
rcrl
scas
xchg
inc
loopne
fs
jae
jecxz
int3
push
push
popf
cmp
stos
xchg
lcall
mov
bound
testb
push
in
ja
ja
out
jae
mov
and
into
scas
cmp
xchg
ja
mov
pop
cmpsb
lahf
repnz
jg
outsb
add
sbb
mov
mov
out
xor
int
in
fcmovnbe
lock
push
into
inc
xchg
mov
mov
and
pop
jb
cmp
cmp
jg
and
outsl
pop
cmc
lcall
movsb
cwtl
pop
fimull
pop
das
xchg
xor
ret
or
test
std
dec
inc
xor
sbb
adc
xor
mov
xor
mov
testl
std
outsl
aas
jge
mov
adc
push
repnz
mov
or
cli
out
push
lock
fsubrp
stos
pushf
dec
jmp
sti
fsubl
xchg
xchg
mul
sub
imul
testb
ja
pop
cmp
stos
ret
mov
mov
stc
repz
pop
cmp
sbb
in
into
stos
outsl
cmp
xor
sti
sbb
loope
cmc
in
mov
xchg
out
iret
mov
sub
sarb
cmp
clc
ret
push
iret
arpl
cli
sub
les
dec
imul
repnz
test
cltd
fwait
rorb
jne
aad
xchg
mov
ja
hlt
xlat
lcall
cmc
sbb
in
sbb
push
es
fstl
jno
cs
dec
fnsave
mull
popf
loopne
mov
pop
pop
icebp
sbb
loopne
pop
mov
adc
int3
lahf
xor
aas
add
leave
out
int3
mov
les
cmpsb
or
in
lock
sub
jl
ds
push
hlt
shrl
stos
lret
mov
push
jae
test
jge
mov
pop
and
push
xor
mov
mov
fnsave
inc
jne
jnp
lret
sub
and
xchg
popa
cwtl
mov
fistpl
addr16
in
lods
push
ds
lcall
xchg
mov
aaa
xor
out
lods
push
mov
xchg
jp
call
mov
pushf
rclb
inc
cld
add
add
loop
icebp
xlat
push
addr16
pop
or
pop
mov
mov
out
clc
out
loop
ret
push
scas
and
cli
pop
out
push
add
insb
xchg
push
mov
imul
pop
and
xchg
mov
ja
loopne
stos
xchg
call
js
cmp
pop
imul
pop
mov
iret
stc
fs
movsl
lret
cmp
jecxz
test
dec
mov
stos
inc
ds
push
dec
fcmovbe
rcl
into
inc
ds
sub
pusha
icebp
bound
inc
js
push
jo
add
xchg
jo
ss
cmpsb
pop
and
cld
push
mov
repnz
xlat
add
jae
pop
aad
sub
xchg
decb
jo
inc
push
push
and
lods
int3
push
fistpl
ret
cmpsl
mov
sbb
sub
inc
fidivrs
std
jnp
jp
xchg
jns
push
icebp
cmp
ror
mov
jl
inc
lret
stos
add
aas
cltd
incl
ljmp
rorb
jmp
dec
cmp
xchg
xchg
dec
test
rolb
pushf
js
fstl
sti
sub
ja
call
imul
aad
cwtl
movsl
fmulp
inc
and
sub
inc
int3
sub
and
in
fincstp
sarl
je
aas
xchg
inc
rcrl
xor
outsb
cmp
sub
fbstp
imul
jns
imul
xchg
outsl
arpl
inc
fcompl
sbb
mov
mov
mov
dec
testl
cld
lret
imul
sub
cmpsb
cmpsl
sub
in
push
in
mov
fcmovb
jb
adc
inc
push
iret
ja
fstpl
insb
xchg
add
lcall
dec
push
or
pop
cmc
mov
jbe
iret
sbb
sbb
jge
pop
inc
push
dec
xchg
inc
sub
sbb
test
mov
adc
repz
mov
lcall
jns
dec
outsb
push
or
daa
pop
popa
adc
ror
andl
xor
mov
cld
jns
inc
fsubrs
xor
das
int3
mov
icebp
cmp
mov
fbld
mov
adc
jecxz
push
in
pop
inc
imul
aaa
jno
xchg
stos
orb
lods
clc
cmpsl
dec
or
jl
jp
rorb
aaa
sub
add
das
or
or
icebp
insb
lahf
std
sub
or
out
inc
mov
cs
fisubrs
cmpsl
pop
dec
daa
fwait
jnp
mov
loope
lods
push
rclb
mov
call
xor
and
out
pop
jmp
or
mov
andl
dec
dec
dec
cmp
xchg
aam
pop
jae
es
xchg
mov
movsl
lcall
outsl
adc
fnsave
out
sub
dec
push
adc
xor
lea
adc
mov
jnp
push
and
jmp
repz
cmc
scas
push
fadd
dec
aad
and
xor
push
movl
test
lcall
ljmp
imul
jae
mov
mov
pop
into
leave
stos
ret
mov
sti
xchg
pop
jnp
std
cmp
and
aad
sub
movb
imul
jb
insl
lds
imul
and
and
arpl
add
int3
lods
add
enter
out
xlat
iret
jnp
iret
dec
xchg
add
icebp
lahf
jb
mov
push
mov
fists
and
lods
scas
xchg
mov
icebp
sbb
into
scas
pop
ja
and
jb
insb
mov
imul
cs
push
lods
or
loopne
dec
lret
inc
and
dec
test
sarl
mov
outsb
outsb
mov
xor
aad
in
scas
filds
data16
sbb
scas
stos
xor
jle
pop
mov
rcrb
xchg
loopne
rolb
xchg
icebp
fcmovnu
mov
jae
test
cmp
in
add
add
mov
sbb
dec
outsb
mov
sbb
popf
jmp
pop
lods
sar
sbb
jo
stos
adc
ljmp
loopne
pop
movsl
xchg
stc
cwtl
jno
mov
ljmp
lahf
arpl
je
nop
cmp
mov
in
push
pop
pop
xchg
rorb
ljmp
xchg
lods
insb
addr16
cmpsl
mov
outsb
imul
test
lret
gs
fstpt
pop
jne
xlat
add
imul
fstpt
fisttpl
sbb
inc
lock
mov
xchg
rol
fdivs
mov
push
shl
cmp
pop
mov
idivb
movl
mov
ret
jl
cmp
sar
icebp
jne
jge
outsl
add
xchg
sub
into
mov
mov
pop
cmp
dec
in
sub
call
mov
sbb
lea
cmp
pusha
pop
add
out
dec
add
je
mov
addb
into
ficompl
sarl
leave
add
dec
mov
fsub
jg
js
outsb
push
lods
in
pop
icebp
xor
and
ljmp
icebp
pop
mov
sahf
pusha
pop
sbb
adc
ds
add
cmp
cmc
add
scas
xchg
rolb
inc
jg
cmpsl
cld
out
jle
stos
adcb
xchg
scas
adc
lods
nop
cmpsb
cmp
les
repz
cmc
cld
scas
mov
loopne
bound
cmc
insl
test
jmp
cmp
xchg
lds
add
sub
lods
fwait
pop
cmpl
sbb
jbe
sub
jmp
enter
and
fnstsw
dec
mov
mov
dec
mov
xor
cltd
js
inc
cwtl
add
cwtl
jae
ljmp
es
aaa
mov
xorps
jle
ret
xchg
imul
rolb
cmp
repz
adc
pop
loope
mov
scas
lea
pushf
sti
inc
cmp
xchg
scas
popl
out
mov
jo
and
pop
rcr
cmc
inc
inc
and
push
push
mov
in
outsl
rorl
xchg
ss
mov
jo
xchg
sub
cmp
xchg
rcll
nop
lods
cs
push
push
pop
daa
cmp
or
andl
sub
jne
ds
xor
les
movsb
inc
pop
dec
subb
call
inc
and
movsb
adc
scas
push
jge
jnp
cmpsb
inc
and
hlt
sbb
and
addr16
push
hlt
mov
mov
aaa
or
mov
adcb
push
into
push
fildl
nop
jmp
es
imul
ljmp
into
lcall
push
xlat
xadd
fwait
stos
or
dec
dec
xor
bound
xor
cmc
pop
xchg
and
mov
mov
lret
xchg
mov
ret
clc
and
mov
mov
mov
pop
jbe
fistpll
insb
sbb
pop
stos
incl
mov
mov
jecxz
xchg
xor
mov
jne
sahf
mov
std
testb
inc
inc
into
inc
cli
xor
cli
repnz
or
aad
push
in
lcall
pusha
testb
cmc
sbbl
jl
mov
push
jp
jae
arpl
pusha
sbb
cli
and
xchg
lock
movsb
mov
pop
lea
xor
sub
popa
data16
mov
fstps
mov
lahf
call
pop
arpl
sub
movsl
dec
out
cmp
outsl
push
lahf
dec
in
pop
imulb
fadds
dec
mov
add
data16
ret
xchg
jno
mov
push
mov
and
hlt
pushf
sbb
pop
xchg
and
sub
xchg
mov
aaa
lods
jae
mov
push
subb
std
das
lea
clc
sub
int3
sbbb
lahf
cli
inc
inc
les
insb
or
xor
adc
jp
mov
lret
shlb
sub
lahf
add
aas
jle
and
cs
jnp
scas
lods
inc
mov
inc
repnz
cmp
inc
mov
movsb
pop
out
cli
insl
adc
js
nop
pop
in
lods
mov
jne
imul
dec
dec
jle
mov
jge
hlt
sub
dec
test
or
hlt
sbb
fildll
and
and
movsl
jmp
lods
inc
push
and
imul
push
jmp
sub
mov
ss
sub
test
aaa
test
xchg
dec
test
aam
dec
out
lods
lods
adc
les
mov
testb
mov
inc
and
aad
loopne
push
fdivs
xchg
sbb
sbb
lea
mov
push
push
fcmovnb
data16
mov
push
mov
addr16
mov
jb
sub
jge
mov
mov
ret
insl
push
dec
mov
fwait
mov
rcll
repnz
fadd
or
mov
xchg
inc
mov
addr16
xor
in
mov
in
mov
mov
dec
mov
mov
sub
sti
add
mov
call
dec
xchg
xchg
sub
jbe
fs
lock
stc
or
pop
orl
out
arpl
mov
scas
bound
lcall
jecxz
or
and
dec
sarb
mov
ja
fmulp
testb
pop
in
mov
sub
out
stc
stc
cmp
call
lods
iret
or
add
ljmp
insb
shl
call
push
test
fisubrl
jge
lods
repz
loop
mov
xchg
adc
and
scas
or
pop
inc
fucomi
and
xchg
cmp
jmp
push
call
mov
xchg
lock
ja
addl
and
cwtd
mov
or
sub
adc
pop
repnz
cmpsl
mov
inc
lret
stos
mov
mov
dec
add
gs
stos
icebp
jne
mov
es
in
aad
mov
mov
fnstenv
pop
repnz
je
xchg
push
fdivr
pop
dec
mov
out
push
jmp
inc
mov
out
inc
xchg
jmp
add
jge
mov
sub
mov
push
dec
push
adc
mov
sti
in
mov
jg
sti
into
xchg
lret
sub
andb
popf
jnp
sbbl
mov
and
sub
mov
inc
xchg
rcl
jae
loopne
sub
mov
and
orl
ds
mov
pop
loopne
mov
gs
je
sti
sbb
cmp
mov
xor
sbb
stos
sub
push
js
inc
push
mov
xchg
xchg
add
cwtl
data16
test
jno
and
arpl
push
mov
cmp
and
out
aaa
mov
mov
incl
inc
mov
xor
in
sbb
mov
dec
out
sub
pop
or
insb
adc
adc
add
cwtl
jbe
in
mul
out
shlb
push
int
jg
into
sarl
mov
jle
pop
inc
stos
testb
pop
std
adc
pop
xlat
fimull
sti
in
push
sub
sbb
dec
or
mov
addr16
pop
aaa
push
movb
jmp
ljmp
rol
aam
lcall
mov
sub
dec
push
outsl
adc
xchg
rcl
jmp
xor
iret
int3
cmp
hlt
pop
test
cmp
mov
cltd
push
jnp
mov
leave
xlat
lods
jo,pt
mov
nop
or
pop
clc
push
pop
sub
dec
mov
jg
push
push
fisubl
mov
cli
repnz
inc
dec
fucomp
call
pop
movsb
pop
cmp
xor
sbb
dec
std
outsb
push
cmp
pop
mov
push
jle
mov
push
subl
mov
iret
mov
mov
fdivr
divl
mov
stc
scas
mov
repz
push
sbb
int
fninit
jecxz
jg
in
les
bound
xchg
pop
add
cli
subl
cwtl
dec
pushl
data16
add
ds
ret
in
or
jo
sub
xchg
fidivrl
cmp
push
shr
out
pop
sbb
mov
cs
jnp
sbb
shr
mov
sbb
xlat
dec
cli
inc
fdivrs
jb
mov
sbb
xor
faddl
shll
cmpsb
push
mov
push
mov
push
pop
aad
or
ss
dec
cmc
ficompl
and
sub
jb
sbb
shrb
fimull
sbb
mov
stos
rcrl
fldcw
add
test
jns
and
add
inc
jo
pushf
inc
jno
jcxz
and
adc
push
out
sub
xchg
xchg
js
cmc
fsubl
fisubrs
inc
in
xor
jnp
xor
imul
sub
push
aas
or
mov
clc
clc
test
std
and
ja
cmpsl
pop
cmc
or
push
in
lahf
test
mov
adc
js
nop
lods
adc
pushf
jg
lretw
push
cwtl
pop
cmp
add
jbe
jecxz
and
and
xchg
jge
stc
mov
push
mov
sbb
jl
clc
or
popa
pop
sbb
test
sub
pop
sbb
outsl
outsl
fistpll
mov
test
test
mov
jecxz
std
inc
xchg
or
incl
hlt
hlt
cmc
fsubrs
jo
inc
addr16
int
cmp
mov
leave
aas
mov
and
lret
addl
jae
inc
stos
std
das
push
pop
das
sub
sub
and
pop
out
loope
addr16
hlt
outsb
pop
setne
daa
dec
jg
jnp
and
fs
cmp
cmp
dec
test
and
fcoml
pop
rcrb
fisubs
out
mov
push
fwait
mov
jp
std
insl
jnp
leave
aaa
fcmovbe
ljmp
adc
addr16
fildll
push
inc
pushf
dec
push
shlb
scas
jae
shl
jo
mov
aas
in
in
xchg
inc
jo
lret
testb
fwait
insb
mov
sub
jbe
int
jp
dec
push
xor
in
mov
arpl
inc
or
mov
add
push
adc
xor
mov
sti
adc
int3
test
stos
and
dec
xchg
mov
mov
in
and
dec
inc
push
mov
gs
xor
data16
arpl
cld
cwtl
add
dec
cwtl
xchg
xchg
test
dec
cmp
pop
int3
out
or
subb
sub
in
lret
int
sbb
pop
pop
int
push
fnstcw
hlt
sub
push
lahf
je
mov
in
inc
aaa
movb
daa
pop
in
xlat
or
mov
lea
mov
jnp
cmp
cmp
in
inc
inc
decb
push
clc
pushf
jb
add
inc
out
push
pop
out
fdivs
test
pop
push
pop
fsubr
sub
gs
inc
movsb
cmp
out
sbb
adc
fnstsw
sub
sbb
inc
inc
cmp
and
push
inc
icebp
mov
lret
mov
push
jp
pop
movsl
and
xchg
int
or
pop
sbb
cmp
sbb
and
dec
mov
movsl
cli
lret
sti
inc
cmpsb
ret
test
cmpl
test
cmpsb
dec
shlb
int3
jno,pt
rorb
sub
mov
out
gs
lods
jg
cmc
in
mov
clc
subl
jb
ja
and
fbld
xor
and
ss
jge
adc
pushf
sub
add
inc
push
inc
stc
push
popa
add
xor
push
stos
push
data16
xchg
jmp
mov
addl
xchg
xor
dec
ja
adc
negl
ss
dec
xchg
push
outsl
mov
cmpb
and
add
dec
push
cmpsl
bound
xor
iret
ret
and
or
imul
or
jne
add
pop
xchg
push
jnp
and
call
dec
jbe
inc
ret
inc
pop
or
fwait
cmc
xor
out
xchg
push
inc
push
out
sahf
popf
and
aam
pusha
sbb
scas
js
and
jl
pop
dec
out
je
cwtl
or
mov
out
jge
add
xchg
es
repnz
adc
arpl
cmp
jg
stc
adc
leave
push
pop
cmpl
fdivr
sbb
ret
mov
adc
mov
pop
ja
mov
adc
ja
mov
mov
or
cs
xor
sub
loop
push
mov
and
leave
dec
xor
cmp
pop
pop
insb
mov
jmp
ficompl
push
inc
scas
int
jo
clc
cld
cmovge
adc
mov
aas
int3
ja
xchg
lods
outsl
jae
push
push
out
mul
jecxz
jmp
cli
push
pop
xchg
lea
fsubp
sub
mov
push
sbb
pop
nop
ds
mov
mov
xchg
xor
rclb
popa
pop
cltd
addr16
jns
aaa
inc
shll
cmpsb
cltd
fisubs
lret
loop
xor
sbbl
fsubl
or
pop
cs
pop
daa
sbb
mov
mov
sti
jo
sbb
dec
repnz
jnp
cmp
cltd
imul
pop
lds
dec
aas
sub
cmpsb
and
and
fwait
dec
inc
sub
lcall
add
lcall
push
lods
mov
push
imul
rorb
xchg
jb
sarl
gs
sbb
adc
xchg
or
mov
mov
adc
mov
dec
push
in
xchg
fwait
adc
insl
or
lahf
roll
pop
xor
lret
jae
cmp
and
jo
mov
ret
nop
or
movsl
popa
mov
pop
mov
inc
ljmp
jg
inc
lret
fsubrs
popf
push
jle
xor
lea
jge
mov
loopne
scas
lea
insl
xor
jl
lods
push
outsl
aad
outsb
cs
test
pop
xchg
mov
insb
das
sbb
imul
movsl
xchg
inc
jmp
fs
rclb
jne
or
mov
movsb
pop
mov
shlb
inc
sbb
pop
ljmp
sub
adc
mov
orb
jecxz,pt
sbb
adc
into
lock
or
sbb
mov
jo
ss
std
dec
xlat
add
mov
ljmp
std
mov
jmp
in
out
fs
loope
sti
adc
add
lret
frstor
lar
xor
cmpsb
test
mov
aam
adc
cmpsb
cmp
pushf
mov
dec
sub
add
pop
cwtl
out
or
or
movsb
subb
dec
lret
cmp
jle
or
iret
xor
mov
movsl
stc
stc
inc
inc
sub
pusha
lea
push
mov
hlt
jo
jp
dec
ja
sahf
nop
out
ret
cmp
xor
xor
fs
into
xor
in
movsl
ds
lea
mov
jne
pusha
nop
jp
into
xor
jge
push
test
shlb
xchg
lret
fwait
add
iret
das
aam
cwtl
adc
lods
loope
in
out
mov
add
aad
icebp
sbb
mov
mov
out
mov
and
aaa
jp
pop
rclb
sub
add
inc
rcll
mov
repnz
sar
push
inc
sub
push
add
sub
sub
mov
dec
arpl
jle
out
lahf
sbb
pop
leave
mov
mov
repnz
xchg
sbb
ds
iret
jo
jle
outsb
mov
adc
dec
out
and
je
add
mov
xchg
sbb
insl
lods
call
pop
lret
cmpsb
scas
push
add
int3
mov
rol
pusha
inc
jno
in
aaa
mov
lcall
movsb
xchg
sub
push
pop
rorb
sbb
push
outsl
popa
pop
sub
shl
jle
or
adc
inc
push
fisttps
pop
jl
cmp
pusha
mov
movsb
rcll
cld
sbb
cmp
mov
fs
sub
imul
shl
aaa
mov
fists
out
adc
inc
jo
dec
add
push
out
mov
mov
inc
inc
jne
inc
mov
jo
pop
or
dec
adc
adc
test
jge
cmc
xchg
daa
into
cld
stos
movsb
push
inc
repnz
inc
cwtl
outsb
mov
pop
mov
xchg
mov
out
inc
popf
mov
enter
andl
in
std
pop
mov
or
add
and
pop
shll
roll
jp
rorb
and
adc
fwait
add
pop
sub
lret
and
std
push
sti
pop
out
jp
jg
scas
xchg
push
lret
popf
lret
dec
jmp
or
dec
and
mov
xor
ss
adc
dec
mov
iret
pop
test
pop
clc
and
jmp
cmpsl
mov
cmpsl
test
insb
or
ds
sbb
sub
repnz
cmpsb
sub
sbbl
divl
sub
lea
nop
call
in
adc
dec
clc
addb
cmp
add
mov
or
sbb
iret
das
dec
mov
mov
iret
push
dec
dec
sahf
out
cmp
fs
cmp
mov
jae
jo
xlat
push
cmova
jl
sub
or
iret
fadds
push
xor
fisttpll
push
mov
imul
mov
out
adc
fcompl
adc
inc
mov
pop
cmp
mov
sub
mov
and
mov
mov
stos
hlt
fwait
sub
and
push
mov
mov
arpl
push
and
loop
stos
pop
add
inc
stos
test
mov
repz
arpl
dec
or
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
or
inc
scas
jl
inc
pop
jl
iret
dec
xor
pop
or
cmp
pop
jl
mov
lea
cmpsl
nop
incb
dec
aam
out
addl
add
jmp
mov
xor
inc
in
in
iret
shll
jecxz
inc
arpl
dec
hlt
add
sbb
push
loope
out
xor
mov
and
inc
sbbl
jae
bound
imul
leave
jle
lods
int3
out
jne,pn
xchg
xchg
pop
movsb
pop
sbb
lock
mov
fucomp
fnsave
jns
in
shll
sbb
jnp
les
mov
in
fisubl
subb
addl
jp
push
call
outsl
push
adc
movsl
xchg
mov
dec
or
dec
in
xchg
in
inc
lods
cld
rorl
mov
xchg
pop
or
cmp
fwait
mov
jmp
mov
cld
addr16
lods
pop
dec
and
lock
mov
jnp
jmp
or
dec
xor
aam
sub
dec
ret
jae
test
mov
mov
js
jns
mov
fdiv
in
cmp
sub
pop
call
push
or
popf
xor
subb
je
sbb
and
xchg
mov
fildll
xor
mov
mov
rcrb
jl
adc
mov
lcall
scas
pop
xchg
adc
inc
pop
push
cmpsl
sbb
pop
test
lahf
push
das
lret
mov
hlt
push
push
mov
pop
add
aad
stos
mov
pop
pop
inc
push
jne
jg
push
das
jbe
cmc
push
not
inc
or
sub
inc
arpl
xchg
in
fdivr
movsl
xorb
psubsw
or
clc
aam
or
pop
fs
pop
inc
mov
lods
adcl
and
adc
arpl
in
cmpsl
scas
cwtl
jbe
adc
inc
inc
icebp
xchg
sbbl
cltd
jle
shrb
and
add
pop
cli
inc
inc
inc
cmpsb
xor
jns
scas
sbb
pop
xor
xchg
outsb
bound
add
repnz
leave
xor
les
loop
fwait
xor
dec
xchg
outsb
imul
icebp
adc
add
cmp
rclb
clc
xchg
cwtl
pusha
fwait
movsbl
dec
pop
cmp
cmp
ds
stc
arpl
mov
int3
rclb
or
aam
lock
clc
in
les
mov
fdivp
aam
std
push
xchg
push
sub
incl
and
cmc
insb
mov
add
mov
xchg
jne
out
adc
clc
pop
clc
fisttpl
push
push
sbb
pop
mov
push
or
incl
mov
mov
or
mov
and
imul
dec
pushf
mov
scas
dec
inc
jge
lock
or
push
sub
lds
cltd
mov
pop
push
mov
and
addr16
jl
xchg
in
in
fcmovnb
sub
mov
adc
xchg
stos
and
out
mov
push
fucom
pusha
scas
cmpsb
sbb
pop
push
roll
lcall
mov
inc
sub
scas
shr
pop
dec
jb
xchg
outsb
in
loop
outsb
inc
mov
xor
psadbw
in
mov
xchg
or
into
dec
decb
mov
pop
add
lods
push
addr16
add
jecxz
mov
leave
push
fld
adc
or
mov
push
cs
or
sti
mov
mov
mov
imul
dec
xchg
jb
mov
test
xchg
add
jp
adcb
jae
mov
adc
test
bound
sbb
test
add
jmp
xor
jb
xor
jb
dec
xor
jo
aad
loope
mov
idiv
aas
xchg
jbe
adc
xchg
arpl
insl
sub
rcrl
mov
mov
imul
jae
jae
or
insl
and
sbb
int3
and
fstl
mov
js
loope
sbb
adc
xlat
gs
mov
cmp
inc
arpl
ss
es
rorb
cmp
repz
xor
jl
sahf
sahf
dec
in
ficoml
jecxz
daa
adc
cmpsl
shl
imul
xchg
adc
xchg
mov
xlat
pushf
push
mov
sbb
jle
fsubl
sub
mov
iret
popf
repz
mov
xor
ja
sbb
cs
sub
arpl
or
push
out
lret
pop
or
fisubs
icebp
pop
cwtl
jb
jne
cs
mov
jmp
mov
xor
ret
popf
addr16
ds
stos
and
and
push
dec
and
pop
shrl
jnp
add
movsb
mov
sbb
push
sbb
push
push
sbb
ss
fstpt
mov
xchg
jmp
and
mov
das
cli
movsb
int3
inc
stos
jne
negb
or
jno
jo
cmp
jg
pushf
jl
cltd
cmp
cmp
pop
enter
fidivrs
stc
mov
dec
addb
bound
sub
sarb
mov
push
add
xchg
xor
and
mov
adc
jo
adcb
dec
cmp
in
iret
je
mov
cmp
int3
or
sub
pop
cli
push
add
xor
into
sbb
push
ljmp
push
xchg
lock
sti
outsb
and
sbb
cmp
dec
adc
adc
mov
je
fists
pop
in
add
cmc
cli
gs
out
pop
and
or
pop
xor
bound
gs
mov
adc
ja
and
loop
jge
sub
lds
or
daa
pop
pop
les
sbb
mov
or
nop
cltd
mov
lock
pop
xchg
cmp
or
pop
std
mov
ss
lret
xor
out
add
stc
mov
test
fiaddl
sbb
pop
cmp
aaa
lcall
jbe
push
push
movsb
sti
shl
inc
pop
inc
fwait
cmpsl
xchg
adc
dec
jge
loope
sti
xchg
and
dec
or
xor
into
mov
mov
fdivp
test
push
dec
ja
mov
or
movsl
cmpsb
add
daa
push
dec
xor
in
xlat
in
adc
mov
and
test
pop
cmp
or
push
jmp
aam
jne
aad
lcall
loop
in
push
test
or
cmp
data16
addb
clc
int3
add
rorb
mov
in
or
fistpl
jb
sub
mov
dec
mov
imul
sub
stos
mov
sahf
shll
mov
lock
mov
in
xor
or
mov
mov
mov
clc
fildl
jp
in
push
jg
dec
sbb
jmp
mov
push
orb
or
stos
js
stos
add
shlb
test
sahf
cld
or
dec
adc
xchg
sub
mov
and
addr16
and
fcompl
and
stc
add
test
mov
add
pusha
or
imul
and
pop
lcall
insb
or
int
ss
scas
aas
fimull
pusha
imul
ja
dec
cmp
pop
loope
es
jp
sub
sbb
push
cmpsl
das
sbb
lea
mov
mov
adc
inc
add
pusha
jb
shlb
xor
frstor
and
mov
cmc
rolb
xor
push
faddp
lock
xor
jno
jne
jp
in
in
fxch
ret
mov
insl
aad
ljmp
mov
loope
sub
pop
sub
jb,pn
adc
jg
lds
xchg
adc
and
insl
aam
add
cmpsb
ja
ret
pop
idivb
and
stos
jl
roll
pop
inc
addb
out
stos
movsb
test
sbb
mov
scas
movsb
pop
xchg
or
std
sahf
jle
test
cmp
hlt
es
pop
notb
aaa
adc
shr
mov
test
test
jnp
jno
shlb
xor
sub
ret
and
mov
cmp
rolb
clc
rcl
out
jge
jmp
inc
or
mov
fnstcw
or
inc
and
test
sub
scas
cmc
cmp
dec
mov
push
test
out
jmp
stc
dec
add
cld
push
int
lcall
clc
or
mov
inc
mov
fstp
in
sbb
lcall
dec
dec
cmp
adcb
pop
pusha
lahf
loope
jnp
cs
mov
xchg
ljmp
or
fildl
dec
jne
in
cltd
pop
les
pop
in
gs
mov
fisubl
mov
sbb
test
call
inc
pop
add
xchg
sub
and
jns
fmul
out
sub
mov
push
mov
iret
jle
jno
scas
push
negl
mov
and
xchg
pop
sarl
xchg
lock
adc
add
xorl
sarb
scas
push
jne
lds
sbb
addr16
xchg
jge
test
add
movsl
fists
ss
lcall
jne
mov
popa
jnp
mov
je
adcl
jl
movsb
in
sub
popf
mov
cwtl
xchg
sub
or
sub
lahf
xor
into
sbb
add
int3
jp
inc
les
ss
cmp
cmpsb
lods
dec
mov
movsl
mov
or
xchg
push
lods
lods
adc
mov
loop
pmaxsw
and
dec
push
dec
xchg
mov
push
jb
ss
fwait
testb
fcomi
pop
push
jg
push
out
pop
pop
clc
and
jmp
mov
mov
push
lock
jbe
pop
mov
add
xchg
mov
cmp
dec
push
pop
inc
int
and
aas
mov
mov
jle
push
inc
fimull
fsubrs
mov
push
pop
js
leave
ret
andb
pop
and
push
add
les
fs
in
xchg
lret
in
sbb
pop
flds
and
std
mov
pop
ret
in
stos
xchg
fstpt
fistpll
je
rcrb
fisubrl
mov
or
in
and
mov
lds
sub
jge
in
das
lret
out
lods
adc
pop
test
sbbl
sahf
xchg
adc
pop
mov
pop
lcall
aad
insb
es
jnp
xlat
inc
push
pop
or
pop
mov
push
xor
jbe
in
jl
outsl
jne
loop
cmp
clc
xchg
cmpsb
repz
xor
pop
and
les
jo
addr16
test
ss
push
mov
push
push
ds
xchg
loope
das
rorl
neg
jns
rolb
fbld
or
sub
xor
pop
push
or
push
mov
pop
inc
adc
mov
mov
sbb
ret
in
pop
cwtl
cmpb
push
leave
add
jbe
sti
mov
es
pop
repnz
fsubr
sbb
jns
or
dec
mov
fadds
or
addr16
push
aaa
xor
mov
mov
xchg
cs
inc
insb
push
sub
imulb
in
sub
jbe
inc
dec
and
dec
ds
in
inc
sbb
sbb
and
xchg
into
jbe
xor
ja
and
nop
movl
cli
sub
xor
popf
jno
popf
cmp
out
push
jle
pop
mov
jge
push
scas
mov
fstpt
push
mov
leave
jbe
mov
adc
outsb
jge
sbb
jl
nop
add
sub
testl
mov
cmpsl
xor
decl
pusha
outsb
sub
lds
pop
adc
add
nop
dec
add
sar
lods
cmp
das
mov
jo
mov
cmc
adc
outsb
add
push
cmpsb
jbe
adcl
push
sbb
dec
lea
dec
int
bound
or
cs
mov
shll
lods
pop
aaa
push
or
fsubs
lret
cs
mov
into
dec
lods
push
lret
popf
aaa
and
dec
pushf
test
cmp
dec
sti
jl
cmp
shr
scas
push
cltd
xchg
sub
or
cmp
pushf
gs
or
sub
call
cmp
outsl
popa
adc
pusha
stos
push
testl
int
movsb
das
inc
lock
and
out
lahf
mov
pop
adc
fnstenv
jmp
adc
jmp
fwait
insl
and
in
inc
cmp
xchg
cmp
ss
dec
pop
lret
je
pop
ja
jb
mov
push
inc
daa
es
mov
je
dec
jne
rcl
scas
fldt
adc
stos
loop
gs
sarl
xor
or
jns
mov
mov
xor
rcr
xchg
jnp
out
push
jp
pmulhuw
push
inc
xchg
fidivrl
cli
mov
xor
sbb
dec
cmp
dec
or
das
mov
add
jbe
sub
outsl
mov
fstl
jge
push
add
jg
sti
cmpsb
std
mov
fcomip
mov
ret
pop
ja
push
daa
mov
xor
mov
dec
int3
mov
mov
cmp
outsl
jbe
mov
mov
dec
xchg
inc
aas
rol
cmpb
sub
push
push
inc
inc
addr16
mov
sub
xchg
xor
and
jge
or
mov
ja
pop
or
popf
and
out
fs
daa
jae
movsl
fisttpll
mov
enter
stc
add
dec
inc
pop
stc
push
pop
mov
loopne
inc
jmp
inc
fildll
xchg
movsl
and
jb
pop
test
out
int3
pop
cmp
mov
add
xor
aas
push
enterw
mov
mov
sahf
add
mov
xor
popf
nop
les
cmpsl
das
fucomip
adc
sbb
repz
je
lcall
nop
adc
scas
sahf
aad
ret
in
add
shll
clc
lock
shl
jno
lcall
adc
mov
xchg
jno
jmp
xchg
or
jg
add
xchg
cmp
test
enter
mov
cmpsb
test
pop
iret
shll
stos
sbb
loope
test
arpl
mov
adc
test
sbb
ficoml
je
clc
rcll
daa
push
fidivrs
stos
daa
sbb
xchg
push
and
pusha
aaa
xor
dec
and
pop
and
fs
ds
mov
push
pop
hlt
ljmp
push
sbb
arpl
or
int3
flds
sub
sbb
mov
out
inc
icebp
cmpsl
mov
push
xchg
mov
jo
daa
adc
mov
xchg
cld
shlb
jmp
sub
push
cmpsb
mov
idivb
mov
mov
mov
adc
sar
dec
hlt
push
sub
daa
xchg
mull
stos
sbb
mov
imul
scas
daa
ret
repnz
sti
fadds
loope
mov
mov
dec
jg
out
out
std
or
fnsave
nop
xchg
in
mov
inc
fcomp
pop
test
scas
test
repnz
adc
xchg
lea
or
push
sbb
pop
lds
pusha
jns
dec
js
rclb
fdivrs
push
jmp
xor
inc
in
ret
insl
adc
das
testl
rorl
sub
dec
dec
loope
or
ja
arpl
pop
dec
mov
test
loopne
test
pop
fucomip
or
cmp
mov
lcall
out
mov
sti
mov
out
mov
add
mov
lret
mov
movsl
add
inc
icebp
xchg
mov
imul
mov
nop/reserved
ficomps
das
call
mov
icebp
out
movsl
pop
pop
aam
mov
adc
fcom
rorl
mov
js
in
jmp
sub
out
inc
jno
mov
jns
mull
pop
pop
or
jno
test
popf
aam
sbb
and
jns
xchg
jecxz
push
xchg
mov
pushf
jnp
sbb
push
xor
sub
mov
dec
mov
rcll
mov
lods
adc
negb
std
test
and
or
sbb
mov
fbld
fsubs
cmpsb
fdivrs
test
jmp
lahf
cs
sti
insb
jl
add
dec
in
jge
push
or
movsb
adc
or
inc
and
add
nop
and
rol
xlat
mov
ret
pop
out
xchg
and
mov
push
aas
or
nop
nop
call
xor
lret
fistps
add
xor
mov
adc
roll
add
dec
out
push
shll
pop
lcall
stos
pop
pop
push
test
into
jecxz
ljmp
xchg
push
dec
mov
mov
in
pop
stos
or
fwait
ja
mov
pop
cmpl
fsubs
mov
adc
jae
add
pushf
push
sti
mov
into
pushf
and
testb
pop
fildl
push
adcl
loope
mov
xchg
push
jp
mov
adc
mov
cmpsb
adc
testl
aas
repz
push
jecxz
push
sub
xor
in
jo
nop
and
push
mov
ret
jo
cwtl
push
and
xlat
or
and
int
test
enter
jbe
mov
shlb
sbb
ljmp
les
lods
mov
lods
das
pop
push
iret
or
pushf
lods
rolb
pop
repnz
xchg
das
xchg
mov
aad
popa
sub
push
mov
xor
sbbl
push
out
stc
sub
or
aam
pushf
adc
rcrl
sbb
pushf
rolb
jecxz
mov
imul
and
inc
inc
popf
pop
jnp
xor
cmpsb
pop
xchg
imul
sbbb
dec
insb
dec
hlt
int
andb
push
dec
jb
outsb
mov
add
rcl
push
push
and
ret
js
out
mulps
inc
mov
inc
push
out
das
int
dec
sbb
int
mov
pop
js
sbb
ret
test
jno
jmp
sub
or
leave
loopne
jne
je
cmp
rcrl
lea
pop
rolb
jmp
xchg
xchg
xchg
adc
orb
cli
adc
xchg
xor
out
sub
shll
inc
dec
sub
sub
in
mov
jbe
push
cwtl
mov
or
jbe
pop
mov
addr16
lods
mov
iret
in
lds
stos
sub
gs
xor
mov
dec
adc
notl
outsl
sahf
sbb
mov
enter
xchg
inc
mov
out
sbb
mov
fnop
sbb
sub
inc
push
sbb
xor
icebp
out
xchg
mov
arpl
ss
cmp
mov
loope
dec
iret
sub
push
shll
inc
fsubr
mov
add
js
xor
xchg
mov
xor
push
or
aam
ret
push
les
movsb
fcmovnb
repnz
dec
jge
movb
in
test
add
push
or
bound
mov
mov
sbb
popa
inc
insl
dec
popf
cmpl
lret
call
test
repz
cld
lcall
jo
push
lods
pop
dec
adc
or
sub
subb
aaa
sub
xchg
sub
push
inc
lret
daa
adc
jb
leave
or
std
dec
lret
dec
aaa
stc
aam
scas
loopne
push
jmp
lods
fidivrs
lret
inc
add
add
je
xor
fdivrs
aas
mov
inc
cmc
push
das
jnp
adc
xlat
or
or
sub
jb
std
jp
push
jg
pushl
sub
mov
mov
cwtl
sbb
add
fs
dec
pop
call
mov
mov
and
pushf
pop
pop
xchg
sub
push
cmpsl
ret
dec
incb
xchg
push
pusha
cmpsl
and
shl
ja
or
pop
mov
sbb
push
pop
mov
cs
getsec
mov
push
lods
pusha
nop
xchg
or
xchg
daa
xlat
add
outsl
and
cmpsl
cltd
push
mov
movsl
mov
insb
lods
nop
sbb
lahf
xor
cli
outsb
out
je
inc
xchg
inc
jmp
enter
cmpsl
lahf
mov
stos
push
pop
push
jo
dec
sub
out
shlb
xchg
mov
add
push
sub
cmp
insl
mov
loopne
inc
add
jbe
xor
mov
xor
in
push
out
jbe
inc
and
movsl
dec
xor
in
mov
xor
stos
xchg
mov
popf
inc
loopne
push
ret
push
cld
xchg
mov
sti
movsb
mov
inc
push
pop
dec
inc
adcb
sbbb
loopne
lea
push
aaa
fmull
jle
or
jge
loope
aam
int3
mov
popf
and
rorl
and
out
repnz
sbb
inc
xchg
stos
pop
xchg
and
sbb
or
nop
mov
lods
hlt
bound
lret
repz
pop
xor
mov
in
mov
xlat
push
bt
iret
mov
adc
xor
pop
adc
cmpsl
push
cld
out
push
mov
dec
dec
xor
jg
pop
mov
push
ds
cmp
outsl
jne
mov
aaa
sahf
xchg
sub
push
out
enter
fidivl
popa
push
jge
popf
shl
adc
xchg
jecxz
dec
rcl
arpl
sbb
fdivr
fsubl
push
les
pop
mov
movsb
popa
jle
push
sbb
xchg
addr16
inc
div
jmp
lea
std
rcr
out
pop
out
mov
push
adc
std
sub
push
pushf
xchg
int
sub
sbbl
sti
adc
lahf
xor
mov
fadd
pushw
ljmp
cmp
repnz
movsl
mov
inc
dec
mov
pop
call
lods
jne
imul
std
sbb
mov
xor
movsl
in
push
data16
lock
iret
and
insl
je
cwtl
and
outsl
nop
jl
xchg
fidivl
push
ljmp
cmpb
jp
cmpsb
movsl
dec
pushfw
jle
je
push
pop
out
lcall
jbe
shll
sub
lret
aam
add
cmpsb
cmpsb
mov
pop
imul
mov
dec
add
jmp
in
shr
cmp
dec
pop
dec
xchg
adc
xchg
xor
mov
test
mov
xchg
push
jbe
scas
lcall
sub
and
decb
mov
push
call
enter
dec
stos
sbb
xor
xchg
mov
imul
pop
xchg
daa
sub
fstpt
inc
xchg
push
sbb
sub
rorl
jle
cld
popf
mov
clc
push
sub
pop
mov
es
dec
neg
aaa
in
mov
mov
inc
jno
mov
sbb
icebp
mov
xchg
pop
push
adc
push
add
mov
les
xchg
and
mov
ja
clc
cld
es
pusha
in
adc
daa
repz
push
jnp
push
daa
rcrb
flds
imul
outsl
add
adc
inc
cmp
nop
pop
dec
aaa
mov
lret
movsl
mov
xlat
inc
xor
les
inc
pop
std
in
mov
adc
std
add
push
imul
lea
cmp
xor
cmpb
jnp
pop
lret
cs
mov
out
sti
inc
push
sarb
cld
idiv
cs
and
stos
ret
aam
jecxz
add
adc
pop
jle
ret
ss
lds
pusha
cmp
test
mov
popa
pop
pop
in
adc
mov
sbb
mov
xchg
lret
add
inc
mov
mov
incb
inc
notb
push
loop
test
adc
push
jns
test
mov
jg
fisttpl
push
jno
adc
inc
or
mov
imul
jns
les
mov
or
je
cs
mov
sarb
aam
nop
and
push
int3
mov
insb
in
cmp
popf
jecxz
pop
fistpl
dec
mov
jle
jecxz
es
xlat
xor
out
jecxz
icebp
dec
js
push
ja
shl
xlat
loopne
repnz
aas
xlat
bound
addr16
jo
mov
pop
loope
imul
in
roll
aaa
imul
sub
test
stc
imul
mov
cmp
sti
add
scas
jmp
daa
sub
or
sahf
loopne
lret
rclb
pop
lea
aas
sahf
adc
gs
xchg
add
mov
mov
pop
jge
pop
jle
jle
xlat
and
mov
xchg
enter
jle
ds
cmc
mov
fisttpl
xor
sbbl
jmp
or
lock
lret
mov
movsb
idivb
mov
sbb
add
or
sub
cmp
imulb
cmp
testl
and
out
lahf
mov
scas
mov
cmp
cli
jae
fidivs
fcoml
dec
lock
cmp
mov
into
loop
lret
imul
mov
scas
push
loopne
loop
je
lcall
dec
mov
inc
ja
fsubs
mov
jbe
cmp
es
clc
cmp
mov
adc
lds
mov
ja
pop
mov
and
arpl
das
or
aas
inc
mov
je
repz
or
dec
cmp
inc
cmp
mov
icebp
pusha
cld
dec
lcall
mov
add
mov
or
fwait
loop
fwait
push
add
inc
inc
aad
sbb
in
jno
add
push
div
fcomp
mov
adc
mov
nop
sbb
test
mov
dec
repz
call
fildl
lret
leave
aad
cmp
mov
scas
ja
ffree
mov
add
clc
sbb
push
sbb
in
and
jno
ret
inc
out
jbe
jp
push
add
or
and
in
sahf
and
xor
xchg
loop
cmc
andb
pusha
push
dec
xor
loop
sti
cmc
mov
rolb
inc
pop
mov
stos
push
or
mov
pop
scas
mov
cmp
push
test
lret
pusha
into
adc
ret
es
fadds
dec
pop
xor
clc
push
shr
xchg
ds
gs
hlt
cs
dec
mov
or
mov
sbbl
es
je
mov
xor
pop
mov
push
push
fisttpl
daa
lock
push
das
pop
loop
int3
sbb
xor
cmp
fs
mov
xchg
outsb
fcoms
jnp
lods
sub
push
testb
xchg
mov
xor
std
cs
inc
jl
imul
xor
jmp
sub
test
outsl
or
xchg
repz
xorb
xchg
pop
or
outsb
into
jecxz
mov
xchg
int
jp
hlt
fwait
jne
cmp
mov
fldt
cmpsb
jo
xchg
jge
fs
das
ss
cmpsb
jmp
sbb
cmpsl
sti
aaa
fnsave
sti
add
xchg
jmp
shl
jecxz
lahf
mov
pop
out
fwait
sbb
not
movsl
lea
xchg
fidivrl
or
js
jbe
ret
sub
loop
sarb
push
pop
cmp
and
inc
dec
cmpsl
sub
scas
xchg
fnstenv
or
les
mov
pop
xor
insb
inc
pop
stos
adc
rcll
push
daa
cld
cwtl
jg
leave
je
cmp
mov
data16
pop
mov
fsubs
gs
lods
and
or
cmp
in
insl
xor
pop
cmpsl
clc
repz
inc
push
pop
adc
aaa
push
fbstp
inc
and
and
popf
push
mov
jae
shrl
xor
stos
sbb
push
fidivrs
fdivrl
mov
daa
js
pop
and
push
sub
shr
ret
pop
jmp
out
repz
mov
xor
or
inc
jns
add
mov
mov
add
pushf
mov
cs
or
incl
lock
sub
or
dec
insl
ljmp
pop
lahf
jmp
daa
xchg
xor
in
popf
cs
mov
add
cs
mov
sbb
xor
mov
push
cld
sub
movsb
rcl
mov
xchg
and
mov
push
pop
out
xchg
rclb
fisttpll
xchg
bound
jp
sbb
cmp
enter
fadds
xchg
inc
push
aad
xchg
test
mov
and
mov
lods
rcl
sub
sbbl
sbb
das
iret
loop
and
xchg
cmp
pushf
js
push
bound
cmpb
mov
jae
popf
mov
mov
and
test
int3
dec
and
cwtd
pop
fidivrs
jb
fidivrl
jmp
and
xchg
je
scas
add
out
imul
inc
xor
pop
pop
fucomp
scas
test
lods
jae
imul
cmp
add
xchg
out
cmpl
adc
add
sti
mov
imul
inc
loop
push
shll
mov
outsl
jae
inc
inc
xor
jns
shlb
push
cmp
cli
es
mov
sti
push
iret
cmp
test
in
lock
mov
mov
cmpsl
test
add
mov
notl
mov
pop
sbb
mov
adc
test
stc
pop
test
btr
add
and
pop
shll
cmp
gs
push
lret
adc
dec
pop
jge
aam
or
or
cmp
mov
enter
lods
pop
scas
negb
adc
xchg
not
lock
xrelease
lret
aad
jecxz
out
mov
int3
cmpsl
fs
push
lcall
xchg
sbb
push
addr16
pop
pusha
out
scas
fsubrs
std
jg
scas
imul
dec
push
mov
pop
or
mov
jecxz
lods
shrb
pop
sub
lret
notl
sarb
les
inc
stos
enter
mov
ret
filds
jle
repnz
sub
cmpsl
outsl
xor
add
mov
fs
xchg
or
sub
xchg
in
shlb
mov
aas
and
fsub
cltd
decl
iret
aad
sub
mov
mov
add
mov
pop
imul
and
fisubrl
cmpsb
out
mov
in
movsb
cmp
fadds
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
fsubs
jl
pop
jl
adcb
es
sub
mov
or
mov
mov
jmp
xor
pop
das
jmp
movsb
mov
pop
or
into
test
std
mov
daa
popw
push
or
inc
pop
stos
sub
movsl
or
adc
mov
mov
inc
push
or
xchg
in
clc
pop
notl
cmp
fadds
test
pop
stc
mov
jp
xor
cmc
fisttpll
outsl
inc
mov
and
inc
test
repz
shl
inc
inc
push
repz
xchg
jbe
loope
add
mov
dec
subl
jns
jmp
jg
outsl
rolb
cmp
pop
addr16
sbb
jle
fidivrs
cmp
lods
push
lock
dec
insb
ss
mov
cmc
mov
jnp
fsubs
lods
rol
jp
fwait
icebp
mov
dec
lret
cmc
mov
add
mov
iret
mov
fimuls
jmp
push
std
es
sbb
hlt
insl
js
test
push
mov
lock
movsb
imul
xor
lods
pop
and
push
mov
dec
mov
cmpsl
shrb
or
jno
jns
sub
pop
sbbb
rcll
and
push
clc
imul
clc
add
call
mov
mov
jno
leave
sbb
ret
repnz
and
leave
fs
sub
dec
xchg
dec
pop
xlat
ret
push
and
pop
mov
lods
push
xrelease
cmp
xor
int3
sub
adc
insb
jns
push
mov
loopne
sbb
or
das
sahf
or
cmp
inc
mov
jmp
xor
bound
cmp
popf
jnp
or
xchg
inc
inc
sbb
cmpsl
inc
and
and
in
js
adc
mov
mov
cmp
push
popf
out
sarb
sbb
and
add
jecxz
loope
lahf
arpl
clc
jae
enter
mov
push
loopne
or
xchg
clc
inc
sbb
xchg
cmp
xchg
mov
jno
insl
rcrb
mov
xor
sub
jmp
es
ds
mov
call
adc
aam
stos
dec
dec
mov
dec
add
jmp
out
insb
adc
jecxz
mov
daa
jns
int3
sbb
mov
inc
lret
or
mov
aam
pop
sub
fwait
xchg
xchg
xor
cwtl
jae
pushf
sti
inc
push
sti
xor
cmp
xchg
mov
add
and
sub
jbe
or
pop
xor
jecxz
jp
in
pushf
pop
pushf
and
push
push
sarl
add
push
jp
lods
aad
xchg
int
inc
xchg
lods
xchg
xchg
xor
into
aas
movsb
jnp
mov
pop
gs
js
ret
out
push
out
cwtl
inc
clts
popf
sbb
xlat
mov
mov
pop
test
jnp
sbb
call
jno
lea
test
lods
push
xchg
imul
insl
mov
jae
or
mov
and
pop
inc
mul
loope
cmc
sub
sub
xor
mov
xchg
lods
in
mov
sub
fdivrs
ret
and
ret
adc
push
in
int3
jno
lret
jmp
lods
movsl
xchg
lcall
das
cmpsl
hlt
shll
rcr
addr16
mov
push
ret
loop
or
std
les
xchg
das
mulb
std
test
ret
mov
fwait
mov
sbb
rclb
lods
xchg
or
mov
lods
sbbl
or
jb
icebp
call
push
cmp
mov
roll
cmp
cli
sbb
or
inc
insb
lret
jp
dec
aam
pop
sbb
popa
xchg
xchg
mulb
jle
negl
movsl
fs
insb
ds
inc
mov
les
fisubrs
xor
mov
stc
push
mov
stc
add
iret
dec
xchg
neg
push
jecxz
inc
pop
xorl
and
xchg
xor
add
popa
mov
popf
in
fisttpll
xor
cmp
mov
ja
in
lahf
shlb
pushf
jne
repnz
cltd
pop
into
dec
cli
ret
mov
ffreep
mov
outsl
xor
dec
add
push
inc
lcall
cwtl
mov
add
dec
xorl
mov
rorl
jnp
repz
sahf
lds
xchg
mov
and
pop
ret
pushf
lea
imull
fbstp
inc
cwtl
jmp
insb
xchg
test
push
and
movsl
mov
sar
mov
ret
sahf
and
aas
jb
cmp
xor
mov
lcall
jbe
mov
or
jl
dec
and
fdivr
fcmove
and
movups
dec
out
push
add
imul
enter
add
push
or
push
mov
jnp
mov
out
andb
call
out
sub
testb
cmpsl
xchg
imul
std
ret
mov
adc
shrb
lods
sbb
pop
mov
pop
sbb
sbb
mov
js
add
mov
mov
loopne
mov
sub
leave
or
cmp
pop
adc
pushl
pop
out
repz
push
and
cmp
pusha
push
xor
aas
push
pop
push
inc
and
sub
and
fisttpl
jg
push
ja
outsb
fsubl
test
mov
orl
scas
dec
idivb
loopne
loope
xorb
cmp
popl
or
into
out
xor
mov
mov
lock
xor
js
enter
mov
xor
and
add
or
insb
push
ja
xchg
cltd
mov
in
or
ret
adc
std
push
push
jno
jp
cmp
mov
add
imul
loopne
sub
and
cmpb
add
pop
cmc
cmp
jecxz
push
das
pop
inc
sbb
addb
jo
xchg
cmp
inc
ret
mov
add
or
stos
push
dec
enter
pusha
pop
out
add
inc
xor
lret
lods
dec
pop
aas
mov
mov
data16
or
adc
outsb
jne
loope
rcr
hlt
jb
cmpsb
mov
fstl
add
inc
jb
push
imul
mov
lea
test
fcmove
pushf
push
adc
add
sub
mov
cmpsl
divb
js
xchg
jbe
xchg
inc
rcrb
dec
inc
iret
shl
das
xchg
dec
sahf
call
mov
dec
insb
pusha
out
xor
jno
mov
jns
dec
mov
cltd
mov
or
or
pop
add
mov
orl
frstor
inc
mov
xlat
mov
sbb
clc
insl
or
ja
xor
push
cmp
clc
fbld
xor
lds
scas
hlt
mov
mov
adc
sbb
add
std
mov
popf
outsl
push
pop
pushf
nop
pop
loop
sarb
jbe
jge
and
sbb
mov
inc
in
jno
sahf
jecxz
mov
mov
lret
aaa
outsl
jnp
iret
lcall
mov
cmp
sub
in
fwait
mov
jecxz
mov
sbb
jge
xchg
andb
sub
outsl
pop
ja
or
addl
ja
aas
data16
ret
jl
inc
popf
xchg
shll
fwait
cltd
imul
pop
mov
jmp
jmp
mov
pop
ret
out
pop
cmp
cs
idiv
fs
sbbb
jne
add
stos
or
data16
into
popa
xchg
push
mov
push
stc
loop
or
mov
pusha
xchg
mov
xlat
mov
inc
and
movsb
insl
push
jne,pt
dec
xchg
inc
mov
mov
or
imul
sub
cmpsb
and
out
loop
sbb
ja
nop
jne
push
or
inc
xchg
mov
jecxz
or
int3
lock
jae
lea
arpl
jecxz
ffree
cld
inc
xor
fistl
out
dec
gs
push
mov
mov
mov
or
shrb
push
mov
lcall
push
lock
cmp
lahf
inc
dec
sbb
testl
mov
pop
jge
test
adc
fcmovbe
scas
stos
sub
inc
xlat
cltd
mov
mov
daa
aam
pop
or
and
xlat
shlb
clc
ss
xor
mov
out
rorl
rcll
lods
test
daa
cmp
push
push
sbb
xchg
mov
xchg
shrd
call
mov
xchg
daa
lea
mov
mov
push
repz
pop
fwait
movsl
dec
stc
dec
sub
stos
hlt
std
and
ljmp
out
dec
aaa
sub
adc
mov
dec
in
xchg
cltd
adc
sbb
out
stos
and
ficoms
mov
cmp
pop
sub
pop
add
or
fildl
call
ja
and
imul
icebp
cwtl
or
xor
push
lods
fisubrl
sub
push
ret
sbb
xlat
adc
mov
outsb
ret
add
push
jp
aad
mov
out
scas
jae
movsl
movsl
sarl
leave
in
jno
add
movsl
fucom
insb
jbe
adc
ret
xchg
jl
xor
loope
pop
pop
mov
les
ret
jecxz
stos
sub
inc
sbb
jne
adc
js
std
cmp
popf
mov
mov
icebp
addr16
mov
lcall
nop
data16
add
loop
adc
div
cmp
loope
mov
ss
adc
xchg
jno
insl
sti
xor
push
fildll
mov
cmc
sbb
xor
pop
pop
out
pop
push
repnz
push
addr16
adc
push
rcrl
pop
lea
jae
mov
daa
dec
add
mov
cmpsb
insb
and
jne
fs
orl
pop
add
lds
lods
mov
adcl
pop
int
push
ret
mov
aam
sbb
pusha
popa
mov
shll
sar
sbb
jp
fdivs
popf
adc
aas
sub
das
pop
pop
out
outsb
xchg
push
ljmp
mov
xor
jecxz,pt
aaa
push
cmp
add
clc
leave
gs
ss
cli
mov
or
leave
outsl
or
roll
sbb
inc
mov
mov
call
sub
pop
jo
adc
cmpsl
in
cmp
cmp
add
addr16
push
lret
sub
dec
add
sub
xor
xchg
sub
mov
jo
dec
or
imul
leave
stos
dec
fstpl
mov
add
leave
ds
pop
mov
pop
int3
sbb
inc
enter
dec
lods
or
or
pop
into
lds
cmp
xor
or
lret
dec
jne
pop
pop
mov
push
clc
leave
xor
xchg
pop
push
faddp
or
inc
mov
dec
dec
adc
xlat
sub
mov
mov
pop
jl
xor
xor
pop
mov
shr
adc
push
adc
add
jns
push
mov
lods
repnz
add
jns
adc
mov
lock
fisttps
lcall
or
jne
push
lock
ljmp
lds
jns
pop
fsubp
mov
pop
push
hlt
loop
test
pop
ret
enter
jg
es
fsubs
dec
outsb
push
or
mov
and
xchg
push
push
cmp
or
sub
mov
stos
das
jg
in
fwait
xor
shlb
stos
in
dec
dec
inc
mov
icebp
cmovge
lret
in
xchg
jle
es
repz
sbb
mov
push
mov
jns
enter
adcl
in
pop
push
dec
cmp
in
add
fcompl
cmc
xchg
sti
mov
or
fldl
mov
cmpsb
stc
xchg
jg
fimuls
loope
repz
mov
sbb
enter
push
data16
divb
cld
loope
lcall
pop
js
push
dec
sub
or
std
sbb
repz
sbb
dec
call
sahf
push
cmp
std
mov
mov
scas
xorl
jmp
mov
movl
aad
out
adc
mov
dec
dec
cltd
jo
mov
iret
aaa
les
adc
xor
fdivs
xchg
loopne
push
xlat
sub
bound
xor
clc
pop
pop
mov
je
mov
add
push
or
sub
push
cmp
xchg
add
imul
xchg
in
push
mov
cmpsl
pop
out
insb
and
mov
mov
push
mov
jne
pop
out
sub
ljmp
push
mov
lock
xor
push
sub
dec
scas
out
icebp
mov
or
loope
add
and
jns
adc
cld
ss
add
stos
mov
iret
lods
pop
cmpsl
pop
sub
in
inc
fcoms
cmp
imul
iret
mov
imul
test
push
shlb
jne
jo
pop
jno
lret
mov
je
jp
cmp
imul
shr
pop
call
lock
fwait
jnp
and
movsb
sbb
and
push
and
xchg
adc
pop
or
xor
lcall
cltd
or
scas
mov
stos
call
sbb
xor
or
mov
and
xor
pop
xor
mov
push
push
clc
test
mov
comiss
ret
push
dec
cs
adc
xchg
movsl
dec
xorl
arpl
aam
lahf
fmull
sar
inc
xchg
and
add
xchg
cmp
jmp
adc
mov
out
fdivr
pop
das
cmp
adc
add
cmpb
out
imul
add
and
outsb
pop
cmpsl
xchg
js
int
xor
jno
imul
mov
out
sub
rorl
ds
mov
mov
iret
jae
xlat
mov
mov
and
mov
push
add
in
adc
sub
cmp
push
push
ljmp
jo
xor
in
jle
or
xchg
lahf
pusha
cmp
pop
data16
pushf
dec
jl
xchg
cld
push
addb
pop
jge
lods
std
mov
ds
outsl
inc
jns
pop
mov
in
mov
sahf
cmpsl
in
push
jecxz
aam
fsubl
dec
mov
outsl
das
jae
loop
add
xchg
mov
call
sarb
and
dec
and
das
lods
rcl
testl
mov
jne
bnd
aad
and
pop
sbb
pusha
test
jp
aaa
test
clc
or
sar
sbb
fdivl
lock
arpl
lds
inc
stc
fisubrs
pop
inc
mov
ja
cli
xchg
mov
or
jmp
sub
out
or
enter
xchg
insb
notb
aaa
arpl
icebp
add
into
mov
adc
idivb
icebp
sahf
hlt
and
test
fisttpll
inc
and
pop
push
out
loope
or
mov
repz
test
les
ja
sub
jecxz
sub
shlb
mov
dec
xorb
pop
and
xor
popa
rolb
and
in
aaa
jl
aas
push
sbb
jmp
mov
push
xchg
fucom
mov
sub
pop
es
xchg
nopl
lods
push
insl
call
in
aam
sbb
push
outsb
and
shrb
xchg
loopne
inc
lcall
test
inc
je
sbb
pushf
add
mov
loope
xchg
jmp
aad
mov
dec
cs
jo
push
and
push
pusha
pop
jno
pop
fdivrs
das
push
push
sbb
mov
mov
jbe
add
test
jg
lret
cmpsb
icebp
xchg
loopne
xlat
mov
movl
js
lret
jns
jge
outsl
sub
jge
pop
xor
int
add
lods
jp
xor
xchg
ret
add
lods
or
insl
nop
lea
out
loopne
mov
mov
test
test
inc
mov
xchg
lods
sub
mov
shlb
push
orb
stc
add
push
ja
shll
arpl
insb
cwtl
fbstp
adc
bound
cli
test
jb
popf
inc
mov
xlat
or
ljmp
xor
push
push
sti
clc
and
gs
cmpsb
leave
arpl
adc
idiv
loopne
inc
adc
jo
xchg
repnz
xchg
divl
lcall
lcall
stc
jnp
jg
lods
push
mov
dec
in
pop
cmove
mov
daa
out
push
sub
mov
sti
out
repnz
cmp
ret
sar
add
std
sub
movsl
or
mov
seta
leave
aaa
test
inc
xchg
aas
daa
cmpsl
mov
icebp
stc
jle
js
and
jle
sbb
out
neg
in
add
mov
or
mov
in
in
sbb
dec
pop
shll
cmp
fists
mov
push
cmp
daa
push
and
ljmp
mov
insl
mov
and
lcall
insb
icebp
orb
and
add
in
shrb
rcrb
pop
push
lods
fdiv
ret
adc
sbb
lcall
out
push
repnz
pop
mov
mov
bound
pusha
mov
xchg
je
js
jnp
cltd
xchg
out
aaa
test
ds
cmp
mov
mov
out
in
sbbl
push
fcoml
adc
rcl
adc
sub
sbb
mov
mov
les
jae
cmp
adc
sbb
and
inc
mov
aaa
pop
lds
cmp
inc
rolb
inc
incb
shr
cmpsl
faddl
insl
sbb
pop
lods
mov
stos
sti
mov
push
push
jb
in
sub
mov
loope
hlt
mov
cmp
in
dec
ret
jl
aaa
push
aas
ljmp
sub
pop
cmp
sahf
or
xor
cmp
pop
jmp
jmp
sarl
cmpsb
pop
and
and
mov
push
js
push
pop
ret
push
jo
dec
out
ljmp
sub
cmp
loopne
shrb
hlt
in
push
xchg
jae
dec
jb
lods
cwtl
popf
add
mov
scas
cmp
scas
or
int
dec
mov
adc
stos
cltd
push
sti
mov
bnd
dec
test
sbb
movsl
fwait
daa
push
sbb
add
dec
mov
and
das
sub
jmp
je
adc
movsb
out
lods
cwtl
filds
repz
in
imul
mov
enter
jbe
jmp
xchg
into
jp
cmpsb
jne
push
xor
repnz
sub
cmp
out
xor
js
cltd
mov
xor
cmp
ds
xchg
xchg
dec
in
inc
xchg
leave
aam
outsl
sub
pop
adcb
aas
and
xchg
into
and
adc
addr16
fdivr
mov
fisubrl
or
out
and
jo,pn
add
out
xor
inc
stos
data16
shlb
xor
addl
jno
iret
fisttps
add
insb
out
dec
insl
push
xlat
lea
mov
dec
dec
xchg
xor
inc
jp
adc
sub
ds
and
dec
jns
repz
push
sbb
mov
sub
mov
cmpl
sub
push
lock
int3
insl
and
lahf
push
mov
hlt
jns
imul
xorb
jae
fs
lds
ret
or
js
call
addr16
movsl
jge
mov
pop
jp
xor
sbb
cwtl
adc
hlt
cs
mov
add
std
sti
add
lret
mov
mov
adc
mov
stos
flds
inc
or
out
adc
push
jne
mov
shl
push
sub
add
push
addr16
mov
adc
inc
mov
nop
cltd
push
sub
cwtl
lret
xor
sub
es
dec
aas
pushf
prefetch
mov
dec
cmc
push
ja
ret
and
repnz
jnp
lods
lahf
lret
inc
sub
push
add
xor
jg
hlt
inc
lods
cmp
in
xchg
mov
jecxz
imul
mov
fdivs
rorl
xchg
mov
outsl
mov
imul
xor
mov
insl
cmpsb
jns
dec
jb
rcrb
mov
fs
jmp
fisttps
cld
cmpsb
dec
dec
daa
stos
xchg
shll
movsl
sub
and
stos
xor
fcmovnu
jp
sti
mov
jns
mov
mov
jo
sub
lret
test
hlt
lcall
lds
fists
xor
test
push
mov
lret
dec
movl
scas
xlat
repz
push
xchg
jns
sub
stos
movsb
mov
and
inc
mov
cmp
leave
leave
cltd
xlat
and
xchg
sahf
cmpsb
dec
rdtsc
cmp
jge
adc
cli
stos
out
pushf
pop
push
cmpsb
dec
test
dec
dec
scas
jo
cmpsl
xor
pop
pop
add
mov
stos
xor
xor
daa
and
adc
and
fidivrs
push
adc
mov
pushf
cmp
inc
sbb
cmpsb
mov
inc
mov
push
lret
mov
mov
cltd
xlat
ficomps
mov
jmp
mov
pop
bound
sarb
jbe
pop
repz
add
mov
test
aas
int
mov
hlt
push
push
jbe
loop
mov
jnp
pop
ljmp
mov
lods
push
jecxz
and
scas
clc
fwait
leave
sub
fisttps
mov
adc
shl
pop
rcl
lcall
push
popa
and
mov
pop
or
faddl
mov
imul
es
pop
cmp
lahf
mov
lret
sbb
scas
insb
js
push
sbb
pop
repz
test
adc
repz
push
lcall
shll
in
cmp
and
mov
add
inc
sbb
ror
dec
fwait
inc
fnstenv
mulb
push
sbbl
stc
je
push
negb
dec
mov
xor
icebp
fnstsw
xlat
sbb
loopne
xchg
or
pop
pop
inc
ret
call
ds
sbb
ljmp
fs
jae
xor
add
mov
cmp
dec
add
xchg
and
inc
jmp
orb
leave
testl
dec
add
adc
pop
aad
cmpsb
mov
adc
lcall
fnsave
std
clc
fldenv
clc
dec
sbb
inc
push
xchg
xor
sub
test
push
outsl
jle
add
arpl
lds
lcall
in
lods
ja
pop
mov
mov
xchg
in
imul
xchg
jl
lahf
and
mov
addr16
lret
pop
mov
xchg
hlt
clc
lret
dec
lock
lds
in
dec
sub
aaa
or
jge,pn
rcll
and
push
cltd
iret
mov
jmp
das
int
dec
out
mov
icebp
jmp
pop
scas
lret
dec
inc
mov
push
adc
dec
inc
daa
rolb
mov
mov
jge
xchg
pop
cmp
dec
into
and
mov
mov
push
scas
sbb
push
pop
daa
jo
xchg
rclb
add
popa
add
sbb
stc
ret
gs
decl
repz
cwtl
push
dec
in
jns
cmp
dec
mov
adc
fsubl
ss
jmp
add
aaa
cmp
rcll
dec
repnz
dec
ftst
shlb
dec
test
dec
cltd
repz
pushf
lods
and
xorl
pop
sbb
jae
pop
push
dec
sub
lahf
inc
jp
push
mov
mov
subl
jne
ret
sub
testb
cmp
dec
iret
add
fwait
jbe
inc
push
in
aam
mov
rorb
or
test
inc
pusha
dec
cmp
in
mov
add
xlat
cmp
mov
and
pop
inc
push
fbstp
sahf
adc
popf
adc
cmpsl
and
mov
sbb
lahf
pop
or
push
pushf
and
xchg
and
test
jecxz
mov
or
aaa
in
xor
xchg
dec
int
dec
jmp
mov
xchg
and
adc
inc
repnz
test
and
ja
pop
cwtl
mov
ss
mov
sarl
insb
hlt
or
cmp
in
push
xor
call
sub
imull
cwtl
push
insb
in
xchg
cld
inc
jp
cli
push
pop
inc
inc
add
jecxz
stc
faddl
in
sbb
mov
push
mov
add
jmp
jno
xchg
push
repnz
jnp
mov
or
rcrl
xchg
gs
aas
inc
or
lock
dec
stos
adc
pop
lods
std
push
sbb
enter
push
out
lods
adc
mov
ds
push
sub
or
jecxz
dec
out
adc
out
lret
loope
jo
dec
xlat
mov
popa
dec
ret
js
lods
xchg
or
lret
leave
and
inc
mov
mov
dec
mov
mov
call
shll
mov
subl
out
or
out
test
ret
sahf
pop
aam
cmp
jnp
hlt
cmpsb
add
jae
jmp
mov
pop
aaa
xor
jo
dec
or
cmpsb
popa
sub
inc
lea
push
mov
sbbb
aas
clc
std
xor
xchg
cmp
ja
mov
xor
lods
xchg
lds
cmp
mov
dec
pop
add
and
or
mov
push
inc
mov
push
push
xchg
pusha
add
imul
lock
lock
and
pop
xchg
or
and
test
sbb
jp
mov
push
bound
xchg
in
mov
insl
pause
aam
pop
cmp
mov
inc
imul
adcb
cltd
jl
jle
lds
mov
push
mov
jno
sahf
and
mov
pop
xchg
ficomps
cli
jge
inc
data16
and
jle
mov
mov
out
xchg
dec
jns
mov
and
js
in
rorl
cmp
repz
scas
or
rcr
daa
sbb
int
movsb
out
dec
or
test
lret
subb
inc
stos
rol
xchg
pop
add
test
jne
loop
in
mov
add
in
jecxz
js
adc
ljmp
dec
pop
add
stos
push
mov
lldt
mov
or
sbbl
repz
mov
subb
inc
repnz
cmp
push
push
les
cmp
mov
call
out
leave
fnstcw
fxch
inc
add
sbb
fisttpll
roll
add
jo
mov
gs
mov
xor
cmovae
jae
fdivr
andb
shll
daa
call
jno
mov
js
xchg
sub
and
loopne
rcll
mov
insl
push
add
inc
jmp
jo
lock
nop
pop
mov
nop
xor
cs
inc
mov
aad
inc
sub
scas
data16
inc
in
iret
mov
lret
in
sub
sbb
cld
jnp
loope
lock
mov
xor
push
push
ficoms
jecxz
add
arpl
popf
insb
and
nop
es
rclb
lret
ret
push
adc
sbb
push
jle
jmp
stc
mov
mov
into
aam
pop
sti
pop
clc
insb
aaa
push
lret
or
imul
jg
inc
outsb
ja
jns
jne
out
xor
shll
adc
pushf
pop
fmull
inc
loop
fnstcw
sub
fs
adc
add
push
or
jbe
roll
call
in
jmp
xor
jg
lcall
mov
dec
inc
and
and
adc
cmp
fwait
sbb
out
test
fidivs
mov
dec
jl
push
pop
test
pop
add
sbb
and
int
andl
cmp
xchg
jbe
lods
in
pop
gs
es
in
lcall
xor
stc
fidivrs
inc
lret
mov
mov
outsb
jno
add
cwtl
movsl
cmp
sahf
cmc
push
pop
bound
jmp
aad
dec
mov
or
sub
dec
sbb
in
incl
mov
push
mov
and
push
rolb
gs
mov
int3
or
ret
adc
fimull
lods
inc
pop
fisubs
or
cld
mov
pop
lret
xor
sahf
imul
aas
mov
jae
cli
ljmp
cld
and
loope
les
xchg
and
js
add
mov
add
je
mov
jmp
addb
inc
xchg
mov
add
pop
aad
inc
mov
sbb
rcrb
test
xor
lods
ds
shl
jmp
imull
iret
jne
repnz
mov
sbb
and
jo
scas
in
ds
sub
enter
cmp
das
xchg
loop
xlat
ss
hlt
cltd
xchg
inc
fsubrp
xchg
xchg
push
neg
das
pop
scas
dec
xchg
fcomps
jp
add
fiadds
adc
jle
xchg
ja
pop
rorl
je
dec
mov
sub
adc
push
dec
mov
adc
jmp
cwtl
jmp
lfs
xor
sahf
dec
xor
xchg
ret
mov
mov
jae
subl
loop
mull
mov
or
enter
pusha
arpl
pop
pop
stos
sub
insl
push
mov
lea
lret
mov
sub
push
lret
testl
gs
mov
in
lds
xchg
andps
loopne
imul
xchg
mov
jo
or
push
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
mov
jnp
fnstsw
mov
cmp
xor
jmp
fsubrs
mov
popa
jmp
int3
dec
loopne
gs
movsb
adc
icebp
dec
addr16
scas
out
cmp
nop
inc
aaa
aad
inc
mov
cmp
and
aad
js
push
lds
jl
xchg
mov
push
int3
jb
push
cld
cmc
inc
je
mov
adc
sbb
cmpsl
and
mov
sti
pop
add
stc
cld
in
mov
inc
cmp
lret
push
js
xchg
in
or
pop
fcomp
sbb
fcoms
ret
aam
mov
in
add
aaa
xchg
sbb
add
lret
fnsave
popa
sti
inc
out
rcr
sub
adc
ss
imul
sub
arpl
ljmp
sbb
xchg
xor
pop
insl
inc
out
dec
xlat
movsb
pop
cmpxchg
inc
xor
dec
sub
or
mov
mov
inc
repnz
scas
xchg
sub
aas
fdivrl
xor
test
push
add
aas
sbb
mov
sti
test
jecxz
test
push
fsts
movsb
lcall
pop
adc
in
push
cld
std
and
daa
ficompl
jl
add
rolb
mov
sbb
gs
mov
sbb
lods
push
mov
add
pop
dec
rclb
adc
sub
mov
addl
xchg
lods
add
inc
inc
lods
cmp
lret
stc
dec
xchg
subl
and
push
in
jl
push
add
jae
pop
std
movsl
pop
movl
dec
pop
fsts
rclb
cmp
dec
jmp
in
ret
push
std
daa
fnstsw
outsb
mov
mov
sub
dec
xchg
sbb
jle
testb
clc
and
leave
push
aam
xchg
out
dec
jns
xchg
adc
fdivrl
adc
repnz
pop
rorl
andl
popf
pusha
jecxz
xchg
rorb
mov
cmp
pop
dec
mov
js
push
xchg
pop
stc
cmp
inc
data16
push
popa
inc
xchg
or
in
repnz
adc
shrb
das
xchg
mov
mov
inc
icebp
out
addr16
sahf
pop
dec
mov
sub
cli
rclb
sub
and
fisubrl
add
mov
sub
pop
mov
jns
lods
xchg
xor
popf
mov
push
pop
pop
inc
shl
pop
mov
adcb
iret
popa
cltd
lahf
jns
cmpsb
inc
inc
pusha
add
push
mov
sahf
jmp
adc
pushf
add
sub
and
dec
cs
and
rcll
pop
mov
add
sub
cmp
mov
lea
push
cwtl
and
mov
jns
add
popf
shufps
out
push
es
into
sbbb
sahf
jnp
and
xchg
daa
mov
in
adc
mov
sti
and
cmpsb
pop
ds
mov
gs
dec
or
xchg
rcll
fcmovu
mov
xchg
push
cmc
in
ret
push
fwait
clc
push
mov
dec
pop
xlat
push
mov
out
dec
sahf
lds
inc
dec
sub
add
test
ja
dec
inc
jmp
outsb
mov
and
dec
cli
stc
stc
inc
test
gs
in
mov
cmp
inc
push
xchg
pop
dec
in
int3
mov
dec
cmpl
cmc
jo
inc
rorl
in
mov
int3
jbe
mulb
jbe
out
xchg
jg
add
repz
sub
pusha
pop
xor
fstpl
push
push
jmp
jne
mov
sub
sbb
test
mov
int
xchg
arpl
xchg
sub
or
mov
mov
mov
pop
sub
movsb
adc
lock
into
pop
loopne
cltd
adc
xorb
push
mov
lret
pusha
stc
dec
dec
mov
mov
and
repnz
int
mov
sti
dec
lret
or
repnz
jo
fcmovnbe
aaa
jl
aam
pop
or
dec
in
sub
adc
fisubl
in
pop
and
xlat
sub
cmp
jne
pusha
cltd
pop
out
push
test
inc
aas
fmuls
loopne
insb
sti
sahf
movsl
pop
imul
mov
shrb
fildl
out
popa
notb
movsl
arpl
xchg
xchg
nop
in
popf
mov
pop
jnp
cmp
xchg
and
dec
mov
mov
lret
in
icebp
dec
push
pushf
xor
and
and
mov
call
enter
xchg
lods
add
dec
test
cmpsl
sbb
adc
sti
iret
cld
ljmp
mov
adc
scas
iret
dec
inc
orb
movsb
lods
mov
or
pushf
add
lahf
outsb
out
and
lock
sbb
add
mov
mov
sbb
out
push
inc
sarb
pop
arpl
ret
lahf
inc
jae
lret
les
cmp
and
lods
lods
scas
aam
stos
lret
sbb
jp
pop
lods
dec
pop
cmp
aas
scas
mov
sbb
adc
mov
ds
cmp
enter
outsb
scas
mov
out
je
xchg
lods
bound
je
je
repnz
repnz
mov
stc
sbb
push
xchg
cwtl
xchg
adc
mov
sbb
jecxz
push
or
loop
std
lahf
ss
mov
roll
mov
orl
lret
sub
daa
dec
enter
int
xchg
push
or
loop
shlb
mov
mov
loop
push
jg
repnz
inc
pop
enter
insb
xchg
test
gs
mov
shrl
fwait
aas
adc
pop
insb
mov
add
jecxz
test
loopne
imul
cwtl
bound
adc
mov
leave
lods
push
pop
lods
es
mov
stc
sbb
push
pop
push
or
jne
data16
adc
test
mov
lea
dec
dec
push
loope
cmp
adc
push
int3
or
sbb
jnp
das
pop
push
js
sahf
inc
mov
ds
lret
push
pop
push
xlat
movsl
cwtl
inc
ja
mov
mov
mov
outsl
mov
push
cmpb
sub
and
push
outsb
ljmp
ss
add
push
push
inc
and
sub
xchg
mov
les
pop
mov
push
lds
scas
mov
in
rorb
mov
shl
orb
movl
imull
fs
popf
mov
ljmp
and
shll
dec
dec
xchg
pushf
insb
inc
addr16
orl
pusha
mov
test
imul
mov
inc
repnz
movsl
jmp
fs
ret
ficoms
fdivl
mov
jbe
add
cmp
mov
mov
paddd
call
jae
or
pop
pop
daa
jne
sarl
mov
or
outsb
pushf
leave
out
into
jl
jmp
inc
pusha
jnp
out
movsb
popf
or
inc
ret
repnz
inc
rcll
mov
jo
lea
pop
push
cmp
ljmp
cmp
mov
mov
call
jg
dec
outsl
mov
aaa
mov
pushf
and
mov
ss
repnz
and
inc
loope
popa
fldl2e
pop
xor
lahf
lds
cmpsl
repnz
cli
test
sbb
or
fmull
enter
fidivs
jmp
jge
xor
push
hlt
dec
fidivrs
pop
insb
cmp
gs
dec
pusha
fmull
cmpsb
sbb
sub
mov
daa
and
cmovne
cmp
scas
xchg
jle
pop
aam
xchg
push
lods
fldt
pop
lds
cmp
cmp
sub
add
inc
pop
test
pop
cmc
shr
fstl
aaa
testb
jns
mov
mov
scas
and
mov
push
andb
sbb
jne
mov
push
cli
lock
icebp
movb
scas
mov
in
jmp
inc
mov
jmp
and
lds
ret
jae
jb
add
fdiv
mov
jp
insb
push
jns
js
scas
cmp
xchg
or
sarl
xchg
inc
lret
mov
ljmp
sbb
sub
ss
sbb
xchg
inc
push
in
xorb
xor
cli
sub
adc
jnp
push
shrl
orl
dec
and
mov
cmp
push
cmp
outsl
or
jle
fsubrp
bound
mov
xlat
mov
lahf
add
and
enter
push
and
sub
outsb
gs
mov
mov
push
adc
or
xchg
fstpl
mov
jno
fimull
les
cwtl
mov
jle
idivb
test
mov
scas
dec
lea
fstps
pop
pushf
xor
push
cmc
cli
inc
mov
ljmp
roll
cmpsl
jae
cltd
aas
and
jae
nop
cli
and
pop
icebp
lods
scas
decb
icebp
cmp
jecxz
xor
subl
push
stos
jno
push
stc
push
add
cmp
scas
jge
mov
jp
dec
mov
popf
iret
aaa
icebp
repz
out
aaa
call
sub
adc
jl
out
inc
inc
mov
inc
and
adc
add
and
cmp
cmp
xchg
mov
ljmp
sbb
scas
lea
in
push
dec
fld
lret
pop
push
cmp
imul
inc
inc
pop
xchg
add
jecxz
std
and
or
mov
in
sbb
inc
mov
inc
adcb
lret
idivb
ljmp
aam
inc
out
cmp
mov
add
xor
xchg
test
mov
sbb
andb
imul
and
xchg
popf
insl
in
pushf
pop
adc
clc
sbb
jge
jae
adc
dec
bound
cmp
push
mov
mov
cmpsb
or
aad
lds
add
shl
in
pop
sub
int
cwtl
adc
lds
push
xchg
xor
add
mov
into
ja
lret
clc
or
dec
jp
jle
cmpsb
shll
call
fisubrl
cs
jno
pop
xchg
or
mov
or
jmp
test
jae
jns
mov
mov
jg
dec
dec
add
push
in
sbb
andb
cmp
rorl
outsb
hlt
mov
sarb
dec
jge
xchg
int3
pusha
rolb
jle
cli
pop
pop
sbb
jmp
in
fisttpl
stos
ror
aaa
imul
je
in
or
and
push
or
mov
sub
daa
fwait
lret
pusha
call
arpl
inc
pop
mov
cli
pop
rorl
mov
into
or
xor
mov
rcl
addr16
shlb
push
push
sub
popf
arpl
bound
add
jbe
cmpsb
and
aas
pusha
xor
or
inc
vmulsd
adc
rcr
mov
add
jb
cltd
rcrb
push
ss
pop
fnsave
scas
pop
cld
push
dec
pop
and
andl
sbb
mov
movsl
mov
or
inc
inc
sub
sbb
jl
add
xchg
xor
frstor
mov
and
cmp
test
mov
adcb
aas
ds
xor
pop
std
nop
hlt
mov
inc
mov
ds
push
mov
fistpll
mov
mov
ss
sbb
into
rorb
sbbl
xchg
nop
testb
clc
push
xchg
mov
rcll
arpl
sub
push
sbb
ljmp
sbb
lahf
xor
out
ret
cmpb
inc
add
stc
sahf
dec
xor
xlat
add
and
imul
ficomps
cs
daa
loope
jns
xor
imul
sahf
insb
sub
jecxz
scas
xchg
dec
push
mov
push
xor
enter
pop
lock
pop
xchg
jns
dec
push
pop
call
mov
lock
or
shl
test
sti
loope
iret
sub
inc
fdivl
cmp
stos
movsl
push
popf
fidivl
jns
gs
repnz
and
pop
aam
dec
popf
jmp
jp
and
add
inc
jnp
cs
in
sbb
insl
pushf
jns
fisubl
push
sbb
and
fstpt
int3
sahf
jns
fidivl
in
clc
jns
push
and
shl
cltd
xlat
adc
sub
mov
fistps
negl
or
outsl
mov
cmc
lret
cmp
test
sub
int
jg
xor
and
arpl
mov
jp
lahf
mov
and
lds
test
nop
dec
push
int3
jle
scas
adcb
das
cwtl
sub
ret
ja
nop
dec
pop
xor
cmp
idivb
sub
mov
sahf
add
mov
loop
in
scas
jbe
rorl
jecxz
in
shll
and
mov
or
adc
xchg
fisttps
insb
xor
out
scas
adc
or
pop
out
cli
js
push
arpl
dec
mov
hlt
test
mov
add
sub
js
sbb
out
cmpsl
dec
insl
inc
gs
ret
je
dec
ds
xchg
sarl
xchg
aas
mov
idiv
mov
popf
fimuls
stc
sahf
pop
jno
jns
aas
jns
lret
or
cmp
dec
js
popf
pop
mov
mov
xlat
mov
inc
sub
mov
push
add
subb
sti
pop
pushf
cmp
rorl
cs
sub
pop
push
inc
mov
rcrb
mov
mov
lahf
scas
scas
fdivr
lea
scas
loop
push
inc
jl
pop
andb
push
pop
add
adc
xchg
loope
repz
push
mov
sub
inc
andl
sbb
test
sarb
sub
push
add
push
jmp
loope
xor
int3
mov
into
arpl
or
int
addb
inc
ljmp
rorb
mov
dec
dec
xchg
adc
inc
dec
sub
cmp
push
scas
mov
lods
add
in
mov
daa
xchg
mov
pop
or
ss
orl
movsl
and
sbb
clc
div
push
push
fxch
xchg
ficoml
and
movsl
jl
popf
ja
dec
pop
adc
add
dec
push
jne
cmp
popf
and
cld
sbbb
xchg
enter
pop
ficoms
in
repz
and
xchg
ret
adc
lahf
and
xchg
cli
dec
sti
xor
sub
pop
aam
repz
pop
inc
insb
jno
sub
aad
incl
filds
popa
or
fs
dec
scas
imul
loopne
dec
sbb
jnp
stos
mov
imul
enter
punpckhbw
test
mov
imul
cmpsb
les
lods
cmpsl
push
sub
add
stos
imul
fs
adc
std
incb
mov
cld
dec
sub
test
push
stos
int
xchg
in
shr
sbb
pop
outsl
mov
in
imul
sub
lods
arpl
jbe
xchg
sbb
adc
or
xor
iret
sub
cmp
imul
scas
and
mov
dec
aaa
dec
cmpsl
xchg
pop
sti
mov
inc
out
nopl
into
sub
xor
mov
xor
pop
xchg
mov
cwtl
pop
dec
and
int
aam
mov
dec
push
imull
adc
cmpsl
mov
sub
aad
pushw
je
jnp
pop
mov
push
sahf
xchg
ret
mov
sbb
lret
in
xchg
lods
test
imul
jge
cld
inc
stc
aad
imul
rorb
add
inc
add
mov
add
out
loope
ret
cmp
cs
rcrl
pop
sub
daa
ljmp
or
aad
mov
adc
sub
std
sbb
mov
and
stc
jmp
test
and
repnz
dec
mov
xor
jg
std
gs
loopne
fdivs
hlt
shlb
syscall
xchg
out
insb
jbe
xchg
mov
lret
or
lret
xor
sbb
adc
dec
mov
push
movl
mov
int3
push
cmp
les
adc
fst
push
xchg
adc
cld
or
lds
aas
push
or
jecxz
int
int3
gs
dec
ret
pop
flds
and
xchg
loopne
add
cld
sub
movsl
adc
push
sbb
clc
scas
pop
sar
mov
dec
mov
add
push
mov
ljmp
js
xor
or
fwait
sub
xchg
dec
push
bound
sti
inc
roll
pop
insb
adc
xchg
lods
repnz
aaa
sbb
sub
js
xlat
rcr
daa
cmpsl
sarl
xchg
xchg
aaa
push
mov
mov
lret
daa
dec
sbb
sar
inc
rclb
fninit
sbb
in
mov
cld
or
cli
xor
push
push
dec
mov
xchg
cmp
into
xchg
movsl
icebp
rol
mov
sbb
popa
push
add
sbb
xchg
iret
push
clc
sub
fdivs
sub
mov
dec
and
aam
ja
lret
outsl
addr16
popf
jle
mov
out
repz
pop
pop
aas
push
aad
sarb
adc
mov
mov
mov
scas
inc
jp
xor
mov
xor
stc
sub
xchg
pop
push
and
sub
pop
adc
xchg
mov
push
leave
es
pop
adc
cmp
ror
mov
bound
aaa
insb
inc
or
in
xchg
repnz
sub
dec
int3
repnz
add
jmp
fimull
sub
and
mov
ret
inc
lock
inc
and
push
mov
mov
fnstsw
inc
cmp
in
out
fs
lret
out
pop
mov
inc
sbb
adc
cmpsb
enter
jge
push
in
popa
inc
ss
addr16
sub
ret
dec
sub
cli
adc
out
rolb
imul
shrl
mov
mov
nop
push
int3
lock
insl
push
pop
stos
lods
cmp
mov
dec
pop
jl
adc
inc
mov
cmp
insl
mov
leave
into
push
xchg
xchg
dec
mov
mov
jne
push
lock
mov
icebp
js
mov
inc
into
inc
and
repz
pop
test
outsb
addr16
arpl
shll
stc
cmc
sub
pop
es
jne
stos
and
pop
mov
sbb
scas
fwait
xchg
mov
sub
add
insb
mov
cmp
jmp
aam
inc
addl
xchg
sahf
dec
pop
jl
iret
mov
cmp
cmp
test
dec
in
mov
sahf
repnz
call
es
push
or
nop
mov
test
mov
jp
ja
push
popa
inc
inc
xor
xchg
sbb
sbb
xor
sbbl
adc
ret
jb
rorl
loopne
pop
shlb
shrl
jo
fistpll
push
or
push
cmc
or
dec
adc
mov
addr16
aas
jmp
inc
adc
test
ds
adc
push
nop
enter
jmp
mov
cmpsb
xchg
push
adc
cwtl
loopne
mov
fists
les
orb
mov
and
xchg
mov
jbe
cmp
mov
push
outsb
hlt
push
das
into
popf
sbb
adc
xchg
stos
jns
cmpsl
pop
cwtl
jle
jmp
mov
xchg
cmp
pop
jns,pn
sahf
loope
cmp
arpl
pop
out
loope
or
xor
mov
xor
mov
aam
mov
mov
and
pop
scas
call
mov
pop
mov
mov
jb
sub
sbb
rcrl
cmp
cmp
xor
pop
ret
call
mov
cld
test
addr16
orb
fcomps
xchg
xor
or
movsl
mov
es
or
adc
mov
push
xor
adc
cmp
popa
lds
iret
in
mov
dec
imul
aas
jbe
adc
int
andb
lret
cmc
sbb
fsts
xchg
cmp
mov
leave
fistpll
push
movsb
shll
nop
daa
imul
frstor
popa
mov
sahf
fs
ljmp
out
in
xchg
pop
fiaddl
mov
mov
pop
adc
xor
add
hlt
adc
cmpsl
fiaddl
lret
ficoms
es
inc
ds
loop
call
mov
push
jecxz
mov
mov
lret
jecxz
aaa
ja
lahf
mov
outsb
sub
sbb
sbb
into
out
mov
ret
das
pop
mov
pmulhw
pop
pop
leave
sbb
mov
dec
arpl
sbb
inc
mov
aas
je
cmp
jns
and
sub
dec
addb
mov
jnp
cli
jl
pop
inc
pop
push
ret
gs
outsl
sbb
sbb
cmpsb
stc
cs
ds
fnstcw
push
fstl
out
pop
pop
stos
jl
pop
ret
shrb
push
push
sub
mov
push
pop
push
adc
xchg
xchg
mov
outsb
call
shll
popf
jmp
sbb
in
pop
mov
rcrl
shrl
orb
rcrb
add
adcb
leave
xchg
inc
shrb
in
rorb
mov
roll
imul
loopne
xchg
sub
mov
pop
sub
xor
dec
mov
daa
cmpsl
push
sbb
mov
adc
subb
xchg
lock
aad
outsb
dec
jae
repz
cs
dec
cli
inc
movsb
mov
xchg
mov
and
mov
loop
movsb
test
push
sbb
inc
add
push
decl
mov
push
dec
shrl
sub
add
xorb
aaa
mov
jno
dec
cmpsb
adc
pop
add
fidivrl
das
in
push
inc
xchg
insl
fdivrl
sbb
mov
pushf
mov
arpl
inc
or
mov
addr16
mov
or
fwait
hlt
movsl
ror
mov
mov
enter
cmpsb
xor
lods
xchg
cld
push
xchg
inc
add
mov
inc
cltd
in
push
test
out
fisttps
loopne
hlt
mov
xchg
sahf
imul
out
mov
and
aas
std
rcrb
xor
addl
mov
sbbb
js
and
xchg
test
sub
shll
jne
mov
cltd
sub
inc
ljmp
clc
popa
lret
or
or
dec
in
popf
mov
xor
push
gs
jmp
pop
sbb
dec
into
fmull
cmp
aas
movsl
ja
jmp
cmp
lea
dec
test
jg
cmp
pop
insl
mov
sub
mov
push
xlat
cmp
pop
adc
xorb
adc
loopne
dec
fstps
bndstx
push
adc
mov
aam
clc
ret
push
in
or
rcll
and
xchg
lret
scas
mov
xchg
repnz
mov
push
cmp
push
insl
and
jbe
je
jmp
jecxz
stos
push
jne
sahf
sub
fnsave
add
out
pushf
rcr
inc
insb
cmp
pop
lock
push
pop
pop
es
pop
mov
iret
push
dec
shrl
xor
daa
cltd
popa
rcl
repnz
mov
popf
lret
mov
mov
cmp
out
movsb
iret
adc
inc
mov
pop
mov
pop
addr16
mov
mov
xor
pop
mov
mov
xchg
orb
imul
gs
mov
loopne
cmp
dec
aad
add
int3
insb
add
mov
xchg
sbb
insb
push
mov
jns
repnz
ss
xchg
jb
push
pop
jne
fcmovu
int
and
enter
insl
in
push
inc
mov
scas
and
pop
xor
lea
es
in
xchg
shll
bound
hlt
add
daa
pop
pop
cmc
mov
ja
ret
vpmulhuw
xchg
hlt
mov
add
aam
stc
hlt
pushf
imul
mov
das
sub
push
and
testl
push
xchg
outsb
das
and
cmp
les
aad
jae
int
jns
psraw
pop
not
inc
pop
dec
lods
lods
aam
push
xor
nop
xor
loope
lods
bound
in
jecxz
dec
mov
adc
aad
aam
arpl
fs
or
repnz
mov
push
pushf
jge
xchg
dec
jg
es
pop
daa
out
pusha
ret
mulb
adc
sub
pushw
cmp
js
cmc
mov
push
pop
fnsave
cmp
jle
jns
and
addr16
ret
inc
mov
roll
jns
sub
fdivrl
cmp
mov
icebp
or
daa
int
fwait
shlb
call
in
jg
icebp
dec
icebp
pop
or
xchg
mov
or
adc
loope
cmpsl
xchg
or
div
lcall
pop
fnstenv
mov
mov
or
icebp
sbb
cmc
mov
sbb
outsb
out
jnp
and
push
aam
fucomp
cs
es
mov
out
jbe
loop
out
out
mov
add
gs
inc
mov
aad
xchg
cmpl
pop
arpl
scas
push
inc
lods
push
lahf
aam
insb
or
out
mov
inc
and
xchg
push
jmp
adc
mov
imul
repnz
cmp
mov
cmc
imul
pop
sbb
lds
sub
xor
add
jns
ja
add
leave
sub
push
int
lar
push
inc
je
ljmp
inc
mov
xchg
and
pop
push
and
and
loope
or
addr16
dec
xor
jb
sbb
fs
out
in
cmp
int
or
or
je
out
sub
sub
mov
push
mov
or
loop
enter
mov
out
inc
sub
loope
mov
fbld
mov
sbb
out
push
aaa
js
int3
mov
into
adc
sti
add
inc
pop
sub
cmp
sarb
popf
repz
add
xor
adc
cs
or
pop
cmpsb
pop
leave
cmp
pop
xchg
cmp
outsl
pop
jbe
mov
xchg
rorl
lret
cltd
mov
call
je
popa
addr16
into
cmp
sti
push
and
shrl
xor
inc
push
gs
clc
out
cmp
gs
mov
pop
dec
loope
out
int
scas
cmp
fistps
lds
add
rolb
xor
mov
out
loop
mov
dec
leave
lock
outsb
jge
dec
hlt
lea
cmpsb
xorb
pop
stos
dec
jns
fildll
inc
push
xor
scas
xor
jb
mov
bound
push
iret
inc
add
xor
scas
lcall
jns
pop
sub
xor
rol
repnz
addr16
xchg
xor
pop
jb
in
xor
loope
cmp
mov
in
aam
rcl
fimuls
pop
cmpsb
test
mov
ds
lahf
jno
inc
imul
xchg
cmpl
fwait
std
insb
cmpsl
push
jne
orl
jmp
pusha
or
test
cmp
rcl
push
and
mov
loopne
cs
sub
sahf
movq
out
jmp
in
pop
movsb
stos
popa
js
or
mov
cmp
cmpsb
adc
inc
aas
and
addr16
push
fwait
jb
mov
outsb
fsts
dec
and
rorb
push
xor
gs
jmp
sbb
fnstenv
pop
gs
call
cmpsl
or
add
neg
je
daa
xchg
stos
andb
inc
push
scas
sbb
add
pushf
sbb
push
gs
addb
roll
mov
lock
jnp
lret
aas
imulb
arpl
mov
imul
add
adc
sbb
mov
aaa
jecxz
js
nop
rorb
nop
and
sbb
outsl
cmp
cwtl
push
jl
dec
cmc
add
or
mov
cltd
push
adc
insb
loop
test
outsb
jmp
jecxz
push
dec
popa
cltd
hlt
adc
psrlw
sub
daa
pop
daa
mov
jae
rolb
pop
inc
sbb
cmp
addb
add
cld
ror
repnz
or
pusha
mov
jmp
imul
fwait
dec
mov
sbb
sub
orl
push
cmp
out
jbe
adc
into
adc
cmp
mov
mov
and
scas
mov
pcmpgtb
lds
or
pop
push
inc
pop
outsb
call
adc
lret
lock
les
aam
sti
xor
pushf
lea
adc
xchg
xorl
pop
or
mov
lods
sbb
xor
lret
adc
mov
add
dec
jge
mov
int3
sbb
and
mov
sbb
mov
fwait
push
aad
pop
jge
lret
bound
or
stos
stc
lock
enter
sub
or
mov
xor
fucomp
ss
movsb
pop
iret
mov
shrb
js
icebp
pop
stc
jp
out
arpl
int3
push
jno
fcmovne
rorl
adc
jns
jmp
mov
sbb
push
adc
sti
jne
das
mov
sbb
fistpll
mov
mov
shll
cmp
jge
or
cmp
adc
and
push
mov
sub
divl
inc
movsl
dec
push
push
cs
outsl
pop
fnsave
faddl
imul
pop
movsl
push
xor
lea
ficompl
lea
sbb
dec
push
rcl
xchg
lret
pop
outsb
mov
jp
adc
add
pop
add
sub
ljmp
outsb
xor
loopne
leave
sbb
jg
imul
dec
push
sti
loope
adc
jmp
cmp
jmp
fcomip
xor
push
dec
mov
sbb
mov
dec
jbe
outsb
les
cmp
sbb
test
out
add
out
fs
cmp
sbb
dec
rolb
inc
lret
ja
xchg
jmp
sub
mov
and
cmp
xchg
test
testb
push
adc
ds
or
outsl
scas
mov
mov
cmp
jbe
jne
pop
push
pop
push
cmpsb
adc
sub
gs
test
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
dec
xchg
inc
pop
jl
ljmp
iret
pop
cld
mov
sbb
adc
dec
movsb
dec
sbb
fstps
in
cmp
popf
mov
fsubrl
loope
lss
add
mov
mov
scas
xchg
data16
jmp
out
ds
pop
xchg
mov
cld
in
jb
iret
aas
pop
arpl
sti
mov
pop
sbb
push
mov
mov
mov
imul
adc
sub
sbb
mov
dec
and
jbe
insl
lds
loop
lods
jae
xchg
push
mov
xorb
or
cld
or
dec
mov
nop
mov
fistpl
push
cmc
stos
mov
loope
cmpl
pop
insl
enter
sub
sub
jbe,pt
cmp
push
andb
pop
and
pop
insb
lahf
std
rcrb
clc
inc
mov
cmpsb
push
aam
shrb
xor
call
arpl
xor
or
mov
cmc
push
subb
loope
ret
xchg
jns
mov
dec
leave
pop
clc
jae
xchg
in
or
sub
popf
pop
and
je
nop
pop
and
nop
fcoml
jg
jp
fimuls
xchg
js
outsl
xor
lock
orb
xor
pop
cli
xlat
or
les
ljmp
stc
cwtl
insl
mov
daa
sub
push
sub
fs
jnp
stos
aad
stos
jb
sbbl
cmpsb
mov
fdivs
lods
mov
add
sbb
and
xor
inc
cmp
popf
repnz
mov
dec
sbb
cmp
sub
fidivs
sbb
jnp
lahf
dec
sbb
stos
pushf
call
push
inc
add
cmp
pop
sub
jno
in
pop
out
testl
aaa
sbb
stc
js
dec
addr16
sub
test
popa
sbb
push
cmp
pop
rcll
mov
cmpsb
in
mov
icebp
add
xor
and
push
ds
or
je
mov
inc
jmp
push
in
js
mov
sub
nop
push
hlt
xchg
pop
ret
jbe
mov
jbe
cmp
cmpsb
shrb
add
sub
sbb
ja
adc
xlat
dec
shlb
fcomps
inc
pop
inc
or
minps
mov
and
arpl
ds
cwtl
jns
loope
mov
jmp
and
mov
sbb
xor
cltd
inc
in
push
sbb
jns
out
push
cmp
lretw
inc
jo
pusha
lods
add
inc
std
mov
dec
rcll
leave
subl
decl
rorb
ja
sub
sbb
push
lock
xchg
cmp
shrl
dec
pusha
add
out
mov
data16
mov
pushf
pop
scas
testb
push
jno
xorl
lock
fldl
imul
mov
adc
je
aaa
xchg
mov
and
or
stos
jp
in
sbb
cmp
loope
mov
jg
jecxz
inc
jbe
sbb
mov
daa
aad
cli
cwtl
es
subb
mov
movsl
ss
leave
ror
xchg
xor
xor
aam
mov
pop
xor
lea
inc
ljmp
mov
jge
cmpsb
and
fcoml
xor
in
stc
cmp
cli
inc
or
enter
loope
scas
dec
aas
adc
mov
insb
icebp
pop
adc
ss
dec
insl
dec
and
jno
jne
fwait
and
stos
cmc
adc
mov
jae
jp
xor
adc
xchg
sbb
pop
outsl
int
enter
gs
add
cmp
xor
pop
xchg
and
scas
adc
jbe
out
mov
sahf
mov
jns
xchg
jnp
in
push
es
cmp
cltd
dec
jmp
sub
jbe
divb
dec
lcall
pop
sbb
mov
clc
aad
lds
movsl
sbb
lret
imul
outsl
sub
pop
nop
sub
daa
jb
xlat
mull
push
add
jbe
xchg
sub
insl
and
shl
mov
xor
aad
lods
jg
xchg
cmp
daa
push
fiaddl
and
xchg
imulb
dec
pop
roll
imul
pop
mov
push
lods
xchg
mov
int
push
mov
xchg
outsl
shll
in
xchg
add
xor
dec
mov
cmp
add
inc
leave
push
inc
mov
pop
mov
or
mov
pop
inc
inc
into
scas
mov
pop
sub
or
dec
sbbb
xchg
mov
push
and
adc
mov
incb
repz
adc
repnz
adc
int3
mov
fisubrl
arpl
inc
adc
and
rorl
jno
faddl
mov
hlt
scas
rcr
repnz
mov
pop
jl
fdivrs
pop
imul
je
lods
dec
xchg
pop
out
push
out
adc
shlb
jae
lods
mov
insl
push
in
sarl
sti
sub
into
sbb
insl
imul
mov
push
test
dec
mov
pop
mov
hlt
adc
rorl
push
mov
jnp
sar
push
xchg
dec
loop
ss
int3
xor
arpl
daa
mov
dec
lds
lods
call
fidivrl
pop
pop
or
in
popf
cmp
movsw
fistl
fs
push
jne
pop
or
inc
mov
mov
xchg
mov
rclb
xchg
cmpsb
leave
stos
or
mov
jbe
sti
jo
data16
arpl
and
dec
fbld
push
loope
cmc
xchg
lahf
int3
and
lret
popa
jmp
cmp
add
rcrl
jle
sbb
aad
sahf
nop
add
shr
les
aad
cld
out
push
or
lret
gs
jno
outsb
cmp
sub
mov
mov
mov
xchg
xor
sub
cmp
js
push
fs
test
sub
sub
stos
fnstenv
es
in
xorl
xchg
push
inc
loope
popf
xlat
ret
fcmovnbe
outsl
push
into
fcmovb
iret
and
add
lds
sub
or
ror
popf
movsl
push
xchg
psrad
inc
add
stos
mul
and
test
pop
hlt
jmp
movsl
lret
cwtl
cmp
or
lds
pop
stc
mov
movsl
mov
jmp
jecxz
jne
stc
out
and
cmp
push
ret
or
nop
out
and
and
cmpsl
and
dec
mov
outsb
mov
ljmp
adc
enter
xor
fstps
enter
sub
sbb
mov
cmpsl
psrlq
cltd
stos
sbbb
sub
adc
cwtl
imul
shrl
mov
push
inc
mov
jae
mov
xor
add
add
mov
in
fldl
rcl
scas
das
or
dec
mov
rcll
inc
sbb
imul
sub
xchg
ja,pt
stc
pop
cmp
int3
repz
mov
and
or
aad
imul
repz
push
mov
pop
adc
and
shll
xchg
jg
lock
push
mov
inc
add
out
adc
or
cmp
mov
out
cmp
movsl
in
pop
jae
mov
xchg
mov
ds
push
faddp
xorb
sub
stc
pop
push
icebp
cmp
pop
ja
arpl
jmp
mov
mov
add
push
popf
pop
ljmp
int
mov
mov
cmp
jg
sbb
push
push
xor
loope
loope
in
lds
out
cld
mov
jo
push
dec
jae
xor
mov
test
pop
imul
pusha
xor
loop
mov
and
or
jle
pusha
aad
and
stos
dec
cmc
or
out
lods
data16
lods
xchg
mov
mov
inc
movsb
fsubrs
push
and
aam
data16
call
xor
gs
and
mov
test
inc
jp
movb
outsl
outsl
out
mov
pop
dec
mov
dec
out
jno
inc
xchg
ret
xchg
mov
cltd
pusha
enter
loop
jo
fcoms
pop
fiadds
das
and
mov
push
or
inc
pop
xchg
lret
ss
nop
in
mov
scas
rorb
test
cmp
push
push
mov
pushl
xor
sub
mov
and
or
add
mov
test
clc
movsb
dec
rcl
mov
cs
and
or
fsts
adc
ljmp
xchg
inc
scas
nop
jb
dec
xor
adc
fdivs
call
adc
sahf
fstps
shll
in
or
mov
aaa
int
inc
out
add
mov
xchg
xlat
jg
jae
imul
jmp
push
push
dec
rclb
lock
push
aam
stos
pushf
sub
and
fwait
insl
or
xor
dec
rorb
or
stos
or
dec
mov
cs
pop
or
adc
mov
cwtl
out
pop
mov
js
rcrl
movsb
iret
lcall
daa
addr16
insl
push
sahf
push
adc
out
cs
sbb
add
xchg
or
loop
aam
arpl
pusha
aad
mov
and
daa
lock
inc
cmpsb
out
add
mov
jg
scas
fs
imul
mov
mov
outsl
pop
cmpsl
push
pop
and
xchg
add
add
scas
addr16
popa
push
adc
adc
pop
movsb
pushf
add
adc
push
push
insb
imul
dec
pop
mov
mov
test
lcall
inc
mov
adc
adc
pop
mov
ljmp
push
mov
jge
loopne
idiv
mov
lahf
adc
int3
add
jp
inc
sar
mov
xor
mov
je
jl
out
push
sbb
mov
lds
insl
leave
jg
setbe
mov
or
xor
xchg
fbld
dec
pop
and
jbe
xor
idivb
mov
jle
dec
and
xchg
aam
testb
push
rcll
les
mov
xor
std
xchg
mov
mov
ss
and
sbb
adcl
xor
add
pop
and
fisttpl
daa
or
lock
dec
int3
dec
mov
flds
inc
cmpsl
icebp
xlat
sarb
pop
das
fs
cmc
mov
jl
std
cmc
cmp
insb
xchg
nop
lods
push
pop
mov
fadd
clc
sbb
jg
stos
mov
ja
rorb
mov
bound
pop
fnsave
inc
or
es
mov
cmpsb
cmp
mov
fdivr
subl
mov
jg
push
jge
pop
add
or
sub
bound
aam
subb
ret
imull
fwait
mov
cmpsb
jae
test
mov
inc
cmpsb
fiaddl
pushf
fcomps
jle
lods
jmp
add
push
pop
pushf
jl
push
jmp
sub
into
mov
sbb
cmp
mov
cli
add
imul
dec
out
jae
sub
loop
xlat
sbbb
shl
and
mov
push
leave
xlat
lock
bound
push
fistl
lahf
adc
ret
inc
out
dec
shrb
mov
sub
cmc
sbb
stos
popa
pop
sarl
sub
or
inc
cmp
in
dec
test
jmp
dec
mov
inc
iret
or
fmuls
cld
cmp
mov
loop
mov
pop
lock
add
xorb
aam
testl
xchg
ficompl
push
jnp
aas
fmull
jnp
sti
xchg
cmpsb
push
mov
out
adc
divb
mov
xchg
cmp
lahf
pop
push
ret
cmp
stos
lret
rcrb
inc
mov
xchg
mov
cmpsl
arpl
mov
es
je
sbbl
arpl
incl
inc
in
adc
imul
outsb
lock
fisttps
push
sub
jbe
jmp
lds
or
testl
int3
cwtl
shrb
mov
pop
xchg
les
gs
pop
loope
cmp
loop
dec
les
pop
pop
add
gs
push
popa
or
pop
jg
inc
or
fst
popf
inc
repnz
fldl
repnz
cli
add
mov
adc
mov
les
insb
xor
xor
ret
iret
outsl
fnsave
mov
push
rcrl
or
mov
in
insb
sub
mov
aad
xor
mov
add
xor
stos
loop
add
rcrl
adc
xchg
sahf
loop
divl
add
test
sub
fsts
add
mov
adc
cmp
push
or
insl
sub
mov
pop
stos
cltd
cmpsb
xchg
test
les
dec
push
repz
test
in
add
lods
xor
ret
inc
gs
clc
pop
out
add
icebp
mov
iret
xchg
addl
or
sub
xor
jnp
mov
mov
loop
outsb
lds
outsl
mov
das
or
cwtl
lret
imul
pusha
nop
dec
out
and
adc
fstpl
pushf
sub
mov
orl
neg
lahf
cmpl
js
xchg
sahf
mov
out
stos
push
push
lea
sub
mov
fsubr
mov
dec
xor
fcoms
pop
add
push
jg
mov
mov
arpl
dec
enter
aad
cmp
sarb
push
pop
leave
notl
jns
pop
sbb
repz
sbb
sub
daa
fldl
jle
scas
dec
js
xchg
push
outsl
xor
aaa
cmc
or
das
push
leave
lahf
adc
cmc
loop
lock
loope
mov
sub
aas
lock
stos
mov
in
inc
xchg
push
jo
jl
pop
add
mov
lods
in
clc
sbb
mov
rorl
xlat
aaa
sub
push
dec
jbe
repnz
push
ret
mov
cmp
adc
stos
xor
push
jae
xchg
andl
mov
sbb
shll
push
cmpsb
mov
jae
push
lods
aad
pushf
add
xor
sub
mov
fcompl
mov
test
pop
xor
lcall
or
cs
xchg
movsb
xor
out
pop
jmp
pop
jne
jg
cmp
jg
inc
mov
and
int3
fsubl
push
or
and
xchg
mov
int3
ljmp
jb
inc
movsl
fldl2e
jmp
mov
adc
pop
mov
push
xchg
shll
test
dec
fstl
int3
hlt
les
mov
mov
inc
push
out
loope
nop
fs
stos
je
jae
stos
jmp
les
dec
adc
repz
stc
and
fdivr
xchg
or
and
popf
mov
jecxz
xorb
inc
mov
mov
mov
inc
out
test
aad
in
pop
jbe
les
ret
nop
cwtl
js
push
xchg
stos
xor
inc
movsb
adc
xlat
sbbl
imul
jb
test
out
fstl
in
sbb
cmp
mov
shll
pop
outsb
orl
push
jmp
adc
scas
cli
aas
je
push
sub
mov
js
push
ljmp
cmovne
stos
stos
int
mov
jae
dec
lret
inc
fwait
and
rcr
mov
imul
push
xlat
stos
andb
aam
stos
or
push
sbb
aad
outsl
mov
cltd
or
jne
test
outsb
outsb
add
adc
pop
push
xchg
cli
std
ret
xor
or
mov
fs
adc
push
shlb
lahf
repz
sbb
jle
stc
fsubrs
jg
aas
icebp
mov
enter
dec
ret
popa
cmp
mov
cmp
addr16
ret
lret
daa
cli
pop
movsl
xorl
jle
and
push
sti
xchg
fbstp
jl
push
xchg
adc
cmp
lret
pop
xor
pop
cmp
jbe
call
sub
inc
outsl
cmp
sarb
leave
icebp
jmp
dec
mov
cld
mov
and
add
repnz
sbb
iret
int3
cmp
cmp
in
add
pusha
call
stc
test
daa
mov
mull
pop
loope
lods
inc
pop
pop
lret
adc
dec
leave
inc
cmp
dec
xchg
pusha
testb
adc
insb
pop
pop
popw
std
push
inc
xchg
ja
fwait
mov
ss
mov
stos
xchg
insb
imul
xor
js
mov
mov
jne,pn
sub
bound
push
push
jo
test
movsb
mov
add
and
icebp
cld
cmp
cmp
and
and
or
stc
loope
jge
add
and
fcmovnu
fs
cmovnp
sub
imul
loope
and
movsb
push
push
ss
mov
mov
cltd
jecxz
mov
xorb
xor
dec
insl
cli
sub
shll
add
insb
je
jbe
addr16
pop
dec
int3
pop
dec
jno
xlat
test
testb
hlt
add
inc
aad
cld
add
test
imul
ja
fcompl
pop
adc
mov
leave
mov
jb
inc
je
movl
lret
subl
aas
and
in
inc
in
sub
fcmovne
xor
add
jge
pushf
and
rcr
push
and
xchg
inc
iret
pop
xchg
gs
push
cmc
pop
jmp
pop
xchg
sbbb
mov
ljmp
push
ss
lods
cmp
out
jle
int3
add
mov
insl
imul
into
pop
pop
int
mov
stos
adc
add
lcall
outsb
inc
add
add
js
jp
ss
sti
test
mov
mov
imul
pusha
inc
push
xchg
adc
int3
and
pusha
mov
add
jp
call
adc
js
addr16
cmp
inc
mov
jbe
jp
adc
mov
xor
loopne
cli
test
aam
xor
in
and
clc
add
inc
pop
pop
jns
arpl
dec
mov
cs
and
lahf
mov
ret
pop
insb
fcompl
or
lcall
or
pushf
fmuls
fnstenv
mov
sbb
push
fmulp
push
shr
push
pushf
mov
mov
adc
cmp
mov
xlat
sub
sub
mov
call
add
push
data16
push
dec
popf
pop
lods
pop
mov
push
jae
add
push
pop
push
jge
inc
push
push
jge
popf
xor
ds
ret
pop
xchg
addr16
jnp
dec
subb
or
dec
cli
aas
mov
jp
lahf
mov
lock
cmp
lcall
adc
dec
rcrb
cmp
jp
xor
jno
xor
xchg
mov
daa
mov
push
bsf
popf
cmpb
mov
inc
in
rcr
or
sbb
xchg
mov
dec
mov
and
xor
mov
xor
mov
jl
pusha
arpl
fmul
xchg
data16
cld
outsl
and
push
sbb
ret
cmp
outsl
stos
cmp
sbb
add
xor
push
mov
ds
pop
int
mov
inc
mov
dec
cmp
xor
push
imul
mov
pop
cmpsl
sub
jbe
mov
push
or
xchg
out
xchg
fs
sbb
push
test
stos
xor
insb
es
lods
mov
in
pop
gs
and
in
sub
add
fwait
ja
jnp
pop
lods
xchg
jmp
dec
or
and
mov
pop
xchg
mov
movsl
nop
pop
or
lret
nop
das
sub
adc
out
insl
add
and
dec
push
adc
cs
scas
pop
sub
cld
scas
stos
xchg
nop
lret
mov
cld
sbb
sub
jne
mov
xor
jbe
sbb
pop
cmp
jb
repz
add
sbb
pusha
out
push
out
es
inc
in
adc
cmp
add
jp
mov
jne
sbb
mov
frstor
xor
jae
mov
cmpsl
aaa
adc
test
cli
fcoms
sti
call
test
fwait
xchg
jnp
data16
mov
mov
pop
adc
pop
mov
in
enter
pushf
push
stc
icebp
scas
push
test
fcoms
bound
push
jno
dec
sbb
in
dec
ss
shrb
dec
nop
inc
aam
add
dec
loopne
das
cmp
push
out
xor
push
pop
cmp
fs
addr16
cld
std
inc
lods
mov
cmp
repnz
aam
sbb
jno
int3
jbe
ret
fnstsw
cmpsb
ss
cwtl
in
sbb
cltd
ljmp
cli
xor
cmc
jmp
in
mov
lock
pushl
mov
pop
imul
outsb
mov
nop
insb
fmuls
mov
dec
jge
into
addb
aad
andb
push
je
push
in
je
aad
inc
ficoms
in
push
jbe
push
enter
call
aaa
or
shrd
sahf
stos
dec
je
out
dec
dec
mov
xlat
mov
popf
cmp
arpl
popf
xor
fldcw
sahf
pop
adc
shr
test
roll
pop
jbe
pop
jg
cld
test
mov
xchg
push
xor
cltd
mov
imulb
aad
xor
pop
push
cmpsl
sub
add
dec
repnz
cwtl
popf
into
repz
test
push
das
pop
cmp
dec
gs
sub
sbb
inc
lret
aaa
cli
push
fldt
out
sbb
inc
jmp
push
jne
adc
cmpsl
sub
adc
xchg
out
lahf
subb
dec
cmpsl
addr16
or
fildl
mov
int
clc
adc
lcall
mov
imul
sbb
jbe
stc
sahf
aaa
fsubrs
dec
in
idiv
mull
mov
pop
dec
mov
sbb
and
lds
inc
sub
inc
popa
cmp
movsl
insb
addl
mov
xchg
shl
pop
inc
xchg
out
and
gs
icebp
ret
shr
movups
cmpsb
adc
pop
fistpl
inc
adc
repz
or
xchg
cmc
fmull
dec
inc
cmpsl
pop
cld
pop
cmp
imul
hlt
lods
jecxz
mov
pop
add
pop
aas
repnz
xor
cli
in
outsl
clc
cmp
and
cmp
jp
xor
cmc
pop
sub
test
and
aam
lret
imul
mov
cmpsb
lcall
sbbb
or
sbb
out
enter
jne
inc
sbb
fdivl
cmpsb
pop
mov
pop
in
pusha
xor
ja
aad
pushf
bound
or
loop
jmp
dec
flds
dec
jmp
stos
fcomip
arpl
push
nop
test
insl
scas
lds
scas
in
inc
popf
jb
test
nop
out
imul
loop
adc
push
das
dec
pop
stos
push
or
xchg
subl
scas
cld
repz
xlat
aad
enter
xchg
inc
mov
and
out
mov
push
inc
fdivrs
sub
pushf
cmp
movsb
fmuls
xchg
test
addr16
jecxz
out
lock
jno
orb
jp
cwtl
call
inc
xchg
into
jno
jge
stos
pop
mov
pop
add
xchg
inc
jg
rolb
pusha
inc
inc
jae
xlat
jbe
into
jbe
mov
out
out
push
cmp
or
out
push
sarb
adc
push
xadd
push
cmp
pop
movsb
mov
cmp
ficompl
xchg
push
jo
mov
lcall
push
push
jbe
jo
sbb
popa
jl
lret
das
sbb
jle
jmp
or
dec
sub
lods
ss
fwait
pop
sti
or
inc
out
jge
pop
add
mov
cwtl
pop
data16
icebp
jmp
push
jbe
xor
imulb
mov
push
cmp
jecxz
push
dec
scas
test
add
outsl
dec
mov
push
push
stos
in
xor
js
xor
clc
and
or
mov
inc
mov
and
out
enter
pop
inc
sub
fs
mov
imul
fwait
repnz
int
test
fcomps
xchg
dec
addr16
inc
adc
test
mull
xor
incl
inc
mov
jl
aad
cmp
sbb
add
cmp
call
movsb
fisttpl
or
mov
stc
hlt
fidivrl
cmpsl
cmp
ret
sahf
ret
outsb
in
add
inc
jno
xor
adc
inc
and
xlat
or
bound
push
cs
jle
xchg
pop
lock
jb
popf
popf
mov
add
cmp
sbb
mov
pushl
cli
out
xchg
rcrl
not
xor
test
ret
out
in
push
ljmp
xchg
bound
or
cmp
dec
ret
xorl
pop
inc
sbb
stos
push
xor
jns
nop
jmp
dec
stc
mov
jbe
add
or
dec
sub
incb
ja
cmp
je
jne
lods
xor
test
dec
aaa
pop
js
fidivrs
xchg
dec
inc
mov
je
pop
jo
pop
clc
pushf
subl
jge
scas
pop
ret
sbb
push
push
mov
dec
in
pop
xor
fsubrl
insl
mov
lret
enter
or
mov
fiaddl
fcoml
and
ljmp
adc
mov
cmp
jbe
or
xlat
xor
int
push
mov
jbe
jg
pop
push
out
les
mov
sbb
ret
xchg
repz
fisubrl
pop
jo
repz
sbb
enter
mov
xor
sarl
jb
jne
and
hlt
movsl
inc
sub
outsb
test
ret
jmp
lret
andl
xchg
cmp
shll
jae
and
in
shr
sub
movsl
cli
gs
rcrb
mov
scas
push
cmp
sbb
jecxz
push
sbb
cmp
or
cmc
gs
push
and
add
imul
mov
pop
cmp
push
pop
mov
pop
mov
jo
loope
adc
inc
push
shll
mov
lods
mov
add
mov
sahf
push
mov
lock
inc
add
mov
mov
lahf
jp
stos
stc
repnz
sub
xchg
mov
adc
xchg
dec
cmpsl
add
lahf
movsb
cwtl
das
xchg
int
sub
xchg
fisubrs
pop
pop
and
jne
jg
sarl
lods
mov
jg
push
xor
je
pop
lret
movsb
jmp
and
popf
lds
and
movsl
sub
pop
pop
shrl
push
lock
or
je
xlat
add
stc
js
out
or
push
outsl
fldenv
aaa
adc
jne
xchg
xchg
scas
lods
and
addr16
inc
dec
fnstenv
lds
pop
jbe
push
mov
xchg
mov
sub
mov
mov
mov
push
mulb
vcvtpd2dqy
popa
lods
dec
jmp
and
inc
and
sub
cwtl
xor
sub
js
outsb
mov
mov
ja
rcrb
fldl
push
sti
cwtl
subb
jle
jecxz
sarl
sub
pop
inc
lret
pop
test
cmp
mov
sub
je
and
and
arpl
jmp
pop
or
add
inc
outsl
dec
cmp
bound
loopne
xor
iret
and
shl
ret
testl
xor
mov
stc
push
aam
hlt
xchg
cmp
mov
ficompl
leave
lret
mov
fsin
scas
push
adc
clc
push
cmp
sub
mov
arpl
fmul
mov
mov
idivb
cwtl
xor
stos
add
dec
lahf
dec
js
cltd
mov
hlt
and
cmp
pushf
add
xchg
jb
push
outsb
mov
fidivs
add
xor
dec
imul
loopne
aaa
sbbl
push
outsl
adc
cmp
das
aad
mov
pop
xchg
outsl
shll
pop
dec
movsb
sub
mov
stos
jl
iret
sub
pop
cmp
pop
loop
pop
mov
nop
push
inc
scas
mov
mov
mov
movsb
stc
xchg
aam
sub
js
loope
lahf
fdivl
das
imul
xchg
fistpl
leave
pop
iret
out
mov
in
sub
imul
fcomi
std
aas
jns
inc
rcll
je
adc
lock
daa
lock
rcr
mov
idivl
inc
sub
repz
lock
lcall
xchg
mov
xlat
push
inc
sbb
push
xor
mov
or
xor
or
xor
and
mov
xor
inc
cmp
pop
lahf
add
js
pop
sahf
or
adc
cli
adc
ljmp
add
or
ja
adc
dec
mov
cmp
xor
fsubs
push
test
cld
dec
mov
stc
out
push
stos
daa
and
fwait
js
stc
sub
data16
scas
dec
jb
loope
adc
hlt
dec
es
lcall
lea
jmp
sbb
aad
xchg
adc
jg
dec
mov
inc
enter
cmp
adc
data16
xchg
mov
pop
xchg
cmp
repz
mov
in
xchg
pop
dec
jl
push
or
pop
test
mov
test
jp
in
movsl
sub
fisttpll
xor
mov
dec
xchg
pop
push
icebp
xor
call
adc
cmpsl
inc
xorb
and
ss
mov
dec
sbb
shll
fcomip
mov
mov
addr16
sub
push
dec
rol
repnz
adc
jnp
outsb
cmp
scas
jbe
or
xor
insl
and
icebp
adc
outsl
mov
add
cmpsl
out
lds
ret
hlt
add
int
outsl
cmpsl
add
mov
fldln2
je
jmp
lcall
sbb
xchg
je
lds
lea
cltd
mov
sarb
cmp
sahf
jecxz
mov
push
adc
fwait
notb
loop
inc
sarb
adc
pop
xchg
jecxz
pop
jl
aam
leave
sbb
push
outsb
push
aas
xor
bound
jns
je
repnz
ljmp
push
mov
sbb
mov
mov
jne
cmp
call
lock
ret
ret
lahf
push
jge
cmpsb
push
push
jg
shl
sbbl
loopne
lods
enter
mov
pop
mov
sbb
lahf
sbb
mov
sub
gs
sub
in
je
jno
faddl
cld
adc
loope
fidivl
ja
xor
shrb
cs
mov
negl
adc
lret
rcr
test
inc
cmp
cltd
ret
mov
mov
jecxz
jp
add
or
or
mov
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
call
pop
jl
js
sbb
insb
xchg
in
stc
xchg
push
shl
pushf
mov
adc
jecxz
cmpl
ror
cwtl
cmp
xchg
in
dec
mov
and
shlb
sbb
pop
out
arpl
popa
or
out
sahf
bound
or
mov
adc
pop
push
add
inc
movl
xchg
and
outsb
cwtl
and
jp
sbb
test
cmp
cmp
in
nop
mov
insb
add
inc
dec
jge
cs
xor
lahf
push
andl
sbb
imul
mov
push
mov
ljmp
adc
ja
rcl
cld
scas
jnp
repz
dec
xchg
das
mov
jae
fsubs
mov
iret
testl
jnp
mulb
imul
sub
inc
sbb
jae
pop
cmp
add
movsb
pop
loope
jnp
push
imull
xchg
in
out
outsl
xchg
push
lahf
mov
pop
sbb
add
jmp
jno
sbb
adc
pop
iret
out
inc
xor
push
fnsave
lahf
jae
xor
or
lret
sub
add
mov
jmp
xor
clc
ficoms
and
push
mov
inc
xchg
lea
clc
push
pop
inc
mov
out
mov
ret
jecxz
pop
mov
or
mov
push
out
lcall
ret
mov
dec
pop
push
inc
xor
ret
jg
cs
cmpb
inc
jge
loop
mov
fs
pop
hlt
iret
out
cld
xor
push
pop
out
ds
hlt
pop
push
push
imul
insb
cli
mov
dec
sbb
push
fsubs
mov
jo
jo
or
out
notl
in
outsl
jb
sub
ja
cmp
enter
adc
repnz
loope
rcl
and
fwait
jg
nop
jg
push
sbb
les
and
add
dec
push
xchg
push
call
jg
shll
adc
mov
jns
fdivrl
jg
inc
xlat
jns
inc
and
push
and
jmp
jb
fwait
jle
dec
repz
clc
push
loop
sub
adc
cmp
inc
dec
push
lret
push
ds
aaa
ds
and
mov
stos
js
data16
popf
jne
jp
leave
cmp
dec
inc
add
jno
sbb
fs
push
loopew
outsl
cwtl
or
jb
mov
sbb
jb
xchg
insl
mov
icebp
insb
js
fidivrl
test
mov
push
scas
int3
sub
push
xlat
xor
dec
jmp
add
jle
mov
shrd
adc
mov
jb
scas
aaa
mov
mov
cltd
mov
xor
fstps
fstp
in
pop
loop
push
adc
rep
inc
aad
add
aas
cmp
mov
push
or
jmp
shlb
test
cmp
into
push
out
adc
and
jecxz
insl
lock
test
and
enter
mov
xor
sub
shrb
dec
or
lcall
jae
out
stc
test
xchg
push
xchg
repnz
in
dec
in
xorl
iret
jg
inc
mov
xchg
pushf
push
or
cltd
std
xlat
pop
adc
repnz
sub
negb
sti
loope
jge
sub
data16
adc
daa
sbb
out
out
je,pt
stos
stos
leave
repz
pop
sub
fwait
popf
out
test
and
adc
and
lods
fnstenv
jg
xor
dec
cwtl
sub
jae
es
xor
sub
fadds
jge
pop
xchg
ja
dec
outsl
int
pop
adc
es
and
sbb
mov
cld
popf
jl
mov
inc
xchg
mov
jg
out
push
xchg
in
fwait
popa
addr16
cltd
add
push
scas
jecxz
mov
sub
clc
test
xchg
sbb
mov
aad
outsl
inc
shlb
nop
adc
push
jle
daa
jle
add
lahf
inc
pop
idivb
dec
fistpll
add
push
sbb
mull
jnp
daa
push
leave
jmp
out
ljmp
test
call
jp
push
sbb
or
mov
mul
jbe
shrl
es
addr16
dec
notl
pushf
cmpsl
or
outsb
mull
xchg
mov
xchg
ja
stc
mov
cmpsl
mov
jle
sub
mov
cmpsl
sbb
rcrb
stos
cld
or
or
push
cmp
cmc
jge
ja
jmp
xchg
xor
push
mov
dec
push
lods
push
icebp
dec
and
jns
rorb
add
mov
sub
jne
jae
in
jno
dec
cwtl
inc
fistpl
test
jg
dec
sti
push
out
and
mov
es
rorl
hlt
into
push
mov
sbb
fildll
les
cmp
lods
push
sbb
daa
mov
jnp
inc
jecxz
push
pop
stc
pusha
mov
xchg
fdivrl
pop
cwtl
sub
es
push
xchg
xchg
add
mov
push
dec
mov
or
or
jns
adc
je
call
pop
push
xlat
leave
jo
jge
push
or
test
cmp
out
pop
out
cltd
das
loopne
data16
mov
or
cli
int3
pop
push
out
adc
and
mov
hlt
mov
dec
jns
mov
fwait
mov
xchg
cli
mov
scas
sub
and
inc
cmp
ret
aam
dec
cmpsb
aas
aaa
je
inc
xchg
and
sub
out
test
scas
inc
jb
stos
pop
enter
stos
sbb
je
mov
arpl
aad
xor
or
inc
adcb
xchg
mov
xor
pop
and
jp
pop
test
ljmp
lret
cmpsl
and
jp
nop
das
in
mov
xchg
sbb
dec
pop
adc
pop
mov
inc
fmull
shlb
test
cmpsb
lods
xchg
lcall
imul
pop
lret
inc
jecxz
jmp
ficompl
push
add
sahf
and
or
pusha
iret
pop
or
mov
fs
ljmp
push
xor
pop
shlb
aam
inc
xchg
ljmp
ss
mov
cmp
fadds
popa
mov
and
stc
push
jbe
push
dec
add
test
adc
cmp
xor
aaa
fs
popa
aam
or
mov
inc
insb
dec
in
lret
mov
pusha
mov
or
clc
sbb
sub
inc
pop
jne
aad
in
jp
dec
sahf
into
imul
add
nopl
loop
pop
xchg
xchg
bound
pop
je
repnz
loopne
mov
in
loop
or
xor
xchg
nop
push
mov
das
js
cld
test
sbb
inc
push
out
lods
loope
popa
push
stos
movl
jg
fwait
std
loop
sbb
insl
push
sbb
lods
jne
jg
mov
mov
sbb
xor
test
xchg
push
xor
inc
xor
mov
andw
loop
inc
sub
xchg
gs
pop
sahf
dec
fadds
fs
test
xor
pop
push
push
mov
dec
jp
ljmp
fcmovb
nop
shrl
cmp
out
adc
aad
push
add
cmpsl
pop
aas
cmp
out
xchg
enter
push
test
mov
add
cmp
mov
fs
push
popl
ret
test
mov
sar
rorb
inc
xchg
scas
stos
loopne
dec
in
stc
mov
rclb
sub
in
in
mov
xor
cmp
fisubrs
scas
movsl
mov
es
pop
lds
push
sub
in
in
inc
inc
ja
out
inc
fmuls
dec
fdivr
dec
into
jmp
lea
xchg
test
pop
ret
fdivrl
sub
mov
mov
sbb
pop
roll
adc
mov
test
leave
sub
aas
jge
test
das
movsl
mov
imul
mov
fidivrs
xchg
push
hlt
adc
sub
movsl
clc
mov
cmp
scas
inc
cltd
sub
push
jnp
es
xorb
loopne
cld
jmp
sub
loop
mov
fiadds
mov
insl
pop
sbb
sbb
call
sub
jg
mov
push
mov
std
dec
pop
inc
dec
xor
push
clc
push
into
rcr
inc
jns
add
push
int
jnp
or
inc
add
and
jb
call
xor
mov
xor
jae
stc
lods
jle
in
cmc
mov
mov
xor
mov
sbb
cmpsb
cli
movsb
insl
outsl
lock
dec
inc
sarb
aas
in
xchg
loop
iret
lock
xor
shlb
cmp
sahf
push
out
inc
pop
popa
mov
add
movsb
mov
movsb
pop
pop
lahf
inc
add
xchg
and
inc
insb
cmpsb
mov
scas
shl
push
outsb
push
stc
popa
fdivl
aas
sbb
sub
loope
add
imul
mov
mov
in
or
test
shrl
xor
cmc
in
fmull
xchg
cmp
mov
jae
jns
xchg
fsubrl
movsl
sub
jno
mov
lods
in
inc
in
add
les
dec
imul
aam
das
pop
add
adc
rcr
pop
jmp
xchg
and
jge
cwtl
mov
mov
fwait
inc
pop
xor
jmp
sub
lret
scas
out
xor
loopne
pushf
or
mov
sbb
cmp
pop
sbb
sub
and
add
pop
lcall
push
scas
xor
test
jge
iret
inc
add
inc
mov
cltd
push
sub
movsl
add
ffree
push
sbb
xor
cmp
jl
cmp
and
jecxz
push
mov
cmp
cmp
test
ja
inc
add
cwtl
cmpsl
sbb
and
cmpsb
adc
imul
jne
inc
jecxz
dec
dec
or
push
rorb
enter
lret
int
sbb
enter
push
add
or
mov
scas
inc
mov
push
xchg
jne
mov
mov
push
fs
jl
repnz
xor
arpl
or
mov
aaa
mov
and
pop
iret
lods
or
in
enter
sbb
loopne
sub
xchg
lahf
jb
or
int
and
dec
xor
mov
mov
fs
push
push
out
push
pop
mov
lds
dec
jp
dec
outsb
insb
dec
out
rorl
aad
sar
sbb
xchg
ds
mov
mov
sbb
mov
fidivrl
jns
add
insb
orl
jecxz
mov
popa
and
fcoml
jecxz
outsb
add
addr16
cs
or
adcl
sar
jg
mov
cmpsb
rcl
jge
imul
cmc
jmp
or
scas
pusha
xchg
push
add
fsubl
pop
mov
test
fld
aam
sbb
fdivrs
lods
rclb
aaa
add
popf
out
movsl
outsl
out
popf
pop
cmp
fmuls
mov
gs
mov
sbb
cmpsb
mov
out
mov
mov
cwtl
les
loop
std
mov
scas
and
daa
inc
test
jecxz
xor
mov
ficoms
fcompl
pop
mov
adc
inc
movb
xor
lcall
dec
xchg
inc
jecxz
popa
sub
out
icebp
ljmp
xchg
lods
push
sub
inc
les
in
scas
stc
outsl
mov
pop
filds
pusha
xor
lahf
lahf
add
cmp
in
cmp
aas
sbb
jge
dec
shrb
adc
gs
pop
aad
cmp
inc
pop
pusha
cmp
xchg
divb
jb
movsb
pushf
shr
pop
fsts
aam
push
dec
inc
fcomi
hlt
sar
incb
testb
push
test
cld
loop
ret
inc
xchg
lahf
and
fmuls
mov
fcompl
lret
inc
mov
and
adc
nop
lahf
fsubrs
jae
jmp
loopne
test
push
mov
push
dec
adc
fidivl
inc
clc
bound
out
and
cmp
testl
push
add
jnp
mov
jbe
out
and
jge
sbb
sahf
mov
pop
arpl
pushf
and
stos
sbb
nop
imul
imulb
loopne
ret
pop
outsb
les
xlat
push
xabort
push
mov
fisttps
and
push
pop
add
sub
rolb
mov
inc
lcall
lea
cwtl
loop
fadd
mov
test
aad
das
jmp
jecxz
flds
sub
mov
add
scas
dec
pop
xchg
inc
mov
or
xchg
insl
test
lods
push
and
clc
jl
cmpsl
ret
movsb
jns
shrb
shl
js
inc
lret
mov
mull
adc
adc
mov
ljmp
outsl
or
sbb
sti
test
lcall
sahf
je
ljmp
test
rcrb
imul
cli
pop
jbe
xchg
cmp
push
adcl
arpl
nop
push
lahf
xchg
or
mov
lods
adc
pusha
mov
mov
xchg
testl
sub
imul
outsl
or
pop
cmp
fstps
jo
mov
loope
adc
or
pop
popf
mov
js
jno
pop
jl
xor
adc
xor
sar
inc
jno
cld
mov
inc
aad
mov
mov
in
mov
sub
sub
cli
sub
sub
xchg
push
fbld
push
in
add
ret
adc
hlt
adc
add
mov
push
test
dec
inc
aad
jb
xor
shrb
adc
push
inc
arpl
xchg
jae
rclb
xor
xchg
dec
sub
fidivl
jmp
shrl
push
lea
push
sarb
jle
jecxz
mov
imul
push
orb
test
jbe
or
lret
mov
outsl
adc
repnz
cmp
add
lahf
loopne
xchg
outsb
inc
mov
ret
fcompl
mov
out
push
movsl
les
adc
cmpsl
das
scas
sti
in
data16
add
sti
mov
insl
mov
ljmp
ret
pop
mov
ljmp
lds
fistps
mov
lods
fsubs
ret
mov
pop
pop
lret
sub
mov
xlat
pop
das
daa
mov
rorb
fpatan
xchg
stos
jo
adc
push
ret
sub
imul
cmc
mov
jg
pop
or
or
cwtl
sbb
xchg
sbb
adc
nop
dec
pop
fnstenv
in
adc
push
dec
inc
mov
dec
or
push
test
xor
cwtl
mov
je
mov
movsb
mov
outsl
fsubrs
xchg
repz
inc
scas
fisubrl
lods
clc
and
sub
lods
test
mov
or
sub
xor
and
sbb
cld
adc
imul
addr16
xor
aas
mov
fdivrs
xor
popa
cmp
dec
push
addl
add
fisttps
movsb
scas
mov
jecxz
gs
lret
out
hlt
push
cmpsb
add
pop
and
inc
imul
and
cmp
pop
aas
pop
ds
jno
push
push
mov
inc
cli
jg
lcall
xchg
lcall
sbb
xchg
popf
push
dec
call
pop
dec
sbb
push
cltd
aaa
cmp
xor
out
movsb
mov
adc
jne
loope
fsubr
sub
push
mov
sahf
xchg
iret
loopne
out
pop
xchg
dec
jge
mov
test
sar
xor
jge
push
and
jl
adc
or
cmp
push
fimull
cmp
daa
enter
jg
jg
jo
cmp
repz
cmp
roll
je
mov
adc
xchg
aaa
lods
cmpl
xchg
lcall
les
push
mov
jg
test
shr
cmp
gs
sub
push
fidivrs
fsubl
movsb
mov
xchg
scas
and
mov
inc
dec
cmp
pushl
push
jne
push
test
dec
lea
lret
jg
xchg
rcrl
out
jp
or
testb
dec
jmp
jp
or
xchg
xlat
dec
inc
mov
push
pop
mov
mov
mov
xor
in
or
fs
dec
push
scas
cmc
fwait
cmpsb
aad
in
les
into
xchg
mov
add
mov
rcrb
xchg
push
adc
push
loop
inc
add
sahf
in
xchg
dec
ret
imul
sbbl
outsl
sub
jg
mov
adc
and
scas
popf
cmp
invd
fidivrs
into
cmpsb
push
pop
add
pop
xchg
aas
sub
push
test
cmpsb
inc
jns
xor
cwtl
sbb
pop
mov
ds
lds
inc
sti
xchg
lahf
push
pop
or
mov
outsb
pop
push
ljmp
test
rorb
inc
xor
jno
cmp
xor
pop
repz
icebp
aad
push
popf
test
add
inc
mov
mov
popa
jae
cmpsl
movsl
insb
insl
or
mov
cmpps
ljmp
pop
fiaddl
cli
hlt
nop
inc
iret
sbb
mov
dec
xchg
push
jno
sub
imul
lds
push
add
std
and
xchg
ror
call
aam
inc
fimuls
js,pn
mov
nop
in
ljmp
lret
inc
and
fdivr
adc
stos
sahf
je
testl
fldz
ss
shlb
sbb
lock
cmc
hlt
adc
sub
mov
xchg
and
mul
hlt
mov
or
or
int
lock
mov
pop
mov
aaa
cmp
aas
adc
xchg
fisubl
in
cmp
adc
lret
dec
js
lods
jnp
cmp
fcoml
aad
sahf
out
dec
test
mov
sub
dec
rclb
mov
subb
repnz
jns
ret
inc
sbb
daa
arpl
and
ja
rcl
mov
mov
out
fidivrl
pop
daa
adc
popf
pop
jge
push
lock
aad
dec
add
and
mov
push
inc
add
push
in
out
jecxz
push
fwait
movsb
mov
mov
je
shlb
test
nop
lods
push
xchg
jae
mov
adc
in
call
push
neg
cwtl
daa
or
inc
pop
xchg
test
cmp
jbe
push
inc
add
xchg
mov
sbb
mov
add
movsl
aad
mov
cmpsw
gs
fs
jb
fs
popa
stos
stos
pop
and
xor
test
loope
loope
pop
dec
lds
mull
outsl
imul
mov
imul
cmp
outsl
mov
mov
lods
jmp
fidivl
ja
lods
dec
jno
xor
out
loope
push
cli
sbb
jl
inc
cs
adc
cmp
test
adc
xchg
dec
aad
das
inc
aam
mov
push
lea
fildll
xchg
in
cmp
repnz
xchg
push
or
jae
xchg
icebp
push
lret
push
aaa
jns
jge
insl
or
movsb
add
and
dec
fidivrl
ret
xor
xchg
adc
mov
inc
mov
sbb
dec
xchg
insl
in
lds
mov
push
xor
aad
pop
es
xchg
fstpt
and
cld
out
adc
sub
dec
jecxz
fbld
in
dec
xchg
ljmp
jns
scas
xchg
pop
pushl
xchg
lret
adc
xchg
adc
xchg
xor
xor
pop
push
fists
mov
insb
push
in
in
push
imul
imul
mov
fnsave
push
cmp
cmc
mov
popf
mov
in
sbb
xlat
cmpsb
in
pop
sbb
push
sbb
xor
jmp
movsb
pop
sbbb
jo
in
cmp
inc
push
mov
sub
cs
lea
jbe
or
es
js
icebp
pop
or
std
sub
adc
outsb
xchg
mov
sti
or
out
jle
aas
leave
mov
aaa
loop
mov
es
out
in
add
mov
gs
push
sahf
andb
into
shrb
add
mov
cmc
fwait
std
xor
in
xchg
or
mov
cmp
mov
mov
mov
inc
push
fwait
lods
into
sbb
pop
add
pop
sbb
or
lds
leave
repnz
mov
mov
inc
mov
cli
cmc
stos
pushf
jg
jo
lcall
jp
frstpm(287
adc
push
test
pop
mov
imul
imul
pushf
out
mov
xchg
push
jns
popf
jmp
out
cmp
scas
mov
and
jbe
clc
icebp
lock
je
add
mov
jg
jle
movsb
cmp
sub
sbb
dec
pop
mov
inc
pop
data16
dec
inc
fcompl
xlat
insb
scas
adc
jns
lahf
jmp
push
jne
fimull
sahf
jae
insl
and
jmp
jns
aam
movsb
cmp
into
addr16
stc
ret
stos
or
lock
xchg
inc
repnz
loope
popf
cltd
jae
shll
lcall
flds
xchg
mov
inc
mov
pop
pop
repz
pop
fs
leave
xorl
lock
push
add
cs
push
cmp
push
or
aas
mov
testl
fmuls
inc
cmpsb
popf
mov
sbb
sbb
andb
data16
adc
push
loope
cmpsb
in
sub
mov
pop
in
xlat
es
pop
jbe
xchg
push
mov
inc
popf
outsl
pushf
cmp
lcall
jb
bound
lods
mov
aam
mov
push
addl
test
mov
fwait
jmp
adc
xor
loop
or
cli
pop
sbb
arpl
inc
shll
out
dec
mov
sub
in
pop
sub
lods
imul
and
cmp
cmpsb
cmpsl
jo
addr16
out
jmp
loopne
push
dec
int
out
cs
lods
adc
lea
jl
jle
mov
outsl
sbb
xchg
ret
jecxz
cmp
cmp
movb
out
sub
sbb
xchg
movsb
cwtl
test
out
xor
mov
add
imul
pop
fwait
push
cld
pop
addr16
mov
add
xlat
in
adc
xchg
inc
roll
pop
insb
jecxz
ja
push
fidivl
pop
es
add
mov
adc
sub
leave
ret
cld
add
inc
xchg
mov
push
ret
or
sub
pop
cmp
mov
mov
pop
test
mov
adc
jb
adc
jno
sub
and
dec
lret
mov
out
out
mov
pop
cs
ja
ss
frstor
push
or
dec
out
pop
ret
xorb
daa
mov
jno
adc
adc
rcrb
jae
pop
or
movsb
incb
mov
fistl
adc
adc
outsb
push
lods
sub
aad
sub
imul
sub
testb
popf
loope
or
xlat
mov
pop
xchg
and
loop
bswap
mov
sub
and
popa
pop
mov
sbb
sahf
pop
dec
cltd
cmp
icebp
in
js
xchg
jmp
cmp
icebp
push
sbb
xchg
fimuls
lds
stos
pusha
stos
inc
out
negb
jns
pop
fdivrs
test
pop
adc
xchg
cmp
xchg
filds
dec
mov
fimull
in
bound
out
test
repnz
outsb
jmp
test
xchg
mov
xchg
cmp
pop
mov
inc
pushf
lret
adc
into
add
call
jnp
mov
adc
inc
mov
add
scas
jo
dec
pushf
and
sbb
out
mov
lock
xlat
cmp
adc
into
pusha
sbb
cwtl
popf
ljmp
jns
dec
lret
push
xor
stos
mov
dec
mov
or
pop
or
filds
mov
mov
dec
cmp
xor
lods
icebp
xor
add
fimull
sub
ja
ja
aas
aam
pusha
stos
test
movsb
adc
add
cmp
cmp
push
jne
dec
cmpsb
popf
pop
add
jb
loop
or
leave
je
mov
adc
or
lcall
mov
lock
mov
arpl
jg
jbe
mov
in
pop
lds
sbb
or
pop
out
cmp
add
rolb
mov
mov
leave
mov
sti
sahf
pop
mov
call
out
add
push
test
ja
scas
jecxz
mov
adc
test
cmp
or
outsb
xchg
cmp
cltd
sub
mov
pop
push
push
sti
inc
arpl
ret
iret
stos
call
scas
std
outsl
adc
cmp
push
sbb
loope
into
and
test
jmp
push
xchg
mov
adc
shl
add
mov
mov
dec
popa
mov
dec
and
mov
aam
movsb
add
xchg
pusha
cmc
subb
jl
shrl
xchg
sbb
jne
js
rcl
das
sub
cli
adc
cmpsb
push
clc
add
push
xchg
mov
sbb
and
ljmp
stc
dec
out
push
in
loope
mov
notb
pop
push
bnd
insl
mov
cmpsl
andb
mov
cwtl
stos
jno
mov
aas
dec
test
aas
and
mov
inc
sub
jle
data16
repnz
xorb
dec
fs
or
pop
psrld
or
popa
stos
and
add
dec
jae
mov
cs
adc
add
inc
push
and
inc
mov
imul
lds
js
mov
cmpl
push
mov
inc
inc
in
add
dec
sbb
mov
or
ljmp
daa
add
push
gs
jmp
mov
push
mov
loope
or
jge
jg
aad
sub
fldenv
push
decb
js
and
test
cmp
fcmovnb
mov
aas
cmpsl
sbb
enter
cmp
test
testb
or
adc
mov
sub
mov
sub
mov
fdivp
mov
mov
test
hlt
and
gs
test
out
jns
jns,pn
pop
imul
mov
push
or
mov
or
and
pusha
fnstsw
add
adc
xor
leave
or
das
dec
adc
test
sub
scas
test
cs
mov
test
mov
mov
pop
mov
movsb
pop
hlt
or
enter
push
frstor
pushf
add
enter
add
lods
outsl
or
pop
mov
fmuls
std
adc
test
adc
and
sub
clc
xor
aam
push
cwtl
mov
push
stos
pushl
xlat
jne
cwtl
push
lods
mov
test
sbb
sub
cld
popf
dec
pushf
fwait
inc
js
out
stos
cli
sbb
pop
jp
inc
cmp
movsl
iret
in
dec
and
and
jbe
mov
das
lds
pop
xchg
push
pop
or
pop
js
in
arpl
xor
push
sub
imul
ret
jns
xchg
mov
cmpsl
cmc
adc
mov
xchg
cwtl
fwait
xchg
mov
xchg
add
int
ss
icebp
and
inc
enter
dec
cltd
int3
out
shll
mov
sub
push
stos
xchg
inc
add
pop
cld
dec
jbe
outsb
cld
xchg
push
xchg
shlb
pop
dec
xor
and
fmuls
fistpl
inc
pusha
fists
lret
gs
xor
inc
jge
jns
xor
adc
lods
xlat
mov
int3
or
daa
scas
dec
mov
fbld
add
sbb
mov
dec
pop
nop
sub
in
mov
jmp
out
pop
cmc
rolb
jmp
push
outsl
test
mov
inc
xchg
mov
out
lds
adc
push
and
dec
push
dec
test
cwtl
mov
out
mov
xchg
inc
negl
mov
repnz
mov
xchg
xlat
insb
aaa
lea
mov
movsb
jge
hlt
jnp
sub
cmp
mov
xor
xor
test
dec
pop
stos
xchg
or
sarl
push
in
pushf
aad
lods
xchg
sbb
loope
notl
xchg
ljmp
out
scas
push
cmpsl
mov
mov
and
addr16
push
push
add
xor
in
dec
out
xor
mov
jp
das
outsb
push
jg
jnp
xchg
aas
xchg
into
inc
mov
jne
cld
out
outsl
gs
inc
add
loopne
insb
fimull
sbb
add
loope
sub
nop
nop
rclb
lea
dec
mov
add
mov
ljmp
sub
out
in
dec
mov
push
sbb
mov
scas
sub
imul
sbb
or
out
adc
pop
in
add
dec
xor
mov
fdivrp
fdivrl
lock
insb
sbb
jnp
mov
xor
push
jo
out
adc
test
pop
or
test
aas
pop
mov
xchg
dec
loop
fld
popa
aaa
lea
clc
fs
lods
xchg
shrb
mov
aaa
xchg
popf
orb
inc
fsubrl
fistl
sbbl
mov
out
and
add
mov
mov
rcr
pop
jae
push
test
loopne
xchg
test
ss
mov
in
jo
addr16
sti
jb
push
les
jo
cmp
inc
pop
xchg
cmpsl
push
cli
in
xchg
xchg
and
fisubl
cmp
clc
and
loope
dec
les
xchg
xor
jne
dec
shlb
movsb
bound
das
aaa
pop
sbb
loop
inc
stc
mov
cld
fimuls
jne
fwait
sbb
bound
sbb
xlat
cmp
and
cli
pushf
mov
movsb
aas
repz
imul
inc
xor
lods
jl
xchg
push
aam
lret
stos
xchg
push
xchg
add
mov
movsb
sub
inc
push
lcall
sub
cmp
in
mov
mov
rorb
mov
cmp
push
mov
adc
pop
inc
loop
cmp
ss
dec
jns
pop
jbe
lods
not
jnp
jnp
pop
sub
fcomps
inc
push
not
add
mov
push
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
xchg
aaa
adc
mov
popf
movsl
mov
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
adc
sbb
or
add
les
mov
pop
pop
mov
push
stos
jg
in
xor
sbb
jle
pop
or
jo
push
mov
jbe
jnp
in
xlat
aam
push
test
inc
ret
daa
js
dec
xor
dec
jo
mov
mov
push
mov
push
out
in
imul
push
inc
cmp
dec
jp
mov
dec
aaa
aam
mov
adc
xchg
push
dec
roll
jae
pop
xor
adc
pop
in
mov
sarb
insl
mov
xchg
arpl
xchg
mov
call
xchg
inc
test
imul
cmp
nop
in
mov
outsb
aaa
in
push
out
mov
leavew
cmp
fiadds
fcoms
mov
mov
mov
pushf
insb
pushf
outsl
xchg
mov
mov
int
push
mov
fimull
add
or
sbb
movsb
lahf
or
mov
ljmp
xor
outsl
inc
imul
mov
out
push
scas
sbb
nop
dec
popf
leave
scas
adc
adcb
xor
or
sub
inc
xrelease
inc
sub
sbb
mov
std
addr16
jl
enter
push
cmp
sub
out
sub
push
jecxz
mov
dec
jns
cs
jno
jbe
pop
sbb
repnz
adc
xlat
ljmp
sub
or
test
lods
imul
mov
inc
mov
add
ljmp
pop
hlt
xchg
loop
jb
ret
out
movsl
jo
or
sahf
mov
shr
push
xchg
push
or
xchg
sub
push
shrb
lret
pop
xchg
scas
mov
push
and
ret
mov
xchg
mov
jle
aaa
pop
std
aam
pop
insb
in
fidivrl
add
ja
idiv
jg
mulb
cmp
add
add
scas
push
das
push
test
mov
jae
mov
xchg
fimuls
addl
mov
mov
xchg
pop
es
jmp
flds
out
aad
loope
dec
mov
loop
fcompl
jns
gs
cmp
mov
adc
mov
popf
cmpsl
clc
cmp
out
sahf
inc
sub
adc
mov
push
jae
sub
cmp
sub
mov
mov
pop
testl
or
scas
mov
add
lds
sbb
xor
div
repnz
imul
stos
cmp
lret
scas
int
sarl
adc
stos
loopne
mov
ja
push
sub
and
pop
cltd
xchg
and
mov
mov
cmpsl
lret
jl
out
jle
mov
sbb
mov
pop
sub
jg
mov
ss
aaa
lock
push
scas
and
rorb
jecxz
int
push
dec
xchg
gs
xor
fildl
and
adc
inc
xchg
pusha
jg
aam
lods
into
adc
xor
and
adc
insl
and
fildl
inc
mov
pop
scas
lock
test
mov
aad
mov
push
jns
jne
sahf
jnp
jns
xchg
clc
push
mov
scas
loopne
sbb
popf
and
xchg
inc
mov
pusha
test
jg
mov
sub
lock
and
jecxz
jne
pop
aaa
rorl
add
jno
aad
rclb
xor
out
ljmp
cld
scas
iret
mov
jle
jo
sbb
adc
daa
adc
ja
js
or
push
popa
fnsave
xchg
pop
sbb
pop
std
jg
inc
das
incb
add
lods
push
cmpsl
insl
push
aad
icebp
and
add
xchg
cwtl
sbb
pop
push
cltd
mov
and
shlb
adc
fs
outsb
scas
movsl
pop
push
orl
mov
lret
nop
movsb
mov
aad
shll
pop
and
mov
adc
mov
dec
push
xchg
in
notb
scas
inc
push
sub
popa
into
iret
or
lcall
mov
insl
mov
adc
mov
insb
outsl
js
xor
mov
dec
rorl
lcall
cmpsl
rclb
xchg
scas
xchg
push
test
daa
add
jp
xchg
arpl
xor
stos
lods
in
jb
gs
mov
inc
adc
add
push
in
cmp
in
sbb
shlb
lahf
pusha
sarl
push
jb
fs
dec
arpl
lahf
aam
or
test
imul
stc
fnstcw
xchg
xchg
push
scas
data16
cmp
jecxz
dec
cmpsl
out
fwait
xor
sbb
push
push
lea
xchg
xlat
xchg
push
je
inc
inc
jns
adc
shl
es
pop
imull
xor
imul
and
xor
int3
scas
mov
fwait
cmpsl
xchg
cmp
cmp
ds
movsl
loop
out
je
aaa
arpl
testl
push
jg
jg
jg
lea
xchg
cmp
adc
push
rorl
push
cltd
cld
roll
and
adc
inc
push
mov
dec
dec
push
push
sub
cs
inc
leave
mov
cmp
xor
std
add
xchg
xchg
loopne
pushf
or
adc
dec
push
adc
imul
xchg
mov
lock
xor
outsb
xchg
add
inc
aad
stc
adc
int3
pop
jbe
jmp
add
push
add
mov
int
mov
lock
stc
mov
add
add
add
stc
lcall
dec
in
jno
jbe
push
ret
jg
push
pop
push
sbb
lret
xor
dec
stos
mov
notl
xor
test
push
xlat
es
dec
jne
push
andl
sbb
sub
out
lahf
dec
inc
jp
ds
inc
push
fmuls
cmp
mov
int3
cmp
sarb
lcall
pop
add
dec
and
and
xchg
sub
lahf
sub
leave
out
out
xor
pop
arpl
test
std
sbb
or
sub
mov
lock
cmpsb
mov
aad
cld
popf
popf
or
out
mov
push
fsubr
mov
pop
loope
or
xchg
insl
ret
push
test
jge
cmp
fiadds
lock
jno
filds
or
cmc
push
scas
cmp
imul
clc
add
and
sbb
ss
cmp
cs
sub
lods
and
test
and
insb
testl
into
iret
ret
sub
lock
das
nop
jl
add
jns
mov
and
dec
in
lret
icebp
rorl
insb
aaa
in
mov
outsl
jmp
xchg
xor
test
dec
adc
imul
adc
cwtl
mov
pop
out
xor
xor
sub
sbb
outsb
pop
loope
fimuls
imul
loope
int
test
inc
outsl
jge
sti
test
sti
imul
sub
pop
adc
aaa
adc
adc
out
mov
stos
lods
and
out
mov
fstpt
std
mov
mov
stos
xchg
xor
and
in
ja
xchg
pop
pop
std
popl
js
hlt
mov
std
jl
xor
jg
pop
int3
sahf
hlt
mov
add
add
add
sub
add
xchg
sahf
sbb
xchg
test
sub
clc
mov
rcl
aaa
pop
jno
mov
mov
es
inc
lods
or
pop
std
push
or
mov
dec
dec
xchg
fadds
cli
cmp
sub
lods
sub
and
dec
ret
ljmp
les
or
add
dec
mov
jmp
mov
or
repnz
ja
loop
out
add
into
mov
mov
movsl
mov
bound
mov
pop
ja
mov
push
inc
dec
mov
mov
pop
push
xchg
mov
shll
push
cld
mov
mov
jge
test
xchg
push
adc
mov
test
clc
aas
push
repnz
jl
xchg
push
pop
pop
rcll
and
dec
mov
das
aam
inc
push
test
stos
int3
pushl
sbb
enter
fsubrl
jo
aam
mov
mov
jns
mov
mov
sub
mov
mov
push
push
jg
mov
mov
repz
sahf
xchg
dec
and
jecxz
inc
ds
xor
bnd
cwtl
outsb
dec
push
sbb
dec
cs
fiadds
bound
iret
cmp
lret
xchg
outsb
pop
push
test
insl
xor
push
stos
lahf
cmp
inc
loop
jno
pushl
mov
std
shlb
mov
lahf
xchg
lcall
das
pop
ds
push
pop
sbb
loop
repnz
stos
enter
sbb
es
pop
mov
pop
mov
repz
addb
popa
out
fs
in
cmpsb
mov
ds
in
mov
xor
fnsave
sbb
mov
add
cmc
js
sbb
add
pop
mov
mov
insl
ret
out
mov
add
add
add
test
rcl
jnp
out
fs
mov
mov
scas
cld
mov
pushf
out
cmpb
cmp
push
in
xchg
sahf
sub
dec
jbe
std
mov
test
or
cmp
fcoms
dec
pop
in
js
in
hlt
pop
cli
sub
mov
jb
pop
rcrb
adc
mov
and
mov
test
mov
sbb
jno
movsl
movq
xor
test
fistl
pusha
xchg
pop
leave
sub
ss
jp
mov
fs
push
xor
push
std
xor
mov
jle
jnp
clc
insb
jmp
out
aad
xor
sub
cmp
out
adc
push
test
mov
mov
notb
xor
adcb
dec
aas
aas
scas
cmp
dec
aam
jae
xor
scas
xor
xor
jmp
pop
inc
cmpsl
or
stos
aam
adc
adc
xor
mov
mov
add
imul
roll
in
inc
repnz
dec
xchg
add
je
es
mov
add
push
and
pusha
pop
repnz
cmp
stos
cmp
out
data16
sbb
mov
push
leave
sarb
jmp
les
jecxz
int
push
push
sub
dec
sti
mov
jbe
aas
pushl
jo
or
pushf
mov
sbbl
mov
int3
push
cmp
mov
pop
icebp
std
sahf
movsb
xor
adc
dec
push
mov
sahf
cmp
jmp
aad
dec
cld
insl
mov
lahf
gs
jns
inc
mov
sbb
push
inc
js
mov
or
add
ficoms
dec
cmp
jae
jmp
and
add
jg
pop
fstps
ljmp
add
scas
push
add
pushf
mov
jno
push
mov
pushf
mov
adc
add
mov
fisubl
jno
andl
test
nop
dec
out
add
mov
push
mulb
sahf
cmpl
push
jecxz
jne
sub
push
outsb
add
mov
mov
inc
xor
mull
and
mov
add
mov
or
rcll
loope
bnd
rcr
cmp
mov
fists
adc
lcall
sbb
mov
push
inc
mov
int3
sbb
sahf
daa
fisubrs
xchg
repz
daa
and
xorl
or
xchg
sarb
add
loopne
inc
test
mov
adc
sbb
dec
jne
mov
call
mov
ds
rorb
ficompl
popf
jno
test
jg
inc
stos
mov
testb
imul
aad
ret
mov
outsl
pop
xorl
sbb
pop
leave
insl
xchg
mov
enter
out
push
xchg
inc
fwait
pop
cmp
ret
mov
lock
cmc
je
divb
sub
pop
loope
out
jbe
sahf
enter
aam
arpl
sub
sub
jmp
mul
add
sbb
cli
inc
push
cltd
in
mov
imul
push
fsubrl
sub
or
cmpb
sbb
je
fwait
cmp
lea
xor
adc
inc
leave
xchg
mov
mov
lret
fstpt
mov
mov
fdivs
sub
clc
xlat
or
mov
adc
sarl
cmc
xor
outsl
push
or
popf
paddd
fidivl
add
nop
add
sti
add
add
push
daa
cmpsl
adc
icebp
or
cmp
jb
mov
repnz
out
leave
js
mov
pop
mov
xchg
jecxz
xlat
daa
fisubs
aas
dec
mov
orl
mov
push
dec
pusha
test
lods
mov
jge
mov
add
fucomp
xchg
ficomps
jg
sbb
inc
xor
outsb
inc
cmc
adc
xchg
sub
ucomiss
shrl
mov
fucomp
aad
push
bound
ljmp
in
aam
shlb
in
mov
cld
jl
mov
shlb
sub
mov
xor
cli
test
fsub
mov
xchg
push
mov
push
cmp
add
lret
out
xor
mov
ja
or
mov
rorb
lret
iret
ds
fstpl
in
imul
dec
mov
jp
std
mov
sub
ss
in
or
incb
jno
subb
jg
jbe
jle
bound
mov
jno
ret
or
inc
out
imul
in
pop
mov
icebp
and
mov
cltd
in
mov
popf
jno
cld
sub
sbb
test
adc
or
jle
test
scas
loope
add
movsl
mov
in
mov
cmpsl
les
xor
shlb
test
inc
push
dec
xchg
nopl
stos
test
test
stos
stos
icebp
cld
aas
and
repz
fistl
push
xor
mov
ja
test
mov
xchg
inc
in
pop
movsb
mov
lods
pop
mov
fst
test
xchg
sbb
scas
jne
jmp
daa
xchg
add
add
push
movsb
lea
sub
not
ret
mov
add
add
add
outsl
jg
icebp
lods
mov
cwtl
adc
aas
subl
sti
arpl
pushf
adc
push
test
push
or
lds
data16
sbb
mov
test
lods
adc
mov
inc
je
xchg
mov
stc
pop
cli
mov
ljmp
dec
inc
pop
inc
xchg
sti
push
mov
sub
gs
jae
jb
dec
in
rorl
dec
movsb
daa
jecxz
and
inc
pop
iret
test
aaa
lock
pop
sub
pop
movsb
jo
in
sti
xor
mov
sub
or
js
inc
fwait
test
or
test
sbb
xor
ret
xchg
dec
mov
sbb
sti
aas
ret
inc
push
sbb
dec
mov
push
imul
pop
cmp
mov
mov
xlat
push
addl
mov
mov
arpl
cli
repnz
jg
cmp
pop
shl
fcompl
movnti
sbb
mov
outsl
and
jge
rol
jbe
les
mov
test
or
mov
popa
xor
jmp
mov
mov
adc
stos
adc
lcall
mov
dec
dec
outsb
ret
call
imul
jge
bound
inc
inc
dec
clc
testb
mov
xor
or
bound
pop
test
mov
inc
enter
in
adc
inc
xor
hlt
push
xlat
ja
lods
sub
loop
mov
xchg
mov
loop
sti
pop
in
jl
mov
sub
push
push
mov
imul
cld
add
push
inc
cmp
mov
cs
fisttps
pop
or
xlat
or
mov
mov
inc
cmpsb
inc
sbb
push
iret
add
test
mov
out
xchg
add
sti
add
add
pop
out
jb
aas
fdivs
sbb
sub
sbb
out
xchg
cmp
xor
inc
xchg
loopne
inc
int3
mov
pop
ja
rorl
adc
mov
inc
pop
cmp
xchg
push
pop
sbb
in
cmp
mov
stos
jg
pop
sbb
add
mov
rcl
shll
and
ret
mov
fldenv
mull
and
xchg
jecxz,pn
push
mov
pop
dec
xor
mov
jno
or
mov
pop
imul
sbb
xchg
mov
out
cmp
lcall
out
addr16
dec
repnz
jae
lods
clc
mov
cmp
jmp
das
lahf
adc
into
outsl
test
dec
add
stos
mov
aas
inc
jne
out
sbb
in
into
movsb
and
arpl
add
dec
dec
aam
cmp
lds
add
pop
arpl
hlt
ret
push
sub
inc
aam
or
mov
test
icebp
dec
push
cwtl
aad
pop
dec
push
data16
enter
or
mov
or
pop
repz
out
push
dec
and
call
aam
push
jmp
insl
clc
and
push
shll
cmp
xor
adc
imul
js
xor
test
repz
sub
push
xor
cmp
shl
js
pop
js
add
clc
pop
outsl
adc
jecxz
xor
xor
stc
fmull
fptan
jno
push
ret
inc
push
cli
xor
idivl
test
fsubs
sahf
in
and
xor
rcl
js
inc
jnp
ret
aad
jl
imul
lsl
lods
inc
sahf
inc
gs
daa
jbe
dec
fcmovnu
stos
lods
test
and
fisubrs
mov
mov
cmp
mov
pop
adcb
loopne
mov
test
xchg
std
jg
mov
into
lock
xchg
add
sti
add
add
data16
outsb
push
and
sub
xor
call
inc
add
jge
sahf
push
out
jo
out
mov
cmpsl
jecxz
or
xor
pop
add
jecxz
cmp
mov
add
and
js
incb
lds
iret
imull
pop
nop
sub
lock
push
imulb
cmpsl
daa
shrl
les
imul
cmc
push
cmpsb
xor
mov
mov
scas
scas
das
mov
iret
mov
orb
pop
into
jns
and
popf
mov
imul
gs
xlat
mov
shll
adcl
in
lock
or
repnz
jbe
lods
fwait
pextrw
insb
out
and
or
inc
cmpsl
dec
inc
mov
xchg
ja
pop
jecxz
inc
xchg
xchg
pop
mov
fwait
mov
insb
mov
iret
sbb
adc
mov
fcmove
stos
sahf
or
pusha
jnp
or
push
aam
sbb
and
push
inc
or
pop
or
test
jns
popa
imul
jp
xchg
jmp
outsl
in
leave
cwtl
gs
int
out
and
cmp
or
jb
inc
push
inc
int3
pushf
jmp
add
rcll
leave
or
fwait
addb
int
cmpb
fbld
sarl
jne
mov
xchg
outsl
sub
jp
inc
insl
movsl
xchg
test
mov
pop
jbe
movsl
cs
and
int3
push
xchg
sbb
xchg
daa
inc
pop
sbb
je
or
push
fildll
mov
mov
gs
loop
push
pushaw
push
mov
push
mov
icebp
int3
mov
adc
fldl
and
cli
dec
cmpsl
fs
test
mov
idiv
iret
rorl
mov
cwtl
add
sti
add
add
mov
sbb
dec
pop
sbb
xchg
jns
mov
mov
fistpll
xor
roll
pop
xchg
mov
or
or
xor
outsl
cli
or
or
mov
pop
mov
stos
into
ret
adc
scas
test
arpl
or
dec
inc
cmpsl
iret
push
scas
int
xchg
sbb
push
mov
sbbb
and
jle
test
dec
jp
jl
mov
mov
mov
stos
or
jmp
fimull
pop
cmp
gs
bound
insl
jle
mov
dec
mov
sti
sub
push
lods
bound
and
in
int3
ja
movsb
mov
lods
popa
or
sti
add
cmc
mov
and
pop
xchg
sub
repz
mov
call
ret
push
int3
scas
add
mov
xchg
data16
jbe
mov
lret
mov
jp
sbb
negl
scas
jns
daa
fisubrl
and
jb
mov
jg
jbe
out
jbe
hlt
push
and
xchg
rep
fcomps
inc
lock
dec
xor
cmpsl
adc
out
add
lock
lods
mov
mov
push
pushf
inc
sub
inc
add
xchg
xor
shl
insb
adc
mov
mov
sbb
mov
pop
jp
cmpsl
std
xor
je
pusha
shrl
push
scas
and
call
mov
das
mov
shr
pop
pop
jns
fsubs
repnz
stos
inc
pop
clc
mov
pushf
pop
mov
push
pushf
dec
mov
nop
mov
mov
inc
call
negl
fwait
cltd
insb
imul
fldl
pop
pop
jbe
repz
imul
out
ret
mov
ja
or
enter
lcall
shl
adc
jp
lock
fidivs
pushf
dec
popa
mov
jmp
pusha
in
in
mov
push
xor
mov
jbe
in
les
ljmp
shlb
push
xor
cli
enter
fadds
pop
inc
in
mov
leave
xrelease
into
minps
push
lock
mov
mov
push
into
adc
push
packsswb
gs
and
pop
cld
imul
mov
rolb
dec
lcall
xchg
push
shrl
adc
mov
pusha
or
mov
mov
lods
and
shrl
xchg
data16
sbb
xor
adc
cld
adc
jle
and
clc
xchg
adc
sbb
call
cmp
xchg
inc
inc
lret
adc
mov
pusha
add
and
dec
push
adc
sbb
out
mov
adc
pop
add
pop
jne
mov
or
xchg
imul
lds
cs
jle
xor
xor
jnp
mov
ret
fldt
lret
xchg
rolb
jmp
cmpsb
out
adc
aam
std
pop
test
jg
adc
hlt
lret
inc
lret
imul
xchg
jge
inc
shl
sbb
sahf
jae
mov
mov
arpl
push
loope
pop
add
dec
pop
das
les
call
jo
xchg
or
imul
inc
push
inc
push
out
aaa
call
or
rcrb
lahf
test
push
sbb
lea
cmc
and
cmpsb
adc
mov
sar
js
push
nop
out
cltd
enter
jecxz
mov
inc
rorb
sti
jbe
fdivrp
mov
cmp
mov
in
fcoms
ds
test
sub
push
lahf
js
clc
adc
adc
rcr
out
add
push
jle
xlat
lret
push
testl
pushf
add
sti
add
add
inc
or
stos
loope
stc
mov
fbld
push
pop
mov
push
xchg
dec
sub
mov
cmp
aas
add
pop
stos
xor
andb
sahf
outsl
cltd
adc
or
sub
mov
cmp
mov
les
std
repz
sbb
push
sbb
add
pop
pusha
data16
xchg
or
pop
inc
mov
xchg
cmpsb
xchg
iret
cmp
stos
add
inc
adc
and
jnp
mov
inc
out
int
or
and
pop
out
jp
int3
mov
add
adc
pop
aam
adcb
jmp
fnstenv
outsl
inc
bnd
iret
push
xor
pushf
sbb
sbb
xchg
fdivrp
xchg
iret
rolb
pop
stos
or
shlb
cltd
xchg
iret
xor
popf
or
push
xor
ret
pop
stos
pushf
popa
rcr
sbbb
inc
cmp
repnz
mov
movl
jns
sbb
stos
adcb
cmp
jp
jbe
daa
push
push
dec
mov
pop
cmpsb
mov
lret
dec
call
shrl
nop
pushf
jns
mov
fnsave
mov
mov
in
mov
mov
pop
mov
clc
divb
movsb
sarb
aaa
loopne
aam
inc
hlt
xor
shlb
push
mov
cmpsl
cmp
daa
inc
hlt
hlt
push
dec
hlt
fwait
adc
add
ror
fdiv
jnp
lock
fsubl
popa
scas
sbb
cs
sbb
in
add
mov
std
shr
arpl
cld
cmp
cmp
inc
mov
pop
rcl
cmp
mov
dec
imul
ljmp
push
imulb
scas
inc
jne
jb
pop
movsb
add
rolb
imul
inc
mov
insb
cmp
scas
and
adc
or
pop
out
repz
fucomp
lods
enter
sahf
add
sti
add
add
fldl
stos
mov
sub
adc
sbb
mov
stos
xor
xor
repz
ja
scas
out
test
and
pop
adc
mov
mov
arpl
pop
inc
movsb
adc
cmp
rcrb
mov
popa
sub
lea
mov
sub
and
adc
lds
adc
into
out
out
pop
cmp
add
adc
mov
mov
ret
imul
bound
sub
xchg
das
jge
or
int
fdiv
push
push
jbe
adc
sub
jmp
fnsave
sub
call
push
mov
pop
gs
aam
mov
fadds
scas
push
ss
add
dec
mull
test
scas
or
addr16
arpl
cs
cmp
xor
sbb
dec
int3
inc
test
fs
arpl
fmull
sbb
mov
xlat
jo
mov
jge
mov
arpl
pop
fnstenv
dec
adc
inc
xor
int
hlt
dec
ds
pop
lret
fisubrl
xlat
vmread
outsb
xchg
mov
mov
pop
pop
xor
mov
js
pop
adc
xor
fsubrl
in
xchg
mov
aaa
lock
sub
repnz
mov
je
mov
and
leave
aam
repnz
add
adc
xor
in
inc
mov
fidivl
or
sarl
imul
faddp
aaa
cpuid
jle
and
popl
fwait
hlt
stos
out
jmp
out
shrb
push
pop
xchg
jbe
dec
add
mov
sub
in
and
aas
rcll
lcall
test
leave
xchg
insl
mov
out
nop
sbb
mov
add
loop
cwtl
mov
inc
rorl
mov
mov
movsl
addr16
mov
jecxz
nop
xor
dec
push
sbb
out
add
lahf
cmpsb
ret
ret
adcb
lcall
outsb
add
sti
push
sub
std
jne
and
jne
sbb
scas
pop
adc
das
jmp
lret
fs
test
dec
xor
test
clc
sbb
ja
jmp
sub
mov
movb
jbe
inc
or
mov
ss
test
inc
lock
aaa
dec
arpl
sbb
test
call
lock
std
mov
mov
inc
mov
mov
fadds
cld
dec
lcall
dec
rol
das
add
movsb
popf
pop
cmp
and
jecxz
aaa
pop
sub
fmul
cmp
mov
sub
ss
sbb
lahf
and
sub
pop
xlat
inc
sub
nop
in
xchg
mov
xchg
into
xchg
test
jns
xchg
inc
adc
popf
dec
mov
mov
loope
sbb
push
in
push
ss
das
lret
cmp
test
bnd
das
clc
insw
loope
mov
hlt
mov
cmpsb
js
jne
test
jmp
scas
orb
in
adc
jne
mov
rcrb
fs
cmpl
mov
in
and
xor
jmp
jge
std
add
and
lahf
leave
xor
shlb
je
out
xor
shll
mov
mulb
sti
test
leave
dec
or
cltd
sahf
cmpsl
or
lahf
fidivrs
sbb
ds
sbb
dec
sbb
outsl
jae
rcrb
xchg
outsl
cld
aam
dec
int
fimull
cs
jno
ffreep
out
cmp
push
inc
iret
test
lret
in
add
ja
idiv
pop
out
cmp
inc
enter
add
add
add
ret
fninit
xchg
divb
pop
xchg
icebp
xor
inc
push
and
out
dec
adc
ja
and
in
push
mov
jp
test
push
int
mov
dec
loopne
orb
jne
xchg
movups
push
loope
pop
xorb
adc
fwait
and
repnz
int3
ja
dec
or
addr16
jo
jle
lods
fistps
ljmp
aam
out
and
fwait
in
es
gs
mov
xchg
mov
add
adc
add
ret
ss
jg
imulb
push
pop
mov
lahf
xchg
movsl
xchg
daa
jns
fwait
cmc
dec
add
shlb
outsb
add
cwtl
or
lret
ds
loop
fs
sahf
orl
aas
aam
adc
sub
es
pop
rorl
rcll
mov
add
sbb
pop
jo
jl
sub
in
jle
pop
pop
in
jecxz
imul
dec
movsb
in
adc
mov
scas
nop
push
cmp
dec
push
fimull
push
jmp
fcompl
xor
jmp
neg
dec
imul
sub
and
fistps
loope
jo
fwait
xor
movsl
mov
push
ret
mov
mov
mov
cmpsl
fcoms
outsb
mov
and
daa
dec
jo
mov
and
mov
sub
sbb
aam
xchg
cmp
stc
filds
out
cmpsb
sub
int
sbb
xor
pusha
jo
fldt
leave
divb
push
bound
out
pop
mov
mov
fmul
out
popf
sbbl
push
inc
mov
pop
repnz
addr16
sub
inc
scas
jle
nop
mov
xor
jp
dec
adc
in
insb
push
sub
inc
sbb
call
jmp
cmp
xchg
add
sti
mov
inc
sarl
sti
add
add
inc
lock
repz
jae
ja
and
rcr
out
inc
sub
and
pop
mov
aaa
lret
repz
jle
dec
sti
mov
test
scas
xchg
imul
mov
jmp
adcb
cmp
or
and
xor
inc
shl
mull
mov
pop
jne
subb
mov
inc
dec
mov
sub
sbb
aad
inc
leave
dec
shlb
dec
ss
jecxz
or
lods
push
repz
call
mov
sbb
and
jge
mov
cmp
in
sar
xlat
shlb
push
fidivrs
mov
jge
or
or
sbb
xchg
push
insl
iret
dec
divb
nop
mov
cmp
test
daa
cmp
imul
daa
or
into
dec
shlb
and
cmp
pop
inc
adc
popf
xor
fstps
int
scas
gs
xchg
sub
pop
or
or
jmp
mov
mov
aas
xor
data16
cmc
mov
pop
jp
es
into
mov
fnstsw
loop
incl
icebp
lock
dec
cmc
and
movsb
movsl
outsl
jmp
push
sti
leave
jno
scas
leave
mov
lret
sbb
lret
fstps
pop
lods
mov
adc
pushf
mov
into
ja
repz
in
fcmovnb
jb
fcompl
ss
or
xchg
ljmp
or
and
outsb
pop
mov
mov
pop
xor
cmpsb
pop
loopne
test
inc
int
xchg
inc
int
das
fs
data16
jns
mov
xor
push
popf
jg
xor
ljmp
incl
xor
sahf
xor
sub
cmpsb
add
sti
add
add
pop
rclb
xlat
and
push
add
hlt
pop
movsl
hlt
cs
sub
test
ficoml
imull
cltd
adc
jmp
js
mov
mov
test
jno
das
pop
cmp
in
lahf
sti
jnp
lea
pop
or
fistpl
lea
jg
add
jecxz
fcoml
out
call
push
les
orl
jb
sub
push
aad
pushf
negl
sarb
in
aad
in
xchg
sti
ret
adc
or
dec
add
xchg
add
aad
daa
push
push
xor
xchg
jecxz
add
jno
test
dec
mov
icebp
shlb
fldcw
push
mov
pop
dec
pop
rcrb
jmp
arpl
dec
sub
inc
int
mov
into
sahf
mov
ljmp
xchg
stc
push
adc
imul
lea
data16
movsl
imul
dec
ss
das
add
jle
ret
mov
loop
ja
std
bnd
add
pop
xor
sbb
xchg
movsl
push
xor
mov
daa
add
loop
jnp
or
call
addr16
iret
imul
cwtl
xchg
push
aas
cmp
repz
pop
pop
gs
mov
mov
pop
sbb
or
mov
fldt
push
lret
cli
iret
scas
jle
scas
or
fldcw
lds
out
dec
mov
mov
ficomps
scas
jg
or
out
dec
lcall
leave
scas
test
sti
movsb
mov
fistps
jle
test
daa
int3
xchg
cld
jg
dec
add
xchg
pushf
mov
fwait
aas
shlb
xchg
pop
and
out
xchg
push
sarl
cmpsb
jle
xchg
loope
mov
adc
push
hlt
addr16
cmp
inc
mov
arpl
test
add
stc
std
in
mov
mov
std
cmp
adc
sti
add
add
mov
scas
jne
leave
mov
sub
int
sub
mov
sub
aas
enter
sbb
push
mov
outsl
loope
call
dec
add
xchg
repz
xchg
loope
mov
in
xchg
lcall
cwtl
pop
xchg
sub
outsl
aad
jmp
xor
inc
xor
sbb
lcall
add
jg
push
or
nop
add
imul
inc
aam
mov
and
scas
mov
or
lret
mov
and
lds
push
xlat
dec
lret
ja
rorb
ftst
mov
pusha
jno
out
jmp
and
inc
shll
shlb
stc
idiv
out
push
arpl
sahf
cmp
and
push
out
xlat
sahf
inc
and
pop
in
pop
mov
cmp
cmp
push
cmpsl
jb
movsb
xchg
inc
push
cltd
gs
jecxz
sub
mov
je
cmc
aas
fisttpl
call
loopne
inc
and
push
out
mov
shrb
imul
or
jns
movsb
xor
arpl
imul
cltd
xchg
xchg
adc
cwtl
jecxz
mov
mov
arpl
push
adc
cmp
aaa
out
mov
in
and
shll
mov
lret
or
jle
dec
xchg
cmp
cmp
mull
scas
fadds
hlt
cmpsb
jnp
add
stos
push
stc
fwait
inc
lret
ficomps
ret
in
push
jno
dec
cmpsl
add
inc
inc
jns
add
sub
and
inc
xchg
sub
xchg
sti
adc
scas
sahf
mov
and
shrl
loope
int
addr16
sbb
cmp
xchg
imul
add
rolb
testb
inc
cmp
lock
stos
add
sti
add
add
cld
adc
adcb
test
mov
and
sub
aam
cmc
arpl
and
adc
in
repnz
fs
addb
xor
lods
inc
fs
nop
dec
fwait
ficoms
cwtl
cmp
jmp
xchg
jns
sbb
jmp
mov
jb
and
inc
test
mov
sbb
mov
add
and
cli
in
pop
sti
ret
fwait
mov
lods
aaa
popf
or
xchg
dec
testl
push
dec
xchg
aad
ror
mov
rcrl
cmpsl
mov
xor
push
pop
mov
rcrb
mov
or
mov
mov
pop
xor
lods
lahf
pinsrw
sbb
psubb
rcll
daa
out
xor
arpl
fidivs
xchg
ret
sbb
cld
and
pop
push
inc
je
das
iret
fs
sub
push
data16
test
int3
test
scas
push
in
add
push
repnz
insl
xor
add
cltd
aad
ljmp
and
es
in
iret
xchg
call
jp
mov
mov
xchg
repnz
stos
mov
lods
pop
mov
dec
adc
es
add
inc
int
xchg
push
push
sub
mov
and
in
outsl
cmp
xchg
sbb
xor
aaa
hlt
mov
psrlq
dec
rolb
dec
and
dec
fsubs
cs
and
mov
scas
jbe
inc
rcrl
jne
lret
jne
xor
lea
jle
int
xchg
dec
das
push
adc
add
jp
sbb
cli
and
ss
decl
rorl
pop
aas
pop
add
fldcw
sub
push
aad
cmp
or
pop
xor
add
add
popa
data16
gs
mov
push
ljmp
sti
add
add
rolb
lds
ficoml
int
adc
je
call
jmp
or
stos
aam
fs
stos
cmp
ja
mov
mov
xchg
fs
lahf
gs
push
dec
movsb
cmc
add
adc
or
xchg
add
xchg
or
loop
psubusb
jp
push
mov
in
inc
push
dec
pop
mov
jno
outsb
mov
popa
or
pushl
mov
stc
pop
xchg
imul
adc
test
fisubrs
jmp
mov
les
sub
pushf
lret
fxtract
sub
addr16
xor
sub
sti
jae
or
out
ret
sub
mov
push
and
add
xor
repnz
insb
sbb
push
cmpsl
add
jo
paddusb
mov
hlt
jne
or
push
negl
sub
add
mov
ret
outsb
dec
cmp
mov
nop
adcb
je
mov
pop
jno
jle
cld
sbb
mov
mov
cmpsb
jb
mov
push
xchg
jg
in
adc
shl
xchg
insl
test
and
add
adc
ds
xor
push
mov
stc
out
mov
dec
jbe
in
xchg
xchg
hlt
push
mov
dec
imulb
iret
icebp
and
push
cli
mov
aaa
rcrb
mov
lret
cld
es
jecxz
xchg
and
lock
je
es
or
xor
mov
cmpsl
lcall
shlb
pop
fists
push
pop
dec
jg
movsb
test
dec
popa
lods
jecxz
dec
in
pop
lds
movsl
jecxz
xchg
fcomps
pop
in
outsb
and
xor
xorl
in
xor
loopne
push
loop
mov
imul
mov
in
orb
add
mov
rcrl
repz
cli
cmp
adc
push
ss
aam
scas
add
sti
add
add
push
sbb
sahf
jae
outsb
push
add
jecxz
les
jo
es
mov
lods
inc
bound
das
out
scas
xchg
mov
loope
sbbb
xorl
xlat
incl
lock
inc
movsb
into
xor
push
mov
insb
hlt
sahf
sbb
xor
addr16
lahf
adc
jbe
int
out
stc
sub
ss
and
mov
insl
lret
inc
lret
hlt
and
imul
fisttpll
dec
cs
push
cmp
mov
stos
add
jp
jge
adc
mov
push
enter
fildll
push
nop
xchg
mov
pusha
adc
push
fs
push
sahf
mov
or
aas
clc
and
std
repnz
push
dec
stc
cwtl
rorl
adc
add
xchg
xchg
daa
pushf
inc
fcomip
pop
outsb
push
and
sub
sbb
test
mov
rolb
cs
loope
in
data16
out
rorb
outsb
push
cwtl
stc
sti
mov
sbbb
and
jns
in
mov
sbb
pop
aad
mov
adc
ljmp
subl
jns
ds
aam
stc
mov
dec
add
and
ljmp
xchg
fmull
pop
jg
sub
insl
sub
pop
xchg
rcrb
adc
sbb
movsl
leave
lock
mov
test
das
int3
push
cwtl
or
outsl
inc
mov
pop
mov
mov
xor
inc
test
insl
push
mov
inc
fwait
pop
push
pop
outsb
pop
dec
fbstp
xchg
adc
sbb
shl
shr
jno
push
cmpsl
push
mov
mov
add
add
and
push
push
cmp
adc
mov
add
add
add
insl
test
add
cltd
pop
dec
mov
stc
std
xor
cmp
movsb
sbb
xor
fldcw
push
nop
ret
in
jo
lods
pusha
mov
dec
cltd
test
out
cmc
in
cmp
push
push
in
or
dec
jns
xor
push
xchg
lods
mov
jp
stos
rorl
fdivr
jp
xor
out
js
xchg
dec
test
inc
xor
mov
jp
pusha
inc
ja
xchg
jecxz
es
outsb
and
jge
cmp
outsb
mov
mov
js
jg
mov
filds
popa
sub
popa
gs
lds
sub
out
dec
push
inc
mov
cmc
ja
shll
rclb
mov
jb
les
push
add
sarb
fxch
jno
lea
xor
das
and
dec
mov
fcompl
xchg
into
mov
sbb
mov
sub
xlat
movsb
dec
xorb
jg
sbb
mov
jle
and
sbb
iret
xlat
ljmp
cmpsl
and
mov
xchg
adc
sub
out
inc
adc
popf
je
mov
cmpsl
jbe
inc
mov
mov
int3
out
mov
icebp
jmp
or
shl
mov
and
push
push
in
or
and
mov
into
jbe
and
inc
adc
data16
mov
pop
ljmp
paddusw
mov
pusha
int3
inc
test
mov
icebp
shrl
sub
inc
inc
cmp
xor
mov
add
test
adc
es
stos
addr16
stos
add
sub
jno
into
out
imul
les
adc
mov
sahf
xchg
jmp
shlb
mov
fcom
outsl
add
cmp
mov
in
outsb
fs
std
jl
ja
mov
add
add
add
outsl
mov
jp
lock
stc
dec
gs
dec
ficoml
lea
sbb
stos
in
movsb
adc
in
cs
test
dec
sbb
outsb
js
aad
or
fsts
daa
aaa
dec
bound
fmuls
into
cmp
xor
ret
jbe
aas
push
std
addr16
mov
pop
sahf
loope
hlt
jae
cmc
fidivrs
pushf
sub
jle
out
add
sti
xor
jl
bnd
ljmp
cmp
repnz
shrb
nop
fsubrs
sbb
mov
pop
in
adc
cmpsl
rcl
sbb
int3
les
repz
mov
lret
arpl
cld
clc
test
jg
stos
js
xchg
in
push
stos
jb
fs
shll
movsb
push
sbb
arpl
push
add
push
shlb
out
imul
or
loopne
loop
xor
jle
sub
js
sub
in
pop
pop
flds
add
push
push
fidivl
adc
test
orl
sahf
sub
xor
pop
xchg
mov
dec
cmp
and
mov
mov
xlat
dec
adc
push
xor
or
clc
outsl
sbb
pop
jns
push
outsl
hlt
aad
into
mov
int3
push
sub
call
mov
adc
inc
cmp
xchg
jl
test
pop
test
dec
lods
mov
pop
sbb
jb
fcompl
and
add
fnstenv
pushf
xor
sub
addl
int
aam
adc
dec
js
pushl
and
xchg
push
in
inc
jo
sbb
xor
and
jge
xor
mov
lret
mov
out
jnp
hlt
sbb
cmp
arpl
mov
xchg
mov
add
inc
mov
jb
int3
loop
mov
add
add
add
int
test
mull
fucomip
and
cld
cmpb
add
xchg
sbb
mov
cmp
mov
cwtl
scas
test
and
add
or
sti
insb
push
mov
and
imul
nop
aas
nop
addb
repz
push
mov
loopne
aad
adcl
adc
pop
gs
pop
in
enter
adc
aaa
xchg
ret
mov
and
adcb
movsb
sub
inc
addr16
mov
dec
xor
cmp
inc
loope
xchg
push
ss
int
and
mov
sbb
insl
test
hlt
pop
bound
inc
dec
ss
jne
fstps
push
roll
mov
or
mov
sbb
aad
or
jl
nop
lods
mov
xor
leave
lahf
scas
test
fst
push
push
clc
or
add
sub
pop
call
inc
jl
std
bound
jle
arpl
aaa
pop
pop
or
jmp
jl
cwtl
shl
mov
enter
jle
loope
cmpsl
xchg
sbb
mov
mov
sub
add
gs
sub
movsb
pop
pop
addr16
leave
push
in
adc
cmp
jb
int
and
mov
loope
cmp
pusha
dec
data16
clc
out
mov
je
in
popf
sarb
ds
add
rcl
mov
inc
pop
loopne
lahf
push
add
test
hlt
adc
icebp
dec
sti
loope
call
mov
push
adc
fs
das
sarb
and
xchg
jo
aad
loop
je
adc
xchg
inc
sub
xchg
iret
cmpsl
aam
mov
push
jg
add
mov
cmp
mov
push
xchg
mov
sti
add
add
sti
cmc
out
test
jbe
rolb
insl
iret
adc
pushf
lret
push
fs
es
shrl
mov
inc
repnz
out
fbstp
stc
das
fidivrs
sarb
test
cli
imul
xor
and
jge
pusha
ja
pop
std
outsl
fldl
fwait
sub
ret
jl
iret
mov
cmp
cmp
fdivrl
pop
add
loop
fildl
dec
pop
sub
dec
fidivs
mov
mov
out
andb
jmp
xchg
rorl
data16
jecxz
sub
xchg
rcll
nop
add
mov
js
sub
mov
pmovmskb
in
pushf
mov
mov
sub
xchg
int3
xor
in
jl
movsl
dec
aam
sbb
or
push
stos
icebp
insb
test
sbb
fisttpl
rcr
xor
mov
push
inc
cmp
xor
clc
int
in
data16
inc
sbb
aad
mov
push
pusha
push
push
fdivrl
scas
jns
in
mov
jp
jb
add
inc
mov
imul
inc
clc
sub
into
shlb
lcall
push
orl
aam
arpl
mov
ret
or
and
gs
fdivrs
insb
push
xchg
fwait
xor
nop
adc
adc
cld
pushf
mov
pop
jbe
xchg
fsubl
xchg
fdivr
sti
lock
fimull
mov
test
pop
outsl
push
arpl
and
adc
es
sti
lods
jnp
hlt
cmpsb
cmp
out
aam
cmp
lock
or
notl
lcallw
cld
leave
lret
test
inc
fsubrs
mov
loopne
mov
mov
add
sbb
out
idivl
test
sub
cmpl
mulb
mov
mov
testb
push
loope
out
fwait
std
bound
fisubrl
mov
pop
jo
pop
xor
je
jne
jmp
dec
and
pop
mov
out
mov
mov
hlt
cs
jbe
mov
mov
or
out
sub
dec
xchg
aaa
std
gs
arpl
xchg
loope
sbb
jbe
xor
into
push
push
int
push
fistpl
bound
rcrl
dec
cmpsl
fimull
pushf
lods
pop
adc
ljmp
enter
sub
jb
xchg
xchg
ja
jns
andb
sub
pop
add
ds
arpl
dec
jnp
inc
sbbb
or
push
sahf
add
shll
inc
loopne
sub
xor
daa
adc
jg
mov
xor
dec
movsl
inc
xchg
imul
inc
jmp
add
jmp
jmp
sub
dec
push
mov
enterw
jecxz
push
fists
push
les
xchg
shll
mov
aad
pop
dec
repz
xor
sub
jl
test
jo
dec
cmpsb
lods
mulb
add
cwtl
sbb
sub
ljmp
pop
fwait
int3
je
jp
shrb
dec
xor
les
ljmp
mov
jp
sub
repz
mov
mov
loopne
lods
cmp
in
cmc
xlat
daa
add
xchg
int
push
mov
lock
addr16
jno
stc
xchg
jo
push
fistpl
mov
mov
inc
mov
insl
cltd
dec
add
adc
fisttpl
sbb
test
pop
add
jg
sbb
xor
aam
and
jle
pop
xor
lods
mov
push
or
mov
mov
faddl
gs
fcompp
out
fs
popf
outsb
shrl
jl
add
sti
add
add
lret
pmulhuw
jne
xor
scas
stos
mov
dec
lcall
push
xchg
test
mov
movsl
stos
movsl
rcrb
xor
jno
jns
rcr
sub
push
ds
pop
ljmp
pop
pop
inc
and
xchg
mov
mov
iret
sub
inc
mov
nop
sub
or
mov
insl
cmp
lock
popf
sub
cmp
in
push
and
sub
outsb
pop
pop
sahf
mov
shrb
adc
cltd
mov
add
push
enter
sub
adc
cmpsb
add
mov
shll
pop
sbb
xor
pop
fldt
repz
test
push
leave
pop
xchg
jmp
push
popa
lcall
sub
mov
jbe
sbbb
mov
ljmp
and
push
add
push
mov
inc
cli
outsb
cmc
stc
ljmp
mov
sti
jne
mov
push
sub
push
fwait
jmp
mov
ds
dec
pop
adc
and
fisubrs
mov
cmpsb
pop
sbb
loop
sbb
xchg
sub
jno
add
mov
sbb
faddp
adc
loope
push
in
jp
filds
roll
loop
sbb
push
popf
fldcw
je
or
push
in
cmpsl
cmpsb
js
xchg
mov
adc
or
lret
jle
dec
loop
cmp
jne
jmp
jmp
iret
inc
cld
mov
sbb
push
lods
sub
jecxz
loop
xchg
gs
xor
pop
push
sbbl
call
mov
and
lret
inc
or
push
iret
jg
push
data16
das
dec
push
sarb
int
mov
mov
pop
add
and
repnz
mov
add
fsubs
jmp
adc
jl
dec
dec
and
add
sti
add
add
rolb
outsb
clc
inc
push
fwait
sub
insl
loope
xchg
jno
repnz
lds
bound
incl
jns
std
mov
jnp
lods
repnz
test
inc
daa
std
imul
fisubs
mov
test
or
andl
bound
add
adc
cmp
cmp
sub
insb
adc
sbb
mov
shr
cmpsl
fiadds
daa
push
mov
add
lods
int3
fdivl
sub
mov
push
add
lcall
push
in
mov
jo
rcll
adc
cmp
push
test
push
shrl
mov
pop
mov
scas
sbb
push
insb
enter
rcll
sub
push
xchg
push
in
mov
lods
or
pop
es
mov
adc
push
inc
cld
push
ja
cmp
in
je
dec
jle
jl
rclb
and
and
dec
pop
pop
lock
lahf
mov
pop
or
bound
jmp
jmp
mov
out
sub
aam
pop
test
xor
nop
out
add
out
out
push
push
mov
jae
jg
rcll
mov
sarb
bound
mov
mov
inc
repz
mov
lea
maskmovq
imull
fnsave
cmp
aas
pusha
and
sbb
mov
fs
clc
or
fdivs
push
out
mov
inc
outsb
arpl
xchg
sbb
test
push
loop
lahf
dec
dec
push
inc
mov
cld
mov
stos
ljmp
and
into
jns
fstpt
push
pop
xchg
pop
das
jns
dec
cmc
jge
dec
aad
push
mov
sub
lcall
popf
bound
mov
clc
outsb
xchg
cmp
inc
dec
stc
pop
es
push
mov
sbb
pop
dec
insl
shrl
jb
lcall
add
add
add
add
and
xor
sub
or
sti
add
add
xchg
xchg
pop
add
cli
scas
adc
xor
pusha
xor
arpl
fs
ret
nop
in
cvtdq2ps
xchg
add
mov
inc
addl
sti
dec
in
je
scas
and
gs
lea
jno
inc
xor
add
lods
int3
jns
cs
call
stos
pushl
fnsetpm(287
jns
stc
nop
aad
shlb
sbb
lcall
lds
xor
mov
push
sub
sub
push
in
xchg
leave
fisttpll
mov
jecxz
cwtl
push
adc
sbb
call
fimuls
or
cmpsl
cld
inc
xor
cwtl
mov
cmp
repz
adc
sub
test
mov
call
dec
je
pop
push
cmp
adc
pop
mov
dec
leave
cmp
fnstsw
dec
push
std
mov
cmc
jmp
xchg
clc
scas
inc
xchg
pop
imul
jns
push
sbb
sub
push
mov
outsb
push
lods
mov
inc
xor
out
jb
leave
inc
mov
lods
ss
xchg
xchg
dec
lcall
adc
lods
adc
mov
movsl
push
pop
ds
pop
shrl
and
ljmp
in
add
mov
xor
push
push
cwtl
paddsb
ljmp
arpl
lcall
scas
pop
fcomi
jg
inc
je
lods
popl
sbb
sbb
push
jl
and
fcmovnbe
sbb
sahf
cli
pop
add
scas
adc
shrl
sub
gs
pop
ss
push
ss
or
push
cmpb
adcl
sub
fs
lcall
mov
mov
inc
rolb
push
pusha
sahf
cmp
std
jb
gs
lods
or
ljmp
pop
mov
loop
insl
add
push
jecxz
jg
data16
sbb
adcb
insl
rolb
sti
add
add
mov
push
ljmp
enter
fstps
sub
dec
add
mov
mov
or
and
jnp
mov
negb
decb
mul
ret
or
stos
push
arpl
in
pop
into
fucomp
inc
js
fsubrs
mov
adc
and
ja
or
sahf
cmc
fisttpll
leave
inc
mov
clc
and
sbb
push
lods
jge
or
aaa
fstl
lsl
ljmp
sti
adc
pop
popf
adc
fs
cmp
mov
loopne
les
inc
test
insl
adc
lods
xchg
insb
jle
adc
rcrl
push
insb
adc
cmp
xor
imul
sub
mov
shlb
lock
mov
mov
fsts
mov
imul
mov
adc
add
test
mov
xchg
ficompl
or
pop
pusha
popf
inc
pop
fs
pop
out
mov
push
dec
jno
mov
or
in
pop
sub
shll
adc
and
pop
mov
push
xor
xor
aaa
sbb
lock
int3
push
add
pushf
mov
fldl
aas
and
shrb
cmp
add
pop
iret
cli
mov
lcall
sbb
add
dec
out
jno
fbstp
push
jb
imul
bound
mov
push
stos
or
shll
inc
jno
and
jne
insl
dec
out
out
xchg
fisubs
shlb
sti
lret
cltd
repz
insb
fsts
dec
mov
lret
or
jno
loop
inc
xchg
repnz
inc
rorl
xchg
sbb
mov
insb
mov
xchg
jns
lahf
mov
add
pusha
jbe
out
test
stos
std
and
add
sti
add
add
inc
cmp
cmp
aad
pushf
adc
cld
adc
fiadds
movsl
push
rcrl
lret
outsl
scas
and
add
subl
clc
dec
sub
hlt
xchg
mov
out
pushf
fdivl
std
push
add
sub
xchg
jb
jnp
ss
int
call
scas
or
test
push
es
std
xor
mov
jp
push
mov
jne
mov
dec
jnp
repz
dec
mov
fs
outsb
push
addr16
xor
push
push
mov
repz
mov
sbb
imul
ljmp
repnz
dec
add
sbb
cmp
add
js
inc
out
add
pop
roll
iret
mov
repz
mov
gs
add
cli
lret
test
dec
push
inc
mov
in
xchg
ret
lcall
add
mov
jl
push
and
mov
xchg
inc
sbb
mov
add
mov
pop
sbb
or
iret
mov
push
mov
sub
mov
xchg
jbe
les
notb
add
js
outsl
mov
icebp
stos
mov
xchg
mov
fcoml
cmpsl
push
sub
jmp
arpl
scas
aad
sbb
in
fnsave
lahf
or
addr16
push
xor
inc
pop
cmp
insb
cltd
xchg
mov
sbb
xor
mov
enter
jp
fwait
int3
pop
adc
push
mov
sub
ljmp
fcmovnu
xchg
or
mov
in
rcl
jg
pop
mov
test
je
pushl
pop
pushf
stc
insb
cmpsb
jl
mov
clc
popa
cmc
in
mov
lret
testl
mulb
inc
repz
add
add
pop
lcall
addr16
dec
loopne
arpl
add
sti
add
add
mov
lret
inc
xchg
enter
pop
frstor
aaa
or
sbb
enter
and
int
lahf
xchg
xor
sbb
push
jno
loopne
cld
xchg
or
jb
pop
je
adc
mov
inc
pushf
cmp
sahf
xchg
test
std
lock
jecxz
aaa
andl
pop
mov
int3
push
incl
cmpl
or
les
call
and
inc
gs
notl
shlb
hlt
out
jl
pop
jb
fcmove
mov
das
pop
sarl
xor
jmp
bound
cmp
mov
fwait
adcl
sbb
das
in
sbb
cmpsb
sub
pop
clc
nop
cmpsl
xchg
push
lcall
pop
ds
scas
andb
test
inc
pop
inc
std
push
mov
mov
push
mov
cmp
leave
or
push
loop
dec
jl
adc
push
xor
pushf
rcl
mov
push
stos
mov
xchg
jl
dec
loop
pop
inc
rorl
cltd
je
pop
mov
cli
add
dec
insl
loopne
sti
xor
xor
iret
pop
rcrb
gs
sbb
test
adc
ljmp
push
lods
mov
cmp
mov
xor
jno
or
jae
pop
inc
cmp
jp
stos
addr16
test
or
cmp
sti
xor
adc
repnz
scas
cltd
mov
std
rclb
pop
sbb
lret
pop
rorb
es
movsl
call
pop
lds
mov
and
ljmp
lcall
scas
or
dec
je
sbb
mov
add
or
add
xchg
lods
je
lds
mov
lock
cmpsb
shl
jne
sbbb
mov
add
insb
sub
outsl
daa
insl
push
addb
jae
jns
movb
sti
add
add
lock
sub
push
lret
mov
jmp
in
js
add
out
aas
sbb
pusha
stos
dec
sub
adc
xchg
loopne
loopne
dec
or
imul
cmp
idivb
pusha
pop
dec
cli
xchg
out
sub
pop
jecxz
data16
inc
loope
fbld
decb
xchg
cmpsb
icebp
pop
fcompl
push
inc
sbb
xchg
add
jp
jmp
ret
popl
xchg
je
aas
cwtl
mov
mov
in
mov
fisttpl
mov
insl
faddp
lahf
mov
loop
inc
mov
sub
mov
inc
mov
js
mov
ss
pusha
inc
orl
xchg
fst
lods
add
popa
loope
or
sub
stc
xor
decl
xchg
mov
mov
dec
std
pop
xor
popf
ss
sub
mov
mov
int3
or
shl
sbb
lds
sub
jge
mov
out
jb
push
mov
in
sbb
scas
stos
rorb
push
movsl
or
cltd
out
incb
dec
lcall
fdivl
sub
dec
gs
xchg
lock
shrl
mov
nop
xchg
add
insb
add
mov
lds
insb
jb
sar
enter
insb
sbbb
icebp
xlat
pop
icebp
inc
or
pusha
cmc
add
lcall
aaa
lahf
dec
lds
in
mov
inc
outsb
fisttpl
adc
sub
cmpb
jb
fidivs
cmp
mov
in
sarb
inc
and
sbb
xor
jnp
stos
in
ret
lret
pop
cmpsl
mov
das
test
jg
mov
pop
int
xchg
jae
or
add
pop
and
mov
out
leave
enter
jl
out
pop
enter
add
add
mov
cmp
mov
adc
sub
mov
imul
jbe
dec
pushf
xchg
sbb
adc
dec
cmp
insl
mov
jmp
jnp
rorb
push
xchg
push
out
into
cmp
mov
fst
mov
cmc
adc
pop
dec
or
pushf
aad
mov
in
in
dec
iret
mov
pop
or
push
ljmp
or
into
ds
sti
push
popf
cmp
mov
sarb
push
movsb
xchg
mov
add
mov
fwait
ja
test
mov
arpl
xor
cmp
shll
push
push
mov
int3
xor
mov
ret
std
inc
or
mov
dec
and
fsubr
sbb
repz
mov
inc
test
push
sub
mov
ficomps
dec
cli
ja
scas
lea
popf
xor
and
imul
adc
clc
jp
mov
add
outsl
xchg
inc
fwait
aad
fdivl
shlb
pop
jg
les
cli
add
ret
cmp
jecxz
int3
inc
and
js
into
sub
lods
out
cmp
ret
mov
push
imul
add
xor
cmp
cld
lods
cmp
sbbb
sub
cmpsb
mov
pop
jae
jno
lock
pop
out
popa
int
add
cmp
xorl
jne
pop
mov
and
mov
xchg
inc
iret
and
movsl
lock
repnz
dec
negb
xchg
dec
push
xchg
dec
and
addb
jbe
push
fs
insb
es
test
add
sub
fidivl
pop
or
fstps
mov
sub
int3
pop
int
add
cmp
mov
sbb
ds
lret
sti
add
add
fsubs
xchg
sbb
mov
mov
mov
push
jg
lcall
je
in
mov
pusha
jge
and
fdivs
cmp
jmp
pop
stc
call
mov
ffreep
ds
sub
add
mov
inc
out
add
cltd
dec
int3
xchg
jo
mov
pop
and
movsl
dec
ljmp
and
pop
jb
pop
adc
test
xchg
dec
out
mov
jo
enter
and
addr16
nop
call
call
out
ret
jge
mov
jno
push
xchg
pushf
push
nop
push
mov
push
ss
dec
aas
jg
dec
sbb
fnstcw
aaa
mov
lods
ret
in
mov
testl
imul
mov
cltd
jne
mov
ret
add
inc
cmp
sarb
sub
sub
add
push
jae
imul
insb
xchg
lcall
mov
clflush
pop
pop
inc
inc
sub
pop
es
rolb
pop
pop
lret
dec
int3
ret
mov
adc
jns
pop
clc
and
pushf
push
movsl
testl
mov
push
dec
movsb
ror
xor
ss
jbe
mov
xchg
rolb
cmp
inc
insl
sbb
adc
pop
jae
xlat
ljmp
jbe
hlt
mov
pop
mov
jb
in
ss
imul
int
mov
sti
cmpsl
pop
dec
push
mov
mov
sub
ds
and
jge
lods
aaa
sbb
mov
mov
testb
xchg
mov
cmpsl
shl
mov
arpl
imul
mov
hlt
lock
faddl
fistpll
jnp
pop
push
scas
push
in
lods
or
xchg
adc
cmp
pop
and
fs
int3
fsubs
add
sbb
jge
aam
dec
adc
cmpsb
aam
int3
add
sti
add
add
mov
jmp
lret
fidivrl
sbb
inc
mov
jae
out
add
pusha
sarb
js
repz
mov
stos
clc
pop
lret
daa
fmull
inc
mov
mov
cld
xchg
adc
lods
cmp
sbb
adc
sbb
push
icebp
or
dec
cltd
test
mov
stos
sub
lcall
rorb
and
xchg
in
mov
jae
inc
out
push
or
std
mov
pop
stc
and
push
jne
add
leave
pop
test
cmp
xor
gs
or
repnz
cs
into
fldlg2
sbb
out
fadds
adc
popa
adc
decl
lcall
lods
out
dec
out
sub
flds
cmpsb
mov
repz
data16
ret
pop
js
jno
bound
popl
mov
stos
sbb
xchg
shufps
nop
xor
enter
mov
mov
adc
inc
and
sbb
lock
sti
test
addb
and
and
and
jmp
ret
ds
xlat
xlat
mov
xor
test
pop
in
jae
adc
out
and
mov
sti
sub
pop
jae
fnstenv
jg
daa
mov
jp
cmpsb
fwait
aas
cmp
test
lods
sbb
pop
mov
into
in
sbb
testb
mov
fcompl
pop
cmp
mov
lret
leave
cmp
mov
addl
scas
flds
dec
adc
add
jne
dec
sti
aam
pop
mov
iret
pusha
lods
les
inc
adc
shll
popf
out
push
out
push
outsb
dec
je
inc
fs
pop
lods
add
mov
nop
and
into
add
sti
add
add
push
pop
ss
leave
sbb
push
and
fdivrs
pop
cli
adc
lods
repz
jg
and
mov
rcrb
mov
lahf
jbe
mov
clc
mov
stos
leave
rorl
mov
dec
lcall
sarl
sbb
mov
sbb
pushf
sub
mov
addb
xchg
or
cltd
cmc
sub
dec
iret
or
js
xor
mov
gs
add
mov
cmp
lret
stos
sub
cmp
out
int
dec
mov
js
insb
das
mov
pop
aam
mov
ret
mov
sub
adc
shrl
test
incl
sti
xor
fwait
in
cmp
aaa
cmpsl
in
lock
or
daa
lods
es
pop
mov
jge
addr16
push
bound
and
sbbb
rcrb
orl
insl
push
mov
inc
sahf
out
mov
push
fisubs
and
jb
or
adc
jmp
push
inc
cwtl
adc
mov
cmpsb
out
cmc
sub
and
mov
roll
sbb
jno
jg
mov
out
fsubrs
dec
jp
and
mov
jmp
out
lahf
sub
adc
in
arpl
ja
lret
fmuls
scas
sub
xor
les
adc
cmp
xor
les
gs
mov
cmpsb
lock
arpl
pop
lret
ficomps
ret
sbb
out
mov
or
bound
xor
out
adc
cmpsb
cmp
xchg
rorl
enter
push
call
pusha
scas
rorb
jecxz
divl
inc
pop
xor
les
ret
incb
dec
inc
mov
in
dec
cmp
cmp
add
sti
add
add
lahf
xchg
ds
cmp
ja
xor
pop
cs
scas
fmul
pop
lods
cmpb
outsb
xor
enter
adc
xlat
pop
xorb
dec
add
pop
push
into
mov
mov
mov
adc
dec
bound
jg
push
fidivrs
push
fwait
xchg
cmp
sbb
xchg
pop
adcb
mov
jno
jge
sbb
fwait
sub
int
xchg
and
push
push
loopne
repnz
jge
push
mov
add
inc
negb
loopne
loop
imul
mov
dec
call
shlb
mov
mov
xor
subl
in
sub
mov
push
xorb
popl
mov
mov
pop
in
dec
adc
jmp
les
mov
aaa
inc
fcmovnbe
pop
sahf
ljmp
das
scas
adcb
jmp
jmp
adc
pushf
out
fldenv
ds
inc
dec
push
outsb
aaa
imul
inc
sti
pop
aaa
jge
mov
pushf
xchg
lret
xor
push
jne
or
dec
outsl
insb
dec
cmp
xchg
mov
push
jno
daa
cmc
adc
dec
repnz
es
movsl
mov
in
adc
xor
push
ja
loope
out
xor
mov
aaa
mov
inc
andb
lret
aaa
movsb
inc
and
dec
xchg
movsl
popa
test
mov
shl
sahf
loope
sub
dec
pop
roll
mov
cwtl
dec
cmpsl
outsl
pop
cmc
outsl
and
aaa
dec
enter
xor
pushf
andl
loop
sarl
adc
add
xchg
push
add
mov
aam
ja
mov
xchg
mov
xchg
lea
mov
add
xor
stos
jo
dec
cli
fldcw
dec
nop
cwtl
push
inc
rolb
add
add
add
cmp
dec
sbb
and
xchg
and
adc
fcmovnb
loop
sbb
jle
xchg
js
adc
mov
ja
pop
loopne
mov
sub
mov
mov
rcll
push
jle
loopne
mov
sub
add
push
fdivl
jne
xchg
jnp
adc
test
mov
xor
adc
js
cld
inc
xchg
jmp
xchg
xchg
sbbb
mov
fwait
mov
clc
jmp
arpl
inc
or
add
inc
and
test
fildll
and
enter
shlb
or
shl
push
scas
call
pop
lds
push
pop
jns
insl
mov
xor
sahf
lock
xchg
pop
cli
dec
cmp
push
inc
es
cmp
nop
movsb
insl
imul
fnstsw
add
add
flds
adc
outsb
lret
stos
pop
test
mov
popf
sti
sub
inc
mov
int3
inc
cmp
test
cmpsl
jno
and
icebp
fstl
addr16
dec
pusha
jmp
mov
cli
sub
fstl
and
fstp
mov
dec
pop
outsb
call
ljmp
subb
add
test
add
icebp
push
aad
cs
loop
ret
push
leave
int
inc
sbb
rcrb
popa
inc
cmpsl
fimuls
or
xchg
lret
mov
fistpll
mov
insb
loope
int3
iret
in
pop
inc
xor
icebp
or
loop
inc
and
or
inc
stos
lcall
lods
fsubl
jmp
mov
je
adc
repnz
pop
enter
cltd
mov
clc
mov
add
mov
mov
loopne
mov
add
movsb
int3
and
aad
ja
sbb
xchg
mov
filds
dec
xchg
pop
xchg
popa
mov
add
add
add
rolb
xchg
mov
lods
outsl
xchg
rolb
mov
mov
ret
inc
sbb
mov
mov
stos
and
mov
movb
daa
rcr
or
outsl
addl
cli
fwait
push
test
iret
cltd
adc
scas
push
pop
std
and
mov
aam
ret
mov
sahf
test
movsb
mov
mov
cmp
aad
out
sarl
lret
scas
in
push
rcrl
repz
xor
push
add
push
mov
cltd
insl
xor
ss
outsb
dec
fsts
push
pop
xor
fmuls
cmp
cld
adc
add
or
jae
outsb
aas
sub
adc
ja
and
out
xchg
sarl
sbb
jns
add
shrb
mov
dec
add
lods
jge
fsubrp
mov
xor
cwtl
jb
sti
mov
call
mov
xlat
fstl
rorl
std
sub
or
pop
and
lods
sub
andl
loope
mov
rcrl
ret
adc
sbb
and
sbb
pop
loope
lea
sahf
daa
mov
dec
fwait
out
adc
push
inc
push
pop
incl
jg
jmp
mov
pop
mov
loope
or
push
faddl
lods
push
pop
ret
inc
mov
lods
dec
and
rorb
mov
or
lcall
outsb
dec
push
test
jno
and
bound
popf
pop
or
ds
stc
in
pusha
mov
mov
aaa
pop
adc
cwtl
adc
and
xor
les
xchg
arpl
inc
or
popa
jnp
adc
mov
lcall
inc
jne
or
dec
mov
sub
sub
xor
ss
add
sti
add
add
fst
jns
mov
mov
mov
or
push
out
add
jo
jle
out
push
and
sbb
push
nop
nopl
mov
bound
test
push
jbe
or
pop
sub
xchg
and
stc
sbb
xchg
je
leave
jnp
jle
push
push
test
ja
xor
cmp
mov
fistps
data16
xchg
add
insl
aam
loopne
dec
adcl
sub
sbb
in
mov
sub
or
pusha
add
jae
xchg
xlat
les
or
jmp
adc
cmp
test
insb
xchg
mov
dec
jl
mov
lods
add
mov
out
add
mov
sbb
cmp
mov
dec
mov
rorb
adc
push
mov
sarl
cmovnp
mov
xchg
mov
out
popa
mul
test
test
into
mov
dec
repz
dec
jecxz
sub
in
push
push
fiadds
pop
movsl
fs
ds
sub
add
mov
das
push
push
push
jecxz
add
inc
xchg
imul
sbb
push
push
push
xor
stos
inc
roll
or
mov
xor
xor
test
mov
xor
bound
sbb
mov
call
das
mov
imul
xchg
xor
xor
jb
sub
lcall
mov
add
mov
out
lea
push
aam
mov
movsb
xor
jmp
stos
jo
popa
ss
outsb
inc
stos
cmp
fwait
dec
ljmp
jg
ficomps
fildl
lret
mov
shll
ret
pusha
aam
add
incl
ret
and
dec
repz
fldt
icebp
add
push
sti
add
add
pop
mov
addr16
pop
mov
gs
push
rorb
movsb
xor
lock
sti
push
mov
xor
fisttps
addr16
movsb
pop
dec
and
mov
and
loopne
ja
jb
movsb
push
insb
je
outsb
sbb
jnp
out
ret
push
fcomps
imul
xor
xchg
push
and
enter
adc
shlb
in
fstps
sub
cwtl
adc
test
dec
pop
push
fnstcw
std
ficomps
gs
push
push
shlb
aaa
fimuls
je
jne
push
pusha
dec
loopne
inc
outsb
in
subb
fildll
lods
jp
pushf
jmp
add
add
hlt
movsl
mov
loopne
jno
test
cld
jno
jl
repz
imul
pop
dec
ret
dec
pusha
sub
jae
pop
cmp
lds
mov
mov
rcrl
adcb
add
in
xor
mov
test
jo
iret
decb
sub
xor
adc
inc
and
or
and
xchg
pushf
fstpt
dec
pop
jne
clc
pop
pop
adc
les
ret
ja
push
mov
pop
fiadds
xor
push
ficoml
push
lods
fimull
cmpsb
lock
aam
mov
les
out
mov
fs
mov
pop
adc
rcl
bnd
sti
sar
pop
pop
push
mov
cld
movsl
xor
stos
lcall
adc
mov
ret
cmp
dec
fwait
adc
sbb
hlt
cmpsb
fldt
aad
pop
sbb
jno
and
inc
inc
inc
test
rorl
mov
data16
stos
ret
add
lcall
roll
test
subb
add
add
add
sub
dec
push
cmpsl
and
pop
stos
mov
cmp
xchg
jle
sbb
xchg
mov
lahf
and
mov
loop
scas
mov
or
or
rcl
sub
inc
out
cld
xchg
or
xchg
cwtl
xchg
ss
dec
lock
mov
fisttps
fsubrs
push
push
xchg
rcrl
jmp
jno
lock
stc
lahf
jae
add
adcb
xchg
sahf
jp
lds
cmp
push
adc
pop
push
xor
andb
dec
push
jno
ljmp
fldt
and
xchg
mov
sbb
mov
dec
xor
mov
gs
add
inc
nop
iret
mov
bound
lahf
sbb
push
jo
lret
mov
movsb
divb
mov
mov
jge
lahf
mov
pop
xchg
xchg
adc
xor
iret
pop
decb
ljmp
lret
movsl
or
add
stos
out
in
inc
and
adc
sub
outsb
and
data16
sbb
test
or
imul
mov
lcall
dec
mov
push
push
leave
jle
jbe
test
subl
dec
lcall
jo
js
loop
sbb
sbb
pop
mov
pop
sbb
inc
and
mov
das
jb
fcos
loope
cwtl
pop
cmp
mov
subl
push
arpl
pop
mov
lret
fldenv
mov
sbb
push
lds
hlt
ja
mov
jl
out
es
push
dec
jle
mov
addr16
adc
popf
lods
js
stc
aas
insb
or
fucomi
sub
rolb
dec
idivl
jg
push
dec
add
faddl
add
add
add
or
ljmp
repnz
push
jbe
fcoml
and
test
cltd
or
dec
gs
and
jecxz
push
push
cmp
dec
xchg
aas
xchg
xchg
pop
cmp
mov
cmpsb
nop
mov
lock
je
sahf
std
std
adc
shlb
fisubrl
push
stos
pop
pop
push
cltd
fnstenv
cmpsl
xchg
adc
fisubrl
js
js
fsubs
fiadds
mov
loopew
inc
jbe
outsb
dec
sbb
add
push
dec
push
mov
das
outsb
mov
adc
inc
cmp
pop
jge
push
inc
jns
dec
mov
or
or
jbe
pop
icebp
adc
popl
shlb
into
sahf
aaa
and
fmull
cmp
pop
xor
mov
pop
pop
insb
cld
repz
cmp
rcrl
hlt
fimuls
and
mov
sub
pop
ljmp
or
sub
call
inc
sub
int3
and
and
fdivl
and
cli
sbb
sbb
lods
push
std
mov
push
leave
sbb
and
mov
das
jo
jl
sub
dec
mov
adc
jp
out
pop
push
mov
outsl
jecxz
push
idivb
xlat
push
xorb
fisubl
std
xor
mov
mov
aaa
cmp
lea
jle
sub
jbe
push
or
pushl
js
bound
repnz
aaa
mov
fisttpll
mov
mov
test
or
lods
dec
outsl
popf
add
mov
ljmp
sbb
inc
bound
adc
push
clc
add
add
mov
call
mov
ret
leave
dec
add
sti
add
add
out
mov
sub
cmpsl
negl
clc
xchg
insb
popa
mov
ret
inc
stos
dec
or
les
sbb
jb
sbb
pop
and
pushl
add
into
adc
mov
and
repnz
lret
cmpsb
sub
sub
imul
int3
ffree
jl
adc
jge
fwait
lret
out
inc
lea
jae
xor
or
in
test
jnp
les
add
sbb
fs
mov
push
fsub
ljmp
inc
ss
movsl
adc
rorl
xorl
mov
out
pop
andl
xchg
gs
mov
mov
lcall
dec
pop
xchg
xor
xor
dec
push
int
mov
jne
int
das
dec
lods
push
and
and
mov
cmpl
jge
dec
aas
cmc
andb
sub
sub
lret
rcll
negl
test
push
mov
cmp
adc
fwait
scas
and
push
push
aam
sub
pop
mov
scas
push
mov
mov
jae
lock
imulb
test
dec
std
daa
xor
xchg
ret
ret
hlt
mov
addr16
out
dec
jl
std
push
mov
inc
mov
adc
xchg
xor
sub
sub
mov
insl
lock
scas
jle
scas
pop
jbe
adc
sbb
jns
ja
dec
mov
lods
sub
mov
sbb
testb
int
add
sub
mov
mov
xchg
add
addr16
aaa
add
cmp
jmp
cmp
xchg
insl
xchg
fucom
js
add
add
ficompl
mov
jns
loopne
add
add
add
orb
sbbb
mov
movsl
fisubrl
cltd
or
popl
and
or
dec
push
cltd
ljmp
ret
les
int
mov
test
cmp
sbb
or
mov
enter
jge
push
cmp
mov
je
inc
mov
sahf
addr16
push
mov
cmp
lds
push
jp
imull
and
xor
sbb
call
mov
daa
stos
out
into
js
aaa
lock
inc
aam
xchg
int3
lret
inc
sbb
xchg
mov
lea
roll
pop
fimuls
and
movb
inc
sbb
jb
into
cmpb
xchg
in
and
xchg
into
mov
xor
call
pusha
and
mov
or
stos
inc
adc
dec
aas
insb
sub
cmp
lods
xorw
imul
add
xchg
sbb
sti
stos
jo
mov
inc
xor
push
push
mov
push
icebp
add
mov
addr16
decl
jecxz
nop
mov
decb
scas
adc
frstor
fistpl
les
ja
das
adcb
cmp
cmp
sbb
nop
cmpsb
movsl
ds
dec
xor
je
dec
aaa
aam
xchg
adc
cld
call
call
adc
sbb
pop
test
xor
outsl
incl
jae
js
or
xchg
in
mov
fisubrs
pop
fs
jg
pushf
mov
add
inc
push
cmp
pop
loop
jecxz
mov
jo
mov
cmpsb
and
adc
hlt
cwtl
cmpsl
mov
push
ret
dec
add
and
in
testl
mov
mov
mov
jns
or
mov
xchg
inc
push
inc
and
popa
pop
add
pop
sbb
cli
inc
cli
mov
lds
mov
sti
add
add
push
lods
scas
fs
stos
fsubs
xchg
lods
mov
jecxz
das
adc
stc
pop
mov
sub
jl
daa
push
rorl
imul
adc
mov
or
push
add
int
pushf
mov
lret
into
es
sahf
xor
cmp
fmul
xchg
mov
mov
xchg
arpl
out
cli
pop
pop
mov
pop
hlt
out
repz
lea
mov
pop
or
push
out
push
cmp
pop
push
push
pop
mov
push
hlt
mov
lods
adc
pop
test
test
cmp
xor
mov
aam
sbb
cmp
movsb
rclb
mov
repz
or
inc
jae
aaa
ret
jbe
add
mov
shl
imul
pop
test
mov
arpl
cmp
bound
mov
aaa
pop
add
test
jb
iret
dec
test
mov
pop
cmp
cmp
adc
fidivrl
pop
and
lahf
cmp
clc
mov
cmp
mov
cmp
popa
mov
dec
fucomp
out
data16
fbld
cmp
fildll
adc
out
cmp
fwait
jne
ds
cmp
mov
dec
push
mov
les
lret
mov
mov
loop
xor
or
mov
push
sub
stos
stos
cmpsb
and
and
movsb
push
incl
je
adc
repz
xchg
sub
stos
mov
sbb
xor
jne
sbb
sbb
add
adc
sbb
and
xor
dec
adc
jne
clc
jge
mov
fs
or
push
and
jle
add
ja
out
push
lahf
xor
adcb
add
sti
add
add
cmp
repnz
das
je
call
cmpsb
mov
mov
rorl
xchg
adc
bnd
dec
sub
dec
iret
pop
mov
outsl
mul
repz
pop
add
dec
leave
push
or
daa
call
ds
cmp
rorl
mov
xor
cld
popf
sub
sbb
jle
out
add
xor
jecxz
inc
ret
pushf
scas
jnp
cmc
inc
adcl
inc
iret
cs
lcall
xor
adc
clc
iret
into
inc
jge
push
scas
sub
lret
iret
data16
movsb
int
lahf
jecxz
fsts
clc
gs
xor
pop
mov
imul
jmp
xchg
adc
jmp
ja
int
imul
pushf
inc
pop
cmp
cmp
cmc
mov
sahf
in
cltd
sbb
ret
fwait
inc
fisubrs
pop
mov
cmp
rolb
pop
ljmp
sahf
mov
mov
les
inc
movl
mov
cmp
xchg
rcrl
addr16
es
fldl
xor
clc
sahf
les
fcmove
outsl
inc
adcb
inc
jbe
dec
popa
push
jmp
push
clc
push
ss
and
les
rorl
dec
je
ret
add
pop
push
xor
iret
fbstp
andb
push
sub
adc
outsb
and
mov
and
jno
popa
xchg
mov
push
lock
ljmp
stc
gs
mov
movsb
push
sub
ja
into
subl
xchg
jg
pusha
int
loope
xchg
ljmp
inc
or
mov
icebp
adc
mov
aad
or
pusha
jmp
lret
fstp
push
aad
ret
in
adc
dec
jmp
incl
stos
xchg
pop
fmuls
add
rcll
jmp
jle
in
out
add
add
add
gs
dec
cmp
xchg
imul
call
movsl
mov
jae
call
lods
push
lcall
adc
and
lcall
pop
add
ret
mov
or
and
out
jbe
pusha
repz
pop
xor
in
sbb
sahf
fwait
jp
cmp
ret
and
sub
jmp
test
les
stos
insl
mov
adc
fstpt
mov
push
and
jge
inc
int3
es
nop
dec
je
hlt
xchg
roll
in
xchg
dec
xor
cmpsb
aad
dec
out
cld
sub
xor
push
je
and
pop
scas
mov
iret
shll
add
insl
and
test
inc
add
insl
inc
cli
mul
mov
inc
inc
sub
cmp
sbb
cmpl
aad
dec
xchg
xchg
das
clc
adc
and
lods
outsb
imul
cmpsb
gs
pop
imul
in
loop
out
mov
mov
stos
inc
jmp
imul
movsb
stc
pop
pop
add
les
in
sbb
test
arpl
outsb
xchg
je
inc
insl
jae
addr16
mov
aad
lahf
popa
or
or
fyl2xp1
daa
shll
or
rep
adc
shl
lds
in
addr16
dec
jge
scas
adc
cmp
pushf
mov
push
mov
mov
and
mov
xor
lcall
stos
jecxz
xchg
iret
shlb
pop
leave
push
aas
jge
and
cmp
scas
xor
mov
bsf
push
popl
cmp
fcmovne
and
ljmp
add
imul
fildll
icebp
mov
iret
negb
mov
mov
call
sti
add
add
loope
leave
int3
loop
lods
rorl
ljmp
and
or
mov
in
xor
lods
sub
or
orl
sbb
xchg
sbb
or
sbb
xor
xchg
xor
jnp
repz
xor
mov
loop
jnp
add
dec
push
sub
fidivl
dec
sbb
add
leave
faddl
adc
push
push
and
popl
and
outsl
andl
loop
out
daa
clc
scas
add
lcall
fstps
cld
sbb
popf
mov
sub
pop
mov
shrb
aam
inc
fdivrs
out
aaa
push
mov
inc
jns
sti
les
sub
ljmp
sti
mov
jmp
testl
addb
into
out
rcll
and
xlat
pop
lods
push
js
mull
nop
add
into
cmp
dec
add
mov
or
mov
loop
push
mov
xchg
jns
enter
pop
and
adc
jns
fdivl
mov
adc
and
pusha
out
scas
jp
add
push
dec
lods
imul
xor
xchg
push
cltd
fnsave
je
sti
ret
insl
popf
mov
dec
xchg
adc
pop
dec
pop
aas
adc
fwait
sub
shrb
imul
scas
adcl
out
in
gs
pop
pushf
jnp
cs
in
dec
xchg
add
or
jnp
imul
mov
enter
inc
gs
or
or
out
push
cmpsl
stc
loopne
push
adc
pop
dec
jl
mov
call
pop
cs
xor
add
enter
mov
mov
dec
test
and
lahf
push
adc
addr16
lds
jbe
add
sub
ja
jno
dec
jecxz
add
add
add
sti
add
add
call
sbb
in
and
push
or
jo
mov
jecxz
cmp
sub
adc
adc
pop
mov
stos
add
in
lods
inc
fidivl
adc
sbb
cmpsb
lahf
pop
sub
call
roll
push
sbb
mov
push
xchg
xor
popa
loope
mov
gs
movsb
sbb
and
loopne
sbb
lea
out
cmp
out
into
pop
imul
orb
rcll
add
cmp
clc
out
push
aad
cmpsb
adc
xorl
dec
jp
push
xchg
dec
push
dec
adc
jb
mov
sbb
imul
mov
push
lods
jp
or
mov
cli
arpl
test
psllw
or
aaa
stos
sub
rorb
in
push
mov
cwtl
cli
loopne
imul
and
cmp
in
sahf
pop
xchg
cmpsb
add
enter
sbb
loopne
aaa
pop
fidivl
mov
int
push
pop
cld
stc
insl
rep
sahf
cmp
cmp
js
mov
adc
jbe
out
repz
inc
push
and
rorb
add
pop
cmpsl
push
mulb
or
stos
fwait
jle
repz
mov
adc
pusha
fldz
shl
add
pop
clc
push
out
lahf
lods
mov
lret
mov
cmpsb
bound
loop
insb
jle
add
rcll
sub
sahf
xchg
stos
in
pusha
shll
push
out
test
dec
divl
push
inc
ret
rcrl
jge
rorl
dec
push
jge
push
ficomps
ffreep
jmp
loop
outsl
add
mov
stc
popf
mov
jmp
add
add
add
movsl
sbb
aad
fsts
daa
mov
lahf
jl
movsl
mov
fnsave
arpl
mov
jbe
jle
jno
mov
inc
mov
outsl
js
push
ds
cmp
movsl
sub
shll
sarl
push
cwtl
jnp
jns
or
lea
cmp
adc
roll
cmp
sarb
aam
fisubl
dec
xchg
bound
pop
fwait
sbb
inc
ror
ds
cmpsl
xchg
and
popa
adc
test
pusha
cmpsb
xchg
sbb
inc
ret
add
sub
test
adc
sub
cmpsb
fcompl
xchg
inc
inc
sbb
lods
repnz
insb
in
cmp
xor
std
rcl
cmp
mov
add
mov
ss
or
jle
popa
push
jbe
nop
scas
fdivrl
loope
enter
pop
dec
pop
jne
push
addb
aaa
sbb
cmp
cmp
stc
int
mov
xchg
pop
xlat
mov
lcall
hlt
cmp
xchg
int
fisubrs
add
test
pop
cld
cmp
xchg
fwait
add
jge
sahf
push
sub
inc
adc
loope
cmp
jno
xor
mov
ds
add
dec
jnp
xor
test
xchg
loope
pushf
fwait
nop
xchg
out
test
xor
sub
cmpsl
mov
sbb
push
out
push
lods
orl
les
add
shll
mov
push
iret
mov
inc
dec
int
adcl
scas
mov
mov
outsb
cwtl
cs
jnp
inc
movsb
lods
pop
repnz
outsb
xor
mov
orb
lret
or
push
int
add
sbb
jge
and
dec
jns
mov
add
add
add
sbb
pop
dec
adc
inc
scas
cld
sub
or
scas
arpl
cli
inc
jp
call
jl
ret
pop
cmpsl
cltd
jnp
jmp
mov
in
jl
outsb
lret
or
imul
test
in
rcr
movsb
and
lods
mov
push
inc
cmpb
cmpb
pop
pop
cmp
je
push
jge
push
or
or
lahf
faddl
fwait
jae
icebp
rcrb
pop
inc
adc
aas
mov
fisubrl
addr16
mov
stos
mov
setle
dec
fcomi
inc
pop
adc
cmpsl
clc
add
test
loop
in
push
in
jle
jbe
xor
jl
ret
mov
add
roll
fistl
mov
pop
push
mov
add
lahf
sub
lahf
add
out
cwtl
and
std
inc
insl
out
and
mov
stos
fcmovne
mov
mov
ficoms
loopne
movsl
call
dec
sti
inc
sti
inc
ds
xor
mov
data16
dec
rcll
cvtpi2ps
out
jb
pop
test
jbe
xor
outsb
add
sub
dec
mov
in
loop
sarb
rclb
ret
cmp
icebp
repnz
pop
xlat
xor
test
dec
lods
sub
and
std
adc
add
xor
adc
dec
inc
inc
or
loopne
int
leave
xchg
bound
sti
adc
cwtl
dec
mov
stc
mov
je
mov
mov
inc
sub
subb
fs
push
mov
cmpsb
mov
in
or
les
in
pop
mov
ret
sub
sub
mov
cmp
add
pop
into
mov
fs
pop
add
inc
fcmovnb
fstpl
arpl
test
cmc
out
add
sti
add
add
jo
or
in
aam
in
mov
pop
ret
sti
lds
xor
mov
xchg
fcomps
hlt
or
xchg
mov
adc
aaa
jo
dec
inc
fidivrs
push
dec
mov
pop
cmp
xor
add
mov
adc
andl
cmpsb
xor
sbb
data16
fwait
adc
icebp
sbb
int
outsb
jae
jp
cwtl
sahf
mov
jo
ja
fisubs
fnstenv
syscall
pop
and
clc
jge
sbb
xlat
push
xchg
inc
pop
add
bound
aam
js
cli
movsb
xabort
ljmp
jo
in
rclb
hlt
data16
xchg
pusha
jne
std
sub
add
outsl
movsl
or
enter
xchg
mov
rorb
pop
lock
cltd
jl
pusha
push
xor
daa
test
inc
stc
adcb
jl
movsl
add
push
mov
cmpsb
prefetch
or
pop
pop
sub
and
cld
xor
jecxz
sbb
out
jo
jb
mov
in
pop
shlb
aam
mov
aad
jno
xchg
mov
jle
jno
aas
sbb
inc
ss
rcr
notb
das
jns
fmuls
xchg
xchg
mov
xor
dec
ret
loop
aaa
mov
loopne
add
cmp
lahf
adc
adcb
jnp
rcll
mov
lret
add
jmp
int
cltd
int
mov
inc
in
push
stc
clc
jne
imul
lcall
ja
add
lods
push
dec
imul
xchg
test
add
daa
pushf
cli
mov
xchg
out
cltd
push
xor
lock
add
sti
add
add
sbb
stos
xchg
and
shlb
mov
mov
add
add
fsubrl
sub
dec
mov
pushf
rcll
xorb
jg
outsl
in
mov
bound
or
xchg
mov
jg
xchg
enter
cwtl
aaa
mov
mov
subb
cld
mov
push
jecxz
fs
dec
pop
rclb
pop
mov
cmc
jg
test
inc
mov
xchg
ljmp
ret
inc
dec
outsl
stos
inc
in
fsubr
mov
mov
lahf
out
lret
mov
fstps
dec
inc
jl
or
pop
xchg
out
sbb
imul
dec
cmpsb
jmp
push
mov
and
addr16
out
xor
clc
mov
xchg
outsb
loop
mov
and
int
imul
xchg
fisubrl
mov
sar
arpl
jne
push
test
lahf
popf
jbe
or
in
nop
xchg
and
cmp
dec
mov
les
cmp
push
lods
and
scas
pop
mov
pop
fstl
mov
add
lret
jbe
mov
and
sbb
in
loope
test
movsl
mulb
in
push
sub
xchg
not
push
icebp
sbb
sbb
loope
dec
stc
dec
inc
lret
lea
mov
ret
jp
jg
adc
dec
cmp
push
xchg
dec
inc
pop
and
cmp
and
jmp
inc
cmp
int
inc
scas
arpl
insl
cmp
add
out
or
push
mov
xchg
mov
xchg
into
pop
sbb
dec
in
subl
je
cmpsb
nop
fcomp
ficomps
mov
jno
jge
pop
mov
and
adc
mov
roll
lcall
leavew
and
mov
daa
jmp
add
sti
add
add
rolb
pushf
lea
jb
dec
cmp
ret
cmp
lea
or
dec
add
sub
cwtl
sub
scas
ja
test
mov
mov
ss
out
jecxz
pop
or
pushf
xor
ljmp
mov
ljmp
into
mov
sub
flds
add
repz
fdivs
lds
mov
lea
into
std
or
mov
xchg
vpsrlw
xchg
add
pop
rcrl
xor
outsl
push
loope
pop
inc
push
scas
or
rol
push
push
push
ss
push
int
add
cmp
int
ds
jmp
pop
xchg
dec
subb
ja
js
movsb
inc
push
mov
cmc
jge
enter
inc
or
hlt
dec
fcmovbe
imul
push
cli
cli
popa
push
in
mov
push
sbb
jnp
jmp
adc
fnstenv
fxch
and
push
sbb
movsl
rolb
pop
xor
mov
adc
das
cmp
xor
lods
sbb
sbb
and
in
inc
mov
pop
lret
mov
jle
pop
cmp
cmpb
jl
and
decl
xchg
jl
dec
lods
push
xchg
repz
dec
iret
test
jnp
ret
xor
inc
mov
pop
or
loopne
mov
xchg
cmp
sbb
push
or
xor
jnp
dec
xlat
pushf
sbb
insb
lea
jmp
enter
mov
andb
out
lds
pushf
adc
lds
sub
adc
bound
sbb
pop
ficompl
jns
ret
test
sub
lcall
cltd
enter
mov
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
les
aas
out
add
sti
add
add
in
sbb
pop
push
lock
fs
cwtl
cmpb
enter
jle
clc
fsub
add
fdivl
sbb
mov
into
jae
dec
pushf
arpl
mov
mulb
test
dec
push
add
cmpsb
cld
inc
test
push
bound
insb
imul
data16
and
sub
pop
enter
xchg
jbe
addb
and
dec
sahf
mov
mov
rolb
inc
cli
loop
sub
in
mov
in
les
push
jbe
dec
mov
push
bound
or
movsl
fists
hlt
sbb
mov
mov
or
dec
pop
sub
ret
daa
add
fldl2t
sbb
sti
fidivl
push
jle
xchg
mov
push
loopne
test
push
push
lock
pop
rcl
mov
ror
xchg
sub
push
push
cmp
inc
add
repz
loop
ficoms
adc
xchg
xor
scas
mov
xor
je
push
or
and
dec
cmp
xchg
cmpsb
adc
in
divl
in
pop
adc
push
xchg
js
dec
lret
mov
dec
mov
or
int
movsb
ret
xchg
pop
test
sarl
and
jo
push
mov
jne
in
mov
filds
mov
outsl
push
mov
aaa
push
loop
pop
shrl
lock
rcrl
push
sub
aad
and
push
fcomip
in
dec
jnp
filds
or
push
insl
pushf
sbb
jns
popa
ljmp
or
xor
adc
call
shll
sbb
sub
mov
jns
cltd
dec
sbb
sbb
jnp
movsl
push
imul
jmp
dec
pop
mov
pop
ja
aas
push
sub
std
in
jecxz
std
cmp
stc
jl
stc
jne
xor
add
sti
add
add
bound
test
iret
ficompl
fistps
fildll
test
xchg
ja
add
pop
push
xor
neg
popf
dec
xlat
mov
push
leave
jle
mov
outsb
cltd
notl
dec
push
sahf
xor
shrb
and
jnp
dec
dec
and
das
into
shll
test
lds
sahf
stos
xor
xchg
pop
mov
jl
cltd
out
sbb
add
push
push
mov
je
mov
inc
test
std
imul
dec
jl
push
nop
outsl
jns
xor
flds
jb
dec
mov
addr16
mov
imul
test
movsb
inc
dec
dec
mov
lods
mov
mov
add
push
stc
dec
inc
insl
leave
pop
jno
fstpt
jno
imul
xchg
dec
and
and
xchg
xchg
jge
sarb
mov
lret
mov
insb
lsl
pop
push
mov
lock
aad
lods
mov
xchg
bsf
cwtl
or
imul
mov
cmc
movsb
or
nop
sub
add
or
add
pop
inc
stc
jae
popf
pop
and
rcrl
repnz
icebp
xlat
dec
dec
push
mov
jb
sbb
add
pop
mov
in
lock
jmp
pop
adc
pop
cmp
aas
shrl
loop
and
data16
inc
mov
jge
int3
in
mov
dec
aas
pop
push
pop
flds
cmc
dec
stos
mull
jb
xchg
hlt
fimuls
add
sbb
cmp
inc
jp
sbb
lods
stos
push
or
push
lcall
jle
inc
fistpl
adc
xor
push
inc
push
jns
cmp
lods
xlat
mov
lret
or
lods
push
mov
inc
inc
or
adc
add
cmp
test
fdivr
add
sldt
add
rorl
xor
or
