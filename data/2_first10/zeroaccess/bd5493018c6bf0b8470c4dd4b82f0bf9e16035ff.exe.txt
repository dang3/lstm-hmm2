mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
jp
sbb
nopl
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
push
shl
inc
fdivs
aad
into
mov
mov
add
cmpsl
push
or
sbb
inc
lods
push
push
dec
sbb
xchg
pop
pop
cwtl
lahf
shrl
dec
lahf
mov
push
nop
cld
lods
xlat
mov
lds
mov
clc
mov
call
mov
shr
testb
sti
lcall
sahf
add
xchg
or
pushf
sbb
dec
inc
daa
inc
add
jns
mov
sbb
mov
fidivl
stc
jg
pop
es
in
push
cli
sbb
enter
sub
daa
add
push
rcrl
cs
cmc
sbb
push
cmp
and
movsb
loope
sub
add
sti
jle
add
in
inc
arpl
rorb
pop
loope
imul
cmp
aaa
lods
add
push
arpl
mov
fimuls
imul
xchg
dec
jno
arpl
out
push
dec
add
lds
cli
mov
xchg
lret
jo
ret
sahf
ret
push
sbb
jl
mov
adc
or
sub
sbb
cmp
push
aad
sub
repnz
fsubs
sbb
dec
stos
adc
fs
cmp
push
inc
movsl
loop
pop
cmp
daa
shrb
dec
or
push
fs
or
xlat
fistpl
out
leave
cli
mov
mov
ja
aad
test
pushf
or
pop
pop
movsb
mov
sbb
jbe
xchg
adc
adc
sbb
test
rcl
int3
xor
insb
ficoms
sbb
daa
mov
cmp
xor
mov
sbb
popf
jbe
cmp
xchg
in
das
ret
mov
jge
add
les
adc
mov
add
sub
movsl
scas
test
pop
mov
jmp
xor
rorb
sub
mulb
ds
sbb
lds
bound
and
push
push
sti
and
cmc
jne
xchg
cmp
and
fisubs
cmp
les
in
jge
lea
xchg
cmp
shrl
jns
fadds
arpl
pop
cmp
add
stos
pop
call
dec
jno
jno
ret
mov
repz
leave
sbb
cmp
xor
pop
das
xchg
pop
cli
aam
aas
imul
push
sbb
xchg
cmpsb
inc
inc
dec
ja
mov
dec
mov
je
mov
mov
iret
push
imulb
and
xor
or
js
ds
pop
or
sub
sub
adc
inc
jge
int3
clc
inc
movsl
fsts
and
daa
mov
jge
shlb
add
cmp
push
aas
pop
cmpsl
mov
push
mov
stc
xchg
adc
fsts
push
stos
int3
popa
dec
outsl
cmpsb
lods
or
sub
push
jecxz
xchg
mov
jge
rcr
arpl
cmp
insl
test
or
mov
insb
sti
fcmovnbe
cmpsl
inc
sub
add
je
mov
clc
sbb
push
xlat
jge
mov
rcll
pushl
add
pop
push
test
shlb
gs
and
bound
mov
out
xor
inc
push
push
es
sbb
pop
ret
and
cmpsl
inc
pop
cmp
sbb
pop
enter
stos
mov
lcall
mov
adc
and
rclb
shll
add
pop
mov
jmp
jb
test
sti
mov
in
popf
loopne
push
pop
das
xor
imul
xor
gs
inc
mov
xor
push
outsb
movsb
mov
lds
mov
adc
mov
cmp
movsb
je
or
inc
pop
cltd
pop
adc
xchg
jns
inc
adc
rolb
add
mov
adc
sub
lfs
and
aas
sbb
lods
push
mov
je
test
xor
loop
jg
stos
jl
adc
add
pop
mov
add
fdiv
adc
mov
mov
mov
fwait
loop
sbb
jns
and
dec
shrl
or
outsb
fs
or
jge
xchg
hlt
into
cmpsl
lret
adc
rcrb
xor
sbb
jmp
bound
xchg
mov
adc
sbb
mov
das
scas
jo
mov
shr
pop
es
xchg
mov
jo
fistl
test
pop
sbb
dec
mov
int3
mov
ret
cmpb
and
inc
lods
aad
or
mov
popa
push
addr16
stc
ret
test
inc
jg
lods
sbb
xor
les
jno
mov
idivl
mov
rcrb
xchg
jle
pop
mov
push
mov
int
fxch
stos
mov
dec
or
subb
jmp
cmpb
mov
mov
out
lahf
fldcw
jmp
cmp
gs
sbb
pop
icebp
push
ret
inc
and
mov
mov
in
sbb
flds
pop
shll
insl
sub
xchg
js
ret
jae
dec
jl
mov
inc
rcrb
sbb
push
adc
aam
repz
sub
fisttps
mov
sub
xor
xchg
lcall
jl
repnz
ljmp
jo
jb
fildll
das
int
mov
ss
pop
lret
roll
rep
mov
push
popa
pop
pop
mov
push
popf
adcb
fxch
dec
cmpsb
shll
xor
mov
imulb
das
mov
sbb
and
mov
mov
push
xchg
xchg
sar
dec
rclb
push
subl
lds
mov
push
movsl
in
jae
dec
or
aaa
dec
push
dec
dec
mov
inc
push
stos
fildll
adc
push
jno
cmp
loop
adc
gs
sarb
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pfrcpit2
enter
outsl
icebp
xchg
into
dec
shr
push
mov
iret
je
addb
jle
push
in
loop
aaa
mov
push
das
fmull
pop
push
jecxz
jle
and
repz
jne
xlat
lods
mov
adc
inc
lret
pop
xor
jnp
pop
pop
arpl
idiv
push
dec
mov
inc
pop
fsts
sbbb
sub
or
dec
out
insb
adc
js
push
sub
scas
stos
lcall
mov
dec
sbb
xchg
jbe
sub
push
push
cs
aaa
jg
inc
adc
filds
shr
fwait
int
xor
mov
xchg
cli
adc
fmull
gs
dec
adc
neg
xor
imul
mov
adc
and
std
leave
mov
mov
test
outsb
mov
mov
fs
push
lret
push
push
mulb
xor
addb
ret
dec
in
rolb
out
out
es
cmpsl
dec
push
sbb
cmp
cmp
jmp
push
xor
daa
jnp
and
and
dec
dec
jg
lret
jmp
add
aaa
xchg
pop
mov
sbb
or
mov
sub
fwait
stos
arpl
mov
add
mov
int
mul
jbe
fmull
jae
mov
lahf
jbe
arpl
jns
loopne
sbb
decb
sbb
mov
xchg
imul
repz
inc
outsb
sbb
xor
cld
fdivs
dec
sub
fsubrs
aas
push
xchg
xlat
ss
arpl
pop
xchg
and
jbe
repnz
and
imul
push
mov
shll
loope
and
and
aas
mov
sbb
adc
movsl
jo
pusha
mov
jp
rcrb
push
jnp
xchg
xchg
add
aaa
loope
pop
mov
cmp
xchg
lods
int3
loop
inc
pop
clc
lcall
dec
fbstp
mov
mov
add
xor
ffree
dec
inc
imul
inc
lcall
adc
cmp
cld
inc
mov
push
subl
xor
sbb
and
ljmp
push
pop
fs
repz
mov
out
popa
mov
mov
fsubp
push
jmp
and
adc
mov
clc
out
in
fldl
test
mov
dec
push
inc
pop
and
adc
jle
sub
jnp
popf
push
das
pop
xor
push
pop
ffreep
mov
pop
ds
push
divb
dec
mov
inc
rorl
jp
sub
cld
mov
pusha
mov
pop
ds
jmp
xchg
push
in
ja
or
push
jns
add
out
aas
call
xor
in
int3
stc
mov
data16
cmpsb
add
std
add
iret
xor
fdivl
test
cmpb
dec
bound
lods
lea
movsb
inc
xchg
xchg
fcmovu
ret
mov
out
jne
or
or
push
mov
adc
pop
add
push
pop
hlt
mov
sahf
and
cmpsb
dec
dec
xor
dec
push
xchg
and
les
ret
sub
lods
mov
pop
add
pop
sub
ret
scas
mov
out
rcrb
push
testl
shlb
lods
ret
mov
loopne
add
movsb
jae
lods
mov
scas
adc
cmp
xor
mov
mov
pop
inc
mov
mov
ret
sbb
aad
stc
and
test
cli
xor
cmpsb
setnp
icebp
movsl
movsb
sub
jg
and
push
pop
mov
dec
push
gs
pop
fisubrs
add
sub
jmp
inc
out
movsb
sub
jl
sub
push
ja
ret
adc
pusha
pop
hlt
popa
xrelease
fchs
mov
push
adc
gs
or
repnz
add
fisubl
xor
les
call
es
clc
icebp
mov
jge
arpl
int3
or
nop
lret
mov
jo
xchg
push
out
push
mov
lock
ffree
subl
mov
sarb
outsb
clc
jl
jmp
mov
or
jns
add
fsubrs
sub
leave
xor
push
push
fs
add
dec
lock
adc
dec
pushf
sbb
and
test
shrl
aaa
fisubl
and
mov
sti
ljmp
inc
xlat
nop
jnp
push
sarl
out
adc
scas
add
and
sub
fisubs
mov
lods
sti
dec
jnp
pop
sub
inc
or
push
xchg
sbb
fwait
and
pop
inc
es
aad
fidivl
xchg
jnp
cmp
subl
pop
jne
ret
cmc
rcrb
mov
test
ror
ljmp
pop
mull
add
mov
pushf
push
adc
sbb
ret
mov
fs
xchg
dec
mov
pusha
cmp
mov
aam
shrl
rorb
or
addr16
dec
fimull
fidivl
inc
sbb
add
add
mov
add
jl
mov
loopne
gs
lahf
out
cmp
shlb
pushf
pop
aaa
xor
push
xchg
insl
scas
and
aaa
outsb
addl
out
lds
push
gs
adc
ret
push
pop
inc
out
lods
sbb
push
sub
pop
rcrl
in
orb
sub
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
cmpxchg
push
lds
pop
mov
lcall
mov
std
sub
jecxz
fs
mov
xchg
push
loopne
in
roll
inc
fcomps
in
cltd
xchg
jge,pt
mov
push
fs
ret
jle
xchg
add
aaa
call
push
and
sbbb
jbe
or
lods
pop
xchg
aad
pop
xchg
push
sub
xor
push
and
mov
dec
cmp
popf
push
jb
dec
inc
mov
scas
and
pushf
insb
add
mov
test
outsb
cmpb
xor
sub
loopne
call
icebp
inc
xor
jb
adc
mov
sbb
jnp
sub
pop
jecxz
adc
sub
mov
fldcw
cmpsb
lret
mov
repz
pop
push
push
mov
push
pop
push
push
dec
leave
jge
or
mov
xchg
dec
add
lods
jne
movntps
fistps
arpl
test
mov
sub
cmp
pop
aas
popa
ret
ret
xchg
mov
into
sarl
mov
imul
sbb
cmp
mov
inc
add
shll
bound
push
or
ds
fadd
or
into
scas
loop
push
dec
sarl
iret
jecxz
stc
cmpsb
mov
push
pop
subl
mov
js
jns
cmpsb
cmp
lods
test
adc
loop
dec
lret
int3
mov
outsl
inc
addr16
mov
fwait
push
mov
sbb
int
jp
jnp
or
fists
shlb
and
cwtl
adcl
cmp
sub
mov
icebp
rolb
mov
add
mov
stc
dec
out
adc
clc
stos
clc
popf
and
jae
mov
movsl
xchg
push
mov
movsl
out
aad
mov
nop
cs
rcll
jb
and
in
sub
jg
adc
aad
or
inc
rsqrtps
push
outsl
mov
fwait
jp
movsl
call
out
mov
sub
jp
pop
dec
push
dec
mov
xchg
mov
psrlw
out
bound
lret
mov
in
das
adc
fwait
xlat
dec
cs
jmp
call
pop
imul
xchg
cs
dec
rcll
push
dec
xor
mov
pusha
inc
xchg
mov
das
test
in
out
nop
mov
imul
jb
leave
repnz
fs
jnp
aas
andb
lods
test
addl
iret
lea
inc
mov
push
in
ja
loop
mov
or
out
shlb
scas
dec
pushf
xchg
mov
fs
or
test
sub
in
lea
pop
mov
rcr
adc
sub
ss
mov
sbb
cmp
xchg
xchg
push
inc
push
adc
sbb
mov
or
push
sub
movsb
cmpsb
fadds
jge
les
mov
gs
in
fs
xchg
into
and
mov
paddusw
xchg
push
jle
add
lods
mov
jmp
pop
fs
xor
xchg
push
repz
inc
or
sbb
inc
inc
shlb
jecxz
xchg
cltd
jp
popf
push
cmp
xchg
jbe
cli
adc
xchg
gs
sahf
shl
ja
pop
inc
push
inc
pop
push
cmp
xor
out
add
fadd
sbb
cld
dec
data16
dec
flds
adc
out
and
pop
xchg
repnz
iret
xchg
jmp
in
xchg
lahf
sub
fistpll
push
mov
stos
and
pop
movsb
mov
enter
pop
dec
mov
call
push
leave
or
cmp
into
hlt
out
fwait
or
arpl
fsubrl
insl
inc
mov
cli
and
pop
push
addr16
je
pop
and
or
fiaddl
clc
jge
jp
sbb
fs
in
inc
lcall
popf
xor
iret
scas
ja
shll
inc
nop
push
mov
dec
mov
idiv
xchg
cmp
out
push
fistpll
cmc
add
pop
imul
push
bound
insl
shrb
mov
dec
jp
push
pop
enter
sub
stos
bound
lods
repz
mov
jnp
jne
mov
loopne
dec
lods
sti
movsl
int3
pop
push
ss
add
sub
dec
mov
rcll
or
movsl
pop
nop
xchg
cs
inc
mov
test
stc
movsl
clc
loope
push
push
lods
jo
ret
push
mov
adcl
fwait
cmp
and
loopne
pop
test
adc
dec
cs
ret
lock
sbb
or
loop
sub
xchg
cmp
mov
scas
cmc
xchg
dec
idivb
inc
inc
fdivrs
xor
popa
mov
test
pop
add
into
jmp
lods
insb
and
enter
mov
mov
rorl
fidivl
adc
arpl
movsb
test
cli
xor
out
xor
mov
sbb
repnz
shl
flds
cmpsl
xchg
xor
fiaddl
mov
test
scas
shr
insl
pop
rorl
pop
pop
std
test
cmp
enter
test
repnz
hlt
popf
lcall
fcmovnb
popa
scas
iret
xlat
scas
jge
mov
pop
hlt
leave
mov
xor
rcrb
loope
out
xchg
mov
ja
subb
insl
enter
sbb
out
lea
mov
push
and
mov
and
or
push
cmpsb
movsb
push
dec
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
lods
stos
js
fimuls
pinsrw
push
xor
push
jmp
lea
std
lahf
mov
in
pop
lods
in
shrb
mov
adc
icebp
aas
inc
insl
sbb
lock
clc
std
mov
in
loopne
jg
ds
sbb
jp
imul
cmpsb
rclb
dec
sub
test
jbe
and
and
inc
popa
push
xor
mov
or
dec
lods
js
test
jp
addr16
and
pop
mov
lahf
mov
and
lea
jno
jo
or
mov
jbe
loope
dec
mov
mov
push
rclb
call
cs
xchg
push
aam
jne
and
add
pop
adc
pop
or
ret
in
stos
lods
mov
test
dec
cmp
jnp
sub
push
pop
dec
je
mov
jl
sub
jge
aas
mov
or
test
lret
mov
push
pop
cmpsl
mov
in
ds
imul
dec
cmpsl
repnz
rcr
loopne
cmp
orl
push
xor
scas
pop
inc
addr16
dec
sbb
mov
add
lods
jne
bound
lea
rorb
mov
xorl
cmpb
mov
lds
repnz
adc
or
sub
cmp
mov
loopne
sbb
fwait
icebp
fmul
add
inc
lds
push
dec
add
daa
jecxz
iret
dec
sbb
aam
movsl
jne
cli
jns
mov
cld
adc
mov
imulb
xor
jo
stc
mov
jg
ljmp
cli
or
sbb
cltd
dec
aad
inc
and
call
jno
add
and
iret
lcall
jno
cmp
inc
arpl
idivb
adcl
fcompl
mov
lods
jmp
scas
push
xchg
fistps
lahf
pop
cmp
sarl
cmp
and
cltd
subl
iret
mov
push
sbb
repz
paddsb
lods
std
pop
jnp
inc
push
out
xchg
xor
adc
sbb
clc
or
cmp
rorb
xor
pop
stos
or
mov
in
pop
pop
imul
adc
mul
lret
dec
jecxz
jecxz
adc
fidivrl
das
xchg
into
adc
test
push
adc
adc
push
sub
dec
adc
push
mov
sbb
and
leave
mov
out
dec
js
sbb
fld1
leave
mov
les
in
sub
sbb
ja
fcoml
sub
sub
loopne
sub
fldenv
pop
xor
lds
xchg
dec
add
pop
jmp
or
dec
fs
push
pop
mov
enter
or
loop
mov
stos
push
sub
or
mov
xchg
adc
cwtl
and
lds
dec
subl
pop
mov
mov
scas
pop
movl
popl
out
lahf
mov
xchg
sti
jb,pn
mov
mov
icebp
repz
loope
je
in
call
in
loop
scas
loope
clc
jb
pop
data16
fstl
les
sbb
dec
and
add
sub
lret
and
jo
mov
push
xor
pop
pop
and
into
test
push
cmp
mov
push
lret
stos
stos
sbb
jae
div
arpl
push
lea
js
fdivrl
test
cltd
push
ret
fs
xor
sub
in
lods
mov
sbb
testl
gs
jb
stos
mov
imul
cmpsb
jp
mov
fs
lret
data16
sub
mov
add
dec
pusha
adc
jecxz
stc
lds
lds
add
add
mov
cmp
test
test
and
popf
push
dec
mov
sub
jmp
mov
xchg
push
sbb
pop
inc
insb
fimuls
setnp
leave
mov
fstp
xor
cltd
loop
in
leave
outsb
mov
jbe
fbld
add
mov
out
cmpl
test
adc
fs
push
test
pop
int
push
pop
stos
ss
push
cmpsb
push
mov
int
arpl
movsb
cmp
inc
cmp
pop
es
aaa
jg
mov
outsb
mov
mov
dec
or
push
ds
inc
cs
mov
inc
dec
call
xchg
out
push
mov
pop
in
inc
cltd
lods
std
mov
dec
jl
out
popf
dec
mov
adc
les
jno
mov
shl
pop
daa
into
aas
mov
cmp
int
push
lret
mov
or
cwtl
test
aas
aad
pop
mov
pop
out
divl
mov
push
sbb
sbb
mov
push
add
stos
aaa
adcl
cbtw
jecxz
adc
jne
sti
mov
lcall
mov
push
mov
cld
inc
jo
in
mov
in
cmp
adcl
enter
sbb
add
lcall
sub
jae
lcall
dec
cmp
call
mov
inc
bound
lea
repz
fildl
imul
js
fs
out
les
push
cmpb
out
push
jmp
fldt
mov
popf
insl
cmc
aad
and
popa
out
dec
sub
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
adc
cmp
pinsrw
nop
push
adc
xchg
xlat
mov
jecxz
and
xor
pop
or
int3
add
loop
leave
or
xor
lods
aad
ljmp
xchg
cmpsl
jg
mov
inc
dec
je
pop
fnsave
xor
loop
jno
jmp
dec
jge
loope
cmpsl
adcl
pusha
lds
sub
pop
inc
jns
sbbl
jg
lret
jl
in
subl
xor
push
xchg
xor
inc
std
icebp
sbb
push
ret
mov
fcomps
mov
int3
xlat
adc
scas
xchg
aas
fadd
cmc
ret
adc
pop
lahf
or
mov
dec
lahf
cmpsb
out
and
xchg
in
adc
mov
dec
outsb
rorb
push
mov
sub
pop
xor
pushf
xchg
fsubl
in
push
pop
push
inc
je
push
push
out
jno
mov
push
aas
dec
mov
mov
adc
add
pop
insl
lret
mov
lret
sub
sahf
mov
push
adc
jo
test
dec
lret
in
xor
nop
lods
xor
outsl
mov
add
dec
jb
loope
into
lret
or
sbb
or
jle
xor
sbb
jne
inc
xchg
fwait
mov
adc
and
es
sahf
cli
push
xor
fsub
dec
xchg
addr16
or
mov
sbbl
sub
test
in
or
jbe
fstp
mov
jecxz
sbb
jp
mov
mov
mov
sub
xlat
fistpl
or
nop
sarl
pop
les
into
sbb
dec
adc
adcl
test
insl
dec
repnz
inc
sbb
ficoms
pop
repnz
sahf
daa
pop
pop
mov
ljmp
or
popa
cmp
fldl
dec
std
mov
dec
dec
mov
sbb
pop
push
testl
jns
mov
jecxz
mov
adc
sub
mov
mov
xchg
int3
ss
scas
pushl
jmp
mov
rep
enter
fdivl
cmp
stos
es
inc
jb
or
xchg
in
pop
or
in
mov
pop
ljmp
cli
fstps
xchg
repnz
gs
mov
xchg
xor
fstp
or
inc
jae
or
sahf
pop
mov
sub
repnz
addr16
aam
sbb
xor
jo
xor
fildl
or
push
mov
add
rcrl
pop
sbb
aaa
mov
push
lods
fwait
bound
pop
in
fdivs
cmp
aas
push
stos
mov
ljmp
and
test
push
and
pop
xor
inc
push
mov
sub
fldenv
test
cmp
bound
jecxz
mov
mov
rorb
cmp
adc
hlt
cmp
pop
and
push
gs
xchg
xor
adcb
inc
push
mov
push
lret
mov
inc
sub
je
call
ss
mov
and
jl
sbb
lcall
mov
das
test
sbb
andl
xchg
repnz
push
jmp
out
lret
shl
jbe
inc
inc
sqrtps
jmp
dec
pusha
scas
lock
mov
xor
mov
mov
add
fst
ror
sbb
pushf
mov
out
es
andb
mov
jae
xchg
mov
cltd
sub
xchg
jge
and
pop
addr16
popf
jge
cmpsl
cld
lcall
jp
mov
scas
cmp
pop
dec
lock
in
pop
vmread
negl
hlt
jg
inc
mov
mov
popa
popf
adc
jle
aaa
cs
xchg
dec
jl
fistl
push
xchg
mov
dec
repz
shlb
jp
or
jge
mov
fdivrl
clc
and
jnp
imul
stc
fcompl
sub
mov
lret
pop
sub
decb
nop
add
adc
stc
lds
adc
add
mov
fs
fidivrs
outsb
es
mov
jno
mov
sub
mov
stos
test
fwait
push
sub
int
mov
imul
clc
lret
dec
sub
mov
and
test
testb
shl
mov
jmp
jecxz
jae
out
jae
fsts
mov
push
pop
mov
sbb
cwtl
test
sub
stc
aam
pop
lock
add
lods
mov
cli
xor
lods
loopne
cltd
sbb
sub
sub
shll
sti
rorl
popa
fimuls
sbb
mov
adc
js
or
add
arpl
pop
lods
add
arpl
in
sarb
mov
fisubl
push
scas
sahf
push
pushf
daa
ficoml
movsl
mov
cmp
xor
pop
sub
adc
dec
cs
push
cmp
stos
mov
sbb
jl
not
push
mov
sbb
mov
pop
dec
push
xchg
addr16
mov
cmpsl
xor
mov
and
pop
cld
adc
nop
pop
popa
ret
mov
rep
or
jnp
ja
mov
sbb
add
int3
sti
xchg
stos
popa
and
mov
push
mov
cltd
test
xor
orl
push
xorl
stc
and
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
push
mov
les
maskmovq
pop
lods
fs
movsb
mov
jmp
jmp
out
scas
call
roll
cld
mov
push
sub
mov
out
cmpsb
loop
sub
push
xor
lret
fists
addb
xor
push
pop
push
outsl
xor
push
jge
xor
adc
ficomps
adc
push
mov
adc
xor
adc
repnz
and
inc
jb
cwtl
jo
in
cli
push
insl
bound
ficomps
mov
xchg
mov
xor
mov
stos
ss
iret
push
or
dec
rorb
addr16
pop
mov
popf
std
push
cwtl
jae
stc
pop
mov
jle
lods
jl
fbld
push
pop
xor
orb
ss
addr16
and
jmp
fucom
loop
scas
mov
sarl
out
mov
ljmp
jle
xorb
out
mov
mov
cmp
inc
movsb
int3
lods
dec
fidivrl
shrb
sub
jb
cmp
xchg
dec
mov
push
loopne
aad
clc
popf
mov
push
lret
out
sub
mov
jg
loope
mov
repz
testl
xor
inc
pop
rcrl
shlb
cli
mov
add
jmp
add
push
lret
or
xchg
mov
out
jecxz
mov
aad
pop
xor
push
icebp
dec
aas
sub
jb
scas
mov
inc
mov
imul
mov
into
stc
imul
cs
gs
fidivl
pushf
movb
cmpsb
pop
or
mov
inc
pop
mov
loopne
add
adc
les
dec
mov
or
xorl
lock
test
push
out
testl
repz
leave
jne
stos
cmp
inc
dec
mov
add
lcall
cltd
fdivs
js
ret
jmp
aam
ret
rolb
cmp
pop
mov
stc
fisttpl
adc
cmp
adc
cmp
adc
add
inc
in
xor
adc
icebp
xchg
loop
test
sub
mov
into
nop
push
out
jmp
stos
push
clc
repz
xchg
sbb
add
or
cltd
lods
pushf
mov
fdivr
pop
icebp
lock
adcl
adc
ret
sbb
pusha
pop
insl
fwait
repnz
push
adc
aaa
cmp
mov
test
lock
fs
mov
add
aaa
mov
xchg
xchg
lret
lds
outsb
push
pop
mov
xchg
popa
movsb
xchg
pushf
cs
lcall
mov
in
das
leave
push
sbb
sub
leave
addr16
adc
test
sub
lahf
mov
clc
cltd
inc
inc
mov
or
mov
daa
fmuls
mov
aam
push
xchg
cwtl
stos
mov
sub
cs
jp
cwtl
in
sbb
jle
xchg
sbb
mov
cmc
add
stc
scas
lcall
mov
sbb
dec
ror
xlat
in
sbb
push
or
lret
and
lock
into
xor
imul
and
cmpsl
subl
mov
jnp
dec
jb
loop
fsub
sbb
inc
dec
xor
in
cmc
sbb
sub
xchg
test
cmpsl
data16
cmp
pop
pop
dec
mov
loopne
sub
cld
cli
aaa
lods
adc
and
mov
or
dec
daa
add
xor
xor
or
jge
or
sub
mov
ja
push
in
pop
fnstenv
push
xchg
adc
mov
jno
push
mov
xchg
sbb
mov
jbe
cmpsl
in
out
mov
mov
mov
repz
popf
mov
adc
loopne
cmc
lock
out
mov
sub
add
adc
pop
jnp
xchg
mov
mov
sarb
dec
or
ss
sbb
dec
sub
or
mov
dec
fs
insb
rcll
xchg
int
sarl
mov
xchg
push
xchg
mov
add
les
push
mov
mov
sti
mov
inc
mov
mov
xchg
mov
and
ret
xor
ficomps
inc
leave
mov
push
aas
mov
mov
nop
or
xchg
fcom
dec
fisubrl
ja
popa
rcrb
pop
ret
repnz
movsb
out
dec
ja
imul
push
sar
push
jl
leave
xchg
pop
sahf
daa
imull
ljmp
fiaddl
das
outsl
push
test
jo
lret
xchg
negb
cmp
test
sub
mov
cmp
push
push
and
mov
sbb
iret
loopne
push
gs
repnz
and
std
sbb
inc
pop
mov
sti
mov
mov
pusha
push
adc
fistl
push
fidivs
les
loop
testl
cs
xchg
das
stos
xor
jle
popf
ficoml
inc
inc
adc
cmp
je
mov
cmc
repz
cmp
xchg
scas
inc
cmp
cmp
push
xchg
and
mov
pop
mov
jle
or
pop
dec
stc
lret
add
hlt
mov
adc
testl
scas
cltd
xchg
or
stc
mov
in
popa
cli
lods
test
into
add
divl
in
jl
repz
notb
cmp
movsl
mov
lock
pop
pop
jle
call
mov
add
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
cmp
mov
pinsrw
cmovbe
fwait
bound
lret
jne
and
fsubl
lahf
test
cmc
mov
hlt
insb
sbb
jbe
loopne
sub
andb
icebp
in
inc
add
movsl
mov
push
js
hlt
sahf
push
push
clc
pop
in
cld
int3
std
popf
dec
add
cmc
mov
mov
or
pop
or
sub
inc
pop
ss
add
or
adc
lea
xor
outsb
and
jo
inc
jo
inc
pop
sub
cmc
pop
cmp
lahf
xor
push
addl
jae
xchg
bound
pop
pop
bound
mov
jne
adc
push
dec
ljmp
sbb
fisubl
xor
jne
sbb
lcall
fneni(8087
cwtl
or
xor
xchg
mov
push
mov
sbb
sub
xor
lret
jmp
out
mov
or
loopne
pop
lods
xchg
dec
and
xchg
push
in
dec
and
xchg
iret
xchg
in
movl
idivl
cmp
adc
mov
aad
sahf
cli
movsb
sub
stos
xorb
push
sub
ss
aam
aas
jb
das
imul
out
ret
dec
lahf
jbe
xor
cmp
dec
out
adc
fcomps
cmp
scas
mov
xor
rolb
pop
in
out
daa
call
mov
daa
inc
jns
fildl
xchg
xchg
ljmp
xor
sub
inc
mov
sti
push
mov
daa
lret
mov
xchg
repz
mov
in
add
mov
mov
mov
pop
sub
mov
out
in
add
sbbl
out
test
and
outsl
jmp
cmp
jp
or
jbe
xchg
sub
push
out
pop
push
mov
out
add
xor
adc
mov
mov
outsb
adc
dec
dec
adc
xor
dec
add
shlb
loope
outsl
addb
xor
mov
cmp
imul
jmp
popa
out
testl
xchg
lcall
xchg
ja
xchg
fs
insb
push
aaa
negb
jecxz
int
imull
sbb
dec
add
jmp
dec
in
push
add
add
fwait
and
fdivr
call
in
jecxz
loopne
mov
inc
adc
push
outsl
aad
mov
test
test
cmc
push
cmp
aam
sub
push
push
stos
lret
fst
movsb
push
mov
lret
sarl
pop
sbb
and
cld
cmp
addr16
orb
lods
push
cmp
adc
cmpsb
jne
xor
je
dec
push
or
sbb
adc
and
lret
fwait
sbb
dec
dec
and
scas
jns,pt
test
xchg
aad
cmp
lods
gs
xchg
mov
sub
fbstp
scas
pop
divl
push
mov
cmc
and
cmpsl
inc
push
xchg
addr16
out
sbb
inc
pop
dec
fs
call
out
inc
cmc
pusha
pop
pop
push
pop
pop
inc
push
call
ficompl
mov
push
leave
and
and
dec
out
vpsrld
xchg
push
pop
lods
xor
shl
and
loop
add
es
pop
jo
ljmp
cmp
xor
imul
shlb
or
das
cmp
jecxz
and
nop
push
cmc
dec
das
out
and
fmul
add
bound
fbld
stos
mov
or
shrl
fldt
mov
add
or
xchg
xor
lods
ds
jmp
jno
add
lret
sub
or
sub
repnz
popf
dec
fs
fisttpl
insb
add
leave
push
ret
aas
psrad
js
test
int
pop
inc
int
test
fwait
push
inc
cmpsb
pop
sub
jg
dec
inc
fstpt
push
sbb
jmp
std
fld
les
je
and
inc
jo
or
inc
pop
ret
add
adc
cmc
mov
ds
mov
pop
mov
aaa
enter
pop
inc
push
les
mov
test
fstps
scas
jbe
out
push
pop
leave
ss
pop
dec
scas
out
ret
add
lds
jge
xchg
loope
stos
push
jo
push
inc
cld
mov
jbe
out
dec
hlt
mov
pop
inc
mov
mov
jge
subl
mov
push
and
loope
inc
dec
mov
push
movsl
mov
pop
and
aaa
fldt
fisttps
push
fstpl
xor
mov
xchg
pop
stc
xchg
test
mov
xchg
gs
or
jp
out
inc
or
xchg
sbb
xor
dec
scas
jmp
sbb
lods
add
cmp
js
push
jo
dec
pushl
adc
inc
inc
adc
mov
pop
mov
mov
add
pushf
and
mov
repz
cmpsl
xor
sub
es
ret
pop
dec
dec
lret
orl
sbb
mov
dec
jp
sbb
xchg
xor
into
pop
je
divl
sub
enter
aam
in
add
ds
pop
push
push
aad
jge
push
mov
dec
fnsave
sub
mov
in
or
sbb
sub
or
std
cmpsl
cmc
xchg
add
jecxz
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
dec
aad
mov
les
vmread
and
outsl
push
or
xchg
inc
push
sbb
icebp
xlat
in
test
mov
popf
cmp
roll
nop
push
xchg
test
arpl
mov
fists
xchg
push
sbb
movsl
sbb
sub
push
adc
mov
cmpsl
xchg
add
pop
dec
notb
pop
ret
repnz
inc
test
movntps
into
pop
pop
pop
pop
into
imul
shrl
imul
mov
mov
xor
sbb
ja
or
ja
nop
daa
cmp
or
mov
aam
in
push
and
mov
sub
jmp
sarl
fsts
add
lods
mov
movsl
mov
push
repz
mov
adc
sbb
xchg
jne
icebp
pop
addr16
cltd
les
pushl
ror
xlat
ret
pop
cld
mov
out
lds
repnz
push
and
mov
jo
jbe
jbe
pusha
and
ret
dec
push
add
out
cmp
cwtl
jbe
inc
and
arpl
push
jnp
inc
inc
popa
sbb
in
xor
adc
outsl
dec
dec
xchg
loope
xchg
xchg
fdivl
xorl
vpsubd
jno
scas
adc
mov
fwait
adc
rcr
repz
sub
pop
std
sub
adc
cli
scas
dec
cmpsb
mov
xor
pop
add
out
mov
movsl
pop
sub
ss
pop
shlb
aas
movsb
std
fs
mov
pop
mov
xchg
arpl
call
cmp
ja
dec
inc
mov
push
mov
push
cmp
arpl
insl
in
cli
mov
sub
mov
sti
push
mov
push
inc
mov
add
and
jno
xlat
ja
icebp
push
cltd
subl
adc
sbb
jg
mov
cmc
jecxz
shrl
fsubrs
mov
pop
arpl
andl
ret
lcall
mov
jge
iret
xor
jo
mov
or
lret
je
or
or
nop
inc
jbe
test
cs
push
cvtpi2ps
mov
dec
shlb
cmp
stos
data16
inc
mov
das
pusha
lret
jae
int
sub
jge
jnp
jecxz
ljmp
addr16
jbe
add
jo
ret
scas
loope
lcall
adc
mov
decb
add
cwtl
jnp
sub
push
jno
pop
xor
xor
xor
add
pop
fwait
push
sti
aam
scas
sbb
hlt
push
pushf
mov
xor
ror
mov
sbb
cmpsl
pop
notl
aad
mov
stc
aad
add
push
mov
sbb
lea
bound
test
fisubrs
mov
aad
out
adc
cmp
lods
sahf
jno
mov
loope
push
xchg
cmp
sti
dec
xlat
mov
rolb
sub
mov
mov
arpl
mov
adc
xchg
rorl
ds
sbb
mov
scas
movsb
xchg
xchg
inc
dec
mov
mov
sub
mov
test
add
xor
jge
push
sub
mov
cmpb
cli
ss
jnp
mov
cwtl
lahf
call
add
cmp
shrb
adc
push
pop
popa
cli
cmp
and
pushf
stc
pushf
pop
inc
adc
sub
test
rcl
loope
dec
int
cmp
rcll
mov
cld
adcl
add
and
mov
mov
cwtl
add
mov
cmp
or
push
aam
mov
pop
jecxz
je
in
push
add
ret
jge
and
aaa
xchg
dec
jne
decb
lods
push
clc
mov
popf
pop
addr16
adc
push
adc
std
sub
in
faddp
hlt
scas
test
jecxz
cmp
pop
xchg
xchg
iret
and
in
push
xchg
testb
outsb
nop
inc
divl
xlat
aad
ret
dec
sti
mov
jne
out
testb
mov
push
inc
addr16
test
test
xlat
cwtl
push
data16
cld
das
scas
out
or
ljmp
je
cmp
or
jb
inc
or
iret
iret
es
mov
aad
loopne
sbb
pusha
pop
dec
inc
push
inc
dec
jno
push
xchg
jbe
mov
inc
dec
mov
adc
sbb
daa
push
rcr
jmp
decb
mov
fdivl
pop
jo
lock
fistpll
push
push
clc
call
rorb
xor
leave
adc
lahf
scas
mov
inc
pusha
mov
and
lret
push
adc
push
lahf
mov
xor
ljmp
leave
sbb
pop
test
dec
xor
stos
call
insb
inc
aaa
or
jle
int
mov
fucom
outsl
xchg
cmp
jmp
adc
inc
ds
rorl
inc
fcmovnbe
rcrb
mov
out
fstp
bound
data16
mov
mov
pop
inc
and
iret
cmpsb
adc
dec
dec
ds
aad
pop
les
jbe
mov
jecxz
shl
cmc
clc
std
sub
mov
nop
xchg
je
add
and
comiss
ds
xor
sbb
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
sub
push
xchg
pushf
pinsrw
paddusb
out
fcomp
push
cmp
xchg
fs
jp
pop
add
bound
adc
xor
popa
test
jmp
add
subb
lock
ret
fistps
test
ret
cwtl
dec
fimuls
in
sbb
or
lret
pop
inc
std
clc
mov
pop
andb
sub
lds
pop
sbbl
mov
inc
insb
dec
cmp
push
cmpsb
and
in
push
sbb
pop
push
ret
outsl
sbb
dec
dec
inc
pop
dec
lcall
xor
push
mov
mov
push
jmp
leave
loope
adc
cwtl
sbb
xor
push
jo
xor
sbb
adc
push
inc
or
movsl
lods
mov
cld
pushf
in
push
data16
in
les
js
cs
mov
jg
jge
or
cs
jo
pusha
test
cmp
sub
mov
ret
lret
cmp
cld
xchg
inc
ffree
mov
std
fcoms
aas
sbb
arpl
add
jo
push
test
cltd
flds
popf
add
pop
mov
sub
adc
lret
pop
inc
jmp
push
call
inc
aas
cmpsl
imul
pop
push
lret
bound
push
dec
xchg
pop
movsl
cmc
adc
jns
mov
repnz
frstor
stos
data16
ret
data16
pop
imul
or
andl
or
sub
lret
xor
or
push
fldenv
push
mov
fdivs
les
mov
insl
fsubrp
mov
sub
test
cwtl
out
sti
icebp
or
add
mov
or
dec
sbb
push
push
jne
add
dec
pop
jg
pop
adc
mov
scas
call
mov
sbb
or
fidivl
ja
xchg
call
aam
mov
ret
testb
mov
xchg
mov
pusha
fsts
pop
xorb
fcomps
int
push
cmp
out
mov
addr16
ret
cwtl
mov
ja
in
inc
aad
cltd
mov
pop
aam
inc
outsl
cmp
xchg
xor
shll
and
inc
aam
pop
pop
shll
sub
push
xchg
xchg
scas
push
lahf
loope
mov
cmc
icebp
dec
or
mov
pusha
enter
es
ret
push
imul
add
push
adc
inc
push
shr
add
in
jl
xchg
cmp
cltd
add
xor
pop
dec
in
add
mov
mov
arpl
push
mov
and
mov
add
cmpsl
ljmp
jns
shrl
ret
stos
mov
cmpsb
call
inc
or
xchg
sahf
je
out
jecxz
xchg
sbb
stc
shll
push
jl
mov
jp
push
fstpl
or
dec
and
and
into
mov
dec
mov
push
and
adc
jmp
in
add
mov
and
pop
mov
mov
test
xchg
jge
rcrl
mov
loope
mov
push
pop
in
out
test
mov
xchg
or
rcrb
jo
aad
sbb
in
gs
sub
inc
lods
dec
arpl
adc
push
mov
fstps
popa
or
fmul
sub
xorb
test
testb
and
lret
ret
or
daa
cmp
ds
idivb
mov
subb
loopne
shlb
jp
test
pusha
inc
adc
sbb
mov
add
xchg
and
cmp
loop
and
push
inc
std
pop
push
sahf
aaa
into
mov
int
movsb
inc
pushf
sarb
cld
popa
cmpsl
nop
or
lds
andb
cmc
sub
jecxz
mov
dec
int
sbb
test
call
adc
and
cmp
enter
outsb
gs
pushf
scas
mov
push
mov
mov
sbb
mov
movsb
xor
in
mov
and
inc
cmc
cmp
inc
insl
in
and
mov
into
xor
iret
push
inc
icebp
jmp
mov
stos
pusha
arpl
enter
neg
jbe
jp
int3
movsb
xor
call
clc
insl
push
sbb
mov
in
addr16
adc
nop
mov
bnd
sub
lea
push
jb
outsb
cmp
sbb
repnz
xchg
push
pusha
sub
pop
push
addr16
testl
inc
mov
jecxz
xor
push
nop
fmull
sbb
pop
int
add
jne
repz
add
push
ficoms
je
fistps
daa
sbb
aam
pop
stc
stc
dec
or
inc
lods
or
and
cmp
stc
sbb
add
rcll
subb
test
decb
je
out
rolb
xlat
mov
mov
sub
icebp
xor
adc
rcrl
loopne
fnstenv
aas
or
leave
out
fimuls
sbb
imul
push
pop
adcl
and
jae
rorb
pop
lods
adc
fiaddl
out
rclb
push
adc
movsb
mov
jl
cli
inc
out
test
mov
lds
xchg
mov
sbb
mov
push
jmp
push
test
mov
stos
je
adc
xchg
aas
adc
fs
mov
pop
sti
or
cmpsl
andb
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
xor
mov
les
pcmpgtw
scas
dec
push
rcrl
orl
nop
mov
mov
push
inc
pop
mov
bound
out
jnp
int3
mov
aas
lcall
pushl
inc
sti
jb
mov
ss
stos
call
push
cmp
push
loopne
xchg
mov
mov
and
sahf
push
adc
push
pop
fnstsw
push
sbb
popa
push
movsl
push
inc
pop
les
mov
cltd
jecxz
cld
fiaddl
xlat
add
int
mov
rolb
cs
mov
ljmp
fistpl
push
clc
sar
sbb
mov
xor
adc
addr16
pusha
cs
jo
hlt
pop
push
lds
std
or
adc
push
push
stos
scas
pop
xchg
mov
push
mov
inc
push
mov
mov
push
bound
push
loop
es
or
mov
pop
fdivl
xchg
les
and
xchg
dec
or
and
fdivl
pop
and
bound
lret
sbb
lods
out
lcall
lahf
jne
and
push
popf
inc
loope
outsb
imul
push
int
and
jge
test
in
jge
and
daa
xor
inc
ret
inc
dec
add
lea
lret
adc
mov
jae
cmp
ret
bound
xor
rcl
sbb
mov
push
mov
jnp
xchg
dec
adcb
jbe
out
mov
lret
add
daa
jnp
adc
xorl
int
sete
mov
xor
mov
pop
js
in
adc
add
jg
cld
xlat
leave
lods
lods
scas
pop
dec
rolb
popf
xlat
push
iret
xor
and
dec
and
sub
out
cld
cmp
dec
inc
push
dec
nop
hlt
cmp
xor
inc
dec
sbb
inc
ljmp
mov
pop
out
or
ret
adc
pop
aas
pop
imull
aam
int3
aam
adc
shl
std
jno
push
mov
pop
sub
aas
sub
xchg
jge
cmp
mov
jne
ja
pop
or
or
inc
and
mov
rorl
and
jecxz
ret
jecxz
mov
push
icebp
mov
cmp
ret
sti
stos
jne
sar
rol
scas
jmp
or
cmp
outsl
arpl
jbe
mov
inc
mov
je
jo,pn
adc
pop
js
in
popf
xchg
mov
adc
sbb
in
mov
stc
movaps
in
hlt
cli
push
in
repnz
xor
jb
mov
sbb
outsb
or
ret
cmp
int
es
and
lahf
flds
ja
jl
sbb
jns
mov
nop
mov
imul
cmc
cs
fsts
andl
xchg
pusha
xchg
rclb
outsl
sub
iret
popa
fadds
xor
xor
aaa
fistpl
ficoms
scas
push
mov
lahf
outsb
cmc
ret
xchg
inc
adcb
ja
mull
jle
aam
mov
imul
outsb
xor
and
in
insb
inc
cltd
cmp
int
xor
fmuls
push
mov
fsubrs
pop
jmp
mov
cwtl
push
jo
outsb
add
or
adc
and
cmp
pop
sub
cli
add
fwait
cmp
lcall
sarl
scas
out
push
cmpsl
dec
lret
xchg
int3
jnp
add
je
cmc
xor
iret
add
cwtl
sbb
inc
mov
aam
bound
mov
or
cmp
das
int3
mov
inc
fldt
addr16
ljmp
mov
imul
shrl
pop
call
jno
adc
mov
movsl
mov
cmpsb
idivl
adc
sahf
mov
add
inc
add
push
push
jge
call
xchg
dec
rcrb
test
lret
mov
push
mov
lret
dec
jg
out
mov
xor
xchg
and
lret
into
dec
adc
push
lods
lods
inc
cmp
stos
mov
jmp
push
outsb
adc
outsl
std
cli
or
jl
sarl
sub
adc
popa
andl
jo
push
xlat
repz
jmp
cltd
test
lds
std
sub
xor
lods
xor
mov
xor
ss
mov
xchg
cmpsb
stos
adc
jns
je
ss
lret
daa
in
je
jecxz
add
js
pop
or
sub
ja
inc
shll
sbb
jb
sub
cmc
mov
iret
cmp
mov
fdivrl
jecxz
lock
fdivp
dec
iret
mov
cmpsb
mov
lock
jg
hlt
pusha
or
loop
rcrb
outsb
push
popf
arpl
xchg
mov
ret
fbld
movsl
arpl
loop
gs
out
cld
aad
mov
cmpsl
in
cltd
and
jle
or
jp
mov
xchg
clc
addr16
orl
mov
fwait
cmp
mov
dec
xchg
and
mov
repz
jo
jae
out
in
aam
daa
mov
cs
mov
daa
aam
shll
xorb
jbe
int
inc
xor
repnz
in
ljmp
je
test
out
sub
push
mov
inc
in
or
push
mov
pmullw
ljmp
xor
out
out
mov
mov
shl
or
push
frstor
fnsave
or
pop
mov
mov
cmpsl
cmp
and
pop
adc
pop
lds
repnz
rorb
and
inc
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
or
mov
add
stc
mov
sbb
mov
cmc
loope
inc
sbb
lcall
lret
test
mov
xchg
jmp
add
dec
jo
int3
inc
cmp
jecxz
shl
stos
addr16
lret
lds
sub
stos
aad
add
lods
inc
push
dec
sbb
and
mov
in
cmpsb
sarb
cltd
outsb
adc
je
and
mov
mov
push
insb
in
shl
stos
sub
add
ss
push
ret
push
cmp
gs
sarl
outsb
std
jmp
mov
call
orb
inc
or
jnp
add
sub
scas
cmp
xchg
repz
pop
mov
je
daa
enter
inc
adc
push
adc
test
into
sub
xchg
jl
pop
or
ret
cmpsl
cld
mov
push
jae
lret
mov
scas
jmp
fwait
jge
and
push
mov
ret
cwtl
movl
addl
and
push
push
mov
jle
stos
scas
sbbb
cli
sub
outsl
bnd
stos
std
test
testl
outsl
stc
daa
jmp
fnstcw
addr16
lds
int3
imul
test
lds
inc
pop
xchg
xchg
and
lods
stc
ss
dec
jp
adc
popf
je
sub
insb
into
test
call
or
xor
shll
sub
icebp
xlat
dec
pushf
out
fmuls
dec
push
mov
xchg
bound
cmp
sbb
inc
push
push
mov
xchg
pop
inc
cmp
inc
push
mov
rorb
aaa
fildll
pop
add
aas
push
scas
xchg
mov
into
outsl
and
call
movsb
sub
or
hlt
movsb
and
test
daa
sub
push
jne
ret
sti
popf
mov
push
pop
pop
push
mov
dec
leave
imul
cmc
xor
mov
movsb
sti
aas
addl
mov
les
int3
mov
jmp
mov
out
inc
aaa
movzwl
fwait
cmp
dec
xor
mov
adc
mov
addr16
mov
sub
test
xchg
lret
mov
pop
loopne
cmp
sub
sub
cmc
sub
xchg
rolb
push
pop
xchg
push
mov
es
outsl
shll
mov
cwtl
cmp
cmc
out
xchg
cmp
cwtl
cs
sbb
and
in
pop
in
push
mov
jecxz
mov
or
stos
cmpsl
sbb
lods
adc
xchg
test
std
pop
out
adc
sub
lret
jb
cmpsb
jno
dec
xchg
insb
cwtl
imul
sub
pop
xchg
adcb
es
cmpsb
fmuls
lahf
mov
xchg
push
in
mov
add
and
andb
out
xchg
mov
cmp
mov
add
inc
shrb
xlat
mov
pop
or
stos
test
stc
daa
adc
push
clc
push
and
mov
pop
push
add
scas
out
sahf
ret
mov
iret
adc
cld
push
lahf
xchg
shr
test
pushf
mov
dec
scas
mov
mov
xor
and
sbb
xor
addr16
loop
ret
mov
fxch
and
dec
and
pusha
lret
lea
push
mov
fists
push
push
iret
jl
shll
orl
into
cmp
add
pop
ljmp
adc
rolb
mov
pusha
insb
mov
lock
pop
lcall
cwtl
mov
das
call
inc
xor
or
es
xorl
popf
stos
dec
daa
adc
into
in
inc
aas
xchg
fcomps
ret
popf
fmul
into
push
pop
aam
in
pop
jg
add
jp
movsl
pop
arpl
dec
fdivrs
shl
movsl
mov
mov
jne
jnp
mov
fidivrl
or
pop
rcrl
push
nop
cmc
xchg
ret
pusha
push
outsl
push
dec
inc
push
push
mov
cmpsb
adc
aaa
xlat
adc
add
xor
xchg
aam
push
inc
ret
add
and
jno
and
lcall
add
and
mov
xchg
mov
add
xor
imul
cltd
outsl
scas
outsl
incb
bound
and
xchg
sti
bound
cmp
mov
adc
int
sbb
lahf
dec
mov
push
test
mov
add
dec
adc
mov
mov
xor
inc
imulb
stos
leave
push
xchg
rolb
std
push
add
sti
loope
xchg
out
orl
adc
int
aas
out
sarl
fisubrl
mov
stos
jecxz
mov
jb
jecxz
jne
movsb
xchg
aaa
jbe
decb
icebp
dec
sub
xchg
sbb
adc
imul
xor
and
adc
into
and
push
xlat
cmp
lret
movsl
cli
or
inc
nop
int
jmp
aad
lods
cmp
sub
outsl
add
adc
fwait
shr
mov
cltd
lahf
test
pop
dec
mov
js
push
dec
lods
movsl
xor
imul
xchg
jle
ret
jp
adc
out
mov
inc
lahf
fstp
xor
add
mov
adcl
sub
int3
cld
dec
cli
mov
or
push
pop
or
jecxz
pop
mov
out
xchg
sahf
pop
and
popa
mov
call
xor
jge
popf
bound
fcompl
ljmp
sahf
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
imul
pmulhrw
dec
stos
cmpsb
inc
pushf
call
ljmp
adcl
adc
mov
aas
out
clc
test
or
cmc
test
ficomps
push
sub
sub
mov
lcall
or
push
adc
sar
es
pop
xchg
or
sub
pusha
inc
fwait
sbb
imul
adc
imul
test
movq
int
mov
push
push
sub
sub
xor
jecxz
jno
push
cmp
stos
ja
jle
rclb
rcll
push
push
ss
pop
or
aaa
movsl
into
fsub
out
xor
mov
jae
inc
aas
pop
cltd
ds
sahf
cmp
ficoms
or
inc
fsubl
push
inc
mov
push
and
test
loop
or
push
repnz
ret
scas
and
int3
stc
or
push
repz
push
sub
push
jge
push
xchg
test
xchg
iret
inc
repnz
adc
movsb
fistps
das
xor
or
cmp
lret
std
fwait
aad
or
scas
cmpsb
fdivr
inc
adc
pop
fisubrs
int3
add
mov
inc
leave
sbb
mov
shrl
mov
jno
pop
and
mov
or
sbb
in
repz
loop
ret
cwtl
adc
or
les
dec
sub
les
cltd
arpl
dec
cs
sahf
lret
mov
leave
jp
dec
sub
sub
std
cmp
lods
xchg
xsha1
cmpsb
iret
cli
stos
fadds
out
and
push
das
push
ljmp
lods
and
or
mov
enter
sbb
inc
aad
dec
jecxz
bound
jmp
es
mov
cmp
xor
lcall
mov
inc
movl
push
pushf
mov
inc
jbe
inc
inc
mov
out
imul
divb
mov
loop
lahf
fstpl
stos
rcrb
add
sti
cmpb
into
cli
imul
cmp
xchg
aaa
dec
sbb
sahf
mov
mov
mov
lret
lea
nop
cmp
push
push
pop
loop
push
sbb
fistpll
in
cmp
ljmp
add
mov
cmp
popa
sahf
jg
xor
dec
nopl
inc
stos
jbe
cwtl
sbb
aad
fcompl
shl
imul
sbb
in
inc
shll
loop
push
mov
ja
push
adc
push
mov
mov
insb
push
xor
lods
lds
dec
sub
cli
lea
xor
fnsave
outsl
xor
or
mov
jae
loopne
es
jnp
fst
or
push
jmp
stos
data16
jecxz
movsb
pop
shll
dec
sub
sbb
in
cmpsl
sub
fimull
dec
xchg
cli
jmp
sub
jnp
movsb
mov
stc
push
pop
cmp
sub
and
aam
ljmp
and
adc
add
divb
add
decb
in
inc
or
in
xorb
mov
fnstsw
xchg
pop
inc
lds
lods
data16
pop
std
xchg
loop
add
shlb
xchg
testl
pop
stos
addl
lret
rorb
inc
cli
and
xlat
jne
sub
out
mov
stos
les
cltd
pop
fstp
or
sub
pusha
das
jae
sti
xor
and
mov
shrl
mov
out
xor
fisttpl
mov
mov
jl
cli
es
mov
cmc
fs
outsb
xor
lock
mov
inc
fsubrl
dec
sub
push
adc
mov
hlt
push
dec
add
cwtl
out
lret
inc
out
mov
insb
pop
addr16
or
ljmp
lahf
cmp
in
stos
mov
inc
inc
dec
dec
jb
jae
or
pop
into
adc
xchg
adcl
pop
mov
sbb
cld
cmp
ja
sbb
sbb
jnp
fwait
jo
popf
out
fbld
mov
nop
sbb
push
mov
fcom
adcl
xchg
mov
pusha
cmp
repz
hlt
dec
out
mov
cltd
lock
mov
mov
pop
mov
int3
mov
xchg
inc
cwtl
xor
inc
pop
bound
pop
pusha
mov
popf
shll
shl
loopne
push
dec
push
adc
stos
xchg
cmpsl
loopne
fisttpll
clc
fadds
jnp
add
xor
and
int
ljmp
fs
insl
scas
movsl
push
pushf
sbb
hlt
inc
dec
aaa
loopne
loopne
push
inc
inc
xor
insl
mov
push
or
jle
dec
adc
repnz
and
and
fistps
rol
xchg
and
daa
gs
dec
test
and
ret
jne
mov
pop
scas
jp
nop
inc
data16
pop
cwtl
lock
add
outsl
loopne
jle
mov
loopne
and
in
pop
test
lds
scas
ja
sbb
test
or
sti
xchg
mov
pop
pop
and
cmpsb
add
cli
fiadds
xor
test
into
cwtl
dec
sbb
sub
jns
lahf
push
aaa
ja
int
dec
mov
sub
add
div
jg
iret
ret
and
fdivs
push
into
sarl
sbb
cmp
jle
inc
outsl
and
out
shrl
or
pop
out
push
lcall
insb
ret
push
inc
xchg
loop
js
lret
rorb
sahf
hlt
decl
and
pop
or
adc
or
mov
movsl
lret
cltd
loope
aad
inc
jl
sbb
popa
push
lret
dec
dec
or
mov
enter
iret
sub
mov
dec
iret
dec
sub
lea
addl
pushf
pop
je
push
cwtl
push
mov
jnp
cmp
and
ret
xchg
fdivrl
pop
dec
mov
dec
mov
lahf
int3
push
insb
xchg
fstl
fsubrl
fistl
ret
in
sti
fistpl
sub
sub
inc
repnz
ficoms
xor
mov
cld
xchg
daa
or
insl
xchg
mov
fdivs
mov
in
add
mov
xor
inc
enter
cwtl
aas
inc
jl
xchg
insl
in
xchg
daa
pop
jecxz
push
mov
cmp
fwait
shrl
push
jo
fmuls
sbb
add
mov
ret
es
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
adc
add
dec
pop
inc
cmp
push
in
sbb
dec
xlat
aas
loope
sub
mov
jo
fstpl
lock
xor
cmp
mov
push
dec
sahf
icebp
out
es
cli
lcall
test
addr16
test
jb
adc
lea
or
push
mov
cltd
imul
and
mov
rcrb
push
add
sub
iret
cmp
sti
jmp
dec
or
dec
sbb
fildl
pop
inc
adc
fistpl
inc
mov
mov
fidivl
test
les
mov
mov
mov
sbbb
bound
pop
into
pop
xchg
rorb
nop
outsb
sbb
mov
push
sub
jnp
xchg
daa
nop
add
sbb
leave
dec
push
add
lcall
sub
sbb
mov
movsl
add
fstp
es
pop
lock
in
pop
inc
or
inc
xorl
fcoml
pushf
add
in
out
leave
cld
daa
loop
inc
rclb
pusha
and
sub
cs
mov
fistl
sbbb
xchg
lds
mov
in
sub
adc
pop
mov
rclb
dec
dec
movsb
aas
xor
in
scas
repz
xor
xor
push
cmp
pop
jg
pop
es
in
push
xchg
loop
arpl
mov
inc
dec
mov
call
lods
pop
jmp
loopne
cs
cwtl
cmp
std
mov
ret
daa
mov
roll
sarb
add
cltd
sahf
jmp
inc
dec
dec
push
dec
es
xchg
xor
lods
outsb
ljmp
cmp
shlb
sahf
pop
stos
mov
jo
lret
dec
outsb
mov
adc
nop
les
xor
and
ljmp
xchg
xor
hlt
jo
bound
pop
pop
and
addr16
and
xchg
jae
pop
cmp
cmp
push
cwtl
clc
or
div
nop
lea
hlt
sbb
rcrb
negl
push
xchg
sbb
insl
mov
and
loope
lret
xchg
mov
adc
pop
std
nop
sub
movb
mov
sti
fsubrs
pop
cmp
or
jecxz
nop
mov
mov
dec
mov
xchg
mov
mov
cmpsl
xor
pop
lock
jo
testb
adc
and
dec
loope
repnz
inc
cmc
iret
inc
test
cmp
or
mov
dec
jg
or
xchg
scas
test
jne
outsb
inc
sbb
fidivrl
into
and
sub
add
sub
sahf
pop
xchg
lds
pop
lret
ljmp
nop
or
gs
push
in
inc
xchg
mov
push
sub
inc
xor
fsincos
sbb
mov
mov
cwtl
mov
pop
inc
push
push
xchg
inc
sub
xchg
xchg
icebp
aas
fidivl
test
inc
insl
mov
dec
push
cs
cmp
adc
and
fs
or
mov
mov
in
cmp
mov
cmp
neg
sub
xchg
cld
mov
xor
jge
mov
out
xchg
push
das
xchg
ret
mov
and
add
pusha
xchg
les
mov
mov
and
es
inc
in
nop
sbb
add
pop
cmp
push
gs
pop
jmp
push
mov
rcll
std
push
pop
mov
xor
push
xchg
mov
cli
call
out
hlt
add
cmp
out
inc
hlt
push
and
test
ret
sub
dec
sbb
adc
cld
mov
call
ss
das
daa
inc
xor
aad
mov
mov
scas
insb
sbb
popa
lods
lret
lea
jg
sub
ret
jne
jno
aam
testl
lret
pop
mov
mov
jg
lahf
mov
push
mov
push
and
ret
jl
xchg
ljmp
jno
mov
push
das
scas
test
xchg
add
lret
fs
or
mov
imul
enter
shrb
dec
pop
or
adcb
dec
cmpsl
add
mov
imul
pop
loopne
test
mov
adc
mov
in
dec
rorb
neg
xor
fsubs
lds
add
xchg
xchg
mov
orb
adc
addb
pop
cmp
test
test
jle
mov
or
shll
fs
push
mov
call
push
push
adc
adc
nop
cli
je
adcl
jnp
fidivl
inc
push
fstl
aaa
add
push
and
aam
stc
sbbl
mov
ret
int
call
outsb
lods
push
aaa
jae
cmpl
add
outsl
out
push
jbe
pop
inc
dec
add
divb
addr16
inc
and
test
insl
mov
mov
and
jns
loop
ja
movsb
aaa
cmp
cmpl
int3
jl
push
mov
mov
mov
cmp
pop
lods
lods
imul
sbb
and
dec
addr16
std
jmp
and
aas
lock
xor
sub
rcr
pop
and
test
dec
and
jns
xchg
js
dec
sub
hlt
fpatan
iret
sub
icebp
jae
mov
fwait
mov
test
pop
sti
sbb
pop
cmp
out
into
inc
or
dec
fs
pop
scas
in
jp
push
push
insl
xor
xchg
cmc
or
lods
std
mov
rcrb
xor
push
jbe
push
adc
insb
movsl
xor
add
cld
mov
mov
push
call
sub
and
call
mov
rorb
mov
xchg
les
push
mov
cmc
sub
mov
mov
push
das
cmp
dec
pop
in
mov
cmp
add
arpl
xor
xchg
inc
xchg
and
addr16
cmp
in
imul
mov
stos
mov
ja
mov
xor
cs
popa
mov
and
ljmp
stc
push
bound
mov
mov
loop
scas
lret
cltd
shll
mov
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
cmp
pop
add
imul
rolb
fisubrl
cmp
and
inc
or
jae
and
or
dec
push
test
mov
movsb
jge
add
movl
jbe
outsl
insb
ljmp
imul
jo
push
sahf
je
lods
in
push
push
add
inc
pop
xor
rcrb
imull
dec
pop
fdivr
dec
fsubr
xchg
ficoml
gs
loope
das
in
or
icebp
mov
inc
hlt
out
addr16
lahf
loop
xlat
pop
pop
mov
repz
or
imul
imul
sbb
cmpsb
add
orb
sub
int
cmp
lret
sub
lea
cmp
cli
push
dec
into
lock
mov
mov
xchg
aas
pusha
sub
fstpl
dec
clc
push
rcrb
add
pop
adc
cmp
pop
xchg
pop
mov
fsubrs
lods
fisubs
sbb
mov
mov
sub
fdivl
rolb
aas
inc
imul
pop
add
js
and
cld
fs
movsb
scas
test
sar
push
push
testl
cmc
lods
scas
push
xor
xor
rclb
ds
test
test
push
ja
xchg
adc
out
pop
cmp
pop
in
jle
xchg
mov
mov
jmp
xchg
insb
dec
sub
sti
push
mov
xchg
sub
sbb
scas
pushf
ljmp
pop
push
jg
lds
pop
push
mov
xor
dec
push
mov
ljmp
aaa
jge
and
ljmp
shlb
loopne
fstl
xchg
lcall
add
lcall
sbb
das
scas
arpl
pop
pop
cmp
inc
aam
mov
fsubrl
push
xlat
add
cmp
fcmovu
in
jmp
data16
sub
xor
jmp
aaa
adc
test
jbe,pn
adc
stc
sub
test
pop
mov
aam
add
data16
sti
jae
shll
add
mov
mov
add
bound
xor
inc
adc
pop
popf
push
sbb
ss
popa
pop
cmpsb
jbe
scas
das
pushf
out
xchg
dec
cmpsl
push
push
scas
push
or
mov
sub
jae
in
mov
pop
sub
fisubl
or
jno
xchg
mov
fisubl
xchg
int3
push
je
or
aad
in
dec
aas
sar
and
pop
cltd
mov
mov
insb
lods
adc
cmp
sbb
pop
aad
cmp
cmp
aas
or
popa
mov
repnz
inc
pop
add
in
mov
dec
ret
out
push
mov
in
in
inc
mov
popa
or
testb
ss
jl
cli
inc
out
fs
mov
clc
sub
mov
sub
mov
loope
jae
into
les
rolb
xchg
jno
sub
ds
pop
rcrl
sub
xchg
cvtpi2ps
incb
clc
adc
adc
inc
repnz
clc
cmp
stc
push
addr16
das
xchg
int
jbe
push
pusha
and
dec
popf
xchg
sbb
and
das
add
sahf
and
xchg
mov
imul
mov
out
mul
pop
shlb
push
add
fimuls
add
and
insl
or
or
and
fsts
mov
mov
mov
or
jbe
repnz
rol
imul
jmp
ficomps
xor
stos
in
jp
aam
test
and
adc
pop
ds
bound
jns
mov
mov
mov
push
xor
and
insl
sub
or
add
aaa
add
mov
outsl
dec
loopne
and
clc
sbb
cmc
mov
cmc
ret
push
add
add
or
inc
mov
dec
jno
jne
xlat
adc
clc
jle
lock
push
adc
loope
mov
loope
pop
xchg
pusha
andl
test
out
xlat
push
cmpsb
mov
or
int
test
outsl
jecxz
hlt
outsl
or
into
mov
jne
scas
xor
shlb
ds
mov
push
in
mov
stos
int
sbb
jnp
add
add
jbe
cmp
inc
rcrl
inc
addr16
push
or
loop
mov
pushf
lret
lds
mov
enter
arpl
clc
je
aas
outsl
xchg
mov
ljmp
test
outsl
lea
mov
jne
loop
clc
mov
mov
jp
call
adc
cmpsb
mov
push
inc
call
pop
movsb
pop
aad
pop
int3
mov
mov
inc
js
rorl
xor
loope
mov
jae
mov
add
inc
int
aam
or
lcall
push
nop
ret
inc
subb
insl
jl
lods
movb
lods
sbb
mov
jle
shr
std
add
cmp
lea
pop
cmp
cmpsb
sbb
xchg
jge
sarl
out
outsw
dec
in
mov
sub
stc
mov
dec
dec
cmc
sub
orl
mov
into
mov
movsb
dec
adc
fimuls
mov
jle
adc
out
out
sbb
test
cmp
aam
lods
or
sti
in
sti
vpsubd
movl
cmpsb
and
repz
mov
out
sub
xchg
jmp
sub
inc
aam
dec
mov
sbb
xor
sbbb
mov
in
cmpsb
shl
cwtl
icebp
sbb
adc
int
test
std
daa
add
jecxz
sub
scas
or
mov
jmp
sahf
out
sbb
inc
cltd
cld
js
mov
ret
dec
pop
pop
push
pop
sbb
push
dec
cmp
pop
ja
sbb
mov
dec
add
dec
jb
jmp
out
insl
dec
addr16
fs
test
es
sbb
add
adc
sbb
fwait
jg
mov
fldenv
into
lahf
fwait
xchg
lret
ja
ds
sub
xor
fisubrl
pop
pop
imul
or
push
cmp
lods
dec
push
mov
mov
adc
push
sbb
jp
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
ja
je
push
add
rcrl
and
mov
sub
jb
push
test
mov
sahf
mov
pop
pop
mov
pop
std
jecxz
divb
adcl
sub
out
pop
ffree
cmpsl
fsubrl
lods
loop
jnp
cmpsl
bound
xchg
ret
dec
pushf
sub
mov
sub
inc
sbb
cmp
pop
adc
cmpsb
push
inc
adc
sbb
and
loope
mov
incl
scas
xorb
daa
mov
mov
aas
mov
adc
mov
sub
push
pop
out
imul
andl
sub
jne
dec
fsubrp
push
push
in
adc
ljmp
lods
pop
popa
fdivrl
cltd
xor
cltd
xchg
fiadds
push
mov
int3
leave
add
adcl
ljmp
not
pop
and
sbb
cmp
ret
lcall
dec
add
cmpsb
or
out
mov
add
aas
mov
adc
test
loopne
clc
pushf
cmp
jp
repz
push
push
and
jae
outsl
into
lods
add
dec
stc
adcb
sub
data16
xchg
adc
inc
mov
arpl
mov
adc
cmc
mov
hlt
xchg
data16
xchg
movsl
lret
ljmp
call
std
lock
mov
out
pop
and
fwait
push
lock
std
ljmp
neg
nop
test
fisubrs
jno
sub
daa
dec
lea
mov
out
call
fimuls
movsb
add
loopne
int
clc
jae
jg
lods
scas
adc
xchg
inc
or
add
cmp
jecxz
stos
sbb
les
push
inc
jo
outsb
dec
gs
int3
xor
pop
in
jno
outsl
int3
fistpl
cltd
mov
daa
pop
mov
adc
in
icebp
subl
xchg
jb
add
dec
dec
pop
andl
cwtl
hlt
xchg
cmc
pop
pop
hlt
lods
xor
dec
xchg
in
jle
scas
push
xchg
mov
test
inc
fdivl
and
ljmp
int
sub
push
dec
fstps
add
pop
lea
mov
sbb
xchg
xchg
dec
lods
in
mov
movb
mov
push
push
outsb
cmp
repz
inc
jo
pop
and
fiadds
imul
ret
adc
cmp
jle
push
xchg
ljmp
fs
fsubr
call
pop
ss
pop
mov
mov
dec
lret
xchg
es
push
xchg
idivb
sarb
leave
lods
js
jge
or
jg
push
add
inc
fs
push
jae
enter
inc
mov
test
aas
out
cmp
mov
xlat
rorb
or
imul
jp
and
mull
dec
jno
mov
popf
outsl
xchg
push
xchg
dec
repnz
scas
add
and
xor
popf
call
push
xor
xchg
and
cmp
add
clc
mov
xchg
push
iret
gs
and
mov
out
sti
imul
outsl
nop
in
repz
shlb
jmp
loop
mov
jg
into
pushf
test
shl
mov
cmp
jo
idivb
out
int
imul
cmpb
push
pushf
and
into
int
int
dec
sbb
scas
pop
inc
push
js
cmp
jmp
pusha
xchg
fidivrl
test
adc
mov
cmp
adc
pop
mov
mov
fwait
loopne
pop
push
das
lock
xor
nop
jle
xor
cmpl
push
pusha
repnz
loopne
pushf
outsb
or
push
pop
dec
xchg
incb
xchg
mov
les
cli
jne
cmp
insb
fbstp
xor
ret
mov
and
jnp
sbb
es
xchg
jb
and
imul
xchg
fstl
hlt
inc
repz
push
lcall
popa
dec
in
movsl
loopne
jns
push
inc
adc
shll
add
pop
inc
out
out
jb
add
and
push
ljmp
iret
cs
xor
adc
fstpl
iret
adc
jmp
and
adc
ljmp
mov
loop
stc
ja
imul
dec
in
sbb
cli
in
test
hlt
pop
sbb
aam
xchg
add
pop
test
mov
xchg
lret
mulb
nop
repnz
cmpsl
and
insl
jne
daa
xor
outsb
lds
xchg
fucomp
cltd
xchg
add
dec
pop
inc
mov
cmp
outsl
mov
mov
xor
icebp
sub
push
push
lcall
jmp
sbb
ret
std
cld
sti
jl
filds
mov
in
inc
or
push
aam
fwait
add
lods
xchg
jo
xor
fldcw
fwait
data16
cmpb
push
inc
adc
negl
inc
xchg
add
aaa
xchg
test
enter
mov
pop
xor
pop
xchg
mov
xchg
insb
sbb
fwait
or
xor
aas
adc
sbb
pop
xor
lahf
enter
aas
popa
shrb
addb
pop
imul
pop
sahf
lods
mov
xorb
push
sub
inc
ljmp
sti
enter
pop
sbb
xchg
sub
fucomp
add
add
sahf
dec
pop
jae
pop
jp
mov
or
or
testb
and
je
ja
pop
stc
pop
imul
pop
loopne
in
out
cmpsl
popa
pop
insl
pop
enter
fidivs
mov
out
sub
sub
cltd
std
push
ds
stc
add
mov
aas
stos
dec
nop
mov
push
mov
push
pop
cmpsb
pop
adc
lods
icebp
jecxz
inc
mov
xchg
dec
ja
popa
lds
sti
mov
hlt
mov
stos
cmp
mov
nop
jns
fwait
dec
into
scas
mov
mov
lock
out
inc
inc
add
dec
arpl
std
mov
pop
into
pop
jl
pop
sbb
mov
jge
xchg
xor
mov
out
adc
jae
mov
mov
jnp
popa
or
pop
sbb
mov
push
dec
outsb
adc
push
outsl
adc
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
lods
sbb
push
add
lahf
lock
xchg
dec
xchg
inc
pop
les
cmp
lcall
test
cli
idivl
cmp
icebp
pop
adc
sub
js
mov
xchg
jle
shll
dec
pop
mov
jg
xor
cmp
mov
mov
inc
sahf
gs
sub
mov
int
push
or
lds
shrl
cmp
sahf
mov
push
out
mov
fmull
out
scas
push
adc
dec
inc
es
sub
les
notb
jno
aaa
xor
inc
push
cld
mov
scas
push
es
mov
pop
cmpsb
daa
pop
xchg
and
adcl
jg
xor
xor
lcall
and
inc
jp
lods
clc
ljmp
mov
in
xor
push
out
stos
mov
fisubl
sbb
std
aam
push
xor
push
loope
test
and
ret
mov
sbb
int
inc
stos
mov
movsl
sbb
dec
fmull
xor
popa
xlat
xchg
mov
xchg
mov
or
mov
xchg
xor
xor
xchg
adc
scas
test
std
imul
xlat
jb
popa
jne
test
inc
mull
cmp
cmp
insl
neg
or
jl
jnp
xchg
ds
iret
push
mov
fstps
imul
stos
and
iret
loop
andl
xor
test
sbb
int
and
popa
shlb
scas
push
cs
int3
fwait
xchg
mov
sar
mov
sub
sarl
sbb
aam
movsl
adc
into
fs
adc
mov
sarb
push
jbe
ret
mov
fisttpll
cmc
ja
mov
dec
xor
iret
mov
or
inc
push
xchg
push
inc
pop
mov
pop
fnstenv
sub
in
mov
or
pop
adc
pop
jp
nop
mov
stos
popf
je
ja
push
adc
daa
jae
outsl
lahf
jnp
andb
les
sbb
dec
adc
xor
bound
je
jbe
sub
cltd
sub
frstor
fwait
xor
jecxz
sub
jno
and
inc
push
sub
push
call
mov
jae
jnp
lret
sbb
jbe
mov
fmuls
and
in
es
jae
cmpsl
dec
xchg
or
shrl
je
sub
lock
pop
and
adc
mov
cli
and
shrl
mov
iret
arpl
and
jecxz
and
mov
mov
pop
ret
or
mov
test
xlat
fwait
icebp
xor
add
pop
es
sbb
loopne
insb
or
shrl
mov
mov
mov
addr16
and
cmpsb
rcl
rorb
imul
xchg
shrb
outsb
mov
aad
mov
push
adc
mov
dec
rolb
mov
push
aas
and
cmp
scas
jno
lock
gs
loop
aas
in
push
mov
negl
adc
pop
je
pop
push
adc
jae
mov
adc
rolb
mov
xchg
pcmpgtb
inc
lcall
test
and
popf
rolb
neg
psubd
aaa
bound
adc
inc
shll
mov
aad
shll
sub
fwait
cld
and
daa
xor
xchg
jns
filds
xchg
xor
push
or
and
inc
dec
inc
cmp
insl
aaa
sbbl
adc
mov
adc
cmpsb
dec
add
inc
test
mov
mov
pop
mov
xchg
fists
aad
adc
andb
les
cmpsb
fcmove
imul
les
adc
ret
pusha
mov
lahf
arpl
in
xor
push
sub
call
aad
rcpps
jecxz
add
insl
stos
or
mov
ret
fwait
adc
lahf
mov
inc
mov
jns
or
jbe
jae
test
fildll
hlt
loopne
imul
xlat
stc
jo
lods
gs
pop
adc
and
fcomps
and
mov
loopne
mov
inc
mov
add
pop
cmp
or
sbb
cwtl
fidivrl
cmp
fldenv
mov
jns
sub
test
cltd
dec
inc
repz
mov
ret
ds
sub
rolb
ret
rolb
sub
pop
inc
lds
iret
xchg
xchg
adc
lea
sbb
adc
push
jae
mov
add
adc
inc
lret
jg
jno
lret
pop
daa
out
mov
in
mov
xchg
aam
inc
mov
repnz
jae
sbb
mov
aad
daa
lods
mov
mov
lods
lcall
xor
ficompl
fcom
adc
jbe
push
scas
xor
popa
call
mov
clc
dec
cli
pop
push
addl
mov
mov
push
mov
lret
decl
movsb
dec
and
push
xor
jnp
xchg
aas
inc
cs
nop
mov
lods
cmp
adc
enter
sub
in
lret
and
mov
loope
push
int3
ds
push
in
pusha
and
add
outsb
add
dec
inc
in
mov
flds
fistl
adc
inc
aas
jae
mov
roll
push
push
dec
xchg
test
daa
cwtl
sbb
imul
aaa
pop
inc
sbb
add
jmp
adc
or
repnz
jae
inc
mov
jbe
pushf
stc
mov
push
pop
sbb
lcall
xor
insb
cli
dec
sbb
lock
out
xchg
mov
imul
inc
add
or
gs
mov
ljmp
negb
iret
aam
dec
pop
popa
xchg
fildl
xchg
sub
jge
inc
inc
jb
fisubs
mov
and
or
call
rol
loop
repnz
jbe
push
pop
jbe,pt
mov
mov
arpl
shlb
sub
aaa
ljmp
dec
xlat
push
lret
xchg
dec
scas
add
lds
push
dec
mov
fmull
fldl
jge
cmpsb
mov
shll
hlt
fsub
scas
cmp
push
mov
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
addb
add
adc
cmp
aas
or
test
mov
push
mov
pop
imul
and
push
and
cmp
fsubl
cmp
iret
mov
sahf
cltd
mov
mov
add
nop
or
fdivl
loop
stc
xchg
and
cwtl
stos
lds
fiadds
jno
lcall
mov
test
push
jnp
adc
xor
mov
shl
jbe
hlt
insl
popa
xchg
pop
outsl
cmpsl
dec
loop
mov
leave
aad
inc
and
sbb
fildll
in
mov
xchg
jb
mov
into
push
bound
adc
ljmp
test
mov
movsl
ljmp
ror
scas
jmp
cs
sahf
add
arpl
stc
mov
test
xor
das
mov
sbb
int3
addr16
andl
jne
pop
xchg
jg
movsl
loop
jge
push
enter
lahf
aad
imul
jns
mov
int3
mov
es
sbb
xorb
ret
loop
inc
push
fiaddl
xlat
insb
test
test
pop
add
mov
adc
fs
insb
bound
js
jns
pusha
jb
lock
xor
imul
cwtl
cmp
mov
arpl
pop
sbb
inc
call
dec
jbe
xchg
icebp
jnp
push
test
leave
adc
inc
sub
mov
insl
testb
pop
xchg
addr16
iret
ds
cmpsb
lahf
lds
inc
cmp
jl
lret
scas
mov
mov
pusha
aaa
aas
mov
orl
ja
adc
ljmp
pop
mov
xchg
fcomps
insb
roll
xchg
test
ret
insb
lods
scas
aaa
or
stos
pop
xor
push
pop
fistpl
cmp
pop
dec
cmp
xchg
mov
imul
sbb
add
push
in
bound
xchg
add
pop
xchg
cmp
test
and
push
daa
fildl
nop
inc
test
dec
xor
cmpsl
xchg
fnstenv
sbb
ss
divb
lret
pushf
lods
rorb
insl
gs
icebp
lods
repnz
mov
xchg
mov
adc
movsl
loope
sub
test
enter
leave
dec
std
nop
add
pop
cmp
lret
mov
push
into
pop
test
out
movsl
icebp
push
lret
fs
test
dec
push
xor
add
arpl
stos
and
xor
and
orb
add
sub
out
rol
push
pop
dec
fists
ret
jmp
sbb
cmpsb
test
out
das
xchg
xor
inc
call
push
iret
nop
ror
lods
int
cmp
pop
or
push
inc
add
je
aad
jp
adcl
push
je
cmp
jae
mov
popa
mov
movsl
aaa
push
js
sbb
jecxz
push
xchg
mov
shl
adc
rclb
dec
jnp
imul
int3
pop
shr
or
in
dec
cmp
sbb
shrl
dec
jg
jno
dec
outsb
inc
loop
imul
aas
jns
in
je
jmp
jge
call
cmp
int3
fmul
sti
repz
push
adc
xorb
mov
add
inc
and
loope
faddl
out
and
sbb
nop
sbb
push
jecxz
sub
hlt
cmc
sub
add
xor
pop
fldl
mov
adc
sub
movsb
out
cmp
adc
pop
pop
popa
loop
mov
in
adc
ret
aad
cwtl
pusha
push
or
and
jo
fldcw
imulb
xchg
lds
push
cmp
xchg
jge
scas
lds
add
sahf
mov
std
lds
and
es
fs
movsl
je
imul
mov
arpl
xchg
sub
mov
aaa
push
mov
jp
mov
pop
xchg
mov
pop
add
test
pop
mov
jo
jp
movsb
negl
mov
inc
and
dec
add
mov
aad
popf
notb
scas
mov
push
mov
out
je
bound
adc
pop
mul
js
lret
push
lods
aaa
sbb
fsubl
adc
xor
xchg
in
pop
imul
pusha
out
adc
xor
lds
cltd
jae
repnz
dec
adc
sbbb
out
test
int
adc
mov
in
mov
mov
jecxz
push
test
push
cwtl
shll
pop
insb
xor
fiaddl
push
sbb
jnp
push
inc
add
mov
mov
jp
pusha
shr
in
sub
test
xchg
dec
mov
in
fwait
je
xor
adcl
ja
pop
daa
fcoml
into
sahf
dec
sbb
aad
and
fmull
mov
mov
inc
imul
jo
xchg
add
cwtl
addr16
cmp
data16
loop
sbb
subl
inc
push
ja
sub
test
push
jecxz
in
pop
cmp
xchg
push
dec
or
call
dec
aas
insl
iret
adc
push
movsl
jl
pop
mov
aaa
push
dec
jnp
cmp
sbb
ljmp
es
mov
fsts
test
idivl
jmp
and
loopne
lcall
out
imul
add
xorb
ss
jge
in
subb
jbe
or
mov
fidivrl
ljmp
mov
pop
frstor
or
fisubrs
cmp
lods
mov
push
je
xor
fldl
ja
stos
push
test
sbb
popa
push
les
adc
sahf
or
sbb
icebp
jp
mov
dec
insb
arpl
fnstsw
pop
jns
inc
stos
add
mov
sbb
enter
push
push
fwait
mov
enter
inc
fisttps
inc
cmp
test
in
jg
mov
cwtl
roll
test
les
aaa
push
mov
hlt
popl
mov
pop
shlb
adc
pop
int3
test
jge
push
out
lds
cmpsb
cwtl
push
or
adc
bound
jp
jp
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
jo
shll
add
dec
mov
addr16
mov
sbb
and
pushw
jp
mov
mov
gs
dec
sub
pop
mov
and
out
mov
xlat
xchg
inc
add
repnz
leave
xchg
push
adc
ret
cmp
add
aam
aaa
pop
and
mov
xchg
test
outsl
mov
push
dec
cmpsl
aad
daa
in
in
frstpm(287
cmp
fdivp
xchg
nop
pop
test
movsl
sarb
xlat
test
dec
cmp
cmp
cmp
sti
out
lock
ja
daa
test
sbb
pop
loopne
mov
dec
dec
add
or
aam
cmpsl
or
add
xchg
pop
in
mov
xchg
scas
mov
fisubl
adc
inc
push
stos
mov
xor
push
adc
aam
pop
dec
push
push
lods
mov
xor
daa
mov
jecxz
jnp
cmpsb
mov
push
mov
sti
push
adc
xchg
in
dec
sbb
movsb
hlt
add
clc
into
push
lcall
push
sub
das
test
jge
mov
outsl
inc
mov
inc
imul
fnstsw
leave
cmc
jecxz
pop
xor
iret
dec
fstpt
jmp
or
and
cmp
mov
dec
jg
or
frstor
push
aaa
jmp
adc
xchg
lret
lea
aaa
dec
rcrb
out
and
shlb
pushf
pop
cli
mul
repz
add
pop
imul
xchg
inc
push
imul
int3
and
push
icebp
insb
sti
enter
aaa
jp
cltd
mov
movsb
pushf
int3
movsl
jns
add
out
enter
scas
iret
cmpsl
jns
shrl
sbb
mov
into
add
arpl
dec
jo
sbb
xchg
push
hlt
dec
arpl
add
jl
icebp
lret
icebp
jecxz
cld
or
lahf
aaa
adcl
test
mov
mov
test
mov
in
or
arpl
addb
ljmp
insb
stos
jge
lods
out
pusha
lahf
pusha
fnstsw
mov
adc
pop
js
shll
cmp
ror
push
test
jge
mov
cmp
fcmovb
dec
and
stos
pop
jge
dec
dec
push
mov
test
adc
stos
jno
jbe
testb
cmp
jbe
test
jno
ret
push
mov
fsts
fimull
xor
sti
loop
inc
inc
loop
fisttpl
insb
xor
sbb
pushf
inc
in
and
gs
cmp
dec
stos
push
push
xchg
movsl
xchg
ja
or
mov
pop
aam
addl
dec
sti
fdivrl
aam
mov
xchg
push
dec
push
jmp
xor
fwait
pop
out
pop
pushf
test
jecxz
add
or
sarb
fs
data16
daa
mov
mov
test
inc
cmp
movsl
loopne
xor
ss
pop
out
jp
scas
push
outsl
sub
sbb
xchg
adc
push
xor
mov
pop
scas
mov
je
sbb
mov
imul
aaa
stos
outsl
mov
xchg
int3
sbb
mov
xchg
aas
pop
pop
sti
push
es
push
iret
aad
cmp
push
inc
cmc
mov
mov
cmpsl
je
insb
lock
ds
push
out
jge
roll
in
sarb
dec
jnp
rcr
ljmp
stos
xchg
jle
push
insb
mov
mov
adc
jo
ret
push
xor
xchg
sbb
ds
cmpsl
jg
lret
mov
xchg
pop
out
adc
nop
inc
shlb
xchg
jnp
pusha
sbb
in
out
int3
sbb
pop
cmp
add
cli
jb
cld
repnz
mov
addr16
mov
test
mov
ret
mov
out
mov
test
mov
rol
cmp
ret
addr16
push
je
fldt
scas
test
cltd
cmp
outsl
lret
push
in
fstp
mov
push
dec
cltd
adc
pop
mov
xor
xchg
pop
push
test
sar
jns
or
xchg
xor
icebp
test
pop
setns
adc
cli
xchg
das
out
xor
mov
push
clc
dec
or
cld
scas
mov
mov
int
sub
dec
cs
aad
jge
jae
xor
lahf
mov
movsb
in
fwait
pop
push
mov
gs
push
adc
rcrl
cmpl
sbb
xchg
cltd
cwtl
call
or
inc
dec
mov
inc
push
dec
push
lock
rcrb
inc
pop
push
jnp
jecxz
out
fisubrs
vmovsd
inc
fstps
xchg
jb
inc
jecxz
push
ss
sar
cmp
inc
sbb
imul
gs
dec
enter
stc
fcmovnbe
addb
insl
lahf
inc
fsubs
mov
pop
mov
push
ja
mov
sub
push
inc
xorb
dec
insb
mov
fldl
imull
ficoml
ds
lods
mov
xchg
loop
mov
jecxz,pt
jl
dec
clc
pop
fists
sub
push
xchg
into
decl
scas
sbb
cpuid
sub
dec
les
roll
cmp
push
mov
sub
xor
push
hlt
fsubrl
mov
cltd
pop
pop
dec
ret
aas
cld
leave
inc
daa
movsb
out
push
lds
jecxz
xchg
xorb
fdivs
lret
jns
call
dec
test
sbb
shlb
mov
pushf
dec
jae
sahf
cmp
xchg
mov
stos
mov
mov
pusha
pop
cmp
add
xchg
scas
adc
mov
add
ret
xchg
rorl
daa
cmpsb
stos
stos
addr16
dec
jne
lret
dec
loop
or
lahf
shrb
ret
mov
jnp
mov
imul
sbb
in
push
dec
out
or
jmp
mov
enter
add
out
shl
cmc
movsl
icebp
cmp
in
out
icebp
mov
mov
lret
and
xor
push
jle
push
negl
dec
dec
daa
cmpb
popf
iret
jle
and
call
adc
mov
int3
inc
movsl
sub
mov
jb
dec
mov
das
popf
out
daa
fcomps
daa
mov
xchg
imul
mov
or
sub
cmp
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
xor
jg
add
pop
out
jle
loope
movsb
fidivrs
mov
into
xor
in
xchg
cmp
je
shl
int3
xchg
sbb
mov
mov
pop
push
cmc
test
dec
push
scas
jg
fsubl
xor
sub
es
xchg
xor
cwtl
adc
or
mov
push
fimull
test
or
mov
dec
or
test
gs
dec
lcall
das
pop
pop
push
leave
in
scas
pop
and
jns
pop
or
push
jle
inc
push
jmp
test
push
sbb
jnp
dec
int
addl
xor
add
inc
dec
xor
fstpl
fsubrl
mov
sbb
ret
xor
cmc
imul
ret
int
sahf
mov
cmp
call
leave
movd
mov
mov
push
sti
imull
ret
imul
pop
sahf
mov
scas
int3
inc
das
xor
ret
ss
in
loop
shlb
jbe
inc
mov
dec
sti
adc
fsubrs
loop
and
adcb
adc
fisubl
mov
lea
dec
ja
mov
xor
in
mov
inc
cmp
lret
inc
ret
in
lea
out
and
imul
bound
inc
aaa
ljmp
scas
rorl
ret
outsl
adc
pusha
dec
std
outsb
mov
aad
mov
xor
mov
dec
mov
icebp
shrb
lods
imul
pop
rclb
in
sbb
jb
lods
xchg
arpl
movsl
mov
icebp
mov
sbb
fcmove
in
add
clc
cltd
sbb
mov
mov
stc
cmp
adc
stc
xchg
aad
inc
cmp
fs
mov
jae
dec
inc
jb
out
cmp
xchg
inc
push
mov
cltd
inc
sub
adc
ljmp
shll
loop
mov
outsb
xchg
rclb
mov
xchg
pop
shrb
into
daa
push
xchg
iret
popf
mov
je
add
ficoml
js
pop
xchg
addr16
pop
jmp
mov
out
imul
push
xchg
sti
mov
mov
pop
ficomps
jns
cmp
aad
pop
mov
ja
andl
add
adc
jl
xchg
add
inc
mov
stos
lcall
and
int
adc
sub
frstor
scas
dec
movsl
subb
aam
mov
mov
scas
mov
ss
jns
dec
add
ds
jb
subb
jne
and
xchg
sub
lret
sbbl
sbb
jae
lret
test
push
sbb
ret
fsubr
in
and
mov
clc
jns
pop
xor
dec
mov
insl
movsl
bound
sbb
in
xchg
aaa
loopne
movsl
jo
push
outsl
mov
adc
leave
popf
aam
jle
cmp
or
int3
fisubrl
daa
aaa
stos
push
lock
push
popf
cmp
push
pop
adc
add
cli
or
shlb
and
arpl
pop
out
or
mov
inc
aas
cltd
cmp
stos
xchg
xchg
mov
stc
and
sahf
push
out
and
lret
mov
sub
dec
hlt
loopne
test
repnz
test
inc
hlt
stos
fidivl
cs
push
lock
repnz
cmpsb
dec
add
pop
mov
test
shlb
imul
push
pop
mov
jecxz
push
mov
jge
cmp
psrad
pusha
mov
push
jp
jb
cmpl
xchg
xor
test
mov
or
jmp
xchg
add
xlat
and
adc
mov
ror
test
addr16
adc
mov
or
fcoms
pop
shll
cmc
inc
in
lods
xor
ljmp
mov
stc
scas
ret
inc
inc
rcll
bound
repnz
mov
push
lods
ror
sarb
jbe
cmp
jle
out
sub
and
out
cmp
inc
fs
and
mov
xchg
andb
orb
cmc
adc
mov
das
bound
mov
mov
push
mov
mov
mov
jecxz
adc
imul
int
movsb
hlt
mov
mov
repnz
aaa
mov
out
and
test
imul
fldenv
push
mov
lods
popf
sti
sub
push
idiv
fidivrl
out
mov
bound
lock
mov
xchg
mov
mov
sub
sub
shr
gs
and
dec
sti
iret
cld
out
mov
loopne
xlat
pusha
cmc
cltd
cmp
and
xor
fbld
dec
mov
xorl
add
xchg
mov
popa
test
in
in
movsb
and
add
imul
cmp
cmpsb
push
adc
jmp
pop
or
adcb
push
std
or
in
movsl
add
orl
adc
in
gs
push
fadd
push
jno
inc
or
divb
mov
push
jg
aaa
out
xchg
inc
repnz
subb
pop
jae,pt
inc
out
xorl
adc
popf
std
mov
sahf
sar
cli
inc
cmp
pop
and
cltd
add
test
test
das
test
adc
mov
cld
lock
rclb
cmp
pop
mov
inc
lcall
sti
jge
out
mov
sub
mov
jb
xchg
pushf
xchg
movsb
jbe
xlat
fnstenv
mov
mov
push
mov
aam
popa
lahf
mov
jbe
or
mov
pop
stos
fisubrs
and
in
sbb
lds
arpl
lods
push
adc
cmp
push
rol
or
mov
sahf
lahf
pop
mov
xchg
push
or
flds
cmp
jecxz
out
push
mov
test
cmp
iret
pusha
in
frstor
add
andb
xchg
test
or
and
adc
mov
cmpsb
cmc
std
cmp
xor
add
addb
push
lret
jmp
jno
xchg
stos
mov
mov
std
sub
adc
dec
dec
mov
imul
xor
cmp
sbb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
js
or
add
andb
cmp
mov
sub
aas
xchg
jb
sub
mov
mov
aad
test
adcb
sbb
das
sar
lods
sbb
jno
scas
jl
jg
in
lea
std
and
call
push
xor
mov
test
stos
mov
out
and
pusha
jns
fucomp
jp
cs
dec
xchg
mov
aam
adc
push
push
in
mov
es
pushf
jns
fdivs
cmp
pop
fsubl
bound
inc
outsl
outsb
into
insl
aad
jno
sahf
sub
stos
sbb
push
inc
inc
and
sub
aas
rorl
xor
fidivrs
cmp
ret
sub
punpckhwd
mov
add
call
ss
aad
ja
or
cld
pop
sub
add
mov
pop
sub
dec
cmp
nop
sbb
sub
and
not
fwait
test
or
mov
jl
lea
add
sti
pcmpgtw
mov
test
mov
jp
jecxz
andl
popf
movb
clc
and
or
xchg
jne
push
pop
or
mov
push
mov
push
lds
enter
push
jno
sti
push
push
pusha
dec
xchg
pop
pop
push
orl
cmc
loop
iret
orb
dec
cmp
sbb
adc
not
push
ret
arpl
cld
mov
aaa
dec
push
in
mov
imul
movsl
jbe
jmp
push
lods
imul
jb
test
mov
mov
adc
or
in
arpl
aam
lret
add
movsl
push
aas
push
lds
inc
push
xchg
lret
mov
dec
outsb
aas
mov
cli
lcall
dec
inc
mov
stos
fldcw
and
movsb
ja
cmp
hlt
cmpsb
adc
test
push
sti
pop
mov
cltd
inc
icebp
pushf
jne
sub
mov
cwtl
push
leave
mov
es
pusha
inc
xchg
mov
lea
jmp
dec
dec
in
insb
mov
std
lret
mov
test
xor
or
inc
pop
add
aaa
push
outsl
pop
or
lahf
sarb
xlat
or
pop
mov
mov
int
mov
adc
jmp
dec
dec
mov
rolb
test
jg
out
test
lods
cltd
push
pop
xchg
or
popa
lcall
ss
jmp
lock
xchg
push
fimuls
push
jb
fucomp
dec
out
sti
dec
or
push
insb
ret
inc
sbb
mov
push
dec
jno
pushf
out
jl
subb
scas
and
fbstp
sahf
or
scas
call
adc
add
in
push
rcll
xchg
lret
cmp
lahf
inc
pop
inc
push
shrb
sbbb
outsl
pop
stos
dec
pop
fwait
andl
inc
push
fcomip
cmc
addr16
sbb
and
mov
cmp
push
adc
jmp
dec
pop
nop
sti
mov
cmp
jle
add
les
xchg
je
inc
insl
mov
clc
push
add
ds
sub
add
mov
dec
push
test
mov
add
jbe
jmp
shll
or
sbb
inc
push
sti
ss
push
cmp
cltd
iret
xor
imul
jae
shl
sub
mov
dec
mov
popa
jl
mov
fcomps
inc
subb
mov
pop
fiaddl
pop
scas
pop
lods
mov
iret
popf
xor
loope
addr16
jo
jnp
pop
lock
adc
jo
sbb
insb
sub
push
ja
negl
jmp
add
push
pop
fdivs
inc
xchg
in
pop
dec
xchg
fs
ret
jae
dec
fdivrl
lret
test
cltd
adc
and
ljmp
in
dec
xor
lods
lods
das
arpl
es
nop
inc
out
xor
or
pushf
xchg
je
xchg
pop
and
push
mov
mov
cmpsl
adc
jmp
dec
js
rcrb
lock
pop
mov
push
adc
gs
pop
stos
negl
cmp
cmc
lcall
loop
sbb
push
movsl
es
xchg
icebp
xorb
pop
rcrl
or
std
jnp
push
popl
lret
pop
daa
test
xor
inc
int3
das
test
leave
dec
mov
cli
cmp
xchg
popf
pushf
dec
cmp
movsl
sbb
dec
sbb
jns
xorb
fmul
jbe
dec
call
mov
mov
mov
stc
fld
outsl
int3
adc
test
xorb
clc
jmp
mov
test
push
pop
adc
pop
test
xchg
repz
fnstcw
sbb
inc
mov
call
fwait
mov
xor
dec
lods
pusha
mov
rcl
aaa
decl
mov
push
inc
mov
hlt
inc
arpl
xor
or
add
ret
inc
aaa
push
dec
adc
fmull
pop
stos
jne
jbe
inc
sub
pop
fistpl
daa
sti
push
xchg
test
pusha
cwtl
in
icebp
mov
fwait
dec
xor
dec
xchg
jb
push
in
adcl
push
loopne
jne
ljmp
xchg
mov
leave
fisubs
lea
popf
outsl
adc
jbe
xchg
es
or
mov
nop
aam
sub
jnp
incb
sti
sti
pop
mov
or
decl
pop
and
push
rclb
mov
xchg
sub
pop
loope
mov
jg
jb
paddsb
or
mov
adc
fwait
cwtl
rcl
lret
push
pop
add
mov
add
std
stos
pop
jae
pusha
bound
push
mov
loopne
inc
out
stc
jne
icebp
shlb
xorl
jp
sbb
or
das
xchg
add
lods
and
pusha
add
xchg
lcall
fucomp
pop
psllq
lret
adc
mov
cmp
push
and
inc
jg
sbb
hlt
roll
mov
mov
xchg
lods
mov
sub
xchg
popa
xchg
dec
pop
movsl
pop
cltd
insb
leave
jmp
stos
inc
testl
pop
mov
sahf
imul
lock
mov
adc
and
push
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
mov
add
icebp
jle
sub
mull
ds
mov
inc
aam
inc
aad
gs
sbb
leave
scas
mov
mov
dec
mov
movsb
adc
jg
mov
push
push
repz
push
jno
jge
in
cs
shr
lea
cmp
inc
lods
lods
sahf
popa
xchg
stos
pop
cmp
fnstsw
int3
stos
insb
inc
in
int
sub
repnz
xor
sub
nop
jne
fbstp
mov
es
mov
decl
clc
in
mov
xchg
sbb
je
je
mov
jecxz
fs
dec
test
pop
jae
jp
push
inc
jle
jnp
xchg
lods
pop
int3
ret
xchg
lahf
pop
mov
and
mov
das
or
rcl
dec
pop
pop
xchg
daa
xchg
xchg
push
cltd
fimull
lahf
data16
mov
sub
rolb
jge
sbb
icebp
clc
cmp
movsb
xchg
in
adc
or
shrl
hlt
or
push
mov
pop
out
pop
xor
or
data16
lea
and
mov
ficoml
cs
ja
push
add
pop
xor
jbe
icebp
std
loopne
mov
fwait
push
pop
fiadds
shrb
rclb
push
jb
test
mov
adc
jmp
cmp
mov
andb
iret
pop
aad
push
xor
jmp
and
jo
not
xchg
in
add
shll
xchg
cli
mov
ds
pop
xchg
or
xor
jle
test
pop
xchg
shl
jmp
sbb
jae
mov
mov
adc
icebp
in
jb
sbbl
fisttps
mov
lahf
in
sub
xchg
adc
fiadds
sbb
mov
xor
out
cld
sarl
push
movsb
xor
sub
js
movsl
enter
or
push
inc
enter
cmp
fildl
outsb
mov
ret
test
roll
cmp
nopl
outsl
xchg
sbb
push
mov
testl
repz
mov
adc
bnd
clc
aam
mov
popf
enter
xchg
and
pop
cwtl
je
ja
clc
jg
cmp
fucom
jbe
call
pushf
cs
add
fbld
mov
dec
jne
and
and
scas
or
xchg
outsb
int
xchg
negl
dec
dec
sarb
cmpsl
iret
scas
jl
pop
jne
add
shlb
in
xor
aas
cs
repnz
jecxz
jae
fsubrl
inc
lods
ja
xchg
in
cmp
push
js
mov
jae
push
add
es
cmp
mov
out
loopne
in
out
pop
sbb
and
jecxz
je
xchg
out
pop
imull
mov
xchg
scas
push
and
mov
add
cmp
mov
mov
outsl
jns
test
cli
rcl
ret
sbb
jns
hlt
mov
mov
sbb
sub
idivb
in
push
in
cli
pop
imul
dec
sar
xor
int
cli
pop
fsubp
outsl
dec
mov
outsl
dec
sarl
dec
pusha
fistps
xchg
jbe
sub
inc
icebp
seta
cmp
pop
pop
das
mov
cld
mov
scas
ret
int
mov
fcoms
inc
stc
ret
ret
inc
sbb
push
mov
push
inc
mov
cmpsl
out
sub
stos
lea
lds
imul
in
sbb
sub
int
scas
popf
lcall
mov
loopne
xchg
mov
stos
adc
repnz
cmp
mov
imul
mov
xlat
jae
inc
dec
pop
negb
test
inc
jo
lock
adc
sbb
fs
cmc
fildl
stos
out
aaa
adc
pop
mov
mov
inc
adcb
out
mov
in
push
sti
aad
mov
xchg
mov
psubsw
push
push
pop
cmp
out
or
test
shrl
or
mov
jno
in
mov
ljmp
imul
mov
and
iret
inc
adc
inc
sbb
jno
decb
repz
js
movsl
in
call
iret
jno
leave
stos
pop
push
cmpsb
mov
jecxz
jo
push
sub
cmp
xor
pop
stos
cmc
xor
shl
xchg
add
mov
jnp
pop
loope
xor
jge
adc
jnp
int3
subb
outsb
mov
jo
ret
lahf
push
cmpsl
lahf
repz
imulb
lods
mov
ljmp
das
jbe
or
lock
xchg
xchg
dec
pop
filds
pop
mov
push
movsb
sub
push
bound
cmp
mov
cli
scas
xor
mov
leave
mov
lret
jp
adc
mov
lds
push
lcall
adc
outsb
inc
movsb
push
mov
fidivs
inc
fadds
test
xor
push
cs
cmp
out
mov
out
loop
js
mov
jge
rcrl
call
xchg
sti
sbb
sub
mov
in
ret
stos
pop
xchg
mov
in
dec
pop
lods
call
mov
out
cmp
fisttpl
mov
xchg
rolb
xchg
or
and
lock
push
mov
pusha
into
in
push
lds
push
out
pop
mov
cmp
sub
xor
rdtsc
leave
out
aas
daa
fwait
test
enter
mov
xor
xchg
ret
xor
test
imul
mov
das
inc
aaa
lahf
data16
push
inc
andnps
out
ljmp
nop
out
jns
cmp
cmpsb
xor
sbb
jmp
ljmp
js
rcrb
insb
leave
adc
rcl
add
mov
nop
hlt
fsub
xor
ret
push
stos
lahf
addl
cmp
push
lret
aad
push
xchg
or
adc
xchg
adc
in
lds
daa
and
cmp
cmc
add
outsl
mov
lods
mov
les
cmp
fisubrs
or
jl
sub
lret
js
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
je
xor
mov
add
stos
or
push
mov
cmpsb
test
push
pusha
xor
push
mov
cwtl
pop
xchg
cmp
sbb
pop
fwait
loope
pop
inc
scas
es
scas
inc
mov
or
pop
ja
adc
sarb
insb
cmc
in
adc
fs
pop
sbb
inc
push
and
es
xor
jle
inc
out
aaa
pop
pushf
daa
std
mov
ficomps
sub
daa
clc
add
push
jae
lods
shr
cltd
test
fiaddl
mov
jb
clc
js,pn
cmp
xchg
arpl
sbb
addr16
fadds
stos
jge
mov
dec
and
or
adc
iret
mov
icebp
and
sbb
add
repnz
jne
in
ja
fnstenv
hlt
xchg
cmp
movsb
in
push
mov
in
arpl
pop
ljmp
jl
mov
push
ret
pop
xchg
inc
cmpsb
xchg
lea
fldl
add
imull
popf
pop
push
jp
into
xchg
cmc
ret
mov
xor
xchg
sahf
xor
into
cmp
movsl
mov
or
aas
repz
dec
adc
xor
sbb
comiss
push
mov
ror
ja
clc
pop
shlb
push
fstpl
pop
jmp
push
insl
mov
cmp
jb
dec
pop
xor
movsl
cli
insl
aad
sub
cltd
lret
sbbb
jmp
xchg
mov
bound
outsb
inc
adc
fists
or
mov
xor
hlt
cmc
pusha
inc
paddsb
notb
jg
push
rcll
fadds
cld
jns
repnz
enter
cpuid
mov
jne
sub
jns
stos
and
jno
jnp
lcall
arpl
in
xor
sti
jecxz
lret
xchg
ror
pop
pop
inc
bound
js
rcr
add
movsb
push
adc
aad
mov
mov
dec
adcl
pop
loop
mov
hlt
out
imul
adc
pop
mov
dec
call
add
mov
int
cmc
nop
and
cmp
sub
xchg
addr16
mov
xor
dec
push
in
mov
inc
xchg
sub
push
les
cmp
sub
out
mov
push
lcall
clc
push
dec
leave
sub
or
imul
cwtl
sti
mov
sbb
fisubrl
mov
fwait
jp
test
aaa
lcall
xor
and
and
inc
pop
inc
jbe
in
mul
lret
mov
dec
cmpsb
mov
xchg
aaa
movsl
ret
xor
xor
jb
add
mov
pop
je
lahf
hlt
into
shrl
outsb
cmp
xchg
in
inc
lahf
outsl
adc
sub
addr16
sbb
mov
test
nop
std
sbb
push
cltd
adc
mov
ljmp
xor
xor
adc
push
inc
mov
xor
xchg
loopne
mov
ret
or
sbb
in
loop
sarb
outsb
push
loopne
push
andb
out
outsl
out
push
mov
gs
repnz
dec
leave
jne
jbe
clc
or
sub
shrb
xchg
jp
xor
daa
pop
mov
or
imul
xchg
movsb
loopne
xor
movsb
ljmp
and
shlb
jg
mov
xor
xchg
or
mov
mov
lods
and
pop
inc
jno
jb
pusha
pop
mov
cmp
stc
jae
fcmovb
xor
arpl
jno
ljmp
xchg
dec
sti
test
repz
bound
test
pop
sbb
popa
and
ljmp
sti
inc
outsb
add
stc
mov
adc
mov
push
sub
mov
arpl
cmp
rolb
fstps
inc
xchg
pushl
ja
inc
and
inc
mov
xchg
fs
pop
mov
ret
push
daa
or
xor
add
fcmovnu
out
mov
and
std
inc
jo
shlb
jae
push
imul
mov
mov
outsl
inc
xchg
stos
pushf
and
dec
je
jnp
andb
xor
aam
adc
jns
outsb
xor
daa
in
xlat
ret
lds
xor
or
pop
push
mov
mov
movsb
mov
rolb
aaa
dec
push
out
hlt
sbb
dec
xchg
jne
pop
sbb
jge
jmp
outsb
push
sbb
inc
in
cmp
add
pop
test
mov
std
stos
or
mov
xlat
andb
xchg
fwait
mov
outsl
adc
xchg
fildl
mov
mov
fdiv
inc
cmp
popf
call
jle
cmp
imul
sahf
data16
jnp
imul
xor
and
enter
mov
cmp
int3
mov
leave
sub
leave
stos
jns
das
aaa
cltd
int3
xlat
jns
adc
xchg
dec
xor
adc
sub
ljmp
mov
cmp
aaa
and
or
pop
leave
out
sub
add
xor
push
ds
sbb
cli
lret
js
popl
outsb
insb
push
sub
test
and
shlb
sub
cmp
jbe
stos
lret
fbld
adc
inc
lret
aas
mov
mov
inc
and
jg
adc
stos
sti
mov
shll
pushf
int
push
pop
push
xlat
jno
out
fldenv
testb
sahf
sbb
lods
ret
xchg
shlb
dec
rclb
push
jae
repnz
lock
mov
mov
repz
stos
hlt
and
sbb
xor
xlat
jae
jbe
jecxz
or
nop
jl
jne
add
popa
fcompl
add
js
cltd
cltd
int3
add
decl
xlat
je
dec
outsb
pop
mov
lods
dec
loope
test
ret
pop
arpl
test
es
jnp
ljmp
fsubl
push
ja
sbb
adc
dec
cli
xchg
out
push
ret
xchg
pop
jecxz
and
pop
jbe
hlt
push
cmp
push
les
add
outsb
sub
es
iret
push
push
arpl
xchg
hlt
rol
xchg
mov
sbb
and
imul
repnz
cmp
jl
inc
pop
popa
shll
mov
or
fs
fcmovnb
ficomps
lods
dec
jg
in
inc
mov
fs
pop
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
icebp
es
enter
adcb
test
sbb
loop
aaa
ret
and
inc
dec
pop
xor
sub
stc
sbb
hlt
ljmp
nop
rorb
pop
dec
push
shr
out
cmp
adc
ret
push
outsb
mov
in
xor
mov
je
or
or
in
mov
xchg
call
sbb
lods
nop
fists
or
xchg
sti
fldenv
shr
inc
xor
stos
fxch
movsl
lock
pop
adc
aad
std
lret
notb
fildll
lock
mov
and
aam
sbb
in
sub
add
int3
and
push
movsb
push
lret
lock
push
or
adc
adc
pusha
xchg
xor
arpl
inc
xor
rcrl
cmp
mov
adc
lods
add
ret
setl
lods
out
push
cld
aam
mov
popf
idivb
pushf
inc
jecxz
inc
addr16
movsb
mov
sbb
adc
mov
cld
cmc
rolb
popa
add
adc
lds
sbb
cli
push
xchg
push
sub
loop
mov
xlat
xchg
adc
adcb
lahf
stos
fdiv
or
and
insl
xchg
xchg
out
mov
dec
stos
jae
clc
mov
pushf
ljmp
pop
add
js
insb
xchg
cmp
jmp
pop
fdivr
sbb
repnz
repnz
pop
cwtl
popw
int3
sarb
xlat
push
std
inc
cmp
inc
std
clc
push
or
sbb
cmp
adc
call
and
or
jmp
je
push
mov
inc
pusha
jmp
test
and
in
fbstp
je
sahf
cmpb
je
data16
or
addr16
imul
push
lret
cli
std
or
fs
dec
push
dec
lock
mov
shr
aam
pop
pop
cltd
fcmovu
push
jno
push
xchg
mov
dec
in
pop
ss
std
mov
add
imul
scas
iret
pop
iret
test
add
mov
sahf
jmp
mov
mov
push
lcall
repnz
fistl
fldl
push
int
xor
push
js
adc
aaa
leave
mov
fnstcw
jg
test
inc
push
sbb
pop
inc
sub
cmp
xor
inc
dec
pop
add
in
fs
inc
add
xchg
icebp
sbb
jae
xchg
push
dec
outsl
fcom
test
subl
xchg
fwait
ja
push
int3
lret
dec
lret
mov
int3
shrb
mov
into
das
dec
push
or
mov
push
cmpsl
dec
dec
mov
sub
xor
gs
adc
sbb
fcoml
mov
pop
add
push
cs
pop
dec
in
loop
inc
sbb
sbb
pushf
push
ds
adc
push
mov
mov
cmpl
xor
sbb
into
jnp
shl
adc
mov
xlat
lahf
xor
fmulp
jbe
xchg
xor
dec
jne
mov
xchg
pushf
adc
and
push
mov
fidivrl
lods
sub
enter
jns
mov
imul
insl
not
xor
push
sarl
xor
sti
pop
stc
xchg
bound
cmp
out
repnz
jnp
jp
mov
jae
lret
lock
mov
xchg
fisubrl
stc
das
cmp
adc
test
loope
stos
arpl
out
jl
mov
mov
inc
add
push
and
lock
sar
push
xchg
jno
std
adc
add
xlat
test
jns
xchg
jno
dec
sub
insb
sbb
push
sbb
imul
xor
test
mov
ja
fldl
enter
mov
in
ss
jg
test
shr
sbb
ja
out
add
dec
in
jbe
pop
addr16
lds
popa
dec
scas
mov
lret
mov
cmp
push
or
addb
or
xchg
lcall
inc
adc
test
jnp
insb
scas
sub
inc
mov
inc
iret
cltd
pop
push
sbb
pop
sahf
and
and
push
xchg
es
jmp
sub
outsl
xchg
cwtl
mov
fsub
sub
add
sub
sbb
or
push
pop
mov
mov
call
rcrb
or
sub
cmp
mov
nop
out
imul
orl
inc
dec
shl
sbb
add
sahf
scas
lea
mov
pushf
sbb
movsl
mov
cs
jmp
insl
lret
or
lahf
out
inc
jnp
arpl
jnp
mov
or
push
sub
lods
imul
scas
ret
outsl
mov
cwtl
or
mov
push
leave
sub
add
popa
ds
cld
nop
add
xchg
jno
add
add
shll
lcall
push
stc
push
sub
pop
push
xchg
aaa
sbb
fisttpl
dec
pop
lods
dec
aad
rdmsr
mov
test
incb
jge
pushf
mov
adc
out
dec
push
lcall
ds
xchg
xchg
sub
push
mov
aaa
js
mov
outsl
inc
jnp
out
or
inc
and
xor
add
cs
inc
adc
pop
roll
dec
pop
mov
inc
adc
jmp
std
das
in
rcrl
push
sub
shlb
fsts
es
ffree
aam
fisttps
dec
jp
fs
mov
cmp
stos
pop
cmp
into
mov
sub
xchg
leave
dec
lahf
xlat
jle
xor
loop
pop
add
fwait
jg
inc
dec
mov
add
push
lds
cmpsb
lods
loopne
jecxz
mov
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
cli
ret
loope
invd
add
cpuid
xorl
xor
dec
jle
push
mov
xor
or
xchg
in
lds
inc
dec
push
pusha
mov
test
and
gs
loope
cld
and
mov
jmp
mov
loop
add
or
mov
sbb
jle
rclb
and
jge
mov
divb
cld
aad
xchg
dec
mov
movsb
mov
into
sbb
push
cmpsl
mov
cmp
mov
in
mov
inc
in
addr16
ret
mov
add
pop
dec
aad
enter
popa
xchg
push
adc
popf
jno
mov
scas
fstpt
addb
adc
adc
dec
push
xchg
or
pmaddwd
pop
fmul
pop
divb
lahf
fs
xchg
cmpsb
fdiv
movsl
xchg
jle
xor
mov
or
cmc
test
sahf
loope
in
int
jno
pop
inc
out
adcb
add
mov
shrl
xor
add
int3
jl
mov
movsb
daa
insl
sub
dec
pop
dec
nop
ss
clc
int
add
and
sub
cltd
push
daa
adc
jg
mov
mov
mov
scas
push
test
es
cmp
xlat
bound
cwtl
adc
in
mov
lcall
mov
and
jne
mov
add
jge
call
sbb
xchg
sub
sub
jnp
imul
mov
out
xlat
leave
stc
popf
xor
cmp
mov
ljmp
aas
dec
nop
sub
rorb
shl
xorl
xlat
ret
test
cmp
or
lahf
push
lea
push
ds
lret
js
mov
mov
and
es
mov
xlat
push
adc
dec
sub
insl
pop
sbb
movsb
mov
fs
sbb
jl
dec
sahf
xchg
pop
mov
mov
push
es
inc
in
repz
cmp
add
mov
and
pusha
int
xchg
call
imull
pop
ret
jnp
aas
add
fucomip
jb
scas
or
roll
insb
sub
cmp
stos
mov
jp
je
fld1
nop
lock
ljmp
push
adc
sub
out
ret
fsubs
rcl
imulb
or
inc
or
sahf
adc
scas
mov
and
jle
in
xchg
mov
mov
clc
jmp
jge
jle
ss
outsl
fildll
jbe
orl
int3
xor
xor
dec
ja
insb
mov
cmpsb
pusha
xchg
js
daa
push
mov
mov
xor
ljmp
mov
nop
inc
sarb
aam
dec
adc
popf
ss
and
cmpsl
aad
aad
loopne
mov
mov
sti
pop
cmp
scas
and
in
mov
popf
cmp
aad
pop
pop
out
lock
lret
stos
cmp
sub
pop
inc
jmp
sbb
mov
push
or
incb
shl
ljmp
lret
push
out
xchg
sahf
sbb
mov
rep
mov
rclb
sub
or
mov
imul
cmp
xor
mov
add
ficomps
sbb
testb
rorb
scas
hlt
and
mov
xchg
pop
inc
bound
xor
add
mov
add
push
mov
ret
inc
mov
mov
outsl
out
xchg
mov
out
movsb
repz
iret
push
ss
cmc
push
je
jle
cli
and
and
leave
mov
loop
sti
add
xor
rcl
popf
inc
lods
fists
or
sbb
mov
hlt
or
rclb
mov
dec
add
jmp
in
repz
cld
dec
cld
jl
cmp
jbe
push
roll
sub
cmp
lods
pusha
adc
sub
mov
shll
mov
in
jmp
mov
push
pop
jne
inc
cmp
and
data16
scas
call
sti
fs
clc
cmp
xchg
jmp
mov
jp
xchg
int
cli
adc
in
lcall
add
aad
push
fs
mov
scas
clc
mov
xchg
dec
mov
cli
mov
jo
pop
mov
add
mov
jmp
int3
clc
andb
mov
jp
lods
arpl
int3
push
pop
mov
test
lret
or
jbe
ret
mov
mov
xor
inc
lods
mov
test
and
cmp
xchg
popf
inc
sbb
dec
enter
mov
mov
outsb
test
inc
cmp
adc
rcl
popa
xlat
dec
adcb
mov
jle
inc
mov
cli
dec
mov
cli
mov
adc
cmp
inc
cli
out
sub
jl
xor
mov
cmp
pop
bound
shlb
ds
cmpsb
add
adc
add
mov
push
enter
popa
jb
insl
mov
pop
shr
ljmp
cld
loop
ds
and
mov
gs
lock
cli
loop
fcompl
sbb
lahf
popa
jbe
ret
lret
dec
mov
imul
xchg
xorb
pop
jno
mov
jae
inc
sbb
jo
sub
and
loope
or
enter
loopne
or
or
es
je
push
lock
ljmp
aam
leave
xchg
sub
cmpsl
stc
ds
fisttpll
mov
fnstcw
cmc
popa
sub
subl
cli
lods
sbb
int3
les
add
fcomps
add
xchg
int
mov
into
mulb
mov
loopne
jecxz
mov
push
leave
dec
pop
out
pop
adc
or
xlat
insl
cmp
or
gs
jno
out
jne
cmp
jo
pop
pop
cld
and
imul
cmp
xchg
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
or
mov
invd
add
bswap
sbbl
adc
push
or
out
orl
sub
addr16
add
gs
dec
mov
lods
bswap
sub
enter
shrb
add
xor
add
fdivrs
or
pop
cmpl
rcr
add
pop
lret
in
push
mov
inc
aad
mov
xchg
repnz
ljmp
jnp
push
mov
ror
ja
test
movsb
jns
lahf
mov
pop
dec
rclb
fwait
lods
push
enter
les
fucomi
jp
pop
and
sti
mov
popa
push
shrb
or
mov
xorb
loope
cmp
es
pop
rol
lahf
jne
stc
mov
fstps
stc
adc
shll
fists
dec
sbb
in
jno
lahf
or
mov
stc
mov
cmpsl
loope
jg
test
arpl
out
mov
test
mov
sub
test
mov
push
mov
xchg
movsb
inc
sbb
aaa
icebp
xchg
outsl
jae
sub
cmp
xchg
inc
sub
mov
add
dec
xor
sbb
push
out
lahf
cmpsb
stc
lcall
and
jl
xor
ss
dec
stos
rorb
test
xchg
ljmp
fldt
subl
nop
inc
in
sub
js
pop
loopne
jge
mov
xchg
test
jae
adc
loopne
jge
and
loope
sbb
dec
dec
pop
ret
xorb
cwtl
xor
ret
mov
inc
test
or
adc
xor
or
or
and
icebp
push
mov
sub
mov
out
imul
ljmp
stos
jl
das
lods
mov
push
ds
xorl
mov
je
and
or
cmpsb
mov
push
pop
and
add
push
test
imul
cwtl
jns
xchg
leave
aas
add
lea
aam
aam
sub
test
mov
sbb
cmc
out
mov
xchg
or
aad
and
push
das
lcall
jmp
mov
mov
xchg
cli
dec
add
lret
cmp
cmp
sub
cmp
jge
pusha
xchg
shlb
or
inc
popa
loopne
mov
ljmp
jmp
mov
push
fs
pop
inc
xchg
idiv
and
movsl
sbb
std
jne
mov
out
daa
mov
xor
mov
jle
sub
decl
in
mov
or
add
insl
or
sti
sti
push
ret
push
inc
scas
and
ljmp
addb
pop
out
xchg
aam
push
mov
roll
add
incb
aad
jb
push
sub
dec
inc
cltd
and
jno
nop
cwtl
jmp
loope
mov
scas
nop
push
movsb
andl
xor
dec
imul
jae
stos
fldcw
xchg
xlat
adc
pop
inc
jge
inc
pop
cmpsb
push
cli
sahf
mov
ds
mov
sbbb
test
lahf
adc
pop
imul
xchg
xchg
pop
mov
outsl
loop
push
in
xchg
sub
inc
outsb
pop
dec
imul
sti
add
sub
sub
adc
push
pop
ljmp
and
divl
lods
add
in
and
sbb
popa
sbb
cmp
jecxz
iret
popa
mov
or
sarb
bound
dec
outsl
cmpsb
roll
pop
sub
nop
mulb
les
or
je
sub
jno
iret
cld
mov
orps
mov
stos
repz
test
or
in
rcl
push
cs
test
scas
bound
jo
out
jmp
repnz
push
mov
ja
rcll
jb
mov
out
sub
cmp
cmp
push
mov
pushf
xchg
push
pop
sub
aad
push
lock
cmp
test
movsl
lds
sbb
pop
ja
mov
loop
loope
xor
aaa
gs
push
data16
loopne
outsb
mov
add
or
rol
mov
xchg
rcrb
inc
sbb
inc
sub
in
cmc
or
stc
cmc
iret
mov
mov
add
inc
jle
into
bound
push
test
sbb
mov
lods
mov
rep
mov
sahf
addr16
sbb
int3
cli
adc
jge
or
mov
aas
daa
and
lods
insb
repnz
jb
mov
out
outsl
int
aad
and
sbb
sub
mov
pop
jbe
in
mov
cmp
jle
mov
cmc
in
adc
adcb
aam
xor
inc
ficompl
push
addr16
or
pop
shrl
push
cmp
repnz
nop
sarb
mov
push
jp
dec
inc
jle
and
cmp
hlt
mov
notl
jg
jecxz
fiaddl
jbe
sbb
pushf
sar
mov
cmp
and
icebp
loope
dec
push
ret
add
clc
insb
mov
xor
sarb
inc
inc
stc
test
cmp
js
xchg
std
in
popf
test
fcomps
sub
sub
add
xor
je
sbb
cltd
scas
xor
mov
mov
into
jne
mov
pusha
xor
cli
fsubrs
jmp
sahf
popf
test
cs
arpl
jnp
sbbl
fcoms
out
mov
pop
inc
adc
and
and
call
popf
mov
pop
fmuls
jae
movsl
ret
add
cli
mov
lahf
xor
decl
shll
xchg
jb
xchg
nop
cmpsb
pcmpeqb
dec
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
cmovs
bnd
adc
cmp
mov
int
enter
data16
mov
addb
or
mov
cmc
aaa
scas
mov
mov
dec
out
fwait
sbb
js
les
loopne
test
lock
xchg
push
in
mov
aam
xchg
adcb
xchg
mov
cmp
lcall
adc
inc
jp
ljmp
out
sahf
je
pop
inc
dec
idivl
nop
rcr
jb
fiaddl
sbb
and
adc
ds
lret
mov
lret
pop
pushf
cld
adc
jno
xchg
jg
mov
push
ljmp
inc
call
stc
sub
mov
lret
ret
mov
dec
jmp
push
jl
lret
clc
test
pop
sub
adc
dec
fstpl
mov
dec
mov
mov
dec
in
fbld
mov
mov
stc
mov
stos
adc
pop
subl
jbe
scas
insb
subl
mov
inc
mov
sbb
in
pop
inc
test
push
test
push
xor
int
insl
adc
imul
je
inc
in
jno
sub
add
or
lcall
push
nop
xor
sub
or
mov
adc
rcl
dec
stos
sbb
enter
jno
ss
out
mov
and
jnp
addl
and
ja
pop
inc
xchg
insb
hlt
push
in
pop
test
or
jns
stos
shr
lret
cmc
xchg
push
data16
fwait
divl
sti
dec
xchg
fs
nop
pop
jb
aam
xorb
cvtps2pi
inc
push
adc
pop
in
mov
mov
arpl
loopne
fwait
push
icebp
push
cmp
insl
pop
push
dec
cltd
arpl
insb
pop
cwtl
adc
pop
mov
or
inc
imul
or
fdiv
or
pop
scas
fstl
in
pop
clc
sbb
fcmovnbe
jp
loop
lock
repnz
push
call
out
test
out
into
xor
add
dec
test
jle
xor
jno
mov
dec
setae
lcall
inc
mov
mov
add
jns
std
xchg
nop
sub
push
jg
xchg
cmpsb
iret
leave
cmp
inc
inc
or
repnz
ficoms
jg
jnp
insl
inc
aas
clc
cmc
or
mov
in
ljmp
setnp
stos
scas
in
out
jno
sub
or
lret
jb,pn
les
dec
imull
jnp
lds
fisubs
lea
shrl
scas
and
cmc
inc
adc
mov
test
fld
loope
mov
enter
and
inc
or
pop
jge
test
hlt
popf
sub
iret
push
pop
mov
mov
stc
out
xchg
imul
push
adc
call
and
data16
inc
into
xor
xor
stos
xchg
aad
adc
iret
mov
hlt
sub
jo
push
icebp
call
ret
pop
outsl
sbb
sbb
shlb
add
xor
inc
adc
jo
sub
loopne
stos
decl
push
jmp
jle
mov
jb
xor
add
test
or
mov
and
aas
movsb
or
mov
mov
pop
rcrb
in
add
imul
xor
fs
test
mov
jge
cs
daa
lods
xchg
imul
adc
and
jp
jno
dec
cmpsb
push
or
xor
cmp
mov
inc
mov
cld
xor
dec
mov
cmp
push
mov
aas
adc
and
jo
and
pushf
and
rorb
pop
ss
mov
jp
mov
test
fidivl
jp
xchg
jbe
shrl
dec
dec
test
mov
movsl
ss
out
mov
ret
hlt
stos
punpcklbw
xchg
mov
dec
pop
jl
add
sbb
cmp
sub
sbb
adc
pop
or
popa
ss
push
aad
pop
cli
or
or
lock
addr16
cmp
sbb
mov
pop
mov
dec
inc
dec
icebp
adc
cmpsl
pop
jae
xchg
xlat
popf
mov
pop
mov
or
sarl
dec
mov
sbb
sub
test
push
icebp
push
pushf
sbb
rcrl
fwait
xchg
jnp
sbb
sbb
jo
mull
stos
mov
mov
cmp
or
je
pop
lahf
pop
movsb
stc
mov
inc
sbb
bound
push
popa
repz
add
idivl
inc
outsl
mov
in
jle
and
mov
jecxz
loope
daa
ret
push
stc
add
mov
clc
sahf
std
fistpll
or
lea
dec
addr16
aad
pop
in
mov
xor
push
fs
xchg
jbe
out
mov
push
je
add
and
out
out
adc
dec
test
je
sbb
out
pop
rorb
data16
ja
jge
jne
adc
mov
xchg
stc
pop
sub
sbb
xor
dec
pop
aam
mov
jmp
jmp
decb
xor
lea
cmpsb
scas
push
push
sahf
sahf
repnz
mov
fsubs
int
pop
or
ss
adc
fdivp
xchg
or
in
outsl
dec
sti
mov
push
lret
xlat
and
sbb
push
push
gs
std
imul
cli
xor
mov
adc
arpl
mov
das
xchg
fisubrl
dec
mov
jb
popf
sub
sbb
adc
sbb
sub
jmp
mov
sarb
loop
cmp
loope
arpl
mov
sub
ja
mov
mov
jmp
push
adcb
sarl
cld
je
push
push
inc
lret
sbb
adc
xchg
mov
xchg
inc
enter
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
std
cli
or
cwtl
test
pfmax
ffreep
dec
es
dec
sbb
dec
fistpl
and
dec
fldcw
repz
pop
xchg
loopew
dec
sbb
add
sub
xor
mov
or
call
inc
inc
mov
jecxz
xor
jg
jecxz
ret
dec
push
or
stos
lods
xchg
aaa
sarl
xchg
test
and
repz
cmc
out
ss
out
clc
loop
push
sub
jge
pop
fwait
xor
cmpsl
push
mov
imul
jnp
sahf
push
cltd
rcrl
ja
jge
iret
cmpsb
cmpsb
aad
xor
mov
xor
inc
or
mov
loop
sub
mov
cmp
aaa
sbb
jecxz
or
sti
mulb
jmp
adc
aas
push
jns
push
enter
loop
xchg
jne
ror
cmpsb
mov
call
addr16
xchg
mov
mov
rol
pop
mov
lret
jp
sbb
and
jbe
xchg
xor
sub
fs
cs
repnz
mov
lahf
cli
add
pusha
divl
jo
fldenv
cld
inc
sbb
js
xor
clc
out
lods
mov
cmp
jno
shlb
adc
or
and
iret
loope
sarb
std
mov
xchg
xchg
mov
adc
fmul
adc
fidivl
ftst
xchg
ret
movsl
add
cmp
repnz
es
lock
xchg
inc
mov
andl
nop
das
push
cmc
inc
pop
push
int3
inc
pop
bound
sbb
rcrb
sub
dec
pop
leave
and
mov
adc
jecxz
inc
lea
adc
mov
scas
dec
pop
adc
fimull
clc
inc
dec
and
lcall
push
lds
cmp
out
loope
out
xlat
pushf
mov
jo
ljmp
xlat
push
dec
pop
inc
cld
lock
sub
stos
inc
leave
inc
test
pop
mov
inc
mov
pop
in
push
sub
jmp
daa
into
pop
adc
cld
bound
mov
int
add
test
xchg
push
dec
pop
cmp
push
add
loope
jl
dec
shll
es
jae
hlt
or
xchg
xor
cli
sub
es
xor
ret
cmp
in
xchg
pop
xchg
ficomps
sti
rorl
add
push
mov
jmp
jo
fwait
clc
loope
shlb
or
fistpll
jp
repz
insb
dec
add
out
add
jno
aad
incb
imul
mov
test
jmp
sub
xchg
in
cli
sahf
xchg
pop
mov
dec
out
pushf
inc
imul
roll
lods
push
jo
mov
push
dec
shll
xor
orl
out
push
leave
fildll
aad
jnp
jp
int3
xor
and
stc
in
fsubrs
add
or
cli
cmp
xchg
push
addb
fdivl
mov
and
movsl
les
aad
in
mov
js
imulb
xchg
xchg
data16
mov
stc
inc
push
push
cmpsb
jmp
and
xchg
sbbl
imul
xor
cld
into
adc
in
add
daa
jne
sub
sub
jl
mov
pop
fcomi
push
push
pop
icebp
subb
outsb
mov
les
stos
outsl
sbb
or
movsb
movsb
push
pop
push
sbb
shrl
sub
dec
push
jae
jae
hlt
aam
add
shr
mov
movsb
push
xchg
jno
flds
pop
imul
dec
repnz
loop
nop
addr16
and
loopne
outsl
scas
mov
xor
addl
testl
iret
mov
add
xchg
mov
fnstcw
push
cmp
sahf
jno
sbb
test
push
pop
inc
add
inc
jnp
cmp
adc
jo
fsubrl
or
ficoms
mov
push
inc
xlat
and
mov
jno
mov
adc
or
int3
mov
nop
repnz
adc
pop
pop
mov
cli
jbe
mov
test
add
test
mov
xchg
cmp
outsb
adc
shll
cmpsl
or
cmp
pop
stc
sbb
roll
nop
and
mov
fwait
adc
jle
inc
sbb
lret
jae
dec
fwait
arpl
push
fbld
mov
stos
mov
xchg
in
daa
mov
sub
clc
sub
dec
pop
ds
sbb
or
and
sub
xchg
and
push
in
or
mov
ret
in
dec
adc
test
cmp
lods
ret
lret
inc
inc
sub
jmp
mov
mov
in
xchg
iret
mov
outsb
mov
jns
aaa
cmpsb
dec
jae
mov
mov
or
hlt
aaa
push
sub
aam
aaa
aaa
inc
pop
mov
hlt
jge
negl
inc
nop
sub
bound
scas
mov
sbb
clc
add
jae
inc
mul
lahf
sbb
jne
pop
mov
sub
jo
or
repnz
and
cmc
subb
mov
mov
imul
mov
inc
sub
pop
hlt
sbb
lahf
mov
sahf
jmp
or
dec
into
pop
in
xchg
out
lret
stos
inc
sbb
shlb
popf
cmp
std
sbb
dec
dec
mov
xor
add
in
jns
aad
btc
neg
bound
mov
add
ror
mov
hlt
pop
jns
ljmp
sahf
inc
notl
scas
les
int
iret
lret
popa
push
lods
icebp
mov
push
aam
add
pop
bound
inc
rclb
dec
mov
xor
pop
sub
cmpsb
inc
mov
adc
test
into
dec
cmp
jo
cmp
leave
insl
enter
stc
jmp
mov
xchg
mov
jns
mov
add
movaps
imul
out
mov
xchg
xchg
mov
xchg
sbb
roll
jmp
adc
jmp
cmp
sbb
pop
repnz
push
cmp
or
cli
pop
mov
mov
jbe
aam
mov
inc
push
xchg
push
aad
add
sarl
stc
rclb
push
add
mov
pushf
rorb
mov
insb
adc
mov
insl
rclb
cmp
xor
mov
test
inc
fs
add
adc
cmp
fistl
aaa
xchg
loope
lret
ja
sbb
iret
jmp
adc
mov
xchg
inc
lods
jl
imulb
mov
inc
pop
movsb
stos
lods
xlat
pop
or
push
mov
test
dec
lahf
or
jae
inc
jmp
out
je
fmull
adc
push
dec
sahf
dec
ficompl
push
push
test
repnz
push
mov
xchg
sahf
cmc
and
xchg
enter
ja
clc
xlat
sbb
cmc
jae
push
dec
jae
lea
xor
dec
gs
test
loop
and
and
pop
pop
lahf
aaa
pusha
inc
and
icebp
sahf
pop
cld
mov
inc
adc
sub
pop
ds
rolb
sbb
mov
test
xchg
nop
sbbl
fs
inc
inc
mov
lea
jl
push
clc
ds
mov
rcrb
sbb
addr16
mov
pop
push
out
push
xor
mov
mov
add
fistps
jbe
mov
testl
and
out
xorb
sub
jl
clc
mov
fsubs
clc
rorb
mov
push
dec
push
fwait
mov
leave
push
or
lret
pop
outsb
ds
jecxz
scas
je
pop
fstpt
push
lcall
push
lahf
mov
cmc
cmc
or
and
pop
cmpsl
in
lahf
sub
fucomi
fldenv
add
fwait
sub
adc
push
sbb
sti
dec
arpl
pop
xchg
mov
add
mov
mov
jae
mov
push
popa
jmp
outsb
pop
dec
js
jmp
lds
leave
cmpsb
adcl
inc
mov
or
loope
xor
in
in
outsb
dec
or
loopne
cmpsl
adc
mov
mov
mov
pop
insl
mov
jo
xlat
aam
adc
std
in
test
fs
and
fldl2e
sti
jmp
sbb
out
test
dec
cmp
mov
cmpl
stos
je
nop
idivb
fisubl
jmp
cmp
lods
cwtl
jns
jns
mov
pop
pop
scas
fbld
sub
mov
fistpll
sbb
sbb
cmp
mov
xchg
repnz
andl
lret
sub
and
mov
ja
jo
pop
clc
lock
or
add
jmp
or
mov
inc
sahf
mov
dec
push
jge
push
add
dec
loop
cs
sub
xor
test
test
fdiv
int
repnz
jp
popa
fldenv
xorl
fsubr
ja
movb
push
adc
lcall
mov
jg
lahf
call
das
daa
adc
pop
subb
mov
pop
sub
int3
cmp
out
pop
xchg
popf
mov
adc
imul
cwtl
fsubrl
je
inc
dec
outsl
push
cs
fcoml
inc
push
adc
and
cld
sbb
mov
mov
xor
dec
push
add
adc
dec
repnz
test
cli
pop
movsl
mov
movsb
add
js
pop
test
pop
fcmovnu
xchg
push
or
inc
fadd
cs
pop
jmp
xchg
popf
pusha
and
or
andl
test
dec
mov
inc
fsts
lds
mov
sahf
scas
mov
and
pop
aas
xor
mov
jo
ss
rcl
adc
lods
jne
xor
stc
ds
das
push
cmpb
or
and
adc
jo
fs
and
inc
js
lahf
fsubr
pop
jge
loope
sbb
incb
inc
push
mov
fcmove
xor
xlat
inc
inc
enter
les
ret
inc
lock
pop
add
cmpl
adc
and
push
or
lock
stc
mov
loop
aaa
imul
cli
out
fwait
rcr
inc
jno
mov
and
out
add
cmp
pop
or
faddp
inc
sti
cmp
jmp
jge
fdivrs
mov
xor
in
and
inc
xchg
mov
mov
xlat
cld
pop
push
notb
or
jo
das
inc
mov
add
ficomps
sahf
push
rclb
push
mov
lcall
pop
js
dec
xchg
xchg
xor
loope
push
inc
jns
dec
pop
fwait
xchg
shl
push
xor
pushf
jnp
dec
inc
shl
push
mov
ljmp
adc
sbb
out
xor
cld
icebp
jbe
xor
cmp
ds
adc
mov
mov
xchg
outsl
jg
push
lods
in
dec
xchg
popa
push
mov
shlb
rcrb
addr16
push
lods
sub
test
ljmp
in
jno
aas
mov
mov
jne
and
push
mov
pop
xchg
pusha
adc
or
mov
aaa
sbb
ss
sbbl
jp
push
pusha
jle
inc
popf
jnp
test
mov
or
orb
ja
and
dec
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
dec
test
invd
add
jp
out
mov
xor
and
mov
cli
js
das
insl
adc
vpslld
clc
push
dec
adc
push
inc
cli
mov
shll
jl
sbb
loope
jle
jg
lods
sahf
loope
sub
push
and
insl
jecxz
sbb
icebp
or
mov
inc
rcrb
dec
daa
test
aam
jecxz
les
add
adcl
mov
fsubs
fwait
inc
xchg
mov
stos
pop
rol
pop
outsb
loop
subl
lods
adc
incb
movsl
je
stos
adc
out
jbe
notb
and
aad
mov
and
test
in
and
loop
roll
push
roll
cmp
cmpsb
mov
pop
shrb
out
xor
xor
jne
daa
outsb
or
out
outsb
movsb
mov
inc
insl
clc
popa
push
sub
divl
ja
xchg
pop
aaa
mov
add
xchg
dec
inc
mov
sub
jbe
enter
jne
jg
mov
outsl
movsl
mov
enter
es
test
stc
push
sub
sub
vhsubps
add
das
inc
test
and
sub
lea
std
pop
daa
lea
bound
out
push
or
inc
cmp
movsb
cmpsl
pop
push
fcmovnu
push
inc
lods
lock
sbbb
inc
and
movsb
sbb
or
inc
cmpsl
dec
mov
stos
movsb
insb
cmp
call
and
inc
mov
push
aad
outsb
mov
fcomip
test
adc
fcoms
sti
popf
cmp
xor
hlt
rol
cmp
iret
in
inc
jmp
testb
mov
jbe
sbb
std
cmpsl
pop
xchg
outsb
xchg
sti
shr
dec
aad
lds
push
mov
dec
sub
sbb
pop
les
cltd
dec
bound
jbe
pop
popa
xchg
dec
and
pop
mov
ljmp
add
lock
fidivl
and
popa
test
out
xchg
sub
mov
fisubrl
lcall
ja
out
push
scas
pop
mov
xor
mov
dec
mov
fcompl
repz
jns
cli
dec
xchg
fwait
hlt
cwtl
enter
je
jno
rclb
in
fisubrl
or
fistps
inc
lret
pop
pop
add
stos
inc
test
nop
in
repnz
add
sbb
push
push
call
xor
xchg
mov
sub
jp
adc
xorl
leave
mov
sub
push
bnd
mov
rcl
pop
cmp
cld
mov
lcall
inc
ret
repnz
push
repnz
push
stc
jne
pop
mov
fs
pusha
cltd
stos
inc
fdiv
or
adc
fisttps
jg
int
mov
jno
mov
xchg
push
sbb
lahf
gs
es
data16
inc
mov
jno
insl
push
ja
add
clc
mov
pop
xchg
std
enter
cmp
adcl
or
xchg
push
fadd
jnp
xor
and
push
cmp
sahf
loope
repnz
mov
arpl
adc
pop
jns
add
cltd
cli
xchg
inc
jns
faddp
mov
mov
rsm
inc
lcall
inc
adc
push
out
stc
in
dec
jb
in
sub
push
jae
xor
cmpl
cmp
pop
jno
dec
add
out
xchg
cmp
sub
nop
mov
pop
and
inc
mov
xor
gs
std
xchg
not
call
ljmp
cwtl
test
popa
mov
push
mov
cmp
test
out
loop
lds
mov
mov
dec
mov
inc
mov
shl
cmp
mov
sub
rcll
addr16
push
mov
fwait
push
and
pop
adc
mov
lahf
dec
andl
dec
cwtl
enter
rorb
push
xlat
ss
or
jno,pt
fisttpl
cmp
js
mov
faddp
push
mov
test
pop
xor
adc
jns
lahf
mov
dec
int3
push
mov
shrb
popf
cltd
subl
push
or
push
lcall
push
jecxz
sub
xor
scas
and
test
cltd
cmp
in
cmp
popf
das
push
push
cmpsl
push
std
jle
inc
nop
repnz
int3
dec
fistps
inc
movsb
pop
imul
inc
div
dec
jl
test
mov
cwtl
clc
in
cmpsb
pushf
dec
aaa
stc
push
js
adc
ror
popf
mov
mov
repnz
adc
or
mov
sbb
inc
jnp
stc
mov
sbb
sti
syscall
and
aaa
sti
das
insl
icebp
cli
popf
das
add
fwait
test
or
cmc
sbb
loope
push
dec
lahf
and
lret
mov
mov
pusha
mov
ja
lcall
jg
sbbb
dec
out
pusha
adc
jb
pop
mov
mov
pop
in
mov
push
jo
aaa
mov
frstor
or
in
push
imul
adc
in
loope
popf
push
lahf
xchg
xchg
leave
rcll
movsb
jno
dec
sbb
testl
popw
dec
lcall
ljmp
add
push
icebp
push
adc
push
push
fsub
pop
mov
out
rorb
jmp
sub
scas
and
sub
nop
sbb
adc
add
dec
outsb
push
in
or
jmp
add
lret
sbb
dec
sub
aad
in
adc
daa
mov
push
push
je
sub
hlt
ss
addr16
jp
pop
out
fisubl
arpl
cmp
inc
and
popa
mov
sub
movsb
inc
push
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
ss
mov
add
psubsw
leave
icebp
inc
out
jl
sbb
ja
subb
and
xchg
outsl
jns
pop
int
and
jmp
lods
pop
push
jno
push
sbbb
into
xor
movsl
xor
push
movsl
and
cmp
js
jmp
push
mov
inc
push
push
sti
lods
mov
xor
mov
jl
and
int
imul
hlt
shll
test
outsl
es
mov
loop
js
mov
xchg
icebp
orl
das
jae
xorl
cmp
inc
fcoms
jmp
daa
inc
stos
sbb
mov
pop
xchg
jecxz
out
jne
shll
xchg
adc
push
pop
fdivrl
jmp
jae
in
or
int
mov
idivb
cmpsb
mov
push
data16
jo
into
adc
xor
loopne
inc
in
and
mov
ror
dec
and
les
fistpll
jo
inc
sub
sub
test
push
adc
add
fdivrp
jbe
fadds
sub
cld
adc
pop
cltd
and
xchg
lret
sahf
dec
mov
jo
movsb
les
adc
cmp
loop
js
dec
dec
fisttps
int
xchg
pushf
pop
jge
jecxz
add
mov
push
aaa
xor
imul
dec
mov
and
les
dec
push
fnstcw
jns
repnz
mov
xchg
mov
fs
pushf
in
dec
mov
or
mov
addl
test
aas
ret
cmpsb
fs
pop
inc
lods
repz
rcll
cmp
mov
out
push
in
rcll
movsl
in
xor
movsl
fstps
dec
sub
pop
test
fidivs
and
inc
out
xor
and
cltd
ja
es
gs
shlb
push
cmp
rclb
push
aad
jne
mov
pushf
lea
ljmp
jne
mov
adc
loopne
adc
pop
rcll
je
into
and
loope
insl
jmp
call
cmp
loop
lret
daa
mov
fstl
cmp
cmpsl
pusha
in
mov
pop
mov
push
jp
sbb
pop
sbb
or
jae
js
pop
sahf
jno
xchg
and
pusha
ljmp
add
push
nop
loopne
out
mov
sbbl
sub
mov
jmp
loope
xor
dec
scas
mov
or
push
popa
lret
inc
xor
stos
and
push
test
sbb
dec
mov
dec
inc
stc
pop
inc
xchg
xchg
aas
outsl
push
mov
psllw
push
cmp
fs
xchg
inc
ret
inc
test
decb
shlb
mov
jl
inc
repnz
add
data16
repnz
inc
pop
in
shlb
cmpsl
jne
and
mull
repz
into
or
andl
mov
adc
add
lcall
jg
out
inc
fwait
outsb
mov
mov
inc
xor
mov
mov
or
cmp
xchg
and
cli
sbb
aaa
dec
cld
fnsave
sar
jae
es
movsb
inc
mov
dec
cmp
jle
xor
add
xor
cmp
aas
cmpsb
enter
iret
js,pt
sbb
inc
mov
movsl
sbb
xor
mov
out
cs
outsb
nop
iret
iret
rcll
pusha
lock
loop
adc
cmp
cmp
daa
push
les
imul
pop
mov
xchg
pop
pop
push
mov
push
cli
and
ret
add
sbb
in
subl
arpl
call
jae
inc
mov
push
sub
movl
ret
sub
imulb
ljmp
sbb
mov
rcrb
lds
leave
cmc
out
lods
adc
mov
inc
mov
jp
leave
hlt
cmp
notl
fs
icebp
sbb
or
mov
xor
lock
aad
stc
cmpsl
push
push
pop
loop
test
mov
lcall
aam
mov
inc
hlt
pop
aam
hlt
addr16
sar
lock
pop
aam
mov
dec
sbb
pop
andl
movsb
jecxz
pop
inc
iret
imull
int3
jbe
pop
bound
xchg
outsb
add
clc
arpl
push
adc
adc
es
into
adcl
xchg
cmp
mov
xchg
xor
push
xchg
test
ret
pop
and
cs
and
in
mov
sbb
mov
cmp
inc
and
scas
insl
push
and
push
enter
shrb
mov
jl
addb
and
popa
aad
ret
mov
jle
mov
sbb
adc
jne
mov
in
in
push
jns
fwait
sarb
or
push
movsl
loop
pushf
pop
or
xchg
call
inc
int3
inc
xor
sbb
sub
icebp
in
and
neg
js,pt
cwtl
push
and
xor
nop
movsb
xorb
jae
mov
dec
inc
mov
and
cli
fs
in
lcall
sarb
dec
cmpsb
jbe
aam
fsubrl
dec
adc
or
inc
push
mov
popa
cs
jecxz
xchg
xchg
sub
inc
or
push
fsqrt
aaa
cmc
mov
daa
clc
jo,pn
outsl
mov
test
mov
fucomi
js
int3
add
xor
cmp
mov
pop
mov
pop
push
push
pop
int3
sub
xchg
fbstp
lods
cmpsb
ret
cmp
inc
stc
cld
stc
pop
rorb
xchg
add
call
xchg
inc
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
andl
invd
add
paddsb
xchg
mov
faddl
int3
jle
mov
sub
push
mov
adcb
dec
icebp
cmovo
mov
out
imul
mov
xchg
inc
sub
nop
adc
mov
pop
xchg
imul
call
and
hlt
adc
sbb
xor
movsl
mov
mov
sub
jmp
out
lods
pop
push
cmpsb
daa
mulb
imul
mov
dec
shlb
outsl
jl
jle
incb
iret
inc
push
xchg
ljmp
repnz
roll
inc
add
push
and
and
ja
mov
jp
in
lea
ja
push
jge
divb
sbb
test
sbb
jecxz
test
add
cli
test
fwait
adc
movsl
jnp
sbb
add
mov
out
aaa
cmp
lcall
push
sbb
jns
adc
or
pusha
jp
xchg
daa
rorl
aad
hlt
shlb
push
stos
pop
and
mov
popa
pop
loop
leave
mov
dec
adc
fstpt
test
add
loopne
lock
mov
dec
movsb
aam
std
or
hlt
fists
arpl
adc
dec
loopne
jne
clc
in
xchg
xor
lods
bound
lea
inc
into
loope
xchg
aad
add
stc
mov
cld
rorb
pushf
testb
or
cmpsl
push
pop
daa
sub
adc
test
repz
mov
mov
fnstsw
out
xchg
mov
mov
jno
fwait
sub
mov
cmovp
scas
inc
bnd
loopne
pop
out
int3
cmpsb
call
out
movsb
enter
mov
jnp
out
sahf
ds
pop
jns
lods
mov
and
pop
add
lcall
cmp
adc
mov
jnp
sub
pop
xchg
sbb
mulb
fadd
add
cli
aam
in
iret
sub
ficoms
hlt
lea
sahf
insl
xor
lods
test
xor
ret
push
lahf
js
out
dec
mov
mov
sbb
nop
jno
push
loop
aam
push
xchg
xchg
bound
inc
stos
mov
fistl
inc
pop
xor
xor
adc
add
and
sub
push
inc
inc
pop
adc
insb
es
sub
and
jl
in
lds
mov
sbb
shll
cmp
addr16
add
sbb
pop
add
add
mov
nop
pop
sub
xor
sub
rol
mov
aaa
mov
popf
aam
adc
mov
stos
and
loope
je
jo
sub
fidivs
push
enter
addb
inc
inc
popa
roll
cmpsb
aad
sbb
ret
test
fcomip
pop
pop
daa
jb
cmp
adc
lahf
push
les
fadds
jnp
xor
xchg
rcrl
or
push
subl
dec
pop
scas
jns
and
sub
jae
shlb
stos
in
jl
in
push
pop
lahf
testb
dec
sbb
jle
movb
mov
ja
iret
mov
xchg
popf
pop
sahf
cmp
ja
mov
cmp
pusha
sub
sbb
and
mov
dec
mov
loopne
aam
mov
sbb
pushf
out
mov
pop
loopne
cld
pop
mov
or
add
cmp
inc
sahf
add
scas
pop
in
mov
sbb
mov
dec
inc
sub
roll
fcomp
xor
and
add
dec
lods
mov
adc
inc
out
enter
xchg
sub
mov
adc
jmp
jo
das
adc
rol
popf
pop
cmp
rcr
iret
in
imul
sub
shl
dec
lods
nop
or
or
adc
jmp
or
sahf
xchg
nop
xor
repz
mov
in
cli
jae
mov
scas
or
lcall
ret
xor
out
mov
mov
jge
cmpsl
inc
gs
arpl
dec
lcall
in
sub
mov
mov
leave
dec
xchg
rcr
sbb
jae
jg
mov
xchg
scas
ljmp
iret
jl
push
jae
loopne
mov
mov
dec
pop
xor
shrl
xchg
sbb
or
arpl
in
cltd
enter
out
clc
hlt
fwait
jecxz
pushf
jge
repnz
mov
xlat
mov
add
aad
jmp
inc
cmpsb
in
inc
ss
xlat
xorb
jle
arpl
in
or
xchg
mov
jno
inc
out
fadd
add
into
lea
lret
dec
mov
pop
popf
or
repz
mov
inc
cmp
mov
fwait
xchg
stos
sbb
fbld
dec
xchg
lcall
or
sub
xor
add
jp
jb
add
push
or
cmp
and
pop
xlat
sub
pop
out
sbb
lds
push
lock
call
inc
and
fldcw
insl
mov
pop
dec
dec
je
pop
mov
lret
mov
jge
sbb
in
cmpsb
xorb
sbb
mov
jbe
sub
push
or
inc
inc
popa
cli
and
xor
push
pop
pop
xor
sbb
dec
int3
fnclex
mov
aam
roll
les
push
cwtl
jl
dec
imul
add
sti
out
sub
insb
fildl
push
mov
aad
pop
mov
cmp
mov
or
int3
pop
js
jmp
cwtl
or
mov
jns
imul
and
ret
jno
nop
enter
jg
stos
xor
dec
ss
sbb
adc
fldcw
lods
cmp
dec
inc
ficomps
je
daa
inc
inc
cmc
push
dec
pop
aaa
sub
mov
mov
and
pushw
fs
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
btc
xor
or
outsl
mov
inc
pop
adc
pop
pop
cmp
ret
cmp
call
lea
mov
push
mov
test
inc
pop
push
mov
shlb
mov
fxtract
mov
mov
stos
in
popa
push
dec
dec
dec
mov
mov
call
cs
adc
dec
mov
jp
cmp
es
jb
stos
sbb
mov
sub
out
jnp
mov
mov
fnstsw
shlb
fs
stos
out
insl
push
jmp
mov
loopne
lahf
in
ror
inc
mov
mov
scas
push
lds
aas
push
mov
jb
xchg
into
or
inc
movsl
mov
lds
mov
and
dec
mov
stc
imul
dec
cwtl
jl
imul
add
dec
popf
push
clc
inc
sbb
ja
mov
loope
fmuls
shr
mov
daa
ss
popa
cld
adc
mov
repz
jb
loop
roll
testl
sbb
cmp
stos
dec
out
inc
adc
ljmp
or
cmpsb
stos
dec
cmpsl
xchg
inc
into
or
enter
push
out
dec
push
outsb
outsb
mov
xchg
inc
and
dec
out
mov
sbb
inc
xor
pushf
xchg
mov
iret
push
fwait
je
add
mov
movsl
inc
sub
cli
mov
outsb
jb
fdivrl
cmc
cmp
jecxz
mov
adcl
jl
jp
pop
mov
jno
pop
cmp
lret
push
jnp
call
mov
addr16
daa
stos
mov
push
int3
lret
jp
shrb
shrb
ljmp
add
call
cli
or
pop
pop
cltd
leave
mov
or
repz
insl
xchg
out
filds
pop
pop
sub
fs
aam
nop
push
lds
movsb
nop
ss
jmp
push
iret
inc
std
cmc
cmpsb
jae
adc
adc
sar
aad
pop
in
mov
ja
idivb
xchg
inc
lcall
mov
xchg
pop
xor
xchg
sub
outsb
loop
add
test
cmp
clc
std
push
mov
loopne
push
push
mov
sbb
lock
rcll
iret
out
push
xor
jmp
into
push
pop
sub
lcall
cwtl
or
repz
stos
aaa
jns
ss
or
into
movl
cmpsb
sti
adc
rcrl
adc
hlt
popf
lcall
shlb
les
xchg
cmc
andl
aam
fidivrl
push
je
lock
pop
inc
sbb
mov
outsb
arpl
ja
add
sub
ja
cmp
add
mov
jne
test
test
inc
mov
sti
xor
sbb
es
int
insl
clc
jno
xchg
cmpsl
inc
xor
int
mov
inc
sub
xchg
and
mov
enter
cs
adc
sbb
aas
jge
xor
hlt
or
stc
mov
dec
or
aam
das
data16
lcall
mov
negl
mov
sub
cmpsl
cmc
add
jge
pop
int
mov
test
jge
xchg
mov
and
std
pop
pop
fmuls
adc
fidivl
mov
movsb
inc
add
loope
jae
xchg
popf
cmpsl
lcall
out
fwait
jae,pn
mov
lret
shrb
int
inc
outsb
jae
arpl
lods
pusha
or
aas
pop
push
sti
lds
cmp
in
add
insb
xchg
cwtl
fildl
and
pop
mov
inc
xorl
pop
and
aam
mov
push
xor
cmp
shrb
dec
push
sub
xchg
fdivl
test
cmp
nop
ss
lret
add
cmc
jno
stos
xor
jmp
xor
xchg
stos
ds
in
mov
repnz
push
movsb
push
sub
roll
add
aad
pop
add
out
cwtl
pushf
rolb
pop
stc
inc
fwait
mov
inc
loopne
out
xor
ret
rcll
sub
add
add
xchg
push
dec
adc
and
push
jp
mov
std
or
test
jmp
cmpsb
cmpsl
cmp
repz
in
lods
jae
inc
or
add
adc
mov
and
repnz
or
sarl
mov
ret
sti
or
pop
out
std
push
push
gs
and
add
sub
sti
daa
lret
ror
add
or
pusha
pushf
add
mov
movsb
ret
push
pop
sbb
xor
pop
mov
into
dec
push
imul
mov
xor
mov
iret
lret
test
jne
jae
sbb
sub
icebp
out
rorl
cmc
cmp
inc
fldcw
insl
mov
fcmovne
mull
mov
pop
xor
jmp
sarl
loope
pop
mov
inc
mov
mov
mov
lahf
lods
lock
vcomisd
leave
cltd
dec
aaa
out
pop
addb
subb
lcall
pop
cmp
mov
mov
addb
sub
xchg
push
or
mov
pop
mov
aad
push
popf
int
push
lock
movsb
cltd
daa
repnz
leave
fiaddl
lea
repz
cmpsl
pushf
outsl
icebp
fstpt
into
mov
imul
pop
mov
popl
rorb
mov
inc
mov
shll
int
or
aam
jmp
and
stos
jmp
sub
imul
test
lods
jbe
jp
mov
scas
push
dec
xor
int3
pop
sbb
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
sub
js
push
invd
add
movntq
stos
fsubs
jns
or
fldcw
in
push
loop
mov
or
adc
xchg
aad
pop
hlt
mov
sub
jno
xor
mov
stc
inc
push
pop
sbb
subl
dec
cmp
xchg
dec
add
pop
inc
cltd
cs
fdivr
or
mov
add
cwtl
mov
in
test
inc
and
sbb
cmpsl
cmp
ds
jb
fs
int
adc
bound
dec
inc
pop
insb
inc
lret
insl
out
push
sbb
inc
stos
add
jmp
or
ljmp
loop
lahf
popa
push
cs
cmc
pop
adc
outsl
outsl
in
rcrl
scas
mov
lretw
fidivrl
pushf
movsl
sarl
xchg
push
xor
inc
sahf
int3
jg
pop
sbb
jle
mov
mov
enter
mov
pop
or
aas
popa
mov
xor
jo
fstl
add
es
pop
imul
inc
sub
mov
inc
push
std
sbb
jecxz
push
sbb
icebp
jo
and
xlat
mov
add
pushf
pushf
inc
fnsave
adc
call
inc
addb
add
dec
xlat
adc
addr16
mov
add
cmpsl
inc
jl
pop
cmpsb
gs
std
loop
and
outsl
cmp
mov
or
inc
sbb
sbb
loopne
dec
scas
sahf
xchg
dec
out
push
pusha
cltd
in
mov
mov
sbb
fsubs
daa
les
inc
test
pushf
cld
ret
fcomp
roll
mov
fildll
cmp
pusha
addb
hlt
push
pop
inc
pop
mov
data16
mov
xor
data16
jns
cmp
add
mov
pop
sub
fsubp
mov
out
mov
push
jns
or
mov
and
fisttpll
lahf
ret
ficompl
clc
xor
cmpsl
lds
dec
subl
or
lret
pop
ss
xchg
fcomps
adc
out
shrl
leave
ja
xor
sbb
mov
test
lahf
or
push
adc
cs
shlb
outsb
mov
ss
cmpsb
xor
inc
pop
dec
push
push
cs
cmpsl
out
mov
mov
mov
jl
jae
movzwl
jmp
nop
clc
ljmp
sbb
cmpsb
jnp
hlt
pop
outsb
lds
adc
adc
sahf
or
out
adcb
jbe
pusha
subl
enter
dec
stc
cmp
add
lods
out
and
pand
leave
pop
push
push
ret
call
shrl
shr
pop
push
orl
inc
ret
sarl
xchg
xchg
loopne
add
daa
leave
mov
and
or
sbb
cli
or
adc
rcrb
and
mov
clc
jle
xchg
xchg
xchg
test
cwtl
roll
cmp
pop
and
addr16
cmp
mov
push
and
pop
je
sub
mov
data16
mov
int3
pop
sbb
pushf
sub
inc
mov
and
xchg
sub
sbb
or
cmpsb
mov
test
mov
inc
add
into
push
test
ds
insl
aaa
jp
outsb
mov
icebp
insb
rcrb
jnp
adc
add
dec
and
stc
out
jp
pusha
hlt
jnp
imul
push
cmp
fcomps
rcll
sub
hlt
ret
inc
loopne
pop
in
push
loop
jo
insb
pop
mov
addps
inc
movntq
stc
xor
pop
xchg
lcall
pop
dec
cmpsb
pop
scas
sbb
cmp
xor
push
lcall
adc
sub
in
push
add
push
inc
pop
xor
xchg
das
subb
test
imul
cwtl
mov
cmpsl
getsec
lahf
sub
xchg
mov
int3
ret
cmp
lret
adcl
es
xor
pop
movsl
lcall
xchg
insl
add
inc
lods
xor
fmull
icebp
sti
xchg
or
jmp
repnz
xchg
sbb
jae
lods
sbb
add
repnz
dec
xlat
push
push
pop
inc
fs
jbe
pusha
inc
push
inc
stos
xlat
insb
inc
mov
aad
sub
sub
outsb
pushf
lahf
stos
ja
push
faddl
cmc
adc
loopne
and
sti
inc
int3
mov
stos
push
xor
jne
xchg
xor
push
imul
vpmaxub
and
fwait
jo
adc
jnp
out
inc
adc
cmp
mov
mov
gs
popf
cmpsl
mov
jmp
js
sbb
xchg
and
xchg
adc
cld
push
mov
in
fistpll
push
cmp
inc
mov
int
outsb
xorl
push
adc
mov
int
pop
jmp
test
sub
adc
sub
test
and
push
iret
push
jbe
and
and
mov
mov
mov
push
ds
mov
daa
stos
inc
and
dec
inc
popf
andl
cmp
pop
push
mov
sbb
and
adc
push
jns
and
rclb
mov
sbb
sbb
mov
jmp
xor
xor
cmp
pop
addr16
int3
push
js
mov
dec
lret
dec
scas
pop
pushf
xorl
repnz
das
push
pop
cltd
lahf
rorb
mov
aaa
test
movsb
pop
inc
loope
or
gs
pop
jae
jp
xor
mov
call
out
fistpl
sbb
mov
ja
pop
sub
and
out
jno
mov
add
fbld
lahf
ja
std
std
lcall
outsl
pop
xor
mov
mov
popf
push
repnz
mov
loop
mov
cmp
mov
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
xor
je
fisttps
invd
add
nopl
fidivl
daa
push
jne
jnp
cmp
or
imul
orb
mov
shl
lret
out
and
popf
fistpll
addr16
xlat
sbb
into
cmp
sub
inc
mov
pop
mov
fildll
roll
call
inc
ljmp
faddl
mov
jbe
mov
shrb
push
push
cs
mov
cwtl
and
int3
in
ret
dec
into
mov
xchg
push
jo
xchg
push
movsb
sbb
int3
xchg
movsb
outsb
mov
xchg
lahf
dec
imul
dec
lahf
mov
enter
das
pop
push
or
mov
lret
push
js
in
repnz
inc
or
mov
sub
gs
sub
add
mov
xchg
inc
add
sbb
gs
fdivrs
out
repz
cs
pop
nop
or
imul
pop
add
mov
dec
pop
outsl
clc
ja
inc
adc
mull
sbb
dec
ret
sbb
adc
jmp
mov
xor
test
les
xor
cmpsl
dec
lret
adc
lea
lcall
jb
into
mov
adc
adc
rclb
addl
jg
fdivp
xor
pop
add
jmp
mov
xchg
fsubp
dec
jge
out
push
pop
fwait
push
mov
imul
xchg
mov
pop
cmp
leave
push
add
int3
and
sub
icebp
mov
loopne
mov
cmc
jecxz
mov
arpl
or
cld
push
scas
pop
inc
dec
insb
lret
push
cmpsb
fldenv
sbb
and
mov
xor
clc
aam
mov
aas
inc
rcrl
and
pop
in
jmp
jle
flds
jb
sbbl
in
dec
int3
mov
sbb
in
and
and
or
cmp
cmp
sbb
jno
mov
add
into
in
xchg
push
mov
aam
xchg
add
lahf
ds
mov
mov
sub
push
sbb
xchg
mov
fcmovnb
negl
inc
pop
rorl
jnp
inc
and
sbb
jns
adc
or
ret
and
pop
adc
lcall
bnd
lods
xor
lret
fwait
adc
imul
dec
sbb
int3
cs
mov
call
mov
push
push
inc
adc
shrb
or
xchg
pop
mov
mov
call
test
mov
mov
inc
int3
bound
fldcw
out
aaa
pop
jns
bound
sub
and
roll
ljmp
cmc
cmp
push
dec
mov
add
movsl
sbb
mov
inc
fldcw
lock
das
xorb
frstor
or
je
xchg
add
notl
inc
nop
mov
jb
push
and
dec
cmpsl
sbb
or
les
xchg
sub
out
xchg
adc
out
stos
outsb
outsl
std
add
testl
mov
ss
sahf
adc
jmp
jns
mov
sahf
ja
sub
bound
leave
lock
xchg
sbb
insl
sarl
ja
jp
mov
dec
subl
cld
into
inc
xchg
mov
jns
aaa
leave
and
jno
add
sub
jb
hlt
fs
in
push
and
in
ss
xor
out
in
cmp
xor
insb
repnz
and
jne
outsb
inc
ret
and
sub
jnp
xor
inc
jns
outsb
sarl
xor
inc
aaa
sahf
out
and
inc
pop
jge
enter
xchg
cmp
rolb
xchg
subl
repnz
cwtl
sbb
and
lock
and
cmp
and
pop
into
add
xchg
popf
xchg
mov
cmpsl
cmp
sub
aas
xchg
xchg
out
lret
add
cmp
lds
out
scas
and
adc
sbb
mov
addr16
adc
cmp
addr16
xchg
test
mov
in
xchg
sub
fidivl
dec
rol
lcall
pop
and
outsb
fldl
out
aad
shlb
pop
mov
addr16
mov
rorl
inc
or
sub
ss
sbb
pop
mov
adc
mov
cmpsl
lahf
fmull
shll
idivb
call
sub
pop
sbb
ja
lcall
sbb
adc
dec
mov
sti
lock
mov
mov
inc
inc
dec
push
fwait
iret
mov
fwait
xor
addb
dec
fnstenv
push
arpl
jne
stc
leave
in
push
mov
outsl
inc
cmp
mov
add
stc
in
add
andl
mov
xchg
push
lods
push
mov
jmp
sub
ds
sub
rcrb
and
pop
mulb
inc
mov
pop
push
cmp
es
adc
pushf
xchg
adc
jb
sbb
mov
cmp
fwait
ljmp
jge
loopne
adcl
aas
dec
andb
enter
fisubl
sarb
or
mov
cwtl
lock
pusha
sbb
fdivs
jb
mov
jno,pt
xor
fiadds
leave
addr16
xchg
pop
mov
shrl
or
int3
mov
aad
je
mov
mov
jo
inc
out
adc
adc
sbb
push
mov
jne
in
adc
push
sub
jp
call
add
push
lret
mov
rcll
push
push
sub
scas
rcrb
pop
cmp
lds
dec
lods
mov
pop
and
repnz
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
bsf
pushf
rcr
jge
lret
inc
mov
xor
call
aam
xlat
cmp
out
xor
push
lea
mov
jp
in
les
xchg
std
sahf
bound
mov
insl
cmp
loopne
out
ficompl
jno
popa
jg
into
gs
add
sahf
in
stos
fs
xor
insb
mov
add
test
ret
lds
loopne
xchg
jbe
jb
inc
push
jl
and
and
add
sub
jb
jb
fs
int3
sbb
xchg
int
mov
bound
jle
je
bound
out
dec
push
imul
dec
repz
int
cmp
mov
cmp
data16
and
cmp
add
mov
push
cmpsl
sbb
push
push
pop
cmpb
sub
hlt
loope
cs
adc
mov
or
filds
das
lret
je
cmpsb
rcr
int
js
xlat
fstl
sbb
fucompp
sbb
xor
cmpsl
xchg
out
ja
jo
inc
popa
out
mov
inc
aam
mov
xchg
push
and
pop
test
lcall
imul
cmp
imul
xchg
cmpsl
or
push
pop
arpl
sub
mov
daa
cmpsb
sbb
data16
mov
andb
jmp
out
mov
jl
mov
and
pop
inc
scas
sbb
fwait
push
mov
scas
mov
cmp
std
insl
fwait
cmp
sbb
sti
fistpl
adc
fdivr
push
inc
xchg
and
cmp
daa
fiaddl
stos
add
mov
xchg
cmpsb
std
inc
add
xlat
cmp
mov
sbb
mov
pop
lds
jae,pn
imul
add
xchg
incb
adc
movsb
xchg
xchg
negl
test
xor
xor
movsl
adc
jae
sbb
pop
sti
inc
mov
div
sub
pop
or
inc
dec
or
mov
sbb
lcall
xchg
mov
push
jmp
jl
pop
clc
scas
and
xchg
int3
adc
movsb
inc
mov
ret
pop
in
int3
push
daa
enter
jge
cwtl
inc
sti
cmp
mov
and
jno
xchg
mov
xchg
rcrl
fstpt
lea
push
and
outsl
insb
enter
nop
mov
mov
leave
shlb
mov
pop
dec
fld
adc
pop
sub
pop
cmp
cld
add
stc
inc
xor
adc
loop
testb
std
or
mov
mov
out
sub
test
mov
testb
mov
mov
lea
loopne
mov
push
and
lahf
inc
sti
out
sarb
xchg
gs
or
rorl
movntps
int
mov
xor
stos
ja
cmc
addr16
inc
cmp
lcall
mov
pop
mov
pop
lret
inc
dec
or
popa
xor
loope
push
inc
mov
repz
jge
mov
sub
les
stc
mov
jecxz
mov
cld
adc
in
adc
outsl
lss
inc
lea
lock
xchg
data16
gs
push
sbb
inc
sub
inc
outsl
cmpsb
or
jbe
icebp
bound
loope
les
or
arpl
repnz
jl
fisubs
jle
pusha
cld
mov
mov
addr16
sarl
insb
mov
xchg
das
dec
outsl
pushf
xor
sbb
mov
inc
xor
push
cmp
sub
bound
sub
sub
jg
sbb
pop
mov
fcoms
aaa
dec
xchg
rorb
cmp
add
popf
adc
and
pushf
ret
pop
hlt
subb
arpl
movsl
xlat
js
mov
cmpsl
ds
inc
fildll
stos
inc
insl
and
pusha
inc
cld
in
in
pop
das
clc
push
xor
js
insl
mov
and
incl
sbb
sbb
mov
or
jle
cmp
push
mov
push
jns
scas
sub
les
mov
mov
movsb
fldcw
jp
inc
dec
jae
and
jmp
xor
cmpsl
into
xchg
mov
push
jl
xor
mov
xchg
outsb
dec
cmpsb
xchg
mov
xor
mov
mov
jbe
mov
xchg
daa
sbb
imul
add
mov
insb
fistpll
clc
test
jo
sbb
jnp
daa
daa
jp
sbb
hlt
iret
xor
fmuls
sbb
fimuls
or
add
jp
inc
flds
mov
and
repnz
es
pushf
cmp
out
into
clc
jmp
mov
pop
clc
dec
cltd
mov
gs
sbb
xchg
push
xor
push
xlat
mov
xchg
push
test
into
cwtl
les
imul
sub
pushf
sbb
xor
and
lret
or
mov
in
inc
mov
push
and
add
xchg
mov
inc
stos
mov
or
hlt
into
add
test
mov
inc
dec
sub
push
add
int
jb
jmp
sbb
pop
inc
rcr
pop
sahf
inc
outsl
jnp
xchg
xchg
daa
fists
stc
sub
cmp
or
mov
sbb
mov
adc
cmp
mov
inc
xorl
push
popf
orb
data16
xorb
fucomp
push
adc
out
daa
outsb
or
loop
pop
imul
or
cmp
add
mov
fstpl
jl
ret
adc
xor
push
sbb
push
rolb
shll
lea
addb
std
int3
or
inc
push
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
ret
mov
mov
inc
invd
add
pcmpeqb
mov
sarb
lods
sbb
or
xor
push
sbb
cmp
sub
hlt
xor
and
push
clc
cmpsb
dec
dec
mov
add
nop
mov
inc
pop
jns
cmp
adc
pop
fstps
jecxz
lods
rcl
add
lock
and
cltd
adc
fs
dec
sbb
jb
mov
cmc
xchg
mov
outsb
sahf
xor
mov
ficoml
rorl
pop
mov
push
jns
inc
cmpsb
pusha
sarb
test
lret
loope
jbe
sub
xchg
lcall
jl
inc
inc
adc
jge
add
pop
push
inc
dec
fwait
jp
xchg
sbb
insl
and
lds
push
adc
push
popa
or
fisubl
leave
repz
push
daa
mov
and
outsb
aas
cmp
inc
bound
and
and
ret
sbb
addl
mov
rorl
cmp
sub
int3
mov
loop
std
sub
add
imul
xor
pop
daa
mov
in
mov
jae
jo
sub
sbb
fwait
ja
cwtl
jge
inc
into
sub
or
sbb
mov
into
pop
fs
inc
xchg
sbb
cmp
in
lret
lock
pop
dec
fwait
test
push
jb
push
cmp
aaa
stc
push
cmpsb
lods
sub
xchg
ss
jno
sbb
add
adc
fs
rep
mov
ja
xor
jg
shll
popf
xchg
sub
inc
fsubp
das
mov
dec
mov
jmp
and
fsub
sbb
outsb
jnp
cmpsb
mov
mov
mov
jl
shlb
lods
and
pusha
notl
mov
dec
mov
mov
imul
dec
pop
push
add
in
inc
popf
fmull
sbb
inc
in
push
fistps
mov
out
syscall
cli
sbb
rcr
adc
xchg
push
dec
cld
mov
jns
dec
dec
mov
insl
aam
cmp
iret
jne
xchg
inc
adc
xor
movsb
jmp
sbb
push
sub
dec
lea
dec
adc
push
xorb
rcrb
sbbb
fadd
ljmp
pop
jge
pop
xchg
es
push
and
jns
dec
test
dec
aad
mov
dec
or
mov
rolb
sbb
sbb
jns
mov
dec
and
sub
inc
jp
push
mov
cwtl
sbb
mov
rcrl
stos
push
jg
sub
mov
enter
mov
dec
jb
mov
jecxz
xor
xchg
adc
xchg
xchg
lods
mov
fdivs
sub
movsl
popf
aam
fdivs
jo
xor
imul
rorb
repz
bound
jmp
cmc
cld
push
aad
sbb
out
popw
adcb
sbb
sub
push
jo
loope
ja
stos
fldl
or
rcrb
lock
xchg
jp
cmp
lds
pushf
mov
xchg
fs
jbe
mov
mov
rorb
std
cmpsl
jae
call
xchg
fisttpll
imul
out
sub
push
hlt
imul
scas
pop
push
adc
shll
dec
jg
fnstsw
and
les
xor
aaa
out
xchg
jle
rclb
imul
lret
cmp
pusha
sub
nop
in
mov
jbe
cmp
fdivs
dec
push
outsl
nopl
adc
movsb
loope
das
movsb
movsb
and
or
fsts
mov
sub
xor
pop
popf
jne
sbb
sbb
mov
iret
jge
cmp
jg
jecxz
mov
xchg
mov
xlat
testb
xchg
mov
push
imul
push
out
jge
les
cmp
cmp
xchg
xchg
iret
test
enter
mov
fldl
xchg
xchg
add
imul
push
and
mov
imul
std
xchg
test
addr16
sar
loope
mov
rolb
mov
stos
xchg
mov
push
add
es
jo
adc
dec
xchg
icebp
xchg
imul
int
xchg
in
daa
jb
mov
pop
or
pushl
insl
sub
aam
test
add
pop
sbb
sub
jecxz
adc
inc
adc
hlt
or
pop
inc
nop
mov
fsubr
and
nop
sub
xor
jl
sbbb
cmp
push
xchg
js
cmp
adc
push
mov
fisubrl
enter
add
seta
push
and
add
out
into
movsb
sahf
sub
jmp
fiaddl
cs
cs
jle
xor
xor
push
mov
jp
mov
insb
fsubl
aas
mov
adc
xchg
fs
cmpsb
fsub
adc
mov
mov
and
cwtl
ljmp
pop
sarb
dec
jecxz
xor
mov
sub
push
cli
test
inc
pop
inc
insb
lods
xor
scas
std
lret
and
addr16
jmp
fisubrl
pop
xor
pusha
movsl
mov
cs
and
inc
insl
sub
pop
mov
sbb
push
insl
pop
ja
das
inc
sub
inc
repz
jns
inc
pop
jns
pop
jo
xorb
add
push
jae
and
ljmp
mov
test
int3
add
cmp
and
scas
bswap
sub
xchg
ret
pop
out
inc
mov
in
and
mov
sub
gs
or
ja
mov
popl
out
jg
jmp
ret
xchg
or
jg
and
mov
mov
add
in
cmc
test
in
jl
sub
clc
cs
das
cmpsl
cmp
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
sti
xchg
xor
mov
pmovmskb
outsb
add
jecxz
and
ret
push
sbb
scas
cmovnp
mov
loop
insb
arpl
dec
mov
lret
xor
adc
xchg
push
iret
nop
es
mov
add
and
push
push
mov
bound
lds
sbb
jl
insb
cmp
cmpsb
mov
pop
stos
sub
fildll
adc
lock
cwtl
xor
lock
inc
scas
pop
jae
cmp
dec
xor
mov
inc
dec
mov
jb
push
xchg
pop
mov
sbb
ret
fsts
cli
sbb
loopne
out
sbb
xchg
push
ss
mov
stos
xor
mov
ficompl
outsl
add
dec
xchg
rol
into
dec
push
lcall
sbb
iret
inc
repnz
mov
mov
push
pushf
dec
inc
adc
repz
aas
pop
inc
std
enter
jb
inc
cmp
test
push
std
pop
ret
sbbl
fstl
or
jae
pop
sbb
lods
lea
sub
shll
fisubl
addr16
inc
orl
xchg
cmp
mov
mov
jl
pusha
mov
in
imul
jle,pn
sbb
adc
loop
xchg
sbb
cs
jb
nop
clc
rorb
inc
push
divb
pop
icebp
sahf
mov
aaa
jns
hlt
pop
sub
shrb
test
inc
int3
shlb
jo
inc
hlt
stos
xor
aad
and
push
das
pop
out
jne
leave
sub
inc
or
shrl
aad
inc
shl
pop
incb
pushf
adc
inc
mov
dec
fiadds
aas
mov
pop
adcl
jnp
mov
rorl
loop
jmp
out
movl
push
dec
sub
mov
add
in
mov
test
popa
xor
shll
addl
dec
rcll
stc
inc
movsl
repnz
in
adc
std
xchg
ljmp
das
mov
add
aas
outsb
daa
sub
xchg
add
mov
popf
and
adc
shrd
push
cmpsl
leave
pop
popa
cltd
cmp
fsubr
dec
stos
out
dec
js
test
subb
dec
jg
aaa
adc
cmp
mov
arpl
adc
repz
iret
cmpsb
jbe
shr
pop
or
and
xor
lods
jnp
jo
mov
pusha
daa
inc
enter
scas
sbb
test
xchg
hlt
mov
and
adc
xchg
daa
nopl
jbe
push
push
scas
shrl
stos
mov
push
out
adc
or
ljmp
jp
popf
jge
sub
dec
sbb
jecxz
sti
jmp
not
addr16
bound
or
mov
sahf
mov
insl
in
mov
in
lea
pop
imul
or
aaa
test
int3
mov
ret
xchg
hlt
sbb
les
push
jae
mov
xchg
aaa
roll
stos
out
jl
lret
sbb
into
mov
dec
push
dec
pop
jbe
jle
stc
dec
sbb
lds
mov
pop
nop
aas
cmp
sti
cld
ljmp
inc
dec
testl
daa
test
aam
orb
jbe
adc
add
and
mov
shll
mov
daa
mov
test
adc
sub
inc
das
mov
insb
cmp
jno
pop
mov
inc
dec
sub
movsl
fstl
dec
or
push
arpl
loop
leave
push
stos
cli
pop
dec
jecxz
or
mov
or
mov
mov
in
lods
pop
mov
jge
in
mov
xchg
pop
rorl
aaa
and
neg
hlt
mov
add
xchg
dec
mov
cs
in
and
rsqrtps
mov
push
pop
mov
cmc
insb
xor
movsb
test
mov
mov
cmp
sub
out
popa
and
sub
clc
loope
sti
lods
or
fadds
jmp
mov
jmp
xchg
lock
adc
mov
fs
push
lea
aam
mov
dec
imul
sbb
mov
lods
mov
sbb
sbb
push
je
outsb
loopne
sahf
xor
mov
insl
test
pop
push
pop
cltd
cwtl
push
sub
mov
scas
mov
int3
add
repnz
pop
sar
dec
lods
pop
adc
pop
aam
cmp
ljmp
in
cs
jg
sub
pop
jge
jmp
inc
mov
rol
ret
in
ds
and
mov
lods
popa
dec
loope
decb
ret
sbb
ss
orb
cmp
dec
mov
adc
push
mov
adc
fwait
movsb
inc
ja
les
jg
or
in
int
mov
and
mov
jo
mov
jge
mov
popf
push
add
shlb
dec
push
sbb
divw
jne
inc
mov
insb
jbe
das
pop
mov
out
fidivrl
xor
add
cmp
dec
pushf
xchg
and
cmp
nop
cmp
cltd
pushl
push
pop
fwait
fwait
dec
fisubl
call
push
das
inc
add
in
xchg
pop
cld
sbb
stos
in
loope
mov
add
stc
adc
xlat
pop
test
cwtl
xorl
fwait
fwait
ret
xchg
add
cmp
jb
fldl2t
dec
mov
pcmpgtd
ss
inc
mov
and
and
out
mov
addr16
add
icebp
test
adc
sbb
pop
and
fwait
mov
call
rorb
pop
push
aad
sbb
les
cmc
lcall
adc
fcoms
xchg
mov
repnz
ss
int3
xlat
aad
add
jp
scas
enter
mov
cmp
out
notl
mov
jl
aaa
lea
push
bound
or
mov
rclb
fwait
call
cld
inc
icebp
loopne
neg
fs
sbb
repnz
xor
dec
int
clc
inc
add
test
insb
sbb
pop
push
jge
out
aaa
pop
jb,pt
inc
fwait
out
stc
mov
lock
cmp
mov
mov
repz
dec
sub
loope
sarl
mov
scas
addr16
jge
add
inc
mov
xlat
cmp
daa
cld
jo
pop
in
sub
imul
and
lods
scas
fs
aad
sti
shlb
jmp
loop
mov
xlat
push
mov
mov
adc
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
mov
mov
and
pop
inc
fsubr
das
jmp
div
or
inc
push
jb
mov
add
xchg
mov
push
popf
dec
rcll
popa
fimuls
dec
mov
pop
cmp
ss
lcall
jo
repz
out
xchg
lea
stos
push
mov
stos
roll
scas
popf
stos
int3
pusha
jp
movsl
fidivrl
jecxz
mov
dec
sti
push
pop
mov
mov
pop
and
cmp
mov
pop
add
mov
stos
pop
xchg
sbb
push
repnz
mov
sbb
in
sbb
nop
cmp
pop
cmp
fistps
mov
inc
stos
inc
andl
mov
pop
incb
mov
lea
shrl
xor
pop
add
inc
adc
aas
fidivrs
jg
mov
or
ja
aaa
in
divl
cmovb
and
dec
es
adc
fcmovbe
jbe
xchg
inc
xchg
jmp
lods
popf
jae
mov
xchg
test
cmp
hlt
pusha
test
ffree
or
js
xor
addr16
cmpsl
pop
sbb
dec
push
fcompl
push
push
inc
cmpb
mov
pop
lods
call
and
xchg
or
mov
or
dec
test
xchg
test
cmp
mov
ss
xchg
movb
sub
roll
dec
mov
aas
pop
sbb
xor
pop
mulb
and
xchg
popa
mov
daa
adc
push
mov
push
pop
jnp
xor
int
pop
dec
stc
mov
inc
sub
sti
push
or
scas
pop
or
add
icebp
into
ficompl
pop
dec
cmp
cmp
into
popa
leave
clc
mov
enter
inc
mov
lds
outsb
in
jg
rclb
lds
sbb
ss
pop
jmp
cs
outsb
fidivs
xor
repnz
push
sub
ret
dec
push
xchg
sub
es
inc
in
cmp
das
imul
ret
shrl
jle
lock
mov
push
lea
pop
fs
aam
cmp
fs
ds
jo
mov
add
jno
pop
adc
mov
dec
jae
pop
xlat
call
lahf
incb
arpl
xorb
loope
xorl
inc
dec
or
pop
xor
xchg
pop
outsb
mov
gs
in
pop
out
mov
pop
outsl
sbb
movl
addr16
imul
dec
btr
sub
jne
test
fcoml
dec
xchg
aas
lods
addl
call
inc
out
dec
sti
shl
ret
jp
mov
cli
sbb
imul
test
push
or
add
mov
mov
int3
jle
je
enter
add
fldenv
inc
push
lods
lods
orl
xchg
push
or
push
loop
jbe
inc
scas
lret
push
mov
adc
mov
sub
out
cvtps2pi
imul
scas
add
stos
mov
sbb
andb
push
leave
fiadds
popf
add
cmpl
jno
dec
data16
outsb
lods
popf
cmp
data16
cli
into
adcl
jne
mov
dec
das
jne
pop
call
or
jg
push
loopne
mov
je
aaa
and
lcall
xchg
add
mov
sbb
mov
addr16
outsl
fcoms
movsb
xchg
mov
mov
pop
mov
or
push
enter
in
pop
pusha
imul
rcll
cmp
mov
xchg
sub
add
cmp
dec
andl
mov
imul
mov
and
jp
xor
mov
cmpsb
into
movsb
fldl
scas
loop
mov
xor
imul
dec
lods
inc
testb
cltd
imull
mov
cmpsb
adc
ficoml
rcrb
inc
aad
ja
stos
push
out
fmuls
int3
imul
or
jne
nop
gs
push
clc
cmp
xchg
int3
adc
jmp
pop
push
imulb
cmpsb
test
push
push
mov
mov
add
ja
aaa
cmp
adc
sub
fwait
sbb
repz
sbb
mov
xor
repnz
movsl
mov
fldenv
adc
push
or
xchg
sub
sbb
add
push
xchg
sbb
inc
jbe
jne
xchg
xchg
fistpll
call
les
stc
mov
pop
mov
sbb
xor
rorb
cmpsl
push
addr16
jecxz
dec
cmpsb
sub
jne
ja
es
inc
rorb
add
shl
lods
daa
pop
sub
mov
xchg
mov
sbb
push
lock
push
xchg
inc
push
xchg
or
mov
sbb
xor
xlat
pop
push
lds
sbb
mov
pushf
adc
or
das
xchg
push
cmp
add
push
sbb
stc
lods
xchg
das
cmp
mov
xchg
subb
les
cmp
pop
push
lods
nop
imul
dec
inc
sbb
int3
fidivs
jg
and
out
imul
enter
pop
cli
mov
repnz
scas
pop
or
sub
adc
fwait
mov
mov
or
and
xchg
pop
pop
push
mov
jno
jp
out
mov
mov
jl
arpl
mov
scas
fwait
pop
pop
sbb
movb
mov
mov
popf
push
jmp
mov
inc
mov
fistps
adc
mov
cmpl
add
nop
pop
jne
or
ret
push
mov
dec
push
lcall
mov
add
jge
jecxz
pop
cmp
dec
lods
pop
pop
ja
cltd
xchg
jge
cmpsb
cmpl
mov
pop
mov
inc
push
inc
enter
mov
cmp
jl
add
adc
lds
dec
adc
idivb
stos
dec
lods
fcompl
nop
xchg
pop
xchg
imul
pop
test
xlat
and
xor
mov
loope
lods
lods
out
push
cmpsl
dec
stos
jae
xchg
jno
push
pop
and
add
mov
push
mov
mov
hlt
cmp
mov
mov
arpl
cmp
push
insb
lds
pop
or
sub
lea
psraw
push
test
aaa
dec
dec
sub
xor
lds
mov
in
add
addb
xchg
xchg
aaa
adc
hlt
std
pop
test
sbb
fwait
aad
sub
sbbl
or
int
sbb
jns
data16
cmpb
pop
insb
xchg
sbb
jb
or
dec
sub
or
arpl
sbb
push
jg
cmc
sub
sti
mov
leave
mov
pop
push
mov
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
inc
xchg
dec
mov
and
andb
out
and
mov
je
ficoms
clc
mov
ds
sub
in
mov
loopne
jl
ja
imul
dec
mov
adc
inc
in
loope
inc
shrl
imul
or
sub
sbb
subl
adc
and
scas
xacquire
mov
std
movsl
cli
fisttps
mov
push
cmc
imul
hlt
push
push
sbb
xchg
es
sub
mov
jle
pop
add
pop
pop
inc
mov
adc
cmp
or
xor
mov
jmp
leave
xchg
pop
or
pop
fucomip
lock
data16
dec
jl
std
ret
pop
dec
testl
or
in
lods
push
jmp
pop
dec
xor
out
out
add
std
jae
jbe
xor
arpl
clc
mov
es
push
bound
lds
mov
ljmp
mov
js
pop
fdivs
aas
jp
stos
nop
aaa
xchg
push
adcl
xor
pop
mov
inc
cltd
sahf
in
inc
xor
and
or
rol
mov
arpl
xchg
leave
mov
iret
mov
shl
sbb
add
mov
sub
pusha
enter
pop
xor
es
fwait
jle
mov
sbb
das
push
pop
jne
outsl
and
add
fsubr
mov
adc
lret
pop
outsb
shl
or
testl
mov
ljmp
in
add
sbb
mov
and
sti
cmpsl
movsb
stc
lock
xor
test
jmp
pop
jno
sbb
loope
mov
shll
inc
popa
mov
jns
push
ds
jg
loope
outsl
add
add
pop
cltd
adc
or
ror
add
ss
xchg
mov
scas
fistl
and
loopne
fsub
rcrb
xchg
mov
lods
lret
test
sub
jno
lds
dec
imul
lahf
inc
jmp
or
sti
push
cmp
dec
dec
sub
cmc
fcoml
pop
fldcw
inc
stc
lcall
adc
and
lods
fistpll
mov
aad
add
push
sti
fbstp
xor
dec
ret
repz
enter
insl
mov
mov
movsb
jecxz
outsb
and
add
push
movsb
mov
or
push
jb
cmc
cmp
rcrb
aaa
pop
add
or
add
xchg
xor
and
pop
std
jp
rcrl
or
ja
aad
popa
fs
scas
into
loop
js
pop
filds
movsl
and
arpl
sbb
xchg
gs
jecxz
sub
insb
mov
mov
gs
ret
jo
imul
into
flds
aas
lahf
testl
add
mov
cwtl
shlb
addb
and
jae
mov
cli
into
sub
fists
stos
xor
and
movsl
sub
and
popf
int3
xchg
pop
add
mov
cli
fidivrl
and
cmpsb
or
outsb
sbb
ljmp
sarb
cli
inc
movsl
sbb
jb
lcall
cmp
loope
and
sbb
add
in
cmp
sbb
fstpt
outsb
popl
and
adc
les
aaa
je
and
xchg
jo
mov
sub
add
or
loop
mov
arpl
outsb
clc
cmp
outsb
push
repnz
fisttpl
movsl
push
mov
sahf
rorl
or
dec
pop
xor
les
cmp
jnp
aaa
add
adc
cmp
out
or
inc
sub
jl
cmpl
shlb
in
sbb
adc
push
out
cmp
outsb
sbb
repz
lcall
pop
pushf
xchg
and
jle
sub
scas
and
pop
xorb
add
pop
sub
cwtl
dec
jae
jnp
xor
sbb
fwait
mov
pop
fisubrs
pop
pop
pop
or
jns
lahf
ss
out
into
jmp
sbb
inc
mov
mov
test
jg
xchg
testl
fsts
out
add
add
mov
loope
inc
push
fisubrs
pop
xchg
pop
mov
or
cmp
mov
dec
int3
mov
repnz
pop
and
push
dec
sti
pop
insl
mov
sub
stos
cmpsb
lcall
mov
mov
sbb
rclb
inc
pop
and
pushf
jecxz
imul
mov
pop
xchg
sub
mov
rorb
adc
or
jo
scas
and
dec
aam
ret
xor
mov
xor
cmp
movsl
mov
lret
jmp
jmp
outsb
jae
notb
mov
jne
sti
push
fadds
sbb
subb
xor
mov
test
and
fimull
push
pop
outsb
cld
push
clc
test
mov
jo
pop
sbb
push
das
sarl
sub
leave
sbb
mov
and
inc
push
xlat
out
push
sub
pop
xchg
mov
in
mov
jge
idivl
outsl
sti
sub
sahf
ret
sub
adc
sahf
gs
mov
pop
mov
pusha
cmp
push
dec
mov
push
or
cmp
rcl
test
ljmp
testl
and
add
xor
cmpsb
lcall
scas
mov
xchg
push
loop
mov
movsb
and
adc
xor
add
outsl
mov
sbb
ret
push
enter
mov
cmp
loop
add
cmp
out
gs
repz
dec
lea
inc
mov
shl
cs
xor
mov
or
dec
clc
adc
leave
jns
xchg
mov
sarl
pop
lods
mov
ja
pop
jbe
jg
inc
add
jno
mov
iret
out
cwtl
inc
dec
dec
aam
adc
push
mov
and
pop
sub
pop
mov
icebp
fiaddl
cmp
sahf
imul
or
out
xor
mov
sbb
setno
pop
int3
xor
or
std
dec
inc
pop
jmp
mov
jmp
fstps
sub
push
inc
out
rcrl
and
pop
xchg
movsl
or
xor
push
mov
cmp
mov
test
outsl
push
xchg
orl
cmp
mov
jnp
and
dec
loop
lock
iret
bound
xchg
nop
mov
test
cs
aam
popa
stc
test
jns
push
adc
jmp
into
add
or
fimuls
adc
and
mov
call
xlat
sbb
dec
mov
das
movsb
pusha
nop
push
or
sbb
cli
negb
xor
cmpl
mov
outsl
pop
lea
sahf
add
adc
in
adc
ss
sbb
cmp
pop
test
and
jbe
nop
and
adc
int3
pop
sarl
imul
lret
mov
xor
sub
xor
test
pop
and
scas
dec
pop
cmp
jae
gs
adc
sti
sarb
shrb
or
cmp
cmp
in
jle
cmp
lea
cmp
jmp
rorl
es
cmp
or
into
sub
pop
xor
mov
mov
int
pop
mov
movsb
cmp
sub
sub
push
adc
mov
decb
jnp
push
jp
sub
test
sub
and
stos
addr16
aad
adc
or
cmc
xchg
xchg
mov
daa
cmp
in
adc
test
scas
mov
adc
pop
out
sub
xor
je
outsb
xchg
sbbl
dec
adc
mov
movsb
mov
loope
test
pop
fcmovbe
pop
cmp
insb
jbe
das
sarb
mov
jg
inc
fwait
xchg
mov
mov
push
fwait
int
xorb
jge
addl
and
movsl
test
test
inc
xchg
sub
imul
movsb
pop
jg
xchg
je,pt
jge
icebp
adc
jle
fnstenv
sub
test
scas
fisttpl
mov
xchg
test
hlt
shrb
dec
enter
out
mov
lcall
add
push
imul
movsl
cs
or
jp
std
sub
sub
out
out
or
cwtl
cmp
scas
xchg
scas
ffree
ss
cli
aas
out
cmp
pop
lahf
xor
iret
lds
out
inc
ja
add
jg
es
test
push
subl
test
mov
xchg
dec
jne
or
xchg
addb
push
jns
into
jne
mov
mov
aad
mov
adc
sbb
out
jmp
or
ss
cmp
push
cmp
adc
adc
sti
adc
inc
xchg
cmp
enter
mov
mov
adc
icebp
fdivr
cmp
jnp
nop
dec
pushf
or
sti
jo
xchg
or
mov
test
or
rol
pop
xchg
bound
xor
insl
push
or
ljmp
jmp
dec
push
xchg
push
jg
sti
hlt
fcoml
hlt
insl
push
cmpsb
push
add
popa
pop
sbb
out
mov
cmp
repz
lods
mov
ret
enter
dec
xor
mov
aam
sbb
fs
aad
sbb
or
cmp
ja
dec
lahf
lret
sar
inc
clc
mov
add
jo
and
sbb
rorb
pop
aaa
jne
insl
mov
notb
cmp
sbb
in
sbb
add
in
fldz
jl
cmp
sub
push
push
push
movsb
inc
xor
inc
push
xchg
and
and
data16
mov
imul
cmpsb
out
mov
jae
xor
mov
std
push
xchg
and
adc
dec
add
pop
test
add
loop
pop
gs
dec
dec
imul
jnp
jb
sbb
int3
mov
jp
pushf
adc
dec
jecxz
mov
adcb
and
and
mov
ss
cmpsb
push
ljmp
addr16
xchg
cmp
mov
stc
or
je
xor
pop
lahf
pushf
inc
mov
cmpsl
adc
mov
mov
mov
dec
xor
mov
mov
into
ret
add
shr
xor
add
dec
ss
cmp
scas
in
push
cli
in
imul
js
pop
cmp
pop
aad
and
sbb
mov
jecxz
mov
out
sub
into
jno
mov
cld
scas
shll
repnz
outsl
pop
inc
test
push
mov
ljmp
rcrl
jae
repz
push
pusha
imul
inc
rcl
cwtl
jne
mov
or
push
pop
stc
sub
mov
mov
dec
fidivl
cli
shl
and
adc
pop
pop
je
loop
jp
xor
push
sbb
mov
mov
push
lcall
popf
dec
clc
jle
int
das
mov
dec
std
mov
jecxz
dec
hlt
pop
in
dec
mov
pop
rcrl
mov
jb
sub
scas
std
jle
ds
mov
cmc
cwtl
xor
mov
xor
test
and
push
in
movsb
sub
mov
lea
dec
push
and
lahf
bound
mov
mov
int
fs
pop
and
adc
popa
shrb
pop
ja
mov
sbb
je
pop
lahf
mov
and
loope
fdivl
xor
loope
cmpsb
rolb
add
inc
sub
negl
mov
mov
mov
jno
fs
cmp
inc
dec
bound
xchg
jmp
mov
inc
loopne
adc
loope
test
and
xor
jge
cli
or
adc
ss
jno
adc
sub
test
xorl
pushf
mov
push
and
xchg
mov
sbb
mov
mov
fnstenv
fldl
push
sbb
fcmove
and
add
mov
push
shlb
push
xchg
push
mov
sbbl
dec
pop
aam
sbb
dec
int
xchg
mov
mov
shll
jmp
inc
cmp
jae
loop
xchg
fdiv
adc
das
and
or
adc
test
pushf
enter
pop
or
out
cmp
repz
das
das
gs
int
mov
sub
mov
fnstsw
add
std
add
or
out
pop
mov
or
lds
je
and
pop
mov
mov
jecxz
gs
xchg
hlt
int
push
mov
outsb
mov
xorl
lahf
stos
push
lret
adc
xor
cltd
adc
mov
and
jecxz
or
fs
fs
lea
cld
push
and
sahf
scas
mov
mov
adc
sarl
outsb
push
and
iret
flds
test
repz
aaa
jo
lock
aas
insb
mov
addr16
mov
jo
lds
dec
ret
dec
aas
loopne
mov
or
sub
shll
or
or
and
mov
popa
lcall
xor
aaa
cwtl
xchg
mov
xchg
jle
je
pop
daa
xchg
addr16
int
add
pushf
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
sub
in
daa
in
adc
and
mov
or
pop
call
xchg
std
cmc
in
add
jmp
movsl
data16
cmp
pop
cmc
decb
out
mov
pop
pop
add
lahf
cmp
cli
fldt
xchg
xor
mov
lock
int3
andb
fdivl
addr16
imul
mov
fsubl
sub
and
and
pop
and
insb
push
jp
mov
push
into
and
cmpps
je
sbb
jo
ficomps
adc
jg
in
cmp
dec
fstpl
fsubs
popf
repnz
shrb
and
inc
bnd
push
or
sbb
les
mov
jae
lcall
xor
inc
addr16
repz
into
mov
dec
cwtl
mov
sarl
mov
push
and
dec
shrl
mov
insb
ret
cld
xor
or
adc
in
in
fiaddl
lds
dec
pop
out
cmp
xor
inc
push
lods
pop
inc
ret
jl
aas
cmp
mov
pop
add
push
int3
fisttpll
sbb
test
cltd
cmp
insb
mov
jo
mov
push
mov
push
shl
lcall
jbe
or
iret
xorb
adc
jnp
and
mov
xchg
fmul
cmp
jo
cmp
aam
pop
adc
scas
cmpsl
adc
and
adc
pop
sarb
fnsave
dec
dec
dec
iret
pop
add
jle,pn
shrb
int
mov
cltd
mov
xor
mov
js
stos
cmp
outsb
mov
popa
mov
mov
xchg
mov
xchg
das
testl
cltd
push
repz
jns
sub
mov
mov
add
pop
aaa
push
sub
pop
out
xchg
xchg
scas
inc
mov
cmp
out
cmp
jp
push
cmp
adc
jp
stos
neg
jne
cwtl
cmp
int3
jb
lret
lahf
inc
jp
loop
mov
mov
aaa
in
inc
shrb
xchg
icebp
adc
jo
inc
rolb
mov
pop
lods
xchg
lret
dec
xchg
lds
and
mov
lds
add
out
insb
push
pushf
sbb
jb
mov
mov
xorb
insl
cmc
shll
adc
popa
test
ds
movsl
and
and
gs
adc
cmp
ss
hlt
or
popf
or
mov
push
gs
pusha
pop
loop
sti
sti
rolb
push
aam
sahf
and
fwait
pop
jb
sbb
bound
dec
mov
sbb
pop
pop
adc
mov
add
mov
xchg
pushf
in
cs
add
lret
jg
push
lods
or
mov
jo
push
push
sti
lcall
ss
sahf
test
inc
sbb
icebp
js
rcl
mov
test
repnz
test
lcall
sbb
decl
sub
test
mov
add
in
test
lea
shlb
lret
inc
push
inc
xchg
cmp
jno
mov
mov
outsl
cwtl
or
scas
arpl
andl
jb
xchg
pop
jle
push
sub
sub
push
vpminsw
sub
icebp
fsub
int
popa
arpl
cmp
cmp
sub
cmp
pop
inc
mov
adc
cmc
xor
cmp
lods
pop
xchg
or
jmp
jecxz
xor
ja
loope
testb
aas
pop
push
dec
pushf
lret
lods
fiadds
movb
rorl
lea
dec
movsl
ds
mov
repz
mov
iret
jne
sub
or
lock
mov
cmp
call
imul
add
jle
addb
xor
in
sbb
and
pushf
jmp
adc
bound
idivl
fistps
sub
shll
adc
int3
subl
stc
and
aaa
pop
inc
loopne
and
mulb
push
add
icebp
rcrl
inc
jb
addr16
in
clc
pop
stc
jae
inc
outsl
adc
cmp
push
movsb
mov
imulb
and
adc
leave
aas
cs
push
lcall
and
xchg
mov
dec
divb
jnp
movsb
insb
xchg
loope
sbb
iret
adc
arpl
mov
mov
pop
pop
jecxz
nop
sub
aam
scas
dec
push
movsb
daa
mov
movsl
sti
jge
rorb
push
mull
iret
sbb
lods
xchg
dec
dec
sti
cmp
push
xchg
push
xchg
lods
sub
enter
adc
cwtl
dec
xlat
ret
pop
or
insl
rcrl
mov
ret
sub
mov
aaa
jne
or
popf
and
divb
fbstp
inc
sub
daa
cwtl
pop
push
iret
or
rolb
mov
mov
mov
mov
out
test
adc
rcl
dec
xchg
jne
jno
incb
or
cli
cmpsb
mov
xorb
push
cmp
sbb
cwtl
push
lret
sahf
fidivrl
and
xchg
cli
std
insl
sub
add
or
mov
out
out
mov
mov
pop
adc
loope
sub
add
in
sbb
je
pop
dec
xlat
pop
sbb
aam
adc
rorb
fnstcw
jbe
sbb
subl
pusha
sbb
dec
movsb
pop
pop
sub
stos
sbb
lods
xchg
fsubl
mov
sbb
dec
cmp
push
ja
ja
lcall
xchg
mov
add
gs
out
fisubrl
push
cs
jecxz
push
or
aas
mov
icebp
mov
in
dec
fmull
adc
jecxz
sbb
stc
shll
scas
mov
mov
xor
lds
mov
push
add
jecxz
in
imul
orb
dec
xchg
dec
cmpsb
lret
or
pop
mov
mov
mov
pop
adc
lcall
push
sbb
out
or
sub
sub
shlb
jne
jo
sbb
push
pop
loop
jge
xchg
cmp
sbb
sbb
rolb
push
mov
aaa
inc
inc
loopne
lock
faddl
lods
rorl
inc
mov
int3
loop
adc
cmp
mov
cmp
add
enter
mov
and
outsl
out
push
aas
mov
pop
fisttpl
pop
xchg
pop
pop
inc
jne
sub
xor
stos
addr16
xor
pop
sub
mov
movsb
sarl
lea
fwait
fwait
rorl
xchg
jecxz
jl
addr16
sahf
sub
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
inc
pushf
stc
mov
ficoms
mov
lar
and
hlt
js
movsl
cld
xor
xor
inc
mov
dec
jbe
and
mov
adc
xchg
fstpl
shr
pop
dec
pusha
jl
dec
ds
sahf
ss
fstl
jne
adc
jmp
mov
adc
cmc
cli
cmp
mov
lcall
pop
cmp
pop
add
sub
sarb
and
sbb
cld
xor
mov
push
lret
jmp
pushf
jg
cmp
shll
cmp
xchg
push
in
dec
jg
adc
cs
rcrb
inc
fisttpl
lret
xchg
mov
imulb
jbe
adc
jae
lret
inc
ds
jno
sti
orb
add
adc
out
notb
imull
ljmp
insb
inc
rol
jl
pop
mov
jb
lock
jge
sbb
ret
push
pop
jnp
popa
dec
aad
jge
shlb
shrl
inc
fmulp
adc
repnz
cmp
imul
stc
mov
sub
mov
insl
sub
dec
lret
add
add
in
xchg
popa
das
movsl
dec
sbb
jl
jbe
dec
lods
jae
dec
and
inc
leave
mov
sarb
outsl
jbe
pop
imul
test
in
packuswb
insl
fisubrl
jae
push
mov
push
pop
ja
jbe
jno
sbb
xor
xchg
xchg
sub
pop
sbb
or
fsubl
popf
push
fisubrl
out
xchg
es
aad
mov
and
lods
imul
movl
sub
jno
jae
addl
test
aam
pop
jnp
fiadds
loop
mov
mov
rclb
repz
das
push
xchg
repnz
int
shlb
adc
pop
xor
out
enter
xchg
std
mov
pop
lcall
sbb
in
dec
and
hlt
ja
sbb
jge
sarb
pop
stos
mov
jg
lock
cmpsl
divb
sub
addb
dec
mov
fwait
mov
shlb
sbb
das
cmp
lds
in
mov
filds
nop
adc
push
mov
sbbb
push
fwait
adc
call
fistpl
push
jge
dec
push
push
test
xchg
mov
pop
fstl
repz
les
and
fbld
mov
icebp
xchg
xchg
ficomps
mov
sti
cmp
ljmp
push
inc
ss
jmp
push
xor
dec
sbb
fsts
addb
hlt
fisubrl
sbb
test
and
mov
daa
mov
and
mov
repnz
push
in
xor
mov
push
jno
or
adc
sbb
lods
xchg
adc
inc
shrb
sub
mov
jle
push
andl
pop
push
mov
test
mov
jl
jno
sbbl
cmpsb
fisttpll
fs
dec
daa
add
or
insb
xchg
shll
les
cltd
cmp
cmp
out
lods
std
movsl
jns
addl
push
or
jge
mov
sbb
stos
adc
push
fwait
push
jbe
je
push
inc
pop
lods
dec
dec
fwait
jnp
shll
mov
rorl
adc
int3
mov
sub
push
aaa
ja
into
test
and
pop
jnp
shl
cltd
data16
xor
pop
xchg
out
mulb
popf
out
mov
add
stos
and
inc
push
mov
mov
bound
fdivrl
mov
movsb
fldt
mov
mov
push
loop
out
jbe
jo
aas
in
and
mov
movsb
push
loop
cwtl
aam
in
xchg
push
negl
js
add
and
mov
jns
popl
divl
jns
into
mov
shlb
hlt
int3
popa
fmull
mov
jge
dec
mov
jne
shrl
push
pusha
std
push
jno
out
xlat
xchg
ds
mov
fadd
and
or
out
dec
mov
mov
popf
mov
mov
mov
dec
daa
dec
daa
pop
jae
stos
lock
fidivl
sarb
rcrl
cmp
cmpl
fadd
cld
jp
lret
mov
push
jl
and
insl
cld
rorb
aad
push
imul
pop
jp
or
mov
xor
dec
lret
addr16
popf
jno
sahf
inc
sub
sbb
and
int
mov
xlat
cs
mov
gs
stos
xchg
inc
sub
mov
pop
es
cmpsl
mov
mov
xchg
fwait
inc
xor
shr
mov
loopne
cwtl
ljmp
gs
scas
xchg
or
shl
mov
and
dec
repz
mov
bnd
int
adc
mov
cmpsl
aaa
lods
mov
lock
and
mov
push
mov
cwtl
jb
jg
push
add
dec
cs
jne
cmpsb
pop
xchg
adc
dec
in
or
sub
jmp
adc
mov
cmp
mov
or
xchg
orl
dec
stc
cmp
jmp
sub
loopne
loope
movb
mov
xchg
sub
sbb
mov
xor
mov
add
dec
stc
shlb
mov
ja
adcb
movsl
push
dec
insb
outsb
sub
mov
sub
das
sti
insl
shrl
mov
fildl
sti
daa
push
or
fiaddl
inc
jae,pt
lret
dec
push
pop
push
inc
or
insl
ds
aam
outsl
mov
leave
mov
fwait
setp
lahf
clc
sarb
inc
and
test
push
jge
stc
adc
imul
into
test
dec
mov
xor
jnp
js
mov
push
add
stos
xchg
roll
int
jg
dec
and
push
push
pop
popf
fldt
mov
pop
add
roll
push
pop
aaa
scas
jae
pushf
outsb
stos
adc
movb
mov
scas
xchg
and
mov
in
jbe
xchg
gs
dec
testb
sbb
lods
xor
inc
xor
cmpsl
fsubl
push
popa
ja
les
sub
inc
inc
push
dec
pop
ljmp
xchg
add
scas
jp
aam
out
movsb
imul
loopne
xchg
mov
loop
adc
adc
orl
scas
push
mov
push
sub
xor
shlb
insb
jl
cmp
xor
sahf
mov
sbb
mov
pop
push
xchg
sahf
or
push
cmp
mov
jmp
cmc
xchg
cmp
push
mov
adc
test
mov
adc
and
mov
repz
lea
mov
pop
inc
nop
xchg
sarl
popl
jmp
insb
rcl
ret
gs
xchg
jle
scas
clc
mov
in
loopne
test
aas
and
cwtl
nop
mov
sbb
insl
iret
xlat
xchg
jnp
cmp
xchg
fisubl
loopne
sub
sbb
add
jle
pusha
cmp
sub
jnp
aad
lret
ret
pop
into
mov
clc
mov
shll
add
cvttps2pi
pusha
sti
cmp
lcall
aad
or
fisttpll
xor
movsl
mov
inc
sbb
xor
fnstsw
cmpsb
scas
xchg
xchg
popa
pushf
mov
lods
out
out
cmpsb
push
jg
and
pop
mov
or
mov
mov
addl
and
jne
out
movsb
movsl
mov
cmpsl
mov
icebp
aaa
bound
mov
inc
shlb
aas
in
in
dec
mov
dec
mov
cmp
pop
dec
lahf
lock
test
rcl
les
pop
lahf
ss
repz
loopne
and
push
dec
into
jne
push
xchg
dec
data16
faddl
shlb
push
test
test
cmp
inc
test
lods
dec
fs
ljmp
daa
outsb
cmpsb
daa
and
and
sub
aad
cmc
adc
add
movsb
sub
add
sbb
test
dec
iret
mov
mov
mov
xchg
inc
popa
push
mov
and
call
repz
outsl
movsl
xchg
xor
pop
sbb
mov
rcr
push
aad
xor
dec
ljmp
mov
add
push
mov
inc
inc
inc
dec
or
dec
out
xchg
ljmp
and
adc
cli
mov
enter
cmp
mov
mov
jno
push
cmp
mov
ror
iret
in
shl
push
int
push
adc
mov
mov
das
pop
sarl
sub
and
push
inc
sbbb
es
or
cmp
fucom
call
lds
or
mov
int3
or
icebp
and
int
lods
sbb
lret
addr16
pop
stc
addb
mov
repz
mov
dec
dec
mov
push
adc
lock
movsb
mov
push
push
int3
adc
test
or
mov
pushf
jo
add
jl
xor
jae
sbb
mov
adc
pop
xchg
mov
repz
movsb
mov
dec
jge
cmpsb
dec
and
nop
in
xchg
incb
test
xchg
shr
out
ret
dec
fisubrs
sub
xor
adc
fsubrl
xchg
mov
fcmovb
sbb
cmp
fs
stc
iret
rorb
int3
mov
xchg
mov
mov
jns
xchg
push
ffreep
lods
push
dec
sub
xchg
popf
iret
mov
push
xor
xchg
mov
or
push
cmp
mov
and
aas
jecxz
sbb
rcrb
je
movsl
pop
xchg
sub
sahf
insl
cmp
sbb
sub
push
daa
nop
lods
push
aaa
stos
bnd
mov
sahf
leave
popf
test
jne
xchg
fnstenv
les
fcmove
mov
adc
jge
jmp
mov
pop
jo
adc
jg
iret
or
sub
and
jle
movsl
sbb
cmc
push
cmp
sti
sub
movsb
inc
or
sti
shl
pusha
stos
dec
stos
mov
les
push
or
shl
loope
outsl
add
lahf
es
jp
sbb
cmp
loop
jnp
mov
imul
or
aas
push
xchg
sbb
mov
sbb
push
cltd
movsl
mulb
jg
in
mov
out
mov
push
xor
loope
sti
pop
pop
cmp
cs
xchg
sbb
push
test
mov
popf
in
mov
imul
xor
push
mov
mulb
xor
out
adcl
das
lahf
out
dec
or
sbb
and
and
jnp
lcall
pusha
out
inc
sub
sub
jnp
enter
lcall
adcb
test
jmp
xor
lahf
mov
sbb
into
clc
pop
mov
leave
cmpb
loopne
int
jp
mov
and
fcomi
adc
shl
or
loop
int3
imul
jne
pop
jg
repnz
xchg
cld
das
fcoml
rcll
pop
movsl
aad
popa
cmpsl
dec
xor
xor
adc
mov
mov
sub
js
into
negb
adc
test
sbb
mov
roll
ret
adc
subl
int3
into
cvtdq2ps
mov
push
dec
insl
bound
sbb
dec
mov
fdivrl
cmp
jbe
scas
idiv
xor
or
fldcw
push
pop
xchg
cmp
add
inc
das
dec
xchg
jae
adc
aas
push
sbb
popa
lret
movsl
imul
pop
cmpsb
pop
jb
rorl
movsl
sub
in
and
addr16
cmpl
add
adc
mov
dec
rclb
outsb
pusha
hlt
mov
xor
shrb
dec
movsb
fnstcw
dec
gs
lds
xor
cli
jmp
adc
sarb
test
push
or
repnz
mov
andb
dec
call
out
xchg
jecxz
and
aam
jno
scas
notl
adc
aad
add
sti
ficoml
idivl
adc
aad
sti
fiadds
pushf
insb
rorl
imul
or
lea
dec
add
pop
call
lea
fldenv
adc
fmul
rorl
rcrl
pushl
jnp
pop
sbbl
insb
lock
sbb
shlb
xor
pop
mov
iret
aad
add
pushf
xor
cmp
xor
cli
ret
mov
roll
push
cmpsl
push
mov
xor
lods
mov
fnstcw
inc
push
cmp
cmpsb
lcall
inc
and
scas
sub
pop
jae
mov
cmp
xchg
in
jmp
or
mov
nop
jp
sbb
out
inc
pop
lods
pop
movsl
cmp
loop
sbb
mov
xchg
xchg
mov
inc
mov
sti
and
shrl
insl
adc
adc
dec
dec
xchg
inc
cmp
enter
cmp
mov
call
mov
cmp
lods
test
leave
mov
mov
dec
ds
pop
hlt
es
adc
xchg
xchg
mov
out
and
push
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
pushf
mov
and
cmp
fiaddl
sahf
mov
out
push
adcb
and
bound
outsb
jae
and
dec
xchg
dec
jl
addr16
push
cmpl
subl
xor
xchg
or
mov
push
mov
adc
shrb
les
les
jecxz
sub
mov
ljmp
mov
xchg
lock
sub
sbb
xor
or
fstps
in
adc
cmp
loopne
add
das
notb
jns
jb
cs
jecxz
pop
test
ja
dec
mov
ret
add
dec
leave
push
pop
pusha
adc
movl
add
out
sahf
adc
shlb
and
das
sti
push
jnp
scas
mov
xchg
call
xchg
roll
or
in
push
sbb
dec
mov
int
lcall
andl
or
mov
xchg
mov
or
aad
arpl
inc
inc
mov
adc
push
or
push
or
mov
sub
in
lock
shll
lahf
lods
inc
rcl
push
stos
pop
fstpt
xor
es
and
aam
insb
imul
xor
inc
add
or
and
iret
hlt
xchg
xchg
xor
popf
es
push
mov
push
mov
mov
xchg
out
std
add
loopne
ror
inc
sahf
repz
call
cmp
push
jge
push
pusha
nop
ret
dec
xchg
inc
jp
inc
cld
jb
les
repz
inc
add
daa
out
sbb
gs
dec
nop
pop
add
jae
mov
lea
cli
fsubl
push
sbb
mov
mov
jae
mov
mov
cld
pop
clc
push
add
loopne
and
imul
popa
ficoms
rorl
ss
aas
and
shl
xorl
roll
xchg
testl
sub
jmp
aad
in
pop
or
sti
lahf
xchg
outsl
subl
movsb
data16
xlat
clc
insl
or
aaa
dec
fwait
jl
insl
and
inc
roll
adc
js
mov
jl
pop
mov
adc
outsl
jge
out
insb
jno
push
out
imul
xor
je
mov
push
push
inc
xchg
xchg
pop
enter
cmpsl
pop
inc
repz
xor
and
xor
aas
and
jge
xchg
pop
iret
std
cwtl
xchg
dec
mov
inc
adc
dec
cmp
jns
or
cmpsb
repnz
loop
push
test
jno
leave
xchg
pop
cwtl
xor
pop
sar
jecxz
jae
insb
mov
dec
jmp
mov
mov
int3
cmp
dec
gs
xchg
out
push
das
divl
call
and
roll
je
sub
or
daa
inc
test
add
insl
or
mov
xor
fildl
mov
push
mov
fisubrs
daa
adc
scas
jmp
lds
and
push
sub
pop
imulb
or
mov
and
out
hlt
nop
stc
pop
mov
add
in
mov
or
pop
cmp
fnsave
mov
xchg
pop
ret
add
orb
push
pop
mov
lret
popw
les
test
fidivl
test
push
lcall
lahf
out
sbb
cmp
inc
dec
pop
lcall
mov
or
xchg
ficompl
inc
ficoml
xor
dec
xor
xlat
jcxz
mov
mov
pop
cmpsl
fildl
mov
ds
ja
int3
dec
inc
xchg
je
sahf
mulb
cmp
pop
dec
sbb
push
mov
mov
call
push
fcomps
add
sahf
or
test
movsb
daa
push
out
ret
jnp
sahf
int
sub
js
or
jae
pop
test
inc
sbbl
xchg
jl
dec
jg
lret
hlt
cmpsb
adc
or
in
aam
fs
jb
fisubs
orl
lcall
mov
movsb
xor
dec
dec
cmp
aad
lea
push
mov
dec
pop
and
insb
mov
mov
je
push
arpl
xor
push
fdivs
or
mov
jg
push
or
dec
dec
push
aaa
out
daa
and
or
jmp
sahf
cmp
mov
inc
jne
test
add
push
pusha
lahf
cmpsb
shll
push
or
sahf
mov
inc
lahf
jg
xchg
inc
mov
pop
xchg
dec
mov
cmp
sub
sub
arpl
sbb
jnp
sbb
fisubrs
lcall
wbinvd
push
jge
pop
lcall
pop
inc
pop
dec
jbe
jp
or
lea
mov
sti
pop
dec
bound
mov
mov
xchg
sub
xor
data16
lcall
fwait
js
vpunpckhqdq
cs
repz
out
sub
stos
add
pusha
mov
dec
dec
inc
dec
push
into
in
sub
inc
xor
add
xor
pop
js
pop
sbb
add
mov
pop
and
xchg
inc
dec
in
int3
adc
insl
and
repz
cmp
add
dec
mov
xchg
lret
je
movsb
lods
push
push
jbe
gs
pop
xor
test
scas
add
outsl
repnz
pop
fcmovnb
inc
cmpsb
sub
cmc
popf
cld
sub
mov
cmp
dec
and
inc
arpl
xlat
pop
mov
jne
sub
sub
pandn
sbb
inc
loopne
imul
mov
jbe
xor
fstpl
jp
inc
xchg
sbb
mov
ficoml
mov
lea
test
xchg
ljmp
into
shr
xorl
insb
stos
jb
mov
or
in
mov
repz
jmp
push
xlat
stc
mov
or
push
mov
xchg
mov
jo
add
sub
mov
cmp
push
pop
xchg
xor
es
jo
or
sub
in
fwait
pop
std
adc
popf
ljmp
outsb
jp
add
scas
loopne
mov
test
mov
dec
faddp
lret
dec
into
out
sub
inc
cmpsl
lea
sub
add
inc
cmpsl
int
outsb
xchg
sahf
inc
filds
add
jmp
jne
add
subl
xchg
movsl
mov
mov
mov
cmp
cmpps
sub
xchg
cltd
inc
sub
pop
cmp
push
test
negb
push
cli
jno
add
mov
ret
not
sbb
rol
jl
adc
in
xlat
stos
stos
cmpsb
pop
push
mov
jno
jns
fcomi
dec
pop
or
insl
mov
lcall
and
mov
stos
inc
sbb
lea
aas
sbb
pop
sub
adcb
sbb
or
dec
hlt
xchg
mov
sbb
aaa
movsl
mov
adc
push
cld
jge
cld
or
ret
push
hlt
in
ja
mov
rcrb
pop
push
push
cmpsl
fmull
out
xor
std
xlat
scas
lods
or
aas
jnp
cmp
ficoml
and
cmp
cld
add
mov
out
lods
push
jmp
or
mov
inc
outsb
into
jge
mulb
adc
push
dec
dec
hlt
dec
dec
xchg
cwtl
jae
fidivs
jae
mov
mov
adc
fnstsw
add
mov
scas
xchg
mov
xchg
push
fcoml
ret
aaa
push
idivb
fadds
cwtl
xchg
pop
lret
lahf
cld
lock
jmp
cmp
push
xlat
testl
and
and
or
pop
or
stos
outsb
shrl
push
xchg
in
in
roll
sahf
xchg
mov
sub
mov
lea
inc
xchg
xor
xchg
lds
xlat
repnz
add
cmp
sbb
hlt
jmp
scas
mov
imul
jae
pop
mov
nop
scas
sub
scas
popf
les
mov
fs
pusha
mov
adc
hlt
or
leave
xor
add
mov
mov
adc
test
sbb
push
xchg
push
lret
adc
lcall
cli
xchg
jne
scas
inc
les
repnz
add
test
leave
jg
jae
dec
gs
outsl
shl
and
insb
ret
push
loop
inc
outsl
cmp
leave
cwtl
rcl
arpl
out
push
in
sub
mulb
fst
std
mov
mov
int
sub
lds
mul
leave
inc
repz
inc
xor
lret
jnp
pop
daa
xor
jge
cmp
nop
fwait
and
dec
out
or
xchg
mov
fwait
movl
mov
clc
and
xchg
xchg
dec
cmpsb
mov
divl
pop
push
enter
mov
jg
stos
ss
leave
jl
pop
cli
mov
mov
lods
es
xlat
jb
add
adc
mov
add
add
sub
sbb
js
xchg
dec
cmp
cmp
js
sbbl
cmp
test
dec
enter
and
sub
push
mov
insl
pcmpgtw
mov
lods
cmpsb
popa
jmp
ss
inc
cmpsl
shlb
dec
xlat
push
inc
in
push
in
xor
xor
mov
cmpsl
pop
stos
icebp
push
rorl
adc
sub
pop
jb
mov
insb
and
push
adc
xor
mov
pushf
mov
cwtl
push
mov
sub
xchg
cmpsl
adcb
dec
cmc
enter
orb
or
scas
cs
in
pop
mov
cwtl
inc
int
cmpsl
shlb
out
mov
push
int3
or
xchg
jae
mov
mov
and
aaa
mov
loope
fcmovnu
iret
jb
out
lahf
inc
inc
mov
inc
dec
out
test
lds
jmp
lock
fsubs
xlat
repz
leave
xor
xor
fcomip
shrb
outsl
inc
jecxz
mov
and
cmp
dec
fdivr
lret
jge
mov
jg
ds
ret
mov
mov
in
and
out
or
sub
mov
int3
in
add
in
mov
push
or
xchg
enter
mov
iret
fisttpll
sarb
call
loop
ja
daa
mov
mov
adc
popf
in
ds
mov
push
fnsave
imul
xchg
sbb
stos
lret
out
inc
lahf
fcmovbe
or
aas
nop
mov
inc
rorl
je
int
dec
inc
pop
pop
mov
cmp
sbb
xchg
pop
mov
pusha
pop
jl
jl
mov
movsb
jb
sti
rcrb
in
idivb
jmp
arpl
xchg
icebp
inc
in
iret
or
stos
push
into
fidivrl
xchg
inc
ss
cmp
dec
sbb
test
aad
enter
je
in
mov
mov
test
das
push
inc
lret
dec
leave
lcall
stos
stc
inc
cmpsb
fstpt
xchg
data16
sbb
xchg
mov
aad
cwtl
and
lods
outsb
inc
push
dec
or
or
xchg
imul
mov
jg
iret
lea
jmp
add
add
arpl
adc
mov
xor
and
sbb
dec
push
sbb
dec
inc
imul
cmp
jns
pop
adc
cltd
mov
add
adc
mov
sbb
cs
inc
les
or
stc
pop
je
dec
mov
pop
sub
sti
inc
pop
out
mov
loope
test
pop
push
jecxz
push
stos
popa
mov
outsb
rclb
add
mov
andb
xor
adc
lcall
pop
or
sbb
notl
xchg
icebp
push
fnsave
imul
ss
mov
cmp
mov
movsb
cmp
shlb
mov
imul
fisubrl
pop
inc
mov
cli
sbb
push
mov
enter
and
fcomp
pop
jbe
inc
nop
nop
fs
jno
mov
imull
in
xchg
mov
lret
mov
mov
pusha
inc
fxrstor
xor
pop
arpl
movsl
cmp
lahf
repz
add
in
insl
in
adc
insb
mov
int
xor
ljmp
outsl
cmpl
xchg
adc
rorb
add
cli
pop
sbb
ret
jne
aaa
ret
inc
scas
cmp
push
adc
xorl
out
jmp
cltd
add
imul
xchg
pop
mov
jge
jl
icebp
loope
xchg
push
ficomps
testl
outsb
cmpsb
adc
push
mov
outsb
lret
leave
xlat
mov
sub
cmp
mov
jbe
fidivrs
aam
ret
lret
and
xor
or
mov
jae
cmp
nop
add
add
hlt
test
xchg
mov
in
sti
movsb
push
jmp
adc
lret
cmp
cmp
shlb
or
xchg
xlat
lods
lds
or
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
add
mov
and
int
out
fwait
addr16
pusha
lcall
xchg
pop
push
insl
cld
loop
cltd
popa
jg
or
pop
push
lea
dec
dec
pop
pushf
lock
xor
sub
je
test
pusha
inc
cmpsb
xchg
mov
inc
cmp
jne
ds
loopne
aam
dec
fwait
jae
mov
jbe
pop
add
jle
js
scas
mov
jne
dec
sarl
pop
pop
arpl
loope
inc
es
or
aam
icebp
xchg
xor
inc
clc
out
icebp
push
sbbb
lods
mov
sub
in
jmp
push
jb
mov
lods
repz
add
inc
fldl
int
pop
adc
adc
packsswb
jmp
push
test
push
imul
test
adc
push
add
mov
and
and
movsl
adc
mov
xchg
leave
sarb
inc
ret
cltd
inc
mov
jg
mov
arpl
pop
icebp
inc
idivb
in
ljmp
push
test
loop
mov
stc
pop
movsl
out
mov
arpl
sahf
fnop
popa
xchg
xor
xor
fmuls
in
jl
filds
ficoml
out
inc
repz
pushf
test
and
dec
adc
cmp
sbb
add
daa
lods
mov
xlat
dec
cmc
ss
test
sub
inc
fmull
repnz
mov
or
adc
or
fnstsw
addl
adc
sub
jb
jnp
out
lods
inc
fbstp
xchg
nop
test
fildll
add
push
insb
jle
sbb
fdivrl
cld
aaa
dec
fcomip
jmp
rclb
mov
jmp
loope
adc
push
cli
sub
rcr
iret
adc
sub
rorl
shrl
in
lahf
jb
push
jne
xlat
or
or
inc
dec
jbe
ljmp
std
roll
loop
mov
push
leave
cs
cmp
std
inc
cmc
add
mov
inc
stc
fmul
jmp
mov
jl
sub
neg
adc
lret
aam
and
scas
jb
loope
inc
imul
mov
mov
mov
jns
and
push
aaa
shrb
lods
push
jl
data16
stc
push
mov
mov
inc
pop
mov
lcall
mull
jp
iret
inc
sbb
aas
imul
rol
xchg
jmp
dec
dec
icebp
ret
adc
sub
outsb
adc
mov
xlat
rclb
test
mov
insl
cmpsb
repz
rcrl
std
pop
int3
pop
fisttpll
test
call
insl
inc
sbb
mov
insl
add
mov
lret
lods
lcall
pop
jne
xlat
push
lds
faddl
mov
or
enter
push
fcmove
nop
loope
push
jge
mov
push
fcmovnu
and
aaa
lods
out
add
icebp
frstor
pusha
sbb
shll
mov
jp,pn
mov
push
imul
popa
fists
shrl
sbb
push
gs
std
mov
xchg
xchg
fldenv
fucomip
sbb
outsb
push
ret
std
arpl
xchg
fwait
xor
cs
lret
sbb
add
call
in
dec
pop
movsb
xor
pop
clc
in
lods
frstor
inc
xlat
hlt
and
repz
jecxz
mov
adcl
mov
and
nop
test
push
ret
scas
test
dec
outsl
inc
or
fiadds
mov
sbb
ss
scas
jmp
loope
adc
outsb
pop
popa
xor
or
mov
getsec
imul
cmp
pop
xlat
inc
cli
lds
faddl
xor
ss
test
stos
call
add
mov
loopne
jo
mov
aas
repz
push
cmp
xchg
push
testb
outsb
jo
xchg
xor
stos
call
adc
fmuls
aas
fnstsw
jecxz
orl
sub
xor
cmp
xor
push
rorl
ret
cmpsb
or
xor
nop
pop
or
jle
cmp
mov
pushf
enter
and
daa
or
pop
cltd
aas
repz
notl
or
add
test
ret
out
aad
jecxz
sub
mov
dec
aam
xchg
sub
pop
decl
or
inc
fldt
rorl
and
aas
push
pop
add
or
push
fnsave
cltd
push
das
cs
jns
sbb
fstpt
inc
dec
pop
test
lods
lea
jle
jmp
test
addr16
fs
lcall
call
pop
pop
mov
in
or
mov
addr16
mov
jns
xchg
cmc
insb
aam
push
mov
push
or
lret
push
mov
dec
pop
xor
xchg
cs
cld
test
mov
pop
mov
push
xchg
sub
jo
pop
call
imul
sub
das
or
add
test
xor
jl
aam
xchg
clc
mov
or
pusha
mov
lcall
pop
add
flds
aam
lcall
jg
fcoml
xchg
es
das
jmp
rcl
or
mov
scas
inc
sub
packssdw
ss
add
pop
inc
addb
xchg
rcrl
jge
mov
add
mov
inc
sahf
aad
xchg
push
mov
jne,pn
shl
inc
outsl
mov
int
xor
adc
dec
xor
lcall
mov
or
inc
xchg
mov
and
outsl
mov
repz
ss
movsb
mov
pop
xchg
and
int3
sbb
hlt
pop
cld
cld
out
rolb
mov
lahf
xchg
lret
into
sub
adcl
std
push
inc
inc
xchg
dec
mov
rcrb
xchg
repnz
push
or
mov
dec
sbb
or
dec
sub
adc
push
out
movsb
mov
pop
jmp
stos
mov
or
data16
mov
fnsave
jae
in
hlt
cmp
cmp
pop
jns
test
sub
insl
rorb
mov
stos
loop
dec
ret
imul
push
iret
inc
iret
jo
std
je
ret
repz
mov
xchg
call
or
fs
ss
pop
lods
sbb
push
and
mov
jmp
andb
jb
mov
xor
sti
call
sub
or
xchg
aad
ljmp
xchg
mov
clc
bnd
jecxz
push
push
daa
cli
pop
pop
ds
inc
dec
cmpsb
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
xchg
mov
and
lcall
repz
out
repnz
xchg
fldt
cmp
or
and
scas
dec
std
lods
rorb
insl
add
xchg
mov
mov
jnp
mov
bswap
cmp
icebp
test
jge
fsubl
push
ja
mov
pop
fstpt
mov
pop
ds
sarb
dec
jg
cmpsb
xchg
sub
idivb
pushf
in
fnstcw
cli
pop
pop
push
sbb
jge
adc
or
out
sbb
insl
dec
popa
add
sub
gs
dec
sbb
pop
shll
sahf
dec
out
xor
xchg
ja
cmp
ss
and
enter
jmp
dec
xchg
dec
or
dec
cmp
lcall
scas
adc
jg
es
test
jmp
stos
ret
or
or
popf
push
stos
adc
loope
dec
test
mov
test
imul
aad
lahf
mov
jae
mov
mov
dec
xor
add
xchg
push
faddl
cs
xlat
fnstenv
shll
aam
daa
hlt
insb
xchg
push
mov
jecxz
fbstp
xor
sub
movsb
aad
pop
jmp
dec
imul
xor
in
jmp
mov
mov
mov
xchg
pop
push
sbb
and
jecxz
jle
xor
pop
shrb
lret
shl
or
stos
rcl
loope
sub
adc
leave
mov
ss
or
sti
ja
adc
xor
pop
mov
sbb
or
sub
fsubrl
movsb
icebp
and
out
in
jle
call
sub
cmp
cltd
xor
shrb
sahf
mov
fcmovu
jge
outsb
adc
push
int
scas
shll
adc
idivl
daa
andl
dec
les
mov
sub
je
push
lcall
into
aam
xor
mov
aam
imul
scas
sub
xor
jo
rcll
imul
sub
sbb
xor
mov
stos
jnp
out
mov
mov
xchg
dec
popa
arpl
cli
mov
inc
cli
stc
leave
test
test
jnp
add
inc
and
jbe
xor
mov
inc
and
cmp
pop
into
cmp
xchg
sub
dec
push
add
ror
insl
cmp
mov
or
stos
inc
push
cld
repz
cmp
idivb
dec
mov
out
mov
cmp
jge
adc
dec
stos
mov
insb
stos
mov
ss
dec
cs
stc
lock
inc
jnp
or
out
scas
push
push
imul
adc
sub
xchg
jo
xchg
push
add
dec
pushf
ror
mov
push
stos
push
arpl
pop
and
xchg
cmpsl
mov
movsl
frstor
rorl
add
outsb
mov
inc
imul
add
fsub
lret
hlt
mov
lret
xor
inc
or
fldcw
clc
lahf
mov
adc
shl
cmp
fbstp
or
sub
push
or
fistl
imul
inc
lahf
loope
push
movlps
mov
cmpsl
movsl
out
fnstenv
shlb
sbb
lods
mov
add
cmpsb
dec
push
push
jo
into
jae
out
fidivs
test
cmp
push
add
and
stos
or
leave
aad
xor
std
stc
repz
cmpsl
stos
repnz
and
add
loope
lret
and
xor
sahf
sub
add
and
lds
mov
outsb
popa
push
adc
jecxz
mov
jo
xchg
mov
inc
test
pop
cmp
xchg
in
rcll
out
cmp
aad
inc
shll
pop
mov
int
sub
push
daa
das
push
stc
loop
orl
pop
inc
aam
mov
push
xchg
xor
lret
mov
and
sub
mov
fs
mov
aaa
loop
push
aam
js
dec
mov
cli
jge,pn
adc
scas
or
and
andb
ljmp
addr16
xchg
push
adc
test
pushf
mov
stc
sub
inc
nop
sbb
and
mov
mov
mov
cmp
imul
mov
repnz
jp
mov
stos
and
xchg
xor
xchg
js
dec
shl
pop
bound
jns
mov
jmp
ljmp
clc
in
movsb
jg
cmpsl
mov
sub
cmc
mov
lock
push
jnp
cwtl
dec
inc
test
xchg
stc
lods
fcoms
mov
mov
mov
mov
mov
lods
xchg
call
add
aam
hlt
cmpb
pop
sbb
mov
push
xor
xchg
mov
push
or
add
sub
or
fwait
add
lret
adc
xchg
sub
lds
rorb
das
sarl
or
stos
std
daa
mov
and
fists
jbe
cltd
stos
mov
lcall
pop
add
and
mov
js
insl
sbb
bound
clc
jbe
int
popf
push
dec
lock
jge
push
std
sbb
pop
pop
cltd
pusha
dec
mov
fsubrp
inc
mov
mov
ss
jb
push
aad
popa
xchg
dec
push
jmp
xlat
scas
imul
pop
lret
or
orb
popf
ja
insl
rol
push
cmpsl
push
in
pushf
xchg
dec
or
push
xchg
mov
ret
mov
loop
sbb
cmp
inc
or
fs
dec
sbb
add
xchg
mov
mov
outsl
push
pop
xor
push
in
jne
test
in
out
or
cmp
mov
jge
sti
arpl
adc
pop
dec
mov
std
fcomip
sbb
mov
xchg
jg,pt
xor
out
and
jecxz
scas
jae
cmc
jecxz
cmp
xor
push
jecxz
daa
xor
mov
inc
into
shrl
xor
add
sub
jp
gs
aaa
inc
iret
in
push
fwait
pusha
jecxz
cmpsl
je
jecxz
cmpsb
and
push
or
ret
inc
das
notl
nop
insl
mov
bound
pop
mov
pop
lock
jl
mov
dec
sti
mov
cmp
vmwrite
lret
add
adc
and
insb
sahf
jbe
jmp
lret
sahf
sbb
cmp
lea
loopne
aas
sub
add
xor
add
push
jmp
sbb
push
adc
xchg
int3
xchg
push
loopne
cwtl
nop
adc
and
ja
xchg
mov
push
mov
lret
xor
mov
stos
call
sbbb
xor
rol
jp
pop
inc
lret
xor
int3
insl
fstpt
out
movsl
sbb
sub
lds
inc
jae
int3
xchg
pop
inc
inc
jmp
mov
add
dec
ret
jnp
jo
test
sub
add
inc
xor
sahf
mov
xor
mov
mov
hlt
paddsb
cmpl
jecxz
sbbl
cmpb
inc
xor
or
cmpsb
testl
jo
in
pop
std
mov
fs
sbb
fwait
or
pop
pushf
call
movsb
push
pushf
mov
shlb
lds
and
cld
movsl
outsl
push
lret
loope
loop
cli
sub
pop
sub
test
sbb
icebp
push
aad
inc
scas
in
xor
ss
icebp
add
pop
sbb
push
call
repnz
inc
shr
wrmsr
jle
xor
loopne
xor
push
adc
inc
test
mov
jg
aas
mov
push
sti
jns
out
jle
cmp
rorl
std
test
xchg
push
popa
iret
mov
call
add
sub
jb
mov
mov
xchg
xor
or
adc
jge
sbb
lret
movsb
fcoms
enter
pop
fisttps
inc
cwtl
addr16
cli
fisttpll
dec
mov
mov
insl
and
imul
mov
dec
or
loope
inc
xor
cmp
xchg
cmp
outsb
pop
mov
sub
aas
mov
popa
mov
inc
je
mov
push
arpl
xchg
clc
xor
cmc
pop
push
lahf
push
ljmp
test
mov
adc
aam
and
fidivrl
mov
cli
adc
xor
fstpt
jno
pop
in
pop
aas
cwtl
stos
mov
jp
nop
rcll
popf
fstps
sbb
fidivl
mov
jo
mov
add
jge
and
sub
add
sbbb
into
les
cmp
cwtl
mov
js
arpl
xchg
lock
and
insl
insb
cmp
jno
jae
xor
shrl
fildll
out
in
call
push
jno
adc
nop
sbb
mov
cmp
mov
pushf
dec
push
movsb
jl
lock
pop
push
add
les
mov
das
adc
sub
mov
lea
js
mov
mov
cmpsb
add
lds
pop
jno
push
push
mov
ret
push
ffreep
out
mov
jae
adc
and
and
mov
aaa
imul
mov
mov
sbb
data16
into
xchg
enter
sbb
leave
int3
push
pop
sbb
mov
cmpsb
cmpsl
test
out
adc
test
pushf
jne
sbb
add
or
adc
ret
cmpl
leave
xor
cmp
shrb
aaa
shrl
pop
jb
sahf
cmp
inc
je
gs
mov
fldl2t
lods
rclb
add
fld1
dec
inc
cmpsl
mov
stos
fwait
sbb
mov
push
cmpsb
repnz
xlat
or
inc
rorb
xor
xchg
pop
pop
dec
push
out
jp
into
fnstsw
repz
in
scas
cmp
sbb
push
and
leave
das
lea
xchg
fwait
mov
push
jecxz
adc
jno
push
mov
loopne
aas
adc
sbb
cwtl
les
fldt
mov
fldlg2
push
xchg
pop
jb
aad
jnp
test
sub
in
stc
xor
fs
pop
nop
sbb
dec
cmp
xchg
add
adc
out
lock
pop
mov
cmpsl
mov
sbb
mov
test
mov
and
xor
mov
push
push
out
repz
aam
sub
add
addl
sbb
addr16
mov
xor
stos
dec
nop
sahf
lods
push
xlat
incl
add
shll
sbb
hlt
scas
add
pop
daa
jb
mov
shrb
popa
inc
addr16
cmp
cltd
lret
xlat
jmp
push
mov
mov
sti
outsb
repz
cld
jb
fmulp
fwait
clc
mov
testl
xor
subl
pop
xchg
cmp
arpl
fstl
inc
fistl
flds
jg
sub
stc
adc
imul
inc
mov
aam
sub
lret
jge
pop
iret
pop
xlat
mov
loop
lods
add
fisubl
lahf
or
push
mov
push
fs
cwtl
lods
aas
xchg
clc
imul
push
orl
iret
imul
xchg
loopne
sub
sub
mov
arpl
xchg
subl
aad
in
dec
ror
xchg
fwait
xor
and
dec
xchg
adc
data16
ja
mov
and
bound
xor
push
scas
inc
sub
jnp
sbb
inc
test
or
out
cwtl
scas
push
cld
int3
pushf
sbbl
xchg
pusha
and
outsb
out
xor
rcr
mov
test
push
xchg
or
fwait
push
int
sub
popa
lods
xchg
cmp
push
cmp
int3
mov
mov
mov
inc
and
out
sahf
and
lods
stos
lret
imul
xor
mov
pushf
mov
cli
jmp
lock
ret
bound
dec
push
xchg
mov
mov
mov
ja
dec
int3
jl
cs
pushf
add
or
sub
jg
outsb
dec
jne
ljmp
or
and
mov
test
cmp
sahf
pop
mov
repz
mov
mov
andl
in
inc
and
mov
adc
adc
vpor
cmp
inc
jb
adc
lea
stos
pusha
test
jg
jnp
enter
adc
push
cmpsb
mov
mul
das
add
les
mov
mov
pop
aas
xor
xchg
add
jae
cmp
loop
add
mov
mov
scas
movsb
loope
push
addr16
and
icebp
mov
inc
sti
fucomp
jnp
insl
jl
mov
sub
loop
pop
push
sub
mov
sbb
xchg
in
vmovaps
call
pusha
pushf
repnz
sahf
xchg
movsl
incb
push
addr16
add
xchg
cld
add
ret
negl
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
icebp
sbb
cmpsl
xchg
jno
cmc
mov
adc
js
js
or
bound
mov
pushf
jbe
lahf
jle
fidivrl
dec
outsb
mov
call
pop
add
sti
stos
rcll
xchg
mov
mov
lcall
cltd
ffreep
cmp
pop
in
push
jp
sbb
je
inc
push
test
out
xorl
sbb
push
mov
in
mov
sub
cmc
or
ja
push
mov
lock
sub
fsin
sarl
pop
push
xchg
inc
xor
xchg
fcoms
mov
jg
inc
fwait
fwait
clc
test
cmpb
repnz
sbb
cmp
cmp
push
cltd
xchg
mov
dec
fdivl
or
stos
push
js
xor
lret
jo
mov
pop
test
inc
outsl
mov
xchg
gs
sbb
adc
ja
shll
aaa
mov
mov
add
iret
xchg
pusha
cmp
push
icebp
mul
jg
mov
jge
addl
testl
jae
xor
cwtl
std
icebp
out
orl
push
rcrb
test
out
lcall
pop
xchg
xor
cmp
pushf
or
out
popf
ret
sbb
rclb
inc
cld
push
fisubrl
popa
ret
testl
nop
xchg
and
adc
sub
test
cli
ss
inc
out
fidivrl
jbe
dec
mov
icebp
pop
mov
xor
sbb
mov
mov
leave
mov
mov
in
xor
and
xchg
inc
dec
and
xor
cmpsb
mov
in
mov
cld
lret
and
and
inc
nop
pop
punpckldq
add
ficomps
out
lock
mov
shlb
inc
and
movsb
cmpsl
iret
aas
ljmp
sub
das
add
dec
fimuls
testl
pop
push
cmp
js
sti
aad
out
or
xor
sbb
pop
int
pop
inc
fsubs
outsl
popa
addl
insb
and
adc
mov
mov
xchg
ret
xchg
in
nop
pop
fxtract
ss
and
pushl
xchg
xor
pushf
popa
push
enter
jmp
mov
rcll
jns
aas
lds
pop
orl
push
jmp
xchg
popa
outsb
pop
adc
cmp
repnz
and
xor
sbb
pop
adc
sub
pop
dec
lret
js
push
in
fcomip
lret
lods
inc
jne
xrelease
sbb
xor
lods
mov
xchg
or
je
or
cmpb
sbb
cmp
lods
inc
add
jne
cmp
xchg
fidivl
fisttpll
bound
sbb
imul
pushf
lahf
xor
jo
mov
add
dec
xchg
nop
clc
push
pop
xchg
movsl
xchg
int3
jmp
add
adc
lods
jp
ss
adc
sbb
sub
in
das
outsb
or
sbb
sbb
mov
cmp
loope
pusha
jge
decb
std
push
test
leave
dec
mov
inc
fdivl
xchg
je
mov
xchg
outsl
xchg
hlt
adc
scas
jne
lcall
sbb
mov
les
fimuls
sbb
ret
cmp
movsb
sbb
lahf
int
jns
lcall
popa
lahf
ret
dec
push
cmp
mov
fsub
call
mov
lods
mov
insl
add
stos
pop
iret
add
or
movsl
xchg
addr16
inc
jo
test
fiadds
push
push
pop
xchg
call
adc
adc
xchg
cmp
push
xor
adc
lock
jmp
jno
loop
xor
data16
aaa
jbe
inc
add
mov
lahf
sub
inc
in
loop
jnp
stos
jmpw
xor
cmp
add
out
cld
stos
mov
inc
mov
insl
add
ret
and
shrb
push
pop
ret
call
sub
maskmovq
negl
mov
rcll
stos
xor
pop
adc
push
mov
iret
jns
mov
out
test
mov
mov
dec
hlt
ret
jbe
mov
dec
dec
cli
cmp
outsl
lcall
xor
push
mov
dec
cmp
shrl
lcall
jle
xchg
cmp
out
cmp
leave
bound
mov
push
push
jmp
push
lods
push
ret
xchg
sub
xlat
mov
loop
dec
sti
bound
mov
out
subb
inc
jmp
insl
in
pushf
dec
loop
cwtl
inc
lret
mov
sub
pop
jle
stc
rclb
inc
mov
repz
cmp
aad
daa
ret
pop
mov
outsl
cmp
adc
test
cmp
pop
push
push
ds
aam
rcrb
stos
sub
test
push
dec
andb
cwtl
add
jmp
dec
movsb
in
xchg
or
lds
xor
lods
push
test
mulw
rcrb
mov
daa
add
ret
test
stos
jl
notl
dec
jmp
dec
sub
push
add
mov
imul
out
pop
movsl
dec
mov
leave
pop
xor
sbb
pushf
pop
dec
mov
imul
mov
addr16
fists
pop
sbb
in
ret
roll
or
stos
test
movsl
incl
jne
pop
roll
adc
inc
rolb
mov
cmpsl
push
imul
adc
js
cmpsb
ja
adc
fcompl
push
inc
adc
xor
add
out
test
pop
out
xchg
cmpsl
dec
and
or
inc
push
nop
xchg
in
gs
pop
rol
inc
push
mov
test
imul
fisubrl
and
enter
cmc
movsb
bound
cmp
cld
mov
xor
push
movsb
fs
test
mov
fcoml
iret
mov
repnz
js
mov
mov
push
push
out
mov
mov
mov
sub
dec
mov
jb
add
xor
outsl
jmp
add
and
jae
sub
lea
lcall
fcomps
jb
inc
mov
mov
push
jnp
push
mov
dec
push
enter
pop
inc
int
jg
xchg
pop
pop
fidivs
iret
fs
aad
mov
xchg
inc
cmpsb
bound
dec
dec
or
xchg
jb
or
xor
loop
out
outsl
sub
std
fs
ljmp
aas
mov
xlat
lods
push
fldt
adc
movb
rolb
push
xchg
pslld
and
sbb
and
in
and
sti
mov
addr16
cltd
mov
popa
jb
sbb
bound
and
cmp
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
push
scas
xchg
sbb
jno
push
fsubrl
push
jbe
mov
icebp
arpl
fs
adcl
ss
mov
jns
pop
push
dec
jb
cs
sub
inc
fdivrs
cld
mov
pop
mov
mov
mov
xor
cli
mov
xrelease
mov
cltd
push
lcall
fdivrs
and
out
sbb
inc
int
dec
mov
pop
cmp
push
xor
outsl
fsubrl
outsb
xchg
call
ror
sbb
fistpll
lret
sub
out
fs
and
stc
and
or
jb
out
cmpsb
xchg
pop
push
xor
jg
iret
popa
les
mov
dec
insb
mov
cmp
test
push
dec
pop
jmp
repnz
inc
push
test
out
ss
call
mov
pop
and
jle
jnp
jmp
stc
jb
fbstp
inc
out
popf
jns
shlb
ljmp
pop
sbb
pop
jne
xchg
repnz
jecxz
push
mov
ja
lods
loopne
std
xor
mov
pop
js
pop
sahf
shrl
dec
mov
push
inc
xchg
jle
inc
inc
cmp
xchg
enter
imul
bound
sbb
out
push
xor
inc
aam
sub
pop
shll
in
xor
or
repnz
ja
push
subl
add
adc
or
outsb
lret
cmp
repnz
cld
lret
pusha
adc
mov
loope
mov
xchg
mov
or
cmc
adc
push
cmp
movsl
pop
out
jne
jl
xor
and
adc
mov
cmp
mov
sbb
mov
ret
cmc
lcall
and
scas
xchg
or
pop
lock
sub
call
push
imul
jo
mov
lret
pop
xchg
aaa
mov
mov
pop
add
inc
pop
dec
cmp
and
jno
sbb
pop
pop
or
add
sbb
mov
mov
icebp
push
xchg
call
cmp
cmp
out
loopne
jp
jae
cmp
jecxz
jne
ss
frstor
and
jb
xor
fimull
gs
pop
sbbb
cmp
ja
adc
sti
aaa
ss
and
or
scas
clc
enter
sub
pop
dec
mov
fwait
nop
nop
ss
fbld
push
icebp
add
or
insb
loopne
insb
xor
aaa
icebp
fcoms
mov
mov
jecxz
and
push
inc
pop
add
push
inc
rcrb
daa
aam
mov
popf
loopne
inc
jge
ret
cmp
jne
aaa
mov
push
imul
jge
mov
jb
outsl
data16
cltd
rclb
push
jp
and
out
in
lock
and
or
icebp
scas
mov
insl
cmpsb
aad
mov
fdivs
adc
es
xor
cld
sbb
push
cltd
shrb
cld
testl
imul
cmc
daa
push
push
imulb
dec
sub
jnp
imul
nop
iret
xor
nop
cmpb
leave
push
pushf
add
cmp
push
jg
inc
jb
leave
addb
push
mov
in
sub
and
shll
and
and
gs
lret
repnz
cmp
adc
adc
xor
jmp
movsb
test
bound
rol
jb
xchg
adc
pop
cli
lcall
xor
fsubs
daa
loopne
xchg
test
jmp
loope
pop
add
sbb
jle
xor
mov
add
and
ss
adc
and
cmpsl
mov
popf
ja
mov
arpl
lock
imul
imul
jge
mov
jnp
push
push
outsb
stos
pop
cli
or
aas
shrl
sub
jno
nop
or
mov
bnd
mov
addr16
lods
inc
dec
mov
sbb
loop
gs
pop
ds
mov
scas
pop
dec
dec
leave
inc
int3
xchg
int3
adcb
mov
lock
add
mov
xchg
test
movsb
into
mov
imul
cmpsb
dec
xlat
imulb
mov
into
mov
xchg
iret
mov
inc
dec
data16
mov
mov
rorb
sbb
mov
sub
push
fbstp
icebp
cmpl
imul
sub
cmp
mov
aas
push
xchg
sub
xchg
mov
push
popf
shrb
js
das
cmpsb
iret
mov
mov
adc
sbb
mov
pop
jg
lret
push
sub
out
inc
cmp
sub
sarl
or
jb
or
mov
stc
adc
jns
push
push
mov
mov
pop
mov
out
sti
pop
inc
in
ret
cmpsl
pop
sahf
scas
or
push
repnz
rorb
mov
cmp
or
lods
loopne
pop
add
xor
push
leave
int
aad
add
test
js
cmp
sbb
xor
out
cmc
mov
and
mov
ja
sbbb
mov
lods
nop
mov
xchg
mov
and
test
jmp
out
cmc
roll
jmp
ret
push
repnz
cmpl
fcmovb
pop
mov
dec
out
aam
pop
mov
das
jo
je
jp
subl
test
mov
imul
loop
int3
ss
shll
or
xchg
jb
xchg
jmp
and
out
insb
jmp
repnz
test
mov
ret
jno
nop
mov
fwait
jp
cmpsl
add
mov
adc
adc
push
mov
popf
jecxz
ljmp
icebp
sbb
inc
mov
inc
push
sahf
clc
int3
mov
popf
in
fldenv
jae
and
lock
cmpsl
xchg
dec
mov
jo
push
push
xor
and
mov
mov
sub
jo
adc
xchg
imul
lret
cmp
xchg
inc
loopne
jp
jge
popf
xchg
pop
roll
fwait
mov
pop
push
sarl
mov
sbb
clc
push
call
and
pop
add
jne
adc
mov
adc
fcom
je,pt
pusha
xor
repz
das
repz
or
in
adc
sub
aam
addb
das
push
cwtl
pop
xor
shll
iret
rcrl
aad
sub
arpl
push
daa
add
sahf
pop
dec
adc
inc
mov
jle
lahf
test
sahf
repz
in
add
sbb
icebp
sbbb
jg
lahf
push
push
outsb
mov
sahf
sub
mov
mov
jmp
xchg
stos
daa
in
movsb
js
mov
call
out
addr16
cmp
push
fiaddl
dec
movsb
mov
jg
jp
cmp
std
fs
sbb
test
pop
mov
xor
jnp
jo
jbe
xor
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
in
jecxz
js
adc
addl
pusha
adc
push
xchg
in
mov
lock
shrb
pop
int
pop
jbe
dec
jnp
jl
gs
icebp
test
dec
out
inc
pop
add
ja
and
sub
sbb
scas
or
jns
test
movsl
mov
jmp
pop
lds
shlb
inc
push
pop
inc
xchg
mov
add
loopne
scas
shlb
subb
fstps
data16
dec
pop
fwait
addr16
push
subl
sub
in
jae
daa
xchg
popf
cltd
aaa
dec
nop
cmp
inc
fcompl
bnd
pusha
pusha
mov
mov
scas
jns
jnp
dec
leave
sub
es
flds
adcl
cmp
shlb
movsl
xchg
cltd
out
pushf
fsub
ret
arpl
push
add
inc
fstps
in
xchg
mov
xor
adc
mov
sbb
xchg
sahf
lahf
cwtl
cmp
mov
pop
lret
xor
in
sbb
das
dec
ljmp
mov
xor
xor
repz
das
add
lods
push
out
sbb
dec
std
scas
sbb
ret
jmp
push
xor
and
cmp
pop
fldl
clc
mov
push
pushf
mov
aas
sbb
push
xor
clc
mov
iret
ficoml
pop
fmull
in
out
add
xchg
in
cmpb
mov
cmp
jl
jle
push
dec
lahf
aad
scas
loopne
mov
rcrl
into
sub
out
jp
mov
dec
xchg
push
lret
lahf
mov
jmp
xchg
add
ljmp
jmp
adc
xchg
or
out
cli
cli
cmp
iret
pop
movsl
push
xchg
cmpsl
ret
pop
dec
push
jmpw
mov
sbb
push
and
adc
fsub
ror
lods
and
adc
imul
xor
ror
imulb
inc
mov
fistpll
push
inc
push
mov
cwtl
cmpl
xor
idivl
hlt
movsb
outsl
cmpb
push
hlt
or
mov
jmp
js
popa
jno
addl
icebp
lcall
adc
in
sbb
pop
sub
fidivl
ljmp
jle
shll
cmc
inc
add
jbe
out
sbb
lret
xchg
mov
dec
xlat
ss
mov
js
jns
enter
pop
sub
mov
xchg
lods
call
fstpt
mov
pop
hlt
push
inc
stos
jmp
lret
add
cmc
mov
int3
xor
dec
lret
cltd
push
push
das
sbb
in
xlat
popa
ret
call
add
mov
mov
fstp
pushf
mov
in
jle
fsub
sub
outsl
mov
arpl
ret
add
rorl
or
jmp
sbb
xchg
mov
add
inc
insb
mov
xorl
sub
sarb
mov
jne
sbb
adc
leave
cli
pop
loopne
aam
xor
bound
lea
sub
outsb
adc
loop
add
xor
pushf
dec
cld
lock
xchg
lret
xlat
mov
outsb
lods
mov
outsl
aaa
out
pop
xchg
mov
js
jbe
jg
pop
in
out
sbb
test
xchg
fs
xor
cmp
cltd
call
or
nop
sbbb
xor
std
aaa
push
ja
push
orb
rcr
xor
pop
pushf
aad
push
sti
xor
hlt
icebp
or
popf
and
fwait
loop
pop
je
mov
and
sbb
fwait
adc
scas
jns
ja
mov
xor
dec
movsb
dec
mov
pop
jns
adc
arpl
daa
xchg
push
lcall
imul
lds
lret
out
repz
je
adc
ds
lret
je
dec
xor
mov
andb
shr
adc
inc
in
mov
mov
stos
jmp
sbb
ret
imul
and
mov
leave
xchg
or
fidivrl
sbb
dec
pop
xchg
sarb
dec
xchg
jb
or
popa
cmp
dec
fwait
or
mov
ret
add
push
mov
sub
mov
int
repz
insb
xchg
mov
pop
cli
xchg
test
lcall
or
dec
dec
xchg
test
cld
mov
push
out
js
out
mov
xchg
inc
sahf
push
mov
stos
and
les
mov
cmp
jbe
or
push
pop
pop
xor
sahf
sbb
mov
push
jle
pop
inc
jb
aaa
enter
fnstenv
fidivrl
sahf
dec
lods
cmpsl
xchg
outsb
inc
push
cmp
push
add
sbb
fdivrl
xor
inc
jae
sahf
clc
and
das
insb
cltd
js
dec
paddusw
push
out
cmc
ds
pop
sub
imulb
sahf
jo
insb
jecxz
test
jmp
xor
orl
pop
jnp
pop
addr16
lods
pop
pop
loope
jg
out
cmpsl
mull
aas
aaa
sub
iret
cmc
or
xlat
xor
fisubrl
xchg
jns
jmp
rcrb
insb
ja
mov
daa
pop
test
cmp
mov
aaa
sbb
repz
xchg
xor
movsb
rolb
mov
inc
stos
test
shlb
dec
dec
xlat
stc
xchg
mov
or
out
pop
push
movsl
push
sub
jle
push
dec
mov
xor
mov
push
pop
or
lahf
lods
cmp
pusha
add
push
das
sbb
mulb
sub
movb
mov
clc
sbb
ret
pusha
js
sbb
std
repnz
stos
and
jl
adcb
xor
pop
xchg
mov
jbe
and
std
push
mull
shrl
pop
out
jecxz
ja
stc
int
pop
loop
xorb
and
sub
imul
push
mov
pop
ret
in
ja
iret
push
sbb
and
ja
sub
sub
into
add
out
test
push
push
repnz
pop
xchg
aad
fsubrs
shr
xor
fs
out
mov
popf
std
jbe
and
fstpl
mov
int
push
mov
pop
adc
fwait
js
jle
mov
dec
cmp
push
out
mov
and
push
mov
sbb
loop
js
mov
test
sbb
addr16
push
rorl
pusha
mov
mov
movl
hlt
iret
stos
cmp
loopne
inc
fldt
sbb
arpl
inc
xchg
pop
enter
jbe
and
xor
pop
push
push
cmpl
lock
loopne
ret
pop
pusha
dec
ss
sub
cmp
xchg
adc
pushf
cwtl
sbb
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
jg
push
add
add
int
imul
dec
inc
xlat
dec
std
adcb
out
data16
jecxz
push
xchg
adc
mov
aad
test
fstps
icebp
xor
mov
pop
ret
test
push
out
push
mov
jnp
pop
hlt
mov
scas
incl
pop
dec
jg
push
inc
adc
pop
and
adc
jbe
add
sub
adc
inc
xlat
mov
mov
cmpb
rcll
pop
cmp
xchg
js
push
adc
inc
xor
fistps
jae
mov
out
inc
iret
movsl
in
mov
cmc
pop
xor
dec
and
inc
fsub
jle
push
or
mov
mov
pop
repnz
sbb
cs
fstpl
shll
jge
pop
jno
cmc
scas
fnstsw
pop
xchg
cmp
fmul
jg
lea
data16
out
fistl
lcall
andl
les
repnz
xchg
decb
mov
adc
or
pop
addl
add
les
mov
in
movsl
stc
out
mov
loopne
xchg
xchg
mov
aaa
sub
shlb
and
dec
jnp
mov
jmp
xchg
aam
mov
js
aad
sbb
icebp
fst
repnz
notb
cld
shl
data16
int3
jg
push
stc
cmpsb
scas
cmp
cli
xchg
xor
ss
adc
cmc
mov
das
cmp
or
les
lahf
jle
pop
pop
and
sbb
mov
outsl
out
data16
push
popf
cwtl
sub
insl
cmp
test
pop
pushf
les
or
xchg
push
mov
xor
imul
pop
mov
adc
push
inc
data16
dec
dec
jno
push
lahf
pop
daa
aas
mov
and
xchg
xor
dec
jns
add
add
push
jl
ret
aaa
fidivs
bound
pop
imul
arpl
dec
repnz
leave
sbb
mov
sbb
inc
insl
scas
in
jne
in
pop
adc
stos
mov
andl
cmp
fcomps
or
dec
jnp
mov
mov
inc
es
sti
and
out
pop
mov
or
enter
cwtl
lret
mov
in
in
pusha
int
aaa
mov
out
sbb
into
mov
add
or
pop
inc
mov
out
add
and
int
pop
lret
stc
pop
inc
cmpsl
xor
daa
xor
or
xchg
sub
fs
out
div
movsb
jge
bndstx
sarb
pop
adc
pop
fwait
and
imul
sbb
pop
sti
sub
pop
push
adc
fldenv
les
into
inc
test
cmc
mov
add
mov
pop
xlat
cwtl
mov
sub
leave
push
add
adc
jl
sub
int
inc
enter
adc
jl
add
add
push
jne
mov
test
mov
push
or
jg
xor
test
pushf
repz
xchg
or
push
adc
aas
pusha
ljmp
cli
mov
cld
adc
push
in
inc
lds
outsb
pusha
nop
clc
shrl
add
lret
loop
adc
cwtl
pop
in
cmpsl
sbb
jmp
rcrb
xor
mov
fisubs
insl
lret
mov
fstpl
inc
push
das
mov
dec
rcl
aaa
dec
sub
inc
cwtl
movsb
les
ss
xor
not
scas
mov
imul
cmpsb
rorb
or
adc
sbb
cmp
cmpsl
sbb
jne
and
andl
mov
mov
data16
clc
inc
push
push
and
dec
mov
test
jne
in
adc
imul
sbb
mov
les
ret
ror
rorb
pop
inc
xchg
sbb
mov
inc
push
mov
jnp
fdivl
imul
push
mov
sub
or
pop
enter
out
cli
popa
das
imul
pop
cmp
mov
mov
adcl
dec
inc
jg
fcompl
inc
out
outsl
push
jb
popf
cmc
xor
cmp
xor
aam
xchg
sub
dec
or
inc
pop
sbb
inc
mov
stos
cmp
add
cs
sar
leave
int
aad
hlt
orb
loope
out
jae
nopl
leave
xor
stc
cmc
mov
loopne
push
test
sahf
push
out
pop
loopne
mov
jnp
sti
jmp
ret
cmp
addr16
adc
sub
cld
and
in
dec
subl
inc
jb
clc
jecxz
or
cld
dec
mov
sub
sbb
pop
adc
arpl
les
jecxz
dec
or
lret
mov
xchg
clc
lods
xchg
loop
add
fisttpll
movsb
and
add
jns
stc
adc
andl
push
cli
adc
jnp
les
xor
ds
pusha
mov
or
fcomp
inc
rclb
add
jmp
mov
insb
pop
push
aaa
or
mov
dec
popa
lret
int
push
dec
addr16
sahf
repz
add
into
aaa
pop
rcrb
shll
gs
jg
push
lret
xchg
mov
lea
jae
push
push
dec
cld
out
insl
into
push
jno
or
cld
repz
rorb
pop
mov
and
fstpl
cmp
pop
pop
or
cli
ds
mov
cwtl
fisttpll
mov
sbb
mov
aad
mov
repz
xor
xor
jns
clc
fnsave
add
xchg
repz
fucom
fimuls
pop
sbb
or
inc
mov
dec
icebp
mov
ss
lods
fs
pop
mov
es
pop
push
ficomps
jno
dec
add
fadd
mov
inc
enter
mov
jp
mov
inc
ss
xlat
jge
std
sub
xchg
sbb
lret
popa
int3
sub
xor
call
fldt
jp
mov
mov
es
test
xor
pushf
das
push
lcall
inc
xor
inc
popf
inc
jo
add
out
mov
insb
and
out
pop
xchg
jge
jb
out
mov
push
out
xorb
sub
ljmp
in
sbb
ss
lahf
insb
jbe
push
jge
mov
out
fnstcw
jno
dec
ror
mov
jnp
insb
in
cmp
popf
jecxz
inc
inc
inc
jae
mov
iret
movsl
jle
and
push
ret
cmp
mov
cmp
aam
pop
jnp
repz
int3
orl
loope
hlt
bound
ja
xchg
cmp
adc
adc
xchg
mov
movsl
cmp
jp
and
cmpsl
push
aaa
mov
xchg
lods
je
insb
test
pop
dec
mov
pop
fsubrl
mov
idivb
in
cmpsl
xchg
clc
loope
ffree
stos
and
or
ja
arpl
test
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
out
mov
out
movsb
js
inc
sbb
lods
jbe
push
mov
pop
add
xchg
adc
subl
adc
dec
shl
mov
sbb
mov
push
dec
cmp
outsl
pop
sahf
dec
dec
shrl
cltd
cltd
insl
jb
sbb
mov
enter
das
pop
pop
add
bound
jecxz
mov
cmpsl
lret
and
loope
je
dec
sub
fisttpl
outsl
xchg
icebp
ret
rorb
repnz
add
or
in
mull
loope
outsb
pop
push
pop
xchg
movsb
pop
enter
jnp,pt
jnp
idivb
sbb
sbb
aad
aam
scas
imul
cmp
or
mov
push
sub
jbe
inc
in
jae
push
icebp
push
mov
add
dec
add
bnd
popf
mov
sub
jns
stos
das
push
les
and
xor
pop
or
pusha
jg
lods
dec
mov
lahf
dec
xor
add
dec
loop
fisttpl
or
mov
cmpl
xchg
test
and
lret
aam
cmp
xchg
popl
lret
xor
mov
rclb
lret
jnp
push
add
fists
xchg
lea
js
or
js
push
cmpsb
mov
or
leave
add
inc
loop
mov
loop
shll
data16
mov
mov
inc
hlt
and
mov
cli
or
cmp
ja
sub
mov
lcall
add
jno
xor
push
js
pop
push
call
xor
popa
xchg
pop
fs
test
ret
bound
dec
aad
test
push
fs
ljmp
movsb
aad
test
imul
and
les
je
and
or
std
stc
fsubl
mov
and
loope
inc
dec
sti
sbb
mov
aam
dec
xchg
bound
testl
or
push
cmp
sub
movsl
dec
ja
adc
jecxz
ja
aam
and
fidivs
sbb
xlat
add
jno
test
xor
cmpsb
xchg
and
mov
inc
lcall
lods
and
dec
sub
dec
jns
mov
xor
jo
neg
insl
andl
xorl
daa
and
clc
xchg
pop
cmpl
push
jg
pop
fsubr
out
cmp
mov
or
inc
cmp
cltd
fisubl
ja
nop
clc
add
push
jecxz
sti
lret
or
je
ror
insl
push
scas
xchg
xchg
enter
dec
push
cmpsb
fmull
rolb
repz
dec
fistpl
je
jno
pop
xchg
mov
and
pop
test
push
imul
es
inc
jb
xor
adc
push
sbb
outsl
jne
ficoms
cmpsl
push
pop
aas
mov
inc
mov
jge
punpckhdq
les
jae
lods
arpl
mov
xchg
aaa
push
sti
pop
jle
je
daa
pop
pop
mov
push
cmc
sub
psubb
sbb
frstor
mov
pop
xchg
mov
out
pop
or
mov
inc
ror
or
arpl
cli
push
int3
or
dec
jp
or
xchg
xchg
clc
stc
pop
push
pusha
push
outsw
loope
mov
clc
ds
xchg
in
aam
loopne
mov
pusha
mov
lods
push
pop
mov
pop
ss
fidivs
ss
mov
xor
out
and
aaa
dec
jae
loope
jmp
lret
xchg
mov
shlb
cmp
jno
outsb
les
cmp
inc
dec
mov
mov
dec
mov
sbb
xchg
jecxz
mov
int3
movsb
push
xchg
add
pop
into
push
mov
call
xchg
and
imul
pop
cld
pop
insl
out
incl
out
lock
sub
pusha
push
inc
jle
shr
dec
lock
dec
sbb
mov
into
push
add
pop
in
test
cmp
cmp
arpl
call
outsl
mov
test
insb
in
enter
mov
mov
loopne
or
outsl
ret
jl
lods
xchg
cwtl
aam
jmp
inc
sub
sbb
arpl
mov
std
pop
xchg
sbb
mov
mov
inc
add
mov
lds
movsb
cmp
sub
xchg
mov
mov
jae
cld
push
xchg
dec
dec
popf
pusha
cmp
adc
aas
jne
pop
mov
incl
fcompl
lret
in
xor
dec
mulb
stc
test
jg
test
sub
iret
add
fsubl
fwait
adc
sub
adc
roll
sbb
ds
add
jb
pop
lods
cmc
leave
movb
adc
mov
aad
mov
pop
in
movsb
mov
mov
pop
leave
lahf
in
push
and
mov
stos
mov
sahf
stc
orb
cli
pop
stos
pop
jecxz
jge
aad
in
xchg
cltd
ljmp
inc
mov
mov
shll
mov
fistpl
xor
add
adc
sti
xchg
push
mov
xor
dec
cmpsb
loope
call
mov
or
xor
xchg
mov
repz
mov
add
xor
pusha
outsb
in
or
arpl
shll
outsl
sub
setge
sbb
imul
dec
and
lret
inc
push
pop
jae
dec
push
xor
movsb
hlt
adc
pop
jge
repnz
jns
pop
adc
pop
jne
pop
sub
push
clc
xchg
cli
xor
iret
ss
push
in
pop
fsubr
inc
cmp
xor
dec
mov
adc
adc
and
mov
xchg
jns
cld
lret
adc
into
cmpsb
sbb
add
sarl
cmp
pop
jns
cmp
clc
sarl
adc
outsl
fs
stc
js,pn
mov
add
jo
mov
lods
mov
cld
xchg
adc
lods
xchg
dec
cmp
cld
mov
cmp
es
push
cmp
sarb
sub
and
pop
xchg
jp
inc
loop
les
jge
and
in
into
jge
adc
mov
fisubs
mov
pop
out
mov
mov
stos
mov
in
mov
scas
xor
sub
push
sub
push
stos
movsb
cmp
xchg
mov
int3
outsb
mov
loope
in
jmp
dec
nop
inc
scas
push
imull
or
mov
stos
xor
lret
mov
sub
mov
xor
icebp
push
jne,pt
inc
es
adc
in
jnp
scas
lea
test
jns
jge
sub
je
xor
inc
fbld
hlt
icebp
out
inc
push
pop
lret
cmp
stos
adc
rclb
push
repnz
xchg
sbb
repnz
cmp
dec
test
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
mov
pusha
push
loope
adc
addl
mov
sbb
js
pop
stos
inc
mov
faddl
pushf
push
jno
push
jns
mov
insl
in
jb
add
mov
lret
out
and
js
outsl
cli
aad
mov
ret
pop
pusha
les
out
mov
jne
inc
xchg
stos
lcall
xchg
sub
ret
inc
pushf
pop
xor
push
add
push
lret
aas
and
mov
fdivrp
repz
je
fmuls
subl
aaa
mov
lret
arpl
aam
mov
popa
sbb
push
and
movsl
aaa
sub
fwait
add
jno
insl
lret
pop
xor
ljmp
push
call
cmpsl
fcoms
loop
xchg
or
cwtl
add
test
mov
pop
push
enter
mov
daa
push
xor
sbb
xlat
and
shrb
outsb
sbb
jo
ror
pop
jl
test
idiv
push
mov
mulb
adc
pop
hlt
pop
jne
mov
jl
mov
pop
fldl
pop
int3
mov
xor
pop
mov
fmuls
scas
test
pop
jne
aad
fs
fisubs
test
pop
movsb
xor
xor
cmc
int3
jne,pt
mov
nop
jne
cli
or
xor
pop
adc
jecxz
adc
je
loopne
add
sbb
push
add
shrl
stos
adc
pop
enter
leave
add
jae
push
iret
pop
adc
mov
idivb
cld
inc
rclb
jae
call
or
insb
dec
das
add
test
out
inc
sti
out
leave
cmp
test
fsubrs
xchg
xchg
mull
cmpsl
negb
addr16
mov
cmp
cmp
andl
fsubl
ret
add
fwait
test
cmp
push
aaa
daa
jp
or
scas
inc
jb
loopne
or
dec
fsubl
call
jle
ret
test
cltd
out
push
cwtl
adc
inc
stos
bnd
xchg
sbb
mov
fdivr
xor
jno
lcall
sbb
push
and
adc
stc
mov
jns
jecxz
lods
push
rorb
sbb
divb
addr16
es
pop
enter
pop
mov
cld
and
lret
push
std
pushf
rcrb
hlt
add
pop
pop
mov
imul
pop
arpl
jp
out
add
inc
jns
pop
into
push
insb
clc
mov
popa
mov
dec
sub
loop
insl
negb
mov
in
push
enter
jecxz
inc
mov
jecxz
jge
lods
pop
dec
jnp
lods
pop
je
add
andl
fwait
repz
jecxz
insl
addr16
mov
pop
fsubrs
pop
loope
lret
sbb
pop
pop
adc
icebp
inc
lcall
lahf
lea
mov
and
aas
xor
cltd
mov
or
inc
and
je
push
sbb
and
jge
sahf
push
into
sbb
and
sahf
adc
mov
fs
jle
xor
adc
test
sbb
loopne
mov
mov
adc
ljmp
jae
jo
pusha
clc
push
lret
cmc
leave
stc
fdivp
mov
cwtl
cmpsb
out
test
arpl
stos
ficompl
or
sub
std
stc
sub
xor
mov
adc
jo
inc
inc
neg
or
add
movsb
outsb
pop
mov
call
jg
hlt
adc
sahf
in
sbb
jl
xchg
cltd
jmp
xorl
fidivrs
mov
cwtl
pop
js
pop
inc
sub
shrl
push
push
jnp
mov
notb
leave
mov
fldl
cmp
inc
adc
femms
mov
push
bound
js
and
aam
adc
push
inc
jecxz
pop
mov
loope
sbb
pop
es
addr16
fidivs
jno
xchg
ror
mov
sbb
sti
cmc
fcmove
cmc
sub
sub
testb
or
pop
sub
add
pop
xor
add
and
adc
std
lds
add
xchg
in
and
das
xchg
pop
ret
insl
cmpsb
lahf
mov
incl
sarb
pusha
add
lock
mov
iret
sub
jae
sub
inc
dec
mov
sub
out
and
ja
fs
bound
pop
sbb
loopne
shl
pop
iret
out
lea
int
sti
jp
mul
cmp
sbb
jg
push
aam
dec
out
xchg
out
cmc
incb
mov
jnp
push
out
negb
or
sub
pop
test
cmp
insl
scas
mov
sbb
cwtl
cld
rorl
pop
xchg
sbb
ds
or
xchg
mov
lods
in
and
sbb
lret
ja
arpl
sarb
mov
shlb
shlb
clc
push
sti
lahf
dec
jae
stos
pushf
and
sub
lods
xchg
and
xchg
rcrb
or
or
adc
push
lcall
shrl
and
ret
xchg
pand
popa
fsts
mov
mov
repnz
mov
adc
inc
fists
movsb
push
sbb
stos
das
mov
cmp
xor
cmp
sub
inc
in
add
imul
inc
enter
fldl
sub
and
repz
add
jl
scas
movsb
std
sbb
shrb
into
outsl
movsl
jo
and
call
adc
daa
dec
ficomps
ds
bound
or
rcl
inc
mov
fcompl
adc
pushl
pop
adc
scas
push
jmp
insb
jbe
movsl
adc
add
ret
xor
dec
mov
or
dec
test
xlat
leave
add
enter
push
xchg
mov
nop
sub
pop
xchg
loop
xchg
andb
adc
push
mov
mov
and
ret
adc
mov
mov
outsl
aad
sub
xchg
dec
inc
popf
clc
push
in
in
rcll
sbb
lahf
adc
xchg
outsl
outsl
ffree
mov
or
sbb
sub
lret
inc
in
outsl
or
push
pop
push
xchg
shrl
mov
in
mov
pop
cli
or
sub
mov
sbb
inc
or
mov
inc
adc
rcrl
push
fcom
and
fdivrs
inc
mov
push
out
and
mov
faddp
push
sti
loopne
in
ja
rcll
or
sbb
test
insb
movsl
notl
jnp
pop
push
dec
rcll
mov
repnz
inc
push
and
cmp
jp
adc
push
sti
pop
mov
mov
lods
out
fwait
add
cmpl
fnstcw
dec
test
pop
xor
das
adc
mov
inc
sbb
mov
pushf
mov
movsl
test
add
cmpsb
loopne
mov
push
out
cmp
xchg
mov
add
scas
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
add
rolb
rorb
dec
dec
xchg
inc
fisttpl
loop
lcall
add
les
imul
adc
sub
cmp
sbb
out
loop
cmp
shr
jae
movsb
mov
push
insb
std
notl
adc
xor
ret
mov
lods
push
fstpt
fistps
jnp
outsb
popl
btr
cmp
out
cmp
cli
test
jae
push
nop
movl
and
stos
cmp
inc
fwait
push
add
adc
or
mov
add
push
cmp
xor
pop
aas
push
stc
or
int3
add
les
push
out
push
outsl
int3
out
enter
mov
addr16
push
addr16
adc
ret
push
lret
sbb
xor
loope
and
dec
xchg
lret
popf
les
sbb
jp
mov
frstpm(287
inc
xchg
out
inc
addr16
inc
pop
jmp
cli
loop
gs
push
pushf
xor
mov
pcmpgtb
ret
jg
aad
push
outsb
xorb
les
stos
cmp
and
push
aas
mov
fwait
dec
mov
jmp
je
out
sti
ja
rcrl
dec
push
fiadds
pop
push
lahf
jns
push
dec
inc
out
repnz
shl
pusha
js
add
out
add
in
push
jne
pusha
xchg
push
cs
fisubrl
daa
std
jmp
insb
das
dec
pop
inc
stc
sti
cmpsl
loope
dec
lcall
stos
add
loopne
pop
nop
lods
xor
inc
jb
cmp
cmp
push
movsl
das
das
sbb
sub
mov
roll
out
xchg
mov
mov
or
mov
add
push
xchg
das
stc
jl
out
mov
and
addr16
push
sbb
cmp
hlt
arpl
xor
outsb
js
jmp
int
adc
cwtl
pop
adc
mov
xor
jp
je
or
int
xor
les
xchg
stc
fnsave
ljmp
bound
pusha
aad
cmp
ret
pop
and
mov
shl
cmp
xor
outsl
fisttpll
leave
mov
repnz
or
pop
inc
cwtl
insb
out
bound
inc
or
pop
dec
shrb
js
pop
int3
sub
int3
inc
sbb
stos
push
dec
xlat
insl
stos
out
insb
mov
xor
arpl
push
mov
mov
ja
jbe
mov
xor
adc
outsb
lret
xchg
pop
xor
dec
push
jmp
lods
sbb
fisubrl
aaa
xor
push
lea
mov
f2xm1
mov
cmp
popa
jmp
push
fwait
jns
add
xor
lea
pop
pop
mov
ljmp
jp
popf
push
mov
orl
lahf
push
pop
loop
jecxz
fwait
xor
shrb
or
pusha
shrb
and
scas
cmpsl
mov
aas
adcl
inc
ret
imul
mov
xchg
int3
jbe
push
jae
jl
pop
mov
icebp
adc
mov
arpl
push
test
out
adc
inc
sub
ljmp
faddl
cmpsb
pop
mov
dec
xor
jae
lea
ljmp
mov
jo
sbb
mov
and
dec
in
jle
test
mov
jge
push
sar
addr16
loop
dec
or
movsb
stos
mov
nop
loopne
xchg
or
adc
or
cltd
rcrb
sub
cmp
mov
or
in
pop
mov
mov
aad
sbb
pop
cmp
mov
and
cmpsl
decl
imul
insb
sbb
test
and
ret
pop
xorl
das
mov
xor
push
repnz
jecxz
nop
push
add
xchg
xchg
jg
arpl
mov
sti
or
inc
dec
adc
pop
xchg
push
movsb
cmp
shl
pop
xchg
jp
gs
loopne
loop
mov
rcr
cmp
dec
cli
rorl
xchg
std
enter
ret
pop
pop
fistpl
fistpl
cmpb
sti
dec
iret
xchg
mov
jg
dec
ja
xlat
mul
adc
sub
push
nop
jl
into
es
mov
push
outsb
dec
leave
ss
add
adc
sub
call
stc
dec
sahf
cmpsb
lcall
repz
shrl
sub
aad
fstp
sti
push
lret
sbb
xchg
adc
inc
outsl
int3
adc
push
fmulp
movsb
int
mov
jbe
push
int
push
cmpl
dec
repz
test
rcrl
and
mov
lods
and
cmp
sub
push
pop
xchg
sbb
jne
mov
dec
push
imul
sbb
shlb
xor
mov
add
xchg
add
addr16
movsb
iret
mov
xor
fs
push
insb
loopne
push
dec
jbe
xchg
ret
jnp
pushf
mov
xor
je
das
pop
and
imul
mov
adc
cmp
cmp
mov
popf
ret
cmp
repz
insb
int
imul
inc
jnp
movsl
movsl
jl
push
cltd
sbbl
lcall
pop
mov
mov
jl
dec
add
jb
out
mov
int3
jle
cld
in
cmp
and
xor
ds
inc
lods
mov
jmp
mov
sbb
ret
mov
call
les
fnsave
mov
popa
cmp
xchg
loope
pop
xchg
xor
mov
ljmp
repnz
mov
in
das
fisttpl
out
loopne
stos
fistpl
mov
push
jg
in
inc
mov
mov
pop
cmc
add
inc
jmp
hlt
cmp
dec
and
out
and
push
jp
stc
cmp
fxam
outsb
js
mov
repz
aas
sbb
bound
stc
out
imul
xchg
enter
out
sbb
lods
jp
imul
add
pop
xchg
adc
cwtl
outsb
xorb
add
or
fcompl
rorl
lock
in
mov
mov
aaa
dec
jnp
xchg
imul
les
jp
sar
insb
fnstsw
jne
dec
pop
xchg
int3
iret
sub
ret
dec
xchg
dec
and
lds
imul
mov
inc
mov
insl
cmc
xchg
sarb
jns
icebp
lahf
add
jl
sub
ljmp
add
test
mov
insl
out
mov
iret
dec
hlt
add
push
sbb
ss
enter
jg
adc
lods
sub
icebp
mov
sbb
mov
or
scas
cmpsl
push
sbb
sub
and
std
enter
or
pop
jnp
cmp
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
cmp
jno
sbb
dec
sbb
sbb
inc
mov
out
mov
inc
sub
dec
mov
cs
aam
sbb
add
mov
movsb
je
lock
mov
testl
pop
loop
sub
sahf
negb
sbb
or
dec
movsl
pop
std
sub
int3
fists
daa
std
pop
and
iret
pop
push
adc
cli
ficoms
aas
notb
mov
test
cmp
cmp
cmp
fldl2t
cmc
jl,pn
or
dec
jb
lret
and
test
push
ja
cltd
push
jle
ljmp
aas
dec
cmp
and
stc
nop
mov
xor
push
faddl
push
aad
jmp
adc
lock
aam
xor
dec
xor
jo
pop
adc
push
inc
cli
icebp
scas
mov
iret
sti
scas
pop
addb
cwtl
lret
mov
jmp
inc
cmp
mov
push
sub
lcall
dec
inc
pause
push
aad
std
shll
cmp
in
jp
insb
sbb
int3
mov
jnp,pn
orl
jbe
add
mov
fwait
cmp
pusha
js
jmp
cmc
in
inc
and
dec
fs
loope
daa
ljmp
ret
mov
inc
dec
inc
jg
mov
loope
nop
cmp
fdivl
cmp
insb
and
dec
dec
inc
xor
je
jecxz
add
adc
adc
xchg
sbbl
xor
scas
insl
je
mov
inc
dec
mov
cmp
dec
dec
fwait
scas
es
cmp
aam
dec
cmp
daa
fists
mov
lahf
sbb
mov
xchg
adc
xor
jl
insl
sar
mov
jmp
mov
inc
fists
sbb
mov
sub
movsb
or
std
adc
pop
cli
ds
pshufw
jg
lock
addr16
leave
pop
jo
cmpsb
jg
pop
sub
outsl
push
sbb
xor
out
daa
popf
push
rcll
sub
ss
shlb
shlb
push
cwtl
out
pop
shr
dec
jb
xor
cwtl
jecxz
xor
adc
or
xchg
insb
jno
enter
adc
sbb
outsb
adc
mov
mov
les
inc
scas
lret
enter
xchg
pop
je
mov
cmp
das
mov
popa
push
sarb
fisttpll
mov
sub
jp
rcrl
xchg
fdivl
fsubrl
push
lret
cltd
sbb
sub
xchg
ss
ljmp
lcall
adc
test
xchg
mov
and
or
mov
and
mov
je
inc
or
or
mov
xor
cmc
pop
adc
xor
jmp
mov
mov
out
stos
fdivs
push
and
sub
outsl
inc
call
mov
fcoms
dec
scas
mov
loope
loop
cmp
ss
or
xchg
sub
dec
dec
mov
jmp
push
jp
cmp
loope
cwtl
insl
jae
xchg
into
in
mov
sub
sbb
mov
xchg
ljmp
mov
push
imul
xchg
test
add
jb
xorps
sbb
jnp
xor
jmp
sub
in
pop
int3
outsb
cwtl
out
test
jp
jne
cmp
mov
filds
mov
cltd
insl
sbb
test
lods
mulb
pop
repnz
pop
push
pusha
imul
pop
xchg
pop
fisttpl
adc
mov
mov
or
addr16
cmp
xchg
push
mov
add
dec
xchg
pop
cs
lea
inc
mov
xchg
hlt
int3
cmc
lods
outsl
push
add
xchg
xchg
push
push
xchg
lock
mov
ljmp
fcomp
test
stos
aas
stos
mov
add
mov
mov
orl
and
mov
mov
pop
fstpl
pop
mov
adc
pop
into
push
dec
das
daa
cld
cmp
nop
push
fildl
mov
ret
jnp
ret
cmp
mov
ss
push
mov
out
add
test
jns
dec
and
mov
rorb
in
daa
loop
mov
hlt
out
mov
inc
cmc
adc
lods
and
mov
adc
mov
loop
sti
mov
pop
shr
leave
xchg
popa
mov
and
add
sbb
leave
lock
cltd
in
or
scas
lods
xchg
mov
in
sbb
hlt
jno
call
cmp
stos
in
data16
out
std
add
shrl
push
jo
xchg
stos
hlt
lcall
sti
xchg
mov
adc
pushf
or
adc
push
lret
dec
adc
ja
mov
xchg
cmp
insb
movsb
stos
mov
int3
mov
push
adc
push
lods
dec
jmp
pop
sbb
push
outsb
shr
inc
xchg
dec
mov
push
mulb
push
or
push
xorl
cmp
in
data16
jns
lock
dec
jno
fs
mov
lret
add
or
cs
xlat
js
mov
and
sub
mov
daa
mov
dec
insb
mov
inc
xlat
fisubl
push
shll
xchg
push
or
mov
xor
js
out
push
xor
jmp
pop
leave
pop
mov
cli
pop
stc
aaa
es
fstl
les
mov
das
mov
cmp
pop
loopne
mov
dec
jno
xor
loop
ror
dec
std
dec
into
dec
pop
push
test
popa
shl
add
hlt
ljmp
cmp
sub
cmc
fistpll
cmp
sti
dec
daa
subb
repz
mov
mov
test
xchg
aaa
pop
push
nop
loop
push
cwtl
pop
ror
in
inc
adc
scas
scas
dec
cmp
negl
and
ja
xlat
jo
mov
cmp
out
jl
ja
xchg
mov
loopne
mov
into
loope
lock
cmp
mov
mov
sbbl
sti
mov
inc
sarl
xchg
xchg
pop
daa
dec
imul
out
mov
mov
stc
mov
mov
mov
xchg
pusha
lret
xchg
adc
insl
sbb
in
xor
outsb
fstpt
fidivrl
testb
shrl
lds
sbb
aad
xchg
das
sbb
jnp
mov
les
jbe
and
movsb
outsb
adc
xor
dec
int
pop
je
and
push
jp
adc
ror
outsl
push
and
aam
movsl
outsl
je
outsl
mov
add
loopne
insl
popf
rclb
push
lods
and
mov
sub
dec
sbb
inc
sbb
mov
mov
push
sti
sub
add
sub
push
push
or
jp
sarl
dec
mov
enter
punpckldq
dec
xor
stc
call
dec
pop
cmpsl
ficomps
test
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
sub
xchg
cmpsl
adc
addps
xorb
jecxz
mov
jl
movb
enter
ja
test
xchg
pop
in
cs
or
xchg
pushf
mov
and
data16
jb
nop
lcall
xchg
adc
mov
xrelease
push
xor
mov
pop
xchg
xchg
and
mov
dec
push
jg
push
and
cmc
sub
push
movsb
xchg
sahf
stos
inc
cmpsl
lcall
enter
and
sbb
and
pop
or
nop
mov
cltd
inc
or
popf
cs
push
xchg
gs
stos
testb
inc
movsb
nop
xor
popf
test
stos
mov
addr16
sbb
push
imul
or
aad
mov
jb,pn
mov
dec
sub
imul
sbb
and
or
outsb
cld
aad
xchg
shll
fadds
xchg
cmp
or
lea
xchg
and
mov
add
addr16
rcrl
sbbl
out
mov
xchg
pop
cld
xchg
add
shrl
sbb
or
and
xor
adc
jnp
fistl
sbb
xor
out
inc
xlat
lds
sbbl
mov
inc
xlat
xor
lods
mov
lea
sbb
into
nop
mov
and
cmp
adc
jg
loop
or
ljmp
mov
inc
cmp
leave
lret
sahf
push
hlt
inc
inc
xlat
lret
pop
lds
clc
mov
leave
movsl
push
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
