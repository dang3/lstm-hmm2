push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
xlat
jl
jl
lods
jl
jl
xor
xor
ja
or
ret
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
enter
pop
or
stos
movl
mov
add
jmp
leave
mov
pop
mov
mov
lods
jl
jl
inc
inc
xchg
cmp
fucomp
fsubr
movsl
mov
xchg
rcrb
lsl
push
stos
jns
jae
mov
ror
adc
scas
mov
push
cmp
mov
xlat
bound
xchg
mov
cmp
ficompl
cli
movsl
or
jecxz
mov
or
stc
jae
sbb
or
mov
in
leave
enter
cmpsb
jbe
xchg
hlt
inc
jae
stc
and
arpl
mov
shrb
jbe
mov
add
add
fimuls
jne
adc
xor
lea
frstor
xchg
int
mov
cld
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
jmp
jnp
fdivrl
jl
jl
jl
cmpsb
popf
push
mov
push
into
repnz
pop
sbb
pop
sub
sub
fwait
rcl
call
mov
dec
jmp
incl
or
loop
mov
or
fs
insl
and
lcall
sbbb
call
lods
aam
and
jmp
lret
push
mov
add
and
jo
cmp
stc
test
dec
pop
hlt
sub
dec
sbb
aaa
in
repz
arpl
ljmp
mov
sbbl
mov
repz
xchg
ds
div
mov
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
fidivrl
jae
push
adc
movsb
test
jno
and
cmp
dec
addr16
inc
or
ret
hlt
dec
insl
shr
jecxz
or
mov
loop
hlt
push
or
les
adc
test
sbb
pop
dec
test
mov
aaa
add
jne
cld
lahf
lret
jge
or
aaa
xlat
addr16
mov
add
mov
cmp
movsb
cmp
jp
and
orb
cs
xor
test
shll
bnd
fdivr
add
idivb
push
jmp
xchg
jne
add
add
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
lea
lods
jl
jl
pop
subl
shlb
ret
lahf
test
sahf
sub
lret
js
out
sub
stc
push
lcall
gs
mov
add
mov
dec
pushf
xor
pop
xchg
sti
hlt
outsl
pop
stc
data16
dec
pop
cmp
mov
inc
mov
mov
dec
hlt
jb
add
cli
notl
loopne
data16
clc
cmp
movsb
or
sub
xchg
sarl
jg
mov
mov
mov
sbb
cmp
dec
sarl
xor
cmp
stos
jns
nop
dec
cmp
mov
pop
loop
mov
push
mov
orl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
ret
fisubl
cmp
setae
arpl
mov
imul
and
rolb
adc
sbb
fcoml
icebp
jae
leave
out
aas
repnz
xor
pop
outsl
push
mov
and
rolb
mov
mov
iret
arpl
push
lods
pop
repnz
dec
out
fdiv
mov
inc
out
dec
das
lahf
add
ret
mov
cmp
cmp
fbld
or
mov
jo
or
lds
mov
dec
push
pop
mov
stos
cmp
pop
arpl
add
movzwl
mov
jmp
repz
jecxz
push
scas
rol
cmp
jl
jl
jl
out
mov
cwtl
fldenv
aad
jnp
ficompl
negl
add
push
mov
je
in
xor
fwait
lock
pop
cmp
adc
mov
cmp
jecxz
pushf
loope
sbb
mov
addb
mov
jo
pop
push
mov
jp
pop
dec
jle
ljmp
bound
imul
in
daa
mov
scas
lods
dec
js
imul
push
pop
movsb
push
sub
mov
lods
cmp
dec
mov
pop
and
xchg
cmc
lcall
xchg
or
in
mov
loop
add
es
lea
add
mov
mov
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
popf
mov
dec
jo
jl
jl
jl
inc
shll
test
pop
xor
adc
xor
push
pop
mov
dec
mov
xchg
mov
xchg
or
mov
repz
mov
and
and
mov
loop
cltd
pmaxsw
jns
mov
loop
push
shlb
mov
insl
mov
fmul
dec
or
lock
push
ja
mov
pusha
inc
mov
sub
xchg
mov
orl
jne
nop
inc
sbbl
fdivr
in
scas
das
mov
mov
fidivrl
rol
outsb
testl
in
mov
inc
in
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
push
es
sub
dec
jo
dec
jbe
mov
ljmp
inc
mov
push
ret
repz
in
push
sbb
xor
adc
jg
dec
jo
fs
and
scas
add
shrb
pop
mov
and
or
cld
cld
adc
scas
mov
mov
pusha
push
les
and
dec
cmp
insl
out
inc
cmp
xor
fisttpll
xchg
sbb
lcall
and
int3
push
fisubrl
imul
scas
sbb
and
mov
es
adc
sub
es
fildl
lahf
adc
push
inc
cmpsl
scas
call
sti
add
cmp
pop
cwtl
xor
insb
xchg
subl
arpl
sbb
test
adc
dec
and
filds
push
dec
and
int
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
jle
arpl
jb
jl
jg
jl
cmp
out
enter
sub
pop
sub
mov
push
shrb
loopne
push
push
jo
dec
xlat
xor
inc
push
jl
lea
lcall
fs
push
push
enter
xchg
in
add
or
int
pushf
icebp
les
add
test
cwtl
fcmovu
jne
jb
imul
cmp
pop
xor
adc
jl
and
gs
out
cltd
pop
cs
dec
rclb
decb
mov
inc
mov
pop
cmp
sub
mov
out
fs
xor
and
sbb
out
nop
lret
pop
rorb
rcrb
out
ret
jge
repnz
pop
mov
adc
sbb
push
pop
jl
adc
or
iret
mov
lahf
pop
aas
cmp
mov
call
popa
pop
hlt
cli
cmp
xor
adcl
jmp
mov
cltd
mov
mov
add
jne
jl
jg
jl
int
leave
out
xchg
insl
mov
lcall
ret
xor
mov
pop
cmp
mov
xor
xchg
gs
hlt
or
sbb
inc
xor
popa
in
sbb
xchg
jno
sub
mov
inc
sub
inc
jb
enter
adc
in
aas
sbb
cltd
cmp
inc
add
test
dec
out
gs
cmp
xchg
loope
test
test
insl
mov
icebp
dec
cmpsl
subb
lretw
ja
cmp
insl
stos
mov
inc
sub
sbb
and
xor
pop
push
or
jmp
jae
pop
mov
popf
dec
jmp
cmc
cmc
xchg
adc
lahf
test
pop
sub
stos
jge
jmp
cli
stos
and
xor
jb
cwtl
or
lds
add
gs
shl
subl
pop
out
adc
icebp
insl
jnp
add
mov
adc
add
and
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
std
inc
sub
divl
jno
jl
test
xchg
std
xor
push
push
cld
and
stos
sbb
mov
or
pop
cli
scas
mov
mov
aas
xor
xchg
jmp
mov
in
movsb
les
les
int3
pop
xor
sti
mov
repnz
xor
test
jmp
mov
jne
mov
mov
jle
jns
daa
mov
mov
test
adc
rcl
sbb
jae
jmp
mov
call
es
adc
xor
data16
fmulp
pushf
xlat
shlb
rolb
pop
xor
inc
dec
xlat
jae
cmpsb
pop
pop
popf
test
cmc
adc
repnz
mov
sub
popa
cmc
mov
pop
push
clc
or
or
in
mov
cmp
mov
lds
and
push
test
add
or
sti
mov
dec
decb
aas
test
test
or
rorb
mov
inc
add
rol
add
xchg
add
cli
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
imul
jno
jl
pop
inc
push
insl
aad
ss
xchg
cld
aad
pop
stos
in
pop
ds
mov
mov
cmp
outsb
jne
cvtdq2ps
xchg
jmp
and
stos
push
push
imul
lods
xchg
das
fcmovne
adc
mov
dec
popa
cmp
inc
jb
inc
inc
cmc
fdivs
popf
inc
sbb
pop
icebp
loope
pop
aaa
add
dec
fistl
inc
adc
adc
or
xorl
pop
mov
inc
pop
xchg
and
fsts
in
cmpsb
mov
aad
xor
lret
mov
and
adc
ja
and
ss
gs
fistps
ds
nop
pop
dec
mov
mov
test
inc
fs
push
sbb
dec
mov
inc
jl
lods
out
adc
mov
mov
xchg
out
movsl
outsb
cmp
xorl
jbe
or
xchg
mov
mov
xor
jge
xor
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
popa
push
push
mov
jno
jl
sti
jmp
xor
mov
shll
fimull
sub
lds
jae
push
imul
sbb
pop
pop
test
cmp
lcall
mov
fists
sbb
testb
dec
pop
imul
cmp
mov
sbb
jo
fistl
movsl
push
nop
iret
sbb
shll
fwait
punpckhwd
bound
movsl
inc
lea
hlt
pop
cmp
inc
xchg
jge
repz
xor
sub
pop
mov
mov
pop
cmpsb
or
adc
test
aaa
aas
insl
mov
mov
jecxz,pn
das
add
hlt
cmp
mov
daa
xchg
fidivrs
dec
cmp
bnd
into
call
cld
pop
lds
mov
rep
dec
push
sahf
imul
aas
jl
adc
ds
dec
push
cmp
lods
lret
sbb
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
insl
xor
or
jno
jl
xlat
add
inc
lds
cs
mov
jne
sti
scas
or
into
mov
mov
add
push
xor
jns
jg
pop
insl
mov
push
int3
ljmp
rsqrtps
daa
inc
ret
mov
and
xchg
lock
xchg
shlb
mov
cltd
jge
push
bound
mov
fwait
out
lds
aam
xchg
sbb
das
dec
test
ds
xchg
dec
inc
inc
xchg
add
repz
icebp
data16
adc
pusha
xor
jl
outsl
ljmp
mov
mov
fnsave
lock
xor
ret
in
loop
clc
daa
mov
inc
jmp
push
push
shll
ret
std
stos
xor
fsubs
icebp
out
testl
add
sbb
js
inc
stos
loope
dec
leave
aad
pop
lods
fimuls
imul
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
adc
xchg
out
aam
pop
jg
mov
adc
xor
inc
jmp
rcr
adc
xor
ja
aaa
pop
dec
adc
outsl
mull
sub
in
mov
mov
xor
negb
pop
addr16
inc
sbb
shlb
imul
clc
cmpsl
mov
lahf
jae
dec
xor
out
nop
lock
jmp
add
into
sbb
adc
andl
cmp
insb
ffreep
mov
push
and
bound
xorb
mov
pop
sbb
in
test
jno
add
and
push
push
mov
jne
mov
mov
fsubp
fldl
sahf
push
es
and
and
popf
sbb
mov
adc
xchg
stc
xor
pop
xor
sarb
or
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
int
repnz
test
jl
jno
jl
ffreep
xlat
aam
xor
jo
add
jg
mov
imull
mov
fildl
movsl
sbb
xor
std
mov
cmc
adc
test
push
xchg
jl
iret
out
cmp
sahf
sarb
mov
push
hlt
ret
dec
in
pop
ret
sarl
mov
pop
cmpsb
mov
or
add
add
sahf
xor
and
mov
mov
enter
pop
mov
outsb
pop
lock
daa
cmp
shr
pushf
aam
std
adc
popa
sarb
es
xor
imul
mov
pop
lret
push
pop
pop
mov
fldt
pop
daa
pop
jle
scas
into
push
mov
in
sbb
dec
dec
and
ja
dec
fiaddl
add
cmp
mov
mov
xchg
push
in
int
sub
inc
js
sbb
clc
jge
xor
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
dec
arpl
cltd
or
jg
jl
leave
rcrl
inc
or
dec
jne
lds
loop
cld
inc
sub
out
ret
adc
std
inc
fwait
imul
jecxz
repz
int
pop
xor
mov
dec
add
test
sbbb
jb
xchg
loop
push
iret
sub
test
stos
call
push
and
aas
jmp
stc
sbb
jns
mov
aam
jo
test
fs
dec
lahf
ss
dec
test
sub
ds
adc
xchg
push
xlat
imul
out
ret
ja
xchg
imul
jo
cmp
cli
mov
push
stos
int3
ja
pusha
cmp
mov
sub
shll
data16
xchg
add
iret
imul
sti
mov
test
and
mov
mov
or
outsl
aas
sub
jge
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
aad
lea
jg
jl
imul
cmc
shlb
stc
adc
imul
stos
iret
sbb
icebp
sbb
inc
add
das
mov
inc
popa
lods
mov
sbb
or
shlb
jo
fsts
mov
loopne
out
movsl
or
pop
mov
xor
enter
mov
mov
fnstenv
mov
dec
mov
cmp
fprem
push
fisubs
fistl
pop
test
fwait
in
inc
outsb
sbb
ret
inc
sarl
jmp
outsl
sub
mov
js
popa
cld
pop
mov
ss
jmp
fsubrs
jmp
mov
fisubs
pop
pusha
movsl
outsl
rcl
push
add
mov
mov
daa
or
and
out
std
movsl
iret
mov
xchg
pushf
or
xor
mov
cld
rep
out
addb
add
mov
je
pop
orl
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
nop
mov
lahf
or
jl
jl
jl
mov
es
push
imul
xor
incl
inc
dec
daa
loop
mov
and
inc
pop
out
mov
cmp
dec
inc
pop
cmp
or
mov
inc
movsl
out
je
inc
gs
int
adc
cwtl
mulb
pop
cmp
std
lret
dec
mov
and
les
inc
test
xlat
test
mov
pusha
mov
or
jge
xchg
xchg
mov
dec
mov
fs
dec
xor
dec
cmp
outsl
nop
cli
push
add
push
cmpsl
les
mov
pusha
xor
rclb
lds
data16
xchg
je
inc
sti
inc
sub
call
scas
rol
pop
sbb
inc
jl
out
fs
fst
sub
daa
or
adc
rorl
stc
enter
adc
mov
adc
push
and
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
subb
jl
jl
jl
add
dec
or
mov
sub
sub
mov
pusha
mov
ja
jecxz
xor
scas
mov
dec
or
or
dec
ficoms
cmpsb
push
cmp
mov
add
inc
fisubl
cmp
out
xchg
mov
orl
inc
addr16
adc
bound
mov
pop
idivl
jbe
pop
xchg
scas
ss
mov
sbb
lcall
adc
mov
push
sub
lods
or
cmpb
jg
fcoml
sarl
sbb
rcrb
push
aad
mov
pop
sub
mov
jbe
pop
pop
lods
cli
mov
test
xchg
mov
mov
jg
pop
int3
lcall
jne
repz
mov
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
and
push
jl
push
jl
jl
inc
jl
stos
scas
mov
cmp
and
or
test
cmp
cmpsb
mov
fldt
xor
lds
mov
adc
fstpl
inc
jns
adc
xchg
or
mov
gs
dec
call
cwtl
jae
pop
mov
mov
cmp
in
stc
push
rolb
lcall
push
push
test
jns
adc
es
add
popa
or
jp
das
leave
iret
xchg
loop
dec
das
adc
and
push
cmp
loopne
inc
into
pop
sub
pop
jno
in
cmpsb
sbb
jb
sbb
cmp
outsb
rol
jo
and
lock
sahf
loopne
mov
xor
sbb
popf
repnz
jp
mov
xchg
adc
fldl
ja
mov
loopne
outsb
sub
in
mov
jmp
xlat
push
imul
xor
xchg
xchg
mov
jl
push
jl
jl
push
fisubs
lods
jne
movsb
and
movsb
xchg
mov
mov
add
cmc
mov
jb
jl
xchg
aas
es
stc
ljmp
xchg
out
ret
push
push
xchg
fwait
inc
in
test
pop
cmpb
jbe
outsb
ret
mov
dec
daa
je
add
xchg
xchg
mov
jmp
jne
fpatan
inc
push
push
adc
add
jne
push
sbb
lcall
repnz
adc
and
mov
or
mov
leave
fs
outsb
inc
fisttpll
push
rolb
insb
dec
or
frstor
jae
imul
or
sbb
push
mov
and
daa
lahf
mov
or
stos
ficoms
clc
in
and
mov
push
jl
cltd
cmp
ret
mov
rorl
add
xor
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
cmc
arpl
add
jl
jl
enter
pop
fisttpl
addl
add
dec
cmpsb
xlat
rcrl
sbbl
lds
mov
xchg
iret
jecxz
lea
test
push
cmpsb
jno
sub
inc
rcrl
sbb
cvtps2pi
mov
into
ss
adc
js
or
insb
pusha
cmp
lods
jne
pop
mov
mov
pop
pop
dec
ret
pmaxsw
or
in
dec
jne
les
loopne
sbb
push
lret
adc
jns
or
sbb
in
scas
dec
bound
pop
out
adc
push
lret
inc
leave
insl
popa
jb
test
dec
jne
adc
flds
enter
sbb
mov
push
fcoms
lea
stos
insb
je
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
div
out
add
add
jl
jl
push
loopne
jmp
or
hlt
fisttpl
mov
mov
adc
imull
pusha
repz
repz
rcrb
xchg
inc
and
fisubrs
rclb
push
mov
pop
mov
sbb
adc
xchg
pop
daa
and
repz
in
popf
test
arpl
sub
pop
dec
mov
mov
loopne
lods
push
loopne
sbb
xlat
pop
mov
lcall
jbe
mov
out
adc
mov
aam
mov
ljmp
filds
inc
push
fsubs
push
movsb
lods
add
cli
cld
lcall
cmp
jp
popf
xor
insl
jl
enter
pop
dec
jbe
lods
aad
mov
inc
push
aas
imul
add
cmp
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
push
mov
mov
push
jl
jl
repz
clc
out
jg
lods
lock
fstpt
jb
in
sub
push
dec
sbb
cmpsb
data16
dec
jbe
push
sub
aaa
bound
xchg
mov
mov
loopne
ds
and
sbb
mov
xor
imul
cli
pop
mov
gs
lret
mov
push
aad
popf
fbstp
dec
test
xchg
xor
cmp
sub
or
lods
ret
into
clc
adc
aaa
push
jno
ret
int3
and
repz
mov
add
inc
jne
rclb
mov
adc
mov
inc
scas
mov
inc
addr16
fcoms
fidivs
push
mov
jno,pn
dec
cltd
sub
xchg
lcall
int
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
xchg
xor
jl
pop
jl
jl
call
call
push
xchg
jae
pop
inc
pop
gs
rcrb
seta
sbb
ss
popf
push
sbb
mov
dec
xor
xchg
pop
add
roll
lret
add
pop
nop/reserved
mov
jle
pop
add
sbb
jle
mov
fidivl
arpl
cmp
inc
cmpsl
into
add
or
dec
push
fs
add
cmpsl
pop
lock
mov
lahf
inc
in
int3
xchg
xor
xchg
xor
inc
mov
pop
and
fsubs
add
adc
cmp
cmpsl
dec
data16
shll
stos
addr16
cld
add
jmp
mov
cmpl
and
lea
mov
mov
xchg
xor
cmp
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
xchg
and
or
test
sub
sbb
pop
mov
pop
sub
pushl
pop
or
mov
sub
je
xchg
dec
ljmp
adc
cmp
adc
repz
aas
pop
or
mov
jne
mov
adc
arpl
inc
and
les
xor
dec
jns
mov
fdiv
into
mov
dec
daa
inc
cmp
mov
loope
pushl
inc
scas
and
jnp
or
popa
or
rorb
and
imul
add
cmp
lods
inc
pushf
cs
gs
xchg
leave
fistpll
je
je
aad
iret
xchg
int3
bound
sub
jmp
add
andl
jg
and
imul
jl
jl
jl
insb
pop
cmpsl
cmpsl
push
jbe
jge
enter
push
cmc
xlat
mov
bound
jl
and
cwtl
xor
clc
cmp
jle
lods
lea
cwtl
push
lcall
dec
sbb
rcl
ds
mov
jmp
sbb
cltd
aad
sub
push
dec
vmovmskps
xchg
and
dec
call
fcomps
jbe
clc
lods
lock
mov
and
lret
stc
mov
mov
shl
ljmp
aad
mov
inc
cmp
stos
cltd
insl
fcomip
shlb
sbb
sbb
push
mov
push
movsl
pop
aaa
push
clc
pop
std
adc
cltd
push
push
pop
repnz
rcrl
icebp
outsb
std
aad
sub
sub
sub
sub
cli
inc
rcll
sub
xor
mov
loopne
data16
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
pop
mov
adc
adc
xor
std
mov
dec
mov
jge
in
fmuls
mov
gs
xor
sub
or
mov
push
icebp
fldcw
imul
jo
mov
imul
or
xchg
imul
out
push
rcll
cltd
jp
imul
pop
test
mov
and
and
inc
dec
xor
and
mov
mov
out
cmpsb
cmp
xchg
jecxz
in
rorl
jmp
pop
mov
xchg
aam
gs
dec
shr
sub
push
js
inc
fnstsw
mov
cmp
mov
inc
dec
cmp
jne
inc
sbb
push
cmpsl
das
mov
or
push
inc
sbb
cld
test
and
pop
jp
ficomps
xor
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
mov
jl
jl
jl
jmp
xor
testb
fs
insb
dec
dec
cmpb
dec
mov
and
lcall
sahf
shlb
outsb
cmp
cmp
lods
cmc
jge
mov
mov
cmpsl
mov
push
int3
cs
scas
mov
sub
cli
sbb
pop
cmp
gs
push
js
cmp
bnd
pop
push
inc
mov
cltd
jbe
std
mov
out
push
mov
push
ljmp
rolb
shrl
dec
push
test
stos
dec
mov
and
test
cwtl
clc
mov
sar
iret
jns
inc
insb
push
xchg
sub
or
inc
leave
rolb
cltd
mov
imul
lds
lds
push
pusha
into
es
cld
shll
mov
lds
push
xchg
pushf
mov
mov
ret
sub
sub
movl
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
pop
inc
test
sbb
jl
jl
add
jb
cmp
repz
cwtl
pusha
lods
xchg
in
pushf
inc
test
add
mov
mov
outsb
dec
std
shrb
mov
imul
lret
adc
clc
xorl
cmpsl
xchg
lods
sbb
mov
mov
pop
jge
aam
push
ja
inc
xor
stos
push
cmpsb
xor
push
std
xchg
add
add
add
mov
cwtl
push
xchg
mov
dec
ds
mov
cmp
stc
daa
cmp
jb
push
ja
shrb
add
stc
gs
adc
mov
cmp
scas
lret
out
addr16
cmpsl
pop
jb
adc
scas
sbb
xchg
mov
xchg
dec
hlt
inc
mov
into
ljmp
adc
sub
nop
jo
das
aad
jecxz
inc
imul
sahf
jb
add
add
add
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
pop
push
rcrl
jl
push
jl
jl
mov
test
sbb
cmp
adc
test
fs
ss
xor
xor
test
fnsave
pop
enter
pop
popa
cmp
adc
cwtl
inc
sub
push
lock
dec
jp
mov
lret
std
inc
loop
dec
aas
pop
xor
fnstenv
add
jne
mov
push
out
push
mov
adcl
fisttpll
jno
adc
lret
push
add
cmp
into
sub
jp
mov
adcl
movntps
jo
pop
xor
movsl
xchg
stc
dec
testl
xor
xchg
test
mov
push
idiv
ja
std
outsl
pop
cmpsl
repz
mov
pop
xlat
cmc
sub
jle
cmp
cli
repz
mov
test
add
add
inc
cmp
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
sbb
jl
jl
daa
ret
outsl
pop
add
lcall
in
jbe
fucomip
loope
mov
mov
xorl
movsl
jne
sub
jnp
mov
lahf
imul
adc
sarl
jl
push
or
mov
or
out
ljmp
sub
add
xchg
xchg
sbb
test
into
jb
lcall
push
xchg
dec
fildll
in
fs
imul
mov
add
push
mov
int
insb
and
xchg
testb
mov
add
lea
push
push
adcl
out
pop
mov
aas
xor
add
push
test
mov
jmp
out
adc
fidivl
dec
call
dec
jne
add
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
fsubl
ja
push
sbb
jl
jl
inc
adcl
mov
mov
fs
rcr
popl
fbld
in
fldenv
icebp
cmpsl
sti
cwtl
xchg
jne
jnp
push
inc
xor
test
adc
mov
int3
pop
sub
xor
pop
jle
repnz
imul
movsb
iret
cltd
enter
sbb
xchg
add
xchg
jmp
adc
cmp
pusha
xchg
jnp
xor
lcall
iret
adc
shrl
xchg
cli
mov
push
shr
xchg
add
aad
std
rorl
jae
stos
ds
arpl
xchg
xor
cltd
adc
sub
ret
es
adc
pop
insb
rol
dec
cmp
negl
sbb
adc
push
xchg
pop
dec
mov
sbbl
mov
xor
jmp
sbb
mov
std
adc
push
jl
jl
jl
sub
mul
mov
mov
cmpb
dec
push
ljmp
es
jno
push
cmp
add
ror
data16
ds
movsb
shll
call
pop
out
pop
loope
sbb
mov
mov
rclb
sbbl
nop
leave
leave
test
pmulhuw
cmp
mov
jp
test
lcall
jg
rorb
sbb
pushf
dec
pop
push
mov
dec
je
mov
dec
add
sbb
outsl
lcall
ret
jp
mov
cmp
add
fisubs
xor
aaa
shlb
orl
enter
dec
sub
dec
arpl
shll
loope
pop
push
iret
fs
xor
mov
arpl
cmc
fisttpl
sub
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
sub
jl
push
jl
jl
mov
xor
sub
in
xchg
loop
imul
pop
sbb
rcrb
lret
push
xor
mov
jge
sti
rcrl
xchg
imul
mov
into
mov
in
ror
leave
or
ds
add
sub
sbbb
stos
mov
insb
stc
addr16
xchg
in
pop
sbb
dec
jp
jge
xchg
fisttpl
fsts
jnp
out
or
out
sbb
jmp
mov
sbb
or
adc
adcb
mov
pop
cmp
lods
outsl
out
cmp
xor
dec
xorl
popa
call
lock
popa
pusha
fmuls
int3
mov
xchg
cmp
rol
pop
xor
mov
punpckhdq
std
lcall
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
pushf
daa
cmp
or
es
dec
les
push
jge
inc
pop
cmpsl
mov
aad
jne
inc
inc
mov
push
add
cmp
repz
pushf
leave
cs
adc
cmp
mov
ljmp
adc
sub
sub
test
add
cmpsl
dec
jl
int3
arpl
xor
inc
insl
imul
and
push
adc
xchg
xchg
sarb
or
pop
jnp
bound
sti
iret
loopne
mov
jmp
enter
je
gs
xchg
lret
cmpsl
scas
cmp
lret
repz
jmp
or
fadd
pop
popa
into
ret
ss
es
lods
push
inc
mov
leave
pushf
pop
sub
ss
pop
jmp
dec
or
jmp
or
divb
rorl
add
imul
test
xchg
lret
fstl
pop
jl
push
jl
jl
mov
mov
xchg
cmp
mov
mul
cmp
sbb
addl
fimuls
lret
fnstsw
shrb
ljmp
inc
inc
and
cmpsl
rcll
mov
sub
cmc
repnz
jns
data16
in
xor
xchg
lods
clc
sbb
mov
shll
mov
xchg
push
cs
add
aaa
mov
enter
push
or
outsb
and
jne
dec
push
push
jno
mov
cmp
jg
jnp
sbbl
scas
fbstp
pop
cs
mov
pusha
mov
ret
fcoml
sbb
or
and
lods
cmpsb
ja
mov
repz
test
mov
cmp
and
or
pop
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
insb
sub
xchg
jl
adc
jl
ror
jge
push
pop
nop
into
inc
push
cmp
mov
or
push
jge
sub
imul
test
insl
and
mov
jae
sbb
and
decb
loopne
lods
sub
in
pop
lret
mov
mov
jnp
dec
in
mov
or
ja
inc
xor
pop
xchg
scas
jmp
pop
inc
adc
or
xor
dec
cmp
shrb
xchg
adc
jo
mov
sbb
sub
inc
leave
pop
cmp
lcall
adcl
mov
repnz
lahf
dec
xor
repnz
cmpsb
hlt
jle
mov
icebp
lret
sbb
imul
mov
sti
push
push
and
xchg
test
dec
xor
add
jge
mov
pop
imul
xlat
jae
scas
xchg
push
push
pop
cmp
push
adc
mov
pop
stc
mov
repz
es
outsb
mov
adc
xor
dec
imul
pop
hlt
popa
jle
lea
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
dec
aaa
mov
jg
jl
insl
and
aas
adc
push
inc
inc
inc
scas
xchg
push
out
and
aad
mov
xorl
sbb
jge
cmc
inc
les
call
push
mov
and
stos
lods
aad
mov
call
jp
dec
cwtl
pop
mov
and
mov
sbb
imul
sub
dec
es
int3
mov
jle
vmaxps
and
jg
dec
scas
mov
dec
push
outsl
cltd
or
push
outsb
das
outsb
push
push
sub
push
mov
and
push
pop
ja
out
mov
jmp
popa
maxps
frstor
add
pop
sbb
add
daa
es
sti
mov
call
jge
scas
out
or
in
or
scas
stos
push
inc
sub
push
call
mov
ja
jns
mov
lock
aam
inc
xchg
cwtl
iret
xor
shrb
adc
lret
les
mov
or
adc
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
mov
adc
jl
mov
rcll
and
mov
out
dec
sti
dec
xchg
nop
and
mov
push
sbbb
pop
fnstsw
nop
or
and
sbb
dec
ds
cmp
fdivrs
pop
mov
ficoml
lret
in
add
cmpsl
je
loopne
lret
lods
mov
sahf
fs
mov
gs
dec
lcall
shll
rcl
lods
or
loopne
js
pop
pop
sub
mov
mov
scas
jno
imul
inc
jnp
push
pop
pop
and
js
rorb
cmpsl
sub
iret
xchg
and
std
ja
cli
xorl
flds
push
outsb
and
dec
test
ds
xchg
popa
ja
cmpl
es
mov
int
sar
cmpsl
rorb
dec
mov
jae
xchg
cwtl
dec
wrmsr
pop
add
mov
fdivrl
jecxz
xchg
pop
test
or
xchg
jmp
xor
enter
sbb
add
add
xchg
imul
les
jmp
xlat
or
jl
adc
jl
adc
jnp
aas
cmpsb
adc
stos
cli
mov
pop
insb
scas
jne
mov
repnz
ret
xor
inc
cmp
scas
adc
inc
lock
sbb
mov
imul
cmpsb
mov
and
mov
pop
pop
ja
in
cmpsl
adc
xlat
mov
xchg
out
outsl
mov
jbe
xchg
aas
lcall
movsb
or
ret
es
jg
jae
fldcw
adc
pop
push
call
repz
sbb
repnz
pop
push
sub
cmpsl
fistps
jae
inc
iret
pop
dec
sbb
cmp
cmc
cltd
mov
sbb
adc
dec
xor
es
jge
pusha
xchg
dec
rclb
push
xchg
mov
xor
out
push
inc
pop
pop
add
inc
fwait
andl
setge
inc
insb
movsl
in
pop
jnp
mov
jne
adc
and
ficoms
and
dec
xlat
cld
sub
mov
fmull
pop
ret
push
mov
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
dec
sub
jl
aaa
jg
jl
fisttpl
xchg
mov
cmp
xor
jg
jb
into
scas
imulb
cmp
rcr
nop
mov
test
ror
mov
repz
adc
jmp
rorl
pop
or
hlt
gs
iret
fs
call
mov
std
lret
and
shll
sub
lcall
aad
fists
and
test
push
mov
iret
mov
cs
cli
nop
fdivrs
lea
arpl
pop
iret
lods
lods
int3
out
movsl
adcb
aad
inc
lcall
sub
jo
mov
push
push
enter
xchg
cmpsb
and
mov
or
scas
sarb
xor
mov
xchg
int3
mov
mov
in
mov
sti
scas
and
push
mov
lret
mov
std
les
je
mov
mov
in
movsl
inc
imul
pop
aad
cmpl
loope
dec
adc
mov
inc
mov
mov
dec
loopne
push
xor
pop
stc
add
pop
mov
js
push
popf
mov
push
xor
cmp
cwtl
nop
into
imul
sbb
mov
not
mov
mov
mov
sbbl
mov
mov
sub
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
int
divb
mov
push
lahf
adc
push
cli
nop
add
add
push
xor
nop
fidivs
add
adc
les
mov
lods
lods
mov
js
sbb
jmp
jecxz
fistpll
dec
pop
dec
xor
jnp
mov
inc
dec
jg
movsb
sti
insl
and
test
xchg
fcomp
jbe
jle
ret
push
dec
insb
dec
push
inc
push
pop
adc
lret
cmp
rcr
mov
jb
and
arpl
stos
lea
push
push
jae
jg
or
fstps
pushf
jb
or
lret
ret
test
mov
cmp
mov
xchg
jmp
leavew
push
xchg
jp
push
xchg
outsb
repnz
pusha
xlat
jle
movsl
push
mov
les
or
add
xorl
movsl
push
std
aaa
mov
push
or
popa
mov
in
incl
and
mov
call
ss
subl
and
jae
imul
add
xor
fdivrp
aaa
ds
popa
pop
outsl
push
cmpsl
test
mov
mov
cmpsb
lret
mov
aaa
xchg
or
sbb
mov
sbbl
jmp
jno
xlat
sti
sti
std
add
mov
jg
sub
aaa
jg
jl
add
sub
clc
push
jmp
xchg
cmc
or
add
loop
std
mov
aaa
lea
mov
mov
xor
fbstp
and
das
movsl
mov
jb
mov
fucomp
adc
inc
adc
shl
out
test
jne
or
mov
jns
aas
loope
maxps
dec
push
sti
push
xorb
dec
jg
es
int3
shlb
scas
and
jle
jl
mov
int3
out
gs
divb
sub
insl
cmp
loop
lret
repz
cmpsb
cwtl
pop
pop
inc
hlt
dec
jp
mov
das
cltd
ljmp
mov
aaa
xor
insl
inc
jge
mov
inc
ljmp
mov
push
sub
cmc
stos
jns
aaa
daa
fsub
or
mov
push
out
adc
sub
sbb
movsl
js,pn
pop
inc
sbb
pop
loopne
lods
cmp
adcb
insb
ficoml
xchg
sub
lods
xor
cmc
lds
xchg
mov
ret
les
fimuls
pop
mov
mov
pop
int
dec
mov
std
xchg
sbb
inc
out
iret
icebp
push
lea
mov
jno
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
fdivrl
jl
fdivrs
jl
add
jmp
rcll
push
test
fcomp
xchg
mov
mov
dec
lret
pop
and
adc
aas
jne
sbbl
push
bswap
scas
or
in
int
js
loopne
out
xor
sbb
fs
xchg
or
dec
dec
js
and
fsubl
fiaddl
leave
mov
test
fadds
nop
jo
dec
cmp
sub
setnp
jne
daa
push
pushf
and
mov
push
fidivrl
sub
fisubl
sub
aas
mov
test
mov
in
addr16
push
mov
xor
jp
mov
jmp
push
aam
jne
add
xor
mov
aam
mov
adc
push
adc
adc
ret
add
adc
mov
cmp
push
stos
dec
sti
sbb
push
mov
sub
add
dec
push
out
mov
adc
mov
cmp
mulb
push
lods
in
cmp
js
addr16
cmp
or
insb
xchg
push
call
sub
lods
imull
push
pop
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
aas
jge
mov
push
rcrl
and
adc
cmp
pop
hlt
mov
fdivrs
aaa
mov
jmp
cmpsl
lahf
push
in
lret
out
sbb
inc
xchg
insb
test
mov
xlat
into
daa
aad
mov
insb
sbb
or
ja
xor
insb
sbb
mov
ret
mov
loop
popf
and
data16
fcom
jb
or
mov
mov
lcall
lds
push
xor
adc
mov
loope
mov
jl
mov
shll
adc
and
push
lahf
or
dec
jl
in
pop
fdivs
and
outsl
ds
andb
cmp
ljmp
shlb
adc
or
out
sti
clc
shlb
sarl
jb
cmp
jae
insl
fsubrs
movsl
cmp
into
ja
add
jb
ja
pop
aam
push
lret
ret
test
adc
das
cmp
ss
andps
push
rolb
sub
cld
ds
lret
cmp
jp
dec
loopne
stos
dec
mov
shld
adc
push
sbbl
and
scas
jmp
mov
jmp
mov
stc
mov
pop
jl
icebp
test
jg
jl
mov
test
pop
dec
dec
scas
out
pop
xor
adc
cmpsl
jo
mov
mov
pop
les
cmp
incb
repnz
adc
test
imul
mov
shl
sub
in
hlt
out
pop
addr16
dec
pop
fwait
xor
stos
jle
jg
push
mov
mov
data16
pusha
lea
push
sub
pushf
popf
repnz
aam
xchg
jmp
pusha
push
cmp
pushf
pusha
subb
cmp
push
jo
adc
imul
jae
xchg
sti
mov
out
popf
out
xor
xor
lret
aam
ds
iret
mov
js
daa
adc
pop
mov
shll
fwait
or
sahf
add
mov
jl
mov
dec
sbb
add
mov
xor
imul
mov
pop
pop
mov
shrl
cmp
popf
dec
mov
inc
add
pop
xchg
aas
sbb
inc
xlat
cltd
dec
sti
pop
pop
out
adc
pop
mov
std
sbb
mov
test
lods
arpl
inc
adc
or
addr16
jge
int
pushf
addr16
repnz
js
or
jnp
loope
adcl
sbb
call
inc
or
inc
cld
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
fimuls
fdivrs
jl
and
mov
pop
outsb
push
cmc
loope
xor
xchg
lock
dec
ja
and
js
dec
ljmp
dec
or
xchg
fsubr
jno
movsb
and
mov
test
or
mov
movsl
std
repnz
pop
inc
jge
dec
sbb
add
sahf
xor
push
adc
bound
pop
ret
mov
pop
clc
jbe
pop
inc
adc
outsl
cmp
scas
adc
dec
mov
sub
push
loop
bound
repz
les
jle
dec
lret
cmc
mov
fstpt
xor
adc
in
out
push
mov
out
sbb
xchg
lods
fs
out
insl
bound
repnz
pop
int
push
push
sub
mov
fistl
and
inc
imul
add
inc
and
int3
shll
mov
movaps
lds
xchg
and
rcrl
clc
mov
outsb
out
pop
pop
dec
and
push
mov
push
loope
pop
sub
in
lea
adc
jns
and
adc
cmp
decb
pop
outsl
sti
mov
jmp
lods
fs
and
iret
das
sti
popf
push
xlat
push
mov
cmp
mov
je
xor
add
mov
jmp
stos
adc
mov
mov
jne
out
sub
jl
jg
jl
mov
mov
fldl
ret
pop
xor
lock
sub
add
mov
sub
lcall
sbb
dec
lahf
call
dec
cmpsb
incb
cmp
fsubrs
and
les
loopne
aad
xchg
or
in
mov
leave
pop
hlt
stos
adc
lds
dec
dec
test
pop
xchg
xchg
cmp
outsb
jge
mov
cwtl
pop
sbbb
mov
adcb
mov
cmp
ss
xchg
jge
sub
imul
xor
shl
pushf
dec
pop
nop
push
lcall
or
and
dec
push
insl
pop
and
jnp
mov
sbb
mov
dec
mov
fisttps
pushaw
jb
or
fldcw
clc
dec
sub
pop
dec
nop
pushf
lret
jns
push
in
enter
pop
clc
outsl
pushf
or
cmp
cmp
mov
adc
mov
xchg
aad
in
mov
mov
or
enter
in
and
in
stos
ds
fcomp
mov
pop
jne
mov
mov
inc
loop
mov
add
scas
shr
add
add
sub
imul
cs
das
jl
fdivrs
jl
rcrl
cmpb
add
idiv
sbb
xchg
mov
push
ja
cmpsl
imul
in
pop
fldz
mov
out
pusha
mov
out
scas
mov
out
les
sub
mov
and
sub
les
jae
inc
fildll
push
test
fstp
push
insb
pop
sub
cmp
cld
pusha
cli
push
insl
xchg
lods
xchg
dec
idivb
aas
pop
or
mov
sbbb
rclb
lock
ret
shrb
dec
and
mov
lock
mov
fdivp
loope
lahf
cmp
loopne
sub
daa
stos
and
inc
jp
sub
lods
dec
sbb
and
push
sti
add
xchg
xchg
dec
mov
lods
lret
pushf
mov
stos
pop
shll
mov
imull
jns
int3
inc
icebp
daa
ret
or
xor
sub
imulb
loope
adc
sbb
push
jecxz
xchg
dec
loop
mov
lret
enter
pop
and
pushf
and
out
aad
add
mov
or
rorl
ret
cmpsb
adc
adc
cmp
mov
add
adc
mov
outsl
add
adc
fsubl
sub
mov
mov
pop
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
and
add
aad
mov
push
jbe
xor
adc
loopne
mov
ret
pop
mov
fimull
jo
add
push
xchg
mov
lret
xlat
test
je
push
movsl
popa
lret
test
scas
lahf
outsb
dec
xchg
jne
notb
xor
outsb
gs
shll
and
ljmp
out
test
sbb
adc
rorl
in
clc
stos
rorb
int
lret
mov
cs
lea
or
imul
jg
xchg
jl
jnp
sub
ret
fidivrl
ds
xorb
push
nop
rcrl
add
test
sbb
lahf
sub
repnz
cwtl
popa
dec
shlb
stc
popa
and
iret
lret
push
xchg
pop
sbb
imul
xor
fsubl
popf
dec
insl
in
pop
out
add
and
daa
pop
sbbb
dec
ret
int3
pop
sbb
inc
mov
and
in
arpl
das
push
mov
push
xchg
inc
xchg
es
sbb
xor
outsl
cwtl
xor
pop
xchg
xchg
xor
pop
xor
sbb
inc
movsb
sub
sbb
std
mov
xchg
xlat
cmp
push
or
sbb
test
and
cmp
into
push
add
cmp
movsl
mov
add
movsl
xchg
inc
add
scas
shl
fidivrs
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
and
outsb
popf
andl
jl
jg
jl
sbb
inc
movsl
pop
addr16
push
adc
add
sbbb
pop
adc
aam
test
pop
mov
sub
es
movsb
add
sub
fiaddl
push
xchg
insb
fwait
addr16
repz
push
ja
and
cmp
push
int3
mov
out
sbb
xor
cld
lcall
xor
mov
cmp
rorl
ja
push
lock
ficompl
fdivl
push
sub
mov
cmp
cltd
lds
cmp
inc
push
ljmp
push
aad
cmpb
mov
stos
jbe
mov
mov
mov
out
pop
jnp
cmp
das
xlat
cltd
cli
adc
xchg
loopne
mov
movsl
and
pop
jl
loopne
add
daa
pusha
lods
cmp
xor
jno
mov
out
mov
lods
test
out
push
and
push
sahf
or
sbb
xorps
clc
push
xchg
incl
jne
sub
pusha
addr16
jl
jle
xchg
pop
cwtl
imul
dec
je
xlat
adc
mulb
mov
dec
push
aas
cmp
sub
xchg
mov
mov
xor
movzbl
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
sub
jl
call
ds
sub
out
lret
cmp
aas
popa
aas
in
sbb
imul
jno
pushw
adc
lods
add
addr16
mov
or
jp
push
pushf
push
pop
pop
cmp
je
push
repz
jp
test
in
movsb
out
arpl
or
jge
xchg
jle
scas
div
sti
insl
xchg
sub
add
fwait
arpl
test
pop
add
test
cmp
call
rcll
mov
jmp
outsb
xchg
and
fs
mov
push
fcomp
sbb
int3
inc
addb
lods
mov
push
andl
ss
mov
sub
sbb
fisubs
push
mov
out
ds
jns
jo
imul
subl
dec
fisttps
inc
adc
or
ds
sahf
adc
inc
add
push
pop
push
stos
add
mov
jo
in
imul
rcrl
cmp
and
aam
loopne
pop
mov
imul
ror
cltd
xchg
or
scas
add
push
fcmovu
test
call
data16
clc
sbb
push
call
cmp
push
mov
and
ficomps
pop
jo
add
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
cmpsl
lods
sahf
jmp
jl
call
sub
pop
mov
pop
loopne
jl
xchg
or
mov
xchg
or
mov
mov
pop
je
cmpl
stc
add
add
leave
jo,pt
adc
mov
pop
daa
mov
xchg
outsl
insl
push
outsb
clc
add
sbb
xchg
orb
jo
dec
dec
fwait
arpl
popf
pusha
das
sti
jnp
sbb
call
xor
dec
mov
jno
mov
adc
push
cmp
push
fsubrs
cmp
andb
mov
mov
mov
pop
fistpll
cmp
into
and
mov
jbe
push
lea
mov
fldt
mov
add
fistps
test
cltd
leave
fidivrl
jle
icebp
imul
push
sbb
push
mov
repz
and
cmp
inc
stc
into
jp
jbe
jns
pop
add
add
or
mov
pop
fsubs
mov
jp
push
mov
dec
jnp
aam
cld
inc
pop
xchg
and
adc
push
loopne
rclb
ja
out
pop
inc
lcall
inc
and
ret
pushf
push
cmp
cmp
dec
arpl
pop
inc
les
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
and
jnp
inc
and
jl
jg
jl
push
sbb
stos
jmp
repnz
mov
lcall
sbb
adc
rcr
inc
aam
leave
jmp
pop
dec
imul
das
mov
mov
jno
pop
push
push
fcmovb
dec
out
ljmp
insb
sbb
icebp
xchg
mov
je
movsb
or
dec
dec
jecxz
int
aad
cmp
add
sbb
xchg
pop
lret
jecxz
icebp
aad
jbe
popf
lods
mov
mov
call
inc
lods
fdivp
fwait
xchg
divl
inc
mov
jle
je
xor
and
mov
xchg
mov
mov
jne
ret
fidivrs
push
test
nop
aaa
push
jmp
out
xchg
mov
adc
xor
iret
pop
add
rcll
pop
addb
stos
jg
add
iret
nop
mov
loopne
rclb
xor
push
xor
stos
push
cs
es
loop
std
push
in
insb
scas
mov
push
inc
lods
pop
scas
popf
xchg
popa
sbb
shlb
and
mov
repz
aam
icebp
mov
push
sub
push
imul
or
icebp
inc
test
jno
jo
pop
das
jmp
loopne
subb
push
ror
cld
or
cmp
mov
rorb
lea
push
mov
shrl
mov
jmp
dec
cli
sbb
test
outsb
jp
out
shr
les
xor
jl
call
imul
xor
incb
in
idiv
xchg
cltd
dec
in
rcrl
or
xchg
outsb
idivl
add
fucomi
xor
mov
sub
dec
or
mov
out
mov
shrb
imul
into
test
cmp
mov
jmp
fwait
nop
je
das
insb
mov
hlt
outsb
dec
addr16
loopne
rorl
add
data16
inc
je
mov
das
popa
cmp
fchs
jmp
add
jp
sbb
outsl
cmp
pop
movsb
mov
rorl
pop
fldcw
ss
jp
jb
cmp
adc
add
fucomi
es
shrb
pop
adc
enter
add
sub
mov
imul
faddl
adc
inc
clc
mov
lcall
popa
aam
mov
cmpsl
sbb
adc
outsl
dec
mov
sbb
pop
int
popf
cmp
movsl
ss
bound
and
xlat
lss
repnz
dec
cld
aad
jmp
inc
adc
das
mov
aam
out
pop
leave
cli
outsb
push
ret
xchg
push
mov
and
cmp
movl
bound
sub
mov
mov
add
or
xor
mov
add
jmp
push
mov
aad
sbb
xchg
scas
cmp
jg
jl
in
add
aam
repz
es
jo
imull
pop
pop
adc
inc
pop
orl
call
rol
out
jecxz
cmp
mov
mov
jecxz
and
inc
xor
lret
or
sub
rclw
addr16
ficompl
es
into
sbbl
pop
jns
cmp
mov
mov
in
cmp
jne
dec
mov
mov
loope
or
sub
outsb
xor
add
fisubrl
xchg
mov
adc
xlat
inc
sub
mov
inc
imul
xor
dec
mov
sub
inc
rolb
imul
add
out
dec
ja
xor
adc
test
xchg
imul
cmpsl
inc
pop
sbb
xchg
inc
inc
insl
je
das
jle
iret
inc
mov
lods
comiss
add
jnp
sbb
testl
xchg
mov
xchg
or
sub
mov
xor
xchg
push
shl
ja
sub
out
or
out
fistpl
push
or
xorb
adcl
or
int3
pop
mov
jo
sbb
pop
push
movsb
sub
jne
xchg
lcall
popa
sbb
pop
ja
decb
call
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
addr16
pop
lahf
sbb
jl
call
lods
lds
fstps
test
and
push
jl
pop
cwtl
xchg
lcall
mov
bound
rorb
mov
mov
insb
mov
lret
aas
js
cmp
inc
out
in
in
xor
adc
fsubrs
mov
les
push
xlat
shl
negb
icebp
push
ret
cmp
adc
cmp
add
xor
jle
into
push
add
mov
sbb
mov
je
jo
push
int
pop
add
and
inc
sahf
mov
cltd
ret
je
or
add
sub
imul
jb
js
ds
imul
out
pushf
pop
push
and
inc
ss
push
mov
repnz
add
jae
mov
pop
call
mov
jg
mov
leave
fs
je
test
cmpsl
aam
mov
push
outsb
ret
aas
jl
jmp
push
cld
jnp
test
aas
fisubs
mov
mov
fistps
rol
mov
dec
js
jo
test
and
enter
mov
sbb
xchg
leave
sbb
lods
or
jne
push
iret
xor
cmp
mov
push
shll
jb
adc
testl
jb
add
fmull
call
rorl
add
call
add
jge
mov
icebp
leave
jnp
idivl
jl
call
pop
nop
add
arpl
mov
mov
pusha
pop
pop
mov
add
out
jg
mov
mov
mov
dec
out
rcrl
divl
adc
pop
push
test
xlat
repnz
sbb
les
js
repz
cli
notb
xor
xchg
push
cmp
push
mov
jge
sub
popa
sub
cld
mov
sub
enter
std
jo
negb
pop
shrl
dec
add
bound
sub
mov
pop
addr16
out
lods
xlat
xor
ss
loopne
and
daa
pop
xchg
xchg
movsb
pop
xor
cs
and
mov
loop
mov
out
push
xchg
imull
movsb
lret
push
xlat
movsb
nop
or
sub
sub
and
mov
mov
ss
dec
and
mov
mov
mov
jmp
sar
mov
pop
ror
mov
daa
mov
jnp
stos
cmp
mov
xor
sar
jg
fildl
jnp
inc
cwtl
and
inc
dec
sbb
ds
jg
insl
gs
aad
loopne
lret
jmp
dec
xchg
xor
and
out
mov
xchg
and
pop
jecxz
inc
or
sub
xlat
ja
ja
xor
movsl
xchg
es
adc
adc
test
add
ret
out
std
cli
cmp
mov
pop
and
call
inc
iret
sbb
jp
inc
movsl
sub
push
jbe
mov
addr16
mov
lcall
mov
adc
inc
rcl
jbe
cmpsb
mov
sbb
pop
std
sahf
and
and
pop
cmp
or
out
mov
adc
out
dec
and
adc
sub
push
mov
push
sub
bound
mov
pop
psubsb
pop
rcrl
mov
test
xor
jne
lods
jg
out
and
fldt
lea
sub
xchg
cmp
mov
shld
fs
pop
jo
lret
mov
cmpsl
mov
test
in
push
lea
arpl
pop
jg
mov
iret
cmp
dec
jmp
sub
sbb
xor
out
cmp
imul
movsb
lock
dec
or
push
adc
cli
sub
sbb
pushf
pop
and
ja
push
cli
aaa
adc
mov
out
ficomps
add
loopne
mov
jecxz
inc
out
fcompl
dec
hlt
xchg
mov
dec
movsb
adc
je
xchg
xlat
scas
dec
ds
or
lahf
mov
int
fiaddl
call
scas
pusha
aad
inc
pusha
mov
dec
test
stos
or
xchg
xor
jmp
sub
sti
je
out
sub
mov
inc
fistpll
jl
call
or
xlat
pusha
aas
inc
sub
movsl
and
dec
mov
cld
xchg
popf
jns
add
jo
iret
repnz
pusha
adc
inc
cmp
sub
iret
iret
push
mov
in
or
loopne
mov
push
mov
icebp
fistps
insb
mov
mov
or
or
and
pop
movsb
ja
loopne
dec
pop
mov
std
fisttps
add
js
aaa
sub
std
test
mov
aam
shlb
lock
or
enter
daa
mov
or
bound
ret
jg
movsb
les
xor
and
and
or
push
hlt
mov
scas
in
stos
add
mov
ja
cli
inc
fs
and
jns
shll
loope
pop
mov
and
jno
call
add
dec
jo
lds
xor
jo
insl
push
and
and
jo
mov
bound
scas
mov
pop
imul
lock
xchg
sti
das
xor
out
mov
mov
pop
je
ret
fs
negb
cs
std
ss
rol
stc
adc
adc
jns
outsl
pusha
pop
dec
xchg
jecxz
pop
mov
inc
in
in
roll
sbb
divb
adcl
lahf
into
clc
jle
fsubl
scas
add
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
dec
xchg
mov
dec
jl,pt
call
es
repz
iret
out
scas
or
adc
xchg
nop
adc
mov
out
lods
loop
pop
dec
addr16
jb
add
mov
inc
test
fs
adc
add
xor
add
les
ljmp
mov
inc
cli
inc
mov
lock
loopne
mov
push
xor
pop
cmp
pop
or
jmp
or
mov
xchg
push
inc
repnz
filds
add
movsb
lods
adc
push
add
jp
mov
ja
adc
imulb
stos
pusha
adc
add
pusha
xchg
ficoml
rol
js
or
add
inc
insb
xor
mov
pop
inc
iret
insb
jecxz
jmp
inc
out
mov
ret
sbb
movsl
jg
scas
xor
lock
xor
xlat
test
pop
repz
inc
cmpsl
xor
dec
cld
jnp
ja
jne
rcrl
clc
shr
lret
repz
nop
dec
or
movsl
ret
out
movsl
inc
dec
push
movsl
mov
or
mov
cld
cltd
lock
mov
insb
lds
xchg
sub
andb
mov
cld
sub
add
imul
ds
loopne
aam
or
stc
fsubp
pop
mov
inc
cmp
sarb
cmp
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
xlat
mov
jl
call
xchg
loop
sub
fnstcw
dec
xchg
push
cmpsb
sbb
jl
repnz
dec
jp
int3
test
in
mov
dec
fmuls
and
fwait
add
rcrb
ds
or
cltd
aaa
pop
inc
addr16
js
push
mov
bound
xchg
bound
fistpll
mov
outsl
imul
mov
gs
jmp
fs
aaa
sub
cmp
outsb
mov
cltd
xchg
push
insb
fcompl
adc
xchg
jg
into
jne
cmp
scas
insl
push
aad
mov
or
mov
jnp
xor
mov
mov
mov
push
add
test
dec
adc
insb
xchg
inc
ja
loopne
sbb
xchg
or
cmp
mov
movb
or
mov
pushf
mov
insb
std
out
add
in
mov
sbb
out
or
stos
cmp
scas
stos
or
sub
ficomps
lea
mov
bound
rcll
push
and
xor
loop
xchg
sub
xchg
mov
pop
push
daa
dec
jo
cmpsl
rclb
in
xor
pop
sbb
mov
loop
cmc
test
push
lahf
jecxz
pusha
pop
cld
or
dec
insl
or
mov
out
out
insb
nop
imul
add
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
add
jmp
idivl
mov
int3
mov
mov
popf
repz
loop
sub
jb
mov
into
insb
outsb
push
jae
sbb
sbb
lahf
ret
loopne
or
fadds
and
and
cltd
out
push
cmovle
jp
in
aas
inc
push
test
jmp
xor
dec
orl
xor
pop
push
test
jp
frstor
mov
adc
cmp
pushl
clc
sub
mov
dec
sahf
sub
test
xor
adc
mov
and
xchg
cmp
arpl
sbb
pop
stc
cli
xor
sub
mov
lcall
in
adc
stos
out
movsb
and
jnp
push
scas
inc
xor
pop
and
gs
sub
call
mov
mov
and
pop
push
sbb
mov
sbb
fs
mov
idivb
inc
hlt
enter
mov
ljmp
adc
js
jecxz
sub
inc
in
mov
push
dec
pop
out
mov
or
mov
ret
xor
adc
dec
push
xor
shlb
dec
xor
add
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
clc
fldl
xor
jl
xchg
cwtl
movsb
xlat
xor
mov
xchg
mov
mov
movsl
fbld
nop
dec
sub
movsl
pop
mov
popf
mov
lds
insb
std
inc
adc
mov
les
mov
test
dec
sahf
jno
divl
dec
pop
mov
xchg
pop
sbb
dec
cli
cmp
out
dec
jmp
jnp
lcall
xchg
cmc
data16
mov
enter
insl
in
test
add
pushf
jne
sub
jo
adc
jl
jo
mov
xor
pop
sub
pushf
out
test
push
mov
repnz
out
mov
jnp
pop
into
out
jae
inc
push
jae
pop
hlt
shlb
add
mov
jp
out
les
in
ficoms
inc
popa
das
cmp
inc
jmp
mov
in
mov
movsl
cmp
pop
push
in
fnstcw
xchg
mov
inc
mul
in
sub
dec
mov
imul
sti
inc
enter
das
out
jne
leave
mov
das
xor
sahf
pop
and
jecxz
es
mov
lds
jmp
or
lcall
sbb
fisttpll
bnd
pop
leave
ret
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
cmp
inc
add
ja
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
xchg
inc
add
dec
xor
jmp
add
sbb
add
mov
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
mov
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
mov
add
outsb
pop
add
rorl
in
stos
cmpsl
mov
pop
scas
jp
idivw
xchg
adc
popf
imul
scas
lcall
add
popf
cmp
daa
movsl
inc
pop
cmp
cmp
add
lds
mov
mov
bound
push
xchg
push
sbb
movsb
adc
or
mov
fdiv
adc
jecxz
aam
xorl
adc
addr16
or
cltd
enter
shlb
arpl
repnz
mov
and
jl
inc
call
dec
dec
push
outsb
pop
dec
cwtl
lea
adc
lea
int3
nop
and
mov
jp
mov
sbb
add
jle
pop
imul
out
xchg
daa
or
push
dec
sbb
and
or
inc
push
leave
inc
pushf
loopne
xor
sub
fmulp
pop
pop
push
mov
mov
pop
inc
lock
ds
adc
jecxz
pushf
mov
xlat
jno
cmp
and
pop
mov
dec
push
xor
cwtl
mov
call
xor
test
cmpsl
idivl
mov
jecxz
cmp
mov
iret
xchg
pushf
jecxz
or
popf
lds
mov
xchg
pop
repnz
sahf
push
or
cs
scas
push
inc
fwait
sub
pop
pop
repnz
rorl
add
inc
xchg
xchg
icebp
aam
mov
int
daa
shll
jb
jae
iret
pop
push
sar
lods
pop
lock
aas
ljmp
pop
or
push
cmp
rcr
arpl
sbb
or
mov
aam
mov
mov
ss
adc
fildll
sub
adc
jae
int
sub
cmpb
aaa
loop
fcomi
jne
add
sahf
repnz
fst
xchg
lods
jnp
notl
int3
ss
outsb
mov
outsl
fistpl
xchg
jno
adc
and
cmp
shrb
cmp
cmp
jns
xchg
andb
dec
mov
fnstenv
test
call
cs
push
xchg
outsl
stos
xchg
jb
repnz
adc
jnp
and
mov
cli
fwait
scas
loop
jne
push
mov
cltd
xchg
ret
xor
lock
and
push
es
outsb
cmp
les
inc
ljmp
fstpl
inc
outsl
lret
xchg
xorps
mov
push
ficompl
hlt
cmpsb
jns
mov
sub
dec
repnz
adc
push
jae
dec
imul
fimull
lcall
add
js
out
aad
in
or
inc
dec
les
cmp
sbb
fwait
dec
les
or
fs
adc
push
cmp
cmp
leave
sti
and
jo
clc
jle
test
xor
shrb
sbb
cli
pcmpgtb
adc
mov
or
jmp
ljmp
out
rcrl
or
cmp
xchg
or
sub
mov
jle
rclb
outsb
adc
or
dec
pop
jge
lcall
push
popf
adc
and
out
popa
sbb
aad
sar
into
pop
add
inc
dec
and
mov
je
inc
mov
xchg
push
test
jle
adcl
out
fstpt
stos
iret
sbb
adc
pusha
jge
jbe
aas
pusha
sbb
mov
fldl
push
fldcw
xchg
adc
pop
adc
leave
mov
test
mov
mov
sub
lahf
imul
lds
loop
std
orl
je
push
and
fs
push
scas
inc
dec
std
sbb
sub
inc
push
aad
xchg
sub
inc
loope
fwait
dec
sub
les
ret
stos
aas
ljmp
mov
inc
movsb
adc
xchg
xchg
pop
popf
out
jno
repnz
and
push
sbb
pop
inc
and
lods
daa
mov
mov
sub
adc
adc
adc
or
sub
pop
std
imul
mov
pop
and
clc
inc
and
rol
push
jle
leave
jmp
jp
jnp
mov
mov
movsl
or
xchg
xchg
cmc
pushf
ds
xor
fld
in
pop
cwtl
xchg
les
enter
dec
inc
das
imul
or
sub
inc
stc
or
adc
outsl
movsl
movsb
add
or
lods
and
icebp
mov
cmpsb
lret
xor
jnp
mov
mov
mov
push
cmp
popf
jg
punpcklwd
lahf
adc
sub
mov
repnz
jae
xor
mov
push
xchg
ja
int3
lods
movsb
sar
sub
dec
dec
sbbb
in
jl
push
pop
mov
pop
ss
rcrb
cwtl
jge
xor
ret
cwtl
mov
mov
dec
dec
pop
jl
sub
in
stc
inc
fstp
testl
jbe
jne
lods
xchg
fstps
pop
mov
adc
dec
lret
inc
das
xchg
out
adc
into
cld
in
iret
inc
movsb
inc
out
std
nop
cmp
sub
ja
movsl
pop
xlat
rorl
fisubrl
jns
call
loope
push
out
test
sbb
loop
cmp
jmp
dec
les
or
mov
ljmp
sub
push
cmp
insb
movsb
and
aam
lock
xchg
mov
lds
insl
loope
pop
xor
mov
jg
stc
int
mov
scas
enter
mov
add
daa
sub
rcl
mov
jp
mov
rorb
adc
fdivrp
les
pop
mov
cli
adc
inc
dec
loop
sbb
mov
pusha
mov
inc
cs
sbb
pusha
sub
and
test
xchg
arpl
push
stc
pop
sti
inc
pop
repz
insl
outsl
jae
mov
les
cld
xchg
cmp
adc
mov
xchg
add
cmc
add
lcall
sti
add
mov
cli
or
notl
sbb
out
push
cmp
mov
lret
push
arpl
out
xchg
pushf
daa
mov
pop
fsubs
mov
and
aas
mov
mov
sbb
lcall
pop
ljmp
out
and
or
mov
mov
shl
insb
jmp
sub
cmp
loope
shr
iret
push
inc
addr16
mov
je
enter
iret
enter
mov
mov
cli
pminsw
cmc
sahf
lods
in
push
dec
add
adc
fildll
out
rep
cmpsb
outsb
mov
dec
add
outsb
pop
add
in
mov
lahf
cli
add
cld
out
es
push
jge
dec
out
mov
stos
mov
and
mov
add
add
insl
cmc
cs
loopne
enter
in
outsb
lret
gs
bound
cmp
cmp
mov
mov
cmp
push
inc
sti
int3
sbb
shr
adc
repz
push
test
cltd
push
repnz
jne
cltd
ss
call
cli
addl
xor
push
stc
fwait
xchg
cmp
or
das
ja
test
out
mov
into
fdiv
add
pop
test
push
inc
jnp
in
pusha
push
loopne
aaa
arpl
mov
fists
inc
push
test
loop
jmp
lahf
xchg
les
sti
popa
cltd
repnz
sahf
push
dec
jg
or
mov
jge
imul
inc
cwtl
jns
aas
aaa
inc
xchg
pop
pop
nop
test
and
pop
adc
jmp
jp
out
add
ret
inc
xlat
lods
add
dec
pop
cltd
out
xchg
pop
rcl
subl
add
push
imul
jge
ja
loope
pop
es
push
in
loop
ss
ret
aam
aas
jecxz
setg
out
push
loopne
fwait
lods
inc
cs
mov
push
test
adc
xchg
sub
hlt
pop
aam
ret
lahf
outsb
mov
aad
lock
popa
sub
and
aaa
out
push
or
and
sbb
popa
loopne
dec
inc
mov
jnp
add
daa
sbb
out
mov
xor
lock
add
outsl
cwtl
cmp
testw
stos
push
lea
je
jno
xchg
insb
out
insl
vpsubq
xchg
test
xchg
outsb
repnz
lret
ds
inc
push
push
inc
sub
lahf
xchg
mov
ljmp
sub
sti
inc
sbb
jb
xchg
cwtl
sub
and
jno
inc
xchg
or
cmp
mov
andb
mov
mov
pop
jp
pop
test
mov
jo
test
sub
aad
add
enter
or
jb
inc
mov
inc
mov
arpl
movsb
scas
add
subps
test
mov
popa
les
jle
or
in
idivl
sub
mov
pop
insb
xchg
lret
mov
inc
stos
cmp
ret
mov
or
hlt
outsb
clc
inc
sbb
les
sub
fildl
insb
sti
sahf
inc
cmp
incl
frstor
movsl
and
xchg
and
mov
cmp
rclb
dec
mov
mov
mov
mov
mov
xor
inc
popf
sub
cmp
outsl
out
dec
push
xchg
mov
xor
xlat
in
xor
bound
mov
cwtl
mov
scas
or
mov
mov
push
cli
sbb
mov
repz
stos
sub
fistps
mov
es
jno
mov
adc
out
arpl
ror
mov
mov
dec
cmp
out
cli
loopne
mov
pop
inc
das
xchg
inc
mov
and
je
aas
mov
dec
pop
dec
push
mov
pop
ljmp
ret
inc
add
jo
fcmove
in
and
sbb
adc
stos
push
ficoml
sbb
cmpsb
jle
push
and
adc
xchg
stos
jnp
iret
xchg
lcall
add
pop
pop
xchg
inc
xchg
push
cmp
imul
mov
xchg
int
mov
cmp
loope
dec
add
jae
mov
xlat
push
bound
add
jp
shll
push
lcall
mov
movsl
add
fmul
dec
fisttpll
mov
stos
lea
outsl
out
enter
outsb
push
push
movb
stos
call
mov
adc
xchg
cmpb
nop
hlt
pusha
jle
push
mov
arpl
xchg
cld
cmc
sbb
clc
or
in
inc
in
push
push
inc
inc
dec
ljmp
rclb
mov
jnp
push
test
fucomip
out
fdiv
mov
adc
int3
sbb
fdivrl
les
out
push
lret
push
xor
dec
outsl
rolb
add
push
sub
push
repnz
mov
jl
pop
cwtl
fs
ds
inc
add
imul
cmpsl
test
daa
pop
xor
pop
jge
jns
cltd
stos
or
inc
fyl2xp1
hlt
sti
sub
push
cmp
xchg
push
xor
xchg
jmp
ljmp
sbb
push
test
setno
repnz
add
ss
push
inc
cmp
pusha
add
and
lcall
enter
dec
jg
sub
out
js
adc
pop
rcrb
xor
adc
pop
movl
inc
repz
push
rcrb
arpl
je
mov
dec
sub
dec
int
mov
and
arpl
lods
lea
jge
adc
pop
xchg
jns
int
cmp
outsl
lock
das
call
movsb
pop
scas
push
inc
aad
arpl
ret
xchg
xor
sub
jecxz
pop
adc
out
mov
mov
sub
or
int
decl
aaa
mov
xor
pop
jp
pop
test
dec
jecxz
sbb
insb
push
xchg
push
mov
pop
mov
dec
add
push
out
incl
pop
fmul
pop
test
pop
lods
xchg
stos
es
sub
or
and
aad
pop
adc
xor
or
dec
repz
lds
cmp
xor
ret
push
adc
lret
loop
inc
scas
cmp
jg
test
fdivrl
loope
popa
pushf
loope
int
cmp
sbb
loope
stc
mov
clc
ret
jg
push
adc
push
and
xbegin
lcall
mov
push
inc
cmc
and
es
insl
and
and
sarb
mov
out
sub
jo
jnp
cs
sbb
xchg
mov
testl
sub
aas
add
clc
or
inc
xchg
mov
mov
mov
xchg
pop
adc
xchg
jge
sbb
repz
push
add
hlt
inc
pop
or
icebp
out
sub
cltd
dec
adc
sub
adc
cmc
out
inc
pop
addl
xchg
insb
cli
mov
aad
pop
repz
or
fmuls
jl
add
pop
xor
and
sub
nop
fcoml
je
in
sbb
sub
push
mov
add
adc
in
push
scas
jp
push
fs
push
add
outsb
pop
add
xor
push
leave
rorl
lahf
push
out
fildll
pop
sub
xor
jbe
jns
pop
xchg
test
int
push
cmpsl
and
lods
jl
xchg
ss
mov
push
aas
sub
fidivl
cmpsl
jp
mov
cmpsl
lea
mov
pop
test
push
testl
out
mov
push
pushf
and
jl
jae
ss
jmp
loop
cmp
push
divl
mov
mov
push
in
clc
cld
push
adc
sbb
out
mov
fcompl
add
pop
sbb
push
sti
add
xchg
mov
iret
pop
ds
cmp
sbb
aam
je
in
lds
add
pop
aas
pop
cs
loopne
sbb
js
cs
fbstp
jno
mov
testl
lods
out
xor
adc
test
lret
cmc
and
loope
rclb
ret
dec
js
inc
shrl
xchg
add
xchg
out
fnstsw
jmp
outsl
pop
loopne
mov
or
sbb
enter
in
lcall
lret
lds
inc
jbe
pop
cmp
movsb
mov
mov
mov
sahf
or
incl
pop
aad
inc
test
jne
fnstsw
lods
ss
pop
jbe
adcb
mov
arpl
mov
dec
jp
push
fimuls
ret
mov
insl
pop
rorb
xor
or
adc
lea
dec
in
xchg
stc
pop
push
sub
pop
xor
inc
dec
push
leave
insl
test
pop
sub
test
mov
jns
adc
fdivl
mov
pop
out
push
and
pop
dec
das
out
arpl
dec
inc
out
or
rcrl
hlt
mov
mov
call
pop
add
pop
fstps
out
into
push
dec
dec
hlt
add
xchg
push
repnz
aas
lcall
lcall
ljmp
mov
ljmp
inc
jnp
sub
divb
push
xchg
jg
fidivl
cmp
rorb
lods
dec
mov
movsl
int3
add
mov
bound
pusha
popa
xor
mov
outsb
or
sbbb
fwait
insl
add
iret
adc
jmp
push
mov
mov
stos
aaa
ja
lods
rorb
mov
mov
jmp
mov
mov
movsb
insb
mov
lret
addb
rcrb
adc
mov
adc
outsl
add
popf
jp
or
es
test
xor
jb
sbb
push
xchg
daa
pushf
daa
rcrl
scas
cmp
nop
adc
je
jecxz
jle
fcompl
ljmp
pop
mov
cli
addb
rsqrtps
xor
insb
and
jmp
lcall
sub
jle
sbb
jp
push
gs
lock
pop
mov
outsl
dec
inc
adc
jp
movl
fcoms
sahf
inc
xchg
out
cmpb
or
cli
pop
fidivrs
lock
jp
inc
ds
ret
inc
add
popa
das
dec
jmp
and
inc
stos
push
or
pop
jne
xchg
and
je
in
sbb
mov
in
jecxz
push
cmpsl
in
add
jl
stos
mov
inc
fs
push
mov
sub
cld
cmp
dec
sbb
mov
loop
jo
jae
faddl
sub
push
adc
shlb
sub
in
in
leave
aas
sahf
in
mov
cmpb
mov
stos
iret
pushl
mov
shr
idivb
jecxz
test
mov
and
clc
adc
lret
bound
pusha
jmp
outsb
adc
push
jge
loopne
adc
shrl
daa
xchg
mov
cmp
sub
add
int3
addr16
stos
cmc
inc
sbb
inc
lea
dec
outsb
mov
jecxz
lcall
iret
jl
lods
mov
xchg
ljmp
adcl
jle
dec
ss
add
das
xor
fdivl
push
iret
cs
xor
and
mov
inc
inc
loope
xorb
push
cld
sbb
sbb
roll
daa
add
mov
aaa
inc
lea
lea
decl
movsl
and
mov
out
jp
icebp
dec
jge
addr16
leave
pop
das
xchg
aad
das
in
and
or
shl
push
aas
pushf
enter
pushf
ds
sub
dec
insb
jbe
fbstp
jns
hlt
icebp
aaa
icebp
pop
cmpsb
cmp
mulb
popf
mov
inc
jnp
mov
lds
test
adc
outsb
xlat
ljmp
sub
jo
xor
mov
mov
fwait
mov
jle
pop
ja
inc
push
add
fsubrp
jle
mov
loopne
push
subl
test
ljmp
mov
std
adc
xor
push
lcall
or
pop
push
mov
pop
mov
ror
lds
outsb
in
and
or
jl
sbb
or
dec
insb
mov
imul
loopne
jmp
into
sub
lret
jb
scas
lcall
rorl
mov
inc
sub
mov
mov
testl
mov
jae
lock
sbb
enter
push
fistl
aas
fstps
test
scas
cmp
ds
xchg
and
inc
sbb
adc
jge
inc
lods
movl
inc
mov
mov
scas
push
mov
push
mov
sub
xchg
xor
js
pop
add
fld
mov
dec
push
lods
repz
adc
adc
mov
mov
sub
nop
nop
inc
shr
jne
lahf
sub
mov
xchg
sub
mov
cmc
pop
rep
pop
xchg
sub
fs
sbb
cmpsb
mov
mov
or
xorb
loope
mov
cmpsl
push
mov
adc
int
lahf
sbb
data16
mov
mov
dec
jmp
cmc
loop
lahf
hlt
data16
jnp
push
rcrl
out
lods
lret
sub
mov
cli
push
sbb
mov
mov
sub
cmp
cli
and
pop
scas
mov
pushf
cmp
out
mov
xor
lods
movsl
subb
test
mov
xchg
xchg
or
int
sahf
mov
and
test
mov
mov
ret
xor
ja
xchg
leave
mov
rcll
inc
add
and
fstps
xor
lea
or
popa
dec
and
mov
stc
add
addl
fcompl
push
sub
insb
pop
add
outsb
pop
add
inc
mov
inc
mov
sub
sub
fsubp
movsb
jecxz
popa
add
leave
loopne
add
aas
jl
insl
mov
loopne
jno
test
mov
xor
push
xchg
stos
or
pop
dec
and
adc
lock
jp
pop
mov
mov
mov
mov
mov
inc
adc
mov
cmp
xlat
jge
loopne
pop
mov
fstpl
shll
bound
outsb
cs
inc
sub
leave
subb
ret
inc
mov
dec
decl
rcrl
xchg
hlt
test
out
test
fmull
insb
ret
aad
cwtl
decl
xorl
jb
mov
adc
push
mov
xor
cli
and
mov
jg
inc
in
and
add
rorb
jb
xlat
xor
pop
mov
fisubrs
inc
jg
insl
pop
leave
inc
cmc
iret
jo
and
loopne
pop
and
dec
pusha
lea
lahf
xorb
jb
rorb
pop
insb
fwait
das
setns
rcrl
jmp
sbb
xchg
xor
lds
aaa
sti
insb
popf
pop
mov
movups
mov
push
mov
test
push
stos
fstpt
mov
lock
jp
mov
out
pop
hlt
or
fmuls
mov
sbb
mov
push
sub
pop
xor
sbb
clc
mov
fs
out
jmp
filds
sbb
popf
sbb
in
shlb
mov
frstor
daa
icebp
shll
pusha
cmp
scas
sbbb
notl
fnsave
push
cmp
clc
ret
and
mov
movsb
addr16
test
xchg
aaa
sbb
js
push
int3
mov
or
jge
loopne
mov
xor
gs
push
mov
cmp
rcl
xor
adc
outsb
jae
sbb
cwtl
adc
and
or
loop
stos
daa
outsl
rcl
test
adc
ficoms
xchg
sbb
fldt
jbe
mov
add
add
fdivrs
fstpt
insl
les
mov
ljmp
js
cmp
mov
push
aaa
in
nop
ljmp
xor
jg
pop
pop
leave
pop
mov
mov
outsl
push
or
sbb
and
insb
int3
sbb
lea
sbb
add
jae
jle
ljmp
inc
and
mov
pop
add
mov
jno
sbb
push
mov
pop
dec
ja
daa
out
mov
inc
mov
das
sub
mov
adcl
mov
jp
sub
cwtl
jg
mov
leave
test
into
and
fidivrl
cmpsl
decb
test
ret
pop
sbb
loop
inc
add
in
bound
lea
ss
lods
addl
push
jae
push
in
dec
add
pop
pop
add
lahf
sbb
pop
mov
or
cmp
jp
outsl
pop
pop
xchg
cli
in
shll
mov
fs
pop
mov
iret
ja
in
mov
xchg
arpl
mov
out
int3
gs
mov
iret
pop
pop
in
cmc
cmp
lds
dec
dec
jp
sbb
or
popf
clc
aad
fsubrs
sbb
inc
in
adc
jo
jb
mov
stos
stos
shl
sti
inc
mov
imul
inc
xor
fnstenv
rclb
jmp
lods
push
and
or
call
insl
std
or
pop
push
adc
jle
add
adc
mov
jge
sub
jno
dec
jle
xchg
out
mov
leave
adc
bound
ret
enter
xchg
shr
lea
xchg
mov
jnp
call
call
stos
jae
xor
out
sbb
arpl
scas
xor
mov
push
stos
dec
push
sub
and
sbb
fdivrs
mov
rol
or
inc
ds
mov
jg
cli
out
cmpb
test
dec
push
scas
lret
sub
dec
in
and
pop
test
pop
test
and
inc
out
push
cmpsb
add
out
or
popa
insb
cmc
jge
je
nop
dec
andl
in
je
cmp
in
sahf
stc
sub
xchg
mov
mov
rcrl
xchg
jecxz
mov
jp
fistpl
aaa
inc
mov
push
and
push
in
iret
imul
and
lret
mov
adc
add
sbb
mov
push
mov
cltd
repnz
jbe
mov
dec
pusha
dec
xchg
ljmp
ja
xchg
jbe
ret
pushf
adc
and
mov
das
add
pop
shlb
movsl
loope
inc
xchg
rolb
xchg
loop
pop
xchg
cs
or
xor
xor
rcll
fwait
xor
cmc
push
fcoml
jo
inc
movsb
xchg
or
adc
fsubrp
cld
push
jl
fs
jge
rol
das
adc
lock
jne
cld
jno
jno
outsb
sub
sub
mov
adc
movsb
cwtl
decb
fwait
xchg
lcall
adc
dec
loopne
std
push
mov
adc
jnp
sbb
inc
xlat
pop
or
ljmp
shll
mov
pop
addr16
bound
or
inc
sahf
jno
cld
fsubs
fdivl
sbb
shr
mov
cli
or
call
imul
adc
xor
cwtl
shrb
and
loopne
cmp
fistpll
loop
mov
adc
inc
adc
lods
popf
cmp
push
sbb
push
sbb
mov
sarl
jae
filds
mov
pop
mov
jnp
loopne
jmp
push
mov
jmp
jbe
shr
push
push
pushf
movsl
sub
outsb
sub
xor
dec
std
popa
neg
flds
pushf
rcll
std
mov
sbb
hlt
int3
lret
pop
xchg
dec
or
testb
in
lret
cld
inc
cmp
popf
iret
je
rolb
cwtl
arpl
enter
jnp
cmp
fisttpl
adc
or
mov
adc
fcmovnb
push
stos
or
mulb
int3
cmpsb
jecxz
xor
ljmp
fidivrl
push
pop
dec
fstpl
mov
jo
jmp
xor
mov
sub
pop
xchg
es
pop
stos
dec
loope
test
sbb
fiaddl
pop
aam
shrb
orb
movl
or
fistps
roll
push
lcall
flds
adc
mov
int3
pop
pop
pop
bound
icebp
rclb
je
push
fadd
pushf
js
add
out
jge
std
out
lods
add
shrl
add
outsb
pop
add
pop
dec
rolb
mov
mov
jmp
ja
repz
dec
jge
icebp
push
ret
in
gs
in
lahf
ja
sub
out
pop
add
pop
filds
add
pop
stos
addr16
jbe
int
xor
jns
pop
pop
pop
ljmp
outsl
fimull
outsb
mov
leave
add
shrl
xchg
in
and
lods
push
mov
mov
xor
push
lret
adc
movsb
aad
stc
sti
jmp
jne
lret
iret
movsl
xor
rcl
xor
xor
cld
xchg
movsb
add
jecxz
pop
mov
mov
shr
add
stc
dec
stos
shrl
bound
outsb
nop
and
test
stos
or
add
lahf
shrb
imul
js
scas
sbb
psubusb
adc
scas
incb
mov
push
or
adc
bound
lret
dec
pop
and
pop
xchg
dec
add
adc
mov
adc
test
out
and
lods
sti
iret
cmp
pop
aas
in
inc
adc
jp
and
inc
inc
and
int
mov
pusha
fmull
lds
cmpsl
test
inc
pop
pop
add
pop
dec
push
inc
push
or
push
pop
mov
dec
fidivrl
jae
jno
cmp
fimull
repz
mov
bound
cmp
mov
sbb
jno
sbb
mov
je
adc
inc
inc
mov
pushf
adc
loope
and
lea
pop
ss
lods
xchg
in
dec
pop
addr16
xor
jne
pusha
or
push
shll
mov
enter
scas
scas
xor
sub
mov
sahf
mov
mov
repnz
xor
inc
mov
js
out
mov
add
cmpsl
aam
roll
adc
mov
je
ds
pop
fmul
fistl
jmp
mov
jmp
inc
or
adc
outsb
and
dec
les
jns
mov
outsl
dec
cli
out
xor
add
frstor
xor
mov
out
in
call
out
or
sbb
out
testb
mov
push
sub
fsubs
subl
inc
mov
push
pop
mov
add
pop
pop
mov
repnz
in
cmp
jecxz
cmp
lahf
adc
xchg
call
xor
xchg
pop
mov
mov
dec
or
stc
jle
inc
pop
xchg
pop
mov
jno
mov
leave
add
out
mov
dec
sub
mov
jle
jle
mov
xor
cmp
in
xor
xor
cwtl
or
xchg
imul
dec
adc
fwait
scas
mov
jg
in
mov
and
loop
jae
sbbb
xchg
add
inc
pusha
pop
vmread
pop
in
adc
divl
xchg
jne
or
cltd
xchg
iret
cmp
inc
stc
loop
cmc
out
sahf
cs
fsubs
sahf
jmp
fadd
test
dec
cwtl
sarl
jb
fcomi
sub
dec
insb
dec
fldenv
scas
mov
lea
add
mov
dec
lea
mov
sub
rclb
add
push
jp
loope
push
cltd
fwait
adc
stos
lahf
flds
jle
sti
or
add
adc
xor
out
imul
loopne
aad
mov
sbb
ret
push
cmp
mov
lret
mov
inc
or
jae
outsb
shrl
jne
inc
sarl
lcall
stos
test
push
stos
sti
mov
pop
or
add
stos
mov
les
into
sub
adc
and
std
xchg
push
daa
fadds
dec
mov
int
test
add
sbb
and
or
call
clc
dec
mov
stos
repz
xchg
mov
jmp
fisubl
je
add
pop
stos
or
mov
ja
mov
xchg
movsl
imul
mov
add
adc
pop
xchg
rolb
je
fsubrs
push
push
mov
push
sbb
pop
jae
xor
in
je
mov
add
test
dec
pop
xor
xor
fdivrs
dec
hlt
add
outsb
outsl
mov
push
test
jo
pop
out
push
xchg
mov
xor
and
add
cmp
mov
mov
push
adc
inc
fidivl
jne,pt
aad
pop
pop
sbb
pop
mov
and
push
sbb
sub
push
jmp
mov
push
in
and
cmp
int
fcmovnbe
pop
pop
test
sub
push
jne
shlb
push
ds
mov
xchg
aaa
in
cwtl
cli
pop
test
cmp
add
enter
xor
adc
insb
test
dec
push
fstl
inc
mov
outsb
cwtl
test
pop
mov
ud0
sub
adc
push
or
in
or
pop
mov
mov
outsl
shrl
mov
cmp
xlat
aad
jb
jne
jl
stos
fldt
push
dec
sub
jg
lock
xchg
sbb
mov
xchg
mov
subb
and
xor
push
xor
lds
fdivrs
xchg
call
xchg
pushf
pop
pop
and
and
or
into
xchg
dec
idivl
jo
pop
inc
popf
mov
or
mov
daa
adcb
inc
mov
shll
mov
add
lret
aam
jb
add
or
jmp
lods
mov
inc
setl
int3
and
aas
movsl
int
outsb
dec
pop
out
stos
lea
cmpsl
shrb
jmp
loopne
leave
fidivs
out
out
sbb
cld
popa
jle
sub
pushf
fsubrl
ja
xchg
jbe
daa
cmpsb
xor
fiaddl
jecxz
xchg
or
pop
xor
add
lods
pusha
mov
rep
inc
sub
cmpsl
adc
in
cli
sub
ret
pushf
or
mov
cmp
adc
jecxz
vpextrw
lds
dec
icebp
pop
xor
jns
push
jge
fsubrl
aam
das
jl
pushf
xor
jae
push
adc
mov
xchg
sbb
ds
sub
push
enter
dec
push
movsb
or
out
adc
shl
or
xor
or
test
jp
push
nop
icebp
adc
es
enter
movsl
mov
sbb
fimuls
lret
xchg
and
sbb
add
jg
sahf
sbb
add
add
pop
in
fnstsw
or
imul
outsb
pop
add
jl
cmpb
pop
mov
jecxz
mov
scas
movsb
mov
mov
pop
push
sbb
xor
push
sub
xchg
scas
inc
lret
jp
out
addl
pop
xlat
cmp
pop
movsl
add
mov
ja
xchg
xchg
sbb
jns
inc
and
inc
andl
cmp
inc
notl
jg
lock
pop
jae
jae
nop
jno
mov
inc
mov
jl
frstor
jmp
in
js
lret
int3
pop
jnp
test
leave
and
and
jp
lock
jne,pt
mov
repnz
cmpsb
sbb
inc
add
aam
out
inc
fildl
movb
dec
and
mov
sti
mov
push
or
cmp
in
jmp
into
xchg
cld
xchg
adc
in
xchg
cmp
aaa
xor
cmp
fistpl
push
popf
dec
test
jg
mov
or
push
js
sub
push
push
and
xor
jge
out
dec
adcb
and
adc
push
ret
mov
push
adc
aam
mov
xor
adc
cmp
lret
and
mov
xor
adc
int3
xor
shl
or
bound
adc
scas
sub
sbb
pop
push
rcrb
push
sub
cmpsb
or
popf
into
daa
mov
into
movsb
repz
jmp
mov
xchg
and
sbb
push
out
mov
add
rclb
cltd
add
xchg
loopne
jecxz
bound
sub
mov
fs
in
cmp
movl
imul
sbb
popaw
adc
pop
test
add
inc
movsb
mov
cmpl
xor
sub
jmp
pop
inc
pushf
loop
shrl
cltd
clc
jge
or
or
outsl
cmp
dec
out
shlb
dec
stos
int3
pop
pop
adcb
pop
cmpsl
jmp
cli
test
xchg
sbb
pop
ret
js
inc
jl
fisttpll
sbb
jnp
scas
sbbb
cs
mov
add
loope
add
shll
xorb
mov
imul
and
popf
mov
repnz
es
adc
sbb
xor
fs
imull
add
xchg
dec
cmp
lods
pop
dec
test
jg
pop
cmp
adc
jmp
pop
ljmp
push
hlt
out
ret
mov
inc
bound
fmull
aas
ss
sbb
loop
repz
int3
xor
mov
lret
xchg
repz
xlat
adc
inc
and
dec
xrelease
mov
xor
add
rolb
pop
sti
int
pushf
cwtl
lea
push
jns
gs
pop
cwtl
sub
cbtw
fiaddl
rorb
xor
push
in
inc
rcll
jmp
orb
into
push
in
test
cmp
pushf
lods
sub
jno
mov
in
stc
int3
nop
fwait
hlt
je
dec
imul
pop
ret
cmp
fstpl
aam
cmp
adc
lsl
int
xchg
mov
pop
dec
int
movl
add
mulb
ss
jmp
adc
mov
xchg
stc
dec
sub
xor
xchg
pop
testb
pop
inc
mov
sarb
adc
lods
jne
xchg
imul
push
or
mov
cld
sti
and
pusha
pusha
stc
add
push
mul
adc
sub
push
fsubrl
mov
mov
daa
cmp
cmc
cmp
sbb
push
or
lods
scas
dec
mov
mov
in
into
xor
inc
and
push
cmp
insl
push
pop
aam
orl
jp
fisttpll
insl
push
pop
dec
bound
ret
mov
push
push
adc
inc
xor
jp
jno
pop
pop
or
cmp
rorl
adc
cltd
cmp
xor
cwtl
pop
mov
jns
mov
aad
out
sub
sti
pop
aam
jecxz
ret
push
in
sub
xchg
testb
orl
addr16
cmp
cli
daa
jns
jns
ret
mov
push
iret
pop
subb
out
add
push
into
lcall
cwtl
in
cli
pop
jno
push
xchg
fistl
fsub
stos
add
bnd
sub
jne
mov
ret
lds
into
aad
out
mov
lret
cmp
mov
les
xchg
jecxz
mov
pop
fisttps
into
in
lahf
pop
mov
sbb
cmp
inc
cmp
insl
push
add
push
lods
push
mov
sub
jge
sti
pop
push
icebp
push
ret
mov
dec
cmp
dec
and
aas
mov
adc
push
or
mov
lea
dec
jg
inc
sub
pop
jl
nop
inc
repz
dec
ret
cmp
negb
and
sub
popaw
push
dec
mov
jb
mov
cmpsb
mov
pop
cmp
test
pop
ror
rolb
xchg
push
add
test
test
aaa
fwait
push
jne
int
decb
xor
test
pop
push
xor
fldt
jl
jecxz
jno
mov
sti
das
shlb
pop
mov
fwait
repnz
test
cmc
or
xor
jo
shl
xchg
fcomps
pop
cmp
out
mov
sbb
inc
mov
aas
mov
push
mov
pusha
jno
into
mov
outsl
cltd
push
loopne
call
jns
jmp
loop
mov
push
mov
sbb
jnp
aad
mov
ror
bound
mov
mov
and
and
and
push
fstps
or
xchg
in
test
xchg
dec
ljmp
xor
sub
adc
int
bound
inc
hlt
imul
inc
xchg
mov
ret
mov
movsl
rcrb
jl
xor
ror
mov
or
mov
insb
sarb
xor
sbb
xchg
xchg
push
adc
aam
testl
stos
int3
call
pop
pop
and
pop
rclb
fld
push
dec
in
inc
sub
lock
mov
aad
or
xor
push
dec
mov
sbb
dec
cmc
xchg
scas
push
inc
jecxz
je
fsubs
xor
pop
xchg
push
add
cmpsb
push
inc
std
imul
fsubrs
mov
inc
inc
ss
mov
inc
aad
adc
lea
shlb
adc
mov
add
repz
popa
in
ja
pop
push
mov
adc
in
filds
imul
add
ss
sbb
loopew,pt
dec
inc
lcall
add
add
lretw
cmp
repnz
jp
sub
leave
scas
jbe
mov
addb
data16
fildll
aas
pop
dec
inc
adc
add
flds
sub
cmp
in
fwait
popa
or
or
stos
mov
push
sub
pop
cwtl
test
mov
repz
loope
lea
dec
and
dec
nop
ds
xchg
adc
xchg
push
cmp
aam
mov
lea
add
pop
in
push
outsb
repnz
lret
daa
sbb
mov
enter
in
out
add
pop
mov
mov
nop
lock
jae
sahf
test
out
repz
adc
fmul
dec
jg
mov
shl
and
mov
lcall
sub
xlat
jecxz
add
out
cmc
dec
add
fdiv
jbe
jns
lods
int
lahf
ja
je
xchg
outsb
adc
adc
inc
pop
data16
test
les
push
ljmp
das
es
pusha
das
cmp
add
mov
insl
mov
sub
add
outsl
cld
shll
ret
test
repnz
stc
sbbb
jg
pusha
jecxz
xor
push
jne
cmp
lods
ret
shlb
shrl
add
insl
lcall
inc
mov
xor
inc
push
sbb
jge
inc
push
out
and
xchg
cmp
push
popf
jnp
fildl
fcos
pop
flds
mov
mov
xchg
out
inc
int3
pop
lret
insb
mov
adc
sahf
and
out
aaa
rol
add
gs
call
xlat
sub
mov
inc
adc
push
jo
pop
aad
in
mov
lock
sbb
lds
aam
int3
fisttps
pop
repz
xchg
jne
xor
ret
xchg
jne
pop
jb
dec
adc
cmp
inc
sub
les
mov
gs
mov
sbb
jecxz
in
lretw
stos
pop
or
repz
insb
lcall
add
test
xor
pop
insb
xor
xchg
inc
sub
jns
bound
aas
inc
dec
test
icebp
and
inc
cld
cs
ret
jbe
out
add
inc
test
push
insb
adc
daa
int
insl
push
jo
imul
mov
mov
out
iret
jo
dec
mov
lret
mov
leave
jl
inc
xchg
push
pop
xchg
in
lods
cs
gs
adc
jbe
dec
das
cli
scas
fwait
popa
jle
cmp
std
fwait
jns
pop
add
mov
pushf
xor
sub
pop
dec
std
rcr
insb
out
outsb
addl
jbe
xchg
add
jg
psubb
or
mov
shlb
sbb
add
mov
or
aam
in
push
adc
mov
and
sub
sbb
and
stos
xchg
imul
dec
inc
jg
add
mov
lods
dec
es
and
push
loop
mov
push
sub
mov
adc
xchg
test
test
xchg
jecxz
inc
xchg
cmc
push
test
push
jae
insl
shrb
lods
dec
push
xchg
pop
cmp
inc
add
mov
inc
pop
mov
inc
dec
mov
dec
jb
inc
in
cmpsb
xor
xor
fcoml
adc
outsl
mov
jle
add
and
imul
jecxz
aaa
test
dec
inc
and
rorl
fnstsw
rorb
mov
lcall
inc
dec
mov
mov
subb
arpl
loop
or
mov
cmp
ljmp
filds
inc
sbb
repnz
mov
jb
sbb
sub
ret
stos
fisttpl
hlt
andb
inc
fsub
lock
mov
addr16
iret
fstpt
ss
mov
cwtl
popf
sbb
inc
enter
hlt
xchg
shl
mov
sbb
jne
aam
jnp
lds
adc
push
shll
xchg
jbe,pt
loope
xor
adc
fmuls
dec
sti
and
jnp
or
sub
jp
adc
addr16
inc
das
rcr
xor
loope
mov
cmp
xchg
adc
inc
das
fcmovnbe
inc
scas
lock
pop
adcl
sub
out
mov
sbb
gs
xchg
das
in
ds
sub
adc
movsl
adc
imul
xor
call
nop
inc
fldcw
push
in
sbb
out
out
inc
cmpsl
aad
imulb
mov
adc
loope
icebp
lea
ret
fstl
lods
out
hlt
mov
and
cmp
or
xchg
lret
mov
out
stos
fistl
mov
adc
mov
inc
add
inc
lcall
jg
loop
cld
pop
jg
out
cmpsb
lods
lods
repz
xor
fstps
imul
sarb
je
js
js
inc
lods
imul
rcll
or
push
jle
pusha
enter
push
jo
ja
adc
xchg
imul
sbb
fwait
ret
jl
pop
sbb
adc
mov
xor
mov
push
gs
outsb
pop
sub
xor
inc
in
bound
or
cltd
arpl
inc
loope
movsl
test
lds
lods
mov
ss
push
lds
not
lea
pop
je
cmp
jge
cmp
dec
popf
sub
mov
enter
cmp
jg
sbb
lods
xchg
mov
bound
dec
out
jp
sbb
push
and
stos
imul
xor
mov
scas
jbe
xchg
add
sub
sbb
arpl
leave
movsl
loope
inc
mov
cltd
roll
test
ret
repz
xchg
dec
in
mov
stos
dec
cmp
jnp
out
lcall
adc
std
lods
std
pop
push
and
jl
jbe
sub
sbb
out
mov
xchg
jge
fs
sub
daa
cli
cltd
mov
xchg
lds
dec
lods
lret
sub
dec
xchg
jb
jg
test
in
dec
inc
xchg
mov
bound
clc
les
adc
xor
lods
fadds
adc
test
sbb
lret
xchg
test
sbb
xchg
pandn
or
adc
pop
popf
mov
ja
xchg
clc
or
or
xchg
mov
mov
sub
or
imul
mov
add
pop
lock
loope
pushf
subb
dec
xchg
push
xor
sub
mov
or
cmp
xor
cmpsb
add
add
xor
cltd
jae
add
shll
scas
aas
push
or
jl
add
add
ds
mov
in
sar
pop
hlt
ss
xchg
loopne
imul
hlt
int
out
fcoms
in
cmp
sbb
lods
inc
inc
push
repnz
cmc
bnd
sbb
xchg
ret
jecxz
xor
pushf
push
push
das
and
pop
cmpsb
mov
sbb
cmp
test
sbb
movsb
and
aas
outsb
jp
xchg
sahf
jbe
insl
fcompl
jg
pop
adcl
mov
jno
pop
adc
out
push
ja
repz
into
mov
push
mov
cmp
testb
pop
or
les
out
into
xchg
jg
sub
lods
sahf
gs
mov
ret
ret
xchg
sub
or
push
cld
ret
stos
in
fisubl
jg
push
adc
iret
sbb
dec
jnp
adc
out
mov
call
dec
lods
jle
pop
mov
loop
add
out
in
add
das
lods
clc
test
jecxz
mov
sar
dec
pop
out
cmpl
mov
fs
lahf
push
inc
dec
rep
repnz
dec
inc
mov
and
in
push
mov
mov
fistpl
outsb
xor
push
adc
or
or
flds
mov
into
push
rclb
in
sbb
mov
shlb
add
cmp
sahf
mov
fsubr
addr16
lods
mov
mov
pop
or
push
cmc
scas
lret
nop
pop
push
ds
ret
inc
inc
inc
mov
cli
std
hlt
mov
scas
inc
outsl
fidivl
push
add
jo
andb
js
mov
dec
mov
mov
cld
je
repz
inc
adc
and
stc
sti
jmp
mov
push
orb
cwtl
push
jo
daa
dec
or
scas
mov
sti
push
lret
stos
mov
xchg
mov
cli
repnz
inc
sub
xchg
jmp
ss
je
incl
mov
sti
sub
subb
loop
dec
jl
sbb
mov
inc
lret
nop
nop
popa
cmc
add
ds
dec
pop
adc
pushf
decl
insl
out
push
add
xor
inc
pop
movsl
pop
mov
jne
xor
mov
enter
outsl
adc
ja
push
xchg
neg
and
xchg
ja
cmp
lret
faddl
fwait
mov
mov
or
out
mov
lea
jl
mov
mov
inc
mov
adc
test
movb
fmul
jle
scas
iret
push
pusha
xor
sbb
dec
xchg
sbb
mov
push
pop
pop
or
add
mov
pop
dec
xchg
pop
jbe
leave
push
jmp
sbb
adc
lds
or
aas
push
dec
push
and
jae
jmp
cmpsl
lcall
mov
movsb
adc
sbb
dec
mov
ja
cld
loop
or
fdiv
cmp
mov
xorl
decl
or
or
movsb
pop
out
mov
cmp
arpl
stc
mov
call
adc
mov
pushf
push
repnz
rcll
sti
pop
xchg
add
inc
data16
js
mov
cmpsb
jp
orl
out
or
jo
notb
and
add
insl
cmp
popf
adc
stc
mull
int3
fmuls
jle
test
push
imul
mov
xor
shl
inc
mov
pop
cmp
sbb
jo
lods
add
sub
add
incb
fcompl
pop
sbb
movsb
stc
loopne
push
dec
sarl
mov
mov
push
aas
or
dec
insl
mov
cmp
rclb
xor
cmp
dec
sub
movsb
addr16
mov
daa
enter
inc
dec
repnz
sahf
xchg
das
rcrb
or
ret
push
loop
bnd
pop
push
fists
dec
lods
fwait
ret
jo
leave
pop
inc
scas
test
data16
das
testl
pop
lea
int
jmp
repnz
jae
jmp
inc
pushf
push
iret
or
jg
jmp
shll
xchg
testl
cmp
dec
xorl
push
inc
repz
pop
dec
repz
insl
mov
aad
lock
sbb
popa
jae
inc
pop
loopne
push
pop
mov
jo
sub
mov
sub
mov
sub
dec
or
lahf
adc
pop
add
add
testl
mov
fstp
pop
iret
scas
cmpsb
pop
adcb
test
mov
pop
fwait
push
dec
repz
out
inc
pop
mov
test
or
mov
iret
stos
cs
sub
xor
sub
pop
cmp
cwtl
xchg
sbb
mov
pop
ds
shlb
jle
gs
popf
inc
xor
repz
popa
add
pop
les
cltd
dec
dec
sar
test
adc
cmc
xor
stc
lds
jae
test
addr16
push
fldl
cmp
filds
jae
jae
fistl
pop
dec
ss
nop
je
mov
jbe
popf
mov
mov
out
mov
xchg
daa
bound
xor
cmc
lock
dec
flds
test
aam
aad
mov
pop
nop
xchg
push
push
mov
jecxz
scas
sbb
adc
faddl
mov
add
add
js
orl
and
iret
cmovg
jle
repnz
loopne
and
data16
shr
mov
insb
cmp
lret
cmp
sbb
or
je
sbb
push
mov
out
sbb
pop
cmpb
xor
jp
popf
outsl
adc
pop
xlat
mov
sarl
ret
jnp
jle
mov
fildll
mov
pop
pop
fcoml
cs
divl
popa
out
imul
or
dec
shrb
mov
add
pop
push
clc
xchg
cltd
ja
mov
fnsave
imul
pop
or
daa
das
dec
sbb
push
sar
jg
loope
imul
outsb
test
jno
sub
and
pop
xchg
inc
aad
mov
lock
out
nop
xchg
pop
mov
push
punpckhbw
in
ret
lret
and
push
jg
inc
iret
and
mov
push
or
and
xor
xor
jnp
imul
pusha
pop
jge
or
sbb
movsb
add
mov
ret
jnp
pop
pushf
stos
hlt
fbld
cmp
les
adcl
rol
or
adc
ljmp
mov
cmpsb
xchg
and
add
adc
js
shlb
mov
in
addl
outsb
pop
add
popa
xor
imul
xor
push
lcall
cltd
ror
add
in
mov
lahf
add
sahf
in
or
xor
xchg
mov
test
push
call
popa
das
mov
pushf
js
xor
addb
test
ljmp
or
sub
andb
push
les
push
push
iret
fisubrl
lods
pop
xchg
pop
fisubl
aam
mov
clc
aas
sbb
ljmp
mov
lock
pop
nop
xchg
and
mov
and
pop
daa
popa
popf
dec
mov
xchg
mov
add
mov
adc
mov
pop
inc
xor
icebp
pop
xchg
out
mov
dec
repnz
clc
popa
jmp
pusha
not
mov
leave
add
xchg
test
sbb
xor
add
mov
and
dec
enter
or
xor
sbb
mull
shl
scas
mov
lcall
push
push
lods
add
ror
dec
add
in
jne
mov
loop
dec
sub
dec
nop
jnp
stos
adc
outsl
mov
les
in
pusha
ret
ja
lock
rcll
push
push
fildll
ret
int3
lods
out
les
fisubrl
psrld
test
pop
xor
dec
mov
sbb
mov
imul
arpl
imul
dec
fs
jle
mov
test
push
mov
data16
adc
test
inc
outsb
imul
in
inc
std
pop
xor
adc
push
or
xor
xchg
jecxz
insb
sti
in
push
sbb
lret
pop
cmpsl
or
cmp
scas
inc
movhps
sub
lcall
mov
fcmovnbe
pop
sub
lods
jmp
mov
aas
jns
lds
daa
mov
sub
adc
rol
inc
push
cmp
lods
mov
jmp
push
ror
sub
mov
pushf
and
ljmp
ret
adc
jnp
mov
or
icebp
fdivr
repnz
in
aam
daa
dec
push
enter
xchg
sub
test
push
jbe
mov
xchg
cmc
push
inc
cmp
sbb
inc
jecxz
push
testb
mov
ficomps
adcl
es
inc
add
mov
aaa
adc
xor
out
and
test
in
dec
adc
adc
xchg
dec
and
mov
pop
cld
out
jae
pop
or
sub
psubd
xor
movsb
in
mov
ds
sti
ss
fdivl
and
mov
mov
push
pop
or
jle
loope
pop
xchg
leave
test
inc
ret
inc
jle
cmpsb
xchg
jmp
mov
sub
inc
dec
pop
add
imul
sar
loope
dec
call
arpl
inc
popa
es
in
pop
int
es
subb
xchg
xchg
dec
enter
shlb
loope
dec
mov
push
sbbb
lea
insl
cltd
cmpsl
cmc
xchg
out
jmp
xchg
jb
incl
test
aas
test
dec
cmp
fildl
jbe
push
fcoms
lret
cmp
jge
mov
aas
dec
jb
cltd
shll
xor
pop
fs
inc
movsb
push
cld
into
call
adc
nop
xchg
push
mov
insb
add
js
nop
dec
nop
adc
dec
push
mulb
mov
imul
daa
int3
stos
push
enter
paddd
and
or
sub
int
push
mov
sbb
adc
xchg
mov
xor
sarl
dec
ljmp
pop
cwtl
aaa
loopne
dec
pop
pop
adc
pusha
pushf
jno
movsl
dec
jecxz
mov
les
mov
testl
jo
adc
jne
fidivl
loope
dec
xor
push
cmpl
or
cmc
xor
in
adcl
dec
sub
ret
mov
jo
sbb
test
mov
sub
movsb
inc
mov
cmp
imul
lds
fisttps
inc
addr16
or
je
jb
mov
pop
dec
dec
rclb
or
mov
out
mov
enter
xor
add
pop
sbb
push
xor
sbb
stos
fsubrs
xor
pop
cmp
lret
les
dec
cmc
je
mov
lock
push
outsb
or
xor
gs
push
ffree
insb
aaa
stos
fnstsw
mov
mov
mov
sub
out
gs
call
mov
call
les
push
xchg
jno
rcrb
rcll
xor
int3
bound
mov
lods
js
xchg
xlat
gs
sub
adc
fwait
sar
jg
lods
repz
mov
jp
pusha
pusha
clc
shrl
cmp
scas
fiadds
fiadds
pop
jb
inc
mov
pop
iret
pop
repz
adc
pop
mov
dec
pop
xchg
daa
cld
xchg
mov
call
mov
mov
pushf
dec
jl
cmp
in
ja
ja
out
sbb
mov
inc
add
test
pop
adc
test
add
je
inc
push
jecxz
cmp
pop
stc
ret
pop
int3
mov
cmp
pop
andl
cmpsl
popf
popf
outsl
jns
inc
sti
cmp
ss
dec
pusha
or
insb
dec
xchg
mov
popf
sbb
ret
cmp
sbbb
rorl
or
mov
mov
rcrb
icebp
fsubrp
roll
xor
sbb
cmpsb
jb
mov
add
or
push
or
in
aam
fcoml
leave
cltd
or
sbbl
cmp
mov
dec
cmpb
xor
out
fs
sub
add
incb
push
jle
pop
pusha
dec
mov
xchg
ror
inc
cli
aas
xor
out
arpl
in
rcrb
and
popf
xchg
add
cwtl
cmpsl
andb
pop
xchg
mov
cmp
sbb
sub
nop
mov
mov
sub
mov
jmp
pusha
jb
inc
adc
dec
sahf
jle
push
pop
mov
test
mov
mov
in
pop
push
inc
sbb
inc
cli
adc
iret
push
insb
or
inc
add
push
sub
bnd
inc
mov
ja
out
addb
int
fs
adc
std
divb
cli
or
and
test
aam
sub
sahf
or
xchg
lods
arpl
gs
and
xchg
mov
in
and
add
int3
repnz
into
imull
add
add
outsb
pop
add
add
mov
mov
or
xchg
int3
aaa
sbb
stos
fucomi
mov
out
fistpl
cmp
pop
lcall
sbb
rcrl
jo
imulb
push
divl
or
jle
cmp
pusha
cs
imul
aas
push
icebp
ljmp
pop
hlt
xchg
mov
arpl
push
std
adc
pavgb
enter
or
lahf
cmp
push
addr16
mov
pop
inc
dec
outsl
mul
xchg
sub
fcoms
jne
test
int
mov
movsl
add
pop
bound
inc
push
ss
and
sbb
mov
dec
push
call
jno
mov
hlt
push
xchg
loopne
pop
sub
sti
sbb
sub
stc
mov
adc
cmp
fbstp
jle
iret
or
aaa
int3
fs
scas
jno
xchg
pop
fsubp
and
adc
adc
icebp
rclb
lods
cmp
add
data16
into
xchg
jp
shlb
iret
push
pop
andb
pop
faddl
xor
lret
lods
jb
mov
sarb
mov
inc
jbe
adc
jb
lock
inc
dec
pusha
mov
mov
movsl
movsb
push
aas
xchg
clc
pop
mov
mov
mov
add
into
xor
adc
mov
push
push
mov
setle
mov
xor
nop
call
or
adc
jle
inc
hlt
aas
inc
jmp
dec
lods
jo
sub
push
addr16
test
cmp
fs
push
stos
or
call
cwtl
cmp
add
fdivrs
pop
or
bound
movsb
jnp
jne
jbe
pop
ret
lds
insb
stos
lahf
rol
lea
arpl
outsb
pop
xchg
cwtl
add
mov
das
mov
mov
push
cmp
ficompl
mov
dec
cmp
adc
cmp
mov
or
xchg
add
rcrl
mov
mov
jmp
mov
sub
sub
and
or
fsubs
sub
sti
sti
jl
leave
aas
decb
xchg
inc
outsb
lret
jl
push
adc
sub
jp
insb
lods
jmp
mov
dec
jge
sbb
sbb
push
and
popa
sti
mov
imul
xlat
imul
add
jno
xchg
cmpb
outsb
loopne
inc
mov
loop
scas
mov
adc
or
insb
mov
aad
mov
rcrb
ljmp
pop
jne
jne
mov
inc
mov
jnp
dec
jb
jl
ss
loop
inc
xchg
lret
mov
push
outsl
cmp
inc
not
test
fnstsw
dec
mov
ds
pop
jns
loope
cmp
xchg
mov
jg
cli
out
les
je
inc
push
inc
scas
xchg
out
sub
or
icebp
jecxz
xlat
incl
testl
push
loopne
dec
or
dec
sbb
lock
lods
mov
fnstenv
ds
loopne
roll
jae
mov
stc
push
lret
jge
sub
cmp
int
out
jmp
lods
push
add
sub
out
mov
push
outsl
xchg
or
ffreep
imul
lcall
jle
pop
mov
fdivr
sbb
hlt
icebp
sub
rcrb
sahf
mov
out
dec
xchg
inc
rcrb
and
dec
lret
fwait
mov
adc
sbb
inc
cmc
les
push
arpl
ljmp
inc
stc
and
jg
xor
cmc
pusha
or
xorl
fs
lock
sar
rcr
fisubl
push
inc
pusha
add
cmpsl
mov
lods
mov
xchg
inc
sbb
and
jl
or
nop
xchg
mov
into
loope
fmul
dec
xchg
jbe
leave
test
pop
fldenv
mov
into
lods
mov
push
test
mov
outsl
in
mov
gs
adc
popl
xlat
inc
mov
pop
mov
jne
in
aad
cmp
lret
daa
imulb
push
xchg
jnp
dec
test
add
add
xor
in
adc
push
fcompl
xchg
inc
and
sub
jb
sahf
data16
inc
cmp
loop
lcall
mov
out
cmp
mov
fwait
ret
push
lods
jge
bound
pop
inc
add
xor
adc
or
fistpl
js
push
pop
sbb
mov
data16
and
repz
lods
lock
mov
jnp
fldt
mov
jb
call
xor
or
scas
popa
out
je
icebp
pop
and
push
sbb
fcompl
cmpsb
push
cmp
es
jg
out
lds
insl
mov
ss
or
aas
adc
imul
iret
xchg
pop
fdivrl
test
mov
dec
daa
data16
ret
and
sub
andl
fnstcw
pop
fistl
or
push
dec
and
data16
jo
cmp
push
enter
xchg
jo
cmpsb
add
testb
jmp
cli
outsl
insl
pop
xchg
add
push
and
loope
and
sbb
mov
cwtl
pop
imul
or
mov
scas
mov
ret
lahf
stos
adc
shrl
in
fs
push
lahf
sub
pushf
cmp
cmp
movsb
sub
aad
and
call
loopne
cs
cmp
insb
rcl
stos
in
repz
jno
push
loop
out
popf
mov
xor
popa
inc
ss
push
xchg
jmp
mov
or
sub
bound
or
xor
stc
cmp
cmp
mov
push
inc
mov
xlat
fidivrs
lret
add
add
xchg
leave
ss
mov
sub
ret
subl
add
dec
iret
insl
sub
xor
sbb
loop
mov
dec
and
gs
push
mov
int
adc
mov
ret
faddp
dec
mov
enter
dec
mov
hlt
xor
mov
mov
jnp
cld
pop
movl
mov
fst
cmp
aas
repnz
push
mov
jo
sub
jno
mov
loop
loop
cmp
je
jns
lcall
pmuludq
lock
add
lock
mov
pop
push
pop
mov
fs
je
cs
or
mov
outsb
sbb
fs
mov
add
add
pop
je
rorb
out
add
xchg
add
outsb
pop
add
push
fldl
push
cmpsl
in
lea
ds
cmp
nop
in
popa
fnstcw
cmp
push
ret
pop
or
xchg
scas
aad
insb
sbb
dec
jnp
shl
pop
popa
inc
scas
jmp
add
fstl
icebp
xchg
ret
dec
and
sarb
mov
mov
mov
loopne
out
js
sbb
pusha
stos
loop
fidivl
fiaddl
inc
ss
lods
mov
test
shll
inc
mov
mov
mov
fucomp
inc
insb
das
xor
cltd
jae
add
push
jnp
or
cltd
ffree
in
or
sub
mov
mov
out
inc
push
jp
and
jo
iret
mov
xlat
mov
or
jecxz
daa
xorb
test
out
jmp
in
notb
lret
mov
jns
mov
xchg
jg
push
shlb
enter
nop
sbb
adc
stos
inc
mov
adc
cwtl
lea
lock
xor
stos
test
jns
add
dec
inc
xchg
pop
and
movb
imul
adc
mov
adc
jb
push
inc
push
dec
push
add
ja
sbb
repnz
push
in
sbb
testl
xchg
repz
dec
test
xchg
cmp
ds
cli
pop
pop
aaa
add
dec
adc
dec
xor
bound
lock
popf
iret
sbb
mov
jl
movsb
addr16
gs
mov
loopne
xchg
push
outsb
fidivs
aas
mov
pop
nop
xor
setbe
mov
xlat
gs
gs
push
fistpl
ret
lret
or
add
rcl
cltd
cmc
xchg
push
test
ret
jge
pop
iret
fisttpl
push
jns
lods
sbb
hlt
out
jmp
push
inc
aas
test
int
xchg
inc
push
pop
mov
pop
mov
stos
rclb
insb
push
adc
leave
clc
ja
add
mov
popf
arpl
outsl
lods
rorl
test
fmuls
and
xor
das
inc
decl
mov
inc
mov
and
lock
jle
pop
jo
ret
xchg
in
push
add
imul
lods
inc
add
enter
inc
sahf
sbb
mov
cli
xor
shll
mov
fidivs
add
xchg
push
sbb
and
inc
pop
add
idivb
xchg
fs
insb
and
aaa
push
push
push
push
aad
mov
mov
add
faddp
sub
add
push
fmuls
sbb
cs
shrl
sbb
and
mov
outsl
add
fisttpl
call
mov
lret
fdiv
mov
push
sub
adc
movsb
jecxz
xor
call
sbb
jmp
jae
and
rol
lock
repz
and
push
sti
enter
pop
outsl
daa
xor
xor
lret
loopne
inc
push
fs
mov
pop
jnp
jne
outsl
movsl
mov
ficomps
sete
inc
mov
and
pop
xchg
jle
push
mov
repnz
ret
inc
dec
clc
jno
cmp
ljmp
mov
ja
inc
push
pop
sub
mov
aas
decl
sbb
rolb
sbb
or
cmp
mov
les
fisttps
gs
imul
xchg
pop
sub
into
pop
andb
lahf
mov
or
test
mov
push
lods
inc
test
xchg
sbb
mov
out
outsl
or
ds
shll
aam
inc
push
and
fbstp
sub
xor
scas
push
cmp
incl
add
fcmovnbe
push
and
pop
insl
jl
adc
cmp
insb
pop
add
fadds
outsl
cmp
push
test
lahf
push
push
jne
out
test
mov
lock
iret
sbb
adc
add
pop
test
adc
in
in
lods
jno
push
subl
mov
xlat
xchg
add
pop
ret
mov
test
pop
sti
adc
fdiv
scas
in
in
mov
xor
add
mov
cmp
mov
mov
jb
out
xchg
out
add
add
ret
cmp
sub
add
push
jno
xchg
lcall
and
les
cmpsl
pop
ret
or
jns
cmpsb
or
push
add
sbb
in
fsts
xchg
lcall
aad
test
cld
xor
icebp
jnp
jp
call
insl
pop
mov
fwait
arpl
pop
inc
inc
add
push
or
movsl
dec
xchg
push
jp
into
mov
adc
dec
or
scas
xor
lret
cmpb
adc
adc
push
arpl
pop
jmp
dec
xchg
cs
jg
mov
inc
loopne
dec
xchg
sbb
fimull
shll
mov
pop
add
inc
cmp
dec
push
testl
setge
adc
mov
and
shll
loopne
sbb
dec
cmp
fwait
xchg
les
push
or
pushf
out
jno
xor
adc
inc
mov
data16
es
lods
jge
outsb
or
mov
ja
ja
lea
adc
jnp
jl
into
outsb
dec
dec
repz
fbstp
imul
enter
mov
xchg
xchg
adc
mov
xor
cld
push
es
push
xlat
and
cli
pop
adc
stc
popf
inc
es
dec
xlat
cmpsb
xchg
sbb
das
mulb
repnz
flds
outsl
sbb
ficompl
push
pop
mov
cmpsb
popf
loop
pop
mov
cld
mov
mov
call
inc
add
cs
das
jae
in
bound
lahf
cmp
jecxz
push
inc
mov
mov
inc
pop
pop
mov
imul
aam
sub
ret
jbe
js
std
rcrl
out
add
daa
in
icebp
add
xor
inc
rep
js
fsubl
sbb
scas
cmp
jmp
jno
cwtl
mov
mov
sub
xchg
cli
cmp
test
in
push
sbb
test
cmpl
xchg
push
les
mov
dec
xchg
addr16
jl
mov
lret
lds
sub
sub
movl
or
xor
sbb
or
bnd
sbb
rcl
xchg
pop
scas
dec
dec
mov
xchg
push
loop
inc
sbb
arpl
inc
sub
mov
xchg
inc
scas
jecxz
jmp
jne
pop
ljmp
lcall
or
lcall
neg
jp
lods
jle
mov
sar
mov
or
cmc
dec
aaa
mov
adc
push
fs
std
int3
pop
add
add
inc
int
jb
loope,pn
or
js
fcomps
and
xchg
movd
adc
pop
je
push
jmp
loopne
jb
ret
jmp
jmp
or
cmp
sub
or
das
call
testb
stc
pop
pop
ja
into
pop
pop
push
bound
mov
ds
aad
or
test
lcall
lret
jmp
test
mov
pusha
popf
rclb
outsl
lahf
aam
call
push
jmp
and
test
mov
add
sbb
jbe
out
mov
int
mov
mov
sbb
mov
pop
jle
lahf
ret
sbb
in
mov
push
mov
rcrl
mov
popf
push
std
lcall
xchg
call
inc
imulb
shlb
fidivrs
divl
clc
adc
add
sti
or
jmp
cmp
test
das
pop
xchg
imul
sbb
js
mov
mov
jp
js
pop
cld
add
mov
sub
lock
xchg
mov
pusha
pusha
cmp
sbb
sub
mov
or
push
mov
test
out
pop
add
in
adc
adc
push
dec
jns
gs
pop
add
jb
add
adc
xor
mov
lahf
pop
mov
pop
push
iret
jne
in
sub
dec
jo
clc
inc
loopne
add
shlb
sbb
fstl
stos
les
aaa
push
dec
inc
sub
loopne
es
mov
ss
aas
roll
test
outsb
mov
adc
xchg
mov
adc
shrb
mulb
push
dec
jb
int
sub
pop
lods
sbb
dec
mov
pop
pop
aad
xchg
pop
ret
pop
shlb
and
push
js
cmp
adc
xchg
inc
mov
out
insb
sbb
sbb
adc
sub
add
push
or
lcall
push
movsl
mov
cmpsl
stos
out
mov
push
pop
dec
ljmp
xor
sarl
popf
inc
rol
js
movsb
shl
aas
mov
std
jb
cmp
js
int
xlat
xchg
xlat
or
or
or
push
rcl
stos
xor
stc
dec
xchg
les
pop
xchg
mov
xchg
ret
cmp
jo
cmp
into
and
loopne
arpl
mov
negb
adc
stc
lods
sarl
outsb
or
push
or
push
cmp
lods
push
adc
das
fisubrs
imul
call
xchg
in
mov
inc
ljmp
pop
mov
add
xor
jmp
xchg
jnp
mov
lods
into
repnz
outsb
jecxz
xor
out
mov
imul
jno
pop
add
cmc
mov
in
cwtl
add
or
cmc
sub
adc
mov
std
cmp
mov
jmp
fsubrl
jnp
and
push
in
inc
movb
cmp
mov
aas
into
dec
or
incb
push
push
add
fucomip
push
sahf
push
aas
mov
add
call
js
in
xor
cwtl
pop
fsubs
mov
lods
mov
sub
int3
shlb
shlb
push
and
bound
add
inc
enter
popf
fistl
push
push
fistpl
lock
mov
test
in
cmpsb
and
aad
ja
mov
adc
push
out
fisubrs
negl
mov
mov
pop
cld
adc
push
and
cld
mov
mov
call
cmpl
xchg
dec
fcomp
cmpsl
or
ss
fcmovnu
pop
dec
addr16
xor
push
mov
hlt
test
movl
in
stos
xor
fldcw
inc
movsl
repnz
cmp
ficomps
lahf
jp
in
lods
aam
mov
jns
adcl
inc
cmp
jge
sbb
repnz
xchg
sub
iret
pop
gs
lret
cmp
mov
pop
ss
push
xor
adc
lret
or
in
adc
sbb
mov
das
andb
cmp
mov
push
sub
fisttps
add
push
dec
inc
outsl
push
sub
mov
cmp
iret
cmpsb
lahf
lea
fsubr
imul
sub
ss
test
add
lods
dec
xchg
test
lahf
leave
cmp
ret
inc
fsts
stos
xchg
loope
cs
sbb
sub
dec
test
cmp
popa
jae
mov
bound
add
loopne
sarl
jmp
push
or
lahf
xor
jmp
mov
and
push
movsl
adc
lock
mov
sbb
mov
push
lcall
inc
push
scas
adc
leave
in
lock
leave
imull
pop
pop
or
mov
ret
inc
jle
xorl
fsubs
jne
iret
or
mov
popa
pop
mov
inc
add
rcrb
cmp
cld
mov
push
pop
jge
popa
push
stos
out
adc
stc
cmp
icebp
rorb
jle
cs
add
pop
push
add
push
mov
adc
dec
adc
push
dec
push
inc
lds
ljmp
out
arpl
movsb
rcr
ds
loop
js
adc
sbb
je
test
push
inc
les
je
pop
aam
loopne
dec
push
into
sub
jo
sarb
dec
xchg
pop
jecxz
and
push
ljmp
lret
iret
cmpsb
mov
and
mov
cwtl
mov
mov
fnstcw
jecxz
mov
jg
idiv
mov
insb
lcall
je
adc
rol
roll
dec
push
scas
lret
fidivl
test
in
push
dec
outsb
xchg
mov
repz
jo
push
sub
xchg
sbbl
data16
aad
jge
dec
fs
cmc
rcrb
or
push
pop
mov
loopne
and
shll
xor
lret
xchg
mov
orl
mov
cmp
mov
bound
or
jne
cmpsb
loopne
shl
cmp
adc
mov
fwait
cltd
sarb
mov
push
pop
mov
mov
addr16
mov
mov
dec
stos
push
ss
addb
imulb
out
mov
ret
int
fdivl
or
add
hlt
test
js
std
in
mov
ds
push
aam
movsl
mov
add
insb
cmp
mov
lcall
mov
adc
cmpsb
inc
mov
cmpsl
dec
mov
movsl
and
js
mull
mov
mov
enter
jb
iret
insl
mov
scas
filds
call
scas
mov
pop
faddp
dec
ret
nop
jno
aas
jo
push
daa
dec
add
cmp
mov
bound
or
mov
cmpsb
inc
cwtl
xchg
add
dec
shr
aad
dec
cli
push
cltd
rep
add
lret
jge
and
adc
jmp
fidivs
or
adc
out
call
sub
mov
aam
scas
cmpsb
ret
cs
jno
jbe
lcall
mov
pop
les
add
dec
and
cmpsb
movsl
subb
je
xchg
pop
out
mov
jne
jg
jmp
pop
mov
inc
mov
xchg
into
loopne
jb
sub
push
xchg
lods
jg
inc
add
fbld
jae
adc
jne
dec
loopne
decl
push
and
fwait
sbb
adc
jmp
jno
mov
xchg
in
roll
inc
mov
call
sub
addr16
jg
pusha
stc
pop
xor
addr16
inc
adc
mov
inc
addr16
test
mov
adc
ficoml
mov
adc
sarb
out
mov
call
push
iret
hlt
out
aad
add
mov
cmp
bound
inc
xchg
int
sbb
pushf
pop
popa
adc
mov
and
jno
insl
popa
cmp
prefetch
jle
sbb
mov
stc
mov
ljmp
mov
inc
adc
cmp
movsb
imul
cli
jg
xor
add
sub
fiaddl
movsl
roll
stc
inc
or
dec
cmpsb
negb
int
sub
loop
jecxz
movsb
cli
test
cmpsl
loopne
out
notl
mov
hlt
int3
inc
xor
xchg
das
andb
test
les
nop
and
xor
bswap
lods
sub
stc
punpckhdq
insb
sti
sahf
xor
data16
push
or
push
test
fmull
call
sbb
cmp
pushf
xlat
pusha
inc
popf
ja
jmp
adc
add
jne
lret
sbb
pop
add
and
pop
jne
mov
pop
cmp
xor
inc
push
push
add
div
ss
xchg
adc
ljmp
mov
dec
flds
fistps
ret
in
cli
loop
test
aam
push
mov
xchg
lods
in
outsb
pop
dec
outsb
inc
mov
dec
fsubs
adc
sbb
mov
sub
sub
mov
out
pushl
mov
popa
lcall
das
sbb
push
mov
iret
hlt
daa
ja
mov
mov
outsl
lret
mov
out
popa
lcall
inc
in
mov
and
and
mov
push
adc
add
pusha
shlb
arpl
icebp
add
cmp
aam
roll
cli
adcb
xor
or
outsb
dec
or
pop
lahf
dec
test
lret
jl
test
add
out
jns
or
out
mov
xor
lret
adc
popf
or
ss
sbb
mov
cltd
nop
and
mov
imul
dec
sbb
das
xchg
cmp
and
ret
out
popw
mov
cltd
jbe
sarb
pop
psubsb
in
hlt
cltd
push
cmp
gs
jmp
imul
adcb
xor
mov
cs
adc
xor
or
add
sbb
mov
out
scas
xchg
cmc
sbb
lret
roll
test
es
scas
test
push
test
sbb
inc
push
mov
push
xchg
ret
xchg
negl
sub
mov
fdivrp
ja
xor
cmc
into
xor
mov
pushf
bound
jb
jp
mov
jno
fisttps
dec
js
xchg
cmp
jle
xor
leave
repnz
push
rcrb
xor
ficomps
int3
xchg
xchg
or
in
xchg
fimull
inc
imul
stos
subps
push
xor
push
xchg
mov
shrl
cmp
icebp
mov
and
jmp
adc
inc
jae
inc
pusha
int3
cmpsl
sbb
inc
and
or
and
loopne
pop
testl
inc
adc
movaps
mov
lea
pop
mov
jb
fstcw
jne
jmp
scas
jle
imul
lea
sti
dec
jno
push
sbb
xor
out
inc
jo
fnstenv
ja
push
pop
test
mov
xchg
repz
mov
sbb
orb
stos
pop
push
pop
aaa
pusha
mov
test
std
aaa
mov
addl
outsb
push
ds
scas
push
adc
pop
cmp
lahf
bound
cmp
push
mov
cmc
shll
dec
sbb
lea
stos
ret
mov
shlb
rcl
mov
lock
mov
in
movsl
add
or
ret
movsl
push
ja
mov
addl
and
adc
pusha
les
push
xor
adc
add
test
mov
mov
test
adc
sbb
enter
mov
jmp
mov
aad
mov
mov
imul
pop
cmp
leave
lds
addl
xchg
psubq
loopne
push
nop
loope
lock
sub
pop
mov
shl
aam
pop
ret
mov
test
les
mov
mov
adc
add
in
fidivrs
addr16
cmp
and
fisubs
test
fidivs
dec
xor
insb
mov
xchg
mov
shll
mov
cld
mov
out
push
ds
outsb
dec
xlat
jo
test
inc
mov
jl
jbe
or
add
in
push
fnstenv
xchg
repz
test
xchg
pop
pop
cld
fidivs
loopne
xlat
insl
and
pop
and
push
mov
xor
fistpll
fstps
cmp
in
icebp
bound
in
cltd
test
ja
xchg
sysexit
int3
push
sbb
call
es
pop
push
inc
mov
push
pop
xor
add
xor
sbb
push
insb
test
push
mov
xor
outsl
or
jmp
jecxz
sbb
add
xor
mov
xchg
iret
mov
test
add
mov
or
lock
mov
lret
sub
sti
aad
aad
adc
cmp
inc
jno
inc
mov
pop
mov
adc
push
dec
inc
push
push
cmp
cli
sub
add
push
scas
xor
lret
ds
adc
inc
push
fs
nop
jb
sbb
pop
shr
mov
repz
mov
cmp
in
xor
in
jle
imul
mov
add
sbb
ljmp
cmp
sahf
and
xchg
fstpl
in
xor
sahf
sbb
test
xor
jp
xchg
sub
out
xor
add
mov
ljmp
pop
arpl
inc
mov
and
shl
faddl
xor
xor
ds
popa
mov
xor
scas
pop
aas
cwtl
cmc
popa
imul
ja
mov
xor
adc
xor
add
cmp
jmp
push
fldcw
sub
call
push
je
lcall
andl
inc
cs
les
in
xchg
xchg
inc
leave
andl
or
inc
xlat
ret
dec
popf
in
cld
movsb
dec
mov
push
and
mov
orb
pushl
mov
pop
inc
push
mov
pop
pop
inc
rol
ret
xor
push
jecxz
sub
and
mov
xchg
xor
jle
sbb
in
lret
inc
mov
xchg
jae
jns
jge
lcall
pushf
popf
int3
out
rcrl
mov
hlt
outsl
lahf
xchg
cmp
aam
daa
cld
xor
aad
in
pushf
push
rcl
push
punpckhbw
xchg
push
jbe
dec
xchg
int
mov
push
or
cmp
std
stos
jbe
stos
cmp
shlb
lret
mov
cmpsl
fcomp
or
pop
and
mov
inc
jmp
cmpl
cld
push
push
repz
push
lcall
mov
mov
inc
cmp
mov
addr16
lock
jecxz
xor
and
test
push
negb
and
inc
inc
adc
xchg
lcall
in
lret
push
cmp
pushf
shlb
pushaw
sahf
pop
fcompl
hlt
fs
add
fdivp
cs
jp
test
and
and
xchg
or
call
stos
sar
fmull
sub
lret
push
pushf
in
fwait
and
gs
xchg
sbb
dec
out
test
xchg
jbe
adc
es
sbb
loope
add
jge
in
fistpl
xor
pop
mov
and
inc
lret
and
dec
addr16
lea
sti
call
arpl
cmovo
add
push
or
push
push
push
arpl
subl
lds
mov
sub
hlt
mov
inc
out
pop
mov
mov
inc
mov
in
enter
inc
mov
adc
in
jmp
pop
xchg
xchg
cltd
lcall
jb
push
arpl
addr16
push
pop
inc
xchg
ljmp
add
cmp
jb
xchg
jp
inc
gs
scas
aam
sahf
mov
xchg
xchg
iret
xor
fsts
push
jmp
movsb
pushf
push
in
cltd
xchg
movsl
mov
ret
xor
mov
add
add
daa
in
add
dec
jns
int3
cmp
imul
data16
inc
and
xchg
xor
jmp
insl
lret
jo
sbbb
xor
scas
sub
cmpsb
mov
xchg
stos
jb
loop
rcrb
push
popf
and
push
cmc
mov
push
adc
out
aaa
das
push
mov
sbb
adc
xchg
push
adc
js
push
fisubrl
insb
jmp
fld
movsl
xchg
out
or
push
mov
fs
jp
mov
pavgw
cmovne
jle
negb
cli
mov
cltd
or
shl
je
xor
lahf
cmpsb
ret
mov
pop
cli
repz
jns
push
lds
cmpsb
push
dec
test
cltd
jp
mov
mov
js
or
lods
mov
je
adc
or
mov
cmp
dec
imul
or
dec
mov
in
add
push
adc
pop
jne
mov
sub
fsub
ret
je
mov
fistps
pop
cld
scas
and
mov
dec
jmp
shl
mov
push
jp
test
and
addr16
incb
xor
lcall
push
cmp
add
cmpb
outsb
inc
cmp
repnz
xor
and
jno
sbb
ficomps
adc
pop
pop
iret
mov
xchg
xor
and
fildll
ss
jb
rcr
xor
test
inc
mov
aas
incb
enter
sarb
cmp
sbb
movsl
sbb
popa
jo
mov
push
mov
aad
idivb
cmpsb
or
loope
sub
dec
sarl
andb
and
add
test
arpl
inc
mov
rcrb
add
stos
cli
stc
mov
lret
stc
and
mov
pushl
sub
sub
jmp
xor
dec
dec
cmpsl
xor
mov
push
gs
jo
lret
lcall
mov
stos
andl
or
sub
add
dec
mov
stos
dec
nop
jae
pop
pop
int3
inc
ljmp
repz
leave
out
or
mov
inc
or
add
adc
enter
addb
in
hlt
clc
pop
ficoml
jne
mov
test
roll
xchg
mov
loopne
and
push
jmp
jp
inc
add
call
sub
cwtl
iret
mov
neg
xchg
in
xchg
add
stc
and
sbb
add
mov
mov
fadds
int
stc
imul
mov
inc
push
inc
push
jecxz,pt
lods
in
imul
popf
jnp
jne
bound
pop
in
repz
ret
repnz
lret
cmpsl
adc
enter
add
ja
inc
sbb
inc
fs
mov
push
push
push
jo
jle
loope
js
scas
out
dec
mov
repz
std
lahf
ljmp
inc
pop
icebp
mov
in
mov
in
vpunpckhdq
fwait
xchg
adc
movsb
dec
inc
mov
addr16
arpl
push
or
notb
dec
inc
pop
mov
fistpl
inc
aas
jp
or
dec
mov
inc
sbb
cltd
xchg
aas
and
pusha
imul
adc
dec
enter
cmpsb
in
test
call
xchg
lds
gs
xlat
imul
add
add
sub
out
insl
jmp
sar
sbb
call
add
outsb
pop
add
std
xchg
add
aaa
add
mov
cmp
push
dec
and
and
add
and
outsb
fnstenv
test
enter
pop
test
adc
sbb
adc
repz
xor
loopne
out
sahf
xchg
fcmovnu
ljmp
lahf
add
je
pop
mov
jno
int
fsubs
out
jp
xorb
bound
mov
adc
push
in
push
mov
gs
dec
dec
lret
cmp
cwtl
cmpsb
jb
push
outsb
dec
mov
pop
sub
jb
je
mov
or
adc
sbb
mov
adc
push
pop
mov
in
sub
jns
in
outsl
mov
jg
repnz
jp
push
add
lock
xchg
add
or
mov
sbb
and
sbb
xor
and
js
adc
into
loopne
xor
pop
mov
lea
cmp
ret
stos
fs
mov
mov
in
iret
or
repnz
fbstp
xchg
ret
mov
xchg
jns
cltd
xchg
and
push
setge
pop
jb
jns
sub
jns
dec
jl
pop
test
jge
call
testl
pop
xlat
sbb
sub
ss
sarl
xchg
in
pop
hlt
jle
add
mov
adc
rcrb
mov
orb
sub
stos
lea
int3
ljmp
pop
mov
mov
lahf
jge
xor
adc
repz
cwtl
stos
lea
and
dec
mov
filds
stos
incl
sub
jo
and
cltd
pop
dec
push
push
call
stos
mov
pop
mov
cltd
mov
inc
dec
imul
cmpsb
or
test
push
cmp
sub
addr16
cmpsb
icebp
mov
cmpsb
lret
ret
lret
jg
mov
mov
xchg
fs
and
lret
in
popa
daa
pop
sub
pop
jo
dec
mov
ffree
imul
mov
ja
fimuls
dec
ss
aaa
mov
pushf
lea
pop
push
mov
cmp
cli
mov
push
cmp
xchg
jno
add
es
mov
adc
rol
bnd
scas
or
add
mov
cmp
cmpsl
or
lods
sub
adc
stos
inc
adc
and
cmp
outsl
mov
scas
loope
xchg
adc
pop
push
std
in
loope
popa
mov
arpl
imul
out
or
enter
xchg
lds
jnp
imull
or
mov
and
test
push
cwtl
jns
insb
in
add
xchg
ret
mov
and
out
mov
sarl
in
arpl
rep
nop
pop
pop
ss
mov
js
aad
push
jmp
repnz
inc
rcrl
pusha
dec
lods
jno
ljmp
repz
mov
sub
lea
push
mov
icebp
push
test
mov
dec
jmp
test
icebp
fwait
jge
test
jno
xchg
push
test
mov
icebp
mov
dec
mov
jecxz
sbb
jo
mov
pop
xchg
cmpsl
or
inc
mov
lds
add
popa
fistps
jecxz
fucomip
out
add
mov
pop
push
out
mov
push
fisubrs
add
addr16
repz
dec
in
ss
push
mov
xor
leave
and
push
mov
cmp
mov
scas
push
ljmp
test
jns
stos
fwait
and
je
neg
add
rcrb
dec
call
mov
enter
ficoms
fstpt
andb
test
xchg
mov
int3
push
mov
idiv
insb
flds
jns
push
mov
adc
push
dec
mov
sbb
xor
fisubrs
jno
sahf
lock
outsl
movsl
pop
lret
xor
and
push
or
andb
mov
mov
mov
in
and
inc
mov
sahf
xchg
adc
mov
adc
lahf
jbe
js
data16
cmpsl
or
popa
adcl
stos
mov
lret
inc
test
adc
mov
mov
ds
orl
pop
add
lahf
sub
mov
mov
in
dec
cmp
pop
and
movsl
jge
popa
jg
aam
pop
push
push
or
pop
xchg
sub
mov
clc
fadds
ljmp
scas
jmp
popf
rcrl
pop
add
aad
popa
add
jbe
icebp
or
mov
fidivrl
fildll
loop
es
xchg
cs
mov
pop
aam
inc
insb
inc
sbb
out
lods
cmp
jb
inc
cmovbe
in
xor
jmp
out
dec
xor
loopne
inc
cli
cs
xchg
sub
xor
inc
xlat
mov
dec
pop
ror
fistpl
sahf
lock
repnz
rolb
jge
push
or
xor
frstor
jo
pop
fisubl
cmp
ds
cmpsb
outsl
and
leave
xchg
pmulhuw
fldcw
sub
and
loope
jp
mov
or
push
rolb
scas
in
inc
clc
lods
lcall
pop
mov
aas
mov
sub
pop
decb
mov
addr16
inc
pop
lret
cmp
movsl
jae
ficoms
icebp
mov
pushl
dec
push
jmp
inc
pusha
sbb
test
xchg
call
adc
mov
cmp
jne
push
adc
jle
cli
dec
and
sbb
xchg
fsub
fs
fstp
mov
mov
test
out
push
push
cs
xlat
sub
pop
pop
mov
stos
push
mov
loopne
repz
mov
inc
outsl
and
vpsrlq
xor
jns
xchg
insb
cmp
jo,pn
xor
and
cld
sub
test
inc
sub
imul
les
int3
shlb
fbld
xor
push
enter
add
fildll
icebp
fcomps
xor
sar
pushf
inc
pop
sbb
or
sti
sbb
push
inc
dec
xor
fcomip
xor
sbb
rol
incl
or
xor
shll
push
lds
dec
xor
xor
inc
xor
xchg
mov
lea
cmp
sub
fistl
das
dec
leave
fs
nop
shl
push
das
test
dec
insl
mov
push
int
lret
jle
icebp
xchg
shll
xchg
sbb
pop
setns
push
es
xor
mov
ja
fstpl
test
push
fstpl
loope
popa
push
leave
lea
add
mov
mov
fistl
add
add
sbb
sub
out
pop
jmp
in
pop
jo
les
and
push
loop
daa
mov
imul
insb
out
loopne
outsb
push
out
xor
ret
je
cmpsl
jo
jae
push
cmp
xchg
jp
stos
mov
shll
nop
cmp
cld
mov
jmp
sub
out
iret
stos
push
div
in
jle
dec
dec
bnd
dec
test
popf
mov
mov
xor
push
rcrb
add
popf
fcmovnbe
rorb
xlat
subl
adc
int
and
push
in
xchg
pop
mov
loopne
mov
push
out
imul
push
sub
and
cmpb
and
xchg
xchg
adc
call
in
and
bound
fwait
pop
mov
fimuls
mov
xchg
out
or
out
shlb
pusha
push
pop
lcall
inc
mov
sbb
mov
imul
cmp
mov
ret
mov
jecxz
jb
sbb
mov
xchg
cmp
les
loopne
push
push
adc
mov
mov
je
sub
mov
lock
dec
xchg
sub
and
pop
jbe
fs
dec
mov
mov
push
sub
fidivl
xchg
cltd
mov
jp
adc
jg
and
shrl
das
daa
mov
cwtl
inc
xchg
js
aad
enter
add
test
mov
inc
and
inc
add
pop
mov
gs
int
or
adc
outsb
mov
xchg
hlt
dec
sbb
stc
lcall
or
gs
iret
addr16
xchg
push
lods
sahf
int3
mov
push
shrb
mov
xchg
pop
xchg
inc
cwtl
ds
pusha
cltd
adc
mov
stos
add
pop
loop
pop
notl
stos
cld
xor
mov
ret
cli
sub
cmc
movsl
mov
adcl
pop
dec
in
cli
mov
sub
rol
pop
lock
ja
sub
insl
pop
inc
push
sbb
test
mov
scas
cmp
test
push
enter
pop
mov
cmpsb
mov
sbb
sub
and
movsb
jecxz
adc
js
loop
lcall
xchg
adc
pop
or
and
ljmp
lcall
dec
in
lret
pop
sub
data16
xor
dec
nop
addr16
mov
int
pusha
scas
cmp
mov
cli
into
jb
mov
xchg
stos
gs
dec
iret
aas
loop
xor
lahf
adc
xor
mov
test
scas
daa
sbb
into
xor
xchg
fidivrs
add
mov
frstor
mov
cmpl
stc
jp
pop
pushf
lret
cs
out
xchg
insb
les
aad
adc
shll
push
jns
lahf
clc
rorl
mov
mov
xor
sarb
mov
je
sub
sub
loope
jbe
inc
mulb
xor
push
pop
stc
scas
jle
lds
fiaddl
sub
xlat
lods
xchg
push
iret
add
test
xchg
push
das
insl
push
sub
inc
cmp
sub
leave
mov
adc
adc
test
mov
nop
and
push
cs
push
adc
cltd
cltd
mov
push
rorl
lods
sub
js
inc
push
testl
rcll
xor
cltd
inc
xor
xchg
mov
clc
hlt
mov
xor
and
fldcw
repz
inc
mov
mov
cmpsl
dec
push
mov
hlt
pop
xchg
dec
adc
xchg
stos
out
dec
dec
xlat
mov
add
sub
test
cmp
outsb
mov
cmp
xchg
push
mov
pop
jmp
sti
push
and
mov
adc
lret
out
ret
jmp
inc
rcrb
dec
rcll
push
aas
cmp
test
insl
jnp
in
mov
or
xlat
call
je
out
fmuls
daa
mov
dec
push
and
in
cs
arpl
mov
je
mov
pop
sbb
jb
icebp
mov
pop
arpl
dec
mov
aas
jae
pusha
xor
ret
xchg
cmp
jne
cmpl
sub
cmp
jp
jg
testb
mov
push
xlat
xchg
loopne
fwait
push
pop
mov
pop
jl
frstor
hlt
push
mov
icebp
cmpsl
adc
ret
out
fldt
cmpsl
cwtl
scas
push
sbb
sbb
test
test
imul
shl
xchg
inc
adc
cwtl
dec
mov
adc
es
out
adc
ds
cld
mov
cld
xlat
mov
les
add
push
lds
and
push
mov
stos
xchg
movsb
imul
mov
loopne
jne
es
sub
push
lea
sahf
inc
sbb
xchg
push
dec
lret
xlat
cmp
ja
outsb
test
lret
pop
dec
jmp
push
nop
stos
jne
icebp
mov
jno
or
in
dec
jl
je
push
fdivrs
leave
leave
cltd
mov
pop
sbb
add
jb
lods
nop
adc
outsl
mov
stos
ret
mov
mov
inc
inc
mov
in
shrb
mov
stos
fs
pushf
adc
iret
fidivs
in
xor
popa
ss
shl
sub
ds
cmp
aam
cmp
pop
and
sbb
adc
into
les
sub
jg
fdivl
rcrl
lods
fsubrl
mov
mov
lcall
loopne
lock
lods
gs
lret
in
int
xchg
push
lahf
jne
push
and
jecxz
inc
scas
leave
or
pushf
jg
push
xchg
loop
sbb
scas
jns
gs
or
fbld
xchg
push
jae
cmp
movsl
out
mov
mov
or
or
lock
cmp
pop
pop
cmp
fsubs
out
mov
jp
or
fwait
push
iret
pop
ss
mov
inc
insb
jnp
and
jo
imul
jo
mov
lahf
and
adc
lret
pop
jmp
xor
cs
js
aaa
sahf
mov
jmp
add
pop
ljmp
imul
xchg
lods
iret
mov
movsl
mov
cld
pop
cwtl
push
lea
jl
cwtl
dec
cld
mov
push
jg
add
cmp
cmp
pushf
push
cmp
stos
sub
mov
stos
adc
cwtl
stos
add
cmp
mov
in
mov
loopne
mov
outsb
pop
add
dec
xchg
jmp
mov
jp
cs
sub
jge
pop
iret
xor
ret
stc
das
xchg
inc
jp
lcall
jno
inc
xor
pop
and
adc
push
sbb
cltd
or
int3
mov
sbb
sarl
aaa
lock
mov
jecxz
inc
jge
mov
cmpsb
inc
mov
mov
or
cli
sbb
push
xchg
sbb
ffreep
xor
cli
mov
sub
cmp
movsb
bound
or
hlt
xchg
sub
fs
cs
bound
mov
test
aas
psllq
stc
cmp
loop
inc
or
cli
push
push
iret
xor
out
daa
dec
sbb
add
lea
subb
mov
std
or
pusha
pop
dec
sub
bound
xchg
sahf
xchg
mov
pushf
ja
adc
icebp
je
cmpsl
cmpsb
mov
push
insl
xchg
inc
and
sbb
cmp
dec
push
icebp
cmp
enter
cmp
fs
cmp
xor
or
mov
repnz
push
add
out
scas
cs
push
xchg
inc
aas
imul
es
lcall
adc
sbb
sub
xchg
xor
bound
add
cmp
pop
gs
stos
adc
jne
dec
sub
mov
fstp
jmp
xor
push
jns
xchg
sub
enter
daa
pop
scas
ja
jmp
clc
mov
insl
loop
cmp
xchg
ljmp
xchg
xor
sbb
push
int3
shrd
cmp
out
enter
je
inc
mov
idivl
es
inc
stos
fistpl
ret
push
or
in
out
int
frstor
xor
mov
dec
cmp
adc
out
fstpl
cmc
test
lods
and
add
dec
dec
pop
xor
dec
mov
shll
dec
out
adc
repz
sbb
sbbl
mov
movsb
jge
mov
sub
dec
jno
fildl
mov
pop
inc
std
out
dec
or
jnp
lret
sbb
fwait
jno
push
mov
imul
mov
inc
xor
loop
lcall
arpl
mov
into
mov
jbe
lea
cld
fisttpll
outsb
pushl
and
sub
dec
adc
fs
adc
push
push
mov
mov
aaa
sbb
movsl
jmp
xchg
bound
stc
ret
cmp
aam
cmp
mov
rcrl
daa
sarl
push
pop
mov
leave
cmp
fwait
push
push
gs
and
sub
mov
cmp
dec
add
imul
sbb
add
sahf
pop
movsl
sti
lods
sub
push
cmp
xor
pusha
call
mov
add
jns
push
mov
dec
inc
sub
xor
add
xchg
mov
out
cmpsl
cld
or
jb
push
aas
jne
mulb
test
mov
jp
shll
xor
pop
cld
cli
sbb
jb
mov
bt
clc
mov
xlat
jo
xor
cwtl
sub
mov
add
fmul
ja
test
rcll
hlt
mov
nop
and
mov
push
fucom
or
enter
jg
jmp
mov
fs
ljmp
jg
insl
jl
movq
inc
ja
imul
jne
lds
xchg
cmp
roll
adc
cmp
or
bound
cmp
cmp
out
inc
popa
jae
push
pusha
add
mov
pop
js
loope
popa
rol
sahf
daa
push
out
enter
stc
fwait
sub
mov
outsb
cwtl
imul
aad
mov
jae
sbb
imul
mov
fldl
or
pushf
cltd
fistpl
arpl
fucomi
gs
sti
fs
push
pop
ds
xor
pushf
jecxz
mov
outsl
jbe
sbb
loop
mov
rorl
mov
fistl
addr16
imul
fcmovbe
iret
repz
jns
or
int
out
fcoms
rcll
jbe
loop,pn
mov
or
outsl
pop
fwait
fwait
mov
test
inc
push
popf
hlt
or
dec
sub
xchg
into
inc
pop
jle
cmp
pop
lods
hlt
xor
sbb
rcr
jl
dec
xchg
jb
mov
loopne
sub
enter
test
inc
mov
lods
dec
xor
imul
pusha
sub
push
cmc
arpl
cmp
into
cmpsb
addr16
das
out
outsb
lret
lahf
rorb
pop
push
es
aam
mov
fsubs
test
sub
or
xlat
jmp
mov
inc
hlt
push
sub
repz
mov
mov
pop
sbb
mov
lahf
lret
and
xchg
mov
jbe
and
stc
in
cld
rorb
or
or
leave
mov
mov
xchg
jmp
addr16
sub
or
and
pop
addr16
adc
push
ret
scas
rcrb
mov
inc
ljmp
ret
cld
sarl
cmp
data16
mov
shrl
out
jb
int3
in
push
push
jmp
xor
or
out
out
cmpsb
pop
cmpsb
xchg
repz
jge
fs
or
push
repz
jge
ret
std
sbb
add
inc
loope
decl
push
ljmp
ja
xor
xor
adc
pop
add
addb
nop
push
add
out
jns
dec
into
inc
sub
pop
push
cmp
sbb
or
aas
in
in
mov
mov
or
sub
rorb
ficoml
sbb
jb
shl
aad
or
cmova
ret
mov
ds
cmpsl
mov
shrl
out
cs
stc
out
sub
cmp
mov
mov
insb
ficoml
xchg
cwtl
and
mov
mov
fldcw
dec
sbb
mov
jge
lods
and
sahf
mov
xor
adc
and
dec
rorb
es
flds
jp
stos
adc
fisttps
pop
outsl
test
ja
sub
jge
in
mov
hlt
fcomi
xchg
add
divb
jmp
and
into
fisttpl
sahf
mov
sarl
in
enter
and
add
add
sub
sbb
jnp
lret
nop
pop
cld
sarb
outsb
pop
add
add
popf
or
aas
cmp
into
pop
push
stc
sub
push
mov
cmp
pushf
shlb
test
pop
cmp
sub
stos
jo
push
cmc
mov
andl
xor
cmp
fwait
mull
mov
bound
std
mov
bound
push
adc
arpl
clc
pop
inc
xchg
gs
mov
ss
in
es
or
sarl
in
lds
sbb
mov
iret
imul
stos
pop
in
dec
arpl
jmp
fwait
repz
outsl
pop
enter
mov
sti
inc
dec
jmp
inc
lods
ja
mov
mov
cmp
cmp
jg
movsb
xchg
in
inc
in
movnti
add
stc
aad
icebp
xchg
cmpsl
movsb
in
or
sbb
or
imul
add
sub
mov
and
outsl
sbb
mov
jnp
xchg
flds
push
rol
push
mov
xchg
adc
cmpsb
lea
lods
push
lcall
scas
jbe
or
rorb
out
mov
rorb
loopne
dec
push
cwtl
movsb
lea
and
jne
das
rorb
pop
lods
push
pop
ret
mov
and
addr16
pop
mov
jns
in
fisubs
xor
sub
cmpsb
ret
inc
in
mov
xchg
or
data16
fimull
ss
arpl
enter
outsb
xchg
out
or
out
and
cs
mov
push
cwtl
data16
mov
mov
sarl
xchg
cmp
mov
xchg
adc
cwtl
adc
xchg
testb
jle
mov
mov
popf
dec
adc
aaa
arpl
push
xor
insl
aas
push
xchg
add
adc
push
int
sub
adc
lea
in
test
ljmp
repnz
sub
xchg
std
mov
jp
pushl
push
xor
mov
mov
jae
mov
fwait
mov
dec
mov
lea
xor
loop
andl
mov
lcall
lea
push
loop
mov
and
fwait
insl
adc
es
iret
mov
sbb
mov
mov
dec
push
or
std
jge
inc
jp
enter
je
movsl
sub
pop
mov
cld
push
outsb
aaa
add
push
pushf
stc
add
adc
mov
sub
inc
les
cmp
call
jno
cmpsb
adc
cmp
mov
loopne
inc
mov
es
mov
sbb
ficomps
xchg
dec
lahf
and
bound
jle
sbb
into
sbb
mov
repz
sbb
mov
ret
negb
fisttpll
in
loopne
cmpsb
mov
mov
insb
inc
and
or
add
cmc
sbb
lods
sbb
aam
pop
lret
cmc
shrl
pop
in
mov
push
mov
xchg
ret
shrb
sub
jmp
ret
sbb
sub
inc
mov
inc
jl
xchg
test
test
icebp
sbb
jmp
add
pop
mov
push
enter
mov
in
std
xor
xor
rcll
dec
adc
std
or
jno
xchg
jecxz
movsb
mov
in
xlat
mov
test
aad
aaa
push
ret
sbb
hlt
cmpsl
adc
movsl
adc
adc
inc
mov
movl
cmp
xor
ret
aaa
push
sbb
cmp
sbb
xchg
outsb
or
or
gs
jnp
jl
pusha
out
pop
mov
shlb
or
xor
dec
out
movsb
xchg
and
mov
cs
jmp
mov
mov
jns
jp
arpl
xchg
sbb
sbb
clc
mov
xor
mov
mov
insb
int
arpl
ret
arpl
inc
sub
cltd
insb
push
imul
jb
pop
mov
push
or
lods
adc
out
or
into
jne
cmpsb
inc
sbb
add
xchg
dec
or
xor
sbb
ret
jb
inc
je
pop
cs
jns
cltd
dec
cltd
lds
adc
mov
xor
int
jns
mov
in
xchg
das
sahf
pop
sub
xchg
test
lods
sub
mov
push
loop
xor
in
testb
pop
decl
popf
or
mov
add
inc
les
push
data16
cmp
dec
mov
into
jge
loopne
mov
xchg
pop
jl
in
jae
jecxz
scas
sbb
test
leave
add
mov
jmp
movsl
push
cmp
rclb
add
call
and
mov
or
out
lock
mov
push
inc
jle
je
xlat
push
pop
dec
mov
push
jne
loope
in
mov
jne
mov
imulb
mov
pop
push
fsubp
cld
dec
xchg
lahf
mov
ljmp
sbb
cmp
out
jl
sub
call
push
xchg
imul
mov
mov
jg
pop
or
xchg
xchg
jbe
decl
inc
jg
or
jecxz
daa
loop
xchg
mov
lahf
je
mov
inc
sahf
mov
xor
pop
je
cld
ret
rclb
cwtl
inc
jbe
outsb
loope
or
mov
mov
jge
cmp
sbb
cli
or
sbb
fmull
adc
cmpsb
mov
inc
dec
sbb
testb
sti
jnp
push
pop
sbb
xor
outsb
scas
int3
inc
pop
add
pop
adcl
push
sub
in
repz
stos
popf
fsub
mov
loope
mov
mov
jge
xor
imul
mov
pop
scas
adcl
pop
int
xchg
sub
fsubs
fisubs
sbb
faddp
jge
sahf
sbb
mov
sbb
push
mov
lea
pop
rcrl
movsl
mov
push
jnp
xor
js
inc
lods
inc
ret
inc
mov
add
and
mov
mov
and
pop
xlat
adc
loope
or
adc
sub
sbb
sbb
in
aaa
inc
cmpsb
adc
daa
jp
pop
jp
inc
pusha
mov
fwait
pop
and
cmp
lret
loop
ror
lret
shll
pop
or
add
into
sub
cmc
daa
xor
test
mov
xor
leave
jmp
dec
adc
lret
sub
mov
repnz
rcrb
addb
adc
push
push
push
shr
adc
jo
cld
inc
ds
sub
inc
lret
add
and
dec
mov
jmp
sti
pop
or
jp
in
loopne
add
mov
sub
jnp
imul
and
add
outsb
pop
add
andb
out
subl
add
xchg
enter
and
into
or
jae
loopne
fmulp
push
repz
inc
jmp
inc
das
jmp
shrb
cmp
push
mov
xchg
or
gs
mov
dec
test
xchg
jle
rcl
daa
pop
js
leave
repnz
mov
push
cmp
mov
xchg
int
add
loopne
int
push
fs
fidivs
faddl
das
xor
adc
stos
adc
repz
sub
xchg
sub
fs
fstpt
sub
lock
imul
xor
cmp
sub
out
dec
sbb
jp
push
clc
insl
or
loope
inc
test
jo
out
push
mov
cld
outsb
mov
push
enter
jl
sahf
adc
or
iret
cmp
lods
dec
mov
mov
mov
pop
pop
icebp
lcall
pop
daa
or
mov
sti
imul
cld
cmp
xchg
fidivrs
ds
jo
pusha
xchg
sbbb
test
cmp
jecxz
dec
inc
les
xchg
jo
mov
jl
icebp
sub
xchg
push
mov
mov
and
xchg
lcall
xor
push
or
jns
add
cmp
inc
sub
imul
inc
pop
je
pusha
lods
xor
imul
movsb
or
das
jg
out
icebp
cmp
pushf
lcall
sahf
je
insb
inc
ds
and
fisttpl
movsb
xchg
push
adc
jmp
or
mov
cld
xor
push
jnp
push
add
ljmp
les
xchg
lods
scas
pushf
push
jmp
mov
xchg
or
and
push
ds
lea
xchg
push
adc
lds
movsl
push
cmc
pushf
xchg
loop
dec
dec
mov
jmp
sbb
mov
repz
ficoms
mov
ljmp
orb
xor
fisttpl
sbb
ds
pop
adc
add
inc
icebp
and
xchg
fisttps
in
lret
mov
test
in
ss
pop
fwait
cmp
aas
imul
mov
add
sub
push
sub
mov
shlb
cmp
test
out
mov
and
mov
loopne
pop
mov
push
mov
loop
cmp
jg
dec
and
out
stc
lods
arpl
inc
inc
jecxz
js
inc
or
xchg
sub
movsl
mov
and
fidivrl
sbb
add
mov
and
and
xor
mov
arpl
clc
or
arpl
cmp
rcrb
jle
lds
add
pop
stos
push
sbbb
lretw
les
or
cmp
sbb
sbb
inc
xchg
and
lahf
stos
add
std
stos
clc
dec
jl
jp
jno
lret
inc
fs
stos
mov
rorb
xchg
insb
jno
sbb
push
mov
je
data16
xor
ror
out
arpl
pop
lea
dec
inc
fs
lock
inc
xchg
inc
jmp
or
sub
xlat
push
rcrl
cld
sub
jo
jmp
test
jmp
add
xor
aas
lock
sub
insb
nop
out
insb
add
sti
xchg
repz
mov
mov
cs
cltd
push
mov
sub
mov
jg
pop
dec
popf
and
pusha
mov
insl
inc
fdiv
mov
nop
mov
jbe
lds
into
pop
sub
or
insb
jecxz
cmovl
jle
mov
cld
int
std
out
sub
call
daa
mov
clc
add
adc
jo
fisubl
sti
in
jecxz
shl
cs
aaa
pop
scas
sbb
mov
xchg
lret
addr16
clc
or
lock
pop
or
addr16
xor
in
pop
out
aas
aad
xor
int
pop
xchg
ss
xor
pop
jb
int3
outsl
sbb
mov
jge
lret
fwait
lock
cli
cld
leave
int
scas
and
jg
fdivrl
jb,pn
aad
mov
cmpb
dec
fidivs
es
xchg
sbb
je
mulb
add
popa
or
in
add
jp
xor
cmp
and
pusha
cmc
xchg
dec
inc
push
push
hlt
fildll
or
adc
or
dec
nop
faddl
sub
sbb
or
or
mov
in
pop
and
jne
or
cmpl
sbb
xlat
pop
push
mov
push
dec
out
mov
mov
and
pop
scas
adc
mov
pop
sbb
lret
mov
fdivs
sar
push
repnz
sahf
add
mov
scas
xchg
clc
decl
jecxz
jb
movsl
pop
mov
es
fsts
negb
dec
push
sarb
jle
gs
das
sub
and
pop
jne
es
andb
rcll
aam
lock
jl
in
test
pushf
popa
lds
in
aad
outsl
pop
xchg
fwait
jmp
cli
cmpsb
sub
cmp
int3
xor
dec
bound
movsl
pop
aam
pop
xor
test
push
xchg
add
push
xor
cmp
xor
outsl
jnp
insb
in
aaa
jp
lret
adc
sbb
add
sub
cmp
or
int3
sbb
mov
lods
stc
or
sahf
aam
mov
ja
mov
jecxz
adc
pop
add
add
out
subb
rcrb
out
sub
fwait
mov
call
jbe
cmc
xchg
xlat
jp
in
inc
mov
lcall
adc
ret
and
mov
sub
ja
in
aas
mov
shrl
add
dec
sub
pop
icebp
inc
fstpt
sti
mul
jno
push
mov
xor
filds
cmpsb
inc
dec
std
addr16
sbb
pusha
mov
in
pop
sbb
inc
popa
inc
sub
fisubs
push
and
mov
xchg
push
or
cmpsb
mov
and
fisubs
int3
sahf
cmp
adc
lret
xor
or
mov
popa
repz
inc
sbb
sbb
lods
sbbl
cs
jmp
fnstenv
and
mov
jnp
aam
xor
pop
mov
popf
inc
and
mov
std
adc
mov
popa
in
popf
into
loope
push
ret
or
adc
pop
mov
jmp
xchg
lret
jmp
or
test
stos
add
add
clc
movsl
js
cmp
insb
sub
xor
insl
rorl
mov
jl
ljmp
xor
outsl
dec
push
jbe
mov
jl
add
in
jp
jp
jnp
adc
mov
add
outsb
pop
add
aaa
mov
mov
mov
inc
sbb
out
rcl
test
jb
fs
add
inc
cmp
add
hlt
jl
push
dec
lds
push
fsubl
cmc
jnp
fadds
sub
xchg
dec
inc
pushf
test
xlat
mov
or
dec
mov
pop
jo
xor
mov
outsb
add
outsl
pusha
test
addl
std
dec
ja
cmc
lods
dec
mov
iret
push
inc
sub
cmp
add
outsl
orl
fldenv
mov
jmp
arpl
fsubrs
dec
add
or
insl
popa
pop
fcoml
cmp
sbb
repz
fucomp
cmp
inc
sbb
dec
in
es
push
jns
jp
mov
mov
jo
adc
push
std
lods
ret
neg
or
inc
or
or
lahf
dec
lea
dec
mov
mov
inc
adc
sbb
pop
ljmp
and
divl
xchg
xchg
mov
and
ljmp
test
test
mov
scas
adc
js
jle
pop
loop
lods
inc
hlt
bound
loope
js
sub
mov
popa
jnp
in
xchg
cmp
adc
stos
fistpll
repnz
or
xor
out
jnp
test
enter
mov
xchg
rorb
faddl
xor
jecxz
or
dec
inc
leave
mov
out
mov
push
push
in
xchg
mov
mov
pop
xor
jecxz
ss
pop
mov
cltd
xorl
cmpb
lods
inc
jb
lret
adc
mov
iret
mov
enter
rcl
or
pushl
les
mov
mov
ds
add
adc
or
lret
push
or
or
sbb
jp
mov
leave
push
movsl
mov
pop
inc
mov
sbb
test
outsl
pop
push
push
int
xchg
adc
jno
ljmp
enter
jmp
mov
sub
addr16
fsts
add
push
scas
and
sub
xorb
cltd
dec
loope
cmp
dec
mov
bound
sub
cmp
stos
dec
mov
cld
push
inc
das
mov
std
mov
xchg
and
mov
ret
push
push
out
in
out
mov
mov
push
and
sub
mov
add
cmp
sub
dec
lret
add
jp
inc
push
and
repz
enter
sub
jae
test
jge
adcb
adc
jge
and
push
push
iret
cmp
inc
icebp
fwait
jne
les
cs
imul
sub
inc
mov
pop
xor
jnp
lahf
je
or
lret
mov
push
add
mov
inc
mov
js
in
jl
insl
scas
movsb
add
lret
ret
push
cltd
push
jecxz
movsl
out
pop
lods
test
mov
push
scas
scas
fidivrl
mov
icebp
sub
orb
fwait
sbb
mov
fs
dec
jnp
or
fsubp
xor
jo
mov
lods
lds
popa
and
iret
popf
cmpsl
nop
cmp
sahf
pusha
jb
aam
ds
adc
out
mov
mov
pop
scas
sarl
outsb
ja
lahf
inc
cmpsb
xchg
testl
cmp
pop
push
or
xchg
ss
ret
cmp
sub
mov
sub
fsubr
aam
mov
pop
ret
and
pop
ljmp
sbbb
jmp
sbb
pop
push
inc
sub
and
rorl
push
sarl
outsl
sti
mov
enter
fldt
js
aaa
call
fists
dec
xchg
out
mov
je
xor
sbb
xor
xchg
add
mov
dec
in
stos
pusha
mov
imul
mov
inc
or
jmp
mov
push
sbb
and
adc
push
orl
add
push
test
test
or
lods
movsb
xchg
jge
subb
or
xchg
pushf
mov
push
mov
dec
mov
jle
pop
mov
mov
push
jle
leave
jmp
cmp
mov
mov
pop
lods
sbb
or
jo
insl
fidivl
out
enter
add
and
adc
cmp
iret
mov
shlb
test
push
inc
xor
xor
js
es
pushfw
fldenv
andps
add
inc
push
mov
mov
mov
les
pusha
cltd
test
lds
sub
push
or
out
jbe
stos
int
and
add
jns
in
cmp
test
xor
xchg
dec
ficoms
fucomip
in
std
test
and
insl
ret
jae
popa
pusha
gs
adc
aam
imul
xor
test
lods
mov
sbb
int
stos
ficoms
out
mov
dec
popf
inc
push
out
shll
cmp
xchg
xchg
push
or
jmp
adc
das
enter
xor
dec
push
xlat
ss
sti
or
test
pusha
inc
xchg
daa
fcoms
sbb
insl
popa
daa
out
loope
shlb
ja
jmp
push
je
xor
and
push
mov
mov
pop
xchg
in
mov
cmp
and
sarl
lahf
jo
aam
and
xchg
xor
inc
jp
mov
stc
and
jle
mov
inc
fbld
mov
dec
mov
lcall
xchg
cmc
jns
jmp
fdivl
push
in
sub
jp
adc
xchg
xchg
fnstsw
mov
mov
jg
sti
in
cmpb
xor
les
push
mov
xor
test
cmp
pushf
adc
ljmp
and
or
fistps
test
xchg
mov
frstor
push
femms
dec
mov
or
jnp
mov
stos
lods
shlb
je
fcmovu
and
mov
lods
push
rcrb
movsl
cmp
gs
mov
cwtl
in
movsb
call
aaa
dec
mov
std
fldt
dec
scas
inc
call
mov
dec
sarb
loop
xchg
mov
fwait
pop
pusha
adc
cmp
xchg
mov
das
xor
data16
ret
mov
xor
add
lret
les
add
xchg
mov
sbb
fldl
add
add
es
scas
cmp
sub
add
mov
and
and
fcomip
stc
loop
daa
jbe
popa
jb
leave
lret
insl
lods
clc
nop
iret
in
sbb
xchg
addr16
iret
jmp
cmp
dec
dec
xor
dec
fadd
mov
sbb
in
testb
cmc
nop
xchg
mov
cmp
pop
xchg
daa
jl
scas
fiaddl
lock
nopl
and
sbb
add
rcrl
cmp
lods
push
jmp
mov
lret
fildll
aas
fsubs
push
lods
and
dec
jmp
test
xorl
sub
addr16
jmp
sbb
push
pushl
sahf
sub
push
sub
pop
xor
popf
xchg
xor
jle
leave
mov
add
jbe
aas
add
stos
pop
js
adc
ja
es
and
cld
dec
nop
in
xor
add
add
std
adc
sbb
dec
out
test
xlat
lcall
fmull
push
inc
arpl
out
scas
aad
sub
pop
jne
push
pop
or
pop
jae
lcall
jo
sbb
icebp
xchg
rolb
xchg
jae
dec
out
into
movsb
in
scas
push
xchg
xchg
sahf
stos
cmp
and
fistpl
out
lods
dec
xchg
pop
mov
push
xchg
sub
mov
int3
repz
int3
pop
sbb
dec
jnp
js
xchg
lods
xor
mov
pop
or
cli
pop
imul
pop
lods
xor
xor
loopne
ja
jmp
aad
mov
test
sub
test
int3
cmp
jp
out
cmp
xchg
add
add
movb
into
out
aas
pop
cmp
mov
xchg
hlt
test
rorl
stos
shrl
insl
jae
jl
lods
gs
cmc
add
and
push
jnp
dec
mov
push
inc
push
arpl
push
lahf
xorb
inc
pop
test
push
or
int
inc
xchg
inc
mov
stc
mov
movsl
arpl
mov
inc
xlat
test
mov
pop
add
aaa
loope
ss
or
mov
call
repnz
or
std
xor
fidivl
ffreep
in
sahf
jge
repz
aaa
mov
push
adc
je
mov
pop
mov
out
jae
xchg
add
or
push
and
testb
rolb
mov
test
movsb
add
inc
icebp
xor
daa
shrb
pop
test
insb
dec
jnp
jae
push
testb
aaa
pop
push
pop
sbb
lods
lock
mov
sbb
incl
jne
stos
arpl
mov
inc
das
cmp
dec
scas
stos
sahf
fcmovne
dec
icebp
popf
in
insl
mov
adc
jno
adc
imul
dec
cld
ds
jae
imul
mov
and
iret
jl
ja
iret
pop
outsl
xchg
add
fsubrl
fildl
pop
mov
nop
mov
adc
mov
cmp
aas
jo
add
fcomp
jmp
inc
shlb
cmp
mov
adc
jl
divl
mov
cmp
sbbb
hlt
pop
add
ret
rorb
cmp
pop
stos
jb
int
mov
mov
jno
notb
xchg
fdivrp
les
sbb
dec
int
cmp
push
sahf
xchg
dec
loope
dec
fcoms
lods
mov
add
jae
push
sub
cmp
add
and
in
aaa
and
mov
mov
jecxz
mov
out
icebp
add
scas
pop
mov
jge
les
inc
mov
fildll
test
xor
push
addl
gs
xchg
add
push
fmull
jb
into
dec
popf
xchg
hlt
xor
pop
movsb
cmp
decb
adc
and
bound
inc
add
inc
iret
dec
addb
cwtl
js
jne
and
or
lcall
out
jnp
dec
cmp
jne
clc
mov
and
xchg
inc
test
dec
mov
ja
xchg
testl
pushf
dec
dec
cmp
jg
stc
cli
hlt
repz
loopne
mov
cmpb
arpl
enter
mov
popa
dec
inc
pop
inc
adc
cltd
nop
xchg
clc
adc
adc
arpl
pop
xlat
into
aam
pop
sbb
pop
ret
jge
xchg
and
or
jmp
push
mov
fwait
sarl
xor
cltd
sub
xor
in
mov
rolb
xchg
inc
lods
mov
inc
orb
dec
std
sbb
cmpsl
mov
aam
mov
out
mov
mov
pop
rol
cmp
cmp
jbe
test
enter
or
pop
mov
jp
push
sub
lds
cmp
cwtl
cmp
andl
fbld
orl
jmp
ficoms
or
leave
fdiv
aam
cmp
lcall
fstpt
in
sub
sub
pop
out
cmp
or
fildll
fcomip
rclb
mov
pop
mov
ljmp
pusha
push
adc
jecxz
mov
sti
mov
in
pop
fucom
jae
sub
rcl
add
jg
jbe
xlat
fisttpl
mov
cmp
xor
mov
loopne
cmp
or
adc
dec
mov
mov
daa
inc
or
lcall
xchg
shl
shlb
xchg
add
add
test
sub
push
jnp
mov
jl
ret
jnp
test
xchg
push
ds
cs
push
jecxz
rolb
rorl
mov
jle
or
daa
rcrb
xchg
adc
outsb
add
adc
popf
fstl
out
ds
int
pop
adc
fisubs
icebp
rclb
inc
sub
add
jecxz
ljmp
jge
adc
inc
mov
xor
or
sub
pop
adc
cmp
mov
cld
pop
xchg
fstpt
testb
imul
pop
inc
and
or
cmp
mov
cli
add
imul
daa
inc
and
push
lods
ret
lds
lds
shrl
sub
or
and
and
fxch
std
xchg
orb
pop
es
pushf
xor
ds
mov
das
inc
jl
outsl
mov
add
test
sub
mov
add
push
cli
divb
pop
cs
and
add
add
lea
mov
in
or
popf
movsl
push
mov
test
loopne
cmp
xor
test
orl
lock
push
mov
sbb
repnz
add
mov
rcrb
push
arpl
dec
mov
std
fadds
fisubrs
mov
push
in
stos
fcoms
stc
dec
hlt
stos
fucomp
jle
xchg
xchg
mov
or
movsb
ffree
ljmp
movsl
inc
xlat
jb
and
mov
mov
xor
psllw
mov
in
aad
movsl
cmpb
inc
aas
aam
mov
pushf
test
add
std
in
mov
clc
sub
jb
pushw
movsb
icebp
jb
pusha
jge
cmp
mov
push
and
stos
lahf
out
arpl
loop
shlb
jp
icebp
jecxz
iret
xor
pop
out
push
daa
lods
sarb
dec
insl
xchg
lds
sbb
aaa
imul
jno
aam
leave
push
in
call
pop
or
pop
orb
add
iret
scas
pop
cmp
adc
rcrb
lock
pop
out
clc
pusha
push
mov
sub
cmp
or
es
subb
jno
aaa
jnp
daa
arpl
ffreep
pop
ret
xchg
pop
jmp
xor
mov
pop
or
test
movsb
xor
push
out
dec
add
mov
scas
in
nop
cli
xchg
jno
mov
xchg
roll
sbb
push
lcall
xor
jb
mov
icebp
cmp
cld
ss
fs
movsl
lods
lods
push
push
sahf
mov
icebp
shrb
and
cs
lret
xor
cmp
push
and
cmp
imulb
mov
ljmp
adc
or
mov
add
in
adc
imul
out
notb
shrb
or
mov
cmp
lret
mov
xchg
jne
mov
sbb
sub
cmp
mov
mov
push
ret
inc
xlat
into
cmp
adc
pushf
or
and
xchg
rorb
pushf
test
mov
popa
cmp
cmpsb
aaa
push
mov
cmc
ret
and
cld
sarl
pop
cmpsb
test
scas
jno
xor
out
jbe
push
shrl
je
imul
mov
dec
in
out
pusha
lahf
and
fwait
jge
jl
xchg
sub
rcr
sbb
cmp
mov
inc
sub
fadds
cmp
mov
pop
out
in
mov
int3
popf
jno
push
andb
or
jg
mov
xor
xchg
leave
outsb
rorl
jp
dec
jne
in
mov
test
push
mov
jae
or
stos
fs
xor
pusha
jno
push
push
pop
xor
out
fsubs
in
fcmovb
adc
rorl
sub
lret
mov
sub
sarl
test
clc
push
rcll
xchg
dec
sarl
sbb
adc
hlt
enter
popf
inc
xor
in
insl
xchg
rol
or
push
rclb
and
xor
xchg
popa
test
sahf
loop
sarl
js
cli
dec
int3
in
inc
xchg
mov
push
pop
dec
mov
add
push
popf
sub
mov
fs
imul
fildll
adc
mov
out
mov
stc
dec
push
leave
ljmp
loope
addr16
in
push
stos
mov
adc
push
jmp
fisttpl
jnp
das
out
int3
inc
sbb
shlb
sbb
ds
xchg
sbb
sbb
xchg
ret
pop
or
fmuls
je
sbb
mov
xor
cmpsl
or
sti
test
out
sbbb
push
add
or
cmp
ljmp
aas
out
jbe
mov
lock
int3
imul
int
sbb
in
xchg
pop
xlat
xor
in
dec
push
cmp
mov
imul
pushf
cs
and
add
xchg
sbb
cmp
jle
xor
adc
aam
jecxz
lret
sahf
pop
cmp
add
jnp
push
mulps
movsl
test
xchg
xchg
inc
push
subl
sbb
inc
sbb
in
and
imul
popa
mov
imul
addr16
je
rol
or
push
pop
jo
orb
or
call
ret
or
les
fsubrl
cmpsl
jo
push
popl
mov
inc
flds
in
mov
test
mov
cmp
stc
or
dec
adc
std
or
stc
cltd
mov
imul
outsb
jmp
jge
jmp
sbb
stc
daa
addr16
lcall
mov
dec
inc
inc
hlt
mov
call
jle
push
std
popf
stos
xor
and
loopne
sub
cmp
loop,pt
jle
push
iret
jo
rcrl
icebp
mov
mov
inc
cmpsl
pop
push
adc
fwait
inc
mov
pop
and
push
ficoms
pop
popa
xor
movsb
xor
push
dec
js
cli
push
mov
and
xchg
jge
imul
sub
ds
push
mov
pop
sbb
shlb
das
repz
xor
divb
mov
hlt
push
push
cmp
mov
jg
cmc
cmc
mov
test
sti
rol
decb
gs
cmp
pop
repz
push
xchg
add
call
mov
jb
call
xor
sub
testb
or
loop
mov
push
and
xchg
sbb
cmpsl
or
dec
ret
clc
aam
lahf
test
jb
inc
or
or
mov
inc
jo
xchg
daa
xor
stos
dec
or
pop
testl
ds
jne
fs
in
sbb
pusha
ret
neg
ds
or
out
mov
mov
sbb
out
lods
nop
outsl
jg
call
cld
fwait
test
push
jmp
test
in
mov
sub
cmp
or
lds
shrl
jp
and
lcall
aad
xor
int3
jae
int3
cwtl
dec
neg
push
push
push
lcall
and
nop
push
adc
xchg
push
icebp
and
sbbb
in
or
lods
loopne
lret
stos
loope
xor
and
cmp
mov
cs
outsl
sub
pop
and
adc
out
insl
mov
aaa
test
mov
mov
lret
xchg
inc
xlat
or
xchg
push
mov
std
sbb
adcl
sbb
or
es
add
in
ss
or
pop
in
testl
push
icebp
jmp
add
add
push
jg
das
aas
daa
fisttps
call
pop
xlat
xchg
or
jle
std
clc
jns
push
push
scas
test
mov
daa
pop
icebp
mov
adc
in
insl
je
int
and
and
std
stc
adc
adc
xor
sub
iret
dec
add
out
xor
int3
es
add
hlt
mov
mov
lcall
cltd
mov
pusha
xor
sbb
pushf
and
fwait
adc
pop
pop
mov
test
popa
jl
in
push
inc
pop
xchg
jne
in
lods
mov
fstpt
shll
dec
xchg
or
add
popf
dec
pop
inc
sub
cli
out
xchg
sbb
adc
dec
filds
add
mov
ret
in
idivb
dec
outsl
addr16
mov
faddl
add
cld
pop
addl
add
orl
lock
lahf
jb
call
dec
cli
fsts
out
daa
sbb
test
mov
test
out
sub
imul
jbe
in
sub
rolb
or
adc
lret
mov
gs
inc
adc
jecxz
in
inc
cmp
push
xlat
std
xchg
aaa
cmpsb
into
inc
adc
lds
cmpsl
sbb
dec
rcrb
mov
mov
mov
pop
mov
push
push
mov
push
das
add
movsl
jnp
adc
inc
sbb
sub
in
sbb
icebp
lds
fnclex
cli
pop
stc
jmp
inc
fists
repz
dec
push
sub
jbe
call
cmc
rcll
out
push
push
inc
fimull
xchg
mov
sti
jmp
mov
stos
pop
fwait
push
xchg
push
jmp
mov
xor
mov
xchg
dec
or
jg
in
mov
mov
mov
sahf
dec
lods
shlb
enter
mov
test
sbb
out
pop
xor
dec
mov
fsubl
push
inc
lcall
mov
jle
pop
or
das
fwait
inc
pushf
lret
pop
inc
push
stos
nop
pop
cld
sub
sarb
mov
bound
xchg
sahf
xchg
outsl
sar
mov
fadds
dec
add
pop
loop
iret
cmp
lods
inc
sbb
stos
mov
and
test
lret
icebp
and
or
sub
xchg
sarb
mov
jne
inc
aad
icebp
pop
ret
adc
jmp
add
cltd
and
cmp
or
test
aam
xor
out
sbb
lret
mov
sub
in
and
movsl
clc
lea
dec
mov
mov
test
lret
and
pusha
das
cld
testl
push
jbe
push
mov
subl
pop
ret
xor
cmp
jl
xchg
push
ficompl
jl
xchg
cs
sbb
test
scas
rorb
xchg
jecxz
xchg
pop
loopne
shl
and
sti
mov
xchg
repnz
or
adc
cmp
mov
pushf
cmc
pop
das
inc
pop
lret
fcompl
loopne
sbb
jmp
andl
xor
jmp
lds
and
arpl
cmp
leave
test
dec
mov
je
cmpb
mov
dec
sub
or
lds
into
cmpsl
outsb
adc
or
out
push
or
ss
xor
jmp
mov
jecxz
insl
fmulp
adc
call
xchg
xchg
or
jns
clc
sub
andl
push
cli
aas
mov
and
mov
lahf
and
or
sub
cmp
out
loope
insb
mov
ret
rcll
fldz
in
ds
mov
mov
jg
icebp
dec
notl
jge
lods
push
divl
or
pop
dec
stc
push
xor
sarb
dec
or
mov
inc
test
mov
aaa
sbb
sub
adc
lods
aad
ja
cmp
cwtl
enter
addb
cmp
mov
xor
movsb
rolb
pop
mov
mov
xor
faddp
popf
add
cli
mov
xchg
aaa
shl
outsb
adc
jmp
repz
pop
out
js
cmp
pop
push
mov
mov
pop
pop
pop
inc
inc
je
lds
sti
xor
leave
aaa
aas
fdivrs
sub
jns
xor
int3
js
jb
fcompl
inc
aad
ror
aaa
sbb
fdivrp
sbb
mov
das
jmp
inc
or
fsubr
test
xchg
sub
ret
xchg
bound
pushf
pusha
insb
pop
and
movsl
rclb
aam
fcomip
cmp
pop
pop
or
fimuls
and
or
mov
in
ljmp
xorb
cwtl
fdivrp
inc
or
and
or
out
adc
push
icebp
sti
adc
xor
lret
jle
pop
fsubrs
addb
push
bound
fisttpl
in
mov
std
inc
xchg
sbbb
xchg
and
adcb
adc
push
mov
jg
ja
mov
scas
push
lds
pop
lock
sbb
sub
inc
xorb
add
xchg
lret
sbb
cli
and
in
or
lods
jo
dec
push
test
std
clc
sub
aaa
pop
add
ss
xlat
ljmp
add
mov
cmc
cwtl
aam
cmp
test
push
repz
pusha
pop
mov
dec
mov
insl
in
inc
sub
xor
ja
ret
jnp
icebp
or
gs
cmc
lret
std
jno
cmp
in
in
jno
cli
or
ss
mov
xor
shrb
jecxz
test
or
loopne
mov
xor
push
je
mov
mov
cmc
mov
ss
lods
fwait
lea
nop
xor
lods
dec
sbb
mov
mov
in
cmp
sub
mov
dec
cmp
push
sub
inc
lea
lods
sbb
lahf
js
std
mov
xlat
cmp
push
and
ret
or
jns
fiadds
sbb
mov
int
inc
sbb
out
mov
push
sbb
jg
and
les
aam
inc
mov
iret
pop
in
fimuls
adc
adc
xchg
jne
push
and
and
push
sbb
push
mov
addr16
movsl
ja
sarl
cmp
aam
divb
cmp
pushf
shr
mov
add
pop
enter
mov
pop
and
cmp
sbb
ljmp
add
add
movsl
pop
xor
int
ficoms
mov
add
add
aas
hlt
cmp
dec
add
fcomp
js
push
andb
outsl
jnp
fisubl
mov
pop
icebp
cmp
int
and
mov
repz
in
xor
repnz
fnstcw
fwait
xor
mov
stc
mov
cmc
xchg
adc
aaa
and
aam
mov
xor
adc
adc
cmc
std
test
or
push
popf
jb
pushf
adc
cs
repz
jne
idivl
xchg
lods
popl
mov
push
inc
cmp
sbb
or
xchg
push
sub
add
pop
fwait
mov
rorb
mov
xlat
cld
ret
sarl
inc
pop
sub
xor
sarb
out
aam
fists
inc
leave
call
sub
outsl
xchg
sbb
jmp
add
aas
jnp
sbb
loope
add
in
imul
jmp
aam
mov
xchg
loope
lods
sbb
jle
jl
lret
and
push
or
sub
adc
xchg
dec
bnd
fcompl
insb
push
and
mov
pushf
xchg
mov
lds
into
xlat
push
cmp
fwait
lock
and
adc
adc
sub
roll
imul
testb
sbb
fmull
cmpsb
aad
pushl
dec
or
cld
mov
mov
and
xchg
or
ljmp
jg
cmp
dec
push
lea
scas
mov
mov
and
xlat
inc
or
sbb
sarb
js
xchg
xchg
test
mov
mov
bound
fucom
push
movsb
pop
adc
mov
repnz
sub
imul
lret
mov
out
stos
adc
ret
test
rcr
outsb
xchg
pop
cli
sub
lret
jns
into
sbb
out
mov
and
jecxz
mov
sbb
rcrl
mov
imul
outsb
inc
cli
lcall
lret
insl
std
mov
in
leave
xchg
add
jne
cmp
shlb
lret
sahf
int
mov
das
shlb
cmpsl
icebp
lock
jne
dec
arpl
sahf
lahf
rcrb
pop
or
push
inc
xchg
cmc
push
imul
rcrb
jge
dec
jecxz
mov
mov
inc
lea
pushf
insb
das
xchg
cmpl
xor
jbe
and
xchg
mov
mov
adc
xlat
mov
pop
test
stos
xor
pop
bound
or
mov
pop
rcr
lock
aad
mov
lret
shlb
rorl
cmp
jns
notl
lret
test
dec
insb
ds
pop
pop
xchg
cmp
sub
dec
jns
lea
mov
ss
dec
pop
std
outsl
fistps
lds
lret
push
paddusb
sbb
adcb
daa
xchg
shll
sub
jnp
xor
movsl
stos
leave
or
push
xor
pop
jp
fsubrl
jae
inc
js
lahf
adc
in
and
pop
in
pop
repz
push
mov
pop
or
mov
ret
dec
pop
das
and
push
sahf
pop
sbbl
or
lods
cld
and
mov
push
cmp
test
jne
and
fcmovnb
loopne
cmpsl
rcrb
iret
sub
or
xchg
push
cmp
add
lcall
ret
shrl
mov
sub
pop
cs
mov
iret
outsb
adc
jge
pusha
push
or
aad
and
mov
jne
push
dec
jge
aaa
movsb
add
inc
xchg
shl
in
test
sbb
lods
add
dec
mov
aas
andl
ja
xchg
rorl
xchg
pop
inc
and
adc
leave
mov
je
stc
xlat
stos
pop
jae
dec
sbb
xor
and
leave
scas
jmp
pushf
dec
xor
out
and
push
nop
cltd
sahf
jecxz
mov
icebp
xchg
mov
int3
repz
inc
repnz
sbb
cmpsb
cli
rol
sub
es
jg
stos
leave
add
adc
jo
ret
push
cld
adc
iret
sub
out
mov
loop
gs
pop
sub
pop
das
inc
aas
scas
push
mov
mov
cmp
cmp
add
inc
mov
rcl
mov
gs
inc
push
or
jecxz
ja
lahf
repz
jo
cwtl
sbb
xor
push
test
xchg
shll
idivl
in
dec
subl
jnp
insb
stc
sub
add
dec
dec
adcb
and
icebp
xor
jns
cmp
test
fidivrl
pop
or
dec
mov
or
leave
fisttpl
push
lock
sub
jge
sub
mov
push
jae
push
jg
pop
xor
shll
bound
pop
lcall
je
ja
sbb
sub
pop
adc
daa
mov
dec
inc
movsb
sub
lcall
movsb
ret
cmc
jae
inc
inc
xchg
in
jg
leave
imul
outsl
and
cmp
xchg
push
pop
lock
xchg
inc
fcomps
subb
sub
pop
mov
jno
pop
dec
clc
insl
out
push
inc
mov
popl
fistps
mov
dec
fwait
push
fs
aas
push
aad
add
mov
mov
mov
jg
cmp
in
cld
movsb
aaa
xor
inc
mov
test
push
mov
fldl
inc
rcrb
adc
sti
inc
gs
inc
cmpsb
pop
pop
cmp
push
xchg
les
repnz
call
faddl
cmpsl
pop
fsubrl
aas
bnd
aaa
fimuls
filds
mov
les
in
and
ficomps
mov
dec
inc
leave
xchg
xlat
inc
inc
inc
pop
mov
outsl
lret
lock
mov
mov
dec
loopne
sbb
icebp
and
sub
and
into
mov
sub
fidivs
cmp
pop
repnz
ss
mov
iret
ret
lods
cs
jb
xor
or
jg
in
xor
adc
sub
push
pushf
push
lret
pop
or
xchg
leave
cmpsb
leave
cmp
repnz
out
in
clc
mov
jg
mov
dec
xchg
daa
and
repnz
dec
mov
lods
dec
bound
hlt
jae
std
insl
xor
push
call
movb
mov
or
ds
leave
scas
mov
fcomip
add
sub
das
and
add
and
xchg
fcoml
pop
out
add
outsl
movsb
daa
jbe
idivl
mov
icebp
js
cli
add
outsb
pop
add
and
xchg
push
push
sub
xchg
add
mov
mov
xchg
jecxz
mov
bound
push
adc
mov
add
push
fsub
mov
fdivrs
fs
xchg
xchg
push
aas
xchg
je
inc
xchg
outsb
sbb
std
pop
mov
mov
out
push
movsw
adc
in
out
jne
pop
repnz
andb
pop
mov
push
leave
pop
rcll
add
adc
xor
mov
jge
js
jge
lea
mov
cmc
fcomip
mov
dec
jbe
int3
and
dec
lahf
pop
inc
sbb
pusha
xor
lods
repz
popa
sub
lcall
push
lahf
jle
mov
loopew
loop
xor
aaa
dec
popa
cwtl
xchg
iret
xor
sub
sbb
ljmp
adc
push
jg
fdivrp
jo
ret
cmp
mov
mulb
mov
loopne
push
hlt
pop
out
xchg
pop
out
mov
stc
aam
scas
ret
jnp
out
imul
pop
and
push
mov
dec
in
in
ss
xchg
lret
fs
mov
iret
push
lods
fs
push
xchg
ss
lcall
in
int3
cmp
mov
aas
ds
xor
cmp
xchg
or
cmp
jnp
xor
in
add
fnstcw
nop
push
xor
rcr
dec
popf
outsl
mov
scas
std
pop
hlt
int3
cmp
stc
sub
sub
adc
xor
push
sub
jb
inc
sahf
xchg
pop
aaa
or
xor
or
adc
pop
push
dec
pop
scas
push
and
jne
xchg
rcll
xchg
or
stos
popf
rol
push
outsl
outsb
adc
cmpsl
inc
push
or
jno
scas
xchg
outsb
fadd
and
push
sahf
das
and
dec
in
lahf
jns
enter
in
aam
cmp
xor
lret
jo
aad
lea
aaa
and
lds
sbb
ja
xchg
sub
xchg
popf
dec
dec
xchg
cmp
push
xchg
shl
vmovsd
cld
add
lods
pop
cwtl
mov
neg
jg
dec
fisttps
mov
stos
insl
ret
mov
pshufw
out
fmuls
fldl
iret
repz
cmp
push
data16
and
in
test
rol
bound
dec
pop
xchg
mov
push
cld
leave
or
cmp
xchg
out
loop
jbe
inc
dec
inc
fsubl
cmp
in
or
adcl
xor
dec
add
xchg
inc
es
cltd
out
and
push
or
and
pop
fildll
scas
data16
fcmovne
xchg
mov
loopne
popa
imul
imul
in
sbbb
mov
mov
inc
push
add
mov
cmpsb
sbb
mov
sarb
dec
pop
xor
adc
mov
mov
aas
push
in
aaa
cmpsl
cmp
popf
and
and
push
shrl
lret
sbb
jmp
das
fwait
hlt
mov
aas
adc
adc
int
pop
xchg
xor
xlat
push
cli
adc
cmp
ret
pminsw
enter
mov
inc
jmp
aad
es
cmp
addr16
pop
mov
mov
dec
push
pop
pop
add
mov
pop
rcrb
push
shll
fdivrs
mov
jmp
or
xchg
inc
adc
mov
iret
inc
sbb
dec
adc
mov
int
daa
into
adc
mov
jecxz
arpl
jbe
dec
rol
mov
mov
push
mov
test
js
lds
mov
subl
adc
aam
repnz
mov
or
movsb
dec
mov
sub
cmpsl
mov
in
ret
mov
sbb
loope
popa
sub
sbb
cs
loope
jne
movsb
es
test
stc
xor
cmp
lea
adc
xchg
repz
cltd
rep
or
jb
jno
mov
xlat
push
push
adc
scas
xchg
fwait
cmc
xchg
leave
fstp
xchg
xchg
jge
lds
add
push
cmp
push
loop
je
je
or
inc
xchg
pop
sub
jnp
inc
arpl
push
add
add
mov
mov
jge
outsl
add
sub
mov
push
in
stc
lahf
iret
shrl
daa
jb
pop
push
pop
int3
mov
lea
sbb
adc
xchg
xor
js
push
sysexit
ret
dec
int3
pushf
lret
mov
inc
lds
mov
leave
cwtl
cmpb
ror
gs
enter
sub
orl
stc
adc
mov
or
pop
and
mov
movsb
adc
inc
lds
js
lds
inc
add
movsl
scas
jmp
int
out
mov
mov
push
movsb
mov
out
sbb
sar
cld
call
nop
arpl
xchg
loopne
stos
out
repz
adc
push
adc
mov
jle
fdivs
aas
lods
xor
inc
mov
add
std
add
sub
mov
mov
and
and
lret
add
mov
adc
jecxz
xlat
xor
add
bound
shlb
shl
stos
rcl
cmp
out
imul
sbb
jecxz,pt
das
dec
popa
fxtract
push
dec
and
mov
rclw
push
cltd
aaa
repnz
ljmp
fbstp
xchg
rcr
out
or
hlt
push
pusha
xchg
dec
inc
xchg
pop
push
dec
adc
xor
mov
cmpsl
sbb
in
mov
inc
repz
es
cmp
insl
push
pop
mov
mov
popf
jnp
mov
leave
jmp
inc
sub
xchg
pop
add
jecxz
daa
fnstenv
mov
jg
cmpsb
inc
int
mov
mov
test
jae,pn
js
loope
dec
popa
cmp
cli
lods
ficoms
push
inc
cs
int3
jae
leave
sub
int3
jp
loop
loop
sbb
out
mov
xor
pop
add
int
in
and
jge
adc
dec
imul
ss
xchg
push
adc
pop
lret
cmp
sbb
int
lcall
mov
cwtl
cli
rcrb
shlb
divb
scas
xor
shr
mov
mov
add
or
cmp
cmp
pop
mov
inc
daa
arpl
jae
push
or
jmp
push
in
mov
push
inc
leave
data16
jmp
xor
and
jno,pt
ljmp
adc
cmpsb
dec
dec
pop
xor
or
outsl
enter
mov
filds
add
mov
xlat
lea
je
fidivrl
outsb
pop
add
sub
jg
lods
pop
jmp
sbb
xchg
mov
xchg
stos
cmpl
call
les
push
sub
cmp
loop
cmp
or
dec
mov
popf
cmp
cmpsb
push
sub
mov
pop
clc
xchg
std
jnp
adc
push
je
insl
dec
xchg
mov
out
nop
mov
xchg
or
xor
nop
cli
or
dec
in
fdivp
in
xlat
xchg
adc
fbstp
fsubs
movsb
cmp
data16
aas
mov
fsubl
aam
fnsave
std
gs
pop
cmpsl
in
mov
cmpsb
push
mov
pushf
aam
add
push
sub
lahf
stc
movsl
ja
jnp
test
jg
in
jle
xor
into
imul
mov
pop
inc
jo
xor
xchg
fdivrs
cli
aad
cmc
sbb
stc
out
sbb
fidivl
push
test
mov
or
mov
sbb
pop
data16
pop
xor
mov
lcall
je
in
je
je
shlb
cli
cltd
je
movsl
gs
lcall
ljmp
ja
mov
std
scas
add
sub
rcrl
push
xchg
cwtl
cli
out
out
addr16
xor
jge
and
idivl
hlt
leave
push
cli
inc
sub
pusha
pop
sub
addr16
mov
pop
xor
push
dec
loopne
test
icebp
cmp
mov
std
cmc
cli
jae
jp
inc
mov
pop
sub
bound
ret
jbe
mov
insl
loopne
shll
pushl
pop
jnp
test
jns
mov
push
add
xor
jecxz
testl
test
inc
add
pop
xchg
int
pop
mov
ljmp
hlt
sbb
and
xor
aas
in
or
lods
vpsubw
mov
and
or
loop
ret
add
cmova
dec
pop
inc
std
mov
push
popf
lcall
dec
daa
outsb
push
add
out
or
punpckldq
popa
cs
sub
inc
add
or
xchg
rcr
xor
push
push
fstps
hlt
inc
imul
mov
cmp
fsubr
sub
cmp
insb
rclb
mov
rcrl
pop
and
mov
arpl
xchg
cli
arpl
fiadds
stos
mov
dec
frstor
inc
mov
mov
test
repnz
add
aam
xlat
movsb
pop
mov
pop
push
push
je
mov
call
inc
repz
scas
sbb
or
jg
jo
jae
lea
lret
add
not
push
icebp
dec
insl
mov
adc
xor
jne
jl
inc
insl
push
cmp
sahf
lds
in
mov
and
mov
jl
cmp
mov
sar
pop
xor
inc
sbb
lods
or
fs
roll
icebp
cmpb
gs
orb
enter
push
xchg
mov
mov
jecxz
sbb
push
fsubrs
inc
mov
and
mov
xchg
mov
test
mov
xorw
negl
cld
mov
stos
stos
out
icebp
lret
inc
mov
jle
and
sti
and
movsl
stc
aaa
sbb
mov
push
ss
cs
in
imul
ficomps
fistpll
jbe
orl
adc
aaa
mov
add
ljmp
hlt
mov
rclb
xchg
popa
shlb
mov
jns
xor
out
sahf
dec
push
mov
test
aaa
aad
popf
lea
rorl
test
dec
cli
xor
jmp
sub
imul
xlat
mov
push
cwtl
outsb
jo
les
fbld
xchg
and
test
xlat
xchg
out
in
ds
repnz
lods
nop
outsl
push
lahf
repnz
out
popf
mov
mov
cli
xchg
stos
push
pop
ljmp
xor
xlat
cmpsl
sbb
movsl
cmp
repz
and
jg
dec
push
jb
js
xchg
xchg
cltd
xchg
dec
clc
andb
jl
cmp
repz
scas
insl
adc
dec
lret
fisttpll
dec
pop
mov
mul
sub
stos
repnz
hlt
xor
test
outsl
filds
movsl
xor
insl
push
test
out
mov
sub
fdivrs
test
ss
in
xchg
mov
loopne
jbe
cld
mov
cmc
es
push
nop
test
mov
cltd
mov
scas
jl
lret
adc
loope
orl
push
xor
xchg
or
addr16
lds
pushf
int
fidivl
popf
dec
leave
test
and
xor
jl
pusha
fdivp
push
pop
arpl
mov
mov
xchg
divl
jo
xchg
push
pop
fsts
xor
ja
mov
stos
aaa
jp
mull
into
mov
mov
out
shrl
test
pop
ja
inc
jo
push
cmp
sub
punpcklwd
jnp
loope
sbb
jnp
or
ffree
mov
and
sbb
lods
and
fwait
inc
jmp
dec
cltd
fwait
pop
xlat
jp
aad
dec
push
xor
and
push
add
lods
xor
loopne
mov
jg
xor
dec
sub
adc
sub
dec
xchg
mov
push
arpl
inc
inc
push
jns
jp
mov
xchg
in
mov
stc
adc
stos
mov
sbb
iret
das
cli
int
movsl
stos
sahf
mov
divps
in
sub
mov
mov
sub
sar
add
daa
cmp
xchg
addr16
insb
mov
cwtl
cmp
insl
xorb
cmc
std
daa
js
push
jle
scas
add
xchg
dec
imulb
sub
loopne
cmp
aam
mov
dec
sub
jnp
fldl
inc
fidivs
cli
sahf
mov
cmpsb
fldcw
pusha
and
lods
in
or
inc
push
movsl
repz
dec
mov
popf
mov
inc
imul
add
sbb
sub
dec
mov
out
dec
in
sti
fbld
fbld
xchg
aas
std
xchg
ret
dec
fisubrl
add
or
dec
addb
sbb
adc
fstps
cmpsb
lahf
dec
cld
decb
loope
shrb
out
add
in
rclb
push
jmp
mov
sbb
arpl
lret
fwait
jge
roll
mov
in
dec
mov
jb
in
inc
ja
pop
lock
or
call
dec
dec
es
sti
in
add
sahf
popf
sub
cmc
and
ljmp
xor
jmp
lods
mov
gs
adc
mov
cs
xor
add
adc
jg
stos
mov
mov
test
pop
add
mov
sub
xchg
movsb
fs
into
cmp
xchg
mov
dec
push
sbb
rcl
mov
cmpsb
pop
or
adc
idivb
sbb
sahf
ret
mov
dec
int3
jbe
mov
lcall
enter
adc
adc
data16
enter
pop
pop
dec
lcall
gs
mov
test
xchg
test
xchg
mov
movsb
pop
inc
ret
js
daa
jp
loop
jle
repz
jl
and
jge
cmp
or
ljmp
leave
jmp
or
sbb
xchg
gs
sbb
and
dec
xor
inc
out
sub
or
out
imul
jecxz
mov
inc
stos
push
pop
sub
jp
push
sub
inc
xchg
xor
adc
mov
into
test
les
jnp
push
xchg
test
into
or
js
sbb
js
frstor
inc
or
mov
mov
jno
int3
add
adcb
inc
push
insb
loopne
jmp
les
jecxz
xlat
imul
test
push
xor
add
xor
lcall
xor
jp
push
jno
cwtl
cld
in
adc
push
mov
out
mov
aas
xchg
mov
jns
stc
mov
addr16
mov
rcr
mov
dec
or
cltd
add
pop
mov
in
inc
push
and
xchg
inc
imul
arpl
xchg
inc
sti
inc
inc
cld
rcrb
ljmp
enter
sub
fstpt
and
sub
in
lahf
or
lret
js
test
orb
sarb
lcall
ret
pop
mov
ja
jp
in
jge
in
or
sahf
mov
stc
movsl
push
repz
mov
push
in
dec
into
bound
scas
mov
jbe
xchg
push
pop
pop
loope
fs
imul
xchg
sub
das
sbb
insl
inc
xchg
cmc
ja
jmp
stos
mov
pop
cmp
push
xchg
sub
cmc
mov
pop
into
fstpt
xor
or
ljmp
inc
add
ss
sub
add
sub
mov
aam
aad
cli
and
xchg
lods
ffree
xor
jle
sub
mov
nop
gs
or
dec
xor
push
sbb
jmp
bound
dec
call
sub
loopne
xor
out
test
pop
inc
subl
lods
cmp
push
add
loope
mov
mov
lods
pushf
ret
xorl
and
stos
sti
mov
arpl
std
ret
gs
jns
push
and
mov
jmp
push
addr16
mov
cmp
jmp
add
pusha
imul
ret
mov
jl
cltd
scas
iret
push
add
int
push
jle
test
fsub
popf
push
dec
adc
add
adc
insb
sub
push
lahf
dec
pop
jecxz
iret
div
pushf
or
roll
xchg
ljmp
mov
dec
rcrl
leave
mov
add
fistps
mov
ja
aaa
dec
aas
pop
aaa
pop
in
sub
add
pop
cli
push
and
mov
lds
mov
jo
pop
pop
jle
add
std
lcall
imul
repnz
push
clc
jbe
arpl
out
sar
xchg
mov
cmpb
ret
test
lods
outsl
movsl
jecxz
nop
inc
cmpsl
sbbb
xchg
dec
enter
jne
sbb
aam
ja
xchg
sub
nop
push
adc
movsb
bnd
arpl
xor
sarb
push
push
fists
jp
mov
filds
or
sub
dec
pop
jg
out
adc
arpl
adc
int3
outsl
mov
xchg
enter
into
inc
sub
mov
mov
in
xlat
adc
lcall
jae
mov
loop
cmp
mov
cmp
jp
mov
sahf
jnp
push
lahf
ljmp
lret
cmp
or
arpl
ss
jbe
scas
xor
ljmp
aam
repnz
inc
dec
add
ret
stos
lods
lret
mov
es
aad
jns
shrb
mov
inc
ret
cmp
scas
add
sbb
icebp
addl
push
lahf
push
ss
or
lahf
add
ret
jae
je
fidivrl
ljmp
lods
ja
jp
cmp
adc
adc
push
jp
mov
mov
int
pop
fst
shrb
bound
insl
cli
iret
xchg
xchg
pop
jmp
test
rol
inc
jb
in
fisttpl
sub
scas
outsl
call
rcr
jns
pop
rcrb
movsb
in
adc
aas
das
mov
in
sbb
jbe
addb
and
sbb
loope
pop
cltd
bound
inc
jmp
es
lea
cmpsb
xchg
iret
int3
xor
movsl
lods
cmp
mov
mov
and
lret
xchg
bound
sbb
mov
fs
add
jno
push
and
adc
sbb
call
outsl
hlt
and
xorl
sbb
cltd
or
cmpsb
hlt
xor
outsl
xchg
aaa
jecxz
aad
in
xchg
sub
scas
mov
sbb
data16
push
in
mov
in
ljmp
aas
push
jp
and
and
push
xchg
sbb
cmpsb
lds
shlb
sub
xor
mov
shll
sbb
jmp
popf
imul
push
xchg
inc
mov
pop
cmp
pop
add
scas
sbb
mov
jmp
jae
jl
push
jae
push
xchg
add
lahf
hlt
sbb
mov
imul
cmpsl
scas
dec
jge
cmc
sub
pop
pop
sahf
cmp
dec
xlat
in
inc
push
jnp
adc
fimull
jo
inc
sbb
dec
dec
mov
lods
push
clc
lea
es
cs
xor
mov
cltd
inc
add
xchg
sti
jg
mov
cmpsl
div
pop
std
add
rorb
int
nop
mov
fisubl
xchg
movsb
hlt
pop
sahf
inc
scas
pushl
push
pop
outsl
sbb
cmp
je
into
aas
jg
sti
cmp
mov
jle
scas
aaa
addb
mov
outsl
sbb
pop
mov
or
movsl
sti
xor
rorb
je
dec
mov
nop
jae
sub
pop
cli
push
jbe
repnz
jns
cmp
push
jg
scas
push
pop
mov
popf
push
dec
fbld
mov
mov
jo
jmp
mov
xorl
lahf
xor
cmpsb
les
loopne
cmc
out
and
sti
add
loop
add
sbb
out
cmp
repnz
mov
jmp
outsb
pop
add
mov
adc
pushf
mov
std
jp
and
daa
inc
shrb
test
lds
xchg
sub
xchg
cld
inc
cmc
mov
sarl
push
lret
js
push
add
stos
push
pop
mov
aas
fwait
pop
mov
movsl
jae
in
push
mov
addr16
sub
dec
inc
test
fwait
sub
xchg
jmp
push
mov
dec
test
in
movsl
xchg
lods
sub
xchg
in
mov
sbb
dec
subb
out
pushf
push
fnsave
and
movsl
push
stc
xor
into
mov
lea
add
dec
pop
scas
and
je
int
aas
adc
test
xor
jge
insb
mov
and
pop
xchg
xchg
inc
cmp
clc
fisubl
lods
pop
push
and
sbb
sbb
sub
add
fildl
stos
inc
add
xor
lahf
dec
mov
xor
sti
push
test
cmp
adc
cmp
lds
sub
push
jno
jge
sub
stos
iret
lock
mov
shlb
mov
and
rorb
lahf
push
mov
push
daa
sub
cmp
xor
hlt
jns
pushf
push
cmp
jmp
out
das
push
stc
stos
push
cwtl
or
fcomps
pusha
adc
mov
das
int3
inc
mov
dec
ljmp
mov
xchg
fxam
aas
push
xchg
fwait
mov
movsl
andl
into
fwait
je
jb
sbb
cmp
cwtl
jne,pn
xor
cmp
punpckhwd
les
push
lea
jmp
iret
imul
scas
sbb
pop
sti
jp
sub
jp
std
pop
jecxz
rcrl
inc
cld
fnstsw
sbb
mov
xor
cmp
xchg
mov
jge
adcl
cwtl
arpl
lods
sub
int3
lret
dec
mov
push
out
hlt
mov
cmpb
addr16
in
dec
sbb
lods
mov
rcr
and
aaa
lcall
popa
mov
aam
shlw
jmp
pop
jnp
negb
xchg
cmp
insb
aas
or
int3
rorl
jae
call
lret
addr16
imul
lock
inc
pop
movsb
inc
jecxz
inc
repz
aas
xchg
mov
rcll
or
jl
adc
sbb
hlt
popf
aaa
mov
lods
xchg
mov
adc
lahf
push
xchg
or
lret
jl
dec
out
rcll
or
sub
adc
jnp
jne
adc
popf
cmc
fdivl
xchg
lods
in
push
lods
out
pop
dec
je
xchg
nop
sub
cmp
add
sti
cmp
mov
call
dec
cmpsl
adc
mov
prefetch
mul
lea
mov
ja
cli
loope
adc
inc
loop
mov
call
hlt
divl
sbb
or
cltd
test
adc
out
test
sbb
int
jg
adc
out
sbb
xchg
out
mov
push
mov
mov
push
ret
add
sub
or
sahf
or
sbb
pop
pop
std
rcrb
fldt
fwait
hlt
sbb
xor
ljmp
mov
dec
mov
dec
test
out
fucomp
jg
dec
shlb
pop
fnstenv
stos
jne
and
sub
pop
dec
inc
fdivr
imul
and
push
iret
je
scas
das
addr16
or
and
scas
cmp
sub
push
adc
hlt
pop
in
popf
popa
mov
movd
imul
cmpsl
or
jmp
cmp
in
shl
dec
cmc
lret
insb
xchg
dec
aas
mov
inc
std
mov
or
jg
sbb
dec
cmpsl
ret
rcr
or
movsb
cmp
lea
cmp
and
lock
cwtl
out
sub
dec
jge
jns
mov
adc
fisttpll
or
nop
mov
sub
inc
xor
in
xchg
dec
test
bound
jg
int
sahf
push
push
jnp
int3
cld
shll
cmp
pop
mov
lcall
arpl
push
sti
loopne
mov
pop
loopne
pop
sub
mov
mov
sub
pavgb
push
mov
adc
and
xchg
mov
scas
aaa
push
js
notb
xchg
jmp
cld
mov
pop
sbb
sbb
xor
or
inc
and
imul
pop
xchg
test
and
fsub
pop
push
pop
add
fld
hlt
add
adc
idivl
xchg
repz
clc
insb
jg
xchg
test
xor
leave
xor
imul
loop
xor
aad
stos
aad
shll
adc
popf
add
add
cmpsl
or
fisubrs
jle
daa
outsb
shlb
hlt
lods
jne
mov
cmp
and
sahf
fdivs
sbb
jb
leave
pop
add
ds
sub
divl
push
dec
mov
mov
xor
xchg
xor
or
pusha
pop
jmp
mov
clc
xchg
mov
inc
hlt
nop
or
lahf
inc
pop
mov
outsl
stos
xchg
or
push
inc
jmp
adc
mov
jns
adc
inc
sub
jns
popa
adc
jmp
mov
emms
int3
fsubs
xchg
sub
cmpsb
cmpl
testl
sub
test
in
in
mov
and
dec
cmc
cli
xchg
in
jmp
or
cmpsl
lods
adc
or
hlt
xchg
in
movsl
stc
scas
and
imul
xchg
ljmp
jno
lret
mov
jbe
xor
fbld
popa
xor
bound
fisttpl
ret
jecxz
lods
cmp
dec
jp
xchg
in
loop
mov
push
repz
movb
fisttpll
rorb
rorl
add
or
pop
out
cltd
mov
aas
es
shrl
and
jns
data16
mov
jnp
cld
mov
inc
mov
pop
xchg
inc
pop
shll
xchg
sub
in
add
ljmp
push
xchg
adc
xorl
test
xor
jno
xchg
pop
push
mov
xchg
jns
fadds
push
lahf
jnp
sub
xor
pop
cmc
in
pusha
mov
stc
push
bnd
stos
sbb
adc
out
inc
cld
and
decb
pop
sub
add
add
pop
in
inc
mov
cmp
aaa
repnz
add
andb
cld
lods
inc
adc
pop
add
or
jp
xchg
mov
inc
jbe
pop
test
fdivrl
xchg
push
aaa
lods
jno
sbb
sbb
dec
or
aad
dec
repnz
sub
and
and
sahf
fstpl
and
stc
or
add
sub
fldenv
pop
push
dec
mov
cmpsb
fildl
xchg
adc
ljmp
repz
xchg
outsl
sbb
dec
or
inc
xchg
mov
roll
sbb
xor
mov
ds
push
jne
dec
mov
test
stos
jecxz
pop
movl
aad
or
aad
sti
test
xchg
repz
rclb
xor
es
mov
ljmp
push
or
idiv
or
shll
sbb
jecxz
adc
cmpsl
jle
mov
jecxz
mov
lods
arpl
or
shlb
add
adc
mov
jnp
add
ficomps
out
xor
js
aam
mov
sbb
adc
pop
inc
or
sub
insb
les
in
pop
outsl
je
xchg
ljmp
cmc
jle
adc
inc
int
cmp
xchg
pop
cs
jbe
jp
pop
sub
mov
adc
aam
inc
mov
lret
jp
lret
cmp
cltd
and
push
push
inc
cmpsb
in
pop
push
add
pushf
andl
jl
mov
mov
in
insb
cmpsb
push
mov
inc
dec
movsb
dec
mov
leave
mov
pop
cmp
je
call
fdiv
jne
xchg
enter
loope
add
leave
movsl
jl
ret
ja
mov
fildll
lea
pop
cli
fs
loopne
adc
adc
jl
sbb
sbb
lahf
out
dec
data16
jne
imul
mov
xor
adc
je
xlat
jmp
mov
les
ja
out
adc
ljmp
cmp
popf
jge
mov
sbb
jmp
add
and
mov
xlat
adc
inc
push
xorl
hlt
fwait
incl
es
xor
test
mov
xchg
sub
mov
outsb
and
in
cmpsb
push
idivb
js
scas
and
inc
test
xor
lods
jmp
pop
es
insb
mov
push
popa
pop
pop
fs
mov
loopne
pusha
sbb
mov
daa
cltd
mov
shr
repz
push
cmpsl
xlat
mov
incb
push
jne
imul
out
lock
mov
dec
out
push
jmp
cmc
inc
inc
out
test
repz
ficoml
sub
dec
scas
fwait
or
mov
fdivr
stos
lods
fistpll
out
fidivrl
push
mov
in
int
loope
sub
mov
daa
or
ja
or
pop
or
addr16
enter
pop
pop
cli
and
iret
pushf
out
lds
or
mov
pusha
xchg
jns
lds
pop
jecxz
mov
mov
mov
xchg
mov
out
in
sbb
mov
test
sahf
add
lret
lea
movb
and
jae
mov
mov
cmpb
shrb
fildll
sub
in
adc
test
movsl
xchg
daa
in
jmp
loope
sarl
dec
and
and
dec
pop
push
fadds
xchg
mov
inc
sarb
mov
mov
out
inc
mov
adc
mov
in
test
pop
inc
shrl
xor
sub
pop
fmull
das
outsb
loopne
aad
push
mov
sub
outsl
test
xor
addl
jbe
xchg
nop
cmpsb
or
push
fsts
leave
loope,pn
dec
lock
push
cmp
mov
icebp
clc
stc
cmpsl
repz
mov
push
out
shlb
gs
or
in
shll
movsl
pop
pop
bound
dec
jae
push
xchg
adc
or
add
les
test
loop
cmp
lahf
mov
mov
xor
iret
repnz
dec
dec
pop
cmp
mov
inc
mov
dec
ljmp
xchg
lcall
scas
or
insb
pop
pushf
rclb
add
cmpsl
dec
lcall
rcr
mov
shlb
push
mov
movsl
repnz
je
cmp
or
cmp
int3
js
push
or
bound
repnz
push
sbb
jns
stc
fildl
push
and
jle
inc
mov
clc
daa
and
mov
cld
dec
out
mov
or
or
cli
ss
dec
sbb
mov
ja
jle
pop
jo
fidivrl
cmc
pop
pop
mov
sub
repz
pop
ljmp
pop
push
add
ds
divl
mov
adc
mov
jns
imul
enter
mov
gs
dec
xchg
test
and
popf
lret
insb
cmp
imul
pop
mov
mov
sbb
aam
dec
pop
iret
adc
and
pop
adc
xchg
std
scas
and
cmpsl
test
inc
ja
jmp
mov
ljmp
mov
call
jmp
ljmp
ljmp
add
jecxz
add
xor
in
jno
cld
jp
xor
mov
gs
mov
and
push
lock
pop
jnp
add
push
in
popa
into
jg
add
pop
int
push
pushf
pusha
ljmp
or
in
loopne,pt
jge
hlt
dec
add
pusha
scas
or
lods
inc
dec
gs
add
xchg
fstpl
jp
add
adc
lock
adc
lret
push
dec
repnz
jmp
add
iret
pop
sbb
je
ret
bound
cmp
push
rol
xor
mov
cmc
shlb
xor
rcrb
inc
lods
or
out
lock
mov
mov
dec
xchg
aam
outsb
orl
shll
movl
dec
inc
jo
into
sahf
mov
int3
aaa
jecxz
and
add
jnp
subl
test
lahf
push
jmp
fxtract
or
xchg
lea
adc
mov
bound
scas
setge
xlat
dec
push
push
lods
test
inc
sub
jl
pop
cmpsb
push
fmul
shlb
out
in
sub
sub
mov
outsl
add
fs
adc
call
cli
lret
push
icebp
jo
xchg
out
cmpsb
cmc
adc
or
subl
lods
std
outsl
xchg
mov
repnz
sbb
ret
fs
mov
add
mov
jg
fists
push
aad
pop
add
outsb
pop
add
je
adc
mov
fs
lcall
sar
stos
lcall
add
pop
fmuls
int3
aad
pushf
xor
add
jo
inc
sti
cmp
dec
movsl
mov
xchg
jge
sar
add
mov
adc
sub
js
or
ficoms
and
xor
lret
dec
pop
aaa
sahf
xchg
push
or
push
sar
ret
jl
pop
mov
lock
sahf
fdivrl
sbb
xor
popf
jge
fcoml
mov
dec
iret
xor
dec
inc
mov
mov
lahf
data16
xor
push
adc
test
aad
test
mov
das
jnp
lret
or
inc
stos
adc
subb
sub
push
inc
mov
inc
or
inc
xor
out
sti
mov
inc
out
push
int3
ret
imul
add
push
movsl
daa
popa
and
repnz
xchg
addr16
iret
loope
out
or
rclb
inc
push
jae
or
bound
adc
ret
jo
fnstsw
dec
push
mov
mov
and
pop
test
decl
sub
fstpl
sub
mov
and
pop
shl
or
xchg
stc
sub
scas
scas
xchg
into
out
aam
stos
testl
insl
jecxz
dec
sub
ret
and
adc
fists
lods
mov
add
cmpsb
dec
dec
jae
fsubr
rorl
loope
call
xlat
lea
mov
mov
adc
jmp
es
cmc
arpl
xor
cmp
ret
jne
stos
repz
jecxz
push
ja
outsb
sbb
mov
mov
in
enter
jns
cmp
pop
mov
ffree
pop
jmp
sar
jno
stc
outsl
and
inc
nop
stc
dec
and
jge
movsl
negl
rolb
pop
mov
cld
and
gs
mov
enter
or
and
inc
bound
lds
arpl
sub
adc
inc
lea
push
rorb
shll
int
push
sbb
outsb
sbb
mov
mov
cwtl
dec
rorb
in
insl
insb
jnp
mov
imul
shlb
sub
jecxz
cmp
sahf
js
sub
fdivl
jae
pop
cmp
mov
cmp
ret
out
adc
int
sahf
add
push
das
lock
add
dec
jbe
cmpsb
out
insl
add
sbb
and
decb
repnz
mov
xor
xlat
mov
pop
cmp
loopne
leave
jg
jle
pop
cmp
jge
minps
dec
lods
ss
mov
and
inc
lds
out
xchg
xchg
pop
mov
sub
lcall
movl
jge
popa
lret
ret
loopne
icebp
jl
mov
and
or
bound
dec
push
shrl
push
add
popa
mov
inc
mov
xchg
cmp
jbe
mov
iret
xor
adc
and
xchg
xor
pop
jle
hlt
inc
daa
fsts
xchg
out
sbbb
dec
std
sbb
add
hlt
orl
mov
lods
hlt
push
fidivs
lods
cmpsb
mov
arpl
in
insl
adc
sub
int3
jmp
push
mov
push
outsb
movl
inc
inc
jbe
inc
mov
xchg
inc
mov
jg
ret
je
inc
mov
pop
mov
push
mov
add
idivl
out
outsl
pop
pushf
xorb
pop
in
int3
push
add
xchg
mov
cmp
jbe
xchg
mov
pop
push
inc
mov
jmp
jno
sbb
outsl
pop
iret
mov
adc
addr16
xchg
test
or
and
push
sti
push
int
rcll
sub
mov
addl
inc
or
dec
mov
push
cmp
push
mulb
mov
dec
mov
loopne
cmp
mov
loopne
repnz
adc
ret
shrb
mov
xchg
pop
std
pop
pusha
jb
ja
imul
push
xchg
xchg
lret
aas
mov
out
int
nop
jno
mov
fcompl
push
mov
pop
cmpsb
add
es
jo
mov
mov
sbb
cmp
insb
xchg
dec
lods
mov
xchg
popf
sbb
mov
ds
out
push
aaa
push
push
dec
clc
push
adc
lods
es
call
cs
pusha
mov
int3
xchg
movsb
aaa
mov
insl
lret
sub
in
lret
mov
push
mov
call
mov
adc
into
daa
leave
lret
dec
adc
and
dec
negb
cmpsl
mov
pop
addb
dec
jge
clc
cltd
ss
repz
out
mov
fsubrl
dec
ljmp
xor
rcrb
inc
leave
dec
mov
push
jnp
pushf
pop
adc
push
fdivl
push
inc
mov
int3
cmpsb
addr16
enter
fsubs
cwtl
push
and
inc
scas
xor
pushf
xlat
sarl
sub
pop
or
js
sbbb
dec
push
or
cmp
mov
jae
into
js
dec
xor
pop
sub
jns
fisttps
sub
out
test
fsubl
adc
lret
push
sub
push
jmp
aas
arpl
sbb
add
hlt
dec
jno
cmpsb
orb
popf
mov
insb
psubusw
push
pop
push
xchg
push
xrelease
push
mov
inc
mov
adc
lret
mov
out
add
push
adc
add
mov
and
mov
sbb
jno
add
cld
mov
adc
inc
addr16
inc
mov
xor
and
cmpsb
mov
sbb
xorl
subb
fiadds
fnstsw
imul
add
imul
fisubrl
test
fwait
cmpsl
push
pop
loopne
cli
sbb
mov
dec
aas
mov
ret
add
cmp
aaa
popa
mov
test
arpl
cmpsl
cmp
cmpsl
adc
rcll
jae
mov
pushf
add
fisttpl
repnz
pop
xlat
divb
jp
or
or
fstpt
shll
ds
out
push
sub
mov
das
inc
jmp
outsl
mov
scas
repz
popf
cmp
int
insb
aaa
mov
rcrl
xor
xchg
xchg
push
mov
out
retw
or
lods
dec
mov
dec
adc
je
or
xchg
cltd
mov
imul
sahf
pop
xchg
adc
lret
pop
sbb
aad
out
idivl
jno
add
popa
jle
pop
lods
into
fisttpl
loope
or
popa
daa
add
outsb
pop
add
dec
mov
jg
jle
or
mov
arpl
sbb
inc
aam
mov
hlt
jle
cld
sbbb
jmp
mov
inc
xor
ds
jnp
dec
fisttpl
imul
subl
sub
stc
mov
iret
pop
stos
mov
in
aam
sub
stos
mov
xlat
mov
dec
les
adc
cli
sub
jge
test
out
testb
pushf
aas
push
cmp
shr
mov
adc
add
fildll
xor
push
sbb
movsl
and
xchg
jne
nop
lret
incb
inc
xchg
jmp
scas
mov
mov
dec
fisttpl
and
bound
push
sbb
sti
fidivrs
adc
shrl
or
das
mov
popf
imul
sahf
loopne
mov
dec
mov
fwait
call
mov
sbb
xor
sbb
movntq
adc
in
roll
out
inc
pop
push
pushf
inc
rcll
jb
outsl
push
stc
in
add
inc
cli
and
orl
and
out
mov
fcmovnu
jle
mov
inc
pusha
push
mov
aad
adc
pop
sahf
xor
stos
dec
or
push
lock
sub
push
loop
lret
and
add
movsb
xor
addb
std
cltd
cmp
ds
in
fadds
or
xor
mov
dec
or
imul
sub
cmpsl
adc
imul
lret
cmp
fidivrs
shlb
mov
or
in
cli
outsb
ss
mov
insb
inc
lahf
ljmp
and
shl
mov
dec
jge
ret
orps
add
int
leave
gs
fdivrl
mov
push
sub
jge
sbb
lods
add
imul
jg
cmpsb
pop
aad
or
mov
xor
lret
pop
jp
bound
pop
loop
jp
lret
aaa
mov
pop
mov
adc
mov
inc
dec
mov
cs
sub
jbe
aas
addr16
fsubrl
xchg
rolb
jns
addb
sti
jnp
ret
jmp
scas
repz
addl
out
das
and
fstpt
add
mov
ret
loop
jl
inc
rorl
sub
rcr
adc
loopne
pop
jae
mov
fimull
test
shll
xor
fnstsw
sbb
cmp
xchg
out
mov
loopne
cmc
dec
arpl
sbb
xchg
gs
es
ss
lock
jb
rcrb
mov
xchg
xor
mov
and
es
repnz
sbb
cmc
adc
test
rolb
pusha
loopne
jb
inc
jp
loop
repz
addb
mov
inc
xchg
cs
adc
inc
shl
test
sub
sti
stos
leave
push
and
insl
sahf
fadds
pop
or
andb
mov
jl
jbe
imul
cmpsl
and
es
cmpsl
add
cmp
sbb
xchg
lds
sbb
inc
dec
push
pop
mov
aaa
stc
adc
push
push
ds
or
call
push
push
mov
dec
xlat
mov
pop
das
adcb
das
aad
add
sbb
je
out
outsb
out
and
jl
repnz
enter
push
data16
pop
push
sti
sbb
inc
pushf
insl
mov
movsb
rcl
jns
ljmp
dec
outsl
iret
cmovg
adc
pusha
pushf
mov
pop
cmp
sbb
test
negl
test
jge
jne
mov
jg
punpckhdq
cmpsl
or
sbb
mov
jmp
test
mov
insb
mov
xchg
fldl
mov
pop
loope
sub
dec
test
and
pushf
jge
sub
outsb
jecxz
mov
push
pop
ss
in
push
mov
mov
push
push
scas
ror
addr16
jl
sub
xor
lret
push
testb
adc
out
movsb
dec
dec
movsb
xchg
push
jbe
stos
pop
aam
enter
xchg
mov
scas
push
icebp
push
sbb
xchg
into
ret
or
mov
add
xchg
test
add
sahf
or
adc
sub
sub
jo
mov
mov
movsl
clc
push
mov
hlt
nop
inc
add
mov
push
cmp
sub
xor
out
enter
mov
and
cmp
cmp
inc
sbbl
out
aad
popa
adc
xor
aas
mov
lods
outsb
fisubrs
imulb
es
in
or
jmp
ljmp
loopne
hlt
lods
and
movsl
inc
jae
mov
jecxz
leave
mov
flds
aaa
test
xor
rorb
in
subb
repz
shlb
xor
sti
cmp
sbb
mov
movsl
rcr
mov
sub
icebp
sub
mov
aaa
stc
mov
lea
ss
xor
cld
inc
mov
mov
lahf
mov
pop
jp
jmp
icebp
lock
mov
cmpsb
xor
movsb
or
xor
test
insl
mov
jp
pop
and
loop
push
or
inc
push
aas
cmpsl
xor
fidivrs
and
insb
cmp
adc
test
mov
pop
cltd
faddl
push
enter
add
xor
dec
gs
sub
test
repnz
or
fsubl
int3
xchg
add
addr16
cltd
aam
pop
out
stc
pop
push
aam
loopne
jb
or
adc
in
je
jns
push
mov
fbld
or
jb
sbbb
cmp
popf
lret
mov
and
roll
inc
std
mov
push
or
cmp
call
pop
lret
xchg
sub
adc
arpl
jmp
and
enter
ljmp
cmp
insb
push
inc
pop
or
adc
movb
or
ret
mov
add
xor
les
and
frstor
in
cmp
mov
idivl
incl
stc
mov
cmpsl
repnz
jle
daa
js
cmp
sub
shlb
mov
mov
push
jns
repnz
test
stos
mov
jg
loopne
fucomp
loop
cld
pop
fs
inc
and
sbb
cmc
xchg
hlt
mov
add
jecxz
cmpsb
adc
mov
test
enter
add
outsb
pop
add
push
cmp
inc
lahf
pop
or
sub
sti
cmc
lea
test
imul
ret
psrlq
pop
xor
dec
mov
pop
iret
in
inc
aam
outsb
sti
pop
mov
xor
xchg
imul
sbb
mov
push
pop
fistpll
mov
pushf
sub
pusha
xor
push
or
insb
add
jg
clc
fmull
add
xor
mov
jne
jmp
pushf
mov
andb
cmp
outsl
jp
inc
mov
mov
scas
les
jecxz
mov
test
add
and
loop
push
inc
mov
test
vunpcklps
lods
in
dec
or
inc
pop
xlat
lcall
testb
push
mov
adc
sub
jge
fistpll
in
imul
add
movsl
cmpb
mov
pushf
xchg
xlat
sub
xor
cmp
xor
sbb
jmp
popa
jecxz
fbld
xchg
mov
cltd
inc
push
fwait
push
mov
push
xchg
insb
dec
enter
ja
push
mov
and
imul
mov
xchg
xor
push
and
jns
xchg
in
cmpsb
sub
lea
imul
leave
sbbl
or
int3
adc
adc
test
rorb
clc
fucom
xlat
and
aaa
insb
cli
inc
popf
insb
rcl
sub
adc
pushf
xchg
out
stc
mov
jns
js
and
aad
dec
sbb
or
or
cmp
push
lds
add
loope
aas
jne
xor
pop
frndint
inc
sahf
dec
incb
pop
push
jo
jge
testl
ds
sub
test
push
jmp
add
adcb
sahf
ljmp
jp
push
adc
scas
push
jo
std
push
jne
movsl
push
jb
xor
or
or
stos
data16
lods
jecxz
stos
adc
xor
in
jecxz
mov
dec
mov
pop
scas
in
das
mov
je
aaa
push
add
pop
fcompl
rcl
add
iret
mov
lock
mov
pop
jnp
inc
pop
or
pusha
notb
cmpsb
sbb
fcoml
lcall
sbb
jb
push
ret
imul
pop
jb
mov
mov
pop
push
stos
bound
sti
mov
lock
call
pusha
cwtl
pop
and
inc
add
and
rolb
mov
leave
adc
jecxz
xchg
cmp
scas
and
jbe
test
jle
pop
mov
test
add
mov
sbb
sbb
mov
or
les
jge
addr16
xor
sub
outsl
jb
leave
mov
lods
cmp
subb
ljmp
pop
outsb
xor
pop
fdivl
jns
stc
andl
dec
xor
mov
xlat
test
jge
inc
jno
and
or
scas
xchg
call
repz
cmp
push
das
rcl
jnp
mov
inc
and
xor
inc
loopne
sarb
fldl
gs
mov
mov
or
out
pop
cwtl
cmpsb
and
cmp
mov
mov
fnstsw
je
cli
adc
fnstcw
or
mov
enter
mov
scas
aaa
and
shlb
jge
inc
aad
cmp
outsl
insl
fwait
jno
sbb
lea
and
or
fsubl
jp
sub
ljmp
pusha
cmp
nop
test
inc
dec
in
sbb
loopne
add
outsb
sbb
fs
outsb
orl
fsubrs
outsb
and
xor
mov
xchg
sti
sbb
xchg
scas
push
add
cmc
xchg
stos
pop
adc
in
xor
pop
in
sbb
mov
add
sti
jecxz
sub
movsb
fwait
jb
add
jns
fsubrs
mov
aam
jmp
dec
add
mov
adc
mov
and
mov
or
addl
test
inc
pop
ret
daa
movsl
cmc
mov
int
popf
jbe
and
dec
in
jae
imul
xchg
sub
adc
push
push
adc
jno
mov
jae
sbb
rorl
fcomps
mov
aas
sbb
adc
push
ja
pop
fildl
xor
push
adcb
dec
test
lods
pop
xor
out
cmp
std
or
inc
and
sub
enter
cwtl
mov
adc
lods
xorl
repnz
jecxz
add
mov
mov
push
jg
fnstenv
pop
sbb
fwait
sub
aam
cld
movsb
movb
xchg
jo
mov
lret
stos
and
xor
xchg
call
mov
mov
inc
push
loope
jnp
fisubs
xchg
rorb
leave
push
fadds
js
xor
xchg
xchg
xlat
rcll
sti
jb
outsb
orb
and
jnp
mov
into
je
loope
push
out
sbb
xchg
adc
hlt
cs
jmp
xor
sub
jns
push
cmp
xchg
jmp
lret
or
sbb
stc
rolb
push
inc
jae
and
adc
xor
jae
jmp
imul
and
into
mov
insb
lea
cmpsl
or
bound
mov
cmpsl
movsl
pushf
mov
pop
mov
es
ljmp
xchg
mov
cli
jae
fadds
hlt
pop
mov
adc
add
mov
in
sbb
mov
mov
jo
stos
cmovne
mov
add
jae
leave
jmp
sub
sbb
cmpsl
das
lret
lcall
fimull
and
std
rorl
out
aaa
jo
add
into
jl
into
lds
cmpb
out
jecxz
dec
cmp
rcll
xchg
jg
sbb
test
mov
ljmp
notb
cs
jp
es
test
mov
in
idivl
repnz
push
ss
pushf
pop
out
push
sbb
xchg
mov
scas
and
xlat
dec
push
add
es
shrb
mulb
sbbb
ret
adc
test
dec
test
test
xlat
scas
or
ret
or
xchg
inc
cmc
ljmp
cld
pop
and
pop
or
popf
jmp
je
lods
mov
mov
sub
or
enter
jl
pushf
push
int
push
jns
mov
mov
jae
sarb
cmpsl
das
dec
ss
fistpl
push
and
add
insl
les
mov
jae
pop
add
pop
add
out
xor
jo
push
xchg
xchg
jmp
jg
jo
arpl
push
jb
xor
fs
xchg
sbb
in
in
or
push
mull
ljmp
push
in
daa
push
mov
jb
cmp
push
aad
pop
sbb
inc
cwtl
mov
ja
sub
adc
and
or
int
mov
xchg
ret
pop
pop
loop
add
pop
clc
mov
andl
pop
push
lahf
jmp
mov
push
imul
pop
pop
jp
int
cld
fisttpll
daa
in
lods
mov
sub
mov
mov
push
nop
sbb
icebp
mov
cltd
or
ljmp
lock
lds
or
mov
adc
sahf
pop
add
mov
lret
jnp
inc
pop
mov
lods
or
adc
push
pop
stos
sahf
lahf
cmc
adc
push
in
out
std
mov
ja
cmp
adc
ficoms
xchg
xchg
stos
pop
cmp
testb
jmp
lret
lds
ss
into
gs
ds
ja
pop
loopne
adc
jmp
pop
mov
iret
adc
pop
pop
clc
adc
jns
sahf
rorl
test
ja
mov
or
fistl
xor
or
cmp
lahf
ss
aad
or
cmp
cmp
scas
es
addr16
icebp
push
int
gs
xor
stos
int3
mov
clc
cltd
lea
or
mov
mov
test
movsb
mov
rol
add
stos
xor
inc
xor
mov
aas
xchg
rcr
scas
ds
xchg
mov
push
push
pop
lds
bound
stos
push
clc
jmp
cmp
push
add
dec
das
jl
imul
out
inc
dec
pop
fsub
push
adc
sahf
inc
sti
movsb
mov
mov
icebp
jg
movsb
pop
mov
ret
paddd
lock
dec
popa
sub
pop
imul
and
xchg
and
adc
nop
mov
insb
sbbb
cwtl
in
aaa
rcrb
stos
scas
es
mov
jb
fstps
fs
fcoms
fbstp
fisttpll
ja
sti
int3
push
fistps
or
out
mov
icebp
shlb
cmpsb
cmp
enter
shlb
inc
ja
add
sbb
scas
lock
jp
call
arpl
xor
or
stc
insl
nop
test
ficoml
xor
imul
pop
stc
dec
ret
cwtl
dec
inc
jne
xchg
out
cltd
mov
mov
push
scas
arpl
test
pop
or
mov
les
addb
and
push
mov
pop
push
lret
out
cli
inc
out
inc
xor
mov
xchg
push
jae
notb
add
add
stc
inc
fnstcw
dec
jmp
sub
aad
repnz
ss
aad
int
pop
push
popf
xchg
mov
fisubs
inc
mov
push
sbb
lock
sub
lcall
icebp
sub
xlat
sbb
xor
sbb
xchg
cmp
insl
imul
dec
test
mov
xor
jmp
xchg
inc
push
cmp
xchg
jno
popa
xor
and
pop
xchg
lds
rorb
sbb
adc
jmp
and
lds
repz
scas
shrl
cwtl
dec
fnstcw
imul
aad
jecxz
dec
push
nop
adcl
cmp
sti
vsubsd
stos
es
nop
fstp
xlat
stc
xor
mov
orl
in
pavgb
add
or
inc
stos
mov
jne
push
mov
xchg
mov
xlat
dec
inc
test
push
jb
aas
pop
adc
push
mov
pop
jg
xor
mov
cmp
xor
mov
dec
int3
sbb
push
cmpsl
pop
div
adc
and
adcb
sbb
sbbl
fstl
mov
xor
idiv
mov
cmc
clc
insl
lods
cli
cmp
dec
dec
pop
int
loopne
insb
adc
rcl
push
iret
ds
mov
aaa
xchg
inc
xor
cmpsl
in
shll
xor
lret
mov
and
js
adc
sub
insl
ret
pop
out
arpl
shlb
stos
sbb
sbb
cmpsb
jl
adc
pop
dec
mov
in
xchg
or
stc
inc
mov
xor
jp
test
xchg
add
lahf
inc
and
pop
les
faddl
jbe
xchg
pop
jno
stos
int
mov
cld
outsb
test
ljmp
mov
adc
fnstcw
push
insl
and
mov
jmp
mov
rcrl
or
adc
in
xor
push
mov
xchg
mov
dec
sti
inc
and
inc
mov
iret
jge
inc
push
mov
mov
loopne
iret
mov
stos
pop
inc
jg
sub
push
and
push
testb
add
mov
shll
xchg
sbb
ficoms
mov
fbld
mov
loope
cmpsl
rolb
pop
cmp
lret
add
and
insl
scas
jg
orps
adc
sbb
add
rcrl
mov
jecxz
cltd
dec
cmp
sub
and
add
int3
repnz
movsl
fldenv
pop
mov
mov
loope
cmp
in
adc
std
sub
out
hlt
scas
xchg
daa
xorb
lret
dec
push
xchg
popf
xchg
or
jle
lods
test
out
mov
inc
inc
hlt
test
push
mov
mov
sub
cli
sbb
xchg
jae
mov
and
call
lcall
push
pusha
cli
enter
lret
out
sub
pop
sbb
push
imul
or
and
jns
xor
insb
cmpsl
cmp
and
add
dec
xor
out
push
inc
movsb
add
adc
loopne
mov
ss
xorl
ret
inc
xor
adc
cmp
imul
in
xchg
push
sub
cmp
js
pusha
js
push
add
fdivr
push
loopne
and
cmp
incb
sbb
jmp
mov
insb
punpcklbw
cmp
das
jae
pop
jg
sub
inc
sub
pusha
lods
orl
in
scas
jb
dec
je
xchg
popa
jae
hlt
sbb
scas
loope
xchg
push
add
add
and
out
mov
mov
cmp
add
pop
mov
leave
ljmp
jb
aad
pop
xchg
pop
mov
mov
enter
push
xchg
and
les
imull
mov
dec
ret
into
out
xchg
cs
cmp
or
add
mov
lea
xchg
sti
inc
sbb
test
pusha
cmp
mov
push
outsb
push
scas
xor
and
fnstsw
add
cs
xchg
dec
ss
shr
mov
mov
or
imul
add
icebp
lahf
xchg
fldl
lcall
jecxz
fildll
cli
mov
push
xchg
add
hlt
out
xchg
in
sahf
les
ja
sbbl
and
mov
popa
adc
xchg
add
mov
int3
popf
xchg
jnp
js
jbe
mov
pushf
call
xchg
cmc
enter
ret
outsb
mov
inc
adc
or
loope
pop
cltd
icebp
lea
stos
cmp
hlt
dec
sbb
ret
mov
jl
aas
xchg
adc
mov
test
pop
cli
adc
out
dec
mov
int
pop
mov
mov
shll
adc
lcall
jno
outsl
ret
or
push
repz
and
xchg
cltd
jo
pmuludq
mov
add
ljmp
mov
in
sub
std
insb
call
or
shrb
jns
or
movsl
xor
cmp
mov
lcall
xchg
pop
inc
add
popa
push
add
pop
cmp
xor
sbb
cwtl
xor
aaa
push
mov
push
mov
mov
push
cmpsl
mov
pop
lret
lods
insl
shl
jg
pop
pop
pop
adc
dec
sub
mov
int3
pop
pop
xchg
data16
pop
fninit
movsb
orl
adc
xchg
lods
cld
pop
jmp
sub
push
clc
subb
aam
cmp
int3
addr16
out
mov
adc
out
cmp
mov
push
insb
inc
xor
pop
and
jno
dec
dec
daa
in
jae
in
mov
into
mulb
sub
pop
hlt
cmpsl
xchg
mov
mov
xor
add
pop
test
pushaw
cmp
je
pop
dec
and
dec
or
and
xchg
mov
push
vsubss
lret
sti
pop
xchg
cmpb
addb
std
out
cmpsb
mov
pusha
lahf
mov
test
add
xor
lret
arpl
fsubs
sub
jne
cmpl
and
mov
aas
insl
fbstp
and
gs
out
movsl
push
inc
and
fs
cmp
mov
or
mov
cld
mov
xchg
stc
cmp
jne
out
mov
xlat
arpl
push
nop
sti
xchg
movsl
push
sbb
icebp
fucomi
lcall
in
mov
mov
out
mov
lcall
insb
lahf
jge
inc
xor
push
inc
aas
mov
imul
dec
push
jae
scas
lret
cwtl
loopne
push
adc
in
push
movsb
mov
xlat
cmpsb
rcl
jne
xchg
inc
dec
mov
cmpb
or
push
mov
xor
cld
inc
dec
push
repz
dec
push
mov
popf
add
inc
sbb
mov
cld
iret
hlt
mov
pop
cld
fiaddl
xor
fidivrs
sub
fcomps
out
adc
fldcw
inc
outsl
in
shll
add
xor
inc
inc
xor
cli
mov
mov
sbb
and
sub
pushf
cltd
fisttps
xor
mov
imul
sbb
mov
mov
or
aaa
sbb
sbbl
sub
mov
push
mov
jb
adc
mov
inc
and
jbe
in
sub
inc
pop
and
rcrb
aam
mov
out
lret
loopne
cwtl
js
iret
xchg
sub
mov
jo
cmp
mov
fcmovne
and
fnstcw
adc
movsb
mov
push
cmpsl
and
mov
xchg
lock
repz
test
jne
push
loop
andl
subl
sbb
sub
pop
xchg
lahf
pop
push
pop
rclb
jmp
sahf
aad
mov
fiaddl
ret
sti
dec
data16
aas
movl
jp
lcall
and
outsl
fwait
and
add
sub
fisubrl
jge
push
or
jge
sti
sbb
fidivs
xchg
mov
sbb
mov
add
jecxz
sub
or
sub
sahf
xchg
sub
fnsetpm(287
pop
lea
sbb
mov
jns
ret
fisubl
fwait
sub
test
js
mov
stos
cmp
xor
sub
subl
loope
jb
out
js
je
or
xor
cmp
jns
xchg
mov
add
lods
ljmp
jecxz
or
mov
jns
js
push
xchg
mov
pop
fwait
in
push
loop
cmpsl
jno
jb
mov
xor
mov
sbb
jmp
ds
outsl
cmpsb
xchg
mov
mov
movsb
jo
icebp
dec
daa
dec
and
fimuls
pop
adc
jmp
stc
jle
dec
out
out
xor
clc
and
bound
add
pop
int
pop
adc
fs
ret
lcall
push
inc
pop
mov
mov
jns
sarb
mov
mov
into
mov
adc
dec
addr16
push
cs
fnstenv
pop
and
sti
fstl
pop
stos
das
jp
movsl
add
stos
rolb
insb
jle
jl
rcrl
out
dec
sub
push
push
pop
xchg
fnsave
sub
fsts
inc
xor
xlat
or
int
jmp
repz
cli
pop
cmpsl
pop
fisubrs
out
cmpb
inc
enter
add
dec
pop
sbb
xor
mov
int3
jb
add
and
es
stos
or
ret
mov
mull
push
xor
pop
std
add
lock
ds
inc
or
or
or
scas
lds
rolb
loope
repnz
scas
in
inc
sub
imul
call
sahf
call
cli
pop
mov
jne
out
ret
inc
xor
xor
xchg
fwait
loope
pushl
movsb
fcomp
jne
bound
repz
stc
jnp
mov
test
mov
cmp
dec
repnz
addr16
xchg
stos
nop
out
cli
je
cmp
movsl
jbe
xlat
ljmp
daa
inc
mov
rorb
add
mov
push
fnstcw
cmpsb
add
pop
mov
mov
ror
fwait
xchg
sbb
add
add
aaa
inc
std
and
stos
push
insb
xlat
decl
imul
mov
in
xchg
iret
ds
adc
adc
sub
inc
je
sbb
scas
shll
loope
dec
xchg
xchg
lahf
cmp
loop
xchg
or
aaa
lods
push
push
inc
bound
sub
push
xchg
pop
icebp
iret
mov
jbe
jmp
pusha
outsb
xchg
mov
icebp
jg
lods
inc
jns
xor
in
ja
repz
push
sahf
aaa
inc
clc
xchg
or
dec
mov
mov
mov
repz
sahf
loop
mov
in
stc
out
icebp
dec
xchg
push
fldt
cmpsb
lea
mov
scas
sub
ficoms
xchg
sbb
adc
test
ss
ss
mov
push
mov
ja
stos
dec
lea
lods
jne
jns
adc
bnd
jb
mov
pushf
lret
std
mov
fwait
aaa
cmp
mov
jmp
enter
scas
jg
push
sbb
andl
mov
adcb
sarb
pop
xchg
icebp
lcall
mov
lret
rclb
pop
aas
mov
or
jo
mov
mov
loop
fsts
and
adc
call
pop
inc
jns
int3
fsubl
cwtl
aam
pop
push
pop
jo
jl
jge
lahf
stos
out
fs
fidivrs
cmp
leave
les
xor
scas
sub
fwait
orb
mov
or
jae
insb
repz
addr16
dec
jl
pop
xchg
add
jne
mov
mov
sub
adc
cwtl
mov
testl
jg
andl
shll
jnp
movsl
sbb
xor
push
movsb
dec
fdivrs
mov
push
loopne
loop
mov
ret
add
push
pop
or
dec
imul
cmp
ds
gs
sbb
adc
pop
adc
icebp
mov
les
out
cmp
dec
add
stos
enter
loopne
push
push
sub
stc
icebp
add
lcall
mov
xor
notl
and
mulb
push
push
popa
imul
out
das
loop
call
mov
push
test
es
orb
stos
fimull
mov
pop
mov
jbe
xorl
fs
push
ja
xor
ret
dec
jl
cmpsb
lret
sbb
ret
cmp
mov
movsl
es
push
or
sbb
leave
jbe
push
mov
fwait
in
mov
aas
jbe
lret
cmpsl
jl
arpl
adc
jb
ds
stc
pop
and
lods
pop
arpl
xchg
or
repz
xchg
pop
sbb
xchg
dec
sub
mov
push
and
cmp
xchg
push
and
mov
iret
jp
mov
fs
jno
repz
ret
mov
pop
test
xorl
jb
fcomip
fdivp
in
std
imul
xchg
gs
scas
imul
push
test
mov
mov
fwait
repz
call
sub
pop
jle
je
mov
xor
xchg
xchg
pop
mov
fs
mov
mov
stos
pop
insb
mov
push
mov
mov
jmp
mov
mov
subl
arpl
push
mov
mov
dec
fcmovu
sub
out
out
ja
stc
iret
call
dec
cmp
xchg
add
mov
scas
cltd
mov
pop
push
test
sub
test
mov
mov
sub
jb
rol
sub
popa
fwait
cld
out
push
sub
test
mov
adc
fs
and
bound
mov
shlb
dec
movsl
inc
mov
mov
fstl
icebp
outsl
mov
jl
cmp
shl
inc
or
mov
daa
mov
jb
in
adc
push
subb
das
loopne
jg
lret
lcall
sbb
fwait
fwait
cltd
push
das
lret
push
xchg
shlb
cmpsb
daa
popa
add
cmpsl
and
xchg
sbb
mov
inc
lea
loopne
sub
jge
shlb
aad
lea
push
mov
movsb
mov
sbb
cmp
repnz
xchg
lock
rorl
out
inc
jne
insl
rorb
andb
sub
aad
insb
lods
push
shlb
sti
ja
mov
test
ljmp
std
inc
shlb
mov
sub
push
push
aas
in
dec
jae
lea
lret
mov
jl
mov
or
cmpsl
mov
adc
mov
cmpsb
add
movsl
scas
shl
push
mov
xchg
dec
fiadds
shll
int
in
les
in
test
js
enter
incb
btcl
push
sar
dec
add
sbb
je
testl
mov
mov
mov
ss
sub
mov
mov
insb
scas
mov
or
leave
xchg
out
bound
and
popf
outsl
and
sbbl
adc
scas
cs
bound
inc
in
jmp
bnd
arpl
fdivl
mov
cmp
sub
jge
insl
in
in
aad
xor
repnz
cld
fsubrs
insl
je
lods
mov
jnp
sbb
xorb
rcrl
popa
fs
jns
loopne
imul
pushf
sbb
push
pop
mov
cmpsw
lret
mov
add
push
fwait
imul
sti
mov
push
icebp
out
arpl
in
scas
mov
mov
jmp
jmp
sub
xacquire
in
push
mov
xchg
into
lret
mov
and
add
repz
mov
add
cmpsb
stos
push
adc
add
aas
lock
mulb
sbb
cmp
jnp
bound
mov
fwait
jle
jle
mov
aaa
test
call
iret
stos
dec
ret
pop
cmp
int3
in
andb
mov
xchg
add
jbe
dec
mov
in
loope
sbb
dec
dec
mov
imul
adc
xchg
and
jae
bound
mov
push
lret
lcall
or
loopne
jmp
cmp
push
adc
lret
push
popa
sarb
cli
test
aad
xor
mov
rol
lea
lods
cmp
pop
iret
adc
xor
add
push
inc
or
pop
cltd
shrl
xchg
outsb
pop
add
and
mov
push
xor
out
jmp
push
pop
gs
mov
leave
bound
mov
pusha
les
pop
in
stc
ficompl
mov
jo
mov
jae
mov
pop
dec
mov
and
xlat
push
mov
dec
mov
xchg
stos
and
imul
insb
fsubl
call
mov
aas
xchg
adc
and
pushf
cmpl
xor
fsub
cmpsl
add
jne
mov
xchg
and
xor
pop
cmc
mov
ud1
dec
aas
jo
fistl
mov
xchg
in
aas
mov
xchg
add
movsb
arpl
cmc
andb
arpl
das
aam
mov
ja
rcll
filds
ja
dec
cmpsb
pop
fmulp
sub
lods
cmpsl
out
rcrl
mov
add
ret
pop
ret
fucom
ret
int3
mov
sub
gs
lods
adc
xor
popa
jns,pt
mov
out
jge
clc
pop
adc
sub
or
in
andl
pop
jnp
popa
pop
dec
aas
mov
push
mov
cmp
insb
fs
sub
ja
jo
fistpl
xchg
pop
imul
adc
cmc
xchg
pop
push
cli
scas
sbb
je
xchg
roll
dec
dec
jne
push
inc
inc
sbb
popf
push
cmp
scas
out
pop
xor
out
mov
popf
inc
adc
je
roll
pop
pop
ljmp
mov
je
dec
incl
add
push
push
lods
push
inc
lret
push
and
lcall
test
push
int3
add
mov
fnstenv
cmp
mov
jp
gs
js
mov
mov
mov
pop
cmpsl
loopne
push
xchg
or
aad
ja
inc
add
mov
mov
pop
xorb
sbb
sub
cltd
testl
and
pusha
fs
fcmovnb
and
rol
adc
pop
lea
mov
add
xor
in
xchg
jno
fistps
outsl
xchg
xchg
stos
xchg
fnstsw
jl
xor
sahf
ret
add
loopne
cwtl
xchg
ficompl
and
xor
mov
pushf
or
cltd
dec
test
shll
ss
sbb
loope
sub
xchg
ljmp
jl
stos
sbb
gs
xchg
stos
lock
aam
push
pop
cmc
cwtl
xor
push
repz
mov
outsb
sub
je
dec
cmc
psubsw
pushf
jecxz
inc
addr16
mov
sub
adc
pop
xor
icebp
mov
jge
loopne
or
bound
push
gs
mov
cli
xor
sub
xor
xor
xor
leave
stos
push
xor
adc
sti
mov
pusha
fadd
mov
cs
out
fistl
testb
cmp
int3
adc
out
andb
cmp
jb
scas
inc
push
in
out
push
bound
or
repnz
jmp
out
push
cmc
mov
mov
push
mov
xor
out
mov
sbb
mov
cmpsb
inc
and
test
mov
sbb
test
inc
bound
dec
dec
ja
push
mov
mov
or
stos
loope
dec
push
in
jecxz
mov
xorl
popa
xchg
fdivl
jecxz
lods
mov
addr16
das
cmp
adc
icebp
aad
js
xchg
or
xor
pop
jb
mov
pop
jle
mov
call
iret
jp
lock
or
push
pop
xor
add
insb
lods
adc
xchg
ficompl
inc
jg
lahf
pop
mov
mov
daa
ljmp
rclb
mov
lcall
es
out
aas
push
lods
jge
xchg
sahf
jge
push
insb
sahf
iret
jp
addb
jno
xchg
aad
add
dec
or
add
mov
cltd
fld
ret
mov
adc
xchg
sub
sbb
sbb
mov
in
jmp
daa
lcall
fcom
jecxz
lods
cld
jbe
jmp
loop
mov
pop
jno
enter
fnstcw
fwait
notl
js
test
fbstp
in
add
faddl
orl
xlat
lcall
jmp
jne
jle
jno
add
jo
xorl
testl
popa
push
mov
and
mov
dec
fsubrp
imul
add
cmc
dec
jmp
iret
sbb
fs
jo
mov
sub
jg
mov
and
scas
cmp
mov
mov
shlb
mov
xchg
outsl
and
pop
jge
ja
negb
or
and
sbb
push
push
mov
test
mov
and
cwtl
out
pop
mov
popl
push
js
or
in
xor
sarb
adc
adc
inc
fdivrp
cli
cmp
stos
sbb
outsb
loopne
push
add
fs
das
or
cmp
cmp
enter
sti
jl
mov
test
loop
aaa
jl
cmp
and
sub
pop
pop
mov
test
inc
sbb
out
insb
mov
mov
xor
stc
dec
imul
sbb
mov
push
pop
add
cltd
repnz
adc
fmuls
mov
inc
dec
add
jbe
cmp
push
push
pop
sbb
or
outsb
mov
cmp
daa
sub
dec
sar
cmp
test
aaa
aaa
xchg
mov
hlt
mov
fwait
xchg
sbb
into
aam
mov
daa
xchg
push
ja
repnz
xor
inc
repz
cmp
mov
jmp
fadds
add
xlat
add
mov
ds
jnp
leave
and
enter
sub
xchg
mov
lea
stos
adc
mov
dec
ja
dec
hlt
xor
sub
test
xlat
cli
jbe
cmp
ret
sub
inc
leave
out
mov
mov
cwtl
sahf
push
cmp
ds
dec
fidivrl
cmpsb
pop
add
xchg
cmp
jl
imull
rcrb
cmp
and
rclb
lahf
add
lret
and
icebp
scas
xlat
push
mov
in
scas
sti
sbb
sbb
adc
lods
inc
repnz
rcrb
or
mov
pop
push
and
jo
mov
cmp
mov
mov
mov
mov
or
xchg
or
divl
adc
dec
shlb
xchg
push
or
mov
ja
jecxz
fsts
cmp
dec
scas
les
xchg
jns
imul
in
and
cmc
into
add
pop
addl
shlb
push
add
outsb
pop
add
in
jbe
pop
or
pop
jl
xchg
clc
inc
xchg
xchg
adc
out
loop
sub
xchg
dec
out
test
mov
fsubs
jecxz
scas
jg
lds
les
push
test
arpl
dec
test
fsts
add
mov
repz
sbb
push
inc
cmp
popa
mov
dec
mov
xor
jbe
jl
lret
adc
sbb
cmc
leave
add
add
sti
xchg
xchg
hlt
mov
push
sti
or
lret
push
push
cmc
mov
imul
sub
mov
sub
std
sub
aad
mov
sbb
xchg
dec
sbb
add
add
sbb
cltd
aad
xor
arpl
hlt
lea
fisttpll
imul
nop
jmp
out
outsl
mov
loop
ss
mov
test
sub
pop
lock
cmp
pop
sub
popa
out
or
loopne
fidivs
ds
xor
in
cwtl
lret
addb
adc
sub
adc
outsb
inc
xchg
push
push
fisttpll
xor
gs
or
jbe
xchg
and
pusha
mov
mov
orl
imul
aas
flds
pop
pusha
lcall
fbstp
jmp
xchg
movsl
push
sbbl
pusha
inc
and
lret
cmp
bound
pop
inc
xchg
sub
adc
push
cld
lods
mulb
leave
sbb
mov
sti
jg
sbb
cmpsl
pop
mov
cli
insl
fucomip
sbb
and
rol
mov
xor
mov
lods
jo
stos
rcrb
dec
mov
jecxz
jge
sbbb
cmp
lods
rol
push
xor
adc
add
or
fsubs
in
jl
aam
mov
into
sbb
aas
stos
cli
popa
insb
jg
dec
cltd
and
pop
inc
xchg
jno
daa
divb
outsl
addr16
push
jmp
fisttps
jecxz
dec
mov
xchg
lods
lahf
test
int
mov
ficompl
fadd
lea
clc
dec
xchg
icebp
push
adc
pushf
mov
add
clc
nop
sub
pop
loop
pop
or
mov
popa
popa
ds
ja
xor
xchg
jb
jmp
sahf
dec
xor
pop
adc
xchg
adc
jae
lret
cltd
pop
or
aam
stc
sbb
loopne
mov
repz
sub
sti
mov
sbb
iret
sub
pop
mov
int3
push
cli
push
add
sbb
push
xor
je
xchg
dec
and
imul
dec
outsl
mull
jmp
dec
shrb
pop
cmp
xor
and
mov
int
sub
loope
or
mov
iret
nop
daa
pop
les
int3
jnp
pushf
xchg
dec
sub
or
cmovnp
inc
sti
nop
mov
mov
les
add
mov
js
jnp
dec
into
pop
inc
xlat
fcmovb
and
ja
loopew
sbb
fwait
je
xchg
dec
jecxz
dec
push
lret
stos
sub
push
xchg
stos
movsl
imul
push
inc
or
sub
pop
mov
add
pop
or
mov
mov
mov
imul
mov
lret
sbb
mov
jg
xor
xchg
adc
insl
fisttps
test
sbb
push
test
inc
lret
imul
aaa
pop
fs
or
loop
inc
icebp
popa
orb
popa
and
dec
arpl
mov
jmp
addr16
fdivrs
push
jb
pushf
stc
jnp
cmpsb
test
dec
cmpsl
ficomps
dec
in
iret
sub
or
push
and
les
xor
je
test
mov
sbb
sub
fistpll
jae
mov
sbb
sub
shlb
loop
mov
popa
pop
dec
jno
stos
push
ret
imul
or
rcrl
add
in
iret
xchg
jmp
lret
sub
iret
xor
nopl
dec
xchg
sub
fadds
movsb
call
scas
in
jb
negb
mov
dec
jg
rclb
mov
mov
fsubl
sub
dec
mov
xor
fisubrl
test
mov
loopne
loope
sub
push
rolb
dec
xchg
sub
adc
rcrb
mov
pop
stos
fstl
es
cmp
lcall
xor
rcr
sahf
fcompl
orb
rolb
ljmp
inc
push
mov
js
mov
jg
in
mov
cmp
jbe
addr16
aad
enter
mov
xchg
xchg
pop
adc
inc
inc
lret
jnp
sbb
adc
mov
test
loope
push
xchg
dec
cli
mov
repnz
in
lahf
cmp
push
pushl
xchg
fcompl
enter
jae
adc
mov
mov
jmp
push
test
mov
push
outsb
jns
scas
xor
inc
mov
mov
arpl
fdivs
iret
aaa
leave
repz
mov
inc
mov
dec
dec
into
mov
lret
adc
std
push
ret
lcall
jge
loopne
sbb
mov
int
jle
inc
pop
or
or
push
es
add
test
cmp
push
push
and
je
dec
pop
dec
lea
hlt
sub
popf
outsl
ljmp
sbb
push
test
mov
mov
pop
add
xchg
lret
cmp
aad
push
js
pushf
adc
lods
jo
mov
notl
out
ficomps
xor
cltd
pop
pushf
sub
jnp
xor
add
leave
cs
in
insl
divb
and
sbb
ja
xchg
push
fcomps
push
mov
frstor
sub
mov
cltd
push
push
push
fs
fsubr
loop
clc
lahf
push
jbe
js
sub
stos
add
xor
fwait
popf
popf
in
sub
popl
mov
cmp
adc
push
sbb
cwtl
mov
xor
sarb
iret
hlt
je
sub
adc
mov
test
and
lahf
xor
call
outsb
push
and
into
cltd
adc
fidivs
rcrl
ffreep
lods
add
data16
mov
adc
test
mov
std
pop
sub
jae
or
add
pop
inc
mov
pusha
loope
push
push
xchg
push
fisubs
bound
xchg
mov
jmp
repz
xchg
mov
pop
push
out
dec
js
test
popf
xor
negb
inc
aaa
scas
loope
mov
cmpsl
lcall
sbb
lds
popa
inc
into
test
mov
push
daa
mov
mov
sbb
mov
push
out
add
jle
ret
repz
std
jle
loope
mov
lret
arpl
add
add
mov
and
or
repz
and
sbb
dec
mov
in
xor
daa
shrd
push
push
lds
call
inc
xor
dec
adc
scas
push
dec
std
cmpsb
rolb
daa
imul
jns
popf
cmp
nop
scas
lahf
and
sarb
pop
jle
cmc
stc
testb
pop
outsb
push
and
ret
fisttpl
lret
lods
mov
xchg
dec
stos
adc
stos
xchg
out
mov
dec
imul
out
mov
add
sbb
mov
jb
push
out
leave
jl
js
prefetchwt1
or
or
aas
movsb
add
arpl
pop
jmp
das
jecxz
movsl
imul
in
cwtl
out
negb
imul
int
pop
pop
data16
or
add
inc
loope
sti
rcrl
pop
pop
ss
push
inc
jle
in
xchg
ret
add
add
xchg
adc
pop
fnsetpm(287
shll
lods
pop
enter
cmp
pop
and
adc
jnp
cld
pop
ret
pop
and
aad
test
xchg
and
cmp
pop
push
mov
ljmp
aad
addr16
stc
arpl
pop
and
push
imul
xor
jno
mov
dec
add
sti
das
mov
pop
dec
cmp
insb
fdivrl
insb
adc
dec
mov
or
sub
sub
sbb
loop
mov
push
stos
out
push
mov
pminub
lea
bound
rcl
adc
lock
push
lret
push
inc
mov
in
and
test
sbb
lea
fucomi
xchg
sub
lods
jb
mov
gs
sbb
xchg
push
adc
or
jge
pop
enter
xor
mov
mov
xchg
dec
pop
in
stos
dec
test
ss
pop
lcall
mov
pushf
inc
jo
pop
out
xchg
inc
fmull
xchg
fcomi
dec
xor
mov
jmp
aas
add
cmp
fisubl
fwait
aas
sub
and
adcl
xchg
xchg
fnsave
jns
adc
movsl
mov
pop
inc
mov
ja
fs
shll
pop
aad
out
dec
scas
pop
out
push
cmc
out
pop
repnz
xor
mov
aam
arpl
dec
push
pop
ret
pop
sub
inc
das
cmc
sbb
or
stos
test
out
test
push
push
jns
int3
popf
xor
mov
ficompl
add
dec
adc
insl
mov
sbb
cmp
adc
xchg
jae
sbb
scas
das
scas
adc
sarb
out
add
pop
lret
out
mov
repz
mov
scas
out
test
sbb
push
xchg
dec
aas
aas
popf
rcrl
mov
and
mov
mov
xor
adc
mov
inc
out
fwait
leave
sarl
cmpsl
pop
mov
push
scas
pop
fldl
test
jb
call
mov
or
fiadds
mov
clc
jno
das
fiaddl
lea
xchg
inc
pop
mov
fistpll
aaa
jb
adc
jle
xchg
ja
dec
push
push
gs
mov
in
pop
xchg
jnp
xchg
mov
mov
pop
lcall
mov
fists
cwtl
andb
and
loop
aaa
mov
mov
sbb
xor
test
push
and
dec
outsb
pusha
mov
icebp
leave
mov
inc
mov
inc
popf
xor
repnz
fcoms
scas
mov
pop
in
test
mov
repz
mov
dec
cmc
jno
xor
push
dec
mov
dec
pop
std
pop
sarb
cmp
and
xchg
pop
ja
movsb
imul
push
sbb
sub
gs
repz
xchg
push
inc
repz
push
sub
dec
push
lret
lret
aas
adc
aad
loopne
xor
in
and
ja
cmp
push
test
roll
inc
clc
fldl
jmp
cmp
cld
cmpsb
jmp
cmp
cmp
cmp
ljmp
cmp
add
jns
fnstsw
pop
or
and
push
cmp
xor
push
fdivp
rclb
jnp
sub
mov
std
loope
dec
in
fnstsw
out
add
movsb
ss
jg
jp
inc
mov
push
push
adc
mov
cmpsb
mov
inc
gs
mov
sub
mov
and
jl
sbb
adc
pop
and
jmp
fdivrl
or
test
xor
outsl
test
andl
pop
mov
mov
add
xchg
lock
arpl
mov
jo
enter
dec
js
pop
idivb
ret
shll
adc
jl
int
mov
cmc
cwtl
cs
nop
int
js
test
popa
vxorps
adc
adc
adc
outsb
dec
ror
xor
nop
pop
sub
aam
push
test
mov
dec
pop
shlb
lock
and
das
push
add
mov
leave
les
leave
mov
cwtl
jae
cmpsl
aad
jbe
mov
aad
shrb
loope
push
or
cmp
out
mov
aam
xchg
loopne
xor
cmovbe
and
loope
icebp
xchg
dec
or
adc
xchg
add
dec
jbe
popf
scas
shl
dec
xchg
fsubrs
rolb
jae
sbb
cmpsl
push
or
xchg
and
stc
jge
out
push
inc
add
xor
or
lcall
movl
or
lock
pop
daa
aas
adc
dec
inc
jecxz
idiv
mov
xor
sbb
mov
xor
aad
scas
aaa
mov
lods
cmp
shll
sub
and
das
out
jecxz
or
jecxz
mov
call
jo
iret
cmpsb
xchg
flds
or
loop
pop
movsb
pop
int
add
adc
inc
push
mov
les
insb
pop
push
popf
cli
push
or
sub
ret
adcl
js
inc
lcall
call
sbb
push
cmp
nop
sbb
cs
fisubrs
lahf
xchg
outsl
and
pop
les
sub
lret
loope
loopne
xchg
dec
sub
push
push
loope
loopne
jg
cmp
jmp
cmc
in
mov
in
pop
mov
add
xchg
out
xchg
adc
mov
loopne
loope
movsl
add
xchg
dec
idiv
sahf
out
or
push
add
shll
add
add
sub
push
ljmp
adc
out
cmp
push
outsb
icebp
mov
in
ret
cltd
arpl
std
je
pop
loopne
xchg
adc
lret
pusha
pusha
xchg
aam
pop
fadds
xor
lret
data16
sbb
jge
or
out
mov
dec
daa
sub
xchg
mov
push
aaa
nop
lea
mov
in
mov
add
jecxz
dec
rolb
addr16
ja
dec
stc
das
sbb
sub
lahf
scas
mov
xlat
cmp
push
ret
sti
sub
pusha
mov
imul
out
inc
lret
icebp
negl
cmc
or
xchg
popa
imul
and
or
aas
hlt
mov
push
sbb
scas
repz
fldcw
inc
sti
es
dec
shl
xor
test
cmp
xchg
or
push
jo
push
aaa
sub
aad
std
dec
xor
push
xor
inc
pop
pusha
aam
in
cltd
xor
mov
xor
pop
mov
mov
add
and
mov
mov
js
fildll
scas
call
in
lea
imulb
mov
dec
out
aas
pop
out
or
mov
or
shrb
push
arpl
inc
sbb
lods
mov
mov
outsl
xchg
xchg
inc
sbb
push
push
or
push
jns
pop
mov
push
lds
or
insb
and
cmp
inc
lock
out
cmp
insl
and
cltd
push
pop
mov
or
in
mov
lea
sub
rcl
xchg
shl
dec
lds
adc
or
mov
subb
in
imul
mov
add
in
inc
sbb
into
xor
mov
push
repz
jae
insl
cltd
sub
push
test
add
mov
mov
push
push
mov
icebp
rolb
or
out
mov
test
xor
xchg
test
jg
mov
rcrl
pop
mov
pop
adc
push
insl
xchg
push
call
rcll
or
pop
push
iret
mov
ret
inc
cs
mov
icebp
xor
push
jge
dec
adc
or
adc
out
enter
jecxz
jno
jnp
cmpb
sub
shlb
jno
mov
mov
scas
push
mov
or
lods
adc
scas
es
xchg
das
push
nop
sti
mov
sbb
pusha
sub
imul
mov
adc
and
pop
push
lds
outsl
dec
dec
sbb
pop
sti
push
sub
jl
imul
mov
rcll
nop
cld
fmull
lea
das
or
bound
pop
loop
and
sarl
pop
xchg
movsl
push
rolb
cltd
push
adc
jnp
pop
movsb
popf
jl
adc
push
repnz
daa
gs
pop
insb
into
sub
push
pop
xor
push
jge
outsb
notb
xchg
mov
dec
mov
push
aaa
aaa
sbb
mov
mov
shlb
fisubs
je
sbb
aam
push
jg
jge
xor
sbb
jle
adc
xchg
ror
leave
rcrl
fs
mov
add
std
in
xchg
sub
push
sbb
jmp
adc
js
jl
fstpl
jbe
in
dec
xor
or
inc
or
mov
lods
jne
ja
idivl
add
mov
dec
loope
and
adcb
mov
inc
xor
push
clc
and
outsb
fstp
sbb
jb
negl
cmovle
fwait
push
rcrl
inc
mov
pop
repnz
out
xchg
test
leave
pop
and
insl
pop
popa
mov
aaa
sbb
jnp
jmp
push
fdivrs
mov
mov
and
adc
loop
aas
lcall
jge
ffreep
in
lret
test
or
and
or
and
sub
sub
pop
cmp
mov
push
out
sub
cmp
imul
cmp
sub
int
mov
jns
xchg
sub
add
or
scas
sbb
fcoms
mov
sbb
insb
pusha
inc
jl
or
fstps
mov
adc
cmp
ds
add
mov
dec
mov
lds
or
dec
add
call
daa
lret
mov
cmp
and
insl
jge
push
fmul
imul
adc
ljmp
adc
rcrb
out
insl
add
loopne
xchg
adc
jg
mov
pop
or
xor
adc
xchg
daa
push
cltd
lcall
aam
inc
shlb
mov
insl
in
jnp
push
and
lret
scas
mov
sub
jns
pop
mov
xchg
loopne
xor
or
push
mov
pushf
mov
jecxz
dec
adc
je
adc
xchg
ficoms
inc
pusha
fucomip
pusha
sub
sub
add
fcompl
sub
sbb
jg
xor
xor
fs
scas
fs
xchg
jns
repz
or
jp
mov
add
push
cmpl
scas
adc
dec
ss
sarb
lock
adc
aas
sahf
mov
sub
jne
mov
ljmp
call
or
repnz
lods
add
mov
push
sub
mov
cmp
das
addr16
fs
lds
push
testl
scas
xchg
lods
fsubrl
js
adc
faddl
addr16
pop
mov
test
add
std
lret
or
jns
push
jnp
and
je
mov
cmp
loope
dec
inc
adc
cmpsb
pop
dec
call
stos
jne
pusha
pusha
int
mov
push
jne
mov
leave
mov
stos
jge
pop
or
add
jl
push
int
out
std
pop
mov
iret
daa
inc
mov
out
xchg
fmull
clc
test
icebp
inc
sub
inc
xchg
iret
ret
aas
fisttpll
cmpb
add
and
mov
cmpsl
out
fisubrs
repz
adc
xchg
mov
dec
test
aaa
cli
stc
cmp
and
adc
jno
xlat
decb
cmp
stc
adc
mov
mov
adc
out
sub
in
or
fmuls
jnp
lahf
jl
leave
sbb
pop
orb
fcomip
sbb
sbb
push
cli
arpl
adc
inc
cmp
fildl
lock
xorl
sbb
addl
sahf
ds
fbld
mov
sub
push
sub
adc
mov
cltd
xchg
int3
xchg
push
sbb
scas
push
mov
xlat
cmpsl
flds
test
xor
outsb
dec
push
xchg
jno
xor
add
shlb
jg
stc
ficoms
inc
and
or
add
add
out
inc
enter
cli
icebp
repnz
push
add
in
inc
or
pop
enter
popf
dec
mov
sub
js
imul
push
out
adc
add
cmpsb
add
fimull
imull
aam
call
jne
pushf
jl
push
in
dec
mov
jp
cltd
add
stos
outsl
adc
or
and
data16
dec
loopne
mov
or
cs
test
push
outsb
aas
repz
movsl
aaa
cli
xchg
add
add
lods
mov
jg
fwait
dec
mov
ret
cmp
ds
cmc
pop
mov
cmp
mov
loope
cld
jo
mov
stc
mov
outsl
pop
sbb
jl
mov
mov
cmp
fbstp
xchg
push
movsb
scas
ret
cmpsl
xor
aas
fcompl
push
or
arpl
lds
push
fildl
mov
outsl
sbb
dec
sti
xchg
or
push
dec
into
rcll
lds
dec
cmp
inc
sub
sbb
sbb
dec
push
divl
js
movsb
imulb
mov
mov
outsl
jb
fwait
testb
mov
adc
inc
fwait
xchg
aas
out
inc
loopne
sbb
cmpsl
mov
xchg
lods
icebp
lahf
cmp
mov
pop
aam
jbe
test
mulb
jp
inc
push
gs
pop
dec
ret
jno
sbb
mov
mov
push
sub
sub
pop
adc
jne
mov
aaa
cld
imul
arpl
xor
xchg
lods
xchg
mov
sbb
pop
or
push
je
stos
icebp
or
insl
lcall
pop
iret
xchg
and
adc
pop
jg
adc
mov
data16
cmp
jb
dec
pop
cmp
and
push
cmp
pop
in
out
xor
frndint
aas
jg
mov
negl
enter
mov
pop
or
push
push
fs
pop
jae
sub
mov
out
pop
sbb
inc
push
imul
movsl
and
and
movsl
repnz
mov
add
inc
push
push
xchg
and
push
scas
adc
imul
rclb
cmp
fcmovu
xchg
jmp
push
or
clc
call
repnz
je
cltd
push
jg
lcall
mul
punpckldq
insb
jns
repnz
and
mov
xchg
push
or
xchg
hlt
xor
popa
stos
fcmovnu
pop
mov
bswap
xor
imul
dec
fcoms
imul
daa
pop
cmp
inc
icebp
sarl
inc
and
dec
aas
enter
adc
mov
aad
pop
sub
arpl
rolb
mov
xor
cmp
aam
adc
hlt
sbb
lods
shlb
add
mov
push
jns
xchg
aas
inc
sbb
pusha
dec
stos
pop
adc
cs
dec
movsl
jge
cmpb
into
and
andl
scas
add
mov
and
pop
mov
daa
xchg
ret
mov
test
insb
sub
ja
imul
jbe
movhps
mov
or
adc
test
add
test
into
pop
and
mov
push
xchg
mov
pop
testl
and
clc
sub
mov
dec
out
ss
inc
lret
fmuls
mov
mov
popf
inc
das
sub
add
lcall
popa
and
xchg
loop
mov
sbb
dec
call
repnz
shrb
mov
rorb
insb
lret
lret
sbbb
inc
ds
and
inc
sub
xchg
dec
test
or
in
jl
push
cmc
xor
inc
and
cltd
lods
xchg
cmp
push
jp
ds
xchg
call
sti
jp
test
adc
cmp
mov
sbb
loop
mov
popa
pop
stos
pop
and
dec
sbb
aam
cmpsl
mov
add
repz
into
outsl
mov
push
cmpsl
cwtl
call
shll
inc
lea
das
rcrb
pop
cmc
push
sbb
jae
outsb
pop
dec
ljmp
sub
dec
jg
pop
out
fildll
jno
pushf
pop
pop
lods
mov
lds
dec
stos
es
jmp
pop
into
sub
and
adc
jno
sub
xor
fcmovnu
and
nop
mov
stos
cli
xor
jae
stc
dec
enter
inc
fwait
sbb
or
jecxz
xchg
mov
rcll
loop
int
iret
sbb
in
mov
push
addr16
rcrl
shrl
cltd
cmp
into
cwtl
mov
jp
mov
shrl
xlat
sub
idivb
cld
pop
std
icebp
loopne
stc
in
stos
popa
cmc
cmp
mov
repnz
icebp
dec
popa
out
xchg
mov
or
repz
jne
or
sbb
push
lods
jle
pop
and
mov
int
call
inc
out
sbb
mov
cli
aam
xor
jmp
adcb
inc
jge
dec
sbb
int
jp
nop
test
mov
mov
lret
dec
stc
lcall
xchg
das
hlt
xchg
pop
fmull
mov
cmpsl
fstpl
lock
repnz
aam
data16
adc
sub
daa
stos
ds
loope,pt
int3
mov
adc
mov
insl
mov
lds
leave
xchg
and
xchg
cltd
sub
out
sub
sub
int3
aas
cs
lahf
ret
inc
adc
or
jno
out
mov
test
lock
daa
xlat
das
icebp
xchg
sub
loopne
cmc
lods
xchg
int3
adc
adc
in
and
jmp
adc
fwait
add
std
mov
scas
fisubrl
xor
pop
ss
jmp
or
inc
cmpb
loope
lret
jae
push
das
scas
scas
movsb
mov
int3
add
movsb
or
xchg
xor
stos
call
mov
orl
jne
ret
imul
push
cs
push
stos
bound
cmpsb
inc
out
or
mov
sbb
xchg
cmp
xchg
stc
mov
pop
push
stc
in
mov
pop
or
jae
inc
inc
sbb
call
jg
std
push
ja
popf
push
inc
repnz
mov
test
fnstenv
stos
ss
adc
mov
loop
mov
push
mov
cmp
xor
mov
and
scas
loope
lods
in
in
scas
and
ljmp
pushf
xor
inc
insb
mov
sahf
lret
movb
add
out
stos
sbb
sub
mov
mov
add
and
mov
pusha
adc
jno
add
add
sahf
dec
movsb
and
test
sub
inc
fs
cld
push
xchg
lahf
mov
aaa
mov
inc
fildll
fcoml
xlat
sub
push
sti
fdivrl
scas
sbb
test
sub
shl
push
push
lods
mov
push
mov
andb
xchg
imul
pop
add
jl
cwtl
sbb
jno
lock
outsl
stos
outsb
pop
pop
push
mov
inc
aaa
arpl
mov
mov
test
dec
mov
push
into
sbb
hlt
lods
dec
dec
push
lcall
xor
cs
mov
inc
push
xor
test
xor
stos
adc
ret
subl
cmc
cmp
in
inc
push
shrb
je
add
call
lea
inc
push
sarl
jbe
add
arpl
out
lds
mov
test
jae
xchg
addb
inc
cmp
xor
loopne
fadds
and
mov
idivl
fimuls
inc
fisttpll
jns
enter
repnz
jb
sbb
mov
jno
xchg
lret
sbb
aas
mov
adc
sti
mov
popl
xchg
shrl
add
lcall
daa
jmp
pop
jmp
adc
xor
fadd
ljmp
xchg
loope
mov
adc
mov
imulb
daa
orb
mov
decb
gs
popf
jg
outsl
inc
inc
or
or
mov
cmp
dec
aam
and
clc
mov
pop
mov
movb
dec
popf
test
scas
mov
pop
cmp
push
sti
in
inc
mov
fmull
out
dec
push
and
inc
insb
sarb
addb
mov
cmp
cmp
pop
mov
inc
xor
ret
push
stos
ret
push
push
scas
inc
out
js
iret
clc
in
test
dec
inc
cmp
pop
insl
xor
fisubs
mov
rcl
das
cmpsb
scas
cmpsb
stos
adc
or
iret
cld
addr16
scas
loope
mov
mov
aaa
rclb
sbb
sbb
nop
mov
int
test
nop
push
inc
jp
jo
jo
mov
call
test
popf
es
daa
jne
in
xor
mov
stos
mov
cmpsb
xchg
andb
jbe
shl
xchg
adc
add
xlat
dec
out
inc
fldcw
xor
in
out
popa
cmp
add
fidivl
leave
daa
dec
ret
jb
mov
jb
aaa
mov
mov
inc
in
cmp
push
mov
mov
scas
jb
enter
xor
shrl
push
in
das
stos
lods
cmp
cmp
stc
clc
push
js
ss
push
aaa
and
fildl
mov
das
dec
inc
arpl
nop
rcrb
xor
ds
mov
push
mov
fidivl
lret
mov
imul
movsb
xchg
mov
push
pop
stos
test
cld
and
mov
push
leave
mov
js
push
movsb
push
rcl
mov
adc
add
mov
add
std
xchg
lret
rorl
fdivl
xchg
int
mov
std
and
jp
outsl
insb
adc
orb
aas
cmpsb
push
sub
ret
pop
sub
mov
xchg
bound
rorb
pushf
push
fwait
sti
sbb
jg
jg
add
fiaddl
pop
or
aad
lods
sbb
insl
ficomps
cmp
ja
mov
push
loopne
sbb
sub
sub
inc
mov
push
sub
ljmp
jne
outsb
scas
bound
leave
inc
in
inc
xchg
mov
mov
aam
shll
es
sarb
mov
mov
dec
aad
cmp
fsubrl
mov
and
jno
cli
pop
add
or
xor
sti
clc
dec
mov
andl
dec
xchg
or
hlt
jg
push
rcl
sub
mov
ja
adc
mov
pop
lods
ss
ret
ret
frstor
pop
incl
sti
out
pusha
pusha
jo
sbb
mov
ror
mov
cmpb
jb
pushf
pusha
and
lods
or
adc
mov
imul
into
iret
and
outsl
aam
sbb
push
mov
mov
push
test
xchg
test
xor
sub
or
cmpl
mov
cmp
rcrb
shlb
ror
fwait
and
cli
out
idivb
shll
and
and
xlat
push
rorl
pushf
pop
mov
test
mov
sub
add
cwtl
pushf
sub
fwait
push
jmp
xchg
sub
inc
aas
mov
adcl
sbb
mov
std
test
bound
jae
aaa
aad
test
hlt
sub
mov
and
sub
fdivr
shl
cmp
divl
push
jnp
inc
loope
mov
adc
into
or
mov
das
mov
fcmovnbe
inc
stc
xor
aad
mov
hlt
repnz
cwtl
pushf
outsb
fstpl
sbb
clc
jge
loope
gs
and
mov
icebp
fsub
xor
push
ss
jnp
pop
and
ret
and
push
dec
mov
andl
test
movsl
cli
movsb
or
inc
fiadds
movsb
sub
inc
push
adc
int
setae
mov
arpl
aam
mov
xchg
mov
repz
xchg
cmc
pop
jae
cld
jbe
xor
pop
cltd
fs
std
sbb
lock
lods
or
jmp
hlt
addr16
inc
jle
xor
ret
inc
mov
and
fists
addl
mov
cmovbe
adc
add
xchg
clc
sbb
clc
mov
das
adc
sub
xchg
test
fcom
xor
sub
movsb
push
jae
dec
fcmovne
insl
jno
xchg
fistl
std
pop
cs
out
mov
push
orb
ss
lods
fsub
mov
sbb
gs
sub
or
nop
dec
out
bsr
cmp
fimull
aad
mov
orl
xchg
and
and
shrl
inc
sub
fwait
adc
ljmp
xor
imul
insl
je
popa
mov
sub
imulb
push
subb
dec
out
or
inc
add
jns
push
popa
push
pop
jmp
jle
js
aam
mov
jns
add
add
loop
add
xchg
push
mov
loopne
add
sbb
mov
add
jp
nop
adc
push
jge
cmp
outsb
in
push
jne
ja
pop
or
insb
lods
xchg
sub
adc
jne
jl
cs
jae
imul
dec
mov
pop
pop
ds
movsb
lock
cmc
lds
or
xor
xor
aas
sti
mov
in
loopne
and
mov
fcmovne
in
cmp
mov
popa
fldcw
popf
pop
in
out
mov
add
ret
pop
shlb
add
mov
dec
push
pusha
dec
push
mov
lock
jne
or
fdivrl
bound
daa
lahf
mov
jmp
ss
mov
xchg
add
mov
in
sbb
cmp
inc
rclb
out
and
shrl
cli
leave
insb
aaa
push
push
adc
inc
ljmp
mov
scas
dec
push
hlt
inc
jae
dec
and
inc
mov
dec
pop
gs
and
or
jb
or
mov
xchg
mov
inc
add
ljmp
cltd
clc
into
pop
mov
testl
nop
dec
leave
cld
inc
fsubrs
aaa
xchg
bound
mov
pushf
popf
fists
mov
pop
in
or
dec
in
xor
leave
and
movaps
stc
out
sbb
or
clc
scas
dec
fs
xor
mov
test
push
outsl
add
xchg
and
jl
cmc
sub
pushf
push
into
insb
cli
test
inc
xchg
sub
sbb
lret
sub
sarb
rcl
xlat
not
imul
in
inc
mov
sbb
cmpsb
xor
jo
or
jle
sub
std
imul
ja
jns
cmp
add
pop
dec
and
push
aad
rcl
and
xlat
popa
test
arpl
sub
loop
xor
push
leave
mov
adc
shrl
lea
add
xchg
out
dec
aam
jp
fs
add
cmc
add
mull
js
xchg
sub
pop
push
ja
dec
or
dec
sarb
je
mov
out
call
hlt
inc
cwtl
roll
pop
sarl
ljmp
xor
mov
mov
fs
jl
ss
iret
mov
cmp
mov
or
sub
xor
movsb
adcl
lea
clc
cmp
popf
mov
xchg
fstp
into
das
mov
cld
ret
lcall
add
jg
sbb
lods
xor
inc
inc
sub
lds
aas
mov
sbb
sbb
and
cmpsl
mov
fdivs
out
push
ja
dec
fnsave
outsb
ret
lret
dec
add
stos
mov
mov
xchg
imul
mov
sub
pop
mov
fcom
out
call
jae
push
sbb
movsb
sti
cmpsl
icebp
movb
cmpsb
cmpsl
mov
mov
dec
bound
shlb
adcl
out
repz
mov
cmp
push
pop
and
dec
mov
mov
mov
aaa
test
inc
cmp
idiv
mov
xchg
jg
pop
outsl
imul
test
pop
sbbb
cmp
lods
lret
popa
rcll
inc
push
lret
inc
popa
and
lret
sub
int
je
out
push
or
pop
scas
adc
inc
dec
aas
sbb
das
fsubl
lods
push
mov
icebp
scas
shll
ds
mov
fisubs
cmp
bound
push
dec
xlat
stc
sbb
ret
xchg
jmp
jp
dec
call
jno
sub
adc
sbb
ret
fnstcw
dec
adc
mov
mov
mov
dec
pop
fs
fisubl
retw
ljmp
and
mov
fwait
pop
xchg
mov
cmp
repz
and
pop
xor
daa
sub
addr16
int3
pop
fst
dec
out
fisttpl
sub
test
aaa
cwtl
jge
push
pop
enter
pop
mov
xchg
xor
jge
and
mov
sbb
jge
psubw
dec
mov
cmp
icebp
loope
sar
insb
sub
lret
pop
idiv
or
pop
testb
loopne
in
arpl
cld
and
xor
movsl
adc
push
fcmovb
pop
or
sub
push
mov
outsb
cmpsb
add
sub
bound
lahf
mov
mov
lea
dec
or
pop
int3
cld
add
gs
in
iret
xor
pop
dec
mov
jae
mov
leave
pushf
outsb
xchg
lret
mov
mov
mov
pushf
insb
mov
in
test
cmp
pop
push
arpl
std
sub
dec
push
in
mov
dec
loop
clc
cwtl
movsl
imul
fsubrl
imul
push
cwtl
mov
push
xor
xlat
xchg
inc
imul
adc
subb
loope
xchg
pop
mov
lret
mov
addr16
and
or
xor
mov
or
repnz
xchg
push
into
pop
ffree
cltd
mov
mov
std
call
mov
xchg
mov
aas
or
or
dec
xchg
pop
xlat
inc
outsb
xor
inc
cmp
xchg
mov
xchg
sbb
ficompl
dec
stos
inc
jo
push
push
sub
mov
in
pop
dec
imul
push
out
mov
xor
ret
and
popf
xchg
jle
cli
je
lods
mov
xor
jno
pop
xchg
mov
jo
inc
dec
fistpll
ja
jecxz
sbb
mov
pop
mov
jae
clc
add
push
push
push
shl
jnp
out
pusha
data16
inc
ret
mov
dec
mov
stc
lock
adc
xor
outsb
andl
imul
out
sub
mov
xchg
test
xchg
jmp
dec
loope
sub
mov
xchg
cmpsl
jae
insb
gs
cmp
cmc
sub
sti
push
incw
aaa
scas
fidivl
cmp
jnp
imul
jl
xor
ret
and
mov
mov
inc
and
loope
xchg
int
or
test
ret
add
in
push
cmp
pop
pop
sbb
pop
inc
xor
bound
push
lret
cmp
xchg
fisttpll
xchg
sahf
push
dec
jge
mov
fcoms
rcr
xchg
cltd
js
data16
icebp
sub
mull
jecxz
jo
jne
inc
dec
out
xor
flds
rorl
xlat
roll
les
or
adc
pusha
loope
nop
gs
sub
jge
dec
lcall
fdiv
dec
jne
ret
add
test
mov
jecxz
arpl
addb
outsb
pop
add
lea
sbb
call
loop
and
in
lahf
xchg
insb
adc
loopne
mov
ja
pusha
cvttps2pi
jns
shlb
adcl
sahf
sbb
push
xchg
popa
dec
push
scas
sub
mov
fs
or
jp
ret
in
jp
std
cld
pop
orl
cmc
gs
lea
pop
lods
ret
shlb
bound
xchg
dec
cmc
pop
dec
sub
sbb
mov
inc
pop
and
sarl
out
fstl
ljmp
mov
in
fldl
jae
xchg
jl
clc
xor
mov
mov
sub
bound
xor
mov
pop
jnp
dec
and
xor
iret
pop
mov
arpl
imul
pop
xor
idivb
addr16
in
inc
insb
arpl
adc
xor
mov
inc
mov
push
cmp
imul
cli
fwait
adc
aad
dec
mov
xchg
or
push
xlat
rolb
mov
lods
mov
pop
mov
enter
bound
and
mov
xor
pop
and
je
sbb
stc
push
xchg
mov
pop
add
adc
inc
mov
jl
cmp
inc
mov
or
jne
inc
out
xorl
adc
int3
mov
add
cs
adc
imull
rcr
and
shl
aaa
jecxz
icebp
jl
jb
xchg
jle
push
mov
ss
mov
xchg
dec
pop
cwtl
daa
push
and
pop
fidivrs
dec
mov
mov
insl
daa
imull
add
sbb
cmpb
push
xchg
enter
ds
xor
xor
in
cmp
push
push
xchg
fsubrs
adc
lahf
lcall
mov
jnp
adcl
sbbb
movsl
sahf
jle
aaa
aaa
popf
outsb
push
mov
je
dec
and
into
ss
imul
dec
dec
push
sub
or
pop
mov
pop
jns
pusha
pop
mov
cmp
xor
mov
test
scas
inc
jp
jle
enter
sbb
mov
in
jg
xchg
into
ljmp
jl
xor
sbbb
int
jo
jl
aam
dec
arpl
jo,pn
loopne
clc
xchg
lret
sbb
sub
xor
nop
push
scas
sarb
ror
lret
xor
mov
lret
mov
sbb
xor
lcall
cmpsl
popf
icebp
shlb
scas
je
push
jo
out
movsb
push
sbb
in
cmp
shl
mov
add
mov
addl
mov
adc
inc
and
xchg
je
stos
std
int
jae
adc
and
mov
jne
mov
pop
and
xor
int
mov
cmpl
sbb
add
ja
cmc
or
mov
adc
mov
hlt
pop
shll
mov
movnti
dec
dec
js
add
ficoml
push
stc
cld
mov
lds
in
mov
out
jmp
in
dec
insb
jecxz
sbb
mov
fimuls
add
pop
jp
jae
repz
cwtl
pushf
lahf
lea
push
mov
pop
pop
or
and
repnz
adcl
pop
aam
and
sahf
into
mov
repnz
mov
stos
xlat
enter
mov
pop
jno
out
std
mov
lret
bound
test
jns
loopne
jmp
xlat
dec
add
out
dec
pushf
push
aad
adc
out
das
scas
mov
add
pop
in
mov
pusha
add
cwtl
inc
sub
stos
mov
add
fnsave
in
rorw
push
rorb
inc
bound
cmp
out
in
cmp
inc
lock
adc
pop
inc
pop
sbb
rcrb
xchg
mov
pop
shlb
fildl
movsb
mov
add
cld
cmp
jp
jl
fs
jnp
push
cmc
xchg
rorb
mov
lret
xchg
orb
mov
aaa
lea
xchg
in
dec
push
adc
insl
out
push
in
xor
jb
dec
mov
jecxz
push
mov
jmp
pop
into
push
div
int
cmpsl
mov
cmp
movsb
pop
push
pop
insb
mov
xor
push
pop
cmp
adc
subb
xlat
and
icebp
cmpsl
push
shrl
push
in
data16
xchg
jge
lds
je
pop
pop
roll
pop
cmp
mov
jp
fdivl
mov
xor
xchg
inc
divb
pop
int3
jno
test
aam
jecxz
pop
insb
push
or
rclb
inc
xor
dec
cmpsl
test
xchg
adc
bound
shl
gs
movsl
loopne
jbe
shr
cmpb
dec
ljmp
aas
int3
mov
sbb
adc
fcom
mov
mov
xor
fcompl
into
and
mov
xchg
pop
test
test
sbb
mov
pop
aas
mov
movsb
cmp
mov
push
adc
setl
xor
pop
xor
shrb
jmp
cmp
lahf
lock
push
ss
int
xor
cmpb
xchg
es
add
jmp
fndisi(8087
scas
subb
cmpsb
push
mov
add
bound
nop
dec
out
jl
hlt
and
mov
and
and
pushf
ljmp
or
std
in
fistpll
mov
fs
jmp
jle
shrl
inc
in
fisttps
inc
mov
fimuls
lock
mov
inc
loope
add
mov
inc
daa
jmp
aaa
cmpsl
test
push
stc
ret
jno
or
dec
mov
loop
rcrl
cmp
imul
rcll
ljmp
pmuludq
push
ret
mov
pushf
js
mov
pop
and
mov
dec
jmp
xor
xchg
cmc
pop
xchg
mov
ljmp
mov
out
jmp
repz
sti
push
jmp
fildll
xchg
mov
lcall
test
and
mov
sub
aas
popa
jb
xchg
aad
sbbl
mov
movl
xchg
mov
fists
cltd
std
sub
push
adc
mov
xchg
inc
mov
int3
pop
fiadds
jmp
sti
push
xacquire
mov
pop
icebp
btc
cltd
mov
adc
out
xor
decb
aam
frstor
pop
push
push
adc
pop
mov
ja
xchg
add
adc
aas
pop
push
jb
stc
scas
dec
outsl
stc
testl
inc
insb
mov
dec
cli
aam
iret
int
addb
imul
cld
lcall
shrb
and
imul
mov
orl
in
aam
imul
or
and
fldenv
inc
add
mov
sub
xchg
gs
sbb
push
inc
lahf
cltd
sub
gs
pop
lods
add
dec
jp
ret
out
xchg
cltd
std
push
idiv
pusha
stos
ja
xchg
lcall
out
movsb
xor
push
push
xor
push
or
jmp
xchg
div
andl
push
lcall
sub
pop
jmp
sbb
add
out
xchg
in
add
inc
or
sub
mov
jecxz
inc
pop
lea
sub
sbbb
or
or
pop
pop
sbb
cmp
pushf
xor
fdivrp
push
outsb
test
loopne
andb
push
inc
xor
cld
cltd
mov
jmp
gs
aam
mov
pop
jle
xchg
in
repnz
mov
mov
dec
and
or
in
jmp
add
test
sub
icebp
popa
ret
in
dec
sbb
jmp
adc
push
push
ljmp
or
adc
mov
dec
sti
mov
add
inc
xchg
lods
leave
pusha
push
jl
push
aam
ret
cltd
int3
movb
enter
rol
fucomi
xchg
in
adc
test
out
bound
int3
sbb
pop
adc
stos
mov
aaa
jno
mov
jno
jg
mov
arpl
pop
fidivrl
pop
push
fwait
sub
dec
inc
stos
movsb
sub
sbb
addr16
cmp
ja
sub
adc
mov
test
cmp
icebp
adc
les
mov
and
fiadds
jo
test
xor
std
or
add
push
or
inc
shll
stos
loopne
dec
test
movsb
push
or
mov
adcl
jbe
aas
jg
or
jno
outsb
fsubl
sahf
adc
ja
sbb
push
fildl
aas
push
mov
jns
cwtl
jmp
sahf
inc
cld
mov
xlat
sub
sbb
inc
xchg
pop
sub
sbb
stos
dec
jno
pushf
and
cmp
lea
loopne
aam
jno
inc
push
icebp
mov
mov
xchg
cwtl
mov
icebp
lods
jae
adc
inc
pop
popf
dec
and
clc
dec
hlt
aas
xor
js
out
xlat
lds
cmp
sub
lock
cld
gs
xchg
arpl
sahf
cmp
aad
jnp
add
cmp
int
into
test
inc
fwait
dec
stos
lds
popa
add
bound
lods
adcb
push
imul
arpl
xchg
mov
lea
jg
xlat
adcb
movsl
adc
xchg
sub
arpl
in
add
and
je
gs
hlt
dec
dec
test
ss
pushl
adc
insl
clc
scas
jmp
mov
arpl
jge
dec
daa
arpl
popa
pop
xchg
push
or
nop
mov
insb
lods
push
call
in
mov
jp
mov
sbb
pop
xor
lock
les
adc
or
popa
call
test
xlat
dec
fsubp
xchg
out
movsl
dec
rep
pop
hlt
clc
flds
daa
dec
mov
add
std
sub
shlb
pop
pop
pushf
loope
rorb
adc
js
imul
pop
fsubr
mov
xor
daa
dec
or
ret
fs
mov
cs
mov
cmpsb
jp
jecxz
enter
loope
or
mov
mov
andb
push
sbb
xor
sbb
es
dec
fsubrl
push
jno
popa
test
fwait
and
xor
test
add
and
lea
inc
ss
repz
mov
into
sub
rcrb
or
cwtl
dec
fwait
stc
arpl
cmpb
imul
sbb
in
jp
ljmp
cmp
std
ret
pop
imul
les
ss
out
imul
stos
fs
test
dec
adc
sub
imul
loope
pop
les
mov
pop
push
sub
jno
dec
mov
hlt
sti
add
mov
inc
bound
cld
addl
mov
jb
ja
es
clc
loopne
dec
or
sbb
pop
push
or
sahf
pushf
push
orb
out
loopne
shlb
leave
fwait
in
or
xor
xchg
push
push
cmpsl
lock
idivl
aad
inc
js
fdiv
icebp
pop
cmp
bswap
nop
xor
xor
xor
cmpsb
mov
ljmp
adc
imul
inc
inc
jne
fs
lods
or
and
shlb
loop
mov
jbe
int
leave
inc
aam
mov
loop
aas
dec
push
loopne
pusha
cwtl
jb
cmp
xchg
pop
and
adc
inc
int3
and
push
adc
inc
rorl
dec
andnps
xchg
or
sbb
imul
adc
call
inc
jge
dec
lahf
lock
inc
out
pop
les
xlat
icebp
out
aas
adc
sbb
stc
aam
push
das
jp
jmp
lods
cli
dec
pop
jp
stos
mov
cmp
mov
repnz
mov
mov
mov
cltd
xacquire
mov
fldcw
das
mov
lods
leave
xlat
test
mov
push
lret
dec
mov
cwtl
or
test
daa
xchg
xchg
rorb
cwtl
or
out
stos
int
repnz
pop
dec
or
or
decl
dec
es
movsb
rorl
andb
mov
call
mov
cld
inc
loop
outsb
stos
or
mov
jb
mov
pop
dec
sbb
je
lahf
adc
sti
mov
or
dec
or
or
pop
dec
xor
inc
enter
xchg
js
cmp
addr16
out
xchg
push
in
add
call
fsts
pop
or
lods
push
add
fcoml
std
lcall
cmp
hlt
icebp
incl
sub
in
shll
pop
ljmp
xor
mov
xchg
xchg
pusha
pop
jge
and
jmp
pop
in
mov
test
mov
lret
pusha
dec
pop
xor
sbbb
mov
js
ret
mov
sbb
add
lea
into
out
popf
adc
add
popl
add
add
cmp
pop
push
xor
aad
sbb
mov
adc
out
addps
addr16
in
mov
inc
imul
orl
outsl
or
push
jnp
sub
sub
push
xchg
cmp
ret
scas
add
sarl
scas
fidivs
roll
and
fsubl
test
notl
dec
sar
mov
popf
repz
add
push
ss
test
test
inc
pop
dec
fsubrs
xchg
rorl
lods
or
fmul
adc
add
fldt
int
test
pop
or
in
mov
in
pop
sbb
xchg
xchg
mov
in
or
inc
mov
mov
loope
fisttps
sub
test
ss
outsb
fnstcw
lret
add
adcl
sub
jl
push
sub
js
push
jl
push
jbe
push
mov
add
jb
cld
cmc
or
adc
lods
sub
hlt
jp
out
inc
push
mov
stc
jmp
sub
leave
xchg
adc
jns
nop
jmp
and
cld
rorl
mov
push
test
mov
lcall
lea
sbb
in
sti
inc
pop
movsb
and
in
push
jg
push
xor
es
and
jns
push
and
aaa
test
jp
les
pop
jnp
or
shl
pop
push
movsb
imul
xor
pusha
leave
in
scas
scas
xor
or
xchg
jae
cmp
and
sub
loop
push
sarl
cld
push
xlat
mov
aam
sub
insl
mov
mov
mov
add
push
adc
stos
decb
int
fwait
pop
shrb
pop
pop
xor
mov
imul
loop
shlb
xorl
push
mov
out
in
rorl
pop
rcll
xchg
test
push
dec
or
add
movsl
sub
xchg
push
inc
adcb
imul
daa
inc
adc
sub
ret
adc
jne
loopne
dec
pop
mov
mov
push
outsl
xchg
lods
test
into
jl
lds
push
mov
icebp
cmp
push
jno
test
mov
mov
es
or
pop
movsb
icebp
inc
xchg
mov
sub
or
insl
mov
pop
les
les
jecxz
in
pushf
mov
sub
dec
cmc
and
repnz
popf
jmp
mov
jg
ret
ret
movsl
adc
pop
xor
or
mov
mov
fs
jecxz
xchg
pop
xchg
jbe
test
ret
aad
inc
imul
aaa
stos
sub
cmp
push
cld
jl
mov
add
cld
es
dec
jbe
enter
inc
adc
popf
sbb
inc
outsb
or
adc
sbb
pop
cmp
push
jnp
int3
dec
dec
outsl
pop
cli
jp
cmp
xor
popa
mov
sbb
ja
outsb
lret
ret
pushf
jb
das
sbb
pop
mov
xor
pop
out
mov
dec
mov
sub
sbb
mov
enter
xchg
add
dec
daa
addr16
int
push
sahf
push
and
mov
js
pusha
dec
adc
or
dec
int
mov
inc
stos
adc
ja
add
pop
test
sub
sub
jecxz
rorl
out
lcall
mov
fucomi
xchg
loope
mov
loop
sub
ret
ljmp
fsubr
fsubrl
in
jnp
fmul
std
rcll
jmp
out
in
daa
lds
or
inc
rorb
sbbb
aam
addr16
or
mov
mov
dec
xor
fsubrs
in
int3
pusha
ja
sahf
mov
and
adc
aad
out
gs
cli
mov
pop
aaa
loope
int3
test
and
std
cmp
dec
push
jns
imul
bound
mov
sahf
add
jns
rcrl
add
std
cmp
hlt
mov
sahf
dec
ret
cltd
out
mov
bound
vmovshdup
pop
jae
fwait
leave
dec
and
shll
jns
loopne
mov
cmpsl
xor
je
dec
adc
into
xor
and
dec
mov
mov
or
sub
mov
inc
inc
sahf
aam
testl
mov
imul
mov
loop
lahf
push
dec
shll
mov
into
sub
push
imul
outsl
scas
jns
shll
cltd
cmp
stos
loope
testb
std
push
inc
clc
push
leave
jmp
pop
fistpll
mov
mov
jae
cltd
jns
test
insb
pusha
out
in
jne
cmp
mov
inc
je
test
push
insb
and
addl
mov
bound
adcb
cmp
mov
jbe
lods
inc
push
jns
loop
negl
ja,pt
cld
mov
jp
shlb
popa
inc
ret
jno
pop
push
les
mov
inc
fs
jno
lods
lods
xchg
repnz
fcom
jae
outsb
pushf
add
push
enter
lods
sub
dec
lret
repz
xchg
jle
pop
push
inc
aad
and
sbb
je
pusha
jl
or
sbb
shl
mov
mov
jmp
out
pop
push
jp
sub
and
loop
jp
mov
sbb
mov
cmp
insl
pop
push
jg
jle
shrl
push
int3
shlb
xor
shll
aam
xor
ds
jmp
shlb
out
mov
xchg
imul
add
sbb
ja
repnz
icebp
add
out
out
cmp
pop
jns
or
push
jl
cmp
push
mov
les
push
es
aad
cwtl
dec
pop
xchg
daa
jecxz
push
cmp
pusha
ljmp
scas
adc
add
mov
sbb
scas
jo
ficompl
cmp
das
mov
mov
daa
mov
xor
gs
divl
arpl
jno
js
shll
push
jns
jo
mov
aaa
sbb
repz
mov
jnp
stc
add
mov
outsb
je
or
sub
nop
js
xchg
push
int
xor
mov
add
add
addr16
mov
dec
pop
cmc
sub
data16
mov
shlb
in
xchg
mov
test
mov
sub
mov
scas
and
jl
xchg
adcl
arpl
aam
and
gs
xchg
stos
jae
dec
push
daa
lahf
jnp
outsl
or
addb
xchg
dec
jnp
sti
mov
ds
ret
lea
add
outsb
pop
add
mov
out
int
pop
dec
icebp
sub
mov
dec
xchg
shll
ficompl
fdivr
jbe
sub
mov
or
scas
in
lea
cmpsl
cld
pop
ss
cmp
adc
or
call
rcrb
cmp
das
dec
ja
test
shll
cli
xor
push
fmuls
adc
xor
outsb
cltd
test
shl
lea
cwtl
pop
or
jge
sub
cmp
orl
fdivrs
push
fisubrl
cmc
xchg
int
xor
push
jne
out
cmp
push
sar
sti
sub
xchg
and
aaa
pop
cmpsl
sbb
in
das
adcl
mov
ret
add
push
push
xlat
imul
out
int
inc
mov
cld
xorl
loop
add
add
ss
or
adc
jp
dec
rolb
mov
mov
pop
push
mov
daa
add
bound
xlat
enter
rcrl
sub
out
pop
ret
mov
pop
xor
inc
popl
xchg
aad
stos
mov
ss
push
cmpsb
scas
sbb
lahf
in
mov
mov
ret
xor
add
adc
push
xor
cmc
cmc
sarl
pop
stc
dec
or
cmp
lds
sbb
push
sub
push
sarl
loopne
stos
test
fisttpl
jbe
outsb
or
inc
push
outsl
mov
push
mov
jecxz
mov
mov
add
mov
pop
sbb
xor
add
add
adc
add
lcall
sub
xor
push
and
add
ljmp
and
mov
outsl
pop
repnz
pop
lds
dec
pop
cmpsb
xchg
pop
xor
fucomip
sub
insb
cmpsl
push
imul
pop
js
popf
and
aaa
psrlw
push
push
fimull
test
or
add
icebp
aaa
push
in
mov
or
vcvtsd2si
cmc
aaa
jnp
scas
cwtl
sbb
sbb
inc
or
in
data16
fdivl
stos
int3
std
push
stos
push
sbb
xor
in
les
call
rcrl
cs
or
ss
fs
push
xchg
jle
shr
or
mov
sbb
adc
inc
dec
or
addb
fs
mov
pop
jne
nop
mov
push
add
fbld
mov
pop
stc
mov
gs
fstpl
idiv
jno
lock
outsl
xlat
rorb
xorl
adc
in
mov
popa
pop
aas
in
stc
inc
out
mov
jle
movsl
hlt
in
sub
es
fistpl
and
push
insl
icebp
and
test
sub
add
jns
pop
push
shll
inc
mov
cmpsb
js
adc
lods
xchg
inc
add
in
lods
loop,pn
mov
dec
negb
push
add
push
imul
ficoms
scas
cmp
push
mov
arpl
sub
aaa
andl
inc
movb
xchg
cmp
dec
jl
sbb
or
sti
add
sbb
pop
fwait
xchg
aam
pop
mov
pop
lea
movsb
dec
inc
xor
cltd
cmp
movsb
push
in
pop
sbb
or
enter
push
lods
shrb
test
insl
je
push
test
lods
mov
sbb
push
icebp
mov
scas
mov
cld
sub
mov
xor
pop
push
sbb
popf
fwait
fwait
add
movsl
sahf
push
sti
insl
jg
ret
inc
roll
lods
rclb
dec
sbb
stos
xchg
pop
inc
sub
pushl
jg
xchg
jl
or
sub
add
mov
scas
fsub
int
orl
icebp
pop
cs
jno
imul
sub
lds
jl
ds
call
iret
mov
pop
pop
xor
fstl
fucomp
stos
loope
or
test
and
xor
or
sar
mov
adc
mov
fwait
and
clc
hlt
sub
adc
into
rcll
push
and
mov
pushf
sahf
cld
cs
and
scas
stc
push
lret
adc
test
cli
jbe
cmp
xor
out
pusha
cli
addl
leave
jae
das
xchg
mov
test
cmp
sub
les
fists
out
fwait
jno,pt
std
jne
fsubrs
or
mov
inc
xchg
sub
imul
inc
popa
mov
fsubs
jge
xchg
cltd
aas
sbb
popa
xchg
lcall
sbb
lcall
subl
cmpsb
scas
lods
jnp
popa
fstpl
fabs
mov
add
xchg
add
ja
leave
lods
mov
sahf
pop
jecxz
xor
sbb
out
out
icebp
dec
mov
daa
fsubrs
mov
ds
and
das
jl
fdivl
pcmpgtw
dec
cmovns
test
loope
adc
push
outsb
sbb
adc
push
jecxz
roll
ljmp
negl
jae
push
loop
js
jno
test
mov
filds
adc
and
sub
dec
mov
lea
adc
xor
xor
out
adc
jl
adc
aam
jnp
in
sbb
add
push
jp
dec
out
repz
jno
fcomps
jbe
sbb
push
or
outsb
fisttps
mov
scas
mov
pop
cmp
jl
mov
mov
xor
mov
nop
sbb
subl
dec
mov
or
ret
pop
in
ja
fldl
sbb
outsl
in
xchg
jns
insb
xor
mov
popf
mov
dec
mov
and
cwtl
pushf
stc
popa
xchg
mov
cld
test
xchg
mov
mov
xor
dec
push
jge
sbb
pop
cmp
jnp
mov
es
or
push
frstor
pop
lock
sub
or
mov
mov
iret
or
stc
push
jae
adc
lds
pushf
xorb
mov
ljmp
daa
and
jb
jl
cmpl
fs
inc
outsb
sub
sarl
mov
das
xchg
inc
ja
cmpsl
cmp
sub
mov
pop
jo
roll
dec
xchg
xchg
lea
stos
call
mov
test
adc
or
push
ja
test
cmp
imull
lods
mov
mov
sub
pop
mov
dec
in
sub
out
jnp
sub
adc
sbb
adc
sbb
add
mov
cli
cmp
mov
xor
xor
outsb
pop
add
mov
sbb
out
aas
push
and
in
mov
inc
outsl
mov
dec
dec
dec
adc
inc
xor
jnp
xor
repz
scas
sbb
int3
mov
jl
adc
icebp
cmp
mov
ljmp
lock
aam
jp
jle
int3
mov
mov
scas
pop
push
icebp
repz
jno
test
jge
mov
and
fldpi
sub
stos
cmp
cwtl
fdivs
cwtl
enter
shlb
mov
out
inc
sub
xchg
adc
push
sub
sti
mov
pop
arpl
sbb
jb
xor
fildll
or
xchg
in
push
das
xchg
mov
shlb
sub
rclb
scas
add
xorl
or
lds
xor
xchg
cmp
jnp
fisttpll
adc
cmp
mov
push
pop
mov
pusha
into
in
sbb
call
rol
inc
and
rcr
test
xlat
insb
cmpl
ret
mov
sbbl
or
shlb
outsb
shll
pop
aas
jge
mov
mov
out
adc
sbb
add
sbb
push
jp
jbe
scas
xchg
data16
mov
lcall
repz
push
cmp
ljmp
mov
aad
fs
ss
dec
out
xchg
pop
pop
insl
fists
adc
push
xor
inc
shrl
aas
cmp
outsl
subb
and
mov
ljmp
loopne
inc
lret
out
sub
imulb
pop
and
mov
addr16
pushl
ficoml
xchg
int3
divl
xchg
icebp
push
mov
shrb
sbb
xlat
mov
mov
xchg
pop
or
inc
push
pop
into
outsl
mov
and
lcall
stos
incb
enter
add
add
arpl
mov
dec
data16
adc
mov
test
lret
imul
push
out
mov
stos
negl
das
ljmp
cmp
adc
loop
mov
test
arpl
or
fnsave
pop
icebp
cli
inc
cli
jo
xor
scas
test
push
inc
mov
mov
ss
rcrb
inc
clc
shrb
dec
lahf
mov
and
decb
inc
retw
outsb
sub
inc
add
push
aam
pushf
push
and
mov
adc
rcll
sbb
test
mov
divb
dec
push
jns
cwtl
loop
sbb
mov
xchg
cld
sbb
xor
out
icebp
xchg
lcall
js
add
cmp
frstor
inc
iret
leave
mov
icebp
xor
cli
clc
jmp
mov
xchg
shlb
loope
mov
mov
pop
mov
or
popf
les
adc
sub
dec
sub
sbb
loope,pt
cmpsb
popf
xchg
jae
jbe
testl
jae
js
inc
gs
es
mov
int
daa
xchg
mov
add
popf
gs
fstpl
repnz
pop
sub
imul
and
cmp
outsl
icebp
sbb
mov
xor
lret
mov
clc
push
pop
rcr
sub
pop
push
je
inc
push
pavgb
dec
mov
scas
adc
pop
sub
pusha
dec
mov
int
mov
or
pop
sbb
fsubrs
scas
cmp
lods
js
fdivl
inc
ret
xchg
and
add
pushf
jo
loop
cwtl
jae
test
pushf
enter
pop
pop
enter
jl
mov
add
push
dec
pop
and
je
pushl
and
stc
push
or
addr16
sub
lods
rcrl
lret
mov
or
rolb
cs
jne
xchg
jne
fcmovbe
pusha
dec
and
jle
xchg
xlat
mov
fstps
mov
cmc
push
cmp
inc
xor
mov
popa
xchg
call
js
jecxz
int
inc
jp
fwait
gs
fstpt
hlt
xlat
icebp
pushf
cltd
jo
movl
or
je
dec
jp
xchg
pop
jge
gs
or
add
je
xchg
adc
inc
fcompl
pop
dec
mov
enter
push
iret
fidivs
gs
aas
inc
icebp
in
mov
xchg
mov
jnp
adc
adc
inc
fisubrl
jne
pusha
subb
xor
cltd
push
mov
pop
inc
jge
dec
xchg
mov
xchg
add
mov
mov
mov
sub
push
icebp
aam
mov
xor
jg
loopne
inc
pop
jo
mov
pushf
mov
jns
pop
and
int3
mov
add
cmp
scas
aam
xor
pop
int3
push
pop
adc
out
out
mov
dec
decl
push
out
out
imul
std
sub
imul
mov
mov
lock
adc
sahf
dec
filds
adcb
in
fadd
pop
test
movsl
jl
add
add
jle
les
das
pop
stc
fwait
outsl
mov
push
xchg
dec
jmp
or
cmp
ljmp
fsts
enter
jns
jge
mov
out
cs
in
dec
push
sbb
hlt
in
inc
inc
les
xchg
push
js
je
pop
outsb
mov
rcrl
nop
pop
xchg
jnp
xchg
dec
push
ret
ss
arpl
lahf
lret
push
xor
lea
iret
push
inc
jecxz
fstpl
or
lcall
fdivrl
iret
test
mov
jo
cmp
mov
lods
pop
jnp
mov
adc
cmpsl
jg
in
inc
cmp
test
lea
ss
sub
lahf
xor
jns
add
or
xchg
inc
data16
pop
iret
add
mov
cmc
cwtd
mov
mov
stc
fs
pop
leave
div
movsb
movsb
repz
inc
sub
repz
and
cli
fildll
cwtl
cmp
jmp
mov
pop
mov
call
fwait
dec
sti
icebp
iret
mov
pushf
add
repz
add
cmp
pop
insb
inc
iret
dec
rol
and
dec
mov
out
pop
dec
ja
and
sub
dec
pop
pop
out
pop
jmp
fists
jp
cmp
jo
sbb
or
jbe
movsl
das
int3
test
add
cld
push
dec
xor
push
or
out
hlt
push
jno
cli
push
loope
mov
sub
and
xchg
shlb
popa
xor
movsb
in
insb
dec
movsl
ss
jge
adc
stc
pusha
or
mov
lock
add
push
add
ja
xchg
popf
mov
scas
push
outsb
pop
add
add
and
outsl
aas
xor
fmuls
movsb
fimuls
cmp
je
pushl
je
xlat
xor
into
mov
stc
popa
push
sbb
pusha
hlt
faddp
ss
ror
cmp
xchg
fdivrp
adc
push
mov
mov
testb
sub
add
fwait
aaa
test
in
cmp
fldcw
sti
mov
loope
je
push
fcmovnbe
inc
pop
leave
lea
mov
faddl
xor
sbb
icebp
in
das
pop
add
mov
inc
iret
out
jg
pop
aad
mov
aam
fwait
enter
scas
aas
es
and
jle
and
cmp
lea
cwtl
movb
nop
mov
fmulp
lods
outsb
imul
pop
scas
xchg
mov
and
repz
ljmp
cld
pop
pop
pop
mov
mov
jno
push
add
mov
repz
mov
push
out
fst
fdivl
pop
out
xor
test
popa
jb
outsl
sbb
in
fists
add
or
call
or
dec
sub
ss
fnstsw
xor
sub
adc
fs
mov
sbb
pop
jecxz
movsl
inc
jno
stos
mov
cmc
aam
inc
enter
or
aaa
repnz
xchg
inc
dec
loop
addr16
xor
and
or
shlb
stos
xor
aad
adc
rcl
lods
fs
hlt
push
xor
xor
outsb
sub
iret
js
cmp
cmpb
fnsave
enter
mov
adcl
xor
js
lds
outsb
fs
add
mov
insl
scas
shl
pop
add
mov
add
or
cmp
inc
cmp
rcl
push
jecxz
pushf
leave
mov
adc
sti
or
pop
inc
adc
stos
sbb
cmp
push
in
scas
or
xchg
loopne
shl
stos
mov
js
or
loope
sbb
clc
and
dec
sbb
add
in
aam
mov
mov
sub
add
sar
movsb
push
or
jae
cwtl
dec
or
mov
sub
ret
mov
jo
jmp
lret
or
clc
jne
xchg
push
push
stc
jg
out
mov
xor
lock
dec
xor
test
push
dec
imul
xchg
xchg
mov
xor
fldcw
mov
jne
add
js
mov
inc
pop
mov
mov
pop
ljmp
shlb
data16
call
out
push
les
in
movsl
pop
fmul
call
je
setl
pop
mov
mov
mov
push
dec
scas
jns
repz
test
inc
push
xchg
aas
jnp
test
popaw
popf
int3
fildl
into
out
in
repz
sbb
int3
loopne
cli
mov
sub
sahf
sbb
mov
or
iret
mov
lods
sti
inc
les
pop
lahf
stc
xlat
pop
lds
sub
movb
leave
inc
ret
jge
jo
add
scas
xchg
push
gs
icebp
test
ficompl
sbb
rcl
pop
cltd
pextrw
mov
daa
ds
fdivs
stos
fsubrl
or
jmp
js
xor
mov
push
add
stos
stos
nop
notb
pop
cmp
sbb
pop
test
int
lahf
mov
inc
pop
test
cli
xor
mov
push
iret
xchg
sub
mov
jb
call
adc
icebp
and
xchg
add
xchg
icebp
jle
jae
xor
mov
push
sub
lods
fisttpl
cmp
repnz
test
je
and
xchg
adc
xor
fnstsw
inc
push
int3
lock
sahf
dec
bound
xchg
fcmovu
mov
inc
fsubrl
or
jno
or
jne
fsubrl
xchg
xor
cmp
repnz
sub
loopne
lods
xor
adc
adc
fwait
in
add
out
jmp
out
sbb
cltd
es
inc
xchg
fadd
xchg
jecxz
imul
imul
mov
ja
sub
dec
xchg
inc
loopne
fcmovnu
sbb
nop
insb
dec
fcoms
jb
and
jnp
gs
cmp
sti
iret
mov
sub
cs
sub
mov
popf
insl
mov
into
pop
push
mov
sbb
lcall
and
or
sti
or
cmc
dec
sub
inc
cmp
pop
and
test
sti
xchg
hlt
aas
popf
outsl
arpl
adc
ja
ficompl
movsl
loopne
mov
lea
and
es
inc
orb
add
ja
in
push
lea
sub
xor
and
mov
ret
or
or
lahf
sub
inc
inc
sbbl
cs
adcl
push
pop
pop
or
in
rorl
subl
pop
or
ja
dec
mov
fists
mov
je
sub
sub
push
stos
shr
xchg
push
jecxz
lock
aad
mov
imul
je
or
aad
push
movsb
subl
ret
clc
sub
cmp
imul
dec
dec
and
ds
jns
inc
cs
movsb
movb
aad
leave
test
pop
mov
mov
mov
lret
or
bound
ret
lea
sub
movsb
mov
pusha
jl
dec
aam
test
mov
push
sarl
and
pop
dec
sub
fsubr
outsb
les
jmp
xor
sbb
repz
dec
fisubrs
int3
adc
nop
sub
cwtl
or
fiaddl
gs
xchg
inc
or
fisttpll
int
aas
cmp
ret
out
mov
stc
sbb
int
cmp
cmp
jmp
pop
add
mov
mov
push
jg
inc
inc
or
cli
jl
cmpsl
lds
xor
mov
push
out
push
ljmp
and
jmp
call
daa
and
push
adc
inc
jns
movsb
int3
test
shl
sbb
jb
inc
aad
sub
ficoms
rorl
or
or
adc
js
inc
nop
pop
pop
mov
pop
pop
mov
aam
xchg
outsb
js
cmp
or
sub
jns
sar
cli
andb
test
movsl
lahf
repz
stc
push
stos
insl
xor
push
adc
ss
jle
push
sbb
jecxz
mov
mov
fnstsw
ror
lret
test
sti
lahf
inc
stos
mov
movsb
fnstsw
dec
jle
add
sti
jae
subl
mov
mov
xor
mov
add
sahf
fidivrl
add
dec
fidivrs
sbb
pop
add
add
xchg
lock
in
loop
pop
scas
jp
in
sbbl
mov
jne
int3
adc
pop
cmc
xor
mov
imul
mov
out
mov
pop
mov
inc
jmp
inc
mov
mov
daa
sbb
cltd
pop
sub
push
insb
push
jno
sub
ljmp
gs
mov
shr
insb
pop
out
sbbl
dec
xchg
insl
xchg
cmp
sub
mov
xor
cmpl
popa
outsl
mov
xchg
aam
jns
and
mov
sti
dec
pop
add
ljmp
daa
jecxz
mov
aad
icebp
adc
and
gs
repnz
hlt
xchg
xchg
out
mov
es
add
out
or
pushf
inc
push
loop
stc
shll
xchg
mov
dec
adc
mov
sti
mov
cmpl
test
mov
lcall
testl
pop
lods
jne
fcoms
jne
std
push
add
cli
mov
cmp
fldl
xor
mov
adc
daa
jne,pn
jmp
mov
loope
outsb
loop
mov
mov
stos
push
jecxz
lret
movsl
sbb
sub
mov
adc
fnsave
add
mov
cmp
leave
fcomp
rcrb
xor
clc
cld
test
in
mov
in
xchg
test
xchg
cmp
pop
je
pusha
hlt
adc
pop
pop
jecxz
xor
cld
pop
jge
addr16
push
dec
mov
xor
mov
lea
aaa
and
adcb
fwait
lahf
aam
xchg
or
adc
subl
add
sbb
fdivrs
inc
pushf
push
pop
mov
jae
push
pop
repz
arpl
out
push
mov
inc
stos
arpl
in
sbb
adc
mov
add
and
cld
add
mov
cwtl
or
push
add
das
fiadds
pop
cmp
adc
popa
movsl
das
loope
jg
aaa
inc
adc
sub
ljmp
lahf
out
scas
jecxz
jl
and
cmp
inc
adc
stc
add
jmp
testb
sub
loop
gs
mov
inc
add
fst
popa
pushf
jle
subb
je
clc
cmp
cmp
sub
fldcw
int
cltd
xchg
aas
decb
ljmp
in
and
push
add
xchg
decb
mov
std
dec
mov
jge
adc
dec
iret
lds
bound
fwait
or
mov
xlat
mov
mov
adc
xor
pop
lret
mov
aaa
mov
fwait
aas
insl
or
dec
sub
mov
pop
loope
outsl
mov
mov
cmc
loop
divb
fxch
sbb
aad
insb
lds
daa
dec
or
sbb
test
das
ljmp
andb
jae
ds
cmp
mulb
lock
imul
outsb
add
retw
pop
aam
cmc
dec
inc
insl
test
or
stc
outsb
jl
mov
rclb
push
adc
lret
mov
fidivrs
jb
cmp
fnstcw
sbb
imul
or
or
inc
push
mov
inc
outsl
cmp
mov
out
add
test
adc
xor
incb
xor
stc
xor
pop
add
in
inc
inc
mov
cmp
dec
cmc
sub
ret
jl
stos
in
repz
fdivs
je
ds
sbbb
inc
ret
dec
fsubrl
adc
data16
xchg
ja
loope
xchg
ror
call
inc
lods
loope
or
fnstenv
xchg
and
std
in
add
cmp
xor
inc
xor
gs
fucomip
pop
repz
les
test
ret
stos
pop
into
pop
inc
ret
js
inc
imul
adc
mov
das
lret
push
push
cmp
loop
fsts
mull
lcall
lds
cli
mov
out
push
jns
scas
imul
mov
mov
sub
dec
inc
xchg
jl
jge
sub
mov
xchg
sub
sbb
lock
es
adc
int3
mov
sub
lods
push
js
push
fnstenv
insl
and
or
add
ja
negb
hlt
lret
test
rcrl
icebp
loope
pop
out
xchg
inc
pop
inc
sub
mov
icebp
dec
adc
ret
mov
mov
sub
outsl
cld
sbbb
adc
incl
dec
popa
xor
mov
adc
pop
dec
cmp
push
mov
jb
out
in
mov
fdivl
lcall
out
sbb
and
mov
push
movl
cld
sub
push
and
lcall
mov
subb
cld
push
adc
adc
mov
repz
mov
pop
in
mov
push
adc
mov
mov
push
stos
arpl
cmc
pop
fdivs
push
iret
out
xor
cmp
xchg
push
shl
cmpsl
mov
xchg
mov
mov
lods
int
data16
icebp
test
enter
in
into
adc
cmp
sti
fimuls
mov
and
sub
pop
lret
mov
push
dec
aaa
xor
cwtl
sbb
xchg
fs
push
std
or
jb
mov
inc
arpl
mov
push
mov
aas
notb
rclb
xchg
and
mov
call
pusha
xor
lea
pop
jecxz
out
sub
jo
outsb
subl
idiv
testb
inc
and
test
xchg
xor
scas
dec
clc
adc
push
mov
sbb
imul
sbb
pop
jno
xchg
sbb
mov
push
mov
aad
dec
movsb
dec
push
outsb
das
enter
sub
xor
fadd
xorb
push
das
and
add
add
mov
cmpsl
lahf
out
cmp
scas
mov
push
or
dec
pop
pop
mov
xchg
push
outsl
ficoms
sarb
dec
cmp
stos
fdivr
mov
sbb
push
jge
jmp
xchg
push
cmpsb
adc
lahf
pop
sbb
xlat
jo
into
cld
ljmp
inc
sub
jo
mov
stos
jb
outsl
aas
jle
adc
shll
loopne
int3
sti
dec
mov
daa
es
dec
hlt
std
and
aaa
and
and
fcmovne
aam
inc
sbb
les
arpl
lcall
fidivs
rorb
pop
add
inc
or
out
data16
inc
and
mov
dec
mov
iret
enter
fstpl
mov
loopne
add
les
sub
mov
inc
sti
imull
pop
jle
jb
push
loope
sub
xchg
filds
pop
rorb
lds
ret
or
pop
mov
call
pop
pop
and
or
mov
cmpl
in
push
mov
lods
in
cmp
mov
add
xchg
ss
jecxz
fwait
and
test
push
xor
test
jge
imul
mov
dec
pop
mov
lock
jae
inc
push
sbb
sub
jo
outsl
das
xchg
cmp
fisttpll
dec
or
sbb
pop
or
addr16
mov
sbbb
pop
add
lods
xsaves
out
cli
in
mov
add
daa
cmpsl
pop
push
std
fstps
es
or
dec
mov
or
sar
mov
lea
mov
fcmovne
subl
inc
push
or
and
jmp
fstpl
es
jmp
mov
push
add
mov
sar
stos
es
push
adc
jge
xacquire
fildl
jnp
push
mov
dec
and
or
jae
mov
xor
pop
addl
roll
sbb
cld
dec
roll
lock
inc
shll
adc
dec
pop
pushf
lock
into
ffree
sahf
pop
xlat
adc
xor
mov
psllq
and
pushl
imul
mov
jmp
hlt
jecxz
lea
stc
cmc
fwait
sbb
in
loope
dec
add
and
jge
cmp
dec
xchg
jno
subb
push
ret
dec
aas
ja
sub
inc
adc
leave
dec
cmp
sarb
lock
mov
popa
pusha
dec
cmp
jnp
cmpsb
stos
cmp
lods
pop
cmp
andl
jg
mov
rorl
dec
pop
xor
shl
adc
into
cmpsb
sub
jne
mov
jmp
push
mov
lret
mov
and
xchg
sar
xlat
jl
lods
scas
loope
js
ljmp
ret
sbb
sbb
mov
and
addr16
popa
sbb
into
push
and
jp
pop
add
xor
add
add
xchg
mov
negl
lahf
out
popa
jbe
lods
outsb
and
mov
xchg
daa
inc
inc
cmc
popf
adc
inc
icebp
stos
xor
imul
push
sti
adc
mov
outsl
aam
ficoms
test
pop
jno
ret
subl
xor
orb
insb
es
jae
in
rcrl
scas
dec
xchg
ret
xchg
pop
lret
sahf
fcmovb
add
rcr
and
mov
add
sub
mov
dec
jb
loop
dec
sub
lock
outsl
rolb
adc
roll
imul
mov
pop
pop
aas
pusha
sub
inc
cwtl
mov
sti
jnp
sbb
or
in
addr16
cmpsl
movsl
xchg
fstl
mov
dec
jo
mov
cmp
cld
jbe
sbb
lods
jnp
out
mov
in
ljmp
dec
adc
and
mov
dec
mov
repnz
mov
or
push
jle
jmp
xchg
data16
xchg
bound
xor
jmp
mov
mov
cs
shrb
movsb
stc
sub
jle
mov
mov
push
cltd
movsb
add
scas
adc
and
loop
test
hlt
imul
adc
dec
mov
mov
push
mov
sub
int3
xor
add
nop
mov
dec
js
add
bnd
sub
incl
and
cli
or
cmp
adc
fcomps
insl
mov
inc
mov
aas
dec
mov
popf
sbb
cmpsb
push
pusha
push
addr16
inc
cs
repnz
xor
bsf
enter
aaa
mov
ss
dec
lret
lods
mov
push
repz
jmp
sub
jge
add
push
push
imul
mov
nop
add
inc
and
push
icebp
ljmp
jg
fisttpll
xchg
sbb
lcall
mov
mov
push
popa
mov
dec
test
mov
adc
in
mov
sbb
mov
shl
push
jp
push
pop
es
xor
sub
mov
mov
loope
xchg
cmp
adc
push
mov
dec
adc
outsb
sbb
inc
jb
jo
pop
xor
and
pop
push
xor
arpl
out
jb
sbb
jb
out
lret
push
dec
mov
fnsave
fs
lds
je
cmp
shll
fdivs
inc
test
hlt
push
pop
or
xchg
dec
mov
mov
and
and
lock
in
bound
loope
ret
push
push
out
sbbb
leave
outsl
xor
fsubs
cmp
inc
mov
insb
mov
lock
std
push
cmp
jl
adc
pop
push
mov
loopne
mov
mov
pushf
dec
mov
or
enter
dec
or
sub
jmp
cli
jge
or
lods
mov
bound
in
rorb
mov
sahf
scas
adc
loop
fisubs
mov
mov
repnz
fists
xor
cmc
cmp
in
xadd
cmp
sqrtps
aaa
jmp
loop
sbb
pop
lods
stc
sahf
je
loopne
roll
into
call
shll
mov
jno
push
xchg
jnp
mov
and
inc
and
rcr
xchg
out
fimuls
icebp
leave
in
hlt
and
or
add
sbb
hlt
jge
insl
daa
fidivrs
inc
xor
xor
jno
int
pop
mov
les
and
leave
mov
clc
mov
in
mov
lret
sub
ss
sbb
into
rorb
mov
fwait
xor
lock
shl
lods
arpl
or
sbb
sub
push
adc
xor
stos
or
js
mov
test
inc
cmp
ficoml
test
adc
fistpll
std
pop
jecxz
cmpsl
mov
push
push
and
fdivrl
inc
or
push
mov
shufps
cmp
xchg
push
sub
shrl
add
stc
out
inc
std
fidivrs
movsb
dec
loopne
mov
add
add
jne
mov
mov
int3
sti
jmp
popf
push
push
inc
pop
add
or
lea
mov
mov
repz
cmp
xor
pop
jge
xchg
or
lahf
jecxz
insl
mov
scas
cli
push
pop
cmp
out
pop
pushf
mov
and
or
jbe
das
mov
fld
cmp
pop
xor
or
inc
fldenv
mov
dec
jge
lods
jl
cmp
pop
add
cmp
mov
push
ss
cs
add
in
and
stc
fdivrp
ret
enter
inc
sar
rol
pop
xchg
xor
mov
sub
mov
cs
jno
ror
pop
cmpsl
jnp
outsl
mov
mov
or
loop
pop
aam
mov
dec
fldt
mov
gs
aad
jmp
push
xor
sbb
mov
jae
mov
or
insl
add
add
fisubrs
xchg
jnp
stc
xchg
lea
popf
frstor
sbb
and
xchg
xchg
push
cmp
fisubrl
aad
adc
idivb
xchg
popa
int
mov
sbb
enter
or
mov
stos
lea
xchg
sbb
push
jge
push
stos
fildll
into
jae
xchg
cmp
test
dec
idivb
dec
mov
rol
in
adc
pop
shll
movb
inc
xor
test
cmp
pop
pop
xlat
mov
adc
insl
hlt
dec
enter
insl
jne
loopne
sahf
inc
add
mov
aam
jne
test
test
in
mov
push
addr16
dec
rcr
xchg
outsb
pop
orb
dec
cmp
pop
xor
push
sbb
loop
mov
jne
push
loopne
jbe
shll
adc
ss
test
cmp
dec
jb
icebp
sbb
bound
pop
test
int3
xor
jo
outsw
cmpsl
sub
push
jbe
les
cwtl
nop
js
mov
clc
or
or
popf
fsubrs
sub
xor
mov
ja
push
rcl
xor
cs
sti
or
lods
dec
add
sub
cs
sbb
push
fisttps
std
cmc
cmc
mov
sub
pop
inc
push
dec
xor
push
and
pop
sbb
adc
hlt
pop
fdivrs
lret
imul
lds
xchg
sub
dec
adc
sub
inc
add
mov
push
mov
sbb
and
inc
sub
aas
testl
sbb
movsb
xchg
or
jbe
faddl
or
movsl
stc
inc
push
lcall
leave
lods
add
xor
adc
and
out
dec
and
out
out
sarl
movsl
pop
push
icebp
mov
movsb
jno
adcb
push
lods
je
jp
fcoms
xor
push
aad
loop
stc
out
add
sub
das
push
mov
fwait
push
add
imul
jb
das
mov
cltd
jp
ja
scas
nop
sub
test
aaa
negb
cmp
push
add
mov
cmp
mov
mov
add
inc
call
dec
push
popl
stos
loope
test
lahf
jp
push
je
xchg
out
mov
adc
mov
dec
pop
das
mov
flds
lods
sub
jno
fs
les
test
or
dec
xchg
dec
push
mov
dec
shll
fldt
hlt
xchg
sbb
mov
mov
and
or
sbb
sldt
ja
or
iret
mov
pop
mov
cs
pop
dec
out
pop
daa
sbb
add
bound
jbe
clc
out
out
inc
rorl
dec
sub
mov
push
cmpsl
ret
xchg
cmpb
enter
imul
cwtl
imul
mov
fdivl
adc
lahf
push
sub
add
push
lea
imul
push
sub
push
roll
push
sub
sub
or
and
mov
xor
rcll
mov
mov
cwtl
mov
repz
jns
or
ds
outsb
scas
sub
jns
cmpsb
add
jns
cld
cli
insl
inc
cmp
popa
push
and
inc
shl
fidivrs
cltd
rcll
insb
mov
jno
int3
fldt
scas
das
ret
xlat
fldt
imul
or
push
push
sbb
stc
cmp
stos
xchg
shll
pop
out
cli
sub
pop
inc
aaa
add
imul
cmc
shll
fistps
mov
push
cmp
das
div
nop
sbb
inc
xlat
inc
shl
push
in
outsb
sub
and
jno
adc
pop
xor
push
inc
push
in
adc
adc
aam
dec
stos
clc
stos
cs
fdivs
int
mov
aam
aam
loopne
rclb
mov
ljmp
and
xor
mov
cmpsl
jno
mov
jo
dec
inc
jno
fs
sub
wbinvd
add
out
pop
pop
call
jmp
jno
push
xor
fmulp
xor
addr16
ss
jle
mov
adcl
mov
and
filds
lds
add
mov
jmp
in
push
cwtl
aaa
pop
xchg
or
out
int
add
lods
sbb
or
stos
stos
shlb
dec
jb
insb
aas
and
cmc
sub
cs
mov
pop
jp
mov
test
add
mov
into
push
scas
lods
pushf
sahf
sbb
mov
call
pusha
cmpsl
xchg
cli
push
addw
rol
push
sahf
jns
ljmp
shlb
mov
mov
push
adc
jp
iret
sbb
pushf
insb
dec
rorl
xchg
inc
sub
fwait
push
xchg
les
les
or
ss
jns
sub
jl
mov
ss
sub
xor
and
sub
mov
lock
in
in
fwait
dec
arpl
int3
pushf
dec
cmp
shll
jno
dec
fildll
cmp
pop
push
lret
inc
pop
fimuls
xchg
jo
into
mov
sti
sbb
cmp
xor
sbb
xchg
subl
loop
into
loopne
and
hlt
mov
sbb
push
je
jae
jno
pop
imull
cld
shll
icebp
arpl
out
les
in
xchg
mov
pop
inc
rol
jne
stos
sahf
fsts
mov
and
dec
add
mov
in
idiv
jg
and
inc
loope
ret
add
outsb
pop
add
mov
lods
sub
cmp
repz
add
jbe
push
jmp
subl
test
icebp
int3
dec
pop
xlat
aam
mov
fcoms
sbb
gs
mov
test
out
insb
xchg
dec
mov
cmp
xorl
repnz
sub
repz
aaa
sub
sub
pushf
jmp
and
jbe
xor
xor
in
call
insl
bndldx
stos
adc
js
lret
xchg
out
push
adc
int
mov
lea
push
adc
sbb
mov
adc
loop
sbb
push
out
gs
mov
in
sarl
push
adc
loop
cwtl
push
addr16
jb
adc
push
adc
pop
jno
dec
jae
dec
and
mov
dec
inc
and
mov
xchg
inc
lret
mov
lret
and
mov
loop
mov
cmpsb
fldcw
sbb
les
out
adc
jne
mov
add
jecxz
lods
sub
sub
sti
lcall
jno
adc
psubw
mov
out
mov
leave
pop
jecxz
icebp
xorl
xchg
repz
lcall
rol
jbe
loopne
hlt
add
xor
mov
inc
imul
fstl
sti
mov
lods
cmpsb
ret
shlb
mov
dec
aad
inc
repnz
jecxz
mov
iret
mov
clc
mov
xchg
xor
sub
pop
sub
in
fnsave
jne
aam
add
inc
adc
xchg
fs
aam
xor
mov
add
cs
enter
dec
pop
mov
inc
aaa
aaa
push
rorb
leave
sbb
cs
ret
jg
inc
stos
lea
mov
ds
sbb
aas
inc
and
scas
mov
cltd
sbb
imull
cmp
xchg
xchg
xchg
jle
lahf
cmp
xchg
pushw
push
and
xchg
imul
ficoml
icebp
dec
int3
pop
scas
sub
cmpsl
subb
cmp
rorb
mov
lret
mov
mov
js
cmc
and
mov
mov
test
cltd
stos
ret
loop
push
dec
cmp
jbe
clc
pop
test
xor
lds
in
sti
pop
mov
jo
xor
push
mov
mov
jb
jg
pushf
sbb
gs
stos
andl
jae
xchg
dec
hlt
jo
sub
mov
ss
push
cmp
call
mov
push
mov
insb
sub
pop
scas
lahf
inc
cmp
stos
mov
in
inc
cmp
ret
enter
lea
leave
pop
xchg
xor
mov
fistpll
cli
xchg
mov
out
jmp
mov
popa
sbb
int
ljmp
sbb
xor
pop
xor
mov
aas
cmpsl
pop
xor
ljmp
jmp
xor
xlat
mov
cmpsb
das
outsl
nop
mov
or
clc
fdivr
push
jmp
popf
jle
adc
mov
loop
lods
mull
or
ljmp
cmp
imul
fbstp
sub
les
nop
shll
pop
pop
xchg
sbb
repz
add
or
and
subb
movsb
add
jnp
mov
js
lea
mov
xor
sub
scas
and
js
ficompl
aas
jle
fildl
jnp
and
mov
add
nop
cld
jecxz
inc
sub
clc
push
push
pop
hlt
mov
mov
xchg
add
lcall
sti
popf
mov
sub
cmp
push
es
pushf
stos
js,pt
push
push
jnp
sub
int3
ds
jbe
xor
sbb
icebp
pop
into
dec
push
xor
clc
stc
out
push
loopne
or
mov
cmp
cmp
fs
lea
dec
adc
add
push
push
leave
daa
fwait
dec
pusha
test
nop
out
pushf
mov
mov
pop
jp
adc
xchg
jl
pop
xor
das
pop
iret
rcrl
pop
adc
push
xchg
push
mov
mov
loopne
xchg
mov
xor
iret
loop
cmp
inc
pop
cmp
call
data16
inc
jb
add
aas
lret
ret
adc
popf
or
adc
fisttps
xchg
popl
lcall
pusha
stc
mov
add
rcrl
dec
push
inc
loope
lock
aad
test
push
pop
cwtl
jl
fcomps
add
jp
arpl
pop
push
xchg
sub
cmp
mov
in
popa
mov
push
mov
lcall
stos
mov
and
push
daa
out
xchg
mov
mov
xor
scas
mov
fdivrl
outsl
in
roll
ficompl
mov
dec
xchg
push
mov
jmp
xchg
inc
in
mov
or
out
pop
bswap
inc
xchg
mov
les
jmp
xchg
mov
and
jge
mov
xchg
pop
xor
mov
sub
dec
mov
inc
xchg
insb
jno
xor
push
subb
ljmp
shrl
dec
xor
inc
mov
add
cmp
xor
sub
aam
andl
jle
push
sub
cwtl
sbb
add
dec
test
stos
lock
push
sbb
daa
jle
cmp
stos
hlt
pop
cmpsb
dec
mov
daa
push
lret
mov
mov
mov
sti
push
adc
xor
repnz
scas
fists
push
cmpsb
arpl
cmp
lds
push
es
js
arpl
ds
pop
cmp
vucomiss
aam
adc
arpl
add
cli
fmuls
inc
pop
clc
cli
pop
pusha
subl
or
add
jae
rorl
or
dec
test
and
pop
inc
movsl
loope
mov
adc
mov
sti
jno
push
and
push
pop
add
daa
out
loopne
pushf
mov
lret
pop
cmp
fwait
cmp
xor
lea
pop
rorb
aas
push
test
pop
add
idivb
call
aad
cld
sti
cmc
psrlq
cmp
cmp
and
xor
call
jp
lcall
dec
pusha
insl
testb
outsb
cmp
mov
xor
xor
faddp
imul
lds
cmp
and
loope
xchg
and
dec
pusha
in
js
cli
jmp
inc
cs
sub
icebp
nop
add
shr
and
aas
fcomip
out
or
das
jns
lret
outsb
pop
add
shrl
fdivrl
int3
lahf
lods
vsqrtpd
jecxz
lahf
insb
dec
jns
scas
cwtl
xchg
int3
cmp
add
popa
or
clc
dec
fadds
xchg
sbb
add
in
mov
js
mov
dec
mov
aas
loop
cwtl
cld
jmp
stos
enter
jne
jecxz
jp
mov
jo
bound
cmp
gs
pop
push
mov
sub
pop
cld
dec
test
xor
mov
rclb
mov
cwtl
leave
test
mov
push
and
sub
dec
sti
pop
push
or
scas
test
icebp
lock
xchg
cli
push
push
das
pop
data16
into
push
push
mov
cmp
fs
stos
int
jae
ds
dec
pop
cmc
push
sub
or
test
testl
add
pop
leave
jb
inc
sub
pop
fcmovb
inc
jno
jl
mov
in
mov
out
test
xor
fldl
mov
in
sbbb
enter
mov
sub
inc
fsubs
push
shll
cmc
add
jae
sub
pop
js
cli
test
mov
adc
or
mov
cli
scas
movsl
sub
xchg
dec
and
hlt
in
out
dec
test
push
bnd
pushf
fwait
xor
pop
out
mov
movsl
jbe
jmp
mov
int
jnp
pop
popa
inc
push
aas
sbbb
push
cltd
push
jo
nop
mov
adc
insl
xor
jne
xor
outsb
xlat
mov
nop
imul
push
cltd
push
mov
lods
jb
roll
subl
dec
int3
ds
inc
sahf
jg
call
jno
push
stos
cmp
das
mov
mov
shr
sbb
insb
jl
or
or
push
jbe
fbld
std
pop
lret
pop
dec
test
fistpll
mov
cs
cld
push
fwait
call
hlt
and
ljmp
xor
or
adc
cmp
ret
sarb
sub
into
out
cmp
push
pop
frstor
rcr
fcompl
ds
lea
and
shrb
dec
in
inc
rcrb
sbb
dec
pop
pop
add
or
mov
inc
pop
insb
cmpb
pusha
dec
pushf
mov
jb
data16
sub
push
cltd
jmp
cmpsl
inc
movsb
cli
xor
testb
mov
xchg
mov
loop
pushf
fadd
mov
daa
and
stos
loop
mov
add
aam
dec
sbb
in
pusha
cmp
fldlg2
rorb
cli
loopne
mov
lahf
aaa
cmp
push
test
jns
stos
pop
or
add
ja,pn
jne
sub
push
mov
out
lret
mov
fs
mov
fnstcw
dec
mov
adc
sahf
jbe
jmp
mov
mov
inc
jns
repz
push
lods
dec
inc
in
repnz
xlat
repz
scas
xlat
mov
sub
ljmp
adc
sbb
pop
adc
cs
inc
ljmp
mov
stos
fs
push
jmp
inc
aam
scas
mov
imul
lds
jns
adc
roll
fwait
add
mov
cmp
in
sub
xchg
loopne
movsb
sub
mov
xlat
fidivrs
pop
pop
je
mov
ret
subl
mov
ja
lahf
push
xor
ljmp
out
rcrl
push
sub
pop
pop
js
mov
xchg
xchg
pop
jmp
repnz
dec
and
repnz
adc
jae
fisubrs
xchg
arpl
push
xchg
notl
test
jecxz
ret
jecxz
ret
ret
add
add
rorb
adc
jle
add
lock
cmpsl
sub
dec
int3
xlat
shlb
pop
out
push
fs
pop
pop
mov
clc
sub
ds
dec
sti
jno
pop
pop
pop
scas
push
aaa
xor
dec
repz
and
ja
add
jle
aam
xor
sarb
dec
xor
ds
xor
inc
xchg
push
test
lods
push
or
xor
icebp
ss
xchg
xchg
cmp
xor
mov
mov
xchg
add
popa
xchg
cmc
aad
cmpsl
add
mov
cmpsb
int3
fadd
xor
ja
fimull
outsb
dec
iret
inc
jecxz
xchg
and
fistpll
xor
pop
popf
xchg
ja
mov
dec
insl
add
aad
mov
pusha
pop
mov
and
aaa
lea
leave
scas
insb
push
repnz
sbb
ficompl
inc
lcall
xchg
push
icebp
ljmp
les
in
sub
popa
sarb
inc
xchg
sbb
cmp
outsb
shr
jb
rep
adc
mov
aam
dec
stc
pop
mov
jb,pn
popf
ret
movb
lahf
mov
aas
push
sub
push
sub
icebp
mov
adc
mov
lock
popa
orl
adc
push
stos
sti
xchg
push
or
mov
xchg
push
enter
add
ret
out
je
add
out
lret
inc
icebp
scas
xor
sbbl
adc
enter
cmc
fs
out
out
scas
cltd
bound
dec
mov
sub
clc
inc
xor
pop
lret
adc
or
sub
scas
xchg
fsubs
jnp
addr16
out
mov
pop
push
or
imull
lret
js
dec
mov
ds
xchg
pop
xchg
fs
aaa
out
or
push
in
adc
loopne
add
pop
popf
and
aad
fmulp
out
sub
test
dec
lret
mov
or
aad
cmpsb
xchg
cmc
xor
out
loope
iret
jl
inc
mov
je
clc
mov
sub
adc
sub
mov
xor
and
in
pushf
xor
mov
shrl
movsl
enter
pop
push
pop
cmp
push
sti
lds
stos
add
xchg
rorl
mov
ja
and
fbstp
fs
call
mov
sbb
int
std
sbb
popf
and
dec
cmp
leave
pop
mov
js
lds
aad
idiv
popa
pop
rcll
test
xor
cld
cmc
loop
push
xchg
imul
mov
cmpsb
mov
add
fabs
push
roll
ss
loope
repnz
sar
add
jbe
and
sbb
sti
test
cwtl
test
cmp
inc
lcall
dec
lods
popa
mov
cmp
mov
dec
add
bound
loop
rorb
divb
out
xchg
sub
push
dec
ss
xor
aaa
sahf
cmp
test
iret
adc
repz
sbb
fnsave
incl
add
push
ja
daa
inc
call
mov
outsb
pop
add
xchg
addb
mov
clc
xor
out
cmpsb
xchg
dec
xor
sbb
sahf
xor
push
mov
repz
ficoml
sbb
repnz
int
add
xlat
daa
test
sub
xchg
jno
jnp
sahf
cmpsb
and
fs
mov
imul
in
pop
and
inc
push
dec
stos
mov
movsl
gs
cmp
test
pusha
xchg
mov
std
mov
test
xor
loop
rolb
fldt
repz
jg
push
cmp
pop
jg
add
push
xor
lds
leave
or
mov
mov
bound
dec
cmp
mov
xchg
and
popa
in
fadds
jge
enter
mov
pop
scas
leave
mov
cmpsb
bound
shll
add
sbb
jne
in
jnp
mov
insl
imul
xchg
or
das
sub
push
mov
xchg
mov
dec
movsl
jno
pop
mov
jne
jns
cmpsb
mov
mov
data16
mov
adc
mov
es
mov
xor
negl
xchg
add
jno
jo
or
cmp
xchg
dec
xchg
aas
movsl
insb
push
pop
and
xor
add
mov
push
xchg
add
xlat
shl
std
and
imul
notl
dec
in
pop
jne
jno
pop
js
inc
pop
popf
push
xchg
cmc
cmp
mov
lock
or
and
subl
dec
call
and
mov
stc
rorl
orl
clc
cmp
jmp
inc
ja
pop
call
add
xlat
mov
insb
mov
sbb
jno
lock
aad
shll
jno
sarl
cmp
cmp
pop
and
icebp
xlat
out
or
or
ret
scas
mov
in
inc
lods
push
inc
inc
fisubs
jno
imul
fstps
loop
rcl
lock
arpl
dec
xchg
or
push
adc
mov
cmc
xchg
sbb
ds
jns
out
test
inc
clc
in
leave
lret
pop
ds
xor
popf
std
inc
sar
mov
stos
adc
cli
sub
mov
mov
ss
jl
push
stc
decl
enter
stos
push
add
pushf
stos
mov
cmp
adc
pop
inc
lods
out
xor
out
int3
or
jp
jns
cmp
or
sti
and
mov
sub
mov
add
xchg
jo
pushf
xor
outsl
cmpsb
lret
cmpsb
dec
lret
jne
mov
jecxz
pop
dec
js
movsb
ja
jnp
mov
push
cmp
xchg
stos
mov
lock
jae
xchg
mov
sub
inc
hlt
test
rcl
in
scas
sbb
in
out
test
pop
xor
jns
push
notl
push
adc
jp
out
lahf
stos
bound
dec
or
mov
adc
aas
aaa
sahf
inc
lock
fistpll
cld
mov
pop
stos
dec
mov
xchg
inc
sahf
mov
cmp
icebp
push
sbbl
je
scas
sbb
dec
into
sub
xor
std
scas
inc
cmp
aaa
xlat
pop
xchg
jbe
daa
jmp
lret
fmulp
inc
jo
sub
xchg
pop
js
xor
push
mov
mov
lret
imul
bound
mov
aas
lea
xchg
leave
mov
loop
rcl
mov
jno
es
popa
inc
and
movsl
pop
test
mov
gs
pop
enter
push
mov
xchg
fcomp
inc
iret
fists
or
add
out
lock
xor
add
lods
in
f2xm1
mov
stos
iret
jnp
mov
mov
cmp
jno
ret
test
cmovnp
emms
fistl
dec
mov
lcall
jge
dec
fcom
push
test
imul
not
fnstenv
cmpsl
nop
mov
out
cwtl
lcall
testb
imul
outsb
adc
jb
stos
pusha
and
pop
sahf
mov
pop
sub
jo
imul
xor
mov
sbb
outsl
pop
arpl
dec
rcr
roll
dec
orl
mov
test
rorl
push
xor
mov
mov
adc
aam
mov
aas
dec
push
mov
fstpl
icebp
dec
dec
cwtl
jecxz
mov
fwait
xchg
cmp
or
stc
fidivrl
lock
repnz
or
or
nop
jle
cld
cltd
mov
jl
shlb
and
mov
aad
icebp
outsl
dec
call
push
jl
test
shr
jp
lods
sub
pop
xchg
sbb
add
and
jno
push
mov
iret
mov
mov
sub
lea
mov
iret
mov
jno
in
je
out
dec
add
enter
jb
xlat
jne
fists
jne
sbb
aas
xchg
mov
shrb
pusha
cltd
pushw
out
xchg
push
fcmovb
xchg
out
out
fnstcw
mov
lods
jmp
leave
push
jb
push
leave
fsubl
push
insl
mov
mov
sbb
pop
arpl
je
lcall
arpl
loop
xchg
xchg
add
or
repz
sbb
jne
mov
imul
mov
loopne
scas
mov
fcomps
sarb
xchg
mov
sbb
scas
pop
ljmp
loope
leave
in
mov
hlt
ja
shlb
aas
inc
sbb
ljmp
sahf
mov
stc
pop
jo
mov
ljmp
aaa
sbb
pop
cmp
leave
jae
mov
fcomip
mov
aas
lds
shrl
test
mov
imul
lret
push
clc
rorb
dec
insl
sarl
insl
out
pop
fadd
xchg
std
xor
outsb
int3
lods
and
xorb
repnz
popa
push
rcr
test
repz
dec
clc
call
jecxz
daa
cmpsl
cmpsl
dec
adc
xchg
or
sbb
addb
bound
inc
adc
add
jmp
or
xor
mov
negl
xchg
jo
imull
outsl
dec
cmpsl
mov
imul
outsl
frstor
fwait
xchg
xor
sbb
push
stos
xchg
mov
or
out
inc
pop
andl
xchg
sbb
imul
add
xor
pop
jo
add
outsb
icebp
into
jb
ret
mov
add
pop
mov
pop
es
lret
flds
add
add
dec
decl
fcmovbe
int
sbb
scas
push
jo
mov
push
xorl
pop
cli
pop
lret
in
clc
push
ret
dec
lods
jnp
lock
add
cmpb
repz
jno
dec
mov
pusha
add
ds
adc
cmc
push
pop
arpl
add
pushf
bound
inc
ss
cmp
cmc
jp
mov
sbb
sub
adc
sbb
and
mov
xlat
imul
jae
out
pushf
cmp
mov
jg
bound
jg
xchg
adc
or
iret
dec
stos
mov
xchg
call
std
mov
fsubrp
xor
mov
mov
std
sahf
cmpsl
or
das
sub
add
mov
in
ja
inc
push
pop
sahf
sbb
mov
inc
add
imul
imul
mov
xor
repnz
rcr
inc
jle
mov
rclb
push
fbld
sahf
nop
pusha
lahf
out
xchg
mov
add
popf
sbb
sub
mov
aad
cmp
in
xchg
imul
sub
inc
imul
mov
out
stc
xor
movsb
xorl
cltd
loop
popa
xchg
push
mov
arpl
aas
nop
arpl
mov
inc
out
sub
xchg
sbb
sbb
dec
in
std
subl
mov
clc
adc
mov
scas
push
xchg
mov
es
out
dec
mov
or
pusha
idivl
lcall
mov
test
jmp
fildl
cmp
icebp
xchg
sub
xchg
lcall
test
xor
cmp
fidivrl
in
loope
ror
pusha
push
mov
scas
ja
arpl
adc
adc
push
mov
xchg
lods
lret
stos
addr16
inc
mov
pop
mulb
or
in
stc
enter
mov
inc
in
je
push
pop
xchg
cmpsl
iret
adc
push
push
gs
rep
dec
int3
xchg
xchg
xor
shl
inc
aas
dec
mov
ja
js
enter
sub
mov
inc
lret
bnd
cli
mov
adc
lods
loop
push
out
hlt
mov
or
data16
inc
icebp
push
jg
adc
jge
jmp
aas
ja
daa
repz
jo
pop
xchg
cmp
mov
stos
fbstp
outsl
mov
cmc
xchg
jle
vprotw
mov
dec
or
sbbl
lods
mov
sti
scas
repnz
cld
icebp
sub
fs
xchg
push
push
mov
movsl
add
subl
in
in
xchg
jo
jle
add
daa
fistpll
push
aam
xor
xchg
sub
xor
fiaddl
bound
add
stos
add
adc
dec
sub
lods
mov
push
enter
loop
ret
cmc
jns
lcall
addr16
sbb
mov
sub
inc
pop
std
pop
xor
pop
cwtl
add
test
adc
lock
push
gs
fcomps
xchg
xlat
insb
add
inc
and
mov
popf
sti
push
pop
in
call
jbe
mov
sahf
jp
add
fsubrs
cmp
popf
sbb
dec
push
cmpsl
call
mov
push
aas
adc
cmp
cwtl
shll
cmp
out
mov
xor
cmp
mov
movsb
popa
mov
dec
inc
rolb
ret
xor
pop
sbb
lcall
decb
inc
loopne
test
cmp
jo
or
test
lds
stc
fdivrl
movsb
dec
addr16
pop
addr16
mov
sbb
mov
push
arpl
adc
fstpl
push
lahf
aaa
imul
aaa
mov
ret
shll
ret
cmpsb
jl
push
gs
negl
call
outsb
and
sbb
adc
pop
xchg
cmpsb
icebp
inc
mov
pop
or
adcb
test
in
jae
push
scas
aam
or
sahf
pop
mov
cmp
repnz
jae
dec
pcmpeqd
jb
push
add
clc
std
cmpb
adc
bound
adcl
pusha
pop
addr16
adc
loop
jne
fildll
mov
lret
mov
xchg
fstpl
mov
subl
adc
ja
add
fwait
lahf
mov
add
test
dec
sbb
jno
xchg
sbb
iret
filds
addb
adc
sub
fldcw
or
xchg
mov
cmpsl
stos
aaa
lock
out
lret
and
push
sub
sub
xchg
sub
test
pop
inc
xor
jns
rcrl
nop
aas
lock
mov
out
xchg
push
subb
ljmp
xor
or
data16
xchg
inc
sahf
sub
cmpsl
scas
fmull
je
sub
jge
cmpb
and
subl
xor
rclb
jg
fadd
xlat
movsl
scas
mov
mov
rorl
xorb
flds
pop
divb
mov
xor
mov
outsb
ret
fildl
in
adc
call
rcl
cwtl
lret
repz
mov
aam
out
cmovl
adc
ja
pop
mov
pop
fbld
xchg
push
stos
adc
lock
lret
jne
sbb
aaa
xchg
mov
rorl
sbb
xor
pop
shl
mov
pop
popf
jle
fwait
loop
mov
mov
ljmp
mov
int3
orb
mov
dec
or
cmp
add
cmp
dec
sbb
fdivrl
xor
push
into
repnz
mov
pop
and
stc
mov
jb
test
mov
mov
rorl
insl
jle
jno
jno
imul
bound
mov
test
mov
mov
orb
out
push
and
movl
imul
pushf
push
cs
loope
std
or
enter
and
pop
decb
repz
fs
out
mov
xchg
inc
cmp
roll
sbb
jnp
xor
inc
or
loop
sub
and
mov
imull
hlt
out
cld
and
enter
mov
rcrb
jge
loope
add
fwait
rcll
stc
jmp
into
das
push
ror
xchg
jle
add
scas
ror
push
pop
mov
cmp
loope
add
add
es
cvtdq2ps
inc
je
mov
sub
jnp
inc
pop
adc
adc
inc
adc
in
adc
pop
and
lret
ljmp
push
mov
fsubs
pop
les
mov
pop
pushl
inc
clc
testb
pop
push
iret
mov
or
movsb
fs
and
xchg
dec
pmullw
push
lret
inc
ucomiss
pop
lahf
cld
dec
stc
scas
dec
fisubrl
xchg
cmp
jb
mov
test
xor
push
dec
pop
inc
fstps
adc
pop
xchg
pop
jo
popl
and
pop
xchg
and
dec
js
test
cmp
push
pop
hlt
jp
mov
fdivrp
mov
and
pop
ret
mov
loope
out
outsl
shll
xchg
stc
push
loope
cltd
sub
or
int
stos
fistl
and
add
or
lds
pop
xchg
mov
xor
pop
sahf
mov
mov
push
dec
mov
in
nop
jbe
rcr
cmp
jno
dec
lcall
shrl
nop
push
fbld
shr
xchg
js
loopne
not
jmp
fldl
mov
xor
xor
cmp
into
mov
outsl
insb
mov
outsb
mov
push
rclb
incl
dec
inc
mov
test
addr16
lret
xor
leave
das
dec
cltd
scas
dec
imul
mov
std
push
push
jns
xorb
imul
jle
push
lods
and
or
xor
sbb
xlat
cmp
mov
lahf
jl
pop
sahf
rcrl
xorb
or
mov
or
pop
pop
sahf
iret
lds
mov
or
dec
arpl
add
add
sub
or
ja
cmp
add
mov
dec
repz
mov
jno
xor
sahf
mov
arpl
lcall
std
test
loope
inc
push
jb
lock
inc
mov
jp
repz
sbb
shrb
jp
imul
dec
dec
and
imul
sahf
mov
cmpb
sti
in
fdivp
out
faddp
aas
push
xor
mov
pop
lods
dec
fsubrs
xlat
je
scas
push
stos
add
movsl
cmp
and
lret
aaa
mov
fisubrs
popa
loope
cmp
les
in
xor
out
ret
add
sarb
test
jg
out
fdivrp
cmpsb
jecxz
imul
inc
repnz
daa
sbb
mov
add
cmc
xchg
loop
cmp
xchg
push
scas
call
jmp
jge
enter
dec
xor
addr16
jle
xor
addl
sbb
sahf
inc
xor
cmp
clc
or
test
out
test
push
push
push
aam
test
mov
and
xchg
das
mov
fsub
adc
stos
jecxz
std
test
ss
iret
dec
ds
cmpsl
sarl
jno
mov
xchg
das
cmp
inc
mov
gs
inc
push
or
mov
cmc
das
outsb
mov
and
adc
icebp
int
xor
int3
sti
mov
xlat
push
das
pop
fwait
mov
jg
xor
sbb
fbstp
les
addr16
shlb
inc
rcll
jp
inc
xchg
jns
xchg
adc
sbb
mov
xlat
in
add
sbb
mov
add
adc
or
aam
push
stos
sub
push
adc
jo
test
shll
mov
inc
cmp
faddl
push
and
or
cmp
and
lahf
sbb
mov
aam
mov
jo
std
mov
xor
or
addb
loopne
jbe
hlt
jne
into
int
mov
stc
rcrb
sbb
mov
add
scas
nop
pop
pop
or
push
hlt
sbb
sar
add
mov
sub
mov
mov
aaa
inc
jne
inc
popf
push
pop
sub
jge
sub
or
aam
je
iret
fisubs
int3
xchg
fwait
cld
cli
adc
jl
xchg
fwait
jno
les
pop
mov
fstpl
insl
test
pop
es
dec
dec
popf
idivb
sbb
dec
sbb
bound
popf
ljmp
fistl
cmp
leave
xchg
sti
test
cltd
pop
aaa
es
xor
inc
fnstenv
dec
ja
pushf
out
lea
adc
aaa
mov
ss
push
loope
cmp
sub
leave
shlb
cmp
jmp
or
mov
scas
loopne
add
idivb
ret
pop
loop
pop
lret
ja
xchg
mov
test
or
and
rcrl
inc
test
jp
push
add
sbb
push
and
xchg
sbb
js
aaa
mov
sub
jno
stc
cmp
mov
out
nop
outsb
ret
loopne
inc
rol
push
das
ret
sahf
loop
mov
xchg
mov
bound
mov
push
sarb
sbb
and
dec
subl
push
daa
imul
mov
cmp
mov
out
cmpsl
lahf
in
stos
pop
mov
sub
iret
retw
daa
call
insb
mov
cmp
push
ss
sbb
lret
ret
pop
loopew
subl
insl
lea
sbb
out
insl
xor
loope
sbb
mov
jl
mov
pop
add
mov
aas
jne
in
loop
insl
xor
subl
icebp
push
pop
mov
rolb
in
mov
sbb
ljmp
lods
push
inc
push
sbb
pop
daa
cmp
in
jecxz
or
cli
movsl
lret
or
push
dec
out
scas
rcrb
stos
mov
ss
lahf
out
jno
ljmp
in
add
js
add
dec
dec
jmp
pop
cmp
imul
mov
icebp
stc
or
pop
cmp
sub
ret
aaa
and
ss
and
add
pop
dec
popa
mov
mov
movsb
arpl
iret
imul
dec
into
sub
aam
mov
arpl
insb
stc
jmp
mov
mov
pop
mov
lret
mov
pop
and
or
push
xchg
adc
jns
jns
and
push
jno
push
sub
shll
je
mov
aas
lcall
sbb
in
lods
dec
jge
pushf
lods
movsl
shll
jae
xchg
jo
fcos
gs
jne
sahf
add
lods
addr16
and
jecxz
xorl
adc
xchg
lods
or
lcall
add
loopne
mov
aas
stos
in
adc
call
add
int
and
shrb
cmp
xchg
dec
repz
fdivrs
sbb
inc
inc
jl
insl
ficoml
repnz
ds
sti
cmp
mov
sbb
inc
pop
in
popa
mov
xlat
fimull
fcoms
mov
or
or
inc
push
aaa
push
in
int
sarb
mov
sbb
mov
cmpsb
dec
fst
popa
in
pop
pop
cwtl
sub
xchg
inc
neg
mov
xchg
xchg
cmc
sub
ljmp
fldenv
shrl
sbb
in
les
xchg
ret
or
ds
add
gs
pop
insl
pop
scas
push
pop
sub
sub
insl
ret
cmp
sbb
jg
mov
shrb
jae
adc
inc
or
mov
scas
cmp
xchg
mov
pop
adc
lret
insl
cmc
push
arpl
movsl
shll
mov
pop
sbb
lods
mov
mov
pop
pop
mov
fcmovne
mov
rcrl
leave
scas
lret
or
icebp
sub
mov
pop
cmpsb
pcmpgtb
js
pop
je
insl
cmp
add
fwait
arpl
mov
into
das
ljmp
fwait
imul
mov
aas
sub
xchg
dec
jg
cmp
in
and
daa
mov
ss
push
jge
lcall
sbb
movsl
scas
stos
cwtl
loopne
push
push
es
movb
out
fucomp
dec
aam
rcrb
and
fidivs
out
into
push
idivl
repnz
inc
aas
leave
jmp
jno
out
cwtl
mov
lods
mov
jecxz
xchg
add
mov
mov
in
fcompl
es
test
ret
cmp
mov
cmpsl
imulb
nop
sbb
scas
std
pop
fistpll
lock
xor
mov
xchg
cmc
push
mov
mov
fdivl
faddp
std
cmc
roll
ja
jg
push
inc
pop
xor
xchg
stos
pop
dec
or
mov
fstl
fsubrp
mov
arpl
mov
and
fisubrs
jnp
jne
mov
dec
lret
push
or
sti
or
pusha
mov
pop
jo
nop
push
lods
jne
jg
or
and
loopne
pop
les
or
xchg
push
imul
or
add
jle
test
adc
or
jl,pt
push
insb
adc
mov
and
ds
sub
xchg
and
and
stos
repnz
je
out
rcl
mov
push
mov
and
cli
inc
test
dec
pop
pusha
orl
sbb
cmp
pop
stc
cmc
cmp
into
sub
jle
hlt
jle
test
push
xchg
in
push
cmpl
and
or
inc
cwtl
in
pop
jbe
pop
jne
nop
xchg
mov
pop
das
adc
jb
adc
das
add
int3
jne
cmpsb
mov
jno
pop
sbb
push
jge
enter
mov
lods
mov
mov
adc
test
mov
stos
mov
lds
push
sub
inc
mov
mov
je
push
outsb
and
fimuls
pop
repz
lret
sahf
inc
xchg
test
movl
lock
scas
scas
push
fisttpll
mov
xor
in
pop
icebp
xchg
jle
je
pusha
xor
icebp
or
xchg
lcall
fildl
mov
pop
jne
out
mov
mov
and
push
push
out
dec
pusha
outsb
loop
inc
loope
xchg
lods
inc
dec
js
lcall
mov
in
sahf
dec
adc
push
or
lret
sbbl
mov
mov
mov
shl
xlat
cmc
loope
push
xchg
arpl
mov
shrl
std
cltd
repnz
pop
cs
mov
cmp
out
cmc
jmp
xor
scas
pop
mov
in
cmp
arpl
daa
inc
lock
out
mov
add
cmp
jecxz
cwtl
nop
shr
fcompl
leave
jbe
bound
mov
enter
lods
xor
dec
pop
add
push
ret
dec
push
adc
mov
lret
pushf
loope
sbbl
bound
cmp
pop
cmc
sbb
sub
mov
sbb
adc
pop
sbb
adc
jmp
jb
cli
and
jno
jmp
push
pushf
pop
lahf
xor
adc
loop
xor
xchg
mov
test
jnp
xchg
insb
pop
in
pop
sahf
inc
loope
int3
sbb
out
or
mov
aam
mov
sbb
sub
push
xchg
mov
repz
and
push
mov
dec
push
fcoms
aam
jl
ds
inc
pop
mov
or
add
cmpsb
sbb
lea
push
inc
test
in
jno
inc
loopne
jg
inc
adc
sub
mov
gs
mov
clc
push
sbb
jne
inc
in
and
cmp
lods
jo
rolb
mov
mov
data16
cmp
cld
cmp
ja
cmp
js
inc
dec
call
in
adc
pop
scas
mov
cltd
outsl
xchg
icebp
inc
dec
test
jmp
mov
xchg
push
inc
dec
shl
add
test
jg
inc
imul
jns
inc
fmull
xchg
push
test
aam
fiadds
scas
fidivrl
test
mov
fsubrs
scas
ficoml
dec
loope
pop
pop
mov
add
outsb
and
xor
and
or
popa
xchg
push
jne
xchg
and
adc
cs
cmp
mov
sub
add
dec
cmp
inc
cmp
or
stos
push
push
sbb
cmp
les
mov
fdivs
in
js
sbb
xlat
je
sub
jmp
xor
fsub
jnp
test
push
mov
or
jle
loopne
pop
mov
insl
lods
into
fdivs
insb
xchg
mov
add
sub
test
cmp
adc
mov
pop
aad
or
sbb
adc
icebp
iret
mov
fwait
mov
rclb
sahf
adc
add
add
sub
in
or
ret
jecxz
or
fmull
push
adc
adcb
jnp
sub
mov
inc
fwait
dec
add
add
pop
push
mov
add
inc
enter
xchg
xor
or
aaa
mov
cltd
jns
das
cs
and
out
bound
ljmp
or
mov
mov
push
ss
sub
pushf
mov
ret
inc
pop
add
out
xchg
icebp
mov
out
aad
adc
add
outsb
pop
add
pop
push
xlat
jp
add
inc
sub
add
fwait
aas
push
lea
daa
sbb
test
mov
imul
xor
jae
fstp
sbb
addr16
xor
and
in
lods
into
mov
lea
xor
fdivrl
mov
mov
cwtl
dec
incl
and
mov
dec
pop
rclb
jp
testl
add
test
inc
inc
lods
sub
in
ljmp
jb
mov
inc
and
mov
mov
add
stos
cmp
ret
inc
mov
aas
out
rcll
lock
inc
mov
pushf
push
aam
out
in
call
fidivl
hlt
aam
cli
xchg
mov
mov
cmpsl
adc
push
fdivp
and
fs
mov
xchg
and
xor
shrb
ljmp
bound
loope
test
inc
bound
xchg
gs
or
sti
jl
push
and
scas
adc
and
add
cmpsb
test
loopne
add
xor
in
dec
xor
xchg
jb
or
sti
mov
push
lahf
lods
mov
sti
pop
imul
adc
mov
mov
cs
clc
iret
mov
jmp
in
pop
push
or
divl
ret
and
sub
loop
push
jbe
cmp
xchg
push
push
mov
sti
into
mov
in
daa
pop
mov
sbb
sahf
mov
sub
sub
nop
pop
xchg
jp
js
leave
adc
lods
xchg
ljmp
jp
push
sbb
cltd
cmp
shll
push
xchg
sub
int3
mov
jle
ja
jl
mov
jb
aam
sbb
cbtw
dec
push
pop
cwtl
sub
roll
aaa
out
test
or
sbb
dec
and
mov
test
xor
sahf
sub
movsb
lret
and
aad
mov
mov
fcoml
shll
mull
pop
shll
jne
out
jnp
test
mov
js
jmp
enter
sbb
movb
xchg
popa
fstp
cli
sub
arpl
jecxz,pt
mov
stos
movsb
jecxz
cmp
into
loope
xchg
pusha
mov
jle
shll
sbb
and
hlt
pop
adc
adc
aad
xor
pop
into
clc
cmp
lret
xchg
add
cmp
aad
pop
test
aam
adc
xlat
idivb
imul
mov
aaa
add
xor
lods
adc
fs
addr16
inc
rol
out
scas
in
push
call
cli
and
aaa
xor
int
aad
fdivrs
dec
pop
negb
out
cli
loope
fsubs
hlt
addr16
sbb
loop
gs
or
sub
lock
fimull
dec
add
mov
jmp
fs
addl
mov
fmull
jns
int3
push
cwtl
pop
std
loopne
push
pop
push
fwait
mov
adc
out
push
imul
ds
test
adc
mov
aas
inc
stc
dec
pop
pop
jp
mov
pop
lea
movsb
int
addr16
ss
jno
xchg
in
jb
imul
in
test
in
lock
sbb
pop
dec
push
mov
pop
mov
adc
adc
jmp
mov
pop
test
out
pusha
pop
int3
sub
xor
and
mov
mov
in
cmpsl
dec
lret
xchg
cmpsb
push
mov
add
sbb
icebp
adc
in
cld
and
lea
jo
push
ja
fldt
or
shrl
aam
jnp
sbb
inc
popa
scas
xlat
jae
cmp
mov
shlb
stc
dec
mov
jno
mov
pop
xchg
cmp
dec
das
out
sub
outsb
mov
imul
add
sbb
repz
arpl
push
idivl
insb
fsub
leave
xchg
popf
iret
add
fidivl
mov
in
cmp
sarb
stos
xchg
rclb
mov
sbbb
loopne
out
movsb
jmp
imul
aam
xor
in
into
arpl
xchg
sub
movsl
inc
fldenv
or
xchg
jb
add
je
push
pusha
pusha
and
cwtl
cmp
aad
inc
into
arpl
lret
into
les
lcall
pop
pop
ficompl
jge
rorl
ret
jl
js
hlt
pop
sar
jo
cli
ret
int3
popa
sub
inc
push
inc
insl
inc
mov
sub
mov
cmp
pushf
sub
lahf
mov
iret
fistps
scas
sarb
aad
dec
mov
add
cli
adc
push
xchg
insl
testl
xor
sbb
push
jne
pop
and
jge
sbb
nop
and
les
pushl
movsb
js
arpl
mov
and
je
mov
js
xchg
lods
inc
shlb
dec
inc
inc
lcallw
notb
xchg
dec
adc
stc
loop
add
dec
nop
js
xchg
mov
push
in
sahf
arpl
xor
call
push
sti
out
sar
leave
sbb
mov
sub
pop
gs
and
or
push
leave
shl
stos
pop
out
mov
and
sbb
inc
lds
int3
or
or
scas
and
sub
in
jbe
popa
out
jo
ljmp
dec
xchg
push
xor
add
lcall
inc
cli
push
or
and
and
repnz
stos
mov
dec
sbb
jb
cwtl
mov
insb
leave
ja
adc
iret
es
jle
popl
xorl
sub
lahf
add
xor
and
xchg
or
sub
outsl
lods
loop
movsb
mov
push
lcall
xor
sar
dec
add
pop
or
cmpl
add
jg
in
inc
fistps
mov
xchg
cmpl
cmp
mov
cmp
inc
cld
xchg
lcall
cli
testl
push
imul
es
adc
push
aaa
imull
mov
xchg
mov
lcall
mov
in
cld
ljmp
out
outsl
jbe
xchg
mov
loop
leave
in
xchg
ljmp
imull
mov
fdivs
fcompl
mov
incl
sbb
and
cli
pop
xchg
stos
inc
mov
pop
xor
pushf
stos
fwait
pop
cltd
inc
push
push
push
loopne
cs
outsl
cmp
xchg
xor
xchg
into
cs
xchg
pushf
gs
add
mov
xlat
mov
shl
add
outsb
pop
add
jmp
fisubrs
cmp
adcb
lret
xor
or
adcb
lcall
scas
and
fadds
jo
add
hlt
jae
xchg
sahf
ss
fldt
dec
rol
xor
jg
ja
sbb
mov
mov
jmp
loope
mov
cs
stos
repz
shrb
imul
shlb
mov
cmp
cld
imul
loop
xor
jp
enter
or
pop
inc
imul
ja
fwait
mov
adc
mov
mov
cmp
sub
sub
mov
xchg
imul
repnz
mov
js
pop
mov
test
xchg
test
loopne
mov
adc
xor
mov
push
xor
mov
jb
jg
mov
and
push
dec
iret
js
das
hlt
jg
add
lcall
arpl
xor
xchg
sbb
loop
popf
lret
out
cmp
fistl
mov
mov
nop
adc
enter
in
xor
incb
mov
adc
inc
addr16
sti
lahf
sbb
add
adc
xor
pop
idivl
or
adc
mov
sub
std
inc
sti
loop
jns
mov
shll
pop
jb
test
popa
inc
ror
out
bound
or
xor
hlt
in
sub
cmp
cltd
and
xchg
pop
imul
xlat
sbb
jbe
push
and
jb
sbb
push
lods
inc
adc
mov
push
jbe
out
sbb
mov
push
mov
or
add
or
repz
sti
orl
add
clc
mov
pusha
imul
addb
push
test
xchg
or
mov
dec
scas
pop
imul
inc
sbb
mov
mov
popl
shrl
loope
cwtl
fsts
mov
xor
or
aaa
jl
ss
aas
stc
add
xor
xchg
adc
cmpsb
add
or
xor
ja
inc
scas
add
shlb
imul
lea
and
int
ljmp
in
in
push
mov
inc
movsl
cmpsb
testb
mov
adc
sub
mov
sub
dec
or
mov
push
repz
test
lods
xor
js
out
and
xchg
scas
or
jmp
testl
test
push
mov
xor
cmp
xchg
inc
cmp
cli
adcb
sub
cmpsl
lods
out
push
cmp
xchg
push
or
dec
cs
insl
add
push
mov
daa
or
notb
inc
adc
xor
add
ja
sub
mov
fdivr
loopne
mov
lahf
test
adc
cmc
in
into
pop
or
sbb
lods
sub
sub
cmp
mov
test
cltd
stos
jge
test
jmp
inc
in
adc
rorl
mov
sub
cmpsl
cwtl
inc
divb
idiv
test
add
xchg
fcmove
jp,pn
push
xor
pop
lds
cmpb
shlb
test
daa
xlat
in
mov
cmp
aad
sahf
dec
dec
mov
xchg
fcomps
and
daa
fwait
xchg
lcall
lds
push
fstpl
outsl
fnstenv
and
mov
mov
into
mov
mov
data16
xor
aam
inc
in
or
push
jns
inc
pop
pop
xchg
sbb
and
sub
out
xor
movl
xchg
jecxz
jp
add
insb
dec
fnstsw
mov
rcll
xchg
in
fstps
es
rcll
daa
pushf
and
mov
lds
mov
add
dec
sbb
mov
mov
or
mov
int
es
xchg
outsl
imul
rcr
xor
mov
or
or
in
jmp
inc
inc
fmuls
test
inc
hlt
daa
outsl
mov
int3
mov
test
cmc
xchg
push
lret
rorl
clc
cmp
pop
rcrb
jnp
out
mov
xor
ret
cltd
aam
je
xchg
mov
mov
lret
push
push
lea
mov
xchg
scas
dec
mov
fdivs
push
aad
mov
push
shlb
push
push
push
push
xchg
fcomps
mov
jg
jno
and
jbe
push
lea
jnp
xor
sti
int
sub
mov
arpl
ds
pushf
loop
push
es
sub
cltd
and
push
aad
mov
push
ljmp
push
arpl
rcll
adc
xor
in
add
xchg
mov
mov
loopne
cltd
sub
mov
mov
loope
mov
pop
loop
fwait
mov
pop
add
out
mov
ss
or
std
pop
aad
stos
mov
cs
sti
je
js
mov
mov
aam
jle
xchg
ret
add
popf
iret
mov
cld
int
stos
sub
mov
fsubrl
std
ss
jne
test
sbb
dec
add
movsl
leave
ss
dec
push
pusha
cmpsl
std
dec
cmpsl
insb
xor
fiaddl
enter
mov
lcall
outsb
pop
dec
dec
sbb
insb
fcomps
cs
push
jecxz
cmp
jge
xchg
aaa
xchg
lds
and
test
pop
cwtl
pop
mov
push
and
pop
jnp
dec
push
imul
sub
xchg
dec
lods
add
lcall
cmp
bnd
inc
add
mov
mov
faddp
xchg
inc
das
lods
or
les
ljmp
sub
scas
jmp
mov
pop
out
in
mov
js
ret
pop
xor
push
add
xchg
mov
cltd
pop
std
insb
testl
mov
jmp
fiadds
adc
and
data16
insl
cld
es
push
iret
pop
cmpsl
sti
jno
fsts
mov
jnp
adc
mov
pop
inc
xor
or
and
dec
jle
xor
dec
xor
jno
dec
sbb
xchg
lea
dec
cmpsl
mov
inc
jns
sti
sbb
push
js
lahf
aaa
jnp
xorb
jbe
shr
stc
mov
jge
xor
dec
bound
and
jge
mov
jb
jp
cld
les
test
test
orb
paddsb
dec
jne
sbb
adc
add
dec
jno
lret
lods
adc
mov
inc
cmpsb
mov
jmp
mov
and
fwait
sub
add
repz
movsb
adc
movsb
add
mov
xlat
incb
add
add
jl
inc
outsl
fcmovu
dec
lds
and
or
dec
mov
xchg
jg
and
xchg
add
mov
or
jge
insl
dec
pop
jbe
push
xlat
insl
in
test
and
fisttpll
inc
mov
mov
je
mov
or
xchg
mov
mov
jne
cwtl
mov
in
cwtl
stc
cmc
jg
aad
pop
addr16
push
jb
ss
xor
mov
rcrl
iret
idivb
ret
insl
push
push
add
lret
push
sbb
out
sub
cmpb
pop
push
testb
jg
nop
out
or
or
test
out
add
xchg
and
call
outsb
adc
xchg
sbb
adcb
cs
insb
xchg
mov
sbb
rorl
inc
mov
mov
test
add
sbb
insl
xorb
pop
movb
int3
inc
cmpsb
mov
lods
push
lahf
enter
pop
adc
lcall
push
add
rorl
outsb
sub
push
or
inc
push
push
push
lcall
mov
test
fstl
notb
es
in
xchg
mov
inc
sbb
outsb
fistpll
test
mov
fisttpll
stos
jl
inc
fs
sti
ljmp
ds
popf
icebp
sub
ret
push
jb
cmp
out
cs
dec
aaa
jb
aas
inc
push
scas
sub
push
insb
out
subl
fcoml
sarl
repnz
add
mov
jns
into
mov
aaa
inc
xchg
add
lret
add
pop
jns
mov
push
imul
shrb
mov
std
or
mov
xchg
sub
xorb
fisubrs
out
cmp
add
repnz
pop
daa
in
cmpsb
sbb
jmp
stos
mov
or
sbb
mov
jmp
xchg
rcll
adc
cmp
add
xchg
xchg
shll
xchg
sbb
movsl
lds
jle
in
adc
jl,pn
frstor
mov
pop
pop
mov
xor
xchg
fisubs
adc
lcall
aad
lods
cs
push
test
push
mov
and
xchg
mov
pop
sbb
ja
or
jle
sub
xor
lock
cld
int3
repnz
cmpsl
push
xlat
inc
arpl
cmp
mov
inc
lods
jbe
cld
add
and
mov
hlt
xchg
or
jmp
mov
push
xchg
popf
leave
jecxz
lret
icebp
fistl
mov
fisubl
push
push
or
fwait
insl
scas
add
in
push
xor
sub
fs
pop
insl
mov
sti
stos
out
pop
in
imul
cli
sub
and
pop
fisubl
fildll
push
mov
push
jmp
xlat
iret
stos
push
or
leave
mov
xchg
fnstenv
cmp
dec
ja
push
enter
cli
fdivs
mov
int
mov
mov
loope
lods
pop
test
jge
in
pop
gs
insl
insb
pushf
mov
sarb
sbb
mov
cli
movsb
in
daa
add
xor
outsb
push
cmpsb
es
push
pushf
ljmp
jmp
mov
jl
imul
mov
cmp
jbe
and
gs
out
daa
sahf
xchg
mov
push
inc
ret
insl
sahf
push
mov
into
mov
add
push
mov
or
xchg
rcll
pop
jns
mov
xchg
xchg
jl
ret
pop
adc
jp
rcl
inc
sti
std
mov
and
mov
adc
lret
push
mov
clc
loope
add
out
clc
pop
lds
daa
inc
orl
and
std
push
adc
test
jmp
or
mov
dec
sbbb
jnp
call
in
sahf
test
daa
jmp
push
mov
jne
jb
sti
push
andl
decl
rcrb
pop
jl
jne
and
mov
mov
dec
push
pushl
lds
add
outsb
mov
ds
cmp
mov
push
icebp
jecxz
icebp
mov
test
lea
ds
movb
std
outsl
push
push
rcrl
outsb
iret
shlb
and
xchg
into
pop
negl
cmp
inc
test
iret
rcll
rcrb
aam
jae
pusha
jge
or
and
xchg
repz
out
neg
stos
mov
cli
pop
add
nop
iret
xorl
jnp
xchg
out
xlat
xor
sbb
imul
cltd
jle
loopne
test
xchg
inc
jl
sbb
enter
subb
sbb
mov
ds
mov
push
inc
cmpsb
push
push
pushf
ds
fistpl
add
inc
repz
pop
std
push
pop
mov
mov
dec
cmpl
xchg
out
cmp
sbb
cmp
add
sub
sarb
inc
xor
pop
push
int
and
xor
jge
jge
int3
popl
jmp
jns
testl
mov
fstps
or
jo
jecxz
push
sub
out
inc
inc
or
orl
in
push
push
xor
iret
mov
movsl
cltd
cmpsl
adc
popf
mov
lcall
aas
imul
arpl
mov
scas
sbb
mov
push
dec
or
ret
mov
add
adc
mov
sbb
mov
fisttpll
cmc
push
and
cmpsl
mov
inc
xchg
xchg
add
stc
scas
sbb
mov
je
xor
and
cld
adc
gs
mov
jg
das
daa
mov
insb
inc
adc
dec
inc
push
push
jnp
pop
test
enter
mov
jl
sbb
fstl
lahf
and
insb
mov
jbe
ficompl
shll
push
or
and
sahf
jmp
xchg
jp
push
push
imul
xchg
sbb
lcall
mov
xor
loopne
out
or
jge
sub
test
adc
xor
cmp
repnz
dec
and
pop
pop
idivb
les
leave
fdiv
loope
nop
negl
test
ror
adc
and
cmc
and
push
jb
cmp
andb
push
cmp
add
add
dec
jbe
ja
sub
lret
fimull
add
adc
add
and
aad
jb
push
mov
je
cmpsb
movsl
ljmp
add
sub
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
xchg
jne
add
jne
add
jne
add
jne
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
aas
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
inc
xor
add
add
add
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
pop
jge
add
add
add
add
add
add
add
add
push
jge
add
add
in
arpl
add
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
das
jle
add
addb
out
add
dec
jle
add
jns
add
jle
add
add
mov
add
sarl
add
jp
add
add
add
add
add
jl
add
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
pop
add
outsl
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
or
lods
sti
inc
mov
adc
and
add
add
jbe
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
