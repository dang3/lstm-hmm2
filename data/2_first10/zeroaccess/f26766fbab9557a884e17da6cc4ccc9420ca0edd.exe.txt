push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
jnp
sbb
pusha
addl
cmp
jp
jbe
test
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
sbb
cmp
popf
ljmp
adc
mov
mov
movsb
mov
pop
movsl
cli
jmp
loope
mov
loope
ret
or
push
nop
add
mov
xor
mov
aad
mov
aas
arpl
push
xor
shrl
cmp
daa
ret
int3
clc
movsb
sbb
xchg
or
sbbb
mov
mov
lods
adc
lret
les
and
pop
jo
cmp
mov
inc
jnp
adc
adc
xchg
sub
cmp
push
lret
insl
je
add
xorl
xor
std
mov
les
adc
sbb
es
xor
fucompp
aam
or
push
sbb
adc
aam
pop
pop
pop
jl
pop
adc
ss
int
xlat
ja
ret
call
ss
enter
dec
adc
nop
jae
int
adc
adc
clc
xor
inc
mov
sbb
aam
imul
mov
add
pusha
repnz
shl
and
fcompl
mov
jne
vphaddubw
jge
es
out
pusha
pop
pop
and
sub
sbb
sbb
movsb
or
stos
pop
movsl
hlt
mov
arpl
push
dec
inc
cs
mulb
shrb
addr16
jne
push
les
lret
mov
gs
pop
dec
adc
cmp
xor
les
jmp
subb
std
gs
pushf
movsb
mov
mov
lea
xchg
adc
bnd
xor
orl
inc
push
orb
pop
data16
add
mov
adc
cmp
fs
xchg
cs
dec
inc
out
shr
inc
xadd
lods
push
sbb
in
xchg
xor
ss
cmpsl
loopne
adc
fwait
aam
dec
sub
test
sbb
push
scas
int
dec
sub
and
lea
imull
addr16
jno
fbstp
outsl
into
inc
hlt
scas
mov
push
cwtl
xchg
mov
leave
mov
push
mov
cld
ficoms
push
mov
push
flds
add
ljmp
aad
fs
cld
lahf
in
lret
gs
ret
dec
ds
and
adc
fs
ss
sub
mov
push
shll
cmpsb
shr
adc
stos
or
mov
in
mov
ret
jae
insl
and
sub
push
sbb
xorl
jecxz
push
xor
cmpsb
adc
adc
push
jp
jb
xchg
xchg
add
cmpsl
xchg
adc
int
pop
lds
rcrl
outsl
mov
mov
or
ja
addl
popf
push
imul
sbb
mov
or
or
out
and
push
mov
aaa
mov
stc
add
int3
cltd
push
int
icebp
cmp
add
lret
out
xchg
push
lret
loop
shl
js
in
adc
mov
ljmp
add
ja
sbb
addb
add
jge
rclb
out
sub
xor
jns
cli
push
jge
leave
dec
and
test
xchg
inc
cs
add
sbb
inc
arpl
fiadds
fwait
or
cmp
add
arpl
cmpsl
mov
aaa
xchg
push
add
das
jecxz
mov
bnd
fistpl
inc
mov
inc
pop
sbb
xor
inc
xchg
int3
pop
out
dec
adcl
push
shll
xchg
jecxz
fldl
and
push
sbb
jecxz
pop
xor
push
adc
jo
jg
inc
lret
ja
sahf
and
push
fcomps
aaa
fldt
mov
xor
sub
jbe
jbe
mov
push
in
mov
rcl
bound
mov
xchg
jne,pt
xchg
lret
dec
push
xchg
fnstcw
imul
inc
jge
div
stc
mov
stos
pop
push
ljmp
fld
out
mov
dec
cmpb
mov
cmp
rcrl
xchg
cld
test
jno
stos
xor
and
fcoms
stos
xorl
clc
clc
fnstcw
loopne
push
fwait
cltd
or
mov
push
push
out
fisubl
jg
je
pop
filds
push
or
adc
mov
adc
sub
xor
lods
ficoms
nop
push
push
in
mov
and
shrb
mov
or
cmp
add
lock
ret
jmp
sub
lock
sbb
mov
fadds
std
push
test
sarb
lods
sbb
xchg
movsb
sti
test
mov
pop
jns
xor
jnp
inc
lods
xchg
adc
add
mov
scas
or
test
cmc
adc
xchg
stc
push
out
xchg
xor
sub
pop
cmp
or
sub
sub
sub
mov
fidivrs
movsl
or
enter
out
mov
mov
iret
adc
adcb
les
jge
loop
lcall
popa
cmp
stos
xor
mov
scas
sarb
lds
and
fldcw
hlt
adc
rcll
aas
clc
jns
rol
in
lret
shlb
ss
pop
xchg
xchg
lea
xlat
cs
les
arpl
loop
mov
inc
mov
sub
push
jbe
rol
shr
ja
jne
sub
clc
push
inc
popa
cmp
add
or
int
aam
outsl
mov
cmp
xchg
cmp
into
fimull
push
ljmp
and
sub
push
and
dec
cmp
mov
mov
pop
pop
pushf
mov
add
arpl
inc
lcall
leave
gs
in
xchg
lahf
das
lods
adc
jg
cs
jne
sahf
insl
mov
xchg
xor
mov
fcom
xchg
shlb
lock
dec
xchg
jg
addl
das
push
cmc
adc
pop
insb
stos
xchg
dec
push
mov
leave
and
pusha
add
outsb
je
int
push
pushf
pop
add
aam
arpl
mov
lods
shrl
xchg
lods
icebp
pop
aad
or
xor
out
inc
sub
cmp
push
inc
jnp
jne
cltd
mov
jb
rcrb
adc
inc
ret
mov
jle
push
in
push
stc
addr16
cwtl
push
xchg
lahf
arpl
lcall
cmpsl
mov
xchg
lret
jmp
orb
pusha
push
or
mov
adc
push
sti
push
scas
dec
out
inc
pop
shrl
jb
xor
les
push
jne
inc
mov
xchg
jmp
add
icebp
cmp
sbb
jp
adc
jmp
addl
pusha
fstl
fimull
gs
xlat
ds
add
jnp
leave
or
icebp
in
xor
pop
je
push
add
fcompl
mov
out
imul
add
jo
stc
and
leave
dec
cmp
in
xchg
pusha
push
mov
stos
iret
out
aaa
ja
mov
cmp
jmp
fimuls
movnti
imul
and
push
inc
insb
mov
pushf
out
int3
je
or
pop
dec
roll
std
rol
pop
sti
leave
imulb
adc
ficoml
andl
jae
test
insl
mov
inc
jb
pop
loopne
inc
cmp
mov
xchg
aas
push
cmp
jno
pop
mov
adc
add
int3
aas
and
push
repz
mov
cmp
mov
out
nop
mov
inc
out
fs
cld
enter
repnz
push
sbb
enter
mov
cmpl
ja
jle
dec
loopne
or
and
mov
das
ss
test
inc
cli
and
dec
roll
mov
mov
mov
lods
scas
xor
push
jge
rcrl
cmpsb
pop
lcall
push
inc
mov
push
bound
and
mov
inc
or
out
loop
pop
push
movsbl
lcall
sub
cmp
mov
xchg
imul
mov
ret
test
cmp
aam
scas
inc
sub
scas
mov
fcmovnbe
inc
xchg
xlat
jge
inc
cld
dec
lea
jle
mov
ja
xlat
xchg
stos
sahf
int
and
popf
pop
push
cmp
jl
aaa
and
shlb
popf
aad
jne
jns
pop
cmp
dec
gs
or
sarb
jb
xchg
lahf
fcom
xor
ret
or
je
inc
xor
xchg
xor
imul
dec
sub
fidivs
insl
cli
sbb
repnz
sahf
cmpl
pop
sub
xchg
jle
fistps
or
sub
mov
push
iret
adc
mov
add
js
adc
jecxz
into
data16
daa
or
loop
popf
scas
movsl
rol
mov
push
bound
cld
and
jg
add
cli
fbstp
xchg
mov
mov
filds
mov
sub
jp
icebp
dec
int3
mov
shlb
andl
xorl
mov
add
fistl
stos
mov
xchg
mov
cmpsl
popa
dec
push
xchg
outsl
mov
mov
sub
test
dec
jbe
or
call
or
jbe
sbb
jp
je
faddl
jmp
roll
rcl
aas
mov
outsb
xor
cld
or
std
insb
in
mov
jecxz
ja
call
sub
and
xor
sbb
sub
mov
scas
jl
loop
repz
lock
jns
jo
icebp
mov
xchg
sbb
mov
or
aas
sti
xchg
push
aam
scas
jno
cmpsl
lret
add
pop
cmp
lock
lret
xchg
les
jmp
enter
idivb
cmc
lea
cmp
cmpl
xchg
mov
mov
xorl
sub
nop
enter
sahf
inc
rorb
or
lds
jmp
roll
cmpsl
jo
sub
push
insb
fidivl
adc
xlat
pcmpeqd
loopne
lods
pop
iret
rcrb
mov
xor
sub
or
les
inc
mov
dec
data16
or
repz
inc
lea
stos
jp
sbb
std
adc
lret
add
movsl
inc
jno
repnz
insl
bnd
xchg
xor
mov
test
mov
pop
cwtl
push
mov
adc
add
sub
cli
push
inc
mov
addr16
adc
jb
jge
lods
lcall
inc
or
in
mov
cmpl
loopne
ljmp
ds
lds
dec
mov
lea
xor
insl
repnz
or
or
je
paddsb
lahf
cmp
jbe
lea
jmp
xchg
sti
xor
adcb
pop
scas
ljmp
test
push
cwtl
push
bound
xchg
mov
arpl
adc
insl
fiaddl
push
push
jge
sahf
ja
stc
push
mov
pop
mov
jbe
in
mov
imul
pop
out
stos
fstp
mov
cmpsl
sbb
fdivl
shrb
xchg
icebp
xchg
sahf
rolb
test
jae
mov
jns
movsb
sbb
cmp
xor
fcos
jl
push
push
jno
adc
clc
adc
loop
cmp
push
lods
jo
nop
add
sbb
dec
mov
dec
pop
scas
sub
repnz
stos
stos
sti
test
inc
xchg
mov
aad
cld
in
or
mov
mov
int
mov
fcmovb
adc
pop
jle
sbb
cltd
jge
ljmp
mov
adc
mov
out
push
jns
fisubl
cld
fcoms
cmp
mov
push
adc
insl
outsl
iret
outsb
mov
cmp
or
stc
xor
push
in
fs
imul
mov
ss
popl
out
addr16
push
adc
idivb
lock
fsubrs
jp
mov
jp
jmp
ffreep
data16
push
vpsrad
rcrb
cmp
stc
xor
lock
repnz
inc
lret
ja
imul
push
cmp
clc
add
inc
jg
mov
adc
fistl
cmp
xchg
xchg
and
xchg
ja
ret
imul
cli
cmp
loop
adc
adc
sbb
test
cmp
mov
cwtl
sub
or
mov
mov
mov
dec
xor
mov
lahf
into
sub
je
adc
lock
dec
scas
jecxz
test
jb
and
imul
sub
jne
sbb
inc
insl
cmp
pop
or
call
ss
pushf
jmp
pop
mov
mov
or
rclb
sbb
sbb
cmp
pop
sti
pop
and
add
cwtl
xor
xchg
inc
xor
pop
mov
lock
sbb
sbb
addr16
leave
cmp
xchg
dec
cwtl
lock
outsw
arpl
mov
mov
adc
nop
repnz
adc
daa
ret
jmp
push
sbb
adc
xor
dec
mov
lret
mov
push
lret
mov
push
pop
jp
int
sahf
js
loopne
mov
sub
pop
push
out
dec
cmpsb
sbb
push
jns
cmp
xor
mov
pop
xor
lret
sub
and
jle
nop
cmp
pop
rolb
or
pushf
mov
ret
cmp
scas
mov
xchg
bound
cmp
mov
sub
mov
pop
and
and
aaa
pop
imul
aaa
dec
sbb
pop
pop
sub
pop
lea
dec
xor
inc
cmp
cli
jbe
sahf
mov
cmp
dec
lret
mov
loopne
ret
idiv
mov
add
popa
dec
mov
pop
gs
lret
sarl
cmpl
loop
stos
fcoms
nop
fsubs
xor
enter
lock
ds
gs
dec
mov
mov
pop
jo
add
add
dec
xchg
cli
cwtl
adc
popa
fisubs
dec
int3
pop
mov
and
adc
daa
dec
xchg
jle
pop
imulb
and
idiv
mov
aaa
int
int
test
out
nop
pop
dec
sub
pop
cmpsb
mov
inc
push
xchg
dec
sahf
add
stc
or
or
adc
test
mov
cmp
jp
inc
jbe
aam
enter
jg
js
test
mov
in
dec
fiaddl
cld
scas
pop
pop
sub
shrb
subps
fiaddl
inc
mov
andb
push
cmpsb
sub
js
lods
sub
push
mov
lock
push
negl
ret
clc
xchg
aad
test
jmp
cmp
shrl
mov
push
int
aas
and
ret
movsb
dec
xchg
js
jno
add
pushf
mov
mov
and
jle
mov
sbb
int
inc
dec
fmul
imulb
inc
jl
mov
ret
insl
mov
dec
sti
push
or
add
shrl
mov
mov
pop
popa
sbb
sub
jb
add
out
out
jo
shlb
aaa
and
shrl
pop
arpl
scas
aaa
out
in
cltd
jecxz
loopne
jns
jo
iret
int3
push
xchg
add
cmpsl
ret
cmpb
cmp
fs
shl
aaa
iret
jb
jno
jl
das
gs
sbb
mov
fists
inc
je
xchg
add
in
sub
sahf
loop
cmp
jnp
ja
shrl
push
cmp
mov
mov
cltd
pop
inc
ficomps
pop
jbe
jmp
inc
inc
test
pop
sub
sub
icebp
and
cmp
sbb
xchg
rcrl
cmc
push
and
cld
mov
mov
dec
jg
cmc
lret
push
lret
sbb
mov
cmp
push
lcall
sub
mov
jecxz
aas
xchg
sub
loop
sub
jge
jmp
cwtl
add
pop
or
xor
inc
pushf
xchg
nop
insl
xchg
std
mov
minps
mov
pop
fisttpll
stos
sbb
mov
out
add
repnz
pop
xor
int3
and
out
sub
shll
push
ds
movsb
lods
out
data16
cwtl
pop
xor
pop
sub
add
aas
sbb
pop
xchg
fwait
inc
xchg
incl
std
stc
inc
notl
and
fwait
cmp
js
inc
movsb
shrl
icebp
iret
and
sbb
pop
xchg
ret
mov
or
or
hlt
sti
pmuludq
sub
jmp
cmp
dec
or
add
add
push
mov
cld
mov
hlt
mov
adc
cmc
cmp
lds
or
push
fistl
je
push
psllw
sub
jl
mov
push
cmp
shr
mov
pop
fs
xor
xlat
lahf
push
mov
inc
pop
movsb
xor
iret
cltd
sub
or
fadds
loope
ret
or
cmp
add
push
or
add
int
sub
fdivrl
push
mov
mov
sub
aas
xchg
hlt
shr
xor
xacquire
pop
xchg
jno
dec
mov
popl
ret
fildll
sbb
dec
push
xchg
loopne
enter
lods
dec
lea
lods
ret
jnp
out
lods
cld
and
pop
adc
mov
adc
fcomip
into
ja
mov
lahf
das
push
filds
xchg
in
call
mov
loope
ror
rolb
sub
popa
mov
and
sti
mov
repz
sbb
testl
and
adc
sbb
and
leave
xchg
popf
adc
into
rolb
imul
push
inc
mov
lret
mov
shlb
sub
arpl
sbb
mov
jbe
cmp
xor
scas
insl
mov
jmp
arpl
in
add
cwtl
lea
pop
fisubs
mov
push
sub
xlat
ret
je
mov
cmp
xchg
icebp
adc
mov
xchg
lods
inc
aaa
outsl
ffreep
mov
or
xorb
lock
ja
mov
mov
and
mov
hlt
dec
leave
jecxz
addr16
cmp
sbb
and
in
mov
jne
inc
jg
pop
xchg
imul
and
jo
fisubrl
sub
dec
in
bswap
jno
popf
adc
adc
push
out
cmp
bnd
push
mov
fnstsw
fdivs
fstl
rcrb
aam
icebp
xchg
mov
lcall
enter
and
sbb
orb
xlat
repnz
sub
lds
or
fwait
aam
pop
out
addl
push
arpl
lods
cmp
mov
test
int3
in
dec
push
and
lods
add
imul
push
clc
inc
leave
ret
cmp
push
xor
xchg
ja
jge
jo
dec
outsb
out
cmp
nop
addr16
mov
imul
mov
hlt
imul
lods
stc
inc
xchg
loopne
push
or
cmpsl
lock
jp
sbb
arpl
cs
dec
and
rorb
push
xchg
rcrl
and
aam
ds
xor
lock
mov
and
xchg
int3
push
mov
mov
cmp
sbb
cmp
inc
out
insb
xchg
push
jmp
repz
pop
inc
add
xchg
dec
cmc
inc
xchg
jns
test
in
popa
and
pop
sahf
pop
into
mov
mov
cmp
fs
pop
xchg
or
mov
jae
adc
test
or
mov
mov
push
sbb
pushf
cmc
int
inc
jno
jb
xor
lea
scas
cmpsl
add
xchg
jb
and
and
push
aad
sbb
inc
mov
pop
in
xchg
es
fistpll
xchg
and
push
pcmpgtd
imul
test
sbb
xlat
pusha
pusha
cmpsb
and
pop
bound
cmc
mov
mov
add
mov
loopne
and
cmp
aaa
jns
mov
mov
pop
mov
loop
outsb
cmpsl
dec
mov
xchg
and
push
je
cmc
hlt
mov
outsb
pop
in
xor
jge
into
push
mov
push
cmp
sub
add
sub
lret
pusha
idivb
mov
leave
cli
xor
not
pop
hlt
jmp
fiadds
daa
xor
push
shlb
xchg
out
push
cmp
lods
add
mov
pop
movsb
scas
mov
xchg
aas
fldenv
fildl
adc
movsb
negl
bound
movsl
sbb
fidivrl
dec
shll
sbb
iret
xchg
iret
dec
cmpb
fucom
dec
inc
inc
mov
or
lahf
ret
stos
out
jno
es
or
movsb
push
lods
xor
dec
adc
sub
xorb
push
stc
sarb
outsb
dec
fst
sbb
xchg
ljmp
mov
pop
jle
mov
fsubs
test
xorb
cmp
ret
sbb
jmp
rcrb
movsb
xor
outsl
mov
mov
cmc
jae
sti
bnd
int3
mov
adc
dec
jae
imul
stc
pop
sbb
iret
aad
and
shl
movsl
dec
add
or
or
pusha
xchg
add
mov
cmc
les
clc
and
push
push
sub
and
xchg
mov
sub
sti
cmp
fstps
ret
inc
push
repz
stc
mov
sarl
push
or
pushf
xchg
sbb
adc
dec
xchg
add
push
inc
in
in
fs
in
mov
inc
push
xchg
push
xchg
in
out
and
loope
mov
jge
inc
mov
or
pop
rcrl
mov
sub
xbegin
sub
cmc
sbb
mov
in
jge
add
in
es
in
dec
call
std
mov
call
das
sbb
push
in
xchg
jbe
jle
hlt
dec
ficompl
dec
cmp
out
loop
xor
cmp
mov
or
ret
test
inc
sti
sbb
dec
push
sub
shlb
cmpsl
fsubr
fnstenv
pop
xor
mov
fwait
push
sbb
xchg
call
shrb
lods
add
jl
lret
cmp
or
mov
sbb
sbb
jo
inc
fldenv
in
pop
mov
pop
mov
imul
adc
dec
xchg
inc
pslld
add
and
sbb
cmp
mov
popa
shrb
lcall
or
add
bound
fstpl
jge
fistl
push
jg
shlb
jge
les
push
mov
lret
adc
pop
je
and
sub
gs
push
arpl
fldl
adc
cltd
or
or
hlt
in
and
cmc
mov
in
mov
mov
aaa
movsl
mov
mov
fiaddl
sbb
push
push
push
scas
scas
lea
cli
lds
xor
outsl
notl
mov
lods
leave
ljmp
xchg
es
cmp
xchg
lods
dec
adc
xor
mov
subl
leave
in
in
test
lret
test
inc
rcl
adc
push
fs
and
mov
orl
mov
jge
push
and
mov
sbb
mov
mull
movsl
jecxz
adc
dec
pop
xchg
sti
ret
cmp
negl
bound
or
cld
mov
imul
push
sarb
dec
call
stc
hlt
ja
mov
scas
cs
inc
dec
aas
lcall
incb
rolb
push
fnstsw
inc
out
sbb
shll
aam
mov
pop
ret
sub
xchg
sbbb
cmp
roll
in
mov
leave
push
fidivrs
jp
adc
pushf
mov
pushf
gs
pop
mov
rcrl
repnz
lods
pop
and
in
test
or
cmc
mov
mov
fnsave
jl
je
imul
pop
xchg
mov
push
sbb
pop
mov
inc
mov
cmp
push
lret
xor
push
cwtl
pop
and
xor
ljmp
lcall
or
mov
adc
les
out
jl
mov
xchg
xchg
mov
ss
cmp
test
xchg
lcall
sahf
mov
repz
push
jmp
dec
addr16
push
pop
cld
sar
adcb
sbb
dec
repz
dec
mov
js
sub
vmwrite
scas
xchg
rorl
ja
pop
or
test
sbb
xchg
data16
out
stos
xchg
sbb
imul
push
je
arpl
pop
das
in
mov
pop
mov
dec
pop
add
inc
lret
lret
jecxz
inc
and
icebp
fstpl
scas
lods
mov
pusha
and
gs
cmp
stos
cld
repnz
fcomps
jp
jmp
pop
repnz
inc
sbb
push
aam
cli
add
aas
out
sbb
test
adc
outsb
pop
test
sbb
mov
and
add
loope
fsubs
cmp
add
aam
shl
or
je
cs
inc
outsb
and
inc
dec
xchg
lock
jnp
push
pop
inc
popa
rcr
ficoms
xor
lret
fnstenv
pop
lock
scas
pop
push
xor
pop
lahf
jae
lahf
xor
push
mov
inc
adc
jecxz
xchg
stos
out
and
in
loop
and
adc
popa
pop
rclb
lea
popa
test
orl
or
outsl
stc
subl
adc
jno
or
out
aaa
cmp
adc
mov
or
scas
out
out
and
sub
cmpsl
mov
std
or
mov
dec
jae
and
int3
scas
popa
enter
mov
adc
lret
popf
mov
push
int
dec
lcall
inc
cmp
xchg
jge
push
and
xchg
movb
add
outsl
test
mov
or
mov
xchg
daa
and
aam
pop
xor
cmp
insl
fstpl
sbb
idiv
movsb
lcall
test
xor
es
mov
sbb
push
push
add
pushf
sbb
aas
das
and
ja
sahf
inc
movsl
pop
cmp
in
jbe
pop
mov
sub
out
pop
inc
lock
daa
adc
and
popa
adc
sub
xlat
iret
jae
push
dec
stos
sub
xchg
adcb
orb
pop
out
movsl
outsb
arpl
fwait
test
cmp
mov
xlat
repnz
arpl
ljmp
adc
push
lcall
add
pcmpgtw
and
adc
repz
jns
xor
cmc
and
or
roll
loope
mov
aas
mov
adc
mov
in
xor
mov
aas
lods
shl
dec
mov
popa
stos
sub
cmpsl
cli
mov
aaa
mov
mov
dec
inc
js
mov
mov
dec
test
add
testl
mov
lock
xlat
xchg
ds
push
xor
jnp
lret
in
test
mov
xchg
fistpll
in
or
ret
aaa
jo
xlat
xchg
das
jae
jge
dec
mov
mov
mov
or
insb
cs
mov
pop
out
mov
xchg
cmp
jnp
push
shlb
push
xchg
divl
mov
js
ja
loop
adc
mov
sbb
call
sub
pop
sti
lret
sub
jp
jmp
mov
orb
loopne
enter
shlb
stc
mov
pop
mov
add
adc
icebp
mov
addr16
cmpsb
add
scas
sub
lock
mov
jb
nop
negl
push
inc
mov
dec
xlat
jl
jne
push
in
lods
mov
adc
add
ljmp
js
mov
mov
push
dec
adc
mov
test
push
cmp
jg
gs
pop
out
push
or
adc
push
scas
subl
out
mov
je
lea
fisubs
out
adc
mov
pop
xor
cmp
loopne
jbe
inc
aaa
dec
push
xchg
lcall
enter
cli
stos
fsub
lock
jnp
xchg
xchg
dec
pop
call
inc
mov
xchg
ss
push
cmc
push
sbbb
lock
adc
mov
lret
sti
sarl
clc
mov
orl
loop
sbbb
lock
mov
xchg
lods
push
idivb
lcall
imul
inc
mov
or
data16
mov
andl
aam
add
add
repnz
icebp
xchg
dec
aas
mov
ror
push
int
into
sbb
cs
repnz
fbld
mov
test
outsb
scas
xchg
das
popf
xchg
fstps
xor
sbb
sbb
mov
roll
sub
xchg
test
pop
shl
pop
ds
fistpll
pop
ret
sbb
lds
sbb
xchg
mov
mulb
les
xor
jle
sbb
xor
mov
imul
shlb
call
or
stos
dec
in
fs
je
sbb
cmp
aaa
jl
push
mov
jne
cmpsl
sbb
xor
mov
mov
cld
movsb
jecxz
clc
lret
lea
adc
jb
mov
xchg
lahf
cld
enter
les
scas
gs
pop
test
sahf
icebp
data16
loop
rorb
jno
outsl
lahf
mov
inc
add
jbe
fnsave
jmp
push
add
add
fldcw
pop
scas
jge
gs
lcall
and
fldt
lret
gs
inc
inc
movsl
or
sub
iret
dec
aad
push
mov
cmp
sub
cmp
add
gs
cld
fnstenv
push
push
xchg
mov
lahf
xchg
int3
adc
fists
xor
lds
in
push
sub
lods
lock
ret
cmp
jge
call
cmc
sbb
out
jb
dec
jb
push
repz
jbe
leave
pushf
fldl
movsb
cmp
push
jecxz
sub
leave
andb
add
mov
insl
xlat
xchg
and
and
sub
push
inc
incl
cltd
aaa
mov
loopne
mov
push
mov
xor
sbb
lahf
push
pop
bound
mov
test
fcmovnu
addr16
fucomip
xchg
pop
test
insl
aad
std
jge
pop
les
ds
test
xchg
xchg
aam
push
mov
pop
sbb
fs
cmp
pop
cmp
movsb
mov
dec
lock
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
xor
cmpl
addl
lret
add
dec
faddl
or
xlat
pop
adc
jge
mov
fiaddl
repz
pusha
mov
repnz
addr16
jno,pn
push
test
pop
movsl
sub
ja
lock
xchg
push
mov
lahf
test
popa
mov
sbb
mov
into
or
mov
dec
mov
sub
in
xor
push
les
cmp
jmp
cmp
int3
or
adc
cltd
fwait
shlb
add
sbb
push
and
xchg
and
sahf
fwait
and
or
pusha
bound
push
pop
mov
mov
pop
push
rcll
or
xor
pop
dec
mov
and
cmpsl
mov
mov
or
shl
popa
int
or
addr16
aam
dec
and
inc
popf
push
int3
mov
cmp
jmp
jno
jo
inc
or
mov
pushf
jnp
xchg
lock
ret
push
push
mov
sub
orl
dec
cltd
mov
ss
loope
mov
inc
mov
mov
mov
sub
mov
mov
inc
outsb
dec
leave
ja
pop
ja
flds
pushf
sbb
iret
and
push
and
jg
or
cmp
insb
inc
cli
insl
lods
pop
adc
push
in
pop
xor
icebp
repnz
jbe
push
pop
cmpsl
xchg
jmp
dec
or
iret
data16
in
sub
int3
xchg
lds
xchg
fs
js
icebp
and
orl
rcl
add
repz
xor
mov
movsb
jge
and
jp
mov
dec
cmpsb
xor
out
outsl
fiaddl
ljmp
or
cwtl
cld
gs
jae
or
mov
mov
fsubl
push
add
in
sarl
lods
xchg
sbb
pop
jbe
jo
fwait
je
movsl
push
out
outsb
adc
nop
ret
out
cli
nop
jecxz
adc
fbld
pop
dec
and
adc
pop
and
inc
popa
cmc
and
xorl
xorl
sub
pop
lcall
hlt
and
add
addr16
sbb
int
pop
aam
stc
sub
push
and
inc
mov
lods
roll
mov
fisubl
xor
pushl
lret
mov
mov
lret
notb
int3
or
mov
mov
lods
cmc
mov
add
and
fisubs
movsl
repnz
push
mov
outsb
jo
xlat
testl
xchg
cmp
jb
dec
push
call
mov
pop
fisubs
adc
inc
push
push
lods
mov
dec
orl
xchg
insl
movsb
insl
sub
mov
lret
test
mov
jnp
push
hlt
sub
adc
jo
cmp
call
inc
insl
mov
outsl
cmpsl
jae
xchg
mov
inc
and
push
push
and
cmp
push
imul
nop
sbb
and
lahf
cmp
and
jl
out
arpl
icebp
insl
call
dec
xchg
dec
push
sub
repz
xor
loop
cld
shlb
xchg
xor
arpl
mov
stos
mov
mov
push
stc
out
cmp
in
lea
xchg
shll
sbb
lret
es
or
mov
mov
sub
pop
subl
or
mov
push
add
sub
cmp
push
mov
jge
mov
sti
dec
pop
movsl
or
adc
dec
add
into
inc
mov
fistpl
jmp
cld
cmp
sub
lods
xchg
neg
cwtl
dec
or
repz
mov
pusha
push
mov
mov
loop
std
sbb
push
addl
xchg
push
xor
fdiv
test
shrl
lods
or
jbe
stos
pop
jl
subl
adc
xchg
inc
xchg
shrl
jle
in
or
fstps
xchg
adc
mov
push
mov
mov
jns
and
cwtl
lahf
test
inc
stos
imul
shl
jno
xor
movsb
mov
loop
dec
mov
pop
inc
loope
pusha
lret
mov
imul
scas
rolb
pop
add
mov
push
mov
adc
mov
mov
jbe
lds
lsl
jg
push
pop
push
push
inc
mov
pop
movsb
repnz
push
stos
aam
adc
and
hlt
decl
xor
inc
sub
xchg
loope
and
cmc
shl
xor
mov
cmp
ljmp
gs
inc
fnstsw
pop
icebp
fcom
push
icebp
push
adc
dec
sub
out
es
pop
jl
test
pushf
fs
xor
xchg
es
sar
mov
pop
pushf
cmp
out
insb
sub
sub
xchg
rolb
aad
test
add
sbb
cmpl
sahf
daa
enter
add
mov
icebp
je
outsl
and
xor
cmp
out
fstps
imul
mov
xor
lods
mov
add
cwtl
jg
popf
xchg
mov
nop
inc
call
imul
movsb
outsl
nop
lahf
mov
ss
dec
dec
or
xor
push
das
mov
mov
xorb
pop
popa
fs
addr16
stc
jne
cmpb
out
and
add
fwait
daa
movsl
sbb
imul
addr16
in
sbb
pop
mov
cli
push
inc
lods
mov
lea
mov
push
or
mov
cmp
xchg
push
dec
clc
jo
cmp
scas
shll
jge
xchg
ljmp
push
or
es
cmpsb
imul
lock
jns
stos
cltd
popf
mov
out
test
or
and
mov
icebp
mov
addr16
xor
push
dec
xchg
in
hlt
or
sub
sti
jnp
adc
call
pop
mov
sbb
xchg
jle
and
rorl
add
lea
adcb
shlb
fistps
mov
push
pop
clc
ss
jbe
jle
std
inc
mov
fwait
call
lods
fs
dec
rorb
out
popf
adc
or
loope
lret
inc
and
cmc
test
shll
mov
or
xchg
dec
addr16
daa
loope
mov
enter
mov
jnp
add
jge
sbbb
mov
mov
mov
arpl
scas
push
or
xchg
dec
mov
mov
xchg
mov
je
jmp
pop
pop
add
xor
and
mov
jnp
add
push
ljmp
out
int
jge,pn
das
jns
mov
push
nop
cmpsl
das
sti
pop
adc
cmp
or
nop
adc
xchg
dec
sbb
add
aas
aad
jns
jne
cli
test
xor
push
lahf
lods
das
sbb
pop
scas
leave
and
in
movsb
pushf
out
mov
test
pop
add
das
jnp
in
loopne
loop
dec
jp
loop
sub
jnp
add
xor
inc
mov
push
lret
bound
insl
packuswb
or
push
mov
es
data16
mov
out
stos
ja
cltd
push
stc
hlt
out
pop
out
arpl
adc
inc
mov
int
push
into
dec
pop
stos
pop
hlt
add
mov
nop
push
dec
adc
add
out
dec
jb
mov
lock
and
mov
cwtl
and
nop
out
fucomi
pop
and
push
push
push
ds
int
jl
fsubl
leave
lret
sar
aam
nop
fistps
pop
ret
jno
jne
sbbb
add
movsb
mov
in
repnz
mov
outsl
dec
cmp
sti
mov
pop
outsl
mov
xor
int3
sbb
mov
dec
popa
pop
mov
pop
push
repz
jnp
idivb
out
cmp
imul
cltd
nop
mov
and
or
hlt
cmp
jp
out
js
xor
xchg
mov
mov
fcmovnu
repnz
negb
add
pop
movsb
xlat
lods
fwait
mov
pop
scas
mov
loop
mov
into
test
scas
fdiv
mov
and
stc
jno
xor
cmp
js
sbb
aam
lock
pop
dec
adc
dec
mov
int3
in
hlt
xchg
xor
daa
adc
mov
add
inc
cs
dec
push
or
adc
xchg
pop
push
ja
push
xor
and
xor
scas
outsb
ljmp
loopne
pop
fnsave
jmp
addr16
mov
push
inc
loop
push
enter
jmp
scas
fwait
int3
sbb
mov
cld
adc
push
or
int
mov
cmp
jle
jle
nop
outsl
dec
dec
add
movsl
cwtl
das
pop
xchg
mov
das
ja
outsb
add
mov
inc
enter
add
sbbl
jmp
pushf
in
test
inc
pop
xchg
jns
cs
adc
sbb
inc
push
movsl
sub
dec
shr
mov
mov
mov
or
iret
insl
inc
fscale
pop
shrl
xchg
adc
lods
mov
sti
mov
xor
add
dec
mov
pusha
shrb
sub
popf
ja
push
adc
xchg
push
inc
ret
sub
sub
push
push
inc
mov
or
int3
dec
xor
or
xchg
add
insb
jo
test
rorb
ret
aas
push
add
jb
fimull
loopne
out
jmp
cmc
imul
stos
jl
in
cmp
rcrl
add
mov
cmp
outsb
mov
jne
clc
push
aaa
jns
js
aad
imul
and
frstor
ficompl
out
jg
inc
push
sub
mov
out
bound
jb
int3
scas
seta
sarb
mov
pop
lock
adc
xchg
cld
out
xchg
cmpl
and
push
jae
pop
push
nop
cmp
arpl
rorb
clc
add
fs
es
pop
xchg
lahf
mov
enter
push
push
outsb
sbb
pop
dec
les
jae
sub
cwtl
pop
pop
ret
inc
out
popf
pop
std
sbb
out
out
sahf
dec
aaa
iret
push
stos
aad
sti
cltd
mov
aas
push
test
jmp
ljmp
fisubl
fwait
mov
xor
not
xchg
sbb
out
decb
les
ret
push
aad
cmp
cld
dec
mov
cmpsb
adc
clc
cmc
fs
sti
jecxz
mov
mov
jnp
in
arpl
mov
xchg
dec
dec
xchg
ficoml
push
push
mov
js
mov
inc
idiv
jmp
fldenv
jge
push
fists
fcomps
daa
std
aaa
arpl
int3
mov
add
cwtl
stos
addr16
mov
mov
test
push
lret
mov
dec
mov
jmp
scas
call
xchg
inc
pusha
out
push
in
dec
jb
pop
pusha
xchg
xor
xor
js
cmp
sub
hlt
leave
xchg
xchg
xchg
inc
daa
xor
pop
adc
adc
cmpsl
or
adcb
mov
sarl
mov
pop
lcall
bound
leave
imul
push
arpl
jp
mov
rcr
push
mov
mov
mov
xor
xchg
add
adc
mov
ficoms
mov
test
add
imul
adc
xorb
rcll
sub
mov
xor
adc
and
fsts
int
mov
sti
jb
lcall
call
or
cmp
enter
cwtl
cmpsl
cmpsb
es
dec
dec
or
lcall
fwait
push
jl
out
aam
mov
mov
sub
ljmp
xor
pop
mov
ret
dec
jmp
scas
mov
call
mov
sub
jle
aad
jmp
xchg
push
cmp
push
in
mov
mull
cmpsl
aad
in
mov
shll
mov
adc
andl
imul
int3
cmpsb
add
pop
dec
stos
cli
push
pop
sti
cmpsl
jo
inc
pop
sbb
imul
imul
adc
dec
inc
in
push
cmp
jecxz
sub
lock
cmc
mov
pusha
loopne
xor
mov
fwait
mov
mov
out
pop
jno
mov
aad
push
dec
push
shrl
fwait
sbb
add
ret
mov
in
push
rcrb
xchg
mov
sbb
cmp
shrb
cmp
inc
pop
sub
mov
fs
sbb
or
mov
or
sub
or
mov
out
in
xlat
pop
call
adc
mov
push
sahf
pop
cli
mov
mov
nop
xlat
out
mov
fs
and
int3
pop
aam
js
out
jae
lods
enter
or
jno
mov
mov
push
out
cmpsb
mov
in
xchg
or
jnp
cmpsb
add
and
int3
and
sti
sub
push
lods
sub
rcll
shrb
ret
mov
ror
int3
jge
and
or
adc
cmp
je
test
sar
int
jo
cmp
and
sub
jp
push
cmpsb
in
inc
out
xchg
pop
in
stos
xor
or
xor
push
mov
ljmp
fisubl
xchg
xchg
cwtl
test
loope
sub
adc
leave
mov
jbe
out
lret
rolb
mov
push
sbb
nop
es
mov
sbb
sbb
dec
mov
fwait
stc
aas
cld
and
or
aas
outsl
xor
cld
jle
fnsave
mov
sub
sub
mov
jae
lods
out
add
xor
movsl
cmpsl
push
out
scas
dec
jne
dec
sti
inc
outsb
dec
push
cmp
mov
or
fs
out
sbb
mov
cmpsl
jmp
mov
push
push
cmp
pop
dec
out
cmc
mov
cmpsb
outsb
push
arpl
test
pop
push
jae
out
jge
inc
cmpsb
push
cmp
or
cmp
adc
movsb
cmpsb
sbb
insl
xlat
mov
nop
push
stos
insb
pop
ja
in
fwait
iret
loopne,pn
push
mov
adc
and
push
addr16
jb
sub
cmpsl
mov
ds
and
bnd
cmp
jmp
lods
shrl
push
sbb
cmp
popf
xchg
xlat
cmp
push
mov
jg
fstl
xchg
in
andl
pop
xor
rcr
push
sbb
xor
mov
xchg
cltd
movsb
mov
dec
jp
pusha
test
mov
add
leave
dec
lds
lock
adc
push
pop
jne
mov
mov
cmp
pop
sub
dec
cmp
mov
movsb
pop
scas
jne
and
and
cmp
xchg
shlb
jg
fsubr
lock
fsubs
add
and
dec
iret
das
xor
and
push
fldenv
xchg
cmp
inc
dec
cmp
fadds
dec
fwait
pusha
movsl
into
ret
or
shr
sbb
movb
adc
dec
xchg
dec
test
mov
dec
or
xchg
lods
xorl
xor
and
mov
jo
inc
dec
andb
data16
in
cmp
std
fs
lods
scas
sub
lea
sar
xor
lahf
add
dec
sbb
test
push
insl
inc
xor
cmc
outsb
dec
sub
mov
es
fsubl
stos
ljmp
mov
jbe
mov
addr16
les
fisttpl
adc
lock
xor
push
push
in
outsb
imul
mov
insl
jmp
jecxz
insb
adc
ds
dec
or
aaa
jecxz
repz
push
es
ljmp
xchg
adc
test
test
lock
push
xor
nop
fcoml
daa
decl
pop
sbb
xchg
aad
cmp
loop
mov
repz
into
fsts
push
cld
popa
lds
cmp
jle
inc
sub
std
es
rcr
repz
in
pushf
xlat
jnp
sti
pop
jo
dec
mov
or
stos
inc
iret
sub
push
clc
or
lods
add
inc
fists
std
xchg
clc
push
xchg
mov
rorb
mov
jp
pop
dec
sub
xor
push
mov
xchg
mov
in
add
push
loop
jp
rol
cmp
push
mov
scas
cmp
enter
xchg
out
xchg
movsb
inc
test
xor
dec
cmp
sbb
and
push
dec
xor
lods
jns
pop
xor
repnz
rcll
or
fcmove
xlat
mov
fisubs
shrb
push
cmp
xchg
mov
adcl
sub
pop
add
jbe
xchg
mov
xlat
decb
jo
adc
cmp
sahf
adc
push
sub
push
jo
shrl
lahf
cld
jecxz
ret
push
lcall
pop
hlt
mov
fnstenv
dec
lret
pop
out
ror
insl
xchg
pop
hlt
and
ror
add
add
push
sub
pop
repnz
and
sbb
insl
dec
jnp
pop
int
in
icebp
jl
xchg
and
lret
jecxz
test
inc
sub
sbb
rorl
std
jmp
push
out
popf
rorl
scas
loope
and
pop
jmp
mov
jp
ss
adc
notb
push
cmp
add
mov
jne
xchg
add
dec
movsl
call
icebp
movl
dec
imulb
dec
daa
les
out
add
jne
movsl
add
xchg
mov
ljmp
mov
dec
test
imul
out
add
inc
dec
dec
mov
mov
enter
xchg
xor
bound
xlat
clc
gs
dec
sahf
fldenv
insb
movsl
repnz
les
and
mov
or
outsb
inc
inc
push
insb
sti
lahf
aaa
cli
icebp
push
mov
pop
sub
push
sub
add
lahf
loop
call
fsts
pop
pop
scas
jo
push
adc
mov
sub
aas
aam
movsb
loop
sbb
add
rorl
cmc
push
int
pusha
mov
inc
push
push
pop
mov
sub
dec
mov
push
add
mov
lods
cmp
inc
sbb
dec
ds
fstps
les
mov
push
lret
mov
ret
jp
es
cmpsb
inc
cmpsl
outsl
mov
push
call
or
movsb
or
shrl
mov
lods
mov
sbb
sar
add
cmp
xor
jecxz
adc
xor
dec
daa
mov
pusha
subb
shrb
push
inc
fstps
mov
mov
repz
movsl
sar
popl
loopne
jmp
stos
cltd
adc
mov
gs
mov
test
cmp
push
clc
mov
loop
add
andl
stc
mov
sbb
and
pop
jmp
rol
sahf
dec
das
cltd
in
mov
xor
sarl
cmp
dec
sub
cmp
movsl
and
pop
mov
pop
and
sbb
pop
cmc
mov
outsb
arpl
mov
pusha
ret
xchg
sub
jl
fsubrl
test
push
dec
mov
jle
das
add
popa
testb
pop
maskmovq
test
inc
stos
jae
ss
rcrb
sti
or
adc
addr16
push
rcrl
xor
lret
lret
mov
sbb
sub
xor
rcl
out
adc
sub
lea
inc
pop
mov
mov
out
test
into
mov
insl
add
das
jmp
insl
cmp
xchg
out
out
rclb
or
in
xorb
out
leave
int
call
mov
icebp
mov
push
add
and
push
fisubrs
dec
mov
dec
inc
jle
clc
mov
ss
fstps
cmp
sti
pop
fs
xchg
push
fwait
ret
jmp
pop
pop
fisttpll
into
icebp
xlat
ret
in
test
imul
leave
cmp
es
out
cmc
push
je
stos
ret
repnz
mov
mov
sbb
mov
pop
mov
sbb
out
dec
inc
notb
inc
pop
cld
pop
cld
add
push
jp
and
sub
add
xor
inc
mov
xchg
pop
bound
cli
mov
addl
add
sbbl
sbb
cmp
and
xchg
mov
or
test
mov
outsl
loop
sub
push
and
jns
ret
mov
mov
orl
sub
xor
pcmpeqw
mov
pop
mov
incb
mov
test
test
lods
adc
xchg
adc
fwait
lret
leave
ja
cmpb
cmp
push
cli
push
adc
mov
jo
mov
jl
push
loopne
jge
out
mov
adc
cmp
and
or
cld
stc
xlat
jecxz
mov
fldenv
dec
bound
push
fisttps
stos
pop
mov
aaa
xor
ret
jo
cmp
ficomps
cld
rorb
sti
mov
or
lea
ljmp
stc
je
jo
cli
mov
inc
adc
xchg
lds
xor
mov
std
jl
fstpt
ja
sbb
jb
outsl
dec
mov
or
mov
push
pop
push
divl
pusha
mov
or
aam
iret
test
ljmp
and
out
rcrl
stc
and
push
mov
inc
int3
mov
sbb
idivl
pop
xchg
push
add
push
or
jge
int3
lahf
lret
ret
xchg
fs
sub
int
xchg
repnz
fdivrs
xorl
ret
inc
call
orl
sub
dec
ror
add
rep
xor
cli
orb
lret
xor
xlat
scas
insb
mov
cmp
lret
scas
xor
loope
jnp
pop
cltd
xchg
test
call
loop
mov
fcomps
xchg
pop
cli
rcr
mov
xchg
add
icebp
jb
mov
fdiv
cld
pop
sbbb
cwtl
iret
dec
fists
pop
pusha
push
xchg
fwait
adc
add
xor
pop
lods
xor
add
nop
mov
pop
lock
rcrl
dec
push
adc
pop
add
imul
lock
int
mov
jecxz
insb
nop
movsb
jp
fisttps
mov
das
imul
outsl
in
and
xlat
mov
xor
es
lret
mov
ljmp
pop
pop
pop
or
xor
lahf
dec
dec
shll
mov
jns
mov
lock
cmpsb
xchg
scas
push
je
loope
jg
mov
push
loop
push
out
xor
xchg
adc
gs
jg
and
sbb
xor
in
fcomps
inc
imul
mov
or
scas
nop
cmp
insl
and
jge
arpl
inc
sbb
clc
mov
stos
out
in
fistpll
dec
adc
ljmp
and
jnp
shll
sbb
jb
push
sub
enter
lahf
mov
shll
addb
xor
cmp
lds
cld
ret
or
xchg
dec
xchg
sub
pushl
in
mov
jp
int
sbb
dec
js
or
sbb
pushf
scas
ret
imull
cmp
push
outsb
adc
push
adc
push
in
out
fwait
add
adc
adc
out
push
jbe
aas
or
fmuls
sub
rorl
in
jge
dec
push
cmp
fwait
jbe
sub
sbb
add
push
jb
lcall
dec
push
push
sub
jp
or
sub
in
in
lea
fldl
movsb
insb
jmp
push
jns
icebp
out
cmp
cld
mov
jns
iret
push
cmp
mov
cmpsl
mov
xchg
lods
daa
sbb
mov
sarl
xor
mov
repnz
js
aaa
jne
hlt
adc
sub
adc
jge
sub
cmpsb
sbb
jbe
testb
xor
stos
int
or
push
mov
aad
sub
leave
movsl
mov
call
sub
push
pop
cmp
xchg
mov
fmul
mov
outsb
xchg
sbb
jo
sub
sub
ja
lret
lds
arpl
loop
mov
mov
es
lcall
cmpsl
cmpsl
clc
xor
out
sub
das
roll
out
sbb
xor
xchg
jo
gs
push
xchg
jl
in
pop
in
jge
or
sar
cs
xor
pop
add
sub
fmuls
notl
cmp
jne
push
cld
adc
lret
xor
pop
push
loopne
cli
jg
int3
imul
outsb
add
sub
arpl
sbb
adc
jecxz
sub
test
lock
popa
cmp
int
cmpsl
mov
push
sbb
sub
roll
push
pop
mov
lret
add
adc
mov
push
lods
mov
mov
lods
bound
mov
mov
test
jmp
xchg
sbb
pop
xchg
insl
int
xchg
fmulp
adcb
mov
adc
je
imul
and
stos
in
ja
push
jns
negl
cmp
cmp
fists
fcomip
enter
insl
xor
mov
add
mov
bound
stos
test
mov
cmp
push
mov
scas
adcb
fldt
pop
mov
aam
mov
gs
add
sahf
inc
clc
and
push
mov
jae
out
add
pop
sub
out
movsb
adc
cmpsl
cmp
test
lods
push
mov
outsb
add
cmp
sbb
pop
inc
arpl
test
xchg
out
mov
pop
arpl
hlt
test
add
and
xchg
or
inc
shl
or
fcompl
add
dec
inc
sbb
xchg
push
add
out
addr16
xchg
cwtl
xchg
ret
bound
stos
jle
clc
cli
cmp
idivl
cmp
xor
sub
mov
pop
jnp
mov
xor
inc
dec
xlat
sahf
pop
push
int
incl
mov
cmpsb
mov
mov
aad
or
loope
xor
sub
data16
mov
cmpsb
add
dec
addl
push
mov
mov
rcrb
addb
les
pop
repnz
frstor
sub
mov
in
sub
jecxz
or
lahf
stc
dec
cmp
inc
xor
mov
aam
and
push
xlat
mov
and
cltd
jge
sbb
dec
lea
or
addl
dec
fcoml
sbb
mov
fisubrs
adc
mov
lret
mulb
add
dec
xor
loope
insb
mov
xor
mov
pop
add
stc
push
lret
shll
cmp
adc
push
jle
aad
int3
jle
xchg
adc
fwait
mov
lods
es
leave
mov
jmp
mov
adc
sarb
test
test
mov
ffree
flds
xor
cwtl
push
rcrb
sbb
dec
fstl
push
loopne
mov
sub
push
cmp
popf
sub
es
addr16
cli
cmp
imul
inc
xchg
jmp
sahf
xchg
into
mov
and
xchg
mov
addr16
cs
bound
inc
sbb
stos
ds
arpl
dec
negl
mov
insw
or
dec
sub
ds
cmc
and
dec
insl
jns
mov
adc
scas
sub
leave
cli
mov
add
loope
les
mov
dec
lcall
xchg
movl
aam
push
lods
jo
stc
and
fwait
das
js
ret
mov
shr
jp
mov
mov
outsb
and
xchg
sbb
adc
inc
rcrb
lods
dec
cmp
push
inc
scas
jecxz
lods
jl
jl
scas
jo
bound
fs
clc
test
nop
mov
mov
xor
sbb
int
jg
lea
andb
je
adc
jb
and
push
fistps
push
mov
imul
mov
xor
std
xchg
das
gs
rolb
cmp
push
xchg
data16
jmp
mov
push
loope
ret
dec
jne
aas
ja
dec
int
sbb
and
xchg
test
pop
and
je
jb
mov
filds
pusha
push
out
fdivrs
dec
xchg
mov
cld
jb
lahf
aaa
imul
cld
adc
fs
in
xchg
cmp
dec
mov
incl
cmp
lods
bound
mov
shr
lea
out
dec
dec
adc
movsb
arpl
popf
pop
jmp
mov
add
mov
and
into
stos
pop
arpl
mov
aas
push
mov
xlat
mov
pushl
mov
add
addl
mov
out
pop
xchg
xorl
inc
jne
cs
cld
cmp
in
dec
jb
sub
adc
leave
in
push
push
lods
int
jno
inc
shr
mov
add
or
mov
imul
nop
jbe
and
repnz
cmc
cmpb
jmp
fisubrl
inc
jp
xchg
test
mov
sub
test
pop
cmp
inc
lods
mov
inc
xchg
test
add
inc
mov
push
lcall
or
pop
mov
jb
xchg
push
into
jno
cmpsl
sub
int
leave
test
std
out
pop
xor
cmp
or
inc
mov
in
frstor
clc
pop
dec
adc
add
fstpt
jno
mov
inc
ljmp
rcll
ds
je
into
mov
dec
fiadds
popl
mov
fnsave
or
inc
test
cwtl
dec
jbe
into
movsl
jbe
test
mov
and
pop
xchg
xchg
push
movsl
sub
xchg
out
nop
adc
repz
insl
adc
cwtl
inc
popf
dec
cmp
movsb
push
adc
inc
xor
mov
inc
inc
xchg
nop
pop
jns
jns
imull
fs
add
dec
fdiv
popa
jg
stos
fwait
and
mov
xchg
inc
pusha
shlb
cmp
insb
jle
pop
inc
repz
mov
jl
movsl
test
and
or
jb
dec
call
mov
adc
fwait
pop
jmp
aaa
mov
les
in
out
mov
and
add
and
inc
cwtl
js
mov
mov
shl
std
sub
nop
lock
or
pop
leave
pop
rclb
jbe
cmp
mov
push
xchg
xor
movsb
dec
pop
lret
scas
mov
jmp
push
push
mov
scas
xchg
pop
stos
pop
push
mov
and
test
inc
es
jae
ret
dec
mov
imul
test
divb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
aas
cmp
pop
or
addl
inc
push
sub
mov
sar
rcrb
push
pop
adc
mov
sbb
in
or
push
inc
insb
xor
adc
stos
scas
ss
xchg
sub
dec
push
std
out
lahf
std
lcall
and
std
nop
sub
fldl
les
sub
lods
pop
adc
sarl
pop
xor
xchg
cmp
xchg
rol
jmp
int3
jmp
mov
aad
mov
push
mov
or
test
xor
dec
gs
push
pop
bnd
dec
mov
xchg
pop
adc
sbb
inc
mov
jnp
addr16
dec
cmpsb
orl
mov
call
push
insb
sbb
adc
pop
mov
imull
popf
clc
lret
in
sti
and
js
push
cmp
jg
in
ds
insl
arpl
xor
xchg
pop
in
int3
mov
sub
pop
add
imul
cmp
icebp
imul
cwtd
xchg
out
and
dec
iret
test
cld
pop
xchg
pop
imul
push
sbb
scas
sti
dec
imul
sahf
scas
ja
outsl
aad
pop
inc
std
aam
mov
mov
clc
pop
in
js
mov
ds
ss
call
push
cmp
mov
inc
sbb
or
push
xor
lods
clc
mov
les
pop
andl
scas
loope
xchg
pop
in
push
test
not
dec
adc
lods
decb
mov
dec
inc
and
mov
scas
imul
lds
mov
fdivr
es
dec
jo
insl
pop
rcr
mov
adc
movsb
cwtl
loope
sbb
jbe
lret
enter
fisttps
lret
hlt
scas
sbb
mov
in
lea
ss
jl
jmp
or
jle
dec
fbld
push
jp
mov
ror
jmp
mov
repnz
movsb
sub
pusha
add
rep
mov
jp
mov
mov
test
iret
popf
inc
out
lret
popa
push
repz
push
subb
imul
xor
nop
pop
outsl
negl
pusha
push
cmpsb
ss
mov
iret
pop
test
sti
clc
push
shl
gs
clc
push
inc
add
or
insl
dec
inc
dec
das
xor
jns
inc
int
push
inc
cmp
pop
xor
jae
ds
stos
pusha
loop
cmpl
clc
out
aam
add
mov
adc
fucomip
push
out
xchg
pop
out
mov
enter
add
clc
jge
and
out
sbb
sar
push
ds
inc
or
cli
call
call
outsb
sbb
fisubrs
pop
push
add
dec
add
mov
add
adc
test
cwtl
pushf
mov
dec
enter
call
in
xchg
mov
cs
les
lods
mov
add
js
cli
mov
scas
adc
stos
sub
fdivrl
andl
xchg
jecxz
push
jp
dec
or
stos
bound
lods
push
int
xchg
stos
test
mov
mov
pop
xor
add
jecxz
test
pop
dec
push
cmpsl
iret
adc
pop
call
pop
inc
adcb
jl
mov
jg
hlt
mov
pop
lahf
in
mov
in
add
ret
push
dec
dec
test
lret
shlb
push
and
pop
sbb
xchg
jno
adc
mov
xor
inc
push
add
and
push
data16
iret
inc
xchg
int
jnp
stc
test
xor
loopne
pop
sub
add
mov
mov
cmp
jge
stc
lret
rcll
or
xchg
inc
inc
cmp
xchg
repz
imul
xor
add
and
push
loopne
sub
pop
orl
mov
push
xchg
push
loop
nop
testl
in
call
mov
je
in
xchg
neg
or
in
push
mov
cmp
mov
decb
add
mov
rcrb
enter
mov
cmp
push
ljmp
packssdw
inc
jecxz
ret
xchg
adc
mov
popf
lds
movsb
bound
xchg
fwait
das
xor
adc
lds
sbb
jnp
mov
aam
loopne
fisubrl
nop
daa
push
fst
push
push
and
sahf
data16
je
jle
cld
outsl
push
mov
xor
in
lahf
ja
adc
or
lds
movsb
and
movsb
xchg
mov
push
ret
leave
jo
bound
hlt
das
mov
add
xor
je
pusha
xor
or
in
dec
popa
dec
adc
mov
inc
mov
scas
and
mov
ret
pop
xchg
imul
inc
mov
scas
cmpsb
lcall
cmp
es
enter
insb
sbb
dec
jge
int3
jg
retw
ss
push
pop
pusha
mov
sbb
or
sbb
mov
arpl
mov
cmp
push
jno
dec
and
xlat
iret
push
and
inc
icebp
es
sbb
jl
lret
stc
mov
inc
sub
push
sub
or
jg
into
pop
jb
leave
add
inc
jb
leave
pop
sub
sbb
sbb
lock
jle
in
pop
movsl
int3
mov
or
repz
sbb
cmp
mov
fldl
jne
mov
insl
repz
jp
fnstsw
mov
dec
push
jg
jle
adc
lret
daa
adc
inc
inc
into
pop
test
adc
leave
call
pop
pop
and
sbbb
aas
adc
push
add
loopne
pop
pop
jg
or
cmp
sahf
nop
pop
faddl
mov
ficoml
jp
loope
mulb
push
jmp
and
fiaddl
cld
xchg
cltd
inc
fxtract
pop
dec
iret
fsub
popf
pusha
mov
sbb
cld
rcll
adc
sbb
and
out
sub
lret
xor
mov
fistl
adc
nop
sub
inc
jle
rclb
cmp
mov
jg
push
dec
setg
fs
pminsw
xchg
jb
adc
out
inc
ret
adc
jge
enter
mov
lret
mov
notl
xchg
mov
or
into
imul
mov
ret
jnp
out
cwtl
push
mov
lret
and
adc
and
push
mov
and
mulb
scas
fildl
mov
test
scas
or
or
add
mov
add
ud0
jo
inc
mov
inc
cmp
outsb
cmp
cmp
int3
or
imull
mov
and
push
sbb
aad
repz
dec
jne
andb
movsb
ss
sub
movsl
leave
arpl
pop
add
and
push
mov
mov
out
inc
mov
inc
pop
xchg
inc
mov
dec
push
or
mov
dec
aam
aas
mov
xor
push
out
loopne
inc
lds
jns
jl
sub
push
enter
cmpsb
mov
dec
repnz
sbb
cmovl
out
ficoms
mov
loope
ret
cmp
push
sbbb
pop
js
add
mov
adc
sub
sbb
lahf
push
daa
movsb
adc
mov
pop
cmp
and
lret
arpl
lret
xor
ljmp
daa
xor
mov
and
es
jl
or
pop
push
es
push
popa
and
shr
call
adc
loopne
sbb
fadds
adc
and
cmp
pop
cwtl
leave
cs
jbe
sub
sbb
call
and
neg
mov
scas
sub
xorl
and
cmp
and
rcl
sahf
or
add
pusha
jne
jbe
int3
adc
into
dec
jl
test
test
ror
mov
jnp
cmp
push
xchg
xchg
adc
sti
mov
xchg
out
push
sarb
lock
rorl
inc
adc
ss
push
inc
test
sbb
add
inc
insb
and
xchg
push
add
out
loopne
ret
gs
or
mov
in
repz
loop
cli
cmpsb
mov
fldcw
mov
test
xor
add
or
stc
jns
outsb
push
fldcw
sbb
dec
sub
in
cmp
mov
sub
inc
cmpb
cs
push
decl
sbb
adcl
jge
add
dec
pop
cmpsl
aas
mov
sbb
ds
push
enter
dec
dec
cmp
orl
ret
sbb
cmp
xchg
push
ret
push
adc
imul
leave
rcrl
mov
xchg
jne
sub
lret
mov
nop
testb
mov
xchg
mov
rorl
xor
push
imul
fs
insb
add
inc
jno
sti
xchg
adc
repz
fcmovnb
inc
xchg
pop
sbb
adc
mov
mov
jne
es
xor
loop
xlat
mov
pop
xchg
jecxz
cld
add
popa
dec
inc
or
lcall
xchg
stos
flds
and
sub
jnp
push
fwait
lods
jo
std
dec
sbb
sahf
aaa
pop
mov
movsl
imul
cmp
enter
and
xor
loope
stos
shrl
popa
test
ret
cmp
xchg
mov
imul
sub
xchg
scas
pushf
cmp
mov
adc
movsb
nop
xor
xorb
pop
in
or
pushf
and
int3
hlt
add
sub
xor
or
dec
aam
push
les
fidivrs
jns
dec
mov
mov
inc
sbb
or
xor
ljmp
cmp
cmp
cltd
stc
insb
out
sub
jb
fwait
cmp
xor
push
xor
pop
scas
sbb
pop
mov
or
data16
ret
jecxz
dec
mov
xchg
iret
test
dec
adc
adc
lock
jecxz
test
xor
lods
jae
test
jno
cmp
hlt
lods
js
imul
adc
fistps
fbld
add
dec
adc
push
ljmp
sub
leave
mov
sarl
loop
or
mov
push
inc
fs
jecxz
das
dec
add
pop
mov
orl
ja
das
cld
imul
push
dec
aas
inc
popf
roll
cmpsb
and
cld
dec
ret
std
xchg
mov
sbb
jns
push
cmpsb
push
xchg
cli
sbb
pop
cmpsb
jno
movsl
cmp
pop
inc
imul
xchg
test
push
adc
pop
xchg
xor
pop
cld
arpl
test
push
pop
mov
les
mov
loopne
stc
add
and
inc
aad
clc
and
add
test
push
stc
insl
ds
data16
push
jmp
push
and
mov
sub
adc
jl
arpl
pop
jge
and
mov
stos
dec
add
mov
dec
cli
push
ljmp
push
lret
jno
pop
mov
mov
das
cmpsb
cmp
push
cmp
not
testb
les
repnz
js
adc
shrl
mov
push
les
call
pop
mov
into
xor
push
xchg
leave
dec
lods
outsl
push
pop
mov
inc
mov
xchg
push
push
stos
mov
iret
test
xchg
jle
jmp
dec
sub
pop
adc
pop
push
sub
mov
push
ret
or
popf
in
adc
mov
nop
pusha
xchg
pusha
stos
jae
adc
scas
cmp
xor
dec
sbb
call
push
ds
cmp
sub
xchg
in
inc
decl
sbb
es
movsl
inc
mov
shlb
test
dec
lock
push
arpl
cmpsl
dec
dec
jne
pop
xor
cmpsl
push
or
test
hlt
loopne
mov
push
fcomip
cmc
sbb
pop
mov
call
pop
xchg
sbb
in
jle
pusha
sub
imul
pop
fiaddl
fs
int3
out
jecxz
out
mov
lea
imul
clc
out
loop
dec
fistpl
orb
loop
add
xchg
push
sahf
mov
add
inc
push
xor
mov
addr16
dec
sti
cmc
rcrb
and
xchg
mov
xor
push
inc
xor
movsb
jae
mov
outsl
mov
xchg
or
xchg
in
pop
dec
cwtl
test
pop
dec
mov
cs
les
mov
repz
int3
out
push
pop
je
fcoms
popa
leave
pop
push
and
add
or
add
es
pusha
mov
pop
mov
addr16
rclb
shll
or
pop
mov
xchg
call
test
inc
mov
mov
into
bound
mov
jns
lahf
xchg
fadds
dec
imul
into
js
sbb
divl
add
mov
in
sti
push
mov
jg
cmp
hlt
movsl
push
dec
add
push
das
sub
cmpb
test
int3
and
outsl
or
fisttps
dec
inc
jae
sar
mov
jnp
jge
nop
movsb
inc
movsb
mov
sbb
xchg
repnz
lea
xchg
repz
gs
xorb
mov
insl
repz
rol
pusha
pop
cwtl
cmpsl
test
mov
jnp
daa
out
pop
leave
faddl
mov
mov
jmp
cs
movsl
or
mov
sub
int
sbb
pop
je
push
arpl
mov
rolb
or
inc
push
leave
cwtl
xchg
test
decb
mov
dec
xchg
hlt
dec
mov
mov
mov
jge
cmpsb
xor
fbstp
and
cmc
xor
cmp
mov
out
lods
and
pop
scas
mov
and
mov
pop
cs
jno
shlb
mov
gs
push
dec
cwtl
aas
xor
test
cmp
mov
mov
loopne
ficomps
pop
push
xchg
inc
test
incl
push
sub
adc
notb
fstl
xorb
scas
dec
roll
aad
test
push
cmpsl
js
xor
xlat
fmull
inc
mov
sub
jmp
arpl
or
xor
fwait
push
inc
inc
aas
pop
xlat
out
cld
mov
xchg
adcb
adc
js
or
push
testl
push
mov
mov
xlat
bound
fistpll
cmp
pop
mov
fld
mov
popf
fwait
lock
scas
push
pop
mov
xchg
and
shl
inc
fildll
sti
adc
rcrb
jp
aas
mov
iret
dec
aad
jne
sahf
mov
pop
cmp
int3
sub
test
popa
out
mov
xor
je
cmpsb
inc
sarl
jecxz
and
inc
push
leave
outsl
pop
enter
cmp
mov
mov
mov
mov
mov
and
scas
in
jl
mov
dec
cwtl
sbb
ja
neg
ja
divl
cmc
jb
jle
jmp
iret
loop
std
mov
pop
xchg
bound
call
jl
mov
mov
xchg
jle
add
inc
addr16
cli
test
mov
xchg
or
push
xor
sub
gs
std
pop
jno
xor
in
sbb
add
repnz
dec
out
push
push
sbb
pop
push
mov
pusha
stc
mov
loop
lods
inc
iret
mov
cmp
outsl
push
xchg
cmpsb
sub
fistpl
insl
loope
mov
add
adc
mov
movl
pop
lahf
std
sbb
test
push
loopne
pop
adc
out
push
repnz
iret
jmp
pop
xchg
sbb
cmp
hlt
jmp
iret
adc
ljmp
dec
jns
jno
xchg
sub
pushf
xor
xchg
or
gs
stc
push
addr16
jns
adc
mov
clc
clc
rcll
fistpl
jns
xchg
pop
and
fdivs
aad
xchg
xchg
add
cmp
pop
loope
lock
arpl
push
xor
hlt
lahf
push
sub
in
lcall
jle
add
add
inc
xchg
xchg
cmp
nop
je
dec
xchg
fs
out
sbb
dec
iret
add
xor
sub
sbb
mov
add
test
shrb
scas
pop
mov
mov
and
push
test
cmp
mov
cmp
dec
ds
mov
pop
lret
bndldx
gs
sub
lret
lcall
sar
mov
push
mov
fimull
fcmovu
xchg
nop
shlb
jp
and
jp
push
xchg
pop
mov
inc
mov
iret
sahf
iret
or
xchg
cs
add
addb
bound
ret
aaa
pusha
scas
pop
pop
cmpsb
sub
stc
cmpsl
popa
mov
hlt
adc
mov
jbe
adc
fs
lea
mov
or
fsub
jmp
or
mov
nop
jns
xchg
mov
call
add
ss
adc
popf
sti
sbb
kaddw
inc
mov
call
push
sbb
enter
mov
sahf
adc
mov
iret
cmpsb
mov
outsl
jb
lcall
inc
pop
mov
sbb
mov
inc
sbb
mov
sub
insl
subb
cmp
or
adc
fisubrl
add
or
pop
hlt
shll
icebp
js
mov
fidivs
add
xchg
in
xor
aaa
adc
rcrb
dec
cltd
jp
mov
xor
push
inc
push
sbb
ja
xchg
repnz
stc
inc
out
add
sub
aaa
dec
imul
clc
inc
pop
fs
cmp
jo
push
scas
add
mov
jnp
mov
mov
xor
jbe
bound
mov
mov
mov
fcoms
cmc
test
aas
popa
filds
fcoms
sub
gs
cli
mov
push
rcrb
fcoms
jno
pop
mov
lock
xchg
pop
mov
popa
adc
dec
movsl
cwtl
jg
xchg
test
dec
mov
cld
mov
je
pop
inc
sbbb
or
mov
es
mov
fcmovne
lret
and
push
pushf
nop
or
fld
mov
and
mov
loope
cld
popa
push
xor
cld
mov
clc
cmc
shrb
addr16
add
rorl
orl
jns
notl
pop
mov
daa
nop
out
sub
push
mov
xchg
and
dec
je
xor
pop
and
xchg
lds
mov
clc
lret
icebp
pop
out
imul
mov
dec
push
sbb
cmp
dec
outsl
cld
dec
imul
xor
fld
jmp
fstl
adc
xchg
mov
out
cltd
mov
inc
icebp
ljmp
aam
or
add
out
pushl
jnp
lea
push
mov
mov
loope
adc
stos
aaa
cld
pop
cmpsb
loopne
fiaddl
adc
and
lret
jmp
xor
idivb
dec
push
pop
fucom
mov
push
insb
jne
push
mov
out
inc
pop
repz
mov
or
jmp
sbbl
jge
repz
jae
in
fbld
fcompl
imulb
xor
push
inc
xchg
repz
mov
pop
out
mov
xor
outsb
ret
das
mov
iret
pop
or
mov
add
xchg
mov
addr16
in
sahf
cmc
out
mov
and
out
fnsave
mov
shlb
and
adc
cmp
mov
pop
or
popf
inc
sub
xor
aas
mov
or
cmp
sti
mov
xor
movsb
push
cmpb
jmp
jae
pop
loop
sbb
mov
or
testb
lods
outsb
stos
jne
jecxz,pt
jp
imul
xor
jne
jae
mov
sub
lahf
dec
sub
push
ljmp
dec
xchg
or
lods
clc
push
cmpl
xorl
rcl
xchg
mov
fsubs
cmpsb
jb
loopne
ret
aam
int
push
je
outsb
mov
and
inc
shr
lahf
xor
push
jae
pop
lret
pop
out
mov
push
pushf
jnp
mov
lret
inc
sbb
addl
pushf
insb
dec
andl
in
xor
into
jno
cmp
pop
enter
scas
arpl
pop
in
fidivrs
aad
mov
inc
insl
ret
xor
mov
adc
inc
xor
data16
xor
les
sub
cli
test
subb
lahf
push
pop
push
xlat
jnp
mov
cwtl
jo
out
bound
gs
cmp
xchg
xchg
cmp
loope
loope
jg
lock
adc
inc
mov
cmp
aam
cwtl
pop
daa
fwait
cmc
fsubs
mov
or
lahf
or
or
cmp
rcrl
xor
les
xor
xchg
popa
scas
idivl
int3
pop
add
cmpsl
push
cmp
mov
add
ss
pop
and
adc
insl
lds
cmp
in
insl
cmp
rcrb
pop
push
cmc
jmp
in
jns
pop
inc
inc
pusha
jae
scas
sub
and
push
pop
lock
push
adc
imul
or
in
xor
mov
aaa
cmp
or
mul
and
push
lcall
cmpl
add
mov
or
pop
jnp
out
es
inc
mov
xchg
xchg
push
imul
test
mov
mov
dec
dec
pop
inc
ja
repnz
xlat
adc
popf
push
cltd
nop
lock
xor
sub
rol
int
push
push
test
pushf
mov
add
cmp
int
enter
and
xor
ss
mov
push
dec
jmp
in
push
lds
mov
lods
xor
jnp
mov
jo
cmp
mov
push
movb
rcr
adc
push
in
pop
arpl
ljmp
fnstcw
fidivrs
movsl
imulb
cmp
aam
or
mov
mov
lcall
mov
pop
cli
push
jbe
repnz
dec
sub
pop
mov
pop
pushf
or
gs
push
cmovbe
xchg
loopne
rorl
call
cmp
pop
xchg
mov
inc
dec
or
mov
pushf
xchg
cmpsl
and
cmc
pop
js
dec
fwait
dec
sbbb
pop
lcall
push
jp
int
adc
xor
push
xor
push
mov
cli
jmp
inc
fdivrl
mov
pop
testl
lret
imul
mov
jg
pop
mov
sbb
push
inc
and
pop
cmp
pushf
pop
subb
daa
mov
into
jg
pop
les
es
inc
repnz
mov
cmpsb
pop
fnstcw
add
stos
mov
mov
sub
leave
sub
aas
sub
sbb
cmp
or
cmp
sub
arpl
rorb
rcll
inc
loopne
inc
into
in
test
push
and
jnp
lods
jno
xchg
dec
out
jecxz
stos
inc
daa
adcl
or
in
mov
or
xchg
push
fstps
adc
push
mov
jl
bound
mov
xchg
xchg
jbe
jae
stos
push
cltd
jp
push
push
jns
mov
es
xor
in
js
sub
or
mov
sbb
dec
xchg
test
cmp
push
pop
jbe
addr16
mov
dec
xor
cli
cmp
lods
and
cmp
into
mov
pop
pop
mov
push
cmp
cmp
insl
cli
sahf
jmp
jle
outsb
ret
ja
lods
popf
out
push
imul
sub
loopne
sti
ljmp
insl
fwait
adc
ds
test
sbb
push
int
sub
mov
lahf
iret
sbb
push
jns
adc
ret
dec
aam
cmp
mov
pop
ja
scas
clc
les
loope
and
clc
pop
push
mov
adc
cwtl
mov
sbb
mov
scas
cli
imul
push
dec
or
xchg
cmp
push
addr16
pop
cmp
ret
and
test
insb
xor
lahf
cmp
pop
or
pushf
mov
or
add
pop
jns
mov
stos
ljmp
js
mov
icebp
ret
fmull
lret
icebp
test
popf
cmpb
pop
out
daa
in
xchg
mov
mov
push
in
inc
adc
testl
push
push
jg
pop
add
cmpsb
mov
sbb
shl
and
data16
jno
popf
mov
lds
test
call
popa
mov
xlat
push
jge
sbb
les
gs
fldt
icebp
pop
adc
fwait
outsl
or
mov
dec
inc
shlb
rol
shll
sbb
push
inc
xor
sbb
sub
lret
mov
add
sub
add
mov
push
push
sbb
xor
mov
out
adc
cmc
leave
sub
mov
ds
dec
sub
lret
lret
jmp
cmp
sbb
dec
adc
mov
xchg
pop
mov
cmc
jbe
out
pop
daa
sahf
ljmp
jae
or
add
test
sarl
or
inc
mov
push
inc
adc
push
xchg
mov
jmp
adc
mov
sub
and
pushf
pop
fisubs
imul
dec
jo
push
dec
jecxz
jecxz
sti
push
xor
lods
mov
imul
scas
bound
sub
xor
pop
lcall
aam
insb
movsb
movsb
mov
mov
dec
into
int3
adc
inc
mov
xchg
inc
push
in
and
jns
stos
and
scas
loope
xchg
test
js,pn
in
or
mov
ficomps
add
loop
inc
jbe
sbb
pop
cwtl
in
jo
pop
dec
push
cmp
jb
pop
push
pop
adc
popf
clc
xchg
xor
dec
mov
cmp
lea
jno
xor
aam
out
mov
cmp
mov
test
xchg
mov
mov
pop
mov
adc
sub
sti
adc
mov
cwtl
push
or
xchg
stos
cltd
xchg
int
add
in
or
aas
outsb
in
cmovne
aam
loop
sti
xor
loop
xor
lahf
xor
push
jae
bound
sub
mov
sbb
sbb
andl
fs
icebp
ljmp
xchg
subb
jmp
adc
pop
fcomip
imul
rcrb
jp
push
cmp
xchg
xchg
cltd
xor
push
pop
fcmovnb
mov
in
inc
inc
ljmp
mov
sub
push
call
mov
jle
mov
lahf
cmp
mov
push
addl
dec
jle
insl
push
adc
pop
ss
fmul
cmp
cmpsl
repnz
dec
sbb
stc
cmp
movsb
inc
dec
and
lock
mov
cmp
jl
leave
pop
jne
jmp
lods
push
fidivs
je
sub
xor
mov
icebp
packuswb
mov
sbb
push
xor
xchg
push
sbb
sbb
push
mov
inc
xchg
or
lahf
or
or
and
adc
lock
xchg
js
dec
sub
repnz
inc
dec
pop
pop
xor
bound
pop
jb
mov
jno
sbb
mov
or
xchg
push
xchg
out
cltd
jl
and
js
xchg
adc
in
push
outsl
adc
pop
mov
jne
dec
pop
xor
xor
xchg
xchg
xor
mov
mov
pop
mov
hlt
push
out
repz
std
out
pop
mov
jo
sub
cmp
loope
mov
into
aaa
lock
subb
mov
in
sbb
in
fst
mov
push
jo
pop
dec
fisubs
mov
sbb
mov
or
pop
imul
add
cmp
mov
push
xlat
rolb
stc
lods
mov
add
mov
popa
sbb
shl
dec
jl
out
cmp
xor
or
mov
add
mov
mov
mov
das
outsl
arpl
dec
inc
arpl
mov
and
icebp
loope
mov
mov
or
test
and
cmp
xchg
jecxz
lret
adc
mov
popf
dec
jp
fs
xor
and
xorl
or
pop
movb
call
push
mov
mov
inc
and
mov
std
mov
ja
mov
xchg
repz
daa
or
lock
outsl
pop
and
pop
insl
mov
sub
inc
fisubl
neg
cmp
jno
pop
pop
and
xchg
stos
jnp
nop
pop
lds
in
pop
js
ljmp
out
adcb
inc
lods
insl
push
jne
push
jg
sub
and
and
pusha
pop
xchg
and
mov
insb
mov
daa
xor
lahf
ljmp
sub
mov
int
sub
call
das
adcl
fwait
sahf
sbb
and
cmp
arpl
stos
je
mov
loope
pushf
fldenv
nop
push
popf
cmpsl
mov
subb
loop
push
jo
aad
jge
cmp
push
adc
fucomi
fisttpl
jl
mov
sub
aad
cmp
loopne
mov
mov
inc
lods
stc
jbe
fwait
jns
cs
popf
adc
mov
mov
dec
out
dec
or
addr16
cs
mov
sbb
sub
xor
out
or
or
mov
mov
pop
push
pop
leave
push
mov
insb
fs
mov
and
test
mov
fisttpll
jb
mov
xor
jb
adc
jge
imul
rcr
shll
push
mov
dec
lods
iret
xor
xlat
in
dec
jle
iret
pusha
push
xchg
inc
dec
mov
cmpsl
scas
mov
aad
sbb
jle
xor
sar
leave
push
xchg
sub
enter
dec
dec
roll
pop
xor
inc
dec
pop
mov
fwait
out
test
in
movsl
push
lock
mov
pop
and
mov
inc
jmp
repz
push
out
xlat
jo
jae
sub
stos
lock
cmp
push
nop
loope
shrb
cwtl
notb
mov
sub
inc
cmc
xchg
sbb
push
into
je
cmp
aaa
xchg
and
lea
mov
inc
jae
js
push
sarb
lret
xchg
sbb
lock
add
out
pop
scas
cmpb
jp
xchg
int3
inc
iret
fwait
je
addr16
lods
dec
mov
in
mov
push
ficoml
data16
std
lahf
xor
and
adc
and
jo
lds
lret
das
jg
push
xor
sub
fdivl
clc
lock
scas
int3
mov
push
mov
scas
cld
jae
aad
xchg
jne
jns
sbb
or
mov
testb
adc
inc
mov
xchg
les
repnz
cltd
fsubp
insl
loopne
loope
cmp
mov
sbb
bound
adc
pop
sub
aam
rclb
js
shll
push
mov
dec
push
movl
mov
jmp
sbb
les
push
js
xor
addl
push
jg
out
add
xchg
icebp
xchg
test
dec
test
add
imul
clc
jmp
sub
mov
jecxz
out
xchg
fistpll
ror
adc
lods
shrb
fiadds
insl
shlb
sbb
mov
xchg
leave
loop
insb
mov
mov
adc
jo
cmp
repnz
fwait
cmp
or
xchg
mov
out
sub
mov
insl
in
filds
push
cmp
jno
jp
pop
imulb
cmp
std
mov
sbb
leave
test
jmp
out
mov
clc
lahf
cwtl
mov
imull
or
pop
hlt
sarb
gs
out
xor
ljmp
push
adc
dec
shll
or
push
push
repz
nop
cmp
adc
pushf
aad
sbb
aam
inc
adc
or
pop
adc
mov
and
je
aaa
ficoml
arpl
lods
subb
cwtl
fwait
add
jmp
push
mov
jp
loop
stos
pop
rcrl
inc
fwait
std
in
clc
inc
adc
into
into
sub
add
pop
out
fisttpll
inc
jp
jmp
icebp
jmp
bnd
xor
dec
and
jl
in
stos
inc
cli
dec
push
push
ds
mov
les
mov
test
jne
jl
pop
and
ljmp
xchg
ljmp
fs
lcall
xlat
loop
pop
out
insb
xor
add
test
xchg
scas
std
jmp
pop
stos
cld
mov
xor
adc
xchg
loopne
or
cmp
xchg
sbb
js
frndint
push
pop
cld
cmpsb
shrl
mov
xchg
push
int
push
std
or
in
inc
mov
outsl
push
add
aam
lret
fisttpll
push
xchg
pop
jns
or
aam
sub
aam
mov
enter
fstpt
jp
clc
push
xchg
enter
add
push
pop
je
mov
inc
sbb
fisttpll
test
xchg
aas
jmp
jmp
outsl
cmp
sub
sbb
xchg
bound
loope
mov
xor
push
mov
cli
dec
jp
or
xchg
dec
test
sbb
adc
jae
jnp
mov
clc
rorl
mov
sbb
fs
pop
fildll
or
dec
insb
popf
fldcw
ss
cmp
stos
test
loopne
inc
xor
out
cmp
icebp
sub
cmc
add
xor
push
aad
push
add
or
cmpsb
adcl
lds
cwtl
jb
add
push
sub
stc
push
loopne
sub
in
dec
lcall
jb
std
xchg
les
jno
inc
pop
cmp
pop
jge
loope
lods
dec
adcb
inc
ret
adc
das
and
inc
int3
push
or
in
cmpb
inc
aaa
dec
fs
dec
iret
into
pop
jmp
add
jnp
push
arpl
mov
fisubs
cs
push
loopne
sbb
or
aad
jne
add
push
addb
sub
adc
xchg
dec
sub
dec
pop
pop
rcrb
cmp
out
jecxz
in
outsb
fistpll
mov
pop
and
sahf
cltd
and
xchg
inc
data16
idivb
inc
loope
mov
lret
jb
push
bnd
cli
adc
mov
adcl
mov
dec
sti
cmp
outsl
lret
mov
les
mov
jne
fwait
js
mov
jb
mov
jmp
add
mov
dec
in
pop
mov
daa
loop
sbb
inc
cmpsb
loopne
daa
adc
jo
pop
push
out
addl
add
movsl
lds
adc
sbb
repnz
xlat
sarl
loope
adc
cwtl
push
dec
mov
imul
gs
jbe
fmull
mov
add
mov
pop
orl
jnp
loopne
jne
xchg
iret
xchg
insb
je
jnp
jnp
sbb
push
repz
mov
sbb
cmp
jle
loop
push
xchg
lret
stos
shlb
leave
adc
in
aam
movsb
jl
cmp
stc
inc
mov
dec
and
shlb
push
sbb
dec
mov
and
push
inc
scas
and
imul
sarb
test
sbbl
rorb
xor
repz
push
roll
cld
sub
lods
adc
out
lret
push
pop
mov
xchg
popa
mov
mov
sub
test
inc
add
addr16
cmp
jmp
inc
cmpsb
push
sti
xchg
xchg
mov
sub
clc
fistpl
mov
movsl
add
sbb
pop
adc
sahf
out
mov
dec
inc
fcomps
test
jno
rol
int3
fs
push
ret
out
pop
xchg
pusha
fiadds
ja
aad
sub
cmpl
push
fwait
enter
out
mov
or
stos
pop
mov
mov
out
lods
xchg
in
ljmp
aas
xchg
mov
fwait
push
push
int3
and
loope
add
daa
fldenv
pushf
sub
add
cmp
push
xor
out
mov
pop
aad
cmp
mov
enter
cld
xlat
push
push
xor
data16
mov
mov
movsb
lea
lock
movsl
jg
inc
cmp
outsl
cltd
push
sbb
adc
dec
mov
mov
add
cli
mov
adc
pop
lods
nop
adc
cmp
add
sti
mov
loop
jns
loop
test
sub
mov
ljmp
incl
and
pop
roll
in
add
into
sub
sub
test
ja
sub
scas
rolb
pop
insl
jns
push
sahf
inc
jmp
push
fmuls
in
dec
ss
test
or
jbe
sbb
imul
and
sub
pushf
mov
cld
mov
cmp
pusha
dec
lret
and
insl
inc
push
lret
cmpsb
inc
iret
subb
rorl
or
test
xchg
popa
loop
aaa
xchg
loope
cltd
inc
inc
sbb
fisttps
stos
inc
add
cmpsb
inc
ljmp
bound
lret
cmpsb
inc
push
adc
mov
lods
xor
stc
push
sub
shl
cwtl
ror
int
popa
sub
loope
js
jg
adc
lret
adc
sub
or
add
test
xchg
scas
cltd
clc
mov
pop
mov
adc
ret
das
test
push
add
mov
cmp
mov
pop
sbb
pop
in
push
pop
xor
adc
fs
cmp
in
out
add
lret
sbbl
mov
scas
addr16
xor
nop
mov
aad
in
sub
inc
jnp
sub
scas
add
fs
xor
and
popa
cmp
int3
xor
pop
sub
loopne
jne
lea
popa
ljmp
sub
mov
mov
jp
roll
sbb
inc
lods
in
and
dec
rcll
inc
jmp
pusha
mov
push
hlt
or
aam
cltd
int3
mull
jmp
adc
imulb
mov
scas
mov
ret
lret
inc
inc
inc
insb
rorl
sub
or
cld
or
push
es
icebp
dec
inc
add
xchg
push
xor
shl
mov
aaa
cld
out
aas
sub
hlt
lock
daa
pop
addr16
test
push
jp
push
sbb
pop
jl
dec
or
aaa
push
filds
jg
popf
dec
rolb
dec
mov
and
in
pop
iret
pop
inc
aaa
lret
fisubrl
lret
cli
inc
rcrl
lcall
sahf
call
test
cmp
repnz
aaa
mov
pop
shr
lcall
adc
dec
cmp
xchg
mov
imul
adc
push
fisttpll
adc
mov
add
sbb
mov
out
pop
mov
mov
aam
test
add
ljmp
sbb
ljmp
adc
and
xchg
fwait
and
lcall
mov
push
mov
xchg
vaddsubpd
xorl
adc
fucompp
aaa
in
mov
je
xchg
push
mov
dec
add
or
cmp
mov
aas
mov
mov
jge
and
imul
pop
sub
and
cmpsl
mov
shrl
das
nop
add
pushf
xchg
int
pop
scas
inc
and
movsl
ficoms
dec
dec
pop
hlt
aam
cltd
out
and
jl
inc
sbb
insl
add
enter
in
jecxz
mov
xchg
cmp
inc
imulb
cmp
add
xchg
aad
roll
mov
adc
cltd
cmpb
add
pop
pop
or
add
ljmp
lea
xor
mov
fs
test
sub
loope
lods
inc
mov
push
pushf
imul
push
fcmovbe
lods
sub
and
jns
dec
sbb
sti
add
and
or
push
sbb
push
sbb
testl
mov
mov
push
mov
cmp
xchg
push
pop
dec
push
sbb
popa
clc
xor
mov
dec
cmp
xor
xchg
mov
mov
pop
rcl
js
into
jle
xchg
push
lret
add
push
add
mov
cwtl
insb
mov
mov
pop
les
push
lahf
cmpb
test
lds
hlt
cmp
mov
js
mov
aam
mov
adc
lock
rclb
bound
loopne
xor
push
ret
sub
push
mov
and
push
push
jecxz
and
std
stos
mov
and
inc
cmc
mov
idivl
pop
hlt
bound
mov
aad
and
cwtl
cmp
cmp
loopne
jae
and
xchg
add
jl
push
popa
dec
andl
aaa
arpl
sub
xchg
xchg
add
pop
xchg
pop
ds
jecxz
and
ret
movsl
xchg
in
dec
stos
mov
dec
mov
sbb
ficoml
rorl
or
fldcw
sbb
scas
jmp
lods
out
or
pop
xor
aaa
bnd
loope
clc
inc
lock
sbb
fldenv
xor
pop
enter
sub
mov
fists
mov
mov
rorb
aad
sbb
mov
jle
sub
push
push
jge
jb
lcall
xchg
leave
cmpsl
dec
dec
jge
sub
lock
xchg
in
iret
push
and
scas
push
lock
mov
ret
test
ss
add
lock
fiaddl
xor
add
xor
cmp
mov
mov
add
test
inc
add
adc
je
or
mov
fmul
decb
cmp
xor
jecxz
gs
test
movsl
das
cmpsb
xchg
lods
jb
es
push
rorb
hlt
xor
popa
jecxz
xchg
xlat
loope
ljmp
pusha
dec
inc
pop
pop
dec
es
ljmp
shll
fsubp
inc
push
stos
jb
hlt
dec
add
cmp
pop
xchg
xchg
jae
pop
sub
adc
cmpsb
std
sbb
xor
js
lret
push
popa
fistpll
mov
mov
inc
xor
outsb
xchg
icebp
mov
adc
jge
outsb
cmc
fcoms
out
push
mov
lcall
std
jle
pushf
mov
bound
sti
lret
mov
insl
cmc
adc
jmp
adc
xchg
mov
xor
pusha
das
or
hlt
inc
gs
clc
pop
pusha
ret
sub
add
loop
shll
hlt
add
sbb
add
gs
ret
sbb
and
dec
jge
inc
sub
mov
pop
push
lods
pop
mov
add
sbb
aam
sti
cmp
mov
je
add
push
stos
xor
jb
rorl
mov
out
sbb
mov
test
inc
lret
adc
cmpsb
jge
loopne
addr16
leave
pop
out
lcall
outsl
jne
adc
jp
sub
sbb
sarl
jg
adc
xchg
das
mov
dec
pop
out
inc
mov
shrb
xor
xchg
xchg
cs
jge
dec
xor
sti
inc
fmuls
lret
mov
jno
loop
jnp
xchg
clc
shr
adc
add
xor
jae
out
pop
or
out
fcom
enter
nop
lret
js
fcomps
mov
xchg
hlt
cmc
xchg
pop
dec
enter
cmpsb
xchg
xchg
dec
pop
shrl
ret
in
outsb
test
add
outsl
and
mov
mov
sub
inc
lods
fstpl
outsb
inc
mov
stos
jl
mov
sub
ja
add
xor
inc
jne
adc
ret
repz
lods
in
push
mov
mov
pop
pop
add
fidivl
test
imul
add
daa
and
inc
inc
mov
jb
scas
jbe
sbb
jl
rclb
sub
cs
loope
push
or
sub
inc
cmpb
in
lods
mov
inc
inc
lahf
mov
ret
aaa
xchg
push
lcall
xchg
stc
repnz
pop
lcall
out
fucomi
push
lret
mov
push
repz
nop
pop
fisttpl
or
sbb
add
mov
lds
mov
popa
xchg
jp
and
jg
ror
or
inc
mov
push
cmpsl
xchg
xor
mov
jne
cli
xchg
inc
xchg
in
and
xchg
insb
mov
pop
movsb
push
sub
arpl
fidivs
fstp
es
test
fnstsw
in
ror
push
mov
sub
aad
pop
mov
push
and
ss
mov
mov
into
jo
out
mov
cli
inc
dec
inc
hlt
ss
push
std
xor
mov
xchg
or
sbb
js
mov
popa
mov
hlt
sub
pop
sbb
push
adc
and
push
push
xchg
xchg
jae
repz
test
test
repz
jg
mov
cmp
stc
outsl
adc
leave
mov
lods
push
push
xor
pop
push
lret
repz
jl
push
sbb
pop
sbb
or
adc
push
test
in
outsl
sti
lret
js
cld
jns
das
and
xchg
ret
inc
jns
in
mov
and
pop
mov
aam
mov
inc
sbb
pop
mov
adc
jge
test
mov
adc
data16
mov
jg
lcall
xor
adcl
dec
gs
push
dec
loopne
jmp
arpl
sahf
inc
out
xchg
in
inc
popa
mov
mov
push
pop
xor
lods
ljmp
in
int3
mov
cs
push
mov
clc
and
xor
push
xchg
daa
outsb
in
inc
aam
mulb
clc
inc
push
inc
subl
jb
sbb
adcl
ja
adc
cmp
dec
into
xor
xor
xchg
icebp
inc
inc
xchg
cmp
imul
push
jb
xchg
sahf
loopne
push
dec
or
jb
sahf
cmpsb
sahf
daa
adc
dec
adc
mov
inc
or
lcall
cltd
pop
lea
dec
sahf
fidivrl
push
or
adc
pop
divl
aam
jno
lcall
cmp
dec
addl
mov
cmp
jns
or
mov
cmp
adc
mov
xchg
cmp
sbb
dec
imul
into
mov
cwtl
xchg
clc
out
sub
bnd
aam
movsb
movsl
enter
repz
outsl
ljmp
xchg
xor
xor
lea
fsubrl
sub
dec
mov
dec
nop
cltd
hlt
call
adc
or
enter
mov
mov
add
negb
mov
insl
nop
dec
adc
lret
xchg
mov
xchg
mov
ss
sub
les
sub
jb
push
lds
fists
test
pop
arpl
into
repnz
out
pop
mov
cmc
or
cmp
dec
arpl
xor
fwait
push
jbe
int
lahf
lods
sbb
outsl
loop
sub
arpl
mov
divl
jg
lock
icebp
adc
sub
jb
mov
iret
mov
jle
lea
push
rol
xchg
popa
cmpsl
or
dec
xchg
hlt
mulb
ljmp
dec
shl
stos
mov
mov
adc
mov
jmp
ja
mov
mov
xchg
jmp
add
mov
push
fwait
imul
jno
and
push
cmpl
loope
adc
ret
ret
push
jp
loope
jmp
sbb
xchg
test
add
jg
loope
jge
add
aaa
mov
aaa
add
addr16
xor
and
mov
out
inc
fimuls
ret
pop
repz
mov
mov
arpl
push
test
or
fsubr
repnz
cmp
stc
mov
popf
fs
pop
sar
lret
cld
pop
into
pop
out
sub
mov
pop
adc
test
imul
add
push
or
daa
jp
cld
popf
mov
lods
xchg
out
push
sub
push
mov
pop
fidivrl
mov
jae
fbstp
iret
sub
dec
lock
pop
xchg
xchg
mov
xlat
mov
and
xchg
andb
and
testl
sbb
pop
mov
lcall
mov
adc
push
mov
xor
push
xchg
ja
mov
add
add
xchg
jmp
into
dec
mov
or
lret
or
scas
pop
insl
hlt
xor
test
fisubl
enter
cmp
pop
cmpsl
adc
push
dec
pop
imul
je
fucom
nop
cmp
add
xchg
lret
rolb
mov
xor
dec
popf
lods
mov
out
sbb
gs
ret
add
loope
and
mov
mov
jecxz
das
push
cli
fwait
pop
pop
in
std
sbb
fimuls
inc
add
pop
xchg
push
sbb
and
or
test
imul
jmp
fistpll
pop
push
in
push
xchg
push
scas
sbb
inc
dec
push
xor
int
out
sub
sbb
bound
cs
fldcw
jle
es
cmpsb
cmc
out
insl
sub
jl
pop
hlt
xlat
scas
or
mov
filds
lcall
add
fsubrs
adc
sub
mov
dec
push
xchg
sbb
aas
icebp
mov
lea
out
inc
btrl
mov
or
push
insl
lret
sub
test
aas
inc
push
inc
dec
out
fcoml
cmpsl
rorl
loop
xlat
in
inc
pop
sbb
adc
push
sbb
fbstp
test
loopne
movb
sarb
leave
fwait
repz
movsl
leave
push
and
loop,pn
dec
cmpsb
push
sub
and
or
das
mov
fs
orl
sti
mul
xor
fcoml
cmp
push
pop
stos
pop
mov
and
xlat
jmp
adc
mov
or
adc
push
cltd
cmpb
mov
and
xorl
ss
xchg
test
in
outsb
sarb
shll
xor
mov
out
out
in
insb
fmull
pop
pop
or
pop
and
pop
les
inc
push
rorl
insl
xor
or
xchg
add
outsb
pop
inc
js
movsb
pop
xor
movsl
and
mov
mov
mov
adc
nop
lock
jae
icebp
mov
mov
dec
jnp
mov
add
push
shrb
inc
shlb
lret
mov
xchg
mov
jle
xchg
cmp
repz
inc
test
ret
mov
sub
mov
lea
aaa
dec
lcall
and
jbe
adc
test
adc
adc
es
test
cs
dec
testl
sti
xlat
stc
adc
leave
sti
cwtl
xor
arpl
or
jle
add
rcr
lret
aaa
adcl
mov
pop
insl
pop
pop
out
out
repnz
sbb
pop
or
pop
cmpb
mov
push
add
or
or
subl
mov
mov
add
pop
xlat
jp
aaa
aad
and
xor
push
adc
push
xlat
adc
repz
cmc
pop
pushf
ds
jae
push
shll
inc
das
sbb
push
mov
stos
scas
and
dec
gs
cmp
int3
cmpsl
sub
sahf
cmp
mov
lock
sub
mov
icebp
cmp
es
ja
sahf
mov
fcomip
jle
mov
out
sbb
ret
xlat
dec
cli
ret
out
movsb
cmp
mov
dec
or
shll
xchg
push
inc
cli
arpl
and
repnz
loop
add
stc
lcall
test
sbb
loopne
push
stos
std
aas
push
mov
int
sub
scas
push
test
mov
fisttpll
jle
shrb
mov
mov
out
js
js
pop
jmp
mov
je
sub
pusha
jo
fistpll
rcrl
pushf
sub
xchg
push
stos
rclb
lahf
in
test
rol
inc
push
push
test
mov
cld
scas
ficoml
push
mov
mov
scas
nop
mov
jns
xor
and
cmp
sbb
nop
shlb
mov
ss
push
sub
xchg
or
adc
sbb
testl
shlb
es
xchg
test
xchg
jbe
xor
pop
dec
mov
pop
jmp
cld
bnd
inc
mov
and
xchg
daa
mul
jecxz
xor
imul
ds
lret
cwtl
cmc
pop
mov
and
pop
call
and
out
es
dec
push
dec
shr
inc
lahf
xlat
shll
mov
mov
ljmp
es
cmp
lods
scas
mov
mov
add
stos
out
inc
nop
mov
xchg
enter
jp
inc
in
cld
nop
lea
adc
andl
inc
add
sbb
mov
jle
std
jl
xchg
adcl
mov
xorb
nop
paddusb
sub
xchg
add
std
cmp
cmp
scas
mov
pop
icebp
jecxz
fisubrs
js
ret
mov
loop
jns
cmp
jmp
or
lret
jnp
inc
cmp
mov
sbb
mov
xor
pop
outsb
sub
iret
or
or
xchg
cmpsb
sbb
pop
in
mov
ljmp
add
push
push
push
dec
fcomip
mov
call
outsb
je
fdivrl
es
sub
push
call
jbe
push
pop
sbb
sub
daa
addb
xchg
add
and
pop
dec
int
push
mov
jo
mov
or
push
jns
sub
rcl
fidivrl
gs
arpl
out
mov
dec
mov
gs
adc
mov
fwait
pop
lds
jl
ss
mov
or
cmp
xlat
aaa
push
leave
in
cmp
in
xchg
sbb
and
jecxz
or
lea
mov
pop
adc
sahf
cmc
jnp
in
shl
mov
mov
sti
shl
mov
sbb
idivl
add
and
sbb
mov
mov
aaa
sbb
inc
push
or
ficoms
mov
popf
insb
adc
xchg
jge,pt
push
out
popf
push
mov
push
xchg
jae
arpl
ss
push
pop
cmc
xchg
pop
lret
lock
cmc
out
cs
enter
cltd
aad
sub
xlat
jne
lret
dec
test
das
xorl
jle
shl
dec
jle
push
and
test
jae
mov
fiaddl
outsb
adc
cmp
mov
and
push
iret
repz
sub
lret
xor
repz
and
lds
lret
pop
inc
cmp
stc
jge
ret
mov
jae
mov
shl
roll
aad
out
sub
inc
mov
iret
mov
popa
add
movb
jmp
andb
sub
popa
add
fisttps
test
lods
rorl
adc
stos
mov
in
inc
data16
pop
xchg
imul
adc
dec
mov
pusha
dec
jecxz
inc
outsb
or
mov
test
dec
dec
xor
jne
cmp
inc
in
xchg
mov
mov
push
jmp
mov
icebp
push
or
mov
add
repnz
mov
pop
test
push
xchg
mov
cld
mov
jmp
add
jp
dec
es
inc
adc
inc
push
sahf
into
test
daa
xchg
pop
xchg
push
mov
adc
mov
adc
fcompl
pop
push
fidivs
cld
xchg
mov
movsb
push
xor
movsl
hlt
lret
mov
jecxz
adc
push
mov
sub
jno
dec
movsl
testl
aam
loope
adc
dec
xchg
mov
enter
jmp
fwait
imul
xchg
mov
xor
int
mov
jne
mov
inc
scas
dec
or
xor
loop,pn
xchg
mov
fcmove
pushf
pop
mov
fcoml
jbe
aam
lock
ja
jno
in
cmp
push
mov
sbb
test
jmp
mov
js
mov
mov
or
lret
adc
xor
push
out
mov
mov
jb
outsl
movsl
cwtl
stos
push
mov
test
aam
mov
cmp
cmp
js
mov
rorb
cltd
into
cmc
vmovshdup
lods
cmp
push
sbb
ja
stos
stc
test
cmc
lds
mov
std
xchg
movsl
dec
popf
xlat
fsubr
cmp
pusha
xor
cmp
add
push
push
lret
mov
daa
imul
pop
std
lret
mov
jae
inc
test
pop
mov
aaa
mov
push
dec
inc
popf
pop
mov
inc
jbe
pop
nop
add
add
inc
filds
mov
repz
and
cmp
jno
xchg
imul
bound
dec
push
int
test
xor
inc
std
shll
mov
pushf
fwait
or
inc
xchg
js
ja
pusha
sub
nop
std
je
inc
push
adc
das
cltd
and
lret
ja
push
inc
adc
mov
movsb
and
repz
and
mov
nop
mov
insl
cmp
imul
setl
sbb
mov
xor
adc
test
loopne
mov
flds
xchg
int
cwtl
sub
lret
jns
cli
cmc
push
adc
imul
aaa
js
fisubs
out
repz
loopne
sbb
push
sbb
cwtl
repnz
mov
test
cmp
xchg
xor
sbb
cltd
mov
popa
loop
and
sbb
test
or
test
sarl
test
mov
sub
adc
fs
jnp
inc
sub
xor
jbe
sbb
inc
pop
fwait
or
dec
ja
out
test
hlt
testl
sti
push
add
stos
call
repnz
fdivs
lds
cltd
jbe
jb
pop
pop
xor
rorb
divl
lods
loope
jecxz
sbb
xor
xor
lahf
inc
cld
xchg
leave
or
push
lods
mov
cmp
mov
mov
push
out
mov
push
mov
stc
repnz
ret
stos
sahf
pop
and
mov
push
push
adc
scas
or
outsb
ds
imul
pop
lds
ljmp
mov
test
rcrl
and
mov
es
test
call
cmp
fidivs
minps
fwait
xorb
add
int
mov
je
mov
cli
jns
mov
ljmp
mov
cld
imul
mov
int
bound
js
mov
or
sub
in
shll
in
int3
cs
sbb
addl
jp
leave
pop
push
test
xor
icebp
or
popa
jl
dec
aad
push
push
push
and
push
push
mov
daa
dec
or
int3
sbb
add
push
xor
xchg
test
mov
mov
jmp
clc
mov
ds
adc
mov
dec
jnp
lcall
xorb
ss
insl
sbbb
pushf
or
daa
xor
dec
xchg
and
ljmp
push
xor
xchg
push
jge
cmp
mov
sar
mov
mov
inc
xor
mov
stos
mov
cmp
push
pop
arpl
xlat
mov
into
aaa
sbb
pop
les
cltd
xchg
or
jno
jl
adc
stos
sbb
inc
sub
adc
cmpsl
jns
out
adc
popl
jns
shl
jl
adc
adc
ret
dec
add
mov
test
roll
lcall
xchg
and
inc
jno
jae
dec
lret
xchg
stc
lret
jge
repnz
subb
outsb
jmp
add
jmp
dec
out
or
insb
inc
adc
imul
or
loop
es
xchg
push
bound
jmp
xor
mov
das
in
jno
cmp
inc
repz
testb
mov
ljmp
push
and
ds
scas
xor
push
cmp
cli
jg
adc
pushf
sbb
lret
mov
adc
mov
push
arpl
imul
andb
mov
adc
xor
idivb
add
mov
imul
loop
sbb
test
fst
xor
jno
jne
lods
mov
and
jl
jle
add
or
in
jle
xchg
mov
add
push
sub
stos
data16
inc
outsb
jmp
and
xchg
add
ss
outsb
insb
or
dec
int3
xchg
push
fwait
repnz
cmp
cmp
in
pop
xchg
mov
call
and
cld
out
xchg
xchg
or
test
fildl
scas
jl
mov
cmpsl
ds
pusha
movsb
jns
fisttpll
pop
insb
sub
aam
add
nop
sbb
or
mov
xchg
jmp
int3
sub
lcall
ljmp
sbb
leave
mov
mov
jecxz
xchg
jae
dec
jmp
gs
add
adc
lret
sub
hlt
in
fcmovb
clc
out
adc
push
fwait
jg
inc
movsb
xlat
aam
mov
pop
or
pusha
sti
insb
jmp
inc
xor
xor
sbb
xchg
sub
adc
shr
cmc
ja
lods
sbb
mov
dec
movsb
es
cwtl
pop
movl
mov
add
pop
mov
stc
mov
or
jle
dec
xchg
push
or
adc
sub
mov
rcll
jg
inc
add
jp
add
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
lods
sub
pop
out
addl
jmp
or
stos
sbb
ret
cltd
aaa
mov
lret
or
in
pop
aam
sub
and
aam
jecxz
adc
cmpsl
jmp
or
jecxz
shr
imul
mov
mov
pop
and
jne
test
mov
dec
xchg
and
aas
lea
aaa
push
lcall
lods
cmpsb
sbb
and
xchg
xchg
insl
and
xchg
insl
sahf
imul
mov
test
aaa
cmp
jno
adc
xchg
push
stos
sbb
mov
jno
bound
je
pushf
adc
and
add
call
add
lret
sbb
xchg
inc
enter
jp
std
jae
outsl
bound
inc
insb
shrb
and
jp
fisubrs
ss
mov
xor
dec
xchg
aad
push
push
sbb
dec
xchg
cmp
push
outsb
cltd
or
or
pop
outsl
and
dec
addl
lahf
push
fists
decb
pop
xchg
cmpsl
dec
cs
sbb
mov
xor
push
push
dec
cmp
or
in
pop
xchg
xchg
addr16
xorb
mov
outsl
std
push
push
sbb
cmp
lds
lret
jne
ja
add
scas
inc
or
lea
nop
fnop
sti
mov
xchg
negb
sub
cltd
or
out
mov
and
xor
lahf
in
test
pop
jo
test
pop
shr
out
imul
leave
push
leave
fmul
pop
and
sub
sub
pusha
ja
jp
aas
or
mov
mov
outsb
inc
jl
add
sbb
rcrb
leave
test
mov
out
mov
xlat
cmp
mov
sbb
adc
je
or
stos
js
jge
lock
imul
xchg
loopne
imul
mov
fsubs
stos
cmp
mov
dec
xor
daa
sbb
adc
rorb
mov
fldt
enter
imul
sbb
cs
out
movsb
and
or
out
jnp
sbb
inc
mov
xor
dec
mov
test
sbb
and
rep
bswap
adc
mov
ds
andb
pop
lods
push
nop
lret
inc
fld1
inc
mov
jg
xchg
xchg
mov
ss
push
aad
mov
jbe
jno
cmc
push
push
sbb
or
stc
jae
stos
fsubs
or
or
and
mov
adc
and
mov
sub
cmp
jae
jp
mov
cmp
and
mov
mov
push
push
movsb
inc
mov
out
push
push
pop
or
mov
int3
push
mov
out
je
or
mov
dec
add
daa
fnstenv
mov
into
jno
and
inc
adc
sub
mov
adc
xchg
inc
or
mov
dec
jecxz
sahf
mov
movb
dec
bound
mov
movl
dec
mov
cmc
aad
cmpsl
movsl
xchg
sbbl
lret
and
dec
jae
xchg
test
les
pop
leave
push
xchg
xor
and
mov
aad
jo
sbb
ja
mov
jg
movsb
jg
dec
fwait
leave
adcl
in
jp
fnstenv
add
cmp
mov
ljmp
push
addr16
or
jmp
in
sbb
xchg
fwait
sub
lret
inc
lock
inc
pop
ret
testl
xor
push
or
mov
xchg
jge
loope
data16
add
mov
push
push
mov
cmp
cmp
testl
push
add
insb
jecxz
push
or
loop
dec
sbb
test
repnz
out
shll
cld
lds
sbb
sbb
cli
mov
jmp
push
loopne
std
lret
out
aas
sub
push
mov
fstpl
out
shlb
and
jno
jle
leave
mov
cmp
mov
call
stos
mov
xchg
cli
or
xchg
lods
out
and
dec
mov
scas
xor
push
cmpsl
movsl
cmp
mov
std
subl
cmpb
mov
sbb
clc
dec
mov
sbb
pop
jecxz
sbb
fbld
in
dec
cmc
add
xorb
iret
ss
fisubl
adcb
jl
ror
lahf
jle
sahf
lods
cmp
jae
xchg
or
ds
fwait
and
pop
subb
cmpsl
stos
btc
xchg
stos
mov
xor
sbb
sub
ss
lods
inc
sahf
inc
cmpxchg8b
adc
dec
enter
ds
sbb
push
data16
jecxz
adc
iret
and
loope
sahf
leave
mov
jae
xchg
js
mov
cmp
mov
loope
push
sbb
adc
mov
and
dec
ds
dec
jp
push
adc
in
or
clc
adc
push
lds
cmc
and
xor
lock
sbb
or
push
jg
xchg
sarb
cld
std
pop
mul
jecxz
pop
ficoms
icebp
aam
dec
sbb
cli
movsb
add
lds
xchg
inc
and
xor
lock
push
int
rcll
mov
xor
jg
lret
sbb
arpl
push
lcall
jle
mov
fdivs
ljmp
leave
gs
pusha
shrl
rol
lock
xor
cmpsl
xorl
dec
pop
sub
in
rcrb
in
add
test
je
xchg
mov
push
jl
or
notl
push
dec
pop
ret
mov
sub
push
or
arpl
lret
scas
mov
stos
add
xchg
pop
mov
setle
mov
mov
dec
das
inc
cwtl
popf
push
jno
les
outsl
imul
sub
negb
push
dec
sarl
out
or
in
push
shll
adc
pushl
outsb
stos
je
cmpxchg
popf
pop
clc
cmp
ror
int3
mov
leave
pop
outsb
and
adc
and
lods
dec
js
mov
js
imul
jno
dec
push
fwait
jmp
icebp
imul
arpl
loopne
xchg
inc
mov
stos
xchg
js
xchg
mov
or
xchg
mov
sub
pop
push
sbb
mov
push
mov
ficoms
xor
loopne
and
mov
jmp
mov
cmpsl
fsubrl
lods
je
adc
out
xor
es
add
mov
hlt
sub
das
fadd
dec
inc
imul
or
insl
and
xchg
mov
mov
sbb
push
stos
lcall
pop
adc
adc
and
fnstsw
jb
inc
mov
cmp
dec
aam
push
mov
test
mov
enter
and
push
dec
nop
shlb
cmp
sub
add
ret
icebp
push
cmp
adc
mov
xchg
fldt
mov
sub
into
mov
dec
mov
shrl
xchg
sar
cmp
in
dec
leave
test
add
imulb
jg
sbb
lock
cmp
jge
rcr
sahf
gs
dec
pop
rolb
adc
popa
xchg
adc
sub
in
imul
sbb
mov
push
inc
sbb
mov
movzbl
adc
xchg
test
mov
jno
push
pop
xlat
bnd
fistpl
sub
cld
cmp
mov
sbb
lods
lret
in
aaa
into
dec
loopne
jb
xor
inc
dec
pop
push
dec
insb
dec
fildll
fnstsw
cli
int
cltd
adc
xor
jl
push
mov
cmc
jmp
icebp
jnp
dec
out
fstp
dec
or
mov
insb
dec
push
cmc
cli
xchg
cld
jnp
cmp
fbld
repnz
stc
or
jecxz
or
sbb
or
xchg
xchg
shrl
sti
hlt
xchg
jle
cmpl
add
je
jg
int
out
xor
or
or
sub
mov
dec
sti
scas
fistpll
mov
mov
rol
jmp
repz
sub
pop
cwtl
andl
dec
jge
add
and
in
ds
movsl
jp
pop
dec
push
sub
inc
add
xchg
dec
add
mov
mov
insl
and
js
xor
nop
sub
cwtl
shll
pop
scas
xlat
inc
cmp
mov
adc
fidivrs
fmuls
mov
mov
jle
data16
mov
or
mov
gs
data16
adc
mov
jns
sbbb
testl
jne
int3
cmc
shlb
mov
aad
jecxz
iret
jo
loopne
sbb
orl
into
or
pop
in
int3
cmp
out
sahf
cs
dec
or
ret
jl
insl
cs
mov
insl
test
sahf
jge
outsb
xchg
jo
nop
idivl
pop
dec
inc
mov
rcll
add
push
sub
cltd
xchg
pop
lods
xchg
inc
insl
jbe
push
fcmovb
mov
ror
pushf
mov
rcll
pop
repnz
mov
add
or
mov
notl
mov
cmp
lcall
cmp
xor
movsl
jo
xlat
push
hlt
or
aaa
push
je
loopne
push
push
insl
pop
mov
inc
mov
xor
cmc
mov
adc
cld
data16
jle
add
lods
push
lahf
cmp
int
add
pop
xchg
mov
ud2
and
arpl
gs
adc
mov
pusha
cwtl
es
push
popf
fiadds
push
jecxz
push
xchg
xchg
lock
insl
cmp
push
jbe
or
adc
sbb
mov
in
dec
sbb
test
push
dec
jge
adc
adc
lret
pop
jle
and
push
fnstcw
push
or
push
ja
push
xor
mov
xor
lods
push
pop
jns
sbb
scas
lcall
flds
push
pop
and
xchg
rol
cmp
iret
daa
jp
es
scas
movsb
testl
pop
rorl
push
add
out
repnz
gs
cmp
test
inc
int3
push
pop
daa
test
movsl
push
add
dec
lcall
adc
sbb
inc
or
test
sahf
sti
cli
xchg
and
mov
adc
xchg
lret
mov
fwait
sub
xchg
push
or
out
cli
dec
or
xor
jle
inc
add
xchg
aad
xchg
mov
int3
mov
aad
daa
js
and
fs
bound
rcl
je
out
push
push
bound
idiv
call
jne
fimuls
lea
jl
mov
mov
lds
aad
push
xor
fidivs
in
sbb
stos
jb
inc
icebp
sbb
iret
jp
scas
pop
ljmp
xchg
cltd
fwait
cmp
xchg
enter
ret
std
cmp
mov
test
mov
xchg
jg
clc
loop
push
cmp
test
adc
cmp
pop
mov
psubusw
sub
mov
in
push
cmpsb
mov
aaa
push
enter
popa
das
cmpsl
leave
test
lret
pop
mov
mov
mov
out
daa
ret
lea
cmp
adc
jmp
stos
mov
es
mov
sti
iret
cmpsl
inc
lcall
push
out
push
popf
les
popa
stos
in
cmp
inc
jl
addr16
test
fisubrl
or
xchg
call
fmull
cmp
call
jle
lea
inc
xor
inc
lret
repnz
mov
frstor
and
cmp
jmp
leave
fadds
fildll
fcmovbe
jmp
rcll
jmp
and
sub
sbb
push
mov
and
iret
xchg
stos
sbb
adc
out
outsb
cwtl
push
push
fcompl
pop
jno
shlb
out
arpl
stos
gs
int
repnz
xchg
mov
mov
or
nop
mov
jecxz
jge
arpl
xor
cmc
dec
fsubs
pop
je
cmc
adc
scas
mov
movsl
ficoml
dec
add
pusha
jb
outsb
sbb
pop
push
dec
clc
push
dec
cli
add
lods
fidivs
std
insb
pop
dec
sbb
pusha
cld
stos
rcll
sahf
jb
push
and
sub
inc
dec
jle
mov
xchg
jge
pop
mov
insl
lods
mov
inc
mov
test
lcall
repz
push
ljmp
pop
out
das
adcb
in
repz
call
adc
inc
imul
les
jmp
cld
imul
loopne
shlb
cmp
lds
data16
pop
pop
out
mov
jae
xchg
pop
ja
mov
imul
push
shl
rorb
push
pop
mov
out
mov
fsubl
xchg
pop
jle
cltd
push
in
sbb
js
adc
leave
and
pusha
sub
loopne
adc
cmpsl
cwtl
sub
outsb
arpl
and
add
lret
das
cmovg
sahf
mov
or
pushaw
iret
subb
cmp
mov
xor
push
pushf
or
shr
jbe
imul
mov
mov
fsubrl
test
jno
ljmp
in
and
data16
push
es
pop
inc
sarb
or
stos
into
mov
pop
sarl
or
xchg
mov
or
das
mov
push
pop
mov
pop
stos
fnstsw
imul
cmp
add
xchg
aam
lcall
mov
mov
loopne
lret
sub
das
orb
subl
xchg
repz
or
aaa
dec
ja
push
jle
inc
jp
filds
repz
adc
mov
fnstenv
cmp
mov
mov
cli
mov
xchg
inc
mov
pop
inc
push
mov
xchg
cs
nop
inc
push
cmp
sub
adc
pop
out
cli
jg
jne
in
repz
xchg
loop
sub
cwtl
sbb
cld
es
push
and
pusha
gs
pop
adc
and
inc
sub
adc
js
sub
testl
push
or
jno
sub
rcll
orl
jg
xchg
cs
fiaddl
and
loop
inc
xchg
or
dec
fstps
cmp
inc
nop
scas
fmull
sub
stc
hlt
add
ret
or
testl
arpl
pop
sub
pop
addr16
fmulp
sub
push
sbb
mov
out
cmp
popa
fistps
mov
arpl
loope
inc
pop
mov
das
sti
jecxz
testl
ljmp
call
pushf
es
popf
dec
rcll
iret
in
mov
scas
out
sub
loop
xchg
icebp
or
push
sbb
bound
fisttpl
mov
sub
shl
in
mov
dec
add
push
or
stos
sbb
mov
mov
rcrb
out
outsl
sbb
pop
pop
es
and
jb
jle
cmp
sub
push
stos
xor
pushf
jno
sbb
fcmovnb
inc
test
fstl
test
pop
inc
ret
or
cltd
jae
add
mov
mov
pop
push
pop
mov
dec
cmp
inc
pop
inc
fsub
dec
and
movsl
arpl
incb
sbb
xchg
push
imul
outsb
xor
mov
fs
cmp
sbb
inc
xor
popa
insb
jne
sbb
adc
daa
icebp
jl
jl
aad
sub
out
inc
cld
cwtl
xor
clc
push
cmp
mov
leave
rol
fimull
ds
pop
xchg
pop
loop
mov
outsb
popa
fdivs
push
sub
adc
sub
les
pop
outsl
jmp
push
mov
inc
pop
mov
xlat
mov
add
mov
cmp
enter
int3
fnstenv
inc
push
dec
jno
ret
ljmp
je
loop
cs
pop
and
mov
add
lods
test
push
push
dec
mov
mov
adc
cwtl
push
sbb
js
test
shll
notl
fsubrl
in
add
pop
std
push
jle
inc
and
cmp
mov
adc
pop
cmp
pop
es
mov
lods
imulb
inc
xchg
pusha
mov
jle
in
pushf
arpl
movsb
dec
bswap
and
stos
ss
jns
xor
ss
insb
jp
push
sahf
clc
lret
loopne
clc
dec
xchg
pusha
loop
adc
add
dec
imul
pop
test
int
dec
push
lock
rclb
dec
popa
lea
jmp
sub
cmpsl
mov
and
insb
mov
cltd
sti
fdivrp
icebp
lods
test
les
inc
imul
cmc
pusha
mov
sbb
jmp
inc
jecxz
je
pop
hlt
scas
sub
mov
data16
add
iret
in
inc
daa
movsl
mov
clc
popf
add
and
push
fwait
add
adc
fisubs
inc
pop
filds
cli
sbb
test
sub
xor
in
dec
cmpsl
push
das
mov
pusha
and
xchg
push
enter
shlb
inc
cmp
jmp
cld
sbb
xor
jo
shll
pop
pop
test
imul
fstpt
mov
sbb
ret
mov
hlt
push
push
es
mov
sub
addr16
data16
in
fcmovnu
addr16
or
and
xchg
cmp
jle
mov
out
cmp
adc
ja
mov
pushf
sbb
pop
psrld
mov
lods
sarl
fnstcw
jno
jle
jg
adc
mov
popf
enter
rorb
pop
fcmovnu
stc
push
inc
pop
xchg
sub
add
jne
and
mov
pop
repz
dec
jmp
sti
mov
pop
xchg
pop
mov
mov
xor
add
sub
test
clc
mov
mov
cmc
sub
sbb
mov
jnp
jmp
bound
test
mov
dec
fmull
aam
loop
shrl
fisttps
jl
xchg
and
popa
add
cwtl
rcr
inc
icebp
jno
cmp
gs
stos
aam
push
xchg
jl
notb
add
cmp
and
out
lahf
xchg
pusha
lods
push
int
es
xor
repnz
pop
icebp
xchg
mov
jnp
xchg
adcl
icebp
fdivrl
scas
mov
mov
cltd
mov
inc
mov
cmc
jmp
cwtl
sbb
sub
cs
jnp
xlat
test
pop
movsl
ja
dec
adc
imul
inc
inc
fmull
out
bound
fsubrl
je
pop
mov
roll
notl
mov
and
lods
mov
push
insl
mov
jae
loopne
in
fdivrl
pusha
cmp
lods
aaa
divl
imul
ljmp
pop
cmp
or
pop
xor
xchg
mov
cwtl
mov
mov
jmp
xor
test
and
jmp
stos
ljmp
aam
xor
pop
lds
pop
and
adc
test
inc
leave
adcl
stc
loopne
lods
test
and
leave
loope
xor
push
lock
mov
xchg
lret
push
div
out
pop
mov
das
jbe
jecxz
xchg
jne
adc
scas
jne,pn
push
int3
test
add
mov
ret
sti
sbb
cmpsb
cli
add
cmc
movsl
es
adc
pop
clc
add
inc
or
jg
test
mov
pop
fdiv
dec
add
sub
sbb
xchg
mov
in
pushf
test
push
and
in
cli
lods
fildll
cmpl
sbb
stc
incl
or
cmpsb
mov
inc
insl
jne
pop
dec
jns
push
adc
jae
pop
mov
jl
jecxz
rorb
add
cli
xchg
dec
jmp
pop
cmp
push
es
dec
inc
pop
mov
ja
add
out
loopne
xor
daa
cmp
pop
sti
nop
jmp
aam
sub
jp
movsl
cld
dec
mov
loop
shrb
or
xchg
aaa
mov
jae
fwait
sub
rcl
jecxz
inc
jle
cmp
lea
cwtl
aam
jbe
leave
sbb
popa
push
inc
xor
out
push
pop
dec
clc
sub
sti
sarl
insb
dec
sbb
daa
push
fidivs
lock
shll
clc
inc
roll
enter
rorl
mov
repnz
push
movsb
lods
push
cmpsl
jle
pop
or
mov
xor
pop
repnz
into
pop
or
jge
jb
push
adc
sahf
jle
jl
pop
in
loopne
adc
cmp
movsl
or
cmpsl
leave
cmp
xchg
add
dec
popa
mov
inc
jl
in
mov
dec
mov
das
xchg
inc
int
push
jecxz
bound
push
pop
cld
arpl
das
pop
pop
jle
push
jp
test
in
in
mov
movsl
adc
jmp
push
pop
mov
and
push
fwait
mov
outsb
cmp
gs
lods
es
dec
lea
ficompl
mov
inc
fldenv
pop
xor
loope
nop
adc
sub
jns
jle
shrl
cld
mov
in
out
xchg
dec
mov
ret
mov
lcall
rorb
and
cmpb
shlb
xor
push
out
cwtl
scas
loop
dec
inc
or
mov
subb
ret
cs
jno
inc
ljmp
jno
lret
or
and
lret
out
jno
pop
dec
mov
sbb
xor
pop
cmc
mov
mov
dec
stos
out
ficoms
push
jno
mov
cmp
xchg
mov
in
loop
outsl
sahf
idivb
lds
push
sti
and
or
shll
pop
int3
add
mov
push
es
out
cwtl
pop
sahf
loope
fmull
jno
sbb
jo
mov
ret
mov
pop
fucom
or
sbb
gs
cmp
pop
push
push
lods
test
jb
jns
stos
pop
push
imul
jecxz
sub
cmp
aas
dec
clc
mov
and
push
mov
jmp
fistl
or
pop
adc
sub
mov
cmp
adc
push
loope
or
lret
xorl
jl
int3
pop
data16
mov
ret
mov
mov
dec
stc
dec
imul
pop
xor
in
pop
dec
and
or
mov
xchg
or
and
je
xchg
aas
pop
nop
or
jg
and
pop
mov
test
movsb
outsb
mov
ret
insb
in
lock
mov
fnstenv
inc
pop
and
cmpsl
cvtdq2ps
ret
call
ret
aas
ja
or
ja
movsb
ret
mov
clc
js
loop
aas
dec
jae
addr16
mov
sbb
cmpsb
repnz
sbb
jnp
rolb
xor
pop
test
xchg
add
je
xlat
bound
rorl
in
stc
test
dec
jae
xchg
adc
xor
mov
push
and
pop
insl
jne
adc
movsl
sub
mov
mov
inc
cmp
xchg
fnstcw
and
adcl
mov
lods
clc
mov
negl
aaa
rcrl
or
in
call
or
sub
add
popf
inc
outsb
jo
adc
orl
fadds
das
daa
xchg
popf
mov
es
pop
sbb
sbb
sbb
adc
cmp
jp
cmp
imul
in
fistps
push
xchg
adc
fs
add
imul
nop
and
icebp
mov
xchg
insl
addb
pop
fldcw
cli
sahf
popf
pop
xchg
cltd
addl
sbb
fstpt
mov
enter
pop
pushf
test
shrl
mov
adc
movsb
aad
push
add
mov
dec
fstps
fstpt
clc
dec
decb
inc
mov
xchg
sahf
lahf
testl
mov
and
outsl
aam
cmp
jle
scas
outsl
aad
inc
adc
ljmp
mov
and
in
mov
xchg
in
sbb
sbb
daa
dec
dec
dec
pusha
rcll
addl
fcomps
inc
cli
repz
and
fmuls
adc
adc
aas
lcall
cli
movsl
jecxz
lahf
jns
xor
cmpsl
sbb
push
xchg
inc
xor
imul
or
pop
push
test
sub
push
inc
cmpl
pop
pushf
out
push
xchg
jle
nop
mov
and
mov
stos
add
cmp
ljmp
fsubl
into
test
inc
out
inc
sub
or
rol
sub
push
repz
dec
imul
test
jecxz
repz
sub
and
stos
scas
loop
or
ss
test
mov
les
push
les
stos
adc
cmp
andb
xor
xchg
dec
je
mov
mov
adc
insl
push
pop
fmull
cmpsl
ljmp
push
adc
xchg
pop
xchg
lcall
lcall
push
mov
adc
stos
shrl
psrlw
push
andb
repnz
sub
push
jp
test
rcrl
xchg
insl
out
push
cmp
ljmp
dec
cmpsb
je
sub
sub
jmp
stos
test
push
add
push
jg
outsl
mov
xlat
sub
arpl
call
xchg
pop
addb
jno
testl
jecxz
push
jle
es
cmpsl
rcrl
inc
int3
lret
insl
inc
or
adc
add
movsb
lds
jb
fldl
lret
nop
and
test
test
loopne
repnz
popl
scas
jbe
movsl
mov
pop
xchg
jmp
pop
or
xchg
roll
jmp
shrb
arpl
sub
push
leave
lods
pop
xabort
pop
leave
pop
inc
jne
fistpll
mov
lahf
inc
out
adc
mov
pusha
add
sbb
std
stos
outsl
sbb
aam
mov
fnstenv
jecxz
ss
cmp
cmpl
lcall
or
mov
adc
in
fwait
mov
movsl
je
aam
sbb
std
or
mov
inc
add
or
xchg
lods
sub
jecxz
mov
mov
dec
sbb
inc
sbb
and
xor
aam
dec
cs
ja
leave
pop
scas
mov
xor
lock
rorl
pop
pop
dec
dec
dec
pop
xlat
mov
pop
mov
dec
mov
mov
lahf
lds
fldt
out
call
imul
insl
shl
push
jmp
lock
xlat
loop
xlat
dec
lret
inc
jno
fcompl
inc
iret
std
dec
sub
mov
push
les
jo
jge
dec
jne
pop
incb
cmpsl
mov
dec
scas
not
data16
and
imul
bound
sub
test
mov
jns
test
pop
vpsraw
jne
mov
push
xor
lods
mov
js
sbb
ud0
xor
insl
ret
mov
lds
dec
pmullw
adc
lret
loopne
xchg
pop
sub
out
addr16
out
mov
inc
xor
xlat
push
jae
xor
mov
pop
andb
dec
cmpsb
rorl
sbb
ret
lods
mov
mov
andb
orl
insb
inc
and
dec
jae
je
scas
fadd
lret
push
cmpsb
ja
in
repnz
xor
fcmovnb
xchg
cmp
push
push
cld
inc
mov
loop
mov
imul
xchg
int3
inc
dec
xchg
dec
xchg
cmpb
lea
shrl
ret
testl
bound
dec
fwait
pop
mov
adc
inc
push
mov
xchg
adc
push
sub
scas
xchg
icebp
add
fisubrs
rcrl
or
pop
jne
and
or
inc
arpl
cmp
add
pop
sbb
scas
test
call
pop
or
pop
pushf
xor
jo
sahf
js
in
lods
scas
xor
cltd
into
out
or
rol
sub
psrld
sub
shll
xor
or
adc
pop
insb
test
test
push
or
cmc
je
inc
lret
ret
sbb
jno
clc
inc
in
fs
jae
push
cmc
add
ficompl
lahf
add
lret
cli
gs
in
rolb
fisubs
fiadds
in
jno
and
pop
or
mov
ja
leave
mov
mov
shll
sub
stos
cmp
dec
xchg
sets
gs
and
xchg
xor
outsl
mov
cmp
adc
dec
add
dec
add
jmp
mov
mov
mov
loope
addr16
push
fsubrl
int
fidivs
sub
xchg
nop
pop
std
jecxz
xor
roll
or
xchg
and
inc
cld
and
gs
cmc
pop
jl
xor
pop
sbbb
daa
into
mov
cmovge
inc
cmp
nop
aad
es
gs
push
jns
insl
push
nop
call
ds
aaa
fcoms
push
aaa
or
pop
pop
int
ret
cmp
adc
pop
sub
mov
push
cmp
pusha
push
sti
add
xor
cld
mov
push
sbb
negl
cmp
add
adc
jg
aas
pop
mov
pop
sti
shl
cmpsb
lods
xchg
dec
in
mov
into
dec
inc
sbb
mov
add
cmp
xor
sbb
inc
sub
std
stos
inc
testb
push
fnstenv
cmpsb
and
addl
mov
sahf
and
cwtl
mov
xchg
fsubs
mov
clc
insl
push
arpl
pop
test
inc
sti
and
ljmp
push
inc
fists
int3
mov
xor
cltd
cli
xchg
adc
lret
test
lds
pop
push
mov
cli
outsl
aam
pop
xchg
leave
push
in
imul
cli
pop
mov
repz
xchg
mov
fmul
mov
push
pop
push
xchg
aad
jge
adc
xchg
or
orl
gs
ret
jae
test
pop
inc
fs
lods
push
into
je
mov
aaa
cmpsb
bound
sbb
lret
mov
jl
push
push
jbe
lods
outsb
or
dec
and
jle
jae
insb
cmp
push
das
xchg
push
ja
ds
mov
test
pop
and
lret
subb
push
bound
shrb
aad
mov
push
rcrb
lock
sbb
jl
cmp
int3
cmp
mov
jbe
fwait
test
aam
lds
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
sub
xor
addl
std
cmc
jbe
push
mov
inc
mov
test
xchg
adc
test
xor
fimuls
sahf
cmpsb
lret
xchg
sbb
test
repz
fbld
pop
scas
mov
cmp
cltd
icebp
cmp
dec
aas
sbb
adc
jge
xor
push
in
lea
xchg
arpl
inc
cld
std
dec
dec
sub
divl
mov
sahf
mov
add
and
adc
stos
jge
adc
push
dec
xchg
les
into
out
ret
inc
adc
sbb
pop
push
mov
out
mov
xchg
xchg
sub
in
push
call
or
iret
xchg
push
xor
lea
lret
out
sti
loope
push
and
lcall
lods
xchg
adc
dec
mov
mov
dec
test
sub
out
mov
pop
in
add
data16
inc
sbb
push
dec
and
push
add
cmp
iret
fistpl
outsb
scas
dec
pop
insl
xchg
ficompl
out
orl
in
xchg
push
lock
imul
mov
jbe
mov
xchg
lret
nop
das
fcom
dec
sub
xchg
pusha
fcoml
inc
pop
nop
movsb
js
push
pop
sbb
mov
xchg
fwait
or
jp
lds
loop
jns
sarb
push
push
xchg
cltd
ss
ret
fs
fisttpll
out
and
or
sub
test
stos
inc
sub
stc
in
jae
push
jg
es
xor
mov
xor
mov
mov
cmp
loopne
push
jo
cmp
adc
sbb
gs
bound
fisubl
rorl
sub
mov
xor
stos
jg
test
adc
imul
push
scas
je
xchg
pop
pop
loope
pop
outsb
arpl
sbb
xchg
js
lahf
xchg
pop
jl
cltd
arpl
ljmp
aad
rolb
mov
std
fdivl
sub
out
int3
cmp
mov
cmp
mov
add
sbb
xor
sbb
rorb
movsb
lods
lods
pop
mov
or
pop
fbld
ret
pop
cltd
mov
shrb
das
mov
outsl
jo
push
cli
mov
sub
nop
je
jno
iret
xor
fwait
or
sub
and
adc
stos
jle
cmpsl
jmp
push
sub
sub
cmc
cmp
adc
popf
jae
sbb
add
xor
mov
adc
orl
fisubs
std
pop
fimull
ret
jns
lods
sbb
fucom
add
xor
or
jbe
jns
cmpb
and
hlt
xchg
adc
pop
fnstcw
mov
push
adc
pop
sti
jmp
or
mov
inc
pop
pop
mov
or
cmp
arpl
or
pop
loope
mov
loop
add
ja
data16
stos
pop
and
dec
nop
in
dec
imul
push
push
cmp
imul
test
scas
mov
mov
imul
addr16
inc
mov
in
xorl
and
jmp
jae
int3
bound
into
mov
js
mov
scas
lds
arpl
mov
arpl
jle
enter
pop
push
mov
or
mov
add
sbb
dec
mov
pop
stos
cmpsl
js
es
stos
cwtl
imul
adc
in
dec
mov
adc
xchg
popf
stos
fnsave
push
mov
and
dec
inc
shlb
mov
arpl
mov
div
mov
mov
aad
cmp
mov
mov
addr16
pop
add
xchg
cmp
inc
and
mov
jle
js
call
icebp
mov
pop
push
cld
push
add
adc
lahf
loop
add
cmp
push
call
mov
pop
lahf
in
mov
scas
ret
adc
in
pop
jecxz
test
inc
mov
cmpsb
outsl
xchg
mov
ficoml
jne
lret
jae
aad
lea
popf
mov
cmpsl
ret
mov
jg
in
mov
and
or
jle
aaa
int
mov
cli
dec
xchg
vpunpckhdq
popf
xor
xor
popf
mov
pop
mov
inc
scas
mov
mov
mov
cmp
lea
loope
push
rcr
push
inc
je
movsl
dec
fadd
cld
into
xlat
push
enter
lahf
scas
lock
ja
mov
frstor
in
data16
loopne
mov
mov
push
dec
dec
jnp
mov
std
inc
int
je
cmp
push
xor
xor
pop
fadd
inc
fcompl
inc
pop
xchg
aas
push
add
dec
inc
sub
jbe
sbb
pop
lcall
test
outsb
and
inc
add
jae
mov
lea
imul
sbb
in
lret
cmp
sub
sbb
cmp
call
pop
xor
add
out
arpl
adc
sbb
icebp
cmc
and
push
jecxz
out
movsb
cld
pop
fsubr
push
repnz
mov
pop
aam
movsb
out
cmp
push
fstl
jbe
scas
ficompl
push
cmp
sub
cmp
push
mov
jl
std
mov
sbb
adc
xchg
or
mov
cmpsb
mov
pop
call
mov
popf
mov
cmp
sbb
inc
jmp
dec
and
icebp
loope
inc
sub
or
mov
add
adc
outsl
cmc
fwait
dec
mov
push
mov
js
adc
out
fs
scas
ret
mov
repz
adc
cmp
sbb
jl
mov
or
push
movsb
sub
test
hlt
imul
loop
ds
mov
dec
adc
orb
lea
cltd
or
mov
fildl
sub
aam
push
push
arpl
xor
push
push
fs
jmp
pop
mov
adc
lcall
je
mov
push
inc
fimuls
push
push
and
xchg
pushf
add
repz
mov
mov
insb
out
jp
mov
aaa
insl
push
fadds
insl
fcomp
mov
xchg
ja
and
mov
insl
imul
repz
sar
cltd
fiaddl
jle
xchg
jle
and
fdivs
sub
loope
mov
or
enter
out
in
push
adc
jae
inc
leave
mov
test
push
adc
repz
xor
lcall
nop
dec
aas
add
jge
and
pop
out
mov
mov
xchg
jae
ljmp
and
xor
or
fs
leave
pusha
inc
jp
inc
push
or
fucomip
xor
aaa
adc
fstl
push
adc
xchg
fucomi
dec
push
in
mov
fstpt
xchg
adc
and
aas
cmpl
jg
out
xchg
push
popf
dec
mov
sub
inc
xchg
testl
loop
mov
xchg
xor
imul
setb
inc
cmp
repz
sti
into
lcall
add
jge
mov
jne
cwtl
int
push
jbe
and
jle
add
cmp
adc
cltd
or
mov
sub
lret
mov
push
mov
je
fwait
leave
aas
cmp
push
outsl
xor
adc
jno
and
mov
fnsave
test
xchg
cs
mov
cmpsb
adc
inc
loopne
cmp
mov
cwtl
adc
dec
push
cmp
cmc
das
sub
xchg
cmp
or
fdivs
aam
sub
lods
push
popa
mov
out
xchg
and
in
insb
cmp
js
adc
lock
data16
and
aas
cmpsb
pop
xchg
popf
push
pop
dec
push
push
bswap
jbe
xchg
mov
bound
xchg
aas
das
movsb
enter
mov
ss
out
mov
or
test
lret
stc
xlat
testb
xchg
loopne
mov
jp
loopne
ret
lds
xchg
xor
and
mov
xchg
pushf
sub
lea
mov
lds
inc
cmpsl
es
sub
pop
pushf
mov
shlb
dec
outsb
pop
imul
gs
pusha
bound
aaa
shrb
outsb
outsb
and
or
lds
and
push
jae
push
daa
cwtl
cltd
pop
inc
ror
into
inc
jmp
in
leave
int
mov
add
test
scas
inc
mov
fldcw
adc
add
sbb
sbb
jge
push
mov
jmp
test
loope
cltd
clc
xorl
mov
fmull
cli
cmp
sti
mov
mov
dec
and
les
push
lahf
add
nop
cmp
stos
incb
in
lods
push
mov
add
jb
jl
cmpl
add
bound
xchg
stc
addr16
aaa
cli
and
push
jnp
test
loope
jbe
shrb
push
jno
insl
inc
fbstp
pusha
mov
cmp
ret
lahf
add
add
inc
rcrl
push
imul
sti
pop
and
notl
push
bound
notb
mov
es
lods
sbb
lret
repnz
mov
dec
in
mov
cmp
xor
fiaddl
daa
into
sub
adc
xor
cmp
cmpsl
dec
push
mov
cmp
movsl
or
push
xor
lcall
mov
je
rcrb
call
int3
les
jecxz
xlat
icebp
mov
jg
pop
sbb
and
xchg
xchg
mov
mov
aaa
inc
jp
fs
push
xor
shl
mov
imul
push
sbb
sbb
popf
aas
loope
imul
stc
fstpl
repz
sahf
cli
rcrb
cmp
dec
adc
cwtl
cmp
jo
or
adc
into
inc
faddp
dec
mov
sub
lock
pop
mov
test
enter
rcl
in
push
in
push
mov
mov
add
and
push
or
push
bound
xor
push
dec
lahf
insb
and
clc
mov
push
ljmp
cwtl
jge
push
and
decb
out
lods
lock
repnz
decl
cld
dec
push
adc
mov
fisttps
xor
mov
faddl
mov
leave
data16
mull
push
adc
insb
cs
stc
test
in
or
and
aas
daa
inc
test
in
inc
mov
sub
push
xchg
jo
mov
repnz
inc
scas
rorl
add
xchg
loop
adc
push
pop
call
jg
cmp
faddl
iret
sbb
inc
fdivrl
mov
xor
push
les
jns
xbegin
sbb
popa
push
hlt
cmp
pop
into
shlb
mov
aaa
xchg
xchg
adc
xor
dec
jl
dec
ljmp
lock
out
push
popf
ret
mov
imul
xchg
lods
pop
mov
jg
repnz
mov
pop
xchg
fcoms
test
or
or
aas
data16
imul
push
or
pop
div
les
les
std
jecxz
mov
jecxz
mov
in
xor
pop
shlb
mov
out
into
sbb
dec
or
fldcw
into
bound
lcall
mov
es
aaa
mov
push
loopne
pop
lock
sub
xor
pop
dec
dec
and
in
scas
adcl
push
xchg
jne
ss
pop
hlt
jecxz
test
mov
lret
pop
or
fs
and
jl
pop
aam
cltd
mov
push
aad
out
out
pop
movsb
movsb
into
pop
icebp
scas
jbe
test
jp
movsl
out
add
arpl
jp
addb
sti
daa
xchg
mov
test
mov
sub
jne
pop
faddp
stos
xchg
lds
xchg
sub
repz
into
sub
ja
daa
imul
push
xchg
mov
insl
mov
addr16
out
push
xlat
sbb
jb
aad
loopne
xchg
jl
stc
mov
jae
addb
jno
mov
sahf
fchs
test
jmp
cvtps2pi
pusha
cltd
stc
test
cwtl
mov
dec
outsb
fildll
ficompl
test
mov
out
lods
mov
xor
insb
enter
lret
enter
out
jecxz
dec
repnz
das
xor
ret
pop
out
icebp
mov
call
aaa
push
daa
mov
into
sbbl
cmp
sbb
imul
jle
xchg
xchg
xlat
or
inc
les
jle
push
jmp
or
cli
cs
lret
lock
sbb
mov
testl
dec
ret
scas
push
test
jp
mov
jne
sti
stc
fstp
adc
dec
adc
out
idiv
push
pop
pushf
dec
or
aam
fadd
push
pushl
and
lds
adc
shrb
sub
adc
loop
aaa
sbb
sub
xor
mov
cmp
nop
loop
push
pop
push
dec
and
fwait
ret
xchg
jle
shrb
jge
lret
jmp
cmp
addb
sbbl
cmc
lods
xchg
mov
mov
jle
sbb
mov
loope
stos
mov
in
cld
or
pop
into
sbb
bound
sti
clc
and
xlat
lods
jp
lea
jg
es
out
cmp
push
add
test
incb
je
ljmp
aam
leave
sub
inc
stc
jo
in
xlat
or
cld
add
add
out
mov
ret
arpl
cmp
lea
addr16
sbb
sbb
repnz
pop
dec
insl
xor
mov
inc
and
std
and
pop
push
add
cld
cmp
add
shlb
lods
sbb
fs
xchg
cltd
lret
xor
pop
and
mov
dec
mov
pop
jo
call
and
mov
mov
aaa
lcall
cmpb
dec
insb
paddw
jo
pop
or
jbe
imul
cs
pusha
icebp
push
jecxz
decl
insb
addr16
push
xchg
shrb
jb
test
jmp
add
cmp
or
xlat
cmp
cs
out
mov
mov
in
and
push
outsb
inc
cltd
pop
test
fisttpl
pop
dec
test
dec
jle
scas
or
ja
div
in
sub
aam
mov
push
push
int
scas
repz
je
addl
or
sbb
loope
mull
cmpsl
cmpsl
sbb
repz
movsb
aaa
ja
jecxz
scas
mov
push
sbb
pop
xlat
cmp
pop
and
fdiv
popf
mov
std
push
pop
mov
repz
inc
sbb
mov
faddl
or
inc
out
cs
lret
int
jo
lds
xchg
les
pop
cld
out
xor
mov
insl
adc
add
sbb
mov
jg
out
filds
out
arpl
cmp
pop
loope
cli
xor
mov
daa
fisttpll
sbb
loopne
pop
push
rorl
inc
cmp
inc
or
or
enter
lret
mov
dec
leave
xchg
xchg
sahf
jb
pop
xor
jecxz
mov
mov
ret
cmp
xchg
push
push
cmp
dec
cld
in
mov
xor
outsb
and
cmp
push
or
aad
jbe
xchg
in
pop
idivb
push
imul
pop
sbb
mov
add
dec
insb
sbb
cli
mov
movsb
fstps
mov
inc
sub
mov
adc
mov
jno
xchg
popf
xchg
cli
mov
add
icebp
insb
dec
inc
push
or
addr16
inc
loopne
push
fmull
sub
xor
cmp
push
int
sub
sub
movsl
mov
stos
cmpsl
or
push
dec
test
sbb
mov
fimuls
cmp
rorb
push
sti
aaa
pop
add
sub
icebp
cwtl
arpl
fwait
inc
and
andl
and
dec
mov
aaa
out
ss
es
push
test
imul
jno
push
rcr
cld
repz
stc
inc
mov
mov
cmpsl
jns
test
cmp
out
cmp
or
out
mov
adc
std
mov
aam
scas
lahf
xlat
cmp
das
call
xchg
jno
mov
and
icebp
out
outsb
fmul
shlb
push
dec
inc
push
dec
xor
clc
in
in
les
jle
enter
fsts
out
sbb
xchg
lcall
cltd
xchg
adc
pop
dec
mov
pop
aam
inc
adc
pop
adc
jne
stc
into
adc
ror
insb
mov
xlat
stos
pop
sti
xchg
jnp
call
jns
ljmp
std
outsb
mov
test
in
or
incb
inc
add
xor
inc
es
xor
pop
imul
arpl
rcrb
dec
sub
push
and
loop
out
test
les
lret
ret
cltd
fnstsw
sub
mov
ja
shlb
sub
sarb
sbb
inc
lcall
ror
inc
into
xchg
ljmp
jl
or
aad
push
jo
push
xchg
out
pop
sub
or
cltd
mov
incl
jl
out
cltd
xlat
call
add
xchg
sub
add
aam
pop
test
repz
andb
fninit
mov
push
sub
into
hlt
inc
subl
data16
adc
pop
test
mov
mov
jmp
sbb
std
out
push
outsl
lahf
js
movsl
mov
pop
sbb
pop
lcall
pop
xor
jae
jle
add
sub
cld
jae
ret
mov
test
test
and
mov
pushf
dec
push
mov
arpl
xor
dec
mov
lods
cmp
es
xor
xchg
adc
sub
xchg
jns,pn
mov
lret
mov
cli
sub
imul
push
in
mov
mov
lods
cmpsl
mov
adc
jge,pn
push
divb
pusha
mov
add
push
sbb
dec
mov
cwtl
cmpb
mov
in
fistps
test
cmc
hlt
sbb
pop
test
int3
cld
ds
xchg
jg
xor
ds
cmp
cmpsb
push
pusha
mov
adc
fildl
adc
sbb
mov
dec
pop
dec
jecxz
testb
iret
loop
sti
jo
cmp
cmp
enter
scas
sub
stc
aas
adc
mov
ljmp
ja
jle
push
stos
mov
popf
daa
dec
mov
cmp
enter
adc
mov
enter
cwtl
adc
roll
adc
and
js
adc
cmp
mov
imul
out
mov
cmpsl
lcall
sahf
loop
sbbb
cmpsb
inc
jmp
sar
mov
add
mov
clc
jbe
xor
sbb
inc
das
test
dec
mov
push
push
inc
ret
fnstsw
cmp
cltd
push
mov
fstpl
or
pop
lret
loopne
adc
jbe
push
les
mov
mov
mov
sbb
fmul
testl
scas
out
stc
jge
ja
cmp
lea
sbb
movsb
movsb
lahf
and
and
sub
test
jae
aas
xor
popf
sub
out
jb
nop
sub
jo
in
xor
fsubl
nop
and
mov
loop
inc
jl
test
adc
adc
dec
pop
lret
push
pop
into
movsb
add
mov
add
dec
xor
pop
jecxz
popa
mov
fdivrs
lods
in
jge
mov
sbb
daa
outsl
mov
decl
roll
out
inc
mov
ljmp
jmp
cmp
push
lret
add
xchg
inc
add
sub
mov
dec
shrb
sub
fbld
test
ds
mov
mov
fstpl
push
pop
dec
mov
repz
mov
test
testb
cmpsl
clc
cmp
xor
lcall
push
mov
xchg
inc
fistl
mov
test
mov
pop
pop
in
inc
inc
mov
add
and
push
sub
add
es
lret
fdivl
sbb
in
out
jge
mov
sbb
das
cli
adc
stos
ljmp
and
les
call
pop
sbb
scas
inc
outsl
pushf
daa
pusha
pop
repnz
iret
sub
ja
jno
movsl
gs
ret
dec
ror
imul
push
shll
cltd
inc
xchg
jg
test
cmp
mov
shl
andb
int3
xchg
or
mov
fs
xchg
es
bound
sbb
jns
pop
push
in
mov
mov
jns
arpl
sahf
mov
hlt
mov
mov
inc
xor
mov
das
sbb
in
cwtl
push
outsb
jecxz
cltd
in
xor
push
lea
add
dec
sbb
mov
call
cmpsb
repz
ja
loopne
dec
sbb
stos
mov
mov
sub
xor
xor
xor
cmc
scas
add
idivb
call
imul
lcall
inc
cli
out
adc
popf
hlt
fsubl
mov
test
mov
jne
push
jmp
int
xor
pusha
cmp
int3
aam
dec
add
pushf
dec
push
das
adc
stos
rorb
xchg
jbe
insl
ljmp
pop
dec
rclb
sahf
pop
into
or
pop
push
mov
mov
fldcw
stos
mov
insb
imul
hlt
cmc
xchg
xchg
jmp
fldenv
out
push
cmp
xchg
rorb
jne
and
or
add
cmpsb
lahf
movsl
ja
add
jnp
push
out
adc
dec
into
lcall
dec
cmp
pushf
jg
lahf
ja
push
mov
testl
jge
xor
mov
or
aam
out
pop
daa
hlt
mov
xchg
fisubs
jle
push
out
mov
arpl
dec
shr
aaa
shlb
rorl
jg
adc
cwtl
fsubs
mov
adc
scas
dec
lods
and
imul
push
xorb
in
jbe
das
pop
fisubrs
into
jbe
sub
test
les
fisttpl
lret
push
fucomip
mov
frstor
push
jg
or
cltd
popf
call
pop
subl
xor
jl
push
ds
repz
leave
cmp
mov
jmp
cmpsl
stc
fcompl
push
lock
mov
daa
dec
and
xchg
push
fdivs
hlt
jo
sbb
xchg
out
ret
cmc
std
dec
and
in
mov
sbb
ret
dec
fsubrs
sbb
dec
fnstenv
mov
add
in
pop
gs
push
lret
jb
rcll
cmc
loope
andl
push
icebp
mov
and
add
call
pop
pusha
fstps
shrb
pop
mov
and
into
dec
sub
sub
xor
pushf
sub
dec
sub
insl
scas
insb
dec
insb
dec
pusha
jb
push
mov
xchg
insl
push
andl
cmp
push
jno
pop
loope
scas
call
outsl
lahf
cmp
sub
sarb
xchg
xor
sbb
pop
xlat
xchg
roll
popf
stos
aaa
xor
mov
cmp
sub
mov
or
or
inc
stc
test
frstor
popa
movsl
loopne
adc
icebp
xchg
jle
jb
mov
dec
push
and
andb
loope
jp
fwait
xor
jns
jns
and
aam
mov
iret
jmp
add
push
nop
aas
xor
sahf
cmpsl
push
push
push
mov
xor
fsubrs
lds
lahf
lret
faddl
mov
loop
shrb
adc
mov
lcall
sbb
cmp
fdivr
testl
pop
lahf
dec
sub
add
or
pop
cmp
mov
xor
mov
inc
push
pop
push
pop
test
dec
adc
or
mov
or
mov
mov
pop
ja
loopne
jne
loop
mov
pop
sbb
call
cld
cwtl
lds
pop
and
outsb
mov
lcall
hlt
xchg
cmp
push
cmp
dec
sub
pop
rep
push
sbb
popf
es
lea
out
push
dec
lods
test
mov
mov
mov
jae
or
inc
fsts
adc
or
add
fsts
mov
cmp
imul
xor
mov
or
test
test
push
adc
dec
loop
pusha
sub
loope
add
lods
aad
in
add
in
mulb
inc
lea
int3
jle
daa
push
mov
call
scas
inc
xor
mov
xchg
daa
das
popf
push
push
mov
int3
adc
aas
mov
add
sbb
insl
jl
sahf
mov
inc
pushf
cli
xor
je
mov
or
sub
add
movl
scas
inc
pop
mov
jmp
pop
adc
sbb
fists
test
lea
xor
test
pop
push
cld
mov
jns
pop
mov
fstps
mov
push
adc
mov
xchg
xchg
xor
sub
pushf
inc
pop
adc
cmp
sub
mov
mov
and
insl
fsubr
aaa
movsl
out
add
jb
lods
jle
mov
pop
imul
adc
sub
outsl
jne
mov
test
add
push
pop
ret
dec
jno
pop
mov
jns
incl
push
or
jle
outsb
lods
xor
fnstcw
and
mov
and
jbe
nop
jo
repz
xchg
push
imul
insl
pop
xchg
mov
mov
xchg
clc
ret
jmp
iret
push
mov
inc
sub
daa
or
pop
push
cmp
and
inc
sub
jmp
push
aas
dec
mov
int
adc
in
orb
cmc
frstpm(287
jnp
out
xorb
mov
mov
xchg
adc
jns
fadds
add
mov
push
lret
fsubrl
mov
cmp
int3
testb
inc
sarb
jno
sbb
je
sbb
test
movsl
ficoms
fwait
inc
call
cmp
xor
aaa
shll
jecxz
cmp
lahf
aad
sahf
lods
xchg
sbb
add
and
mov
cli
test
scas
ss
bound
andl
cmp
sub
adc
imul
lock
mov
add
cld
cli
push
cmp
jecxz
jb
mov
fnsave
out
sbb
xchg
xchg
cltd
xor
or
xchg
jb
sub
push
lds
stc
ret
dec
gs
xchg
mov
lods
pop
sar
or
cmp
aaa
fs
in
cmp
aam
xlat
push
mov
addr16
cmp
dec
lods
push
push
fsubr
fidivrs
nop
mov
adc
loopne
sbb
movsl
jecxz
test
inc
pcmpeqw
test
xchg
sub
popa
rclb
pop
rolb
sub
ficoml
stos
outsb
sub
mov
out
repz
and
mov
das
pcmpgtb
or
movsl
pop
xchg
loopne
enter
jecxz
inc
imul
fcmovb
and
cmp
add
jb
xchg
icebp
inc
or
data16
aam
ret
or
fnsave
divb
pop
mov
sub
xor
xlat
mov
pop
push
sarl
gs
pop
pop
pop
mov
in
pushf
lds
cmp
stos
lods
cmovnp
int
sbb
mov
jb
mov
call
in
lahf
mov
push
mov
lock
mov
arpl
loope
mov
jnp
cwtl
mov
mov
add
clc
push
ror
pop
cmpsb
sbbl
addb
add
pop
cmpsl
data16
mov
dec
sub
cmpsl
xlat
cmc
hlt
xlat
push
xorl
xchg
mov
clc
jns
fcmovu
stc
sahf
ret
xor
fcoml
mov
fbstp
aad
fdivr
andl
mov
insb
sbb
xchg
scas
lret
pop
ss
mov
out
mov
and
inc
jmp
cmp
pop
inc
xchg
dec
sbb
hlt
lret
mov
stos
je
mov
add
jb
or
sti
inc
xchg
sbb
push
rcr
aas
out
ret
out
rorb
lods
sbb
nop
cmp
popl
push
sub
xchg
jne
je
mov
cmp
stos
sub
jo
xorl
and
jmp
mov
push
mov
popa
leave
dec
jmp
pop
inc
arpl
cs
add
ret
mov
pop
add
aaa
aas
jo
sub
call
aaa
jle
int
mov
adc
xor
rcrb
push
inc
inc
inc
or
es
ss
shll
mov
jmp
inc
pop
cmp
mov
inc
jns
dec
dec
test
xor
jne
imul
ds
sub
sahf
in
movsb
mov
add
popf
ljmp
sub
sub
arpl
jnp
scas
es
int
mov
xor
mov
loope
xor
ja
insb
jns
mov
mov
mov
jecxz
push
xor
fmull
imull
cmovne
test
je
mov
test
addb
jl
jno
loopne
popf
xchg
ret
sahf
lds
mov
lock
aas
jl
mov
or
in
fsubp
or
inc
and
mov
xchg
incb
idivl
lock
add
sub
pop
adcb
and
cmp
mov
jecxz
pop
add
xchg
lds
insl
mov
lock
clc
xchg
lret
fstpl
into
sub
add
mov
cwtl
ss
insb
les
out
jnp
negb
fsubrl
cld
push
pushf
into
test
shrl
sbb
movsl
jo
movb
xor
xchg
les
and
jmp
test
xor
int3
scas
xchg
into
fnsave
jg
push
fsubl
push
std
fpatan
popa
sti
out
sbb
xor
push
out
xchg
mov
fstl
test
ljmp
sbb
mov
xchg
sub
in
jno
sub
sbb
orl
cs
mov
aaa
fists
jl
cmp
arpl
jae
or
cmp
pop
jno
test
aas
shrl
push
or
xchg
jne
sti
jnp
mov
pop
pushf
inc
and
psubq
inc
xchg
lret
xchg
jae
mov
stos
jecxz
rep
fldt
mov
bound
popf
sub
dec
xchg
js
inc
ficompl
inc
movsl
int
jbe
adc
inc
gs
aas
div
mov
mov
or
imul
xor
stos
inc
mov
cmovb
scas
and
dec
jmp
cwtl
cmp
in
dec
ds
or
mov
sub
sub
jno
sbb
pop
push
les
mov
imul
xchg
nop
mov
push
jo
fistl
std
mov
or
hlt
aam
push
jns
jmp
movsb
push
aam
mov
mov
dec
adcl
push
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
test
addl
hlt
xchg
rcrl
xor
jb
in
sub
popa
sub
cmpsl
leave
into
mov
and
rcll
movsbl
sbb
add
mov
xor
xor
add
push
insl
xlat
shll
or
mov
dec
loopne
mov
fwait
lock
lret
test
jp
faddl
jg
or
push
repnz
in
push
pop
dec
lcall
popa
insb
and
inc
adc
in
or
clc
clc
push
pmulhw
addb
inc
rolb
lods
insl
lods
adc
adc
jl
push
arpl
inc
push
into
into
pusha
xor
xchg
cmc
adc
aam
sub
pop
scas
sub
lods
mulb
pop
jle
xchg
jno
add
xor
arpl
pop
int
data16
xchg
in
lods
arpl
xor
test
pusha
or
mov
mov
pusha
pusha
movl
lea
jmp
scas
arpl
stos
mulb
jecxz
fucomp
mov
test
or
ds
bnd
lock
test
iret
pop
out
int
xor
ds
jbe
mov
pop
mov
mov
aad
jno
and
jb
bound
clc
fstpt
push
aam
test
jns
mov
rolb
push
jp
mov
inc
movsl
xor
repnz
push
sti
rorl
sub
xchg
mov
dec
or
jb
fidivrl
lcall
test
jle
or
in
out
cld
pop
xchg
inc
xor
mov
add
jo
add
jnp
xor
cmpsb
push
cmp
pusha
pop
hlt
fldt
rcrb
icebp
mov
mov
push
sarl
jmp
cs
mov
cs
mov
stos
icebp
icebp
xchg
loope
push
arpl
clc
push
xchg
and
arpl
cli
mov
inc
xchg
hlt
xor
pushl
fmull
mov
add
cmp
dec
jnp
gs
lock
add
arpl
bound
cmp
les
cwtl
enter
lds
imul
outsb
stos
jbe
mov
rcr
push
mov
jne
insl
roll
xchg
lods
push
lcall
mov
pop
stos
testb
pop
mov
ds
dec
xor
or
subl
cltd
loope
xor
jbe
push
or
cmp
arpl
icebp
push
leave
iret
scas
jle
je
ja
dec
mov
gs
out
icebp
sub
xchg
or
sub
imul
testl
jbe
notl
cmc
sub
daa
dec
sarl
mov
push
jb
push
cli
ljmp
lds
mov
ror
and
lods
das
and
jle
shlb
xor
mov
sub
xor
sub
push
pavgw
fcompl
movsb
aam
jb
dec
add
mov
jbe
icebp
cwtl
outsl
xchg
and
pop
pushf
loop
mov
pushf
iret
ret
ret
jns
dec
lods
jno
das
xor
lcall
ljmp
sbb
test
cmp
push
fcmovb
pop
push
test
xchg
adc
xor
mov
gs
bound
into
into
cmpsl
nop
or
nop
sub
pop
arpl
mov
fidivrl
adc
inc
xchg
pop
and
or
out
add
loop
loop
jno
mul
test
pushf
lahf
sti
pop
or
cmp
mov
fiaddl
fldcw
adc
fisubrl
imul
fstpl
add
jns
imul
rcrl
add
cltd
mov
pop
inc
in
roll
ficoms
jmp
popa
rcrl
cli
in
divb
cmp
out
mov
fldt
xchg
xor
mov
aad
and
fidivrl
xchg
sbb
push
je
mov
in
mov
gs
xor
stos
fnstsw
jae
adc
xchg
pop
jle
adc
pop
adc
mov
pop
repnz
add
push
mov
mov
inc
xchg
fdivl
inc
call
sti
sbb
rcrb
dec
sub
cmp
mov
add
sub
aaa
lret
loope
mov
cmp
movsl
and
xor
sub
dec
push
push
aam
fidivl
imul
sub
mov
inc
push
and
movsl
pop
arpl
cmp
xchg
inc
daa
mov
sti
les
mov
sub
std
xor
std
call
mov
jecxz
push
fs
es
and
xor
cmpsl
xchg
fcmovbe
push
aad
mov
loopne
fdivrp
js
insl
loope
dec
orl
ror
aas
xchg
test
hlt
pop
or
cmpsb
outsl
pop
or
xor
test
xchg
pop
fs
jns
lcall
mov
dec
jns
or
xlat
cmpsl
sub
mov
inc
sub
pop
dec
les
jmp
xchg
xchg
sbb
call
xor
sbb
xor
daa
mov
xchg
jns
xor
pop
hlt
mov
pop
pop
sbb
push
test
jbe
rorb
inc
addb
into
imul
add
addr16
jge
push
hlt
test
mov
cmc
daa
cltd
outsl
movsl
arpl
aam
xor
mov
xchg
inc
jbe
cltd
loopne
push
clc
stc
rcl
jb
lods
sbb
xchg
ljmp
leave
loope
fs
aad
and
lahf
mov
push
jg
ss
cmp
lahf
fdivrs
sbb
and
dec
jnp
outsl
mov
push
sbb
adc
scas
adc
sbb
push
in
pop
insl
inc
shlb
loopne
jle
icebp
test
or
rcl
dec
aam
xchg
gs
sti
stos
jle
int3
gs
mov
inc
rcll
jg
rclb
xor
sub
and
out
xchg
or
cmp
mov
outsb
lods
xor
fs
jge
rol
add
pop
imul
jmp
pop
jbe
mov
mov
jle
lret
jnp
cmp
lods
mov
mov
idiv
aad
cwtl
sub
jl
jnp
test
sbb
pop
loop
mov
mov
sbb
es
jecxz
nop
xchg
pop
popf
insl
mull
sbb
enter
or
adc
in
in
addl
aad
lods
jb
pop
hlt
mov
xchg
aad
jecxz
pop
bound
fnstcw
rorl
ficompl
popa
scas
xor
inc
xlat
xchg
adc
add
mov
aas
sbb
sbb
dec
jbe
mov
push
sahf
mov
push
adc
cmp
mov
adc
fst
sub
jns
and
mov
mov
xor
fdiv
cmpb
adc
xor
lret
popa
xchg
shl
lcall
int3
enter
xchg
rclb
jae
and
imul
gs
jo
xor
hlt
je
leave
aam
xchg
adc
jle
pop
sub
lds
dec
lods
loope
xor
cmp
jnp
mov
lea
cmpl
addr16
push
out
int3
pop
pop
fs
sbb
adc
mov
fbstp
pop
rol
mov
and
jge
and
call
jecxz
aam
fwait
and
xor
out
scas
sub
idivl
xchg
add
adc
sbb
and
mov
insl
mov
insb
cmp
or
test
dec
notl
stos
gs
sub
xor
mov
lods
xchg
aam
inc
adc
inc
push
neg
insl
mov
jae
pop
push
outsb
insl
leave
add
aam
and
pop
sbb
lea
add
pop
pop
imull
fisttpl
mov
pop
pop
and
inc
sbb
push
fwait
arpl
jmp
mov
xor
adc
cmp
cmp
mov
or
pushf
scas
add
and
mov
ljmp
mov
mov
clc
cmpsb
test
outsb
stos
ret
cmp
sub
adc
lret
push
hlt
shlb
movsb
mov
jle
test
int3
inc
mov
loopne
cmp
push
jg
pushf
ss
cs
pop
sbb
mov
sti
mov
inc
sbb
pop
daa
leave
lds
imul
inc
insl
xchg
stos
mov
fisubl
movsb
sub
fisubrs
jge
dec
outsl
ds
aad
clc
iret
inc
es
ret
and
or
xor
mov
sahf
dec
xchg
sbb
jg
inc
lods
idivl
shlb
das
js
fcmovnb
dec
xor
jecxz
adc
xchg
sbb
add
pop
fnstsw
in
fwait
add
out
cmpsb
pop
inc
int
aas
mov
xchg
or
adc
jb
icebp
test
roll
or
out
sbb
and
shll
lods
into
mov
push
xor
push
arpl
add
cltd
inc
pop
jbe
dec
aad
sahf
clc
cmp
mov
outsb
cmc
mov
and
jbe
jle
mov
sub
adc
and
inc
notb
jno
jecxz
test
ja
sub
or
jb
sub
jo
adc
or
jle
inc
ficoml
inc
movsb
jle
push
rolb
pop
push
inc
rorb
aam
mov
gs
popf
lret
ja
sti
jmp
pop
pop
cli
and
inc
mov
movsl
rorw
int
add
xchg
shlb
mov
xorb
ja
fdivrl
xchg
push
xchg
mov
inc
jns
dec
xchg
cltd
sti
mov
push
fsubs
xor
in
popw
mov
add
pusha
mov
lret
scas
jo
adc
mov
push
fs
and
add
pop
push
mov
xor
pop
xlat
jbe
bound
jle
add
fstpt
hlt
cwtl
pop
mov
xor
push
loopne
add
scas
xor
and
mov
cmp
mov
sbb
or
or
sahf
lahf
add
push
inc
add
aas
mov
jo
cmpsb
rol
mov
fs
xor
adc
pop
push
sub
lds
scas
and
inc
lea
xchg
pop
xchg
push
in
cmc
mov
in
and
adc
sbb
and
pusha
push
inc
push
out
mov
push
lret
jmp
and
pop
sub
jp
cmp
dec
insb
ss
jmp
mov
pop
add
out
sahf
aaa
fstpl
mov
xor
leave
icebp
popf
test
insb
stos
inc
and
imulb
loopne
bound
scas
inc
test
jb
jbe
ret
in
jl
dec
push
push
adc
xchg
lds
jb
sahf
fs
adc
dec
mov
mov
xchg
mov
jae
in
cmp
out
cli
loopne
lods
dec
mov
inc
pop
out
bound
ja
ret
psubusw
sti
sarb
cmpsb
mov
push
and
pop
adc
loopne
push
cmp
nop
add
xor
sub
mov
cmpsl
add
out
mov
aaa
cmp
movsbl
push
cmp
cmpsb
mov
and
cmpsb
xchg
cmp
jmp
add
pop
cmp
mov
xchg
insl
insl
leave
jno
xor
fcompl
pop
push
mov
int
adc
fdivrl
inc
bnd
jl
sub
out
lods
inc
cmp
cmp
mov
loope
repz
dec
cld
jp
cmp
xor
jbe
int3
inc
das
push
adc
push
jo
sub
jecxz
movsb
sub
push
xchg
xchg
mov
xchg
scas
cmpsb
mov
lcall
inc
push
icebp
pop
xchg
pop
ss
cmpb
cmp
pop
xor
push
mov
xchg
scas
xlat
sbb
int
push
add
or
sahf
sbb
lcall
mov
in
arpl
jmp
stc
mov
mov
test
popf
xor
xchg
lahf
stos
push
sbb
push
mov
fisttpll
fdivp
and
pop
push
jnp
add
mov
addr16
xchg
sub
nop
add
lock
int
push
add
popf
mov
in
dec
test
inc
push
adc
lahf
sarl
bound
mov
ljmp
cmp
inc
int
adc
xor
and
cmpsb
jo
jo
jbe
in
pop
ret
push
jp
mov
adc
inc
inc
adc
mov
dec
jnp
rcll
fs
pop
mov
dec
cmp
mulb
push
mov
push
test
sbb
sub
xor
int3
shr
shl
ljmp
xchg
and
pop
lea
pop
in
movsl
xchg
in
mov
push
test
jecxz
std
lret
sub
lret
ret
and
ljmp
lahf
and
cmpsb
notl
sub
inc
out
xchg
dec
push
lret
fnstenv
es
jge
push
sbb
sub
lods
cmp
out
dec
xor
mov
inc
adc
mov
sahf
repz
sub
das
js
jno
cmp
push
adc
or
cmp
sub
mov
or
xchg
inc
xchg
imul
mov
jg
push
adc
sub
nop
add
pop
aam
dec
jns
int
pusha
xor
xchg
fninit
js
insb
or
lock
add
jmp
sbb
sub
addr16
xchg
mov
and
inc
into
div
sub
xor
cld
sub
add
and
nop
gs
cld
push
lret
sbb
int3
jge
adc
xor
push
sbb
xor
push
mov
inc
adc
iret
shrb
mov
rorb
js
cmpsb
mov
push
pop
outsb
jo
push
push
pop
xchg
and
nop
hlt
mov
sbb
xchg
dec
mov
clc
push
and
orl
imul
sub
ret
addb
push
insb
pushf
ljmp
das
fwait
mov
push
jae
cmpb
mov
ret
xor
dec
movsb
xor
dec
cmp
int
arpl
mov
push
into
nop
loop
dec
mov
in
rcrb
shrl
shlb
fsub
xor
push
pop
pusha
ficomps
cwtl
cmpsl
in
add
call
fsubl
jmp
jnp
fisttpl
push
out
sbb
xchg
pop
pop
cmp
jg
or
xor
adc
xlat
lret
rcr
imul
jge
jno
mov
addb
sbb
lret
repz
ds
mov
lahf
mov
dec
decl
sbb
lods
xchg
lret
jg
dec
fdivr
in
ss
pop
outsb
ror
dec
push
mov
lea
or
ret
mov
lea
daa
sti
inc
xchg
or
in
aad
fwait
dec
cmpsl
outsb
or
insl
call
mov
out
jo
xchg
mov
mov
inc
mov
cmp
or
jecxz
adc
lea
jle
add
xchg
mov
leave
adc
sub
imul
or
dec
jp
dec
sub
outsb
lret
sub
into
jmp
in
pusha
scas
rcll
mov
cmp
add
mov
push
pop
sub
negb
movsb
mov
into
lcall
andl
lret
inc
int3
cmp
data16
vpandn
jne
sti
xor
andl
test
insl
push
add
xor
or
adc
cmp
inc
test
jne
sbb
int
and
xor
cmp
ficoms
int
or
push
mov
cmp
fidivl
dec
test
cmp
into
sti
dec
dec
popf
dec
mov
imul
pop
add
inc
hlt
mov
fisttpl
sti
push
inc
mov
add
xor
xor
push
data16
mov
xor
mov
arpl
adc
mov
add
aad
push
sbb
das
imulb
pusha
push
jo
xchg
cmp
mov
dec
or
jge
aaa
insb
in
jno
cmp
xorb
das
scas
jno
shr
inc
orb
inc
cmpsb
sti
and
xchg
cmc
rolb
push
jo
mov
jno
les
xchg
int
xchg
ret
notl
dec
scas
add
dec
xchg
outsb
sbb
push
daa
loopne
xchg
iret
aad
repnz
add
dec
insb
xor
sbb
and
xchg
and
xor
mov
jbe
je
inc
hlt
ret
clc
add
das
in
scas
pop
bound
sub
cmc
in
push
pop
insb
iret
add
int3
mov
sbb
inc
in
je
sbb
cmp
jbe
inc
sub
sbb
mov
pusha
pop
xchg
orb
adc
cwtl
sahf
ja
push
test
push
into
fnstsw
loope
cmpb
mov
mov
sbbl
pop
dec
push
push
lock
add
mov
lock
fistl
bound
mov
pop
icebp
mov
fs
lret
or
xor
idiv
stc
popa
inc
ds
pop
imull
pushl
xchg
mov
imul
pop
mov
sub
add
xlat
mov
sub
inc
cmp
mov
xor
loope
sub
push
daa
adcl
mov
mov
aad
mov
dec
inc
in
leave
xchg
xchg
shl
jb
mov
loope
in
shll
ret
int3
sbb
push
xchg
inc
std
mov
or
lret
lods
and
mov
xchg
xor
arpl
pop
cmp
fiadds
icebp
frstpm(287
or
xchg
or
insl
lret
pop
out
cmpsb
test
mov
test
mov
sbb
sbb
sub
pop
xchg
pop
leave
xchg
cwtl
aam
adc
pop
test
aas
mov
orl
insl
mov
pop
stos
jb
push
push
int3
cmp
jbe
mov
ret
mov
add
cmp
imul
xchg
out
into
cmpsb
push
lock
push
xor
out
cmp
addr16
rcrb
xor
lret
cmpsl
movsb
inc
xchg
int
insb
dec
mov
inc
jl
or
or
test
je
sub
xchg
cmc
adcl
jbe
icebp
insb
xchg
out
out
rolb
add
push
jmp
sub
mov
std
mov
sar
rorb
xor
out
cmp
cmp
stos
incb
xchg
addr16
es
rcr
jbe
dec
enter
jae
dec
push
sub
out
gs
or
popa
stos
adc
leave
push
mov
repz
fcomps
insl
adc
and
shlb
sub
mov
cmp
ds
cmp
clc
loop
sub
lea
xor
jb
add
or
bound
add
cltd
sbb
jns
and
mov
rol
in
push
enter
mov
inc
jecxz
je
shlb
ljmp
push
xlat
xor
es
sahf
jmp
mov
imul
std
xchg
addb
rclb
and
sub
cltd
mov
call
sbb
fcoml
data16
dec
cmc
test
outsb
pop
push
add
add
dec
cld
sub
repz
push
sahf
adc
jb
cld
into
mov
inc
clc
popa
dec
aaa
or
inc
push
out
and
pop
xlat
inc
mov
cmp
xchg
jg
aaa
inc
add
and
sahf
xchg
es
jo
dec
adc
add
dec
out
int
invd
mov
jno
push
push
mov
inc
mov
test
pop
out
and
call
jne
test
mov
movsl
mov
jae
cltd
mov
push
pop
mov
jmp
orb
or
into
pop
mov
adc
inc
inc
cld
mov
push
dec
out
and
mov
xorb
inc
mov
fcmovne
fildll
pop
cltd
clc
or
imul
addl
aam
add
stos
mov
sub
or
dec
inc
cmp
aam
out
xor
in
inc
loop
int3
test
sub
hlt
je
insl
cmpsb
sbb
and
loope,pn
enter
vmovss
pop
push
insl
pop
adc
mov
cwtl
inc
into
dec
je
subl
fadds
aaa
dec
lods
xor
mov
adc
or
addr16
jl
jmp
jnp
mull
dec
dec
lods
mov
loopne
or
xchg
jg
dec
cmp
mov
fiaddl
dec
lret
sub
mov
xchg
dec
mov
fldl
loop
add
cld
jg
add
jl
jmp
sti
mov
mov
stc
xor
adc
loopne
add
push
pop
inc
jns
into
es
mov
xor
pop
inc
fsubrs
jmp
sbb
xor
mov
xchg
sub
js
les
outsl
negb
es
cmp
mov
mov
inc
loopne
jmp
pop
sbb
cmp
xor
dec
mov
jmp
add
dec
sub
mov
push
cmpsb
loopne
xchg
pop
jbe,pn
insl
hlt
iret
mov
outsb
sbb
lds
and
and
cli
mov
test
scas
push
xorb
imul
push
stos
subb
or
scas
sbb
mov
sbb
jecxz
dec
push
sub
push
cmc
lock
imul
jmp
jne
or
xor
jmp
repnz
jl
mov
xchg
xchg
push
int
cli
in
dec
push
xor
xor
ds
sbb
testb
gs
fldcw
xchg
fdiv
cmp
sub
ds
sub
pop
imul
cmp
cs
out
fwait
pop
and
lock
xchg
hlt
in
cmp
pop
push
xor
push
imul
pop
dec
inc
cmp
or
sub
mov
stos
add
and
ds
mov
test
xchg
out
idivb
fbstp
cmpl
sub
ds
push
andl
aam
sahf
in
xor
loopne
xor
add
insb
mov
enter
scas
push
orb
push
sub
ljmp
mov
lahf
mov
movl
dec
dec
std
cltd
inc
or
adc
add
sbb
loope
loop
dec
lcall
push
pop
and
je
clc
and
jae
sbb
cmp
hlt
fsts
push
inc
mov
jmp
adc
and
xor
aaa
daa
ficomps
sbb
lcall
call
out
push
mov
mov
xor
cmpsl
iret
sub
jno
call
arpl
push
fimuls
jb
add
pop
push
roll
adc
inc
outsl
xor
int3
leave
mov
fsubrl
push
pushf
mov
mov
mov
mov
aad
add
mov
outsb
push
loop
lret
aaa
cltd
mov
lods
add
lahf
jmp
repnz
lods
fimull
aad
test
sbb
leave
dec
or
sarb
cmpxchg
mov
lahf
jae
cmpl
sub
dec
push
out
rcrb
int
or
and
popl
adc
pop
hlt
cltd
sub
adc
and
mov
insb
les
rcrl
and
sbb
add
pusha
cmp
xor
push
mov
push
add
xor
arpl
inc
push
mov
out
push
push
cmpsl
test
add
gs
jecxz
sbb
mov
or
lahf
int
lock
scas
test
hlt
cli
dec
dec
add
mov
ss
in
lds
test
loopne
fisubrl
xor
faddl
sub
mov
dec
sti
lods
sbbl
jb
xor
xchg
out
mov
push
enter
push
mull
fbld
mov
das
push
cmp
mov
cmpsb
mov
cmp
lods
dec
movsl
dec
cmp
mov
fidivrl
mov
push
cmpsb
lahf
and
lds
rolb
loope
dec
push
jbe
fstps
mov
xchg
add
iret
out
aas
push
adc
in
xchg
jnp
test
cmp
imul
sbb
jne
cli
mov
ret
jecxz
push
adc
jg
out
mov
sub
sub
cmpsb
lret
mov
inc
jno
test
inc
sti
cmp
sti
sub
xor
idivl
dec
lcall
add
sub
pushf
in
mov
ja
cli
out
iret
cmp
in
shll
cmp
dec
mov
jo
xor
jb
hlt
lds
jmp
ret
mov
push
ret
inc
sub
in
add
jo
dec
jmp
negl
lea
dec
inc
outsl
mov
mov
stos
bound
out
cmp
into
and
cmp
mov
sbb
fs
hlt
sti
leave
mov
insb
inc
sbb
or
hlt
sub
ret
mov
add
mov
mov
cmpb
add
aas
testl
or
fs
sbb
frstor
ljmp
push
cmpsl
mov
iret
push
cmp
mov
enter
pop
lds
dec
and
adc
pop
iret
xor
fsubl
daa
popf
clts
idivb
movb
fmuls
stos
fdivp
or
es
push
add
jecxz
sbb
rclb
cs
jno
xor
push
repnz
filds
jae
fs
stos
ja
hlt
test
cmc
push
mov
mov
sub
repz
mov
cwtl
sub
subb
dec
cmp
std
push
cmp
insb
or
shrb
sub
jp
std
in
popf
stc
lea
sub
mov
scas
mov
sbb
and
cs
xchg
rcrb
test
mov
cmp
jecxz
enter
xor
fistpll
mov
inc
call
lods
xchg
mov
adc
cltd
push
lods
cmp
xchg
scas
dec
icebp
fs
dec
cmp
sub
cwtl
dec
mov
pop
mov
adc
mov
mov
push
pop
jmp
adc
or
and
jmp
xchg
push
adc
in
mov
jle
jecxz
mov
push
imul
push
pmullw
sub
jg
mov
cld
movsb
lret
and
ja
repnz
and
test
pop
pop
mov
and
or
xlat
jo
cmc
inc
movsl
mov
fisttps
inc
inc
insl
sbb
push
movsb
push
daa
push
test
pusha
inc
mov
mov
sbb
repnz
sahf
adcb
bound
test
jno
pop
enter
and
cmpsl
pop
fiaddl
icebp
pop
push
dec
xor
loope
pop
imul
rolb
pushf
jae
add
out
dec
fsubrs
repz
dec
test
cmp
mov
insb
push
mov
pop
dec
cmp
sub
call
dec
out
mov
sub
idivb
mov
mov
push
into
jge
mov
sbb
sbb
fisttps
dec
mov
cmp
xor
fldl
in
js
mov
movsl
sub
sbb
ljmp
inc
inc
insl
jnp
loopne
jno
in
inc
lret
push
sti
fcmove
nop
mov
dec
loope
sbb
cs
sarb
mov
lea
mov
push
sub
mov
sbb
cltd
xor
add
and
xchg
jb
iret
sahf
popa
xchg
fisubs
xchg
idivl
daa
in
push
stos
and
lds
dec
je
std
jnp
gs
sub
iret
jp
fcompl
cs
sahf
jbe
or
inc
fstpl
pushf
subl
xor
adc
add
add
outsl
adc
js
sarl
scas
rcl
or
add
fwait
or
xchg
cmp
mov
aas
sub
push
jmp
jl
pop
sub
xchg
sub
inc
loop
and
mov
sub
dec
shll
stc
inc
out
pop
sbb
adc
mov
cs
push
xchg
and
inc
test
sub
leave
push
leavew
pop
cmpsl
pop
bnd
loopne
add
jns
sbb
ret
dec
xchg
sbb
jae
movsb
mov
insl
sar
add
jmp
fcoms
repnz
dec
and
or
popf
mov
mov
mov
pop
ret
les
outsb
ficoms
inc
push
xchg
pop
push
out
cmp
scas
pop
int
test
call
je
aad
dec
test
lar
js
xchg
mov
push
xlat
movsl
cltd
in
into
nop
and
jo
jp
jecxz
ljmp
ret
cltd
inc
adc
fucomi
mov
add
xchg
sbb
or
and
xchg
cmc
pop
mov
and
mov
je
dec
out
lcall
ja
and
es
cmc
out
cld
hlt
mov
pop
mov
push
mov
aaa
ss
dec
subl
mov
add
cmc
stos
xchg
xchg
cmp
pop
in
inc
xor
mov
mov
dec
pop
mov
repnz
shl
jge
jle
pop
xchg
pop
push
xchg
or
enter
dec
add
dec
push
add
stos
es
std
gs
je
xchg
repnz
adc
fidivl
gs
je
jge
cli
mov
cwtl
sbb
into
xor
mov
pop
lea
iret
roll
fs
pop
daa
lret
scas
push
mov
cmp
sahf
or
pop
data16
adc
push
or
inc
mov
cmp
inc
dec
mov
in
lods
ds
push
mov
gs
jl
addr16
cmp
cltd
js
dec
jae
dec
and
jo
stc
jp
mov
mov
fdivrs
ror
dec
cmp
lret
adc
adc
or
sahf
scas
lods
popf
and
sar
push
mov
pop
sub
or
repnz
push
scas
mov
clc
mov
jns
xchg
mov
imul
mov
movsl
mov
call
nop
pop
sahf
inc
add
xchg
into
pop
dec
iret
fadds
cmp
insl
int
cmp
lret
adcl
fwait
js
sbb
stos
xchg
ret
aas
inc
lcall
or
lea
test
mov
push
lock
sub
cmp
mov
dec
in
into
and
fistpll
mov
stc
hlt
fldt
xchg
outsl
mov
je
leave
jb
je
mov
in
lcall
sub
pop
pop
sbb
pop
xchg
bound
arpl
test
fidivrl
test
add
xor
cmp
mov
fwait
push
insl
jb
cmpsl
cltd
lret
call
ja
das
pusha
mov
and
add
stos
test
ret
xchg
push
das
rcrb
imul
je
and
outsb
push
fsubrl
pop
mov
mov
mov
iret
pop
fwait
test
sub
jns
inc
loop
add
dec
cmp
mov
aad
cmp
leave
cwtl
je
shr
xlat
xchg
mov
andb
jecxz
and
pushl
into
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
push
push
addb
popa
add
mov
pop
jl
addr16
pop
es
ret
std
fidivrs
frstor
lahf
push
pusha
xor
cmpsl
pop
cmpsl
lahf
negb
les
out
orb
int
mov
subb
call
add
in
and
push
in
lods
ja
cli
cmp
dec
sub
jo
clc
jne
sarb
xchg
hlt
aas
mov
pop
sarl
fisubrs
ja
jbe
jle
imul
and
push
movsl
test
push
lock
push
cmpsl
and
mov
inc
test
dec
and
pop
clc
sti
cltd
jne
inc
addb
movsl
cmp
mov
cmc
aas
xor
cltd
in
pop
sahf
lds
gs
mov
stc
dec
into
ljmp
pusha
dec
cmp
pop
fs
mov
dec
xlat
push
mov
mov
daa
inc
repz
iret
jg
and
lods
sbbl
mov
cmp
jge
ds
repz
push
inc
ret
xchg
scas
stc
divl
mov
fcom
xchg
mov
test
orb
test
xor
roll
daa
cmp
in
or
push
push
shlb
insb
testb
lds
scas
jg
mov
mov
in
arpl
scas
movzwl
cmp
xchg
movsb
cmpsl
fs
repnz
mov
adc
mov
push
adc
mov
les
add
vpunpcklqdq
je
jmp
xchg
cli
sti
dec
mov
inc
xchg
data16
adc
pop
jns
cld
cmp
fbld
pop
cmpb
ds
ds
daa
test
cmp
test
in
repnz
pop
inc
clc
pusha
imul
pop
ja
fld
out
rolb
inc
rcrl
mov
shll
ljmp
mov
sbb
inc
pop
cltd
adc
inc
inc
mov
test
cmp
jnp
sbb
mov
jp
or
lock
insb
cmp
inc
xchg
outsl
jae
pop
lret
mov
aad
clc
pop
stos
jno
shrl
mov
icebp
lea
cmp
push
mov
lock
scas
push
fs
xor
hlt
adc
sti
lds
and
shlb
ljmp
sbb
or
sub
testl
and
sbb
dec
mov
sbb
pushf
xchg
dec
xor
fmull
sub
and
fucom
in
shl
fsubp
jns
mov
scas
daa
popa
sub
dec
xchg
cmpsb
and
loope
or
adcl
xchg
push
push
sub
or
pop
sub
mov
push
ffreep
inc
mov
inc
rolb
cwtl
bound
das
xor
mov
and
lcall
fs
ss
jmp
sbb
sbb
jge
inc
pop
mov
xchg
mov
js
aas
fiadds
loopne
call
scas
mov
rolb
int3
xchg
ret
and
cmp
imul
icebp
out
sub
jmp
out
xor
ret
or
sbb
jbe
imul
jg
inc
nop
addl
notb
fsubr
pop
insb
addb
gs
neg
in
push
js
into
xchg
or
call
mov
mov
in
or
pop
fisttpl
mov
jnp
xor
out
stos
xchg
clc
xor
addr16
leave
jmp
hlt
stos
mov
notl
xchg
stc
dec
andl
rclb
rorl
pop
or
into
pop
sahf
xor
aas
sub
std
in
mov
loopne
sbb
add
loop
inc
jnp
mov
dec
mov
decb
aas
rorb
shrl
outsl
or
ret
sbb
dec
pop
mov
lret
rol
out
or
call
and
insb
mov
cs
iret
cmp
inc
sbb
jo
js
ret
push
lret
outsb
pop
sub
inc
je
repz
lea
in
std
fidivrs
mov
das
js
pop
xchg
push
mov
stc
aad
std
mov
lahf
pop
lahf
lret
xchg
push
sbb
or
cmp
popf
inc
adc
das
sub
pushl
xor
push
and
mov
sbb
pxor
jne
mov
inc
insl
push
cltd
subb
sarb
iret
xor
xor
sbb
test
js
test
pop
and
ficomps
jp
push
jo
sbb
loopne
repnz
xor
pushf
rcrb
lods
dec
sbbl
fsubr
push
cmpsb
push
loope
and
cmc
dec
mov
inc
xor
jo
jge
testl
mov
xchg
cmp
popf
ret
jnp
xchg
rcl
inc
mov
jns
dec
out
lods
lods
add
cmpsb
jb
adc
mov
adc
out
addr16
testl
lock
pop
fdivl
pop
lahf
mov
shlb
xchg
mov
stos
aas
xor
loopne
testb
fsubrs
imul
fdivrs
cmp
icebp
push
lret
test
sbb
sbb
mov
add
gs
aam
jge
mov
inc
stc
in
inc
shlb
rclb
fs
shlb
scas
push
sub
mov
mov
pop
aaa
xchg
pop
push
mov
jne
lret
sahf
xchg
sbb
pusha
pop
pop
and
outsb
sub
jo
mov
mov
ss
sbb
hlt
adc
idivl
jl
aaa
in
imul
fs
jb
pop
sub
xchg
jne
icebp
outsl
jne
movsb
inc
icebp
addr16
in
jns
sub
lret
test
pop
push
jae
decb
xchg
enter
out
lcall
loope
add
xchg
outsl
jnp
cs
loopne
stc
dec
inc
jo
dec
inc
out
ds
xchg
jmp
rol
inc
sbbl
imul
in
push
jp
adc
in
adc
imul
mov
sbb
sbb
jnp
clc
outsb
dec
xchg
pop
and
add
adc
aas
jns
xchg
aaa
orl
xor
lcall
cmp
and
cmp
xchg
cs
scas
xlat
stos
or
and
cmc
pop
in
daa
cmp
mov
mov
xor
or
xchg
addr16
fsts
ds
shl
and
into
fwait
pop
outsl
jle
mov
not
data16
aaa
sti
sbb
and
mov
add
mov
fsts
je
fcoml
mov
xchg
test
fmuls
ror
mov
or
repz
mov
lea
xchg
push
in
test
xchg
rclb
jmp
push
mov
mov
cmc
dec
inc
xchg
mov
xchg
jno
xchg
sub
jp
push
test
adc
cmp
nop
lds
lret
inc
cs
inc
in
imull
es
mov
rcll
shrb
lahf
jmp
mov
jecxz
mov
int3
dec
imul
rcr
mov
push
push
sub
pop
fimull
cmc
xor
cmp
lea
out
int
pop
adc
cli
aas
add
hlt
jb
loop
shrl
andb
sti
inc
and
xor
sub
cmp
hlt
loope
and
test
test
movsl
ret
sub
pop
lea
mov
repz
dec
cmp
dec
or
pop
repnz
inc
sbb
xchg
arpl
xor
mov
fs
fisttpll
out
push
cmpsb
dec
les
mov
lret
push
pop
repz
push
enter
jecxz
insb
orl
push
jns
mov
adc
push
mov
jns
mov
cmpsl
pop
adc
fdivr
decl
clc
call
dec
dec
in
xchg
pop
pop
jnp
mov
push
movsb
sahf
sahf
jge
jnp
lahf
scas
ljmp
inc
adc
adc
in
xchg
jmp
loopne
pusha
or
notl
sbb
test
mov
push
pop
in
cli
arpl
mov
xchg
addr16
jp
inc
adc
sarb
push
cwtl
outsb
cmp
cmp
cmpsb
pop
push
lds
mov
ds
int
movsl
mov
add
sahf
jg
mov
jbe
push
clc
lods
cli
insb
dec
and
leave
movsl
cmp
mov
leave
xchg
loope
cs
push
pop
jge
movl
and
pushf
imul
dec
and
iret
loopne
cmp
idivb
jle
mov
jb
pop
add
pushf
ret
push
test
add
stc
jecxz
jb
fmull
out
xor
xchg
lods
inc
subl
subb
shr
sti
push
mov
das
bound
out
ficoms
and
enter
cmpsl
iret
movb
mov
insl
sub
sbb
insl
ret
je
jb
mov
fimull
xlat
addr16
out
mov
xchg
mov
and
nop
dec
xchg
sub
loop
sub
inc
outsl
mov
ret
xchg
insb
mov
dec
adc
stos
adc
bound
inc
mov
sbb
jns
mov
mov
test
insb
dec
or
scas
xchg
mov
mov
mov
out
in
sub
mov
pushf
int
insl
push
sbb
cmp
adc
notb
inc
jmp
mov
sub
adc
ficomps
nop
xchg
adc
add
pop
movsb
adc
jge
cmpsb
int3
mov
push
cmpsb
sar
out
or
mov
cmpsl
add
xor
push
popa
pop
push
jbe
mov
lret
les
out
std
std
dec
mov
test
mov
jns
jecxz
jbe
pmaddwd
fwait
push
add
fs
dec
xor
pop
and
mov
insb
jns
dec
cmp
xor
out
insb
push
mov
loopne
shrb
sub
popa
leave
fsubs
shrl
or
mov
xchg
shll
adc
inc
dec
dec
cmp
sbb
sbb
adc
jmp
add
out
jmp
push
stc
ror
jnp
fdivs
mov
ret
testb
adcl
cwtl
xchg
rol
out
pop
ss
push
inc
in
fstpt
xchg
jno
fmulp
icebp
push
icebp
push
add
fiaddl
cmp
loopne
jnp
jge
movsl
mov
jae
add
test
xchg
add
or
push
scas
adc
add
lock
out
movsl
sub
push
sub
or
sti
pusha
rcl
mov
stos
movsb
mov
popa
std
ljmp
jg
push
stos
sub
mov
stos
test
mov
sbb
cmp
ss
lret
imul
or
call
mov
inc
rcr
xor
xchg
das
roll
sbb
insl
and
insl
jne
sub
movsb
push
ljmp
es
fwait
test
pop
les
jnp
xor
and
out
std
out
mov
ficoml
pop
lcall
mov
mov
mov
aad
push
ret
subb
rolb
das
movsb
mov
aaa
cmp
scas
jge
movsl
insb
cwtl
repz
shll
lods
lds
notl
sbb
fs
fsubrs
rcrl
test
les
cmp
icebp
das
xchg
dec
jle
rolb
inc
fcmovnu
and
push
cli
add
mov
inc
stos
or
jg
popa
bound
ljmp
xchg
je
xor
aas
andl
and
test
clc
call
sti
ffreep
stc
dec
loopne
adc
sub
jns
pop
add
dec
clc
add
jl
mov
sbb
ds
hlt
scas
stc
mov
and
add
stc
call
jge
xor
pop
dec
int
addr16
fldcw
cmp
or
cltd
xchg
add
nop
fcoml
mov
push
daa
mov
push
sbb
sub
mov
add
xor
add
aaa
je
jbe
popa
pop
dec
test
xor
or
dec
mov
outsb
fildl
add
mov
push
sub
pop
es
sbb
and
sarb
mov
push
mov
mov
xor
cld
push
xchg
add
and
pop
lock
dec
mov
iret
mov
popf
and
lock
mov
fisubl
outsw
incb
add
scas
enter
fs
mov
inc
mov
out
sbb
pusha
or
aas
mov
popf
iret
mov
imul
inc
je
fs
add
jle
sub
sbb
mov
sub
imul
push
and
addb
popa
sbb
jae
bound
je
ret
stos
lcall
fidivrs
xor
arpl
mov
stc
das
push
mov
add
idivb
jb
cld
jcxz
xchg
push
bound
insl
sbb
ror
adc
add
sbb
inc
cmpsb
loope
hlt
mov
cmc
dec
pop
leave
inc
adc
mov
mov
mov
orb
lret
fsubr
cwtl
lods
data16
add
pushf
jo
pusha
fdivrl
sub
mov
rcll
jbe
hlt
cltd
mov
and
out
xchg
aad
es
jge
xchg
fimull
pop
lret
sahf
fs
adc
bound
mov
imul
outsl
jbe
inc
inc
jge
daa
inc
jle
push
xor
incl
pop
pop
test
sub
add
out
xor
push
pusha
and
sahf
jmp
jns
jg
stos
inc
std
push
lods
insl
cld
loope
and
fidivrs
fs
ret
mov
js
push
out
daa
mov
cs
add
sbb
pop
inc
hlt
xchg
push
into
call
nop
pushf
jae
mov
stos
pop
aad
ud0
cmp
adc
dec
or
imul
push
inc
pop
inc
add
pusha
sbb
fdivrl
inc
pop
dec
or
pop
cmpsl
xchg
pushf
lret
scas
mov
and
xor
repnz
nop
mov
arpl
pop
lret
fimuls
xlat
ja
jp
test
push
in
push
inc
stos
dec
je
xor
push
cmc
push
cwtl
adc
pop
and
cwtl
in
and
int3
push
xor
xchg
stc
push
scas
je
cmp
fsubrs
out
add
dec
rolb
push
push
clc
pop
out
mov
fstps
movsb
push
cmp
incb
pop
dec
push
shlb
jp
mov
push
test
jns
js
pusha
stos
or
arpl
not
pop
mov
repnz
cld
std
frstor
mov
mov
or
and
pop
push
adc
ljmp
arpl
or
push
les
jecxz
sub
add
sbb
andb
cmpsl
mov
in
mov
into
pop
sub
test
push
sbb
test
xchg
inc
pop
cs
mov
sarl
dec
stc
dec
or
add
xlat
xchg
mov
pop
jmp
push
nop
xor
rolb
inc
pusha
mov
clc
jnp
push
int3
mov
pop
jg
pop
fidivs
cmp
ljmp
cmpsb
insl
orb
bound
cmpsl
jp
loopne
sub
jle
loope
fidivrs
lret
int3
loopne
pop
nop
rcll
cmp
loope
mov
jae
xchg
and
cmc
mov
stos
aas
mov
iret
cld
sahf
mov
lods
mov
fs
mov
int
je
popa
xor
leave
xor
add
lods
loopne
jne
and
pop
les
mov
mov
lret
adc
dec
mov
inc
pop
add
lret
inc
mov
mov
into
leave
aaa
lods
adc
divb
xor
arpl
jecxz
adc
in
mov
stos
sbb
pushl
xchg
lock
cmpsl
xor
mov
int3
scas
loope
out
xchg
int3
adc
xchg
xchg
cmpsb
daa
hlt
test
loope
mov
mov
leave
mov
cld
lea
push
arpl
push
lcall
jp
mov
lock
lahf
ja
xor
jecxz
cmpsb
pop
jl
and
add
js
cmpsb
ffree
fwait
pop
push
iret
mov
fistps
loope
inc
or
push
xchg
pop
aaa
sbb
popf
xlat
leave
sahf
and
jmp
enter
dec
sbb
loopne
insl
jb
icebp
ljmp
cli
test
std
push
lret
add
push
iret
sbb
push
or
arpl
sub
sarl
sahf
dec
loop
sub
mov
xlat
inc
mov
out
nop
add
jae
mov
jp
std
imul
out
aam
mov
inc
enter
pop
inc
cmp
pop
stc
ds
hlt
and
rolb
xor
cmp
test
insl
mov
fiadds
xor
jge
lds
insb
xorl
pusha
fwait
and
cmpb
ret
test
jge
and
aaa
jmp
imul
or
mov
nop
inc
js
jp
xor
or
pop
out
popf
sub
loopne
push
mov
lahf
nop
fdivl
shlb
insl
push
inc
jge
movsl
test
xchg
sub
jg
out
dec
jnp
adc
pop
outsb
mov
mov
fnstcw
xor
inc
cld
jo
and
testl
mov
dec
dec
in
jp
ss
add
int3
lret
cli
in
sbb
test
into
std
test
mov
mov
adc
out
xchg
int3
std
and
rclb
jmp
sub
lock
adc
xchg
sub
add
dec
mov
popa
add
mov
mov
push
shl
pop
sahf
jmp
mov
insb
sarb
push
cmp
jecxz
cli
call
mov
cmovne
xchg
pop
pop
cs
dec
push
out
roll
dec
pop
cli
jecxz
imul
in
and
or
inc
sbb
in
pop
sahf
imul
cltd
ss
jg
loop
mov
and
mov
add
xor
pop
sbb
jp
mov
cld
mov
aaa
adc
jb
mov
xchg
inc
or
push
pop
sahf
jno
pop
cmpsl
icebp
ljmp
add
jns
xor
adc
fwait
repz
add
cmp
mov
inc
mov
add
pop
mov
lods
cli
xchg
aam
push
loopne
pop
jbe
clc
cwtd
fwait
jns
out
pop
inc
mov
pop
outsb
mov
mov
and
add
and
sbb
aad
xchg
mov
stos
pop
out
push
call
divl
mov
fcoms
mov
mov
sbb
ret
push
outsl
inc
lods
js
out
add
jne
in
gs
xor
push
pop
inc
jl
std
lods
and
sar
in
and
adc
add
jns
mov
dec
aad
xor
ret
out
std
fstl
mov
pop
fs
in
les
sub
pop
test
pop
stos
scas
loope
repnz
sbb
lds
xchg
fs
mov
movsl
or
mov
sub
add
lcall
imul
xchg
call
sarb
adc
lds
pop
inc
cmpsl
dec
daa
mov
js
jae
xor
mulb
pop
pop
cltd
clc
mov
xor
aaa
dec
sub
sub
and
mov
filds
xor
mov
push
leave
cmpsb
xor
addr16
es
push
jge
inc
dec
das
sub
xchg
sbb
sbb
pop
mov
adc
xchg
hlt
imul
fnsave
or
xchg
and
push
xchg
xchg
push
inc
xchg
cmpsl
adc
hlt
cwtl
fistl
jg
xchg
nop
xor
adc
loope
mov
lods
enter
sbb
ss
lret
jecxz
pushf
addl
ret
fcoml
dec
lahf
adc
or
test
and
dec
shlb
scas
out
bound
push
into
repnz
fisttpll
and
jge
lahf
mov
insb
push
fnsave
fldcw
addr16
inc
call
lea
or
mov
frstor
pop
mov
out
mov
cmp
sti
rcrl
inc
xor
fsubrs
push
jg
fcmovbe
lret
sub
aad
and
add
inc
xchg
jl
gs
repnz
mov
iret
jge
inc
lods
aam
pop
fmuls
jmp
cmpsl
rorl
aaa
arpl
gs
pop
stos
adc
add
sbb
cli
nop
add
add
ret
inc
cmpsl
mov
mov
daa
in
loopne
das
pop
rcll
jno
xchg
mov
pusha
jbe
push
and
shl
outsl
stos
out
xchg
inc
dec
bound
ret
push
dec
push
mov
sbb
test
add
push
sub
int3
mov
inc
rorl
pop
ljmp
xchg
push
add
insl
das
and
enter
movsb
into
add
clc
gs
xrelease
dec
pop
adc
xorb
pop
jns
adc
jo
mov
pop
into
jg
fcoml
add
adc
add
daa
xlat
mov
lret
les
dec
es
fcomps
jb
in
sub
lods
inc
pop
xlat
int3
stos
pop
or
rolb
and
insb
repz
data16
movb
xchg
js
call
stc
stos
faddp
scas
mov
out
loopne
int3
mov
inc
incl
inc
les
icebp
add
mov
and
jmp
sbb
xchg
cmpsb
filds
mov
sub
jmp
pop
je
addl
xchg
dec
dec
js
and
imul
lret
sti
pop
xchg
xchg
movsb
in
pop
inc
lahf
mov
push
pop
dec
addr16
clc
stc
icebp
jbe
lret
mov
leave
push
adc
repz
je
pop
mov
pop
mov
addr16
test
inc
push
sahf
call
and
mov
adc
pop
ror
inc
and
add
adc
inc
cli
sub
xchg
xor
aad
aad
arpl
fwait
xorl
ljmp
xor
mov
cs
sbbl
mov
xchg
shl
arpl
scas
or
pop
inc
shlb
into
out
cmp
jle
xor
and
xor
je
adc
arpl
in
xor
sarb
sbb
mov
fs
rorb
sub
xchg
fistpll
iret
inc
repz
jns
or
push
js
cmpsl
push
or
icebp
pop
fildll
lahf
xchg
arpl
mov
ror
rcrl
cmp
shll
adcl
lea
pop
jecxz
popa
lea
pop
repz
leave
rep
cmc
xchg
lcall
inc
sbb
notb
jo
ja
mov
aam
repnz
push
dec
mov
xor
mov
cld
push
scas
jb
btc
sub
add
dec
adc
fstps
add
daa
test
add
adc
push
insl
add
push
and
mov
aaa
cmp
mov
mov
xchg
push
and
add
push
and
test
testb
popf
rcrl
xor
out
popf
jne
xor
popa
adc
xchg
loopne
rclb
dec
rclb
pop
insb
fisubrs
cmp
ja
cmp
sub
ds
movsb
inc
xchg
mov
stos
mov
mov
jecxz
pusha
fs
aam
inc
movsl
and
sbb
xor
ljmp
lock
xor
adc
pop
sub
inc
jecxz
and
fnsave
outsl
mov
jge
sbb
pop
test
insl
xlat
shrl
cmpsl
sub
scas
lret
push
aad
mov
repnz
xor
andl
imulb
cmpsb
cmp
jmp
lods
cmpsl
adc
subl
jecxz
sub
inc
add
cmp
sub
cmpsb
je
pushf
rolb
sbb
idivl
in
leave
enter
and
mov
push
stc
test
inc
out
lcall
leave
jne
call
inc
stos
jmp
ret
sub
mov
sub
mov
ret
xor
mov
sub
sbb
push
daa
and
icebp
mov
inc
loope
push
add
jmp
cmp
iret
inc
inc
movsb
pop
inc
fwait
pop
lret
xlat
xlat
push
mov
xor
or
xor
cmp
inc
dec
call
pop
movsb
aas
test
cmpsl
mov
lahf
sub
lods
jo
mov
xorl
mov
lret
mov
mov
cmc
mov
aam
xchg
adc
cmp
cmc
xchg
outsb
unpckhps
jp
pop
sbb
cmp
push
lret
lds
adc
movsl
jns
mov
popa
mov
mov
jns
and
or
addr16
adc
xor
aaa
mov
repz
js
sub
into
xchg
call
mov
or
mov
fmull
jne
add
outsl
lret
sub
fstl
lahf
loop
jmp
mov
xor
mov
adc
add
lods
inc
dec
cli
or
add
pop
ja
lea
jae
pop
leave
in
and
dec
pop
pop
nop
je
mov
test
lret
xor
cmp
lcall
int3
or
lret
lret
mov
in
mov
add
pop
lcall
inc
mov
add
mov
inc
mov
cmp
and
icebp
jecxz
fld
aad
pop
jae
test
mov
leave
lea
stos
jle
sub
or
fdivs
gs
sbb
sti
andb
lock
xchg
das
fisttps
xor
js
adc
shlb
and
inc
stos
adcb
in
mov
push
outsb
nop
inc
sbb
movsb
mov
or
and
insb
sti
cmp
sbb
data16
dec
lcall
popf
or
bound
xlat
push
repz
out
sbb
gs
add
js
jge
sbb
jge
push
sub
in
outsl
lcall
xlat
popa
int3
arpl
cmp
mov
dec
testl
sub
sub
dec
adc
xchg
jecxz
and
popa
jns
push
adc
iret
mov
outsl
xorb
add
fsubrs
push
lods
testb
popf
mov
sbb
mov
jno
mov
sbb
lds
fsubrl
mov
xor
or
pop
mov
in
gs
or
mov
jno
xchg
cwtl
cmp
mov
mov
mov
jp
sub
inc
pop
mov
insb
inc
into
inc
ljmp
test
mov
test
inc
mov
shrl
mov
iret
jge
cmp
and
addl
xor
insl
out
das
rcl
or
pop
frstor
sbb
arpl
sar
sub
jbe
dec
lods
imul
cli
xor
adc
lret
dec
jno
jmp
or
call
daa
aam
jmp
bound
imul
mov
mov
inc
ss
or
test
mov
fistpl
add
cmp
cmp
fstps
or
sbb
xchg
inc
std
adc
popa
sbb
and
sub
ja
rclb
fstpt
and
add
and
in
jbe
insl
xchg
pop
fidivl
lods
sbb
sub
cmp
cmp
xor
imul
popf
adc
push
xchg
inc
in
sbb
stos
and
pop
ret
pop
pop
sbb
jge
in
fcmovnu
jl
mov
push
or
scas
out
sti
mov
fimuls
aas
xor
lods
cmpsl
jne
popf
xchg
inc
mov
cmp
mov
sub
scas
mov
dec
xlat
hlt
or
movsl
imul
jb
fwait
cmpsl
or
shl
push
inc
sbb
fmuls
mov
adc
inc
xchg
cmc
or
push
pop
mov
dec
pop
and
sahf
rorb
sbb
add
scas
mov
add
lcall
ljmp
cld
sbb
add
daa
xchg
and
adc
sub
scas
fldt
push
pop
rorl
punpckhbw
dec
aam
xchg
insl
test
repz
and
mov
adc
push
js
pop
or
pop
pop
shl
sbb
out
fcmovnu
ret
push
pusha
pop
iret
sbb
cwtl
stc
add
ret
jbe
sbb
push
les
mov
aam
mov
inc
fisubs
movsb
ret
call
cmpsb
pop
xchg
mov
test
jmp
cmp
jns
and
sti
add
lods
cmp
adc
jno
repnz
cmp
js
and
sbb
mov
insl
mov
dec
sbb
sub
popf
pop
and
cld
mov
add
stos
cmp
test
cmp
sbb
aad
sbb
std
jne
pop
ljmp
adc
cmp
mov
cmp
jmp
mov
fwait
ja
aaa
sbb
add
in
fsubl
or
xchg
roll
arpl
adc
mov
sarl
sti
adc
mov
xor
ss
in
ds
fwait
mov
inc
and
dec
xchg
mov
in
fdivr
out
lock
mov
mov
adc
push
jne
mov
repz
mov
sub
cs
andb
pop
push
iret
and
sub
movsb
mov
xchg
fdivs
pop
sbb
inc
icebp
outsb
sub
aam
js
push
out
les
inc
push
bound
jge
or
inc
loopne
mov
dec
shlb
cli
ja
fwait
pusha
ret
mov
cmp
cmpsb
sbb
push
push
mov
dec
lea
xchg
daa
sahf
pop
add
xchg
jmp
pop
mov
divl
fidivl
jae
aaa
mov
xor
scas
pop
fcoml
pop
xor
adc
ljmp
or
ret
stos
adc
mov
mov
or
clc
cmp
and
lahf
inc
aad
mov
jo
vpmacssdql
aaa
or
sub
aaa
push
iret
andl
aad
pop
push
cmovge
ds
mov
xchg
pop
rol
xor
scas
inc
ret
orl
xor
out
ljmp
arpl
adc
sub
jmp
sbb
movsl
mov
inc
lret
sub
add
cli
sbb
pop
xor
je
xchg
inc
rcll
shlb
mov
loop
out
aas
out
out
insb
ret
test
out
sarl
xor
dec
cwtl
lcall
insb
lds
xchg
cmp
mov
int
xchg
jo
add
dec
and
ja
in
fldt
enter
jp
cmp
dec
pop
rorb
pop
in
call
inc
jbe
out
push
mov
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
inc
or
xchg
push
addl
sbb
in
sub
cmc
fldl2t
mov
scas
mov
or
xchg
xlat
jbe
filds
movsl
loopne
clc
mov
pop
or
jne
sar
pop
lret
xchg
jnp
mov
ja
out
xor
dec
dec
shlb
fistps
jmp
adc
cmp
insl
mov
inc
sub
dec
fwait
in
mov
aam
adc
jg
bound
jbe
mov
loope
ja
fnsave
jnp
notb
inc
or
ret
and
je
in
mull
push
or
sti
or
test
sbb
push
repnz
int
xor
cmp
in
jle
fcmovne
mov
jp
jns
mov
bound
adc
cmpb
adc
mov
inc
in
add
xor
dec
in
rcrl
fsubrp
dec
jbe
inc
ja
fstpt
cmp
rep
lods
clc
or
negl
pop
add
sub
sub
mov
pop
adc
out
sub
mov
addb
mov
and
jns
aaa
test
cli
aas
sbb
and
cmp
fwait
push
push
dec
loop
aaa
inc
jo
push
mov
and
xchg
ret
out
adc
push
sti
push
mov
push
inc
mov
sahf
mov
xchg
push
mov
mov
stos
int3
mov
movsl
and
out
punpckhwd
pop
lods
dec
out
dec
xor
push
sahf
and
imul
pop
xor
insb
mov
adc
mov
cwtl
dec
ds
fcom
roll
cmc
outsl
in
call
jnp
mov
or
cmp
sub
out
adc
je
pop
lock
mov
cmp
mov
call
xor
or
pop
and
ljmp
shrb
push
xchg
jns
shr
pop
insb
push
adc
lea
mov
mov
in
fsubrl
pop
inc
out
sbb
cltd
les
ds
cmp
out
addb
adcl
xor
dec
sub
xor
loopne
dec
sub
mov
sub
or
cltd
mov
cmpsb
mov
mov
adc
pop
fdivrl
cs
lret
hlt
test
jae
xorl
push
fldcw
jne
lret
xchg
cmp
add
add
mov
test
dec
xchg
xchg
inc
lds
stos
sbb
insb
cmpsl
ret
pop
xlat
jecxz
mov
out
mov
dec
pusha
dec
sbb
hlt
push
sarb
add
cwtl
lret
mov
inc
in
dec
pop
or
in
jnp
dec
pusha
clc
pop
sbb
mov
insb
jl
cli
dec
inc
ljmp
dec
xor
inc
pop
arpl
inc
pushf
ds
aad
cmp
jmp
xchg
mov
push
lea
inc
movsb
pop
cmp
insl
pop
lock
or
pop
rol
inc
lds
pop
push
or
xchg
inc
jmp
jne
or
adc
and
outsb
cmpsb
sbb
dec
cli
arpl
mov
call
sub
push
sub
pcmpgtd
xlat
cltd
mov
ljmp
or
pushf
pop
mov
aad
testl
call
iret
addb
mov
jae
xchg
dec
or
cmp
xor
ss
insl
xor
cmp
dec
insb
dec
shlb
fidivrl
bound
mov
mov
mov
pop
std
into
cwtl
and
mov
pmullw
mov
xchg
loopne
sub
comiss
movsl
repnz
addr16
scas
xor
cmp
dec
mov
es
mov
xchg
shll
mov
mov
inc
lea
jnp
add
rcrb
and
fdivrs
inc
insl
aaa
movsb
in
shrb
mov
cmp
or
mov
dec
inc
mov
out
call
mov
xchg
sub
jo
dec
inc
sbb
orb
cmp
test
pusha
mov
push
pushf
fstpt
or
xor
pop
inc
jecxz
xchg
or
inc
mov
add
lods
outsl
mov
negb
enter
daa
dec
fcmovnu
mov
nop
pop
lahf
xchg
cmp
fisubs
int
lcall
cmp
jns
mov
sbb
dec
dec
in
arpl
jo
in
cmpsb
daa
lods
inc
lret
jno
movsb
inc
mov
mov
movsb
lods
push
xlat
ja
or
es
cmpsl
insl
pop
shlb
and
lret
iret
pop
mov
cmpsb
and
add
dec
stos
arpl
pop
add
push
fwait
pop
mov
mull
dec
popf
cmc
cmp
ja
inc
push
lock
lods
inc
xchg
cmc
fbld
add
sbb
dec
loop
gs
sbb
sub
pusha
push
repnz
call
sbb
add
stos
out
int3
cmp
or
pop
outsl
aad
and
mov
fcmovu
sbb
adc
into
add
jbe
out
and
popf
cmp
pop
js
lahf
in
dec
loopne
push
leave
fisubl
sbb
add
roll
jns
lcall
decl
gs
sahf
aas
std
pop
out
repz
testl
mov
icebp
mov
mov
cmc
add
cmp
cltd
je
popa
fdivrl
sbb
sbb
not
sbb
pop
push
push
add
stos
push
mov
mov
scas
inc
cmp
popf
push
fists
fidivs
pop
jp
hlt
xlat
imul
xchg
mov
fidivrs
add
push
xchg
daa
push
out
das
cmpsl
jbe
stc
insb
xchg
js
push
xchg
scas
in
das
and
cmp
cmpl
push
test
xchg
imul
jne,pt
test
es
xlat
sub
xor
or
jmp
jb
xchg
xor
imul
xor
out
stc
in
movsl
ljmp
adc
inc
cmp
sbb
push
and
stc
and
popf
pop
mov
xlat
inc
mov
movsl
sqrtps
call
adc
add
and
loope
jbe
test
test
xchg
test
mov
xor
lods
lock
movsb
jle
lea
lock
pusha
call
out
lods
lods
mov
xor
sub
add
mov
add
data16
test
fnsave
sub
test
cwtl
lods
and
and
in
popf
pop
inc
dec
nop
int3
mov
dec
shll
in
and
push
scas
mov
das
mov
push
mov
jmp
test
cmp
in
add
sbb
lahf
add
test
lods
push
dec
mov
lahf
lods
mov
ljmp
mov
sbb
fwait
xchg
in
or
insl
out
cmp
adc
out
push
jl
jmp
test
or
mov
insb
push
iret
test
jle
lds
mov
mov
int3
pop
jp
in
xchg
cltd
mov
inc
stc
cli
sarl
jge
mov
sbb
and
cwtl
add
mov
push
push
iret
mov
call
fimuls
in
in
pop
pop
xor
roll
mov
aaa
rcll
fsub
and
pop
ja
fwait
pop
bound
or
jge
lcall
shl
imul
jmp
dec
sbb
les
and
test
mov
sub
jp
push
in
jp
push
mov
mov
call
dec
sub
shll
test
aas
mov
jp
pop
iret
ds
and
mov
fldcw
xor
cltd
rorl
lret
xor
stos
and
and
mov
jecxz
aas
jg
xor
xor
jo
arpl
pop
inc
ljmp
sub
mov
mov
push
sbb
std
mov
mov
xlat
stc
mov
push
mov
jbe
and
and
loope
test
add
sub
xlat
arpl
fildll
mov
out
bound
imul
push
mov
xor
adc
xchg
bound
std
xor
or
xchg
icebp
mov
sbb
fisubl
cmp
push
dec
mov
jg,pt
jne
adc
or
cmp
add
push
je
out
sbb
dec
push
dec
or
jp
repz
cmpb
add
and
push
shrl
test
mov
pop
jge
test
mov
imul
dec
cmpb
mov
sbb
shll
mov
lret
adc
clc
jnp
or
dec
clc
push
adc
jp
lret
cmp
push
jmp
cmp
popa
pop
imull
sub
push
jae
lods
and
es
jge
fwait
enter
lods
sahf
xchg
inc
dec
mov
and
sub
sti
sbb
sbb
push
dec
hlt
push
std
cmpsb
inc
sub
popf
xor
test
outsb
cmp
dec
in
mov
aam
lds
movsl
sub
repnz
fnstcw
popa
scas
xor
adc
ficompl
fsubl
neg
and
sarb
or
xor
pushl
stc
jl
aam
mulb
mov
stos
cld
cli
xchg
jnp
daa
inc
or
xchg
sbb
pop
rcrl
xchg
jbe
es
sub
add
daa
aas
enter
repnz
push
mov
xchg
mov
add
stc
push
sub
jl
jp
fs
pop
xchg
andb
mov
loopne
in
jmp
pushf
xorb
mov
lcall
mov
mov
dec
sbb
testl
add
or
aad
fmulp
sarl
sub
pop
xchg
push
ljmp
mov
shrb
rol
test
rcrl
sub
cmp
fcmovne
pop
movsb
sti
call
push
nop/reserved
mov
lods
sub
js
xor
fsubrl
cmpb
cmpsb
gs
fiadds
aam
cmp
xlat
pop
push
sub
sub
mov
adc
fwait
sbb
sub
data16
fidivrs
push
xor
adcl
inc
jmp
imul
pop
pop
jecxz
pop
xchg
lods
add
outsb
aaa
pop
mov
mov
mov
jge
scas
aaa
push
loop
addb
jge
jns
dec
cmp
test
mov
xchg
sub
sbb
insb
pop
xchg
mov
mov
jns
add
aam
pop
orb
aas
adc
ss
add
pop
inc
jle
adcl
in
adc
inc
pusha
ss
cli
push
scas
pop
cmp
test
sarb
out
xchg
mov
or
jae
sub
into
push
or
add
cmpsl
push
sbb
push
push
cli
in
dec
lahf
in
pop
out
outsl
shrl
dec
imul
call
stos
mov
dec
xor
fcoml
push
loopne
sbb
ret
lods
push
pop
stos
pop
mov
pop
lret
xorl
leave
hlt
xor
inc
aaa
push
xor
cmp
inc
adc
jns
lock
xchg
ljmp
and
add
push
xchg
scas
sub
rcr
sub
loop
dec
ja
in
mov
and
scas
jecxz
and
push
dec
sbb
icebp
outsl
sub
pop
outsb
or
inc
in
fcmovbe
mov
rcr
jecxz
sahf
push
aam
les
out
dec
jle
sbb
xchg
inc
seta
or
xor
jmp
xchg
push
in
add
push
mov
xchg
bound
add
jg
mov
mov
ljmp
ljmp
gs
mov
pop
dec
enter
push
cmc
sbb
pusha
push
sub
fstpt
loopne
push
push
test
fidivrl
outsl
lret
lods
mov
cmp
push
xor
mov
mov
fbstp
and
sbb
cmp
rorl
adc
and
test
cmp
pop
es
mov
cmpsb
cmpsb
adc
mov
ret
jnp
mov
test
add
lret
cltd
inc
nop
sub
mov
f2xm1
sbb
leave
scas
dec
jns
xor
jl
push
std
mov
or
jl
ret
fcmovne
sti
sbb
nop
in
leave
inc
in
les
pop
dec
call
lods
add
lret
xchg
cld
pop
sbb
push
test
pop
adc
pop
mov
push
cmp
aas
sbb
fisttpl
mov
dec
clc
cmp
mov
leave
mov
jne
ljmp
sub
add
gs
test
inc
jp
jge
inc
add
fldcw
mov
sub
dec
es
push
outsb
scas
fdiv
ret
into
rcrb
inc
nop
xchg
push
ljmp
xor
xchg
mov
cld
int
push
rcll
icebp
xor
ret
jmp
xlat
test
adc
inc
adc
gs
ljmp
sbb
std
jle
clc
loop
jne
push
fdivrs
outsl
mov
xchg
inc
lret
daa
pop
loopne
lcall
mov
bnd
jle
adc
lahf
pushf
xchg
inc
in
cmp
pop
cs
pop
jge
and
aaa
adc
cwtl
dec
mov
bound
xchg
cmpsb
fs
adc
and
inc
fcompl
out
adc
icebp
mov
sub
cld
addl
inc
sub
lods
dec
popf
lods
pop
outsb
pop
jp
dec
sub
add
mov
xor
out
repnz
fdiv
sbb
and
fistpll
data16
pushf
xlat
popf
jne
sbb
jge
cmp
inc
test
cmp
mov
mov
jno
sub
jbe
jo
cmp
out
xchg
jnp
addb
mov
jno
push
jnp
lds
mov
aas
mov
push
inc
jmp
mov
xchg
xchg
push
pop
and
add
dec
pop
add
aas
ja
pop
outsl
mov
fstpt
ror
mov
adc
and
in
and
les
cmp
adc
push
adc
mov
mov
loopne
pusha
pop
imul
mov
hlt
pop
fwait
mov
jae
sub
lods
or
mov
jecxz
xor
mov
pop
rcl
cmp
cmp
call
rolb
dec
jmp
setge
fisttps
dec
stos
cli
repz
mov
ljmp
mov
xchg
fs
and
adc
sarb
rolb
xor
xor
ss
jae
shlb
lds
or
jb
shrl
es
iret
outsl
or
push
xchg
xchg
mov
mov
add
xor
cmp
movsl
adc
adc
ss
shufps
jno
or
mov
or
sub
in
mov
jp
ret
mov
jnp
adc
xor
movsb
mov
in
mov
pop
lcall
and
mov
int3
inc
inc
stos
jmp
or
sub
xchg
lret
push
pop
scas
add
or
cwtl
icebp
lods
or
mov
sbb
lods
int3
fs
call
test
loopne
jle
bound
lahf
cld
mov
or
xor
stc
jb
ss
pop
xor
add
mov
and
scas
jl
cmpsb
add
push
mov
sbb
push
adc
cmp
mov
xchg
dec
jbe
aas
xchg
cmp
je
popf
and
clc
sti
jo
inc
push
adc
out
xchg
test
shrl
call
or
dec
lret
cmpsb
cmc
dec
sub
cmp
xchg
shr
mov
mov
xor
lods
orb
inc
push
cmpsl
sbb
stos
loope
out
mov
mov
insb
icebp
pop
repz
jmp
sbb
mov
ficompl
pop
sbb
icebp
sbb
sub
gs
adcl
and
jmp
popa
leave
in
call
fildll
or
xor
cwtl
push
mov
push
insl
inc
int3
cmpsl
cmc
xchg
push
sbb
gs
iret
loopne
mov
pop
sti
rcll
fadds
dec
mov
jbe
xchg
add
es
stc
sarb
mov
sub
sub
outsl
xchg
mov
or
or
mov
push
movsb
incl
add
repz
ror
stos
out
imul
and
movsl
sbb
dec
scas
adc
arpl
xchg
xor
aas
insl
xor
sahf
sub
shrl
mov
test
and
mov
es
xchg
xchg
lock
jbe
push
lahf
jle
fildll
pop
testl
out
nop
iret
or
pop
mov
jle
jae
nop
out
fisubs
mov
out
iret
mov
mov
xor
das
push
lcall
mov
dec
in
adc
push
pop
enter
outsl
nop
sbb
in
out
sbb
jno
sti
push
xchg
adc
dec
xor
arpl
js
mov
ss
cwtl
lret
test
inc
test
pop
mov
push
in
lea
imul
mov
xor
pushf
cmpsl
push
cmpl
movsb
xor
arpl
mov
mov
inc
push
pop
call
add
mov
jp
je
out
xor
push
mov
nop
data16
test
push
into
mov
mov
es
sbb
daa
pop
flds
pop
int3
cmp
cmp
outsl
stc
divl
sahf
xchg
fldenv
sbb
sub
pop
bound
jmp
xor
addb
nop
repnz
roll
xchg
and
aaa
xchg
jg
adc
int
mov
dec
mov
call
jg
aam
les
jbe
mov
cmpl
or
inc
pusha
add
cmp
icebp
sbb
sbb
pop
cmp
xor
cmp
sub
and
xor
jge
ss
pop
cmpsl
xchg
popa
xchg
cmp
lock
clc
loop
loopne
icebp
adc
cmp
inc
xchg
add
sbb
add
das
shll
rcr
lods
xchg
cltd
and
jno
adc
mov
push
xchg
ret
fdiv
mov
test
xor
rorb
or
outsl
push
les
pop
decb
and
inc
movsb
hlt
jmp
movsl
mov
ror
and
mov
mov
xor
hlt
dec
jge
or
cltd
cmp
or
out
add
cmp
xlat
mov
inc
fsubrs
sub
xchg
loopne
mov
adc
aad
insb
xor
sub
fistpl
shrl
and
lods
mov
xchg
stc
jne
and
hlt
or
pushf
mov
cmp
mov
es
mov
out
dec
adc
mov
mov
xchg
test
mov
outsl
or
sub
std
jg
ss
xlat
out
addr16
les
les
mov
xchg
mov
enter
push
movsb
inc
and
inc
sbb
inc
cmpb
inc
mov
rcrb
in
xor
ss
stos
pop
enter
pop
and
leave
push
test
mov
call
sub
out
push
movsb
cli
outsl
or
add
inc
mov
dec
cli
lret
push
imul
adc
loope
insl
sahf
cmpb
push
stc
shlb
enter
jae
filds
lret
sub
inc
xor
mov
outsb
xchg
imul
shll
cmp
push
sub
pop
add
push
xchg
fstps
outsb
inc
jge,pt
push
add
cltd
mov
aam
in
jo
mov
pop
or
push
jne
sub
lret
mov
fs
xchg
push
xchg
lea
insl
sbb
in
or
mov
pushf
fbstp
aam
mov
push
mov
mov
add
or
xor
cmp
xlat
push
inc
mov
sbb
xlat
and
shrl
in
mov
jbe
ss
js
out
add
and
outsb
jp
mov
mov
xchg
addb
add
pop
adc
scas
xchg
cld
jl
push
adc
xchg
cwtl
xchg
cmp
fwait
jl
mov
sub
repnz
xchg
cmp
fsub
int3
loope
and
jecxz
test
dec
je
ficompl
lods
rcl
pop
sbbb
add
push
clc
or
sbb
sbb
sbb
jb
arpl
xchg
xchg
ja
gs
adc
cli
jmp
jmp
xchg
or
lret
pop
call
sub
jo
pop
xchg
mov
cwtl
dec
out
push
jmp
cld
call
iret
push
mov
push
loop
push
andb
sti
jge
fnstenv
fucom
mov
add
push
push
jmp
cmp
xor
push
xchg
or
fbstp
lock
jp
fistps
mov
repz
inc
ss
mov
js
mov
adc
sti
jg
fnstcw
xor
xor
fucomip
ret
sbb
es
sbb
jecxz
scas
push
idivb
mov
push
fcomi
mov
mov
jbe
inc
or
pop
mov
cmp
stos
xor
leave
shr
hlt
mov
les
push
jle
icebp
mov
dec
inc
cmpsl
movsb
gs
mov
xor
jge
test
fsubl
jne
inc
ror
orb
or
cmpsl
xlat
leave
mov
out
sbb
lods
and
out
ret
outsb
data16
push
and
pushf
cmpsl
loopne
icebp
cli
add
cmp
and
js
scas
lcall
loop
mov
ljmp
loop
push
fisubrs
ss
sbb
push
jecxz
pmaddwd
push
cmpsl
pop
pushf
or
mov
lock
out
jmp
mov
and
roll
push
cltd
and
dec
stos
lea
sbb
movsb
adc
fcmove
std
andb
mov
movsl
jmp
das
fmull
adc
sahf
or
mov
mov
add
pop
or
mov
cmc
mov
imul
and
flds
sbb
test
movsl
dec
fsubr
add
mov
mov
leave
faddl
popf
nop
aam
xor
jmp
mov
mov
pop
std
push
out
lret
xor
xor
adc
push
pop
cmp
ss
jae
out
mov
inc
and
inc
repz
cmp
hlt
xchg
loopne
outsb
adc
or
loopne
sahf
ljmp
std
sbb
rcrb
shll
pop
jb
outsb
mov
pop
inc
dec
aam
sub
add
xchg
cld
push
mov
ret
cmc
cmpsb
xchg
mov
test
stc
inc
shl
cli
dec
inc
ljmp
js
popf
gs
xchg
arpl
out
mov
cmp
out
xor
insb
pop
xor
sti
cwtl
pop
fmull
cmpsl
imul
mov
cwtl
aas
inc
jmp
mulb
mov
pop
stc
addr16
xchg
roll
mov
mov
cmp
cmp
mov
dec
rcll
jb
faddp
adc
xor
pushf
cmpsb
mov
stos
repnz
in
test
call
outsl
mov
inc
sbbl
test
je
cmp
aaa
sbb
adc
je
dec
data16
push
mov
fidivs
jge
or
adcl
lret
adc
outsl
rorl
shlb
test
mov
loope
xor
mov
pop
and
push
gs
shrb
addb
sbb
pop
mov
int
mov
in
lds
mov
mov
mov
out
nop
xchg
and
rclb
and
xor
cmp
mov
push
jnp
int
int
xchg
add
xor
mov
nop
fs
ss
inc
push
jp
sub
pop
dec
mov
inc
mov
lds
push
leave
xchg
cmp
jge
cwtl
pop
in
inc
push
lret
xor
fldt
out
lods
push
cwtl
mov
imul
mov
pushf
test
pop
or
mov
mov
jb
mov
jg
xor
sbb
test
popa
enter
shll
inc
in
dec
dec
in
add
or
mov
movsl
jg
fs
lods
and
daa
add
sub
test
movsb
and
shl
nop
daa
xchg
inc
inc
jne
dec
and
sub
adc
mov
movl
fisubrl
popf
arpl
or
stos
push
xorl
sarl
jmp
shr
mov
test
sbb
in
push
test
pusha
lock
rorl
jmp
dec
push
dec
inc
cli
push
xchg
out
pushf
push
jp
lret
sbb
in
and
loope
sub
and
loope
lahf
inc
lahf
push
adc
inc
imul
lret
gs
mov
mov
sub
add
mov
add
mov
push
int3
push
iret
and
and
xchg
jbe
enter
lcall
lods
cmp
jecxz
mov
aam
popa
call
fsub
dec
inc
push
pop
jnp
sbb
aad
add
out
stos
mov
sub
add
mov
mov
push
in
inc
fnstcw
popa
mov
cmp
jge
lret
push
add
insl
jb
sbb
xchg
imul
in
xor
adc
xor
test
adc
movsb
ljmp
sarb
icebp
insb
pop
inc
push
nop
push
dec
mov
push
adc
popf
mov
gs
addb
cmp
in
add
lret
adc
mov
aam
mov
cmp
pusha
mov
pop
movb
mov
shr
inc
mov
ror
push
pop
and
mov
fisubrs
pop
sbb
mov
pop
inc
adc
xchg
scas
filds
into
jp
push
dec
pop
fsts
in
cmp
sub
scas
sbb
push
and
movsb
mov
mov
dec
cmp
cmp
jmp
mov
sarb
cmp
fdivs
sbb
call
xchg
psraw
stos
adc
cmp
cmp
xchg
cmp
xor
scas
ja
imul
xor
mov
fdiv
dec
mov
mov
mov
divl
jae
jno
sub
fcompl
fiadds
dec
pop
outsl
add
hlt
out
shrl
lret
pop
fistpl
in
sub
sub
sub
iret
cs
xlat
sbb
jae
sbb
cmp
xor
rep
cld
xchg
add
inc
pop
cmp
insl
sbb
rorl
mov
mov
xor
icebp
xchg
xchg
and
sub
das
imul
gs
mov
push
jb
adc
out
lock
xchg
cmp
xor
xchg
mov
mov
cmp
fs
rolb
movsb
push
push
push
push
add
cmp
jp
pop
xor
jecxz
push
push
js
ja
xchg
dec
sub
push
jne
xchg
out
dec
xor
ret
imul
aam
out
or
out
lret
test
iret
sahf
mov
out
sbb
roll
sbb
cmpsl
jle
fmul
imul
add
jmp
jle
adc
jb
clc
testb
push
mov
lods
adc
cmp
push
clc
cmp
jo
cmpl
popl
in
sbb
cmp
adcb
out
add
mov
insb
push
mov
mov
ds
jecxz
xor
push
mov
inc
sbb
jno
jno
sbb
ja
xchg
mov
fwait
adc
sbb
or
and
xor
dec
insb
repz
pop
pop
sbb
cmpsl
in
inc
jmp
test
roll
aam
pop
stos
ret
push
test
push
cli
or
mov
hlt
adc
mov
push
xchg
lods
loopne
mov
xchg
stc
mov
mov
fmull
push
pop
insb
xor
out
xchg
mov
jecxz
outsl
imul
xchg
gs
mov
les
mov
out
jmp
xchg
stc
mov
or
cmp
cmp
jecxz
jmp
cmc
mov
adc
popf
jg
imul
jbe
aas
xorb
test
sub
mov
out
xchg
cmc
movsb
xchg
inc
cmc
add
rorb
dec
inc
stc
add
xor
cli
clc
sti
jb
sub
in
xchg
clc
jns
cmp
jo
test
loope
pop
mov
jge
test
lahf
ss
dec
dec
ds
je
jnp
dec
roll
clc
insb
push
dec
repnz
cmp
mov
in
push
arpl
ss
xor
mov
mov
mov
ljmp
int
enter
mov
divb
sub
test
push
pop
jle
xchg
and
out
push
in
stos
in
das
add
pop
in
fsts
stc
popf
jg
cmp
dec
dec
pop
sub
cwtl
adc
pop
dec
xchg
jecxz
xchg
and
out
sahf
ds
pop
push
mov
inc
imull
daa
call
shrl
hlt
cmp
data16
adc
cmp
dec
ds
inc
jo
jge
or
jl
add
punpckhwd
push
sub
push
leave
movsl
mov
pop
std
jl
xchg
mov
mov
lods
mov
inc
mov
bound
into
outsl
je
imul
js
add
mov
push
cmc
mov
and
or
ss
enter
pop
cmp
pop
push
lret
scas
imul
stos
mov
out
sbb
and
jo
sbb
sub
pop
loop
int
mov
fadds
dec
scas
bound
inc
or
repnz
inc
cmp
mov
add
arpl
inc
lcall
push
jl
jl
dec
inc
inc
add
lea
add
leave
out
push
xchg
mov
push
lds
push
pop
ret
cmp
out
dec
jnp
mov
mov
inc
or
pop
cli
or
add
adc
adc
fsubrl
mov
mov
or
aam
inc
iret
push
push
push
xchg
mov
aaa
adc
push
push
bound
stc
das
push
fldl
jg
les
jecxz
sar
outsl
add
jbe
fwait
cltd
addr16
andb
rcrb
xorb
test
out
mov
xchg
add
stc
es
inc
push
inc
test
xchg
pusha
je
shrb
std
xchg
and
xchg
push
sub
incl
xor
xchg
pop
xor
sbb
test
cmp
or
inc
sbb
mov
fiadds
insl
int
jmp
cmpsl
pop
int
mov
inc
dec
xor
aas
pop
lret
add
lcall
cmp
rcrl
shll
insb
mov
test
clc
or
xor
sub
hlt
jno
jb
sahf
cmp
outsl
xchg
push
adc
xor
out
mov
in
popf
aaa
loopne
xchg
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
aaa
fcoml
out
addl
pusha
or
subb
and
mov
jae
mov
or
scas
movsb
sub
je
adc
popf
cwtl
iret
ficoml
ss
mov
outsb
fs
pop
cmpsb
mov
push
fidivrs
out
jl
jp
iret
leave
icebp
and
ret
cmpsb
insl
xchg
gs
sbb
rolb
dec
xor
aam
push
outsb
aas
negl
into
adc
sub
aad
mov
int
adc
push
jae
jecxz
mov
xchg
clc
cwtl
or
and
rcr
test
mov
and
inc
cmp
or
es
fstpl
fucom
pop
jge
push
pop
jg
ficomps
cltd
aad
pushf
pusha
jb
in
scas
mov
sub
inc
jle
mov
outsb
mov
mov
sub
mov
sar
push
cmpsb
out
pop
adc
mov
andb
dec
pop
test
rep
mov
sbb
inc
aam
push
mov
adc
nop
or
sub
mov
lcall
push
cmpsb
dec
push
jge
push
jbe
jp
mov
add
lock
cld
rcll
arpl
sbb
cltd
shrl
xor
xor
cmpsl
out
ret
lods
shrb
arpl
test
data16
adc
add
std
cmp
enter
xor
dec
shrl
adc
call
jmp
pop
jmp
sahf
popa
inc
push
daa
mov
mov
stc
int3
and
ret
xchg
push
out
ret
mov
popa
cld
jne
mov
cs
pop
sub
lcall
mov
mov
push
add
fldcw
sub
and
push
imul
int3
push
scas
dec
sub
push
push
pop
xlat
push
ret
inc
enter
testl
and
fs
sti
sahf
mov
dec
mov
popa
xor
jmp
jno
cli
add
js
lods
jns
jno
test
mov
cmp
out
pop
xor
stos
or
cwtl
mov
xor
cmpsl
aam
enter
loopne
inc
mov
inc
add
and
fists
out
mov
enter
stc
sbb
xor
lods
cmpsb
subl
pushf
push
mov
xor
push
fst
cmp
test
mov
adc
mov
mov
push
aam
es
pop
xor
lret
push
out
gs
pop
arpl
dec
jge
insl
xchg
cwtl
insb
jle
cmp
fwait
loop
push
dec
jo
add
push
push
cmpsl
pop
cmp
lret
dec
ds
stc
ljmp
pop
cmc
pop
mov
cmp
outsb
je
mov
add
dec
pop
fsubrs
fiadds
mov
xorl
gs
xor
adc
in
shrb
adc
inc
jno
stos
test
sub
sbb
cmpsb
pop
scas
repnz
add
jle
jb
std
sbb
and
insb
jae
jecxz
jbe
std
fldz
arpl
xchg
cltd
test
xchg
push
xchg
push
cmp
icebp
ja
sbbb
xchg
rorb
roll
sbb
xchg
ret
mov
jecxz
in
jae
les
and
in
or
rorb
jbe
jp
sbb
mov
jnp
insb
cmp
fidivl
cmp
and
xchg
jge
xchg
push
jbe
jae
ss
arpl
in
dec
mov
cli
int3
test
mov
test
mov
repz
and
pushf
xor
mov
idivb
mov
xchg
inc
mov
loop
cltd
les
and
mov
andl
rcrl
push
or
dec
clc
pop
jns
adc
mov
push
mov
and
addl
sub
repnz
jg
out
sub
push
imul
nop
out
sarb
mov
faddp
inc
and
mov
sbb
test
insl
pop
daa
mov
dec
shrl
pop
sbb
scas
jne
les
sar
lds
and
ret
lock
test
inc
outsl
cmp
adcl
enter
jp
or
cmpb
mov
pop
add
mov
int3
sbb
imul
pop
cwtl
xor
mov
cld
stc
and
hlt
xor
pop
arpl
test
into
out
push
jge
or
int3
mov
mov
inc
inc
lea
adc
cmp
int3
jg
into
pop
mov
jns
mov
test
repnz
adc
xor
sahf
sub
mov
mov
sbb
mov
mov
loope
out
jnp
and
aad
cmp
adc
mov
lods
pop
mov
test
ficoml
pop
stos
sahf
cltd
sub
dec
cmp
and
aas
dec
jb
ja
or
fistpl
bound
dec
jb
add
into
jle
adc
cmpsl
out
inc
movsl
icebp
push
pop
enter
dec
push
mov
ds
in
sbb
mov
cmp
sub
jg
mov
mov
mov
enter
mov
sti
stc
aad
out
insb
dec
sub
mov
ret
xor
cmpsb
or
and
push
out
insl
and
lret
adc
loope
pop
mov
ljmp
inc
in
and
into
aad
shlb
lea
sahf
jo
dec
xchg
jecxz
pop
fdivrl
and
mov
rorb
stc
imul
inc
aaa
in
test
dec
push
test
lret
pop
mov
mov
pop
mov
ss
and
dec
int
in
divl
mov
mov
lock
leave
push
daa
insb
std
or
and
cmp
fisubrs
or
inc
fimuls
jb
fdivl
jbe
mov
inc
in
mov
pop
cmpsb
adc
or
pop
clc
or
lret
ds
cmp
mov
sar
add
jecxz
push
jecxz
stos
repz
sub
les
jne
lret
lea
test
adc
into
pusha
inc
jnp
scas
cmpsb
sub
mov
xchg
cmpsb
and
jl
cli
push
stc
idivb
jge
mov
jmp
mov
xchg
lods
jnp
jge
mov
ret
fwait
cmp
sarb
add
or
int
xor
aad
arpl
jnp
leave
divb
cmp
xchg
mov
gs
mov
add
xchg
xor
jmp
mov
fdivl
sub
inc
mov
or
repnz
jne
aaa
flds
mov
movsl
inc
xchg
jmp
mov
push
imul
mov
andb
lcall
or
mov
dec
and
in
ror
jne
jno
jo
pop
jl
jl
sub
cmp
ljmp
mov
loopne
mov
jecxz
pushfw
dec
jno
or
and
mov
cld
mov
lahf
xorb
xorb
or
shrl
into
pop
push
pushf
mov
jne
push
in
pop
es
fldl
push
add
or
dec
ret
loop
imul
shr
pusha
pop
fisubrl
or
add
enter
sbb
sahf
nop
fdiv
in
pop
repz
inc
rorl
xchg
xorb
std
mov
pop
lret
cmpsb
xchg
cmpsl
out
cmc
inc
jmp
sbb
movsl
inc
into
mov
inc
push
push
add
fwait
mov
jl
mov
xchg
cwtl
movsb
dec
xor
test
xchg
ret
push
add
popa
call
pop
mov
mov
xlat
into
ds
cmpsb
mov
inc
pop
into
mov
ss
and
call
data16
lods
out
stc
or
das
sub
ja
mov
pop
sub
shr
cmp
imul
jle
sub
add
out
and
dec
or
or
nop
pop
and
push
aam
jmp
stos
lret
jne
std
cmpsl
jecxz
arpl
pop
enter
loope
outsl
mov
clc
inc
pop
xchg
inc
mov
out
mov
std
push
sub
ljmp
jg
add
lret
stos
sub
test
dec
sbb
imul
jb
mov
push
loope
inc
icebp
ja
push
shll
xor
jno
pop
jecxz
jae
pop
in
push
test
jb
loop
movsl
xor
jne
je
push
mov
in
les
fdivr
cmp
fstps
test
pusha
ljmp
es
and
pop
inc
xor
ror
out
xchg
cwtl
cmp
mov
int3
aam
dec
and
mov
mulb
ss
icebp
mov
insl
mov
dec
int
in
cli
pusha
inc
rorl
push
pop
xor
inc
xchg
mov
or
xlat
lahf
imul
test
adc
dec
lahf
sbb
mov
movsb
mov
dec
and
shll
lods
sbb
dec
cmp
jge
jl
sbb
in
aaa
rcll
enter
jge
test
and
loopne
sbb
xchg
cltd
fwait
sbb
and
dec
push
fdivrs
repnz
int3
shlb
iret
in
fbstp
js
sbb
movsb
arpl
jp
fisttpll
mov
imul
stos
clc
jge
ds
jno
bound
mov
push
rorl
push
cmp
aaa
leave
sbb
pusha
pop
into
in
lea
and
cltd
jg
push
pop
mov
sbb
mov
dec
idivl
jbe
dec
jle
pop
add
mov
imull
cmp
xlat
ficoml
movsb
inc
mov
sti
fs
pop
add
cltd
lcall
and
enter
cli
mov
repnz
shll
dec
mov
mov
lods
sbb
in
push
dec
das
popa
cltd
pop
cwtl
ror
sbb
dec
testl
shrb
xchg
mov
rcr
std
push
pop
loopne
push
ja
xchg
outsb
loopne
push
repz
dec
in
fisttpl
sti
shlb
jbe
sbb
ja
jg
add
mov
mov
xchg
sub
pop
push
cmpsb
shld
mov
lea
mov
test
mov
sub
dec
add
lea
pop
sbb
push
out
out
cmc
or
into
sbb
popa
mov
cmp
or
inc
shll
cmp
xchg
inc
ds
pop
mov
mov
sub
or
jecxz
setb
push
sub
xorb
or
xchg
movsl
shrl
enter
or
cli
xor
mov
xchg
push
jp
cli
jne
pop
jge
jp
daa
and
or
mov
cmpsb
mov
xchg
add
pusha
dec
adc
nop
cmp
testl
nop
clc
mov
mov
js
and
in
xchg
pop
push
pop
mov
jecxz
ret
lods
jno
imulb
ljmp
sbb
xchg
mov
gs
push
insb
movsl
mov
xchg
mov
ljmp
notb
xlat
pusha
mov
into
test
addb
imul
mov
inc
aam
je
sbb
or
clc
fldenv
imulb
pop
lahf
jp
mov
jno
cmp
adc
lcall
lea
or
inc
and
and
mov
or
stc
inc
movsb
mov
push
orl
jmp
inc
mov
push
inc
in
sbb
fdivs
and
cs
inc
ljmp
faddl
out
jno
lret
inc
cmp
push
mov
adc
pop
jb
iret
dec
icebp
je
aas
les
das
sti
jno
roll
stos
clc
dec
xor
dec
in
popa
pop
ljmp
sbb
aaa
inc
pop
cs
loope
out
lret
push
sub
das
sbb
cli
mov
mov
jnp
ret
sub
inc
dec
ljmp
jns
in
sbb
stos
into
dec
stos
jb
leave
aas
push
cmp
or
xchg
adc
popf
outsl
loopne
mov
push
mov
adc
mov
imul
cmp
and
mov
push
clc
jns
adc
mov
sahf
enter
cs
ret
pop
sub
clc
pavgb
dec
xchg
lods
cmp
xchg
cmp
stos
pop
sub
and
mov
push
imul
add
pop
lahf
daa
das
pushf
xor
jne
mov
scas
iret
lcall
jge
sub
notb
cltd
mov
cs
inc
fisttpll
jbe
cmp
jmp
sub
shr
pop
cmp
mov
pop
xchg
dec
or
mov
clc
or
jl
out
mov
es
shrb
out
push
mov
test
and
pop
es
ja
jl
mov
sbbb
xchg
fsubr
mov
or
loop
loop
inc
pop
das
xor
repz
cmp
filds
mov
or
mov
jmp
aas
lock
loope
cmp
mov
aad
fwait
cmp
add
bound
out
push
cmc
mov
pop
scas
int3
sub
and
push
xchg
cltd
jns
dec
jbe
jp
sub
sbb
sbb
pop
call
fcmovnb
pop
pop
testl
mov
iret
adc
add
imul
pop
adc
xor
and
mov
pop
jmp
je
les
inc
adc
mov
movsb
test
neg
add
fnstcw
jae
rol
jmp
ss
ret
sub
sub
mov
adc
cli
jecxz
mov
xor
cwtl
scas
push
jo
sub
adc
xchg
dec
fbstp
mov
in
movsb
icebp
cmp
imul
pop
ret
in
push
shl
mov
icebp
bound
sbb
repnz
mov
push
jge
mov
mov
arpl
stos
jae
mov
mov
cmp
sub
sarl
mov
pushf
cmc
inc
and
fistl
adc
push
dec
fsubrs
push
mov
cld
cmp
mov
push
inc
or
mov
mov
inc
mov
outsl
and
mov
mov
sbb
loop
dec
outsb
ret
rorl
mov
mov
aam
sub
nop
mov
shl
sahf
pushf
mov
and
imul
leave
xchg
inc
cmpsl
dec
inc
push
adcl
dec
dec
push
ljmp
loopne
or
mov
sbb
iret
ds
jno
scas
sbb
mov
js
dec
lods
pop
iret
std
mov
pop
sarb
sub
sbb
pop
mov
push
lcall
fdivrl
and
cld
mov
mov
shl
add
fwait
out
xchg
sbb
pop
dec
test
xchg
sbb
jecxz
out
push
pop
pop
iret
mov
cltd
jmp
add
lods
jne
cmpsb
mov
rorl
stos
sub
aam
jbe
dec
push
cltd
stos
mov
loop
and
adc
mov
mov
adc
mov
push
mov
adc
mov
jecxz
xor
mov
push
add
cmp
jnp
and
sbb
andb
push
mov
push
test
mov
nop
and
lods
inc
or
jle
dec
sbb
sbb
pop
push
orb
decb
mov
lods
mov
xlat
cmp
mov
scas
push
inc
je
arpl
xor
scas
mov
mov
sbb
fsubrl
or
fdivs
notb
cmp
out
sub
or
and
mov
into
jecxz
or
cs
adc
lahf
jge
bound
cmp
adc
in
push
ds
mov
mov
loope
in
jne
outsl
pop
jl
adc
stos
jmp
lcall
lcall
xchg
dec
fisubs
mov
xchg
dec
std
and
adcb
out
jecxz
loope
and
in
push
adc
add
pusha
jno
es
cwtl
inc
xchg
pop
daa
or
and
call
clc
inc
push
or
pushf
xchg
je
pop
cltd
cmp
push
sbb
pop
aam
mov
add
mov
outsl
das
inc
in
test
push
lods
into
pop
inc
sub
add
or
ljmp
push
ja
test
sbb
sarl
mov
mov
cmp
mov
xor
ss
mov
fisttps
push
mov
jno
aam
sub
mov
mov
dec
jb
mov
cmp
stos
jnp
or
mov
pop
jle
mov
idiv
test
popf
sti
arpl
repnz
jo
out
jbe
dec
loop
in
mov
outsb
xor
out
flds
into
lods
fucom
push
push
cmpb
test
out
mov
pop
cmp
insb
daa
mov
lods
cmp
decb
mov
movsb
ljmp
shll
in
subl
popf
lret
cmp
mov
inc
adc
data16
pop
pushf
orb
mov
in
push
xor
sbb
mov
insb
gs
shrl
test
arpl
pushl
je
fisttpl
ja
int3
movsb
loope
and
mov
sub
movsl
adc
xchg
stos
fs
jb
or
enter
mov
js
in
xchg
adc
mov
testb
fwait
leave
dec
test
mov
lock
push
mov
pop
lds
mov
fidivrs
fwait
jl
cmpl
sbb
cmp
out
arpl
pop
aas
rep
ds
push
xlat
ljmp
xor
fdivrs
mov
daa
popa
lods
enter
jno
add
scas
mov
xor
pop
arpl
push
mov
or
scas
flds
xlat
push
imul
pop
cmpsb
push
mov
add
loope
jae
icebp
jle
adc
sbb
pop
cmc
sbb
js
push
aad
stos
aam
lahf
in
push
dec
cmp
jno
xchg
out
loope
stos
add
dec
dec
sbb
add
lahf
xchg
fsubrs
lds
adc
pop
xchg
in
test
hlt
scas
je
lods
loop
scas
add
pop
es
out
mov
in
ja
push
icebp
pop
dec
push
dec
pop
adc
fidivrl
sbb
out
das
xchg
clc
fsubs
mov
mov
outsb
jne
sbb
cld
jmp
fcomip
cmpsb
negb
std
fstps
sub
mov
jle
fsubs
xor
rorb
mov
dec
push
inc
popa
loope
xchg
push
bound
mov
lock
or
aaa
jno
sbb
pop
outsl
movsl
rcll
xorl
cmpb
and
cmp
cmpsl
or
push
out
test
ficompl
or
mov
and
movsb
icebp
mov
test
add
mov
jns
cwtl
mov
mov
imul
push
in
xchg
mov
pop
dec
iret
popf
xor
push
xor
jmp
xchg
test
cltd
push
sbb
mov
mov
test
xor
mov
in
or
icebp
dec
sti
push
adc
mov
push
jbe
sbb
int3
lahf
dec
mov
fildll
cli
mov
lret
xor
lock
pop
insb
out
jecxz
dec
icebp
sbb
push
mov
scas
scas
lret
mov
xchg
aas
lods
lret
add
mov
and
dec
cmp
es
stos
sahf
xlat
out
leave
scas
cmp
and
mov
jae
cmp
and
sbb
or
js
sub
jecxz
push
push
cld
jb
and
aad
adc
cmc
jecxz
cwtl
jnp
mov
loopne
sahf
scas
mov
sbbl
imul
inc
mov
arpl
dec
int
js
inc
cmc
call
sbb
jge
popl
mov
lahf
pusha
mov
imul
out
ljmp
jecxz
inc
cli
jmp
int
or
dec
mov
xor
cmp
cmc
orl
cmp
cmp
leave
lret
add
test
aad
add
jmp
enter
xchg
lods
cmp
in
mov
adc
sbb
roll
dec
push
xor
ss
or
fsub
mov
adcb
xlat
push
sti
inc
ret
jecxz
cmp
cmp
lods
sti
inc
ror
mov
mov
mov
mov
arpl
sbb
ss
aad
imul
mov
pop
xchg
mov
and
movb
ds
sbb
dec
jo
inc
out
xor
ss
mov
adc
mov
xor
sti
cld
xchg
pop
adc
lahf
sub
jp
jmp
mov
loope
scas
jge
xchg
push
lret
mov
rol
mov
sub
sub
call
cmp
ficomps
scas
or
dec
xchg
mov
mov
dec
movsl
es
aaa
and
insl
lods
xlat
and
aad
cli
fidivrs
xchg
sbb
cmp
js
movd
ja
dec
add
add
sbb
push
call
mov
jecxz
xor
jle
or
cmc
mov
and
xor
xor
in
adc
scas
cmp
pop
and
mov
xor
add
push
fucom
sbb
pop
test
out
or
outsb
rolb
mov
imul
shll
ljmp
lock
mov
and
mov
sbb
xor
inc
out
lds
sub
loopne
movsl
scas
stos
lret
push
and
out
sub
pop
dec
jb
push
cs
mov
fidivl
push
xor
xor
leave
dec
aas
xlat
jbe
dec
fstps
sarl
and
jae
push
inc
mov
mov
push
and
jae
mov
lea
xor
scas
adc
ds
jae
add
xchg
call
push
std
mov
pop
cmp
dec
je
mov
jp
daa
mov
cmp
mov
cs
insb
mov
test
lock
mov
imull
jno
aad
fldenv
mov
sbb
sti
mov
sahf
jge
or
lret
lahf
pop
or
cmp
xchg
arpl
mov
inc
mov
inc
mov
mov
outsl
in
add
insb
cmp
sbb
test
repnz
add
mov
aas
data16
push
sub
or
mov
stos
fdivrl
nop
push
cmpsb
mov
insl
adcb
stc
pop
orl
out
xor
loope
add
mov
sti
mov
in
push
and
xor
inc
sub
mov
sub
outsl
xor
or
orl
aam
pop
mov
and
sahf
pop
mov
cmp
inc
add
frstor
mov
and
jno
jecxz
into
sub
xlat
jno
mov
es
sub
mov
mov
pop
xchg
jne
mov
in
iret
mov
and
mov
int
mov
in
xor
xor
js
mov
into
sub
xor
iret
int3
ss
into
dec
iret
dec
dec
sbb
adc
test
add
mov
aad
sbb
imul
repnz
sub
fcoml
dec
mov
inc
or
mov
cltd
xchg
jp
or
pop
loop
pop
add
pushf
inc
sbb
mov
fucomip
mov
xchg
mov
test
ss
cld
cmpsb
push
stc
lock
movsb
push
or
out
add
scas
jmp
jmp
stos
push
xchg
mov
ret
push
mov
aaa
cmp
mov
push
inc
mov
mov
jl
jo
dec
subl
dec
jmp
test
jne
add
aam
add
xchg
lods
lcall
xor
mov
mov
fs
jmp
cmpb
xor
jo
int3
ss
loope
mov
adc
dec
scas
dec
dec
fs
inc
sub
out
decb
dec
mov
imul
outsb
les
sbb
cmp
mov
dec
cmp
arpl
adc
sub
mov
fistps
mov
add
cmp
pop
xchg
xchg
cs
xor
in
pop
movnti
jg
cmc
inc
push
mov
aad
jbe
sbb
sahf
cmp
and
mov
insb
clc
mov
inc
sub
sub
dec
je
fs
mov
pop
push
xchg
outsb
push
sub
jne
pop
mov
xchg
ffree
dec
stos
xor
xor
push
mov
cmp
or
push
or
test
lret
sarl
pop
iret
xchg
xor
inc
and
cwtl
dec
bound
call
pop
loop,pn
sete
push
mov
lahf
test
cld
cmp
es
mov
outsl
cli
push
mov
ja
push
jle
notl
jno
fsub
push
xchg
inc
adc
and
sub
sbb
sub
xchg
in
sub
addb
dec
cli
loope
inc
das
sbb
cmpsb
inc
pop
xchg
outsb
lahf
stc
aas
pop
dec
add
and
pop
cmpsb
push
xor
and
subb
lret
repnz
enter
mov
mov
ljmp
stc
fistpl
cmp
packuswb
xchg
push
sbb
in
and
inc
loope
jae
adc
dec
and
push
sti
shlb
stos
popa
and
bound
or
scas
push
icebp
pop
add
shrl
mov
mov
or
popf
mov
jb
rolb
mov
add
lods
into
cmpsb
lret
or
mov
stc
jnp
aaa
xchg
sub
lock
sub
pop
out
push
loope
adc
mov
jns
mov
ds
adc
ss
cli
outsl
scas
test
jecxz
mov
mov
jmp
movsb
jg
sbb
sub
es
or
sti
adc
jns
push
mov
or
aad
clc
cmp
ss
adc
lock
dec
jg
adc
jns
fisubl
sbb
cmp
mov
or
movsl
out
or
sbb
addr16
sbb
imul
nop
pop
lret
pop
enter
dec
test
and
mov
dec
adc
pop
dec
or
lods
inc
test
or
dec
and
pop
repz
push
mov
aad
int
xor
fcoml
repnz
cmp
sub
ja
add
les
stos
int3
les
scas
xchg
loop
add
fmull
xor
repz
add
in
pop
push
imul
add
sbb
push
cwtl
lahf
mov
pusha
sub
xchg
pop
push
xor
dec
jno
jo
or
popa
sub
mov
lods
call
jl
mov
push
pusha
xor
js
out
cmpsb
fsubr
mov
mov
cmp
sbb
movb
pop
pop
xchg
push
sub
js
and
sub
cltd
movsl
inc
dec
fstpt
mov
mov
ds
xchg
adc
and
mov
dec
inc
adc
inc
sbb
out
mov
imul
push
push
je
xchg
aad
cli
bound
arpl
rol
sti
mov
adc
int3
adc
lahf
iret
test
std
xchg
xor
mov
test
andb
mull
bnd
jb
adc
sbb
and
aad
aad
adc
jmp
dec
jbe
and
xchg
popw
jns
fldenv
shll
sub
jno
in
pusha
test
lret
iret
adc
push
push
xchg
rorb
icebp
push
fmulp
cs
xlat
xchg
mov
inc
inc
inc
ret
adc
je
xor
jle
or
xor
push
in
jge
out
out
mov
adc
pop
lret
cmpsb
mov
push
cmc
das
push
adc
daa
andb
outsb
mov
mov
xchg
pop
push
into
jg
movsb
dec
sahf
sub
pop
movsl
and
jp
insb
sub
out
mov
mov
push
fnstenv
fs
fstl
or
pop
pop
mov
push
cmp
incb
or
mov
outsb
inc
push
test
sbb
fldt
add
lahf
adc
jmp
push
xchg
stc
out
mov
pushl
rcrl
jge
pusha
xor
xlat
testb
jge
fwait
stos
pop
xchg
addr16
mov
push
fdivrl
mov
fisubs
add
or
xchg
hlt
mov
movsl
int
sbb
lods
shrl
ds
lahf
jne
jg
insb
mov
ja
ljmp
lret
lret
outsl
add
push
in
lret
pop
fiaddl
inc
cmp
fldl
xlat
arpl
enter
add
inc
adc
jge
insl
mov
out
sbb
jmp
ret
mov
xor
xchg
pop
push
dec
scas
push
inc
lret
add
lods
les
std
inc
mov
aas
push
pop
mov
cmpsb
lods
jmp
sub
pop
sub
lods
mov
shrl
lea
dec
xor
xchg
fnstenv
sub
mov
or
or
dec
out
pusha
mov
jg
ficoml
and
cmp
add
aas
dec
fdivr
mov
std
jge
mov
imul
xchg
xchg
jle
decl
mov
mov
xor
call
push
xor
or
sbb
sub
cld
push
push
in
inc
xchg
mov
dec
xor
xchg
fstpt
jge
xchg
jl
cmp
mov
dec
add
pusha
dec
pop
mov
and
out
and
daa
pop
ja
cmpsb
hlt
jns
jl
mov
mov
les
mov
cmp
inc
rep
daa
aas
enter
movb
pop
test
add
push
lods
pop
ljmp
jne
xor
fsubrs
xchg
dec
icebp
cmp
iret
stc
mov
in
je
test
mul
rolb
stos
out
or
ss
mov
insl
add
cmpsl
lea
dec
xlat
or
push
repz
cld
and
fstl
or
ror
or
and
pop
push
mov
roll
jg
lret
cli
add
fistpll
fldt
mov
loopne
test
mov
xchg
fisttps
mov
ficoml
mov
insb
xchg
aam
outsl
int
mulps
dec
movhps
adc
addr16
lahf
jecxz
cmpsl
nop
stc
scas
cmp
mov
inc
int
repz
imul
xchg
aaa
add
loop
enter
and
push
mov
sbb
cmp
cmp
inc
mov
adc
std
out
fadd
mov
xor
fistpl
jmp
cmp
add
aas
dec
outsb
movsl
mov
add
push
lock
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
ficoms
adc
dec
pusha
addl
mov
inc
mov
jmp
imul
aas
cmp
jge
shr
cmp
test
lcall
das
sub
das
jp
xor
jne
test
push
and
ret
cmp
lods
shrb
loope
pop
add
xchg
adc
int3
pop
loop
jmp
mov
movsl
nop
jns
lea
mov
push
xor
fidivs
insl
loopne
xchg
adc
mov
pusha
pop
xchg
jmp
mov
test
loopne
das
push
je
loopne
mov
or
jnp
jbe
fs
int
push
pushl
call
movsb
jno
sub
das
cmp
inc
cmp
or
nop
or
gs
lahf
repnz
or
aas
stc
cmp
add
add
in
loope
push
dec
mov
stos
in
div
sub
adc
rcl
jg
adc
or
ljmp
mov
sub
cmp
xchg
testl
out
fwait
sbb
xlat
and
loop
sub
rcrb
cmpsl
movsb
inc
jecxz
push
insb
xor
and
jg
sub
test
jbe
pop
dec
or
mov
and
mov
inc
xchg
lds
jno
mov
fucomi
cs
xor
add
mov
repnz
test
lods
ljmp
mov
cli
ljmp
mov
les
inc
push
xchg
sbb
lds
mov
subl
push
and
push
jecxz
cmpsl
test
inc
mov
push
cmp
scas
aad
loope
addr16
jns
jne
clc
push
or
lcall
sti
jne
mov
mov
in
push
dec
sub
dec
push
push
aaa
iret
jp
out
sub
decb
fdivs
adc
sub
lock
sub
adc
cwtl
or
xor
lcall
into
cli
lds
mov
dec
pop
jp
orb
sub
push
xchg
lahf
mov
mov
xor
or
xor
mov
lock
icebp
mov
sbb
es
popf
sbb
hlt
mov
mov
loope
and
mov
adc
pop
outsl
insl
xchg
jge,pn
sbb
sbb
aad
stc
sti
jecxz
dec
xor
lods
sub
and
push
fs
sbb
push
sub
hlt
dec
dec
inc
repz
mov
mov
jmp
inc
leave
push
aas
or
adc
adc
out
and
std
aas
mov
lods
in
xchg
je
inc
cmp
adc
xor
mov
sbb
pop
push
mov
cli
nop
bound
pop
or
jecxz
ret
loope
mov
push
and
xor
sbb
adc
loop,pn
out
jmp
stc
bound
mov
fcomip
pop
out
xchg
mov
ret
sub
mov
pushf
clc
jmp
repnz
mov
pop
mov
mov
gs
inc
outsb
jne
loop
addr16
in
fcmovu
sbb
add
es
mov
pop
inc
lods
adc
push
repz
fnstcw
xor
sbbl
push
xchg
and
push
xchg
xor
fdivrs
dec
les
ja
or
loope
test
data16
out
fdecstp
mov
push
inc
jae
mov
aas
sbb
add
cmp
dec
fstps
push
negb
xor
imul
loopne
mov
or
and
mov
dec
push
mov
call
leave
jnp
cwtl
jno
xor
fs
test
add
loop
daa
jo
xor
fistps
fucomip
stc
imul
pop
test
mov
sti
xchg
mov
loop
mov
std
movl
inc
sub
xchg
jae
mov
loop
mov
xor
mov
addb
lcall
mov
iret
movlhps
xlat
jle
mov
je
sub
mov
aaa
sbb
shll
or
push
push
cmp
dec
xor
scas
cmc
sbb
or
pop
mov
mov
fs
lahf
mov
and
pop
xor
mov
pop
sti
xor
push
ds
mov
das
jmp
outsb
dec
repz
mul
sahf
in
lcall
stos
in
faddl
sub
addr16
fcoml
sub
sbb
or
ret
and
incb
pop
add
pop
fcompl
add
sbb
dec
jmp
xor
jb
je
mov
sub
sti
mov
xor
pop
test
add
dec
imul
in
cmp
add
mov
push
les
xor
jecxz
std
xor
adcb
stc
bound
or
inc
hlt
cmp
mov
imul
jae
mov
leave
cli
push
dec
adc
mov
xchg
ja
mov
popf
push
add
out
jnp
loopne
mov
inc
xor
rcrb
pusha
outsb
icebp
push
clc
mov
sbb
xchg
mov
adc
xchg
dec
sbb
jns
cmp
sbb
pop
sbb
loope
out
aaa
pushf
mov
mov
lret
fildl
jnp
mov
sub
dec
fwait
hlt
jo
dec
jmp
icebp
icebp
cmp
xor
sbb
add
jbe
pop
notb
mov
shl
stos
stc
mov
aas
xchg
inc
cmp
cmc
ret
and
test
lods
inc
imul
jmp
rorl
movsl
js
lods
loopne
pusha
ret
jns
and
imul
xchg
or
lds
mov
fcoms
mov
leave
into
cmp
dec
cli
pop
inc
xorb
sahf
or
jb
or
fstl
fst
les
addr16
lcall
cld
pop
xchg
icebp
xchg
add
shlb
stc
xchg
xchg
cmpsl
xchg
xchg
mov
in
add
jo
scas
cmp
leave
jb
shlb
imul
push
mov
pop
stos
xchg
imul
je
pop
movsb
cld
arpl
loop
dec
cs
mov
pop
das
sarl
or
std
cs
lock
stos
sub
mov
cmpsl
pushf
xchg
out
aad
loope
push
sub
pusha
xchg
fidivrs
or
push
repnz
lret
jge
jle
mov
sub
xor
das
pop
and
add
mov
scas
fisubrl
in
jecxz
sar
xchg
xor
mov
lods
mov
loopne
sahf
ss
rorb
mov
fisubs
insl
mov
sbb
lods
mov
mov
or
cmp
mov
mov
sbbb
loop
adc
push
xlat
fdivp
mov
scas
gs
lret
xchg
test
imul
test
inc
test
push
mov
dec
and
adc
lcall
mov
push
adc
mov
fbld
sub
ret
subl
adc
filds
clc
push
mov
jmp
push
outsb
ja
mov
push
mov
cs
add
scas
sbbb
mov
adc
mov
in
mov
fisubs
cmpsb
push
xchg
ds
mov
pop
pop
xor
or
cmp
sbb
push
dec
sti
in
popa
sbb
cmp
dec
jo
and
mov
testl
movsl
push
lods
out
mov
mov
inc
lret
cmpsl
xchg
roll
jecxz
jmp
into
or
mov
ss
insb
and
int3
out
push
lock
ljmp
pop
daa
mov
rclb
dec
mov
and
mov
mov
xor
in
rcr
adc
xchg
push
dec
pop
jmp
sub
jne
cli
loop
shll
outsl
outsl
pop
test
pushf
mov
jg
or
cmp
jp
dec
or
ss
std
rorb
lds
mov
dec
mov
rcrb
or
enter
sarb
sahf
daa
popa
out
push
sub
cld
loop
inc
fisttps
push
inc
rcrb
cmpsb
inc
enter
xchg
push
stc
xchg
ror
sbbl
mov
jo
imul
hlt
insb
int
inc
jno
clc
lret
push
cli
movsl
fwait
pop
mov
repnz
push
push
sahf
xchg
jmp
mov
scas
daa
cmpsl
mov
adc
add
add
popf
mov
bound
or
bound
or
add
sbb
fcompl
inc
dec
mov
testl
xor
xchg
xlat
fistpll
loop
repz
xchg
addr16
cmp
es
popa
inc
xchg
mov
mov
popf
push
sbb
test
xchg
mov
shl
adc
jno
xchg
aad
fsubrs
in
cmp
pop
stos
test
pop
lods
jns
loop
dec
pop
fistl
push
mov
mov
and
inc
rclb
ret
js
jle
int3
ror
loopne
in
adc
dec
pop
mov
dec
ror
movsl
and
pop
xor
lret
or
sbb
and
aam
aas
mov
sar
or
xor
pop
outsl
inc
jge
popf
mov
insb
bound
cltd
push
inc
mov
push
adc
cltd
testl
ret
xor
in
movsb
cli
lods
adc
dec
push
mov
test
popf
dec
jecxz
xchg
or
mov
pop
cmp
mov
fadds
cwtl
in
add
inc
push
pop
push
bnd
xchg
sbb
pop
rclb
inc
test
mov
in
test
outsl
nop
ljmp
loopne
cs
pop
inc
shll
es
mov
daa
popf
fmull
out
gs
and
xor
icebp
mov
jmp
decl
mov
adc
ljmp
mov
sub
and
lods
sbb
fwait
rcrb
adc
out
and
das
inc
fistps
push
lods
mov
xor
add
pop
cmp
repz
jecxz
and
icebp
clc
jge
sbb
jp
decl
or
dec
push
fmulp
arpl
in
movsl
in
pop
mov
test
js
add
fwait
inc
aad
pop
lret
aas
outsl
nop
sbb
pop
mov
imul
sub
call
scas
pop
adc
jo
sbb
test
scas
jle
xor
dec
xchg
jo
mov
sub
xchg
inc
lds
shl
popf
inc
add
jp
push
xchg
pushf
pop
mov
jo
dec
call
movsb
adcb
lds
inc
in
sbb
push
adc
fcmovu
test
fldcw
sarl
and
nop
mov
mov
jns
inc
stos
sbb
xor
sub
in
bound
sti
or
dec
in
repz
mov
ja
arpl
xchg
xchg
jmp
repnz
movsb
push
mov
sbb
mov
inc
in
sub
repz
sub
fdivrl
cltd
mov
iret
mov
mov
xchg
xchg
lret
inc
sbb
ja
jb
xchg
xor
daa
pop
jl
sub
mov
adc
mov
xchg
call
pop
in
pop
nop
popl
mov
push
and
add
pop
aam
popf
xor
mov
mov
in
inc
push
daa
cmp
mov
rorb
jg
fs
mov
xchg
cld
outsb
adc
repz
out
loop
mov
adc
scas
mov
and
lret
imul
mov
inc
or
in
test
outsb
imul
mov
loop
mov
jmp
jo
mov
sbb
test
mov
loope
mov
sbb
cmp
xchg
test
xor
cmp
and
mov
mov
mov
or
in
push
push
js
cmp
mov
push
xor
pushf
xor
cmp
pop
jmp
xor
and
pop
or
and
icebp
cmpb
mulb
xor
jp
or
rorb
mov
icebp
out
stos
leave
xor
clc
popf
pop
rcll
sbb
xor
or
cltd
inc
add
xlat
jno
mov
sbb
clc
imul
faddp
stos
popf
insb
mov
mov
pop
push
pushf
in
inc
push
dec
xor
xor
dec
cld
fldln2
popa
loope
and
xchg
cmovl
inc
out
push
mov
or
or
inc
sub
jge
dec
jns
add
pop
andl
test
inc
out
lret
les
fnstcw
shll
js
jne
shl
cwtl
je
sar
mov
loop
sbb
sub
inc
sti
cld
pop
lcall
or
xor
jno
pusha
sub
dec
fisttps
addr16
dec
xchg
addl
or
mov
push
rcrl
cmp
fcompl
js
xchg
xchg
decb
push
pop
lds
mov
dec
push
mov
sbb
sahf
push
inc
andb
loop
loopne
cmp
mov
and
push
ds
fs
jnp
jnp
dec
cmp
ret
mov
or
sbb
mov
pop
test
jne
incl
jb
xchg
dec
jae
js
pop
xchg
mov
cmovbe
dec
int3
adc
outsb
divb
popa
push
pop
addr16
subb
repnz
cmp
imul
stc
push
aad
mov
jmp
leave
sub
mov
sbb
pop
lret
ja
xor
cmpsb
testb
or
testb
mov
push
dec
pusha
lods
rcrl
adc
stos
repnz
push
xchg
mov
andl
lods
adc
cmp
jp
sbb
cmp
out
xor
movsb
push
std
outsl
mov
xchg
in
inc
out
mov
sbb
mov
pop
pop
ljmp
push
adc
lret
out
dec
xor
xor
xor
mov
dec
cmp
test
add
cld
sub
or
push
jecxz
in
ret
lods
andl
stos
sbbl
out
inc
and
mov
dec
or
outsb
mov
pop
xlat
mov
jecxz
mov
xor
leave
dec
mov
or
inc
data16
ljmp
fisubl
stc
push
mov
nop
hlt
push
mov
cs
jg
mov
sahf
mov
clc
pop
mov
imul
inc
icebp
aas
arpl
stc
in
or
xor
insl
cli
lahf
xchg
lods
inc
out
dec
hlt
jns
mov
lret
cmp
mov
ja
fs
or
push
mov
pop
loop
lds
leave
add
adc
and
and
fs
gs
cmp
adcb
test
ret
shll
cmp
xor
mov
sub
lds
xor
daa
xchg
in
push
mov
cli
and
xchg
arpl
push
ja
adcb
or
test
lret
jnp
aas
cmc
mov
popa
jle
in
add
mov
and
cmpsb
je
pop
fisubrs
ret
adc
or
xchg
push
out
sbb
xchg
mov
pop
lret
sbb
loopne
lock
fisttps
sbb
mov
or
ret
sbbl
jmp
into
sti
rcr
pushf
addr16
inc
iret
sbbb
dec
lret
dec
outsl
cmpl
and
and
push
mov
push
dec
test
out
js
add
in
and
in
mov
leave
sar
mov
pop
and
loop
cmp
pop
jae
inc
pop
xchg
fnstsw
lods
in
ret
jle
jecxz
inc
adc
das
mov
fstpt
test
daa
sub
cmp
cmp
dec
push
push
aam
xor
loope
cmpsl
inc
push
xchg
mov
insb
cmp
and
dec
lock
mov
faddl
sub
pop
cmp
add
in
and
xchg
adc
inc
sbb
and
pop
xor
pop
cli
in
pop
subb
cmp
pop
push
int
iret
pop
sahf
pop
adc
bnd
sarb
mov
mov
or
dec
les
pop
lock
jp
nop
std
sbb
ljmp
cmc
shrb
loopne
pop
jmp
or
cs
loope
push
insb
aam
cmpsl
popf
je
pop
sub
add
mov
mov
fdivl
fs
rclb
adc
add
ljmp
aad
sub
adc
mov
pop
test
sub
push
adc
dec
mov
pop
jne
or
sbb
sbb
add
shll
inc
pop
inc
fwait
add
cli
scas
push
dec
outsb
sub
pop
xchg
pop
mov
pusha
pop
test
inc
xchg
or
ret
cmp
adc
mov
pushf
cltd
fldl
add
ret
fs
mov
lods
inc
add
sub
rclb
push
stc
dec
jl
mov
stc
ror
adc
xchg
data16
cmp
cmp
mov
jae
iret
mov
fidivl
mov
sub
fldcw
jns
mov
pop
inc
sbb
inc
xor
xchg
sti
lret
sbb
lds
repz
stos
pop
mov
jbe
lcall
lret
ficompl
pop
sub
mov
repz
sub
adc
mov
hlt
lret
out
dec
jne
dec
xor
pop
add
mov
sub
iret
jno
hlt
in
cmpsl
stc
sbb
xchg
fwait
inc
sbb
repz
repz
mov
cli
loope
xor
movsl
inc
mov
cltd
mov
lds
xor
xor
ja
dec
jno
mov
das
sbb
xchg
xor
mov
bound
in
ret
dec
jae
pusha
push
sub
les
or
je
outsb
or
jg
pop
divl
sub
xor
imul
in
mov
or
sti
icebp
push
fdivr
adc
sub
filds
and
push
lds
inc
pop
fnstenv
ljmp
fincstp
or
loop
pop
vhaddpd
xchg
push
jge
jne
sbb
div
xor
mov
add
jp
repnz
and
sbb
mov
mull
jnp
xchg
xor
xchg
inc
cli
push
in
and
movsb
fistpl
or
loopne
or
add
fsubs
test
push
push
mov
pop
shr
dec
lods
xchg
fisttps
dec
adc
ja
mov
out
push
repz
mov
loopne,pt
call
xchg
adcl
mov
mov
xor
orl
cmp
mov
mov
shr
inc
xchg
mov
ja
out
negl
dec
daa
sub
jne
pop
orl
push
in
mov
fwait
push
add
fs
lret
fwait
sbb
sbbl
and
int3
xchg
call
lock
ds
cmp
mov
push
xor
movsb
cmp
js
jbe
aad
or
ffreep
popa
pop
xor
adc
and
jmp
xchg
adc
das
mov
fsubs
or
cmpsl
out
loop
jb
imul
dec
lods
push
mov
sbb
mov
pop
or
jp
pop
mov
lods
sub
xor
mov
setbe
push
in
out
jmp
sub
cwtl
cmp
xor
ret
cs
jnp
pop
cmp
pop
push
rorl
adc
das
add
dec
or
xlat
add
fwait
and
movsb
inc
xor
pop
repnz
pop
addr16
dec
mov
mov
lahf
ja
filds
insb
sub
test
push
sbb
xor
insl
aad
gs
push
dec
popa
sub
shll
into
lods
mov
xchg
sub
mov
negb
dec
add
gs
cld
inc
adc
jo
mov
out
ljmp
fdivr
popa
cmpsl
jnp
or
lods
mov
mov
lea
loop
iret
mov
push
pop
jmp
xor
sub
jae
aas
rcrb
mov
mov
jb
or
mov
out
fwait
adc
sub
pop
daa
xor
dec
xor
dec
push
inc
in
push
jmp
ja
sahf
test
and
stos
mov
lea
or
enter
mov
jmp
loope
jnp
mov
mov
mov
dec
xchg
sbb
pop
nop
xchg
dec
jns
push
in
sub
mov
mov
adc
mov
mov
adc
shld
cmp
mov
ficoml
lea
add
adc
or
out
out
gs
mov
adc
enter
sub
ss
jmp
les
js
fildll
mov
popa
add
lods
add
xchg
divb
leave
scas
mov
fsubrl
jle
cmp
mov
in
push
sbb
sub
jmp
fidivrl
in
sub
adc
je
aad
mov
mov
inc
rcl
hlt
nop
fsubrs
mov
push
in
push
xor
cmp
lea
or
jo
aam
stos
add
ret
aad
mov
cmp
xor
add
popf
dec
aas
mov
dec
jg
lahf
mov
xchg
xorl
dec
enter
jno
pop
xor
call
test
outsl
ficomps
mov
cld
lcall
cmp
pop
lock
clc
pop
scas
push
test
push
movsl
xor
add
das
cmp
push
out
sar
aam
jnp
insb
push
xor
sbb
cmpsb
and
iret
add
pop
aaa
out
inc
test
jbe
ffree
test
movsl
adc
jecxz
xor
fldl
xchg
add
sub
xchg
lahf
pop
sbb
insl
adc
movsl
in
iret
mov
out
orb
les
call
add
and
xchg
data16
mov
out
cmp
in
fninit
insb
loopne
mov
dec
cs
sbbb
mov
sub
dec
fs
jo
or
ja
or
pushf
cwtl
inc
pusha
mov
pushf
inc
into
les
aas
out
adc
outsl
mov
jl
sahf
mov
mov
scas
out
cmp
xor
xlat
dec
in
ss
int3
les
jge
or
lret
pop
hlt
test
mov
mov
mov
subb
in
xchg
data16
push
pop
add
mov
mov
ljmp
gs
flds
cs
into
adc
pop
or
lea
fcmovnbe
fwait
mov
pop
mov
repnz
shrb
jno
fildl
in
sbb
mov
icebp
popf
xchg
ds
inc
pop
movsl
inc
jmp
cmp
mov
mov
cmp
nop
pop
adc
sti
jbe
call
pop
xor
rcll
pop
jb
ret
pop
jle
outsb
daa
mov
and
dec
mov
pop
and
cmp
mov
fcompl
xchg
sti
test
in
loop
jo
es
js
xorb
hlt
repz
jp
adc
subb
mov
add
addr16
stos
sbb
and
or
enter
in
and
in
sub
dec
jnp
add
mov
out
xor
mov
sbb
and
mov
push
mov
pop
rcr
push
or
lods
in
ja
das
xor
lock
stos
mov
mov
add
cmp
inc
xlat
mov
fs
sub
mov
dec
xchg
mov
jno
lret
sbb
das
mov
pop
pop
mov
je
push
push
shrd
mov
jne
shrb
sbb
inc
or
push
adc
cwtl
ret
popf
and
out
inc
xchg
pop
sbb
mov
outsl
push
jno
cmp
rcll
ljmp
mov
add
notb
aam
hlt
cmpsl
xchg
push
mov
pusha
repz
pop
sbb
jne
or
adcb
in
aas
and
xchg
and
in
sub
dec
call
jle
inc
dec
jae
sub
outsl
xchg
pop
cs
cmpsb
aaa
sahf
cmp
scas
dec
bound
leave
and
xorl
lret
fbstp
dec
xor
mov
dec
sete
xlat
jns
ds
mov
adc
push
cwtl
lea
mov
jnp
xchg
lds
in
out
xchg
dec
dec
negl
js
inc
imul
cmpsl
push
int
inc
and
fcoms
jmp
ret
xchg
and
mov
mov
or
inc
inc
sub
movsl
and
fsubr
jge
mov
into
cs
ja
rclb
rcl
mov
xorb
add
out
loopne
shlb
mov
pushl
jb
add
in
dec
scas
cmpsl
ret
sahf
shr
dec
pushf
mov
stos
jmp
stc
outsb
mov
mov
fisttpll
xchg
les
push
push
negl
aam
subb
outsb
xlat
cmp
push
cmpsb
pop
mov
xchg
mov
ret
mov
jno
imul
jb
leave
mov
scas
pop
cltd
dec
not
push
sbb
int
or
call
and
cli
lret
pushfw
lahf
popa
loopne
aam
mov
and
mov
push
movsl
xlat
sub
loop
cmpsb
xchg
dec
xchg
fs
loopne
mov
addl
ja
push
bound
xor
adc
xor
lret
sahf
out
jne
les
and
ja
sbbl
mov
arpl
adc
adc
push
shr
pop
xchg
xchg
push
loop
int
lods
mov
push
test
xor
enter
leave
iret
rcrb
jb
ljmp
xchg
or
mov
pop
int3
popf
xlat
outsb
pop
movsl
sub
imul
mov
mov
dec
loopne
inc
pop
xlat
xor
dec
imul
lret
enter
xchg
pop
push
loopne
std
fnstcw
mov
js
xchg
aaa
es
out
or
sub
and
cmp
mov
push
mov
dec
mov
ret
orb
cli
dec
inc
sahf
xchg
ret
int
cmp
xlat
cli
pop
or
loopne
outsl
jne
clc
shr
push
sbb
imul
mov
pop
lds
rorb
xchg
sbb
xor
xchg
adcb
add
in
mov
xor
mov
sbb
ljmp
mov
or
mov
and
sub
mov
and
sbb
arpl
pop
dec
mov
int3
divl
cmp
out
xlat
idivb
pop
pop
scas
and
mov
xchg
or
cmp
jg
lds
in
out
out
shrl
push
inc
mov
hlt
or
jecxz
sbb
ss
sbb
out
test
sbb
fcmovnu
in
push
int3
je
mov
daa
daa
mov
inc
lds
mov
dec
xchg
add
xchg
xchg
aam
int3
and
push
dec
push
cmc
js
cltd
dec
test
cmp
cmp
pop
cmp
jmp
data16
lahf
jmp
outsl
add
xchg
call
cld
pop
inc
subl
adc
cmpb
push
lods
cld
std
lret
out
imul
dec
jne
inc
adc
inc
in
inc
add
add
pop
cmc
xchg
cmc
and
scas
es
out
cmp
int
mov
addl
lds
xchg
mov
or
iret
adc
adc
sub
pop
cs
jg
jne
lahf
jbe
shrb
in
dec
shrb
jmp
xchg
adc
rcll
mov
lret
pop
loope
lock
jmp
push
cwtl
cs
int
fdivl
jmp
add
sbb
jno
sti
cs
out
adc
pop
data16
mov
imul
and
jle
cli
push
loope
add
lret
jnp
and
mov
mov
negl
adc
push
pushf
jae
rclb
push
inc
xlat
outsw
pusha
stos
jbe
push
sbb
ret
pop
mov
fucom
bound
cld
clc
and
and
je
data16
and
cmp
test
push
jmp
push
das
cmp
hlt
das
cmpl
shlb
mov
aas
cmp
inc
xchg
jne
mov
sub
les
add
mov
lods
mov
pop
sub
lahf
int3
push
ds
inc
sbb
inc
cmpb
popf
dec
jns
pop
ficoml
xlat
jne
js
imul
fcmovnb
jo
shlb
and
mov
clc
out
and
in
sbb
mov
gs
mov
jp
bound
jae
ss
xor
out
stc
mov
repnz
jnp
test
and
daa
jbe
aam
adc
sub
push
adc
jle
sbb
cmp
xchg
inc
lret
push
sbb
in
adcb
enter
scas
in
xor
mov
stos
or
out
inc
inc
mov
ret
and
push
push
stc
mov
push
mov
lcall
aad
aad
dec
pusha
dec
insb
pop
mov
jne
enter
pop
and
mov
add
lret
push
enter
getsec
adc
sub
insl
pusha
insb
in
sbb
mov
fwait
mov
push
sub
into
fsubr
subb
test
shlb
cs
aam
and
mov
mov
lods
xchg
jl
lret
pop
stos
or
jae
mulb
cltd
sahf
inc
jle
addr16
out
mov
add
imul
repnz
sahf
loope
mov
mov
dec
in
iret
repz
icebp
sbb
jae
popf
test
notl
pop
rcll
jle
cmc
hlt
jge
dec
push
je
stos
sub
pop
add
xchg
sar
inc
rcll
stos
dec
cs
ret
mov
inc
pop
test
dec
ljmp
cmp
mov
pop
les
mov
xchg
outsb
push
pushf
rcll
cmp
sub
pop
and
jmp
sbb
sub
sub
ficompl
xchg
adcl
xchg
mov
fidivrs
push
mov
std
cmpsl
jns
add
pop
adc
fdivs
push
insl
sahf
or
xor
je
push
scas
mov
daa
sbb
stc
push
add
andb
jae
pushf
roll
push
pop
sbb
leave
mov
ss
call
test
jbe
stc
inc
inc
ljmp
movsl
pop
inc
pop
pop
inc
arpl
out
scas
push
test
push
mov
hlt
in
add
jne
pushf
fisubrs
nop
or
mov
xorb
test
loopne
and
push
cwtl
shrb
hlt
mov
sti
mov
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
fs
fdivl
daa
pusha
addl
lret
loopne
out
les
stos
scas
test
push
push
mov
out
sbb
dec
xor
jno
sub
adcl
insl
dec
push
imul
imul
lahf
or
mov
test
xchg
mov
and
insl
jmp
jg
sbb
push
ficoml
das
addr16
pop
in
lods
ljmp
fldl
pop
out
lods
call
out
sub
xor
popf
mov
cs
xchg
fstpt
mov
out
adc
mov
hlt
push
mov
cmp
dec
cli
test
data16
adc
sarl
sub
pop
imul
gs
mov
dec
es
jge
jae
clc
cmp
call
fisubrs
rcll
lds
pop
pop
ja
ss
or
repnz
jecxz
nop
push
xorw
dec
jg
dec
cmp
jbe
fdivrl
and
xchg
jl
insl
inc
jecxz
or
add
shrl
cmpsb
test
adc
test
mov
inc
imul
gs
pop
push
jb
mov
mov
sbb
push
outsl
fsubr
ror
push
sbb
inc
fwait
addr16
lods
ret
lds
cmp
imul
jge
xchg
jl
mov
enter
insl
fisttpll
les
push
lret
or
jbe
or
sbb
push
sub
pop
pop
pop
cmpsb
repnz
add
push
cs
or
xor
jp
cmp
push
nop
mov
lcall
ret
xchg
mov
or
imul
and
in
adc
inc
loope
inc
out
jg
fistpl
pop
iret
int3
push
inc
dec
loop
xor
pop
jnp
cmp
jae
rolb
cmp
shlb
gs
mov
aas
scas
cmpsl
sub
imul
test
inc
lea
mulb
cs
mov
mov
popf
mov
pop
sbb
adc
push
jmp
fimull
jne
mov
arpl
mov
add
jns
mov
movsl
es
ret
fstpt
dec
int3
das
push
mov
popf
out
jns
mov
cwtl
cmp
js
or
add
jecxz
push
xor
push
movsl
xchg
and
mull
rolb
mov
negl
in
arpl
cmp
inc
hlt
test
mov
push
rcll
es
xchg
adc
mov
negl
leave
sbb
xchg
popf
and
bound
lret
inc
push
mov
inc
and
jecxz
and
lods
rcll
lret
sbb
ljmp
dec
in
jl
inc
int
and
bound
sub
jae
and
sbb
loope
mov
xor
idivb
sahf
and
ljmp
leave
lds
and
movsl
dec
in
iret
mov
inc
add
mov
test
out
add
xchg
mov
ds
adc
lods
and
popf
push
stc
lret
dec
call
xchg
stc
mov
jb
xor
arpl
jbe
call
pop
aam
cwtl
pop
adcb
push
into
mov
jg
ret
lods
gs
or
clc
xor
out
adc
xchg
in
inc
lahf
jnp
arpl
fs
pop
pop
cmp
lahf
mov
ret
insl
fstpl
clc
das
aaa
or
inc
jbe
rcl
stos
lea
push
or
jl
add
dec
data16
sub
xor
dec
addl
aaa
repnz
dec
shr
dec
out
or
out
pusha
clc
dec
dec
cmp
in
push
ds
pop
add
jg
ret
lret
pop
pop
lahf
popa
sub
mov
pop
inc
mov
adcb
je
mov
add
in
fiaddl
adc
xchg
scas
push
lret
mov
xchg
sub
add
lcall
and
jl
inc
pushf
clc
mov
idiv
dec
rclb
xor
sbb
js
lahf
inc
nop
lds
jp
int
stos
ret
jp
and
fs
mov
mov
addb
xor
lcall
adc
xchg
mov
cmpsl
adc
sub
or
lds
cmpsl
ss
dec
enter
mov
orb
mov
inc
push
inc
xor
push
mov
jecxz
stos
mov
insl
inc
cmpsl
mov
jecxz
inc
sub
sub
fninit
insl
mov
aas
and
sub
orb
pop
aaa
dec
popa
cmp
inc
in
in
popf
push
fnsave
js
sbb
or
das
xchg
mov
inc
xlat
movb
out
dec
je
rorb
popa
push
xor
add
scas
and
and
lcall
or
pop
int
jle
pmulhw
dec
popf
js
lcall
or
stos
pushf
jg
adc
sub
scas
test
pusha
dec
dec
push
push
fldt
jns
clc
xchg
lret
cmp
xchg
shrb
cli
test
xor
test
div
xor
je
sub
iret
jo
add
mov
pusha
nop
popf
sub
es
sbbb
int3
call
xchg
inc
mov
rcll
hlt
cmpsb
std
cmpsb
sub
lock
stos
mov
dec
les
out
std
std
pusha
xor
dec
jnp
dec
mov
dec
repz
icebp
jmp
ja
aas
ficomps
xor
in
fldcw
mov
ficompl
inc
daa
xchg
mov
mov
push
bound
in
inc
xchg
adc
movsb
out
std
in
or
dec
imul
mov
adc
std
or
pusha
xchg
out
mov
push
jmp
sbb
cmc
stos
arpl
sub
jl
inc
popf
or
das
xor
cmpb
adc
mull
mov
mov
cmp
adc
aaa
cmp
pop
push
and
push
loopne
add
ret
sub
repnz
inc
adc
sub
cwtl
cmpsl
icebp
insb
push
pusha
push
arpl
cld
and
int
or
pop
sbb
xor
addr16
je
fisubs
xchg
sbb
and
xchg
shlb
inc
nop
pushf
xchg
push
sar
jo
aas
mov
jb
xchg
lret
xor
mov
data16
aas
lret
sub
inc
mov
addr16
fdivl
imull
push
add
ljmp
ja
hlt
xchg
sub
mov
mov
inc
mov
sub
les
jl
das
test
mov
nop
pop
add
xor
or
fld
cmpsl
jo
decl
into
popa
into
mov
jp
mov
xchg
fisttpll
pushf
jecxz
jbe
lea
ret
adc
cltd
and
ret
jno
mov
fnstenv
add
inc
adc
xchg
push
mov
sub
iret
iret
fucomp
or
aas
jae
sbb
decl
lea
test
push
leave
jl
pushf
cmc
sbb
stos
fnstcw
loope
loopne
out
xchg
lret
and
es
imul
nop
fcom
jg
inc
nop
cmp
mov
pop
fldenv
les
les
rolb
inc
jno
and
das
scas
mov
mov
jno
lea
imul
ljmp
test
add
js,pt
mov
stos
hlt
cmpsb
or
psrad
pop
fisubl
pop
insl
pusha
orl
clc
mov
cmp
fidivrl
push
hlt
cmc
hlt
sub
sti
mov
fs
mov
mov
in
add
je
add
jbe
lahf
push
push
stos
lea
fisubl
and
shl
imull
dec
out
xchg
jb
shrl
dec
out
fs
cmp
shl
push
test
cli
cmp
mov
stos
das
outsb
and
and
lods
add
jl
pop
xor
cs
dec
push
loopne
outsb
mov
fdivrl
scas
sti
mov
and
fmull
std
jmp
push
sbb
mov
out
mov
shr
xchg
inc
test
cmpsb
mov
push
rol
insl
sbb
mov
pop
adc
xor
and
adc
cmpsl
push
sub
out
popa
mov
pop
bound
repz
pop
fs
jae
mov
pop
xor
ja
and
mov
mov
cli
sbb
jae
cmp
arpl
loope
lods
or
int
inc
cmp
test
fdivrs
dec
ja
in
cli
popl
push
jb
nop
stos
subl
loop
cs
mov
lods
arpl
pop
test
fnstenv
cmp
or
xchg
out
lock
pop
mov
out
cs
jle
inc
or
daa
fistpll
bound
lcall
lcall
negl
lahf
hlt
cmp
dec
jns
push
cmpsb
mov
mov
js
mov
sbb
ret
jp
push
mov
popa
dec
in
push
fld
outsl
add
stc
cmp
ss
mov
data16
int
scas
in
ss
lods
iret
daa
sbb
push
and
mov
inc
mov
mov
xchg
jns
pop
xor
int
mov
and
es
mov
arpl
xchg
pusha
das
mov
loopne
sub
xchg
sub
xorb
mov
mov
push
adc
and
lock
lds
inc
loopne
lret
int
lcall
sbb
fucomp
pop
pushf
imul
lcall
aam
mov
loopne
add
stc
sbb
or
add
adc
add
lock
hlt
sub
lds
insl
mov
fcoms
call
insl
in
cwtl
int3
xor
scas
loop
or
fbld
sbb
addl
lods
lret
push
push
dec
lcall
dec
lahf
test
mov
sbb
aas
nop
xchg
pop
enter
xchg
lcall
sbb
orb
xor
pop
es
inc
sub
stos
mov
adc
dec
imulb
rorb
cmpsl
ljmp
add
push
sub
sahf
into
fstpl
cmc
push
cmp
je
xchg
je
bound
rclb
push
iret
cmpb
sbb
jecxz
aam
out
push
dec
and
cmp
xchg
cmp
sub
pop
mov
in
imul
cmp
icebp
arpl
adc
call
adc
cli
jg
iret
xorl
vmulsd
push
lahf
fwait
imul
movsl
or
xor
mov
xchg
cli
mov
dec
dec
lea
out
data16
popf
jnp
int3
sbb
divb
aaa
jge
push
jp
pop
mov
in
xchg
add
ja
mov
test
ljmp
test
inc
adc
mov
insb
or
in
sahf
jg
push
xchg
lock
dec
cmp
in
cwtl
aad
pop
pop
call
out
sub
insl
mov
xor
ficompl
jp
dec
push
jmp
in
js
nop
insb
jae
sahf
lcall
test
adc
test
lea
loop
mov
adc
adc
sti
pop
movsb
sbb
jb
cmp
xchg
inc
inc
sub
cmp
int3
jo
iret
or
rcrb
jbe
sti
xlat
inc
add
lods
and
push
ret
mov
xchg
mov
xchg
push
xchg
jne
out
jb
xor
fs
add
sub
lds
in
jge
mov
lds
cmp
push
test
subl
mov
adc
jno
adc
mov
into
dec
hlt
push
mov
cmp
add
popa
xchg
movsl
out
mov
xor
adc
and
popl
xchg
bound
jne
inc
mov
mov
cmc
push
adc
aas
mov
adc
xchg
dec
sti
ljmp
sub
clc
das
push
inc
mov
das
and
sub
push
bound
push
xchg
or
xor
sti
insl
fiaddl
test
jg
jl
int3
jae
imul
inc
push
mov
mov
mov
add
lock
das
push
fwait
ja
lahf
inc
jbe
and
adc
test
xor
emms
adc
mov
adc
cwtl
xor
shlb
pop
mov
lods
or
jecxz
movsl
push
push
notb
add
cmpsb
dec
sub
pop
jbe
jb
xchg
aam
mov
pop
mov
cld
sbb
mov
stc
xchg
add
sub
mov
add
les
jne
leave
je
jo
mov
outsb
jne
push
repnz
fiaddl
rcll
xor
lea
arpl
decl
and
or
in
jns
dec
cli
mov
mov
testb
out
jne
int3
orl
cmp
in
pop
mov
dec
icebp
jne
xchg
mov
pushf
test
or
jecxz
int
mov
inc
gs
ds
jbe
lock
rcrb
leave
rcll
mov
aaa
add
mov
mov
lea
mov
stos
and
push
jnp
xchg
inc
fcompl
fimuls
add
rcr
mov
shll
mov
xchg
js
xor
or
fsts
cmc
sub
enter
dec
orl
jle
lods
inc
loopne
jno
push
cmp
lods
pop
and
add
push
xchg
mov
mov
mov
imulb
aaa
int3
test
aaa
pushf
adc
mov
movsl
fdivl
lods
sbb
or
inc
cmp
xchg
mov
in
sub
jbe
es
xchg
popf
xchg
roll
std
jo
das
push
loop
lea
test
sub
icebp
in
cmp
mov
sbb
mov
repnz
jg
cs
jg
sub
fildl
mov
mov
jp
jno
push
movsb
adc
add
lret
or
pushf
nop
cmpsb
sub
push
cmc
jnp
daa
stos
xorl
in
or
adc
jnp
xchg
rolb
addr16
jae
mov
cli
icebp
sbb
mov
cmp
fisttps
push
pop
cli
mov
sti
icebp
sbb
imull
xor
cmp
pop
out
mov
xorb
jle
mov
es
es
dec
daa
push
mov
ljmp
cmc
and
lock
in
in
sti
jno
dec
sub
int3
fdivrl
jns
push
mov
pop
fdivl
pop
pop
adc
cli
jp
adc
cmp
gs
fisubrl
or
xor
sahf
mov
lret
popa
cmp
ss
hlt
mov
mov
cmp
pop
js
pop
mov
sbb
inc
or
cmpsl
popa
xor
in
mov
lock
in
pop
fldcw
in
popa
xchg
arpl
iret
xlat
mov
add
sbb
jmp
pop
data16
js
inc
negb
add
sbb
jmp
out
xlat
xchg
mov
xchg
aaa
xchg
lock
sub
mov
adc
jg,pn
jo
lods
mov
mov
pop
add
sbb
add
stos
cmpsb
pop
addl
cli
lods
nop
and
mov
inc
mov
clc
sbb
out
rorl
dec
sbb
gs
or
stos
inc
ret
jmp
in
push
mov
mov
fisubrl
mov
xchg
mov
sub
fcomps
cltd
ja
inc
adc
push
int3
inc
in
jb
push
ss
lods
stos
pushf
dec
mov
mov
repnz
add
adc
adc
fstps
out
lods
push
jne
outsb
adc
cmp
mov
lret
in
subb
push
or
imul
xor
inc
push
stos
add
xchg
lea
mov
jns
ljmp
push
enter
inc
nop
cmp
mov
sub
push
sub
cltd
insl
inc
mov
fmull
xchg
push
mov
xchg
sub
dec
push
insb
adc
jg
jle
cmp
rcrl
mov
or
sub
mov
roll
out
out
insl
int3
std
mov
sub
ret
shl
sti
fwait
movsl
cmp
call
in
arpl
insb
jmp
daa
leave
mov
lret
out
sub
jecxz
shl
cmc
push
in
dec
neg
jno
push
or
jae
jno
jge
fisubs
xchg
rcr
push
testl
add
outsb
push
jno
jne
inc
cmp
imul
movsb
or
lds
dec
add
dec
push
and
sbb
adc
imul
cmp
mov
es
pusha
call
sbb
ljmp
addr16
cli
into
or
loope
cmp
pop
ss
jmp
mov
cltd
push
mov
cmp
xchg
sub
loop
sub
pop
xor
scas
mov
mov
push
mov
add
mov
sub
std
aas
and
loope
lods
push
xchg
inc
push
mov
rclb
pop
mov
fwait
push
clc
jecxz
xor
jg
adc
repnz
fisubs
mov
push
push
jb
dec
mov
mov
imul
fs
sbb
sbb
repz
push
outsb
inc
call
out
adc
fwait
pop
pop
inc
and
imulb
mov
fnstsw
jmp
mov
ljmp
ljmp
or
roll
lret
xchg
xchg
push
lds
outsl
mov
lahf
cltd
addb
sti
push
adc
cli
or
and
icebp
sub
push
jno
int
lret
jbe
mov
rcll
dec
cltd
jo
aaa
mov
xchg
enter
out
stc
add
jo
and
incb
shlb
add
repz
out
add
out
int3
mov
push
inc
rclb
cmp
fnstcw
lods
insb
xchg
in
insb
jbe
and
mov
inc
arpl
divl
sub
cmpb
mov
and
test
xlat
out
cmovg
mov
add
mov
movsl
in
mov
mov
in
dec
insl
xorl
fwait
cmp
fsts
xor
ljmp
sbb
mov
ja
ret
add
enter
lret
dec
popa
add
xchg
mov
stc
push
mov
xlat
rcll
jecxz
inc
adc
fstl
into
jmp
xor
sahf
mov
cmp
out
shll
sbb
test
pop
call
jo
or
pop
fnstcw
outsl
or
sahf
in
mov
aas
pop
push
dec
mov
inc
int3
xchg
orl
xor
xchg
scas
jecxz
mov
or
scas
mov
cld
add
and
lahf
mov
pop
jbe
sub
or
lock
imul
xor
pushf
sub
lret
mov
jg
stos
cmpsb
pop
mov
test
mov
and
mov
cmpsl
push
dec
inc
add
jle
jno
add
movsb
and
and
sub
rcr
adc
sti
negl
mov
sti
lock
daa
sub
lock
addr16
cwtl
mov
and
jecxz
mov
sti
int
sub
fdivrl
sbb
xchg
mov
inc
mov
mov
mov
dec
shl
scas
test
mov
push
pop
sbb
rclb
push
pop
add
sahf
inc
pusha
mov
cmpsb
daa
xor
push
xlat
or
sub
outsl
pop
je
dec
mov
mov
cmp
repz
inc
mov
outsb
bsf
add
repnz
out
ja
mov
push
jbe
xor
call
jmp
mov
push
jg
jnp
pop
mov
lret
fadd
insl
and
xlat
pop
mov
mov
imul
or
jae
jmp
sub
jle
scas
sbb
pushf
xchg
xlat
adc
insb
adc
cmc
pop
std
outsl
adc
mov
cmpsl
jle
mov
das
std
js
mov
fidivl
jns
in
and
xor
xchg
cwtl
adc
ret
cmp
into
mov
add
sub
int
loopne
and
loopne
pop
lret
xor
sti
mov
jle
nop
mulb
mov
mov
gs
lcall
or
dec
hlt
dec
mov
idiv
push
inc
js
pop
test
sbb
mov
cli
mov
js
jl
and
inc
xchg
scas
mov
cmp
icebp
out
gs
adc
jge
add
xchg
pop
popf
push
insb
jns
pop
xor
dec
push
shlb
ret
cmp
loopne
movsl
test
adc
cmp
cmp
add
rolb
push
aas
push
jp
xchg
xor
lahf
je
loopne
idivl
mov
fisttpl
pop
aad
in
mov
lock
pop
push
dec
test
mov
fistpll
outsb
es
mov
add
pop
adc
adc
subl
ss
xor
pop
mov
xchg
jecxz
mov
dec
xor
xor
fwait
outsl
in
pop
rcrb
xchg
or
pop
add
sub
mov
cwtl
dec
jne
mov
int3
repnz
fs
movsl
aad
insb
lock
push
mov
push
add
jne
cmp
dec
out
adc
fistpl
sub
xchg
jecxz
lret
xlat
or
lods
fistpll
pop
add
imul
daa
cmp
stos
scas
out
lret
fwait
push
shl
mov
mov
repnz
mov
jp
push
mov
pop
and
lods
or
out
sbb
and
in
add
cltd
pop
bnd
outsb
or
leave
mov
xor
pop
pop
out
daa
ds
sahf
fwait
push
inc
lcall
adc
sbb
leave
rorb
push
sbb
and
popa
mov
cmc
test
xor
inc
mov
mov
and
fdivl
pop
xchg
sub
sub
or
add
gs
cmp
mov
sub
leave
movsl
daa
iret
test
in
adcl
fcomps
add
lret
enter
pop
pushf
xor
fs
xchg
test
hlt
ljmp
lock
dec
adcl
adc
subl
jge
pop
mov
adc
and
icebp
mov
pop
nop
xchg
in
lea
clc
pop
pop
std
lds
testl
jmp
cli
cmp
ss
push
icebp
adc
lcall
mov
clc
xor
add
cmpsb
mov
or
stos
adc
lea
sub
mov
fnstenv
aas
and
ret
push
nop
jo
add
adc
out
lods
outsb
arpl
imul
inc
push
add
mov
scas
sarb
sar
mov
out
jle
out
cmp
mov
xchg
int
aam
adc
pusha
inc
xor
daa
xor
jge
les
mov
or
cmp
sbb
lcall
sub
out
add
dec
fstl
jbe
or
sbb
repnz
mov
cmpsl
shll
imul
jns
test
add
lods
stos
sub
in
out
xchg
cmp
sbb
sub
orl
in
pop
mov
xor
jge
test
and
sbb
test
inc
lds
dec
xor
stos
stc
sub
sub
dec
or
xchg
call
data16
lods
push
mov
jno
fwait
xor
faddl
sbb
mov
in
push
je
mov
stc
inc
push
popa
jns
pop
xchg
mov
adc
jge
and
sub
flds
push
arpl
adc
and
add
push
in
in
mov
je
stos
in
fimull
shlb
jg
aas
aas
xchg
icebp
adc
xor
jne
xchg
and
out
cmp
cld
cltd
hlt
add
and
test
subb
pop
insb
movsl
fcmovnu
std
ja
addr16
push
cld
mov
jp
jmp
pop
xchg
and
lahf
jp
mov
jg
sbb
xchg
mov
jge
sub
xor
inc
sub
pop
out
lods
and
es
or
loope
fwait
mov
fdivrs
lahf
cmp
out
mov
loope
sbb
cmp
mov
cmp
jae
shrb
loope
and
mov
cmp
adc
mov
out
in
stos
or
mov
lds
mov
pop
dec
clc
and
or
add
inc
jecxz
mov
iret
mov
mov
test
mov
mov
and
or
cmp
pop
jl
mov
add
pop
mov
push
mov
xchg
and
loop
sbb
jmp
inc
sahf
fcmovne
xchg
aas
push
mov
cmpsl
inc
mov
rorl
mov
xchg
mov
gs
sub
push
loop
xor
mov
add
ds
sbb
fwait
pop
mov
mov
add
and
mov
icebp
push
inc
int
lea
mov
cmpsl
add
stos
popf
xchg
imulb
loope
sub
popa
jmp
sub
pop
jg
xor
and
repnz
xchg
cld
cs
out
add
std
jg
outsb
push
imul
jp
movsl
xchg
test
test
ss
cmp
xchg
fistl
cmp
sarl
jmp
das
icebp
jb
pop
sub
das
push
sbb
dec
or
pop
cmp
call
ss
fisubl
jmp
push
adc
xchg
icebp
lcall
and
loope
fimull
addl
test
out
jnp
je
lret
fildl
es
cmp
xchg
lret
lea
mov
enter
inc
lods
mov
cmp
mov
lahf
xchg
sbb
sti
sbb
ss
add
xchg
and
test
insl
jns
divb
mov
mov
xor
js
and
jl
pop
test
nop
int3
jns
movsb
arpl
jl
xchg
rcrb
mov
in
push
mov
jnp
sbb
dec
xchg
insb
test
mov
inc
pop
les
jmp
pusha
dec
insl
fld
dec
push
sti
push
sbb
push
in
sarb
inc
pop
jo
iret
xchg
stc
ret
fsubrs
sbb
fstl
std
cmp
xchg
pop
bound
mov
push
bound
mov
or
or
push
cmp
test
inc
xchg
xchg
pop
push
jns
dec
jbe
sub
jge
sbb
data16
inc
xchg
cmc
sub
or
je
ljmp
lret
shr
repz
test
sahf
xchg
pop
inc
xchg
icebp
dec
clc
xor
dec
incl
mov
pop
sub
push
leave
jno
push
jl
jne
adc
dec
movsb
ret
sbb
stc
inc
idivl
adc
scas
or
mov
stos
lret
pop
mov
ret
dec
push
cld
mov
mov
dec
lret
mov
jo
bnd
and
add
sub
mov
cmpsb
ret
test
addr16
inc
int
lret
inc
mov
pop
repnz
subb
dec
xchg
lahf
mov
cmc
pop
push
test
arpl
stos
xchg
test
xor
lea
loopne
fsub
loopne
test
cld
inc
insl
cltd
add
lods
mov
xchg
cmp
es
mov
xchg
aam
scas
pop
jnp
add
movsb
inc
icebp
pop
mov
test
rcll
xor
mul
add
adc
out
dec
adc
movsb
js
fst
movsb
push
jo
lret
sbb
pop
lods
popa
shrb
lods
out
mov
push
push
mov
sbb
je
jno
aas
or
mov
ret
popa
int3
dec
and
inc
data16
ljmp
inc
mov
mov
xchg
mov
out
test
mov
push
dec
fcoml
pop
fimuls
repz
mov
jecxz
xor
mov
movsl
aaa
testl
adc
lds
push
push
sarb
or
sub
add
xor
xor
and
push
push
fs
or
leave
xor
lea
hlt
mov
cmp
jmp
sti
cmpsl
and
sub
fidivs
sti
arpl
jecxz
fdivr
push
aas
cld
xchg
jge
popf
dec
scas
mov
lods
adc
dec
jnp
adc
daa
adc
jmp
jno
xchg
sub
sbb
lods
xchg
sub
pop
cmpsl
dec
insl
pop
out
sti
mov
in
loopne
jg
and
adc
cli
stc
cwtl
sub
mov
and
popa
in
loope
or
cs
into
mov
xor
add
sub
ljmp
inc
ss
sbb
inc
cltd
add
shl
cmpsb
pop
mov
xlat
insb
pop
aam
add
call
addr16
pop
jl
mov
aam
push
jl
adc
add
dec
or
das
lahf
das
adc
dec
lcall
shll
loope
fsubs
int3
xchg
xor
scas
push
ss
and
in
add
fs
fs
sbb
jmp
and
pop
loopew
loopne
push
xchg
mov
repnz
fistps
sbb
mov
cmp
int3
inc
pop
mov
je
xchg
sbb
xor
dec
shlb
add
fnsave
movsb
test
test
mov
repnz
dec
arpl
dec
stos
xor
push
mov
or
jmp
insl
decl
adc
stos
adc
pop
cmp
fmul
mov
cmpsl
pop
in
int
inc
pop
or
clc
aam
cmpsb
lock
outsl
push
dec
sub
daa
jnp
push
out
clc
repnz
and
jns
je
imul
add
mov
fwait
xchg
das
ficoml
mov
sub
xor
push
out
pop
orb
push
mov
or
mov
pop
push
adc
sbb
rorl
mov
jle
mov
add
shl
inc
jnp
in
subl
neg
xchg
mov
sahf
cwtl
sub
xchg
add
jg
stos
mov
xor
pop
jns
lahf
lock
cwtl
int
in
scas
pop
inc
lea
int3
mov
in
sbb
or
out
cmc
pop
in
jb
inc
cmpsl
xchg
adc
aaa
or
jns
push
incb
out
sbb
xorb
jno
insl
test
out
xchg
or
mov
mov
or
fsubl
das
jo
les
mov
ret
dec
repz
stc
jmp
idivl
insb
ss
or
xor
and
xor
xchg
test
lcall
orb
roll
mov
adc
sub
lret
fisubrs
test
mov
mov
dec
add
dec
or
dec
ret
fsubrs
les
out
sub
ret
iret
or
clc
scas
daa
pop
rcrb
and
fdivrp
imul
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
stos
in
fiaddl
andl
daa
dec
dec
jb
mov
cwtl
test
mov
pop
sbb
js
insb
clc
cmp
mov
push
mov
jl
push
les
sbb
cwtl
outsb
push
shl
push
es
push
sbb
leavew
and
or
inc
push
ror
cmp
xchg
popa
ss
or
jno
jo
mov
outsl
mov
outsl
lcall
inc
sbbl
aaa
add
and
push
jmp
and
fisttpl
and
and
mov
decl
cmp
mov
mov
and
fwait
cmpsb
sub
jl
mov
repz
dec
jp
ljmp
ficoml
pop
pop
xchg
sub
push
fadd
daa
mov
dec
mov
cmp
xchg
fisttps
mov
in
repnz
into
add
push
shll
nop
rcrl
aad
mov
push
clc
js
ret
icebp
sbb
enter
push
stos
xor
sub
adc
sub
outsl
insb
push
rclb
sub
mov
pop
das
jne
push
jbe
pop
out
mov
fisubs
sarb
inc
jl
sarb
mov
test
fwait
cmp
pop
test
pusha
adc
sbb
leave
sbb
adc
mov
inc
insb
xchg
cmp
mov
shll
enter
xor
int3
lock
les
fsubrl
stos
cmp
xor
xlat
lods
and
imul
and
adc
repnz
push
adc
sub
mov
fsubrp
cwtl
jp
in
mov
or
push
nop
push
cld
movsb
sbb
adc
jb
push
out
gs
pop
stos
dec
cmc
subb
xlat
cmpl
add
sti
pop
sbb
imul
test
xor
adc
mov
jae
pop
lmsw
dec
sub
adc
mov
jl
stos
and
jmp
cli
ret
aad
icebp
mov
jle
add
aam
push
inc
pop
pop
add
call
lahf
orl
das
call
fidivrl
pop
bound
mov
push
aas
push
lea
cmp
fst
scas
and
sub
sbb
mov
dec
outsb
pop
loopne
addr16
pop
stos
or
pop
filds
push
stc
clc
or
or
mov
and
insb
sbb
mov
mov
cmp
imul
fcompl
stc
insb
mov
stos
cmp
or
fidivl
orb
pop
leave
ja
pop
lcall
fidivs
push
jmp
popl
outsl
jae
or
lods
cmp
cmp
inc
adc
or
int
int3
push
sub
int3
or
add
xlat
lahf
inc
call
popa
mov
mov
cmpsl
negb
movl
sub
int3
jmp
inc
adc
mov
popf
movsb
mov
arpl
das
in
iret
int
sub
ja
notl
or
mov
mov
jb
cld
lcall
shll
out
popa
xor
sbb
out
fiaddl
cmp
mov
pop
jns
shlb
xchg
push
movb
outsb
aaa
mov
push
movsl
jbe
stc
dec
hlt
in
push
lahf
xchg
adc
repnz
test
sbb
mov
nop
repz
mov
test
nop
sarl
mulb
fdivr
push
xchg
into
xchg
dec
iret
xor
and
cli
add
xchg
mov
jns
mov
inc
pusha
mov
mov
dec
mov
pop
mov
jns
hlt
mov
adc
popf
mov
repz
sub
lret
mov
sti
xor
outsb
movsl
pop
mov
stc
int3
ret
push
push
push
pop
movsb
cmc
dec
mov
jg
leave
movsb
xor
mov
xchg
icebp
mov
mov
pushf
push
cmpsl
xchg
inc
inc
test
iret
in
pop
sbb
out
xor
mov
xchg
xor
ret
fistpll
sahf
or
out
xlat
lods
inc
cltd
les
xor
push
lds
sbb
inc
cmp
test
cmp
popf
pop
adc
push
pop
push
and
push
add
adc
adc
sarb
push
in
ret
inc
adc
pop
pop
xorb
fwait
xor
cmp
ljmp
out
jmp
dec
add
jae
lods
call
jb
dec
xchg
in
and
push
xchg
pop
into
mov
dec
movsl
add
pop
stc
mov
lea
gs
mov
cmpsb
jl
jbe
insl
and
xchg
jp
jo
loope
test
mov
pop
data16
out
test
mov
jle
push
cs
lods
loope
jno
xchg
xchg
in
dec
pop
xchg
push
pusha
mov
stc
jmp
or
push
daa
outsl
lret
lods
cmp
and
adc
xchg
cmp
fisttpl
int3
es
fwait
adc
add
leave
mov
sub
and
mov
sbb
cwtl
out
subb
jnp
movsl
mov
jbe
xchg
stos
out
mov
pushf
mov
fidivrs
or
jge
int
sarl
cmp
jns
in
roll
push
lcall
xchg
sub
cmp
ds
repz
lods
add
inc
nop
mov
popl
pop
inc
gs
das
pop
adc
sub
sahf
pop
ss
ret
adc
lcall
dec
test
dec
dec
xchg
push
ja
sub
inc
lods
mov
ja
and
mov
push
lods
jb
mov
mov
cmpsb
jo
mov
ret
push
pop
dec
mov
add
sbb
in
xchg
enter
mov
aas
jecxz
test
into
pushf
jns
push
pusha
inc
adc
in
ret
cwtl
int3
arpl
ljmp
jle
mov
fcomps
insb
xor
and
jg
mov
jno
mov
push
mov
out
xchg
jbe
push
mov
es
cmp
or
in
xchg
fs
test
push
jecxz
ss
pop
push
adc
mov
repnz
pop
sbb
fldl
push
jne
adc
inc
pop
and
jl
idivb
test
jb
jmp
mov
int
ds
push
sarl
insb
push
gs
mov
test
dec
imul
ja
outsl
jl
pop
lahf
orb
mov
mov
lods
and
xor
jle
mulb
outsb
lock
jae
xor
stc
push
and
dec
dec
mov
aaa
add
jns
add
pusha
insl
out
add
je
jge
mov
jle
addr16
in
sbb
stos
inc
sbb
or
lods
and
mov
push
adc
movl
push
cmpsb
cmp
push
enter
cmp
in
mov
xchg
sub
adcl
mov
iret
xchg
mov
adc
adc
scas
dec
scas
shr
shlb
lret
outsl
je
sbb
inc
and
das
lcall
std
jb
int3
stc
mov
and
ret
es
cmp
adc
mov
mov
dec
fisttps
push
xchg
mov
test
rolb
and
push
inc
cmpsl
lcall
cli
or
inc
insb
sub
push
and
ljmp
ss
or
mov
in
insb
or
fsub
test
ret
dec
jno
pusha
aas
out
cmp
or
xchg
setge
mov
int
sbbb
addr16
es
xchg
test
push
lret
xchg
dec
add
dec
int3
add
push
int3
cmp
xor
pop
push
lock
mov
push
inc
movsb
push
es
loopne
xor
sbb
ret
fidivs
adc
jge
push
adc
nop
test
sbb
sub
mov
push
pop
jg
cmp
lret
call
jecxz
jbe
fbstp
xlat
jge
aaa
test
dec
out
lods
hlt
icebp
fildll
cwtl
jl
iret
jle
negl
ret
cwtl
xor
sub
fdivrl
call
push
ss
movsl
sahf
outsl
lods
xchg
dec
inc
xor
jbe
es
pop
addr16
lahf
jmp
add
mov
std
push
mov
pop
into
push
js
lds
lea
pop
jo
mov
sub
out
add
adc
xchg
jo
jae
es
add
das
loop
push
in
or
les
jne
scas
dec
insb
xchg
inc
sub
cmp
fldenv
sub
push
xor
xor
andl
pop
lret
outsb
ja
jge
inc
fwait
mov
aas
ret
jo
xchg
xor
scas
lods
sub
std
jb
bound
push
in
mov
fldln2
jmp
jg
xchg
adc
sbb
inc
ret
into
or
test
shrb
cmpb
iret
inc
or
xor
js
neg
or
imul
out
movd
pop
imull
popa
adc
jg
jbe
xor
mov
mov
push
push
push
jecxz
adc
xchg
push
xorl
add
push
loopne
add
outsb
loop
subb
out
repnz
out
rdpmc
push
hlt
push
inc
dec
dec
icebp
mov
test
jle
roll
outsb
mov
popf
adc
and
sub
push
push
aas
jae
arpl
and
mov
cmpsb
jg
pop
outsl
iret
jno
fisttpl
adc
sbb
pushf
cmp
stc
inc
fwait
sub
movsb
outsb
lcall
push
inc
in
fdivrl
jns
pop
pop
sbb
sub
pop
flds
xor
aam
test
sarb
into
push
in
cmpsb
in
aaa
aaa
hlt
push
inc
rorl
push
fcoms
les
subl
popa
adc
scas
add
sbb
jg
adc
sbb
mov
push
fidivl
pop
rcrl
std
mov
jp
mov
push
xchg
and
ja
sahf
sub
xchg
icebp
int
sub
and
in
mov
push
jns
xor
clc
out
dec
jnp
out
dec
cmp
lea
addr16
cmp
mov
xchg
xor
test
pop
mov
jnp
or
adc
cs
xchg
sub
or
sub
out
data16
ss
stos
sub
jge
dec
rclb
dec
mov
fs
add
mov
cmp
inc
shrb
push
es
xchg
adcl
xor
sub
pop
xchg
or
leave
stos
fisubs
popa
jnp
cmpsb
addb
punpckhwd
mov
xchg
or
pop
icebp
mov
add
fs
sub
fs
insb
shl
rolb
push
push
adc
pop
sbb
xor
xchg
inc
sysenter
mov
xor
pop
aaa
mov
imul
push
movsb
mov
fsubs
inc
sub
mov
mov
cmp
sub
xchg
and
fs
cmp
test
rolb
add
push
jne
cmp
addr16
scas
leave
cmpsl
cmpsl
into
adc
push
jp
cltd
and
aam
ljmp
not
shll
nop
sub
cmc
je
inc
rcrb
or
xor
outsb
ret
shrl
jmp
and
rcr
sub
out
pop
ja
jae
add
aad
xchg
insl
imul
hlt
movsb
add
push
xor
push
cltd
push
cmp
pop
jnp
adc
lret
pop
inc
cltd
jns
xchg
adc
mov
or
or
mov
pushf
cld
hlt
fmull
jbe
inc
pop
mov
xchg
pusha
mov
mov
enter
sbb
aaa
mov
test
cmpsl
lret
mov
dec
jp
xor
mov
and
insl
imul
pop
push
push
add
hlt
jno
jne
mov
push
add
lock
stos
mov
jecxz
cmc
mov
jp
mov
popf
jg
adc
or
les
fs
js
loope
and
fldenv
mov
sub
and
inc
sbb
movsb
lea
pop
sarl
inc
dec
mov
push
mov
sub
addr16
inc
ret
pop
cmp
pushf
sbb
andb
and
pop
jmp
xchg
dec
or
out
pop
ja
out
pop
fidivrs
mov
xor
repnz
pop
jns
lcall
or
ljmp
cmp
inc
loop
int3
ja
adc
ljmp
test
pushf
inc
cmp
out
pop
dec
mov
sbb
jns
mov
xchg
out
mov
pop
ja
fidivs
ret
dec
rclb
ja
roll
int3
enter
addr16
xchg
fisubs
jnp
adc
jb
popa
div
out
xchg
cli
xchg
inc
lret
sbb
add
dec
push
cmp
xor
out
sbb
shrl
stos
adc
jae
or
js
mov
jl
lret
dec
mov
cs
dec
ret
pop
inc
inc
mov
loope
fwait
scas
movsl
leave
or
mov
adc
mov
out
xor
ret
jg
lcall
js
subl
jne
mov
aas
inc
insb
adc
out
or
mov
mov
test
push
scas
jae
push
xor
lret
jae
loope
pop
sti
cld
and
sti
pop
mov
mov
out
es
fistpll
movsl
jge
or
xchg
jae
sbb
pusha
movl
sub
mov
shr
shll
cmp
push
sti
add
in
add
or
jl,pn
push
jmp
inc
int3
stos
xchg
push
ret
cmp
jae
clc
leave
pop
imull
jge
cmp
lea
ja
jge
aaa
ja
mov
vcvtdq2ps
aas
enter
shlb
add
imul
adcb
popf
fcoms
sbbl
ret
or
push
sbb
mov
cltd
aam
add
sub
imul
dec
xor
cmp
or
push
sub
test
les
dec
dec
jge
inc
test
inc
add
xor
add
add
pusha
sbb
adc
clc
leave
push
add
lcall
adc
les
out
loope
frstor
xor
popa
sub
jle
lods
inc
aaa
imul
pop
enter
mov
pusha
cmp
jecxz
adc
das
mov
sbb
std
pop
dec
adc
and
sar
adc
arpl
popa
arpl
movd
icebp
push
ds
inc
loopne
cmp
push
sub
lds
aas
pop
mov
mov
or
fsubl
mov
fcomps
and
jle
inc
int3
ret
mov
lret
leave
jb
shll
push
cmp
mov
push
jp
mov
adc
sbb
loopne
in
repz
sbbb
cli
jge
movsl
xor
mov
inc
icebp
jp
or
les
sbb
repnz
mov
fimull
jno
test
xor
adc
add
push
outsb
inc
xor
adc
fldenv
int3
mov
mov
dec
xchg
mov
idiv
out
xchg
sub
pop
fimull
in
jmp
xchg
and
push
jne
cld
shll
or
scas
rep
add
dec
sub
lcall
xchg
jns
xor
cmpsl
xchg
cmpsb
mov
lods
pop
or
mov
inc
sbb
mov
hlt
repnz
das
data16
push
dec
adc
icebp
or
leave
test
add
mov
test
mov
mov
and
into
add
inc
and
ds
rcrb
pop
adc
inc
mov
mov
cld
mov
es
adc
sti
push
dec
in
out
jno
dec
jp
push
mov
and
cmovns
mov
ja
mov
xchg
xor
lcall
pop
xchg
cmp
icebp
scas
mov
sub
out
out
sbb
or
sarb
das
inc
and
cmp
stos
andl
push
or
es
into
inc
ss
mov
pop
add
dec
fcomps
movsb
and
test
dec
or
xor
sbb
icebp
bound
jg
xchg
pop
shr
imull
les
xchg
movsl
cmp
push
aas
je
fchs
cld
das
and
dec
xor
or
insl
inc
stc
outsl
rorl
lds
rorl
and
fdivrs
int
sub
hlt
xchg
cmpsb
iret
pop
xlat
lcall
xlat
testl
ds
stos
jno
adc
adc
in
mov
into
mov
mov
sub
sub
dec
pop
cmc
jo
xchg
pop
out
adc
incb
dec
push
movsb
arpl
mov
out
enter
or
popa
xchg
or
cwtl
cmp
inc
jecxz
xchg
jnp
xor
lcall
popf
mov
icebp
ja
jbe
mov
mov
scas
jle
xorl
push
into
ret
jne
sub
fcomip
pusha
xchg
xchg
push
mov
out
mov
push
dec
test
sbb
or
push
aad
sub
mov
pop
xlat
cmpsb
pop
rolb
imul
push
cmp
in
lret
mov
insb
mov
and
mov
mov
into
push
out
stc
xlat
rcll
cmpl
cwtl
lea
shrl
and
jecxz
dec
adc
sbb
repnz
xchg
dec
lods
sbb
push
stos
push
roll
aam
jbe
adc
add
arpl
das
lcall
ss
lock
and
scas
pop
in
wbinvd
and
adc
jb
iret
lahf
scas
add
mov
jne
test
add
lock
ret
divl
push
adc
inc
xlat
jnp
xor
rorl
das
xchg
jo
inc
mov
cmp
test
sub
fcomi
out
repnz
ret
mov
ds
std
mov
cmpsl
ret
in
scas
xorb
scas
push
ret
negl
repz
nop
insl
filds
fucom
sbb
jo
dec
roll
lret
xor
add
test
push
dec
add
xchg
sbb
mov
cltd
stc
and
sub
std
xor
mov
pushf
jge
pop
or
pop
pop
sbb
fildll
add
pop
call
lds
pop
in
push
adc
mov
adc
in
push
sbb
sbb
mov
jo
push
repz
xchg
bound
dec
scas
sti
cmp
lds
mov
xchg
mov
inc
mov
dec
jg
js
pop
scas
fistl
jmp
xor
mov
sbbb
inc
mov
mov
xchg
and
lods
jne,pn
dec
shll
fisubs
insl
jbe
int3
loope
ret
and
mov
movsl
mov
dec
scas
or
loope
popf
mov
pushf
cwtl
cmp
push
sub
add
dec
push
xchg
adc
aas
ds
dec
je
fbstp
fisttpll
push
stc
pop
arpl
inc
gs
lock
shll
incb
lahf
stos
cmp
adc
sub
xor
and
xchg
lahf
imul
cmp
ret
enter
out
popa
jne
aaa
imul
enter
inc
or
mov
xchg
cmp
aad
mov
or
sub
fisubl
jo
inc
fisttps
push
rolb
pop
inc
addr16
xchg
aaa
jge
aam
out
mov
jns
or
jns
lods
mov
xor
call
fnstsw
or
jmp
xchg
jns
jb
cltd
cmpsl
xor
mov
les
dec
loopne
mov
jb
xor
fdivp
outsb
lahf
and
mov
or
mov
enter
jecxz
call
bound
loopne
xlat
repnz
inc
pop
and
fsubrs
test
mov
inc
cmpsb
repz
jmp
adc
ret
jle
out
and
or
dec
ja
dec
insl
adc
in
and
fistl
dec
mov
sbb
lcall
jl
pop
lock
in
mov
xor
pop
push
ret
int3
bound
and
pop
outsb
clc
inc
aam
cmpsb
lock
or
inc
jb
ss
int
mov
dec
mov
cmp
push
pushl
jae
jns
hlt
test
imul
fisttpl
lds
xchg
outsl
pop
lret
stos
das
jp
les
add
or
ficomps
shlb
icebp
ljmp
aad
jle
or
pop
pop
or
in
xchg
push
out
jo
inc
jl
mov
loopne
push
scas
movups
imul
pop
sbb
or
adc
fdivrl
push
mov
scas
imull
lahf
and
push
mov
push
pop
rcrb
mov
lds
repz
in
mov
lea
shll
outsl
dec
mov
call
push
jne
inc
xor
sbb
mov
outsl
adc
pop
out
jg
int
loopne
in
cmp
aaa
lods
lret
int
out
imul
shrb
cld
adc
lds
fstps
and
push
add
add
push
mov
add
jmp
fcomps
mov
jo
fs
inc
pop
adc
sub
jae
cmp
jne
test
decb
cmp
std
xchg
filds
rorb
jle
mov
dec
das
xchg
addr16
cmp
filds
sub
jle
test
and
mov
out
pop
push
shlb
adc
aam
xlat
mov
loope
jnp
mov
adc
pop
push
testb
dec
cmpsb
stos
and
ss
and
jne
roll
jle
cli
pxor
mov
mov
dec
mov
sbb
roll
push
cmp
pop
xchg
inc
in
xchg
mov
cmp
insb
xchg
jecxz
mov
orb
pop
rorb
mov
mov
andl
stos
xchg
cmp
pop
in
popf
mov
xchg
cltd
adc
mov
push
mov
mov
sbb
push
test
or
jns
fsubrs
push
cmp
jns
sti
cld
daa
lods
aad
addr16
xchg
fadd
sbb
cmpsb
adc
cmp
scas
xchg
data16
jb
cs
es
xor
jo
jle
aam
bound
lods
push
and
icebp
xchg
adc
loopne
cmpsb
fimull
mov
bound
sahf
mov
loope
sbb
inc
nop
pop
scas
daa
push
or
outsb
mov
outsl
push
in
mov
jne
push
insl
sub
inc
daa
sbb
mov
xchg
xor
movsl
add
xor
or
mov
into
lret
shrb
lcall
xchg
shll
jecxz
dec
dec
je
fcoml
and
xor
or
ss
daa
adc
inc
xor
lock
and
mov
dec
imul
popl
int3
cmp
lcall
out
out
aam
dec
adcb
fmuls
daa
mov
mov
daa
xchg
pop
add
js
mov
stos
and
push
pop
arpl
fdiv
xor
sbb
jg
pusha
sbb
negb
insl
xchg
jae
sbb
and
test
push
xchg
bswap
popl
int
rorl
xchg
jae
adc
out
push
mov
or
fbstp
subb
roll
or
adcb
inc
lret
ds
mov
add
andb
mov
lret
lods
lock
inc
insb
movsl
adc
cmpl
cmp
out
pop
mov
bound
sub
xor
ja
adc
jl
imulb
in
outsl
xchg
into
mov
pop
cwtl
pop
mov
xor
into
cmpsl
movsb
mov
or
dec
xor
fwait
or
jmp
dec
lret
jl
jnp
and
push
out
mov
sbb
movsb
dec
pop
lahf
sbb
pushf
push
mov
or
clc
in
repz
xchg
iret
add
inc
roll
add
arpl
adc
and
cmp
cmc
das
in
in
adc
and
mov
loop
add
ljmp
pop
sub
add
addr16
test
xchg
push
cwtl
pop
mov
xchg
jg
in
add
dec
loopne
sbb
das
mov
das
stos
xor
cmc
inc
push
repnz
stc
dec
mov
lahf
sub
xchg
dec
icebp
xlat
sub
lods
pop
repnz
push
mov
mov
add
clc
jae
stos
fsubrs
int
call
insb
arpl
mov
leave
ret
scas
xor
fstps
xchg
mov
stc
mov
lods
jne
pushf
jmp
add
add
out
dec
cli
fidivrl
sub
adc
xchg
pusha
insl
sbb
or
push
push
cmpsb
push
iret
repz
into
mov
movsl
cmp
jns
neg
xorb
das
mov
push
sarb
stc
ret
or
lret
lods
add
int
test
mov
movsl
add
inc
xor
out
fists
int
nop
inc
loopne
and
mov
fsubl
mov
inc
pusha
push
stos
imul
into
icebp
jmp
aas
mov
imul
movsb
ficompl
mov
pop
or
dec
and
fmul
mov
into
lea
cld
push
andl
mov
es
lret
fwait
sub
loop
add
xchg
cmp
std
pop
xchg
inc
and
cmp
fcoms
cmc
pushf
rcll
mov
push
or
mov
gs
aaa
jae
sub
sub
jge
jo
mov
sahf
lcall
popa
or
insl
push
fnstenv
cmpsb
shlb
cmp
ret
movsl
inc
push
lock
and
insl
push
arpl
jmp
push
and
mov
or
js
cmp
and
bound
inc
bound
pop
push
pop
sarb
enter
cmp
and
mov
push
cmpsb
scas
mov
aaa
mov
cltd
daa
js
repz
cmp
sbb
mov
mov
test
notl
xor
inc
fcoms
adc
ja
fmul
ret
mov
sahf
dec
fisubs
nop
repnz
sbb
mov
mov
jnp
test
ds
mov
arpl
dec
add
ja
aam
push
dec
jl
icebp
insl
and
inc
les
fcompl
repz
xchg
dec
cli
push
pop
or
xchg
jns
cmp
and
lret
fiaddl
mov
xor
outsl
notl
jg
movsl
jecxz
jg
pop
scas
out
fildll
cmp
sbb
in
loope
shld
fdiv
call
mov
lret
sti
sbb
rcrb
xor
mov
push
sub
divl
fcom
cli
jp
dec
in
out
icebp
sub
pop
push
std
and
outsl
inc
jae
in
data16
mov
push
jbe
popa
fsubrs
mov
dec
dec
out
inc
mov
cmp
cwtl
ds
push
aam
test
pop
in
xlat
int3
or
adc
hlt
lods
idivb
dec
push
iret
inc
xchg
stc
or
pop
cmp
in
cmp
aad
sbb
mov
push
or
or
add
push
xlat
mov
shlb
mov
enter
pop
jg
iret
inc
in
pop
push
jmp
add
insl
xor
xor
shll
cmp
mov
mov
jl
add
hlt
and
sub
cmp
push
push
push
and
jns
mov
mov
lret
adc
inc
xchg
and
cmp
inc
stos
xor
inc
mov
push
cmp
pop
imul
out
xlat
testl
out
pop
je
shlb
imul
in
jge
shrb
ss
int
or
out
push
push
pushw
mov
js
out
hlt
mov
in
movsb
xor
dec
sbb
add
jl
and
fmul
cmpb
aam
xchg
imul
popa
xchg
scas
sbb
jo
into
push
fcmovb
inc
cltd
movsb
xchg
lcall
push
or
mov
popa
add
xor
int
pop
dec
lcall
pop
cltd
jmp
adc
push
stc
int
ljmp
mov
clc
sub
lcall
xchg
xlat
xchg
xchg
stc
push
dec
or
nop
sbb
ds
mov
push
addr16
loopne
aam
in
mov
dec
dec
mov
lret
inc
cmp
jnp
adc
jb
hlt
jno
push
xchg
push
movsl
loope
lods
cmp
xchg
shlb
inc
in
subl
xor
cwtl
cs
nop
lcall
out
lea
mov
dec
xchg
jl
fsubl
push
xor
enter
push
xorl
mov
in
xor
and
loope
mov
sbb
xor
dec
repz
sub
dec
jo
push
rolb
mov
fisubl
pop
mov
add
sbb
sbb
xor
loop
or
sub
xlat
lods
inc
subb
arpl
sbb
inc
adc
lret
push
sub
dec
lds
nop
adc
sub
cmp
inc
cmp
mov
add
push
push
xorl
out
cwtl
cli
enter
mov
jno
lahf
loope
sub
jle
iret
xor
mov
mov
sbb
flds
pop
pop
ljmp
daa
push
lret
adc
andb
jo
pop
jo
fldcw
push
cmc
frstor
mov
push
pop
cmp
jae
inc
sub
sub
lock
addr16
je
shrl
add
jg
repz
adc
ret
dec
or
pop
adc
inc
push
push
popa
andb
mov
cmp
push
and
cld
imul
lods
imul
jb
push
pop
das
in
push
jmp
push
into
movsb
leave
sub
or
cmpsb
stos
fidivrs
mov
push
out
or
out
cwtl
mov
fistpl
lods
and
sub
bound
and
jg
xchg
sti
popa
lahf
pop
dec
or
nop
test
mov
xor
cmpsl
mov
or
das
xor
sbb
jbe
cmpsl
xor
popa
mov
xchg
and
out
mov
out
popa
push
push
int3
sbb
test
sbb
and
shll
mov
jns
mov
or
movsl
pop
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
ret
outsl
mov
sbbl
adcl
outsl
or
in
push
mov
xor
push
arpl
cmp
aas
shrb
cmp
stos
cmpsl
addr16
adc
sbb
fidivs
sbb
out
push
inc
cmp
push
loope
sub
sti
mov
fnstcw
popf
outsl
mov
test
popa
push
iret
or
sbbl
jmp
or
and
adc
pop
cld
stos
jp
idiv
pushf
imul
loopne
clc
jge
or
stc
cwtl
rorb
mov
notb
and
sti
jmp
adc
pop
sub
insl
jge
fisubrs
cwtl
xchg
div
in
je
cli
clc
arpl
xor
jl
fists
mov
xchg
bound
mov
movsb
add
xchg
divb
enter
mov
cmp
xor
mov
sbb
dec
xor
les
nop
fstl
lods
xchg
pop
shll
adc
lahf
iret
shlb
dec
into
in
in
ret
fnstsw
out
in
fdivrs
ds
movsb
push
push
inc
sbb
ret
jne
test
and
fs
push
jbe
fmuls
aad
jo
movsb
sub
cwtl
dec
xchg
test
aam
push
xchg
and
jp
and
pushf
sbb
and
lahf
or
push
pop
pushf
or
mov
or
mov
cmp
jae
and
fistpll
stc
cmp
movsb
lcall
mov
fistpll
lock
rol
xchg
mov
push
mov
movsb
shll
call
mov
cmpb
loopne
hlt
mov
dec
scas
mov
and
out
sbb
jle
testl
fsubs
mov
xchg
xchg
imul
sub
lret
enter
jnp
cmp
push
jbe
icebp
faddl
mov
mov
sub
int3
mov
subb
mov
ss
sbb
and
popa
and
insb
daa
int
outsl
jmp
aaa
sbb
daa
dec
xor
mov
push
and
stos
inc
dec
cmpl
addr16
push
and
fldl2t
jle
testb
test
shlb
xchg
cli
dec
dec
lcall
inc
fnstcw
sub
xchg
sub
sti
inc
andl
push
mov
push
jl
or
daa
pop
icebp
pushf
icebp
push
jecxz
notl
xchg
dec
jmp
xchg
cmp
stos
jne
pop
or
cltd
into
or
leave
sbb
jecxz
lods
out
push
cltd
sbb
fnstcw
mov
inc
out
push
out
push
inc
xor
imul
cmp
insl
repz
adc
mov
bound
jbe
aaa
fidivrl
pusha
cmp
pop
pop
stc
pushf
cmp
dec
adc
sar
in
mov
inc
mov
jle
mov
push
jle
jp
mov
shr
gs
rolb
lea
jns
std
sub
mov
xchg
push
fs
ljmp
iret
xchg
js
imul
or
cmp
add
push
aam
dec
lods
add
sbb
fs
cmp
lea
mov
lock
push
pop
push
sbb
fcmovnbe
in
mov
jp
outsb
cmp
aad
mov
xor
add
fs
loop
sahf
fsub
xorb
adc
insb
int3
sub
call
test
test
je
loopne
and
in
ds
shrb
mov
out
test
add
sub
into
or
xchg
pop
or
lea
test
mov
xchg
dec
aad
inc
add
mov
addr16
shll
outsb
fisttps
push
mov
stos
xor
sub
dec
leave
in
scas
in
fwait
cmp
pop
add
insb
cld
push
cld
mov
aas
pop
movsl
std
repz
roll
pop
jp
sti
xchg
and
inc
inc
popf
and
arpl
or
or
addb
leave
out
stos
sbb
push
cmp
mov
add
adc
xchg
dec
and
cs
inc
dec
cmp
ds
or
mov
clc
rclb
in
je
pushl
std
jo
repz
push
ds
dec
ds
dec
outsl
sahf
or
jo
xchg
addr16
shl
fdivs
arpl
sti
xor
mov
jg
xchg
or
filds
ret
dec
sahf
xchg
mov
ds
push
das
dec
sbb
cmp
lret
movsl
loop
fmul
dec
test
dec
jno
aas
xor
out
push
xor
dec
fidivl
dec
aam
jle
pop
pop
aad
or
outsb
xacquire
pop
pop
lods
push
mov
mov
push
push
filds
popf
xchg
adc
add
dec
push
mov
scas
or
inc
pusha
add
imul
dec
dec
iret
lret
iret
xchg
mov
push
mov
pop
lock
movsl
out
shlb
iret
mov
xchg
sti
call
mov
xor
movsl
xchg
repz
dec
cmp
jne
xchg
lock
add
and
lcall
inc
sub
add
sbb
push
pop
aas
dec
pop
and
mov
and
sbb
cmp
das
inc
lods
out
add
mov
xor
mov
push
idivl
inc
cmpsb
pushl
mov
sbbl
xchg
jb
loope
mov
and
adc
aad
dec
add
xor
lcall
dec
jne
mov
stos
push
xor
data16
call
pop
sub
inc
int
js
xor
mov
push
cli
mov
call
sbb
int3
xor
mov
pop
insl
iret
add
cmp
fwait
sbb
sub
and
or
aad
or
loop
in
das
int3
push
or
xor
inc
sbb
dec
int
ret
jle
jnp
dec
data16
pushf
lods
dec
lret
sbb
push
mov
lods
or
fnstsw
leave
push
cwtl
jl
clc
daa
test
jno
ret
movsb
xchg
cmc
inc
or
int3
and
test
jle
lahf
push
mov
je
pop
pop
push
cmp
sub
inc
js
mov
out
cmp
ret
xchg
fiadds
and
mull
arpl
je
lcall
jns
or
adc
outsl
mov
test
adc
mov
lahf
pop
icebp
int
xchg
out
fidivs
mov
imulb
sub
adc
sub
mov
das
xor
add
pop
sti
dec
mov
inc
mov
stc
push
jbe
cli
test
jo
cmp
or
dec
pop
inc
sub
sub
fstpl
mov
sub
dec
cmp
mov
insl
sarb
jne
scas
xchg
xchg
pushf
dec
jmp
add
jne
lds
mov
push
or
test
jmp
jle
fwait
das
mov
and
mov
outsl
dec
adc
sub
sbb
dec
pushf
stos
sti
inc
ds
cmp
push
jmp
std
insl
jnp
mov
scas
sub
cmpsb
pop
mov
xchg
fisttpl
cwtl
mov
mov
mov
pop
sub
fs
stc
cmp
push
dec
mov
xor
adc
pop
cmc
mov
and
cmpsl
push
icebp
in
mov
add
jecxz
xchg
xor
or
inc
mov
leave
xchg
xchg
lret
inc
call
push
push
mov
fs
mov
adc
loop
scas
shl
fwait
mov
xor
ret
rcrl
mov
or
push
dec
mov
sub
lret
jecxz
cltd
cmp
and
fcmovb
decb
pop
test
xchg
pop
lds
lock
std
lock
cmc
repnz
out
out
sbb
push
adc
jnp
jle
mov
or
jno
int
mov
xchg
sbb
lods
and
dec
inc
aam
sbb
pop
sti
push
rol
xor
inc
and
inc
mov
xchg
inc
inc
pushf
lret
pushf
shrl
ret
jno
xchg
xchg
imul
fmul
pop
pop
sbb
arpl
sub
pop
push
in
sub
dec
adc
rcl
cmp
xchg
sub
pop
and
jmp
je
repz
gs
inc
lret
mov
in
push
add
xchg
nop
or
divb
adc
jo
sbb
imul
rorb
mov
mov
adc
xor
xchg
out
gs
mov
loope
mov
push
or
hlt
test
adc
repz
xchg
xchg
jne
out
jge
pop
jecxz
repnz
jne
out
mov
jae
loope
scas
xchg
push
test
xchg
orb
push
mov
in
clc
dec
lock
mov
negl
imul
pusha
test
repz
mov
out
sub
jmp
inc
ss
pop
add
push
roll
cld
in
ret
scas
clc
vmwrite
sub
movq
push
fs
mov
push
es
push
mov
xor
cmpsl
pop
jno
in
loope
incb
ffree
testb
ljmp
popa
aas
add
fimull
or
mov
test
inc
adc
xchg
or
out
adc
ror
repz
mov
sub
in
jnp
mov
mov
out
inc
cmp
and
test
mov
inc
les
push
rorb
cmp
jb
add
fsts
inc
xchg
and
leave
sub
gs
sub
mov
leave
lcall
notb
mov
push
in
sub
insb
sbb
and
les
lds
sbb
in
hlt
push
xchg
and
loope
inc
loopne
filds
ja
addr16
ret
dec
push
push
mov
cld
mov
inc
dec
mov
pop
mov
es
movsb
jb
aas
jmp
push
in
hlt
sub
repnz
mov
rcll
loop
add
fdivrs
ds
test
mov
inc
stos
and
out
js
push
push
call
pusha
cmp
mov
lcall
mov
mov
dec
pop
cmp
cmpl
ss
outsb
lods
out
xchg
mov
std
inc
repnz
xchg
scas
stos
fnsave
push
dec
mov
into
pop
add
lea
add
jecxz
mov
add
add
in
jno
arpl
push
or
testl
loop
push
jnp
xchg
sbb
cld
adc
lea
mov
out
push
aad
xchg
xor
sub
andb
ficompl
add
sub
or
ja
js
insb
rcll
adcb
fcomp
and
daa
jns
ja
inc
lea
inc
dec
mov
xchg
bnd
jns
repnz
in
fisubl
or
push
inc
es
xchg
pop
add
ja
and
and
std
clc
out
or
mov
cmp
push
hlt
ret
mov
jle
jge
jecxz
push
push
and
out
dec
add
jae
out
addr16
xor
ja
pop
mov
and
stc
hlt
xchg
sahf
adc
adc
xlat
pavgw
add
push
cmpsl
rcrl
clc
mov
gs
push
flds
sbb
pop
ss
push
xor
mov
mov
dec
sbb
jbe
dec
push
loopnew
sbb
push
sar
xchg
aaa
jne
aad
push
shlb
mov
add
out
sbb
or
out
aaa
pop
mov
adc
mov
mov
xorl
mov
insl
sahf
inc
outsb
or
nop
ret
push
mov
jo
jo
pop
stos
lock
nop
fisttps
xor
fdivr
pop
cmp
ficoms
or
outsb
add
pop
ss
sbb
mov
or
or
inc
mov
negl
push
movsl
mov
cwtl
mov
lods
mov
fmul
shll
mov
mov
in
sahf
mov
dec
mov
jecxz
mov
xor
aad
fbld
mov
jl
sub
cmp
roll
lret
sbb
xchg
loop
adc
inc
adc
and
pop
call
jmp
pop
sub
loope
and
je
jecxz
in
out
sub
es
jnp
add
ja
xchg
sub
cmpsb
nop
imulb
idivb
inc
daa
mov
les
loopne
mov
fisubrs
add
jle
outsb
je
loopne
mov
push
call
into
dec
lea
out
aaa
push
lods
jbe
bound
out
ja
push
clc
xor
push
lods
mov
leave
and
test
iret
inc
mov
and
scas
jns
xlat
add
out
mov
xor
or
xchg
test
mov
dec
pop
shll
mov
jne
xor
xlat
sub
fildl
mov
sub
leave
fmull
cmpsb
lds
sub
test
aaa
jo
daa
xlat
dec
lods
je
add
icebp
fiadds
cmp
mov
xchg
hlt
test
lret
and
jecxz
lds
jecxz
mov
or
xor
movb
jle
or
and
xchg
cltd
out
negb
dec
xor
ret
mov
ds
jle
rolb
pop
jno
leave
rcl
mov
cmc
test
sub
add
lret
adc
mov
call
jae
add
negb
fld
dec
jbe
in
lods
xchg
repnz
cmpsb
adc
or
xchg
movsl
cmp
or
aam
test
mov
loope
push
fwait
movsl
or
outsb
mov
loopne
cmp
dec
popa
pop
test
stc
mov
ljmp
adc
clc
roll
insb
sbb
xor
or
sub
mov
fisubrl
int
mov
das
test
rorb
jge
in
push
arpl
loopne
out
repnz
push
xchg
jno
into
das
jne
sbb
xor
dec
dec
sbb
inc
cmpsl
mov
inc
jno
pop
lea
jecxz
mov
out
inc
mov
mov
gs
cltd
popf
jo
add
out
movsb
into
cmp
insl
push
xchg
mov
add
pop
pop
sarb
add
mov
test
pop
das
int3
insl
adc
in
daa
jle
cld
pop
mov
mov
int3
or
and
pop
sub
mov
push
push
inc
xor
mov
es
sti
xor
das
cmp
loopne
pop
sarb
fs
lret
sahf
call
rcl
mov
lods
sbb
or
mov
fwait
inc
es
ljmp
or
fs
mov
lock
stos
adc
repnz
jae
inc
gs
jb
push
cmp
test
cmpsl
jbe
movsb
xchg
add
dec
and
adc
stos
aas
mov
xor
roll
cld
mov
scas
fisubs
pop
adc
int3
adc
xchg
pop
lds
scas
xchg
ljmp
pushf
out
cmp
mov
jle
clc
leave
push
js
je
cwtl
push
iret
cld
mov
iret
mov
mov
fisubrl
mov
addl
xchg
jns
icebp
addb
and
ret
cmpl
xor
dec
test
test
xor
pop
mov
ror
flds
negl
mov
pop
cs
test
shll
clc
jp
cs
daa
iret
and
xor
cmc
sub
mov
xchg
scas
add
and
add
pop
repz
adc
les
test
adc
xor
push
inc
xor
sbb
sub
out
cmp
fildll
aad
adc
add
or
pop
jb
test
cmp
repz
dec
rorb
sbb
cmp
fisttpl
adc
aam
outsl
cmp
sbb
adc
xor
jns
adc
jo
xor
mov
add
int
mov
jne
pop
vcvtdq2ps
mov
stos
out
call
dec
and
add
inc
outsl
fs
js
int
push
loope
inc
push
or
dec
mov
and
xchg
mov
add
mov
xchg
inc
mov
push
out
and
sbb
and
dec
adcl
xor
inc
inc
push
aaa
bound
outsb
in
pop
cld
mov
add
addr16
es
aas
and
jge
movsb
add
mov
adc
jo
pop
ret
lds
cmp
dec
push
rcl
or
xchg
sub
mov
or
rorb
jb
icebp
dec
movsb
or
ja
cld
mov
mov
push
mov
je
push
mov
adc
fst
xchg
add
aaa
es
out
lds
cltd
and
xor
lret
cmc
imul
loope
push
pop
lea
divl
sub
out
fildll
lret
inc
add
loopne
adc
cmp
jmp
mov
xchg
jo
cli
mov
out
ljmp
add
sub
repnz
or
shrl
cmc
xchg
ds
outsb
dec
mov
xchg
js
cltd
pop
fcoml
mov
mov
jnp
lods
test
push
lods
mov
jp
fmuls
fsubl
xlat
mov
or
orl
jp
or
lea
cmp
fbstp
adc
inc
jp
out
nop
inc
ror
jo
outsl
aad
std
sub
popa
sub
cmpsb
mov
push
fistpl
xchg
lcall
mov
push
rcl
in
push
je
xchg
pop
sar
push
push
out
imul
cmpsb
mov
xor
lret
mov
lods
push
cmp
scas
sbb
push
repz
das
sti
testl
xchg
lods
mov
xlat
jnp
add
inc
std
and
sbb
cmp
inc
vorps
inc
loope
iret
cmpsb
les
enter
dec
cli
push
inc
mov
and
lret
ja
jmp
iret
push
or
cmp
ja
insb
push
mov
loope
add
fadd
das
cmp
movsl
call
push
loope
adcb
movsl
cmp
push
fucomi
pop
testb
and
scas
cmc
scas
add
sub
add
mov
imul
mov
mov
fistl
dec
add
and
jmp
jp
call
lock
clc
mov
or
out
ss
sub
ret
add
push
pop
mov
adc
and
fprem
call
xchg
fdiv
push
lods
sub
and
dec
cmp
inc
lret
xlat
push
pop
subb
jecxz
inc
scas
das
stos
jl
jecxz
das
and
pop
scas
pop
cli
adc
pop
inc
aam
repnz
and
popa
jge
out
rorl
mov
pop
mov
pop
movsb
mov
pop
dec
xlat
lds
stc
mov
adc
mov
ret
adc
in
inc
sub
idivl
aam
pop
imul
adc
in
and
mov
sbbb
push
xor
ret
add
cmp
push
arpl
pop
sub
or
xchg
test
lcall
and
adc
adc
pop
cmpsb
ss
add
lret
mov
rorl
adc
out
sub
cli
in
fbld
xchg
push
mov
iret
sub
popl
addr16
test
mov
fnstenv
mov
cmp
dec
cwtl
lods
inc
lea
notw
xchg
and
ss
dec
adc
fucomip
ret
loope
lcall
sub
ret
lret
test
cmp
pop
stos
leave
dec
shrl
in
xlat
dec
cld
xchg
cmpl
fidivs
cmp
push
xchg
loope
dec
jns
fcoml
jle
es
or
into
xor
xchg
mov
popa
and
push
les
mov
test
les
jmp
push
shll
add
out
and
push
xchg
xchg
sbbb
mov
sub
into
imul
add
jae
fs
mov
insb
xchg
cltd
scas
jp
lds
or
mov
pop
cmp
inc
cmpsb
js
push
push
xchg
cmp
xchg
cmp
mov
lcall
sub
cmp
push
movl
xlat
in
ret
dec
xchg
inc
mov
jae
pop
pop
dec
aad
or
and
mov
repnz
mov
add
xchg
jbe
out
cmp
xor
add
sbb
mov
mov
pop
mov
sub
mov
scas
dec
pop
inc
test
add
mov
in
int3
loopne
out
fsubp
in
mov
rcr
jmp
in
add
pop
mov
cld
pop
cmp
out
dec
loop
divb
mov
lret
aaa
mov
adc
push
ret
jmp
cs
insb
mov
jmp
cmp
stos
pushf
push
in
sub
cmpsl
in
pop
int
in
pusha
je
sarb
push
push
repnz
cmp
sub
xchg
cmp
test
mov
subl
popa
jns
clc
lret
sub
push
js
mov
aas
es
mov
sbb
outsl
pushf
inc
mov
mov
mov
psubsw
insl
sbb
sub
fstl
adc
sub
cs
mov
and
mov
pusha
lods
mov
inc
dec
mov
sub
dec
orb
aas
cmp
test
scas
add
sub
fisubrs
xor
pop
mov
jmp
adc
pop
xchg
mov
pop
scas
ja
push
repz
addr16
bound
mov
xchg
mov
inc
or
cmp
sbb
pop
inc
jnp
sub
or
pop
push
lods
inc
mov
sub
mov
mov
les
out
ret
fs
inc
pop
mov
jae
orb
and
repz
imul
mov
sub
dec
sub
add
inc
das
inc
cs
push
push
pushf
int
fwait
dec
adc
sub
aaa
sbbl
mov
cmp
fisubrs
mov
sbb
aam
call
xor
add
jne
cld
sarl
nop
clc
bound
xor
xor
mov
aam
pop
jae
in
dec
addr16
jp
fsubs
add
lret
xchg
or
xor
adc
xor
cmpsl
mov
xchg
loope
fmuls
pop
das
inc
aaa
xor
hlt
aam
inc
mov
cmpsb
cmpsl
outsl
popa
mov
push
xchg
loope
dec
arpl
pop
xchg
sub
lcall
jmp
scas
arpl
xor
es
adc
mov
mov
sub
jp
pushl
mov
push
dec
in
dec
lds
push
cmp
in
test
fidivrs
ss
insl
mov
xor
xor
push
mov
mov
fstp
sub
xchg
xchg
test
mov
mov
das
add
stos
test
xor
fcoms
in
cmp
dec
pop
pop
push
mov
mov
and
and
push
push
jno
sbb
and
cli
in
sbb
fwait
and
inc
jns
mov
jge
stos
cld
ret
test
loopne
xchg
aas
test
daa
xchg
int
test
daa
clc
shll
mov
iret
icebp
mov
sub
cmc
adc
dec
leave
rclb
adc
popf
pop
fmull
push
dec
mov
mov
add
mov
test
stos
sub
subb
dec
negl
push
dec
inc
pusha
aaa
cmpsb
cmpsb
je
mov
in
dec
loope
mov
mov
jns
xchg
sub
cmpsl
xchg
dec
and
popa
imul
scas
xchg
data16
inc
mov
orl
cli
cmp
shrb
mov
sahf
jne
imul
jb
push
xchg
add
xchg
in
mov
lret
cmp
inc
push
test
js
jnp
lds
lea
mov
add
and
in
in
jp
lcall
mov
inc
inc
into
cld
ret
add
xor
aas
dec
outsb
pop
cmp
outsb
adc
or
das
xor
imul
iret
jnp
lock
add
pop
imul
push
test
scas
cmpsl
xlat
imul
call
or
adc
lods
push
xor
out
pop
popa
push
in
cmpsb
pusha
movsb
push
adc
jmp
fistl
lea
or
pop
xor
insl
mov
pop
push
xor
in
push
add
push
cmpsl
mov
jnp
mov
stos
out
fwait
push
pop
aam
jp
mov
push
and
push
add
jle
mov
xor
xchg
sub
cmp
addb
adc
sbb
ljmp
and
fmull
push
cmp
lock
cmp
test
popf
movb
pop
lcall
lock
hlt
out
movsl
arpl
test
push
pop
lods
insb
enter
cmp
int
lret
stos
jle
pop
and
mov
pop
rolb
sbb
mov
iret
mov
shr
test
push
xchg
inc
mov
lds
movsb
mov
outsl
cmc
push
inc
jp
push
and
xor
jo
js
iret
add
test
shlb
fstpt
pop
mov
in
mov
push
fcom
dec
mov
cltd
movsl
pop
scas
push
mov
push
ss
popa
mov
ljmp
stos
cmpsl
aad
insl
in
cltd
jp
push
inc
xchg
mov
push
xchg
ds
or
stos
cwtl
imul
mov
inc
popf
pop
mov
pop
pop
stos
data16
sub
sub
push
pop
xchg
mov
xchg
fadds
enter
subl
cmp
popf
ja
popa
adc
lret
cmpb
push
jbe
pop
idiv
popf
lret
outsb
jge
jo
in
movsl
jle
cmp
shll
or
mov
add
mov
push
push
jnp
int3
adc
lea
stc
hlt
das
cmpsb
scas
arpl
cmpsl
adc
jecxz
pushf
cmp
and
mov
dec
xor
int
push
stc
push
jne
sub
jl
sub
xchg
pop
adc
in
inc
imul
nop
in
push
ret
fldt
sub
or
ja
push
cmp
mov
test
out
js
subl
fisttpl
mov
mov
stos
inc
nop
stos
xchg
xor
fldenv
icebp
cmp
stos
sahf
lcall
fsts
movsl
cmp
or
ret
lods
push
dec
scas
and
in
mov
aaa
icebp
sub
jmp
mov
push
sbb
pop
xchg
sahf
push
xchg
into
movsl
stos
xor
xor
daa
fidivl
sbb
cmp
fsubs
jecxz
mov
sbb
inc
cmp
int3
jp
cli
mov
add
jne
pushf
add
les
shrl
mov
adcl
sbb
pop
popf
ficoml
and
push
out
pop
repz
fdivrs
mov
fs
call
or
leave
mov
adc
std
aad
int
out
mov
loopne
in
leave
lahf
push
std
or
cmp
rcrl
shrl
mov
push
and
lret
repz
nop
lods
ret
std
mov
out
cmp
loop
test
and
mov
mov
mov
and
shll
cmp
pop
dec
lods
in
cmp
mov
sbb
ret
mov
mov
into
push
clc
add
mov
sbb
mov
pop
movsl
ja
stos
test
sbb
cld
and
xor
xor
sub
lea
lcall
push
inc
imul
in
inc
xor
addr16
es
pop
inc
or
aam
in
leave
enter
mov
or
outsl
push
or
jl
pushf
pop
rcrb
mov
cmp
cli
cmpb
fstpl
or
sbb
cmc
sub
add
xor
xchg
pop
push
out
in
in
aad
outsl
cmp
sbb
or
call
sbb
mov
push
add
inc
jmp
mov
fwait
mov
jecxz
inc
andl
icebp
sub
pop
dec
mov
pop
sbb
fsts
xor
adc
xchg
mov
or
pop
adc
dec
daa
inc
es
push
cld
sbbb
jg
pop
jl
inc
shll
xchg
iret
aas
or
jmp
cmp
notl
lret
cmp
jb
incb
jae
call
push
push
cs
xorb
jle
pop
mov
jmp
ret
adc
pop
xorb
mov
xchg
push
or
mov
stos
xlat
or
leave
jg
aas
sub
and
pop
adc
das
inc
dec
int
test
push
jo
push
int
ret
aad
ret
adc
jnp
xor
nop
int3
cld
add
ret
xor
pop
das
js
popf
xor
push
adc
jg
call
jb
mov
popf
imulb
fisttpl
mov
add
sbb
insl
cmc
outsl
mov
mov
cmp
data16
lahf
cmp
sbb
dec
cmpl
jmp
dec
fiadds
jne
push
mov
mov
and
addb
pop
dec
decb
adc
fsubrs
pop
out
shlb
mov
or
and
inc
gs
adc
push
push
test
jg
gs
xor
lret
lods
or
mov
hlt
adcl
mov
cltd
inc
stc
movsb
xchg
jl
idivl
imul
mov
hlt
or
repz
popl
shrl
hlt
adc
mov
andb
sbb
cmp
push
pusha
inc
dec
in
shl
mov
mov
mov
ret
pop
aad
dec
in
and
nop
out
inc
stos
pop
pop
insb
jo
jl
adc
mov
xlat
lahf
push
cmp
or
out
fcmovb
adc
jle
es
loop
mov
add
xchg
xchg
adc
cli
pop
in
movsl
out
out
push
mov
rclb
fstl
cmp
sbb
cld
loopne
xchg
ss
xchg
sbb
in
sub
inc
imul
mov
push
jnp
jae
xsave
mov
fs
dec
fbstp
les
pop
mov
mov
clc
aas
or
insb
dec
repz
jecxz
fstps
sub
pop
fiaddl
xchg
jbe
dec
rcll
ja
pop
push
dec
jno
fdivrs
pop
pop
xchg
push
cmp
inc
cmpsl
loop
adc
pop
sbb
enter
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
rcrl
nop
jge
inc
stos
dec
adc
mov
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
