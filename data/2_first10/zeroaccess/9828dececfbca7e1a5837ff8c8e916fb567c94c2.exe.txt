push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
jge
sarb
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
dec
dec
int
xor
xor
arpl
daa
loopne
push
sbb
xchg
mov
inc
or
sahf
sub
cmpsl
repnz
inc
push
cmpb
sbb
and
fdivrs
es
cmp
push
iret
mov
inc
sbb
insl
cld
jmp
int
sar
xor
cmp
call
inc
adc
clc
negl
or
adc
add
push
inc
xchg
lods
push
add
mov
cmp
stos
cmpb
or
cltd
add
test
or
or
out
mov
mov
hlt
out
into
dec
xlat
shrl
inc
mov
arpl
mov
inc
jge
in
and
mov
xor
mov
icebp
repnz
daa
lods
pop
pop
sub
das
adcb
outsl
jbe
lods
push
jno
mov
sub
sti
xor
jns,pn
cmp
xchg
popf
mov
xchg
test
decb
out
and
cmp
in
mov
mov
push
ds
sub
dec
shl
subb
and
inc
inc
jmp
and
fs
inc
xchg
mov
add
fidivrl
push
fsubrs
cs
rcrb
jb
stc
repz
add
cmpsl
and
scas
fildll
adc
je
adc
std
xchg
fdivs
mov
mov
xchg
icebp
jp
dec
icebp
sub
dec
or
sti
inc
aas
daa
push
sub
jb
mov
jmp
sahf
push
in
mov
ret
add
mov
ja
or
cli
aam
adc
pop
ljmp
or
lods
jae
aaa
es
mov
sahf
arpl
and
jnp
mov
dec
mov
ds
clc
cmp
enter
loop
inc
and
out
rorl
cli
orb
adc
in
inc
shrb
stos
sub
arpl
call
cs
push
fsubrl
sub
fsubr
pop
or
popa
sub
jge
jle
xlat
cwtl
popf
mul
cmpsl
lcall
adc
xor
stc
aad
mov
pusha
out
sub
and
aaa
push
jb
lods
jb
xchg
jb
outsl
lret
fwait
ret
cmp
fwait
outsl
scas
leave
or
or
rol
fidivl
imul
clc
mov
cs
add
lock
shll
adc
inc
mov
push
push
xor
in
sub
cmpsl
orl
fisubl
mov
and
push
scas
add
loop
out
movsl
shll
icebp
lock
push
stos
adc
mov
pop
outsb
jno
test
push
lods
cmp
imul
fsubr
inc
lret
lods
sarl
sbb
push
mov
arpl
outsb
inc
fxch
pop
stos
mov
adc
int
mov
aad
sub
ss
fwait
push
stos
lock
or
cwtl
hlt
popf
rcl
pop
and
dec
or
sub
lods
out
mov
out
lock
and
or
jmp
lcall
loop
jns
fs
mov
jp
sbb
leave
mov
icebp
adc
and
enter
and
lahf
js
xchg
mov
jge
int3
int
ficompl
cs
xchg
dec
push
inc
iret
pop
adc
cltd
imul
xchg
rcll
xchg
cs
sub
adc
xor
and
stc
jnp
and
lret
cmpsl
scas
push
das
sar
inc
in
cmpsb
xor
and
cmpsb
xor
xchg
push
scas
movsb
xchg
mov
cmp
push
cmp
out
xor
mov
push
xchg
fdivs
xchg
pop
in
sub
inc
xorps
jl
add
push
shlb
jg
mov
stc
inc
jae
das
cmp
mov
insl
ds
lcall
and
je
test
popl
pushf
pop
arpl
push
inc
xchg
jne
aad
inc
ds
nop
fadds
hlt
cmp
aas
mov
shlb
aaa
sbb
es
pop
mov
lock
ljmp
add
aaa
sbb
adc
pushf
loope
imul
inc
aad
dec
lea
sub
mov
pop
inc
sbb
cmp
ss
inc
push
and
test
inc
orb
push
addr16
cmp
movb
dec
shll
and
dec
pop
mov
or
pop
adc
lods
mov
rcll
test
sti
int
adc
and
push
push
mov
sub
or
dec
push
push
inc
lods
sub
jecxz
adc
loop
and
roll
pushf
dec
pop
stos
into
in
adc
xor
pop
cli
pop
lahf
imul
xchg
gs
sbb
xchg
sub
adc
add
mov
lods
pop
cs
cmp
sub
pop
sbb
daa
in
rcrb
push
sub
daa
xor
lea
sub
pop
xchg
mov
push
movsb
out
jecxz
jb
cld
xchg
sub
jmp
sarb
cmp
inc
lds
adc
leave
push
stos
pop
mov
mov
or
ret
aaa
mov
das
movsl
mov
jl
jns
add
cmp
aaa
jge
cld
bound
sub
dec
pop
fildl
fisubs
test
dec
aas
clc
out
mov
rcr
ss
push
sbb
aam
add
shl
cmpsb
lcall
dec
call
loop
addr16
nop
inc
ljmp
fs
sbb
out
jns
insl
dec
dec
bound
sbb
ljmp
mov
jns
lods
sub
rol
mov
mov
jno
pop
or
in
imul
jmp
loope
jmp
hlt
insl
cmp
mov
aad
jg
or
add
xchg
and
test
in
std
mov
adc
and
popa
pushl
mov
add
out
push
xor
xchg
bound
fisttps
push
xor
dec
js
or
and
pop
test
mov
jle
inc
mov
sub
out
imul
lret
xchg
jecxz
scas
lea
out
aas
mov
push
div
mov
jle
outsl
cli
aad
pop
push
imul
lcall
mov
pop
push
aad
rcll
lock
pop
mov
dec
repz
lods
test
mov
ror
dec
or
jp
or
jo
add
jle
mov
push
clc
in
add
push
sub
adc
mov
fs
or
fisubs
in
movsl
pushf
rcrb
je
js
pop
cmc
fisttpl
inc
inc
pop
cmp
test
sbb
push
push
mov
mov
mov
and
loop
daa
js
jno
outsb
ljmp
loop
mov
push
add
sti
jbe
or
outsl
rol
in
loopne
push
subb
jge
push
mov
cmp
pop
cltd
adcb
inc
push
cwtl
dec
negb
cmpsb
in
jb
inc
scas
mov
divl
test
add
push
add
adc
sub
pop
stc
xchg
jnp
ret
sbb
jl
popf
push
outsb
jecxz
lret
jo
aas
xchg
and
pop
or
and
inc
out
adc
repz
dec
loop
andl
movsl
rorl
inc
out
xor
shll
add
dec
push
push
push
popa
xlat
lods
adc
mov
arpl
sbb
rcr
sarl
inc
add
and
into
mov
shlb
jo
ss
mov
in
imul
lret
or
pop
scas
cmpsl
mov
mov
mov
out
jg
sub
clc
push
xlat
in
xchg
xorb
cmp
cmp
push
xchg
xchg
fsubs
mov
push
shll
sub
fs
xor
inc
icebp
sub
pop
outsb
push
rorb
jp
jo
push
jmp
mov
or
push
hlt
lds
nop
mov
icebp
scas
add
and
leave
daa
mov
ljmp
pusha
and
outsb
ljmp
mov
lcall
jb
dec
mov
pop
mov
jns
lock
into
ljmp
popf
push
pop
inc
xor
out
or
and
dec
xor
push
mov
ljmp
cmpsb
in
fsubl
cmc
sbb
mov
or
push
lcall
cmp
in
aad
pushf
popf
xchg
pop
adc
or
aas
xor
pop
pop
pop
mov
stos
mov
js
pop
mov
add
or
push
mov
mov
push
pop
popf
and
cmpsb
les
push
xor
adc
aas
cltd
push
gs
test
cld
mov
or
sahf
add
gs
xor
dec
jmp
outsb
xlat
ja
lods
push
add
sub
or
push
ljmp
lods
jo
jbe
xlat
push
mov
test
xor
push
icebp
xor
push
popf
out
sbb
fsubrs
sahf
jnp
pop
pop
int
subl
pusha
jae
cmp
mov
xchg
test
fdiv
add
cmp
ja
imul
inc
xor
repnz
xor
and
mov
arpl
sub
mov
fsubrs
xor
je
dec
mov
push
jmp
loope
jle
popf
cs
aaa
aas
inc
pop
arpl
rcll
subl
andl
aas
pop
aad
mov
aad
test
xchg
fwait
out
push
dec
fdivr
bound
dec
shlb
fs
xor
ficoml
mov
push
xchg
dec
aaa
push
dec
lcall
fildl
lds
mov
pop
data16
test
lahf
xor
pop
lret
pushf
and
add
outsb
std
mov
lock
stos
out
das
enter
js
xchg
lahf
add
sub
frstor
int3
fadd
lret
ret
fsubp
into
loopne
lret
sub
add
sub
dec
inc
mov
repz
ss
inc
cmp
js
and
jg
fsubs
push
inc
jp
mov
push
sbb
dec
push
iret
push
shl
pop
sbb
insl
cld
dec
scas
pop
jne
or
and
xchg
scas
mov
push
and
fsubrl
ja
xchg
push
imull
or
mov
leave
stos
or
ret
ffree
push
lcall
mov
sar
xchg
movsl
pop
out
jecxz
push
jb
loopne
pushl
cmc
cmp
and
ja
pop
frstor
roll
rorb
mov
adc
pop
addl
scas
add
out
call
mov
sub
out
and
push
in
orb
or
idivl
dec
mov
mov
mov
sub
stos
ret
int3
push
cmpsl
lret
imul
and
ja
ss
in
push
xchg
inc
jmp
arpl
lcall
fnsave
mov
adc
xchg
xor
pop
or
adc
out
into
dec
cmp
cmp
data16
dec
test
out
pop
pop
mov
push
push
jg
enter
lea
dec
gs
cmp
or
popa
lods
fdivs
push
push
dec
sbb
addr16
ja
sahf
mov
or
std
js
fimuls
xchg
cmp
push
mov
icebp
repnz
jne
ja
lods
sub
ss
lahf
dec
add
mov
cs
cmp
std
mov
sbb
cmp
push
fs
xchg
not
mov
dec
mov
jno
jb
push
aam
stos
xor
fmull
mov
ret
pop
pop
sub
nop
mov
xchg
mov
sub
or
and
pop
mov
mov
or
xor
push
mov
dec
jle
xor
rcr
out
mov
dec
jbe
sbb
lahf
mov
ds
in
sti
mov
mov
stc
in
movsb
sbb
pop
frstor
into
pusha
push
or
in
jnp
adc
loopne
leave
in
adcb
add
les
iret
jmp
aas
andl
push
xchg
fnsetpm(287
push
inc
jl
xchg
cmp
sub
pop
cmp
out
cld
std
dec
clc
inc
insb
cmpsl
addr16
ds
pushf
cmpl
lock
movsb
jmp
stos
data16
push
rcll
xchg
adc
push
repz
sbb
jae
add
adc
in
outsb
pop
js
jnp
iret
cld
jno
pop
fldt
imulb
leave
loope
push
sbb
mov
cli
sti
mov
pop
mov
ja
xchg
aaa
scas
clc
rolb
int3
sub
sahf
cmp
jb
loop
fdivr
scas
adc
stos
stc
mov
pop
cmp
fwait
in
movsl
ffree
sysret
insb
jb
sub
mov
push
jno
ljmp
out
mov
mov
ljmp
pop
mov
pop
mov
leave
sub
daa
je
push
adc
outsb
adc
pop
dec
sub
call
sub
in
aad
adc
add
mov
lods
cld
xchg
push
sub
movsl
mov
in
mov
adc
adc
mov
jl
xchg
sbbl
loop
arpl
ss
out
aas
mov
cmp
jb
das
jbe
sahf
mov
aam
lahf
ret
clc
fbld
cmpsl
outsl
pop
je
sub
sbb
fs
lcall
lahf
lahf
mov
out
lods
popa
add
std
add
xchg
cmp
jno
stos
gs
or
cmp
dec
dec
cld
inc
lcall
ss
mov
in
jo
rolb
push
out
xor
pop
not
cltd
sub
cmc
push
jle
outsl
fimuls
cld
ficoml
sbb
xchg
loop
fucom
int
mov
ljmp
xchg
adc
test
std
test
rcll
sub
iret
xchg
sub
sti
inc
insl
and
cmp
ja
or
inc
lret
fwait
pop
call
lahf
xchg
cli
sbb
int
and
sti
jl
mov
mov
jmp
xor
movsb
cmp
or
scas
stos
jo
and
push
inc
jbe
cmp
arpl
arpl
mov
push
pop
lock
popf
ljmp
dec
lds
test
dec
popf
mov
movl
push
bnd
out
jns
mov
push
jo
sbb
outsb
pop
lret
leave
push
cld
xor
ss
xchg
add
lret
call
pushf
ds
out
xchg
movsb
call
loopne
xchg
xor
jmp
lods
shrl
push
ret
mov
fwait
mov
fidivrl
arpl
test
pop
jmp
cld
or
jmp
popf
cmp
fildl
mov
jno
jno
ljmp
inc
stc
push
lock
adc
insl
es
inc
xor
neg
push
pop
pop
mov
mov
inc
insl
mov
repz
sbb
mov
jne
iret
std
mov
xor
sub
out
lret
and
daa
mov
scas
pop
pop
std
adc
ja
je
sbb
fnstsw
addr16
lret
inc
mov
jo
ret
imul
dec
das
pop
dec
add
into
push
and
xchg
ds
adc
popf
rorb
jl
and
sbb
mov
bsr
xchg
lds
sbb
pop
mov
or
inc
dec
sbb
jp
add
outsb
repnz
mov
aad
movsb
nop
pop
js
sbb
in
aam
xchg
pop
andl
mov
cmp
roll
out
mov
and
and
ret
jecxz
iret
testb
mov
cli
xor
lahf
sub
rcl
fildll
add
or
sub
ffreep
cmp
dec
jl
fisttpl
xchg
fisubrl
neg
push
and
call
sub
jno
sub
leave
stos
push
mov
cli
jle
pop
adc
cwtl
inc
mov
mov
mov
add
aad
add
in
fcomi
lods
rcll
adc
pop
add
mov
sub
xor
push
add
mov
clc
dec
sbb
mov
xchg
lock
adc
mov
and
jnp
sub
or
xor
jb
jb
in
xor
jns
stc
fwait
cmpsl
rolb
inc
andl
pop
je
into
xor
xor
adc
sbb
jno
dec
mov
cmc
das
inc
cwtl
repnz
imul
test
cmp
stc
mov
pop
pop
gs
push
arpl
mov
sbb
insl
or
in
icebp
clc
ret
lcall
sbb
fistps
int
mov
notl
adc
or
push
adc
mov
jge
sbb
add
lods
ja
xlat
or
push
call
cli
cli
pop
test
aam
in
mov
sbb
dec
loopne
fwait
pop
sub
sbb
movb
dec
fists
enter
cmp
cmp
sbb
leave
add
stos
add
clc
mov
add
jmp
jae
jmp
outsb
hlt
pmulhw
xchg
mov
test
sub
in
jne
lret
dec
adc
daa
push
mul
insb
pop
loope
test
pop
add
inc
jo
out
fidivrs
sbb
push
faddl
sub
jne
inc
mov
adc
xchg
and
cmp
sbb
jl
xchg
mov
dec
imul
mov
stos
je
shr
ja
mov
adc
adc
out
mov
fsub
jne
mov
dec
imul
int
hlt
icebp
data16
sub
fwait
aaa
leave
pop
rcrl
push
cmpsb
cmpsb
sti
and
sti
adc
stc
ret
jno
test
mov
mov
jl
insb
and
mov
jecxz
repz
or
es
lods
jne
push
cmp
mov
sub
sub
mov
into
rorl
test
xchg
fld
add
aam
icebp
pop
jae
fnstsw
inc
ss
out
inc
push
sahf
jne
int
test
sti
stc
xor
dec
or
stos
or
mov
dec
mov
aas
mov
in
push
ret
sbb
xchg
inc
ljmp
adc
mov
sub
mov
ret
and
fisttpl
sub
sub
enter
dec
ljmp
pusha
inc
and
mov
in
jle
clc
push
int3
and
shr
frstor
mov
lds
mov
subb
push
push
insb
aaa
pop
std
inc
add
sub
enter
cmp
push
call
sahf
adc
int3
xchg
aaa
sub
xor
lret
mov
iret
push
mov
out
pop
nop
add
hlt
push
outsb
xchg
dec
or
insb
push
popf
or
cmpsb
ljmp
and
pop
jno
call
xor
xorl
mov
sub
pop
scas
sbb
imul
decl
movsb
mov
mov
mov
or
or
in
xor
adc
arpl
int
popf
out
outsl
mov
dec
neg
mov
ds
daa
mov
arpl
mov
dec
enter
dec
sbb
imul
pusha
add
cli
fldcw
fwait
and
mov
scas
add
enter
loop
add
and
or
insb
jnp
shrl
dec
adc
xchg
mov
stc
inc
fstpl
inc
jge
xchg
xor
mov
mov
cmp
pop
cld
add
mov
pusha
mov
outsl
push
data16
sahf
mov
jae
sbb
into
je
cs
ss
sbb
mov
mov
mov
xor
add
lds
enter
xchg
bound
ja
int
xor
jns
mov
push
jmp
out
dec
in
add
inc
push
or
repnz
aam
and
mov
push
cwtl
ljmp
sub
pop
fdivr
mov
aam
ret
lret
mov
pop
cmp
lahf
andb
mov
cli
rcrl
jo
push
in
lret
icebp
rol
ror
jb
rorl
mov
mov
or
push
and
mov
xchg
xchg
andl
adc
and
cltd
rcl
in
pop
jmp
and
mov
pusha
fstps
pop
and
cmp
jg
jecxz
push
adc
call
adc
int3
ljmp
out
popa
inc
mov
jns
out
clc
lahf
mov
imul
jnp
mov
sahf
jecxz
xchg
shrl
rcrl
inc
frstor
pop
iret
mov
rcl
cmpb
pop
ds
lret
movsl
jl
jecxz
fs
sti
xor
jp
adc
lock
push
fnstcw
jb
push
mov
movsl
xlat
xlat
cwtl
popf
or
dec
ss
or
int
or
push
mov
data16
loopne
jg
lock
into
adc
loope
dec
cs
jbe
insb
pop
inc
int
gs
mov
add
std
out
pop
push
xchg
mov
xchg
jmp
cmc
mov
insl
mov
outsb
sub
scas
and
cmp
inc
sbb
xor
cmpsl
sarl
dec
mov
testl
mov
imulb
jge
xlat
shlb
das
jns
mov
std
dec
dec
mov
mov
jge
pop
or
rcrl
jno
mov
mov
stos
mov
fs
jne
mov
es
or
pop
fnstcw
mov
mov
sbb
std
xchg
xchg
cmpsb
cmc
sbb
je
rcrb
xchg
sahf
pop
mov
ror
ja
daa
ja
sbb
fsubl
lahf
or
jbe
push
pop
xchg
jae
ficompl
dec
dec
xor
inc
outsb
mov
sub
dec
inc
loop
mov
and
clc
ja
dec
pushf
aam
sub
or
lock
xor
push
dec
pop
push
jae
imul
push
fldcw
fists
xchg
sbb
mov
jae
adc
pop
in
pop
pop
rcl
cltd
icebp
mov
test
jo
mov
mov
sbb
leave
jg
std
sbbb
dec
js
out
aad
lahf
dec
imul
loopne
shrb
mov
pop
and
fldenv
sub
hlt
mov
aas
ret
dec
mov
mov
mov
jp
imul
add
push
iret
gs
out
loope
mov
jnp
cmp
inc
cmp
cltd
sub
imul
sbb
mov
test
sbbb
sub
or
dec
mov
inc
mov
jb
sahf
mov
inc
fs
pop
pusha
cmp
cmp
in
mov
call
rcrl
jle
pop
xchg
ficoml
mov
test
call
pushf
xchg
insb
xchg
insl
clc
bound
test
xor
xchg
cmp
movsl
xchg
push
mov
pop
xchg
sub
in
rcrl
push
stc
adc
push
or
enter
mov
test
dec
mov
mov
sbb
sbb
jo
sbb
fcmovne
repnz
lds
daa
sbb
les
aam
fisubs
dec
fdivrp
adc
cmpsb
push
pop
outsb
and
jecxz
fwait
outsb
mov
xchg
cmp
pop
sbbl
mov
dec
push
dec
sbb
mov
inc
cmp
insb
lret
jns
lods
mov
fnstsw
repz
jbe
dec
xlat
or
or
inc
sub
data16
jl
push
cmp
lret
movsl
xor
in
ljmp
fwait
cmp
dec
jo
lock
das
arpl
cmp
mov
popa
xchg
fnstenv
scas
pop
or
jg
mov
jl
or
xor
cmp
and
mov
lock
lret
fists
cli
adc
pop
ljmp
sub
cmp
or
loop
sub
or
cmpsl
fstp
jae
cmp
shlb
pop
sti
push
jecxz
inc
mov
fdivr
push
arpl
bt
test
imul
push
lahf
test
jbe
inc
cmc
adc
mov
ljmp
into
or
insb
jae
jns
dec
dec
jl
jne
repnz
mov
stos
js
inc
push
xchg
out
mov
xchg
xchg
pop
iret
inc
jbe
lret
lods
decb
stos
or
ret
ret
cld
adc
outsl
out
repnz
stos
data16
rorb
xor
clc
jno
cmp
je
and
scas
dec
xor
daa
sti
sub
mov
clc
test
mov
lret
push
js
sbb
lea
es
movsl
insb
in
xchg
mov
or
pop
lea
in
aas
xor
divb
inc
sub
roll
dec
fwait
dec
cld
pop
jo
dec
jg
idivl
cli
push
leave
movsl
mov
mov
push
mov
fsubl
lcall
mov
hlt
jne
ja
loop
insb
xchg
test
and
icebp
xchg
out
pop
dec
stc
loop
mov
xor
in
aas
pop
xor
int
repnz
aad
jl
out
mov
inc
xor
mov
dec
scas
push
mov
jnp
xchg
add
das
dec
jne
sti
adc
push
roll
shrb
rcrb
and
aam
pop
fstl
scas
or
xor
jae
cld
aad
cmp
sbb
push
pop
leave
sub
ja
xlat
pop
pop
push
adc
sub
mov
jmp
pop
rolb
xor
inc
pop
out
loopne
stos
iret
jmp
in
subl
inc
mov
xor
xchg
in
lods
pop
arpl
into
push
std
div
push
mov
xor
mov
out
pop
adc
dec
bound
pop
negb
mov
andb
or
lds
pop
in
adc
int3
aad
sbb
in
mov
in
loop
imul
iret
stc
aaa
or
rolb
jl
ds
loope
xorl
sbb
adc
pusha
scas
lods
xor
xchg
adc
jle
pop
mov
iret
lahf
jle
mov
out
or
cmp
push
cmp
mov
jp
out
jmp
lock
sub
sbb
cmp
stos
mov
jg
std
cs
test
xchg
inc
mov
aam
mov
loop
jns
jns
and
or
push
fisubs
sbb
adc
adc
and
add
adc
sub
or
mov
mov
cmpsl
mov
in
cmp
add
cmp
fbld
add
add
pop
jo
mov
add
mov
fdiv
movsl
clc
aaa
adc
push
dec
inc
loopne
lret
lods
mov
jl,pt
data16
inc
loop
movb
mov
jb
cltd
pop
sti
xchg
div
dec
xor
cwtl
test
iret
sub
shrb
loop
outsl
and
ret
test
out
push
mov
sub
dec
shll
sbb
enter
popl
dec
test
xor
jae
andb
mov
inc
mov
mov
sarl
lock
in
inc
inc
mov
lods
sbb
daa
mov
in
std
fs
sub
fsub
mov
pushf
dec
mov
ljmp
ret
lds
je
inc
lock
test
push
lds
aad
repnz
mov
push
lea
jnp
cmpsb
in
mov
repnz
stc
mov
mov
sahf
insb
xor
ja
jmp
xor
ds
cmpps
shrd
sub
mov
sti
loopne
js
sub
shrb
aad
sbb
pop
and
cmp
imul
data16
cmpsb
sub
mov
xor
push
mov
fildll
je
pusha
sarb
push
arpl
out
scas
pop
inc
ljmp
sbb
iret
test
or
mov
aaa
movsb
idiv
adc
out
and
mov
mov
add
dec
paddsw
and
and
dec
mov
cltd
dec
or
dec
pop
sbb
scas
push
ds
movsb
lret
sbb
lret
sub
xor
cmp
push
xchg
mov
fs
mov
xor
cltd
notb
fcoml
pop
jnp
outsb
or
mov
cmp
sbb
out
inc
inc
push
jne
orl
xor
sbb
test
scas
mov
mov
popa
andb
inc
cltd
insb
daa
fs
add
insb
or
cmpb
dec
aam
add
shlb
xor
and
in
jbe
pop
mov
cltd
pop
lahf
inc
fld
inc
ja
adc
xchg
cmp
sub
cmpsb
nop
sbb
es
xchg
sbb
push
dec
mov
shr
adc
inc
loope
mov
das
jne
dec
scas
int
sbb
call
out
push
rorb
fcmovb
sbb
insl
in
sbb
jno
stos
inc
add
lea
push
pushf
popf
push
jle
jae
and
inc
rcrb
sbb
ficoms
push
leave
adc
into
cmpsb
push
scas
fimull
imul
cmp
movsb
std
jbe
jge
dec
ja
aas
dec
into
jno
icebp
xchg
mov
jmp
hlt
test
jne
bound
and
test
push
jle
mov
int3
shr
mov
pop
push
out
aad
aas
cmpsb
ss
outsb
jno
in
outsl
xchg
jno
dec
adc
mov
push
lahf
dec
jne
jmp
mov
xchg
pop
adc
add
push
mov
in
sahf
cmp
int3
mov
pop
fistpl
pop
nop
mov
popf
cld
add
add
mov
and
out
mov
mov
cmp
mov
pop
popf
cs
mov
cwtl
aam
inc
loopne
adc
inc
pop
mov
mov
stc
xlat
movsl
push
out
dec
xchg
jl
arpl
movsb
shll
xor
aad
aad
jg
jno
push
pop
es
shr
pop
aam
lea
adc
jmp
push
sub
aas
int
xchg
dec
mov
dec
mov
fucom
movsl
push
xor
xor
mov
outsl
or
lods
cmpsl
pop
xor
ss
loop
int
pop
lds
rcl
cmp
adc
gs
addb
jl
xor
popf
popf
addb
inc
outsb
leave
push
pop
push
enter
imul
sahf
xor
in
add
shrl
jne,pn
adcl
push
jns
and
xor
dec
xor
cmp
adc
jne,pn
xchg
add
pop
mov
cmpsb
in
hlt
cs
jae
dec
repz
dec
test
dec
inc
ret
mov
push
in
sbb
lcall
xchg
mov
pop
cmp
or
clc
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
sbb
jp
aaa
pop
jp
or
add
jle
rcrl
dec
fisttpll
inc
xchg
data16
call
into
mov
or
sahf
out
or
in
ret
mov
andb
and
fmull
xchg
cwtl
mov
mov
loop
jmp
shrb
jbe,pt
les
iret
inc
inc
sbb
jnp
les
sub
jmp
xchg
xchg
mov
cmpsb
xchg
jmp
clc
cmp
cmpps
fldenv
scas
push
enter
shll
rcl
sub
xchg
sti
push
pop
ret
push
xchg
push
cmc
sub
mov
shr
xor
add
push
out
mov
das
pop
cmp
push
xor
jnp
xor
or
mov
and
mov
ret
in
jbe
dec
fnstenv
add
out
call
inc
push
btc
imul
aas
cli
sub
mov
cmp
jae
clc
movsl
mov
lods
xor
pop
pop
pop
loop
lcall
dec
xchg
ljmp
pop
xchg
pop
pop
xor
out
leave
adc
movsb
cs
or
adc
push
ret
jns
pop
lods
push
jae
sub
into
sbb
dec
insb
cmp
or
mov
js
or
adc
mov
push
mov
cli
push
adc
fwait
rorl
cmp
das
mov
imul
jp
imul
push
repz
stos
sub
dec
outsl
leave
fidivrs
ftst
loopne
out
arpl
ss
sub
jp
sub
push
and
scas
addl
sub
xor
shl
mov
loopne
mov
cmp
repz
insb
addb
xchg
scas
xlat
loope
movsl
adc
lds
lea
mov
xor
orb
push
jle
xor
cs
lret
push
ss
push
adc
mov
ret
and
and
in
scas
mov
pop
push
push
fsubs
mov
mov
in
scas
sub
dec
inc
lock
lods
call
push
mov
xchg
mov
cmp
pop
repnz
mov
sub
jle
aad
int
push
mov
aaa
scas
lahf
sbb
mov
dec
adc
adc
ret
jmp
ret
jno
jg
out
jnp
std
cmpl
cld
sbb
mov
fwait
jmp
mov
sub
call
cmp
scas
inc
clc
cmp
fwait
arpl
push
clc
mov
ss
sbb
add
dec
in
add
aaa
lahf
xchg
add
pop
lcall
dec
pop
jmp
js
jle
push
mov
daa
shrb
mov
out
mov
shll
dec
cld
mov
iret
mov
jp
mov
cli
sbb
sbbl
add
in
sbb
mov
dec
les
jge
and
nop
cmp
mov
push
pushf
mov
lods
loope
pop
repnz
fxtract
cmp
aad
push
xchg
sub
xchg
sub
outsl
xchg
es
xchg
ljmp
int
movsl
dec
shl
dec
cmp
in
nop
addl
lods
push
adc
add
out
jg
loop
loope
test
jge
rolb
mov
addr16
cld
fwait
cmpsb
mov
je
test
dec
int
add
fistps
movsl
mov
sbb
js
mov
lcall
fdiv
lds
lea
jb
pushf
ja
mov
in
fcmovne
mov
aas
jg
sub
aam
lods
cmpsl
or
or
ljmp
jmp
insb
in
out
jno
lahf
les
lret
sub
sub
pop
incb
sahf
rorb
lock
movsl
xchg
xchg
aam
icebp
sti
dec
int
scas
add
ret
loop
call
jae
adc
xor
popf
jae
clc
mov
out
stos
mov
or
mov
hlt
out
mov
les
inc
jns
cmp
or
inc
nop
scas
and
dec
lahf
pop
pop
mov
popf
inc
inc
inc
pushf
int3
mov
adc
push
pop
sbb
push
push
outsl
fstpt
xlat
std
idivl
push
hlt
dec
pop
jno
or
xlat
ss
xlat
pushf
aaa
jg
fidivl
mov
fs
push
mov
push
pop
sarb
jb
inc
push
push
adc
jge
mov
jle
cmpsb
pusha
mov
outsl
cmp
lds
popa
dec
dec
push
push
xchg
lods
xchg
mov
fincstp
sbb
cmc
ficoms
stos
int
push
loopne
cmp
push
xchg
mov
and
jg
dec
adc
mov
mov
sub
fistpll
lods
cmc
and
lods
imul
outsl
imul
sti
jmp
jp
cmc
add
mov
sub
cwtl
rclb
iret
call
mov
xor
shlb
bound
mov
mov
lods
mov
mov
add
cmpb
cwtl
pop
or
lret
xor
xlat
inc
mov
jb
xchg
test
loop
fisttpl
in
outsl
sub
es
mov
insb
jl
mov
adc
out
jbe
shlb
inc
adc
fists
dec
addr16
mov
and
in
xchg
roll
dec
in
sti
out
mov
jae
jmp
in
lea
mov
xchg
mov
popf
xchg
ss
imul
sbb
lea
mov
xlat
inc
cwtl
adc
lods
xchg
es
test
popa
mov
jecxz
clc
shll
cli
mov
inc
jg
xor
add
or
outsl
pop
cmpsb
insl
lcall
outsb
fnstcw
gs
scas
imul
cmp
fsubrl
inc
icebp
mov
sbb
pop
push
pop
insl
dec
cmp
inc
push
jo
sahf
jmp
xchg
test
inc
jns
sub
lcall
stc
hlt
in
mov
mov
bound
ficompl
jb
sbbb
adc
mov
insb
js
inc
popl
pop
inc
mov
stos
mov
leave
in
and
dec
push
lods
cmp
or
inc
mov
outsl
in
add
jno
cmp
shrb
imul
cs
pushl
aas
js
jg
sub
fcmovnb
dec
mov
pop
mov
pop
push
test
push
adc
mov
add
popa
shrb
iret
stos
mov
sub
dec
xchg
sub
pop
out
fmuls
popf
lahf
mov
mov
repz
push
push
push
ret
mov
movsb
clc
pusha
orb
and
inc
xor
std
xor
sbb
xchg
xchg
clc
test
ret
sub
fistps
xchg
rorl
fwait
notb
sbb
in
pop
dec
jle
xor
outsb
mov
test
mov
push
js
xor
inc
imul
out
arpl
fwait
ret
fsubrs
mov
std
iret
and
int3
fmuls
jne
cmc
pop
xor
fistpll
dec
jne
popa
xlat
les
stc
repnz
add
push
les
leave
aam
mov
mov
data16
push
inc
mov
rolb
pop
mov
push
adc
push
inc
jo
rcll
mov
sub
push
gs
arpl
xor
nop
out
mov
test
test
mov
addr16
xor
fisubrl
aam
sbb
int3
mov
mov
pop
fistpl
adc
mov
or
add
aas
ficoml
push
xchg
xchg
xor
jp
clc
jl,pt
jle
push
xor
shll
fwait
cmp
mov
pop
and
in
fucom
aad
jne
jmp
sub
adc
fistl
cmpsb
lret
cltd
xchg
std
lods
sti
clc
sub
fsubrl
sub
or
xchg
int
rorb
fs
cmp
test
push
aam
xchg
or
lret
in
mov
pop
adc
mul
movsl
pop
and
loop
xchg
js
outsb
loop
cmpl
inc
push
xlat
test
xor
mov
sbb
nop
adc
jge
mov
rorb
lret
mov
ljmp
mov
sbb
push
add
mov
xor
xchg
stos
add
lods
rcr
sub
jo
or
outsb
or
sub
ret
popf
push
shrb
jmp
adc
dec
pusha
push
sahf
or
push
adc
idivb
bound
inc
lds
jmp
mov
xchg
xor
xchg
sahf
fisubl
adcb
xlat
es
pop
out
adc
and
je
jle
push
pop
outsb
or
inc
mov
push
cmc
cmc
movsl
or
fldenv
icebp
subl
mov
sbb
sbb
out
paddsb
cld
nopl
xchg
mov
loop
loope
xchg
inc
test
imul
pop
mov
cmp
mov
loop
mov
sar
in
jns
cmp
and
xchg
xlat
arpl
cltd
adc
adc
aas
adc
xor
and
arpl
cmpsb
les
sbb
push
pop
jo
sub
lcall
adc
inc
jnp
out
mov
inc
adc
sub
adc
sbb
pop
cwtl
and
mov
cmp
pop
lret
inc
mov
lea
mov
mov
dec
cmp
aad
xor
jge
out
mov
test
ss
sbb
aas
adc
ret
push
dec
lcall
cltd
inc
leave
cmp
xlat
int3
rcrl
mov
lret
lea
in
movsb
test
addr16
cmp
sti
mov
es
dec
mov
sbb
xchg
jmp
or
scas
call
cltd
mov
pop
jne
sarb
out
in
rolb
push
clc
mov
mov
push
xlat
stos
mov
aam
mov
push
fidivrl
jl
xor
push
loop
scas
mov
jmp
push
das
add
cli
inc
outsl
les
movsb
stos
jecxz
stc
lret
or
mov
sarb
xchg
enter
push
pushl
insb
add
jo
pop
or
inc
mov
fsubrs
mov
cmp
adc
jmp
aaa
daa
iret
pusha
push
pusha
inc
pushf
dec
and
clc
pop
mov
gs
xchg
mov
xor
mov
cmpl
fnstcw
cmovp
mov
xor
call
mov
and
mov
push
adc
push
mov
jl
sub
rorl
inc
cmpsl
xor
rcrl
sbb
dec
inc
imul
es
data16
mov
pushf
and
mov
ficoms
jns
pop
shll
or
push
outsb
jne
loopne
roll
xor
negl
fdivrl
lret
sbb
sub
je
sub
adc
lea
xchg
cmp
cmp
cwtl
in
push
aad
sti
sub
addr16
cmpsb
push
movsb
add
popa
nop
loope
mov
xchg
cli
sub
jno
out
lahf
cld
imul
jno
and
dec
dec
jle
fsubrp
xlat
mov
shrb
jle
sbb
fsubp
aam
lcall
dec
repz
inc
es
ror
scas
cmp
test
rcl
sub
sbb
mov
nop
push
cltd
pop
popf
inc
fists
push
fwait
and
dec
mov
xor
push
mov
pop
xor
mov
lahf
ss
jnp
inc
xchg
add
mov
pop
add
or
arpl
and
leave
or
dec
mov
xor
inc
aas
inc
push
stos
jle
das
int
fstl
mov
pop
mov
imul
pop
ja
out
and
and
in
push
enter
push
in
ds
xchg
pusha
add
inc
add
dec
mov
gs
push
pop
xor
aaa
mov
fildl
jmp
repz
popa
adc
jo
inc
sbb
cmp
inc
jbe
sbb
fxch
sub
jge
pushf
jmp
dec
add
adc
add
lret
pop
fdivrs
jnp
and
cmp
xchg
mov
ja
inc
push
xorl
dec
push
or
and
stos
dec
repz
xchg
and
fsts
out
mov
inc
sub
call
sub
jbe
movb
loope
push
mov
dec
or
xor
pusha
jge
mov
movsb
shll
and
xchg
push
imul
aas
sbb
or
push
ljmp
fcmovu
xor
mov
flds
movsb
cmpsb
loopne
pop
daa
les
fstpl
cmc
fisubrs
mov
jg
push
inc
push
arpl
lds
add
mov
clc
pop
jo
jns
loope
mov
pop
push
xchg
addb
jg
push
jb
mov
pop
pusha
fdivl
fwait
aas
fs
dec
or
push
jge
push
std
inc
addr16
inc
cmpsl
jg
adcb
test
mov
xchg
mov
bound
popa
add
pop
clc
or
add
popf
xchg
insb
jp
sbb
mov
divl
repnz
inc
or
push
and
lea
jnp
cmp
stc
arpl
mov
shlb
xchg
add
push
adc
add
xchg
lods
sub
outsb
leave
and
pop
jbe
out
gs
pop
jp
jl
mov
push
pusha
lahf
dec
mov
lahf
cs
dec
loopne
scas
out
sub
push
jle
or
enter
in
add
int
mov
push
jbe
or
push
dec
fbld
and
data16
out
push
loope
cmp
mov
pop
out
mov
addr16
repz
lods
dec
icebp
fwait
mov
push
xchg
cmc
jmp
mov
jnp
imul
imul
leave
rorl
call
pop
sub
xchg
cmpsl
mov
cmp
cltd
cmp
mov
cmpsl
adc
jmp
movsb
fwait
push
mov
dec
mov
movsb
lods
lds
cmc
enter
mov
call
xchg
xchg
or
jne
mov
popa
das
loopne
pop
pushf
outsl
xchg
inc
xchg
subps
add
xor
jl
cmp
scas
add
dec
fimull
pop
sbb
es
fwait
and
stc
dec
lahf
enter
les
mov
cli
insl
les
xchg
popa
and
pop
int
imul
xchg
cmp
xchg
pop
inc
imul
jecxz
call
ret
test
sbb
xchg
popa
pop
sbb
jo
pop
push
dec
xchg
dec
sbb
cs
je
jp
sbbb
inc
add
mov
stos
lds
push
add
stos
push
mov
push
jl
mull
pop
mov
out
cltd
call
add
imulb
add
jg
cmp
movsb
in
cmp
movsl
movsl
dec
fisttpl
cltd
sub
or
and
inc
fdivl
ds
shrl
into
push
dec
rcll
xchg
jmp
fisubl
inc
addr16
push
cmc
jns
jle
jmp
rclb
xor
dec
cmp
push
aad
jge
or
sbbb
xorb
iret
in
inc
fnstenv
movl
sub
xchg
ret
stos
js
xor
idiv
lcall
adc
shrl
push
add
int3
icebp
cmpb
aas
mov
mov
stc
icebp
pusha
or
incb
cmp
lods
sbb
dec
xchg
jl
test
mov
enter
or
jnp
outsl
fwait
mov
xor
jne
dec
int3
jne
pop
rcrl
ror
mov
imul
pop
mov
pop
jle
shlb
pushf
ret
in
popf
mov
stc
fnstenv
sub
lds
jbe
notl
xorl
mov
icebp
add
sbb
into
cltd
ret
fsts
aaa
pop
loopne
jmp
mov
sbb
jo
xchg
pusha
pop
fs
mov
sbb
shrl
mov
mov
mov
insl
data16
out
mov
fldcw
add
jle
pop
mov
jl
stos
jae
out
inc
scas
dec
mov
cmpsl
mov
aam
loopne
into
adc
fnsave
jg
lret
mov
pop
imul
pop
add
aad
roll
sbb
cltd
movsl
mov
cmp
mov
fs
inc
mov
hlt
pop
movb
daa
hlt
imul
jmp
dec
lahf
jnp
inc
iret
push
dec
enter
imul
add
jns
sbb
cli
in
xchg
push
sub
aad
cmp
cltd
xor
inc
mov
xchg
sti
cmp
pop
inc
inc
out
pop
adc
pop
pusha
movsb
xor
mov
add
mov
jno
scas
subb
xchg
loope
xor
push
fwait
dec
test
inc
dec
addl
and
mov
jno
out
pop
xchg
pop
mov
cli
jmp
rcrl
or
and
inc
jle
cmp
in
adc
fs
cmp
arpl
mov
pop
mov
jmp
mov
loop
sbb
inc
push
push
aad
xor
dec
clc
in
pop
rorb
mov
xor
call
push
outsl
cwtl
sub
or
jg
cmp
cmc
lahf
dec
ss
mov
mov
pusha
add
jge
cmp
dec
loop
sub
xchg
int3
ds
outsb
sub
scas
cmp
cli
dec
or
mov
ret
mov
adc
pop
pop
loopne
xchg
or
hlt
mov
push
arpl
inc
ret
or
shlb
fstp
pop
aad
lea
jg
jmp
pusha
push
xlat
in
sbb
lea
bnd
imul
mov
fisttpll
mov
in
jl
fidivl
sti
sbb
push
or
int3
aad
shrl
or
pop
jl
push
jo
lret
out
nop
ret
jbe
es
fwait
leave
cmpsb
popa
enter
mov
push
ja
cmp
pop
xor
ljmp
scas
pop
stc
mov
push
or
movsl
test
idivl
out
mov
sarb
and
jno
psubusb
shll
rolb
jo
daa
lock
mov
lzcnt
jge
and
into
dec
inc
pop
lds
ds
jno
pop
es
sub
push
mov
loope
xchg
mov
xchg
fxsave
jnp
xchg
loope
lahf
in
mov
add
adc
cli
mov
cwtl
cmp
or
fnstenv
jnp
sbb
push
loopne
sub
push
cmc
add
push
adc
loopne
je
inc
shl
push
sub
sbb
test
pop
sub
adc
popf
jne
push
ja
pop
fwait
add
jle
lret
dec
fcoml
lret
push
and
mov
xchg
push
pop
gs
mov
jle
lock
out
adc
inc
test
push
test
lods
push
stos
xchg
dec
stc
and
paddd
pushf
xchg
cmp
add
imulb
lcall
fstpt
mov
lods
je
push
aam
std
pop
cbtw
out
dec
or
repnz
jle
mov
mov
inc
je
pop
shlb
mov
sbb
sbb
out
mov
ds
js
jl
jecxz
xor
je
jecxz
sub
js
mov
or
andb
jmp
or
mov
jmp
sarb
mov
xchg
pusha
inc
bound
jmp
ret
aad
lahf
inc
cltd
sub
mov
sub
daa
les
mov
test
das
dec
inc
loop
jno
jl
aad
pop
mov
bound
outsl
leave
cmpsl
cli
imul
jmp
test
shr
inc
xor
ss
orl
sub
mov
mov
stos
std
lock
jl
lods
push
pop
jb
push
or
adc
xlat
sub
stos
xchg
repnz
pusha
test
push
pop
pop
add
ds
add
dec
lret
outsb
into
jl
cmp
cmpl
std
sbb
inc
sbb
cmp
js
and
in
jnp
shlb
rorl
les
pusha
rcrl
cwtl
mov
jae
test
mov
test
add
push
xchg
popa
dec
cmpsb
test
inc
test
push
and
push
pop
mov
sbb
xor
call
cmpsb
les
mov
sti
stos
call
dec
outsb
xchg
mov
lcall
cmp
lahf
int
aam
mov
rol
sahf
loopne
mov
lret
inc
lret
pop
je
leave
mov
and
arpl
mov
jge
jne
nop
adc
repz
xchg
jmp
push
stos
mov
out
dec
jl
and
stos
cmp
outsb
jb
or
cmp
cmpsb
fldenv
dec
enter
mov
cmp
in
jge
sbb
ja
in
je
mov
cmp
loop
imul
xor
js
daa
arpl
std
movsb
aaa
hlt
jmp
mov
enter
or
in
and
pop
push
sub
mov
adc
rol
cli
loopne
std
aas
mov
pop
and
imul
sub
xor
mov
xchg
push
sub
and
pop
pop
cmp
xchg
repnz
mov
and
cld
mov
mov
pop
shll
pusha
push
outsl
jp
adc
sbb
mov
pop
push
aad
inc
cmp
xor
push
xadd
clc
push
adc
cmp
sub
testl
sub
pushl
out
sti
sub
insl
shlb
inc
leave
fdivr
cli
dec
lods
lahf
loope
mov
and
xchg
dec
sbb
bound
push
mov
fiaddl
or
xchg
fnstcw
push
adc
in
add
sbb
out
out
xchg
fnstsw
repnz
jae
jbe
push
xchg
dec
push
jp
inc
add
pop
fs
inc
push
sbb
xlat
fisubrs
xor
mov
test
xor
fldcw
movsl
mov
jmp
data16
push
push
inc
pop
or
dec
cmc
dec
dec
aam
pop
sbb
jmp
mov
mov
std
add
pop
js
popa
repz
mov
xor
cmp
pop
or
ret
cmpsb
into
push
fsubs
clc
int
scas
fldenv
fbld
xchg
insb
insw
or
and
adc
and
out
or
push
xor
pusha
and
push
sbb
jle
shlb
arpl
inc
xchg
int
test
int3
mov
repnz
cmp
xchg
pop
cmp
jg
inc
mov
ss
popa
mov
push
call
loope
aam
sub
stc
cli
clc
jo
mov
or
xor
sbb
cwtl
jo
mov
vsqrtpd
jp
call
and
mov
mov
mov
lahf
sbb
xor
or
cmc
das
mov
cmc
jno
sub
jmp
insb
jecxz
pop
jbe
dec
and
mov
in
jo
mov
das
push
mov
xor
popa
imul
push
pusha
mull
fsubrl
push
add
mov
jp
or
fnstsw
push
add
jns
nop
xchg
lock
push
outsb
push
das
aad
jno
popf
jnp
mov
sbb
xchg
leave
inc
outsl
movsb
shll
addl
call
adc
rcrb
mov
mov
xchg
pop
jecxz
adc
add
pop
out
lahf
or
outsl
outsl
cmpsl
inc
stc
jge
jmp
dec
or
mov
jle
ss
mov
cmpsl
xchg
mov
xchg
sbb
push
mov
stos
hlt
neg
sub
jo
aaa
jno
fsubs
cmp
fdivrs
add
imul
lock
mov
mov
cli
sbb
add
mov
out
fsubr
test
je
mov
setns
mov
mov
ret
rclb
rorl
neg
xchg
jo
xchg
outsb
filds
clc
stos
mov
pop
divb
in
and
arpl
fs
sbb
out
pop
gs
add
lea
out
rcl
shld
int3
jl
in
mov
jp
adc
jne
sub
lret
arpl
sbbl
mov
fs
inc
loope
jecxz
out
sbbl
gs
cmp
xchg
and
sbb
add
stc
jg
enter
rorb
and
dec
or
fwait
push
lahf
jmp
lret
mov
mov
js
sub
xchg
test
and
push
cli
dec
adc
inc
rorb
or
loope
test
push
mov
lcall
mov
inc
movsb
fwait
daa
push
jmp
es
jmp
pop
or
mov
gs
aaa
lods
sbb
mov
mov
sbb
aaa
sti
push
inc
jb
xchg
movsb
stos
jo
pop
mov
and
das
aas
clc
je
mov
fwait
mov
mov
test
scas
push
lods
pop
xchg
mov
push
and
or
xor
jmp
sub
adc
pop
inc
dec
pop
mov
xchg
dec
jge
xor
jne
int3
pop
xorb
jb
out
out
and
shlb
xlat
scas
or
xchg
and
dec
lcall
mulb
mov
inc
or
sti
mov
aad
fcoms
lods
stos
test
enter
data16
sbb
push
in
in
cwtl
sti
sbb
dec
xor
xchg
cmc
adc
and
dec
xchg
into
int
outsl
push
ss
sar
mov
cmp
inc
dec
test
fnstcw
push
dec
xchg
lods
es
inc
gs
and
sub
out
jae
push
inc
in
loope
sbb
xchg
mov
xor
jae
dec
and
mov
jne
test
enter
shlb
sub
mov
sti
gs
inc
pusha
push
cld
mov
push
fidivl
lahf
les
pop
sar
sub
int
pop
and
lea
mov
stc
adc
ficoms
lods
push
and
inc
loopne
pop
loope
mov
push
jo
jge
fstpt
imul
push
adc
push
push
pusha
fimuls
lahf
dec
adc
mov
push
inc
cli
xlat
int3
call
orps
sarl
cltd
pop
xorb
mov
dec
jae
shll
jmp
cmp
jnp
repz
or
adc
cmp
popf
pop
xor
lods
cwtl
adc
mov
ljmp
mov
or
sbb
xor
push
cwtl
push
popa
gs
mov
push
sub
negl
sub
jge
bound
test
inc
xorb
adc
adc
jne
or
inc
push
push
xchg
sbb
and
mov
sub
test
cmp
cmpsl
add
data16
into
repz
jae
loop
loopne
mov
push
cmp
sti
jo
inc
or
movsl
sub
inc
out
das
frstor
jg
scas
cmp
push
inc
pop
mov
pop
adc
push
jno
lcall
inc
aam
add
jnp
sbbb
aam
jns
add
aam
data16
xor
int
nop
pop
jg
addr16
fiaddl
je
jmp
lret
mov
dec
jns
pop
add
aam
les
addr16
fisubs
repnz
inc
out
xchg
dec
adc
pop
jmp
xlat
in
neg
inc
xchg
bound
inc
stos
outsb
adc
inc
ret
ret
rclb
sbb
loope
cs
adc
ret
add
adc
sub
mov
cmpsl
add
and
out
repz
push
inc
sbb
sbb
adc
stc
dec
cmc
and
cwtl
pop
loope
mov
xor
jge
stos
popf
insb
adc
dec
sahf
lret
mov
pop
sbb
inc
rorl
jle
icebp
fucom
repz
movb
filds
sahf
mov
xchg
sub
pop
adc
popf
push
cs
imul
pop
adc
stc
mov
sub
or
mov
sarl
sahf
ds
cmpb
in
push
scas
mov
popa
mov
scas
or
std
aas
aas
xchg
sbb
inc
pop
xor
ja
repnz
jno
add
fnstcw
push
adc
jg
ljmp
in
movd
aas
xchg
sbb
movsl
or
sub
lret
in
pop
insl
lods
out
fsubr
sub
push
xor
pop
jecxz
pop
inc
repz
sahf
pushl
xchg
call
lahf
xor
mov
stc
mov
repz
ffreep
outsb
sub
ret
inc
rolb
mov
sbb
les
rorb
add
bnd
lret
mov
jmp
loope
test
or
popa
movsb
popa
add
insl
loope
ss
pop
xor
inc
cltd
imul
sub
inc
mov
ja
mov
and
lods
scas
fimuls
push
mov
je
in
lods
ret
xor
jne
xchg
inc
or
lds
and
jl
inc
push
push
fwait
jno
in
fsubrs
les
add
cmp
lret
sbb
xor
ljmp
lods
cmp
xchg
mov
push
inc
add
es
dec
dec
adc
cwtl
outsl
cs
pop
push
jge
mov
lock
fdivr
rcl
cwtl
test
clc
sub
sbb
cmp
cmp
into
adc
fwait
test
les
add
in
rcll
adc
arpl
push
repnz
emms
mov
cmp
mov
dec
sub
aad
push
call
sbb
xchg
cmp
pop
pusha
clc
lret
cld
and
ds
cmp
testl
out
mov
stc
adc
cmp
jae
adc
xlat
and
or
adc
mov
je
lcall
inc
push
mov
xor
pop
sub
lahf
push
mul
or
cld
jbe
jae
sub
imul
jecxz
fwait
shlb
rcll
outsl
or
and
lods
sbb
jnp
pop
lea
mull
mov
ss
addb
loopne
popw
test
mov
in
outsb
es
shrl
add
jp
pop
loop
ss
xchg
xor
loope
sbb
mov
lock
push
mov
mov
outsl
cmp
pop
arpl
inc
pop
lods
int3
pushf
sbb
sbb
daa
pop
xchg
aas
sbb
loop
int3
aad
movsb
xor
rcr
addb
mov
outsb
pop
and
jns
sahf
lea
fwait
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
cmpsl
bound
into
inc
mov
imul
pop
ret
cmpsl
icebp
sbb
xor
dec
loopne
fisubrl
xchg
fdivp
in
fstpl
out
mov
std
std
xlat
dec
xor
clc
cmp
mov
aad
je
out
and
sub
xor
mov
stos
xchg
push
pop
fxch
ret
pop
test
mov
stos
adc
pop
push
adc
cmc
das
in
jmp
ret
clc
xchg
movsl
sbb
jmp
push
or
fists
sbb
stos
mov
pop
add
xchg
sahf
push
popf
adc
xchg
dec
js
repnz
cmp
adcb
fisubs
sbb
mov
faddl
cmpsb
jl
fdivl
dec
in
xchg
jle
cmp
lret
popa
movb
insb
mov
add
dec
pop
mov
and
add
test
daa
out
mov
mov
push
mov
lcall
adc
pop
lcall
enter
aam
dec
sbb
loope
ljmp
jp
mov
fisttps
imul
rcrl
lea
jl
cmp
jge
jecxz
xor
cmpb
mov
add
aaa
int3
sbb
fsubrp
xchg
mov
cmp
pop
add
adc
out
testl
scas
sub
inc
fidivl
fildll
or
filds
push
push
fsubrs
sub
fidivs
and
mov
lret
shll
push
pop
jp
cmc
pop
aaa
mov
sub
cmpsl
fidivl
sbb
orb
lcall
in
mov
or
jg
jb
jmp
sbb
fcoml
addb
mov
pop
inc
jecxz
jns
ja
mov
imul
and
mov
test
dec
nop
rcrb
dec
mov
fwait
push
mov
divl
popa
ja
mov
sub
pop
xchg
ds
lret
pop
jmp
inc
pop
insl
pop
cmpsl
add
and
js
imul
cmp
xor
or
data16
sahf
gs
syscall
mov
mov
cmp
inc
cmp
stos
inc
pusha
sub
test
mov
stos
or
jl
cmp
gs
aad
aaa
dec
lock
lods
hlt
add
xorl
pop
filds
xlat
outsb
pop
out
fimuls
sbb
jge
hlt
xlat
js
int3
sahf
aas
or
mov
ds
xchg
or
mov
arpl
jecxz
push
rcr
ljmp
add
cmpsb
xchg
popa
mov
lret
inc
lahf
imul
out
sar
ljmp
addr16
test
add
cmp
lods
inc
imul
add
jg
aad
test
dec
inc
pop
cmc
stos
pop
push
fbld
push
cmp
adc
mov
jns
lods
imul
repz
pop
dec
cld
push
mov
aas
mov
mov
push
fsubrp
cltd
or
dec
sub
leave
sbb
jno
inc
sti
mov
pop
dec
jg
xor
mov
out
push
into
imul
shl
sbbl
mov
mov
sbb
sub
js
out
push
cwtl
push
dec
loopne
sbb
stos
sti
cmpsl
inc
pop
movsl
push
lret
xchg
or
sub
xchg
and
lret
xchg
and
push
mov
xchg
and
adc
cltd
daa
mov
aaa
or
sub
lcall
jle
mov
pop
push
outsl
sub
lret
pop
out
mov
jb
ret
push
imul
fidivrs
dec
ret
ffreep
sub
jnp
popf
outsb
ss
pop
dec
subb
rolb
fldt
fwait
inc
out
scas
popf
aas
dec
insb
sti
dec
xor
or
mov
xor
xor
add
cmp
jecxz
lret
or
jbe
fsub
jge
std
push
and
mov
repnz
adc
gs
mov
dec
mov
jb
mov
and
in
rorb
daa
xor
test
inc
sti
syscall
mov
push
icebp
or
outsb
cmpsb
add
test
in
in
mov
mov
insb
cltd
arpl
sarb
xchg
ds
lock
sarl
out
lcall
sub
adc
pushf
xchg
fbld
loop
xchg
inc
push
mov
stos
inc
repz
lcall
daa
mov
mov
jl
xchg
pop
movsb
pop
test
jbe
dec
movsl
xchg
mov
push
daa
pop
add
sbb
in
mov
xchg
ret
push
jl
mov
leave
sbb
cmp
cld
dec
or
repnz
ljmp
ja
loope
dec
and
mov
add
mov
and
ret
sub
inc
mov
lds
mov
insb
loopne
sbb
enter
addr16
out
leave
dec
mov
enter
flds
mov
push
xlat
dec
dec
pop
cs
or
cmpsl
mov
outsl
and
rorb
mov
push
pusha
mov
shrl
sarb
cli
loop
out
test
xor
add
push
mov
jmp
test
adc
sbb
mov
inc
adcb
repz
add
in
ss
lods
mov
movsl
sahf
add
movsl
xchg
notb
in
hlt
adc
inc
test
push
in
aas
or
mov
jo
adc
popa
mov
insl
jg
mov
adcb
inc
cld
pop
xor
ljmp
cld
xchg
sahf
fdivrl
arpl
outsb
sbb
outsl
sub
dec
icebp
inc
add
fnsave
push
stos
outsb
mov
sbb
mov
out
lcall
int3
jb
test
mov
pop
lods
test
movsb
std
push
adc
pop
dec
lea
xlat
or
mov
mov
mov
insb
in
rcl
or
incb
hlt
mov
xchg
mov
into
es
aam
dec
add
pop
pop
stc
push
mov
dec
iret
mov
sbb
lock
mov
aaa
pop
adc
add
lods
adc
shrb
leave
hlt
movsb
pop
icebp
fistpl
lret
cmpb
les
cmp
jb
sbb
movsl
sahf
xor
inc
cmp
xor
cmp
inc
mov
lret
aam
adc
testb
fwait
and
add
jb
cs
aam
rclb
ljmp
fldt
and
inc
or
or
hlt
push
and
pop
stos
add
addr16
sub
and
les
inc
jge
adc
cli
inc
xchg
pop
rolb
mov
ljmp
test
xor
and
adc
and
popa
jno
mov
or
xor
add
aam
in
inc
mov
xchg
adc
call
ja
test
and
cmpb
pop
adc
in
cmpsl
sbb
push
xchg
cmp
or
mov
lcall
je
jno
loopne
ljmp
fbld
jnp
pop
dec
xchg
in
dec
arpl
xchg
mov
mov
out
lahf
mov
adc
push
fwait
sbb
cmp
xor
sahf
adc
cmp
or
sbb
lahf
xchg
sbb
sahf
sbb
pop
xor
call
sub
adc
sbb
mov
roll
or
lcall
in
cmpb
cmp
les
fdivrs
dec
arpl
bound
jp
or
pusha
add
xchg
pop
test
add
in
jg
jmp
sub
aas
sbb
fldcw
xchg
push
shr
aas
push
sub
mov
addl
inc
stc
ret
xor
in
out
pop
inc
push
in
cmp
jns
scas
xchg
jmp
test
cmp
inc
xchg
pushf
sub
out
xchg
test
mov
sahf
sbb
in
repnz
aas
mull
cmp
arpl
lret
add
jno
jne
mov
in
neg
lods
out
or
sbb
xchg
addl
jns
subl
je
add
sub
adc
push
aas
test
negb
inc
or
or
test
sbbb
mov
popa
testl
push
jne
inc
or
mov
mov
stos
ret
mov
ljmp
roll
push
cmp
adcl
ljmp
lcall
popf
xor
aaa
cmp
popa
lahf
add
and
adc
clc
jo
sub
push
sub
xchg
push
lahf
in
lods
subb
jmp
fcomps
ds
jg
mov
dec
sbb
sbb
popa
mov
imul
outsb
pop
outsb
or
xchg
jge
dec
out
adc
leave
rorb
ja
popa
ljmp
xor
sub
mov
scas
imul
ror
rcrb
test
dec
jp
mov
rorb
xor
xlat
mov
ljmp
imul
jp
pop
push
xor
sub
ret
jb
cmp
inc
jae
gs
stos
aam
jl
aam
push
out
pop
and
pop
shll
xlat
rorb
jg
mov
lods
adc
jnp
or
std
lret
sbb
mov
and
rcl
dec
neg
mov
xor
or
cld
mov
aam
aad
cli
xchg
call
mov
aaa
je
fs
fsubrp
ds
sbb
jl
mov
popa
mov
sub
pop
dec
sbb
aas
insb
jmp
xchg
dec
xor
xchg
sub
mov
pop
mov
mov
je
sub
cld
push
data16
fprem
fistpll
icebp
dec
insl
arpl
cmp
das
or
pop
enterw
pushf
cmpsl
into
std
ds
jg
xlat
es
sbb
jnp
and
pushf
xchg
inc
mov
lods
leave
mov
leave
xchg
and
pusha
int3
adc
inc
stos
das
jg
lea
xchg
lahf
int
ss
in
shrl
fsts
scas
sbb
mov
ret
push
ja
decl
xchg
mov
aas
adc
bound
arpl
iret
pop
jp
mov
xchg
mov
sbb
insl
or
sbb
xchg
push
decb
add
je
cmpb
cld
ds
and
adc
cmp
leave
loopne
mov
stc
jg
xchg
sbb
inc
fbld
bound
fwait
add
mov
or
xor
mov
lcall
repnz
mov
jne
jle
jo
adc
outsl
add
jecxz
popa
call
dec
lret
stos
cmp
or
xlat
jg
mov
mov
aam
cli
jb
xor
lods
sbb
cmpsl
push
xor
cmp
repnz
call
test
push
sbb
cltd
inc
inc
inc
inc
inc
jnp
movsl
popa
adc
test
mov
and
lock
add
leave
les
push
pusha
cmc
jp
dec
outsb
and
jbe
mov
add
xchg
dec
and
ljmp
negb
jecxz
sbb
dec
lcall
repnz
mov
movsb
iret
int
cwtl
rclb
loopne
int3
cmp
movsl
mov
enter
das
daa
push
pop
leave
in
sbb
out
or
xor
lret
add
rcl
mov
mov
push
jle
movsb
insb
push
adc
cmpl
fdiv
pop
jae
bound
mov
push
dec
dec
cwtl
and
mov
scas
mov
mov
push
adcb
sbb
daa
pop
xchg
cld
mov
jbe
inc
pop
inc
addr16
dec
jnp
dec
mov
xor
sub
jbe
pop
xchg
jecxz
add
sar
inc
jbe
mov
mov
push
fisttpl
pop
jo
aad
inc
jge
cld
cmp
aam
push
fsubrp
jle
loopne
pop
mov
js
stos
lahf
cmp
mov
push
cmp
rcll
popa
adc
mov
sub
mov
into
ds
and
jno
add
ficoms
adc
pop
jne
push
fdivs
and
add
ucomiss
std
mov
sub
adc
push
xchg
inc
pop
lea
testb
push
vpackssdw
pop
lcall
rcl
fs
push
loopne
sub
or
pop
hlt
hlt
adc
and
stc
cld
sub
xor
dec
call
mov
daa
jnp
in
jmp
adc
jae
mov
daa
mov
into
pop
push
mov
push
pop
add
fwait
push
mov
sbb
into
cmp
xor
andb
lahf
sub
test
fisubrl
scas
cmpsb
push
repz
mov
popa
inc
pusha
add
push
aad
mov
sub
test
mov
inc
int
dec
nop
xchg
rcll
sub
movsb
aam
sahf
out
ds
push
dec
rorl
jno
imul
gs
xacquire
in
rclb
mov
pushf
jnp
test
into
into
xor
outsl
mov
in
insl
adc
mov
mov
bound
lods
push
xchg
icebp
fidivl
stc
je
fxch
push
cmc
inc
ret
gs
mov
gs
ss
mov
jp
fsts
jns
sub
cmpsl
push
xchg
lock
movsl
sbb
aas
test
lea
cmpsb
arpl
cmpsl
loopne
sti
out
jb
inc
imul
mov
push
in
adc
jl
gs
mov
leave
sub
mov
insl
cmpsb
es
push
dec
bound
call
loopne
jne
loopne
pop
cmpsb
push
push
sbb
and
sahf
lods
add
out
mov
mov
push
repz
ret
in
das
gs
mov
jg
repnz
clc
in
aam
ds
lock
mov
mov
out
lret
adc
xchg
and
add
cmp
call
test
add
cltd
out
pop
sbb
and
jb
ret
jne
ficompl
icebp
nop
push
and
or
cwtl
std
pop
in
out
jl
test
das
and
jnp
jmp
jmp
sbb
aas
int3
mov
ljmp
mov
out
lret
dec
xor
clc
ljmp
loope
subb
jns
mov
sbb
pop
sub
mov
sub
xchg
xor
roll
xchg
and
or
mov
mov
iret
add
aaa
movsl
pop
test
mov
call
jl
lahf
push
jns
or
inc
cmp
loop
and
pusha
arpl
ficompl
dec
and
dec
loop
pop
mov
xchg
iret
pop
icebp
inc
add
aaa
sub
imul
inc
sub
repnz
punpcklbw
xor
lods
ja
pop
scas
and
sahf
adc
push
add
pop
sbb
jo
sub
imul
inc
adc
mulb
adc
xchg
mov
mov
aad
mov
jnp
mov
fwait
in
pop
pushf
add
adc
jb
pusha
add
popa
push
jne
mov
cli
sahf
push
mov
mov
pop
imul
mov
and
aam
sbb
call
in
inc
push
test
mov
and
pushf
push
sub
mov
mov
in
aad
xlat
mov
test
mov
lret
mov
lock
lods
aam
mov
sub
loop
cmp
pushf
fisubrs
adc
jne
pop
mov
out
ss
xor
mov
jge
push
fldcw
add
je
or
popa
inc
adc
push
leave
mov
adc
dec
inc
pop
adc
xchg
sub
and
push
push
xor
mov
add
iret
in
push
push
xchg
pop
in
mov
ret
enter
out
mov
jge
popf
lock
sub
sub
lds
sahf
and
push
loopne
lods
rclb
add
stos
clc
add
fbstp
mov
push
push
rolb
adc
jg
lret
adc
mov
test
or
imul
pushl
ret
add
test
mov
xor
push
mov
jp
in
cmp
fnstsw
enter
repnz
sub
add
mov
push
int3
lds
push
enter
insl
sahf
out
xor
sub
daa
aad
popf
sbbl
iret
das
out
lods
js
enter
je
lcall
sbb
stc
pop
add
jge
ss
test
sbb
fs
sub
insl
and
add
fsubs
push
xchg
push
push
xor
sbb
xor
sbb
mov
pop
dec
sbb
leave
scas
jns
in
das
mov
arpl
mov
movsl
xor
xchg
xchg
jb
adc
xchg
mov
push
test
bound
repnz
xchg
iret
jae
push
cli
xchg
jbe
movsb
mov
jae
test
inc
popa
scas
ficompl
repz
fdivrs
dec
stos
enter
and
in
xchg
lods
call
popf
cmp
jmp
nop
or
jecxz
add
xchg
or
lret
lcall
and
push
sarb
sbb
jge
dec
out
call
mov
popa
popf
inc
cmp
inc
jae
repnz
push
popa
mov
xchg
sub
stos
imul
jle
mov
test
ja
lret
inc
clc
sahf
jno
fistpll
ret
sub
icebp
mov
or
fnsave
fs
sbb
aaa
push
rclb
mov
cmp
sub
mov
shll
sbb
movsb
lcall
pop
shrl
xchg
pop
dec
xchg
inc
inc
adc
cmp
cld
std
and
cs
lock
cmpsb
movsb
sub
or
cmc
xor
add
sub
inc
xchg
sbb
jno
fistpl
dec
vmptrst
sub
add
stos
jmp
push
xor
sbb
mov
aaa
sub
cmp
mov
mov
sub
push
push
insb
mov
test
cmp
fsubrp
das
fcmove
xor
cld
inc
int3
mov
cmp
aad
fwait
push
push
dec
sbbb
jge
fisubl
dec
bound
adc
pop
xor
jnp
out
cmp
dec
fldl
jae
lret
sub
rclb
fdivr
hlt
popf
xorb
mov
test
pop
fcoml
ljmp
es
sub
jp
pop
leave
stos
push
mov
add
flds
into
cmp
or
das
push
jno
mov
sbb
test
pop
mov
mov
push
push
std
lret
jl
inc
psllw
or
adc
jecxz
aam
cmp
cmp
js
out
in
cmp
hlt
inc
cmpsb
xchg
fs
pop
mov
jecxz
rolb
inc
xchg
or
dec
lds
sub
cmp
out
lods
ljmp
mov
push
fidivl
iret
fwait
jns
in
cmpsb
in
jb
jns
js
outsl
or
inc
js
rcll
jg
rcrl
int3
or
jecxz
out
xchg
xchg
ss
xor
xchg
loop
and
mov
popa
fdiv
pop
pop
cmp
mov
fidivrl
or
mov
test
lahf
jno
pushf
adc
lods
out
movsl
xchg
pop
mov
cmp
enter
cmpsb
mov
jae
nop
push
je
xchg
sbb
cmp
and
push
mov
int
mov
int3
jle
sbb
mov
fsubr
dec
rcrl
adc
cmpsb
andl
dec
in
ja
adc
xchg
outsb
mov
cmp
xor
xchg
sbb
sbb
mov
adc
jo
xchg
mov
push
loope
fmull
les
es
and
mov
mov
jbe
xchg
adc
lock
or
mov
xchg
and
jecxz
push
mov
mov
rcrb
icebp
fnstcw
rolb
adc
enter
or
out
cmpsb
add
xchg
lods
in
popa
dec
hlt
sahf
loopne
sbb
imul
mov
stos
sbb
mov
adc
int
outsb
arpl
push
jecxz
xchg
mov
insl
jno
lods
sbb
int3
divb
scas
inc
movsb
pop
dec
jl
call
in
aaa
addr16
nop
jb
inc
enter
dec
lret
or
aad
mov
pop
xor
shlb
push
std
push
das
lods
xchg
call
rcrl
ss
adc
lds
adc
pusha
cmp
mov
pop
mov
scas
lahf
push
clc
push
xor
sbb
and
movsb
inc
push
add
rol
xor
pop
mov
aaa
out
adc
mov
sub
in
dec
or
sub
ljmp
add
cmpsl
jns
js
jg
leave
aam
fwait
push
sbb
pop
pushf
mov
inc
sbb
call
cmc
fsub
sbb
add
adc
cwtl
insb
mov
fisttpl
add
in
mov
mov
pop
pusha
jnp
arpl
cmp
daa
jge
add
je
test
mov
cmp
out
hlt
mov
jp
cmp
int3
ds
lret
ret
aad
subl
ficoms
push
into
lret
pop
dec
insl
push
mov
mov
pop
cmp
or
aas
jo
in
xor
daa
cmpb
ljmp
lcall
cmc
daa
int
adc
test
mov
cwtl
imul
pusha
test
dec
imul
mov
arpl
call
andb
fcoms
lret
dec
out
jmp
xchg
jno
xchg
push
mov
mov
mov
inc
and
popa
or
lods
fwait
loop
pushf
xchg
rclb
outsb
imul
or
movsb
jns
test
int3
aam
jne
mov
loope
mov
mov
mov
shll
or
inc
orb
leave
notb
cld
pushf
ds
and
mov
or
dec
leave
or
or
xchg
out
dec
cmp
push
sbb
shl
into
jnp
mov
inc
sbb
jge
loope
fisubrl
mov
mov
stc
lret
repz
out
push
lret
inc
stos
ss
jmp
xor
pop
jg
jo
cmp
in
fisttps
std
mov
dec
pop
inc
xor
cmpsl
dec
mov
mov
mov
mov
popf
lea
mov
push
inc
ret
outsb
sbb
add
lds
xorl
cmp
test
sbb
sti
inc
jmp
or
mov
stos
pop
repz
mov
xchg
outsl
rclb
js
cli
fists
daa
dec
adc
jmp
ss
adc
push
stos
les
lcall
movsb
xor
pop
fidivrs
cmp
or
sub
mov
inc
into
and
mov
mov
test
jne
testl
or
sti
arpl
sti
push
lahf
pop
shl
lret
add
dec
mov
test
rol
sub
and
movlps
or
sbb
push
jecxz
gs
mov
ja
pop
lret
mov
mov
int
jns
lods
cmp
xchg
aas
xchg
mov
mov
iret
xor
data16
jb
xorb
mov
incl
mov
lods
inc
xor
jmp
aad
pop
dec
iret
mov
lds
jge
jo
lds
adc
mov
scas
mov
jnp
and
clc
int
movsb
mov
je
xorb
mov
dec
lret
sub
xchg
sti
mov
mov
ret
cli
mulb
mov
cmpsl
pop
pusha
jb
mov
les
xor
lahf
sbb
fwait
std
push
jne
or
call
lods
xchg
add
mov
sub
adc
dec
jb
jne
or
test
sti
xor
fimull
adc
mov
sbb
int3
popf
and
adc
mov
sbb
mov
cmp
push
imull
ja
fdivs
div
std
out
rolb
iret
and
sub
xor
repz
or
enter
mov
stos
xchg
ret
adc
imul
inc
out
scas
lret
outsb
fistpll
fbld
push
cmpsl
loope
repnz
int
cmp
xor
test
lods
out
lods
iret
fwait
dec
pop
dec
sub
jmp
jae
xchg
imul
and
xlat
sub
je,pt
push
inc
xlat
dec
es
pop
clc
sub
jg
mov
xchg
aaa
pop
fildll
lds
sub
pop
mov
fsubrl
cmc
add
xchg
mov
stos
or
shll
sti
sub
and
lds
das
popa
outsl
dec
aaa
loop
mov
rcrl
and
and
sti
push
scas
cmc
push
sbb
mov
jge
fnstenv
mov
ljmp
mov
imul
lahf
sahf
imul
adc
aas
xor
sbb
lods
scas
out
xchg
test
push
cmp
xor
sbb
inc
stos
add
mov
jmp
loop
fadd
cmpsl
sbb
and
bound
xor
in
sarb
mov
jns
scas
repz
push
mov
stos
pop
popa
sub
pop
jge
dec
cmp
sub
lahf
andl
shrb
std
sbb
push
mov
xor
inc
ja
sbb
rcll
cld
or
xor
xorb
lods
sahf
xor
pop
cmp
mov
fisubrl
les
mov
dec
andb
sarl
push
push
jg,pn
sarl
out
fistpll
sub
jp
enter
lahf
add
sub
xchg
sti
sbb
mov
sub
int3
in
pop
or
mov
jb
cmpsl
test
xchg
pop
stos
and
outsb
lods
xor
sbb
std
sbb
or
mov
mov
mov
roll
push
loop
xor
cmp
pop
xor
lds
adc
repnz
icebp
arpl
fwait
sarl
call
jbe
aad
push
push
xchg
out
inc
mov
ljmp
cmp
rcrl
in
decl
fcomi
mov
xchg
mov
out
jge
cli
mov
jge
aam
sub
lds
lret
shlb
int
lahf
test
add
sbb
addr16
int
insb
mov
sbb
std
loope
popf
in
loope
mov
and
xchg
cmp
cmpsb
lret
fsubl
mov
push
pminsw
mov
cwtl
xor
movsl
push
fisubs
xchg
lahf
jno
jno
sub
adc
push
sub
test
pop
jo
mov
cltd
jge
pusha
lret
inc
dec
cwtl
push
add
int
dec
adc
cwtl
sub
lds
and
or
mov
push
inc
iret
ret
and
xor
in
imul
xchg
pop
fisubrl
repnz
fisubl
test
mov
sub
clc
and
lock
in
or
fstl
jp
or
cwtl
shr
sbb
inc
insb
xor
addr16
inc
sbb
test
fpatan
push
jle
data16
cs
cmp
bound
gs
je
imul
ret
and
stos
scas
mov
xchg
add
xchg
test
fildl
push
sahf
and
pusha
push
ficompl
jb
push
insb
jo
mov
les
mov
push
or
out
fdivl
push
xchg
mov
inc
cmp
in
xchg
mov
popa
dec
mov
mov
movsb
adc
xchg
jae
cmpsb
dec
pop
push
add
leave
xchg
cld
lcall
cld
jns
pop
jg
pop
push
insb
xor
mov
int
lret
jae
jo
push
adc
mov
test
push
add
add
mov
adc
popa
pop
adc
in
es
push
gs
xor
fisubs
stos
and
xchg
aaa
out
ljmp
inc
lock
popa
dec
mov
out
sbb
mov
jno
pop
movsb
jnp
data16
and
mov
loope
test
push
loope
or
and
jnp
push
out
out
dec
sahf
daa
jg
rcrl
out
xchg
ret
mov
sub
xchg
cmpl
inc
cmpsb
fildll
sbb
sahf
out
pop
mov
mov
jae
sbb
js
stos
stos
call
push
dec
or
add
mov
iret
cmp
into
add
stc
out
lods
and
cltd
ljmp
mov
test
cmp
mov
lahf
aaa
je
sbb
mov
jge
cmp
out
mov
and
dec
mov
add
sti
and
mov
icebp
mov
lods
fs
dec
jle
jl
xor
ret
daa
xor
or
shrb
cmc
adcb
adc
mov
mov
mov
das
mov
and
dec
lea
jle
imul
mov
jnp
popa
repnz
xchg
xor
dec
dec
jg
lahf
mov
cld
aaa
and
add
xor
mov
add
jbe
ljmp
mov
xchg
insl
mov
sbb
mov
in
push
cmpb
add
inc
lods
or
jmp
or
inc
or
out
mov
sarb
add
movsl
fimull
mov
mov
nop
out
xchg
push
pushf
and
rolb
or
ret
push
movsl
and
movsb
lahf
roll
cmp
dec
mov
add
sbb
cmc
fistps
subl
outsb
pop
test
mov
sbb
fimuls
int
clc
adc
hlt
xchg
aaa
inc
stc
in
mov
mov
cmp
mov
jl
adc
xor
pop
or
xchg
pop
std
mov
cmp
stos
sti
stos
out
into
cmp
jle
pop
bound
pop
cmp
into
cmp
fildll
lea
outsl
shl
pusha
jp
mov
mov
testl
mov
push
mov
and
call
ds
ss
xor
jecxz
std
ret
cmp
jae
sbb
leave
imul
jg
and
int3
pushf
cmp
cli
movb
dec
mov
nop
xorl
mov
stos
push
mov
jns
mov
xchg
movsl
fstl
jne
push
mov
push
add
push
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
dec
andl
pop
jp
subl
xchg
test
dec
mov
push
and
or
jge
jmp
aaa
xchg
dec
pop
repnz
neg
push
orb
filds
movsb
pop
push
repz
outsl
loopne
push
lret
leave
adc
je
mov
add
or
mov
movsb
pop
clc
push
pop
icebp
xor
adc
cmp
cmpsb
pop
lods
hlt
push
mov
and
adc
das
jp
or
outsl
sub
jnp
popf
or
xor
sbb
aas
xchg
adc
fstpt
pushf
test
mov
mov
lods
out
xchg
push
aas
pop
lcall
jl
adc
cmpsl
mov
fimuls
fadds
cs
mov
subl
movsb
stc
lea
sahf
fmul
into
movsl
or
shlb
frstor
adc
pop
inc
ljmp
into
and
xchg
fiadds
ret
add
in
lcall
mov
mov
or
add
xorl
cmp
in
jg
stos
xchg
pop
push
push
sub
repnz
sbb
insl
mov
outsl
push
push
insl
xchg
das
fadds
movsl
mov
add
lds
dec
dec
loope
fimull
xchg
lcall
sub
stos
lcall
int3
cmp
loop
stc
ret
xor
ljmp
aaa
outsb
or
mov
adc
sub
inc
add
pop
std
sbb
push
or
push
mov
in
or
stos
testl
dec
push
sahf
push
sub
lret
jnp
xchg
jg
mov
das
jb
dec
xor
push
mulb
filds
rolb
xor
jae
iret
mov
sbb
sbb
lods
das
mov
sub
sbb
jge
mov
pop
fisttpll
mov
sbb
xchg
add
inc
adc
ror
lea
lcall
jge
mov
push
sub
dec
xchg
sbb
mov
cltd
jns
dec
clc
sbb
pop
into
cmp
pop
jns
push
sbb
pop
in
sbb
push
push
iret
in
or
cmp
lods
sub
jp
pop
addr16
mov
aaa
pop
mov
cmp
add
imul
loope
test
sbb
add
mov
xchg
push
movsl
outsl
inc
mov
mov
ret
mov
dec
rclb
cmpsl
and
dec
inc
imul
jo
mov
push
divl
imulb
xchg
out
and
es
add
mov
push
cmp
das
mov
push
js
jg
ret
scas
ja
add
fwait
insl
inc
clc
jecxz
mov
shrl
pop
jo
dec
push
sub
data16
jmp
xchg
sbbb
fimull
xchg
cld
jo
call
pop
inc
js
mov
jo
cmp
xchg
cmc
fs
mov
inc
push
scas
sbb
lahf
xchg
popf
lret
jmp
push
mov
jnp
xchg
push
adc
jbe
mov
in
inc
xor
lidtl
mulb
jnp
sarl
cmpsl
nop
pop
xchg
orl
adc
pop
mov
fldt
test
jp
ret
icebp
push
push
shlb
inc
cmp
cmp
imul
and
sub
push
push
dec
xor
mul
pop
arpl
mov
inc
fwait
and
cltd
pop
sbb
mov
cmc
jns
gs
loope
ss
push
cld
hlt
pop
mov
das
adc
cmpsl
scas
daa
icebp
or
adc
mov
dec
outsl
shr
fsts
subl
out
dec
out
xchg
push
cltd
cmpsb
or
mov
pop
xchg
cmpb
xchg
addr16
popa
push
mov
gs
mov
rol
test
mov
mov
push
add
movsl
popa
mov
mov
roll
in
les
aam
not
sub
push
pop
fcomps
sbb
orb
sub
push
and
pop
pop
jbe
push
int3
cld
lret
ret
and
mov
add
enter
jbe
pop
arpl
push
in
rcr
sbb
repz
and
jnp
mov
negl
push
aad
ret
cltd
dec
fwait
ret
int
shrb
push
ljmp
dec
or
sub
mov
sub
and
fisttpll
ficomps
bound
les
push
push
mov
sub
jmp
dec
dec
es
inc
fstl
mov
popf
pavgw
xchg
sub
sub
dec
jmp
jb
ret
out
les
mov
cmp
ljmp
arpl
stc
add
dec
mov
shr
lds
int3
fidivrs
or
xor
es
mov
mov
xor
lea
pop
jb
jae
sbb
out
sbb
nop
mov
loopne
outsb
jb
mov
sub
outsl
pop
test
orl
pop
jg
cmc
xchg
addb
or
fmulp
icebp
loopne
fisubrl
mov
and
aaa
dec
or
shl
mov
push
jmp
ret
inc
cwtl
mov
ja
and
inc
loopw
xor
aas
sub
jg
out
nop
xchg
inc
leave
dec
or
call
insb
pusha
test
inc
std
hlt
loopne
cmp
xchg
iret
dec
jl
int
push
xchg
out
and
pminsw
int
mov
push
and
loope
add
lods
nop
dec
xchg
lods
jns
mov
stos
or
add
xor
mov
lock
loopne
addr16
mov
cld
mov
cmpsl
les
push
mov
lock
jnp
push
outsl
cltd
cltd
pop
js
inc
ja
stos
or
push
mul
push
popa
or
sbb
fdivrs
cld
shr
push
pop
sbbb
dec
clc
dec
aas
cmp
cmp
inc
ret
and
push
movsb
adc
push
scas
and
gs
hlt
inc
bound
shrb
add
add
gs
adc
ret
adc
jo
bound
jge
adc
pop
imul
dec
mov
xchg
pop
pop
push
lcall
popf
dec
loopne
imul
fistps
lods
sub
mov
or
enter
push
pusha
xor
add
jp
enter
and
mov
in
xlat
out
mov
sarl
fwait
ror
xchg
fidivs
insb
hlt
test
ja
adc
and
add
leave
call
test
mov
jecxz
in
sbb
and
daa
lcall
pop
dec
loope
nop
add
enter
mov
pop
int3
lock
jecxz
lods
fisttps
mov
out
es
push
pop
xrelease
inc
imull
mov
mov
dec
les
cmp
mov
fucomip
adcb
fdivl
add
add
push
sbb
gs
das
loop
mov
xchg
push
lcall
cmpsl
push
insb
repnz
mov
jle
filds
pop
arpl
lcall
inc
push
sub
mov
mov
jl
push
and
inc
mov
movsb
jbe
std
push
sub
dec
and
aaa
xor
and
xor
inc
scas
aas
aam
push
push
pop
adc
les
push
mov
pop
sub
cmp
cmpsl
mov
fldcw
inc
adc
push
les
aas
push
lret
ret
fcoml
xchg
push
adc
dec
mov
jp
jmp
xor
dec
mull
add
and
dec
push
mov
rcll
mov
inc
stc
int
ljmp
cwtl
sbb
test
stos
ljmp
xchg
iret
pop
dec
mov
mov
push
push
xor
adc
loop
mulb
data16
push
jecxz
stos
out
shl
loop
dec
inc
xor
bound
andb
add
and
sub
insl
mov
sub
loope
push
stc
xor
or
scas
mov
cli
scas
sub
adc
in
adc
xchg
dec
sbb
jns
popl
adc
ja
dec
adc
aad
xchg
pusha
js
leave
pop
mov
push
adc
sbbl
xor
inc
lock
sbb
lret
out
fsts
or
pop
ret
repz
scas
lods
outsb
jle
jno
sub
ret
or
cmc
ds
ret
stos
mov
adc
das
ret
pop
arpl
pop
daa
idivl
jmp
inc
ret
jmp
sbb
mov
cmp
jecxz
aas
iret
imulb
cmp
shll
push
jns
mov
fsubrs
leave
mov
repz
inc
or
je
cmpsl
movsl
xor
mov
dec
jbe
stos
jo
cltd
add
pop
sbb
xor
pop
int
stc
inc
ja
out
lret
cmpl
pop
out
jle
mov
in
lahf
insl
xchg
sahf
cmp
les
pop
add
fistpl
stos
mov
outsb
sti
pop
shll
incl
arpl
test
add
mov
inc
cmp
pop
inc
loop
sbb
push
add
ja
fldt
into
adc
mov
scas
es
dec
in
xchg
dec
cwtl
jl
lock
cmc
adc
xor
aas
cltd
cmp
testb
dec
jp
mov
jmp
pop
data16
or
mov
push
dec
sbb
push
daa
pop
or
pop
xlat
or
bound
pop
fadds
adc
mov
out
pop
idivl
cld
in
sub
mov
jae
ficomps
shlb
xchg
repnz
insl
jns
data16
cmpsb
mov
jecxz
mov
cmp
fdivrl
or
fwait
out
add
mov
mov
jnp
daa
clc
imul
ss
lods
jp
mov
push
addps
pop
scas
insb
xor
popf
sti
mov
or
pop
test
pop
jge
pop
shll
cs
aad
xchg
rcl
xor
mov
ljmp
pop
xchg
adc
xor
aad
ret
adc
xchg
enter
lock
mov
stc
xchg
movsb
adc
xor
insl
add
add
ljmp
sbb
das
hlt
push
int3
lret
cmp
cmpsl
inc
cmc
or
lock
aas
pop
mov
out
push
sarb
lret
add
cmp
fs
jno
call
dec
add
test
dec
add
mov
xor
cltd
push
sti
leave
repnz
out
push
cmp
lcall
cmp
inc
add
adc
imul
bound
outsl
jbe
jne
out
jnp
cmp
adc
sub
lea
push
inc
rep
fcomps
sbb
sbb
icebp
mov
adc
lock
loopne
sbb
pop
cld
ret
cmp
cwtl
fidivrs
lahf
fistl
mov
pushf
adc
mov
push
js
mov
jne
cmc
aam
in
xor
adc
push
push
lret
adc
jl
fadds
inc
jl
jae
jne
es
cmp
inc
loope
lods
pop
dec
xor
inc
imul
insb
movsl
out
xchg
mov
cli
push
jecxz
jae
sub
mov
aam
int
es
pop
push
jl
push
shrb
push
int
mov
popa
stos
pop
jnp
loopne
negb
mov
lods
cmpsb
outsb
add
fucom
mov
inc
gs
mov
mov
fcos
xlat
je
imul
mov
cld
cmp
cld
lods
push
or
xchg
out
mov
adc
sar
out
jne
loop
dec
jecxz
fsts
mov
std
jecxz
pop
enter
subss
jg
les
dec
pop
push
cmp
pop
jg
divb
add
sub
mov
jmp
iret
mov
push
rcll
jae
sub
xor
std
aam
mov
lret
or
pop
lock
cmp
mov
cmp
lods
jo
dec
addr16
push
pop
es
mov
cmp
sbb
pop
sbb
push
push
in
pop
jnp
mov
fistps
pop
daa
push
rcrb
in
leave
and
mov
dec
xorb
enter
sub
subb
cmc
lods
out
mov
lret
test
adc
or
insl
out
mov
in
jns
mov
cmp
fldcw
repz
jl
fwait
mov
mov
icebp
ds
repnz
sub
push
mov
cwtl
jno
lcall
add
rcrb
sub
ret
pop
adc
mov
outsl
and
xor
inc
pop
sar
sub
jno
es
mov
in
push
jnp
sub
or
sbb
fwait
es
icebp
aaa
and
pop
xor
aaa
add
jmp
jae
inc
mov
and
out
movsl
into
roll
cmp
lahf
lret
cmp
mov
or
in
push
jae
jns
mov
fwait
mov
xor
cld
xchg
and
mov
xor
shll
stos
nop
mov
jae
jno
add
ja
and
mov
or
push
xchg
movsl
push
lods
fwait
push
or
push
roll
lret
fists
enter
push
sub
idivb
xor
icebp
icebp
cld
arpl
pop
lahf
sub
data16
fs
adc
jo
mov
out
shll
fwait
add
or
loop
aad
inc
and
in
sbb
xchg
dec
and
les
scas
push
mov
test
ljmp
ljmp
scas
inc
or
in
stc
insb
outsb
push
mov
pop
pusha
addr16
sub
cmp
iret
lds
push
das
pop
call
je
xchg
stos
inc
addr16
jns
dec
repz
xchg
lock
pop
adc
pop
pop
cmp
sbb
fwait
pusha
add
pop
test
int
cmpsl
pop
iret
add
insl
mov
int
mov
jmp
xchg
pop
and
movsl
mov
xor
lds
jae
xchg
sub
push
outsb
mov
aas
aad
in
inc
movsb
mov
ljmp
iret
in
sti
mov
aam
or
hlt
scas
sub
inc
sbb
sbb
nop
filds
sahf
cmc
imul
sbb
xor
xchg
inc
or
gs
and
pop
fsubs
jo
xor
xlat
scas
loope
outsb
mov
mov
pusha
xorl
pop
push
jle
mov
nop
pushf
dec
pop
sbb
flds
shll
aas
pop
in
cmp
ja
sub
rorb
js
div
jge
xchg
xor
ss
jmp
cmpb
cmp
pop
les
or
push
cs
mov
inc
test
lcall
aad
int
mov
fistpll
sub
dec
aad
orl
pop
xchg
icebp
push
inc
stos
pop
or
es
mov
jp
pop
icebp
sahf
out
insb
dec
xor
mov
and
xchg
inc
inc
cmp
xchg
stc
out
scas
adc
cmpsb
bound
outsb
fidivs
mov
int
dec
add
xor
jne
push
inc
sti
xor
or
lods
jmp
stos
jbe
ja
push
icebp
cmp
and
test
call
push
out
mov
sub
push
or
in
ud2
shlb
test
rol
xchg
pop
inc
flds
lahf
sbb
sub
mov
pop
out
call
lret
mov
lahf
movsb
fcom
movsl
adc
stos
push
into
mov
mov
jmp
sbb
popf
test
push
fmuls
add
jl
mov
pop
dec
int3
cvttps2pi
cmc
insb
notl
xor
repnz
jp
sub
push
jecxz
out
pop
into
pop
xchg
test
and
jae
xor
mov
xor
mov
sbb
int3
mov
push
sbb
cmp
call
xor
outsl
shlb
mov
inc
xor
lock
sarl
jg
stc
xlat
pop
or
and
addb
mov
cld
mov
dec
push
and
xor
lock
inc
dec
xor
cmpsb
orb
and
jge
jb
xor
and
jns
push
and
xor
and
mov
in
jb
ja
cmpsb
std
daa
lods
pushf
mov
mov
aaa
aas
jg
shrl
stos
xor
mov
mov
mov
cmp
cld
leave
add
ja
adc
adc
mov
ds
je
jp
aas
mov
movsl
xor
cmpsl
dec
jbe
add
pop
jge
dec
or
adc
inc
inc
addr16
cmc
dec
fwait
in
jbe
loopne
aas
fistps
gs
dec
mov
xlat
mov
or
fwait
pop
cmp
dec
loopne
shll
cwtl
sub
push
adc
es
ljmp
dec
add
ror
push
andb
dec
pop
cmp
jmp
inc
xchg
sub
sub
ds
nop
cwtl
sub
mov
les
push
aas
in
adc
push
dec
bound
negl
xchg
leave
pop
jo
dec
jle
clc
aas
pop
xor
and
mov
jnp
dec
mov
outsb
fwait
mov
rolb
mov
fisttpll
or
rcrl
in
lods
jae
jno
or
insb
add
or
add
pop
sti
mov
ja
in
mov
pusha
adc
pop
rclb
or
loopne
dec
hlt
jbe
push
shll
mov
push
aaa
in
rolb
fst
sbb
std
xchg
add
add
mov
mov
sub
mov
cwtl
pop
mov
mov
out
call
add
sahf
xchg
fucomip
pop
ficompl
xchg
out
mov
scas
loop
adc
movsl
push
cli
pop
push
or
or
addr16
lds
mov
in
scas
divb
test
pop
decl
lahf
dec
push
rcrb
cli
add
imul
out
mov
bound
add
enter
xchg
mov
lock
and
jmp
mov
jns
or
lret
pushf
sbb
in
sub
cmc
shll
and
mov
imul
add
mov
xor
pop
adc
mov
jbe
dec
insl
lcall
mov
dec
es
rorl
rcrl
js
dec
push
jp
fcompl
divb
icebp
jecxz
or
or
das
jo
mov
add
fcmovu
push
pop
xchg
pop
arpl
cwtl
push
xchg
jae
or
fbstp
loope
es
inc
adc
stos
jo
mov
in
inc
cld
sub
and
cltd
and
mov
mov
and
stc
xchg
jb
push
lret
or
clc
cmp
or
pusha
push
mov
das
xlat
test
data16
orb
std
into
pop
lods
inc
lahf
mov
pop
mov
shlb
mov
scas
cmp
in
imul
mov
shlb
stc
push
loop
test
movlhps
lret
mov
in
and
adcb
cli
xor
jo
les
ljmp
ja
mov
mov
js
jno
filds
dec
lahf
insl
ficoml
pop
xchg
orl
add
call
je
inc
jno
aad
xchg
mov
push
add
insb
xlat
mov
or
xchg
adc
pop
mov
ss
addr16
lahf
pop
and
movswl
and
leave
aad
icebp
pop
jb
sub
cli
fs
enter
shl
scas
stos
xor
mov
data16
and
pop
mov
repz
lock
fdiv
push
js
cmpsl
sar
fdivrs
adc
insl
cs
mov
fadd
fisubl
mov
aas
shr
outsl
adc
and
inc
fsubrs
imul
pop
inc
add
pop
lock
or
xorl
insl
xchg
or
dec
in
das
or
scas
mov
cltd
dec
ja,pn
sbb
addr16
pop
fidivrs
xchg
lahf
cmpsb
scas
or
sbbb
bound
jmp
or
xchg
clc
jno
dec
js
dec
scas
in
mov
xchg
je
xor
dec
fstl
jae
into
into
jg
incl
lods
loopne
fisubl
mov
maskmovq
imull
adc
mov
push
mov
imul
sbb
movsb
aaa
dec
roll
negl
ja
pop
jo
leave
cmc
xlat
push
cs
hlt
pop
cmp
jo
dec
and
jl
fnstsw
inc
stos
cld
arpl
jo
in
test
int
cmp
cltd
lock
sbb
leave
fs
mov
cltd
adc
or
mov
mov
or
insb
int
and
and
in
push
add
in
sbb
je,pt
and
xor
es
mov
mov
jae
outsb
fsubrp
xor
enter
mov
cmc
icebp
ja
push
in
rcr
out
lret
xlat
mov
mov
mov
sub
push
sahf
ljmp
and
mov
cli
or
or
outsl
xor
imul
xor
push
lret
lods
notl
sti
add
adc
dec
outsl
aaa
add
mov
jo
jbe
push
jle
popf
add
enter
test
aas
popa
sub
or
mov
mov
pusha
ss
pop
lahf
js
int
add
dec
out
fistpll
and
lds
sbb
popf
cmp
mov
mov
gs
test
xchg
xor
push
jb
jle
mov
test
test
xor
addb
fadds
jns
and
cmpsl
cmp
jle
cmp
in
mov
jo
mov
stos
cmc
sub
sub
mov
jl
lcall
cmp
pop
mov
cld
jo
mov
fildll
mov
jg
sbb
idivb
icebp
in
es
pop
push
mov
ljmp
int
dec
mov
jnp
jl
mul
jecxz
or
fists
inc
mov
pop
pop
cmp
xchg
dec
mov
cltd
insl
test
icebp
xor
mov
push
adc
pop
in
fisttpll
cmp
loope
repnz
fldl
rcrl
or
inc
fwait
jmp
aad
mov
mov
sub
jg
loopne
jecxz
notb
mov
or
inc
inc
mov
and
in
popa
sbb
inc
mov
testb
pop
lahf
popw
lret
pop
add
and
push
mov
imul
xchg
outsb
rcll
xchg
rolb
mov
adc
js
cmpsb
mov
dec
push
leave
add
xor
pushl
into
mov
loopne
sahf
lret
and
mov
pop
pop
lahf
push
cmpsb
jnp
out
xchg
and
lock
ret
push
into
mov
enter
sub
cmc
mov
and
inc
cmp
icebp
pop
into
pop
jmp
pop
outsb
sbb
dec
mov
icebp
std
scas
test
mov
scas
test
scas
dec
into
pop
ss
fiadds
mov
popa
inc
xor
pop
mov
sahf
daa
inc
sbb
fistpl
ficoml
pop
mov
push
js
lahf
fldenv
mull
pop
out
mov
lret
cs
pop
cs
inc
push
push
faddp
push
imul
inc
inc
cmp
xchg
and
sbb
or
test
inc
pop
jne
sahf
sub
sub
jg
repnz
js
dec
xlat
maskmovq
idivl
out
xchg
dec
faddl
mov
jo
dec
xor
mov
inc
mov
cmp
imul
nop
jae
scas
stc
dec
xchg
sub
pop
fsub
xlat
inc
daa
xor
imul
inc
xchg
popf
into
aad
push
shlb
dec
push
add
movsb
mov
and
jns
test
xor
aas
out
inc
rcrl
cmc
sbb
pop
aam
sarl
sub
lods
pop
notb
bound
push
pop
das
mov
int
adc
js
aaa
data16
stos
fists
sbb
lock
mov
sub
pushf
loope
pop
or
mov
test
xchg
daa
rorb
inc
lea
pop
push
push
mov
pop
leave
mov
sub
adc
js
or
pop
daa
enter
mov
aad
adc
in
lret
mov
outsb
cwtl
iret
mov
cld
cld
ficoml
mov
loope
sbbl
das
push
add
xor
in
mov
rdmsr
jmp
jns
test
inc
adc
fsubrp
lods
mov
jnp
and
inc
xlat
movsb
popa
or
das
or
jl
mov
push
inc
stc
dec
cli
fisttpll
sbb
out
sbb
outsb
jge
arpl
and
dec
mov
mov
lret
sbb
xor
inc
push
jb
jns
shlb
enter
inc
dec
in
or
js
xor
jge
in
jnp
add
test
sbb
lahf
jb
ja
in
cmpsb
popf
adc
dec
outsl
pop
mov
and
pop
dec
cmp
sbbb
lret
ret
and
nop
ljmp
push
add
pop
sbb
arpl
xor
add
xchg
jo
dec
inc
pushf
dec
sub
fisttpll
addr16
popf
xor
cli
arpl
mov
mov
adc
xor
mov
or
stc
jl
scas
sbb
jg
mov
cltd
cld
push
std
bound
cmc
aad
pop
xchg
scas
and
and
int
lret
jno
mov
fisubrs
mov
xlat
out
addr16
jmp
and
mov
sti
lahf
out
add
clc
mov
inc
mov
inc
shl
and
sbb
mov
lea
sahf
mov
mov
rorl
lahf
rol
repnz
loopne
decb
in
pop
test
mov
sbb
adc
jo
std
adc
xor
xchg
js
shrl
out
movb
inc
nop
xor
mov
and
inc
ss
jmp
or
dec
sub
insl
hlt
mov
imul
into
shlb
jbe
push
fdivrp
mov
pushf
mov
pop
dec
mov
jno
repz
pushf
fdivrl
lret
fucomip
xchg
sbb
les
repnz
pop
xchg
sbb
mov
pop
fdivr
add
jp
cmp
movsl
add
outsb
or
mov
dec
pop
mov
cmpl
jmp
insl
push
and
cli
cmp
cld
jg
scas
frstor
stos
insl
js
repnz
in
fs
sbb
and
cmpsl
nop
mov
stos
xchg
fbstp
dec
in
push
jmp
mov
mov
sbb
aam
fimuls
xor
lret
in
jecxz
jae
mov
cmpsl
and
arpl
in
ss
mov
cmpsb
leave
xchg
cmpb
mov
popa
stc
cmc
stos
enter
adc
mov
sub
ret
lock
inc
outsb
lods
add
outsb
jns
cli
xor
mov
lret
rorb
or
sub
lahf
pop
sub
jbe
mov
sbb
jge
mov
inc
xchg
test
and
dec
loope
dec
iret
xor
xlat
push
push
fcompl
lret
inc
sarl
push
jge
pop
xor
jg
movsb
push
ja
sub
push
ret
lods
mov
in
mov
leave
fwait
push
xchg
imul
scas
stc
enter
dec
mov
mov
jge
and
in
sbb
stc
and
push
pop
mov
adc
inc
lea
and
xchg
dec
nop
push
lahf
jns
push
adc
dec
jp
pop
jbe
scas
rorl
fst
lahf
in
pop
push
cs
sub
xor
xor
jmp
stc
sub
mov
push
or
jle
xchg
add
mov
insb
cmpsl
cmpsb
mov
mov
out
sbb
dec
in
jge
call
notb
adc
rcl
fs
insb
inc
mov
sbb
mov
sbb
push
xchg
shlb
arpl
jl
pop
in
jne
call
push
insl
jno
push
ret
dec
jno
lea
cmp
stos
inc
ljmp
cmp
push
nop
mov
and
xor
push
outsb
loop
sahf
call
aad
add
mov
and
mov
rorl
mov
stos
loop
add
pop
or
hlt
inc
add
cmpsb
xor
out
fwait
mov
jnp
sti
adcb
lods
out
xlat
xor
lods
pop
outsl
imul
xchg
pop
popa
fimull
mov
push
in
dec
shl
stos
clc
in
mov
xchg
mov
dec
or
cmpsl
xchg
pop
push
adc
cli
xchg
jne
insl
pop
push
push
aam
adc
lea
mov
inc
pop
enter
or
mov
dec
cmp
xchg
movzwl
lods
iret
xor
cmc
cs
push
sti
rclb
jo
or
cmp
sti
jnp
lcall
into
rcrl
add
lock
mov
xchg
sbb
fisubrl
push
mov
js
xchg
aas
std
mov
mov
pop
out
push
pusha
lods
frstor
push
cmpb
mov
ret
and
jb
imul
addr16
push
cmc
addb
aaa
mov
insl
add
cmpsl
xchg
call
mov
enter
sahf
stc
push
jb
jbe
push
pop
cld
jb
test
push
adc
jecxz
sbb
ds
out
cs
push
adc
jns
jbe
mov
gs
xor
fsub
sbbl
or
aas
rcr
jle
std
mov
aad
int3
js
clc
sbb
data16
aaa
mov
inc
loopne
fsts
leave
dec
xlat
cltd
jno
das
cmp
popf
inc
pop
pop
inc
or
xchg
lret
test
push
notb
push
push
cmovo
imul
xchg
outsl
insb
push
roll
fldl
jp
mov
mov
cs
push
sbb
test
pop
pop
pop
loope
pop
jno
pusha
mull
cmp
daa
mov
dec
and
test
into
mov
push
sbb
jbe
lea
in
push
sub
enter
lahf
sub
xor
mov
ljmp
xchg
inc
jecxz
sti
jo
loopne,pn
xchg
xchg
xlat
or
dec
sub
xchg
lea
stos
dec
ja
shrb
lods
jmp
data16
fisttpll
dec
xor
xchg
psubusb
orb
out
leave
xchg
jnp
leave
shrb
dec
fdivrl
andb
inc
out
bnd
leave
les
xor
adc
push
lret
test
into
repz
outsl
or
cmp
push
jns
cmp
push
pop
or
scas
jg
push
sub
das
adc
pop
hlt
popa
adc
xchg
pop
cmp
dec
inc
je
jo
adc
insb
dec
ds
push
and
push
sahf
jne
rclb
mov
les
subb
cmpsl
sub
pop
aam
mov
pop
sbbl
lcallw
cltd
aad
jle
out
test
mov
push
xor
fdiv
sub
aaa
in
mov
push
and
fcmovb
xchg
sbb
lcall
into
or
test
pop
pop
sti
or
sbb
clc
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
es
in
dec
xlat
mov
inc
mov
popa
cli
aaa
pop
int
cmp
mov
js
cmp
test
pop
fs
gs
adc
and
aam
xchg
mov
lods
sub
inc
cs
push
jno
scas
pushf
mov
mov
mov
cs
lods
sub
test
movsb
popf
bound
rclb
ret
push
add
cmp
mov
jbe
mov
imul
data16
mov
pusha
subl
mov
sbb
lret
cmp
cmp
cwtl
scas
jne
fnstenv
ret
mov
insl
mov
stos
dec
lcall
insb
ja
outsb
lcall
cwtl
cmpsb
and
test
mov
repnz
aas
pusha
cltd
inc
dec
sbb
sbb
pop
test
mov
xchg
jge
jp
mov
sbb
cmpsl
pop
sub
pop
jmp
stos
mov
das
hlt
jne
cmp
and
call
xchg
mov
mov
negl
xchg
out
mov
std
mov
mov
nop
push
lahf
call
pop
lods
add
out
test
adc
push
icebp
mov
gs
insb
sahf
mov
fdivl
decl
mov
lock
test
sub
imul
sysenter
sti
out
loopne
add
lds
icebp
loop
cwtl
std
aaa
push
je
jp
pop
add
int3
xchg
sub
pushf
rcrl
push
hlt
pop
jmp
mov
loop
xchg
fdivrs
mov
dec
cs
add
add
imul
addr16
jge
loope
pusha
fxch
push
push
testl
out
fcom
scas
jb
mov
jmp
negb
inc
jbe
cmp
orb
sbb
jb
out
push
and
aam
dec
in
hlt
push
mov
pop
lcall
xchg
sub
xor
cmp
cmp
repz
clc
inc
lock
mov
inc
sub
inc
lret
mov
cmpb
xor
xchg
jbe
lcall
rclb
movl
je
lahf
and
outsb
fnsave
cs
adc
aam
mov
mov
ret
test
std
lods
pop
je
cltd
fiaddl
data16
out
mov
push
push
xchg
cltd
stos
mov
xor
es
dec
jg
mov
dec
cmp
lds
inc
sub
sub
mov
jns
dec
jae
push
mov
mov
pop
sbb
icebp
popa
push
dec
push
mov
inc
in
out
fnsave
add
mov
loop
xchg
ret
scas
fdivrs
adc
or
popa
and
mov
jo
lods
cmp
lea
movsl
jae
add
loopw
movsl
pop
loope
cmpb
out
into
jge
dec
xor
fnstenv
xor
cmp
mov
dec
data16
int3
into
rcll
jno
loop
fimuls
arpl
dec
or
mov
roll
add
inc
dec
out
push
ss
mov
iret
aam
pusha
xchg
dec
inc
jns
mov
jmp
xor
fiadds
leave
lods
adc
push
mov
incl
dec
cltd
mov
dec
push
scas
push
jmp
or
arpl
mov
adc
or
or
test
inc
aam
inc
stos
mov
inc
mov
pop
ret
or
pop
xchg
repnz
jnp
sbb
and
jmp
adc
lods
xor
cmp
xor
jbe
push
jge
sti
push
push
cmp
mov
jb
add
mov
test
cli
mov
jge
in
mov
mov
cld
inc
mov
aam
adc
xchg
push
cs
jmp
popf
cwtl
mov
mov
cmpsl
push
mov
and
cmp
in
fstpt
orb
sbb
xor
pop
lods
int3
inc
lret
fiaddl
outsl
lret
out
cmp
xchg
xor
mov
mov
cwtl
into
std
insb
cmp
jno
arpl
dec
mov
popa
mov
insl
sbb
xor
andl
mov
imul
pop
push
cltd
out
push
add
ja
inc
add
cmc
mov
ja
xor
cmpsl
cmpsl
jno
shlb
jnp
jle
rcll
or
icebp
adc
hlt
lcallw
dec
aas
jmp
aad
add
loopne
jl
mov
inc
rolb
pop
ret
lcall
repz
out
mov
shlb
mov
in
in
fwait
shr
imul
xor
stc
mov
rcll
ja
mov
nop
test
dec
inc
pushf
loope
push
mov
mov
jne
xchg
lea
js
inc
sbb
mov
out
or
out
cltd
cmp
adc
dec
mov
bound
xor
and
pop
add
pop
mov
addl
xor
imulb
das
xchg
xchg
push
inc
ja
es
rcll
or
orb
lcall
hlt
jmp
lods
shll
xor
movsb
xor
push
sbb
jne
int3
cli
aad
jbe
push
mov
lcall
mov
jo
inc
sub
inc
lret
and
sub
mov
push
scas
int
adc
rclb
sub
xchg
lahf
ds
push
pusha
icebp
aad
mov
lods
jmp
push
and
inc
sbb
mov
nop
pop
aaa
stos
xchg
xchg
jg
inc
sbb
sbb
rcrb
aam
jno
push
mov
push
xor
pop
repnz
lret
fnstcw
sub
lock
xchg
mov
push
add
andl
aam
lds
dec
lds
sar
cmp
loope
daa
dec
mov
push
data16
xchg
mov
cmp
imul
test
sbb
sub
adc
sti
jb
inc
sub
mov
jne
pop
lea
sub
pop
or
in
iret
dec
xlat
inc
popf
or
ljmp
jns
push
sti
les
ljmp
addr16
cltd
mov
jae
xchg
fimuls
add
lcall
inc
popa
jge
or
xor
addr16
mov
ss
andb
fs
fimuls
inc
jle
rcll
jb
addb
add
xchg
cmpsl
mov
and
gs
loop
fsubrs
sbb
push
and
rorb
daa
pop
jno
roll
or
or
mov
hlt
and
les
mov
nop
push
push
dec
into
aas
aam
mov
in
xchg
cmpsb
scas
mov
jno
ret
fnstenv
scas
push
pop
pop
int
stos
inc
jl
mov
data16
pusha
out
inc
and
loopne
in
jp
sbb
bound
cmpsb
cmpsl
fcoms
outsl
jge
mov
lahf
mov
xchg
popf
enter
popf
xor
pushf
imul
pop
xchg
and
cmp
mov
jb
sub
sbb
jb
loopne
xor
cmpsb
scas
gs
popf
test
jb
in
xchg
movsl
cmc
mov
inc
aad
cwtl
cmp
push
aaa
aas
test
xchg
ds
testb
mov
dec
jmp
jge
add
and
push
jnp
insl
jnp
jno
cwtl
iret
cmp
lock
xlat
sarb
js
push
push
lret
sti
daa
or
daa
cs
cmp
js
and
and
les
and
mov
sub
sbb
inc
mov
clc
jecxz
es
push
jp
outsl
data16
inc
imul
incb
scas
sbbb
and
int3
loopne
icebp
mov
jno
mov
jl
stos
dec
dec
push
out
mov
add
push
mov
and
sub
or
mov
pushl
xor
in
sbb
in
nop
inc
hlt
or
mov
hlt
pop
fucomi
repnz
or
or
dec
roll
aaa
cmpsl
pop
shrl
jmp
dec
jecxz
adc
mov
loop
xchg
cmp
cmpsl
pop
iret
addr16
sub
mov
jl
push
mov
mov
mov
dec
nop
fxch
pop
sbb
clc
adc
pop
sahf
cwtl
dec
ds
test
xchg
inc
adc
mov
scas
ss
arpl
sub
data16
add
cli
cmc
out
test
lcall
incb
lret
cmpsl
inc
mov
out
dec
push
inc
inc
insb
pop
or
xchg
fimull
pop
adc
test
push
sub
mov
scas
jae
inc
mov
mov
adc
jmp
cmp
aad
jns
lcall
movsb
mov
repnz
add
jnp
gs
fisttpl
sbb
or
xor
int
xor
dec
mov
sub
inc
or
mov
int3
fidivrs
push
out
sbb
int
sub
icebp
addr16
lock
adc
sbb
mov
aaa
add
dec
in
pop
mov
roll
xor
xor
arpl
inc
add
sbbb
test
data16
mov
mov
cmovl
xchg
inc
dec
add
cmpb
inc
jmp
ret
jmp
or
sahf
lock
test
in
push
ljmp
sub
adc
xchg
cs
mov
cmp
push
imul
mov
cli
push
sbb
push
in
xchg
push
push
inc
lods
rorb
rorb
mov
sub
or
test
add
add
xor
insb
das
sub
push
imul
fucom
mov
mov
enter
jecxz
mov
ds
cmpsb
lea
je
mov
jno
cmp
cmp
scas
or
iret
cld
je
pop
enter
push
cmp
and
jmp
xor
push
ss
das
xchg
mov
xchg
jnp
daa
mov
mov
aaa
inc
sbb
repnz
sbb
test
add
xor
dec
or
mov
fcoms
les
add
lods
inc
out
movsl
test
addr16
mov
ret
mov
test
cmp
xor
testb
and
pop
xchg
mov
popa
nop
sbb
xchg
jle
mov
mov
ds
dec
fs
nop
or
ret
fisttpll
sahf
xchg
sub
out
test
das
mov
or
bound
test
or
add
cmp
push
or
dec
add
dec
lret
js
jbe
mov
mov
push
rclb
jo
fldcw
ljmp
jg
shrb
fxch
cmp
imul
pop
jl
push
jmp
cmpsb
es
adc
icebp
pop
outsb
dec
cmpsl
mov
icebp
dec
sub
std
lods
push
mov
popf
xor
mov
push
nop
cmp
outsl
daa
fsubrl
cmpsb
daa
clc
rolb
pop
jnp
xchg
stc
loopne
sbb
cld
ja
add
ds
sahf
jge
pop
mov
shll
dec
out
or
ds
out
pop
or
enter
lahf
mov
pop
inc
pop
repnz
aas
outsb
outsb
enter
mov
jp
xchg
int
stos
fs
push
std
adc
stc
or
cmc
fs
cmpsl
fmull
sbb
pop
in
int
adc
popa
lcall
sub
mov
mov
dec
arpl
and
repnz
xor
cmc
xchg
jmp
add
jg
and
out
xor
push
mull
inc
mov
aas
and
test
insl
xor
inc
aas
mov
fucomi
sti
icebp
pop
lret
dec
inc
lea
and
xor
imul
or
outsb
sub
icebp
mov
movsb
mov
xor
xchg
lcall
push
inc
pop
test
jle
jno
mov
push
mov
xchg
ffreep
sahf
enter
adc
or
ja
adc
adc
cmp
mov
and
in
pop
stos
scas
cmpsl
xchg
push
ljmp
xor
fs
ret
push
push
cld
sbb
jo
in
loop
pop
sbb
outsb
adc
ret
ret
cmp
adc
and
sbb
jg
cmp
cmp
shll
dec
mov
sbb
icebp
cmp
add
cmp
xor
push
fs
test
repnz
pop
shlb
lds
mov
das
jno
jns
imul
push
cmc
inc
data16
and
dec
cmp
pop
lret
mov
rcl
push
hlt
adc
mov
sub
jne
and
dec
test
cs
sub
cltd
test
adc
and
cmpsb
sub
adc
fldln2
in
sbb
add
pop
in
or
scas
es
pusha
fidivl
inc
ret
mov
mov
jb
cmp
movsl
push
call
ds
push
xchg
stos
or
gs
add
pop
pop
dec
mov
dec
lock
shrl
call
cmp
rcll
fstpt
jae
or
test
push
add
and
outsl
adc
lds
repz
cmp
pop
xor
test
hlt
pop
loopne
ror
cmpsb
movb
push
jl
faddl
cwtl
std
adc
push
fsubrl
ret
inc
sub
adc
ret
ss
daa
add
into
cltd
cmp
mov
mov
out
mov
cmc
pop
push
nopl
and
loopne
inc
test
add
and
mov
and
push
ss
mov
inc
insl
adc
shrb
sbb
mov
push
call
mov
out
mov
jg
imul
or
dec
cmpsl
adc
insb
add
mov
sbb
fmull
and
movsl
mov
into
stc
jle
push
dec
adc
in
insl
jae
test
sahf
mov
pop
mov
jg
mov
andl
cltd
jl
aas
test
adc
inc
cmp
clc
test
add
push
jl
and
jl
xchg
xor
cmp
call
jb
enter
addr16
pop
push
rol
idiv
hlt
addr16
mov
sbb
cli
dec
add
scas
dec
imul
inc
or
cmp
inc
int3
stc
jne
inc
lds
hlt
sub
fmulp
lods
or
out
lret
bound
imul
in
xor
mov
ret
inc
mov
fscale
pop
push
sbb
repz
lds
pop
adc
addr16
xchg
mov
sbb
push
sub
cltd
dec
jne
mov
pop
add
jns
in
ds
xchg
or
mov
sbb
push
xor
pop
fwait
xor
das
je
cwtl
insb
dec
mov
mov
adc
insl
inc
outsb
xchg
lods
xchg
enter
sub
bound
xor
sbb
je
mov
divl
sbb
lret
or
jb
fmuls
mov
mov
jb
mov
sub
stc
mov
xchg
sbb
sub
push
shll
mov
mov
xchg
stos
xor
arpl
dec
xor
jp
jmp
aad
cmp
jle
cmp
inc
xorb
cmp
inc
push
ret
fdivl
jne
call
insb
fstpt
pop
or
jno
ret
pop
or
fldt
mov
and
mov
hlt
ljmp
in
int3
movsl
dec
xor
mov
sub
mov
mov
or
cmp
sub
dec
mov
das
gs
cmp
xchg
xlat
or
ret
pop
ret
test
jge
or
inc
xlat
lret
mov
fs
xlat
push
insb
mov
dec
mov
loop
jbe
mov
mov
dec
je
sbb
adc
and
leave
pop
dec
adc
add
cs
push
jecxz
add
sbb
hlt
lods
mov
in
loopne
add
push
mov
test
das
adc
or
jns
push
fdivrl
je
inc
mov
aaa
add
inc
dec
into
cwtl
shlb
sub
xchg
loopne
movsb
movsb
pop
test
arpl
cmc
iret
cmpsl
mov
inc
xchg
mov
das
pop
imul
fcmovnbe
jo
sbb
mov
xor
scas
push
pop
call
sbb
jle
push
push
adc
sbb
rcrb
xchg
add
add
xchg
jb
xchg
and
sbbb
inc
lods
movsb
adc
xor
mov
scas
mov
cld
mov
cmovg
sub
cmc
in
add
jge
xor
dec
pop
xor
dec
rcr
add
mov
adc
lock
daa
sub
lret
stos
and
in
hlt
icebp
add
andl
scas
adc
hlt
fsubp
sbb
pop
int
jp
lahf
pop
fadd
outsl
mov
lea
mov
aas
mov
push
into
dec
lods
mov
adc
and
inc
adcb
jbe
mov
shl
cmp
xchg
jecxz
and
mov
xchg
cli
sub
xchg
mov
xchg
add
movsb
sub
jae
es
leave
iret
or
loop
addr16
cmp
rcl
scas
aad
rcll
les
mov
pop
push
fs
into
add
dec
popa
stos
out
out
scas
test
aad
or
imul
repnz
or
inc
xor
mov
jg
imul
xchg
cmp
and
nop
adc
xchg
movsl
stos
adc
pop
fisttps
sahf
flds
dec
aam
mov
dec
mov
dec
inc
lea
mov
add
sub
sahf
mov
fcmovbe
jnp
lock
pop
inc
fs
cmp
pop
fdivr
inc
jo
sbb
push
and
and
mov
inc
mov
mov
call
or
inc
rcrl
fbld
addl
in
jle
outsb
pop
push
cmp
out
pop
aam
pop
dec
jl
shrl
inc
fstl
push
mov
out
loopne
loope
cld
cmp
pop
into
les
add
sbb
sbb
mov
sbb
and
push
cmp
mov
pop
dec
and
mov
orb
fidivrs
xor
pop
icebp
xchg
or
ljmp
aad
and
push
js
movsb
pushf
lock
fisttps
xor
cmp
pop
or
out
pop
movsl
or
aad
scas
lcall
sub
adc
ja
xchg
outsl
dec
xor
jmp
and
out
mov
cmpsl
addr16
add
sub
sbb
test
fxch
jecxz
sbb
push
fucompp
xchg
gs
and
or
call
int
stos
push
xchg
push
lods
or
xchg
mov
scas
xor
pop
mov
loop
sarb
mov
pop
out
cmp
cmp
mov
stos
cs
popl
shll
icebp
int
icebp
mov
add
pop
in
stos
jp
sahf
cmp
imul
add
leave
mov
pop
mov
orl
and
pop
jmp
mov
clc
int3
mov
push
dec
xchg
push
mov
sub
pop
mov
and
scas
xor
sbb
xchg
inc
mov
gs
hlt
outsl
aad
cmpsl
fcoml
mov
fldcw
xchg
je
cmp
pop
mov
and
ljmp
enter
xor
mov
cmpsb
and
inc
mov
mov
cmp
lret
int
adc
mov
cmp
push
pop
adc
mov
sbb
sub
lret
and
int3
add
xlat
sbb
add
inc
dec
mov
push
loop
dec
rcrb
sahf
xchg
movl
push
imul
pop
add
sub
std
mov
xor
sub
dec
fcomip
rolb
cmp
cli
repnz
xor
inc
lods
adc
mov
lret
xchg
add
mov
cltd
movsb
pushf
pop
fs
push
dec
dec
sub
sbb
loopne
ljmp
lahf
cmp
inc
xchg
or
inc
mov
mov
jbe
pop
pop
inc
adc
add
stos
popf
and
sub
in
loopne
xchg
and
add
cmp
sub
jnp
daa
jg,pn
sbb
cmp
stos
mov
cli
lods
repz
push
int3
das
lcall
inc
sbb
stos
xchg
aas
and
adc
xchg
and
test
mov
ja
mov
sub
idivl
adc
out
fimull
jb
pusha
clc
bound
iret
push
jne
push
sti
iret
push
cs
adc
aaa
imul
xlat
lret
xchg
fisubs
xor
rorl
lret
inc
imul
mov
fildl
and
faddl
and
cmovbe
gs
test
sub
or
out
cmp
mov
pop
or
sarl
inc
aaa
or
cmc
mov
jecxz
adc
xor
dec
lods
fisttps
push
push
data16
push
fisubrl
shrb
into
cwtl
lods
rep
sbb
fmull
les
lds
sub
and
jne
mov
push
js
call
push
lahf
mov
popfw
stos
stc
movsl
dec
adc
movsb
pop
incl
jae
pop
and
cmp
jge
sbb
dec
push
mov
push
xor
insb
call
mov
in
mov
jno
sti
pusha
jb
test
sar
mov
xor
test
inc
popf
push
iret
mov
lds
xchg
cmc
add
adc
lahf
inc
fwait
xor
jae
lahf
mov
pop
or
sahf
cmpl
sbb
ds
inc
cs
shl
pop
jbe
jbe
fcom
loope
mov
adc
iret
pop
and
mov
outsb
fimull
mov
dec
nop
xchg
aad
pop
sbb
sub
outsl
sar
xor
sar
sbb
mov
inc
jge
mov
rcl
inc
jmp
stc
stc
adc
push
add
orb
and
mov
sti
xchg
clc
sub
mov
ret
out
insb
stos
sub
daa
mov
out
adc
negb
push
shrb
popa
inc
and
push
sub
pop
push
pop
sbb
jg
ret
mov
or
sbb
sub
pop
push
adc
out
dec
push
sub
dec
cmpsb
mov
ja
xlat
ror
jge
cld
xor
xchg
rcl
jle
imul
shlb
xchg
pop
dec
sbb
leave
sub
cmpsl
mov
dec
rcr
mov
jmp
inc
test
fucomip
jmp
cmp
sub
std
outsl
aad
cmp
cmp
push
arpl
imul
jmp
adc
ss
jno
mov
sub
cli
sbb
xlat
add
pusha
cmpsl
sbb
mov
jp
mov
popf
test
arpl
cmp
pop
jb
and
aad
lret
fs
mov
cmova
dec
push
pushf
or
mov
and
mov
adc
cli
xor
test
in
imul
test
popf
add
adc
cmp
jp
leave
ret
pop
call
insb
les
and
dec
cmp
dec
mov
hlt
cmpsl
cltd
dec
mov
xor
or
sar
mov
pop
adcb
punpckhbw
aam
jae
sub
ds
push
pop
fwait
adc
int
gs
ja
mov
xor
mov
or
sub
xchg
test
inc
push
cs
fildll
aad
or
je
mov
mov
subl
cmp
jl
aam
jbe
cli
inc
aam
cmpb
or
inc
jae
je
je
inc
clc
push
cli
je
pop
lds
cmp
and
sub
lock
adc
pop
jo
stos
movsb
or
jp
cwtl
mov
or
push
shrl
xchg
pop
jnp
mull
add
fwait
lret
inc
pop
cltd
fnstenv
pop
nop
out
pop
les
sub
stos
lret
ja
pop
add
adc
mov
or
push
xchg
xchg
push
out
lods
xchg
xchg
jnp
and
dec
add
pop
imul
jns
shl
dec
dec
hlt
dec
push
or
ds
fs
sbb
jp
jne
sub
leave
movsl
mov
push
daa
sub
je
dec
adc
xchg
popa
out
jne
mov
outsl
in
outsb
out
xor
in
dec
sub
icebp
fwait
bound
xor
shrl
mov
push
pop
sub
dec
addr16
xchg
dec
in
cmp
sub
dec
mov
jmp
mov
sbb
mov
out
dec
clc
mov
mov
clc
pop
aaa
adc
call
push
pop
mov
mov
dec
mov
popa
sub
add
mov
jnp
into
cld
repz
mov
fildll
sahf
xlat
sahf
jecxz
cltd
cmp
std
daa
sbb
xchg
xchg
mov
jmp
push
xchg
adc
cmp
mov
pop
enter
mov
hlt
clc
pop
pop
lods
mov
push
push
lea
fisubrl
sub
jae
dec
movsl
dec
inc
jge
out
jp
xor
xchg
inc
sti
cmp
inc
mov
mov
cmp
aas
xchg
add
jae
jecxz
sti
inc
jns
shll
inc
bound
xlat
ret
dec
outsl
mov
mov
and
mov
pop
dec
mov
inc
lcall
jecxz
mov
lahf
stos
push
outsl
sub
enter
inc
or
mov
push
pop
loop
sub
push
jbe
jno
and
jbe
cmp
imul
cmpsb
mov
push
dec
lret
adc
cmpsl
iret
fsubrs
mov
fwait
lcall
dec
cmp
xlat
mov
outsl
inc
jo
and
das
aaa
roll
cli
sub
inc
js
or
stos
fstpt
lcall
push
dec
mov
jle
rol
int
and
jns
and
jbe
enter
mov
mov
cmp
daa
psubusw
lock
movsl
hlt
loope
push
mov
xchg
mov
loopne
jb
xchg
aam
adc
dec
es
push
orb
test
xchg
decl
addr16
cld
and
push
cld
sub
jmp
jo
or
movsb
add
dec
push
out
ja
push
add
call
and
or
push
mov
daa
std
add
xor
int
and
cmp
mov
mov
or
insl
aaa
sbb
jo
sub
xor
push
fninit
rcrb
sbb
aas
imul
and
ror
fildl
iret
mov
sub
push
mov
jns
loop
pop
dec
push
sbb
es
cmp
addr16
push
sub
imul
addr16
test
jb
push
clc
in
mov
pmaddwd
xor
sbb
gs
sub
mov
test
in
sbb
mov
cmc
add
lret
push
add
and
dec
mov
sbb
mov
bound
aaa
ficoms
imul
xorl
out
pop
dec
into
mov
mov
cld
mov
push
and
cmc
dec
jae
dec
arpl
pop
loopne
nop
dec
jae
xchg
pop
sbbb
jl
add
ja,pn
fs
pop
add
push
pop
arpl
jecxz
mov
nop
mov
mov
pop
adc
imul
test
lahf
roll
push
dec
in
or
cmpsl
sbbl
dec
and
push
hlt
xchg
or
shll
mov
push
dec
lret
fisttps
arpl
nop
push
xchg
lea
cmp
test
into
aas
scas
mov
or
fs
add
sbb
fwait
lea
mov
cs
cmp
fisubrl
imul
ret
es
in
aas
mov
jmp
test
into
in
xchg
loope
clc
jno
mov
lods
aad
mov
out
lea
in
icebp
sub
pushf
out
gs
jecxz
dec
lret
and
pop
mov
mov
xor
add
pop
push
adc
rolb
mov
fidivrl
lea
clc
outsb
pop
cmc
xchg
push
loope
xor
scas
jl
rclb
sbb
lea
sub
ja
jg
mov
aad
pop
mov
mov
loope
sub
fdivr
adc
push
xorb
cmc
adc
add
ja
or
push
into
add
dec
mov
jno
xor
test
neg
jle
or
push
loopne
in
aaa
js
cmp
pop
ss
mov
fistpl
aaa
mov
adc
mov
lea
imul
je
dec
inc
shr
inc
jo
xchg
inc
add
push
pop
pop
push
jb
scas
outsl
mov
jmp
cmp
xchg
xor
push
js
and
lcall
dec
pop
pop
lcall
xor
inc
test
leave
lret
push
xchg
jmp
mov
out
add
fstl
aaa
inc
outsl
or
mov
sbb
xor
sub
int
aam
fadds
emms
jge
cld
lods
sbb
shrl
scas
clc
adc
mov
rcl
push
mov
les
shld
or
jmp
out
push
jg
rcrl
sub
out
movsb
scas
mov
pop
je
push
fdiv
jle
push
inc
lods
sub
fs
cmp
pop
mov
cwtl
shl
stos
or
mov
jmp
int3
xchg
leave
popa
sub
roll
stc
lret
xor
xchg
dec
fidivs
mov
sub
sbbl
das
lods
insb
push
jecxz
mov
roll
jge
movsl
in
leave
imul
movsb
cmp
stos
jb
add
dec
cmpsl
mov
push
stos
lret
fsubrl
and
mov
repz
mov
fninit
and
or
loop
mov
sbb
xchg
jns
mov
pop
aam
and
lock
xor
mov
addl
fcomps
cmp
jecxz
jp
aad
and
cwtl
push
sbb
in
adc
lods
jp
or
pop
sahf
sub
push
loop
xor
nop
nop
push
dec
sub
cmp
push
loope
gs
shrb
arpl
lods
leave
cli
js
xor
ret
shlb
cmpsl
mov
fisubrl
inc
lahf
adc
sub
stos
loopne
out
pop
shll
adc
call
jo
shll
mov
inc
xor
lods
or
ss
les
aam
adc
push
pop
sub
cmpl
mov
lods
sub
sub
adc
dec
daa
mov
mov
shlb
inc
jecxz
sbb
call
pop
inc
mov
and
and
cs
shlb
fsubp
xchg
xacquire
pop
or
add
mov
loope
jbe
add
adcb
mov
inc
leave
orl
push
and
or
xchg
gs
xor
inc
insb
loopne
insb
lret
ret
push
cmp
cmpsl
cmp
cmp
mov
fcmovbe
pop
inc
jae
jecxz
pop
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
pusha
movl
pop
jp
movsb
adc
inc
push
jge
mov
adc
xchg
pop
mov
and
orl
and
xchg
in
mov
jb
mov
sbb
lret
jge
orb
xor
xor
int
mov
jecxz
inc
cmp
inc
jo
xor
and
or
cmpsb
test
shlb
mov
xor
or
xchg
cld
push
and
cmc
xchg
cld
lock
scas
inc
leave
xchg
call
xor
dec
shr
push
test
lahf
sbb
lock
pop
stc
jmp
ja
sub
mov
dec
dec
dec
mov
bnd
add
adc
scas
roll
push
pushf
or
mov
aad
incl
mov
xor
xchg
dec
loope
arpl
stos
sbb
xchg
sub
or
ds
and
scas
mov
movsl
in
mov
dec
mov
dec
mov
imul
dec
loope
jmp
ret
xor
xor
pop
jae
dec
push
unpckhps
imul
sbb
cmp
scas
push
xchg
popa
scas
xchg
inc
xchg
sub
sub
movsb
mov
mov
xor
sub
mov
loope
daa
pop
pop
out
imul
hlt
and
mov
jmp
imul
add
cwtl
adc
ds
imul
sbb
add
jno
lods
outsl
rorb
aaa
stos
fbld
fcmovnu
dec
jl
aam
cwtl
jae
push
add
sub
sbb
roll
enter
pop
sbb
addr16
add
cmpsl
repnz
dec
mov
push
adc
push
pop
aam
jmp
lea
mov
mov
icebp
mov
jg
mov
xchg
pop
lret
pop
xor
xor
xor
push
jecxz
jb
mulb
jno
pop
out
sub
lea
hlt
scas
in
mov
or
repz
sub
shlb
cwtl
repnz
leave
repnz
pop
dec
pusha
or
lret
sbb
outsl
pusha
or
arpl
inc
lea
icebp
mov
aam
mov
pop
sti
into
mov
negl
mov
add
loope
sub
aam
push
push
loopne
cmp
test
mov
repz
stos
sub
jle
popf
jno
jno
std
jge
bound
je
fwait
xchg
movsb
pop
mov
pop
push
pop
aaa
fcmovnbe
enter
jb
ljmp
and
mov
rorb
pop
cmp
repnz
ss
push
cmc
push
lock
shlb
lea
xchg
loopne
test
cmp
in
hlt
sbb
dec
dec
into
repz
jne
dec
iret
xor
cmp
sub
cs
jge
stos
out
outsl
push
testb
es
adc
add
inc
mov
pop
pop
jmp
add
and
mov
pusha
rorl
into
push
mov
sub
repnz
fstpl
xchg
push
test
rcll
scas
inc
sbb
cmovg
in
lret
mov
xor
lock
pop
inc
lahf
mov
stos
and
adc
fs
sbb
push
jae
pushf
sub
loope
cwtl
mov
mov
and
rorl
sub
add
xor
mov
jo
into
mov
mov
jne
mov
ficoml
mov
ja
test
testb
not
pop
dec
and
popa
int
clc
inc
fmulp
sub
mov
mulb
outsl
popa
mov
repnz
and
cmp
pop
int3
mov
push
sub
mov
fsubr
arpl
pop
movsl
test
jo
cld
daa
mov
push
fcomps
aad
dec
adc
lods
mov
or
xchg
dec
sub
divb
mov
inc
mov
cmp
xor
dec
add
cltd
mov
sahf
pop
loope
pop
sbbl
mov
scas
mov
pop
sub
subl
mov
loope
jbe
sbb
movb
sub
inc
es
out
or
call
or
cmp
push
jge
mov
hlt
xchg
xchg
aaa
mov
arpl
jne
repnz
test
push
clc
aam
xchg
cli
call
sub
std
lahf
or
orl
xchg
pop
stos
jle
dec
iret
outsb
xlat
in
xchg
jns
and
inc
shll
cmp
imul
xchg
in
jmp
xchg
xor
imul
dec
mov
mov
insl
jmp
dec
mov
sbb
scas
data16
xchg
jecxz
xor
into
and
push
or
push
ljmp
aad
mov
push
gs
ds
inc
jp
repz
jp
int
sub
adc
mov
push
jae
outsl
iret
jmp
repz
ret
pop
pop
pop
jle
mov
fbstp
and
sbbl
bound
cs
jae
jmp
jmp
mov
lcall
jae
xchg
test
cli
jb
sbb
pop
lods
fbstp
movups
and
loop
or
mov
aaa
sti
or
int3
lret
movsl
shlb
xor
or
sbb
ja
leave
dec
aad
lea
mov
lds
arpl
pop
daa
push
rcrl
call
cmpsl
pop
cmp
pop
test
mov
xchg
xchg
test
notl
lret
inc
cmp
shlb
out
adc
and
aaa
mov
bound
adc
pop
lahf
mov
xor
fcoms
das
xchg
jmp
fnstcw
dec
cmpsb
pop
mov
stos
gs
xchg
add
fistpll
cmp
mov
mov
push
add
mov
or
jl
and
sub
pushf
enter
ret
push
outsb
cs
mov
jmp
mov
fisubs
xchg
pop
inc
inc
iret
inc
aas
or
dec
dec
adc
pop
adc
call
cmp
jge
mov
mov
in
fstps
in
int
rcll
mov
add
pushf
fldt
and
out
push
mov
xchg
xchg
pop
in
xorl
sub
jns
sbb
test
lcall
lods
and
sbb
jnp
mov
adc
mov
sub
jo
adc
or
enter
mov
rcr
ret
mov
sub
dec
arpl
xchg
stos
dec
xchg
push
mov
andl
aam
mov
cmpsb
sbb
xchg
je
or
aaa
adc
jle
mov
cmovns
cmp
fsts
add
push
leave
enter
push
push
lock
mov
mov
push
lahf
cmp
mov
cltd
divb
pop
push
cmpsl
pop
mull
int3
fwait
outsl
and
mov
loop
je
cmpsb
fadds
xor
jle
fwait
push
jne
movsb
push
sarl
pcmpeqd
testb
mov
and
les
in
push
sub
dec
push
fisubrl
movsb
and
mov
int3
bound
mov
sub
lea
das
ret
add
sarb
int
adc
daa
mov
outsl
mov
aas
mov
lahf
stos
mov
add
pop
ljmp
hlt
pop
or
mov
cmpsl
or
repnz
mull
add
je
push
mov
jnp
and
data16
mov
push
mov
ds
fcomps
lcall
in
repnz
cs
fnstsw
push
mov
rol
fisubrs
jae
xchg
fs
xchg
les
fiaddl
pop
or
mov
imul
add
mov
icebp
pop
sub
fdivrs
dec
xor
daa
add
xchg
xchg
xor
dec
sbb
or
mov
inc
inc
push
push
or
xchg
inc
or
stos
adcb
ret
lret
mov
push
pop
scas
iret
clc
xchg
add
jae
sub
lea
jbe
jle
popa
or
pop
mov
mov
jns
js
ss
loopne
roll
ret
sbb
into
push
inc
inc
cmp
iret
jecxz
mov
iret
cmpsl
sbb
lods
mov
xor
mov
inc
xchg
in
mov
leave
aaa
subl
and
sub
test
testl
jo
cmpsb
add
sarb
add
enter
adc
push
sbb
lea
xor
adc
cmp
insl
jo
inc
dec
addb
enter
mov
sahf
mov
xor
sti
mov
cmpsb
or
mov
cmp
xchg
xchg
es
inc
iret
outsb
orl
cmpsb
mov
and
jne
push
rcll
sbb
in
push
cmc
inc
mov
sbb
sub
jmp
es
lret
mov
inc
ret
std
sub
popf
xor
push
into
xlat
mov
iret
int3
mov
imul
jnp
call
mov
xchg
repz
int3
dec
mov
fnop
or
fildl
and
or
add
or
or
and
mov
adc
mov
mov
push
push
repnz
rcll
movsb
pop
pop
inc
cltd
out
mov
and
aad
jo
movsb
arpl
xor
xlat
or
push
loop
dec
mov
daa
out
add
pushf
jg
xlat
add
mov
or
jae
js
mov
add
xlat
inc
adc
xchg
push
subb
cli
jmp
cmp
into
pop
mov
adc
int3
je
push
mov
ds
xor
fidivrs
add
dec
lret
cmc
hlt
or
push
sub
mov
mov
sub
mov
scas
add
ja
jl
adc
jb
leave
pop
xor
cmp
cmp
js
cmp
sbb
inc
imul
fiadds
xchg
jbe
fmulp
mov
mov
test
jo
dec
xchg
aam
mov
xchg
pop
lcall
pop
lret
mov
mov
push
mov
xor
les
cmp
pop
hlt
ficoml
out
xchg
imul
sub
inc
test
in
push
inc
push
mov
push
push
movsb
in
adc
in
or
jle
popa
scas
cmp
dec
aad
mov
pmulhuw
cmpsl
xchg
cli
sub
xchg
lret
xchg
jb
xor
xchg
lea
xchg
movsb
mov
adc
pop
jmp
inc
fidivrs
pop
cmpsb
shlb
mov
pusha
lods
sarl
adc
orb
fisubs
aas
jg
movsl
sub
mov
insb
movsb
push
mov
popa
mov
pop
mov
pop
jp
mov
cmp
test
mov
cmp
push
mov
xchg
xlat
inc
lock
fstpl
daa
sub
nop
mov
pop
xor
mov
mov
into
mov
sbb
dec
je
jp
scas
rcrb
pop
fcmovbe
aas
stos
push
or
and
repz
push
lret
mov
cmpsl
push
sub
ss
aaa
xchg
lds
push
mov
pop
add
mov
sub
popa
xchg
push
push
pop
jmp
dec
in
jnp
cs
ljmp
inc
xor
mov
icebp
mov
pop
xor
pop
xor
lea
stc
test
movsl
es
mov
inc
adc
test
mov
clc
cmc
and
mov
and
mov
rorb
pop
cmp
pop
loope
loopne
add
xchg
or
push
jl
add
lods
and
mov
dec
lods
leave
jmp
adc
jne
out
adc
shrl
cmp
lahf
sti
jge
pop
dec
dec
push
fwait
shl
lahf
xor
shll
mov
js
inc
sub
fstl
jae
jnp
loopne
add
xchg
mov
cld
lcall
sub
je
mov
xchg
ret
xchg
pop
pop
xchg
push
ljmp
jnp
add
fdivl
or
pop
sti
loope
jns
jge
vcvttsd2si
dec
test
mov
cmc
pusha
test
sub
pop
jo
adc
xchg
mov
es
or
inc
roll
xor
lds
and
sub
shrb
outsl
std
jns
cmpsl
lret
popa
mov
and
pop
cmp
cld
int
lret
inc
das
mov
int
push
lret
ret
ss
subb
popf
movsl
cmpsl
aaa
scas
jne
outsl
jae
mov
ret
imul
sahf
ret
clc
lods
inc
xor
xor
push
pop
inc
xchg
movsl
jne
inc
add
xchg
push
add
xchg
sbb
fmul
daa
out
cmc
mov
inc
jno
roll
mov
jecxz
hlt
mov
sub
inc
data16
xor
fs
pop
sahf
int
int3
das
pop
inc
inc
int
jmp
sub
lods
das
jbe
leave
adc
loopne
movsl
int
mov
push
fs
or
or
loope,pt
mov
sbb
push
repz
mov
adc
sub
adc
xchg
xchg
xor
mov
jne
xor
pop
sbb
mov
adc
sub
lahf
icebp
or
cs
nop
loope
lds
and
adc
loope
inc
into
call
or
inc
pop
xchg
sbb
fmull
lods
popa
loop
mov
loop
rclb
dec
into
insl
pushf
mov
jbe
mov
xlat
movsl
ljmp
jmp
popf
push
test
push
inc
xchg
int
push
dec
mov
cmp
mov
scas
jno
scas
sbb
cmp
xchg
adc
jge
stos
mov
xor
add
cli
inc
sub
in
pop
ret
int
push
mov
adc
pushf
in
ljmp
int3
ljmp
lock
jp
ret
test
jecxz
cld
je
jae
clc
std
adcb
loope
dec
pop
dec
ds
mov
xchg
repz
push
cmp
outsl
iret
scas
push
dec
popa
inc
out
jb
call
scas
in
popf
or
into
mov
dec
inc
repnz
test
loop
lods
out
arpl
xbegin
addr16
cmp
test
movsb
std
mov
push
cs
push
das
bound
jl
dec
testl
inc
cld
call
cmp
mov
or
aaa
jl
fs
or
mov
jmp
pop
pop
fcompl
dec
pop
cmpsb
jbe
dec
inc
sbbl
mov
sub
xlat
add
xchg
jg
mov
xlat
arpl
leave
stc
jbe
mov
and
and
sub
fadd
std
out
loop
mov
xchg
enter
jmp
dec
cmpsb
into
mov
inc
xchg
xchg
pop
repz
scas
mov
jo
push
divl
and
push
test
test
loopne
lea
in
or
pop
stos
dec
adc
call
xor
jecxz
pop
sub
cmp
cs
push
xchg
sbb
mov
test
inc
mov
test
inc
xchg
in
cmp
xchg
push
dec
push
cmp
test
lods
sarl
jae
pop
push
in
stc
sub
push
enter
cmp
xchg
add
scas
rol
sbb
mov
push
fisttpl
push
cwtl
popa
lea
pop
in
stos
enter
bound
pinsrw
mov
das
or
cmp
sbb
xchg
ljmp
dec
or
pop
movb
xchg
in
or
jmpw
or
cmp
call
cld
sub
sub
xchg
test
jns
shl
mov
fidivl
cltd
inc
mov
fdivs
pop
ret
mov
movsl
inc
push
addl
rolb
ds
sub
inc
dec
mov
stos
cmp
pop
jle
lea
cmp
cmpsb
loope
outsl
xor
mov
cltd
lret
xchg
and
popf
push
cmp
cmpl
aad
cltd
mov
sbb
jbe
std
xor
push
adc
negl
xor
je
imul
in
fisubs
bound
xchg
mov
sub
les
sti
add
jo
add
push
fdiv
xchg
pop
sbb
inc
dec
push
enter
xor
add
ret
mov
jl
hlt
mov
cmp
ss
lret
inc
shll
and
and
outsb
cmovp
jge
loopne
jbe
add
cmp
lock
and
sub
sbb
leave
sub
mov
loope
inc
mov
rcrl
pushf
into
jecxz
add
mov
negl
ljmp
inc
mov
out
sbb
lahf
jns
lds
mov
fldl
subl
mov
fimuls
mov
pushf
jae,pt
cli
and
pushf
xlat
mov
ljmp
ljmp
hlt
push
xchg
jge
mov
aas
iret
sub
js
loopne
add
xchg
push
jl
adc
pop
fucomp
jecxz
push
popa
add
rclb
push
clc
lods
sbb
jmp
call
push
xchg
lods
pop
das
stc
push
std
mov
fdivr
push
andb
or
sub
xor
cmpsl
gs
sub
aas
or
sbb
inc
xorl
jge
xchg
jae
imul
jo
add
cli
mov
loopne
jnp
push
dec
xchg
hlt
dec
push
push
xlat
mov
mov
and
xchg
enter
fsubs
jno
or
mov
add
pop
mov
and
jmp
mov
out
adc
lahf
clc
pop
cmp
adc
inc
sbb
cmp
pop
pop
adcb
add
sahf
xor
mov
cmpsb
push
sbb
mov
inc
sbb
outsb
jnp
mov
inc
mov
inc
push
int
psadbw
decb
into
addr16
sar
mov
rorb
loope
xor
dec
mov
lcall
adc
inc
sbb
sub
xchg
ss
pop
or
xchg
pop
std
cmp
popa
jb
push
pop
push
adc
xor
push
xor
and
repz
cmpsb
vrcpps
movsl
icebp
cmp
mov
xchg
shrl
jmp
into
adc
and
jg
push
push
insl
xlat
inc
cmp
mul
cmp
and
inc
pop
pop
mov
leave
pusha
dec
das
fsts
daa
and
loop
mov
dec
or
cmp
sti
hlt
dec
call
and
inc
lock
adc
stos
rorl
or
dec
insb
out
sti
pusha
ret
xchg
push
push
imul
loope
xor
inc
je
adc
ret
fs
dec
adc
add
mov
dec
push
jg
sub
and
jg
int
dec
xchg
sub
xchg
mull
into
add
lahf
fdivrp
cld
mov
push
ret
sub
push
mov
xchg
push
stos
lahf
xor
or
and
push
fninit
mov
decl
fs
nop
xchg
repz
test
pop
loopne
int
jge
les
lods
cmp
jle
ss
mov
int
pop
scas
scas
cmp
loope
fs
and
xor
rcl
lock
in
pop
les
inc
insb
rcr
or
mov
sbb
pop
lea
xchg
rorl
pop
test
cltd
or
call
aam
inc
fsubr
xchg
mov
in
gs
push
jg
js
push
xor
outsb
das
out
jns
fchs
arpl
pop
shr
bound
inc
or
fisubs
adc
mov
jbe
adc
and
mov
xchg
sub
fwait
bound
or
inc
roll
subl
push
into
outsl
cwtl
add
ffreep
jecxz
std
push
in
push
enter
inc
lcall
mov
cmp
xchg
rol
lret
jmp
lea
or
cmpsl
ror
inc
sbb
xchg
dec
jmp
and
sub
jl
inc
pop
dec
lret
fwait
sub
out
aaa
xlat
mov
push
cld
or
mov
mov
add
arpl
or
fadd
cmpsb
incb
scas
insl
cli
andb
dec
push
icebp
outsb
dec
es
loopne
jae
add
jg
sbb
jb
scas
mov
mov
gs
adc
test
fwait
lods
push
div
jg
jnp
dec
flds
roll
sbbl
hlt
xlat
mov
push
push
rol
add
repz
mov
in
or
adcl
push
hlt
xlat
mov
xchg
pop
pop
sub
shlb
les
aaa
xchg
imul
lea
imul
xor
jbe
das
push
cld
sbbb
shlb
jb
inc
fisubl
and
dec
xorb
dec
pop
imul
fs
mov
sbb
jns
inc
rcll
or
and
lahf
xchg
movsl
sub
and
clc
lea
aad
fisttpll
cmp
adc
fsubr
and
mov
arpl
cmp
cmpsl
movsb
pusha
call
andb
out
dec
fprem1
xchg
mov
cwtl
dec
mov
add
mov
sbb
enter
dec
and
jmp
ret
inc
xchg
sub
adc
and
stos
notl
dec
movsl
jmp
mov
and
push
shll
nop
push
fbld
jg
jmp
out
add
pop
hlt
adc
xchg
xchg
aas
stc
sub
cmp
addb
mov
sbb
inc
jmp
mov
in
ret
mov
mov
arpl
in
rcrl
inc
xor
insl
addr16
mov
in
arpl
cmp
xchg
loope
push
add
lea
and
out
shlb
divb
adc
loope
outsb
fildl
push
pop
mov
xorl
mov
rol
sahf
jle
mov
add
call
shr
push
dec
fs
sub
in
cltd
inc
cmp
add
das
lods
adc
sti
movsb
mov
sub
inc
xchg
add
push
arpl
andb
xor
lock
shrb
mov
push
cmp
testl
mov
xchg
sbb
mov
jmp
js
xor
popa
cmp
adc
lret
cmp
ds
loopne
js
cmp
daa
test
call
or
pusha
int
dec
cmp
mov
pusha
insb
cwtl
lret
add
dec
pop
sub
int
cmp
and
daa
push
es
mov
rep
xor
or
jg
push
jp
xchg
pop
inc
or
mov
cmp
int3
xchg
push
adc
dec
lds
push
sbb
rcl
std
push
xor
dec
fnstsw
in
inc
xor
inc
mov
and
push
outsl
xchg
xlat
ffreep
aam
addb
add
daa
decl
jecxz
imul
sahf
lock
jb
pop
cmp
aad
das
mov
jb
hlt
xchg
pop
into
ret
ljmp
cmp
in
jnp
lcall
mov
mov
pop
or
mov
xchg
add
cmp
or
stc
call
loopne
push
push
loope
ret
jp
dec
out
and
jne
mov
sub
inc
cli
lret
addr16
sub
fisubrl
ficompl
fbstp
iret
in
mov
xor
test
xchg
lds
adc
sti
or
mov
mov
mov
jo
loop
scas
iret
inc
and
cmp
mov
stc
pushf
das
mov
pop
fistl
jmp
fdivrl
loop
enter
mov
push
or
sbb
js
addl
xor
xchg
mov
inc
test
xor
ja
sbb
insl
push
xchg
test
cmp
fwait
test
sbb
test
jmp
mov
jmp
mov
sbb
xchg
dec
lods
dec
sub
jbe
xor
sbb
ljmp
test
popa
dec
pop
add
fstpl
imul
cmp
and
jg
lods
mov
imul
test
add
jge
pop
xchg
testl
sbb
lret
cmpsl
mov
out
loop
int
cmp
inc
sbb
xchg
adc
and
mov
in
fsubrl
mov
mov
add
mov
mov
jno
mov
test
mov
les
inc
jl
adc
jg
arpl
or
add
cmp
cmp
mov
or
clc
cmp
xchg
mov
xchg
inc
es
btc
adc
xchg
mov
je
push
cmpb
xor
lods
xchg
fisubs
or
shrb
and
sub
pusha
iret
mov
xor
dec
add
rorb
popf
pop
jno
mov
sti
xchg
mov
iret
aas
mov
cwtl
cmp
xchg
das
rorl
xchg
mov
aad
dec
dec
imul
sbb
xchg
pop
xor
insb
in
xchg
pop
arpl
movsb
fnstcw
mov
imul
addr16
lock
pop
sub
and
or
iret
fldl2e
inc
popf
sbb
gs
cmp
js
xchg
out
into
repz
dec
repnz
push
in
addl
lahf
xchg
sahf
xchg
jae
and
pop
aad
addl
dec
dec
test
out
into
mov
mov
ret
pop
js
in
jne
xor
test
aaa
cli
sbb
sti
sub
call
cwtl
in
fldenv
dec
lds
outsb
lahf
pusha
mov
mov
mov
adc
push
push
mov
and
hlt
xchg
lods
mov
mov
cmp
sbb
pushf
imul
js
pop
pushf
shll
or
push
jle
adc
sub
clc
lea
mov
adc
hlt
xchg
imul
mov
pop
xchg
mov
mov
shll
lret
ret
cmp
inc
repnz
adc
clc
sub
lods
pusha
cmpsb
insl
push
push
push
mov
add
rcl
inc
ret
mov
push
push
lds
leave
int3
mov
addr16
adc
fwait
loop
dec
cmpsl
xorl
sub
pop
xlat
std
test
lahf
sub
add
sysret
mov
pop
daa
adc
push
ffreep
punpckhwd
lock
mov
add
leave
popa
rorl
push
cmpsl
pop
jmp
xchg
ja
mov
rorb
fs
int
cmpsl
icebp
test
mov
mov
push
je
imul
xchg
dec
cwtl
push
add
jmp
pop
xor
jae
push
loope
fidivs
mov
xchg
and
daa
ret
xor
sbb
ret
jae
leave
inc
lods
stos
pop
sub
loop
or
push
mov
cmp
int3
and
sub
in
mov
and
fisubrs
scas
mov
xchg
or
stos
cmp
and
or
stos
mov
cltd
ds
and
and
fwait
xor
imul
adc
rcll
ljmp
nop
test
adc
xchg
mov
adc
lods
ret
xor
push
or
pop
les
adc
mov
ret
or
pop
lods
mov
mov
enter
cmp
ds
loop
sti
xor
cmp
sub
pop
cmp
roll
addr16
add
jge
jns
sbb
js,pt
mov
inc
hlt
inc
insb
stos
pop
fstl
stos
imul
mov
inc
mov
inc
ret
in
sub
sub
data16
in
out
in
sub
cs
out
mov
repnz
jb
dec
jb
lcall
dec
in
mov
sub
in
xor
sub
push
stos
imul
xchg
sub
mov
gs
repnz
xchg
and
dec
ds
subb
hlt
daa
ficoml
or
mov
mov
jge
cs
jno
xchg
adc
adc
push
pop
mov
js
jmp
xchg
mov
push
and
sub
or
ret
jno
ret
movsb
pop
negb
pusha
pop
inc
negb
mov
jecxz
add
cmc
loop
push
adc
fildll
mov
jne
arpl
mov
jl
sbb
jo
fisubl
icebp
pop
cmpsb
vpaddw
test
adc
je
movsb
jbe
mov
push
dec
xchg
insl
addl
mov
mov
jbe
push
ret
int
rorb
lods
dec
fstl
mov
test
mov
jl
in
in
jg
ret
out
and
movsl
fldt
xlat
jecxz
loopne
jmp
mov
or
mov
pop
test
fs
repz
jp
add
daa
cmc
addr16
cmp
enter
mov
inc
xchg
rolb
mov
push
inc
pop
sbb
ljmp
mov
push
add
test
sbb
and
jge
nop
add
sarl
repz
dec
cmp
ljmp
mov
ljmp
fs
cld
sarl
out
add
and
out
iret
jecxz
pop
cmpl
call
adc
pusha
fcomps
push
insb
ret
enter
fistps
jns
outsb
xor
dec
and
addr16
adc
jg
pop
scas
shll
cmp
mov
jge
adc
pop
into
incb
cmp
sbb
cmp
imul
lds
shrb
and
jle
sti
scas
dec
xlat
mov
jae
ljmp
or
push
and
cmpsb
push
dec
mov
test
mov
pop
ds
mov
mov
les
or
mov
add
jno
xchg
mov
sbb
sbb
inc
jnp
sbb
mov
cmpsb
mov
cltd
sub
pop
sbb
cli
mov
lret
dec
adc
adc
xorl
lods
movsl
aam
sbb
jne
dec
push
sub
push
xchg
add
and
jno
inc
in
aas
in
clc
lcall
jle
data16
mov
add
inc
mov
lahf
or
popa
sub
add
pusha
repz
or
shrb
cmpsb
in
fs
inc
and
loope
test
rcl
mov
mov
cmp
xchg
xchg
out
loop
test
jo
leave
shl
mov
push
adc
lret
mov
je
pop
nop
or
movsl
adc
mov
movsb
adc
es
test
fsubrl
in
mov
into
or
add
add
pusha
mov
push
push
aaa
fs
inc
or
popf
sub
dec
outsl
xchg
lea
lret
add
test
clc
sbbb
stos
negl
jbe
mov
cmc
out
pop
ljmp
adc
jmp
aam
bnd
push
mov
push
pop
dec
dec
dec
rclb
push
inc
out
daa
xchg
xor
pusha
popl
pop
hlt
enter
mov
fimuls
cmp
push
repnz
insl
lods
sbb
dec
push
loope
andl
gs
dec
inc
mov
aad
repnz
cmp
add
or
pop
rorb
popf
gs
imul
arpl
jge
test
lret
daa
fdivr
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
cmp
daa
in
mov
sbb
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
mov
inc
jge
aam
add
add
add
cmpl
mov
arpl
push
insl
fcmovnu
jno
push
mov
xor
pop
scas
sahf
loop
add
mov
loopne
daa
push
cmp
xchg
imul
sbb
ret
xchg
inc
push
cmpsb
insb
xor
addb
shl
sarl
cmpl
mov
jle
dec
inc
stc
xor
cmp
add
sub
je
rolb
sar
roll
jo
adc
xor
mov
xchg
cli
into
ret
mov
lret
sbb
jb
scas
ja
inc
jb
push
scas
cmpsl
jne
pop
xchg
dec
inc
and
jno
xorb
or
pop
out
fsubr
orl
pop
push
movsb
lret
and
mov
and
mov
xor
sbb
push
add
xchg
into
mov
mov
movsl
sub
jp
add
add
fcomps
sbb
sahf
or
mov
insl
andl
std
cli
push
out
repnz
andl
out
je
cli
daa
out
dec
mov
xor
lret
cmp
mov
cld
jp
sbb
jo
in
mov
lea
lret
mov
movb
test
repnz
xchg
fcoml
pmulhw
rorl
cmc
inc
enter
cltd
jae
mov
clc
ret
pop
hlt
and
dec
adc
inc
or
mov
orl
push
mov
adc
or
cmp
stos
sbb
jl
mov
gs
mov
mov
mov
std
push
scas
add
cmp
or
pop
les
pushf
incb
dec
add
pop
dec
insb
lods
mov
dec
imul
test
popa
rclb
lds
mov
lret
shll
loop
loop
sub
mov
xorl
jns
popf
jl
fcomps
lock
movsl
stos
iret
sub
mov
pop
outsl
push
ds
stc
sbb
scas
imul
or
mov
xchg
xchg
add
cld
mov
addr16
push
mov
xchg
imul
cli
mov
mov
mov
push
sbb
out
mov
cmpl
xor
mov
shrb
or
add
inc
or
stos
push
jl
jno
mov
push
out
sbb
mov
ja
mov
mov
scas
lret
or
scas
xchg
sbb
loope
loop
ret
push
sbb
push
stos
pop
xor
std
aas
rcr
outsl
mov
mov
mov
dec
xchg
mov
repz
xor
lods
iret
push
xchg
mov
std
lds
pop
pop
pop
push
or
cld
hlt
mov
mov
cmp
out
insb
xlat
pop
xchg
and
pushl
adc
jns
arpl
std
sub
es
fldt
cwtl
je
jns
add
fimuls
add
xchg
add
jg
incb
mov
lcall
iret
jno
or
mov
mov
mov
ja
xchg
outsl
mov
int
or
mov
dec
in
iret
sbb
push
or
popf
fs
xchg
int3
ja
xchg
xchg
mov
iret
imul
test
and
cmp
xor
sub
orb
test
gs
mov
lods
xchg
xchg
fbstp
lods
mov
and
dec
stc
imul
pop
sub
jge
sub
sub
cld
arpl
mov
adc
shr
int3
mov
hlt
sti
jle
aam
sub
movsl
lret
test
inc
setns
fdivp
push
repz
mov
jnp
mov
cmc
adc
ret
push
fcmovne
not
xchg
stos
sbb
faddl
xchg
xchg
mov
lea
rcrl
xchg
ret
cltd
shrl
fidivl
dec
cmc
push
xor
es
rcr
push
inc
pop
jns
sub
adc
xlat
and
adc
pop
dec
mov
xchg
stos
mov
add
mov
pushf
jae
jmp
mov
adc
mov
xor
popa
mov
stc
xchg
dec
and
sbb
repnz
in
or
jb
mov
jae
dec
xor
fildl
mov
cmpl
pop
arpl
repz
push
add
jecxz
je
cmpsb
aas
pop
sbb
mov
pop
mov
xchg
mov
nop
imul
jno
mov
push
sbbb
fistpl
inc
mov
dec
jno
add
clc
add
add
push
push
sub
jne
lock
sahf
push
lods
sub
jecxz
mov
mov
inc
cmp
or
into
roll
pop
add
lret
in
xor
std
loop
mov
in
test
push
dec
insb
aad
cmp
mov
shl
dec
push
sarb
ljmp
cld
rcll
in
loopne
fistpll
xor
pop
out
fistpll
dec
sahf
test
mov
fcmovnb
sbb
cltd
or
stos
jmp
mov
push
dec
jmp
rcll
ret
dec
loope
test
pusha
ljmp
notl
stc
js
add
jp
sub
inc
mov
lret
loopne
dec
fbld
jge
scas
inc
cld
push
int
ret
into
mov
push
mov
or
clc
loop
repnz
cmp
and
insb
imul
sbb
jge
adc
out
cmp
in
mov
jmp
call
inc
and
fst
adc
cwtl
mov
push
xor
lods
in
sub
shl
cmp
rclb
test
ljmp
das
loop
fsubrl
aas
push
xor
jl
push
pop
jbe
mov
xor
test
leave
das
shlb
xor
pop
mov
xor
pop
in
and
mov
or
sbb
push
sub
xchg
pop
add
cmp
imul
sub
pop
fcomps
adc
call
repz
push
inc
mov
cli
out
dec
xchg
or
lds
push
aaa
pop
dec
dec
stos
ja
add
sub
pop
scas
jp
aad
jg
xchg
sahf
mov
test
dec
popa
test
stos
fistps
adc
cmpsb
je
notb
mov
and
fstl
cwtl
and
aad
adc
bound
std
daa
xchg
outsb
aas
sbb
clc
dec
jecxz,pn
in
cld
mov
adc
lcall
add
sbb
xorb
inc
repz
add
fmuls
lock
cmpsb
xchg
adcb
loopne
stc
lods
pop
mov
cltd
mov
faddl
push
mov
and
mov
rcl
imul
cmp
xorb
movsl
gs
inc
jp
jecxz
pop
rclb
stos
das
jle
pop
sbb
int
add
lcall
or
ss
sub
loopne
pop
cmpsl
rcrb
xchg
loopne
mov
adc
cmp
pop
sub
push
ljmp
loop
cli
scas
sbb
push
xlat
cmc
mov
cmpl
jne
subb
test
insl
push
jns
push
in
push
in
xchg
xor
cli
add
xlat
fs
xchg
movsl
mov
cld
jl
aaa
jecxz
stos
mov
jp
sbb
outsb
mov
cmp
mov
movsl
rcrb
push
daa
orb
ja
mov
stos
repnz
fwait
push
lret
pop
icebp
mov
and
mov
lahf
dec
push
cmpsl
mov
jmp
and
jmp
jno
jp
in
fcomip
jg
sbb
inc
int
cld
or
test
mov
popa
mov
cld
xor
lods
es
mov
into
lods
xor
inc
mov
div
pushf
jmp
inc
sahf
jp
call
shll
mov
mov
pop
push
lcall
adc
jmp
xchg
lock
fldcw
push
fmull
lahf
cmp
push
pop
or
xchg
xchg
lea
cmp
or
pop
sbb
inc
xchg
and
adc
mov
addr16
pop
mov
xchg
aad
cli
jp
push
ficompl
hlt
push
jmp
cs
jp
arpl
mov
push
and
insb
das
ret
enter
mov
push
stc
fcoms
cld
xor
xor
sub
hlt
sbb
cwtl
adc
scas
lock
test
pop
pop
call
out
adc
gs
dec
loop
jnp
imul
ret
and
xor
push
mov
ja
xlat
sub
and
dec
add
xor
push
std
sub
sub
scas
sub
xchg
xchg
push
cwtl
pop
sti
not
je
inc
and
mov
pop
pop
je
pop
sbb
xchg
mov
cs
pushf
imul
out
mov
jae
jae
lret
add
clc
add
add
loop
dec
nop
sub
cmp
adc
fidivs
cmpsb
adc
adc
pop
ja
lock
and
mov
dec
pop
and
jb
sar
out
mov
imul
fldt
out
adc
xchg
or
incl
out
test
push
jae
stos
subl
sub
cmc
and
rcll
pop
inc
pop
mov
pop
pop
add
mov
mov
dec
cmpsl
mov
xor
cmp
into
add
adc
mov
push
cmp
or
pusha
push
aad
filds
push
fs
add
fdiv
mov
imul
nop
mov
sub
fucomp
jmp
or
adc
dec
roll
movsb
xchg
inc
cmpsb
xor
pop
imul
mov
out
inc
icebp
pop
pop
ror
or
das
mov
addl
ss
sbb
int
inc
cli
call
mov
cli
outsb
subb
inc
and
push
pcmpgtd
inc
loopne
or
je
repz
mov
pop
out
jl
shrb
loope
push
jmp
adcb
push
cld
imul
xor
cmp
cmc
cmp
jne
jo
jnp
scas
neg
insl
es
in
push
loope
pop
sub
inc
xor
xchg
fsts
jp
adc
pop
mov
subl
push
mov
push
movaps
test
jns
lahf
and
push
pushf
mov
jmp
dec
add
add
cmp
jnp
sahf
mov
xchg
pop
ficoms
add
jns
inc
lahf
jne
push
pop
fisttps
pop
lret
dec
lret
enter
cltd
dec
mov
mov
add
leave
dec
push
jmp
inc
in
cmpsb
and
jmp
xchg
mov
test
jle
ret
imul
mull
jno
inc
mov
push
sbb
mov
pusha
leave
rcl
mov
rolb
push
enter
ret
lock
inc
shlb
insb
sbb
lods
scas
ja
or
xor
and
sbb
fs
ret
cwtl
sub
lods
sbb
sub
sbb
fisubrl
mov
push
js
icebp
mov
mov
aad
dec
in
mov
cltd
push
notb
stos
pop
scas
sbb
sub
fwait
or
ficoms
into
popf
enter
jnp
lahf
mov
lods
mov
xor
inc
popf
daa
xor
pop
fsts
xchg
cmp
mov
jne
fwait
lods
hlt
push
std
adcl
and
xchg
insb
jge
fcmovbe
mov
sub
ficomps
dec
iret
add
xchg
and
in
fnstenv
dec
or
scas
and
mov
les
outsb
cld
mov
fbstp
inc
mov
xchg
popa
xchg
mov
push
icebp
jae
adc
loopne
jo
mov
int
aas
add
stos
out
xchg
popf
sbb
test
pop
inc
push
add
add
push
sub
mov
clc
sti
dec
jno
addr16
cmp
loopne
sbbl
vmovapd
adc
ficompl
nop
out
cmp
or
inc
cmp
xor
gs
test
cmc
pop
or
mov
sahf
mov
jae
int
loope
scas
sub
inc
mov
sbbb
daa
aas
inc
fstpt
inc
inc
lcall
xchg
and
push
shl
sbbl
lahf
cmp
sub
daa
or
xchg
push
ret
pop
mov
xchg
lcall
mov
je
push
push
sub
pop
popf
push
adc
test
fisttps
mov
mov
sub
dec
adc
outsl
fcomip
testb
movb
jae
cmp
stc
sub
ret
leave
das
sbb
sub
push
inc
pop
ljmp
imul
nop
clc
inc
fst
and
aad
addr16
shr
inc
scas
cmpsl
cmp
rclb
xchg
ja
or
mov
les
mov
mov
xor
in
fcomps
sub
rclb
imul
push
xor
ja
xor
lret
ljmp
mov
popa
mov
test
xchg
rorb
insb
ljmp
shlb
adc
ret
test
pop
ficoms
ja
idiv
repz
lret
jae
add
add
clc
add
add
loope
pop
call
mov
jnp
loop
scas
push
sbb
add
adc
dec
sbb
aad
jno
xor
popf
divb
jg
cwtl
roll
hlt
adc
jl
pop
xchg
shl
inc
xchg
push
cmpsl
sub
lods
int3
jl
sub
jns
xor
and
cmp
aad
in
add
or
pusha
mov
test
mov
in
push
cli
ds
inc
xor
in
cmp
pop
je
pop
shll
adc
aam
adc
xor
xchg
pop
lret
nop
testl
cld
stos
mov
jmp
sub
js
std
push
mov
push
stos
and
frstor
xchg
fdivl
imul
add
sub
lods
xchg
fwait
btr
es
lea
bound
int
mov
inc
inc
xchg
and
xor
inc
adc
mov
mov
and
sbb
sahf
jg
push
mov
shrl
pop
outsb
and
adc
sub
enter
jns
adc
xor
es
inc
mov
imul
aad
stc
inc
lds
popa
andb
sbb
mov
outsl
imul
dec
push
daa
sub
idiv
daa
and
mov
out
int3
pop
stos
add
mov
inc
jmp
addr16
xchg
ds
std
fisttpl
add
dec
xor
jp
push
sbb
jae
mov
repnz
es
mov
fists
je
loop
js
sbb
jmp
xor
push
stos
dec
inc
fwait
in
mov
push
inc
test
das
jno
mov
incl
dec
fimull
xchg
adc
add
mov
mov
jae
mov
js
aam
aad
or
out
orb
gs
sar
xchg
imul
dec
pushf
fimull
out
dec
mov
pop
jnp
push
aas
sub
mov
cltd
and
popa
push
mov
movsb
sbb
sub
gs
cli
stos
push
push
outsl
mov
dec
push
or
inc
test
push
fwait
rep
add
and
int3
jecxz
insl
repz
lods
cmovns
cmp
push
in
aam
loop
bound
ljmp
imul
cmpsb
pop
mul
push
push
pop
mov
xor
mov
adc
imul
sub
in
mov
fimuls
and
push
dec
mov
in
fmuls
hlt
pushf
adc
dec
sarb
inc
test
pop
pop
cmpsb
mov
sti
or
pop
inc
inc
cmpsb
rcrb
jae
imul
out
cmc
xchg
xor
adc
outsl
and
scas
cmp
les
repz
subl
cs
jbe
inc
addr16
mov
xchg
or
js
pop
push
push
repnz
dec
in
popa
push
xchg
andb
loop
dec
jns
push
xor
sbb
in
sbb
mov
ror
outsb
jb
loop
and
enter
cmp
cmc
lods
push
mov
cli
pop
jecxz
mov
mov
push
aaa
pop
add
sti
ret
roll
push
adc
dec
and
cmpsb
pop
inc
pop
sub
fists
push
mov
imul
and
jbe
pop
jp
scas
pop
xor
iret
adcl
sub
scas
inc
sbbl
jnp
repz
inc
into
push
hlt
iret
and
sub
sub
cmp
dec
call
fisttpll
ss
jecxz
pop
scas
and
cmpsl
fdivrl
inc
cs
mov
adc
add
or
sub
and
sti
push
pop
or
lock
popf
mov
filds
dec
mov
xchg
adc
out
mov
xor
jbe
add
dec
lock
pop
pop
push
aaa
dec
push
std
dec
ds
jmp
pop
cmp
negb
push
add
je
add
scas
xor
insb
fidivrl
fwait
jle
je
xor
nop
repz
test
scas
outsb
inc
repnz
jge
cmp
mov
sub
mov
addr16
sub
test
mov
fucomp
loop
sbb
roll
out
and
xor
fcmove
pop
bound
pop
loop
dec
add
push
or
jo
jb
jp
adc
mov
popa
sub
xchg
mov
xchg
jl
cmp
jl
xchg
pop
imul
xor
call
jnp
sarl
sbb
add
clc
add
add
jns
fs
or
push
sub
bnd
mov
jbe,pt
dec
das
out
test
das
adc
enter
repz
call
lock
popf
cld
add
jnp
mov
nop
and
dec
subb
mov
push
fwait
mov
dec
ja
out
and
jne
or
dec
cli
xor
das
dec
xor
mov
aaa
gs
pushf
mov
mov
popf
decl
ret
rcl
add
mov
sub
popa
jno
add
mov
and
inc
add
adc
add
jge
mov
xchg
mov
add
cld
dec
jle
push
dec
bswap
mov
pop
lahf
add
sbb
mov
mov
jmp
out
out
and
fiadds
clc
fisttpl
popl
cmp
cmpsb
sub
pushf
mov
xor
inc
mov
pop
mulb
adc
inc
dec
out
icebp
mov
imul
into
mov
jo
addb
mov
jns
fs
xlat
bound
cmc
mov
dec
adc
inc
dec
pop
insb
jge
jbe
xchg
sbb
sbb
dec
psadbw
les
scas
jbe
movsb
cltd
js
sti
xchg
push
or
test
ret
enter
mov
and
in
or
and
sahf
lods
adc
mov
inc
mov
notl
lahf
test
rorb
repnz
add
ds
mov
addr16
jns
imul
pop
dec
mov
loop
push
push
push
das
nop
dec
add
rcrb
mov
mov
push
push
popf
stos
or
dec
jge
cltd
sub
fdivrl
push
stos
push
aad
jno
jbe
outsl
and
or
stos
mov
or
stos
jne
test
test
shl
call
mov
xor
push
jb
cs
and
cmp
outsb
sbb
idiv
enter
fcompl
mov
cmp
mov
jge
pusha
stos
push
adc
addr16
mov
sub
inc
scas
xor
inc
xchg
jecxz
fwait
adc
je
adc
sub
lds
or
shll
and
add
pop
in
scas
mov
sarl
jno
xor
xor
jmp
fs
stc
js
clc
push
jecxz
mov
mov
sub
sbbl
jne
enter
aam
cmpsb
cs
pop
cmp
fcoml
mov
mov
cld
mov
cmpsl
lcall
mov
xor
xchg
dec
test
mov
popf
adc
adc
xor
sti
cmp
mov
or
gs
repz
shr
stos
lds
mull
ljmp
jl
rcrl
cmp
hlt
ret
ja
cld
or
enter
gs
scas
cmovl
call
dec
jno
pop
inc
aas
scas
lea
out
popa
lret
add
cmp
mov
out
insl
jb
jecxz
aas
in
sub
das
sbb
push
jge
sbb
mov
sub
icebp
ds
jbe
out
cmp
and
push
sub
jp
rol
test
dec
shl
push
js
push
sbb
push
cmp
mov
push
dec
mov
xchg
int3
fbld
jb
adc
mov
cmpsb
mov
and
xchg
addl
push
push
stos
dec
push
sbb
scas
push
repz
mov
pushf
cmpsl
aam
jno
pop
pop
std
stc
leave
adc
and
loop
pop
test
mov
inc
es
int
fsts
arpl
ja
stc
mov
out
pop
or
xchg
fwait
je
and
cmp
adc
dec
mov
sarl
clc
mov
mov
pop
lds
mov
mov
repz
pop
mov
imul
addr16
ss
cmp
mov
mov
mov
dec
inc
mov
out
cmp
test
lock
fs
scas
imul
jecxz
mov
pavgb
into
nop
lods
jnp
add
in
mov
mov
outsb
jbe
sbb
add
mov
add
jnp
js
cs
mov
inc
insl
imul
das
cmc
add
xchg
fcomp
jg
sub
cmp
fdivrs
mov
pop
push
push
loop
fnstcw
fbstp
sbb
and
movsl
std
dec
insl
mov
fdivp
cmpb
and
rcrb
xchg
dec
test
fcoms
test
adc
adc
add
add
pop
ret
sbb
pushl
push
xchg
pop
add
adc
outsb
addr16
gs
ret
mov
jge
dec
punpcklwd
mulb
gs
je
xor
pop
stc
or
xchg
mov
push
ret
popa
push
lahf
lret
mov
fimull
xchg
clc
leave
mov
outsl
cmp
dec
jno
cs
xlat
push
cmp
xchg
js
ja
sbb
fwait
and
fisubrs
insb
jne
dec
test
adc
mov
jne
sbb
scas
out
cmpsl
and
jg
pop
aas
xchg
jge
icebp
sbb
and
adc
test
dec
aas
decb
xchg
sub
jo
ds
jmp
fisubrl
outsl
shlb
pop
lock
adc
jns
out
jne
mov
inc
addr16
roll
cltd
add
stos
or
std
add
loopne
xor
adc
out
inc
jnp
stos
push
ret
jae
lcall
call
cmp
jb
fistps
call
int
loop
movsl
sbb
jae
push
pop
cmp
ret
data16
xchg
mov
jne
iret
aas
sarl
sub
mov
jp
call
ret
cmpsb
sub
jb
inc
nop
inc
pushf
jecxz
mov
lahf
or
push
icebp
scas
mov
xlat
pop
push
pop
xchg
push
add
push
pop
jp
es
cmp
aaa
xlat
sub
xlat
andl
loopne
ja
mov
stc
fstps
and
mov
or
lcall
cmp
outsl
mov
cmp
in
jg
inc
sbb
add
inc
fstl
jp
inc
subl
sahf
aas
cmp
mov
sahf
and
inc
mov
xchg
imul
imul
nop
mov
inc
test
sti
shl
arpl
jmp
adc
movsl
in
repz
xchg
mov
cmp
bound
push
mov
dec
cmpsl
cli
sub
popa
push
int3
mov
orl
mov
filds
dec
xchg
mov
test
adc
push
rcrl
sbb
sub
sub
maskmovq
jo
stc
cmp
aam
pop
dec
pop
imul
pushf
int3
and
adc
or
cld
mov
decl
dec
jmp
imul
aad
cmpsb
and
scas
sub
aad
or
xchg
lret
push
aaa
mov
mov
mov
jnp
jae
cmp
adc
idivb
pop
repz
pop
clc
xor
or
dec
sbb
jle
cmp
mov
and
add
inc
fwait
aaa
sbb
jo
cltd
jb
movsl
inc
arpl
pop
xor
sbb
mov
pusha
clc
lock
shll
xchg
mov
outsb
insl
push
je
mov
je
scas
jbe
std
lods
cwtl
sbb
cld
jmp
dec
imul
mov
std
jl
mov
adc
mov
leave
lahf
pop
mov
and
ret
shl
fcomps
and
lock
mov
sub
push
rcrb
pop
pop
pusha
aaa
lcall
aam
imul
pop
sbb
and
xlat
cwtl
mov
xchg
mov
leave
xchg
push
and
in
mov
adc
mov
sbb
lods
popa
jb
rcrl
inc
fadds
rorb
mov
mov
mov
ror
dec
mov
or
inc
fcoml
lock
leave
jecxz
fs
cmpsl
or
scas
andb
push
xor
lea
sti
dec
cmc
cmp
aas
es
leave
sub
xor
mov
hlt
lods
in
jnp
inc
add
sbb
xor
mov
inc
mov
inc
sbb
sbb
repz
aas
icebp
sti
xchg
stos
loopne
push
push
sbb
movsb
repz
hlt
push
xchg
or
repnz
pop
lock
test
adc
ror
push
shlb
sub
cmpsb
aas
cmp
sub
or
xor
dec
adc
aam
hlt
pop
jne
push
test
cmp
scas
in
mov
lods
and
mov
cmp
jge
jae
shll
or
jb
jbe
call
push
lret
cmp
out
test
iret
mov
sub
icebp
ffree
mov
es
pop
cmp
and
xchg
inc
cmpsb
and
les
ljmp
lcall
lret
nop
pop
dec
repnz
clc
add
add
iret
test
mov
stos
mov
test
das
int3
ret
or
xor
cmp
cmpsb
loopne
push
hlt
test
mov
int
mov
add
cmp
adc
mov
sub
out
aam
pop
das
pop
aas
imul
or
js
jmp
daa
insl
mov
daa
sbb
fstl
jecxz
lret
push
cs
iret
pop
xor
mov
and
push
adcb
xor
and
inc
inc
push
inc
ret
in
enter
aad
imul
mov
cmp
mov
icebp
push
cmc
lahf
xor
fnstsw
cwtl
inc
es
int
ret
pop
lea
push
in
stos
dec
lcall
imul
loop
dec
gs
jo
xor
ljmp
jno
rolb
das
push
test
adc
inc
and
dec
mov
inc
aas
or
arpl
cmp
ss
icebp
rolb
adc
leave
cmp
jl
loope
add
cmp
sub
in
push
insb
dec
push
out
cwtl
mov
inc
mov
mov
cmp
mov
loope
mov
add
fdivl
jp
jg
inc
xchg
cs
fwait
hlt
mov
aas
push
dec
pushf
data16
outsl
adc
push
fsubrs
jne
sub
pop
fisttps
and
cltd
cmpsl
fwait
sub
icebp
sahf
leave
lret
jnp
subb
jmp
xlat
xor
mov
cmp
inc
xchg
subb
push
je
add
push
stos
mov
das
orb
nop
outsb
lods
add
bound
mov
mov
pop
repz
jle
lods
sti
pop
shlb
add
in
icebp
int
popf
iret
or
mov
lods
mov
icebp
and
mov
cmp
push
mov
add
test
fst
mov
test
jns
jnp
ret
addb
xor
and
pushf
sub
std
mov
or
cltd
adc
xchg
add
imul
insb
push
jmp
sub
lods
mov
pop
mov
fs
sub
mov
pop
push
or
add
sub
sbb
das
xlat
pop
sub
mov
pop
mov
fwait
nop
push
aad
hlt
inc
js
rcrl
stos
call
jmp
dec
xor
pop
xchg
orb
jl
cmp
push
divb
dec
sbb
push
pop
bound
addr16
and
sub
jne
popa
push
cmp
xor
mov
fildll
into
adc
sti
in
aam
xlat
fisubrs
push
sbb
mov
outsl
mov
mov
faddl
add
adc
andb
inc
cli
or
adc
jo
insb
lods
call
repnz
push
and
dec
add
orb
add
jmp
into
jns
sub
roll
mov
pop
sub
aas
in
adcl
mov
add
mov
pop
sub
aaa
stos
scas
jb
mov
repnz
gs
mov
imul
pop
scas
push
or
pusha
outsl
std
sarb
mov
jb
ret
cmp
addb
push
lahf
fsubl
test
mov
cltd
stos
js
loop
sbb
mov
cmp
fisttpll
iret
lds
sub
jmp
push
mov
sub
stc
out
dec
iret
daa
scas
je
push
and
push
dec
outsb
jg
push
and
lods
stc
lret
test
stc
adc
lods
jne
jne
jl
jecxz
jl
test
pop
push
ds
cmp
repz
push
arpl
and
fs
xchg
jns
je
xor
fiaddl
add
mov
add
add
and
xor
iret
sbbl
icebp
imul
addb
or
sub
aam
or
leave
sbb
out
shrb
aam
sahf
popa
xchg
aad
daa
aam
aas
scas
fidivl
push
dec
je
test
and
sub
inc
in
sub
fisttpll
mov
leave
inc
out
pop
add
jnp
pop
cmp
dec
outsb
jge
mov
js
addb
xlat
mov
inc
out
jb
lahf
mov
xchg
insl
jnp
adc
mov
mov
mov
into
andl
inc
das
ficoml
cltd
adc
jp
stos
or
jno
repz
divl
mov
and
add
clc
add
add
add
popf
mov
sbb
ss
mov
push
add
stc
push
cmp
sub
insl
pop
cmpsb
testl
data16
adc
mov
xchg
cld
add
ljmp
add
popf
pop
mov
adc
sbb
test
jo
inc
cmpsb
or
push
jp
insb
fsubs
lcall
push
stos
scas
fisubs
hlt
or
hlt
ja
pop
loopne
cmp
shr
stos
xchg
inc
pop
sub
pop
push
pop
sti
lret
into
sbb
jge
popf
jb
fdivr
into
iret
fs
mov
mov
jge
ret
mov
mov
pushf
inc
sti
mov
mov
xchg
push
aam
ss
mov
ja
cmpsb
out
cmp
xorl
test
cmp
out
mov
aas
popf
cmpsl
pop
fldl
aam
data16
inc
cwtl
sub
mov
mov
sbb
and
pop
popa
add
dec
or
push
push
ret
add
scas
cli
bound
push
shrl
pop
xchg
xchg
fmuls
cmpsb
out
dec
std
pop
pop
push
push
sbb
imul
or
imul
dec
jle
ja
push
pop
call
je
out
icebp
adcl
push
dec
mov
cmp
or
int
jae
jbe
mov
xchg
mov
idivl
cmp
das
adc
pop
or
in
cld
imul
in
xlat
test
mov
or
gs
mov
push
pop
pop
ret
mov
outsl
sub
mov
dec
pop
inc
jno
xor
xchg
outsb
mov
in
and
add
and
fnstsw
loopne
pushf
jle
sbb
fstl
xchg
sub
jmp
add
pop
adc
xchg
sbb
sar
xchg
xor
inc
fistps
in
push
add
push
js
sub
out
lods
aaa
mov
ja
sub
adc
call
cld
pushf
aam
mov
push
fstpl
bnd
mov
repnz
and
mov
rcrb
mov
mov
mov
jp
popf
jns
jecxz
arpl
negb
push
or
mov
lods
rol
popf
mov
data16
jecxz
push
inc
negb
fwait
ja
adc
mov
dec
and
sub
jno
mov
mov
xchg
inc
lods
cld
sbb
mov
lds
dec
jg
cli
stc
scas
stos
adc
daa
les
pop
into
imul
push
inc
inc
pop
mov
icebp
mov
sbb
adc
ljmp
das
lock
push
xchg
cmp
ja
aas
frstor
push
cmpsb
lcall
jecxz
stos
pop
xor
mov
fcoml
jae
aad
sub
dec
in
fsts
push
rol
push
pop
xchg
cltd
pushf
mov
ja
mov
pop
imul
dec
push
in
daa
lock
or
xchg
pushf
cmpsb
iret
fs
mov
fildll
cmpsl
aas
stc
sbbb
sub
fisubs
lds
or
add
aad
mov
mov
xor
movsb
imul
call
or
xchg
push
andb
orl
or
mov
js
pop
jg
add
gs
mov
mov
stc
dec
outsl
mov
mov
sbb
test
push
scas
repnz
sbb
jecxz
cmpb
cmp
enter
arpl
add
sbbl
in
lahf
add
sbb
sahf
and
push
gs
mov
cli
inc
xchg
add
lcall
mov
andl
pushf
mov
movsl
jae
lea
xor
fucomip
repz
movsl
shrl
or
jbe
fdivl
std
xor
mov
mov
addb
fcmovu
jg
push
lret
jle
pop
or
mov
or
lea
push
sti
mov
mov
fistpl
out
negl
pop
sbb
loope
jl
and
mov
mov
xchg
nop
jmp
fimull
int3
cld
popa
push
popf
testl
mov
and
hlt
jae
out
rcll
rclb
stos
mov
sbb
push
sbb
cmc
pusha
cli
test
sbb
cwtl
ret
inc
fisttps
lahf
int
push
addps
add
clc
add
add
fwait
and
cmp
ds
out
jp
rorl
andl
xchg
push
dec
repz
adc
dec
int
data16
push
mov
mov
cmp
cmp
and
pop
cmp
dec
mov
dec
or
or
in
loopne
inc
and
push
subl
gs
lcall
sbbl
insl
shll
mov
insl
fstps
pop
pop
add
insl
fists
xor
leave
in
cmp
cltd
shrb
ret
mov
aad
aas
jmp
sub
pop
jnp
inc
insl
xlat
sbb
mov
sub
adc
sbb
aad
sub
sti
pop
sub
frstpm(287
or
dec
je
inc
xchg
sbb
add
iret
mov
leave
rcrb
aad
gs
xchg
cltd
std
addb
adc
push
fstpt
into
clc
pop
pop
insb
cmp
push
add
mov
stc
adc
jecxz
icebp
and
xchg
push
ss
cmp
mov
pop
lea
dec
cmp
es
addr16
push
cmpsb
ljmp
mov
cs
lea
inc
adc
adc
mov
cld
mov
jl
call
xor
xchg
sub
insl
fimuls
and
mov
inc
mov
lds
fsubs
int3
jecxz
and
inc
add
repz
lock
mov
xchg
adc
mull
nop
rcrl
and
xchg
mov
pop
add
dec
jl
pop
je
nop
mov
jl
xchg
scas
cmp
add
pop
or
mov
mov
or
repnz
inc
stos
mov
cmp
gs
jge
mov
or
jo
mov
rcrl
cmpsb
mov
repz
jl
rorb
in
mov
jle
add
loope
xor
inc
test
mov
pop
aam
cltd
dec
push
pop
or
and
into
cmp
rcrb
imul
mov
xchg
in
mov
mov
mov
jp
mov
cltd
jbe
sub
mov
in
mov
rorl
decl
cmpsl
mov
jbe
jo
mov
mov
sbb
jecxz
xor
inc
adc
jno
ja
int
das
fstps
pop
dec
fwait
inc
cmp
jne
rcll
popf
jns
push
and
push
inc
add
add
xchg
leave
mov
xlat
cmp
xor
es
dec
in
mov
mov
jge
out
int
and
pop
mov
rorb
arpl
jl
dec
xchg
test
ljmp
stc
mov
insl
cmp
dec
xor
cwtl
sub
and
das
insl
test
or
inc
nop
push
js
dec
jmp
popa
or
jo
jmp
fisubs
popa
lock
fldenv
xchg
cmp
mov
pusha
pop
rcrb
fsubrl
adc
xchg
repnz
sub
cmp
out
in
push
mov
cld
mov
inc
dec
xlat
sbb
mov
adc
jmp
lret
jno
mov
jae
stos
adcb
adc
jmp
stc
mov
lcall
lock
push
cld
jo
jge
xchg
inc
stc
lods
bound
addr16
inc
and
sbb
lret
fldl
sbbb
stos
fxch
xor
mov
fisubrs
xor
pusha
les
inc
mov
cltd
adc
repnz
les
cwtl
int3
xor
mov
ljmp
or
stos
pop
adc
stc
test
mov
dec
fstp
dec
jmp
or
mov
scas
sbb
jecxz
lcall
adc
ret
jbe
sbb
shlb
pop
mov
sbb
int
inc
add
xchg
loopne
pop
dec
jnp
cmp
fbld
lock
rol
popf
sbb
sub
adc
sub
stc
sbb
jmp
mov
icebp
gs
in
xlat
rol
fdivr
inc
xchg
jne
lret
jmp
cmp
dec
out
imul
xchg
jl
lods
cmp
jl
dec
sub
mov
adc
jp
dec
out
inc
rclb
gs
mov
fstpt
xor
arpl
pushf
inc
xchg
cmp
xlat
aas
popa
adc
sbbl
dec
xor
add
clc
add
add
cmp
sub
out
sbb
push
jae
in
js
lock
cmp
mov
inc
push
dec
cwtl
outsl
push
outsl
movsb
out
test
fistpl
pop
push
dec
mov
add
sbb
ljmp
imul
leave
dec
xchg
dec
mov
rcll
int
or
dec
roll
mov
push
push
mov
int3
pop
or
adc
xchg
jmp
ret
loope
cs
push
mov
jmp
stos
pop
adc
in
fdivrl
repnz
adc
negl
jle
ljmp
stos
jno
fiaddl
gs
mov
fsubrs
movsb
cmp
stos
aaa
add
mov
sub
mov
xchg
mov
xorl
jmp
int3
mov
mov
push
aas
sub
pop
repnz
adc
jecxz
sahf
mov
in
push
fs
cmp
stos
cltd
into
jbe
dec
xchg
in
push
cltd
jmp
call
push
sarb
in
mov
mov
les
sti
mov
inc
sub
inc
mov
je
push
fdivl
dec
mov
mov
ds
mov
jns
data16
push
jp
loope
cmpsb
inc
insl
sbb
mov
addb
push
add
pop
sub
xlat
loopne
sub
fnstenv
stos
je
cmp
mov
dec
cli
inc
push
leave
push
loope
mov
test
cmp
rolb
test
lahf
ljmp
sbb
shl
mov
out
in
push
push
fldt
sub
jb
add
mov
push
push
movsl
adc
mov
in
add
pop
js
jp
add
ja
pushf
mull
test
imul
jp
in
fcmovnu
cs
mov
mov
in
pop
xchg
jp
pop
sub
sbb
sbb
add
jnp
mov
mov
dec
in
and
and
push
jo
inc
fidivs
sti
test
jns
pop
stos
lcall
negl
aam
cmp
mov
sti
cs
cmp
xchg
ja
je
jae
call
mov
jle
push
out
inc
and
incb
adc
test
jnp
xchg
xor
ss
movsb
mov
xor
and
xor
xchg
cmpsb
in
xor
or
rcrl
outsl
flds
xchg
mov
pminub
imul
aas
icebp
shl
push
gs
mov
lret
sbb
stos
mov
outsl
imul
pop
mov
mov
mov
aad
mov
repz
dec
adc
fwait
enter
mov
inc
insb
ja
or
xor
pop
add
and
xor
sub
cmc
mov
jle
or
or
addr16
cmp
pop
xchg
mov
dec
je
fcmovnu
pop
mov
js
inc
scas
inc
or
add
loopne
inc
xchg
xchg
add
rcrb
std
fsubrl
xlat
pop
cwtl
jno
pop
mov
cs
fsubr
adc
pop
jg
pop
mov
pop
cld
dec
loopne
mov
daa
add
xchg
ss
mov
shrl
loop
stc
dec
lods
movsb
sub
jecxz
mov
cmp
mov
push
sbb
jne
mov
enter
ss
jge
data16
clc
dec
daa
jae
cmp
mov
out
mov
fdivr
fs
jne
ret
mov
adc
clc
mov
sbb
mov
lock
mov
mov
fdivl
xchg
adc
imul
out
iret
cltd
mov
push
je
jge
repz
and
sbb
lret
pop
jl
dec
pop
xor
stos
movsl
sbb
or
insb
and
mov
jmp
jo
adc
nop
or
iret
mov
sbb
repz
dec
and
or
xchg
xchg
aad
xor
outsl
pop
das
gs
test
outsb
out
negb
mov
push
repz
cltd
in
cmp
xlat
xor
jo
lods
pop
cmpl
adc
sti
jle
and
ret
or
andl
fldenv
out
out
out
jg
cmpb
or
adc
lahf
aas
dec
sahf
insl
not
neg
mov
int
fs
sub
add
clc
add
add
cmp
stc
flds
aad
push
mov
rcrl
lahf
divl
pusha
cmpsb
ret
mov
in
push
mov
sub
test
jnp
mov
inc
es
mov
or
sbb
mov
ljmp
pusha
icebp
push
insb
mov
pop
dec
xlat
sahf
xchg
xchg
pop
sbb
dec
out
xchg
and
mov
test
mov
or
fs
sarl
imul
mov
xchg
out
sarl
lock
push
cwtl
movl
rcll
jne
in
cwtl
mov
ljmp
pop
adc
fsubr
cmp
stc
push
push
loop
jae
jne
mov
aad
mov
inc
mov
pop
adc
and
in
xlat
repnz
sub
mov
das
mov
in
xor
sub
sbb
ja
or
test
mov
jb
popa
std
pushf
jle
dec
cltd
imul
cli
jbe
nop
or
dec
mov
add
xor
mov
jno
sub
or
push
outsb
insl
cmpsb
dec
aam
inc
rcrl
mov
push
jno
inc
sub
adc
and
xor
insb
mov
fildl
sbb
popf
xor
cmp
mov
arpl
xchg
adc
cltd
scas
inc
orb
xchg
jbe
inc
ds
outsb
push
jns
mov
icebp
dec
dec
sbb
ret
push
adc
mov
fdivl
rcrb
xor
in
or
das
cmp
faddl
movsl
movsl
pusha
inc
dec
cmp
in
lret
fldt
movsb
jne
test
push
in
jo
jle
mov
lret
fiadds
adc
xchg
mov
stos
addr16
mov
and
punpckhbw
xchg
ss
pop
cmpsb
mov
fbld
mov
sub
cmpb
out
loopne
data16
daa
push
lahf
xchg
sbb
gs
cmp
mov
in
fisubs
sub
pop
test
jmp
adc
xchg
xorb
adc
pop
push
pushf
test
js
add
ret
inc
add
stos
fisubl
imul
and
or
xor
cltd
imul
adc
loope
repz
mov
sbb
ds
mov
mov
lock
mov
and
cmpsb
mov
scas
data16
int3
mov
jmp
jecxz
jae
in
popl
push
jge
daa
pop
jbe
enter
ds
or
pop
mov
es
test
inc
xchg
pusha
sbb
cli
sti
mov
fcomip
mov
mov
pop
push
jl
loope
mov
sbb
pop
in
pop
pushf
sbb
jmp
or
mov
cmc
aaa
stc
and
pop
jbe
loopne
fistl
xlat
push
aaa
mov
ljmp
stc
outsb
xchg
mov
inc
cmp
notl
xorl
mov
fs
xchg
push
rorb
mov
lods
inc
mov
aam
adc
lods
mov
andb
xor
xor
xor
jg
push
jne
enter
xchg
cli
fldcw
mov
fcmovu
pushf
dec
iret
push
andb
cmp
enter
dec
outsb
inc
mov
pushf
mov
push
inc
aam
dec
cmp
movsb
mov
and
in
jnp
and
bound
cmc
insb
sub
loop
shll
int
into
repnz
andb
cltd
sti
or
pop
mov
cli
push
jns
jne
ss
dec
pop
aaa
sar
push
pslld
push
leave
repnz
rcrl
push
and
add
mov
xchg
mov
es
out
and
andb
jg
pop
mov
inc
aad
enter
pop
lret
dec
xchg
add
sbb
icebp
inc
out
jnp
pusha
arpl
ljmp
jnp
gs
pusha
inc
push
xor
pop
adc
test
daa
mov
and
mov
lock
or
sbb
mov
push
clc
mov
mov
and
nop
add
adc
call
sbb
sub
inc
aad
xchg
lods
push
jp
daa
js
mov
add
imul
lea
dec
sub
leave
out
std
mov
push
jg
mov
and
add
clc
add
add
loopne
mov
cltd
add
insb
xchg
mov
mov
scas
push
mov
bound
pushl
scas
and
clc
test
test
lea
jb
or
daa
sbb
cmp
jl
lret
inc
xchg
inc
mov
fcomps
mov
fst
pop
push
lret
push
xor
adc
lahf
iret
add
dec
clc
pushf
in
cmp
aas
outsb
mov
inc
sub
sahf
int3
jno
xchg
ret
dec
mov
cwtl
mov
dec
scas
lahf
scas
popa
bound
clc
stc
cltd
int3
pop
mov
or
sub
cmp
aam
lds
cmp
jmp
arpl
rorb
jmp
jg
mov
jmp
adc
mov
add
pop
xchg
push
adc
push
hlt
orl
popa
bound
notb
test
arpl
push
xor
icebp
jnp
push
cmp
loop
call
dec
mov
pop
mov
fs
into
push
dec
lds
add
gs
dec
mov
lds
arpl
mov
cmp
sub
out
push
pushf
andb
inc
dec
adc
add
mov
push
and
test
pop
shll
add
sahf
cmp
mov
sub
fs
jno
cmpsb
ss
test
imul
pop
sbb
inc
push
popf
scas
fidivl
add
aas
ss
lcall
das
icebp
movsb
pop
gs
outsb
les
rcr
push
jecxz,pn
int
sahf
shll
push
add
mov
xor
sub
xor
xlat
cwtl
pop
or
lods
aad
mov
int3
insb
sbb
jle
xor
out
adc
movsl
and
inc
ret
adc
out
sbb
inc
js
out
fcmovbe
out
leave
out
mov
dec
inc
popa
dec
push
mov
mov
add
sub
jle
icebp
lods
stos
sub
fidivrs
movsb
or
movsb
push
icebp
ret
and
fdivp
lods
stc
push
dec
jl
pop
jb
xchg
xor
daa
stos
inc
in
in
or
mov
jg
jno
aad
push
lock
adc
sbb
jle
int3
dec
lea
xchg
movb
insl
xor
sub
mov
xchg
xchg
cmp
inc
fwait
dec
rolb
out
push
in
cld
stc
std
adc
add
mov
out
enter
leave
jmp
js
jbe
cmp
pop
test
jb
out
push
or
test
lods
call
xchg
dec
inc
jl
add
or
jns
jns
push
xchg
xchg
iret
ljmp
or
mov
mov
mov
or
or
aad
pop
fisubl
rcll
fstpt
or
shlb
mov
stos
stos
pusha
movsb
jmp
inc
sar
jmp
adc
lods
fwait
push
push
add
cld
mov
jnp
dec
mulb
mov
push
aad
popf
and
mov
cmp
stos
fistps
ret
and
adc
test
cmpsl
push
lea
or
addr16
aas
mov
mov
xor
outsb
mov
sbb
mov
enter
pop
dec
jmp
adcb
ror
mov
cmpsb
in
push
rorl
sti
pop
int3
inc
add
mov
push
aaa
lea
out
and
jo
sbb
loopne
jp
sahf
push
or
testl
sahf
and
xor
adc
icebp
jmp
pop
push
mov
pop
pop
fidivs
divb
mov
movsb
jmp
pop
inc
sti
adc
gs
lods
add
mov
cmpsl
addr16
mov
mov
hlt
push
push
adc
test
insl
lods
xchg
add
fmull
ret
fcoml
aad
popa
jecxz
sub
pop
ja
mov
iret
or
fsubr
jmp
xor
dec
inc
test
jne
xor
sbb
cmc
add
push
fstl
pop
movsl
ljmp
aad
xor
sbb
aam
xor
add
sub
ds
fwait
pop
lds
dec
insb
insb
dec
cld
pop
mov
arpl
push
jge
addr16
test
xchg
xchg
out
dec
dec
adc
and
enter
cli
jbe
arpl
roll
or
lcall
js
cmp
in
pop
aad
adc
mov
gs
int
adc
pop
add
xchg
push
adc
or
fisttpll
mov
jg
xor
lret
in
out
dec
add
fnsave
adc
add
add
add
or
push
ret
inc
insl
mov
repnz
mov
push
adc
inc
xchg
shl
xchg
daa
lods
out
sbb
sub
jge
ds
push
or
scas
inc
cld
cli
jbe,pn
add
popa
xor
jg
adc
out
fnstcw
lret
into
adc
pop
or
imul
data16
popa
push
out
sub
xchg
jno
scas
pop
inc
adc
scas
leave
adc
outsb
fisttpl
or
std
fcmovu
or
fmul
push
mov
int3
inc
test
loop
test
movlps
mov
shrl
sbb
stos
aas
cli
adc
fdiv
pop
lds
pop
jo
fsubrs
test
pop
xchg
mov
push
lods
test
pop
lret
xchg
adc
sbb
push
sbb
pop
pusha
sbb
pusha
push
xor
dec
test
and
push
movsb
cmpl
nop
jns
jmp
enter
xchg
push
and
mov
loop
pop
rolb
hlt
jne
adc
xor
sbb
jns
dec
xor
mov
lods
cmp
fldenv
dec
mov
add
orl
outsb
inc
shlb
clc
mov
sbb
test
cltd
adcb
call
adc
pop
cs
bound
insl
jno
xor
mov
jecxz
data16
sub
mov
cwtl
xor
movb
xor
imul
ja
in
push
stos
not
out
adc
or
iret
cmpsl
inc
out
fnstsw
mov
movsb
clc
cmp
ret
loop
sbb
push
mov
mov
repz
add
and
jg
fisubrs
mov
sub
jg
mov
mov
insb
shlb
xchg
repnz
and
outsl
xchg
or
xor
adc
fs
or
je
lea
test
lahf
mov
xchg
pop
sub
pop
mov
xchg
push
pop
imul
push
xor
cmp
stc
gs
imul
in
imul
out
push
jae
bound
hlt
jl
addl
xchg
xchg
addr16
data16
sub
out
jae
xchg
push
cli
bound
ja
xchg
test
mov
fstps
xchg
das
push
in
clc
mov
add
icebp
mov
test
mov
sahf
cmp
stos
lret
xchg
push
scas
movsb
iret
sub
xlat
push
out
mov
inc
cmp
cmc
aaa
push
mov
inc
mov
dec
out
xchg
xchg
aam
push
lret
cld
and
dec
pop
and
and
enter
dec
repz
dec
icebp
adcb
adc
or
out
es
mov
pusha
out
aas
adc
mov
add
rorl
aad
bound
das
inc
movsl
xchg
fcmovu
roll
and
lock
mov
jmp
ret
fnstcw
lcall
xchg
push
pop
xchg
pop
lds
xor
lock
pop
sub
rcl
dec
enter
jecxz
push
mov
int3
psubw
inc
test
xchg
leave
insl
cmp
cmc
ja
adc
dec
movsb
loope
les
or
mov
dec
ret
dec
inc
push
mov
adc
leave
mov
lss
cmp
dec
call
sub
test
adc
mov
stc
jae
or
mov
stos
add
ja
movsl
xchg
pop
mov
addr16
ret
out
aad
xlat
jp
mov
inc
std
rcll
dec
sbb
mov
fists
fmull
mov
push
pop
icebp
mov
cmp
or
push
dec
fsubl
jne
mov
call
repnz
ljmp
pop
clc
mov
dec
jo
data16
xchg
or
std
out
sbb
insb
dec
mov
inc
jg
or
sub
and
aad
pushl
out
adc
and
lret
dec
gs
leave
pop
loope
pusha
xchg
fsubrl
pusha
jne
inc
push
inc
and
in
adc
aaa
adc
lahf
jp
rep
adcl
imul
subl
add
adc
or
ret
and
lea
inc
pop
inc
pop
add
gs
inc
and
inc
jne
push
jle
ret
jae
sub
dec
cld
mov
mov
jnp
pop
punpckhwd
sbb
cmpsl
adc
je
std
mov
rorb
inc
rclb
adc
add
jecxz
ror
scas
mov
lcall
scas
aas
pmulhw
jmp
rorb
mov
sbbb
xchg
inc
xor
xchg
sti
jo
mov
pushf
mov
or
cmp
mov
les
hlt
movsb
push
xor
repz
sbb
push
and
fcomps
insb
jnp
mov
hlt
fiadds
pop
xchg
arpl
adc
or
sub
or
adc
push
sti
mov
dec
repz
xor
out
mov
dec
mov
jmp
pop
inc
mov
mov
ret
in
mov
faddl
addr16
adc
test
lock
rcrb
sbb
dec
push
jne
dec
add
nop
hlt
dec
cmovb
rcll
addr16
or
jg
and
cmpl
and
add
xor
shl
movsb
out
mov
xchg
in
lea
inc
push
mov
sub
mov
pop
sarl
mov
xor
movsl
xchg
mov
stos
mov
std
arpl
pop
addr16
punpckhdq
in
fs
pop
fwait
jb
inc
in
pop
adc
cld
push
nop
test
lock
push
insl
push
or
inc
push
add
or
sahf
mov
test
xorb
fidivrl
mov
dec
and
add
jb
jge
sub
sbb
loop
fists
jnp
roll
and
or
mov
add
dec
in
dec
fwait
pushf
sbb
rcll
and
mov
add
mov
mov
or
sbb
inc
mov
adc
mov
and
popf
pop
inc
fnstsw
and
cmp
jo
push
int3
adc
and
sbb
test
cltd
lds
dec
and
and
fst
xor
aaa
sbb
imulb
jg
push
inc
sbb
pop
nop
movsb
mov
repz
sub
xor
pushf
inc
xor
repnz
leave
cwtl
jne
nop
and
and
aad
sti
jge
fldenv
mov
int
or
test
cmpsb
xor
add
fwait
sbb
xchg
fadd
mov
sbb
iret
call
in
mov
inc
cmp
xor
pop
mov
int3
jmp
sbb
clc
lret
inc
jge
sub
dec
imul
int
int3
sub
rcl
test
push
pop
loope
int3
pop
push
cmp
dec
jg
sahf
cmp
pop
cltd
push
mov
fcomi
leave
xlat
sub
outsb
push
jecxz
dec
or
aas
loope
jp
sbb
dec
dec
jnp
mov
cmpsl
call
pop
inc
fcomip
inc
out
sub
outsl
mov
loopne
movsl
and
push
add
out
aas
xor
xchg
adc
scas
pop
push
sub
sbb
daa
mov
mov
call
mov
xor
or
fcom
jae
push
pop
es
fstpl
lret
mov
lahf
inc
pusha
and
jmp
subb
lret
add
mov
jge
push
inc
jle
or
in
arpl
negb
sub
fiadds
jb
ljmp
ja
addb
cld
aas
and
inc
inc
sar
dec
call
xor
push
test
push
sbb
add
lret
div
scas
and
clc
xor
fsubs
sbb
insl
lea
pop
jne
nop
stc
fst
ljmp
cmp
jne
pop
pushf
inc
iret
and
add
stos
or
pop
rolb
shll
das
mov
sbbb
jae
lcall
jmp
dec
cli
stos
in
je
leave
mov
lret
enter
jnp
mov
in
stos
out
mov
push
adc
stos
mov
test
and
sbb
fists
inc
adc
loop
out
inc
mov
out
pusha
add
inc
roll
jne
orl
inc
das
pop
fidivs
jl
enter
adc
rolb
add
in
call
pop
or
pop
cmp
ret
shll
mov
scas
mov
ds
test
lea
push
fidivs
dec
lahf
insl
imul
loopne
icebp
bound
in
in
or
ljmp
add
add
sti
out
jnp
push
xor
xor
call
mov
arpl
push
mov
pop
sarl
jb
xlat
lods
push
sti
push
pushf
mov
xor
cli
mov
mov
in
daa
cltd
cwtl
add
js
imulb
ds
jmp
stos
rcll
mov
mov
addb
mov
pop
loopne
cmpl
sbb
push
rolb
cmpl
test
test
xor
pop
jge
push
jne
int3
sbb
dec
out
fcmovu
jne
push
xchg
loopne
rolb
imul
sub
int
adc
lods
jnp
ret
dec
testb
ja
les
mov
push
lods
or
and
outsl
insb
xor
fsubr
cmp
inc
cmp
shrb
gs
out
mov
cmpsl
insb
or
and
add
lcall
fwait
shl
mov
cmp
pusha
test
jno
fstpl
cmp
xor
lret
iret
fcmovne
fnstenv
out
push
push
sbb
mov
hlt
jno
xlat
adc
mov
movl
lods
lea
hlt
shl
adc
push
push
loope
popf
mov
adc
inc
lahf
mov
insb
jne
test
and
call
daa
jns
out
hlt
ljmp
shll
mov
sub
jg
dec
mov
pop
imul
jo
xchg
aam
dec
mov
sti
inc
daa
mov
mov
scas
in
cmpsb
testb
insl
ljmp
jbe
sub
int3
or
xchg
dec
insb
sub
adcl
clc
adc
jno
inc
loope
add
jl
inc
add
pop
or
sbb
sbb
pop
fucom
in
xor
jb
mov
out
sbb
xor
push
call
fistps
mov
adc
dec
pop
scas
inc
out
add
inc
data16
test
repnz
jmp
stos
pop
fistps
pop
inc
jo
push
add
scas
push
paddusb
sbb
das
or
jecxz
fnstsw
inc
and
rcrl
test
mov
cltd
sub
xor
out
sub
pop
lods
xlat
divl
sub
inc
call
clc
or
inc
call
xchg
pop
lea
sbb
dec
pop
mov
sub
dec
mov
dec
mov
and
dec
cmpsb
mov
test
dec
bnd
sbb
dec
popl
fwait
mov
aad
cmpsl
andl
mov
mul
lcall
pusha
add
in
outsb
in
xchg
leave
mov
mov
pop
jb
adc
outsb
xchg
ja
std
int3
mov
push
lret
div
sbb
push
in
jb
fdivr
fadds
or
push
jmp
push
imul
inc
mov
popa
xchg
jne
fwait
outsb
cmpsb
shlb
mov
cmp
lods
inc
mov
sub
lret
mov
xor
pop
cwtl
ret
jecxz
xchg
and
inc
enter
jecxz
cmp
enter
or
mov
cmpsl
inc
fidivs
loope
into
icebp
icebp
int3
adc
mov
add
shrb
mov
add
insl
addr16
dec
dec
jge
sub
push
inc
movsb
pusha
xchg
sbb
enter
mov
cmpsb
pop
into
xchg
mov
push
mov
pop
incl
push
pop
cmp
lret
in
inc
sub
jp
jl
fs
fidivl
pcmpeqw
out
out
xchg
push
scas
xchg
and
cs
cli
mov
ret
xorb
adc
push
jne
sub
sub
xor
jle
negl
or
inc
fdivs
adc
dec
aaa
push
shlb
out
mov
mov
xchg
movsl
add
adcb
js
dec
xchg
lcall
push
cmp
ret
fs
lock
and
dec
jg
pushf
mov
sbb
jbe
fildl
jle
lods
push
xchg
dec
mov
iret
lret
xchg
mov
inc
jno
and
xor
pushf
cmp
jb
and
xlat
ljmp
icebp
ja,pt
gs
fcom
xor
out
jnp
pop
cmpb
mov
mov
pushf
je
pop
pop
cwtl
mov
mov
fldt
mov
mov
outsb
jno
inc
inc
aad
ret
addl
and
pusha
xor
xchg
outsb
adc
lods
xchg
dec
pop
sbb
test
gs
fsts
pop
add
clc
add
add
or
push
inc
pop
push
or
xor
sbb
push
fstps
xchg
jp
push
or
lods
xchg
incb
add
xor
icebp
dec
push
jns
mov
shlb
scas
jmp
xor
js
mov
movsl
add
push
neg
fidivs
fistps
cli
popa
pusha
jne
rcrl
dec
outsb
mov
sbb
mov
popf
add
lea
jbe
sbb
and
mov
mov
jge
pop
stos
aas
sbb
shr
je
adc
lock
pop
testb
stos
sub
or
lods
inc
and
jecxz
fidivrl
ja
les
or
faddp
das
dec
mov
adc
adc
mov
jns
xchg
aad
lock
mov
push
test
xor
ror
int3
insb
inc
ficoms
pop
or
outsb
arpl
nop
xor
push
imul
lahf
dec
stc
daa
mov
push
lret
fimull
inc
fdivs
add
jbe
fistpl
clc
shll
pop
mov
xchg
mov
inc
sub
data16
jecxz
andb
pushf
nop
sub
test
dec
xor
push
rep
out
out
and
adc
xor
mov
mov
xor
add
pop
lock
leave
loop
aaa
insb
rorb
and
jnp
or
push
jmp
imul
mov
xchg
sbb
cmp
push
xor
imull
jge
add
sahf
pop
nop
xchg
xchg
xchg
movsb
dec
and
mov
sbb
in
inc
inc
imul
xor
lock
xchg
xchg
call
lcall
add
pop
les
ficoms
add
dec
mov
imul
inc
call
push
stos
leave
xchg
mov
insb
mov
cwtl
pop
xor
and
push
adc
insb
xchg
push
add
add
cmp
or
push
adc
jne
lods
jbe
add
mov
adc
lea
jle
insb
jb
nop
std
fimull
cli
push
inc
daa
bound
in
mov
fwait
pop
jl
push
add
push
ficompl
sarl
and
cltd
and
push
sub
test
loopne
arpl
rorl
push
out
rcll
gs
or
fwait
push
xor
mov
pop
mov
and
fwait
mov
mov
xchg
fwait
lahf
push
push
dec
pop
inc
dec
mov
cmp
push
pop
stos
sti
pop
pop
dec
into
idiv
jnp
ds
shll
mov
jecxz
ljmp
fcmovne
add
repnz
push
in
stos
add
mov
into
out
clc
pop
inc
in
lret
cmp
mov
cmp
or
das
sahf
push
pop
mov
pop
rcll
adc
and
sbb
je
loope
mov
rcrl
fwait
push
or
cmp
and
sbb
inc
mov
daa
shll
stos
andb
pusha
lea
xchg
nop
xor
add
loopne
ljmp
pushf
pop
mov
mov
andl
mov
imul
into
out
in
adc
ds
in
pop
sub
pop
xor
jg
aaa
xor
adc
push
pop
or
mov
lahf
cld
cmp
dec
lret
xchg
ja
mov
dec
cmc
imul
xor
insb
jae
jbe
roll
mov
fcmovnbe
lret
rcl
dec
mov
mov
movsb
shll
push
dec
mov
mov
jne
dec
into
pop
or
aaa
in
mov
out
adc
jbe
imul
loopne
dec
push
enter
fcmove
push
mov
mov
inc
cmp
sub
or
push
vorps
into
es
jecxz
mov
inc
ret
test
inc
fiaddl
iret
rcrl
mov
push
dec
xchg
lret
push
xchg
adcl
in
dec
aad
repnz
loop
dec
add
sti
daa
xchg
test
and
sbb
rcrl
in
jp
mov
lahf
cli
outsl
ljmp
hlt
mov
lret
push
fsqrt
repnz
fistpll
in
iret
and
xchg
mov
loope
icebp
cmp
cmovb
pop
orl
sub
pop
outsl
out
aaa
jae
pushf
lods
xor
add
add
add
fwait
out
mov
push
jae
push
sbb
sbb
xchg
xchg
or
xchg
xor
imul
jmp
lds
jl
cltd
jo
shl
mov
pop
sbb
pusha
ljmp
ficomps
out
xchg
mov
lea
shl
dec
pop
in
sub
jno
mov
sbb
add
xchg
jle
movsl
pop
inc
jl
and
shl
ret
lods
lahf
inc
or
or
gs
jnp
bound
pushf
jo
mov
pop
dec
mov
xor
mov
and
ret
or
mov
sahf
cltd
xchg
pop
jmp
cmp
xchg
iret
add
pop
add
add
mov
stos
push
fmul
push
sub
cmpsl
adc
push
lock
inc
ret
ja
push
outsb
out
lret
pop
loop
push
pop
mov
push
adc
push
adc
sbb
pop
inc
fwait
pusha
icebp
add
nop
fimull
aas
aad
loop
dec
inc
cmp
mov
push
inc
mov
sub
jl
loop
inc
push
push
lea
add
outsb
pop
ss
mov
cmp
loopnew
push
clc
inc
mov
stc
dec
cld
loop
lret
pop
std
cld
cld
push
mov
sbb
pop
jo
in
dec
pop
adc
push
push
lds
mov
mov
sbb
cwtl
cmp
roll
js
movsl
int
adc
movsl
lock
fwait
push
lods
xchg
mov
and
dec
subb
lea
and
dec
push
fidivs
pop
jge
or
xor
aad
test
leave
pop
ret
push
ds
lret
insl
lock
pop
dec
rcrb
push
or
mov
jne
in
dec
jae
or
int
pushf
gs
mov
xchg
icebp
or
xchg
lods
pop
pop
in
insl
sbb
dec
arpl
mov
sub
std
sbb
sbb
ret
je
int3
jg
popf
inc
adc
in
in
sbb
out
pop
cli
and
push
sub
jg
cmp
pusha
jbe
sti
xor
nop
test
in
inc
scas
dec
movsb
xchg
pop
es
mov
sub
jne
mov
xor
fwait
sub
lcall
pop
sub
adc
mov
mov
dec
mov
nop
fists
push
jecxz
xor
idivl
cmc
sub
into
dec
arpl
push
lock
fdivrp
adc
sub
xchg
repz
and
shlb
sub
cmpsl
repnz
int3
jns
mov
or
sub
and
popa
push
fidivs
push
std
dec
mov
mov
or
push
fdivrs
call
push
xchg
push
mov
sub
pushf
push
sbb
adc
xor
jl
jbe
inc
mov
pop
adc
ljmp
xchg
xchg
lahf
ficomps
adc
cld
jg
sbb
test
addr16
dec
es
out
push
mov
sti
mov
mov
in
and
push
fistpl
dec
cmp
sub
mov
mov
xchg
cmp
cmp
stc
or
pop
inc
adc
pop
orl
dec
out
das
leave
outsl
negl
pop
and
jno
adc
xchg
adc
xor
inc
pushw
dec
mov
shrl
testl
xor
mov
or
js
test
insl
sti
jo
out
pop
pop
sbb
pop
movsl
in
sub
bswap
mov
scas
std
xchg
outsb
mov
ljmp
pop
test
or
inc
int
adc
lds
pop
pushf
push
mov
and
sbbb
dec
jae
cmp
sti
clc
cs
in
and
popf
jo
push
push
add
cmpl
or
je
lods
add
in
lret
push
outsb
cmpsl
fdivs
jo
jb
push
in
xor
dec
or
das
adc
out
das
sarb
cwtl
sub
xchg
sbb
ror
xor
pop
push
pop
push
rolb
push
sub
inc
dec
cmp
adc
ret
mov
or
sub
cltd
push
je
insb
mov
push
mov
sbb
and
push
mov
imul
int3
insb
ljmp
fcoms
mov
outsl
sbb
mov
push
jecxz
mov
sub
push
filds
rorl
ss
std
iret
cmp
cld
add
add
clc
add
add
inc
data16
out
cmp
pop
js
push
aas
xchg
std
movsl
popf
mov
mov
xchg
imul
push
out
leave
sbb
push
clc
sbb
and
mov
in
rolb
sub
dec
mov
mov
in
aas
in
inc
icebp
jo
sub
xor
jle
mov
insl
xor
f2xm1
xchg
leave
jg
jbe
fcoml
fisttpll
mov
cmpsl
mov
adc
jmp
out
push
push
pop
or
faddp
cmp
sub
mov
push
and
mov
aad
lret
mov
scas
stos
sahf
xchg
inc
in
ja
out
mov
sub
pushf
pop
outsb
xchg
mov
clc
data16
sahf
xchg
jmp
aam
cmp
cmp
or
sub
mov
push
xor
mov
in
fcoml
fdiv
xchg
ljmp
lods
mov
into
movsl
test
into
push
loopne,pn
rcl
cmpsb
rcrl
mul
xchg
and
out
xchg
push
mov
and
insb
mov
sbb
mov
xor
xor
call
jg
push
jg
loop
repz
and
sub
dec
popfw
and
add
add
addb
imul
scas
pop
in
leave
hlt
lods
mov
pop
pop
mov
xor
repz
icebp
mov
push
mov
je
mov
int
and
fnstenv
fidivrs
popa
xor
fiaddl
fadds
inc
bnd
scas
imul
aam
in
rorb
sub
out
in
das
xchg
ljmp
fisubl
mov
push
sub
mov
xorb
test
ret
std
stos
dec
push
lock
jmp
cld
mov
fstpl
push
fnsave
push
fs
in
jns
mov
sar
orb
scas
mov
iret
pop
sti
mov
fiadds
fistps
mov
pop
sti
int3
and
mov
mov
out
ljmp
cld
loop
loope
sbb
aam
jns
vmwrite
inc
addr16
xchg
inc
orl
in
arpl
mov
push
cmp
push
lret
movsb
xchg
cld
inc
lea
push
sti
movsb
adc
pop
cmp
push
lds
in
sub
cmc
pop
or
pop
lcall
push
jns
imul
lret
fsubrl
movl
sub
and
loope
fnsave
sti
pop
xchg
lods
and
mov
pop
lds
lret
push
mov
mov
ja
xrelease
test
sub
mov
jmp
lret
mov
mov
add
jb
insl
cmp
push
and
dec
je
bswap
add
push
jecxz
test
sbb
or
jp
push
sub
cmp
mov
repnz
call
mov
in
adc
fnsave
mov
je
sahf
faddl
add
adc
add
xorl
sub
or
inc
mov
push
jbe
add
sub
mov
icebp
lods
in
mov
lea
and
cmpsb
mov
in
out
and
or
stos
and
lahf
mov
sahf
inc
out
push
mov
cwtl
out
frstor
mov
xor
and
push
xchg
into
iret
mov
mov
cwtl
push
cmpl
mov
sub
xchg
cmpsb
jb
push
or
adc
neg
lock
nop
xchg
lcall
add
pop
xchg
push
push
inc
js
stos
mov
xor
xor
mov
pop
lahf
dec
add
mov
add
adcb
popa
jl
cmpsb
aad
mov
sbb
shll
neg
inc
cli
iret
aaa
lret
int
out
loopne
cmp
fnsave
and
aas
popf
aaa
lea
aam
gs
pop
inc
aam
mov
pop
jns
push
xor
ja
fsubl
sub
bnd
cli
sbb
loopne
push
ss
leave
das
and
xor
dec
mov
inc
insb
xor
and
std
call
sti
xor
lcall
xchg
outsb
xor
jmp
mov
mov
lret
hlt
xor
insb
es
pop
pop
inc
sbb
insl
or
cli
lret
xlat
and
xorl
out
xchg
stos
xor
ja
jecxz
pop
test
xchg
cld
es
mov
jmp
fdivrp
das
into
add
sub
add
cmp
jecxz
mov
ret
mov
inc
sbb
iret
mov
inc
sbb
cli
fcomi
shlb
mov
shlb
xchg
sbb
sti
popl
ds
test
mov
rcrb
in
mov
lcall
cmp
jbe
scas
shrl
adc
pop
adc
test
sub
xchg
loop
mov
outsl
test
add
pop
ficoml
mov
inc
jne
pop
jg
mov
add
jmp
adc
xorb
in
in
dec
mov
adc
aam
fsubrs
cmpsb
sbb
hlt
sti
shll
pusha
cmpb
das
jl
jnp
rorb
imul
aam
aam
dec
pusha
cltd
mov
outsb
pop
sbb
dec
or
sbb
mov
sub
mov
movsb
mov
mov
dec
xchg
and
lods
loope
inc
iret
out
in
aaa
cld
sub
sbbb
jecxz
test
cs
and
xor
mov
mov
adc
or
jnp
add
insb
mov
jb
jnp
cwtl
cmp
int3
rorb
push
add
pushf
push
add
push
ja
xor
or
add
jg
mov
mov
mov
mov
in
xlat
cli
mov
je
inc
shll
jno
test
pusha
xchg
pop
pop
shll
pop
test
shll
jmp
in
xchg
loope
clc
sbb
es
rcrb
rorl
xor
push
inc
add
sarl
iret
les
lahf
gs
add
pop
je
shrl
jae
xchg
xchg
fsubrl
dec
push
mov
adc
sbb
stos
push
adc
inc
ds
lcall
sbbl
cmpsb
mov
sub
es
push
xchg
cmpl
add
push
inc
cmp
adcl
insl
push
fdivs
roll
fwait
pop
pop
jno
ss
shlb
cmp
jecxz
mov
fdivr
sbb
push
push
andl
xor
loopne
loope
insl
adc
xchg
sub
in
push
or
test
sbb
fst
jg
pop
imul
scas
xorb
stc
lcall
adc
jg
mov
jnp
jge
into
ds
es
daa
imul
bound
jl
lods
stos
jl
lea
shld
xor
lock
cmpsl
aad
js
cwtl
inc
jg
test
nop
push
insl
sub
sub
jg
insl
fistl
push
lcall
out
jnp
lcall
and
cld
out
xchg
dec
add
gs
sub
shrl
lock
xchg
pop
int3
push
xchg
mov
cmp
sbb
or
lcall
or
icebp
mov
and
push
or
insb
lods
add
pop
aas
ljmp
cmp
mov
sbb
lock
arpl
sbb
dec
popl
dec
mov
lret
pop
cmp
xchg
cwtl
addr16
mov
repnz
insb
sbb
outsb
lods
adc
mov
movsl
icebp
xchg
popa
mov
nop
sbb
data16
pop
popa
inc
inc
test
dec
loop
inc
cmp
inc
scas
sbb
out
andl
cmpl
mov
push
gs
cld
pop
xchg
mov
mov
fcomip
mov
loop
scas
mov
int
pusha
mov
js
mov
shlb
inc
hlt
filds
movsb
mov
stos
sbb
xor
xchg
fnstenv
subw
jp
subb
push
sub
adc
mov
xchg
scas
add
aam
pushf
jno
mov
inc
pop
adc
xor
xor
fadds
pop
sbb
inc
jae
pop
ja
and
or
mov
mov
sub
jg
movsl
xadd
xchg
lret
or
mov
push
jae
push
in
mov
cmp
loope
notl
fcmovb
outsb
push
and
sub
push
xor
shrl
scas
ss
xchg
insb
dec
mov
push
jle
cmp
sbb
adc
jns
sbbb
scas
subb
mov
sub
or
jo
imul
and
movsl
cmp
std
enter
pushf
xor
push
movl
jmp
aas
shr
rorl
out
fidivs
xor
add
clc
add
add
xchg
fsts
incl
mov
aas
rclb
mov
lahf
loope
lods
and
dec
mov
roll
cmp
pop
add
add
fucomi
xchg
dec
mov
fidivrl
hlt
pop
ret
lahf
cmpsl
xor
fucomi
dec
imull
xlat
xchg
loopne
sbbl
fdiv
sub
add
pop
xchg
xchg
out
inc
cmp
outsb
jecxz
cmc
imul
jb
pop
sti
ret
xchg
jns
mov
mov
fld
roll
cmpsb
push
mov
dec
test
lds
cmp
xchg
pop
pushl
in
add
repnz
sbb
fadds
pop
push
test
pop
int3
lret
or
sarl
xchg
in
mov
addr16
pop
out
aam
dec
mov
ja
ucomiss
xchg
jg
jp
nop
dec
fs
and
xor
les
pusha
inc
out
push
or
jae
mov
fcmovu
popf
sbb
jecxz
dec
inc
push
arpl
in
inc
repz
int
or
mov
enter
adc
loope
push
shlb
sahf
outsb
into
sti
test
mov
fsubrs
mov
popf
lods
test
popa
or
push
xor
pusha
incb
cmp
sahf
fadds
mull
or
jp
jl
dec
mov
mov
ds
cld
arpl
push
test
or
out
add
aad
lcall
sub
fucomi
xor
cwtl
shlb
inc
sub
cwtl
dec
in
stos
pop
aas
or
jmp
sub
mov
xor
fs
xchg
push
pop
or
inc
xor
mov
pop
mov
loop
or
pop
and
push
dec
scas
addr16
jnp
lock
ja
sbb
sub
sbb
xchg
mov
sub
popf
pop
nop
shrl
scas
xor
jnp
pop
sbb
clc
push
sub
cmp
dec
mov
pop
mov
in
adc
inc
push
add
add
icebp
push
mov
mov
roll
inc
mov
adc
jo
xchg
sahf
or
pop
pop
mov
mov
call
ror
or
popa
xchg
xor
fcoml
ficomps
lret
adc
cmp
pop
lahf
lahf
je
sub
sti
data16
sbb
mov
dec
stos
imul
rorb
inc
test
addb
xchg
adc
stc
mov
andl
add
js
sbb
dec
adc
jl
push
das
sti
mov
hlt
outsl
scas
sub
cld
pop
subl
mov
cmpsl
pop
outsb
imul
sbb
enter
loop
pop
out
jo
mov
xor
and
and
cmp
cmp
inc
in
jle
mov
cmc
lret
aad
lahf
jmp
lock
shll
sub
push
lret
jno
adc
xor
iret
data16
mov
mov
daa
sar
jle
adc
nop
stos
lret
push
out
lea
aam
mov
test
mov
iret
push
mov
test
inc
lods
shlb
sub
dec
lahf
fbstp
jp
adc
push
push
xchg
push
xchg
adc
jno
push
ss
sti
cmpl
movl
cmpsl
push
mov
dec
cmp
pop
ja
push
ret
xchg
xor
mov
hlt
dec
mov
pop
inc
and
mov
xlat
mov
cmc
jb
mov
sbb
adc
mov
inc
loopne
aad
notb
xchg
nop
cmpsb
mov
lahf
mov
dec
sub
mov
addr16
xor
jno
sub
shrb
adc
popf
imul
jle
outsl
scas
push
sbb
push
rclb
aaa
cmovae
inc
loop
notl
rorb
cltd
rcl
jecxz
iret
mov
jmp
mov
movhps
insb
xchg
mov
je
insl
dec
add
ret
imull
jbe
inc
xchg
fisubrs
sub
jl
add
ja
popf
pop
aad
insb
jl
dec
adc
dec
sbb
sahf
into
divl
push
data16
pusha
cmc
fcmovnu
or
mov
sahf
mov
push
hlt
sbb
adc
xor
push
mov
rcr
rorb
add
mov
and
push
test
or
lret
lcall
mov
inc
sbb
repz
sarl
fnstenv
add
clc
add
add
std
mov
lret
loopne
das
call
mov
xchg
lock
and
ljmp
fcomps
push
sahf
jecxz
dec
pop
aam
add
jmp
cmp
out
cmovb
fnstsw
in
mov
pusha
sbb
subl
adc
jge
xchg
sub
adc
sti
cmp
iret
adc
push
loopne
xor
xchg
pop
bound
das
ds
jl
test
sahf
push
aad
push
pop
lahf
imul
iret
aad
fdivp
out
outsb
setns
and
pop
jmp
imulb
aam
shrb
sub
ffree
mov
mov
sub
es
sbb
jp
int
and
int
mov
mov
sbb
cwtl
sub
imul
jmp
sti
mov
pop
jle
in
mov
mov
mov
and
or
nop
push
push
sbbl
cmc
jg
and
lea
fimull
in
das
test
and
pop
pop
dec
xlat
push
mov
and
insb
pop
iret
pop
sbb
in
mov
adcb
mov
fldcw
das
mov
jnp
je
xchg
pop
and
gs
movsl
jmp
inc
nop
push
ret
testb
test
and
sbb
lock
sti
in
sbbl
rol
fisubl
mov
mov
dec
clc
insl
add
mov
jnp
fsubl
lret
dec
jg
es
gs
int3
push
ret
loop
fs
and
xor
rcll
dec
pushf
fdivrl
or
sub
bound
cmpsl
pop
andl
das
xor
jl
fisubrs
push
test
lods
xchg
mov
out
adc
les
roll
fsubl
dec
outsb
pop
xchg
ja
nop
pop
lock
xchg
mov
dec
jns
in
mov
sub
add
and
cmove
sbb
gs
inc
pop
andb
mov
and
jge
mov
inc
cmp
daa
sub
popa
and
push
and
xchg
xchg
sbb
aad
push
in
adcb
cmp
call
loopne
mov
ss
mov
les
insl
or
sub
int3
mov
adc
test
ret
fisubs
lret
pusha
fdivrl
cwtl
loop
movsl
mov
or
push
shll
arpl
mov
pop
sbb
shl
sahf
inc
add
pop
mov
xor
add
arpl
aaa
mov
cld
cmc
leave
mov
fdivp
xor
test
pop
scas
jbe
mov
rolb
mov
inc
addb
or
mov
test
inc
nop
repnz
inc
aas
lods
lcall
pop
cmpsb
into
or
popf
gs
stos
out
inc
popa
aad
and
sub
xchg
dec
icebp
add
mov
stc
or
xchg
xor
pop
or
dec
inc
xchg
mov
je
and
dec
shr
fildl
mov
je
popa
push
repz
icebp
push
jecxz
push
jmp
mov
jg
out
mov
loope
add
jnp
inc
test
subb
leave
adc
lret
leave
mov
cmpsl
inc
je
cmp
inc
fildll
insl
shl
js
cmp
pop
and
push
cmp
pop
push
addl
or
mov
fs
cli
out
hlt
jae
lret
dec
pop
movsl
out
mov
fmull
out
pop
ret
outsl
inc
cmpsb
flds
jo
les
jle
mov
push
mov
out
popl
jo
cmp
and
imul
pop
pop
mov
jmp
mov
bound
mov
jmp
jo
mov
push
push
decl
popa
mov
xchg
lds
cmpsb
sbb
fsubrp
lods
imul
dec
clc
jg
mov
hlt
enter
jno
xor
inc
jg
lea
xchg
dec
cmp
dec
cmp
mov
lock
xor
xor
repnz
jnp
mov
dec
adc
mov
xor
mov
cmp
and
xchg
adc
inc
and
xor
pop
cmp
hlt
shl
jg
enter
out
cmp
std
leave
xlat
sub
out
push
dec
and
ret
imul
test
inc
test
shlb
cmp
add
mov
fucomip
fstp
sarl
add
add
add
or
xor
inc
and
lods
jmp
fisttpll
rorl
dec
or
xor
or
push
aaa
jnp
repz
fisubrs
mov
andb
pop
inc
cmp
fcmovb
adc
jae
xchg
call
idivl
test
dec
cmp
mov
test
orb
jne
loopne
inc
or
cmpsb
rclb
xchg
arpl
dec
test
pmaddwd
xlat
shrb
fs
int3
xorl
punpckhdq
shrl
daa
daa
inc
xchg
in
movsb
push
inc
cmp
into
sbb
mov
ret
imul
subl
adc
cmp
enter
loop
bound
mov
je
mov
inc
or
es
or
cli
xchg
icebp
mov
push
fisubs
add
mov
mov
push
les
das
mov
rolb
xchg
cmp
leave
pop
mov
jne
fwait
push
cli
stc
add
and
xchg
cltd
cld
push
rcrb
aas
mov
mov
out
xchg
xor
aad
xor
repnz
sbb
mov
sub
xlat
loop
lret
or
mov
sti
sub
jg
add
pop
and
fldl
push
icebp
jns
cwtl
ret
jno
aam
adc
fstps
orl
sahf
daa
ret
xor
js
in
cmp
dec
mov
inc
and
enter
fwait
popa
xor
mov
ss
sub
fbstp
xchg
mov
mov
repnz
mov
das
xchg
ds
sbbl
dec
mov
xorl
xchg
jno
or
push
fldl
xchg
stc
sbb
jb
shrl
sbb
inc
rep
xchg
xchg
mov
lahf
daa
pop
pop
stos
push
cmp
inc
mov
call
add
adc
cld
jmp
insb
roll
movsb
data16
jae
push
mov
jge
xor
cli
mov
mov
mov
and
rol
xor
ret
adc
ds
jbe
bound
push
jnp
mov
stc
iret
lcall
std
rcll
rcll
stos
fwait
mov
push
xchg
xchg
fidivrl
or
int
mov
shl
std
je
jo
mov
adcl
mov
stos
bound
insb
mov
and
mov
cmp
scas
sbb
xlat
insb
cld
out
cmp
adcl
test
out
push
stos
enter
adc
fdivl
loope
ret
mov
pop
cmp
jnp
sbb
and
testl
push
push
mov
push
call
repz
dec
loopne
lcall
dec
jbe
les
xchg
gs
call
fwait
not
push
jmp
lods
pop
pop
enter
lret
out
mov
lea
pop
lret
sub
mov
stos
adc
pop
jns
inc
imul
pop
ret
mov
adc
jae
cmp
outsl
dec
dec
push
lahf
sbb
xchg
outsl
clc
jno
or
out
xchg
cmpsb
or
mov
in
push
xlat
xor
xchg
push
push
stos
jns
das
sti
shlb
and
cltd
dec
outsb
add
push
std
cltd
into
mov
sub
xchg
fdivs
fs
push
add
nop
push
and
push
xchg
and
shlb
and
or
xchg
sbb
addr16
mov
sti
lock
orb
decb
xchg
adc
ret
outsl
add
dec
das
pushf
push
fisttpl
mov
arpl
int
cld
or
jge
or
mov
cmp
mov
add
sbb
adc
mov
stos
clc
cltd
mov
lds
bound
sahf
cltd
push
add
pop
rcll
stos
jnp
add
sbb
pusha
xchg
rcrl
fnop
pop
and
cwtl
lock
jne
inc
inc
loop
loop
out
into
jmp
or
cmp
add
xor
sti
adc
sub
icebp
outsl
pushf
push
push
sub
or
and
mov
pop
sub
ret
loope
pop
jbe
lea
fldl
jnp
push
sub
scas
sub
mov
lcall
leave
sbb
sub
cmpsl
fwait
cltd
in
pop
dec
negl
mov
sbb
add
clc
add
add
leave
cld
sbb
inc
movsb
fs
imull
ret
fwait
push
insl
cwtl
fstl
imul
insb
and
mov
mov
adc
dec
shlb
push
mov
std
mov
icebp
leave
daa
in
xchg
pop
xchg
je
and
in
shlw
inc
filds
adcl
addl
fcompl
cmp
add
ret
imul
fnstenv
sbb
lahf
shll
adc
outsl
dec
adc
sub
mov
add
xchg
vpshab
dec
mov
imul
mulb
xchg
push
daa
and
cmpb
movsl
jne
jle
sahf
xor
cltd
in
aad
mov
adc
xor
cli
pusha
and
test
and
and
or
cld
loop
int
iret
sub
push
pop
mov
in
mov
arpl
push
jae
jns
xor
imul
sub
loop
idiv
test
in
sbbl
popf
clc
sbb
xor
loopne
cmp
bound
out
push
icebp
xor
iret
mov
and
fnstenv
and
insb
lds
insb
fstl
xchg
jg
lock
mov
and
push
aas
addr16
pop
push
insl
sbb
inc
into
dec
jo
loope
outsb
out
push
shll
and
test
push
hlt
movsl
data16
es
mov
sbbb
pop
imul
inc
adc
cs
jl
adc
xchg
je
jbe
repz
nop
das
mov
mov
repz
rolb
pop
or
jecxz
rol
std
push
les
dec
add
inc
cld
or
jg
pop
dec
cmp
lahf
sbbb
dec
add
jl
cltd
pop
xchg
xchg
adc
jnp
aam
pop
sub
fisttps
aam
and
add
adc
into
loop
cld
dec
pop
jnp
iret
xchg
aas
arpl
push
fs
addr16
jge
and
inc
daa
cs
stos
pushf
sbb
jnp
aam
negl
jns
cmc
xor
sub
bound
mov
pop
cmp
test
ret
aaa
daa
cmp
arpl
jne
xor
aaa
xchg
xor
xor
adc
mov
xchg
mov
mov
and
xchg
sub
aaa
or
lea
jle
sbb
or
mov
push
arpl
iret
mov
mov
lods
popa
xchg
mov
jbe
movsl
add
mov
adc
cltd
pop
pop
inc
shrl
dec
test
repz
jl
dec
jmp
bound
pop
or
insl
aam
fadds
rep
mov
xchg
mulb
cmp
test
adc
push
jmp
pop
stos
cli
cs
hlt
cmc
xor
jge
fwait
mov
addr16
into
mov
xor
cmpsl
popa
jl
jns
popa
mov
jge
outsb
sbb
jb
or
fidivl
mov
jg
dec
sarl
imul
adc
mov
mov
and
xchg
bnd
lahf
dec
dec
stc
jecxz
pop
loop
testb
subl
mov
int
lds
jo
push
xchg
and
int
push
mov
das
test
movsl
lods
sbb
lcall
lea
iret
shl
inc
mov
stos
sbb
adc
mov
loopne
xchg
nop
rclb
inc
inc
cmc
mov
xchg
loope
insb
std
mov
pop
shlb
aad
xchg
inc
jmp
pop
xor
push
pop
push
rclb
outsl
jl
inc
shl
xchg
js
sti
push
clc
pop
je
in
mov
insl
sub
movsl
fmuls
sub
daa
fstpl
mov
xor
dec
adc
xchg
outsl
jno
mov
push
arpl
insl
jnp
out
sbb
mov
js
and
aad
mov
gs
scas
icebp
sbbb
dec
add
mov
adc
shll
test
or
inc
mov
into
cmp
xchg
jnp
imul
sbb
lods
lcall
scas
enter
in
jnp
mov
out
sarl
testl
xor
mov
sarl
xor
movsb
adc
push
stc
test
push
and
xchg
movsb
jge
xchg
sbbl
lret
or
lcall
mov
mov
xchg
loopne
push
ja
stos
test
in
mov
fdivp
cld
ds
daa
cmp
enter
inc
add
clc
add
add
inc
sub
xor
mov
rclb
sbb
fst
arpl
sub
push
xchg
clc
cmc
scas
pop
dec
js
xlat
rorl
dec
pop
or
imulb
xor
lret
pop
push
lds
sub
test
int
imul
lahf
leave
cmpsb
test
sti
pop
mov
fnstcw
test
xchg
xor
aad
outsb
and
adc
and
mov
pusha
mov
outsl
jbe,pn
push
xchg
in
pop
pushf
movsl
dec
and
jl
xchg
cld
imull
dec
add
out
add
ds
mov
add
sub
movsl
inc
std
aad
pusha
insl
js
xor
jnp
jbe
imul
adc
dec
xor
and
mov
xchg
in
mov
testb
pop
lret
or
mov
mov
xchg
sub
jl
inc
xor
lret
cld
mov
aam
push
jmp
push
out
hlt
sub
jp
cmp
aam
test
xor
push
popf
test
roll
insb
test
inc
bound
inc
imul
js
test
jg
imul
pop
repz
leave
fsubs
test
repnz
daa
sbb
mov
aad
add
dec
and
int
mov
fsts
icebp
sub
xor
jge
sahf
lret
push
daa
xchg
cmc
enter
stos
ret
lahf
test
dec
dec
and
aad
and
adcb
ljmp
movd
out
test
inc
lods
jl
pop
add
pop
pop
scas
popf
and
mov
fdivs
mov
adc
cmp
sbb
and
or
scas
pop
out
clc
push
fdivrl
mov
pop
aam
fldcw
jne
ja
pop
adc
andl
movsb
xchg
incb
jb
int
sub
scas
or
add
xchg
es
nop
push
xor
fistl
ja
push
push
xchg
push
or
movsl
inc
push
adc
pusha
out
sub
movsb
aad
mov
push
loopne
cmpsl
out
sbb
stos
pusha
lcall
push
mov
lcall
sbbb
ret
jge
out
xchg
sub
inc
cltd
aad
jae
push
addb
jge
jp
mov
xchg
mov
mov
push
cmp
push
data16
jecxz
insl
fsubs
rclb
dec
xchg
xchg
clc
negb
jge
clc
sub
xchg
shll
inc
hlt
push
ds
cli
sbb
aas
mov
cmpsb
mov
mov
jl
aam
lods
mov
mov
stos
xlat
aaa
xor
jecxz
cs
jp
je
dec
rcll
lcall
dec
leave
add
notl
jo
push
insb
ret
adc
cmp
insb
loopne
dec
adc
sub
loopne
mov
in
mov
enter
jge
cmp
xchg
cmpb
pop
adc
mov
repz
fwait
jns
mov
out
sub
pop
outsl
or
jp
xor
xor
ds
lret
out
cwtl
sub
jl
ror
fiadds
jp
xor
mov
fdiv
mov
pop
stos
sbb
cltd
jmp
mov
jecxz
inc
sub
xor
orb
mov
pop
clc
push
jle
adc
ljmp
imul
insb
subl
scas
mov
pop
jl
cmc
pushf
xlat
lret
and
fldenv
push
mov
and
es
mov
mov
mov
push
cli
rorb
or
cltd
inc
je
pop
imul
popa
fisubs
push
push
loope
jae
pop
push
jmp
cwtl
cs
push
stos
and
jmp
or
movsl
hlt
mov
mov
adc
add
cld
mov
push
fidivrl
jno
fcomps
xchg
inc
mov
lock
test
in
not
shrb
repz
adc
out
xlat
mov
mov
mov
lea
and
lea
push
lods
in
mov
ja
imul
js
bound
xchg
fistpll
in
and
test
sbb
cmp
in
adc
das
outsl
pop
ficompl
dec
imul
ljmp
cmc
jmp
sbbb
jae
movsl
dec
cmpsb
xor
jge
adc
out
dec
mov
imulb
pop
lret
xor
jg
sbbl
mov
add
add
insl
xlat
lcall
mov
adc
inc
xchg
dec
pop
out
dec
out
sbb
ds
sbb
icebp
inc
jno
int
or
xchg
push
add
lods
push
aaa
sar
pop
fwait
cmp
jmp
pushf
in
xchg
mov
adc
js
fiadds
imul
push
add
mov
or
push
data16
je
insb
push
push
jo
pop
or
sbb
into
psubq
subl
mov
cmc
sub
lds
xor
out
mov
imul
xor
test
xor
mov
ffree
adc
in
addr16
cmpsb
jns
test
rclb
dec
xlat
out
enter
jno
sub
in
mov
popa
xchg
sub
xor
and
sbb
jae,pn
mov
mov
push
fcomps
loop
push
repz
xor
pop
xlat
pop
shrl
jo
pushf
out
cltd
and
loope
pop
cld
push
aad
sub
adc
inc
adc
or
scas
ret
inc
sub
rorl
in
inc
adc
sub
inc
imul
out
dec
mov
movsb
jo
sahf
push
adc
mov
rolb
repnz
mov
sub
in
pop
dec
lcall
ret
mov
mov
add
push
mov
loope
jnp
push
or
shlb
rclb
dec
lahf
pop
popa
fisubl
data16
call
dec
or
aas
lret
jp
jnp
sbb
cltd
fucomp
pop
xchg
insb
stc
sbb
sbb
cmp
mov
shll
fsubrl
xor
mov
shrb
jnp
ds
rorb
ljmp
mov
das
pop
dec
nop
mov
sbb
hlt
flds
mov
jo
test
fs
pop
rcrl
cmc
jb
flds
ss
xor
pop
and
fcos
cld
repnz
push
stos
lds
lret
imul
lret
in
std
cmp
aas
idivl
sarl
and
lods
sbb
mov
repnz
cmpsl
lds
popl
pop
pop
adc
or
in
xorl
mov
adc
xchg
mov
pop
pop
jg
add
fbld
inc
gs
xor
pop
sbb
aaa
xchg
lods
arpl
mov
or
sub
and
popf
xchg
aas
aas
add
mov
sub
fwait
xor
dec
add
scas
lcall
int3
xlat
inc
push
rclb
jne
insb
pop
xchg
sub
xchg
lods
pop
hlt
mov
dec
scas
sahf
fs
cltd
int3
jmp
mov
push
cmp
fwait
test
xor
inc
push
fstpt
or
movb
stc
std
sbb
mov
add
cmp
push
insb
pusha
loopne
dec
int
adc
pop
ja
mov
scas
aad
push
jae,pt
push
pop
pop
mov
scas
sub
inc
dec
dec
jns
mov
orl
push
dec
pop
pop
test
insl
mov
add
mov
sub
icebp
pushf
inc
rol
add
adc
js
mov
adc
std
add
arpl
or
cld
std
lds
cmp
pop
pop
or
dec
adc
fisubrs
and
mov
in
mov
xor
mov
hlt
xchg
push
test
ret
sahf
idivl
xor
and
fcomps
jmp
mov
jbe
push
int3
cld
pop
pusha
imul
dec
jbe
or
jne
cwtl
lret
xchg
xor
fwait
movsb
rcl
cwtl
call
fldt
sub
stc
jbe
cltd
scas
and
aam
cmpsb
rcrb
out
push
cs
ljmp
pop
stos
push
jb
jp
cmp
aaa
outsb
dec
pop
fbld
add
mov
xor
outsl
orl
sbb
aam
mov
movsb
imul
mov
movsl
add
call
mov
mov
fcompl
jle
jle
ficoml
add
repz
dec
std
sub
fnsave
fwait
dec
and
rolb
mov
mov
inc
sbb
nop
popa
sbb
mov
push
inc
and
mov
shr
xor
push
push
shl
iret
adc
fistpll
lahf
sub
enter
sbb
pop
inc
mov
mov
mov
pushf
dec
lea
iret
fsubl
test
and
js
fdivl
xchg
call
inc
and
leave
fnclex
or
xchg
jmp
adc
pop
sahf
and
mov
add
clc
add
add
out
xchg
mov
mov
dec
cmp
cmp
push
adc
pop
mov
and
pop
mov
sub
dec
cmpsb
cmpsb
xchg
pop
push
mov
xor
xlat
lret
mov
cltd
js
jg
mov
pop
xor
out
shlb
rclb
dec
jb
fcompl
loopne
cwtl
sarb
dec
loop
mov
cwtl
orl
add
sub
mov
adcl
insb
sbbl
ror
cmp
or
je
pop
or
je
push
push
xorb
cld
scas
cmp
xor
pop
push
aam
aas
loop
jno
incb
sub
inc
mov
lock
dec
leave
or
fstps
sahf
loop
cmpsl
pop
mov
xlat
jp
mov
pop
adc
jg
jo
bt
pop
xchg
mov
fcmovnbe
je
push
pop
pop
push
ret
dec
ljmp
outsl
nop
mov
rorl
mov
sub
cmpsl
jns
in
lret
mov
enter
les
push
loope
cmpsl
xor
sbb
call
iret
add
aaa
inc
mov
sbb
cs
fisubrl
jecxz
jp
imul
cmp
leave
in
pop
divb
mov
fadds
lcall
jg
mov
ret
out
xchg
test
jno
pop
icebp
add
cs
ret
aas
mov
jl
mov
cmp
mov
sahf
sbb
dec
addr16
lret
ljmp
cmc
push
adc
adc
xchg
bound
sub
sbbb
xor
fstps
js
jae
aaa
mov
mov
test
iret
dec
lods
jb
int
cmc
sbb
xchg
sub
xchg
ljmp
cli
loope
andb
gs
mov
or
or
leave
xor
popf
in
xor
and
push
jg
fdiv
nop
shl
jno
cld
jo
cmpsb
dec
mov
sbb
jae
mov
rcll
imul
cmp
fwait
pushf
cwtl
orl
xchg
ret
jo
xorl
js
lcall
mov
fldt
iret
mov
in
jmp
or
lds
adcb
push
or
cmp
lods
dec
fst
clc
pusha
cmp
addr16
sbb
int
push
adc
jno
mov
mulb
mov
aam
sub
std
ret
add
cli
pusha
fimuls
mov
test
inc
roll
imull
and
movsb
daa
mov
push
mov
lret
pusha
movsb
cwtl
movsb
mov
popa
jl
int3
lahf
fbstp
or
inc
addr16
lret
dec
jno
jmp
jmp
call
rclb
insb
js
pop
mov
orb
cli
lcall
daa
imul
es
inc
xchg
mov
push
adc
push
imul
add
lret
rol
out
cmp
leave
cmp
shrl
mov
cmp
in
sbb
loopne
pop
or
or
aam
add
xor
add
je
pop
xchg
lahf
mov
in
js
rorl
dec
stos
lahf
jle
and
and
fists
stos
xchg
loop
outsb
inc
mov
ret
adc
adc
repz
push
in
mov
icebp
scas
push
and
repnz
sub
std
mov
addr16
jl
mov
lret
dec
push
add
aas
lret
mov
jno
pop
lea
mov
mov
test
stos
ret
mov
sbb
out
or
addr16
adc
mov
into
lret
jbe
repz
or
mov
into
in
outsl
clc
andl
sub
out
sahf
dec
fidivrs
aaa
mov
repnz
mov
leave
inc
push
mov
mov
fdivs
sbb
shll
pop
test
push
or
sub
pushf
sbb
repnz
inc
jl
inc
popa
jp
push
stos
popa
add
repz
mov
sbb
notb
jecxz
lods
outsl
mov
jo
mov
push
or
out
mov
sbb
cmp
daa
lds
mov
inc
inc
insl
xchg
mov
push
mov
test
es
push
addr16
into
xchg
aad
test
pusha
xchg
imul
pop
pop
loope
loope
fistpll
adcl
sbb
pusha
test
add
add
in
loopne
add
loop
xor
fisttpl
dec
mov
mov
and
ljmp
sahf
int
and
xchg
call
rclb
sbb
shll
sbb
and
mov
adc
cld
ljmp
pop
mov
outsl
pop
xor
lret
popa
xorb
inc
push
nop
push
or
repz
test
inc
dec
pop
inc
push
out
add
lock
jne
daa
pop
int3
sub
sbb
out
push
lcall
mov
inc
push
lahf
shll
loopne,pn
jo
hlt
movsl
or
sub
jmp
rorl
nop
cmc
jmp
push
mov
dec
jb
add
fnstsw
push
xchg
inc
push
loopne
or
iret
mov
pop
pop
gs
jb
cmpsl
and
popa
das
sbb
pop
notl
sti
out
and
pop
mov
xchg
sub
adc
hlt
mov
jl
and
call
or
jbe
addl
mov
idivl
loope
add
pushf
mov
cmp
cmp
mov
aas
jmp
enter
fimull
fcmove
bnd
push
pop
and
jle
xchg
js
jnp
mov
stc
sbb
or
sub
fimull
mov
outsl
das
xor
ds
std
pushf
insb
inc
cmpsl
inc
add
pop
imul
out
test
out
sbb
sub
push
pop
xchg
cmpsb
daa
sub
jno
ljmp
pop
mov
mov
push
dec
lds
push
out
jno
aaa
scas
push
dec
jns
push
dec
pushf
scas
jae
jo
xchg
out
iret
adc
popf
loope
fisttps
mov
icebp
into
dec
sub
jmp
pop
dec
loop
and
scas
lea
shrl
test
cmp
jne
adc
aam
std
loopne
in
cmp
sbb
imul
mov
xchg
push
in
sahf
std
push
in
scas
dec
lds
push
cli
push
popf
cwtl
xlat
mov
shrl
inc
xlat
loope
mov
stc
fcoms
sbb
cltd
push
push
jle
into
data16
adc
dec
stos
repnz
sbb
insl
les
dec
jl
mov
gs
or
clc
pop
jmp
in
jl
jle
jne
shlb
dec
pop
mov
jg
dec
cmp
out
xchg
addr16
ret
inc
xor
jecxz
xor
pop
xchg
and
shlb
ficomps
push
pop
pop
arpl
xchg
in
fwait
aad
out
outsl
int
fsts
mov
and
fisubrs
shlb
add
sbb
test
enter
sbb
decl
insl
leave
pop
cld
repnz
fdivl
xlat
repnz
adcl
sub
cli
xchg
mov
push
xchg
push
push
xchg
repnz
mov
push
hlt
jg
mov
arpl
pop
bound
iret
push
jnp
mov
pop
jmp
popa
mov
addb
addr16
daa
xchg
lret
push
sbb
jae
rcrl
pop
xor
aas
bnd
ljmp
sub
fdivrl
pop
loopne
neg
dec
and
and
cmp
call
jo
inc
rorl
inc
pop
add
push
sub
lea
sbb
mov
cmc
jbe
pop
std
ljmp
add
sub
ret
popa
or
push
pop
aad
push
sbb
in
cld
leave
xchg
ja
jl
movsl
fdivr
pop
inc
sahf
pop
lret
int
and
and
push
js
fidivrs
pop
notb
xchg
push
jl
fisttps
imul
pop
cmp
stos
mov
js
rorb
imul
xchg
mov
mov
lret
jl
pushf
and
pop
movsb
dec
mov
in
mov
out
add
rolb
dec
sub
cmpsl
xchg
mov
popa
or
and
mov
xchg
rcll
ja
sti
xor
orb
push
add
sarb
add
je
or
punpckhbw
bound
lds
push
mov
out
idivb
shlb
out
fxch
mov
repz
les
pop
lds
jg
pop
loop
or
in
popa
lcall
imul
movsb
sub
push
sbb
xor
adc
adc
sub
cmpsl
lods
push
shrl
jmp
loope
xchg
out
notl
sub
pop
add
clc
add
add
mov
and
pusha
lods
jno
and
imul
cmp
lret
inc
iret
pop
movsb
adc
adc
into
push
sub
and
das
mov
sub
inc
popf
push
hlt
loopne
mov
insl
iret
mov
jns
imul
pushf
fwait
mov
aad
outsb
ja
lds
fldpi
shl
in
adc
divb
repnz
cltd
inc
addb
mov
pop
gs
mov
mov
push
dec
mov
shrb
mov
add
cmc
mov
dec
and
enter
dec
outsl
sub
imull
jne
arpl
ret
movsl
cli
mov
addr16
gs
in
das
mov
xlat
mov
int
or
ret
cmc
movsb
jecxz
je
sub
repnz
lock
iret
sub
fldt
repnz
jbe
leave
jg
cmp
mov
xchg
lods
sbb
leave
imul
ss
cltd
jno
inc
sti
jns
out
insb
cwtl
stos
loop
cltd
sub
or
mov
and
or
movsb
lea
xlat
in
mov
sti
dec
les
jmp
dec
jge
movb
fmull
dec
fwait
pop
cmp
jns
xchg
stos
clc
xlat
and
daa
sbb
push
imul
xchg
pop
mov
insl
or
negl
mov
and
in
xchg
and
pop
js
mov
mov
std
ss
pusha
out
xchg
icebp
repnz
mov
pop
inc
lods
mov
lcall
jbe
rol
or
jnp
enter
fidivs
adc
adc
dec
mov
icebp
pushf
insl
dec
cmp
fists
gs
dec
push
rcl
out
je
dec
mov
fisttpll
arpl
cmpl
dec
std
sub
inc
loopne
cmpsl
xchg
inc
fwait
add
cmp
add
insb
pop
movsb
sbb
mov
jb
cld
mov
sbb
mov
and
dec
scas
lahf
in
dec
stc
fistl
dec
pop
jge
dec
jno
lods
ficoml
pop
int3
pop
test
xor
loopne
stos
aas
lock
jo
dec
xchg
sbb
popa
mov
pop
jl
call
jnp
jns
xor
adc
fs
mov
inc
aaa
ja
jle
loopne
and
xor
adc
imul
jg
pop
lea
adc
fs
xor
pushf
xchg
jmp
in
xchg
lret
or
out
sub
xchg
dec
stos
push
mov
cmpsl
inc
inc
fistps
shl
xlat
cmpsl
scas
or
push
mov
rsqrtps
mov
or
push
in
stos
xor
push
mov
dec
pushf
xchg
sarb
test
xor
cs
dec
sahf
into
add
ja
mov
pop
push
sbb
fsub
sub
ljmp
jne
or
iret
inc
mov
sbb
dec
cmp
sub
mov
dec
lds
xchg
and
xor
ret
mov
outsl
cmpsl
daa
insl
sbb
xor
mov
mov
fisttps
fbld
pop
add
and
add
adc
inc
call
mov
out
call
push
out
push
mov
cmp
jp
scas
stos
fwait
std
mov
fst
inc
inc
xchg
lret
sbb
push
insl
cmp
dec
cmp
jecxz
hlt
inc
mov
mov
mov
push
ja
or
mov
gs
mov
ror
std
add
mov
cli
lds
or
dec
push
in
testl
and
dec
shl
popl
inc
in
std
or
test
inc
mov
aas
lret
sbb
sarb
jl
shlb
cmp
or
clc
scas
popa
or
mov
hlt
arpl
sahf
and
shlb
insb
sub
into
icebp
dec
outsb
scas
push
cs
out
cmpsl
daa
inc
and
dec
jae
fcmovnb
mov
movsl
pushf
fwait
sbb
pop
decb
xor
add
mov
push
jnp
add
xor
xor
pop
sti
dec
mov
and
dec
in
ljmp
add
mov
jge
fisubs
xor
xchg
imul
cld
rcll
leave
fistl
sub
push
inc
insl
jl
stc
xchg
xchg
out
fsts
mov
rorb
cltd
mov
push
out
lods
insl
dec
aam
and
add
cmpsl
xchg
mov
pop
push
mov
inc
dec
fildl
cmp
loope
mov
sub
add
add
add
dec
insb
mov
cmc
in
das
das
jle
repnz
dec
repz
in
lock
shrb
call
in
jmp
xor
aas
ds
jne
out
sbb
cmp
sub
aas
pop
adc
aas
cwtl
push
jbe
push
push
push
pop
pop
push
xchg
lahf
push
or
stos
lea
js
dec
cmp
std
mov
push
cmpsl
cltd
jns
pop
sub
in
jmp
int3
ds
adc
dec
popf
jnp
jo
scas
es
jmp
popf
jg
xchg
adc
pushf
sub
movsb
loopne
lds
hlt
lcall
mov
lret
or
sbb
or
xor
mov
js
mov
imul
inc
pusha
mov
js
adcb
daa
stos
lods
xchg
cs
cmp
ficompl
lods
jmp
adc
je
jno
xchg
call
test
dec
movsb
mov
test
into
mov
ljmp
dec
adc
test
mov
lcall
add
sub
pop
test
cmp
dec
push
push
jns
fs
sub
cltd
out
out
mov
jb
mov
push
dec
jmp
sub
add
insl
idivl
push
out
dec
fidivrl
sbb
stos
std
mov
add
xchg
pusha
push
mov
sub
xor
xchg
xchg
clc
jmp
popl
pop
inc
jne
or
add
roll
xor
jo
jae
push
jo
and
push
mov
adc
in
lcall
into
arpl
cmp
iret
outsb
cmp
in
inc
mulb
movsl
cmpsb
mov
and
cmpsl
xor
mov
test
xor
rclb
sub
fidivs
cs
pop
cmovae
sti
lret
sbb
xor
mov
push
push
mov
mov
or
icebp
xchg
xchg
xchg
pop
loop
add
int
mov
rcll
enter
jo
popf
out
xchg
xchg
mov
cmp
mov
insb
push
cltd
fistl
popf
cmc
faddl
mov
adc
push
pop
inc
mov
xchg
xor
mov
clc
pop
xchg
fdivl
mov
js
lahf
sti
ja
xchg
jecxz
pop
rorb
push
aam
push
sbb
or
jb
jnp
cmp
jl
xchg
mov
and
inc
int
pop
testl
mov
dec
inc
mov
scas
push
lods
xor
push
mov
xchg
inc
in
test
adc
push
loopne
and
lret
sub
push
daa
ret
popa
or
sti
popa
xlat
dec
loope,pt
push
lcall
inc
jg
scas
xor
sbb
ret
push
scas
jne
fstpl
fldenv
call
and
in
pop
push
mov
add
stos
mov
xchg
sub
mov
inc
popf
dec
cs
cmpb
add
lret
mov
cli
movsl
xlat
mov
cmpsb
push
data16
fcoms
pusha
lahf
cmp
dec
stos
fdivrl
mov
inc
jbe
lea
jmp
fs
mov
push
loopne
pop
push
lods
inc
adc
pop
movsl
add
cmp
sti
sub
or
add
cmp
scas
push
icebp
jecxz
mov
xchg
test
mov
icebp
aad
pusha
dec
test
adc
ss
pushf
pop
inc
jecxz
aas
add
test
adc
fistps
out
rcll
sbb
pop
add
jp
negl
or
fnstcw
fs
mov
das
mul
sub
xor
dec
data16
decb
imul
add
sbb
loope
push
sub
xorl
xchg
daa
subl
rcr
movsl
pushf
and
xor
out
or
dec
lods
jle
cmpsb
and
xchg
mov
sub
fdivrp
and
outsl
ficoms
pop
movsl
movsb
subb
push
ss
sub
fmul
test
sbb
adc
negl
mov
fidivl
out
inc
adc
and
jns
mov
jmp
or
or
cld
setae
data16
xchg
cmp
sub
adc
mov
mov
insl
adcl
js
je
nop
mov
jg
mov
jp
ret
and
jp
xchg
add
clc
add
add
cltd
clc
dec
xlat
mov
push
lret
xchg
shrl
sub
mov
lea
pop
out
and
sahf
xchg
pop
jmp
outsl
mov
sbb
xchg
nop
pop
push
sbb
lock
test
mov
cmp
sbb
and
icebp
push
call
xchg
ja
xchg
popf
or
mov
arpl
push
xchg
jmp
outsl
fldt
jge
and
adc
jp
or
push
inc
das
in
leave
xchg
adc
push
xchg
lods
xor
sarl
out
mov
push
int
or
xor
aaa
ret
ret
addr16
outsb
fistpl
inc
inc
dec
jns
aad
push
je
ret
xchg
jl
add
lret
jmp
pop
lods
mov
mov
fwait
scas
jbe
jmp
test
sahf
imul
out
mov
xor
lods
das
mov
out
test
jo
imul
daa
adc
loop
mov
mov
inc
imul
loopne
clc
mov
fsubp
and
popa
aaa
sbb
daa
dec
adc
pusha
and
dec
xor
loopne
and
repz
imul
add
pop
test
ret
ret
sub
adc
js
scas
xor
dec
jb
sub
in
pusha
mov
hlt
push
in
sub
or
jg
call
in
jns
aad
dec
or
mov
lcall
jo
cltd
mov
jae
and
in
add
sub
adc
fstpt
push
pop
les
xchg
pop
bound
xchg
lret
das
cmp
jg
push
je
add
sbb
lret
in
pop
pop
sub
mov
mov
inc
jmp
insb
mov
cmc
push
iret
test
dec
mov
sbb
mov
jnp
xchg
jns
inc
push
fistps
add
jecxz
mov
insb
mov
je
insb
lods
popf
pop
push
daa
cmc
lcall
imul
cltd
dec
sahf
es
aaa
ja
jo
je
outsl
in
in
popw
mov
jge
xchg
fistl
in
outsb
and
pop
fnstsw
data16
cmpsl
add
mov
mov
sub
aas
je
push
repnz
rep
mov
pop
push
imul
into
fmull
rorl
dec
aaa
push
mov
scas
clc
lahf
and
sub
imul
push
ror
stc
dec
push
jnp
pop
andl
adc
push
or
adc
fsubrl
mov
cs
cld
call
adc
jbe
mov
mov
test
dec
call
jo
aas
or
mov
cmc
ds
pop
pop
outsb
call
arpl
sub
jmp
test
retw
in
sarl
or
mov
ljmp
ret
xchg
pusha
loop
mov
xchg
stc
xorl
cmp
into
rorb
bound
mov
insl
sub
out
xchg
push
jg
push
mov
pop
xor
adc
stc
mov
pop
repnz
and
mov
imul
pop
or
sbb
mov
dec
leave
out
in
sub
int3
rolb
pop
xor
das
hlt
inc
sbb
shl
adcb
xchg
ja
push
sub
mov
fstl
cmp
pop
sbb
in
pop
addb
movsb
and
sarb
sub
psrad
ror
mov
cmpsb
and
addr16
test
jl
mov
in
pop
pcmpeqw
fwait
pusha
popf
mov
fcmovnbe
xor
xor
call
pop
push
and
mov
stc
stos
push
lea
ret
push
dec
test
std
imul
sub
nop
mov
fsubrs
pop
mov
sub
in
mov
idiv
lcall
push
sub
xchg
outsl
xor
push
sub
loop
repz
pop
stos
sub
inc
push
test
cltd
add
in
and
xchg
add
ja
out
pushf
and
mov
scas
sar
lret
pushf
call
xor
hlt
aaa
ds
xchg
dec
outsb
ficoml
push
pop
fbld
sub
xor
push
les
xchg
mov
popa
pop
mov
jg
rcll
mov
xor
lahf
or
data16
daa
dec
cmpsb
lret
pop
lret
dec
lret
stos
nop
mov
inc
leave
loopne
clc
or
xor
mov
or
cmp
cmp
push
pop
mov
lahf
pop
fisubrl
clc
add
add
xchg
movsb
enter
mov
pminsw
sar
sar
lea
ret
and
hlt
adc
cmp
in
in
icebp
push
das
jmp
lcall
add
int3
mov
into
cmp
add
mov
xor
movsl
xchg
cli
cmp
inc
and
fstps
out
rcr
pusha
loopne
mov
inc
leave
xchg
adc
lcall
xchg
ret
fs
sbb
pushf
stos
sub
inc
out
stos
mov
dec
scas
mov
fwait
inc
inc
fildll
fisubrl
inc
inc
or
xor
pop
push
inc
push
movsl
mov
push
push
movsl
stos
lret
pop
push
xchg
aam
jns
loope
ja
mov
pop
jb
mov
adc
imul
in
inc
sub
inc
inc
repnz
sbb
mov
pop
xlat
loopne
cwtl
add
js
mov
mov
sbb
or
sarb
or
fists
inc
movsb
js
xlat
mov
mov
xchg
xchg
cmc
ds
sbb
pop
or
test
test
out
xchg
push
sub
cmp
and
in
fs
dec
or
inc
repnz
test
fsubrs
inc
mov
pusha
or
mov
jge
mov
or
cmp
imul
call
roll
scas
jno
add
mov
fldenv
sbb
mov
sbb
xor
test
cmc
cmpsl
inc
pop
pop
sbb
inc
int3
push
lock
fsts
decb
les
iret
ja
jl
mov
ror
out
pop
js
and
sub
lret
push
sub
xor
sub
scas
or
push
or
testl
jmp
mov
lahf
push
lret
or
pop
dec
insb
sub
dec
mov
mov
nop
sbb
dec
mov
sub
or
icebp
add
loop
cmc
mov
ror
fwait
mov
ret
loop
adc
mov
bound
mov
int3
movsb
jmp
jecxz
cli
out
les
xchg
sub
loopne
mov
sahf
je
mov
mov
xchg
mov
aas
fimuls
dec
fdivrs
stos
cmp
sub
movsl
into
test
cmp
daa
je
add
dec
jae
xchg
icebp
ds
into
or
fsts
jnp
movl
enter
sbb
or
call
out
jle
pop
push
iret
add
inc
adc
mov
aad
fisubl
mov
mov
mov
mov
pop
cmc
pop
cmp
jo
push
lea
ror
xchg
push
in
and
xchg
pop
in
int
loopne
aas
cmc
jmp
es
add
sti
gs
pop
cmpsb
rcr
push
dec
fadds
insb
negl
sub
test
push
add
xchg
in
mov
adc
adcb
xor
fwait
popf
aad
sbb
mov
pop
dec
adcl
repz
dec
ficomps
pop
xchg
sbb
sarl
xor
fdivrl
mov
lret
lahf
jl
adc
pop
mov
ret
adc
in
push
xchg
jbe
fs
dec
xor
xlat
inc
call
inc
scas
inc
jl
loopne
mov
outsl
pop
mov
mov
jne
insl
and
xchg
dec
push
dec
lea
pop
mov
aam
inc
gs
dec
repz
nop
lea
cmpl
add
fstpl
lea
inc
cmpsl
das
pushf
and
int
and
aad
xor
push
and
sub
inc
fs
repnz
sbb
in
cwtl
push
pop
fwait
sbb
and
rclb
dec
shrb
jae
movl
pusha
loope
int
mov
mov
int
or
out
jp
lahf
xchg
mov
stos
ret
leave
inc
das
mov
outsb
repz
ret
xchg
out
cmpsl
jae
fisubrl
mov
and
sub
inc
adc
and
outsb
dec
add
addr16
inc
or
sub
mov
out
push
ss
mov
shll
lods
je
sub
imul
add
adc
inc
ss
pop
or
pop
bndldx
out
push
jbe
ffree
push
je
mov
jg
test
out
xor
je
subl
add
movsl
lea
pushf
inc
jno
mov
xor
cmpsb
mov
jle
pop
mov
ss
and
outsb
push
hlt
lock
inc
and
mov
push
and
mov
adc
lea
rorb
fwait
jbe
jmp
push
cld
lods
cltd
jle
std
mov
inc
leave
rcrl
daa
aad
xchg
pop
sbb
sub
or
daa
out
cmp
cmp
mov
xor
add
orb
sbb
leave
and
mov
paddsb
mov
loopne
stos
mov
cmp
aad
sub
dec
nop
leave
push
adc
push
clc
ss
adc
xchg
cmp
pop
mov
pop
divb
and
sub
test
aad
lret
add
xchg
cmp
or
cmp
into
ficomps
cmp
outsb
aaa
test
pop
bound
dec
and
pop
rol
inc
dec
dec
push
addr16
add
jae
jle
test
repz
cmpsb
into
and
pop
push
xchg
jle
ja
mov
dec
mov
movsb
add
cs
out
ss
jae
inc
sti
sub
mov
fildll
data16
xchg
je
int
cmp
out
test
clc
outsl
cmp
and
jl
pop
shrb
jne
fmull
fimull
mov
mov
mov
mov
cmp
nop
mov
sahf
xchg
sti
pop
je
mov
jmp
mov
scas
in
mov
lret
pusha
xchg
addr16
lret
mov
popf
adc
and
or
inc
xchg
in
dec
add
cmpsb
imul
mov
xchg
mov
ret
out
imul
push
stos
cmp
xchg
adc
jne
sbb
aad
bound
cmp
xchg
clc
xor
call
mov
dec
adc
into
xchg
dec
test
fstp
adc
pop
mov
loope
mov
js
pusha
dec
test
test
sbb
mov
bound
sub
sub
mov
add
push
push
addl
test
adc
xor
xchg
movsb
push
lds
pushl
add
daa
xchg
mov
and
push
aas
test
in
xlat
and
sbb
jp
adc
stc
int3
std
push
inc
xor
sbb
out
pushf
inc
pop
fwait
mov
add
cmp
jnp
int
mov
adc
loopne
xchg
movsl
leave
jb
je
mov
mov
popf
adc
sbb
je
jmp
mov
push
popf
add
jecxz
cmp
and
inc
xchg
inc
ja
sbb
mov
inc
fidivrl
in
jmp
imull
aam
push
lret
mov
push
pop
pushf
ljmp
mov
push
pop
aam
fisubrl
mov
adc
pusha
jecxz
popf
sbb
jp
jle
popa
shrl
push
and
inc
jns
and
jno
popa
ficoml
mov
shll
repz
xor
lret
sbb
stos
insb
inc
xchg
inc
jp
push
xor
inc
in
mov
jle,pt
cmpsl
fimull
sbb
dec
xchg
lret
add
sub
sbb
jns
jp
addr16
outsb
jnp
xchg
lds
hlt
cli
sahf
into
fadds
mov
leave
xor
scas
sub
mov
std
xor
xchg
mov
cmp
pop
xchg
sub
test
mov
bound
das
xchg
movhps
mov
inc
das
jne
xchg
inc
inc
fwait
ja
cli
xor
mov
insb
ret
push
into
cli
fdivl
ret
xchg
movsl
and
sbb
sbb
aaa
inc
xchg
loope
pop
sub
int
cmc
in
jnp
jbe
dec
xchg
out
inc
pusha
sti
or
out
iret
or
cli
or
cmp
push
testl
and
sbb
js
scas
pop
adc
dec
subb
mov
out
cmpsl
imulb
add
out
loope
push
adc
and
cmc
mov
mov
mov
pop
fnstsw
ss
xlat
mov
dec
push
in
adc
sti
push
jns
pop
add
movsl
jl
mov
xor
ret
dec
pusha
sbb
pop
insl
dec
lods
cmp
or
negb
mov
enter
push
outsl
test
cltd
push
jnp
mov
into
lock
dec
mulb
repnz
out
cmpsl
mov
and
jae
add
add
add
inc
dec
jmp
jp
mov
jno
shrb
sti
out
jbe
daa
outsl
sbb
in
arpl
test
in
sub
insb
xchg
loop
push
adc
insl
sbb
mov
sbb
mov
aad
or
cmpsb
or
jnp
imul
std
jmp
in
leave
mov
mov
fildll
mov
push
cld
sub
adc
cwtl
and
loopne
shlb
movzwl
ds
repz
jb
push
lret
add
nop
xchg
push
or
nop
mov
sbb
enter
sub
fwait
dec
hlt
call
outsb
cltd
iret
cld
xchg
pop
ss
mov
mov
inc
jg
sbb
adc
mov
mov
insl
xchg
outsl
fs
in
mov
fwait
cwtl
push
sub
popf
popf
pushf
jbe
xor
add
push
enter
jg
ficomps
leave
gs
stc
lods
inc
mov
xor
cmp
sbb
rclb
in
arpl
aaa
xor
int3
mov
pop
ljmp
xchg
inc
lods
or
fcoms
mov
pop
nop
insl
inc
rolb
in
incl
push
repnz
mov
adc
ret
xchg
and
cltd
cld
subb
ficoml
xchg
out
into
add
cmp
idivl
sub
stos
sbb
or
scas
enter
jo
movsl
push
xchg
inc
fstpt
arpl
adc
mov
jnp
mov
out
push
in
mov
ljmp
sbb
shrb
mov
fistpll
sarb
ja
adc
aad
in
sbb
insb
xchg
mov
xchg
ja
js
inc
sub
xlat
data16
in
or
jbe
std
or
fstps
push
jnp
mov
push
push
addr16
mov
sub
mov
lcall
scas
call
adc
rorb
xchg
mov
test
pop
mov
stos
xor
cld
int3
inc
sahf
mov
adc
sbb
imulb
add
enter
cmpxchg
mov
pop
sub
in
fistl
dec
jge
mov
jae
mov
fdivrp
adc
push
int3
mov
lods
loop
repnz
pop
out
cmp
das
hlt
or
and
sbb
xor
push
aam
gs
adcl
insl
ret
js
xchg
pop
mov
inc
pop
mov
aad
inc
fcomi
daa
jp
lods
lods
or
xlat
cs
xchg
leave
xlat
sub
lods
sahf
daa
jbe
lahf
jnp
and
addr16
xor
mov
mov
ljmp
ficomps
mov
cwtl
out
dec
pop
aad
sbb
lods
imul
das
jl
or
mov
push
popf
sbb
adc
fidivrs
dec
sub
pushf
mov
ljmp
mov
vpmacssww
push
hlt
add
lret
sub
in
sub
pop
fistpl
jo
push
ficomps
inc
cmpsb
out
xlat
mov
or
cmp
leave
fistpl
fstps
and
dec
sub
inc
inc
jbe
std
dec
jge
fnsave
jnp
fmull
xchg
outsl
pushf
jno
mov
loopne
stos
xor
iret
icebp
xchg
cmp
mov
jns
jae
sbb
xchg
pop
or
xchg
dec
sarl
out
dec
cmp
ja
sub
dec
pop
movsb
arpl
inc
dec
fadd
pop
test
data16
ss
loope
fstpt
dec
scas
fsub
lret
lahf
ret
fidivrl
subl
pop
mov
test
icebp
mov
mov
adc
cli
jp
adc
dec
jbe
mov
and
dec
js
inc
ret
jmp
clc
jnp
lret
sub
outsb
ja
sub
jg
or
mov
leave
rcrb
cmpsb
loop
pop
mov
lods
das
sub
aas
cmp
mov
sbb
add
cmp
inc
arpl
push
adcl
fidivrl
outsb
lret
ljmp
cmp
pusha
inc
xchg
in
lds
in
mov
fistpl
jbe
adc
aam
sahf
pusha
sar
mov
mov
lret
int3
cmc
xchg
mov
xchg
cs
sbb
in
les
inc
cwtl
mov
mov
mov
add
cld
jno
add
clc
add
add
mov
cmp
aaa
sbb
push
rcr
shl
pop
js
mov
jns
mov
das
fucomi
mov
into
call
mov
cmp
iret
inc
xlat
sbb
in
incb
arpl
xor
push
fcomps
or
scas
andnps
sar
into
out
or
or
repnz
inc
pop
pop
clc
xchg
shlb
jg
push
sbb
popf
loop
mov
cmpsb
mov
jge
adc
out
push
es
inc
fstl
push
insb
daa
jo
mov
loop
loopne
scas
mov
jl
dec
adc
adc
les
jmp
popf
push
push
out
sbb
xchg
insl
mov
mov
adc
mov
push
out
daa
jg
mov
fs
lret
add
data16
adc
jno
enter
dec
lret
in
scas
stos
fwait
mov
inc
adc
mov
mov
mov
out
stos
cld
cmp
enter
inc
jbe
adc
mov
push
add
dec
lods
mov
adc
mov
pusha
mov
adc
pop
inc
outsl
sub
lret
aaa
pop
push
dec
lods
cmp
xor
or
xor
push
push
hlt
add
add
pop
scas
push
lds
test
mov
rcl
jg
mov
jg
or
inc
pop
lock
adc
cmp
dec
nop/reserved
stos
js
mov
test
ds
nop
imul
ret
cltd
fdivl
pop
mov
xor
imul
xchg
mov
testl
or
cmp
in
pop
int3
fnstenv
mov
push
mov
mov
jb
mov
sbb
mov
adc
mov
sbb
inc
dec
ret
push
dec
ficoms
and
add
fs
call
loop
sub
pop
stos
jno
adc
and
adc
enter
mov
ds
pop
xchg
out
loope
dec
mov
pop
movsb
mov
dec
dec
fnstsw
and
jmp
mov
xor
lds
mov
scas
mov
insb
sbb
adc
lods
pop
sti
div
inc
ljmp
cmc
pop
push
xor
lods
dec
shll
fcmovnu
cwtl
shlb
addr16
sub
pusha
jb
jae
mov
push
push
and
out
xor
add
dec
out
rclb
nop
jae
sub
dec
outsl
mov
pushf
into
cmpsl
jge
cwtl
icebp
jl
repnz
aas
hlt
cmp
sahf
nop
in
mov
enter
mov
pop
imul
int3
inc
enter
add
add
mov
inc
test
in
fisttps
jmp
lea
out
loop
repz
mov
lods
cmpsl
jno
cwtl
jno
push
aaa
popf
cli
add
mov
xchg
adc
adc
mov
cmp
xor
dec
lcall
enter
into
fmul
adc
lods
icebp
popa
andb
pop
xor
xor
mov
test
pop
mov
aaa
push
jbe
pop
adc
xor
pop
mov
jp
data16
sbb
aam
imul
inc
std
shlb
mov
xchg
adc
loopne
repnz
mov
rol
mov
lret
xlat
pop
imul
out
movsb
cmp
mov
test
xlat
push
inc
shll
inc
ss
cmp
test
inc
jno
inc
scas
mov
test
sub
jb
push
sub
or
pop
js
mov
adc
mov
fmul
scas
fs
mov
repz
inc
clc
sub
ss
mov
sbbl
mov
jno
loop
sbb
xchg
pop
mov
fstps
or
cmp
mov
cli
shlb
push
pop
notb
repz
js
fidivrl
push
adc
xor
dec
pop
gs
sbb
cmp
mov
outsl
cmc
ss
inc
addr16
lods
dec
or
fldenv
add
add
cmp
sahf
pop
pop
shrl
cli
gs
leave
sti
lods
subb
mov
outsl
xchg
loop
inc
push
ljmp
fwait
push
pop
inc
out
inc
inc
xchg
or
out
push
testb
and
jbe
jl
push
arpl
xor
xchg
cmc
bound
ds
mov
lea
clc
sub
or
and
inc
mov
daa
xor
push
sub
xchg
js
fwait
cmp
push
popa
arpl
mov
and
jge
add
add
add
jo
cmp
xor
test
js
mov
or
lods
lret
loope
outsl
repz
iret
adc
imul
xor
movsb
jg
scas
mov
cld
mov
mov
aad
icebp
xlat
stos
loopne
pop
jp
bound
shrl
add
push
xor
add
sbb
aam
or
pop
enter
mov
jne
cmp
jecxz
es
sub
lods
fists
sbb
call
cs
inc
mov
or
xor
js
xchg
xchg
pop
mov
data16
data16
gs
leave
aad
cwtl
lret
js
mov
jns
lret
push
sub
xor
ret
mov
push
and
mov
outsb
adc
insb
push
inc
out
xchg
arpl
push
jnp
int
sbb
fsubrp
jmp
outsl
push
push
or
xor
lods
push
fildll
icebp
insb
push
inc
sub
lea
in
pusha
cmpl
test
sbb
add
sbb
sbb
or
insb
add
cmp
sub
push
add
adc
pop
and
push
dec
xchg
and
fnsave
repnz
lods
gs
inc
cltd
jb
or
pop
shlb
sti
stc
ljmp
pop
sub
je
or
xor
adc
and
inc
cli
js
and
rcrl
mov
sahf
push
pop
shl
cld
add
cmp
enter
ret
in
imul
push
sub
add
mov
adc
jae
ss
jp
lods
mov
push
out
cmp
adc
test
mov
popa
outsb
idivb
fdivrs
inc
mov
mov
mov
aam
jecxz
scas
mov
fisubrs
sbb
sar
sub
hlt
cmpsl
cmp
loope
into
lret
mov
imul
ljmp
push
leave
insl
ret
stc
xchg
jae
lods
call
jbe
sbb
fisubs
out
cmp
push
scas
sbb
stos
jae
popf
loopne
mov
and
loope
dec
mov
push
cmp
mov
push
andl
mov
jp
sub
dec
mov
dec
loopne
pop
test
push
iret
jo
cmc
or
ja
mov
mov
sahf
mov
sbb
xlat
sti
cli
outsl
decl
popf
sub
popf
ja
adc
adc
mov
adc
or
ds
shrb
mov
ja
fs
xor
arpl
mov
pop
lock
jmp
push
lods
mov
pop
mov
rep
mov
pop
jecxz
xchg
push
and
pop
insb
dec
cli
xchg
sub
orl
mov
out
mov
into
dec
rcrl
inc
xlat
in
mov
mov
xchg
dec
mov
sti
cmp
xchg
es
std
jg
mov
into
aaa
mov
inc
sub
cmp
loop
push
mov
fidivrl
or
sbb
inc
dec
cmpsb
push
adc
ljmp
cmp
pop
jb
test
xchg
scas
test
xchg
xchg
and
push
stos
sbb
inc
dec
mov
imul
lahf
sub
sarl
mov
cmp
cli
cwtl
es
and
xchg
jno
pop
aaa
inc
xchg
mov
int3
and
or
inc
push
fcoml
add
push
sbb
cmp
lcall
js
sbb
nop
mov
js
pop
dec
mov
daa
jecxz
dec
leave
inc
mov
aaa
cmpsb
imul
ja
xchg
lods
cld
sub
jl
push
fmul
repnz
adc
sbb
psllq
lahf
sub
push
cltd
mov
leave
xor
ffree
jns
mov
in
clc
int
dec
dec
jnp
outsb
inc
cmp
bound
adc
cmpl
test
mov
mov
fidivl
xor
pop
cmc
es
test
imul
add
mov
sub
stc
popa
outsb
mov
add
call
dec
rcrl
or
dec
sub
mov
dec
fsubs
lahf
fnstenv
sbb
pop
ljmp
sbb
and
fldl
inc
sti
aas
jb
add
inc
fcomi
pop
popa
addb
clc
add
add
movsb
movsl
inc
xchg
repnz
mov
push
loopne
push
add
xchg
les
add
outsb
mov
test
call
mov
stc
inc
mov
jae
lret
and
and
jns
sbb
aad
cltd
bound
sbb
lds
add
sub
pop
test
lret
cmp
in
iret
cmp
in
add
inc
xchg
mov
xchg
jmp
cs
icebp
mov
jmp
outsb
sub
or
in
and
enter
sub
or
jmp
ret
cwtl
mov
inc
imul
outsl
notl
xor
not
xchg
es
jb
aad
mov
mov
scas
push
pop
mov
sarb
xchg
lcall
push
in
hlt
inc
jno
push
mov
repz
mov
leave
mov
fucomp
inc
adc
dec
shlb
test
push
in
aam
inc
jnp
or
cmp
pop
aas
mov
aas
mov
int3
push
xchg
push
test
das
out
mov
cmp
xlat
mov
mov
xchg
fcomps
inc
sahf
je
jno
in
incb
test
mov
les
sbb
sub
imul
push
lods
daa
fldlg2
jle
cmpsl
bound
adc
push
test
or
xchg
gs
add
cmp
push
je
sarl
xchg
insl
test
test
popf
out
insl
and
loop
push
xchg
out
jecxz
xchg
jb
pop
call
ja
cltd
stos
rcl
dec
mov
mov
inc
lods
loope
mov
fldt
jns
push
cmp
jno
and
jns
mov
add
pop
js
ret
out
xchg
lret
sarl
or
mov
aaa
add
push
jmp
lock
lret
xchg
mov
xchg
mov
clc
add
cmovle
xlat
inc
push
mov
mov
inc
sbb
sub
mov
int
data16
testl
mov
cmc
jmp
mov
pop
xor
popf
inc
jo
push
or
divl
xor
test
dec
lods
xor
add
fidivs
push
in
mov
insb
add
mov
sbb
arpl
jmp
mov
xchg
out
sti
notb
movsb
shl
les
aas
shrl
sbb
xorl
fcmove
mov
push
sbb
xchg
bound
ja
subl
xchg
ss
test
add
jbe
icebp
mov
mov
jmp
stc
insl
loope
jne
sub
dec
das
loopne
mov
pushf
arpl
fcomp
addl
outsl
sbb
jg
fisubl
rclb
jmp
lea
pushf
inc
xchg
stos
xchg
push
and
fcmovnbe
sahf
movsl
or
and
frstor
xlat
fisttps
sub
push
shll
repz
dec
pop
push
lods
stos
scas
fidivrs
adc
das
shrb
pop
cmp
adc
dec
cli
call
mov
jb
and
or
test
ljmp
ss
rclb
ds
mov
xor
xchg
lds
or
mov
lods
mov
cmpsl
aad
xchg
repnz
push
pushf
fstl
nop
sub
push
shr
ficompl
pop
push
push
shrl
cltd
popf
xchg
xchg
pop
dec
fstl
cs
fisttps
add
shlb
test
xchg
jne
outsb
pushf
push
lret
cmp
adc
and
fdivrl
pusha
mov
comiss
mov
sbb
sub
js
adc
sbb
movsl
push
ljmp
pop
cltd
jecxz
sub
out
test
ljmp
ljmp
das
loope
sbb
pop
xchg
iret
mov
outsb
cld
jae
and
jno
jb
or
pop
and
pop
jl
stos
fs
cmp
pop
dec
or
dec
pushl
inc
mov
add
pop
aad
dec
test
adc
shll
dec
aas
dec
mov
jae
hlt
out
push
pushf
aaa
mov
lahf
int
cmpl
xorl
rcll
dec
adc
mov
mov
lret
sbb
lods
or
shlb
lock
je
ljmp
jne
rorl
inc
sbb
aam
adc
pop
sahf
xchg
in
imul
into
cmp
repnz
dec
push
xor
cwtl
inc
add
add
mov
or
mov
pop
xchg
add
add
add
out
xchg
xchg
jmp
mov
adc
mov
insl
sub
add
mov
cmpsl
push
insl
pop
mov
out
repz
int
fisubrl
pop
and
insl
fneni(8087
xor
adc
xchg
push
scas
scas
sbb
dec
push
sti
and
jae
das
sbb
jmp
dec
mov
sub
jp
push
cmp
pop
adc
out
cmp
dec
fldcw
pop
mov
add
xchg
ja
jmp
hlt
rorb
test
je
aaa
push
pop
js
pop
ds
xor
dec
call
mov
leave
cmp
bound
pushf
hlt
dec
jne
fnstsw
mov
fdivrs
push
in
xchg
mov
rcr
and
mov
jne
and
xor
idivl
outsb
in
insl
mov
add
and
adc
mov
pop
std
ja
shlb
fcomp
mov
pop
add
jecxz
ret
cmp
dec
cmp
and
pusha
inc
addr16
out
or
ljmp
hlt
or
js
das
ja
xchg
int3
cmp
stos
stos
and
test
arpl
lahf
cmp
dec
out
clc
and
push
mov
push
mov
scas
cld
dec
mov
leave
insb
fisubrl
out
andb
xchg
ljmp
xor
sub
or
or
add
shrb
mov
jge
mov
jg
or
add
shl
testl
push
scas
lods
cmc
or
mov
sub
outsl
ss
daa
dec
push
mov
mov
cmp
in
jo
cmp
int3
lods
or
ss
je
insl
lods
jnp
inc
push
in
imul
cmc
sahf
ret
push
jb
std
fisubl
stos
jne
data16
ss
push
xchg
dec
insl
mov
lcall
dec
cmp
ljmp
mov
shll
cmp
and
inc
mov
int3
ret
sbb
push
movsl
les
mov
or
cmp
push
sahf
bound
jno
push
mov
sub
sbb
inc
inc
or
adc
push
push
ds
jl
lret
pop
push
test
jno
out
push
nop
enter
shll
mull
or
in
cmp
jle
aad
inc
sub
pop
ficoms
ds
pop
add
dec
and
dec
rclb
push
lahf
jmp
stos
cmp
mov
mov
iret
pop
testl
pushl
lea
into
mov
aaa
ficomps
push
push
push
pop
pop
icebp
xchg
sbb
inc
cld
mov
mov
pop
jle
addr16
push
pop
lcall
hlt
push
in
test
lcall
add
push
fisubs
out
enter
test
test
dec
into
mov
sub
stos
mov
out
or
sub
mov
and
dec
pop
adc
jp
add
dec
cmpb
int3
aaa
sbb
rorl
lahf
mov
or
cmc
cwtl
lcall
aam
popf
iret
mov
jns
jno
jno
dec
mov
xchg
mov
dec
aas
push
push
sar
fadds
or
mulb
adc
and
ds
test
in
push
cmp
ljmp
pop
jl
jno
adc
push
xchg
inc
stos
loopne
int
rolb
sbb
or
divl
sub
pop
lds
fldenv
or
push
es
push
xor
out
in
jle
lock
jg
outsl
inc
or
push
mov
fs
pop
mov
dec
mov
mov
xchg
lods
sbb
iret
mov
je
jl
jle
ret
or
jae
and
sub
pop
sub
mov
aam
cmpsb
mov
adc
repnz
jecxz
push
gs
rcr
in
or
aaa
loopne
int3
mov
sahf
dec
pop
aam
test
inc
arpl
mov
mov
cs
sbb
pop
rcl
jno
into
adc
out
insb
cmpsl
shl
out
xchg
jo
or
imul
pop
jge
test
xchg
test
sub
outsb
jno
xor
mov
push
ss
movsb
icebp
or
and
bound
lods
jle
pop
lea
or
and
sbb
jne
shll
popa
xorl
mov
push
xchg
repnz
push
loop
xchg
xchg
call
push
jge
pop
xchg
adc
pop
mov
cmp
orb
add
add
pop
mov
xchg
call
stos
dec
adc
inc
push
sub
sub
out
add
out
pop
int
leave
push
xor
inc
fwait
stc
inc
pushf
pop
push
ja
mov
inc
xor
lds
ja
mov
fidivs
inc
cmp
cwtl
icebp
in
nop
pop
popl
test
xor
jb
jno
pushf
test
cmpsl
in
dec
push
add
sti
push
inc
ret
frstor
xor
mov
xlat
inc
std
mov
push
mov
lea
xor
cwtl
icebp
xor
mov
fiadds
shll
dec
lahf
fwait
push
fs
inc
mov
push
fiaddl
dec
mov
pusha
jle
add
push
xor
fsubrp
mov
xor
mov
dec
sbb
mov
lea
insl
push
inc
mov
jne,pt
ja
out
arpl
cmp
popa
jmp
cmc
inc
jge
push
push
inc
mov
clc
mov
xor
leave
mov
pushf
xor
scas
add
dec
ds
jmp
mov
sbb
fs
and
sbb
xchg
mov
xor
xchg
push
jb
loope
dec
or
dec
out
ds
cmpsl
jo
mov
in
xlat
cmp
imul
inc
sbb
dec
bound
and
push
jp
adc
mov
aad
jmp
shl
lret
lahf
ljmp
xor
cmp
cwtl
sbb
lods
inc
push
sbb
jb
mov
outsb
dec
xor
mov
mov
mov
sub
movsl
pusha
xchg
les
jae
cmpsl
jl
lcall
mov
hlt
ds
fiadds
roll
ds
movsb
test
pop
stc
mov
jb
add
out
sbbb
fisttpll
mov
ds
mov
push
adc
mov
mov
push
ss
jle
nop
fwait
add
jg
xchg
fidivrs
lods
mov
dec
mov
int3
dec
icebp
out
fwait
stos
dec
repnz
leave
mov
lock
test
pop
mov
and
fnstenv
jbe
lret
lock
out
mov
lret
mov
ret
lods
xchg
and
call
jo
cmp
sbb
jns
mov
push
push
push
and
sti
stc
es
pop
hlt
pop
mov
mov
push
xor
sbb
popa
cli
icebp
xlat
daa
and
cld
xor
out
movsb
jb
add
imulb
mov
int
sbb
cmp
mov
jnp
bound
subb
subl
xor
push
mov
push
mov
xchg
push
dec
cmpsl
xchg
and
sbb
std
pop
inc
mov
inc
and
and
mov
loopne
jbe
or
aaa
and
mov
shrl
or
sub
loop
cmpsl
stos
push
pop
rorb
scas
jmp
aam
xor
push
pop
jbe
mov
pop
aam
cs
adc
jb
xor
mov
and
mov
dec
test
test
gs
cltd
enter
repz
cli
add
push
test
jne
sbb
mov
adc
fwait
je
and
push
paddsb
es
stos
mov
lods
cld
inc
sahf
mov
cltd
gs
sub
lcall
incb
out
push
gs
push
imul
and
inc
or
shll
out
iret
scas
mov
jnp
xor
dec
adc
in
sub
xchg
jo
inc
imul
sbb
push
push
add
mov
repnz
stc
dec
ficompl
repnz
sbb
pop
mov
lret
cmc
sbb
push
lretw
xchg
or
shlb
test
mov
scas
mov
mov
fldl
or
ret
mov
mov
js
les
mov
fsubl
xchg
mov
loop
aam
xlat
fwait
addr16
jle
jb
test
lahf
xchg
arpl
add
lcall
mov
div
and
daa
shlb
pop
js
rcll
cli
sbb
negb
add
jecxz
pushf
inc
jae
mov
inc
sbb
lock
sub
js
fsubs
cld
add
loop
and
in
in
lret
jns
xor
ret
cld
push
dec
add
xchg
or
pop
pop
xchg
ret
cs
leave
sti
and
es
sti
std
sbb
adc
mov
clc
add
add
ret
pop
inc
mov
test
popa
out
jle
lahf
shll
xor
and
push
gs
jb
mov
std
dec
push
aad
dec
cltd
jp
dec
fisubrs
push
fistpl
jno
mov
pop
jb
cmp
xor
and
cwtl
inc
addl
out
addr16
rclb
js
mov
shll
push
pop
icebp
xchg
cmp
cwtl
das
das
add
inc
inc
pop
xor
push
mov
cmp
out
inc
fsubs
out
jo
arpl
add
jp
and
cmp
scas
pop
dec
mov
mov
jecxz
popf
dec
fisubs
jle
or
mov
mov
or
stos
cs
xchg
std
jmp
repz
lea
int3
test
les
mov
lahf
lock
hlt
inc
jb,pt
pop
addr16
mov
sub
int
pop
fbstp
and
adc
btrl
es
mov
hlt
divb
lds
rcrl
and
std
in
loop
incb
lret
pop
decb
inc
mov
mov
push
fdivrl
sub
push
insb
jl
leave
jno
xchg
mov
int
enter
and
jp
data16
sub
and
fdivs
jo
rcrb
mov
adc
lahf
mov
mov
and
ja
push
cmp
mov
repz
orl
outsl
std
push
shr
lock
dec
out
jp
mov
negl
idivb
pop
adc
dec
adc
push
ror
push
mov
dec
sub
push
mov
lret
mov
lds
fdivs
sarb
add
and
cmp
mov
imul
mov
mov
or
pop
mov
add
jnp
push
sub
ror
inc
addr16
jge
xchg
adc
xchg
cmp
out
or
push
stos
xor
gs
mov
mov
insb
fildl
push
adcb
pop
dec
sbb
sbbl
jnp
outsl
in
push
enter
imul
mov
test
jge
and
nop
adc
cmpsl
mov
call
subb
dec
sub
lahf
test
lahf
mov
cli
push
mov
dec
test
push
push
js
jmp
lahf
rcr
and
and
fistpll
lds
add
jecxz
sbb
jne
mov
add
arpl
add
pcmpeqb
xor
jmp
cltd
xor
test
idivl
lods
mov
fisttpll
iret
pushf
mov
dec
mov
ret
dec
mov
add
adc
jne
fdivr
int
out
adc
lods
popa
repz
sub
mov
jecxz
mov
jno
bound
cld
and
add
ret
sahf
xchg
mov
mov
jl
hlt
js
or
and
mov
andb
mov
mov
xlat
ret
popf
mov
imul
jmp
add
mov
cmp
sti
jnp
or
mov
cld
mov
or
aad
repz
fs
sbb
lcall
aaa
lods
mov
push
inc
inc
shrd
mov
ret
xlat
ljmp
inc
ret
lahf
sub
in
xor
sbb
xor
push
pusha
mov
adc
mov
aaa
add
jno
in
lea
mov
jnp
inc
rcll
or
adc
push
adc
xchg
inc
icebp
leave
cltd
and
cmp
mov
mov
insb
out
out
andb
out
mov
mov
mov
sub
arpl
dec
insl
lea
repnz
xchg
jmp
lods
sub
inc
sub
inc
sbb
je
call
push
cmp
inc
mov
enter
in
xchg
and
pop
rcrb
xor
dec
imul
xor
add
push
jle
sbb
dec
push
jl
xor
push
test
sahf
int3
jle
mov
lock
push
pop
ljmp
xchg
test
mov
cld
dec
push
mov
dec
cmpsb
stos
xchg
and
add
xchg
push
xchg
sbb
add
and
add
jo
sbb
jg
lcall
mov
clc
add
add
aas
or
pushf
push
lock
jge
in
out
int
out
inc
pop
pop
mov
mov
add
loopne
pop
add
pop
call
xor
insb
pop
jl
adc
dec
or
add
mov
inc
mov
dec
lods
test
subb
jne
mov
popf
lock
and
scas
pusha
xchg
out
movsl
or
out
mov
addr16
addr16
push
leave
sti
cmp
cwtl
sub
shll
xor
cmc
xorl
in
fs
push
mov
and
mov
in
dec
js
add
sbb
jnp
push
inc
lea
inc
dec
out
std
testl
sub
and
mov
je
ljmp
negb
fs
push
negl
dec
pop
push
lret
mov
mov
pop
lcall
mov
adc
fiaddl
adc
int
pop
jns
jbe
jecxz
lret
pop
mov
mov
and
sbb
dec
add
lock
je
clc
adc
mov
rorl
add
push
add
mov
pop
sub
xchg
aad
cltd
xor
js
loop
mov
jecxz
jmp
sub
pushf
and
jae
pop
or
sbb
mov
push
inc
arpl
jp
insb
outsl
test
ja
jo
in
xchg
lahf
dec
cmc
aas
popa
andl
fldl
or
cmp
xchg
mov
int3
and
sbb
xor
repnz
ret
xor
sbb
dec
pop
repz
shl
xchg
icebp
sahf
cmpsb
mov
push
mov
or
inc
xor
cltd
xchg
incl
int
jle
lret
xchg
sub
andl
xor
stc
shll
in
in
sbbb
addr16
xchg
and
arpl
lahf
mov
xchg
aaa
in
cmp
fildl
add
mov
insb
sahf
mov
or
movsb
dec
punpcklwd
enter
fmul
dec
cmp
and
dec
ja
das
push
adc
xchg
dec
adc
jns
icebp
sub
aam
and
adc
dec
bound
adc
lea
inc
aam
adc
add
adc
jge
call
pop
int3
xor
cli
cmp
scas
cmp
adc
dec
jecxz
movsl
into
push
call
sbb
xor
sub
mov
das
pop
imul
mov
sbb
lea
mov
out
inc
enter
repz
sub
lea
sub
bound
cmp
sub
rcrl
push
mov
out
das
inc
xor
addr16
or
push
push
lea
cmpsl
in
fldenv
xor
pop
push
pop
and
mov
aam
xor
fucomip
scas
push
sub
sysenter
loope
push
test
loop
xor
jno
sbb
outsl
dec
stc
or
adc
push
fistpl
adc
aad
enter
popa
cmc
cwtl
in
sbb
xor
jns
jo
fadd
mov
mov
pusha
test
cmp
imul
subl
scas
lret
add
imul
and
sarb
or
sarl
ja
shl
outsb
mov
push
push
mov
mov
clc
xchg
scas
icebp
cs
add
inc
and
cmp
jns
fistpll
sub
clc
call
ja
pushf
mov
lods
mov
adc
mul
pop
mov
jns
das
cmp
mov
arpl
ja
fists
xchg
test
fwait
and
sarb
orl
add
js
jmp
loop
in
add
push
incl
jp
out
fwait
mov
sub
shll
repnz
cmp
mov
iret
mov
dec
xchg
push
mov
sub
pushf
mov
pop
mov
mov
pop
js
les
bound
and
lds
stos
jp
stos
xlat
lea
std
dec
and
jb
mov
xchg
clc
sbb
das
dec
adc
ret
iret
aam
pop
cs
data16
insb
jo
jmp
rcll
mov
out
inc
outsl
sbb
fcmovnu
pop
clc
sbb
dec
bound
or
dec
adc
mov
sub
movsl
loop
or
pusha
xchg
cmp
pop
sub
stos
jns
dec
sub
mov
fwait
add
clc
add
add
inc
imul
cli
dec
inc
frstor
mov
leave
lret
daa
mov
out
decb
jns
mov
mov
cmp
jno
mov
pop
imul
gs
dec
call
jp
test
xchg
fidivl
insb
jge
lret
sub
or
roll
lods
outsb
arpl
inc
lea
jge
or
pop
into
sbb
fldt
int3
imul
fnstsw
jb
inc
lds
pop
fimull
les
dec
mov
push
and
sub
jle
subb
inc
or
and
insl
lods
inc
clc
aad
xchg
inc
pop
ret
mov
jmp
xor
xchg
push
push
je
gs
lds
fistpl
je
mov
or
repz
mov
fists
xchg
push
repz
cmp
xchg
xchg
das
xchg
imul
sub
add
push
push
movsb
sub
jbe
push
and
pop
sarb
insl
scas
push
mov
les
iret
add
call
pop
sub
imul
sbb
mov
mov
imul
lods
fwait
and
xchg
mov
mov
mov
lea
insb
enterw
inc
jle
push
sub
jae
pop
jo
adc
jne
fidivl
insb
fwait
mov
cmpsb
inc
or
cmp
jl
push
xlat
ljmp
repz
loopne
lds
fs
xor
stos
ficoms
or
fld
enter
or
push
xchg
xor
cmp
iret
xchg
in
es
xlat
pusha
push
mov
cltd
bound
jne
pushf
test
sub
leave
insb
test
xlat
pop
cmp
loop
pop
jp
add
into
cltd
aam
test
ficomps
popf
pop
jnp
jmp
pop
sbb
popf
jne
call
negb
sti
aaa
mov
les
fcomps
mov
les
add
inc
xchg
loope
push
mov
add
mov
mov
arpl
jnp
leave
mov
jae
les
adc
call
xchg
cmc
sti
out
mov
sahf
jne
sub
push
jne
in
xor
push
add
jnp
aam
mov
into
pop
mov
cmpl
xchg
pop
aaa
out
jp
inc
or
movsb
jle
jne
mov
sbb
test
lea
inc
cli
sub
xor
jmp
cmp
nop
imul
sub
mov
pop
jno
push
cmpsb
mov
aaa
gs
stos
leave
mov
test
jno
flds
mov
scas
outsb
cmp
in
cld
fs
loop
jne
cmovg
mov
jno
cs
pusha
pusha
bound
xchg
or
push
or
std
cwtl
pop
test
inc
cmp
pop
pop
cld
xchg
push
inc
sti
dec
pop
stc
in
stc
mov
cld
fs
outsl
shrl
sub
jo
fistpl
adc
push
lcall
cmp
jno
lods
nop
mov
lahf
cmc
cmp
in
mov
inc
dec
movsb
stos
xchg
add
xchg
in
movsl
add
pusha
in
sub
shlb
ficompl
sti
ss
gs
fists
stos
xchg
dec
sbb
sub
inc
aaa
cmpsb
mov
add
fisttpl
scas
enter
and
pop
sub
adc
add
mov
xor
test
in
scas
roll
mov
jmp
loope
lods
stos
nop
lret
lcall
adcb
imul
decl
rolb
push
lds
adc
cmp
mov
push
xorb
leave
stos
das
xchg
bound
test
or
sub
push
shlb
dec
inc
mov
or
orl
add
xor
cmpsl
jle
call
out
adc
scas
leave
xchg
dec
mov
mov
mov
mov
cli
das
loopne
lock
sub
mov
sub
or
push
push
jae
or
enter
out
adc
loope
mov
ret
adc
pop
mov
cmp
add
in
push
scas
les
gs
dec
lahf
or
aam
jmp
mov
push
fldl
ja
sbb
movsb
mov
enter
push
int3
int
roll
shrl
sub
sbb
lret
cmpsb
pusha
aam
aas
cmpsl
cmp
jnp
clc
xor
jg
fcoms
and
mov
lret
dec
jge
xchg
outsl
jge
lcall
add
clc
add
add
daa
cmpsl
daa
popa
sub
xchg
popa
dec
jo
sbbb
cmp
addb
pop
xchg
clc
gs
cmp
dec
ds
fwait
out
rclb
jle
jno
mov
cld
fidivs
neg
insl
inc
mov
jmp
outsb
out
insb
cld
and
xchg
and
fnstcw
ret
in
inc
jmp
xchg
movsl
test
test
stos
data16
mov
test
sub
inc
cmp
inc
inc
sahf
lods
mov
sub
cltd
adc
bound
insb
mov
into
and
dec
and
les
jnp
mov
jle
inc
faddp
addr16
mov
ret
push
or
sub
cmp
in
cmpl
push
sbb
movsb
mov
jno
out
or
pop
sahf
push
fincstp
bound
xor
jae
push
idivb
mov
mov
xchg
pop
mov
mov
jae
adc
in
in
mov
mov
outsb
lods
lea
aad
or
fwait
popa
mov
sbb
outsb
push
mov
rorl
hlt
scas
sub
jnp
adc
fiaddl
hlt
repz
inc
punpckldq
push
lret
pop
repz
addr16
ret
and
leave
cltd
cs
adc
mov
je
or
jge
and
mov
test
push
xor
push
shrb
aas
add
cmpsl
pop
push
or
aam
outsl
sub
sub
shll
or
scas
jle
pop
cmp
gs
xchg
dec
pushf
lret
adc
cli
inc
adc
out
mov
clc
jge
dec
into
lock
sahf
or
dec
aas
jbe
out
jb
out
ja
inc
scas
add
inc
es
sti
imulb
or
jae
pop
or
mov
jecxz
pop
icebp
loopne
and
sub
sub
mov
in
jmp
lret
dec
mov
bound
add
fmull
or
in
jl
outsb
adc
sub
cmp
inc
cmc
jb
cltd
pop
lcall
rcll
push
push
nop
xor
cmpsl
jb
std
xchg
xchg
push
in
sub
rcrl
xchg
insl
fwait
jne
and
loope
idivb
scas
inc
mov
mov
in
or
mov
insb
retw
jno
das
and
pop
mov
and
mov
mov
jnp
imul
xchg
js
notl
add
push
ds
in
mov
sbb
add
repz
sbb
int3
aas
out
mov
jbe
push
daa
lret
movzwl
cmpl
popa
pop
daa
nop
popa
mov
sub
xchg
test
xchg
jmp
int3
ja
jmp
pushf
xor
fstps
cmpsb
popa
fwait
dec
test
sub
mov
xchg
je
xchg
inc
mov
lods
insb
loopne
and
test
and
inc
push
pop
test
popf
imul
adc
bnd
cmc
lcall
push
out
adc
cmp
adc
enter
fcmovb
repnz
ss
adc
imul
xor
push
adc
clc
xor
lea
cmpsl
movsb
inc
ljmp
cmovbe
ret
dec
sub
out
mov
test
faddl
lret
rclb
mov
sbb
adc
lret
mov
and
mov
pop
mov
test
test
imul
lods
aaa
ja
mov
out
sub
adc
mov
xor
ss
and
and
cmp
sbb
add
xchg
xchg
cmpsl
adc
call
adc
pop
out
lods
and
stos
and
or
ja
and
test
xchg
subl
and
jno
or
movsb
out
xlat
hlt
daa
mov
cltd
pop
push
or
add
sti
icebp
cmp
pop
pop
es
jno
inc
mov
add
dec
rcrl
jmp
out
mov
leave
and
push
pop
lods
cmpsl
xlat
cltd
lds
pop
mov
push
loop
daa
das
or
dec
sti
xor
out
add
mov
cmp
push
mov
mov
into
imul
and
pop
ja
mov
xchg
cmp
pop
push
jno
test
mov
jge,pn
cmp
in
sbbb
xor
pop
mov
xlat
hlt
push
ljmp
sub
cmp
sub
add
nop
pop
es
call
pop
xchg
cmp
int3
adc
insl
cmp
ljmp
xchg
xor
rolb
addr16
fwait
stos
xchg
cli
and
nop
sbb
adc
push
js
ja
xor
stos
pop
dec
testb
adc
movsb
call
add
xchg
xchg
repz
xchg
das
shr
xor
cmp
push
add
mov
inc
fldl
aad
or
stos
in
gs
xor
xor
cmpl
adc
jne
filds
jl
setbe
popa
pop
je
cltd
stc
mov
add
clc
lds
push
inc
movsl
dec
xor
mov
adc
imul
out
lcall
jle
xlat
dec
xchg
jl
sbb
xchg
or
mov
dec
jno
pop
loop
xor
add
cs
loop
ret
call
incl
movsl
mov
insb
fdivl
cmp
push
or
lahf
fwait
lods
push
les
les
pop
and
jmp
mov
loopne
fnstenv
movsl
mov
xchg
test
sbb
out
pop
je
or
and
bound
imul
sbb
fadds
and
sahf
daa
jle
rorl
jecxz
jno
mov
push
daa
cld
jecxz
inc
lea
mov
xchg
jle
push
or
jle
cmp
scas
add
sub
add
icebp
ja
mov
lods
mov
dec
outsl
scas
adc
lret
lcall
js
dec
xchg
clc
cmp
mov
psrlq
pop
jno
mov
fs
xchg
stos
jge
stos
in
shrl
sbb
sbb
cwtl
xor
fwait
int3
iret
mov
pop
movsl
out
aad
out
rcll
sub
es
sub
sbb
cmp
aas
cmp
or
jo
push
sub
cmpsl
pop
cltd
popf
in
ss
jmp
orl
jge
adc
paddsb
call
pop
pop
push
notb
sub
inc
cmp
mov
adc
xor
add
mov
jb
jp
add
dec
push
sbb
negb
test
fwait
pop
or
push
and
aaa
imul
ss
mov
cmp
cwtl
ror
jp
scas
das
iret
lock
or
jno
adc
negl
lea
lods
imul
test
gs
push
push
cwtl
shrl
mov
xchg
dec
mulb
stos
xchg
in
sub
outsl
in
mov
mov
push
lock
popf
out
adc
loopne
xchg
out
sub
int
mov
outsb
fwait
push
lock
jg
loopne,pn
sub
push
xchg
or
fs
xchg
push
inc
lret
and
cwtl
lea
xchg
aam
dec
sahf
das
mov
mov
cltd
mov
mov
cwtl
xor
mov
or
push
xchg
adc
repnz
daa
and
add
xchg
add
js
aam
addr16
addr16
out
or
or
lret
mov
call
inc
insl
inc
sbb
inc
ljmpw
mov
mov
jle
adc
in
add
pop
pop
sahf
sahf
jb
sahf
cmpsl
dec
adc
cli
xchg
sub
dec
jns
jno
cmc
mov
pop
sub
rcrb
loopne
cmp
pop
and
lds
xchg
shrb
jge
jo
aas
sbb
out
jbe
ret
add
out
and
xlat
ret
movl
outsl
jb
ret
xchg
aad
mov
std
push
add
and
lods
jae
xor
cmc
mov
fsts
cld
mov
mov
dec
into
fildl
or
repz
or
sub
rcrl
or
dec
hlt
fsubl
cltd
mov
adcl
xchg
or
mov
outsb
fnstsw
fadds
loopne
movsb
mov
enter
lret
sub
clc
ror
es
mov
daa
jmp
jnp
pop
dec
mov
mov
fisubrl
mov
std
daa
lds
stc
push
imul
pop
push
out
sahf
adc
sub
dec
or
mov
adc
mov
xchg
imulb
xor
or
xor
cmp
add
xor
repnz
mov
lea
scas
out
les
cmp
cmp
mov
aam
lahf
pop
dec
sar
adc
push
sub
stos
add
clc
add
add
cmp
mov
mov
xchg
cmpsl
mov
cmpsb
and
dec
shll
aam
jmp
pushf
les
pop
jge
push
test
movsb
dec
sbb
insl
inc
pusha
out
lret
pop
adc
rorb
mov
aam
cld
fucomi
subb
adc
inc
lods
push
sub
or
sar
je
daa
cmp
jne
jge
stos
arpl
rcr
jnp
movsb
popf
sub
in
or
sbb
push
out
mov
xchg
outsl
or
mov
addr16
loop
xorb
je
aam
inc
and
sbb
nop
or
cmp
xchg
inc
cs
aas
in
mov
or
push
mov
gs
pop
sbb
pop
pusha
jb
pop
jl
and
jb
scas
mov
out
push
repz
popf
mov
jmp
pop
xor
in
mov
xor
subl
movsb
orl
sub
in
out
xchg
mov
popf
loopne
add
mov
orl
scas
mov
pop
lret
mov
nop
sbb
push
addps
and
arpl
adc
into
or
push
fistpl
pop
jnp
jb
in
pop
push
push
or
pop
push
push
cmp
push
pop
jg
jae
xchg
mov
int
imul
mov
push
js
fdivp
mov
addr16
je
in
xor
sub
xor
or
cmp
cmp
ror
dec
inc
test
dec
cwtl
xchg
cmp
push
xor
in
cs
sbb
je
insb
leave
cwtl
xor
hlt
dec
xor
inc
sbb
add
roll
rcl
push
dec
das
imul
int
push
sub
mov
mov
aas
sahf
dec
andl
jne
shrb
dec
rorl
add
adcb
sbb
dec
aaa
xchg
mov
subb
imul
stos
rolb
fucomp
pop
mov
mov
out
into
imul
adc
cmovs
cwtl
push
in
sub
sub
test
ror
fiaddl
push
lods
mov
dec
inc
push
insl
arpl
out
dec
bound
pop
or
into
lods
jnp
ss
inc
sub
insb
sub
inc
shrl
and
ret
imul
or
in
cmp
dec
fidivrs
call
mulb
inc
test
daa
adc
loop
rorb
std
pop
lods
lods
out
lods
fmull
loope
and
jl
roll
sbb
pop
mov
mov
pop
jle
mov
push
stos
sub
fcmovnb
aaa
stos
pusha
push
fxtract
subb
sbb
loopne
leave
add
pop
push
std
insb
cmp
filds
scas
jbe
lret
mov
js
xchg
push
pop
movsl
addr16
in
mov
das
clc
ss
sub
test
inc
mov
xor
xor
out
cld
mul
shrl
jns
jo
and
in
xor
inc
imul
sub
add
clc
mov
inc
xchg
adc
inc
insl
enter
test
push
rorb
xlat
jmp
mov
data16
jnp
or
pop
call
inc
dec
push
incb
and
jbe
and
mov
stos
fcmovnu
arpl
fs
sub
movsl
popl
es
rorl
mov
or
je
ljmp
mov
stos
pop
cs
sti
inc
daa
adc
fisttpll
cmpsb
ret
dec
xorl
scas
adc
cwtl
mov
and
mov
or
hlt
std
mov
ds
out
and
jno
std
shll
shll
xlat
bts
xor
insb
scas
dec
mov
sub
dec
das
and
inc
pop
xchg
adc
cmp
mov
and
adc
xchg
fisttpll
adc
sbb
nop
inc
sbb
imul
adc
testl
push
ljmp
pop
sub
mov
in
outsl
sub
xor
add
or
sub
insl
dec
adc
in
mov
insb
sub
call
std
ret
xor
arpl
scas
mov
push
cltd
mov
adc
cmp
xlat
pushf
aas
jne
adc
push
iret
push
movsb
inc
push
clc
cmp
pop
pop
sub
mov
lret
mov
fistps
sbb
add
and
fsubl
and
sti
mov
dec
fwait
popa
xor
xor
fisttps
jno
mov
lock
xlat
cmp
loopne
imul
fstl
xchg
cs
rol
mul
mov
lods
loope
adc
in
xor
xchg
add
imul
nop
dec
loope
xchg
int
inc
inc
cmp
inc
dec
push
inc
mov
nop
loope
mov
adc
aam
cmp
pushf
jae
test
mov
pop
fiadds
fdivl
xor
pusha
jbe
jmp
scas
dec
pop
inc
mov
inc
jbe
fstpl
add
ret
or
push
mov
clc
adc
or
jge
push
xor
inc
aad
je
cli
repnz
push
adc
lahf
fldenv
push
mov
mov
lcall
xor
arpl
ror
cmpsb
dec
rolb
andb
jno
jns
xchg
mov
sub
adc
loopne
push
or
pop
nop
jb
xor
hlt
inc
lea
and
and
add
jge
sbb
fstpl
push
jbe
add
mov
jecxz
mov
dec
sbb
or
divl
aaa
mov
lahf
and
ds
je
add
inc
out
cmp
and
mov
sahf
mov
stos
sbb
pop
mov
rcrb
jns
cmp
loope
es
cmp
adc
cmp
mov
xchg
pop
iret
bound
dec
fstl
dec
cmp
fucom
mov
ds
pop
sahf
mov
in
cmc
add
jge
push
jns
pop
int3
jle
dec
iret
sub
pop
jae
xchg
pop
jmp
pop
push
sbb
mov
subl
repnz
sbb
mov
sbb
push
jns
rorb
sbbb
and
notl
cmp
push
movsb
hlt
rcl
mov
push
js
mov
iret
ja
cmp
sub
sbb
xchg
add
sbb
sub
adcl
xchg
loopne
xor
lods
add
lret
enter
mov
xchg
invd
inc
sbbl
push
cmc
and
movsb
inc
and
insb
mov
iret
xor
clc
sti
adc
push
inc
repz
xorl
inc
mov
test
pop
ret
stc
cmp
sbb
pop
adc
repz
in
push
adc
pop
jno
sti
lret
into
daa
adc
cmpsb
jnp
cs
jae
lods
pop
cmpb
orb
rorl
imul
popf
mov
inc
ja
adc
arpl
aad
adc
cmp
sahf
das
insb
rorb
pop
cmp
ret
stc
out
loope
jae
stc
mov
lahf
push
out
in
in
xchg
sub
js
rcr
pop
and
lret
loopne
mov
aad
lea
inc
inc
pop
in
cmp
ret
leave
movl
movsb
lea
aam
mov
push
test
sub
cmp
push
push
push
mov
test
popa
in
test
and
notl
andl
xchg
fcompl
mov
mov
push
push
ficompl
mov
dec
fnsave
mov
or
fcomps
jmp
imul
or
pop
rorb
inc
addr16
and
ret
inc
mov
jle
jbe
or
jo
repz
lret
std
jp
test
sbb
lret
mov
sbb
mov
add
mov
adc
jbe
data16
mov
loopne
cmc
xchg
mov
out
lods
hlt
dec
test
sub
cmp
jmp
enter
pop
data16
aas
pop
dec
pop
popa
lret
mov
mov
movsl
enter
or
jmp
pusha
nop
sbb
lock
aaa
push
fsubs
add
mov
dec
push
loopne
jge
int
cwtl
add
add
faddl
pop
xchg
dec
outsl
fmull
xchg
xor
inc
mov
inc
out
test
filds
loopne
xchg
inc
add
lods
lret
mov
rolb
adc
pop
adc
pop
es
xor
aam
mov
cmc
subb
cld
cltd
das
and
mov
pushf
clc
fnstenv
stos
fwait
arpl
test
mov
pop
dec
cmp
stos
orl
pop
call
and
adc
add
dec
xchg
mov
xchg
push
xor
push
je
sub
mov
add
mov
subl
into
jnp
movsb
mov
lea
dec
adc
cli
mov
lret
mov
fdivl
js
je
pop
out
inc
xchg
loope
cltd
int3
insb
loope
mov
decl
outsl
add
mov
jae
jns
xchg
xchg
scas
test
sbb
outsl
mov
shlb
cwtl
mov
inc
mov
push
aam
add
adc
idivl
sarl
cli
jmp
loop
sar
mov
mov
movsl
pop
fistl
loopne
hlt
pop
in
sqrtps
xor
pop
nop
test
and
cmp
daa
enter
lcall
xor
sti
push
dec
pop
pop
clc
call
mov
and
imul
into
inc
fdiv
ds
fwait
xchg
inc
mov
push
xchg
js
pusha
cmp
lea
mov
dec
mov
cmc
lret
xchg
pop
pop
xorb
bnd
and
das
inc
in
push
mov
jl
cs
or
mov
mov
and
jnp
sub
adc
sub
lcall
and
fsts
imul
xor
push
push
into
stos
jg
movsb
jmp
and
js
pop
xor
mov
xchg
ret
mov
xor
stos
push
mov
mov
inc
mov
std
push
incb
or
rcrb
ljmp
pop
push
and
out
movsb
or
sub
int3
popf
inc
cmp
mov
loope
cmpb
inc
xor
push
xchg
push
ror
push
mov
push
mov
dec
lods
mov
pop
fisubl
lret
and
cmp
or
lretw
adc
in
xchg
sub
mov
test
mov
and
or
and
mov
pop
lcall
sbb
inc
aam
mov
mov
outsl
mov
js
aad
inc
faddl
enter
push
push
cs
bound
sub
fwait
mov
or
scas
fwait
iret
int
imul
adc
sbb
inc
jg
mov
lcall
pop
test
enter
call
or
cltd
xchg
aaa
aad
je
pop
cld
aaa
dec
jmp
add
lock
arpl
pushl
dec
sbb
leave
jg
hlt
add
pop
jecxz
and
pop
ljmp
test
dec
cmp
jae
dec
iret
int
fsub
push
jne
push
test
pop
jle
or
movsl
fnstcw
mov
gs
shlb
jle
movsl
mov
mov
sbb
fwait
jle
adc
outsb
cmc
fwait
aaa
ljmp
mov
in
mov
icebp
push
fsubr
ret
cltd
in
dec
call
xchg
ficomps
inc
inc
and
sahf
scas
cmp
aas
pop
xchg
loopne
ljmp
test
inc
add
sub
ss
test
xchg
add
mov
mov
or
pop
fdivrp
push
and
mov
and
or
mov
mov
jns
insb
cli
mov
adc
ret
movsl
dec
sbb
push
imul
pop
mov
fsubp
fists
jp
or
leave
sti
mov
add
cmp
xor
mov
leave
add
push
dec
mov
ds
insl
aad
mov
xchg
dec
or
jo
mov
mov
mov
push
and
dec
adc
cld
aas
xchg
lret
scas
stc
jae
and
popa
shrl
pop
pop
outsl
popa
int
insl
icebp
andb
test
rol
pop
push
inc
mov
rolb
out
loop
cmpsl
sbb
aad
jmp
ja
pop
mov
adc
add
sbb
pop
rclb
mov
inc
test
pop
dec
jp
mov
sti
repnz
inc
push
in
rorb
jmp
xor
inc
jns
sbb
test
dec
xchg
sub
lods
sub
aas
pop
push
sbb
pusha
in
lock
cli
out
jnp
push
push
out
jg
ret
rcrb
mov
frstor
and
imul
fs
mov
mov
cltd
outsb
xchg
jae
lds
test
xchg
addb
cmp
mov
push
hlt
mov
repz
lret
sub
mov
sbb
or
out
xchg
xchg
fstps
push
fucomi
cltd
jmp
iret
sar
data16
mov
out
fiaddl
out
or
add
add
xor
iret
push
push
addr16
scas
cmp
jno
cmp
jo
mov
imulb
sti
adc
test
xor
lods
mov
test
scas
jmp
add
icebp
mov
sub
jno
inc
cld
inc
lods
cmp
push
xor
push
mov
lock
lods
dec
sub
xchg
sub
adc
es
sbb
lret
int
push
sub
xor
sbb
cwtl
fldenv
aam
pop
int3
xor
dec
sbbl
inc
inc
vandps
sbb
xchg
in
test
xchg
repnz
out
fstpt
aas
xchg
subb
push
jg
pop
and
loopne
mov
pop
das
xchg
ficoms
sbb
and
cmpsb
xrelease
cmp
mov
ds
test
stos
add
mov
mov
jne
pop
sti
cmp
or
and
xchg
fnsaves
fistl
sbb
mov
out
mov
cld
adc
pop
aaa
sub
mov
cs
movsl
movsl
and
pop
pop
rcrb
add
jne
jp
outsb
in
arpl
outsb
mov
les
push
imul
int
jmp
pop
test
inc
inc
filds
mov
scas
shll
out
mov
inc
pop
and
pusha
sahf
jecxz
inc
xchg
xchg
addr16
stos
mov
js
cmp
jo
sub
pusha
mov
insb
insb
push
mov
int3
lahf
push
in
insl
adc
hlt
pop
fs
push
adc
pusha
lahf
mov
xor
ret
fdivs
inc
nop
jnp
rol
adc
jmp
in
dec
shl
pmullw
xchg
loope
lds
mov
mov
cmpsb
xchg
mov
adc
sbb
and
xchg
pop
incb
jo
es
nop
add
cmp
push
and
pop
mov
mov
outsl
ret
in
xchg
dec
and
arpl
cli
roll
int3
or
adc
ds
add
in
shlb
lret
mov
cmpb
popa
imul
mov
push
std
enter
dec
jg
jmp
mov
mov
subb
jb
ja
pop
add
dec
sbb
test
fcmovbe
xchg
insl
or
in
int3
rcrb
push
inc
lods
mov
push
jnp
aaa
ret
lds
push
movsw
gs
cltd
imul
and
in
dec
mov
xor
mov
imul
inc
in
movsb
jp
pop
or
cmp
sbb
xchg
bound
je
outsl
pop
pop
pop
je
repz
jns
out
les
push
push
pop
mov
cmp
mov
aaa
cmpsl
mov
hlt
or
sub
inc
scas
rorl
test
jae
or
push
xchg
xchg
lahf
xchg
pop
shrl
loope
or
mov
sbb
int3
lds
sbb
into
jl
push
inc
xchg
adc
mov
mov
cmp
add
cmc
push
imul
dec
mov
push
sub
sahf
dec
inc
push
addr16
jb
adc
or
jne
mov
pop
pop
add
add
int3
jnp
andl
and
jecxz
and
jo
pop
aaa
imul
cmp
fwait
daa
movb
sbb
and
xchg
mov
aam
int3
mov
nop
repnz
push
ret
orl
test
out
ds
xchg
adc
and
or
sub
lock
aas
xor
inc
in
out
outsb
shll
push
adc
popa
xor
or
psrad
add
arpl
mov
fcompl
push
shrl
hlt
mov
sub
ret
out
popl
ret
mov
push
mov
dec
aad
loopne
xor
call
lods
and
and
scas
jae
lock
arpl
jns
add
jle
dec
jb
push
or
cltd
add
sub
xchg
daa
mull
orb
push
aas
in
xor
clc
cmp
cli
loope
jae
or
fisubl
bound
sbbb
leave
inc
push
jge
fimull
lods
pop
sbb
inc
int3
in
pop
push
idivb
push
sbb
fistpl
shll
xchg
cmpsb
adc
sahf
mov
xor
push
call
push
insl
cmp
add
clc
add
add
pop
rclb
shll
rol
popa
stc
mov
dec
stc
mov
mov
ds
arpl
icebp
sbb
sub
mov
inc
xor
pusha
and
in
sbb
sub
nop
subb
shl
jne
xchg
xchg
arpl
pop
pop
or
sbb
mov
loop
pop
imul
shlb
mov
idivl
bnd
fwait
or
sbb
shr
fcomi
add
imul
out
mov
push
xchg
lea
inc
in
xchg
test
sub
push
mov
sbb
inc
imul
and
jecxz
push
push
daa
adc
mov
inc
mov
xchg
cs
push
mov
sbb
arpl
cmc
jle
and
imul
and
mov
les
or
add
add
bound
lods
or
cmp
cmp
aad
stos
mov
and
test
nop
ret
aam
scas
jmp
xchg
xor
jb
aam
mov
sbb
jnp
scas
movsb
icebp
mov
ja
push
subb
lret
jg
xchg
xor
aad
lods
xchg
mov
roll
push
cli
push
push
insb
or
and
sbb
add
lret
jnp
xchg
subl
lcall
punpckhbw
jp
inc
jecxz
ljmp
pop
sub
push
pushf
push
aad
or
das
mov
mov
mov
subb
xchg
dec
ja
mov
lock
inc
lahf
sar
mov
std
add
cld
cmp
mov
cli
in
sbb
pop
xor
xor
xchg
xchg
outsb
pop
jge
fwait
imul
push
mov
adc
je
ror
fcmovnbe
push
fildl
mov
sub
mov
xchg
push
cmp
mov
pop
dec
sbb
out
jne
or
dec
sbb
sbb
dec
sbb
ret
imul
xchg
sbb
fildl
cmp
jmp
icebp
adc
popa
icebp
shrb
int
inc
add
ret
aad
aaa
imul
fsts
out
aaa
imul
pop
sub
das
add
sub
xchg
or
fldl
and
int3
addr16
int
addr16
mov
jmp
jbe
cmp
scas
xchg
pop
jmp
mov
xor
jbe
sub
rcrl
movsl
dec
sbb
sbb
fnstenv
push
lcall
push
mov
mov
std
js
addr16
inc
lret
xchg
pop
mov
std
test
cwtl
sbb
fbld
cmc
out
xchg
fbstp
scas
xchg
cld
js
movsb
pop
and
dec
sti
test
and
daa
mov
xor
pop
ljmp
xchg
or
std
xchg
xor
outsb
mov
sbb
aam
xchg
addr16
mov
pop
out
scas
push
mov
push
mov
mov
int3
mov
enter
fsubr
adc
xchg
sahf
jl
add
mov
xchg
arpl
scas
push
popf
pop
nop
icebp
xor
sti
bound
jge
rclb
or
mov
xlat
xor
inc
in
mov
lods
pop
mov
jmp
out
push
xor
xor
push
inc
push
inc
jg
mov
jnp
sbbl
pop
dec
call
fsubl
enter
pop
and
cli
mov
scas
jmp
adc
nop
in
inc
and
adc
push
xadd
lcall
call
movsb
std
pop
shl
xchg
outsb
pop
clc
add
jno
or
pop
insl
loopne
sub
or
stc
pop
aad
mov
adc
rcrb
xchg
mov
ret
aas
adc
stc
sbb
xor
test
bound
in
call
mov
rcl
mov
int3
jno
rcll
and
hlt
mov
in
or
xor
jecxz
jle
pop
cmp
mov
sbbb
mov
mov
into
mov
or
arpl
cld
pushf
mov
dec
jbe
cmp
xchg
fmulp
scas
cli
fistl
ja
mov
sub
push
cmpsb
repz
fs
ljmp
movsl
std
pop
xchg
sub
stos
mov
xrelease
xor
std
or
add
fsubrs
repnz
jmp
shl
and
les
imul
lahf
loop
ret
rclb
lea
imul
fcmovnb
in
xor
stc
ret
clc
add
add
pandn
scas
cmp
cmp
inc
pop
fcmovu
push
sbb
pavgb
mov
jb
popf
loopne
lods
sahf
outsl
fdivs
push
sarl
and
and
mov
sub
mov
js
adc
inc
adc
insb
dec
pop
and
ret
test
sbb
data16
enter
sub
negl
add
in
or
mov
orl
or
add
inc
push
test
mov
pushf
jmp
and
jo
adc
out
in
sbb
jno
dec
adc
mov
pop
lds
jmp
nop
jnp
sub
mov
into
mov
xor
add
mov
andl
xchg
cmpsl
fwait
mov
jae
jo
sub
cmp
inc
xchg
add
pop
sbb
sub
add
rorl
pop
ss
mov
lock
lcall
xor
or
jp
and
fcmovbe
cmp
orb
test
ret
adcb
mov
mov
inc
mov
cld
leave
dec
xchg
pcmpeqw
lcall
sub
add
sub
je
aas
cmp
js
in
rclb
mov
cmpsl
ror
lret
movsb
in
loop
or
lods
fwait
sahf
push
xchg
or
les
jmp
jno
xchg
shlb
xlat
ret
js
push
stos
adcl
sbb
add
cltd
dec
mov
pusha
dec
test
repnz
ljmp
imul
lret
leave
xor
out
cmp
movsb
push
test
pop
sbb
or
paddb
negb
sub
mov
sbb
std
pop
add
lcall
rol
mov
xor
fisttps
clc
imulb
pop
repz
sub
lea
call
out
ds
jmp
mov
jnp
stos
loop
push
imul
push
mov
and
and
and
xor
mov
das
shlb
insl
mov
xor
mull
dec
int
cld
ret
aam
cltd
xchg
hlt
cwtl
outsb
faddp
decl
jle
lock
leave
or
push
pop
fs
or
push
mov
test
push
lcall
roll
daa
daa
jb
mov
lret
pop
lock
shrl
mov
stos
adc
jne
mov
or
adc
movsl
cmc
add
cmp
inc
add
or
mov
dec
add
inc
js
pop
ljmp
xor
outsl
inc
dec
mov
and
sahf
pop
cld
pop
sub
add
insb
cmpsb
mov
test
jne
mov
test
jl
mov
lock
cmp
je
aas
insb
cli
push
fs
dec
jae
dec
mov
stos
xor
in
outsb
dec
fimull
mov
cmc
iret
pop
call
mov
orb
push
xchg
inc
dec
scas
pop
adc
mov
jne
popa
pop
cmp
add
pushf
sbb
xor
push
add
mov
dec
cmp
movsl
lods
jl
jmp
push
dec
in
dec
test
fwait
fstps
lret
test
jbe
mov
mov
xchg
cmp
or
sahf
int
or
jge
out
fstp
or
jle
pop
and
mov
nop
test
dec
out
je
cld
add
xlat
push
sbb
negb
pop
dec
adc
inc
loop
cli
mov
test
inc
ret
dec
inc
lret
cli
je
insl
aaa
xchg
mov
clc
stos
sahf
pop
inc
push
data16
out
mov
xchg
push
iret
shrl
xlat
mov
inc
pop
cld
faddl
packsswb
sahf
mov
add
imul
push
push
mov
jns
clc
sub
gs
testw
dec
popf
lods
call
pop
mov
dec
push
cmp
inc
pop
scas
sti
int
xor
loop
hlt
aam
push
aam
xchg
subb
mov
adc
cmpb
xorb
js
inc
add
push
sub
in
pop
leave
adc
adc
dec
fst
sub
pop
add
test
push
lret
mov
dec
mov
aas
add
sub
push
inc
mov
inc
and
inc
pop
aaa
movsl
mov
and
outsb
mov
dec
dec
or
adc
pop
aam
js
inc
push
es
jnp
or
push
in
data16
test
mov
inc
dec
pop
iret
bswap
test
dec
or
mov
div
movl
add
xchg
les
mov
xor
addl
scas
les
dec
lret
mov
adc
sbb
sarb
xor
and
xor
data16
inc
mov
call
xchg
xchg
and
repz
lret
stos
imul
xchg
fiaddl
daa
popa
jb
lcall
pop
fisttpll
adc
in
gs
sbb
cmc
nop
jbe
gs
sub
adc
mov
bound
push
mov
push
lea
mov
adc
bound
push
mov
js
pop
cmp
es
pop
imul
testb
mov
sbb
call
xchg
or
dec
cmp
add
mov
scas
loope
test
add
dec
sub
sysret
ret
sbb
test
test
lods
fnstenv
lret
and
lcall
mov
js
inc
mov
mov
xlat
lods
xor
fld1
xchg
out
mov
lahf
adc
sbb
mov
jbe
push
pop
or
mov
sarb
jg
rcll
ret
test
scas
xor
inc
pushl
pop
stc
mov
mov
xchg
xor
pop
and
incb
dec
out
test
and
sub
mov
sub
jle
imulb
cwtl
xor
adc
mov
subl
cmc
hlt
pop
jne
xchg
cli
lea
and
das
frndint
test
scas
fbld
jno
sbb
enter
mov
fcmovb
cmp
jno
or
xchg
idiv
add
stc
sti
addr16
mov
out
cld
inc
inc
cmp
sbb
iret
mov
xchg
sub
inc
jno
cmp
sti
ret
adc
cmpsl
test
push
fiadds
mov
popf
xchg
jne
fsts
loop
fsts
out
fildl
adc
push
sbb
mov
jge
pop
pop
sub
jle
adc
test
xchg
test
pop
jae
cmpsb
sub
inc
pop
or
repnz
out
jbe
out
das
pop
adc
jnp
sahf
mov
lret
dec
sub
pop
les
and
loop
mov
mov
in
push
mov
inc
pop
iret
jne
add
cmpsl
mov
dec
jb
sub
ret
ss
push
addr16
out
test
aam
lcall
jo
fdivrs
push
movsl
aas
aam
cld
cltd
pop
loop
and
jb
std
daa
fstpt
call
sub
jle
inc
push
push
jnp
mov
sbb
cs
mov
add
aam
xchg
int3
cmp
push
push
cld
das
and
cbtw
outsb
mov
out
repz
jle
mov
movsb
push
pusha
ja
inc
call
add
orb
cmpl
test
pop
pop
popa
push
arpl
mov
mov
jmp
jbe
lock
mov
stc
bound
dec
shl
mov
and
fbld
xor
inc
outsl
mov
push
call
nop
sbb
ja
pusha
das
ficomps
xor
pop
xor
cld
jns
std
sbb
add
ret
cmpsb
or
sbb
fs
add
enter
xor
dec
fnstsw
or
out
rolb
mov
daa
test
sub
push
and
loopne
pop
xlat
clc
cwtl
iret
call
std
jns
pop
cmp
mov
mov
sub
inc
mov
sbb
or
mov
pop
sti
adc
add
ret
or
stos
ljmp
push
test
push
cmc
fdivrl
mov
mov
test
sbb
les
jnp
and
aad
stc
mov
add
jns
lock
test
in
pop
mov
loopne
inc
mov
push
test
in
lahf
adcl
loopne
push
sub
cwtl
out
iret
pushf
cmp
adc
cmp
push
jb
cld
add
data16
and
fsub
add
jns
fwait
sub
pop
lahf
pop
fldt
jbe
inc
xchg
pop
dec
int3
push
mov
xchg
inc
pop
xlat
hlt
and
sub
jne
mov
into
mov
sub
sub
je
add
idiv
pop
pop
push
jb
mov
and
fwait
push
pusha
outsl
out
jg
cmc
or
or
add
clc
add
add
cmp
inc
ffree
mov
xor
loopne
sub
das
rcrl
add
ds
jnp
mov
or
mov
out
sub
sbb
push
mov
jmp
cltd
or
leave
mov
lds
scas
and
cmp
cmp
popa
in
subl
js
negb
hlt
out
cmp
sub
sub
pushl
sti
out
pop
lcall
mov
and
dec
mov
fiadds
pop
dec
je
mov
inc
std
mov
out
out
push
ljmp
test
dec
adc
push
mov
lahf
add
ds
adc
out
repnz
sub
sbb
sbb
add
dec
xor
sub
iret
sub
adc
xor
mov
mov
ds
inc
adc
fwait
inc
xchg
cmp
subb
fldl
and
sahf
fsubrs
push
mov
mov
dec
xchg
pop
pop
lock
dec
mov
ficomps
mov
mov
xor
mov
nop
add
insl
sub
test
adc
jns
xchg
sti
scas
daa
jo
and
ss
xchg
rorl
jecxz
bound
lcall
xchg
mov
cmpsl
jmp
mov
mov
lcall
xor
addb
xchg
sbb
push
push
notl
pop
cmpsb
add
insl
orl
xchg
in
bound
xchg
xlat
lret
fstpt
sbb
aaa
leave
rclb
cmp
xchg
or
pop
in
shll
fistps
inc
cmc
mov
dec
jae
xchg
inc
sbb
sbb
inc
push
dec
xchg
gs
insl
les
fmuls
js
sbb
push
lds
mov
xor
ja
mov
sub
xor
push
sub
fistps
pop
mov
leave
add
mov
cmp
test
pop
das
adc
pop
fnstsw
fwait
mov
mov
cld
lods
mov
xor
testb
dec
lret
loope
popf
jne
add
sbb
dec
hlt
rcrb
jecxz
cmp
outsb
xlat
pop
loope
repnz
cmc
xchg
or
jnp
cmp
stos
leave
xor
or
clc
inc
inc
jmp
dec
add
in
scas
mov
or
lea
aaa
out
sbb
pop
leave
mov
cmpsb
fistpll
sub
shlb
xchg
push
or
inc
jecxz
jge
jmp
mov
cmp
add
add
mov
xchg
cmc
pop
xchg
adc
mov
add
xchg
call
and
outsb
mov
cmpsb
stc
jb
jae
daa
inc
mov
jmp
es
xor
sti
ret
dec
daa
and
icebp
jne
int
je
and
lahf
adc
push
fmull
xchg
dec
ror
push
imul
pusha
movsl
loopne
sub
cmc
cmc
lods
mov
nop
arpl
pop
inc
aad
sarb
pop
call
pop
sbb
mov
pop
pop
dec
cmp
dec
mov
ficoms
xchg
js
ljmp
outsl
sub
fbld
clc
ror
xlat
xor
or
out
or
dec
jbe
mov
hlt
scas
mov
mov
ja
push
sbb
mov
mov
fcompl
mov
pusha
cmp
lock
cmp
pushf
mov
jb
fstpl
das
es
adc
outsb
or
pop
and
imul
movsl
xor
ss
cwtl
rcll
pop
lea
cs
dec
adc
std
or
xlat
dec
jg
not
cmp
cmp
fs
leave
jbe
test
jp
adc
push
out
jl
ja
int3
pop
mov
lret
cmp
mov
sbb
in
pop
fdivrs
adc
push
repz
dec
repnz
mov
gs
lock
cmp
imul
push
into
push
es
scas
sti
gs
lods
dec
int
add
mov
sbb
fsub
jmp
and
push
push
popa
cmc
stos
rol
xlat
loop
inc
and
out
icebp
cmp
adc
repz
cmc
icebp
cmp
mov
mov
loop
mov
scas
outsb
out
lds
pusha
cmp
roll
add
add
add
dec
iret
clc
lret
scas
lods
data16
repnz
stos
mov
ret
cmp
popf
sub
iret
mov
push
push
icebp
jo
push
xchg
dec
jge
xor
imul
loopne
sbb
jecxz
inc
cmpsl
test
cmp
push
dec
rorl
jnp
lods
js
scas
outsb
mov
ret
inc
xchg
sti
jmp
or
sahf
lret
cmp
shr
pusha
arpl
out
inc
inc
push
gs
mov
jbe
inc
push
jnp
rcl
mov
imul
mov
js
enter
arpl
add
stos
xor
sub
sarb
aaa
cmc
jae
dec
imul
jnp
pop
out
push
jle
dec
rcrb
mov
jmp
push
pop
gs
push
scas
cmc
dec
xchg
mov
sub
and
mov
aad
dec
jle
incl
in
cmp
mov
xchg
mov
xor
rcrl
pop
scas
add
out
add
jmp
lods
scas
sbb
add
shrb
cmpsb
sti
rcrl
ret
jae
xchg
out
and
mov
sbb
lea
inc
popf
sahf
fistpll
xchg
adc
dec
xor
imul
jecxz
mov
repnz
ret
inc
push
stc
inc
sbb
cmp
sahf
test
stc
cmpsl
rcr
stc
stc
enter
push
stos
outsb
push
pushf
push
sub
mov
sbb
add
jmp
lcall
nop
mov
js
cmp
mov
pop
mov
or
in
jns
scas
xor
add
jecxz
test
jns
mov
mov
jg
or
aas
loopne
inc
adc
sub
add
lret
into
xchg
mov
call
xchg
add
mov
pop
jmp
or
bnd
loop
icebp
shll
and
xor
and
cmc
ja
and
add
in
lret
and
stos
ret
cmp
into
stos
aam
jge
test
and
jle
or
out
inc
repnz
pop
repz
push
lea
leave
arpl
mov
pop
add
outsl
mov
sub
das
scas
decl
pushf
repnz
fsts
mov
out
mov
pop
push
mov
mov
cmpsl
push
enter
inc
cmp
mov
add
sbb
pop
and
mov
les
sub
hlt
sub
fcomps
out
stos
adc
pop
mov
push
cwtl
cltd
mov
add
add
aas
push
ss
dec
jle
push
jae
or
inc
mov
int
lods
test
mov
test
fs
pop
daa
inc
xchg
inc
mov
dec
adc
xchg
jmp
lretw
jle
out
sbb
bnd
nop
xchg
push
mov
mov
mov
sahf
cmpsl
bound
add
add
jo
pop
lds
sti
movsl
pop
clc
lea
sub
sbb
adc
rolb
cmp
mov
mov
dec
push
push
add
and
jae
xchg
mov
jns
adc
push
sti
mov
lea
dec
sub
inc
mov
xor
adc
imul
xchg
dec
loop
mov
test
lods
push
inc
push
mov
or
pop
mov
out
in
popf
jp
andb
gs
xchg
add
or
cmpb
xor
and
or
jae
adc
lcall
loopew,pt
mov
ja
fcmovu
icebp
in
sahf
push
popf
orl
insb
inc
cmp
rolb
mov
dec
aad
pop
add
imul
stos
insl
cli
pushf
mov
dec
xor
mov
mov
cmp
cmp
fdivl
add
out
mov
cld
mov
sub
lods
mov
jmp
stos
repz
lods
ljmp
jo
ljmp
fdivrs
adc
jns
and
and
dec
xchg
mov
mov
sbb
insl
rorl
aas
aaa
lods
and
mov
lret
fldt
sub
ljmp
add
pop
not
stc
jle
cmp
cmpsb
sbb
shlb
sub
je
adc
dec
int
jbe
mov
or
out
and
mov
dec
jbe
popf
xlat
jl
movsl
mov
mov
dec
jb
pop
test
pop
out
lret
lods
xlat
sti
mov
je
add
clc
add
add
lea
daa
aad
sahf
xchg
mov
aad
popf
mov
cmp
stos
aam
lea
or
push
imull
gs
xor
push
add
jmp
inc
mov
arpl
inc
push
ret
sub
mov
mov
movsb
mov
icebp
int3
push
jmp
imul
inc
mov
insl
adc
jo
in
pop
movsb
mov
add
xor
cmp
mov
add
push
add
sbb
jmp
mov
clc
jbe
sbb
fmull
push
shll
cmpsb
cltd
subb
cld
ss
xchg
lahf
jge
js
sarb
mov
inc
push
ss
lret
stos
cmp
test
test
push
pop
mov
sbb
inc
inc
dec
lret
dec
mov
xchg
hlt
js
insl
stos
ficomps
inc
insl
loope
call
xlat
mov
adcb
je
sub
jp
sar
lahf
inc
leave
aaa
and
mov
in
out
cmp
js
rorl
mov
in
test
mov
dec
aaa
lret
push
mov
flds
jmp
mov
inc
and
and
xchg
cs
mov
outsl
push
xlat
mov
inc
mov
das
pop
cltd
dec
pop
jmp
std
inc
pop
jno
xchg
fcomps
pop
pop
loop
aas
fs
add
sbb
sarb
lret
jbe
sbb
sbb
cmc
test
cwtl
xchg
rcr
gs
out
rcrb
mov
lea
sub
scas
dec
xor
out
fwait
jl
xor
cmc
jne
pop
inc
js
inc
pop
push
xchg
xor
mov
lcall
mov
mulb
fisubrl
sbb
mov
addr16
xlat
out
aad
iret
mov
fbld
out
movsb
pop
jmp
test
xor
les
mov
cwtl
pop
and
mov
out
adc
mov
dec
push
je
insl
mov
xor
fcomi
std
adc
mov
test
xor
popl
es
js
push
test
pop
dec
cs
lahf
jl
addl
fcompl
lret
aaa
popa
in
sarl
mov
lcall
test
fcom
fnsave
pop
pop
data16
fs
jno
push
and
lahf
mov
je
ds
adc
cmp
jle
jecxz
push
dec
std
scas
bnd
mov
xchg
outsb
ret
pusha
jecxz
push
inc
xor
or
in
sbb
add
xchg
sub
cmp
cmp
push
xor
push
out
push
fmul
xlat
inc
xlat
pop
daa
movsl
cmp
jmp
sbb
add
lret
notb
stc
scas
stc
pop
adc
cs
cmp
and
adc
xlat
iret
fadds
out
mov
lods
and
movsb
lods
sub
pop
mov
out
cmpsb
shrb
or
pop
in
or
push
adc
sahf
popf
add
xchg
idiv
mov
pop
fdivrs
sub
out
imul
addr16
xchg
in
xchg
mov
jnp
sub
push
inc
push
int
mov
scas
push
ja
xchg
cmp
lret
insl
rcrb
nop
mov
test
inc
mov
pop
icebp
mov
sub
fnstcw
pop
lret
and
jp
fmull
jmp
xchg
mov
mov
sub
push
repz
pop
sahf
mov
sub
mov
sbb
cltd
stc
inc
jbe
stos
jp
pop
cwtl
lcall
mov
push
addl
pop
imul
sub
or
stos
aad
jle
adcb
xor
stos
xchg
dec
arpl
call
sub
ret
and
cmp
xor
fsub
jnp
sbb
lods
sbb
repnz
test
jl
mov
in
test
mov
add
mov
push
mov
mov
pop
lea
cli
inc
push
lcall
mov
xor
ljmp
roll
jecxz
adc
push
and
mov
or
pusha
cli
mov
outsl
sbb
mov
mov
lldt
xor
sub
push
lods
cmp
out
jge
lock
lret
aas
cli
sti
fnstsw
and
sahf
jno
loop
bnd
fcomi
mov
insb
rolb
fildl
add
add
add
call
in
data16
mov
stos
loope
insl
mov
clc
xchg
loopne
sub
inc
outsl
icebp
adc
lock
test
adc
or
pop
cmpsb
popf
fwait
inc
pop
cmp
das
sti
das
inc
jnp
lret
imul
cmp
dec
adc
rol
mov
or
adc
ljmp
aam
add
sub
mov
aam
mov
xor
fwait
push
es
mov
adc
add
sbb
test
test
cmp
add
arpl
dec
roll
mov
mov
aas
pop
jl
loopne
mov
pop
inc
lock
xlat
mov
mov
xchg
push
cmp
or
add
pop
and
xchg
push
mov
add
sahf
jb
xchg
cmp
repnz
dec
add
cld
inc
lock
nop
out
jb
and
add
pop
cltd
lcall
mov
loop
xchg
jno
push
pop
es
inc
cmp
adc
mov
cmp
aas
out
jns
out
or
sbb
mov
fwait
pop
fnstcw
mov
fdivrp
sub
lret
add
rep
sbb
cli
pop
inc
lret
or
jmp
mov
inc
and
addr16
scas
ja
stc
mov
enter
pop
pop
cmpsb
std
popf
es
xor
sti
push
sahf
testb
bnd
sbb
gs
sbb
push
inc
ret
outsl
dec
sub
inc
subb
movl
mov
shrb
lock
xor
push
sbb
bound
mov
inc
push
lahf
shrl
hlt
xchg
sub
push
les
popa
xor
or
push
pop
jne
in
sahf
fnstcw
call
cmp
mov
js
js
imul
mov
cmp
adc
jmp
das
rep
mov
adc
bound
xchg
pop
or
mov
out
popa
shrb
sti
inc
push
andb
cmpsb
mov
xchg
jmp
jns
and
jbe
add
pop
iret
cmp
pop
inc
and
mov
xor
pop
jbe
cmp
hlt
cwtl
xchg
cs
push
jo
cmp
jge
xchg
jo
ja
dec
popa
push
fiadds
xor
scas
sub
xlat
mov
pop
mov
mov
adc
pop
leave
lahf
out
inc
or
cmc
and
out
push
xor
mov
mov
test
addr16
push
bound
add
cmp
push
inc
das
jle
loopne
push
ds
xor
orb
loop
scas
dec
dec
adc
sbb
ja
loope
stos
inc
test
push
mov
mov
adc
xchg
test
mov
xchg
xchg
pop
push
dec
stc
mov
es
or
mov
lcall
mov
jbe
lret
fwait
jno
fistps
loop
movsl
jnp
xor
mov
imul
arpl
inc
or
mulb
ss
mov
imul
dec
jg
and
xchg
daa
scas
sbb
mov
ret
in
xchg
mov
int3
mov
jecxz
xor
push
mov
imul
xchg
xor
enter
mov
out
imul
or
jae
imul
in
sbb
ss
pushf
int
mov
or
pop
mov
cmpb
dec
jae
push
mov
and
insb
push
push
adc
jge
clc
adc
or
sti
divl
int
aad
inc
mov
jns
movsb
lea
insb
mov
js
pop
pusha
inc
imul
push
fisubl
iret
xchg
or
xor
aam
xchg
lcall
mov
cmp
dec
sbb
out
xchg
movl
fdiv
aas
in
sbb
xlat
cmp
loope
cmpsl
pop
adc
jmp
insl
sahf
push
sti
in
fildll
ja
lcall
sbb
sbb
scas
sub
lock
repz
mov
xor
les
iret
mov
cmpb
fcmove
in
mov
push
icebp
addr16
or
loope
add
push
mov
mov
fs
lret
pusha
stos
aam
dec
sbb
sti
lcall
pop
jp
jecxz
sti
je
andl
ss
in
inc
test
leave
loopne
add
add
add
pop
scas
push
ficompl
add
gs
mov
inc
rclb
cld
outsb
mov
test
mov
add
out
or
out
adc
ja
pop
xchg
add
pop
lods
pop
insl
push
add
pushf
or
and
stos
rcr
sbb
popf
je
xlat
sub
jno
clc
push
xor
xor
sub
out
jb
xor
push
stos
lret
jge
mov
fcoms
sti
push
xor
push
xchg
mov
sahf
in
aad
bswap
inc
int
cmp
lcall
addr16
aas
mov
into
push
jne
cs
inc
mov
dec
shr
mov
sub
mov
add
cmp
pop
pusha
cld
sbb
mov
hlt
mov
sbb
mov
sahf
repnz
jecxz
xchg
jg
push
mov
lock
inc
xor
out
js
jl
add
jb
cli
in
sub
adc
fldenv
jns
adc
adc
andb
arpl
mov
imul
rcl
and
mov
lahf
mov
decb
xchg
xor
gs
push
jno
je
loopne
adc
dec
pop
dec
aam
in
xchg
rcr
sub
adc
mov
mov
es
out
subb
push
jge
pop
and
out
mov
and
bound
mov
and
out
adc
xlat
fidivl
sbbb
adc
mov
push
ljmp
inc
lcall
mov
leave
jae
pop
cs
dec
fmul
movsb
sbb
lret
and
pop
shlb
mov
dec
mov
pop
addl
sar
adc
loopne
bound
cwtl
sub
scas
repz
roll
dec
loope
push
push
jb
lret
mov
jp
movsl
les
cmp
enter
jns
mov
cwtl
fidivl
sti
mov
push
in
mov
mov
iret
test
stos
iret
clc
enter
cmpsb
scas
in
rolb
push
and
push
insb
nop
dec
xchg
out
push
lds
stc
sub
int
es
sbb
mov
test
fdiv
add
pusha
or
inc
add
sti
jne
inc
iret
push
ljmp
pop
sbb
fs
inc
add
and
lahf
int
decl
jecxz
sub
fwait
and
mov
rcl
rcl
sti
imul
inc
shrb
push
fimull
jmp
sub
shrl
ret
imul
test
enter
arpl
dec
push
push
jg
mov
xchg
mov
ds
dec
popa
cmp
das
adc
stos
popa
popa
add
pop
adc
add
in
dec
aam
adc
dec
push
cmp
xor
mov
mov
rorb
pop
sahf
cwtl
adc
pop
vmaxpd
js
or
pop
cltd
aam
cs
and
arpl
cltd
in
in
aaa
js
in
sahf
icebp
cmpsl
jmp
es
leave
mov
push
fidivs
not
arpl
sbb
pop
sbb
stos
out
adc
or
dec
setb
rorl
push
addr16
movsl
cmpsl
mov
stc
mov
andb
xchg
cmpsl
mov
jmp
xchg
nop
push
incb
fadd
mov
pushf
mov
push
pop
inc
movsl
mov
loop
push
decl
pop
xlat
sbb
call
js
dec
pop
imul
cmp
push
repnz
xor
xchg
add
and
mov
js
xor
lret
cmp
push
lahf
cli
or
jmp
out
inc
inc
loop
push
test
cmp
xor
into
dec
sbb
addr16
popa
dec
daa
fucomi
pop
ss
cs
pop
sbb
nop
in
movsb
sub
add
shll
mov
test
and
pop
xor
stc
ss
rcll
lds
insl
test
sbb
mov
fldenv
std
sub
jmp
idivl
in
fwait
pop
out
in
js
mov
push
add
pop
and
mov
lds
and
cld
lret
jno
fwait
push
jno
fsts
xor
lods
hlt
out
fistpl
sub
mov
add
jnp
or
lahf
adc
xchg
rcrb
pop
roll
push
push
pop
in
add
add
add
mov
xor
dec
xor
pop
pop
push
or
mov
and
and
scas
jnp
leave
int3
mov
into
pop
sub
in
dec
mov
andb
cld
dec
push
or
xchg
mov
sub
out
xor
pop
scas
retw
lods
mov
mov
outsl
push
fldcw
xor
and
or
stc
aaa
or
imul
cmp
push
repnz
mov
subl
cmp
call
sbb
jns
or
sbb
mov
int
pop
negl
in
cmpsb
shlb
movups
inc
outsl
insl
add
xor
jo
mov
test
in
sbb
loop
sbb
fs
mov
sbb
push
adc
aaa
sbb
daa
cli
mov
xchg
pop
fdiv
adc
pop
rcr
cmp
scas
push
cltd
xor
xchg
jg
xlat
div
jo
and
sub
popf
and
xor
adc
rorb
pop
cmp
xor
subb
ss
cmp
mov
ret
push
negb
push
out
jg
adc
mov
inc
mov
adc
and
out
add
xchg
into
mov
js
hlt
mov
jnp
fstps
das
adc
sahf
out
jecxz
cli
das
xor
hlt
sbb
or
out
lock
jnp
push
jnp
sahf
stc
sti
sub
cmpsb
mov
dec
mov
notb
stc
mov
mov
stos
cmp
or
out
jne
movsb
and
cmp
js
jae
insb
cld
divl
scas
punpckhbw
ror
add
lcall
xchg
int3
cs
cltd
pop
xor
push
dec
fdivr
dec
sbb
repz
popf
mov
imul
shlb
fsub
sub
pop
and
testl
adc
aas
clc
or
xor
cmpsl
mov
dec
lock
test
push
push
jecxz
mov
scas
adc
inc
loope
arpl
cltd
es
in
fcomip
push
jne
push
popf
hlt
xchg
mov
es
jo
inc
pop
adc
mov
dec
pop
das
jmp
inc
dec
int
and
cmpsl
sub
push
jg
outsl
mov
jmp
or
jbe
mov
or
ret
or
push
add
insb
add
aas
dec
adc
push
pushf
inc
test
inc
or
adcl
shlb
call
pop
sbb
mov
jns
popl
pop
jns
xor
adc
sahf
mov
push
arpl
mov
outsl
dec
jbe
mov
ret
adc
sahf
in
jmp
ja
jge
jnp
outsb
xor
insl
pop
or
ljmp
pop
dec
movl
addl
mov
mov
ss
fidivl
jno
daa
fwait
iret
das
ret
mov
xchg
test
mov
sti
push
xchg
cmpsb
mov
dec
ss
add
pop
mov
lods
imul
enter
testb
sbb
popf
push
in
jns
in
add
pop
cmpsb
sti
mov
mov
shl
and
xor
std
pop
cmp
mov
pop
sbb
cmp
mov
mov
dec
jne
mov
mov
xchg
xchg
mov
cli
pop
jns
mov
in
rcl
add
ds
ds
fwait
pop
xchg
xor
call
adc
js
push
sub
xchg
inc
dec
sahf
adc
out
fstpl
mov
xor
dec
jae
mov
dec
lock
pop
jl
xchg
xchg
repz
insb
and
xchg
mov
sub
dec
aad
push
cwtl
jle
inc
xor
sub
into
lret
jne
test
pop
jl
mov
mov
push
jge
inc
movsb
mov
in
mov
incb
outsb
outsb
call
imul
pop
sarb
add
xlat
aas
xchg
mov
ds
dec
or
arpl
loop
pop
cmp
xor
int3
mov
xchg
rolb
mov
inc
adc
loop
xchg
or
je
jmp
shll
sub
pop
lahf
and
jne
jge
inc
loop
dec
jo
ljmp
push
inc
fmuls
mov
lods
test
add
sub
cmp
push
je
or
pop
cmpsb
stc
dec
popf
je
ret
mov
loope
repz
inc
imul
add
add
add
pop
sub
push
dec
stos
adc
lds
stos
sub
in
lods
xor
inc
and
adc
mov
in
dec
jae,pn
sbb
int
sti
push
adc
dec
add
xchg
xor
or
mov
cmp
dec
jns
sbb
das
push
aas
or
dec
clc
fildl
arpl
mov
xchg
lods
outsb
push
in
outsb
mov
jne
les
pop
outsl
sarl
adc
cmp
xor
scas
or
xor
in
clc
cmpsb
in
add
fistps
popf
sahf
loopne
rcl
jnp
into
sub
dec
addr16
jl
xchg
sub
ret
adc
stc
adc
pop
outsl
aas
ss
out
jae
push
sbb
mov
jle
cmp
push
scas
mov
lock
or
sbb
bound
loope
popa
pop
sbbl
lret
pushf
mov
sbb
adc
lcall
dec
into
dec
add
dec
sbb
fwait
cmp
fs
sbb
dec
pusha
scas
push
mov
outsl
and
cmc
mov
cltd
mov
stos
sub
dec
push
cmpsb
sbb
js
adc
das
das
inc
dec
push
outsb
pop
xlat
jbe
xchg
test
pop
lahf
dec
or
mov
int3
or
ds
jg
lock
repnz
sub
pop
clc
int3
and
mov
outsb
and
dec
testl
jg
out
mov
cmp
repnz
jbe
sbb
jle
cs
fwait
jnp
pusha
cmp
or
insb
adc
mov
push
lock
aaa
and
outsl
imul
addr16
mov
push
out
sub
cmp
pushf
fwait
dec
mov
loopne
mov
mov
jnp
subb
rorb
out
and
aad
mov
xor
pop
sbb
add
xchg
das
shrb
lock
mov
ds
xlat
xor
daa
push
stc
add
aaa
pop
push
mov
in
lcall
loopne
mov
mov
shlb
dec
push
movsl
loopne
push
outsl
xorb
into
pop
popl
add
scas
das
mov
push
push
add
mov
test
in
mov
imul
xor
shrb
sub
adc
cs
or
and
popa
sub
scas
dec
stos
pushf
pop
leave
lcall
xchg
inc
fstp
sbb
es
subl
add
cmp
insb
es
mov
sbb
jbe
movsb
mov
push
dec
decl
std
or
mov
mov
inc
shr
leave
lret
lds
adc
mov
cwtl
out
xchg
sbb
jbe
inc
iret
or
cmpsl
xor
xchg
out
jns
fucom
outsl
mov
test
jmp
push
push
sbb
xchg
push
popa
inc
mov
incb
lock
fs
dec
clc
cltd
add
push
test
andb
push
mov
mov
jbe
jmp
mov
stos
out
scas
cmpsb
xchg
es
adc
dec
fcomps
test
inc
push
mov
fcomps
in
and
cli
add
mov
mov
push
pop
mov
inc
insl
loop
xchg
pop
dec
cmp
add
or
rorb
shlb
push
jbe
fs
inc
pop
mov
dec
push
and
sbb
xor
mov
mov
sbb
adc
push
hlt
loope
xor
imul
jo
and
scas
fnsave
or
cmp
push
jnp
jmp
jmp
aam
pop
out
sub
lret
xchg
jnp
sbb
push
subl
loopne
cmp
test
pop
jmp
pop
jne
dec
pop
sbb
push
xchg
cld
jp
ss
mov
mov
dec
subl
jp
add
lds
loope
push
in
dec
push
or
xor
std
xchg
cmp
test
lcall
ljmp
fisubrs
in
loope
adc
and
pop
scas
shlb
cmpsl
cmpsl
adc
and
and
lods
jns
movsl
pop
jle
outsb
xchg
jns
mov
dec
add
nop
int
push
mov
mov
sub
repz
sti
push
push
das
pusha
cmp
xor
imul
negl
mov
pop
std
shlb
add
add
adc
or
mov
mov
div
sub
lods
rclw
jl
push
test
mov
pop
inc
inc
mov
bound
dec
ficoms
or
outsl
fbld
xor
sub
adc
pushf
inc
mov
or
mov
mov
xchg
les
mov
int3
inc
lds
or
frstor
mov
jb
test
or
sbb
mov
arpl
xrelease
cmp
mov
das
xor
sbb
movsb
sub
int3
add
xchg
sbb
xor
and
cld
in
das
jl
cwtl
sbb
dec
mov
cmp
push
fisttpl
pushl
bound
fsubrl
aam
andl
out
inc
and
insb
jns
fwait
cmp
into
xor
inc
jae
push
aaa
popf
xlat
push
mov
xchg
mov
out
push
arpl
ret
loop
mov
mov
in
mov
and
adc
ficoms
dec
nop
fsub
cld
clc
fists
cmp
cmp
mov
mov
push
add
cmp
or
dec
add
aas
dec
lock
jp
cli
pop
mov
cmp
insb
inc
int
mov
imul
push
pop
mov
lds
stos
enter
enter
das
xchg
and
pushf
stos
dec
imul
shlb
sub
stos
mov
or
dec
or
jg
ljmp
int
jno
imulb
inc
jb
cltd
jne
mov
sub
inc
mov
push
dec
das
je
add
inc
mov
rorb
js
jp
push
xchg
imul
pop
cld
mov
insl
ja
out
mov
scas
xchg
out
inc
mov
sbb
cmp
dec
push
sbb
xchg
test
cmp
or
lea
sub
ret
sbb
fidivl
enter
mov
push
pop
in
vpshab
sbb
aam
ljmp
jne
jge
out
jbe
xor
pop
sar
xchg
imul
mov
dec
lds
dec
sub
scas
aas
dec
adc
mov
jmp
nop
insl
lahf
es
mov
pop
in
or
inc
inc
imul
fadd
popf
pop
and
cmp
pop
cmpsb
cs
mov
cli
sbb
ljmp
jg
mov
cltd
mov
lods
mov
out
popa
or
sti
mov
jl
cwtl
push
faddp
out
dec
push
leave
ret
xor
add
sub
sahf
out
rcrb
aas
enter
or
std
add
xor
push
shl
sub
mov
loop
inc
dec
mov
popf
insb
xlat
pop
and
adc
test
pop
nop
sahf
adc
mov
mov
ljmp
mov
pop
inc
call
pop
scas
enter
pop
scas
bsf
sub
add
xchg
jl
sbb
in
negb
jmp
xchg
test
and
test
mov
rorl
push
mov
xlat
xor
cld
pop
aaa
pusha
mov
cmp
idiv
fsubl
inc
dec
enter
add
push
mov
fwait
sahf
push
sub
xchg
cmc
mov
out
stos
cmp
rcll
test
lea
ret
je
xchg
jb
in
loope
fcmovu
add
dec
int
loop
cld
mov
paddsw
mov
jp
jne
mov
pushf
and
loopne
pop
push
jmp
and
inc
adc
mov
push
sbb
mov
popf
rclb
clc
lock
pushf
in
mov
fnstsw
mov
jo
sub
push
shlb
mov
inc
out
cltd
insl
mov
xor
movsb
daa
stc
mov
adc
xchg
push
jno
aas
outsl
js
or
adc
push
mov
sub
outsl
rolb
fwait
lock
push
xor
inc
fcompl
push
ret
pop
sub
out
push
mov
mov
lods
cmp
mov
sbb
std
loopne
adc
fmull
test
gs
jbe
jmp
aas
mov
push
xchg
jno
push
scas
rol
rcrl
adc
mov
push
cli
clc
mov
xchg
push
scas
movsl
test
js
mov
fldt
enter
sbb
mov
lahf
pop
push
pushf
push
ja
push
dec
shr
jg
push
mov
enter
add
clc
add
add
jecxz
inc
sbb
inc
daa
add
push
mov
bound
pop
push
std
and
inc
popa
in
jg
cmp
dec
lds
in
movsb
add
xchg
inc
lea
in
xchg
xor
xor
in
adc
sbb
ret
adc
mov
push
add
sub
fildl
movsb
das
lods
pop
xchg
sbb
mov
and
cmp
adc
jl
push
insb
hlt
jnp
adc
mov
cmp
dec
cli
jmp
push
js
mov
push
mov
mov
sub
jbe
jmp
lcall
aaa
dec
movsb
dec
mov
popa
sub
xchg
and
or
dec
and
fnstsw
xchg
push
rcr
incb
jmp
shlb
stos
jae
icebp
mov
cmp
mov
cmp
mov
out
ja
or
loopne
loopne
mov
xor
mulb
add
mov
arpl
xchg
sub
fbstp
adc
iret
jne
repnz
jno
sbbb
pop
push
and
out
arpl
test
or
push
daa
popf
cmp
adc
pop
add
xor
mov
push
mov
mov
pop
dec
cmp
insb
insl
push
xchg
hlt
mov
leave
push
aam
mov
fiaddl
shrl
cli
xorb
pop
and
sbb
push
es
cmpsb
in
inc
das
sbb
popa
sahf
fs
adc
ss
sub
mov
and
int3
push
cmp
int3
adc
cli
test
pop
int3
xchg
into
cmc
loop
cli
loopne
mov
rclb
dec
add
or
sub
push
cmp
mov
inc
mov
jg
aad
stos
ret
test
sbb
xor
out
lock
dec
or
movsl
pop
adc
sbb
loop
mov
mov
imul
and
adc
mov
cmpsl
mov
jl
mov
rcr
fs
sar
pop
out
lret
xor
fwait
mov
cmp
into
cmp
les
pop
std
mov
cmpb
daa
pop
cli
mov
adcl
pop
mov
add
mov
mov
jg
add
into
inc
bound
and
out
ret
sarl
dec
out
lds
ss
push
or
leave
imulb
ret
cmp
push
mov
and
arpl
jge
imul
xor
cmp
mov
addr16
xchg
push
mov
mov
pop
es
inc
and
ret
jno
adc
lods
movsb
les
lods
jecxz
sarb
gs
mov
clc
insb
bnd
cmpsl
outsl
mov
sub
xchg
inc
jmp
fwait
push
xlat
insl
popa
inc
jno
das
sub
add
jae
lock
stos
cmpsl
jbe
jb
outsb
push
sti
cs
movb
clc
mov
addr16
xchg
mov
cli
or
xor
mov
mov
enter
int3
leave
lock
dec
inc
psraw
stos
sbb
pusha
sub
push
cs
cs
daa
out
inc
das
stc
mov
cltd
fstl
dec
insl
xor
std
cmp
xchg
cmp
sbb
pusha
or
lret
rol
dec
add
mov
aas
dec
movsb
lret
or
iret
and
add
jmp
mov
inc
in
sub
adc
jle
xor
lcall
hlt
sbb
push
int3
cmp
mov
ljmp
xchg
pop
mov
into
pop
xlat
int3
pop
cmp
add
ret
add
xorl
repnz
mov
scas
cli
les
sbb
mov
adc
in
jne
or
adc
xchg
test
popf
lahf
lcall
and
sbb
rorl
pop
lea
xchg
mov
ss
cmc
sbb
lea
and
pop
pop
jnp
or
sarb
ret
mov
jle
pop
inc
cmc
shll
pop
shr
jl
mov
or
and
test
and
inc
cltd
or
mov
movsb
pop
mov
mov
xor
push
dec
push
pop
fnstsw
cmp
mov
faddp
xor
push
std
enter
push
rcrb
adc
jle
test
pop
leave
jb
push
jg
pop
sti
jmp
jecxz
inc
aas
or
pop
sub
inc
dec
jle
movsl
push
movsl
shl
divl
sub
add
add
add
mov
xchg
insl
xchg
jle
and
sbb
push
in
leave
lds
adc
dec
xchg
or
adc
sti
xor
mov
mov
pop
out
xorl
out
mov
mov
shll
test
pop
movsb
filds
push
mov
icebp
divb
or
lods
insb
xor
and
jo
jno
jns
xlat
xchg
fmul
lea
arpl
and
xor
cwtl
add
es
mov
push
cs
push
pop
jo
pop
fdivrs
push
pop
test
or
pop
stos
outsl
adc
pop
sti
dec
mov
mov
sahf
mov
pop
inc
std
mov
or
sbb
es
movsl
mov
adcl
push
ficoms
jb
les
xchg
dec
loope
cmpl
ficompl
fidivrl
loope
jg
adc
jge
xor
shlw
xor
sarb
test
gs
nop
data16
insl
push
dec
mov
dec
adc
or
pop
mov
stos
lods
lods
add
jo
fwait
jge
rcrl
jle
mov
fbld
ret
mov
add
jge
das
push
pop
pop
cwtl
xchg
ljmp
sbb
sbb
lds
cmp
stc
dec
out
ss
mov
cmp
mov
and
ss
test
mov
push
cs
insb
lret
das
repnz
rolb
in
nop
lahf
mov
jmp
mov
sub
shll
mov
cmp
xor
jo
mov
jge
cli
xor
cmp
dec
jne
ljmp
lds
imul
into
ja
insb
in
cmc
sbb
out
inc
mov
inc
mov
movl
cld
dec
mov
and
outsb
jle
or
fisttpl
out
jecxz
push
rorl
mov
test
test
dec
pusha
imul
jmp
dec
fs
imul
test
xor
movsl
dec
fwait
sti
js
out
imul
and
cmp
pop
push
pusha
int
xchg
sbb
pop
stos
js
xchg
test
add
int
rcrl
sub
add
mov
inc
aad
cli
xchg
and
adc
jne
push
ficompl
push
pop
sub
jle
xor
xchg
pop
dec
pop
xchg
movsb
jg
gs
mov
outsl
imul
adcl
sub
stos
out
mov
and
sbb
fimuls
mov
shlb
movsl
test
push
int3
loop
ret
xor
push
rcr
aad
dec
mov
sbb
cmpsb
scas
rcll
out
jo
clc
int3
sahf
popa
ds
mov
mov
mov
adc
jae
mov
sub
mov
mov
xor
stc
stos
jge
incl
ror
xchg
mov
xlat
mov
xlat
fwait
je
cmp
mov
push
inc
stos
adc
imul
in
xlat
push
and
data16
or
outsl
lea
push
push
adc
mov
sbb
push
xor
lret
mov
xchg
inc
and
jp
fsubrl
xor
adc
cmp
adc
mov
in
jo
xchg
cmp
popf
in
cmp
out
sub
mov
rorl
cli
aad
cmpsl
ljmp
lea
sbbl
mov
push
mov
jbe
xchg
aas
dec
je
add
ret
add
and
test
ss
sbb
repnz
mov
or
xor
mov
mov
and
jg
mov
ja
xchg
test
lret
dec
push
fwait
pop
xlat
or
out
jp
outsl
insb
lods
inc
test
push
mov
pop
inc
jg
out
fdiv
mov
or
and
sbbl
ds
jns
imul
or
mov
rcll
push
in
sub
outsb
inc
add
mov
lock
mov
call
push
outsl
xlat
lods
ret
test
push
mov
inc
and
mov
mov
cmp
adc
es
cmpsb
btr
int3
mov
out
inc
and
mov
add
mov
dec
sub
push
xlat
outsb
mov
add
stos
or
mov
jne
ja
push
gs
add
add
add
